00000008 <AmiBlitz3.ab3@0> 
00000014 <AmiBlitz3.ab3@43> optimize 5                               ; don't use FPU (opt. 4)
00000076 <AmiBlitz3.ab3@64> !initasm                                 ; some initial mumbo jumbo
000000A0 <AmiBlitz3.ab3@65> !basic
000000AC <AmiBlitz3.ab3@70> cli_verbose = -1
000000B2 <AmiBlitz3.ab3@71> CLIMode     = False
000000C8 <AmiBlitz3.ab3@72> MaxLen cli_tempstr.s = 1024
000000E4 <AmiBlitz3.ab3@73> GetCurrentDirName_ &cli_tempstr,1024  ; get the current dir to restore it on exit
0000010E <AmiBlitz3.ab3@74> cli_path.s = Peek.s(&cli_tempstr)
0000010E <library_offsets.ab3@1> XINCLUDE "/Shared/library_offsets.ab3"   ; needed includes
0000010E <AmiBlitz3.ab3@78> XINCLUDE "/Shared/library_offsets.ab3"   ; needed includes
0000010E <dos.include.ab3@1> XINCLUDE "dos.include.ab3"
0000010E <error.include.ab3@1> XINCLUDE "dos.include.ab3"
00000146 <error.include.ab3@62> XINCLUDE "dos.include.ab3"
0000016E <error.include.ab3@63> XINCLUDE "dos.include.ab3"
00000196 <error.include.ab3@64> XINCLUDE "dos.include.ab3"
000001BE <error.include.ab3@65> XINCLUDE "dos.include.ab3"
000001C4 <error.include.ab3@66> XINCLUDE "dos.include.ab3"
000001F8 <error.include.ab3@67> XINCLUDE "dos.include.ab3"
0000022C <error.include.ab3@68> XINCLUDE "dos.include.ab3"
00000260 <error.include.ab3@69> XINCLUDE "dos.include.ab3"
0000027C <error.include.ab3@73> XINCLUDE "dos.include.ab3"
00000296 <error.include.ab3@99> XINCLUDE "dos.include.ab3"
000002A2 <error.include.ab3@101> XINCLUDE "dos.include.ab3"
000002A6 <error.include.ab3@102> XINCLUDE "dos.include.ab3"
000002B4 <error.include.ab3@104> XINCLUDE "dos.include.ab3"
000002F6 <error.include.ab3@124> XINCLUDE "dos.include.ab3"
0000037A <error.include.ab3@126> XINCLUDE "dos.include.ab3"
000003E6 <error.include.ab3@127> XINCLUDE "dos.include.ab3"
00000400 <error.include.ab3@129> XINCLUDE "dos.include.ab3"
00000438 <error.include.ab3@130> XINCLUDE "dos.include.ab3"
00000498 <error.include.ab3@131> XINCLUDE "dos.include.ab3"
000004A6 <error.include.ab3@133> XINCLUDE "dos.include.ab3"
000004B4 <error.include.ab3@134> XINCLUDE "dos.include.ab3"
000004C2 <error.include.ab3@135> XINCLUDE "dos.include.ab3"
000004D0 <error.include.ab3@136> XINCLUDE "dos.include.ab3"
000004F8 <error.include.ab3@137> XINCLUDE "dos.include.ab3"
00000506 <error.include.ab3@138> XINCLUDE "dos.include.ab3"
0000050E <error.include.ab3@139> XINCLUDE "dos.include.ab3"
00000540 <error.include.ab3@141> XINCLUDE "dos.include.ab3"
0000055A <error.include.ab3@146> XINCLUDE "dos.include.ab3"
00000592 <error.include.ab3@147> XINCLUDE "dos.include.ab3"
00000598 <error.include.ab3@148> XINCLUDE "dos.include.ab3"
000005DC <error.include.ab3@149> XINCLUDE "dos.include.ab3"
00000624 <error.include.ab3@150> XINCLUDE "dos.include.ab3"
0000062E <error.include.ab3@154> XINCLUDE "dos.include.ab3"
00000648 <error.include.ab3@156> XINCLUDE "dos.include.ab3"
00000692 <error.include.ab3@195> XINCLUDE "dos.include.ab3"
0000069A <error.include.ab3@197> XINCLUDE "dos.include.ab3"
00000706 <error.include.ab3@198> XINCLUDE "dos.include.ab3"
00000728 <error.include.ab3@199> XINCLUDE "dos.include.ab3"
00000788 <error.include.ab3@200> XINCLUDE "dos.include.ab3"
00000796 <error.include.ab3@202> XINCLUDE "dos.include.ab3"
000007A4 <error.include.ab3@203> XINCLUDE "dos.include.ab3"
000007B2 <error.include.ab3@204> XINCLUDE "dos.include.ab3"
000007C0 <error.include.ab3@205> XINCLUDE "dos.include.ab3"
00000820 <error.include.ab3@206> XINCLUDE "dos.include.ab3"
0000082E <error.include.ab3@207> XINCLUDE "dos.include.ab3"
00000864 <error.include.ab3@210> XINCLUDE "dos.include.ab3"
0000086E <error.include.ab3@214> XINCLUDE "dos.include.ab3"
0000088A <error.include.ab3@215> XINCLUDE "dos.include.ab3"
0000088A <multilist.include.ab3@1> XINCLUDE "dos.include.ab3"
0000088A <strptr.include.ab3@1> XINCLUDE "dos.include.ab3"
0000088A <useful.include.ab3@1> XINCLUDE "dos.include.ab3"
000008B8 <useful.include.ab3@283> XINCLUDE "dos.include.ab3"
000008C2 <useful.include.ab3@284> XINCLUDE "dos.include.ab3"
000008D6 <useful.include.ab3@285> XINCLUDE "dos.include.ab3"
000008DE <useful.include.ab3@286> XINCLUDE "dos.include.ab3"
00000906 <useful.include.ab3@287> XINCLUDE "dos.include.ab3"
0000092C <useful.include.ab3@288> XINCLUDE "dos.include.ab3"
0000094C <useful.include.ab3@291> XINCLUDE "dos.include.ab3"
0000095A <useful.include.ab3@292> XINCLUDE "dos.include.ab3"
00000980 <useful.include.ab3@293> XINCLUDE "dos.include.ab3"
00000988 <useful.include.ab3@295> XINCLUDE "dos.include.ab3"
00000990 <useful.include.ab3@296> XINCLUDE "dos.include.ab3"
00000996 <useful.include.ab3@297> XINCLUDE "dos.include.ab3"
000009B2 <useful.include.ab3@298> XINCLUDE "dos.include.ab3"
000009D6 <useful.include.ab3@299> XINCLUDE "dos.include.ab3"
000009EA <useful.include.ab3@300> XINCLUDE "dos.include.ab3"
000009F0 <useful.include.ab3@301> XINCLUDE "dos.include.ab3"
00000A3A <useful.include.ab3@302> XINCLUDE "dos.include.ab3"
00000A3C <useful.include.ab3@303> XINCLUDE "dos.include.ab3"
00000A4A <useful.include.ab3@305> XINCLUDE "dos.include.ab3"
00000A6A <useful.include.ab3@307> XINCLUDE "dos.include.ab3"
00000AC8 <useful.include.ab3@308> XINCLUDE "dos.include.ab3"
00000ACE <useful.include.ab3@309> XINCLUDE "dos.include.ab3"
00000ADC <useful.include.ab3@310> XINCLUDE "dos.include.ab3"
00000AF0 <useful.include.ab3@311> XINCLUDE "dos.include.ab3"
00000B02 <useful.include.ab3@312> XINCLUDE "dos.include.ab3"
00000B10 <useful.include.ab3@313> XINCLUDE "dos.include.ab3"
00000B16 <useful.include.ab3@314> XINCLUDE "dos.include.ab3"
00000B22 <useful.include.ab3@315> XINCLUDE "dos.include.ab3"
00000B36 <useful.include.ab3@318> XINCLUDE "dos.include.ab3"
00000B4A <useful.include.ab3@319> XINCLUDE "dos.include.ab3"
00000B5C <useful.include.ab3@320> XINCLUDE "dos.include.ab3"
00000B6A <useful.include.ab3@321> XINCLUDE "dos.include.ab3"
00000B88 <useful.include.ab3@322> XINCLUDE "dos.include.ab3"
00000B8E <useful.include.ab3@323> XINCLUDE "dos.include.ab3"
00000BA2 <useful.include.ab3@327> XINCLUDE "dos.include.ab3"
00000BAC <useful.include.ab3@328> XINCLUDE "dos.include.ab3"
00000BB4 <useful.include.ab3@329> XINCLUDE "dos.include.ab3"
00000BD2 <useful.include.ab3@330> XINCLUDE "dos.include.ab3"
00000BD8 <useful.include.ab3@331> XINCLUDE "dos.include.ab3"
00000C04 <useful.include.ab3@332> XINCLUDE "dos.include.ab3"
00000C0A <useful.include.ab3@334> XINCLUDE "dos.include.ab3"
00000C1C <useful.include.ab3@335> XINCLUDE "dos.include.ab3"
00000C34 <useful.include.ab3@336> XINCLUDE "dos.include.ab3"
00000C4C <useful.include.ab3@337> XINCLUDE "dos.include.ab3"
00000C6A <useful.include.ab3@338> XINCLUDE "dos.include.ab3"
00000C6C <useful.include.ab3@340> XINCLUDE "dos.include.ab3"
00000C7A <useful.include.ab3@341> XINCLUDE "dos.include.ab3"
00000CA0 <useful.include.ab3@342> XINCLUDE "dos.include.ab3"
00000D34 <useful.include.ab3@343> XINCLUDE "dos.include.ab3"
00000D42 <useful.include.ab3@345> XINCLUDE "dos.include.ab3"
00000D48 <useful.include.ab3@346> XINCLUDE "dos.include.ab3"
00000D72 <useful.include.ab3@347> XINCLUDE "dos.include.ab3"
00000D90 <useful.include.ab3@348> XINCLUDE "dos.include.ab3"
00000D90 <strptr.include.ab3@37> XINCLUDE "dos.include.ab3"
00000DAA <strptr.include.ab3@96> XINCLUDE "dos.include.ab3"
00000DB4 <strptr.include.ab3@97> XINCLUDE "dos.include.ab3"
00000DFC <strptr.include.ab3@98> XINCLUDE "dos.include.ab3"
00000E00 <strptr.include.ab3@100> XINCLUDE "dos.include.ab3"
00000E2E <strptr.include.ab3@197> XINCLUDE "dos.include.ab3"
00000E38 <strptr.include.ab3@198> XINCLUDE "dos.include.ab3"
00000E80 <strptr.include.ab3@199> XINCLUDE "dos.include.ab3"
00000E94 <strptr.include.ab3@200> XINCLUDE "dos.include.ab3"
00000EA6 <strptr.include.ab3@201> XINCLUDE "dos.include.ab3"
00000ECA <strptr.include.ab3@205> XINCLUDE "dos.include.ab3"
00000ED4 <strptr.include.ab3@208> XINCLUDE "dos.include.ab3"
00000EE2 <strptr.include.ab3@209> XINCLUDE "dos.include.ab3"
00000EEC <strptr.include.ab3@210> XINCLUDE "dos.include.ab3"
00000F14 <strptr.include.ab3@211> XINCLUDE "dos.include.ab3"
00000F2E <strptr.include.ab3@212> XINCLUDE "dos.include.ab3"
00000F46 <strptr.include.ab3@216> XINCLUDE "dos.include.ab3"
00000F60 <strptr.include.ab3@282> XINCLUDE "dos.include.ab3"
00000F6A <strptr.include.ab3@283> XINCLUDE "dos.include.ab3"
00000F78 <strptr.include.ab3@284> XINCLUDE "dos.include.ab3"
00000FAA <strptr.include.ab3@285> XINCLUDE "dos.include.ab3"
00000FC8 <strptr.include.ab3@287> XINCLUDE "dos.include.ab3"
00000FD2 <strptr.include.ab3@288> XINCLUDE "dos.include.ab3"
00000FD2 <multilist.include.ab3@44> XINCLUDE "dos.include.ab3"
00000FE8 <multilist.include.ab3@61> XINCLUDE "dos.include.ab3"
00001002 <multilist.include.ab3@406> XINCLUDE "dos.include.ab3"
0000100C <multilist.include.ab3@407> XINCLUDE "dos.include.ab3"
0000102E <multilist.include.ab3@408> XINCLUDE "dos.include.ab3"
00001052 <multilist.include.ab3@409> XINCLUDE "dos.include.ab3"
00001064 <multilist.include.ab3@410> XINCLUDE "dos.include.ab3"
0000107C <multilist.include.ab3@411> XINCLUDE "dos.include.ab3"
00001090 <multilist.include.ab3@412> XINCLUDE "dos.include.ab3"
000010A2 <multilist.include.ab3@415> XINCLUDE "dos.include.ab3"
000010B2 <multilist.include.ab3@416> XINCLUDE "dos.include.ab3"
000010B8 <multilist.include.ab3@417> XINCLUDE "dos.include.ab3"
000010C8 <multilist.include.ab3@418> XINCLUDE "dos.include.ab3"
000010D8 <multilist.include.ab3@419> XINCLUDE "dos.include.ab3"
000010F2 <multilist.include.ab3@420> XINCLUDE "dos.include.ab3"
000010F6 <multilist.include.ab3@422> XINCLUDE "dos.include.ab3"
00001110 <multilist.include.ab3@585> XINCLUDE "dos.include.ab3"
00001140 <multilist.include.ab3@586> XINCLUDE "dos.include.ab3"
0000114A <multilist.include.ab3@588> XINCLUDE "dos.include.ab3"
00001154 <multilist.include.ab3@589> XINCLUDE "dos.include.ab3"
00001176 <multilist.include.ab3@590> XINCLUDE "dos.include.ab3"
0000119A <multilist.include.ab3@591> XINCLUDE "dos.include.ab3"
000011AC <multilist.include.ab3@592> XINCLUDE "dos.include.ab3"
000011C4 <multilist.include.ab3@593> XINCLUDE "dos.include.ab3"
000011D8 <multilist.include.ab3@594> XINCLUDE "dos.include.ab3"
000011EA <multilist.include.ab3@597> XINCLUDE "dos.include.ab3"
000011FA <multilist.include.ab3@598> XINCLUDE "dos.include.ab3"
00001200 <multilist.include.ab3@599> XINCLUDE "dos.include.ab3"
00001210 <multilist.include.ab3@600> XINCLUDE "dos.include.ab3"
00001220 <multilist.include.ab3@601> XINCLUDE "dos.include.ab3"
0000123A <multilist.include.ab3@602> XINCLUDE "dos.include.ab3"
00001240 <multilist.include.ab3@603> XINCLUDE "dos.include.ab3"
00001246 <multilist.include.ab3@604> XINCLUDE "dos.include.ab3"
0000124A <multilist.include.ab3@605> XINCLUDE "dos.include.ab3"
00001264 <multilist.include.ab3@713> XINCLUDE "dos.include.ab3"
0000126C <multilist.include.ab3@714> XINCLUDE "dos.include.ab3"
00001276 <multilist.include.ab3@715> XINCLUDE "dos.include.ab3"
0000128C <multilist.include.ab3@716> XINCLUDE "dos.include.ab3"
000012A0 <multilist.include.ab3@717> XINCLUDE "dos.include.ab3"
000012C4 <multilist.include.ab3@718> XINCLUDE "dos.include.ab3"
000012D2 <multilist.include.ab3@721> XINCLUDE "dos.include.ab3"
000012DC <multilist.include.ab3@722> XINCLUDE "dos.include.ab3"
000012E2 <multilist.include.ab3@723> XINCLUDE "dos.include.ab3"
000012EC <multilist.include.ab3@724> XINCLUDE "dos.include.ab3"
000012F2 <multilist.include.ab3@725> XINCLUDE "dos.include.ab3"
00001310 <multilist.include.ab3@742> XINCLUDE "dos.include.ab3"
00001318 <multilist.include.ab3@743> XINCLUDE "dos.include.ab3"
00001322 <multilist.include.ab3@744> XINCLUDE "dos.include.ab3"
00001340 <multilist.include.ab3@745> XINCLUDE "dos.include.ab3"
00001356 <multilist.include.ab3@746> XINCLUDE "dos.include.ab3"
0000136A <multilist.include.ab3@747> XINCLUDE "dos.include.ab3"
0000139E <multilist.include.ab3@748> XINCLUDE "dos.include.ab3"
000013AC <multilist.include.ab3@751> XINCLUDE "dos.include.ab3"
000013B6 <multilist.include.ab3@752> XINCLUDE "dos.include.ab3"
000013BC <multilist.include.ab3@753> XINCLUDE "dos.include.ab3"
000013C6 <multilist.include.ab3@754> XINCLUDE "dos.include.ab3"
000013CA <multilist.include.ab3@756> XINCLUDE "dos.include.ab3"
000013D0 <multilist.include.ab3@757> XINCLUDE "dos.include.ab3"
000013EA <multilist.include.ab3@795> XINCLUDE "dos.include.ab3"
000013F4 <multilist.include.ab3@796> XINCLUDE "dos.include.ab3"
000013FE <multilist.include.ab3@797> XINCLUDE "dos.include.ab3"
00001414 <multilist.include.ab3@798> XINCLUDE "dos.include.ab3"
00001424 <multilist.include.ab3@799> XINCLUDE "dos.include.ab3"
0000142E <multilist.include.ab3@801> XINCLUDE "dos.include.ab3"
00001434 <multilist.include.ab3@802> XINCLUDE "dos.include.ab3"
00001438 <multilist.include.ab3@803> XINCLUDE "dos.include.ab3"
0000145A <multilist.include.ab3@821> XINCLUDE "dos.include.ab3"
00001462 <multilist.include.ab3@822> XINCLUDE "dos.include.ab3"
0000147C <multilist.include.ab3@823> XINCLUDE "dos.include.ab3"
00001486 <multilist.include.ab3@824> XINCLUDE "dos.include.ab3"
0000149C <multilist.include.ab3@825> XINCLUDE "dos.include.ab3"
000014B0 <multilist.include.ab3@826> XINCLUDE "dos.include.ab3"
00001506 <multilist.include.ab3@827> XINCLUDE "dos.include.ab3"
00001540 <multilist.include.ab3@828> XINCLUDE "dos.include.ab3"
00001552 <multilist.include.ab3@829> XINCLUDE "dos.include.ab3"
00001574 <multilist.include.ab3@830> XINCLUDE "dos.include.ab3"
0000157A <multilist.include.ab3@831> XINCLUDE "dos.include.ab3"
000015D0 <multilist.include.ab3@832> XINCLUDE "dos.include.ab3"
0000160A <multilist.include.ab3@833> XINCLUDE "dos.include.ab3"
00001610 <multilist.include.ab3@835> XINCLUDE "dos.include.ab3"
0000164A <multilist.include.ab3@836> XINCLUDE "dos.include.ab3"
00001684 <multilist.include.ab3@837> XINCLUDE "dos.include.ab3"
00001696 <multilist.include.ab3@839> XINCLUDE "dos.include.ab3"
000016A0 <multilist.include.ab3@840> XINCLUDE "dos.include.ab3"
000016A6 <multilist.include.ab3@841> XINCLUDE "dos.include.ab3"
000016B0 <multilist.include.ab3@842> XINCLUDE "dos.include.ab3"
000016C4 <multilist.include.ab3@843> XINCLUDE "dos.include.ab3"
0000170A <multilist.include.ab3@870> XINCLUDE "dos.include.ab3"
00001712 <multilist.include.ab3@871> XINCLUDE "dos.include.ab3"
00001730 <multilist.include.ab3@872> XINCLUDE "dos.include.ab3"
0000175C <multilist.include.ab3@873> XINCLUDE "dos.include.ab3"
0000177A <multilist.include.ab3@874> XINCLUDE "dos.include.ab3"
00001794 <multilist.include.ab3@875> XINCLUDE "dos.include.ab3"
000017AE <multilist.include.ab3@876> XINCLUDE "dos.include.ab3"
00001830 <multilist.include.ab3@877> XINCLUDE "dos.include.ab3"
00001844 <multilist.include.ab3@879> XINCLUDE "dos.include.ab3"
0000185C <multilist.include.ab3@880> XINCLUDE "dos.include.ab3"
00001862 <multilist.include.ab3@881> XINCLUDE "dos.include.ab3"
0000187A <multilist.include.ab3@882> XINCLUDE "dos.include.ab3"
00001890 <multilist.include.ab3@884> XINCLUDE "dos.include.ab3"
000018AA <multilist.include.ab3@886> XINCLUDE "dos.include.ab3"
000018BE <multilist.include.ab3@887> XINCLUDE "dos.include.ab3"
000018CC <multilist.include.ab3@888> XINCLUDE "dos.include.ab3"
00001922 <multilist.include.ab3@889> XINCLUDE "dos.include.ab3"
00001958 <multilist.include.ab3@890> XINCLUDE "dos.include.ab3"
00001988 <multilist.include.ab3@891> XINCLUDE "dos.include.ab3"
00001A10 <multilist.include.ab3@893> XINCLUDE "dos.include.ab3"
00001A16 <multilist.include.ab3@894> XINCLUDE "dos.include.ab3"
00001A24 <multilist.include.ab3@895> XINCLUDE "dos.include.ab3"
00001A7A <multilist.include.ab3@896> XINCLUDE "dos.include.ab3"
00001AB0 <multilist.include.ab3@897> XINCLUDE "dos.include.ab3"
00001AE0 <multilist.include.ab3@898> XINCLUDE "dos.include.ab3"
00001AE6 <multilist.include.ab3@901> XINCLUDE "dos.include.ab3"
00001B00 <multilist.include.ab3@902> XINCLUDE "dos.include.ab3"
00001B0E <multilist.include.ab3@903> XINCLUDE "dos.include.ab3"
00001B48 <multilist.include.ab3@904> XINCLUDE "dos.include.ab3"
00001B7E <multilist.include.ab3@905> XINCLUDE "dos.include.ab3"
00001BAE <multilist.include.ab3@906> XINCLUDE "dos.include.ab3"
00001BBC <multilist.include.ab3@909> XINCLUDE "dos.include.ab3"
00001BC6 <multilist.include.ab3@910> XINCLUDE "dos.include.ab3"
00001BCC <multilist.include.ab3@911> XINCLUDE "dos.include.ab3"
00001BD6 <multilist.include.ab3@912> XINCLUDE "dos.include.ab3"
00001BEA <multilist.include.ab3@913> XINCLUDE "dos.include.ab3"
00001BEA <dos.include.ab3@57> XINCLUDE "dos.include.ab3"
00001BEA <wbstart.include.ab3@1> XINCLUDE "dos.include.ab3"
00001C00 <wbstart.include.ab3@58> XINCLUDE "dos.include.ab3"
00001C0A <wbstart.include.ab3@59> XINCLUDE "dos.include.ab3"
00001C22 <wbstart.include.ab3@61> XINCLUDE "dos.include.ab3"
00001C24 <wbstart.include.ab3@63> XINCLUDE "dos.include.ab3"
00001C52 <wbstart.include.ab3@64> XINCLUDE "dos.include.ab3"
00001C52 <dos.include.ab3@59> XINCLUDE "dos.include.ab3"
00001C68 <dos.include.ab3@61> XINCLUDE "dos.include.ab3"
00001C70 <dos.include.ab3@79> XINCLUDE "dos.include.ab3"
00001C78 <dos.include.ab3@80> XINCLUDE "dos.include.ab3"
00001CA0 <dos.include.ab3@81> XINCLUDE "dos.include.ab3"
00001CA8 <dos.include.ab3@82> XINCLUDE "dos.include.ab3"
00001CD0 <dos.include.ab3@83> XINCLUDE "dos.include.ab3"
00001CF8 <dos.include.ab3@84> XINCLUDE "dos.include.ab3"
00001D20 <dos.include.ab3@85> XINCLUDE "dos.include.ab3"
00001D28 <dos.include.ab3@86> XINCLUDE "dos.include.ab3"
00001D30 <dos.include.ab3@87> XINCLUDE "dos.include.ab3"
00001D38 <dos.include.ab3@88> XINCLUDE "dos.include.ab3"
00001D40 <dos.include.ab3@89> XINCLUDE "dos.include.ab3"
00001D48 <dos.include.ab3@90> XINCLUDE "dos.include.ab3"
00001D50 <dos.include.ab3@91> XINCLUDE "dos.include.ab3"
00001D58 <dos.include.ab3@92> XINCLUDE "dos.include.ab3"
00001D60 <dos.include.ab3@93> XINCLUDE "dos.include.ab3"
00001D68 <dos.include.ab3@94> XINCLUDE "dos.include.ab3"
00001D88 <dos.include.ab3@95> XINCLUDE "dos.include.ab3"
00001D90 <dos.include.ab3@96> XINCLUDE "dos.include.ab3"
00001D98 <dos.include.ab3@97> XINCLUDE "dos.include.ab3"
00001DC0 <dos.include.ab3@99> XINCLUDE "dos.include.ab3"
00001DD6 <dos.include.ab3@130> XINCLUDE "dos.include.ab3"
00001DE2 <dos.include.ab3@131> XINCLUDE "dos.include.ab3"
00001DE6 <dos.include.ab3@132> XINCLUDE "dos.include.ab3"
00001DFC <dos.include.ab3@145> XINCLUDE "dos.include.ab3"
00001E16 <dos.include.ab3@146> XINCLUDE "dos.include.ab3"
00001E2C <dos.include.ab3@147> XINCLUDE "dos.include.ab3"
00001E56 <dos.include.ab3@148> XINCLUDE "dos.include.ab3"
00001E60 <dos.include.ab3@149> XINCLUDE "dos.include.ab3"
00001E66 <dos.include.ab3@150> XINCLUDE "dos.include.ab3"
00001E7C <dos.include.ab3@163> XINCLUDE "dos.include.ab3"
00001E96 <dos.include.ab3@164> XINCLUDE "dos.include.ab3"
00001EAC <dos.include.ab3@165> XINCLUDE "dos.include.ab3"
00001ED6 <dos.include.ab3@166> XINCLUDE "dos.include.ab3"
00001EE0 <dos.include.ab3@167> XINCLUDE "dos.include.ab3"
00001EE6 <dos.include.ab3@168> XINCLUDE "dos.include.ab3"
00001F10 <dos.include.ab3@184> XINCLUDE "dos.include.ab3"
00001F1C <dos.include.ab3@185> XINCLUDE "dos.include.ab3"
00001F3C <dos.include.ab3@186> XINCLUDE "dos.include.ab3"
00001F46 <dos.include.ab3@187> XINCLUDE "dos.include.ab3"
00001F56 <dos.include.ab3@188> XINCLUDE "dos.include.ab3"
00001F66 <dos.include.ab3@189> XINCLUDE "dos.include.ab3"
00001F70 <dos.include.ab3@191> XINCLUDE "dos.include.ab3"
00001F8A <dos.include.ab3@192> XINCLUDE "dos.include.ab3"
00001FA0 <dos.include.ab3@430> XINCLUDE "dos.include.ab3"
00001FB2 <dos.include.ab3@432> XINCLUDE "dos.include.ab3"
0000202C <dos.include.ab3@433> XINCLUDE "dos.include.ab3"
00002056 <dos.include.ab3@434> XINCLUDE "dos.include.ab3"
0000206E <dos.include.ab3@435> XINCLUDE "dos.include.ab3"
00002084 <dos.include.ab3@461> XINCLUDE "dos.include.ab3"
00002096 <dos.include.ab3@462> XINCLUDE "dos.include.ab3"
0000209A <dos.include.ab3@463> XINCLUDE "dos.include.ab3"
000020B0 <dos.include.ab3@479> XINCLUDE "dos.include.ab3"
000020B2 <dos.include.ab3@480> XINCLUDE "dos.include.ab3"
000020EC <dos.include.ab3@541> XINCLUDE "dos.include.ab3"
00002120 <dos.include.ab3@543> XINCLUDE "dos.include.ab3"
00002146 <dos.include.ab3@544> XINCLUDE "dos.include.ab3"
00002166 <dos.include.ab3@545> XINCLUDE "dos.include.ab3"
00002186 <dos.include.ab3@546> XINCLUDE "dos.include.ab3"
000021B0 <dos.include.ab3@549> XINCLUDE "dos.include.ab3"
000021FC <dos.include.ab3@551> XINCLUDE "dos.include.ab3"
0000220E <dos.include.ab3@552> XINCLUDE "dos.include.ab3"
0000225E <dos.include.ab3@553> XINCLUDE "dos.include.ab3"
00002288 <dos.include.ab3@556> XINCLUDE "dos.include.ab3"
000022A6 <dos.include.ab3@558> XINCLUDE "dos.include.ab3"
000022D0 <dos.include.ab3@674> XINCLUDE "dos.include.ab3"
000022E6 <dos.include.ab3@675> XINCLUDE "dos.include.ab3"
000022F0 <dos.include.ab3@676> XINCLUDE "dos.include.ab3"
00002318 <dos.include.ab3@677> XINCLUDE "dos.include.ab3"
0000231E <dos.include.ab3@678> XINCLUDE "dos.include.ab3"
00002346 <dos.include.ab3@679> XINCLUDE "dos.include.ab3"
00002370 <dos.include.ab3@681> XINCLUDE "dos.include.ab3"
0000238E <dos.include.ab3@682> XINCLUDE "dos.include.ab3"
000023B8 <dos.include.ab3@705> XINCLUDE "dos.include.ab3"
00002428 <dos.include.ab3@706> XINCLUDE "dos.include.ab3"
00002452 <dos.include.ab3@707> XINCLUDE "dos.include.ab3"
00002470 <dos.include.ab3@708> XINCLUDE "dos.include.ab3"
0000249A <dos.include.ab3@743> XINCLUDE "dos.include.ab3"
000024BA <dos.include.ab3@744> XINCLUDE "dos.include.ab3"
000024E6 <dos.include.ab3@745> XINCLUDE "dos.include.ab3"
000024F0 <dos.include.ab3@746> XINCLUDE "dos.include.ab3"
0000250A <dos.include.ab3@747> XINCLUDE "dos.include.ab3"
00002534 <dos.include.ab3@894> XINCLUDE "dos.include.ab3"
000025E2 <dos.include.ab3@895> XINCLUDE "dos.include.ab3"
000025F8 <dos.include.ab3@896> XINCLUDE "dos.include.ab3"
00002602 <dos.include.ab3@897> XINCLUDE "dos.include.ab3"
0000262A <dos.include.ab3@898> XINCLUDE "dos.include.ab3"
00002634 <dos.include.ab3@899> XINCLUDE "dos.include.ab3"
0000263A <dos.include.ab3@900> XINCLUDE "dos.include.ab3"
00002640 <dos.include.ab3@901> XINCLUDE "dos.include.ab3"
00002646 <dos.include.ab3@902> XINCLUDE "dos.include.ab3"
00002658 <dos.include.ab3@904> XINCLUDE "dos.include.ab3"
00002662 <dos.include.ab3@906> XINCLUDE "dos.include.ab3"
0000267C <dos.include.ab3@907> XINCLUDE "dos.include.ab3"
000026BA <dos.include.ab3@928> XINCLUDE "dos.include.ab3"
000026C2 <dos.include.ab3@929> XINCLUDE "dos.include.ab3"
00002770 <dos.include.ab3@930> XINCLUDE "dos.include.ab3"
00002784 <dos.include.ab3@931> XINCLUDE "dos.include.ab3"
000027C6 <dos.include.ab3@932> XINCLUDE "dos.include.ab3"
000027E6 <dos.include.ab3@934> XINCLUDE "dos.include.ab3"
000027F0 <dos.include.ab3@935> XINCLUDE "dos.include.ab3"
0000280C <dos.include.ab3@936> XINCLUDE "dos.include.ab3"
00002846 <dos.include.ab3@988> XINCLUDE "dos.include.ab3"
0000284E <dos.include.ab3@989> XINCLUDE "dos.include.ab3"
000028FC <dos.include.ab3@990> XINCLUDE "dos.include.ab3"
00002932 <dos.include.ab3@991> XINCLUDE "dos.include.ab3"
00002952 <dos.include.ab3@992> XINCLUDE "dos.include.ab3"
00002970 <dos.include.ab3@993> XINCLUDE "dos.include.ab3"
00002994 <dos.include.ab3@994> XINCLUDE "dos.include.ab3"
0000299E <dos.include.ab3@996> XINCLUDE "dos.include.ab3"
000029BA <dos.include.ab3@997> XINCLUDE "dos.include.ab3"
000029F4 <dos.include.ab3@1014> XINCLUDE "dos.include.ab3"
00002AA2 <dos.include.ab3@1015> XINCLUDE "dos.include.ab3"
00002ADA <dos.include.ab3@1016> XINCLUDE "dos.include.ab3"
00002AFA <dos.include.ab3@1017> XINCLUDE "dos.include.ab3"
00002B00 <dos.include.ab3@1018> XINCLUDE "dos.include.ab3"
00002B20 <dos.include.ab3@1019> XINCLUDE "dos.include.ab3"
00002B2A <dos.include.ab3@1020> XINCLUDE "dos.include.ab3"
00002B44 <dos.include.ab3@1021> XINCLUDE "dos.include.ab3"
00002B5C <dos.include.ab3@1022> XINCLUDE "dos.include.ab3"
00002B66 <dos.include.ab3@1025> XINCLUDE "dos.include.ab3"
00002B82 <dos.include.ab3@1026> XINCLUDE "dos.include.ab3"
00002BAC <dos.include.ab3@1161> XINCLUDE "dos.include.ab3"
00002BBA <dos.include.ab3@1163> XINCLUDE "dos.include.ab3"
00002C80 <dos.include.ab3@1164> XINCLUDE "dos.include.ab3"
00002CAA <dos.include.ab3@1165> XINCLUDE "dos.include.ab3"
00002CD2 <dos.include.ab3@1167> XINCLUDE "dos.include.ab3"
00002CFC <dos.include.ab3@1168> XINCLUDE "dos.include.ab3"
00002D26 <dos.include.ab3@1170> XINCLUDE "dos.include.ab3"
00002D44 <dos.include.ab3@1171> XINCLUDE "dos.include.ab3"
00002D6E <dos.include.ab3@1189> XINCLUDE "dos.include.ab3"
00002DDA <dos.include.ab3@1191> XINCLUDE "dos.include.ab3"
00002E02 <dos.include.ab3@1192> XINCLUDE "dos.include.ab3"
00002E10 <dos.include.ab3@1193> XINCLUDE "dos.include.ab3"
00002E44 <dos.include.ab3@1194> XINCLUDE "dos.include.ab3"
00002E52 <dos.include.ab3@1197> XINCLUDE "dos.include.ab3"
00002E74 <dos.include.ab3@1203> XINCLUDE "dos.include.ab3"
00002E82 <dos.include.ab3@1207> XINCLUDE "dos.include.ab3"
00002EA6 <dos.include.ab3@1208> XINCLUDE "dos.include.ab3"
00002ED0 <dos.include.ab3@1209> XINCLUDE "dos.include.ab3"
00002EFA <dos.include.ab3@1212> XINCLUDE "dos.include.ab3"
00002F18 <dos.include.ab3@1213> XINCLUDE "dos.include.ab3"
00002F42 <dos.include.ab3@1274> XINCLUDE "dos.include.ab3"
00002F9A <dos.include.ab3@1275> XINCLUDE "dos.include.ab3"
00002FC4 <dos.include.ab3@1276> XINCLUDE "dos.include.ab3"
00002FE2 <dos.include.ab3@1277> XINCLUDE "dos.include.ab3"
00002FF8 <dos.include.ab3@1351> XINCLUDE "dos.include.ab3"
00002FFE <dos.include.ab3@1353> XINCLUDE "dos.include.ab3"
00003008 <dos.include.ab3@1354> XINCLUDE "dos.include.ab3"
00003012 <dos.include.ab3@1355> XINCLUDE "dos.include.ab3"
00003030 <dos.include.ab3@1358> XINCLUDE "dos.include.ab3"
00003036 <dos.include.ab3@1359> XINCLUDE "dos.include.ab3"
0000303C <dos.include.ab3@1360> XINCLUDE "dos.include.ab3"
0000304C <dos.include.ab3@1362> XINCLUDE "dos.include.ab3"
00003052 <dos.include.ab3@1363> XINCLUDE "dos.include.ab3"
0000305A <dos.include.ab3@1364> XINCLUDE "dos.include.ab3"
00003082 <dos.include.ab3@1365> XINCLUDE "dos.include.ab3"
0000308C <dos.include.ab3@1366> XINCLUDE "dos.include.ab3"
00003096 <dos.include.ab3@1368> XINCLUDE "dos.include.ab3"
000030AA <dos.include.ab3@1369> XINCLUDE "dos.include.ab3"
000030C0 <dos.include.ab3@1474> XINCLUDE "dos.include.ab3"
000030C6 <dos.include.ab3@1480> XINCLUDE "dos.include.ab3"
000030EA <dos.include.ab3@1481> XINCLUDE "dos.include.ab3"
0000310E <dos.include.ab3@1482> XINCLUDE "dos.include.ab3"
00003132 <dos.include.ab3@1483> XINCLUDE "dos.include.ab3"
00003138 <dos.include.ab3@1484> XINCLUDE "dos.include.ab3"
00003164 <dos.include.ab3@1485> XINCLUDE "dos.include.ab3"
00003166 <dos.include.ab3@1486> XINCLUDE "dos.include.ab3"
00003194 <dos.include.ab3@1487> XINCLUDE "dos.include.ab3"
000031BE <dos.include.ab3@1503> XINCLUDE "dos.include.ab3"
00003242 <dos.include.ab3@1506> XINCLUDE "dos.include.ab3"
0000330A <dos.include.ab3@1507> XINCLUDE "dos.include.ab3"
00003314 <dos.include.ab3@1509> XINCLUDE "dos.include.ab3"
0000335E <dos.include.ab3@1510> XINCLUDE "dos.include.ab3"
000033AA <dos.include.ab3@1512> XINCLUDE "dos.include.ab3"
000033E2 <dos.include.ab3@1513> XINCLUDE "dos.include.ab3"
000033F4 <dos.include.ab3@1514> XINCLUDE "dos.include.ab3"
0000340A <dos.include.ab3@1515> XINCLUDE "dos.include.ab3"
00003410 <dos.include.ab3@1516> XINCLUDE "dos.include.ab3"
00003426 <dos.include.ab3@1517> XINCLUDE "dos.include.ab3"
0000345A <dos.include.ab3@1519> XINCLUDE "dos.include.ab3"
00003460 <dos.include.ab3@1520> XINCLUDE "dos.include.ab3"
0000346A <dos.include.ab3@1522> XINCLUDE "dos.include.ab3"
00003484 <dos.include.ab3@1523> XINCLUDE "dos.include.ab3"
000034CE <dos.include.ab3@1553> XINCLUDE "dos.include.ab3"
00003504 <dos.include.ab3@1555> XINCLUDE "dos.include.ab3"
00003528 <dos.include.ab3@1556> XINCLUDE "dos.include.ab3"
00003532 <dos.include.ab3@1557> XINCLUDE "dos.include.ab3"
0000355A <dos.include.ab3@1558> XINCLUDE "dos.include.ab3"
000035A2 <dos.include.ab3@1561> XINCLUDE "dos.include.ab3"
00003678 <dos.include.ab3@1563> XINCLUDE "dos.include.ab3"
000036A2 <dos.include.ab3@1564> XINCLUDE "dos.include.ab3"
000036C2 <dos.include.ab3@1565> XINCLUDE "dos.include.ab3"
000036FC <dos.include.ab3@1584> XINCLUDE "dos.include.ab3"
00003702 <dos.include.ab3@1586> XINCLUDE "dos.include.ab3"
00003708 <dos.include.ab3@1587> XINCLUDE "dos.include.ab3"
00003710 <dos.include.ab3@1588> XINCLUDE "dos.include.ab3"
00003746 <dos.include.ab3@1589> XINCLUDE "dos.include.ab3"
00003754 <dos.include.ab3@1590> XINCLUDE "dos.include.ab3"
0000375E <dos.include.ab3@1591> XINCLUDE "dos.include.ab3"
0000378A <dos.include.ab3@1592> XINCLUDE "dos.include.ab3"
00003798 <dos.include.ab3@1593> XINCLUDE "dos.include.ab3"
000037A2 <dos.include.ab3@1594> XINCLUDE "dos.include.ab3"
000037D0 <dos.include.ab3@1596> XINCLUDE "dos.include.ab3"
0000384E <dos.include.ab3@1599> XINCLUDE "dos.include.ab3"
000038A0 <dos.include.ab3@1602> XINCLUDE "dos.include.ab3"
000038B2 <dos.include.ab3@1603> XINCLUDE "dos.include.ab3"
00003920 <dos.include.ab3@1604> XINCLUDE "dos.include.ab3"
00003926 <dos.include.ab3@1605> XINCLUDE "dos.include.ab3"
00003972 <dos.include.ab3@1606> XINCLUDE "dos.include.ab3"
00003A40 <dos.include.ab3@1610> XINCLUDE "dos.include.ab3"
00003B20 <dos.include.ab3@1611> XINCLUDE "dos.include.ab3"
00003B8C <dos.include.ab3@1613> XINCLUDE "dos.include.ab3"
00003B92 <dos.include.ab3@1614> XINCLUDE "dos.include.ab3"
00003BAE <dos.include.ab3@1615> XINCLUDE "dos.include.ab3"
00003BBC <dos.include.ab3@1618> XINCLUDE "dos.include.ab3"
00003BC2 <dos.include.ab3@1619> XINCLUDE "dos.include.ab3"
00003BD4 <dos.include.ab3@1622> XINCLUDE "dos.include.ab3"
00003BEA <dos.include.ab3@1623> XINCLUDE "dos.include.ab3"
00003BF4 <dos.include.ab3@1624> XINCLUDE "dos.include.ab3"
00003C10 <dos.include.ab3@1625> XINCLUDE "dos.include.ab3"
00003C3A <dos.include.ab3@2221> XINCLUDE "dos.include.ab3"
00003C4E <dos.include.ab3@2222> XINCLUDE "dos.include.ab3"
00003C8C <dos.include.ab3@2223> XINCLUDE "dos.include.ab3"
00003D72 <dos.include.ab3@2224> XINCLUDE "dos.include.ab3"
00003D78 <dos.include.ab3@2225> XINCLUDE "dos.include.ab3"
00003DC8 <dos.include.ab3@2226> XINCLUDE "dos.include.ab3"
00003DF2 <dos.include.ab3@2227> XINCLUDE "dos.include.ab3"
00003E10 <dos.include.ab3@2228> XINCLUDE "dos.include.ab3"
00003E3A <dos.include.ab3@2252> XINCLUDE "dos.include.ab3"
00003E4E <dos.include.ab3@2253> XINCLUDE "dos.include.ab3"
00003E8C <dos.include.ab3@2254> XINCLUDE "dos.include.ab3"
00003F72 <dos.include.ab3@2255> XINCLUDE "dos.include.ab3"
00003F78 <dos.include.ab3@2256> XINCLUDE "dos.include.ab3"
00003FEA <dos.include.ab3@2257> XINCLUDE "dos.include.ab3"
00004014 <dos.include.ab3@2258> XINCLUDE "dos.include.ab3"
00004032 <dos.include.ab3@2259> XINCLUDE "dos.include.ab3"
0000406C <dos.include.ab3@2285> XINCLUDE "dos.include.ab3"
000040A4 <dos.include.ab3@2286> XINCLUDE "dos.include.ab3"
000040FC <dos.include.ab3@2287> XINCLUDE "dos.include.ab3"
00004160 <dos.include.ab3@2288> XINCLUDE "dos.include.ab3"
0000418A <dos.include.ab3@2290> XINCLUDE "dos.include.ab3"
000041AA <dos.include.ab3@2291> XINCLUDE "dos.include.ab3"
000041D4 <dos.include.ab3@2308> XINCLUDE "dos.include.ab3"
000041DA <dos.include.ab3@2309> XINCLUDE "dos.include.ab3"
000041F0 <dos.include.ab3@2310> XINCLUDE "dos.include.ab3"
000041FA <dos.include.ab3@2311> XINCLUDE "dos.include.ab3"
00004200 <dos.include.ab3@2312> XINCLUDE "dos.include.ab3"
00004210 <dos.include.ab3@2313> XINCLUDE "dos.include.ab3"
0000421A <dos.include.ab3@2315> XINCLUDE "dos.include.ab3"
00004234 <dos.include.ab3@2316> XINCLUDE "dos.include.ab3"
00004262 <dos.include.ab3@2558> XINCLUDE "dos.include.ab3"
00004284 <dos.include.ab3@2559> XINCLUDE "dos.include.ab3"
0000428C <dos.include.ab3@2560> XINCLUDE "dos.include.ab3"
0000429A <dos.include.ab3@2561> XINCLUDE "dos.include.ab3"
000042B4 <dos.include.ab3@2563> XINCLUDE "dos.include.ab3"
000042E2 <dos.include.ab3@2582> XINCLUDE "dos.include.ab3"
000042F6 <dos.include.ab3@2583> XINCLUDE "dos.include.ab3"
0000432A <dos.include.ab3@2584> XINCLUDE "dos.include.ab3"
00004344 <dos.include.ab3@2586> XINCLUDE "dos.include.ab3"
0000434C <dos.include.ab3@2587> XINCLUDE "dos.include.ab3"
0000435A <dos.include.ab3@2588> XINCLUDE "dos.include.ab3"
00004374 <dos.include.ab3@2590> XINCLUDE "dos.include.ab3"
0000439E <dos.include.ab3@2726> XINCLUDE "dos.include.ab3"
000043AA <dos.include.ab3@2728> XINCLUDE "dos.include.ab3"
000043CA <dos.include.ab3@2729> XINCLUDE "dos.include.ab3"
000043F0 <dos.include.ab3@2730> XINCLUDE "dos.include.ab3"
0000441C <dos.include.ab3@2731> XINCLUDE "dos.include.ab3"
00004434 <dos.include.ab3@2732> XINCLUDE "dos.include.ab3"
00004442 <dos.include.ab3@2734> XINCLUDE "dos.include.ab3"
00004448 <dos.include.ab3@2735> XINCLUDE "dos.include.ab3"
00004454 <dos.include.ab3@2736> XINCLUDE "dos.include.ab3"
0000445A <dos.include.ab3@2738> XINCLUDE "dos.include.ab3"
00004466 <dos.include.ab3@2739> XINCLUDE "dos.include.ab3"
00004476 <dos.include.ab3@2741> XINCLUDE "dos.include.ab3"
0000447C <dos.include.ab3@2742> XINCLUDE "dos.include.ab3"
00004488 <dos.include.ab3@2743> XINCLUDE "dos.include.ab3"
00004492 <dos.include.ab3@2745> XINCLUDE "dos.include.ab3"
000044AC <dos.include.ab3@2746> XINCLUDE "dos.include.ab3"
000044AC <AmiBlitz3.ab3@79> XINCLUDE "dos.include.ab3"
000044BA <AmiBlitz3.ab3@81> If dos_FromCLI{}
000044C0 <AmiBlitz3.ab3@82>   CLIMode.l=True
000044CC <AmiBlitz3.ab3@83>   error_SetFlags{#error_stdout}
000044CC <common.ab3@1> XINCLUDE "/Shared/common.ab3"
000044F4 <common.ab3@48> XINCLUDE "/Shared/common.ab3"
000044FA <common.ab3@261> XINCLUDE "/Shared/common.ab3"
000044FC <common.ab3@262> XINCLUDE "/Shared/common.ab3"
0000468C <common.ab3@263> XINCLUDE "/Shared/common.ab3"
00004690 <common.ab3@264> XINCLUDE "/Shared/common.ab3"
00004694 <common.ab3@266> XINCLUDE "/Shared/common.ab3"
00004698 <common.ab3@267> XINCLUDE "/Shared/common.ab3"
0000469C <common.ab3@269> XINCLUDE "/Shared/common.ab3"
000046A0 <common.ab3@270> XINCLUDE "/Shared/common.ab3"
000046A4 <common.ab3@271> XINCLUDE "/Shared/common.ab3"
000046A8 <common.ab3@272> XINCLUDE "/Shared/common.ab3"
000046AC <common.ab3@273> XINCLUDE "/Shared/common.ab3"
000046B0 <common.ab3@274> XINCLUDE "/Shared/common.ab3"
000046B4 <common.ab3@275> XINCLUDE "/Shared/common.ab3"
000046B8 <common.ab3@276> XINCLUDE "/Shared/common.ab3"
000046BC <common.ab3@277> XINCLUDE "/Shared/common.ab3"
000046C0 <common.ab3@279> XINCLUDE "/Shared/common.ab3"
000046C4 <common.ab3@281> XINCLUDE "/Shared/common.ab3"
000046C8 <common.ab3@282> XINCLUDE "/Shared/common.ab3"
000046CC <common.ab3@283> XINCLUDE "/Shared/common.ab3"
000046D0 <common.ab3@284> XINCLUDE "/Shared/common.ab3"
000046D4 <common.ab3@285> XINCLUDE "/Shared/common.ab3"
000046D8 <common.ab3@286> XINCLUDE "/Shared/common.ab3"
000046DC <common.ab3@287> XINCLUDE "/Shared/common.ab3"
000046E0 <common.ab3@288> XINCLUDE "/Shared/common.ab3"
000046E4 <common.ab3@289> XINCLUDE "/Shared/common.ab3"
000046E8 <common.ab3@290> XINCLUDE "/Shared/common.ab3"
000046F0 <common.ab3@293> XINCLUDE "/Shared/common.ab3"
000046F4 <common.ab3@294> XINCLUDE "/Shared/common.ab3"
000046F6 <common.ab3@295> XINCLUDE "/Shared/common.ab3"
000046FA <common.ab3@296> XINCLUDE "/Shared/common.ab3"
000046FC <common.ab3@297> XINCLUDE "/Shared/common.ab3"
00004700 <common.ab3@298> XINCLUDE "/Shared/common.ab3"
00004704 <common.ab3@299> XINCLUDE "/Shared/common.ab3"
00004708 <common.ab3@300> XINCLUDE "/Shared/common.ab3"
0000470C <common.ab3@301> XINCLUDE "/Shared/common.ab3"
00004710 <common.ab3@302> XINCLUDE "/Shared/common.ab3"
00004718 <common.ab3@303> XINCLUDE "/Shared/common.ab3"
00004720 <common.ab3@304> XINCLUDE "/Shared/common.ab3"
00004724 <common.ab3@305> XINCLUDE "/Shared/common.ab3"
00004728 <common.ab3@306> XINCLUDE "/Shared/common.ab3"
0000472C <common.ab3@307> XINCLUDE "/Shared/common.ab3"
0000472E <common.ab3@309> XINCLUDE "/Shared/common.ab3"
000047EE <common.ab3@310> XINCLUDE "/Shared/common.ab3"
00004836 <common.ab3@311> XINCLUDE "/Shared/common.ab3"
0000483A <common.ab3@313> XINCLUDE "/Shared/common.ab3"
0000483C <common.ab3@314> XINCLUDE "/Shared/common.ab3"
00004840 <common.ab3@315> XINCLUDE "/Shared/common.ab3"
00004842 <common.ab3@316> XINCLUDE "/Shared/common.ab3"
00004844 <common.ab3@317> XINCLUDE "/Shared/common.ab3"
00004846 <common.ab3@318> XINCLUDE "/Shared/common.ab3"
00004848 <common.ab3@319> XINCLUDE "/Shared/common.ab3"
0000484A <common.ab3@321> XINCLUDE "/Shared/common.ab3"
0000484C <common.ab3@322> XINCLUDE "/Shared/common.ab3"
0000484D <common.ab3@326> XINCLUDE "/Shared/common.ab3"
0000484E <common.ab3@328> XINCLUDE "/Shared/common.ab3"
00004850 <common.ab3@329> XINCLUDE "/Shared/common.ab3"
00004852 <common.ab3@330> XINCLUDE "/Shared/common.ab3"
00004854 <common.ab3@332> XINCLUDE "/Shared/common.ab3"
00004856 <common.ab3@335> XINCLUDE "/Shared/common.ab3"
00004858 <common.ab3@337> XINCLUDE "/Shared/common.ab3"
0000485A <common.ab3@339> XINCLUDE "/Shared/common.ab3"
0000485E <common.ab3@341> XINCLUDE "/Shared/common.ab3"
00004860 <common.ab3@343> XINCLUDE "/Shared/common.ab3"
00004862 <common.ab3@344> XINCLUDE "/Shared/common.ab3"
00004864 <common.ab3@346> XINCLUDE "/Shared/common.ab3"
00004868 <common.ab3@348> XINCLUDE "/Shared/common.ab3"
0000486A <common.ab3@349> XINCLUDE "/Shared/common.ab3"
0000486C <common.ab3@350> XINCLUDE "/Shared/common.ab3"
00004870 <common.ab3@353> XINCLUDE "/Shared/common.ab3"
00004872 <common.ab3@354> XINCLUDE "/Shared/common.ab3"
00004874 <common.ab3@355> XINCLUDE "/Shared/common.ab3"
00004876 <common.ab3@356> XINCLUDE "/Shared/common.ab3"
00004878 <common.ab3@358> XINCLUDE "/Shared/common.ab3"
0000487A <common.ab3@359> XINCLUDE "/Shared/common.ab3"
0000487E <common.ab3@361> XINCLUDE "/Shared/common.ab3"
00004880 <common.ab3@362> XINCLUDE "/Shared/common.ab3"
00004882 <common.ab3@363> XINCLUDE "/Shared/common.ab3"
00004884 <common.ab3@367> XINCLUDE "/Shared/common.ab3"
00004886 <common.ab3@368> XINCLUDE "/Shared/common.ab3"
0000488A <common.ab3@369> XINCLUDE "/Shared/common.ab3"
0000488C <common.ab3@375> XINCLUDE "/Shared/common.ab3"
0000488E <common.ab3@377> XINCLUDE "/Shared/common.ab3"
00004890 <common.ab3@379> XINCLUDE "/Shared/common.ab3"
00004892 <common.ab3@380> XINCLUDE "/Shared/common.ab3"
00004894 <common.ab3@381> XINCLUDE "/Shared/common.ab3"
00004898 <common.ab3@382> XINCLUDE "/Shared/common.ab3"
0000489A <common.ab3@383> XINCLUDE "/Shared/common.ab3"
0000489C <common.ab3@384> XINCLUDE "/Shared/common.ab3"
0000489E <common.ab3@385> XINCLUDE "/Shared/common.ab3"
000048A0 <common.ab3@386> XINCLUDE "/Shared/common.ab3"
000048A2 <common.ab3@388> XINCLUDE "/Shared/common.ab3"
000048A4 <common.ab3@390> XINCLUDE "/Shared/common.ab3"
000048A6 <common.ab3@392> XINCLUDE "/Shared/common.ab3"
000048AA <common.ab3@393> XINCLUDE "/Shared/common.ab3"
000048AC <common.ab3@394> XINCLUDE "/Shared/common.ab3"
000048DA <common.ab3@395> XINCLUDE "/Shared/common.ab3"
000048E4 <common.ab3@396> XINCLUDE "/Shared/common.ab3"
000048E8 <common.ab3@397> XINCLUDE "/Shared/common.ab3"
000048EA <common.ab3@399> XINCLUDE "/Shared/common.ab3"
000048EC <common.ab3@400> XINCLUDE "/Shared/common.ab3"
000048F0 <common.ab3@401> XINCLUDE "/Shared/common.ab3"
000048F4 <common.ab3@402> XINCLUDE "/Shared/common.ab3"
000048FD <common.ab3@403> XINCLUDE "/Shared/common.ab3"
00004900 <common.ab3@404> XINCLUDE "/Shared/common.ab3"
0000492D <common.ab3@405> XINCLUDE "/Shared/common.ab3"
0000496D <common.ab3@406> XINCLUDE "/Shared/common.ab3"
00004979 <common.ab3@407> XINCLUDE "/Shared/common.ab3"
000049C9 <common.ab3@408> XINCLUDE "/Shared/common.ab3"
000049D5 <common.ab3@409> XINCLUDE "/Shared/common.ab3"
00004A25 <common.ab3@410> XINCLUDE "/Shared/common.ab3"
00004B21 <common.ab3@411> XINCLUDE "/Shared/common.ab3"
00004B23 <common.ab3@412> XINCLUDE "/Shared/common.ab3"
00004BE3 <common.ab3@413> XINCLUDE "/Shared/common.ab3"
00004C23 <common.ab3@414> XINCLUDE "/Shared/common.ab3"
00004C25 <common.ab3@415> XINCLUDE "/Shared/common.ab3"
00004C26 <common.ab3@416> XINCLUDE "/Shared/common.ab3"
00004C2A <common.ab3@419> XINCLUDE "/Shared/common.ab3"
00004C2E <common.ab3@421> XINCLUDE "/Shared/common.ab3"
00004C32 <common.ab3@422> XINCLUDE "/Shared/common.ab3"
00004C36 <common.ab3@423> XINCLUDE "/Shared/common.ab3"
00004C3A <common.ab3@425> XINCLUDE "/Shared/common.ab3"
00004C3E <common.ab3@427> XINCLUDE "/Shared/common.ab3"
00004C42 <common.ab3@428> XINCLUDE "/Shared/common.ab3"
00004C46 <common.ab3@429> XINCLUDE "/Shared/common.ab3"
00004C4A <common.ab3@430> XINCLUDE "/Shared/common.ab3"
00004C4E <common.ab3@431> XINCLUDE "/Shared/common.ab3"
00004C52 <common.ab3@432> XINCLUDE "/Shared/common.ab3"
00004C56 <common.ab3@433> XINCLUDE "/Shared/common.ab3"
00004C5A <common.ab3@434> XINCLUDE "/Shared/common.ab3"
00004C5E <common.ab3@436> XINCLUDE "/Shared/common.ab3"
00004C62 <common.ab3@438> XINCLUDE "/Shared/common.ab3"
00004C66 <common.ab3@440> XINCLUDE "/Shared/common.ab3"
00004C6A <common.ab3@442> XINCLUDE "/Shared/common.ab3"
00004C6E <common.ab3@443> XINCLUDE "/Shared/common.ab3"
00004C78 <common.ab3@444> XINCLUDE "/Shared/common.ab3"
00004C7C <common.ab3@445> XINCLUDE "/Shared/common.ab3"
00004C80 <common.ab3@448> XINCLUDE "/Shared/common.ab3"
00004C82 <common.ab3@449> XINCLUDE "/Shared/common.ab3"
00004C84 <common.ab3@450> XINCLUDE "/Shared/common.ab3"
00004CA2 <common.ab3@451> XINCLUDE "/Shared/common.ab3"
00004CA6 <common.ab3@452> XINCLUDE "/Shared/common.ab3"
00004CA8 <common.ab3@454> XINCLUDE "/Shared/common.ab3"
00004CAC <common.ab3@455> XINCLUDE "/Shared/common.ab3"
00004CE0 <common.ab3@456> XINCLUDE "/Shared/common.ab3"
00004CE4 <common.ab3@457> XINCLUDE "/Shared/common.ab3"
00004CF2 <common.ab3@459> XINCLUDE "/Shared/common.ab3"
00004D04 <common.ab3@460> XINCLUDE "/Shared/common.ab3"
00004D06 <common.ab3@461> XINCLUDE "/Shared/common.ab3"
00004D1A <common.ab3@462> XINCLUDE "/Shared/common.ab3"
00004D30 <common.ab3@463> XINCLUDE "/Shared/common.ab3"
00004D46 <common.ab3@464> XINCLUDE "/Shared/common.ab3"
00004D5C <common.ab3@465> XINCLUDE "/Shared/common.ab3"
00004D72 <common.ab3@466> XINCLUDE "/Shared/common.ab3"
00004D74 <common.ab3@467> XINCLUDE "/Shared/common.ab3"
00004D76 <common.ab3@468> XINCLUDE "/Shared/common.ab3"
00004D7A <common.ab3@470> XINCLUDE "/Shared/common.ab3"
00004D7E <common.ab3@472> XINCLUDE "/Shared/common.ab3"
00004D82 <common.ab3@474> XINCLUDE "/Shared/common.ab3"
00004D86 <common.ab3@475> XINCLUDE "/Shared/common.ab3"
00004D8A <common.ab3@476> XINCLUDE "/Shared/common.ab3"
00004D8E <common.ab3@477> XINCLUDE "/Shared/common.ab3"
00004D92 <common.ab3@478> XINCLUDE "/Shared/common.ab3"
00004D96 <common.ab3@479> XINCLUDE "/Shared/common.ab3"
00004D9A <common.ab3@480> XINCLUDE "/Shared/common.ab3"
00004D9E <common.ab3@481> XINCLUDE "/Shared/common.ab3"
00004DA4 <common.ab3@482> XINCLUDE "/Shared/common.ab3"
00004DB6 <common.ab3@483> XINCLUDE "/Shared/common.ab3"
00004DB8 <common.ab3@487> XINCLUDE "/Shared/common.ab3"
00004DBC <common.ab3@488> XINCLUDE "/Shared/common.ab3"
00004DBE <common.ab3@489> XINCLUDE "/Shared/common.ab3"
00004DC2 <common.ab3@490> XINCLUDE "/Shared/common.ab3"
00004DC4 <common.ab3@491> XINCLUDE "/Shared/common.ab3"
00004DC8 <common.ab3@492> XINCLUDE "/Shared/common.ab3"
00004DCA <common.ab3@493> XINCLUDE "/Shared/common.ab3"
00004DCE <common.ab3@494> XINCLUDE "/Shared/common.ab3"
00004DD0 <common.ab3@495> XINCLUDE "/Shared/common.ab3"
00004DD4 <common.ab3@496> XINCLUDE "/Shared/common.ab3"
00004DD6 <common.ab3@497> XINCLUDE "/Shared/common.ab3"
00004DDA <common.ab3@498> XINCLUDE "/Shared/common.ab3"
00004DDC <common.ab3@499> XINCLUDE "/Shared/common.ab3"
00004DE0 <common.ab3@500> XINCLUDE "/Shared/common.ab3"
00004DE2 <common.ab3@501> XINCLUDE "/Shared/common.ab3"
00004DE6 <common.ab3@502> XINCLUDE "/Shared/common.ab3"
00004DE8 <common.ab3@503> XINCLUDE "/Shared/common.ab3"
00004DEC <common.ab3@504> XINCLUDE "/Shared/common.ab3"
00004DEE <common.ab3@505> XINCLUDE "/Shared/common.ab3"
00004DF2 <common.ab3@506> XINCLUDE "/Shared/common.ab3"
00004DF4 <common.ab3@507> XINCLUDE "/Shared/common.ab3"
00004DF8 <common.ab3@508> XINCLUDE "/Shared/common.ab3"
00004DFA <common.ab3@509> XINCLUDE "/Shared/common.ab3"
00004DFE <common.ab3@510> XINCLUDE "/Shared/common.ab3"
00004E00 <common.ab3@511> XINCLUDE "/Shared/common.ab3"
00004E04 <common.ab3@512> XINCLUDE "/Shared/common.ab3"
00004E06 <common.ab3@513> XINCLUDE "/Shared/common.ab3"
00004E0A <common.ab3@514> XINCLUDE "/Shared/common.ab3"
00004E0C <common.ab3@515> XINCLUDE "/Shared/common.ab3"
00004E20 <common.ab3@519> XINCLUDE "/Shared/common.ab3"
00004E34 <common.ab3@520> XINCLUDE "/Shared/common.ab3"
00004E48 <common.ab3@521> XINCLUDE "/Shared/common.ab3"
00004E4A <common.ab3@522> XINCLUDE "/Shared/common.ab3"
00004E4E <common.ab3@523> XINCLUDE "/Shared/common.ab3"
00004E52 <common.ab3@524> XINCLUDE "/Shared/common.ab3"
00004E56 <common.ab3@525> XINCLUDE "/Shared/common.ab3"
00004E5A <common.ab3@526> XINCLUDE "/Shared/common.ab3"
00004E5E <common.ab3@527> XINCLUDE "/Shared/common.ab3"
00004E62 <common.ab3@528> XINCLUDE "/Shared/common.ab3"
00004E66 <common.ab3@529> XINCLUDE "/Shared/common.ab3"
00004E67 <common.ab3@530> XINCLUDE "/Shared/common.ab3"
00004E68 <common.ab3@531> XINCLUDE "/Shared/common.ab3"
00004E69 <common.ab3@532> XINCLUDE "/Shared/common.ab3"
00004E6C <common.ab3@533> XINCLUDE "/Shared/common.ab3"
00004E70 <common.ab3@534> XINCLUDE "/Shared/common.ab3"
00004E74 <common.ab3@535> XINCLUDE "/Shared/common.ab3"
00004E78 <common.ab3@536> XINCLUDE "/Shared/common.ab3"
00004E7C <common.ab3@537> XINCLUDE "/Shared/common.ab3"
00004E80 <common.ab3@538> XINCLUDE "/Shared/common.ab3"
00004E84 <common.ab3@539> XINCLUDE "/Shared/common.ab3"
00004E85 <common.ab3@540> XINCLUDE "/Shared/common.ab3"
00004E86 <common.ab3@541> XINCLUDE "/Shared/common.ab3"
00004E88 <common.ab3@542> XINCLUDE "/Shared/common.ab3"
00004E8C <common.ab3@543> XINCLUDE "/Shared/common.ab3"
00004E90 <common.ab3@544> XINCLUDE "/Shared/common.ab3"
00004E94 <common.ab3@545> XINCLUDE "/Shared/common.ab3"
00004E98 <common.ab3@547> XINCLUDE "/Shared/common.ab3"
00004E9C <common.ab3@548> XINCLUDE "/Shared/common.ab3"
00004EA0 <common.ab3@549> XINCLUDE "/Shared/common.ab3"
00004EA4 <common.ab3@550> XINCLUDE "/Shared/common.ab3"
00004EA8 <common.ab3@551> XINCLUDE "/Shared/common.ab3"
00004EAC <common.ab3@552> XINCLUDE "/Shared/common.ab3"
00004EB0 <common.ab3@553> XINCLUDE "/Shared/common.ab3"
00004EB4 <common.ab3@554> XINCLUDE "/Shared/common.ab3"
00004EB8 <common.ab3@558> XINCLUDE "/Shared/common.ab3"
00004EBC <common.ab3@559> XINCLUDE "/Shared/common.ab3"
00004EC0 <common.ab3@560> XINCLUDE "/Shared/common.ab3"
00004EC2 <common.ab3@561> XINCLUDE "/Shared/common.ab3"
00004EC3 <common.ab3@562> XINCLUDE "/Shared/common.ab3"
00004EC7 <common.ab3@563> XINCLUDE "/Shared/common.ab3"
00004ECB <common.ab3@564> XINCLUDE "/Shared/common.ab3"
00004ECF <common.ab3@565> XINCLUDE "/Shared/common.ab3"
00004ED3 <common.ab3@566> XINCLUDE "/Shared/common.ab3"
00004ED4 <common.ab3@568> XINCLUDE "/Shared/common.ab3"
00004ED8 <common.ab3@570> XINCLUDE "/Shared/common.ab3"
00004EDC <common.ab3@571> XINCLUDE "/Shared/common.ab3"
00004EE0 <common.ab3@572> XINCLUDE "/Shared/common.ab3"
00004EE4 <common.ab3@573> XINCLUDE "/Shared/common.ab3"
00004EE8 <common.ab3@574> XINCLUDE "/Shared/common.ab3"
00004EE9 <common.ab3@575> XINCLUDE "/Shared/common.ab3"
00004EEA <common.ab3@577> XINCLUDE "/Shared/common.ab3"
00004EEE <common.ab3@579> XINCLUDE "/Shared/common.ab3"
00004EF2 <common.ab3@580> XINCLUDE "/Shared/common.ab3"
00004EF4 <common.ab3@581> XINCLUDE "/Shared/common.ab3"
00004EF6 <common.ab3@582> XINCLUDE "/Shared/common.ab3"
00004EFA <common.ab3@586> XINCLUDE "/Shared/common.ab3"
00004EFE <common.ab3@587> XINCLUDE "/Shared/common.ab3"
00004F02 <common.ab3@589> XINCLUDE "/Shared/common.ab3"
00004F06 <common.ab3@590> XINCLUDE "/Shared/common.ab3"
00004F0A <common.ab3@592> XINCLUDE "/Shared/common.ab3"
00004F0E <common.ab3@593> XINCLUDE "/Shared/common.ab3"
00004F12 <common.ab3@595> XINCLUDE "/Shared/common.ab3"
00004F16 <common.ab3@596> XINCLUDE "/Shared/common.ab3"
00004F1A <common.ab3@597> XINCLUDE "/Shared/common.ab3"
00004F1E <common.ab3@598> XINCLUDE "/Shared/common.ab3"
00004F22 <common.ab3@599> XINCLUDE "/Shared/common.ab3"
00004F26 <common.ab3@600> XINCLUDE "/Shared/common.ab3"
00004F2A <common.ab3@601> XINCLUDE "/Shared/common.ab3"
00004F2E <common.ab3@602> XINCLUDE "/Shared/common.ab3"
00004F32 <common.ab3@603> XINCLUDE "/Shared/common.ab3"
00004F36 <common.ab3@604> XINCLUDE "/Shared/common.ab3"
00004F3A <common.ab3@605> XINCLUDE "/Shared/common.ab3"
00004F3E <common.ab3@606> XINCLUDE "/Shared/common.ab3"
00004F42 <common.ab3@607> XINCLUDE "/Shared/common.ab3"
00004F46 <common.ab3@608> XINCLUDE "/Shared/common.ab3"
00004F46 <AmiBlitz3.ab3@86> XINCLUDE "/Shared/common.ab3"
00004F46 <preprocessor.include.ab3@1> XINCLUDE "/Shared/preprocessor.include.ab3"
00004F46 <hashmap.include.ab3@1> XINCLUDE "/Shared/preprocessor.include.ab3"
00004F64 <hashmap.include.ab3@36> XINCLUDE "/Shared/preprocessor.include.ab3"
00004F6C <hashmap.include.ab3@38> XINCLUDE "/Shared/preprocessor.include.ab3"
00004F9A <hashmap.include.ab3@39> XINCLUDE "/Shared/preprocessor.include.ab3"
00004FCA <hashmap.include.ab3@40> XINCLUDE "/Shared/preprocessor.include.ab3"
00004FDA <hashmap.include.ab3@41> XINCLUDE "/Shared/preprocessor.include.ab3"
00004FE4 <hashmap.include.ab3@43> XINCLUDE "/Shared/preprocessor.include.ab3"
00004FEA <hashmap.include.ab3@45> XINCLUDE "/Shared/preprocessor.include.ab3"
0000500C <hashmap.include.ab3@48> XINCLUDE "/Shared/preprocessor.include.ab3"
0000502A <hashmap.include.ab3@50> XINCLUDE "/Shared/preprocessor.include.ab3"
0000503C <hashmap.include.ab3@51> XINCLUDE "/Shared/preprocessor.include.ab3"
00005064 <hashmap.include.ab3@52> XINCLUDE "/Shared/preprocessor.include.ab3"
0000506A <hashmap.include.ab3@54> XINCLUDE "/Shared/preprocessor.include.ab3"
00005084 <hashmap.include.ab3@57> XINCLUDE "/Shared/preprocessor.include.ab3"
0000509C <hashmap.include.ab3@59> XINCLUDE "/Shared/preprocessor.include.ab3"
000050AE <hashmap.include.ab3@60> XINCLUDE "/Shared/preprocessor.include.ab3"
000050BC <hashmap.include.ab3@61> XINCLUDE "/Shared/preprocessor.include.ab3"
000050F0 <hashmap.include.ab3@62> XINCLUDE "/Shared/preprocessor.include.ab3"
000050FE <hashmap.include.ab3@63> XINCLUDE "/Shared/preprocessor.include.ab3"
00005108 <hashmap.include.ab3@64> XINCLUDE "/Shared/preprocessor.include.ab3"
0000511A <hashmap.include.ab3@65> XINCLUDE "/Shared/preprocessor.include.ab3"
00005154 <hashmap.include.ab3@66> XINCLUDE "/Shared/preprocessor.include.ab3"
00005164 <hashmap.include.ab3@67> XINCLUDE "/Shared/preprocessor.include.ab3"
0000516A <hashmap.include.ab3@69> XINCLUDE "/Shared/preprocessor.include.ab3"
0000517A <hashmap.include.ab3@70> XINCLUDE "/Shared/preprocessor.include.ab3"
0000518A <hashmap.include.ab3@72> XINCLUDE "/Shared/preprocessor.include.ab3"
00005198 <hashmap.include.ab3@74> XINCLUDE "/Shared/preprocessor.include.ab3"
000051A8 <hashmap.include.ab3@75> XINCLUDE "/Shared/preprocessor.include.ab3"
000051CC <hashmap.include.ab3@76> XINCLUDE "/Shared/preprocessor.include.ab3"
000051D8 <hashmap.include.ab3@78> XINCLUDE "/Shared/preprocessor.include.ab3"
000051E6 <hashmap.include.ab3@79> XINCLUDE "/Shared/preprocessor.include.ab3"
000051F4 <hashmap.include.ab3@80> XINCLUDE "/Shared/preprocessor.include.ab3"
00005202 <hashmap.include.ab3@81> XINCLUDE "/Shared/preprocessor.include.ab3"
00005210 <hashmap.include.ab3@82> XINCLUDE "/Shared/preprocessor.include.ab3"
00005246 <hashmap.include.ab3@83> XINCLUDE "/Shared/preprocessor.include.ab3"
00005254 <hashmap.include.ab3@84> XINCLUDE "/Shared/preprocessor.include.ab3"
00005264 <hashmap.include.ab3@85> XINCLUDE "/Shared/preprocessor.include.ab3"
0000526C <hashmap.include.ab3@86> XINCLUDE "/Shared/preprocessor.include.ab3"
00005270 <hashmap.include.ab3@88> XINCLUDE "/Shared/preprocessor.include.ab3"
0000528A <hashmap.include.ab3@91> XINCLUDE "/Shared/preprocessor.include.ab3"
000052A4 <hashmap.include.ab3@93> XINCLUDE "/Shared/preprocessor.include.ab3"
000052BE <hashmap.include.ab3@94> XINCLUDE "/Shared/preprocessor.include.ab3"
000052DE <hashmap.include.ab3@96> XINCLUDE "/Shared/preprocessor.include.ab3"
000052E8 <hashmap.include.ab3@97> XINCLUDE "/Shared/preprocessor.include.ab3"
000052F4 <hashmap.include.ab3@98> XINCLUDE "/Shared/preprocessor.include.ab3"
00005308 <hashmap.include.ab3@99> XINCLUDE "/Shared/preprocessor.include.ab3"
0000533A <hashmap.include.ab3@100> XINCLUDE "/Shared/preprocessor.include.ab3"
00005352 <hashmap.include.ab3@101> XINCLUDE "/Shared/preprocessor.include.ab3"
0000535E <hashmap.include.ab3@102> XINCLUDE "/Shared/preprocessor.include.ab3"
0000536C <hashmap.include.ab3@103> XINCLUDE "/Shared/preprocessor.include.ab3"
0000537A <hashmap.include.ab3@104> XINCLUDE "/Shared/preprocessor.include.ab3"
00005388 <hashmap.include.ab3@105> XINCLUDE "/Shared/preprocessor.include.ab3"
00005396 <hashmap.include.ab3@106> XINCLUDE "/Shared/preprocessor.include.ab3"
000053C0 <hashmap.include.ab3@107> XINCLUDE "/Shared/preprocessor.include.ab3"
000053CA <hashmap.include.ab3@110> XINCLUDE "/Shared/preprocessor.include.ab3"
000053D0 <hashmap.include.ab3@112> XINCLUDE "/Shared/preprocessor.include.ab3"
000053FE <hashmap.include.ab3@115> XINCLUDE "/Shared/preprocessor.include.ab3"
00005416 <hashmap.include.ab3@117> XINCLUDE "/Shared/preprocessor.include.ab3"
00005434 <hashmap.include.ab3@118> XINCLUDE "/Shared/preprocessor.include.ab3"
00005448 <hashmap.include.ab3@119> XINCLUDE "/Shared/preprocessor.include.ab3"
00005460 <hashmap.include.ab3@120> XINCLUDE "/Shared/preprocessor.include.ab3"
00005488 <hashmap.include.ab3@121> XINCLUDE "/Shared/preprocessor.include.ab3"
000054A0 <hashmap.include.ab3@122> XINCLUDE "/Shared/preprocessor.include.ab3"
000054AE <hashmap.include.ab3@123> XINCLUDE "/Shared/preprocessor.include.ab3"
000054BC <hashmap.include.ab3@124> XINCLUDE "/Shared/preprocessor.include.ab3"
000054CA <hashmap.include.ab3@125> XINCLUDE "/Shared/preprocessor.include.ab3"
000054DE <hashmap.include.ab3@126> XINCLUDE "/Shared/preprocessor.include.ab3"
00005532 <hashmap.include.ab3@127> XINCLUDE "/Shared/preprocessor.include.ab3"
0000555C <hashmap.include.ab3@128> XINCLUDE "/Shared/preprocessor.include.ab3"
000055A0 <hashmap.include.ab3@130> XINCLUDE "/Shared/preprocessor.include.ab3"
000055C0 <hashmap.include.ab3@131> XINCLUDE "/Shared/preprocessor.include.ab3"
000055D2 <hashmap.include.ab3@132> XINCLUDE "/Shared/preprocessor.include.ab3"
000055F6 <hashmap.include.ab3@133> XINCLUDE "/Shared/preprocessor.include.ab3"
00005604 <hashmap.include.ab3@134> XINCLUDE "/Shared/preprocessor.include.ab3"
0000565C <hashmap.include.ab3@135> XINCLUDE "/Shared/preprocessor.include.ab3"
000056A2 <hashmap.include.ab3@136> XINCLUDE "/Shared/preprocessor.include.ab3"
000056A8 <hashmap.include.ab3@137> XINCLUDE "/Shared/preprocessor.include.ab3"
000056B0 <hashmap.include.ab3@138> XINCLUDE "/Shared/preprocessor.include.ab3"
000056D8 <hashmap.include.ab3@140> XINCLUDE "/Shared/preprocessor.include.ab3"
000056EA <hashmap.include.ab3@141> XINCLUDE "/Shared/preprocessor.include.ab3"
000056FC <hashmap.include.ab3@142> XINCLUDE "/Shared/preprocessor.include.ab3"
00005736 <hashmap.include.ab3@143> XINCLUDE "/Shared/preprocessor.include.ab3"
00005746 <hashmap.include.ab3@144> XINCLUDE "/Shared/preprocessor.include.ab3"
0000574C <hashmap.include.ab3@146> XINCLUDE "/Shared/preprocessor.include.ab3"
0000575C <hashmap.include.ab3@147> XINCLUDE "/Shared/preprocessor.include.ab3"
00005762 <hashmap.include.ab3@149> XINCLUDE "/Shared/preprocessor.include.ab3"
00005768 <hashmap.include.ab3@151> XINCLUDE "/Shared/preprocessor.include.ab3"
00005780 <hashmap.include.ab3@153> XINCLUDE "/Shared/preprocessor.include.ab3"
000057BE <hashmap.include.ab3@156> XINCLUDE "/Shared/preprocessor.include.ab3"
000057DC <hashmap.include.ab3@158> XINCLUDE "/Shared/preprocessor.include.ab3"
0000580E <hashmap.include.ab3@159> XINCLUDE "/Shared/preprocessor.include.ab3"
00005822 <hashmap.include.ab3@160> XINCLUDE "/Shared/preprocessor.include.ab3"
00005836 <hashmap.include.ab3@161> XINCLUDE "/Shared/preprocessor.include.ab3"
0000584E <hashmap.include.ab3@162> XINCLUDE "/Shared/preprocessor.include.ab3"
00005876 <hashmap.include.ab3@164> XINCLUDE "/Shared/preprocessor.include.ab3"
00005880 <hashmap.include.ab3@168> XINCLUDE "/Shared/preprocessor.include.ab3"
0000588E <hashmap.include.ab3@169> XINCLUDE "/Shared/preprocessor.include.ab3"
000058A6 <hashmap.include.ab3@170> XINCLUDE "/Shared/preprocessor.include.ab3"
000058AC <hashmap.include.ab3@174> XINCLUDE "/Shared/preprocessor.include.ab3"
000058B4 <hashmap.include.ab3@175> XINCLUDE "/Shared/preprocessor.include.ab3"
000058D4 <hashmap.include.ab3@178> XINCLUDE "/Shared/preprocessor.include.ab3"
000058FA <hashmap.include.ab3@179> XINCLUDE "/Shared/preprocessor.include.ab3"
00005904 <hashmap.include.ab3@180> XINCLUDE "/Shared/preprocessor.include.ab3"
00005912 <hashmap.include.ab3@181> XINCLUDE "/Shared/preprocessor.include.ab3"
0000591C <hashmap.include.ab3@183> XINCLUDE "/Shared/preprocessor.include.ab3"
00005948 <hashmap.include.ab3@184> XINCLUDE "/Shared/preprocessor.include.ab3"
0000595C <hashmap.include.ab3@185> XINCLUDE "/Shared/preprocessor.include.ab3"
00005962 <hashmap.include.ab3@186> XINCLUDE "/Shared/preprocessor.include.ab3"
00005970 <hashmap.include.ab3@187> XINCLUDE "/Shared/preprocessor.include.ab3"
000059A6 <hashmap.include.ab3@190> XINCLUDE "/Shared/preprocessor.include.ab3"
000059F4 <hashmap.include.ab3@191> XINCLUDE "/Shared/preprocessor.include.ab3"
00005A1C <hashmap.include.ab3@193> XINCLUDE "/Shared/preprocessor.include.ab3"
00005A36 <hashmap.include.ab3@194> XINCLUDE "/Shared/preprocessor.include.ab3"
00005A48 <hashmap.include.ab3@195> XINCLUDE "/Shared/preprocessor.include.ab3"
00005A52 <hashmap.include.ab3@198> XINCLUDE "/Shared/preprocessor.include.ab3"
00005A6E <hashmap.include.ab3@200> XINCLUDE "/Shared/preprocessor.include.ab3"
00005A98 <hashmap.include.ab3@203> XINCLUDE "/Shared/preprocessor.include.ab3"
00005AB6 <hashmap.include.ab3@205> XINCLUDE "/Shared/preprocessor.include.ab3"
00005ADA <hashmap.include.ab3@206> XINCLUDE "/Shared/preprocessor.include.ab3"
00005B08 <hashmap.include.ab3@207> XINCLUDE "/Shared/preprocessor.include.ab3"
00005B22 <hashmap.include.ab3@208> XINCLUDE "/Shared/preprocessor.include.ab3"
00005B4A <hashmap.include.ab3@209> XINCLUDE "/Shared/preprocessor.include.ab3"
00005B68 <hashmap.include.ab3@210> XINCLUDE "/Shared/preprocessor.include.ab3"
00005B84 <hashmap.include.ab3@211> XINCLUDE "/Shared/preprocessor.include.ab3"
00005B92 <hashmap.include.ab3@212> XINCLUDE "/Shared/preprocessor.include.ab3"
00005BA6 <hashmap.include.ab3@214> XINCLUDE "/Shared/preprocessor.include.ab3"
00005BC8 <hashmap.include.ab3@215> XINCLUDE "/Shared/preprocessor.include.ab3"
00005BEA <hashmap.include.ab3@216> XINCLUDE "/Shared/preprocessor.include.ab3"
00005BF8 <hashmap.include.ab3@217> XINCLUDE "/Shared/preprocessor.include.ab3"
00005C18 <hashmap.include.ab3@218> XINCLUDE "/Shared/preprocessor.include.ab3"
00005C48 <hashmap.include.ab3@219> XINCLUDE "/Shared/preprocessor.include.ab3"
00005C4E <hashmap.include.ab3@220> XINCLUDE "/Shared/preprocessor.include.ab3"
00005C82 <hashmap.include.ab3@221> XINCLUDE "/Shared/preprocessor.include.ab3"
00005CC4 <hashmap.include.ab3@222> XINCLUDE "/Shared/preprocessor.include.ab3"
00005CD4 <hashmap.include.ab3@223> XINCLUDE "/Shared/preprocessor.include.ab3"
00005CDE <hashmap.include.ab3@224> XINCLUDE "/Shared/preprocessor.include.ab3"
00005CEE <hashmap.include.ab3@225> XINCLUDE "/Shared/preprocessor.include.ab3"
00005CF4 <hashmap.include.ab3@229> XINCLUDE "/Shared/preprocessor.include.ab3"
00005D00 <hashmap.include.ab3@231> XINCLUDE "/Shared/preprocessor.include.ab3"
00005D06 <hashmap.include.ab3@233> XINCLUDE "/Shared/preprocessor.include.ab3"
00005D34 <hashmap.include.ab3@236> XINCLUDE "/Shared/preprocessor.include.ab3"
00005D64 <hashmap.include.ab3@238> XINCLUDE "/Shared/preprocessor.include.ab3"
00005D9A <hashmap.include.ab3@239> XINCLUDE "/Shared/preprocessor.include.ab3"
00005DAE <hashmap.include.ab3@240> XINCLUDE "/Shared/preprocessor.include.ab3"
00005DC6 <hashmap.include.ab3@241> XINCLUDE "/Shared/preprocessor.include.ab3"
00005DEE <hashmap.include.ab3@242> XINCLUDE "/Shared/preprocessor.include.ab3"
00005E1E <hashmap.include.ab3@243> XINCLUDE "/Shared/preprocessor.include.ab3"
00005E3A <hashmap.include.ab3@244> XINCLUDE "/Shared/preprocessor.include.ab3"
00005E48 <hashmap.include.ab3@245> XINCLUDE "/Shared/preprocessor.include.ab3"
00005E5C <hashmap.include.ab3@246> XINCLUDE "/Shared/preprocessor.include.ab3"
00005EB0 <hashmap.include.ab3@247> XINCLUDE "/Shared/preprocessor.include.ab3"
00005EDA <hashmap.include.ab3@248> XINCLUDE "/Shared/preprocessor.include.ab3"
00005F1E <hashmap.include.ab3@249> XINCLUDE "/Shared/preprocessor.include.ab3"
00005F44 <hashmap.include.ab3@250> XINCLUDE "/Shared/preprocessor.include.ab3"
00005F4A <hashmap.include.ab3@252> XINCLUDE "/Shared/preprocessor.include.ab3"
00005F68 <hashmap.include.ab3@254> XINCLUDE "/Shared/preprocessor.include.ab3"
00005F86 <hashmap.include.ab3@256> XINCLUDE "/Shared/preprocessor.include.ab3"
00005FA4 <hashmap.include.ab3@290> XINCLUDE "/Shared/preprocessor.include.ab3"
00005FAA <hashmap.include.ab3@292> XINCLUDE "/Shared/preprocessor.include.ab3"
00005FD0 <hashmap.include.ab3@293> XINCLUDE "/Shared/preprocessor.include.ab3"
00005FFE <hashmap.include.ab3@295> XINCLUDE "/Shared/preprocessor.include.ab3"
00006026 <hashmap.include.ab3@296> XINCLUDE "/Shared/preprocessor.include.ab3"
0000604A <hashmap.include.ab3@297> XINCLUDE "/Shared/preprocessor.include.ab3"
000060A0 <hashmap.include.ab3@300> XINCLUDE "/Shared/preprocessor.include.ab3"
000060F2 <hashmap.include.ab3@301> XINCLUDE "/Shared/preprocessor.include.ab3"
00006148 <hashmap.include.ab3@302> XINCLUDE "/Shared/preprocessor.include.ab3"
00006158 <hashmap.include.ab3@305> XINCLUDE "/Shared/preprocessor.include.ab3"
000061AA <hashmap.include.ab3@306> XINCLUDE "/Shared/preprocessor.include.ab3"
000061D2 <hashmap.include.ab3@307> XINCLUDE "/Shared/preprocessor.include.ab3"
000061F8 <hashmap.include.ab3@308> XINCLUDE "/Shared/preprocessor.include.ab3"
00006212 <hashmap.include.ab3@309> XINCLUDE "/Shared/preprocessor.include.ab3"
0000621A <hashmap.include.ab3@310> XINCLUDE "/Shared/preprocessor.include.ab3"
00006242 <hashmap.include.ab3@311> XINCLUDE "/Shared/preprocessor.include.ab3"
00006270 <hashmap.include.ab3@314> XINCLUDE "/Shared/preprocessor.include.ab3"
00006298 <hashmap.include.ab3@315> XINCLUDE "/Shared/preprocessor.include.ab3"
000062A0 <hashmap.include.ab3@316> XINCLUDE "/Shared/preprocessor.include.ab3"
000062C4 <hashmap.include.ab3@317> XINCLUDE "/Shared/preprocessor.include.ab3"
000062F8 <hashmap.include.ab3@319> XINCLUDE "/Shared/preprocessor.include.ab3"
00006314 <hashmap.include.ab3@320> XINCLUDE "/Shared/preprocessor.include.ab3"
0000631E <hashmap.include.ab3@321> XINCLUDE "/Shared/preprocessor.include.ab3"
00006332 <hashmap.include.ab3@322> XINCLUDE "/Shared/preprocessor.include.ab3"
00006352 <hashmap.include.ab3@323> XINCLUDE "/Shared/preprocessor.include.ab3"
0000636E <hashmap.include.ab3@324> XINCLUDE "/Shared/preprocessor.include.ab3"
0000637C <hashmap.include.ab3@325> XINCLUDE "/Shared/preprocessor.include.ab3"
0000638A <hashmap.include.ab3@326> XINCLUDE "/Shared/preprocessor.include.ab3"
00006390 <hashmap.include.ab3@327> XINCLUDE "/Shared/preprocessor.include.ab3"
000063A8 <hashmap.include.ab3@328> XINCLUDE "/Shared/preprocessor.include.ab3"
000063B8 <hashmap.include.ab3@330> XINCLUDE "/Shared/preprocessor.include.ab3"
000063E6 <hashmap.include.ab3@331> XINCLUDE "/Shared/preprocessor.include.ab3"
00006442 <hashmap.include.ab3@332> XINCLUDE "/Shared/preprocessor.include.ab3"
000064BA <hashmap.include.ab3@333> XINCLUDE "/Shared/preprocessor.include.ab3"
00006516 <hashmap.include.ab3@334> XINCLUDE "/Shared/preprocessor.include.ab3"
0000651C <hashmap.include.ab3@335> XINCLUDE "/Shared/preprocessor.include.ab3"
00006526 <hashmap.include.ab3@338> XINCLUDE "/Shared/preprocessor.include.ab3"
0000652C <hashmap.include.ab3@340> XINCLUDE "/Shared/preprocessor.include.ab3"
0000655A <hashmap.include.ab3@343> XINCLUDE "/Shared/preprocessor.include.ab3"
00006560 <hashmap.include.ab3@345> XINCLUDE "/Shared/preprocessor.include.ab3"
00006580 <hashmap.include.ab3@346> XINCLUDE "/Shared/preprocessor.include.ab3"
0000658A <hashmap.include.ab3@347> XINCLUDE "/Shared/preprocessor.include.ab3"
0000659C <hashmap.include.ab3@348> XINCLUDE "/Shared/preprocessor.include.ab3"
000065AC <hashmap.include.ab3@349> XINCLUDE "/Shared/preprocessor.include.ab3"
000065B6 <hashmap.include.ab3@352> XINCLUDE "/Shared/preprocessor.include.ab3"
000065D0 <hashmap.include.ab3@354> XINCLUDE "/Shared/preprocessor.include.ab3"
000065EA <hashmap.include.ab3@357> XINCLUDE "/Shared/preprocessor.include.ab3"
000065F2 <hashmap.include.ab3@359> XINCLUDE "/Shared/preprocessor.include.ab3"
000065F8 <hashmap.include.ab3@360> XINCLUDE "/Shared/preprocessor.include.ab3"
00006602 <hashmap.include.ab3@361> XINCLUDE "/Shared/preprocessor.include.ab3"
0000660A <hashmap.include.ab3@362> XINCLUDE "/Shared/preprocessor.include.ab3"
00006632 <hashmap.include.ab3@363> XINCLUDE "/Shared/preprocessor.include.ab3"
00006638 <hashmap.include.ab3@364> XINCLUDE "/Shared/preprocessor.include.ab3"
0000664C <hashmap.include.ab3@365> XINCLUDE "/Shared/preprocessor.include.ab3"
00006688 <hashmap.include.ab3@367> XINCLUDE "/Shared/preprocessor.include.ab3"
000066AE <hashmap.include.ab3@368> XINCLUDE "/Shared/preprocessor.include.ab3"
000066BC <hashmap.include.ab3@369> XINCLUDE "/Shared/preprocessor.include.ab3"
000066F8 <hashmap.include.ab3@371> XINCLUDE "/Shared/preprocessor.include.ab3"
0000670C <hashmap.include.ab3@372> XINCLUDE "/Shared/preprocessor.include.ab3"
00006748 <hashmap.include.ab3@374> XINCLUDE "/Shared/preprocessor.include.ab3"
0000675E <hashmap.include.ab3@375> XINCLUDE "/Shared/preprocessor.include.ab3"
00006772 <hashmap.include.ab3@377> XINCLUDE "/Shared/preprocessor.include.ab3"
0000677C <hashmap.include.ab3@378> XINCLUDE "/Shared/preprocessor.include.ab3"
000067A0 <hashmap.include.ab3@379> XINCLUDE "/Shared/preprocessor.include.ab3"
000067D8 <hashmap.include.ab3@380> XINCLUDE "/Shared/preprocessor.include.ab3"
000067DE <hashmap.include.ab3@381> XINCLUDE "/Shared/preprocessor.include.ab3"
000067EA <hashmap.include.ab3@382> XINCLUDE "/Shared/preprocessor.include.ab3"
000067FE <hashmap.include.ab3@385> XINCLUDE "/Shared/preprocessor.include.ab3"
00006808 <hashmap.include.ab3@386> XINCLUDE "/Shared/preprocessor.include.ab3"
00006830 <hashmap.include.ab3@387> XINCLUDE "/Shared/preprocessor.include.ab3"
00006858 <hashmap.include.ab3@388> XINCLUDE "/Shared/preprocessor.include.ab3"
0000686A <hashmap.include.ab3@389> XINCLUDE "/Shared/preprocessor.include.ab3"
00006896 <hashmap.include.ab3@390> XINCLUDE "/Shared/preprocessor.include.ab3"
000068CA <hashmap.include.ab3@391> XINCLUDE "/Shared/preprocessor.include.ab3"
000068F6 <hashmap.include.ab3@392> XINCLUDE "/Shared/preprocessor.include.ab3"
00006942 <hashmap.include.ab3@393> XINCLUDE "/Shared/preprocessor.include.ab3"
00006952 <hashmap.include.ab3@395> XINCLUDE "/Shared/preprocessor.include.ab3"
00006958 <hashmap.include.ab3@397> XINCLUDE "/Shared/preprocessor.include.ab3"
00006964 <hashmap.include.ab3@398> XINCLUDE "/Shared/preprocessor.include.ab3"
00006992 <hashmap.include.ab3@401> XINCLUDE "/Shared/preprocessor.include.ab3"
00006994 <hashmap.include.ab3@403> XINCLUDE "/Shared/preprocessor.include.ab3"
0000699A <hashmap.include.ab3@404> XINCLUDE "/Shared/preprocessor.include.ab3"
000069A4 <hashmap.include.ab3@406> XINCLUDE "/Shared/preprocessor.include.ab3"
000069CE <hashmap.include.ab3@407> XINCLUDE "/Shared/preprocessor.include.ab3"
000069D8 <hashmap.include.ab3@410> XINCLUDE "/Shared/preprocessor.include.ab3"
000069DE <hashmap.include.ab3@412> XINCLUDE "/Shared/preprocessor.include.ab3"
00006A08 <hashmap.include.ab3@415> XINCLUDE "/Shared/preprocessor.include.ab3"
00006A10 <hashmap.include.ab3@417> XINCLUDE "/Shared/preprocessor.include.ab3"
00006A30 <hashmap.include.ab3@418> XINCLUDE "/Shared/preprocessor.include.ab3"
00006A3A <hashmap.include.ab3@419> XINCLUDE "/Shared/preprocessor.include.ab3"
00006A48 <hashmap.include.ab3@420> XINCLUDE "/Shared/preprocessor.include.ab3"
00006A58 <hashmap.include.ab3@421> XINCLUDE "/Shared/preprocessor.include.ab3"
00006A62 <hashmap.include.ab3@424> XINCLUDE "/Shared/preprocessor.include.ab3"
00006A7C <hashmap.include.ab3@426> XINCLUDE "/Shared/preprocessor.include.ab3"
00006A7C <preprocessor.include.ab3@11> XINCLUDE "/Shared/preprocessor.include.ab3"
00006A96 <preprocessor.include.ab3@29> XINCLUDE "/Shared/preprocessor.include.ab3"
00006AB0 <preprocessor.include.ab3@30> XINCLUDE "/Shared/preprocessor.include.ab3"
00006AD2 <preprocessor.include.ab3@31> XINCLUDE "/Shared/preprocessor.include.ab3"
00006B04 <preprocessor.include.ab3@32> XINCLUDE "/Shared/preprocessor.include.ab3"
00006B08 <preprocessor.include.ab3@33> XINCLUDE "/Shared/preprocessor.include.ab3"
00006B22 <preprocessor.include.ab3@36> XINCLUDE "/Shared/preprocessor.include.ab3"
00006B3C <preprocessor.include.ab3@37> XINCLUDE "/Shared/preprocessor.include.ab3"
00006B46 <preprocessor.include.ab3@38> XINCLUDE "/Shared/preprocessor.include.ab3"
00006B5C <preprocessor.include.ab3@39> XINCLUDE "/Shared/preprocessor.include.ab3"
00006B60 <preprocessor.include.ab3@40> XINCLUDE "/Shared/preprocessor.include.ab3"
00006B7A <preprocessor.include.ab3@43> XINCLUDE "/Shared/preprocessor.include.ab3"
00006B94 <preprocessor.include.ab3@44> XINCLUDE "/Shared/preprocessor.include.ab3"
00006BAE <preprocessor.include.ab3@45> XINCLUDE "/Shared/preprocessor.include.ab3"
00006BD2 <preprocessor.include.ab3@46> XINCLUDE "/Shared/preprocessor.include.ab3"
00006BD8 <preprocessor.include.ab3@47> XINCLUDE "/Shared/preprocessor.include.ab3"
00006C02 <preprocessor.include.ab3@48> XINCLUDE "/Shared/preprocessor.include.ab3"
00006C1C <preprocessor.include.ab3@49> XINCLUDE "/Shared/preprocessor.include.ab3"
00006C2C <preprocessor.include.ab3@50> XINCLUDE "/Shared/preprocessor.include.ab3"
00006C36 <preprocessor.include.ab3@53> XINCLUDE "/Shared/preprocessor.include.ab3"
00006C44 <preprocessor.include.ab3@54> XINCLUDE "/Shared/preprocessor.include.ab3"
00006C66 <preprocessor.include.ab3@55> XINCLUDE "/Shared/preprocessor.include.ab3"
00006C9A <preprocessor.include.ab3@56> XINCLUDE "/Shared/preprocessor.include.ab3"
00006CB6 <preprocessor.include.ab3@57> XINCLUDE "/Shared/preprocessor.include.ab3"
00006CC0 <preprocessor.include.ab3@58> XINCLUDE "/Shared/preprocessor.include.ab3"
00006CDC <preprocessor.include.ab3@59> XINCLUDE "/Shared/preprocessor.include.ab3"
00006CEA <preprocessor.include.ab3@60> XINCLUDE "/Shared/preprocessor.include.ab3"
00006CFE <preprocessor.include.ab3@61> XINCLUDE "/Shared/preprocessor.include.ab3"
00006D20 <preprocessor.include.ab3@62> XINCLUDE "/Shared/preprocessor.include.ab3"
00006D42 <preprocessor.include.ab3@63> XINCLUDE "/Shared/preprocessor.include.ab3"
00006D60 <preprocessor.include.ab3@64> XINCLUDE "/Shared/preprocessor.include.ab3"
00006D8E <preprocessor.include.ab3@65> XINCLUDE "/Shared/preprocessor.include.ab3"
00006D94 <preprocessor.include.ab3@66> XINCLUDE "/Shared/preprocessor.include.ab3"
00006DA4 <preprocessor.include.ab3@68> XINCLUDE "/Shared/preprocessor.include.ab3"
00006DA8 <preprocessor.include.ab3@70> XINCLUDE "/Shared/preprocessor.include.ab3"
00006DBE <preprocessor.include.ab3@73> XINCLUDE "/Shared/preprocessor.include.ab3"
00006DDE <preprocessor.include.ab3@74> XINCLUDE "/Shared/preprocessor.include.ab3"
00006DE8 <preprocessor.include.ab3@75> XINCLUDE "/Shared/preprocessor.include.ab3"
00006E12 <preprocessor.include.ab3@76> XINCLUDE "/Shared/preprocessor.include.ab3"
00006E28 <preprocessor.include.ab3@77> XINCLUDE "/Shared/preprocessor.include.ab3"
00006E38 <preprocessor.include.ab3@78> XINCLUDE "/Shared/preprocessor.include.ab3"
00006E54 <preprocessor.include.ab3@80> XINCLUDE "/Shared/preprocessor.include.ab3"
00006E70 <preprocessor.include.ab3@81> XINCLUDE "/Shared/preprocessor.include.ab3"
00006E8C <preprocessor.include.ab3@82> XINCLUDE "/Shared/preprocessor.include.ab3"
00006EA8 <preprocessor.include.ab3@83> XINCLUDE "/Shared/preprocessor.include.ab3"
00006EC4 <preprocessor.include.ab3@84> XINCLUDE "/Shared/preprocessor.include.ab3"
00006EE0 <preprocessor.include.ab3@85> XINCLUDE "/Shared/preprocessor.include.ab3"
00006EFC <preprocessor.include.ab3@86> XINCLUDE "/Shared/preprocessor.include.ab3"
00006F18 <preprocessor.include.ab3@87> XINCLUDE "/Shared/preprocessor.include.ab3"
00006F34 <preprocessor.include.ab3@88> XINCLUDE "/Shared/preprocessor.include.ab3"
00006F50 <preprocessor.include.ab3@89> XINCLUDE "/Shared/preprocessor.include.ab3"
00006F6C <preprocessor.include.ab3@90> XINCLUDE "/Shared/preprocessor.include.ab3"
00006F88 <preprocessor.include.ab3@91> XINCLUDE "/Shared/preprocessor.include.ab3"
00006FA4 <preprocessor.include.ab3@92> XINCLUDE "/Shared/preprocessor.include.ab3"
00006FC0 <preprocessor.include.ab3@93> XINCLUDE "/Shared/preprocessor.include.ab3"
00006FDC <preprocessor.include.ab3@94> XINCLUDE "/Shared/preprocessor.include.ab3"
00006FF8 <preprocessor.include.ab3@95> XINCLUDE "/Shared/preprocessor.include.ab3"
00007014 <preprocessor.include.ab3@96> XINCLUDE "/Shared/preprocessor.include.ab3"
00007030 <preprocessor.include.ab3@97> XINCLUDE "/Shared/preprocessor.include.ab3"
0000704C <preprocessor.include.ab3@98> XINCLUDE "/Shared/preprocessor.include.ab3"
00007068 <preprocessor.include.ab3@99> XINCLUDE "/Shared/preprocessor.include.ab3"
00007084 <preprocessor.include.ab3@100> XINCLUDE "/Shared/preprocessor.include.ab3"
000070A0 <preprocessor.include.ab3@101> XINCLUDE "/Shared/preprocessor.include.ab3"
000070BC <preprocessor.include.ab3@102> XINCLUDE "/Shared/preprocessor.include.ab3"
000070D8 <preprocessor.include.ab3@103> XINCLUDE "/Shared/preprocessor.include.ab3"
000070F4 <preprocessor.include.ab3@104> XINCLUDE "/Shared/preprocessor.include.ab3"
00007110 <preprocessor.include.ab3@105> XINCLUDE "/Shared/preprocessor.include.ab3"
0000712C <preprocessor.include.ab3@106> XINCLUDE "/Shared/preprocessor.include.ab3"
00007148 <preprocessor.include.ab3@107> XINCLUDE "/Shared/preprocessor.include.ab3"
00007164 <preprocessor.include.ab3@108> XINCLUDE "/Shared/preprocessor.include.ab3"
00007180 <preprocessor.include.ab3@109> XINCLUDE "/Shared/preprocessor.include.ab3"
0000719C <preprocessor.include.ab3@110> XINCLUDE "/Shared/preprocessor.include.ab3"
000071B8 <preprocessor.include.ab3@111> XINCLUDE "/Shared/preprocessor.include.ab3"
000071D4 <preprocessor.include.ab3@112> XINCLUDE "/Shared/preprocessor.include.ab3"
000071F0 <preprocessor.include.ab3@113> XINCLUDE "/Shared/preprocessor.include.ab3"
0000720C <preprocessor.include.ab3@114> XINCLUDE "/Shared/preprocessor.include.ab3"
00007228 <preprocessor.include.ab3@115> XINCLUDE "/Shared/preprocessor.include.ab3"
00007244 <preprocessor.include.ab3@116> XINCLUDE "/Shared/preprocessor.include.ab3"
00007260 <preprocessor.include.ab3@117> XINCLUDE "/Shared/preprocessor.include.ab3"
0000727C <preprocessor.include.ab3@118> XINCLUDE "/Shared/preprocessor.include.ab3"
00007298 <preprocessor.include.ab3@119> XINCLUDE "/Shared/preprocessor.include.ab3"
000072B4 <preprocessor.include.ab3@120> XINCLUDE "/Shared/preprocessor.include.ab3"
000072D0 <preprocessor.include.ab3@121> XINCLUDE "/Shared/preprocessor.include.ab3"
000072EC <preprocessor.include.ab3@122> XINCLUDE "/Shared/preprocessor.include.ab3"
00007308 <preprocessor.include.ab3@123> XINCLUDE "/Shared/preprocessor.include.ab3"
00007324 <preprocessor.include.ab3@124> XINCLUDE "/Shared/preprocessor.include.ab3"
00007340 <preprocessor.include.ab3@125> XINCLUDE "/Shared/preprocessor.include.ab3"
0000735C <preprocessor.include.ab3@126> XINCLUDE "/Shared/preprocessor.include.ab3"
00007378 <preprocessor.include.ab3@127> XINCLUDE "/Shared/preprocessor.include.ab3"
00007394 <preprocessor.include.ab3@128> XINCLUDE "/Shared/preprocessor.include.ab3"
000073B0 <preprocessor.include.ab3@129> XINCLUDE "/Shared/preprocessor.include.ab3"
000073CC <preprocessor.include.ab3@130> XINCLUDE "/Shared/preprocessor.include.ab3"
000073E8 <preprocessor.include.ab3@131> XINCLUDE "/Shared/preprocessor.include.ab3"
00007404 <preprocessor.include.ab3@132> XINCLUDE "/Shared/preprocessor.include.ab3"
00007420 <preprocessor.include.ab3@133> XINCLUDE "/Shared/preprocessor.include.ab3"
0000743C <preprocessor.include.ab3@134> XINCLUDE "/Shared/preprocessor.include.ab3"
00007458 <preprocessor.include.ab3@135> XINCLUDE "/Shared/preprocessor.include.ab3"
00007474 <preprocessor.include.ab3@136> XINCLUDE "/Shared/preprocessor.include.ab3"
00007490 <preprocessor.include.ab3@137> XINCLUDE "/Shared/preprocessor.include.ab3"
000074AC <preprocessor.include.ab3@138> XINCLUDE "/Shared/preprocessor.include.ab3"
000074C8 <preprocessor.include.ab3@139> XINCLUDE "/Shared/preprocessor.include.ab3"
000074E4 <preprocessor.include.ab3@140> XINCLUDE "/Shared/preprocessor.include.ab3"
00007500 <preprocessor.include.ab3@141> XINCLUDE "/Shared/preprocessor.include.ab3"
0000751C <preprocessor.include.ab3@142> XINCLUDE "/Shared/preprocessor.include.ab3"
00007538 <preprocessor.include.ab3@143> XINCLUDE "/Shared/preprocessor.include.ab3"
00007554 <preprocessor.include.ab3@144> XINCLUDE "/Shared/preprocessor.include.ab3"
00007570 <preprocessor.include.ab3@145> XINCLUDE "/Shared/preprocessor.include.ab3"
0000758C <preprocessor.include.ab3@146> XINCLUDE "/Shared/preprocessor.include.ab3"
000075A8 <preprocessor.include.ab3@147> XINCLUDE "/Shared/preprocessor.include.ab3"
000075C4 <preprocessor.include.ab3@148> XINCLUDE "/Shared/preprocessor.include.ab3"
000075E0 <preprocessor.include.ab3@149> XINCLUDE "/Shared/preprocessor.include.ab3"
000075FC <preprocessor.include.ab3@150> XINCLUDE "/Shared/preprocessor.include.ab3"
00007618 <preprocessor.include.ab3@151> XINCLUDE "/Shared/preprocessor.include.ab3"
00007634 <preprocessor.include.ab3@152> XINCLUDE "/Shared/preprocessor.include.ab3"
00007650 <preprocessor.include.ab3@153> XINCLUDE "/Shared/preprocessor.include.ab3"
0000766C <preprocessor.include.ab3@154> XINCLUDE "/Shared/preprocessor.include.ab3"
00007688 <preprocessor.include.ab3@155> XINCLUDE "/Shared/preprocessor.include.ab3"
000076A4 <preprocessor.include.ab3@156> XINCLUDE "/Shared/preprocessor.include.ab3"
000076C0 <preprocessor.include.ab3@157> XINCLUDE "/Shared/preprocessor.include.ab3"
000076DC <preprocessor.include.ab3@158> XINCLUDE "/Shared/preprocessor.include.ab3"
000076F8 <preprocessor.include.ab3@159> XINCLUDE "/Shared/preprocessor.include.ab3"
00007714 <preprocessor.include.ab3@160> XINCLUDE "/Shared/preprocessor.include.ab3"
00007730 <preprocessor.include.ab3@161> XINCLUDE "/Shared/preprocessor.include.ab3"
0000774C <preprocessor.include.ab3@162> XINCLUDE "/Shared/preprocessor.include.ab3"
00007768 <preprocessor.include.ab3@163> XINCLUDE "/Shared/preprocessor.include.ab3"
00007784 <preprocessor.include.ab3@164> XINCLUDE "/Shared/preprocessor.include.ab3"
000077A0 <preprocessor.include.ab3@165> XINCLUDE "/Shared/preprocessor.include.ab3"
000077BC <preprocessor.include.ab3@166> XINCLUDE "/Shared/preprocessor.include.ab3"
000077D8 <preprocessor.include.ab3@167> XINCLUDE "/Shared/preprocessor.include.ab3"
000077F4 <preprocessor.include.ab3@168> XINCLUDE "/Shared/preprocessor.include.ab3"
00007810 <preprocessor.include.ab3@169> XINCLUDE "/Shared/preprocessor.include.ab3"
0000782C <preprocessor.include.ab3@170> XINCLUDE "/Shared/preprocessor.include.ab3"
00007848 <preprocessor.include.ab3@171> XINCLUDE "/Shared/preprocessor.include.ab3"
00007864 <preprocessor.include.ab3@172> XINCLUDE "/Shared/preprocessor.include.ab3"
00007880 <preprocessor.include.ab3@173> XINCLUDE "/Shared/preprocessor.include.ab3"
0000789C <preprocessor.include.ab3@174> XINCLUDE "/Shared/preprocessor.include.ab3"
000078B8 <preprocessor.include.ab3@175> XINCLUDE "/Shared/preprocessor.include.ab3"
000078D4 <preprocessor.include.ab3@176> XINCLUDE "/Shared/preprocessor.include.ab3"
000078F0 <preprocessor.include.ab3@177> XINCLUDE "/Shared/preprocessor.include.ab3"
0000790C <preprocessor.include.ab3@178> XINCLUDE "/Shared/preprocessor.include.ab3"
00007928 <preprocessor.include.ab3@179> XINCLUDE "/Shared/preprocessor.include.ab3"
00007944 <preprocessor.include.ab3@180> XINCLUDE "/Shared/preprocessor.include.ab3"
00007960 <preprocessor.include.ab3@181> XINCLUDE "/Shared/preprocessor.include.ab3"
0000797C <preprocessor.include.ab3@182> XINCLUDE "/Shared/preprocessor.include.ab3"
00007998 <preprocessor.include.ab3@183> XINCLUDE "/Shared/preprocessor.include.ab3"
000079B4 <preprocessor.include.ab3@184> XINCLUDE "/Shared/preprocessor.include.ab3"
000079D0 <preprocessor.include.ab3@185> XINCLUDE "/Shared/preprocessor.include.ab3"
000079EC <preprocessor.include.ab3@186> XINCLUDE "/Shared/preprocessor.include.ab3"
00007A08 <preprocessor.include.ab3@187> XINCLUDE "/Shared/preprocessor.include.ab3"
00007A24 <preprocessor.include.ab3@188> XINCLUDE "/Shared/preprocessor.include.ab3"
00007A40 <preprocessor.include.ab3@189> XINCLUDE "/Shared/preprocessor.include.ab3"
00007A5C <preprocessor.include.ab3@190> XINCLUDE "/Shared/preprocessor.include.ab3"
00007A78 <preprocessor.include.ab3@191> XINCLUDE "/Shared/preprocessor.include.ab3"
00007A94 <preprocessor.include.ab3@192> XINCLUDE "/Shared/preprocessor.include.ab3"
00007AB0 <preprocessor.include.ab3@193> XINCLUDE "/Shared/preprocessor.include.ab3"
00007ACC <preprocessor.include.ab3@194> XINCLUDE "/Shared/preprocessor.include.ab3"
00007AE8 <preprocessor.include.ab3@195> XINCLUDE "/Shared/preprocessor.include.ab3"
00007B04 <preprocessor.include.ab3@196> XINCLUDE "/Shared/preprocessor.include.ab3"
00007B20 <preprocessor.include.ab3@197> XINCLUDE "/Shared/preprocessor.include.ab3"
00007B3C <preprocessor.include.ab3@198> XINCLUDE "/Shared/preprocessor.include.ab3"
00007B58 <preprocessor.include.ab3@199> XINCLUDE "/Shared/preprocessor.include.ab3"
00007B74 <preprocessor.include.ab3@200> XINCLUDE "/Shared/preprocessor.include.ab3"
00007B90 <preprocessor.include.ab3@201> XINCLUDE "/Shared/preprocessor.include.ab3"
00007BAC <preprocessor.include.ab3@202> XINCLUDE "/Shared/preprocessor.include.ab3"
00007BC8 <preprocessor.include.ab3@203> XINCLUDE "/Shared/preprocessor.include.ab3"
00007BE4 <preprocessor.include.ab3@204> XINCLUDE "/Shared/preprocessor.include.ab3"
00007C00 <preprocessor.include.ab3@205> XINCLUDE "/Shared/preprocessor.include.ab3"
00007C1C <preprocessor.include.ab3@206> XINCLUDE "/Shared/preprocessor.include.ab3"
00007C38 <preprocessor.include.ab3@207> XINCLUDE "/Shared/preprocessor.include.ab3"
00007C40 <preprocessor.include.ab3@208> XINCLUDE "/Shared/preprocessor.include.ab3"
00007C4A <preprocessor.include.ab3@209> XINCLUDE "/Shared/preprocessor.include.ab3"
00007C54 <preprocessor.include.ab3@211> XINCLUDE "/Shared/preprocessor.include.ab3"
00007C5A <preprocessor.include.ab3@212> XINCLUDE "/Shared/preprocessor.include.ab3"
00007C88 <preprocessor.include.ab3@247> XINCLUDE "/Shared/preprocessor.include.ab3"
00007CA4 <preprocessor.include.ab3@248> XINCLUDE "/Shared/preprocessor.include.ab3"
00007CD6 <preprocessor.include.ab3@249> XINCLUDE "/Shared/preprocessor.include.ab3"
00007CE0 <preprocessor.include.ab3@250> XINCLUDE "/Shared/preprocessor.include.ab3"
00007D02 <preprocessor.include.ab3@251> XINCLUDE "/Shared/preprocessor.include.ab3"
00007D0C <preprocessor.include.ab3@252> XINCLUDE "/Shared/preprocessor.include.ab3"
00007D16 <preprocessor.include.ab3@253> XINCLUDE "/Shared/preprocessor.include.ab3"
00007D20 <preprocessor.include.ab3@255> XINCLUDE "/Shared/preprocessor.include.ab3"
00007D3A <preprocessor.include.ab3@256> XINCLUDE "/Shared/preprocessor.include.ab3"
00007D68 <preprocessor.include.ab3@259> XINCLUDE "/Shared/preprocessor.include.ab3"
00007D84 <preprocessor.include.ab3@260> XINCLUDE "/Shared/preprocessor.include.ab3"
00007D92 <preprocessor.include.ab3@261> XINCLUDE "/Shared/preprocessor.include.ab3"
00007DCC <preprocessor.include.ab3@262> XINCLUDE "/Shared/preprocessor.include.ab3"
00007DD4 <preprocessor.include.ab3@264> XINCLUDE "/Shared/preprocessor.include.ab3"
00007DEE <preprocessor.include.ab3@265> XINCLUDE "/Shared/preprocessor.include.ab3"
00007E14 <preprocessor.include.ab3@272> XINCLUDE "/Shared/preprocessor.include.ab3"
00007E36 <preprocessor.include.ab3@273> XINCLUDE "/Shared/preprocessor.include.ab3"
00007E5A <preprocessor.include.ab3@274> XINCLUDE "/Shared/preprocessor.include.ab3"
00007E60 <preprocessor.include.ab3@275> XINCLUDE "/Shared/preprocessor.include.ab3"
00007E6E <preprocessor.include.ab3@276> XINCLUDE "/Shared/preprocessor.include.ab3"
00007E74 <preprocessor.include.ab3@277> XINCLUDE "/Shared/preprocessor.include.ab3"
00007E7C <preprocessor.include.ab3@278> XINCLUDE "/Shared/preprocessor.include.ab3"
00007E82 <preprocessor.include.ab3@279> XINCLUDE "/Shared/preprocessor.include.ab3"
00007E8A <preprocessor.include.ab3@280> XINCLUDE "/Shared/preprocessor.include.ab3"
00007E9E <preprocessor.include.ab3@282> XINCLUDE "/Shared/preprocessor.include.ab3"
00007EC4 <preprocessor.include.ab3@283> XINCLUDE "/Shared/preprocessor.include.ab3"
00007EEC <preprocessor.include.ab3@284> XINCLUDE "/Shared/preprocessor.include.ab3"
00007EF6 <preprocessor.include.ab3@286> XINCLUDE "/Shared/preprocessor.include.ab3"
00007F0A <preprocessor.include.ab3@287> XINCLUDE "/Shared/preprocessor.include.ab3"
00007F1E <preprocessor.include.ab3@288> XINCLUDE "/Shared/preprocessor.include.ab3"
00007F2E <preprocessor.include.ab3@289> XINCLUDE "/Shared/preprocessor.include.ab3"
00007F48 <preprocessor.include.ab3@290> XINCLUDE "/Shared/preprocessor.include.ab3"
00007F76 <preprocessor.include.ab3@291> XINCLUDE "/Shared/preprocessor.include.ab3"
00007F8A <preprocessor.include.ab3@292> XINCLUDE "/Shared/preprocessor.include.ab3"
00007FB2 <preprocessor.include.ab3@293> XINCLUDE "/Shared/preprocessor.include.ab3"
00007FB8 <preprocessor.include.ab3@294> XINCLUDE "/Shared/preprocessor.include.ab3"
00007FC0 <preprocessor.include.ab3@295> XINCLUDE "/Shared/preprocessor.include.ab3"
00007FC6 <preprocessor.include.ab3@297> XINCLUDE "/Shared/preprocessor.include.ab3"
00007FEE <preprocessor.include.ab3@298> XINCLUDE "/Shared/preprocessor.include.ab3"
00007FF8 <preprocessor.include.ab3@300> XINCLUDE "/Shared/preprocessor.include.ab3"
00008006 <preprocessor.include.ab3@301> XINCLUDE "/Shared/preprocessor.include.ab3"
00008024 <preprocessor.include.ab3@302> XINCLUDE "/Shared/preprocessor.include.ab3"
00008032 <preprocessor.include.ab3@303> XINCLUDE "/Shared/preprocessor.include.ab3"
0000803A <preprocessor.include.ab3@304> XINCLUDE "/Shared/preprocessor.include.ab3"
00008040 <preprocessor.include.ab3@305> XINCLUDE "/Shared/preprocessor.include.ab3"
00008054 <preprocessor.include.ab3@309> XINCLUDE "/Shared/preprocessor.include.ab3"
0000805E <preprocessor.include.ab3@310> XINCLUDE "/Shared/preprocessor.include.ab3"
0000806C <preprocessor.include.ab3@311> XINCLUDE "/Shared/preprocessor.include.ab3"
00008086 <preprocessor.include.ab3@312> XINCLUDE "/Shared/preprocessor.include.ab3"
0000808C <preprocessor.include.ab3@314> XINCLUDE "/Shared/preprocessor.include.ab3"
00008094 <preprocessor.include.ab3@315> XINCLUDE "/Shared/preprocessor.include.ab3"
0000809A <preprocessor.include.ab3@317> XINCLUDE "/Shared/preprocessor.include.ab3"
000080AE <preprocessor.include.ab3@318> XINCLUDE "/Shared/preprocessor.include.ab3"
000080B8 <preprocessor.include.ab3@319> XINCLUDE "/Shared/preprocessor.include.ab3"
000080C0 <preprocessor.include.ab3@320> XINCLUDE "/Shared/preprocessor.include.ab3"
000080D4 <preprocessor.include.ab3@321> XINCLUDE "/Shared/preprocessor.include.ab3"
000080E8 <preprocessor.include.ab3@326> XINCLUDE "/Shared/preprocessor.include.ab3"
000080FC <preprocessor.include.ab3@327> XINCLUDE "/Shared/preprocessor.include.ab3"
0000811A <preprocessor.include.ab3@329> XINCLUDE "/Shared/preprocessor.include.ab3"
00008128 <preprocessor.include.ab3@330> XINCLUDE "/Shared/preprocessor.include.ab3"
00008138 <preprocessor.include.ab3@331> XINCLUDE "/Shared/preprocessor.include.ab3"
00008160 <preprocessor.include.ab3@332> XINCLUDE "/Shared/preprocessor.include.ab3"
00008182 <preprocessor.include.ab3@333> XINCLUDE "/Shared/preprocessor.include.ab3"
00008196 <preprocessor.include.ab3@336> XINCLUDE "/Shared/preprocessor.include.ab3"
000081B4 <preprocessor.include.ab3@338> XINCLUDE "/Shared/preprocessor.include.ab3"
000081C2 <preprocessor.include.ab3@339> XINCLUDE "/Shared/preprocessor.include.ab3"
000081E8 <preprocessor.include.ab3@340> XINCLUDE "/Shared/preprocessor.include.ab3"
00008210 <preprocessor.include.ab3@341> XINCLUDE "/Shared/preprocessor.include.ab3"
00008232 <preprocessor.include.ab3@342> XINCLUDE "/Shared/preprocessor.include.ab3"
00008262 <preprocessor.include.ab3@345> XINCLUDE "/Shared/preprocessor.include.ab3"
00008290 <preprocessor.include.ab3@349> XINCLUDE "/Shared/preprocessor.include.ab3"
000082C2 <preprocessor.include.ab3@350> XINCLUDE "/Shared/preprocessor.include.ab3"
000082D0 <preprocessor.include.ab3@352> XINCLUDE "/Shared/preprocessor.include.ab3"
000082D6 <preprocessor.include.ab3@353> XINCLUDE "/Shared/preprocessor.include.ab3"
000082E6 <preprocessor.include.ab3@356> XINCLUDE "/Shared/preprocessor.include.ab3"
000082EC <preprocessor.include.ab3@357> XINCLUDE "/Shared/preprocessor.include.ab3"
00008312 <preprocessor.include.ab3@360> XINCLUDE "/Shared/preprocessor.include.ab3"
00008334 <preprocessor.include.ab3@361> XINCLUDE "/Shared/preprocessor.include.ab3"
0000835C <preprocessor.include.ab3@362> XINCLUDE "/Shared/preprocessor.include.ab3"
0000837C <preprocessor.include.ab3@363> XINCLUDE "/Shared/preprocessor.include.ab3"
0000839E <preprocessor.include.ab3@364> XINCLUDE "/Shared/preprocessor.include.ab3"
000083A4 <preprocessor.include.ab3@365> XINCLUDE "/Shared/preprocessor.include.ab3"
000083B2 <preprocessor.include.ab3@366> XINCLUDE "/Shared/preprocessor.include.ab3"
000083C0 <preprocessor.include.ab3@367> XINCLUDE "/Shared/preprocessor.include.ab3"
000083C6 <preprocessor.include.ab3@368> XINCLUDE "/Shared/preprocessor.include.ab3"
000083CE <preprocessor.include.ab3@369> XINCLUDE "/Shared/preprocessor.include.ab3"
000083EC <preprocessor.include.ab3@370> XINCLUDE "/Shared/preprocessor.include.ab3"
00008400 <preprocessor.include.ab3@371> XINCLUDE "/Shared/preprocessor.include.ab3"
00008410 <preprocessor.include.ab3@372> XINCLUDE "/Shared/preprocessor.include.ab3"
00008426 <preprocessor.include.ab3@374> XINCLUDE "/Shared/preprocessor.include.ab3"
0000843E <preprocessor.include.ab3@376> XINCLUDE "/Shared/preprocessor.include.ab3"
0000845A <preprocessor.include.ab3@377> XINCLUDE "/Shared/preprocessor.include.ab3"
00008464 <preprocessor.include.ab3@378> XINCLUDE "/Shared/preprocessor.include.ab3"
00008480 <preprocessor.include.ab3@379> XINCLUDE "/Shared/preprocessor.include.ab3"
00008492 <preprocessor.include.ab3@380> XINCLUDE "/Shared/preprocessor.include.ab3"
000084C0 <preprocessor.include.ab3@381> XINCLUDE "/Shared/preprocessor.include.ab3"
000084FC <preprocessor.include.ab3@382> XINCLUDE "/Shared/preprocessor.include.ab3"
0000850C <preprocessor.include.ab3@383> XINCLUDE "/Shared/preprocessor.include.ab3"
00008512 <preprocessor.include.ab3@384> XINCLUDE "/Shared/preprocessor.include.ab3"
00008518 <preprocessor.include.ab3@387> XINCLUDE "/Shared/preprocessor.include.ab3"
00008530 <preprocessor.include.ab3@388> XINCLUDE "/Shared/preprocessor.include.ab3"
00008540 <preprocessor.include.ab3@389> XINCLUDE "/Shared/preprocessor.include.ab3"
000085C6 <preprocessor.include.ab3@390> XINCLUDE "/Shared/preprocessor.include.ab3"
00008600 <preprocessor.include.ab3@391> XINCLUDE "/Shared/preprocessor.include.ab3"
00008636 <preprocessor.include.ab3@392> XINCLUDE "/Shared/preprocessor.include.ab3"
00008646 <preprocessor.include.ab3@393> XINCLUDE "/Shared/preprocessor.include.ab3"
00008654 <preprocessor.include.ab3@395> XINCLUDE "/Shared/preprocessor.include.ab3"
0000865A <preprocessor.include.ab3@396> XINCLUDE "/Shared/preprocessor.include.ab3"
0000866A <preprocessor.include.ab3@397> XINCLUDE "/Shared/preprocessor.include.ab3"
00008694 <preprocessor.include.ab3@398> XINCLUDE "/Shared/preprocessor.include.ab3"
0000869A <preprocessor.include.ab3@399> XINCLUDE "/Shared/preprocessor.include.ab3"
000086C6 <preprocessor.include.ab3@400> XINCLUDE "/Shared/preprocessor.include.ab3"
000086D6 <preprocessor.include.ab3@403> XINCLUDE "/Shared/preprocessor.include.ab3"
000086E6 <preprocessor.include.ab3@405> XINCLUDE "/Shared/preprocessor.include.ab3"
00008704 <preprocessor.include.ab3@406> XINCLUDE "/Shared/preprocessor.include.ab3"
00008712 <preprocessor.include.ab3@407> XINCLUDE "/Shared/preprocessor.include.ab3"
00008748 <preprocessor.include.ab3@408> XINCLUDE "/Shared/preprocessor.include.ab3"
0000876C <preprocessor.include.ab3@409> XINCLUDE "/Shared/preprocessor.include.ab3"
00008780 <preprocessor.include.ab3@412> XINCLUDE "/Shared/preprocessor.include.ab3"
00008790 <preprocessor.include.ab3@414> XINCLUDE "/Shared/preprocessor.include.ab3"
000087AE <preprocessor.include.ab3@415> XINCLUDE "/Shared/preprocessor.include.ab3"
000087BC <preprocessor.include.ab3@416> XINCLUDE "/Shared/preprocessor.include.ab3"
000087E0 <preprocessor.include.ab3@417> XINCLUDE "/Shared/preprocessor.include.ab3"
00008804 <preprocessor.include.ab3@418> XINCLUDE "/Shared/preprocessor.include.ab3"
00008812 <preprocessor.include.ab3@422> XINCLUDE "/Shared/preprocessor.include.ab3"
00008820 <preprocessor.include.ab3@423> XINCLUDE "/Shared/preprocessor.include.ab3"
00008840 <preprocessor.include.ab3@424> XINCLUDE "/Shared/preprocessor.include.ab3"
0000884E <preprocessor.include.ab3@425> XINCLUDE "/Shared/preprocessor.include.ab3"
00008854 <preprocessor.include.ab3@426> XINCLUDE "/Shared/preprocessor.include.ab3"
0000885A <preprocessor.include.ab3@429> XINCLUDE "/Shared/preprocessor.include.ab3"
00008868 <preprocessor.include.ab3@431> XINCLUDE "/Shared/preprocessor.include.ab3"
00008876 <preprocessor.include.ab3@432> XINCLUDE "/Shared/preprocessor.include.ab3"
00008896 <preprocessor.include.ab3@433> XINCLUDE "/Shared/preprocessor.include.ab3"
000088A4 <preprocessor.include.ab3@434> XINCLUDE "/Shared/preprocessor.include.ab3"
000088AA <preprocessor.include.ab3@435> XINCLUDE "/Shared/preprocessor.include.ab3"
000088BA <preprocessor.include.ab3@440> XINCLUDE "/Shared/preprocessor.include.ab3"
000088C4 <preprocessor.include.ab3@442> XINCLUDE "/Shared/preprocessor.include.ab3"
000088D8 <preprocessor.include.ab3@443> XINCLUDE "/Shared/preprocessor.include.ab3"
000088FE <preprocessor.include.ab3@448> XINCLUDE "/Shared/preprocessor.include.ab3"
00008920 <preprocessor.include.ab3@449> XINCLUDE "/Shared/preprocessor.include.ab3"
00008948 <preprocessor.include.ab3@450> XINCLUDE "/Shared/preprocessor.include.ab3"
0000894E <preprocessor.include.ab3@451> XINCLUDE "/Shared/preprocessor.include.ab3"
0000895C <preprocessor.include.ab3@452> XINCLUDE "/Shared/preprocessor.include.ab3"
00008962 <preprocessor.include.ab3@453> XINCLUDE "/Shared/preprocessor.include.ab3"
00008976 <preprocessor.include.ab3@454> XINCLUDE "/Shared/preprocessor.include.ab3"
00008986 <preprocessor.include.ab3@455> XINCLUDE "/Shared/preprocessor.include.ab3"
0000899C <preprocessor.include.ab3@457> XINCLUDE "/Shared/preprocessor.include.ab3"
000089B4 <preprocessor.include.ab3@459> XINCLUDE "/Shared/preprocessor.include.ab3"
000089D0 <preprocessor.include.ab3@460> XINCLUDE "/Shared/preprocessor.include.ab3"
000089DA <preprocessor.include.ab3@461> XINCLUDE "/Shared/preprocessor.include.ab3"
000089F6 <preprocessor.include.ab3@462> XINCLUDE "/Shared/preprocessor.include.ab3"
00008A24 <preprocessor.include.ab3@463> XINCLUDE "/Shared/preprocessor.include.ab3"
00008A60 <preprocessor.include.ab3@464> XINCLUDE "/Shared/preprocessor.include.ab3"
00008A70 <preprocessor.include.ab3@465> XINCLUDE "/Shared/preprocessor.include.ab3"
00008A7E <preprocessor.include.ab3@467> XINCLUDE "/Shared/preprocessor.include.ab3"
00008A84 <preprocessor.include.ab3@468> XINCLUDE "/Shared/preprocessor.include.ab3"
00008A94 <preprocessor.include.ab3@469> XINCLUDE "/Shared/preprocessor.include.ab3"
00008ABE <preprocessor.include.ab3@470> XINCLUDE "/Shared/preprocessor.include.ab3"
00008AC4 <preprocessor.include.ab3@471> XINCLUDE "/Shared/preprocessor.include.ab3"
00008AF0 <preprocessor.include.ab3@472> XINCLUDE "/Shared/preprocessor.include.ab3"
00008B00 <preprocessor.include.ab3@474> XINCLUDE "/Shared/preprocessor.include.ab3"
00008B10 <preprocessor.include.ab3@476> XINCLUDE "/Shared/preprocessor.include.ab3"
00008B2E <preprocessor.include.ab3@477> XINCLUDE "/Shared/preprocessor.include.ab3"
00008B3C <preprocessor.include.ab3@478> XINCLUDE "/Shared/preprocessor.include.ab3"
00008B72 <preprocessor.include.ab3@479> XINCLUDE "/Shared/preprocessor.include.ab3"
00008B96 <preprocessor.include.ab3@480> XINCLUDE "/Shared/preprocessor.include.ab3"
00008BAA <preprocessor.include.ab3@483> XINCLUDE "/Shared/preprocessor.include.ab3"
00008BBA <preprocessor.include.ab3@485> XINCLUDE "/Shared/preprocessor.include.ab3"
00008BD8 <preprocessor.include.ab3@486> XINCLUDE "/Shared/preprocessor.include.ab3"
00008BE6 <preprocessor.include.ab3@487> XINCLUDE "/Shared/preprocessor.include.ab3"
00008C0A <preprocessor.include.ab3@488> XINCLUDE "/Shared/preprocessor.include.ab3"
00008C2E <preprocessor.include.ab3@489> XINCLUDE "/Shared/preprocessor.include.ab3"
00008C34 <preprocessor.include.ab3@493> XINCLUDE "/Shared/preprocessor.include.ab3"
00008C44 <preprocessor.include.ab3@494> XINCLUDE "/Shared/preprocessor.include.ab3"
00008C4A <preprocessor.include.ab3@495> XINCLUDE "/Shared/preprocessor.include.ab3"
00008C6C <preprocessor.include.ab3@499> XINCLUDE "/Shared/preprocessor.include.ab3"
00008C74 <preprocessor.include.ab3@500> XINCLUDE "/Shared/preprocessor.include.ab3"
00008CAA <preprocessor.include.ab3@501> XINCLUDE "/Shared/preprocessor.include.ab3"
00008CC6 <preprocessor.include.ab3@502> XINCLUDE "/Shared/preprocessor.include.ab3"
00008CCC <preprocessor.include.ab3@503> XINCLUDE "/Shared/preprocessor.include.ab3"
00008D02 <preprocessor.include.ab3@507> XINCLUDE "/Shared/preprocessor.include.ab3"
00008D1E <preprocessor.include.ab3@508> XINCLUDE "/Shared/preprocessor.include.ab3"
00008D46 <preprocessor.include.ab3@509> XINCLUDE "/Shared/preprocessor.include.ab3"
00008D64 <preprocessor.include.ab3@510> XINCLUDE "/Shared/preprocessor.include.ab3"
00008D82 <preprocessor.include.ab3@511> XINCLUDE "/Shared/preprocessor.include.ab3"
00008DB0 <preprocessor.include.ab3@512> XINCLUDE "/Shared/preprocessor.include.ab3"
00008E12 <preprocessor.include.ab3@513> XINCLUDE "/Shared/preprocessor.include.ab3"
00008E2C <preprocessor.include.ab3@514> XINCLUDE "/Shared/preprocessor.include.ab3"
00008E46 <preprocessor.include.ab3@518> XINCLUDE "/Shared/preprocessor.include.ab3"
00008E50 <preprocessor.include.ab3@519> XINCLUDE "/Shared/preprocessor.include.ab3"
00008E8E <preprocessor.include.ab3@520> XINCLUDE "/Shared/preprocessor.include.ab3"
00008E92 <preprocessor.include.ab3@521> XINCLUDE "/Shared/preprocessor.include.ab3"
00008E9C <preprocessor.include.ab3@523> XINCLUDE "/Shared/preprocessor.include.ab3"
00008ECA <preprocessor.include.ab3@524> XINCLUDE "/Shared/preprocessor.include.ab3"
00008EEA <preprocessor.include.ab3@525> XINCLUDE "/Shared/preprocessor.include.ab3"
00008F02 <preprocessor.include.ab3@526> XINCLUDE "/Shared/preprocessor.include.ab3"
00008F60 <preprocessor.include.ab3@527> XINCLUDE "/Shared/preprocessor.include.ab3"
00008F8C <preprocessor.include.ab3@528> XINCLUDE "/Shared/preprocessor.include.ab3"
00008F9E <preprocessor.include.ab3@529> XINCLUDE "/Shared/preprocessor.include.ab3"
00008FAE <preprocessor.include.ab3@530> XINCLUDE "/Shared/preprocessor.include.ab3"
00008FC6 <preprocessor.include.ab3@531> XINCLUDE "/Shared/preprocessor.include.ab3"
00008FCC <preprocessor.include.ab3@533> XINCLUDE "/Shared/preprocessor.include.ab3"
00009006 <preprocessor.include.ab3@534> XINCLUDE "/Shared/preprocessor.include.ab3"
00009010 <preprocessor.include.ab3@536> XINCLUDE "/Shared/preprocessor.include.ab3"
00009016 <preprocessor.include.ab3@537> XINCLUDE "/Shared/preprocessor.include.ab3"
00009020 <preprocessor.include.ab3@538> XINCLUDE "/Shared/preprocessor.include.ab3"
00009032 <preprocessor.include.ab3@539> XINCLUDE "/Shared/preprocessor.include.ab3"
00009032 <AmiBlitz3.ab3@87> XINCLUDE "/Shared/preprocessor.include.ab3"
00009032 <logging.include.ab3@1> XINCLUDE "PE/logging.include.ab3"
00009032 <PE_Tools.include.ab3@1> XINCLUDE "PE/logging.include.ab3"
00009056 <PE_Tools.include.ab3@75> XINCLUDE "PE/logging.include.ab3"
0000905E <PE_Tools.include.ab3@84> XINCLUDE "PE/logging.include.ab3"
0000908C <PE_Tools.include.ab3@85> XINCLUDE "PE/logging.include.ab3"
000090BA <PE_Tools.include.ab3@86> XINCLUDE "PE/logging.include.ab3"
0000912A <PE_Tools.include.ab3@87> XINCLUDE "PE/logging.include.ab3"
00009138 <PE_Tools.include.ab3@88> XINCLUDE "PE/logging.include.ab3"
00009188 <PE_Tools.include.ab3@89> XINCLUDE "PE/logging.include.ab3"
00009188 <logging.include.ab3@11> XINCLUDE "PE/logging.include.ab3"
00009188 <file.include.ab3@1> XINCLUDE "PE/logging.include.ab3"
00009188 <asl.include.ab3@1> XINCLUDE "PE/logging.include.ab3"
000091AC <asl.include.ab3@93> XINCLUDE "PE/logging.include.ab3"
000091D4 <asl.include.ab3@94> XINCLUDE "PE/logging.include.ab3"
000091F8 <asl.include.ab3@95> XINCLUDE "PE/logging.include.ab3"
00009226 <asl.include.ab3@294> XINCLUDE "PE/logging.include.ab3"
00009444 <asl.include.ab3@296> XINCLUDE "PE/logging.include.ab3"
00009472 <asl.include.ab3@298> XINCLUDE "PE/logging.include.ab3"
0000949E <asl.include.ab3@300> XINCLUDE "PE/logging.include.ab3"
000094DA <asl.include.ab3@301> XINCLUDE "PE/logging.include.ab3"
00009506 <asl.include.ab3@302> XINCLUDE "PE/logging.include.ab3"
00009532 <asl.include.ab3@303> XINCLUDE "PE/logging.include.ab3"
0000955E <asl.include.ab3@304> XINCLUDE "PE/logging.include.ab3"
0000958A <asl.include.ab3@305> XINCLUDE "PE/logging.include.ab3"
000095B6 <asl.include.ab3@306> XINCLUDE "PE/logging.include.ab3"
000095E2 <asl.include.ab3@307> XINCLUDE "PE/logging.include.ab3"
0000960E <asl.include.ab3@308> XINCLUDE "PE/logging.include.ab3"
0000963A <asl.include.ab3@309> XINCLUDE "PE/logging.include.ab3"
000096C4 <asl.include.ab3@311> XINCLUDE "PE/logging.include.ab3"
0000974E <asl.include.ab3@312> XINCLUDE "PE/logging.include.ab3"
000097EC <asl.include.ab3@313> XINCLUDE "PE/logging.include.ab3"
00009836 <asl.include.ab3@314> XINCLUDE "PE/logging.include.ab3"
00009876 <asl.include.ab3@315> XINCLUDE "PE/logging.include.ab3"
0000987C <asl.include.ab3@316> XINCLUDE "PE/logging.include.ab3"
000098C6 <asl.include.ab3@319> XINCLUDE "PE/logging.include.ab3"
00009906 <asl.include.ab3@320> XINCLUDE "PE/logging.include.ab3"
00009930 <asl.include.ab3@321> XINCLUDE "PE/logging.include.ab3"
00009936 <asl.include.ab3@322> XINCLUDE "PE/logging.include.ab3"
00009960 <asl.include.ab3@323> XINCLUDE "PE/logging.include.ab3"
0000998A <asl.include.ab3@325> XINCLUDE "PE/logging.include.ab3"
000099B4 <asl.include.ab3@327> XINCLUDE "PE/logging.include.ab3"
000099BE <asl.include.ab3@328> XINCLUDE "PE/logging.include.ab3"
000099DC <asl.include.ab3@329> XINCLUDE "PE/logging.include.ab3"
000099FE <asl.include.ab3@330> XINCLUDE "PE/logging.include.ab3"
00009A2C <asl.include.ab3@331> XINCLUDE "PE/logging.include.ab3"
00009A5A <asl.include.ab3@332> XINCLUDE "PE/logging.include.ab3"
00009A88 <asl.include.ab3@333> XINCLUDE "PE/logging.include.ab3"
00009ACE <asl.include.ab3@336> XINCLUDE "PE/logging.include.ab3"
00009B14 <asl.include.ab3@337> XINCLUDE "PE/logging.include.ab3"
00009B5A <asl.include.ab3@338> XINCLUDE "PE/logging.include.ab3"
00009B92 <asl.include.ab3@340> XINCLUDE "PE/logging.include.ab3"
00009C90 <asl.include.ab3@341> XINCLUDE "PE/logging.include.ab3"
00009CAE <asl.include.ab3@343> XINCLUDE "PE/logging.include.ab3"
00009CB8 <asl.include.ab3@345> XINCLUDE "PE/logging.include.ab3"
00009CDE <asl.include.ab3@346> XINCLUDE "PE/logging.include.ab3"
00009CF0 <asl.include.ab3@348> XINCLUDE "PE/logging.include.ab3"
00009D1E <asl.include.ab3@349> XINCLUDE "PE/logging.include.ab3"
00009D46 <asl.include.ab3@350> XINCLUDE "PE/logging.include.ab3"
00009D58 <asl.include.ab3@351> XINCLUDE "PE/logging.include.ab3"
00009DAE <asl.include.ab3@352> XINCLUDE "PE/logging.include.ab3"
00009DE4 <asl.include.ab3@353> XINCLUDE "PE/logging.include.ab3"
00009DF4 <asl.include.ab3@355> XINCLUDE "PE/logging.include.ab3"
00009DFA <asl.include.ab3@356> XINCLUDE "PE/logging.include.ab3"
00009E0C <asl.include.ab3@357> XINCLUDE "PE/logging.include.ab3"
00009E16 <asl.include.ab3@358> XINCLUDE "PE/logging.include.ab3"
00009E50 <asl.include.ab3@359> XINCLUDE "PE/logging.include.ab3"
00009E56 <asl.include.ab3@360> XINCLUDE "PE/logging.include.ab3"
00009EAE <asl.include.ab3@361> XINCLUDE "PE/logging.include.ab3"
00009ECC <asl.include.ab3@363> XINCLUDE "PE/logging.include.ab3"
00009ED2 <asl.include.ab3@366> XINCLUDE "PE/logging.include.ab3"
00009EE2 <asl.include.ab3@369> XINCLUDE "PE/logging.include.ab3"
00009EF2 <asl.include.ab3@370> XINCLUDE "PE/logging.include.ab3"
00009F02 <asl.include.ab3@371> XINCLUDE "PE/logging.include.ab3"
00009F12 <asl.include.ab3@372> XINCLUDE "PE/logging.include.ab3"
00009F22 <asl.include.ab3@374> XINCLUDE "PE/logging.include.ab3"
00009F2C <asl.include.ab3@376> XINCLUDE "PE/logging.include.ab3"
00009F40 <asl.include.ab3@377> XINCLUDE "PE/logging.include.ab3"
00009F56 <asl.include.ab3@393> XINCLUDE "PE/logging.include.ab3"
00009F7E <asl.include.ab3@395> XINCLUDE "PE/logging.include.ab3"
00009F88 <asl.include.ab3@396> XINCLUDE "PE/logging.include.ab3"
00009F9A <asl.include.ab3@397> XINCLUDE "PE/logging.include.ab3"
00009FD4 <asl.include.ab3@398> XINCLUDE "PE/logging.include.ab3"
00009FDE <asl.include.ab3@399> XINCLUDE "PE/logging.include.ab3"
0000A008 <asl.include.ab3@401> XINCLUDE "PE/logging.include.ab3"
0000A020 <asl.include.ab3@402> XINCLUDE "PE/logging.include.ab3"
0000A072 <asl.include.ab3@438> XINCLUDE "PE/logging.include.ab3"
0000A0A0 <asl.include.ab3@440> XINCLUDE "PE/logging.include.ab3"
0000A132 <asl.include.ab3@441> XINCLUDE "PE/logging.include.ab3"
0000A178 <asl.include.ab3@442> XINCLUDE "PE/logging.include.ab3"
0000A20A <asl.include.ab3@443> XINCLUDE "PE/logging.include.ab3"
0000A224 <asl.include.ab3@444> XINCLUDE "PE/logging.include.ab3"
0000A224 <file.include.ab3@57> XINCLUDE "PE/logging.include.ab3"
0000A23A <file.include.ab3@66> XINCLUDE "PE/logging.include.ab3"
0000A250 <file.include.ab3@67> XINCLUDE "PE/logging.include.ab3"
0000A266 <file.include.ab3@68> XINCLUDE "PE/logging.include.ab3"
0000A27C <file.include.ab3@70> XINCLUDE "PE/logging.include.ab3"
0000A288 <file.include.ab3@72> XINCLUDE "PE/logging.include.ab3"
0000A294 <file.include.ab3@73> XINCLUDE "PE/logging.include.ab3"
0000A2A0 <file.include.ab3@74> XINCLUDE "PE/logging.include.ab3"
0000A2AC <file.include.ab3@75> XINCLUDE "PE/logging.include.ab3"
0000A2D4 <file.include.ab3@77> XINCLUDE "PE/logging.include.ab3"
0000A2FC <file.include.ab3@78> XINCLUDE "PE/logging.include.ab3"
0000A324 <file.include.ab3@79> XINCLUDE "PE/logging.include.ab3"
0000A348 <file.include.ab3@109> XINCLUDE "PE/logging.include.ab3"
0000A36C <file.include.ab3@110> XINCLUDE "PE/logging.include.ab3"
0000A386 <file.include.ab3@156> XINCLUDE "PE/logging.include.ab3"
0000A396 <file.include.ab3@157> XINCLUDE "PE/logging.include.ab3"
0000A398 <file.include.ab3@158> XINCLUDE "PE/logging.include.ab3"
0000A39A <file.include.ab3@159> XINCLUDE "PE/logging.include.ab3"
0000A39C <file.include.ab3@160> XINCLUDE "PE/logging.include.ab3"
0000A39E <file.include.ab3@161> XINCLUDE "PE/logging.include.ab3"
0000A3A0 <file.include.ab3@162> XINCLUDE "PE/logging.include.ab3"
0000A3A4 <file.include.ab3@163> XINCLUDE "PE/logging.include.ab3"
0000A3A8 <file.include.ab3@164> XINCLUDE "PE/logging.include.ab3"
0000A3AC <file.include.ab3@165> XINCLUDE "PE/logging.include.ab3"
0000A3AE <file.include.ab3@166> XINCLUDE "PE/logging.include.ab3"
0000A3B0 <file.include.ab3@167> XINCLUDE "PE/logging.include.ab3"
0000A3B2 <file.include.ab3@168> XINCLUDE "PE/logging.include.ab3"
0000A3B4 <file.include.ab3@169> XINCLUDE "PE/logging.include.ab3"
0000A3B6 <file.include.ab3@170> XINCLUDE "PE/logging.include.ab3"
0000A3B8 <file.include.ab3@171> XINCLUDE "PE/logging.include.ab3"
0000A3BA <file.include.ab3@172> XINCLUDE "PE/logging.include.ab3"
0000A3C4 <file.include.ab3@173> XINCLUDE "PE/logging.include.ab3"
0000A3CA <file.include.ab3@174> XINCLUDE "PE/logging.include.ab3"
0000A3E4 <file.include.ab3@215> XINCLUDE "PE/logging.include.ab3"
0000A402 <file.include.ab3@217> XINCLUDE "PE/logging.include.ab3"
0000A408 <file.include.ab3@218> XINCLUDE "PE/logging.include.ab3"
0000A422 <file.include.ab3@237> XINCLUDE "PE/logging.include.ab3"
0000A43E <file.include.ab3@239> XINCLUDE "PE/logging.include.ab3"
0000A464 <file.include.ab3@240> XINCLUDE "PE/logging.include.ab3"
0000A484 <file.include.ab3@241> XINCLUDE "PE/logging.include.ab3"
0000A48E <file.include.ab3@242> XINCLUDE "PE/logging.include.ab3"
0000A4BA <file.include.ab3@243> XINCLUDE "PE/logging.include.ab3"
0000A4DC <file.include.ab3@244> XINCLUDE "PE/logging.include.ab3"
0000A4F6 <file.include.ab3@245> XINCLUDE "PE/logging.include.ab3"
0000A4FC <file.include.ab3@248> XINCLUDE "PE/logging.include.ab3"
0000A536 <file.include.ab3@249> XINCLUDE "PE/logging.include.ab3"
0000A554 <file.include.ab3@251> XINCLUDE "PE/logging.include.ab3"
0000A55A <file.include.ab3@252> XINCLUDE "PE/logging.include.ab3"
0000A578 <file.include.ab3@271> XINCLUDE "PE/logging.include.ab3"
0000A57E <file.include.ab3@273> XINCLUDE "PE/logging.include.ab3"
0000A5A0 <file.include.ab3@274> XINCLUDE "PE/logging.include.ab3"
0000A5C0 <file.include.ab3@275> XINCLUDE "PE/logging.include.ab3"
0000A5F8 <file.include.ab3@276> XINCLUDE "PE/logging.include.ab3"
0000A614 <file.include.ab3@277> XINCLUDE "PE/logging.include.ab3"
0000A61A <file.include.ab3@278> XINCLUDE "PE/logging.include.ab3"
0000A620 <file.include.ab3@279> XINCLUDE "PE/logging.include.ab3"
0000A626 <file.include.ab3@281> XINCLUDE "PE/logging.include.ab3"
0000A62C <file.include.ab3@282> XINCLUDE "PE/logging.include.ab3"
0000A648 <file.include.ab3@283> XINCLUDE "PE/logging.include.ab3"
0000A694 <file.include.ab3@285> XINCLUDE "PE/logging.include.ab3"
0000A69A <file.include.ab3@286> XINCLUDE "PE/logging.include.ab3"
0000A6D4 <file.include.ab3@287> XINCLUDE "PE/logging.include.ab3"
0000A6E0 <file.include.ab3@288> XINCLUDE "PE/logging.include.ab3"
0000A6FC <file.include.ab3@289> XINCLUDE "PE/logging.include.ab3"
0000A702 <file.include.ab3@291> XINCLUDE "PE/logging.include.ab3"
0000A73C <file.include.ab3@292> XINCLUDE "PE/logging.include.ab3"
0000A746 <file.include.ab3@296> XINCLUDE "PE/logging.include.ab3"
0000A74C <file.include.ab3@297> XINCLUDE "PE/logging.include.ab3"
0000A76A <file.include.ab3@316> XINCLUDE "PE/logging.include.ab3"
0000A798 <file.include.ab3@318> XINCLUDE "PE/logging.include.ab3"
0000A79E <file.include.ab3@319> XINCLUDE "PE/logging.include.ab3"
0000A7B4 <file.include.ab3@335> XINCLUDE "PE/logging.include.ab3"
0000A7BC <file.include.ab3@337> XINCLUDE "PE/logging.include.ab3"
0000A818 <file.include.ab3@338> XINCLUDE "PE/logging.include.ab3"
0000A826 <file.include.ab3@339> XINCLUDE "PE/logging.include.ab3"
0000A82C <file.include.ab3@340> XINCLUDE "PE/logging.include.ab3"
0000A85E <file.include.ab3@341> XINCLUDE "PE/logging.include.ab3"
0000A868 <file.include.ab3@342> XINCLUDE "PE/logging.include.ab3"
0000A86E <file.include.ab3@343> XINCLUDE "PE/logging.include.ab3"
0000A888 <file.include.ab3@397> XINCLUDE "PE/logging.include.ab3"
0000A89A <file.include.ab3@399> XINCLUDE "PE/logging.include.ab3"
0000A8F8 <file.include.ab3@400> XINCLUDE "PE/logging.include.ab3"
0000A932 <file.include.ab3@401> XINCLUDE "PE/logging.include.ab3"
0000A96C <file.include.ab3@402> XINCLUDE "PE/logging.include.ab3"
0000A98A <file.include.ab3@403> XINCLUDE "PE/logging.include.ab3"
0000A9A8 <file.include.ab3@404> XINCLUDE "PE/logging.include.ab3"
0000A9BE <file.include.ab3@405> XINCLUDE "PE/logging.include.ab3"
0000A9DA <file.include.ab3@406> XINCLUDE "PE/logging.include.ab3"
0000A9F4 <file.include.ab3@407> XINCLUDE "PE/logging.include.ab3"
0000AA72 <file.include.ab3@408> XINCLUDE "PE/logging.include.ab3"
0000AA84 <file.include.ab3@410> XINCLUDE "PE/logging.include.ab3"
0000AA9A <file.include.ab3@422> XINCLUDE "PE/logging.include.ab3"
0000AAC4 <file.include.ab3@424> XINCLUDE "PE/logging.include.ab3"
0000AACE <file.include.ab3@425> XINCLUDE "PE/logging.include.ab3"
0000AADE <file.include.ab3@426> XINCLUDE "PE/logging.include.ab3"
0000AAE2 <file.include.ab3@427> XINCLUDE "PE/logging.include.ab3"
0000AB10 <file.include.ab3@428> XINCLUDE "PE/logging.include.ab3"
0000AB2A <file.include.ab3@447> XINCLUDE "PE/logging.include.ab3"
0000AB3C <file.include.ab3@449> XINCLUDE "PE/logging.include.ab3"
0000AB5C <file.include.ab3@450> XINCLUDE "PE/logging.include.ab3"
0000AB72 <file.include.ab3@451> XINCLUDE "PE/logging.include.ab3"
0000ABAA <file.include.ab3@452> XINCLUDE "PE/logging.include.ab3"
0000ABD4 <file.include.ab3@453> XINCLUDE "PE/logging.include.ab3"
0000ABFE <file.include.ab3@456> XINCLUDE "PE/logging.include.ab3"
0000AC16 <file.include.ab3@457> XINCLUDE "PE/logging.include.ab3"
0000AC2C <file.include.ab3@525> XINCLUDE "PE/logging.include.ab3"
0000AC74 <file.include.ab3@527> XINCLUDE "PE/logging.include.ab3"
0000AC94 <file.include.ab3@528> XINCLUDE "PE/logging.include.ab3"
0000AC9C <file.include.ab3@529> XINCLUDE "PE/logging.include.ab3"
0000ACDA <file.include.ab3@568> XINCLUDE "PE/logging.include.ab3"
0000ACE6 <file.include.ab3@570> XINCLUDE "PE/logging.include.ab3"
0000ACF0 <file.include.ab3@571> XINCLUDE "PE/logging.include.ab3"
0000AD02 <file.include.ab3@572> XINCLUDE "PE/logging.include.ab3"
0000AD08 <file.include.ab3@573> XINCLUDE "PE/logging.include.ab3"
0000AD16 <file.include.ab3@574> XINCLUDE "PE/logging.include.ab3"
0000AD3E <file.include.ab3@575> XINCLUDE "PE/logging.include.ab3"
0000AD52 <file.include.ab3@576> XINCLUDE "PE/logging.include.ab3"
0000AD7A <file.include.ab3@577> XINCLUDE "PE/logging.include.ab3"
0000AD8E <file.include.ab3@578> XINCLUDE "PE/logging.include.ab3"
0000ADB6 <file.include.ab3@579> XINCLUDE "PE/logging.include.ab3"
0000ADCA <file.include.ab3@580> XINCLUDE "PE/logging.include.ab3"
0000ADF2 <file.include.ab3@581> XINCLUDE "PE/logging.include.ab3"
0000ADF4 <file.include.ab3@582> XINCLUDE "PE/logging.include.ab3"
0000AE18 <file.include.ab3@584> XINCLUDE "PE/logging.include.ab3"
0000AE50 <file.include.ab3@586> XINCLUDE "PE/logging.include.ab3"
0000AEDA <file.include.ab3@587> XINCLUDE "PE/logging.include.ab3"
0000AF02 <file.include.ab3@588> XINCLUDE "PE/logging.include.ab3"
0000AF32 <file.include.ab3@589> XINCLUDE "PE/logging.include.ab3"
0000AF6A <file.include.ab3@593> XINCLUDE "PE/logging.include.ab3"
0000AFC2 <file.include.ab3@594> XINCLUDE "PE/logging.include.ab3"
0000B01A <file.include.ab3@595> XINCLUDE "PE/logging.include.ab3"
0000B09A <file.include.ab3@597> XINCLUDE "PE/logging.include.ab3"
0000B0CE <file.include.ab3@598> XINCLUDE "PE/logging.include.ab3"
0000B102 <file.include.ab3@599> XINCLUDE "PE/logging.include.ab3"
0000B108 <file.include.ab3@600> XINCLUDE "PE/logging.include.ab3"
0000B116 <file.include.ab3@601> XINCLUDE "PE/logging.include.ab3"
0000B14A <file.include.ab3@602> XINCLUDE "PE/logging.include.ab3"
0000B172 <file.include.ab3@603> XINCLUDE "PE/logging.include.ab3"
0000B22A <file.include.ab3@604> XINCLUDE "PE/logging.include.ab3"
0000B2AA <file.include.ab3@605> XINCLUDE "PE/logging.include.ab3"
0000B2DE <file.include.ab3@606> XINCLUDE "PE/logging.include.ab3"
0000B2FE <file.include.ab3@608> XINCLUDE "PE/logging.include.ab3"
0000B304 <file.include.ab3@609> XINCLUDE "PE/logging.include.ab3"
0000B30A <file.include.ab3@610> XINCLUDE "PE/logging.include.ab3"
0000B3DA <file.include.ab3@611> XINCLUDE "PE/logging.include.ab3"
0000B3EE <file.include.ab3@614> XINCLUDE "PE/logging.include.ab3"
0000B4A6 <file.include.ab3@615> XINCLUDE "PE/logging.include.ab3"
0000B526 <file.include.ab3@616> XINCLUDE "PE/logging.include.ab3"
0000B616 <file.include.ab3@617> XINCLUDE "PE/logging.include.ab3"
0000B620 <file.include.ab3@618> XINCLUDE "PE/logging.include.ab3"
0000B654 <file.include.ab3@619> XINCLUDE "PE/logging.include.ab3"
0000B674 <file.include.ab3@620> XINCLUDE "PE/logging.include.ab3"
0000B67A <file.include.ab3@621> XINCLUDE "PE/logging.include.ab3"
0000B680 <file.include.ab3@622> XINCLUDE "PE/logging.include.ab3"
0000B750 <file.include.ab3@623> XINCLUDE "PE/logging.include.ab3"
0000B764 <file.include.ab3@627> XINCLUDE "PE/logging.include.ab3"
0000B798 <file.include.ab3@628> XINCLUDE "PE/logging.include.ab3"
0000B7C0 <file.include.ab3@629> XINCLUDE "PE/logging.include.ab3"
0000B878 <file.include.ab3@630> XINCLUDE "PE/logging.include.ab3"
0000B8F8 <file.include.ab3@631> XINCLUDE "PE/logging.include.ab3"
0000B92C <file.include.ab3@632> XINCLUDE "PE/logging.include.ab3"
0000B94C <file.include.ab3@635> XINCLUDE "PE/logging.include.ab3"
0000B952 <file.include.ab3@636> XINCLUDE "PE/logging.include.ab3"
0000B958 <file.include.ab3@637> XINCLUDE "PE/logging.include.ab3"
0000BA28 <file.include.ab3@638> XINCLUDE "PE/logging.include.ab3"
0000BA3C <file.include.ab3@641> XINCLUDE "PE/logging.include.ab3"
0000BAF4 <file.include.ab3@642> XINCLUDE "PE/logging.include.ab3"
0000BB74 <file.include.ab3@643> XINCLUDE "PE/logging.include.ab3"
0000BBA8 <file.include.ab3@644> XINCLUDE "PE/logging.include.ab3"
0000BBC8 <file.include.ab3@645> XINCLUDE "PE/logging.include.ab3"
0000BBCE <file.include.ab3@646> XINCLUDE "PE/logging.include.ab3"
0000BBD4 <file.include.ab3@647> XINCLUDE "PE/logging.include.ab3"
0000BCA4 <file.include.ab3@648> XINCLUDE "PE/logging.include.ab3"
0000BCAA <file.include.ab3@651> XINCLUDE "PE/logging.include.ab3"
0000BCE4 <file.include.ab3@652> XINCLUDE "PE/logging.include.ab3"
0000BCE6 <file.include.ab3@653> XINCLUDE "PE/logging.include.ab3"
0000BCEC <file.include.ab3@655> XINCLUDE "PE/logging.include.ab3"
0000BD84 <file.include.ab3@656> XINCLUDE "PE/logging.include.ab3"
0000BD96 <file.include.ab3@659> XINCLUDE "PE/logging.include.ab3"
0000BDAC <file.include.ab3@660> XINCLUDE "PE/logging.include.ab3"
0000BE16 <file.include.ab3@661> XINCLUDE "PE/logging.include.ab3"
0000BE80 <file.include.ab3@662> XINCLUDE "PE/logging.include.ab3"
0000BE9A <file.include.ab3@663> XINCLUDE "PE/logging.include.ab3"
0000BEB6 <file.include.ab3@664> XINCLUDE "PE/logging.include.ab3"
0000BED4 <file.include.ab3@665> XINCLUDE "PE/logging.include.ab3"
0000BEEE <file.include.ab3@666> XINCLUDE "PE/logging.include.ab3"
0000BEF8 <file.include.ab3@668> XINCLUDE "PE/logging.include.ab3"
0000BF14 <file.include.ab3@669> XINCLUDE "PE/logging.include.ab3"
0000BF36 <file.include.ab3@805> XINCLUDE "PE/logging.include.ab3"
0000BF3C <file.include.ab3@807> XINCLUDE "PE/logging.include.ab3"
0000BF62 <file.include.ab3@808> XINCLUDE "PE/logging.include.ab3"
0000BF7E <file.include.ab3@809> XINCLUDE "PE/logging.include.ab3"
0000BF90 <file.include.ab3@810> XINCLUDE "PE/logging.include.ab3"
0000BFEE <file.include.ab3@811> XINCLUDE "PE/logging.include.ab3"
0000C026 <file.include.ab3@812> XINCLUDE "PE/logging.include.ab3"
0000C02C <file.include.ab3@813> XINCLUDE "PE/logging.include.ab3"
0000C074 <file.include.ab3@814> XINCLUDE "PE/logging.include.ab3"
0000C08E <file.include.ab3@815> XINCLUDE "PE/logging.include.ab3"
0000C09C <file.include.ab3@818> XINCLUDE "PE/logging.include.ab3"
0000C0A2 <file.include.ab3@819> XINCLUDE "PE/logging.include.ab3"
0000C0A8 <file.include.ab3@820> XINCLUDE "PE/logging.include.ab3"
0000C0BA <file.include.ab3@821> XINCLUDE "PE/logging.include.ab3"
0000C1A6 <file.include.ab3@822> XINCLUDE "PE/logging.include.ab3"
0000C1AC <file.include.ab3@823> XINCLUDE "PE/logging.include.ab3"
0000C1F2 <file.include.ab3@824> XINCLUDE "PE/logging.include.ab3"
0000C1FE <file.include.ab3@825> XINCLUDE "PE/logging.include.ab3"
0000C264 <file.include.ab3@826> XINCLUDE "PE/logging.include.ab3"
0000C2AA <file.include.ab3@827> XINCLUDE "PE/logging.include.ab3"
0000C2F2 <file.include.ab3@830> XINCLUDE "PE/logging.include.ab3"
0000C35A <file.include.ab3@831> XINCLUDE "PE/logging.include.ab3"
0000C360 <file.include.ab3@832> XINCLUDE "PE/logging.include.ab3"
0000C39A <file.include.ab3@833> XINCLUDE "PE/logging.include.ab3"
0000C3A0 <file.include.ab3@835> XINCLUDE "PE/logging.include.ab3"
0000C402 <file.include.ab3@836> XINCLUDE "PE/logging.include.ab3"
0000C40C <file.include.ab3@838> XINCLUDE "PE/logging.include.ab3"
0000C420 <file.include.ab3@839> XINCLUDE "PE/logging.include.ab3"
0000C43A <file.include.ab3@841> XINCLUDE "PE/logging.include.ab3"
0000C440 <file.include.ab3@843> XINCLUDE "PE/logging.include.ab3"
0000C466 <file.include.ab3@844> XINCLUDE "PE/logging.include.ab3"
0000C482 <file.include.ab3@845> XINCLUDE "PE/logging.include.ab3"
0000C4E0 <file.include.ab3@846> XINCLUDE "PE/logging.include.ab3"
0000C4E4 <file.include.ab3@849> XINCLUDE "PE/logging.include.ab3"
0000C506 <file.include.ab3@867> XINCLUDE "PE/logging.include.ab3"
0000C50C <file.include.ab3@869> XINCLUDE "PE/logging.include.ab3"
0000C528 <file.include.ab3@870> XINCLUDE "PE/logging.include.ab3"
0000C548 <file.include.ab3@871> XINCLUDE "PE/logging.include.ab3"
0000C586 <file.include.ab3@872> XINCLUDE "PE/logging.include.ab3"
0000C5D4 <file.include.ab3@873> XINCLUDE "PE/logging.include.ab3"
0000C60A <file.include.ab3@874> XINCLUDE "PE/logging.include.ab3"
0000C610 <file.include.ab3@875> XINCLUDE "PE/logging.include.ab3"
0000C616 <file.include.ab3@876> XINCLUDE "PE/logging.include.ab3"
0000C646 <file.include.ab3@877> XINCLUDE "PE/logging.include.ab3"
0000C64C <file.include.ab3@878> XINCLUDE "PE/logging.include.ab3"
0000C652 <file.include.ab3@880> XINCLUDE "PE/logging.include.ab3"
0000C664 <file.include.ab3@881> XINCLUDE "PE/logging.include.ab3"
0000C6C2 <file.include.ab3@882> XINCLUDE "PE/logging.include.ab3"
0000C6FA <file.include.ab3@883> XINCLUDE "PE/logging.include.ab3"
0000C700 <file.include.ab3@884> XINCLUDE "PE/logging.include.ab3"
0000C748 <file.include.ab3@885> XINCLUDE "PE/logging.include.ab3"
0000C762 <file.include.ab3@886> XINCLUDE "PE/logging.include.ab3"
0000C770 <file.include.ab3@888> XINCLUDE "PE/logging.include.ab3"
0000C776 <file.include.ab3@889> XINCLUDE "PE/logging.include.ab3"
0000C77C <file.include.ab3@890> XINCLUDE "PE/logging.include.ab3"
0000C78E <file.include.ab3@891> XINCLUDE "PE/logging.include.ab3"
0000C794 <file.include.ab3@892> XINCLUDE "PE/logging.include.ab3"
0000C79A <file.include.ab3@893> XINCLUDE "PE/logging.include.ab3"
0000C7F8 <file.include.ab3@894> XINCLUDE "PE/logging.include.ab3"
0000C840 <file.include.ab3@897> XINCLUDE "PE/logging.include.ab3"
0000C84A <file.include.ab3@900> XINCLUDE "PE/logging.include.ab3"
0000C850 <file.include.ab3@901> XINCLUDE "PE/logging.include.ab3"
0000C86A <file.include.ab3@955> XINCLUDE "PE/logging.include.ab3"
0000C870 <file.include.ab3@957> XINCLUDE "PE/logging.include.ab3"
0000C8B8 <file.include.ab3@958> XINCLUDE "PE/logging.include.ab3"
0000C8F6 <file.include.ab3@959> XINCLUDE "PE/logging.include.ab3"
0000C900 <file.include.ab3@960> XINCLUDE "PE/logging.include.ab3"
0000C906 <file.include.ab3@961> XINCLUDE "PE/logging.include.ab3"
0000C92C <file.include.ab3@1108> XINCLUDE "PE/logging.include.ab3"
0000C932 <file.include.ab3@1110> XINCLUDE "PE/logging.include.ab3"
0000C958 <file.include.ab3@1111> XINCLUDE "PE/logging.include.ab3"
0000C9B8 <file.include.ab3@1112> XINCLUDE "PE/logging.include.ab3"
0000C9D2 <file.include.ab3@1113> XINCLUDE "PE/logging.include.ab3"
0000C9DC <file.include.ab3@1114> XINCLUDE "PE/logging.include.ab3"
0000C9F6 <file.include.ab3@1115> XINCLUDE "PE/logging.include.ab3"
0000CA00 <file.include.ab3@1116> XINCLUDE "PE/logging.include.ab3"
0000CA18 <file.include.ab3@1117> XINCLUDE "PE/logging.include.ab3"
0000CA48 <file.include.ab3@1118> XINCLUDE "PE/logging.include.ab3"
0000CA64 <file.include.ab3@1119> XINCLUDE "PE/logging.include.ab3"
0000CA72 <file.include.ab3@1120> XINCLUDE "PE/logging.include.ab3"
0000CA78 <file.include.ab3@1123> XINCLUDE "PE/logging.include.ab3"
0000CAB2 <file.include.ab3@1124> XINCLUDE "PE/logging.include.ab3"
0000CABC <file.include.ab3@1126> XINCLUDE "PE/logging.include.ab3"
0000CAC2 <file.include.ab3@1127> XINCLUDE "PE/logging.include.ab3"
0000CAE0 <file.include.ab3@1148> XINCLUDE "PE/logging.include.ab3"
0000CAE6 <file.include.ab3@1150> XINCLUDE "PE/logging.include.ab3"
0000CAF8 <file.include.ab3@1151> XINCLUDE "PE/logging.include.ab3"
0000CB06 <file.include.ab3@1152> XINCLUDE "PE/logging.include.ab3"
0000CB24 <file.include.ab3@1153> XINCLUDE "PE/logging.include.ab3"
0000CB5A <file.include.ab3@1154> XINCLUDE "PE/logging.include.ab3"
0000CB6C <file.include.ab3@1155> XINCLUDE "PE/logging.include.ab3"
0000CBB6 <file.include.ab3@1156> XINCLUDE "PE/logging.include.ab3"
0000CCA0 <file.include.ab3@1157> XINCLUDE "PE/logging.include.ab3"
0000CCBE <file.include.ab3@1158> XINCLUDE "PE/logging.include.ab3"
0000CCE4 <file.include.ab3@1160> XINCLUDE "PE/logging.include.ab3"
0000CD00 <file.include.ab3@1161> XINCLUDE "PE/logging.include.ab3"
0000CD2C <file.include.ab3@1162> XINCLUDE "PE/logging.include.ab3"
0000CD36 <file.include.ab3@1163> XINCLUDE "PE/logging.include.ab3"
0000CD64 <file.include.ab3@1164> XINCLUDE "PE/logging.include.ab3"
0000CD7E <file.include.ab3@1165> XINCLUDE "PE/logging.include.ab3"
0000CD9A <file.include.ab3@1166> XINCLUDE "PE/logging.include.ab3"
0000CDA0 <file.include.ab3@1167> XINCLUDE "PE/logging.include.ab3"
0000CDDA <file.include.ab3@1168> XINCLUDE "PE/logging.include.ab3"
0000CDE0 <file.include.ab3@1170> XINCLUDE "PE/logging.include.ab3"
0000CDE6 <file.include.ab3@1171> XINCLUDE "PE/logging.include.ab3"
0000CDEC <file.include.ab3@1173> XINCLUDE "PE/logging.include.ab3"
0000CE8C <file.include.ab3@1174> XINCLUDE "PE/logging.include.ab3"
0000CE92 <file.include.ab3@1176> XINCLUDE "PE/logging.include.ab3"
0000CF34 <file.include.ab3@1177> XINCLUDE "PE/logging.include.ab3"
0000CF3A <file.include.ab3@1179> XINCLUDE "PE/logging.include.ab3"
0000CF74 <file.include.ab3@1180> XINCLUDE "PE/logging.include.ab3"
0000CF7E <file.include.ab3@1182> XINCLUDE "PE/logging.include.ab3"
0000CF84 <file.include.ab3@1183> XINCLUDE "PE/logging.include.ab3"
0000CF9E <file.include.ab3@1245> XINCLUDE "PE/logging.include.ab3"
0000CFBC <file.include.ab3@1247> XINCLUDE "PE/logging.include.ab3"
0000CFC2 <file.include.ab3@1248> XINCLUDE "PE/logging.include.ab3"
0000CFDC <file.include.ab3@1398> XINCLUDE "PE/logging.include.ab3"
0000CFFC <file.include.ab3@1400> XINCLUDE "PE/logging.include.ab3"
0000D0B0 <file.include.ab3@1401> XINCLUDE "PE/logging.include.ab3"
0000D0B6 <file.include.ab3@1402> XINCLUDE "PE/logging.include.ab3"
0000D0BC <file.include.ab3@1403> XINCLUDE "PE/logging.include.ab3"
0000D0E6 <file.include.ab3@1404> XINCLUDE "PE/logging.include.ab3"
0000D0F2 <file.include.ab3@1406> XINCLUDE "PE/logging.include.ab3"
0000D0F8 <file.include.ab3@1407> XINCLUDE "PE/logging.include.ab3"
0000D112 <file.include.ab3@1593> XINCLUDE "PE/logging.include.ab3"
0000D11A <file.include.ab3@1594> XINCLUDE "PE/logging.include.ab3"
0000D122 <file.include.ab3@1595> XINCLUDE "PE/logging.include.ab3"
0000D138 <file.include.ab3@1596> XINCLUDE "PE/logging.include.ab3"
0000D150 <file.include.ab3@1597> XINCLUDE "PE/logging.include.ab3"
0000D162 <file.include.ab3@1598> XINCLUDE "PE/logging.include.ab3"
0000D16E <file.include.ab3@1599> XINCLUDE "PE/logging.include.ab3"
0000D174 <file.include.ab3@1600> XINCLUDE "PE/logging.include.ab3"
0000D17C <file.include.ab3@1601> XINCLUDE "PE/logging.include.ab3"
0000D1B4 <file.include.ab3@1602> XINCLUDE "PE/logging.include.ab3"
0000D1C6 <file.include.ab3@1603> XINCLUDE "PE/logging.include.ab3"
0000D1EA <file.include.ab3@1604> XINCLUDE "PE/logging.include.ab3"
0000D1FC <file.include.ab3@1605> XINCLUDE "PE/logging.include.ab3"
0000D208 <file.include.ab3@1606> XINCLUDE "PE/logging.include.ab3"
0000D20E <file.include.ab3@1607> XINCLUDE "PE/logging.include.ab3"
0000D21E <file.include.ab3@1608> XINCLUDE "PE/logging.include.ab3"
0000D23C <file.include.ab3@1613> XINCLUDE "PE/logging.include.ab3"
0000D24E <file.include.ab3@1616> XINCLUDE "PE/logging.include.ab3"
0000D29A <file.include.ab3@1617> XINCLUDE "PE/logging.include.ab3"
0000D2A0 <file.include.ab3@1619> XINCLUDE "PE/logging.include.ab3"
0000D2CA <file.include.ab3@1621> XINCLUDE "PE/logging.include.ab3"
0000D2E2 <file.include.ab3@1622> XINCLUDE "PE/logging.include.ab3"
0000D310 <file.include.ab3@1706> XINCLUDE "PE/logging.include.ab3"
0000D324 <file.include.ab3@1707> XINCLUDE "PE/logging.include.ab3"
0000D33A <file.include.ab3@1708> XINCLUDE "PE/logging.include.ab3"
0000D35A <file.include.ab3@1709> XINCLUDE "PE/logging.include.ab3"
0000D370 <file.include.ab3@1710> XINCLUDE "PE/logging.include.ab3"
0000D37A <file.include.ab3@1711> XINCLUDE "PE/logging.include.ab3"
0000D394 <file.include.ab3@1712> XINCLUDE "PE/logging.include.ab3"
0000D3B6 <file.include.ab3@1787> XINCLUDE "PE/logging.include.ab3"
0000D3CE <file.include.ab3@1789> XINCLUDE "PE/logging.include.ab3"
0000D3F0 <file.include.ab3@1790> XINCLUDE "PE/logging.include.ab3"
0000D3F6 <file.include.ab3@1791> XINCLUDE "PE/logging.include.ab3"
0000D428 <file.include.ab3@1811> XINCLUDE "PE/logging.include.ab3"
0000D43C <file.include.ab3@1813> XINCLUDE "PE/logging.include.ab3"
0000D454 <file.include.ab3@1814> XINCLUDE "PE/logging.include.ab3"
0000D46C <file.include.ab3@1815> XINCLUDE "PE/logging.include.ab3"
0000D48C <file.include.ab3@1816> XINCLUDE "PE/logging.include.ab3"
0000D4BC <file.include.ab3@1817> XINCLUDE "PE/logging.include.ab3"
0000D4EC <file.include.ab3@1818> XINCLUDE "PE/logging.include.ab3"
0000D4FE <file.include.ab3@1819> XINCLUDE "PE/logging.include.ab3"
0000D506 <file.include.ab3@1820> XINCLUDE "PE/logging.include.ab3"
0000D530 <file.include.ab3@1821> XINCLUDE "PE/logging.include.ab3"
0000D53A <file.include.ab3@1823> XINCLUDE "PE/logging.include.ab3"
0000D554 <file.include.ab3@1824> XINCLUDE "PE/logging.include.ab3"
0000D56E <file.include.ab3@1841> XINCLUDE "PE/logging.include.ab3"
0000D58C <file.include.ab3@1843> XINCLUDE "PE/logging.include.ab3"
0000D5AC <file.include.ab3@1844> XINCLUDE "PE/logging.include.ab3"
0000D5F6 <file.include.ab3@1845> XINCLUDE "PE/logging.include.ab3"
0000D610 <file.include.ab3@1846> XINCLUDE "PE/logging.include.ab3"
0000D622 <file.include.ab3@1847> XINCLUDE "PE/logging.include.ab3"
0000D658 <file.include.ab3@1848> XINCLUDE "PE/logging.include.ab3"
0000D66A <file.include.ab3@1849> XINCLUDE "PE/logging.include.ab3"
0000D672 <file.include.ab3@1850> XINCLUDE "PE/logging.include.ab3"
0000D69A <file.include.ab3@1851> XINCLUDE "PE/logging.include.ab3"
0000D6A0 <file.include.ab3@1853> XINCLUDE "PE/logging.include.ab3"
0000D6C8 <file.include.ab3@1854> XINCLUDE "PE/logging.include.ab3"
0000D6D8 <file.include.ab3@1856> XINCLUDE "PE/logging.include.ab3"
0000D6EC <file.include.ab3@1857> XINCLUDE "PE/logging.include.ab3"
0000D702 <file.include.ab3@1870> XINCLUDE "PE/logging.include.ab3"
0000D712 <file.include.ab3@1872> XINCLUDE "PE/logging.include.ab3"
0000D716 <file.include.ab3@1873> XINCLUDE "PE/logging.include.ab3"
0000D72C <file.include.ab3@1894> XINCLUDE "PE/logging.include.ab3"
0000D756 <file.include.ab3@1896> XINCLUDE "PE/logging.include.ab3"
0000D75E <file.include.ab3@1897> XINCLUDE "PE/logging.include.ab3"
0000D75E <logging.include.ab3@13> XINCLUDE "PE/logging.include.ab3"
0000D7FC <logging.include.ab3@35> XINCLUDE "PE/logging.include.ab3"
0000D802 <logging.include.ab3@36> XINCLUDE "PE/logging.include.ab3"
0000D808 <logging.include.ab3@37> XINCLUDE "PE/logging.include.ab3"
0000D80E <logging.include.ab3@38> XINCLUDE "PE/logging.include.ab3"
0000D848 <logging.include.ab3@129> XINCLUDE "PE/logging.include.ab3"
0000D87A <logging.include.ab3@131> XINCLUDE "PE/logging.include.ab3"
0000D888 <logging.include.ab3@132> XINCLUDE "PE/logging.include.ab3"
0000D8B8 <logging.include.ab3@133> XINCLUDE "PE/logging.include.ab3"
0000DC28 <logging.include.ab3@134> XINCLUDE "PE/logging.include.ab3"
0000DC36 <logging.include.ab3@135> XINCLUDE "PE/logging.include.ab3"
0000DC3C <logging.include.ab3@136> XINCLUDE "PE/logging.include.ab3"
0000DECE <logging.include.ab3@137> XINCLUDE "PE/logging.include.ab3"
0000DEE8 <logging.include.ab3@139> XINCLUDE "PE/logging.include.ab3"
0000DF22 <logging.include.ab3@142> XINCLUDE "PE/logging.include.ab3"
0000DF74 <logging.include.ab3@143> XINCLUDE "PE/logging.include.ab3"
0000DF82 <logging.include.ab3@144> XINCLUDE "PE/logging.include.ab3"
0000DFD8 <logging.include.ab3@145> XINCLUDE "PE/logging.include.ab3"
0000DFDE <logging.include.ab3@146> XINCLUDE "PE/logging.include.ab3"
0000E058 <logging.include.ab3@147> XINCLUDE "PE/logging.include.ab3"
0000E0CC <logging.include.ab3@148> XINCLUDE "PE/logging.include.ab3"
0000E0E6 <logging.include.ab3@150> XINCLUDE "PE/logging.include.ab3"
0000E0E6 <AmiBlitz3.ab3@89> XINCLUDE "PE/logging.include.ab3"
0000E0E6 <translation.include.ab3@1> XINCLUDE "translation.include.ab3"
0000E0E6 <phrasebook.include.ab3@1> XINCLUDE "translation.include.ab3"
0000E0E6 <prefixtree.include.ab3@1> XINCLUDE "translation.include.ab3"
0000E0E6 <dynamicarray.include.ab3@1> XINCLUDE "translation.include.ab3"
0000E10E <dynamicarray.include.ab3@42> XINCLUDE "translation.include.ab3"
0000E128 <dynamicarray.include.ab3@55> XINCLUDE "translation.include.ab3"
0000E132 <dynamicarray.include.ab3@56> XINCLUDE "translation.include.ab3"
0000E144 <dynamicarray.include.ab3@57> XINCLUDE "translation.include.ab3"
0000E168 <dynamicarray.include.ab3@58> XINCLUDE "translation.include.ab3"
0000E176 <dynamicarray.include.ab3@60> XINCLUDE "translation.include.ab3"
0000E182 <dynamicarray.include.ab3@61> XINCLUDE "translation.include.ab3"
0000E186 <dynamicarray.include.ab3@63> XINCLUDE "translation.include.ab3"
0000E1A4 <dynamicarray.include.ab3@99> XINCLUDE "translation.include.ab3"
0000E1BE <dynamicarray.include.ab3@101> XINCLUDE "translation.include.ab3"
0000E1DE <dynamicarray.include.ab3@102> XINCLUDE "translation.include.ab3"
0000E1E8 <dynamicarray.include.ab3@103> XINCLUDE "translation.include.ab3"
0000E1F6 <dynamicarray.include.ab3@104> XINCLUDE "translation.include.ab3"
0000E202 <dynamicarray.include.ab3@105> XINCLUDE "translation.include.ab3"
0000E210 <dynamicarray.include.ab3@106> XINCLUDE "translation.include.ab3"
0000E21C <dynamicarray.include.ab3@107> XINCLUDE "translation.include.ab3"
0000E228 <dynamicarray.include.ab3@108> XINCLUDE "translation.include.ab3"
0000E23A <dynamicarray.include.ab3@109> XINCLUDE "translation.include.ab3"
0000E24A <dynamicarray.include.ab3@110> XINCLUDE "translation.include.ab3"
0000E254 <dynamicarray.include.ab3@113> XINCLUDE "translation.include.ab3"
0000E25A <dynamicarray.include.ab3@114> XINCLUDE "translation.include.ab3"
0000E274 <dynamicarray.include.ab3@425> XINCLUDE "translation.include.ab3"
0000E27E <dynamicarray.include.ab3@427> XINCLUDE "translation.include.ab3"
0000E288 <dynamicarray.include.ab3@428> XINCLUDE "translation.include.ab3"
0000E298 <dynamicarray.include.ab3@429> XINCLUDE "translation.include.ab3"
0000E2A2 <dynamicarray.include.ab3@430> XINCLUDE "translation.include.ab3"
0000E2B4 <dynamicarray.include.ab3@431> XINCLUDE "translation.include.ab3"
0000E2CA <dynamicarray.include.ab3@432> XINCLUDE "translation.include.ab3"
0000E2D4 <dynamicarray.include.ab3@433> XINCLUDE "translation.include.ab3"
0000E2DA <dynamicarray.include.ab3@435> XINCLUDE "translation.include.ab3"
0000E2DE <dynamicarray.include.ab3@437> XINCLUDE "translation.include.ab3"
0000E2F4 <dynamicarray.include.ab3@531> XINCLUDE "translation.include.ab3"
0000E2FA <dynamicarray.include.ab3@533> XINCLUDE "translation.include.ab3"
0000E304 <dynamicarray.include.ab3@535> XINCLUDE "translation.include.ab3"
0000E33A <dynamicarray.include.ab3@536> XINCLUDE "translation.include.ab3"
0000E344 <dynamicarray.include.ab3@537> XINCLUDE "translation.include.ab3"
0000E348 <dynamicarray.include.ab3@538> XINCLUDE "translation.include.ab3"
0000E376 <dynamicarray.include.ab3@539> XINCLUDE "translation.include.ab3"
0000E376 <prefixtree.include.ab3@132> XINCLUDE "translation.include.ab3"
0000E390 <prefixtree.include.ab3@197> XINCLUDE "translation.include.ab3"
0000E39A <prefixtree.include.ab3@199> XINCLUDE "translation.include.ab3"
0000E3C2 <prefixtree.include.ab3@200> XINCLUDE "translation.include.ab3"
0000E3E4 <prefixtree.include.ab3@201> XINCLUDE "translation.include.ab3"
0000E400 <prefixtree.include.ab3@202> XINCLUDE "translation.include.ab3"
0000E410 <prefixtree.include.ab3@203> XINCLUDE "translation.include.ab3"
0000E414 <prefixtree.include.ab3@206> XINCLUDE "translation.include.ab3"
0000E42E <prefixtree.include.ab3@259> XINCLUDE "translation.include.ab3"
0000E44E <prefixtree.include.ab3@260> XINCLUDE "translation.include.ab3"
0000E458 <prefixtree.include.ab3@261> XINCLUDE "translation.include.ab3"
0000E472 <prefixtree.include.ab3@262> XINCLUDE "translation.include.ab3"
0000E480 <prefixtree.include.ab3@263> XINCLUDE "translation.include.ab3"
0000E48E <prefixtree.include.ab3@264> XINCLUDE "translation.include.ab3"
0000E49C <prefixtree.include.ab3@265> XINCLUDE "translation.include.ab3"
0000E4AA <prefixtree.include.ab3@266> XINCLUDE "translation.include.ab3"
0000E4B6 <prefixtree.include.ab3@267> XINCLUDE "translation.include.ab3"
0000E4C4 <prefixtree.include.ab3@268> XINCLUDE "translation.include.ab3"
0000E4D2 <prefixtree.include.ab3@269> XINCLUDE "translation.include.ab3"
0000E4E0 <prefixtree.include.ab3@270> XINCLUDE "translation.include.ab3"
0000E4EE <prefixtree.include.ab3@271> XINCLUDE "translation.include.ab3"
0000E508 <prefixtree.include.ab3@272> XINCLUDE "translation.include.ab3"
0000E516 <prefixtree.include.ab3@273> XINCLUDE "translation.include.ab3"
0000E526 <prefixtree.include.ab3@274> XINCLUDE "translation.include.ab3"
0000E536 <prefixtree.include.ab3@275> XINCLUDE "translation.include.ab3"
0000E546 <prefixtree.include.ab3@276> XINCLUDE "translation.include.ab3"
0000E554 <prefixtree.include.ab3@277> XINCLUDE "translation.include.ab3"
0000E55E <prefixtree.include.ab3@279> XINCLUDE "translation.include.ab3"
0000E564 <prefixtree.include.ab3@280> XINCLUDE "translation.include.ab3"
0000E582 <prefixtree.include.ab3@298> XINCLUDE "translation.include.ab3"
0000E588 <prefixtree.include.ab3@299> XINCLUDE "translation.include.ab3"
0000E592 <prefixtree.include.ab3@300> XINCLUDE "translation.include.ab3"
0000E5B2 <prefixtree.include.ab3@301> XINCLUDE "translation.include.ab3"
0000E5E0 <prefixtree.include.ab3@302> XINCLUDE "translation.include.ab3"
0000E5FE <prefixtree.include.ab3@303> XINCLUDE "translation.include.ab3"
0000E608 <prefixtree.include.ab3@304> XINCLUDE "translation.include.ab3"
0000E61A <prefixtree.include.ab3@305> XINCLUDE "translation.include.ab3"
0000E646 <prefixtree.include.ab3@306> XINCLUDE "translation.include.ab3"
0000E65C <prefixtree.include.ab3@307> XINCLUDE "translation.include.ab3"
0000E668 <prefixtree.include.ab3@309> XINCLUDE "translation.include.ab3"
0000E674 <prefixtree.include.ab3@310> XINCLUDE "translation.include.ab3"
0000E67A <prefixtree.include.ab3@311> XINCLUDE "translation.include.ab3"
0000E680 <prefixtree.include.ab3@312> XINCLUDE "translation.include.ab3"
0000E686 <prefixtree.include.ab3@313> XINCLUDE "translation.include.ab3"
0000E6BE <prefixtree.include.ab3@314> XINCLUDE "translation.include.ab3"
0000E6C4 <prefixtree.include.ab3@316> XINCLUDE "translation.include.ab3"
0000E6CA <prefixtree.include.ab3@317> XINCLUDE "translation.include.ab3"
0000E6D4 <prefixtree.include.ab3@320> XINCLUDE "translation.include.ab3"
0000E6DA <prefixtree.include.ab3@321> XINCLUDE "translation.include.ab3"
0000E70C <prefixtree.include.ab3@341> XINCLUDE "translation.include.ab3"
0000E726 <prefixtree.include.ab3@342> XINCLUDE "translation.include.ab3"
0000E73E <prefixtree.include.ab3@343> XINCLUDE "translation.include.ab3"
0000E752 <prefixtree.include.ab3@344> XINCLUDE "translation.include.ab3"
0000E7A2 <prefixtree.include.ab3@345> XINCLUDE "translation.include.ab3"
0000E7C2 <prefixtree.include.ab3@347> XINCLUDE "translation.include.ab3"
0000E7D6 <prefixtree.include.ab3@348> XINCLUDE "translation.include.ab3"
0000E7E4 <prefixtree.include.ab3@349> XINCLUDE "translation.include.ab3"
0000E7F0 <prefixtree.include.ab3@350> XINCLUDE "translation.include.ab3"
0000E7F8 <prefixtree.include.ab3@351> XINCLUDE "translation.include.ab3"
0000E800 <prefixtree.include.ab3@352> XINCLUDE "translation.include.ab3"
0000E808 <prefixtree.include.ab3@353> XINCLUDE "translation.include.ab3"
0000E810 <prefixtree.include.ab3@354> XINCLUDE "translation.include.ab3"
0000E816 <prefixtree.include.ab3@355> XINCLUDE "translation.include.ab3"
0000E824 <prefixtree.include.ab3@356> XINCLUDE "translation.include.ab3"
0000E846 <prefixtree.include.ab3@358> XINCLUDE "translation.include.ab3"
0000E872 <prefixtree.include.ab3@359> XINCLUDE "translation.include.ab3"
0000E884 <prefixtree.include.ab3@361> XINCLUDE "translation.include.ab3"
0000E88A <prefixtree.include.ab3@362> XINCLUDE "translation.include.ab3"
0000E8B2 <prefixtree.include.ab3@364> XINCLUDE "translation.include.ab3"
0000E8D6 <prefixtree.include.ab3@365> XINCLUDE "translation.include.ab3"
0000E8FE <prefixtree.include.ab3@366> XINCLUDE "translation.include.ab3"
0000E932 <prefixtree.include.ab3@367> XINCLUDE "translation.include.ab3"
0000E942 <prefixtree.include.ab3@368> XINCLUDE "translation.include.ab3"
0000E94C <prefixtree.include.ab3@369> XINCLUDE "translation.include.ab3"
0000E95A <prefixtree.include.ab3@370> XINCLUDE "translation.include.ab3"
0000E96E <prefixtree.include.ab3@371> XINCLUDE "translation.include.ab3"
0000E974 <prefixtree.include.ab3@372> XINCLUDE "translation.include.ab3"
0000E994 <prefixtree.include.ab3@373> XINCLUDE "translation.include.ab3"
0000E99A <prefixtree.include.ab3@374> XINCLUDE "translation.include.ab3"
0000E9A2 <prefixtree.include.ab3@376> XINCLUDE "translation.include.ab3"
0000E9DC <prefixtree.include.ab3@378> XINCLUDE "translation.include.ab3"
0000EA02 <prefixtree.include.ab3@379> XINCLUDE "translation.include.ab3"
0000EA1A <prefixtree.include.ab3@380> XINCLUDE "translation.include.ab3"
0000EA4E <prefixtree.include.ab3@381> XINCLUDE "translation.include.ab3"
0000EA56 <prefixtree.include.ab3@382> XINCLUDE "translation.include.ab3"
0000EA64 <prefixtree.include.ab3@384> XINCLUDE "translation.include.ab3"
0000EA6A <prefixtree.include.ab3@386> XINCLUDE "translation.include.ab3"
0000EA82 <prefixtree.include.ab3@387> XINCLUDE "translation.include.ab3"
0000EA88 <prefixtree.include.ab3@388> XINCLUDE "translation.include.ab3"
0000EA8E <prefixtree.include.ab3@389> XINCLUDE "translation.include.ab3"
0000EAA8 <prefixtree.include.ab3@390> XINCLUDE "translation.include.ab3"
0000EAAE <prefixtree.include.ab3@393> XINCLUDE "translation.include.ab3"
0000EAB4 <prefixtree.include.ab3@395> XINCLUDE "translation.include.ab3"
0000EABA <prefixtree.include.ab3@397> XINCLUDE "translation.include.ab3"
0000EAC8 <prefixtree.include.ab3@398> XINCLUDE "translation.include.ab3"
0000EAD6 <prefixtree.include.ab3@399> XINCLUDE "translation.include.ab3"
0000EB10 <prefixtree.include.ab3@401> XINCLUDE "translation.include.ab3"
0000EB36 <prefixtree.include.ab3@402> XINCLUDE "translation.include.ab3"
0000EB4E <prefixtree.include.ab3@403> XINCLUDE "translation.include.ab3"
0000EB5A <prefixtree.include.ab3@406> XINCLUDE "translation.include.ab3"
0000EB66 <prefixtree.include.ab3@407> XINCLUDE "translation.include.ab3"
0000EB72 <prefixtree.include.ab3@408> XINCLUDE "translation.include.ab3"
0000EB7E <prefixtree.include.ab3@409> XINCLUDE "translation.include.ab3"
0000EB8A <prefixtree.include.ab3@410> XINCLUDE "translation.include.ab3"
0000EB94 <prefixtree.include.ab3@411> XINCLUDE "translation.include.ab3"
0000EB9C <prefixtree.include.ab3@413> XINCLUDE "translation.include.ab3"
0000EBB6 <prefixtree.include.ab3@414> XINCLUDE "translation.include.ab3"
0000EBF4 <prefixtree.include.ab3@461> XINCLUDE "translation.include.ab3"
0000EBFA <prefixtree.include.ab3@462> XINCLUDE "translation.include.ab3"
0000EC60 <prefixtree.include.ab3@463> XINCLUDE "translation.include.ab3"
0000ECA0 <prefixtree.include.ab3@465> XINCLUDE "translation.include.ab3"
0000ECF6 <prefixtree.include.ab3@466> XINCLUDE "translation.include.ab3"
0000ED68 <prefixtree.include.ab3@467> XINCLUDE "translation.include.ab3"
0000ED74 <prefixtree.include.ab3@469> XINCLUDE "translation.include.ab3"
0000ED82 <prefixtree.include.ab3@470> XINCLUDE "translation.include.ab3"
0000EDC8 <prefixtree.include.ab3@471> XINCLUDE "translation.include.ab3"
0000EE12 <prefixtree.include.ab3@472> XINCLUDE "translation.include.ab3"
0000EE4A <prefixtree.include.ab3@473> XINCLUDE "translation.include.ab3"
0000EE9E <prefixtree.include.ab3@474> XINCLUDE "translation.include.ab3"
0000EEA4 <prefixtree.include.ab3@475> XINCLUDE "translation.include.ab3"
0000EEAA <prefixtree.include.ab3@476> XINCLUDE "translation.include.ab3"
0000EEB8 <prefixtree.include.ab3@478> XINCLUDE "translation.include.ab3"
0000EEC0 <prefixtree.include.ab3@479> XINCLUDE "translation.include.ab3"
0000EEFA <prefixtree.include.ab3@481> XINCLUDE "translation.include.ab3"
0000EF20 <prefixtree.include.ab3@482> XINCLUDE "translation.include.ab3"
0000EF38 <prefixtree.include.ab3@483> XINCLUDE "translation.include.ab3"
0000EF6E <prefixtree.include.ab3@484> XINCLUDE "translation.include.ab3"
0000EF84 <prefixtree.include.ab3@485> XINCLUDE "translation.include.ab3"
0000EF92 <prefixtree.include.ab3@487> XINCLUDE "translation.include.ab3"
0000EFAA <prefixtree.include.ab3@488> XINCLUDE "translation.include.ab3"
0000EFE2 <prefixtree.include.ab3@489> XINCLUDE "translation.include.ab3"
0000F008 <prefixtree.include.ab3@490> XINCLUDE "translation.include.ab3"
0000F050 <prefixtree.include.ab3@491> XINCLUDE "translation.include.ab3"
0000F056 <prefixtree.include.ab3@492> XINCLUDE "translation.include.ab3"
0000F070 <prefixtree.include.ab3@494> XINCLUDE "translation.include.ab3"
0000F07C <prefixtree.include.ab3@495> XINCLUDE "translation.include.ab3"
0000F082 <prefixtree.include.ab3@496> XINCLUDE "translation.include.ab3"
0000F0AE <prefixtree.include.ab3@497> XINCLUDE "translation.include.ab3"
0000F0C2 <prefixtree.include.ab3@502> XINCLUDE "translation.include.ab3"
0000F0D0 <prefixtree.include.ab3@504> XINCLUDE "translation.include.ab3"
0000F0D8 <prefixtree.include.ab3@505> XINCLUDE "translation.include.ab3"
0000F112 <prefixtree.include.ab3@507> XINCLUDE "translation.include.ab3"
0000F138 <prefixtree.include.ab3@508> XINCLUDE "translation.include.ab3"
0000F150 <prefixtree.include.ab3@509> XINCLUDE "translation.include.ab3"
0000F18A <prefixtree.include.ab3@510> XINCLUDE "translation.include.ab3"
0000F1B4 <prefixtree.include.ab3@511> XINCLUDE "translation.include.ab3"
0000F1CC <prefixtree.include.ab3@512> XINCLUDE "translation.include.ab3"
0000F1FC <prefixtree.include.ab3@513> XINCLUDE "translation.include.ab3"
0000F228 <prefixtree.include.ab3@514> XINCLUDE "translation.include.ab3"
0000F244 <prefixtree.include.ab3@515> XINCLUDE "translation.include.ab3"
0000F252 <prefixtree.include.ab3@517> XINCLUDE "translation.include.ab3"
0000F260 <prefixtree.include.ab3@518> XINCLUDE "translation.include.ab3"
0000F29E <prefixtree.include.ab3@519> XINCLUDE "translation.include.ab3"
0000F2DA <prefixtree.include.ab3@520> XINCLUDE "translation.include.ab3"
0000F346 <prefixtree.include.ab3@521> XINCLUDE "translation.include.ab3"
0000F374 <prefixtree.include.ab3@522> XINCLUDE "translation.include.ab3"
0000F3A2 <prefixtree.include.ab3@523> XINCLUDE "translation.include.ab3"
0000F3EA <prefixtree.include.ab3@524> XINCLUDE "translation.include.ab3"
0000F404 <prefixtree.include.ab3@527> XINCLUDE "translation.include.ab3"
0000F44C <prefixtree.include.ab3@528> XINCLUDE "translation.include.ab3"
0000F46A <prefixtree.include.ab3@529> XINCLUDE "translation.include.ab3"
0000F488 <prefixtree.include.ab3@530> XINCLUDE "translation.include.ab3"
0000F4A2 <prefixtree.include.ab3@533> XINCLUDE "translation.include.ab3"
0000F4AE <prefixtree.include.ab3@534> XINCLUDE "translation.include.ab3"
0000F4B4 <prefixtree.include.ab3@535> XINCLUDE "translation.include.ab3"
0000F4E0 <prefixtree.include.ab3@536> XINCLUDE "translation.include.ab3"
0000F4F8 <prefixtree.include.ab3@538> XINCLUDE "translation.include.ab3"
0000F4FE <prefixtree.include.ab3@539> XINCLUDE "translation.include.ab3"
0000F512 <prefixtree.include.ab3@542> XINCLUDE "translation.include.ab3"
0000F520 <prefixtree.include.ab3@544> XINCLUDE "translation.include.ab3"
0000F52E <prefixtree.include.ab3@545> XINCLUDE "translation.include.ab3"
0000F53C <prefixtree.include.ab3@546> XINCLUDE "translation.include.ab3"
0000F544 <prefixtree.include.ab3@547> XINCLUDE "translation.include.ab3"
0000F570 <prefixtree.include.ab3@548> XINCLUDE "translation.include.ab3"
0000F598 <prefixtree.include.ab3@549> XINCLUDE "translation.include.ab3"
0000F5C0 <prefixtree.include.ab3@550> XINCLUDE "translation.include.ab3"
0000F62C <prefixtree.include.ab3@551> XINCLUDE "translation.include.ab3"
0000F63C <prefixtree.include.ab3@552> XINCLUDE "translation.include.ab3"
0000F668 <prefixtree.include.ab3@553> XINCLUDE "translation.include.ab3"
0000F6BE <prefixtree.include.ab3@555> XINCLUDE "translation.include.ab3"
0000F6CC <prefixtree.include.ab3@556> XINCLUDE "translation.include.ab3"
0000F6DA <prefixtree.include.ab3@557> XINCLUDE "translation.include.ab3"
0000F6E0 <prefixtree.include.ab3@558> XINCLUDE "translation.include.ab3"
0000F734 <prefixtree.include.ab3@560> XINCLUDE "translation.include.ab3"
0000F854 <prefixtree.include.ab3@561> XINCLUDE "translation.include.ab3"
0000F8A4 <prefixtree.include.ab3@563> XINCLUDE "translation.include.ab3"
0000F8FA <prefixtree.include.ab3@564> XINCLUDE "translation.include.ab3"
0000F966 <prefixtree.include.ab3@565> XINCLUDE "translation.include.ab3"
0000F96E <prefixtree.include.ab3@569> XINCLUDE "translation.include.ab3"
0000F9A8 <prefixtree.include.ab3@571> XINCLUDE "translation.include.ab3"
0000F9CE <prefixtree.include.ab3@572> XINCLUDE "translation.include.ab3"
0000F9E6 <prefixtree.include.ab3@573> XINCLUDE "translation.include.ab3"
0000FA20 <prefixtree.include.ab3@574> XINCLUDE "translation.include.ab3"
0000FA4A <prefixtree.include.ab3@575> XINCLUDE "translation.include.ab3"
0000FA62 <prefixtree.include.ab3@576> XINCLUDE "translation.include.ab3"
0000FA86 <prefixtree.include.ab3@578> XINCLUDE "translation.include.ab3"
0000FADA <prefixtree.include.ab3@579> XINCLUDE "translation.include.ab3"
0000FAE2 <prefixtree.include.ab3@580> XINCLUDE "translation.include.ab3"
0000FAE8 <prefixtree.include.ab3@581> XINCLUDE "translation.include.ab3"
0000FB4A <prefixtree.include.ab3@582> XINCLUDE "translation.include.ab3"
0000FB76 <prefixtree.include.ab3@583> XINCLUDE "translation.include.ab3"
0000FB92 <prefixtree.include.ab3@586> XINCLUDE "translation.include.ab3"
0000FBA0 <prefixtree.include.ab3@588> XINCLUDE "translation.include.ab3"
0000FBAE <prefixtree.include.ab3@589> XINCLUDE "translation.include.ab3"
0000FBBC <prefixtree.include.ab3@591> XINCLUDE "translation.include.ab3"
0000FBCA <prefixtree.include.ab3@592> XINCLUDE "translation.include.ab3"
0000FC0E <prefixtree.include.ab3@593> XINCLUDE "translation.include.ab3"
0000FC7A <prefixtree.include.ab3@594> XINCLUDE "translation.include.ab3"
0000FCA8 <prefixtree.include.ab3@595> XINCLUDE "translation.include.ab3"
0000FCBC <prefixtree.include.ab3@596> XINCLUDE "translation.include.ab3"
0000FCEE <prefixtree.include.ab3@597> XINCLUDE "translation.include.ab3"
0000FD38 <prefixtree.include.ab3@598> XINCLUDE "translation.include.ab3"
0000FD48 <prefixtree.include.ab3@599> XINCLUDE "translation.include.ab3"
0000FD7C <prefixtree.include.ab3@600> XINCLUDE "translation.include.ab3"
0000FD9E <prefixtree.include.ab3@601> XINCLUDE "translation.include.ab3"
0000FDAE <prefixtree.include.ab3@602> XINCLUDE "translation.include.ab3"
0000FDB6 <prefixtree.include.ab3@605> XINCLUDE "translation.include.ab3"
0000FDFA <prefixtree.include.ab3@606> XINCLUDE "translation.include.ab3"
0000FE66 <prefixtree.include.ab3@607> XINCLUDE "translation.include.ab3"
0000FE94 <prefixtree.include.ab3@608> XINCLUDE "translation.include.ab3"
0000FEB8 <prefixtree.include.ab3@610> XINCLUDE "translation.include.ab3"
0000FEFC <prefixtree.include.ab3@611> XINCLUDE "translation.include.ab3"
0000FF68 <prefixtree.include.ab3@612> XINCLUDE "translation.include.ab3"
0000FF96 <prefixtree.include.ab3@613> XINCLUDE "translation.include.ab3"
0000FFC4 <prefixtree.include.ab3@614> XINCLUDE "translation.include.ab3"
0000FFCC <prefixtree.include.ab3@615> XINCLUDE "translation.include.ab3"
0000FFFA <prefixtree.include.ab3@616> XINCLUDE "translation.include.ab3"
0001006C <prefixtree.include.ab3@617> XINCLUDE "translation.include.ab3"
00010072 <prefixtree.include.ab3@618> XINCLUDE "translation.include.ab3"
000100A0 <prefixtree.include.ab3@619> XINCLUDE "translation.include.ab3"
00010112 <prefixtree.include.ab3@620> XINCLUDE "translation.include.ab3"
00010130 <prefixtree.include.ab3@623> XINCLUDE "translation.include.ab3"
00010154 <prefixtree.include.ab3@624> XINCLUDE "translation.include.ab3"
0001016C <prefixtree.include.ab3@625> XINCLUDE "translation.include.ab3"
00010172 <prefixtree.include.ab3@626> XINCLUDE "translation.include.ab3"
00010178 <prefixtree.include.ab3@629> XINCLUDE "translation.include.ab3"
0001017A <prefixtree.include.ab3@631> XINCLUDE "translation.include.ab3"
00010184 <prefixtree.include.ab3@634> XINCLUDE "translation.include.ab3"
000101B0 <prefixtree.include.ab3@635> XINCLUDE "translation.include.ab3"
000101D2 <prefixtree.include.ab3@653> XINCLUDE "translation.include.ab3"
000101DA <prefixtree.include.ab3@655> XINCLUDE "translation.include.ab3"
000101E0 <prefixtree.include.ab3@656> XINCLUDE "translation.include.ab3"
000101EE <prefixtree.include.ab3@657> XINCLUDE "translation.include.ab3"
00010228 <prefixtree.include.ab3@659> XINCLUDE "translation.include.ab3"
0001024E <prefixtree.include.ab3@660> XINCLUDE "translation.include.ab3"
00010266 <prefixtree.include.ab3@661> XINCLUDE "translation.include.ab3"
000102A0 <prefixtree.include.ab3@662> XINCLUDE "translation.include.ab3"
000102CA <prefixtree.include.ab3@663> XINCLUDE "translation.include.ab3"
000102E2 <prefixtree.include.ab3@665> XINCLUDE "translation.include.ab3"
000102FA <prefixtree.include.ab3@666> XINCLUDE "translation.include.ab3"
00010332 <prefixtree.include.ab3@667> XINCLUDE "translation.include.ab3"
0001033A <prefixtree.include.ab3@669> XINCLUDE "translation.include.ab3"
00010374 <prefixtree.include.ab3@671> XINCLUDE "translation.include.ab3"
00010386 <prefixtree.include.ab3@673> XINCLUDE "translation.include.ab3"
000103AC <prefixtree.include.ab3@674> XINCLUDE "translation.include.ab3"
000103C2 <prefixtree.include.ab3@675> XINCLUDE "translation.include.ab3"
000103E8 <prefixtree.include.ab3@676> XINCLUDE "translation.include.ab3"
000103FC <prefixtree.include.ab3@677> XINCLUDE "translation.include.ab3"
00010414 <prefixtree.include.ab3@679> XINCLUDE "translation.include.ab3"
00010426 <prefixtree.include.ab3@681> XINCLUDE "translation.include.ab3"
00010430 <prefixtree.include.ab3@683> XINCLUDE "translation.include.ab3"
00010444 <prefixtree.include.ab3@685> XINCLUDE "translation.include.ab3"
0001045E <prefixtree.include.ab3@702> XINCLUDE "translation.include.ab3"
0001047C <prefixtree.include.ab3@704> XINCLUDE "translation.include.ab3"
0001048E <prefixtree.include.ab3@705> XINCLUDE "translation.include.ab3"
000104AC <prefixtree.include.ab3@706> XINCLUDE "translation.include.ab3"
000104E8 <prefixtree.include.ab3@707> XINCLUDE "translation.include.ab3"
00010504 <prefixtree.include.ab3@708> XINCLUDE "translation.include.ab3"
00010524 <prefixtree.include.ab3@709> XINCLUDE "translation.include.ab3"
0001052E <prefixtree.include.ab3@710> XINCLUDE "translation.include.ab3"
00010534 <prefixtree.include.ab3@711> XINCLUDE "translation.include.ab3"
0001053E <prefixtree.include.ab3@712> XINCLUDE "translation.include.ab3"
0001054A <prefixtree.include.ab3@714> XINCLUDE "translation.include.ab3"
00010550 <prefixtree.include.ab3@716> XINCLUDE "translation.include.ab3"
0001057E <prefixtree.include.ab3@735> XINCLUDE "translation.include.ab3"
000105A6 <prefixtree.include.ab3@736> XINCLUDE "translation.include.ab3"
000105E6 <prefixtree.include.ab3@737> XINCLUDE "translation.include.ab3"
000105FE <prefixtree.include.ab3@738> XINCLUDE "translation.include.ab3"
00010644 <prefixtree.include.ab3@739> XINCLUDE "translation.include.ab3"
0001066E <prefixtree.include.ab3@742> XINCLUDE "translation.include.ab3"
0001069C <prefixtree.include.ab3@743> XINCLUDE "translation.include.ab3"
000106B6 <prefixtree.include.ab3@942> XINCLUDE "translation.include.ab3"
000106BE <prefixtree.include.ab3@943> XINCLUDE "translation.include.ab3"
000106D6 <prefixtree.include.ab3@944> XINCLUDE "translation.include.ab3"
000106E0 <prefixtree.include.ab3@945> XINCLUDE "translation.include.ab3"
000106F2 <prefixtree.include.ab3@946> XINCLUDE "translation.include.ab3"
0001072A <prefixtree.include.ab3@947> XINCLUDE "translation.include.ab3"
00010738 <prefixtree.include.ab3@948> XINCLUDE "translation.include.ab3"
00010744 <prefixtree.include.ab3@949> XINCLUDE "translation.include.ab3"
00010760 <prefixtree.include.ab3@950> XINCLUDE "translation.include.ab3"
00010782 <prefixtree.include.ab3@951> XINCLUDE "translation.include.ab3"
000107A4 <prefixtree.include.ab3@952> XINCLUDE "translation.include.ab3"
000107C6 <prefixtree.include.ab3@953> XINCLUDE "translation.include.ab3"
000107E8 <prefixtree.include.ab3@954> XINCLUDE "translation.include.ab3"
00010804 <prefixtree.include.ab3@955> XINCLUDE "translation.include.ab3"
00010822 <prefixtree.include.ab3@956> XINCLUDE "translation.include.ab3"
00010836 <prefixtree.include.ab3@957> XINCLUDE "translation.include.ab3"
0001083C <prefixtree.include.ab3@959> XINCLUDE "translation.include.ab3"
0001083E <prefixtree.include.ab3@961> XINCLUDE "translation.include.ab3"
00010844 <prefixtree.include.ab3@962> XINCLUDE "translation.include.ab3"
0001084E <prefixtree.include.ab3@964> XINCLUDE "translation.include.ab3"
00010854 <prefixtree.include.ab3@965> XINCLUDE "translation.include.ab3"
00010872 <prefixtree.include.ab3@983> XINCLUDE "translation.include.ab3"
00010878 <prefixtree.include.ab3@984> XINCLUDE "translation.include.ab3"
0001089C <prefixtree.include.ab3@985> XINCLUDE "translation.include.ab3"
000108BA <prefixtree.include.ab3@986> XINCLUDE "translation.include.ab3"
000108E8 <prefixtree.include.ab3@987> XINCLUDE "translation.include.ab3"
00010916 <prefixtree.include.ab3@988> XINCLUDE "translation.include.ab3"
00010944 <prefixtree.include.ab3@989> XINCLUDE "translation.include.ab3"
00010972 <prefixtree.include.ab3@990> XINCLUDE "translation.include.ab3"
000109A6 <prefixtree.include.ab3@991> XINCLUDE "translation.include.ab3"
000109B6 <prefixtree.include.ab3@992> XINCLUDE "translation.include.ab3"
000109C0 <prefixtree.include.ab3@994> XINCLUDE "translation.include.ab3"
000109C6 <prefixtree.include.ab3@995> XINCLUDE "translation.include.ab3"
000109C6 <phrasebook.include.ab3@34> XINCLUDE "translation.include.ab3"
00010A10 <phrasebook.include.ab3@58> XINCLUDE "translation.include.ab3"
00010A30 <phrasebook.include.ab3@59> XINCLUDE "translation.include.ab3"
00010A3A <phrasebook.include.ab3@60> XINCLUDE "translation.include.ab3"
00010A4E <phrasebook.include.ab3@61> XINCLUDE "translation.include.ab3"
00010A94 <phrasebook.include.ab3@62> XINCLUDE "translation.include.ab3"
00010ADA <phrasebook.include.ab3@63> XINCLUDE "translation.include.ab3"
00010B20 <phrasebook.include.ab3@64> XINCLUDE "translation.include.ab3"
00010B2A <phrasebook.include.ab3@66> XINCLUDE "translation.include.ab3"
00010B46 <phrasebook.include.ab3@67> XINCLUDE "translation.include.ab3"
00010B70 <phrasebook.include.ab3@70> XINCLUDE "translation.include.ab3"
00010BEE <phrasebook.include.ab3@71> XINCLUDE "translation.include.ab3"
00010C6C <phrasebook.include.ab3@72> XINCLUDE "translation.include.ab3"
00010CEA <phrasebook.include.ab3@73> XINCLUDE "translation.include.ab3"
00010D68 <phrasebook.include.ab3@74> XINCLUDE "translation.include.ab3"
00010DE6 <phrasebook.include.ab3@75> XINCLUDE "translation.include.ab3"
00010E64 <phrasebook.include.ab3@76> XINCLUDE "translation.include.ab3"
00010EE2 <phrasebook.include.ab3@77> XINCLUDE "translation.include.ab3"
00010F60 <phrasebook.include.ab3@78> XINCLUDE "translation.include.ab3"
00010FDE <phrasebook.include.ab3@79> XINCLUDE "translation.include.ab3"
0001105C <phrasebook.include.ab3@80> XINCLUDE "translation.include.ab3"
000110E0 <phrasebook.include.ab3@81> XINCLUDE "translation.include.ab3"
00011110 <phrasebook.include.ab3@82> XINCLUDE "translation.include.ab3"
0001116C <phrasebook.include.ab3@84> XINCLUDE "translation.include.ab3"
00011198 <phrasebook.include.ab3@85> XINCLUDE "translation.include.ab3"
00011262 <phrasebook.include.ab3@86> XINCLUDE "translation.include.ab3"
00011270 <phrasebook.include.ab3@88> XINCLUDE "translation.include.ab3"
000112AE <phrasebook.include.ab3@89> XINCLUDE "translation.include.ab3"
00011332 <phrasebook.include.ab3@90> XINCLUDE "translation.include.ab3"
0001135C <phrasebook.include.ab3@91> XINCLUDE "translation.include.ab3"
0001137A <phrasebook.include.ab3@92> XINCLUDE "translation.include.ab3"
00011394 <phrasebook.include.ab3@106> XINCLUDE "translation.include.ab3"
0001139E <phrasebook.include.ab3@107> XINCLUDE "translation.include.ab3"
000113AA <phrasebook.include.ab3@108> XINCLUDE "translation.include.ab3"
000113BA <phrasebook.include.ab3@109> XINCLUDE "translation.include.ab3"
000113CA <phrasebook.include.ab3@110> XINCLUDE "translation.include.ab3"
000113DA <phrasebook.include.ab3@111> XINCLUDE "translation.include.ab3"
000113EA <phrasebook.include.ab3@112> XINCLUDE "translation.include.ab3"
000113EE <phrasebook.include.ab3@114> XINCLUDE "translation.include.ab3"
0001142C <phrasebook.include.ab3@131> XINCLUDE "translation.include.ab3"
00011484 <phrasebook.include.ab3@132> XINCLUDE "translation.include.ab3"
000114E0 <phrasebook.include.ab3@133> XINCLUDE "translation.include.ab3"
0001156A <phrasebook.include.ab3@134> XINCLUDE "translation.include.ab3"
000115E8 <phrasebook.include.ab3@135> XINCLUDE "translation.include.ab3"
00011602 <phrasebook.include.ab3@137> XINCLUDE "translation.include.ab3"
00011630 <phrasebook.include.ab3@155> XINCLUDE "translation.include.ab3"
0001166C <phrasebook.include.ab3@156> XINCLUDE "translation.include.ab3"
0001173A <phrasebook.include.ab3@158> XINCLUDE "translation.include.ab3"
00011808 <phrasebook.include.ab3@159> XINCLUDE "translation.include.ab3"
00011854 <phrasebook.include.ab3@161> XINCLUDE "translation.include.ab3"
000118D2 <phrasebook.include.ab3@162> XINCLUDE "translation.include.ab3"
00011950 <phrasebook.include.ab3@163> XINCLUDE "translation.include.ab3"
000119AE <phrasebook.include.ab3@165> XINCLUDE "translation.include.ab3"
00011A44 <phrasebook.include.ab3@166> XINCLUDE "translation.include.ab3"
00011A7C <phrasebook.include.ab3@168> XINCLUDE "translation.include.ab3"
00011ADA <phrasebook.include.ab3@169> XINCLUDE "translation.include.ab3"
00011B62 <phrasebook.include.ab3@170> XINCLUDE "translation.include.ab3"
00011B6A <phrasebook.include.ab3@172> XINCLUDE "translation.include.ab3"
00011BD4 <phrasebook.include.ab3@174> XINCLUDE "translation.include.ab3"
00011C40 <phrasebook.include.ab3@175> XINCLUDE "translation.include.ab3"
00011C7E <phrasebook.include.ab3@176> XINCLUDE "translation.include.ab3"
00011D06 <phrasebook.include.ab3@177> XINCLUDE "translation.include.ab3"
00011D32 <phrasebook.include.ab3@187> XINCLUDE "translation.include.ab3"
00011D8E <phrasebook.include.ab3@188> XINCLUDE "translation.include.ab3"
00011E56 <phrasebook.include.ab3@189> XINCLUDE "translation.include.ab3"
00011EBA <phrasebook.include.ab3@190> XINCLUDE "translation.include.ab3"
00011EC0 <phrasebook.include.ab3@191> XINCLUDE "translation.include.ab3"
00011EF4 <phrasebook.include.ab3@192> XINCLUDE "translation.include.ab3"
00011FC2 <phrasebook.include.ab3@196> XINCLUDE "translation.include.ab3"
00012090 <phrasebook.include.ab3@197> XINCLUDE "translation.include.ab3"
000120BA <phrasebook.include.ab3@199> XINCLUDE "translation.include.ab3"
000120D8 <phrasebook.include.ab3@200> XINCLUDE "translation.include.ab3"
00012106 <phrasebook.include.ab3@204> XINCLUDE "translation.include.ab3"
00012142 <phrasebook.include.ab3@205> XINCLUDE "translation.include.ab3"
000121B2 <phrasebook.include.ab3@206> XINCLUDE "translation.include.ab3"
000121BA <phrasebook.include.ab3@207> XINCLUDE "translation.include.ab3"
0001220C <phrasebook.include.ab3@208> XINCLUDE "translation.include.ab3"
00012234 <phrasebook.include.ab3@209> XINCLUDE "translation.include.ab3"
0001224C <phrasebook.include.ab3@210> XINCLUDE "translation.include.ab3"
00012300 <phrasebook.include.ab3@211> XINCLUDE "translation.include.ab3"
0001230E <phrasebook.include.ab3@212> XINCLUDE "translation.include.ab3"
00012364 <phrasebook.include.ab3@213> XINCLUDE "translation.include.ab3"
000123C2 <phrasebook.include.ab3@214> XINCLUDE "translation.include.ab3"
000123C8 <phrasebook.include.ab3@215> XINCLUDE "translation.include.ab3"
0001244C <phrasebook.include.ab3@216> XINCLUDE "translation.include.ab3"
000124D0 <phrasebook.include.ab3@217> XINCLUDE "translation.include.ab3"
00012554 <phrasebook.include.ab3@218> XINCLUDE "translation.include.ab3"
000125D2 <phrasebook.include.ab3@219> XINCLUDE "translation.include.ab3"
00012650 <phrasebook.include.ab3@220> XINCLUDE "translation.include.ab3"
000126CE <phrasebook.include.ab3@221> XINCLUDE "translation.include.ab3"
0001274C <phrasebook.include.ab3@222> XINCLUDE "translation.include.ab3"
000127CA <phrasebook.include.ab3@223> XINCLUDE "translation.include.ab3"
00012848 <phrasebook.include.ab3@224> XINCLUDE "translation.include.ab3"
000128C6 <phrasebook.include.ab3@225> XINCLUDE "translation.include.ab3"
000128F0 <phrasebook.include.ab3@226> XINCLUDE "translation.include.ab3"
0001290E <phrasebook.include.ab3@227> XINCLUDE "translation.include.ab3"
0001293C <phrasebook.include.ab3@245> XINCLUDE "translation.include.ab3"
00012980 <phrasebook.include.ab3@246> XINCLUDE "translation.include.ab3"
00012986 <phrasebook.include.ab3@247> XINCLUDE "translation.include.ab3"
000129A0 <phrasebook.include.ab3@248> XINCLUDE "translation.include.ab3"
000129BC <phrasebook.include.ab3@249> XINCLUDE "translation.include.ab3"
000129F0 <phrasebook.include.ab3@250> XINCLUDE "translation.include.ab3"
00012A14 <phrasebook.include.ab3@251> XINCLUDE "translation.include.ab3"
00012A3C <phrasebook.include.ab3@252> XINCLUDE "translation.include.ab3"
00012AA8 <phrasebook.include.ab3@253> XINCLUDE "translation.include.ab3"
00012B06 <phrasebook.include.ab3@256> XINCLUDE "translation.include.ab3"
00012B64 <phrasebook.include.ab3@257> XINCLUDE "translation.include.ab3"
00012BB0 <phrasebook.include.ab3@258> XINCLUDE "translation.include.ab3"
00012C0A <phrasebook.include.ab3@259> XINCLUDE "translation.include.ab3"
00012C10 <phrasebook.include.ab3@260> XINCLUDE "translation.include.ab3"
00012C16 <phrasebook.include.ab3@262> XINCLUDE "translation.include.ab3"
00012C20 <phrasebook.include.ab3@263> XINCLUDE "translation.include.ab3"
00012C2A <phrasebook.include.ab3@264> XINCLUDE "translation.include.ab3"
00012C44 <phrasebook.include.ab3@265> XINCLUDE "translation.include.ab3"
00012C72 <phrasebook.include.ab3@282> XINCLUDE "translation.include.ab3"
00012C78 <phrasebook.include.ab3@283> XINCLUDE "translation.include.ab3"
00012CBC <phrasebook.include.ab3@284> XINCLUDE "translation.include.ab3"
00012CD6 <phrasebook.include.ab3@285> XINCLUDE "translation.include.ab3"
00012CE6 <phrasebook.include.ab3@286> XINCLUDE "translation.include.ab3"
00012CF0 <phrasebook.include.ab3@287> XINCLUDE "translation.include.ab3"
00012CFC <phrasebook.include.ab3@288> XINCLUDE "translation.include.ab3"
00012D06 <phrasebook.include.ab3@289> XINCLUDE "translation.include.ab3"
00012D2A <phrasebook.include.ab3@292> XINCLUDE "translation.include.ab3"
00012D72 <phrasebook.include.ab3@293> XINCLUDE "translation.include.ab3"
00012DBA <phrasebook.include.ab3@294> XINCLUDE "translation.include.ab3"
00012E02 <phrasebook.include.ab3@295> XINCLUDE "translation.include.ab3"
00012E18 <phrasebook.include.ab3@296> XINCLUDE "translation.include.ab3"
00012E2C <phrasebook.include.ab3@297> XINCLUDE "translation.include.ab3"
00012E36 <phrasebook.include.ab3@299> XINCLUDE "translation.include.ab3"
00012E40 <phrasebook.include.ab3@300> XINCLUDE "translation.include.ab3"
00012E5A <phrasebook.include.ab3@301> XINCLUDE "translation.include.ab3"
00012E84 <phrasebook.include.ab3@317> XINCLUDE "translation.include.ab3"
00012EC8 <phrasebook.include.ab3@318> XINCLUDE "translation.include.ab3"
00012EE2 <phrasebook.include.ab3@319> XINCLUDE "translation.include.ab3"
00012F40 <phrasebook.include.ab3@320> XINCLUDE "translation.include.ab3"
00012F5A <phrasebook.include.ab3@321> XINCLUDE "translation.include.ab3"
00012F72 <phrasebook.include.ab3@323> XINCLUDE "translation.include.ab3"
00012F7C <phrasebook.include.ab3@324> XINCLUDE "translation.include.ab3"
00012F98 <phrasebook.include.ab3@325> XINCLUDE "translation.include.ab3"
00012FA6 <phrasebook.include.ab3@326> XINCLUDE "translation.include.ab3"
00012FB2 <phrasebook.include.ab3@327> XINCLUDE "translation.include.ab3"
00012FFE <phrasebook.include.ab3@328> XINCLUDE "translation.include.ab3"
00013050 <phrasebook.include.ab3@329> XINCLUDE "translation.include.ab3"
000130A2 <phrasebook.include.ab3@330> XINCLUDE "translation.include.ab3"
000130B6 <phrasebook.include.ab3@331> XINCLUDE "translation.include.ab3"
000130C6 <phrasebook.include.ab3@332> XINCLUDE "translation.include.ab3"
000130CC <phrasebook.include.ab3@333> XINCLUDE "translation.include.ab3"
000130CE <phrasebook.include.ab3@335> XINCLUDE "translation.include.ab3"
000130D4 <phrasebook.include.ab3@336> XINCLUDE "translation.include.ab3"
000130DE <phrasebook.include.ab3@338> XINCLUDE "translation.include.ab3"
000130E8 <phrasebook.include.ab3@339> XINCLUDE "translation.include.ab3"
00013102 <phrasebook.include.ab3@340> XINCLUDE "translation.include.ab3"
0001312C <phrasebook.include.ab3@379> XINCLUDE "translation.include.ab3"
00013142 <phrasebook.include.ab3@380> XINCLUDE "translation.include.ab3"
0001314C <phrasebook.include.ab3@381> XINCLUDE "translation.include.ab3"
000131C4 <phrasebook.include.ab3@382> XINCLUDE "translation.include.ab3"
00013200 <phrasebook.include.ab3@383> XINCLUDE "translation.include.ab3"
00013210 <phrasebook.include.ab3@384> XINCLUDE "translation.include.ab3"
00013230 <phrasebook.include.ab3@385> XINCLUDE "translation.include.ab3"
00013250 <phrasebook.include.ab3@386> XINCLUDE "translation.include.ab3"
00013270 <phrasebook.include.ab3@387> XINCLUDE "translation.include.ab3"
000132A6 <phrasebook.include.ab3@388> XINCLUDE "translation.include.ab3"
000132CE <phrasebook.include.ab3@389> XINCLUDE "translation.include.ab3"
00013306 <phrasebook.include.ab3@390> XINCLUDE "translation.include.ab3"
0001336A <phrasebook.include.ab3@391> XINCLUDE "translation.include.ab3"
0001338A <phrasebook.include.ab3@392> XINCLUDE "translation.include.ab3"
00013406 <phrasebook.include.ab3@393> XINCLUDE "translation.include.ab3"
0001343E <phrasebook.include.ab3@396> XINCLUDE "translation.include.ab3"
000134B4 <phrasebook.include.ab3@397> XINCLUDE "translation.include.ab3"
000134D4 <phrasebook.include.ab3@398> XINCLUDE "translation.include.ab3"
00013550 <phrasebook.include.ab3@399> XINCLUDE "translation.include.ab3"
00013588 <phrasebook.include.ab3@402> XINCLUDE "translation.include.ab3"
000135FE <phrasebook.include.ab3@403> XINCLUDE "translation.include.ab3"
0001361E <phrasebook.include.ab3@404> XINCLUDE "translation.include.ab3"
0001369A <phrasebook.include.ab3@405> XINCLUDE "translation.include.ab3"
000136C6 <phrasebook.include.ab3@408> XINCLUDE "translation.include.ab3"
000136CE <phrasebook.include.ab3@409> XINCLUDE "translation.include.ab3"
00013714 <phrasebook.include.ab3@410> XINCLUDE "translation.include.ab3"
00013734 <phrasebook.include.ab3@411> XINCLUDE "translation.include.ab3"
0001373E <phrasebook.include.ab3@412> XINCLUDE "translation.include.ab3"
00013756 <phrasebook.include.ab3@413> XINCLUDE "translation.include.ab3"
00013766 <phrasebook.include.ab3@414> XINCLUDE "translation.include.ab3"
0001379E <phrasebook.include.ab3@415> XINCLUDE "translation.include.ab3"
000137D0 <phrasebook.include.ab3@416> XINCLUDE "translation.include.ab3"
000137E2 <phrasebook.include.ab3@419> XINCLUDE "translation.include.ab3"
00013864 <phrasebook.include.ab3@420> XINCLUDE "translation.include.ab3"
0001386E <phrasebook.include.ab3@421> XINCLUDE "translation.include.ab3"
000138A0 <phrasebook.include.ab3@422> XINCLUDE "translation.include.ab3"
000138D2 <phrasebook.include.ab3@423> XINCLUDE "translation.include.ab3"
000138FE <phrasebook.include.ab3@428> XINCLUDE "translation.include.ab3"
0001392A <phrasebook.include.ab3@429> XINCLUDE "translation.include.ab3"
0001394C <phrasebook.include.ab3@430> XINCLUDE "translation.include.ab3"
00013956 <phrasebook.include.ab3@432> XINCLUDE "translation.include.ab3"
00013970 <phrasebook.include.ab3@433> XINCLUDE "translation.include.ab3"
00013970 <translation.include.ab3@31> XINCLUDE "translation.include.ab3"
00013986 <translation.include.ab3@43> XINCLUDE "translation.include.ab3"
000139A2 <translation.include.ab3@44> XINCLUDE "translation.include.ab3"
000139A4 <translation.include.ab3@45> XINCLUDE "translation.include.ab3"
000139D2 <translation.include.ab3@46> XINCLUDE "translation.include.ab3"
000139D2 <AmiBlitz3.ab3@91> XINCLUDE "translation.include.ab3"
000139D2 <ted.include.ab3@1> XINCLUDE "/Shared/ted.include.ab3"
000139EC <ted.include.ab3@161> XINCLUDE "/Shared/ted.include.ab3"
000139F6 <ted.include.ab3@162> XINCLUDE "/Shared/ted.include.ab3"
00013A18 <ted.include.ab3@163> XINCLUDE "/Shared/ted.include.ab3"
00013A30 <ted.include.ab3@164> XINCLUDE "/Shared/ted.include.ab3"
00013A4A <ted.include.ab3@166> XINCLUDE "/Shared/ted.include.ab3"
00013A7C <ted.include.ab3@167> XINCLUDE "/Shared/ted.include.ab3"
00013A86 <ted.include.ab3@168> XINCLUDE "/Shared/ted.include.ab3"
00013A8C <ted.include.ab3@170> XINCLUDE "/Shared/ted.include.ab3"
00013A9E <ted.include.ab3@171> XINCLUDE "/Shared/ted.include.ab3"
00013B12 <ted.include.ab3@172> XINCLUDE "/Shared/ted.include.ab3"
00013B18 <ted.include.ab3@173> XINCLUDE "/Shared/ted.include.ab3"
00013B52 <ted.include.ab3@174> XINCLUDE "/Shared/ted.include.ab3"
00013B5C <ted.include.ab3@177> XINCLUDE "/Shared/ted.include.ab3"
00013B62 <ted.include.ab3@178> XINCLUDE "/Shared/ted.include.ab3"
00013B78 <ted.include.ab3@180> XINCLUDE "/Shared/ted.include.ab3"
00013B82 <ted.include.ab3@181> XINCLUDE "/Shared/ted.include.ab3"
00013B9A <ted.include.ab3@183> XINCLUDE "/Shared/ted.include.ab3"
00013B9C <ted.include.ab3@185> XINCLUDE "/Shared/ted.include.ab3"
00013BCA <ted.include.ab3@186> XINCLUDE "/Shared/ted.include.ab3"
00013BE4 <ted.include.ab3@190> XINCLUDE "/Shared/ted.include.ab3"
00013BFA <ted.include.ab3@191> XINCLUDE "/Shared/ted.include.ab3"
00013C2E <ted.include.ab3@192> XINCLUDE "/Shared/ted.include.ab3"
00013C32 <ted.include.ab3@194> XINCLUDE "/Shared/ted.include.ab3"
00013C4C <ted.include.ab3@196> XINCLUDE "/Shared/ted.include.ab3"
00013C62 <ted.include.ab3@197> XINCLUDE "/Shared/ted.include.ab3"
00013C96 <ted.include.ab3@198> XINCLUDE "/Shared/ted.include.ab3"
00013C9A <ted.include.ab3@200> XINCLUDE "/Shared/ted.include.ab3"
00013CB4 <ted.include.ab3@216> XINCLUDE "/Shared/ted.include.ab3"
00013CCA <ted.include.ab3@217> XINCLUDE "/Shared/ted.include.ab3"
00013CFE <ted.include.ab3@218> XINCLUDE "/Shared/ted.include.ab3"
00013D02 <ted.include.ab3@220> XINCLUDE "/Shared/ted.include.ab3"
00013D1C <ted.include.ab3@236> XINCLUDE "/Shared/ted.include.ab3"
00013D32 <ted.include.ab3@237> XINCLUDE "/Shared/ted.include.ab3"
00013D66 <ted.include.ab3@238> XINCLUDE "/Shared/ted.include.ab3"
00013D6A <ted.include.ab3@240> XINCLUDE "/Shared/ted.include.ab3"
00013D84 <ted.include.ab3@242> XINCLUDE "/Shared/ted.include.ab3"
00013D9A <ted.include.ab3@243> XINCLUDE "/Shared/ted.include.ab3"
00013DCE <ted.include.ab3@244> XINCLUDE "/Shared/ted.include.ab3"
00013DD2 <ted.include.ab3@246> XINCLUDE "/Shared/ted.include.ab3"
00013DD2 <AmiBlitz3.ab3@92> XINCLUDE "/Shared/ted.include.ab3"
00013DD2 <CLIModeSupport.ab3@1> XINCLUDE "CLIModeSupport.ab3"
00013DE8 <CLIModeSupport.ab3@4> XINCLUDE "CLIModeSupport.ab3"
00013DFE <CLIModeSupport.ab3@7> XINCLUDE "CLIModeSupport.ab3"
00013E0C <CLIModeSupport.ab3@8> XINCLUDE "CLIModeSupport.ab3"
00013E1A <CLIModeSupport.ab3@9> XINCLUDE "CLIModeSupport.ab3"
00013E24 <CLIModeSupport.ab3@11> XINCLUDE "CLIModeSupport.ab3"
00013E36 <CLIModeSupport.ab3@12> XINCLUDE "CLIModeSupport.ab3"
00013E48 <CLIModeSupport.ab3@13> XINCLUDE "CLIModeSupport.ab3"
00013E4E <CLIModeSupport.ab3@14> XINCLUDE "CLIModeSupport.ab3"
00013E88 <CLIModeSupport.ab3@15> XINCLUDE "CLIModeSupport.ab3"
00013E8C <CLIModeSupport.ab3@18> XINCLUDE "CLIModeSupport.ab3"
00013EA2 <CLIModeSupport.ab3@21> XINCLUDE "CLIModeSupport.ab3"
00013EB8 <CLIModeSupport.ab3@23> XINCLUDE "CLIModeSupport.ab3"
00013EC4 <CLIModeSupport.ab3@24> XINCLUDE "CLIModeSupport.ab3"
00013ED0 <CLIModeSupport.ab3@25> XINCLUDE "CLIModeSupport.ab3"
00013ED8 <CLIModeSupport.ab3@26> XINCLUDE "CLIModeSupport.ab3"
00013EE0 <CLIModeSupport.ab3@27> XINCLUDE "CLIModeSupport.ab3"
00013EE4 <CLIModeSupport.ab3@28> XINCLUDE "CLIModeSupport.ab3"
00013F0E <CLIModeSupport.ab3@47> XINCLUDE "CLIModeSupport.ab3"
00013F3A <CLIModeSupport.ab3@49> XINCLUDE "CLIModeSupport.ab3"
00013F4C <CLIModeSupport.ab3@50> XINCLUDE "CLIModeSupport.ab3"
00013F64 <CLIModeSupport.ab3@52> XINCLUDE "CLIModeSupport.ab3"
00013F7A <CLIModeSupport.ab3@56> XINCLUDE "CLIModeSupport.ab3"
00013F80 <CLIModeSupport.ab3@58> XINCLUDE "CLIModeSupport.ab3"
00013FB6 <CLIModeSupport.ab3@61> XINCLUDE "CLIModeSupport.ab3"
00013FEE <CLIModeSupport.ab3@62> XINCLUDE "CLIModeSupport.ab3"
00014026 <CLIModeSupport.ab3@63> XINCLUDE "CLIModeSupport.ab3"
0001405E <CLIModeSupport.ab3@64> XINCLUDE "CLIModeSupport.ab3"
00014096 <CLIModeSupport.ab3@65> XINCLUDE "CLIModeSupport.ab3"
000140CE <CLIModeSupport.ab3@66> XINCLUDE "CLIModeSupport.ab3"
00014106 <CLIModeSupport.ab3@67> XINCLUDE "CLIModeSupport.ab3"
0001413E <CLIModeSupport.ab3@68> XINCLUDE "CLIModeSupport.ab3"
00014176 <CLIModeSupport.ab3@69> XINCLUDE "CLIModeSupport.ab3"
000141AE <CLIModeSupport.ab3@70> XINCLUDE "CLIModeSupport.ab3"
000141E6 <CLIModeSupport.ab3@71> XINCLUDE "CLIModeSupport.ab3"
0001421E <CLIModeSupport.ab3@72> XINCLUDE "CLIModeSupport.ab3"
00014256 <CLIModeSupport.ab3@73> XINCLUDE "CLIModeSupport.ab3"
0001428A <CLIModeSupport.ab3@74> XINCLUDE "CLIModeSupport.ab3"
00014294 <CLIModeSupport.ab3@75> XINCLUDE "CLIModeSupport.ab3"
0001429E <CLIModeSupport.ab3@77> XINCLUDE "CLIModeSupport.ab3"
000142A8 <CLIModeSupport.ab3@78> XINCLUDE "CLIModeSupport.ab3"
000142D2 <CLIModeSupport.ab3@82> XINCLUDE "CLIModeSupport.ab3"
000142DC <CLIModeSupport.ab3@83> XINCLUDE "CLIModeSupport.ab3"
000142E0 <CLIModeSupport.ab3@84> XINCLUDE "CLIModeSupport.ab3"
00014314 <CLIModeSupport.ab3@85> XINCLUDE "CLIModeSupport.ab3"
00014332 <CLIModeSupport.ab3@88> XINCLUDE "CLIModeSupport.ab3"
0001433C <CLIModeSupport.ab3@89> XINCLUDE "CLIModeSupport.ab3"
00014348 <CLIModeSupport.ab3@90> XINCLUDE "CLIModeSupport.ab3"
0001434E <CLIModeSupport.ab3@91> XINCLUDE "CLIModeSupport.ab3"
0001435A <CLIModeSupport.ab3@92> XINCLUDE "CLIModeSupport.ab3"
00014360 <CLIModeSupport.ab3@93> XINCLUDE "CLIModeSupport.ab3"
0001436C <CLIModeSupport.ab3@94> XINCLUDE "CLIModeSupport.ab3"
00014372 <CLIModeSupport.ab3@95> XINCLUDE "CLIModeSupport.ab3"
00014378 <CLIModeSupport.ab3@98> XINCLUDE "CLIModeSupport.ab3"
000143B2 <CLIModeSupport.ab3@99> XINCLUDE "CLIModeSupport.ab3"
000143B8 <CLIModeSupport.ab3@100> XINCLUDE "CLIModeSupport.ab3"
000143CE <CLIModeSupport.ab3@103> XINCLUDE "CLIModeSupport.ab3"
000143D8 <CLIModeSupport.ab3@105> XINCLUDE "CLIModeSupport.ab3"
000143DE <CLIModeSupport.ab3@106> XINCLUDE "CLIModeSupport.ab3"
000143E4 <CLIModeSupport.ab3@108> XINCLUDE "CLIModeSupport.ab3"
000143E5 <CLIModeSupport.ab3@110> XINCLUDE "CLIModeSupport.ab3"
000143E6 <CLIModeSupport.ab3@111> XINCLUDE "CLIModeSupport.ab3"
000143E7 <CLIModeSupport.ab3@112> XINCLUDE "CLIModeSupport.ab3"
000143E8 <CLIModeSupport.ab3@113> XINCLUDE "CLIModeSupport.ab3"
000143EA <CLIModeSupport.ab3@116> XINCLUDE "CLIModeSupport.ab3"
000143EC <CLIModeSupport.ab3@117> XINCLUDE "CLIModeSupport.ab3"
000143EE <CLIModeSupport.ab3@120> XINCLUDE "CLIModeSupport.ab3"
000143F0 <CLIModeSupport.ab3@121> XINCLUDE "CLIModeSupport.ab3"
000143F4 <CLIModeSupport.ab3@122> XINCLUDE "CLIModeSupport.ab3"
000143F6 <CLIModeSupport.ab3@124> XINCLUDE "CLIModeSupport.ab3"
000143F8 <CLIModeSupport.ab3@125> XINCLUDE "CLIModeSupport.ab3"
000143FC <CLIModeSupport.ab3@126> XINCLUDE "CLIModeSupport.ab3"
000143FE <CLIModeSupport.ab3@127> XINCLUDE "CLIModeSupport.ab3"
00014400 <CLIModeSupport.ab3@147> XINCLUDE "CLIModeSupport.ab3"
00014402 <CLIModeSupport.ab3@148> XINCLUDE "CLIModeSupport.ab3"
00014404 <CLIModeSupport.ab3@149> XINCLUDE "CLIModeSupport.ab3"
00014406 <CLIModeSupport.ab3@150> XINCLUDE "CLIModeSupport.ab3"
00014408 <CLIModeSupport.ab3@153> XINCLUDE "CLIModeSupport.ab3"
0001440C <CLIModeSupport.ab3@154> XINCLUDE "CLIModeSupport.ab3"
00014412 <CLIModeSupport.ab3@157> XINCLUDE "CLIModeSupport.ab3"
00014416 <CLIModeSupport.ab3@158> XINCLUDE "CLIModeSupport.ab3"
00014418 <CLIModeSupport.ab3@161> XINCLUDE "CLIModeSupport.ab3"
0001441C <CLIModeSupport.ab3@162> XINCLUDE "CLIModeSupport.ab3"
0001441E <CLIModeSupport.ab3@163> XINCLUDE "CLIModeSupport.ab3"
00014420 <CLIModeSupport.ab3@164> XINCLUDE "CLIModeSupport.ab3"
00014422 <CLIModeSupport.ab3@165> XINCLUDE "CLIModeSupport.ab3"
00014424 <CLIModeSupport.ab3@166> XINCLUDE "CLIModeSupport.ab3"
00014426 <CLIModeSupport.ab3@169> XINCLUDE "CLIModeSupport.ab3"
00014428 <CLIModeSupport.ab3@170> XINCLUDE "CLIModeSupport.ab3"
0001442E <CLIModeSupport.ab3@171> XINCLUDE "CLIModeSupport.ab3"
00014434 <CLIModeSupport.ab3@172> XINCLUDE "CLIModeSupport.ab3"
00014436 <CLIModeSupport.ab3@175> XINCLUDE "CLIModeSupport.ab3"
0001443A <CLIModeSupport.ab3@176> XINCLUDE "CLIModeSupport.ab3"
0001443E <CLIModeSupport.ab3@177> XINCLUDE "CLIModeSupport.ab3"
00014444 <CLIModeSupport.ab3@178> XINCLUDE "CLIModeSupport.ab3"
0001444A <CLIModeSupport.ab3@180> XINCLUDE "CLIModeSupport.ab3"
0001444E <CLIModeSupport.ab3@181> XINCLUDE "CLIModeSupport.ab3"
00014452 <CLIModeSupport.ab3@183> XINCLUDE "CLIModeSupport.ab3"
00014458 <CLIModeSupport.ab3@185> XINCLUDE "CLIModeSupport.ab3"
0001445C <CLIModeSupport.ab3@186> XINCLUDE "CLIModeSupport.ab3"
00014462 <CLIModeSupport.ab3@189> XINCLUDE "CLIModeSupport.ab3"
00014468 <CLIModeSupport.ab3@192> XINCLUDE "CLIModeSupport.ab3"
0001446C <CLIModeSupport.ab3@193> XINCLUDE "CLIModeSupport.ab3"
00014472 <CLIModeSupport.ab3@196> XINCLUDE "CLIModeSupport.ab3"
00014476 <CLIModeSupport.ab3@197> XINCLUDE "CLIModeSupport.ab3"
0001447C <CLIModeSupport.ab3@198> XINCLUDE "CLIModeSupport.ab3"
00014480 <CLIModeSupport.ab3@199> XINCLUDE "CLIModeSupport.ab3"
00014484 <CLIModeSupport.ab3@202> XINCLUDE "CLIModeSupport.ab3"
00014488 <CLIModeSupport.ab3@203> XINCLUDE "CLIModeSupport.ab3"
0001448C <CLIModeSupport.ab3@204> XINCLUDE "CLIModeSupport.ab3"
00014490 <CLIModeSupport.ab3@205> XINCLUDE "CLIModeSupport.ab3"
00014494 <CLIModeSupport.ab3@206> XINCLUDE "CLIModeSupport.ab3"
00014498 <CLIModeSupport.ab3@208> XINCLUDE "CLIModeSupport.ab3"
0001449C <CLIModeSupport.ab3@209> XINCLUDE "CLIModeSupport.ab3"
000144A0 <CLIModeSupport.ab3@210> XINCLUDE "CLIModeSupport.ab3"
000144A4 <CLIModeSupport.ab3@211> XINCLUDE "CLIModeSupport.ab3"
000144A8 <CLIModeSupport.ab3@212> XINCLUDE "CLIModeSupport.ab3"
000144AC <CLIModeSupport.ab3@213> XINCLUDE "CLIModeSupport.ab3"
000144B2 <CLIModeSupport.ab3@214> XINCLUDE "CLIModeSupport.ab3"
000144B6 <CLIModeSupport.ab3@215> XINCLUDE "CLIModeSupport.ab3"
000144BC <CLIModeSupport.ab3@218> XINCLUDE "CLIModeSupport.ab3"
000144BE <CLIModeSupport.ab3@219> XINCLUDE "CLIModeSupport.ab3"
000144C2 <CLIModeSupport.ab3@220> XINCLUDE "CLIModeSupport.ab3"
000144C6 <CLIModeSupport.ab3@221> XINCLUDE "CLIModeSupport.ab3"
000144CA <CLIModeSupport.ab3@224> XINCLUDE "CLIModeSupport.ab3"
000144CE <CLIModeSupport.ab3@225> XINCLUDE "CLIModeSupport.ab3"
000144D2 <CLIModeSupport.ab3@226> XINCLUDE "CLIModeSupport.ab3"
000144D6 <CLIModeSupport.ab3@227> XINCLUDE "CLIModeSupport.ab3"
000144DA <CLIModeSupport.ab3@228> XINCLUDE "CLIModeSupport.ab3"
000144DE <CLIModeSupport.ab3@229> XINCLUDE "CLIModeSupport.ab3"
000144E4 <CLIModeSupport.ab3@232> XINCLUDE "CLIModeSupport.ab3"
000144E6 <CLIModeSupport.ab3@233> XINCLUDE "CLIModeSupport.ab3"
000144EA <CLIModeSupport.ab3@234> XINCLUDE "CLIModeSupport.ab3"
000144EE <CLIModeSupport.ab3@235> XINCLUDE "CLIModeSupport.ab3"
000144F2 <CLIModeSupport.ab3@236> XINCLUDE "CLIModeSupport.ab3"
000144F6 <CLIModeSupport.ab3@237> XINCLUDE "CLIModeSupport.ab3"
000144FA <CLIModeSupport.ab3@239> XINCLUDE "CLIModeSupport.ab3"
000144FE <CLIModeSupport.ab3@240> XINCLUDE "CLIModeSupport.ab3"
00014502 <CLIModeSupport.ab3@241> XINCLUDE "CLIModeSupport.ab3"
00014506 <CLIModeSupport.ab3@242> XINCLUDE "CLIModeSupport.ab3"
0001450A <CLIModeSupport.ab3@243> XINCLUDE "CLIModeSupport.ab3"
0001450E <CLIModeSupport.ab3@244> XINCLUDE "CLIModeSupport.ab3"
00014512 <CLIModeSupport.ab3@245> XINCLUDE "CLIModeSupport.ab3"
00014516 <CLIModeSupport.ab3@246> XINCLUDE "CLIModeSupport.ab3"
0001451A <CLIModeSupport.ab3@247> XINCLUDE "CLIModeSupport.ab3"
0001451E <CLIModeSupport.ab3@248> XINCLUDE "CLIModeSupport.ab3"
00014522 <CLIModeSupport.ab3@249> XINCLUDE "CLIModeSupport.ab3"
00014526 <CLIModeSupport.ab3@250> XINCLUDE "CLIModeSupport.ab3"
0001452A <CLIModeSupport.ab3@251> XINCLUDE "CLIModeSupport.ab3"
0001452E <CLIModeSupport.ab3@252> XINCLUDE "CLIModeSupport.ab3"
00014534 <CLIModeSupport.ab3@255> XINCLUDE "CLIModeSupport.ab3"
00014536 <CLIModeSupport.ab3@256> XINCLUDE "CLIModeSupport.ab3"
0001453A <CLIModeSupport.ab3@257> XINCLUDE "CLIModeSupport.ab3"
0001453E <CLIModeSupport.ab3@258> XINCLUDE "CLIModeSupport.ab3"
00014544 <CLIModeSupport.ab3@259> XINCLUDE "CLIModeSupport.ab3"
0001454A <CLIModeSupport.ab3@261> XINCLUDE "CLIModeSupport.ab3"
0001454E <CLIModeSupport.ab3@262> XINCLUDE "CLIModeSupport.ab3"
00014552 <CLIModeSupport.ab3@263> XINCLUDE "CLIModeSupport.ab3"
00014558 <CLIModeSupport.ab3@265> XINCLUDE "CLIModeSupport.ab3"
0001455C <CLIModeSupport.ab3@266> XINCLUDE "CLIModeSupport.ab3"
00014562 <CLIModeSupport.ab3@267> XINCLUDE "CLIModeSupport.ab3"
00014566 <CLIModeSupport.ab3@268> XINCLUDE "CLIModeSupport.ab3"
00014568 <CLIModeSupport.ab3@271> XINCLUDE "CLIModeSupport.ab3"
0001456E <CLIModeSupport.ab3@272> XINCLUDE "CLIModeSupport.ab3"
00014570 <CLIModeSupport.ab3@275> XINCLUDE "CLIModeSupport.ab3"
00014572 <CLIModeSupport.ab3@276> XINCLUDE "CLIModeSupport.ab3"
00014574 <CLIModeSupport.ab3@277> XINCLUDE "CLIModeSupport.ab3"
00014576 <CLIModeSupport.ab3@280> XINCLUDE "CLIModeSupport.ab3"
0001457A <CLIModeSupport.ab3@281> XINCLUDE "CLIModeSupport.ab3"
0001457C <CLIModeSupport.ab3@282> XINCLUDE "CLIModeSupport.ab3"
00014580 <CLIModeSupport.ab3@283> XINCLUDE "CLIModeSupport.ab3"
00014584 <CLIModeSupport.ab3@284> XINCLUDE "CLIModeSupport.ab3"
00014588 <CLIModeSupport.ab3@285> XINCLUDE "CLIModeSupport.ab3"
0001458A <CLIModeSupport.ab3@286> XINCLUDE "CLIModeSupport.ab3"
0001458E <CLIModeSupport.ab3@287> XINCLUDE "CLIModeSupport.ab3"
00014590 <CLIModeSupport.ab3@290> XINCLUDE "CLIModeSupport.ab3"
00014592 <CLIModeSupport.ab3@291> XINCLUDE "CLIModeSupport.ab3"
00014596 <CLIModeSupport.ab3@292> XINCLUDE "CLIModeSupport.ab3"
00014598 <CLIModeSupport.ab3@293> XINCLUDE "CLIModeSupport.ab3"
0001459C <CLIModeSupport.ab3@294> XINCLUDE "CLIModeSupport.ab3"
0001459E <CLIModeSupport.ab3@297> XINCLUDE "CLIModeSupport.ab3"
000145A2 <CLIModeSupport.ab3@298> XINCLUDE "CLIModeSupport.ab3"
000145A8 <CLIModeSupport.ab3@301> XINCLUDE "CLIModeSupport.ab3"
000145AA <CLIModeSupport.ab3@302> XINCLUDE "CLIModeSupport.ab3"
000145AE <CLIModeSupport.ab3@303> XINCLUDE "CLIModeSupport.ab3"
000145B2 <CLIModeSupport.ab3@304> XINCLUDE "CLIModeSupport.ab3"
000145B8 <CLIModeSupport.ab3@305> XINCLUDE "CLIModeSupport.ab3"
000145BE <CLIModeSupport.ab3@307> XINCLUDE "CLIModeSupport.ab3"
000145C2 <CLIModeSupport.ab3@308> XINCLUDE "CLIModeSupport.ab3"
000145C6 <CLIModeSupport.ab3@309> XINCLUDE "CLIModeSupport.ab3"
000145CC <CLIModeSupport.ab3@311> XINCLUDE "CLIModeSupport.ab3"
000145D0 <CLIModeSupport.ab3@312> XINCLUDE "CLIModeSupport.ab3"
000145D6 <CLIModeSupport.ab3@313> XINCLUDE "CLIModeSupport.ab3"
000145DA <CLIModeSupport.ab3@314> XINCLUDE "CLIModeSupport.ab3"
000145DE <CLIModeSupport.ab3@315> XINCLUDE "CLIModeSupport.ab3"
000145E0 <CLIModeSupport.ab3@318> XINCLUDE "CLIModeSupport.ab3"
000145E4 <CLIModeSupport.ab3@319> XINCLUDE "CLIModeSupport.ab3"
000145EA <CLIModeSupport.ab3@320> XINCLUDE "CLIModeSupport.ab3"
000145EE <CLIModeSupport.ab3@321> XINCLUDE "CLIModeSupport.ab3"
000145F2 <CLIModeSupport.ab3@322> XINCLUDE "CLIModeSupport.ab3"
000145F6 <CLIModeSupport.ab3@323> XINCLUDE "CLIModeSupport.ab3"
000145FA <CLIModeSupport.ab3@324> XINCLUDE "CLIModeSupport.ab3"
000145FE <CLIModeSupport.ab3@325> XINCLUDE "CLIModeSupport.ab3"
00014602 <CLIModeSupport.ab3@326> XINCLUDE "CLIModeSupport.ab3"
00014606 <CLIModeSupport.ab3@328> XINCLUDE "CLIModeSupport.ab3"
0001460A <CLIModeSupport.ab3@329> XINCLUDE "CLIModeSupport.ab3"
0001460C <CLIModeSupport.ab3@330> XINCLUDE "CLIModeSupport.ab3"
0001460E <CLIModeSupport.ab3@331> XINCLUDE "CLIModeSupport.ab3"
00014610 <CLIModeSupport.ab3@332> XINCLUDE "CLIModeSupport.ab3"
00014614 <CLIModeSupport.ab3@333> XINCLUDE "CLIModeSupport.ab3"
00014616 <CLIModeSupport.ab3@334> XINCLUDE "CLIModeSupport.ab3"
00014618 <CLIModeSupport.ab3@335> XINCLUDE "CLIModeSupport.ab3"
0001461A <CLIModeSupport.ab3@336> XINCLUDE "CLIModeSupport.ab3"
0001461C <CLIModeSupport.ab3@337> XINCLUDE "CLIModeSupport.ab3"
0001461E <CLIModeSupport.ab3@338> XINCLUDE "CLIModeSupport.ab3"
00014622 <CLIModeSupport.ab3@339> XINCLUDE "CLIModeSupport.ab3"
00014624 <CLIModeSupport.ab3@340> XINCLUDE "CLIModeSupport.ab3"
00014628 <CLIModeSupport.ab3@341> XINCLUDE "CLIModeSupport.ab3"
0001462A <CLIModeSupport.ab3@344> XINCLUDE "CLIModeSupport.ab3"
0001462C <CLIModeSupport.ab3@345> XINCLUDE "CLIModeSupport.ab3"
0001462E <CLIModeSupport.ab3@346> XINCLUDE "CLIModeSupport.ab3"
00014632 <CLIModeSupport.ab3@347> XINCLUDE "CLIModeSupport.ab3"
00014634 <CLIModeSupport.ab3@348> XINCLUDE "CLIModeSupport.ab3"
00014636 <CLIModeSupport.ab3@351> XINCLUDE "CLIModeSupport.ab3"
00014638 <CLIModeSupport.ab3@354> XINCLUDE "CLIModeSupport.ab3"
0001463C <CLIModeSupport.ab3@355> XINCLUDE "CLIModeSupport.ab3"
00014640 <CLIModeSupport.ab3@358> XINCLUDE "CLIModeSupport.ab3"
00014644 <CLIModeSupport.ab3@359> XINCLUDE "CLIModeSupport.ab3"
00014648 <CLIModeSupport.ab3@360> XINCLUDE "CLIModeSupport.ab3"
0001464C <CLIModeSupport.ab3@361> XINCLUDE "CLIModeSupport.ab3"
00014650 <CLIModeSupport.ab3@362> XINCLUDE "CLIModeSupport.ab3"
00014654 <CLIModeSupport.ab3@363> XINCLUDE "CLIModeSupport.ab3"
00014658 <CLIModeSupport.ab3@364> XINCLUDE "CLIModeSupport.ab3"
0001465C <CLIModeSupport.ab3@365> XINCLUDE "CLIModeSupport.ab3"
0001465E <CLIModeSupport.ab3@368> XINCLUDE "CLIModeSupport.ab3"
00014660 <CLIModeSupport.ab3@371> XINCLUDE "CLIModeSupport.ab3"
00014662 <CLIModeSupport.ab3@374> XINCLUDE "CLIModeSupport.ab3"
00014666 <CLIModeSupport.ab3@375> XINCLUDE "CLIModeSupport.ab3"
00014668 <CLIModeSupport.ab3@376> XINCLUDE "CLIModeSupport.ab3"
0001466A <CLIModeSupport.ab3@377> XINCLUDE "CLIModeSupport.ab3"
00014680 <CLIModeSupport.ab3@382> XINCLUDE "CLIModeSupport.ab3"
00014686 <CLIModeSupport.ab3@383> XINCLUDE "CLIModeSupport.ab3"
000146C4 <CLIModeSupport.ab3@385> XINCLUDE "CLIModeSupport.ab3"
000146C8 <CLIModeSupport.ab3@386> XINCLUDE "CLIModeSupport.ab3"
000146D2 <CLIModeSupport.ab3@387> XINCLUDE "CLIModeSupport.ab3"
000146D4 <CLIModeSupport.ab3@388> XINCLUDE "CLIModeSupport.ab3"
00014708 <CLIModeSupport.ab3@389> XINCLUDE "CLIModeSupport.ab3"
00014718 <CLIModeSupport.ab3@390> XINCLUDE "CLIModeSupport.ab3"
0001471A <CLIModeSupport.ab3@393> XINCLUDE "CLIModeSupport.ab3"
00014752 <CLIModeSupport.ab3@394> XINCLUDE "CLIModeSupport.ab3"
0001478A <CLIModeSupport.ab3@395> XINCLUDE "CLIModeSupport.ab3"
000147C2 <CLIModeSupport.ab3@396> XINCLUDE "CLIModeSupport.ab3"
000147CC <CLIModeSupport.ab3@398> XINCLUDE "CLIModeSupport.ab3"
000147D2 <CLIModeSupport.ab3@399> XINCLUDE "CLIModeSupport.ab3"
000147E8 <CLIModeSupport.ab3@403> XINCLUDE "CLIModeSupport.ab3"
00014826 <CLIModeSupport.ab3@404> XINCLUDE "CLIModeSupport.ab3"
0001482A <CLIModeSupport.ab3@405> XINCLUDE "CLIModeSupport.ab3"
00014832 <CLIModeSupport.ab3@406> XINCLUDE "CLIModeSupport.ab3"
00014870 <CLIModeSupport.ab3@407> XINCLUDE "CLIModeSupport.ab3"
00014872 <CLIModeSupport.ab3@408> XINCLUDE "CLIModeSupport.ab3"
00014876 <CLIModeSupport.ab3@409> XINCLUDE "CLIModeSupport.ab3"
000148B4 <CLIModeSupport.ab3@411> XINCLUDE "CLIModeSupport.ab3"
000148B8 <CLIModeSupport.ab3@412> XINCLUDE "CLIModeSupport.ab3"
000148F6 <CLIModeSupport.ab3@414> XINCLUDE "CLIModeSupport.ab3"
000148FA <CLIModeSupport.ab3@415> XINCLUDE "CLIModeSupport.ab3"
00014924 <CLIModeSupport.ab3@417> XINCLUDE "CLIModeSupport.ab3"
0001492E <CLIModeSupport.ab3@418> XINCLUDE "CLIModeSupport.ab3"
00014942 <CLIModeSupport.ab3@419> XINCLUDE "CLIModeSupport.ab3"
00014968 <CLIModeSupport.ab3@420> XINCLUDE "CLIModeSupport.ab3"
0001496E <CLIModeSupport.ab3@421> XINCLUDE "CLIModeSupport.ab3"
0001497C <CLIModeSupport.ab3@422> XINCLUDE "CLIModeSupport.ab3"
00014982 <CLIModeSupport.ab3@423> XINCLUDE "CLIModeSupport.ab3"
000149BA <CLIModeSupport.ab3@425> XINCLUDE "CLIModeSupport.ab3"
000149BE <CLIModeSupport.ab3@428> XINCLUDE "CLIModeSupport.ab3"
000149E8 <CLIModeSupport.ab3@431> XINCLUDE "CLIModeSupport.ab3"
000149EE <CLIModeSupport.ab3@432> XINCLUDE "CLIModeSupport.ab3"
00014A0E <CLIModeSupport.ab3@433> XINCLUDE "CLIModeSupport.ab3"
00014A18 <CLIModeSupport.ab3@434> XINCLUDE "CLIModeSupport.ab3"
00014A1C <CLIModeSupport.ab3@435> XINCLUDE "CLIModeSupport.ab3"
00014A1E <CLIModeSupport.ab3@436> XINCLUDE "CLIModeSupport.ab3"
00014A3C <CLIModeSupport.ab3@437> XINCLUDE "CLIModeSupport.ab3"
00014A3E <CLIModeSupport.ab3@438> XINCLUDE "CLIModeSupport.ab3"
00014A44 <CLIModeSupport.ab3@439> XINCLUDE "CLIModeSupport.ab3"
00014A4A <CLIModeSupport.ab3@440> XINCLUDE "CLIModeSupport.ab3"
00014A74 <CLIModeSupport.ab3@442> XINCLUDE "CLIModeSupport.ab3"
00014A76 <CLIModeSupport.ab3@443> XINCLUDE "CLIModeSupport.ab3"
00014AA4 <CLIModeSupport.ab3@444> XINCLUDE "CLIModeSupport.ab3"
00014AA8 <CLIModeSupport.ab3@445> XINCLUDE "CLIModeSupport.ab3"
00014AD6 <CLIModeSupport.ab3@446> XINCLUDE "CLIModeSupport.ab3"
00014ADA <CLIModeSupport.ab3@447> XINCLUDE "CLIModeSupport.ab3"
00014B00 <CLIModeSupport.ab3@449> XINCLUDE "CLIModeSupport.ab3"
00014B10 <CLIModeSupport.ab3@450> XINCLUDE "CLIModeSupport.ab3"
00014B16 <CLIModeSupport.ab3@451> XINCLUDE "CLIModeSupport.ab3"
00014B1C <CLIModeSupport.ab3@452> XINCLUDE "CLIModeSupport.ab3"
00014B56 <CLIModeSupport.ab3@453> XINCLUDE "CLIModeSupport.ab3"
00014B60 <CLIModeSupport.ab3@455> XINCLUDE "CLIModeSupport.ab3"
00014B7A <CLIModeSupport.ab3@456> XINCLUDE "CLIModeSupport.ab3"
00014B98 <CLIModeSupport.ab3@468> XINCLUDE "CLIModeSupport.ab3"
00014BA0 <CLIModeSupport.ab3@469> XINCLUDE "CLIModeSupport.ab3"
00014BA6 <CLIModeSupport.ab3@470> XINCLUDE "CLIModeSupport.ab3"
00014BAC <CLIModeSupport.ab3@471> XINCLUDE "CLIModeSupport.ab3"
00014BCE <CLIModeSupport.ab3@472> XINCLUDE "CLIModeSupport.ab3"
00014BE6 <CLIModeSupport.ab3@474> XINCLUDE "CLIModeSupport.ab3"
00014C0C <CLIModeSupport.ab3@475> XINCLUDE "CLIModeSupport.ab3"
00014C36 <CLIModeSupport.ab3@476> XINCLUDE "CLIModeSupport.ab3"
00014C44 <CLIModeSupport.ab3@477> XINCLUDE "CLIModeSupport.ab3"
00014C4A <CLIModeSupport.ab3@478> XINCLUDE "CLIModeSupport.ab3"
00014C5E <CLIModeSupport.ab3@479> XINCLUDE "CLIModeSupport.ab3"
00014C76 <CLIModeSupport.ab3@481> XINCLUDE "CLIModeSupport.ab3"
00014C84 <CLIModeSupport.ab3@482> XINCLUDE "CLIModeSupport.ab3"
00014C98 <CLIModeSupport.ab3@483> XINCLUDE "CLIModeSupport.ab3"
00014CCE <CLIModeSupport.ab3@484> XINCLUDE "CLIModeSupport.ab3"
00014CDC <CLIModeSupport.ab3@485> XINCLUDE "CLIModeSupport.ab3"
00014D0C <CLIModeSupport.ab3@486> XINCLUDE "CLIModeSupport.ab3"
00014D1A <CLIModeSupport.ab3@487> XINCLUDE "CLIModeSupport.ab3"
00014D20 <CLIModeSupport.ab3@488> XINCLUDE "CLIModeSupport.ab3"
00014D2E <CLIModeSupport.ab3@489> XINCLUDE "CLIModeSupport.ab3"
00014D34 <CLIModeSupport.ab3@490> XINCLUDE "CLIModeSupport.ab3"
00014D3A <CLIModeSupport.ab3@492> XINCLUDE "CLIModeSupport.ab3"
00014D48 <CLIModeSupport.ab3@493> XINCLUDE "CLIModeSupport.ab3"
00014D4A <CLIModeSupport.ab3@494> XINCLUDE "CLIModeSupport.ab3"
00014D50 <CLIModeSupport.ab3@496> XINCLUDE "CLIModeSupport.ab3"
00014D66 <CLIModeSupport.ab3@498> XINCLUDE "CLIModeSupport.ab3"
00014D70 <CLIModeSupport.ab3@499> XINCLUDE "CLIModeSupport.ab3"
00014D76 <CLIModeSupport.ab3@500> XINCLUDE "CLIModeSupport.ab3"
00014DA0 <CLIModeSupport.ab3@504> XINCLUDE "CLIModeSupport.ab3"
00014DDE <CLIModeSupport.ab3@505> XINCLUDE "CLIModeSupport.ab3"
00014DE2 <CLIModeSupport.ab3@506> XINCLUDE "CLIModeSupport.ab3"
00014E20 <CLIModeSupport.ab3@507> XINCLUDE "CLIModeSupport.ab3"
00014E24 <CLIModeSupport.ab3@508> XINCLUDE "CLIModeSupport.ab3"
00014E62 <CLIModeSupport.ab3@509> XINCLUDE "CLIModeSupport.ab3"
00014E66 <CLIModeSupport.ab3@510> XINCLUDE "CLIModeSupport.ab3"
00014E6E <CLIModeSupport.ab3@512> XINCLUDE "CLIModeSupport.ab3"
00014E76 <CLIModeSupport.ab3@513> XINCLUDE "CLIModeSupport.ab3"
00014EBA <CLIModeSupport.ab3@515> XINCLUDE "CLIModeSupport.ab3"
00014ECC <CLIModeSupport.ab3@516> XINCLUDE "CLIModeSupport.ab3"
00014EDA <CLIModeSupport.ab3@517> XINCLUDE "CLIModeSupport.ab3"
00014F0E <CLIModeSupport.ab3@518> XINCLUDE "CLIModeSupport.ab3"
00014F32 <CLIModeSupport.ab3@520> XINCLUDE "CLIModeSupport.ab3"
00014F3C <CLIModeSupport.ab3@521> XINCLUDE "CLIModeSupport.ab3"
00014F56 <CLIModeSupport.ab3@522> XINCLUDE "CLIModeSupport.ab3"
00014F6A <CLIModeSupport.ab3@523> XINCLUDE "CLIModeSupport.ab3"
00014FC2 <CLIModeSupport.ab3@524> XINCLUDE "CLIModeSupport.ab3"
00015062 <CLIModeSupport.ab3@525> XINCLUDE "CLIModeSupport.ab3"
0001506A <CLIModeSupport.ab3@526> XINCLUDE "CLIModeSupport.ab3"
000150A2 <CLIModeSupport.ab3@527> XINCLUDE "CLIModeSupport.ab3"
000150A8 <CLIModeSupport.ab3@528> XINCLUDE "CLIModeSupport.ab3"
000150B8 <CLIModeSupport.ab3@529> XINCLUDE "CLIModeSupport.ab3"
000150E0 <CLIModeSupport.ab3@532> XINCLUDE "CLIModeSupport.ab3"
00015108 <CLIModeSupport.ab3@533> XINCLUDE "CLIModeSupport.ab3"
00015110 <CLIModeSupport.ab3@534> XINCLUDE "CLIModeSupport.ab3"
00015116 <CLIModeSupport.ab3@535> XINCLUDE "CLIModeSupport.ab3"
0001511E <CLIModeSupport.ab3@536> XINCLUDE "CLIModeSupport.ab3"
00015126 <CLIModeSupport.ab3@537> XINCLUDE "CLIModeSupport.ab3"
0001514E <CLIModeSupport.ab3@538> XINCLUDE "CLIModeSupport.ab3"
00015156 <CLIModeSupport.ab3@539> XINCLUDE "CLIModeSupport.ab3"
0001515E <CLIModeSupport.ab3@540> XINCLUDE "CLIModeSupport.ab3"
00015164 <CLIModeSupport.ab3@541> XINCLUDE "CLIModeSupport.ab3"
0001516A <CLIModeSupport.ab3@542> XINCLUDE "CLIModeSupport.ab3"
00015170 <CLIModeSupport.ab3@543> XINCLUDE "CLIModeSupport.ab3"
00015176 <CLIModeSupport.ab3@544> XINCLUDE "CLIModeSupport.ab3"
0001517C <CLIModeSupport.ab3@545> XINCLUDE "CLIModeSupport.ab3"
00015182 <CLIModeSupport.ab3@546> XINCLUDE "CLIModeSupport.ab3"
00015188 <CLIModeSupport.ab3@547> XINCLUDE "CLIModeSupport.ab3"
0001518E <CLIModeSupport.ab3@548> XINCLUDE "CLIModeSupport.ab3"
00015196 <CLIModeSupport.ab3@549> XINCLUDE "CLIModeSupport.ab3"
0001519E <CLIModeSupport.ab3@550> XINCLUDE "CLIModeSupport.ab3"
000151C6 <CLIModeSupport.ab3@551> XINCLUDE "CLIModeSupport.ab3"
000151CC <CLIModeSupport.ab3@552> XINCLUDE "CLIModeSupport.ab3"
000151D2 <CLIModeSupport.ab3@553> XINCLUDE "CLIModeSupport.ab3"
000151DA <CLIModeSupport.ab3@554> XINCLUDE "CLIModeSupport.ab3"
000151FA <CLIModeSupport.ab3@558> XINCLUDE "CLIModeSupport.ab3"
0001520A <CLIModeSupport.ab3@560> XINCLUDE "CLIModeSupport.ab3"
0001521A <CLIModeSupport.ab3@561> XINCLUDE "CLIModeSupport.ab3"
0001522A <CLIModeSupport.ab3@563> XINCLUDE "CLIModeSupport.ab3"
0001523A <CLIModeSupport.ab3@564> XINCLUDE "CLIModeSupport.ab3"
0001524A <CLIModeSupport.ab3@565> XINCLUDE "CLIModeSupport.ab3"
0001525A <CLIModeSupport.ab3@566> XINCLUDE "CLIModeSupport.ab3"
0001526A <CLIModeSupport.ab3@567> XINCLUDE "CLIModeSupport.ab3"
0001527A <CLIModeSupport.ab3@568> XINCLUDE "CLIModeSupport.ab3"
0001528A <CLIModeSupport.ab3@569> XINCLUDE "CLIModeSupport.ab3"
0001529A <CLIModeSupport.ab3@570> XINCLUDE "CLIModeSupport.ab3"
000152AA <CLIModeSupport.ab3@571> XINCLUDE "CLIModeSupport.ab3"
000152BA <CLIModeSupport.ab3@572> XINCLUDE "CLIModeSupport.ab3"
000152CA <CLIModeSupport.ab3@573> XINCLUDE "CLIModeSupport.ab3"
000152DA <CLIModeSupport.ab3@574> XINCLUDE "CLIModeSupport.ab3"
000152EA <CLIModeSupport.ab3@575> XINCLUDE "CLIModeSupport.ab3"
000152FA <CLIModeSupport.ab3@576> XINCLUDE "CLIModeSupport.ab3"
0001530C <CLIModeSupport.ab3@578> XINCLUDE "CLIModeSupport.ab3"
0001531E <CLIModeSupport.ab3@579> XINCLUDE "CLIModeSupport.ab3"
00015330 <CLIModeSupport.ab3@580> XINCLUDE "CLIModeSupport.ab3"
00015342 <CLIModeSupport.ab3@581> XINCLUDE "CLIModeSupport.ab3"
00015354 <CLIModeSupport.ab3@582> XINCLUDE "CLIModeSupport.ab3"
00015366 <CLIModeSupport.ab3@583> XINCLUDE "CLIModeSupport.ab3"
00015384 <CLIModeSupport.ab3@585> XINCLUDE "CLIModeSupport.ab3"
0001538A <CLIModeSupport.ab3@586> XINCLUDE "CLIModeSupport.ab3"
00015390 <CLIModeSupport.ab3@588> XINCLUDE "CLIModeSupport.ab3"
000153BA <CLIModeSupport.ab3@589> XINCLUDE "CLIModeSupport.ab3"
000153CC <CLIModeSupport.ab3@590> XINCLUDE "CLIModeSupport.ab3"
00015400 <CLIModeSupport.ab3@593> XINCLUDE "CLIModeSupport.ab3"
00015418 <CLIModeSupport.ab3@594> XINCLUDE "CLIModeSupport.ab3"
00015464 <CLIModeSupport.ab3@595> XINCLUDE "CLIModeSupport.ab3"
00015476 <CLIModeSupport.ab3@596> XINCLUDE "CLIModeSupport.ab3"
000154CC <CLIModeSupport.ab3@597> XINCLUDE "CLIModeSupport.ab3"
0001553E <CLIModeSupport.ab3@598> XINCLUDE "CLIModeSupport.ab3"
00015544 <CLIModeSupport.ab3@599> XINCLUDE "CLIModeSupport.ab3"
00015578 <CLIModeSupport.ab3@600> XINCLUDE "CLIModeSupport.ab3"
000155A0 <CLIModeSupport.ab3@601> XINCLUDE "CLIModeSupport.ab3"
000155C8 <CLIModeSupport.ab3@603> XINCLUDE "CLIModeSupport.ab3"
00015602 <CLIModeSupport.ab3@604> XINCLUDE "CLIModeSupport.ab3"
0001561A <CLIModeSupport.ab3@605> XINCLUDE "CLIModeSupport.ab3"
0001569E <CLIModeSupport.ab3@606> XINCLUDE "CLIModeSupport.ab3"
000156B8 <CLIModeSupport.ab3@607> XINCLUDE "CLIModeSupport.ab3"
00015706 <CLIModeSupport.ab3@608> XINCLUDE "CLIModeSupport.ab3"
00015716 <CLIModeSupport.ab3@610> XINCLUDE "CLIModeSupport.ab3"
0001571E <CLIModeSupport.ab3@612> XINCLUDE "CLIModeSupport.ab3"
00015732 <CLIModeSupport.ab3@613> XINCLUDE "CLIModeSupport.ab3"
00015778 <CLIModeSupport.ab3@614> XINCLUDE "CLIModeSupport.ab3"
0001577E <CLIModeSupport.ab3@615> XINCLUDE "CLIModeSupport.ab3"
000157C8 <CLIModeSupport.ab3@616> XINCLUDE "CLIModeSupport.ab3"
00015832 <CLIModeSupport.ab3@617> XINCLUDE "CLIModeSupport.ab3"
00015898 <CLIModeSupport.ab3@618> XINCLUDE "CLIModeSupport.ab3"
000158CC <CLIModeSupport.ab3@619> XINCLUDE "CLIModeSupport.ab3"
000158F8 <CLIModeSupport.ab3@621> XINCLUDE "CLIModeSupport.ab3"
00015946 <CLIModeSupport.ab3@622> XINCLUDE "CLIModeSupport.ab3"
0001596A <CLIModeSupport.ab3@623> XINCLUDE "CLIModeSupport.ab3"
00015970 <CLIModeSupport.ab3@624> XINCLUDE "CLIModeSupport.ab3"
0001597E <CLIModeSupport.ab3@626> XINCLUDE "CLIModeSupport.ab3"
000159DC <CLIModeSupport.ab3@628> XINCLUDE "CLIModeSupport.ab3"
00015A3A <CLIModeSupport.ab3@629> XINCLUDE "CLIModeSupport.ab3"
00015A64 <CLIModeSupport.ab3@630> XINCLUDE "CLIModeSupport.ab3"
00015A6E <CLIModeSupport.ab3@631> XINCLUDE "CLIModeSupport.ab3"
00015A76 <CLIModeSupport.ab3@632> XINCLUDE "CLIModeSupport.ab3"
00015AB4 <CLIModeSupport.ab3@633> XINCLUDE "CLIModeSupport.ab3"
00015B00 <CLIModeSupport.ab3@634> XINCLUDE "CLIModeSupport.ab3"
00015B12 <CLIModeSupport.ab3@635> XINCLUDE "CLIModeSupport.ab3"
00015B68 <CLIModeSupport.ab3@636> XINCLUDE "CLIModeSupport.ab3"
00015BE0 <CLIModeSupport.ab3@637> XINCLUDE "CLIModeSupport.ab3"
00015BE6 <CLIModeSupport.ab3@638> XINCLUDE "CLIModeSupport.ab3"
00015C1A <CLIModeSupport.ab3@639> XINCLUDE "CLIModeSupport.ab3"
00015C42 <CLIModeSupport.ab3@640> XINCLUDE "CLIModeSupport.ab3"
00015C78 <CLIModeSupport.ab3@643> XINCLUDE "CLIModeSupport.ab3"
00015C86 <CLIModeSupport.ab3@644> XINCLUDE "CLIModeSupport.ab3"
00015C94 <CLIModeSupport.ab3@645> XINCLUDE "CLIModeSupport.ab3"
00015D08 <CLIModeSupport.ab3@646> XINCLUDE "CLIModeSupport.ab3"
00015D0E <CLIModeSupport.ab3@647> XINCLUDE "CLIModeSupport.ab3"
00015D58 <CLIModeSupport.ab3@648> XINCLUDE "CLIModeSupport.ab3"
00015DA2 <CLIModeSupport.ab3@649> XINCLUDE "CLIModeSupport.ab3"
00015DD2 <CLIModeSupport.ab3@650> XINCLUDE "CLIModeSupport.ab3"
00015E02 <CLIModeSupport.ab3@651> XINCLUDE "CLIModeSupport.ab3"
00015E2C <CLIModeSupport.ab3@652> XINCLUDE "CLIModeSupport.ab3"
00015E7E <CLIModeSupport.ab3@653> XINCLUDE "CLIModeSupport.ab3"
00015ED4 <CLIModeSupport.ab3@654> XINCLUDE "CLIModeSupport.ab3"
00015F24 <CLIModeSupport.ab3@655> XINCLUDE "CLIModeSupport.ab3"
00015F8A <CLIModeSupport.ab3@656> XINCLUDE "CLIModeSupport.ab3"
00015FF6 <CLIModeSupport.ab3@657> XINCLUDE "CLIModeSupport.ab3"
00016022 <CLIModeSupport.ab3@658> XINCLUDE "CLIModeSupport.ab3"
00016052 <CLIModeSupport.ab3@659> XINCLUDE "CLIModeSupport.ab3"
000160CE <CLIModeSupport.ab3@660> XINCLUDE "CLIModeSupport.ab3"
000160FE <CLIModeSupport.ab3@661> XINCLUDE "CLIModeSupport.ab3"
0001612E <CLIModeSupport.ab3@662> XINCLUDE "CLIModeSupport.ab3"
0001615E <CLIModeSupport.ab3@663> XINCLUDE "CLIModeSupport.ab3"
0001618E <CLIModeSupport.ab3@664> XINCLUDE "CLIModeSupport.ab3"
000161BE <CLIModeSupport.ab3@665> XINCLUDE "CLIModeSupport.ab3"
000161EE <CLIModeSupport.ab3@666> XINCLUDE "CLIModeSupport.ab3"
0001621E <CLIModeSupport.ab3@667> XINCLUDE "CLIModeSupport.ab3"
0001624E <CLIModeSupport.ab3@668> XINCLUDE "CLIModeSupport.ab3"
0001627E <CLIModeSupport.ab3@669> XINCLUDE "CLIModeSupport.ab3"
000162AE <CLIModeSupport.ab3@670> XINCLUDE "CLIModeSupport.ab3"
0001632A <CLIModeSupport.ab3@671> XINCLUDE "CLIModeSupport.ab3"
0001635C <CLIModeSupport.ab3@672> XINCLUDE "CLIModeSupport.ab3"
0001638E <CLIModeSupport.ab3@673> XINCLUDE "CLIModeSupport.ab3"
000163BE <CLIModeSupport.ab3@674> XINCLUDE "CLIModeSupport.ab3"
000163C4 <CLIModeSupport.ab3@675> XINCLUDE "CLIModeSupport.ab3"
00016438 <CLIModeSupport.ab3@676> XINCLUDE "CLIModeSupport.ab3"
000164A4 <CLIModeSupport.ab3@677> XINCLUDE "CLIModeSupport.ab3"
000164B6 <CLIModeSupport.ab3@678> XINCLUDE "CLIModeSupport.ab3"
000164E4 <CLIModeSupport.ab3@679> XINCLUDE "CLIModeSupport.ab3"
0001650C <CLIModeSupport.ab3@680> XINCLUDE "CLIModeSupport.ab3"
00016520 <CLIModeSupport.ab3@681> XINCLUDE "CLIModeSupport.ab3"
0001654A <CLIModeSupport.ab3@682> XINCLUDE "CLIModeSupport.ab3"
0001658E <CLIModeSupport.ab3@683> XINCLUDE "CLIModeSupport.ab3"
0001659E <CLIModeSupport.ab3@684> XINCLUDE "CLIModeSupport.ab3"
000165AE <CLIModeSupport.ab3@685> XINCLUDE "CLIModeSupport.ab3"
000165B4 <CLIModeSupport.ab3@686> XINCLUDE "CLIModeSupport.ab3"
000165C4 <CLIModeSupport.ab3@688> XINCLUDE "CLIModeSupport.ab3"
000165D2 <CLIModeSupport.ab3@692> XINCLUDE "CLIModeSupport.ab3"
000165DC <CLIModeSupport.ab3@695> XINCLUDE "CLIModeSupport.ab3"
00016614 <CLIModeSupport.ab3@698> XINCLUDE "CLIModeSupport.ab3"
0001664C <CLIModeSupport.ab3@699> XINCLUDE "CLIModeSupport.ab3"
00016684 <CLIModeSupport.ab3@700> XINCLUDE "CLIModeSupport.ab3"
00016694 <CLIModeSupport.ab3@701> XINCLUDE "CLIModeSupport.ab3"
000166FC <CLIModeSupport.ab3@702> XINCLUDE "CLIModeSupport.ab3"
00016734 <CLIModeSupport.ab3@703> XINCLUDE "CLIModeSupport.ab3"
00016744 <CLIModeSupport.ab3@704> XINCLUDE "CLIModeSupport.ab3"
00016754 <CLIModeSupport.ab3@705> XINCLUDE "CLIModeSupport.ab3"
000167BC <CLIModeSupport.ab3@706> XINCLUDE "CLIModeSupport.ab3"
00016824 <CLIModeSupport.ab3@707> XINCLUDE "CLIModeSupport.ab3"
0001688C <CLIModeSupport.ab3@708> XINCLUDE "CLIModeSupport.ab3"
000168F4 <CLIModeSupport.ab3@709> XINCLUDE "CLIModeSupport.ab3"
0001695C <CLIModeSupport.ab3@710> XINCLUDE "CLIModeSupport.ab3"
000169C4 <CLIModeSupport.ab3@711> XINCLUDE "CLIModeSupport.ab3"
00016A2C <CLIModeSupport.ab3@712> XINCLUDE "CLIModeSupport.ab3"
00016A94 <CLIModeSupport.ab3@713> XINCLUDE "CLIModeSupport.ab3"
00016AA4 <CLIModeSupport.ab3@714> XINCLUDE "CLIModeSupport.ab3"
00016ADC <CLIModeSupport.ab3@716> XINCLUDE "CLIModeSupport.ab3"
00016B16 <CLIModeSupport.ab3@717> XINCLUDE "CLIModeSupport.ab3"
00016B50 <CLIModeSupport.ab3@718> XINCLUDE "CLIModeSupport.ab3"
00016B88 <CLIModeSupport.ab3@719> XINCLUDE "CLIModeSupport.ab3"
00016BA4 <CLIModeSupport.ab3@720> XINCLUDE "CLIModeSupport.ab3"
00016BDC <CLIModeSupport.ab3@721> XINCLUDE "CLIModeSupport.ab3"
00016C02 <CLIModeSupport.ab3@723> XINCLUDE "CLIModeSupport.ab3"
00016C0A <CLIModeSupport.ab3@726> XINCLUDE "CLIModeSupport.ab3"
00016C12 <CLIModeSupport.ab3@728> XINCLUDE "CLIModeSupport.ab3"
00016C1A <CLIModeSupport.ab3@729> XINCLUDE "CLIModeSupport.ab3"
00016C22 <CLIModeSupport.ab3@731> XINCLUDE "CLIModeSupport.ab3"
00016C36 <CLIModeSupport.ab3@732> XINCLUDE "CLIModeSupport.ab3"
00016C64 <CLIModeSupport.ab3@733> XINCLUDE "CLIModeSupport.ab3"
00016C7E <CLIModeSupport.ab3@734> XINCLUDE "CLIModeSupport.ab3"
00016C8C <CLIModeSupport.ab3@735> XINCLUDE "CLIModeSupport.ab3"
00016CF8 <CLIModeSupport.ab3@736> XINCLUDE "CLIModeSupport.ab3"
00016D1E <CLIModeSupport.ab3@737> XINCLUDE "CLIModeSupport.ab3"
00016D3A <CLIModeSupport.ab3@738> XINCLUDE "CLIModeSupport.ab3"
00016D44 <CLIModeSupport.ab3@739> XINCLUDE "CLIModeSupport.ab3"
00016D4E <CLIModeSupport.ab3@740> XINCLUDE "CLIModeSupport.ab3"
00016D5A <CLIModeSupport.ab3@741> XINCLUDE "CLIModeSupport.ab3"
00016D68 <CLIModeSupport.ab3@742> XINCLUDE "CLIModeSupport.ab3"
00016D74 <CLIModeSupport.ab3@743> XINCLUDE "CLIModeSupport.ab3"
00016DB0 <CLIModeSupport.ab3@744> XINCLUDE "CLIModeSupport.ab3"
00016DCA <CLIModeSupport.ab3@745> XINCLUDE "CLIModeSupport.ab3"
00016DD8 <CLIModeSupport.ab3@746> XINCLUDE "CLIModeSupport.ab3"
00016DF8 <CLIModeSupport.ab3@747> XINCLUDE "CLIModeSupport.ab3"
00016E06 <CLIModeSupport.ab3@748> XINCLUDE "CLIModeSupport.ab3"
00016E14 <CLIModeSupport.ab3@749> XINCLUDE "CLIModeSupport.ab3"
00016E1A <CLIModeSupport.ab3@751> XINCLUDE "CLIModeSupport.ab3"
00016E2A <CLIModeSupport.ab3@752> XINCLUDE "CLIModeSupport.ab3"
00016E2E <CLIModeSupport.ab3@754> XINCLUDE "CLIModeSupport.ab3"
00016E62 <CLIModeSupport.ab3@755> XINCLUDE "CLIModeSupport.ab3"
00016E96 <CLIModeSupport.ab3@756> XINCLUDE "CLIModeSupport.ab3"
00016E9A <CLIModeSupport.ab3@757> XINCLUDE "CLIModeSupport.ab3"
00016ECE <CLIModeSupport.ab3@758> XINCLUDE "CLIModeSupport.ab3"
00016ED2 <CLIModeSupport.ab3@759> XINCLUDE "CLIModeSupport.ab3"
00016F06 <CLIModeSupport.ab3@760> XINCLUDE "CLIModeSupport.ab3"
00016F0C <CLIModeSupport.ab3@761> XINCLUDE "CLIModeSupport.ab3"
00016F42 <CLIModeSupport.ab3@763> XINCLUDE "CLIModeSupport.ab3"
00016F78 <CLIModeSupport.ab3@764> XINCLUDE "CLIModeSupport.ab3"
00016FAE <CLIModeSupport.ab3@765> XINCLUDE "CLIModeSupport.ab3"
00016FE6 <CLIModeSupport.ab3@766> XINCLUDE "CLIModeSupport.ab3"
0001701E <CLIModeSupport.ab3@767> XINCLUDE "CLIModeSupport.ab3"
000170BE <CLIModeSupport.ab3@769> XINCLUDE "CLIModeSupport.ab3"
000170FE <CLIModeSupport.ab3@770> XINCLUDE "CLIModeSupport.ab3"
00017134 <CLIModeSupport.ab3@771> XINCLUDE "CLIModeSupport.ab3"
0001716A <CLIModeSupport.ab3@772> XINCLUDE "CLIModeSupport.ab3"
000171A2 <CLIModeSupport.ab3@775> XINCLUDE "CLIModeSupport.ab3"
000171C0 <CLIModeSupport.ab3@776> XINCLUDE "CLIModeSupport.ab3"
000171C4 <CLIModeSupport.ab3@777> XINCLUDE "CLIModeSupport.ab3"
000171CA <CLIModeSupport.ab3@778> XINCLUDE "CLIModeSupport.ab3"
000171D0 <CLIModeSupport.ab3@779> XINCLUDE "CLIModeSupport.ab3"
000171D4 <CLIModeSupport.ab3@780> XINCLUDE "CLIModeSupport.ab3"
000171FE <CLIModeSupport.ab3@781> XINCLUDE "CLIModeSupport.ab3"
00017212 <CLIModeSupport.ab3@785> XINCLUDE "CLIModeSupport.ab3"
00017250 <CLIModeSupport.ab3@786> XINCLUDE "CLIModeSupport.ab3"
00017284 <CLIModeSupport.ab3@787> XINCLUDE "CLIModeSupport.ab3"
000172BA <CLIModeSupport.ab3@791> XINCLUDE "CLIModeSupport.ab3"
00017312 <CLIModeSupport.ab3@793> XINCLUDE "CLIModeSupport.ab3"
00017340 <CLIModeSupport.ab3@794> XINCLUDE "CLIModeSupport.ab3"
00017344 <CLIModeSupport.ab3@795> XINCLUDE "CLIModeSupport.ab3"
0001737A <CLIModeSupport.ab3@796> XINCLUDE "CLIModeSupport.ab3"
000173A8 <CLIModeSupport.ab3@797> XINCLUDE "CLIModeSupport.ab3"
000173D6 <CLIModeSupport.ab3@799> XINCLUDE "CLIModeSupport.ab3"
000173DA <CLIModeSupport.ab3@800> XINCLUDE "CLIModeSupport.ab3"
00017410 <CLIModeSupport.ab3@801> XINCLUDE "CLIModeSupport.ab3"
0001743E <CLIModeSupport.ab3@803> XINCLUDE "CLIModeSupport.ab3"
00017442 <CLIModeSupport.ab3@804> XINCLUDE "CLIModeSupport.ab3"
000174A6 <CLIModeSupport.ab3@805> XINCLUDE "CLIModeSupport.ab3"
000174AC <CLIModeSupport.ab3@808> XINCLUDE "CLIModeSupport.ab3"
000174E6 <CLIModeSupport.ab3@809> XINCLUDE "CLIModeSupport.ab3"
000174F0 <CLIModeSupport.ab3@812> XINCLUDE "CLIModeSupport.ab3"
000174FA <CLIModeSupport.ab3@814> XINCLUDE "CLIModeSupport.ab3"
00017514 <CLIModeSupport.ab3@815> XINCLUDE "CLIModeSupport.ab3"
0001753E <CLIModeSupport.ab3@818> XINCLUDE "CLIModeSupport.ab3"
00017544 <CLIModeSupport.ab3@819> XINCLUDE "CLIModeSupport.ab3"
00017564 <CLIModeSupport.ab3@820> XINCLUDE "CLIModeSupport.ab3"
0001756E <CLIModeSupport.ab3@821> XINCLUDE "CLIModeSupport.ab3"
00017572 <CLIModeSupport.ab3@822> XINCLUDE "CLIModeSupport.ab3"
00017574 <CLIModeSupport.ab3@823> XINCLUDE "CLIModeSupport.ab3"
00017592 <CLIModeSupport.ab3@824> XINCLUDE "CLIModeSupport.ab3"
00017594 <CLIModeSupport.ab3@825> XINCLUDE "CLIModeSupport.ab3"
0001759A <CLIModeSupport.ab3@826> XINCLUDE "CLIModeSupport.ab3"
000175A0 <CLIModeSupport.ab3@828> XINCLUDE "CLIModeSupport.ab3"
000175CA <CLIModeSupport.ab3@829> XINCLUDE "CLIModeSupport.ab3"
000175CC <CLIModeSupport.ab3@830> XINCLUDE "CLIModeSupport.ab3"
000175FA <CLIModeSupport.ab3@831> XINCLUDE "CLIModeSupport.ab3"
000175FE <CLIModeSupport.ab3@832> XINCLUDE "CLIModeSupport.ab3"
0001762C <CLIModeSupport.ab3@833> XINCLUDE "CLIModeSupport.ab3"
00017630 <CLIModeSupport.ab3@834> XINCLUDE "CLIModeSupport.ab3"
00017656 <CLIModeSupport.ab3@835> XINCLUDE "CLIModeSupport.ab3"
00017666 <CLIModeSupport.ab3@836> XINCLUDE "CLIModeSupport.ab3"
0001766C <CLIModeSupport.ab3@837> XINCLUDE "CLIModeSupport.ab3"
00017672 <CLIModeSupport.ab3@838> XINCLUDE "CLIModeSupport.ab3"
000176AC <CLIModeSupport.ab3@839> XINCLUDE "CLIModeSupport.ab3"
000176B6 <CLIModeSupport.ab3@841> XINCLUDE "CLIModeSupport.ab3"
000176D0 <CLIModeSupport.ab3@842> XINCLUDE "CLIModeSupport.ab3"
000176EE <CLIModeSupport.ab3@845> XINCLUDE "CLIModeSupport.ab3"
00017718 <CLIModeSupport.ab3@846> XINCLUDE "CLIModeSupport.ab3"
00017746 <CLIModeSupport.ab3@847> XINCLUDE "CLIModeSupport.ab3"
000177D6 <CLIModeSupport.ab3@848> XINCLUDE "CLIModeSupport.ab3"
000177E0 <CLIModeSupport.ab3@850> XINCLUDE "CLIModeSupport.ab3"
000177F4 <CLIModeSupport.ab3@851> XINCLUDE "CLIModeSupport.ab3"
00017830 <CLIModeSupport.ab3@852> XINCLUDE "CLIModeSupport.ab3"
0001786C <CLIModeSupport.ab3@853> XINCLUDE "CLIModeSupport.ab3"
000178A8 <CLIModeSupport.ab3@854> XINCLUDE "CLIModeSupport.ab3"
000178E4 <CLIModeSupport.ab3@855> XINCLUDE "CLIModeSupport.ab3"
00017920 <CLIModeSupport.ab3@856> XINCLUDE "CLIModeSupport.ab3"
00017926 <CLIModeSupport.ab3@857> XINCLUDE "CLIModeSupport.ab3"
00017960 <CLIModeSupport.ab3@858> XINCLUDE "CLIModeSupport.ab3"
00017972 <CLIModeSupport.ab3@863> XINCLUDE "CLIModeSupport.ab3"
00017982 <CLIModeSupport.ab3@864> XINCLUDE "CLIModeSupport.ab3"
0001798E <CLIModeSupport.ab3@867> XINCLUDE "CLIModeSupport.ab3"
000179A8 <CLIModeSupport.ab3@868> XINCLUDE "CLIModeSupport.ab3"
000179AA <CLIModeSupport.ab3@870> XINCLUDE "CLIModeSupport.ab3"
000179C8 <CLIModeSupport.ab3@871> XINCLUDE "CLIModeSupport.ab3"
000179CE <CLIModeSupport.ab3@872> XINCLUDE "CLIModeSupport.ab3"
000179F8 <CLIModeSupport.ab3@873> XINCLUDE "CLIModeSupport.ab3"
000179FA <CLIModeSupport.ab3@874> XINCLUDE "CLIModeSupport.ab3"
00017A04 <CLIModeSupport.ab3@876> XINCLUDE "CLIModeSupport.ab3"
00017A0A <CLIModeSupport.ab3@877> XINCLUDE "CLIModeSupport.ab3"
00017A1C <CLIModeSupport.ab3@880> XINCLUDE "CLIModeSupport.ab3"
00017A56 <CLIModeSupport.ab3@897> XINCLUDE "CLIModeSupport.ab3"
00017A70 <CLIModeSupport.ab3@901> XINCLUDE "CLIModeSupport.ab3"
00017A84 <CLIModeSupport.ab3@903> XINCLUDE "CLIModeSupport.ab3"
00017AEE <CLIModeSupport.ab3@904> XINCLUDE "CLIModeSupport.ab3"
00017AF4 <CLIModeSupport.ab3@905> XINCLUDE "CLIModeSupport.ab3"
00017B5E <CLIModeSupport.ab3@906> XINCLUDE "CLIModeSupport.ab3"
00017B72 <CLIModeSupport.ab3@909> XINCLUDE "CLIModeSupport.ab3"
00017BDC <CLIModeSupport.ab3@910> XINCLUDE "CLIModeSupport.ab3"
00017C12 <CLIModeSupport.ab3@911> XINCLUDE "CLIModeSupport.ab3"
00017C18 <CLIModeSupport.ab3@912> XINCLUDE "CLIModeSupport.ab3"
00017C82 <CLIModeSupport.ab3@913> XINCLUDE "CLIModeSupport.ab3"
00017C96 <CLIModeSupport.ab3@914> XINCLUDE "CLIModeSupport.ab3"
00017CCC <CLIModeSupport.ab3@915> XINCLUDE "CLIModeSupport.ab3"
00017CD2 <CLIModeSupport.ab3@916> XINCLUDE "CLIModeSupport.ab3"
00017D08 <CLIModeSupport.ab3@917> XINCLUDE "CLIModeSupport.ab3"
00017D1C <CLIModeSupport.ab3@921> XINCLUDE "CLIModeSupport.ab3"
00017D86 <CLIModeSupport.ab3@922> XINCLUDE "CLIModeSupport.ab3"
00017D8C <CLIModeSupport.ab3@923> XINCLUDE "CLIModeSupport.ab3"
00017DF6 <CLIModeSupport.ab3@924> XINCLUDE "CLIModeSupport.ab3"
00017E0A <CLIModeSupport.ab3@927> XINCLUDE "CLIModeSupport.ab3"
00017E40 <CLIModeSupport.ab3@928> XINCLUDE "CLIModeSupport.ab3"
00017E46 <CLIModeSupport.ab3@929> XINCLUDE "CLIModeSupport.ab3"
00017E7C <CLIModeSupport.ab3@930> XINCLUDE "CLIModeSupport.ab3"
00017E96 <CLIModeSupport.ab3@935> XINCLUDE "CLIModeSupport.ab3"
00017EAA <CLIModeSupport.ab3@937> XINCLUDE "CLIModeSupport.ab3"
00017F14 <CLIModeSupport.ab3@938> XINCLUDE "CLIModeSupport.ab3"
00017F1A <CLIModeSupport.ab3@939> XINCLUDE "CLIModeSupport.ab3"
00017F84 <CLIModeSupport.ab3@940> XINCLUDE "CLIModeSupport.ab3"
00017F98 <CLIModeSupport.ab3@943> XINCLUDE "CLIModeSupport.ab3"
00018002 <CLIModeSupport.ab3@944> XINCLUDE "CLIModeSupport.ab3"
00018008 <CLIModeSupport.ab3@945> XINCLUDE "CLIModeSupport.ab3"
00018072 <CLIModeSupport.ab3@946> XINCLUDE "CLIModeSupport.ab3"
00018086 <CLIModeSupport.ab3@949> XINCLUDE "CLIModeSupport.ab3"
000180F0 <CLIModeSupport.ab3@950> XINCLUDE "CLIModeSupport.ab3"
000180F6 <CLIModeSupport.ab3@951> XINCLUDE "CLIModeSupport.ab3"
00018160 <CLIModeSupport.ab3@952> XINCLUDE "CLIModeSupport.ab3"
00018174 <CLIModeSupport.ab3@955> XINCLUDE "CLIModeSupport.ab3"
000181DE <CLIModeSupport.ab3@956> XINCLUDE "CLIModeSupport.ab3"
000181E4 <CLIModeSupport.ab3@957> XINCLUDE "CLIModeSupport.ab3"
0001824E <CLIModeSupport.ab3@958> XINCLUDE "CLIModeSupport.ab3"
00018260 <CLIModeSupport.ab3@963> XINCLUDE "CLIModeSupport.ab3"
00018270 <CLIModeSupport.ab3@964> XINCLUDE "CLIModeSupport.ab3"
0001827A <CLIModeSupport.ab3@967> XINCLUDE "CLIModeSupport.ab3"
000182E4 <CLIModeSupport.ab3@968> XINCLUDE "CLIModeSupport.ab3"
000182EA <CLIModeSupport.ab3@969> XINCLUDE "CLIModeSupport.ab3"
00018354 <CLIModeSupport.ab3@970> XINCLUDE "CLIModeSupport.ab3"
0001835E <CLIModeSupport.ab3@973> XINCLUDE "CLIModeSupport.ab3"
000183C8 <CLIModeSupport.ab3@974> XINCLUDE "CLIModeSupport.ab3"
000183FE <CLIModeSupport.ab3@975> XINCLUDE "CLIModeSupport.ab3"
00018404 <CLIModeSupport.ab3@976> XINCLUDE "CLIModeSupport.ab3"
0001846E <CLIModeSupport.ab3@978> XINCLUDE "CLIModeSupport.ab3"
000184A4 <CLIModeSupport.ab3@979> XINCLUDE "CLIModeSupport.ab3"
000184AC <CLIModeSupport.ab3@982> XINCLUDE "CLIModeSupport.ab3"
000184DA <CLIModeSupport.ab3@984> XINCLUDE "CLIModeSupport.ab3"
000184DE <CLIModeSupport.ab3@985> XINCLUDE "CLIModeSupport.ab3"
00018506 <CLIModeSupport.ab3@986> XINCLUDE "CLIModeSupport.ab3"
0001850C <CLIModeSupport.ab3@989> XINCLUDE "CLIModeSupport.ab3"
00018512 <CLIModeSupport.ab3@992> XINCLUDE "CLIModeSupport.ab3"
00018518 <CLIModeSupport.ab3@993> XINCLUDE "CLIModeSupport.ab3"
0001851E <CLIModeSupport.ab3@994> XINCLUDE "CLIModeSupport.ab3"
00018524 <CLIModeSupport.ab3@995> XINCLUDE "CLIModeSupport.ab3"
0001852E <CLIModeSupport.ab3@996> XINCLUDE "CLIModeSupport.ab3"
00018538 <CLIModeSupport.ab3@997> XINCLUDE "CLIModeSupport.ab3"
00018566 <CLIModeSupport.ab3@999> XINCLUDE "CLIModeSupport.ab3"
00018592 <CLIModeSupport.ab3@1001> XINCLUDE "CLIModeSupport.ab3"
0001859A <CLIModeSupport.ab3@1002> XINCLUDE "CLIModeSupport.ab3"
00018600 <CLIModeSupport.ab3@1005> XINCLUDE "CLIModeSupport.ab3"
00018634 <CLIModeSupport.ab3@1006> XINCLUDE "CLIModeSupport.ab3"
0001863A <CLIModeSupport.ab3@1007> XINCLUDE "CLIModeSupport.ab3"
000186BA <CLIModeSupport.ab3@1008> XINCLUDE "CLIModeSupport.ab3"
000186CC <CLIModeSupport.ab3@1010> XINCLUDE "CLIModeSupport.ab3"
00018732 <CLIModeSupport.ab3@1011> XINCLUDE "CLIModeSupport.ab3"
00018798 <CLIModeSupport.ab3@1012> XINCLUDE "CLIModeSupport.ab3"
0001879E <CLIModeSupport.ab3@1013> XINCLUDE "CLIModeSupport.ab3"
000187A6 <CLIModeSupport.ab3@1014> XINCLUDE "CLIModeSupport.ab3"
000187A8 <CLIModeSupport.ab3@1018> XINCLUDE "CLIModeSupport.ab3"
000187C6 <CLIModeSupport.ab3@1019> XINCLUDE "CLIModeSupport.ab3"
00018804 <CLIModeSupport.ab3@1020> XINCLUDE "CLIModeSupport.ab3"
00018842 <CLIModeSupport.ab3@1021> XINCLUDE "CLIModeSupport.ab3"
00018848 <CLIModeSupport.ab3@1023> XINCLUDE "CLIModeSupport.ab3"
0001884E <CLIModeSupport.ab3@1024> XINCLUDE "CLIModeSupport.ab3"
00018854 <CLIModeSupport.ab3@1025> XINCLUDE "CLIModeSupport.ab3"
0001885E <CLIModeSupport.ab3@1028> XINCLUDE "CLIModeSupport.ab3"
00018864 <CLIModeSupport.ab3@1029> XINCLUDE "CLIModeSupport.ab3"
0001886A <CLIModeSupport.ab3@1030> XINCLUDE "CLIModeSupport.ab3"
00018870 <CLIModeSupport.ab3@1031> XINCLUDE "CLIModeSupport.ab3"
00018876 <CLIModeSupport.ab3@1032> XINCLUDE "CLIModeSupport.ab3"
0001887A <CLIModeSupport.ab3@1033> XINCLUDE "CLIModeSupport.ab3"
00018884 <CLIModeSupport.ab3@1034> XINCLUDE "CLIModeSupport.ab3"
00018888 <CLIModeSupport.ab3@1035> XINCLUDE "CLIModeSupport.ab3"
000188B2 <CLIModeSupport.ab3@1037> XINCLUDE "CLIModeSupport.ab3"
000188B4 <CLIModeSupport.ab3@1038> XINCLUDE "CLIModeSupport.ab3"
000188BA <CLIModeSupport.ab3@1040> XINCLUDE "CLIModeSupport.ab3"
000188BE <CLIModeSupport.ab3@1041> XINCLUDE "CLIModeSupport.ab3"
000188C4 <CLIModeSupport.ab3@1043> XINCLUDE "CLIModeSupport.ab3"
000188C8 <CLIModeSupport.ab3@1044> XINCLUDE "CLIModeSupport.ab3"
000188D8 <CLIModeSupport.ab3@1046> XINCLUDE "CLIModeSupport.ab3"
00018932 <CLIModeSupport.ab3@1047> XINCLUDE "CLIModeSupport.ab3"
00018944 <CLIModeSupport.ab3@1049> XINCLUDE "CLIModeSupport.ab3"
000189AE <CLIModeSupport.ab3@1050> XINCLUDE "CLIModeSupport.ab3"
000189B4 <CLIModeSupport.ab3@1051> XINCLUDE "CLIModeSupport.ab3"
000189FE <CLIModeSupport.ab3@1052> XINCLUDE "CLIModeSupport.ab3"
00018A10 <CLIModeSupport.ab3@1055> XINCLUDE "CLIModeSupport.ab3"
00018A3C <CLIModeSupport.ab3@1056> XINCLUDE "CLIModeSupport.ab3"
00018AE2 <CLIModeSupport.ab3@1057> XINCLUDE "CLIModeSupport.ab3"
00018B00 <CLIModeSupport.ab3@1058> XINCLUDE "CLIModeSupport.ab3"
00018B06 <CLIModeSupport.ab3@1059> XINCLUDE "CLIModeSupport.ab3"
00018B30 <CLIModeSupport.ab3@1060> XINCLUDE "CLIModeSupport.ab3"
00018B3A <CLIModeSupport.ab3@1061> XINCLUDE "CLIModeSupport.ab3"
00018B6C <CLIModeSupport.ab3@1062> XINCLUDE "CLIModeSupport.ab3"
00018B86 <CLIModeSupport.ab3@1063> XINCLUDE "CLIModeSupport.ab3"
00018B9A <CLIModeSupport.ab3@1068> XINCLUDE "CLIModeSupport.ab3"
00018BA6 <CLIModeSupport.ab3@1070> XINCLUDE "CLIModeSupport.ab3"
00018BC0 <CLIModeSupport.ab3@1071> XINCLUDE "CLIModeSupport.ab3"
00018BCA <CLIModeSupport.ab3@1073> XINCLUDE "CLIModeSupport.ab3"
00018BE4 <CLIModeSupport.ab3@1075> XINCLUDE "CLIModeSupport.ab3"
00018C0E <CLIModeSupport.ab3@1079> XINCLUDE "CLIModeSupport.ab3"
00018C32 <CLIModeSupport.ab3@1080> XINCLUDE "CLIModeSupport.ab3"
00018C70 <CLIModeSupport.ab3@1081> XINCLUDE "CLIModeSupport.ab3"
00018C74 <CLIModeSupport.ab3@1082> XINCLUDE "CLIModeSupport.ab3"
00018CB2 <CLIModeSupport.ab3@1084> XINCLUDE "CLIModeSupport.ab3"
00018CB6 <CLIModeSupport.ab3@1085> XINCLUDE "CLIModeSupport.ab3"
00018CF4 <CLIModeSupport.ab3@1088> XINCLUDE "CLIModeSupport.ab3"
00018D32 <CLIModeSupport.ab3@1089> XINCLUDE "CLIModeSupport.ab3"
00018D34 <CLIModeSupport.ab3@1090> XINCLUDE "CLIModeSupport.ab3"
00018D68 <CLIModeSupport.ab3@1091> XINCLUDE "CLIModeSupport.ab3"
00018D6E <CLIModeSupport.ab3@1093> XINCLUDE "CLIModeSupport.ab3"
00018DB2 <CLIModeSupport.ab3@1094> XINCLUDE "CLIModeSupport.ab3"
00018DC4 <CLIModeSupport.ab3@1095> XINCLUDE "CLIModeSupport.ab3"
00018DCC <CLIModeSupport.ab3@1097> XINCLUDE "CLIModeSupport.ab3"
00018DD2 <CLIModeSupport.ab3@1098> XINCLUDE "CLIModeSupport.ab3"
00018DDC <CLIModeSupport.ab3@1100> XINCLUDE "CLIModeSupport.ab3"
00018DEA <CLIModeSupport.ab3@1101> XINCLUDE "CLIModeSupport.ab3"
00018DF0 <CLIModeSupport.ab3@1102> XINCLUDE "CLIModeSupport.ab3"
00018E18 <CLIModeSupport.ab3@1103> XINCLUDE "CLIModeSupport.ab3"
00018E32 <CLIModeSupport.ab3@1104> XINCLUDE "CLIModeSupport.ab3"
00018E3C <CLIModeSupport.ab3@1105> XINCLUDE "CLIModeSupport.ab3"
00018E42 <CLIModeSupport.ab3@1106> XINCLUDE "CLIModeSupport.ab3"
00018E60 <CLIModeSupport.ab3@1108> XINCLUDE "CLIModeSupport.ab3"
00018E6A <CLIModeSupport.ab3@1109> XINCLUDE "CLIModeSupport.ab3"
00018E70 <CLIModeSupport.ab3@1110> XINCLUDE "CLIModeSupport.ab3"
00018E76 <CLIModeSupport.ab3@1111> XINCLUDE "CLIModeSupport.ab3"
00018E80 <CLIModeSupport.ab3@1112> XINCLUDE "CLIModeSupport.ab3"
00018E8E <CLIModeSupport.ab3@1113> XINCLUDE "CLIModeSupport.ab3"
00018E94 <CLIModeSupport.ab3@1114> XINCLUDE "CLIModeSupport.ab3"
00018EA4 <CLIModeSupport.ab3@1116> XINCLUDE "CLIModeSupport.ab3"
00018ED0 <CLIModeSupport.ab3@1117> XINCLUDE "CLIModeSupport.ab3"
00018EE6 <CLIModeSupport.ab3@1118> XINCLUDE "CLIModeSupport.ab3"
00018EF0 <CLIModeSupport.ab3@1119> XINCLUDE "CLIModeSupport.ab3"
00018EF6 <CLIModeSupport.ab3@1120> XINCLUDE "CLIModeSupport.ab3"
00018F4E <CLIModeSupport.ab3@1122> XINCLUDE "CLIModeSupport.ab3"
00018FBC <CLIModeSupport.ab3@1124> XINCLUDE "CLIModeSupport.ab3"
00018FD4 <CLIModeSupport.ab3@1125> XINCLUDE "CLIModeSupport.ab3"
00018FDA <CLIModeSupport.ab3@1126> XINCLUDE "CLIModeSupport.ab3"
00019012 <CLIModeSupport.ab3@1127> XINCLUDE "CLIModeSupport.ab3"
00019040 <CLIModeSupport.ab3@1129> XINCLUDE "CLIModeSupport.ab3"
0001906A <CLIModeSupport.ab3@1130> XINCLUDE "CLIModeSupport.ab3"
00019074 <CLIModeSupport.ab3@1132> XINCLUDE "CLIModeSupport.ab3"
0001909C <CLIModeSupport.ab3@1133> XINCLUDE "CLIModeSupport.ab3"
000190C6 <CLIModeSupport.ab3@1134> XINCLUDE "CLIModeSupport.ab3"
00019168 <CLIModeSupport.ab3@1135> XINCLUDE "CLIModeSupport.ab3"
00019176 <CLIModeSupport.ab3@1136> XINCLUDE "CLIModeSupport.ab3"
000191C6 <CLIModeSupport.ab3@1137> XINCLUDE "CLIModeSupport.ab3"
000191D6 <CLIModeSupport.ab3@1138> XINCLUDE "CLIModeSupport.ab3"
0001929E <CLIModeSupport.ab3@1139> XINCLUDE "CLIModeSupport.ab3"
000192D2 <CLIModeSupport.ab3@1141> XINCLUDE "CLIModeSupport.ab3"
00019306 <CLIModeSupport.ab3@1142> XINCLUDE "CLIModeSupport.ab3"
0001933A <CLIModeSupport.ab3@1143> XINCLUDE "CLIModeSupport.ab3"
0001936E <CLIModeSupport.ab3@1144> XINCLUDE "CLIModeSupport.ab3"
000193A2 <CLIModeSupport.ab3@1145> XINCLUDE "CLIModeSupport.ab3"
000193D6 <CLIModeSupport.ab3@1146> XINCLUDE "CLIModeSupport.ab3"
0001940A <CLIModeSupport.ab3@1147> XINCLUDE "CLIModeSupport.ab3"
0001943E <CLIModeSupport.ab3@1148> XINCLUDE "CLIModeSupport.ab3"
00019440 <CLIModeSupport.ab3@1150> XINCLUDE "CLIModeSupport.ab3"
0001947E <CLIModeSupport.ab3@1151> XINCLUDE "CLIModeSupport.ab3"
00019482 <CLIModeSupport.ab3@1152> XINCLUDE "CLIModeSupport.ab3"
000194C0 <CLIModeSupport.ab3@1155> XINCLUDE "CLIModeSupport.ab3"
000194FE <CLIModeSupport.ab3@1156> XINCLUDE "CLIModeSupport.ab3"
00019500 <CLIModeSupport.ab3@1157> XINCLUDE "CLIModeSupport.ab3"
00019506 <CLIModeSupport.ab3@1158> XINCLUDE "CLIModeSupport.ab3"
0001950A <CLIModeSupport.ab3@1159> XINCLUDE "CLIModeSupport.ab3"
0001950C <CLIModeSupport.ab3@1161> XINCLUDE "CLIModeSupport.ab3"
0001954A <CLIModeSupport.ab3@1162> XINCLUDE "CLIModeSupport.ab3"
00019588 <CLIModeSupport.ab3@1163> XINCLUDE "CLIModeSupport.ab3"
0001958A <CLIModeSupport.ab3@1164> XINCLUDE "CLIModeSupport.ab3"
0001958C <CLIModeSupport.ab3@1165> XINCLUDE "CLIModeSupport.ab3"
0001958E <CLIModeSupport.ab3@1166> XINCLUDE "CLIModeSupport.ab3"
00019594 <CLIModeSupport.ab3@1167> XINCLUDE "CLIModeSupport.ab3"
00019598 <CLIModeSupport.ab3@1168> XINCLUDE "CLIModeSupport.ab3"
000195A8 <CLIModeSupport.ab3@1170> XINCLUDE "CLIModeSupport.ab3"
000195C0 <CLIModeSupport.ab3@1171> XINCLUDE "CLIModeSupport.ab3"
000195D8 <CLIModeSupport.ab3@1172> XINCLUDE "CLIModeSupport.ab3"
000195F0 <CLIModeSupport.ab3@1173> XINCLUDE "CLIModeSupport.ab3"
0001961A <CLIModeSupport.ab3@1175> XINCLUDE "CLIModeSupport.ab3"
00019644 <CLIModeSupport.ab3@1176> XINCLUDE "CLIModeSupport.ab3"
00019672 <CLIModeSupport.ab3@1178> XINCLUDE "CLIModeSupport.ab3"
00019676 <CLIModeSupport.ab3@1179> XINCLUDE "CLIModeSupport.ab3"
0001969E <CLIModeSupport.ab3@1180> XINCLUDE "CLIModeSupport.ab3"
000196A0 <CLIModeSupport.ab3@1181> XINCLUDE "CLIModeSupport.ab3"
000196DE <CLIModeSupport.ab3@1182> XINCLUDE "CLIModeSupport.ab3"
000196E2 <CLIModeSupport.ab3@1183> XINCLUDE "CLIModeSupport.ab3"
00019720 <CLIModeSupport.ab3@1184> XINCLUDE "CLIModeSupport.ab3"
00019724 <CLIModeSupport.ab3@1185> XINCLUDE "CLIModeSupport.ab3"
00019762 <CLIModeSupport.ab3@1186> XINCLUDE "CLIModeSupport.ab3"
00019766 <CLIModeSupport.ab3@1187> XINCLUDE "CLIModeSupport.ab3"
000197A4 <CLIModeSupport.ab3@1189> XINCLUDE "CLIModeSupport.ab3"
000197A8 <CLIModeSupport.ab3@1190> XINCLUDE "CLIModeSupport.ab3"
000197CE <CLIModeSupport.ab3@1192> XINCLUDE "CLIModeSupport.ab3"
000197F4 <CLIModeSupport.ab3@1193> XINCLUDE "CLIModeSupport.ab3"
0001981A <CLIModeSupport.ab3@1194> XINCLUDE "CLIModeSupport.ab3"
00019840 <CLIModeSupport.ab3@1195> XINCLUDE "CLIModeSupport.ab3"
00019866 <CLIModeSupport.ab3@1196> XINCLUDE "CLIModeSupport.ab3"
000198BC <CLIModeSupport.ab3@1197> XINCLUDE "CLIModeSupport.ab3"
00019912 <CLIModeSupport.ab3@1198> XINCLUDE "CLIModeSupport.ab3"
00019960 <CLIModeSupport.ab3@1199> XINCLUDE "CLIModeSupport.ab3"
000199B6 <CLIModeSupport.ab3@1200> XINCLUDE "CLIModeSupport.ab3"
000199DC <CLIModeSupport.ab3@1201> XINCLUDE "CLIModeSupport.ab3"
00019A02 <CLIModeSupport.ab3@1202> XINCLUDE "CLIModeSupport.ab3"
00019A28 <CLIModeSupport.ab3@1203> XINCLUDE "CLIModeSupport.ab3"
00019A7E <CLIModeSupport.ab3@1204> XINCLUDE "CLIModeSupport.ab3"
00019ACC <CLIModeSupport.ab3@1205> XINCLUDE "CLIModeSupport.ab3"
00019B1A <CLIModeSupport.ab3@1206> XINCLUDE "CLIModeSupport.ab3"
00019BD4 <CLIModeSupport.ab3@1207> XINCLUDE "CLIModeSupport.ab3"
00019C2A <CLIModeSupport.ab3@1208> XINCLUDE "CLIModeSupport.ab3"
00019C50 <CLIModeSupport.ab3@1209> XINCLUDE "CLIModeSupport.ab3"
00019C76 <CLIModeSupport.ab3@1210> XINCLUDE "CLIModeSupport.ab3"
00019C9C <CLIModeSupport.ab3@1211> XINCLUDE "CLIModeSupport.ab3"
00019CF2 <CLIModeSupport.ab3@1212> XINCLUDE "CLIModeSupport.ab3"
00019D48 <CLIModeSupport.ab3@1213> XINCLUDE "CLIModeSupport.ab3"
00019D96 <CLIModeSupport.ab3@1214> XINCLUDE "CLIModeSupport.ab3"
00019DE4 <CLIModeSupport.ab3@1215> XINCLUDE "CLIModeSupport.ab3"
00019E32 <CLIModeSupport.ab3@1216> XINCLUDE "CLIModeSupport.ab3"
00019E80 <CLIModeSupport.ab3@1217> XINCLUDE "CLIModeSupport.ab3"
00019ECE <CLIModeSupport.ab3@1218> XINCLUDE "CLIModeSupport.ab3"
00019F1C <CLIModeSupport.ab3@1219> XINCLUDE "CLIModeSupport.ab3"
00019F6A <CLIModeSupport.ab3@1220> XINCLUDE "CLIModeSupport.ab3"
00019F90 <CLIModeSupport.ab3@1221> XINCLUDE "CLIModeSupport.ab3"
00019FB6 <CLIModeSupport.ab3@1222> XINCLUDE "CLIModeSupport.ab3"
00019FDC <CLIModeSupport.ab3@1223> XINCLUDE "CLIModeSupport.ab3"
0001A02A <CLIModeSupport.ab3@1224> XINCLUDE "CLIModeSupport.ab3"
0001A078 <CLIModeSupport.ab3@1225> XINCLUDE "CLIModeSupport.ab3"
0001A0CE <CLIModeSupport.ab3@1226> XINCLUDE "CLIModeSupport.ab3"
0001A11C <CLIModeSupport.ab3@1227> XINCLUDE "CLIModeSupport.ab3"
0001A16A <CLIModeSupport.ab3@1228> XINCLUDE "CLIModeSupport.ab3"
0001A1B8 <CLIModeSupport.ab3@1229> XINCLUDE "CLIModeSupport.ab3"
0001A1DE <CLIModeSupport.ab3@1230> XINCLUDE "CLIModeSupport.ab3"
0001A204 <CLIModeSupport.ab3@1231> XINCLUDE "CLIModeSupport.ab3"
0001A22A <CLIModeSupport.ab3@1232> XINCLUDE "CLIModeSupport.ab3"
0001A262 <CLIModeSupport.ab3@1233> XINCLUDE "CLIModeSupport.ab3"
0001A28A <CLIModeSupport.ab3@1234> XINCLUDE "CLIModeSupport.ab3"
0001A29E <CLIModeSupport.ab3@1235> XINCLUDE "CLIModeSupport.ab3"
0001A312 <CLIModeSupport.ab3@1236> XINCLUDE "CLIModeSupport.ab3"
0001A358 <CLIModeSupport.ab3@1237> XINCLUDE "CLIModeSupport.ab3"
0001A406 <CLIModeSupport.ab3@1238> XINCLUDE "CLIModeSupport.ab3"
0001A472 <CLIModeSupport.ab3@1239> XINCLUDE "CLIModeSupport.ab3"
0001A482 <CLIModeSupport.ab3@1240> XINCLUDE "CLIModeSupport.ab3"
0001A4A8 <CLIModeSupport.ab3@1242> XINCLUDE "CLIModeSupport.ab3"
0001A4B2 <CLIModeSupport.ab3@1244> XINCLUDE "CLIModeSupport.ab3"
0001A4DC <CLIModeSupport.ab3@1245> XINCLUDE "CLIModeSupport.ab3"
0001A4E2 <CLIModeSupport.ab3@1246> XINCLUDE "CLIModeSupport.ab3"
0001A4F2 <CLIModeSupport.ab3@1248> XINCLUDE "CLIModeSupport.ab3"
0001A592 <CLIModeSupport.ab3@1250> XINCLUDE "CLIModeSupport.ab3"
0001A5D2 <CLIModeSupport.ab3@1251> XINCLUDE "CLIModeSupport.ab3"
0001A5D8 <CLIModeSupport.ab3@1253> XINCLUDE "CLIModeSupport.ab3"
0001A63A <CLIModeSupport.ab3@1254> XINCLUDE "CLIModeSupport.ab3"
0001A644 <CLIModeSupport.ab3@1256> XINCLUDE "CLIModeSupport.ab3"
0001A64E <CLIModeSupport.ab3@1258> XINCLUDE "CLIModeSupport.ab3"
0001A668 <CLIModeSupport.ab3@1259> XINCLUDE "CLIModeSupport.ab3"
0001A68A <CLIModeSupport.ab3@1335> XINCLUDE "CLIModeSupport.ab3"
0001A6AC <CLIModeSupport.ab3@1336> XINCLUDE "CLIModeSupport.ab3"
0001A706 <CLIModeSupport.ab3@1337> XINCLUDE "CLIModeSupport.ab3"
0001A728 <CLIModeSupport.ab3@1338> XINCLUDE "CLIModeSupport.ab3"
0001A74A <CLIModeSupport.ab3@1339> XINCLUDE "CLIModeSupport.ab3"
0001A7A4 <CLIModeSupport.ab3@1340> XINCLUDE "CLIModeSupport.ab3"
0001A7E6 <CLIModeSupport.ab3@1341> XINCLUDE "CLIModeSupport.ab3"
0001A7EC <CLIModeSupport.ab3@1343> XINCLUDE "CLIModeSupport.ab3"
0001A7FA <CLIModeSupport.ab3@1344> XINCLUDE "CLIModeSupport.ab3"
0001A800 <CLIModeSupport.ab3@1346> XINCLUDE "CLIModeSupport.ab3"
0001A814 <CLIModeSupport.ab3@1347> XINCLUDE "CLIModeSupport.ab3"
0001A81E <CLIModeSupport.ab3@1348> XINCLUDE "CLIModeSupport.ab3"
0001A898 <CLIModeSupport.ab3@1349> XINCLUDE "CLIModeSupport.ab3"
0001A8A2 <CLIModeSupport.ab3@1350> XINCLUDE "CLIModeSupport.ab3"
0001A8A8 <CLIModeSupport.ab3@1351> XINCLUDE "CLIModeSupport.ab3"
0001A8BC <CLIModeSupport.ab3@1354> XINCLUDE "CLIModeSupport.ab3"
0001A8C6 <CLIModeSupport.ab3@1355> XINCLUDE "CLIModeSupport.ab3"
0001A946 <CLIModeSupport.ab3@1356> XINCLUDE "CLIModeSupport.ab3"
0001A950 <CLIModeSupport.ab3@1357> XINCLUDE "CLIModeSupport.ab3"
0001A956 <CLIModeSupport.ab3@1358> XINCLUDE "CLIModeSupport.ab3"
0001A96A <CLIModeSupport.ab3@1361> XINCLUDE "CLIModeSupport.ab3"
0001A974 <CLIModeSupport.ab3@1362> XINCLUDE "CLIModeSupport.ab3"
0001A9BC <CLIModeSupport.ab3@1363> XINCLUDE "CLIModeSupport.ab3"
0001A9CA <CLIModeSupport.ab3@1364> XINCLUDE "CLIModeSupport.ab3"
0001A9F0 <CLIModeSupport.ab3@1365> XINCLUDE "CLIModeSupport.ab3"
0001A9FA <CLIModeSupport.ab3@1366> XINCLUDE "CLIModeSupport.ab3"
0001AA64 <CLIModeSupport.ab3@1367> XINCLUDE "CLIModeSupport.ab3"
0001AB36 <CLIModeSupport.ab3@1368> XINCLUDE "CLIModeSupport.ab3"
0001AB40 <CLIModeSupport.ab3@1369> XINCLUDE "CLIModeSupport.ab3"
0001AB46 <CLIModeSupport.ab3@1370> XINCLUDE "CLIModeSupport.ab3"
0001AB50 <CLIModeSupport.ab3@1372> XINCLUDE "CLIModeSupport.ab3"
0001AB56 <CLIModeSupport.ab3@1373> XINCLUDE "CLIModeSupport.ab3"
0001AB6A <CLIModeSupport.ab3@1376> XINCLUDE "CLIModeSupport.ab3"
0001AB74 <CLIModeSupport.ab3@1377> XINCLUDE "CLIModeSupport.ab3"
0001ABBC <CLIModeSupport.ab3@1378> XINCLUDE "CLIModeSupport.ab3"
0001ABC6 <CLIModeSupport.ab3@1379> XINCLUDE "CLIModeSupport.ab3"
0001ABCC <CLIModeSupport.ab3@1380> XINCLUDE "CLIModeSupport.ab3"
0001ABE0 <CLIModeSupport.ab3@1383> XINCLUDE "CLIModeSupport.ab3"
0001AC06 <CLIModeSupport.ab3@1384> XINCLUDE "CLIModeSupport.ab3"
0001AC1A <CLIModeSupport.ab3@1387> XINCLUDE "CLIModeSupport.ab3"
0001AC40 <CLIModeSupport.ab3@1388> XINCLUDE "CLIModeSupport.ab3"
0001AC54 <CLIModeSupport.ab3@1391> XINCLUDE "CLIModeSupport.ab3"
0001AC7A <CLIModeSupport.ab3@1392> XINCLUDE "CLIModeSupport.ab3"
0001AC8E <CLIModeSupport.ab3@1395> XINCLUDE "CLIModeSupport.ab3"
0001AC98 <CLIModeSupport.ab3@1396> XINCLUDE "CLIModeSupport.ab3"
0001ACC6 <CLIModeSupport.ab3@1397> XINCLUDE "CLIModeSupport.ab3"
0001AD16 <CLIModeSupport.ab3@1398> XINCLUDE "CLIModeSupport.ab3"
0001AD36 <CLIModeSupport.ab3@1399> XINCLUDE "CLIModeSupport.ab3"
0001AD4E <CLIModeSupport.ab3@1400> XINCLUDE "CLIModeSupport.ab3"
0001AE32 <CLIModeSupport.ab3@1401> XINCLUDE "CLIModeSupport.ab3"
0001AE3C <CLIModeSupport.ab3@1402> XINCLUDE "CLIModeSupport.ab3"
0001AE42 <CLIModeSupport.ab3@1403> XINCLUDE "CLIModeSupport.ab3"
0001AE44 <CLIModeSupport.ab3@1405> XINCLUDE "CLIModeSupport.ab3"
0001AE58 <CLIModeSupport.ab3@1406> XINCLUDE "CLIModeSupport.ab3"
0001AE8A <CLIModeSupport.ab3@1409> XINCLUDE "CLIModeSupport.ab3"
0001AE90 <CLIModeSupport.ab3@1410> XINCLUDE "CLIModeSupport.ab3"
0001AED4 <CLIModeSupport.ab3@1411> XINCLUDE "CLIModeSupport.ab3"
0001AEE6 <CLIModeSupport.ab3@1412> XINCLUDE "CLIModeSupport.ab3"
0001AEF8 <CLIModeSupport.ab3@1413> XINCLUDE "CLIModeSupport.ab3"
0001AF02 <CLIModeSupport.ab3@1414> XINCLUDE "CLIModeSupport.ab3"
0001AF08 <CLIModeSupport.ab3@1415> XINCLUDE "CLIModeSupport.ab3"
0001AF12 <CLIModeSupport.ab3@1417> XINCLUDE "CLIModeSupport.ab3"
0001AF2C <CLIModeSupport.ab3@1418> XINCLUDE "CLIModeSupport.ab3"
0001AF2C <AmiBlitz3.ab3@93> XINCLUDE "CLIModeSupport.ab3"
0001AFAC <AmiBlitz3.ab3@98> dynassign.s = dos_GetToolString{"ASSIGN",default_assign$}       ; replaced hardcoded path  tomsmart1 2012 03 09
0001AFE4 <AmiBlitz3.ab3@99> If dynassign <> ""
0001AFFA <AmiBlitz3.ab3@100>     *AssignSema.SignalSemaphore = FindSemaphore_(&dynassign)    ; does it already exist?
0001B004 <AmiBlitz3.ab3@101>     If *AssignSema
0001B014 <AmiBlitz3.ab3@102>       ObtainSemaphoreShared_ *AssignSema
0001B01A <AmiBlitz3.ab3@103>     Else                                                        ; no, create one...
0001B03A <AmiBlitz3.ab3@104>       *AssignSema = AllocVec_ (SizeOf.SignalSemaphore,#MEMF_PUBLIC|#MEMF_CLEAR)
0001B044 <AmiBlitz3.ab3@105>       If *AssignSema
0001B054 <AmiBlitz3.ab3@106>         InitSemaphore_ *AssignSema
0001B088 <AmiBlitz3.ab3@108>         *AssignSema\ss_Link\ln_Name = AllocVec_(FLen(dynassign)+1,#MEMF_PUBLIC|#MEMF_CLEAR)
0001B09A <AmiBlitz3.ab3@109>         If *AssignSema\ss_Link\ln_Name
0001B0D6 <AmiBlitz3.ab3@110>           Poke.s  *AssignSema\ss_Link\ln_Name,dynassign
0001B0E2 <AmiBlitz3.ab3@112>         *AssignSema\ss_Link\ln_Pri  = 1
0001B0EE <AmiBlitz3.ab3@113>         *AssignSema\ss_Link\ln_Type = #NT_SIGNALSEM
0001B0FE <AmiBlitz3.ab3@115>         AddSemaphore_ *AssignSema
0001B10E <AmiBlitz3.ab3@116>         ObtainSemaphoreShared_ *AssignSema
0001B15A <AmiBlitz3.ab3@122>   mydir.s = dos_GetProgDir{"Sys:"}
0001B1BA <AmiBlitz3.ab3@123>   If dos_SetAssign{dynassign,mydir,False}
0001B24E <AmiBlitz3.ab3@124>     dos_AddAssign{"LIBS:",dos_AddPart{dynassign,"Libs"}}
0001B286 <AmiBlitz3.ab3@127>   Poke$ ?str_blitz3assign,dynassign
0001B308 <AmiBlitz3.ab3@128>   Poke$ ?str_defaultdbug,dos_AddPart{dynassign,"Debug/DefaultDBug"}
0001B38A <AmiBlitz3.ab3@131>   Poke$ ?str_path_acidlibs,dos_AddPart{dynassign, "BlitzLibs/AcidLibs"}
0001B40C <AmiBlitz3.ab3@132>   Poke$ ?str_path_deflibs ,dos_AddPart{dynassign, "BlitzLibs/DefLibs" }
0001B48E <AmiBlitz3.ab3@133>   Poke$ ?str_path_userlibs,dos_AddPart{dynassign, "BlitzLibs/UserLibs"}
0001B510 <AmiBlitz3.ab3@134>   Poke$ ?str_path_includes,dos_AddPart{dynassign, "Sourcecodes/Includes"}
0001B584 <AmiBlitz3.ab3@135>   my_systemdir$    = dos_AddPart{dynassign, "System"}
0001B5F8 <AmiBlitz3.ab3@136>   my_residentsdir$ = dos_AddPart{dynassign, "BlitzLibs/Residents"}
0001B66C <AmiBlitz3.ab3@137>   my_blitzlibsdir$ = dos_AddPart{dynassign, "BlitzLibs"}
0001B69A <AmiBlitz3.ab3@138>   dos_CreateDir{my_blitzlibsdir$}
0001B6BE <AmiBlitz3.ab3@139>   dos_CreateDir{Peek$(?str_path_userlibs)}
0001B6EC <AmiBlitz3.ab3@140>   dos_CreateDir{my_residentsdir$}
0001B71A <AmiBlitz3.ab3@141>   dos_CreateDir{my_systemdir$}
0001B7E4 <AmiBlitz3.ab3@147> pedfile$ = dos_GetToolString{"EDITOR",dos_AddPart{my_systemdir$,"PED"}}
0001B81C <AmiBlitz3.ab3@148> Poke.s ?str_pedfile,pedfile$
0001B85A <AmiBlitz3.ab3@150> If dos_GetToolState{"START_WITHOUT_LIBS"} = -1
0001B86A <AmiBlitz3.ab3@151>   Poke.b ?start_without_libs,1
0001B870 <AmiBlitz3.ab3@152> Else
0001B880 <AmiBlitz3.ab3@153>   Poke.b ?start_without_libs,0
0001B8A6 <AmiBlitz3.ab3@156> !TRANS_INIT{"AmiBlitz3"}     ; init localization via translation.include
0001B8B2 <AmiBlitz3.ab3@160> dbg_fid.l = -1 ; no debug file id yet!
0001B8C4 <AmiBlitz3.ab3@163> Poke.l ?maxerrorcount,#defaultmaxerrorcount                ; set the default value  tomsmart1
0001B8CE <AmiBlitz3.ab3@165> If CLIMode
0001B8D4 <AmiBlitz3.ab3@168>   err.l      = False                                       ; indicate that an error has occured
0001B8DA <AmiBlitz3.ab3@169>   showhelp.l = False                                       ; show the CLI tool's help
0001B932 <AmiBlitz3.ab3@172>   cli_progpath.s      = dos_GetProgDir{default_assign$}    ; replaced hardcoded path  tomsmart1 2012 03 09
0001B95A <AmiBlitz3.ab3@173>   cli_sourcefile.s    = ""
0001B982 <AmiBlitz3.ab3@174>   cli_exefile.s       = ""
0001B9AA <AmiBlitz3.ab3@175>   cli_savefile.s      = ""
0001B9D2 <AmiBlitz3.ab3@176>   cli_dumpfile.s      = ""
0001B9FA <AmiBlitz3.ab3@177>   cli_includepath.s   = ""
0001BA22 <AmiBlitz3.ab3@178>   cli_blitzlibpath.s  = ""
0001BA28 <AmiBlitz3.ab3@179>   cli_debuginfo.l     = False
0001BA2E <AmiBlitz3.ab3@180>   cli_run.l           = False
0001BA36 <AmiBlitz3.ab3@181>   cli_dumpflags.l     = $FFFFFFFF
0001BA5E <AmiBlitz3.ab3@182>   cli_info.s          = ""
0001BA64 <AmiBlitz3.ab3@183>   cli_release.l       = False
0001BA6E <AmiBlitz3.ab3@184>   cli_numargs.l       = dos_GetNumArgs{}
0001BA74 <AmiBlitz3.ab3@185>   cli_gui.l           = False
0001BA7C <AmiBlitz3.ab3@186>   cli_dumpform.l      = 1 ; 0 = bin, 1 = ASCII
0001BA84 <AmiBlitz3.ab3@187>   cli_verbose.l       = 1
0001BA8C <AmiBlitz3.ab3@188>   cli_comdbgflags.l   = $00000000             ; added to support compiler and debugger settings via CLI  tomsmart1
0001BA94 <AmiBlitz3.ab3@189>   cli_comstrbufsize.l = 0
0001BA9C <AmiBlitz3.ab3@190>   cli_exestacksize.l  = 0
0001BAA4 <AmiBlitz3.ab3@191>   cli_maxerrors.l     = 0                     ; added to make maxerrorcount changable in CLIMode  tomsmart1
0001BABC <AmiBlitz3.ab3@192>   If cli_numargs=0 Then showhelp=True
0001BAEC <AmiBlitz3.ab3@196>     arg.s = dos_GetNextArg{}                               ; get the next CLI argument
0001BB38 <AmiBlitz3.ab3@197>     larg.s = LCase$(arg)                                   ; lower case the option string
0001BC00 <AmiBlitz3.ab3@198>     If Left$(larg,1)="-" Then larg = Right$(larg,FLen(larg)-1)
0001BC36 <AmiBlitz3.ab3@199>     Select larg
0001BC82 <AmiBlitz3.ab3@200>       Case "s" : larg="source"
0001BCD4 <AmiBlitz3.ab3@201>       Case "e" : larg="exe"
0001BD26 <AmiBlitz3.ab3@202>       Case "d" : larg="debug"
0001BD78 <AmiBlitz3.ab3@203>       Case "r" : larg="release"
0001BDCA <AmiBlitz3.ab3@204>       Case "h" : larg="help"
0001BE1C <AmiBlitz3.ab3@205>       Case "v" : larg="verbose"
0001BE2A <AmiBlitz3.ab3@206>     End Select
0001BE60 <AmiBlitz3.ab3@208>     Select larg
0001BEB4 <AmiBlitz3.ab3@209>       Case "exe"      : cli_exefile     = dos_GetNextArg{}
0001BF0E <AmiBlitz3.ab3@210>       Case "source"   : cli_sourcefile  = dos_GetNextArg{}
0001BF68 <AmiBlitz3.ab3@211>       Case "save"     : cli_savefile    = dos_GetNextArg{}
0001BF98 <AmiBlitz3.ab3@212>       Case "debug"    : cli_debuginfo   = True
0001BFC8 <AmiBlitz3.ab3@213>       Case "run"      : cli_run         = True
0001BFF8 <AmiBlitz3.ab3@214>       Case "release"  : cli_release     = True
0001C028 <AmiBlitz3.ab3@215>       Case "ped"      : cli_gui         = True
0001C082 <AmiBlitz3.ab3@216>       Case "dform"    : cli_dumpform.l  = Vallong(dos_GetNextArg{})
0001C0F4 <AmiBlitz3.ab3@217>       Case "dump"     : cli_info        = LCase$(dos_GetNextArg{})
0001C124 <AmiBlitz3.ab3@218>                         cli_dumpfile    = dos_GetNextArg{}
0001C12C <AmiBlitz3.ab3@219>                         cli_dumpflags   = $0
0001C18C <AmiBlitz3.ab3@220>                         If Instr(cli_info,"all"  ) Then cli_dumpflags | $FFFFFFFF
0001C1EC <AmiBlitz3.ab3@221>                         If Instr(cli_info,"token") Then cli_dumpflags | #DUMPFLG_TOKENS
0001C24C <AmiBlitz3.ab3@222>                         If Instr(cli_info,"label") Then cli_dumpflags | #DUMPFLG_LABELS
0001C2AC <AmiBlitz3.ab3@223>                         If Instr(cli_info,"var"  ) Then cli_dumpflags | #DUMPFLG_VARS
0001C30C <AmiBlitz3.ab3@224>                         If Instr(cli_info,"const") Then cli_dumpflags | #DUMPFLG_CONSTANTS
0001C36C <AmiBlitz3.ab3@225>                         If Instr(cli_info,"func" ) Then cli_dumpflags | #DUMPFLG_FUNCTIONS
0001C3CC <AmiBlitz3.ab3@226>                         If Instr(cli_info,"macro") Then cli_dumpflags | #DUMPFLG_MACROS
0001C42C <AmiBlitz3.ab3@227>                         If Instr(cli_info,"type" ) Then cli_dumpflags | #DUMPFLG_NEWTYPES
0001C48C <AmiBlitz3.ab3@228>                         If Instr(cli_info,"lib"  ) Then cli_dumpflags | #DUMPFLG_LIBS
0001C49E <AmiBlitz3.ab3@229>                         If cli_dumpflags = $0
0001C4A4 <AmiBlitz3.ab3@230>                          err=True
0001C538 <AmiBlitz3.ab3@231>                          NPrint "\\1b[1m*** ERROR: Invalid flags for dumpfile \\22",cli_info,"\\22 specified!\\1b[0m"
0001C5AA <AmiBlitz3.ab3@234>       Case "setcom"   : cli_setcom.s    = LCase$(dos_GetNextArg{})
0001C5B2 <AmiBlitz3.ab3@235>                         cli_comflags.l  = $0
0001C612 <AmiBlitz3.ab3@236>                         If Instr(cli_setcom,"icon"  ) Then cli_comflags | #CLI_COMSETICONFLAG     ; create Icon
0001C672 <AmiBlitz3.ab3@237>                         If Instr(cli_setcom,"small" ) Then cli_comflags | #CLI_COMSETSMALLFLAG    ; make smallest code
0001C6D2 <AmiBlitz3.ab3@238>                         If Instr(cli_setcom,"func"  ) Then cli_comflags | #CLI_COMSETFUNCFLAG     ; use Functionoptimizer
0001C732 <AmiBlitz3.ab3@239> 
0001C792 <AmiBlitz3.ab3@240>                         If Instr(cli_setcom,"dbgf"  ) Then cli_comflags | #CLI_COMSETDBGFFLAG     ; create a .dbf file
0001C7AC <AmiBlitz3.ab3@241>                         If (cli_comflags & #CLI_COMSETALLFLAGS) = 0                               ; test if args are correct
0001C7B2 <AmiBlitz3.ab3@242>                           err=True                                                                ; no
0001C846 <AmiBlitz3.ab3@243>                           NPrint "\\1b[1m*** ERROR: Invalid flags for setcom \\22",cli_setcom,"\\22 specified!\\1b[0m"
0001C84C <AmiBlitz3.ab3@244>                         Else
0001C85A <AmiBlitz3.ab3@245>                           cli_comdbgflags | cli_comflags                                          ; yes then add it
0001C8CC <AmiBlitz3.ab3@248>       Case "setdbg"   : cli_setdbg.s    = LCase$(dos_GetNextArg{})
0001C8D4 <AmiBlitz3.ab3@249>                         cli_dbgflags.l  = $0
0001C934 <AmiBlitz3.ab3@250>                         If Instr(cli_setdbg,"auto" ) Then cli_dbgflags | #CLI_DEBUGAUTOFLAG       ; autorun
0001C994 <AmiBlitz3.ab3@251>                         If Instr(cli_setdbg,"irq"  ) Then cli_dbgflags | #CLI_DEBUGIRQFLAG        ; interrupt check
0001C9F4 <AmiBlitz3.ab3@252>                         If Instr(cli_setdbg,"asm"  ) Then cli_dbgflags | #CLI_DEBUGASMFLAG        ; assembler check
0001CA54 <AmiBlitz3.ab3@253>                         If Instr(cli_setdbg,"ofl"  ) Then cli_dbgflags | #CLI_DEBUGOFLFLAG        ; overflow check
0001CA6E <AmiBlitz3.ab3@254>                         If (cli_dbgflags & #CLI_DEBUGALLFLAGS) = 0                                ; yes then add it
0001CA74 <AmiBlitz3.ab3@255>                           err=True                                                                ; no
0001CB08 <AmiBlitz3.ab3@256>                           NPrint "\\1b[1m*** ERROR: Invalid flags for setdbg \\22",cli_setdbg,"\\22 specified!\\1b[0m"
0001CB0E <AmiBlitz3.ab3@257>                         Else
0001CB1C <AmiBlitz3.ab3@258>                           cli_comdbgflags | cli_dbgflags                                          ; yes then add it
0001CB76 <AmiBlitz3.ab3@260>       Case "strbufsize": cli_comstrbufsize = Vallong(dos_GetNextArg{})
0001CBD0 <AmiBlitz3.ab3@261>       Case "stacksize" : cli_exestacksize  = Vallong(dos_GetNextArg{})
0001CC2A <AmiBlitz3.ab3@262> 
0001CC50 <AmiBlitz3.ab3@263>                         If ((cli_maxerrors > 0) AND (cli_maxerrors <4097))                        ; check
0001CC60 <AmiBlitz3.ab3@264>                           Poke.l ?maxerrorcount,cli_maxerrors
0001CCBA <AmiBlitz3.ab3@267>       Case "verbose"  : cli_verbose     = Vallong(dos_GetNextArg{})
0001CCEA <AmiBlitz3.ab3@268>       Case "h"        : showhelp        = True             ; show the help and quit
0001CCF0 <AmiBlitz3.ab3@269>       Default
0001CD28 <AmiBlitz3.ab3@270>         If arg><""
0001CDBC <AmiBlitz3.ab3@271>           NPrint "\\1b[1m*** ERROR: Unknown option \\22",arg,"\\22 specified!\\1b[0m"
0001CDC2 <AmiBlitz3.ab3@272>           err = True
0001CDD0 <AmiBlitz3.ab3@274>     End Select
0001CE1C <AmiBlitz3.ab3@275>   Until arg = "" OR err=True          ; until we processed all arguments
0001CE3E <AmiBlitz3.ab3@278>   If err><False OR showhelp = True
0001CE48 <AmiBlitz3.ab3@279>     If showhelp
0001CEAA <AmiBlitz3.ab3@280>     NPrint "AmiBlitz ",Peek.s(?myversion)
0001CEE2 <AmiBlitz3.ab3@281>     NPrint "\\nSyntax: AmiBlitz3 [options]"
0001CF1A <AmiBlitz3.ab3@282>     NPrint "\\nOptions:"
0001CF52 <AmiBlitz3.ab3@283>     NPrint "  -(s)ource <file>    : input source code filename (bb2, ab2 or ab3)"
0001CF8A <AmiBlitz3.ab3@284>     NPrint "  -(e)xe <file>       : output executable filename"
0001CFC2 <AmiBlitz3.ab3@285>     NPrint "  -(d)ebug            : compile and start runtime debugger"
0001CFFA <AmiBlitz3.ab3@286>     NPrint "  -(r)elease          : create release executable (size optimized)"
0001D032 <AmiBlitz3.ab3@287>     NPrint "  -run                : run compiled program"
0001D06A <AmiBlitz3.ab3@288>     NPrint "  -dump <info> <file> : dump compiler internals to file"
0001D0A2 <AmiBlitz3.ab3@289>     NPrint "                        (info=all|token|label|var|func|const|macro|type|lib)"
0001D0DA <AmiBlitz3.ab3@290>     NPrint "  -setcom <options>   : set compiler settings (options=icon|small|func|ldbg|dbgf)"       ; added  tomsmart1
0001D112 <AmiBlitz3.ab3@291>     NPrint "  -setdbg <check>     : set debugger settings (check=auto|irq|asm|ofl)"                  ; added  tomsmart1
0001D14A <AmiBlitz3.ab3@292>     NPrint "  -strbufsize <n>     : set the string buffer size of the compiler"                      ; added  tomsmart1
0001D182 <AmiBlitz3.ab3@293>     NPrint "  -stacksize <n>      : set the stacksize for the exe if it run/debug"                   ; added  tomsmart1
0001D1BA <AmiBlitz3.ab3@294>     NPrint "  -maxerrors <n>      ; set maxerrorcounter of the compiler (1-4096; default=99)"        ; added  tomsmart1
0001D1F2 <AmiBlitz3.ab3@295>     NPrint "  -dform <n>          : format of compiler internals dump (0=bin, 1=ASCII; default=1)"
0001D22A <AmiBlitz3.ab3@296>     NPrint "  -PED                : start AmiBlitz3 IDE (PED)"
0001D262 <AmiBlitz3.ab3@297>     NPrint "  -save <file>        : re-save source code (convert format, if needed)"
0001D29A <AmiBlitz3.ab3@298>     NPrint "  -(v)erbose <n>      : set verbose level (0, 1 or 2; default=1)"
0001D2D2 <AmiBlitz3.ab3@299>     NPrint "  -(h)elp             : show this help"
0001D30A <AmiBlitz3.ab3@300>     NPrint "\\nExample:"
0001D342 <AmiBlitz3.ab3@301>     NPrint "  AmiBlitz3 -s \\22DH0:Sourcecodes/MyProgram.ab3\\22 -e RAM:MyProgram.exe"
0001D37A <AmiBlitz3.ab3@302>     NPrint "\\nNote: To start the AmiBlitz3 IDE, run from Workbench or with -PED option."
0001D380 <AmiBlitz3.ab3@305>     Goto abnormal_exit
0001D39C <AmiBlitz3.ab3@308>   If cli_gui        Then CLIMode = False : error_SetFlags{#error_requester}
0001D400 <AmiBlitz3.ab3@309>   If cli_sourcefile Then Poke.s ?str_tempfilename,cli_sourcefile
0001D410 <AmiBlitz3.ab3@312> Poke.l ?CLIMode,CLIMode
0001D434 <AmiBlitz3.ab3@347>   Dim incdim.s (#maxincludes)
0001D458 <AmiBlitz3.ab3@348>   Dim incline.l(#maxincludes)
0001D472 <AmiBlitz3.ab3@616> Function.s Get_Libinfo{addr_libnum.l}
0001D47E <AmiBlitz3.ab3@618>   lib_ab2.b = False : lib_os.b = False
0001D484 <AmiBlitz3.ab3@619>   addr_counter.l = addr_libnum
0001D48C <AmiBlitz3.ab3@620>   skip.l = 0
0001D49E <AmiBlitz3.ab3@621>   If addr_counter=0
0001D4D8 <AmiBlitz3.ab3@622>     error{"INTERNAL: \\__THIS_FUNCTION: Invalid pointer!"}
0001D4F6 <AmiBlitz3.ab3@623>     Function Return ""
0001D504 <AmiBlitz3.ab3@628>     mem.l = Peek.l(addr_counter)
0001D512 <AmiBlitz3.ab3@633>     addr_counter + 2
0001D532 <AmiBlitz3.ab3@634>     If (mem = $0000ffff) Then lib_ab2= True : skip = 8
0001D54C <AmiBlitz3.ab3@635>     If (mem LSR 16) = $ffe2
0001D552 <AmiBlitz3.ab3@637>       lib_os = True
0001D55A <AmiBlitz3.ab3@638>       skip = 10
0001D5A0 <AmiBlitz3.ab3@639>       If Peek$(addr_counter+skip) = "" Then skip + 4
0001D5E4 <AmiBlitz3.ab3@641>   Until (lib_ab2=True OR lib_os = True) OR (addr_counter>addr_libnum + $400)
0001D5FA <AmiBlitz3.ab3@643>   If (addr_counter>addr_libnum + $400)
0001D618 <AmiBlitz3.ab3@645>     Function Return ""
0001D61E <AmiBlitz3.ab3@646>   Else
0001D642 <AmiBlitz3.ab3@647>     Function Return Peek$(addr_counter + skip)
0001D64C <AmiBlitz3.ab3@649> End Function
0001D66A <AmiBlitz3.ab3@689>   !asm
0001D670 <AmiBlitz3.ab3@690>   MOVEA.l _execbase,A6
0001D674 <AmiBlitz3.ab3@691>   MOVEM.l d0/a0,-(a7)
0001D676 <AmiBlitz3.ab3@693>   MOVEQ #127,d0
0001D67C <AmiBlitz3.ab3@694>   LEA chartab,a0
0001D682 <AmiBlitz3.ab3@697>     MOVE.b #1,128(a0)
0001D684 <AmiBlitz3.ab3@698>     CLR.b (a0)+
0001D688 <AmiBlitz3.ab3@699>   DBF d0,'l12
0001D68E <AmiBlitz3.ab3@701>   LEA chartab,a0
0001D692 <AmiBlitz3.ab3@702>   MOVE.b #1,(a0)
0001D698 <AmiBlitz3.ab3@703>   MOVE.b #1,","(a0)
0001D69E <AmiBlitz3.ab3@704>   MOVE.b #1,";"(a0)
0001D6A4 <AmiBlitz3.ab3@705>   MOVE.b #1,":"(a0)
0001D6AA <AmiBlitz3.ab3@706>   MOVE.b #1,"("(a0)
0001D6B0 <AmiBlitz3.ab3@707>   MOVE.b #1,")"(a0)
0001D6B6 <AmiBlitz3.ab3@708>   MOVE.b #1,"="(a0)
0001D6BC <AmiBlitz3.ab3@709>   MOVE.b #1,"+"(a0)
0001D6C2 <AmiBlitz3.ab3@710>   MOVE.b #1,"-"(a0)
0001D6C8 <AmiBlitz3.ab3@711>   MOVE.b #1,"*"(a0)
0001D6CE <AmiBlitz3.ab3@712>   MOVE.b #1,"/"(a0)
0001D6D4 <AmiBlitz3.ab3@713>   MOVE.b #1,"$"(a0)
0001D6DA <AmiBlitz3.ab3@714>   MOVE.b #1,"%"(a0)
0001D6E0 <AmiBlitz3.ab3@715>   MOVE.b #1,"."(a0)
0001D6E6 <AmiBlitz3.ab3@716>   MOVE.b #1,"["(a0)
0001D6EC <AmiBlitz3.ab3@717>   MOVE.b #1,"]"(a0)
0001D6F2 <AmiBlitz3.ab3@718>   MOVE.b #1,"{"(a0)
0001D6F8 <AmiBlitz3.ab3@719>   MOVE.b #1,"}"(a0)
0001D6FE <AmiBlitz3.ab3@720>   MOVE.b #1,"\"(a0)
0001D704 <AmiBlitz3.ab3@721>   MOVE.b #1,">"(a0)
0001D70A <AmiBlitz3.ab3@722>   MOVE.b #1,"<"(a0)
0001D710 <AmiBlitz3.ab3@723>   MOVE.b #1,"&"(a0)
0001D716 <AmiBlitz3.ab3@724>   MOVE.b #1,"|"(a0)
0001D71C <AmiBlitz3.ab3@725>   MOVE.b #1,"^"(a0)
0001D722 <AmiBlitz3.ab3@726>   MOVE.b #1,$7e(a0)
0001D728 <AmiBlitz3.ab3@727>   MOVE.w #$0101,1(a0)
0001D72E <AmiBlitz3.ab3@729>   LEA instrtab,a0
0001D734 <AmiBlitz3.ab3@730>   MOVE.l #labelhash-instrtab,d0
0001D736 <AmiBlitz3.ab3@731>   ASR.l #2,d0
0001D738 <AmiBlitz3.ab3@732>   SUBQ.l #1,d0
0001D73A <AmiBlitz3.ab3@735>    CLR.l (a0)+
0001D73C <AmiBlitz3.ab3@736>    SUBQ.l #1,d0
0001D740 <AmiBlitz3.ab3@737>   BNE 'l10
0001D746 <AmiBlitz3.ab3@739>   LEA allowtab,a0
0001D74C <AmiBlitz3.ab3@740>   MOVE.l #255,d0
0001D74E <AmiBlitz3.ab3@743>     CLR.b (a0)+
0001D752 <AmiBlitz3.ab3@744>   DBF d0,'la1
0001D758 <AmiBlitz3.ab3@746>   LEA allowtab,a0
0001D75E <AmiBlitz3.ab3@747>   MOVE.b #1,$7d(a0)
0001D764 <AmiBlitz3.ab3@748>   MOVE.b #1,$7c(a0)
0001D76A <AmiBlitz3.ab3@749>   MOVE.b #1,$44(a0)
0001D770 <AmiBlitz3.ab3@750>   MOVE.b #1,$45(a0)
0001D776 <AmiBlitz3.ab3@751>   MOVE.b #1,$b9(a0)
0001D77C <AmiBlitz3.ab3@752>   MOVE.b #1,$89(a0)
0001D782 <AmiBlitz3.ab3@753>   MOVE.b #1,$ce(a0)
0001D788 <AmiBlitz3.ab3@754>   MOVE.b #1,$cf(a0)
0001D78E <AmiBlitz3.ab3@755>   MOVE.b #1,$d0(a0)
0001D794 <AmiBlitz3.ab3@756>   MOVE.b #1,$cd(a0)
0001D796 <AmiBlitz3.ab3@757>   MOVEQ #0,d0
0001D79C <AmiBlitz3.ab3@759>   MOVEA.l _execbase,a6
0001D7A2 <AmiBlitz3.ab3@764>   MOVE.l #$10000,d0
0001D7A8 <AmiBlitz3.ab3@765>   MOVE.l #80000,d1
0001D7AA <AmiBlitz3.ab3@766>   MOVE.l d1,d2
0001D7AE <AmiBlitz3.ab3@767>   JSR _CreatePool(a6)                                      ; alloc memory for own stuff
0001D7B4 <AmiBlitz3.ab3@768>   MOVE.l d0,mempool
0001D7B8 <AmiBlitz3.ab3@769>   MOVEM.l (a7)+,d0/a0
0001D7BE <AmiBlitz3.ab3@770>   TST.l mempool
0001D7C2 <AmiBlitz3.ab3@771>   BEQ shutdown_compiler
0001D7C6 <AmiBlitz3.ab3@773>   MOVEA.l $114(A6),A4                                      ; get adress of this.Task-Structure
0001D7CC <AmiBlitz3.ab3@774>   MOVE.l A4,ptr_ThisTask
0001D7D0 <AmiBlitz3.ab3@776>   BSR.w open_doslibrary
0001D7D4 <AmiBlitz3.ab3@777>   BEQ.w shutdown_compiler
0001D7DA <AmiBlitz3.ab3@779>   MOVE.l D2,stacksize
0001D7DC <AmiBlitz3.ab3@783>   MOVEQ.l #$00,D0
0001D7E2 <AmiBlitz3.ab3@784>   LEA tokens,A0
0001D7E4 <AmiBlitz3.ab3@787>     ADDQ.w #1,D0
0001D7E6 <AmiBlitz3.ab3@788>     MOVE.l (A0),D1
0001D7EA <AmiBlitz3.ab3@789>     BEQ.w JL_0_2D1C
0001D7EC <AmiBlitz3.ab3@790>     MOVEA.l D1,A0
0001D7F0 <AmiBlitz3.ab3@791> BRA.w JL_0_2D0E
0001D7F6 <AmiBlitz3.ab3@794>   MOVE.l A0,end_of_tokenlist
0001D7FA <AmiBlitz3.ab3@796>   BSR.w makeasmtable
0001D802 <AmiBlitz3.ab3@797>   MOVE.w #$FFFF,returncode_org                             ;#-1,returncode
0001D806 <AmiBlitz3.ab3@799>   BSR.w open_mathlibrary
0001D80A <AmiBlitz3.ab3@800>   BEQ.w freemem_and_quit4
0001D810 <AmiBlitz3.ab3@802>   MOVE.l constmaxpc,D0
0001D812 <AmiBlitz3.ab3@803>   MOVEQ.l #$02,D1                                          ;chipmem            ;01 org source
0001D818 <AmiBlitz3.ab3@804>   MOVEA.l _execbase,A6
0001D81C <AmiBlitz3.ab3@805>   JSR _AllocMem(A6)                                        ;mem for branch routine
0001D822 <AmiBlitz3.ab3@806>   MOVE.l D0,constpcat
0001D826 <AmiBlitz3.ab3@807>   BEQ.w freemem_and_quit3
0001D82C <AmiBlitz3.ab3@808>   ADD.l constmaxpc,D0
0001D832 <AmiBlitz3.ab3@809>   MOVE.l D0,constlibat
0001D838 <AmiBlitz3.ab3@811>   MOVE.l macrobuffer_size,D0
0001D83E <AmiBlitz3.ab3@812>   CMP.l #DEFAULT_MACROBUFFERSIZE,d0                        ; replaced by a constant  tomsmart1
0001D842 <AmiBlitz3.ab3@813>   BGE 'ok
0001D848 <AmiBlitz3.ab3@814>     MOVE.l #DEFAULT_MACROBUFFERSIZE,d0
0001D84E <AmiBlitz3.ab3@815>     MOVE.l d0,macrobuffer_size                             ; replaced with a constant tomsmart1
0001D850 <AmiBlitz3.ab3@818>   ADDQ.l #4,d0
0001D852 <AmiBlitz3.ab3@819>   MOVEQ.l #$01,D1
0001D858 <AmiBlitz3.ab3@820>   MOVEA.l _execbase,A6
0001D85C <AmiBlitz3.ab3@821>   JSR _AllocMem(A6)                                        ;macro mem
0001D85E <AmiBlitz3.ab3@822>   MOVE.l d0,a0
0001D864 <AmiBlitz3.ab3@823>   MOVE.l macrobuffer_size,(a0)+
0001D866 <AmiBlitz3.ab3@824>   MOVE.l a0,d0
0001D86C <AmiBlitz3.ab3@825>   MOVE.l D0,ptr_macrobuffer_begin
0001D870 <AmiBlitz3.ab3@826>   BEQ.w freemem_and_quit2
0001D876 <AmiBlitz3.ab3@827>   ADD.l macrobuffer_size,D0
0001D87C <AmiBlitz3.ab3@828>   MOVE.l D0,ptr_macrobuffer_end
0001D882 <AmiBlitz3.ab3@830>   TST.l CLIMode
0001D886 <AmiBlitz3.ab3@831>   BEQ load_ped
0001D8B0 <AmiBlitz3.ab3@834>   !basic
0001D8BA <AmiBlitz3.ab3@835>   succ.l = InitEmulatedPED{}
0001D8BE <AmiBlitz3.ab3@836>   GetD0 succ
0001D8DC <AmiBlitz3.ab3@837>   !asm
0001D8DE <AmiBlitz3.ab3@838>   TST.l d0
0001D8E2 <AmiBlitz3.ab3@839>   BEQ freemem_and_quit
0001D8E8 <AmiBlitz3.ab3@840> JMP skip_ped
0001D8EE <AmiBlitz3.ab3@845>   MOVE.l #str_pedfile,D1                                   ; Load PED
0001D8F4 <AmiBlitz3.ab3@846>   MOVEA.l _dosbase,A6
0001D8F8 <AmiBlitz3.ab3@847>   JSR _LoadSeg(A6)
0001D8FE <AmiBlitz3.ab3@848>   MOVE.l D0,ptr_seg_ped
0001D902 <AmiBlitz3.ab3@850>   BEQ.w cant_load_PED         ; was freemem_and_quit  added error massage  that we can't load it  tomsmart1  2012 03
0001D904 <AmiBlitz3.ab3@854>   MOVEA.l D0,A2
0001D906 <AmiBlitz3.ab3@855>   ADDA.l A2,A2
0001D908 <AmiBlitz3.ab3@856>   ADDA.l A2,A2
0001D90E <AmiBlitz3.ab3@858>   LEA teddata,a1                                           ;lea edstruct,A1
0001D914 <AmiBlitz3.ab3@859>   MOVE.l #"TEDY",d1
0001D918 <AmiBlitz3.ab3@860>   JSR 4(A2)                                                ; Run PED
0001D91E <AmiBlitz3.ab3@862>   MOVE.l A0,ped_startup_addr                               ; PED returns address of routine "startup_code"
0001D924 <AmiBlitz3.ab3@863>   MOVE.l A1,comdata                                        ; PED returns address of comdata-area in A1
0001D962 <AmiBlitz3.ab3@865>   !ComData_GetW{comWord_PEDIsAvailable,D0}                 ; if PED_IsAvailable=0, quit AmiBlitz
0001D966 <AmiBlitz3.ab3@866>   BEQ.w unload_ped
0001D96A <AmiBlitz3.ab3@867> 
0001D96E <AmiBlitz3.ab3@868>   BNE old_version_of_PED                                   ; no, than exit
0001D9AC <AmiBlitz3.ab3@874>   !ComData_GetL{comData_Magic,D0}
0001D9B2 <AmiBlitz3.ab3@875>   CMP.l ##MagicIdentifier_Long,D0                          ;"~::~",D0    ; replace with a constants  tomsmart1 2012 03 09
0001D9B6 <AmiBlitz3.ab3@876>   BNE unload_ped
0001D9EE <AmiBlitz3.ab3@879>   !ComData_SetL{comPtr_Trap15            ,#directTrap15 }
0001DA26 <AmiBlitz3.ab3@880>   !ComData_SetL{comPtr_DirectBuffer      ,#directbuffer}
0001DA5E <AmiBlitz3.ab3@881>   !ComData_SetL{comPtr_MacroBase         ,#macrobase}
0001DA96 <AmiBlitz3.ab3@882>   !ComData_SetL{comPtr_VarBase           ,#varbase }
0001DACE <AmiBlitz3.ab3@883>   !ComData_SetL{comPtr_InstrBase         ,#instrtab}
0001DB06 <AmiBlitz3.ab3@884>   !ComData_SetL{comPtr_LibPointer        ,#libpointer}
0001DB3E <AmiBlitz3.ab3@885>   !ComData_SetL{comPtr_CompilerVersion   ,#myversion }
0001DB76 <AmiBlitz3.ab3@886>   !ComData_SetL{comPtr_VersionInformation,#versioninformation}
0001DBAE <AmiBlitz3.ab3@887>   !ComData_SetL{comPtr_NumberOfBuilds    ,#number_of_builds}
0001DBE6 <AmiBlitz3.ab3@888>   !ComData_SetL{comFunc_SaveSource       ,#ab3_SaveSource}
0001DC1E <AmiBlitz3.ab3@889>   !ComData_SetL{comFunc_LoadSource       ,#ab3_LoadSource}
0001DC56 <AmiBlitz3.ab3@890>   !ComData_SetL{comFunc_ClearSource      ,#ab3_ClearSource}
0001DC8E <AmiBlitz3.ab3@893>   !ComData_SetL{comFunc_CalculatExpression       ,#menu_calculator}
0001DCC6 <AmiBlitz3.ab3@894>   !ComData_SetL{comPtr_CalculatorExpressionString,#str_calcexpression}
0001DCFE <AmiBlitz3.ab3@897>   !ComData_SetL{comFunc_BackupXtraData           ,#BackupXtraData}
0001DD36 <AmiBlitz3.ab3@898>   !ComData_SetL{comFunc_RestoreXtraData          ,#RestoreXtraData}
0001DD6E <AmiBlitz3.ab3@900>   !ComData_SetL{comFunc_GetObjectEntry           ,#getobjectentry}
0001DDA6 <AmiBlitz3.ab3@901>   !ComData_SetL{comFunc_StoreMaxObjects          ,#storemaxobjects}
0001DDDE <AmiBlitz3.ab3@903>   !ComData_SetL{comFunc_ReloadResidentsForPED    ,#ReloadResidentsForPED}
0001DE16 <AmiBlitz3.ab3@904>   !ComData_SetL{comFunc_FreeClearResidentsForPED ,#FreeClearResidentsForPED}    ; add tomsmart1 2012 06 09
0001DE4E <AmiBlitz3.ab3@906>   !ComData_SetL{comPtr_Residents_Table           ,#residents_table}
0001DE86 <AmiBlitz3.ab3@907>   !ComData_SetL{comPtr_StringBuffer_Long         ,#stringbuffer}
0001DEBE <AmiBlitz3.ab3@908>   !ComData_SetL{comPtr_Stacksize_Long            ,#stacksize}
0001DEF6 <AmiBlitz3.ab3@909>   !ComData_SetL{comPtr_Create_IconFile_Byte      ,#create_iconfile}
0001DF2E <AmiBlitz3.ab3@910>   !ComData_SetL{comPtr_Make_SmallestCode_Byte    ,#make_smallestcode}
0001DF66 <AmiBlitz3.ab3@911>   !ComData_SetL{comPtr_Link_DebugInfo_Byte       ,#link_debuginfo}
0001DF9E <AmiBlitz3.ab3@912>   !ComData_SetL{comPtr_Use_Debugger_Byte         ,#use_debugger}
0001DFD6 <AmiBlitz3.ab3@913>   !ComData_SetL{comPtr_Autorun_Byte              ,#autorun}
0001E00E <AmiBlitz3.ab3@914>   !ComData_SetL{comPtr_InterruptCheck_Byte       ,#interruptcheck}
0001E046 <AmiBlitz3.ab3@915>   !ComData_SetL{comPtr_AssemblerCheck_Byte       ,#assemblercheck}
0001E07E <AmiBlitz3.ab3@916>   !ComData_SetL{comPtr_OverflowCheck_Byte        ,#overflowcheck}
0001E0B6 <AmiBlitz3.ab3@917>   !ComData_SetL{comPtr_Number_of_Objects_Word    ,#number_of_objects}
0001E0EE <AmiBlitz3.ab3@918>   !ComData_SetL{comPtr_MaxObjects_Value_Word     ,#maxobjects_value}
0001E126 <AmiBlitz3.ab3@919>   !ComData_SetL{comPtr_MaxObject_Pos_Word        ,#maxobject_pos}
0001E15E <AmiBlitz3.ab3@922>   !ComData_SetL{comPtr_CLIArgumentsString       ,#str_cliarguments}
0001E164 <AmiBlitz3.ab3@924>   CLR.w returncode_org
0001E18E <AmiBlitz3.ab3@926>   !basic
0001E198 <AmiBlitz3.ab3@927>   If CLIMode
0001E20A <AmiBlitz3.ab3@928>     If cli_verbose>=3 Then NPrint !TRANS{"Loading BlitzLibs..."}
0001E228 <AmiBlitz3.ab3@930>   !asm
0001E22E <AmiBlitz3.ab3@934>   TST.b start_without_libs
0001E232 <AmiBlitz3.ab3@935>   BNE skip_loading_libs
0001E236 <AmiBlitz3.ab3@936>     BSR.w call_setpointerbusy
0001E240 <AmiBlitz3.ab3@937>     MOVE.l #$FFFFffff,linenumat
0001E244 <AmiBlitz3.ab3@938>     BSR.w get_libraries
0001E24A <AmiBlitz3.ab3@939>     JSR init_libraries
0001E24E <AmiBlitz3.ab3@940>     BSR.w init_buffers
0001E252 <AmiBlitz3.ab3@941>     BSR.w call_setpointernormal
0001E254 <AmiBlitz3.ab3@946>   MOVEQ.l #-$01,D0
0001E25A <AmiBlitz3.ab3@947>   MOVEA.l _execbase,A6
0001E25E <AmiBlitz3.ab3@948>   JSR _AllocSignal(A6)
0001E264 <AmiBlitz3.ab3@949>   MOVE.l D0,signalNum
0001E266 <AmiBlitz3.ab3@950>   MOVEQ.l #$00,D1
0001E268 <AmiBlitz3.ab3@951>   BSET D0,D1
0001E26E <AmiBlitz3.ab3@952>   MOVE.l D1,signals
0001E274 <AmiBlitz3.ab3@956>   MOVE.l #str_defaultdbug,D1
0001E278 <AmiBlitz3.ab3@957>   MOVEA.l _dosbase(PC),A6
0001E27C <AmiBlitz3.ab3@958>   JSR _LoadSeg(A6)
0001E282 <AmiBlitz3.ab3@959>   MOVE.l D0,ptr_seg_debugger
0001E284 <AmiBlitz3.ab3@960>   TST.l d0
0001E288 <AmiBlitz3.ab3@961>   BNE ok_12
0001E2B2 <AmiBlitz3.ab3@962>     !basic
0001E314 <AmiBlitz3.ab3@963>     error{!TRANS{"The Debugexecutor `Defaultdbug` was not found.\\nDebugging is not possible."}}
0001E332 <AmiBlitz3.ab3@964>     !asm
0001E338 <AmiBlitz3.ab3@967>   TST.l CLIMode
0001E33C <AmiBlitz3.ab3@968>   BEQ run_ped
0001E366 <AmiBlitz3.ab3@974>   !basic
0001E36C <AmiBlitz3.ab3@975>   err.l = False
0001E398 <AmiBlitz3.ab3@983>   If cli_sourcefile
0001E3B8 <AmiBlitz3.ab3@984>     lock.l = Lock_(&cli_sourcefile,#ACCESS_READ)
0001E3C2 <AmiBlitz3.ab3@985>     If lock
0001E3E6 <AmiBlitz3.ab3@986>       NameFromLock_ lock,&cli_tempstr,1024
0001E410 <AmiBlitz3.ab3@987>       cli_sourcefile.s = Peek.s(&cli_tempstr)
0001E420 <AmiBlitz3.ab3@988>       UnLock_ lock
0001E44C <AmiBlitz3.ab3@991>     If cli_exefile
0001E49E <AmiBlitz3.ab3@992>       SetCurrentDir{dos_PathPart{cli_sourcefile}}
0001E4F6 <AmiBlitz3.ab3@993>       path.s = dos_PathPart{cli_exefile}
0001E516 <AmiBlitz3.ab3@994>       lock.l = Lock_(&path,#ACCESS_READ)
0001E520 <AmiBlitz3.ab3@995>       If lock
0001E544 <AmiBlitz3.ab3@996>         NameFromLock_ lock,&cli_tempstr,1024
0001E56E <AmiBlitz3.ab3@997>         path.s = Peek.s(&cli_tempstr)
0001E61C <AmiBlitz3.ab3@998>         cli_exefile = dos_AddPart{path,dos_FilePart{cli_exefile}}
0001E62C <AmiBlitz3.ab3@999>         UnLock_ lock
0001E676 <AmiBlitz3.ab3@1010>   If cli_verbose>=3 Then NPrint "Initializing token hashmap..."
0001E6EA <AmiBlitz3.ab3@1011> 
0001E6F4 <AmiBlitz3.ab3@1012>   *PreProcessor.preprocessor = preproc_Create{}
0001E704 <AmiBlitz3.ab3@1013>   Poke.l ?comPtr_PreProcessor,*PreProcessor
0001E736 <AmiBlitz3.ab3@1014>   preproc_LoadTokens{*PreProcessor,TokenHashMapFile}
0001E74A <AmiBlitz3.ab3@1015>   If *PreProcessor\tokens=#NULL
0001E7C4 <AmiBlitz3.ab3@1016>     If cli_verbose>=1 Then NPrint "No hashmap found (\\22"+TokenHashMapFile+"\\22), will be created..."
0001E7CE <AmiBlitz3.ab3@1017>     preproc_QueryTokens{*PreProcessor}
0001E800 <AmiBlitz3.ab3@1018>     preproc_SaveTokens{*PreProcessor,TokenHashMapFile}
0001E84C <AmiBlitz3.ab3@1026>   If cli_sourcefile><"" AND err=False
0001E8F2 <AmiBlitz3.ab3@1027>     If cli_verbose>=3 Then NPrint "Loading sourcecode \\22",cli_sourcefile,"\\22..."
0001E924 <AmiBlitz3.ab3@1028>     succ=LoadSource{cli_sourcefile}
0001E92E <AmiBlitz3.ab3@1029>     If succ
0001E966 <AmiBlitz3.ab3@1030> 
0001E9E0 <AmiBlitz3.ab3@1031>         If cli_verbose>=1 Then NPrint "Compiling \\22"+cli_sourcefile+"\\22..."
0001EA22 <AmiBlitz3.ab3@1032> 
0001EA2C <AmiBlitz3.ab3@1034>         If comerr
0001EA32 <AmiBlitz3.ab3@1036>         Else
0001EA38 <AmiBlitz3.ab3@1040>     Else
0001EA88 <AmiBlitz3.ab3@1041>       If cli_verbose>=0 NPrint "\\1b[1m*** ERROR: Unable to read source file!\\1b[0m" : err=True
0001EAD4 <AmiBlitz3.ab3@1045>   If cli_savefile><"" AND err=False
0001EB4E <AmiBlitz3.ab3@1046>     If cli_verbose>=2 Then NPrint "Saving sourcefiles as "+cli_savefile+"..."
0001EB7C <AmiBlitz3.ab3@1047>     SaveSource{cli_savefile}
0001EBC8 <AmiBlitz3.ab3@1050>   If cli_dumpfile><"" AND err=False
0001EC12 <AmiBlitz3.ab3@1051>     If cli_verbose>=2 Then NPrint "Saving dumpfile..."
0001EC48 <AmiBlitz3.ab3@1052>     DumpFile{cli_dumpfile,cli_dumpflags,cli_dumpform}
0001EC52 <AmiBlitz3.ab3@1055>   If cli_run
0001EC66 <AmiBlitz3.ab3@1056>     If comerr=False
0001EC92 <AmiBlitz3.ab3@1057>       If cli_exefile
0001ED0C <AmiBlitz3.ab3@1058>         If cli_verbose>=1 Then NPrint "Recompiling "+cli_sourcefile+" for debug..."
0001ED42 <AmiBlitz3.ab3@1059> 
0001ED8C <AmiBlitz3.ab3@1061>       If cli_verbose>=1 Then NPrint "Running program..."
0001ED9A <AmiBlitz3.ab3@1062> 
0001ED9C <AmiBlitz3.ab3@1064>         CLR.l d0
0001EDDA <AmiBlitz3.ab3@1065>         !ComData_GetB{comByte_RunningFlag,D0}
0001EDDE <AmiBlitz3.ab3@1066>         running.l = PutD0
0001EDFA <AmiBlitz3.ab3@1067>         If running Then Delay_ 50
0001EE0E <AmiBlitz3.ab3@1069>       Until running=False
0001EE22 <AmiBlitz3.ab3@1070>       If Peek.l(?_runerror)
0001EE72 <AmiBlitz3.ab3@1071>         If cli_verbose>=0 Then NPrint "\\1b[1m*** ERROR: Unable to run compiled program!\\1b[0m" : err=True
0001EE84 <AmiBlitz3.ab3@1082>   preproc_Free{*PreProcessor} : *PreProcessor=#NULL
0001EECE <AmiBlitz3.ab3@1083>   If cli_verbose>=3 Then NPrint "Exit AmiBlitz3."
0001EED4 <AmiBlitz3.ab3@1084>   DeinitEmulatedPED{}
0001EEF2 <AmiBlitz3.ab3@1086>   !asm
0001EEF8 <AmiBlitz3.ab3@1087> JMP terminate_ab3
0001EEFE <AmiBlitz3.ab3@1092>   MOVEA.l ped_startup_addr,A1
0001EF04 <AmiBlitz3.ab3@1093>   LEA str_tempfilename,A0
0001EF06 <AmiBlitz3.ab3@1094>   JSR (A1)
0001EF0C <AmiBlitz3.ab3@1101>   MOVE.l signalNum,D0
0001EF12 <AmiBlitz3.ab3@1102>   MOVEA.l _execbase,A6
0001EF16 <AmiBlitz3.ab3@1103>   JSR _FreeSignal(A6)
0001EF1C <AmiBlitz3.ab3@1105>   MOVE.l ptr_seg_debugger,D1
0001EF20 <AmiBlitz3.ab3@1106>   BEQ.b skip_unload_debugger
0001EF24 <AmiBlitz3.ab3@1107>     MOVEA.l _dosbase(PC),A6
0001EF28 <AmiBlitz3.ab3@1108>     JSR _UnLoadSeg(A6)
0001EF2C <AmiBlitz3.ab3@1111>   BSR.w Aclearallvars
0001EF30 <AmiBlitz3.ab3@1112>   BSR.w free_residents
0001EF36 <AmiBlitz3.ab3@1113>   JSR free_blitzlibs
0001EF3C <AmiBlitz3.ab3@1116>   MOVE.l ptr_seg_ped,D1
0001EF40 <AmiBlitz3.ab3@1117>   BEQ freemem_and_quit
0001EF44 <AmiBlitz3.ab3@1118>   MOVEA.l _dosbase(PC),A6
0001EF48 <AmiBlitz3.ab3@1119>   JSR _UnLoadSeg(A6)
0001EF4C <AmiBlitz3.ab3@1120>   BRA freemem_and_quit     ; added by tomsmart1 for Ped errormessage
0001EF76 <AmiBlitz3.ab3@1123>   !basic
0001F03A <AmiBlitz3.ab3@1124> 
0001F058 <AmiBlitz3.ab3@1125>   !asm
0001F05C <AmiBlitz3.ab3@1126>   BRA freemem_and_quit
0001F086 <AmiBlitz3.ab3@1129>   !basic
0001F14A <AmiBlitz3.ab3@1130>   error{!TRANS{"Can't load the Editor:\n"} + pedfile$ + !TRANS{"\n must quit, sorry!"} }  ; show error message  tomsmart1
0001F168 <AmiBlitz3.ab3@1131>   !asm
0001F16C <AmiBlitz3.ab3@1135>   BSR.w freeallox
0001F172 <AmiBlitz3.ab3@1136>   MOVEA.l ptr_macrobuffer_begin,A1
0001F174 <AmiBlitz3.ab3@1137>   MOVE.l -(a1),D0
0001F176 <AmiBlitz3.ab3@1138>   ADDQ.l #4,d0
0001F17C <AmiBlitz3.ab3@1139>   MOVEA.l _execbase,A6
0001F180 <AmiBlitz3.ab3@1140>   JSR _FreeMem(A6)
0001F186 <AmiBlitz3.ab3@1143>   MOVEA.l _dosbase,A1
0001F18C <AmiBlitz3.ab3@1144>   MOVEA.l _execbase,A6
0001F190 <AmiBlitz3.ab3@1145>   JSR _CloseLibrary(A6)
0001F196 <AmiBlitz3.ab3@1147>   MOVEA.l constpcat,A1
0001F19C <AmiBlitz3.ab3@1148>   MOVE.l constmaxpc,D0
0001F1A2 <AmiBlitz3.ab3@1149>   MOVEA.l _execbase,A6
0001F1A6 <AmiBlitz3.ab3@1150>   JSR _FreeMem(A6)
0001F1AC <AmiBlitz3.ab3@1153>   MOVEA.l _mathffpbase,A1
0001F1B2 <AmiBlitz3.ab3@1154>   MOVEA.l _execbase,A6
0001F1B6 <AmiBlitz3.ab3@1155>   JSR _CloseLibrary(A6)
0001F1BC <AmiBlitz3.ab3@1165>     MOVEA.l _execbase,A6
0001F1C2 <AmiBlitz3.ab3@1166>     MOVE.l mempool,a0
0001F1C6 <AmiBlitz3.ab3@1167>     JSR _DeletePool(a6)
0001F1CC <AmiBlitz3.ab3@1168>     CLR.l pushat
0001F1D2 <AmiBlitz3.ab3@1175>   JSR free_unusedfunctions
0001F1D4 <AmiBlitz3.ab3@1176>   MOVEQ #0,d0
0001F1E2 <AmiBlitz3.ab3@1179>   !exitasm
0001F21A <AmiBlitz3.ab3@1180>   If dynassign<>""
0001F224 <AmiBlitz3.ab3@1181>     If *AssignSema
0001F234 <AmiBlitz3.ab3@1182>       ReleaseSemaphore_ *AssignSema
0001F24C <AmiBlitz3.ab3@1183>       If (AttemptSemaphore_ (*AssignSema))                 ; we are the exclusive owner of the sema now!
0001F2E0 <AmiBlitz3.ab3@1184>         dos_RemAssign{"LIBS:",dos_AddPart{dynassign,"Libs"}}
0001F31A <AmiBlitz3.ab3@1185>         dos_RemAssign{dynassign}
0001F32A <AmiBlitz3.ab3@1186>         RemSemaphore_ *AssignSema
0001F33A <AmiBlitz3.ab3@1187>         ReleaseSemaphore_ *AssignSema
0001F370 <AmiBlitz3.ab3@1188>         If *AssignSema\ss_Link\ln_Name Then FreeVec_ *AssignSema\ss_Link\ln_Name : *AssignSema\ss_Link\ln_Name = #NULL
0001F380 <AmiBlitz3.ab3@1189>         FreeVec_ *AssignSema
0001F388 <AmiBlitz3.ab3@1190>         *AssignSema = #NULL
0001F3B6 <AmiBlitz3.ab3@1194>   SetCurrentDir{cli_path}
0001F3D8 <AmiBlitz3.ab3@1195>   !coutclose
0001F3DE <AmiBlitz3.ab3@1196> End
0001F3EA <AmiBlitz3.ab3@1201> str_doslibrary:     Dc.b "dos.library",0 : Even
0001F3EE <AmiBlitz3.ab3@1202> _dosbase:           Ds.l 1
0001F3F4 <AmiBlitz3.ab3@1206>   MOVEA.l _execbase,A6
0001F3FA <AmiBlitz3.ab3@1207>   LEA str_doslibrary,A1
0001F3FE <AmiBlitz3.ab3@1208>   JSR _OldOpenLibrary(A6)
0001F404 <AmiBlitz3.ab3@1209>   MOVE.l D0,_dosbase
0001F406 <AmiBlitz3.ab3@1210> RTS
0001F40C <AmiBlitz3.ab3@1214>   MOVEA.l #str_mathffpname,A1
0001F412 <AmiBlitz3.ab3@1215>   MOVEA.l _execbase,A6
0001F416 <AmiBlitz3.ab3@1216>   JSR _OldOpenLibrary(A6)
0001F41C <AmiBlitz3.ab3@1217>   MOVE.l D0,_mathffpbase
0001F41E <AmiBlitz3.ab3@1218> RTS
0001F450 <AmiBlitz3.ab3@1226> !ComData_JMP{comFunc_SetNormalPointer}
0001F482 <AmiBlitz3.ab3@1234> !ComData_JMP{comFunc_SetBusyPointer}
0001F4AC <AmiBlitz3.ab3@1238>   !basic
0001F4B0 <AmiBlitz3.ab3@1239>   ab3save_filenameP.l = PutD0
0001F4BA <AmiBlitz3.ab3@1240>   If ab3save_filenameP
0001F4E2 <AmiBlitz3.ab3@1241>     ab3save_filename.s = Peek.s(ab3save_filenameP)
0001F510 <AmiBlitz3.ab3@1243>     SaveSource{ab3save_filename}
0001F516 <AmiBlitz3.ab3@1244>   Else
0001F550 <AmiBlitz3.ab3@1245>     error{"INTERNAL ERROR: no filename passed in D0 to SaveSource{}!"}
0001F56E <AmiBlitz3.ab3@1247>   !asm
0001F570 <AmiBlitz3.ab3@1248>   RTS
0001F59A <AmiBlitz3.ab3@1251>   !basic
0001F59E <AmiBlitz3.ab3@1252>   ab3save_filenameP.l = PutD0
0001F5A8 <AmiBlitz3.ab3@1253>   If ab3save_filenameP
0001F5D0 <AmiBlitz3.ab3@1254>     ab3save_filename.s = Peek.s(ab3save_filenameP)
0001F5FE <AmiBlitz3.ab3@1255>     LoadSource{ab3save_filename}
0001F604 <AmiBlitz3.ab3@1256>   Else
0001F63E <AmiBlitz3.ab3@1257>     error{"INTERNAL ERROR: no filename passed in D0 to LoadSource{}!"}
0001F65C <AmiBlitz3.ab3@1259>   !asm
0001F65E <AmiBlitz3.ab3@1260>   RTS
0001F688 <AmiBlitz3.ab3@1263>   !basic
0001F68E <AmiBlitz3.ab3@1264>   ClearSource{}
0001F6AC <AmiBlitz3.ab3@1265>   !asm
0001F6AE <AmiBlitz3.ab3@1266>   RTS
0001F6D8 <AmiBlitz3.ab3@1269>   !basic
0001F6DE <AmiBlitz3.ab3@1270>   OpenConsoleFake{}
0001F6FC <AmiBlitz3.ab3@1271>   !asm
0001F6FE <AmiBlitz3.ab3@1272>   RTS
0001F728 <AmiBlitz3.ab3@1276>   !basic
0001F72E <AmiBlitz3.ab3@1277>   CloseConsoleFake{}
0001F74C <AmiBlitz3.ab3@1278>   !asm
0001F74E <AmiBlitz3.ab3@1279>   RTS
0001F754 <AmiBlitz3.ab3@1283>   MOVE.w d6,menuitemdebug
0001F77E <AmiBlitz3.ab3@1284>   !basic
0001F790 <AmiBlitz3.ab3@1285>   menuitemx.l = Peek.w(?menuitemdebug)
0001F7B6 <AmiBlitz3.ab3@1286>   If menuitemx>16 OR  menuitemx<0
0001F82A <AmiBlitz3.ab3@1287>     error{"Called invalid AB3 Menuitem #"+Str$(menuitemx)+"!"}
0001F832 <AmiBlitz3.ab3@1288>     menuitemx=0
0001F842 <AmiBlitz3.ab3@1290>   Poke.w ?menuitemdebug,menuitemx
0001F860 <AmiBlitz3.ab3@1291>   !asm
0001F866 <AmiBlitz3.ab3@1292>   MOVE.w menuitemdebug,d6
0001F86C <AmiBlitz3.ab3@1295>   MOVE.l A5,firstitem_
0001F872 <AmiBlitz3.ab3@1296>   MOVE.w D7,numlines_org
0001F878 <AmiBlitz3.ab3@1297>   MOVE.l d7,numlines
0001F87A <AmiBlitz3.ab3@1298>   LSL.w #2,D6
0001F880 <AmiBlitz3.ab3@1299>   LEA menu_items,A0
0001F884 <AmiBlitz3.ab3@1300>   MOVEA.l $0(A0,D6.W),A0
0001F88E <AmiBlitz3.ab3@1301>   MOVE.l #$FFFFffff,linenumat
0001F898 <AmiBlitz3.ab3@1302>   MOVE.l #$FFFFffff,compilelinecounter
0001F89A <AmiBlitz3.ab3@1305>   JSR (A0)                              ; jsr to the function for the menuitem
0001F8A0 <AmiBlitz3.ab3@1306>   MOVE.l compilelinecounter,D0
0001F8A2 <AmiBlitz3.ab3@1307> RTS
0001F8A6 <AmiBlitz3.ab3@1309> menuitemdebug: Dc.l 0
0001F8AA <AmiBlitz3.ab3@1311> mempool                Dc.l 0
0001F8C0 <AmiBlitz3.ab3@1312> str_loaddebugmessage:  Dc.b "Debug module to load",0 : Even
0001F8C6 <AmiBlitz3.ab3@1313> dloaderr:             JSR handle_compileerror
0001F8E2 <AmiBlitz3.ab3@1314>                        Dc.b "Can't LoadSeg debug module!",0 : Even
0001F920 <AmiBlitz3.ab3@1322>   !ComData_GetL{comFunc_ASLFileRequest,A3}
0001F926 <AmiBlitz3.ab3@1323>   LEA str_loaddebugmessage,A2
0001F92C <AmiBlitz3.ab3@1324>   LEA str_blitz3assign,A0
0001F932 <AmiBlitz3.ab3@1325>   LEA str_temp_debugmodulename,A1
0001F934 <AmiBlitz3.ab3@1327>   JSR (A3)                                                  ;open ped filerequest
0001F938 <AmiBlitz3.ab3@1329>   BEQ.w menu_loaddebugmodule_noload
0001F93E <AmiBlitz3.ab3@1330>   MOVE.l D0,ptr_temp_debugmodule
0001F942 <AmiBlitz3.ab3@1331>   BSR.w call_setpointerbusy
0001F948 <AmiBlitz3.ab3@1332> 
0001F94E <AmiBlitz3.ab3@1333>   MOVE.l A7,errstack
0001F958 <AmiBlitz3.ab3@1334>   MOVE.l #menu_loaddebugmodule_noload,errcont
0001F95E <AmiBlitz3.ab3@1335>   MOVE.l ptr_temp_debugmodule,D1
0001F962 <AmiBlitz3.ab3@1337>   MOVEA.l _dosbase(PC),A6
0001F966 <AmiBlitz3.ab3@1338>   JSR _LoadSeg(A6)
0001F968 <AmiBlitz3.ab3@1339>   MOVE.l D0,D7
0001F96C <AmiBlitz3.ab3@1340>   BEQ.w dloaderr
0001F972 <AmiBlitz3.ab3@1341>   MOVE.l ptr_seg_debugger,D1
0001F976 <AmiBlitz3.ab3@1342>   BEQ.b menu_loaddebugmodule_ndseg
0001F97A <AmiBlitz3.ab3@1343>   MOVEA.l _dosbase(PC),A6
0001F97E <AmiBlitz3.ab3@1344>   JSR _UnLoadSeg(A6)
0001F982 <AmiBlitz3.ab3@1345>   BSR.w call_setpointernormal
0001F988 <AmiBlitz3.ab3@1348>   MOVE.l D7,ptr_seg_debugger
0001F98A <AmiBlitz3.ab3@1351> RTS
0001F9A8 <AmiBlitz3.ab3@1354> str_request_exename:   Dc.b "Name of Executable to Create:",0 : Even                        ;xtext org source
0001FA68 <AmiBlitz3.ab3@1355> exepath:               Ds.l 48                             ;Ds.b #MAX_STRINGSIZE ; Ds.l 48  ;xpath  dcb.b 192,0 org source
0001FB28 <AmiBlitz3.ab3@1356> exefilename:           Ds.l 48                             ;Ds.b #MAX_STRINGSIZE ; Ds.l 48  ;xname  dcb.b 192,0 org source
0001FB2C <AmiBlitz3.ab3@1357> ptr_newexefilename:    Dc.l 0                                                               ;execname org
0001FB56 <AmiBlitz3.ab3@1361>   !basic
0001FB80 <AmiBlitz3.ab3@1362>   exepath.s = Peek.s(?exepath)
0001FBAA <AmiBlitz3.ab3@1363>   exefile.s = Peek.s(?exefilename)
0001FC2A <AmiBlitz3.ab3@1364>   exefile.s = dos_AddPart{exepath,exefile}
0001FC62 <AmiBlitz3.ab3@1365>   Poke.s ?tempspace,exefile
0001FC80 <AmiBlitz3.ab3@1366>   !asm
0001FC86 <AmiBlitz3.ab3@1387>   LEA tempspace,a0
0001FC88 <AmiBlitz3.ab3@1388>   MOVE.l a0,d0
0001FC8C <AmiBlitz3.ab3@1389> BRA newcreate2
0001FCB6 <AmiBlitz3.ab3@1395>   !basic
0001FCE0 <AmiBlitz3.ab3@1396>   request_exename.s = Peek.s(?str_request_exename )
0001FD3C <AmiBlitz3.ab3@1397>   request_exename   = !TRANS{request_exename}
0001FD42 <AmiBlitz3.ab3@1398>   GetD0 &request_exename
0001FD60 <AmiBlitz3.ab3@1399>   !asm
0001FD62 <AmiBlitz3.ab3@1400>   MOVE.l D0,A2
0001FDA0 <AmiBlitz3.ab3@1403>   !ComData_GetL{comFunc_ASLFileRequest,A3}
0001FDA6 <AmiBlitz3.ab3@1405>   LEA exepath,A0
0001FDAC <AmiBlitz3.ab3@1406>   LEA exefilename,A1
0001FDAE <AmiBlitz3.ab3@1408>   JSR (A3)                                                 ;open ped filerequest
0001FDB2 <AmiBlitz3.ab3@1410>   BEQ.w cancel_createexe
0001FDBC <AmiBlitz3.ab3@1413>   ADD.l #1,number_of_builds
0001FDC2 <AmiBlitz3.ab3@1416>   MOVE.l D0,ptr_newexefilename
0001FDCA <AmiBlitz3.ab3@1417>   MOVE.w #-1,debugversion
0001FDD0 <AmiBlitz3.ab3@1418>   MOVE.w set_make_smallestcode,-(A7)
0001FDD8 <AmiBlitz3.ab3@1422>     MOVE.w #1,makeexec
0001FDDE <AmiBlitz3.ab3@1423>     JSR ab3_OpenDebugFile
0001FDE2 <AmiBlitz3.ab3@1424>     BSR.w startcompile
0001FDE8 <AmiBlitz3.ab3@1425>     JSR ab3_CloseDebugFile
0001FDF2 <AmiBlitz3.ab3@1426>     CMP.l #"NORE",reqmode
0001FDF6 <AmiBlitz3.ab3@1427>   BEQ 'l1
0001FDFC <AmiBlitz3.ab3@1429>   TST.w anyerrs
0001FE00 <AmiBlitz3.ab3@1430>   BNE.b menu_createexecutable__skip
0001FE04 <AmiBlitz3.ab3@1431>   BSR.w savefile
0001FE0A <AmiBlitz3.ab3@1434>   MOVE.w (A7)+,set_make_smallestcode
0001FE0C <AmiBlitz3.ab3@1437> RTS
0001FE14 <AmiBlitz3.ab3@1441>   MOVE.w #-1,flag_noPED
0001FE16 <AmiBlitz3.ab3@1442> RTS
0001FE1E <AmiBlitz3.ab3@1446>   MOVE.w #-1,flag_noCLI
0001FE20 <AmiBlitz3.ab3@1447> RTS
0001FE4A <AmiBlitz3.ab3@1450>   !basic
0001FE72 <AmiBlitz3.ab3@1451>     If dbg_fid>=0 Then file_Close{dbg_fid} : dbg_fid = -1
0001FE82 <AmiBlitz3.ab3@1452>     Poke.w ?word_WriteDebugFileNow,0
0001FEA0 <AmiBlitz3.ab3@1453>   !asm
0001FEA2 <AmiBlitz3.ab3@1454> RTS
0001FECC <AmiBlitz3.ab3@1457>   !basic
0001FEDC <AmiBlitz3.ab3@1458>   Poke.w ?word_WriteDebugFileNow,0
0001FEEE <AmiBlitz3.ab3@1459>   If dbg_fid>=0
0001FF04 <AmiBlitz3.ab3@1460>     file_Close{dbg_fid} : dbg_fid = -1
0001FF16 <AmiBlitz3.ab3@1462>   If dbg_fid.l<0
0001FF18 <AmiBlitz3.ab3@1463>     CLR.l d0
0001FF56 <AmiBlitz3.ab3@1464>     !ComData_GetW{comWord_CreateDebugFile,D0}
0001FF5A <AmiBlitz3.ab3@1465>     dbg_Create.l = PutD0
0001FF64 <AmiBlitz3.ab3@1466>     If (dbg_Create) ; only when set!
0001FF74 <AmiBlitz3.ab3@1467>       exefileP.l = Peek.l (?ptr_newexefilename)
0001FF9C <AmiBlitz3.ab3@1468>       exefile.s = ""
0001FFCE <AmiBlitz3.ab3@1469>       If exefileP Then exefile.s = Peek.s(exefileP)
00020006 <AmiBlitz3.ab3@1470>       If exefile><""
0002005C <AmiBlitz3.ab3@1471>         dbg_fid = file_Open{exefile+".dbg",#file_forcewrite}
0002006E <AmiBlitz3.ab3@1472>         If dbg_fid>=0
00020080 <AmiBlitz3.ab3@1473>           Poke.w ?word_WriteDebugFileNow,-1
0002008C <AmiBlitz3.ab3@1476>       oldhunkoffset.l = -1
000200B4 <AmiBlitz3.ab3@1477>       oldfile.s       = ""
000200D2 <AmiBlitz3.ab3@1480>   !asm
000200D4 <AmiBlitz3.ab3@1481> RTS
000200DA <AmiBlitz3.ab3@1484> TST.w word_WriteDebugFileNow
000200DE <AmiBlitz3.ab3@1485> BEQ 'skipdebugfile
00020108 <AmiBlitz3.ab3@1486> !basic
0002011A <AmiBlitz3.ab3@1487>   If dbg_fid>=0
0002012C <AmiBlitz3.ab3@1488>     pass.l          = Peek.w(?pass)
0002013E <AmiBlitz3.ab3@1489>     makesmallest.b  = Peek.b(?make_smallestcode)               ; get the status of make_smallestcode  tomsmart1
00020162 <AmiBlitz3.ab3@1490> 
00020168 <AmiBlitz3.ab3@1491>       oldhunkoffset.l = hunkoffset.l
0002019C <AmiBlitz3.ab3@1492>       oldfile.s       = codefile.s
000201B8 <AmiBlitz3.ab3@1493>       If Peek.w (?ininclude)>0
000201C8 <AmiBlitz3.ab3@1494>         codeline.l = Peek.l(?includeline);-1
00020238 <AmiBlitz3.ab3@1495>         codefile.s = dos_FilePart{incdim(Peek.w(?ininclude)-1)}
0002023E <AmiBlitz3.ab3@1496>       Else
0002026C <AmiBlitz3.ab3@1497>         !ComData_LEA{comStr_SourceName,A0}
0002026E <AmiBlitz3.ab3@1498>         MOVE.l A0,D0
00020272 <AmiBlitz3.ab3@1499>         sourceP.l = PutD0
0002029A <AmiBlitz3.ab3@1500>         codefile.s = Peek.s(sourceP)
000202AA <AmiBlitz3.ab3@1501>         codeline.l = Peek.l(?linenumat)
000202D2 <AmiBlitz3.ab3@1503>       hunkoffset.l = Peek.l(?destpointer)-Peek.l(?destbufferstart)
00020326 <AmiBlitz3.ab3@1504>       If oldhunkoffset><hunkoffset OR oldfile><codefile
00020336 <AmiBlitz3.ab3@1511>         *sourceLine.SourceLine_t = Peek.l(?sourceline)
00020340 <AmiBlitz3.ab3@1512>         If *sourceLine
00020356 <AmiBlitz3.ab3@1513>           MaxLen detokenline.s = 65536
00020398 <AmiBlitz3.ab3@1514>          !ComData_GetL{comPtr_PreProcessor,include_preprocessor}
000203A8 <AmiBlitz3.ab3@1515>          *tn.preprocessor = Peek.l(?include_preprocessor)
000203D4 <AmiBlitz3.ab3@1516>           written.l = preproc_Detokenize{*tn,&*sourceLine\Text,&detokenline,*sourceLine\CharLength}
00020402 <AmiBlitz3.ab3@1517>           If written>0 Then Poke.b &detokenline+written-1,0
0002042C <AmiBlitz3.ab3@1518>           sourceLineText.s = Peek.s(&detokenline)
00020432 <AmiBlitz3.ab3@1519>         Else
0002045A <AmiBlitz3.ab3@1520>           sourceLineText = "NULL"
00020522 <AmiBlitz3.ab3@1523>         file_WriteLine{dbg_fid,Hex$(hunkoffset)+" <"+codefile+"@"+Str$(codeline)+"> "+sourceLineText}
00020540 <AmiBlitz3.ab3@1529> !asm
00020542 <AmiBlitz3.ab3@1531> RTS
00020544 <AmiBlitz3.ab3@1533> word_WriteDebugFileNow: Dc.w 0
00020546 <AmiBlitz3.ab3@1535> flag_noPED:  Ds.w 1                                        ;closeed org source
00020548 <AmiBlitz3.ab3@1536> flag_noCLI:  Ds.w 1                                        ;nocli org source
0002054C <AmiBlitz3.ab3@1540>   MOVEM.l A2-A3,-(A7)
00020552 <AmiBlitz3.ab3@1541>   CLR.b doublepeek
00020558 <AmiBlitz3.ab3@1542>   MOVE.l A5,lastsourcepos
0002055E <AmiBlitz3.ab3@1543>    JSR getchar
00020562 <AmiBlitz3.ab3@1544>   CMP.w #$2E,D0
00020566 <AmiBlitz3.ab3@1545>    BEQ.w JL_0_49B4b
0002056C <AmiBlitz3.ab3@1546>   MOVEA.l defaulttype,A2
00020570 <AmiBlitz3.ab3@1547>   CMP.w #$24,D0
00020574 <AmiBlitz3.ab3@1548>    BNE.w JL_0_49CAb
00020576 <AmiBlitz3.ab3@1549>   MOVEQ.l #$07,D1
0002057A <AmiBlitz3.ab3@1550> BRA.w JL_0_49DEb
00020580 <AmiBlitz3.ab3@1553>   JSR getparameter2
00020584 <AmiBlitz3.ab3@1554>   BEQ.w syntaxerrb
0002058A <AmiBlitz3.ab3@1555>   LEA newtypebase,A2
00020590 <AmiBlitz3.ab3@1556>   JSR findtype
00020594 <AmiBlitz3.ab3@1557>   BNE.w notypeerrb
0002059E <AmiBlitz3.ab3@1562>   MOVE.w oldqflag,instringon
000205A4 <AmiBlitz3.ab3@1563>   MOVEA.l lastsourcepos,A5
000205AA <AmiBlitz3.ab3@1565>   MOVE.l a2,functionreturntype
000205B2 <AmiBlitz3.ab3@1566>   CMPI.l #$100,$4(A2)
000205B6 <AmiBlitz3.ab3@1567>   BLE.w 'isvar
000205B8 <AmiBlitz3.ab3@1571>   MOVEQ #3,d1
000205BC <AmiBlitz3.ab3@1572>   BRA JL_0_49DEb
000205C0 <AmiBlitz3.ab3@1579>   MOVE.w $6(A2),D1
000205C6 <AmiBlitz3.ab3@1580>   CMP.w #8,8(a2)
000205CA <AmiBlitz3.ab3@1581>   BNE 'l1
000205D2 <AmiBlitz3.ab3@1582>   MOVE.b #1,doublepeek
000205D8 <AmiBlitz3.ab3@1586>   MOVE.w D1,convsize
000205DC <AmiBlitz3.ab3@1587>   MOVEM.l (A7)+,A2-A3
000205DE <AmiBlitz3.ab3@1588> RTS
000205E4 <AmiBlitz3.ab3@1590> notypeerrb  JMP notypeerr
000205EA <AmiBlitz3.ab3@1591> illtypeerrb JMP illtypeerr
000205F0 <AmiBlitz3.ab3@1592> syntaxerrb  JMP syntaxerr
000205F4 <AmiBlitz3.ab3@1597>   MOVEM.l D0-D1/A0-A1/A6,-(A7)
000205FA <AmiBlitz3.ab3@1598>   MOVEA.l _execbase,A6
000205FC <AmiBlitz3.ab3@1601>   MOVEQ.l #8,d1
00020602 <AmiBlitz3.ab3@1602>   MOVE.l #200,d0
00020606 <AmiBlitz3.ab3@1603>   JSR _CacheClearE(A6)
0002060A <AmiBlitz3.ab3@1647>   MOVEM.l (A7)+,D0-D1/A0-A1/A6
0002060C <AmiBlitz3.ab3@1648> RTS
00020616 <AmiBlitz3.ab3@1653>   ADD.l #1,number_of_builds
0002061C <AmiBlitz3.ab3@1655>   CLR.w debugversion
00020622 <AmiBlitz3.ab3@1656>   CLR.w flag_noPED
00020628 <AmiBlitz3.ab3@1657>   CLR.w flag_noCLI
00020630 <AmiBlitz3.ab3@1660>     MOVE.w #0,makeexec                                     ;MOVE.w #$FFFF,debugversion
00020634 <AmiBlitz3.ab3@1661>     BSR.w startcompile
0002063E <AmiBlitz3.ab3@1662>     CMP.l #"NORE",reqmode
00020642 <AmiBlitz3.ab3@1663>   BEQ 'l1
00020648 <AmiBlitz3.ab3@1666>   TST.w anyerrs
0002064C <AmiBlitz3.ab3@1667>    BNE.w JL_0_3482
00020650 <AmiBlitz3.ab3@1669>   MOVE.w flag_noPED(PC),D1
00020654 <AmiBlitz3.ab3@1670>    BEQ.w skip_closingGUI
00020686 <AmiBlitz3.ab3@1675>   !ComData_JSR{comFunc_CloseGUI}
0002068A <AmiBlitz3.ab3@1676> BRA.b runprogram
0002068E <AmiBlitz3.ab3@1680>   BSR.w compilerequester
00020694 <AmiBlitz3.ab3@1683>   MOVEA.l _dosbase,A6
0002069A <AmiBlitz3.ab3@1684>   LEA exepath,a0
0002069C <AmiBlitz3.ab3@1685>   MOVE.l a0,d1
0002069E <AmiBlitz3.ab3@1686>   MOVEQ #-2,d2
000206A2 <AmiBlitz3.ab3@1687>   JSR _Lock(a6)                                            ;lock
000206A8 <AmiBlitz3.ab3@1688>   MOVE.l d0,exelock
000206AE <AmiBlitz3.ab3@1689>   MOVE.l #0,d1
000206B2 <AmiBlitz3.ab3@1690>   JSR _CurrentDir(A6)
000206B8 <AmiBlitz3.ab3@1691>   MOVE.l D0,lock_currentdir
000206BA <AmiBlitz3.ab3@1692>   MOVE.l D0,D1
000206BE <AmiBlitz3.ab3@1693>   JSR _CurrentDir(A6)
000206C4 <AmiBlitz3.ab3@1694>   CLR.l ptr_exetask
000206CA <AmiBlitz3.ab3@1703>   MOVE.l #str_process_name,D1
000206CC <AmiBlitz3.ab3@1704>   MOVEQ.l #$00,D2
000206D2 <AmiBlitz3.ab3@1705>   MOVE.l #proc_seglist,D3
000206D4 <AmiBlitz3.ab3@1706>   LSR.l #2,D3
000206DA <AmiBlitz3.ab3@1707>   MOVE.l stacksize,D4
000206E0 <AmiBlitz3.ab3@1708>   MOVEA.l _dosbase,A6
000206E4 <AmiBlitz3.ab3@1709>   JSR _CreateProc(A6)                                      ;runtask
000206E6 <AmiBlitz3.ab3@1710>   TST.l D0
000206EA <AmiBlitz3.ab3@1711>    BEQ ErrorRunningProg
00020720 <AmiBlitz3.ab3@1713>   !ComData_SetB{comByte_RunningFlag,#1}   ; this should be done here, straigt after it is clear that
00020726 <AmiBlitz3.ab3@1715>   TST.w flag_noPED
0002072A <AmiBlitz3.ab3@1716>    BNE.b JL_0_344E
0002072E <AmiBlitz3.ab3@1717>   BSR.w close_compilewin
00020734 <AmiBlitz3.ab3@1720>   CLR.l firstlocal
0002073A <AmiBlitz3.ab3@1721>   CLR.l firstglob
0002073E <AmiBlitz3.ab3@1722>   MOVE.w flag_noPED(PC),D1
00020742 <AmiBlitz3.ab3@1723>   BEQ.w skip_openGUI
00020774 <AmiBlitz3.ab3@1727>   !ComData_JSR{comFunc_CreateGUI}
00020776 <AmiBlitz3.ab3@1737> RTS
00020780 <AmiBlitz3.ab3@1740> MOVE.l #1,_runerror
00020784 <AmiBlitz3.ab3@1741> BRA JL_0_344E
00020788 <AmiBlitz3.ab3@1743> _runerror: Dc.l 0
0002078C <AmiBlitz3.ab3@1744> lock_currentdir:    Ds.l 1                                          ;tasklock org source
00020790 <AmiBlitz3.ab3@1745> ptr_exetask:        Ds.l 1                                          ;panictask org source
00020794 <AmiBlitz3.ab3@1746> signalNum:          Ds.l 1                                          ;panicbit org source
00020798 <AmiBlitz3.ab3@1747> signals:            Ds.l 1                                          ;panicmask org source
000207AE <AmiBlitz3.ab3@1749> str_process_name:   Dc.b "Blitz ][ Program Proc",0 : Even           ;procname org source
000207B3 <AmiBlitz3.ab3@1750>                     Ds.b 5                                          ;cnop 0,4 :dc.l 0   ;length org source
000207B4 <AmiBlitz3.ab3@1751> Even4
000207B8 <AmiBlitz3.ab3@1753> ptr_ThisTask:       Ds.l 1                                          ;length
000207BC <AmiBlitz3.ab3@1754> .proc_seglist:      Ds.l 1                                          ;procstart org source ;next
000207C2 <AmiBlitz3.ab3@1758>   MOVEA.l $4,A0
000207CA <AmiBlitz3.ab3@1759>   MOVE.l  $114(A0),ptr_exetask
000207D0 <AmiBlitz3.ab3@1761>   MOVEA.l _dosbase,A6
000207D6 <AmiBlitz3.ab3@1762>   MOVE.l exelock,D1
000207DA <AmiBlitz3.ab3@1763>   JSR _CurrentDir(A6)
00020810 <AmiBlitz3.ab3@1768>   !ComData_SetB{comByte_RunningFlag,#1}
00020814 <AmiBlitz3.ab3@1774>   MOVE.w flag_noCLI(PC),D1
00020818 <AmiBlitz3.ab3@1775>    BNE.b skip_openconsole
0002084A <AmiBlitz3.ab3@1779>   !ComData_JSR{comFunc_OpenConsole}
0002084E <AmiBlitz3.ab3@1782>   BSR.w calcvbr
00020854 <AmiBlitz3.ab3@1783>   MOVEA.l vbr,A0
0002085A <AmiBlitz3.ab3@1788>   CLR.w dirmode
00020860 <AmiBlitz3.ab3@1789>   CLR.l firstglob
00020866 <AmiBlitz3.ab3@1790>   CLR.l firstlocal
0002086C <AmiBlitz3.ab3@1792>   MOVE.l stacksize,D2
00020872 <AmiBlitz3.ab3@1793>   MOVE.l #$624C745A,D7                                      ;#'bLtZ',d7 org source ;force cli-type run
00020878 <AmiBlitz3.ab3@1794>   LEA str_cliarguments,A0                                   ;cli arguement
0002087E <AmiBlitz3.ab3@1795>   MOVEA.l destbufferstart,A1
00020882 <AmiBlitz3.ab3@1796>   BSR.w Aclearcache
00020884 <AmiBlitz3.ab3@1799>   JSR (A1)                                                 ; execute compiled code  ;Run the thing!
0002088A <AmiBlitz3.ab3@1801>   MOVEA.l vbr,A0
00020890 <AmiBlitz3.ab3@1803>   CLR.l firstglob
00020896 <AmiBlitz3.ab3@1804>   CLR.l firstlocal
0002089C <AmiBlitz3.ab3@1805>   MOVEA.l _dosbase,A6
000208A2 <AmiBlitz3.ab3@1806>   MOVE.l exelock,d1
000208A6 <AmiBlitz3.ab3@1807>   BEQ 'nolock
000208AA <AmiBlitz3.ab3@1808>   JSR _UnLock(a6)
000208E0 <AmiBlitz3.ab3@1813>   !ComData_SetB{comByte_RunningFlag,#0}
000208E4 <AmiBlitz3.ab3@1816>   MOVE.w flag_noCLI(PC),D1
000208E8 <AmiBlitz3.ab3@1817>    BNE.b skip_closeconsole
0002091A <AmiBlitz3.ab3@1821>   !ComData_JSR{comFunc_CloseConsole}
00020922 <AmiBlitz3.ab3@1824>   MOVE.w #$0001,stopit
00020926 <AmiBlitz3.ab3@1825>   MOVE.l signals(PC),D0
0002092C <AmiBlitz3.ab3@1826>   MOVEA.l ptr_ThisTask,A1
00020932 <AmiBlitz3.ab3@1827>   MOVEA.l _execbase,A6
00020936 <AmiBlitz3.ab3@1828>   JSR _Signal(A6)
00020938 <AmiBlitz3.ab3@1829> RTS
0002093E <AmiBlitz3.ab3@1833>   MOVEA.l _execbase,A6
00020942 <AmiBlitz3.ab3@1834>   MOVE.w $128(A6),D0
00020944 <AmiBlitz3.ab3@1835>   MOVEQ.l #$00,D1
00020948 <AmiBlitz3.ab3@1836>   ANDI.w #$F,D0
0002094C <AmiBlitz3.ab3@1839>     BEQ.b calcvbr__skip
0002094E <AmiBlitz3.ab3@1840>     ADDQ.w #1,D1
00020950 <AmiBlitz3.ab3@1841>     LSR.w #1,D0
00020954 <AmiBlitz3.ab3@1842> BRA.b calcvbr_loop
00020956 <AmiBlitz3.ab3@1845>   MOVEQ.l #$00,D2
0002095A <AmiBlitz3.ab3@1846>   CMP.w #$2,D1
0002095E <AmiBlitz3.ab3@1847>    BCS.b calcvbr__skip2
00020964 <AmiBlitz3.ab3@1848>   MOVEA.l _execbase,A6
00020968 <AmiBlitz3.ab3@1849>   JSR _SuperState(A6)
0002096C <AmiBlitz3.ab3@1850>   Dc.l $4E7A2801                                           ;movec vbr,D2
00020970 <AmiBlitz3.ab3@1851>   JSR _UserState(A6)
00020976 <AmiBlitz3.ab3@1854>   MOVE.l D2,vbr
00020978 <AmiBlitz3.ab3@1855> RTS
0002097E <AmiBlitz3.ab3@1859>   LEA instrtab,a0
00020984 <AmiBlitz3.ab3@1860>   MOVE.l #labelhash-instrtab,d0
00020986 <AmiBlitz3.ab3@1861>   ASR.l #2,d0
00020988 <AmiBlitz3.ab3@1862>   SUBQ.l #1,d0
0002098A <AmiBlitz3.ab3@1865>   CLR.l (a0)+
0002098C <AmiBlitz3.ab3@1866>   SUBQ.l #1,d0
00020990 <AmiBlitz3.ab3@1867>   BNE 'l10
00020994 <AmiBlitz3.ab3@1868>   BSR.w call_setpointerbusy
00020998 <AmiBlitz3.ab3@1869>   BSR.w free_userlibs
0002099C <AmiBlitz3.ab3@1870>   BSR.w scan_for_userlibs
000209A0 <AmiBlitz3.ab3@1871>   BSR.w JL_0_7082
000209A4 <AmiBlitz3.ab3@1872> BRA.w call_setpointernormal
000209CE <AmiBlitz3.ab3@1878>   !basic
00020A08 <AmiBlitz3.ab3@1879>   Poke.l ?size_acidlibs, dos_GetFileSize{Peek$(?str_path_acidlibs)}
00020A18 <AmiBlitz3.ab3@1881>   deflibNameP.l = Peek.l(?deflib)
00020A22 <AmiBlitz3.ab3@1882>   If deflibNameP
00020A54 <AmiBlitz3.ab3@1883>     If Peek.s(deflibNameP)<>""
00020A9E <AmiBlitz3.ab3@1884>       Poke.l ?size_deflibs, dos_GetFileSize{Peek.s(Peek.l(?deflib))}
00020AA4 <AmiBlitz3.ab3@1885>     Else
00020ADE <AmiBlitz3.ab3@1886>       Poke.l ?size_deflibs, dos_GetFileSize{Peek.s(?str_path_deflibs)}
00020AE4 <AmiBlitz3.ab3@1888>   Else
00020B1E <AmiBlitz3.ab3@1889>     Poke.l ?size_deflibs, dos_GetFileSize{Peek.s(?str_path_deflibs)}
00020B58 <AmiBlitz3.ab3@1890>     error{"INTERNAL: Invalid deflib name pointer!"}
00020B76 <AmiBlitz3.ab3@1892>   !asm
00020B7C <AmiBlitz3.ab3@1897>   MOVE.l #str_path_userlibs,D1
00020B7E <AmiBlitz3.ab3@1898>   MOVEQ.l #-$02,D2
00020B84 <AmiBlitz3.ab3@1899>   MOVEA.l _dosbase,A6
00020B88 <AmiBlitz3.ab3@1900>   JSR _Lock(A6)
00020B8A <AmiBlitz3.ab3@1901>   MOVE.l D0,D7
00020B8E <AmiBlitz3.ab3@1902>    BEQ.w exit_get_libraries
00020B90 <AmiBlitz3.ab3@1903>   MOVE.l D7,D1
00020B96 <AmiBlitz3.ab3@1904>   MOVE.l #ptr_parameterstore,D2
00020B9A <AmiBlitz3.ab3@1905>   JSR _Examine(A6)
00020B9C <AmiBlitz3.ab3@1906>   TST.l D0
00020BA0 <AmiBlitz3.ab3@1907>   BEQ.w unlock_and_exit_get_libraries
00020BA6 <AmiBlitz3.ab3@1908>   MOVE.l fib_DirEntryType,D0
00020BAA <AmiBlitz3.ab3@1909>   BMI.w unlock_and_exit_get_libraries
00020BAC <AmiBlitz3.ab3@1914>     MOVE.l D7,D1
00020BB2 <AmiBlitz3.ab3@1915>     MOVE.l #ptr_parameterstore,D2
00020BB8 <AmiBlitz3.ab3@1916>     MOVEA.l _dosbase,A6
00020BBC <AmiBlitz3.ab3@1917>     JSR _ExNext(A6)
00020BBE <AmiBlitz3.ab3@1918>     TST.l D0
00020BC2 <AmiBlitz3.ab3@1919>      BEQ.w exit_scan_libsdrawer                            ; kein weiteres File
00020BC8 <AmiBlitz3.ab3@1921>     MOVE.l fib_DirEntryType,D0                             ; positive for directoies, negative for files
00020BCC <AmiBlitz3.ab3@1922>     BPL.w scan_libsdrawer                                  ; skip directories
00020BD2 <AmiBlitz3.ab3@1924>     LEA fib_FileName,A0                                    ; pruefen ob infofile
00020BD6 <AmiBlitz3.ab3@1925>     BSR.w check_for_infoextention
00020BDA <AmiBlitz3.ab3@1926>     BEQ.w scan_libsdrawer
00020BE0 <AmiBlitz3.ab3@1928>     MOVEA.l _execbase,A6                                   ; allocate $26 = 38 bytes fuer listeneintrag
00020BE2 <AmiBlitz3.ab3@1929>     MOVEQ.l #$26,D0
00020BE4 <AmiBlitz3.ab3@1930>     MOVEQ.l #$01,D1
00020BEA <AmiBlitz3.ab3@1931>     MOVE.l mempool,a0
00020BEE <AmiBlitz3.ab3@1932>     JSR _AllocPooled(a6)
00020BF4 <AmiBlitz3.ab3@1934>     MOVEA.l _dosbase,A6
00020BF6 <AmiBlitz3.ab3@1935>     MOVE.l D0,D6                                           ; sichere speicheradresse in D6
00020BFC <AmiBlitz3.ab3@1938>     LEA ptr_userlibs_list,A0                               ; pruefe liste
00020BFE <AmiBlitz3.ab3@1941>     MOVE.l (A0),D5
00020C02 <AmiBlitz3.ab3@1942>      BEQ.w JL_0_3722                                       ; kein pointer da? kann springe weiter
00020C04 <AmiBlitz3.ab3@1943>     MOVEA.l D5,A2
00020C06 <AmiBlitz3.ab3@1944>     ADDQ.w #6,A2                                           ; 6 bytes weiter gehen, um dateinamen zu speichern
00020C0C <AmiBlitz3.ab3@1947>     LEA fib_FileName,A1                                    ; vergleich, ob Dateiname schon in der liste ist
00020C0E <AmiBlitz3.ab3@1950>       MOVEQ.l #$00,D0
00020C10 <AmiBlitz3.ab3@1951>       MOVE.b (A1)+,D0
00020C14 <AmiBlitz3.ab3@1952>        BEQ.w JL_0_3722                                     ; dateiname komplett, dann weiter
00020C16 <AmiBlitz3.ab3@1953>       MOVEQ.l #$00,D1
00020C18 <AmiBlitz3.ab3@1954>       MOVE.b (A2)+,D1
00020C1C <AmiBlitz3.ab3@1955>        BEQ.w JL_0_371C
00020C3E <AmiBlitz3.ab3@1956>       !compare1                                            ;bsr.w tstalpha
00020C42 <AmiBlitz3.ab3@1957>       BNE.w JL_0_3702
00020C46 <AmiBlitz3.ab3@1958>       ANDI.w #$DF,D0
00020C48 <AmiBlitz3.ab3@1961>       EXG.l D0,D1
00020C6A <AmiBlitz3.ab3@1962>       !compare1                                            ;bsr.w tstalpha
00020C6E <AmiBlitz3.ab3@1963>       BNE.w JL_0_3710
00020C72 <AmiBlitz3.ab3@1964>       ANDI.w #$DF,D0
00020C74 <AmiBlitz3.ab3@1967>       EXG.l D0,D1
00020C76 <AmiBlitz3.ab3@1968>       CMP.b D1,D0
00020C7A <AmiBlitz3.ab3@1969>     BEQ.w JL_0_36E6
00020C7E <AmiBlitz3.ab3@1970>     BCS.w JL_0_3722
00020C80 <AmiBlitz3.ab3@1973>     MOVEA.l D5,A0
00020C84 <AmiBlitz3.ab3@1974> BRA.w JL_0_36D6
00020C86 <AmiBlitz3.ab3@1977>     MOVEA.l D6,A1                                          ; hier war die adresse des allokierten Speicers drin
00020C88 <AmiBlitz3.ab3@1978>     MOVE.l (A0),(A1)
00020C8A <AmiBlitz3.ab3@1979>     MOVE.l A1,(A0)
00020C8C <AmiBlitz3.ab3@1980>     ADDQ.w #4,A1                                           ; pointer zum naechsten namen ueberspringen
00020C90 <AmiBlitz3.ab3@1981>     MOVE.w #$FFFF,(A1)+                                    ; $FFFF schreiben
00020C96 <AmiBlitz3.ab3@1982>     MOVEA.l #fib_FileName,A0                               ; dateinamen in die liste kopieren
00020C98 <AmiBlitz3.ab3@1985>       MOVE.b (A0)+,(A1)+
00020C9C <AmiBlitz3.ab3@1986>     BNE.w JL_0_3734
00020CA0 <AmiBlitz3.ab3@1987> BRA.w scan_libsdrawer
00020CA2 <AmiBlitz3.ab3@1990>   MOVE.l D7,D1
00020CA8 <AmiBlitz3.ab3@1991>   MOVEA.l _dosbase,A6
00020CAC <AmiBlitz3.ab3@1992>   JSR _UnLock(A6)
00020CAE <AmiBlitz3.ab3@1993>   MOVEQ.l #-$01,D0
00020CB0 <AmiBlitz3.ab3@1996> RTS
00020CB2 <AmiBlitz3.ab3@1999>   MOVE.l D7,D1
00020CB8 <AmiBlitz3.ab3@2000>   MOVEA.l _dosbase,A6
00020CBC <AmiBlitz3.ab3@2001>   JSR _UnLock(A6)
00020CBE <AmiBlitz3.ab3@2002>   MOVEQ.l #$00,D0
00020CC0 <AmiBlitz3.ab3@2003> RTS
00020CC6 <AmiBlitz3.ab3@2007>   MOVEA.l _execbase,A6
00020CCC <AmiBlitz3.ab3@2008>   MOVEA.l ptr_userlibs_list,A2
00020CD2 <AmiBlitz3.ab3@2009>   CLR.l ptr_userlibs_list
00020CD6 <AmiBlitz3.ab3@2012>     CMPA.w #$0,A2
00020CDA <AmiBlitz3.ab3@2013>     BEQ.w exit_free_userlib
00020CDC <AmiBlitz3.ab3@2014>       MOVEA.l A2,A1
00020CDE <AmiBlitz3.ab3@2015>       MOVEQ.l #$26,D0
00020CE0 <AmiBlitz3.ab3@2016>       MOVEA.l (A2),A2
00020CE6 <AmiBlitz3.ab3@2017>       MOVE.l mempool,a0
00020CEC <AmiBlitz3.ab3@2018>       MOVEA.l _execbase,A6
00020CF0 <AmiBlitz3.ab3@2019>       JSR _FreePooled(A6)
00020CF4 <AmiBlitz3.ab3@2020> BRA.w loop_free_userlib
00020CF6 <AmiBlitz3.ab3@2023> RTS
00020CF8 <AmiBlitz3.ab3@2026> pass:  Dc.w 0                                             ; smallpass org source
00020CFA <AmiBlitz3.ab3@2027> compiler_job: Dc.w 0                                      ; added by thilo: what the compiler is doing at the moment
00020D00 <AmiBlitz3.ab3@2031>   MOVE.l A7,errstack                                      ;startcompile
00020D06 <AmiBlitz3.ab3@2040>   CLR.l reqmode
00020D10 <AmiBlitz3.ab3@2042>   MOVE.l #Aclearallvars,errcont
00020D1A <AmiBlitz3.ab3@2043>   MOVE.l #concomstack,concomsp
00020D1E <AmiBlitz3.ab3@2051>   MOVE.w #1450,D0
00020D20 <AmiBlitz3.ab3@2052>   LSR.w #3,D0
00020D22 <AmiBlitz3.ab3@2053>   SUBQ.w #7,D0                                             ; 173
00020D28 <AmiBlitz3.ab3@2054>   MOVE.w D0,progressbar_width
00020D2A <AmiBlitz3.ab3@2055>   SWAP D0
00020D2C <AmiBlitz3.ab3@2056>   CLR.w D0
00020D32 <AmiBlitz3.ab3@2057>   MOVE.l numlines,d1
00020D36 <AmiBlitz3.ab3@2058>   DIVU.l d1,d0                                             ; progressbar_width / numlines
00020D38 <AmiBlitz3.ab3@2060>   TST.w D0
00020D3C <AmiBlitz3.ab3@2061>   BNE.w JL_0_37C0
00020D3E <AmiBlitz3.ab3@2062>   MOVEQ.l #-$01,D0
00020D44 <AmiBlitz3.ab3@2065>   MOVE.w D0,progress_per_line
00020D4C <AmiBlitz3.ab3@2074>   BTST #$7,use_debugger
00020D50 <AmiBlitz3.ab3@2076>   BNE 'debugon
00020D56 <AmiBlitz3.ab3@2077>   CLR.w debugmode
00020D5A <AmiBlitz3.ab3@2078> BRA.b 'debugoff
00020D60 <AmiBlitz3.ab3@2081>   SNE debugmode
00020D98 <AmiBlitz3.ab3@2089>   !ComData_SetB{comByte_DebugMode,debugmode}
00020D9E <AmiBlitz3.ab3@2092>   CLR.w dirmode                                            ;direct mode flag
00020DA4 <AmiBlitz3.ab3@2093>   CLR.w ezerr                                              ;quiet error
00020DAA <AmiBlitz3.ab3@2094>   CLR.l currentfunction
00020DB0 <AmiBlitz3.ab3@2095>   CLR.w connest
00020DB6 <AmiBlitz3.ab3@2096>   CLR.w varmode
00020DBC <AmiBlitz3.ab3@2097>   CLR.w proceduremode
00020DC2 <AmiBlitz3.ab3@2098>   CLR.w ininclude
00020DC8 <AmiBlitz3.ab3@2099>   CLR.w intstring
00020DCE <AmiBlitz3.ab3@2100>   CLR.w pass
00020DD6 <AmiBlitz3.ab3@2101>   MOVE.w #0,compiler_job
00020DDC <AmiBlitz3.ab3@2102>   CLR.l funcscanon
00020DE2 <AmiBlitz3.ab3@2111>   CLR.l funcscanon
00020DE6 <AmiBlitz3.ab3@2112>   BSR.w compileall
00020DEC <AmiBlitz3.ab3@2113> 
00020DF2 <AmiBlitz3.ab3@2114>   TST.l errorcounter
00020DF6 <AmiBlitz3.ab3@2115>   BEQ _skiperrorstop
00020DF8 <AmiBlitz3.ab3@2116>   RTS
00020DFE <AmiBlitz3.ab3@2119>   MOVE.w dontwrite,d0
00020E02 <AmiBlitz3.ab3@2120>   CMP.w #1,d0
00020E06 <AmiBlitz3.ab3@2121>   BNE 'l3
00020E0C <AmiBlitz3.ab3@2122>   TST.l errorcounter
00020E10 <AmiBlitz3.ab3@2123>   BNE 'l3
00020E16 <AmiBlitz3.ab3@2124>   CLR.w dontwrite
00020E1A <AmiBlitz3.ab3@2125>   BSR compileall                                           ;if a function is not found
00020E20 <AmiBlitz3.ab3@2126>   ADDQ.w #1,pass
00020E5E <AmiBlitz3.ab3@2131>   !ComData_GetB{comByte_FuncOptimize,D0}  ; now its in the xtra file and can be put to GUI settings ; Wanderer
00020E62 <AmiBlitz3.ab3@2132>   BEQ 'out  ; only if func optimize is set >< 0; Wanderer
00020E68 <AmiBlitz3.ab3@2133>   LEA firstproc,a0
00020E6E <AmiBlitz3.ab3@2134>   CLR.l savefuncspace
00020E70 <AmiBlitz3.ab3@2135>   MOVE.l (a0),d0
00020E72 <AmiBlitz3.ab3@2139>     MOVE.l d0,a0
00020E76 <AmiBlitz3.ab3@2140>     BEQ 'out
00020E7A <AmiBlitz3.ab3@2141>     TST.b isfunc(a0)
00020E7E <AmiBlitz3.ab3@2142>     BNE 'nex
00020E82 <AmiBlitz3.ab3@2143>     MOVEM.l d2/a6/a0,-(a7)
00020E84 <AmiBlitz3.ab3@2145>     MOVEQ #0,d0
00020E88 <AmiBlitz3.ab3@2146>     MOVE.b $21+#funcentry_extend-1(a0),d0
00020E8C <AmiBlitz3.ab3@2147>     SUB.w #$21+#funcentry_extend,d0
00020E90 <AmiBlitz3.ab3@2148>     ADD.w #16,d0
00020E96 <AmiBlitz3.ab3@2149>     MOVE.l #$10000,d1
00020E98 <AmiBlitz3.ab3@2150>     MOVE.l d0,d2
00020E9E <AmiBlitz3.ab3@2151>     MOVEA.l _execbase,A6
00020EA2 <AmiBlitz3.ab3@2152>     JSR _AllocMem(a6)         ; thilo: not 100% sure about this!
00020EA4 <AmiBlitz3.ab3@2153>     MOVE.l d0,a1
00020EA8 <AmiBlitz3.ab3@2154>     MOVE.l d2,4(a1)
00020EAE <AmiBlitz3.ab3@2155>     MOVE.l unusedfunc,(a1)
00020EB4 <AmiBlitz3.ab3@2156>     MOVE.l d0,unusedfunc
00020EB8 <AmiBlitz3.ab3@2157>     MOVEM.l (a7)+,a6/a0/d2
00020EBC <AmiBlitz3.ab3@2158>     MOVE.l isfunc+1(a0),d0
00020EBE <AmiBlitz3.ab3@2159>     ADDQ.l #6,d0
00020EC4 <AmiBlitz3.ab3@2160>     ADD.l d0,savefuncspace
00020EC8 <AmiBlitz3.ab3@2163>     MOVE.l d0,8(a1)
00020ECC <AmiBlitz3.ab3@2164>     LEA 12(a1),a1
00020ECE <AmiBlitz3.ab3@2165>     MOVE.l a0,-(a7)
00020ED2 <AmiBlitz3.ab3@2166>     LEA $21+#funcentry_extend(a0),a0
00020ED4 <AmiBlitz3.ab3@2169>       MOVE.b (a0)+,(a1)+
00020ED8 <AmiBlitz3.ab3@2170>     BNE 'l1
00020EDA <AmiBlitz3.ab3@2171>     MOVE.l (a7)+,a0
00020EDC <AmiBlitz3.ab3@2174>     MOVE.l (a0),d0
00020EE0 <AmiBlitz3.ab3@2175> BRA 'lr1
00020EE8 <AmiBlitz3.ab3@2178>   BTST #$7,make_smallestcode
00020EEC <AmiBlitz3.ab3@2179>   BEQ.b JL_0_3844                                           ;optimize for executable
00020EF2 <AmiBlitz3.ab3@2180>   CLR.l morememadd
00020EF6 <AmiBlitz3.ab3@2182>   BSR.w alloxadj
00020EFA <AmiBlitz3.ab3@2183>   BEQ.w JL_0_388A
00020EFE <AmiBlitz3.ab3@2186>   BSR.w compileall
00020F04 <AmiBlitz3.ab3@2187>   ADDQ.w #1,pass
00020F0A <AmiBlitz3.ab3@2190>   MOVE.w dontwrite,D1
00020F0E <AmiBlitz3.ab3@2191>   BEQ.w JL_0_38A2
00020F12 <AmiBlitz3.ab3@2211> BRA.w JL_0_3896
00020F1A <AmiBlitz3.ab3@2222>   MOVE.w #$FFFF,anyerrs
00020F1E <AmiBlitz3.ab3@2223> BRA.w JL_0_38A2
00020F22 <AmiBlitz3.ab3@2226>   BSR.w alloxinc                                          ;increase all by 50%
00020F26 <AmiBlitz3.ab3@2227>   BEQ.w Aclearallvars
00020F2A <AmiBlitz3.ab3@2228> BRA.w JL_0_3824
00020F2E <AmiBlitz3.ab3@2240> BRA.w JL_0_38A6                                            ;???????
00020F34 <AmiBlitz3.ab3@2244>   JSR freereps
00020F3A <AmiBlitz3.ab3@2245>   JSR freesels
00020F40 <AmiBlitz3.ab3@2246>   JSR AJL_0_6DF2
00020F46 <AmiBlitz3.ab3@2247>   JSR freepends
00020F4C <AmiBlitz3.ab3@2248>   JSR freeifs
00020F52 <AmiBlitz3.ab3@2249>   JSR AJL_0_C188
00020F58 <AmiBlitz3.ab3@2250>   JSR AJL_0_C15C
00020F5E <AmiBlitz3.ab3@2251>   JSR AJL_0_D9BC
00020F64 <AmiBlitz3.ab3@2254> JMP cleartemplabel
00020F68 <AmiBlitz3.ab3@2257> mempool2:  Dc.l 0
00020F6E <AmiBlitz3.ab3@2261>   JSR Aclearcache
00020F76 <AmiBlitz3.ab3@2263>   BTST #$7,use_debugger
00020F7A <AmiBlitz3.ab3@2265>   BNE 'debugon
00020F80 <AmiBlitz3.ab3@2266>   CLR.w debugmode
00020F84 <AmiBlitz3.ab3@2267> BRA.b 'debugoff
00020F8A <AmiBlitz3.ab3@2270>   SNE debugmode
00020FC2 <AmiBlitz3.ab3@2275>   !ComData_SetB{comByte_DebugMode,debugmode}
00020FC8 <AmiBlitz3.ab3@2277>   LEA regtable,a0
00020FCA <AmiBlitz3.ab3@2278>   MOVEQ #10,d0
00020FCC <AmiBlitz3.ab3@2281>     CLR.l (a0)+
00020FD0 <AmiBlitz3.ab3@2282>   DBF d0,'l1
00020FD6 <AmiBlitz3.ab3@2284>   LEA includetemp2,a0
00020FD8 <AmiBlitz3.ab3@2285>   CLR.b (a0)
00020FE2 <AmiBlitz3.ab3@2286>   MOVE.l #7,maxregs
00020FE8 <AmiBlitz3.ab3@2287>   CLR.w debugnest
00020FEE <AmiBlitz3.ab3@2288>   CLR.b funcparloop
00020FF4 <AmiBlitz3.ab3@2289>   CLR.b nostringopt
00020FFA <AmiBlitz3.ab3@2290>   CLR.b firsttime
00021000 <AmiBlitz3.ab3@2291>   CLR.l lastdestpointer
00021006 <AmiBlitz3.ab3@2292>   CLR.l lastwritedat
0002100C <AmiBlitz3.ab3@2293>   CLR.l prevwritedat
00021012 <AmiBlitz3.ab3@2294>   CLR.l includeline
00021018 <AmiBlitz3.ab3@2295>   CLR.b incnif
0002101E <AmiBlitz3.ab3@2296>   CLR.b formode
00021024 <AmiBlitz3.ab3@2297>   CLR.b funccall
0002102A <AmiBlitz3.ab3@2298>   CLR.w objectcount
00021030 <AmiBlitz3.ab3@2299>   CLR.b resdisable
00021036 <AmiBlitz3.ab3@2300>   CLR.b developobject
0002103C <AmiBlitz3.ab3@2301>   CLR.b optistring
00021042 <AmiBlitz3.ab3@2302>   CLR.b optistring2
00021048 <AmiBlitz3.ab3@2303>   CLR.b optiarray
0002104E <AmiBlitz3.ab3@2304>   CLR.b quickadd
00021054 <AmiBlitz3.ab3@2305>   CLR.w newmode
0002105A <AmiBlitz3.ab3@2306>   CLR.w mode
00021060 <AmiBlitz3.ab3@2307>   CLR.w string1
00021066 <AmiBlitz3.ab3@2308>   CLR.b fastfunc
0002106C <AmiBlitz3.ab3@2309>   CLR.w load_var_size
00021072 <AmiBlitz3.ab3@2310>   CLR.w load_var_reg
00021078 <AmiBlitz3.ab3@2311>   CLR.l load_var_addr
0002107E <AmiBlitz3.ab3@2312>   CLR.w imm_size
00021084 <AmiBlitz3.ab3@2313>   CLR.w imm_reg
0002108A <AmiBlitz3.ab3@2314>   CLR.l imm_addr
00021090 <AmiBlitz3.ab3@2315>   CLR.b _dcb
00021096 <AmiBlitz3.ab3@2316>   CLR.l nohunkoffset
0002109C <AmiBlitz3.ab3@2317>   CLR.b peekaddrsize
000210A2 <AmiBlitz3.ab3@2318>   CLR.b typecheck
000210A8 <AmiBlitz3.ab3@2319>   CLR.b declare2
000210AE <AmiBlitz3.ab3@2320>   CLR.b declare
000210B4 <AmiBlitz3.ab3@2321>   CLR.l myoline                                          ;check
000210BA <AmiBlitz3.ab3@2322>   CLR.l myline                                          ;check
000210C0 <AmiBlitz3.ab3@2323>   CLR.b newvariable
000210C6 <AmiBlitz3.ab3@2324>   CLR.b saved0
000210CC <AmiBlitz3.ab3@2325>   CLR.l bsssize
000210D2 <AmiBlitz3.ab3@2326>   CLR.l chipsize
000210D8 <AmiBlitz3.ab3@2327>   CLR.b infunctioncode
000210DE <AmiBlitz3.ab3@2328>   CLR.l errorcounter
000210E8 <AmiBlitz3.ab3@2329>   MOVE.l #-1,bssstart
000210F2 <AmiBlitz3.ab3@2330>   MOVE.l #-1,bssend
000210FC <AmiBlitz3.ab3@2331>   MOVE.l #-1,chipstart
00021106 <AmiBlitz3.ab3@2332>   MOVE.l #-1,chipend
0002110E <AmiBlitz3.ab3@2333>   MOVE.w #0,bssmode
00021114 <AmiBlitz3.ab3@2334>   CLR.w a2offset
0002111A <AmiBlitz3.ab3@2335>   CLR.w fast
00021120 <AmiBlitz3.ab3@2336>   CLR.w fpu
00021126 <AmiBlitz3.ab3@2337>   CLR.b iee
0002112C <AmiBlitz3.ab3@2338>   CLR.w newsyntax
00021130 <AmiBlitz3.ab3@2339>   BSR.w JL_0_38A6
00021136 <AmiBlitz3.ab3@2340>   JSR AJL_0_7962
0002113C <AmiBlitz3.ab3@2341>   JSR frallvars
00021142 <AmiBlitz3.ab3@2342>   JSR fralltypes
00021148 <AmiBlitz3.ab3@2343>   JSR freemacs
0002114E <AmiBlitz3.ab3@2344>   JSR clearfunctionlist
00021154 <AmiBlitz3.ab3@2345>   TST.w pass
0002115A <AmiBlitz3.ab3@2347>   JSR clearlabels
00021160 <AmiBlitz3.ab3@2348>   JSR clearhash
00021166 <AmiBlitz3.ab3@2351>   LEA devo,a0
0002116A <AmiBlitz3.ab3@2352>   MOVEM.l a0-a6/d0-d7,-(a7)
00021170 <AmiBlitz3.ab3@2353>   LEA ptr_parameterstore,a1
00021172 <AmiBlitz3.ab3@2356>     MOVE.b (a0)+,(a1)+
00021176 <AmiBlitz3.ab3@2357>   BNE 'l1b
00021178 <AmiBlitz3.ab3@2358>   MOVEQ #13,d2
0002117E <AmiBlitz3.ab3@2359>   JSR findlabel2
00021182 <AmiBlitz3.ab3@2360>   BNE 'd
00021186 <AmiBlitz3.ab3@2361>   CLR.l 8(a2)
0002118A <AmiBlitz3.ab3@2364>   MOVEM.l (a7)+,a0-a6/d0-d7
000211B4 <AmiBlitz3.ab3@2365>   !basic
00021228 <AmiBlitz3.ab3@2366>   dos_Delete{dos_AddPart{my_systemdir$,"ab_compileerror.txt"}}
00021246 <AmiBlitz3.ab3@2367>   !asm
0002124C <AmiBlitz3.ab3@2368>   CLR.b returncode
00021252 <AmiBlitz3.ab3@2369> JMP freeprocvs
00021258 <AmiBlitz3.ab3@2373>   MOVE.l #bssstore-labelhash,d0
0002125A <AmiBlitz3.ab3@2374>   ASR.l #2,d0
00021260 <AmiBlitz3.ab3@2375>   LEA labelhash,a0
00021262 <AmiBlitz3.ab3@2378>     CLR.l (a0)+
00021264 <AmiBlitz3.ab3@2379>     SUBQ.l #1,d0
00021268 <AmiBlitz3.ab3@2380>   BNE.s 'l10
0002126E <AmiBlitz3.ab3@2382>   LEA labelbase,a1
00021270 <AmiBlitz3.ab3@2383>   MOVE.l (a1),d0
00021274 <AmiBlitz3.ab3@2384>   BEQ 'l11
00021276 <AmiBlitz3.ab3@2387>     MOVE.l d0,a1
0002127A <AmiBlitz3.ab3@2388>     TST.l 4(a1)
0002127E <AmiBlitz3.ab3@2389>     BEQ 'l29
00021282 <AmiBlitz3.ab3@2390>     LEA $13(a1),a0
00021284 <AmiBlitz3.ab3@2391>     MOVEQ #0,d0
00021286 <AmiBlitz3.ab3@2392>     MOVEQ #0,d1
00021288 <AmiBlitz3.ab3@2395>       MOVE.b (a0)+,d1
0002128C <AmiBlitz3.ab3@2396>       BEQ 'l12
00021292 <AmiBlitz3.ab3@2397>       !hashalgo
00021296 <AmiBlitz3.ab3@2398> BRA 'l13
0002129C <AmiBlitz3.ab3@2401>     LEA labelhash,a0
000212A2 <AmiBlitz3.ab3@2402>     AND.l #hashsize,d0
000212A4 <AmiBlitz3.ab3@2403>      ASL.l #2,d0
000212A8 <AmiBlitz3.ab3@2404>     MOVE.l 0(a0,d0),d1                                     ;*4
000212AC <AmiBlitz3.ab3@2405>     MOVE.l d1,$c(a1)
000212B0 <AmiBlitz3.ab3@2406>     MOVE.l a1,0(a0,d0)
000212B2 <AmiBlitz3.ab3@2409>     MOVE.l (a1),d0
000212B6 <AmiBlitz3.ab3@2410>   BNE 'l21
000212B8 <AmiBlitz3.ab3@2413> RTS
000212BE <AmiBlitz3.ab3@2417>   MOVEA.l lastrestype,A0
000212C0 <AmiBlitz3.ab3@2418>   MOVEA.l (A0),A2
000212C2 <AmiBlitz3.ab3@2419>   CLR.l (A0)
000212C8 <AmiBlitz3.ab3@2420> JMP freetypes
000212CE <AmiBlitz3.ab3@2424>   MOVEA.l varbase,A3
000212D4 <AmiBlitz3.ab3@2425>   CLR.l varbase
000212D8 <AmiBlitz3.ab3@2428>   CMPA.w #$0,A3
000212DC <AmiBlitz3.ab3@2429>   BEQ.w 'l20
000212DE <AmiBlitz3.ab3@2430>   MOVEA.l A3,A1
000212E0 <AmiBlitz3.ab3@2431>   MOVEA.l (A3),A3
000212E2 <AmiBlitz3.ab3@2432>   MOVEQ.l #$00,D0
000212E6 <AmiBlitz3.ab3@2433>   MOVE.b $E+4(A1),D0
000212EC <AmiBlitz3.ab3@2434>   MOVEA.l _execbase,A6
000212F2 <AmiBlitz3.ab3@2435>   MOVE.l mempool2,a0
000212F6 <AmiBlitz3.ab3@2436>   JSR _FreePooled(A6)
000212FA <AmiBlitz3.ab3@2437> BRA.w 'l10
000212FC <AmiBlitz3.ab3@2440> RTS
00021302 <AmiBlitz3.ab3@2445>   LEA firstiff,A2
00021304 <AmiBlitz3.ab3@2446>   MOVEQ.l #$0E,D2
0002130A <AmiBlitz3.ab3@2447> JMP freeslist
0002130C <AmiBlitz3.ab3@2453> progressbar_width:   Dc.w 100                              ;riteend org source ;right end of include strip
0002130E <AmiBlitz3.ab3@2454> inmacro:             Ds.w 1                                ;macmask org source ;macro found
00021314 <AmiBlitz3.ab3@2458>   CLR.w inmacro
0002131A <AmiBlitz3.ab3@2459>   ADDQ.l #1,globallinecount
00021320 <AmiBlitz3.ab3@2460>   CLR.b nostringopt
00021324 <AmiBlitz3.ab3@2461>   BSR.w JL_0_3CA4
0002132A <AmiBlitz3.ab3@2462>   CLR.w instringon
00021330 <AmiBlitz3.ab3@2465>   TST.w ininclude
00021334 <AmiBlitz3.ab3@2466>   BEQ.w JL_0_39B0
0002133A <AmiBlitz3.ab3@2467>   ADDQ.l #1,includeline
00021340 <AmiBlitz3.ab3@2468>     JSR ab3_WriteDebugFile
00021346 <AmiBlitz3.ab3@2469>   JSR AJL_0_C09E
0002134A <AmiBlitz3.ab3@2470>   BEQ.w JL_0_39B0
00021350 <AmiBlitz3.ab3@2471>   MOVE.w ininclude,D0
00021354 <AmiBlitz3.ab3@2472>   CMP.w #$4,D0
00021358 <AmiBlitz3.ab3@2473>   BCC.w JL_0_39AC
0002135A <AmiBlitz3.ab3@2474>   ADD.w D0,D0
00021360 <AmiBlitz3.ab3@2475>   LEA progress_per_line,A0
00021364 <AmiBlitz3.ab3@2476>   MOVE.w $0(A0,D0.W),D2
00021368 <AmiBlitz3.ab3@2477>   CMP.w progressbar_width(PC),D2
0002136C <AmiBlitz3.ab3@2478>   BCC.w JL_0_39AC
00021370 <AmiBlitz3.ab3@2479>   ADDQ.w #1,$0(A0,D0.W)
00021372 <AmiBlitz3.ab3@2480>   LSR.w #1,D0
00021374 <AmiBlitz3.ab3@2481>   MOVE.l d0,d1
00021376 <AmiBlitz3.ab3@2482>   EXT.l d1
00021378 <AmiBlitz3.ab3@2483>   MOVE.l d2,d0
0002137A <AmiBlitz3.ab3@2484>   EXT.l d0                                                 ;d0=x,d1=y
00021380 <AmiBlitz3.ab3@2486>   JSR update_progressbar
00021382 <AmiBlitz3.ab3@2489>   MOVEQ.l #-$01,D0
00021384 <AmiBlitz3.ab3@2490> RTS
0002138A <AmiBlitz3.ab3@2494>   MOVE.l titleat,D0
0002138C <AmiBlitz3.ab3@2495>   MOVEQ.l #$00,D1
00021392 <AmiBlitz3.ab3@2496>   MOVE.w progress_per_line,D1
00021394 <AmiBlitz3.ab3@2497>   ADD.l D1,D0
00021396 <AmiBlitz3.ab3@2498>   MOVE.l D0,D1
00021398 <AmiBlitz3.ab3@2499>   SWAP D0
0002139E <AmiBlitz3.ab3@2500>   CMP.w titleat,D0
000213A2 <AmiBlitz3.ab3@2501>    BEQ.w JL_0_39E4
000213A4 <AmiBlitz3.ab3@2505>   EXT.l d0
000213A6 <AmiBlitz3.ab3@2506>   MOVE.l d1,-(a7)
000213AE <AmiBlitz3.ab3@2509>   MOVE.w #1,compiler_job                                    ; set to compiler job 1 (=build executable)
000213B4 <AmiBlitz3.ab3@2510>   JSR update_progressbar
000213BC <AmiBlitz3.ab3@2511>   MOVE.w #0,compiler_job                                    ; set to compiler job 0 (=compile source)
000213BE <AmiBlitz3.ab3@2515>   MOVE.l (a7)+,d1
000213C4 <AmiBlitz3.ab3@2518>   MOVE.l D1,titleat
000213CA <AmiBlitz3.ab3@2519>   ADDQ.l #1,linenumat
000213D0 <AmiBlitz3.ab3@2520>   CLR.w linedone
000213D6 <AmiBlitz3.ab3@2521>   JSR ab3_WriteDebugFile  ; write to DebugFile every main source line
000213DC <AmiBlitz3.ab3@2523>   SUBQ.l #1,numlines2
000213E0 <AmiBlitz3.ab3@2524>    BEQ.w JL_0_3A12
000213E6 <AmiBlitz3.ab3@2525>   MOVEA.l sourceline,A0
000213E8 <AmiBlitz3.ab3@2526>   MOVEA.l (A0),A0
000213EE <AmiBlitz3.ab3@2527>   MOVE.l A0,sourceline
000213F2 <AmiBlitz3.ab3@2528>   LEA $9(A0),A5
000213F4 <AmiBlitz3.ab3@2531> RTS
000213F6 <AmiBlitz3.ab3@2535>   MOVE.w D0,-(A7)
000213F8 <AmiBlitz3.ab3@2536>   MOVEQ.l #$03,D0
000213FA <AmiBlitz3.ab3@2539>     MOVE.w D1,D2
000213FE <AmiBlitz3.ab3@2540>     ANDI.w #$F,D2
00021402 <AmiBlitz3.ab3@2541>     ADDI.w #$30,D2
00021406 <AmiBlitz3.ab3@2542>     CMP.w #$3A,D2
0002140A <AmiBlitz3.ab3@2543>      BCS.w JL_0_3A2C
0002140C <AmiBlitz3.ab3@2544>     ADDQ.w #7,D2
00021410 <AmiBlitz3.ab3@2547>     MOVE.b D2,$0(A0,D0.W)
00021412 <AmiBlitz3.ab3@2548>     LSR.w #4,D1
00021416 <AmiBlitz3.ab3@2549>   DBF D0,JL_0_3A18
00021418 <AmiBlitz3.ab3@2551>   MOVE.w (A7)+,D0
0002141A <AmiBlitz3.ab3@2552> RTS
00021420 <AmiBlitz3.ab3@2562>   MOVE.w skipcode,D1
00021424 <AmiBlitz3.ab3@2563>   BNE.w JL_0_3A46
00021426 <AmiBlitz3.ab3@2564> RTS
00021428 <AmiBlitz3.ab3@2567>   MOVE.l A5,-(A7)
0002142A <AmiBlitz3.ab3@2568>   MOVEQ.l #$3A,D1                                          ;':'
0002142C <AmiBlitz3.ab3@2569>   MOVEQ.l #$21,D2                                          ;'!'
0002142E <AmiBlitz3.ab3@2570>   MOVEQ.l #$3B,D3                                          ;';'
00021430 <AmiBlitz3.ab3@2571>   MOVEQ.l #$22,D4                                          ;'"'
00021432 <AmiBlitz3.ab3@2574>   MOVE.b (A5)+,D0
00021436 <AmiBlitz3.ab3@2575>    BEQ.w JL_0_3CA0
0002143A <AmiBlitz3.ab3@2576>    BPL.w JL_0_3A60
0002143C <AmiBlitz3.ab3@2577>   MOVE.b (A5)+,D0
00021440 <AmiBlitz3.ab3@2578> BRA.w JL_0_3A50
00021442 <AmiBlitz3.ab3@2581>   CMP.b D4,D0
00021446 <AmiBlitz3.ab3@2582>    BNE.w JL_0_3A82
00021448 <AmiBlitz3.ab3@2585>   MOVE.b (A5)+,D0
0002144C <AmiBlitz3.ab3@2586>    BEQ.w notqerr
00021450 <AmiBlitz3.ab3@2592>   CMP.b #$22,D0
00021454 <AmiBlitz3.ab3@2593>    BNE.w JL_0_3A66
00021458 <AmiBlitz3.ab3@2594> BRA.w JL_0_3A50
0002145A <AmiBlitz3.ab3@2597>   CMP.b D1,D0
0002145E <AmiBlitz3.ab3@2598>    BEQ.w JL_0_3CA0
00021460 <AmiBlitz3.ab3@2599>   CMP.b D3,D0
00021464 <AmiBlitz3.ab3@2600>    BEQ.w JL_0_3CA0
00021466 <AmiBlitz3.ab3@2603>   CMP.b D2,D0
0002146A <AmiBlitz3.ab3@2604>    BNE.w JL_0_3A50
00021472 <AmiBlitz3.ab3@2605>   MOVE.w #$FFFF,inmacro                                    ; no runtimecheck in macros
00021474 <AmiBlitz3.ab3@2606>   MOVEA.l A5,A3
0002147A <AmiBlitz3.ab3@2607>    JSR getparameter2
0002147E <AmiBlitz3.ab3@2608>    BNE.w JL_0_3AAC
00021484 <AmiBlitz3.ab3@2609> JMP syntaxerr
0002148E <AmiBlitz3.ab3@2614>    MOVE.w oldqflag,instringon
00021494 <AmiBlitz3.ab3@2615>   MOVEA.l lastsourcepos,A5
0002149A <AmiBlitz3.ab3@2616>    JSR findmac                                             ;find macro
0002149E <AmiBlitz3.ab3@2617>    BEQ.w JL_0_3ABE
000214A4 <AmiBlitz3.ab3@2618> JMP nomacerr
000214AA <AmiBlitz3.ab3@2621>   TST.b debugmode
000214AE <AmiBlitz3.ab3@2622>   BEQ 'sk1
000214B2 <AmiBlitz3.ab3@2623>   MOVE.w #$4e71,d1
000214B8 <AmiBlitz3.ab3@2624>   JSR writeword
000214BA <AmiBlitz3.ab3@2625>   MOVE.l a5,-(a7)
000214BC <AmiBlitz3.ab3@2626>   MOVE.l a3,a5
000214BE <AmiBlitz3.ab3@2627>   SUBQ.l #1,a5
000214C6 <AmiBlitz3.ab3@2628>   MOVE.w #$0,inmacro
000214CA <AmiBlitz3.ab3@2629>   BSR debugstuffa
000214D2 <AmiBlitz3.ab3@2630>   MOVE.w #$FFFF,inmacro
000214D4 <AmiBlitz3.ab3@2631>   MOVE.l (a7)+,a5
000214D8 <AmiBlitz3.ab3@2632>   MOVE.w #$4e71,d1
000214DE <AmiBlitz3.ab3@2633>   JSR writeword
000214E0 <AmiBlitz3.ab3@2636>   MOVEA.l A5,A4
000214E4 <AmiBlitz3.ab3@2639>    CMP.b #" ",(a4)+
000214E8 <AmiBlitz3.ab3@2640>     BEQ 'l5a
000214EA <AmiBlitz3.ab3@2641>      SUBQ.l#1,a4
000214EE <AmiBlitz3.ab3@2642>      CMP.b #",",(a4)
000214F2 <AmiBlitz3.ab3@2643>     BEQ JL_0_3AEA
000214F4 <AmiBlitz3.ab3@2646>   MOVEQ.l #$00,D4
000214FA <AmiBlitz3.ab3@2647>   TST.b newsyntax
000214FE <AmiBlitz3.ab3@2648>   BEQ 'l10b
00021502 <AmiBlitz3.ab3@2649>   MOVEM.l a0/d0,-(a7)
00021506 <AmiBlitz3.ab3@2650>   MOVE.l 4(a2),a0
0002150A <AmiBlitz3.ab3@2651>   MOVE.w 8(a2),d0
0002150E <AmiBlitz3.ab3@2654>   CMP.b #"`",(a0)+
00021512 <AmiBlitz3.ab3@2655>   BEQ 'x1
00021514 <AmiBlitz3.ab3@2656>   SUBQ.w #1,d0
00021518 <AmiBlitz3.ab3@2657>   BNE 'x2
0002151C <AmiBlitz3.ab3@2658> BRA 'x3
00021520 <AmiBlitz3.ab3@2661>   MOVEM.l (a7)+,a0/d0
00021524 <AmiBlitz3.ab3@2662> BRA 'l10
00021528 <AmiBlitz3.ab3@2665>   MOVEM.l (a7)+,a0/d0
0002152C <AmiBlitz3.ab3@2666> BRA JL_0_3AEA
00021530 <AmiBlitz3.ab3@2669>   CMPI.b #"{",(A4)
00021534 <AmiBlitz3.ab3@2670>    BNE.w JL_0_3AEA
00021536 <AmiBlitz3.ab3@2674>   ADDQ.l #1,a4
0002153A <AmiBlitz3.ab3@2677>     CMP.b #" ",(a4)
0002153E <AmiBlitz3.ab3@2678>     BEQ 'l5
00021542 <AmiBlitz3.ab3@2679>     MOVEM.l a0/d0,-(a7)
00021548 <AmiBlitz3.ab3@2680>     CLR.b exmac
0002154E <AmiBlitz3.ab3@2681>     LEA chartab,a0
00021550 <AmiBlitz3.ab3@2682>     MOVEQ #0,d0
00021552 <AmiBlitz3.ab3@2683>     MOVE.b (a4),d0
00021556 <AmiBlitz3.ab3@2684>     BMI 'm1
0002155A <AmiBlitz3.ab3@2685>     TST.b 0(a0,d0)
0002155E <AmiBlitz3.ab3@2686>     BEQ 'm1
00021564 <AmiBlitz3.ab3@2687>     TST.b newsyntax
00021568 <AmiBlitz3.ab3@2688>     BEQ 'ns1
0002156C <AmiBlitz3.ab3@2689>     CMP.b #"#",d0
00021570 <AmiBlitz3.ab3@2690>     BEQ 'm1
00021574 <AmiBlitz3.ab3@2691>     CMP.b #"$",d0
00021578 <AmiBlitz3.ab3@2692>     BEQ 'm1
0002157C <AmiBlitz3.ab3@2693>     CMP.b #"-",d0
00021580 <AmiBlitz3.ab3@2694>     BEQ 'm1
00021584 <AmiBlitz3.ab3@2697>   CMP.b #",",d0
00021588 <AmiBlitz3.ab3@2698>     BEQ 'm1
0002158C <AmiBlitz3.ab3@2699>     CMP.b #"{",d0
00021590 <AmiBlitz3.ab3@2700>     BNE 'm1b
00021592 <AmiBlitz3.ab3@2701>     ADDQ.l #1,a4
00021596 <AmiBlitz3.ab3@2702> BRA 'm1
0002159C <AmiBlitz3.ab3@2705>   TST.b newsyntax
000215A0 <AmiBlitz3.ab3@2706>     BEQ 'm1
000215A8 <AmiBlitz3.ab3@2707>     MOVE.b #1,exmac
000215AC <AmiBlitz3.ab3@2710>   MOVEM.l (a7)+,a0/d0
000215B2 <AmiBlitz3.ab3@2711>     TST.b exmac
000215B6 <AmiBlitz3.ab3@2712>     BNE JL_0_3AEA
000215B8 <AmiBlitz3.ab3@2719>   TST.b (a4)
000215BC <AmiBlitz3.ab3@2720>   BEQ JL_0_3AEA
000215C2 <AmiBlitz3.ab3@2723>   MOVEA.l ptr_macrobuffer_begin,A0
000215C4 <AmiBlitz3.ab3@2726>   ADDQ.w #1,D4
000215C6 <AmiBlitz3.ab3@2727>   MOVE.l A4,(A0)
000215CA <AmiBlitz3.ab3@2728>   CLR.w 4(a0)
000215CE <AmiBlitz3.ab3@2729>    BSR.w JL_0_3CC6
000215D0 <AmiBlitz3.ab3@2731>   ADDQ.l #4,a0
000215D2 <AmiBlitz3.ab3@2735>   SUBQ.w #1,(a0)+
000215D6 <AmiBlitz3.ab3@2736>   CMP.b #$7D,D0
000215DA <AmiBlitz3.ab3@2737>   BEQ 'l10
000215DC <AmiBlitz3.ab3@2738>   TST.b d0
000215E0 <AmiBlitz3.ab3@2739>   BEQ 'l10
000215E4 <AmiBlitz3.ab3@2740> BRA JL_0_3AD0
000215EA <AmiBlitz3.ab3@2744>   CLR.l sourceline3
000215EC <AmiBlitz3.ab3@2745>   MOVEA.l A4,A5
000215F2 <AmiBlitz3.ab3@2748>   MOVE.w D4,numarg
000215F8 <AmiBlitz3.ab3@2755>   MOVE.l #$01,D1
000215FE <AmiBlitz3.ab3@2756>   MOVEA.l _execbase,A6
00021604 <AmiBlitz3.ab3@2757>   MOVE.l mempool,a0
0002160A <AmiBlitz3.ab3@2758>   MOVE.l macrobuffer_size,D0
00021610 <AmiBlitz3.ab3@2759>   CMP.l #DEFAULT_MACROBUFFERSIZE,d0                          ; replaced with a constant tomsmart1
00021614 <AmiBlitz3.ab3@2760>   BGE 'l1m
0002161A <AmiBlitz3.ab3@2761>   MOVE.l #DEFAULT_MACROBUFFERSIZE,d0                         ; replaced with a constant tomsmart1
00021620 <AmiBlitz3.ab3@2762>   MOVE.l d0,macrobuffer_size
00021624 <AmiBlitz3.ab3@2765>   JSR _AllocPooled(a6)
0002162E <AmiBlitz3.ab3@2767>   MOVE.l myline,myoline
00021630 <AmiBlitz3.ab3@2770>   ADDQ.l #1,d0
00021636 <AmiBlitz3.ab3@2771>   MOVE.l D0,myline
00021638 <AmiBlitz3.ab3@2772>   MOVEA.l D0,A1
0002163E <AmiBlitz3.ab3@2773>   MOVE.b #":",-1(a1)
00021640 <AmiBlitz3.ab3@2774>   MOVEA.l A1,A6
00021646 <AmiBlitz3.ab3@2775>   ADDA.l macrobuffer_size,A6
00021648 <AmiBlitz3.ab3@2776>   MOVEA.l (A7)+,A0
0002164A <AmiBlitz3.ab3@2779>   CMPA.l A6,A1
0002164E <AmiBlitz3.ab3@2780>    BCC.w mbovererr
00021650 <AmiBlitz3.ab3@2781>   MOVE.b (A0)+,(a1)+
00021652 <AmiBlitz3.ab3@2782>   CMPA.l A3,A0
00021656 <AmiBlitz3.ab3@2783>    BCS.w JL_0_3B1E
00021658 <AmiBlitz3.ab3@2784>   SUBQ.w #1,A1
0002165C <AmiBlitz3.ab3@2785>   MOVE.w $8(A2),D1
00021660 <AmiBlitz3.ab3@2786>    BEQ.w JL_0_3C70
00021668 <AmiBlitz3.ab3@2787>   MOVE.w $A(A2),macnum
0002166C <AmiBlitz3.ab3@2788>   ADDQ.w #1,$A(A2)
00021670 <AmiBlitz3.ab3@2789>   MOVEA.l $4(A2),A2
00021672 <AmiBlitz3.ab3@2790>   SUBQ.w #1,D1
00021678 <AmiBlitz3.ab3@2791>   CLR.b firstmline
0002167A <AmiBlitz3.ab3@2794>     MOVEQ.l #$00,D0
0002167C <AmiBlitz3.ab3@2795>     MOVE.b (A2)+,D0
00021682 <AmiBlitz3.ab3@2796>     TST.b firstmline
00021686 <AmiBlitz3.ab3@2797>     BNE 'c1
0002168A <AmiBlitz3.ab3@2798>     CMP.b #$22,d0
0002168E <AmiBlitz3.ab3@2799>     BNE 's1
00021696 <AmiBlitz3.ab3@2800>     MOVE.b #1,firstmline
0002169A <AmiBlitz3.ab3@2803>     CMP.b #":",d0
0002169E <AmiBlitz3.ab3@2804>     BNE 'm1
000216A6 <AmiBlitz3.ab3@2805>     MOVE.b #1,firstmline
000216AA <AmiBlitz3.ab3@2808>     CMP.b #";",d0
000216AE <AmiBlitz3.ab3@2809>     BNE 'c1
000216B0 <AmiBlitz3.ab3@2812>     SUBQ.w #1,d1                                           ;filter out comment
000216B2 <AmiBlitz3.ab3@2813>     MOVE.b (a2)+,d0
000216B8 <AmiBlitz3.ab3@2814>     CMP.w #":@",-1(a2)
000216BC <AmiBlitz3.ab3@2815>     BEQ 'c2
000216BE <AmiBlitz3.ab3@2816>     TST.w d1
000216C2 <AmiBlitz3.ab3@2817>     BNE 'l1
000216C6 <AmiBlitz3.ab3@2818>   BRA JL_0_3C6C
000216CC <AmiBlitz3.ab3@2821>     CMP.b #":",1(a2)
000216D0 <AmiBlitz3.ab3@2822>       BNE 'l1
000216D2 <AmiBlitz3.ab3@2823>       ADDQ #2,a2
000216D4 <AmiBlitz3.ab3@2824>       SUBQ #3,d1
000216D6 <AmiBlitz3.ab3@2825>       MOVE.b (a2)+,d0
000216DE <AmiBlitz3.ab3@2826>       MOVE.b #1,firstmline
000216E2 <AmiBlitz3.ab3@2829>     CMP.b #"`",D0
000216E6 <AmiBlitz3.ab3@2830>      BNE.w JL_0_3C56
000216E8 <AmiBlitz3.ab3@2831>     SUBQ.w #1,D1
000216EA <AmiBlitz3.ab3@2832>     MOVE.b (A2)+,D0
000216EE <AmiBlitz3.ab3@2833>     CMP.w #$7B,D0
000216F2 <AmiBlitz3.ab3@2834>      BEQ.w JL_0_3BB6
000216F6 <AmiBlitz3.ab3@2835>     CMP.w #$40,D0
000216FA <AmiBlitz3.ab3@2836>      BNE.w JL_0_3B82
000216FC <AmiBlitz3.ab3@2837>     MOVEQ.l #$00,D2
00021702 <AmiBlitz3.ab3@2838>     MOVE.w macnum,D2
00021704 <AmiBlitz3.ab3@2839>     MOVEA.l A1,A0
00021706 <AmiBlitz3.ab3@2840>     MOVE.w D1,-(A7)
0002170C <AmiBlitz3.ab3@2841>      JSR makelong
0002170E <AmiBlitz3.ab3@2842>     MOVEA.l A0,A1
00021710 <AmiBlitz3.ab3@2843>     MOVE.w (A7)+,D1
00021714 <AmiBlitz3.ab3@2844>   BRA.w JL_0_3C6C
00021718 <AmiBlitz3.ab3@2847>     ORI.w #$20,D0
0002171C <AmiBlitz3.ab3@2848>     CMP.w #$7A,D0
00021720 <AmiBlitz3.ab3@2849>      BCS.w JL_0_3B94
00021726 <AmiBlitz3.ab3@2850>   JMP ilconsterr
0002172A <AmiBlitz3.ab3@2853>     SUBI.w #$30,D0
0002172E <AmiBlitz3.ab3@2854>     CMP.w #$A,D0
00021732 <AmiBlitz3.ab3@2855>      BCS.w JL_0_3BF2
00021736 <AmiBlitz3.ab3@2856>     SUBI.w #$27,D0
0002173A <AmiBlitz3.ab3@2857>     CMP.w #$A,D0
0002173E <AmiBlitz3.ab3@2858>      BCC.w JL_0_3BB2
00021744 <AmiBlitz3.ab3@2859>   JMP ilconsterr
00021748 <AmiBlitz3.ab3@2862>   BRA.w JL_0_3BF2
0002174A <AmiBlitz3.ab3@2865>     MOVE.l A5,-(A7)
0002174E <AmiBlitz3.ab3@2866>     MOVEM.l D1/A1-A2/A6,-(A7)
00021750 <AmiBlitz3.ab3@2867>     MOVEA.l A2,A5
00021756 <AmiBlitz3.ab3@2868>      JSR AJL_0_BF6E
0002175A <AmiBlitz3.ab3@2869>     CMP.w #$7D,D0
0002175E <AmiBlitz3.ab3@2870>      BEQ.w JL_0_3BD2
00021764 <AmiBlitz3.ab3@2871>   JMP syntaxerr
00021768 <AmiBlitz3.ab3@2874>     MOVEM.l (A7)+,D1/A1-A2/A6
0002176A <AmiBlitz3.ab3@2875>     MOVE.l A5,D2
0002176C <AmiBlitz3.ab3@2876>     SUB.l A2,D2
0002176E <AmiBlitz3.ab3@2877>     SUB.w D2,D1
00021770 <AmiBlitz3.ab3@2878>     MOVEA.l A5,A2
00021776 <AmiBlitz3.ab3@2879>     CLR.w instringon
00021778 <AmiBlitz3.ab3@2880>     MOVEA.l (A7)+,A5
0002177A <AmiBlitz3.ab3@2881>     MOVE.l D3,D0
0002177E <AmiBlitz3.ab3@2882>     BPL.w JL_0_3BF2
00021784 <AmiBlitz3.ab3@2883>   JMP ilconsterr
00021786 <AmiBlitz3.ab3@2886>     SUBQ.w #1,D0
0002178A <AmiBlitz3.ab3@2887>      BPL.w JL_0_3C20
00021790 <AmiBlitz3.ab3@2891>     MOVE.w numarg,D0
00021794 <AmiBlitz3.ab3@2892>     DIVU #$A,D0
00021798 <AmiBlitz3.ab3@2893>     ADDI.w #$30,D0
0002179A <AmiBlitz3.ab3@2894>     CMPA.l A6,A1
0002179E <AmiBlitz3.ab3@2895>      BCC.w mbovererr
000217A0 <AmiBlitz3.ab3@2896>     MOVE.b D0,(A1)+
000217A2 <AmiBlitz3.ab3@2897>     SWAP D0
000217A6 <AmiBlitz3.ab3@2898>     ADDI.w #$30,D0
000217A8 <AmiBlitz3.ab3@2899>     CMPA.l A6,A1
000217AC <AmiBlitz3.ab3@2900>      BCC.w mbovererr
000217AE <AmiBlitz3.ab3@2901>     MOVE.b D0,(A1)+
000217B2 <AmiBlitz3.ab3@2902>   BRA.w JL_0_3C6C
000217B8 <AmiBlitz3.ab3@2908>     CMP.w numarg,D0
000217BC <AmiBlitz3.ab3@2909>      BCC.w JL_0_3C6C
000217BE <AmiBlitz3.ab3@2910>     LSL.w #1,D0
000217C0 <AmiBlitz3.ab3@2911>     MOVE.w D0,D4
000217C2 <AmiBlitz3.ab3@2912>     LSL.w #1,D0
000217C4 <AmiBlitz3.ab3@2913>     ADD.w D4,D0
000217CA <AmiBlitz3.ab3@2914>     MOVEA.l ptr_macrobuffer_begin,A0
000217CC <AmiBlitz3.ab3@2915>     ADDA.w D0,A0
000217D0 <AmiBlitz3.ab3@2916>     MOVE.w $4(A0),D4
000217D4 <AmiBlitz3.ab3@2917>      BEQ.w JL_0_3C6C
000217D6 <AmiBlitz3.ab3@2918>     MOVEA.l (A0),A0
000217D8 <AmiBlitz3.ab3@2919>     SUBQ.w #1,D4
000217DA <AmiBlitz3.ab3@2922>       CMPA.l A6,A1
000217DE <AmiBlitz3.ab3@2923>        BCC.w mbovererr
000217E2 <AmiBlitz3.ab3@2924>       CMP.w #"@@",(a0)
000217E6 <AmiBlitz3.ab3@2925>        BNE 'l10
000217EC <AmiBlitz3.ab3@2926>       TST.w ininclude
000217F0 <AmiBlitz3.ab3@2927>        BNE errorjoin
000217F6 <AmiBlitz3.ab3@2930>       MOVE.l sourceline,a0
000217F8 <AmiBlitz3.ab3@2931>       MOVE.l (a0),a0
000217FE <AmiBlitz3.ab3@2932>       CMP.l #0,a0
00021802 <AmiBlitz3.ab3@2933>       BNE 'l11
00021804 <AmiBlitz3.ab3@2934>       MOVEQ #0,d0
0002180A <AmiBlitz3.ab3@2935>       JSR error
00021810 <AmiBlitz3.ab3@2938>       MOVE.l a0,sourceline
00021816 <AmiBlitz3.ab3@2939>       ADDQ.l #1,linenumat
0002181A <AmiBlitz3.ab3@2940>       LEA 9(a0),a0
0002181C <AmiBlitz3.ab3@2941>       MOVE.l a0,-(a7)
00021820 <AmiBlitz3.ab3@2944>       CMP.b #" ",(a0)+
00021824 <AmiBlitz3.ab3@2945>        BEQ 'l110
0002182A <AmiBlitz3.ab3@2946>       CMP.b #";",-1(a0)
0002182C <AmiBlitz3.ab3@2947>       MOVE.l (a7)+,a0
00021830 <AmiBlitz3.ab3@2948>        BEQ 'l111
00021832 <AmiBlitz3.ab3@2949>       SUBQ.l #1,d4
00021834 <AmiBlitz3.ab3@2952>       MOVE.b (A0)+,(A1)+
00021838 <AmiBlitz3.ab3@2953>     DBF D4,JL_0_3C46
0002183C <AmiBlitz3.ab3@2955>   BRA.w JL_0_3C6C
0002183E <AmiBlitz3.ab3@2958>     CMPA.l A6,A1
00021842 <AmiBlitz3.ab3@2959>      BCC.w mbovererr
00021844 <AmiBlitz3.ab3@2960>     MOVE.b D0,(A1)+
00021848 <AmiBlitz3.ab3@2961>      BPL.w JL_0_3C6C
0002184A <AmiBlitz3.ab3@2962>     CMPA.l A6,A1
0002184E <AmiBlitz3.ab3@2963>      BCC.w mbovererr
00021850 <AmiBlitz3.ab3@2964>     MOVE.b (A2)+,(A1)+
00021852 <AmiBlitz3.ab3@2965>     SUBQ.w #1,D1
00021856 <AmiBlitz3.ab3@2968>   DBF D1,JL_0_3B48
00021858 <AmiBlitz3.ab3@2978>   CMPA.l A6,A1
0002185C <AmiBlitz3.ab3@2979>    BCC.w mbovererr
0002185E <AmiBlitz3.ab3@2980>   MOVE.b (A5)+,(A1)+
00021862 <AmiBlitz3.ab3@2981>    BNE.w JL_0_3C70
00021868 <AmiBlitz3.ab3@2982>   MOVEA.l myline,A5
0002186E <AmiBlitz3.ab3@2983>   MOVE.l myoline,D0
00021872 <AmiBlitz3.ab3@2984>    BEQ.w JL_0_3C9C
00021874 <AmiBlitz3.ab3@2985>   SUBQ.l #1,d0
00021876 <AmiBlitz3.ab3@2986>   MOVEA.l D0,A1
0002187C <AmiBlitz3.ab3@2987>   MOVE.l macrobuffer_size,D0
00021882 <AmiBlitz3.ab3@2988>   MOVEA.l _execbase,A6
00021888 <AmiBlitz3.ab3@2989>   MOVE.l mempool,a0
0002188C <AmiBlitz3.ab3@2990>   JSR _FreePooled(A6)
00021890 <AmiBlitz3.ab3@2993> BRA.w JL_0_3A46
00021892 <AmiBlitz3.ab3@2996>   MOVEA.l (A7)+,A5
00021894 <AmiBlitz3.ab3@2997> RTS
0002189A <AmiBlitz3.ab3@3001>   MOVE.l myline,D0
0002189E <AmiBlitz3.ab3@3002>   BEQ.w JL_0_3CC4
000218A0 <AmiBlitz3.ab3@3003>   SUBQ.l #1,d0
000218A6 <AmiBlitz3.ab3@3004>   CLR.l myline
000218A8 <AmiBlitz3.ab3@3005>   MOVEA.l D0,A1
000218AE <AmiBlitz3.ab3@3006>   MOVE.l macrobuffer_size,D0
000218B4 <AmiBlitz3.ab3@3007>   MOVEA.l _execbase,A6
000218BA <AmiBlitz3.ab3@3008>   MOVE.l mempool,a0
000218BE <AmiBlitz3.ab3@3009> JMP _FreePooled(A6)
000218C0 <AmiBlitz3.ab3@3012> RTS
000218C2 <AmiBlitz3.ab3@3016>   MOVEQ.l #$00,D2
000218C6 <AmiBlitz3.ab3@3019>   ADDQ.w #1,4(a0)
000218C8 <AmiBlitz3.ab3@3020>    MOVE.b (A4)+,D0
000218CC <AmiBlitz3.ab3@3022>    BEQ exit1
000218D0 <AmiBlitz3.ab3@3023>    BPL.w JL_0_3CD8
000218D4 <AmiBlitz3.ab3@3024>   ADDQ.w #1,4(a0)
000218D6 <AmiBlitz3.ab3@3025>   ADDQ.w #1,A4
000218DA <AmiBlitz3.ab3@3026> BRA.w JL_0_3CC8
000218E0 <AmiBlitz3.ab3@3029>    TST.w instringon
000218E4 <AmiBlitz3.ab3@3030>    BNE 'lnom
000218E8 <AmiBlitz3.ab3@3031>    CMP.b #";",d0
000218EC <AmiBlitz3.ab3@3032>    BEQ exit2
000218F0 <AmiBlitz3.ab3@3033>    CMP.b #":",d0
000218F4 <AmiBlitz3.ab3@3034>    BEQ exit2
000218F8 <AmiBlitz3.ab3@3037>   CMP.b #$22,D0
000218FC <AmiBlitz3.ab3@3038>    BNE.w JL_0_3CEA
00021902 <AmiBlitz3.ab3@3039>   NOT.w instringon
00021906 <AmiBlitz3.ab3@3040> BRA.w JL_0_3CC8
0002190C <AmiBlitz3.ab3@3044>   TST.w instringon
00021910 <AmiBlitz3.ab3@3045>    BNE.w JL_0_3CC8
00021914 <AmiBlitz3.ab3@3046>    CMP.b #"@",d0
00021918 <AmiBlitz3.ab3@3047>    BNE 'l10
0002191C <AmiBlitz3.ab3@3048>    CMP.b #"@",(a4)
00021920 <AmiBlitz3.ab3@3049>    BNE 'l10
00021926 <AmiBlitz3.ab3@3050>    TST.w ininclude
0002192A <AmiBlitz3.ab3@3051>    BNE errorjoin
00021930 <AmiBlitz3.ab3@3052>    MOVE.l sourceline3,a4
00021936 <AmiBlitz3.ab3@3053>    CMP.l #0,a4
0002193A <AmiBlitz3.ab3@3054>    BNE 'l11
00021940 <AmiBlitz3.ab3@3055>    MOVE.l sourceline,a4
00021942 <AmiBlitz3.ab3@3058>   MOVE.l (a4),a4
00021948 <AmiBlitz3.ab3@3059>       CMP.l #0,a4
0002194C <AmiBlitz3.ab3@3060>       BNE 'l12
0002194E <AmiBlitz3.ab3@3061>       MOVEQ #0,d0
00021954 <AmiBlitz3.ab3@3062>       JSR error
0002195A <AmiBlitz3.ab3@3065>    MOVE.l a4,sourceline3
0002195E <AmiBlitz3.ab3@3066>    LEA 9(a4),a4
00021960 <AmiBlitz3.ab3@3067>    MOVEQ #",",d0
00021964 <AmiBlitz3.ab3@3070>   CMP.b #$2C,D0
00021968 <AmiBlitz3.ab3@3071>    BNE.w JL_0_3D06
0002196A <AmiBlitz3.ab3@3072>   TST.w D2
0002196E <AmiBlitz3.ab3@3073>    BEQ.w JL_0_3D30
00021972 <AmiBlitz3.ab3@3074> BRA.w JL_0_3CC8
00021976 <AmiBlitz3.ab3@3078>    CMP.b #$7B,D0                                           ;"{"
0002197A <AmiBlitz3.ab3@3079>    BEQ.w 'l10
0002197E <AmiBlitz3.ab3@3080>   CMP.b #$28,D0                                            ;"("
00021982 <AmiBlitz3.ab3@3083>    BNE.w JL_0_3D14
00021984 <AmiBlitz3.ab3@3084>   ADDQ.w #1,D2
00021988 <AmiBlitz3.ab3@3085> BRA.w JL_0_3CC8
0002198C <AmiBlitz3.ab3@3088>   CMP.b #$7D,D0                                           ;"}"
00021990 <AmiBlitz3.ab3@3089>    BNE.w JL_0_3D22
00021992 <AmiBlitz3.ab3@3090>  TST.w D2
00021996 <AmiBlitz3.ab3@3091>    BEQ.w JL_0_3D30
0002199A <AmiBlitz3.ab3@3095>    CMP.b #$7D,D0                                           ;"}"
0002199E <AmiBlitz3.ab3@3096>    BEQ.w 'l10
000219A2 <AmiBlitz3.ab3@3097>   CMP.b #$29,D0                                            ;")"
000219A6 <AmiBlitz3.ab3@3100>    BNE.w JL_0_3CC8
000219A8 <AmiBlitz3.ab3@3101>   SUBQ.w #1,D2
000219AC <AmiBlitz3.ab3@3102> BRA.w JL_0_3CC8
000219AE <AmiBlitz3.ab3@3105> RTS
000219B0 <AmiBlitz3.ab3@3109>       SUBQ.l #1,a4
000219B6 <AmiBlitz3.ab3@3110>       CLR.l sourceline3
000219B8 <AmiBlitz3.ab3@3111> RTS
000219BA <AmiBlitz3.ab3@3115>       MOVEQ #0,d0
000219BC <AmiBlitz3.ab3@3116>       SUBQ.l #1,a4
000219C2 <AmiBlitz3.ab3@3117>       CLR.l sourceline3
000219C4 <AmiBlitz3.ab3@3118> RTS
000219C8 <AmiBlitz3.ab3@3122>   CMP.b #$7B,D0                                            ;"{"
000219CC <AmiBlitz3.ab3@3123>   BEQ.w JL_0_3D3E
000219D0 <AmiBlitz3.ab3@3124>   CMP.b #$28,D0                                            ;"("
000219D2 <AmiBlitz3.ab3@3127> RTS
000219D6 <AmiBlitz3.ab3@3131>   CMP.b #$7D,D0                                            ;"}"
000219DA <AmiBlitz3.ab3@3132>   BEQ.w JL_0_3D4C
000219DE <AmiBlitz3.ab3@3133>   CMP.b #$29,D0                                            ;")"
000219E0 <AmiBlitz3.ab3@3136> RTS
000219E2 <AmiBlitz3.ab3@3140> stopit:     Ds.w 1
000219E4 <AmiBlitz3.ab3@3141> clrreq:     Ds.w 1
000219E8 <AmiBlitz3.ab3@3162>   MOVE.w clrreq(PC),D0
000219EC <AmiBlitz3.ab3@3163>    BEQ.w close_compilewin__skip
00021A1E <AmiBlitz3.ab3@3165> 
00021A24 <AmiBlitz3.ab3@3167>   LEA clrreq,a0
00021A26 <AmiBlitz3.ab3@3168>   NOT.w (a0)                                               ;reass
00021A2C <AmiBlitz3.ab3@3169>   MOVEA.l ptr_ThisTask,A0
00021A30 <AmiBlitz3.ab3@3170>   CLR.l $1E(A0)
00021A34 <AmiBlitz3.ab3@3171>   CLR.l $2A(A0)
00021A36 <AmiBlitz3.ab3@3174> RTS
00021A38 <AmiBlitz3.ab3@3177> intsused:  Ds.w 1
00021A40 <AmiBlitz3.ab3@3181>   MOVE.w #-1,blitzoff
00021A46 <AmiBlitz3.ab3@3182>   CLR.w intsused
00021A4C <AmiBlitz3.ab3@3183>   CLR.w anyerrs
00021A52 <AmiBlitz3.ab3@3184>   CLR.w blitzmode
00021A58 <AmiBlitz3.ab3@3185>   CLR.w dontwrite                                              ;nomemleft
00021A5E <AmiBlitz3.ab3@3186>   CLR.w constmode
00021A64 <AmiBlitz3.ab3@3187>   CLR.w cmake
00021A6A <AmiBlitz3.ab3@3188>   CLR.w cfetchmode
00021A70 <AmiBlitz3.ab3@3189>   CLR.l intdata1
00021A76 <AmiBlitz3.ab3@3190>   CLR.w fuckpos
00021A7C <AmiBlitz3.ab3@3191>   CLR.w procnum
00021A82 <AmiBlitz3.ab3@3192>   CLR.w procnum2
00021A88 <AmiBlitz3.ab3@3193>   CLR.w dfetch
00021A8E <AmiBlitz3.ab3@3194>   CLR.l titleat
00021A94 <AmiBlitz3.ab3@3195>   CLR.b usedpath
00021A9A <AmiBlitz3.ab3@3196>   CLR.b path2
00021AA0 <AmiBlitz3.ab3@3197>   CLR.w inerr
00021AA6 <AmiBlitz3.ab3@3198>   CLR.w intlevel
00021AAC <AmiBlitz3.ab3@3199>   CLR.l cont_pc
00021AB2 <AmiBlitz3.ab3@3200>   CLR.l cont_pc2
00021AB8 <AmiBlitz3.ab3@3201>   CLR.l lastcontlink
00021AC2 <AmiBlitz3.ab3@3202>   MOVE.l destbufferstart,destpointer
00021ACC <AmiBlitz3.ab3@3203>   MOVE.l destbufferstart,bigpc
00021AD6 <AmiBlitz3.ab3@3204>   MOVE.l destbufferend,libend
00021AE0 <AmiBlitz3.ab3@3205>   MOVE.l data1start,data1
00021AEA <AmiBlitz3.ab3@3206>   MOVE.l data2at,data2
00021AF2 <AmiBlitz3.ab3@3207>   MOVE.w #-1,skipcode                                      ;#-1,comflag org source
00021AFA <AmiBlitz3.ab3@3208>   MOVE.w #-1,linemode                                      ;#-1,linemode org soruce
00021B00 <AmiBlitz3.ab3@3209>   CLR.w oldvcodelen
00021B06 <AmiBlitz3.ab3@3210>   CLR.b lastgloballabel                                    ;lastbiglab org source
00021B08 <AmiBlitz3.ab3@3211> RTS
00021B0A <AmiBlitz3.ab3@3214> debugmode:  Ds.w 1                                         ;debugga org source ;debugger enabled?
00021B10 <AmiBlitz3.ab3@3218>   LEA  clrreq,a1
00021B14 <AmiBlitz3.ab3@3219>   MOVE.w #2000,(a1)
00021B3E <AmiBlitz3.ab3@3220>   !basic
00021B54 <AmiBlitz3.ab3@3221> 
00021BA4 <AmiBlitz3.ab3@3222>   comstatusstr   = !TRANS{"Initializing Compiler..."} ;default settings
00021BAC <AmiBlitz3.ab3@3223>   calcpro.l      = 0
00021BB4 <AmiBlitz3.ab3@3224>   calcpro_old.l  = 0
00021BC0 <AmiBlitz3.ab3@3225>   typ_old.l      = -1
00021BCC <AmiBlitz3.ab3@3226>   pass_old.l     = -1
00021BD2 <AmiBlitz3.ab3@3227>   update_comstatus_gui.b = True ; for the first
00021C0C <AmiBlitz3.ab3@3229>   GetD0 &comstatusstr : !ComData_SetL{comPtr_CompileStatusString,d0}  ; set pointer of status string for gui tomsmart1 2012 05 12
00021C46 <AmiBlitz3.ab3@3230>   GetD0 &calcpro      : !ComData_SetL{comPtr_CompileCalcProLong ,d0}  ; set pointer of calcpro long for gui tomsmart1 2012 05 12
00021C64 <AmiBlitz3.ab3@3231>   !asm
00021C96 <AmiBlitz3.ab3@3232> 
00021C9C <AmiBlitz3.ab3@3234>   CLR.w stopit
00021C9E <AmiBlitz3.ab3@3235> RTS
00021CA4 <AmiBlitz3.ab3@3239>   CLR.w storedebugmode
00021CAA <AmiBlitz3.ab3@3240>   CLR.b iserror
00021CAE <AmiBlitz3.ab3@3241>   BSR.w compilerequester
00021CB8 <AmiBlitz3.ab3@3243>   MOVE.l #0,globallinecount
00021CBE <AmiBlitz3.ab3@3244>   JSR check_of_same_source
00021CC2 <AmiBlitz3.ab3@3245>   BSR.w call_setpointerbusy
00021CC6 <AmiBlitz3.ab3@3246>   BSR.w setcvars
00021CCE <AmiBlitz3.ab3@3247>   MOVE.w #$8000,globalvarpointer
00021CD8 <AmiBlitz3.ab3@3248>   MOVE.l #newtype_quick,defaulttype
00021CDE <AmiBlitz3.ab3@3249>   MOVE.l A7,passstack
00021CE8 <AmiBlitz3.ab3@3250>   MOVE.l #firstitem_,sourceline
00021CF2 <AmiBlitz3.ab3@3251>   MOVE.w numlines_org,linesleft
00021CFC <AmiBlitz3.ab3@3252>   MOVE.l numlines,numlines2
00021D02 <AmiBlitz3.ab3@3253>   ADDQ.w #1,linesleft
00021D08 <AmiBlitz3.ab3@3254>   ADDQ.l #1,numlines2
00021D12 <AmiBlitz3.ab3@3255>   MOVE.l #-1,linenumat
00021D16 <AmiBlitz3.ab3@3256>   BSR.w resetlibs
00021D1A <AmiBlitz3.ab3@3257>   BSR.w Aclearallvars
00021D20 <AmiBlitz3.ab3@3258>   LEA progress_per_line+2,A0
00021D22 <AmiBlitz3.ab3@3259>   MOVEQ.l #$03,D0
00021D24 <AmiBlitz3.ab3@3262>     CLR.w (A0)+
00021D28 <AmiBlitz3.ab3@3263>   DBF D0,JL_0_40EC
00021D2E <AmiBlitz3.ab3@3266>   LEA _include,a0
00021D32 <AmiBlitz3.ab3@3267>   MOVEM.l a0-a6/d0-d7,-(a7)
00021D38 <AmiBlitz3.ab3@3268>   LEA ptr_parameterstore,a1
00021D3A <AmiBlitz3.ab3@3271>     MOVE.b (a0)+,(a1)+
00021D3E <AmiBlitz3.ab3@3272>   BNE 'l1b
00021D40 <AmiBlitz3.ab3@3274>   MOVEQ #9,d2
00021D46 <AmiBlitz3.ab3@3275>   JSR findlabel2
00021D4A <AmiBlitz3.ab3@3276>   BNE 'd
00021D52 <AmiBlitz3.ab3@3277>   MOVE.l #0,8(a2)
00021D56 <AmiBlitz3.ab3@3278>   MOVEM.l (a7)+,a0-a6/d0-d7
00021D5A <AmiBlitz3.ab3@3279> BRA 'd2
00021D60 <AmiBlitz3.ab3@3282>   JSR addlabelhash
00021D68 <AmiBlitz3.ab3@3283>   MOVE.l #$1,$4(A2)
00021D70 <AmiBlitz3.ab3@3284>   MOVE.l #0,8(a2)
00021D74 <AmiBlitz3.ab3@3285>   MOVEM.l (a7)+,a0-a6/d0-d7
00021D7A <AmiBlitz3.ab3@3288>   LEA _debug,a0
00021D7E <AmiBlitz3.ab3@3289>   MOVEM.l a0-a6/d0-d7,-(a7)
00021D84 <AmiBlitz3.ab3@3290>   LEA ptr_parameterstore,a1
00021D86 <AmiBlitz3.ab3@3293>     MOVE.b (a0)+,(a1)+
00021D8A <AmiBlitz3.ab3@3294>   BNE 'l9b
00021D8C <AmiBlitz3.ab3@3296>   MOVEQ #7,d2
00021D92 <AmiBlitz3.ab3@3297>   JSR findlabel2
00021D96 <AmiBlitz3.ab3@3298>   BNE 'd9
00021D9A <AmiBlitz3.ab3@3299>   MOVE.b debugmode(PC),D0
00021D9C <AmiBlitz3.ab3@3300>   EXT.w d0
00021D9E <AmiBlitz3.ab3@3301>   EXT.l d0
00021DA2 <AmiBlitz3.ab3@3302>   MOVE.l d0,8(a2)
00021DA6 <AmiBlitz3.ab3@3303>   MOVEM.l (a7)+,a0-a6/d0-d7
00021DAA <AmiBlitz3.ab3@3304> BRA 'd9b
00021DB0 <AmiBlitz3.ab3@3307>   JSR addlabelhash
00021DB8 <AmiBlitz3.ab3@3308>   MOVE.l #$1,$4(A2)
00021DBC <AmiBlitz3.ab3@3309>   MOVE.b debugmode(PC),D0
00021DBE <AmiBlitz3.ab3@3310>   EXT.w d0
00021DC0 <AmiBlitz3.ab3@3311>   EXT.l d0
00021DC4 <AmiBlitz3.ab3@3312>   MOVE.l d0,8(a2)
00021DC8 <AmiBlitz3.ab3@3313>   MOVEM.l (a7)+,a0-a6/d0-d7
00021DCE <AmiBlitz3.ab3@3316>   MOVE.l #firstitem_,a0
00021DD0 <AmiBlitz3.ab3@3317>   MOVE.l (a0),a0
00021DD4 <AmiBlitz3.ab3@3318>   LEA 9(a0),a0
00021DDC <AmiBlitz3.ab3@3319>   MOVE.w #0,exdebug
00021DE2 <AmiBlitz3.ab3@3320>   TST.b debugmode
00021DE6 <AmiBlitz3.ab3@3321>    BEQ 'l10
00021DE8 <AmiBlitz3.ab3@3324>   MOVE.b (a0)+,d0
00021DEC <AmiBlitz3.ab3@3325>    BEQ 'l10
00021DF0 <AmiBlitz3.ab3@3326>   CMP.b #$20,d0
00021DF4 <AmiBlitz3.ab3@3327>    BEQ 'l2
00021DF6 <AmiBlitz3.ab3@3328>   SUBQ.l #1,a0
00021DFC <AmiBlitz3.ab3@3329>   CMP.l #"DEBU",(a0)
00021E00 <AmiBlitz3.ab3@3330>    BNE 'l10
00021E06 <AmiBlitz3.ab3@3331>   CMP.b #"G",4(a0)
00021E0A <AmiBlitz3.ab3@3332>    BNE 'l10
00021E12 <AmiBlitz3.ab3@3333>   MOVE.w #$0,debugversion
00021E1A <AmiBlitz3.ab3@3334>   MOVE.b #1,exdebug
00021E20 <AmiBlitz3.ab3@3337>   LEA nops4,A0
00021E26 <AmiBlitz3.ab3@3338>   LEA dataget,A1
00021E2C <AmiBlitz3.ab3@3339>   JSR pokecode2                                            ;write intro nops
00021E32 <AmiBlitz3.ab3@3340>   MOVE.l #$01010101,d1
00021E38 <AmiBlitz3.ab3@3341>   JSR writedatalong                                        ;for the 4 tempregs
00021E3E <AmiBlitz3.ab3@3342>   JSR writedatalong
00021E44 <AmiBlitz3.ab3@3343>   JSR writedatalong
00021E4A <AmiBlitz3.ab3@3344>   JSR writedatalong
00021E50 <AmiBlitz3.ab3@3345>   TST.b saved0
00021E54 <AmiBlitz3.ab3@3346>    BEQ 'l1
00021E5A <AmiBlitz3.ab3@3347>   MOVE.l #$4e714e71,d1
00021E60 <AmiBlitz3.ab3@3348>   JSR writelong                                            ;add 2 nops
00021E66 <AmiBlitz3.ab3@3349>   MOVE.l #$4e714e71,d1
00021E6C <AmiBlitz3.ab3@3350>   JSR writelong                                            ;add 2 nops
00021E72 <AmiBlitz3.ab3@3351>   MOVE.l #$4e714e71,d1
00021E78 <AmiBlitz3.ab3@3352>   JSR writelong                                            ;add 2 nops
00021E7E <AmiBlitz3.ab3@3353>    MOVE.l #$4e714e71,d1
00021E84 <AmiBlitz3.ab3@3354>   JSR writelong                                            ;add 2 nops
00021E88 <AmiBlitz3.ab3@3357>   MOVE.b debugmode(PC),D1
00021E8C <AmiBlitz3.ab3@3358>    BEQ.b JL_0_4132
00021E96 <AmiBlitz3.ab3@3359>   MOVE.b debugmode,storedebugmode
00021E9A <AmiBlitz3.ab3@3360>   MOVE.w #$FFDC,D1
00021E9E <AmiBlitz3.ab3@3361>    BSR.w uselib
00021EA4 <AmiBlitz3.ab3@3362>   TST.w debugversion                                       ;make a version for debugger
00021EA8 <AmiBlitz3.ab3@3363>    BNE.b JL_0_412A
00021EAC <AmiBlitz3.ab3@3367>   MOVE.w #$FA3C,D1
00021EB0 <AmiBlitz3.ab3@3368>    BSR.w uselib
00021EB4 <AmiBlitz3.ab3@3369>   MOVE.w #$0001,D1
00021EB8 <AmiBlitz3.ab3@3370>    BSR.w uselib
00021EBC <AmiBlitz3.ab3@3371> BRA.b JL_0_4132
00021EC0 <AmiBlitz3.ab3@3374>   MOVE.w #$FA32,D1
00021EC4 <AmiBlitz3.ab3@3375>   BSR.w uselib
00021EC8 <AmiBlitz3.ab3@3378>   BSR.w nextline
00021ECE <AmiBlitz3.ab3@3379>   CLR.l linenum
00021ED4 <AmiBlitz3.ab3@3380>   CLR.l stacktrack
00021EDA <AmiBlitz3.ab3@3383>   ADDQ.l #1,linenum
00021EE4 <AmiBlitz3.ab3@3384>   MOVE.l destpointer,destpointer2
00021EEA <AmiBlitz3.ab3@3385>   MOVE.l a5,sourceline2
00021EEE <AmiBlitz3.ab3@3386>   BSR.w compile_line                                        ;compile pass
00021EF2 <AmiBlitz3.ab3@3389>   BSR.w nextline
00021EF6 <AmiBlitz3.ab3@3390>    BNE.w JL_0_4136
00021EFA <AmiBlitz3.ab3@3391>   BSR.w JUMP_do_runerrson
00021EFE <AmiBlitz3.ab3@3392>   BSR.w pointchk
00021F04 <AmiBlitz3.ab3@3393>   TST.b objectcount
00021F08 <AmiBlitz3.ab3@3394>    BNE macenderr
00021F0E <AmiBlitz3.ab3@3395>   CLR.l linenumat
00021F12 <AmiBlitz3.ab3@3396>   BSR.w errchx2
00021F1C <AmiBlitz3.ab3@3397>   CMP.l #-1,bssend
00021F20 <AmiBlitz3.ab3@3398>    BNE 'l30
00021F2A <AmiBlitz3.ab3@3399>   MOVE.l destpointer,bssend                                ;compile end
00021F30 <AmiBlitz3.ab3@3402>   MOVE.l destpointer,d0
00021F3A <AmiBlitz3.ab3@3403>   CMP.l #-1,bssstart
00021F3E <AmiBlitz3.ab3@3404>   BNE 'lnf6
00021F48 <AmiBlitz3.ab3@3405>   CMP.l #-1,chipstart
00021F4C <AmiBlitz3.ab3@3406>   BNE 'lnf6
00021F50 <AmiBlitz3.ab3@3407> BRA 'leven4
00021F56 <AmiBlitz3.ab3@3410>   MOVE.l destpointer,d1
00021F58 <AmiBlitz3.ab3@3411>   ADDQ.l #3,d1
00021F5E <AmiBlitz3.ab3@3412>   AND.l #$fffffffc,d1                                      ;bug ?
00021F64 <AmiBlitz3.ab3@3413>   MOVE.l d1,destpointer
00021F6E <AmiBlitz3.ab3@3416>   MOVE.l destpointer,codeend
00021F78 <AmiBlitz3.ab3@3417>   CMP.l #-1,chipend
00021F7C <AmiBlitz3.ab3@3418>   BNE 'l31
00021F86 <AmiBlitz3.ab3@3419>   MOVE.l destpointer,chipend
00021F8C <AmiBlitz3.ab3@3422>   MOVE.l destpointer,d1
00021F8E <AmiBlitz3.ab3@3423>   ADDQ.l #1,d1
00021F94 <AmiBlitz3.ab3@3424>   AND.l #$fffffffe,d1                                     ;new evenexit
00021F9A <AmiBlitz3.ab3@3425>   MOVE.l d1,destpointer
00021F9E <AmiBlitz3.ab3@3426>   MOVE.b debugmode(PC),D1
00021FA2 <AmiBlitz3.ab3@3427>    BEQ.b JL_0_4180
00021FA6 <AmiBlitz3.ab3@3428>    BSR.w debugstuff
00021FAA <AmiBlitz3.ab3@3429>   MOVE.w #$C300,D1
00021FB0 <AmiBlitz3.ab3@3430>    JSR Atokejsr
00021FB4 <AmiBlitz3.ab3@3431>    BSR.w debugstuff
00021FB8 <AmiBlitz3.ab3@3432>   MOVE.l eopcode(PC),D1
00021FBE <AmiBlitz3.ab3@3433>    JSR writelong
00021FC2 <AmiBlitz3.ab3@3434>   MOVE.l lastcontlink(PC),D1
00021FC6 <AmiBlitz3.ab3@3435>    BEQ.b JL_0_4180
00021FC8 <AmiBlitz3.ab3@3436>   MOVEA.l D1,A0
00021FCC <AmiBlitz3.ab3@3437>   CLR.w $6(A0)
00021FD6 <AmiBlitz3.ab3@3443>   MOVE.l destpointer,endop                                ;where end goes...
00021FDC <AmiBlitz3.ab3@3445>   TST.w blitzmode
00021FE0 <AmiBlitz3.ab3@3446>   BEQ.w JL_0_4198
00021FE4 <AmiBlitz3.ab3@3447>   BSR.w do_AMIGA                                          ;back to amiga if in blitz!
00021FEA <AmiBlitz3.ab3@3450>   TST.w intsused
00021FEE <AmiBlitz3.ab3@3451>   BEQ.b JL_0_41AA
00021FF2 <AmiBlitz3.ab3@3452>   MOVE.w #$C105,D1                                        ;interupts off!
00021FF8 <AmiBlitz3.ab3@3453>   JSR tokejsr2
00021FFC <AmiBlitz3.ab3@3456>   BSR.w calcstatic
00022002 <AmiBlitz3.ab3@3457>   MOVE.w D4,numstatic
00022008 <AmiBlitz3.ab3@3458>   MOVE.l D3,staticdata
0002200C <AmiBlitz3.ab3@3459>    BSR.w calcmaxs
00022012 <AmiBlitz3.ab3@3461>   TST.l tokeslist
00022016 <AmiBlitz3.ab3@3462>    BEQ.b JL_0_41F8
0002201C <AmiBlitz3.ab3@3463>   MOVE.w gotocode,D1                                       ;jmp!
00022022 <AmiBlitz3.ab3@3464>    JSR writeword
0002202C <AmiBlitz3.ab3@3465>   MOVE.l destpointer,endjmpat
00022030 <AmiBlitz3.ab3@3466>    BSR.w addoff
00022036 <AmiBlitz3.ab3@3467>    JSR writelong                                           
0002203A <AmiBlitz3.ab3@3469>    BSR.w JL_0_6C76                                         ;has to be done before finits!
00022040 <AmiBlitz3.ab3@3473>   TST.w dontwrite
00022044 <AmiBlitz3.ab3@3474>    BNE.b JL_0_41F8
00022048 <AmiBlitz3.ab3@3475>   MOVEA.l endjmpat(PC),A4
0002204E <AmiBlitz3.ab3@3476>   MOVE.l destpointer,(A4)
00022054 <AmiBlitz3.ab3@3479>   TST.b returncode
00022058 <AmiBlitz3.ab3@3480>   BEQ 'l2
0002205C <AmiBlitz3.ab3@3481>   MOVE.w #$2e80,d1
00022062 <AmiBlitz3.ab3@3482>   JSR writeword
00022068 <AmiBlitz3.ab3@3485>   JSR JL_0_B98A
0002206E <AmiBlitz3.ab3@3486>   TST.b returncode
00022072 <AmiBlitz3.ab3@3487>   BEQ 'l3
00022076 <AmiBlitz3.ab3@3488>   MOVE.w #$4e75,d1
0002207C <AmiBlitz3.ab3@3489>   JSR writeword
00022080 <AmiBlitz3.ab3@3490> BRA 'l1
00022086 <AmiBlitz3.ab3@3493>   MOVE.l #$70004E75,D1
0002208C <AmiBlitz3.ab3@3494>   JSR writelong                                            ;write moveq #0,d0:rts
00022092 <AmiBlitz3.ab3@3497>   JSR JL_0_B73E
00022096 <AmiBlitz3.ab3@3498>   BSR.w asmfixer
0002209A <AmiBlitz3.ab3@3499>   BSR.w close_compilewin
0002209E <AmiBlitz3.ab3@3500> BRA.w call_setpointernormal
000220A4 <AmiBlitz3.ab3@3504> JMP do_runerrson
000220A6 <AmiBlitz3.ab3@3508> eopcode:    Dc.b $70,$03                                   ;MOVEQ #$03,D0
000220A8 <AmiBlitz3.ab3@3509>             Dc.b $4E,$40                                   ;TRAP  #00
000220AC <AmiBlitz3.ab3@3511> endjmpat:   Ds.l 1
000220B2 <AmiBlitz3.ab3@3515>   MOVEA.l newtype_string,A2
000220B8 <AmiBlitz3.ab3@3516>   MOVE.l #MaxByte,D0                                       ;move.l #$ff,d0 org source
000220BC <AmiBlitz3.ab3@3519>     CMPA.w #$0,A2
000220C0 <AmiBlitz3.ab3@3520>      BEQ.w pointchk_done
000220C4 <AmiBlitz3.ab3@3521>     CMP.l $4(A2),D0
000220C8 <AmiBlitz3.ab3@3522>      BNE.w pointchk_next
000220D0 <AmiBlitz3.ab3@3523>     MOVE.w $8(A2),linenumat+2                              ;type not found  ;move 8(a2),linenumat org source
000220D4 <AmiBlitz3.ab3@3524> BRA.w notypeerr
000220D6 <AmiBlitz3.ab3@3527>     MOVEA.l (A2),A2
000220DA <AmiBlitz3.ab3@3528> BRA.w pointchk_loop
000220DC <AmiBlitz3.ab3@3531> RTS
000220E2 <AmiBlitz3.ab3@3535>   LEA labelbase,A2
000220E4 <AmiBlitz3.ab3@3539>   MOVE.l (A2),D0                                           ;testlabels
000220E8 <AmiBlitz3.ab3@3540>    BEQ.w errchx2_done
000220EA <AmiBlitz3.ab3@3541>   MOVEA.l D0,A2
000220EE <AmiBlitz3.ab3@3542>   MOVE.l $4(A2),D0
000220F2 <AmiBlitz3.ab3@3543>   BTST #$0,D0
000220F6 <AmiBlitz3.ab3@3544>    BNE.w errchx2_loop
000220FA <AmiBlitz3.ab3@3545>   MOVE.l $8(A2),D0
000220FE <AmiBlitz3.ab3@3546>    BNE.w errchx2_loop
00022106 <AmiBlitz3.ab3@3547>   MOVE.w $10(A2),linenumat+2
00022108 <AmiBlitz3.ab3@3548>   MOVEQ #0,d0
0002210C <AmiBlitz3.ab3@3549>   MOVE.b $12(a2),d0
00022114 <AmiBlitz3.ab3@3550>   MOVE.w 0(a2,d0),linenumat
0002211A <AmiBlitz3.ab3@3551> JMP nolaberr                                               ;label not found
00022120 <AmiBlitz3.ab3@3554>   MOVE.l concomsp,D0
00022126 <AmiBlitz3.ab3@3555>   CMP.l #concomstack,D0
0002212A <AmiBlitz3.ab3@3556>    BNE.w chxerr4
00022130 <AmiBlitz3.ab3@3557>   MOVE.w connest,D1
00022134 <AmiBlitz3.ab3@3558>    BNE.w chxerr4
00022136 <AmiBlitz3.ab3@3561>   MOVE.l D1,-(A7)
0002213C <AmiBlitz3.ab3@3562>   MOVE.l firstsel,D1
00022140 <AmiBlitz3.ab3@3563>    BNE.w errchx_err1
00022146 <AmiBlitz3.ab3@3564>   MOVE.l firstrep,D1
0002214A <AmiBlitz3.ab3@3565>    BNE.w errchx_err2
00022150 <AmiBlitz3.ab3@3566>   MOVE.w intstring,D1
00022154 <AmiBlitz3.ab3@3567>    BNE.w errchx_err3
00022158 <AmiBlitz3.ab3@3568>   MOVE.l 4(a7),d1
0002215E <AmiBlitz3.ab3@3569>   MOVE.w proceduremode,D1
00022162 <AmiBlitz3.ab3@3570>    BNE.w errchx_err6
00022168 <AmiBlitz3.ab3@3571>   MOVE.l firstiff,d1
0002216C <AmiBlitz3.ab3@3572>    BNE errchx_err5
00022172 <AmiBlitz3.ab3@3573>   MOVE.l firstfor,D1
00022176 <AmiBlitz3.ab3@3574>    BNE.w errchx_err7
00022178 <AmiBlitz3.ab3@3575>   MOVE.l (A7)+,D1
0002217A <AmiBlitz3.ab3@3576> RTS
00022184 <AmiBlitz3.ab3@3580>   MOVE.l sellineat,linenumat
0002218A <AmiBlitz3.ab3@3581> JMP selerrz
00022194 <AmiBlitz3.ab3@3584>   MOVE.l replineat,linenumat
0002219A <AmiBlitz3.ab3@3585> JMP unterr3
000221A4 <AmiBlitz3.ab3@3588>   MOVE.l intlineat,linenumat
000221AA <AmiBlitz3.ab3@3589> JMP interr2
000221B4 <AmiBlitz3.ab3@3592>   MOVE.l iflineat,linenumat
000221BA <AmiBlitz3.ab3@3593> JMP noenderr
000221C4 <AmiBlitz3.ab3@3596>   MOVE.l prolineat,linenumat
000221CA <AmiBlitz3.ab3@3597> JMP nopenderr
000221D4 <AmiBlitz3.ab3@3600>   MOVE.l forlineat,linenumat
000221DA <AmiBlitz3.ab3@3601> JMP nonexterr
000221E4 <AmiBlitz3.ab3@3604>   MOVE.l ciflineat,linenumat
000221EA <AmiBlitz3.ab3@3605> JMP nocenderr
000221F4 <AmiBlitz3.ab3@3609>   MOVE.l data1,maxsat
000221F6 <AmiBlitz3.ab3@3610>   MOVEQ.l #$00,D4
000221FC <AmiBlitz3.ab3@3611>   MOVEA.l libpointer,A2
00022200 <AmiBlitz3.ab3@3614>     CMPA.w #$0,A2
00022204 <AmiBlitz3.ab3@3615>      BEQ.w calcmaxs_done
00022208 <AmiBlitz3.ab3@3616>     TST.w $C(A2)
0002220C <AmiBlitz3.ab3@3617>      BPL.w calcmaxs_next
00022210 <AmiBlitz3.ab3@3618>     MOVE.l $12(A2),D0
00022214 <AmiBlitz3.ab3@3619>     TST.w -$2(A2,D0.L)
00022218 <AmiBlitz3.ab3@3620>      BEQ.w calcmaxs_next
0002221A <AmiBlitz3.ab3@3621>     ADDQ.w #1,D4
0002221E <AmiBlitz3.ab3@3622>     MOVE.w -$6(A2,D0.L),D1
00022222 <AmiBlitz3.ab3@3623>     BSR.w pokedata1
00022224 <AmiBlitz3.ab3@3624>     MOVEQ.l #$01,D1
00022228 <AmiBlitz3.ab3@3625>     MOVE.w -$2(A2,D0.L),D2
0002222A <AmiBlitz3.ab3@3626>     LSL.w D2,D1
0002222E <AmiBlitz3.ab3@3627>     MULU -$4(A2,D0.L),D1                                   ;write objectspacesize
00022232 <AmiBlitz3.ab3@3628>     BSR.w writedatalong
00022234 <AmiBlitz3.ab3@3631>     MOVEA.l (A2),A2
00022238 <AmiBlitz3.ab3@3632> BRA.w calcmaxs_loop
0002223E <AmiBlitz3.ab3@3635>   MOVE.w D4,maxsused
00022242 <AmiBlitz3.ab3@3636>    BEQ.w calcmaxs_done2
00022246 <AmiBlitz3.ab3@3637>   MOVE.w #$FFFA,D1                                         ;;use memlib
0002224A <AmiBlitz3.ab3@3638> BRA.w uselib
0002224C <AmiBlitz3.ab3@3641> RTS
00022252 <AmiBlitz3.ab3@3645>    MOVE.l a7,stackaddr
00022256 <AmiBlitz3.ab3@3646>    BSR.w compile_term
0002225A <AmiBlitz3.ab3@3647>    BSR.w reget
0002225E <AmiBlitz3.ab3@3648>    BNE.w illeolerr
00022264 <AmiBlitz3.ab3@3649>    TST.w dontwrite
00022268 <AmiBlitz3.ab3@3650>    BNE 'l1
0002226E <AmiBlitz3.ab3@3651>    TST.l stacktrack
00022272 <AmiBlitz3.ab3@3652>    BNE errormsg_stack
00022276 <AmiBlitz3.ab3@3655>    CMP.w #-$7FDE,D0
0002227A <AmiBlitz3.ab3@3656>    BNE.w compile_line_notelse
00022280 <AmiBlitz3.ab3@3657>    JSR do_else2
00022284 <AmiBlitz3.ab3@3658> BRA.w compile_line
00022286 <AmiBlitz3.ab3@3661>   TST.w D0
0002228A <AmiBlitz3.ab3@3662>   BNE.w compile_line
00022290 <AmiBlitz3.ab3@3667>   MOVE.l firstiff,D0
00022294 <AmiBlitz3.ab3@3668>    BEQ.w compile_line_done
00022296 <AmiBlitz3.ab3@3669>   MOVEA.l D0,A0
0002229A <AmiBlitz3.ab3@3670>   MOVE.w $C(A0),D1
0002229E <AmiBlitz3.ab3@3671>    BPL.w compile_line_done
000222A2 <AmiBlitz3.ab3@3675>   BCLR #$F,D1
000222A8 <AmiBlitz3.ab3@3676>    JSR AJL_0_D7B8
000222AE <AmiBlitz3.ab3@3677>    JSR AJL_0_D81C
000222B2 <AmiBlitz3.ab3@3678> BRA.w compile_line_unthen
000222B4 <AmiBlitz3.ab3@3681> RTS
000222BA <AmiBlitz3.ab3@3685>   LEA lastgloballabel,A0
000222BC <AmiBlitz3.ab3@3686>   TST.b (A0)
000222C0 <AmiBlitz3.ab3@3687>   BEQ.w nolocerr
000222C6 <AmiBlitz3.ab3@3688>   LEA ptr_parameterstore,A1
000222C8 <AmiBlitz3.ab3@3689>   MOVEQ.l #$00,D2
000222CA <AmiBlitz3.ab3@3692>   ADDQ.w #1,D2
000222CC <AmiBlitz3.ab3@3693>   MOVE.b (A0)+,(A1)+
000222D0 <AmiBlitz3.ab3@3694>    BNE.w createlab_loop
000222D6 <AmiBlitz3.ab3@3695>   MOVE.b #$27,-$1(A1)
000222D8 <AmiBlitz3.ab3@3696>   MOVE.w D2,-(A7)
000222DE <AmiBlitz3.ab3@3697>    JSR makename4
000222E0 <AmiBlitz3.ab3@3698>   CMP.w (A7)+,D2
000222E4 <AmiBlitz3.ab3@3699>    BEQ.w syntaxerr
000222E6 <AmiBlitz3.ab3@3700>    TST.w d0
000222EA <AmiBlitz3.ab3@3701>    BPL createlab_done
000222F2 <AmiBlitz3.ab3@3702>    MOVE.w #$3a,lastchar
000222F4 <AmiBlitz3.ab3@3703>    SUBQ.l #2,a5
000222F6 <AmiBlitz3.ab3@3706> RTS
00022300 <AmiBlitz3.ab3@3710>   MOVE.l #forthstack,forthsp
0002230A <AmiBlitz3.ab3@3711>   MOVE.l #precstack,precsp
0002230C <AmiBlitz3.ab3@3712> RTS
0002230E <AmiBlitz3.ab3@3719>   MOVEQ.l #$00,D4
00022338 <AmiBlitz3.ab3@3722>   !basic
0002237A <AmiBlitz3.ab3@3723> 
0002238A <AmiBlitz3.ab3@3725>   If (c_abort = 1)           ; check if set
0002238C <AmiBlitz3.ab3@3726>     MOVEQ.l #-$01,d4
00022392 <AmiBlitz3.ab3@3727>     MOVE.w D4,stopit
000223B0 <AmiBlitz3.ab3@3728>     !asm
000223B4 <AmiBlitz3.ab3@3729>     BRA chkrealstop__skip
000223D2 <AmiBlitz3.ab3@3731>   !asm
000223D4 <AmiBlitz3.ab3@3732>   MOVEQ.l #$00,D6
000223D6 <AmiBlitz3.ab3@3733>   MOVEQ.l #$00,D7                                          ; clr Z-Flag for beq.b in chkstop_chk
000223D8 <AmiBlitz3.ab3@3737> RTS
000223DC <AmiBlitz3.ab3@3741>   MOVE.w stopit(PC),D0
000223E0 <AmiBlitz3.ab3@3742>   BEQ chkstop__chk
000223E6 <AmiBlitz3.ab3@3743>   SUBQ.w #1,stopit
000223E8 <AmiBlitz3.ab3@3747> RTS
000223F0 <AmiBlitz3.ab3@3750>   MOVE.w #2000,stopit
000223F4 <AmiBlitz3.ab3@3751>   BSR.w chkrealstop
000223F8 <AmiBlitz3.ab3@3752>   BEQ.b chkstop__rts
000223FC <AmiBlitz3.ab3@3754>   BSR.w close_compilewin
00022400 <AmiBlitz3.ab3@3755>   BSR.w call_setpointernormal
00022406 <AmiBlitz3.ab3@3757>   MOVEA.l errstack,A7
0002240C <AmiBlitz3.ab3@3758>   MOVEA.l errcont,A0
00022414 <AmiBlitz3.ab3@3759>   MOVE.w #-1,anyerrs
00022416 <AmiBlitz3.ab3@3760> JMP (A0)
0002241A <AmiBlitz3.ab3@3763> d_pc:           Ds.l 1
0002241E <AmiBlitz3.ab3@3764> d_bigpc:        Ds.l 1
00022420 <AmiBlitz3.ab3@3765> d_nomemleft:    Ds.w 1
00022424 <AmiBlitz3.ab3@3766> cont_pc:        Ds.l 1
00022428 <AmiBlitz3.ab3@3767> cont_pc2:       Ds.l 1
0002242C <AmiBlitz3.ab3@3768> lastcontlink:   Ds.l 1
00022430 <AmiBlitz3.ab3@3772>   ORI.w #$4E40,D1
00022434 <AmiBlitz3.ab3@3773> BRA.w JUMP_writeword
0002243A <AmiBlitz3.ab3@3777>   TST.b debugmode
0002243E <AmiBlitz3.ab3@3778>   BEQ.w debugstuff__rts
00022444 <AmiBlitz3.ab3@3785>   TST.w dirmode                                            ;or while in direct mode...
00022448 <AmiBlitz3.ab3@3786>    BNE debugstuff__rts
00022452 <AmiBlitz3.ab3@3787>   MOVE.l destpointer,d_pc
0002245C <AmiBlitz3.ab3@3788>   MOVE.l bigpc,d_bigpc
00022466 <AmiBlitz3.ab3@3789>   MOVE.w dontwrite,d_nomemleft
0002246A <AmiBlitz3.ab3@3790>   MOVEM.l D0-D1,-(A7)
0002246C <AmiBlitz3.ab3@3791>   MOVEQ.l #$01,D1
00022470 <AmiBlitz3.ab3@3792>    BSR.w writetrap                                         ;write the adress to sourceline
00022476 <AmiBlitz3.ab3@3796>    MOVE.l destpointer,D0
0002247C <AmiBlitz3.ab3@3797>   MOVE.l cont_pc,D1
00022482 <AmiBlitz3.ab3@3798>   MOVE.l D0,cont_pc
00022488 <AmiBlitz3.ab3@3799>   MOVE.l D1,cont_pc2
0002248C <AmiBlitz3.ab3@3800>    BEQ.b debugstuff__skip
00022492 <AmiBlitz3.ab3@3801>   TST.w dontwrite
00022496 <AmiBlitz3.ab3@3802>    BNE.b debugstuff__skip
00022498 <AmiBlitz3.ab3@3803>   MOVEA.l D1,A4
0002249A <AmiBlitz3.ab3@3804>   SUB.l A4,D0
0002249E <AmiBlitz3.ab3@3805>   MOVE.w D0,$6(A4)
000224A4 <AmiBlitz3.ab3@3806>   MOVE.l A4,lastcontlink
000224AA <AmiBlitz3.ab3@3809>   TST.w ininclude
000224B0 <AmiBlitz3.ab3@3811>   TST.w makeexec
000224B4 <AmiBlitz3.ab3@3812>   BEQ 'l1
000224BA <AmiBlitz3.ab3@3813>   TST.w exdebug
000224BE <AmiBlitz3.ab3@3814>   BEQ 'noinc
000224C2 <AmiBlitz3.ab3@3817>   MOVEM.l a0-a1/d2/d3,-(a7)                                ;write source for includes
000224C8 <AmiBlitz3.ab3@3818>   MOVE.l data1,d1
000224CE <AmiBlitz3.ab3@3819>   TST.b firsttime
000224D2 <AmiBlitz3.ab3@3820>   BNE 'nofirst
000224DA <AmiBlitz3.ab3@3821>   MOVE.b #1,firsttime
000224E0 <AmiBlitz3.ab3@3822>   MOVE.l #"DuCk",d1                                        ; to found from debugger the code start
000224E6 <AmiBlitz3.ab3@3823>   JSR writedatalong
000224EC <AmiBlitz3.ab3@3824>   MOVE.l #"AmiB",d1
000224F2 <AmiBlitz3.ab3@3825>   JSR writedatalong
000224F8 <AmiBlitz3.ab3@3826>   MOVE.l destbufferstart,d1
000224FE <AmiBlitz3.ab3@3827>   JSR writedatalong
00022504 <AmiBlitz3.ab3@3828>   TST.w dontwrite
00022508 <AmiBlitz3.ab3@3829>   BNE 'nohunk
0002250E <AmiBlitz3.ab3@3830>   MOVE.l data1,d1
00022510 <AmiBlitz3.ab3@3831>   SUBQ.l #4,d1
00022516 <AmiBlitz3.ab3@3832>   SUB.l destbufferstart,d1
00022518 <AmiBlitz3.ab3@3833>   MOVE.l d1,d2
0002251E <AmiBlitz3.ab3@3834>   JSR addhunkoffset
00022524 <AmiBlitz3.ab3@3837>   MOVE.l destpointer,d2
0002252A <AmiBlitz3.ab3@3838>   MOVE.l data1,d1
00022530 <AmiBlitz3.ab3@3841>   MOVE.l destpointer,d2
00022532 <AmiBlitz3.ab3@3842>   MOVE.l d1,d3
00022538 <AmiBlitz3.ab3@3843>   SUB.l destbufferstart,d1
0002253E <AmiBlitz3.ab3@3844>   OR.l #$80000000,d1
00022544 <AmiBlitz3.ab3@3845>   JSR writelong
0002254A <AmiBlitz3.ab3@3846>   TST.w inmacro
0002254E <AmiBlitz3.ab3@3847>   BEQ 'sc1
00022554 <AmiBlitz3.ab3@3848>   MOVE.l myline,a0
00022558 <AmiBlitz3.ab3@3850> BRA 'inc2
0002255E <AmiBlitz3.ab3@3852>  'sc1  TST.w ininclude
00022562 <AmiBlitz3.ab3@3853>   BEQ 'inc
00022568 <AmiBlitz3.ab3@3854>   MOVE.l includesourceline,a0
0002256C <AmiBlitz3.ab3@3855> BRA 'inc2
00022572 <AmiBlitz3.ab3@3858>   MOVE.l sourceline,a0
00022576 <AmiBlitz3.ab3@3859>   LEA 9(a0),a0
00022578 <AmiBlitz3.ab3@3862>   MOVE.l d1,d2
0002257A <AmiBlitz3.ab3@3863>   MOVE.l A5,D1
0002257C <AmiBlitz3.ab3@3864>   SUB.l a0,D1
00022582 <AmiBlitz3.ab3@3865>   ADD.l #9,d1
00022586 <AmiBlitz3.ab3@3866>   BSR.w JUMP_writeword
0002258C <AmiBlitz3.ab3@3867>   CMP.l #9,d1
00022590 <AmiBlitz3.ab3@3868>   BEQ 'pos1
00022596 <AmiBlitz3.ab3@3869>   TST.w dontwrite
0002259A <AmiBlitz3.ab3@3870>   BNE 'nopad
000225A0 <AmiBlitz3.ab3@3871>   MOVE.l lastsourceline,d1
000225A4 <AmiBlitz3.ab3@3872>   MOVE.l d1,-6(a4)
000225A8 <AmiBlitz3.ab3@3873> BRA 'nopad
000225AE <AmiBlitz3.ab3@3876>   MOVE.l d2,lastsourceline
000225B8 <AmiBlitz3.ab3@3877>    MOVE.l destpointer,lastdestpointer
000225BA <AmiBlitz3.ab3@3878>    MOVEQ #0,d1
000225C0 <AmiBlitz3.ab3@3879>   MOVE.l data1,d2
000225C6 <AmiBlitz3.ab3@3880>   SUB.l destbufferstart,d2
000225CC <AmiBlitz3.ab3@3881>   JSR writedatalong
000225D2 <AmiBlitz3.ab3@3882>   TST.w dontwrite
000225D6 <AmiBlitz3.ab3@3883>   BNE 'no2
000225DC <AmiBlitz3.ab3@3884>   JSR addhunkoffset
000225E2 <AmiBlitz3.ab3@3887>   MOVE.l data1,d2
000225E8 <AmiBlitz3.ab3@3888>   SUB.l destbufferstart,d2
000225EE <AmiBlitz3.ab3@3889>   JSR writedatalong
000225F4 <AmiBlitz3.ab3@3890>   TST.w dontwrite
000225F8 <AmiBlitz3.ab3@3891>   BNE 'no
000225FE <AmiBlitz3.ab3@3892>   JSR addhunkoffset
00022604 <AmiBlitz3.ab3@3893>   MOVE.l lastwritedat,a1
0002260A <AmiBlitz3.ab3@3894>   CMP.l #0,a1
0002260E <AmiBlitz3.ab3@3895>   BEQ 'no
00022610 <AmiBlitz3.ab3@3896>   MOVE.l d3,(a1)
00022618 <AmiBlitz3.ab3@3897>   MOVE.l prevwritedat,4(a1)
00022622 <AmiBlitz3.ab3@3898>   MOVE.l lastwritedat,prevwritedat
00022628 <AmiBlitz3.ab3@3901>   MOVE.l d3,lastwritedat
0002262A <AmiBlitz3.ab3@3902>   MOVEQ #4,d1
0002262E <AmiBlitz3.ab3@3903>   BSR pokedata1b
00022630 <AmiBlitz3.ab3@3906>   MOVE.b (a0)+,d1
00022634 <AmiBlitz3.ab3@3907>   BEQ 'done
00022638 <AmiBlitz3.ab3@3908>   BSR pokedata1b
0002263C <AmiBlitz3.ab3@3909> BRA 'loop
0002263E <AmiBlitz3.ab3@3912>   MOVEQ #0,d1
00022642 <AmiBlitz3.ab3@3913>   BSR pokedata1b
00022648 <AmiBlitz3.ab3@3914>   MOVE.l data1,d1
0002264C <AmiBlitz3.ab3@3915>   BTST #0,d1
00022650 <AmiBlitz3.ab3@3916>   BEQ 'nopad
00022652 <AmiBlitz3.ab3@3917>   MOVEQ #0,d1
00022656 <AmiBlitz3.ab3@3918>   BSR pokedata1b
0002265A <AmiBlitz3.ab3@3921>   MOVEM.l (a7)+,a0-a1/d2/d3
0002265E <AmiBlitz3.ab3@3922> BRA 'noinc2
00022664 <AmiBlitz3.ab3@3925>   MOVE.l sourceline,D1
0002266A <AmiBlitz3.ab3@3927>   JSR writelong
0002266C <AmiBlitz3.ab3@3928>   MOVE.l A5,D1
00022672 <AmiBlitz3.ab3@3929>   SUB.l sourceline,D1
00022678 <AmiBlitz3.ab3@3931>   JSR writeword
0002267A <AmiBlitz3.ab3@3934>   MOVEQ.l #$00,D1
00022680 <AmiBlitz3.ab3@3935>   JSR writeword                                            ; was: BSR.w writeword
00022684 <AmiBlitz3.ab3@3936>   MOVEM.l (A7)+,D0-D1
00022686 <AmiBlitz3.ab3@3939> RTS
0002268C <AmiBlitz3.ab3@3943>   TST.b debugmode                                          ;extern debug
00022690 <AmiBlitz3.ab3@3944>    BEQ.b undodebug__rts
00022696 <AmiBlitz3.ab3@3945>   TST.b dirmode
0002269A <AmiBlitz3.ab3@3946>   BNE undodebug__rts
000226A4 <AmiBlitz3.ab3@3951>   MOVE.w d_nomemleft,dontwrite
000226AE <AmiBlitz3.ab3@3952>   MOVE.l d_bigpc,bigpc
000226B8 <AmiBlitz3.ab3@3953>   MOVE.l d_pc,destpointer
000226C2 <AmiBlitz3.ab3@3954>   MOVE.l cont_pc2,cont_pc
000226C4 <AmiBlitz3.ab3@3957> RTS
000226CE <AmiBlitz3.ab3@3961>   MOVE.l #forthstack,forthsp
000226D8 <AmiBlitz3.ab3@3962>   MOVE.l #precstack,precsp
000226DE <AmiBlitz3.ab3@3963>   CLR.w regnum
000226E4 <AmiBlitz3.ab3@3964>   CLR.w nonew
000226EA <AmiBlitz3.ab3@3965>   CLR.w sbasegot
000226F4 <AmiBlitz3.ab3@3966>   MOVE.w varcodelen,oldvcodelen
000226FA <AmiBlitz3.ab3@3967>   CLR.w varcodelen
00022702 <AmiBlitz3.ab3@3968>   MOVE.w #-1,lasta6
00022704 <AmiBlitz3.ab3@3969> RTS
0002270A <AmiBlitz3.ab3@3973>   TST.w linemode
0002270E <AmiBlitz3.ab3@3974>   BMI.b smode__skip
00022712 <AmiBlitz3.ab3@3975>   BSR.w undodebug
00022718 <AmiBlitz3.ab3@3976>   MOVE.w linemode,D1
0002271A <AmiBlitz3.ab3@3977>   ADDQ.w #4,A7
0002271C <AmiBlitz3.ab3@3978>   LSL.w #2,D1
00022722 <AmiBlitz3.ab3@3979>   LEA modetable,A0
00022726 <AmiBlitz3.ab3@3980>   MOVEA.l $0(A0,D1.W),A0
0002272A <AmiBlitz3.ab3@3981>   BSR.w reget
0002272C <AmiBlitz3.ab3@3984> JMP (A0)                                                   ;jumptokenroutine
0002272E <AmiBlitz3.ab3@3987> RTS
00022736 <AmiBlitz3.ab3@3992>   MOVE.w #0,leaa0a0+2
0002273C <AmiBlitz3.ab3@3993>   CLR.b nowdeclare
00022742 <AmiBlitz3.ab3@3994>   CLR.b notypecheck
00022748 <AmiBlitz3.ab3@3995>   CLR.l lasttoken
0002274E <AmiBlitz3.ab3@3996>   CLR.b doimmediate
00022754 <AmiBlitz3.ab3@3997>   CLR.w vartype
0002275A <AmiBlitz3.ab3@3998>   CLR.w regnumfunc
00022760 <AmiBlitz3.ab3@3999>   CLR.b optistring
00022766 <AmiBlitz3.ab3@4000>   CLR.b iniffcommand
0002276C <AmiBlitz3.ab3@4001>   CLR.w instringon  ; new
00022772 <AmiBlitz3.ab3@4002>   CLR.b funccall
00022778 <AmiBlitz3.ab3@4003>   CLR.l currentfunccall
0002277E <AmiBlitz3.ab3@4004>   CLR.l leftsidetype
00022784 <AmiBlitz3.ab3@4005>   CLR.l rightsidetype
0002278A <AmiBlitz3.ab3@4006>   CLR.w leftsideflagmask
00022790 <AmiBlitz3.ab3@4007>   CLR.w rightsideflagmask
00022796 <AmiBlitz3.ab3@4008>   CLR.b peekaddrsize
0002279C <AmiBlitz3.ab3@4009>   CLR.b blitzparloop
000227A2 <AmiBlitz3.ab3@4010>   CLR.b funcparloop
000227A8 <AmiBlitz3.ab3@4011>   CLR.w parnum           ;7.2014
000227AE <AmiBlitz3.ab3@4012>   TST.b debugmode
000227B2 <AmiBlitz3.ab3@4013>    BEQ 'fpu
000227BC <AmiBlitz3.ab3@4019>   MOVE.b fpu,iee
000227C0 <AmiBlitz3.ab3@4020>   MOVE.w stopit(PC),D0
000227C4 <AmiBlitz3.ab3@4021>   BNE chkstop_chkb
000227C8 <AmiBlitz3.ab3@4022>   BSR.w chkstop                                          ; message here
000227CE <AmiBlitz3.ab3@4025>   SUBQ.w #1,stopit
000227D2 <AmiBlitz3.ab3@4028>   BSR.w findmacro                                          ;macro
000227D8 <AmiBlitz3.ab3@4082>   TST.b debugmode
000227DC <AmiBlitz3.ab3@4083>    BEQ.s 'l10
000227E2 <AmiBlitz3.ab3@4084>   TST.b exdebug
000227E6 <AmiBlitz3.ab3@4085>   BEQ 'l10a
000227E8 <AmiBlitz3.ab3@4086>   MOVE.w (a5),d0
000227EC <AmiBlitz3.ab3@4087>   CMP.w #$8025,d0
000227F0 <AmiBlitz3.ab3@4088>    BEQ 'l10
000227F4 <AmiBlitz3.ab3@4091>   BSR.w debugstuffa                                         ;insert runtimecode debugcode
000227F8 <AmiBlitz3.ab3@4095>   BSR.w get1bytemain                                       ;gettokenmain
000227FC <AmiBlitz3.ab3@4096>    BEQ.w undodebug
00022800 <AmiBlitz3.ab3@4097>   CMP.w #$002b,d0                                            ;check for + cast sign
00022804 <AmiBlitz3.ab3@4098>     BNE 'lb2
00022808 <AmiBlitz3.ab3@4099>     BSR.w get1bytemain
00022810 <AmiBlitz3.ab3@4100>     MOVE.b #1,notypecheck
0002281A <AmiBlitz3.ab3@4108>   MOVE.l #forthstack,forthsp
00022824 <AmiBlitz3.ab3@4109>   MOVE.l #precstack,precsp
0002282A <AmiBlitz3.ab3@4110>   CLR.w regnum
00022830 <AmiBlitz3.ab3@4111>   CLR.w nonew
00022836 <AmiBlitz3.ab3@4112>   CLR.w sbasegot
00022840 <AmiBlitz3.ab3@4113>   MOVE.w varcodelen,oldvcodelen
00022846 <AmiBlitz3.ab3@4115>   CLR.w varcodelen
0002284E <AmiBlitz3.ab3@4116>   MOVE.w #$FFFF,lasta6
00022852 <AmiBlitz3.ab3@4118>   BSR.w smode
00022854 <AmiBlitz3.ab3@4119>   TST.w D0
00022858 <AmiBlitz3.ab3@4120>   BMI.w get_tokencode
0002285C <AmiBlitz3.ab3@4121>   CMP.w #$2E,D0
00022860 <AmiBlitz3.ab3@4122>    BEQ.w JL_0_4644                                         ;shortlist
00022864 <AmiBlitz3.ab3@4123>   CMP.w #"#",D0
00022868 <AmiBlitz3.ab3@4124>    BEQ.w JL_0_4718                                         ;constant found
0002286C <AmiBlitz3.ab3@4125>   CMP.w #$27,D0
00022870 <AmiBlitz3.ab3@4126>    BEQ.w JL_0_4638                                         ;local label
00022876 <AmiBlitz3.ab3@4127>   MOVE.l A5,letstart
0002287C <AmiBlitz3.ab3@4128>   JSR getparameter
00022880 <AmiBlitz3.ab3@4129>   BSR.w reget
00022884 <AmiBlitz3.ab3@4130>    BEQ.w JL_0_4658                                         ;label found
00022888 <AmiBlitz3.ab3@4131>   CMP.w #$7B,D0
0002288C <AmiBlitz3.ab3@4132>    BEQ.w JL_0_475C
0002288E <AmiBlitz3.ab3@4133>   TST.w d0
00022892 <AmiBlitz3.ab3@4134>    BPL 'll1
00022898 <AmiBlitz3.ab3@4135>   TST.b newsyntax
0002289C <AmiBlitz3.ab3@4136>    BEQ 'll1
000228A2 <AmiBlitz3.ab3@4137>   LEA allowtab,a0
000228A4 <AmiBlitz3.ab3@4138>   MOVEQ #0,d1
000228A6 <AmiBlitz3.ab3@4139>   MOVE.b d0,d1
000228AA <AmiBlitz3.ab3@4140>   TST.b 0(a0,d1.w)
000228AE <AmiBlitz3.ab3@4141>    BNE 'll1
000228B0 <AmiBlitz3.ab3@4142>   SUBQ.l #2,a5
000228B8 <AmiBlitz3.ab3@4143>   MOVE.w #":",lastchar                                     ;no doublepoint
000228BC <AmiBlitz3.ab3@4144> BRA JL_0_4658
000228C4 <AmiBlitz3.ab3@4147>   CMP.l #"equ ",-1(a5)
000228C8 <AmiBlitz3.ab3@4148>    BEQ 'll4
000228D0 <AmiBlitz3.ab3@4149>   CMP.l #"EQU ",-1(a5)
000228D4 <AmiBlitz3.ab3@4150>    BNE 'll2
000228D6 <AmiBlitz3.ab3@4153>   ADDQ.l #2,a5
000228DA <AmiBlitz3.ab3@4154>   BSR.w findlabel2
000228DE <AmiBlitz3.ab3@4155>   BEQ.w 'lf1
000228E2 <AmiBlitz3.ab3@4156>   BSR.w addlabelhash
000228EA <AmiBlitz3.ab3@4157>   MOVE.l #$1,$4(A2)
000228F2 <AmiBlitz3.ab3@4160>   CMPI.l #$1,$4(A2)
000228F6 <AmiBlitz3.ab3@4161>    BNE.w illconerr
000228FA <AmiBlitz3.ab3@4162>   BSR get1bytemain
000228FC <AmiBlitz3.ab3@4163>   MOVE.l A2,-(A7)
000228FE <AmiBlitz3.ab3@4174>   SUBQ.l #1,a5
00022900 <AmiBlitz3.ab3@4177>   SUBQ.l #1,a5
00022906 <AmiBlitz3.ab3@4178>   JSR AJL_0_BF6E
00022908 <AmiBlitz3.ab3@4179>   MOVEA.l (A7)+,A2
0002290C <AmiBlitz3.ab3@4180>   MOVE.l D3,$8(A2)
0002290E <AmiBlitz3.ab3@4181>   RTS
00022912 <AmiBlitz3.ab3@4182>   BSR get1bytemain
0002291A <AmiBlitz3.ab3@4185>   CMP.l #"SET ",-1(a5)
0002291E <AmiBlitz3.ab3@4186>   BNE 'll3
00022922 <AmiBlitz3.ab3@4187> BRA 'll4
00022928 <AmiBlitz3.ab3@4190> JMP AJL_0_DEA6
0002292C <AmiBlitz3.ab3@4193>   CMP.w #-$7FDE,D0
00022930 <AmiBlitz3.ab3@4194>   BEQ.w get_tokencode
00022934 <AmiBlitz3.ab3@4195> BRA.w undodebug
00022938 <AmiBlitz3.ab3@4198>   BSR.w undodebug
0002293C <AmiBlitz3.ab3@4199>   BSR.w createlab
00022940 <AmiBlitz3.ab3@4200> BRA.w JL_0_466E
00022944 <AmiBlitz3.ab3@4203>   BSR.w get1bytemain
00022948 <AmiBlitz3.ab3@4204>    BEQ.w JL_0_462C
0002294C <AmiBlitz3.ab3@4205>   CMP.w #"'",D0
00022950 <AmiBlitz3.ab3@4206>    BEQ.w JL_0_4638
00022954 <AmiBlitz3.ab3@4207>    BSR.w makename2
00022956 <AmiBlitz3.ab3@4208>    TST.w d0
0002295A <AmiBlitz3.ab3@4209>    BPL 'll1
0002295C <AmiBlitz3.ab3@4210>    SUBQ.l #2,a5
00022964 <AmiBlitz3.ab3@4211>    MOVE.w #":",lastchar
00022968 <AmiBlitz3.ab3@4212> BRA JL_0_4658                                              ;????
0002296C <AmiBlitz3.ab3@4216>   BSR.w undodebug
00022972 <AmiBlitz3.ab3@4217>   LEA ptr_parameterstore,A0
00022978 <AmiBlitz3.ab3@4218>   LEA lastgloballabel,A1
0002297A <AmiBlitz3.ab3@4221>   MOVE.b (A0)+,(A1)+
0002297E <AmiBlitz3.ab3@4222>    BNE.w JL_0_4668
00022982 <AmiBlitz3.ab3@4225>   BSR.w findlabel2
00022986 <AmiBlitz3.ab3@4226>    BEQ.w JL_0_4698
0002298A <AmiBlitz3.ab3@4227>    BSR.w addlabelhash
0002298E <AmiBlitz3.ab3@4230>   CLR.l $4(A2)
00022996 <AmiBlitz3.ab3@4231>   MOVE.l destpointer,$8(A2)
0002299E <AmiBlitz3.ab3@4234>   MOVE.w procnum,$10(A2)
000229A0 <AmiBlitz3.ab3@4235> RTS
000229A4 <AmiBlitz3.ab3@4239>   MOVE.l $4(A2),D0
000229A8 <AmiBlitz3.ab3@4240>   BTST #$0,D0
000229AC <AmiBlitz3.ab3@4241>    BNE.w illlaberr
000229B2 <AmiBlitz3.ab3@4242>   TST.w pass
000229B6 <AmiBlitz3.ab3@4244>   MOVE.l $8(A2),D0
000229BA <AmiBlitz3.ab3@4245>    BNE.w duplaberr
000229C2 <AmiBlitz3.ab3@4246>   MOVE.w procnum,$10(A2)
000229C6 <AmiBlitz3.ab3@4247>   MOVEA.l $4(A2),A3
000229CC <AmiBlitz3.ab3@4248>   MOVEA.l _execbase,A6
000229D0 <AmiBlitz3.ab3@4251>   CMPA.w #$0,A3
000229D4 <AmiBlitz3.ab3@4252>    BEQ.w JL_0_467A
000229D8 <AmiBlitz3.ab3@4253>     MOVE.l $4(A2),D1
000229DC <AmiBlitz3.ab3@4254>     BTST #$0,D1
000229E0 <AmiBlitz3.ab3@4255>     BNE.w illlaberr
000229E4 <AmiBlitz3.ab3@4256>   MOVE.w $8(A3),D1
000229E8 <AmiBlitz3.ab3@4257>   CMP.w $10(A2),D1
000229EC <AmiBlitz3.ab3@4258>    BEQ.w JL_0_46DC
000229F2 <AmiBlitz3.ab3@4259>    TST.b newsyntax
000229F6 <AmiBlitz3.ab3@4260>    BEQ 'l1
000229FA <AmiBlitz3.ab3@4261> BRA.w JL_0_46DC                                            ;label context out of range fix
00022A02 <AmiBlitz3.ab3@4266>   MOVE.w $A(A3),linenumat+2                                ;move 10(a3),linenumat org source
00022A06 <AmiBlitz3.ab3@4267> BRA.w referr
00022A0C <AmiBlitz3.ab3@4270>   MOVE.w dontwrite,D1
00022A10 <AmiBlitz3.ab3@4271>    BNE.w JL_0_4706
00022A14 <AmiBlitz3.ab3@4272>   MOVEA.l $4(A3),A1
00022A1A <AmiBlitz3.ab3@4273>   BTST #$0,$7(A3)
00022A1E <AmiBlitz3.ab3@4274>    BEQ.w JL_0_4700
00022A20 <AmiBlitz3.ab3@4275>   SUBQ.w #1,A1
00022A26 <AmiBlitz3.ab3@4276>   MOVE.l data2,(A1)
00022A2A <AmiBlitz3.ab3@4277> BRA.w JL_0_4706
00022A30 <AmiBlitz3.ab3@4280>   MOVE.l destpointer,(A1)
00022A32 <AmiBlitz3.ab3@4283>   MOVEA.l A3,A1
00022A34 <AmiBlitz3.ab3@4284>   MOVEA.l (A3),A3
00022A38 <AmiBlitz3.ab3@4285>   MOVE.l A3,$4(A2)
00022A3A <AmiBlitz3.ab3@4286>   MOVEQ.l #$0C+2,D0
00022A40 <AmiBlitz3.ab3@4287>   MOVE.l mempool,a0
00022A46 <AmiBlitz3.ab3@4288>   MOVEA.l _execbase,A6
00022A4A <AmiBlitz3.ab3@4289>   JSR _FreePooled(A6)
00022A4E <AmiBlitz3.ab3@4290> BRA.w JL_0_46BC
00022A58 <AmiBlitz3.ab3@4295>    MOVE.l #forthstack,forthsp
00022A62 <AmiBlitz3.ab3@4296>   MOVE.l #precstack,precsp
00022A66 <AmiBlitz3.ab3@4297>    BSR.w getparameter2
00022A6A <AmiBlitz3.ab3@4300>   BSR.w findlabel2
00022A6E <AmiBlitz3.ab3@4301>    BEQ.w JL_0_4738
00022A72 <AmiBlitz3.ab3@4302>    BSR.w addlabelhash
00022A7A <AmiBlitz3.ab3@4303>   MOVE.l #$1,$4(A2)
00022A7E <AmiBlitz3.ab3@4304> BRA.w JL_0_4744
00022A86 <AmiBlitz3.ab3@4307>   CMPI.l #$1,$4(A2)
00022A8A <AmiBlitz3.ab3@4308>    BNE.w illconerr
00022A8E <AmiBlitz3.ab3@4317>   CMP.w #$3D,D0
00022A92 <AmiBlitz3.ab3@4318>   BEQ.w JL_0_474E
00022A94 <AmiBlitz3.ab3@4319> RTS
00022A96 <AmiBlitz3.ab3@4323>   MOVE.l A2,-(A7)
00022A9C <AmiBlitz3.ab3@4324>   JSR AJL_0_BF6E
00022A9E <AmiBlitz3.ab3@4325>   MOVEA.l (A7)+,A2
00022AA2 <AmiBlitz3.ab3@4326>   MOVE.l D3,$8(A2)                                         ;store constant
00022AAA <AmiBlitz3.ab3@4327>   CMP.w #$0a,lastchar
00022AAE <AmiBlitz3.ab3@4328>   BNE 'l1
00022AB6 <AmiBlitz3.ab3@4329>   MOVE.w #":",lastchar                                     ;hack to read wizard include files
00022AB8 <AmiBlitz3.ab3@4332> RTS
00022ABC <AmiBlitz3.ab3@4335>   BSR.w findproc                                           ;write statement call
00022AC0 <AmiBlitz3.ab3@4336>   BEQ _state
00022AC6 <AmiBlitz3.ab3@4337>   TST.l unusedfunc
00022ACA <AmiBlitz3.ab3@4338>   BEQ noprocerr
00022AD0 <AmiBlitz3.ab3@4340>   JSR gotoendsource
00022AD4 <AmiBlitz3.ab3@4343>   TST.b $5(A2)
00022ADA <AmiBlitz3.ab3@4345>   MOVE.l a2,currentfunccall
00022AE2 <AmiBlitz3.ab3@4346>   MOVE.b #1,funccall
00022AE8 <AmiBlitz3.ab3@4347>   MOVE.b #1,isfunc(a2)
00022AEC <AmiBlitz3.ab3@4348>   MOVE.l $E(A2),-(A7)
00022AEE <AmiBlitz3.ab3@4349>   MOVEQ.l #$00,D0
00022AF2 <AmiBlitz3.ab3@4350>   MOVE.b $4(A2),D0
00022AF8 <AmiBlitz3.ab3@4351>   MOVE.l d0,parnumtemp
00022AFC <AmiBlitz3.ab3@4352>   BEQ.w JL_0_4786
00022B00 <AmiBlitz3.ab3@4353>   TST.b $20(a2)                                            ;increase if morepar
00022B04 <AmiBlitz3.ab3@4354>   BNE 'no0par
00022B06 <AmiBlitz3.ab3@4355>   MOVE.l a5,a4
00022B0A <AmiBlitz3.ab3@4358>   CMP.b #$20,(a4)+
00022B0E <AmiBlitz3.ab3@4359>   BEQ 'l1
00022B14 <AmiBlitz3.ab3@4360>   CMP.b #"}",-1(a4)
00022B18 <AmiBlitz3.ab3@4361>   BNE  'no0par                                             ;statementcall pars
00022B1A <AmiBlitz3.ab3@4362>   MOVEQ #0,d0
00022B1E <AmiBlitz3.ab3@4365>   LEA $16(A2),A1
00022B20 <AmiBlitz3.ab3@4368>   MOVE.l d1,-(a7)
00022B22 <AmiBlitz3.ab3@4369>   MOVE.b (a1),d2
00022B24 <AmiBlitz3.ab3@4370>   MOVE.l d0,d1
00022B28 <AmiBlitz3.ab3@4371>   CMP.w #4,d2
00022B2C <AmiBlitz3.ab3@4372>   BNE 'l1b
00022B32 <AmiBlitz3.ab3@4373>   ADD.l #$203c,d1
00022B38 <AmiBlitz3.ab3@4375>   JSR writeword
00022B3E <AmiBlitz3.ab3@4376>   MOVE.l #$ffff0000,d1
00022B44 <AmiBlitz3.ab3@4378>   JSR writelong
00022B48 <AmiBlitz3.ab3@4379> BRA 'l2b
00022B4E <AmiBlitz3.ab3@4382>   TST.b fpu
00022B52 <AmiBlitz3.ab3@4383>   BNE 'l1c
00022B56 <AmiBlitz3.ab3@4384>   CMP.w #5,d2
00022B5A <AmiBlitz3.ab3@4385>   BNE 'l1c
00022B60 <AmiBlitz3.ab3@4386>   ADD.l #$203c,d1
00022B66 <AmiBlitz3.ab3@4388>   JSR writeword
00022B6C <AmiBlitz3.ab3@4389>   MOVE.l #$800000c1,d1
00022B72 <AmiBlitz3.ab3@4391>   JSR writelong
00022B76 <AmiBlitz3.ab3@4392> BRA 'l2b
00022B7C <AmiBlitz3.ab3@4395>   ADD.l #$70ff,d1
00022B82 <AmiBlitz3.ab3@4397>   JSR writeword
00022B88 <AmiBlitz3.ab3@4398>   MOVE.l #$f23c5000,d1
00022B8A <AmiBlitz3.ab3@4399>   MOVE.l d0,d2
00022B8C <AmiBlitz3.ab3@4400>   ASR.l #2,d2
00022B8E <AmiBlitz3.ab3@4401>   ADD.l d2,d1
00022B94 <AmiBlitz3.ab3@4403>   JSR writelong
00022B98 <AmiBlitz3.ab3@4404>   MOVE.w #$ffff,d1
00022B9E <AmiBlitz3.ab3@4406>   JSR writeword
00022BA0 <AmiBlitz3.ab3@4409>   MOVE.l (a7)+,d1
00022BA2 <AmiBlitz3.ab3@4410>   ADDQ.l #1,a1
00022BA8 <AmiBlitz3.ab3@4411>   ADD.l #$0200,d0
00022BAE <AmiBlitz3.ab3@4412>   CMP.l #$0e00,d0
00022BB2 <AmiBlitz3.ab3@4413>    BEQ syntaxerr
00022BB4 <AmiBlitz3.ab3@4414>   TST.b (a1)
00022BB8 <AmiBlitz3.ab3@4415>    BNE 'again
00022BBC <AmiBlitz3.ab3@4416> BRA JL_0_4786
00022BC6 <AmiBlitz3.ab3@4419>   MOVE.w a2offset,a2offset2
00022BCA <AmiBlitz3.ab3@4420>   LEA $16(A2),A2
00022BD0 <AmiBlitz3.ab3@4421>   MOVE.b funcparloop,-(a7)
00022BD8 <AmiBlitz3.ab3@4422>   MOVE.b #1,funcparloop
00022BDE <AmiBlitz3.ab3@4423>   MOVE.b blitzparloop,-(a7)
00022BE4 <AmiBlitz3.ab3@4424>   CLR.b blitzparloop
00022BE8 <AmiBlitz3.ab3@4425>   BSR.w fetchpees2
00022BEE <AmiBlitz3.ab3@4426>   MOVE.b (a7)+,blitzparloop
00022BF4 <AmiBlitz3.ab3@4427>   MOVE.b (a7)+,funcparloop
00022BF8 <AmiBlitz3.ab3@4428> BRA.w JL_0_478A
00022BFC <AmiBlitz3.ab3@4431>   BSR.w get1bytemain
00022C00 <AmiBlitz3.ab3@4434>   CMP.w #$7D,D0
00022C04 <AmiBlitz3.ab3@4435>    BNE.w morepar_                                          ;syntax error morepar
00022C0A <AmiBlitz3.ab3@4436>    JSR chkstak
00022C0C <AmiBlitz3.ab3@4437>   MOVE.l (A7)+,D1
00022C12 <AmiBlitz3.ab3@4453>    JSR JL_0_AFCA
00022C18 <AmiBlitz3.ab3@4475>   CLR.b funccall
00022C1C <AmiBlitz3.ab3@4476> BRA.w get1bytemain
00022C22 <AmiBlitz3.ab3@4480>   MOVE.l d0,lasttoken
00022C26 <AmiBlitz3.ab3@4481>   CMP.w #$c09f,d0                                          ;hack to use getregd0 instead of getd0
00022C2A <AmiBlitz3.ab3@4482>   BNE 'l2
00022C2E <AmiBlitz3.ab3@4483>    MOVE.w #$dd05,d0
00022C32 <AmiBlitz3.ab3@4486>   CMP.w #$c0a0,d0                                          ;hack to use getregd0 instead of getd0
00022C36 <AmiBlitz3.ab3@4487>   BNE 'l3
00022C3A <AmiBlitz3.ab3@4488>    MOVE.w #$dd06,d0
00022C3E <AmiBlitz3.ab3@4491>   CMP.w #-$7FC4,D0
00022C42 <AmiBlitz3.ab3@4492>   BCS.w JL_0_47C4
00022C46 <AmiBlitz3.ab3@4493>     CMP.w #-$7F4D,D0
00022C4A <AmiBlitz3.ab3@4494>     BCC.w JL_0_47C4
00022C52 <AmiBlitz3.ab3@4495>       BTST #$7,assemblercheck                              ;inline Assembler checking
00022C56 <AmiBlitz3.ab3@4496>       BNE.b JL_0_47C0
00022C5C <AmiBlitz3.ab3@4497>         TST.b debugmode
00022C60 <AmiBlitz3.ab3@4498>         BEQ.b 'l10
00022C6A <AmiBlitz3.ab3@4503>           MOVE.w d_nomemleft,dontwrite
00022C74 <AmiBlitz3.ab3@4504>           MOVE.l d_bigpc,bigpc
00022C7E <AmiBlitz3.ab3@4505>           MOVE.l d_pc,destpointer
00022C88 <AmiBlitz3.ab3@4506>           MOVE.l cont_pc2,cont_pc
00022C8C <AmiBlitz3.ab3@4512> BRA.w JL_0_612C
00022C90 <AmiBlitz3.ab3@4515>   BCLR #$F,D0
00022C92 <AmiBlitz3.ab3@4516>   MOVE.w D0,D1
00022C96 <AmiBlitz3.ab3@4517>   ANDI.w #$7F00,D1
00022C9A <AmiBlitz3.ab3@4518>   BNE.w JL_0_4856
00022C9E <AmiBlitz3.ab3@4519>     CMP.w #$B3,D0                                          ;intern Instructions
00022CA2 <AmiBlitz3.ab3@4520>     BCS.w JL_0_47F2
00022CA6 <AmiBlitz3.ab3@4521>       SUBI.w #$77,D0
00022CAA <AmiBlitz3.ab3@4522>       CMP.w #$4B,D0
00022CAE <AmiBlitz3.ab3@4523>       BEQ.w JL_0_4830
00022CB2 <AmiBlitz3.ab3@4524>         CMP.w #$46,D0
00022CB6 <AmiBlitz3.ab3@4525>         BEQ.w JL_0_4830
00022CBA <AmiBlitz3.ab3@4526> BRA.w JL_0_4834                                            ; change tokennum
00022CBE <AmiBlitz3.ab3@4529>     CMP.w #$38,D0
00022CC2 <AmiBlitz3.ab3@4530>      BEQ.w JL_0_4830
00022CC6 <AmiBlitz3.ab3@4531>     CMP.w #$39,D0
00022CCA <AmiBlitz3.ab3@4532>      BEQ.w JL_0_4830
00022CCE <AmiBlitz3.ab3@4533>     CMP.w #$D,D0
00022CD2 <AmiBlitz3.ab3@4534>      BEQ.w JL_0_4830
00022CD6 <AmiBlitz3.ab3@4535>     CMP.w #$12,D0
00022CDA <AmiBlitz3.ab3@4536>      BEQ.w JL_0_4830
00022CDE <AmiBlitz3.ab3@4537>     CMP.w #$13,D0
00022CE2 <AmiBlitz3.ab3@4538>      BEQ.w JL_0_4830
00022CE6 <AmiBlitz3.ab3@4539>     CMP.w #$1A,D0
00022CEA <AmiBlitz3.ab3@4540>      BEQ.w JL_0_4830
00022CEE <AmiBlitz3.ab3@4541>     CMP.w #$2A,D0
00022CF2 <AmiBlitz3.ab3@4542>      BHI.w JL_0_4834
00022CF6 <AmiBlitz3.ab3@4543>     CMP.w #$23,D0
00022CFA <AmiBlitz3.ab3@4544>      BCS.b JL_0_4834
00022CFE <AmiBlitz3.ab3@4547>   BSR.w undodebug
00022D00 <AmiBlitz3.ab3@4550>   SUBQ.w #1,D0
00022D02 <AmiBlitz3.ab3@4551>   LSL.w #2,D0
00022D08 <AmiBlitz3.ab3@4558>   LEA instructionbase,A0
00022D0C <AmiBlitz3.ab3@4559>   MOVEA.l $0(A0,D0.W),A0
00022D0E <AmiBlitz3.ab3@4560>   MOVE.l A0,-(A7)
00022D12 <AmiBlitz3.ab3@4561> BRA.w get1bytemain
00022D14 <AmiBlitz3.ab3@4567>   MOVE.w D0,D1
00022D18 <AmiBlitz3.ab3@4568>    BSR.w searchinstr
00022D1E <AmiBlitz3.ab3@4569>    TST.b newmode
00022D22 <AmiBlitz3.ab3@4570>    BNE compile_term
00022D28 <AmiBlitz3.ab3@4571>   BTST #$2,$1(A3)                                          ;a3 = pointer to instr ;toke stuff in a3
00022D2C <AmiBlitz3.ab3@4572>    BNE.w stamigalib
00022D32 <AmiBlitz3.ab3@4573>   BTST #$0,$1(A3)
00022D36 <AmiBlitz3.ab3@4574>    BEQ.w needreturn_                                       ;syntax err need return   ;check it's a statement
00022D3A <AmiBlitz3.ab3@4575>    BSR.w JL_0_49EA                                         ;does it need a size specifier?
00022D3E <AmiBlitz3.ab3@4576>    BSR.w JL_0_66F6
00022D44 <AmiBlitz3.ab3@4582>   MOVE.w numreps,-(A7)
00022D4A <AmiBlitz3.ab3@4583>   MOVE.w userp,-(A7)
00022D50 <AmiBlitz3.ab3@4584>   MOVE.w a2offset,-(A7)
00022D52 <AmiBlitz3.ab3@4585>   MOVE.l A2,-(A7)                                          ;recurs.
00022D5C <AmiBlitz3.ab3@4586>   MOVE.w convsize,userp
00022D60 <AmiBlitz3.ab3@4587>   LEA $6(A3),A1
00022D62 <AmiBlitz3.ab3@4591>    MOVE.w (A1),D2
00022D66 <AmiBlitz3.ab3@4592>    BMI.w SERR                                              ;statement syntax error
00022D6A <AmiBlitz3.ab3@4593>   ANDI.w #$FF,D2
00022D6C <AmiBlitz3.ab3@4594>   CMP.w D2,D1
00022D70 <AmiBlitz3.ab3@4595>    BEQ.w JL_0_48E0
00022D74 <AmiBlitz3.ab3@4596>    BCS.w JL_0_48CC
00022D76 <AmiBlitz3.ab3@4597>   MOVE.b (A1),D3
00022D7A <AmiBlitz3.ab3@4598>   ANDI.w #$7,D3
00022D7E <AmiBlitz3.ab3@4599>    BEQ.w JL_0_48CC
00022D80 <AmiBlitz3.ab3@4600>   MOVE.w D2,D4
00022D82 <AmiBlitz3.ab3@4601>   SUB.w D3,D4
00022D84 <AmiBlitz3.ab3@4602>   MOVEQ.l #$00,D5
00022D86 <AmiBlitz3.ab3@4603>   MOVE.w D1,D5
00022D88 <AmiBlitz3.ab3@4604>   SUB.w D4,D5
00022D8A <AmiBlitz3.ab3@4605>   DIVU D3,D5
00022D8C <AmiBlitz3.ab3@4606>   SWAP D5
00022D8E <AmiBlitz3.ab3@4607>   TST.w D5
00022D92 <AmiBlitz3.ab3@4608>    BEQ.w JL_0_48E0
00022D94 <AmiBlitz3.ab3@4611>   ADDQ.w #2,A1
00022D96 <AmiBlitz3.ab3@4612>   ADDA.w D2,A1
00022D9A <AmiBlitz3.ab3@4613>    BSR.w aligna1
00022D9E <AmiBlitz3.ab3@4614>    BSR.w skiplibreg
00022DA2 <AmiBlitz3.ab3@4615>   LEA $C(A1),A1
00022DA6 <AmiBlitz3.ab3@4616> BRA.w JL_0_489A
00022DA8 <AmiBlitz3.ab3@4619>   MOVE.w (a3),d2
00022DAC <AmiBlitz3.ab3@4620>   BTST #1,d2
00022DB0 <AmiBlitz3.ab3@4621>   BEQ statement_
00022DB4 <AmiBlitz3.ab3@4622>   CMP.w #1,d1
00022DB8 <AmiBlitz3.ab3@4623>   BEQ statement_
00022DBC <AmiBlitz3.ab3@4626>   CMP.b #$20,(a5)+
00022DC0 <AmiBlitz3.ab3@4627>   BEQ 'l2
00022DC6 <AmiBlitz3.ab3@4628>   CMP.b #"(",-2(a5)
00022DCA <AmiBlitz3.ab3@4629>   BNE 'l1
00022DCE <AmiBlitz3.ab3@4630> BRA parameter_
00022DD2 <AmiBlitz3.ab3@4633> BRA inbrackets_
00022DD4 <AmiBlitz3.ab3@4636>   MOVE.b (A1),D2
00022DD6 <AmiBlitz3.ab3@4637>   LSL.w #8,D2
00022DD8 <AmiBlitz3.ab3@4638>   OR.w D2,D1
00022DDA <AmiBlitz3.ab3@4639>   MOVE.l A1,-(A7)
00022DE0 <AmiBlitz3.ab3@4640>   CLR.w a2offset
00022DE2 <AmiBlitz3.ab3@4641>   TST.w D1
00022DE6 <AmiBlitz3.ab3@4642>    BEQ.w JL_0_4900
00022DEA <AmiBlitz3.ab3@4643>   LEA $2(A1),A2
00022DF0 <AmiBlitz3.ab3@4645>   MOVE.l lasttoken,-(a7)
00022DF6 <AmiBlitz3.ab3@4646>   CLR.l lasttoken
00022DFA <AmiBlitz3.ab3@4647>   BSR.w fetchlibps
00022E00 <AmiBlitz3.ab3@4648>   MOVE.l (a7)+,lasttoken
00022E04 <AmiBlitz3.ab3@4649> BRA.w JL_0_4904
00022E08 <AmiBlitz3.ab3@4652>   BSR.w get1bytemain
00022E0A <AmiBlitz3.ab3@4655>   MOVEA.l (A7)+,A1
00022E0C <AmiBlitz3.ab3@4656>   MOVEA.l (A7)+,A2
00022E12 <AmiBlitz3.ab3@4657>   MOVE.w a2offset,D1
00022E16 <AmiBlitz3.ab3@4658>    BEQ.w JL_0_493A
00022E1C <AmiBlitz3.ab3@4659>   MOVE.w D1,preplibst+2
00022E22 <AmiBlitz3.ab3@4660>   MOVE.l preplibst,D1
00022E28 <AmiBlitz3.ab3@4661>    JSR writelong                                           ;write array offset stack correct
00022E32 <AmiBlitz3.ab3@4662>   MOVE.w numreps,movenumrep+2
00022E36 <AmiBlitz3.ab3@4663>    BEQ.w JL_0_493A
00022E3C <AmiBlitz3.ab3@4664>   MOVE.l movenumrep,D1
00022E42 <AmiBlitz3.ab3@4665>    JSR writelong
00022E48 <AmiBlitz3.ab3@4669>   JSR userjsr
00022E4E <AmiBlitz3.ab3@4672>   MOVE.w a2offset,D1
00022E52 <AmiBlitz3.ab3@4673>    BEQ.w JL_0_4974
00022E56 <AmiBlitz3.ab3@4674>   CMP.w #$8,D1
00022E5A <AmiBlitz3.ab3@4675>    BHI.w JL_0_4964
00022E5E <AmiBlitz3.ab3@4676>   ANDI.w #$7,D1
00022E60 <AmiBlitz3.ab3@4677>   LSL.w #8,D1
00022E62 <AmiBlitz3.ab3@4678>   LSL.w #1,D1
00022E66 <AmiBlitz3.ab3@4679>   ORI.w #$504F,D1
00022E6C <AmiBlitz3.ab3@4681>   JSR writeword
00022E70 <AmiBlitz3.ab3@4682> BRA.w JL_0_4974
00022E76 <AmiBlitz3.ab3@4685>   MOVE.w D1,fixlibst+2
00022E7C <AmiBlitz3.ab3@4686>   MOVE.l fixlibst,D1
00022E82 <AmiBlitz3.ab3@4687>   JSR writelong
00022E88 <AmiBlitz3.ab3@4690>   MOVE.w (A7)+,a2offset
00022E8E <AmiBlitz3.ab3@4691>   MOVE.w (A7)+,userp
00022E94 <AmiBlitz3.ab3@4692>   MOVE.w (A7)+,numreps
00022E98 <AmiBlitz3.ab3@4693> BRA.w reget
00022E9C <AmiBlitz3.ab3@4697>   MOVEM.l A2-A3,-(A7)
00022EA2 <AmiBlitz3.ab3@4698>   CLR.b doublepeek
00022EA8 <AmiBlitz3.ab3@4699>   MOVE.l A5,lastsourcepos
00022EAC <AmiBlitz3.ab3@4700>    BSR.w getchar
00022EB0 <AmiBlitz3.ab3@4701>   CMP.w #$2E,D0
00022EB4 <AmiBlitz3.ab3@4702>    BEQ.w JL_0_49B4
00022EBA <AmiBlitz3.ab3@4703>   MOVEA.l defaulttype,A2
00022EBE <AmiBlitz3.ab3@4704>   CMP.w #$24,D0
00022EC2 <AmiBlitz3.ab3@4705>    BNE.w JL_0_49CA
00022EC4 <AmiBlitz3.ab3@4706>   MOVEQ.l #$07,D1
00022EC8 <AmiBlitz3.ab3@4707> BRA.w JL_0_49DE
00022ECC <AmiBlitz3.ab3@4710>   BSR.w getparameter2
00022ED0 <AmiBlitz3.ab3@4711>   BEQ.w syntaxerr
00022ED6 <AmiBlitz3.ab3@4712>   LEA newtypebase,A2
00022EDA <AmiBlitz3.ab3@4713>   BSR.w findtype
00022EDE <AmiBlitz3.ab3@4714>   BNE.w notypeerr
00022EE8 <AmiBlitz3.ab3@4718>   MOVE.w oldqflag,instringon
00022EEE <AmiBlitz3.ab3@4719>   MOVEA.l lastsourcepos,A5
00022EF2 <AmiBlitz3.ab3@4724>   MOVE.w $6(A2),D1
00022EF8 <AmiBlitz3.ab3@4725>   CMP.w #8,8(a2)
00022EFC <AmiBlitz3.ab3@4726>   BNE 'l1
00022F04 <AmiBlitz3.ab3@4727>   MOVE.b #1,doublepeek
00022F0A <AmiBlitz3.ab3@4731>   MOVE.w D1,convsize
00022F0E <AmiBlitz3.ab3@4732>   MOVEM.l (A7)+,A2-A3
00022F10 <AmiBlitz3.ab3@4733> RTS
00022F16 <AmiBlitz3.ab3@4738>   BTST #$3,$1(A3)
00022F1A <AmiBlitz3.ab3@4739>   BEQ.w JL_0_4A06
00022F1E <AmiBlitz3.ab3@4740>   BSR.w AJL_0_498A                                         ;read peek/poke size
00022F22 <AmiBlitz3.ab3@4742>   ORI.w #$7000,D1
00022F28 <AmiBlitz3.ab3@4743>   JSR writeword
00022F2E <AmiBlitz3.ab3@4744>   ADDQ.w #1,regnum
00022F30 <AmiBlitz3.ab3@4747> RTS
00022F32 <AmiBlitz3.ab3@4753>             Dc.b $10,$12                                   ;MOVE.B  (A2),D0
00022F34 <AmiBlitz3.ab3@4754>             Dc.b $14,$91                                   ;MOVE.B  (A1),(A2)
00022F36 <AmiBlitz3.ab3@4755>             Dc.b $12,$80                                   ;MOVE.B  D0,(A1)
00022F38 <AmiBlitz3.ab3@4759> swapw:      Dc.b $30,$12                                   ;MOVE.W  (A2),D0
00022F3A <AmiBlitz3.ab3@4760>             Dc.b $34,$91                                   ;MOVE.W  (A1),(A2)
00022F3C <AmiBlitz3.ab3@4761>             Dc.b $32,$80                                   ;MOVE.W  D0,(A1)
00022F3E <AmiBlitz3.ab3@4765> swapl:      Dc.b $20,$12                                   ;MOVE.L  (A2),D0
00022F40 <AmiBlitz3.ab3@4766>             Dc.b $24,$91                                   ;MOVE.L  (A1),(A2)
00022F42 <AmiBlitz3.ab3@4767>             Dc.b $22,$80                                   ;MOVE.L  D0,(A1)
00022F44 <AmiBlitz3.ab3@4771> pulla1:     Dc.b $22,$5F                                   ;MOVEA.L (A7)+,A1
00022F46 <AmiBlitz3.ab3@4774> srctype:    Ds.w 1
00022F4A <AmiBlitz3.ab3@4779>   BSR.w excget
00022F4E <AmiBlitz3.ab3@4780>   CMP.w #$2C,D0
00022F52 <AmiBlitz3.ab3@4781>    BNE.w syntaxerr
00022F58 <AmiBlitz3.ab3@4782>   MOVE.b D2,srctype
00022F5E <AmiBlitz3.ab3@4783>   MOVE.w pusha2,D1
00022F64 <AmiBlitz3.ab3@4784>   JSR writeword
00022F68 <AmiBlitz3.ab3@4785>   BSR.w get1bytemain
00022F6C <AmiBlitz3.ab3@4786>   BSR.w excget
00022F72 <AmiBlitz3.ab3@4787>   CMP.b srctype,D2
00022F76 <AmiBlitz3.ab3@4788>    BNE.w excerr2
00022F7C <AmiBlitz3.ab3@4789>   MOVE.w pulla1,D1
00022F82 <AmiBlitz3.ab3@4790>    JSR writeword
00022F86 <AmiBlitz3.ab3@4791>   CMP.b #$2,D2
00022F8A <AmiBlitz3.ab3@4792>    BCS.w JL_0_4B2A
00022F8E <AmiBlitz3.ab3@4793>    BEQ.w JL_0_4B1E
00022F92 <AmiBlitz3.ab3@4794>   LEA swapl(PC),A0
00022F96 <AmiBlitz3.ab3@4795>   LEA swaplf(PC),A1
00022F9C <AmiBlitz3.ab3@4796> JMP pokecode
00022FA0 <AmiBlitz3.ab3@4799>   LEA swapw(PC),A0
00022FA4 <AmiBlitz3.ab3@4800>   LEA swapwf(PC),A1
00022FAA <AmiBlitz3.ab3@4801> JMP pokecode
00022FAE <AmiBlitz3.ab3@4804>   LEA swapb(PC),A0
00022FB2 <AmiBlitz3.ab3@4805>   LEA swapbf(PC),A1
00022FB8 <AmiBlitz3.ab3@4806> JMP pokecode
00022FBE <AmiBlitz3.ab3@4810>   JSR getparameter
00022FC2 <AmiBlitz3.ab3@4811>   BSR.w JL_0_8E3C
00022FC8 <AmiBlitz3.ab3@4812>   JSR calcvar
00022FCC <AmiBlitz3.ab3@4813>   BTST #$E,D2
00022FD0 <AmiBlitz3.ab3@4814>    BEQ.w JL_0_4B4E
00022FD4 <AmiBlitz3.ab3@4815>   MOVE.b #$4,D2
00022FD6 <AmiBlitz3.ab3@4818>   TST.b D2
00022FDA <AmiBlitz3.ab3@4819>    BEQ.w excerr
00022FDE <AmiBlitz3.ab3@4820>   BTST #$F,D2
00022FE2 <AmiBlitz3.ab3@4821>    BNE.w JL_0_4B6A
00022FE8 <AmiBlitz3.ab3@4822>   MOVE.w leaamp,D1
00022FEE <AmiBlitz3.ab3@4823>    JSR pokewda5s
00022FF0 <AmiBlitz3.ab3@4824>   MOVE.w D3,D1
00022FF6 <AmiBlitz3.ab3@4825> JMP writeword
00022FF8 <AmiBlitz3.ab3@4828> RTS
00022FFE <AmiBlitz3.ab3@4838>   MOVE.l mempool,a0
00023004 <AmiBlitz3.ab3@4839>   MOVEA.l _execbase,A6
00023008 <AmiBlitz3.ab3@4840> JMP _AllocPooled(a6)
0002300C <AmiBlitz3.ab3@4844>   MOVE.w #$BF00,D1
00023012 <AmiBlitz3.ab3@4845> JMP Atokejsr
00023016 <AmiBlitz3.ab3@4849>   CMP.w #-$7FFA,D0
0002301A <AmiBlitz3.ab3@4850>    BEQ.w popreturn
0002301E <AmiBlitz3.ab3@4851>   CMP.w #-$7FEA,D0
00023022 <AmiBlitz3.ab3@4852>    BEQ.w popnext2
00023026 <AmiBlitz3.ab3@4853>   CMP.w #-$7FF2,D0
0002302A <AmiBlitz3.ab3@4854>    BEQ.w popselect2
0002302E <AmiBlitz3.ab3@4855>   CMP.w #-$7FF5,D0
00023032 <AmiBlitz3.ab3@4856>    BEQ.w get1bytemain
00023036 <AmiBlitz3.ab3@4857>   CMP.w #-$7FF4,D0
0002303A <AmiBlitz3.ab3@4858>    BEQ.w get1bytemain
0002303E <AmiBlitz3.ab3@4859>   CMP.w #-$7FEC,D0
00023042 <AmiBlitz3.ab3@4860>    BEQ.w get1bytemain
00023046 <AmiBlitz3.ab3@4861>   CMP.w #-$7F45,D0
0002304A <AmiBlitz3.ab3@4862>    BEQ.w get1bytemain
0002304E <AmiBlitz3.ab3@4863> BRA.w syntaxerr
00023054 <AmiBlitz3.ab3@4866>   TST.b debugmode
00023058 <AmiBlitz3.ab3@4867>    BEQ.w popreturn__norerr
0002305C <AmiBlitz3.ab3@4868>   LEA popreturn__rfix(PC),A0
00023060 <AmiBlitz3.ab3@4869>   LEA popreturn__rfixf(PC),A1
00023066 <AmiBlitz3.ab3@4870>    JSR pokecode
0002306A <AmiBlitz3.ab3@4871>   MOVE.w #$C305,D1
00023070 <AmiBlitz3.ab3@4872>    JSR Atokejsr
00023074 <AmiBlitz3.ab3@4873>   MOVE.w popreturn__rfix2(PC),D1
0002307A <AmiBlitz3.ab3@4875>    JSR writeword
0002307E <AmiBlitz3.ab3@4876> BRA.w get1bytemain
00023084 <AmiBlitz3.ab3@4880>   CMPI.w #$6753,$4(A7)                                     ;#"gS",4(A7)
00023088 <AmiBlitz3.ab3@4881>   BEQ.w popreturn__rfix2
0002308E <AmiBlitz3.ab3@4884>   JSR $20000                                               ;reass
00023090 <AmiBlitz3.ab3@4887>   ADDQ.w #6,A7
00023094 <AmiBlitz3.ab3@4891>   MOVE.w popreturn__sfix(PC),D1
0002309A <AmiBlitz3.ab3@4892>   JSR writeword
0002309E <AmiBlitz3.ab3@4893> BRA.w get1bytemain
000230A0 <AmiBlitz3.ab3@4898>   Dc.b $58,$4F                                             ;ADDQ.W  #4,A7
000230A6 <AmiBlitz3.ab3@4903>   MOVE.l firstfor,D0
000230AA <AmiBlitz3.ab3@4904>    BEQ.w noforerr
000230AC <AmiBlitz3.ab3@4905>   MOVEA.l D0,A2
000230B0 <AmiBlitz3.ab3@4906>    BSR.w get1bytemain
000230B4 <AmiBlitz3.ab3@4907>   BSR.w popnext
000230BA <AmiBlitz3.ab3@4910>   TST.b debugmode
000230BE <AmiBlitz3.ab3@4911>    BEQ.w popnext3__ner
000230C4 <AmiBlitz3.ab3@4912>   MOVE.l nextfixw2,D1
000230CA <AmiBlitz3.ab3@4913>   CMPI.w #$3,$C(A2)
000230CE <AmiBlitz3.ab3@4914>    BCS.w writelong2
000230D4 <AmiBlitz3.ab3@4915>   MOVE.l nextfixl2,D1
000230DA <AmiBlitz3.ab3@4916> writelong2 JMP  writelong
000230E0 <AmiBlitz3.ab3@4919>   CMPI.w #$3,$C(A2)
000230E4 <AmiBlitz3.ab3@4920>    BCS.w popnext3__skip2
000230EA <AmiBlitz3.ab3@4921>   MOVE.l nextfixl,D1
000230F0 <AmiBlitz3.ab3@4922>   JMP writelong
000230F6 <AmiBlitz3.ab3@4925>   MOVE.w nextfixw,D1
000230FC <AmiBlitz3.ab3@4926> JMP writeword
00023100 <AmiBlitz3.ab3@4930>   MOVE.w $C(A2),D0
00023106 <AmiBlitz3.ab3@4931>   TST.b debugmode
0002310A <AmiBlitz3.ab3@4932>    BEQ.w popnext__norunerr
0002310E <AmiBlitz3.ab3@4933>   MOVE.w #$C306,D1
00023112 <AmiBlitz3.ab3@4934>   CMP.w #$3,D0
00023116 <AmiBlitz3.ab3@4935>    BCS.w popnext__oktc
00023118 <AmiBlitz3.ab3@4936>   ADDQ.w #1,D1
0002311A <AmiBlitz3.ab3@4939>   MOVE.l A2,-(A7)
00023120 <AmiBlitz3.ab3@4940>   JSR Atokejsr
00023122 <AmiBlitz3.ab3@4941>   MOVEA.l (A7)+,A2
00023124 <AmiBlitz3.ab3@4944> RTS
0002312A <AmiBlitz3.ab3@4948>   MOVE.l firstsel,D0
0002312E <AmiBlitz3.ab3@4949>    BEQ.w eselerr
00023130 <AmiBlitz3.ab3@4950>   MOVEA.l D0,A2
00023134 <AmiBlitz3.ab3@4951>    BSR.w get1bytemain
00023138 <AmiBlitz3.ab3@4954>   MOVE.w $C(A2),D2
0002313E <AmiBlitz3.ab3@4955>   TST.b debugmode
00023142 <AmiBlitz3.ab3@4956>    BEQ.w popselect__norerr
00023146 <AmiBlitz3.ab3@4957>   MOVE.w #$C313,D1
0002314A <AmiBlitz3.ab3@4958>   CMP.w #$3,D2
0002314E <AmiBlitz3.ab3@4959>    BCS.w popselect__chkit
00023150 <AmiBlitz3.ab3@4960>   ADDQ.w #1,D1
00023156 <AmiBlitz3.ab3@4963>   JSR Atokejsr                                             ;make sure next thing on stack
00023158 <AmiBlitz3.ab3@4967>   MOVEQ.l #$02,D1
0002315C <AmiBlitz3.ab3@4968>   CMP.w #$3,D2
00023160 <AmiBlitz3.ab3@4969>    BCS.w popselect__doit
00023162 <AmiBlitz3.ab3@4970>   MOVEQ.l #$04,D1
00023166 <AmiBlitz3.ab3@4971>   CMP.w #$7,D2
0002316A <AmiBlitz3.ab3@4972>    BCS.w popselect__doit
00023170 <AmiBlitz3.ab3@4973>   LEA endselstr,A0
00023176 <AmiBlitz3.ab3@4974>   LEA endselstrf,A1
0002317C <AmiBlitz3.ab3@4975>   TST.b debugmode
00023180 <AmiBlitz3.ab3@4976>    BEQ.w popselect__norerr3
00023186 <AmiBlitz3.ab3@4977>   LEA endselstrf2,A1
0002318C <AmiBlitz3.ab3@4980>   JSR pokecode
00023190 <AmiBlitz3.ab3@4981>   MOVE.w #$C003,D1                                         ;global freemem
00023196 <AmiBlitz3.ab3@4982> JMP Atokejsr
0002319C <AmiBlitz3.ab3@4985>   TST.b debugmode
000231A0 <AmiBlitz3.ab3@4986>    BEQ.w popselect__norerr2
000231A2 <AmiBlitz3.ab3@4987>   ADDQ.w #2,D1                                             ;for the "sE"
000231A4 <AmiBlitz3.ab3@4990>   LSL.w #8,D1
000231A6 <AmiBlitz3.ab3@4991>   LSL.w #1,D1
000231AC <AmiBlitz3.ab3@4992>   OR.w endsel,D1
000231B2 <AmiBlitz3.ab3@4993> JMP writeword
000231B6 <AmiBlitz3.ab3@4996> firstrep:    Ds.l 1
000231BA <AmiBlitz3.ab3@4997> replineat:   Ds.l 1
000231C0 <AmiBlitz3.ab3@5006>   CLR.l fp0addr
000231CA <AmiBlitz3.ab3@5007>   MOVE.l linenumat,replineat
000231CC <AmiBlitz3.ab3@5008>   MOVEQ.l #$08,D0
000231D2 <AmiBlitz3.ab3@5009>   MOVEA.l _execbase,A6
000231D8 <AmiBlitz3.ab3@5010>   MOVE.l mempool,a0
000231DC <AmiBlitz3.ab3@5011>   JSR _AllocPooled(a6)
000231DE <AmiBlitz3.ab3@5013>   MOVEA.l D0,A0
000231E2 <AmiBlitz3.ab3@5014>   MOVE.l firstrep(PC),(A0)
000231E8 <AmiBlitz3.ab3@5015>   MOVE.l A0,firstrep
000231F0 <AmiBlitz3.ab3@5016>   MOVE.l destpointer,$4(A0)
000231F2 <AmiBlitz3.ab3@5017> RTS
000231F8 <AmiBlitz3.ab3@5020> str_temp:  Ds.w 3                                            ;infochk  ds.b 6 org source
000231FC <AmiBlitz3.ab3@5023>   LEA str_temp(PC),A1
000231FE <AmiBlitz3.ab3@5024>   CLR.w (A1)
00023202 <AmiBlitz3.ab3@5025>   CLR.l $2(A1)
00023204 <AmiBlitz3.ab3@5028>   MOVEQ.l #$04,D0
00023208 <AmiBlitz3.ab3@5031>     MOVE.b $1(A1),(A1)+
0002320C <AmiBlitz3.ab3@5032>   DBF D0,check_for_infoextention__loop
00023210 <AmiBlitz3.ab3@5037>   LEA str_temp(PC),A1
00023212 <AmiBlitz3.ab3@5038>   MOVE.b (A0),D0
00023216 <AmiBlitz3.ab3@5039>   ORI.b #$20,D0
0002321A <AmiBlitz3.ab3@5040>   MOVE.b D0,$5(A1)
0002321C <AmiBlitz3.ab3@5041>   TST.b (A0)+
00023220 <AmiBlitz3.ab3@5042>    BNE.w check_for_infoextention__loop2
00023224 <AmiBlitz3.ab3@5043>   CMPI.w #$2E69,(A1)+                                      ;".i"
00023228 <AmiBlitz3.ab3@5044>    BNE.w check_for_infoextention__no
0002322E <AmiBlitz3.ab3@5045>   CMPI.l #$6E666F20,(A1)                                   ;"nfo "
00023230 <AmiBlitz3.ab3@5048> RTS
00023234 <AmiBlitz3.ab3@5052>   BPL.w gettokeps__evaltoke
00023236 <AmiBlitz3.ab3@5053>   MOVE.w D0,D1
0002323A <AmiBlitz3.ab3@5054>   ANDI.w #$7F80,D1
0002323E <AmiBlitz3.ab3@5055>    BEQ.w tokeerr
00023242 <AmiBlitz3.ab3@5056>   BCLR #$F,D0
00023244 <AmiBlitz3.ab3@5057>   MOVE.w D0,D4                                             ;got toke number
00023248 <AmiBlitz3.ab3@5058>   BSR.w get1bytemain
0002324C <AmiBlitz3.ab3@5059> BRA.w gettokeps__gotnum
00023252 <AmiBlitz3.ab3@5062>   JSR JL_0_BF6A
00023258 <AmiBlitz3.ab3@5063>   CMP.l #MaxWord,D3
0002325C <AmiBlitz3.ab3@5064>    BHI.w tokeerr
0002325E <AmiBlitz3.ab3@5065>   TST.w D6
00023262 <AmiBlitz3.ab3@5066>    BNE.w tokeerr
00023264 <AmiBlitz3.ab3@5067>   MOVE.w D3,D4
00023266 <AmiBlitz3.ab3@5070>   MOVEQ.l #$00,D5
0002326A <AmiBlitz3.ab3@5071>   CMP.w #$2C,D0
0002326E <AmiBlitz3.ab3@5072>    BNE.w gettokeps__gotfrom
00023270 <AmiBlitz3.ab3@5073>   MOVE.w D4,-(A7)
00023276 <AmiBlitz3.ab3@5074>    JSR AJL_0_BF6E
0002327C <AmiBlitz3.ab3@5075>   CMP.l #MaxWord,D3
00023280 <AmiBlitz3.ab3@5076>    BHI.w tokeerr
00023282 <AmiBlitz3.ab3@5077>   TST.w D6
00023286 <AmiBlitz3.ab3@5078>    BNE.w tokeerr
00023288 <AmiBlitz3.ab3@5079>   MOVE.w D3,D5
0002328A <AmiBlitz3.ab3@5080>   MOVE.w (A7)+,D4
0002328C <AmiBlitz3.ab3@5083> RTS                                                        ;d4=toke, d5=form
0002328E <AmiBlitz3.ab3@5087>   TST.w D0
00023292 <AmiBlitz3.ab3@5088>    BSR.w gettokeps
00023296 <AmiBlitz3.ab3@5089>   MOVE.w #$4EB9,D1
0002329C <AmiBlitz3.ab3@5090>   JSR writeword
000232A0 <AmiBlitz3.ab3@5091>   BSR.w addoff
000232A2 <AmiBlitz3.ab3@5092>   MOVE.w D5,D1
000232A6 <AmiBlitz3.ab3@5093>   ORI.w #$8000,D1                                          ;Toke of Amiga type.
000232A8 <AmiBlitz3.ab3@5094>   SWAP D1
000232AA <AmiBlitz3.ab3@5095>   MOVE.w D4,D1
000232B0 <AmiBlitz3.ab3@5096> JMP writelong
000232B2 <AmiBlitz3.ab3@5100>   TST.w D0
000232B6 <AmiBlitz3.ab3@5101>    BSR.w gettokeps
000232BA <AmiBlitz3.ab3@5102>   MOVE.w #$4EB9,D1
000232C0 <AmiBlitz3.ab3@5103>   JSR writeword
000232C4 <AmiBlitz3.ab3@5104>   BSR.w addoff
000232C6 <AmiBlitz3.ab3@5105>   MOVE.w D5,D1
000232CA <AmiBlitz3.ab3@5106>   ORI.w #$C000,D1                                          ;Toke of Blitz type.
000232CC <AmiBlitz3.ab3@5107>   SWAP D1
000232CE <AmiBlitz3.ab3@5108>   MOVE.w D4,D1
000232D4 <AmiBlitz3.ab3@5109>   JMP writelong
000232DA <AmiBlitz3.ab3@5113>   JSR JL_0_BF6A
000232E0 <AmiBlitz3.ab3@5114>   CMP.l #$10000,D3
000232E4 <AmiBlitz3.ab3@5115>    BCC.w tokeerr
000232E6 <AmiBlitz3.ab3@5116>   MOVE.w D3,D1
000232EC <AmiBlitz3.ab3@5117> JMP Atokejsr
000232F0 <AmiBlitz3.ab3@5121>   BSR.w gettokeps
000232F4 <AmiBlitz3.ab3@5122>   MOVE.w #$4EB9,D1
000232FA <AmiBlitz3.ab3@5123>   JSR writeword
00023300 <AmiBlitz3.ab3@5124>   MOVE.l destpointer,D3
00023308 <AmiBlitz3.ab3@5125>   BTST #$7,blitzmode
0002330C <AmiBlitz3.ab3@5126>    BEQ.w do_TokeJsr__inamiga
00023310 <AmiBlitz3.ab3@5127>   BSET #$E,D5
00023314 <AmiBlitz3.ab3@5130>   BSR.w JL_0_6E86
00023318 <AmiBlitz3.ab3@5131>   BSR.w addoff
0002331E <AmiBlitz3.ab3@5132>   JMP writelong
00023322 <AmiBlitz3.ab3@5136>   BEQ.w do_VWait__zero
00023324 <AmiBlitz3.ab3@5137>   MOVEQ.l #$02,D2                                          ;get a word
0002332A <AmiBlitz3.ab3@5139>   JSR bakeval
0002332E <AmiBlitz3.ab3@5140>   MOVE.w fvwait(PC),D1
00023332 <AmiBlitz3.ab3@5141> BRA.w do_VWait__vcont
00023336 <AmiBlitz3.ab3@5144>   MOVE.w #$7000,D1                                         ;moveq #0,d0
0002333C <AmiBlitz3.ab3@5147>   JSR writeword
00023340 <AmiBlitz3.ab3@5148>   MOVE.w #$C104,D1
00023346 <AmiBlitz3.ab3@5149> JMP Atokejsr
00023348 <AmiBlitz3.ab3@5153>   SUBQ.w #1,D0
0002334E <AmiBlitz3.ab3@5156>   Dc.w $3b7c,$ffff,0                                       ;move.w #$FFFF,$0(A5) ;noopt
00023352 <AmiBlitz3.ab3@5159>   Dc.l $426d0001                                           ;clr.w $0(A5)
00023356 <AmiBlitz3.ab3@5163>   MOVE.b debugmode(PC),D1
0002335A <AmiBlitz3.ab3@5164>   BEQ.b debugmode_codelabel__skip
0002335E <AmiBlitz3.ab3@5165>   MOVE.w #$D500,D1
00023364 <AmiBlitz3.ab3@5166> JMP Atokejsr
00023366 <AmiBlitz3.ab3@5169> RTS
0002336E <AmiBlitz3.ab3@5173>   BSET #$0,blitzmode
00023376 <AmiBlitz3.ab3@5174>   BSET #$7,blitzmode
0002337A <AmiBlitz3.ab3@5175>   MOVE.w #$C200,D1
00023380 <AmiBlitz3.ab3@5176>   JSR Atokejsr
00023386 <AmiBlitz3.ab3@5177>   TST.b debugmode
0002338A <AmiBlitz3.ab3@5178>    BEQ.w do_BLITZ__done
0002338E <AmiBlitz3.ab3@5179>   MOVE.w cgoblitz(PC),D1
00023394 <AmiBlitz3.ab3@5180>   JSR writeword
00023396 <AmiBlitz3.ab3@5181>   MOVEQ.l #-$01,D1
0002339C <AmiBlitz3.ab3@5182>   JSR writeword
000233A2 <AmiBlitz3.ab3@5183>   JSR getbbase
000233A8 <AmiBlitz3.ab3@5184>   JSR writeword
000233AC <AmiBlitz3.ab3@5187> BRA.w debugmode_codelabel
000233B0 <AmiBlitz3.ab3@5191>   MOVE.w #$C201,D1
000233B4 <AmiBlitz3.ab3@5192> BRA.w do_AMIGA__toamode
000233B8 <AmiBlitz3.ab3@5196>   MOVE.W  #$C202,D1
000233C0 <AmiBlitz3.ab3@5199>   BSET #$0,blitzmode
000233C8 <AmiBlitz3.ab3@5200>   BCLR #$7,blitzmode
000233CE <AmiBlitz3.ab3@5201>   JSR Atokejsr
000233D4 <AmiBlitz3.ab3@5202>   TST.b debugmode
000233D8 <AmiBlitz3.ab3@5203>    BEQ.w do_AMIGA__done
000233DC <AmiBlitz3.ab3@5204>   MOVE.w cgoamiga(PC),D1
000233E2 <AmiBlitz3.ab3@5205>   JSR writeword
000233E8 <AmiBlitz3.ab3@5206>   JSR getbbase
000233EE <AmiBlitz3.ab3@5207>   JSR writeword
000233F2 <AmiBlitz3.ab3@5210> BRA.w debugmode_codelabel
000233F6 <AmiBlitz3.ab3@5214>   MOVEM.l D2-D7/A2-A4,-(A7)
000233FA <AmiBlitz3.ab3@5217>   MOVEM.l (A7)+,D2-D7/A2-A4
00023400 <AmiBlitz3.ab3@5221>   JSR JL_0_BF6A
00023406 <AmiBlitz3.ab3@5222>   CMP.l #$E,D3
0002340A <AmiBlitz3.ab3@5223>    BCC.w interr4
0002340E <AmiBlitz3.ab3@5224>   MOVE.w #$7000,D1
00023410 <AmiBlitz3.ab3@5225>   OR.w D3,D1
00023416 <AmiBlitz3.ab3@5226>   JSR writeword
0002341A <AmiBlitz3.ab3@5227>   MOVE.w #$C101,D1
00023420 <AmiBlitz3.ab3@5228> JMP Atokejsr                                               ;clear the interupt
00023422 <AmiBlitz3.ab3@5231> inerr:       Ds.w 1                                        ;flag - in error trap mode
00023426 <AmiBlitz3.ab3@5232> errjmp:      Ds.l 1                                        ;where err jump is
0002342A <AmiBlitz3.ab3@5233> errcode:     Ds.l 1
0002342E <AmiBlitz3.ab3@5237>   MOVE.W  #$D202,D1
00023434 <AmiBlitz3.ab3@5238> JMP Atokejsr                                               ;BRA.W Atokejsr
00023438 <AmiBlitz3.ab3@5242>   MOVE.w inerr(PC),D1
0002343C <AmiBlitz3.ab3@5243>    BEQ.w errerr3
00023442 <AmiBlitz3.ab3@5244>   CLR.w inerr
00023448 <AmiBlitz3.ab3@5245>   MOVE.w dontwrite,D1
0002344C <AmiBlitz3.ab3@5246>    BNE.w doendseterr__skip
00023450 <AmiBlitz3.ab3@5247>   MOVEA.l errjmp(PC),A0
00023456 <AmiBlitz3.ab3@5248>   MOVE.l destpointer,(A0)
0002345A <AmiBlitz3.ab3@5251> BRA.w get1bytemain
0002345E <AmiBlitz3.ab3@5255>   MOVE.w #$D205,D1
00023464 <AmiBlitz3.ab3@5256> JMP Atokejsr
0002346A <AmiBlitz3.ab3@5260>   MOVE.w proceduremode,D1
0002346E <AmiBlitz3.ab3@5261>    BNE.w errerr1
00023472 <AmiBlitz3.ab3@5262>   MOVE.w inerr(PC),D1
00023476 <AmiBlitz3.ab3@5263>    BNE.w errerr2
0002347C <AmiBlitz3.ab3@5264>   LEA inerr,a0
0002347E <AmiBlitz3.ab3@5265>   NOT.w (a0)                                               ;reass
00023482 <AmiBlitz3.ab3@5266>   MOVE.w #$203C,D1                                         ;move.l #x,d0
00023488 <AmiBlitz3.ab3@5267>   JSR writeword
00023492 <AmiBlitz3.ab3@5268>   MOVE.l destpointer,errcode
00023496 <AmiBlitz3.ab3@5269>   BSR.w addoff
0002349C <AmiBlitz3.ab3@5270>   JSR writelong
000234A0 <AmiBlitz3.ab3@5271>   MOVE.w #$D201,D1
000234A6 <AmiBlitz3.ab3@5272>   JSR Atokejsr
000234AA <AmiBlitz3.ab3@5273>   MOVE.w #$4EF9,D1                                         ;JMP
000234B0 <AmiBlitz3.ab3@5274>   JSR writeword
000234BA <AmiBlitz3.ab3@5275>   MOVE.l destpointer,errjmp
000234BE <AmiBlitz3.ab3@5276>   BSR.w addoff
000234C4 <AmiBlitz3.ab3@5277>   JSR writelong
000234CA <AmiBlitz3.ab3@5278>   MOVE.w dontwrite,D1
000234CE <AmiBlitz3.ab3@5279>    BNE.w do_SetErr__skip
000234D2 <AmiBlitz3.ab3@5280>   MOVEA.l errcode(PC),A0
000234D8 <AmiBlitz3.ab3@5281>   MOVE.l destpointer,(A0)
000234DA <AmiBlitz3.ab3@5284> RTS
000234DE <AmiBlitz3.ab3@5287> intlineat:  Ds.l 1
000234E0 <AmiBlitz3.ab3@5291>   MOVEQ.l #-$01,D1                                        ;type - need new string space
000234E4 <AmiBlitz3.ab3@5292>   BSR.w errchx
000234EA <AmiBlitz3.ab3@5293>   MOVE.w D1,intstring
000234F4 <AmiBlitz3.ab3@5294>   MOVE.l linenumat,intlineat
000234FA <AmiBlitz3.ab3@5295>   JSR JL_0_BF6A                                           ;get constant - int level
00023500 <AmiBlitz3.ab3@5296>   CMP.l #$E,D3
00023504 <AmiBlitz3.ab3@5297>    BCC.w interr4
0002350A <AmiBlitz3.ab3@5298>   ST intsused
00023510 <AmiBlitz3.ab3@5299>   MOVE.w D3,intlevel
00023514 <AmiBlitz3.ab3@5300>   MOVE.w #$7000,D1
00023516 <AmiBlitz3.ab3@5301>   OR.w D3,D1                                              
0002351C <AmiBlitz3.ab3@5302>   JSR writeword                                         ;moveq #x,d0
00023520 <AmiBlitz3.ab3@5303>   MOVE.w #$223C,D1                                        ;move.l #x,d1
00023526 <AmiBlitz3.ab3@5304>   JSR writeword
0002352A <AmiBlitz3.ab3@5305>   BSR.w addoff
00023530 <AmiBlitz3.ab3@5306>   MOVE.l destpointer,-(A7)
00023534 <AmiBlitz3.ab3@5307>   BSR.w writelong
00023538 <AmiBlitz3.ab3@5308>   MOVE.w #$C100,D1
0002353E <AmiBlitz3.ab3@5309>   JSR Atokejsr
00023542 <AmiBlitz3.ab3@5310>   MOVE.w #$4EF9,D1                                        ;jmp
00023548 <AmiBlitz3.ab3@5311>   JSR writeword
0002354C <AmiBlitz3.ab3@5312>   BSR.w addoff
00023556 <AmiBlitz3.ab3@5313>   MOVE.l destpointer,intjmpat
0002355A <AmiBlitz3.ab3@5314>   BSR.w writelong
0002355C <AmiBlitz3.ab3@5315>   MOVEA.l (A7)+,A0
00023562 <AmiBlitz3.ab3@5316>   MOVE.w dontwrite,D1
00023566 <AmiBlitz3.ab3@5317>   BNE.w do_SetInt__dontpoke
0002356C <AmiBlitz3.ab3@5318>   MOVE.l destpointer,(A0)
00023570 <AmiBlitz3.ab3@5321>   MOVE.l intstart0(PC),D1
00023574 <AmiBlitz3.ab3@5322>   BSR.w writelong
0002357A <AmiBlitz3.ab3@5323>   TST.b debugmode
0002357E <AmiBlitz3.ab3@5324>    BEQ.w do_SetInt__norerr
00023580 <AmiBlitz3.ab3@5328>   MOVEQ.l #$02,D1
00023584 <AmiBlitz3.ab3@5329>   BSR.w writetrap
00023588 <AmiBlitz3.ab3@5330>   BSR.w addoff
00023592 <AmiBlitz3.ab3@5331>   MOVE.l destpointer,intcleanat
00023596 <AmiBlitz3.ab3@5332>   BSR.w writelong
0002359C <AmiBlitz3.ab3@5333>   MOVE.w intlevel,D1
000235A0 <AmiBlitz3.ab3@5334>   BSR.w writeword
000235A4 <AmiBlitz3.ab3@5335>   MOVE.w #$C30B,D1                                         ;disable stack checks
000235AA <AmiBlitz3.ab3@5336>   JSR Atokejsr
000235AE <AmiBlitz3.ab3@5339>   MOVE.w #$FED3,D1
000235B2 <AmiBlitz3.ab3@5340>   BSR.w uselib
000235B6 <AmiBlitz3.ab3@5341>   MOVE.w #$C102,D1
000235BC <AmiBlitz3.ab3@5342>   JSR Atokejsr
000235C4 <AmiBlitz3.ab3@5343>   MOVE.w #-1,lasta6
000235CE <AmiBlitz3.ab3@5344>   MOVE.l linenumat,intline
000235D0 <AmiBlitz3.ab3@5345> RTS
000235D2 <AmiBlitz3.ab3@5349>             Ds.w 1                                         ;??looks like obsolved data??
000235D6 <AmiBlitz3.ab3@5351> intdata1:   Ds.l 1                                         ;where in data1 a5 is being kept
000235DA <AmiBlitz3.ab3@5353> intjmpat:   Ds.l 1
000235DE <AmiBlitz3.ab3@5354> intline:    Ds.l 1
000235E0 <AmiBlitz3.ab3@5355> intstring:  Ds.w 1                                         ;flag 0 = no setint
000235E2 <AmiBlitz3.ab3@5358> intlevel:   Ds.w 1
000235E6 <AmiBlitz3.ab3@5359> intcleanat: Ds.l 1
000235EA <AmiBlitz3.ab3@5360> ret15add:   Ds.l 1
000235EC <AmiBlitz3.ab3@5361> ret15cc:    Ds.w 1
000235F4 <AmiBlitz3.ab3@5365>   ADDI.l #$12,$2(A7)
000235FC <AmiBlitz3.ab3@5366>   MOVE.l $2(A7),ret15add
00023602 <AmiBlitz3.ab3@5367>   MOVE.w (A7),ret15cc
0002360A <AmiBlitz3.ab3@5368>   MOVE.l #directdo,$2(A7)
0002360C <AmiBlitz3.ab3@5369> RTE
00023610 <AmiBlitz3.ab3@5378>   MOVE.l ret15add(PC),-(A7)
00023614 <AmiBlitz3.ab3@5379>   MOVE.w ret15cc(PC),-(A7)                                 ;15*4
00023618 <AmiBlitz3.ab3@5380>   MOVEM.l D0-D7/A0-A6,-(A7)
00023622 <AmiBlitz3.ab3@5381>   MOVE.l destbufferend,trap15temp                          ;store high buff addr
0002362C <AmiBlitz3.ab3@5382>   MOVE.l destbufferstart,trap15temp2
00023636 <AmiBlitz3.ab3@5383>   MOVE.l libend,templibend
00023640 <AmiBlitz3.ab3@5384>   MOVE.l data1start,tempdata1start
00023646 <AmiBlitz3.ab3@5385>   CLR.l hunkoffsetcounter
0002364C <AmiBlitz3.ab3@5387>   MOVE.l directbuffer,a0
00023652 <AmiBlitz3.ab3@5391>   MOVE.l a0,destbufferstart
00023658 <AmiBlitz3.ab3@5392>   ADD.l #3900,a0
0002365E <AmiBlitz3.ab3@5393>   MOVE.l a0,destbufferend
00023664 <AmiBlitz3.ab3@5394>   TST.b exdebug
00023668 <AmiBlitz3.ab3@5395>   BEQ 'l1
0002366E <AmiBlitz3.ab3@5396>   MOVE.l a0,libend
00023674 <AmiBlitz3.ab3@5397>   ADD.l #4000,a0
0002367A <AmiBlitz3.ab3@5398>   MOVE.l a0,data1start
00023684 <AmiBlitz3.ab3@5401>   MOVE.l #dircont,errcont
0002368A <AmiBlitz3.ab3@5402> 
00023690 <AmiBlitz3.ab3@5403>   MOVE.l A7,errstack
00023698 <AmiBlitz3.ab3@5404>   MOVE.w #$FFFF,dirmode
0002369C <AmiBlitz3.ab3@5406>     MOVEA.l ret15add(PC),A1
000236A2 <AmiBlitz3.ab3@5407>     MOVE.w -(A1),blitzmode
000236A4 <AmiBlitz3.ab3@5408>     CLR.l -(A1)
000236AA <AmiBlitz3.ab3@5409>     MOVE.l -(A1),firstglob
000236B0 <AmiBlitz3.ab3@5410>     MOVE.l -(A1),firstlocal
000236B6 <AmiBlitz3.ab3@5412>   CLR.w proceduremode
000236BC <AmiBlitz3.ab3@5413>   MOVE.l firstglob,D0
000236C2 <AmiBlitz3.ab3@5414>   OR.l firstlocal,D0
000236C6 <AmiBlitz3.ab3@5415>   BEQ.b directdo__skip
000236CC <AmiBlitz3.ab3@5416>   NOT.w proceduremode
000236CE <AmiBlitz3.ab3@5419>   MOVEA.l -(A1),A0                                         ;address of string
000236D0 <AmiBlitz3.ab3@5423>   MOVE.l A0,-(A7)
0002370E <AmiBlitz3.ab3@5426>   !ComData_GetL{comFunc_DebugTrap,A1}
00023710 <AmiBlitz3.ab3@5428>   JSR (A1)                                                 ;tokenise line.....
00023712 <AmiBlitz3.ab3@5430>   MOVEA.l (A7)+,A5
0002371C <AmiBlitz3.ab3@5431>   MOVE.l directbuffer,destpointer
00023722 <AmiBlitz3.ab3@5432>   TST.b exdebug
00023726 <AmiBlitz3.ab3@5433>   BEQ 'noexdebug
00023728 <AmiBlitz3.ab3@5434>   MOVE.l a5,a0
0002372E <AmiBlitz3.ab3@5435>   MOVE.l #200,d0
00023734 <AmiBlitz3.ab3@5438>     MOVE.b 0(a0,d0.l),8(a0,d0.l)
00023738 <AmiBlitz3.ab3@5439>   DBF d0,'l1
0002373E <AmiBlitz3.ab3@5444>   MOVE.l destpointer,a0
00023742 <AmiBlitz3.ab3@5445>   MOVE.w #$207c,(a0)+
00023744 <AmiBlitz3.ab3@5446>   MOVE.l a5,d0
0002374A <AmiBlitz3.ab3@5447>   ADD.l #$206,d0                                           ;constant from debuglib
0002374C <AmiBlitz3.ab3@5448>   MOVE.l d0,(a0)+
00023752 <AmiBlitz3.ab3@5449>   MOVE.l a0,destpointer
00023754 <AmiBlitz3.ab3@5450>   MOVE.l a5,a0
00023758 <AmiBlitz3.ab3@5451>   MOVE.w #$8039,(a0)+                                      ;TokeJsr 164 (inputoutputlib) LSL 7+4
0002375E <AmiBlitz3.ab3@5452>   MOVE.l #"$520",(a0)+
00023762 <AmiBlitz3.ab3@5453>   MOVE.w #"4:",(a0)+
00023768 <AmiBlitz3.ab3@5456>   CLR.w dontwrite
00023770 <AmiBlitz3.ab3@5457>   MOVE.w #$FFFF,lasta6
00023774 <AmiBlitz3.ab3@5458>   BSR.w compile_line                                        ;.....compile it
0002377A <AmiBlitz3.ab3@5459>   TST.b exdebug
0002377E <AmiBlitz3.ab3@5460>   BEQ 'noexdebug2
00023784 <AmiBlitz3.ab3@5461>   JSR JL_0_6C76
0002378A <AmiBlitz3.ab3@5464>   CLR.w proceduremode
0002378E <AmiBlitz3.ab3@5465>   BSR.w errchx
00023792 <AmiBlitz3.ab3@5466>   MOVE.w #$4EF9,D1
00023796 <AmiBlitz3.ab3@5467>   BSR.w writeword                                          ;JMP
0002379A <AmiBlitz3.ab3@5468>   MOVE.l ret15add(PC),D1
0002379E <AmiBlitz3.ab3@5469>   BSR.w writelong                                          ;jmp to done
000237A4 <AmiBlitz3.ab3@5470>   MOVE.w dontwrite,D0
000237A8 <AmiBlitz3.ab3@5471>    BNE.w nodirmem
000237B0 <AmiBlitz3.ab3@5472>   MOVE.l directbuffer,$3E(A7)                              ;install code address
000237B6 <AmiBlitz3.ab3@5475>   CLR.w dirmode
000237BC <AmiBlitz3.ab3@5476>   MOVE.w ret15cc(PC),$3C(A7)
000237C6 <AmiBlitz3.ab3@5477>   MOVE.l trap15temp,destbufferend
000237D0 <AmiBlitz3.ab3@5478>   MOVE.l trap15temp2,destbufferstart
000237DA <AmiBlitz3.ab3@5479>   MOVE.l tempdata1start,data1start
000237E4 <AmiBlitz3.ab3@5480>   MOVE.l templibend,libend
000237E8 <AmiBlitz3.ab3@5481>   MOVEM.l (A7)+,D0-D7/A0-A6
000237EC <AmiBlitz3.ab3@5482>   BSR.w Aclearcache                                        ;selden used
000237EE <AmiBlitz3.ab3@5483> RTR
000237F2 <AmiBlitz3.ab3@5486>   MOVEA.l ret15add(PC),A0
000237F4 <AmiBlitz3.ab3@5487>   SUBQ.w #2,A0
000237F6 <AmiBlitz3.ab3@5488>   MOVE.l D0,-(A0)
000237FA <AmiBlitz3.ab3@5489> BRA.w direxit
000237FE <AmiBlitz3.ab3@5493>   MOVE.w $6(A3),D1
00023802 <AmiBlitz3.ab3@5494>   BSR.w uselib                                             ;get lib for base address
00023806 <AmiBlitz3.ab3@5495>   MOVE.w $A(A1),-(A7)                                      ;libbase reg
00023808 <AmiBlitz3.ab3@5496>   ADDQ.w #8,A3
0002380A <AmiBlitz3.ab3@5497>   MOVE.w (A3)+,-(A7)                                       ;get offset for lib
0002380C <AmiBlitz3.ab3@5498>   MOVE.l A3,-(A7)
0002380E <AmiBlitz3.ab3@5502>   MOVEQ.l #$00,D3
00023814 <AmiBlitz3.ab3@5503>   JSR checka4a5
00023816 <AmiBlitz3.ab3@5505>   MOVE.b (A3)+,D1
0002381A <AmiBlitz3.ab3@5506>    BMI.w stamigalib__done
0002381C <AmiBlitz3.ab3@5507>   MOVEQ.l #$03,D2
0002381E <AmiBlitz3.ab3@5508>   ADDQ.w #1,D3
00023822 <AmiBlitz3.ab3@5509>   MOVEM.l D3/A3,-(A7)
00023828 <AmiBlitz3.ab3@5510>   MOVE.b funcparloop,-(a7)
00023830 <AmiBlitz3.ab3@5511>   MOVE.b #0,funcparloop
00023836 <AmiBlitz3.ab3@5512>   MOVE.l leftsidetype,-(a7)
0002383C <AmiBlitz3.ab3@5513>   MOVE.l rightsidetype,-(a7)
00023842 <AmiBlitz3.ab3@5514>   MOVE.w leftsideflagmask,-(a7)
00023848 <AmiBlitz3.ab3@5515>   MOVE.w rightsideflagmask,-(a7)
0002384E <AmiBlitz3.ab3@5516>   CLR.l leftsidetype
00023854 <AmiBlitz3.ab3@5517>   CLR.l rightsidetype
0002385A <AmiBlitz3.ab3@5518>   CLR.w leftsideflagmask
00023860 <AmiBlitz3.ab3@5519>   CLR.w rightsideflagmask
00023866 <AmiBlitz3.ab3@5520>   MOVE.b blitzparloop,-(a7)
0002386E <AmiBlitz3.ab3@5521>   MOVE.b #1,blitzparloop                                 ;write the parameter to stack
00023874 <AmiBlitz3.ab3@5522>   JSR peval
0002387A <AmiBlitz3.ab3@5523>   MOVE.b (a7)+,blitzparloop
00023880 <AmiBlitz3.ab3@5524>   MOVE.w (a7)+,rightsideflagmask
00023886 <AmiBlitz3.ab3@5525>   MOVE.w (a7)+,leftsideflagmask
0002388C <AmiBlitz3.ab3@5526>   MOVE.l (a7)+,rightsidetype
00023892 <AmiBlitz3.ab3@5527>   MOVE.l (a7)+,leftsidetype
00023898 <AmiBlitz3.ab3@5528>   MOVE.b (a7)+,funcparloop
0002389C <AmiBlitz3.ab3@5529>   MOVEM.l (A7)+,D3/A3
000238A0 <AmiBlitz3.ab3@5530>   CMP.w #$2C,D0
000238A4 <AmiBlitz3.ab3@5531>    BEQ.w stamigalib__loop
000238A6 <AmiBlitz3.ab3@5532>   TST.b (A3)
000238AA <AmiBlitz3.ab3@5533>    BPL.w syntaxerr
000238AC <AmiBlitz3.ab3@5536>   MOVEA.l (A7)+,A3
000238AE <AmiBlitz3.ab3@5537>   SUBQ.w #1,D3
000238B2 <AmiBlitz3.ab3@5538>    BPL.w stamigalib__toend
000238B6 <AmiBlitz3.ab3@5539>    BSR.w get1bytemain                                      ;no pars - get :
000238BA <AmiBlitz3.ab3@5540> BRA.w stamigalib__nopars
000238BC <AmiBlitz3.ab3@5543>   TST.b (A3)+                                              ;go to end of params
000238C0 <AmiBlitz3.ab3@5544>    BPL.w stamigalib__toend
000238C2 <AmiBlitz3.ab3@5545>   SUBQ.w #1,A3
000238C4 <AmiBlitz3.ab3@5548>    MOVEQ.l #$00,D1
000238C6 <AmiBlitz3.ab3@5549>    MOVE.b -(A3),D1
000238CA <AmiBlitz3.ab3@5550>    BTST #$4,D1
000238CE <AmiBlitz3.ab3@5551>     BNE.w stamigalib__addreg
000238D0 <AmiBlitz3.ab3@5552>    LSL.w #8,D1
000238D2 <AmiBlitz3.ab3@5553>    LSL.w #1,D1
000238D6 <AmiBlitz3.ab3@5554>    ORI.w #$201F,D1
000238DA <AmiBlitz3.ab3@5555>  BRA.w stamigalib__gotit
000238DE <AmiBlitz3.ab3@5558>    ANDI.w #$7,D1
000238E0 <AmiBlitz3.ab3@5559>    LSL.w #8,D1
000238E2 <AmiBlitz3.ab3@5560>    LSL.w #1,D1
000238E6 <AmiBlitz3.ab3@5561>    ORI.w #$205F,D1
000238EA <AmiBlitz3.ab3@5564>     BSR.w writeword
000238EE <AmiBlitz3.ab3@5565>   DBF D3,stamigalib__loop2
000238F4 <AmiBlitz3.ab3@5568>   MOVE.w (A7)+,libjsr+2
000238FA <AmiBlitz3.ab3@5569>   MOVE.w (A7)+,libbase+2
00023900 <AmiBlitz3.ab3@5570>   MOVE.l libbase,D1
00023904 <AmiBlitz3.ab3@5571>    BSR.w writelong
0002390A <AmiBlitz3.ab3@5572>   MOVE.l libjsr,D1
00023910 <AmiBlitz3.ab3@5573>   JSR writelong
00023916 <AmiBlitz3.ab3@5574>   JSR restorea4a5
00023918 <AmiBlitz3.ab3@5575>   RTS
0002391E <AmiBlitz3.ab3@5578>   MOVE.l data1,D4
00023924 <AmiBlitz3.ab3@5579>   SUB.l data1start,D4
0002392A <AmiBlitz3.ab3@5580>   ADD.l #10000,d4
00023930 <AmiBlitz3.ab3@5581>   MOVE.l libend,D3
00023936 <AmiBlitz3.ab3@5582>   SUB.l destbufferend,D3
0002393C <AmiBlitz3.ab3@5583>   ADD.l #40000,d3
00023942 <AmiBlitz3.ab3@5584>   MOVE.l bigpc,D2
00023948 <AmiBlitz3.ab3@5585>   SUB.l destbufferstart,D2
0002394E <AmiBlitz3.ab3@5586>   ADD.l #20000,d2
00023954 <AmiBlitz3.ab3@5587>   MOVE.l databuffer,D5
0002395A <AmiBlitz3.ab3@5588>   ADD.l #10000,D5
0002395E <AmiBlitz3.ab3@5589> BRA newallox
00023964 <AmiBlitz3.ab3@5593>   MOVE.l objectbuffer,D2
00023966 <AmiBlitz3.ab3@5594>   LSR.l #1,D2
0002396C <AmiBlitz3.ab3@5595>   ADD.l objectbuffer,D2
00023972 <AmiBlitz3.ab3@5596>   MOVE.l libsbuffer,D3
00023974 <AmiBlitz3.ab3@5597>   LSR.l #1,D3
0002397A <AmiBlitz3.ab3@5598>   ADD.l libsbuffer,D3
00023980 <AmiBlitz3.ab3@5599>   MOVE.l systembuffer,D4
00023982 <AmiBlitz3.ab3@5600>   LSR.l #1,D4
00023988 <AmiBlitz3.ab3@5601>   ADD.l systembuffer,D4
0002398E <AmiBlitz3.ab3@5602>   MOVE.l databuffer,D5
00023990 <AmiBlitz3.ab3@5603>   LSR.l #1,D5
00023996 <AmiBlitz3.ab3@5604>   ADD.l databuffer,D5
0002399A <AmiBlitz3.ab3@5605> BRA.w newallox
000239A0 <AmiBlitz3.ab3@5609>   MOVE.l bigpc,D2
000239A6 <AmiBlitz3.ab3@5610>   SUB.l destbufferstart,D2                                     ;size of object buffer
000239AC <AmiBlitz3.ab3@5611>   SUB.l savefuncspace,d2
000239B2 <AmiBlitz3.ab3@5613>   TST.w debugversion
000239B6 <AmiBlitz3.ab3@5614>    BNE.b alloxadj__skip
000239BC <AmiBlitz3.ab3@5615>   ADDI.l #$800,D2
000239C2 <AmiBlitz3.ab3@5618>   MOVE.l libend,D3
000239C8 <AmiBlitz3.ab3@5619>   SUB.l destbufferend,D3
000239CE <AmiBlitz3.ab3@5621>   MOVE.l data1,D4
000239D4 <AmiBlitz3.ab3@5622>   SUB.l data1start,D4
000239DA <AmiBlitz3.ab3@5624>   MOVE.l data2,D5
000239E0 <AmiBlitz3.ab3@5625>   SUB.l data2at,D5
000239E6 <AmiBlitz3.ab3@5627>   CLR.l morememadd
000239EA <AmiBlitz3.ab3@5630>   BSR.w makeallox
000239EE <AmiBlitz3.ab3@5631>   BNE.w newallox__done
000239F2 <AmiBlitz3.ab3@5632> BRA.w init_buffers
000239F4 <AmiBlitz3.ab3@5635> RTS
000239FA <AmiBlitz3.ab3@5639>   MOVEA.l _execbase,A6
00023A00 <AmiBlitz3.ab3@5640>   MOVE.l objlen,D0
00023A04 <AmiBlitz3.ab3@5641>   BEQ.w freeallox__skip
00023A0A <AmiBlitz3.ab3@5642>   CLR.l objlen
00023A10 <AmiBlitz3.ab3@5643>   MOVEA.l destbufferstart,A1
00023A16 <AmiBlitz3.ab3@5644>   MOVE.l mempool,a0
00023A1A <AmiBlitz3.ab3@5645> JMP _FreeVec(A6)
00023A1C <AmiBlitz3.ab3@5648> RTS
00023A22 <AmiBlitz3.ab3@5652>   MOVE.l objectbuffer,D2
00023A28 <AmiBlitz3.ab3@5653>   MOVE.l libsbuffer,D3
00023A2E <AmiBlitz3.ab3@5654>   MOVE.l systembuffer,D4
00023A34 <AmiBlitz3.ab3@5655>   MOVE.l databuffer,D5
00023A3C <AmiBlitz3.ab3@5658>   MOVE.w #$FFFF,anyerrs
00023A40 <AmiBlitz3.ab3@5659>   BSR.w freeallox
00023A42 <AmiBlitz3.ab3@5663>   ADDQ.l #1,D2
00023A46 <AmiBlitz3.ab3@5664>   BCLR #$0,D2
00023A48 <AmiBlitz3.ab3@5665>   ADDQ.l #1,D3
00023A4C <AmiBlitz3.ab3@5666>   BCLR #$0,D3
00023A4E <AmiBlitz3.ab3@5667>   ADDQ.l #1,D4
00023A52 <AmiBlitz3.ab3@5668>   BCLR #$0,D4
00023A54 <AmiBlitz3.ab3@5669>   TST.l d5
00023A58 <AmiBlitz3.ab3@5670>   BNE 'l1
00023A5A <AmiBlitz3.ab3@5673>   ADDQ.l #1,D5
00023A5E <AmiBlitz3.ab3@5674>   BCLR #$0,D5
00023A60 <AmiBlitz3.ab3@5675>   MOVE.l D2,D0
00023A62 <AmiBlitz3.ab3@5676>   ADD.l D3,D0
00023A64 <AmiBlitz3.ab3@5677>   ADD.l D4,D0
00023A66 <AmiBlitz3.ab3@5678>   ADD.l D5,D0
00023A6C <AmiBlitz3.ab3@5679>   ADD.l #moremem,d0
00023A6E <AmiBlitz3.ab3@5680>   MOVE.l D0,D6
00023A74 <AmiBlitz3.ab3@5681>   MOVE.l #MemfPublic_MemfClear,D1
00023A7A <AmiBlitz3.ab3@5682>   MOVE.l mempool,a0
00023A80 <AmiBlitz3.ab3@5683>   MOVEA.l _execbase,A6
00023A84 <AmiBlitz3.ab3@5684>   JSR _AllocVec(a6)                                        ;alloc mem for objectbuffer
00023A86 <AmiBlitz3.ab3@5686>   TST.l D0
00023A8A <AmiBlitz3.ab3@5687>   BEQ.w exit_initbuffers
00023A90 <AmiBlitz3.ab3@5688>   MOVE.l D6,objlen
00023A96 <AmiBlitz3.ab3@5689>   MOVE.l D2,objectbuffer
00023A9C <AmiBlitz3.ab3@5690>   MOVE.l D3,libsbuffer
00023AA2 <AmiBlitz3.ab3@5691>   MOVE.l D4,systembuffer
00023AA8 <AmiBlitz3.ab3@5692>   MOVE.l D5,databuffer
00023AAE <AmiBlitz3.ab3@5693>   MOVE.l D0,destbufferstart
00023AE2 <AmiBlitz3.ab3@5696>   !ComData_SetL{comPtr_DestBufferStart,D0}
00023AE4 <AmiBlitz3.ab3@5697>   ADD.l D2,D0
00023AEA <AmiBlitz3.ab3@5698>   MOVE.l D0,destbufferend
00023AEC <AmiBlitz3.ab3@5699>   ADD.l D3,D0
00023AF2 <AmiBlitz3.ab3@5700>   MOVE.l D0,data1start
00023AF4 <AmiBlitz3.ab3@5701>   ADD.l D4,D0
00023AFA <AmiBlitz3.ab3@5702>   MOVE.l D0,data2at
00023AFC <AmiBlitz3.ab3@5703>   ADD.l D5,D0
00023B02 <AmiBlitz3.ab3@5704>   MOVE.l D0,allat
00023B04 <AmiBlitz3.ab3@5707> RTS
00023B08 <AmiBlitz3.ab3@5711>   Dc.b $00,$00,$00,$01                                     ;         1
00023B0C <AmiBlitz3.ab3@5712>   Dc.b $00,$00,$00,$0A                                     ;        10
00023B10 <AmiBlitz3.ab3@5713>   Dc.b $00,$00,$00,$64                                     ;       100
00023B14 <AmiBlitz3.ab3@5714>   Dc.b $00,$00,$03,$E8                                     ;      1000
00023B18 <AmiBlitz3.ab3@5715>   Dc.b $00,$00,$27,$10                                     ;     10000
00023B1C <AmiBlitz3.ab3@5716>   Dc.b $00,$01,$86,$A0                                     ;    100000
00023B20 <AmiBlitz3.ab3@5717>   Dc.b $00,$0F,$42,$40                                     ;   1000000
00023B24 <AmiBlitz3.ab3@5718>   Dc.b $00,$98,$96,$80                                     ;  10000000
00023B28 <AmiBlitz3.ab3@5719>   Dc.b $05,$F5,$E1,$00                                     ; 100000000
00023B2C <AmiBlitz3.ab3@5720>   Dc.b $3B,$9A,$CA,$00                                     ;1000000000
00023B2E <AmiBlitz3.ab3@5724>   MOVEQ.l #$00,D1                                          ;no zero printed
00023B30 <AmiBlitz3.ab3@5725>   MOVEQ.l #$24,D3                                          ; "$"
00023B32 <AmiBlitz3.ab3@5728>   MOVEQ.l #$30,D4                                          ; "0"
00023B36 <AmiBlitz3.ab3@5731>     CMP.l divisors(PC,D3.W),D2
00023B3A <AmiBlitz3.ab3@5732>     BCS.w makelong__skip
00023B3E <AmiBlitz3.ab3@5733>     SUB.l divisors(PC,D3.W),D2
00023B40 <AmiBlitz3.ab3@5734>     ADDQ.w #1,D4
00023B44 <AmiBlitz3.ab3@5735> BRA.w makelong__loop2
00023B48 <AmiBlitz3.ab3@5738>   CMP.b #"0",D4
00023B4C <AmiBlitz3.ab3@5739>   BNE.w makelong__doit
00023B4E <AmiBlitz3.ab3@5740>   TST.w D1
00023B52 <AmiBlitz3.ab3@5741>   BEQ.w makelong__skip2
00023B54 <AmiBlitz3.ab3@5744>   MOVE.b D4,(A0)+
00023B56 <AmiBlitz3.ab3@5745>   MOVEQ.l #$01,D1
00023B58 <AmiBlitz3.ab3@5748>   SUBQ.w #4,D3
00023B5C <AmiBlitz3.ab3@5749>   BPL.w makelong__loop
00023B5E <AmiBlitz3.ab3@5750>   TST.w D1
00023B62 <AmiBlitz3.ab3@5751>   BNE.w makelong__skip3
00023B66 <AmiBlitz3.ab3@5752>   MOVE.b #"0",(A0)+
00023B68 <AmiBlitz3.ab3@5755>   CLR.b (A0)
00023B6A <AmiBlitz3.ab3@5756> RTS
00023B8A <AmiBlitz3.ab3@5759> str_residentrequester:  Dc.b "Name of Resident File to Create",0 : Even        ;restext org source
00023C4A <AmiBlitz3.ab3@5760> str_residentpath:       Ds.l 48                                                ;respath org source
00023D0A <AmiBlitz3.ab3@5761> str_residentname:       Ds.l 48                                                ;resname org source
00023D10 <AmiBlitz3.ab3@5765>   MOVE.l macrobase,D0
00023D14 <AmiBlitz3.ab3@5766>    BNE.w create_residentfile
00023D1A <AmiBlitz3.ab3@5767>   MOVE.l newtype_string,D0
00023D1E <AmiBlitz3.ab3@5768>    BNE.w create_residentfile
00023D24 <AmiBlitz3.ab3@5769>   MOVEA.l labelbase,A2
00023D28 <AmiBlitz3.ab3@5772>     CMPA.w #$0,A2
00023D2C <AmiBlitz3.ab3@5773>      BEQ.w menu_createresidentfile__err
00023D34 <AmiBlitz3.ab3@5774>     CMPI.l #$1,$4(A2)
00023D38 <AmiBlitz3.ab3@5775>      BEQ.w create_residentfile
00023D3A <AmiBlitz3.ab3@5776>     MOVEA.l (A2),A2
00023D3E <AmiBlitz3.ab3@5777> BRA.w menu_createresidentfile__loop
00023D68 <AmiBlitz3.ab3@5780>   !basic
00023DCA <AmiBlitz3.ab3@5781> 
00023DE8 <AmiBlitz3.ab3@5782>   !asm
00023DEA <AmiBlitz3.ab3@5783> RTS
00023E28 <AmiBlitz3.ab3@5789>   !ComData_GetL{comFunc_ASLFileRequest,A3}
00023E2E <AmiBlitz3.ab3@5790>   LEA str_residentrequester,A2
00023E34 <AmiBlitz3.ab3@5791>   LEA str_residentpath,A0
00023E3A <AmiBlitz3.ab3@5792>   LEA str_residentname,A1
00023E64 <AmiBlitz3.ab3@5793>   !basic
00023E9C <AmiBlitz3.ab3@5794>     Poke$ ?str_residentpath,my_residentsdir$
00023EC8 <AmiBlitz3.ab3@5795>     Poke$ ?str_residentname,".res"
00023EE6 <AmiBlitz3.ab3@5796>   !asm
00023EE8 <AmiBlitz3.ab3@5798>   JSR (A3)                                                 ;open ped filerequest
00023EEC <AmiBlitz3.ab3@5800>   BEQ.w menu_createresidentfile__err
00023EEE <AmiBlitz3.ab3@5803>   MOVE.l D0,D1
00023EF4 <AmiBlitz3.ab3@5804>   MOVE.l #HUNK_RELOC_8__MODE_NEWFILE,D2
00023EF8 <AmiBlitz3.ab3@5805>   MOVEA.l _dosbase(PC),A6
00023EFC <AmiBlitz3.ab3@5806>   JSR _Open(A6)
00023EFE <AmiBlitz3.ab3@5807>   MOVE.l D0,D7                                             ;handle
00023F02 <AmiBlitz3.ab3@5808>   BEQ.w menu_createresidentfile__err
00023F06 <AmiBlitz3.ab3@5809>   MOVEM.l d2-d7/a0-a6,-(a7)
00023F0C <AmiBlitz3.ab3@5810>   LEA devo,a0
00023F12 <AmiBlitz3.ab3@5811>   LEA ptr_parameterstore,a1
00023F14 <AmiBlitz3.ab3@5814>     MOVE.b (a0)+,(a1)+
00023F18 <AmiBlitz3.ab3@5815>   BNE 'l1
00023F1A <AmiBlitz3.ab3@5816>   MOVEQ #13,d2
00023F20 <AmiBlitz3.ab3@5817>   JSR findlabel2
00023F24 <AmiBlitz3.ab3@5818>   BNE 'd
00023F28 <AmiBlitz3.ab3@5819>   TST.l 8(a2)
00023F2C <AmiBlitz3.ab3@5820>   BEQ 'd2
00023F56 <AmiBlitz3.ab3@5821>   !basic
00023FB8 <AmiBlitz3.ab3@5822>     error{!TRANS{"Cannot create Resident with develope debug 1"}}
00023FD6 <AmiBlitz3.ab3@5823>   !asm
00023FDA <AmiBlitz3.ab3@5824>   MOVEM.l (a7)+,d2-d7/a0-a6
00023FDE <AmiBlitz3.ab3@5825>   MOVEA.l _dosbase(PC),A6
00023FE0 <AmiBlitz3.ab3@5826>   MOVE.l d7,d1
00023FE4 <AmiBlitz3.ab3@5827>   JSR _Close(a6)
00023FE8 <AmiBlitz3.ab3@5828> BRA menu_createresidentfile__err
00023FEC <AmiBlitz3.ab3@5832>   MOVEM.l (a7)+,d2-d7/a0-a6
00023FF0 <AmiBlitz3.ab3@5833>   BSR.w call_setpointerbusy
00023FF4 <AmiBlitz3.ab3@5835>   BSR.w AJL_0_7962
00023FF6 <AmiBlitz3.ab3@5836>   MOVE.l D7,D1
00023FFC <AmiBlitz3.ab3@5837>   MOVE.l #tsthead,D2                                       ;header
00023FFE <AmiBlitz3.ab3@5838>   MOVEQ.l #$20,D3
00024002 <AmiBlitz3.ab3@5839>   MOVEA.l _dosbase(PC),A6
00024006 <AmiBlitz3.ab3@5840>   JSR _Write(A6)
00024008 <AmiBlitz3.ab3@5841>   MOVEQ.l #$00,D6                                          ;offset from start of file!
0002400C <AmiBlitz3.ab3@5842>   BSR.w restypes
00024010 <AmiBlitz3.ab3@5843>   BSR.w resmacs
00024014 <AmiBlitz3.ab3@5844>   BSR.w resconsts
00024016 <AmiBlitz3.ab3@5845>   MOVE.l D6,D3
00024018 <AmiBlitz3.ab3@5846>   ADDQ.l #3,D3
0002401E <AmiBlitz3.ab3@5847>   ANDI.l #$FFFFFFFC,D3                                    ;long word align
00024020 <AmiBlitz3.ab3@5848>   MOVE.l D3,-(A7)
00024022 <AmiBlitz3.ab3@5849>   SUB.l D6,D3
00024026 <AmiBlitz3.ab3@5850>   BEQ.w menu_createresidentfile__noalign
0002402C <AmiBlitz3.ab3@5851>   MOVE.l #writelist,D2
0002402E <AmiBlitz3.ab3@5852>   MOVE.l D7,D1
00024034 <AmiBlitz3.ab3@5853>   MOVEA.l _dosbase,A6
00024038 <AmiBlitz3.ab3@5854>   JSR _Write(A6)
00024042 <AmiBlitz3.ab3@5857>    MOVE.l hunkoffsetcounter,tstsize3
00024046 <AmiBlitz3.ab3@5858>    BEQ.w menu_createresidentfile__skip2a
00024048 <AmiBlitz3.ab3@5859>   MOVE.l D7,D1
0002404E <AmiBlitz3.ab3@5860>   MOVE.l #tstend,D2
00024050 <AmiBlitz3.ab3@5861>   MOVEQ.l #$0C,D3
00024056 <AmiBlitz3.ab3@5862>   MOVEA.l _dosbase,A6
0002405A <AmiBlitz3.ab3@5863>    JSR _Write(A6)
00024060 <AmiBlitz3.ab3@5867>   MOVEA.l hunkoffsetbase,A2
00024064 <AmiBlitz3.ab3@5870>   CMPA.w #$0,A2
00024068 <AmiBlitz3.ab3@5871>    BEQ.w menu_createresidentfile__skip2
0002406C <AmiBlitz3.ab3@5872>   LEA $4(A2),A1
0002406E <AmiBlitz3.ab3@5873>   MOVE.l D7,D1
00024070 <AmiBlitz3.ab3@5874>   MOVE.l A1,D2
00024072 <AmiBlitz3.ab3@5875>   MOVEQ.l #$04,D3
00024078 <AmiBlitz3.ab3@5876>   MOVEA.l _dosbase,A6
0002407C <AmiBlitz3.ab3@5877>    JSR _Write(A6)
0002407E <AmiBlitz3.ab3@5878>   MOVEA.l (A2),A2
00024082 <AmiBlitz3.ab3@5879> BRA.w menu_createresidentfile__oloop
00024084 <AmiBlitz3.ab3@5882>   MOVE.l D7,D1
0002408A <AmiBlitz3.ab3@5883>   MOVE.l #zero,D2
0002408C <AmiBlitz3.ab3@5884>   MOVEQ.l #$04,D3
00024092 <AmiBlitz3.ab3@5885>   MOVEA.l _dosbase,A6
00024096 <AmiBlitz3.ab3@5886>   JSR _Write(A6)
00024098 <AmiBlitz3.ab3@5889>   MOVE.l D7,D1
0002409E <AmiBlitz3.ab3@5890>   MOVE.l #tstdone,D2
000240A0 <AmiBlitz3.ab3@5891>   MOVEQ.l #$04,D3
000240A6 <AmiBlitz3.ab3@5892>   MOVEA.l _dosbase,A6
000240AA <AmiBlitz3.ab3@5893>    JSR _Write(A6)
000240AC <AmiBlitz3.ab3@5894>   MOVE.l (A7)+,D0
000240AE <AmiBlitz3.ab3@5895>   LSR.l #2,D0
000240B4 <AmiBlitz3.ab3@5896>   MOVE.l D0,temp1
000240B6 <AmiBlitz3.ab3@5897>   MOVE.l D7,D1
000240B8 <AmiBlitz3.ab3@5898>   MOVEQ.l #$14,D2
000240BA <AmiBlitz3.ab3@5899>   MOVEQ.l #-$01,D3
000240BE <AmiBlitz3.ab3@5900>   JSR _Seek(A6)
000240C0 <AmiBlitz3.ab3@5901>   MOVE.l D7,D1
000240C6 <AmiBlitz3.ab3@5902>   MOVE.l #temp1,D2
000240C8 <AmiBlitz3.ab3@5903>   MOVEQ.l #$04,D3
000240CC <AmiBlitz3.ab3@5904>    JSR _Write(A6)
000240CE <AmiBlitz3.ab3@5905>   MOVE.l D7,D1
000240D0 <AmiBlitz3.ab3@5906>   MOVEQ.l #$1C,D2
000240D2 <AmiBlitz3.ab3@5907>   MOVEQ.l #-$01,D3
000240D6 <AmiBlitz3.ab3@5908>    JSR _Seek(A6)
000240D8 <AmiBlitz3.ab3@5909>   MOVE.l D7,D1
000240DE <AmiBlitz3.ab3@5910>   MOVE.l #temp1,D2
000240E0 <AmiBlitz3.ab3@5911>   MOVEQ.l #$04,D3
000240E4 <AmiBlitz3.ab3@5912>    JSR _Write(A6)
000240E6 <AmiBlitz3.ab3@5913>   MOVE.l D7,D1
000240EA <AmiBlitz3.ab3@5914>    JSR _Close(A6)
000240EE <AmiBlitz3.ab3@5915> BRA.w call_setpointernormal
000240F0 <AmiBlitz3.ab3@5919>   ADDQ.w #5,D1
000240F2 <AmiBlitz3.ab3@5920>   ADDQ.b #8,D0
000240F6 <AmiBlitz3.ab3@5923>     CMPA.w #$0,A2
000240FA <AmiBlitz3.ab3@5924>     BEQ.w writelist__done
000240FE <AmiBlitz3.ab3@5925>      BSR.w writeitem
00024100 <AmiBlitz3.ab3@5926>     MOVEA.l (A2),A2
00024104 <AmiBlitz3.ab3@5927> BRA.w writelist__loop
00024106 <AmiBlitz3.ab3@5930> RTS
00024108 <AmiBlitz3.ab3@5933>   MOVEQ.l #$00,D3
0002410C <AmiBlitz3.ab3@5934>   MOVE.b $0(A2,D5.W),D3
0002410E <AmiBlitz3.ab3@5935>   ADDQ.w #1,D3
00024112 <AmiBlitz3.ab3@5936>   BCLR #$0,D3                                              ;word align
00024114 <AmiBlitz3.ab3@5937>   MOVE.l (A2),-(A7)
00024118 <AmiBlitz3.ab3@5938>    BEQ.w writeitem__skip
0002411C <AmiBlitz3.ab3@5939>    BSR.w resoff
0002411E <AmiBlitz3.ab3@5940>   ADD.l D3,D6
00024120 <AmiBlitz3.ab3@5941>   MOVE.l D6,(A2)
00024122 <AmiBlitz3.ab3@5942>   SUB.l D3,D6
00024124 <AmiBlitz3.ab3@5945>    ADD.l D3,D6
00024126 <AmiBlitz3.ab3@5946>   MOVE.l A2,D2
00024128 <AmiBlitz3.ab3@5947>   MOVE.l D7,D1
0002412E <AmiBlitz3.ab3@5948>   MOVEA.l _dosbase,A6
00024132 <AmiBlitz3.ab3@5949>    JSR _Write(A6)
00024134 <AmiBlitz3.ab3@5950>   MOVE.l (A7)+,(A2)
00024136 <AmiBlitz3.ab3@5951> RTS
00024138 <AmiBlitz3.ab3@5954>   MOVE.l D6,D2
0002413C <AmiBlitz3.ab3@5955> BRA.w addhunkoffset
00024140 <AmiBlitz3.ab3@5959>     CMPA.w #$0,A2
00024144 <AmiBlitz3.ab3@5960>      BEQ.w writeoffs__done
0002414A <AmiBlitz3.ab3@5961>     MOVEA.l newtypebase,A1
0002414C <AmiBlitz3.ab3@5962>     MOVEQ.l #$00,D1
00024150 <AmiBlitz3.ab3@5965>       CMPA.w #$0,A1
00024154 <AmiBlitz3.ab3@5966>       BEQ.w writeoffs__found
00024158 <AmiBlitz3.ab3@5967>       CMPA.l $A(A2),A1
0002415C <AmiBlitz3.ab3@5968>        BEQ.w writeoffs__found
0002415E <AmiBlitz3.ab3@5969>       ADDQ.w #1,D1
00024160 <AmiBlitz3.ab3@5970>       MOVEA.l (A1),A1
00024164 <AmiBlitz3.ab3@5971> BRA.w writeoffs__loop2
00024168 <AmiBlitz3.ab3@5974>     MOVE.w $A(A2),-(A7)
0002416C <AmiBlitz3.ab3@5975>     MOVE.w D1,$A(A2)
00024170 <AmiBlitz3.ab3@5976>      BSR.w writeitem
00024174 <AmiBlitz3.ab3@5977>     MOVE.w (A7)+,$A(A2)
00024176 <AmiBlitz3.ab3@5978>     MOVEA.l (A2),A2
0002417A <AmiBlitz3.ab3@5979> BRA.w writeoffs
0002417C <AmiBlitz3.ab3@5982> RTS
0002417E <AmiBlitz3.ab3@5986>   MOVEQ.l #$00,D0
00024182 <AmiBlitz3.ab3@5989>   CMPA.w #$0,A2
00024186 <AmiBlitz3.ab3@5990>    BEQ.w countem__done
00024188 <AmiBlitz3.ab3@5991>   ADDQ.w #1,D0
0002418A <AmiBlitz3.ab3@5992>   MOVEA.l (A2),A2
0002418E <AmiBlitz3.ab3@5993> BRA.w countem__loop
00024194 <AmiBlitz3.ab3@5996>   MOVE.w D0,temp1
00024196 <AmiBlitz3.ab3@5997>   MOVE.l D7,D1
0002419C <AmiBlitz3.ab3@5998>   MOVE.l #temp1,D2
0002419E <AmiBlitz3.ab3@5999>   MOVEQ.l #$02,D3
000241A0 <AmiBlitz3.ab3@6000>   ADDQ.l #2,D6
000241A6 <AmiBlitz3.ab3@6001>   MOVEA.l _dosbase,A6
000241AA <AmiBlitz3.ab3@6002> JMP _Write(A6)
000241B0 <AmiBlitz3.ab3@6006>    TST.b resdisable
000241B4 <AmiBlitz3.ab3@6007>    BEQ resmacs__l1
000241BA <AmiBlitz3.ab3@6008>    MOVE.l currentmacroaddr,a3
000241C0 <AmiBlitz3.ab3@6009>    CMP.l #0,a3
000241C4 <AmiBlitz3.ab3@6010>    BEQ resmacs__l1
000241C6 <AmiBlitz3.ab3@6011>    MOVE.l (a3),a3
000241CA <AmiBlitz3.ab3@6012> BRA resmacs__l2
000241D0 <AmiBlitz3.ab3@6015>   MOVEA.l macrobase,A3                                     ;??begin org code??
000241D2 <AmiBlitz3.ab3@6018>   MOVEA.l A3,A2
000241D6 <AmiBlitz3.ab3@6019>   BSR.w countem
000241DA <AmiBlitz3.ab3@6022>    CMPA.w #$0,A3
000241DE <AmiBlitz3.ab3@6023>    BEQ.w resmacs__done
000241E0 <AmiBlitz3.ab3@6024>   MOVE.l D6,D5
000241E2 <AmiBlitz3.ab3@6025>   MOVE.l (A3),-(A7)
000241E6 <AmiBlitz3.ab3@6026>   MOVE.l $4(A3),-(A7)
000241E8 <AmiBlitz3.ab3@6027>   MOVEQ.l #$00,D3
000241EC <AmiBlitz3.ab3@6028>   MOVE.b $C(A3),D3
000241EE <AmiBlitz3.ab3@6029>   ADDQ.w #1,D3
000241F2 <AmiBlitz3.ab3@6030>   BCLR #$0,D3
000241F4 <AmiBlitz3.ab3@6031>   ADD.l D3,D6                                              ;add len of struct
000241F8 <AmiBlitz3.ab3@6032>   TST.w $8(A3)
000241FC <AmiBlitz3.ab3@6033>    BEQ.w resmacs__notext
00024200 <AmiBlitz3.ab3@6034>   MOVE.l D6,$4(A3)
00024202 <AmiBlitz3.ab3@6035>   MOVE.l D5,D2
00024204 <AmiBlitz3.ab3@6036>   ADDQ.l #4,D2
00024208 <AmiBlitz3.ab3@6037>    BSR.w addhunkoffset
0002420A <AmiBlitz3.ab3@6040>   MOVEQ.l #$00,D4
0002420E <AmiBlitz3.ab3@6041>   MOVE.w $8(A3),D4
00024210 <AmiBlitz3.ab3@6042>   ADDQ.w #1,D4
00024214 <AmiBlitz3.ab3@6043>   BCLR #$0,D4
00024216 <AmiBlitz3.ab3@6044>   ADD.l D4,D6
00024218 <AmiBlitz3.ab3@6045>   TST.l (A3)
0002421C <AmiBlitz3.ab3@6046>    BEQ.w resmacs__nomore
0002421E <AmiBlitz3.ab3@6047>   MOVE.l D6,(A3)
00024220 <AmiBlitz3.ab3@6048>   MOVE.l D5,D2
00024224 <AmiBlitz3.ab3@6049>    BSR.w addhunkoffset
00024226 <AmiBlitz3.ab3@6052>   MOVE.l A3,D2
00024228 <AmiBlitz3.ab3@6053>   MOVE.l D7,D1
0002422E <AmiBlitz3.ab3@6055>    MOVEA.l _dosbase,A6
00024232 <AmiBlitz3.ab3@6056>    JSR _Write(a6)
00024234 <AmiBlitz3.ab3@6057>   TST.l D4
00024238 <AmiBlitz3.ab3@6058>    BEQ.w resmacs__skip
0002423A <AmiBlitz3.ab3@6059>   MOVE.l (A7),D2
0002423C <AmiBlitz3.ab3@6060>   MOVE.l D4,D3
0002423E <AmiBlitz3.ab3@6061>   MOVE.l D7,D1
00024244 <AmiBlitz3.ab3@6063>     MOVEA.l _dosbase,A6
00024248 <AmiBlitz3.ab3@6064>    JSR _Write(A6)
0002424C <AmiBlitz3.ab3@6067>   MOVE.l (A7)+,$4(A3)
0002424E <AmiBlitz3.ab3@6068>   MOVE.l (A7)+,(A3)
00024250 <AmiBlitz3.ab3@6069>   MOVEA.l (A3),A3
00024254 <AmiBlitz3.ab3@6070> BRA.w resmacs__loop
00024256 <AmiBlitz3.ab3@6073> RTS
0002425C <AmiBlitz3.ab3@6077>   TST.b resdisable
00024260 <AmiBlitz3.ab3@6078>   BEQ restypes__l1
00024266 <AmiBlitz3.ab3@6079>   MOVE.l lastrestype,a3
0002426C <AmiBlitz3.ab3@6080>   CMP.l #0,a3
00024270 <AmiBlitz3.ab3@6081>   BEQ restypes__l1
00024272 <AmiBlitz3.ab3@6082>   MOVE.l (a3),a3
00024276 <AmiBlitz3.ab3@6083> BRA restypes__l2
0002427C <AmiBlitz3.ab3@6086>   MOVEA.l newtype_string,A3
0002427E <AmiBlitz3.ab3@6089>   MOVEA.l A3,A2
00024282 <AmiBlitz3.ab3@6090>    BSR.w countem
00024286 <AmiBlitz3.ab3@6093>    CMPA.w #$0,A3
0002428A <AmiBlitz3.ab3@6094>    BEQ.w restypes__done
0002428C <AmiBlitz3.ab3@6095>   MOVE.l D6,-(A7)
00024290 <AmiBlitz3.ab3@6096>   MOVEA.l $4(A3),A2
00024292 <AmiBlitz3.ab3@6097>   MOVEQ.l #$0E,D5
00024296 <AmiBlitz3.ab3@6098>    BSR.w writeoffs
00024298 <AmiBlitz3.ab3@6099>   MOVE.l (A7)+,D0
0002429C <AmiBlitz3.ab3@6100>   MOVE.l $4(A3),-(A7)
000242A0 <AmiBlitz3.ab3@6101>   MOVE.l D0,$4(A3)
000242A2 <AmiBlitz3.ab3@6102>   MOVE.l D6,D2
000242A4 <AmiBlitz3.ab3@6103>   ADDQ.l #4,D2
000242A8 <AmiBlitz3.ab3@6104>    BSR.w addhunkoffset
000242AA <AmiBlitz3.ab3@6105>   MOVEQ.l #$00,D3
000242AE <AmiBlitz3.ab3@6106>   MOVE.b $A(A3),D3
000242B0 <AmiBlitz3.ab3@6107>   ADDQ.w #1,D3
000242B4 <AmiBlitz3.ab3@6108>   BCLR #$0,D3
000242B6 <AmiBlitz3.ab3@6109>   ADD.l D3,D6
000242B8 <AmiBlitz3.ab3@6110>   MOVE.l A3,D2
000242BA <AmiBlitz3.ab3@6111>   MOVE.l D7,D1
000242C0 <AmiBlitz3.ab3@6113>     MOVEA.l _dosbase,A6
000242C4 <AmiBlitz3.ab3@6114>     JSR _Write(A6)
000242C8 <AmiBlitz3.ab3@6115>   MOVE.l (A7)+,$4(A3)
000242CA <AmiBlitz3.ab3@6116>   MOVEA.l (A3),A3
000242CE <AmiBlitz3.ab3@6117> BRA.w restypes__loop
000242D0 <AmiBlitz3.ab3@6120> RTS
000242D6 <AmiBlitz3.ab3@6124>    TST.b resdisable
000242DA <AmiBlitz3.ab3@6125>    BEQ resconsts__l1
000242E0 <AmiBlitz3.ab3@6126>    MOVE.l currentlabeladdr,a2
000242E6 <AmiBlitz3.ab3@6127>    CMP.l #0,a2
000242EA <AmiBlitz3.ab3@6128>    BEQ resconsts__l1
000242EC <AmiBlitz3.ab3@6129>    MOVE.l (a2),a2
000242F0 <AmiBlitz3.ab3@6130> BRA resconsts__l2
000242F6 <AmiBlitz3.ab3@6133>    MOVEA.l labelbase,A2
000242F8 <AmiBlitz3.ab3@6136>    MOVEQ.l #$00,D0
000242FC <AmiBlitz3.ab3@6139>    CMPA.w #$0,A2
00024300 <AmiBlitz3.ab3@6140>    BEQ.w resconsts__done
00024308 <AmiBlitz3.ab3@6141>   CMPI.l #$1,$4(A2)
0002430C <AmiBlitz3.ab3@6142>    BNE.w resconsts__next
0002430E <AmiBlitz3.ab3@6143>   ADDQ.w #1,D0
00024310 <AmiBlitz3.ab3@6146>   MOVEA.l (A2),A2
00024314 <AmiBlitz3.ab3@6147> BRA.w resconsts__loop
0002431A <AmiBlitz3.ab3@6150>   MOVE.w D0,temp1
0002431C <AmiBlitz3.ab3@6151>   MOVE.l D7,D1
00024322 <AmiBlitz3.ab3@6152>   MOVE.l #temp1,D2
00024324 <AmiBlitz3.ab3@6153>   MOVEQ.l #$02,D3
00024326 <AmiBlitz3.ab3@6154>   ADDQ.l #2,D6
0002432C <AmiBlitz3.ab3@6156>     MOVEA.l _dosbase,A6
00024330 <AmiBlitz3.ab3@6157>     JSR _Write(A6)
00024336 <AmiBlitz3.ab3@6158>    TST.b resdisable
0002433A <AmiBlitz3.ab3@6159>    BEQ resconsts__done_l1
00024340 <AmiBlitz3.ab3@6160>    MOVE.l currentlabeladdr,a2
00024346 <AmiBlitz3.ab3@6161>    CMP.l #0,a2
0002434A <AmiBlitz3.ab3@6162>    BEQ resconsts__done_l1
0002434C <AmiBlitz3.ab3@6163>    MOVE.l (a2),a2
00024350 <AmiBlitz3.ab3@6164> BRA resconsts__loop2
00024356 <AmiBlitz3.ab3@6167>    MOVEA.l labelbase,A2                                    ;write resident labels
0002435A <AmiBlitz3.ab3@6170>    CMPA.w #$0,A2
0002435E <AmiBlitz3.ab3@6171>    BEQ.w resconsts__done2
00024366 <AmiBlitz3.ab3@6172>   CMPI.l #$1,$4(A2)
0002436A <AmiBlitz3.ab3@6173>    BNE.w resconsts__next2
0002436C <AmiBlitz3.ab3@6174>    MOVEQ.l #$00,D3
00024370 <AmiBlitz3.ab3@6175>   MOVE.b $12(A2),D3                                        ;length
00024372 <AmiBlitz3.ab3@6176>   ADDQ.w #1,D3
00024376 <AmiBlitz3.ab3@6177>   BCLR #$0,D3
00024378 <AmiBlitz3.ab3@6178>   MOVE.l D6,D2
0002437A <AmiBlitz3.ab3@6179>   ADD.l D3,D6
0002437C <AmiBlitz3.ab3@6182>   MOVE.l (A2),-(A7)
0002437E <AmiBlitz3.ab3@6183>   TST.l (A2)
00024382 <AmiBlitz3.ab3@6184>    BEQ.w resconsts__nonext
00024384 <AmiBlitz3.ab3@6185>   MOVE.l D6,(A2)
00024388 <AmiBlitz3.ab3@6186>    BSR.w addhunkoffset
0002438A <AmiBlitz3.ab3@6189>   MOVE.l A2,D2
0002438C <AmiBlitz3.ab3@6190>   MOVE.l D7,D1
00024392 <AmiBlitz3.ab3@6192>     MOVEA.l _dosbase,A6
00024396 <AmiBlitz3.ab3@6193>     JSR _Write(A6)
00024398 <AmiBlitz3.ab3@6194>   MOVE.l (A7)+,(A2)
0002439A <AmiBlitz3.ab3@6197>   MOVEA.l (A2),A2
0002439E <AmiBlitz3.ab3@6198> BRA.w resconsts__loop2
000243A0 <AmiBlitz3.ab3@6201> RTS
000243CA <AmiBlitz3.ab3@6205>    !basic
000243D0 <AmiBlitz3.ab3@6206>     MOVE.l ptr_resfile,d0
000243E0 <AmiBlitz3.ab3@6207>     resfileP.l = Peek.l(?ptr_resfile)
000243EA <AmiBlitz3.ab3@6208>     If resfileP
00024412 <AmiBlitz3.ab3@6209>       resfile$ = Peek.s(resfileP)
0002445E <AmiBlitz3.ab3@6210>       tests.b = Instr(resfile$,"/")
000244AA <AmiBlitz3.ab3@6211>       testc.b = Instr(resfile$,":")
000244CC <AmiBlitz3.ab3@6212>       If tests=0 AND testc=0
0002454C <AmiBlitz3.ab3@6213>         resfile$ = dos_AddPart{my_residentsdir$,resfile$}
0002455E <AmiBlitz3.ab3@6214>         Poke.l ?ptr_resfile,&resfile$
00024564 <AmiBlitz3.ab3@6216>     Else
0002459E <AmiBlitz3.ab3@6217>       error{"INTERNAL: Invalid pointer in ptr_resfile!"}
000245BC <AmiBlitz3.ab3@6219>    !asm
000245BE <AmiBlitz3.ab3@6220> RTS
000245C4 <AmiBlitz3.ab3@6224> 
000245CA <AmiBlitz3.ab3@6225>   MOVE.l A7,errstack
000245D4 <AmiBlitz3.ab3@6228>   MOVE.l #next_resentry,errcont
000245DC <AmiBlitz3.ab3@6229>   MOVE.w #$FFFF,ezerr
000245E0 <AmiBlitz3.ab3@6230>   BSR.w Aclearallvars
000245E4 <AmiBlitz3.ab3@6231>   BSR.w free_residents
000245EA <AmiBlitz3.ab3@6233>   LEA residents_table,A5
000245EC <AmiBlitz3.ab3@6234>   MOVEQ.l #$07,D6
000245EE <AmiBlitz3.ab3@6237>     TST.b (A5)
000245F2 <AmiBlitz3.ab3@6238>     BEQ.w next_resentry
000245F8 <AmiBlitz3.ab3@6239>     MOVE.l A5,ptr_resfile
000245FC <AmiBlitz3.ab3@6240>     BSR check_residentpath
00024602 <AmiBlitz3.ab3@6241>     MOVE.l ptr_resfile,d1
00024608 <AmiBlitz3.ab3@6242>     MOVEA.l _dosbase,A6
0002460C <AmiBlitz3.ab3@6243>     JSR _LoadSeg(A6)
00024610 <AmiBlitz3.ab3@6244>     MOVE.l D0,$40(A5)
00024614 <AmiBlitz3.ab3@6245>     BNE.w reloadresident__yeah
00024618 <AmiBlitz3.ab3@6246>     BSR.w reserr
0002461A <AmiBlitz3.ab3@6249>     MOVEA.l D0,A3
0002461C <AmiBlitz3.ab3@6250>     ADDA.l A3,A3
0002461E <AmiBlitz3.ab3@6251>     ADDA.l A3,A3
00024620 <AmiBlitz3.ab3@6252>     ADDQ.w #4,A3                                           ;start of res
00024624 <AmiBlitz3.ab3@6253>     BSR.w JL_0_5A9E
00024628 <AmiBlitz3.ab3@6254>     BSR.w JL_0_5A62                                        ;add macros to list
0002462C <AmiBlitz3.ab3@6255>     BSR.w JL_0_5A32                                        ;read labels
00024630 <AmiBlitz3.ab3@6258>     LEA ResidentEntryStep(A5),A5       ;$44
00024634 <AmiBlitz3.ab3@6259>   DBF D6,reloadresident__loop
0002463E <AmiBlitz3.ab3@6264>   MOVE.l #free_residents,errcont
00024644 <AmiBlitz3.ab3@6266>   MOVEA.l newtype_string,A3
00024646 <AmiBlitz3.ab3@6267>   MOVEQ.l #$0B,D7
0002464A <AmiBlitz3.ab3@6268>   BSR.w checkclash
00024650 <AmiBlitz3.ab3@6270>   MOVEA.l macrobase,A3
00024652 <AmiBlitz3.ab3@6271>   MOVEQ.l #$d,D7
00024656 <AmiBlitz3.ab3@6272>   BSR.w checkclash
0002465C <AmiBlitz3.ab3@6274>   MOVEA.l firstconst,A3
0002465E <AmiBlitz3.ab3@6275>   MOVEQ.l #$19,D7
00024662 <AmiBlitz3.ab3@6276>   BSR.w checkclash
00024664 <AmiBlitz3.ab3@6279> RTS
00024666 <AmiBlitz3.ab3@6283>   MOVEA.l A3,A4
0002466A <AmiBlitz3.ab3@6286>     CMPA.w #$0,A4
0002466E <AmiBlitz3.ab3@6287>     BEQ.w checkclash__done
00024674 <AmiBlitz3.ab3@6289>     LEA ptr_parameterstore,A0
00024678 <AmiBlitz3.ab3@6290>     LEA $0(A4,D7.W),A1
0002467A <AmiBlitz3.ab3@6291>     MOVEQ.l #-$01,D2
0002467C <AmiBlitz3.ab3@6294>       ADDQ.w #1,D2
0002467E <AmiBlitz3.ab3@6295>       MOVE.b (A1)+,(A0)+
00024682 <AmiBlitz3.ab3@6296>     BNE.w checkclash__loop2
00024684 <AmiBlitz3.ab3@6297>     MOVEA.l A3,A2
00024688 <AmiBlitz3.ab3@6300>     BSR.w findlab
0002468C <AmiBlitz3.ab3@6301>     BNE.w checkclash__next                                  ;not found
0002468E <AmiBlitz3.ab3@6302>     CMPA.l A2,A4
00024692 <AmiBlitz3.ab3@6303>     BEQ.w checkclash__l1
00024694 <AmiBlitz3.ab3@6304>     MOVE.l a1,a5
00024698 <AmiBlitz3.ab3@6305> BRA clasherr
0002469C <AmiBlitz3.ab3@6308> BRA.w checkclash__more
0002469E <AmiBlitz3.ab3@6311>     MOVEA.l (A4),A4
000246A2 <AmiBlitz3.ab3@6312> BRA.w checkclash__loop
000246A4 <AmiBlitz3.ab3@6315> RTS
000246AA <AmiBlitz3.ab3@6319>   MOVEA.l _dosbase,A6
000246B0 <AmiBlitz3.ab3@6321>   LEA newtype_string,A0
000246B6 <AmiBlitz3.ab3@6322>   MOVE.l A0,lastrestype
000246B8 <AmiBlitz3.ab3@6323>   CLR.l (A0)
000246BE <AmiBlitz3.ab3@6325>   LEA macrobase,A0
000246C4 <AmiBlitz3.ab3@6326>   MOVE.l A0,currentmacroaddr
000246C6 <AmiBlitz3.ab3@6327>   CLR.l (A0)
000246CC <AmiBlitz3.ab3@6329>   LEA labelbase,A0
000246D2 <AmiBlitz3.ab3@6330>   MOVE.l A0,currentlabeladdr
000246D4 <AmiBlitz3.ab3@6331>   CLR.l (A0)
000246DA <AmiBlitz3.ab3@6332>   CLR.w rescnt
00024712 <AmiBlitz3.ab3@6336>   !ComData_SetB{comByte_DebugMode,debugmode}
00024718 <AmiBlitz3.ab3@6339>   LEA residents_table,A2
0002471A <AmiBlitz3.ab3@6340>   MOVEQ.l #$07,D2
0002471E <AmiBlitz3.ab3@6343>      MOVE.l $40(A2),D1
00024722 <AmiBlitz3.ab3@6344>      BEQ.w free_residents__next
00024726 <AmiBlitz3.ab3@6345>       CLR.l $40(A2)
0002472C <AmiBlitz3.ab3@6346>       MOVEA.l _dosbase,A6
00024730 <AmiBlitz3.ab3@6347>       JSR _UnLoadSeg(A6)
00024734 <AmiBlitz3.ab3@6350>      LEA ResidentEntryStep(A2),A2   ; $44
00024738 <AmiBlitz3.ab3@6351>    DBF D2,free_residents__loop
0002473A <AmiBlitz3.ab3@6353> RTS
0002473C <AmiBlitz3.ab3@6357>   MOVE.w (A3)+,D1
00024740 <AmiBlitz3.ab3@6358>   BEQ.w JL_0_5A60
00024746 <AmiBlitz3.ab3@6359>   MOVEA.l currentlabeladdr,A2
00024748 <AmiBlitz3.ab3@6360>   MOVE.l A3,(A2)
0002474A <AmiBlitz3.ab3@6361>   SUBQ.w #1,D1
0002474C <AmiBlitz3.ab3@6364>     MOVEA.l A3,A2
0002474E <AmiBlitz3.ab3@6365>     MOVEA.l (A3),A3
00024752 <AmiBlitz3.ab3@6366>   DBF D1,JL_0_5A42
00024754 <AmiBlitz3.ab3@6368>   CLR.l (a2)                                               ;bugfix for object
0002475A <AmiBlitz3.ab3@6369>   MOVE.l A2,currentlabeladdr
0002475C <AmiBlitz3.ab3@6370>   MOVEA.l A2,A3
0002475E <AmiBlitz3.ab3@6371>   MOVEQ.l #$00,D0
00024762 <AmiBlitz3.ab3@6372>   MOVE.b $12(A3),D0
00024764 <AmiBlitz3.ab3@6373>   ADDQ.w #1,D0
00024768 <AmiBlitz3.ab3@6374>   BCLR #$0,D0
0002476A <AmiBlitz3.ab3@6375>   ADDA.w D0,A3
0002476C <AmiBlitz3.ab3@6378> RTS
0002476E <AmiBlitz3.ab3@6382>   MOVE.w (A3)+,D1
00024772 <AmiBlitz3.ab3@6383>   BEQ.w JL_0_5A9C
00024778 <AmiBlitz3.ab3@6385>   MOVEA.l currentmacroaddr,A2
0002477A <AmiBlitz3.ab3@6386>   MOVE.l A3,(A2)
0002477C <AmiBlitz3.ab3@6387>   SUBQ.w #1,D1
0002477E <AmiBlitz3.ab3@6390>     MOVEA.l A3,A2
00024780 <AmiBlitz3.ab3@6391>     MOVEA.l (A3),A3
00024784 <AmiBlitz3.ab3@6392>   DBF D1,JL_0_5A72
0002478A <AmiBlitz3.ab3@6394>   MOVE.l A2,currentmacroaddr
0002478C <AmiBlitz3.ab3@6395>   MOVEA.l A2,A3
0002478E <AmiBlitz3.ab3@6396>   MOVEQ.l #$00,D0
00024792 <AmiBlitz3.ab3@6397>   MOVE.b $C(A3),D0
00024794 <AmiBlitz3.ab3@6398>   ADDQ.w #1,D0
00024798 <AmiBlitz3.ab3@6399>   BCLR #$0,D0
0002479C <AmiBlitz3.ab3@6400>   MOVE.w $8(A3),D1
0002479E <AmiBlitz3.ab3@6401>   ADDQ.w #1,D1
000247A2 <AmiBlitz3.ab3@6402>   BCLR #$0,D1
000247A4 <AmiBlitz3.ab3@6403>   ADDA.w D0,A3
000247A6 <AmiBlitz3.ab3@6404>   ADDA.w D1,A3
000247A8 <AmiBlitz3.ab3@6407> RTS
000247AA <AmiBlitz3.ab3@6411>   MOVE.w (A3)+,D1
000247AE <AmiBlitz3.ab3@6412>   BEQ.w JL_0_5B38
000247B0 <AmiBlitz3.ab3@6413>   MOVE.w D1,-(A7)
000247B2 <AmiBlitz3.ab3@6414>   SUBQ.w #1,D1
000247B8 <AmiBlitz3.ab3@6415>   MOVEA.l lastrestype,A2
000247BA <AmiBlitz3.ab3@6416>   MOVE.l A2,-(A7)
000247BC <AmiBlitz3.ab3@6419>       MOVE.l (A3),D0
000247C0 <AmiBlitz3.ab3@6420>       BEQ.w JL_0_5ABC
000247C2 <AmiBlitz3.ab3@6421>       MOVEA.l D0,A3
000247C6 <AmiBlitz3.ab3@6422> BRA.w JL_0_5AB0
000247CA <AmiBlitz3.ab3@6425>       MOVE.b $E(A3),D0
000247CC <AmiBlitz3.ab3@6426>       ADDQ.w #1,D0
000247D0 <AmiBlitz3.ab3@6427>       BCLR #$0,D0
000247D2 <AmiBlitz3.ab3@6428>       ADDA.w D0,A3
000247D4 <AmiBlitz3.ab3@6429>       MOVE.l A3,(A2)
000247D6 <AmiBlitz3.ab3@6430>       MOVEA.l A3,A2
000247D8 <AmiBlitz3.ab3@6431>       MOVEQ.l #$00,D0
000247DC <AmiBlitz3.ab3@6432>       MOVE.b $A(A3),D0
000247DE <AmiBlitz3.ab3@6433>       ADDQ.w #1,D0
000247E2 <AmiBlitz3.ab3@6434>       BCLR #$0,D0
000247E4 <AmiBlitz3.ab3@6435>       ADDA.w D0,A3
000247E8 <AmiBlitz3.ab3@6436>   DBF D1,JL_0_5AB0
000247EA <AmiBlitz3.ab3@6438>   MOVEA.l (A7)+,A0
000247EC <AmiBlitz3.ab3@6439>   MOVEA.l (A0),A0
000247F0 <AmiBlitz3.ab3@6442>     CMPA.w #$0,A0
000247F4 <AmiBlitz3.ab3@6443>     BEQ.w JL_0_5B2A
000247F8 <AmiBlitz3.ab3@6444>     MOVEA.l $4(A0),A1
000247FC <AmiBlitz3.ab3@6447>     CMPA.w #$0,A1
00024800 <AmiBlitz3.ab3@6448>     BEQ.w JL_0_5B24
00024804 <AmiBlitz3.ab3@6449>     MOVE.w $A(A1),D0
0002480A <AmiBlitz3.ab3@6450>     MOVEA.l newtypebase,A4
0002480E <AmiBlitz3.ab3@6451>     CMP.w #$7,D0
00024812 <AmiBlitz3.ab3@6452>     BCS.w JL_0_5B0E
00024818 <AmiBlitz3.ab3@6453>     SUB.w rescnt,D0
0002481A <AmiBlitz3.ab3@6456>     SUBQ.w #1,D0
0002481E <AmiBlitz3.ab3@6457>     BMI.w JL_0_5B1A
00024820 <AmiBlitz3.ab3@6460>        MOVEA.l (A4),A4
00024824 <AmiBlitz3.ab3@6461>   DBF D0,JL_0_5B14
00024828 <AmiBlitz3.ab3@6464>     MOVE.l A4,$A(A1)
0002482A <AmiBlitz3.ab3@6465>     MOVEA.l (A1),A1
0002482E <AmiBlitz3.ab3@6466> BRA.w JL_0_5AEE
00024830 <AmiBlitz3.ab3@6469>     MOVEA.l (A0),A0
00024834 <AmiBlitz3.ab3@6470> BRA.w JL_0_5AE2
00024836 <AmiBlitz3.ab3@6473>   MOVE.w (A7)+,D0
0002483C <AmiBlitz3.ab3@6474>   ADD.w D0,rescnt
00024842 <AmiBlitz3.ab3@6475>   MOVE.l A2,lastrestype
00024844 <AmiBlitz3.ab3@6478> RTS
0002484A <AmiBlitz3.ab3@6482>   LEA tokens,A0
0002484E <AmiBlitz3.ab3@6483>   MOVE.w #$003A,D0                                         ; $003A : 58 dec
00024850 <AmiBlitz3.ab3@6486>     MOVEA.l (A0),A0
00024854 <AmiBlitz3.ab3@6487>   DBF D0,JL_0_5BD0
0002485A <AmiBlitz3.ab3@6489>   MOVEA.l #asmpnts,A1                                      ;create tokentab
0002485E <AmiBlitz3.ab3@6490>   MOVE.w #$0076,D0                                         ; $0076 : 118 dec
00024862 <AmiBlitz3.ab3@6493>       LEA $6(A0),A2
00024864 <AmiBlitz3.ab3@6496>         TST.b (A2)+
00024868 <AmiBlitz3.ab3@6497>       BNE.w JL_0_5BE4
0002486A <AmiBlitz3.ab3@6500>         TST.b (A2)+
0002486E <AmiBlitz3.ab3@6501>       BNE.w JL_0_5BEA
00024870 <AmiBlitz3.ab3@6503>       ADDQ.w #1,A2
00024872 <AmiBlitz3.ab3@6504>       EXG.l D1,A2
00024876 <AmiBlitz3.ab3@6505>       BCLR #$0,D1
00024878 <AmiBlitz3.ab3@6506>       EXG.l D1,A2
0002487A <AmiBlitz3.ab3@6507>       MOVE.l A2,(A1)+
0002487C <AmiBlitz3.ab3@6508>       MOVEA.l (A0),A0
00024880 <AmiBlitz3.ab3@6509>   DBF D0,JL_0_5BE0
00024882 <AmiBlitz3.ab3@6510> RTS
00024886 <AmiBlitz3.ab3@6514>   BSR.w asmconst
00024888 <AmiBlitz3.ab3@6515>   MOVEQ.l #$0B,D5
0002488A <AmiBlitz3.ab3@6516> RTS
0002488C <AmiBlitz3.ab3@6519> unmove:  Ds.w 1
00024890 <AmiBlitz3.ab3@6523>   MOVE.w #$48E7,D1
00024894 <AmiBlitz3.ab3@6524>   BSR.w writeword                                          ;movem.l -(a7)
00024898 <AmiBlitz3.ab3@6525>   MOVE.w #$000F,D2
0002489A <AmiBlitz3.ab3@6526>   SUB.w D4,D2
0002489C <AmiBlitz3.ab3@6527>   MOVEQ.l #-$01,D1
0002489E <AmiBlitz3.ab3@6528>   BCLR D2,D1
000248A2 <AmiBlitz3.ab3@6529>   BSR.w writeword
000248A4 <AmiBlitz3.ab3@6530>   MOVEQ.l #-$01,D1
000248A6 <AmiBlitz3.ab3@6531>   BCLR D4,D1
000248AC <AmiBlitz3.ab3@6532>   MOVE.w D1,unmove
000248AE <AmiBlitz3.ab3@6533> RTS
000248B2 <AmiBlitz3.ab3@6537>   MOVE.w #$4CDF,D1
000248B6 <AmiBlitz3.ab3@6538>   BSR.w writeword
000248BA <AmiBlitz3.ab3@6539>   MOVE.w unmove(PC),D1
000248BE <AmiBlitz3.ab3@6540> BRA.w writeword
000248C2 <AmiBlitz3.ab3@6553>   BSR.w JL_0_5D22
000248C6 <AmiBlitz3.ab3@6554>   CMP.w #$2C,D0                                            ;#','
000248CA <AmiBlitz3.ab3@6555>    BNE.w syntaxerr
000248D0 <AmiBlitz3.ab3@6556>   MOVE.l #$48E7FFFE,D1                                     ;movem to stack
000248D4 <AmiBlitz3.ab3@6557>    BSR.w writelong
000248D6 <AmiBlitz3.ab3@6558>   MOVE.w D4,D1
000248DA <AmiBlitz3.ab3@6559>   ORI.w #$2F00,D1
000248DE <AmiBlitz3.ab3@6560>    BSR.w writeword
000248E2 <AmiBlitz3.ab3@6561>    BSR.w get1bytemain
000248E6 <AmiBlitz3.ab3@6562>    BSR.w getparameter
000248EA <AmiBlitz3.ab3@6563>    BSR.w JL_0_8E3C
000248EE <AmiBlitz3.ab3@6564>    BSR.w calcvar
000248F2 <AmiBlitz3.ab3@6565>    BTST #$E,D2
000248F6 <AmiBlitz3.ab3@6566>    BEQ.w JL_0_5C80
000248FA <AmiBlitz3.ab3@6569>    MOVE.b #$3,D2
000248FE <AmiBlitz3.ab3@6570> BRA.w JL_0_5C8E
00024900 <AmiBlitz3.ab3@6573>   TST.b D2
00024904 <AmiBlitz3.ab3@6574>    BEQ.w JL_0_5C78
00024908 <AmiBlitz3.ab3@6575>   CMP.b #$7,D2
0002490C <AmiBlitz3.ab3@6576>    BEQ.w JL_0_5C78
00024910 <AmiBlitz3.ab3@6579>   BTST #$F,D2
00024914 <AmiBlitz3.ab3@6580>    BNE.w JL_0_5CA4
00024918 <AmiBlitz3.ab3@6581>   MOVE.w #$45ED,D1                                         ;lea x(a5),a2
0002491C <AmiBlitz3.ab3@6582>    BSR.w writeword
0002491E <AmiBlitz3.ab3@6583>   MOVE.w D3,D1
00024922 <AmiBlitz3.ab3@6584>    BSR.w writeword
00024926 <AmiBlitz3.ab3@6587>   MOVE.w #$201F,D1                                         ;move.l (a7)+,d0
0002492A <AmiBlitz3.ab3@6588>    BSR.w writeword
0002492E <AmiBlitz3.ab3@6589>   MOVE.w #$1480,D1
00024932 <AmiBlitz3.ab3@6590>   CMP.b #$1,D2
00024936 <AmiBlitz3.ab3@6591>    BEQ.w JL_0_5CC8
0002493A <AmiBlitz3.ab3@6592>   EORI.w #$3000,D1
0002493E <AmiBlitz3.ab3@6593>   CMP.b #$2,D2
00024942 <AmiBlitz3.ab3@6594>    BNE.w JL_0_5CC8
00024946 <AmiBlitz3.ab3@6595>   ORI.w #$1000,D1
0002494A <AmiBlitz3.ab3@6598>   BSR.w writeword
00024950 <AmiBlitz3.ab3@6599>   MOVE.l #$4CDF7FFF,D1
00024954 <AmiBlitz3.ab3@6600> BRA.w writelong
00024958 <AmiBlitz3.ab3@6604>   BSR.w JL_0_5D22
0002495C <AmiBlitz3.ab3@6605>   CMP.w #$2C,D0
00024960 <AmiBlitz3.ab3@6606>    BNE.w syntaxerr
00024964 <AmiBlitz3.ab3@6607>    BSR.w regmovems
00024966 <AmiBlitz3.ab3@6608>   MOVE.w D4,-(A7)
00024968 <AmiBlitz3.ab3@6609>   MOVEQ.l #$03,D2
0002496C <AmiBlitz3.ab3@6610>    BSR.w eval
0002496E <AmiBlitz3.ab3@6611>   MOVE.w (A7)+,D1
00024972 <AmiBlitz3.ab3@6612>    BEQ.w JL_0_5D1A
00024976 <AmiBlitz3.ab3@6613>   CMP.w #$8,D1
0002497A <AmiBlitz3.ab3@6614>    BCC.w JL_0_5D0C
0002497C <AmiBlitz3.ab3@6615>   LSL.w #8,D1
0002497E <AmiBlitz3.ab3@6616>   LSL.w #1,D1
00024982 <AmiBlitz3.ab3@6617>   ORI.w #$2000,D1
00024986 <AmiBlitz3.ab3@6618>    BSR.w writeword
0002498A <AmiBlitz3.ab3@6619> BRA.w JL_0_5D1A
0002498C <AmiBlitz3.ab3@6622>   SUBQ.w #8,D1
0002498E <AmiBlitz3.ab3@6623>   LSL.w #8,D1
00024990 <AmiBlitz3.ab3@6624>   LSL.w #1,D1
00024994 <AmiBlitz3.ab3@6625>   ORI.w #$2040,D1
00024998 <AmiBlitz3.ab3@6626>   BSR.w writeword
0002499C <AmiBlitz3.ab3@6629> BRA.w dounmove
000249A0 <AmiBlitz3.ab3@6633>   BSR.w get1bytemain
000249A4 <AmiBlitz3.ab3@6636>   ORI.w #$20,D0
000249A8 <AmiBlitz3.ab3@6637>   CMP.w #$64,D0
000249AC <AmiBlitz3.ab3@6638>    BEQ.w JL_0_5D4E
000249B0 <AmiBlitz3.ab3@6639>   CMP.w #$61,D0
000249B4 <AmiBlitz3.ab3@6640>    BNE.w syntaxerr
000249B8 <AmiBlitz3.ab3@6641>    BSR.w JL_0_5D4E
000249BA <AmiBlitz3.ab3@6642>   ADDQ.w #8,D4
000249BC <AmiBlitz3.ab3@6643> RTS
000249E8 <AmiBlitz3.ab3@6647>   !fget                                                   ;bsr.w get1bytemain
000249EC <AmiBlitz3.ab3@6649>   ORI.w #$20,D0
000249F0 <AmiBlitz3.ab3@6652>   CMP.w #$61,D0
000249F4 <AmiBlitz3.ab3@6653>   BNE.w syntaxerr
00024A20 <AmiBlitz3.ab3@6656>   !fget                                                    ;bsr.w get1bytemain
00024A24 <AmiBlitz3.ab3@6657>   SUBI.w #$30,D0
00024A28 <AmiBlitz3.ab3@6658>    BMI.w syntaxerr
00024A2C <AmiBlitz3.ab3@6659>   CMP.w #$7,D0
00024A30 <AmiBlitz3.ab3@6660>    BHI.w syntaxerr
00024A32 <AmiBlitz3.ab3@6661>   MOVE.w D0,D4
00024A5E <AmiBlitz3.ab3@6662>   !fget
00024A60 <AmiBlitz3.ab3@6663> RTS                                                        ;bra.w get1bytemain
00024A62 <AmiBlitz3.ab3@6667>   ADDQ.w #8,D4
00024A64 <AmiBlitz3.ab3@6670>   MOVEQ.l #$00,D5
00024A68 <AmiBlitz3.ab3@6671>   SUBI.w #$30,D4
00024A6C <AmiBlitz3.ab3@6674>   CMP.w #$2D,D0
00024A70 <AmiBlitz3.ab3@6675>    BEQ.w JL_0_5D9E
00024A74 <AmiBlitz3.ab3@6676>   CMP.w #$2F,D0
00024A78 <AmiBlitz3.ab3@6677>    BEQ.w JL_0_5D8C
00024A7C <AmiBlitz3.ab3@6678> BRA.w syntaxerr
00024A7E <AmiBlitz3.ab3@6681>   BSET D4,D5
00024A80 <AmiBlitz3.ab3@6684>   MOVE.w D5,D4
00024A82 <AmiBlitz3.ab3@6685>   MOVEQ.l #$0F,D5
00024A84 <AmiBlitz3.ab3@6686> RTS
00024A86 <AmiBlitz3.ab3@6689>   BSET D4,D5
00024A8A <AmiBlitz3.ab3@6690>   BSR.w JL_0_5D1E
00024A9C <AmiBlitz3.ab3@6691>   !compare3                                                ;bsr.w JL_0_5FC0
00024AA0 <AmiBlitz3.ab3@6692>   BNE.w JL_0_5D70
00024AA4 <AmiBlitz3.ab3@6693> BRA.w JL_0_5D84
00024AA6 <AmiBlitz3.ab3@6696>   MOVE.w D4,D1
00024AAA <AmiBlitz3.ab3@6697>    BSR.w JL_0_5D1E
00024AAC <AmiBlitz3.ab3@6698>   CMP.w D4,D1
00024AB0 <AmiBlitz3.ab3@6699>    BLS.w JL_0_5DAC
00024AB2 <AmiBlitz3.ab3@6700>   EXG.l D4,D1
00024AB4 <AmiBlitz3.ab3@6703>   BSET D1,D5
00024AB6 <AmiBlitz3.ab3@6704>   ADDQ.w #1,D1
00024AB8 <AmiBlitz3.ab3@6705>   CMP.w D4,D1
00024ABC <AmiBlitz3.ab3@6706>    BLS.w JL_0_5DAC
00024ACE <AmiBlitz3.ab3@6707>   !compare3                                                ;bsr.w JL_0_5FC0
00024AD2 <AmiBlitz3.ab3@6708>   BNE.w JL_0_5D70
00024AD6 <AmiBlitz3.ab3@6709> BRA.w JL_0_5D86
00024AD8 <AmiBlitz3.ab3@6712>   MOVEA.l A5,A4                                            ;bsr.w get1bytemain
00024B04 <AmiBlitz3.ab3@6713>    !fget
00024B08 <AmiBlitz3.ab3@6714>   CMP.w #$23,D0
00024B0C <AmiBlitz3.ab3@6715>    BEQ.w getimm
00024B10 <AmiBlitz3.ab3@6716>   CMP.w #$28,D0
00024B14 <AmiBlitz3.ab3@6717>    BEQ.w JL_0_5DFE
00024B18 <AmiBlitz3.ab3@6718>   CMP.w #$2D,D0
00024B1C <AmiBlitz3.ab3@6719>    BNE.w JL_0_5E20
00024B48 <AmiBlitz3.ab3@6720>    !fget                                                   ;bsr.w get1bytemain       -(
00024B4C <AmiBlitz3.ab3@6721>   CMP.w #$28,D0
00024B50 <AmiBlitz3.ab3@6722>    BNE.w JL_0_5F4E
00024B54 <AmiBlitz3.ab3@6723>    BSR.w JL_0_5D3E
00024B58 <AmiBlitz3.ab3@6724>   CMP.w #$29,D0
00024B5C <AmiBlitz3.ab3@6725>    BNE.w syntaxerr
00024B5E <AmiBlitz3.ab3@6726>   MOVEQ.l #$04,D5
00024B8A <AmiBlitz3.ab3@6727>   !fget                                                    ;bsr.w get1bytemain
00024B8C <AmiBlitz3.ab3@6728> RTS
00024B90 <AmiBlitz3.ab3@6732>   BSR.w JL_0_5D3E
00024B94 <AmiBlitz3.ab3@6733>   CMP.w #$29,D0
00024B98 <AmiBlitz3.ab3@6734>    BNE.w syntaxerr
00024BC4 <AmiBlitz3.ab3@6735>   !fget                                                    ;bsr.w get1bytemain
00024BC8 <AmiBlitz3.ab3@6736>   CMP.w #$2B,D0
00024BCC <AmiBlitz3.ab3@6737>    BEQ.w JL_0_5E1A
00024BCE <AmiBlitz3.ab3@6738>   MOVEQ.l #$02,D5
00024BD0 <AmiBlitz3.ab3@6739> RTS
00024BD2 <AmiBlitz3.ab3@6743>   MOVEQ.l #$03,D5
00024BFE <AmiBlitz3.ab3@6744>   !fget                                                    ;bra.w get1bytemain
00024C00 <AmiBlitz3.ab3@6745> RTS
00024C04 <AmiBlitz3.ab3@6749>   ORI.w #$20,D0
00024C06 <AmiBlitz3.ab3@6750>   MOVE.w D0,D1                                            
00024C32 <AmiBlitz3.ab3@6751>    !fget                                                   ;bsr.w get1bytemain
00024C36 <AmiBlitz3.ab3@6752>   CMP.w #$64,D1
00024C3A <AmiBlitz3.ab3@6753>    BNE.w JL_0_5E6C
00024C3E <AmiBlitz3.ab3@6754>   CMP.w #$30,D0
00024C42 <AmiBlitz3.ab3@6755>    BCS.w JL_0_5EAE
00024C46 <AmiBlitz3.ab3@6756>   CMP.w #$37,D0
00024C4A <AmiBlitz3.ab3@6757>    BHI.w JL_0_5EAE
00024C4C <AmiBlitz3.ab3@6758>   MOVE.w D0,D4
00024C78 <AmiBlitz3.ab3@6759>    !fget                                                   ;bsr.w get1bytemain
00024C8A <AmiBlitz3.ab3@6760>    !compare3                                               ;bsr.w JL_0_5FC0
00024C8E <AmiBlitz3.ab3@6761>    BEQ.w JL_0_5E64
00024C92 <AmiBlitz3.ab3@6762>   CMP.w #$2D,D0
00024C96 <AmiBlitz3.ab3@6763>    BEQ.w JL_0_5D6A
00024C9A <AmiBlitz3.ab3@6764>   CMP.w #$2F,D0
00024C9E <AmiBlitz3.ab3@6765>    BEQ.w JL_0_5D6A
00024CA2 <AmiBlitz3.ab3@6766> BRA.w JL_0_5EB8
00024CA4 <AmiBlitz3.ab3@6769>   MOVEQ.l #$00,D5
00024CA8 <AmiBlitz3.ab3@6770>   SUBI.w #$30,D4
00024CAA <AmiBlitz3.ab3@6771> RTS
00024CAE <AmiBlitz3.ab3@6774>    CMP.w #$61,D1
00024CB2 <AmiBlitz3.ab3@6775>    BNE.w JL_0_5EAE
00024CB6 <AmiBlitz3.ab3@6776>   CMP.w #$30,D0
00024CBA <AmiBlitz3.ab3@6777>    BCS.w JL_0_5EAE
00024CBE <AmiBlitz3.ab3@6778>   CMP.w #$37,D0
00024CC2 <AmiBlitz3.ab3@6779>    BHI.w JL_0_5EAE
00024CC4 <AmiBlitz3.ab3@6780>   MOVE.w D0,D4
00024CF0 <AmiBlitz3.ab3@6781>    !fget                                                   ;bsr.w get1bytemain
00024D02 <AmiBlitz3.ab3@6782>    !compare3                                               ;bsr.w JL_0_5FC0
00024D06 <AmiBlitz3.ab3@6783>    BEQ.w JL_0_5EA6
00024D0A <AmiBlitz3.ab3@6784>   CMP.w #$2D,D0
00024D0E <AmiBlitz3.ab3@6785>    BEQ.w JL_0_5D68                                         ;movem
00024D12 <AmiBlitz3.ab3@6786>   CMP.w #$2F,D0
00024D16 <AmiBlitz3.ab3@6787>    BEQ.w JL_0_5D68
00024D1A <AmiBlitz3.ab3@6788> BRA.w JL_0_5EB8
00024D1C <AmiBlitz3.ab3@6791>   MOVEQ.l #1,d5
00024D20 <AmiBlitz3.ab3@6792>   SUBI.w #$30,D4
00024D24 <AmiBlitz3.ab3@6794> BRA 'l10
00024D26 <AmiBlitz3.ab3@6795>   ADDQ.w #8,d4
00024D28 <AmiBlitz3.ab3@6796>   MOVEQ #0,d5
00024D2A <AmiBlitz3.ab3@6797>   BSET d4,d5
00024D2C <AmiBlitz3.ab3@6798>   MOVE.w d5,d4
00024D2E <AmiBlitz3.ab3@6799>   MOVEQ.l #$0f,D5                                          ;01
00024D30 <AmiBlitz3.ab3@6802> RTS
00024D34 <AmiBlitz3.ab3@6806>   ORI.w #$20,D0
00024D36 <AmiBlitz3.ab3@6807>   MOVE.w D0,D4
00024D62 <AmiBlitz3.ab3@6808>    !fget                                                   ;bsr.w get1bytemain
00024D74 <AmiBlitz3.ab3@6811>   !compare3                                                ;bsr.w JL_0_5FC0
00024D78 <AmiBlitz3.ab3@6812>    BNE.w JL_0_5EF2
00024D7C <AmiBlitz3.ab3@6813>   CMP.w #$73,D1
00024D80 <AmiBlitz3.ab3@6814>    BNE.w JL_0_5EF2
00024D84 <AmiBlitz3.ab3@6815>   CMP.w #$70,D4
00024D88 <AmiBlitz3.ab3@6816>    BNE.w JL_0_5EDE
00024D9A <AmiBlitz3.ab3@6817>    !compare3                                               ;bsr.w JL_0_5FC0
00024D9E <AmiBlitz3.ab3@6818>    BNE.w JL_0_5F4E
00024DA0 <AmiBlitz3.ab3@6819>   MOVEQ.l #$07,D4
00024DA2 <AmiBlitz3.ab3@6820>   MOVEQ.l #$01,D5
00024DA4 <AmiBlitz3.ab3@6821> RTS
00024DA8 <AmiBlitz3.ab3@6825>   CMP.w #$72,D4
00024DAC <AmiBlitz3.ab3@6826>    BNE.w JL_0_5F4E
00024DBE <AmiBlitz3.ab3@6827>    !compare3                                               ;bsr.w JL_0_5FC0
00024DC2 <AmiBlitz3.ab3@6828>    BNE.w JL_0_5F4E
00024DC4 <AmiBlitz3.ab3@6829>   MOVEQ.l #$0D,D5
00024DC6 <AmiBlitz3.ab3@6830> RTS
00024DCA <AmiBlitz3.ab3@6834>   ORI.w #$20,D0
00024DCE <AmiBlitz3.ab3@6835>   CMP.w #$63,D1
00024DD2 <AmiBlitz3.ab3@6836>    BNE.w JL_0_5F22
00024DD6 <AmiBlitz3.ab3@6837>   CMP.w #$63,D4
00024DDA <AmiBlitz3.ab3@6838>    BNE.w JL_0_5F4E
00024DDE <AmiBlitz3.ab3@6839>   CMP.w #$72,D0
00024DE2 <AmiBlitz3.ab3@6840>    BNE.w JL_0_5F4E
00024DE6 <AmiBlitz3.ab3@6841>    BSR.w get1bytemain                                      ;??wy not !fget
00024DEA <AmiBlitz3.ab3@6842>    BEQ.w JL_0_5F1E
00024DEE <AmiBlitz3.ab3@6843>   CMP.w #$2C,D0
00024DF2 <AmiBlitz3.ab3@6844>    BNE.w JL_0_5F4E
00024DF4 <AmiBlitz3.ab3@6847>   MOVEQ.l #$0C,D5
00024DF6 <AmiBlitz3.ab3@6848> RTS
00024DFA <AmiBlitz3.ab3@6852>   CMP.w #$75,D1
00024DFE <AmiBlitz3.ab3@6853>    BNE.w JL_0_5F4E
00024E02 <AmiBlitz3.ab3@6854>   CMP.w #$73,D4
00024E06 <AmiBlitz3.ab3@6855>    BNE.w JL_0_5F4E
00024E0A <AmiBlitz3.ab3@6856>   CMP.w #$70,D0
00024E0E <AmiBlitz3.ab3@6857>    BNE.w JL_0_5F4E
00024E12 <AmiBlitz3.ab3@6858>    BSR.w get1bytemain                                      ;??wy not !fget
00024E16 <AmiBlitz3.ab3@6859>    BEQ.w JL_0_5F4A
00024E1A <AmiBlitz3.ab3@6860>   CMP.w #$2C,D0
00024E1E <AmiBlitz3.ab3@6861>    BNE.w JL_0_5F4E
00024E20 <AmiBlitz3.ab3@6864>   MOVEQ.l #$0E,D5
00024E22 <AmiBlitz3.ab3@6865> RTS
00024E24 <AmiBlitz3.ab3@6869>   MOVEA.l A4,A5
00024E28 <AmiBlitz3.ab3@6870>    BSR.w asmconst
00024E3A <AmiBlitz3.ab3@6871>    !compare3                                               ;bsr.w JL_0_5FC0
00024E3E <AmiBlitz3.ab3@6872>    BEQ.w JL_0_5FB8
00024E42 <AmiBlitz3.ab3@6873>   CMP.w #$2E,D0
00024E46 <AmiBlitz3.ab3@6874>    BEQ.w JL_0_5FA0
00024E4A <AmiBlitz3.ab3@6875>   CMP.w #$28,D0
00024E4E <AmiBlitz3.ab3@6876>    BNE.w syntaxerr
00024E52 <AmiBlitz3.ab3@6877>    BSR.w get1bytemain                                      ;??wy not !fget
00024E56 <AmiBlitz3.ab3@6878>   ORI.w #$20,D0
00024E5A <AmiBlitz3.ab3@6879>   CMP.w #$70,D0
00024E5E <AmiBlitz3.ab3@6880>    BNE.w JL_0_5F98
00024E62 <AmiBlitz3.ab3@6881>    BSR.w get1bytemain                                      ;??wy not !fget
00024E66 <AmiBlitz3.ab3@6882>   ORI.w #$20,D0
00024E6A <AmiBlitz3.ab3@6883>   CMP.w #$63,D0
00024E6E <AmiBlitz3.ab3@6884>    BNE.w syntaxerr
00024E72 <AmiBlitz3.ab3@6885>    BSR.w get1bytemain                                      ;??wy not !fget
00024E76 <AmiBlitz3.ab3@6886>    BSR.w JL_0_5FD4
00024E78 <AmiBlitz3.ab3@6887>   ADDQ.w #4,D5
00024E7A <AmiBlitz3.ab3@6888> RTS
00024E7E <AmiBlitz3.ab3@6892>   BSR.w JL_0_5D46
00024E82 <AmiBlitz3.ab3@6893> BRA.w JL_0_5FD4
00024E86 <AmiBlitz3.ab3@6897>    BSR.w get1bytemain                                     ;??wy not !fget
00024E8A <AmiBlitz3.ab3@6898>   ORI.w #$20,D0
00024E8E <AmiBlitz3.ab3@6899>   CMP.w #$77,D0
00024E92 <AmiBlitz3.ab3@6900>    BEQ.w JL_0_5FBC
00024E96 <AmiBlitz3.ab3@6901>   CMP.w #$6C,D0
00024E9A <AmiBlitz3.ab3@6902>    BNE.w syntaxerr
00024E9C <AmiBlitz3.ab3@6905>   MOVEQ.l #$08,D5
00024E9E <AmiBlitz3.ab3@6906> RTS
00024EA0 <AmiBlitz3.ab3@6910>   MOVEQ.l #$07,D5
00024EA2 <AmiBlitz3.ab3@6911> RTS
00024EA4 <AmiBlitz3.ab3@6915>   TST.w D0
00024EA8 <AmiBlitz3.ab3@6916>    BEQ.w JL_0_5FD2
00024EAC <AmiBlitz3.ab3@6917>   CMP.w #$3A,D0
00024EB0 <AmiBlitz3.ab3@6918>    BEQ.w JL_0_5FD2
00024EB4 <AmiBlitz3.ab3@6919>   CMP.w #$2C,D0
00024EB6 <AmiBlitz3.ab3@6922> RTS
00024EBA <AmiBlitz3.ab3@6926>   CMP.w #$2C,D0
00024EBE <AmiBlitz3.ab3@6927>    BNE.w JL_0_6054
00024EC2 <AmiBlitz3.ab3@6928>    BSR.w get1bytemain                                      ;??wy not !fget
00024EC6 <AmiBlitz3.ab3@6929>   ORI.w #$20,D0
00024EC8 <AmiBlitz3.ab3@6930>   MOVEQ.l #$00,D1
00024ECC <AmiBlitz3.ab3@6931>   CMP.w #$64,D0
00024ED0 <AmiBlitz3.ab3@6932>    BEQ.w JL_0_5FFA
00024ED4 <AmiBlitz3.ab3@6933>   CMP.w #$61,D0
00024ED8 <AmiBlitz3.ab3@6934>    BNE.w syntaxerr
00024EDC <AmiBlitz3.ab3@6935>   BSET #$F,D1
00024EE0 <AmiBlitz3.ab3@6938>    BSR.w get1bytemain                                      ;??wy not !fget
00024EE4 <AmiBlitz3.ab3@6939>   SUBI.w #$30,D0
00024EE8 <AmiBlitz3.ab3@6940>    BMI.w syntaxerr
00024EEC <AmiBlitz3.ab3@6941>   CMP.w #$7,D0
00024EF0 <AmiBlitz3.ab3@6942>    BHI.w syntaxerr
00024EF2 <AmiBlitz3.ab3@6943>   LSL.w #8,D0
00024EF4 <AmiBlitz3.ab3@6944>   LSL.w #4,D0
00024EF6 <AmiBlitz3.ab3@6945>   OR.w D0,D1
00024EFA <AmiBlitz3.ab3@6946>    BSR.w get1bytemain                                      ;??wy not !fget
00024EFE <AmiBlitz3.ab3@6947>   CMP.w #$2E,D0
00024F02 <AmiBlitz3.ab3@6948>    BNE.w JL_0_6040
00024F06 <AmiBlitz3.ab3@6949>    BSR.w get1bytemain                                      ;??wy not !fget
00024F0A <AmiBlitz3.ab3@6950>   ORI.w #$20,D0
00024F0E <AmiBlitz3.ab3@6951>   CMP.w #$77,D0
00024F12 <AmiBlitz3.ab3@6952>    BEQ.w JL_0_603C
00024F16 <AmiBlitz3.ab3@6953>   CMP.w #$6C,D0
00024F1A <AmiBlitz3.ab3@6954>    BNE.w syntaxerr
00024F1E <AmiBlitz3.ab3@6955>   BSET #$B,D1
00024F22 <AmiBlitz3.ab3@6958>    BSR.w get1bytemain                                      ;??wy not !fget
00024F26 <AmiBlitz3.ab3@6961>    CMP.b #"*",d0                                           ;020 * Mode
00024F2A <AmiBlitz3.ab3@6962>             BNE 'l1
00024F2E <AmiBlitz3.ab3@6963>             BSR.w get1bytemain                             ;??wy not !fget
00024F32 <AmiBlitz3.ab3@6964>             CMP.b #"2",d0
00024F36 <AmiBlitz3.ab3@6965>             BNE 'l2
00024F3A <AmiBlitz3.ab3@6966>             OR.w #$200,d1
00024F3E <AmiBlitz3.ab3@6967> BRA 'l1b
00024F42 <AmiBlitz3.ab3@6970>             CMP.b #"4",d0
00024F46 <AmiBlitz3.ab3@6971>             BNE 'l3
00024F4A <AmiBlitz3.ab3@6972>             OR.w #$400,d1
00024F4E <AmiBlitz3.ab3@6973> BRA 'l1b
00024F52 <AmiBlitz3.ab3@6976>             CMP.b #"8",d0
00024F56 <AmiBlitz3.ab3@6977>             BNE syntaxerr
00024F5A <AmiBlitz3.ab3@6978>             OR.w #$600,d1
00024F5E <AmiBlitz3.ab3@6981>         BSR.w get1bytemain                                 ;??wy not !fget
00024F62 <AmiBlitz3.ab3@6984>   CMP.w #$29,D0
00024F66 <AmiBlitz3.ab3@6985>    BNE.w syntaxerr
00024F6C <AmiBlitz3.ab3@6986>   MOVE.w D1,extraword
00024F6E <AmiBlitz3.ab3@6987>   MOVEQ.l #$06,D5
00024F72 <AmiBlitz3.ab3@6988> BRA.w get1bytemain                                         ;??wy not !fget
00024F76 <AmiBlitz3.ab3@6992>   CMP.w #")",D0                                            ;")"
00024F7A <AmiBlitz3.ab3@6993>    BNE.w errorbracketmiss                                  ; was syntax error
00024F7C <AmiBlitz3.ab3@6994>   MOVEQ.l #$05,D5
00024F80 <AmiBlitz3.ab3@6995> BRA.w get1bytemain                                         ;??wy not !fget
00024F86 <AmiBlitz3.ab3@7002>   MOVEA.l asmbuff,A0
00024F8C <AmiBlitz3.ab3@7003>   MOVE.w ininclude,D1
00024F92 <AmiBlitz3.ab3@7004>   OR.w inmacro,D1
00024F94 <AmiBlitz3.ab3@7005>   MOVE.w D1,(A0)+                                          ;flag!
00024F98 <AmiBlitz3.ab3@7006>    BNE.w copyconst
00024F9A <AmiBlitz3.ab3@7007>   MOVE.l A5,-(A7)
00024F9E <AmiBlitz3.ab3@7008>    BSR.w copyconst
00024FA4 <AmiBlitz3.ab3@7009>   MOVEA.l asmbuff,A0
00024FA8 <AmiBlitz3.ab3@7010>   CMP.w #$4,D1
00024FAC <AmiBlitz3.ab3@7011>    BLS.w asmconst__leave
00024FB2 <AmiBlitz3.ab3@7012>   TST.w lc
00024FB6 <AmiBlitz3.ab3@7013>    BNE.w asmconst__leave
00024FB8 <AmiBlitz3.ab3@7014>   ADDQ.w #2,A0
00024FBA <AmiBlitz3.ab3@7015>   MOVE.l (A7)+,(A0)+
00024FBC <AmiBlitz3.ab3@7016>   CLR.b (A0)
00024FC4 <AmiBlitz3.ab3@7017>   MOVE.w #$0004,asmlen2                                    ;pointer + 0
00024FC6 <AmiBlitz3.ab3@7018> RTS
00024FC8 <AmiBlitz3.ab3@7022>   NOT.w (A0)
00024FCA <AmiBlitz3.ab3@7023>   ADDQ.w #4,A7
00024FCC <AmiBlitz3.ab3@7024> RTS
00024FCE <AmiBlitz3.ab3@7027> lc:  Ds.w 1
00024FD4 <AmiBlitz3.ab3@7031>   CLR.w lc
00024FD6 <AmiBlitz3.ab3@7032>   MOVEQ.l #$00,D1
00024FD8 <AmiBlitz3.ab3@7035>    ADDQ.w #1,D1                                            ;label name
00025004 <AmiBlitz3.ab3@7036>    !fget                                                   ;bsr.w get1bytemain
00025008 <AmiBlitz3.ab3@7037>    BEQ.w copyconst__done
0002500C <AmiBlitz3.ab3@7038>    CMP.w #$22,d0
00025010 <AmiBlitz3.ab3@7039>    BNE.s copyconst__loop_l10
00025016 <AmiBlitz3.ab3@7040>    NOT.w instringon
0002501A <AmiBlitz3.ab3@7043>    CMP.w #":",d0
0002501E <AmiBlitz3.ab3@7044>    BNE.s copyconst__loop_l11
00025024 <AmiBlitz3.ab3@7045>    TST.w instringon
00025028 <AmiBlitz3.ab3@7046>    BEQ copyconst__done
0002502A <AmiBlitz3.ab3@7049>   TST.w D0
0002502E <AmiBlitz3.ab3@7050>   BPL.w copyconst__notmi
00025030 <AmiBlitz3.ab3@7051>   MOVE.w D0,-(A7)
00025032 <AmiBlitz3.ab3@7052>   LSR.w #8,D0
00025034 <AmiBlitz3.ab3@7053>   MOVE.b D0,(A0)+
00025036 <AmiBlitz3.ab3@7054>   MOVE.w (A7)+,D0
00025038 <AmiBlitz3.ab3@7055>   MOVE.b D0,(A0)+
0002503A <AmiBlitz3.ab3@7056>   ADDQ.w #1,D1
0002503E <AmiBlitz3.ab3@7057> BRA.s copyconst__loop
00025044 <AmiBlitz3.ab3@7060>    TST.w instringon
00025048 <AmiBlitz3.ab3@7061>    BNE.w copyconst__putbyte
0002504E <AmiBlitz3.ab3@7062>    TST.b _dcb
00025052 <AmiBlitz3.ab3@7063>    BNE copyconst__notmi_l10
00025056 <AmiBlitz3.ab3@7064>    CMP.w #$28,D0
0002505A <AmiBlitz3.ab3@7065>    BEQ.w copyconst__done
0002505E <AmiBlitz3.ab3@7068>    CMP.w #$2C,D0
00025062 <AmiBlitz3.ab3@7069>    BEQ.w copyconst__done
00025066 <AmiBlitz3.ab3@7070>    CMP.b #"'",D0
0002506A <AmiBlitz3.ab3@7071>    BNE.w copyconst__putbyte
00025070 <AmiBlitz3.ab3@7072>    MOVE.w D0,lc                                     ;locallabels
00025072 <AmiBlitz3.ab3@7073>    MOVE.l A1,-(A7)
00025078 <AmiBlitz3.ab3@7074>    LEA lastgloballabel,A1
0002507A <AmiBlitz3.ab3@7075>    TST.b (A1)
0002507E <AmiBlitz3.ab3@7076>    BEQ.w nolocerr
00025080 <AmiBlitz3.ab3@7079>   ADDQ.w #1,D1
00025082 <AmiBlitz3.ab3@7080>   MOVE.b (A1)+,(A0)+
00025086 <AmiBlitz3.ab3@7081>    BNE.w copyconst__cloop
00025088 <AmiBlitz3.ab3@7082>   SUBQ.w #1,D1
0002508A <AmiBlitz3.ab3@7083>   SUBQ.w #1,A0
0002508C <AmiBlitz3.ab3@7084>   MOVEA.l (A7)+,A1
0002508E <AmiBlitz3.ab3@7087>   MOVE.b D0,(A0)+
00025092 <AmiBlitz3.ab3@7088> BRA.w copyconst__loop
00025094 <AmiBlitz3.ab3@7091>   CLR.b (A0)
0002509A <AmiBlitz3.ab3@7092>   MOVE.w D1,asmlen2
0002509C <AmiBlitz3.ab3@7093> RTS
000250A2 <AmiBlitz3.ab3@7098>   CMP.l #$80ad,d0
000250A6 <AmiBlitz3.ab3@7099>   BNE.s 'l12
000250AC <AmiBlitz3.ab3@7100> JMP bssseg
000250B2 <AmiBlitz3.ab3@7103>   CMP.l #$807f,d0
000250B6 <AmiBlitz3.ab3@7104>     BNE.s 'l13
000250BC <AmiBlitz3.ab3@7105> JMP chipseg
000250C2 <AmiBlitz3.ab3@7108>   ADDQ.l #1,destpointer                                    ;even
000250CA <AmiBlitz3.ab3@7109>   BCLR #$0,destpointer+3
000250CE <AmiBlitz3.ab3@7110>   SUBI.w #$803C,D0
000250D0 <AmiBlitz3.ab3@7111>   LSL.w #2,D0
000250D6 <AmiBlitz3.ab3@7112>   MOVEA.l #asmpnts,A0
000250DA <AmiBlitz3.ab3@7113>   MOVEA.l $0(A0,D0.W),A0                                   ;begin inline assembler
000250E0 <AmiBlitz3.ab3@7114>   MOVE.w D0,temp1
000250E2 <AmiBlitz3.ab3@7115>   MOVE.l A0,-(A7)
000250E4 <AmiBlitz3.ab3@7116>   MOVEQ.l #$01,D1
00025110 <AmiBlitz3.ab3@7117>    !fget                                                   ;bsr.w get1bytemain
00025114 <AmiBlitz3.ab3@7118>   CMP.w #$2E,D0
00025118 <AmiBlitz3.ab3@7119>    BNE.w JL_0_6184
00025144 <AmiBlitz3.ab3@7120>   !fget                                                    ;bsr.w get1bytemain
00025148 <AmiBlitz3.ab3@7121>   ORI.w #$20,D0
0002514C <AmiBlitz3.ab3@7122>   CMP.w #$77,D0                                            ;long
00025150 <AmiBlitz3.ab3@7123>    BEQ.w JL_0_618A
00025154 <AmiBlitz3.ab3@7124>   CMP.w #$62,D0                                            ;byte
00025158 <AmiBlitz3.ab3@7125>    BEQ.w JL_0_617A
0002515C <AmiBlitz3.ab3@7126>   CMP.w #$6C,D0                                            ;word
00025160 <AmiBlitz3.ab3@7127>    BEQ.w JL_0_6196
00025164 <AmiBlitz3.ab3@7128>   CMP.w #"s",d0
00025168 <AmiBlitz3.ab3@7129>   BNE syntaxerr
0002516C <AmiBlitz3.ab3@7130> BRA.w JL_0_617A
0002516E <AmiBlitz3.ab3@7133>   MOVEQ.l #$00,D1
00025172 <AmiBlitz3.ab3@7134>   MOVE.w $8(A0),D0
00025176 <AmiBlitz3.ab3@7135> BRA.w JL_0_619E
00025178 <AmiBlitz3.ab3@7138>   MOVEQ.l #$04,D1
0002517C <AmiBlitz3.ab3@7139> BRA.w JL_0_61AE
0002517E <AmiBlitz3.ab3@7142>   MOVEQ.l #$04,D1
00025182 <AmiBlitz3.ab3@7143>   MOVE.w $8(A0),D0
00025184 <AmiBlitz3.ab3@7144>   LSR.w #4,D0
00025188 <AmiBlitz3.ab3@7145> BRA.w JL_0_619E
0002518A <AmiBlitz3.ab3@7148>   MOVEQ.l #$08,D1
0002518E <AmiBlitz3.ab3@7149>   MOVE.w $8(A0),D0
00025190 <AmiBlitz3.ab3@7150>   LSR.w #8,D0
00025194 <AmiBlitz3.ab3@7153>    ANDI.w #$F,D0
00025198 <AmiBlitz3.ab3@7154>   CMP.w #$F,D0
0002519C <AmiBlitz3.ab3@7155>    BNE.w 'cl60
000251A4 <AmiBlitz3.ab3@7158>    CMP.l #"MULS",-6(a0)
000251A8 <AmiBlitz3.ab3@7159>    BNE 'c20
000251AE <AmiBlitz3.ab3@7160>    MOVE.l #$4c000800,d1
000251B4 <AmiBlitz3.ab3@7161> JMP do32
000251BC <AmiBlitz3.ab3@7164>    CMP.l #"MULU",-6(a0)
000251C0 <AmiBlitz3.ab3@7165>    BNE 'c30
000251C6 <AmiBlitz3.ab3@7166>    MOVE.l #$4c000000,d1
000251CC <AmiBlitz3.ab3@7167> JMP do32
000251D4 <AmiBlitz3.ab3@7170>    CMP.l #"DIVS",-6(a0)
000251D8 <AmiBlitz3.ab3@7171>    BNE 'c40
000251DE <AmiBlitz3.ab3@7172>    MOVE.l #$4c400800,d1
000251E4 <AmiBlitz3.ab3@7173> JMP do32
000251EC <AmiBlitz3.ab3@7176>    CMP.l #"DIVU",-6(a0)
000251F0 <AmiBlitz3.ab3@7177>    BNE 'c50
000251F6 <AmiBlitz3.ab3@7178>    MOVE.l #$4c400000,d1
000251FC <AmiBlitz3.ab3@7179> JMP do32
00025200 <AmiBlitz3.ab3@7182> BRA illsizeerr
0002522C <AmiBlitz3.ab3@7185>   !fget                                                    ;bsr.w get1bytemain
00025232 <AmiBlitz3.ab3@7188>   MOVE.w D1,asmsize
00025234 <AmiBlitz3.ab3@7189>   MOVEQ.l #-$01,D3
00025238 <AmiBlitz3.ab3@7190>    BSR.w reget
0002523C <AmiBlitz3.ab3@7191>    BEQ.w JL_0_6200
00025246 <AmiBlitz3.ab3@7192>   MOVE.l #ptr_parameterstore,asmbuff
00025250 <AmiBlitz3.ab3@7194>    MOVE.w oldqflag,instringon
00025256 <AmiBlitz3.ab3@7195>   MOVEA.l lastsourcepos,A5
0002525A <AmiBlitz3.ab3@7196>    BSR.w JL_0_5DC2
0002525C <AmiBlitz3.ab3@7197>   MOVE.l D4,D2                                             ;to src
0002525E <AmiBlitz3.ab3@7198>   MOVE.l D5,D3
00025268 <AmiBlitz3.ab3@7199>   MOVE.w asmlen2,asmlen
0002526A <AmiBlitz3.ab3@7200>   MOVEQ.l #-$01,D5
00025274 <AmiBlitz3.ab3@7201>   MOVE.w extraword,extraword2
00025278 <AmiBlitz3.ab3@7202>   CMP.w #$2C,D0                                            ;','
0002527C <AmiBlitz3.ab3@7203>    BNE.w JL_0_6200
00025286 <AmiBlitz3.ab3@7204>   MOVE.l #namebuff2,asmbuff
0002528A <AmiBlitz3.ab3@7205>    BSR.w JL_0_5DC2                                         ;dest
0002528C <AmiBlitz3.ab3@7208>   MOVEA.l (A7)+,A0
00025292 <AmiBlitz3.ab3@7209>   MOVEA.l destpointer,A1
00025294 <AmiBlitz3.ab3@7210>   MOVEA.l A1,A4
00025296 <AmiBlitz3.ab3@7211>   ADDQ.w #2,A1
00025298 <AmiBlitz3.ab3@7212>   MOVE.w (A0),D1
0002529A <AmiBlitz3.ab3@7213>   TST.w D3
0002529E <AmiBlitz3.ab3@7214>    BMI.w JL_0_639E
000252A2 <AmiBlitz3.ab3@7215>   MOVE.w $E(A0),D0
000252A6 <AmiBlitz3.ab3@7216>    BPL.w JL_0_6264
000252AA <AmiBlitz3.ab3@7217>   BTST #$0,D0
000252AE <AmiBlitz3.ab3@7218>    BEQ.w JL_0_6240
000252B2 <AmiBlitz3.ab3@7219>   CMP.w #$1,D5
000252B6 <AmiBlitz3.ab3@7220>    BNE.w JL_0_6240
000252BA <AmiBlitz3.ab3@7221>   CMP.w #$E,D3
000252BE <AmiBlitz3.ab3@7222>    BEQ.w JL_0_6264
000252C4 <AmiBlitz3.ab3@7223>   MOVE.w temp1,D0
000252C6 <AmiBlitz3.ab3@7224>   ADDQ.w #4,D0
000252CA <AmiBlitz3.ab3@7225> BRA.w JL_0_6256
000252CE <AmiBlitz3.ab3@7228>   BTST #$1,D0
000252D2 <AmiBlitz3.ab3@7229>    BEQ.w JL_0_6264
000252D6 <AmiBlitz3.ab3@7230>   CMP.w #$B,D3
000252DA <AmiBlitz3.ab3@7231>    BNE.w JL_0_6264
000252E0 <AmiBlitz3.ab3@7232>   MOVE.w temp1,D0
000252E2 <AmiBlitz3.ab3@7235>   ADDQ.w #4,D0
000252E8 <AmiBlitz3.ab3@7236>   MOVEA.l #asmpnts,A0
000252EC <AmiBlitz3.ab3@7237>   MOVEA.l $0(A0,D0.W),A0
000252EE <AmiBlitz3.ab3@7238>   MOVE.w (A0),D1
000252F8 <AmiBlitz3.ab3@7241>   MOVE.l #ptr_parameterstore,buff1
00025302 <AmiBlitz3.ab3@7242>   MOVE.l #namebuff2,buff2
00025306 <AmiBlitz3.ab3@7243>   MOVE.l $A(A0),D0
0002530A <AmiBlitz3.ab3@7244>    BEQ.w JL_0_62DC
0002530C <AmiBlitz3.ab3@7245>   MOVEA.l D0,A3
00025312 <AmiBlitz3.ab3@7246>   MOVE.w asmsize,D6
00025314 <AmiBlitz3.ab3@7249>    JSR (A3)
00025318 <AmiBlitz3.ab3@7250>    BPL.w JL_0_629A
0002531C <AmiBlitz3.ab3@7251>   CMP.w #-$2,D0
00025320 <AmiBlitz3.ab3@7252>    BEQ.w illsizeerr
00025324 <AmiBlitz3.ab3@7253> BRA.w illeaerr
00025328 <AmiBlitz3.ab3@7256>   BEQ.w JL_0_62DC
0002532A <AmiBlitz3.ab3@7257>   EXG.l D2,D4
0002532C <AmiBlitz3.ab3@7258>   EXG.l D3,D5
00025332 <AmiBlitz3.ab3@7259>   MOVE.l extraword,D6
00025334 <AmiBlitz3.ab3@7260>   SWAP D6
0002533A <AmiBlitz3.ab3@7261>   MOVE.l D6,extraword
00025344 <AmiBlitz3.ab3@7262>   MOVE.l #namebuff2,buff1
0002534E <AmiBlitz3.ab3@7263>   MOVE.l #ptr_parameterstore,buff2
00025354 <AmiBlitz3.ab3@7264>   MOVE.w asmlen,D6
0002535A <AmiBlitz3.ab3@7265>   MOVE.w asmlen2,D7
00025360 <AmiBlitz3.ab3@7266>   MOVE.w D6,asmlen2
00025366 <AmiBlitz3.ab3@7267>   MOVE.w D7,asmlen
00025370 <AmiBlitz3.ab3@7270>   MOVE.l buff1,asmbuff
00025374 <AmiBlitz3.ab3@7271>   MOVE.w $E(A0),D0
00025378 <AmiBlitz3.ab3@7272>    BEQ.w JL_0_6348
0002537C <AmiBlitz3.ab3@7273>    BMI.w JL_0_6348
00025380 <AmiBlitz3.ab3@7274>    CMP.w #$7000,d1
00025384 <AmiBlitz3.ab3@7275>    BNE 'skip
00025388 <AmiBlitz3.ab3@7276>    CMP.w #$b,d3
0002538C <AmiBlitz3.ab3@7277>    BNE illeaerr
00025390 <AmiBlitz3.ab3@7280>    CMP.w #$1,D0
00025394 <AmiBlitz3.ab3@7281>    BNE.w JL_0_630E
00025398 <AmiBlitz3.ab3@7282>    CMP.w #$B,D3
0002539C <AmiBlitz3.ab3@7283>    BNE.w JL_0_6348
000253A0 <AmiBlitz3.ab3@7286>    BSR.w insasm
000253A2 <AmiBlitz3.ab3@7287>   MOVE.w D4,D2
000253A4 <AmiBlitz3.ab3@7288>   MOVE.w D5,D3
000253A8 <AmiBlitz3.ab3@7289> BRA.w JL_0_6364
000253AC <AmiBlitz3.ab3@7292>    CMP.w #$2,D0
000253B0 <AmiBlitz3.ab3@7293>    BNE.w JL_0_6324
000253B4 <AmiBlitz3.ab3@7294>   CMP.w #$8,D3
000253B8 <AmiBlitz3.ab3@7295>    BNE.w illeaerr
000253BA <AmiBlitz3.ab3@7296>   MOVEQ.l #$09,D3
000253BE <AmiBlitz3.ab3@7297> BRA.w JL_0_6348
000253C2 <AmiBlitz3.ab3@7300>    CMP.w #$3,D0
000253C6 <AmiBlitz3.ab3@7301>    BEQ.w JL_0_6302
000253CA <AmiBlitz3.ab3@7302>   CMP.w #$4,D0
000253CE <AmiBlitz3.ab3@7303>    BEQ.w JL_0_6302
000253D2 <AmiBlitz3.ab3@7304>   CMP.w #$5,D0
000253D6 <AmiBlitz3.ab3@7305>    BNE.w JL_0_6348
000253DA <AmiBlitz3.ab3@7306>   CMP.w #$8,D5
000253DE <AmiBlitz3.ab3@7307>    BNE.w illeaerr
000253E0 <AmiBlitz3.ab3@7308>   OR.w D2,D1
000253E2 <AmiBlitz3.ab3@7309>   MOVEQ.l #$09,D5
000253E6 <AmiBlitz3.ab3@7312>   MOVE.w $2(A0),D6
000253EA <AmiBlitz3.ab3@7313>   MOVE.b $6(A0),D7
000253EE <AmiBlitz3.ab3@7314>   MOVEM.l D4-D5,-(A7)
000253F4 <AmiBlitz3.ab3@7315>   MOVE.w extraword2,D4
000253F8 <AmiBlitz3.ab3@7316>    BSR.w doea
000253FC <AmiBlitz3.ab3@7317>   MOVEM.l (A7)+,D2-D3
000253FE <AmiBlitz3.ab3@7318>   TST.w D3
00025402 <AmiBlitz3.ab3@7321>     BMI.w JL_0_6392
00025408 <AmiBlitz3.ab3@7322>   MOVE.w extraword,D4
0002540C <AmiBlitz3.ab3@7323>   MOVE.w $4(A0),D6
00025410 <AmiBlitz3.ab3@7324>   MOVE.b $7(A0),D7
0002541A <AmiBlitz3.ab3@7325>   MOVE.l buff2,asmbuff
00025424 <AmiBlitz3.ab3@7326>   MOVE.w asmlen2,asmlen
00025428 <AmiBlitz3.ab3@7327>    BSR.w doea
0002542C <AmiBlitz3.ab3@7328> BRA.w JL_0_63AA
00025430 <AmiBlitz3.ab3@7331>   MOVE.w $4(A0),D0
00025434 <AmiBlitz3.ab3@7332>    BNE.w illeaerr
00025438 <AmiBlitz3.ab3@7333> BRA.w JL_0_63AA
0002543C <AmiBlitz3.ab3@7337>   MOVE.w $2(A0),D0
00025440 <AmiBlitz3.ab3@7338>   OR.w $4(A0),D0
00025444 <AmiBlitz3.ab3@7339>    BNE.w illeaerr
00025448 <AmiBlitz3.ab3@7342>   MOVE.w $8(A0),D0
0002544C <AmiBlitz3.ab3@7343>   ANDI.w #$F000,D0
00025450 <AmiBlitz3.ab3@7344>   CMP.w #-$1000,D0
00025454 <AmiBlitz3.ab3@7345>    BEQ.w JL_0_63D2
00025456 <AmiBlitz3.ab3@7346>   LSR.w #8,D0
00025458 <AmiBlitz3.ab3@7347>   LSR.w #4,D0
0002545C <AmiBlitz3.ab3@7348>   MOVE.w $8(A0),D2
00025462 <AmiBlitz3.ab3@7349>   MOVE.w asmsize,D3
00025464 <AmiBlitz3.ab3@7350>   LSR.w D3,D2
00025468 <AmiBlitz3.ab3@7351>   ANDI.w #$F,D2
0002546A <AmiBlitz3.ab3@7352>   LSL.w D0,D2
0002546C <AmiBlitz3.ab3@7353>   OR.w D2,D1
00025472 <AmiBlitz3.ab3@7356>   CMPA.l destbufferend,A4
00025476 <AmiBlitz3.ab3@7357>    BCS.w JL_0_63E8
0002547E <AmiBlitz3.ab3@7359>   MOVE.w #$FFFF,dontwrite
00025482 <AmiBlitz3.ab3@7360> BRA.w JL_0_63EA
00025484 <AmiBlitz3.ab3@7363>   MOVE.w D1,(A4)
0002548A <AmiBlitz3.ab3@7366>   MOVE.l A1,destpointer
0002548C <AmiBlitz3.ab3@7367> RTS
00025492 <AmiBlitz3.ab3@7371>   MOVE.l destpointer,-(A7)
00025498 <AmiBlitz3.ab3@7372>   MOVE.l A1,destpointer
0002549C <AmiBlitz3.ab3@7373>    BSR.w addoff
000254A2 <AmiBlitz3.ab3@7374>   MOVEA.l destpointer,A1
000254A8 <AmiBlitz3.ab3@7375>   MOVE.l (A7)+,destpointer
000254AA <AmiBlitz3.ab3@7376> RTS
000254AE <AmiBlitz3.ab3@7380>   MOVEM.l d2-d6,-(a7)
000254B4 <AmiBlitz3.ab3@7381>   JSR stripspaces
000254B8 <AmiBlitz3.ab3@7382>   CMP.b #"d",(a5)+
000254BC <AmiBlitz3.ab3@7383>   BNE noreg
000254BE <AmiBlitz3.ab3@7384>   MOVE.b (a5)+,d0
000254C2 <AmiBlitz3.ab3@7385>   CMP.b #$30,d0
000254C6 <AmiBlitz3.ab3@7386>   BLT noreg
000254CA <AmiBlitz3.ab3@7387>   CMP.b #$37,d0
000254CE <AmiBlitz3.ab3@7388>   BGT noreg
000254D2 <AmiBlitz3.ab3@7389>   SUB.b #$30,d0
000254D4 <AmiBlitz3.ab3@7390>   MOVEQ #0,d3
000254D6 <AmiBlitz3.ab3@7391>   MOVE.b d0,d3                                             ;reg1
000254D8 <AmiBlitz3.ab3@7392>   ASL.l #8,d3
000254DA <AmiBlitz3.ab3@7393>   ASL.l #8,d3
000254E0 <AmiBlitz3.ab3@7394>   JSR stripspaces
000254E4 <AmiBlitz3.ab3@7395>   CMP.b #",",(a5)+
000254E8 <AmiBlitz3.ab3@7396>   BNE noreg
000254EE <AmiBlitz3.ab3@7397>   JSR stripspaces
000254F2 <AmiBlitz3.ab3@7398>   CMP.b #"d",(a5)+
000254F6 <AmiBlitz3.ab3@7399>   BNE noreg
000254F8 <AmiBlitz3.ab3@7400>   MOVE.b (a5)+,d0
000254FC <AmiBlitz3.ab3@7401>   CMP.b #$30,d0
00025500 <AmiBlitz3.ab3@7402>   BLT noreg
00025504 <AmiBlitz3.ab3@7403>   CMP.b #$37,d0
00025508 <AmiBlitz3.ab3@7404>   BGT noreg
0002550C <AmiBlitz3.ab3@7405>   SUB.b #$30,d0
0002550E <AmiBlitz3.ab3@7406>   MOVEQ #0,d4
00025510 <AmiBlitz3.ab3@7407>   MOVE.b d0,d4                                             ;reg2
00025512 <AmiBlitz3.ab3@7408>   ASL.l #8,d4
00025514 <AmiBlitz3.ab3@7409>   ASL.l #4,d4
00025516 <AmiBlitz3.ab3@7410>   OR.b d0,d1
00025518 <AmiBlitz3.ab3@7411>   OR.l d3,d1
0002551A <AmiBlitz3.ab3@7412>   OR.l d4,d1
00025520 <AmiBlitz3.ab3@7413>   JSR writelong
00025524 <AmiBlitz3.ab3@7414>   MOVEM.l (a7)+,d2-d6
00025528 <AmiBlitz3.ab3@7415>   MOVEM.l d1/a1-a3,-(a7)
0002552C <AmiBlitz3.ab3@7416> BRA exit
00025530 <AmiBlitz3.ab3@7420>   MOVEM.l (a7)+,d2-d6
00025536 <AmiBlitz3.ab3@7421>   LEA errtext,a0
00025538 <AmiBlitz3.ab3@7422>   MOVE.l a0,-(a7)
0002553E <AmiBlitz3.ab3@7423> JMP handle_compileerror
00025544 <AmiBlitz3.ab3@7432>   MOVE.w dontwrite,D1
00025548 <AmiBlitz3.ab3@7433>    BNE.w asmfixer__done
00025550 <AmiBlitz3.ab3@7434>   BTST #$7,make_smallestcode
00025554 <AmiBlitz3.ab3@7435>    BEQ.w asmfixer__go
00025558 <AmiBlitz3.ab3@7436>   MOVE.w pass(PC),D1
0002555C <AmiBlitz3.ab3@7437>    BEQ.w asmfixer__done
00025562 <AmiBlitz3.ab3@7440>   MOVEA.l templabel,A2                                     ;insert labels in Code
0002556A <AmiBlitz3.ab3@7441>   MOVE.b #1,curtemplabel
00025572 <AmiBlitz3.ab3@7442>   MOVE.w #$FFFF,constmode
00025578 <AmiBlitz3.ab3@7443>   CLR.w regnum
00025582 <AmiBlitz3.ab3@7444>           MOVE.l #forthstack,forthsp
0002558C <AmiBlitz3.ab3@7445>           MOVE.l #precstack,precsp
00025590 <AmiBlitz3.ab3@7446>    BSR.w prepstack
00025592 <AmiBlitz3.ab3@7449>   MOVE.l A2,-(A7)
00025596 <AmiBlitz3.ab3@7450>    BSR.w chkstop
00025598 <AmiBlitz3.ab3@7451>   MOVEA.l (A7)+,A2
0002559C <AmiBlitz3.ab3@7452>   CMPA.w #$0,A2
000255A0 <AmiBlitz3.ab3@7453>    BEQ.w asmfixer__done2
000255A6 <AmiBlitz3.ab3@7454>    CLR.b iee
000255AC <AmiBlitz3.ab3@7455>   MOVE.l A2,asmbuff
000255B0 <AmiBlitz3.ab3@7456>   LEA $10(A2),A5
000255B4 <AmiBlitz3.ab3@7457>   TST.b $F(A2)
000255B8 <AmiBlitz3.ab3@7458>    BNE.w asmfixer__skipo
000255BA <AmiBlitz3.ab3@7459>   MOVEA.l (A5),A5                                          ;pointer to real text
000255C0 <AmiBlitz3.ab3@7462>    CLR.w asmtype
000255C4 <AmiBlitz3.ab3@7463>    CMP.b #".",(a5)
000255C8 <AmiBlitz3.ab3@7464>    BNE.s asmfixer__skipo_l10
000255CA <AmiBlitz3.ab3@7465>    MOVE.l a2,-(a7)
000255CC <AmiBlitz3.ab3@7466>    ADDQ.l #1,a5
000255D2 <AmiBlitz3.ab3@7467>    LEA newtypebase,a2
000255D6 <AmiBlitz3.ab3@7468>    BSR getparameter2
000255DA <AmiBlitz3.ab3@7469>    BEQ.w syntaxerr
000255DE <AmiBlitz3.ab3@7470>    BSR findtype
000255E2 <AmiBlitz3.ab3@7471>    BNE.w notypeerr
000255E6 <AmiBlitz3.ab3@7472>    LEA $4(a2),a2
000255EA <AmiBlitz3.ab3@7473>    BSR getparameter2
000255EE <AmiBlitz3.ab3@7474>    BEQ.w syntaxerr
000255F2 <AmiBlitz3.ab3@7475>    BSR.w findvariable2
000255F6 <AmiBlitz3.ab3@7476>    BNE.w notypeerr
000255FA <AmiBlitz3.ab3@7477>    MOVE.w $4(a2),d3
000255FC <AmiBlitz3.ab3@7478>    EXT.l d3
00025600 <AmiBlitz3.ab3@7479> BRA asmfixer__skipo_l30b
00025604 <AmiBlitz3.ab3@7482>   CMP.b #"\",(a5)
00025608 <AmiBlitz3.ab3@7483>     BNE asmfixer__skipo_l20
0002560A <AmiBlitz3.ab3@7484>     ADDQ.l #1,a5
0002560C <AmiBlitz3.ab3@7485>    MOVE.l a2,-(a7)
0002560E <AmiBlitz3.ab3@7486>    MOVE.l a5,a4
00025614 <AmiBlitz3.ab3@7487>    LEA usedpath,a5
00025618 <AmiBlitz3.ab3@7488>    CMP.b #"*",(a5)
0002561C <AmiBlitz3.ab3@7489>    BNE asmfixer__skipo_lm1
0002561E <AmiBlitz3.ab3@7490>    ADDQ.l #1,a5
00025622 <AmiBlitz3.ab3@7493>    BSR.w getparameter2
00025626 <AmiBlitz3.ab3@7494>    BEQ.w syntaxerr
0002562C <AmiBlitz3.ab3@7495>    LEA varbase,A2
00025634 <AmiBlitz3.ab3@7496>    MOVE.b #1,newvariable
00025638 <AmiBlitz3.ab3@7497>    BSR.w findvariable
0002563E <AmiBlitz3.ab3@7498>    CLR.b newvariable
00025644 <AmiBlitz3.ab3@7499>    CMP.l #-1,d0
00025648 <AmiBlitz3.ab3@7500>    BEQ.w notypeerr
0002564A <AmiBlitz3.ab3@7501>    MOVE.l a4,a5
0002564E <AmiBlitz3.ab3@7502>    MOVE.l $a(a2),a2
00025652 <AmiBlitz3.ab3@7503>    LEA $4(a2),a2
00025656 <AmiBlitz3.ab3@7504>    BSR getparameter2
0002565A <AmiBlitz3.ab3@7505>    BEQ.w syntaxerr
0002565E <AmiBlitz3.ab3@7506>    BSR.w findvariable2
00025662 <AmiBlitz3.ab3@7507>    BNE.w notypeerr
00025666 <AmiBlitz3.ab3@7508>   MOVE.w $4(A2),D3
00025668 <AmiBlitz3.ab3@7509>   EXT.l D3
0002566E <AmiBlitz3.ab3@7512>    CMP.b #"[",-1(a5)
00025672 <AmiBlitz3.ab3@7513>    BNE asmfixer__skipo_l30c
00025674 <AmiBlitz3.ab3@7514>    MOVEQ #0,d0
00025676 <AmiBlitz3.ab3@7515>    MOVE.b (a5)+,d0
00025678 <AmiBlitz3.ab3@7516>    MOVE.l d3,-(a7)
0002567A <AmiBlitz3.ab3@7517>    MOVEQ #0,d3
00025680 <AmiBlitz3.ab3@7518>    JSR atoi
00025682 <AmiBlitz3.ab3@7519>    MOVE.l (a7)+,d1
00025686 <AmiBlitz3.ab3@7520>    MOVE.l $a(a2),a2
0002568A <AmiBlitz3.ab3@7521>    MOVE.w 8(a2),d0
0002568C <AmiBlitz3.ab3@7522>    MULS d0,d3
0002568E <AmiBlitz3.ab3@7523>    ADD.l d1,d3
00025690 <AmiBlitz3.ab3@7526>   MOVE.l (a7)+,a2
00025694 <AmiBlitz3.ab3@7527> BRA asmfixer__oko
0002569A <AmiBlitz3.ab3@7530>   CMP.w #$c,$8(a2)
0002569E <AmiBlitz3.ab3@7531>      BEQ asmfixer__skipo_lf1
000256A4 <AmiBlitz3.ab3@7532>      CMP.w #$d,$8(a2)
000256A8 <AmiBlitz3.ab3@7533>      BEQ asmfixer__skipo_lf1
000256AE <AmiBlitz3.ab3@7536>   JSR AJL_0_BF6E
000256B4 <AmiBlitz3.ab3@7539>   MOVEA.l asmbuff,A2
000256B8 <AmiBlitz3.ab3@7540>    BEQ.w asmfixer__oko
000256BC <AmiBlitz3.ab3@7541>   CMP.w #$28,D0
000256C0 <AmiBlitz3.ab3@7542>    BEQ.w asmfixer__oko
000256C4 <AmiBlitz3.ab3@7543>   CMP.w #$2C,D0
000256C8 <AmiBlitz3.ab3@7544>    BEQ.w asmfixer__oko
000256CC <AmiBlitz3.ab3@7545> BRA.w syntaxerr
000256D4 <AmiBlitz3.ab3@7548>   MOVE.b #1,iee
000256D8 <AmiBlitz3.ab3@7549> BRA asmfixer__skipo_lf2
000256DC <AmiBlitz3.ab3@7552>   MOVEA.l $4(A2),A1
000256E0 <AmiBlitz3.ab3@7554>   MOVE.w $8(A2),D1                                         ;labelmode
000256E4 <AmiBlitz3.ab3@7555>   CMP.w #$5,D1
000256E8 <AmiBlitz3.ab3@7556>    BNE.w asmfixer__notdan
000256EC <AmiBlitz3.ab3@7559>    BSR.w chkword                                         ;word
000256EE <AmiBlitz3.ab3@7562>   MOVE.w D3,(A1)
000256F2 <AmiBlitz3.ab3@7563> BRA.w asmfixer__next
000256F6 <AmiBlitz3.ab3@7566>   CMP.w #$6,D1
000256FA <AmiBlitz3.ab3@7567>    BNE.w asmfixer__notdanxi
000256FE <AmiBlitz3.ab3@7570>    BSR.w chkbyte                                         ;byte
00025702 <AmiBlitz3.ab3@7573>   MOVE.b D3,$1(A1)
00025706 <AmiBlitz3.ab3@7574> BRA.w asmfixer__next
0002570A <AmiBlitz3.ab3@7577>    CMP.w #$11,D1                                           ;byte
0002570E <AmiBlitz3.ab3@7578>    BEQ.w asmfixer__isbyte2
00025712 <AmiBlitz3.ab3@7579>    CMP.w #$c,d1
00025716 <AmiBlitz3.ab3@7580>    BEQ asmfixer__single1
0002571A <AmiBlitz3.ab3@7581>    CMP.w #$d,d1
0002571E <AmiBlitz3.ab3@7582>    BEQ asmfixer__double1
00025722 <AmiBlitz3.ab3@7583>   CMP.w #$7,D1
00025726 <AmiBlitz3.ab3@7584>    BEQ.w asmfixer__word                                    ;word
0002572A <AmiBlitz3.ab3@7585>   CMP.w #$8,D1
0002572E <AmiBlitz3.ab3@7586>    BNE.w asmfixer__notabsl
00025734 <AmiBlitz3.ab3@7589>   MOVE.w asmtype,D1                                        ;long
00025738 <AmiBlitz3.ab3@7590>    BEQ.w asmfixer__notpcrel
0002573C <AmiBlitz3.ab3@7591>      BSR.w asmoff
0002573E <AmiBlitz3.ab3@7594>   MOVE.l D3,(A1)
00025742 <AmiBlitz3.ab3@7595> BRA.w asmfixer__next
00025748 <AmiBlitz3.ab3@7599>   fmove.s fp0,0(a1)
0002574C <AmiBlitz3.ab3@7600> BRA.w asmfixer__next
00025752 <AmiBlitz3.ab3@7604>   fmove.d fp0,0(a1)
00025756 <AmiBlitz3.ab3@7605> BRA.w asmfixer__next
0002575A <AmiBlitz3.ab3@7609>   CMP.w #$9,D1
0002575E <AmiBlitz3.ab3@7610>    BNE.w asmfixer__notdpc
00025760 <AmiBlitz3.ab3@7611>   SUB.l A1,D3                                              ;branchword
00025764 <AmiBlitz3.ab3@7612>    BSR.w chkword
00025766 <AmiBlitz3.ab3@7613>   MOVE.w D3,(A1)
0002576A <AmiBlitz3.ab3@7614> BRA.w asmfixer__next
0002576E <AmiBlitz3.ab3@7618>   CMP.w #$A,D1
00025772 <AmiBlitz3.ab3@7619>    BNE.w asmfixer__imm
00025774 <AmiBlitz3.ab3@7620>   SUB.l A1,D3                                              ;branchbyte
00025778 <AmiBlitz3.ab3@7621> BRA.w asmfixer__isbyte
0002577C <AmiBlitz3.ab3@7625>   CMP.w #$11,d1
00025780 <AmiBlitz3.ab3@7626>   BLE asmfixer__imm_org
00025782 <AmiBlitz3.ab3@7627>   MOVE.l a3,-(a7)
00025788 <AmiBlitz3.ab3@7628>   LEA pluginbase,a3
0002578C <AmiBlitz3.ab3@7629>   MOVE.l 8(a2),a0
0002578E <AmiBlitz3.ab3@7630>   JSR (a0)                                                 ;hook
00025790 <AmiBlitz3.ab3@7631>   MOVE.l (a7)+,a3
00025794 <AmiBlitz3.ab3@7632> BRA asmfixer__next
00025798 <AmiBlitz3.ab3@7635>   MOVE.w $A(A2),D0
0002579C <AmiBlitz3.ab3@7636>    BEQ.w asmfixer__noflag
000257A0 <AmiBlitz3.ab3@7637>   CMP.w #$1,D0
000257A4 <AmiBlitz3.ab3@7638>    BEQ.w asmfixer__tocount
000257A8 <AmiBlitz3.ab3@7639>   CMP.w #$3,D0
000257AC <AmiBlitz3.ab3@7640>    BEQ.w asmfixer__tomoveq
000257B0 <AmiBlitz3.ab3@7641>   CMP.w #$4,D0
000257B4 <AmiBlitz3.ab3@7642>    BEQ.w asmfixer__totrap
000257B8 <AmiBlitz3.ab3@7645>   CMP.w #$B,D1                                             ;long
000257BC <AmiBlitz3.ab3@7646>    BEQ.w asmfixer__isabsl
000257C0 <AmiBlitz3.ab3@7647> BRA asmfixer__word2                                              ;word
000257C6 <AmiBlitz3.ab3@7650>   CMP.l #$F,D3
000257CA <AmiBlitz3.ab3@7651>    BHI.w illtraperr
000257CC <AmiBlitz3.ab3@7652>   OR.b D3,-(A1)
000257D0 <AmiBlitz3.ab3@7653> BRA.w asmfixer__next
000257D6 <AmiBlitz3.ab3@7656>   CMP.l #$8,D3
000257DA <AmiBlitz3.ab3@7657>    BHI.w illimmerr
000257DC <AmiBlitz3.ab3@7658>   TST.l D3
000257E0 <AmiBlitz3.ab3@7659>    BEQ.w illimmerr
000257E4 <AmiBlitz3.ab3@7660>   ANDI.w #$7,D3
000257E6 <AmiBlitz3.ab3@7661>   LSL.w #8,D3
000257E8 <AmiBlitz3.ab3@7662>   LSL.w #1,D3
000257EA <AmiBlitz3.ab3@7663>   OR.w D3,-(A1)
000257EE <AmiBlitz3.ab3@7664> BRA.w asmfixer__next
000257F2 <AmiBlitz3.ab3@7667>    BSR.w chkbyte
000257F4 <AmiBlitz3.ab3@7668>   MOVE.b D3,-(A1)
000257F6 <AmiBlitz3.ab3@7671>   MOVEA.l (A2),A2
000257FA <AmiBlitz3.ab3@7672> BRA.w asmfixer__loop
00025800 <AmiBlitz3.ab3@7675>   CLR.w constmode
00025806 <AmiBlitz3.ab3@7678>   CLR.b curtemplabel
00025808 <AmiBlitz3.ab3@7679> RTS
0002580A <AmiBlitz3.ab3@7688>   BTST D3,D6
0002580E <AmiBlitz3.ab3@7689>    BEQ.w illeaerr
00025812 <AmiBlitz3.ab3@7690>    BSR.w makemode
00025816 <AmiBlitz3.ab3@7691>   CMP.w #$7,D3
0002581A <AmiBlitz3.ab3@7692>    BCS.w doea__skip
0002581C <AmiBlitz3.ab3@7693>   MOVE.w D3,D2
0002581E <AmiBlitz3.ab3@7694>   SUBQ.w #7,D2
00025822 <AmiBlitz3.ab3@7695>   CMP.w #$5,D2
00025826 <AmiBlitz3.ab3@7696>    BCS.w doea__skip0
00025828 <AmiBlitz3.ab3@7697>   MOVEQ.l #$04,D2
0002582A <AmiBlitz3.ab3@7700>   MOVEQ.l #$07,D3
0002582C <AmiBlitz3.ab3@7703>   MOVE.b D7,D0
00025830 <AmiBlitz3.ab3@7704>   ANDI.w #$F,D0
00025834 <AmiBlitz3.ab3@7705>   CMP.w #$F,D0
00025838 <AmiBlitz3.ab3@7706>    BEQ.w doea__skip2
0002583A <AmiBlitz3.ab3@7707>   LSL.w D0,D3
0002583C <AmiBlitz3.ab3@7708>   OR.w D3,D1
0002583E <AmiBlitz3.ab3@7711>   LSR.w #4,D7
00025842 <AmiBlitz3.ab3@7712>   ANDI.w #$F,D7
00025846 <AmiBlitz3.ab3@7713>   CMP.w #$F,D7
0002584A <AmiBlitz3.ab3@7714>    BEQ.w doea__skip3
0002584C <AmiBlitz3.ab3@7715>   LSL.w D7,D2
0002584E <AmiBlitz3.ab3@7716>   OR.w D2,D1
00025850 <AmiBlitz3.ab3@7719> RTS
00025856 <AmiBlitz3.ab3@7723>   CMP.l #$7F,D3
0002585A <AmiBlitz3.ab3@7724>    BGT.w illdiserr
00025860 <AmiBlitz3.ab3@7725>   CMP.l #$FFFFFF80,D3                                      ;#-128,d3 org source
00025864 <AmiBlitz3.ab3@7726>    BLT.w illdiserr
00025866 <AmiBlitz3.ab3@7727> RTS
0002586C <AmiBlitz3.ab3@7731>   CMP.l #$7fff,D3
00025870 <AmiBlitz3.ab3@7732>    BGT.w illdiserr
00025876 <AmiBlitz3.ab3@7733>   CMP.l #$FFFF8000,D3                                      ;#-32768,d3 org source
0002587A <AmiBlitz3.ab3@7734>    BLT.w illdiserr
0002587C <AmiBlitz3.ab3@7735> RTS
0002587E <AmiBlitz3.ab3@7740>   MOVE.b (a5)+,d0
00025880 <AmiBlitz3.ab3@7741>   CMP.b d1,d0
00025884 <AmiBlitz3.ab3@7742>   BEQ 'll10
00025886 <AmiBlitz3.ab3@7743>   TST.b d0
0002588A <AmiBlitz3.ab3@7744>   BNE 'll20
0002588C <AmiBlitz3.ab3@7747>   SUBQ #1,a5
0002588E <AmiBlitz3.ab3@7748> RTS
00025890 <AmiBlitz3.ab3@7753>   MOVE.b (a5)+,d0
00025894 <AmiBlitz3.ab3@7754>   CMP.b #",",d0
00025898 <AmiBlitz3.ab3@7755>   BEQ 'll10
0002589C <AmiBlitz3.ab3@7756>   CMP.b #";",d0
000258A0 <AmiBlitz3.ab3@7757>   BEQ 'll10
000258A4 <AmiBlitz3.ab3@7758>  CMP.b #":",d0
000258A8 <AmiBlitz3.ab3@7759>   BEQ 'll10
000258AA <AmiBlitz3.ab3@7762>   TST.b d0
000258AE <AmiBlitz3.ab3@7763>   BNE 'll20
000258B0 <AmiBlitz3.ab3@7766>   SUBQ #1,a5
000258B2 <AmiBlitz3.ab3@7767> RTS
000258B4 <AmiBlitz3.ab3@7771>   ADD.l a2,d1
000258BA <AmiBlitz3.ab3@7772>   LEA tempspace,a1
000258BC <AmiBlitz3.ab3@7773>   MOVE.l d1,a0
000258BE <AmiBlitz3.ab3@7776>   MOVE.b (a0)+,(a1)+
000258C2 <AmiBlitz3.ab3@7777>   BNE.s 'l10
000258C4 <AmiBlitz3.ab3@7778>   SUBQ.l #1,a0
000258C6 <AmiBlitz3.ab3@7779>   SUBQ.l #1,a1
000258C8 <AmiBlitz3.ab3@7782>   MOVE.b (a5)+,(a1)+
000258CC <AmiBlitz3.ab3@7783>   BNE.s 'l20
000258CE <AmiBlitz3.ab3@7784>   CLR.b (a1)
000258D4 <AmiBlitz3.ab3@7785>   LEA tempspace,a5
000258D6 <AmiBlitz3.ab3@7786> RTS
000258DA <AmiBlitz3.ab3@7790>   MOVEM.l D1-D2/A0,-(A7)
000258DC <AmiBlitz3.ab3@7791>   MOVE.l d0,d2
000258DE <AmiBlitz3.ab3@7792>   MOVEQ #0,d1
000258E0 <AmiBlitz3.ab3@7793>   MOVE.l a5,a4
000258E2 <AmiBlitz3.ab3@7796>   ADDQ.l #1,d1
000258E4 <AmiBlitz3.ab3@7797>   MOVE.b (a5)+,d0
000258E8 <AmiBlitz3.ab3@7798>   CMP.b #",",d0
000258EC <AmiBlitz3.ab3@7799>   BEQ 'll10
000258F0 <AmiBlitz3.ab3@7800>   CMP.b #";",d0
000258F4 <AmiBlitz3.ab3@7801>   BEQ 'll10
000258F8 <AmiBlitz3.ab3@7802>   CMP.b #":",d0
000258FC <AmiBlitz3.ab3@7803>   BEQ 'll10
00025900 <AmiBlitz3.ab3@7804>   CMP.b #"(",d0
00025904 <AmiBlitz3.ab3@7805>   BEQ 'll10
00025906 <AmiBlitz3.ab3@7806>   TST.b d0
0002590A <AmiBlitz3.ab3@7807>   BNE 'll20
0002590C <AmiBlitz3.ab3@7810>   SUBQ #1,a5
00025910 <AmiBlitz3.ab3@7811>   CMP.b #"'",(a4)
00025914 <AmiBlitz3.ab3@7812>   BEQ 'llocal
0002591A <AmiBlitz3.ab3@7813>   TST.w inmacro
0002591E <AmiBlitz3.ab3@7814>   BNE 'lmacro
00025920 <AmiBlitz3.ab3@7815>   MOVEQ.l #$14+4,D0
00025922 <AmiBlitz3.ab3@7816>   ADD.l d1,d0
00025924 <AmiBlitz3.ab3@7817>   MOVE.l d1,-(a7)
00025926 <AmiBlitz3.ab3@7818>   MOVEQ.l #$01,D1
0002592C <AmiBlitz3.ab3@7819>   MOVEA.l _execbase,A6
00025932 <AmiBlitz3.ab3@7820>   MOVE.l mempool2,a0
00025936 <AmiBlitz3.ab3@7821>   JSR _AllocPooled(a6)
00025938 <AmiBlitz3.ab3@7823>   MOVE.l (a7)+,d1
0002593A <AmiBlitz3.ab3@7824>   TST.l d0
0002593E <AmiBlitz3.ab3@7825>   BEQ nomemory
00025940 <AmiBlitz3.ab3@7826>   MOVEA.l D0,A0
00025948 <AmiBlitz3.ab3@7828>   MOVE.w linenumat+2,$A(A0)
0002594E <AmiBlitz3.ab3@7830>   MOVE.l templabel,(A0)
00025954 <AmiBlitz3.ab3@7831>   MOVE.l A0,templabel
0002595C <AmiBlitz3.ab3@7832>   MOVE.l destpointer,$4(A0)
00025960 <AmiBlitz3.ab3@7833>   MOVE.l d2,$8(A0)
00025964 <AmiBlitz3.ab3@7834>   LEA $E(A0),A0
00025968 <AmiBlitz3.ab3@7835>   MOVE.b #$14,(A0)+
0002596A <AmiBlitz3.ab3@7836>   CLR.b (a0)+
0002596C <AmiBlitz3.ab3@7838>   MOVE.l a0,d2
0002596E <AmiBlitz3.ab3@7839>   ADDQ.l #4,d2
00025970 <AmiBlitz3.ab3@7840>   MOVE.l d2,(a0)+
00025972 <AmiBlitz3.ab3@7843>   MOVE.b (a4)+,(a0)+
00025974 <AmiBlitz3.ab3@7844>   SUBQ.l #1,d1
00025978 <AmiBlitz3.ab3@7845>   BNE 'lc1
0002597A <AmiBlitz3.ab3@7846>   CLR.b (a0)+
00025980 <AmiBlitz3.ab3@7847>   MOVE.w linenumat,(a0)
00025984 <AmiBlitz3.ab3@7848>   MOVEM.l (A7)+,D1-D2/A0
00025986 <AmiBlitz3.ab3@7849> RTS
00025988 <AmiBlitz3.ab3@7852>   MOVEQ.l #$10+2,D0
0002598A <AmiBlitz3.ab3@7853>   ADD.l d1,d0
0002598E <AmiBlitz3.ab3@7854>   MOVEM.l a4/d3,-(a7)
00025990 <AmiBlitz3.ab3@7855>   MOVE.l d1,d3
00025992 <AmiBlitz3.ab3@7856>   MOVEQ.l #$01,D1
00025998 <AmiBlitz3.ab3@7857>   MOVEA.l _execbase,A6
0002599E <AmiBlitz3.ab3@7858>   MOVE.l mempool2,a0
000259A2 <AmiBlitz3.ab3@7859>   JSR _AllocPooled(a6)
000259A4 <AmiBlitz3.ab3@7861>   TST.l d0
000259A8 <AmiBlitz3.ab3@7862>   BEQ nomemory
000259AA <AmiBlitz3.ab3@7863>   MOVEA.l D0,A0
000259B2 <AmiBlitz3.ab3@7866>   MOVE.w linenumat+2,$C(A0)
000259B8 <AmiBlitz3.ab3@7867>   MOVE.l templabel,(A0)
000259BE <AmiBlitz3.ab3@7868>   MOVE.l A0,templabel
000259C6 <AmiBlitz3.ab3@7869>   MOVE.l destpointer,$4(A0)
000259CA <AmiBlitz3.ab3@7870>   MOVE.l d2,$8(A0)
000259CE <AmiBlitz3.ab3@7871>   LEA $E(A0),A0
000259D0 <AmiBlitz3.ab3@7872>   MOVE.b d3,(A0)+
000259D6 <AmiBlitz3.ab3@7873>   ADD.b #$10,-1(a0)
000259DA <AmiBlitz3.ab3@7874>   MOVE.b #$1,(a0)+
000259DC <AmiBlitz3.ab3@7875>   SUBQ.w #1,d3
000259DE <AmiBlitz3.ab3@7878>   MOVE.b (a4)+,(a0)+
000259E0 <AmiBlitz3.ab3@7879>   SUBQ.l #1,d3
000259E4 <AmiBlitz3.ab3@7880>   BNE.s 'lm2
000259E6 <AmiBlitz3.ab3@7881>   CLR.b (a0)+
000259EC <AmiBlitz3.ab3@7882>   MOVE.w linenumat,(a0)
000259F0 <AmiBlitz3.ab3@7883>   MOVEM.l (a7)+,d3/a4
000259F4 <AmiBlitz3.ab3@7884>   MOVEM.l (A7)+,D1-D2/A0
000259F6 <AmiBlitz3.ab3@7885> RTS
000259FC <AmiBlitz3.ab3@7888>   LEA lastgloballabel,a1
000259FE <AmiBlitz3.ab3@7891>   ADDQ.l #1,d1
00025A00 <AmiBlitz3.ab3@7892>   TST.b (a1)+
00025A04 <AmiBlitz3.ab3@7893>   BNE.s 'll11
00025A06 <AmiBlitz3.ab3@7894>   MOVEQ.l #$10+2,D0
00025A08 <AmiBlitz3.ab3@7895>   ADD.l d1,d0
00025A0C <AmiBlitz3.ab3@7896>   MOVEM.l a4/d3,-(a7)
00025A0E <AmiBlitz3.ab3@7897>   MOVE.l d1,d3
00025A10 <AmiBlitz3.ab3@7898>   MOVEQ.l #$01,D1
00025A16 <AmiBlitz3.ab3@7899>   MOVEA.l _execbase,A6
00025A1C <AmiBlitz3.ab3@7900>   MOVE.l mempool2,a0
00025A20 <AmiBlitz3.ab3@7901>   JSR _AllocPooled(a6)
00025A22 <AmiBlitz3.ab3@7903>   TST.l d0
00025A26 <AmiBlitz3.ab3@7904>   BEQ nomemory
00025A28 <AmiBlitz3.ab3@7905>   MOVEA.l D0,A0
00025A30 <AmiBlitz3.ab3@7908>   MOVE.w linenumat+2,$C(A0)
00025A36 <AmiBlitz3.ab3@7909>   MOVE.l templabel,(A0)
00025A3C <AmiBlitz3.ab3@7910>   MOVE.l A0,templabel
00025A44 <AmiBlitz3.ab3@7911>   MOVE.l destpointer,$4(A0)
00025A48 <AmiBlitz3.ab3@7912>   MOVE.l d2,$8(A0)
00025A4C <AmiBlitz3.ab3@7913>   LEA $E(A0),A0
00025A4E <AmiBlitz3.ab3@7914>   MOVE.b d3,(A0)+
00025A54 <AmiBlitz3.ab3@7915>   ADD.b #$10,-1(a0)
00025A58 <AmiBlitz3.ab3@7916>   MOVE.b #$1,(a0)+
00025A5A <AmiBlitz3.ab3@7917>   SUBQ.w #1,d3
00025A60 <AmiBlitz3.ab3@7918>   LEA lastgloballabel,a1
00025A62 <AmiBlitz3.ab3@7921>   SUBQ.l #1,d3
00025A64 <AmiBlitz3.ab3@7922>   MOVE.b (a1)+,(a0)+
00025A68 <AmiBlitz3.ab3@7923>   BNE.s 'lm3
00025A6A <AmiBlitz3.ab3@7924>   SUBQ.l #1,a0
00025A6C <AmiBlitz3.ab3@7927>   MOVE.b (a4)+,(a0)+
00025A6E <AmiBlitz3.ab3@7928>   SUBQ.l #1,d3
00025A72 <AmiBlitz3.ab3@7929>   BNE.s 'lm1
00025A74 <AmiBlitz3.ab3@7930>   CLR.b (a0)+
00025A7A <AmiBlitz3.ab3@7931>   MOVE.w linenumat,(a0)
00025A7E <AmiBlitz3.ab3@7932>   MOVEM.l (a7)+,d3/a4
00025A82 <AmiBlitz3.ab3@7933>   MOVEM.l (A7)+,D1-D2/A0
00025A84 <AmiBlitz3.ab3@7934> RTS
00025AAE <AmiBlitz3.ab3@7938>   !basic
00025B10 <AmiBlitz3.ab3@7939>   error{!TRANS{"No memory available!!!\\nAB3 will terminate due to low memory!"}}
00025B22 <AmiBlitz3.ab3@7940>   loop Delay_ 1
00025B28 <AmiBlitz3.ab3@7941> Goto loop
00025B2C <AmiBlitz3.ab3@7945>   MOVEM.l D0-D2/A0,-(A7)
00025B30 <AmiBlitz3.ab3@7946>   MOVE.w $E(A0),-(A7)
00025B34 <AmiBlitz3.ab3@7947>    BPL.w insasm__ok
00025B36 <AmiBlitz3.ab3@7948>   CLR.w (A7)
00025B38 <AmiBlitz3.ab3@7951>   MOVE.l A1,-(A7)
00025B3A <AmiBlitz3.ab3@7952>   MOVEQ.l #$10+2,D0
00025B40 <AmiBlitz3.ab3@7953>   ADD.w asmlen,D0
00025B42 <AmiBlitz3.ab3@7954>   MOVE.w D0,D2
00025B44 <AmiBlitz3.ab3@7955>   MOVEQ.l #$01,D1
00025B4A <AmiBlitz3.ab3@7956>   MOVEA.l _execbase,A6
00025B50 <AmiBlitz3.ab3@7957>   MOVE.l mempool2,a0
00025B54 <AmiBlitz3.ab3@7958>   JSR _AllocPooled(a6)
00025B56 <AmiBlitz3.ab3@7960>   MOVEA.l D0,A0
00025B5E <AmiBlitz3.ab3@7963>   MOVE.w linenumat+2,$C(A0)
00025B64 <AmiBlitz3.ab3@7964>   MOVE.l templabel,(A0)
00025B6A <AmiBlitz3.ab3@7965>   MOVE.l A0,templabel
00025B6E <AmiBlitz3.ab3@7966>   MOVE.l (A7),$4(A0)
00025B72 <AmiBlitz3.ab3@7967>   MOVE.w d3,$8(A0)
00025B78 <AmiBlitz3.ab3@7968>   MOVE.w $4(A7),$A(A0)
00025B7C <AmiBlitz3.ab3@7969>   LEA $E(A0),A0
00025B7E <AmiBlitz3.ab3@7970>   MOVE.b D2,(A0)+                                           ;length
00025B84 <AmiBlitz3.ab3@7971>   MOVEA.l asmbuff,A1
00025B86 <AmiBlitz3.ab3@7972>   ADDQ.w #1,A1
00025B88 <AmiBlitz3.ab3@7973>   MOVE.b (A1)+,(A0)+                                        ;type - 0 = indirect,else direct
00025B8C <AmiBlitz3.ab3@7974>    BNE.w insasm__loop
00025B8E <AmiBlitz3.ab3@7975>   MOVE.l (A1)+,(A0)+
00025B94 <AmiBlitz3.ab3@7976>   MOVE.w linenumat,(a0)
00025B98 <AmiBlitz3.ab3@7977> BRA.w insasm__loopdone
00025B9A <AmiBlitz3.ab3@7980>    MOVE.b (A1)+,(A0)+
00025B9E <AmiBlitz3.ab3@7981>    BNE.w insasm__loop
00025BA4 <AmiBlitz3.ab3@7982>    MOVE.w linenumat,(a0)
00025BA6 <AmiBlitz3.ab3@7985>   MOVEA.l (A7)+,A1
00025BA8 <AmiBlitz3.ab3@7986>   ADDQ.w #2,A7
00025BAC <AmiBlitz3.ab3@7987>   MOVEM.l (A7)+,D0-D2/A0
00025BAE <AmiBlitz3.ab3@7988> RTS
00025BB2 <AmiBlitz3.ab3@7992>   CMP.w #$5,D3
00025BB6 <AmiBlitz3.ab3@7993>    BCS.w makemode__done
00025BBA <AmiBlitz3.ab3@7994>   CMP.w #$B,D3
00025BBE <AmiBlitz3.ab3@7995>    BHI.w makemode__done2
00025BC2 <AmiBlitz3.ab3@7996>    BEQ.w makemode__imm
00025BC6 <AmiBlitz3.ab3@7997>    BSR.w insasm
00025BCA <AmiBlitz3.ab3@7998>   CMP.w #$5,D3
00025BCE <AmiBlitz3.ab3@7999>    BEQ.w makemode__word
00025BD2 <AmiBlitz3.ab3@8000>   CMP.w #$6,D3
00025BD6 <AmiBlitz3.ab3@8001>    BEQ.w makemode__dxi
00025BDA <AmiBlitz3.ab3@8002>   CMP.w #$7,D3
00025BDE <AmiBlitz3.ab3@8003>    BEQ.w makemode__word
00025BE2 <AmiBlitz3.ab3@8004>   CMP.w #$8,D3
00025BE6 <AmiBlitz3.ab3@8005>    BEQ.w makemode__long
00025BEA <AmiBlitz3.ab3@8006>   CMP.w #$9,D3
00025BEE <AmiBlitz3.ab3@8007>    BEQ.w makemode__word
00025BF4 <AmiBlitz3.ab3@8011>   CMPA.l destbufferend,A1
00025BF8 <AmiBlitz3.ab3@8012>    BCS.w makemode__ok7
00025BFA <AmiBlitz3.ab3@8013>   ADDQ.w #2,A1
00025BFC <AmiBlitz3.ab3@8014> RTS
00025BFE <AmiBlitz3.ab3@8017>   MOVE.w D4,(A1)+
00025C00 <AmiBlitz3.ab3@8018> RTS
00025C08 <AmiBlitz3.ab3@8021>   CMPI.w #$8,asmsize
00025C0C <AmiBlitz3.ab3@8022>    BCC.w makemode__immlong
00025C0E <AmiBlitz3.ab3@8023>   MOVEQ.l #$10,D3
00025C12 <AmiBlitz3.ab3@8024>    BSR.w insasm
00025C14 <AmiBlitz3.ab3@8025>   MOVEQ.l #$0B,D3
00025C18 <AmiBlitz3.ab3@8026> BRA.w makemode__word
00025C1C <AmiBlitz3.ab3@8029>   BSR.w insasm
00025C1E <AmiBlitz3.ab3@8032>   ADDQ.w #2,A1
00025C20 <AmiBlitz3.ab3@8035>   ADDQ.w #2,A1
00025C22 <AmiBlitz3.ab3@8036> RTS
00025C26 <AmiBlitz3.ab3@8039>   CMP.w #$F,D3
00025C2A <AmiBlitz3.ab3@8040>    BNE.w makemode__done
00025C30 <AmiBlitz3.ab3@8041>   CMPA.l destbufferend,A1
00025C34 <AmiBlitz3.ab3@8042>    BCS.w makemode__ok3
00025C36 <AmiBlitz3.ab3@8043>   ADDQ.w #2,A1
00025C38 <AmiBlitz3.ab3@8044>   ADDQ.w #4,A7
00025C3A <AmiBlitz3.ab3@8045> RTS
00025C3C <AmiBlitz3.ab3@8048>   MOVE.w D2,(A1)+
00025C3E <AmiBlitz3.ab3@8049>   ADDQ.w #4,A7
00025C40 <AmiBlitz3.ab3@8052> RTS
00025C44 <AmiBlitz3.ab3@8056>   BSR.w storeloc
00025C4E <AmiBlitz3.ab3@8057>   MOVE.l linenumat,oldline
00025C50 <AmiBlitz3.ab3@8058>   MOVEQ.l #$00,D1
00025C54 <AmiBlitz3.ab3@8059>    BSR.w get1bytemain
00025C58 <AmiBlitz3.ab3@8060>    BEQ.w JL_0_676E
00025C5A <AmiBlitz3.ab3@8061>   MOVEQ.l #$00,D3
00025C5E <AmiBlitz3.ab3@8062> BRA.w JL_0_6726
00025C62 <AmiBlitz3.ab3@8065>    BSR.w get1bytemain
00025C66 <AmiBlitz3.ab3@8066>    BNE.w JL_0_671C
00025C68 <AmiBlitz3.ab3@8069>   TST.w D3
00025C6C <AmiBlitz3.ab3@8070>    BNE.w brackets_                                         ;syntax error brackets
00025C70 <AmiBlitz3.ab3@8071> BRA.w JL_0_676C
00025C76 <AmiBlitz3.ab3@8074>    MOVE.w instringon,D4
00025C7A <AmiBlitz3.ab3@8076>      BEQ JL_0_6726
00025C7C <AmiBlitz3.ab3@8079>     MOVEQ #0,d0
00025C7E <AmiBlitz3.ab3@8080>      MOVE.b (a5)+,d0                                       ;fix "ue"
00025C84 <AmiBlitz3.ab3@8081>      MOVE.w d0,lastchar
00025C88 <AmiBlitz3.ab3@8082>      BEQ ready
00025C8C <AmiBlitz3.ab3@8083>      CMP.b #$22,d0
00025C90 <AmiBlitz3.ab3@8084>      BNE 'l1
00025C96 <AmiBlitz3.ab3@8085>      NOT.w instringon
00025C9A <AmiBlitz3.ab3@8086> BRA JL_0_670A
00025C9E <AmiBlitz3.ab3@8089>            CMP.b #"@",d0                                   ;expand line @@ 1. for parameter
00025CA2 <AmiBlitz3.ab3@8090>            BNE 'l10
00025CA6 <AmiBlitz3.ab3@8091>            CMP.b #"@",(a5)
00025CAA <AmiBlitz3.ab3@8092>            BNE 'l10
00025CB0 <AmiBlitz3.ab3@8095>            TST.w ininclude
00025CB4 <AmiBlitz3.ab3@8096>            BNE 'inc
00025CBA <AmiBlitz3.ab3@8097>            MOVE.l sourceline3,a5
00025CC0 <AmiBlitz3.ab3@8098>            CMP.l #0,a5
00025CC4 <AmiBlitz3.ab3@8099>            BNE 'l11t
00025CCA <AmiBlitz3.ab3@8100>            MOVEA.l sourceline,A5
00025CCC <AmiBlitz3.ab3@8103>            MOVEA.l (A5),A5
00025CD2 <AmiBlitz3.ab3@8104>            CMP.l #0,a5
00025CD6 <AmiBlitz3.ab3@8105>            BEQ JL_0_676C
00025CDC <AmiBlitz3.ab3@8106>            MOVE.l a5,sourceline3
00025CE0 <AmiBlitz3.ab3@8107>            LEA $9(A5),A5
00025CE4 <AmiBlitz3.ab3@8108> BRA 'l11
00025CE6 <AmiBlitz3.ab3@8111>            ADDQ.l #1,a5
00025CE8 <AmiBlitz3.ab3@8112>            TST.b (a5)
00025CEC <AmiBlitz3.ab3@8113>            BNE 'inc
00025CEE <AmiBlitz3.ab3@8117>            ADDQ.l #1,a5
00025CF0 <AmiBlitz3.ab3@8118>            TST.b (a5)
00025CF4 <AmiBlitz3.ab3@8119>            BEQ illeolerr
00025CF6 <AmiBlitz3.ab3@8120>            MOVE.l a5,-(a7)
00025CFA <AmiBlitz3.ab3@8123>       CMP.b #" ",(a5)+
00025CFE <AmiBlitz3.ab3@8124>       BEQ 'l110
00025D04 <AmiBlitz3.ab3@8125>        CMP.b #";",-1(a5)
00025D06 <AmiBlitz3.ab3@8126>        MOVE.l (a7)+,a5
00025D0A <AmiBlitz3.ab3@8127>        BEQ 'l111
00025D0E <AmiBlitz3.ab3@8128> BRA JL_0_670A
00025D12 <AmiBlitz3.ab3@8131>    CMP.w #$29,D0
00025D16 <AmiBlitz3.ab3@8132>    BNE.w JL_0_673A
00025D18 <AmiBlitz3.ab3@8133>   TST.w D3
00025D1C <AmiBlitz3.ab3@8134>    BEQ.w JL_0_676C
00025D1E <AmiBlitz3.ab3@8137>   SUBQ.w #1,D3
00025D22 <AmiBlitz3.ab3@8138> BRA.w JL_0_670A
00025D26 <AmiBlitz3.ab3@8141>    CMP.w #$7D,D0
00025D2A <AmiBlitz3.ab3@8142>    BEQ.w JL_0_6734
00025D2E <AmiBlitz3.ab3@8143>   CMP.w #$28,D0
00025D32 <AmiBlitz3.ab3@8144>    BNE.w JL_0_6750
00025D34 <AmiBlitz3.ab3@8147>    ADDQ.w #1,D3
00025D38 <AmiBlitz3.ab3@8148> BRA.w JL_0_670A
00025D3C <AmiBlitz3.ab3@8151>   CMP.w #$7B,D0
00025D40 <AmiBlitz3.ab3@8152>    BEQ.w JL_0_674A
00025D44 <AmiBlitz3.ab3@8153>   CMP.w #$2C,D0
00025D48 <AmiBlitz3.ab3@8154>    BNE.w JL_0_670A
00025D4A <AmiBlitz3.ab3@8155>   TST.w D3
00025D4E <AmiBlitz3.ab3@8156>    BNE.w JL_0_670A
00025D50 <AmiBlitz3.ab3@8157>   ADDQ.w #1,D1
00025D54 <AmiBlitz3.ab3@8158> BRA.w JL_0_670A
00025D56 <AmiBlitz3.ab3@8161>   ADDQ.w #1,D1
00025D5C <AmiBlitz3.ab3@8164>   CLR.l sourceline3
00025D66 <AmiBlitz3.ab3@8165>   MOVE.l oldline,linenumat
00025D6A <AmiBlitz3.ab3@8166> BRA.w resloc
00025D70 <AmiBlitz3.ab3@8170>    CLR.w numreps
00025D72 <AmiBlitz3.ab3@8171>   MOVE.w D1,D0
00025D76 <AmiBlitz3.ab3@8172>   ANDI.w #$FF00,D0
00025D7A <AmiBlitz3.ab3@8173>    BEQ.w fetchlibps__noreps
00025D7C <AmiBlitz3.ab3@8174>   LSR.w #8,D0
00025D7E <AmiBlitz3.ab3@8175>   LSR.w #4,D0
00025D82 <AmiBlitz3.ab3@8176>    BEQ.w fetchlibps__skip
00025D84 <AmiBlitz3.ab3@8177>   SUB.b D0,D1
00025D8E <AmiBlitz3.ab3@8178>    MOVE.w regnum,regnumfunc
00025D94 <AmiBlitz3.ab3@8179>    MOVE.b funcparloop,-(a7)
00025D9C <AmiBlitz3.ab3@8180>    MOVE.b #0,funcparloop
00025DA2 <AmiBlitz3.ab3@8181>    MOVE.l leftsidetype,-(a7)
00025DA8 <AmiBlitz3.ab3@8182>    MOVE.l rightsidetype,-(a7)
00025DAE <AmiBlitz3.ab3@8183>    MOVE.w leftsideflagmask,-(a7)
00025DB4 <AmiBlitz3.ab3@8184>    MOVE.w rightsideflagmask,-(a7)
00025DBA <AmiBlitz3.ab3@8185>    CLR.l leftsidetype
00025DC0 <AmiBlitz3.ab3@8186>    CLR.l rightsidetype
00025DC6 <AmiBlitz3.ab3@8187>    CLR.w leftsideflagmask
00025DCC <AmiBlitz3.ab3@8188>    CLR.w rightsideflagmask
00025DD2 <AmiBlitz3.ab3@8189>    MOVE.b blitzparloop,-(a7)
00025DDA <AmiBlitz3.ab3@8190>    MOVE.b #1,blitzparloop
00025DDE <AmiBlitz3.ab3@8191>    BSR.w fetchpees2
00025DE4 <AmiBlitz3.ab3@8192>    MOVE.b (a7)+,blitzparloop
00025DEA <AmiBlitz3.ab3@8193>    MOVE.w (a7)+,rightsideflagmask
00025DF0 <AmiBlitz3.ab3@8194>    MOVE.w (a7)+,leftsideflagmask
00025DF6 <AmiBlitz3.ab3@8195>    MOVE.l (a7)+,rightsidetype
00025DFC <AmiBlitz3.ab3@8196>    MOVE.l (a7)+,leftsidetype
00025E02 <AmiBlitz3.ab3@8197>    MOVE.b (a7)+,funcparloop
00025E06 <AmiBlitz3.ab3@8198>   CMP.w #$2C,D0
00025E0A <AmiBlitz3.ab3@8199>    BNE.w syntaxerr
00025E0C <AmiBlitz3.ab3@8202>   MOVE.w D1,D2
00025E0E <AmiBlitz3.ab3@8203>   LSR.w #8,D2
00025E12 <AmiBlitz3.ab3@8204>   ANDI.w #$7,D2
00025E14 <AmiBlitz3.ab3@8207>    CMP.b D2,D1
00025E18 <AmiBlitz3.ab3@8208>    BCS.w fetchlibps__repsdone
00025E1A <AmiBlitz3.ab3@8209>   SUB.b D2,D1
00025E1E <AmiBlitz3.ab3@8210>   MOVEM.l D2/A2,-(A7)
00025E20 <AmiBlitz3.ab3@8211>   MOVE.w D2,D0
00025E26 <AmiBlitz3.ab3@8212>   MOVE.b funcparloop,-(a7)
00025E2E <AmiBlitz3.ab3@8213>   MOVE.b #0,funcparloop
00025E34 <AmiBlitz3.ab3@8214>   MOVE.l leftsidetype,-(a7)
00025E3A <AmiBlitz3.ab3@8215>   MOVE.l rightsidetype,-(a7)
00025E40 <AmiBlitz3.ab3@8216>   MOVE.w leftsideflagmask,-(a7)
00025E46 <AmiBlitz3.ab3@8217>   MOVE.w rightsideflagmask,-(a7)
00025E4C <AmiBlitz3.ab3@8218>   CLR.l leftsidetype
00025E52 <AmiBlitz3.ab3@8219>   CLR.l rightsidetype
00025E58 <AmiBlitz3.ab3@8220>   CLR.w leftsideflagmask
00025E5E <AmiBlitz3.ab3@8221>   CLR.w rightsideflagmask
00025E64 <AmiBlitz3.ab3@8222>   MOVE.b blitzparloop,-(a7)
00025E6C <AmiBlitz3.ab3@8223>   MOVE.b #1,blitzparloop
00025E70 <AmiBlitz3.ab3@8224>   BSR.w fetchpees4
00025E76 <AmiBlitz3.ab3@8225>   MOVE.b (a7)+,blitzparloop
00025E7C <AmiBlitz3.ab3@8226>   MOVE.w (a7)+,rightsideflagmask
00025E82 <AmiBlitz3.ab3@8227>   MOVE.w (a7)+,leftsideflagmask
00025E88 <AmiBlitz3.ab3@8228>   MOVE.l (a7)+,rightsidetype
00025E8E <AmiBlitz3.ab3@8229>   MOVE.l (a7)+,leftsidetype
00025E94 <AmiBlitz3.ab3@8230>   MOVE.b (a7)+,funcparloop
00025E98 <AmiBlitz3.ab3@8231>   MOVEM.l (A7)+,D2/A2
00025E9E <AmiBlitz3.ab3@8232>   ADDQ.w #1,numreps
00025EA2 <AmiBlitz3.ab3@8233> BRA.w fetchlibps__rloop
00025EA8 <AmiBlitz3.ab3@8236>    MOVE.w numreps,D3
00025EAC <AmiBlitz3.ab3@8237>    BEQ.w syntaxerr
00025EAE <AmiBlitz3.ab3@8238>   ADDA.w D2,A2
00025EB2 <AmiBlitz3.ab3@8239>   ANDI.w #$FF,D1
00025EB6 <AmiBlitz3.ab3@8240>    BEQ.w fetchlibps__done
00025EBA <AmiBlitz3.ab3@8241>   CMP.w #$2C,D0
00025EBE <AmiBlitz3.ab3@8242>    BNE.w syntaxerr
00025EC0 <AmiBlitz3.ab3@8245>    MOVE.w D1,D0
00025EC4 <AmiBlitz3.ab3@8246>    BNE.w fetchpees2b
00025EC6 <AmiBlitz3.ab3@8249> RTS
00025ECC <AmiBlitz3.ab3@8252>   MOVE.b funcparloop,-(a7)
00025ED2 <AmiBlitz3.ab3@8253>   MOVE.l leftsidetype,-(a7)
00025ED8 <AmiBlitz3.ab3@8254>   MOVE.l rightsidetype,-(a7)
00025EDE <AmiBlitz3.ab3@8255>   MOVE.w leftsideflagmask,-(a7)
00025EE4 <AmiBlitz3.ab3@8256>   MOVE.w rightsideflagmask,-(a7)
00025EEA <AmiBlitz3.ab3@8257>   CLR.l leftsidetype
00025EF0 <AmiBlitz3.ab3@8258>   CLR.l rightsidetype
00025EF6 <AmiBlitz3.ab3@8259>   CLR.w leftsideflagmask
00025EFC <AmiBlitz3.ab3@8260>   CLR.w rightsideflagmask
00025F04 <AmiBlitz3.ab3@8261>   MOVE.b #0,funcparloop
00025F0A <AmiBlitz3.ab3@8262>   MOVE.b blitzparloop,-(a7)
00025F12 <AmiBlitz3.ab3@8263>   MOVE.b #1,blitzparloop
00025F16 <AmiBlitz3.ab3@8264>   BSR.w fetchpees2
00025F1C <AmiBlitz3.ab3@8265>   MOVE.b (a7)+,blitzparloop
00025F22 <AmiBlitz3.ab3@8266>   MOVE.w (a7)+,rightsideflagmask
00025F28 <AmiBlitz3.ab3@8267>   MOVE.w (a7)+,leftsideflagmask
00025F2E <AmiBlitz3.ab3@8268>   MOVE.l (a7)+,rightsidetype
00025F34 <AmiBlitz3.ab3@8269>   MOVE.l (a7)+,leftsidetype
00025F3A <AmiBlitz3.ab3@8270>   MOVE.b (a7)+,funcparloop
00025F3C <AmiBlitz3.ab3@8271> RTS
00025F40 <AmiBlitz3.ab3@8275> ptype:    Dc.b $3F,$3C,$00,$00                             ;MOVE.W  #$0000,-(A7)
00025F42 <AmiBlitz3.ab3@8278> partostack:  Ds.w 1                                        ;pmode org source
00025F44 <AmiBlitz3.ab3@8282>   MOVEQ.l #$01,D2
00025F48 <AmiBlitz3.ab3@8283> BRA.w fetchpees3
00025F4A <AmiBlitz3.ab3@8286>   MOVEQ.l #$00,D2
00025F4E <AmiBlitz3.ab3@8289>   ANDI.w #$F,D0
00025F54 <AmiBlitz3.ab3@8297>   CLR.w parnum
00025F56 <AmiBlitz3.ab3@8298>   MOVE.w D1,-(A7)
00025F5A <AmiBlitz3.ab3@8299>   MOVE.w partostack(PC),-(A7)                              ;in case of recursion
00025F60 <AmiBlitz3.ab3@8300>   MOVE.w D2,partostack
00025F62 <AmiBlitz3.ab3@8301>   MOVE.w D0,-(A7)
00025F66 <AmiBlitz3.ab3@8302>   CMP.w #"@@",(a5)                                         ;was l15
00025F6A <AmiBlitz3.ab3@8303>   BNE fetchpees__loop
00025F70 <AmiBlitz3.ab3@8304>   TST.w ininclude                                          ;merge macrolines
00025F74 <AmiBlitz3.ab3@8305>   BNE errorjoin
00025F7A <AmiBlitz3.ab3@8306>        MOVEA.l sourceline,A5
00025F7C <AmiBlitz3.ab3@8309>            MOVEA.l (A5),A5
00025F82 <AmiBlitz3.ab3@8310>            MOVE.l a5,sourceline
00025F86 <AmiBlitz3.ab3@8311>            LEA $9(A5),A5
00025F8C <AmiBlitz3.ab3@8312>            ADDQ.l #1,linenumat
00025F8E <AmiBlitz3.ab3@8316>   MOVE.b (A2)+,D2                                          ;parameterloop   d2=vartype
00025F92 <AmiBlitz3.ab3@8317>    BNE.w fetchpees__skip0
00025F98 <AmiBlitz3.ab3@8318>   MOVE.w userp,D2                                          ;user selected type
00025F9A <AmiBlitz3.ab3@8320>    MOVE.l A2,-(A7)
00025FA0 <AmiBlitz3.ab3@8321>    ADDQ.w #1,parnum
00025FA6 <AmiBlitz3.ab3@8322>    TST.b funccall
00025FAA <AmiBlitz3.ab3@8323>    BEQ fetchpees__skip0_l1
00025FB2 <AmiBlitz3.ab3@8324>    CMP.w #6,parnum
00025FB6 <AmiBlitz3.ab3@8325>    BLE fetchpees__skip0_l1
00025FBA <AmiBlitz3.ab3@8326>    CMP.w #7,d2
00025FC0 <AmiBlitz3.ab3@8332>    TST.b fpu
00025FC4 <AmiBlitz3.ab3@8333>    BEQ fetchpees__skip0_old
00025FCA <AmiBlitz3.ab3@8334>    TST.w regnumfunc
00025FCE <AmiBlitz3.ab3@8335>    BEQ fetchpees__skip0_old
00025FD4 <AmiBlitz3.ab3@8336>    CMP.w #$48e7,-4(a4)
00025FD8 <AmiBlitz3.ab3@8337>    BNE fetchpees__skip0_old
00025FDA <AmiBlitz3.ab3@8338>    MOVEQ #0,d1
00025FE0 <AmiBlitz3.ab3@8339>    MOVE.w regnum,d1
00025FE6 <AmiBlitz3.ab3@8340>    CMP regnumfunc,d1                                       ;fpu reg function save
00025FEA <AmiBlitz3.ab3@8341>    BGE fetchpees__skip0_old
00025FEC <AmiBlitz3.ab3@8342>    ASL.w #7,d1
00025FEE <AmiBlitz3.ab3@8343>    MOVE.l d0,-(a7)
00025FF4 <AmiBlitz3.ab3@8344>    MOVE.w regnumfunc,d0
00025FFA <AmiBlitz3.ab3@8345>    CLR.w regmask
00026000 <AmiBlitz3.ab3@8347>    BSET d0,regmask
00026002 <AmiBlitz3.ab3@8348>    SUBQ #1,d0
00026006 <AmiBlitz3.ab3@8349>    BNE fetchpees__skip0_loop
00026008 <AmiBlitz3.ab3@8350>     MOVEQ #0,d0
0002600E <AmiBlitz3.ab3@8353>       BTST d0,regmask
00026012 <AmiBlitz3.ab3@8354>       BEQ fetchpees__skip0_noa7
00026014 <AmiBlitz3.ab3@8355>       MOVEQ #0,d1
00026016 <AmiBlitz3.ab3@8356>       MOVE.w d0,d1
00026018 <AmiBlitz3.ab3@8357>       SUBQ.w #1,d1
0002601A <AmiBlitz3.ab3@8358>       ASL #7,d1
00026020 <AmiBlitz3.ab3@8359>       OR.l #$f2277400,d1                                   ;fmove.d
00026024 <AmiBlitz3.ab3@8361>       BSR writelong
0002602A <AmiBlitz3.ab3@8363>       ADDQ.l #2,stacktrack
00026030 <AmiBlitz3.ab3@8364>       MOVE.l stacktrack,d1
00026036 <AmiBlitz3.ab3@8365>       CMP.l #180,d1
0002603A <AmiBlitz3.ab3@8366>       BGT conmemerr                                        ;formel too complex
0002603C <AmiBlitz3.ab3@8367>       MOVE.l a0,-(a7)
00026042 <AmiBlitz3.ab3@8368>       LEA fpustackbase,a0
0002604A <AmiBlitz3.ab3@8369>       MOVE.w regmask,0(a0,d1)
0002604C <AmiBlitz3.ab3@8370>       MOVE.l (a7)+,a0
0002604E <AmiBlitz3.ab3@8373>       ADDQ.w #1,d0
00026054 <AmiBlitz3.ab3@8374>       CMP.w regnumfunc,d0
00026058 <AmiBlitz3.ab3@8375>       BLE fetchpees__skip0_loop2
0002605A <AmiBlitz3.ab3@8378>       MOVE.l (a7)+,d0
00026060 <AmiBlitz3.ab3@8381>      MOVE.l currentfunccall,-(a7)
00026066 <AmiBlitz3.ab3@8382>      MOVE.w parnum,-(a7)
0002606C <AmiBlitz3.ab3@8383>      TST.l rightsidetype
00026070 <AmiBlitz3.ab3@8384>      BSR.w JL_0_6836
00026076 <AmiBlitz3.ab3@8385>      MOVE.w (a7)+,parnum
0002607C <AmiBlitz3.ab3@8387>    MOVE.l (a7)+,currentfunccall
00026082 <AmiBlitz3.ab3@8389>    TST.b typecheck                            ;typecheck for function call
00026086 <AmiBlitz3.ab3@8390>    BEQ 'notypecheck
0002608C <AmiBlitz3.ab3@8391>    TST.b notypecheck
00026090 <AmiBlitz3.ab3@8392>    BNE 'notypecheck
00026096 <AmiBlitz3.ab3@8393>    TST.b blitzparloop
0002609A <AmiBlitz3.ab3@8394>    BNE 'isblitzlibcall                                    ;no typecheck for blitzlibs currently
000260A4 <AmiBlitz3.ab3@8395>    CMP.l #0,currentfunccall
000260A8 <AmiBlitz3.ab3@8396>    BEQ 'isblitzlibcall
000260AC <AmiBlitz3.ab3@8397>    MOVEM.l a0/a1,-(a7)
000260B2 <AmiBlitz3.ab3@8398>    MOVE.l currentfunccall,a0
000260B8 <AmiBlitz3.ab3@8399>    MOVE.w parnum,d1
000260BE <AmiBlitz3.ab3@8400>    TST.b isconstantvalue
000260C2 <AmiBlitz3.ab3@8401>    BEQ 'noconstant
000260CC <AmiBlitz3.ab3@8402>    CMP.l #0,lastconstantvalue
000260D0 <AmiBlitz3.ab3@8403>    BEQ 'isnull
000260D4 <AmiBlitz3.ab3@8405>    MOVE.l funcstruct_parametertype-4(a0,d1*4),a0
000260DA <AmiBlitz3.ab3@8406>    CMP.l #0,a0
000260DE <AmiBlitz3.ab3@8407>    BEQ 'notype
000260E6 <AmiBlitz3.ab3@8408>    CMP.l #$100,4(a0)
000260EA <AmiBlitz3.ab3@8409>    BLE 'notype
000260F0 <AmiBlitz3.ab3@8410>    MOVE.l lasttoken,d1
000260F4 <AmiBlitz3.ab3@8411>    CMP.w #NullTokenID,d1                   ;$b581 ok, when token for null
000260F8 <AmiBlitz3.ab3@8412>    BEQ 'isnull
000260FE <AmiBlitz3.ab3@8413>    TST.l typetocast
00026102 <AmiBlitz3.ab3@8414>    BEQ 'nocast
00026108 <AmiBlitz3.ab3@8415>    MOVE.l typetocast,a1
0002610C <AmiBlitz3.ab3@8416>    BRA 'typecheck
00026112 <AmiBlitz3.ab3@8418>    MOVE.l rightsidetype,a1
00026118 <AmiBlitz3.ab3@8419>    CMP.l #0,a1
0002611C <AmiBlitz3.ab3@8420>    BEQ 'notype
00026124 <AmiBlitz3.ab3@8421> 'typecheck   CMP.l #$100,4(a1)
00026126 <AmiBlitz3.ab3@8423>    CMP.l a0,a1
0002612A <AmiBlitz3.ab3@8424>    BEQ 'ok
00026132 <AmiBlitz3.ab3@8426>    CMP.l #$100,4(a1)                 ; is a type here
00026136 <AmiBlitz3.ab3@8427>    BLE 'error
0002613A <AmiBlitz3.ab3@8428>    MOVE.l 4(a1),a1                   ; load the address of type.
0002613E <AmiBlitz3.ab3@8429>    CMP.l $a(a1),a0                   ; check if the bigger type contain in first place same type as the function need
00026142 <AmiBlitz3.ab3@8430>    BEQ 'ok
00026148 <AmiBlitz3.ab3@8431> 'error: JMP   error_convert_types    ; for syntax 4
0002614E <AmiBlitz3.ab3@8435>    CLR.l typetocast
00026152 <AmiBlitz3.ab3@8436>    MOVEM.l (a7)+,a0/a1
00026158 <AmiBlitz3.ab3@8440>    CLR.l lastfunction
0002615E <AmiBlitz3.ab3@8441>    TST.b fpu
00026162 <AmiBlitz3.ab3@8442>    BEQ fetchpees__skip0_noprint
00026164 <AmiBlitz3.ab3@8443>   MOVE.l (a7),a2
00026166 <AmiBlitz3.ab3@8444>   ADDQ.l #1,a2
0002616A <AmiBlitz3.ab3@8445>    CMP.b #5,d2
0002616E <AmiBlitz3.ab3@8446>   BNE fetchpees__skip0_noprint
00026174 <AmiBlitz3.ab3@8447>   CMP.b #$5d,24(a2)
00026178 <AmiBlitz3.ab3@8448>   BNE fetchpees__skip0_noprint
0002617E <AmiBlitz3.ab3@8449>   CMP.b #$81,25(a2)
00026182 <AmiBlitz3.ab3@8450>   BLT fetchpees__skip0_noprint
00026188 <AmiBlitz3.ab3@8451>   CMP.b #$86,25(a2)
0002618C <AmiBlitz3.ab3@8452>   BEQ fetchpees__skip0_ok
00026192 <AmiBlitz3.ab3@8453>   CMP.b #$87,25(a2)
00026196 <AmiBlitz3.ab3@8454>   BEQ fetchpees__skip0_ok
0002619C <AmiBlitz3.ab3@8455>   CMP.b #$88,25(a2)
000261A0 <AmiBlitz3.ab3@8456>   BEQ fetchpees__skip0_ok
000261A6 <AmiBlitz3.ab3@8457>   CMP.b #$83,25(a2)
000261AA <AmiBlitz3.ab3@8458>   BGT fetchpees__skip0_noprint
000261B0 <AmiBlitz3.ab3@8461>   MOVE.l destpointer,a4
000261B6 <AmiBlitz3.ab3@8462>   CMP.w #$2f00,-2(a4)
000261BA <AmiBlitz3.ab3@8463>   BNE fetchpees__skip0_noprint
000261C0 <AmiBlitz3.ab3@8464>   SUBQ.l #2,destpointer
000261C6 <AmiBlitz3.ab3@8466>   MOVE.l #$f2277400,d1
000261CA <AmiBlitz3.ab3@8467>   BSR writelong                                            ;fmove.d fp0,-(a7)
000261D0 <AmiBlitz3.ab3@8468>   ADDQ #4,a2offset
000261D6 <AmiBlitz3.ab3@8486>   CLR.b optistring
000261D8 <AmiBlitz3.ab3@8487>   MOVEA.l (A7)+,A2
000261DC <AmiBlitz3.ab3@8488>    CMP.w #"@",d0
000261E0 <AmiBlitz3.ab3@8489>   BNE fetchpees__skip0_l10
000261E4 <AmiBlitz3.ab3@8490>    CMP.b #"@",(a5)
000261E8 <AmiBlitz3.ab3@8491>   BNE fetchpees__skip0_l10
000261EE <AmiBlitz3.ab3@8492>   TST.w ininclude
000261F2 <AmiBlitz3.ab3@8493>   BNE errorjoin
000261F8 <AmiBlitz3.ab3@8494>   MOVEA.l sourceline,A5
000261FA <AmiBlitz3.ab3@8495>            MOVEA.l (A5),A5
00026200 <AmiBlitz3.ab3@8496>            MOVE.l a5,sourceline
00026206 <AmiBlitz3.ab3@8497>            ADDQ.l #1,linenumat
0002620A <AmiBlitz3.ab3@8498>            LEA $9(A5),A5
0002620C <AmiBlitz3.ab3@8499>            MOVEQ #0,d0
00026210 <AmiBlitz3.ab3@8500>            BSR get1bytemain
00026214 <AmiBlitz3.ab3@8503>    CMP.b #32,(a5)+ ;for space after a ,
00026218 <AmiBlitz3.ab3@8504>    BEQ fetchpees__skip0_l10:
0002621A <AmiBlitz3.ab3@8505>    SUBQ.l #1,a5
0002621E <AmiBlitz3.ab3@8507>    CMP.w #"@@",(a5)                                        ;if merge
00026222 <AmiBlitz3.ab3@8508>    BNE fetchpees__skip0_l15
00026226 <AmiBlitz3.ab3@8509>    MOVEM.l d0-d7/a0-a4/a6,-(a7)
0002622C <AmiBlitz3.ab3@8510>    JSR mergeline
00026230 <AmiBlitz3.ab3@8511>    MOVEM.l (a7)+,d0-d7/a0-a4/a6
00026232 <AmiBlitz3.ab3@8531>       SUBQ.w #1,(A7)
00026236 <AmiBlitz3.ab3@8532>    BEQ.w fetchpees__done
0002623A <AmiBlitz3.ab3@8534>     CMP.w #$2C,D0
0002623E <AmiBlitz3.ab3@8536>    BNE overloadfunc
00026242 <AmiBlitz3.ab3@8537> BRA.w fetchpees__loop
00026244 <AmiBlitz3.ab3@8540>   ADDQ.w #2,A7
0002624A <AmiBlitz3.ab3@8541>   MOVE.w (A7)+,partostack
0002624C <AmiBlitz3.ab3@8542>   MOVE.w (A7)+,D1
00026252 <AmiBlitz3.ab3@8543>   CLR.b isconstantvalue
0002625C <AmiBlitz3.ab3@8544>   MOVE.l currentfunccall,lastfunction
00026262 <AmiBlitz3.ab3@8545>   CLR.b funccall
00026268 <AmiBlitz3.ab3@8546>   CLR.l currentfunccall
0002626A <AmiBlitz3.ab3@8547> RTS
00026270 <AmiBlitz3.ab3@8551>   CLR.b funccall
00026276 <AmiBlitz3.ab3@8552>   MOVE.w regnum,d1
0002627C <AmiBlitz3.ab3@8553>   MOVE.l currentfunccall,a4
00026280 <AmiBlitz3.ab3@8554>   CMP.b $20(a4),d1                                         ;increase if more pars
00026284 <AmiBlitz3.ab3@8555>   BLT notparerr
00026286 <AmiBlitz3.ab3@8558>   MOVE.b (a2)+,d2
0002628E <AmiBlitz3.ab3@8559>   ADD.w #1,parnum
00026294 <AmiBlitz3.ab3@8560>   TST.b fpu
00026298 <AmiBlitz3.ab3@8561>   BEQ 'nofpu
0002629C <AmiBlitz3.ab3@8562>   CMP.b #5,d2
000262A0 <AmiBlitz3.ab3@8563>   BNE 'nofpu
000262A2 <AmiBlitz3.ab3@8564>   MOVEQ #0,d1
000262A8 <AmiBlitz3.ab3@8565>   MOVE.w regnum,d1
000262B0 <AmiBlitz3.ab3@8566>   CMP.w #6,regnum
000262B4 <AmiBlitz3.ab3@8567>   BLT 'nostack2
000262B8 <AmiBlitz3.ab3@8572>   MOVE.w #$2c3c,d1
000262BC <AmiBlitz3.ab3@8573>   BSR writeword
000262C2 <AmiBlitz3.ab3@8574>   MOVE.l #$bf800000,d1
000262C6 <AmiBlitz3.ab3@8575>   BSR writelong
000262CA <AmiBlitz3.ab3@8576>   MOVE.w #$c4ff,d1                                         ;savetemp+regnum
000262D0 <AmiBlitz3.ab3@8577>   ADD.w parnum,d1
000262D6 <AmiBlitz3.ab3@8578>   JSR Atokejsr
000262DC <AmiBlitz3.ab3@8579>   TST.w dontwrite
000262E0 <AmiBlitz3.ab3@8580>   BNE 'l1
000262E6 <AmiBlitz3.ab3@8581>   MOVE.l data1start,d1
000262EC <AmiBlitz3.ab3@8582>   MOVE.l destpointer,a4
000262F0 <AmiBlitz3.ab3@8583>   ADD.l d1,-4(a4)
000262F6 <AmiBlitz3.ab3@8584>   MOVE.l destpointer,d1
000262F8 <AmiBlitz3.ab3@8585>   SUBQ.l #4,d1
000262FE <AmiBlitz3.ab3@8586>   SUB.l destbufferstart,d1
00026300 <AmiBlitz3.ab3@8587>   MOVE.l d2,-(a7)
00026302 <AmiBlitz3.ab3@8588>   MOVE.l d1,d2
00026308 <AmiBlitz3.ab3@8589>   JSR addhunkoffset
0002630A <AmiBlitz3.ab3@8590>   MOVE.l (a7)+,d2
0002630E <AmiBlitz3.ab3@8591> BRA 'l1
00026310 <AmiBlitz3.ab3@8594>   ASL.l #7,d1
00026316 <AmiBlitz3.ab3@8595>   OR.l #$F23C5000,d1                                       ;fmove.w #-1,fpx
0002631A <AmiBlitz3.ab3@8596>   BSR writelong
0002631C <AmiBlitz3.ab3@8597>   MOVEQ #-1,d1                                             ;-1
00026320 <AmiBlitz3.ab3@8598>   BSR writeword
00026324 <AmiBlitz3.ab3@8599> BRA 'l1
0002632A <AmiBlitz3.ab3@8602>   MOVE.w regnum,d1
00026332 <AmiBlitz3.ab3@8603>   CMP.w #6,regnum
00026336 <AmiBlitz3.ab3@8604>   BLT 'nostack
0002633A <AmiBlitz3.ab3@8609>   CMP.b #2,d2
0002633E <AmiBlitz3.ab3@8610>   BGT 'nw
00026342 <AmiBlitz3.ab3@8611> BRA 'nos
00026346 <AmiBlitz3.ab3@8620>   CMP.w #7,d2
0002634A <AmiBlitz3.ab3@8621>   BNE 'nos
00026350 <AmiBlitz3.ab3@8622>   ADDQ #4,a2offset
00026356 <AmiBlitz3.ab3@8624>     MOVE.l #$48780000,d1
0002635A <AmiBlitz3.ab3@8625>     BSR writelong
00026360 <AmiBlitz3.ab3@8626>     ADDQ.w #4,a2offset
00026364 <AmiBlitz3.ab3@8627>     MOVE.w #$2f3c,d1
00026368 <AmiBlitz3.ab3@8628>     BSR writeword
0002636E <AmiBlitz3.ab3@8629>     MOVE.l #-1,d1
00026372 <AmiBlitz3.ab3@8630>     BSR writelong
00026376 <AmiBlitz3.ab3@8631>   BRA 'l1
0002637A <AmiBlitz3.ab3@8635>   CMP.b #4,d2
0002637E <AmiBlitz3.ab3@8636>       BNE 'noq
00026382 <AmiBlitz3.ab3@8637>       MOVE.w #$2c3c,d1
00026386 <AmiBlitz3.ab3@8638>       BSR writeword
0002638C <AmiBlitz3.ab3@8639>       MOVE.l #$ffff0000,d1
00026390 <AmiBlitz3.ab3@8640>       BSR writelong
00026394 <AmiBlitz3.ab3@8641> BRA 'noq2
00026398 <AmiBlitz3.ab3@8644>      CMP.b #5,d2
0002639C <AmiBlitz3.ab3@8645>      BNE 'nof
000263A0 <AmiBlitz3.ab3@8646>       MOVE.w #$2c3c,d1
000263A4 <AmiBlitz3.ab3@8647>       BSR writeword
000263AA <AmiBlitz3.ab3@8648>       MOVE.l #$800000c1,d1
000263AE <AmiBlitz3.ab3@8649>       BSR writelong
000263B2 <AmiBlitz3.ab3@8650> BRA 'noq2
000263B6 <AmiBlitz3.ab3@8653>   MOVE.w #$7cff,d1
000263BA <AmiBlitz3.ab3@8654>   BSR writeword
000263BE <AmiBlitz3.ab3@8657>   MOVE.w #$c4ff,d1                                         ;savetemp+regnum
000263C4 <AmiBlitz3.ab3@8658>   ADD.w parnum,d1
000263CA <AmiBlitz3.ab3@8659>   JSR Atokejsr
000263D0 <AmiBlitz3.ab3@8660>    TST.w dontwrite
000263D4 <AmiBlitz3.ab3@8661>    BNE 'l1
000263DA <AmiBlitz3.ab3@8662>    MOVE.l data1start,d1
000263E0 <AmiBlitz3.ab3@8663>    MOVE.l destpointer,a4
000263E4 <AmiBlitz3.ab3@8664>    ADD.l d1,-4(a4)
000263EA <AmiBlitz3.ab3@8665>    MOVE.l destpointer,d1
000263EC <AmiBlitz3.ab3@8666>    SUBQ.l #4,d1
000263F2 <AmiBlitz3.ab3@8667>    SUB.l destbufferstart,d1
000263F4 <AmiBlitz3.ab3@8668>    MOVE.l d2,-(a7)
000263F6 <AmiBlitz3.ab3@8669>    MOVE.l d1,d2
000263FC <AmiBlitz3.ab3@8670>    JSR addhunkoffset
000263FE <AmiBlitz3.ab3@8671>    MOVE.l (a7)+,d2
00026402 <AmiBlitz3.ab3@8672> BRA 'l1
00026404 <AmiBlitz3.ab3@8675>   ASL.l #8,d1
00026406 <AmiBlitz3.ab3@8676>   ASL.l #1,d1
0002640C <AmiBlitz3.ab3@8677>   OR.l #$203c,d1                                           ;-1
00026410 <AmiBlitz3.ab3@8678>   BSR writeword
00026416 <AmiBlitz3.ab3@8679>   MOVE.l #-1,d1
0002641A <AmiBlitz3.ab3@8680>   CMP.b #4,d2
0002641E <AmiBlitz3.ab3@8681>   BNE 'nq1
00026424 <AmiBlitz3.ab3@8682>   MOVE.l #$ffff0000,d1
00026428 <AmiBlitz3.ab3@8685>   CMP.b #5,d2
0002642C <AmiBlitz3.ab3@8686>   BNE 'nof2
00026432 <AmiBlitz3.ab3@8687>   TST.b fpu
00026436 <AmiBlitz3.ab3@8688>   BNE 'nof2
0002643C <AmiBlitz3.ab3@8689>   MOVE.l #$800000c1,d1
00026440 <AmiBlitz3.ab3@8692>    BSR writelong
00026444 <AmiBlitz3.ab3@8693>    CMP.b #7,d2
00026448 <AmiBlitz3.ab3@8694>    BNE 'l1
0002644E <AmiBlitz3.ab3@8696>      MOVE.l #$48780000,d1
00026452 <AmiBlitz3.ab3@8697>      BSR writelong
00026458 <AmiBlitz3.ab3@8699>    ADDQ.w #4,a2offset                                      ; bug fix for string parameters
0002645E <AmiBlitz3.ab3@8700>    MOVE.l #$594f,d1                                        ; subq #4,a7
00026462 <AmiBlitz3.ab3@8701>    BSR writeword
00026464 <AmiBlitz3.ab3@8704>    SUBQ.w #1,(A7)
00026468 <AmiBlitz3.ab3@8705>    BEQ.w fetchpees__done
0002646E <AmiBlitz3.ab3@8706>    ADDQ.w #1,regnum
00026472 <AmiBlitz3.ab3@8707> BRA 'ol2
00026474 <AmiBlitz3.ab3@8710>    MOVE.w D2,D1
00026478 <AmiBlitz3.ab3@8711>    ANDI.w #$40,D1
0002647E <AmiBlitz3.ab3@8712>    MOVE.b D1,partostack
00026480 <AmiBlitz3.ab3@8713>    TST.b D2
00026484 <AmiBlitz3.ab3@8714>     BMI.w handlevara
00026488 <AmiBlitz3.ab3@8715>    BTST #$5,D2
0002648C <AmiBlitz3.ab3@8716>     BNE.w handlearr
00026492 <AmiBlitz3.ab3@8717>     MOVE.w regnumstore,-(a7)
00026498 <AmiBlitz3.ab3@8718>     MOVE.w tempregnum,-(a7)
0002649E <AmiBlitz3.ab3@8719>     MOVE.w parnum,-(a7)
000264A2 <AmiBlitz3.ab3@8720>     BSR.w getap                                        ;recursive entry
000264A8 <AmiBlitz3.ab3@8721>     MOVE.w (a7)+,parnum
000264AE <AmiBlitz3.ab3@8722>     MOVE.w (a7)+,tempregnum
000264B4 <AmiBlitz3.ab3@8723>     MOVE.w (a7)+,regnumstore
000264B8 <AmiBlitz3.ab3@8726>     MOVE.w partostack(PC),D1
000264BC <AmiBlitz3.ab3@8727>     BEQ.w JL_0_6886
000264C2 <AmiBlitz3.ab3@8730>    ADDQ.w #4,a2offset
000264C8 <AmiBlitz3.ab3@8733>    MOVE.w pushdn,D1
000264CE <AmiBlitz3.ab3@8734>    OR.w regnum,D1
000264D2 <AmiBlitz3.ab3@8735>    CMP.w #$3,D2
000264D6 <AmiBlitz3.ab3@8736>     BCC.w JL_0_6880
000264DC <AmiBlitz3.ab3@8737>    SUBQ.w #2,a2offset
000264E0 <AmiBlitz3.ab3@8738>    ORI.w #$1000,D1
000264E4 <AmiBlitz3.ab3@8739>    BSR.w writeword
000264E6 <AmiBlitz3.ab3@8740> RTS
000264EA <AmiBlitz3.ab3@8743>   CMP.b #7,d2
000264EE <AmiBlitz3.ab3@8744>    BNE 'l10
000264F6 <AmiBlitz3.ab3@8745>    CMP.b #2,optistring
000264FC <AmiBlitz3.ab3@8749>   TST.b iee
00026500 <AmiBlitz3.ab3@8750>   BEQ 'old
00026504 <AmiBlitz3.ab3@8751>   CMP.b #5,d2
00026508 <AmiBlitz3.ab3@8752>   BNE 'old
0002650C <AmiBlitz3.ab3@8755>   BSR.w writeword                                          ;write val to stack
0002650E <AmiBlitz3.ab3@8756> RTS
00026514 <AmiBlitz3.ab3@8759>   SUBQ.w #4,a2offset
00026516 <AmiBlitz3.ab3@8760> RTS
0002651C <AmiBlitz3.ab3@8763>   ADDQ.w #1,regnum
0002651E <AmiBlitz3.ab3@8764> RTS
00026520 <AmiBlitz3.ab3@8768>   MOVEQ.l #$03,D2
00026524 <AmiBlitz3.ab3@8769> BRA.w JL_0_6854
00026528 <AmiBlitz3.ab3@8773>   ANDI.w #$7,D2
0002652A <AmiBlitz3.ab3@8774>   MOVE.w D2,-(A7)
0002652E <AmiBlitz3.ab3@8775>    BSR.w JL_0_A916
00026532 <AmiBlitz3.ab3@8776>   CMP.b #$7,D2                                             ;ignore pnt to $
00026536 <AmiBlitz3.ab3@8777>    BEQ.w JL_0_68C0
0002653A <AmiBlitz3.ab3@8778>   BTST #$E,D2
0002653E <AmiBlitz3.ab3@8779>    BEQ.w JL_0_68B6
00026542 <AmiBlitz3.ab3@8780>   MOVE.b #$3,D2                                            ;pointer to long
00026546 <AmiBlitz3.ab3@8781> BRA.w JL_0_68C0
00026548 <AmiBlitz3.ab3@8784>    TST.b D2
0002654C <AmiBlitz3.ab3@8785>    BNE.w JL_0_68C0
00026550 <AmiBlitz3.ab3@8786>   MOVE.b #$3,D2
00026552 <AmiBlitz3.ab3@8789>   MOVE.w (A7)+,D3
00026554 <AmiBlitz3.ab3@8790>   TST.b D3
00026558 <AmiBlitz3.ab3@8791>    BEQ.w JL_0_68D2
0002655A <AmiBlitz3.ab3@8792>   CMP.b D2,D3
0002655E <AmiBlitz3.ab3@8793>    BEQ.w putalp
00026562 <AmiBlitz3.ab3@8794> BRA.w mismatcherr
00026568 <AmiBlitz3.ab3@8797>   ADDQ.w #2,a2offset
0002656C <AmiBlitz3.ab3@8798>   MOVE.w ptype(PC),D1
00026570 <AmiBlitz3.ab3@8799>    BSR.w writeword
00026572 <AmiBlitz3.ab3@8800>   MOVEQ.l #$00,D1
00026574 <AmiBlitz3.ab3@8801>   MOVE.b D2,D1
00026578 <AmiBlitz3.ab3@8802>    BSR.w writeword
0002657C <AmiBlitz3.ab3@8803> BRA.w putalp
0002657E <AmiBlitz3.ab3@8806>    MOVE.w D2,-(A7)
00026582 <AmiBlitz3.ab3@8807>    BSR.w JL_0_694E
00026588 <AmiBlitz3.ab3@8808>   BTST #$4,$1(A7)
0002658C <AmiBlitz3.ab3@8809>    BEQ.w JL_0_6900
00026590 <AmiBlitz3.ab3@8810>    BSR.w JL_0_699A
00026596 <AmiBlitz3.ab3@8813>    BTST #$3,$1(A7)
0002659A <AmiBlitz3.ab3@8814>    BEQ.w JL_0_690E
0002659E <AmiBlitz3.ab3@8815>    BSR.w sendtype
000265A0 <AmiBlitz3.ab3@8818>    MOVE.w (A7)+,D2
000265A4 <AmiBlitz3.ab3@8819> BRA.w get1bytemain
000265AA <AmiBlitz3.ab3@8822>   MOVE.w regnum,D1
000265AC <AmiBlitz3.ab3@8823>   LSL.w #8,D1
000265AE <AmiBlitz3.ab3@8824>   LSL.w #1,D1
000265B2 <AmiBlitz3.ab3@8825>   ORI.w #$7000,D1
000265B8 <AmiBlitz3.ab3@8826>   BTST #$0,$7(A3)
000265BC <AmiBlitz3.ab3@8827>    BNE.w JL_0_6946                                         ;A Pointer
000265C4 <AmiBlitz3.ab3@8828>   CMPI.l #$100,$4(A2)
000265C8 <AmiBlitz3.ab3@8829>    BCC.w arrerr1                                           ;illegal type to send
000265CC <AmiBlitz3.ab3@8830>   MOVE.b $7(A2),D1
000265D0 <AmiBlitz3.ab3@8833>   BSR.w writeword                                          ;moveq #type,d regat
000265D2 <AmiBlitz3.ab3@8834>   MOVEQ.l #$02,D2                                          ;just a word.
000265D6 <AmiBlitz3.ab3@8835> BRA.w JL_0_685C
000265DA <AmiBlitz3.ab3@8838>   MOVE.b #$3,D1
000265DE <AmiBlitz3.ab3@8839> BRA.w JL_0_693C
000265E2 <AmiBlitz3.ab3@8843>    BSR.w get1bytemain                                      ;write array paramter code
000265E6 <AmiBlitz3.ab3@8844>    BSR.w getparameter
000265EE <AmiBlitz3.ab3@8845>   BTST #$1,flagmask+1
000265F2 <AmiBlitz3.ab3@8846>    BEQ.w syntaxerr
000265F6 <AmiBlitz3.ab3@8847>    BSR.w JL_0_8E3C
000265FA <AmiBlitz3.ab3@8848>    BSR.w get1bytemain
000265FE <AmiBlitz3.ab3@8849>   CMP.w #$29,D0                                            ;we just want a() or whatever
00026602 <AmiBlitz3.ab3@8850>    BNE.w syntaxerr
00026608 <AmiBlitz3.ab3@8851>   MOVE.w notshared,D1
0002660C <AmiBlitz3.ab3@8852>    BNE.w noarrayerr
00026612 <AmiBlitz3.ab3@8853>   MOVE.w regnum,D1
00026614 <AmiBlitz3.ab3@8854>   LSL.w #8,D1
00026616 <AmiBlitz3.ab3@8855>   LSL.w #1,D1
0002661A <AmiBlitz3.ab3@8856>   OR.w fbase(PC),D1
00026620 <AmiBlitz3.ab3@8857>    TST.b varmode
00026624 <AmiBlitz3.ab3@8858>    BEQ 'l1
00026628 <AmiBlitz3.ab3@8859>    BCLR #0,d1
0002662C <AmiBlitz3.ab3@8862>    BSR.w writeword
00026630 <AmiBlitz3.ab3@8863>   MOVE.w $4(A3),D1
00026634 <AmiBlitz3.ab3@8864>    BSR.w writeword
00026638 <AmiBlitz3.ab3@8865> BRA.w putalp
0002663E <AmiBlitz3.ab3@8869>   MOVE.w regnum,D1
00026640 <AmiBlitz3.ab3@8870>   LSL.w #8,D1
00026642 <AmiBlitz3.ab3@8871>   LSL.w #1,D1
00026646 <AmiBlitz3.ab3@8872>   OR.w fbase(PC),D1
0002664C <AmiBlitz3.ab3@8873>    TST.b varmode
00026650 <AmiBlitz3.ab3@8874>    BEQ 'l1
00026654 <AmiBlitz3.ab3@8875>    BCLR #0,d1
00026658 <AmiBlitz3.ab3@8878>    BSR.w writeword
0002665C <AmiBlitz3.ab3@8879>   MOVE.w $8(A3),D1
0002665E <AmiBlitz3.ab3@8880>   LSL.w #2,D1
00026664 <AmiBlitz3.ab3@8881>   MOVE.w varmode,D2
00026668 <AmiBlitz3.ab3@8882>    BEQ.w JL_0_69BE
0002666A <AmiBlitz3.ab3@8883>   NEG.w D1
0002666E <AmiBlitz3.ab3@8886>    ADD.w $4(A3),D1
00026672 <AmiBlitz3.ab3@8887>    BSR.w writeword
00026678 <AmiBlitz3.ab3@8888>   MOVE.w regnum,D1
0002667A <AmiBlitz3.ab3@8889>   LSL.w #8,D1
0002667C <AmiBlitz3.ab3@8890>   LSL.w #1,D1
00026680 <AmiBlitz3.ab3@8891>   MOVE.w partostack(PC),D2
00026684 <AmiBlitz3.ab3@8892>    BNE.w JL_0_69F4
0002668C <AmiBlitz3.ab3@8893>   CMPI.w #$7,regnum
00026690 <AmiBlitz3.ab3@8894>    BCC.w JL_0_69F4
00026694 <AmiBlitz3.ab3@8895>   OR.w pushlast(PC),D1
0002669A <AmiBlitz3.ab3@8896>   MOVE.w regnum,D2
0002669C <AmiBlitz3.ab3@8897>   SUBQ.w #1,D2
0002669E <AmiBlitz3.ab3@8898>   OR.w D2,D1
000266A2 <AmiBlitz3.ab3@8899> BRA.w JL_0_69F8
000266A6 <AmiBlitz3.ab3@8902>   OR.w pushadd(PC),D1
000266AA <AmiBlitz3.ab3@8905>   BSR.w writeword
000266B2 <AmiBlitz3.ab3@8906>   MOVE.b #$1,partostack
000266B6 <AmiBlitz3.ab3@8907> BRA.w putalp
000266BA <AmiBlitz3.ab3@8911> fbase:       Dc.b $20,$2D,$00,$00                           ;MOVE.L  $0000(A5),D0
000266BC <AmiBlitz3.ab3@8912> pushadd:     Dc.b $D0,$97                                   ;ADD.L (A7),D0
000266BE <AmiBlitz3.ab3@8913> pushlast:    Dc.b $D0,$80                                   ;ADD.L D0,D0
000266C2 <AmiBlitz3.ab3@8918>   ANDI.w #$7,D2                                            ;0-7 (unknown to string)
000266C6 <AmiBlitz3.ab3@8919>    BEQ.w evalu2
000266CA <AmiBlitz3.ab3@8920> BRA.w eval
000266D0 <AmiBlitz3.ab3@8924>   MOVEA.l libpointer,A1
000266D4 <AmiBlitz3.ab3@8927>    CMPA.w #$0,A1
000266D8 <AmiBlitz3.ab3@8928>    BEQ.w resetlibs__done
000266DE <AmiBlitz3.ab3@8929>   MOVE.w #-1,$A(A1)
000266E4 <AmiBlitz3.ab3@8930>   BCLR #$7,$C(A1)
000266E6 <AmiBlitz3.ab3@8931>   MOVEA.l (A1),A1
000266EA <AmiBlitz3.ab3@8932> BRA.w resetlibs__loop
000266EC <AmiBlitz3.ab3@8935> RTS
000266F0 <AmiBlitz3.ab3@8939>   MOVE.w #$FFFE,D1
000266F4 <AmiBlitz3.ab3@8942>    BSR.w JL_0_6F38
000266FA <AmiBlitz3.ab3@8945>   TST.w cfetchmode
000266FE <AmiBlitz3.ab3@8946>    BEQ.w uselib3__noconst
00026704 <AmiBlitz3.ab3@8947>   BTST #$6,$C(A1)
00026708 <AmiBlitz3.ab3@8948>    BNE.w uselib3__constok
0002670C <AmiBlitz3.ab3@8949> BRA.w badconerr                                            ;Can't use this Library!
0002670E <AmiBlitz3.ab3@8952> RTS
00026714 <AmiBlitz3.ab3@8955>    BSET #$7,$C(A1)
00026718 <AmiBlitz3.ab3@8956>    BNE.w JL_0_6C74                                         ;already done....
0002671E <AmiBlitz3.ab3@8957>    CMPI.w #-1,$A(A1)
00026722 <AmiBlitz3.ab3@8958>    BNE.w JL_0_6C74                                         ;something already here
00026728 <AmiBlitz3.ab3@8962>    TST.w dirmode
0002672C <AmiBlitz3.ab3@8963>    BEQ.b JL_0_6A86
00026732 <AmiBlitz3.ab3@8964>    TST.b exdebug
00026736 <AmiBlitz3.ab3@8965>    BEQ 'l1
0002673A <AmiBlitz3.ab3@8966> BRA.b JL_0_6A86
00026740 <AmiBlitz3.ab3@8969>   BCLR #$7,$C(A1)
00026744 <AmiBlitz3.ab3@8970> BRA.w dirliberr
0002674A <AmiBlitz3.ab3@8973>   MOVE.b debugmode,-(a7)
0002674E <AmiBlitz3.ab3@8974>   MOVEM.l D1/A0/A2,-(A7)
00026756 <AmiBlitz3.ab3@8980>   BTST #$7,use_debugger
0002675A <AmiBlitz3.ab3@8981>   BNE 'debugon
0002675C <AmiBlitz3.ab3@8982>   CLR.w D1
00026760 <AmiBlitz3.ab3@8983> BRA.b 'debugoff
00026762 <AmiBlitz3.ab3@8986>   SNE D1
00026768 <AmiBlitz3.ab3@8989>   MOVE.b d1,debugmode
0002676A <AmiBlitz3.ab3@8993>   MOVEA.l A1,A0
0002676E <AmiBlitz3.ab3@8994>   ADDA.l $12(A1),A0
00026772 <AmiBlitz3.ab3@8995>   TST.w -$2(A0)
00026776 <AmiBlitz3.ab3@8996>    BEQ.w JL_0_6AD2
0002677A <AmiBlitz3.ab3@8997>   MOVEM.l A0-A1,-(A7)
0002677E <AmiBlitz3.ab3@8998>   MOVE.w #$FB4F,D1
00026782 <AmiBlitz3.ab3@8999>    BSR.w uselib
00026786 <AmiBlitz3.ab3@9000>   MOVEM.l (A7)+,A0-A1
0002678C <AmiBlitz3.ab3@9001>   ADDQ.w #1,globalvarpointer
00026794 <AmiBlitz3.ab3@9002>   BCLR #$0,globalvarpointer+1
0002679C <AmiBlitz3.ab3@9003>   MOVE.w globalvarpointer,-$6(A0)
000267A2 <AmiBlitz3.ab3@9004>   ADDQ.w #4,globalvarpointer
000267A6 <AmiBlitz3.ab3@9005>   TST.l -$E(A0)
000267AA <AmiBlitz3.ab3@9006>    BEQ.w JL_0_6AD2
000267B0 <AmiBlitz3.ab3@9007>   ADDQ.w #4,globalvarpointer
000267B8 <AmiBlitz3.ab3@9010>   MOVE.l libend,$28(A1)
000267BA <AmiBlitz3.ab3@9011>   MOVEA.l A1,A0
000267BE <AmiBlitz3.ab3@9012>   ADDA.l $12(A1),A0
000267C0 <AmiBlitz3.ab3@9013>   MOVE.l A1,D1
000267C4 <AmiBlitz3.ab3@9014>   ADD.l $6(A1),D1
000267C8 <AmiBlitz3.ab3@9015>   TST.l $2C(A1)
000267CC <AmiBlitz3.ab3@9016>    BEQ.w JL_0_6AFE
000267D2 <AmiBlitz3.ab3@9018>   TST.b debugmode
000267D6 <AmiBlitz3.ab3@9019>    BNE.w JL_0_6AFE
000267D8 <AmiBlitz3.ab3@9020>   MOVE.l A1,D1
000267DC <AmiBlitz3.ab3@9021>   ADD.l $2C(A1),D1
000267E2 <AmiBlitz3.ab3@9024>   MOVEA.l libend,A2
000267E8 <AmiBlitz3.ab3@9027>   CMPA.l data1start,A2
000267EC <AmiBlitz3.ab3@9028>    BCS.w JL_0_6B24
000267F4 <AmiBlitz3.ab3@9029>   MOVE.w #$FFFF,dontwrite
000267F6 <AmiBlitz3.ab3@9032>   ADDQ.w #2,A0
000267F8 <AmiBlitz3.ab3@9033>   ADDQ.w #2,A2
000267FA <AmiBlitz3.ab3@9034>   CMPA.l D1,A0
000267FE <AmiBlitz3.ab3@9035>    BCS.w JL_0_6B16
00026802 <AmiBlitz3.ab3@9036> BRA.w JL_0_6B2C
00026804 <AmiBlitz3.ab3@9039>   MOVE.w (A0)+,(A2)+                                       ;copylibcode
00026806 <AmiBlitz3.ab3@9040>   CMPA.l D1,A0
0002680A <AmiBlitz3.ab3@9041>    BCS.w JL_0_6B04
00026810 <AmiBlitz3.ab3@9044>   MOVE.l A2,libend
00026814 <AmiBlitz3.ab3@9045>   MOVE.l $20(A1),D1
00026818 <AmiBlitz3.ab3@9046>    BEQ.w JL_0_6BB8
0002681C <AmiBlitz3.ab3@9047>   MOVEM.l D0/D2-D3,-(A7)
00026820 <AmiBlitz3.ab3@9048>   MOVEA.l $24(A1),A0
00026822 <AmiBlitz3.ab3@9049>   MOVEQ.l #$00,D3
00026824 <AmiBlitz3.ab3@9052>   MOVE.l (A0)+,D2
00026828 <AmiBlitz3.ab3@9053>   TST.l $2C(A1)
0002682C <AmiBlitz3.ab3@9054>    BEQ.w JL_0_6B60
00026832 <AmiBlitz3.ab3@9055>   TST.b debugmode
00026836 <AmiBlitz3.ab3@9056>    BNE.w JL_0_6B60
0002683A <AmiBlitz3.ab3@9057>   CMP.l $2C(A1),D2
0002683E <AmiBlitz3.ab3@9058>    BCC.w JL_0_6BA0
00026842 <AmiBlitz3.ab3@9061>   TST.w $0(A1,D2.L)
00026846 <AmiBlitz3.ab3@9062>    BPL.w JL_0_6B72
00026848 <AmiBlitz3.ab3@9063>   TST.l D3
0002684C <AmiBlitz3.ab3@9064>    BNE.w JL_0_6B72
0002684E <AmiBlitz3.ab3@9065>   MOVE.l A0,D0
00026850 <AmiBlitz3.ab3@9066>   MOVE.l D1,D3
00026854 <AmiBlitz3.ab3@9069>   SUB.l $12(A1),D2
00026858 <AmiBlitz3.ab3@9070>    BMI.w JL_0_6BA0
0002685C <AmiBlitz3.ab3@9071>   ADD.l $28(A1),D2
0002685E <AmiBlitz3.ab3@9072>   MOVE.l D2,-(A7)
00026864 <AmiBlitz3.ab3@9073>   SUB.l destbufferstart,D2
00026868 <AmiBlitz3.ab3@9074>    BSR.w addhunkoffset
0002686A <AmiBlitz3.ab3@9075>   MOVEA.l (A7)+,A2
00026870 <AmiBlitz3.ab3@9076>   TST.w dontwrite
00026874 <AmiBlitz3.ab3@9077>    BNE.w JL_0_6BA0
00026878 <AmiBlitz3.ab3@9078>   MOVE.l $28(A1),D2
0002687C <AmiBlitz3.ab3@9079>   SUB.l $12(A1),D2
0002687E <AmiBlitz3.ab3@9080>   ADD.l D2,(A2)
00026880 <AmiBlitz3.ab3@9083>    SUBQ.l #1,D1
00026884 <AmiBlitz3.ab3@9084>    BNE.w JL_0_6B44
00026886 <AmiBlitz3.ab3@9085>   MOVE.l D3,D2
0002688A <AmiBlitz3.ab3@9086>    BEQ.w JL_0_6BB4
0002688C <AmiBlitz3.ab3@9087>   MOVEA.l D0,A2
0002688E <AmiBlitz3.ab3@9088>   SUBQ.w #4,A2
00026892 <AmiBlitz3.ab3@9089>    BSR.w JL_0_6E34
00026896 <AmiBlitz3.ab3@9092>    MOVEM.l (A7)+,D0/D2-D3
0002689A <AmiBlitz3.ab3@9095>    MOVEM.l (A7)+,D1/A0/A2
0002689E <AmiBlitz3.ab3@9096>   MOVEM.l D1-D2,-(A7)
000268A2 <AmiBlitz3.ab3@9097>   TST.w $1A(A1)
000268A6 <AmiBlitz3.ab3@9098>    BNE.w JL_0_6BD0
000268AA <AmiBlitz3.ab3@9099>   CLR.w $A(A1)
000268AE <AmiBlitz3.ab3@9100> BRA.w JL_0_6C5E
000268B4 <AmiBlitz3.ab3@9103>   ADDQ.w #1,globalvarpointer
000268BC <AmiBlitz3.ab3@9104>   BCLR #$0,globalvarpointer+1
000268C4 <AmiBlitz3.ab3@9105>   MOVE.w globalvarpointer,$A(A1)
000268C8 <AmiBlitz3.ab3@9106>   CMP.w #-$12D,D1
000268CC <AmiBlitz3.ab3@9107>    BNE.w JL_0_6C16
000268D4 <AmiBlitz3.ab3@9108>   MOVE.w $A(A1),movestdn+2
000268DC <AmiBlitz3.ab3@9109>   MOVE.w $A(A1),pusha3+2
000268E4 <AmiBlitz3.ab3@9110>   MOVE.w $A(A1),pusha32+2
000268EC <AmiBlitz3.ab3@9111>   MOVE.w $A(A1),pulla3+2
000268F4 <AmiBlitz3.ab3@9112>   MOVE.w $A(A1),geta3+2
000268F8 <AmiBlitz3.ab3@9115>    CMP.w #-$3E9,D1
000268FC <AmiBlitz3.ab3@9116>    BNE.w JL_0_6C3E
00026904 <AmiBlitz3.ab3@9117>   MOVE.w $A(A1),dataget+2
0002690C <AmiBlitz3.ab3@9118>   MOVE.w $A(A1),dataput+2
00026914 <AmiBlitz3.ab3@9119>   MOVE.w $A(A1),rescode+6
0002691C <AmiBlitz3.ab3@9120>   MOVE.w $A(A1),rescode2+2
00026922 <AmiBlitz3.ab3@9123>   ADDQ.w #2,globalvarpointer
00026926 <AmiBlitz3.ab3@9124>   TST.w $1A(A1)
0002692A <AmiBlitz3.ab3@9125>    BMI.w JL_0_6C52
00026930 <AmiBlitz3.ab3@9126>   ADDQ.w #2,globalvarpointer
00026934 <AmiBlitz3.ab3@9129>   MOVEM.l D1/A1,-(A7)
00026938 <AmiBlitz3.ab3@9130>   BSR.w uselib2
0002693C <AmiBlitz3.ab3@9131>   MOVEM.l (A7)+,D1/A1
0002693E <AmiBlitz3.ab3@9134>   MOVE.w D1,D2
00026942 <AmiBlitz3.ab3@9135>   MOVE.l $16(A1),D1
00026946 <AmiBlitz3.ab3@9136>    BSR.w uselib2_org
0002694A <AmiBlitz3.ab3@9137>   MOVE.l $1C(A1),D1
0002694E <AmiBlitz3.ab3@9138>    BSR.w uselib2_org
00026952 <AmiBlitz3.ab3@9139>   MOVEM.l (A7)+,D1-D2
00026958 <AmiBlitz3.ab3@9141>   MOVE.b (a7)+,debugmode
0002695A <AmiBlitz3.ab3@9144> RTS
0002695C <AmiBlitz3.ab3@9148>   MOVEQ.l #$00,D2
00026962 <AmiBlitz3.ab3@9151>   MOVEA.l tokeslist,A2
00026964 <AmiBlitz3.ab3@9152>   CMPA.l D2,A2
00026968 <AmiBlitz3.ab3@9153>    BEQ.w JL_0_6CE0
0002696A <AmiBlitz3.ab3@9154>   MOVE.l A2,-(A7)
0002696C <AmiBlitz3.ab3@9157>   MOVEQ.l #$00,D3
00026970 <AmiBlitz3.ab3@9160>   MOVEA.l $8(A2),A3
00026972 <AmiBlitz3.ab3@9161>   CMPA.l D3,A3
00026976 <AmiBlitz3.ab3@9162>    BEQ.w JL_0_6CD2
00026978 <AmiBlitz3.ab3@9163>   MOVE.l A3,-(A7)
0002697C <AmiBlitz3.ab3@9164>   MOVEM.l D2-D3/A2-A3,-(A7)
00026980 <AmiBlitz3.ab3@9165>   MOVE.w $4(A2),D1
00026984 <AmiBlitz3.ab3@9166>   MOVE.w $6(A2),D2
00026988 <AmiBlitz3.ab3@9167>    BSR.w JL_0_6CE2
0002698C <AmiBlitz3.ab3@9168>   MOVEM.l (A7)+,D2-D3/A2-A3
00026992 <AmiBlitz3.ab3@9169>   MOVE.w dontwrite,D0
00026996 <AmiBlitz3.ab3@9170>    BEQ.w JL_0_6CBE
00026998 <AmiBlitz3.ab3@9173>   MOVEA.l (A3),A3
0002699A <AmiBlitz3.ab3@9174>   CMPA.l D3,A3
0002699E <AmiBlitz3.ab3@9175>    BNE.w JL_0_6CB2
000269A2 <AmiBlitz3.ab3@9176> BRA.w JL_0_6CCC
000269A6 <AmiBlitz3.ab3@9179>   MOVEA.l $4(A3),A0
000269A8 <AmiBlitz3.ab3@9180>   MOVE.l D7,(A0)
000269AA <AmiBlitz3.ab3@9181>   MOVEA.l (A3),A3
000269AC <AmiBlitz3.ab3@9182>   CMPA.l D3,A3
000269B0 <AmiBlitz3.ab3@9183>    BNE.w JL_0_6CBE
000269B2 <AmiBlitz3.ab3@9186>   MOVE.l (A7)+,D3
000269B6 <AmiBlitz3.ab3@9187> BRA.w JL_0_6C88
000269B8 <AmiBlitz3.ab3@9190>    MOVEA.l (A2),A2
000269BA <AmiBlitz3.ab3@9191>   CMPA.l D2,A2
000269BE <AmiBlitz3.ab3@9192>    BNE.w JL_0_6C86
000269C0 <AmiBlitz3.ab3@9193>   MOVE.l (A7)+,D2
000269C4 <AmiBlitz3.ab3@9194> BRA.w JL_0_6C78
000269C6 <AmiBlitz3.ab3@9197> RTS
000269C8 <AmiBlitz3.ab3@9201>   MOVE.w D2,-(A7)
000269CC <AmiBlitz3.ab3@9202>    BSR.w searchinstr
000269CE <AmiBlitz3.ab3@9203>   MOVE.w (A7)+,D2
000269D6 <AmiBlitz3.ab3@9204>   BCLR #$7,blitzmode
000269DA <AmiBlitz3.ab3@9205>   BCLR #$E,D2
000269DE <AmiBlitz3.ab3@9206>    BEQ.w JL_0_6D02
000269E6 <AmiBlitz3.ab3@9207>   BSET #$7,blitzmode
000269E8 <AmiBlitz3.ab3@9210>   TST.w (A3)
000269EC <AmiBlitz3.ab3@9211>    BEQ.w JL_0_6DAC
000269F2 <AmiBlitz3.ab3@9212>   BTST #$2,$1(A3)
000269F6 <AmiBlitz3.ab3@9213>    BNE.w tokeerr
000269FC <AmiBlitz3.ab3@9214>   BTST #$3,$1(A3)
00026A00 <AmiBlitz3.ab3@9215>    BNE.w tokeerr
00026A04 <AmiBlitz3.ab3@9216>   LEA $6(A3),A3
00026A06 <AmiBlitz3.ab3@9219>   MOVE.w (A3)+,D0
00026A0A <AmiBlitz3.ab3@9220>    BMI.w tokeerr
00026A0E <AmiBlitz3.ab3@9221>   ANDI.w #$FF,D0
00026A10 <AmiBlitz3.ab3@9222>   ADDA.w D0,A3
00026A12 <AmiBlitz3.ab3@9223>   ADDQ.w #1,A3
00026A14 <AmiBlitz3.ab3@9224>   EXG.l D0,A3
00026A18 <AmiBlitz3.ab3@9225>   BCLR #$0,D0
00026A1A <AmiBlitz3.ab3@9226>   EXG.l D0,A3
00026A1C <AmiBlitz3.ab3@9227>   SUBQ.w #1,D2
00026A20 <AmiBlitz3.ab3@9228>    BPL.w JL_0_6D98
00026A22 <AmiBlitz3.ab3@9229>   TST.w (A3)
00026A26 <AmiBlitz3.ab3@9230>    BNE.w JL_0_6D76
00026A2A <AmiBlitz3.ab3@9231>   MOVE.l $2(A3),D0
00026A2E <AmiBlitz3.ab3@9232>   OR.l $A(A3),D0
00026A32 <AmiBlitz3.ab3@9233>    BNE.w JL_0_6D76
00026A38 <AmiBlitz3.ab3@9234>   BTST #$0,$9(A3)
00026A3C <AmiBlitz3.ab3@9235>    BNE.w JL_0_6D76
00026A40 <AmiBlitz3.ab3@9236>   MOVE.l $6(A3),D7
00026A44 <AmiBlitz3.ab3@9237>   MOVE.w $0(A2,D7.L),D0
00026A48 <AmiBlitz3.ab3@9238>   ANDI.w #$F000,D0
00026A4C <AmiBlitz3.ab3@9239>   CMP.w #-$6000,D0
00026A50 <AmiBlitz3.ab3@9240>    BEQ.w JL_0_6D76
00026A54 <AmiBlitz3.ab3@9243>   SUB.l $12(A2),D7
00026A58 <AmiBlitz3.ab3@9244>   ADD.l $28(A2),D7
00026A5A <AmiBlitz3.ab3@9245> RTS
00026A60 <AmiBlitz3.ab3@9249>   LEA cutejsr,A0
00026A66 <AmiBlitz3.ab3@9252>   MOVE.l destpointer,-(A7)
00026A6E <AmiBlitz3.ab3@9253>   MOVE.w #$FFFF,lasta6
00026A70 <AmiBlitz3.ab3@9256>    JSR (A0)
00026A74 <AmiBlitz3.ab3@9257>   MOVE.w #$4E75,D1
00026A78 <AmiBlitz3.ab3@9258>    BSR.w writeword
00026A7A <AmiBlitz3.ab3@9259>   MOVE.l (A7)+,D7
00026A7C <AmiBlitz3.ab3@9260> RTS
00026A7E <AmiBlitz3.ab3@9264>   TST.w (A3)+
00026A82 <AmiBlitz3.ab3@9265>    BEQ.w JL_0_6DA4
00026A84 <AmiBlitz3.ab3@9266>   ADDQ.w #2,A3
00026A88 <AmiBlitz3.ab3@9267> BRA.w JL_0_6D98
00026A8C <AmiBlitz3.ab3@9270>   LEA $C(A3),A3
00026A90 <AmiBlitz3.ab3@9271> BRA.w JL_0_6D20
00026A92 <AmiBlitz3.ab3@9275>   TST.w D2
00026A96 <AmiBlitz3.ab3@9276>    BNE.w tokeerr
00026A9A <AmiBlitz3.ab3@9277>   TST.w $6(A3)
00026A9E <AmiBlitz3.ab3@9278>    BNE.w JL_0_6DE4
00026AA2 <AmiBlitz3.ab3@9279>   MOVE.l $8(A3),D0
00026AA6 <AmiBlitz3.ab3@9280>   OR.l $10(A3),D0
00026AAA <AmiBlitz3.ab3@9281>    BNE.w JL_0_6DE4
00026AB0 <AmiBlitz3.ab3@9282>   BTST #$0,$F(A3)
00026AB4 <AmiBlitz3.ab3@9283>    BNE.w JL_0_6DE4
00026AB8 <AmiBlitz3.ab3@9284>   MOVE.l $C(A3),D7
00026ABC <AmiBlitz3.ab3@9285>   MOVE.w $0(A2,D7.L),D0
00026AC0 <AmiBlitz3.ab3@9286>   ANDI.w #$F000,D0
00026AC4 <AmiBlitz3.ab3@9287>   CMP.w #-$6000,D0
00026AC8 <AmiBlitz3.ab3@9288>    BNE.w JL_0_6D6C
00026ACA <AmiBlitz3.ab3@9291>   MOVE.l A3,D1
00026ACC <AmiBlitz3.ab3@9292>   SUB.l A2,D1
00026AD2 <AmiBlitz3.ab3@9293>   LEA Amakelibsub,A0
00026AD6 <AmiBlitz3.ab3@9294> BRA.w JL_0_6D7C
00026ADC <AmiBlitz3.ab3@9298>   MOVEA.l _execbase,A6
00026AE2 <AmiBlitz3.ab3@9299>   MOVEA.l tokeslist,A2
00026AE8 <AmiBlitz3.ab3@9300>   CLR.l tokeslist
00026AEC <AmiBlitz3.ab3@9303>     CMPA.w #$0,A2
00026AF0 <AmiBlitz3.ab3@9304>      BEQ.w JL_0_6E32
00026AF4 <AmiBlitz3.ab3@9305>     MOVEA.l $8(A2),A3
00026AF8 <AmiBlitz3.ab3@9308>       CMPA.w #$0,A3
00026AFC <AmiBlitz3.ab3@9309>        BEQ.w JL_0_6E24
00026AFE <AmiBlitz3.ab3@9310>       MOVEA.l A3,A1
00026B00 <AmiBlitz3.ab3@9311>       MOVEA.l (A3),A3
00026B02 <AmiBlitz3.ab3@9312>       MOVEQ.l #$08,D0
00026B08 <AmiBlitz3.ab3@9313>       MOVE.l mempool,a0
00026B0E <AmiBlitz3.ab3@9314>       MOVEA.l _execbase,A6
00026B12 <AmiBlitz3.ab3@9315>       JSR _FreePooled(A6)
00026B16 <AmiBlitz3.ab3@9316> BRA.w JL_0_6E0E
00026B18 <AmiBlitz3.ab3@9319>     MOVEA.l A2,A1
00026B1A <AmiBlitz3.ab3@9320>     MOVEA.l (A2),A2
00026B1C <AmiBlitz3.ab3@9321>     MOVEQ.l #$0C,D0
00026B22 <AmiBlitz3.ab3@9322>     MOVE.l mempool,a0
00026B28 <AmiBlitz3.ab3@9323>     MOVEA.l _execbase,A6
00026B2C <AmiBlitz3.ab3@9324>     JSR _FreePooled(A6)
00026B30 <AmiBlitz3.ab3@9325> BRA.w JL_0_6E02
00026B32 <AmiBlitz3.ab3@9328> RTS
00026B36 <AmiBlitz3.ab3@9332>   MOVEM.l D3-D5/A1-A6,-(A7)
00026B38 <AmiBlitz3.ab3@9333>   MOVEA.l A1,A4
00026B3A <AmiBlitz3.ab3@9336>   MOVE.l (A2)+,D3
00026B3E <AmiBlitz3.ab3@9337>   MOVE.w $0(A4,D3.L),D5
00026B42 <AmiBlitz3.ab3@9338>    BPL.w JL_0_6E7A
00026B46 <AmiBlitz3.ab3@9339>   TST.l $2C(A4)
00026B4A <AmiBlitz3.ab3@9340>    BEQ.w JL_0_6E5E
00026B50 <AmiBlitz3.ab3@9341>   TST.b debugmode
00026B54 <AmiBlitz3.ab3@9342>    BNE.w JL_0_6E5E
00026B58 <AmiBlitz3.ab3@9343>   CMP.l $2C(A4),D3
00026B5C <AmiBlitz3.ab3@9344>    BCC.w JL_0_6E7A
00026B60 <AmiBlitz3.ab3@9347>   BCLR #$F,D5
00026B64 <AmiBlitz3.ab3@9348>   MOVE.w $2(A4,D3.L),D4
00026B68 <AmiBlitz3.ab3@9349>   SUB.l $12(A4),D3
00026B6C <AmiBlitz3.ab3@9350>   ADD.l $28(A4),D3
00026B70 <AmiBlitz3.ab3@9351>   MOVEM.l D2/A2/A4,-(A7)
00026B74 <AmiBlitz3.ab3@9352>    BSR.w JL_0_6E86
00026B78 <AmiBlitz3.ab3@9353>   MOVEM.l (A7)+,D2/A2/A4
00026B7A <AmiBlitz3.ab3@9356>   SUBQ.l #1,D2
00026B7E <AmiBlitz3.ab3@9357>    BNE.w JL_0_6E3A
00026B82 <AmiBlitz3.ab3@9358>   MOVEM.l (A7)+,D3-D5/A1-A6
00026B84 <AmiBlitz3.ab3@9359> RTS
00026B8A <AmiBlitz3.ab3@9363>   LEA tokeslist,A3
00026B90 <AmiBlitz3.ab3@9364>   MOVEA.l _execbase,A6
00026B92 <AmiBlitz3.ab3@9367>   MOVE.l (A3),D0
00026B96 <AmiBlitz3.ab3@9368>    BEQ.w JL_0_6EAC
00026B98 <AmiBlitz3.ab3@9369>   MOVEA.l D0,A3
00026B9C <AmiBlitz3.ab3@9370>   CMP.w $4(A3),D4
00026BA0 <AmiBlitz3.ab3@9371>    BNE.w JL_0_6E90
00026BA4 <AmiBlitz3.ab3@9372>   CMP.w $6(A3),D5
00026BA8 <AmiBlitz3.ab3@9373>    BNE.w JL_0_6E90
00026BAC <AmiBlitz3.ab3@9374> BRA.w JL_0_6ED0
00026BAE <AmiBlitz3.ab3@9377>   MOVEQ.l #$0C,D0
00026BB0 <AmiBlitz3.ab3@9378>   MOVEQ.l #$01,D1
00026BB6 <AmiBlitz3.ab3@9379>   MOVE.l mempool,a0
00026BBA <AmiBlitz3.ab3@9380>   JSR _AllocPooled(a6)
00026BBC <AmiBlitz3.ab3@9382>   MOVEA.l D0,A3
00026BC2 <AmiBlitz3.ab3@9383>   MOVE.l tokeslist,(A3)
00026BC8 <AmiBlitz3.ab3@9384>   MOVE.l A3,tokeslist
00026BCC <AmiBlitz3.ab3@9385>   MOVE.w D4,$4(A3)
00026BD0 <AmiBlitz3.ab3@9386>   MOVE.w D5,$6(A3)
00026BD4 <AmiBlitz3.ab3@9387>   CLR.l $8(A3)
00026BD6 <AmiBlitz3.ab3@9390>   MOVEQ.l #$08,D0
00026BD8 <AmiBlitz3.ab3@9391>   MOVEQ.l #$01,D1
00026BDE <AmiBlitz3.ab3@9392>   MOVE.l mempool,a0
00026BE2 <AmiBlitz3.ab3@9393>   JSR _AllocPooled(a6)
00026BE4 <AmiBlitz3.ab3@9395>   MOVEA.l D0,A0
00026BE8 <AmiBlitz3.ab3@9396>   MOVE.l D3,$4(A0)
00026BEC <AmiBlitz3.ab3@9397>   MOVE.l $8(A3),(A0)
00026BF0 <AmiBlitz3.ab3@9398>   MOVE.l A0,$8(A3)
00026BF2 <AmiBlitz3.ab3@9399>   MOVE.w D4,D1
00026BF6 <AmiBlitz3.ab3@9400> BRA.w searchinstr
00026BFA <AmiBlitz3.ab3@9403> tokeslist: Ds.l 1
00026BFE <AmiBlitz3.ab3@9416>   BEQ.w uselib2_org__skip
00026C00 <AmiBlitz3.ab3@9417>   MOVE.l A1,-(A7)
00026C02 <AmiBlitz3.ab3@9418>   ADDA.l D1,A1
00026C04 <AmiBlitz3.ab3@9419>   ADDQ.w #6,A1
00026C06 <AmiBlitz3.ab3@9422>     MOVE.w (A1)+,D1
00026C0A <AmiBlitz3.ab3@9423>     BEQ.w uselib2_org__done
00026C0C <AmiBlitz3.ab3@9424>     CMP.w D2,D1
00026C10 <AmiBlitz3.ab3@9425>     BEQ.w uselib2_org__skip2
00026C12 <AmiBlitz3.ab3@9426>     MOVE.l A1,-(A7)
00026C16 <AmiBlitz3.ab3@9427>     BSR.w uselib
00026C18 <AmiBlitz3.ab3@9428>     MOVEA.l (A7)+,A1
00026C1A <AmiBlitz3.ab3@9431>     ADDQ.w #2,A1
00026C1E <AmiBlitz3.ab3@9432> BRA.w uselib2_org__loop
00026C20 <AmiBlitz3.ab3@9435>   MOVEA.l (A7)+,A1
00026C22 <AmiBlitz3.ab3@9438> RTS
00026C28 <AmiBlitz3.ab3@9442>   MOVEA.l libpointer,A1
00026C2C <AmiBlitz3.ab3@9445>   CMPA.w #$0,A1
00026C30 <AmiBlitz3.ab3@9446>    BEQ.b JL_0_6F36
00026C34 <AmiBlitz3.ab3@9447>   CMP.w $4(A1),D1
00026C38 <AmiBlitz3.ab3@9448>    BEQ.w JL_0_6F34
00026C3A <AmiBlitz3.ab3@9449>   MOVEA.l (A1),A1
00026C3E <AmiBlitz3.ab3@9450> BRA.w JL_0_6F20
00026C40 <AmiBlitz3.ab3@9453>   MOVEQ.l #-$01,D1
00026C42 <AmiBlitz3.ab3@9456> RTS
00026C46 <AmiBlitz3.ab3@9460>   MOVEM.l d0/a2,-(a7)
00026C48 <AmiBlitz3.ab3@9461>   MOVEQ #0,d0
00026C4E <AmiBlitz3.ab3@9462>   LEA instrtab+4,a2
00026C50 <AmiBlitz3.ab3@9463>   MOVE.w d1,d0
00026C52 <AmiBlitz3.ab3@9464>   ASL.l #3,d0
00026C56 <AmiBlitz3.ab3@9465>   MOVE.l 0(a2,d0.l),a1                                     ;*8
00026C5C <AmiBlitz3.ab3@9466>   CMP.l #0,a1
00026C60 <AmiBlitz3.ab3@9467>   BNE JL_0_6F54b
00026C66 <AmiBlitz3.ab3@9469>   MOVEA.l libpointer,A1
00026C6A <AmiBlitz3.ab3@9472>     CMPA.w #$0,A1
00026C6E <AmiBlitz3.ab3@9473>     BEQ.w noliberr
00026C72 <AmiBlitz3.ab3@9474>     CMP.w $4(A1),D1
00026C76 <AmiBlitz3.ab3@9475>     BEQ.w JL_0_6F54
00026C78 <AmiBlitz3.ab3@9476>    MOVEA.l (A1),A1
00026C7C <AmiBlitz3.ab3@9477> BRA.w JL_0_6F3E
00026C80 <AmiBlitz3.ab3@9480>   MOVE.l a1,0(a2,d0.l)
00026C84 <AmiBlitz3.ab3@9483>   MOVEM.l (a7)+,d0/a2
00026C86 <AmiBlitz3.ab3@9484> RTS
00026C8A <AmiBlitz3.ab3@9487>   MOVEM.l d0-d1/a1,-(a7)
00026C8C <AmiBlitz3.ab3@9488>   MOVEQ #0,d0
00026C92 <AmiBlitz3.ab3@9489>   LEA instrtab,a1
00026C94 <AmiBlitz3.ab3@9490>   MOVE.w d1,d0
00026C96 <AmiBlitz3.ab3@9491>   ASL.l #3,d0
00026C9A <AmiBlitz3.ab3@9492>   MOVE.l 0(a1,d0.l),a3
00026C9E <AmiBlitz3.ab3@9493>   MOVE.l 4(a1,d0.l),a2
00026CA4 <AmiBlitz3.ab3@9494>   CMP.l #0,a3
00026CA8 <AmiBlitz3.ab3@9495>   BNE JL_0_6F92b
00026CAE <AmiBlitz3.ab3@9497>   MOVEA.l libpointer,A2
00026CB2 <AmiBlitz3.ab3@9500>   CMPA.w #$0,A2
00026CB6 <AmiBlitz3.ab3@9501>   BEQ.w notokerr
00026CBA <AmiBlitz3.ab3@9502>   CMP.w $E(A2),D1
00026CBE <AmiBlitz3.ab3@9503>   BCS.w JL_0_6FB8
00026CC2 <AmiBlitz3.ab3@9504>   CMP.w $10(A2),D1
00026CC6 <AmiBlitz3.ab3@9505>   BCC.w JL_0_6FB8
00026CCA <AmiBlitz3.ab3@9506>   LEA $30(A2),A3
00026CCE <AmiBlitz3.ab3@9507>   TST.w $4(A2)
00026CD2 <AmiBlitz3.ab3@9508>   BPL.w JL_0_6FA6
00026CD6 <AmiBlitz3.ab3@9511>     CMP.w $E(A2),D1
00026CDA <AmiBlitz3.ab3@9512>     BEQ.w JL_0_6F92
00026CDC <AmiBlitz3.ab3@9513>     SUBQ.w #1,D1
00026CE0 <AmiBlitz3.ab3@9514>     MOVEA.l $2(A3),A3
00026CE4 <AmiBlitz3.ab3@9515> BRA.w JL_0_6F80
00026CE8 <AmiBlitz3.ab3@9518>   MOVE.l a3,0(a1,d0.l)
00026CEC <AmiBlitz3.ab3@9519>   MOVE.l a2,4(a1,d0.l)
00026CF0 <AmiBlitz3.ab3@9522>   MOVEM.l (a7)+,d0-d1/a1
00026CF4 <AmiBlitz3.ab3@9523>   MOVEM.l D1/A1-a3,-(A7)
00026CF8 <AmiBlitz3.ab3@9524>   CMP.w #1,(a3)
00026CFC <AmiBlitz3.ab3@9525>   BNE.s ex10
00026D04 <AmiBlitz3.ab3@9526>   CMP.l #$12345678,$e(a3)
00026D08 <AmiBlitz3.ab3@9527>   BNE.s ex10
00026D0E <AmiBlitz3.ab3@9528>   CMP.w #$ffff,$16(a3)
00026D12 <AmiBlitz3.ab3@9529>   BNE.s ex10
00026D16 <AmiBlitz3.ab3@9530>   MOVE.l $12(a3),d1
00026D1A <AmiBlitz3.ab3@9531>   BEQ.s ex10
00026D20 <AmiBlitz3.ab3@9532>   LEA pluginbase,a3
00026D24 <AmiBlitz3.ab3@9534> JMP 0(a2,d1.l)                                             ;plugin
00026D28 <AmiBlitz3.ab3@9537>   MOVEM.l (A7)+,D1/A1-a3
00026D2E <AmiBlitz3.ab3@9538>   JSR stripspaces
00026D30 <AmiBlitz3.ab3@9539>   MOVEQ #0,d0
00026D32 <AmiBlitz3.ab3@9540>   MOVE.b (a5)+,d0
00026D38 <AmiBlitz3.ab3@9541>   MOVE.w d0,lastchar
00026D3A <AmiBlitz3.ab3@9542>   ADDQ.l #4,a7
00026D3C <AmiBlitz3.ab3@9543> RTS
00026D3E <AmiBlitz3.ab3@9547>   MOVEA.l A2,A1
00026D44 <AmiBlitz3.ab3@9548>   CLR.b newmode
00026D48 <AmiBlitz3.ab3@9549>   MOVE.w $4(A1),D1
00026D4C <AmiBlitz3.ab3@9552>   BSR.w uselib3
00026D50 <AmiBlitz3.ab3@9553>   MOVEM.l (A7)+,D1/A1-a3
00026D52 <AmiBlitz3.ab3@9554> RTS
00026D58 <AmiBlitz3.ab3@9557>   MOVE.w globalvarpointer,-(a7)
00026D60 <AmiBlitz3.ab3@9558>   MOVE.w #$8004,globalvarpointer
00026D64 <AmiBlitz3.ab3@9559>   BSR.w uselib3
00026D6A <AmiBlitz3.ab3@9560>   MOVE.w (a7)+,globalvarpointer
00026D6E <AmiBlitz3.ab3@9561>   MOVEM.l (A7)+,D1/A1-a3
00026D70 <AmiBlitz3.ab3@9562> RTS
00026D74 <AmiBlitz3.ab3@9565>     CMP.w $E(A2),D1
00026D78 <AmiBlitz3.ab3@9566>     BEQ.w JL_0_6F92
00026D7A <AmiBlitz3.ab3@9567>     SUBQ.w #1,D1
00026D7E <AmiBlitz3.ab3@9568>     MOVEA.l $2(A3),A3
00026D82 <AmiBlitz3.ab3@9569> BRA.w JL_0_6FA6
00026D84 <AmiBlitz3.ab3@9572>   MOVEA.l (A2),A2
00026D88 <AmiBlitz3.ab3@9573> BRA.w JL_0_6F5C
00026D8E <AmiBlitz3.ab3@9576> JMP writeword
00026D92 <AmiBlitz3.ab3@9579> ptr_acidlibs:   Ds.l 1                                     ;deflibsat org source
00026D96 <AmiBlitz3.ab3@9580> ptr_deflibs:    Ds.l 1                                     ;acidlibsat org source
00026D9A <AmiBlitz3.ab3@9581> ptr_userlibs:   Ds.l 1                                     ;blitzlibsat org source  ;;start of blitzlibs list!
00026D9C <AmiBlitz3.ab3@9587>   TST.l D0
00026DA0 <AmiBlitz3.ab3@9588>   BEQ.w exit_loadlibsfile
00026DA2 <AmiBlitz3.ab3@9589>     MOVE.l D0,D6                                           ;d6=len
00026DA8 <AmiBlitz3.ab3@9590>     MOVEA.l _dosbase,A6
00026DAE <AmiBlitz3.ab3@9591>     MOVE.l #HUNK_RELOC_16__MODE_OLDFILE,D2
00026DB2 <AmiBlitz3.ab3@9592>     JSR _Open(A6)
00026DB4 <AmiBlitz3.ab3@9593>     MOVE.l D0,D7
00026DB8 <AmiBlitz3.ab3@9594>     BEQ.w exit_loadlibsfile
00026DBA <AmiBlitz3.ab3@9595>       MOVE.l D6,D0
00026DBC <AmiBlitz3.ab3@9596>       MOVEQ.l #$01,D1
00026DC2 <AmiBlitz3.ab3@9597>       MOVEA.l _execbase,A6
00026DC8 <AmiBlitz3.ab3@9598>       MOVE.l mempool,a0
00026DCC <AmiBlitz3.ab3@9599>       JSR _AllocPooled(a6)
00026DCE <AmiBlitz3.ab3@9600>       MOVE.l D0,D5                                         ;start address
00026DD0 <AmiBlitz3.ab3@9602>       MOVE.l D7,D1                                         ; handle
00026DD2 <AmiBlitz3.ab3@9603>       MOVE.l D5,D2                                         ; buffer addr
00026DD4 <AmiBlitz3.ab3@9604>       MOVE.l D6,D3                                         ; size
00026DDA <AmiBlitz3.ab3@9605>       MOVEA.l _dosbase,A6
00026DDE <AmiBlitz3.ab3@9606>       JSR _Read(A6)
00026DE0 <AmiBlitz3.ab3@9607>       MOVE.l D7,D1
00026DE4 <AmiBlitz3.ab3@9608>       JSR _Close(A6)
00026DE6 <AmiBlitz3.ab3@9610>       MOVEA.l D5,A0                                        ; buffer addr
00026DE8 <AmiBlitz3.ab3@9616>         MOVE.l (A0)+,D0                                    ; naechster Longwert nach DO
00026DEC <AmiBlitz3.ab3@9617>         BEQ.b JL_0_7044                                    ; wenn <> 0, dann
00026DF0 <AmiBlitz3.ab3@9618>           LEA $20(A0),A1                                   ;   lade inhalt von D0+40bytes nach A1
00026DF2 <AmiBlitz3.ab3@9619>           MOVE.l A1,(A3)                                   ;   kopiere Adresse in A1 zum libpointer
00026DF4 <AmiBlitz3.ab3@9620>           MOVEA.l A1,A3                                    ;   kopiere A1 nach A3
00026DF6 <AmiBlitz3.ab3@9621>           ADDA.l D0,A0                                     ;   addiere inhalt von D0 zu A0 hinzu
00026DFA <AmiBlitz3.ab3@9622>           MOVE.l -$4(A1),D0                                ;   hole die 4bytes vor nach D0
00026DFC <AmiBlitz3.ab3@9623>           ADD.l D0,D0                                      ;   verdoppele D0
00026DFE <AmiBlitz3.ab3@9624>           ADD.l D0,D0                                      ;   verdoppele D0 nochmal
00026E02 <AmiBlitz3.ab3@9625>           MOVE.l D0,$6(A1)                                 ;   schreibe D0 6bytes nach A1
00026E06 <AmiBlitz3.ab3@9626>           CLR.l $20(A1)                                    ;   loesche D0+40bytes
00026E0A <AmiBlitz3.ab3@9627>           LEA $C(A1,D0.L),A2                               ;   lade inhalt von (A1)+D0+$C nach A2
00026E0C <AmiBlitz3.ab3@9628>           CMPA.l A0,A2
00026E10 <AmiBlitz3.ab3@9629>           BCC.b JL_0_7010                                  ; wenn A0=>A2
00026E16 <AmiBlitz3.ab3@9630>             MOVE.l -$8(A2),$20(A1)                         ;
00026E1A <AmiBlitz3.ab3@9631>             MOVE.l A2,$24(A1)                              ;
00026E1E <AmiBlitz3.ab3@9632> BRA.w JL_0_7010
00026E20 <AmiBlitz3.ab3@9635>       MOVE.l D5,D0
00026E22 <AmiBlitz3.ab3@9638> RTS
00026E4C <AmiBlitz3.ab3@9642>   !basic
00026EC0 <AmiBlitz3.ab3@9643>    tempmapping$ = dos_AddPart{my_systemdir$,"token_mapping_userlibs.txt"}
00026EF4 <AmiBlitz3.ab3@9644>    dos_Delete{tempmapping$}
00026F38 <AmiBlitz3.ab3@9645>    fid.l = file_Open{tempmapping$,#file_forcewrite}
00026F56 <AmiBlitz3.ab3@9646>   !asm
00026F5C <AmiBlitz3.ab3@9648>   LEA libpointer,A3
00026F62 <AmiBlitz3.ab3@9652>   MOVE.l size_deflibs,D0
00026F68 <AmiBlitz3.ab3@9653>   MOVE.l deflib,d1
00026F6C <AmiBlitz3.ab3@9654>   BEQ 'l1
00026F70 <AmiBlitz3.ab3@9655> BRA 'l2
00026F76 <AmiBlitz3.ab3@9658>   MOVE.l #str_path_deflibs,D1
00026F7A <AmiBlitz3.ab3@9661>   BSR.w load_libsfile
00026F80 <AmiBlitz3.ab3@9662>   MOVE.l D0,ptr_deflibs
00026F86 <AmiBlitz3.ab3@9665>   MOVE.l size_acidlibs,D0
00026F8C <AmiBlitz3.ab3@9666>   MOVE.l #str_path_acidlibs,D1
00026F90 <AmiBlitz3.ab3@9667>   BSR.w load_libsfile
00026F96 <AmiBlitz3.ab3@9668>   MOVE.l D0,ptr_acidlibs
00026F98 <AmiBlitz3.ab3@9672>   CLR.l (A3)
00026F9E <AmiBlitz3.ab3@9673>   MOVE.l A3,ptr_userlibs
00026FA4 <AmiBlitz3.ab3@9678>   LEA str_libfilename,A0
00026FAA <AmiBlitz3.ab3@9679>   LEA str_path_userlibs,A1
00026FAC <AmiBlitz3.ab3@9682>     MOVE.b (A1)+,(A0)+
00026FB0 <AmiBlitz3.ab3@9683>   BNE.b JL_0_708E
00026FB2 <AmiBlitz3.ab3@9685>   SUBQ.w #1,A0
00026FB6 <AmiBlitz3.ab3@9686>   MOVE.b #$2F,(A0)+
00026FB8 <AmiBlitz3.ab3@9689>   MOVE.l A0,-(A7)                                          ; -- store str_path_userlibs in A7
00026FBE <AmiBlitz3.ab3@9691>   LEA ptr_userlibs_list,A2
00026FC4 <AmiBlitz3.ab3@9692>   MOVEA.l ptr_userlibs,A3
00026FCA <AmiBlitz3.ab3@9693>   MOVEA.l _dosbase,A6
00026FCC <AmiBlitz3.ab3@9698>       MOVE.l (A2),D0                                       ; addresse aus liste nach D0
00026FD0 <AmiBlitz3.ab3@9699>       BNE.b JL_0_70C6                                      ; wenn nix drin, processing ueberspringen
00026FD2 <AmiBlitz3.ab3@9701>       CLR.l (A3)
00026FD4 <AmiBlitz3.ab3@9702>       ADDQ.w #4,A7
00026FFE <AmiBlitz3.ab3@9703>       !basic
00027012 <AmiBlitz3.ab3@9704>       If fid<>-1
0002701C <AmiBlitz3.ab3@9705>         file_Close{fid}
00027028 <AmiBlitz3.ab3@9706>         fid = -1
00027046 <AmiBlitz3.ab3@9708>       !asm
0002704A <AmiBlitz3.ab3@9709> BRA.w process_libraries
0002704C <AmiBlitz3.ab3@9712>       MOVEA.l D0,A2                                        ; addresse zureuck nach A2
00027050 <AmiBlitz3.ab3@9713>       TST.w $4(A2)                                         ; naechste addresse pruefen
00027054 <AmiBlitz3.ab3@9714>     BEQ.b JL_0_70BA
00027058 <AmiBlitz3.ab3@9716>     LEA $6(A2),A1
0002705A <AmiBlitz3.ab3@9717>     MOVEA.l (A7),A0
0002705C <AmiBlitz3.ab3@9720>       MOVE.b (A1)+,(A0)+
00027060 <AmiBlitz3.ab3@9721>     BNE.w JL_0_70D4
00027062 <AmiBlitz3.ab3@9725>     MOVE.l A0,-(A7)
00027068 <AmiBlitz3.ab3@9726>     MOVE.l #str_libfilename,D1
0002706A <AmiBlitz3.ab3@9727>     MOVEQ.l #-$02,D2
00027070 <AmiBlitz3.ab3@9728>     MOVEA.l _dosbase,A6
00027074 <AmiBlitz3.ab3@9729>      JSR _Lock(A6)
00027076 <AmiBlitz3.ab3@9730>     MOVE.l D0,D1
0002707A <AmiBlitz3.ab3@9731>      BEQ.w JL_0_7156
0002707C <AmiBlitz3.ab3@9732>     MOVEA.l (A7),A0
00027082 <AmiBlitz3.ab3@9733>     MOVE.b #$2F,-$1(A0)
00027084 <AmiBlitz3.ab3@9736>     MOVE.l D1,-(A7)
0002708A <AmiBlitz3.ab3@9737>     MOVE.l #ptr_parameterstore,D2
00027090 <AmiBlitz3.ab3@9738>     MOVEA.l _dosbase,A6
00027094 <AmiBlitz3.ab3@9739>     JSR _Examine(A6)
00027096 <AmiBlitz3.ab3@9740>     TST.l D0
0002709A <AmiBlitz3.ab3@9741>      BEQ.w JL_0_7150
000270A0 <AmiBlitz3.ab3@9744>     LEA fib_FileName,A0
000270A4 <AmiBlitz3.ab3@9745>     BSR.w check_for_infoextention
000270A8 <AmiBlitz3.ab3@9746>     BEQ.w JL_0_7150
000270D2 <AmiBlitz3.ab3@9749>     !basic
00027156 <AmiBlitz3.ab3@9750>       Poke$ ?str_libfilename,dos_AddPart{Peek$(?str_path_userlibs),Peek$(?fib_FileName)}
00027174 <AmiBlitz3.ab3@9751>     !asm
0002717A <AmiBlitz3.ab3@9752>     MOVE.l #str_libfilename,D1
0002717E <AmiBlitz3.ab3@9753>     BSR.w open_userlibfile
00027180 <AmiBlitz3.ab3@9756>     MOVE.l (A7)+,D1
00027186 <AmiBlitz3.ab3@9757>     MOVEA.l _dosbase,A6
0002718A <AmiBlitz3.ab3@9758>     JSR _UnLock(A6)
0002718C <AmiBlitz3.ab3@9761>     ADDQ.w #4,A7
00027190 <AmiBlitz3.ab3@9762> BRA.w JL_0_70BA
00027196 <AmiBlitz3.ab3@9765>   MOVE.l #HUNK_RELOC_16__MODE_OLDFILE,D2
0002719C <AmiBlitz3.ab3@9766>   MOVEA.l _dosbase,A6
000271A0 <AmiBlitz3.ab3@9767>    JSR _Open(A6)
000271A2 <AmiBlitz3.ab3@9768>   MOVE.l D0,D7
000271A6 <AmiBlitz3.ab3@9769>    BEQ.w exit_userlibfile
000271A8 <AmiBlitz3.ab3@9772>   MOVE.l D7,D1                                             ; filehandle
000271AE <AmiBlitz3.ab3@9773>   MOVE.l #optstuff,D2                                     ; buffer
000271B4 <AmiBlitz3.ab3@9774>   MOVEA.l _dosbase,A6
000271B6 <AmiBlitz3.ab3@9775>   MOVEQ.l #$20,D3                                          ; size
000271BA <AmiBlitz3.ab3@9776>   JSR _Read(A6)
000271C0 <AmiBlitz3.ab3@9779>   MOVE.l optstuff+28,D6
000271C2 <AmiBlitz3.ab3@9780>   LSL.l #2,D6
000271C4 <AmiBlitz3.ab3@9781>   MOVE.l D6,D0
000271C6 <AmiBlitz3.ab3@9782>   MOVEQ.l #$01,D1
000271CC <AmiBlitz3.ab3@9783>   MOVEA.l _execbase,A6
000271D2 <AmiBlitz3.ab3@9784>   MOVE.l mempool,a0
000271D6 <AmiBlitz3.ab3@9785>   JSR _AllocPooled(a6)
000271D8 <AmiBlitz3.ab3@9786>   MOVEA.l D0,A5
000271DE <AmiBlitz3.ab3@9789>   MOVEA.l _dosbase,A6
000271E0 <AmiBlitz3.ab3@9790>   MOVE.l D7,D1                                             ; filehandle
000271E2 <AmiBlitz3.ab3@9791>   MOVE.l A5,D2                                             ; buffer
000271E4 <AmiBlitz3.ab3@9792>   MOVE.l D6,D3                                             ; size
000271E8 <AmiBlitz3.ab3@9793>    JSR _Read(A6)
000271EA <AmiBlitz3.ab3@9794>   MOVE.l A5,(A3)
000271EC <AmiBlitz3.ab3@9796>   MOVE.l A5,d0
000271EE <AmiBlitz3.ab3@9798>   MOVEA.l A5,A3
000271F2 <AmiBlitz3.ab3@9799>   MOVE.l D6,$6(A5)
000271F6 <AmiBlitz3.ab3@9800>   CLR.l $20(A5)
00027220 <AmiBlitz3.ab3@9802>   !basic
0002722A <AmiBlitz3.ab3@9804>   addr_libnum.l = PutD0 + 4
0002723E <AmiBlitz3.ab3@9805>   If fid<>-1
000272DE <AmiBlitz3.ab3@9806>     currentlib$ = LSet$(Peek.s(?fib_FileName),30)+";"+LSet$(Get_Libinfo{addr_libnum},30) ;+";"+Str$(Peek.w(addr_libnum))
00027310 <AmiBlitz3.ab3@9807>     file_WriteLine{fid,currentlib$}
0002732E <AmiBlitz3.ab3@9809>   !asm
00027330 <AmiBlitz3.ab3@9812>   MOVE.l D7,D1                                             ; filehandle
00027336 <AmiBlitz3.ab3@9813>   MOVE.l #optstuff,D2                                     ; buffer
00027338 <AmiBlitz3.ab3@9814>   MOVEQ.l #$0C,D3                                          ; size
0002733E <AmiBlitz3.ab3@9815>   MOVEA.l _dosbase,A6
00027342 <AmiBlitz3.ab3@9816>    JSR _Read(A6)
00027348 <AmiBlitz3.ab3@9818>   CMP.l #$C,D0
0002734C <AmiBlitz3.ab3@9819>    BCS.w close_and_exit_userlibfile
00027352 <AmiBlitz3.ab3@9822>   MOVE.l optstuff+4,D0
00027356 <AmiBlitz3.ab3@9823>   MOVE.l D0,$20(A5)
00027358 <AmiBlitz3.ab3@9824>   LSL.l #2,D0
0002735A <AmiBlitz3.ab3@9825>   MOVE.l D0,D5
0002735C <AmiBlitz3.ab3@9826>   MOVEQ.l #$01,D1
00027362 <AmiBlitz3.ab3@9827>   MOVEA.l _execbase,A6
00027368 <AmiBlitz3.ab3@9828>   MOVE.l mempool,a0
0002736C <AmiBlitz3.ab3@9829>   JSR _AllocPooled(a6)
00027372 <AmiBlitz3.ab3@9831>   MOVEA.l _dosbase,A6
00027376 <AmiBlitz3.ab3@9832>   MOVE.l D0,$24(A5)
00027378 <AmiBlitz3.ab3@9833>   MOVE.l D7,D1
0002737A <AmiBlitz3.ab3@9834>   MOVE.l D0,D2
0002737C <AmiBlitz3.ab3@9835>   MOVE.l D5,D3
00027380 <AmiBlitz3.ab3@9836>   JSR _Read(A6)
00027382 <AmiBlitz3.ab3@9839>   MOVE.l D7,D1
00027388 <AmiBlitz3.ab3@9840>   MOVEA.l _dosbase,A6
0002738C <AmiBlitz3.ab3@9841> JMP _Close(A6)
0002738E <AmiBlitz3.ab3@9844> RTS
00027394 <AmiBlitz3.ab3@9850>   CLR.w number_of_objects
0002739A <AmiBlitz3.ab3@9851>   MOVEA.l end_of_tokenlist,A3
000273A0 <AmiBlitz3.ab3@9852>   MOVEA.l libpointer,A2
000273A4 <AmiBlitz3.ab3@9855>     CMPA.w #$0,A2
000273A8 <AmiBlitz3.ab3@9856>     BEQ.w JL_0_72D8                                        ; <-- abbruch mit RTS
000273AC <AmiBlitz3.ab3@9858>     MOVE.w $4(A2),D7                                       ; <-- get tokennumber
000273B0 <AmiBlitz3.ab3@9859>     BMI.w JL_0_7226
000273B2 <AmiBlitz3.ab3@9860>       LSL.w #7,D7
000273B4 <AmiBlitz3.ab3@9861>       ADDQ.w #1,D7
000273B8 <AmiBlitz3.ab3@9862>       MOVE.w D7,$E(A2)
000273BC <AmiBlitz3.ab3@9865>     LEA $30(A2),A1
000273C2 <AmiBlitz3.ab3@9866>     LEA temp1,A4
000273C4 <AmiBlitz3.ab3@9869>       MOVE.w (A1),D0
000273C8 <AmiBlitz3.ab3@9870>       BMI.w JL_0_72AE
000273CA <AmiBlitz3.ab3@9871>       MOVE.l A1,(A4)
000273CC <AmiBlitz3.ab3@9872>       MOVEA.l A1,A4
000273CE <AmiBlitz3.ab3@9873>       ADDQ.w #2,A4
000273D0 <AmiBlitz3.ab3@9874>       ADDQ.w #6,A1
000273D4 <AmiBlitz3.ab3@9875>       CMP.w #$8,D0
000273D8 <AmiBlitz3.ab3@9876>       BEQ.w JL_0_7290
000273DC <AmiBlitz3.ab3@9877>         ANDI.w #$F,D0
000273E0 <AmiBlitz3.ab3@9878>         BNE.w JL_0_725C
000273E4 <AmiBlitz3.ab3@9879>           BSR.w skiplibreg
000273E8 <AmiBlitz3.ab3@9880>           LEA $C(A1),A1
000273EA <AmiBlitz3.ab3@9881>           ADDQ.w #1,D7
000273EE <AmiBlitz3.ab3@9882> BRA.w JL_0_7230
000273F2 <AmiBlitz3.ab3@9885>     BTST #$2,D0
000273F6 <AmiBlitz3.ab3@9886>     BEQ.w JL_0_7274
000273F8 <AmiBlitz3.ab3@9887>       ADDQ.w #4,A1
000273FA <AmiBlitz3.ab3@9890>         TST.b (A1)+
000273FE <AmiBlitz3.ab3@9891>       BPL.w JL_0_7266
00027402 <AmiBlitz3.ab3@9892>       BSR.w aligna1
00027406 <AmiBlitz3.ab3@9893> BRA.w JL_0_7290
00027408 <AmiBlitz3.ab3@9896>       MOVE.w (A1)+,D0
0002740C <AmiBlitz3.ab3@9897>       BMI.w JL_0_7290
00027410 <AmiBlitz3.ab3@9898>       ANDI.w #$FF,D0
00027412 <AmiBlitz3.ab3@9899>       ADDA.w D0,A1
00027416 <AmiBlitz3.ab3@9900>       BSR.w aligna1
0002741A <AmiBlitz3.ab3@9901>       BSR.w skiplibreg
0002741E <AmiBlitz3.ab3@9902>       LEA $C(A1),A1
00027422 <AmiBlitz3.ab3@9903> BRA.w JL_0_7274
00027424 <AmiBlitz3.ab3@9906>     MOVE.l A1,(A3)
00027426 <AmiBlitz3.ab3@9907>     MOVEA.l A1,A3
00027428 <AmiBlitz3.ab3@9908>     ADDQ.w #4,A1
0002742A <AmiBlitz3.ab3@9909>     MOVE.w D7,(A1)+
0002742C <AmiBlitz3.ab3@9912>       TST.b (A1)+
00027430 <AmiBlitz3.ab3@9913>     BNE.w JL_0_7298
00027432 <AmiBlitz3.ab3@9916>       TST.b (A1)+
00027436 <AmiBlitz3.ab3@9917>     BNE.w JL_0_729E
0002743A <AmiBlitz3.ab3@9919>     BSR.w aligna1
0002743C <AmiBlitz3.ab3@9920>     ADDQ.w #1,D7
00027440 <AmiBlitz3.ab3@9921> BRA.w JL_0_7230
00027444 <AmiBlitz3.ab3@9924>     TST.w $4(A2)
00027448 <AmiBlitz3.ab3@9925>      BMI.w JL_0_72BA
0002744C <AmiBlitz3.ab3@9926>     MOVE.w D7,$10(A2)
0002744E <AmiBlitz3.ab3@9929>     ADDQ.w #2,A1
00027450 <AmiBlitz3.ab3@9930>     TST.l (A1)+
00027454 <AmiBlitz3.ab3@9931>      BEQ.w JL_0_72CC
0002745A <AmiBlitz3.ab3@9932>     ADDQ.w #1,number_of_objects
0002745E <AmiBlitz3.ab3@9933>     LEA $16(A1),A1
00027460 <AmiBlitz3.ab3@9936>     SUBA.l A2,A1
00027464 <AmiBlitz3.ab3@9937>     MOVE.l A1,$12(A2)
00027466 <AmiBlitz3.ab3@9938>     MOVEA.l (A2),A2
0002746A <AmiBlitz3.ab3@9939> BRA.w JL_0_720E
0002746C <AmiBlitz3.ab3@9942>   CLR.l (A3)
00027472 <AmiBlitz3.ab3@9943> 
00027478 <AmiBlitz3.ab3@9944>   MOVE.l A7,errstack
00027482 <AmiBlitz3.ab3@9945>   MOVE.l #AL_0_730E,errcont
0002748A <AmiBlitz3.ab3@9946>   MOVE.w #$FFFF,ezerr
0002748E <AmiBlitz3.ab3@9947>   MOVE.w #$FFFA,D1
00027492 <AmiBlitz3.ab3@9948>    BSR.w JL_0_6F38
00027498 <AmiBlitz3.ab3@9949>   MOVE.l A1,tempvm
0002749C <AmiBlitz3.ab3@9950>   MOVE.w #$FDA7,D1
000274A0 <AmiBlitz3.ab3@9951>    BSR.w JL_0_6F38
000274A6 <AmiBlitz3.ab3@9952>   MOVE.l A1,ffplib
000274A8 <AmiBlitz3.ab3@9955> RTS
000274AC <AmiBlitz3.ab3@9958> ffplib:  Ds.l 1
000274AE <AmiBlitz3.ab3@9962>     TST.w (A1)+
000274B2 <AmiBlitz3.ab3@9963>     BEQ.w JL_0_7320
000274B4 <AmiBlitz3.ab3@9964>     ADDQ.w #2,A1
000274B8 <AmiBlitz3.ab3@9965> BRA.w skiplibreg
000274BA <AmiBlitz3.ab3@9968> RTS
000274BC <AmiBlitz3.ab3@9972>   EXG.l A1,A0
000274C0 <AmiBlitz3.ab3@9973>   BSR.w aligna1
000274C2 <AmiBlitz3.ab3@9974>   EXG.l A1,A0
000274C4 <AmiBlitz3.ab3@9975> RTS
000274C6 <AmiBlitz3.ab3@9978>   EXG.l D0,A1
000274C8 <AmiBlitz3.ab3@9979>   ADDQ.l #1,D0
000274CC <AmiBlitz3.ab3@9980>   BCLR #$0,D0
000274CE <AmiBlitz3.ab3@9981>   EXG.l D0,A1
000274D0 <AmiBlitz3.ab3@9982> RTS
000274D6 <AmiBlitz3.ab3@9986>   MOVEA.l _execbase,A6
000274DC <AmiBlitz3.ab3@9987>   MOVEA.l ptr_userlibs,A2
000274DE <AmiBlitz3.ab3@9988>   MOVE.l (A2),D0
000274E0 <AmiBlitz3.ab3@9989>   CLR.l (A2)
000274E2 <AmiBlitz3.ab3@9990>   MOVEA.l D0,A2
000274E6 <AmiBlitz3.ab3@9993>     CMPA.w #$0,A2
000274EA <AmiBlitz3.ab3@9994>     BEQ.w free_userlib
000274EE <AmiBlitz3.ab3@9996>     MOVE.l $20(A2),D0
000274F2 <AmiBlitz3.ab3@9997>     BEQ.b JL_0_7360
000274F4 <AmiBlitz3.ab3@9998>       LSL.l #2,D0
000274FA <AmiBlitz3.ab3@9999>       MOVE.l mempool,a0
000274FE <AmiBlitz3.ab3@10000>       MOVEA.l $24(A2),A1
00027502 <AmiBlitz3.ab3@10001>       JSR _FreePooled(A6)
00027504 <AmiBlitz3.ab3@10004>     MOVEA.l A2,A1
00027508 <AmiBlitz3.ab3@10005>     MOVE.l $6(A1),D0
0002750E <AmiBlitz3.ab3@10006>     MOVE.l mempool,a0
00027510 <AmiBlitz3.ab3@10007>     MOVEA.l (A2),A2
00027516 <AmiBlitz3.ab3@10008>     MOVEA.l _execbase,A6
0002751A <AmiBlitz3.ab3@10009>     JSR _FreePooled(A6)
0002751E <AmiBlitz3.ab3@10010> BRA.w JL_0_7348
00027522 <AmiBlitz3.ab3@10014>   BSR.w free_userlibs
00027528 <AmiBlitz3.ab3@10015>   MOVEA.l _execbase,A6
0002752E <AmiBlitz3.ab3@10016>   CLR.l libpointer
00027534 <AmiBlitz3.ab3@10017>   MOVEA.l end_of_tokenlist,A0
00027536 <AmiBlitz3.ab3@10018>   CLR.l (A0)
0002753C <AmiBlitz3.ab3@10020>   MOVE.l size_acidlibs,D0
00027540 <AmiBlitz3.ab3@10021>   BEQ.b JL_0_73A2
00027546 <AmiBlitz3.ab3@10022>     MOVE.l ptr_acidlibs,D1
0002754A <AmiBlitz3.ab3@10023>     BEQ.b JL_0_73A2
00027550 <AmiBlitz3.ab3@10024>       CLR.l ptr_acidlibs
00027552 <AmiBlitz3.ab3@10025>       MOVEA.l D1,A1
00027558 <AmiBlitz3.ab3@10026>       MOVE.l mempool,a0
0002755E <AmiBlitz3.ab3@10027>       MOVEA.l _execbase,A6
00027562 <AmiBlitz3.ab3@10028>       JSR _FreePooled(A6)                                 ; free acidlibs
00027568 <AmiBlitz3.ab3@10031>   MOVE.l size_deflibs,D0
0002756C <AmiBlitz3.ab3@10032>   BEQ.b JL_0_73BE
00027572 <AmiBlitz3.ab3@10033>     MOVE.l ptr_deflibs,D1
00027576 <AmiBlitz3.ab3@10034>     BEQ.b JL_0_73BE
0002757C <AmiBlitz3.ab3@10035>       CLR.l ptr_deflibs                                    ; d0: memorySize
0002757E <AmiBlitz3.ab3@10036>       MOVEA.l D1,A1                                        ; a1: memory
00027584 <AmiBlitz3.ab3@10037>       MOVE.l mempool,a0                                    ; a0: poolHeader
0002758A <AmiBlitz3.ab3@10038>       MOVEA.l _execbase,A6
0002758E <AmiBlitz3.ab3@10039>       JSR _FreePooled(A6)                                  ; free deflibs
00027590 <AmiBlitz3.ab3@10042> RTS
00027596 <AmiBlitz3.ab3@10046>   MOVEA.l currentmacroaddr,A0
00027598 <AmiBlitz3.ab3@10047>   MOVEA.l (A0),A2
0002759A <AmiBlitz3.ab3@10048>   CLR.l (A0)
000275A0 <AmiBlitz3.ab3@10049>   MOVEA.l _execbase,A6
000275A4 <AmiBlitz3.ab3@10052>     CMPA.w #$0,A2
000275A8 <AmiBlitz3.ab3@10053>     BEQ.w JL_0_73FA
000275AA <AmiBlitz3.ab3@10054>     MOVEQ.l #$00,D0
000275AE <AmiBlitz3.ab3@10055>     MOVE.w $8(A2),D0
000275B2 <AmiBlitz3.ab3@10056>     BEQ.w JL_0_73E8
000275B6 <AmiBlitz3.ab3@10057>     MOVEA.l $4(A2),A1
000275BC <AmiBlitz3.ab3@10058>     MOVE.l mempool,a0
000275C0 <AmiBlitz3.ab3@10059>     JSR _FreePooled(A6)
000275C2 <AmiBlitz3.ab3@10062>     MOVEA.l A2,A1
000275C4 <AmiBlitz3.ab3@10063>     MOVEA.l (A2),A2
000275C6 <AmiBlitz3.ab3@10064>     MOVEQ.l #$00,D0
000275CA <AmiBlitz3.ab3@10065>     MOVE.b $C(A1),D0
000275D0 <AmiBlitz3.ab3@10066>     MOVE.l mempool2,a0
000275D4 <AmiBlitz3.ab3@10067>     JSR _FreePooled(A6)
000275D8 <AmiBlitz3.ab3@10068> BRA.w JL_0_73CE
000275DA <AmiBlitz3.ab3@10071> RTS
000275E0 <AmiBlitz3.ab3@10075>   MOVEA.l templabel,A2
000275E6 <AmiBlitz3.ab3@10076>   CLR.l templabel
000275E8 <AmiBlitz3.ab3@10077> RTS
000275EE <AmiBlitz3.ab3@10080>   MOVEA.l _execbase,A6                                     ;??looks like dead code?
000275F2 <AmiBlitz3.ab3@10083>     CMPA.w #$0,A2
000275F6 <AmiBlitz3.ab3@10084>     BEQ.w JL_0_7426
000275F8 <AmiBlitz3.ab3@10085>     MOVEQ.l #$00,D0
000275FC <AmiBlitz3.ab3@10086>     MOVE.b $E(A2),D0                                       ;labeltemp
000275FE <AmiBlitz3.ab3@10087>     MOVEA.l A2,A1
00027600 <AmiBlitz3.ab3@10088>     MOVEA.l (A2),A2
00027606 <AmiBlitz3.ab3@10089>     MOVE.l mempool2,a0
0002760A <AmiBlitz3.ab3@10091> BRA.w JL_0_740C
0002760C <AmiBlitz3.ab3@10094> RTS
00027612 <AmiBlitz3.ab3@10098>   MOVEA.l data1,A4
00027618 <AmiBlitz3.ab3@10099>   CMPA.l data2at,A4
0002761C <AmiBlitz3.ab3@10100>   BCC.w JL_0_7442
0002761E <AmiBlitz3.ab3@10101>     MOVE.b D1,(A4)+
00027624 <AmiBlitz3.ab3@10102>     MOVE.l A4,data1
00027626 <AmiBlitz3.ab3@10103> RTS
0002762E <AmiBlitz3.ab3@10106>   MOVE.w #$FFFF,dontwrite                                  ;move #-1, org source
00027634 <AmiBlitz3.ab3@10107>   ADDQ.l #1,data1
00027636 <AmiBlitz3.ab3@10108> RTS
00027638 <AmiBlitz3.ab3@10112>   SWAP D1
0002763C <AmiBlitz3.ab3@10113>   BSR.w pokedata1
0002763E <AmiBlitz3.ab3@10114>   SWAP D1
00027644 <AmiBlitz3.ab3@10117>   MOVEA.l data1,A4
0002764A <AmiBlitz3.ab3@10118>   CMPA.l data2at,A4
0002764E <AmiBlitz3.ab3@10119>    BCC.w JL_0_7474
00027650 <AmiBlitz3.ab3@10120>   MOVE.w D1,(A4)+
00027656 <AmiBlitz3.ab3@10121>   MOVE.l A4,data1
00027658 <AmiBlitz3.ab3@10122> RTS
00027660 <AmiBlitz3.ab3@10125>   MOVE.w #$FFFF,dontwrite
00027666 <AmiBlitz3.ab3@10126>   ADDQ.l #2,data1
00027668 <AmiBlitz3.ab3@10127> RTS
0002766E <AmiBlitz3.ab3@10131>   MOVE.l data1,D3                                      ;write local string/type allocs
00027670 <AmiBlitz3.ab3@10132>   MOVEQ.l #$00,D4
00027674 <AmiBlitz3.ab3@10135>   CMPA.w #$0,A2
00027678 <AmiBlitz3.ab3@10136>    BEQ.w JL_0_74CAc
0002767C <AmiBlitz3.ab3@10137>   TST.w $6(A2)
00027680 <AmiBlitz3.ab3@10138>    BNE.w JL_0_74C4c
00027684 <AmiBlitz3.ab3@10139>   MOVEA.l $A(A2),A3
0002768C <AmiBlitz3.ab3@10140>   CMPI.l #$100,$4(A3)
00027690 <AmiBlitz3.ab3@10141>    BCS.w JL_0_74C4c
00027694 <AmiBlitz3.ab3@10142>   MOVE.w $4(A2),D1
00027698 <AmiBlitz3.ab3@10143>    BSR.w pokedata1
0002769C <AmiBlitz3.ab3@10144>   MOVE.w $8(A3),D1
000276A0 <AmiBlitz3.ab3@10145>    BSR.w pokedata1
000276A2 <AmiBlitz3.ab3@10146>   ADDQ.w #1,D4
000276A4 <AmiBlitz3.ab3@10149>    MOVEA.l (A2),A2
000276A8 <AmiBlitz3.ab3@10150> BRA.w JL_0_7492c
000276AA <AmiBlitz3.ab3@10153>    TST.w D4
000276AE <AmiBlitz3.ab3@10154>    BEQ.w JL_0_74E0
000276B2 <AmiBlitz3.ab3@10155>   MOVE.w #$FF37,D1
000276B6 <AmiBlitz3.ab3@10156>    BSR.w uselib
000276BA <AmiBlitz3.ab3@10157>   MOVE.w #$FFFA,D1
000276BE <AmiBlitz3.ab3@10158> BRA.w uselib
000276C4 <AmiBlitz3.ab3@10166>   MOVEA.l varbase,A2                                       ;add alloc mem for types/strings global
000276CA <AmiBlitz3.ab3@10169>   MOVE.l data1,D3
000276CC <AmiBlitz3.ab3@10170>   MOVEQ.l #$00,D4
000276D2 <AmiBlitz3.ab3@10171>   TST.b iserror
000276D6 <AmiBlitz3.ab3@10172>   BEQ JL_0_7492
000276D8 <AmiBlitz3.ab3@10173>   RTS
000276DC <AmiBlitz3.ab3@10175>    CMPA.w #$0,A2
000276E0 <AmiBlitz3.ab3@10176>    BEQ.w JL_0_74CA
000276E4 <AmiBlitz3.ab3@10177>   TST.w $6(A2)
000276E8 <AmiBlitz3.ab3@10178>    BNE.w JL_0_74C4
000276EC <AmiBlitz3.ab3@10179>   MOVEA.l $A(A2),A3
000276F4 <AmiBlitz3.ab3@10180>   CMPI.l #$100,$4(A3)
000276F8 <AmiBlitz3.ab3@10181>    BCS.w JL_0_74C4
000276FC <AmiBlitz3.ab3@10182>   MOVE.w $4(A2),D1
00027700 <AmiBlitz3.ab3@10183>    BSR.w pokedata1
00027704 <AmiBlitz3.ab3@10184>   MOVE.w $8(A3),D1
00027708 <AmiBlitz3.ab3@10185>    BSR.w pokedata1
0002770A <AmiBlitz3.ab3@10186>   ADDQ.w #1,D4
0002770C <AmiBlitz3.ab3@10189>   MOVEA.l (A2),A2
00027710 <AmiBlitz3.ab3@10190> BRA.w JL_0_7492
00027716 <AmiBlitz3.ab3@10194>   MOVEA.l sharebase,A2
0002771A <AmiBlitz3.ab3@10197>   CMPA.w #$0,A2
0002771E <AmiBlitz3.ab3@10198>    BEQ.w JL_0_74CAb
00027722 <AmiBlitz3.ab3@10200>   TST.w $6(A2)
00027726 <AmiBlitz3.ab3@10201>    BNE.w JL_0_74C4b
0002772A <AmiBlitz3.ab3@10202>   MOVEA.l $A(A2),A3
00027732 <AmiBlitz3.ab3@10203>   CMPI.l #$100,$4(A3)
00027736 <AmiBlitz3.ab3@10204>    BCS.w JL_0_74C4b
0002773A <AmiBlitz3.ab3@10205>   MOVE.w $4(A2),D1
0002773E <AmiBlitz3.ab3@10206>    BSR.w pokedata1
00027742 <AmiBlitz3.ab3@10207>   MOVE.w $8(A3),D1
00027746 <AmiBlitz3.ab3@10208>    BSR.w pokedata1
00027748 <AmiBlitz3.ab3@10209>   ADDQ.w #1,D4
0002774A <AmiBlitz3.ab3@10212>   MOVEA.l (A2),A2
0002774E <AmiBlitz3.ab3@10213> BRA.w JL_0_7492b
00027750 <AmiBlitz3.ab3@10216>    TST.w D4
00027754 <AmiBlitz3.ab3@10217>    BEQ.w JL_0_74E0
00027758 <AmiBlitz3.ab3@10218>   MOVE.w #$FF37,D1
0002775C <AmiBlitz3.ab3@10219>    BSR.w uselib                                            ;use statics lib
00027760 <AmiBlitz3.ab3@10220>   MOVE.w #$FFFA,D1                                         ;use memlib
00027764 <AmiBlitz3.ab3@10221> BRA.w uselib
00027766 <AmiBlitz3.ab3@10224> RTS
0002776C <AmiBlitz3.ab3@10228>   MOVE.w numtoa2,D1
00027770 <AmiBlitz3.ab3@10229>    BSR.w writeword
00027774 <AmiBlitz3.ab3@10230>    BSR.w addoff
00027776 <AmiBlitz3.ab3@10231>   MOVE.l D3,D1
0002777A <AmiBlitz3.ab3@10232>    BSR.w writelong
0002777C <AmiBlitz3.ab3@10233>   SUBQ.w #1,D4
00027782 <AmiBlitz3.ab3@10234>   MOVE.w D4,endarray+2
00027788 <AmiBlitz3.ab3@10235>   MOVE.l endarray,D1
0002778C <AmiBlitz3.ab3@10236> BRA.w writelong
0002778E <AmiBlitz3.ab3@10240>   MOVE.l D3,-(A7)
00027794 <AmiBlitz3.ab3@10243>   MOVEA.l _dosbase,A6
00027798 <AmiBlitz3.ab3@10244>   JSR _Write(a6)
0002779A <AmiBlitz3.ab3@10246>   CMP.l (A7)+,D0
0002779E <AmiBlitz3.ab3@10247>    BNE.w JL_0_7516
000277A0 <AmiBlitz3.ab3@10248> RTS
000277A2 <AmiBlitz3.ab3@10251>   MOVE.l D7,D1
000277A8 <AmiBlitz3.ab3@10253>   MOVEA.l _dosbase,A6
000277AC <AmiBlitz3.ab3@10254>   JSR _Close(a6)
000277B2 <AmiBlitz3.ab3@10257> JMP error_create_exe
000277B8 <AmiBlitz3.ab3@10266> 
000277BE <AmiBlitz3.ab3@10267>   MOVE.l A7,errstack
000277C2 <AmiBlitz3.ab3@10268>   MOVEM.l d2-d7/a2-a6,-(a7)
000277CC <AmiBlitz3.ab3@10269>   MOVE.l #AL_0_7790,errcont
000277D2 <AmiBlitz3.ab3@10270>    JSR call_setpointerbusy
000277DA <AmiBlitz3.ab3@10271>   MOVE.w #$FFFF,anyerrs
000277E4 <AmiBlitz3.ab3@10272>   CMP.l #-1,chipstart
000277E8 <AmiBlitz3.ab3@10273>   BEQ 'l01
000277EE <AmiBlitz3.ab3@10274>   MOVE.l chipend,d1
000277F0 <AmiBlitz3.ab3@10275>   ADDQ.l #3,d1
000277F6 <AmiBlitz3.ab3@10276>   AND.l #$fffffffc,d1                                      ;bug
000277FC <AmiBlitz3.ab3@10277>   MOVE.l d1,chipend
000277FE <AmiBlitz3.ab3@10278>   MOVE.l d1,a1
00027804 <AmiBlitz3.ab3@10279>   MOVE.l chipstart,a0
00027806 <AmiBlitz3.ab3@10280>   MOVE.l a1,d1
00027808 <AmiBlitz3.ab3@10281>   SUB.l a0,d1
0002780E <AmiBlitz3.ab3@10282>   MOVE.l d1,chipsize
00027818 <AmiBlitz3.ab3@10285>   CMP.l #-1,bssstart
0002781C <AmiBlitz3.ab3@10286>   BEQ 'l11
00027822 <AmiBlitz3.ab3@10287>   MOVE.l realbssend,a1
00027828 <AmiBlitz3.ab3@10288>   MOVE.l bssstart,a0
0002782A <AmiBlitz3.ab3@10289>   MOVE.l a1,d1
0002782C <AmiBlitz3.ab3@10290>   SUB.l a0,d1
00027832 <AmiBlitz3.ab3@10291>   MOVE.l d1,bsssize
00027836 <AmiBlitz3.ab3@10292>   BEQ 'l11
00027838 <AmiBlitz3.ab3@10295>   TST.b (a0)+
0002783C <AmiBlitz3.ab3@10296>   BEQ 'l31
00027842 <AmiBlitz3.ab3@10297>   TST.b debugmode
00027846 <AmiBlitz3.ab3@10298>   BEQ 'l1
0002784C <AmiBlitz3.ab3@10299>   TST.b exdebug
00027850 <AmiBlitz3.ab3@10300>   BNE 'l31
00027856 <AmiBlitz3.ab3@10303>   MOVE.l #nodata,-(a7)
0002785C <AmiBlitz3.ab3@10304> JMP handle_compileerror
0002785E <AmiBlitz3.ab3@10307>   CMP.l a0,a1
00027862 <AmiBlitz3.ab3@10308>   BGT 'l32
00027868 <AmiBlitz3.ab3@10309>   MOVE.l bssend,d1
0002786A <AmiBlitz3.ab3@10310>   ADDQ.l #3,d1
00027870 <AmiBlitz3.ab3@10311>   AND.l #$fffffffc,d1                                      ;bug
00027876 <AmiBlitz3.ab3@10312>   MOVE.l d1,bssend
00027878 <AmiBlitz3.ab3@10313>   MOVE.l d1,a1
0002787E <AmiBlitz3.ab3@10314>   MOVE.l bssstart,a0
00027880 <AmiBlitz3.ab3@10315>   MOVE.l a1,d1
00027882 <AmiBlitz3.ab3@10316>   SUB.l a0,d1
00027888 <AmiBlitz3.ab3@10317>   MOVE.l d1,bsssize
0002788C <AmiBlitz3.ab3@10320>   MOVEM.l d5-d7/d3,-(a7)
00027892 <AmiBlitz3.ab3@10321>   MOVE.w dontwrite,D1
00027896 <AmiBlitz3.ab3@10322>   BNE.w JL_0_757C
0002789C <AmiBlitz3.ab3@10323>   MOVE.l chipsize,d5
000278A2 <AmiBlitz3.ab3@10324>   MOVE.l bsssize,d3
000278A8 <AmiBlitz3.ab3@10325>   MOVE.l chipstart,d7
000278AE <AmiBlitz3.ab3@10326>   MOVE.l bssstart,d6
000278B4 <AmiBlitz3.ab3@10327>   MOVEA.l hunkoffsetbase,A2
000278BA <AmiBlitz3.ab3@10328>   MOVEA.l destbufferstart,A1
000278BC <AmiBlitz3.ab3@10329>   MOVE.l A1,D2
000278C2 <AmiBlitz3.ab3@10330>   ADD.l noinits,D2
000278C8 <AmiBlitz3.ab3@10331>   CLR.l hunkoffsetnum
000278CC <AmiBlitz3.ab3@10334>   CMPA.w #$0,A2
000278D0 <AmiBlitz3.ab3@10335>    BEQ.w JL_0_757C
000278D4 <AmiBlitz3.ab3@10336>   MOVE.l $4(A2),D0
000278D8 <AmiBlitz3.ab3@10337>    LEA $0(a1,d0.l),a0
000278DA <AmiBlitz3.ab3@10338>    MOVE.l (a0),d1
000278DC <AmiBlitz3.ab3@10339>   TST.l d1
000278E0 <AmiBlitz3.ab3@10340>    BMI.w 'lm1
000278E8 <AmiBlitz3.ab3@10341>   MOVE.b #0,newhunk
000278F2 <AmiBlitz3.ab3@10342>   CMP.l #-1,chipstart
000278F6 <AmiBlitz3.ab3@10343>   BEQ 'l10
000278FC <AmiBlitz3.ab3@10344>   CMP.l chipstart,d1
00027900 <AmiBlitz3.ab3@10345>   BLT 'l10
00027908 <AmiBlitz3.ab3@10346>   MOVE.b #1,newhunk
0002790E <AmiBlitz3.ab3@10347>   CMP.l chipend,d1
00027912 <AmiBlitz3.ab3@10348>   BGE 'l110
00027914 <AmiBlitz3.ab3@10349>   SUB.l d7,(a0)
0002791C <AmiBlitz3.ab3@10350>   ADD.l #$80000000,4(a2)
00027920 <AmiBlitz3.ab3@10351> BRA JL_0_7576
00027924 <AmiBlitz3.ab3@10354>   SUB.l d5,0(a0)
0002792E <AmiBlitz3.ab3@10357>   CMP.l #-1,bssstart
00027932 <AmiBlitz3.ab3@10358>     BEQ 'l11
00027938 <AmiBlitz3.ab3@10359>   CMP.l bssstart,d1
0002793C <AmiBlitz3.ab3@10360>   BLT 'l11
00027942 <AmiBlitz3.ab3@10361>   CMP.l bssend,d1
00027946 <AmiBlitz3.ab3@10362>   BGE 'l111
0002794C <AmiBlitz3.ab3@10363>   TST.b newhunk
00027950 <AmiBlitz3.ab3@10364>   BEQ 'ln1
00027952 <AmiBlitz3.ab3@10365>   ADD.l d5,(a0)
00027954 <AmiBlitz3.ab3@10368>   SUB.l d6,(a0)
0002795C <AmiBlitz3.ab3@10369>   ADD.l #$40000000,4(a2)
00027960 <AmiBlitz3.ab3@10370> BRA JL_0_7576
00027964 <AmiBlitz3.ab3@10373>   SUB.l d3,0(a0)
00027966 <AmiBlitz3.ab3@10376>   SUB.l D2,(A0)
0002796C <AmiBlitz3.ab3@10379>   ADDQ.l #1,hunkoffsetnum
0002796E <AmiBlitz3.ab3@10382>    MOVEA.l (A2),A2
00027972 <AmiBlitz3.ab3@10383> BRA.w JL_0_755E
00027976 <AmiBlitz3.ab3@10387>   MOVEM.l (a7)+,d5-d7/d3
0002797C <AmiBlitz3.ab3@10388>   MOVE.l ptr_newexefilename,D1
00027982 <AmiBlitz3.ab3@10389>   MOVE.l #HUNK_RELOC_8__MODE_NEWFILE,D2
00027988 <AmiBlitz3.ab3@10390>   MOVEA.l _dosbase,A6
0002798C <AmiBlitz3.ab3@10391>    JSR _Open(A6)
0002798E <AmiBlitz3.ab3@10392>   MOVE.l D0,D7
00027992 <AmiBlitz3.ab3@10393>    BEQ.w execerr
00027998 <AmiBlitz3.ab3@10394>   MOVE.l objlen,D0
0002799E <AmiBlitz3.ab3@10395>   SUB.l #moremem,d0
000279A4 <AmiBlitz3.ab3@10396>   SUB.l noinits,D0
000279AE <AmiBlitz3.ab3@10397>   CMP.l #-1,bssstart
000279B2 <AmiBlitz3.ab3@10398>   BEQ 'l60
000279B8 <AmiBlitz3.ab3@10399>   SUB.l bsssize,d0
000279BE <AmiBlitz3.ab3@10400>   SUB.l chipsize,d0
000279C2 <AmiBlitz3.ab3@10401> BRA.s 'l61
000279CC <AmiBlitz3.ab3@10404>   CMP.l #-1,chipstart
000279D0 <AmiBlitz3.ab3@10405>   BEQ 'l61
000279D6 <AmiBlitz3.ab3@10406>   SUB.l bsssize,d0
000279DC <AmiBlitz3.ab3@10407>   SUB.l chipsize,d0
000279DE <AmiBlitz3.ab3@10410>   ADDQ.l #3,D0
000279E0 <AmiBlitz3.ab3@10411>   LSR.l #2,D0
000279E6 <AmiBlitz3.ab3@10412>   MOVE.l D0,tstsize1
000279EC <AmiBlitz3.ab3@10413>   MOVE.l D0,tstsize2
000279EE <AmiBlitz3.ab3@10414>   MOVE.l D7,D1
000279F4 <AmiBlitz3.ab3@10415>   MOVE.l #tsthead,D2                                      ;hunkbegin
000279F6 <AmiBlitz3.ab3@10416>   MOVEQ.l #$20,D3
00027A00 <AmiBlitz3.ab3@10417>   CMP.l #-1,bssstart
00027A04 <AmiBlitz3.ab3@10418>   BEQ 'lb1
00027A0E <AmiBlitz3.ab3@10419>   CMP.l #-1,chipstart
00027A12 <AmiBlitz3.ab3@10420>   BEQ 'lb1
00027A1C <AmiBlitz3.ab3@10421>   MOVE.l #1,bssnum
00027A26 <AmiBlitz3.ab3@10422>   MOVE.l #2,chipnum
00027A28 <AmiBlitz3.ab3@10423>   MOVEQ.l #$28,D3
00027A2E <AmiBlitz3.ab3@10424>   MOVE.l bsssize,d2
00027A30 <AmiBlitz3.ab3@10425>   ADDQ.l #3,d2
00027A32 <AmiBlitz3.ab3@10426>   ASR.l #2,d2
00027A38 <AmiBlitz3.ab3@10427>   MOVE.l d2,hunkend+8
00027A3E <AmiBlitz3.ab3@10428>   MOVE.l d2,bsssize3
00027A44 <AmiBlitz3.ab3@10429>   MOVE.l chipsize,d2
00027A46 <AmiBlitz3.ab3@10430>   ADDQ.l #3,d2
00027A48 <AmiBlitz3.ab3@10431>   ASR.l #2,d2
00027A4E <AmiBlitz3.ab3@10432>   MOVE.l d2,chipsize2
00027A58 <AmiBlitz3.ab3@10433>   ADD.l #$40000000,chipsize2
00027A5E <AmiBlitz3.ab3@10434>   MOVE.l d2,hunkend2+8
00027A64 <AmiBlitz3.ab3@10435>   MOVE.l D0,tstsize1c
00027A6A <AmiBlitz3.ab3@10436>   MOVE.l D0,tstsize2c
00027A70 <AmiBlitz3.ab3@10437>   MOVE.l #hunkbegin2,d2
00027A74 <AmiBlitz3.ab3@10438> BRA 'l100
00027A7E <AmiBlitz3.ab3@10441>   CMP.l #-1,bssstart
00027A82 <AmiBlitz3.ab3@10442>   BEQ 'l10
00027A8C <AmiBlitz3.ab3@10443>   MOVE.l #1,bssnum
00027A8E <AmiBlitz3.ab3@10444>   MOVEQ.l #$24,D3
00027A94 <AmiBlitz3.ab3@10445>   MOVE.l bsssize,d2
00027A96 <AmiBlitz3.ab3@10446>   ADDQ.l #3,d2
00027A98 <AmiBlitz3.ab3@10447>   ASR.l #2,d2
00027A9E <AmiBlitz3.ab3@10448>   MOVE.l d2,hunkend+8
00027AA4 <AmiBlitz3.ab3@10449>   MOVE.l d2,bsssize2
00027AAA <AmiBlitz3.ab3@10450>   MOVE.l D0,tstsize1b
00027AB0 <AmiBlitz3.ab3@10451>   MOVE.l D0,tstsize2b
00027AB6 <AmiBlitz3.ab3@10452>   MOVE.l #hunkbegin,d2
00027AC0 <AmiBlitz3.ab3@10455>   CMP.l #-1,chipstart
00027AC4 <AmiBlitz3.ab3@10456>   BEQ 'l100
00027ACE <AmiBlitz3.ab3@10457>   MOVE.l #1,chipnum
00027AD0 <AmiBlitz3.ab3@10458>   MOVEQ.l #$24,D3
00027AD6 <AmiBlitz3.ab3@10459>   MOVE.l chipsize,d2
00027AD8 <AmiBlitz3.ab3@10460>   ADDQ.l #3,d2
00027ADA <AmiBlitz3.ab3@10461>   ASR.l #2,d2
00027AE0 <AmiBlitz3.ab3@10462>   MOVE.l d2,hunkend2+8
00027AE6 <AmiBlitz3.ab3@10463>   MOVE.l d2,bsssize2
00027AF0 <AmiBlitz3.ab3@10464>   ADD.l #$40000000,bsssize2
00027AF6 <AmiBlitz3.ab3@10465>   MOVE.l D0,tstsize1b
00027AFC <AmiBlitz3.ab3@10466>   MOVE.l D0,tstsize2b
00027B02 <AmiBlitz3.ab3@10467>   MOVE.l #hunkbegin,d2
00027B06 <AmiBlitz3.ab3@10470>    BSR.w mywrite
00027B0C <AmiBlitz3.ab3@10471>   MOVE.l destbufferstart,D2
00027B12 <AmiBlitz3.ab3@10472>   ADD.l noinits,D2
00027B18 <AmiBlitz3.ab3@10473>   MOVE.l objlen,D3
00027B1E <AmiBlitz3.ab3@10474>   SUB.l #moremem,d3
00027B24 <AmiBlitz3.ab3@10475>   SUB.l noinits,D3
00027B2E <AmiBlitz3.ab3@10476>   CMP.l #-1,bssstart
00027B32 <AmiBlitz3.ab3@10477>   BNE 'l40
00027B3C <AmiBlitz3.ab3@10478>   CMP.l #-1,chipstart
00027B40 <AmiBlitz3.ab3@10479>   BNE 'l40
00027B44 <AmiBlitz3.ab3@10480> BRA 'l41
00027B4A <AmiBlitz3.ab3@10483>   MOVE.l codeend,d1
00027B4C <AmiBlitz3.ab3@10484>     SUB.l d2,d1
00027B4E <AmiBlitz3.ab3@10485>     MOVE.l d1,d3
00027B54 <AmiBlitz3.ab3@10486>   SUB.l bsssize,d3
00027B5A <AmiBlitz3.ab3@10487>   SUB.l chipsize,d3
00027B5C <AmiBlitz3.ab3@10488>   MOVE.l D7,D1
00027B60 <AmiBlitz3.ab3@10489>   BSR.w mywrite
00027B66 <AmiBlitz3.ab3@10490>   MOVE.l objlen,D3
00027B6C <AmiBlitz3.ab3@10491>   SUB.l #moremem,d3
00027B72 <AmiBlitz3.ab3@10492>   SUB.l noinits,D3
00027B74 <AmiBlitz3.ab3@10493>   MOVE.l d3,d1
00027B7A <AmiBlitz3.ab3@10494>   MOVE.l destbufferstart,D2
00027B80 <AmiBlitz3.ab3@10495>   ADD.l noinits,D2
00027B82 <AmiBlitz3.ab3@10496>   ADD.l d2,d1
00027B88 <AmiBlitz3.ab3@10497>   SUB.l codeend,d1
00027B8A <AmiBlitz3.ab3@10498>   MOVE.l d1,d3
00027B90 <AmiBlitz3.ab3@10499>   MOVE.l codeend,d2
00027B92 <AmiBlitz3.ab3@10502>   MOVE.l d2,d1
00027B94 <AmiBlitz3.ab3@10503>   ADD.l d3,d1
00027B96 <AmiBlitz3.ab3@10504>   ADDQ.l #3,D1
00027B9C <AmiBlitz3.ab3@10505>   ANDI.l #$FFFFFFFC,D1
00027B9E <AmiBlitz3.ab3@10506>   SUB.l d2,d1
00027BA0 <AmiBlitz3.ab3@10507>   MOVE.l d1,d3
00027BA2 <AmiBlitz3.ab3@10508>   MOVE.l D7,D1
00027BA6 <AmiBlitz3.ab3@10509>    BSR.w mywrite
00027BB0 <AmiBlitz3.ab3@10510>   MOVE.l hunkoffsetcounter,tstsize3
00027BB4 <AmiBlitz3.ab3@10511>    BEQ.w JL_0_7646
00027BB6 <AmiBlitz3.ab3@10512>   MOVE.l D7,D1
00027BBC <AmiBlitz3.ab3@10513>   MOVE.l #tstend,D2
00027BBE <AmiBlitz3.ab3@10514>   MOVEQ.l #$04,D3
00027BC2 <AmiBlitz3.ab3@10515>    BSR.w mywrite
00027BC8 <AmiBlitz3.ab3@10516>    MOVEA.l _execbase,A6
00027BCE <AmiBlitz3.ab3@10517>    MOVE.l hunkoffsetcounter,d0
00027BD0 <AmiBlitz3.ab3@10518>    ASL.l #2,d0
00027BD6 <AmiBlitz3.ab3@10519>    ADD.l #12,d0
00027BD8 <AmiBlitz3.ab3@10520>    MOVEQ #0,d1
00027BDC <AmiBlitz3.ab3@10521>    JSR _AllocMem(a6)
00027BDE <AmiBlitz3.ab3@10522>    TST.l d0
00027BE2 <AmiBlitz3.ab3@10523>    BEQ nomem
00027BE8 <AmiBlitz3.ab3@10524>    MOVE.l noinits,D4
00027BEA <AmiBlitz3.ab3@10525>    MOVE.l d5,-(a7)
00027BEC <AmiBlitz3.ab3@10526>    MOVE.l d0,d5
00027BEE <AmiBlitz3.ab3@10527>    MOVE.l d0,a1
00027BF4 <AmiBlitz3.ab3@10528>    MOVEA.l hunkoffsetbase,A2
00027BFC <AmiBlitz3.ab3@10529>    MOVE.b #0,newhunk
00027C00 <AmiBlitz3.ab3@10532>   CMPA.w #$0,A2
00027C04 <AmiBlitz3.ab3@10533>    BEQ.w savehunk
00027C0A <AmiBlitz3.ab3@10534>   MOVE.l destbufferstart,D2
00027C10 <AmiBlitz3.ab3@10535>   ADD.l noinits,D2
00027C14 <AmiBlitz3.ab3@10536>   MOVE.l  $4(A2),d1
00027C18 <AmiBlitz3.ab3@10537>   BTST #31,d1
00027C1C <AmiBlitz3.ab3@10538>   BEQ 'lh1
00027C24 <AmiBlitz3.ab3@10539>   MOVE.b #1,newhunk
00027C28 <AmiBlitz3.ab3@10540> BRA 'lh3
00027C2C <AmiBlitz3.ab3@10543>   BTST #30,d1
00027C30 <AmiBlitz3.ab3@10544>   BEQ 'lh2
00027C38 <AmiBlitz3.ab3@10545>   MOVE.b #1,newhunk
00027C3C <AmiBlitz3.ab3@10546> BRA 'lh3
00027C3E <AmiBlitz3.ab3@10549>   ADD.l d1,d2
00027C44 <AmiBlitz3.ab3@10550>   CMP.l chipend,d2
00027C48 <AmiBlitz3.ab3@10551>   BLT 'l100
00027C4E <AmiBlitz3.ab3@10552>   SUB.l chipsize,d1
00027C54 <AmiBlitz3.ab3@10555>   CMP.l bssend,d2
00027C58 <AmiBlitz3.ab3@10556>   BLT 'l101
00027C5E <AmiBlitz3.ab3@10557>   SUB.l bsssize,d1
00027C60 <AmiBlitz3.ab3@10560>   MOVE.l d1,(a1)
00027C62 <AmiBlitz3.ab3@10561>   SUB.l D4,(A1)+
00027C64 <AmiBlitz3.ab3@10564>   MOVEA.l (A2),A2
00027C68 <AmiBlitz3.ab3@10565> BRA.w menu_createresidentfile__oloopb
00027C6A <AmiBlitz3.ab3@10569>   MOVE.l D7,D1
00027C70 <AmiBlitz3.ab3@10570>   MOVEA.l _dosbase,A6
00027C7A <AmiBlitz3.ab3@10571>   MOVE.l hunkoffsetnum,tstsize3
00027C7E <AmiBlitz3.ab3@10572>   BEQ 'ln1
00027C84 <AmiBlitz3.ab3@10573>   MOVE.l #tstend+4,d2
00027C86 <AmiBlitz3.ab3@10574>     MOVEQ #8,d3
00027C8A <AmiBlitz3.ab3@10575>    JSR _Write(A6)
00027C8C <AmiBlitz3.ab3@10576>   MOVE.l d7,d1
00027C92 <AmiBlitz3.ab3@10577>   MOVE.l hunkoffsetnum,d3
00027C94 <AmiBlitz3.ab3@10578>   ASL.l #2,d3
00027C96 <AmiBlitz3.ab3@10579>   MOVE.l d5,D2
00027C9A <AmiBlitz3.ab3@10580>   JSR _Write(a6)
00027CA0 <AmiBlitz3.ab3@10583>   TST.b newhunk
00027CA4 <AmiBlitz3.ab3@10584>   BEQ 'l10
00027CAA <AmiBlitz3.ab3@10585>   MOVEA.l hunkoffsetbase,A2
00027CAC <AmiBlitz3.ab3@10586>   MOVE.l d5,a0
00027CAE <AmiBlitz3.ab3@10587>   ADDQ #8,a0
00027CB6 <AmiBlitz3.ab3@10588>   MOVE.l bssnum,-4(a0)
00027CB8 <AmiBlitz3.ab3@10589>   MOVEQ #0,d6
00027CBC <AmiBlitz3.ab3@10592>   CMPA.w #$0,A2
00027CC0 <AmiBlitz3.ab3@10593>    BEQ.w 'lh3
00027CC6 <AmiBlitz3.ab3@10594>   MOVE.l destbufferstart,D2
00027CCC <AmiBlitz3.ab3@10595>   ADD.l noinits,D2
00027CD0 <AmiBlitz3.ab3@10596>   MOVE.l  $4(A2),d1
00027CD4 <AmiBlitz3.ab3@10597>   BTST #30,d1
00027CD8 <AmiBlitz3.ab3@10598>   BEQ 'lh1
00027CDC <AmiBlitz3.ab3@10599>   BCLR #30,d1
00027CDE <AmiBlitz3.ab3@10600>   MOVE.l d1,(a0)
00027CE0 <AmiBlitz3.ab3@10601>   SUB.l D4,(A0)+
00027CE2 <AmiBlitz3.ab3@10602>   ADDQ.l #1,d6
00027CE4 <AmiBlitz3.ab3@10605>   MOVE.l (a2),a2
00027CE8 <AmiBlitz3.ab3@10606> BRA 'lh2
00027CEA <AmiBlitz3.ab3@10609>   TST.l d6
00027CEE <AmiBlitz3.ab3@10610>     BEQ 'lh10
00027CF0 <AmiBlitz3.ab3@10611>     MOVE.l d5,a0
00027CF2 <AmiBlitz3.ab3@10612>     MOVE.l d6,(a0)
00027CF4 <AmiBlitz3.ab3@10613>     MOVE.l d7,d1
00027CF6 <AmiBlitz3.ab3@10614>     MOVE.l d5,d2
00027CF8 <AmiBlitz3.ab3@10615>     MOVE.l d6,d3
00027CFA <AmiBlitz3.ab3@10616>     ASL.l #2,d3
00027CFC <AmiBlitz3.ab3@10617>     ADDQ.l #8,d3
00027D00 <AmiBlitz3.ab3@10618>     BSR.w mywrite
00027D06 <AmiBlitz3.ab3@10621>   MOVEA.l hunkoffsetbase,A2
00027D08 <AmiBlitz3.ab3@10622>   MOVE.l d5,a0
00027D0A <AmiBlitz3.ab3@10623>   ADDQ #8,a0
00027D12 <AmiBlitz3.ab3@10624>   MOVE.l chipnum,-4(a0)
00027D14 <AmiBlitz3.ab3@10625>   MOVEQ #0,d6
00027D18 <AmiBlitz3.ab3@10628>   CMPA.w #$0,A2
00027D1C <AmiBlitz3.ab3@10629>    BEQ.w 'lh30
00027D22 <AmiBlitz3.ab3@10630>   MOVE.l destbufferstart,D2
00027D28 <AmiBlitz3.ab3@10631>   ADD.l noinits,D2
00027D2C <AmiBlitz3.ab3@10632>   MOVE.l  $4(A2),d1
00027D30 <AmiBlitz3.ab3@10633>   BTST #31,d1
00027D34 <AmiBlitz3.ab3@10634>   BEQ 'lh11
00027D38 <AmiBlitz3.ab3@10635>   BCLR #31,d1
00027D3A <AmiBlitz3.ab3@10636>   MOVE.l d1,(a0)
00027D3C <AmiBlitz3.ab3@10637>   SUB.l D4,(A0)+
00027D3E <AmiBlitz3.ab3@10638>   ADDQ.l #1,d6
00027D40 <AmiBlitz3.ab3@10641>   MOVE.l (a2),a2
00027D44 <AmiBlitz3.ab3@10642> BRA 'lh20
00027D46 <AmiBlitz3.ab3@10645>   TST.l d6
00027D4A <AmiBlitz3.ab3@10646>     BEQ 'l10
00027D4C <AmiBlitz3.ab3@10647>     MOVE.l d5,a0
00027D4E <AmiBlitz3.ab3@10648>     MOVE.l d6,(a0)
00027D50 <AmiBlitz3.ab3@10649>     MOVE.l d7,d1
00027D52 <AmiBlitz3.ab3@10650>     MOVE.l d5,d2
00027D54 <AmiBlitz3.ab3@10651>     MOVE.l d6,d3
00027D56 <AmiBlitz3.ab3@10652>     ASL.l #2,d3
00027D58 <AmiBlitz3.ab3@10653>     ADDQ.l #8,d3
00027D5C <AmiBlitz3.ab3@10654>     BSR.w mywrite
00027D62 <AmiBlitz3.ab3@10658>    MOVEA.l _execbase,A6
00027D68 <AmiBlitz3.ab3@10659>    MOVE.l hunkoffsetcounter,d0
00027D6A <AmiBlitz3.ab3@10660>    ASL.l #2,d0
00027D70 <AmiBlitz3.ab3@10661>    ADD.l #12,d0
00027D72 <AmiBlitz3.ab3@10662>    MOVE.l d5,a1
00027D76 <AmiBlitz3.ab3@10663>    JSR _FreeMem(a6)
00027D7C <AmiBlitz3.ab3@10664>    MOVEA.l _dosbase,A6
00027D7E <AmiBlitz3.ab3@10665>    MOVE.l (a7)+,d5
00027D82 <AmiBlitz3.ab3@10666> BRA JL_0_7632
00027D88 <AmiBlitz3.ab3@10670>   MOVEA.l hunkoffsetbase,A2
00027D8E <AmiBlitz3.ab3@10671>   MOVE.l noinits,D4
00027D92 <AmiBlitz3.ab3@10674>   CMPA.w #$0,A2                                            ;write hunkoffsets
00027D96 <AmiBlitz3.ab3@10675>   BEQ.w JL_0_7632
00027D9A <AmiBlitz3.ab3@10676>   LEA $4(A2),A1
00027D9C <AmiBlitz3.ab3@10677>   SUB.l D4,(A1)
00027D9E <AmiBlitz3.ab3@10678>   MOVE.l D7,D1
00027DA0 <AmiBlitz3.ab3@10679>   MOVE.l A1,D2
00027DA2 <AmiBlitz3.ab3@10680>   MOVEQ.l #$04,D3
00027DA6 <AmiBlitz3.ab3@10681>   BSR.w mywrite
00027DAA <AmiBlitz3.ab3@10682>   ADD.l D4,$4(A2)
00027DAC <AmiBlitz3.ab3@10683>   MOVEA.l (A2),A2
00027DB0 <AmiBlitz3.ab3@10684> BRA.w JL_0_7610
00027DB6 <AmiBlitz3.ab3@10687>   CLR.l tstsize3
00027DB8 <AmiBlitz3.ab3@10688>   MOVE.l D7,D1
00027DBE <AmiBlitz3.ab3@10689>   MOVE.l #tstsize3,D2
00027DC0 <AmiBlitz3.ab3@10690>   MOVEQ.l #$04,D3
00027DC4 <AmiBlitz3.ab3@10691>    BSR.w mywrite
00027DCC <AmiBlitz3.ab3@10694>   BTST #$7,link_debuginfo
00027DD0 <AmiBlitz3.ab3@10695>    BEQ.w JL_0_7706
00027DD6 <AmiBlitz3.ab3@10696>   MOVE.l #sysdebug,D2                                      ;debughunks
00027DD8 <AmiBlitz3.ab3@10697>   MOVEQ.l #$04,D3
00027DDA <AmiBlitz3.ab3@10698>   MOVE.l D7,D1
00027DDE <AmiBlitz3.ab3@10699>    BSR.w mywrite
00027DE4 <AmiBlitz3.ab3@10700>   MOVEA.l labelbase,A2
00027DE8 <AmiBlitz3.ab3@10703>   CMPA.w #$0,A2
00027DEC <AmiBlitz3.ab3@10704>    BEQ.w JL_0_76F8
00027DF2 <AmiBlitz3.ab3@10705>   BTST #$0,$7(A2)
00027DF6 <AmiBlitz3.ab3@10706>    BEQ.w JL_0_7682
00027DFE <AmiBlitz3.ab3@10707>   CMPI.l #$1,$4(A2)
00027E02 <AmiBlitz3.ab3@10709>   BRA.w JL_0_76F2                                            ;only addr labels
00027E04 <AmiBlitz3.ab3@10711>   MOVEQ.l #$00,D4
00027E08 <AmiBlitz3.ab3@10712>   MOVE.b $12(A2),D4
00027E0C <AmiBlitz3.ab3@10713>   SUBI.w #$13,D4
00027E0E <AmiBlitz3.ab3@10714>   ADDQ.w #2,D4
00027E12 <AmiBlitz3.ab3@10715>   ANDI.w #$FFFC,D4
00027E14 <AmiBlitz3.ab3@10716>   MOVE.l D4,D5
00027E16 <AmiBlitz3.ab3@10717>   LSR.w #2,D5
00027E1C <AmiBlitz3.ab3@10718>   MOVE.l D5,temp1
00027E1E <AmiBlitz3.ab3@10719>   LSL.w #2,D5
00027E24 <AmiBlitz3.ab3@10720>   MOVE.l #temp1,a1
00027E2A <AmiBlitz3.ab3@10722>   LEA debugstore,a0
00027E2C <AmiBlitz3.ab3@10723>   MOVE.l (a1),(a0)+
00027E2E <AmiBlitz3.ab3@10724>   MOVEQ.l #$04,D3
00027E32 <AmiBlitz3.ab3@10727>   LEA $13(A2),A1
00027E34 <AmiBlitz3.ab3@10728>   MOVE.l d4,d1
00027E36 <AmiBlitz3.ab3@10729>   SUBQ.l #1,d1
00027E38 <AmiBlitz3.ab3@10732>     MOVE.b (a1)+,d0
00027E3C <AmiBlitz3.ab3@10733>     BEQ 'l21
00027E40 <AmiBlitz3.ab3@10734>     CMP.b #"'",d0                                            ; ' does reassembler/assembler not like, so replace
00027E44 <AmiBlitz3.ab3@10735>     BNE 'ok
00027E48 <AmiBlitz3.ab3@10736>     MOVE.b #"_",d0
00027E4A <AmiBlitz3.ab3@10737> 'ok    MOVE.b d0,(a0)+                                      ; copy labeltext to debuginfo
00027E4E <AmiBlitz3.ab3@10738>   DBF d1,'l10
00027E52 <AmiBlitz3.ab3@10740> BRA 'l22
00027E54 <AmiBlitz3.ab3@10743>       CLR.b (a0)+
00027E58 <AmiBlitz3.ab3@10744>   DBF d1,'l21
00027E5A <AmiBlitz3.ab3@10747>   ADD.l d4,d3
00027E5C <AmiBlitz3.ab3@10752>   SUB.l D4,D5
00027E60 <AmiBlitz3.ab3@10753>    BEQ.w JL_0_76CE
00027E66 <AmiBlitz3.ab3@10754>   MOVE.l #zero,a1
00027E68 <AmiBlitz3.ab3@10756>   MOVE.l (a1),(a0)+
00027E6A <AmiBlitz3.ab3@10758>   ADD.l d5,d3
00027E6E <AmiBlitz3.ab3@10763>   MOVE.l $8(A2),D2
00027E74 <AmiBlitz3.ab3@10764>   SUB.l destbufferstart,D2
00027E7A <AmiBlitz3.ab3@10765>   SUB.l noinits,D2
00027E80 <AmiBlitz3.ab3@10766>   MOVE.l D2,temp1
00027E86 <AmiBlitz3.ab3@10767>   MOVE.l #temp1,a1
00027E88 <AmiBlitz3.ab3@10769>   MOVE.l (a1),(a0)+
00027E8E <AmiBlitz3.ab3@10770>   ADD.l #4,d3
00027E94 <AmiBlitz3.ab3@10771>   LEA debugstore,a0
00027E96 <AmiBlitz3.ab3@10772>   MOVE.l a0,d2
00027E98 <AmiBlitz3.ab3@10774>   MOVE.l D7,D1
00027E9C <AmiBlitz3.ab3@10775>   BSR.w mywrite
00027E9E <AmiBlitz3.ab3@10778>   MOVEA.l (A2),A2
00027EA2 <AmiBlitz3.ab3@10779> BRA.w JL_0_7664
00027EA8 <AmiBlitz3.ab3@10783>   MOVE.l #zero,D2
00027EAA <AmiBlitz3.ab3@10784>   MOVEQ.l #$04,D3
00027EAC <AmiBlitz3.ab3@10785>   MOVE.l D7,D1
00027EB0 <AmiBlitz3.ab3@10786>   BSR.w mywrite
00027EB2 <AmiBlitz3.ab3@10789>   MOVE.l D7,D1
00027EB8 <AmiBlitz3.ab3@10790>   MOVE.l #tstdone,D2                                      ;hunkend
00027EBA <AmiBlitz3.ab3@10791>   MOVEQ.l #$04,D3
00027EC4 <AmiBlitz3.ab3@10792>   CMPI.l #-1,bssstart
00027EC8 <AmiBlitz3.ab3@10793>   BEQ 'l10
00027ECA <AmiBlitz3.ab3@10794>   MOVEQ #16,d3
00027ED0 <AmiBlitz3.ab3@10795>   MOVE.l #hunkend,d2
00027EDA <AmiBlitz3.ab3@10796>   CMPI.l #-1,chipstart
00027EDE <AmiBlitz3.ab3@10797>   BEQ 'l10
00027EE0 <AmiBlitz3.ab3@10798>   MOVE.l d7,d1
00027EE2 <AmiBlitz3.ab3@10799>   MOVEQ #12,d3
00027EE6 <AmiBlitz3.ab3@10800>   BSR.w mywrite
00027EF0 <AmiBlitz3.ab3@10803>   CMPI.l #-1,chipstart
00027EF4 <AmiBlitz3.ab3@10804>   BEQ 'l11
00027EF6 <AmiBlitz3.ab3@10805>   MOVEQ #12,d3
00027EFC <AmiBlitz3.ab3@10806>   MOVE.l #hunkend2,d2
00027EFE <AmiBlitz3.ab3@10807>   MOVE.l d7,d1
00027F02 <AmiBlitz3.ab3@10808>   BSR.w mywrite
00027F04 <AmiBlitz3.ab3@10809>   MOVE.l d7,d1
00027F0A <AmiBlitz3.ab3@10810>   MOVE.l chipstart,d2
00027F10 <AmiBlitz3.ab3@10811>   MOVE.l chipsize,d3
00027F14 <AmiBlitz3.ab3@10812>   BSR.w mywrite
00027F16 <AmiBlitz3.ab3@10813>   MOVEQ #4,d3
00027F1C <AmiBlitz3.ab3@10814>   MOVE.l #hunkend,d2
00027F1E <AmiBlitz3.ab3@10815>   MOVE.l d7,d1
00027F22 <AmiBlitz3.ab3@10818>   BSR.w mywrite
00027F24 <AmiBlitz3.ab3@10819>   MOVE.l D7,D1
00027F2A <AmiBlitz3.ab3@10820>   MOVEA.l _dosbase,A6
00027F2E <AmiBlitz3.ab3@10821>   JSR _Close(A6)
00027F36 <AmiBlitz3.ab3@10826>   BTST #$7,create_iconfile
00027F3A <AmiBlitz3.ab3@10827>    BEQ.w skip_createicon
00027F40 <AmiBlitz3.ab3@10829>   MOVEA.l ptr_newexefilename,A0
00027F42 <AmiBlitz3.ab3@10832>     TST.b (A0)+
00027F46 <AmiBlitz3.ab3@10833>   BNE.w JL_0_772C
00027F48 <AmiBlitz3.ab3@10834>   SUBQ.w #1,A0
00027F4A <AmiBlitz3.ab3@10835>   MOVE.l A0,-(A7)
00027F50 <AmiBlitz3.ab3@10836>   LEA str_infoextention2,A1
00027F52 <AmiBlitz3.ab3@10839>     MOVE.b (A1)+,(A0)+
00027F56 <AmiBlitz3.ab3@10840>   BNE.w JL_0_773A
00027F5C <AmiBlitz3.ab3@10842>   MOVE.l ptr_newexefilename,D1
00027F5E <AmiBlitz3.ab3@10843>   MOVEQ.l #-$02,D2
00027F64 <AmiBlitz3.ab3@10844>   MOVEA.l _dosbase,A6
00027F68 <AmiBlitz3.ab3@10845>   JSR _Lock(A6)
00027F6A <AmiBlitz3.ab3@10846>   MOVE.l D0,D1
00027F6E <AmiBlitz3.ab3@10847>   BEQ.w JL_0_775A                                          ;no icon exit so jump to create one  tomsmart1
00027F72 <AmiBlitz3.ab3@10848>   JSR _UnLock(A6)                                          ;OH!! there is a Icon so we must Unlock it  tomsmart1
00027F76 <AmiBlitz3.ab3@10849> BRA.w JL_0_7788                                            ;and skip writing a Icon  tomsmart1
00027F7C <AmiBlitz3.ab3@10852>   MOVE.l ptr_newexefilename,D1
00027F82 <AmiBlitz3.ab3@10853>   MOVE.l #HUNK_RELOC_8__MODE_NEWFILE,D2
00027F88 <AmiBlitz3.ab3@10854>   MOVEA.l _dosbase,A6
00027F8C <AmiBlitz3.ab3@10855>    JSR _Open(A6)
00027F8E <AmiBlitz3.ab3@10856>   MOVE.l D0,D7
00027F92 <AmiBlitz3.ab3@10857>    BEQ.w JL_0_7788
00027F98 <AmiBlitz3.ab3@10858>   MOVE.l #icongfx_data,D2                                  ; icon graphics
00027F9E <AmiBlitz3.ab3@10859>   MOVE.l #icongfx_data_end-icongfx_data,D3                 ; length of gfx-data
00027FA0 <AmiBlitz3.ab3@10860>   MOVE.l D7,D1
00027FA6 <AmiBlitz3.ab3@10861>   MOVEA.l _dosbase,A6
00027FAA <AmiBlitz3.ab3@10862>   JSR _Write(A6)
00027FAC <AmiBlitz3.ab3@10863>   MOVE.l D7,D1
00027FB0 <AmiBlitz3.ab3@10864>   JSR _Close(A6)
00027FB2 <AmiBlitz3.ab3@10867>   MOVEA.l (A7)+,A0
00027FB4 <AmiBlitz3.ab3@10868>   CLR.b (A0)
00027FBA <AmiBlitz3.ab3@10873>   TST.b exdebug
00027FBE <AmiBlitz3.ab3@10874>    BEQ JL_0_757Cb
00027FC4 <AmiBlitz3.ab3@10875>   MOVE.w dontwrite,D1
00027FC8 <AmiBlitz3.ab3@10876>   BNE.w JL_0_757Cb
00027FCE <AmiBlitz3.ab3@10877>   MOVE.l chipsize,d5
00027FD4 <AmiBlitz3.ab3@10878>   MOVE.l bsssize,d3
00027FDA <AmiBlitz3.ab3@10879>   MOVE.l chipstart,d7
00027FE0 <AmiBlitz3.ab3@10880>   MOVE.l bssstart,d6
00027FE6 <AmiBlitz3.ab3@10881>   MOVEA.l hunkoffsetbase,A2
00027FEC <AmiBlitz3.ab3@10882>   MOVEA.l destbufferstart,A1
00027FEE <AmiBlitz3.ab3@10883>   MOVE.l A1,D2
00027FF4 <AmiBlitz3.ab3@10884>   ADD.l noinits,D2
00027FFA <AmiBlitz3.ab3@10885>   CLR.l hunkoffsetnum
00027FFE <AmiBlitz3.ab3@10888>   CMPA.w #$0,A2
00028002 <AmiBlitz3.ab3@10889>    BEQ.w JL_0_757Cb
00028006 <AmiBlitz3.ab3@10890>   MOVE.l $4(A2),D0
0002800A <AmiBlitz3.ab3@10891>    LEA $0(a1,d0.l),a0
0002800C <AmiBlitz3.ab3@10892>    MOVE.l (a0),d1
0002800E <AmiBlitz3.ab3@10893>   TST.l d1
00028012 <AmiBlitz3.ab3@10894>    BMI.w 'lm1
0002801A <AmiBlitz3.ab3@10895>   MOVE.b #0,newhunk
00028024 <AmiBlitz3.ab3@10896>   CMP.l #-1,chipstart
00028028 <AmiBlitz3.ab3@10897>   BEQ 'l10
0002802E <AmiBlitz3.ab3@10898>   CMP.l chipstart,d1
00028032 <AmiBlitz3.ab3@10899>   BLT 'l10
0002803A <AmiBlitz3.ab3@10900>   MOVE.b #1,newhunk
00028040 <AmiBlitz3.ab3@10901>   CMP.l chipend,d1
00028044 <AmiBlitz3.ab3@10902>   BGE 'l110
00028046 <AmiBlitz3.ab3@10903>   ADD.l d7,(a0)
0002804E <AmiBlitz3.ab3@10904>   ADD.l #$80000000,4(a2)
00028052 <AmiBlitz3.ab3@10905> BRA JL_0_7576b
00028056 <AmiBlitz3.ab3@10908>   ADD.l d5,0(a0)
00028060 <AmiBlitz3.ab3@10911>   CMP.l #-1,bssstart
00028064 <AmiBlitz3.ab3@10912>     BEQ 'l11
0002806A <AmiBlitz3.ab3@10913>   CMP.l bssstart,d1
0002806E <AmiBlitz3.ab3@10914>   BLT 'l11
00028074 <AmiBlitz3.ab3@10915>   CMP.l bssend,d1
00028078 <AmiBlitz3.ab3@10916>   BGE 'l111
0002807E <AmiBlitz3.ab3@10917>   TST.b newhunk
00028082 <AmiBlitz3.ab3@10918>   BEQ 'ln1
00028084 <AmiBlitz3.ab3@10919>   ADD.l d5,(a0)
00028086 <AmiBlitz3.ab3@10922>   ADD.l d6,(a0)
0002808E <AmiBlitz3.ab3@10923>   ADD.l #$40000000,4(a2)
00028092 <AmiBlitz3.ab3@10924> BRA JL_0_7576b
00028096 <AmiBlitz3.ab3@10927>   ADD.l d3,0(a0)
00028098 <AmiBlitz3.ab3@10930>   ADD.l D2,(A0)                                            ;only normal code offsets restore
0002809E <AmiBlitz3.ab3@10933>   ADDQ.l #1,hunkoffsetnum
000280A0 <AmiBlitz3.ab3@10936>   MOVEA.l (A2),A2
000280A4 <AmiBlitz3.ab3@10937> BRA.w JL_0_755Eb
000280AA <AmiBlitz3.ab3@10940>   JSR call_setpointernormal
000280AE <AmiBlitz3.ab3@10941>   MOVEM.l (a7)+,d2-d7/a2-a6
000280B0 <AmiBlitz3.ab3@10943> RTS
000280B2 <AmiBlitz3.ab3@10947>   MOVE.l D2,-(A7)
000280B8 <AmiBlitz3.ab3@10948>   MOVE.l destpointer,D2
000280BE <AmiBlitz3.ab3@10949>   SUB.l destbufferstart,D2
000280C2 <AmiBlitz3.ab3@10950>   BSR.w addhunkoffset
000280C4 <AmiBlitz3.ab3@10951>   MOVE.l (A7)+,D2
000280C6 <AmiBlitz3.ab3@10952> RTS
000280CA <AmiBlitz3.ab3@10956>   MOVEM.l D0-D1/A0-A1/A6,-(A7)
000280D0 <AmiBlitz3.ab3@10957>   TST.b nohunkoffset
000280D4 <AmiBlitz3.ab3@10958>   BNE 'l10
000280D6 <AmiBlitz3.ab3@10959>   MOVEQ.l #$8,D0
000280D8 <AmiBlitz3.ab3@10960>   MOVEQ.l #$01,D1
000280DE <AmiBlitz3.ab3@10961>   MOVEA.l _execbase,A6
000280E4 <AmiBlitz3.ab3@10962>   MOVE.l mempool2,a0
000280E8 <AmiBlitz3.ab3@10963>   JSR _AllocPooled(a6)
000280EE <AmiBlitz3.ab3@10965>   ADDQ.l #1,hunkoffsetcounter
000280F0 <AmiBlitz3.ab3@10966>   MOVEA.l D0,A0
000280F6 <AmiBlitz3.ab3@10967>   MOVE.l hunkoffsetbase,(A0)
000280FC <AmiBlitz3.ab3@10968>   MOVE.l A0,hunkoffsetbase
00028100 <AmiBlitz3.ab3@10969>   MOVE.l D2,$4(A0)
00028104 <AmiBlitz3.ab3@10972>   MOVEM.l (A7)+,D0-D1/A0-A1/A6
00028106 <AmiBlitz3.ab3@10973> RTS
0002810C <AmiBlitz3.ab3@10977>   CLR.l hunkoffsetbase
00028112 <AmiBlitz3.ab3@10978>   MOVEA.l _execbase,A6
00028118 <AmiBlitz3.ab3@10979>   MOVEA.l hunkoffsetbase,A2
0002811C <AmiBlitz3.ab3@10982>     CMPA.w #$0,A2
00028120 <AmiBlitz3.ab3@10983>      BEQ.w JL_0_7988
00028122 <AmiBlitz3.ab3@10984>     MOVEA.l A2,A1
00028124 <AmiBlitz3.ab3@10985>     MOVEQ.l #$08,D0
00028126 <AmiBlitz3.ab3@10986>     MOVEA.l (A2),A2
0002812C <AmiBlitz3.ab3@10987>     MOVE.l mempool2,a0
00028130 <AmiBlitz3.ab3@10988>     JSR _FreePooled(A6)
00028134 <AmiBlitz3.ab3@10989> BRA.w JL_0_7972
0002813A <AmiBlitz3.ab3@10992>   CLR.l hunkoffsetcounter
0002813C <AmiBlitz3.ab3@10993> RTS
00028154 <AmiBlitz3.ab3@10996> cmakebuff:  Ds.l 6                                          ;dc.w 12 org source
00028158 <AmiBlitz3.ab3@10997> cmakea5:    Ds.l 1
0002815A <AmiBlitz3.ab3@10998> cmake:      Ds.w 1
000281DA <AmiBlitz3.ab3@10999> cmakebak:   Ds.l 32                                         ;ds.b 128 org source
000281E0 <AmiBlitz3.ab3@11003>   MOVE.l A5,lastsourcepos
000281EA <AmiBlitz3.ab3@11004>   MOVE.w instringon,oldqflag
000281EC <AmiBlitz3.ab3@11008>   MOVEQ.l #$00,D0
000281EE <AmiBlitz3.ab3@11009>   MOVE.b (A5)+,D0
000281F2 <AmiBlitz3.ab3@11010>    BEQ getcharb__donea
000281F6 <AmiBlitz3.ab3@11011>   BPL getcharb__stuffa
000281F8 <AmiBlitz3.ab3@11012>   LSL.l #8,D0
000281FA <AmiBlitz3.ab3@11013>   MOVE.b (A5)+,D0
000281FC <AmiBlitz3.ab3@11014>   MOVE.l a1,-(a7)
00028202 <AmiBlitz3.ab3@11015>   LEA replacedat,a1
00028206 <AmiBlitz3.ab3@11016>   Dc.w $4a71,$0a00                                         ;TST.w 0(a1,d0.l*2)
0002820A <AmiBlitz3.ab3@11017>   BEQ getchar__l10
0002820E <AmiBlitz3.ab3@11018>   Dc.w $3031,$0a00                                         ;MOVE.w 0(a1,d0.l*2),d0
00028210 <AmiBlitz3.ab3@11022>   MOVE.l (a7)+,a1
00028214 <AmiBlitz3.ab3@11023> BRA getchar__weiter
00028218 <AmiBlitz3.ab3@11026>   CMP.w #$22,D0
0002821C <AmiBlitz3.ab3@11027>    BEQ.b swapquotea
00028220 <AmiBlitz3.ab3@11028>   CMP.w #$3B,D0
00028224 <AmiBlitz3.ab3@11029>    BNE.b getcharb__donea
0002822A <AmiBlitz3.ab3@11030>   TST.w instringon
0002822E <AmiBlitz3.ab3@11031>    BNE.b getcharb__donea
00028230 <AmiBlitz3.ab3@11034>   MOVE.b (A5)+,D0
00028234 <AmiBlitz3.ab3@11035>              BEQ getchar__l1
00028238 <AmiBlitz3.ab3@11036>              CMP.b #":",d0
0002823C <AmiBlitz3.ab3@11037>              BNE getcharb__loopa                                ;:@
00028240 <AmiBlitz3.ab3@11038>              CMP.b #"@",(a5)
00028244 <AmiBlitz3.ab3@11039>              BNE getcharb__loopa
00028246 <AmiBlitz3.ab3@11040>              ADDQ #1,a5
0002824C <AmiBlitz3.ab3@11043>   MOVE.w D0,lastchar
00028250 <AmiBlitz3.ab3@11046> BRA.s getchar__weiter
00028256 <AmiBlitz3.ab3@11049>   NOT.w instringon
0002825C <AmiBlitz3.ab3@11052>    MOVE.w D0,lastchar
00028260 <AmiBlitz3.ab3@11053>    BEQ.w getchar__done
00028264 <AmiBlitz3.ab3@11054>    BPL.w getchar__done2
00028268 <AmiBlitz3.ab3@11055>   CMP.w #-$7FE4,D0                                         ;cnif
0002826C <AmiBlitz3.ab3@11056>    BEQ.w getchar__cnif
00028270 <AmiBlitz3.ab3@11057>   CMP.w #-$7FE3,D0                                         ;csif
00028274 <AmiBlitz3.ab3@11058>    BEQ.w getchar__csif
00028278 <AmiBlitz3.ab3@11059>   CMP.w #-$7FE2,D0                                         ;celse
0002827C <AmiBlitz3.ab3@11060>    BEQ.w getchar__celse
00028280 <AmiBlitz3.ab3@11061>   CMP.w #-$7FE1,D0                                         ;cend
00028284 <AmiBlitz3.ab3@11062>    BEQ.w getchar__cend
0002828A <AmiBlitz3.ab3@11065>   TST.w skipcode
0002828E <AmiBlitz3.ab3@11066>    BEQ.w getchar
00028292 <AmiBlitz3.ab3@11067>   CMP.w #$7E,D0
00028296 <AmiBlitz3.ab3@11068>    BEQ.w getchar__cmake                                         ;tilde
0002829A <AmiBlitz3.ab3@11069>   CMP.w #$2,D0
0002829E <AmiBlitz3.ab3@11070>    BNE.w getchar__notunpath
000282A4 <AmiBlitz3.ab3@11071>   MOVEA.l usedfrom,A5
000282AA <AmiBlitz3.ab3@11072>   CLR.l usedfrom
000282AE <AmiBlitz3.ab3@11073> BRA.w getchar
000282B2 <AmiBlitz3.ab3@11076>   CMP.w #$1,D0
000282B6 <AmiBlitz3.ab3@11077>    BNE.w getchar__done
000282BA <AmiBlitz3.ab3@11081>   MOVEA.l cmakea5(PC),A5
000282BE <AmiBlitz3.ab3@11082> BRA.w getchar
000282C4 <AmiBlitz3.ab3@11085>   TST.w cmake
000282C8 <AmiBlitz3.ab3@11086>    BNE.w getchar__done
000282CC <AmiBlitz3.ab3@11088>   MOVEM.l D0-D7/A0-A6,-(A7)
000282D2 <AmiBlitz3.ab3@11089>   LEA cmake,a0                                         ;reass
000282D4 <AmiBlitz3.ab3@11090>   NOT.w (a0)
000282D8 <AmiBlitz3.ab3@11091>   LEA cmakebak(PC),A0
000282DE <AmiBlitz3.ab3@11092>   LEA ptr_parameterstore,A1
000282E0 <AmiBlitz3.ab3@11093>   MOVEQ.l #$1F,D0
000282E2 <AmiBlitz3.ab3@11096>     MOVE.l (A1)+,(A0)+
000282E6 <AmiBlitz3.ab3@11097>   DBF D0,getchar__cmloop
000282EC <AmiBlitz3.ab3@11100>    JSR AJL_0_BF6E
000282F0 <AmiBlitz3.ab3@11101>   CMP.w #$7E,D0
000282F4 <AmiBlitz3.ab3@11102>    BNE.w syntaxerr
000282FA <AmiBlitz3.ab3@11103>   MOVE.l A5,cmakea5                                      ;tilde
000282FE <AmiBlitz3.ab3@11104>   LEA cmakebuff(PC),A0
00028300 <AmiBlitz3.ab3@11105>   MOVE.l D3,D2
00028304 <AmiBlitz3.ab3@11106>   BSR.w makelong
00028306 <AmiBlitz3.ab3@11107>   ADDQ.b #1,(A0)
0002830C <AmiBlitz3.ab3@11108>   LEA cmake,a0
0002830E <AmiBlitz3.ab3@11109>   NOT.w (a0)                                               ;reass
00028312 <AmiBlitz3.ab3@11110>   LEA cmakebak(PC),A0
00028318 <AmiBlitz3.ab3@11111>   LEA ptr_parameterstore,A1
0002831A <AmiBlitz3.ab3@11112>   MOVEQ.l #$1F,D0
0002831C <AmiBlitz3.ab3@11115>     MOVE.l (A0)+,(A1)+
00028320 <AmiBlitz3.ab3@11116>   DBF D0,getchar__cmloop2
00028324 <AmiBlitz3.ab3@11118>   MOVEM.l (A7)+,D0-D7/A0-A6
00028328 <AmiBlitz3.ab3@11119>   LEA cmakebuff(PC),A5
0002832C <AmiBlitz3.ab3@11120> BRA.w getchar
0002832E <AmiBlitz3.ab3@11123> RTS
00028338 <AmiBlitz3.ab3@11127>   MOVE.l linenumat,ciflineat                               ;csif
0002833E <AmiBlitz3.ab3@11128>   TST.w skipcode
00028342 <AmiBlitz3.ab3@11129>    BEQ.w getchar__incnest
00028346 <AmiBlitz3.ab3@11130>    BSR.w get1bytemain
00028348 <AmiBlitz3.ab3@11131>    MOVE.l a1,-(a7)
0002834E <AmiBlitz3.ab3@11132>    JSR JL_0_C492
00028350 <AmiBlitz3.ab3@11133>    MOVE.l (a7)+,a1
00028354 <AmiBlitz3.ab3@11134> BRA.w getchar
0002835E <AmiBlitz3.ab3@11137>   MOVE.l linenumat,ciflineat                               ;cnif
00028364 <AmiBlitz3.ab3@11138>   TST.w skipcode
00028368 <AmiBlitz3.ab3@11139>    BEQ.w getchar__incnest
0002836C <AmiBlitz3.ab3@11140>    BSR.w get1bytemain
00028370 <AmiBlitz3.ab3@11141>    CMP.b #"@",d0
00028374 <AmiBlitz3.ab3@11142>    BNE getchar__cnif_ok2
00028378 <AmiBlitz3.ab3@11143>    BSR.w get1bytemain
00028380 <AmiBlitz3.ab3@11144>    MOVE.b #1,incnif
00028386 <AmiBlitz3.ab3@11145>    JSR findconstant2
0002838A <AmiBlitz3.ab3@11146>    BEQ getchar__cnif_ok2
00028390 <AmiBlitz3.ab3@11149>    MOVE.w fast,-(a7)
00028396 <AmiBlitz3.ab3@11150>    CLR.b fast
00028398 <AmiBlitz3.ab3@11151>    MOVE.l a1,-(a7)
0002839E <AmiBlitz3.ab3@11152>    JSR JL_0_C47E
000283A4 <AmiBlitz3.ab3@11153>    CLR.b incnif
000283A6 <AmiBlitz3.ab3@11154>    MOVE.l (a7)+,a1
000283AC <AmiBlitz3.ab3@11155>    MOVE.w (a7)+,fast
000283B0 <AmiBlitz3.ab3@11156> BRA.w getchar
000283B6 <AmiBlitz3.ab3@11159>   ADDQ.w #1,connest
000283BA <AmiBlitz3.ab3@11160> BRA.w getchar
000283C0 <AmiBlitz3.ab3@11163>   MOVE.w connest,D0                                      ;celse
000283C4 <AmiBlitz3.ab3@11164>    BNE.w getchar
000283CA <AmiBlitz3.ab3@11165>   NOT.w skipcode
000283CE <AmiBlitz3.ab3@11166> BRA.w getchar
000283D4 <AmiBlitz3.ab3@11169>   SUBQ.w #1,connest                                      ;cend
000283D8 <AmiBlitz3.ab3@11170>    BPL.w getchar
000283DE <AmiBlitz3.ab3@11171>   ADDQ.w #1,connest
000283E4 <AmiBlitz3.ab3@11172>   MOVEA.l concomsp,A0
000283EA <AmiBlitz3.ab3@11173>   CMPA.l #concomstack,A0
000283EE <AmiBlitz3.ab3@11174>    BEQ.w nociferr
000283F0 <AmiBlitz3.ab3@11175>   SUBQ.w #2,A0
000283F6 <AmiBlitz3.ab3@11176>   MOVE.l A0,concomsp
000283FC <AmiBlitz3.ab3@11177>   MOVE.w (A0),skipcode
00028400 <AmiBlitz3.ab3@11178> BRA.w getchar
00028404 <AmiBlitz3.ab3@11181> ciflineat:   Ds.l 1
00028406 <AmiBlitz3.ab3@11189>   MOVEQ.l #$00,D0
00028408 <AmiBlitz3.ab3@11190>   MOVE.b (A5)+,D0
0002840C <AmiBlitz3.ab3@11191>    BEQ.b getcharb__done
00028410 <AmiBlitz3.ab3@11192>    BPL.b getcharb__stuff
00028412 <AmiBlitz3.ab3@11193>   LSL.w #8,D0
00028414 <AmiBlitz3.ab3@11194>   MOVE.b (A5)+,D0
00028416 <AmiBlitz3.ab3@11195> RTS
0002841A <AmiBlitz3.ab3@11198>   CMP.w #$22,D0
0002841E <AmiBlitz3.ab3@11199>    BEQ.b swapquote
00028422 <AmiBlitz3.ab3@11200>   CMP.w #$3B,D0
00028426 <AmiBlitz3.ab3@11201>    BNE.b getcharb__done
0002842C <AmiBlitz3.ab3@11202>   TST.w instringon
00028430 <AmiBlitz3.ab3@11203>    BNE.b getcharb__done
00028432 <AmiBlitz3.ab3@11206>   MOVE.b (A5)+,D0
00028436 <AmiBlitz3.ab3@11207>             BEQ getcharb__loop_l1
0002843A <AmiBlitz3.ab3@11208>             CMP.b #":",d0
0002843E <AmiBlitz3.ab3@11209>             BNE getcharb__loop
00028442 <AmiBlitz3.ab3@11210>             CMP.b #"@",(a5)
00028446 <AmiBlitz3.ab3@11211>             BNE getcharb__loop
0002844C <AmiBlitz3.ab3@11214>   MOVE.w D0,lastchar
0002844E <AmiBlitz3.ab3@11217> RTS
00028454 <AmiBlitz3.ab3@11220>   NOT.w instringon
00028456 <AmiBlitz3.ab3@11221> RTS
0002845A <AmiBlitz3.ab3@11225>   BSR.w getchar
00028460 <AmiBlitz3.ab3@11226>   TST.w instringon
00028464 <AmiBlitz3.ab3@11227>    BNE.w get1byte__skip
00028468 <AmiBlitz3.ab3@11228>   CMP.w #$20,D0
0002846C <AmiBlitz3.ab3@11229>    BEQ.w get1byte_
0002846E <AmiBlitz3.ab3@11232> RTS
00028488 <AmiBlitz3.ab3@11235> gs:        Ds.w 13                                         ;ds.b 26  org source
0002848C <AmiBlitz3.ab3@11236>            Dc.b $F6,$E4,$FC,$D6                            ;dc.b 228,246,252,196,214,220 org source
0002848E <AmiBlitz3.ab3@11237>            Dc.b $C4,$DC
00028492 <AmiBlitz3.ab3@11243>   BSR.w getchar
00028498 <AmiBlitz3.ab3@11244>   TST.w instringon
0002849C <AmiBlitz3.ab3@11245>    BNE.w gchar2
000284A0 <AmiBlitz3.ab3@11246>   CMP.w #$20,D0
000284A4 <AmiBlitz3.ab3@11247>    BEQ.w get1bytemain
000284A6 <AmiBlitz3.ab3@11249>   TST.w D0
000284AA <AmiBlitz3.ab3@11252>   BEQ.b get1bytemain__zero
000284B0 <AmiBlitz3.ab3@11253>   TST.w instringon
000284B4 <AmiBlitz3.ab3@11254>    BEQ.b get1bytemain__noqoute
000284B8 <AmiBlitz3.ab3@11255>   CMP.b #$20,D0
000284BC <AmiBlitz3.ab3@11256>    BCC.b get1bytemain__skip
000284C0 <AmiBlitz3.ab3@11257>   MOVE.b gs(PC,D0.W),D0
000284C2 <AmiBlitz3.ab3@11258> RTS
000284C6 <AmiBlitz3.ab3@11261>   CMP.w #-$7FDE,D0                                         ;cmp #$8000+34,d0 org source  ;else
000284CA <AmiBlitz3.ab3@11262>    BEQ.b get1bytemain__zero
000284CE <AmiBlitz3.ab3@11263>   CMP.w #$3A,D0
000284D2 <AmiBlitz3.ab3@11264>    BEQ.b get1bytemain__zero
000284D4 <AmiBlitz3.ab3@11267>   TST.w D0
000284D6 <AmiBlitz3.ab3@11270> RTS
000284DC <AmiBlitz3.ab3@11274>   MOVE.w lastchar,D0
000284E0 <AmiBlitz3.ab3@11275> BRA.w gchar2
000284EA <AmiBlitz3.ab3@11279>   MOVE.w oldqflag,instringon
000284F0 <AmiBlitz3.ab3@11280>   MOVEA.l lastsourcepos,A5
000284F2 <AmiBlitz3.ab3@11281> RTS
000284F8 <AmiBlitz3.ab3@11285>   MOVE.w D0,locchar
000284FE <AmiBlitz3.ab3@11286>   MOVE.l A5,locloc
00028500 <AmiBlitz3.ab3@11287> RTS
00028506 <AmiBlitz3.ab3@11291>   MOVEA.l locloc,A5
0002850C <AmiBlitz3.ab3@11292>   MOVE.w locchar,D0
00028512 <AmiBlitz3.ab3@11293>   MOVE.w D0,lastchar
00028514 <AmiBlitz3.ab3@11294> RTS
00028514 <internal_errormsg.ab3@1> XINCLUDE "internal_errormsg.ab3"
0002855C <internal_errormsg.ab3@9> XINCLUDE "internal_errormsg.ab3"
000285AE <internal_errormsg.ab3@10> XINCLUDE "internal_errormsg.ab3"
000285EC <internal_errormsg.ab3@11> XINCLUDE "internal_errormsg.ab3"
0002862A <internal_errormsg.ab3@12> XINCLUDE "internal_errormsg.ab3"
00028654 <internal_errormsg.ab3@13> XINCLUDE "internal_errormsg.ab3"
00028684 <internal_errormsg.ab3@14> XINCLUDE "internal_errormsg.ab3"
000286CE <internal_errormsg.ab3@15> XINCLUDE "internal_errormsg.ab3"
00028754 <internal_errormsg.ab3@16> XINCLUDE "internal_errormsg.ab3"
000287B6 <internal_errormsg.ab3@17> XINCLUDE "internal_errormsg.ab3"
000287FE <internal_errormsg.ab3@18> XINCLUDE "internal_errormsg.ab3"
00028850 <internal_errormsg.ab3@19> XINCLUDE "internal_errormsg.ab3"
000288B2 <internal_errormsg.ab3@20> XINCLUDE "internal_errormsg.ab3"
00028900 <internal_errormsg.ab3@21> XINCLUDE "internal_errormsg.ab3"
00028936 <internal_errormsg.ab3@22> XINCLUDE "internal_errormsg.ab3"
00028964 <internal_errormsg.ab3@23> XINCLUDE "internal_errormsg.ab3"
0002897E <internal_errormsg.ab3@24> XINCLUDE "internal_errormsg.ab3"
0002899C <internal_errormsg.ab3@25> XINCLUDE "internal_errormsg.ab3"
00028A1A <internal_errormsg.ab3@26> XINCLUDE "internal_errormsg.ab3"
00028A44 <internal_errormsg.ab3@27> XINCLUDE "internal_errormsg.ab3"
00028A6A <internal_errormsg.ab3@28> XINCLUDE "internal_errormsg.ab3"
00028A8A <internal_errormsg.ab3@29> XINCLUDE "internal_errormsg.ab3"
00028AA8 <internal_errormsg.ab3@30> XINCLUDE "internal_errormsg.ab3"
00028AC8 <internal_errormsg.ab3@31> XINCLUDE "internal_errormsg.ab3"
00028AF0 <internal_errormsg.ab3@32> XINCLUDE "internal_errormsg.ab3"
00028B1A <internal_errormsg.ab3@33> XINCLUDE "internal_errormsg.ab3"
00028B1C <internal_errormsg.ab3@36> XINCLUDE "internal_errormsg.ab3"
00028B38 <internal_errormsg.ab3@39> XINCLUDE "internal_errormsg.ab3"
00028B5E <internal_errormsg.ab3@40> XINCLUDE "internal_errormsg.ab3"
00028B76 <internal_errormsg.ab3@41> XINCLUDE "internal_errormsg.ab3"
00028BD4 <internal_errormsg.ab3@42> XINCLUDE "internal_errormsg.ab3"
00028BF6 <internal_errormsg.ab3@43> XINCLUDE "internal_errormsg.ab3"
00028C1C <internal_errormsg.ab3@44> XINCLUDE "internal_errormsg.ab3"
00028C44 <internal_errormsg.ab3@45> XINCLUDE "internal_errormsg.ab3"
00028C64 <internal_errormsg.ab3@46> XINCLUDE "internal_errormsg.ab3"
00028C88 <internal_errormsg.ab3@47> XINCLUDE "internal_errormsg.ab3"
00028CCE <internal_errormsg.ab3@48> XINCLUDE "internal_errormsg.ab3"
00028CF2 <internal_errormsg.ab3@49> XINCLUDE "internal_errormsg.ab3"
00028D16 <internal_errormsg.ab3@50> XINCLUDE "internal_errormsg.ab3"
00028D36 <internal_errormsg.ab3@51> XINCLUDE "internal_errormsg.ab3"
00028D5A <internal_errormsg.ab3@52> XINCLUDE "internal_errormsg.ab3"
00028D7C <internal_errormsg.ab3@53> XINCLUDE "internal_errormsg.ab3"
00028DA8 <internal_errormsg.ab3@54> XINCLUDE "internal_errormsg.ab3"
00028DCE <internal_errormsg.ab3@55> XINCLUDE "internal_errormsg.ab3"
00028DD8 <internal_errormsg.ab3@58> XINCLUDE "internal_errormsg.ab3"
00028DFE <internal_errormsg.ab3@59> XINCLUDE "internal_errormsg.ab3"
00028E50 <internal_errormsg.ab3@61> XINCLUDE "internal_errormsg.ab3"
00028EBA <internal_errormsg.ab3@62> XINCLUDE "internal_errormsg.ab3"
00028F18 <internal_errormsg.ab3@63> XINCLUDE "internal_errormsg.ab3"
00028F86 <internal_errormsg.ab3@64> XINCLUDE "internal_errormsg.ab3"
00028FC2 <internal_errormsg.ab3@65> XINCLUDE "internal_errormsg.ab3"
00028FE0 <internal_errormsg.ab3@66> XINCLUDE "internal_errormsg.ab3"
00029006 <internal_errormsg.ab3@67> XINCLUDE "internal_errormsg.ab3"
00029036 <internal_errormsg.ab3@68> XINCLUDE "internal_errormsg.ab3"
0002905A <internal_errormsg.ab3@69> XINCLUDE "internal_errormsg.ab3"
00029088 <internal_errormsg.ab3@70> XINCLUDE "internal_errormsg.ab3"
000290AC <internal_errormsg.ab3@71> XINCLUDE "internal_errormsg.ab3"
000290C2 <internal_errormsg.ab3@72> XINCLUDE "internal_errormsg.ab3"
000290D8 <internal_errormsg.ab3@73> XINCLUDE "internal_errormsg.ab3"
000290DE <internal_errormsg.ab3@76> XINCLUDE "internal_errormsg.ab3"
000290E6 <internal_errormsg.ab3@78> XINCLUDE "internal_errormsg.ab3"
000290E8 <internal_errormsg.ab3@79> XINCLUDE "internal_errormsg.ab3"
000290EC <internal_errormsg.ab3@80> XINCLUDE "internal_errormsg.ab3"
000290F4 <internal_errormsg.ab3@81> XINCLUDE "internal_errormsg.ab3"
000290F6 <internal_errormsg.ab3@82> XINCLUDE "internal_errormsg.ab3"
00029130 <internal_errormsg.ab3@84> XINCLUDE "internal_errormsg.ab3"
0002915C <internal_errormsg.ab3@85> XINCLUDE "internal_errormsg.ab3"
0002918C <internal_errormsg.ab3@86> XINCLUDE "internal_errormsg.ab3"
000291C4 <internal_errormsg.ab3@87> XINCLUDE "internal_errormsg.ab3"
0002921E <internal_errormsg.ab3@88> XINCLUDE "internal_errormsg.ab3"
00029220 <internal_errormsg.ab3@92> XINCLUDE "internal_errormsg.ab3"
00029224 <internal_errormsg.ab3@93> XINCLUDE "internal_errormsg.ab3"
00029228 <internal_errormsg.ab3@94> XINCLUDE "internal_errormsg.ab3"
0002922C <internal_errormsg.ab3@95> XINCLUDE "internal_errormsg.ab3"
00029230 <internal_errormsg.ab3@96> XINCLUDE "internal_errormsg.ab3"
00029234 <internal_errormsg.ab3@97> XINCLUDE "internal_errormsg.ab3"
00029238 <internal_errormsg.ab3@98> XINCLUDE "internal_errormsg.ab3"
0002923C <internal_errormsg.ab3@99> XINCLUDE "internal_errormsg.ab3"
00029240 <internal_errormsg.ab3@100> XINCLUDE "internal_errormsg.ab3"
00029244 <internal_errormsg.ab3@101> XINCLUDE "internal_errormsg.ab3"
00029248 <internal_errormsg.ab3@102> XINCLUDE "internal_errormsg.ab3"
00029286 <internal_errormsg.ab3@103> XINCLUDE "internal_errormsg.ab3"
000292B8 <internal_errormsg.ab3@105> XINCLUDE "internal_errormsg.ab3"
000292D6 <internal_errormsg.ab3@106> XINCLUDE "internal_errormsg.ab3"
00029300 <internal_errormsg.ab3@107> XINCLUDE "internal_errormsg.ab3"
0002931C <internal_errormsg.ab3@108> XINCLUDE "internal_errormsg.ab3"
00029336 <internal_errormsg.ab3@109> XINCLUDE "internal_errormsg.ab3"
00029354 <internal_errormsg.ab3@110> XINCLUDE "internal_errormsg.ab3"
00029378 <internal_errormsg.ab3@111> XINCLUDE "internal_errormsg.ab3"
0002937A <internal_errormsg.ab3@114> XINCLUDE "internal_errormsg.ab3"
000293CC <internal_errormsg.ab3@115> XINCLUDE "internal_errormsg.ab3"
000293F4 <internal_errormsg.ab3@117> XINCLUDE "internal_errormsg.ab3"
0002941C <internal_errormsg.ab3@118> XINCLUDE "internal_errormsg.ab3"
00029438 <internal_errormsg.ab3@122> XINCLUDE "internal_errormsg.ab3"
00029458 <internal_errormsg.ab3@123> XINCLUDE "internal_errormsg.ab3"
00029470 <internal_errormsg.ab3@124> XINCLUDE "internal_errormsg.ab3"
000294B4 <internal_errormsg.ab3@125> XINCLUDE "internal_errormsg.ab3"
000294FC <internal_errormsg.ab3@126> XINCLUDE "internal_errormsg.ab3"
00029526 <internal_errormsg.ab3@127> XINCLUDE "internal_errormsg.ab3"
00029550 <internal_errormsg.ab3@128> XINCLUDE "internal_errormsg.ab3"
0002956A <internal_errormsg.ab3@132> XINCLUDE "internal_errormsg.ab3"
00029594 <internal_errormsg.ab3@133> XINCLUDE "internal_errormsg.ab3"
000295E8 <internal_errormsg.ab3@134> XINCLUDE "internal_errormsg.ab3"
00029634 <internal_errormsg.ab3@135> XINCLUDE "internal_errormsg.ab3"
0002966C <internal_errormsg.ab3@136> XINCLUDE "internal_errormsg.ab3"
00029672 <internal_errormsg.ab3@139> XINCLUDE "internal_errormsg.ab3"
00029680 <internal_errormsg.ab3@141> XINCLUDE "internal_errormsg.ab3"
000296B0 <internal_errormsg.ab3@144> XINCLUDE "internal_errormsg.ab3"
000296E4 <internal_errormsg.ab3@145> XINCLUDE "internal_errormsg.ab3"
0002974A <internal_errormsg.ab3@146> XINCLUDE "internal_errormsg.ab3"
00029768 <internal_errormsg.ab3@147> XINCLUDE "internal_errormsg.ab3"
000297E2 <internal_errormsg.ab3@148> XINCLUDE "internal_errormsg.ab3"
0002980A <internal_errormsg.ab3@149> XINCLUDE "internal_errormsg.ab3"
00029820 <internal_errormsg.ab3@150> XINCLUDE "internal_errormsg.ab3"
00029834 <internal_errormsg.ab3@151> XINCLUDE "internal_errormsg.ab3"
00029836 <internal_errormsg.ab3@154> XINCLUDE "internal_errormsg.ab3"
00029837 <internal_errormsg.ab3@155> XINCLUDE "internal_errormsg.ab3"
00029838 <internal_errormsg.ab3@156> XINCLUDE "internal_errormsg.ab3"
00029858 <internal_errormsg.ab3@158> XINCLUDE "internal_errormsg.ab3"
0002985E <internal_errormsg.ab3@161> XINCLUDE "internal_errormsg.ab3"
00029870 <internal_errormsg.ab3@163> XINCLUDE "internal_errormsg.ab3"
000298A4 <internal_errormsg.ab3@166> XINCLUDE "internal_errormsg.ab3"
000298BC <internal_errormsg.ab3@167> XINCLUDE "internal_errormsg.ab3"
000298D8 <internal_errormsg.ab3@168> XINCLUDE "internal_errormsg.ab3"
000298F0 <internal_errormsg.ab3@169> XINCLUDE "internal_errormsg.ab3"
00029910 <internal_errormsg.ab3@170> XINCLUDE "internal_errormsg.ab3"
00029930 <internal_errormsg.ab3@171> XINCLUDE "internal_errormsg.ab3"
00029956 <internal_errormsg.ab3@172> XINCLUDE "internal_errormsg.ab3"
0002996C <internal_errormsg.ab3@173> XINCLUDE "internal_errormsg.ab3"
00029988 <internal_errormsg.ab3@174> XINCLUDE "internal_errormsg.ab3"
000299B2 <internal_errormsg.ab3@175> XINCLUDE "internal_errormsg.ab3"
000299CA <internal_errormsg.ab3@176> XINCLUDE "internal_errormsg.ab3"
000299E6 <internal_errormsg.ab3@177> XINCLUDE "internal_errormsg.ab3"
00029A06 <internal_errormsg.ab3@178> XINCLUDE "internal_errormsg.ab3"
00029A1E <internal_errormsg.ab3@179> XINCLUDE "internal_errormsg.ab3"
00029A22 <internal_errormsg.ab3@182> XINCLUDE "internal_errormsg.ab3"
00029A28 <internal_errormsg.ab3@183> XINCLUDE "internal_errormsg.ab3"
00029A2E <internal_errormsg.ab3@184> XINCLUDE "internal_errormsg.ab3"
00029A43 <internal_errormsg.ab3@185> XINCLUDE "internal_errormsg.ab3"
00029A49 <internal_errormsg.ab3@187> XINCLUDE "internal_errormsg.ab3"
00029A4A <internal_errormsg.ab3@188> XINCLUDE "internal_errormsg.ab3"
00029A4E <internal_errormsg.ab3@191> XINCLUDE "internal_errormsg.ab3"
00029A54 <internal_errormsg.ab3@192> XINCLUDE "internal_errormsg.ab3"
00029A5A <internal_errormsg.ab3@193> XINCLUDE "internal_errormsg.ab3"
00029A6D <internal_errormsg.ab3@194> XINCLUDE "internal_errormsg.ab3"
00029A73 <internal_errormsg.ab3@196> XINCLUDE "internal_errormsg.ab3"
00029A74 <internal_errormsg.ab3@197> XINCLUDE "internal_errormsg.ab3"
00029A92 <internal_errormsg.ab3@199> XINCLUDE "internal_errormsg.ab3"
00029AAA <internal_errormsg.ab3@200> XINCLUDE "internal_errormsg.ab3"
00029AC6 <internal_errormsg.ab3@201> XINCLUDE "internal_errormsg.ab3"
00029AF0 <internal_errormsg.ab3@202> XINCLUDE "internal_errormsg.ab3"
00029B0A <internal_errormsg.ab3@203> XINCLUDE "internal_errormsg.ab3"
00029B2A <internal_errormsg.ab3@204> XINCLUDE "internal_errormsg.ab3"
00029B48 <internal_errormsg.ab3@205> XINCLUDE "internal_errormsg.ab3"
00029B76 <internal_errormsg.ab3@206> XINCLUDE "internal_errormsg.ab3"
00029B80 <internal_errormsg.ab3@209> XINCLUDE "internal_errormsg.ab3"
00029BB2 <internal_errormsg.ab3@210> XINCLUDE "internal_errormsg.ab3"
00029BD0 <internal_errormsg.ab3@212> XINCLUDE "internal_errormsg.ab3"
00029BEE <internal_errormsg.ab3@213> XINCLUDE "internal_errormsg.ab3"
00029C0E <internal_errormsg.ab3@214> XINCLUDE "internal_errormsg.ab3"
00029C34 <internal_errormsg.ab3@215> XINCLUDE "internal_errormsg.ab3"
00029C5A <internal_errormsg.ab3@216> XINCLUDE "internal_errormsg.ab3"
00029C82 <internal_errormsg.ab3@217> XINCLUDE "internal_errormsg.ab3"
00029CA0 <internal_errormsg.ab3@218> XINCLUDE "internal_errormsg.ab3"
00029CC0 <internal_errormsg.ab3@219> XINCLUDE "internal_errormsg.ab3"
00029CDA <internal_errormsg.ab3@220> XINCLUDE "internal_errormsg.ab3"
00029CFC <internal_errormsg.ab3@221> XINCLUDE "internal_errormsg.ab3"
00029D1A <internal_errormsg.ab3@222> XINCLUDE "internal_errormsg.ab3"
00029D3C <internal_errormsg.ab3@223> XINCLUDE "internal_errormsg.ab3"
00029D60 <internal_errormsg.ab3@224> XINCLUDE "internal_errormsg.ab3"
00029D66 <internal_errormsg.ab3@227> XINCLUDE "internal_errormsg.ab3"
00029D82 <internal_errormsg.ab3@228> XINCLUDE "internal_errormsg.ab3"
00029D9E <internal_errormsg.ab3@230> XINCLUDE "internal_errormsg.ab3"
00029DBC <internal_errormsg.ab3@231> XINCLUDE "internal_errormsg.ab3"
00029DDA <internal_errormsg.ab3@232> XINCLUDE "internal_errormsg.ab3"
00029E28 <internal_errormsg.ab3@233> XINCLUDE "internal_errormsg.ab3"
00029E46 <internal_errormsg.ab3@234> XINCLUDE "internal_errormsg.ab3"
00029E64 <internal_errormsg.ab3@235> XINCLUDE "internal_errormsg.ab3"
00029E7E <internal_errormsg.ab3@236> XINCLUDE "internal_errormsg.ab3"
00029ECA <internal_errormsg.ab3@237> XINCLUDE "internal_errormsg.ab3"
00029EF0 <internal_errormsg.ab3@238> XINCLUDE "internal_errormsg.ab3"
00029F10 <internal_errormsg.ab3@239> XINCLUDE "internal_errormsg.ab3"
00029F32 <internal_errormsg.ab3@240> XINCLUDE "internal_errormsg.ab3"
00029F4E <internal_errormsg.ab3@241> XINCLUDE "internal_errormsg.ab3"
00029F74 <internal_errormsg.ab3@242> XINCLUDE "internal_errormsg.ab3"
00029F90 <internal_errormsg.ab3@243> XINCLUDE "internal_errormsg.ab3"
00029FAE <internal_errormsg.ab3@244> XINCLUDE "internal_errormsg.ab3"
00029FD6 <internal_errormsg.ab3@245> XINCLUDE "internal_errormsg.ab3"
00029FF2 <internal_errormsg.ab3@246> XINCLUDE "internal_errormsg.ab3"
0002A002 <internal_errormsg.ab3@247> XINCLUDE "internal_errormsg.ab3"
0002A024 <internal_errormsg.ab3@248> XINCLUDE "internal_errormsg.ab3"
0002A028 <internal_errormsg.ab3@251> XINCLUDE "internal_errormsg.ab3"
0002A02A <internal_errormsg.ab3@254> XINCLUDE "internal_errormsg.ab3"
0002A044 <internal_errormsg.ab3@255> XINCLUDE "internal_errormsg.ab3"
0002A068 <internal_errormsg.ab3@257> XINCLUDE "internal_errormsg.ab3"
0002A088 <internal_errormsg.ab3@258> XINCLUDE "internal_errormsg.ab3"
0002A0BA <internal_errormsg.ab3@259> XINCLUDE "internal_errormsg.ab3"
0002A118 <internal_errormsg.ab3@260> XINCLUDE "internal_errormsg.ab3"
0002A150 <internal_errormsg.ab3@261> XINCLUDE "internal_errormsg.ab3"
0002A18E <internal_errormsg.ab3@262> XINCLUDE "internal_errormsg.ab3"
0002A1C4 <internal_errormsg.ab3@263> XINCLUDE "internal_errormsg.ab3"
0002A1F6 <internal_errormsg.ab3@264> XINCLUDE "internal_errormsg.ab3"
0002A21A <internal_errormsg.ab3@265> XINCLUDE "internal_errormsg.ab3"
0002A23E <internal_errormsg.ab3@266> XINCLUDE "internal_errormsg.ab3"
0002A288 <internal_errormsg.ab3@267> XINCLUDE "internal_errormsg.ab3"
0002A2B0 <internal_errormsg.ab3@268> XINCLUDE "internal_errormsg.ab3"
0002A2FA <internal_errormsg.ab3@269> XINCLUDE "internal_errormsg.ab3"
0002A33A <internal_errormsg.ab3@270> XINCLUDE "internal_errormsg.ab3"
0002A33A <AmiBlitz3.ab3@11298> XINCLUDE "internal_errormsg.ab3"
0002A33C <AmiBlitz3.ab3@11302> ezerr:   Ds.w 1                                            ;for simple errors
0002A342 <AmiBlitz3.ab3@11308>    MOVE.l myline,d0
0002A346 <AmiBlitz3.ab3@11309>   BNE handle_compileerror__l2
0002A34C <AmiBlitz3.ab3@11311>     MOVE.l a5,lastsourcepos
0002A34E <AmiBlitz3.ab3@11313>     SUBA.l a5,a5
0002A354 <AmiBlitz3.ab3@11315>   TST.l usedfrom
0002A358 <AmiBlitz3.ab3@11316>   BEQ handle_compileerror__org
0002A35E <AmiBlitz3.ab3@11317>     MOVEA.l usedfrom,a5
0002A364 <AmiBlitz3.ab3@11320>   TST.w dirmode
0002A368 <AmiBlitz3.ab3@11321>   BNE.b handle_compileerror__quiet
0002A36E <AmiBlitz3.ab3@11322>     JSR call_setpointernormal
0002A372 <AmiBlitz3.ab3@11323>     MOVE.w ezerr(PC),D0
0002A376 <AmiBlitz3.ab3@11324>     BNE.w handle_compileerror__skip
0002A37C <AmiBlitz3.ab3@11325>       MOVE.w cfetchmode,D0
0002A380 <AmiBlitz3.ab3@11326>       BEQ.w handle_compileerror__skip2
0002A38A <AmiBlitz3.ab3@11327>         MOVE.l oldlibat,destbufferend                      ;fix up lib thing.
0002A390 <AmiBlitz3.ab3@11330>   MOVE.w constmode,D0
0002A394 <AmiBlitz3.ab3@11331>   BEQ.b handle_compileerror__skip3
0002A398 <AmiBlitz3.ab3@11332>     BSR.w asmerr2
0002A39E <AmiBlitz3.ab3@11335>   MOVE.l firstlocal,D1
0002A3A4 <AmiBlitz3.ab3@11336>   OR.l firstglob,D1
0002A3A8 <AmiBlitz3.ab3@11337>   BEQ.b handle_compileerror__notproc                       ;?!?!?!
0002A3AE <AmiBlitz3.ab3@11338> 
0002A3B2 <AmiBlitz3.ab3@11339>     BNE handle_compileerror__notproc                       ; yes skip
0002A3B8 <AmiBlitz3.ab3@11340>       JSR JL_0_DB5C                                        ; no free some data ????
0002A3C0 <AmiBlitz3.ab3@11343>   MOVE.w #$FFFF,anyerrs                                    ;#-1,anyerrs org source
0002A3CA <AmiBlitz3.ab3@11344>   CMP.l #"NORE",reqmode                                    ;for used functions
0002A3CE <AmiBlitz3.ab3@11345>   BEQ handle_compileerror__notproc_l1
0002A3D8 <AmiBlitz3.ab3@11346>     MOVE.l linenumat,compilelinecounter
0002A3DE <AmiBlitz3.ab3@11349>   JSR close_compilewin
0002A3E0 <AmiBlitz3.ab3@11352>   MOVEA.l (A7)+,A0
0002A3E6 <AmiBlitz3.ab3@11353>   MOVE.l errorcounter,d0                                   ; added to make maxerrorcount changable in CLIMode  tomsmart1
0002A3EC <AmiBlitz3.ab3@11354>   CMP.l maxerrorcount,d0                                   ; changed to make maxerrorcount changable in CLIMode  tomsmart1
0002A3F0 <AmiBlitz3.ab3@11355>   BLT 'lesserror
0002A3F6 <AmiBlitz3.ab3@11356>   LEA errorlimit_text,a0
0002A3FC <AmiBlitz3.ab3@11359>   ADDQ.l #1,errorcounter
0002A402 <AmiBlitz3.ab3@11360>   JSR errorstringparse
0002A40C <AmiBlitz3.ab3@11361>   CMP.l #"NORE",reqmode                                    ;for used functions
0002A410 <AmiBlitz3.ab3@11362>   BEQ handle_compileerror__skip_Lxx2
0002A416 <AmiBlitz3.ab3@11363>   TST.l CLIMode
0002A41A <AmiBlitz3.ab3@11364>   BNE 'climode_output
0002A420 <AmiBlitz3.ab3@11367>     JSR save_errorfile
0002A424 <AmiBlitz3.ab3@11368>     BRA 'end_output
0002A42A <AmiBlitz3.ab3@11371>     JSR stdout_error
0002A430 <AmiBlitz3.ab3@11373>      MOVE.l errorcounter,d0                          ; added to make maxerrorcount changable in CLIMode  tomsmart1
0002A436 <AmiBlitz3.ab3@11374>      CMP.l maxerrorcount,d0                          ; changed to make maxerrorcount changable in CLIMode  tomsmart1
0002A43A <AmiBlitz3.ab3@11375>      BGT 'end_output
0002A440 <AmiBlitz3.ab3@11376>     MOVE.l lastsourcepos,a5
0002A442 <AmiBlitz3.ab3@11378>  'loop TST.b (a5)
0002A446 <AmiBlitz3.ab3@11379>       BEQ 'ok2
0002A448 <AmiBlitz3.ab3@11380>     MOVE.b (a5)+,d0                                  ; position to usefull source position to avoid following errors
0002A44C <AmiBlitz3.ab3@11381>     BEQ 'ok
0002A450 <AmiBlitz3.ab3@11382>     CMP.b #":",d0
0002A454 <AmiBlitz3.ab3@11383>     BEQ 'ok
0002A458 <AmiBlitz3.ab3@11384>     BRA 'loop
0002A45A <AmiBlitz3.ab3@11386>  'ok SUBQ.l #1,a5
0002A462 <AmiBlitz3.ab3@11388>  'ok2 MOVE.w #0,lastchar
0002A46A <AmiBlitz3.ab3@11389>     MOVE.b #1,iserror
0002A470 <AmiBlitz3.ab3@11390>     MOVE.l stackaddr,a7
0002A472 <AmiBlitz3.ab3@11391>     RTS
0002A474 <AmiBlitz3.ab3@11397>   MOVE.l A0,-(a7)
0002A4B2 <AmiBlitz3.ab3@11398>   !ComData_GetL{comFunc_ErrorRequest,A1}
0002A4B4 <AmiBlitz3.ab3@11399>   MOVE.l (a7)+,A0
0002A4B8 <AmiBlitz3.ab3@11401>   MOVEM.l d6/D7/A6,-(A7)
0002A4BE <AmiBlitz3.ab3@11402>   MOVE.l includeline,d7
0002A4C4 <AmiBlitz3.ab3@11403>   MOVE.l #"INLN",a6
0002A4CE <AmiBlitz3.ab3@11404>   MOVE.l errstack,tempa7
0002A4D0 <AmiBlitz3.ab3@11405>   JSR (A1)                                                  ;open ped errorrequest
0002A4D4 <AmiBlitz3.ab3@11407>   MOVEM.l (A7)+,D7/d6/A6
0002A4DA <AmiBlitz3.ab3@11410>   MOVE.l tempa7,a7
0002A4E0 <AmiBlitz3.ab3@11411>   MOVEA.l errcont,A0
0002A4E2 <AmiBlitz3.ab3@11413> RTS
0002A4E8 <AmiBlitz3.ab3@11416>   MOVEA.l errstack,A7
0002A4EE <AmiBlitz3.ab3@11417>   MOVEA.l errcont,A0
0002A4F0 <AmiBlitz3.ab3@11419> RTS
0002A4F2 <AmiBlitz3.ab3@11422>   MOVE.l (A7),D0
0002A4F8 <AmiBlitz3.ab3@11423>   MOVEA.l errstack,A7
0002A4FE <AmiBlitz3.ab3@11424>   MOVEA.l errcont,A0
0002A500 <AmiBlitz3.ab3@11425> JMP (A0)
0002A504 <AmiBlitz3.ab3@11431>   CMP.w #$7A,D0                                            ;'z'
0002A508 <AmiBlitz3.ab3@11432>    BHI.w tstalpha__no
0002A50C <AmiBlitz3.ab3@11433>   CMP.w #$41,D0                                            ;'A'
0002A510 <AmiBlitz3.ab3@11434>    BCS.w tstalpha__no
0002A514 <AmiBlitz3.ab3@11435>   CMP.w #$61,D0                                            ;'a'
0002A518 <AmiBlitz3.ab3@11436>    BCC.w tstalpha__yes
0002A51C <AmiBlitz3.ab3@11437>   CMP.w #$5A,D0                                            ;'Z'
0002A520 <AmiBlitz3.ab3@11438>    BHI.w tstalpha__no
0002A522 <AmiBlitz3.ab3@11441>   CMP.w D0,D0
0002A524 <AmiBlitz3.ab3@11444> RTS
0002A528 <AmiBlitz3.ab3@11452>   CMP.w #$30,D0                                            ;'0'
0002A52C <AmiBlitz3.ab3@11453>    BCS.w tstnum__skip
0002A530 <AmiBlitz3.ab3@11454>   CMP.w #$39,D0                                            ;'9'
0002A534 <AmiBlitz3.ab3@11455>    BHI.w tstnum__skip                                     
0002A536 <AmiBlitz3.ab3@11456>   CMP.w D0,D0
0002A538 <AmiBlitz3.ab3@11459> RTS
0002A55A <AmiBlitz3.ab3@11465>   !compare1                                                ;bsr.w tstalpha
0002A55E <AmiBlitz3.ab3@11466>    BEQ.w tstlab__skip
0002A570 <AmiBlitz3.ab3@11467>   !compare2                                                ;bsr.w tstnum2
0002A574 <AmiBlitz3.ab3@11468>    BEQ.w tstlab__skip
0002A578 <AmiBlitz3.ab3@11469>   CMP.w #$5F,D0                                            ;'_'
0002A57C <AmiBlitz3.ab3@11470>    BEQ.w tstlab__skip
0002A580 <AmiBlitz3.ab3@11471>   CMP.w #$27,D0                                            ;#loclabch,d0 org source
0002A582 <AmiBlitz3.ab3@11474> RTS
0002A58C <AmiBlitz3.ab3@11479>   MOVE.w oldqflag,instringon
0002A592 <AmiBlitz3.ab3@11480>   MOVEA.l lastsourcepos,A5
0002A598 <AmiBlitz3.ab3@11483>   MOVE.l a5,beforeparameterfetch
0002A59E <AmiBlitz3.ab3@11484>   LEA ptr_parameterstore,A1
0002A5A0 <AmiBlitz3.ab3@11487>   MOVEQ.l #$00,D2
0002A5A6 <AmiBlitz3.ab3@11490>   LEA chartab,a0
0002A5A8 <AmiBlitz3.ab3@11491>   MOVEQ #0,d0
0002A5AE <AmiBlitz3.ab3@11492>   MOVE.l A5,lastsourcepos
0002A5B8 <AmiBlitz3.ab3@11493>   MOVE.w instringon,oldqflag
0002A5BA <AmiBlitz3.ab3@11496>     MOVE.b (a5)+,d0
0002A5BE <AmiBlitz3.ab3@11497>   CMP.b #$20,d0                                            ;space deftype
0002A5C2 <AmiBlitz3.ab3@11498>   BEQ makename4__retry
0002A5C8 <AmiBlitz3.ab3@11500>   MOVE.w d0,lastchar
0002A5CC <AmiBlitz3.ab3@11501>   TST.b 0(a0,d0.w)
0002A5D0 <AmiBlitz3.ab3@11502>   BNE makename__done
0002A5D2 <AmiBlitz3.ab3@11511>   MOVE.b D0,(A1)+
0002A5D4 <AmiBlitz3.ab3@11512>   ADDQ.l #1,D2
0002A5DA <AmiBlitz3.ab3@11513>   MOVE.l A5,lastsourcepos
0002A5DC <AmiBlitz3.ab3@11516>   MOVE.b (a5)+,d0
0002A5E2 <AmiBlitz3.ab3@11517>   MOVE.b d0,lastchar+1
0002A5E6 <AmiBlitz3.ab3@11518>   CMP.b #$20,d0
0002A5EA <AmiBlitz3.ab3@11519>   BEQ makename__loop_l20
0002A5EE <AmiBlitz3.ab3@11521>   TST.b 0(a0,d0)
0002A5F2 <AmiBlitz3.ab3@11522>   BEQ makename__loop
0002A5F6 <AmiBlitz3.ab3@11523>   CMP.b #2,d0
0002A5FA <AmiBlitz3.ab3@11524>   BNE makename__loop_lf1
0002A600 <AmiBlitz3.ab3@11525>   MOVEA.l usedfrom,A5
0002A606 <AmiBlitz3.ab3@11526>   CLR.l usedfrom
0002A60A <AmiBlitz3.ab3@11527> BRA makename__loop_ln1
0002A60E <AmiBlitz3.ab3@11530>   CMP.b #1,d0
0002A612 <AmiBlitz3.ab3@11531>   BNE makename__loop_l20
0002A616 <AmiBlitz3.ab3@11532>   MOVEA.l cmakea5(PC),A5
0002A61A <AmiBlitz3.ab3@11533> BRA makename__loop_ln1
0002A61E <AmiBlitz3.ab3@11536>   CMP.b #$7e,d0
0002A622 <AmiBlitz3.ab3@11537>             BNE makename__loop_lt
0002A628 <AmiBlitz3.ab3@11538>             TST.w cmake
0002A62C <AmiBlitz3.ab3@11539>             BNE.w makename__loop_a1
0002A62E <AmiBlitz3.ab3@11540>             SUBQ.l #1,a5
0002A632 <AmiBlitz3.ab3@11541>             BSR.w get1bytemain
0002A636 <AmiBlitz3.ab3@11542> BRA makename__loop
0002A63A <AmiBlitz3.ab3@11546> BRA makename__loop_gpex
0002A63E <AmiBlitz3.ab3@11550>   BSR.w getchar
0002A660 <AmiBlitz3.ab3@11551>    !compare1                                               ;bsr.w tstalpha
0002A664 <AmiBlitz3.ab3@11552>    BEQ.w makename__loop_getp1
0002A676 <AmiBlitz3.ab3@11553>    !compare2                                               ;bsr.w tstnum
0002A67A <AmiBlitz3.ab3@11554>    BEQ.w makename__loop_getp1
0002A67E <AmiBlitz3.ab3@11555>   CMP.w #$5F,D0                                            ;'_'
0002A682 <AmiBlitz3.ab3@11556>    BEQ.w makename__loop_getp1
0002A686 <AmiBlitz3.ab3@11557>   CMP.w #$27,D0                                            ;#loclabch,d0 org source
0002A68A <AmiBlitz3.ab3@11561>       BNE makename__loop_gpex
0002A68E <AmiBlitz3.ab3@11562>       CMP.b #$20,d0
0002A692 <AmiBlitz3.ab3@11563>       BNE.w makename__loop
0002A694 <AmiBlitz3.ab3@11566>      TST.b d0
0002A698 <AmiBlitz3.ab3@11567>      BPL makename__loop_l10
0002A69A <AmiBlitz3.ab3@11568>      SUBQ.l #1,a5
0002A69E <AmiBlitz3.ab3@11569>      BSR get1byte_
0002A6A2 <AmiBlitz3.ab3@11572>    CMP.w #$20,D0
0002A6A6 <AmiBlitz3.ab3@11573>    BNE.w makename__done
0002A6A8 <AmiBlitz3.ab3@11574>    MOVEQ #0,d0
0002A6AE <AmiBlitz3.ab3@11575>   MOVE.l a5,lastsourcepos
0002A6B0 <AmiBlitz3.ab3@11578>   MOVE.b (a5)+,d0                                          ;neuneu
0002A6B4 <AmiBlitz3.ab3@11579>   BPL makename__loop_l101:
0002A6B6 <AmiBlitz3.ab3@11580>   ASL.w #8,d0
0002A6B8 <AmiBlitz3.ab3@11581>   MOVE.b (a5)+,d0
0002A6BE <AmiBlitz3.ab3@11584>   TST.w instringon
0002A6C2 <AmiBlitz3.ab3@11585>   BNE makename__loop_l102
0002A6C6 <AmiBlitz3.ab3@11586>   CMP.b #$20,d0
0002A6CA <AmiBlitz3.ab3@11587>   BEQ makename__loop_l103
0002A6CE <AmiBlitz3.ab3@11588>   CMP.b #";",d0
0002A6D2 <AmiBlitz3.ab3@11589>   BNE makename__loop_l102
0002A6D4 <AmiBlitz3.ab3@11592>   MOVE.b (A5)+,D0
0002A6D8 <AmiBlitz3.ab3@11593>              BEQ makename__loop_l1
0002A6DC <AmiBlitz3.ab3@11594>              CMP.b #":",d0
0002A6E0 <AmiBlitz3.ab3@11595>              BNE makename__loop_lr                         ;:@
0002A6E4 <AmiBlitz3.ab3@11596>              CMP.b #"@",(a5)
0002A6E8 <AmiBlitz3.ab3@11597>              BNE makename__loop_lr
0002A6EA <AmiBlitz3.ab3@11598>              ADDQ #1,a5
0002A6F0 <AmiBlitz3.ab3@11602>   MOVE.w d0,lastchar
0002A6F4 <AmiBlitz3.ab3@11606>   CMP.b #";",d0
0002A6F8 <AmiBlitz3.ab3@11607>   BEQ makename__done_l11
0002A6FA <AmiBlitz3.ab3@11608>   CLR.b (A1)
0002A6FC <AmiBlitz3.ab3@11610>   TST.w D2
0002A6FE <AmiBlitz3.ab3@11611> RTS
0002A700 <AmiBlitz3.ab3@11614>   CLR.b (a1)
0002A702 <AmiBlitz3.ab3@11615>   MOVEQ #0,d0
0002A708 <AmiBlitz3.ab3@11616>   MOVE.w d0,lastchar
0002A70A <AmiBlitz3.ab3@11618>   TST.w D2
0002A70C <AmiBlitz3.ab3@11619> RTS
0002A70E <AmiBlitz3.ab3@11625>   MOVE.l (A2),D0
0002A712 <AmiBlitz3.ab3@11628>   BEQ.w findlast__here
0002A714 <AmiBlitz3.ab3@11629>   MOVEA.l D0,A2
0002A718 <AmiBlitz3.ab3@11630> BRA.w findlast__loop
0002A71C <AmiBlitz3.ab3@11633> BRA.w reget
0002A71E <AmiBlitz3.ab3@11639>   MOVE.l (A2),-(A7)
0002A722 <AmiBlitz3.ab3@11640>   BSR.w addlabel
0002A724 <AmiBlitz3.ab3@11641>   MOVE.l (A7)+,(A2)
0002A726 <AmiBlitz3.ab3@11642> RTS
0002A72C <AmiBlitz3.ab3@11647>   CLR.l fp0addr
0002A732 <AmiBlitz3.ab3@11648>   TST.w dirmode
0002A736 <AmiBlitz3.ab3@11649>    BNE.w illdirerr
0002A738 <AmiBlitz3.ab3@11650>   MOVEQ.l #$00,D0
0002A73A <AmiBlitz3.ab3@11651>   MOVE.w D7,D0
0002A73C <AmiBlitz3.ab3@11652>   ADD.w D2,D0
0002A73E <AmiBlitz3.ab3@11653>   ADDQ.w #1,D0
0002A740 <AmiBlitz3.ab3@11654>   MOVE.w D0,D2
0002A742 <AmiBlitz3.ab3@11655>   ADDQ.l #2,d0
0002A744 <AmiBlitz3.ab3@11656>   MOVEQ.l #$01,D1
0002A74A <AmiBlitz3.ab3@11657>   MOVEA.l _execbase,A6
0002A750 <AmiBlitz3.ab3@11658>   MOVE.l mempool2,a0
0002A754 <AmiBlitz3.ab3@11659>   JSR _AllocPooled(a6)
0002A75A <AmiBlitz3.ab3@11661>   MOVE.l lastlabel,a2
0002A75C <AmiBlitz3.ab3@11662>   MOVE.l D0,(A2)
0002A75E <AmiBlitz3.ab3@11663>   MOVE.l d0,a0
0002A760 <AmiBlitz3.ab3@11664>   CLR.l (a0)
0002A766 <AmiBlitz3.ab3@11665>   MOVE.l a0,lastlabel
0002A768 <AmiBlitz3.ab3@11666>   MOVE.l d0,A2
0002A76C <AmiBlitz3.ab3@11667>   LEA -$1(A0,D7.W),A0
0002A76E <AmiBlitz3.ab3@11668>   MOVE.b D2,(A0)+
0002A774 <AmiBlitz3.ab3@11669>   LEA ptr_parameterstore,A1
0002A776 <AmiBlitz3.ab3@11670>   MOVEQ #0,d0
0002A778 <AmiBlitz3.ab3@11671>   MOVEQ #0,d1
0002A77A <AmiBlitz3.ab3@11674>   MOVE.b (A1)+,d1
0002A77E <AmiBlitz3.ab3@11675>    BEQ 'l1
0002A784 <AmiBlitz3.ab3@11676>    !hashalgo
0002A786 <AmiBlitz3.ab3@11677>    MOVE.b d1,(A0)+
0002A78A <AmiBlitz3.ab3@11678> BRA addlabel_loop2a
0002A78C <AmiBlitz3.ab3@11681>    CLR.b (a0)+
0002A792 <AmiBlitz3.ab3@11682>    LEA labelhash,a0
0002A798 <AmiBlitz3.ab3@11683>    AND.l #hashsize,d0
0002A79A <AmiBlitz3.ab3@11684>    ASL.l #2,d0
0002A79E <AmiBlitz3.ab3@11685>    MOVE.l 0(a0,d0),d1
0002A7A2 <AmiBlitz3.ab3@11686>    MOVE.l d1,$c(a2)
0002A7A6 <AmiBlitz3.ab3@11687>    MOVE.l a2,0(a0,d0)
0002A7A8 <AmiBlitz3.ab3@11688>    MOVEQ #0,d0
0002A7AC <AmiBlitz3.ab3@11689> BRA.w reget
0002A7B2 <AmiBlitz3.ab3@11693>    TST.b newvariable
0002A7B6 <AmiBlitz3.ab3@11694>    BNE addlabel
0002A7BC <AmiBlitz3.ab3@11697>   TST.w dirmode
0002A7C0 <AmiBlitz3.ab3@11698>    BNE.w illdirerr
0002A7C2 <AmiBlitz3.ab3@11699>   MOVEQ.l #$00,D0
0002A7C4 <AmiBlitz3.ab3@11700>   MOVE.w D7,D0
0002A7C6 <AmiBlitz3.ab3@11701>   ADD.w D2,D0
0002A7C8 <AmiBlitz3.ab3@11702>   ADDQ.w #1,D0
0002A7CA <AmiBlitz3.ab3@11703>   MOVE.w D0,D2
0002A7CC <AmiBlitz3.ab3@11704>   MOVEQ.l #$01,D1
0002A7D2 <AmiBlitz3.ab3@11705>   MOVEA.l _execbase,A6
0002A7D8 <AmiBlitz3.ab3@11706>   MOVE.l mempool2,a0
0002A7DC <AmiBlitz3.ab3@11707>   JSR _AllocPooled(a6)
0002A7DE <AmiBlitz3.ab3@11708>   MOVEA.l D0,A0
0002A7E4 <AmiBlitz3.ab3@11710>   LEA varbase,a2
0002A7E6 <AmiBlitz3.ab3@11711>   MOVE.l (a2),(a0)
0002A7E8 <AmiBlitz3.ab3@11712>   MOVE.l A0,(A2)
0002A7EA <AmiBlitz3.ab3@11713>   MOVEA.l A0,A2
0002A7EE <AmiBlitz3.ab3@11714>   LEA -$1(A0,D7.W),A0
0002A7F0 <AmiBlitz3.ab3@11715>   MOVE.b D2,(A0)+
0002A7F6 <AmiBlitz3.ab3@11716>   LEA ptr_parameterstore,A1
0002A7F8 <AmiBlitz3.ab3@11717>   MOVEQ #0,d0
0002A7FA <AmiBlitz3.ab3@11718>   MOVEQ #0,d1
0002A7FC <AmiBlitz3.ab3@11721>   MOVE.b (A1)+,d1
0002A800 <AmiBlitz3.ab3@11722>    BEQ 'l12
0002A806 <AmiBlitz3.ab3@11723>    !hashalgo
0002A808 <AmiBlitz3.ab3@11724>    MOVE.b d1,(A0)+
0002A80C <AmiBlitz3.ab3@11725> BRA 'l11
0002A80E <AmiBlitz3.ab3@11728>   CLR.b (a0)+
0002A814 <AmiBlitz3.ab3@11729>   LEA variablehash,a0
0002A81A <AmiBlitz3.ab3@11730>    AND.l #hashsize,d0
0002A81C <AmiBlitz3.ab3@11731>    ASL.l #2,d0
0002A820 <AmiBlitz3.ab3@11732>    MOVE.l 0(a0,d0),d1
0002A824 <AmiBlitz3.ab3@11733>    MOVE.l d1,$e(a2)
0002A828 <AmiBlitz3.ab3@11734>    MOVE.l a2,0(a0,d0)
0002A82A <AmiBlitz3.ab3@11735>    MOVEQ #0,d0
0002A82E <AmiBlitz3.ab3@11736> BRA.w reget
0002A834 <AmiBlitz3.ab3@11740>   TST.w dirmode
0002A838 <AmiBlitz3.ab3@11741>    BNE.w illdirerr
0002A83A <AmiBlitz3.ab3@11748>   MOVEQ.l #$00,D0
0002A83C <AmiBlitz3.ab3@11749>   MOVE.w D7,D0
0002A83E <AmiBlitz3.ab3@11750>   ADD.w D2,D0
0002A840 <AmiBlitz3.ab3@11751>   ADDQ.w #1,D0
0002A842 <AmiBlitz3.ab3@11752>   MOVE.w D0,D2
0002A844 <AmiBlitz3.ab3@11753>   MOVEQ.l #$01,D1
0002A84A <AmiBlitz3.ab3@11754>   MOVEA.l _execbase,A6
0002A850 <AmiBlitz3.ab3@11755>   MOVE.l mempool2,a0
0002A854 <AmiBlitz3.ab3@11756>   JSR _AllocPooled(a6)
0002A856 <AmiBlitz3.ab3@11758>   MOVEA.l D0,A0
0002A858 <AmiBlitz3.ab3@11759>   MOVE.l A0,(A2)
0002A85A <AmiBlitz3.ab3@11760>   CLR.l (a0)
0002A85E <AmiBlitz3.ab3@11761>   CLR.l 8(a0)                                              ;clear next
0002A860 <AmiBlitz3.ab3@11762>   MOVEA.l A0,A2
0002A864 <AmiBlitz3.ab3@11763>   LEA -$1(A0,D7.W),A0
0002A866 <AmiBlitz3.ab3@11764>   MOVE.b D2,(A0)+                                          ;put in struct length
0002A86C <AmiBlitz3.ab3@11765>   LEA ptr_parameterstore,A1
0002A86E <AmiBlitz3.ab3@11766>   MOVEQ #0,d0
0002A870 <AmiBlitz3.ab3@11767>   MOVEQ #0,d1
0002A872 <AmiBlitz3.ab3@11770>   MOVE.b (A1)+,d1
0002A874 <AmiBlitz3.ab3@11773>   MOVE.b d1,(A0)+
0002A878 <AmiBlitz3.ab3@11774>   BNE.w addlabel_loop2
0002A87C <AmiBlitz3.ab3@11775> BRA.w reget
0002A87E <AmiBlitz3.ab3@11779>   MOVEQ.l #$13,D7
0002A884 <AmiBlitz3.ab3@11780>   LEA constantbase,A2
0002A888 <AmiBlitz3.ab3@11781> BRA.w findlab
0002A88A <AmiBlitz3.ab3@11785>   MOVEQ.l #$05+8,D7                                        ;#5,d7 org source
0002A890 <AmiBlitz3.ab3@11786>   LEA xinclude_base,A2
0002A894 <AmiBlitz3.ab3@11787> BRA.w findlab
0002A896 <AmiBlitz3.ab3@11791>   MOVEQ.l #$09,D7
0002A89C <AmiBlitz3.ab3@11792>   LEA firstconst,A2
0002A8A0 <AmiBlitz3.ab3@11793> BRA.w findlab
0002A8A2 <AmiBlitz3.ab3@11797>   MOVEQ.l #$0d,D7                                          ;find macro
0002A8A8 <AmiBlitz3.ab3@11798>   LEA macrobase,A2
0002A8AC <AmiBlitz3.ab3@11799> BRA.w findlab
0002A8B2 <AmiBlitz3.ab3@11803>   LEA labelhash,A2
0002A8B4 <AmiBlitz3.ab3@11804>   MOVEQ.l #$13,D7
0002A8B6 <AmiBlitz3.ab3@11805>   EXT.l d2
0002A8BC <AmiBlitz3.ab3@11806>   LEA ptr_parameterstore,A0
0002A8BE <AmiBlitz3.ab3@11807>   MOVEQ #0,d0
0002A8C0 <AmiBlitz3.ab3@11808>   MOVEQ #0,d1
0002A8C2 <AmiBlitz3.ab3@11811>     MOVE.b (a0)+,d1
0002A8C6 <AmiBlitz3.ab3@11812>     BEQ 'l15
0002A8CC <AmiBlitz3.ab3@11813>     !hashalgo
0002A8D0 <AmiBlitz3.ab3@11814> BRA 'l20
0002A8D6 <AmiBlitz3.ab3@11817>   AND.l #hashsize,d0
0002A8D8 <AmiBlitz3.ab3@11818>   ASL.l #2,d0
0002A8DC <AmiBlitz3.ab3@11819>   MOVE.l 0(a2,d0),d0
0002A8E0 <AmiBlitz3.ab3@11820> BRA 'l11
0002A8E4 <AmiBlitz3.ab3@11823>   MOVE.l $c(A2),D0                                         ;find label
0002A8E8 <AmiBlitz3.ab3@11826>   BEQ findlab__no
0002A8EA <AmiBlitz3.ab3@11827>   MOVEA.l D0,A2
0002A8EC <AmiBlitz3.ab3@11828>   MOVEQ.l #$00,D0
0002A8F0 <AmiBlitz3.ab3@11829>   MOVE.b -$1(A2,D7.l),D0
0002A8F6 <AmiBlitz3.ab3@11830>   LEA ptr_parameterstore,A0
0002A8F8 <AmiBlitz3.ab3@11831>   SUB.l D7,D0
0002A8FA <AmiBlitz3.ab3@11832>   SUBQ.l #1,D0
0002A8FC <AmiBlitz3.ab3@11833>   CMP.l D0,D2
0002A900 <AmiBlitz3.ab3@11834>    BNE.b 'l10
0002A904 <AmiBlitz3.ab3@11835>   LEA $0(A2,D7.W),A1
0002A906 <AmiBlitz3.ab3@11836>   SUBQ.l #1,D0
0002A908 <AmiBlitz3.ab3@11839>     MOVE.b (a1)+,d1
0002A90A <AmiBlitz3.ab3@11840>     CMP.b (a0)+,d1
0002A90E <AmiBlitz3.ab3@11842>     BNE.b 'l10
0002A912 <AmiBlitz3.ab3@11843>   DBF D0,'l201
0002A916 <AmiBlitz3.ab3@11845>   BSR.w reget
0002A918 <AmiBlitz3.ab3@11846>   CMP.w D0,D0
0002A91A <AmiBlitz3.ab3@11847> RTS
0002A91C <AmiBlitz3.ab3@11851>   MOVEQ.l #$0B,D7
0002A920 <AmiBlitz3.ab3@11852> BRA.w findlab
0002A926 <AmiBlitz3.ab3@11856>   LEA firstproc,A2
0002A92C <AmiBlitz3.ab3@11857>   MOVE.l #$21+#funcentry_extend,D7
0002A930 <AmiBlitz3.ab3@11858> BRA findlab
0002A936 <AmiBlitz3.ab3@11862>   LEA firstfor,A2
0002A938 <AmiBlitz3.ab3@11863>   MOVEQ.l #$11,D7
0002A93C <AmiBlitz3.ab3@11864> BRA.w findlab
0002A93E <AmiBlitz3.ab3@11868>   MOVEQ.l #$0F,D7
0002A942 <AmiBlitz3.ab3@11869> BRA.w findlab
0002A944 <AmiBlitz3.ab3@11873>   MOVEQ.l #$0F+4,D7
0002A94A <AmiBlitz3.ab3@11874>   TST.b newvariable
0002A94E <AmiBlitz3.ab3@11875>    BNE.w findlab
0002A954 <AmiBlitz3.ab3@11876>   LEA variablehash,A2
0002A95A <AmiBlitz3.ab3@11877>   LEA ptr_parameterstore,A0
0002A95C <AmiBlitz3.ab3@11878>   MOVEQ #0,d0
0002A95E <AmiBlitz3.ab3@11879>   MOVEQ #0,d1
0002A960 <AmiBlitz3.ab3@11882>     MOVE.b (a0)+,d1
0002A964 <AmiBlitz3.ab3@11883>     BEQ 'l15
0002A96A <AmiBlitz3.ab3@11884>     !hashalgo
0002A96E <AmiBlitz3.ab3@11885> BRA 'l20
0002A974 <AmiBlitz3.ab3@11888>   AND.l #hashsize,d0
0002A976 <AmiBlitz3.ab3@11889>   ASL.l #2,d0
0002A97A <AmiBlitz3.ab3@11890>   MOVE.l 0(a2,d0),d0
0002A97E <AmiBlitz3.ab3@11891> BRA 'l11
0002A982 <AmiBlitz3.ab3@11894>   MOVE.l $e(A2),D0                                         ;find label
0002A986 <AmiBlitz3.ab3@11897>   BEQ findlab__no
0002A988 <AmiBlitz3.ab3@11898>   MOVEA.l D0,A2
0002A98A <AmiBlitz3.ab3@11899>   MOVEQ.l #$00,D0
0002A98E <AmiBlitz3.ab3@11900>   MOVE.b -$1(A2,D7.W),D0
0002A994 <AmiBlitz3.ab3@11901>   LEA ptr_parameterstore,A0
0002A996 <AmiBlitz3.ab3@11902>   SUB.w D7,D0
0002A998 <AmiBlitz3.ab3@11903>   SUBQ.l #1,D0
0002A99A <AmiBlitz3.ab3@11904>   CMP.w D0,D2
0002A99E <AmiBlitz3.ab3@11905>    BNE.b 'l10
0002A9A2 <AmiBlitz3.ab3@11906>   LEA $0(A2,D7.W),A1
0002A9A4 <AmiBlitz3.ab3@11907>   SUBQ.l #1,D0
0002A9A6 <AmiBlitz3.ab3@11910>     MOVE.b (a1)+,d1
0002A9A8 <AmiBlitz3.ab3@11911>     CMP.b (a0)+,d1
0002A9AC <AmiBlitz3.ab3@11913>     BNE.b 'l10
0002A9B0 <AmiBlitz3.ab3@11914>   DBF D0,'l201
0002A9B4 <AmiBlitz3.ab3@11916>   BSR.w reget
0002A9B6 <AmiBlitz3.ab3@11917>   CMP.w D0,D0
0002A9B8 <AmiBlitz3.ab3@11918> RTS
0002A9BA <AmiBlitz3.ab3@11931>     MOVE.l (A2),D0                                         ;find label
0002A9BE <AmiBlitz3.ab3@11932>      BEQ.b findlab__no
0002A9C0 <AmiBlitz3.ab3@11933>     MOVEA.l D0,A2
0002A9C2 <AmiBlitz3.ab3@11934>     MOVEQ.l #$00,D0
0002A9C6 <AmiBlitz3.ab3@11935>     MOVE.b -$1(A2,D7.W),D0
0002A9C8 <AmiBlitz3.ab3@11936>     SUB.l D7,D0
0002A9CA <AmiBlitz3.ab3@11937>     SUBQ.l #1,D0
0002A9CC <AmiBlitz3.ab3@11938>   CMP.w D0,D2
0002A9D0 <AmiBlitz3.ab3@11939>   BNE.b findlab__loop
0002A9D4 <AmiBlitz3.ab3@11941>   LEA $0(A2,D7.W),A1
0002A9DA <AmiBlitz3.ab3@11942>   LEA ptr_parameterstore,A0
0002A9DC <AmiBlitz3.ab3@11943>   SUBQ.l #1,D0
0002A9DE <AmiBlitz3.ab3@11946>     MOVE.b (a1)+,d1
0002A9E0 <AmiBlitz3.ab3@11947>     CMP.b (a0)+,d1
0002A9E4 <AmiBlitz3.ab3@11949>     BNE.b findlab__loop
0002A9E8 <AmiBlitz3.ab3@11950>   DBF D0,findlab__loop2
0002A9EC <AmiBlitz3.ab3@11952>   BSR.w reget
0002A9EE <AmiBlitz3.ab3@11953>   CMP.w D0,D0
0002A9F0 <AmiBlitz3.ab3@11954> RTS
0002A9F4 <AmiBlitz3.ab3@11957>   BSR.w reget
0002A9F6 <AmiBlitz3.ab3@11958>   MOVEQ.l #-$01,D1
0002A9F8 <AmiBlitz3.ab3@11959> RTS
0002A9FE <AmiBlitz3.ab3@11963>   MOVEA.l alllocals,A4
0002AA04 <AmiBlitz3.ab3@11964>   CLR.l alllocals
0002AA08 <AmiBlitz3.ab3@11968>     CMPA.w #$0,A4
0002AA0C <AmiBlitz3.ab3@11969>      BEQ.b freeprocvs__done
0002AA10 <AmiBlitz3.ab3@11970>     MOVEA.l $4(A4),A3
0002AA14 <AmiBlitz3.ab3@11972>     MOVEA.l $8(A4),A3
0002AA16 <AmiBlitz3.ab3@11974>     MOVEA.l A4,A1
0002AA18 <AmiBlitz3.ab3@11975>     MOVEA.l (A4),A4
0002AA1A <AmiBlitz3.ab3@11976>     MOVEQ.l #$0C,D0
0002AA20 <AmiBlitz3.ab3@11977>     MOVEA.l _execbase,A6
0002AA26 <AmiBlitz3.ab3@11978>     MOVE.l mempool,a0
0002AA2A <AmiBlitz3.ab3@11979>     JSR _FreePooled(A6)
0002AA2E <AmiBlitz3.ab3@11980> BRA.b freeprocvs__loop
0002AA34 <AmiBlitz3.ab3@11983>   CLR.l firstglob                                          ;fix 2*aclearallvar called
0002AA3A <AmiBlitz3.ab3@11984>   CLR.l firstlocal
0002AA40 <AmiBlitz3.ab3@11985>   CLR.l sharebase
0002AA46 <AmiBlitz3.ab3@11986>   TST.l mempool2
0002AA4A <AmiBlitz3.ab3@11987>   BEQ freeprocvs__done_l10
0002AA50 <AmiBlitz3.ab3@11989>   MOVEA.l _execbase,A6
0002AA56 <AmiBlitz3.ab3@11990>   MOVE.l mempool2,a0
0002AA5C <AmiBlitz3.ab3@11991>   CLR.l mempool2
0002AA60 <AmiBlitz3.ab3@11992>   JSR _DeletePool(a6)
0002AA66 <AmiBlitz3.ab3@11995>   MOVE.l _execbase,a6
0002AA6C <AmiBlitz3.ab3@11996>   MOVE.l #$10000,d0
0002AA72 <AmiBlitz3.ab3@11997>   MOVE.l #80000,d1
0002AA74 <AmiBlitz3.ab3@11998>   MOVE.l d1,d2
0002AA78 <AmiBlitz3.ab3@11999>   JSR _CreatePool(a6)
0002AA7E <AmiBlitz3.ab3@12000>   MOVE.l d0,mempool2
0002AA80 <AmiBlitz3.ab3@12001> RTS
0002AA84 <AmiBlitz3.ab3@12005>   CMPA.w #$0,A3
0002AA88 <AmiBlitz3.ab3@12006>    BEQ.w freevars__done
0002AA8A <AmiBlitz3.ab3@12007>   MOVEA.l A3,A1
0002AA8C <AmiBlitz3.ab3@12008>   MOVEA.l (A3),A3
0002AA8E <AmiBlitz3.ab3@12009>   MOVEQ.l #$00,D0
0002AA92 <AmiBlitz3.ab3@12010>   MOVE.b $E(A1),D0
0002AA98 <AmiBlitz3.ab3@12011>   MOVEA.l _execbase,A6
0002AA9E <AmiBlitz3.ab3@12012>   MOVE.l mempool2,a0
0002AAA2 <AmiBlitz3.ab3@12013>   JSR _FreePooled(A6)
0002AAA6 <AmiBlitz3.ab3@12014> BRA.w freevars
0002AAAA <AmiBlitz3.ab3@12017>     CMPA.w #$0,A3
0002AAAE <AmiBlitz3.ab3@12018>      BEQ.w freevars__done
0002AAB0 <AmiBlitz3.ab3@12019>     MOVEA.l A3,A1
0002AAB2 <AmiBlitz3.ab3@12020>     MOVEA.l (A3),A3
0002AAB4 <AmiBlitz3.ab3@12021>     MOVEQ.l #$00,D0
0002AAB8 <AmiBlitz3.ab3@12022>     MOVE.b $E+4(A1),D0
0002AABE <AmiBlitz3.ab3@12023>     MOVEA.l _execbase,A6
0002AAC4 <AmiBlitz3.ab3@12024>     MOVE.l mempool2,a0
0002AAC8 <AmiBlitz3.ab3@12025>     JSR _FreePooled(A6)
0002AACC <AmiBlitz3.ab3@12026> BRA.w freevarsb
0002AACE <AmiBlitz3.ab3@12029> RTS
0002AAD4 <AmiBlitz3.ab3@12033>   MOVEA.l currentlabeladdr,A0
0002AADA <AmiBlitz3.ab3@12034>   MOVE.l a0,lastlabel
0002AADC <AmiBlitz3.ab3@12035>   MOVEA.l (A0),A2
0002AADE <AmiBlitz3.ab3@12036>   CLR.l (A0)
0002AAE4 <AmiBlitz3.ab3@12037>   MOVEA.l _execbase,A6
0002AAE8 <AmiBlitz3.ab3@12040>   CMPA.w #$0,A2
0002AAEC <AmiBlitz3.ab3@12041>    BEQ.w clearlabels__done
0002AAF0 <AmiBlitz3.ab3@12042>   MOVE.l $4(A2),D0
0002AAF4 <AmiBlitz3.ab3@12043>   BTST #$0,D0
0002AAF8 <AmiBlitz3.ab3@12044>    BNE.w clearlabels__skip
0002AAFA <AmiBlitz3.ab3@12045>   MOVEA.l D0,A3
0002AAFE <AmiBlitz3.ab3@12048>     CMPA.w #$0,A3
0002AB02 <AmiBlitz3.ab3@12049>      BEQ.w clearlabels__skip
0002AB04 <AmiBlitz3.ab3@12050>     MOVEA.l A3,A1
0002AB06 <AmiBlitz3.ab3@12051>     MOVEA.l (A3),A3
0002AB08 <AmiBlitz3.ab3@12052>     MOVEQ.l #$0C+2,D0                                      ;cancel fix
0002AB0E <AmiBlitz3.ab3@12053>     MOVE.l mempool,a0
0002AB12 <AmiBlitz3.ab3@12054>     JSR _FreePooled(A6)
0002AB16 <AmiBlitz3.ab3@12055> BRA.w clearlabels__loop2
0002AB18 <AmiBlitz3.ab3@12058>   MOVEQ.l #$00,D0
0002AB1C <AmiBlitz3.ab3@12059>   MOVE.b $12(A2),D0
0002AB1E <AmiBlitz3.ab3@12060>   MOVEA.l A2,A1
0002AB20 <AmiBlitz3.ab3@12061>   MOVEA.l (A2),A2
0002AB26 <AmiBlitz3.ab3@12062>   MOVE.l mempool2,a0
0002AB2A <AmiBlitz3.ab3@12064> BRA.w clearlabels__loop
0002AB2C <AmiBlitz3.ab3@12067> RTS
0002AB32 <AmiBlitz3.ab3@12071>   MOVEA.l firstpend,A3
0002AB38 <AmiBlitz3.ab3@12072>   CLR.l firstpend
0002AB3E <AmiBlitz3.ab3@12073>   MOVEA.l _execbase,A6
0002AB42 <AmiBlitz3.ab3@12076>     CMPA.w #$0,A3
0002AB46 <AmiBlitz3.ab3@12077>      BEQ.w freepends__done
0002AB48 <AmiBlitz3.ab3@12078>     MOVEA.l A3,A1
0002AB4A <AmiBlitz3.ab3@12079>     MOVEQ.l #$08,D0
0002AB4C <AmiBlitz3.ab3@12080>     MOVEA.l (A3),A3
0002AB52 <AmiBlitz3.ab3@12081>     MOVE.l mempool,a0
0002AB56 <AmiBlitz3.ab3@12082>     JSR _FreePooled(A6)
0002AB5A <AmiBlitz3.ab3@12083> BRA.w fpnd2
0002AB5C <AmiBlitz3.ab3@12086> RTS
0002AB62 <AmiBlitz3.ab3@12090>   MOVEA.l firstproc,A2
0002AB68 <AmiBlitz3.ab3@12091>   CLR.l firstproc
0002AB6E <AmiBlitz3.ab3@12092>   MOVEA.l _execbase,A6
0002AB72 <AmiBlitz3.ab3@12095>     CMPA.w #$0,A2
0002AB76 <AmiBlitz3.ab3@12096>      BEQ.w clearfunctionlist__done
0002AB78 <AmiBlitz3.ab3@12097>     MOVEA.l A2,A1
0002AB7A <AmiBlitz3.ab3@12098>     MOVEA.l (A2),A2
0002AB7C <AmiBlitz3.ab3@12099>     MOVEQ.l #$00,D0
0002AB80 <AmiBlitz3.ab3@12100>     MOVE.b $20+#funcentry_extend(A1),D0
0002AB86 <AmiBlitz3.ab3@12101>     MOVE.l mempool2,a0
0002AB8A <AmiBlitz3.ab3@12102>     JSR _FreePooled(A6)
0002AB8E <AmiBlitz3.ab3@12103> BRA.w clearfunctionlist__loop
0002AB90 <AmiBlitz3.ab3@12106> RTS
0002AB94 <AmiBlitz3.ab3@12110>   CMPA.w #$0,A2
0002AB98 <AmiBlitz3.ab3@12111>    BEQ.w freetypes__done
0002AB9C <AmiBlitz3.ab3@12112>   MOVEA.l $4(A2),A3
0002ABA0 <AmiBlitz3.ab3@12113>   CMPA.w #$FF,A3
0002ABA4 <AmiBlitz3.ab3@12114>    BEQ.w freetypes__noway
0002ABA8 <AmiBlitz3.ab3@12118>    BSR.w freevars
0002ABAA <AmiBlitz3.ab3@12121>     MOVEA.l A2,A1
0002ABAC <AmiBlitz3.ab3@12122>     MOVEA.l (A2),A2
0002ABAE <AmiBlitz3.ab3@12123>     MOVEQ.l #$00,D0
0002ABB2 <AmiBlitz3.ab3@12124>     MOVE.b $A(A1),D0
0002ABB8 <AmiBlitz3.ab3@12125>     MOVEA.l _execbase,A6
0002ABBE <AmiBlitz3.ab3@12126>     MOVE.l mempool2,a0
0002ABC2 <AmiBlitz3.ab3@12127>     JSR _FreePooled(A6)
0002ABC6 <AmiBlitz3.ab3@12128> BRA.w freetypes
0002ABC8 <AmiBlitz3.ab3@12131> RTS
0002ABCE <AmiBlitz3.ab3@12135>   JSR uselib2
0002ABD4 <AmiBlitz3.ab3@12137>   CLR.w notshared
0002ABDA <AmiBlitz3.ab3@12138>   CLR.w varmode
0002ABE0 <AmiBlitz3.ab3@12139>   MOVE.w proceduremode,D1
0002ABE4 <AmiBlitz3.ab3@12140>    BNE.w JL_0_8F4E
0002ABEA <AmiBlitz3.ab3@12141>   LEA varbase,A2
0002ABF0 <AmiBlitz3.ab3@12142>   LEA ptr_parameterstore,a0
0002ABF4 <AmiBlitz3.ab3@12143>   CMP.b #$22,(a0)
0002ABF8 <AmiBlitz3.ab3@12144>   BNE JL_0_8E5E
0002ABFA <AmiBlitz3.ab3@12145>   MOVEQ #0,d0
0002AC00 <AmiBlitz3.ab3@12146> JMP error
0002AC04 <AmiBlitz3.ab3@12149>   BSR.w findvariable
0002AC08 <AmiBlitz3.ab3@12152>   BNE.w JL_0_8E7E
0002AC0E <AmiBlitz3.ab3@12155>   MOVE.b flagmask+1,D1
0002AC12 <AmiBlitz3.ab3@12156>   MOVE.b $7(A2),D3
0002AC14 <AmiBlitz3.ab3@12157>   EOR.b D3,D1
0002AC18 <AmiBlitz3.ab3@12158>   BNE 'l2
0002AC20 <AmiBlitz3.ab3@12159>   CMP.b #2,nowdeclare
0002AC24 <AmiBlitz3.ab3@12160>   BEQ errormsg_declaredtwice
0002AC28 <AmiBlitz3.ab3@12161> BRA.w JL_0_8FA8
0002AC2C <AmiBlitz3.ab3@12164>   BSR.w findlab
0002AC30 <AmiBlitz3.ab3@12165>   BNE 'l1
0002AC38 <AmiBlitz3.ab3@12166>   CMP.b #2,nowdeclare
0002AC3C <AmiBlitz3.ab3@12167>   BEQ errormsg_declaredtwice
0002AC3E <AmiBlitz3.ab3@12168>   CMP.w d0,d0
0002AC42 <AmiBlitz3.ab3@12171> BRA.w JL_0_8E62
0002AC44 <AmiBlitz3.ab3@12174>    MOVE.l a2,-(a7)
0002AC4A <AmiBlitz3.ab3@12175>    LEA sharebase,a2
0002AC4C <AmiBlitz3.ab3@12176>    MOVEQ #$f+4,d7
0002AC50 <AmiBlitz3.ab3@12177>    BSR.w findlab
0002AC54 <AmiBlitz3.ab3@12178>    BEQ 'l2x
0002AC56 <AmiBlitz3.ab3@12179>    MOVE.l (a7)+,a2
0002AC5A <AmiBlitz3.ab3@12180> BRA 'cont
0002AC5C <AmiBlitz3.ab3@12183>   ADDQ.l #4,a7
0002AC62 <AmiBlitz3.ab3@12184>   CLR.w varmode
0002AC68 <AmiBlitz3.ab3@12185>   MOVE.b flagmask+1,D1
0002AC6C <AmiBlitz3.ab3@12186>   MOVE.b $7(A2),D3
0002AC6E <AmiBlitz3.ab3@12187>   EOR.b D3,D1
0002AC72 <AmiBlitz3.ab3@12188>   BNE vardeclareerr
0002AC76 <AmiBlitz3.ab3@12189> BRA JL_0_8FA8
0002AC7C <AmiBlitz3.ab3@12192>    MOVE.w nonew,D1
0002AC80 <AmiBlitz3.ab3@12193>    BNE.w nonewerr
0002AC86 <AmiBlitz3.ab3@12194>    TST.b nowdeclare
0002AC8A <AmiBlitz3.ab3@12195>    BNE 'l2
0002AC90 <AmiBlitz3.ab3@12196>    TST.b declare2
0002AC94 <AmiBlitz3.ab3@12197>    BEQ 'l1
0002AC98 <AmiBlitz3.ab3@12198>    CMP.b #$2e,d0
0002AC9C <AmiBlitz3.ab3@12199>    BEQ 'l2
0002ACA0 <AmiBlitz3.ab3@12200>    CMP.b #"$",d0
0002ACA4 <AmiBlitz3.ab3@12201>    BEQ 'l2
0002ACA8 <AmiBlitz3.ab3@12202> BRA vardeclareerr
0002ACAE <AmiBlitz3.ab3@12205>   TST.b declare
0002ACB2 <AmiBlitz3.ab3@12206>    BNE vardeclareerr
0002ACB6 <AmiBlitz3.ab3@12209>   BSR.w addvariable
0002ACBC <AmiBlitz3.ab3@12210>   NOT.w notshared
0002ACBE <AmiBlitz3.ab3@12211>   MOVEA.l A2,A3
0002ACC4 <AmiBlitz3.ab3@12212>   MOVEA.l defaulttype,A2
0002ACC8 <AmiBlitz3.ab3@12213>   CMP.w #$2E,D0
0002ACCC <AmiBlitz3.ab3@12214>    BEQ.w JL_0_8EB8
0002ACD0 <AmiBlitz3.ab3@12215>   CMP.w #$24,D0
0002ACD4 <AmiBlitz3.ab3@12216>    BNE.w JL_0_8ECA
0002ACDA <AmiBlitz3.ab3@12217>   LEA newtype_string,A2
0002ACDE <AmiBlitz3.ab3@12218>    BSR.w get1bytemain
0002ACE2 <AmiBlitz3.ab3@12219> BRA.w JL_0_8ECA
0002ACE8 <AmiBlitz3.ab3@12222> JMP JUMP_notypeerr
0002ACEC <AmiBlitz3.ab3@12225>    BSR.w getparameter2
0002ACF2 <AmiBlitz3.ab3@12226>   LEA newtypebase,A2
0002ACF6 <AmiBlitz3.ab3@12227>    BSR.w findtype
0002ACFA <AmiBlitz3.ab3@12228>    BNE.w notypeerr3
0002AD00 <AmiBlitz3.ab3@12231>   CMPA.l #newtype_byte,A2
0002AD04 <AmiBlitz3.ab3@12232>    BEQ.w JL_0_8EECb
0002AD0A <AmiBlitz3.ab3@12233>   MOVE.w varmode,D1
0002AD0E <AmiBlitz3.ab3@12234>    BNE.w JL_0_8EE4b
0002AD14 <AmiBlitz3.ab3@12235>   ADDQ.w #1,globalvarpointer
0002AD1C <AmiBlitz3.ab3@12238>   BCLR #$0,globalvarpointer+1
0002AD20 <AmiBlitz3.ab3@12241>   MOVE.l A2,$A(A3)
0002AD28 <AmiBlitz3.ab3@12242>   MOVE.w flagmask,$6(A3)                                  ;??????????
0002AD2A <AmiBlitz3.ab3@12244>   MOVEQ.l #$04,D1
0002AD32 <AmiBlitz3.ab3@12245>   BTST #$0,flagmask+1
0002AD36 <AmiBlitz3.ab3@12246>    BNE.w JL_0_8F22b
0002AD3E <AmiBlitz3.ab3@12247>   BTST #$1,flagmask+1
0002AD42 <AmiBlitz3.ab3@12248>    BNE.w JL_0_8F22b
0002AD4A <AmiBlitz3.ab3@12249>   CMPI.l #$100,$4(A2)
0002AD4E <AmiBlitz3.ab3@12250>    BCC.w JL_0_8F22b
0002AD52 <AmiBlitz3.ab3@12251>   MOVE.w $8(A2),D1
0002AD58 <AmiBlitz3.ab3@12254>   TST.w varmode
0002AD5C <AmiBlitz3.ab3@12255> BRA.w JL_0_8F3E
0002AD60 <AmiBlitz3.ab3@12264>   BSR.w getparameter2
0002AD66 <AmiBlitz3.ab3@12265>   LEA newtypebase,A2
0002AD6A <AmiBlitz3.ab3@12266>    BSR.w findtype
0002AD6E <AmiBlitz3.ab3@12267>    BNE.w notypeerr
0002AD74 <AmiBlitz3.ab3@12270>   CMPA.l #newtype_byte,A2
0002AD78 <AmiBlitz3.ab3@12271>    BEQ.w JL_0_8EEC
0002AD7E <AmiBlitz3.ab3@12272>   MOVE.w varmode,D1
0002AD82 <AmiBlitz3.ab3@12273>    BNE.w JL_0_8EE4
0002AD88 <AmiBlitz3.ab3@12274>   ADDQ.w #1,globalvarpointer
0002AD90 <AmiBlitz3.ab3@12277>   BCLR #$0,globalvarpointer+1
0002AD94 <AmiBlitz3.ab3@12280>   MOVE.l A2,$A(A3)
0002AD9C <AmiBlitz3.ab3@12281>   MOVE.w flagmask,$6(A3)                                  ;??????????
0002AD9E <AmiBlitz3.ab3@12282>   MOVEQ.l #$04,D1
0002ADA6 <AmiBlitz3.ab3@12283>   BTST #$0,flagmask+1
0002ADAA <AmiBlitz3.ab3@12284>    BNE.w JL_0_8F22
0002ADB2 <AmiBlitz3.ab3@12285>   BTST #$1,flagmask+1
0002ADB6 <AmiBlitz3.ab3@12286>    BNE.w JL_0_8F22
0002ADBE <AmiBlitz3.ab3@12287>   CMPI.l #$100,$4(A2)
0002ADC2 <AmiBlitz3.ab3@12288>    BCC.w JL_0_8F22
0002ADC6 <AmiBlitz3.ab3@12289>   MOVE.w $8(A2),D1
0002ADCC <AmiBlitz3.ab3@12292>   TST.w varmode
0002ADD0 <AmiBlitz3.ab3@12293>    BEQ.w JL_0_8F3E
0002ADD2 <AmiBlitz3.ab3@12294>   NEG.w D1
0002ADD8 <AmiBlitz3.ab3@12295>   ADD.w D1,globalvarpointer
0002ADE0 <AmiBlitz3.ab3@12296>   MOVE.w globalvarpointer,$4(A3)
0002ADE2 <AmiBlitz3.ab3@12297> RTS
0002ADEA <AmiBlitz3.ab3@12300>   MOVE.w globalvarpointer,$4(A3)
0002ADF0 <AmiBlitz3.ab3@12301>   ADD.w D1,globalvarpointer
0002ADF2 <AmiBlitz3.ab3@12302> RTS
0002ADF8 <AmiBlitz3.ab3@12306>   LEA firstglob,A2
0002ADFC <AmiBlitz3.ab3@12307>    BSR.w findvariable2
0002AE00 <AmiBlitz3.ab3@12310>   BNE.w JL_0_8F74
0002AE06 <AmiBlitz3.ab3@12311>   MOVE.b flagmask+1,D1
0002AE0A <AmiBlitz3.ab3@12312>   MOVE.b $7(A2),D3
0002AE0C <AmiBlitz3.ab3@12313>   EOR.b D3,D1
0002AE10 <AmiBlitz3.ab3@12314>    BEQ.w JL_0_8FA8
0002AE14 <AmiBlitz3.ab3@12315>    BSR.w findlab
0002AE18 <AmiBlitz3.ab3@12316> BRA.w JL_0_8F58
0002AE20 <AmiBlitz3.ab3@12319>   MOVE.w #$FFFF,varmode
0002AE26 <AmiBlitz3.ab3@12320>   MOVE.w globalvarpointer,-(A7)
0002AE30 <AmiBlitz3.ab3@12321>   MOVE.w locvaroff,globalvarpointer
0002AE36 <AmiBlitz3.ab3@12322>   LEA firstlocal,A2
0002AE3E <AmiBlitz3.ab3@12323>   MOVE.b #1,newvariable
0002AE42 <AmiBlitz3.ab3@12324>    BSR.w JL_0_8E5E
0002AE48 <AmiBlitz3.ab3@12325>   CLR.b newvariable
0002AE52 <AmiBlitz3.ab3@12326>   MOVE.w globalvarpointer,locvaroff
0002AE58 <AmiBlitz3.ab3@12327>   MOVE.w (A7)+,globalvarpointer
0002AE5A <AmiBlitz3.ab3@12328> RTS
0002AE5C <AmiBlitz3.ab3@12331>   MOVEA.l A2,A3
0002AE60 <AmiBlitz3.ab3@12332>   CMP.w #$2E,D0
0002AE64 <AmiBlitz3.ab3@12333>    BEQ.w JL_0_8FCE
0002AE68 <AmiBlitz3.ab3@12334>   CMP.w #$24,D0
0002AE6C <AmiBlitz3.ab3@12335>    BNE.w JL_0_8FE8
0002AE74 <AmiBlitz3.ab3@12336>   CMPI.l #newtype_string,$A(A3)
0002AE78 <AmiBlitz3.ab3@12337>    BNE.w rongtypeerr
0002AE7C <AmiBlitz3.ab3@12338>    BSR.w get1bytemain
0002AE80 <AmiBlitz3.ab3@12339> BRA.w JL_0_8FE8
0002AE84 <AmiBlitz3.ab3@12342>    BSR.w getparameter2
0002AE8A <AmiBlitz3.ab3@12343>   LEA newtypebase,A2
0002AE8E <AmiBlitz3.ab3@12344>    BSR.w findtype
0002AE92 <AmiBlitz3.ab3@12345>    BNE.w notypeerr
0002AE96 <AmiBlitz3.ab3@12346>   CMPA.l $A(A3),A2
0002AE9A <AmiBlitz3.ab3@12347>    BNE.w rongtypeerr
0002AEA2 <AmiBlitz3.ab3@12349>   BTST #$0,flagmask+1
0002AEA6 <AmiBlitz3.ab3@12350>    BEQ.w JL_0_8FFE
0002AEAC <AmiBlitz3.ab3@12351>   BTST #$0,$7(A3)
0002AEB0 <AmiBlitz3.ab3@12352>    BEQ.w pointerr
0002AEB4 <AmiBlitz3.ab3@12355>   MOVEA.l $A(A3),A2
0002AEB6 <AmiBlitz3.ab3@12356> RTS
0002AEB8 <AmiBlitz3.ab3@12360>    TST.l D3                                                ;newtype >32kb  .w to .l
0002AEBC <AmiBlitz3.ab3@12361>    BEQ.w JL_0_9042
0002AEC6 <AmiBlitz3.ab3@12362>    MOVE.l destpointer,loada
0002AECA <AmiBlitz3.ab3@12365> BRA JL_0_9032
0002AECE <AmiBlitz3.ab3@12367>   CMP.w #$9,D3                                             ;_addq_arrays
0002AED2 <AmiBlitz3.ab3@12368>    BCC.w JL_0_9032
0002AED8 <AmiBlitz3.ab3@12369>   MOVE.w d3,arrayoffset
0002AEDC <AmiBlitz3.ab3@12370>   ANDI.w #$7,D3
0002AEDE <AmiBlitz3.ab3@12371>   LSL.w #8,D3
0002AEE0 <AmiBlitz3.ab3@12372>   LSL.w #1,D3
0002AEE8 <AmiBlitz3.ab3@12373>   ANDI.w #$F1FF,addqa0
0002AEEE <AmiBlitz3.ab3@12374>   OR.w D3,addqa0
0002AEF4 <AmiBlitz3.ab3@12375>   MOVE.w addqa0,D1
0002AEF8 <AmiBlitz3.ab3@12376> BRA.w writeword
0002AEFE <AmiBlitz3.ab3@12379>   CMP.l #$7fff,d3                                          ;>32kb newtypes
0002AF02 <AmiBlitz3.ab3@12380>   BGT longoffset
0002AF08 <AmiBlitz3.ab3@12381>   MOVE.w D3,leaa0a0+2
0002AF0E <AmiBlitz3.ab3@12382>   MOVE.w d3,arrayoffset
0002AF14 <AmiBlitz3.ab3@12383>   MOVE.l leaa0a0,D1
0002AF18 <AmiBlitz3.ab3@12384>   BSR.w writelong
0002AF1A <AmiBlitz3.ab3@12387> RTS
0002AF1E <AmiBlitz3.ab3@12390>    MOVE.w #$d5fc,d1
0002AF22 <AmiBlitz3.ab3@12391>    BSR writeword
0002AF24 <AmiBlitz3.ab3@12392>    MOVE.l d3,d1
0002AF28 <AmiBlitz3.ab3@12393>    BSR.w writelong
0002AF2A <AmiBlitz3.ab3@12394> RTS
0002AF2E <AmiBlitz3.ab3@12398>   Dc.w $b0ad,0000                                          ;cmp.l $0(A5),D0    ;nooptimize
0002AF32 <AmiBlitz3.ab3@12401>    BCS.w arrchk3                                           
0002AF38 <AmiBlitz3.ab3@12402>    JSR $20000                                              ;jsr 0
0002AF3E <AmiBlitz3.ab3@12408>   TST.b fast
0002AF42 <AmiBlitz3.ab3@12409>   BEQ 'l1
0002AF44 <AmiBlitz3.ab3@12410>    MOVEQ #0,d1                                             ;faster arrays
0002AF4A <AmiBlitz3.ab3@12411>    MOVE.w regnum,d2
0002AF4C <AmiBlitz3.ab3@12412>    MOVE.w d2,d1
0002AF4E <AmiBlitz3.ab3@12413>    LSL.w #8,d1
0002AF50 <AmiBlitz3.ab3@12414>    LSL.w #4,d1
0002AF52 <AmiBlitz3.ab3@12415>    ADD.w d2,d1
0002AF58 <AmiBlitz3.ab3@12416>    OR.l #$4c2d0000,d1
0002AF5E <AmiBlitz3.ab3@12417>    TST.w varmode
0002AF62 <AmiBlitz3.ab3@12418>    BEQ 'l1a
0002AF66 <AmiBlitz3.ab3@12419>    BCLR #16,d1
0002AF6A <AmiBlitz3.ab3@12422>    BSR writelong
0002AF6E <AmiBlitz3.ab3@12423>    MOVE.w $4(A7),D1
0002AF72 <AmiBlitz3.ab3@12424>    BSR.w writeword
0002AF78 <AmiBlitz3.ab3@12425>    MOVE.w regnum,D1
0002AF7A <AmiBlitz3.ab3@12426>   SUBQ.w #1,D1
0002AF7C <AmiBlitz3.ab3@12427>   LSL.w #8,D1
0002AF7E <AmiBlitz3.ab3@12428>   LSL.w #1,D1
0002AF82 <AmiBlitz3.ab3@12429>   ORI.w #$D080,D1
0002AF88 <AmiBlitz3.ab3@12430>   OR.w regnum,D1
0002AF8C <AmiBlitz3.ab3@12431>    BSR.w writeword
0002AF8E <AmiBlitz3.ab3@12432> RTS
0002AF94 <AmiBlitz3.ab3@12435>   MOVE.w regnum,D2
0002AF98 <AmiBlitz3.ab3@12436>   MOVE.w arrmul1(PC),D1
0002AF9A <AmiBlitz3.ab3@12437>   OR.w D2,D1
0002AF9C <AmiBlitz3.ab3@12438>   SUBQ.w #1,D1
0002AFA0 <AmiBlitz3.ab3@12439>    BSR.w writeword
0002AFA4 <AmiBlitz3.ab3@12440>   MOVE.w arrmul2(PC),D1
0002AFA6 <AmiBlitz3.ab3@12441>   OR.w D2,D1
0002AFA8 <AmiBlitz3.ab3@12442>   MOVE.w D2,D3
0002AFAA <AmiBlitz3.ab3@12443>   SUBQ.w #1,D3
0002AFAC <AmiBlitz3.ab3@12444>   LSL.w #8,D3
0002AFAE <AmiBlitz3.ab3@12445>   LSL.w #1,D3
0002AFB0 <AmiBlitz3.ab3@12446>   OR.w D3,D1
0002AFB4 <AmiBlitz3.ab3@12447>    BSR.w writeword
0002AFB8 <AmiBlitz3.ab3@12448>   MOVE.w arrmul3(PC),D1
0002AFBA <AmiBlitz3.ab3@12449>   MOVE.w D2,D3
0002AFBC <AmiBlitz3.ab3@12450>   LSL.w #8,D3
0002AFBE <AmiBlitz3.ab3@12451>   LSL.w #1,D3
0002AFC0 <AmiBlitz3.ab3@12452>   OR.w D3,D1
0002AFC4 <AmiBlitz3.ab3@12453>    BSR.w pokewda5s
0002AFC8 <AmiBlitz3.ab3@12454>   MOVE.w $4(A7),D1
0002AFCA <AmiBlitz3.ab3@12455>   ADDQ.w #2,D1
0002AFCE <AmiBlitz3.ab3@12456>    BSR.w writeword
0002AFD2 <AmiBlitz3.ab3@12457>   MOVE.w arrmul4(PC),D1
0002AFD4 <AmiBlitz3.ab3@12458>   MOVE.w D2,D3
0002AFD6 <AmiBlitz3.ab3@12459>   SUBQ.w #1,D3
0002AFD8 <AmiBlitz3.ab3@12460>   LSL.w #8,D3
0002AFDA <AmiBlitz3.ab3@12461>   LSL.w #1,D3
0002AFDC <AmiBlitz3.ab3@12462>   OR.w D3,D1
0002AFE0 <AmiBlitz3.ab3@12463>    BSR.w pokewda5s
0002AFE4 <AmiBlitz3.ab3@12464>   MOVE.w $4(A7),D1
0002AFE8 <AmiBlitz3.ab3@12465>    BSR.w writeword
0002AFEC <AmiBlitz3.ab3@12466>   MOVE.w arrmul5(PC),D1
0002AFEE <AmiBlitz3.ab3@12467>   OR.w D2,D1
0002AFF0 <AmiBlitz3.ab3@12468>   SUBQ.w #1,D1
0002AFF4 <AmiBlitz3.ab3@12469>    BSR.w writeword
0002AFF8 <AmiBlitz3.ab3@12470>   MOVE.w arrmul6(PC),D1
0002AFFA <AmiBlitz3.ab3@12471>   OR.w D2,D1
0002AFFC <AmiBlitz3.ab3@12472>   SUBQ.w #1,D1
0002B000 <AmiBlitz3.ab3@12473>    BSR.w writeword
0002B004 <AmiBlitz3.ab3@12474>   MOVE.w arrmul7(PC),D1
0002B006 <AmiBlitz3.ab3@12475>   OR.w D2,D1
0002B008 <AmiBlitz3.ab3@12476>   SUBQ.w #1,D1
0002B00A <AmiBlitz3.ab3@12477>   MOVE.w D2,D3
0002B00C <AmiBlitz3.ab3@12478>   LSL.w #8,D3
0002B00E <AmiBlitz3.ab3@12479>   LSL.w #1,D3
0002B010 <AmiBlitz3.ab3@12480>   OR.w D3,D1
0002B014 <AmiBlitz3.ab3@12481>    BSR.w writeword
0002B018 <AmiBlitz3.ab3@12482>   MOVE.w arrmul8(PC),D1
0002B01A <AmiBlitz3.ab3@12483>   MOVE.w D2,D3
0002B01C <AmiBlitz3.ab3@12484>   SUBQ.w #1,D3
0002B01E <AmiBlitz3.ab3@12485>   LSL.w #8,D3
0002B020 <AmiBlitz3.ab3@12486>   LSL.w #1,D3
0002B022 <AmiBlitz3.ab3@12487>   OR.w D3,D1
0002B026 <AmiBlitz3.ab3@12488>    BSR.w writeword
0002B02C <AmiBlitz3.ab3@12489>   MOVE.w regnum,D1
0002B02E <AmiBlitz3.ab3@12490>   SUBQ.w #1,D1
0002B030 <AmiBlitz3.ab3@12491>   LSL.w #8,D1
0002B032 <AmiBlitz3.ab3@12492>   LSL.w #1,D1
0002B036 <AmiBlitz3.ab3@12493>   ORI.w #$D080,D1
0002B03C <AmiBlitz3.ab3@12494>   OR.w regnum,D1
0002B040 <AmiBlitz3.ab3@12495> BRA.w writeword
0002B042 <AmiBlitz3.ab3@12503> arrmul1:   MOVE.l d0,-(a7)                                ;write array access
0002B044 <AmiBlitz3.ab3@12504> arrmul2:   MOVE  d0,d0
0002B048 <AmiBlitz3.ab3@12505> arrmul3:   MULU 0(a5),d0                                  ;mulu   x+2(a5),d1  ;lo*lo
0002B04C <AmiBlitz3.ab3@12506> arrmul4:   MULU 0(a5),d0                                  ;mulu   x(a5),d0    ;hi*lo
0002B04E <AmiBlitz3.ab3@12508> arrmul5:   SWAP d0
0002B050 <AmiBlitz3.ab3@12509> arrmul6:   CLR d0
0002B052 <AmiBlitz3.ab3@12510> arrmul7:   ADD.l d0,d0
0002B054 <AmiBlitz3.ab3@12511> arrmul8:   MOVE.l (a7)+,d0
0002B058 <AmiBlitz3.ab3@12516> listcode1:  Dc.b $24,$6D :              Dc.b $00,$00       ;MOVEA.L $0000(A5),A2      ;pointer to start of array data
0002B05C <AmiBlitz3.ab3@12517> listcode2:  Dc.b $24,$6A,$FF,$E0                           ;MOVEA.L -$0020(A2),A2     ;pointer to current
0002B05E <AmiBlitz3.ab3@12518> listarfix:  Dc.b $50,$4A                                   ;ADDQ.W  #8,A2
0002B064 <AmiBlitz3.ab3@12536>   CLR.l lastoffset_org
0002B06A <AmiBlitz3.ab3@12537>   BTST #$1,$7(A3)
0002B06E <AmiBlitz3.ab3@12538>    BEQ.w calcvar__notarr
0002B074 <AmiBlitz3.ab3@12539>   MOVE.w notshared,D1
0002B078 <AmiBlitz3.ab3@12540>    BNE.w noarrerr
0002B07C <AmiBlitz3.ab3@12541>    BSR.w get1bytemain
0002B080 <AmiBlitz3.ab3@12542>   CMP.w #$29,D0
0002B084 <AmiBlitz3.ab3@12543>    BNE.w calcvar__notalist
0002B08A <AmiBlitz3.ab3@12544>   BTST #$0,$6(A3)
0002B08E <AmiBlitz3.ab3@12545>    BEQ.w nolisterr
0002B096 <AmiBlitz3.ab3@12546>   MOVE.w $4(A3),listcode1+2
0002B09A <AmiBlitz3.ab3@12547>   MOVE.l listcode1(PC),D1
0002B09E <AmiBlitz3.ab3@12548>    BSR.w pokela5s
0002B0A2 <AmiBlitz3.ab3@12549>   MOVE.l listcode2(PC),D1
0002B0A6 <AmiBlitz3.ab3@12550>    BSR.w writelong
0002B0AC <AmiBlitz3.ab3@12551>   TST.b debugmode
0002B0B0 <AmiBlitz3.ab3@12552>    BEQ.w calcvar__nolrerr
0002B0B2 <AmiBlitz3.ab3@12556>   MOVE.l A2,-(A7)
0002B0B6 <AmiBlitz3.ab3@12557>   MOVE.w #$C315,D1
0002B0BA <AmiBlitz3.ab3@12558>    BSR.w Atokejsr
0002B0BC <AmiBlitz3.ab3@12559>   MOVEA.l (A7)+,A2
0002B0C0 <AmiBlitz3.ab3@12562>    MOVE.w listarfix(PC),D1                                 ;addq #8,a2
0002B0C4 <AmiBlitz3.ab3@12564>    BSR.w writeword
0002B0C8 <AmiBlitz3.ab3@12565> BRA.w calcvar__normalar
0002B0CA <AmiBlitz3.ab3@12568> calcvar__listoff:   Ds.w 1
0002B0D0 <AmiBlitz3.ab3@12572>   CLR.w calcvar__listoff
0002B0D6 <AmiBlitz3.ab3@12573>   BTST #$0,$6(A3)
0002B0DA <AmiBlitz3.ab3@12574>    BEQ.w calcvar__knop
0002B0E2 <AmiBlitz3.ab3@12575>   MOVE.w #$0008,calcvar__listoff                            ;adjust size of one element if list.
0002B0E6 <AmiBlitz3.ab3@12578>   MOVEM.l A2-A3,-(A7)
0002B0EC <AmiBlitz3.ab3@12579>   MOVE.w varmode,-(A7)
0002B0F0 <AmiBlitz3.ab3@12580>   MOVE.w $8(A3),-(A7)                                       ;number of dims
0002B0F4 <AmiBlitz3.ab3@12581>   MOVE.w $4(A3),-(A7)                                       ;varoff
0002B0F6 <AmiBlitz3.ab3@12582>   MOVE.l A2,-(A7)
0002B0FC <AmiBlitz3.ab3@12583>   MOVE.w flagmask,-(A7)
0002B106 <AmiBlitz3.ab3@12585>   MOVE.w oldqflag,instringon
0002B10C <AmiBlitz3.ab3@12586>   MOVEA.l lastsourcepos,A5
0002B110 <AmiBlitz3.ab3@12587>    BSR.w arreval
0002B116 <AmiBlitz3.ab3@12588>   MOVE.w (A7)+,flagmask
0002B11E <AmiBlitz3.ab3@12589>   MOVE.w $8(A7),varmode
0002B124 <AmiBlitz3.ab3@12590>   TST.b debugmode
0002B128 <AmiBlitz3.ab3@12591>    BEQ.w calcvar__noszchk
0002B12A <AmiBlitz3.ab3@12595>   MOVEA.l (A7)+,A2
0002B12C <AmiBlitz3.ab3@12596>   MOVEQ.l #$04,D1
0002B134 <AmiBlitz3.ab3@12597>   BTST #$0,flagmask+1                                      ;pointer?
0002B138 <AmiBlitz3.ab3@12598>    BNE.b calcvar__domul                                          ;yes, then use 4 byte mul...
0002B13C <AmiBlitz3.ab3@12599>   MOVE.w $8(A2),D1
0002B140 <AmiBlitz3.ab3@12602>   ADD.w calcvar__listoff(PC),D1
0002B144 <AmiBlitz3.ab3@12603>   BSR.w JL_0_B6DE
0002B14A <AmiBlitz3.ab3@12604>   ADDQ.w #1,regnum
0002B14C <AmiBlitz3.ab3@12607>   ADDQ.w #4,(A7)
0002B150 <AmiBlitz3.ab3@12608>   TST.w $4(A7)
0002B154 <AmiBlitz3.ab3@12609>    BEQ.w calcvar__isglob
0002B156 <AmiBlitz3.ab3@12610>   SUBQ.w #8,(A7)                                           ;range check local array
0002B15C <AmiBlitz3.ab3@12613>   TST.b debugmode
0002B160 <AmiBlitz3.ab3@12614>    BEQ.w calcvar__noer1
0002B166 <AmiBlitz3.ab3@12615>   MOVE.w regnum,D1
0002B168 <AmiBlitz3.ab3@12616>   SUBQ.w #1,D1
0002B16A <AmiBlitz3.ab3@12617>   LSL.w #8,D1
0002B16C <AmiBlitz3.ab3@12618>   LSL.w #1,D1
0002B170 <AmiBlitz3.ab3@12619>   OR.w zarrchk(PC),D1
0002B174 <AmiBlitz3.ab3@12620>    BSR.w pokewda5s                                         ;cmp.l x(a5),D regat
0002B176 <AmiBlitz3.ab3@12621>   MOVE.w (A7),D1
0002B17A <AmiBlitz3.ab3@12622>    BSR.w writeword
0002B17E <AmiBlitz3.ab3@12623>   MOVE.l arrchk2(PC),D1
0002B182 <AmiBlitz3.ab3@12624>    BSR.w writelong
0002B186 <AmiBlitz3.ab3@12625>   MOVE.w #$C309,D1
0002B18A <AmiBlitz3.ab3@12626>    BSR.w Atokejsr
0002B18E <AmiBlitz3.ab3@12629>   SUBQ.w #1,$2(A7)
0002B192 <AmiBlitz3.ab3@12630>    BEQ.w calcvar__ardone
0002B196 <AmiBlitz3.ab3@12631>   CMP.w #$2C,D0
0002B19A <AmiBlitz3.ab3@12632>    BNE.w syntaxerr
0002B1A0 <AmiBlitz3.ab3@12633>    TST.b fast
0002B1A4 <AmiBlitz3.ab3@12634>    BNE 'l1
0002B1A8 <AmiBlitz3.ab3@12635>    BSR.w arrevalchk
0002B1AC <AmiBlitz3.ab3@12636> BRA 'l2
0002B1B0 <AmiBlitz3.ab3@12639>   BSR arreval
0002B1B8 <AmiBlitz3.ab3@12642>   MOVE.w $4(A7),varmode
0002B1BC <AmiBlitz3.ab3@12643>   BSR.w JL_0_9052
0002B1C0 <AmiBlitz3.ab3@12644> BRA.w calcvar__arloop
0002B1C4 <AmiBlitz3.ab3@12648>   CMP.w #$29,D0
0002B1C8 <AmiBlitz3.ab3@12649>    BNE.w syntaxerr
0002B1CE <AmiBlitz3.ab3@12650>   SUBQ.w #1,regnum
0002B1D0 <AmiBlitz3.ab3@12651>   ADDQ.w #6,A7
0002B1D4 <AmiBlitz3.ab3@12652>   MOVEM.l (A7)+,A2-A3
0002B1DC <AmiBlitz3.ab3@12653>   MOVE.w $4(A3),movea5a0+2
0002B1E2 <AmiBlitz3.ab3@12654>   MOVE.l movea5a0,D1
0002B1E6 <AmiBlitz3.ab3@12655>    BSR.w pokela5s
0002B1EC <AmiBlitz3.ab3@12656>   MOVE.w regnum,D1
0002B1F0 <AmiBlitz3.ab3@12657>   ORI.w #$D5C0,D1                                          ;add.l Dr,a2
0002B1F4 <AmiBlitz3.ab3@12658>    BSR.w writeword
0002B1FA <AmiBlitz3.ab3@12659>   BTST #$0,$6(A3)
0002B1FE <AmiBlitz3.ab3@12660>    BEQ.w calcvar__normalar
0002B202 <AmiBlitz3.ab3@12664>   MOVE.w listarfix(PC),D1
0002B206 <AmiBlitz3.ab3@12665>    BSR.w writeword
0002B20A <AmiBlitz3.ab3@12668>   BSR.w get1bytemain
0002B210 <AmiBlitz3.ab3@12672>   BTST #$0,$7(A3)
0002B214 <AmiBlitz3.ab3@12673>    BEQ.w calcvar__noppnt
0002B218 <AmiBlitz3.ab3@12674>   CMP.w #$5C,D0
0002B21C <AmiBlitz3.ab3@12675>    BNE.w calcvar__pmskip
0002B220 <AmiBlitz3.ab3@12676>   MOVE.w calcvar__pfix(PC),D1
0002B224 <AmiBlitz3.ab3@12677>    BSR.w writeword
0002B228 <AmiBlitz3.ab3@12680>   MOVE.w #$8000,D2
0002B22C <AmiBlitz3.ab3@12681> BRA.w calcvar__loopml
0002B230 <AmiBlitz3.ab3@12684>   MOVE.w #$C000,D2
0002B234 <AmiBlitz3.ab3@12685> BRA.w calcvar__loopml
0002B236 <AmiBlitz3.ab3@12689> calcvar__pfix:   Dc.b $24,$52                                   ;MOVEA.L (A2),A2
0002B23A <AmiBlitz3.ab3@12694>   CMP.w #$28,D0
0002B23E <AmiBlitz3.ab3@12695>    BEQ.w noarrerr
0002B246 <AmiBlitz3.ab3@12696>   CMPI.l #$100,$4(A2)
0002B24A <AmiBlitz3.ab3@12697>    BCS.w calcvar__simpvar
0002B250 <AmiBlitz3.ab3@12698>   BTST #$0,$7(A3)
0002B254 <AmiBlitz3.ab3@12699>    BEQ.w calcvar__notap
0002B258 <AmiBlitz3.ab3@12703>   CMP.w #$5C,D0
0002B25C <AmiBlitz3.ab3@12704>    BEQ.w calcvar__notap
0002B25E <AmiBlitz3.ab3@12705>   MOVEQ.l #$00,D2
0002B262 <AmiBlitz3.ab3@12706> BRA.w calcvar__simpvar2
0002B266 <AmiBlitz3.ab3@12709>   MOVE.w #$8000,D2
0002B26E <AmiBlitz3.ab3@12710>   MOVE.w $4(A3),movea5a0+2
0002B274 <AmiBlitz3.ab3@12711>   MOVE.l movea5a0,D1
0002B278 <AmiBlitz3.ab3@12712>    BSR.w pokela5s                                         ;move.l x(a5),a2
0002B27E <AmiBlitz3.ab3@12714>    TST.b debugmode
0002B282 <AmiBlitz3.ab3@12715>    BEQ.w 'skip
0002B286 <AmiBlitz3.ab3@12716>    MOVE.w #$c320,D1
0002B28C <AmiBlitz3.ab3@12717>    JSR Atokejsr
0002B28E <AmiBlitz3.ab3@12721>   MOVEQ.l #$00,D3
0002B292 <AmiBlitz3.ab3@12724>   CMP.w #$5C,D0
0002B296 <AmiBlitz3.ab3@12725>    BNE.w calcvar__done
0002B29E <AmiBlitz3.ab3@12726>   CMPI.l #$100,$4(A2)
0002B2A2 <AmiBlitz3.ab3@12727>    BCS.w rongtypeerr
0002B2A4 <AmiBlitz3.ab3@12728>   MOVE.w D2,-(A7)
0002B2A8 <AmiBlitz3.ab3@12729>    BSR.w getparameter2
0002B2AC <AmiBlitz3.ab3@12730>    BEQ.w syntaxerr
0002B2AE <AmiBlitz3.ab3@12731>   ADDQ.w #4,A2
0002B2B2 <AmiBlitz3.ab3@12732>    BSR.w findvariable2
0002B2B6 <AmiBlitz3.ab3@12733>    BNE.w noofferr
0002B2B8 <AmiBlitz3.ab3@12734>   MOVE.w (A7)+,D2
0002B2BA <AmiBlitz3.ab3@12735>   MOVEA.l A2,A3                                             ;pointer to offset
0002B2BE <AmiBlitz3.ab3@12736>   MOVEA.l $A(A3),A2                                         ;pointer to type
0002B2C0 <AmiBlitz3.ab3@12737>   MOVEQ #0,d1
0002B2C4 <AmiBlitz3.ab3@12738>   MOVE.w 4(a3),d1
0002B2C6 <AmiBlitz3.ab3@12739>   ADD.l d1,d3
0002B2CC <AmiBlitz3.ab3@12741>   MOVE.l A3,lastoffset_org
0002B2D0 <AmiBlitz3.ab3@12742>   CMP.w #$5B,D0
0002B2D4 <AmiBlitz3.ab3@12743>    BNE.w calcvar__realdone
0002B2DA <AmiBlitz3.ab3@12744>   BTST #$1,$7(A3)                                           ;a array [] in newtype is found
0002B2DE <AmiBlitz3.ab3@12745>    BEQ.w rongtypeerr
0002B2E2 <AmiBlitz3.ab3@12746>    BSR.w JL_0_9004
0002B2E6 <AmiBlitz3.ab3@12747>   MOVEM.l A2-A3,-(A7)
0002B2EC <AmiBlitz3.ab3@12748>   MOVE.w varmode,-(A7)
0002B2F2 <AmiBlitz3.ab3@12749>   MOVE.l lastoffset_org,-(A7)
0002B2F8 <AmiBlitz3.ab3@12750>   MOVE.w pusha2,D1
0002B2FC <AmiBlitz3.ab3@12751>   BSR.w writeword
0002B2FE <AmiBlitz3.ab3@12752>   MOVEQ.l #$03,D2                                          ;was 2 >32kb types
0002B308 <AmiBlitz3.ab3@12753>   MOVE.l destpointer,deststore
0002B30E <AmiBlitz3.ab3@12754>   MOVE.l leftsidetype,-(a7)
0002B314 <AmiBlitz3.ab3@12755>   MOVE.l rightsidetype,-(a7)
0002B31A <AmiBlitz3.ab3@12757>   MOVE.w leftsideflagmask,-(a7)
0002B320 <AmiBlitz3.ab3@12758>   MOVE.w rightsideflagmask,-(a7)
0002B326 <AmiBlitz3.ab3@12759>   CLR.l rightsidetype
0002B32C <AmiBlitz3.ab3@12760>   CLR.l leftsidetype
0002B332 <AmiBlitz3.ab3@12761>   CLR.w leftsideflagmask
0002B338 <AmiBlitz3.ab3@12762>   CLR.w rightsideflagmask
0002B33C <AmiBlitz3.ab3@12763>   BSR.w eval
0002B342 <AmiBlitz3.ab3@12764>   MOVE.w (a7)+,rightsideflagmask
0002B348 <AmiBlitz3.ab3@12765>   MOVE.w (a7)+,leftsideflagmask
0002B34E <AmiBlitz3.ab3@12766>   MOVE.l (a7)+,rightsidetype
0002B354 <AmiBlitz3.ab3@12767>   MOVE.l (a7)+,leftsidetype
0002B358 <AmiBlitz3.ab3@12768>   CMP.w #$5D,D0
0002B35C <AmiBlitz3.ab3@12769>    BNE.w syntaxerr
0002B362 <AmiBlitz3.ab3@12770>   TST.b fast                                               ;a2,-(a7) array
0002B366 <AmiBlitz3.ab3@12771>   BEQ calcvar__loop0_l10
0002B36C <AmiBlitz3.ab3@12775>   MOVE.l destpointer,d1
0002B372 <AmiBlitz3.ab3@12776>   SUB.l deststore,d1
0002B378 <AmiBlitz3.ab3@12777>   CMP.l #4,d1
0002B37C <AmiBlitz3.ab3@12778>   BNE calcvar__loop0_l10
0002B382 <AmiBlitz3.ab3@12779>   MOVE.l destpointer,a4
0002B388 <AmiBlitz3.ab3@12780>   MOVE.l -4(a4),-6(a4)
0002B38E <AmiBlitz3.ab3@12781>   SUBQ.l #2,destpointer
0002B394 <AmiBlitz3.ab3@12782>   CLR.l imm_addr
0002B39A <AmiBlitz3.ab3@12783>   CLR.l load_var_addr
0002B39E <AmiBlitz3.ab3@12784> BRA calcvar__loop0_l20
0002B3A4 <AmiBlitz3.ab3@12787>   MOVE.w pulla2,D1
0002B3A8 <AmiBlitz3.ab3@12788>    BSR.w writeword
0002B3AE <AmiBlitz3.ab3@12791>   MOVE.l (A7)+,lastoffset_org
0002B3B4 <AmiBlitz3.ab3@12792>   MOVE.w (A7)+,varmode
0002B3B8 <AmiBlitz3.ab3@12793>   MOVEM.l (A7)+,A2-A3
0002B3BE <AmiBlitz3.ab3@12799>   TST.w debugmode
0002B3C2 <AmiBlitz3.ab3@12800>    BEQ.b calcvar__nobchk
0002B3C6 <AmiBlitz3.ab3@12801>   MOVE.w $8(A3),D1
0002B3CA <AmiBlitz3.ab3@12802>    BEQ.b calcvar__nobchk                                   ;no [0] checks!
0002B3D0 <AmiBlitz3.ab3@12806>   MOVE.w D1,brchkcode+2
0002B3D6 <AmiBlitz3.ab3@12807>   MOVE.w regnum,D1
0002B3D8 <AmiBlitz3.ab3@12808>   LSL.w #8,D1
0002B3DA <AmiBlitz3.ab3@12809>   LSL.w #1,D1
0002B3DE <AmiBlitz3.ab3@12810>   OR.w brchkcode0(PC),D1
0002B3E4 <AmiBlitz3.ab3@12811>   MOVE.w D1,brchkcode
0002B3E8 <AmiBlitz3.ab3@12812>   MOVE.l brchkcode(PC),D1
0002B3EC <AmiBlitz3.ab3@12813>    BSR.w writelong
0002B3F0 <AmiBlitz3.ab3@12814>   MOVE.l brchkcode+4(PC),D1
0002B3F4 <AmiBlitz3.ab3@12815>    BSR.w writelong
0002B3F8 <AmiBlitz3.ab3@12816>   MOVE.w brchkcode+8(PC),D1
0002B3FC <AmiBlitz3.ab3@12817>    BSR.w writeword
0002B3FE <AmiBlitz3.ab3@12820>   MOVEQ.l #$04,D1
0002B404 <AmiBlitz3.ab3@12821>   BTST #$0,$7(A3)
0002B408 <AmiBlitz3.ab3@12822>    BNE.w calcvar__dothemul
0002B40C <AmiBlitz3.ab3@12823>   MOVE.w $8(A2),D1
0002B410 <AmiBlitz3.ab3@12826>   BSR.w JL_0_B6DE
0002B416 <AmiBlitz3.ab3@12827>   MOVE.w addrega2,D1
0002B41C <AmiBlitz3.ab3@12828>   OR.w regnum,D1
0002B420 <AmiBlitz3.ab3@12829>    OR.w #$100,d1                                           ;>32kb types
0002B424 <AmiBlitz3.ab3@12830>    BSR.w writeword
0002B428 <AmiBlitz3.ab3@12831>    BSR.w get1bytemain
0002B42A <AmiBlitz3.ab3@12832>   MOVEQ.l #$00,D3
0002B42E <AmiBlitz3.ab3@12833>   MOVE.w #$8000,D2
0002B434 <AmiBlitz3.ab3@12836>   BTST #$0,$7(A3)
0002B438 <AmiBlitz3.ab3@12837>    BNE.w calcvar__pointer
0002B43C <AmiBlitz3.ab3@12838> BRA.w calcvar__loop0
0002B440 <AmiBlitz3.ab3@12842>  CMP.w #$5C,D0
0002B444 <AmiBlitz3.ab3@12843>    BNE.w calcvar__done3
0002B446 <AmiBlitz3.ab3@12844>   TST.w D3
0002B44A <AmiBlitz3.ab3@12845>    BNE.w calcvar__pskip
0002B450 <AmiBlitz3.ab3@12846>   MOVE.w movea0,D1
0002B454 <AmiBlitz3.ab3@12847>    BSR.w writeword
0002B458 <AmiBlitz3.ab3@12848> BRA.w calcvar__pmore
0002B45E <AmiBlitz3.ab3@12851>   MOVE.w D3,movea0a0+2
0002B464 <AmiBlitz3.ab3@12852>   MOVE.l movea0a0,D1
0002B468 <AmiBlitz3.ab3@12853>    BSR.w writelong
0002B46E <AmiBlitz3.ab3@12856>   BTST #$2,$7(A3)
0002B472 <AmiBlitz3.ab3@12857>    BEQ.w calcvar__loopml
0002B478 <AmiBlitz3.ab3@12858>   MOVE.l adda0a0,D1
0002B47C <AmiBlitz3.ab3@12859>    BSR.w writelong
0002B480 <AmiBlitz3.ab3@12860> BRA.w calcvar__loopml
0002B484 <AmiBlitz3.ab3@12863>   BSET #$E,D2
0002B48A <AmiBlitz3.ab3@12864>   BTST #$2,$7(A3)
0002B48E <AmiBlitz3.ab3@12865>    BNE.w calcvar__done
0002B492 <AmiBlitz3.ab3@12866>   BSET #$D,D2
0002B49A <AmiBlitz3.ab3@12869>   CMPI.l #$100,$4(A2)
0002B49E <AmiBlitz3.ab3@12870>    BCC.w calcvar__done2
0002B4A2 <AmiBlitz3.ab3@12871>   MOVE.b $7(A2),D2
0002B4A6 <AmiBlitz3.ab3@12874> BRA.w JL_0_9004
0002B4AA <AmiBlitz3.ab3@12877>   MOVE.w $6(A2),D2
0002B4AE <AmiBlitz3.ab3@12880>   MOVE.w $4(A3),D3
0002B4B4 <AmiBlitz3.ab3@12881>   BTST #$0,$7(A3)
0002B4B8 <AmiBlitz3.ab3@12882>    BEQ.w calcvar__nopoint
0002B4BC <AmiBlitz3.ab3@12883>   BSET #$E,D2
0002B4BE <AmiBlitz3.ab3@12886> RTS
0002B4C2 <AmiBlitz3.ab3@12890> brchkcode0:  Dc.b $B0,$7C,$00,$00                          ;CMP.W   #$0000,D0
0002B4C6 <AmiBlitz3.ab3@12891> brchkcode:   Dc.b $B0,$7C :             Dc.b $00,$00       ;CMP.W   #$0000,D0
0002B4C8 <AmiBlitz3.ab3@12892>              Dc.b $65,$04                                  ;BCS.B   brchkcode__ok
0002B4CA <AmiBlitz3.ab3@12893>              Dc.b $70,$02                                  ;MOVEQ   #$02,D0
0002B4CC <AmiBlitz3.ab3@12894>              Dc.b $4E,$40                                  ;TRAP    #00
0002B4D2 <AmiBlitz3.ab3@12902>   TST.w varmode
0002B4D6 <AmiBlitz3.ab3@12903>    BEQ.w writeword
0002B4DA <AmiBlitz3.ab3@12904>   BCLR #$0,D1
0002B4DE <AmiBlitz3.ab3@12905> BRA.w writeword
0002B4E4 <AmiBlitz3.ab3@12908>   TST.w varmode
0002B4E8 <AmiBlitz3.ab3@12909>    BEQ.w writeword
0002B4EC <AmiBlitz3.ab3@12910>   BCLR #$9,D1
0002B4F0 <AmiBlitz3.ab3@12911> BRA.w writeword
0002B4F6 <AmiBlitz3.ab3@12914>   TST.w proceduremode
0002B4FA <AmiBlitz3.ab3@12915>    BEQ.w writelong
0002B4FE <AmiBlitz3.ab3@12916>   BCLR #$19,D1
0002B502 <AmiBlitz3.ab3@12917> BRA.w writelong
0002B508 <AmiBlitz3.ab3@12920>   TST.w varmode
0002B50C <AmiBlitz3.ab3@12921>   BEQ.w writelong
0002B510 <AmiBlitz3.ab3@12922>   BCLR #$10,D1
0002B516 <AmiBlitz3.ab3@12925>   ADDQ.l #1,destpointer
0002B51E <AmiBlitz3.ab3@12926>   BCLR #$0,destpointer+3
0002B524 <AmiBlitz3.ab3@12927>   MOVEA.l destpointer,A4
0002B52A <AmiBlitz3.ab3@12928>   CMPA.l destbufferend,A4
0002B52E <AmiBlitz3.ab3@12929>    BCC.w writeword__overa
0002B530 <AmiBlitz3.ab3@12930>   MOVE.l D1,(A4)+
0002B536 <AmiBlitz3.ab3@12933>   MOVE.l A4,destpointer
0002B53A <AmiBlitz3.ab3@12934>   CMPA.l bigpc(PC),A4
0002B53E <AmiBlitz3.ab3@12935>    BHI.w writeword__nbp
0002B540 <AmiBlitz3.ab3@12936> RTS
0002B548 <AmiBlitz3.ab3@12939>   MOVE.w #$FFFF,dontwrite                                  ;#-1 org source
0002B54E <AmiBlitz3.ab3@12940>   CLR.b fast
0002B554 <AmiBlitz3.ab3@12941>   CLR.b fpu
0002B55A <AmiBlitz3.ab3@12942>   CLR.b iee
0002B55C <AmiBlitz3.ab3@12943>   ADDQ.w #4,A4
0002B560 <AmiBlitz3.ab3@12944> BRA.w writeword__msa
0002B566 <AmiBlitz3.ab3@12950>   ADDQ.l #1,destpointer
0002B56E <AmiBlitz3.ab3@12951>   BCLR #$0,destpointer+3
0002B574 <AmiBlitz3.ab3@12952>   MOVEA.l destpointer,A4
0002B57A <AmiBlitz3.ab3@12953>   CMPA.l destbufferend,A4
0002B57E <AmiBlitz3.ab3@12954>    BCC.w writeword__over
0002B580 <AmiBlitz3.ab3@12955>   MOVE.w D1,(A4)+
0002B586 <AmiBlitz3.ab3@12958>   MOVE.l A4,destpointer
0002B58A <AmiBlitz3.ab3@12959>   CMPA.l bigpc(PC),A4
0002B58E <AmiBlitz3.ab3@12960>    BHI.w writeword__nbp
0002B590 <AmiBlitz3.ab3@12961> RTS
0002B596 <AmiBlitz3.ab3@12964>   ADDQ.l #1,destpointer
0002B59E <AmiBlitz3.ab3@12965>   BCLR #$0,destpointer+3
0002B5A4 <AmiBlitz3.ab3@12966>   MOVEA.l destpointer,A4
0002B5AA <AmiBlitz3.ab3@12967>   CMPA.l destbufferend,A4
0002B5AE <AmiBlitz3.ab3@12968>    BCC.w writeword__over
0002B5B0 <AmiBlitz3.ab3@12969>   MOVE.w D1,(A4)+
0002B5B6 <AmiBlitz3.ab3@12970>   MOVE.l A4,destpointer
0002B5BA <AmiBlitz3.ab3@12971>   CMPA.l bigpc(PC),A4
0002B5BE <AmiBlitz3.ab3@12972>    BHI.w writeword__nbp
0002B5C0 <AmiBlitz3.ab3@12973> RTS
0002B5C6 <AmiBlitz3.ab3@12976>   TST.w cfetchmode
0002B5CA <AmiBlitz3.ab3@12977>   BNE.w writeword__nbp2
0002B5D0 <AmiBlitz3.ab3@12978>   MOVE.l A4,bigpc
0002B5D2 <AmiBlitz3.ab3@12981> RTS
0002B5DA <AmiBlitz3.ab3@12984>   MOVE.w #$FFFF,dontwrite                                  ;#-1 org source
0002B5DC <AmiBlitz3.ab3@12985>   ADDQ.w #2,A4
0002B5E2 <AmiBlitz3.ab3@12986>   CLR.b fast
0002B5E8 <AmiBlitz3.ab3@12987>   CLR.b fpu
0002B5EE <AmiBlitz3.ab3@12988>   CLR.b iee
0002B5F2 <AmiBlitz3.ab3@12989> BRA.w writeword__ms
0002B5F8 <AmiBlitz3.ab3@12993>   MOVEA.l destpointer,A4
0002B5FE <AmiBlitz3.ab3@12994>   CMPA.l destbufferend,A4
0002B602 <AmiBlitz3.ab3@12995>    BCC.w writebyte__over
0002B604 <AmiBlitz3.ab3@12996>   MOVE.b D1,(A4)+
0002B60A <AmiBlitz3.ab3@12999>   MOVE.l A4,destpointer
0002B60E <AmiBlitz3.ab3@13000>   CMPA.l bigpc(PC),A4
0002B612 <AmiBlitz3.ab3@13001>    BHI.w writebyte__nbp
0002B614 <AmiBlitz3.ab3@13002> RTS
0002B61A <AmiBlitz3.ab3@13005>   TST.w cfetchmode
0002B61E <AmiBlitz3.ab3@13006>    BNE.w writebyte__nbp2
0002B624 <AmiBlitz3.ab3@13007>   MOVE.l A4,bigpc
0002B626 <AmiBlitz3.ab3@13010> RTS
0002B62E <AmiBlitz3.ab3@13013>   MOVE.w #-1,dontwrite
0002B630 <AmiBlitz3.ab3@13014>   ADDQ.w #1,A4
0002B636 <AmiBlitz3.ab3@13015>   CLR.b fast
0002B63C <AmiBlitz3.ab3@13016>   CLR.b fpu
0002B642 <AmiBlitz3.ab3@13017>   CLR.b iee
0002B646 <AmiBlitz3.ab3@13018> BRA.w writebyte__ms
0002B64A <AmiBlitz3.ab3@13021> bigpc:   Ds.l 1
0002B64C <AmiBlitz3.ab3@13025>   MOVE.w (A0)+,D1
0002B650 <AmiBlitz3.ab3@13026>   BSR.w writeword
0002B652 <AmiBlitz3.ab3@13029>     CMPA.l A1,A0
0002B656 <AmiBlitz3.ab3@13030>     BCC.w pokecode__done
0002B658 <AmiBlitz3.ab3@13031>       MOVE.w (A0)+,D1
0002B65C <AmiBlitz3.ab3@13032>       BSR.w writeword
0002B660 <AmiBlitz3.ab3@13033> BRA.w pokecode__loop
0002B662 <AmiBlitz3.ab3@13036> RTS
0002B664 <AmiBlitz3.ab3@13039>   MOVE.w (A0)+,D1
0002B668 <AmiBlitz3.ab3@13040>   BSR.w writeword
0002B66A <AmiBlitz3.ab3@13041>   CMPA.l A1,A0
0002B66E <AmiBlitz3.ab3@13042>   BCS.w pokecode2
0002B670 <AmiBlitz3.ab3@13043> RTS
0002B676 <AmiBlitz3.ab3@13049>   TST.b iniffcommand
0002B67A <AmiBlitz3.ab3@13050>   BEQ 'l1
0002B67E <AmiBlitz3.ab3@13051>     MOVE.w #$4880,D1
0002B684 <AmiBlitz3.ab3@13052>     OR.w regnum,D1
0002B688 <AmiBlitz3.ab3@13053>     BSR writeword
0002B68A <AmiBlitz3.ab3@13056> RTS
0002B68E <AmiBlitz3.ab3@13059>   BSR.w convert_byte_to_word
0002B694 <AmiBlitz3.ab3@13062>   TST.b iee
0002B698 <AmiBlitz3.ab3@13063>   BEQ 'old
0002B69C <AmiBlitz3.ab3@13064>   CMP.b #5,d2
0002B6A0 <AmiBlitz3.ab3@13065>   BEQ wtof
0002B6A4 <AmiBlitz3.ab3@13068>   MOVE.w #$48C0,D1
0002B6AA <AmiBlitz3.ab3@13069>   OR.w regnum,D1
0002B6AE <AmiBlitz3.ab3@13070> BRA.w writeword
0002B6B0 <AmiBlitz3.ab3@13073>   MOVEQ #0,d0
0002B6B6 <AmiBlitz3.ab3@13074>   MOVE.w regnum,d0
0002B6B8 <AmiBlitz3.ab3@13075>   ASL.l #7,d0
0002B6BE <AmiBlitz3.ab3@13076>   MOVE.l #$f2005000,d1
0002B6C0 <AmiBlitz3.ab3@13077>   OR.l d0,d1
0002B6C2 <AmiBlitz3.ab3@13078>   ASL.l #1,d0
0002B6C4 <AmiBlitz3.ab3@13079>   ASL.l #8,d0
0002B6C6 <AmiBlitz3.ab3@13080>   OR.l d0,d1
0002B6CA <AmiBlitz3.ab3@13081> BRA writelong
0002B6CE <AmiBlitz3.ab3@13085>   BSR.w convert_byte_to_word
0002B6D2 <AmiBlitz3.ab3@13088>   MOVE.w #$4840,D1
0002B6D8 <AmiBlitz3.ab3@13089>   OR.w regnum,D1
0002B6DC <AmiBlitz3.ab3@13090>    BSR.w writeword
0002B6E0 <AmiBlitz3.ab3@13091>   MOVE.w #$4240,D1
0002B6E6 <AmiBlitz3.ab3@13092>   OR.w regnum,D1
0002B6EA <AmiBlitz3.ab3@13093> BRA.w writeword
0002B6EE <AmiBlitz3.ab3@13097>   CMP.w #$ffdc,d1
0002B6F2 <AmiBlitz3.ab3@13098>   BNE 'negfpu
0002B6F4 <AmiBlitz3.ab3@13099>   MOVEQ #0,d0
0002B6FA <AmiBlitz3.ab3@13100>   MOVE.w regnum,d0
0002B6FC <AmiBlitz3.ab3@13101>   ASL.l #7,d0
0002B702 <AmiBlitz3.ab3@13102>   MOVE.l #$f2004000,d1
0002B704 <AmiBlitz3.ab3@13103>   OR.l d0,d1
0002B706 <AmiBlitz3.ab3@13104>   ASL.l #1,d0
0002B708 <AmiBlitz3.ab3@13105>   ASL.l #8,d0
0002B70A <AmiBlitz3.ab3@13106>   OR.l d0,d1
0002B70E <AmiBlitz3.ab3@13107> BRA writelong
0002B710 <AmiBlitz3.ab3@13111>   MOVEQ #0,d1
0002B716 <AmiBlitz3.ab3@13112>   MOVE.w regnum,d1                                         ;fpu neg
0002B718 <AmiBlitz3.ab3@13113>   ASL.l #7,d1
0002B71E <AmiBlitz3.ab3@13114>   OR.l #$f200001a,d1
0002B720 <AmiBlitz3.ab3@13115>   MOVE.l d0,-(a7)
0002B722 <AmiBlitz3.ab3@13116>   MOVEQ #0,d0
0002B728 <AmiBlitz3.ab3@13117>   MOVE.w regnum,d0
0002B72A <AmiBlitz3.ab3@13118>   ASL.l #8,d0
0002B72C <AmiBlitz3.ab3@13119>   ASL.l #2,d0
0002B72E <AmiBlitz3.ab3@13120>   OR.l d0,d1
0002B730 <AmiBlitz3.ab3@13121>   MOVE.l (a7)+,d0
0002B734 <AmiBlitz3.ab3@13122> BRA writelong
0002B73A <AmiBlitz3.ab3@13125>    TST.b iee
0002B73E <AmiBlitz3.ab3@13126>    BNE wtof
0002B742 <AmiBlitz3.ab3@13127>    BSR.w convert_byte_to_long
0002B746 <AmiBlitz3.ab3@13130>    MOVE.w #$FFDC,D1
0002B74C <AmiBlitz3.ab3@13133>    TST.b iee
0002B750 <AmiBlitz3.ab3@13134>    BNE ltof
0002B756 <AmiBlitz3.ab3@13135>    MOVE.w D1,libjsr+2
0002B75A <AmiBlitz3.ab3@13136>    BSR.w JL_0_AD40
0002B75C <AmiBlitz3.ab3@13137>   MOVE.l D4,D1
0002B760 <AmiBlitz3.ab3@13138>    BSR.w JL_0_AD38
0002B764 <AmiBlitz3.ab3@13139>   MOVE.w #$C900,D1
0002B768 <AmiBlitz3.ab3@13140>    BSR.w Atokejsr
0002B76C <AmiBlitz3.ab3@13141>    BSR.w JL_0_A352
0002B772 <AmiBlitz3.ab3@13142>   MOVE.l libjsr,D1
0002B776 <AmiBlitz3.ab3@13143>    BSR.w writelong
0002B77A <AmiBlitz3.ab3@13144>    BSR.w JL_0_A36E
0002B77C <AmiBlitz3.ab3@13145>   MOVE.l D5,D1
0002B780 <AmiBlitz3.ab3@13146> BRA.w JL_0_AD38
0002B782 <AmiBlitz3.ab3@13149> RTS
0002B786 <AmiBlitz3.ab3@13152>   MOVE.w #$C317,D1
0002B78C <AmiBlitz3.ab3@13153>   TST.b typecheck
0002B790 <AmiBlitz3.ab3@13154>   BEQ 'l1
0002B796 <AmiBlitz3.ab3@13155>    TST.b notypecheck
0002B79A <AmiBlitz3.ab3@13156>    BNE 'l1
0002B7A0 <AmiBlitz3.ab3@13157>    TST.l lasttoken
0002B7A6 <AmiBlitz3.ab3@13164>   TST.b debugmode
0002B7AA <AmiBlitz3.ab3@13165>    BEQ.w JL_0_9696
0002B7B2 <AmiBlitz3.ab3@13166>   BTST #$7,overflowcheck
0002B7B6 <AmiBlitz3.ab3@13167>    BEQ.w JL_0_9696
0002B7BC <AmiBlitz3.ab3@13168>   TST.w cfetchmode
0002B7C0 <AmiBlitz3.ab3@13169>    BNE.w JL_0_9696
0002B7C6 <AmiBlitz3.ab3@13170>   TST.w regnum
0002B7CA <AmiBlitz3.ab3@13171>    BEQ.w JL_0_968A
0002B7CC <AmiBlitz3.ab3@13172>   MOVE.w D1,-(A7)
0002B7D0 <AmiBlitz3.ab3@13173>   MOVE.w JL_0_9698(PC),D1
0002B7D4 <AmiBlitz3.ab3@13174>    BSR.w writeword
0002B7DA <AmiBlitz3.ab3@13175>   MOVE.w regnum,D1
0002B7DE <AmiBlitz3.ab3@13176>   OR.w L_0_969C(PC),D1
0002B7E2 <AmiBlitz3.ab3@13177>    BSR.w writeword
0002B7E4 <AmiBlitz3.ab3@13178>   MOVE.w (A7)+,D1
0002B7E8 <AmiBlitz3.ab3@13179>    BSR.w JL_0_968A
0002B7EC <AmiBlitz3.ab3@13180>   MOVE.w L_0_969A(PC),D1
0002B7F0 <AmiBlitz3.ab3@13181> BRA.w writeword
0002B7F4 <AmiBlitz3.ab3@13185>   MOVEM.l D0-D7/A0-A6,-(A7)
0002B7F8 <AmiBlitz3.ab3@13186>    BSR.w Atokejsr
0002B7FC <AmiBlitz3.ab3@13187>   MOVEM.l (A7)+,D0-D7/A0-A6
0002B7FE <AmiBlitz3.ab3@13190> RTS
0002B800 <AmiBlitz3.ab3@13193>   MOVE.l D0,-(A7)
0002B802 <AmiBlitz3.ab3@13196>   MOVE.l (A7)+,D0
0002B804 <AmiBlitz3.ab3@13199>   MOVE.l D0,D0
0002B808 <AmiBlitz3.ab3@13202>   BSR.w convert_word_to_long
0002B80E <AmiBlitz3.ab3@13203>   TST.b iee
0002B812 <AmiBlitz3.ab3@13204>   BEQ 'old
0002B816 <AmiBlitz3.ab3@13205>   CMP.b #5,d2
0002B81A <AmiBlitz3.ab3@13206>   BNE 'old
0002B81C <AmiBlitz3.ab3@13207> RTS
0002B820 <AmiBlitz3.ab3@13210> BRA.w JL_0_9600
0002B824 <AmiBlitz3.ab3@13214>   MOVE.w #$C316,D1
0002B82A <AmiBlitz3.ab3@13215>   TST.b typecheck
0002B82E <AmiBlitz3.ab3@13216>   BEQ 'l1
0002B834 <AmiBlitz3.ab3@13217>   TST.b peekaddrsize
0002B838 <AmiBlitz3.ab3@13218>   BNE 'l1
0002B83E <AmiBlitz3.ab3@13219>   TST.b notypecheck
0002B842 <AmiBlitz3.ab3@13220>   BNE 'l1
0002B848 <AmiBlitz3.ab3@13221>   TST.l lasttoken
0002B84C <AmiBlitz3.ab3@13227> BRA.w JL_0_963A
0002B850 <AmiBlitz3.ab3@13231>   MOVE.w #$C318,D1
0002B856 <AmiBlitz3.ab3@13232>   TST.b typecheck
0002B85A <AmiBlitz3.ab3@13233>   BEQ 'l1
0002B860 <AmiBlitz3.ab3@13234>   TST.b peekaddrsize
0002B864 <AmiBlitz3.ab3@13235>   BNE 'l1
0002B86A <AmiBlitz3.ab3@13236>   TST.b notypecheck
0002B86E <AmiBlitz3.ab3@13237>   BNE 'l1
0002B874 <AmiBlitz3.ab3@13238>   TST.l lasttoken
0002B878 <AmiBlitz3.ab3@13244> BRA.w JL_0_963A
0002B87C <AmiBlitz3.ab3@13248>   MOVE.w #$C318,D1
0002B882 <AmiBlitz3.ab3@13249>   TST.b typecheck
0002B886 <AmiBlitz3.ab3@13250>   BEQ 'l1
0002B88C <AmiBlitz3.ab3@13251>   TST.b notypecheck
0002B890 <AmiBlitz3.ab3@13252>   BNE 'l1
0002B896 <AmiBlitz3.ab3@13253>   TST.l lasttoken
0002B89A <AmiBlitz3.ab3@13259>   BSR.w JL_0_963A
0002B89E <AmiBlitz3.ab3@13260> BRA.w convert_word_to_quick
0002B8A2 <AmiBlitz3.ab3@13264> BRA.w JL_0_9600
0002B8A4 <AmiBlitz3.ab3@13268> RTS
0002B8A8 <AmiBlitz3.ab3@13272>   MOVE.w #$C319,D1
0002B8AE <AmiBlitz3.ab3@13273>   TST.b typecheck
0002B8B2 <AmiBlitz3.ab3@13274>   BEQ 'l1
0002B8B8 <AmiBlitz3.ab3@13275>   TST.b notypecheck
0002B8BC <AmiBlitz3.ab3@13276>   BNE 'l1
0002B8C2 <AmiBlitz3.ab3@13277>   TST.l lasttoken
0002B8C6 <AmiBlitz3.ab3@13284>   BSR.w JL_0_963A
0002B8CA <AmiBlitz3.ab3@13287>   MOVE.w #$4240,D1
0002B8D0 <AmiBlitz3.ab3@13288>   OR.w regnum,D1
0002B8D4 <AmiBlitz3.ab3@13289>   BSR.w writeword
0002B8D8 <AmiBlitz3.ab3@13290>   MOVE.w #$4840,D1
0002B8DE <AmiBlitz3.ab3@13291>   OR.w regnum,D1
0002B8E2 <AmiBlitz3.ab3@13292> BRA.w writeword
0002B8E6 <AmiBlitz3.ab3@13296> BRA.w JL_0_96D0
0002B8EA <AmiBlitz3.ab3@13300>   BSR.w JL_0_96D0
0002B8EE <AmiBlitz3.ab3@13301> BRA.w convert_word_to_long
0002B8F0 <AmiBlitz3.ab3@13306>   MOVEQ #0,d0
0002B8F6 <AmiBlitz3.ab3@13307>   MOVE.w regnum,d0
0002B8F8 <AmiBlitz3.ab3@13308>   ASL.l #7,d0
0002B8FE <AmiBlitz3.ab3@13309>   MOVE.l #$f2004000,d1
0002B900 <AmiBlitz3.ab3@13310>   OR.l d0,d1
0002B902 <AmiBlitz3.ab3@13311>   ASL.l #1,d0
0002B904 <AmiBlitz3.ab3@13312>   ASL.l #8,d0
0002B906 <AmiBlitz3.ab3@13313>   OR.l d0,d1
0002B90A <AmiBlitz3.ab3@13314>   BSR writelong
0002B910 <AmiBlitz3.ab3@13315>   MOVE.w regnum,d0
0002B912 <AmiBlitz3.ab3@13316>   ASL.l #7,d0
0002B918 <AmiBlitz3.ab3@13317>   MOVE.l #$f23c4423,d1                                     ;fmul.s #1/65536,fpreg
0002B91A <AmiBlitz3.ab3@13318>   OR.w d0,d1
0002B91E <AmiBlitz3.ab3@13319>   BSR writelong
0002B924 <AmiBlitz3.ab3@13320>   MOVE.l #$37800000,d1
0002B928 <AmiBlitz3.ab3@13321>   BSR writelong
0002B92A <AmiBlitz3.ab3@13322> RTS
0002B930 <AmiBlitz3.ab3@13326>   TST.b iee
0002B934 <AmiBlitz3.ab3@13327>   BNE qtof
0002B938 <AmiBlitz3.ab3@13328>   MOVE.w #$D300,D1
0002B93A <AmiBlitz3.ab3@13331>   MOVE.w D1,-(A7)
0002B93E <AmiBlitz3.ab3@13332>    BSR.w JL_0_AD40
0002B940 <AmiBlitz3.ab3@13333>   MOVE.l D4,D1
0002B944 <AmiBlitz3.ab3@13334>    BSR.w JL_0_AD38
0002B948 <AmiBlitz3.ab3@13335>    BSR.w JL_0_A352
0002B94A <AmiBlitz3.ab3@13336>   MOVE.w (A7)+,D1
0002B94E <AmiBlitz3.ab3@13337>    BSR.w Atokejsr
0002B952 <AmiBlitz3.ab3@13338>    BSR.w JL_0_A36E
0002B954 <AmiBlitz3.ab3@13339>   MOVE.l D5,D1
0002B958 <AmiBlitz3.ab3@13340> BRA.w JL_0_AD38
0002B95A <AmiBlitz3.ab3@13344> RTS
0002B960 <AmiBlitz3.ab3@13347>   TST.b typecheck
0002B964 <AmiBlitz3.ab3@13348>   BEQ 'l1
0002B96A <AmiBlitz3.ab3@13349>   TST.b notypecheck
0002B96E <AmiBlitz3.ab3@13350>   BNE 'l1
0002B974 <AmiBlitz3.ab3@13351>   TST.l lasttoken
0002B97A <AmiBlitz3.ab3@13356>   TST.b iee
0002B97E <AmiBlitz3.ab3@13357>   BNE ftol
0002B982 <AmiBlitz3.ab3@13358>   MOVE.w #$C31A,D1
0002B986 <AmiBlitz3.ab3@13359>   BSR.w JL_0_963A
0002B98A <AmiBlitz3.ab3@13360>   BSR.w JL_0_974A
0002B98E <AmiBlitz3.ab3@13361> BRA.w convert_long_to_byte
0002B990 <AmiBlitz3.ab3@13365> RTS
0002B996 <AmiBlitz3.ab3@13368>   TST.b typecheck
0002B99A <AmiBlitz3.ab3@13369>   BEQ 'l1
0002B9A0 <AmiBlitz3.ab3@13370>   TST.b notypecheck
0002B9A4 <AmiBlitz3.ab3@13371>   BNE 'l1
0002B9AA <AmiBlitz3.ab3@13372>   TST.l lasttoken
0002B9B0 <AmiBlitz3.ab3@13377>   TST.b iee
0002B9B4 <AmiBlitz3.ab3@13378>   BNE ftol
0002B9B8 <AmiBlitz3.ab3@13379>   MOVE.w #$C31B,D1
0002B9BC <AmiBlitz3.ab3@13380>   BSR.w JL_0_963A
0002B9C0 <AmiBlitz3.ab3@13381>   BSR.w JL_0_974A
0002B9C4 <AmiBlitz3.ab3@13382> BRA.w convert_long_to_word
0002B9C6 <AmiBlitz3.ab3@13386> RTS
0002B9CC <AmiBlitz3.ab3@13389>   TST.b iee
0002B9D0 <AmiBlitz3.ab3@13390>   BNE ftol
0002B9D4 <AmiBlitz3.ab3@13391>   MOVE.w #$C31C,D1
0002B9D8 <AmiBlitz3.ab3@13392>   BSR.w JL_0_963A
0002B9DC <AmiBlitz3.ab3@13395>   MOVE.w #$FFE2,D1
0002B9E0 <AmiBlitz3.ab3@13396> BRA.w JL_0_9604
0002B9E2 <AmiBlitz3.ab3@13399>   MOVE.l d0,-(a7)
0002B9E4 <AmiBlitz3.ab3@13400>   MOVEQ #0,d0
0002B9EA <AmiBlitz3.ab3@13401>   MOVE.w regnum,d0
0002B9EC <AmiBlitz3.ab3@13402>   ASL.l #7,d0
0002B9F2 <AmiBlitz3.ab3@13403>   MOVE.l #$f2006000,d1
0002B9F4 <AmiBlitz3.ab3@13404>   OR.l d0,d1
0002B9F6 <AmiBlitz3.ab3@13405>   ASL.l #1,d0
0002B9F8 <AmiBlitz3.ab3@13406>   ASL.l #8,d0
0002B9FA <AmiBlitz3.ab3@13407>   OR.l d0,d1
0002B9FC <AmiBlitz3.ab3@13408>   MOVE.l (a7)+,d0
0002BA00 <AmiBlitz3.ab3@13409> BRA writelong
0002BA02 <AmiBlitz3.ab3@13413>   MOVE.l d0,-(a7)
0002BA04 <AmiBlitz3.ab3@13414>   MOVEQ #0,d0
0002BA0A <AmiBlitz3.ab3@13415>   MOVE.l #$f23c4023,d1
0002BA10 <AmiBlitz3.ab3@13416>   MOVE.w regnum,d0
0002BA12 <AmiBlitz3.ab3@13417>   ASL.l #7,d0
0002BA14 <AmiBlitz3.ab3@13418>   OR.l d0,d1
0002BA18 <AmiBlitz3.ab3@13419>   BSR writelong
0002BA1E <AmiBlitz3.ab3@13420>   MOVE.l #$00010000,d1
0002BA22 <AmiBlitz3.ab3@13421>   BSR writelong
0002BA28 <AmiBlitz3.ab3@13422>   MOVE.w regnum,d0
0002BA2A <AmiBlitz3.ab3@13423>   ASL.l #7,d0
0002BA30 <AmiBlitz3.ab3@13424>   MOVE.l #$f2006000,d1
0002BA32 <AmiBlitz3.ab3@13425>   OR.l d0,d1
0002BA34 <AmiBlitz3.ab3@13426>   ASL.l #1,d0
0002BA36 <AmiBlitz3.ab3@13427>   ASL.l #8,d0
0002BA38 <AmiBlitz3.ab3@13428>   OR.l d0,d1
0002BA3C <AmiBlitz3.ab3@13429>   BSR writelong
0002BA3E <AmiBlitz3.ab3@13430>   MOVE.l (a7)+,d0
0002BA40 <AmiBlitz3.ab3@13431> RTS
0002BA42 <AmiBlitz3.ab3@13435> RTS
0002BA48 <AmiBlitz3.ab3@13439>   TST.b iee
0002BA4C <AmiBlitz3.ab3@13440>   BNE ftoq
0002BA50 <AmiBlitz3.ab3@13441>   MOVE.w #$C31B,D1
0002BA54 <AmiBlitz3.ab3@13442>   BSR.w JL_0_963A
0002BA58 <AmiBlitz3.ab3@13443>   MOVE.w #$D301,D1
0002BA5C <AmiBlitz3.ab3@13444> BRA.w JL_0_96FC
0002BA62 <AmiBlitz3.ab3@13450>    TST.b blitzparloop
0002BA66 <AmiBlitz3.ab3@13451>    BNE 'l1
0002BA6C <AmiBlitz3.ab3@13452>    TST.b funcparloop
0002BA70 <AmiBlitz3.ab3@13453>    BNE 'l1
0002BA74 <AmiBlitz3.ab3@13454>    BRA error_convert_types
0002BA7C <AmiBlitz3.ab3@13457>   CMP.b #2,optistring
0002BA80 <AmiBlitz3.ab3@13458>   BEQ JLrts
0002BA86 <AmiBlitz3.ab3@13459>   MOVE.w stol,D1
0002BA8A <AmiBlitz3.ab3@13460>   BSR.w writeword
0002BA92 <AmiBlitz3.ab3@13461>   CMPI.w #$2,sbgot
0002BA96 <AmiBlitz3.ab3@13462>   BCS.w sbtolong
0002BA9A <AmiBlitz3.ab3@13463>   MOVE.w ceos(PC),D1
0002BA9E <AmiBlitz3.ab3@13464>   BSR.w writeword
0002BAA4 <AmiBlitz3.ab3@13467>   MOVE.w regnum,D1
0002BAA6 <AmiBlitz3.ab3@13468>   LSL.w #8,D1
0002BAA8 <AmiBlitz3.ab3@13469>   LSL.w #1,D1
0002BAB0 <AmiBlitz3.ab3@13470>   CMPI.w #$2,sbgot
0002BAB4 <AmiBlitz3.ab3@13471>   BCS.w JL_0_98E8
0002BABA <AmiBlitz3.ab3@13472>   MOVE.w a2offset,D3
0002BAC0 <AmiBlitz3.ab3@13473>   SUB.w thisstuse,D3
0002BAC4 <AmiBlitz3.ab3@13474>   CMP.w #$6,D3
0002BAC8 <AmiBlitz3.ab3@13475>   BNE.w JL_0_98D4b
0002BACE <AmiBlitz3.ab3@13476>   OR.w movestst2,D1
0002BAD2 <AmiBlitz3.ab3@13477>   BSR.w writeword
0002BAD8 <AmiBlitz3.ab3@13478>   LEA movestst2+2,A0
0002BADE <AmiBlitz3.ab3@13479>   LEA movestst2f,A1
0002BAE2 <AmiBlitz3.ab3@13480> BRA.w pokecode2
0002BAE8 <AmiBlitz3.ab3@13484>   OR.w movea7dn,D1
0002BAEC <AmiBlitz3.ab3@13485>   BSR.w writeword
0002BAF2 <AmiBlitz3.ab3@13486>   MOVE.l #0,D1
0002BAF6 <AmiBlitz3.ab3@13487> BRA.w writeword
0002BAFC <AmiBlitz3.ab3@13491>   ADDQ.w #1,fuckpos
0002BB00 <AmiBlitz3.ab3@13492>   BSR.w writeconvertcode
0002BB06 <AmiBlitz3.ab3@13493>   SUBQ.w #1,fuckpos
0002BB08 <AmiBlitz3.ab3@13495> RTS
0002BB0A <AmiBlitz3.ab3@13499>   MOVE.w D3,D1
0002BB0E <AmiBlitz3.ab3@13500>   CMP.w #7,d1
0002BB12 <AmiBlitz3.ab3@13501>   BLE 'ok
0002BB18 <AmiBlitz3.ab3@13502>   JMP errorinternalconvert
0002BB1A <AmiBlitz3.ab3@13503> 'ok  SUBQ.w #1,D1
0002BB1E <AmiBlitz3.ab3@13504>   MULU #$7,D1
0002BB20 <AmiBlitz3.ab3@13505>   ADD.w D2,D1
0002BB22 <AmiBlitz3.ab3@13506>   SUBQ.w #1,D1
0002BB24 <AmiBlitz3.ab3@13507>   LSL.w #2,D1
0002BB2A <AmiBlitz3.ab3@13508>   LEA convtable,A0
0002BB2E <AmiBlitz3.ab3@13509>   MOVE.l $0(A0,D1.W),D1
0002BB32 <AmiBlitz3.ab3@13510>   BEQ.w JL_0_97A2
0002BB34 <AmiBlitz3.ab3@13511>     MOVEA.l D1,A0
0002BB38 <AmiBlitz3.ab3@13512>     CMP.b #$ff,d3
0002BB3C <AmiBlitz3.ab3@13513>     BEQ JL_0_97A2
0002BB3E <AmiBlitz3.ab3@13514> JMP (A0)
0002BB40 <AmiBlitz3.ab3@13517> RTS
0002BB44 <AmiBlitz3.ab3@13520> usedfrom:  Ds.l 1
0002BB48 <AmiBlitz3.ab3@13527>   CMP.w #"\",D0
0002BB4C <AmiBlitz3.ab3@13528>   BNE.w JL_0_97C2
0002BB50 <AmiBlitz3.ab3@13529>     CMP.b #"\",(a5)
0002BB54 <AmiBlitz3.ab3@13530>     BNE 'first
0002BB5A <AmiBlitz3.ab3@13531>       MOVE.l A5,usedfrom
0002BB60 <AmiBlitz3.ab3@13532>       LEA path2,A5
0002BB64 <AmiBlitz3.ab3@13533> BRA 'g1
0002BB66 <AmiBlitz3.ab3@13536>     SUBQ.w #1,A5
0002BB6C <AmiBlitz3.ab3@13537>   MOVE.l A5,usedfrom
0002BB72 <AmiBlitz3.ab3@13538>   LEA usedpath,A5                                          ;read path
0002BB76 <AmiBlitz3.ab3@13541>   BSR.w get1bytemain
0002BB7C <AmiBlitz3.ab3@13544>   CLR.w flagmask
0002BB80 <AmiBlitz3.ab3@13545>   CMP.w #$2A,D0
0002BB84 <AmiBlitz3.ab3@13546>    BNE.w JL_0_983A
0002BB8C <AmiBlitz3.ab3@13547>   MOVE.w #$0001,flagmask
0002BB90 <AmiBlitz3.ab3@13549>    BSR.w getparameter2
0002BB94 <AmiBlitz3.ab3@13552>    BEQ.w syntaxerr
0002BB98 <AmiBlitz3.ab3@13553>   CMP.w #$28,D0
0002BB9C <AmiBlitz3.ab3@13554>    BEQ.w JL_0_9830
0002BBA0 <AmiBlitz3.ab3@13555>   CMP.w #$2E,D0
0002BBA4 <AmiBlitz3.ab3@13556>    BEQ.w JL_0_980C
0002BBA8 <AmiBlitz3.ab3@13557>   CMP.w #$24,D0
0002BBAC <AmiBlitz3.ab3@13558>    BNE.w JL_0_9838
0002BBB4 <AmiBlitz3.ab3@13559>   ORI.w #$8,flagmask
0002BBB8 <AmiBlitz3.ab3@13560>    BSR.w storeloc
0002BBBC <AmiBlitz3.ab3@13561>    BSR.w get1bytemain
0002BBC0 <AmiBlitz3.ab3@13562> BRA.w JL_0_9822
0002BBC4 <AmiBlitz3.ab3@13566>   BSR.w storeloc
0002BBC6 <AmiBlitz3.ab3@13567>   MOVE.w D2,-(A7)
0002BBCC <AmiBlitz3.ab3@13568>   LEA namebuff2,A1
0002BBD0 <AmiBlitz3.ab3@13569>    BSR.w makename3
0002BBD4 <AmiBlitz3.ab3@13570>    BEQ.w syntaxerr
0002BBD6 <AmiBlitz3.ab3@13571>   MOVE.w (A7)+,D2
0002BBD8 <AmiBlitz3.ab3@13574>    MOVE.w D0,D1
0002BBDC <AmiBlitz3.ab3@13575>    BSR.w resloc
0002BBE0 <AmiBlitz3.ab3@13576>    CMP.w #$28,D1
0002BBE4 <AmiBlitz3.ab3@13577>    BNE.w JL_0_9838
0002BBEC <AmiBlitz3.ab3@13580>   ORI.w #$2,flagmask
0002BBEE <AmiBlitz3.ab3@13583> RTS
0002BBF2 <AmiBlitz3.ab3@13587>   CMP.w #$40,D0
0002BBF6 <AmiBlitz3.ab3@13588>    BNE.w JL_0_984E
0002BBFE <AmiBlitz3.ab3@13589>   MOVE.w #$0005,flagmask
0002BC02 <AmiBlitz3.ab3@13590> BRA.w JL_0_97D8
0002BC06 <AmiBlitz3.ab3@13594>   BSR.w makename2
0002BC0A <AmiBlitz3.ab3@13595> BRA.w JL_0_97DC
0002BC0E <AmiBlitz3.ab3@13599>   MOVE.w #$FED3,D1
0002BC12 <AmiBlitz3.ab3@13600>    BSR.w uselib
0002BC18 <AmiBlitz3.ab3@13601>   LEA pusha3,A0
0002BC1E <AmiBlitz3.ab3@13602>   LEA pusha3f,A1
0002BC22 <AmiBlitz3.ab3@13603> BRA.w pokecode
0002BC26 <AmiBlitz3.ab3@13607>   MOVE.w #$FED3,D1
0002BC2A <AmiBlitz3.ab3@13608>    BSR.w uselib
0002BC30 <AmiBlitz3.ab3@13609>   LEA pulla3,A0
0002BC36 <AmiBlitz3.ab3@13610>   LEA pulla3f,A1
0002BC3A <AmiBlitz3.ab3@13611> BRA.w pokecode
0002BC3C <AmiBlitz3.ab3@13615> ceos:   Dc.b $42,$1B                                       ;CLR.B   (A3)+             ;*!
0002BC44 <AmiBlitz3.ab3@13620>     CMP.b #2,optistring
0002BC48 <AmiBlitz3.ab3@13621>    BEQ 'l10
0002BC4C <AmiBlitz3.ab3@13622>    MOVE.w ceos(PC),D1
0002BC50 <AmiBlitz3.ab3@13623>    BSR.w writeword                                         ;clr.b (a3)
0002BC56 <AmiBlitz3.ab3@13626>   MOVE.w regnum,D1
0002BC58 <AmiBlitz3.ab3@13627>   LSL.w #8,D1
0002BC5A <AmiBlitz3.ab3@13628>   LSL.w #1,D1
0002BC62 <AmiBlitz3.ab3@13629>   CMPI.w #$2,sbgot
0002BC66 <AmiBlitz3.ab3@13630>    BCS.w JL_0_98E8
0002BC6C <AmiBlitz3.ab3@13631>   MOVE.w a2offset,D3                                       ;stackuse,d3 org source
0002BC72 <AmiBlitz3.ab3@13632>   SUB.w thisstuse,D3
0002BC76 <AmiBlitz3.ab3@13633>   CMP.w #$6,D3
0002BC7A <AmiBlitz3.ab3@13634>    BNE.w JL_0_98D4
0002BC80 <AmiBlitz3.ab3@13635>   OR.w movestst2,D1
0002BC84 <AmiBlitz3.ab3@13636>    BSR.w writeword
0002BC8A <AmiBlitz3.ab3@13637>   LEA movestst2+2,A0
0002BC90 <AmiBlitz3.ab3@13638>   LEA movestst2f,A1
0002BC94 <AmiBlitz3.ab3@13639> BRA.w pokecode2
0002BC9A <AmiBlitz3.ab3@13643>    OR.w movea7dn,D1
0002BC9E <AmiBlitz3.ab3@13644>    BSR.w writeword
0002BCA4 <AmiBlitz3.ab3@13645>   MOVE.l movea7dn+2,D1
0002BCA8 <AmiBlitz3.ab3@13657>   BSR writelong
0002BCB0 <AmiBlitz3.ab3@13660>    CMP.w #6,regnum
0002BCB4 <AmiBlitz3.ab3@13661>    BEQ 'l1
0002BCBA <AmiBlitz3.ab3@13662>    TST.w stackpar
0002BCBE <AmiBlitz3.ab3@13663>    BNE 'l1
0002BCC4 <AmiBlitz3.ab3@13664>    TST.b funcparloop
0002BCC8 <AmiBlitz3.ab3@13665>    BEQ 'l1
0002BCCE <AmiBlitz3.ab3@13666>    MOVE.l #$48780000,d1
0002BCD2 <AmiBlitz3.ab3@13667>    BSR writelong
0002BCD4 <AmiBlitz3.ab3@13671> RTS
0002BCD6 <AmiBlitz3.ab3@13676>      MOVE.l d1,-(a7)
0002BCDE <AmiBlitz3.ab3@13677>      CMP.w #6,regnum
0002BCE2 <AmiBlitz3.ab3@13678>      BEQ 'l1
0002BCE8 <AmiBlitz3.ab3@13679>      TST.w stackpar
0002BCEC <AmiBlitz3.ab3@13680>      BNE 'l1
0002BCF2 <AmiBlitz3.ab3@13681>      TST.b funcparloop
0002BCF6 <AmiBlitz3.ab3@13682>      BEQ 'l1
0002BCFC <AmiBlitz3.ab3@13683>      MOVE.l #$48780000,d1
0002BD00 <AmiBlitz3.ab3@13684>      BSR writelong
0002BD02 <AmiBlitz3.ab3@13687>      MOVE.l (a7)+,d1
0002BD08 <AmiBlitz3.ab3@13689>    OR.w movestdn,D1
0002BD0C <AmiBlitz3.ab3@13690>    BSR.w writeword
0002BD10 <AmiBlitz3.ab3@13691>   MOVE.w #$FED3,D1
0002BD14 <AmiBlitz3.ab3@13692>    BSR.w uselib
0002BD18 <AmiBlitz3.ab3@13693>   MOVE.w $A(A1),D1
0002BD1C <AmiBlitz3.ab3@13694> BRA.w writeword
0002BD1E <AmiBlitz3.ab3@13697> unknown:    Ds.w 1
0002BD24 <AmiBlitz3.ab3@13700> somecode:   Dc.b $0C,$80,$00,$01,$00,$00                   ;CMPI.L  #$00010000,D0
0002BD28 <AmiBlitz3.ab3@13701> somecode2:  Dc.b $65,$00,$00,$08                           ;BCS.W   codeisok
0002BD2E <AmiBlitz3.ab3@13702>             Dc.b $4E,$B9,$00,$00,$00,$00                   ;JSR $00000000
0002BD34 <AmiBlitz3.ab3@13708>   TST.b debugmode
0002BD38 <AmiBlitz3.ab3@13709>   BEQ.w sharreval
0002BD3C <AmiBlitz3.ab3@13710>  BSR.w arreval
0002BD40 <AmiBlitz3.ab3@13713>   MOVE.w somecode(PC),D1
0002BD46 <AmiBlitz3.ab3@13714>   OR.w regnum,D1
0002BD4A <AmiBlitz3.ab3@13715>    BSR.w writeword
0002BD4C <AmiBlitz3.ab3@13716>   MOVEQ.l #$01,D1
0002BD4E <AmiBlitz3.ab3@13717>   SWAP D1
0002BD52 <AmiBlitz3.ab3@13718>    BSR.w writelong
0002BD56 <AmiBlitz3.ab3@13719>   MOVE.l somecode2(PC),D1
0002BD5A <AmiBlitz3.ab3@13720>    BSR.w writelong
0002BD5E <AmiBlitz3.ab3@13721>   MOVE.w #$C309,D1
0002BD62 <AmiBlitz3.ab3@13722> BRA.w Atokejsr
0002BD64 <AmiBlitz3.ab3@13726>   MOVEQ.l #$02,D2
0002BD66 <AmiBlitz3.ab3@13727>   MOVEQ.l #$00,D1
0002BD68 <AmiBlitz3.ab3@13728>   MOVEQ.l #$00,D3
0002BD6C <AmiBlitz3.ab3@13729> BRA.w maineval2
0002BD6E <AmiBlitz3.ab3@13733>   MOVEQ.l #$03,D2
0002BD70 <AmiBlitz3.ab3@13734>   MOVEQ.l #$00,D1
0002BD72 <AmiBlitz3.ab3@13735>   MOVEQ.l #$00,D3
0002BD78 <AmiBlitz3.ab3@13736>   MOVE.b notypecheck,-(a7)
0002BD80 <AmiBlitz3.ab3@13737>   MOVE.b #1,notypecheck                                    ;typecheck need switch off for array offset calculation code
0002BD86 <AmiBlitz3.ab3@13738>   JSR maineval2
0002BD8C <AmiBlitz3.ab3@13739>   MOVE.b (a7)+,notypecheck                                 ;now its switch to old state
0002BD8E <AmiBlitz3.ab3@13740>   RTS
0002BD98 <AmiBlitz3.ab3@13744>   MOVE.w oldqflag,instringon
0002BD9E <AmiBlitz3.ab3@13745>   MOVEA.l lastsourcepos,A5
0002BDA0 <AmiBlitz3.ab3@13746>   MOVEQ.l #-$01,D1
0002BDA2 <AmiBlitz3.ab3@13747>   MOVEQ.l #-$01,D3
0002BDA6 <AmiBlitz3.ab3@13748> BRA.w peval
0002BDB0 <AmiBlitz3.ab3@13753>   MOVE.w oldqflag,instringon
0002BDB6 <AmiBlitz3.ab3@13754>   MOVEA.l lastsourcepos,A5
0002BDB8 <AmiBlitz3.ab3@13757>   MOVEQ.l #-$01,D1
0002BDBA <AmiBlitz3.ab3@13758>   MOVEQ.l #$00,D3
0002BDC0 <AmiBlitz3.ab3@13759>   MOVE.l leftsidetype,-(a7)
0002BDC6 <AmiBlitz3.ab3@13760>   MOVE.l rightsidetype,-(a7)
0002BDCC <AmiBlitz3.ab3@13761>   MOVE.w leftsideflagmask,-(a7)
0002BDD2 <AmiBlitz3.ab3@13762>   MOVE.w rightsideflagmask,-(a7)
0002BDD8 <AmiBlitz3.ab3@13763>   CLR.l leftsidetype
0002BDDE <AmiBlitz3.ab3@13764>   CLR.l rightsidetype
0002BDE4 <AmiBlitz3.ab3@13765>   CLR.w leftsideflagmask
0002BDEA <AmiBlitz3.ab3@13766>   CLR.w rightsideflagmask
0002BDF0 <AmiBlitz3.ab3@13767>   JSR maineval
0002BDF6 <AmiBlitz3.ab3@13768>   MOVE.w (a7)+,rightsideflagmask
0002BDFC <AmiBlitz3.ab3@13769>   MOVE.w (a7)+,leftsideflagmask
0002BE02 <AmiBlitz3.ab3@13770>   MOVE.l (a7)+,rightsidetype
0002BE08 <AmiBlitz3.ab3@13771>   MOVE.l (a7)+,leftsidetype
0002BE0A <AmiBlitz3.ab3@13772>   RTS
0002BE14 <AmiBlitz3.ab3@13776>   MOVE.w oldqflag,instringon
0002BE1A <AmiBlitz3.ab3@13777>   MOVEA.l lastsourcepos,A5
0002BE1C <AmiBlitz3.ab3@13778>   MOVEQ.l #$00,D1
0002BE1E <AmiBlitz3.ab3@13779>   MOVEQ.l #-$01,D3
0002BE22 <AmiBlitz3.ab3@13780> BRA.w maineval
0002BE24 <AmiBlitz3.ab3@13784>   MOVEQ.l #$01,D1
0002BE26 <AmiBlitz3.ab3@13785>   MOVEQ.l #-$01,D3
0002BE2A <AmiBlitz3.ab3@13786> BRA.w maineval
0002BE34 <AmiBlitz3.ab3@13791>   MOVE.w oldqflag,instringon
0002BE3A <AmiBlitz3.ab3@13792>   MOVEA.l lastsourcepos,A5
0002BE3C <AmiBlitz3.ab3@13795>   MOVEQ.l #$00,D1                                        ;no push
0002BE3E <AmiBlitz3.ab3@13796>   MOVEQ.l #$00,D3
0002BE46 <AmiBlitz3.ab3@13817>    CMPI.w #$6,regnum
0002BE4A <AmiBlitz3.ab3@13818>    BCS.w maineval2
0002BE4C <AmiBlitz3.ab3@13819>    MOVEQ #0,d1
0002BE52 <AmiBlitz3.ab3@13820>    MOVE.l destpointer,a4
0002BE58 <AmiBlitz3.ab3@13822>    CMPA.l destbufferend,A4
0002BE5C <AmiBlitz3.ab3@13823>    BCC.w maineval__l2
0002BE62 <AmiBlitz3.ab3@13825>    CMP.w #$2f0a,-2(a4)                                    ;bug is a move.l a2,-(a7) before (show temp calc)?
0002BE66 <AmiBlitz3.ab3@13827>    BNE maineval__l2
0002BE6A <AmiBlitz3.ab3@13831> BRA maineval__l1
0002BE6C <AmiBlitz3.ab3@13834>   MOVEQ.l #-$01,D1                                         ;do stackpar write
0002BE74 <AmiBlitz3.ab3@13837>   MOVE.w #$0006,regnum                                     ;write a func par To stack
0002BE7A <AmiBlitz3.ab3@13840>   MOVE.w thisstuse,-(A7)
0002BE84 <AmiBlitz3.ab3@13841>   MOVE.w a2offset,thisstuse
0002BE8A <AmiBlitz3.ab3@13842>   MOVE.w stackpar,-(A7)
0002BE90 <AmiBlitz3.ab3@13843>   MOVE.w D1,stackpar
0002BE96 <AmiBlitz3.ab3@13844>   MOVE.w sbgot,-(A7)
0002BE9C <AmiBlitz3.ab3@13845>   CLR.w sbgot
0002BEA0 <AmiBlitz3.ab3@13846>   MOVE.w unknown(PC),-(A7)
0002BEA6 <AmiBlitz3.ab3@13847>   MOVE.w D3,unknown
0002BEA8 <AmiBlitz3.ab3@13848>   MOVE.w D2,-(a7)
0002BEAE <AmiBlitz3.ab3@13849>   MOVE.w d2,mode
0002BEB2 <AmiBlitz3.ab3@13850>    BSR.w eval3
0002BEB4 <AmiBlitz3.ab3@13851>   MOVE.w (a7)+,d3
0002BEB8 <AmiBlitz3.ab3@13852>    BEQ.w maineval__noconv
0002BEBC <AmiBlitz3.ab3@13853>   MOVE.w unknown(PC),D1
0002BEC0 <AmiBlitz3.ab3@13854>    BNE.w maineval__noconv
0002BEC2 <AmiBlitz3.ab3@13855>   EXG.l D2,D3
0002BEC4 <AmiBlitz3.ab3@13856>    MOVE.l a2,-(a7)
0002BECA <AmiBlitz3.ab3@13857>    TST.b curtemplabel
0002BECE <AmiBlitz3.ab3@13858>    BEQ maineval2__l10
0002BED4 <AmiBlitz3.ab3@13859>    MOVE.l asmbuff,a2
0002BEDA <AmiBlitz3.ab3@13860>    CMP.w #$c,$8(a2)
0002BEDE <AmiBlitz3.ab3@13861>    BEQ maineval2__l20
0002BEE4 <AmiBlitz3.ab3@13862>    CMP.w #$d,$8(a2)
0002BEE8 <AmiBlitz3.ab3@13863>    BEQ maineval2__l20
0002BEEA <AmiBlitz3.ab3@13866>   CMP.w d2,d3
0002BEEE <AmiBlitz3.ab3@13867>   BEQ maineval2__l20
0002BEF2 <AmiBlitz3.ab3@13868>   BSR.w writeconvertcode
0002BEF8 <AmiBlitz3.ab3@13869>   CLR.b doimmediate
0002BEFA <AmiBlitz3.ab3@13872>   MOVE.l (a7)+,a2
0002BF00 <AmiBlitz3.ab3@13875>   MOVE.w (A7)+,unknown
0002BF06 <AmiBlitz3.ab3@13876>   MOVE.w stackpar,D1
0002BF0A <AmiBlitz3.ab3@13877>    BEQ.w maineval__skipme
0002BF0E <AmiBlitz3.ab3@13878>    BMI.w maineval__skipme
0002BF14 <AmiBlitz3.ab3@13882>   MOVE.w regnum,D1
0002BF16 <AmiBlitz3.ab3@13883>   LSL.w #8,D1
0002BF18 <AmiBlitz3.ab3@13884>   LSL.w #1,D1
0002BF1C <AmiBlitz3.ab3@13885>   CMP.w #$7,D2
0002BF20 <AmiBlitz3.ab3@13886>    BNE.w maineval__hi1
0002BF28 <AmiBlitz3.ab3@13887>    CMP.b #2,optistring
0002BF2C <AmiBlitz3.ab3@13888>    BEQ maineval__hi1a
0002BF2E <AmiBlitz3.ab3@13889>   MOVE.w D1,-(A7)
0002BF34 <AmiBlitz3.ab3@13890>   OR.w getstlen,D1
0002BF38 <AmiBlitz3.ab3@13891>    BSR.w writeword
0002BF3A <AmiBlitz3.ab3@13892>   MOVE.w (A7)+,D1
0002BF40 <AmiBlitz3.ab3@13895>   ADDQ.w #2,a2offset                                        ;lib mode to stack
0002BF44 <AmiBlitz3.ab3@13899>   MOVE.w #$3f3c,d1
0002BF48 <AmiBlitz3.ab3@13900>    BSR.w writeword
0002BF4A <AmiBlitz3.ab3@13904>   MOVE.w d2,d1
0002BF50 <AmiBlitz3.ab3@13905>   MOVE.w d1,libmode
0002BF54 <AmiBlitz3.ab3@13906>    BSR.w writeword
0002BF58 <AmiBlitz3.ab3@13907>   CMP.w #$7,D2
0002BF5C <AmiBlitz3.ab3@13908>    BNE.w maineval__skipme
0002BF62 <AmiBlitz3.ab3@13909>   MOVE.w putstlen,D1
0002BF68 <AmiBlitz3.ab3@13910>   OR.w regnum,D1
0002BF6C <AmiBlitz3.ab3@13911>    BSR.w writeword
0002BF70 <AmiBlitz3.ab3@13914>    CMP.w #$7,D2
0002BF74 <AmiBlitz3.ab3@13915>    BNE.w maineval__notst
0002BF7C <AmiBlitz3.ab3@13926>    CMP.b #2,optistring
0002BF80 <AmiBlitz3.ab3@13927>    BEQ maineval__skipme_l10
0002BF86 <AmiBlitz3.ab3@13928>    ADDQ.w #4,a2offset                                      ;a length on da stack.....
0002BF8A <AmiBlitz3.ab3@13929>    BSR.w sbtolong
0002BF8E <AmiBlitz3.ab3@13930> BRA.w maineval__notst2
0002BF96 <AmiBlitz3.ab3@13934>     CMP.w #6,regnum
0002BF9A <AmiBlitz3.ab3@13935>     BEQ maineval__skipme_l10_l1
0002BFA0 <AmiBlitz3.ab3@13936>     TST.b funcparloop
0002BFA4 <AmiBlitz3.ab3@13937>     BEQ maineval__skipme_l10_l1
0002BFAA <AmiBlitz3.ab3@13938>     MOVE.l #$48780000,d1
0002BFAE <AmiBlitz3.ab3@13939>     BSR writelong
0002BFB2 <AmiBlitz3.ab3@13942> BRA.w maineval__notst2
0002BFB8 <AmiBlitz3.ab3@13945>   ADDQ.w #2,a2offset
0002BFBC <AmiBlitz3.ab3@13946> BRA maineval__skipme
0002BFC4 <AmiBlitz3.ab3@13949>   CMPI.w #$2,sbgot
0002BFC8 <AmiBlitz3.ab3@13950>    BCS.w maineval__notst2                                         ;correct stack
0002BFCC <AmiBlitz3.ab3@13951>   MOVE.w ststfix(PC),D1
0002BFD0 <AmiBlitz3.ab3@13952>    BSR.w writeword
0002BFD6 <AmiBlitz3.ab3@13955>   MOVE.w (A7)+,sbgot
0002BFDC <AmiBlitz3.ab3@13956>   MOVE.w stackpar,D1
0002BFE0 <AmiBlitz3.ab3@13957>    BPL.w maineval__skip
0002BFE4 <AmiBlitz3.ab3@13958>    CMP.b #7,d2
0002BFE8 <AmiBlitz3.ab3@13959>    BEQ maineval__notst2_l1
0002BFEE <AmiBlitz3.ab3@13960>   TST.b funcparloop
0002BFF2 <AmiBlitz3.ab3@13961>   BEQ maineval__notst2_l1
0002BFF6 <AmiBlitz3.ab3@13962>   CMP.b #5,d2
0002BFFA <AmiBlitz3.ab3@13963>   BNE maineval__notst2_skip
0002C000 <AmiBlitz3.ab3@13964>   TST.b fpu
0002C004 <AmiBlitz3.ab3@13965>   BEQ maineval__notst2_skip
0002C00A <AmiBlitz3.ab3@13966>   MOVE.l #$f2066700,d1                                     ;fmove.s fp6,d6
0002C010 <AmiBlitz3.ab3@13967>   JSR writelong
0002C014 <AmiBlitz3.ab3@13970>   MOVE.w #$c4ff,d1                                         ;savetemp+regnum
0002C01A <AmiBlitz3.ab3@13971>   ADD.w parnum,d1
0002C020 <AmiBlitz3.ab3@13972>   JSR Atokejsr
0002C026 <AmiBlitz3.ab3@13973>    TST.w dontwrite
0002C02A <AmiBlitz3.ab3@13974>    BNE maineval__notst2_l1
0002C030 <AmiBlitz3.ab3@13975>    MOVE.l data1start,d1
0002C036 <AmiBlitz3.ab3@13976>    MOVE.l destpointer,a4
0002C03A <AmiBlitz3.ab3@13977>    ADD.l d1,-4(a4)
0002C040 <AmiBlitz3.ab3@13978>    MOVE.l destpointer,d1
0002C042 <AmiBlitz3.ab3@13979>    SUBQ.l #4,d1
0002C048 <AmiBlitz3.ab3@13980>    SUB.l destbufferstart,d1
0002C04A <AmiBlitz3.ab3@13981>    MOVE.l d2,-(a7)
0002C04C <AmiBlitz3.ab3@13982>    MOVE.l d1,d2
0002C052 <AmiBlitz3.ab3@13983>    JSR addhunkoffset
0002C054 <AmiBlitz3.ab3@13984>    MOVE.l (a7)+,d2
0002C058 <AmiBlitz3.ab3@13985> BRA maineval__skip
0002C05E <AmiBlitz3.ab3@13988>   ADDQ.w #2,a2offset
0002C064 <AmiBlitz3.ab3@13989>   MOVE.w pushd0wd,D1
0002C068 <AmiBlitz3.ab3@13990>   CMP.w #$3,D2                                             ;write parameter to stack
0002C06C <AmiBlitz3.ab3@13991>    BCS.w maineval__ok
0002C072 <AmiBlitz3.ab3@13992>   ADDQ.w #2,a2offset
0002C078 <AmiBlitz3.ab3@13993>   TST.b fpu
0002C07C <AmiBlitz3.ab3@13994>   BEQ maineval__notst2_nofpu
0002C080 <AmiBlitz3.ab3@13995>   CMP.w #5,d2
0002C084 <AmiBlitz3.ab3@13996>   BNE maineval__notst2_nofpu
0002C086 <AmiBlitz3.ab3@13997>   MOVEQ #0,d1
0002C08C <AmiBlitz3.ab3@13998>   MOVE.w regnum,d1
0002C08E <AmiBlitz3.ab3@13999>   ASL.l #7,d1
0002C094 <AmiBlitz3.ab3@14000>   OR.l #$f2276400,d1
0002C098 <AmiBlitz3.ab3@14001>   BSR writelong
0002C09C <AmiBlitz3.ab3@14002> BRA maineval__skip
0002C0A2 <AmiBlitz3.ab3@14005>   MOVE.w pushd0l,D1
0002C0A8 <AmiBlitz3.ab3@14008>    OR.w regnum,D1
0002C0AC <AmiBlitz3.ab3@14009>    BSR.w writeword                                         ;nat
0002C0B2 <AmiBlitz3.ab3@14012>   MOVE.w (A7)+,stackpar
0002C0B8 <AmiBlitz3.ab3@14013>   MOVE.w (A7)+,thisstuse
0002C0BA <AmiBlitz3.ab3@14014> RTS
0002C0BC <AmiBlitz3.ab3@14017> thisstuse: Ds.w 1
0002C0BE <AmiBlitz3.ab3@14020> ststfix:   Dc.b $58,$4F                                    ;ADDQ.W  #4,A7
0002C0C0 <AmiBlitz3.ab3@14021> pushut:    Dc.b $3F,$00                                    ;MOVE.W  D0,-(A7)
0002C0C4 <AmiBlitz3.ab3@14026>   BSR.w eval4
0002C0CE <AmiBlitz3.ab3@14027>   SUBI.l #$12,forthsp
0002C0D0 <AmiBlitz3.ab3@14028> RTS
0002C0D2 <AmiBlitz3.ab3@14032>   MOVEQ.l #$01,D1
0002C0D6 <AmiBlitz3.ab3@14034>       MOVEA.l precsp(PC),A1
0002C0D8 <AmiBlitz3.ab3@14035>       MOVE.l A0,(A1)+
0002C0DA <AmiBlitz3.ab3@14036>       MOVE.w D1,(A1)+
0002C0E0 <AmiBlitz3.ab3@14037>       MOVE.l A1,precsp
0002C0E4 <AmiBlitz3.ab3@14038>    BSR.w calcloop
0002C0E6 <AmiBlitz3.ab3@14039>   TST.w D1
0002C0EA <AmiBlitz3.ab3@14040>    BNE.w syntaxerr
0002C0F0 <AmiBlitz3.ab3@14041>   SUBQ.l #6,precsp                                      ;pop the prec set up
0002C0F2 <AmiBlitz3.ab3@14042> RTS
0002C0F6 <AmiBlitz3.ab3@14047>   BSR.w JL_0_9C24
0002C0FA <AmiBlitz3.ab3@14050>   MOVEA.l precsp(PC),A1
0002C0FC <AmiBlitz3.ab3@14051>   CMP.w -(A1),D1
0002C100 <AmiBlitz3.ab3@14052>    BHI.w JL_0_9B0A
0002C102 <AmiBlitz3.ab3@14053> RTS
0002C106 <AmiBlitz3.ab3@14058>   MOVEA.l precsp(PC),A1
0002C108 <AmiBlitz3.ab3@14059>   MOVE.l A0,(A1)+
0002C10A <AmiBlitz3.ab3@14060>   MOVE.w D1,(A1)+
0002C110 <AmiBlitz3.ab3@14061>   MOVE.l A1,precsp
0002C112 <AmiBlitz3.ab3@14062>   MOVE.w D2,-(A7)
0002C118 <AmiBlitz3.ab3@14063>   ADDQ.w #1,regnum
0002C11C <AmiBlitz3.ab3@14064>    BSR.w calcloop               ;constant optimizer
0002C122 <AmiBlitz3.ab3@14065>   SUBQ.w #1,regnum
0002C124 <AmiBlitz3.ab3@14066>   MOVE.w (A7)+,D3
0002C128 <AmiBlitz3.ab3@14067>   MOVEM.l D1/A0,-(A7)
0002C12C <AmiBlitz3.ab3@14068>    BEQ.w JL_0_9B2E
0002C130 <AmiBlitz3.ab3@14069>    BSR.w JL_0_9770
0002C134 <AmiBlitz3.ab3@14072>   BSR.w popprec
0002C138 <AmiBlitz3.ab3@14073>   BSR.w writecode
0002C13C <AmiBlitz3.ab3@14074>   MOVEA.l forthsp(PC),A0
0002C140 <AmiBlitz3.ab3@14075>   MOVE.w -$2(A0),D1
0002C144 <AmiBlitz3.ab3@14076>   OR.w -$14(A0),D1
0002C148 <AmiBlitz3.ab3@14077>   MOVE.w D1,-$14(A0)
0002C14C <AmiBlitz3.ab3@14078>    BNE.w JL_0_9C0E
0002C152 <AmiBlitz3.ab3@14079>   MOVE.w dontwrite,D1
0002C156 <AmiBlitz3.ab3@14080>    BNE.w JL_0_9C0E
0002C15A <AmiBlitz3.ab3@14081>    MOVEA.l -$24(A0),A0
0002C296 <AmiBlitz3.ab3@14083>  !newcalc
0002C29A <AmiBlitz3.ab3@14084>    BEQ 'l10
0002C29E <AmiBlitz3.ab3@14085>    MOVEA.l forthsp(PC),A0
0002C2A6 <AmiBlitz3.ab3@14086>    MOVE.w -$18(A0),lasta6
0002C2AE <AmiBlitz3.ab3@14087>    MOVE.l -$1C(A0),lasta6
0002C2B2 <AmiBlitz3.ab3@14088>    MOVEA.l -$24(A0),A0
0002C2B8 <AmiBlitz3.ab3@14089>    MOVE.l A0,destpointer
0002C2BE <AmiBlitz3.ab3@14090>    MOVEA.l _mathffpbase,A6
0002C2C4 <AmiBlitz3.ab3@14091>    MOVEA.l ffplib,A1
0002C2C8 <AmiBlitz3.ab3@14092> BRA cont1
0002C2CC <AmiBlitz3.ab3@14095>   MOVE.w #$2000,D1
0002C2D2 <AmiBlitz3.ab3@14096>   OR.w regnum,D1
0002C2D6 <AmiBlitz3.ab3@14097>    BSR.w writeword
0002C2D8 <AmiBlitz3.ab3@14098>     MOVEQ #0,d1
0002C2DE <AmiBlitz3.ab3@14099>     MOVE.w regnum,D1
0002C2E0 <AmiBlitz3.ab3@14100>     ASL.l #8,d1
0002C2E2 <AmiBlitz3.ab3@14101>     ASL.l #2,d1
0002C2E8 <AmiBlitz3.ab3@14102>     OR.l #$f2000000,d1
0002C2EC <AmiBlitz3.ab3@14103>     BSR writelong
0002C2F0 <AmiBlitz3.ab3@14104>   MOVE.w #$4E75,D1
0002C2F4 <AmiBlitz3.ab3@14105>    BSR.w writeword
0002C2FC <AmiBlitz3.ab3@14106>   MOVE.w -$18(A0),lasta6
0002C304 <AmiBlitz3.ab3@14107>   MOVE.l -$1C(A0),lasta6
0002C308 <AmiBlitz3.ab3@14108>   MOVEA.l -$24(A0),A0
0002C30E <AmiBlitz3.ab3@14109>   MOVE.l A0,destpointer
0002C312 <AmiBlitz3.ab3@14110>   MOVEM.l D2/A5,-(A7)
0002C318 <AmiBlitz3.ab3@14111>   MOVEA.l _mathffpbase,A6
0002C31E <AmiBlitz3.ab3@14112>   MOVEA.l ffplib,A1
0002C322 <AmiBlitz3.ab3@14113>   MOVE.w $A(A1),D0
0002C328 <AmiBlitz3.ab3@14114>   LEA _mathffpbase,A5
0002C32A <AmiBlitz3.ab3@14115>   SUBA.w D0,A5
0002C330 <AmiBlitz3.ab3@14116>   JSR Aclearcache                                          ;neg +
0002C336 <AmiBlitz3.ab3@14117>   CLR.l load_var_addr
0002C33C <AmiBlitz3.ab3@14118>   CLR.l imm_addr
0002C342 <AmiBlitz3.ab3@14119>   TST.w dontwrite
0002C346 <AmiBlitz3.ab3@14120>   BNE '1
0002C348 <AmiBlitz3.ab3@14121>   JSR (A0)                                                 ;calc constant inline expression
0002C34C <AmiBlitz3.ab3@14124>   MOVEM.l (A7)+,D2/A5
0002C352 <AmiBlitz3.ab3@14127>   MOVE.b d2,isconstantvalue
0002C358 <AmiBlitz3.ab3@14128>   MOVE.l d0,lastconstantvalue
0002C35E <AmiBlitz3.ab3@14129>   MOVE.w regnum,D1
0002C360 <AmiBlitz3.ab3@14130>   LSL.w #8,D1
0002C362 <AmiBlitz3.ab3@14131>   LSL.w #1,D1
0002C366 <AmiBlitz3.ab3@14132>   ORI.w #$203C,D1
0002C36A <AmiBlitz3.ab3@14133>   CMP.w #$3,D2
0002C36E <AmiBlitz3.ab3@14134>    BCC.w JL_0_9BCE
0002C372 <AmiBlitz3.ab3@14135>   ORI.w #$1000,D1
0002C376 <AmiBlitz3.ab3@14136>    BSR.w writeword
0002C378 <AmiBlitz3.ab3@14137>   MOVE.w D0,D1
0002C37C <AmiBlitz3.ab3@14138>    BSR.w writeword
0002C380 <AmiBlitz3.ab3@14139> BRA.w JL_0_9BD8
0002C386 <AmiBlitz3.ab3@14143>   TST.b iee                                                ;fpu constant
0002C38A <AmiBlitz3.ab3@14144>   BEQ 'l10
0002C38E <AmiBlitz3.ab3@14145>   CMP.b #5,d2
0002C392 <AmiBlitz3.ab3@14146>   BNE 'l10
0002C394 <AmiBlitz3.ab3@14147>   MOVEQ #0,d1
0002C39A <AmiBlitz3.ab3@14148>   MOVE.w regnum,D1
0002C39C <AmiBlitz3.ab3@14149>   ASL.l #7,d1
0002C3A2 <AmiBlitz3.ab3@14150>   OR.l #$f23c5400,d1
0002C3A6 <AmiBlitz3.ab3@14151>   BSR writelong
0002C3A8 <AmiBlitz3.ab3@14152>   SUBQ.l #8,a7
0002C3AE <AmiBlitz3.ab3@14153>   fmove.d fp0,0(a7)
0002C3B0 <AmiBlitz3.ab3@14154>   MOVE.l (a7)+,d1
0002C3B4 <AmiBlitz3.ab3@14155>   BSR writelong
0002C3B6 <AmiBlitz3.ab3@14156>   MOVE.l (a7)+,d1
0002C3BA <AmiBlitz3.ab3@14157>   BSR writelong
0002C3BE <AmiBlitz3.ab3@14158> BRA JL_0_9BD8
0002C3C2 <AmiBlitz3.ab3@14161>   BSR.w writeword
0002C3C4 <AmiBlitz3.ab3@14162>   MOVE.l D0,D1
0002C3C8 <AmiBlitz3.ab3@14163>   BSR.w writelong
0002C3CC <AmiBlitz3.ab3@14166>   MOVEA.l forthsp(PC),A0
0002C3D0 <AmiBlitz3.ab3@14167>   MOVEA.l -$20(A0),A3
0002C3D6 <AmiBlitz3.ab3@14168>   MOVEA.l hunkoffsetbase,A2
0002C3DC <AmiBlitz3.ab3@14169>   MOVE.l A3,hunkoffsetbase
0002C3E2 <AmiBlitz3.ab3@14170>   MOVEA.l _execbase,A6
0002C3E4 <AmiBlitz3.ab3@14173>   CMPA.l A3,A2
0002C3E8 <AmiBlitz3.ab3@14174>   BEQ.w JL_0_9C0A
0002C3EE <AmiBlitz3.ab3@14175>   SUBQ.l #1,hunkoffsetcounter
0002C3F0 <AmiBlitz3.ab3@14176>   MOVEA.l A2,A1
0002C3F2 <AmiBlitz3.ab3@14177>   MOVEA.l (A2),A2
0002C3F4 <AmiBlitz3.ab3@14178>   MOVEQ.l #$8,D0
0002C3FA <AmiBlitz3.ab3@14179>   MOVE.l mempool2,a0
0002C3FE <AmiBlitz3.ab3@14180>    JSR _FreePooled(A6)
0002C402 <AmiBlitz3.ab3@14181> BRA.w JL_0_9BF0
0002C406 <AmiBlitz3.ab3@14185>   MOVEA.l forthsp(PC),A0
0002C40A <AmiBlitz3.ab3@14188>   LEA -$12(A0),A0
0002C410 <AmiBlitz3.ab3@14189>   MOVE.l A0,forthsp
0002C414 <AmiBlitz3.ab3@14190>   MOVEM.l (A7)+,D1/A0
0002C418 <AmiBlitz3.ab3@14191>   BSR.w reget
0002C41C <AmiBlitz3.ab3@14192> BRA.w JL_0_9AFE
0002C420 <AmiBlitz3.ab3@14196>   BSR.w JL_0_A386
0002C422 <AmiBlitz3.ab3@14197>   TST.w d0
0002C426 <AmiBlitz3.ab3@14198>   BEQ JL_0_9C42
0002C42A <AmiBlitz3.ab3@14199>   CMP.b #",",d0
0002C42E <AmiBlitz3.ab3@14200>   BEQ JL_0_9C42
0002C432 <AmiBlitz3.ab3@14201>   CMP.b #"@",d0                                            ;expandline @@
0002C436 <AmiBlitz3.ab3@14202>   BEQ JL_0_9C42
0002C43C <AmiBlitz3.ab3@14203>   LEA operators,A0
0002C43E <AmiBlitz3.ab3@14206>    TST.w (A0)
0002C442 <AmiBlitz3.ab3@14207>    BEQ.w JL_0_9C42
0002C444 <AmiBlitz3.ab3@14208>   CMP.w (A0),D0
0002C448 <AmiBlitz3.ab3@14209>    BEQ.w JL_0_9C46a
0002C44C <AmiBlitz3.ab3@14210>   LEA $20(A0),A0
0002C450 <AmiBlitz3.ab3@14211> BRA.w JL_0_9C2E
0002C452 <AmiBlitz3.ab3@14215>   MOVEQ.l #$00,D1
0002C454 <AmiBlitz3.ab3@14216> RTS
0002C458 <AmiBlitz3.ab3@14220>   CMP.w #$3C,D0
0002C45C <AmiBlitz3.ab3@14221>    BNE.w JL_0_9C70
0002C460 <AmiBlitz3.ab3@14222>    BSR.w get1bytemain
0002C464 <AmiBlitz3.ab3@14223>   CMP.w #$3D,D0
0002C468 <AmiBlitz3.ab3@14224>    BNE.w JL_0_9C64
0002C46E <AmiBlitz3.ab3@14225>   LEA ople,A0
0002C472 <AmiBlitz3.ab3@14226> BRA.w JL_0_9CCA
0002C476 <AmiBlitz3.ab3@14230>   CMP.w #$3E,D0
0002C47A <AmiBlitz3.ab3@14231>    BNE.w JL_0_9C96
0002C47E <AmiBlitz3.ab3@14232> BRA.w JL_0_9CC4
0002C482 <AmiBlitz3.ab3@14236>   CMP.w #$3E,D0
0002C486 <AmiBlitz3.ab3@14237>    BNE.w JL_0_9C9E
0002C48A <AmiBlitz3.ab3@14238>    BSR.w get1bytemain
0002C48E <AmiBlitz3.ab3@14239>   CMP.w #$3D,D0
0002C492 <AmiBlitz3.ab3@14240>    BNE.w JL_0_9C8E
0002C498 <AmiBlitz3.ab3@14241>   LEA opge,A0
0002C49C <AmiBlitz3.ab3@14242> BRA.w JL_0_9CCA
0002C4A0 <AmiBlitz3.ab3@14246>   CMP.w #$3C,D0
0002C4A4 <AmiBlitz3.ab3@14247>    BEQ.w JL_0_9CC4
0002C4AE <AmiBlitz3.ab3@14251>     MOVE.w oldqflag,instringon
0002C4B4 <AmiBlitz3.ab3@14252>     MOVEA.l lastsourcepos,A5
0002C4B8 <AmiBlitz3.ab3@14253> BRA.w JL_0_9CCA
0002C4BC <AmiBlitz3.ab3@14257>   CMP.w #$3D,D0
0002C4C0 <AmiBlitz3.ab3@14258>    BNE.w JL_0_9CCA
0002C4C4 <AmiBlitz3.ab3@14259>    BSR.w get1bytemain
0002C4C8 <AmiBlitz3.ab3@14260>   CMP.w #$3E,D0
0002C4CC <AmiBlitz3.ab3@14261>    BNE.w JL_0_9CBC
0002C4D2 <AmiBlitz3.ab3@14262>   LEA opge,A0
0002C4D6 <AmiBlitz3.ab3@14263> BRA.w JL_0_9CCA
0002C4DA <AmiBlitz3.ab3@14267>   CMP.w #$3C,D0
0002C4DE <AmiBlitz3.ab3@14268>   BNE.w JL_0_9C96
0002C4E4 <AmiBlitz3.ab3@14271>   LEA opne,A0
0002C4E8 <AmiBlitz3.ab3@14274>   MOVE.w $1E(A0),D1
0002C4EA <AmiBlitz3.ab3@14275> RTS
0002C4EC <AmiBlitz3.ab3@14282>   MOVE.w d2,d1
0002C4EE <AmiBlitz3.ab3@14283>   SUBQ.w #1,D1
0002C4F2 <AmiBlitz3.ab3@14284>    BMI.w illoperr
0002C4F4 <AmiBlitz3.ab3@14285>   LSL.w #2,D1
0002C4F8 <AmiBlitz3.ab3@14286>   MOVE.l $2(A0,D1.W),D1
0002C4FC <AmiBlitz3.ab3@14287>    BEQ.w illoperr
0002C4FE <AmiBlitz3.ab3@14288>   MOVEA.l D1,A0
0002C500 <AmiBlitz3.ab3@14291> JMP (A0)
0002C504 <AmiBlitz3.ab3@14307>   MOVEA.l precsp(PC),A1
0002C50A <AmiBlitz3.ab3@14308>   CMPA.l #precstackf,A1
0002C50E <AmiBlitz3.ab3@14309>    BCC.w pserr
0002C510 <AmiBlitz3.ab3@14310>   MOVE.w -(A1),D1
0002C512 <AmiBlitz3.ab3@14311>   MOVEA.l -(A1),A0
0002C518 <AmiBlitz3.ab3@14312>   MOVE.l A1,precsp
0002C51A <AmiBlitz3.ab3@14313> RTS
0002C51E <AmiBlitz3.ab3@14316> precsp:      Dc.l precstack
0002C61A <AmiBlitz3.ab3@14317> precstack:   Ds.l 63                                       ;ds 6*32 org source   ;Lotsa Room?
0002C69E <AmiBlitz3.ab3@14318>              Ds.l 33
0002C6A0 <AmiBlitz3.ab3@14324> mseq:  SEQ D0
0002C6A2 <AmiBlitz3.ab3@14325> msne:    SNE D0
0002C6A4 <AmiBlitz3.ab3@14326> mslt:    SLT D0
0002C6A6 <AmiBlitz3.ab3@14327> msle:    SLE D0
0002C6A8 <AmiBlitz3.ab3@14328> msgt:    SGT D0
0002C6AA <AmiBlitz3.ab3@14329> msge:    SGE D0
0002C6AC <AmiBlitz3.ab3@14331> cmp0:    CMP.b D0,D0
0002C6AE <AmiBlitz3.ab3@14332> cmp1:    CMP.w D0,D0
0002C6B0 <AmiBlitz3.ab3@14333> cmp2:    CMP.l D0,D0
0002C6B4 <AmiBlitz3.ab3@14337>   MOVE.w cmp0(PC),D1
0002C6B8 <AmiBlitz3.ab3@14338> BRA.w doeqcmp2                                            ;writecompare
0002C6BC <AmiBlitz3.ab3@14342>   MOVE.w cmp0(PC),D1
0002C6C0 <AmiBlitz3.ab3@14343> BRA.w donecmp2
0002C6C4 <AmiBlitz3.ab3@14347>   MOVE.w cmp0(PC),D1
0002C6C8 <AmiBlitz3.ab3@14348> BRA.w doltcmp2
0002C6CC <AmiBlitz3.ab3@14352>   MOVE.w cmp0(PC),D1
0002C6D0 <AmiBlitz3.ab3@14353> BRA.w dolecmp2
0002C6D4 <AmiBlitz3.ab3@14357>   MOVE.w cmp0(PC),D1
0002C6D8 <AmiBlitz3.ab3@14358> BRA.w dogtcmp2
0002C6DC <AmiBlitz3.ab3@14363>   MOVE.w cmp0(PC),D1
0002C6E0 <AmiBlitz3.ab3@14364> BRA.w dogecmp2
0002C6E4 <AmiBlitz3.ab3@14368>   MOVE.w cmp1(PC),D1
0002C6E8 <AmiBlitz3.ab3@14369> BRA.w doeqcmp2
0002C6EC <AmiBlitz3.ab3@14373>   MOVE.w cmp1(PC),D1
0002C6F0 <AmiBlitz3.ab3@14374> BRA.w donecmp2
0002C6F4 <AmiBlitz3.ab3@14378>   MOVE.w cmp1(PC),D1
0002C6F8 <AmiBlitz3.ab3@14379> BRA.w doltcmp2
0002C6FC <AmiBlitz3.ab3@14383>   MOVE.w cmp1(PC),D1
0002C700 <AmiBlitz3.ab3@14384> BRA.w dolecmp2
0002C704 <AmiBlitz3.ab3@14388>   MOVE.w cmp1(PC),D1
0002C708 <AmiBlitz3.ab3@14389> BRA.w dogtcmp2
0002C70C <AmiBlitz3.ab3@14394>   MOVE.w cmp1(PC),D1
0002C710 <AmiBlitz3.ab3@14395> BRA.w dogecmp2
0002C714 <AmiBlitz3.ab3@14399>   MOVE.w cmp2(PC),D1                                   ;writecomparelong
0002C718 <AmiBlitz3.ab3@14400> BRA doeqcmp2
0002C71C <AmiBlitz3.ab3@14403>   MOVE.w cmp2(PC),D1
0002C720 <AmiBlitz3.ab3@14404> BRA donecmp2
0002C724 <AmiBlitz3.ab3@14408>   MOVE.w cmp2(PC),D1
0002C728 <AmiBlitz3.ab3@14409> BRA.w doltcmp2
0002C72C <AmiBlitz3.ab3@14413>   MOVE.w cmp2(PC),D1
0002C730 <AmiBlitz3.ab3@14414> BRA.w dolecmp2
0002C734 <AmiBlitz3.ab3@14418>   MOVE.w cmp2(PC),D1
0002C738 <AmiBlitz3.ab3@14419> BRA.w dogtcmp2
0002C73C <AmiBlitz3.ab3@14423>   MOVE.w cmp2(PC),D1
0002C740 <AmiBlitz3.ab3@14424> BRA.w dogecmp2
0002C742 <AmiBlitz3.ab3@14427> cfregat:  Ds.w 1
0002C748 <AmiBlitz3.ab3@14431>   MOVE.w D1,libjsr+2
0002C74C <AmiBlitz3.ab3@14432>    BSR.w JL_0_AD40
0002C74E <AmiBlitz3.ab3@14433>   MOVE.l D4,D1
0002C752 <AmiBlitz3.ab3@14434>    BSR.w JL_0_AD38
0002C756 <AmiBlitz3.ab3@14435>   MOVE.w #$C900,D1
0002C75A <AmiBlitz3.ab3@14436>    BSR.w Atokejsr
0002C75E <AmiBlitz3.ab3@14437>    BSR.w JL_0_A352
0002C764 <AmiBlitz3.ab3@14438>   MOVE.l libjsr,D1
0002C768 <AmiBlitz3.ab3@14439>    BSR.w writelong
0002C772 <AmiBlitz3.ab3@14440>   MOVE.w regnum,cfregat
0002C778 <AmiBlitz3.ab3@14441>   CLR.w regnum
0002C77A <AmiBlitz3.ab3@14442> RTS
0002C784 <AmiBlitz3.ab3@14446>   MOVE.w cfregat,regnum
0002C788 <AmiBlitz3.ab3@14447>    BSR.w JL_0_A36E
0002C78A <AmiBlitz3.ab3@14448>   MOVE.l D5,D1
0002C78E <AmiBlitz3.ab3@14449> BRA.w JL_0_AD38
0002C790 <AmiBlitz3.ab3@14453>    MOVEQ.l #-$2A,D1
0002C796 <AmiBlitz3.ab3@14454>    TST.b fpu
0002C79A <AmiBlitz3.ab3@14455>    BEQ do_equal_float__nofpu
0002C79C <AmiBlitz3.ab3@14456>    MOVEQ #0,d1
0002C7A2 <AmiBlitz3.ab3@14457>    MOVE.w regnum,d1
0002C7A4 <AmiBlitz3.ab3@14458>    MOVE.l d1,d2
0002C7A6 <AmiBlitz3.ab3@14459>    ASL.l #7,d1
0002C7A8 <AmiBlitz3.ab3@14460>    ADDQ  #1,d2
0002C7AA <AmiBlitz3.ab3@14461>    ASL.l #8,d2
0002C7AC <AmiBlitz3.ab3@14462>    ASL.l #2,d2
0002C7AE <AmiBlitz3.ab3@14463>    OR.l d2,d1
0002C7B4 <AmiBlitz3.ab3@14464>    OR.l #$f2000038,d1
0002C7BA <AmiBlitz3.ab3@14465>    JSR writelong
0002C7BE <AmiBlitz3.ab3@14466>    MOVE.w #$f240,d1
0002C7C4 <AmiBlitz3.ab3@14467>    OR.w regnum,d1
0002C7C8 <AmiBlitz3.ab3@14468>    BSR writeword
0002C7CA <AmiBlitz3.ab3@14469>    MOVEQ.l #1,d2
0002C7CE <AmiBlitz3.ab3@14470>    MOVE.w #1,d1                                            ;fpu comp fseq
0002C7D2 <AmiBlitz3.ab3@14471>    BSR writeword
0002C7D4 <AmiBlitz3.ab3@14472> RTS
0002C7D8 <AmiBlitz3.ab3@14475>    BSR.w docflib
0002C7DC <AmiBlitz3.ab3@14476>    BSR.w doeqcmp
0002C7E0 <AmiBlitz3.ab3@14477> BRA.w docflib2
0002C7E2 <AmiBlitz3.ab3@14481>   MOVEQ.l #-$2A,D1
0002C7E8 <AmiBlitz3.ab3@14482>   TST.b fpu
0002C7EC <AmiBlitz3.ab3@14483>    BEQ do_not_equal_float__nofpu
0002C7EE <AmiBlitz3.ab3@14484>    MOVEQ #0,d1
0002C7F4 <AmiBlitz3.ab3@14485>    MOVE.w regnum,d1
0002C7F6 <AmiBlitz3.ab3@14486>    MOVE.l d1,d2
0002C7F8 <AmiBlitz3.ab3@14487>    ASL.l #7,d1
0002C7FA <AmiBlitz3.ab3@14488>    ADDQ  #1,d2
0002C7FC <AmiBlitz3.ab3@14489>    ASL.l #8,d2
0002C7FE <AmiBlitz3.ab3@14490>    ASL.l #2,d2
0002C800 <AmiBlitz3.ab3@14491>    OR.l d2,d1
0002C806 <AmiBlitz3.ab3@14492>    OR.l #$f2000038,d1
0002C80C <AmiBlitz3.ab3@14493>    JSR writelong
0002C810 <AmiBlitz3.ab3@14494>    MOVE.w #$f240,d1
0002C816 <AmiBlitz3.ab3@14495>    OR.w regnum,d1
0002C81A <AmiBlitz3.ab3@14496>    BSR writeword
0002C820 <AmiBlitz3.ab3@14497>    MOVE.l #1,d2
0002C824 <AmiBlitz3.ab3@14498>    MOVE.w #$e,d1                                           ;fpu comp fsne
0002C828 <AmiBlitz3.ab3@14499>    BSR writeword
0002C82A <AmiBlitz3.ab3@14500> RTS
0002C82E <AmiBlitz3.ab3@14503>    BSR.w docflib
0002C832 <AmiBlitz3.ab3@14504>    BSR.w donecmp
0002C836 <AmiBlitz3.ab3@14505> BRA.w docflib2
0002C838 <AmiBlitz3.ab3@14509>   MOVEQ.l #-$2A,D1
0002C83E <AmiBlitz3.ab3@14510>     TST.b fpu
0002C842 <AmiBlitz3.ab3@14511>    BEQ do_littler_float__nofpu
0002C844 <AmiBlitz3.ab3@14512>    MOVEQ #0,d1
0002C84A <AmiBlitz3.ab3@14513>    MOVE.w regnum,d1
0002C84C <AmiBlitz3.ab3@14514>    MOVE.l d1,d2
0002C84E <AmiBlitz3.ab3@14515>    ASL.l #7,d1
0002C850 <AmiBlitz3.ab3@14516>    ADDQ  #1,d2
0002C852 <AmiBlitz3.ab3@14517>    ASL.l #8,d2
0002C854 <AmiBlitz3.ab3@14518>    ASL.l #2,d2
0002C856 <AmiBlitz3.ab3@14519>    OR.l d2,d1
0002C85C <AmiBlitz3.ab3@14520>    OR.l #$f2000038,d1
0002C862 <AmiBlitz3.ab3@14521>    JSR writelong
0002C866 <AmiBlitz3.ab3@14522>    MOVE.w #$f240,d1
0002C86C <AmiBlitz3.ab3@14523>    OR.w regnum,d1
0002C870 <AmiBlitz3.ab3@14524>    BSR writeword
0002C876 <AmiBlitz3.ab3@14525>    MOVE.l #$1,d2
0002C87A <AmiBlitz3.ab3@14526>    MOVE.w #$14,d1                                          ;fpu comp fslt
0002C87E <AmiBlitz3.ab3@14527>    BSR writeword
0002C880 <AmiBlitz3.ab3@14528> RTS
0002C884 <AmiBlitz3.ab3@14531>    BSR.w docflib
0002C888 <AmiBlitz3.ab3@14532>    BSR.w doltcmp
0002C88C <AmiBlitz3.ab3@14533> BRA.w docflib2
0002C88E <AmiBlitz3.ab3@14537>   MOVEQ.l #-$2A,D1
0002C894 <AmiBlitz3.ab3@14538>   TST.b fpu
0002C898 <AmiBlitz3.ab3@14539>    BEQ do_littler_equal_float__nofpu
0002C89A <AmiBlitz3.ab3@14540>    MOVEQ #0,d1
0002C8A0 <AmiBlitz3.ab3@14541>    MOVE.w regnum,d1
0002C8A2 <AmiBlitz3.ab3@14542>    MOVE.l d1,d2
0002C8A4 <AmiBlitz3.ab3@14543>    ASL.l #7,d1
0002C8A6 <AmiBlitz3.ab3@14544>    ADDQ  #1,d2
0002C8A8 <AmiBlitz3.ab3@14545>    ASL.l #8,d2
0002C8AA <AmiBlitz3.ab3@14546>    ASL.l #2,d2
0002C8AC <AmiBlitz3.ab3@14547>    OR.l d2,d1
0002C8B2 <AmiBlitz3.ab3@14548>    OR.l #$f2000038,d1
0002C8B8 <AmiBlitz3.ab3@14549>    JSR writelong
0002C8BC <AmiBlitz3.ab3@14550>    MOVE.w #$f240,d1
0002C8C2 <AmiBlitz3.ab3@14551>    OR.w regnum,d1
0002C8C6 <AmiBlitz3.ab3@14552>    BSR writeword
0002C8CC <AmiBlitz3.ab3@14553>    MOVE.l #1,d2
0002C8D0 <AmiBlitz3.ab3@14554>    MOVE.w #$15,d1                                          ;fpu comp fsle
0002C8D4 <AmiBlitz3.ab3@14555>    BSR writeword
0002C8D6 <AmiBlitz3.ab3@14556> RTS
0002C8DA <AmiBlitz3.ab3@14559>    BSR.w docflib
0002C8DE <AmiBlitz3.ab3@14560>    BSR.w dolecmp
0002C8E2 <AmiBlitz3.ab3@14561> BRA.w docflib2
0002C8E4 <AmiBlitz3.ab3@14565>   MOVEQ.l #-$2A,D1
0002C8EA <AmiBlitz3.ab3@14566>    TST.b fpu
0002C8EE <AmiBlitz3.ab3@14567>    BEQ do_greater_float__nofpu
0002C8F0 <AmiBlitz3.ab3@14568>     MOVEQ #0,d1
0002C8F6 <AmiBlitz3.ab3@14569>    MOVE.w regnum,d1
0002C8F8 <AmiBlitz3.ab3@14570>    MOVE.l d1,d2
0002C8FA <AmiBlitz3.ab3@14571>    ASL.l #7,d1
0002C8FC <AmiBlitz3.ab3@14572>    ADDQ  #1,d2
0002C8FE <AmiBlitz3.ab3@14573>    ASL.l #8,d2
0002C900 <AmiBlitz3.ab3@14574>    ASL.l #2,d2
0002C902 <AmiBlitz3.ab3@14575>    OR.l d2,d1
0002C908 <AmiBlitz3.ab3@14576>    OR.l #$f2000038,d1
0002C90E <AmiBlitz3.ab3@14577>    JSR writelong
0002C912 <AmiBlitz3.ab3@14578>    MOVE.w #$f240,d1
0002C918 <AmiBlitz3.ab3@14579>    OR.w regnum,d1
0002C91C <AmiBlitz3.ab3@14580>    BSR writeword
0002C922 <AmiBlitz3.ab3@14581>    MOVE.l #1,d2
0002C926 <AmiBlitz3.ab3@14582>    MOVE.w #$12,d1                                          ;fpu comp fsgt
0002C92A <AmiBlitz3.ab3@14583>    BSR writeword
0002C92C <AmiBlitz3.ab3@14584> RTS
0002C930 <AmiBlitz3.ab3@14587>    BSR.w docflib
0002C934 <AmiBlitz3.ab3@14588>    BSR.w dogtcmp
0002C938 <AmiBlitz3.ab3@14589> BRA.w docflib2
0002C93A <AmiBlitz3.ab3@14593>   MOVEQ.l #-$2A,D1
0002C940 <AmiBlitz3.ab3@14594>  TST.b fpu
0002C944 <AmiBlitz3.ab3@14595>    BEQ do_greater_equal_float__nofpu
0002C946 <AmiBlitz3.ab3@14596>    MOVEQ #0,d1
0002C94C <AmiBlitz3.ab3@14597>    MOVE.w regnum,d1
0002C94E <AmiBlitz3.ab3@14598>    MOVE.l d1,d2
0002C950 <AmiBlitz3.ab3@14599>    ASL.l #7,d1
0002C952 <AmiBlitz3.ab3@14600>    ADDQ  #1,d2
0002C954 <AmiBlitz3.ab3@14601>    ASL.l #8,d2
0002C956 <AmiBlitz3.ab3@14602>    ASL.l #2,d2
0002C958 <AmiBlitz3.ab3@14603>    OR.l d2,d1
0002C95E <AmiBlitz3.ab3@14604>    OR.l #$f2000038,d1
0002C964 <AmiBlitz3.ab3@14605>    JSR writelong
0002C968 <AmiBlitz3.ab3@14606>    MOVE.w #$f240,d1
0002C96E <AmiBlitz3.ab3@14607>    OR.w regnum,d1
0002C972 <AmiBlitz3.ab3@14608>    BSR writeword
0002C978 <AmiBlitz3.ab3@14609>    MOVE.l #1,d2
0002C97C <AmiBlitz3.ab3@14610>    MOVE.w #$13,d1                                          ;fpu comp fsge
0002C980 <AmiBlitz3.ab3@14611>    BSR writeword
0002C982 <AmiBlitz3.ab3@14612> RTS
0002C986 <AmiBlitz3.ab3@14615>    BSR.w docflib
0002C98A <AmiBlitz3.ab3@14616>    BSR.w dogecmp
0002C98E <AmiBlitz3.ab3@14617> BRA.w docflib2
0002C994 <AmiBlitz3.ab3@14622>   MOVE.l #$CE00,D1
0002C99A <AmiBlitz3.ab3@14623>    MOVE.l d1,lastinstruction
0002C99E <AmiBlitz3.ab3@14624>    BSR.w Atokejsr
0002C9A2 <AmiBlitz3.ab3@14625> BRA.w doeqcmp
0002C9A8 <AmiBlitz3.ab3@14629>   MOVE.l #$CE00,D1
0002C9AE <AmiBlitz3.ab3@14630>    MOVE.l d1,lastinstruction
0002C9B2 <AmiBlitz3.ab3@14631>    BSR.w Atokejsr
0002C9B6 <AmiBlitz3.ab3@14632> BRA.w donecmp
0002C9BC <AmiBlitz3.ab3@14636>   MOVE.l #$CE00,D1
0002C9C2 <AmiBlitz3.ab3@14637>    MOVE.l d1,lastinstruction
0002C9C6 <AmiBlitz3.ab3@14638>    BSR.w Atokejsr
0002C9CA <AmiBlitz3.ab3@14639> BRA.w doltcmp
0002C9D0 <AmiBlitz3.ab3@14643>   MOVE.l #$CE00,D1
0002C9D6 <AmiBlitz3.ab3@14644>    MOVE.l d1,lastinstruction
0002C9DA <AmiBlitz3.ab3@14645>    BSR.w Atokejsr
0002C9DE <AmiBlitz3.ab3@14646> BRA.w dolecmp
0002C9E4 <AmiBlitz3.ab3@14650>   MOVE.l #$CE00,D1
0002C9EA <AmiBlitz3.ab3@14651>    MOVE.l d1,lastinstruction
0002C9EE <AmiBlitz3.ab3@14652>    BSR.w Atokejsr
0002C9F2 <AmiBlitz3.ab3@14653> BRA.w dogtcmp
0002C9F8 <AmiBlitz3.ab3@14657>   MOVE.l #$CE00,D1
0002C9FE <AmiBlitz3.ab3@14658>    MOVE.l d1,lastinstruction
0002CA02 <AmiBlitz3.ab3@14659>    BSR.w Atokejsr
0002CA06 <AmiBlitz3.ab3@14660> BRA.w dogecmp
0002CA0C <AmiBlitz3.ab3@14665>   TST.b fast                                               ;compare
0002CA10 <AmiBlitz3.ab3@14666>   BEQ cmpit__org
0002CA16 <AmiBlitz3.ab3@14670>   MOVE.l destpointer,a0
0002CA1C <AmiBlitz3.ab3@14671>   SUB.l imm_addr,a0
0002CA22 <AmiBlitz3.ab3@14672>   CMP.l #6,a0
0002CA26 <AmiBlitz3.ab3@14673>   BNE cmpit__l11
0002CA2C <AmiBlitz3.ab3@14674>   MOVE.l imm_addr,a0
0002CA34 <AmiBlitz3.ab3@14675>   CMP.w #$223c,imm_addr
0002CA38 <AmiBlitz3.ab3@14676>   BNE cmpit__org
0002CA3E <AmiBlitz3.ab3@14677>   ADD.w #$8e80,-6(a4)
0002CA44 <AmiBlitz3.ab3@14680>   CLR.l imm_addr
0002CA46 <AmiBlitz3.ab3@14681> RTS
0002CA4C <AmiBlitz3.ab3@14684>   CMP.l #4,a0
0002CA50 <AmiBlitz3.ab3@14685>   BNE cmpit__l10
0002CA54 <AmiBlitz3.ab3@14686>   CMP.b #2,d3
0002CA58 <AmiBlitz3.ab3@14687>   BNE cmpit__l11b
0002CA5E <AmiBlitz3.ab3@14688>   ADD.w #$7e40,-4(a4)
0002CA60 <AmiBlitz3.ab3@14689> RTS
0002CA66 <AmiBlitz3.ab3@14692>  ADD.w #$7e00,-4(a4)
0002CA68 <AmiBlitz3.ab3@14693> RTS
0002CA6E <AmiBlitz3.ab3@14696>    MOVE.l destpointer,a0
0002CA74 <AmiBlitz3.ab3@14697>    SUB.l load_var_addr,a0
0002CA78 <AmiBlitz3.ab3@14698>    CMP.w #4,a0
0002CA7C <AmiBlitz3.ab3@14699>    BNE cmpit__org
0002CA80 <AmiBlitz3.ab3@14700>    CMP.b #3,d3
0002CA84 <AmiBlitz3.ab3@14701>    BCS cmpit__lv1
0002CA8A <AmiBlitz3.ab3@14702>    CLR.l load_var_addr
0002CA90 <AmiBlitz3.ab3@14703>    ADD.w #$9080-$200,-4(a4)
0002CA92 <AmiBlitz3.ab3@14704> RTS
0002CA96 <AmiBlitz3.ab3@14707>   CMP.b #2,d3
0002CA9A <AmiBlitz3.ab3@14708>    BNE cmpit__org
0002CAA0 <AmiBlitz3.ab3@14709>    CLR.l load_var_addr
0002CAA6 <AmiBlitz3.ab3@14710>    ADD.w #$8040-$200,-4(a4)
0002CAA8 <AmiBlitz3.ab3@14711> RTS
0002CAAE <AmiBlitz3.ab3@14714>   MOVE.w regnum,D3
0002CAB0 <AmiBlitz3.ab3@14715>   OR.w D3,D1
0002CAB2 <AmiBlitz3.ab3@14716>   LSL.w #8,D3
0002CAB4 <AmiBlitz3.ab3@14717>   LSL.w #1,D3
0002CAB6 <AmiBlitz3.ab3@14718>   OR.w D3,D1
0002CAB8 <AmiBlitz3.ab3@14719>   ADDQ.w #1,D1
0002CABC <AmiBlitz3.ab3@14720> BRA.w writeword
0002CAC0 <AmiBlitz3.ab3@14724>    BSR.w cmpit
0002CAC4 <AmiBlitz3.ab3@14727>    MOVE.w mseq(PC),D1
0002CAC8 <AmiBlitz3.ab3@14728> BRA.w cpoke
0002CACC <AmiBlitz3.ab3@14732>   BSR.w cmpit
0002CAD0 <AmiBlitz3.ab3@14735>   MOVE.w msne(PC),D1
0002CAD4 <AmiBlitz3.ab3@14736> BRA.w cpoke
0002CAD8 <AmiBlitz3.ab3@14740>   BSR.w cmpit
0002CADC <AmiBlitz3.ab3@14743>    MOVE.w mslt(PC),D1
0002CAE0 <AmiBlitz3.ab3@14744> BRA.w cpoke
0002CAE4 <AmiBlitz3.ab3@14748>    BSR.w cmpit
0002CAE8 <AmiBlitz3.ab3@14751>    MOVE.w msle(PC),D1
0002CAEC <AmiBlitz3.ab3@14752> BRA.w cpoke
0002CAF0 <AmiBlitz3.ab3@14756>    BSR.w cmpit
0002CAF4 <AmiBlitz3.ab3@14759>    MOVE.w msgt(PC),D1
0002CAF8 <AmiBlitz3.ab3@14760> BRA.w cpoke
0002CAFC <AmiBlitz3.ab3@14764>   BSR.w cmpit
0002CB00 <AmiBlitz3.ab3@14767>    MOVE.w msge(PC),D1
0002CB06 <AmiBlitz3.ab3@14770>    OR.w regnum,D1
0002CB0A <AmiBlitz3.ab3@14771>    CMP.w #5,d2
0002CB0E <AmiBlitz3.ab3@14772>    BNE cpoke__nod0
0002CB12 <AmiBlitz3.ab3@14773>    CMP.w #5,d3
0002CB16 <AmiBlitz3.ab3@14774>    BNE cpoke__nod0
0002CB18 <AmiBlitz3.ab3@14775>    MOVE.l d1,-(a7)
0002CB1E <AmiBlitz3.ab3@14776>    MOVE.l #$44004a00,d1                                    ;68k neg.b:tst.b
0002CB22 <AmiBlitz3.ab3@14777>    BSR writelong
0002CB24 <AmiBlitz3.ab3@14778>    MOVE.l (a7)+,d1
0002CB28 <AmiBlitz3.ab3@14781>    BSR.w writeword                                         ;writeseq
0002CB2A <AmiBlitz3.ab3@14782>    MOVEQ.l #1,d2
0002CB30 <AmiBlitz3.ab3@14783>    MOVE.l lasttoken,d1
0002CB36 <AmiBlitz3.ab3@14784>     TST.b fast
0002CB3A <AmiBlitz3.ab3@14785>     BEQ.s cpoke__l11
0002CB40 <AmiBlitz3.ab3@14786>    CMP.l #$800b,d1
0002CB44 <AmiBlitz3.ab3@14787>    BEQ cpoke__l10
0002CB48 <AmiBlitz3.ab3@14790>   MOVE.w #$4880,D1                                         ;ext.w D regat
0002CB4E <AmiBlitz3.ab3@14791>   OR.w regnum,D1
0002CB52 <AmiBlitz3.ab3@14792>    BSR.w writeword                                         ;writeext.w
0002CB54 <AmiBlitz3.ab3@14793>   MOVEQ.l #$02,D2                                          ;type now WORD!
0002CB56 <AmiBlitz3.ab3@14796> RTS
0002CB5A <AmiBlitz3.ab3@14801>   MOVE.w #$D040,D1
0002CB5C <AmiBlitz3.ab3@14802>   MOVEQ.l #$02,D2                                          ;writeaddword   ;now a word
0002CB60 <AmiBlitz3.ab3@14803> BRA.w doplus2
0002CB64 <AmiBlitz3.ab3@14807>   MOVE.w #$D040,D1
0002CB66 <AmiBlitz3.ab3@14808>   MOVEQ.l #$03,D2                                          ;now a long
0002CB6A <AmiBlitz3.ab3@14809>    BSR.w doplus2
0002CB6E <AmiBlitz3.ab3@14810> BRA.w convert_word_to_long
0002CB72 <AmiBlitz3.ab3@14814>   MOVE.w #$D080,D1                                         ;writeaddlong
0002CB74 <AmiBlitz3.ab3@14817>   MOVE.w d1,a1
0002CB7A <AmiBlitz3.ab3@14818>   TST.b fast
0002CB7E <AmiBlitz3.ab3@14819>   BEQ doplus2__l10
0002CB80 <AmiBlitz3.ab3@14823>   ASR.w #8,d1
0002CB84 <AmiBlitz3.ab3@14824>   CMP.b #$90,d1
0002CB88 <AmiBlitz3.ab3@14825>   BEQ doplus2__sub1
0002CB8C <AmiBlitz3.ab3@14826>   CMP.b #$d0,d1
0002CB90 <AmiBlitz3.ab3@14827>   BNE doplus2__l10
0002CB94 <AmiBlitz3.ab3@14828>   CMP.b #3,d3
0002CB98 <AmiBlitz3.ab3@14829>   BCS doplus2__lq10
0002CB9E <AmiBlitz3.ab3@14830>   TST.b quickadd
0002CBA4 <AmiBlitz3.ab3@14834>    MOVE.l destpointer,a0
0002CBAA <AmiBlitz3.ab3@14835>    CLR.b quickadd
0002CBB0 <AmiBlitz3.ab3@14836>    CLR.l load_var_addr
0002CBB6 <AmiBlitz3.ab3@14837>    SUB.l imm_addr,a0
0002CBBA <AmiBlitz3.ab3@14838>    CMP.w #6,a0
0002CBBE <AmiBlitz3.ab3@14839>    BEQ doplus2__li10
0002CBC2 <AmiBlitz3.ab3@14840>    CMP.w #4,a0
0002CBC6 <AmiBlitz3.ab3@14841>    BNE.s doplus2__li1
0002CBCC <AmiBlitz3.ab3@14842>    CLR.l imm_addr
0002CBD2 <AmiBlitz3.ab3@14843>    ADD.w #$a040-$200,-4(a4)
0002CBD4 <AmiBlitz3.ab3@14844> RTS
0002CBD6 <AmiBlitz3.ab3@14847>    MOVE.l a4,a0
0002CBDC <AmiBlitz3.ab3@14848>    SUB.l load_var_addr,a0
0002CBE2 <AmiBlitz3.ab3@14849>    CMP.l #$a,a0
0002CBE6 <AmiBlitz3.ab3@14850>    BNE doplus2__l10e
0002CBEC <AmiBlitz3.ab3@14851>    CLR.l load_var_addr
0002CBF0 <AmiBlitz3.ab3@14852>    MOVE.w -$8(a4),d1
0002CBF6 <AmiBlitz3.ab3@14853>    MOVE.l -$4(a4),-$8(a4)
0002CBFA <AmiBlitz3.ab3@14854>    MOVE.w d1,-$4(a4)
0002CC00 <AmiBlitz3.ab3@14855>    SUB.w #$1980,-$a(a4)
0002CC06 <AmiBlitz3.ab3@14856>    SUBQ.l #2,destpointer
0002CC08 <AmiBlitz3.ab3@14857> RTS
0002CC0E <AmiBlitz3.ab3@14860>   CLR.b quickadd
0002CC12 <AmiBlitz3.ab3@14861> BRA doplus2__l10
0002CC18 <AmiBlitz3.ab3@14864>    CLR.l imm_addr
0002CC1C <AmiBlitz3.ab3@14865>    TST.l -4(a4)                                            ;skip If ADD.l #0,dx
0002CC20 <AmiBlitz3.ab3@14866>    BNE doplus2__doit
0002CC26 <AmiBlitz3.ab3@14867>    SUBQ.l #6,destpointer
0002CC28 <AmiBlitz3.ab3@14868> RTS
0002CC2E <AmiBlitz3.ab3@14871>    ADD.w #$b080-$200,-6(a4)
0002CC30 <AmiBlitz3.ab3@14872> RTS
0002CC36 <AmiBlitz3.ab3@14875>    MOVE.l destpointer,a0
0002CC3C <AmiBlitz3.ab3@14876>    SUB.l load_var_addr,a0
0002CC40 <AmiBlitz3.ab3@14877>    CMP.w #4,a0
0002CC44 <AmiBlitz3.ab3@14878>    BNE doplus2__l10
0002CC48 <AmiBlitz3.ab3@14879>    CMP.b #3,d3
0002CC4C <AmiBlitz3.ab3@14880>    BNE doplus2__lv1
0002CC52 <AmiBlitz3.ab3@14881>    CLR.l load_var_addr
0002CC58 <AmiBlitz3.ab3@14882>    ADD.w #$b080-$200,-4(a4)
0002CC5A <AmiBlitz3.ab3@14883> RTS
0002CC5E <AmiBlitz3.ab3@14886>   CMP.b #2,d3
0002CC62 <AmiBlitz3.ab3@14887>   BNE doplus2__l10
0002CC68 <AmiBlitz3.ab3@14888>   CLR.l load_var_addr
0002CC6E <AmiBlitz3.ab3@14889>   ADD.w #$a040-$200,-4(a4)
0002CC70 <AmiBlitz3.ab3@14890> RTS
0002CC76 <AmiBlitz3.ab3@14893>   MOVE.w regnum,D3
0002CC78 <AmiBlitz3.ab3@14894>   MOVE.w a1,d1
0002CC7A <AmiBlitz3.ab3@14895>   OR.w D3,D1
0002CC7C <AmiBlitz3.ab3@14896>   ADDQ.w #1,D1
0002CC7E <AmiBlitz3.ab3@14897>   LSL.w #8,D3
0002CC80 <AmiBlitz3.ab3@14898>   LSL.w #1,D3
0002CC82 <AmiBlitz3.ab3@14899>   OR.w D3,D1
0002CC86 <AmiBlitz3.ab3@14900> BRA.w writeword
0002CC8A <AmiBlitz3.ab3@14903>    CMP.b #3,d3
0002CC8E <AmiBlitz3.ab3@14904>    BCS doplus2__sub1_lq10
0002CC94 <AmiBlitz3.ab3@14905>    TST.b quickadd
0002CC9A <AmiBlitz3.ab3@14909>    MOVE.l destpointer,a0
0002CCA0 <AmiBlitz3.ab3@14910>    CLR.b quickadd
0002CCA6 <AmiBlitz3.ab3@14911>    CLR.l load_var_addr
0002CCAC <AmiBlitz3.ab3@14912>    SUB.l imm_addr,a0
0002CCB0 <AmiBlitz3.ab3@14913>    CMP.w #6,a0
0002CCB4 <AmiBlitz3.ab3@14914>    BEQ doplus2__sub1_li10
0002CCB8 <AmiBlitz3.ab3@14915>    CMP.w #4,a0
0002CCBC <AmiBlitz3.ab3@14916>    BNE.s doplus2__sub1_li1
0002CCC2 <AmiBlitz3.ab3@14917>    CLR.l imm_addr
0002CCC8 <AmiBlitz3.ab3@14918>    ADD.w #$6040-$200,-4(a4)
0002CCCA <AmiBlitz3.ab3@14919> RTS
0002CCCC <AmiBlitz3.ab3@14922>    MOVE.l a4,a0
0002CCD2 <AmiBlitz3.ab3@14923>     SUB.l load_var_addr,a0
0002CCD8 <AmiBlitz3.ab3@14924>     CMP.l #$a,a0
0002CCDC <AmiBlitz3.ab3@14925>     BNE doplus2__sub1_l10e
0002CCE2 <AmiBlitz3.ab3@14926>    CLR.l load_var_addr
0002CCE6 <AmiBlitz3.ab3@14927>    MOVE.w -$8(a4),d1
0002CCEC <AmiBlitz3.ab3@14928>    MOVE.l -$4(a4),-$8(a4)
0002CCF0 <AmiBlitz3.ab3@14929>    MOVE.w d1,-$4(a4)
0002CCF6 <AmiBlitz3.ab3@14930>    SUB.w #$1b80,-$a(a4)
0002CCFC <AmiBlitz3.ab3@14931>    SUBQ.l #2,destpointer
0002CCFE <AmiBlitz3.ab3@14932> RTS
0002CD04 <AmiBlitz3.ab3@14935>   CLR.b quickadd
0002CD08 <AmiBlitz3.ab3@14936> BRA doplus2__sub1_l10
0002CD0E <AmiBlitz3.ab3@14939>    CLR.l imm_addr
0002CD14 <AmiBlitz3.ab3@14940>    ADD.w #$7080-$200,-6(a4)
0002CD16 <AmiBlitz3.ab3@14941> RTS
0002CD1C <AmiBlitz3.ab3@14944>    MOVE.l destpointer,a0
0002CD22 <AmiBlitz3.ab3@14945>    SUB.l load_var_addr,a0
0002CD26 <AmiBlitz3.ab3@14946>    CMP.w #4,a0
0002CD2A <AmiBlitz3.ab3@14947>    BNE doplus2__sub1_l10
0002CD2E <AmiBlitz3.ab3@14948>    CMP.b #3,d3
0002CD32 <AmiBlitz3.ab3@14949>    BNE doplus2__sub1_lv1
0002CD38 <AmiBlitz3.ab3@14950>    CLR.l load_var_addr
0002CD3E <AmiBlitz3.ab3@14951>    ADD.w #$7080-$200,-4(a4)
0002CD40 <AmiBlitz3.ab3@14952> RTS
0002CD44 <AmiBlitz3.ab3@14955>    CMP.b #2,d3
0002CD48 <AmiBlitz3.ab3@14956>    BNE doplus2__sub1_l10
0002CD4E <AmiBlitz3.ab3@14957>    CLR.l load_var_addr
0002CD54 <AmiBlitz3.ab3@14958>    ADD.w #$6040-$200,-4(a4)
0002CD56 <AmiBlitz3.ab3@14959> RTS
0002CD5C <AmiBlitz3.ab3@14962>   MOVE.w regnum,D3
0002CD5E <AmiBlitz3.ab3@14963>   MOVE.w a1,d1
0002CD60 <AmiBlitz3.ab3@14964>   OR.w D3,D1
0002CD62 <AmiBlitz3.ab3@14965>   ADDQ.w #1,D1
0002CD64 <AmiBlitz3.ab3@14966>   LSL.w #8,D3
0002CD66 <AmiBlitz3.ab3@14967>   LSL.w #1,D3
0002CD68 <AmiBlitz3.ab3@14968>   OR.w D3,D1
0002CD6C <AmiBlitz3.ab3@14969> BRA.w writeword
0002CD6E <AmiBlitz3.ab3@14973>   MOVEQ #0,d0
0002CD74 <AmiBlitz3.ab3@14974>   MOVE.w regnum,d0
0002CD76 <AmiBlitz3.ab3@14975>   ADDQ #1,d0
0002CD78 <AmiBlitz3.ab3@14976>   ASL.w #8,d0
0002CD7A <AmiBlitz3.ab3@14977>   ASL.w #2,d0
0002CD80 <AmiBlitz3.ab3@14978>   MOVE.l #$f2000022,d1                                     ;fpu add
0002CD82 <AmiBlitz3.ab3@14979>   OR.l d0,d1
0002CD88 <AmiBlitz3.ab3@14980>   MOVE.w regnum,d0
0002CD8A <AmiBlitz3.ab3@14981>   ASL.w #7,d0
0002CD8C <AmiBlitz3.ab3@14982>   OR.l d0,d1
0002CD90 <AmiBlitz3.ab3@14983> BRA.w writelong
0002CD96 <AmiBlitz3.ab3@14989>   TST.b iee
0002CD9A <AmiBlitz3.ab3@14990>   BNE do_plus_float__fadd1
0002CD9E <AmiBlitz3.ab3@14991>   MOVE.w #$FFBE,D1                                         ;#-66,d1 org soruce ;floatadd
0002CDA4 <AmiBlitz3.ab3@14994>    MOVE.w D1,libjsr+2
0002CDA8 <AmiBlitz3.ab3@14995>    BSR.w JL_0_AD40
0002CDAA <AmiBlitz3.ab3@14996>   MOVE.l D4,D1
0002CDAE <AmiBlitz3.ab3@14997>    BSR.w JL_0_AD38
0002CDB2 <AmiBlitz3.ab3@14998>   MOVE.w #$C900,D1
0002CDB6 <AmiBlitz3.ab3@14999>    BSR.w Atokejsr
0002CDBA <AmiBlitz3.ab3@15000>    BSR.w JL_0_A352
0002CDC0 <AmiBlitz3.ab3@15001>   MOVE.l libjsr,D1
0002CDC4 <AmiBlitz3.ab3@15002>    BSR.w writelong
0002CDC8 <AmiBlitz3.ab3@15003>    BSR.w JL_0_A36E
0002CDCA <AmiBlitz3.ab3@15004>   MOVE.l D5,D1
0002CDCE <AmiBlitz3.ab3@15005> BRA.w JL_0_AD38
0002CDD4 <AmiBlitz3.ab3@15009>   MOVE.w regnum,D1
0002CDD6 <AmiBlitz3.ab3@15010>   LSL.w #8,D1
0002CDD8 <AmiBlitz3.ab3@15011>   LSL.w #1,D1
0002CDDA <AmiBlitz3.ab3@15012>   MOVE.w D1,-(A7)
0002CDDE <AmiBlitz3.ab3@15013>   CMP.w #3072,d1
0002CDE2 <AmiBlitz3.ab3@15014>   BEQ 'l1
0002CDE8 <AmiBlitz3.ab3@15015>   OR.w addcode,D1                                          ;move.l (a7)+,d0
0002CDEC <AmiBlitz3.ab3@15016> BRA 'l2
0002CDF0 <AmiBlitz3.ab3@15019>    MOVE.w #$588f,d1                                        ;addq.l #4,a7
0002CDF4 <AmiBlitz3.ab3@15022>    BSR.w writeword
0002CDF6 <AmiBlitz3.ab3@15023>   MOVE.w (A7)+,D1
0002CDFC <AmiBlitz3.ab3@15024>   OR.w addcode+2,D1                                        ;native string add.l d0,(a7)
0002CE00 <AmiBlitz3.ab3@15025> BRA.w writeword
0002CE04 <AmiBlitz3.ab3@15031>   MOVE.w #$9040,D1
0002CE08 <AmiBlitz3.ab3@15032> BRA.w doplus2
0002CE0C <AmiBlitz3.ab3@15036>   MOVE.w #$9040,D1
0002CE10 <AmiBlitz3.ab3@15037> BRA.w doplus2
0002CE14 <AmiBlitz3.ab3@15041>   MOVE.w #$9080,D1
0002CE18 <AmiBlitz3.ab3@15042> BRA.w doplus2
0002CE1E <AmiBlitz3.ab3@15046>    TST.b iee
0002CE22 <AmiBlitz3.ab3@15047>     BNE do_minus_float__fs1
0002CE26 <AmiBlitz3.ab3@15048>   MOVE.w #$FFB8,D1                                         ;floatsub
0002CE2A <AmiBlitz3.ab3@15049> BRA.w doflib
0002CE2C <AmiBlitz3.ab3@15052>   MOVEQ #0,d0
0002CE32 <AmiBlitz3.ab3@15053>   MOVE.w regnum,d0
0002CE34 <AmiBlitz3.ab3@15054>   ADDQ #1,d0
0002CE36 <AmiBlitz3.ab3@15055>   ASL.w #8,d0
0002CE38 <AmiBlitz3.ab3@15056>   ASL.w #2,d0
0002CE3E <AmiBlitz3.ab3@15057>   MOVE.l #$f2000028,d1
0002CE40 <AmiBlitz3.ab3@15058>   OR.l d0,d1
0002CE46 <AmiBlitz3.ab3@15059>   MOVE.w regnum,d0
0002CE48 <AmiBlitz3.ab3@15060>   ASL.w #7,d0
0002CE4A <AmiBlitz3.ab3@15061>   OR.l d0,d1
0002CE4E <AmiBlitz3.ab3@15062> BRA.w writelong
0002CE52 <AmiBlitz3.ab3@15068>   MOVE.w #$C1C0,D1
0002CE54 <AmiBlitz3.ab3@15069>   MOVEQ.l #$02,D2                                          ;now a word
0002CE58 <AmiBlitz3.ab3@15070> BRA.w doplus2
0002CE5C <AmiBlitz3.ab3@15074>   MOVE.w #$C1C0,D1
0002CE5E <AmiBlitz3.ab3@15075>   MOVEQ.l #$03,D2                                          ;now a long.
0002CE62 <AmiBlitz3.ab3@15076> BRA.w doplus2
0002CE66 <AmiBlitz3.ab3@15080>   MOVE.w #$CA00,D1                                         ;quickmul
0002CE6A <AmiBlitz3.ab3@15081> BRA.w domylib
0002CE70 <AmiBlitz3.ab3@15085>   TST.b fast
0002CE74 <AmiBlitz3.ab3@15086>   BNE.s 'l10
0002CE78 <AmiBlitz3.ab3@15087>   MOVE.w #$CA01,D1                                         ;writelongmul
0002CE7C <AmiBlitz3.ab3@15088> BRA.w domylib
0002CE82 <AmiBlitz3.ab3@15097>    MOVE.l destpointer,a0
0002CE88 <AmiBlitz3.ab3@15098>    SUB.l imm_addr,a0
0002CE8C <AmiBlitz3.ab3@15099>    CMP.w #6,a0
0002CE90 <AmiBlitz3.ab3@15100>    BNE 'li1
0002CE92 <AmiBlitz3.ab3@15101>    MOVEQ.l #2,d1
0002CE94 <AmiBlitz3.ab3@15102>    MOVEQ #1,d3
0002CE98 <AmiBlitz3.ab3@15105>   CMP.l -4(a4),d1
0002CE9C <AmiBlitz3.ab3@15106>    BEQ 'oklsl
0002CE9E <AmiBlitz3.ab3@15107>     LSL.l #1,d1
0002CEA4 <AmiBlitz3.ab3@15108>     ADD.l #1,d3
0002CEAA <AmiBlitz3.ab3@15109>     CMP.l #9,d3
0002CEAE <AmiBlitz3.ab3@15110>     BNE 'ag
0002CEB2 <AmiBlitz3.ab3@15111>    MOVE.w -2(a4),d1
0002CEB6 <AmiBlitz3.ab3@15112>    BSR writeword
0002CEBC <AmiBlitz3.ab3@15113>    MOVE.w -6(a4),-4(a4)
0002CEC4 <AmiBlitz3.ab3@15114>    MOVE.l #$4c3c0800,-8(a4)
0002CECA <AmiBlitz3.ab3@15115>    MOVE.w regnum,D3
0002CECE <AmiBlitz3.ab3@15116>    MULS #$1000,D3
0002CED2 <AmiBlitz3.ab3@15117>    OR.w D3,-6(a4)
0002CED8 <AmiBlitz3.ab3@15118>    CLR.l load_var_addr
0002CEDE <AmiBlitz3.ab3@15119>    CLR.l imm_addr
0002CEE2 <AmiBlitz3.ab3@15120> BRA 'li3
0002CEE6 <AmiBlitz3.ab3@15123>    CMP.w #8,d3
0002CEEA <AmiBlitz3.ab3@15124>    BEQ 'ok
0002CEEC <AmiBlitz3.ab3@15125>    ASL.l #1,d3
0002CEEE <AmiBlitz3.ab3@15126>    ASL.l #8,d3
0002CEF2 <AmiBlitz3.ab3@15127>    MOVE.w #$e188,d1
0002CEF4 <AmiBlitz3.ab3@15128>    OR.w d3,d1
0002CEF8 <AmiBlitz3.ab3@15129>    MOVE.w d1,-6(a4)
0002CEFC <AmiBlitz3.ab3@15130> BRA 'okls
0002CF02 <AmiBlitz3.ab3@15133>   MOVE.w #$e188,-6(a4)                                     ;lsl.l #,dx
0002CF08 <AmiBlitz3.ab3@15136>   MOVE.w regnum,d3
0002CF0C <AmiBlitz3.ab3@15137>    OR.b d3,-5(a4)
0002CF12 <AmiBlitz3.ab3@15138>    SUBQ.l #4,destpointer
0002CF18 <AmiBlitz3.ab3@15139>    CLR.l load_var_addr
0002CF1E <AmiBlitz3.ab3@15140>    CLR.l imm_addr
0002CF22 <AmiBlitz3.ab3@15141> BRA 'li3
0002CF28 <AmiBlitz3.ab3@15144>    MOVE.l destpointer,a0
0002CF2E <AmiBlitz3.ab3@15145>    SUB.l load_var_addr,a0
0002CF32 <AmiBlitz3.ab3@15146>    CMP.w #4,a0
0002CF36 <AmiBlitz3.ab3@15147>    BNE 'li2
0002CF3A <AmiBlitz3.ab3@15148>    MOVE.w -2(a4),d1
0002CF3E <AmiBlitz3.ab3@15149>    BSR writeword
0002CF44 <AmiBlitz3.ab3@15150>    MOVE.b #$4c,-6(a4)
0002CF4A <AmiBlitz3.ab3@15151>    MOVE.w #$0800,-4(a4)
0002CF50 <AmiBlitz3.ab3@15152>    MOVE.w regnum,D3
0002CF54 <AmiBlitz3.ab3@15153>    MULS #$1000,d3
0002CF58 <AmiBlitz3.ab3@15154>    OR.w D3,-4(a4)
0002CF5C <AmiBlitz3.ab3@15155> BRA 'li3
0002CF62 <AmiBlitz3.ab3@15158>    MOVE.l #$4c010800,d1
0002CF68 <AmiBlitz3.ab3@15159>    MOVE.w regnum,D3
0002CF6A <AmiBlitz3.ab3@15160>    EXT.l d3
0002CF6E <AmiBlitz3.ab3@15161>    MULS #$1000,d3
0002CF70 <AmiBlitz3.ab3@15162>    OR.w D3,d1
0002CF74 <AmiBlitz3.ab3@15163>    MULS #$10,d3
0002CF76 <AmiBlitz3.ab3@15164>    ADD.l d3,d1
0002CF7A <AmiBlitz3.ab3@15165>    BSR writelong
0002CF7C <AmiBlitz3.ab3@15170> RTS
0002CF7E <AmiBlitz3.ab3@15174>   MOVE.w D1,-(A7)
0002CF82 <AmiBlitz3.ab3@15175>    BSR.w JL_0_AD40
0002CF84 <AmiBlitz3.ab3@15176>   MOVE.l D4,D1
0002CF88 <AmiBlitz3.ab3@15177>    BSR.w JL_0_AD38
0002CF8C <AmiBlitz3.ab3@15178>    BSR.w JL_0_A352
0002CF8E <AmiBlitz3.ab3@15179>   MOVEQ #0,d1
0002CF90 <AmiBlitz3.ab3@15180>   MOVE.w (A7)+,D1
0002CF96 <AmiBlitz3.ab3@15181>   MOVE.l d1,lastinstruction
0002CF9A <AmiBlitz3.ab3@15182>    BSR.w Atokejsr
0002CF9E <AmiBlitz3.ab3@15183>    BSR.w JL_0_A36E
0002CFA0 <AmiBlitz3.ab3@15184>   MOVE.l D5,D1
0002CFA4 <AmiBlitz3.ab3@15185> BRA.w JL_0_AD38
0002CFAA <AmiBlitz3.ab3@15189>    TST.b iee
0002CFAE <AmiBlitz3.ab3@15190>     BNE fm1
0002CFB2 <AmiBlitz3.ab3@15191>  MOVE.w #$FFB2,D1                                          ;floatmul
0002CFB6 <AmiBlitz3.ab3@15192> BRA.w doflib
0002CFB8 <AmiBlitz3.ab3@15195>   MOVEQ #0,d0
0002CFBE <AmiBlitz3.ab3@15196>  MOVE.w regnum,d0
0002CFC0 <AmiBlitz3.ab3@15197>  ADDQ #1,d0
0002CFC2 <AmiBlitz3.ab3@15198>  ASL.w #8,d0
0002CFC4 <AmiBlitz3.ab3@15199>  ASL.w #2,d0
0002CFCA <AmiBlitz3.ab3@15200>  MOVE.l #$f2000023,d1
0002CFCC <AmiBlitz3.ab3@15201>  OR.l d0,d1
0002CFD2 <AmiBlitz3.ab3@15202>  MOVE.w regnum,d0
0002CFD4 <AmiBlitz3.ab3@15203>  ASL.w #7,d0
0002CFD6 <AmiBlitz3.ab3@15204>  OR.l d0,d1
0002CFDA <AmiBlitz3.ab3@15205> BRA.w writelong
0002CFDC <AmiBlitz3.ab3@15209>   MOVE.w D2,-(A7)                                          ;dopow
0002CFDE <AmiBlitz3.ab3@15210>   MOVE.w D2,D3
0002CFE0 <AmiBlitz3.ab3@15211>   MOVEQ.l #$05,D2
0002CFE4 <AmiBlitz3.ab3@15212>    BSR.w JL_0_9770
0002CFEA <AmiBlitz3.ab3@15213>   ADDQ.w #1,regnum
0002CFEC <AmiBlitz3.ab3@15214>   MOVE.w (A7)+,D3
0002CFEE <AmiBlitz3.ab3@15215>   MOVEQ.l #$05,D2
0002CFF2 <AmiBlitz3.ab3@15216>    BSR.w writeconvertcode
0002CFF8 <AmiBlitz3.ab3@15217>   SUBQ.w #1,regnum
0002CFFC <AmiBlitz3.ab3@15218>    BSR.w nocando
0002D002 <AmiBlitz3.ab3@15219>    TST.b fpu
0002D006 <AmiBlitz3.ab3@15220>    BEQ 'old
0002D008 <AmiBlitz3.ab3@15221>    MOVEQ #0,d1
0002D00E <AmiBlitz3.ab3@15222>    MOVE.w regnum,d1
0002D010 <AmiBlitz3.ab3@15223>   MOVE.l d1,d0
0002D012 <AmiBlitz3.ab3@15224>   ASL.w #7,d1
0002D014 <AmiBlitz3.ab3@15225>   ASL.w #8,d0
0002D016 <AmiBlitz3.ab3@15226>   ASL.w #2,d0
0002D018 <AmiBlitz3.ab3@15227>   OR.w d0,d1
0002D01A <AmiBlitz3.ab3@15228>   MOVE.l d1,-(a7)
0002D020 <AmiBlitz3.ab3@15230>    OR.l #$f2000016,d1                                       ;flog2.x fp0      ;fpu ^ pow
0002D024 <AmiBlitz3.ab3@15231>    BSR writelong
0002D02A <AmiBlitz3.ab3@15232>    MOVE.w regnum,d0
0002D02C <AmiBlitz3.ab3@15233>  ADDQ #1,d0
0002D02E <AmiBlitz3.ab3@15234>  ASL.w #8,d0
0002D030 <AmiBlitz3.ab3@15235>  ASL.w #2,d0
0002D036 <AmiBlitz3.ab3@15236>  MOVE.l #$f2000023,d1
0002D038 <AmiBlitz3.ab3@15237>  OR.l d0,d1
0002D03E <AmiBlitz3.ab3@15238>  MOVE.w regnum,d0
0002D040 <AmiBlitz3.ab3@15239>  ASL.w #7,d0
0002D042 <AmiBlitz3.ab3@15240>  OR.l d0,d1
0002D048 <AmiBlitz3.ab3@15241>    OR.l #$f2000023,d1                                      ;fmulx.x fp1,fp0
0002D04C <AmiBlitz3.ab3@15242>    BSR writelong
0002D04E <AmiBlitz3.ab3@15243>    MOVE.l (a7)+,d1
0002D054 <AmiBlitz3.ab3@15245>    OR.l #$f2000011,d1                                      ;ftwotox.x fp0
0002D058 <AmiBlitz3.ab3@15246>    BSR writelong
0002D05A <AmiBlitz3.ab3@15247> RTS
0002D05E <AmiBlitz3.ab3@15250>   MOVE.w #$6001,D1
0002D062 <AmiBlitz3.ab3@15251> BRA.w domylib
0002D066 <AmiBlitz3.ab3@15257>   MOVEA.l forthsp(PC),A0
0002D06A <AmiBlitz3.ab3@15258>   MOVE.w #$FFFF,-(A0)                                      ;#-1,-(a0) org source
0002D06C <AmiBlitz3.ab3@15259> RTS
0002D070 <AmiBlitz3.ab3@15265>   MOVE.w #$D400,D1
0002D074 <AmiBlitz3.ab3@15266> BRA.w domylib
0002D078 <AmiBlitz3.ab3@15270>   MOVE.w #$D401,D1
0002D07C <AmiBlitz3.ab3@15271> BRA.w domylib
0002D080 <AmiBlitz3.ab3@15275>    BSR.w nocando                                           ;modlib uses an alibjsr here!
0002D084 <AmiBlitz3.ab3@15276>   MOVE.w #$D402,D1
0002D088 <AmiBlitz3.ab3@15277> BRA.w domylib
0002D08C <AmiBlitz3.ab3@15281>   MOVE.w #$D403,D1
0002D08E <AmiBlitz3.ab3@15282>   MOVEQ.l #$02,D2                                          ;now a word.
0002D092 <AmiBlitz3.ab3@15283> BRA.w domylib
0002D096 <AmiBlitz3.ab3@15287>    BSR.w nocando                                           ;modlib lib uses an alibjsr!  ;domod float
0002D09C <AmiBlitz3.ab3@15288>   TST.b fpu
0002D0A0 <AmiBlitz3.ab3@15289>   BEQ 'old
0002D0A2 <AmiBlitz3.ab3@15290>   MOVEQ #0,d1
0002D0A8 <AmiBlitz3.ab3@15291>   MOVE.w regnum,d1                                         ;fpu mod
0002D0AA <AmiBlitz3.ab3@15292>   MOVE.l d1,d0
0002D0AC <AmiBlitz3.ab3@15293>   ADDQ.l #1,d1
0002D0AE <AmiBlitz3.ab3@15294>   ASL.l #7,d0
0002D0B0 <AmiBlitz3.ab3@15295>   ASL.l #8,d1
0002D0B2 <AmiBlitz3.ab3@15296>   ASL.l #2,d1
0002D0B4 <AmiBlitz3.ab3@15297>   OR.l d0,d1
0002D0B6 <AmiBlitz3.ab3@15298>   MOVE.l d0,-(a7)
0002D0BC <AmiBlitz3.ab3@15299>   OR.l #$f2000021,d1
0002D0C0 <AmiBlitz3.ab3@15300>   BSR writelong
0002D0C2 <AmiBlitz3.ab3@15301>   MOVE.l (a7)+,d0
0002D0C4 <AmiBlitz3.ab3@15302>  RTS
0002D0C8 <AmiBlitz3.ab3@15305>   MOVE.w #$D404,D1
0002D0CA <AmiBlitz3.ab3@15306>   MOVEQ.l #$03,D2                                          ;now a long
0002D0CE <AmiBlitz3.ab3@15307> BRA.w domylib
0002D0D2 <AmiBlitz3.ab3@15315>   MOVE.w #$48C0,D1
0002D0D8 <AmiBlitz3.ab3@15316>   OR.w regnum,D1
0002D0DC <AmiBlitz3.ab3@15317>    BSR.w writeword
0002D0DE <AmiBlitz3.ab3@15318>   ADDQ.w #1,D1
0002D0E2 <AmiBlitz3.ab3@15319>    BSR.w writeword
0002D0E6 <AmiBlitz3.ab3@15322>    MOVE.w #$48C0,D1
0002D0EC <AmiBlitz3.ab3@15323>   OR.w regnum,D1
0002D0F0 <AmiBlitz3.ab3@15324>    BSR.w writeword
0002D0F4 <AmiBlitz3.ab3@15325>   MOVE.w #$81C0,D1
0002D0F8 <AmiBlitz3.ab3@15326> BRA.w doplus2
0002D0FE <AmiBlitz3.ab3@15330>   TST.b fast
0002D102 <AmiBlitz3.ab3@15331>   BNE.s 'l10
0002D106 <AmiBlitz3.ab3@15332>   MOVE.w #$CB01,D1
0002D10A <AmiBlitz3.ab3@15333> BRA.w domylib
0002D10E <AmiBlitz3.ab3@15339>   BSR.w JL_0_AD40
0002D110 <AmiBlitz3.ab3@15340>   MOVE.l D4,D1
0002D114 <AmiBlitz3.ab3@15341>    BSR.w JL_0_AD38
0002D118 <AmiBlitz3.ab3@15342>    BSR.w JL_0_A352
0002D11E <AmiBlitz3.ab3@15356>    MOVE.l #$4c410800,d1
0002D122 <AmiBlitz3.ab3@15357>    BSR writelong
0002D126 <AmiBlitz3.ab3@15360>   MOVE.w #$4e71,d1
0002D12A <AmiBlitz3.ab3@15362>    BSR.w JL_0_A36E
0002D12C <AmiBlitz3.ab3@15363>   MOVE.l D5,D1
0002D130 <AmiBlitz3.ab3@15364> BRA.w JL_0_AD38
0002D134 <AmiBlitz3.ab3@15367>     CMP.w #8,d3
0002D138 <AmiBlitz3.ab3@15368>     BEQ 'ok
0002D13A <AmiBlitz3.ab3@15369>     ASL.l #1,d3
0002D13C <AmiBlitz3.ab3@15370>     ASL.l #8,d3
0002D140 <AmiBlitz3.ab3@15371>     MOVE.w #$e080,d1
0002D142 <AmiBlitz3.ab3@15372>     OR.w d3,d1
0002D146 <AmiBlitz3.ab3@15373> BRA 'oklsr2
0002D14A <AmiBlitz3.ab3@15376>   MOVE.w #$e080,d1                                         ;lsr.l #,dx
0002D150 <AmiBlitz3.ab3@15379>      SUBQ.l #6,destpointer
0002D154 <AmiBlitz3.ab3@15380>      BSR writeword
0002D156 <AmiBlitz3.ab3@15381>      MOVE.l (a7)+,d3
0002D158 <AmiBlitz3.ab3@15382>      MOVEQ #0,d1
0002D15E <AmiBlitz3.ab3@15383>      CLR.l load_var_addr
0002D164 <AmiBlitz3.ab3@15384>      CLR.l imm_addr
0002D168 <AmiBlitz3.ab3@15385> BRA JL_0_AD38
0002D16C <AmiBlitz3.ab3@15389>   MOVE.w #$CB00,D1                                         ;quickdiv
0002D170 <AmiBlitz3.ab3@15390> BRA.w domylib
0002D176 <AmiBlitz3.ab3@15394>    TST.b iee
0002D17A <AmiBlitz3.ab3@15395>    BNE fdiv1
0002D17E <AmiBlitz3.ab3@15396>    MOVE.w #$FFAC,D1                                        ;floatdiv
0002D182 <AmiBlitz3.ab3@15397> BRA.w doflib
0002D184 <AmiBlitz3.ab3@15401>   MOVEQ #0,d0
0002D18A <AmiBlitz3.ab3@15402>   MOVE.w regnum,d0
0002D18C <AmiBlitz3.ab3@15403>   ADDQ #1,d0
0002D18E <AmiBlitz3.ab3@15404>   ASL.w #8,d0
0002D190 <AmiBlitz3.ab3@15405>   ASL.w #2,d0
0002D196 <AmiBlitz3.ab3@15406>   MOVE.l #$f2000020,d1                                     ;fpu div
0002D198 <AmiBlitz3.ab3@15407>   OR.l d0,d1
0002D19E <AmiBlitz3.ab3@15408>   MOVE.w regnum,d0
0002D1A0 <AmiBlitz3.ab3@15409>   ASL.w #7,d0
0002D1A2 <AmiBlitz3.ab3@15410>   OR.l d0,d1
0002D1A6 <AmiBlitz3.ab3@15411> BRA.w writelong
0002D1AA <AmiBlitz3.ab3@15415>   MOVE.w #$C000,D1
0002D1AE <AmiBlitz3.ab3@15416> BRA.w doplus2
0002D1B2 <AmiBlitz3.ab3@15420>   MOVE.w #$C040,D1
0002D1B6 <AmiBlitz3.ab3@15421> BRA.w doplus2
0002D1BA <AmiBlitz3.ab3@15425>   MOVE.w #$C080,D1
0002D1BE <AmiBlitz3.ab3@15426> BRA.w doplus2
0002D1C2 <AmiBlitz3.ab3@15430>   MOVE.w #$8000,D1
0002D1C6 <AmiBlitz3.ab3@15431> BRA.w doplus2
0002D1CA <AmiBlitz3.ab3@15435>   MOVE.w #$8040,D1
0002D1CE <AmiBlitz3.ab3@15436> BRA.w doplus2
0002D1D2 <AmiBlitz3.ab3@15440>   MOVE.w #$8080,D1
0002D1D6 <AmiBlitz3.ab3@15441> BRA.w doplus2
0002D1DA <AmiBlitz3.ab3@15445>   MOVE.w #$B100,D1
0002D1E0 <AmiBlitz3.ab3@15448>    MOVE.w regnum,D3
0002D1E2 <AmiBlitz3.ab3@15449>   OR.w D3,D1
0002D1E4 <AmiBlitz3.ab3@15450>   ADDQ.w #1,D3
0002D1E6 <AmiBlitz3.ab3@15451>   LSL.w #8,D3
0002D1E8 <AmiBlitz3.ab3@15452>   LSL.w #1,D3
0002D1EA <AmiBlitz3.ab3@15453>   OR.w D3,D1
0002D1EE <AmiBlitz3.ab3@15454> BRA.w writeword
0002D1F2 <AmiBlitz3.ab3@15458>   MOVE.w #$B140,D1
0002D1F6 <AmiBlitz3.ab3@15459> BRA.w JL_0_A25C
0002D1FA <AmiBlitz3.ab3@15463>   MOVE.w #$B180,D1
0002D1FE <AmiBlitz3.ab3@15464> BRA.w JL_0_A25C
0002D202 <AmiBlitz3.ab3@15468>   MOVE.w #$E1A8,D1
0002D206 <AmiBlitz3.ab3@15469> BRA.w JL_0_A298
0002D20A <AmiBlitz3.ab3@15473>   MOVE.w #$E0A8,D1
0002D20E <AmiBlitz3.ab3@15474> BRA.w JL_0_A298
0002D212 <AmiBlitz3.ab3@15478>   MOVE.w #$E0A0,D1
0002D216 <AmiBlitz3.ab3@15479> BRA.w JL_0_A298
0002D218 <AmiBlitz3.ab3@15483>   MOVE.w D1,-(A7)
0002D21E <AmiBlitz3.ab3@15484>   ADDQ.w #1,regnum
0002D220 <AmiBlitz3.ab3@15485>   MOVE.w D2,-(A7)
0002D222 <AmiBlitz3.ab3@15486>   MOVE.w D2,D3
0002D224 <AmiBlitz3.ab3@15487>   MOVEQ.l #$02,D2
0002D228 <AmiBlitz3.ab3@15492>    BSR.w writeconvertcode
0002D22A <AmiBlitz3.ab3@15494>   MOVE.w (A7)+,D2
0002D230 <AmiBlitz3.ab3@15495>   SUBQ.w #1,regnum
0002D234 <AmiBlitz3.ab3@15496>   CMP.w #$4,D2
0002D238 <AmiBlitz3.ab3@15497>    BEQ.w JL_0_A2C2
0002D23A <AmiBlitz3.ab3@15498>   MOVE.w D2,D3
0002D23C <AmiBlitz3.ab3@15499>   MOVEQ.l #$03,D2
0002D240 <AmiBlitz3.ab3@15500>    BSR.w JL_0_9770
0002D242 <AmiBlitz3.ab3@15503>    MOVE.w (A7)+,D1
0002D248 <AmiBlitz3.ab3@15504>   MOVE.w regnum,D3
0002D24A <AmiBlitz3.ab3@15505>   OR.w D3,D1
0002D24C <AmiBlitz3.ab3@15506>   ADDQ.w #1,D3
0002D24E <AmiBlitz3.ab3@15507>   LSL.w #8,D3
0002D250 <AmiBlitz3.ab3@15508>   LSL.w #1,D3
0002D252 <AmiBlitz3.ab3@15509>   OR.w D3,D1
0002D256 <AmiBlitz3.ab3@15510> BRA.w writeword
0002D25A <AmiBlitz3.ab3@15514>   MOVE.w #$0100,D1
0002D25E <AmiBlitz3.ab3@15515>    BSR.w JL_0_A31C
0002D264 <AmiBlitz3.ab3@15516>   MOVE.w regnum,D1
0002D268 <AmiBlitz3.ab3@15517>   ORI.w #$56C0,D1
0002D26C <AmiBlitz3.ab3@15518>    BSR.w writeword
0002D272 <AmiBlitz3.ab3@15519>   MOVE.w regnum,D1
0002D276 <AmiBlitz3.ab3@15520>   ORI.w #$4880,D1
0002D27A <AmiBlitz3.ab3@15521>    BSR.w writeword
0002D27C <AmiBlitz3.ab3@15522>   MOVEQ.l #$02,D2
0002D27E <AmiBlitz3.ab3@15523> RTS
0002D282 <AmiBlitz3.ab3@15527>   MOVE.w #$01C0,D1
0002D286 <AmiBlitz3.ab3@15530>    BSR.w JL_0_A31C
0002D288 <AmiBlitz3.ab3@15531>   MOVEQ.l #$03,D2
0002D28A <AmiBlitz3.ab3@15532> RTS
0002D28E <AmiBlitz3.ab3@15536>   MOVE.w #$0180,D1
0002D292 <AmiBlitz3.ab3@15537> BRA.w JL_0_A304
0002D296 <AmiBlitz3.ab3@15541>   MOVE.w #$0140,D1
0002D29A <AmiBlitz3.ab3@15542> BRA.w JL_0_A304
0002D29C <AmiBlitz3.ab3@15546>   MOVE.w D1,-(A7)
0002D29E <AmiBlitz3.ab3@15547>   MOVE.w D2,-(A7)
0002D2A0 <AmiBlitz3.ab3@15548>   MOVE.w D2,D3
0002D2A2 <AmiBlitz3.ab3@15549>   MOVEQ.l #$03,D2
0002D2A6 <AmiBlitz3.ab3@15550>    BSR.w JL_0_9770
0002D2A8 <AmiBlitz3.ab3@15551>   MOVE.w (A7)+,D3
0002D2AA <AmiBlitz3.ab3@15552>   MOVEQ.l #$01,D2
0002D2B0 <AmiBlitz3.ab3@15553>   ADDQ.w #1,regnum
0002D2B4 <AmiBlitz3.ab3@15554>    BSR.w writeconvertcode
0002D2BA <AmiBlitz3.ab3@15555>   SUBQ.w #1,regnum
0002D2C0 <AmiBlitz3.ab3@15556>   MOVE.w regnum,D1
0002D2C2 <AmiBlitz3.ab3@15557>   MOVE.w D1,D2
0002D2C4 <AmiBlitz3.ab3@15558>   ADDQ.w #1,D2
0002D2C6 <AmiBlitz3.ab3@15559>   LSL.w #8,D2
0002D2C8 <AmiBlitz3.ab3@15560>   LSL.w #1,D2
0002D2CA <AmiBlitz3.ab3@15561>   OR.w (A7)+,D1
0002D2CC <AmiBlitz3.ab3@15562>   OR.w D2,D1
0002D2D0 <AmiBlitz3.ab3@15563> BRA.w writeword
0002D2D6 <AmiBlitz3.ab3@15567>   MOVE.w regnum,D1
0002D2DA <AmiBlitz3.ab3@15568>    BEQ.w JL_0_A36C
0002D2DE <AmiBlitz3.ab3@15569>   ORI.w #$2000,D1
0002D2E2 <AmiBlitz3.ab3@15570>    BSR.w writeword
0002D2E6 <AmiBlitz3.ab3@15571>   ADDI.w #$201,D1
0002D2EA <AmiBlitz3.ab3@15572>    BSR.w writeword
0002D2EC <AmiBlitz3.ab3@15575> RTS
0002D2F2 <AmiBlitz3.ab3@15579>   MOVE.w regnum,D1
0002D2F6 <AmiBlitz3.ab3@15580>    BEQ.w JL_0_A384
0002D2F8 <AmiBlitz3.ab3@15581>   LSL.w #8,D1
0002D2FA <AmiBlitz3.ab3@15582>   LSL.w #1,D1
0002D2FE <AmiBlitz3.ab3@15583>   ORI.w #$2000,D1
0002D302 <AmiBlitz3.ab3@15584>    BSR.w writeword
0002D304 <AmiBlitz3.ab3@15587> RTS
0002D30A <AmiBlitz3.ab3@15591>    CLR.b isconstantvalue
0002D310 <AmiBlitz3.ab3@15592>    CLR.l lastconstantvalue
0002D318 <AmiBlitz3.ab3@15593>    CMPI.w #$7,regnum
0002D31C <AmiBlitz3.ab3@15594>    BCS.w JL_0_A6B4
0002D322 <AmiBlitz3.ab3@15595>   MOVE.l #$f2277700,d1                                     ;fmove.d fp6,-(a7)
0002D326 <AmiBlitz3.ab3@15596>   BSR writelong
0002D32A <AmiBlitz3.ab3@15597>   MOVE.w #$2F06,D1                                         ;d6 to stack
0002D32E <AmiBlitz3.ab3@15599>   CMP.w #$3,D2
0002D332 <AmiBlitz3.ab3@15600>    BCS.w JL_0_A3A2
0002D336 <AmiBlitz3.ab3@15601>   MOVE.w #$2F06,D1
0002D33A <AmiBlitz3.ab3@15604>   BSR.w writeword
0002D33C <AmiBlitz3.ab3@15605>   MOVE.w D1,-(A7)
0002D342 <AmiBlitz3.ab3@15606>   SUBQ.w #1,regnum
0002D346 <AmiBlitz3.ab3@15607>    BSR.w JL_0_A6B4
0002D34C <AmiBlitz3.ab3@15608>   ADDQ.w #1,regnum
0002D352 <AmiBlitz3.ab3@15609>   MOVE.l #$f2001b80,d1
0002D356 <AmiBlitz3.ab3@15610>   BSR writelong
0002D35A <AmiBlitz3.ab3@15611>   MOVE.w #$3E06,D1
0002D35E <AmiBlitz3.ab3@15612>   CMP.w #$3,D2
0002D362 <AmiBlitz3.ab3@15613>    BCS.w JL_0_A3C8
0002D366 <AmiBlitz3.ab3@15614>   MOVE.w #$2E06,D1
0002D36A <AmiBlitz3.ab3@15617>   BSR.w writeword
0002D36C <AmiBlitz3.ab3@15618>   MOVE.w (A7)+,D1
0002D370 <AmiBlitz3.ab3@15619>   ANDI.w #$F000,D1
0002D374 <AmiBlitz3.ab3@15620>   ORI.w #$C1F,D1
0002D37A <AmiBlitz3.ab3@15621>   JSR writeword
0002D380 <AmiBlitz3.ab3@15622>   MOVE.l #$f21f5700,d1                                     ;fmove.d (a7)+,fp6
0002D384 <AmiBlitz3.ab3@15623> BRA writelong
0002D388 <AmiBlitz3.ab3@15627>   BSR.w JL_0_A6B4
0002D38C <AmiBlitz3.ab3@15628>   MOVE.w #$4440,D1
0002D390 <AmiBlitz3.ab3@15629>   CMP.w #$3,D2
0002D394 <AmiBlitz3.ab3@15630>    BCS.w JL_0_A406
0002D398 <AmiBlitz3.ab3@15631>   MOVE.w #$4480,D1
0002D39C <AmiBlitz3.ab3@15632>   CMP.w #$5,D2
0002D3A0 <AmiBlitz3.ab3@15633>    BCS.w JL_0_A406
0002D3A4 <AmiBlitz3.ab3@15634>   CMP.w #$6,D2
0002D3A8 <AmiBlitz3.ab3@15635>    BCC.w illoperr
0002D3AC <AmiBlitz3.ab3@15636>   MOVE.w #$FFC4,D1
0002D3B0 <AmiBlitz3.ab3@15637> BRA.w JL_0_9604
0002D3B6 <AmiBlitz3.ab3@15640>   OR.w regnum,D1                                           ;negate
0002D3BC <AmiBlitz3.ab3@15641>   CLR.l imm_addr
0002D3C0 <AmiBlitz3.ab3@15642> BRA.w writeword
0002D3C4 <AmiBlitz3.ab3@15646>    BSR.w eval4
0002D3C8 <AmiBlitz3.ab3@15647>   CMP.w #")",D0
0002D3CC <AmiBlitz3.ab3@15648>    BEQ.w JL_0_A424
0002D3D0 <AmiBlitz3.ab3@15649>   CMP.w #"}",D0
0002D3D4 <AmiBlitz3.ab3@15650>    BNE.w brackets_                                         ;syntax error brackets
0002D3D8 <AmiBlitz3.ab3@15653> BRA.w get1bytemain
0002D3DC <AmiBlitz3.ab3@15657>    BSR.w eval4
0002D3E0 <AmiBlitz3.ab3@15658>   CMP.w #$5,D2
0002D3E4 <AmiBlitz3.ab3@15659>    BCC.w illoperr
0002D3EA <AmiBlitz3.ab3@15660>   MOVE.w regnum,D1
0002D3EE <AmiBlitz3.ab3@15661>   ORI.w #$4640,D1
0002D3F2 <AmiBlitz3.ab3@15662>   CMP.w #$3,D2
0002D3F6 <AmiBlitz3.ab3@15663>    BCS.w writeword
0002D3FA <AmiBlitz3.ab3@15664>   EORI.w #$C0,D1
0002D3FE <AmiBlitz3.ab3@15665> BRA.w writeword
0002D400 <AmiBlitz3.ab3@15669>   MOVEQ.l #$05,D2                                          ;fpu pi
0002D406 <AmiBlitz3.ab3@15670>    TST.b fpu
0002D40A <AmiBlitz3.ab3@15671>   BEQ 'old
0002D410 <AmiBlitz3.ab3@15672> JMP fpupi
0002D416 <AmiBlitz3.ab3@15675>   MOVE.w regnum,D1
0002D418 <AmiBlitz3.ab3@15676>   LSL.w #8,D1
0002D41A <AmiBlitz3.ab3@15677>   LSL.w #1,D1
0002D41E <AmiBlitz3.ab3@15678>   ORI.w #$203C,D1
0002D422 <AmiBlitz3.ab3@15679>    BSR.w writeword
0002D428 <AmiBlitz3.ab3@15680>   MOVE.l #$C90FDA42,D1
0002D42C <AmiBlitz3.ab3@15681>    BSR.w writelong
0002D430 <AmiBlitz3.ab3@15682> BRA.w get1bytemain
0002D52C <AmiBlitz3.ab3@15690> forthstack:  Ds.l 63                                       ;ds.b  18*32 org source
0002D628 <AmiBlitz3.ab3@15691>              Ds.l 63
0002D670 <AmiBlitz3.ab3@15692>              Ds.l 18
0002D674 <AmiBlitz3.ab3@15693> forthsp:     Dc.l forthstack
0002D6A0 <AmiBlitz3.ab3@15698>    !fget
0002D6A4 <AmiBlitz3.ab3@15699>    CMP.b #$7e,d0
0002D6A8 <AmiBlitz3.ab3@15700>    BNE 'noc
0002D6AA <AmiBlitz3.ab3@15701>    SUBQ.l #1,a5
0002D6AE <AmiBlitz3.ab3@15702>    BSR get1bytemain
0002D6B2 <AmiBlitz3.ab3@15705>    CMP.b #"#",d0
0002D6B6 <AmiBlitz3.ab3@15706>    BNE 'ld1
0002D6BA <AmiBlitz3.ab3@15707>    CMP.b #$22,(a5)
0002D6BE <AmiBlitz3.ab3@15708>    BNE 'ld1
0002D6C4 <AmiBlitz3.ab3@15709>    JSR addimmi
0002D6C8 <AmiBlitz3.ab3@15712>    CMP.b #$22,d0
0002D6CC <AmiBlitz3.ab3@15713>    BNE 'l11
0002D6D2 <AmiBlitz3.ab3@15723>    NOT.w instringon
0002D6D4 <AmiBlitz3.ab3@15726>    TST.b d0
0002D6D8 <AmiBlitz3.ab3@15727>    BPL 'l10
0002D6DA <AmiBlitz3.ab3@15728>    LSL.w #8,d0
0002D6DC <AmiBlitz3.ab3@15729>    MOVE.b (a5)+,d0                      ; get blitzlib instruction with returnvalue(called in functions/statement)
0002D6E2 <AmiBlitz3.ab3@15730>    MOVE.l d0,lasttoken
0002D6E8 <AmiBlitz3.ab3@15731>    MOVE.w d0,lastchar
0002D6EE <AmiBlitz3.ab3@15732>    CLR.l rightsidetype                  ; blitzlibs do currently no type check
0002D6F4 <AmiBlitz3.ab3@15733>    CLR.w rightsideflagmask
0002D6F8 <AmiBlitz3.ab3@15735>   CMP.w #"(",D0
0002D6FC <AmiBlitz3.ab3@15736>    BEQ.w checkcast2
0002D700 <AmiBlitz3.ab3@15737> nocast CMP.w #"{",D0
0002D704 <AmiBlitz3.ab3@15738>    BEQ.w JL_0_A410
0002D708 <AmiBlitz3.ab3@15739>   CMP.w #$2D,D0
0002D70C <AmiBlitz3.ab3@15740>    BEQ.w JL_0_A3DA
0002D710 <AmiBlitz3.ab3@15741>   CMP.w #-$7F77,D0
0002D714 <AmiBlitz3.ab3@15742>    BEQ.w JL_0_A428
0002D718 <AmiBlitz3.ab3@15743>   MOVEA.l forthsp(PC),A1
0002D71E <AmiBlitz3.ab3@15744>   CMPA.l #forthsp,A1
0002D722 <AmiBlitz3.ab3@15745>    BCC.w conmemerr
0002D728 <AmiBlitz3.ab3@15746>   MOVE.l destpointer,(A1)+
0002D72E <AmiBlitz3.ab3@15747>   MOVE.l hunkoffsetbase,(A1)+
0002D734 <AmiBlitz3.ab3@15748>   MOVE.l lasta6,(A1)+
0002D73A <AmiBlitz3.ab3@15749>   MOVE.w lasta6,(A1)+
0002D73C <AmiBlitz3.ab3@15750>   CLR.w (A1)+
0002D73E <AmiBlitz3.ab3@15751>   CLR.w (A1)+
0002D744 <AmiBlitz3.ab3@15752>   MOVE.l A1,forthsp
0002D756 <AmiBlitz3.ab3@15754>    !compare2
0002D75A <AmiBlitz3.ab3@15755>    BEQ.w JL_0_B224
0002D75E <AmiBlitz3.ab3@15756>   CMP.w #".",D0
0002D762 <AmiBlitz3.ab3@15757>    BEQ.w JL_0_B21E
0002D766 <AmiBlitz3.ab3@15758>   CMP.w #"#",D0
0002D76A <AmiBlitz3.ab3@15759>    BEQ.w get_constant
0002D76E <AmiBlitz3.ab3@15760>   CMP.w #"$",D0
0002D772 <AmiBlitz3.ab3@15761>    BEQ.w get_hexconstant
0002D776 <AmiBlitz3.ab3@15762>   CMP.w #"%",D0
0002D77A <AmiBlitz3.ab3@15763>    BEQ.w JL_0_A8C0
0002D77E <AmiBlitz3.ab3@15764>   CMP.w #-$7FD1,D0
0002D782 <AmiBlitz3.ab3@15765>    BEQ.w _SizeOf
0002D786 <AmiBlitz3.ab3@15766>   CMP.w #-$7F46,D0
0002D78A <AmiBlitz3.ab3@15767>    BEQ.w JL_0_A44E
0002D78E <AmiBlitz3.ab3@15768>   CMP.w #-$7F3B,D0
0002D792 <AmiBlitz3.ab3@15769>    BEQ.w JL_0_A83C
0002D796 <AmiBlitz3.ab3@15770>   CMP.w #-$7F3A,D0
0002D79A <AmiBlitz3.ab3@15771>    BEQ.w JL_0_A846
0002D7A0 <AmiBlitz3.ab3@15772>   MOVE.w constmode,D1
0002D7A4 <AmiBlitz3.ab3@15773>    BEQ.w JL_0_A776
0002D7C6 <AmiBlitz3.ab3@15774>    !compare1                                               ;bsr.w tstalpha
0002D7CA <AmiBlitz3.ab3@15775>    BEQ.w JL_0_AF22
0002D7CE <AmiBlitz3.ab3@15776>   CMP.w #$5F,D0
0002D7D2 <AmiBlitz3.ab3@15777>    BEQ.w JL_0_AF22
0002D7D6 <AmiBlitz3.ab3@15778>   CMP.w #$22,D0
0002D7DA <AmiBlitz3.ab3@15779>    BEQ.w JL_0_AF00
0002D7DE <AmiBlitz3.ab3@15780> BRA.w syntaxerr
0002D7E4 <AmiBlitz3.ab3@15782> checkcast2 JMP checkcast
0002D7EA <AmiBlitz3.ab3@15785>   MOVE.w cfetchmode,D1
0002D7EE <AmiBlitz3.ab3@15786>   BEQ.w JL_0_A784
0002D7F2 <AmiBlitz3.ab3@15787> BRA.w badconerr
0002D7F8 <AmiBlitz3.ab3@15790> JMP syntaxerropt4
0002D7FA <AmiBlitz3.ab3@15794>   NOT.w -(A1)
0002D81C <AmiBlitz3.ab3@15795>   !compare1                                                ;bsr.w tstalpha
0002D820 <AmiBlitz3.ab3@15796>    BEQ.w JL_0_AF4C
0002D824 <AmiBlitz3.ab3@15797>   CMP.w #$2A,D0
0002D828 <AmiBlitz3.ab3@15798>    BEQ.w JL_0_AF4C
0002D82C <AmiBlitz3.ab3@15799>   CMP.w #$5C,D0
0002D830 <AmiBlitz3.ab3@15800>    BEQ.w JL_0_AF4C
0002D834 <AmiBlitz3.ab3@15801>   CMP.w #$22,D0
0002D838 <AmiBlitz3.ab3@15802>    BEQ.w JL_0_ADC0
0002D83C <AmiBlitz3.ab3@15803>   BTST #$F,D0
0002D840 <AmiBlitz3.ab3@15804>    BNE.w JL_0_AAF2
0002D844 <AmiBlitz3.ab3@15805>   CMP.w #"&",D0
0002D848 <AmiBlitz3.ab3@15806>    BEQ.w getvaraddr                                          ;jump to & address of var code
0002D84C <AmiBlitz3.ab3@15807>   CMP.w #"?",D0
0002D850 <AmiBlitz3.ab3@15808>    BEQ.w JL_0_AED4
0002D854 <AmiBlitz3.ab3@15811>   CMP.b #"@",d0
0002D858 <AmiBlitz3.ab3@15812>    BNE syntaxerr
0002D85E <AmiBlitz3.ab3@15813>   TST.b newsyntax
0002D862 <AmiBlitz3.ab3@15814>    BEQ JUMP_syntaxerropt4
0002D868 <AmiBlitz3.ab3@15815>   MOVE.w regnum,D1
0002D86A <AmiBlitz3.ab3@15816>   LSL.w #8,D1
0002D86C <AmiBlitz3.ab3@15817>   LSL.w #1,D1
0002D870 <AmiBlitz3.ab3@15818>   ORI.w #$203C,D1
0002D874 <AmiBlitz3.ab3@15819>   BSR.w writeword
0002D878 <AmiBlitz3.ab3@15820>   CMP.b #$22,(a5)
0002D87C <AmiBlitz3.ab3@15821>    BNE syntaxerr
0002D87E <AmiBlitz3.ab3@15822>   ADDQ #1,a5
0002D880 <AmiBlitz3.ab3@15823>   MOVEQ #0,d0
0002D884 <AmiBlitz3.ab3@15824>   CMP.b #1,d2
0002D888 <AmiBlitz3.ab3@15825>    BEQ 'l3b
0002D88C <AmiBlitz3.ab3@15826>   CMP.b #2,d2
0002D890 <AmiBlitz3.ab3@15827>    BEQ 'l2b
0002D894 <AmiBlitz3.ab3@15828>   CMP.b #4,d2
0002D898 <AmiBlitz3.ab3@15829>    BEQ error_convert_types
0002D89A <AmiBlitz3.ab3@15830>   MOVE.b (a5)+,d0
0002D89E <AmiBlitz3.ab3@15831>   BEQ syntaxerr
0002D8A2 <AmiBlitz3.ab3@15832>   CMP.b #$22,d0
0002D8A6 <AmiBlitz3.ab3@15833>   BNE 'l1
0002D8AA <AmiBlitz3.ab3@15834>     MOVE.b #0,d0
0002D8AE <AmiBlitz3.ab3@15835> BRA 'do
0002D8B0 <AmiBlitz3.ab3@15838>   ASL.l #8,d0
0002D8B2 <AmiBlitz3.ab3@15839>   MOVE.b (a5)+,d0
0002D8B6 <AmiBlitz3.ab3@15840>   BEQ syntaxerr
0002D8BA <AmiBlitz3.ab3@15841>   CMP.b #$22,d0
0002D8BE <AmiBlitz3.ab3@15842>   BNE 'l2
0002D8C2 <AmiBlitz3.ab3@15843>     MOVE.b #0,d0
0002D8C4 <AmiBlitz3.ab3@15844>     ASR.l #8,d0
0002D8C8 <AmiBlitz3.ab3@15845> BRA 'do
0002D8CA <AmiBlitz3.ab3@15848>   ASL.l #8,d0
0002D8CC <AmiBlitz3.ab3@15851>   MOVE.b (a5)+,d0
0002D8D0 <AmiBlitz3.ab3@15852>    BEQ syntaxerr
0002D8D4 <AmiBlitz3.ab3@15853>    CMP.b #$22,d0
0002D8D8 <AmiBlitz3.ab3@15854>    BNE 'l3
0002D8DC <AmiBlitz3.ab3@15855>    MOVE.b #0,d0
0002D8DE <AmiBlitz3.ab3@15856>    ASR.l #8,d0
0002D8E2 <AmiBlitz3.ab3@15857> BRA 'do
0002D8E4 <AmiBlitz3.ab3@15860>   ASL.l #8,d0
0002D8E6 <AmiBlitz3.ab3@15863>   MOVE.b (a5)+,d0
0002D8EA <AmiBlitz3.ab3@15864>    BEQ syntaxerr
0002D8EE <AmiBlitz3.ab3@15865>    CMP.b #$22,d0
0002D8F2 <AmiBlitz3.ab3@15866>    BNE 'l4
0002D8F6 <AmiBlitz3.ab3@15867>    MOVE.b #0,d0
0002D8F8 <AmiBlitz3.ab3@15868>    ASR.l #8,d0
0002D8FC <AmiBlitz3.ab3@15869> BRA 'do
0002D900 <AmiBlitz3.ab3@15872>    CMP.b #$22,(a5)+
0002D904 <AmiBlitz3.ab3@15873>    BNE JUMP_error4char
0002D906 <AmiBlitz3.ab3@15876>   MOVE.l d0,d1
0002D90A <AmiBlitz3.ab3@15877>     BSR writelong
0002D90E <AmiBlitz3.ab3@15878>     BSR get1bytemain
0002D910 <AmiBlitz3.ab3@15879> RTS
0002D914 <AmiBlitz3.ab3@15883>   BSR.w get1bytemain
0002D918 <AmiBlitz3.ab3@15884>   CMP.w #$2E,D0
0002D91C <AmiBlitz3.ab3@15885>    BEQ.b JL_0_A7F4
0002D926 <AmiBlitz3.ab3@15887>   MOVE.w oldqflag,instringon
0002D92C <AmiBlitz3.ab3@15888>   MOVEA.l lastsourcepos,A5
0002D92E <AmiBlitz3.ab3@15889>   MOVE.w D2,-(A7)
0002D932 <AmiBlitz3.ab3@15890>    BSR.w getparameter2
0002D936 <AmiBlitz3.ab3@15891>    BEQ.w syntaxerr
0002D93C <AmiBlitz3.ab3@15892>   LEA varbase,A2
0002D940 <AmiBlitz3.ab3@15893>    BSR.w findvariable
0002D944 <AmiBlitz3.ab3@15894>    BNE.w notypeerr
0002D948 <AmiBlitz3.ab3@15895>   MOVE.w $4(A2),D3
0002D94A <AmiBlitz3.ab3@15896>   EXT.l D3
0002D94C <AmiBlitz3.ab3@15897>   MOVE.w (A7)+,D2
0002D950 <AmiBlitz3.ab3@15898> BRA.w JL_0_B46E
0002D952 <AmiBlitz3.ab3@15902>   MOVE.w D2,-(A7)
0002D956 <AmiBlitz3.ab3@15903>    BSR.w getparameter2
0002D95A <AmiBlitz3.ab3@15904>    BEQ.w syntaxerr
0002D960 <AmiBlitz3.ab3@15905>   LEA newtypebase,A2
0002D964 <AmiBlitz3.ab3@15906>    BSR.w findtype
0002D968 <AmiBlitz3.ab3@15907>    BNE.w notypeerr
0002D96A <AmiBlitz3.ab3@15908>   MOVEQ.l #$00,D3
0002D96E <AmiBlitz3.ab3@15909>   CMP.w #$5C,D0
0002D972 <AmiBlitz3.ab3@15910>    BNE.w JL_0_A832
0002D976 <AmiBlitz3.ab3@15911>    BSR.w getparameter2
0002D97A <AmiBlitz3.ab3@15912>    BEQ.w syntaxerr
0002D97E <AmiBlitz3.ab3@15913>   LEA $4(A2),A2
0002D982 <AmiBlitz3.ab3@15914>    BSR.w findvariable2
0002D986 <AmiBlitz3.ab3@15915>    BNE.w noofferr
0002D98A <AmiBlitz3.ab3@15916>   MOVE.w $4(A2),D3
0002D98E <AmiBlitz3.ab3@15917> BRA.w JL_0_A836
0002D992 <AmiBlitz3.ab3@15921>   MOVE.w $8(A2),D3
0002D994 <AmiBlitz3.ab3@15924>   MOVE.w (A7)+,D2
0002D998 <AmiBlitz3.ab3@15925> BRA.w JL_0_B46E
0002D99A <AmiBlitz3.ab3@15929>   MOVEQ.l #-$01,D3
0002D99E <AmiBlitz3.ab3@15930>    BSR.w get1bytemain
0002D9A2 <AmiBlitz3.ab3@15931> BRA.w JL_0_B46E
0002D9A4 <AmiBlitz3.ab3@15935>   MOVEQ.l #$00,D3
0002D9A8 <AmiBlitz3.ab3@15936>    BSR.w get1bytemain
0002D9AC <AmiBlitz3.ab3@15937> BRA.w JL_0_B46E
0002D9B0 <AmiBlitz3.ab3@15941>   CMP.w #$30,D0
0002D9B4 <AmiBlitz3.ab3@15942>    BCS.w JL_0_A876
0002D9B8 <AmiBlitz3.ab3@15943>   CMP.w #$39,D0
0002D9BC <AmiBlitz3.ab3@15944>    BLS.w JL_0_A874
0002D9C0 <AmiBlitz3.ab3@15945>   ANDI.w #$FFDF,D0
0002D9C4 <AmiBlitz3.ab3@15946>   CMP.w #$46,D0
0002D9C8 <AmiBlitz3.ab3@15947>    BHI.w JL_0_A876
0002D9CC <AmiBlitz3.ab3@15948>   CMP.w #$41,D0
0002D9D0 <AmiBlitz3.ab3@15949>    BCS.w JL_0_A876
0002D9D2 <AmiBlitz3.ab3@15952>    CMP.w D0,D0
0002D9D4 <AmiBlitz3.ab3@15955> RTS
0002D9D8 <AmiBlitz3.ab3@15959>   CMP.w #$31,D0
0002D9DC <AmiBlitz3.ab3@15960>    BEQ.w JL_0_A884
0002D9E0 <AmiBlitz3.ab3@15961>   CMP.w #$30,D0
0002D9E2 <AmiBlitz3.ab3@15964> RTS
0002D9E4 <AmiBlitz3.ab3@15968>    MOVEQ #0,d0
0002D9E6 <AmiBlitz3.ab3@15969>    MOVE.b (a5)+,d0
0002D9E8 <AmiBlitz3.ab3@15970>    MOVE.b (a5)+,d0
0002D9EC <AmiBlitz3.ab3@15971>    BSR ishex
0002D9F0 <AmiBlitz3.ab3@15972>    BNE syntaxerr
0002D9F4 <AmiBlitz3.ab3@15973>    SUBI.w #$30,D0
0002D9F8 <AmiBlitz3.ab3@15974>    CMP.w #$9,D0
0002D9FC <AmiBlitz3.ab3@15975>    BLS.w 'l1
0002D9FE <AmiBlitz3.ab3@15976>    SUBQ.w #7,D0
0002DA00 <AmiBlitz3.ab3@15979>    MOVE.l d0,d1
0002DA02 <AmiBlitz3.ab3@15980>    MOVE.b (a5)+,d0
0002DA06 <AmiBlitz3.ab3@15981>      BSR ishex
0002DA0A <AmiBlitz3.ab3@15982>     BNE syntaxerr
0002DA0C <AmiBlitz3.ab3@15983>     LSL.l #4,d1
0002DA10 <AmiBlitz3.ab3@15984>     SUBI.w #$30,D0
0002DA14 <AmiBlitz3.ab3@15985>    CMP.w #$9,D0
0002DA18 <AmiBlitz3.ab3@15986>    BLS.w 'l2
0002DA1A <AmiBlitz3.ab3@15987>    SUBQ.w #7,D0
0002DA1C <AmiBlitz3.ab3@15990>   ADD.l d1,d0
0002DA1E <AmiBlitz3.ab3@15991> RTS
0002DA22 <AmiBlitz3.ab3@15995>    BSR.w get1bytemain
0002DA26 <AmiBlitz3.ab3@15996>    BSR.w ishex
0002DA2A <AmiBlitz3.ab3@15997>    BNE.w syntaxerr
0002DA2C <AmiBlitz3.ab3@15998>   MOVEQ.l #$00,D3
0002DA30 <AmiBlitz3.ab3@15999>   CMP.w #5,d2
0002DA34 <AmiBlitz3.ab3@16000>   BNE JL_0_A894
0002DA3A <AmiBlitz3.ab3@16001>   CMP.l #newtype_double,a2
0002DA3E <AmiBlitz3.ab3@16002>   BEQ 'doit
0002DA44 <AmiBlitz3.ab3@16003>   CMP.l #newtype_float,a2
0002DA48 <AmiBlitz3.ab3@16004>   BNE JL_0_A894
0002DA50 <AmiBlitz3.ab3@16007>    fmove.s #0,fp0
0002DA56 <AmiBlitz3.ab3@16009>   TST.b fpu
0002DA5A <AmiBlitz3.ab3@16010>   BEQ JL_0_A894
0002DA60 <AmiBlitz3.ab3@16011>   fmove.w #16,fp1
0002DA64 <AmiBlitz3.ab3@16012>   fmul.x fp1,fp0
0002DA68 <AmiBlitz3.ab3@16013>   SUBI.w #$30,D0
0002DA6C <AmiBlitz3.ab3@16014>   CMP.w #$9,D0
0002DA70 <AmiBlitz3.ab3@16015>    BLS.w JL_0_A8AEa
0002DA72 <AmiBlitz3.ab3@16016>   SUBQ.w #7,D0
0002DA76 <AmiBlitz3.ab3@16019>    fmove.w d0,fp1
0002DA7A <AmiBlitz3.ab3@16020>    fadd.x fp1,fp0
0002DA7E <AmiBlitz3.ab3@16021>    BSR.w get1bytemain
0002DA82 <AmiBlitz3.ab3@16022>    BSR.w ishex
0002DA86 <AmiBlitz3.ab3@16023>    BEQ.w JL_0_A894a
0002DA8A <AmiBlitz3.ab3@16024> BRA.w nofpregload
0002DA90 <AmiBlitz3.ab3@16028>   CMP.l #$10000000,D3
0002DA94 <AmiBlitz3.ab3@16029>    BCC.w overerr
0002DA96 <AmiBlitz3.ab3@16030>   LSL.l #4,D3
0002DA9A <AmiBlitz3.ab3@16031>   SUBI.w #$30,D0
0002DA9E <AmiBlitz3.ab3@16032>   CMP.w #$9,D0
0002DAA2 <AmiBlitz3.ab3@16033>    BLS.w JL_0_A8AE
0002DAA4 <AmiBlitz3.ab3@16034>   SUBQ.w #7,D0
0002DAA6 <AmiBlitz3.ab3@16037>   OR.w D0,D3
0002DAAA <AmiBlitz3.ab3@16038>    BSR.w get1bytemain
0002DAAE <AmiBlitz3.ab3@16039>    BSR.w ishex
0002DAB2 <AmiBlitz3.ab3@16040>    BEQ.w JL_0_A894
0002DAB6 <AmiBlitz3.ab3@16041> BRA.w JL_0_B46E
0002DABA <AmiBlitz3.ab3@16045>    BSR.w get1bytemain
0002DABE <AmiBlitz3.ab3@16046>    BSR.w JL_0_A878
0002DAC2 <AmiBlitz3.ab3@16047>    BNE.w syntaxerr
0002DAC4 <AmiBlitz3.ab3@16048>    MOVEQ.l #$00,D3
0002DAC6 <AmiBlitz3.ab3@16051>    LSL.l #1,D3
0002DACA <AmiBlitz3.ab3@16052>    BCS.w overerr
0002DACE <AmiBlitz3.ab3@16053>   SUBI.w #$30,D0
0002DAD0 <AmiBlitz3.ab3@16054>   OR.w D0,D3
0002DAD4 <AmiBlitz3.ab3@16055>    BSR.w get1bytemain
0002DAD8 <AmiBlitz3.ab3@16056>    BSR.w JL_0_A878
0002DADC <AmiBlitz3.ab3@16057>    BEQ.w JL_0_A8CE
0002DAE0 <AmiBlitz3.ab3@16058> BRA.w JL_0_B46E
0002DAE2 <AmiBlitz3.ab3@16062>    MOVE.w d2,-(A7)
0002DAEA <AmiBlitz3.ab3@16063>    MOVE.b #0,automode
0002DAEE <AmiBlitz3.ab3@16064>    CMP.b #"@",(a5)
0002DAF2 <AmiBlitz3.ab3@16065>    BNE 'l1
0002DAF4 <AmiBlitz3.ab3@16066>    ADDQ.l #1,a5
0002DAFC <AmiBlitz3.ab3@16067>    MOVE.b #1,automode
0002DB00 <AmiBlitz3.ab3@16068>    BSR getparameter2
0002DB04 <AmiBlitz3.ab3@16069>    BSR findlabel2
0002DB08 <AmiBlitz3.ab3@16070>    BNE 'addit
0002DB0C <AmiBlitz3.ab3@16071> BRA errormsg_autocount
0002DB10 <AmiBlitz3.ab3@16074>   BSR.w addlabelhash
0002DB18 <AmiBlitz3.ab3@16075>   MOVE.l #$1,$4(A2)
0002DB1C <AmiBlitz3.ab3@16076>   MOVEM.l a2/a5,-(a7)
0002DB22 <AmiBlitz3.ab3@16077>   MOVE.w lastchar,-(a7)
0002DB28 <AmiBlitz3.ab3@16078>   LEA autostorename,a5
0002DB2C <AmiBlitz3.ab3@16079>   BSR getparameter2
0002DB30 <AmiBlitz3.ab3@16080>   BSR findlabel2
0002DB34 <AmiBlitz3.ab3@16081>   BEQ 'found
0002DB38 <AmiBlitz3.ab3@16082>   BSR.w addlabelhash
0002DB40 <AmiBlitz3.ab3@16083>   MOVE.l #$1,$4(A2)
0002DB48 <AmiBlitz3.ab3@16084>   MOVE.l #0,8(a2)
0002DB4A <AmiBlitz3.ab3@16087>    MOVE.w (a7)+,d0
0002DB50 <AmiBlitz3.ab3@16088>    MOVE.w d0,lastchar
0002DB54 <AmiBlitz3.ab3@16089>   MOVE.l 8(a2),d3
0002DB5C <AmiBlitz3.ab3@16090>   ADD.l #1,8(a2)
0002DB60 <AmiBlitz3.ab3@16091>   MOVEM.l (a7)+,a2/a5
0002DB64 <AmiBlitz3.ab3@16092>   MOVE.l d3,8(a2)
0002DB68 <AmiBlitz3.ab3@16093>   MOVE.l $8(A2),D3
0002DB6C <AmiBlitz3.ab3@16094> BRA.l 'l3
0002DB70 <AmiBlitz3.ab3@16097>   BSR.w getparameter2
0002DB76 <AmiBlitz3.ab3@16098>     TST.b incnif
0002DB7A <AmiBlitz3.ab3@16099>     BEQ 'lc1
0002DB7E <AmiBlitz3.ab3@16100>     BSR.w findlabel2
0002DB82 <AmiBlitz3.ab3@16101>     BNE 'l5
0002DB84 <AmiBlitz3.ab3@16102>     MOVEQ #1,d3
0002DB86 <AmiBlitz3.ab3@16103>     MOVE.w (A7)+,D2
0002DB8A <AmiBlitz3.ab3@16104> BRA JL_0_B46E
0002DB8C <AmiBlitz3.ab3@16107>   MOVEQ #0,d3
0002DB8E <AmiBlitz3.ab3@16108>     MOVE.w (A7)+,D2
0002DB92 <AmiBlitz3.ab3@16109> BRA JL_0_B46E
0002DB96 <AmiBlitz3.ab3@16112>    BSR.w findlabel2
0002DB9A <AmiBlitz3.ab3@16113>    BNE.w cnferr
0002DBA2 <AmiBlitz3.ab3@16116>    CMPI.l #$1,$4(A2)
0002DBA6 <AmiBlitz3.ab3@16117>    BNE.w cnferr
0002DBAA <AmiBlitz3.ab3@16119>    MOVE.l $8(A2),D3
0002DBAC <AmiBlitz3.ab3@16120>    MOVE.w (A7)+,D2
0002DBB0 <AmiBlitz3.ab3@16121> BRA.w JL_0_B46E
0002DBB6 <AmiBlitz3.ab3@16125>   CLR.w vartype
0002DBBE <AmiBlitz3.ab3@16126>   MOVE.b #3,peekaddrsize
0002DBC2 <AmiBlitz3.ab3@16127>   BSR.w JL_0_A916
0002DBC8 <AmiBlitz3.ab3@16128>   MOVE.l a2,rightsidetype
0002DBD2 <AmiBlitz3.ab3@16129>   MOVE.w flagmask,rightsideflagmask
0002DBD4 <AmiBlitz3.ab3@16130>   MOVEQ.l #$03,D2
0002DBD6 <AmiBlitz3.ab3@16131> RTS
0002DBDA <AmiBlitz3.ab3@16135>    BSR.w get1bytemain
0002DBEC <AmiBlitz3.ab3@16136>    !compare2
0002DBF0 <AmiBlitz3.ab3@16137>    BEQ andop2
0002DBF4 <AmiBlitz3.ab3@16138>    BSR.w getparameter
0002DBF8 <AmiBlitz3.ab3@16139>    BSR.w JL_0_8E3C
0002DBFC <AmiBlitz3.ab3@16140>    BSR.w calcvar
0002DC00 <AmiBlitz3.ab3@16141>   CMP.b #$7,D2
0002DC04 <AmiBlitz3.ab3@16142>    BNE.w JL_0_A960
0002DC08 <AmiBlitz3.ab3@16143>   BTST #$F,D2
0002DC0C <AmiBlitz3.ab3@16144>    BNE.w JL_0_A94A
0002DC12 <AmiBlitz3.ab3@16145>   MOVE.w D3,stamp2+2
0002DC18 <AmiBlitz3.ab3@16146>   MOVE.l stamp2,D1
0002DC1C <AmiBlitz3.ab3@16147>    BSR.w pokela5s
0002DC20 <AmiBlitz3.ab3@16148> BRA.w JL_0_A978
0002DC26 <AmiBlitz3.ab3@16152>   MOVE.w regnum,D1
0002DC28 <AmiBlitz3.ab3@16153>   LSL.w #8,D1
0002DC2A <AmiBlitz3.ab3@16154>   LSL.w #1,D1
0002DC30 <AmiBlitz3.ab3@16155>   OR.w stamp,D1
0002DC34 <AmiBlitz3.ab3@16156>    BSR.w writeword
0002DC36 <AmiBlitz3.ab3@16157> RTS
0002DC3A <AmiBlitz3.ab3@16161>   BTST #$F,D2
0002DC3E <AmiBlitz3.ab3@16162>    BNE.w JL_0_A978
0002DC44 <AmiBlitz3.ab3@16163>   MOVE.w D3,leaamp+2
0002DC4A <AmiBlitz3.ab3@16164>   MOVE.l leaamp,D1
0002DC4E <AmiBlitz3.ab3@16165>    BSR.w pokela5s
0002DC54 <AmiBlitz3.ab3@16168>   MOVE.w regnum,D1
0002DC56 <AmiBlitz3.ab3@16169>   LSL.w #8,D1
0002DC58 <AmiBlitz3.ab3@16170>   LSL.w #1,D1
0002DC5E <AmiBlitz3.ab3@16171>   OR.w leaamp2,D1
0002DC62 <AmiBlitz3.ab3@16172> BRA.w writeword
0002DC66 <AmiBlitz3.ab3@16176>   MOVE.w #$D200,D1
0002DC6A <AmiBlitz3.ab3@16177>    BSR.w Atokejsr
0002DC6C <AmiBlitz3.ab3@16178>   MOVEQ.l #$03,D2
0002DC6E <AmiBlitz3.ab3@16179> RTS
0002DC72 <AmiBlitz3.ab3@16183> addrcode:  Dc.b $20,$6D,$00,$00                            ;MOVEA.L $0000(A5),A0
0002DC74 <AmiBlitz3.ab3@16184>            Dc.b $D0,$C0                                    ;ADDA.W  D0,A0
0002DC76 <AmiBlitz3.ab3@16185>            Dc.b $20,$08                                    ;MOVE.L  A0,D0
0002DC7A <AmiBlitz3.ab3@16191>    BSR.w get1bytemain
0002DC7C <AmiBlitz3.ab3@16192>   MOVE.w D0,D1
0002DC80 <AmiBlitz3.ab3@16193>    BPL.w syntaxerr
0002DC82 <AmiBlitz3.ab3@16194>   MOVE.w D2,-(A7)
0002DC86 <AmiBlitz3.ab3@16195>   BCLR #$F,D1
0002DC8A <AmiBlitz3.ab3@16196>    BSR.w searchinstr
0002DC8E <AmiBlitz3.ab3@16197>   MOVE.l $12(A2),D0
0002DC92 <AmiBlitz3.ab3@16198>   TST.w -$2(A2,D0.L)
0002DC96 <AmiBlitz3.ab3@16199>    BEQ.w freeerr
0002DC98 <AmiBlitz3.ab3@16200>   MOVE.w (A7)+,D2
0002DC9A <AmiBlitz3.ab3@16201> RTS
0002DC9E <AmiBlitz3.ab3@16205>   MOVE.l $0(A5),D0
0002DCA2 <AmiBlitz3.ab3@16206>    BNE.b ucodeskip
0002DCA4 <AmiBlitz3.ab3@16207>   MOVEQ.l #-$01,D0
0002DCA8 <AmiBlitz3.ab3@16208> BRA.b usedcodef
0002DCAC <AmiBlitz3.ab3@16211>   SUB.l $0(A5),D0
0002DCAE <AmiBlitz3.ab3@16214>   LSR.w #8,D0
0002DCB2 <AmiBlitz3.ab3@16219>    MOVE.l $0(A5),D0
0002DCB6 <AmiBlitz3.ab3@16220>    BNE.b ucodeskip2
0002DCB8 <AmiBlitz3.ab3@16221>   MOVEQ.l #-$01,D0
0002DCBC <AmiBlitz3.ab3@16222> BRA.b usedcode2f
0002DCC0 <AmiBlitz3.ab3@16225>   SUB.l $0(A5),D0                                          ;usedcode2
0002DCC2 <AmiBlitz3.ab3@16226>   LSR.w #8,D0
0002DCC4 <AmiBlitz3.ab3@16229>   LSR.w #8,D0
0002DCC6 <AmiBlitz3.ab3@16234>   MOVE.l D0,-(A7)
0002DCC8 <AmiBlitz3.ab3@16237>   MOVE.l (A7)+,D0
0002DCCA <AmiBlitz3.ab3@16240>   MOVE.l D0,D0
0002DCCE <AmiBlitz3.ab3@16246>   BSR.w JL_0_A9A0
0002DCD2 <AmiBlitz3.ab3@16248>   MOVE.w -$2(A2,D0.L),D3
0002DCD6 <AmiBlitz3.ab3@16249>   CMP.w #$9,D3
0002DCDA <AmiBlitz3.ab3@16250>    BCC.w doused__skip
0002DCDE <AmiBlitz3.ab3@16254>   LEA usedcode(PC),A0
0002DCE2 <AmiBlitz3.ab3@16255>   LEA usedcodef(PC),A1
0002DCE8 <AmiBlitz3.ab3@16257>   ANDI.w #$F1FF,$E+4(A0)                                   ;and #$f1ff,ucodediv-usedcode(a0) org source
0002DCEC <AmiBlitz3.ab3@16258>   ANDI.w #$7,D3
0002DCEE <AmiBlitz3.ab3@16259>   LSL.w #8,D3
0002DCF0 <AmiBlitz3.ab3@16260>   LSL.w #1,D3
0002DCF4 <AmiBlitz3.ab3@16261>   OR.w D3,$E+4(A0)                                         ;or  d3,ucodediv-usedcode(a0) org source
0002DCF8 <AmiBlitz3.ab3@16262> BRA.w doused__skip2
0002DCFC <AmiBlitz3.ab3@16267>   LEA usedcode2(PC),A0
0002DD00 <AmiBlitz3.ab3@16268>   LEA usedcode2f(PC),A1
0002DD06 <AmiBlitz3.ab3@16270>   ANDI.w #$F1FF,$10+4(A0)                                  ;and #$f1ff,ucodediv2-usedcode2(a0) org source
0002DD08 <AmiBlitz3.ab3@16271>   SUBQ.w #8,D3
0002DD0A <AmiBlitz3.ab3@16272>   LSL.w #8,D3
0002DD0C <AmiBlitz3.ab3@16273>   LSL.w #1,D3
0002DD10 <AmiBlitz3.ab3@16274>   OR.w D3,$10+4(A0)                                        ;or  d3,ucodediv2-usedcode2(a0) org source
0002DD14 <AmiBlitz3.ab3@16277>   MOVE.w -$6(A2,D0.L),D3
0002DD18 <AmiBlitz3.ab3@16278>   MOVE.w D3,$C+4(A0)                                       ;move d3,ucodeskip-usedcode+2(a0) org source
0002DD1A <AmiBlitz3.ab3@16279>   ADDQ.w #4,D3
0002DD1E <AmiBlitz3.ab3@16280>   MOVE.w D3,$2(A0)
0002DD24 <AmiBlitz3.ab3@16281>   MOVE.w regnum,D1
0002DD28 <AmiBlitz3.ab3@16282>    BEQ.w doused__skip3
0002DD2C <AmiBlitz3.ab3@16283>   MOVE.w usedprep(PC),D1
0002DD30 <AmiBlitz3.ab3@16284>    BSR.w writeword
0002DD34 <AmiBlitz3.ab3@16287>   BSR.w pokecode
0002DD3A <AmiBlitz3.ab3@16288>   MOVE.w regnum,D1
0002DD3E <AmiBlitz3.ab3@16289>    BEQ.w doused__skip4
0002DD40 <AmiBlitz3.ab3@16290>   LSL.w #8,D1
0002DD42 <AmiBlitz3.ab3@16291>   LSL.w #1,D1
0002DD46 <AmiBlitz3.ab3@16292>   OR.w usedfix(PC),D1
0002DD4A <AmiBlitz3.ab3@16293>    BSR.w writeword
0002DD4E <AmiBlitz3.ab3@16294>   MOVE.w useddone(PC),D1
0002DD52 <AmiBlitz3.ab3@16295>    BSR.w writeword
0002DD54 <AmiBlitz3.ab3@16298>    MOVEQ.l #$02,D2
0002DD58 <AmiBlitz3.ab3@16299> BRA.w get1bytemain
0002DD5C <AmiBlitz3.ab3@16307>    BSR.w JL_0_A9A0
0002DD5E <AmiBlitz3.ab3@16309>   MOVEQ.l #$00,D3
0002DD62 <AmiBlitz3.ab3@16310>   MOVE.w -$4(A2,D0.L),D3
0002DD66 <AmiBlitz3.ab3@16311>    BSR.w get1bytemain
0002DD6A <AmiBlitz3.ab3@16312> BRA.w JL_0_B46E
0002DD6E <AmiBlitz3.ab3@16319>    BSR.w get1bytemain
0002DD70 <AmiBlitz3.ab3@16320>   MOVE.w D0,-(A7)
0002DD74 <AmiBlitz3.ab3@16321>    BSR.w get1bytemain
0002DD78 <AmiBlitz3.ab3@16322>   CMP.w #$28,D0
0002DD7C <AmiBlitz3.ab3@16323>    BNE.w syntaxerr
0002DD7E <AmiBlitz3.ab3@16324>   MOVE.w (A7)+,D0
0002DD82 <AmiBlitz3.ab3@16325>    BSR.w JL_0_C340
0002DD86 <AmiBlitz3.ab3@16326>    BSR.w reget
0002DD8A <AmiBlitz3.ab3@16327>   CMP.w #$29,D0
0002DD8E <AmiBlitz3.ab3@16328>    BNE.w syntaxerr
0002DD92 <AmiBlitz3.ab3@16332>   LEA addrcode(PC),A0
0002DD96 <AmiBlitz3.ab3@16333>   LEA addrcodef(PC),A1
0002DD9C <AmiBlitz3.ab3@16334>   MOVE.w -$6(A2),$2(A0)
0002DDA0 <AmiBlitz3.ab3@16335>   MOVE.w $4(A0),D1
0002DDA4 <AmiBlitz3.ab3@16336>   ANDI.w #$FFF8,D1
0002DDAA <AmiBlitz3.ab3@16337>   OR.w regnum,D1
0002DDAE <AmiBlitz3.ab3@16338>   MOVE.w D1,$4(A0)
0002DDB2 <AmiBlitz3.ab3@16339>   MOVE.w $6(A0),D1
0002DDB6 <AmiBlitz3.ab3@16340>   ANDI.w #$F1FF,D1
0002DDBC <AmiBlitz3.ab3@16341>   MOVE.w regnum,D0
0002DDBE <AmiBlitz3.ab3@16342>   LSL.w #8,D0
0002DDC0 <AmiBlitz3.ab3@16343>   LSL.w #1,D0
0002DDC2 <AmiBlitz3.ab3@16344>   OR.w D0,D1
0002DDC6 <AmiBlitz3.ab3@16345>   MOVE.w D1,$6(A0)
0002DDCA <AmiBlitz3.ab3@16346>    BSR.w pokecode
0002DDCC <AmiBlitz3.ab3@16347>   MOVEQ.l #$03,D2
0002DDD0 <AmiBlitz3.ab3@16348> BRA.w get1bytemain
0002DDD4 <AmiBlitz3.ab3@16352>   CMP.w #-$7F4D,D0
0002DDD8 <AmiBlitz3.ab3@16353>    BHI.w JL_0_AAFE
0002DDDC <AmiBlitz3.ab3@16354> BRA.w syntaxerr
0002DDE0 <AmiBlitz3.ab3@16361> .do_null   CMP.w #NullTokenID,d0                                ;#$b581 check for lib 107 token 1 "NULL" form elomorsyslib
0002DDE4 <AmiBlitz3.ab3@16362>    BNE 'nonull
0002DDEA <AmiBlitz3.ab3@16363>    MOVE.l d0,lastinstruction
0002DDEE <AmiBlitz3.ab3@16364>    MOVE.w #$7000,d1                                            ;asm instr moveq #0,dx
0002DDF4 <AmiBlitz3.ab3@16365>    MOVE.w regnum,d0
0002DDF6 <AmiBlitz3.ab3@16366>    ASL.l #7,d0
0002DDF8 <AmiBlitz3.ab3@16367>    ASL.l #2,d0
0002DDFA <AmiBlitz3.ab3@16368>    OR.l d0,d1
0002DDFE <AmiBlitz3.ab3@16369>    BSR writeword
0002DE04 <AmiBlitz3.ab3@16370>    JSR get1bytemain
0002DE06 <AmiBlitz3.ab3@16371>    RTS
0002DE0A <AmiBlitz3.ab3@16373> 'nonull CMP.w #$c982,d0
0002DE0E <AmiBlitz3.ab3@16374>        BNE nonew_
0002DE10 <AmiBlitz3.ab3@16376>   MOVE.l a5,-(a7)
0002DE16 <AmiBlitz3.ab3@16377>   MOVE.w lastchar,-(a7)
0002DE1C <AmiBlitz3.ab3@16378>   JSR get1bytemain
0002DE20 <AmiBlitz3.ab3@16379>   CMP.w #"(",d0                                             ; use oldcode
0002DE24 <AmiBlitz3.ab3@16380>   BNE 'newcode
0002DE2A <AmiBlitz3.ab3@16381>   JSR get1bytemain
0002DE2E <AmiBlitz3.ab3@16382>   CMP.w #")",d0
0002DE32 <AmiBlitz3.ab3@16383>   BEQ 'newcode
0002DE38 <AmiBlitz3.ab3@16384>   MOVE.w (a7)+,lastchar
0002DE3A <AmiBlitz3.ab3@16385>   MOVE.l (a7)+,a5
0002DE40 <AmiBlitz3.ab3@16386>   MOVE.w lastchar,d0
0002DE44 <AmiBlitz3.ab3@16387>   BRA nonew_
0002DE46 <AmiBlitz3.ab3@16388> 'newcode  MOVE.l a0,-(a7)
0002DE4C <AmiBlitz3.ab3@16389>   TST.b blitzparloop
0002DE50 <AmiBlitz3.ab3@16390>   BNE 'err
0002DE56 <AmiBlitz3.ab3@16391>   TST.b funcparloop
0002DE5A <AmiBlitz3.ab3@16392>   BNE 'err
0002DE5E <AmiBlitz3.ab3@16393>   BRA 'ok
0002DE64 <AmiBlitz3.ab3@16394> 'err JMP errornewnotincalls
0002DE6A <AmiBlitz3.ab3@16395> 'ok  MOVE.l #$203c0000,d1
0002DE6E <AmiBlitz3.ab3@16396>   BSR writelong                                            ; 68k asm move.l #$xx,d0
0002DE70 <AmiBlitz3.ab3@16397>   MOVEQ #0,d1
0002DE74 <AmiBlitz3.ab3@16398>   MOVE.w 8(a0),d1
0002DE78 <AmiBlitz3.ab3@16399>   BSR writeword
0002DE7C <AmiBlitz3.ab3@16400>   MOVE.w #$7200,d1                                         ; 68k asm "moveq #0,d1"
0002DE80 <AmiBlitz3.ab3@16401>   BSR writeword
0002DE84 <AmiBlitz3.ab3@16402>   MOVE.w #$C002,D1                                         ;call function to alloc global mem
0002DE88 <AmiBlitz3.ab3@16403>   BSR.w tokejsr2
0002DE8A <AmiBlitz3.ab3@16404>   MOVE.l (a7)+,a0
0002DE8C <AmiBlitz3.ab3@16405>   ADDQ.l #6,a7                      ; a5 need not restore
0002DE90 <AmiBlitz3.ab3@16406>   CMP.w #")",d0
0002DE94 <AmiBlitz3.ab3@16407>   BNE 'nobracket
0002DE9A <AmiBlitz3.ab3@16408>   JSR get1bytemain
0002DE9C <AmiBlitz3.ab3@16409> 'nobracket  RTS
0002DEA0 <AmiBlitz3.ab3@16411> nonew_  CMP.w #-$7F4A,D0
0002DEA4 <AmiBlitz3.ab3@16412>    BEQ.w JL_0_A98C
0002DEA8 <AmiBlitz3.ab3@16413>   CMP.w #-$7F48,D0
0002DEAC <AmiBlitz3.ab3@16414>    BEQ.w doaddr
0002DEB0 <AmiBlitz3.ab3@16415>   CMP.w #-$7F3C,D0
0002DEB4 <AmiBlitz3.ab3@16416>    BEQ.w domaximum
0002DEB8 <AmiBlitz3.ab3@16417>   CMP.w #-$7F2F,D0
0002DEBC <AmiBlitz3.ab3@16418>    BEQ.w doused
0002DEBE <AmiBlitz3.ab3@16419>   MOVE.w D2,-(A7)
0002DEC0 <AmiBlitz3.ab3@16420>   MOVE.w D0,D1
0002DEC4 <AmiBlitz3.ab3@16421>   BCLR #$F,D1
0002DEC8 <AmiBlitz3.ab3@16423>    BSR.w searchinstr
0002DECA <AmiBlitz3.ab3@16424>   MOVE.w (A3),D1
0002DECE <AmiBlitz3.ab3@16425>   BTST #$1,D1
0002DED2 <AmiBlitz3.ab3@16426>    BEQ.w noreturn_                                         ;syntax error noreturn
0002DED6 <AmiBlitz3.ab3@16427>   BTST #$2,D1
0002DEDA <AmiBlitz3.ab3@16428>    BNE.w JL_0_AC1A
0002DEDC <AmiBlitz3.ab3@16429>   LSR.w #8,D1
0002DEE2 <AmiBlitz3.ab3@16430>   BTST #$3,$1(A3)
0002DEE6 <AmiBlitz3.ab3@16431>    BEQ.w JL_0_AB4C
0002DEEC <AmiBlitz3.ab3@16432>    JSR AJL_0_498A
0002DEF2 <AmiBlitz3.ab3@16435>    CLR.l rightsidetype
0002DEF8 <AmiBlitz3.ab3@16436>    CLR.w rightsideflagmask
0002DEFA <AmiBlitz3.ab3@16437>    MOVE.w D1,-(A7)                                         ;is library instruction
0002DEFE <AmiBlitz3.ab3@16438>   CMP.w #$7,D1
0002DF02 <AmiBlitz3.ab3@16439>    BNE.w JL_0_AB5E
0002DF04 <AmiBlitz3.ab3@16440>   MOVE.l A2,-(A7)
0002DF08 <AmiBlitz3.ab3@16441>    BSR.w makesbase
0002DF0A <AmiBlitz3.ab3@16442>   MOVEA.l (A7)+,A2
0002DF0E <AmiBlitz3.ab3@16445>     BSR.w JL_0_AFA2
0002DF10 <AmiBlitz3.ab3@16446>   MOVE.w D3,-(A7)
0002DF14 <AmiBlitz3.ab3@16447>    BSR.w get1bytemain
0002DF16 <AmiBlitz3.ab3@16448>   MOVEQ.l #$00,D1
0002DF1A <AmiBlitz3.ab3@16449>   CMP.w #$28,D0
0002DF1E <AmiBlitz3.ab3@16450>    BNE.w JL_0_AB80
0002DF24 <AmiBlitz3.ab3@16451>    JSR JL_0_66F6
0002DF26 <AmiBlitz3.ab3@16452>   TST.w D1
0002DF2A <AmiBlitz3.ab3@16453>    BEQ.w syntaxerr
0002DF2E <AmiBlitz3.ab3@16454> BRA.w JL_0_AB84
0002DF38 <AmiBlitz3.ab3@16459>   MOVE.w oldqflag,instringon
0002DF3E <AmiBlitz3.ab3@16460>   MOVEA.l lastsourcepos,A5
0002DF44 <AmiBlitz3.ab3@16463>    MOVE.w regnum,-(A7)
0002DF4E <AmiBlitz3.ab3@16464>    MOVE.w regnum,regnumstore
0002DF54 <AmiBlitz3.ab3@16465>    TST.b fpu
0002DF58 <AmiBlitz3.ab3@16466>             BEQ 'nofloat
0002DF5E <AmiBlitz3.ab3@16467>             CMP.w #$ffff,28(a3)
0002DF62 <AmiBlitz3.ab3@16468>             BNE 'nofloat
0002DF68 <AmiBlitz3.ab3@16469>             CMP.w #$3c01,34(a3)                            ;val do nofpu stuff
0002DF6C <AmiBlitz3.ab3@16470>             BEQ 'nofloat
0002DF72 <AmiBlitz3.ab3@16471>             CMP.w #$3c02,34(a3)                            ;int skip
0002DF76 <AmiBlitz3.ab3@16472>             BEQ 'quick
0002DF7A <AmiBlitz3.ab3@16473>             CMP.b #5,(a3)
0002DF7E <AmiBlitz3.ab3@16474>             BNE 'nofloat
0002DF84 <AmiBlitz3.ab3@16477>             CLR.l load_var_addr
0002DF88 <AmiBlitz3.ab3@16478> BRA 'isfpu
0002DF8E <AmiBlitz3.ab3@16481>    CLR.w regnum
0002DF90 <AmiBlitz3.ab3@16484>    MOVE.w D1,-(A7)
0002DF96 <AmiBlitz3.ab3@16485>   BTST #$3,$1(A3)
0002DF9A <AmiBlitz3.ab3@16486>    BEQ.w JL_0_ABB0
0002DF9E <AmiBlitz3.ab3@16505>   MOVE.w $6(A7),D1
0002DFA4 <AmiBlitz3.ab3@16506>   MOVE.w d1,peeksize
0002DFA8 <AmiBlitz3.ab3@16516>   ORI.w #$7000,D1
0002DFAC <AmiBlitz3.ab3@16517>   BSR.w writeword                                          ;write peekmode
0002DFB2 <AmiBlitz3.ab3@16520>   ADDQ.w #1,regnum
0002DFB4 <AmiBlitz3.ab3@16521>   MOVE.w (A7),D1
0002DFBC <AmiBlitz3.ab3@16524>   MOVE.w 2(a7),tempregnum
0002DFC2 <AmiBlitz3.ab3@16525>   MOVE.w parnum,-(a7)                                       ;7.2014 parnum need store to allow functioncall in parameter >6
0002DFC8 <AmiBlitz3.ab3@16526>   CLR.w parnum                                              ;7.2014
0002DFCE <AmiBlitz3.ab3@16527>   JSR JL_0_4878                                             ;write code of blitzfunc
0002DFD4 <AmiBlitz3.ab3@16528>   MOVE.w (a7)+,parnum                                       ;7.2014 new restore parnum
0002DFD6 <AmiBlitz3.ab3@16529>   TST.w (A7)+
0002DFDA <AmiBlitz3.ab3@16530>   BEQ.w JL_0_ABC6
0002DFDE <AmiBlitz3.ab3@16531>   CMP.w #")",D0                                             ; check if ) here for correct end of blitzlib function call
0002DFE2 <AmiBlitz3.ab3@16532>   BNE.w errorbracketmiss                                    ; was syntax error
0002DFE8 <AmiBlitz3.ab3@16533>   CLR.l lasttoken
0002DFEC <AmiBlitz3.ab3@16534>   BSR.w get1bytemain
0002DFEE <AmiBlitz3.ab3@16537>    MOVE.w (A7)+,D1
0002DFF4 <AmiBlitz3.ab3@16538>    MOVE.w D1,regnum
0002DFF8 <AmiBlitz3.ab3@16539>    BEQ.w JL_0_ABDE
0002DFFE <AmiBlitz3.ab3@16540>    CMP.w #$3c01,24(a2)                                     ;val skipped
0002E002 <AmiBlitz3.ab3@16541>    BNE 'noval
0002E008 <AmiBlitz3.ab3@16542>    TST.b fpu
0002E00C <AmiBlitz3.ab3@16543>    BEQ 'noval
0002E012 <AmiBlitz3.ab3@16544>    CLR.l load_var_addr
0002E014 <AmiBlitz3.ab3@16545>    MOVEQ #0,d1
0002E01A <AmiBlitz3.ab3@16546>    MOVE.w regnum,d1
0002E01C <AmiBlitz3.ab3@16547>    LSL.l #7,d1
0002E022 <AmiBlitz3.ab3@16548>    OR.l #$f2000000,d1
0002E026 <AmiBlitz3.ab3@16549>    BSR writelong
0002E02A <AmiBlitz3.ab3@16550> BRA JL_0_ABDE
0002E030 <AmiBlitz3.ab3@16554>    CMP.w #$3c02,24(a2)                                     ;int skipped
0002E034 <AmiBlitz3.ab3@16555>    BEQ 'quick
0002E038 <AmiBlitz3.ab3@16556>    CMP.b #5,d2
0002E03C <AmiBlitz3.ab3@16557>    BNE 'nofpu
0002E042 <AmiBlitz3.ab3@16558>    TST.b fpu
0002E046 <AmiBlitz3.ab3@16559>    BEQ 'nofpu
0002E04C <AmiBlitz3.ab3@16564>    CLR.l load_var_addr
0002E050 <AmiBlitz3.ab3@16565> BRA JL_0_ABDE
0002E052 <AmiBlitz3.ab3@16568>   LSL.w #8,D1
0002E054 <AmiBlitz3.ab3@16569>   LSL.w #1,D1
0002E058 <AmiBlitz3.ab3@16570>   ORI.w #$2000,D1
0002E05C <AmiBlitz3.ab3@16571>   BSR.w writeword                                          ;write move.l d0,dx
0002E062 <AmiBlitz3.ab3@16572>   TST.b fpu
0002E066 <AmiBlitz3.ab3@16573>   BEQ JL_0_ABDE
0002E068 <AmiBlitz3.ab3@16574>   MOVEQ #0,d1
0002E06E <AmiBlitz3.ab3@16575>   MOVE.w regnum,d1
0002E070 <AmiBlitz3.ab3@16576>   LSL.l #7,d1
0002E076 <AmiBlitz3.ab3@16577>   OR.l #$f2000000,d1
0002E078 <AmiBlitz3.ab3@16581>        MOVE.w (A7)+,D3
0002E07C <AmiBlitz3.ab3@16582>        BEQ.w JL_0_ABFC
0002E082 <AmiBlitz3.ab3@16583>        TST.b fpu
0002E086 <AmiBlitz3.ab3@16584>        BEQ 'nofpu
0002E088 <AmiBlitz3.ab3@16585>       MOVE.l d0,-(a7)
0002E08A <AmiBlitz3.ab3@16586>        MOVE.l a0,-(a7)
0002E090 <AmiBlitz3.ab3@16587>        MOVE.l stacktrack,d1
0002E096 <AmiBlitz3.ab3@16588>        LEA fpustackbase,a0
0002E09E <AmiBlitz3.ab3@16589>        MOVE.w 0(a0,d1),regmask
0002E0A0 <AmiBlitz3.ab3@16590>        MOVE.l (a7)+,a0
0002E0A4 <AmiBlitz3.ab3@16591>       MOVE.w #8,d0
0002E0A8 <AmiBlitz3.ab3@16594>       BEQ 'ready
0002E0AE <AmiBlitz3.ab3@16595>       BTST d0,regmask
0002E0B2 <AmiBlitz3.ab3@16596>       BEQ 'noa7
0002E0B4 <AmiBlitz3.ab3@16597>       MOVEQ #0,d1
0002E0B6 <AmiBlitz3.ab3@16598>       MOVE.w d0,d1
0002E0B8 <AmiBlitz3.ab3@16599>       SUBQ.w #1,d1
0002E0BA <AmiBlitz3.ab3@16600>       ASL #7,d1
0002E0C0 <AmiBlitz3.ab3@16602>       OR.l #$f21f5400,d1                                   ;fmove.d (a7)+
0002E0C4 <AmiBlitz3.ab3@16603>       BSR writelong
0002E0CA <AmiBlitz3.ab3@16604>       SUBQ.l #2,stacktrack
0002E0CC <AmiBlitz3.ab3@16607>       SUBQ.w #1,d0
0002E0D0 <AmiBlitz3.ab3@16608>       BNE 'loop
0002E0D2 <AmiBlitz3.ab3@16611>       MOVE.l (a7)+,d0
0002E0D8 <AmiBlitz3.ab3@16612>       SUBQ.l #2,stacktrack                                 ;int track
0002E0DC <AmiBlitz3.ab3@16615>    MOVE.w #$4CDF,D1
0002E0E0 <AmiBlitz3.ab3@16616>    BSR.w writeword                                         ;write movem.l (a7)+,
0002E0E2 <AmiBlitz3.ab3@16617>   MOVEQ.l #$00,D1
0002E0E4 <AmiBlitz3.ab3@16618>   MOVEQ.l #$0F,D4
0002E0E6 <AmiBlitz3.ab3@16621>     LSL.w #1,D3
0002E0E8 <AmiBlitz3.ab3@16622>     ROXR.w #1,D1
0002E0EC <AmiBlitz3.ab3@16623>   DBF D4,JL_0_ABF0
0002E0F0 <AmiBlitz3.ab3@16625>    BSR.w writeword
0002E0F6 <AmiBlitz3.ab3@16626>    TST.b fast
0002E0FA <AmiBlitz3.ab3@16627>    BEQ JL_0_ABFC
0002E100 <AmiBlitz3.ab3@16628>    TST.w regnum
0002E104 <AmiBlitz3.ab3@16629>    BEQ JL_0_ABFC
0002E10A <AmiBlitz3.ab3@16630>    CMP.w #$3c0e,$1c(a3)                                    ;true
0002E10E <AmiBlitz3.ab3@16631>    BNE 'l1
0002E114 <AmiBlitz3.ab3@16632>    MOVE.w regnum,d1
0002E116 <AmiBlitz3.ab3@16633>    ASL.l #8,d1
0002E118 <AmiBlitz3.ab3@16634>    ASL.l #1,d1
0002E11C <AmiBlitz3.ab3@16635>    OR.w #$70ff,d1
0002E126 <AmiBlitz3.ab3@16636>    SUB.l #12,destpointer
0002E12A <AmiBlitz3.ab3@16637>    BSR writeword
0002E130 <AmiBlitz3.ab3@16640>   CMP.w #$3c0f,$1c(a3)                                     ;false
0002E134 <AmiBlitz3.ab3@16641>    BNE 'l2
0002E13A <AmiBlitz3.ab3@16642>     MOVE.w regnum,d1
0002E13C <AmiBlitz3.ab3@16643>     ASL.l #8,d1
0002E13E <AmiBlitz3.ab3@16644>     ASL.l #1,d1
0002E142 <AmiBlitz3.ab3@16645>     OR.w #$7000,d1
0002E14C <AmiBlitz3.ab3@16646>     SUB.l #12,destpointer
0002E150 <AmiBlitz3.ab3@16647>     BSR writeword
0002E152 <AmiBlitz3.ab3@16651>    MOVE.w (A7)+,D2
0002E156 <AmiBlitz3.ab3@16652>   CMP.w #$7,D2                                             ;destination var type
0002E15A <AmiBlitz3.ab3@16653>    BNE.w JL_0_AC16
0002E160 <AmiBlitz3.ab3@16654>   MOVE.w putstlen,D1
0002E166 <AmiBlitz3.ab3@16655>   OR.w regnum,D1
0002E16A <AmiBlitz3.ab3@16656>    BSR.w writeword
0002E16E <AmiBlitz3.ab3@16659> BRA.w JL_0_AF66
0002E172 <AmiBlitz3.ab3@16664>   MOVE.w $6(A3),D1
0002E176 <AmiBlitz3.ab3@16665>    BSR.w uselib
0002E17A <AmiBlitz3.ab3@16666>    BSR.w JL_0_AD40
0002E17C <AmiBlitz3.ab3@16667>   MOVE.l D4,D1
0002E17E <AmiBlitz3.ab3@16668>   MOVE.l D5,-(A7)
0002E182 <AmiBlitz3.ab3@16669>    BSR.w JL_0_AD38
0002E186 <AmiBlitz3.ab3@16670>   MOVE.w $A(A1),-(A7)
0002E188 <AmiBlitz3.ab3@16671>   ADDQ.w #8,A3
0002E18A <AmiBlitz3.ab3@16672>   MOVE.w (A3)+,-(A7)
0002E18C <AmiBlitz3.ab3@16673>   MOVE.l A3,-(A7)
0002E190 <AmiBlitz3.ab3@16674>    BSR.w get1bytemain
0002E192 <AmiBlitz3.ab3@16675>   MOVE.w D0,-(A7)
0002E194 <AmiBlitz3.ab3@16676>   MOVEQ.l #$00,D3
0002E19A <AmiBlitz3.ab3@16677>   JSR checka4a5
0002E19C <AmiBlitz3.ab3@16679>   MOVE.b (A3)+,D1
0002E1A0 <AmiBlitz3.ab3@16680>    BMI.w JL_0_AC6A
0002E1A2 <AmiBlitz3.ab3@16681>   MOVEQ.l #$03,D2
0002E1A4 <AmiBlitz3.ab3@16682>   ADDQ.w #1,D3
0002E1A8 <AmiBlitz3.ab3@16683>   MOVEM.l D3/A3,-(A7)
0002E1AE <AmiBlitz3.ab3@16684>   MOVE.b funcparloop,-(a7)
0002E1B4 <AmiBlitz3.ab3@16685>   CLR.b funcparloop
0002E1BA <AmiBlitz3.ab3@16686>   MOVE.b blitzparloop,-(a7)
0002E1C2 <AmiBlitz3.ab3@16687>   MOVE.b #1,blitzparloop
0002E1C8 <AmiBlitz3.ab3@16688>   MOVE.l lasttoken,-(a7)
0002E1CE <AmiBlitz3.ab3@16689>   MOVE.l leftsidetype,-(a7)
0002E1D4 <AmiBlitz3.ab3@16690>   MOVE.l rightsidetype,-(a7)
0002E1D8 <AmiBlitz3.ab3@16691>   BSR.w peval
0002E1DE <AmiBlitz3.ab3@16692>   MOVE.l (a7)+,rightsidetype
0002E1E4 <AmiBlitz3.ab3@16693>   MOVE.l (a7)+,leftsidetype
0002E1EA <AmiBlitz3.ab3@16694>   MOVE.l (a7)+,lasttoken
0002E1F0 <AmiBlitz3.ab3@16695>   MOVE.b (a7)+,blitzparloop
0002E1F6 <AmiBlitz3.ab3@16696>   MOVE.b (a7)+,funcparloop
0002E1FC <AmiBlitz3.ab3@16697>   SUBQ.w #4,a2offset
0002E200 <AmiBlitz3.ab3@16698>   MOVEM.l (A7)+,D3/A3
0002E204 <AmiBlitz3.ab3@16699>   CMP.w #$2C,D0
0002E208 <AmiBlitz3.ab3@16700>    BEQ.w JL_0_AC40
0002E20A <AmiBlitz3.ab3@16701>   TST.b (A3)
0002E20E <AmiBlitz3.ab3@16702>    BPL.w syntaxerr
0002E210 <AmiBlitz3.ab3@16705>   MOVE.w (A7)+,D1
0002E214 <AmiBlitz3.ab3@16706>    BSR.w JL_0_AD04
0002E216 <AmiBlitz3.ab3@16707>   MOVEA.l (A7)+,A3
0002E218 <AmiBlitz3.ab3@16708>   SUBQ.w #1,D3
0002E21C <AmiBlitz3.ab3@16709>    BMI.w JL_0_ACBE
0002E21E <AmiBlitz3.ab3@16712>   TST.b (A3)+
0002E222 <AmiBlitz3.ab3@16713>    BPL.w JL_0_AC78
0002E224 <AmiBlitz3.ab3@16714>   SUBQ.w #1,A3
0002E226 <AmiBlitz3.ab3@16717>     MOVEQ.l #$00,D1
0002E228 <AmiBlitz3.ab3@16718>     MOVE.b -(A3),D1
0002E22C <AmiBlitz3.ab3@16719>     BTST #$4,D1
0002E230 <AmiBlitz3.ab3@16720>      BNE.w JL_0_ACAA
0002E236 <AmiBlitz3.ab3@16721>     CMP.w regnum,D1
0002E23A <AmiBlitz3.ab3@16722>      BCC.w JL_0_AC9E
0002E23C <AmiBlitz3.ab3@16723>     BSET D1,D5
0002E23E <AmiBlitz3.ab3@16724>     MOVEQ.l #$0F,D0
0002E240 <AmiBlitz3.ab3@16725>     SUB.w D1,D0
0002E242 <AmiBlitz3.ab3@16726>     BSET D0,D4
0002E244 <AmiBlitz3.ab3@16729>     LSL.w #8,D1
0002E246 <AmiBlitz3.ab3@16730>     LSL.w #1,D1
0002E24A <AmiBlitz3.ab3@16731>     ORI.w #$201F,D1
0002E24E <AmiBlitz3.ab3@16732>   BRA.w JL_0_ACB6
0002E252 <AmiBlitz3.ab3@16735>     ANDI.w #$7,D1
0002E254 <AmiBlitz3.ab3@16736>     LSL.w #8,D1
0002E256 <AmiBlitz3.ab3@16737>     LSL.w #1,D1
0002E25A <AmiBlitz3.ab3@16738>     ORI.w #$205F,D1
0002E25E <AmiBlitz3.ab3@16741>      BSR.w writeword
0002E262 <AmiBlitz3.ab3@16742>   DBF D3,JL_0_AC80
0002E268 <AmiBlitz3.ab3@16745>   MOVE.w (A7)+,libjsr+2
0002E26E <AmiBlitz3.ab3@16746>   MOVE.w (A7)+,libbase+2
0002E274 <AmiBlitz3.ab3@16747>   MOVE.l libbase,D1
0002E278 <AmiBlitz3.ab3@16748>    BSR.w writelong
0002E27E <AmiBlitz3.ab3@16749>   MOVE.l libjsr,D1
0002E282 <AmiBlitz3.ab3@16750>    BSR.w writelong
0002E288 <AmiBlitz3.ab3@16751>   MOVE.w regnum,D1
0002E28C <AmiBlitz3.ab3@16752>    BEQ.w JL_0_ACF4
0002E28E <AmiBlitz3.ab3@16753>   LSL.w #8,D1
0002E290 <AmiBlitz3.ab3@16754>   LSL.w #1,D1
0002E294 <AmiBlitz3.ab3@16755>   ORI.w #$2000,D1
0002E298 <AmiBlitz3.ab3@16756>    BSR.w writeword
0002E29A <AmiBlitz3.ab3@16759>   MOVE.l (A7)+,D1
0002E29E <AmiBlitz3.ab3@16760>    BSR.w JL_0_AD38
0002E2A4 <AmiBlitz3.ab3@16761>    JSR restorea4a5
0002E2A6 <AmiBlitz3.ab3@16762>   MOVEQ.l #$03,D2
0002E2AA <AmiBlitz3.ab3@16763>    BSR.w reget
0002E2AE <AmiBlitz3.ab3@16764> BRA.w JL_0_AF66
0002E2B0 <AmiBlitz3.ab3@16767>   TST.w D3
0002E2B4 <AmiBlitz3.ab3@16768>    BEQ.w JL_0_AD1E
0002E2B8 <AmiBlitz3.ab3@16769>   CMP.w #$28,D1
0002E2BC <AmiBlitz3.ab3@16770>    BNE.w syntaxerr
0002E2C0 <AmiBlitz3.ab3@16771>   CMP.w #$29,D0
0002E2C4 <AmiBlitz3.ab3@16772>    BNE.w syntaxerr
0002E2C8 <AmiBlitz3.ab3@16773> BRA.w get1bytemain
0002E2CC <AmiBlitz3.ab3@16776>   CMP.w #$28,D1
0002E2D0 <AmiBlitz3.ab3@16777>    BNE.w JL_0_AD36
0002E2D4 <AmiBlitz3.ab3@16778>    BSR.w get1bytemain
0002E2D8 <AmiBlitz3.ab3@16779>   CMP.w #$29,D0
0002E2DC <AmiBlitz3.ab3@16780>    BNE.w syntaxerr
0002E2E0 <AmiBlitz3.ab3@16781> BRA.w get1bytemain
0002E2E2 <AmiBlitz3.ab3@16784> RTS
0002E2E4 <AmiBlitz3.ab3@16787>   TST.w D1
0002E2E8 <AmiBlitz3.ab3@16788>    BNE.w writelong
0002E2EA <AmiBlitz3.ab3@16789> RTS
0002E2EE <AmiBlitz3.ab3@16793>   MOVE.w #$48E7,D4
0002E2F0 <AmiBlitz3.ab3@16794>   SWAP D4
0002E2F2 <AmiBlitz3.ab3@16795>   CLR.w D4
0002E2F6 <AmiBlitz3.ab3@16796>   MOVE.w #$4CDF,D5
0002E2F8 <AmiBlitz3.ab3@16797>   SWAP D5
0002E2FA <AmiBlitz3.ab3@16798>   CLR.w D5
0002E300 <AmiBlitz3.ab3@16799>   MOVE.w regnum,D1
0002E304 <AmiBlitz3.ab3@16800>    BEQ.w JL_0_AD74
0002E308 <AmiBlitz3.ab3@16801>   BSET #$F,D4
0002E30C <AmiBlitz3.ab3@16802>   BSET #$0,D5
0002E310 <AmiBlitz3.ab3@16803>   CMP.w #$2,D1
0002E314 <AmiBlitz3.ab3@16804>    BCS.w JL_0_AD72
0002E318 <AmiBlitz3.ab3@16807>   BSET #$E,D4
0002E31C <AmiBlitz3.ab3@16808>   BSET #$1,D5
0002E31E <AmiBlitz3.ab3@16811> RTS
0002E324 <AmiBlitz3.ab3@16814>   TST.w fuckpos
0002E328 <AmiBlitz3.ab3@16815>   BNE.w JL_0_AD6A
0002E32A <AmiBlitz3.ab3@16816> RTS
0002E32C <AmiBlitz3.ab3@16819> fuckpos:  Ds.w 1
0002E332 <AmiBlitz3.ab3@16823>   MOVE.w sbasegot,D1
0002E336 <AmiBlitz3.ab3@16824>    BEQ.w makesbase__skip
0002E33A <AmiBlitz3.ab3@16828>   MOVE.w sbgot(PC),D1
0002E33E <AmiBlitz3.ab3@16829>    BNE.w makesbase__skip2
0002E346 <AmiBlitz3.ab3@16833>   MOVE.w #$0002,sbgot
0002E34C <AmiBlitz3.ab3@16834>   MOVE.w movea3a7,D1
0002E350 <AmiBlitz3.ab3@16835> BRA.w writeword
0002E352 <AmiBlitz3.ab3@16838> RTS
0002E35A <AmiBlitz3.ab3@16843>   MOVE.w #$0001,sbgot                                      ;voodoo magic! - Will it work?
0002E360 <AmiBlitz3.ab3@16846>   MOVE.l #$C601,D1
0002E368 <AmiBlitz3.ab3@16847>   MOVE.w #-1,sbasegot
0002E36E <AmiBlitz3.ab3@16848>   MOVE.l d1,lastinstruction
0002E372 <AmiBlitz3.ab3@16849>   BSR.w Atokejsr
0002E374 <AmiBlitz3.ab3@16850> RTS
0002E37E <AmiBlitz3.ab3@16855>   MOVE.l data1,litdata1
0002E384 <AmiBlitz3.ab3@16856>   TST.b fast
0002E388 <AmiBlitz3.ab3@16857>   BEQ 'l50                                                 ;optistring  seem impossible to get work
0002E38C <AmiBlitz3.ab3@16861> BRA 'l50                                                   ;to deactivate
0002E392 <AmiBlitz3.ab3@16867>   TST.b optistring
0002E396 <AmiBlitz3.ab3@16868>   BNE.s 'l21
0002E39C <AmiBlitz3.ab3@16869>   CLR.b string1
0002E3A4 <AmiBlitz3.ab3@16870>   MOVE.b #1,optistring
0002E3AA <AmiBlitz3.ab3@16871>   TST.b nostringopt
0002E3AE <AmiBlitz3.ab3@16872>   BNE 'l21
0002E3B0 <AmiBlitz3.ab3@16873>   MOVE.l a5,a4
0002E3B2 <AmiBlitz3.ab3@16874>   SUBQ.l #1,a4
0002E3B4 <AmiBlitz3.ab3@16877>     TST.b (a4)
0002E3B8 <AmiBlitz3.ab3@16878>     BMI 'l19a
0002E3BC <AmiBlitz3.ab3@16879>     BEQ.s 'l20
0002E3C0 <AmiBlitz3.ab3@16880>     CMP.b #$22,(a4)
0002E3C4 <AmiBlitz3.ab3@16881>     BEQ.s 'l19
0002E3CA <AmiBlitz3.ab3@16884>     TST.w string1
0002E3CE <AmiBlitz3.ab3@16885>     BNE 'l11
0002E3D2 <AmiBlitz3.ab3@16886>     CMP.b #":",(a4)
0002E3D6 <AmiBlitz3.ab3@16887>     BEQ.s 'l20
0002E3DA <AmiBlitz3.ab3@16888>     CMP.b #";",(a4)
0002E3DE <AmiBlitz3.ab3@16889>     BEQ.s 'l20
0002E3E2 <AmiBlitz3.ab3@16890>     CMP.b #"+",(a4)
0002E3E6 <AmiBlitz3.ab3@16891>     BEQ.s 'l21
0002E3EA <AmiBlitz3.ab3@16892>     CMP.b #",",(a4)
0002E3EE <AmiBlitz3.ab3@16893>     BEQ.s 'l20                                             ;was l21
0002E3F2 <AmiBlitz3.ab3@16894>     CMP.b #")",(a4)
0002E3F6 <AmiBlitz3.ab3@16895>     BEQ.s 'l20                                             ;was l21
0002E3F8 <AmiBlitz3.ab3@16898>     ADDQ.l #1,a4
0002E3FC <AmiBlitz3.ab3@16899> BRA.s 'l10
0002E404 <AmiBlitz3.ab3@16902>   BCHG #0,string1
0002E408 <AmiBlitz3.ab3@16903> BRA 'l18
0002E40A <AmiBlitz3.ab3@16906>   ADDQ.l #1,a4
0002E40C <AmiBlitz3.ab3@16907>   TST.b (a4)
0002E410 <AmiBlitz3.ab3@16908>   BEQ 'l21
0002E414 <AmiBlitz3.ab3@16909> BRA 'l11
0002E416 <AmiBlitz3.ab3@16912>   MOVE.l a5,a4
0002E418 <AmiBlitz3.ab3@16913>   SUBQ.l #1,a4
0002E41C <AmiBlitz3.ab3@16916>   CMP.b #$20,-(a4)
0002E420 <AmiBlitz3.ab3@16917>   BEQ 'll1
0002E424 <AmiBlitz3.ab3@16918>   CMP.b #"+",(a4)
0002E428 <AmiBlitz3.ab3@16919>   BEQ 'l21
0002E430 <AmiBlitz3.ab3@16934>   MOVE.b #2,optistring
0002E438 <AmiBlitz3.ab3@16937>   CMP.b #2,optistring
0002E43C <AmiBlitz3.ab3@16938>   BEQ.s 'l100
0002E440 <AmiBlitz3.ab3@16941>   BSR.w makesbase
0002E444 <AmiBlitz3.ab3@16942>   BSR.w pokedata1                                          ;writestringsizespace
0002E448 <AmiBlitz3.ab3@16943>   BSR.w pokedata1
0002E44A <AmiBlitz3.ab3@16946>   MOVEQ.l #$00,D2
0002E450 <AmiBlitz3.ab3@16949>     MOVE.l a5,lastsourcepos
0002E452 <AmiBlitz3.ab3@16950>     MOVEQ #0,d0
0002E454 <AmiBlitz3.ab3@16951>     MOVE.b (a5)+,d0
0002E456 <AmiBlitz3.ab3@16952>     TST.w D0
0002E45A <AmiBlitz3.ab3@16953>      BEQ.w notqerr
0002E45E <AmiBlitz3.ab3@16954>     CMP.w #$22,D0                                          ; --- " ---
0002E462 <AmiBlitz3.ab3@16955>      BEQ.w JL_0_ADF6
0002E466 <AmiBlitz3.ab3@16956>     CMP.b #"\",d0
0002E46A <AmiBlitz3.ab3@16957>      BNE 'l1
0002E46E <AmiBlitz3.ab3@16958>     CMP.b #"\",(a5)
0002E472 <AmiBlitz3.ab3@16959>      BNE 'l1
0002E478 <AmiBlitz3.ab3@16960>     TST.b newsyntax
0002E47C <AmiBlitz3.ab3@16961>      BEQ 'l1
0002E482 <AmiBlitz3.ab3@16962>     CMP.w #"\\",1(a5)                                      ; new compiler constants
0002E486 <AmiBlitz3.ab3@16963>     BNE 'l2
0002E488 <AmiBlitz3.ab3@16964>     ADDQ #2,a5
0002E48A <AmiBlitz3.ab3@16967>     ADDQ.w #1,D2
0002E48C <AmiBlitz3.ab3@16968>     MOVE.w D0,D1
0002E490 <AmiBlitz3.ab3@16969>     BSR.w pokedata1b                                        ;writestring
0002E494 <AmiBlitz3.ab3@16970> BRA.w writestring
0002E49A <AmiBlitz3.ab3@16973>     JSR check_newconstants
0002E49E <AmiBlitz3.ab3@16974> BRA writestring
0002E4A4 <AmiBlitz3.ab3@16977>   NOT instringon
0002E4AA <AmiBlitz3.ab3@16978>   MOVE.w dontwrite,D1
0002E4AE <AmiBlitz3.ab3@16979>   BNE.w JL_0_AE0A
0002E4B6 <AmiBlitz3.ab3@16980>   CMP.b #2,optistring
0002E4BA <AmiBlitz3.ab3@16981>   BEQ 'l10
0002E4C0 <AmiBlitz3.ab3@16982>     MOVEA.l litdata1,A0
0002E4C2 <AmiBlitz3.ab3@16983>     CLR.w (A0)+                                            ;writesize
0002E4C4 <AmiBlitz3.ab3@16984>     MOVE.w D2,(A0)
0002E4C8 <AmiBlitz3.ab3@16988>   BSR.w JL_0_AEA4                                          ;writestringconstantcode
0002E4CE <AmiBlitz3.ab3@16989>   ADDQ.l #1,data1
0002E4D6 <AmiBlitz3.ab3@16990>   BCLR #$0,data1+3
0002E4D8 <AmiBlitz3.ab3@16991>   MOVEQ.l #$07,D2
0002E4DC <AmiBlitz3.ab3@16992> BRA.w get1bytemain
0002E4E0 <AmiBlitz3.ab3@16996>   BSR.w makename2
0002E4E4 <AmiBlitz3.ab3@16997>   BSR.w findlabel2
0002E4E8 <AmiBlitz3.ab3@16998>   BEQ.w JL_0_AE4A
0002E4EC <AmiBlitz3.ab3@16999>   BSR.w addlabelhash
0002E4F0 <AmiBlitz3.ab3@17000>   CLR.l $4(A2)
0002E4F4 <AmiBlitz3.ab3@17001>   CLR.l $8(A2)
0002E4FC <AmiBlitz3.ab3@17003>   MOVE.w linenumat+2,$10(A2)
0002E502 <AmiBlitz3.ab3@17004>   MOVE.w linenumat,d0
0002E504 <AmiBlitz3.ab3@17005>   MOVEQ #0,d1
0002E508 <AmiBlitz3.ab3@17006>   MOVE.b -1(a2,d7),d1
0002E50C <AmiBlitz3.ab3@17007>   MOVE.w d0,0(a2,d1)
0002E510 <AmiBlitz3.ab3@17008> BRA.w JL_0_AE52
0002E514 <AmiBlitz3.ab3@17011>   TST.l $8(A2)
0002E518 <AmiBlitz3.ab3@17012>   BNE.w JL_0_AE88
0002E51E <AmiBlitz3.ab3@17015>   MOVEA.l _execbase,A6
0002E520 <AmiBlitz3.ab3@17016>   MOVEQ.l #$0C+2,D0
0002E522 <AmiBlitz3.ab3@17017>   MOVEQ.l #$01,D1
0002E528 <AmiBlitz3.ab3@17018>   MOVE.l mempool,a0
0002E52C <AmiBlitz3.ab3@17019>   JSR _AllocPooled(a6)
0002E52E <AmiBlitz3.ab3@17021>   MOVEA.l D0,A0
0002E532 <AmiBlitz3.ab3@17022>   MOVE.l $4(A2),(A0)
0002E536 <AmiBlitz3.ab3@17023>   MOVE.l A0,$4(A2)
0002E53E <AmiBlitz3.ab3@17024>   MOVE.l destpointer,$4(A0)
0002E542 <AmiBlitz3.ab3@17025>   ADDQ.l #2,$4(A0)
0002E54A <AmiBlitz3.ab3@17026>   MOVE.w procnum,$8(A0)
0002E552 <AmiBlitz3.ab3@17027>   MOVE.w linenumat+2,$A(A0)
0002E55A <AmiBlitz3.ab3@17028>   MOVE.w linenumat,$c(a0)
0002E55C <AmiBlitz3.ab3@17029> RTS
0002E560 <AmiBlitz3.ab3@17032>   MOVE.l $4(A2),D1
0002E564 <AmiBlitz3.ab3@17033>   BTST #$0,D1
0002E568 <AmiBlitz3.ab3@17034>    BNE.w illlaberr
0002E56E <AmiBlitz3.ab3@17035>   MOVE.w procnum,D1
0002E572 <AmiBlitz3.ab3@17036>   CMP.w $10(A2),D1
0002E576 <AmiBlitz3.ab3@17037>    BNE.w referr
0002E578 <AmiBlitz3.ab3@17038> RTS
0002E57A <AmiBlitz3.ab3@17042>   MOVE.w D0,-(A7)
0002E582 <AmiBlitz3.ab3@17043>   CMP.b #2,optistring
0002E586 <AmiBlitz3.ab3@17044>   BEQ 'l10
0002E58C <AmiBlitz3.ab3@17047>   MOVE.w numtoa0,D1
0002E590 <AmiBlitz3.ab3@17048>    BSR.w writeword
0002E594 <AmiBlitz3.ab3@17049>    BSR.w addoff
0002E59A <AmiBlitz3.ab3@17050>   MOVE.l litdata1,D1
0002E59E <AmiBlitz3.ab3@17051>    BSR.w writelong
0002E5A4 <AmiBlitz3.ab3@17052>   MOVE.w pushlen,D1
0002E5A8 <AmiBlitz3.ab3@17053>    BSR.w writeword
0002E5AC <AmiBlitz3.ab3@17054>   MOVE.w #$C600,D1
0002E5B0 <AmiBlitz3.ab3@17055>    BSR.w Atokejsr
0002E5B2 <AmiBlitz3.ab3@17056>   MOVE.w (A7)+,D0
0002E5B4 <AmiBlitz3.ab3@17057> RTS
0002E5B6 <AmiBlitz3.ab3@17060>   MOVEQ #0,d1
0002E5BA <AmiBlitz3.ab3@17061>   BSR.w pokedata1b
0002E5C0 <AmiBlitz3.ab3@17062>   MOVE.l destpointer,a4
0002E5C4 <AmiBlitz3.ab3@17063>   MOVE.w #$203c,d1
0002E5CA <AmiBlitz3.ab3@17064>   TST.w mode
0002E5CE <AmiBlitz3.ab3@17065>   BNE 'lm10
0002E5D4 <AmiBlitz3.ab3@17066>    ADDQ.w #4,a2offset
0002E5D8 <AmiBlitz3.ab3@17067>   MOVE.w #$2f3c,d1
0002E5DE <AmiBlitz3.ab3@17070>   TST.w mode
0002E5E2 <AmiBlitz3.ab3@17071>   BEQ 'lm3
0002E5E8 <AmiBlitz3.ab3@17072>   MOVE.w regnum,D0
0002E5EA <AmiBlitz3.ab3@17073>   LSL.w #8,D0
0002E5EC <AmiBlitz3.ab3@17074>   LSL.w #1,D0
0002E5EE <AmiBlitz3.ab3@17075>   OR.w d0,d1
0002E5F2 <AmiBlitz3.ab3@17076>   BSR writeword
0002E5F6 <AmiBlitz3.ab3@17077>   BSR.w addoff
0002E5FC <AmiBlitz3.ab3@17078>   MOVE.l litdata1,D1
0002E600 <AmiBlitz3.ab3@17079>   BSR.w writelong
0002E608 <AmiBlitz3.ab3@17080>   CMP.w #3,mode
0002E60C <AmiBlitz3.ab3@17081>   BEQ 'l30
0002E612 <AmiBlitz3.ab3@17082>    ADDQ.w #4,a2offset
0002E616 <AmiBlitz3.ab3@17083>   MOVE.w #$4878,D1
0002E61A <AmiBlitz3.ab3@17084>   BSR.w writeword
0002E61C <AmiBlitz3.ab3@17085>   MOVE.l d2,d1
0002E620 <AmiBlitz3.ab3@17086>   BSR writeword
0002E622 <AmiBlitz3.ab3@17089>   MOVE.w (A7)+,D0
0002E624 <AmiBlitz3.ab3@17090> RTS
0002E62A <AmiBlitz3.ab3@17093>   MOVE.l #$3f3c0007,d1
0002E62E <AmiBlitz3.ab3@17094>   BSR writelong
0002E634 <AmiBlitz3.ab3@17095>   MOVE.w regnum,D1
0002E636 <AmiBlitz3.ab3@17096>   LSL.w #8,D1
0002E638 <AmiBlitz3.ab3@17097>   LSL.w #1,D1
0002E63C <AmiBlitz3.ab3@17098>   ORI.w #$2f3c,d1
0002E640 <AmiBlitz3.ab3@17099>   BSR writeword
0002E646 <AmiBlitz3.ab3@17100>    ADDQ.w #4,a2offset
0002E648 <AmiBlitz3.ab3@17101>   MOVE.l d2,d1
0002E64C <AmiBlitz3.ab3@17102>   BSR writelong
0002E650 <AmiBlitz3.ab3@17103>   MOVE.w #$2f3c,d1
0002E654 <AmiBlitz3.ab3@17104>   BSR writeword
0002E658 <AmiBlitz3.ab3@17105>   BSR.w addoff
0002E65E <AmiBlitz3.ab3@17106>   MOVE.l litdata1,D1
0002E662 <AmiBlitz3.ab3@17107>   BSR.w writelong
0002E664 <AmiBlitz3.ab3@17108>   MOVE.w (A7)+,D0
0002E666 <AmiBlitz3.ab3@17109> RTS
0002E66A <AmiBlitz3.ab3@17113>   BSR.w get1bytemain
0002E66E <AmiBlitz3.ab3@17114>    BSR.w JL_0_AE22
0002E674 <AmiBlitz3.ab3@17115>   MOVE.w regnum,D1
0002E676 <AmiBlitz3.ab3@17116>   LSL.w #8,D1
0002E678 <AmiBlitz3.ab3@17117>   LSL.w #1,D1
0002E67C <AmiBlitz3.ab3@17118>   ORI.w #$203C,D1
0002E680 <AmiBlitz3.ab3@17119>    BSR.w writeword
0002E684 <AmiBlitz3.ab3@17120>    BSR.w addoff
0002E688 <AmiBlitz3.ab3@17121>   MOVE.l $8(A2),D1
0002E68C <AmiBlitz3.ab3@17122>    BSR.w writelong
0002E68E <AmiBlitz3.ab3@17123>   MOVEQ.l #$03,D2
0002E694 <AmiBlitz3.ab3@17124>   CLR.b peekaddrsize
0002E698 <AmiBlitz3.ab3@17125> BRA.w reget
0002E69A <AmiBlitz3.ab3@17128>   MOVEQ.l #$00,D3
0002E69E <AmiBlitz3.ab3@17131>   BSR.w get1bytemain
0002E6A2 <AmiBlitz3.ab3@17132>    BEQ.w syntaxerr
0002E6A6 <AmiBlitz3.ab3@17133>   CMP.w #$22,D0
0002E6AA <AmiBlitz3.ab3@17134>    BEQ.w JL_0_AF1A
0002E6AC <AmiBlitz3.ab3@17135>   LSL.l #8,D3
0002E6AE <AmiBlitz3.ab3@17136>   MOVE.b D0,D3
0002E6B2 <AmiBlitz3.ab3@17137> BRA.w JL_0_AF02
0002E6B6 <AmiBlitz3.ab3@17140>   BSR.w get1bytemain
0002E6BA <AmiBlitz3.ab3@17141> BRA.w JL_0_B46E
0002E6BC <AmiBlitz3.ab3@17144>   MOVE.w D2,-(A7)                                          ;basicvarsforasm
0002E6C0 <AmiBlitz3.ab3@17145>    BSR.w makename2
0002E6C4 <AmiBlitz3.ab3@17146>    BSR.w findlabel2
0002E6C8 <AmiBlitz3.ab3@17147>    BEQ.w 'l10
0002E6CE <AmiBlitz3.ab3@17148>    LEA ptr_parameterstore,a0
0002E6D4 <AmiBlitz3.ab3@17149>    CMP.b #"@",-1(a0,d2.w)
0002E6D8 <AmiBlitz3.ab3@17150>    BNE cnferr
0002E6DC <AmiBlitz3.ab3@17151>    CLR.b -1(a0,d2.w)
0002E6DE <AmiBlitz3.ab3@17152>    SUBQ.l #1,d2
0002E6E4 <AmiBlitz3.ab3@17153>    LEA varbase,a2
0002E6E8 <AmiBlitz3.ab3@17154>    BSR findvariable
0002E6EC <AmiBlitz3.ab3@17155>    BNE cnferr
0002E6F0 <AmiBlitz3.ab3@17156>    CMP.b #"\",d0
0002E6F4 <AmiBlitz3.ab3@17157>    BNE 'l6
0002E6FA <AmiBlitz3.ab3@17158>    ADDQ #1,lastsourcepos
0002E6FE <AmiBlitz3.ab3@17159>    MOVE.l $a(a2),a2
0002E700 <AmiBlitz3.ab3@17160>    ADDQ.l #4,a2
0002E704 <AmiBlitz3.ab3@17161>    BSR.w makename2
0002E708 <AmiBlitz3.ab3@17162>    BSR findvariable2
0002E70C <AmiBlitz3.ab3@17163>    BNE cnferr
0002E710 <AmiBlitz3.ab3@17164> BRA.s 'l6                                                  ;???
0002E714 <AmiBlitz3.ab3@17167>    MOVE.w $4(a2),d3
0002E716 <AmiBlitz3.ab3@17168>    EXT.l d3
0002E71A <AmiBlitz3.ab3@17169> BRA JL_0_AF46
0002E71E <AmiBlitz3.ab3@17172>   MOVE.l $8(A2),D3
0002E726 <AmiBlitz3.ab3@17173>   CMPI.l #$1,$4(A2)
0002E72A <AmiBlitz3.ab3@17174>    BEQ.w JL_0_AF46
0002E730 <AmiBlitz3.ab3@17175>   NOT.w asmtype
0002E732 <AmiBlitz3.ab3@17178>   MOVE.w (A7)+,D2
0002E736 <AmiBlitz3.ab3@17179> BRA.w JL_0_B46E
0002E738 <AmiBlitz3.ab3@17183>   MOVE.w D2,-(A7)
0002E73C <AmiBlitz3.ab3@17184>    BSR.w getparameter
0002E740 <AmiBlitz3.ab3@17185>   CMP.w #"{",D0                                          ;test if var = function{}
0002E744 <AmiBlitz3.ab3@17186>    BEQ.w isfunction
0002E748 <AmiBlitz3.ab3@17187>    BSR.w JL_0_8E3C
0002E74C <AmiBlitz3.ab3@17189>    BSR.w calcvar                                         ;getvaroffset+type
0002E750 <AmiBlitz3.ab3@17190>    BSR.w JL_0_B150
0002E756 <AmiBlitz3.ab3@17191>    MOVE.l a2,rightsidetype
0002E760 <AmiBlitz3.ab3@17192>    MOVE.w flagmask, rightsideflagmask
0002E766 <AmiBlitz3.ab3@17203>    TST.b typecheck
0002E76A <AmiBlitz3.ab3@17204>    BEQ JL_0_AF66
0002E774 <AmiBlitz3.ab3@17205>    CMP.l #$da01,lasttoken                                  ;poke
0002E778 <AmiBlitz3.ab3@17206>    BEQ 'l1
0002E782 <AmiBlitz3.ab3@17207>    CMP.l #$da02,lasttoken                                  ;peek
0002E786 <AmiBlitz3.ab3@17208>    BNE 'l2
0002E78E <AmiBlitz3.ab3@17211>    CMP.w #1,parnum                                         ; is not call when & is used in parameter
0002E792 <AmiBlitz3.ab3@17212>    BNE JL_0_AF66
0002E798 <AmiBlitz3.ab3@17213>    MOVE.b d2,peekaddrsize
0002E79C <AmiBlitz3.ab3@17214>    BRA JL_0_AF66
0002E7A2 <AmiBlitz3.ab3@17217>   CLR.b peekaddrsize
0002E7A6 <AmiBlitz3.ab3@17220>   CMP.w #$1,D2
0002E7AA <AmiBlitz3.ab3@17221>    BNE.w JL_0_AF7C
0002E7B0 <AmiBlitz3.ab3@17222>   MOVE.w regnum,D1
0002E7B4 <AmiBlitz3.ab3@17223>   ORI.w #$4880,D1
0002E7B8 <AmiBlitz3.ab3@17224>    BSR.w writeword
0002E7BA <AmiBlitz3.ab3@17227>   MOVE.w (A7)+,D3
0002E7BE <AmiBlitz3.ab3@17228>    BEQ.w JL_0_AF9E
0002E7C4 <AmiBlitz3.ab3@17229>    MOVE.l lastinstructionaddr,a0
0002E7C8 <AmiBlitz3.ab3@17230>   CMP.w #$3,D3
0002E7CC <AmiBlitz3.ab3@17231>    BNE.w JL_0_AF92
0002E7D0 <AmiBlitz3.ab3@17232>   CMP.w #$4,D2
0002E7D4 <AmiBlitz3.ab3@17233>    BEQ.w JL_0_AF98
0002E7D6 <AmiBlitz3.ab3@17236>   CMP.w D2,D3
0002E7DA <AmiBlitz3.ab3@17237>    BLS.w JL_0_AF9E
0002E7DC <AmiBlitz3.ab3@17240>   EXG.l D2,D3
0002E7DE <AmiBlitz3.ab3@17241>   MOVE.l a0,-(a7)
0002E7E4 <AmiBlitz3.ab3@17242>   TST.b typecheck
0002E7E8 <AmiBlitz3.ab3@17243>   BEQ 'ok
0002E7EE <AmiBlitz3.ab3@17244>   TST.b notypecheck
0002E7F2 <AmiBlitz3.ab3@17245>   BNE 'ok
0002E7F8 <AmiBlitz3.ab3@17246>   MOVE.l leftsidetype,a0
0002E802 <AmiBlitz3.ab3@17247>   CMP.l #0,leftsidetype
0002E806 <AmiBlitz3.ab3@17248>   BEQ 'ok
0002E80E <AmiBlitz3.ab3@17249>   CMP.w #1,leftsideflagmask
0002E812 <AmiBlitz3.ab3@17250>   BEQ 'isptr
0002E81A <AmiBlitz3.ab3@17251>   CMP.l #$100,4(a0)
0002E81E <AmiBlitz3.ab3@17252>   BLE 'ok
0002E822 <AmiBlitz3.ab3@17254>   CMP.b #3,d3
0002E826 <AmiBlitz3.ab3@17255>   BEQ 'ok
0002E82A <AmiBlitz3.ab3@17256>   CMP.b #7,d3
0002E82E <AmiBlitz3.ab3@17257>   BEQ 'ok
0002E834 <AmiBlitz3.ab3@17258>   JMP   error_convert_types      ;for all syntax only long and string allowed to assign to a type
0002E836 <AmiBlitz3.ab3@17260>   MOVE.l (a7)+,a0
0002E83A <AmiBlitz3.ab3@17261>   BSR.w writeconvertcode         ;called from var assign
0002E83E <AmiBlitz3.ab3@17264> BRA.w reget
0002E840 <AmiBlitz3.ab3@17267>   MOVEQ.l #$00,D3
0002E846 <AmiBlitz3.ab3@17268>   MOVE.w regnum,D1
0002E84A <AmiBlitz3.ab3@17269>    BEQ.w JL_0_AFC8
0002E84C <AmiBlitz3.ab3@17270>   SUBQ.w #1,D1
0002E84E <AmiBlitz3.ab3@17273>      LSR.l #1,D3
0002E852 <AmiBlitz3.ab3@17274>      BSET #$F,D3
0002E856 <AmiBlitz3.ab3@17275>   DBF D1,JL_0_AFB0b
0002E85C <AmiBlitz3.ab3@17277>    TST.b fpu
0002E860 <AmiBlitz3.ab3@17278>    BEQ 'l1
0002E866 <AmiBlitz3.ab3@17279>    ADDQ.l #2,stacktrack                                    ;intern command
0002E868 <AmiBlitz3.ab3@17280>     MOVE.l a0,-(a7)
0002E86E <AmiBlitz3.ab3@17281>     MOVE.l stacktrack,d1
0002E874 <AmiBlitz3.ab3@17282>     LEA fpustackbase,a0
0002E878 <AmiBlitz3.ab3@17283>     CLR.w 0(a0,d1)
0002E87E <AmiBlitz3.ab3@17284>     CLR.w regmask
0002E880 <AmiBlitz3.ab3@17285>     MOVE.l (a7)+,a0
0002E884 <AmiBlitz3.ab3@17288>   MOVE.w #$48E7,D1
0002E888 <AmiBlitz3.ab3@17289>    BSR.w writeword                                         ;write movem.l d0/d1,-(a7)
0002E88A <AmiBlitz3.ab3@17290>   MOVE.w D3,D1
0002E88E <AmiBlitz3.ab3@17291> BRA.w writeword
0002E890 <AmiBlitz3.ab3@17296>   MOVEQ.l #$00,D3
0002E896 <AmiBlitz3.ab3@17297>   MOVE.w regnum,D1
0002E89A <AmiBlitz3.ab3@17298>    BEQ.w JL_0_AFC8
0002E89C <AmiBlitz3.ab3@17299>   SUBQ.w #1,D1
0002E89E <AmiBlitz3.ab3@17302>     LSR.l #1,D3
0002E8A2 <AmiBlitz3.ab3@17303>     BSET #$F,D3
0002E8A6 <AmiBlitz3.ab3@17304>   DBF D1,JL_0_AFB0
0002E8AC <AmiBlitz3.ab3@17306>    TST.b fpu
0002E8B0 <AmiBlitz3.ab3@17307>    BEQ 'l1
0002E8B6 <AmiBlitz3.ab3@17308>    ADDQ.l #2,stacktrack                                    ;intern command
0002E8B8 <AmiBlitz3.ab3@17309>     MOVE.l a0,-(a7)
0002E8BE <AmiBlitz3.ab3@17310>     MOVE.l stacktrack,d1
0002E8C4 <AmiBlitz3.ab3@17311>     LEA fpustackbase,a0
0002E8C8 <AmiBlitz3.ab3@17312>     CLR.w 0(a0,d1)
0002E8CC <AmiBlitz3.ab3@17313>    CMP.b #5,(a3)                                           ;result float ?
0002E8D0 <AmiBlitz3.ab3@17314>     BNE 'nofpu
0002E8DA <AmiBlitz3.ab3@17316>     MOVE.w regnum,regnumfunc
0002E8E0 <AmiBlitz3.ab3@17319>   CLR.w regmask
0002E8E2 <AmiBlitz3.ab3@17320>     MOVE.l (a7)+,a0
0002E8E6 <AmiBlitz3.ab3@17323>   MOVE.w #$48E7,D1
0002E8EA <AmiBlitz3.ab3@17324>    BSR.w writeword                                         ;write movem.l d0/d1,-(a7)
0002E8EC <AmiBlitz3.ab3@17325>   MOVE.w D3,D1
0002E8F0 <AmiBlitz3.ab3@17326> BRA.w writeword
0002E8F2 <AmiBlitz3.ab3@17329> RTS
0002E8F4 <AmiBlitz3.ab3@17333>   MOVE.l D1,-(A7)
0002E8F8 <AmiBlitz3.ab3@17334>   MOVE.w #$4EB9,D1
0002E8FC <AmiBlitz3.ab3@17335>    BSR.w writeword
0002E900 <AmiBlitz3.ab3@17336>    BSR.w addoff
0002E902 <AmiBlitz3.ab3@17337>   MOVE.l (A7)+,D1
0002E906 <AmiBlitz3.ab3@17338> BRA.w writelong
0002E90A <AmiBlitz3.ab3@17342>    BSR.w findproc                                          ;write function call
0002E90E <AmiBlitz3.ab3@17343>    BEQ 'l1
0002E914 <AmiBlitz3.ab3@17344>    TST.l unusedfunc
0002E918 <AmiBlitz3.ab3@17345>    BEQ noprocerr
0002E91E <AmiBlitz3.ab3@17347>    JSR gotoendsource
0002E926 <AmiBlitz3.ab3@17350>   MOVE.l funcstruct_returntype(a2),rightsidetype
0002E92C <AmiBlitz3.ab3@17351>   TST.l typetocast
0002E930 <AmiBlitz3.ab3@17352>   BEQ 'nocast
0002E93A <AmiBlitz3.ab3@17353>   MOVE.l typetocast,rightsidetype
0002E940 <AmiBlitz3.ab3@17354>   CLR.l typetocast
0002E942 <AmiBlitz3.ab3@17355>   MOVE.l a1,-(a7)
0002E948 <AmiBlitz3.ab3@17356>   MOVE.l rightsidetype,a1
0002E94E <AmiBlitz3.ab3@17357>   CMP.l leftsidetype,a1
0002E952 <AmiBlitz3.ab3@17358>   BEQ 'ok
0002E958 <AmiBlitz3.ab3@17359>   JMP errorconvertreturntype2
0002E95A <AmiBlitz3.ab3@17360> 'ok  MOVE.l (a7)+,a1
0002E95C <AmiBlitz3.ab3@17362>   MOVEQ.l #$00,D1
0002E960 <AmiBlitz3.ab3@17363>   MOVE.b $5(A2),D1
0002E966 <AmiBlitz3.ab3@17364>   MOVE.b d1,retmode
0002E96A <AmiBlitz3.ab3@17365>    BMI.w illprocerr
0002E970 <AmiBlitz3.ab3@17366>    MOVE.b #1,isfunc(a2)
0002E972 <AmiBlitz3.ab3@17367>   MOVE.w D1,-(A7)
0002E974 <AmiBlitz3.ab3@17368>   MOVEQ.l #$00,D1
0002E978 <AmiBlitz3.ab3@17369>   MOVE.b $4(A2),D1
0002E97A <AmiBlitz3.ab3@17370>   LSR.w #4,D1
0002E97E <AmiBlitz3.ab3@17371>    BEQ.w JL_0_B006
0002E980 <AmiBlitz3.ab3@17372>   LSL.w #2,D1
0002E986 <AmiBlitz3.ab3@17373>   SUB.w D1,a2offset
0002E98A <AmiBlitz3.ab3@17376>   CMPI.w #$7,(A7)
0002E98E <AmiBlitz3.ab3@17377>    BNE.b JL_0_B014
0002E990 <AmiBlitz3.ab3@17378>   MOVE.l A2,-(A7)
0002E994 <AmiBlitz3.ab3@17379>    BSR.w makesbase
0002E996 <AmiBlitz3.ab3@17380>   MOVEA.l (A7)+,A2
0002E99C <AmiBlitz3.ab3@17383>   MOVE.w sbasegot,-(A7)
0002E9A0 <AmiBlitz3.ab3@17384>    BEQ.b JL_0_B020
0002E9A4 <AmiBlitz3.ab3@17385>    BSR.w dopusha3
0002E9A8 <AmiBlitz3.ab3@17388>   BSR.w JL_0_AFA2func
0002E9AA <AmiBlitz3.ab3@17389>   MOVE.w D3,-(A7)
0002E9AE <AmiBlitz3.ab3@17390>   MOVE.l $E(A2),D1
0002E9B2 <AmiBlitz3.ab3@17391>   TST.b $20(a2)                                            ;increase if morepar
0002E9B6 <AmiBlitz3.ab3@17392>   BNE 'no0par
0002E9B8 <AmiBlitz3.ab3@17393>   MOVE.l a5,a4
0002E9BC <AmiBlitz3.ab3@17396>   CMP.b #$20,(a4)+
0002E9C0 <AmiBlitz3.ab3@17397>   BEQ 'l1
0002E9C6 <AmiBlitz3.ab3@17398>   CMP.b #"}",-1(a4)
0002E9CA <AmiBlitz3.ab3@17399>   BNE  'no0par
0002E9CC <AmiBlitz3.ab3@17400>   MOVEQ #0,d0
0002E9D0 <AmiBlitz3.ab3@17403>   LEA $16(A2),A1
0002E9D2 <AmiBlitz3.ab3@17406>   MOVE.l d1,-(a7)
0002E9D4 <AmiBlitz3.ab3@17407>   MOVE.b (a1),d2
0002E9D6 <AmiBlitz3.ab3@17408>   MOVE.l d0,d1
0002E9DA <AmiBlitz3.ab3@17409>   CMP.w #4,d2
0002E9DE <AmiBlitz3.ab3@17410>   BNE 'l1b
0002E9E4 <AmiBlitz3.ab3@17411>   ADD.l #$203c,d1
0002E9E8 <AmiBlitz3.ab3@17412>   BSR writeword
0002E9EE <AmiBlitz3.ab3@17413>   MOVE.l #$ffff0000,d1
0002E9F2 <AmiBlitz3.ab3@17414>   BSR writelong
0002E9F6 <AmiBlitz3.ab3@17415> BRA 'l2b
0002E9FC <AmiBlitz3.ab3@17418>    TST.b fpu
0002EA00 <AmiBlitz3.ab3@17419>    BNE 'l1c
0002EA04 <AmiBlitz3.ab3@17420>    CMP.w #5,d2
0002EA08 <AmiBlitz3.ab3@17421>    BNE 'l1c
0002EA0E <AmiBlitz3.ab3@17422>    ADD.l #$203c,d1
0002EA12 <AmiBlitz3.ab3@17423>    BSR writeword
0002EA18 <AmiBlitz3.ab3@17424>    MOVE.l #$800000c1,d1
0002EA1C <AmiBlitz3.ab3@17425>    BSR writelong
0002EA20 <AmiBlitz3.ab3@17426> BRA 'l2b
0002EA26 <AmiBlitz3.ab3@17429>   ADD.l #$70ff,d1
0002EA2A <AmiBlitz3.ab3@17430>   BSR writeword
0002EA2E <AmiBlitz3.ab3@17431>   CMP.w #7,d2
0002EA32 <AmiBlitz3.ab3@17432>   BNE 'l1d
0002EA38 <AmiBlitz3.ab3@17433>   MOVE.l #$2f3c0000,d1      ; write code move.l #0,-(a7)
0002EA3C <AmiBlitz3.ab3@17434>   BSR writelong
0002EA3E <AmiBlitz3.ab3@17435>   MOVEQ #0,d1
0002EA42 <AmiBlitz3.ab3@17436>   BSR writeword
0002EA48 <AmiBlitz3.ab3@17437>   MOVE.l #$2f3c0000,d1      ; write code move.l #0,-(a7)
0002EA4C <AmiBlitz3.ab3@17438>   BSR writelong
0002EA4E <AmiBlitz3.ab3@17439>   MOVEQ #0,d1
0002EA52 <AmiBlitz3.ab3@17440>   BSR writeword
0002EA58 <AmiBlitz3.ab3@17442> 'l1d  MOVE.l #$f23c5000,d1
0002EA5A <AmiBlitz3.ab3@17443>   MOVE.l d0,d2
0002EA5C <AmiBlitz3.ab3@17444>   ASR.l #2,d2
0002EA5E <AmiBlitz3.ab3@17445>   ADD.l d2,d1
0002EA62 <AmiBlitz3.ab3@17446>   BSR writelong
0002EA66 <AmiBlitz3.ab3@17447>   MOVE.w #$ffff,d1
0002EA6A <AmiBlitz3.ab3@17448>   BSR writeword
0002EA6C <AmiBlitz3.ab3@17452>   MOVE.l (a7)+,d1
0002EA6E <AmiBlitz3.ab3@17453>      ADDQ.l #1,a1
0002EA74 <AmiBlitz3.ab3@17454>      ADD.l #$0200,d0
0002EA7A <AmiBlitz3.ab3@17455>      CMP.l #$0e00,d0
0002EA7E <AmiBlitz3.ab3@17456>      BEQ syntaxerr
0002EA80 <AmiBlitz3.ab3@17457>      TST.b (a1)
0002EA84 <AmiBlitz3.ab3@17458>      BNE 'again
0002EA88 <AmiBlitz3.ab3@17459> BRA 'p1
0002EA8C <AmiBlitz3.ab3@17462>   TST.b $4(A2)
0002EA90 <AmiBlitz3.ab3@17463>    BNE.w JL_0_B03E
0002EA94 <AmiBlitz3.ab3@17466>   BSR.w JL_0_AFCA
0002EA98 <AmiBlitz3.ab3@17467>    BSR.w get1bytemain
0002EA9C <AmiBlitz3.ab3@17468> BRA.w JL_0_B06C
0002EAA2 <AmiBlitz3.ab3@17472>   MOVE.w parnum,-(a7)                                      ;7.2014 need store so function calls in parameter >6 can work
0002EAA8 <AmiBlitz3.ab3@17473>   MOVE.w regnum,-(A7)
0002EAB2 <AmiBlitz3.ab3@17474>   MOVE.w regnum,regnumfunc
0002EAB4 <AmiBlitz3.ab3@17477>   MOVE.l D1,-(A7)                                          ;write functioncall with pars
0002EABC <AmiBlitz3.ab3@17478>   MOVE.b #1,funccall
0002EABE <AmiBlitz3.ab3@17479>   MOVEQ.l #$00,D0
0002EAC2 <AmiBlitz3.ab3@17480>   MOVE.b $4(A2),D0
0002EACC <AmiBlitz3.ab3@17481>   MOVE.w a2offset,a2offset2
0002EAD4 <AmiBlitz3.ab3@17482>   MOVE.b 5(a2),retmode
0002EADA <AmiBlitz3.ab3@17483>   MOVE.l a2,currentfunccall
0002EADE <AmiBlitz3.ab3@17484>   LEA $16(A2),A2
0002EAE4 <AmiBlitz3.ab3@17485>   CLR.w regnum
0002EAEA <AmiBlitz3.ab3@17486>   CLR.w regmask
0002EAF0 <AmiBlitz3.ab3@17487>   MOVE.b isconstantvalue,-(a7)
0002EAF6 <AmiBlitz3.ab3@17488>   MOVE.b funcparloop,-(a7)
0002EAFE <AmiBlitz3.ab3@17489>   MOVE.b #1,funcparloop
0002EB04 <AmiBlitz3.ab3@17490>   MOVE.l rightsidetype,-(a7)
0002EB0A <AmiBlitz3.ab3@17491>   MOVE.l leftsidetype,-(a7)                               ;store values To stack so it can work recursive
0002EB10 <AmiBlitz3.ab3@17492>   MOVE.b blitzparloop,-(a7)
0002EB16 <AmiBlitz3.ab3@17493>   CLR.b blitzparloop
0002EB1C <AmiBlitz3.ab3@17494>   JSR fetchpees2
0002EB22 <AmiBlitz3.ab3@17495>   MOVE.b (a7)+,blitzparloop
0002EB28 <AmiBlitz3.ab3@17496>   MOVE.l (a7)+,leftsidetype
0002EB2E <AmiBlitz3.ab3@17497>   MOVE.l (a7)+,rightsidetype
0002EB34 <AmiBlitz3.ab3@17498>   MOVE.b (a7)+,funcparloop
0002EB3A <AmiBlitz3.ab3@17499>   MOVE.b (a7)+,isconstantvalue
0002EB40 <AmiBlitz3.ab3@17500>   JSR chkstak
0002EB42 <AmiBlitz3.ab3@17501>   MOVE.l (A7)+,D1
0002EB46 <AmiBlitz3.ab3@17517>    BTST #0,d1
0002EB4A <AmiBlitz3.ab3@17518>    BNE intern1
0002EB4E <AmiBlitz3.ab3@17519>    BSR.w JL_0_AFCA
0002EB54 <AmiBlitz3.ab3@17541>   MOVE.w (A7)+,regnum
0002EB5A <AmiBlitz3.ab3@17542>   MOVE.w (a7)+,parnum                                     ;07.2014
0002EB5E <AmiBlitz3.ab3@17544>   CMP.w #"}",D0
0002EB62 <AmiBlitz3.ab3@17545>    BNE.w errorbracketmiss2
0002EB64 <AmiBlitz3.ab3@17546>    MOVEQ #0,d1                                            ; end of function call pars
0002EB6A <AmiBlitz3.ab3@17547>   MOVE.w regnum,D1
0002EB6E <AmiBlitz3.ab3@17548>    BEQ.w JL_0_B08A
0002EB74 <AmiBlitz3.ab3@17549>    TST.b fpu
0002EB78 <AmiBlitz3.ab3@17550>    BEQ 'old
0002EB80 <AmiBlitz3.ab3@17551>    CMP.b #5,retmode
0002EB84 <AmiBlitz3.ab3@17552>    BNE 'old
0002EB86 <AmiBlitz3.ab3@17553>    ASL.l #7,d1
0002EB8C <AmiBlitz3.ab3@17554>    OR.l #$f2000000,d1
0002EB90 <AmiBlitz3.ab3@17555>    BSR writelong
0002EB94 <AmiBlitz3.ab3@17556> BRA JL_0_B08A
0002EB96 <AmiBlitz3.ab3@17558>  'old  LSL.w #8,D1
0002EB98 <AmiBlitz3.ab3@17559>   LSL.w #1,D1
0002EB9C <AmiBlitz3.ab3@17560>   ORI.w #$2000,D1
0002EBA0 <AmiBlitz3.ab3@17561>    BSR.w writeword
0002EBA2 <AmiBlitz3.ab3@17564>    MOVE.w (A7)+,D3
0002EBA6 <AmiBlitz3.ab3@17565>    BEQ.w JL_0_B0A8
0002EBAC <AmiBlitz3.ab3@17566>    TST.b fpu
0002EBB0 <AmiBlitz3.ab3@17567>    BEQ 'old
0002EBB2 <AmiBlitz3.ab3@17568>    MOVE.l d0,-(a7)
0002EBB6 <AmiBlitz3.ab3@17569>    MOVE.w #8,d0
0002EBB8 <AmiBlitz3.ab3@17570>    MOVE.l a0,-(a7)
0002EBBE <AmiBlitz3.ab3@17571>    MOVE.l stacktrack,d1
0002EBC4 <AmiBlitz3.ab3@17572>    LEA fpustackbase,a0
0002EBCC <AmiBlitz3.ab3@17573>    MOVE.w 0(a0,d1),regmask
0002EBCE <AmiBlitz3.ab3@17574>    MOVE.l (a7)+,a0
0002EBD2 <AmiBlitz3.ab3@17577>   BEQ 'ready
0002EBD8 <AmiBlitz3.ab3@17578>    BTST d0,regmask
0002EBDC <AmiBlitz3.ab3@17579>    BEQ 'noa7
0002EBDE <AmiBlitz3.ab3@17580>    MOVEQ #0,d1
0002EBE0 <AmiBlitz3.ab3@17581>    MOVE.w d0,d1
0002EBE2 <AmiBlitz3.ab3@17582>    SUBQ.w #1,d1
0002EBE4 <AmiBlitz3.ab3@17583>    ASL #7,d1
0002EBEA <AmiBlitz3.ab3@17585>    OR.l #$f21f5400,d1                                      ;fmove.d (a7)+
0002EBEE <AmiBlitz3.ab3@17586>    BSR writelong
0002EBF4 <AmiBlitz3.ab3@17587>    SUBQ.l #2,stacktrack
0002EBF6 <AmiBlitz3.ab3@17590>    SUBQ.w #1,d0
0002EBFA <AmiBlitz3.ab3@17591>    BNE 'loop
0002EC00 <AmiBlitz3.ab3@17594>   SUBQ.l #2,stacktrack                                     ;integer sub
0002EC02 <AmiBlitz3.ab3@17595>   MOVE.l (a7)+,d0
0002EC06 <AmiBlitz3.ab3@17598>   MOVE.w #$4CDF,D1
0002EC0A <AmiBlitz3.ab3@17599>    BSR.w writeword
0002EC0C <AmiBlitz3.ab3@17600>   MOVEQ.l #$00,D1
0002EC0E <AmiBlitz3.ab3@17601>   MOVEQ.l #$0F,D4
0002EC10 <AmiBlitz3.ab3@17604>     LSL.w #1,D3
0002EC12 <AmiBlitz3.ab3@17605>     ROXR.w #1,D1
0002EC16 <AmiBlitz3.ab3@17606>   DBF D4,JL_0_B09C                                         ;movem.l (a7)+,dx
0002EC1A <AmiBlitz3.ab3@17608>     BSR.w writeword
0002EC20 <AmiBlitz3.ab3@17609>    CLR.w regnumfunc
0002EC22 <AmiBlitz3.ab3@17612>   MOVE.w (A7)+,D1
0002EC26 <AmiBlitz3.ab3@17613>    BEQ.b JL_0_B0D2
0002EC2A <AmiBlitz3.ab3@17614>   CMPI.w #$7,(A7)
0002EC2E <AmiBlitz3.ab3@17615>    BEQ.b JL_0_B0C4
0002EC34 <AmiBlitz3.ab3@17616>   LEA geta3,A0
0002EC3A <AmiBlitz3.ab3@17617>   LEA numtoa0,A1
0002EC3E <AmiBlitz3.ab3@17618>    BSR.w pokecode
0002EC42 <AmiBlitz3.ab3@17619> BRA.b JL_0_B0CE
0002EC48 <AmiBlitz3.ab3@17622>   MOVE.w deca3,D1
0002EC4C <AmiBlitz3.ab3@17623>    BSR.w writeword
0002EC50 <AmiBlitz3.ab3@17626>   BSR.w dopulla3                                           ;fix up string base
0002EC52 <AmiBlitz3.ab3@17629>   MOVE.w (A7)+,D2                                          ;what it returns!
0002EC56 <AmiBlitz3.ab3@17630>   CMP.w #$7,D2
0002EC5A <AmiBlitz3.ab3@17631>    BNE.w JL_0_B0EC
0002EC60 <AmiBlitz3.ab3@17632>   MOVE.w putstlen,D1
0002EC66 <AmiBlitz3.ab3@17633>   OR.w regnum,D1
0002EC6A <AmiBlitz3.ab3@17634>    BSR.w writeword
0002EC6E <AmiBlitz3.ab3@17637>   BSR.w get1bytemain
0002EC72 <AmiBlitz3.ab3@17638> BRA.w JL_0_AF66
0002EC74 <AmiBlitz3.ab3@17642> deca3:   Dc.b $53,$4B                                      ;SUBQ.W  #1,A3
0002EC7C <AmiBlitz3.ab3@17647>   CMP.b #2,optistring
0002EC80 <AmiBlitz3.ab3@17648>   BEQ fs2
0002EC84 <AmiBlitz3.ab3@17649>   BSR.w makesbase                                          ;writestringvariable
0002EC88 <AmiBlitz3.ab3@17650>   BTST #$F,D2
0002EC8C <AmiBlitz3.ab3@17651>    BNE.w JL_0_B112
0002EC92 <AmiBlitz3.ab3@17652>   MOVE.w D3,leaa5d3a2+2
0002EC98 <AmiBlitz3.ab3@17653>   MOVE.l leaa5d3a2,D1
0002EC9C <AmiBlitz3.ab3@17654>    BSR.w pokela5s
0002ECA2 <AmiBlitz3.ab3@17657>   MOVE.w regnum,D1
0002ECA4 <AmiBlitz3.ab3@17658>   LSL.w #8,D1
0002ECA6 <AmiBlitz3.ab3@17659>   LSL.w #1,D1
0002ECAA <AmiBlitz3.ab3@17660>   ORI.w #$7000,D1
0002ECB0 <AmiBlitz3.ab3@17661>   LEA stvarget2,A0
0002ECB2 <AmiBlitz3.ab3@17662>   MOVE.w D1,(A0)
0002ECB8 <AmiBlitz3.ab3@17663>   MOVE.w regnum,D1
0002ECBE <AmiBlitz3.ab3@17664>   ANDI.w #$FFF8,$2(A0)
0002ECC2 <AmiBlitz3.ab3@17665>   OR.w D1,$2(A0)
0002ECC8 <AmiBlitz3.ab3@17666>   LEA stvarget2f,A1
0002ECCC <AmiBlitz3.ab3@17667>    BSR.w pokecode
0002ECD0 <AmiBlitz3.ab3@17668>   MOVE.w #$C600,D1
0002ECD4 <AmiBlitz3.ab3@17669>    BSR.w Atokejsr
0002ECD6 <AmiBlitz3.ab3@17670>   MOVEQ.l #$07,D2
0002ECDA <AmiBlitz3.ab3@17671> BRA.w reget
0002ECE0 <AmiBlitz3.ab3@17674>      TST.w stackpar
0002ECE4 <AmiBlitz3.ab3@17675>      BMI 'l10
0002ECEA <AmiBlitz3.ab3@17676>      MOVE.l #$3f3c0007,d1
0002ECF0 <AmiBlitz3.ab3@17677>      ADDQ.w #2,a2offset
0002ECF4 <AmiBlitz3.ab3@17678>      BSR writelong
0002ECF8 <AmiBlitz3.ab3@17681>   MOVE.w #$4878,d1
0002ECFE <AmiBlitz3.ab3@17682>      CLR.w stackpar
0002ED02 <AmiBlitz3.ab3@17683>      BSR writeword
0002ED06 <AmiBlitz3.ab3@17684>      MOVE.w #$0,d1
0002ED0A <AmiBlitz3.ab3@17685>      BSR writeword
0002ED0E <AmiBlitz3.ab3@17686>      MOVE.w #$246d,d1
0002ED12 <AmiBlitz3.ab3@17687>      BSR writeword
0002ED14 <AmiBlitz3.ab3@17688>      MOVE.w d3,d1
0002ED18 <AmiBlitz3.ab3@17689>      BSR writeword
0002ED1E <AmiBlitz3.ab3@17690>      MOVE.l #$4a926704,d1
0002ED22 <AmiBlitz3.ab3@17691>      BSR writelong
0002ED28 <AmiBlitz3.ab3@17692>      MOVE.l #$2eaafffc,d1
0002ED2C <AmiBlitz3.ab3@17693>      BSR writelong
0002ED30 <AmiBlitz3.ab3@17694>      MOVE.w #$2f0a,d1
0002ED36 <AmiBlitz3.ab3@17695>      ADDQ.w #8,a2offset
0002ED3A <AmiBlitz3.ab3@17696>      BSR writeword
0002ED3E <AmiBlitz3.ab3@17697> BRA.w reget
0002ED42 <AmiBlitz3.ab3@17700>   CMP.b #$7,D2                                             ;load basic var
0002ED46 <AmiBlitz3.ab3@17701>    BEQ.w JL_0_B0F6
0002ED4C <AmiBlitz3.ab3@17703>    TST.b iee
0002ED50 <AmiBlitz3.ab3@17704>    BEQ 'noiee
0002ED54 <AmiBlitz3.ab3@17705>    CMP.b #5,d2
0002ED58 <AmiBlitz3.ab3@17706>    BNE 'noiee
0002ED5A <AmiBlitz3.ab3@17707>    MOVE.l d0,-(a7)                                         ;fpu load var
0002ED5E <AmiBlitz3.ab3@17708>    BTST #15,d2
0002ED62 <AmiBlitz3.ab3@17709>    BEQ 'var
0002ED68 <AmiBlitz3.ab3@17710>    CMP.l #$7fff,d3
0002ED6C <AmiBlitz3.ab3@17711>    BGT 'longoffset
0002ED72 <AmiBlitz3.ab3@17712>    MOVE.l #$f22a4400,d1                                    ;newtype     >32kb
0002ED74 <AmiBlitz3.ab3@17713>    TST.w d3                                                ;offset =0
0002ED78 <AmiBlitz3.ab3@17714>    BNE 'offset
0002ED7E <AmiBlitz3.ab3@17717>   MOVE.l #$f2124400,d1
0002ED80 <AmiBlitz3.ab3@17718>    MOVEQ #0,d3
0002ED84 <AmiBlitz3.ab3@17719> BRA 'glob
0002ED8A <AmiBlitz3.ab3@17722>   SUBQ.l #4,destpointer
0002ED8E <AmiBlitz3.ab3@17723> BRA 'glob
0002ED94 <AmiBlitz3.ab3@17726>   TST.b fast
0002ED98 <AmiBlitz3.ab3@17727>    BEQ 'nofastload
0002ED9E <AmiBlitz3.ab3@17728>    TST.w regnum
0002EDA2 <AmiBlitz3.ab3@17729>    BNE 'nofastload
0002EDA8 <AmiBlitz3.ab3@17730>    CMP.l fp0addr,a4
0002EDAC <AmiBlitz3.ab3@17731>    BNE 'nofastload
0002EDB2 <AmiBlitz3.ab3@17732>    MOVE.l fp0iff,d1
0002EDB8 <AmiBlitz3.ab3@17733>    CMP.l firstiff,d1
0002EDBC <AmiBlitz3.ab3@17734>    BNE 'nofastload
0002EDC2 <AmiBlitz3.ab3@17735>    MOVE.w varmode,d1
0002EDC8 <AmiBlitz3.ab3@17736>    CMP.w fp0mode,d1
0002EDCC <AmiBlitz3.ab3@17737>    BNE 'nofastload
0002EDD2 <AmiBlitz3.ab3@17738>    CMP.w fp0var,d3
0002EDD6 <AmiBlitz3.ab3@17739>    BNE 'nofastload
0002EDDA <AmiBlitz3.ab3@17740>    BCLR #16,d2
0002EDDC <AmiBlitz3.ab3@17741>    MOVE.l (a7)+,d0
0002EDDE <AmiBlitz3.ab3@17742> RTS
0002EDE0 <AmiBlitz3.ab3@17745>    MOVEQ #0,d0
0002EDE6 <AmiBlitz3.ab3@17746>    MOVE.w regnum,d0
0002EDEC <AmiBlitz3.ab3@17747>    CMP.l maxregs,d0
0002EDF0 <AmiBlitz3.ab3@17748>    BLE 'ok
0002EDF6 <AmiBlitz3.ab3@17749>    LEA cmplxerr,a0
0002EDF8 <AmiBlitz3.ab3@17750>   MOVE.l a0,-(a7)
0002EDFE <AmiBlitz3.ab3@17751> JMP handle_compileerror
0002EE04 <AmiBlitz3.ab3@17754>    LEA regtable,a4
0002EE06 <AmiBlitz3.ab3@17755>    TST.l (a4)
0002EE0A <AmiBlitz3.ab3@17756>    BEQ 'noreg
0002EE0E <AmiBlitz3.ab3@17757>    CMP.w 0+4(a4),d3
0002EE12 <AmiBlitz3.ab3@17758>    BNE 'doreg1
0002EE18 <AmiBlitz3.ab3@17759>    MOVE.l #$f2001c00,d1
0002EE1E <AmiBlitz3.ab3@17760>    MOVE.w regnum,d0
0002EE20 <AmiBlitz3.ab3@17761>    ASL.w #7,d0
0002EE22 <AmiBlitz3.ab3@17762>    OR.w d0,d1
0002EE26 <AmiBlitz3.ab3@17763>    BSR writelong
0002EE28 <AmiBlitz3.ab3@17764>    MOVE.l (a7)+,d0
0002EE2A <AmiBlitz3.ab3@17765> RTS
0002EE2E <AmiBlitz3.ab3@17768>   CMP.w 8+4(a4),d3
0002EE32 <AmiBlitz3.ab3@17769>    BNE 'doreg2
0002EE38 <AmiBlitz3.ab3@17770>    MOVE.l #$f2001800,d1
0002EE3E <AmiBlitz3.ab3@17771>    MOVE.w regnum,d0
0002EE40 <AmiBlitz3.ab3@17772>    ASL.w #7,d0
0002EE42 <AmiBlitz3.ab3@17773>    OR.w d0,d1
0002EE46 <AmiBlitz3.ab3@17774>    BSR writelong
0002EE48 <AmiBlitz3.ab3@17775>    MOVE.l (a7)+,d0
0002EE4A <AmiBlitz3.ab3@17776> RTS
0002EE4E <AmiBlitz3.ab3@17779>   CMP.w 16+4(a4),d3
0002EE52 <AmiBlitz3.ab3@17780>    BNE 'doreg3
0002EE58 <AmiBlitz3.ab3@17781>    MOVE.l #$f2001400,d1
0002EE5E <AmiBlitz3.ab3@17782>    MOVE.w regnum,d0
0002EE60 <AmiBlitz3.ab3@17783>    ASL.w #7,d0
0002EE62 <AmiBlitz3.ab3@17784>    OR.w d0,d1
0002EE66 <AmiBlitz3.ab3@17785>    BSR  writelong
0002EE68 <AmiBlitz3.ab3@17786>    MOVE.l (a7)+,d0
0002EE6A <AmiBlitz3.ab3@17787> RTS
0002EE6E <AmiBlitz3.ab3@17790>   CMP.w 24+4(a4),d3
0002EE72 <AmiBlitz3.ab3@17791>    BNE 'doreg4
0002EE78 <AmiBlitz3.ab3@17792>    MOVE.l #$f2001000,d1
0002EE7E <AmiBlitz3.ab3@17793>    MOVE.w regnum,d0
0002EE80 <AmiBlitz3.ab3@17794>    ASL.w #7,d0
0002EE82 <AmiBlitz3.ab3@17795>    OR.w d0,d1
0002EE86 <AmiBlitz3.ab3@17796>    BSR writelong
0002EE88 <AmiBlitz3.ab3@17797>    MOVE.l (a7)+,d0
0002EE8A <AmiBlitz3.ab3@17798> RTS
0002EE8E <AmiBlitz3.ab3@17801>    CMP.w 32+4(a4),d3
0002EE92 <AmiBlitz3.ab3@17802>    BNE 'noreg
0002EE98 <AmiBlitz3.ab3@17803>    MOVE.l #$f2000c00,d1
0002EE9E <AmiBlitz3.ab3@17804>    MOVE.w regnum,d0
0002EEA0 <AmiBlitz3.ab3@17805>    ASL.w #7,d0
0002EEA2 <AmiBlitz3.ab3@17806>    OR.w d0,d1
0002EEA6 <AmiBlitz3.ab3@17807>    BSR writelong
0002EEA8 <AmiBlitz3.ab3@17808>    MOVE.l (a7)+,d0
0002EEAA <AmiBlitz3.ab3@17809> RTS
0002EEB0 <AmiBlitz3.ab3@17812>    MOVE.l #$f22d4400,d1                                    ;var
0002EEB6 <AmiBlitz3.ab3@17813>    TST.w varmode
0002EEBA <AmiBlitz3.ab3@17814>   BEQ 'glob
0002EEBE <AmiBlitz3.ab3@17815>   BCLR #16,d1                                              ;local
0002EEC0 <AmiBlitz3.ab3@17818>    MOVEQ #0,d0
0002EEC6 <AmiBlitz3.ab3@17819>    MOVE.w regnum,d0
0002EECA <AmiBlitz3.ab3@17820>    CMP.w #7,d0
0002EECE <AmiBlitz3.ab3@17821>    BLE 'ok2
0002EED4 <AmiBlitz3.ab3@17822>    LEA cmplxerr,a0
0002EED6 <AmiBlitz3.ab3@17823>   MOVE.l a0,-(a7)
0002EEDC <AmiBlitz3.ab3@17824> JMP handle_compileerror
0002EEDE <AmiBlitz3.ab3@17827>      ASL.w #7,d0
0002EEE0 <AmiBlitz3.ab3@17828>    OR.l d0,d1
0002EEE8 <AmiBlitz3.ab3@17829>    CMP.l #doublecheck,8(a2)
0002EEEC <AmiBlitz3.ab3@17830>    BNE 'dbl
0002EEF2 <AmiBlitz3.ab3@17831>    OR.l #$00001000,d1
0002EEF6 <AmiBlitz3.ab3@17834>   BSR writelong
0002EEF8 <AmiBlitz3.ab3@17835>    MOVE.l (a7)+,d0
0002EEFC <AmiBlitz3.ab3@17836>    AND.w #$ff,d2
0002EEFE <AmiBlitz3.ab3@17837>    MOVE.w d3,d1
0002EF02 <AmiBlitz3.ab3@17838>    BEQ 'nooffs
0002EF06 <AmiBlitz3.ab3@17839> BRA writeword
0002EF08 <AmiBlitz3.ab3@17844> RTS
0002EF0E <AmiBlitz3.ab3@17847>   MOVE.w regnum,D1
0002EF14 <AmiBlitz3.ab3@17848>   MOVE.w d1,load_var_reg
0002EF16 <AmiBlitz3.ab3@17849>   LSL.w #8,D1
0002EF20 <AmiBlitz3.ab3@17850>   MOVE.l destpointer,load_var_addr
0002EF26 <AmiBlitz3.ab3@17851>   MOVE.w d2,load_var_size
0002EF28 <AmiBlitz3.ab3@17852>   LSL.w #1,D1
0002EF2C <AmiBlitz3.ab3@17853>   BTST #$E,D2
0002EF30 <AmiBlitz3.ab3@17854>    BNE.w JL_0_B17A
0002EF32 <AmiBlitz3.ab3@17855>   TST.b D2
0002EF36 <AmiBlitz3.ab3@17856>    BNE.w JL_0_B17E
0002EF38 <AmiBlitz3.ab3@17857>   MOVEQ.l #$03,D2
0002EF3C <AmiBlitz3.ab3@17858>   ORI.w #$200A,D1
0002EF40 <AmiBlitz3.ab3@17859> BRA.w writeword
0002EF44 <AmiBlitz3.ab3@17862>   MOVE.b #$3,D2
0002EF48 <AmiBlitz3.ab3@17865>   BTST #$F,D2
0002EF4C <AmiBlitz3.ab3@17866>    BEQ.w JL_0_B19A                                         ;loadarray
0002EF52 <AmiBlitz3.ab3@17867>    TST.b fast                                              ;lea->move xx(a2)
0002EF56 <AmiBlitz3.ab3@17868>    BEQ 'la10
0002EF5C <AmiBlitz3.ab3@17873>    CLR.l load_var_addr
0002EF60 <AmiBlitz3.ab3@17874> BRA 'la10
0002EF68 <AmiBlitz3.ab3@17876>    CMP.w #$2012,movea2dn                                  ;??Looks like dead code??
0002EF6C <AmiBlitz3.ab3@17877>    BNE 'la10
0002EF72 <AmiBlitz3.ab3@17878>    TST.b optiarray
0002EF76 <AmiBlitz3.ab3@17879>    BNE 'la10
0002EF7C <AmiBlitz3.ab3@17880>    MOVE.l destpointer,a4
0002EF82 <AmiBlitz3.ab3@17881>    SUB.l loada,a4
0002EF86 <AmiBlitz3.ab3@17882>    CMP.w #4,a4
0002EF8A <AmiBlitz3.ab3@17883>    BEQ 'la100
0002EF8E <AmiBlitz3.ab3@17884>    CMP.w #2,a4
0002EF92 <AmiBlitz3.ab3@17885>    BNE 'la10
0002EF98 <AmiBlitz3.ab3@17886>    MOVE.l destpointer,a4
0002EF9C <AmiBlitz3.ab3@17887>    CMP.b #3,d2
0002EFA0 <AmiBlitz3.ab3@17888>    BCS 'la110
0002EFA6 <AmiBlitz3.ab3@17889>    MOVE.w #$202a,-2(a4)
0002EFAA <AmiBlitz3.ab3@17890>    OR.w d1,-2(a4)
0002EFB0 <AmiBlitz3.ab3@17891>    MOVE.w arrayoffset,d1
0002EFB4 <AmiBlitz3.ab3@17892>    BSR writeword
0002EFB8 <AmiBlitz3.ab3@17893> BRA JL_0_B194
0002EFBC <AmiBlitz3.ab3@17896>    CMP.b #2,d2
0002EFC0 <AmiBlitz3.ab3@17897>    BNE 'la120
0002EFC6 <AmiBlitz3.ab3@17898>     MOVE.w #$302a,-2(a4)
0002EFCA <AmiBlitz3.ab3@17899>    OR.w d1,-2(a4)
0002EFD0 <AmiBlitz3.ab3@17901>    MOVE.w arrayoffset,d1
0002EFD4 <AmiBlitz3.ab3@17902>    BSR writeword
0002EFD8 <AmiBlitz3.ab3@17903> BRA JL_0_B194
0002EFDC <AmiBlitz3.ab3@17906>   CMP.b #1,d2
0002EFE0 <AmiBlitz3.ab3@17907>    BNE.s 'la10
0002EFE6 <AmiBlitz3.ab3@17908>     MOVE.w #$102a,-2(a4)
0002EFEA <AmiBlitz3.ab3@17909>    OR.w d1,-2(a4)
0002EFF0 <AmiBlitz3.ab3@17910>    MOVE.w arrayoffset,d1
0002EFF4 <AmiBlitz3.ab3@17911>    BSR writeword
0002EFF8 <AmiBlitz3.ab3@17912> BRA JL_0_B194
0002EFFE <AmiBlitz3.ab3@17915>   MOVE.l destpointer,a4
0002F004 <AmiBlitz3.ab3@17916>    CMP.w #$45ea,-2(a4)
0002F008 <AmiBlitz3.ab3@17917>    BNE 'la10
0002F00C <AmiBlitz3.ab3@17918>    CMP.b #3,d2
0002F010 <AmiBlitz3.ab3@17919>    BCS 'la11
0002F016 <AmiBlitz3.ab3@17920>    MOVE.w #$202a,-4(a4)
0002F01A <AmiBlitz3.ab3@17921>    OR.w d1,-4(a4)
0002F01E <AmiBlitz3.ab3@17922> BRA JL_0_B194
0002F022 <AmiBlitz3.ab3@17925>    CMP.b #2,d2
0002F026 <AmiBlitz3.ab3@17926>    BNE 'la12
0002F02C <AmiBlitz3.ab3@17927>     MOVE.w #$302a,-4(a4)
0002F030 <AmiBlitz3.ab3@17928>    OR.w d1,-4(a4)
0002F034 <AmiBlitz3.ab3@17929> BRA JL_0_B194
0002F038 <AmiBlitz3.ab3@17932>   CMP.b #1,d2
0002F03C <AmiBlitz3.ab3@17933>    BNE.s 'la10
0002F042 <AmiBlitz3.ab3@17934>     MOVE.w #$102a,-4(a4)
0002F046 <AmiBlitz3.ab3@17935>    OR.w d1,-4(a4)
0002F04A <AmiBlitz3.ab3@17936> BRA JL_0_B194
0002F050 <AmiBlitz3.ab3@17939>    OR.w movea2dn,D1
0002F054 <AmiBlitz3.ab3@17940>    BSR.w JL_0_B1B2
0002F058 <AmiBlitz3.ab3@17941>    BSR.w writeword
0002F05C <AmiBlitz3.ab3@17944>   ANDI.w #$FF,D2
0002F05E <AmiBlitz3.ab3@17945> RTS
0002F064 <AmiBlitz3.ab3@17949>    MOVE.l destpointer,a4
0002F06C <AmiBlitz3.ab3@17950>    MOVE.l #$f22a4400,-4(a4)
0002F072 <AmiBlitz3.ab3@17951>    MOVE.w arrayoffset,d1
0002F076 <AmiBlitz3.ab3@17952> BRA writeword
0002F07C <AmiBlitz3.ab3@17956>   OR.w moved3a5dn,D1                                        ;write move.l 0(a5),reg
0002F080 <AmiBlitz3.ab3@17957>    BSR.w JL_0_B1B2
0002F084 <AmiBlitz3.ab3@17958>    BSR.w pokewda5s
0002F086 <AmiBlitz3.ab3@17959>   MOVE.w D3,D1
0002F08A <AmiBlitz3.ab3@17960>    BSR.w writeword
0002F08E <AmiBlitz3.ab3@17961> BRA.w JL_0_B194
0002F092 <AmiBlitz3.ab3@17964>   BTST #$E,D2
0002F096 <AmiBlitz3.ab3@17965>    BNE.w JL_0_B1CA
0002F09A <AmiBlitz3.ab3@17966>   CMP.b #$1,D2
0002F09E <AmiBlitz3.ab3@17967>    BEQ.w JL_0_B1CC
0002F0A2 <AmiBlitz3.ab3@17968>   CMP.b #$2,D2
0002F0A6 <AmiBlitz3.ab3@17969>    BEQ.w JL_0_B1D2
0002F0A8 <AmiBlitz3.ab3@17972> RTS
0002F0AC <AmiBlitz3.ab3@17975>   EORI.w #$3000,D1
0002F0AE <AmiBlitz3.ab3@17976> RTS
0002F0B2 <AmiBlitz3.ab3@17979>   ORI.w #$1000,D1
0002F0B4 <AmiBlitz3.ab3@17980> RTS
0002F0BC <AmiBlitz3.ab3@17984>   MOVE.w #$FFFF,dfetch
0002F0C0 <AmiBlitz3.ab3@17985>   BSR.w get1bytemain
0002F0C4 <AmiBlitz3.ab3@17986>   CMP.w #$2D,D0
0002F0C8 <AmiBlitz3.ab3@17987>    BNE.w JL_0_B206
0002F0CC <AmiBlitz3.ab3@17988>   BSR.w get1bytemain
0002F0D0 <AmiBlitz3.ab3@17989>   BSR.w JL_0_B206
0002F0D4 <AmiBlitz3.ab3@17990>   CMP.w #$5,D2
0002F0D8 <AmiBlitz3.ab3@17991>    BCC.w JL_0_B200
0002F0DA <AmiBlitz3.ab3@17992>   NEG.l D0
0002F0DC <AmiBlitz3.ab3@17993> RTS
0002F0E2 <AmiBlitz3.ab3@17996>   TST.b fpu
0002F0E6 <AmiBlitz3.ab3@17997>   BEQ 'noneg
0002F0EA <AmiBlitz3.ab3@17998>   fneg.x fp0
0002F0EC <AmiBlitz3.ab3@17999> RTS
0002F0F0 <AmiBlitz3.ab3@18002>   BCHG #$7,D0
0002F0F2 <AmiBlitz3.ab3@18003> RTS
0002F0F6 <AmiBlitz3.ab3@18006>   CMP.w #$24,D0
0002F0FA <AmiBlitz3.ab3@18007>    BEQ.w get_hexconstant
0002F0FE <AmiBlitz3.ab3@18008>   CMP.w #$25,D0
0002F102 <AmiBlitz3.ab3@18009>    BEQ.w JL_0_A8C0
0002F106 <AmiBlitz3.ab3@18010>   CMP.w #$2E,D0
0002F10A <AmiBlitz3.ab3@18011>    BNE.w JL_0_B224
0002F10C <AmiBlitz3.ab3@18014>   MOVEQ.l #$00,D3
0002F110 <AmiBlitz3.ab3@18015> BRA.w JL_0_B272
0002F112 <AmiBlitz3.ab3@18018>   MOVEQ.l #$00,D3                                          ;number
0002F116 <AmiBlitz3.ab3@18019>    BSR.w atoi
0002F11A <AmiBlitz3.ab3@18020>   CMP.w #$2E,D0
0002F11E <AmiBlitz3.ab3@18021>    BEQ.w JL_0_B268
0002F122 <AmiBlitz3.ab3@18022>   ORI.w #$20,D0
0002F126 <AmiBlitz3.ab3@18023>   CMP.w #$65,D0
0002F12A <AmiBlitz3.ab3@18024>    BNE.w JL_0_B46E
0002F130 <AmiBlitz3.ab3@18025>   CMP.l #$800000,D3
0002F134 <AmiBlitz3.ab3@18026>    BCC.w overerr
0002F136 <AmiBlitz3.ab3@18027>   MOVEQ.l #-$01,D6
0002F13A <AmiBlitz3.ab3@18028>   fmove.l d3,fp0
0002F13C <AmiBlitz3.ab3@18029>   MOVE.l D3,D0
0002F142 <AmiBlitz3.ab3@18030>   MOVEA.l _mathffpbase,A6
0002F146 <AmiBlitz3.ab3@18031>    JSR -$24(A6)
0002F148 <AmiBlitz3.ab3@18032>   MOVE.l D0,D3
0002F14C <AmiBlitz3.ab3@18033>    BSR.w JL_0_B2E6
0002F150 <AmiBlitz3.ab3@18034>    BSR.w reget
0002F154 <AmiBlitz3.ab3@18035>    BSR.w JL_0_B480
0002F158 <AmiBlitz3.ab3@18036> BRA.w JL_0_B3DC
0002F15C <AmiBlitz3.ab3@18039>   CMP.b #4,d2
0002F160 <AmiBlitz3.ab3@18040>   BEQ 'l4
0002F164 <AmiBlitz3.ab3@18041>   MOVE.b #5,d2                                             ;nprint 2/0.5 bugfix
0002F16A <AmiBlitz3.ab3@18044>    TST.b fpu
0002F16E <AmiBlitz3.ab3@18045>    BNE 'l1
0002F174 <AmiBlitz3.ab3@18046>    CMP.l #$800000,D3
0002F178 <AmiBlitz3.ab3@18047>    BCC.w overerr
0002F17C <AmiBlitz3.ab3@18048> BRA JL_0_B272
0002F182 <AmiBlitz3.ab3@18051>   CMP.l #$7fffffff,d3
0002F186 <AmiBlitz3.ab3@18052>     BCC.w overerr
0002F188 <AmiBlitz3.ab3@18055>   MOVEQ.l #-$01,D6
0002F18A <AmiBlitz3.ab3@18056>   MOVE.l D3,D0
0002F18E <AmiBlitz3.ab3@18057>   fmove.l d3,fp0
0002F194 <AmiBlitz3.ab3@18058>   MOVEA.l _mathffpbase,A6
0002F198 <AmiBlitz3.ab3@18059>    JSR -$24(A6)                                            ;integer to ffp
0002F19A <AmiBlitz3.ab3@18060>   MOVE.l D0,-(A7)
0002F19E <AmiBlitz3.ab3@18061>    BSR.w get1bytemain
0002F1A2 <AmiBlitz3.ab3@18062>    BSR.w tstnum
0002F1A6 <AmiBlitz3.ab3@18063>    BNE.w syntaxerr
0002F1A8 <AmiBlitz3.ab3@18064>   MOVEQ.l #$00,D3
0002F1AC <AmiBlitz3.ab3@18065>    BSR.w atoi
0002F1AE <AmiBlitz3.ab3@18066>   TST.l D3
0002F1B2 <AmiBlitz3.ab3@18067>    BEQ.w JL_0_B2E0
0002F1B8 <AmiBlitz3.ab3@18068>   TST.b fpu
0002F1BC <AmiBlitz3.ab3@18069>   BNE 'l1
0002F1C2 <AmiBlitz3.ab3@18070>   CMP.l #$800000,D3
0002F1C6 <AmiBlitz3.ab3@18071>    BCC.w overerr
0002F1CA <AmiBlitz3.ab3@18072> BRA 'l2
0002F1D0 <AmiBlitz3.ab3@18075>   CMP.l #$7fffffff,d3
0002F1D4 <AmiBlitz3.ab3@18076>   BCC overerr
0002F1D8 <AmiBlitz3.ab3@18079>   fmove.l d5,fp1
0002F1DA <AmiBlitz3.ab3@18080>   MOVE.l D5,D0
0002F1DE <AmiBlitz3.ab3@18081>    JSR -$24(A6)
0002F1E0 <AmiBlitz3.ab3@18082>   MOVE.l D0,D5
0002F1E4 <AmiBlitz3.ab3@18083>   fmove.l d3,fp2
0002F1E6 <AmiBlitz3.ab3@18084>   MOVE.l D3,D0
0002F1EA <AmiBlitz3.ab3@18085>    JSR -$24(A6)
0002F1EE <AmiBlitz3.ab3@18086>   fdiv.x fp1,fp2
0002F1F0 <AmiBlitz3.ab3@18087>   MOVE.l D5,D1
0002F1F4 <AmiBlitz3.ab3@18088>    JSR -$54(A6)
0002F1F8 <AmiBlitz3.ab3@18089>   fadd.x fp2,fp0
0002F1FA <AmiBlitz3.ab3@18090>   MOVE.l (A7)+,D1
0002F1FE <AmiBlitz3.ab3@18091>    JSR -$42(A6)
0002F200 <AmiBlitz3.ab3@18092>   MOVE.l D0,D3
0002F204 <AmiBlitz3.ab3@18093>    BSR.w reget
0002F208 <AmiBlitz3.ab3@18094>   ORI.w #$20,D0
0002F20C <AmiBlitz3.ab3@18095>   CMP.w #$65,D0
0002F210 <AmiBlitz3.ab3@18096>    BNE.w JL_0_B2D4
0002F214 <AmiBlitz3.ab3@18097>    BSR.w JL_0_B2E6
0002F218 <AmiBlitz3.ab3@18100>    BSR.w reget
0002F21C <AmiBlitz3.ab3@18101>    BSR.w JL_0_B480
0002F220 <AmiBlitz3.ab3@18102> BRA.w JL_0_B3DC
0002F222 <AmiBlitz3.ab3@18105>   MOVE.l (A7)+,D3
0002F226 <AmiBlitz3.ab3@18106> BRA.w JL_0_B2D4
0002F22A <AmiBlitz3.ab3@18109>   BSR.w get1bytemain
0002F22E <AmiBlitz3.ab3@18110>   CMP.w #$2B,D0
0002F232 <AmiBlitz3.ab3@18111>    BEQ.w JL_0_B30E
0002F236 <AmiBlitz3.ab3@18112>   CMP.w #$2D,D0
0002F23A <AmiBlitz3.ab3@18113>    BNE.w JL_0_B312
0002F23E <AmiBlitz3.ab3@18114>    BSR.w get1bytemain
0002F242 <AmiBlitz3.ab3@18115>    BSR.w getsign
0002F244 <AmiBlitz3.ab3@18116>   MOVE.l D3,D0
0002F248 <AmiBlitz3.ab3@18117>   fdiv.x fp1,fp0
0002F24A <AmiBlitz3.ab3@18118>   MOVE.l D4,D1
0002F24E <AmiBlitz3.ab3@18119>    JSR -$54(A6)
0002F250 <AmiBlitz3.ab3@18120>   MOVE.l D0,D3
0002F252 <AmiBlitz3.ab3@18121> RTS
0002F256 <AmiBlitz3.ab3@18124>   BSR.w get1bytemain
0002F25A <AmiBlitz3.ab3@18127>   BSR.w getsign
0002F25E <AmiBlitz3.ab3@18128>   fmul.x fp1,fp0
0002F260 <AmiBlitz3.ab3@18129>   MOVE.l D3,D0
0002F262 <AmiBlitz3.ab3@18130>   MOVE.l D4,D1
0002F266 <AmiBlitz3.ab3@18131>    JSR -$4E(A6)
0002F268 <AmiBlitz3.ab3@18132>   MOVE.l D0,D3
0002F26A <AmiBlitz3.ab3@18133> RTS
0002F26E <AmiBlitz3.ab3@18136>   BSR.w tstnum
0002F272 <AmiBlitz3.ab3@18137>    BNE.w syntaxerr
0002F274 <AmiBlitz3.ab3@18138>   MOVE.w D0,D4
0002F278 <AmiBlitz3.ab3@18139>   SUBI.w #$30,D4
0002F27C <AmiBlitz3.ab3@18140>    BSR.w get1bytemain
0002F280 <AmiBlitz3.ab3@18141>    BSR.w tstnum
0002F284 <AmiBlitz3.ab3@18142>    BNE.w getsign__skip
0002F288 <AmiBlitz3.ab3@18143>   MULU #$A,D4
0002F28C <AmiBlitz3.ab3@18144>   SUBI.w #$30,D0
0002F28E <AmiBlitz3.ab3@18145>   ADD.w D0,D4
0002F292 <AmiBlitz3.ab3@18146>    BSR.w get1bytemain
0002F296 <AmiBlitz3.ab3@18149>   CMP.w #$12,D4
0002F29A <AmiBlitz3.ab3@18150>    BHI.w overerr
0002F29C <AmiBlitz3.ab3@18151>   LSL.w #3,D4
0002F2A2 <AmiBlitz3.ab3@18152>   LEA fputab,a0
0002F2A4 <AmiBlitz3.ab3@18153>   ADD.l d4,a0
0002F2AA <AmiBlitz3.ab3@18154>   fmove.d 0(a0),fp1
0002F2AC <AmiBlitz3.ab3@18155>   LSR.w #1,d4
0002F2B0 <AmiBlitz3.ab3@18156>   MOVE.l facts(PC,D4.W),D4
0002F2B2 <AmiBlitz3.ab3@18157> RTS
0002F2FA <AmiBlitz3.ab3@18161>   Dc.d 1,10,100,1000,10000,100000,1000000,10000000,100000000  ;,1000000000,10000000000
0002F2FE <AmiBlitz3.ab3@18166>   Dc.l $80000041
0002F302 <AmiBlitz3.ab3@18167>   Dc.l $A0000044
0002F306 <AmiBlitz3.ab3@18168>   Dc.l $C8000047
0002F30A <AmiBlitz3.ab3@18169>   Dc.l $FA00004A
0002F30E <AmiBlitz3.ab3@18170>   Dc.l $9C40004E
0002F312 <AmiBlitz3.ab3@18171>   Dc.l $C3500051
0002F316 <AmiBlitz3.ab3@18172>   Dc.l $F4240054
0002F31A <AmiBlitz3.ab3@18173>   Dc.l $98968058
0002F31E <AmiBlitz3.ab3@18174>   Dc.l $BEBC205B
0002F322 <AmiBlitz3.ab3@18175>   Dc.l $EE6B285E
0002F326 <AmiBlitz3.ab3@18176>   Dc.l $9502F962
0002F32A <AmiBlitz3.ab3@18177>   Dc.l $BA43B765
0002F32E <AmiBlitz3.ab3@18178>   Dc.l $E8D4A568
0002F332 <AmiBlitz3.ab3@18179>   Dc.l $9184E76C
0002F336 <AmiBlitz3.ab3@18180>   Dc.l $B5E6A96F
0002F33A <AmiBlitz3.ab3@18181>   Dc.l $E35F2972
0002F33E <AmiBlitz3.ab3@18182>   Dc.l $8E1BCA76
0002F342 <AmiBlitz3.ab3@18183>   Dc.l $B1A2BD79
0002F346 <AmiBlitz3.ab3@18184>   Dc.l $DE0B6C7C
0002F348 <AmiBlitz3.ab3@18188>   MOVEQ.l #$01,D5
0002F34A <AmiBlitz3.ab3@18191>   LSL.l #1,D5
0002F34C <AmiBlitz3.ab3@18192>   MOVE.l D5,D1
0002F34E <AmiBlitz3.ab3@18193>   LSL.l #2,D5
0002F350 <AmiBlitz3.ab3@18194>   ADD.l D1,D5                                              ;divisor for frac convert!
0002F352 <AmiBlitz3.ab3@18195>   LSL.l #1,D3
0002F356 <AmiBlitz3.ab3@18196>    BCS.w overerr
0002F358 <AmiBlitz3.ab3@18197>   MOVE.l D3,D1
0002F35A <AmiBlitz3.ab3@18198>   LSL.l #1,D3
0002F35E <AmiBlitz3.ab3@18199>    BCS.w overerr
0002F360 <AmiBlitz3.ab3@18200>   LSL.l #1,D3
0002F364 <AmiBlitz3.ab3@18201>    BCS.w overerr
0002F366 <AmiBlitz3.ab3@18202>   ADD.l D1,D3
0002F36A <AmiBlitz3.ab3@18203>   SUBI.w #$30,D0
0002F36C <AmiBlitz3.ab3@18204>   ADD.l D0,D3
0002F398 <AmiBlitz3.ab3@18205>    !fget                                                   ;bsr.w get1bytemain
0002F39C <AmiBlitz3.ab3@18206>    CMP.b #1,d0
0002F3A0 <AmiBlitz3.ab3@18207>    BNE 'cm1
0002F3A2 <AmiBlitz3.ab3@18208>    SUBQ.l #1,a5
0002F3A6 <AmiBlitz3.ab3@18209>    BSR get1bytemain                                        ;??wy not !fget
0002F3AA <AmiBlitz3.ab3@18212>   CMP.b #$7e,d0
0002F3AE <AmiBlitz3.ab3@18213>    BNE 'cm2
0002F3B0 <AmiBlitz3.ab3@18214>    SUBQ.l #1,a5
0002F3B4 <AmiBlitz3.ab3@18215>    BSR get1bytemain
0002F3B6 <AmiBlitz3.ab3@18218>   TST.b d0
0002F3BA <AmiBlitz3.ab3@18219>    BPL 'l10
0002F3BC <AmiBlitz3.ab3@18220>    LSL.w #8,d0
0002F3BE <AmiBlitz3.ab3@18221>    MOVE.b (a5)+,d0
0002F3C4 <AmiBlitz3.ab3@18222>    MOVE.w d0,lastchar
0002F3D6 <AmiBlitz3.ab3@18225>   !compare2                                                ;bsr.w tstnum ;cmake bug
0002F3DA <AmiBlitz3.ab3@18226>    BEQ.w atoi__loop
0002F3DC <AmiBlitz3.ab3@18227> RTS
0002F3DE <AmiBlitz3.ab3@18230> dfetch:  Ds.w 1                                            ;fetching data?
0002F3E2 <AmiBlitz3.ab3@18234>   MOVE.w dfetch(PC),D1
0002F3E6 <AmiBlitz3.ab3@18235>    BEQ.w JL_0_B3EC
0002F3EC <AmiBlitz3.ab3@18236>   CLR.w dfetch
0002F3EE <AmiBlitz3.ab3@18237> RTS
0002F3F4 <AmiBlitz3.ab3@18240>   MOVE.b d2,isconstantvalue
0002F3FA <AmiBlitz3.ab3@18241>   MOVE.l d0,lastconstantvalue
0002F400 <AmiBlitz3.ab3@18242>   MOVE.w d2,imm_size
0002F40A <AmiBlitz3.ab3@18243>   MOVE.w regnum,imm_reg
0002F414 <AmiBlitz3.ab3@18244>   MOVE.l destpointer,imm_addr                           ; long
0002F418 <AmiBlitz3.ab3@18245>   CMP.w #$3,D2
0002F41C <AmiBlitz3.ab3@18246>   BEQ.w JL_0_B434
0002F420 <AmiBlitz3.ab3@18247>   CMP.w #$5,D2                                          ;float
0002F424 <AmiBlitz3.ab3@18248>   BEQ.w JL_0_B434
0002F428 <AmiBlitz3.ab3@18249>   CMP.w #$1,D2
0002F42C <AmiBlitz3.ab3@18250>   BEQ.w JL_0_B418
0002F430 <AmiBlitz3.ab3@18251>   CMP.w #$2,D2
0002F434 <AmiBlitz3.ab3@18252>   BEQ.w JL_0_B418
0002F438 <AmiBlitz3.ab3@18253>   CMP.w #$4,D2
0002F43C <AmiBlitz3.ab3@18254>   BEQ.w JL_0_B434
0002F440 <AmiBlitz3.ab3@18256> BRA.w mismatcherr
0002F446 <AmiBlitz3.ab3@18259>   MOVE.w regnum,D1
0002F448 <AmiBlitz3.ab3@18260>   LSL.w #8,D1
0002F44A <AmiBlitz3.ab3@18261>   LSL.w #1,D1
0002F44E <AmiBlitz3.ab3@18262>   ORI.w #$303C,D1
0002F452 <AmiBlitz3.ab3@18263>    BSR.w writeword
0002F454 <AmiBlitz3.ab3@18264>   MOVE.w D0,D1
0002F458 <AmiBlitz3.ab3@18265>    BSR.w writeword
0002F45C <AmiBlitz3.ab3@18266> BRA.w reget
0002F45E <AmiBlitz3.ab3@18269>   MOVEQ #0,d1
0002F464 <AmiBlitz3.ab3@18270>   MOVE.w regnum,D1
0002F46A <AmiBlitz3.ab3@18271>   TST.b fpu
0002F46E <AmiBlitz3.ab3@18272>   BEQ 'f1
0002F472 <AmiBlitz3.ab3@18273>   CMP.w #5,d2
0002F476 <AmiBlitz3.ab3@18274>   BEQ 'l10
0002F47A <AmiBlitz3.ab3@18275> BRA 'f2
0002F480 <AmiBlitz3.ab3@18278>   TST.b iee
0002F484 <AmiBlitz3.ab3@18279>   BNE 'l10
0002F486 <AmiBlitz3.ab3@18282>   LSL.w #8,D1
0002F488 <AmiBlitz3.ab3@18283>   LSL.w #1,D1
0002F48C <AmiBlitz3.ab3@18284>   ORI.w #$203C,D1
0002F490 <AmiBlitz3.ab3@18285>    BSR.w writeword
0002F492 <AmiBlitz3.ab3@18286>   MOVE.l D0,D1
0002F496 <AmiBlitz3.ab3@18287>    BSR.w writelong
0002F49A <AmiBlitz3.ab3@18288> BRA.w reget
0002F49C <AmiBlitz3.ab3@18291>   MOVEQ #5,d2
0002F49E <AmiBlitz3.ab3@18292>   ASL.l #7,d1
0002F4A0 <AmiBlitz3.ab3@18293>   SUBQ.l #8,a7
0002F4A6 <AmiBlitz3.ab3@18298>       OR.l #$f23c4400,d1                                   ;fmove.s
0002F4AC <AmiBlitz3.ab3@18299>        fmove.s fp0,0(a7)
0002F4B0 <AmiBlitz3.ab3@18301>   BSR writelong
0002F4B2 <AmiBlitz3.ab3@18302>   MOVE.l (a7)+,d1
0002F4B6 <AmiBlitz3.ab3@18303>   BSR writelong
0002F4B8 <AmiBlitz3.ab3@18304>   MOVE.l (a7)+,d1
0002F4BC <AmiBlitz3.ab3@18308> BRA.w reget
0002F4BE <AmiBlitz3.ab3@18314>  MOVE.l D3,D0
0002F4C0 <AmiBlitz3.ab3@18315>   TST.w D6
0002F4C4 <AmiBlitz3.ab3@18316>    BEQ.w JL_0_B46C
0002F4CA <AmiBlitz3.ab3@18317>   MOVEA.l _mathffpbase,A6
0002F4CE <AmiBlitz3.ab3@18318>    JSR -$1E(A6)
0002F4D2 <AmiBlitz3.ab3@18319>    BVC.w JL_0_B46C
0002F4D4 <AmiBlitz3.ab3@18320>   ADDQ.w #4,A7
0002F4D8 <AmiBlitz3.ab3@18321> BRA.w JL_0_B5A0
0002F4DA <AmiBlitz3.ab3@18324> RTS
0002F4DC <AmiBlitz3.ab3@18328>   MOVEQ.l #$00,D6
0002F4E0 <AmiBlitz3.ab3@18329>    fmove.l d3,fp0
0002F4E4 <AmiBlitz3.ab3@18332>   BSR.w JL_0_B480
0002F4E8 <AmiBlitz3.ab3@18333> BRA.w JL_0_B3DC
0002F4EA <AmiBlitz3.ab3@18336>   MOVE.w D2,-(A7)
0002F4EE <AmiBlitz3.ab3@18337>    BSR.w JL_0_BF6A
0002F4F0 <AmiBlitz3.ab3@18338>   MOVE.w (A7)+,D2
0002F4F2 <AmiBlitz3.ab3@18341>   TST.w D2
0002F4F6 <AmiBlitz3.ab3@18342>    BNE.w JL_0_B498
0002F4F8 <AmiBlitz3.ab3@18343>   TST.w D6
0002F4FC <AmiBlitz3.ab3@18344>    BEQ.w JL_0_B492
0002F4FE <AmiBlitz3.ab3@18345>   MOVEQ.l #$04,D2
0002F502 <AmiBlitz3.ab3@18346> BRA.w JL_0_B510
0002F504 <AmiBlitz3.ab3@18349>   MOVEQ.l #$02,D2
0002F508 <AmiBlitz3.ab3@18350> BRA.w JL_0_B4C4
0002F50C <AmiBlitz3.ab3@18353>   CMP.w #$1,D2
0002F510 <AmiBlitz3.ab3@18354>    BEQ.w JL_0_B4C4
0002F514 <AmiBlitz3.ab3@18355>   CMP.w #$2,D2
0002F518 <AmiBlitz3.ab3@18356>    BEQ.w JL_0_B4F8
0002F51C <AmiBlitz3.ab3@18357>   CMP.w #$3,D2
0002F520 <AmiBlitz3.ab3@18358>    BEQ.w JL_0_B57A
0002F524 <AmiBlitz3.ab3@18359>   CMP.w #$4,D2
0002F528 <AmiBlitz3.ab3@18360>    BEQ.w JL_0_B506
0002F52C <AmiBlitz3.ab3@18361>   CMP.w #$5,D2
0002F530 <AmiBlitz3.ab3@18362>    BEQ.w JL_0_B586
0002F534 <AmiBlitz3.ab3@18363> BRA.w mismatcherr
0002F538 <AmiBlitz3.ab3@18366>   BSR.w JL_0_B450                                          ;bugfix if a.b=$90 bug fix
0002F53E <AmiBlitz3.ab3@18367>   CMP.l #$7f,D0
0002F542 <AmiBlitz3.ab3@18368>    BGT.w JL_0_B4DC
0002F548 <AmiBlitz3.ab3@18369>   CMP.l #$FFFFFF80,D0
0002F54C <AmiBlitz3.ab3@18370>    BGE.w JL_0_B59E
0002F54E <AmiBlitz3.ab3@18373>   MOVEQ.l #$02,D2                                          ;was 2 before
0002F554 <AmiBlitz3.ab3@18374>   CMP.l #$7fff,D0
0002F558 <AmiBlitz3.ab3@18375>    BGT.w JL_0_B4F2
0002F55E <AmiBlitz3.ab3@18376>   CMP.l #$FFFF8000,D0
0002F562 <AmiBlitz3.ab3@18377>    BGE.w JL_0_B59E
0002F564 <AmiBlitz3.ab3@18380>   MOVEQ.l #$03,D2
0002F568 <AmiBlitz3.ab3@18381> BRA.w JL_0_B59E
0002F56A <AmiBlitz3.ab3@18407>   TST.w D6
0002F56E <AmiBlitz3.ab3@18408>    BNE.w JL_0_B510
0002F572 <AmiBlitz3.ab3@18409>    BSR.w JL_0_B450
0002F576 <AmiBlitz3.ab3@18410> BRA.w JL_0_B4DC
0002F57A <AmiBlitz3.ab3@18413>   BSR.w JL_0_B450
0002F57C <AmiBlitz3.ab3@18414>   TST.w D6
0002F580 <AmiBlitz3.ab3@18415>   BEQ.w JL_0_B560
0002F586 <AmiBlitz3.ab3@18418>   CMP.l #MaxWordSgnd,D0
0002F58A <AmiBlitz3.ab3@18419>    BGT.w JL_0_B5A0
0002F590 <AmiBlitz3.ab3@18420>   CMP.l #$FFFF8000,D0
0002F594 <AmiBlitz3.ab3@18421>    BLT.w JL_0_B5A0
0002F596 <AmiBlitz3.ab3@18422>   MOVE.w D0,-(A7)
0002F59A <AmiBlitz3.ab3@18423>    JSR -$24(A6)
0002F59C <AmiBlitz3.ab3@18424>   MOVE.l D0,D1
0002F59E <AmiBlitz3.ab3@18425>   MOVE.l D3,D0
0002F5A2 <AmiBlitz3.ab3@18426>    JSR -$48(A6)
0002F5A8 <AmiBlitz3.ab3@18427>   MOVE.l #$80000051,D1
0002F5AC <AmiBlitz3.ab3@18428>    JSR -$4E(A6)
0002F5B0 <AmiBlitz3.ab3@18429>    JSR -$1E(A6)
0002F5B4 <AmiBlitz3.ab3@18430>    BEQ.w JL_0_B55A
0002F5BA <AmiBlitz3.ab3@18431>   CMP.l #$10000,D0
0002F5BE <AmiBlitz3.ab3@18432>    BCC.w JL_0_B55A
0002F5C0 <AmiBlitz3.ab3@18433>   MOVE.w D0,D1
0002F5C2 <AmiBlitz3.ab3@18434>   MOVE.w (A7)+,D0
0002F5C4 <AmiBlitz3.ab3@18435>   SWAP D0
0002F5C6 <AmiBlitz3.ab3@18436>   MOVE.w D1,D0
0002F5CA <AmiBlitz3.ab3@18437> BRA.w JL_0_B59E
0002F5CC <AmiBlitz3.ab3@18440>   ADDQ.w #2,A7
0002F5D0 <AmiBlitz3.ab3@18441> BRA.w JL_0_B5A0
0002F5D6 <AmiBlitz3.ab3@18444>   CMP.l #MaxWordSgnd,D0
0002F5DA <AmiBlitz3.ab3@18445>    BGT.w JL_0_B4F2
0002F5E0 <AmiBlitz3.ab3@18446>   CMP.l #$FFFF8000,D0
0002F5E4 <AmiBlitz3.ab3@18447>    BLT.w JL_0_B4F2
0002F5E6 <AmiBlitz3.ab3@18448>   SWAP D0
0002F5EA <AmiBlitz3.ab3@18449> BRA.w JL_0_B59E
0002F5EC <AmiBlitz3.ab3@18452>   TST.w D6
0002F5F0 <AmiBlitz3.ab3@18453>   BNE.w JL_0_B5A0
0002F5F2 <AmiBlitz3.ab3@18454>   MOVE.l D3,D0
0002F5F6 <AmiBlitz3.ab3@18455> BRA.w JL_0_B59E
0002F5F8 <AmiBlitz3.ab3@18458>   TST.w D6
0002F5FC <AmiBlitz3.ab3@18459>   BNE.w JL_0_B5A0
0002F5FE <AmiBlitz3.ab3@18460>   MOVE.l D3,D0
0002F604 <AmiBlitz3.ab3@18461>   MOVEA.l _mathffpbase,A6
0002F608 <AmiBlitz3.ab3@18462>   JSR -$24(A6)
0002F60A <AmiBlitz3.ab3@18463>   MOVE.l D0,D3
0002F60E <AmiBlitz3.ab3@18464> BRA.w JL_0_B5A0
0002F610 <AmiBlitz3.ab3@18467> RTS
0002F612 <AmiBlitz3.ab3@18470>   MOVEQ.l #$05,D2
0002F614 <AmiBlitz3.ab3@18471>   MOVE.l D3,D0
0002F616 <AmiBlitz3.ab3@18472> RTS
0002F61A <AmiBlitz3.ab3@18476>             Ds.l 1                                         ;??Looks like unused data??
0002F61E <AmiBlitz3.ab3@18477> pushpc:     Ds.l 1
0002F622 <AmiBlitz3.ab3@18478> pushoff:    Ds.l 1
0002F626 <AmiBlitz3.ab3@18479> pushdooff:  Ds.l 1
0002F628 <AmiBlitz3.ab3@18480> pushclen:   Ds.w 1
0002F62C <AmiBlitz3.ab3@18481> pushat:     Ds.l 1
0002F636 <AmiBlitz3.ab3@18485>   MOVE.l destpointer,pushpc
0002F640 <AmiBlitz3.ab3@18486>   MOVE.l hunkoffsetbase,pushoff
0002F642 <AmiBlitz3.ab3@18487> RTS
0002F646 <AmiBlitz3.ab3@18491>   MOVEM.l D0-D1/A0-A1,-(A7)
0002F64C <AmiBlitz3.ab3@18492>   MOVE.l destpointer,D0
0002F650 <AmiBlitz3.ab3@18493>   MOVE.l pushpc(PC),D1
0002F656 <AmiBlitz3.ab3@18494>   MOVE.l D1,destpointer
0002F658 <AmiBlitz3.ab3@18495>   SUB.l D1,D0
0002F65E <AmiBlitz3.ab3@18496>   MOVE.w D0,pushclen
0002F662 <AmiBlitz3.ab3@18497>    BEQ.w JL_0_B636
0002F668 <AmiBlitz3.ab3@18498>   MOVE.w dontwrite,D1
0002F66C <AmiBlitz3.ab3@18499>    BNE.w JL_0_B636
0002F674 <AmiBlitz3.ab3@18500>    CMP.w #1000,pushclen
0002F678 <AmiBlitz3.ab3@18501>    BGE conmemerr
0002F67E <AmiBlitz3.ab3@18502>    MOVE.l pushat,d0
0002F682 <AmiBlitz3.ab3@18503>    BNE 'nomem
0002F688 <AmiBlitz3.ab3@18504>    MOVE.l #1024,d0
0002F68A <AmiBlitz3.ab3@18505>   MOVEQ.l #$01,D1
0002F690 <AmiBlitz3.ab3@18506>   MOVEA.l _execbase,A6
0002F696 <AmiBlitz3.ab3@18507>   MOVE.l mempool,a0
0002F69A <AmiBlitz3.ab3@18508>   JSR _AllocPooled(a6)
0002F6A0 <AmiBlitz3.ab3@18510>   MOVE.l D0,pushat
0002F6A2 <AmiBlitz3.ab3@18513>   MOVEA.l D0,A0
0002F6A8 <AmiBlitz3.ab3@18514>   MOVEA.l pushpc,A1
0002F6AE <AmiBlitz3.ab3@18515>   MOVE.l A1,destpointer
0002F6B4 <AmiBlitz3.ab3@18516>   MOVE.w pushclen,D0
0002F6B6 <AmiBlitz3.ab3@18517>   LSR.w #1,D0
0002F6B8 <AmiBlitz3.ab3@18518>   SUBQ.w #1,D0
0002F6BA <AmiBlitz3.ab3@18521>     MOVE.w (A1)+,(A0)+
0002F6BE <AmiBlitz3.ab3@18522>   DBF D0,JL_0_B626
0002F6C8 <AmiBlitz3.ab3@18524>    MOVE.l hunkoffsetbase,pushdooff
0002F6CC <AmiBlitz3.ab3@18527>   MOVEM.l (A7)+,D0-D1/A0-A1
0002F6CE <AmiBlitz3.ab3@18528> RTS
0002F6D2 <AmiBlitz3.ab3@18532>   MOVEM.l D0-D1/A0-A1,-(A7)
0002F6D4 <AmiBlitz3.ab3@18533>   MOVEQ.l #$00,D0
0002F6DA <AmiBlitz3.ab3@18534>   MOVE.w pushclen,D0
0002F6DE <AmiBlitz3.ab3@18535>    BEQ.w JL_0_B6D8
0002F6E4 <AmiBlitz3.ab3@18536>   MOVE.l destpointer,D1
0002F6EA <AmiBlitz3.ab3@18537>   ADD.l D0,destpointer
0002F6F0 <AmiBlitz3.ab3@18538>   TST.w dontwrite
0002F6F4 <AmiBlitz3.ab3@18539>    BNE.w JL_0_B6D8
0002F6F6 <AmiBlitz3.ab3@18540>   LSR.w #1,D0
0002F6F8 <AmiBlitz3.ab3@18541>   SUBQ.w #1,D0
0002F6FA <AmiBlitz3.ab3@18542>   MOVEA.l D1,A1
0002F700 <AmiBlitz3.ab3@18543>   MOVEA.l pushat,A0
0002F706 <AmiBlitz3.ab3@18546>     CMPA.l destbufferend,A1
0002F70A <AmiBlitz3.ab3@18547>     BCS.w JL_0_B684
0002F712 <AmiBlitz3.ab3@18549>     MOVE.w #$FFFF,dontwrite
0002F716 <AmiBlitz3.ab3@18550>   BRA.w JL_0_B6D8
0002F718 <AmiBlitz3.ab3@18553>      MOVE.w (A0)+,(A1)+                                    ;copylibcode
0002F71C <AmiBlitz3.ab3@18554>   DBF D0,JL_0_B66E
0002F722 <AmiBlitz3.ab3@18556>   SUB.l pushpc,D1
0002F726 <AmiBlitz3.ab3@18557>   BEQ.w JL_0_B6C2
0002F72C <AmiBlitz3.ab3@18558>   MOVEA.l pushdooff,A0
0002F732 <AmiBlitz3.ab3@18561>   CMPA.l pushoff,A0
0002F736 <AmiBlitz3.ab3@18562>   BEQ.w JL_0_B6C2
0002F73A <AmiBlitz3.ab3@18563>   MOVEA.l $4(A0),A1
0002F740 <AmiBlitz3.ab3@18564>   ADDA.l destbufferstart,A1
0002F746 <AmiBlitz3.ab3@18565>   CMPA.l destbufferend,A1
0002F74A <AmiBlitz3.ab3@18566>   BCC.w JL_0_B6BC
0002F74E <AmiBlitz3.ab3@18567>   ADD.l D1,$4(A0)
0002F750 <AmiBlitz3.ab3@18570>   MOVEA.l (A0),A0
0002F754 <AmiBlitz3.ab3@18571> BRA.w JL_0_B69A
0002F75A <AmiBlitz3.ab3@18574>   MOVEA.l pushat,A1
0002F75C <AmiBlitz3.ab3@18575>   MOVEQ.l #$00,D0
0002F762 <AmiBlitz3.ab3@18576>   MOVE.w pushclen,D0
0002F768 <AmiBlitz3.ab3@18577>   MOVEA.l _execbase,A6
0002F76E <AmiBlitz3.ab3@18578>   MOVE.l mempool,a0
0002F772 <AmiBlitz3.ab3@18582>   MOVEM.l (A7)+,D0-D1/A0-A1
0002F774 <AmiBlitz3.ab3@18583> RTS
0002F776 <AmiBlitz3.ab3@18586>   MOVE.l D1,-(A7)                                          ;array mul
0002F778 <AmiBlitz3.ab3@18587>   MOVEQ.l #$00,D2
0002F77A <AmiBlitz3.ab3@18588>   MOVEQ.l #$0F,D3
0002F77C <AmiBlitz3.ab3@18591>     LSL.w #1,D1
0002F780 <AmiBlitz3.ab3@18592>     BCC.w JL_0_B6EE
0002F782 <AmiBlitz3.ab3@18593>     ADDQ.w #1,D2
0002F784 <AmiBlitz3.ab3@18594>     MOVE.w D3,D4
0002F788 <AmiBlitz3.ab3@18597>   DBF D3,JL_0_B6E4
0002F78A <AmiBlitz3.ab3@18599>   SUBQ.w #1,D2
0002F78E <AmiBlitz3.ab3@18600>    BNE.w JL_0_B726
0002F790 <AmiBlitz3.ab3@18601>   ADDQ.w #4,A7
0002F792 <AmiBlitz3.ab3@18602>   MOVE.w D4,D1
0002F796 <AmiBlitz3.ab3@18603>    BEQ.w JL_0_B724
0002F79A <AmiBlitz3.ab3@18604>   CMP.w #$8,D1
0002F79E <AmiBlitz3.ab3@18605>    BCS.w JL_0_B712
0002F7A2 <AmiBlitz3.ab3@18606>   SUBI.w #$8,D1
0002F7A6 <AmiBlitz3.ab3@18607>    BSR.w JL_0_B712
0002F7A8 <AmiBlitz3.ab3@18608>   MOVEQ.l #$00,D1
0002F7AA <AmiBlitz3.ab3@18611>   LSL.w #8,D1
0002F7AC <AmiBlitz3.ab3@18612>   LSL.w #1,D1
0002F7B0 <AmiBlitz3.ab3@18613>   ORI.w #$E188,D1
0002F7B6 <AmiBlitz3.ab3@18614>   OR.w regnum,D1
0002F7BA <AmiBlitz3.ab3@18615> BRA.w writeword
0002F7BC <AmiBlitz3.ab3@18618> RTS
0002F7BE <AmiBlitz3.ab3@18621>   MOVEQ #0,d1
0002F7C4 <AmiBlitz3.ab3@18622>   MOVE.w regnum,D1
0002F7C6 <AmiBlitz3.ab3@18623>   LSL.l #8,D1
0002F7C8 <AmiBlitz3.ab3@18625>   LSL.l #4,d1
0002F7CE <AmiBlitz3.ab3@18627>   OR.l #$4c3c0000,d1
0002F7D4 <AmiBlitz3.ab3@18628>   OR.w regnum,d1
0002F7D8 <AmiBlitz3.ab3@18629>   BSR.w writelong
0002F7DA <AmiBlitz3.ab3@18630>   MOVE.l (A7)+,D1
0002F7DE <AmiBlitz3.ab3@18632> BRA writelong
0002F7E4 <AmiBlitz3.ab3@18635>   MOVE.l destpointer,-(A7)
0002F7E6 <AmiBlitz3.ab3@18636>   MOVEQ.l #-$01,D7
0002F7EA <AmiBlitz3.ab3@18639>     BSR.w findhilib
0002F7EE <AmiBlitz3.ab3@18640>      BEQ.w JL_0_B8A4
0002F7F2 <AmiBlitz3.ab3@18641>     TST.w $C(A2)
0002F7F6 <AmiBlitz3.ab3@18642>      BPL.w JL_0_B746
0002F7FA <AmiBlitz3.ab3@18644>     MOVE.l $16(A2),D1
0002F7FE <AmiBlitz3.ab3@18645>     BEQ.w JL_0_B746
0002F802 <AmiBlitz3.ab3@18647>     MOVE.w $4(A2),D1                                       ; check state in D1 and do some things
0002F806 <AmiBlitz3.ab3@18648>     CMP.w #-$2,D1
0002F80A <AmiBlitz3.ab3@18649>      BNE.w JL_0_B772
0002F80E <AmiBlitz3.ab3@18650>     BSR.w makevsize
0002F812 <AmiBlitz3.ab3@18651> BRA.w JL_0_B7FE
0002F816 <AmiBlitz3.ab3@18654>     CMP.w #-$5C4,D1
0002F81A <AmiBlitz3.ab3@18655>      BNE.w JL_0_B790
0002F81E <AmiBlitz3.ab3@18656>     MOVE.w #$7000,D1
0002F826 <AmiBlitz3.ab3@18657>     BTST #$7,autorun
0002F828 <AmiBlitz3.ab3@18658>     SNE D1
0002F82C <AmiBlitz3.ab3@18659>     BSR.w writeword
0002F830 <AmiBlitz3.ab3@18660> BRA.w JL_0_B7FE
0002F834 <AmiBlitz3.ab3@18663>     CMP.w #-$12D,D1
0002F838 <AmiBlitz3.ab3@18664>      BNE.w JL_0_B7A0
0002F83C <AmiBlitz3.ab3@18665>     BSR.w makessize
0002F840 <AmiBlitz3.ab3@18666> BRA.w JL_0_B7FE
0002F844 <AmiBlitz3.ab3@18669>     CMP.w #-$1F5,D1
0002F848 <AmiBlitz3.ab3@18670>      BNE.w JL_0_B7C2
0002F84C <AmiBlitz3.ab3@18671>     MOVE.w #$203C,D1
0002F850 <AmiBlitz3.ab3@18672>     BSR.w writeword
0002F854 <AmiBlitz3.ab3@18673>     BSR.w addoff
0002F85A <AmiBlitz3.ab3@18674>     MOVE.l endop,D1
0002F85E <AmiBlitz3.ab3@18675>     BSR.w writelong
0002F862 <AmiBlitz3.ab3@18676> BRA.w JL_0_B7FE
0002F866 <AmiBlitz3.ab3@18679>     CMP.w #-$3E9,D1
0002F86A <AmiBlitz3.ab3@18680>      BNE.w JL_0_B7E4
0002F86E <AmiBlitz3.ab3@18681>     MOVE.w #$203C,D1
0002F872 <AmiBlitz3.ab3@18682>     BSR.w writeword
0002F876 <AmiBlitz3.ab3@18683>     BSR.w addoff
0002F87C <AmiBlitz3.ab3@18684>     MOVE.l data2at,D1
0002F880 <AmiBlitz3.ab3@18685>     BSR.w writelong
0002F884 <AmiBlitz3.ab3@18686> BRA.w JL_0_B7FE
0002F888 <AmiBlitz3.ab3@18689>     CMP.w #$1,D1
0002F88C <AmiBlitz3.ab3@18690>      BNE.w JL_0_B7FE
0002F890 <AmiBlitz3.ab3@18691>     MOVE.w #$203C,D1
0002F894 <AmiBlitz3.ab3@18692>     BSR.w writeword
0002F89A <AmiBlitz3.ab3@18693>     MOVE.l ptr_seg_debugger,D1
0002F89E <AmiBlitz3.ab3@18694>     BSR.w writelong
0002F8A2 <AmiBlitz3.ab3@18697>     MOVE.l $16(A2),D1
0002F8AA <AmiBlitz3.ab3@18698>     MOVE.w #$FFFF,lasta6
0002F8AE <AmiBlitz3.ab3@18699>     BSR.w Amakelibsub
0002F8B4 <AmiBlitz3.ab3@18700>     CMPI.w #$FFFE,$4(A2)
0002F8B8 <AmiBlitz3.ab3@18701>      BNE.w JL_0_B83A
0002F8BE <AmiBlitz3.ab3@18702>     MOVE.l intdata1,D1
0002F8C2 <AmiBlitz3.ab3@18703>      BEQ.w JL_0_B83A
0002F8C8 <AmiBlitz3.ab3@18704>     MOVE.w putidata1,D1
0002F8CC <AmiBlitz3.ab3@18705>     BSR.w writeword
0002F8D0 <AmiBlitz3.ab3@18706>     BSR.w addoff
0002F8D6 <AmiBlitz3.ab3@18707>     MOVE.l intdata1,D1
0002F8DA <AmiBlitz3.ab3@18708>     BSR.w writelong
0002F8DE <AmiBlitz3.ab3@18711>     MOVE.w #$2B40,D1
0002F8E2 <AmiBlitz3.ab3@18712>     TST.w $1A(A2)
0002F8E6 <AmiBlitz3.ab3@18713>      BEQ.w JL_0_B746
0002F8EA <AmiBlitz3.ab3@18714>      BPL.w JL_0_B84E
0002F8EE <AmiBlitz3.ab3@18715>     MOVE.w #$3B40,D1
0002F8F2 <AmiBlitz3.ab3@18718>     BSR.w writeword
0002F8F6 <AmiBlitz3.ab3@18719>     MOVE.w $A(A2),D1
0002F8FA <AmiBlitz3.ab3@18720>      BSR.w writeword
0002F900 <AmiBlitz3.ab3@18721>     CMPI.w #$FFFA,$4(A2)
0002F904 <AmiBlitz3.ab3@18722>      BNE.w JL_0_B746
0002F906 <AmiBlitz3.ab3@18723>     MOVE.w D7,-(A7)
0002F90C <AmiBlitz3.ab3@18724>     MOVE.w numstatic,D4
0002F910 <AmiBlitz3.ab3@18725>      BEQ.w JL_0_B882
0002F916 <AmiBlitz3.ab3@18726>     MOVE.l staticdata,D3
0002F91C <AmiBlitz3.ab3@18727>      JSR datastart
0002F920 <AmiBlitz3.ab3@18728>     MOVE.w #$C500,D1
0002F924 <AmiBlitz3.ab3@18729>      BSR.w tokejsr2
0002F92A <AmiBlitz3.ab3@18732>     MOVE.w maxsused,D4
0002F92E <AmiBlitz3.ab3@18733>      BEQ.w JL_0_B89E
0002F934 <AmiBlitz3.ab3@18734>     MOVE.l maxsat,D3
0002F93A <AmiBlitz3.ab3@18735>      JSR datastart
0002F93E <AmiBlitz3.ab3@18736>     MOVE.w #$CF00,D1
0002F942 <AmiBlitz3.ab3@18737>      BSR.w tokejsr2
0002F944 <AmiBlitz3.ab3@18740>     MOVE.w (A7)+,D7
0002F948 <AmiBlitz3.ab3@18741> BRA.w JL_0_B746
0002F94E <AmiBlitz3.ab3@18744>   MOVE.l destpointer,D1
0002F950 <AmiBlitz3.ab3@18745>   CMP.l (A7),D1
0002F954 <AmiBlitz3.ab3@18746>    BNE.w JL_0_B8BC
0002F95C <AmiBlitz3.ab3@18747>   MOVE.w #$0008,noinits+2
0002F960 <AmiBlitz3.ab3@18748> BRA.w JL_0_B8E6
0002F966 <AmiBlitz3.ab3@18751>   CLR.w noinits+2
0002F96C <AmiBlitz3.ab3@18752>   MOVE.w dontwrite,D1
0002F970 <AmiBlitz3.ab3@18753>    BNE.w JL_0_B8DE
0002F976 <AmiBlitz3.ab3@18754>   TST.l newinitaddr
0002F97A <AmiBlitz3.ab3@18755>    BEQ 'l10
0002F980 <AmiBlitz3.ab3@18756>   MOVE.l newinitaddr,D2
0002F986 <AmiBlitz3.ab3@18757>   SUB.l destbufferstart,D2
0002F988 <AmiBlitz3.ab3@18758>   ADDQ.l #2,d2
0002F98E <AmiBlitz3.ab3@18759>   MOVEA.l newinitaddr,A0                                   ;write newinitcode
0002F992 <AmiBlitz3.ab3@18761>   MOVE.w #$4EB9,(A0)+
0002F994 <AmiBlitz3.ab3@18762>   MOVE.l (A7),(A0)+
0002F998 <AmiBlitz3.ab3@18764> BRA 'l20
0002F99E <AmiBlitz3.ab3@18767>   MOVEA.l destbufferstart,A0                               ;write initcode
0002F9A4 <AmiBlitz3.ab3@18768>   TST.b saved0
0002F9A8 <AmiBlitz3.ab3@18769>   BEQ 'l1
0002F9AC <AmiBlitz3.ab3@18770>   MOVE.w #$23c0,(a0)+
0002F9AE <AmiBlitz3.ab3@18771>   MOVE.l a0,a1
0002F9B0 <AmiBlitz3.ab3@18772>   ADDQ.l #6,a1
0002F9B2 <AmiBlitz3.ab3@18773>   MOVE.l a1,(a0)+
0002F9B4 <AmiBlitz3.ab3@18774>   MOVEQ.l #$02,D2
0002F9B8 <AmiBlitz3.ab3@18775>   BSR.w addhunkoffset
0002F9BC <AmiBlitz3.ab3@18776>   MOVE.w #$6004,(a0)+
0002F9C2 <AmiBlitz3.ab3@18777>   MOVE.l #$4e714e71,(a0)+
0002F9C6 <AmiBlitz3.ab3@18780>   MOVE.w #$4EB9,(A0)+
0002F9C8 <AmiBlitz3.ab3@18781>   MOVE.l (A7),(A0)+
0002F9CA <AmiBlitz3.ab3@18782>   MOVEQ #2,d2
0002F9D0 <AmiBlitz3.ab3@18783>   TST.b saved0
0002F9D4 <AmiBlitz3.ab3@18784>   BEQ 'l20
0002F9D6 <AmiBlitz3.ab3@18785>   MOVEQ.l #14,D2
0002F9DA <AmiBlitz3.ab3@18788>   BSR.w addhunkoffset
0002F9DE <AmiBlitz3.ab3@18789>   MOVE.w #$2039,(a0)+
0002F9E0 <AmiBlitz3.ab3@18790>   MOVE.l a1,(a0)+
0002F9E2 <AmiBlitz3.ab3@18791>   MOVEQ.l #20,d2
0002F9E6 <AmiBlitz3.ab3@18794>   BSR.w addhunkoffset
0002F9EA <AmiBlitz3.ab3@18797>   MOVE.w #$4E75,D1
0002F9EE <AmiBlitz3.ab3@18798>   BSR.w writeword
0002F9F0 <AmiBlitz3.ab3@18801>   ADDQ.w #4,A7
0002F9F2 <AmiBlitz3.ab3@18802> RTS
0002F9F6 <AmiBlitz3.ab3@18807>   Dc.b $22,$2D,$00,$00                                     ;MOVE.L  $0000(A5),D1
0002F9FC <AmiBlitz3.ab3@18809>   Dc.b $23,$CD,$00,$00,$00,$00                             ;MOVE.L  A5,$00000000
0002FA02 <AmiBlitz3.ab3@18811>   Dc.b $24,$7C,$00,$00,$00,$00                             ;MOVEA.L #$00000000,A2
0002FA08 <AmiBlitz3.ab3@18816>   MOVE.l stringbuffer,D1
0002FA0C <AmiBlitz3.ab3@18817> BRA.w makesize
0002FA0E <AmiBlitz3.ab3@18820>   MOVEQ.l #$00,D1
0002FA14 <AmiBlitz3.ab3@18821>   MOVE.w globalvarpointer,D1
0002FA18 <AmiBlitz3.ab3@18822>   SUBI.w #$8000,D1
0002FA1C <AmiBlitz3.ab3@18823>   BNE.w makesize
0002FA1E <AmiBlitz3.ab3@18824>     MOVEQ.l #$08,D1
0002FA20 <AmiBlitz3.ab3@18827>   MOVE.l D1,-(A7)
0002FA24 <AmiBlitz3.ab3@18828>   MOVE.w #$203C,D1
0002FA28 <AmiBlitz3.ab3@18829>   BSR.w writeword
0002FA2A <AmiBlitz3.ab3@18830>   MOVE.l (A7)+,D1
0002FA2E <AmiBlitz3.ab3@18831> BRA.w writelong
0002FA30 <AmiBlitz3.ab3@18839>   MOVEQ.l #$00,D1
0002FA36 <AmiBlitz3.ab3@18840>   MOVEA.l libpointer,A1
0002FA3A <AmiBlitz3.ab3@18843>     CMPA.w #$0,A1
0002FA3E <AmiBlitz3.ab3@18844>     BEQ.w findhilib__done
0002FA42 <AmiBlitz3.ab3@18845>       CMP.w $4(A1),D7
0002FA46 <AmiBlitz3.ab3@18846>       BLS.w findhilib__next
0002FA4A <AmiBlitz3.ab3@18847>         CMP.w $4(A1),D1
0002FA4E <AmiBlitz3.ab3@18848>         BCC.w findhilib__next
0002FA52 <AmiBlitz3.ab3@18849>           MOVE.w $4(A1),D1
0002FA54 <AmiBlitz3.ab3@18850>           MOVEA.l A1,A2
0002FA56 <AmiBlitz3.ab3@18853>     MOVEA.l (A1),A1
0002FA5A <AmiBlitz3.ab3@18854> BRA.w findhilib__loop
0002FA5C <AmiBlitz3.ab3@18857>   MOVE.w D1,D7
0002FA5E <AmiBlitz3.ab3@18858> RTS
0002FA60 <AmiBlitz3.ab3@18866>   MOVEQ.l #-$01,D1
0002FA66 <AmiBlitz3.ab3@18867>   MOVEA.l libpointer,A1
0002FA6A <AmiBlitz3.ab3@18870>     CMPA.w #$0,A1
0002FA6E <AmiBlitz3.ab3@18871>      BEQ.w findlolib__done
0002FA72 <AmiBlitz3.ab3@18872>     CMP.w $4(A1),D7
0002FA76 <AmiBlitz3.ab3@18873>      BCC.w findlolib__next
0002FA7A <AmiBlitz3.ab3@18874>     CMP.w $4(A1),D1
0002FA7E <AmiBlitz3.ab3@18875>      BLS.w findlolib__next
0002FA82 <AmiBlitz3.ab3@18876>     MOVE.w $4(A1),D1
0002FA84 <AmiBlitz3.ab3@18877>     MOVEA.l A1,A2
0002FA86 <AmiBlitz3.ab3@18880>     MOVEA.l (A1),A1
0002FA8A <AmiBlitz3.ab3@18881> BRA.w findlolib__loop
0002FA8C <AmiBlitz3.ab3@18884>   MOVE.w D1,D7
0002FA90 <AmiBlitz3.ab3@18885>   CMP.w #-$1,D1
0002FA92 <AmiBlitz3.ab3@18886> RTS
0002FA98 <AmiBlitz3.ab3@18890>   ADDQ.w #1,globalvarpointer
0002FAA0 <AmiBlitz3.ab3@18891>   BCLR #$0,globalvarpointer+1
0002FAA2 <AmiBlitz3.ab3@18892>   MOVEQ.l #$00,D7
0002FAA6 <AmiBlitz3.ab3@18895>     BSR.w findlolib
0002FAAA <AmiBlitz3.ab3@18896>     BEQ.w JL_0_BA74
0002FAAE <AmiBlitz3.ab3@18897>     TST.w $C(A2)
0002FAB2 <AmiBlitz3.ab3@18898>     BPL.w JL_0_B99A
0002FAB4 <AmiBlitz3.ab3@18899>     MOVEA.l A2,A1
0002FAB8 <AmiBlitz3.ab3@18900>     ADDA.l $12(A1),A1
0002FABC <AmiBlitz3.ab3@18901>     TST.w -$2(A1)
0002FAC0 <AmiBlitz3.ab3@18902>     BEQ.w JL_0_BA34
0002FAC4 <AmiBlitz3.ab3@18903>     MOVE.l -$A(A1),D1
0002FAC8 <AmiBlitz3.ab3@18904>     LEA $6(A2,D1.L),A3
0002FACA <AmiBlitz3.ab3@18907>       TST.w (A3)+
0002FACE <AmiBlitz3.ab3@18908>       BEQ.w JL_0_B9CC
0002FAD0 <AmiBlitz3.ab3@18909>         ADDQ.w #2,A3
0002FAD4 <AmiBlitz3.ab3@18910> BRA.w JL_0_B9C0
0002FAD8 <AmiBlitz3.ab3@18913>     TST.l $4(A3)
0002FADC <AmiBlitz3.ab3@18914>     BEQ.w JL_0_BA34
0002FAE0 <AmiBlitz3.ab3@18915>       MOVE.w freemax(PC),D1
0002FAE4 <AmiBlitz3.ab3@18916>       BSR.w writeword
0002FAE8 <AmiBlitz3.ab3@18917>       MOVE.w -$4(A1),D1
0002FAEC <AmiBlitz3.ab3@18918>       BSR.w writeword
0002FAF2 <AmiBlitz3.ab3@18919>       MOVE.l free,D1
0002FAF6 <AmiBlitz3.ab3@18920>       MOVE.w -$6(A1),D1
0002FAFA <AmiBlitz3.ab3@18921>       BSR.w writelong
0002FB00 <AmiBlitz3.ab3@18922>       MOVE.l destpointer,-(A7)
0002FB02 <AmiBlitz3.ab3@18923>       MOVEQ.l #$01,D1
0002FB06 <AmiBlitz3.ab3@18924>       MOVE.w -$2(A1),D2
0002FB08 <AmiBlitz3.ab3@18925>       LSL.w D2,D1
0002FB0A <AmiBlitz3.ab3@18926>       MOVE.w D1,-(A7)
0002FB0E <AmiBlitz3.ab3@18927>       MOVE.l -$A(A1),D1
0002FB12 <AmiBlitz3.ab3@18928>       BSR.w Amakelibsub
0002FB16 <AmiBlitz3.ab3@18929>       MOVE.w freemax3(PC),D1
0002FB1A <AmiBlitz3.ab3@18930>       BSR.w writeword
0002FB1C <AmiBlitz3.ab3@18931>       MOVE.w (A7)+,D1
0002FB20 <AmiBlitz3.ab3@18932>       BSR.w writeword
0002FB24 <AmiBlitz3.ab3@18933>       MOVE.l freemax2(PC),D1
0002FB28 <AmiBlitz3.ab3@18934>       BSR.w writelong
0002FB2A <AmiBlitz3.ab3@18935>       MOVE.l (A7)+,D1
0002FB30 <AmiBlitz3.ab3@18936>       SUB.l destpointer,D1
0002FB34 <AmiBlitz3.ab3@18937>       BSR.w writeword
0002FB38 <AmiBlitz3.ab3@18938>       MOVE.w freemax4(PC),D1
0002FB3C <AmiBlitz3.ab3@18939>       BSR.w writeword
0002FB40 <AmiBlitz3.ab3@18942>     MOVE.l $1C(A2),D1
0002FB44 <AmiBlitz3.ab3@18943>     BEQ.w JL_0_B99A
0002FB48 <AmiBlitz3.ab3@18945>     MOVE.w $4(A2),D1
0002FB4C <AmiBlitz3.ab3@18946>     CMP.w #-$2,D1
0002FB50 <AmiBlitz3.ab3@18947>     BNE.w JL_0_BA50
0002FB54 <AmiBlitz3.ab3@18948>       BSR.w makevsize
0002FB58 <AmiBlitz3.ab3@18949> BRA.w JL_0_BA60
0002FB5C <AmiBlitz3.ab3@18952>     CMP.w #-$12D,D1
0002FB60 <AmiBlitz3.ab3@18953>     BNE.w JL_0_BA60
0002FB64 <AmiBlitz3.ab3@18954>       BSR.w makessize
0002FB68 <AmiBlitz3.ab3@18955> BRA.w JL_0_BA60
0002FB6C <AmiBlitz3.ab3@18958>     MOVE.l $1C(A2),D1
0002FB74 <AmiBlitz3.ab3@18959>     MOVE.w #$FFFF,lasta6
0002FB78 <AmiBlitz3.ab3@18960>     BSR.w Amakelibsub
0002FB7C <AmiBlitz3.ab3@18961> BRA.w JL_0_B99A
0002FB7E <AmiBlitz3.ab3@18964> RTS
0002FB82 <AmiBlitz3.ab3@18968> freemax:   Dc.b $3F,$3C,$00,$00                            ;MOVE.W  #$0000,-(A7)
0002FB84 <AmiBlitz3.ab3@18970> freemax2:  Dc.b $53,$57                                    ;SUBQ.W  #1,(A7)
0002FB88 <AmiBlitz3.ab3@18971>            Dc.b $66,$00,$FF,$FC                            ;BNE.W freemax2
0002FB8A <AmiBlitz3.ab3@18972> freemax4:  Dc.b $54,$4F                                    ;ADDQ.W  #2,A7
0002FB8E <AmiBlitz3.ab3@18973> freemax3:  Dc.b $47,$EB,$00,$00                            ;LEA $0000(A3),A3
0002FB94 <AmiBlitz3.ab3@18978>   TST.b debugmode
0002FB98 <AmiBlitz3.ab3@18979>    BEQ.b chkstak__skip
0002FB9E <AmiBlitz3.ab3@18980>   TST.w debugversion
0002FBA2 <AmiBlitz3.ab3@18981>    BNE.b chkstak__skip
0002FBA6 <AmiBlitz3.ab3@18982>   MOVE.w #$C308,D1
0002FBAA <AmiBlitz3.ab3@18983> BRA.w Atokejsr
0002FBAC <AmiBlitz3.ab3@18986> RTS
0002FBB4 <AmiBlitz3.ab3@18990>   MOVE.w #$FFFF,lasta6
0002FBB8 <AmiBlitz3.ab3@18995>   MOVEM.l D0-d7/A0-a6,-(A7)
0002FBC0 <AmiBlitz3.ab3@18996>   MOVE.b #1,nostringopt
0002FBC6 <AmiBlitz3.ab3@18997>   JSR searchinstr
0002FBC8 <AmiBlitz3.ab3@18998>   MOVE.l A3,D1
0002FBCA <AmiBlitz3.ab3@18999>   SUB.l A2,D1
0002FBCE <AmiBlitz3.ab3@19000>   BSR.w Amakelibsub
0002FBD2 <AmiBlitz3.ab3@19001>   MOVEM.l (A7)+,d0-d7/a0-a6
0002FBD4 <AmiBlitz3.ab3@19002> RTS
0002FBDA <AmiBlitz3.ab3@19009>   MOVE.l libisat,-(A7)                                   ;library write
0002FBE0 <AmiBlitz3.ab3@19010>   MOVE.l A2,libisat
0002FBE2 <AmiBlitz3.ab3@19012>   MOVEA.l A1,A2
0002FBE4 <AmiBlitz3.ab3@19013>   MOVE.w (A2)+,D1
0002FBEA <AmiBlitz3.ab3@19014>   MOVE.l a2,lastinstructionaddr
0002FBEE <AmiBlitz3.ab3@19015>   ANDI.w #$FF,D1
0002FBF0 <AmiBlitz3.ab3@19016>   ADDA.w D1,A2
0002FBF2 <AmiBlitz3.ab3@19017>   EXG.l D0,A2
0002FBF4 <AmiBlitz3.ab3@19018>   ADDQ.l #1,D0
0002FBF8 <AmiBlitz3.ab3@19019>   BCLR #$0,D0
0002FBFA <AmiBlitz3.ab3@19020>   EXG.l D0,A2
0002FBFE <AmiBlitz3.ab3@19021> BRA.w JL_0_BB08
0002FC04 <AmiBlitz3.ab3@19025>   MOVE.l libisat,-(A7)
0002FC0A <AmiBlitz3.ab3@19026>   MOVE.l A2,libisat
0002FC0C <AmiBlitz3.ab3@19027>   MOVEA.l A3,A2
0002FC10 <AmiBlitz3.ab3@19028> BRA.w JL_0_BB08
0002FC12 <AmiBlitz3.ab3@19032>   MOVE.l a1,-(a7)
0002FC14 <AmiBlitz3.ab3@19035>   MOVE.l d0,a0
0002FC18 <AmiBlitz3.ab3@19036>   MOVE.l $a(a0),d0
0002FC1A <AmiBlitz3.ab3@19037>   MOVE.l d0,a1
0002FC22 <AmiBlitz3.ab3@19038>   CMP.l #8,4(a1)
0002FC26 <AmiBlitz3.ab3@19039>   BLE 'norec
0002FC28 <AmiBlitz3.ab3@19040>   MOVE.l a0,-(a7)
0002FC2E <AmiBlitz3.ab3@19041>   MOVE.l typebase,-(a7)
0002FC30 <AmiBlitz3.ab3@19042>   MOVEQ #0,d0
0002FC34 <AmiBlitz3.ab3@19043>   MOVE.w 4(a0),d0
0002FC3A <AmiBlitz3.ab3@19044>   ADD.l d0,typebase
0002FC3E <AmiBlitz3.ab3@19045>   MOVE.l $4(a1),d0
0002FC42 <AmiBlitz3.ab3@19046>   BSR scantype
0002FC48 <AmiBlitz3.ab3@19047>   MOVE.l (a7)+,typebase
0002FC4A <AmiBlitz3.ab3@19048>   MOVE.l (a7)+,a0
0002FC50 <AmiBlitz3.ab3@19051>   CMP.l #newtype_string,d0
0002FC54 <AmiBlitz3.ab3@19052>   BNE 'nostring
0002FC5A <AmiBlitz3.ab3@19053>   ADDQ #2,a2offset
0002FC60 <AmiBlitz3.ab3@19054>   MOVE.l #$3f3c0000,d1
0002FC62 <AmiBlitz3.ab3@19055>   MOVEQ #0,d0
0002FC66 <AmiBlitz3.ab3@19056>   MOVE.w 4(a0),d0
0002FC6C <AmiBlitz3.ab3@19057>   ADD.l typebase,d0
0002FC6E <AmiBlitz3.ab3@19058>   MOVE.w d0,d1
0002FC72 <AmiBlitz3.ab3@19059>   BSR writelong
0002FC78 <AmiBlitz3.ab3@19060>   TST.b debugmode
0002FC7C <AmiBlitz3.ab3@19061>   BEQ 'l1a
0002FC7E <AmiBlitz3.ab3@19062>   MOVE.l d1,-(a7)
0002FC84 <AmiBlitz3.ab3@19063>   MOVE.l #$c308,d1
0002FC8A <AmiBlitz3.ab3@19064>   JSR Atokejsr
0002FC8C <AmiBlitz3.ab3@19065>   MOVE.l (a7)+,d1
0002FC90 <AmiBlitz3.ab3@19068>   TST.w 8(a0)
0002FC94 <AmiBlitz3.ab3@19069>   BEQ 'nostring
0002FC98 <AmiBlitz3.ab3@19070>   MOVEM.l d2/d3,-(a7)
0002FC9A <AmiBlitz3.ab3@19071>   MOVE.l d1,d2
0002FC9C <AmiBlitz3.ab3@19072>   MOVEQ #0,d3
0002FCA0 <AmiBlitz3.ab3@19073>   MOVE.w 8(a0),d3
0002FCA2 <AmiBlitz3.ab3@19074>   SUBQ.l #1,d3
0002FCA6 <AmiBlitz3.ab3@19075>   BEQ 'nostring2
0002FCA8 <AmiBlitz3.ab3@19078>   ADDQ.l #4,d2
0002FCAA <AmiBlitz3.ab3@19079>   MOVE.l d2,d1
0002FCAE <AmiBlitz3.ab3@19080>   BSR writelong
0002FCB4 <AmiBlitz3.ab3@19081>   TST.b debugmode
0002FCB8 <AmiBlitz3.ab3@19082>   BEQ 'l1
0002FCBE <AmiBlitz3.ab3@19083>   MOVE.l #$c308,d1
0002FCC4 <AmiBlitz3.ab3@19084>   JSR Atokejsr
0002FCCA <AmiBlitz3.ab3@19087>   ADDQ #2,a2offset
0002FCCC <AmiBlitz3.ab3@19088>   SUBQ.l #1,d3
0002FCD0 <AmiBlitz3.ab3@19089>   BNE 'loop
0002FCD4 <AmiBlitz3.ab3@19092>   MOVEM.l (a7)+,d2/d3
0002FCD6 <AmiBlitz3.ab3@19095>   MOVE.l (a0),d0
0002FCDA <AmiBlitz3.ab3@19096>   BNE 'more
0002FCDC <AmiBlitz3.ab3@19097>   MOVE.l (a7)+,a1
0002FCDE <AmiBlitz3.ab3@19098> RTS
0002FCE2 <AmiBlitz3.ab3@19101> libisat:   Ds.l 1
0002FCE8 <AmiBlitz3.ab3@19107>   MOVE.l libisat,-(A7)                                   
0002FCEE <AmiBlitz3.ab3@19108>   MOVE.l A2,libisat
0002FCF2 <AmiBlitz3.ab3@19109>   LEA $6(A2,D1.L),A2
0002FCFA <AmiBlitz3.ab3@19113>   CMP.l #$3e19436c,$1c-8(a2)                               ;clear type
0002FCFE <AmiBlitz3.ab3@19114>   BEQ 'dowritevar
0002FD06 <AmiBlitz3.ab3@19115>   CMP.l #$3e18436f,$1c-8(a2)                               ;copy type
0002FD0A <AmiBlitz3.ab3@19116>   BEQ 'dowritevar
0002FD12 <AmiBlitz3.ab3@19117>   CMP.l #$3e175265,$1c(a2)
0002FD16 <AmiBlitz3.ab3@19118>   BEQ 'dowritevar
0002FD1E <AmiBlitz3.ab3@19119>   CMP.l #$3e165772,$1c(a2)
0002FD22 <AmiBlitz3.ab3@19120>   BNE 'nowritef
0002FD26 <AmiBlitz3.ab3@19123>   MOVEM.l a0-a2/d2,-(a7)
0002FD28 <AmiBlitz3.ab3@19124>   MOVEQ #0,d1
0002FD32 <AmiBlitz3.ab3@19125>   MOVE.l #0,typebase
0002FD36 <AmiBlitz3.ab3@19126>   MOVE.l $a(a3),a0
0002FD3A <AmiBlitz3.ab3@19127>   MOVE.l $4(a0),d0
0002FD40 <AmiBlitz3.ab3@19128>   CMP.l #8,d0
0002FD44 <AmiBlitz3.ab3@19129>   BLE 'notype
0002FD48 <AmiBlitz3.ab3@19130>   BSR scantype
0002FD4E <AmiBlitz3.ab3@19133>   MOVE.l #$3f3c0000,d1
0002FD54 <AmiBlitz3.ab3@19134>   MOVE.w a2offset,d1
0002FD58 <AmiBlitz3.ab3@19135>   BSR writelong
0002FD5E <AmiBlitz3.ab3@19136>   MOVE.l #$3f3c0000,d1
0002FD62 <AmiBlitz3.ab3@19137>   MOVE.l $a(a3),a0
0002FD66 <AmiBlitz3.ab3@19138>   MOVE.w 8(a0),d1
0002FD6A <AmiBlitz3.ab3@19139>   BSR writelong
0002FD70 <AmiBlitz3.ab3@19140>   MOVE.l #$3f3cab12,d1
0002FD74 <AmiBlitz3.ab3@19141>   BSR writelong
0002FD7A <AmiBlitz3.ab3@19142>   ADDQ.w #6,a2offset
0002FD7E <AmiBlitz3.ab3@19143>   MOVEM.l (a7)+,a0-a2/d2
0002FD84 <AmiBlitz3.ab3@19146>   TST.b fpu
0002FD88 <AmiBlitz3.ab3@19147>   BEQ 'nofpu2
0002FD90 <AmiBlitz3.ab3@19148>   CMP.l #$496e7400,$1a(a2)
0002FD94 <AmiBlitz3.ab3@19149>   BNE 'noint
0002FD96 <AmiBlitz3.ab3@19150>   MOVEQ #0,d1
0002FD9C <AmiBlitz3.ab3@19151>   SUBQ.l #8,destpointer                                    ;fpu int
0002FDA2 <AmiBlitz3.ab3@19152>   CLR.w a2offset
0002FDA6 <AmiBlitz3.ab3@19153>   CMP.b #2,d2
0002FDAA <AmiBlitz3.ab3@19154>   BGT 'noword
0002FDAE <AmiBlitz3.ab3@19155>   MOVE.w #$48c0,d1
0002FDB4 <AmiBlitz3.ab3@19156>   OR.w regnumstore,d1
0002FDB8 <AmiBlitz3.ab3@19157>   BSR writeword
0002FDBC <AmiBlitz3.ab3@19158> BRA 'exit2
0002FDC0 <AmiBlitz3.ab3@19161>    CMP.b #3,d2
0002FDC4 <AmiBlitz3.ab3@19162>         BNE 'nolong
0002FDC8 <AmiBlitz3.ab3@19163> BRA 'exit2
0002FDCC <AmiBlitz3.ab3@19166>    CMP.b #4,d2
0002FDD0 <AmiBlitz3.ab3@19167>         BNE 'noquick
0002FDD4 <AmiBlitz3.ab3@19168>         MOVE.w #$e080,d1
0002FDDA <AmiBlitz3.ab3@19169>         OR.w regnumstore,d1
0002FDDE <AmiBlitz3.ab3@19170>         BSR writeword
0002FDE2 <AmiBlitz3.ab3@19171>         MOVE.w #$e080,d1
0002FDE8 <AmiBlitz3.ab3@19172>         OR.w regnumstore,d1
0002FDEC <AmiBlitz3.ab3@19173>         BSR writeword
0002FDF0 <AmiBlitz3.ab3@19174> BRA 'exit2
0002FDF2 <AmiBlitz3.ab3@19177>         MOVEQ #0,d0
0002FDF4 <AmiBlitz3.ab3@19178>         MOVEQ #0,d1
0002FDFA <AmiBlitz3.ab3@19179>         MOVE.w regnumstore,d0
0002FDFC <AmiBlitz3.ab3@19180>         ASL.l #7,d0
0002FE02 <AmiBlitz3.ab3@19181>         OR.l #$f23c4428,d1                                 ;fsub.s 0.5,fpx
0002FE04 <AmiBlitz3.ab3@19182>         OR.l d0,d1
0002FE0A <AmiBlitz3.ab3@19184>         MOVE.l #$3f000000,d1
0002FE0C <AmiBlitz3.ab3@19186>         MOVEQ #0,d0
0002FE0E <AmiBlitz3.ab3@19187>         MOVEQ #0,d1
0002FE14 <AmiBlitz3.ab3@19188>         MOVE.w regnumstore,d0
0002FE16 <AmiBlitz3.ab3@19189>         ASL.l #7,d0
0002FE18 <AmiBlitz3.ab3@19190>         MOVE.l d0,d1
0002FE1E <AmiBlitz3.ab3@19191>         OR.l #$f2000003,d1                                 ;fintrz fpx
0002FE20 <AmiBlitz3.ab3@19192>         ASL.l #3,d0
0002FE22 <AmiBlitz3.ab3@19193>         OR.l d0,d1
0002FE26 <AmiBlitz3.ab3@19194>         BSR writelong
0002FE28 <AmiBlitz3.ab3@19195>         MOVEQ #0,d0
0002FE2E <AmiBlitz3.ab3@19196>         MOVE.w regnumstore,d0
0002FE30 <AmiBlitz3.ab3@19197>         ASL.l #7,d0
0002FE36 <AmiBlitz3.ab3@19198>         MOVE.l #$f2006000,d1                               ;fmove.l fp0,d0
0002FE38 <AmiBlitz3.ab3@19199>         OR.l d0,d1
0002FE3A <AmiBlitz3.ab3@19200>         ASL.l #1,d0
0002FE3C <AmiBlitz3.ab3@19201>         ASL.l #8,d0
0002FE3E <AmiBlitz3.ab3@19202>         OR.l d0,d1
0002FE42 <AmiBlitz3.ab3@19203> BRA 'exit
0002FE48 <AmiBlitz3.ab3@19206>   CMP.w #$3c01,24(a2)
0002FE4C <AmiBlitz3.ab3@19207>   BNE 'noval
0002FE4E <AmiBlitz3.ab3@19208>   MOVE.l a2,-(a7)
0002FE52 <AmiBlitz3.ab3@19209>   BSR.w JL_0_BB14
0002FE54 <AmiBlitz3.ab3@19210>   MOVE.l (a7)+,a2
0002FE58 <AmiBlitz3.ab3@19211> BRA 'exit2
0002FE60 <AmiBlitz3.ab3@19228>   CMP.l #$41627300,$1a(a2)
0002FE64 <AmiBlitz3.ab3@19229>   BNE 'noabs
0002FE66 <AmiBlitz3.ab3@19230>   MOVEQ #0,d1
0002FE6C <AmiBlitz3.ab3@19231>   MOVE.w regnumstore,d1
0002FE6E <AmiBlitz3.ab3@19232>   MOVE.w d1,d0
0002FE70 <AmiBlitz3.ab3@19233>   ASL.w #7,d1
0002FE72 <AmiBlitz3.ab3@19234>   ASL.w #8,d0
0002FE74 <AmiBlitz3.ab3@19235>   ASL.w #2,d0
0002FE76 <AmiBlitz3.ab3@19236>   OR.w d0,d1
0002FE7C <AmiBlitz3.ab3@19237>   SUBQ.l #8,destpointer                                    ;fpu abs
0002FE80 <AmiBlitz3.ab3@19238>   MOVEM.l d3/d1,-(a7)
0002FE84 <AmiBlitz3.ab3@19239>   MOVE.w #5,d3
0002FE86 <AmiBlitz3.ab3@19240>   EXG d2,d3
0002FE8C <AmiBlitz3.ab3@19241>   MOVE.w regnum,-(a7)
0002FE96 <AmiBlitz3.ab3@19242>   MOVE.w regnumstore,regnum
0002FE9A <AmiBlitz3.ab3@19243>   BSR writeconvertcode
0002FEA0 <AmiBlitz3.ab3@19244>   MOVE.w (a7)+,regnum
0002FEA2 <AmiBlitz3.ab3@19245>   EXG d2,d3
0002FEA6 <AmiBlitz3.ab3@19246>   MOVEM.l (a7)+,d3/d1
0002FEAC <AmiBlitz3.ab3@19247>   OR.l #$f2000018,d1
0002FEB2 <AmiBlitz3.ab3@19248>   CLR.w a2offset
0002FEB6 <AmiBlitz3.ab3@19249> BRA 'exit
0002FEBA <AmiBlitz3.ab3@19252>   CMP.b #5,d2
0002FEBE <AmiBlitz3.ab3@19253>   BNE 'nofpu2
0002FEC2 <AmiBlitz3.ab3@19254>   MOVE.b 24(a2),d0
0002FEC6 <AmiBlitz3.ab3@19255>   CMP.b #$60,d0                                            ;nolib $edxx
0002FECA <AmiBlitz3.ab3@19256>   BNE 'nofpu
0002FECC <AmiBlitz3.ab3@19257>   MOVEQ #0,d1
0002FED2 <AmiBlitz3.ab3@19258>   MOVE.w regnumstore,d1
0002FED4 <AmiBlitz3.ab3@19259>   MOVE.w d1,d0
0002FED6 <AmiBlitz3.ab3@19260>   ASL.w #7,d1
0002FED8 <AmiBlitz3.ab3@19261>   ASL.w #8,d0
0002FEDA <AmiBlitz3.ab3@19262>   ASL.w #2,d0
0002FEDC <AmiBlitz3.ab3@19263>   OR.w d0,d1
0002FEE0 <AmiBlitz3.ab3@19264>   MOVE.b 25(a2),d0
0002FEE4 <AmiBlitz3.ab3@19265>   CMP.b #5,d0
0002FEE8 <AmiBlitz3.ab3@19266>   BNE 'nocos
0002FEEE <AmiBlitz3.ab3@19267>   OR.l #$f200001d,d1                                       ;fpu cos
0002FEF2 <AmiBlitz3.ab3@19268> BRA 'exit
0002FEF6 <AmiBlitz3.ab3@19271>   CMP.b #$c,d0
0002FEFA <AmiBlitz3.ab3@19272>   BNE 'nosqr
0002FF00 <AmiBlitz3.ab3@19273>   OR.l #$f2000004,d1                                       ;fpu sqr
0002FF04 <AmiBlitz3.ab3@19274> BRA 'exit
0002FF08 <AmiBlitz3.ab3@19277>   CMP.b #$d,d0
0002FF0C <AmiBlitz3.ab3@19278>   BNE 'notan
0002FF12 <AmiBlitz3.ab3@19279>   OR.l #$f200000f,d1                                       ;fpu tan
0002FF16 <AmiBlitz3.ab3@19280> BRA 'exit
0002FF1A <AmiBlitz3.ab3@19283>   CMP.b #$a,d0
0002FF1E <AmiBlitz3.ab3@19284>   BNE 'nosin
0002FF24 <AmiBlitz3.ab3@19285>   OR.l #$f200000e,d1                                       ;fpu sin
0002FF28 <AmiBlitz3.ab3@19286> BRA 'exit
0002FF2C <AmiBlitz3.ab3@19289>   CMP.b #$3,d0
0002FF30 <AmiBlitz3.ab3@19290>   BNE 'noasin
0002FF36 <AmiBlitz3.ab3@19291>   OR.l #$f200000c,d1                                       ;fpu asin
0002FF3A <AmiBlitz3.ab3@19292> BRA 'exit
0002FF3E <AmiBlitz3.ab3@19295>   CMP.b #$2,d0
0002FF42 <AmiBlitz3.ab3@19296>   BNE 'noacos
0002FF48 <AmiBlitz3.ab3@19297>   OR.l #$f200001c,d1                                       ;fpu acos
0002FF4C <AmiBlitz3.ab3@19298> BRA 'exit
0002FF50 <AmiBlitz3.ab3@19301>   CMP.b #$4,d0
0002FF54 <AmiBlitz3.ab3@19302>   BNE 'noatan
0002FF5A <AmiBlitz3.ab3@19303>   OR.l #$f200000a,d1                                       ;fpu atan
0002FF5E <AmiBlitz3.ab3@19304> BRA 'exit
0002FF62 <AmiBlitz3.ab3@19307>   CMP.b #$e,d0
0002FF66 <AmiBlitz3.ab3@19308>   BNE 'nohtan
0002FF6C <AmiBlitz3.ab3@19309>   OR.l #$f2000009,d1                                       ;fpu htan
0002FF70 <AmiBlitz3.ab3@19310> BRA 'exit
0002FF74 <AmiBlitz3.ab3@19313>   CMP.b #$6,d0
0002FF78 <AmiBlitz3.ab3@19314>   BNE 'nohcos
0002FF7E <AmiBlitz3.ab3@19315>   OR.l #$f2000019,d1                                       ;fpu hcos
0002FF82 <AmiBlitz3.ab3@19316> BRA 'exit
0002FF86 <AmiBlitz3.ab3@19319>   CMP.b #$b,d0
0002FF8A <AmiBlitz3.ab3@19320>   BNE 'nohsin
0002FF90 <AmiBlitz3.ab3@19321>   OR.l #$f2000002,d1                                       ;fpu hsin
0002FF94 <AmiBlitz3.ab3@19322> BRA 'exit
0002FF98 <AmiBlitz3.ab3@19325>   CMP.b #$9,d0
0002FF9C <AmiBlitz3.ab3@19326>   BNE 'nolog
0002FFA2 <AmiBlitz3.ab3@19327>   OR.l #$f2000014,d1                                       ;fpu log
0002FFA6 <AmiBlitz3.ab3@19328> BRA 'exit
0002FFAA <AmiBlitz3.ab3@19331>   CMP.b #$8,d0
0002FFAE <AmiBlitz3.ab3@19332>   BNE 'nolog10
0002FFB4 <AmiBlitz3.ab3@19333>   OR.l #$f2000015,d1                                       ;fpu log10
0002FFB8 <AmiBlitz3.ab3@19334> BRA 'exit
0002FFBC <AmiBlitz3.ab3@19337>   CMP.b #$7,d0
0002FFC0 <AmiBlitz3.ab3@19338>   BNE 'noexp
0002FFC6 <AmiBlitz3.ab3@19339>   OR.l #$f2000010,d1                                       ;fpu exp
0002FFCA <AmiBlitz3.ab3@19340> BRA 'exit
0002FFD0 <AmiBlitz3.ab3@19343>   LEA fpuerr,a0
0002FFD2 <AmiBlitz3.ab3@19344>   MOVE.l a0,-(a7)
0002FFD8 <AmiBlitz3.ab3@19345> JMP handle_compileerror
0002FFDC <AmiBlitz3.ab3@19349>   CMP.b #$3c,d0
0002FFE0 <AmiBlitz3.ab3@19350>   BNE 'nofpu2
0002FFE2 <AmiBlitz3.ab3@19351>   MOVEQ #0,d1
0002FFE8 <AmiBlitz3.ab3@19352>       MOVE.w regnumstore,d1
0002FFEA <AmiBlitz3.ab3@19353>       MOVE.w d1,d0
0002FFEC <AmiBlitz3.ab3@19354>       ASL.w #7,d1
0002FFEE <AmiBlitz3.ab3@19355>       ASL.w #8,d0
0002FFF0 <AmiBlitz3.ab3@19356>       ASL.w #2,d0
0002FFF2 <AmiBlitz3.ab3@19357>       OR.w d0,d1
0002FFF8 <AmiBlitz3.ab3@19358>       CMP.b #$03,25(a2)
0002FFFC <AmiBlitz3.ab3@19359>       BNE 'nosgn
00030002 <AmiBlitz3.ab3@19362>       SUBQ.l #8,destpointer                                ;fpu sgn
00030008 <AmiBlitz3.ab3@19363>         OR.l #$f200003a,d1
0003000C <AmiBlitz3.ab3@19364>         BSR writelong
00030012 <AmiBlitz3.ab3@19365>         CLR.w a2offset
00030018 <AmiBlitz3.ab3@19366>          MOVE.l #$F28E0006,d1
0003001C <AmiBlitz3.ab3@19367>          BSR writelong
00030022 <AmiBlitz3.ab3@19368>   MOVE.l #$7000600a,d1
00030026 <AmiBlitz3.ab3@19369>   BSR writelong
0003002C <AmiBlitz3.ab3@19370>   MOVE.l #$70014840,d1
00030030 <AmiBlitz3.ab3@19371>   BSR writelong
00030036 <AmiBlitz3.ab3@19372>   MOVE.l #$F292,d1
0003003A <AmiBlitz3.ab3@19373>   BSR writeword
00030040 <AmiBlitz3.ab3@19374>   MOVE.l #$000470FF,d1
00030044 <AmiBlitz3.ab3@19375> BRA 'exit
0003004C <AmiBlitz3.ab3@19378>   CMP.l #"Frac",$1a(a2)
00030050 <AmiBlitz3.ab3@19379>   BNE 'nofrac
00030056 <AmiBlitz3.ab3@19380> JMP notwork
0003005A <AmiBlitz3.ab3@19421> BRA 'exit
0003005E <AmiBlitz3.ab3@19425>   BSR.w JL_0_BB14                                          ;write lib code
00030064 <AmiBlitz3.ab3@19426>   MOVE.l (A7)+,libisat
00030066 <AmiBlitz3.ab3@19427> RTS
0003006A <AmiBlitz3.ab3@19430>   BSR writelong
00030070 <AmiBlitz3.ab3@19433>   MOVE.l (A7)+,libisat
00030072 <AmiBlitz3.ab3@19434> RTS
00030076 <AmiBlitz3.ab3@19438>   BSR.w fetchregs
0003007C <AmiBlitz3.ab3@19439>   TST.b debugmode
00030080 <AmiBlitz3.ab3@19440>    BEQ.w JL_0_BB76
00030082 <AmiBlitz3.ab3@19441>   MOVE.l (A2),D1
00030086 <AmiBlitz3.ab3@19442>   OR.l $8(A2),D1
0003008A <AmiBlitz3.ab3@19443>   BCLR #$0,D1
0003008C <AmiBlitz3.ab3@19444>   TST.l D1
00030090 <AmiBlitz3.ab3@19445>    BEQ.w JL_0_BB76
00030092 <AmiBlitz3.ab3@19446>   MOVE.l (A2)+,D1
00030096 <AmiBlitz3.ab3@19447>   BTST #$0,D1
0003009A <AmiBlitz3.ab3@19448>    BEQ.w JL_0_BB60
000300A0 <AmiBlitz3.ab3@19449>   TST.w blitzmode
000300A4 <AmiBlitz3.ab3@19450>    BPL.w blitzerr
000300AA <AmiBlitz3.ab3@19451>   TST.b debugmode
000300AE <AmiBlitz3.ab3@19452>    BEQ.w JL_0_BB5C
000300B0 <AmiBlitz3.ab3@19453>   MOVE.l D1,-(A7)
000300B4 <AmiBlitz3.ab3@19454>   MOVE.w #$C311,D1
000300B8 <AmiBlitz3.ab3@19455>    BSR.w makebtst
000300BA <AmiBlitz3.ab3@19456>   MOVE.l (A7)+,D1
000300BE <AmiBlitz3.ab3@19459>   BCLR #$0,D1
000300C0 <AmiBlitz3.ab3@19462>   TST.l D1
000300C4 <AmiBlitz3.ab3@19463>    BSR.w JL_0_BBC6
000300C6 <AmiBlitz3.ab3@19464>   MOVE.l (A2)+,D1
000300CA <AmiBlitz3.ab3@19465>    BSR.w JL_0_BB98
000300CC <AmiBlitz3.ab3@19466>   MOVE.l (A2)+,D1
000300D0 <AmiBlitz3.ab3@19467>    BSR.w JL_0_BBC6
000300D4 <AmiBlitz3.ab3@19468> BRA.w JL_0_BB90
000300DA <AmiBlitz3.ab3@19471>   BTST #$0,$3(A2)
000300DE <AmiBlitz3.ab3@19472>    BEQ.w JL_0_BB88
000300E2 <AmiBlitz3.ab3@19473>   MOVE.w blitzmode(PC),D1
000300E6 <AmiBlitz3.ab3@19474>    BPL.w blitzerr
000300EA <AmiBlitz3.ab3@19477>   MOVE.l $4(A2),D1
000300EE <AmiBlitz3.ab3@19478>    BSR.w JL_0_BB98
000300F4 <AmiBlitz3.ab3@19481>   MOVEA.l libisat,A2
000300F6 <AmiBlitz3.ab3@19482> RTS
000300FA <AmiBlitz3.ab3@19485>   BTST #$0,D1
000300FE <AmiBlitz3.ab3@19486>    BEQ.w JL_0_BBC4
00030104 <AmiBlitz3.ab3@19487>   TST.w blitzmode
00030108 <AmiBlitz3.ab3@19488>    BMI.w amigaerr
0003010E <AmiBlitz3.ab3@19489>   TST.b debugmode
00030112 <AmiBlitz3.ab3@19490>    BEQ.w JL_0_BBC0
00030114 <AmiBlitz3.ab3@19491>   MOVE.l D1,-(A7)
00030118 <AmiBlitz3.ab3@19492>   MOVE.w #$C312,D1
0003011C <AmiBlitz3.ab3@19493>    BSR.w makebtst
0003011E <AmiBlitz3.ab3@19494>   MOVE.l (A7)+,D1
00030122 <AmiBlitz3.ab3@19497>   BCLR #$0,D1
00030124 <AmiBlitz3.ab3@19500>   TST.l D1
00030128 <AmiBlitz3.ab3@19503>    BEQ.w JL_0_BBD2
0003012A <AmiBlitz3.ab3@19504>   MOVE.l A1,-(A7)
0003012E <AmiBlitz3.ab3@19505>    BSR.w JL_0_BBD4
00030130 <AmiBlitz3.ab3@19506>   MOVEA.l (A7)+,A1
00030132 <AmiBlitz3.ab3@19509> RTS
00030138 <AmiBlitz3.ab3@19512>   MOVEA.l libisat,A0
0003013E <AmiBlitz3.ab3@19513>   TST.w cfetchmode
00030142 <AmiBlitz3.ab3@19514>    BEQ.w JL_0_BBF6
00030144 <AmiBlitz3.ab3@19515>   ADD.l A0,D1
00030146 <AmiBlitz3.ab3@19516>   MOVE.l D1,-(A7)
0003014A <AmiBlitz3.ab3@19517>   MOVE.w #$4EB9,D1
0003014E <AmiBlitz3.ab3@19518>    BSR.w writeword
00030150 <AmiBlitz3.ab3@19519>   MOVE.l (A7)+,D1
00030154 <AmiBlitz3.ab3@19520> BRA.w writelong
00030158 <AmiBlitz3.ab3@19523>   LEA $0(A0,D1.L),A1
0003015E <AmiBlitz3.ab3@19524>   CLR.w inline
00030162 <AmiBlitz3.ab3@19527>   CMPI.b #$A0,(A1)+
00030166 <AmiBlitz3.ab3@19528>    BNE.w JL_0_BC68
00030168 <AmiBlitz3.ab3@19529>   TST.b (A1)+
0003016C <AmiBlitz3.ab3@19530>    BEQ.w JL_0_BC18
00030172 <AmiBlitz3.ab3@19531>   CMPI.b #$1,-$1(A1)
00030176 <AmiBlitz3.ab3@19532>    BEQ.w JL_0_BC24
0003017C <AmiBlitz3.ab3@19535>   MOVE.w (A1)+,inline
0003017E <AmiBlitz3.ab3@19536>   ADDQ.l #4,D1
00030182 <AmiBlitz3.ab3@19537> BRA.w JL_0_BC00
00030188 <AmiBlitz3.ab3@19540>   TST.w blitzmode
0003018C <AmiBlitz3.ab3@19541>    BPL.w JL_0_BC4A
00030192 <AmiBlitz3.ab3@19542>   TST.b debugmode
00030196 <AmiBlitz3.ab3@19543>    BEQ.w JL_0_BC40
0003019A <AmiBlitz3.ab3@19544>   MOVE.w #$C311,D1
0003019E <AmiBlitz3.ab3@19545>    BSR.w makebtst
000301A0 <AmiBlitz3.ab3@19548>   MOVE.l (A1)+,D1
000301A4 <AmiBlitz3.ab3@19549>   LEA $0(A0,D1.L),A1
000301A8 <AmiBlitz3.ab3@19550> BRA.w JL_0_BC00
000301AE <AmiBlitz3.ab3@19553>   TST.b debugmode
000301B2 <AmiBlitz3.ab3@19554>    BEQ.w JL_0_BC60
000301B4 <AmiBlitz3.ab3@19555>   MOVE.l D1,-(A7)
000301B8 <AmiBlitz3.ab3@19556>   MOVE.w #$C312,D1
000301BC <AmiBlitz3.ab3@19557>    BSR.w makebtst
000301BE <AmiBlitz3.ab3@19558>   MOVE.l (A7)+,D1
000301C0 <AmiBlitz3.ab3@19561>   ADDQ.w #4,A1
000301C2 <AmiBlitz3.ab3@19562>   ADDQ.l #6,D1
000301C6 <AmiBlitz3.ab3@19563> BRA.w JL_0_BC00
000301CC <AmiBlitz3.ab3@19566>   TST.w inline
000301D0 <AmiBlitz3.ab3@19567>    BEQ.w JL_0_BC7E
000301D2 <AmiBlitz3.ab3@19568>   SUBQ.w #1,A1
000301D4 <AmiBlitz3.ab3@19569>   MOVEA.l A1,A0
000301D8 <AmiBlitz3.ab3@19570>   ADDA.w inline(PC),A1
000301DC <AmiBlitz3.ab3@19571> BRA.w pokecode2
000301E0 <AmiBlitz3.ab3@19574>   MOVEM.l a0/D1,-(A7)
000301E6 <AmiBlitz3.ab3@19575>   TST.w debugversion
000301EA <AmiBlitz3.ab3@19576>   BEQ 'l11
000301F2 <AmiBlitz3.ab3@19577>   BTST #$7,link_debuginfo
000301F6 <AmiBlitz3.ab3@19578>   BEQ.w 'l11
000301FC <AmiBlitz3.ab3@19579>   MOVE.l lastinstruction,d1
00030200 <AmiBlitz3.ab3@19580>   BEQ 'l11
00030206 <AmiBlitz3.ab3@19581>   CLR.l lastinstruction
0003020C <AmiBlitz3.ab3@19582>   CMP.l #$e000,d1
00030210 <AmiBlitz3.ab3@19583>   BGE 'ln99
00030216 <AmiBlitz3.ab3@19584>   LEA notf,a0
0003021C <AmiBlitz3.ab3@19585>   CMP.l #$c601,d1
00030220 <AmiBlitz3.ab3@19586>   BNE 'ln1
00030226 <AmiBlitz3.ab3@19587>   LEA strcpy,a0
0003022A <AmiBlitz3.ab3@19588> BRA 'ln3
00030230 <AmiBlitz3.ab3@19591>   CMP.l #$c700,d1
00030234 <AmiBlitz3.ab3@19592>   BNE 'ln2
0003023A <AmiBlitz3.ab3@19593>   LEA strvar,a0
0003023E <AmiBlitz3.ab3@19594> BRA 'ln3
00030244 <AmiBlitz3.ab3@19597>   CMP.l #$ce00,d1
00030248 <AmiBlitz3.ab3@19598>   BNE 'ln4
0003024E <AmiBlitz3.ab3@19599>   LEA strcmp,a0
00030252 <AmiBlitz3.ab3@19600> BRA 'ln3
00030258 <AmiBlitz3.ab3@19603>   CMP.l #$ca00,d1
0003025C <AmiBlitz3.ab3@19604>   BNE 'ln5
00030262 <AmiBlitz3.ab3@19605>   LEA qmul,a0
00030266 <AmiBlitz3.ab3@19606> BRA 'ln3
0003026C <AmiBlitz3.ab3@19609>   CMP.l #$d000,d1
00030270 <AmiBlitz3.ab3@19610>      BNE 'ln6
00030276 <AmiBlitz3.ab3@19611>      LEA _MaxLen,a0
0003027A <AmiBlitz3.ab3@19612> BRA 'ln3
00030280 <AmiBlitz3.ab3@19615>   CMP.l #$cb00,d1
00030284 <AmiBlitz3.ab3@19616>   BNE 'ln3
0003028A <AmiBlitz3.ab3@19617>   LEA qdiv,a0
0003028E <AmiBlitz3.ab3@19618> BRA 'ln3
00030290 <AmiBlitz3.ab3@19621>   MOVE.l d1,a0
00030294 <AmiBlitz3.ab3@19622>   LEA $8(a0),a0
00030298 <AmiBlitz3.ab3@19625>   CMP.w #$ffff,(a0)+
0003029C <AmiBlitz3.ab3@19626>   BNE 'l1
000302A0 <AmiBlitz3.ab3@19627>   LEA 6(a0),a0
000302A4 <AmiBlitz3.ab3@19630>   MOVEM.l a1/a2/d7/d2,-(a7)
000302A6 <AmiBlitz3.ab3@19631>   MOVEQ #0,d2
000302AC <AmiBlitz3.ab3@19632>   LEA ptr_parameterstore,a1
000302AE <AmiBlitz3.ab3@19635>   ADDQ.l #1,d2
000302B0 <AmiBlitz3.ab3@19636>   MOVE.b (a0)+,d0
000302B4 <AmiBlitz3.ab3@19637> 
000302B8 <AmiBlitz3.ab3@19638>   BNE 'nodollar
000302BC <AmiBlitz3.ab3@19639>   MOVE.b #"S",d0
000302C0 <AmiBlitz3.ab3@19641>   CMP.b #"?",d0
000302C4 <AmiBlitz3.ab3@19642>   BEQ 'nolabelwrite
000302C6 <AmiBlitz3.ab3@19643>   MOVE.b d0,(a1)+
000302CA <AmiBlitz3.ab3@19644>   BNE 'l2
000302D0 <AmiBlitz3.ab3@19645>   MOVE.w #"__",-1(a1)
000302D2 <AmiBlitz3.ab3@19646>   ADDQ.l #2,d2
000302D6 <AmiBlitz3.ab3@19647>   CLR.b 1(a1)
000302DC <AmiBlitz3.ab3@19648>   JSR findlabel2
000302E0 <AmiBlitz3.ab3@19649>   BEQ 'l3
000302E6 <AmiBlitz3.ab3@19650>   JSR addlabelhash
000302EA <AmiBlitz3.ab3@19653>   CLR.l 4(a2)
000302EE <AmiBlitz3.ab3@19654>   MOVE.l $14(a7),a0
000302F2 <AmiBlitz3.ab3@19655>   MOVE.l $10(a7),d1
000302F6 <AmiBlitz3.ab3@19656>   SUB.l $12(a0),d1
000302FA <AmiBlitz3.ab3@19657>   ADD.l $28(a0),d1
000302FE <AmiBlitz3.ab3@19658>   MOVE.l d1,8(a2)
00030302 <AmiBlitz3.ab3@19659> 'nolabelwrite MOVEM.l (a7)+,a1/a2/d7/d2
00030308 <AmiBlitz3.ab3@19662>   TST.b typecheck
0003030C <AmiBlitz3.ab3@19663>   BEQ 'p1
00030312 <AmiBlitz3.ab3@19664>   MOVE.l lasttoken,d1
00030318 <AmiBlitz3.ab3@19665>   CMP.l #$da01,d1                                          ;poke
0003031C <AmiBlitz3.ab3@19666>   BEQ 'lp1
00030322 <AmiBlitz3.ab3@19667>   CMP.l #$da02,d1                                          ;peek
00030326 <AmiBlitz3.ab3@19668>   BNE 'p1
0003032C <AmiBlitz3.ab3@19671>   TST.b peekaddrsize
00030330 <AmiBlitz3.ab3@19672>   BEQ 'p1
00030338 <AmiBlitz3.ab3@19673>   CMP.b #3,peekaddrsize
0003033C <AmiBlitz3.ab3@19674>   BNE errormsg_onlylong
00030342 <AmiBlitz3.ab3@19675>   CLR.b peekaddrsize
00030348 <AmiBlitz3.ab3@19683>    TST.b fpu
0003034C <AmiBlitz3.ab3@19684>   BNE 'optf
00030352 <AmiBlitz3.ab3@19685>   TST.b fast
00030356 <AmiBlitz3.ab3@19686>   BEQ JL11a2
0003035E <AmiBlitz3.ab3@19693>   CMP.l #"Poke",20(a2)                                     ;poke
00030362 <AmiBlitz3.ab3@19694>   BNE peekopt
00030366 <AmiBlitz3.ab3@19695>   TST.b 24(a2)
0003036A <AmiBlitz3.ab3@19696>   BNE peekopt
0003036E <AmiBlitz3.ab3@19697>   CMP.b #3,d2
00030372 <AmiBlitz3.ab3@19698>   BNE 'lw1
00030378 <AmiBlitz3.ab3@19701>   MOVE.l #$21821990,d1
0003037C <AmiBlitz3.ab3@19702> BRA.s 'lpx
00030380 <AmiBlitz3.ab3@19705>   CMP.b #2,d2
00030384 <AmiBlitz3.ab3@19706>   BNE 'lb1
0003038A <AmiBlitz3.ab3@19707>   MOVE.l #$31821990,d1
0003038E <AmiBlitz3.ab3@19708> BRA.s 'lpx
00030392 <AmiBlitz3.ab3@19711>   CMP.b #1,d2
00030396 <AmiBlitz3.ab3@19712>   BNE 'lp3
0003039C <AmiBlitz3.ab3@19713>   MOVE.l #$11821990,d1
000303A0 <AmiBlitz3.ab3@19714> BRA.s 'lpx
000303A4 <AmiBlitz3.ab3@19717>   CMP.b #5,d2
000303A8 <AmiBlitz3.ab3@19718>     BNE JL11a2
000303AE <AmiBlitz3.ab3@19719>     TST.b fpu
000303B2 <AmiBlitz3.ab3@19720>     BEQ 'll1
000303B8 <AmiBlitz3.ab3@19721>      MOVE.l destpointer,a4
000303C0 <AmiBlitz3.ab3@19722>     CMP.l #$f22d4500,-6(a4)
000303C4 <AmiBlitz3.ab3@19723>     BNE 'noglob
000303CA <AmiBlitz3.ab3@19724>     TST.b doublepeek
000303CE <AmiBlitz3.ab3@19725>     BNE 'noglob
000303D4 <AmiBlitz3.ab3@19726>     MOVE.w -2(a4),-4(a4)
000303DA <AmiBlitz3.ab3@19727>     MOVE.w #$21ad,-6(a4)
000303E0 <AmiBlitz3.ab3@19728>     MOVE.w #$1990,-2(a4)
000303E8 <AmiBlitz3.ab3@19729>     MOVE.w #9,peeksize
000303EA <AmiBlitz3.ab3@19730>     ADDQ #8,a7
000303EC <AmiBlitz3.ab3@19731> RTS
000303F4 <AmiBlitz3.ab3@19734>     CMP.l #$f22c4500,-6(a4)
000303F8 <AmiBlitz3.ab3@19735>     BNE 'nolocal
000303FE <AmiBlitz3.ab3@19736>     MOVE.w -2(a4),-4(a4)
00030404 <AmiBlitz3.ab3@19737>     TST.b doublepeek                                       ;dont move longfix on double floats
00030408 <AmiBlitz3.ab3@19738>     BNE 'nolocal
0003040E <AmiBlitz3.ab3@19739>     MOVE.w #$21ac,-6(a4)
00030414 <AmiBlitz3.ab3@19740>     MOVE.w #$1990,-2(a4)
0003041C <AmiBlitz3.ab3@19741>     MOVE.w #9,peeksize
0003041E <AmiBlitz3.ab3@19742>     ADDQ #8,a7
00030420 <AmiBlitz3.ab3@19743> RTS
00030424 <AmiBlitz3.ab3@19746>     MOVE.w #$f230,d1
00030428 <AmiBlitz3.ab3@19747>     BSR writeword
0003042E <AmiBlitz3.ab3@19748>   MOVE.l #$65001990,d1
00030434 <AmiBlitz3.ab3@19749>   TST.b doublepeek
00030438 <AmiBlitz3.ab3@19750>   BEQ 'lpx
0003043E <AmiBlitz3.ab3@19751>   OR.l   #$10000000,d1
00030440 <AmiBlitz3.ab3@19755>   ADDQ #8,a7
00030448 <AmiBlitz3.ab3@19756>   MOVE.w #9,peeksize
0003044C <AmiBlitz3.ab3@19757> BRA writelong
00030454 <AmiBlitz3.ab3@19760>   CMP.l #"Peek",20(a2)
00030458 <AmiBlitz3.ab3@19761>   BNE 'l10
0003045C <AmiBlitz3.ab3@19762>   TST.b 24(a2)
00030460 <AmiBlitz3.ab3@19763>   BNE 'l10
00030468 <AmiBlitz3.ab3@19764>   CMP.w #7,peeksize
0003046C <AmiBlitz3.ab3@19765>   BEQ 'l10
00030474 <AmiBlitz3.ab3@19766>    CMP.w #3,peeksize
00030478 <AmiBlitz3.ab3@19767>    BNE.s 'lw1
0003047E <AmiBlitz3.ab3@19770>   MOVE.l #$20301990,d1
00030482 <AmiBlitz3.ab3@19771> BRA exitjsr
0003048A <AmiBlitz3.ab3@19774>   CMP.w #2,peeksize
0003048E <AmiBlitz3.ab3@19775>    BNE.s 'lb1
00030494 <AmiBlitz3.ab3@19776>    MOVE.l #$30301990,d1
00030498 <AmiBlitz3.ab3@19777> BRA exitjsr
000304A0 <AmiBlitz3.ab3@19780>   CMP.w #1,peeksize
000304A4 <AmiBlitz3.ab3@19781>    BNE.s 'lf1
000304AA <AmiBlitz3.ab3@19782>    MOVE.l #$10301990,d1
000304AE <AmiBlitz3.ab3@19783> BRA exitjsr
000304B6 <AmiBlitz3.ab3@19786>   CMP.w #5,peeksize
000304BA <AmiBlitz3.ab3@19787>    BNE 'l10
000304C0 <AmiBlitz3.ab3@19788>    TST.b fpu
000304C4 <AmiBlitz3.ab3@19789>    BEQ 'll1
000304C8 <AmiBlitz3.ab3@19790>    MOVE.w #$f230,d1
000304CC <AmiBlitz3.ab3@19791>    BSR writeword
000304CE <AmiBlitz3.ab3@19792>    MOVEQ #0,d1
000304D4 <AmiBlitz3.ab3@19793>    MOVE.w tempregnum,d1
000304D6 <AmiBlitz3.ab3@19794>    ASL.l #7,d1
000304D8 <AmiBlitz3.ab3@19795>    ASL.l #8,d1
000304DA <AmiBlitz3.ab3@19796>    ASL.l #8,d1
000304E0 <AmiBlitz3.ab3@19797>    ADD.l #$44001990,d1
000304E6 <AmiBlitz3.ab3@19798>     TST.b doublepeek
000304EA <AmiBlitz3.ab3@19799>     BEQ 'lpx2
000304F0 <AmiBlitz3.ab3@19800>     OR.l   #$10000000,d1
000304F4 <AmiBlitz3.ab3@19802> BRA exitjsr
000304F8 <AmiBlitz3.ab3@19806>   MOVE.w #$4EB9,D1
000304FC <AmiBlitz3.ab3@19807>    BSR.w writeword                                         ;writesysjsr
00030500 <AmiBlitz3.ab3@19808>   MOVEM.l (A7)+,a0/D1
00030506 <AmiBlitz3.ab3@19809>    JSR addoff
0003050A <AmiBlitz3.ab3@19810>   SUB.l $12(A0),D1
0003050E <AmiBlitz3.ab3@19811>   ADD.l $28(A0),D1
00030512 <AmiBlitz3.ab3@19812> BRA.w writelong
00030514 <AmiBlitz3.ab3@19817>   MOVE.w D1,-(A7)
00030518 <AmiBlitz3.ab3@19818>   MOVE.w tstmode(PC),D1
0003051C <AmiBlitz3.ab3@19819>    BSR.w writeword
00030520 <AmiBlitz3.ab3@19820>    BSR.w getbbase
00030524 <AmiBlitz3.ab3@19821>    BSR.w writeword
00030526 <AmiBlitz3.ab3@19822>   MOVE.w (A7)+,D1
0003052A <AmiBlitz3.ab3@19823>   MOVEM.l D0/D3-D7/A0-A2/A4,-(A7)
0003052E <AmiBlitz3.ab3@19824>    BSR.w Atokejsr
00030532 <AmiBlitz3.ab3@19825>   MOVEM.l (A7)+,D0/D3-D7/A0-A2/A4
00030534 <AmiBlitz3.ab3@19826> RTS
00030538 <AmiBlitz3.ab3@19834>   MOVE.w blitzoff(PC),D1
0003053C <AmiBlitz3.ab3@19835>   CMP.w #-$1,D1
00030540 <AmiBlitz3.ab3@19836>    BNE.w getbbase__done
00030546 <AmiBlitz3.ab3@19837>   ADDQ.w #1,globalvarpointer
0003054E <AmiBlitz3.ab3@19838>   BCLR #$0,globalvarpointer+1
00030554 <AmiBlitz3.ab3@19839>   MOVE.w globalvarpointer,D1
0003055A <AmiBlitz3.ab3@19840>   MOVE.w D1,blitzoff
00030560 <AmiBlitz3.ab3@19841>   ADDQ.w #2,globalvarpointer
00030562 <AmiBlitz3.ab3@19844> RTS
00030566 <AmiBlitz3.ab3@19848> tstmode:    Dc.b $4A,$6D,$00,$00                           ;TST.W $0000(A5)
00030568 <AmiBlitz3.ab3@19851> inline:     Ds.w 1
0003056A <AmiBlitz3.ab3@19852> blitzoff:   Dc.w $FFFF                                   ;-1 org source
0003056C <AmiBlitz3.ab3@19853> blitzmode:  Ds.w 1                                       ;+=amiga, -=blitz
0003056E <AmiBlitz3.ab3@19857>   MOVE.w (A2)+,D1
00030572 <AmiBlitz3.ab3@19858>    BEQ.w fetchregs__done
00030574 <AmiBlitz3.ab3@19859>   MOVE.w (A2)+,D2
00030578 <AmiBlitz3.ab3@19860>    BSR.w toreg
0003057C <AmiBlitz3.ab3@19861> BRA.w fetchregs
0003057E <AmiBlitz3.ab3@19864> RTS
00030582 <AmiBlitz3.ab3@19869>   CMP.w #-$100,D2
00030586 <AmiBlitz3.ab3@19870>    BCC.w toreg__yeah
0003058A <AmiBlitz3.ab3@19872>   BCLR #$F,D2
0003058E <AmiBlitz3.ab3@19873>    BEQ.w toreg__nobm
00030594 <AmiBlitz3.ab3@19875>   TST.w blitzmode
00030598 <AmiBlitz3.ab3@19876>    BMI.w toreg__yeah
0003059A <AmiBlitz3.ab3@19877> RTS
0003059E <AmiBlitz3.ab3@19880>   BCLR #$E,D2
000305A2 <AmiBlitz3.ab3@19881>    BEQ.w toreg__yeah
000305A8 <AmiBlitz3.ab3@19883>   TST.w blitzmode
000305AC <AmiBlitz3.ab3@19884>    BPL.w toreg__yeah
000305AE <AmiBlitz3.ab3@19885> RTS
000305B4 <AmiBlitz3.ab3@19888>   JSR uselib
000305B6 <AmiBlitz3.ab3@19889>   TST.b D2
000305BA <AmiBlitz3.ab3@19890>    BEQ.w toreg__norm
000305BE <AmiBlitz3.ab3@19891>   CMP.b #$4,D2
000305C2 <AmiBlitz3.ab3@19892>    BNE.w toreg__suv
000305C6 <AmiBlitz3.ab3@19893>   MOVE.w #$0004,-(A7)
000305CC <AmiBlitz3.ab3@19894>   MOVE.l #$FFFFFFFA,-(A7)                                  ;#-6,-(a7) org source
000305D0 <AmiBlitz3.ab3@19895> BRA.w toreg__sendmd
000305D4 <AmiBlitz3.ab3@19898>   CMP.b #$3,D2
000305D8 <AmiBlitz3.ab3@19899>    BNE.w toreg__notnmax
000305DA <AmiBlitz3.ab3@19900>   CLR.w -(A7)
000305E0 <AmiBlitz3.ab3@19901>   MOVE.l #$FFFFFFFC,-(A7)                                  ;#-4,-(a7) org source
000305E2 <AmiBlitz3.ab3@19907>   LSR.w #8,D2
000305E6 <AmiBlitz3.ab3@19908>   MOVE.w #$303C,D1                                         ;move.w #x,dn
000305EA <AmiBlitz3.ab3@19909>   BTST #$7,D2
000305EE <AmiBlitz3.ab3@19910>    BEQ.w toreg__skipad
000305F2 <AmiBlitz3.ab3@19911>   MOVE.w #$307C,D1                                         ;move.w #x,an
000305F6 <AmiBlitz3.ab3@19912>   CMP.w #$16,D2
000305FA <AmiBlitz3.ab3@19913>    BNE.w toreg__skipad
00030602 <AmiBlitz3.ab3@19914>   MOVE.w #$FFFF,lasta6                                     ;-1 org source
00030606 <AmiBlitz3.ab3@19917>   ANDI.w #$7,D2
00030608 <AmiBlitz3.ab3@19918>   LSL.w #8,D2
0003060A <AmiBlitz3.ab3@19919>   LSL.w #1,D2
0003060C <AmiBlitz3.ab3@19920>   OR.w D2,D1
00030610 <AmiBlitz3.ab3@19921>    BSR.w writeword
00030614 <AmiBlitz3.ab3@19922>   MOVE.l $12(A1),D1
00030616 <AmiBlitz3.ab3@19923>   ADD.l (A7)+,D1
0003061A <AmiBlitz3.ab3@19924>   MOVE.w $0(A1,D1.L),D1
0003061C <AmiBlitz3.ab3@19925>   ADD.w (A7)+,D1
00030620 <AmiBlitz3.ab3@19926> BRA.w writeword
00030622 <AmiBlitz3.ab3@19929>   MOVE.w D2,-(A7)
00030624 <AmiBlitz3.ab3@19930>   LSR.w #8,D2
00030628 <AmiBlitz3.ab3@19931>   CMP.w #$16,D2
0003062C <AmiBlitz3.ab3@19932>    BNE.w toreg__isnta6
00030634 <AmiBlitz3.ab3@19933>   MOVE.w #$FFFF,lasta6                                     ;-1 org source
00030638 <AmiBlitz3.ab3@19936>   MOVE.l $12(A1),D1                                        ;objectspace
0003063C <AmiBlitz3.ab3@19937>   MOVE.w -$6(A1,D1.L),-(A7)
00030640 <AmiBlitz3.ab3@19938>    BSR.w makeregop
00030644 <AmiBlitz3.ab3@19939>    BSR.w writeword
00030646 <AmiBlitz3.ab3@19940>   MOVE.w (A7)+,D1
00030648 <AmiBlitz3.ab3@19941>   MOVE.w (A7)+,D2
0003064A <AmiBlitz3.ab3@19942>   TST.b D2
0003064E <AmiBlitz3.ab3@19943>    BPL.w toreg__skippy1
00030652 <AmiBlitz3.ab3@19948>    BSR.w writeword                                         ;move.l x(a5),dn
00030654 <AmiBlitz3.ab3@19949>   MOVE.w D2,-(A7)                                          ;store reg used
00030658 <AmiBlitz3.ab3@19951>   ADDA.l $12(A1),A1
0003065A <AmiBlitz3.ab3@19952>   MOVE.b D2,D1
0003065E <AmiBlitz3.ab3@19953>   ANDI.w #$7,D1
00030664 <AmiBlitz3.ab3@19955>   TST.b debugmode
00030668 <AmiBlitz3.ab3@19956>    BEQ.w toreg__norerr
0003066A <AmiBlitz3.ab3@19958>   MOVE.w D1,-(A7)
0003066C <AmiBlitz3.ab3@19959>   LSL.w #8,D1
0003066E <AmiBlitz3.ab3@19960>   LSL.w #1,D1
00030672 <AmiBlitz3.ab3@19961>   ORI.w #$B07C,D1                                          ;cmp #x,dn
00030676 <AmiBlitz3.ab3@19962>    BSR.w writeword
0003067A <AmiBlitz3.ab3@19963>   MOVE.w -$4(A1),D1
0003067E <AmiBlitz3.ab3@19964>    BSR.w writeword
00030682 <AmiBlitz3.ab3@19965>   MOVE.l maxchk(PC),D1                                  ;bcs
00030686 <AmiBlitz3.ab3@19966>    BSR.w writelong
00030688 <AmiBlitz3.ab3@19967>   MOVE.l A2,-(A7)
0003068C <AmiBlitz3.ab3@19968>   MOVE.w #$C30A,D1
00030690 <AmiBlitz3.ab3@19969>    BSR.w Atokejsr
00030692 <AmiBlitz3.ab3@19970>   MOVEA.l (A7)+,A2
00030694 <AmiBlitz3.ab3@19971>   MOVE.w (A7)+,D1
00030698 <AmiBlitz3.ab3@19974>   MOVE.w -$2(A1),D2                                        ;shift amount
0003069C <AmiBlitz3.ab3@19977>   CMP.w #$9,D2
000306A0 <AmiBlitz3.ab3@19978>    BCS.w toreg__simp
000306A4 <AmiBlitz3.ab3@19979>   MOVEM.w D1-D2,-(A7)
000306A6 <AmiBlitz3.ab3@19981>   MOVEQ.l #$00,D2                                          ;!!!!!
000306A8 <AmiBlitz3.ab3@19983>   LSL.w #8,D2
000306AA <AmiBlitz3.ab3@19984>   LSL.w #1,D2
000306AC <AmiBlitz3.ab3@19985>   OR.w D2,D1
000306B0 <AmiBlitz3.ab3@19986>   OR.w lsldn(PC),D1
000306B4 <AmiBlitz3.ab3@19987>    BSR.w writeword
000306B8 <AmiBlitz3.ab3@19988>   MOVEM.w (A7)+,D1-D2
000306BA <AmiBlitz3.ab3@19989>   SUBQ.w #8,D2
000306BE <AmiBlitz3.ab3@19990> BRA.w toreg__shloop
000306C0 <AmiBlitz3.ab3@19993>   MOVE.w D1,-(A7)
000306C4 <AmiBlitz3.ab3@19994>   OR.w #$48c0,d1
000306C8 <AmiBlitz3.ab3@19995>   BSR writeword
000306CA <AmiBlitz3.ab3@19996>   MOVE.w (a7),d1
000306CC <AmiBlitz3.ab3@19997>   TST.w D2
000306D0 <AmiBlitz3.ab3@19998>   BEQ.w toreg__simp2
000306D4 <AmiBlitz3.ab3@20000>   ANDI.w #$7,D2                                            ;?????
000306D6 <AmiBlitz3.ab3@20002>   LSL.w #8,D2
000306D8 <AmiBlitz3.ab3@20003>   LSL.w #1,D2
000306DA <AmiBlitz3.ab3@20004>   OR.w D2,D1
000306DE <AmiBlitz3.ab3@20005>   OR.w lsldn(PC),D1
000306E2 <AmiBlitz3.ab3@20006>    BSR.w writeword
000306E4 <AmiBlitz3.ab3@20012>   MOVE.w (A7)+,D1
000306E8 <AmiBlitz3.ab3@20013>   ANDI.w #$7,D1
000306EC <AmiBlitz3.ab3@20014>   OR.w maxdo(PC),D1
000306EE <AmiBlitz3.ab3@20015>   MOVE.w (A7)+,D2
000306F0 <AmiBlitz3.ab3@20016>   LSL.w #1,D2
000306F4 <AmiBlitz3.ab3@20017>   ANDI.w #$E00,D2
000306F6 <AmiBlitz3.ab3@20018>   OR.w D2,D1
000306FA <AmiBlitz3.ab3@20019> BRA.w writeword
000306FE <AmiBlitz3.ab3@20022>   CMP.b #$1,D2
00030702 <AmiBlitz3.ab3@20023>    BEQ.w toreg__skippy
00030704 <AmiBlitz3.ab3@20027>   ADDQ.w #4,D1
0003070A <AmiBlitz3.ab3@20029>   TST.b debugmode
0003070E <AmiBlitz3.ab3@20030>    BEQ.w toreg__skippy
00030712 <AmiBlitz3.ab3@20032>    BSR.w writeword
00030714 <AmiBlitz3.ab3@20033>   SWAP D1
00030718 <AmiBlitz3.ab3@20034>   MOVE.w toreg__theretest(PC),D1
0003071A <AmiBlitz3.ab3@20035>   SWAP D1
0003071E <AmiBlitz3.ab3@20036>    BSR.w writelong
00030722 <AmiBlitz3.ab3@20037>   MOVE.l toreg__theretest+4(PC),D1
00030726 <AmiBlitz3.ab3@20038>    BSR.w writelong
0003072A <AmiBlitz3.ab3@20039>   MOVE.l toreg__theretest+8(PC),D1
0003072E <AmiBlitz3.ab3@20040> BRA.w writelong
00030732 <AmiBlitz3.ab3@20043> BRA.w writeword
00030736 <AmiBlitz3.ab3@20048>             Dc.b $4A,$AD,$00,$00                           ;TST.L  $0000(A5)
0003073A <AmiBlitz3.ab3@20049>             Dc.b $66,$00,$00,$06                           ;BNE.W  toreg__ttskip
0003073C <AmiBlitz3.ab3@20050>             Dc.b $70,$01                                   ;MOVEQ  #$01,D0
0003073E <AmiBlitz3.ab3@20051>             Dc.b $4E,$40                                   ;TRAP   #00
00030740 <AmiBlitz3.ab3@20056>   LSR.w #8,D2
00030744 <AmiBlitz3.ab3@20057>   CMP.b #$16,D2
00030748 <AmiBlitz3.ab3@20058>    BNE.w toreg__nota6
0003074C <AmiBlitz3.ab3@20059>   MOVE.w $A(A1),D1
00030752 <AmiBlitz3.ab3@20060>   CMP.w lasta6,D1
00030756 <AmiBlitz3.ab3@20061>    BEQ.w toreg__sk
0003075C <AmiBlitz3.ab3@20062>   MOVE.w D1,lasta6
00030760 <AmiBlitz3.ab3@20065>    BSR.w makeregop
00030764 <AmiBlitz3.ab3@20066>   TST.w $1A(A1)
00030768 <AmiBlitz3.ab3@20067>    BPL.w toreg__long
0003076C <AmiBlitz3.ab3@20068>   CMP.w stackop(PC),D1
00030770 <AmiBlitz3.ab3@20069>    BNE.w toreg__notst
00030776 <AmiBlitz3.ab3@20070>   SUBQ.w #2,a2offset
0003077A <AmiBlitz3.ab3@20073>    ORI.w #$1000,D1
0003077E <AmiBlitz3.ab3@20076>    BSR.w writeword
00030782 <AmiBlitz3.ab3@20077>   MOVE.w $A(A1),D1
00030786 <AmiBlitz3.ab3@20078>    BSR.w writeword
00030788 <AmiBlitz3.ab3@20081> RTS
0003078A <AmiBlitz3.ab3@20085> lsldn:      Dc.b $E1,$88                 ;Dc.b $48 ;object long acsess    ;LSL.L   #8,D0
0003078E <AmiBlitz3.ab3@20086> maxchk:     Dc.b $65,$00,$00,$08                                          ;BCS.W   maxchk__ok
00030794 <AmiBlitz3.ab3@20087>             Dc.b $4E,$B9,$00,$00,$00,$00                                  ;JSR     $00000000
00030796 <AmiBlitz3.ab3@20090> 
00030798 <AmiBlitz3.ab3@20093>             Dc.b $00,$00
0003079C <AmiBlitz3.ab3@20094> stackop:    Dc.b $2F,$2D,$00,$00                                          ;MOVE.L  $0000(A5),-(A7)
000307A0 <AmiBlitz3.ab3@20101>   CMP.b #$FF,D2
000307A4 <AmiBlitz3.ab3@20102>    BNE.w makeregop__notst
000307A8 <AmiBlitz3.ab3@20103>   MOVE.w stackop(PC),D1
000307AE <AmiBlitz3.ab3@20104>   ADDQ.w #4,a2offset
000307B0 <AmiBlitz3.ab3@20105> RTS
000307B2 <AmiBlitz3.ab3@20108>   MOVE.l A3,-(A7)
000307B8 <AmiBlitz3.ab3@20109>   LEA regtransd,A3
000307BC <AmiBlitz3.ab3@20110>   BTST #$4,D2
000307C0 <AmiBlitz3.ab3@20111>    BEQ.w makeregop__skip
000307C6 <AmiBlitz3.ab3@20112>   LEA regtransa,A3
000307CA <AmiBlitz3.ab3@20115>   ANDI.w #$7,D2
000307CC <AmiBlitz3.ab3@20116>   MOVE.w D2,D1
000307CE <AmiBlitz3.ab3@20117>   LSL.w #8,D1
000307D0 <AmiBlitz3.ab3@20118>   LSL.w #1,D1
000307D2 <AmiBlitz3.ab3@20119>   OR.w (A3),D1
000307D4 <AmiBlitz3.ab3@20120>   MOVEA.l (A7)+,A3
000307D6 <AmiBlitz3.ab3@20121> RTS
000307DA <AmiBlitz3.ab3@20127>   CMP.w #$3C,D0
000307DE <AmiBlitz3.ab3@20128>    BCS.w ifchar__no
000307E2 <AmiBlitz3.ab3@20129>   CMP.w #$3E,D0
000307E6 <AmiBlitz3.ab3@20130>    BHI.w ifchar__no
000307EA <AmiBlitz3.ab3@20131>   SUBI.w #$3C,D0
000307EC <AmiBlitz3.ab3@20132>   CMP.w D0,D0
000307EE <AmiBlitz3.ab3@20135> RTS
000307F8 <AmiBlitz3.ab3@20140>   MOVE.w oldqflag,instringon
000307FE <AmiBlitz3.ab3@20141>   MOVEA.l lastsourcepos,A5
00030804 <AmiBlitz3.ab3@20146>   MOVE.w regnum,-(A7)
0003080A <AmiBlitz3.ab3@20147>   CLR.w regnum
00030810 <AmiBlitz3.ab3@20148>   MOVE.l destpointer,-(A7)
00030816 <AmiBlitz3.ab3@20149>   MOVE.l destbufferend,-(A7)
0003081C <AmiBlitz3.ab3@20150>   MOVE.w dontwrite,-(A7)
00030822 <AmiBlitz3.ab3@20151>   MOVE.w lasta6,-(A7)
00030828 <AmiBlitz3.ab3@20152>   MOVE.w cfetchmode,-(A7)
0003082C <AmiBlitz3.ab3@20153>    BNE.w JL_0_BFB6
00030836 <AmiBlitz3.ab3@20154>   MOVE.l destbufferend,oldlibat
0003083C <AmiBlitz3.ab3@20155>   MOVEA.l constpcat,A0
00030842 <AmiBlitz3.ab3@20156>   MOVE.l A0,destpointer
00030846 <AmiBlitz3.ab3@20157> BRA.w JL_0_BFBC
0003084C <AmiBlitz3.ab3@20160>   MOVEA.l destpointer,A0
0003084E <AmiBlitz3.ab3@20163>   MOVE.l A0,-(A7)
00030858 <AmiBlitz3.ab3@20164>   MOVE.l constlibat,destbufferend
0003085E <AmiBlitz3.ab3@20165>   CLR.w dontwrite
00030866 <AmiBlitz3.ab3@20167>   MOVE.w #$FFFF,lasta6
0003086E <AmiBlitz3.ab3@20168>   MOVE.w #$FFFF,cfetchmode
00030872 <AmiBlitz3.ab3@20170>     BSR.w arreval
00030874 <AmiBlitz3.ab3@20171>    MOVE.l (a7),a0
000309B0 <AmiBlitz3.ab3@20173>  !newcalc
000309B4 <AmiBlitz3.ab3@20174>    BEQ 'l10
000309B6 <AmiBlitz3.ab3@20175>    MOVE.l d0,d3
000309B8 <AmiBlitz3.ab3@20176>    MOVEA.l (A7)+,A0
000309BC <AmiBlitz3.ab3@20177> BRA bc1
000309C0 <AmiBlitz3.ab3@20180>    MOVE.w #$2600,D1
000309C6 <AmiBlitz3.ab3@20181>   OR.w regnum,D1
000309CA <AmiBlitz3.ab3@20182>    BSR.w writeword
000309CE <AmiBlitz3.ab3@20183>   MOVE.w #$4E75,D1
000309D2 <AmiBlitz3.ab3@20184>    BSR.w writeword
000309D8 <AmiBlitz3.ab3@20185>   MOVE.w dontwrite,D1
000309DC <AmiBlitz3.ab3@20186>    BNE.w conmemerr
000309DE <AmiBlitz3.ab3@20187>   MOVEA.l (A7)+,A0
000309E0 <AmiBlitz3.ab3@20188>   NOP
000309E6 <AmiBlitz3.ab3@20189>    JSR Aclearcache                                         ;simple expression
000309E8 <AmiBlitz3.ab3@20192>    JSR (A0)                                                ;writeresult
000309EE <AmiBlitz3.ab3@20195>   MOVE.w (A7)+,cfetchmode
000309F4 <AmiBlitz3.ab3@20196>   MOVE.w (A7)+,lasta6
000309FA <AmiBlitz3.ab3@20197>   MOVE.w (A7)+,dontwrite
00030A00 <AmiBlitz3.ab3@20198>   MOVE.l (A7)+,destbufferend
00030A06 <AmiBlitz3.ab3@20199>   MOVE.l (A7)+,destpointer
00030A0C <AmiBlitz3.ab3@20200>   MOVE.w (A7)+,regnum
00030A12 <AmiBlitz3.ab3@20203> JMP reget
00030A16 <AmiBlitz3.ab3@20206> oldlibat:   Ds.l 1
00030A1C <AmiBlitz3.ab3@20210>   LEA incdir,A0
00030A20 <AmiBlitz3.ab3@20213>   CMP.w #$22,D0
00030A24 <AmiBlitz3.ab3@20214>    BEQ.w JL_0_C052
00030A26 <AmiBlitz3.ab3@20215>   MOVE.b D0,(A0)+
00030A28 <AmiBlitz3.ab3@20216>   TST.w D0
00030A2C <AmiBlitz3.ab3@20217>    BEQ.w JL_0_C05A
00030A30 <AmiBlitz3.ab3@20218>    BMI.w syntaxerr
00030A36 <AmiBlitz3.ab3@20221>   JSR get1bytemain                                         ;_long
00030A3A <AmiBlitz3.ab3@20222> BRA.w JL_0_C03E
00030A3C <AmiBlitz3.ab3@20225> RTS
00030A42 <AmiBlitz3.ab3@20229>   LEA ptr_parameterstore,A1                                ;getparameter
00030A48 <AmiBlitz3.ab3@20230>   LEA incdir,A0
00030A4A <AmiBlitz3.ab3@20231>   MOVEQ.l #-$01,D2
00030A4C <AmiBlitz3.ab3@20234>     ADDQ.w #1,D2
00030A4E <AmiBlitz3.ab3@20235>     MOVE.b (A0)+,(A1)+
00030A52 <AmiBlitz3.ab3@20236>   BNE.w JL_0_C06A
00030A54 <AmiBlitz3.ab3@20237>   SUBQ.w #1,A1
00030A5E <AmiBlitz3.ab3@20239>   MOVE.w oldqflag,instringon
00030A64 <AmiBlitz3.ab3@20240>   MOVEA.l lastsourcepos,A5
00030A6A <AmiBlitz3.ab3@20244>   JSR get1bytemain
00030A6C <AmiBlitz3.ab3@20245>   TST.w D0
00030A70 <AmiBlitz3.ab3@20246>    BMI.w syntaxerr
00030A74 <AmiBlitz3.ab3@20247>   CMP.b #$22,D0
00030A78 <AmiBlitz3.ab3@20248>    BEQ.w JL_0_C078
00030A7A <AmiBlitz3.ab3@20249>   MOVE.b D0,(A1)+
00030A7E <AmiBlitz3.ab3@20250>    BEQ.w JL_0_C096
00030A80 <AmiBlitz3.ab3@20251>   ADDQ.w #1,D2
00030A84 <AmiBlitz3.ab3@20252> BRA.w JL_0_C078
00030A86 <AmiBlitz3.ab3@20255>   TST.w D2
00030A8A <AmiBlitz3.ab3@20256>    BEQ.w syntaxerr
00030A8C <AmiBlitz3.ab3@20257> RTS
00030A92 <AmiBlitz3.ab3@20261>   MOVEA.l constantbase,A2
00030A96 <AmiBlitz3.ab3@20262>   MOVEA.l $E(A2),A5
00030A9C <AmiBlitz3.ab3@20263>   MOVE.l a5,includesourceline
00030AA2 <AmiBlitz3.ab3@20264>   LEA inctab,a0
00030AA8 <AmiBlitz3.ab3@20265>   MOVE.w ininclude,d0
00030AAC <AmiBlitz3.ab3@20266>   MOVE.l $0(a0,d0*4),d0
00030AB0 <AmiBlitz3.ab3@20267>   MOVEA.l $4(A2),A0
00030AB4 <AmiBlitz3.ab3@20269>   LEA $0(A0,D0.l),A0
00030AB6 <AmiBlitz3.ab3@20270>   MOVEA.l A5,A1
00030AB8 <AmiBlitz3.ab3@20273>     CMPA.l A0,A1
00030ABC <AmiBlitz3.ab3@20274>      BCC.w JL_0_C0C6
00030ABE <AmiBlitz3.ab3@20275>   TST.b (A1)+
00030AC2 <AmiBlitz3.ab3@20276>   BNE.w JL_0_C0B6
00030AC6 <AmiBlitz3.ab3@20277> BRA.w JL_0_C112
00030ACA <AmiBlitz3.ab3@20280>   MOVEA.l $4(A2),A1
00030ACC <AmiBlitz3.ab3@20283>   CMPA.l A0,A5
00030AD0 <AmiBlitz3.ab3@20284>   BCC.w JL_0_C0D6
00030AD2 <AmiBlitz3.ab3@20285>   MOVE.b (A5)+,(A1)+
00030AD6 <AmiBlitz3.ab3@20286> BRA.w JL_0_C0CA
00030AD8 <AmiBlitz3.ab3@20289>   MOVE.l A1,D0
00030ADC <AmiBlitz3.ab3@20290>   SUB.l $4(A2),D0
00030AE2 <AmiBlitz3.ab3@20291>   LEA inctab,a0
00030AE4 <AmiBlitz3.ab3@20292>   MOVEQ #0,d1
00030AEA <AmiBlitz3.ab3@20293>   MOVE.w ininclude,d1
00030AEE <AmiBlitz3.ab3@20294>   MOVE.l d0,0(a0,d1*4)
00030AF4 <AmiBlitz3.ab3@20296>   MOVEA.l _dosbase,A6
00030AF8 <AmiBlitz3.ab3@20297>   MOVE.l $8(A2),D1
00030AFA <AmiBlitz3.ab3@20298>   MOVE.l A1,D2
00030B00 <AmiBlitz3.ab3@20299>   MOVE.l D2,include_base
00030B06 <AmiBlitz3.ab3@20301>   MOVE.l #$10000000,d3                                     ;load whole file
00030B08 <AmiBlitz3.ab3@20302>   SUB.l D0,D3
00030B0C <AmiBlitz3.ab3@20303>    JSR _Read(A6)
00030B0E <AmiBlitz3.ab3@20304>   TST.l D0
00030B12 <AmiBlitz3.ab3@20305>    BMI.w error_reading_file
00030B16 <AmiBlitz3.ab3@20306>    BEQ.w JL_0_C120
00030B1C <AmiBlitz3.ab3@20307>    MOVE.l D0,include_length
00030B5E <AmiBlitz3.ab3@20308>    !ComData_GetL{comPtr_PreProcessor,include_preprocessor}
00030B88 <AmiBlitz3.ab3@20309>    !basic
00030B98 <AmiBlitz3.ab3@20310>    ilen.l  = Peek.l(?include_length)
00030BA8 <AmiBlitz3.ab3@20311>    ibase.l = Peek.l(?include_base)
00030BB8 <AmiBlitz3.ab3@20312>    ido.l   = Peek.l(?include_process)
00030BC8 <AmiBlitz3.ab3@20313>    *tn.preprocessor = Peek.l(?include_preprocessor)
00030BD2 <AmiBlitz3.ab3@20314>    If ido
00030BE4 <AmiBlitz3.ab3@20315>      ioffset.l = SkipXtraHeader{ibase,ilen}
00030C0A <AmiBlitz3.ab3@20316>      nilen.l = preproc_Tokenize{*tn,ibase+ioffset,ibase,ilen-ioffset}
00030C1C <AmiBlitz3.ab3@20317>      If nilen>0
00030C2C <AmiBlitz3.ab3@20321>        Poke.l ?include_length,nilen
00030C4A <AmiBlitz3.ab3@20324>    !asm
00030C54 <AmiBlitz3.ab3@20325>    MOVE.l #0,include_process
00030C5A <AmiBlitz3.ab3@20326>    MOVE.l include_length,D0
00030C60 <AmiBlitz3.ab3@20327>    LEA inctab,a0
00030C62 <AmiBlitz3.ab3@20328>    MOVEQ #0,d1
00030C68 <AmiBlitz3.ab3@20329>    MOVE.w ininclude,d1
00030C6C <AmiBlitz3.ab3@20330>    ADD.l d0,0(a0,d1*4)
00030C70 <AmiBlitz3.ab3@20332>   MOVEA.l $4(A2),A5
00030C74 <AmiBlitz3.ab3@20334>    MOVE.l 0(a0,d1*4),d0
00030C78 <AmiBlitz3.ab3@20335>   CLR.b $0(A5,D0.l)
00030C7A <AmiBlitz3.ab3@20338>   MOVEA.l A5,A0
00030C7C <AmiBlitz3.ab3@20341>     TST.b (A0)+
00030C80 <AmiBlitz3.ab3@20342>   BNE.w JL_0_C114
00030C84 <AmiBlitz3.ab3@20343>   MOVE.l A0,$E(A2)
00030C86 <AmiBlitz3.ab3@20344> RTS
00030C8A <AmiBlitz3.ab3@20347> include_length:        Dc.l 0                              ; for tokenizer!
00030C8E <AmiBlitz3.ab3@20348> include_base:          Dc.l 0
00030C92 <AmiBlitz3.ab3@20349> include_process:       Dc.l 0
00030C96 <AmiBlitz3.ab3@20350> include_preprocessor:  Dc.l 0
00030C9A <AmiBlitz3.ab3@20354>   MOVE.l $8(A2),D1
00030CA0 <AmiBlitz3.ab3@20356>   MOVEA.l _dosbase,A6
00030CA4 <AmiBlitz3.ab3@20357>   JSR _Close(a6)
00030CAA <AmiBlitz3.ab3@20358>   MOVEA.l _execbase,A6
00030CAE <AmiBlitz3.ab3@20359>   MOVEA.l $4(A2),A1
00030CB4 <AmiBlitz3.ab3@20360>   MOVE.l #$400*8,D0                                        ;exit include
00030CB8 <AmiBlitz3.ab3@20362>   JSR _FreeVec(a6)
00030CBE <AmiBlitz3.ab3@20365>   MOVE.l (A2),constantbase
00030CC0 <AmiBlitz3.ab3@20366>   MOVEA.l A2,A1
00030CC2 <AmiBlitz3.ab3@20367>   MOVEQ.l #$00,D0
00030CC6 <AmiBlitz3.ab3@20368>   MOVE.b $12(A2),D0
00030CCC <AmiBlitz3.ab3@20369>   MOVEA.l _execbase,A6
00030CD2 <AmiBlitz3.ab3@20370>   MOVE.l mempool2,a0
00030CD6 <AmiBlitz3.ab3@20371>   JSR _FreePooled(A6)
00030CDC <AmiBlitz3.ab3@20372>   JSR zero_includename
00030CE2 <AmiBlitz3.ab3@20373>   SUBQ.w #1,ininclude
00030CE6 <AmiBlitz3.ab3@20374>   BNE.w AJL_0_C09E
00030CEC <AmiBlitz3.ab3@20377>   LEA _include,a0
00030CF0 <AmiBlitz3.ab3@20378>   MOVEM.l a0-a6/d0-d7,-(a7)
00030CF6 <AmiBlitz3.ab3@20379>   LEA ptr_parameterstore,a1
00030CF8 <AmiBlitz3.ab3@20382>     MOVE.b (a0)+,(a1)+
00030CFC <AmiBlitz3.ab3@20383>   BNE 'l1b
00030CFE <AmiBlitz3.ab3@20384>   MOVEQ #9,d2
00030D04 <AmiBlitz3.ab3@20385>   JSR findlabel2
00030D08 <AmiBlitz3.ab3@20386>   BNE 'd
00030D0C <AmiBlitz3.ab3@20387>   CLR.l 8(a2)
00030D10 <AmiBlitz3.ab3@20390>   MOVEM.l (a7)+,a0-a6/d0-d7
00030D12 <AmiBlitz3.ab3@20391> RTS
00030D18 <AmiBlitz3.ab3@20395>   MOVE.l unusedfunc,d0
00030D1C <AmiBlitz3.ab3@20396>   BEQ 'noclear
00030D20 <AmiBlitz3.ab3@20397>   MOVEM.l d0-d2/a0-a1/a6,-(a7)
00030D22 <AmiBlitz3.ab3@20400>     MOVE.l d0,a1
00030D26 <AmiBlitz3.ab3@20401>     MOVE.l 4(a1),d0
00030D28 <AmiBlitz3.ab3@20402>     MOVE.l (a1),d2
00030D2E <AmiBlitz3.ab3@20403>     MOVE.l _execbase,a6
00030D32 <AmiBlitz3.ab3@20404>     JSR _FreeMem(a6)
00030D34 <AmiBlitz3.ab3@20405>     MOVE.l d2,d0
00030D38 <AmiBlitz3.ab3@20406>   BNE 'f1
00030D3E <AmiBlitz3.ab3@20407>   CLR.l unusedfunc
00030D42 <AmiBlitz3.ab3@20408>   MOVEM.l (a7)+,a0-a1/a6/d0-d2
00030D44 <AmiBlitz3.ab3@20411> RTS
00030D4A <AmiBlitz3.ab3@20415>   MOVEA.l xinclude_base,A2
00030D50 <AmiBlitz3.ab3@20416>   CLR.l xinclude_base
00030D54 <AmiBlitz3.ab3@20419>     CMPA.w #$0,A2
00030D58 <AmiBlitz3.ab3@20420>      BEQ.w JL_0_C186
00030D5A <AmiBlitz3.ab3@20421>     MOVEQ.l #$00,D0
00030D5E <AmiBlitz3.ab3@20422>     MOVE.b 4+8(A2),D0
00030D60 <AmiBlitz3.ab3@20423>     MOVEA.l A2,A1
00030D62 <AmiBlitz3.ab3@20424>     MOVEA.l (A2),A2
00030D68 <AmiBlitz3.ab3@20425>     MOVEA.l _execbase,A6
00030D6E <AmiBlitz3.ab3@20426>     MOVE.l mempool2,a0
00030D72 <AmiBlitz3.ab3@20427>     JSR _FreePooled(A6)
00030D76 <AmiBlitz3.ab3@20428> BRA.w JL_0_C168
00030D78 <AmiBlitz3.ab3@20431> RTS
00030D7E <AmiBlitz3.ab3@20435>   MOVEA.l constantbase,A2
00030D84 <AmiBlitz3.ab3@20436>   CLR.l constantbase
00030D88 <AmiBlitz3.ab3@20439>     CMPA.w #$0,A2
00030D8C <AmiBlitz3.ab3@20440>      BEQ.w JL_0_C1DC
00030D90 <AmiBlitz3.ab3@20441>     MOVE.l $8(A2),D1
00030D94 <AmiBlitz3.ab3@20442>      BEQ.w JL_0_C1AE
00030D9A <AmiBlitz3.ab3@20443>     MOVEA.l _dosbase,A6
00030D9E <AmiBlitz3.ab3@20444>      JSR _Close(A6)
00030DA2 <AmiBlitz3.ab3@20447>     MOVE.l $4(A2),D0
00030DA6 <AmiBlitz3.ab3@20448>      BEQ.w JL_0_C1C6
00030DA8 <AmiBlitz3.ab3@20449>     MOVEA.l D0,A1
00030DAE <AmiBlitz3.ab3@20450>     MOVE.l #$400*8,D0
00030DB4 <AmiBlitz3.ab3@20451>     MOVEA.l _execbase,A6
00030DBA <AmiBlitz3.ab3@20452>     MOVE.l mempool,a0
00030DBE <AmiBlitz3.ab3@20453>     JSR _FreeVec(a6)
00030DC0 <AmiBlitz3.ab3@20456>     MOVEQ.l #$00,D0
00030DC4 <AmiBlitz3.ab3@20457>     MOVE.b $12(A2),D0
00030DC6 <AmiBlitz3.ab3@20458>     MOVEA.l A2,A1
00030DC8 <AmiBlitz3.ab3@20459>     MOVEA.l (A2),A2
00030DCE <AmiBlitz3.ab3@20460>     MOVEA.l _execbase,A6
00030DD4 <AmiBlitz3.ab3@20461>     MOVE.l mempool2,a0
00030DD8 <AmiBlitz3.ab3@20462>     JSR _FreePooled(A6)
00030DDC <AmiBlitz3.ab3@20463> BRA.w JL_0_C194
00030DDE <AmiBlitz3.ab3@20466> RTS
00030DE0 <AmiBlitz3.ab3@20470>   SWAP D0
00030DE4 <AmiBlitz3.ab3@20471>    BSR.w JL_0_C1E6
00030DE6 <AmiBlitz3.ab3@20472>   SWAP D0
00030DEC <AmiBlitz3.ab3@20475>   MOVEA.l data2,A4
00030DF2 <AmiBlitz3.ab3@20476>   CMPA.l allat,A4
00030DF6 <AmiBlitz3.ab3@20477>    BCC.w JL_0_C200
00030DF8 <AmiBlitz3.ab3@20478>   MOVE.w D0,(A4)+
00030DFE <AmiBlitz3.ab3@20479>   MOVE.l A4,data2
00030E00 <AmiBlitz3.ab3@20480> RTS
00030E08 <AmiBlitz3.ab3@20483>   MOVE.w #$FFFF,dontwrite
00030E0E <AmiBlitz3.ab3@20484>   ADDQ.l #2,data2
00030E10 <AmiBlitz3.ab3@20485> RTS
00030E16 <AmiBlitz3.ab3@20489>   MOVEA.l data2,A4
00030E1C <AmiBlitz3.ab3@20490>   CMPA.l allat,A4
00030E20 <AmiBlitz3.ab3@20491>    BCC.w JL_0_C22A
00030E22 <AmiBlitz3.ab3@20492>   MOVE.b D0,(A4)+
00030E28 <AmiBlitz3.ab3@20493>   MOVE.l A4,data2
00030E2A <AmiBlitz3.ab3@20494> RTS
00030E32 <AmiBlitz3.ab3@20497>   MOVE.w #$FFFF,dontwrite
00030E38 <AmiBlitz3.ab3@20498>   ADDQ.l #1,data2
00030E3A <AmiBlitz3.ab3@20499> RTS
00030E3E <AmiBlitz3.ab3@20503>   CMP.w #$22,D0
00030E42 <AmiBlitz3.ab3@20504>    BNE.w syntaxerr
00030E48 <AmiBlitz3.ab3@20508>   JSR get1bytemain
00030E4C <AmiBlitz3.ab3@20509>   CMP.b #$22,D0
00030E50 <AmiBlitz3.ab3@20510>    BEQ.w JL_0_C25A
00030E52 <AmiBlitz3.ab3@20511>   TST.w D0
00030E56 <AmiBlitz3.ab3@20512>    BEQ.w syntaxerr
00030E58 <AmiBlitz3.ab3@20513>   MOVE.b D0,(A0)+
00030E5C <AmiBlitz3.ab3@20514> BRA.w JL_0_C242
00030E5E <AmiBlitz3.ab3@20517>   CLR.b (A0)
00030E60 <AmiBlitz3.ab3@20518> RTS
00030E62 <AmiBlitz3.ab3@20521>   TST.l D3
00030E64 <AmiBlitz3.ab3@20522> RTS
00030E6A <AmiBlitz3.ab3@20525>   LEA ptr_parameterstore,A0
00030E70 <AmiBlitz3.ab3@20526>   LEA namebuff2,A1
00030E72 <AmiBlitz3.ab3@20529>     MOVE.b (A0)+,D0
00030E76 <AmiBlitz3.ab3@20530>     BEQ.w JL_0_C27C
00030E78 <AmiBlitz3.ab3@20531>   CMP.b (A1)+,D0
00030E7C <AmiBlitz3.ab3@20532>   BEQ.w JL_0_C26E
00030E7E <AmiBlitz3.ab3@20533> RTS
00030E80 <AmiBlitz3.ab3@20536>   TST.b (A1)
00030E84 <AmiBlitz3.ab3@20537>   BNE.w JL_0_C284
00030E86 <AmiBlitz3.ab3@20538> RTS
00030E8A <AmiBlitz3.ab3@20541>   CMP.w #$1,D0
00030E8C <AmiBlitz3.ab3@20542> RTS
00030E90 <AmiBlitz3.ab3@20546>   CMP.w #$2E,D0                                            ;dodeftype
00030E94 <AmiBlitz3.ab3@20547>    BNE.w syntaxerr
00030E98 <AmiBlitz3.ab3@20548>   BSR.w getparameter2
00030E9E <AmiBlitz3.ab3@20549>   LEA newtypebase,A2
00030EA2 <AmiBlitz3.ab3@20550>   BSR.w findtype
00030EA6 <AmiBlitz3.ab3@20551>    BNE.w notypeerr
00030EAC <AmiBlitz3.ab3@20552>   TST.b declare
00030EB0 <AmiBlitz3.ab3@20553>    BNE 'l1
00030EB6 <AmiBlitz3.ab3@20554>   TST.b declare2
00030EBA <AmiBlitz3.ab3@20555>    BEQ 'l2
00030EC2 <AmiBlitz3.ab3@20558>   MOVE.b #2,nowdeclare
00030EC8 <AmiBlitz3.ab3@20562>   JSR reget
00030ECC <AmiBlitz3.ab3@20563>    BNE.w JL_0_C2B4
00030ED2 <AmiBlitz3.ab3@20564>   MOVE.l A2,defaulttype
00030ED4 <AmiBlitz3.ab3@20565> RTS
00030EDA <AmiBlitz3.ab3@20568>   MOVE.l defaulttype,-(A7)
00030EE0 <AmiBlitz3.ab3@20569>   MOVE.l A2,defaulttype
00030EE4 <AmiBlitz3.ab3@20572>   BSR.w getparameter
00030EE8 <AmiBlitz3.ab3@20573>    BSR.w JL_0_8E3C
00030EEC <AmiBlitz3.ab3@20574>   CMP.w #$2C,D0
00030EF0 <AmiBlitz3.ab3@20575>    BNE.w JL_0_C2D8
00030EF6 <AmiBlitz3.ab3@20576>    JSR get1bytemain                                        ; was BSR.w
00030EFA <AmiBlitz3.ab3@20577> BRA.w JL_0_C2C0
00030F00 <AmiBlitz3.ab3@20580>   MOVE.l (A7)+,defaulttype
00030F02 <AmiBlitz3.ab3@20581> RTS
00030F06 <AmiBlitz3.ab3@20585>   LEA $4(A5),A2                                            ;fehler function
00030F08 <AmiBlitz3.ab3@20588>   MOVE.l A2,D0
00030F0C <AmiBlitz3.ab3@20591>   BSR.w getparameter
00030F10 <AmiBlitz3.ab3@20592>   BSR.w JL_0_8E3C
00030F14 <AmiBlitz3.ab3@20593>   BSR.w calcvar
00030F18 <AmiBlitz3.ab3@20594>   CMP.b #$7,D2
00030F1C <AmiBlitz3.ab3@20595>    BNE.w mismatcherr
00030F20 <AmiBlitz3.ab3@20596>   MOVE.w varmode(PC),-(A7)
00030F24 <AmiBlitz3.ab3@20597>   CMP.w #$3D,D0
00030F28 <AmiBlitz3.ab3@20598>    BNE.w syntaxerr
00030F2C <AmiBlitz3.ab3@20599>   BTST #$F,D2
00030F30 <AmiBlitz3.ab3@20600>    BNE.w JL_0_C31C
00030F34 <AmiBlitz3.ab3@20601>   MOVE.w JL_0_C2E0(PC),D1
00030F38 <AmiBlitz3.ab3@20602>   BSR.w pokewda5s
00030F3A <AmiBlitz3.ab3@20603>   MOVE.w D3,D1
00030F3E <AmiBlitz3.ab3@20604>   BSR.w writeword
00030F42 <AmiBlitz3.ab3@20607>   MOVE.w L_0_C2E4(PC),D1
00030F46 <AmiBlitz3.ab3@20608>   BSR.w writeword
00030F4C <AmiBlitz3.ab3@20609>   ADDQ.w #1,regnum
00030F4E <AmiBlitz3.ab3@20610>   MOVEQ.l #$03,D2
00030F52 <AmiBlitz3.ab3@20611>   BSR.w eval
00030F58 <AmiBlitz3.ab3@20612>   MOVE.l #$D000,D1
00030F5E <AmiBlitz3.ab3@20613>   MOVE.l d1,lastinstruction
00030F60 <AmiBlitz3.ab3@20614>   TST.w (A7)+
00030F64 <AmiBlitz3.ab3@20615>    BEQ.w Atokejsr
00030F66 <AmiBlitz3.ab3@20616>   ADDQ.w #1,D1
00030F6A <AmiBlitz3.ab3@20617> BRA.w Atokejsr
00030F6C <AmiBlitz3.ab3@20621>   MOVE.w D0,D1
00030F70 <AmiBlitz3.ab3@20622>    BPL.w syntaxerr
00030F74 <AmiBlitz3.ab3@20623>   BCLR #$F,D1
00030F7A <AmiBlitz3.ab3@20624>    JSR searchinstr
00030F7E <AmiBlitz3.ab3@20625>   MOVE.l $12(A2),D0
00030F82 <AmiBlitz3.ab3@20626>   TST.w -$2(A2,D0.L)
00030F86 <AmiBlitz3.ab3@20627>    BEQ.w freeerr
00030F88 <AmiBlitz3.ab3@20628>   MOVEQ.l #$02,D2
00030F8A <AmiBlitz3.ab3@20629>   MOVE.l A2,-(A7)
00030F8E <AmiBlitz3.ab3@20630>    BSR.w eval
00030F90 <AmiBlitz3.ab3@20631>   MOVEA.l (A7)+,A2
00030F96 <AmiBlitz3.ab3@20632>   MOVE.l A2,mymaxlib
00030F9A <AmiBlitz3.ab3@20633>   ADDA.l $12(A2),A2
00030FA0 <AmiBlitz3.ab3@20634>   TST.b debugmode
00030FA4 <AmiBlitz3.ab3@20635>    BEQ.w JL_0_C3A8
00030FAA <AmiBlitz3.ab3@20636>   MOVE.w regnum,D1
00030FAC <AmiBlitz3.ab3@20637>   LSL.w #8,D1
00030FAE <AmiBlitz3.ab3@20638>   LSL.w #1,D1
00030FB2 <AmiBlitz3.ab3@20639>   ORI.w #$B07C,D1
00030FB6 <AmiBlitz3.ab3@20640>    BSR.w writeword
00030FBA <AmiBlitz3.ab3@20641>   MOVE.w -$4(A2),D1
00030FBE <AmiBlitz3.ab3@20642>    BSR.w writeword
00030FC4 <AmiBlitz3.ab3@20643>   MOVE.l maxchk,D1
00030FC8 <AmiBlitz3.ab3@20644>    BSR.w writelong
00030FCA <AmiBlitz3.ab3@20645>   MOVE.l A2,-(A7)
00030FCE <AmiBlitz3.ab3@20646>   MOVE.w #$C30A,D1
00030FD2 <AmiBlitz3.ab3@20647>    BSR.w Atokejsr
00030FD4 <AmiBlitz3.ab3@20648>   MOVEA.l (A7)+,A2
00030FD8 <AmiBlitz3.ab3@20651>   MOVE.w -$2(A2),D2
00030FDE <AmiBlitz3.ab3@20654>   MOVE.w regnum,D1
00030FE4 <AmiBlitz3.ab3@20655>   OR.w lslimm,D1
00030FE8 <AmiBlitz3.ab3@20656>   CMP.w #$8,D2
00030FEC <AmiBlitz3.ab3@20657>    BCS.w JL_0_C3CE
00030FF0 <AmiBlitz3.ab3@20658>    BSR.w writeword
00030FF2 <AmiBlitz3.ab3@20659>   SUBQ.w #8,D2
00030FF6 <AmiBlitz3.ab3@20660>    BNE.w JL_0_C3AC
00030FFA <AmiBlitz3.ab3@20661> BRA.w JL_0_C3DA
00030FFC <AmiBlitz3.ab3@20664>   MOVE.w D2,D0
00030FFE <AmiBlitz3.ab3@20665>   LSL.w #8,D0
00031000 <AmiBlitz3.ab3@20666>   LSL.w #1,D0
00031002 <AmiBlitz3.ab3@20667>   OR.w D0,D1
00031006 <AmiBlitz3.ab3@20668>   BSR.w writeword
00031008 <AmiBlitz3.ab3@20671> RTS
0003100C <AmiBlitz3.ab3@20676>   Dc.b $26,$6D,$00,$00                                     ;MOVEA.L $0000(A5),A3
0003100E <AmiBlitz3.ab3@20677>   Dc.b $D6,$C0                                             ;ADDA.W  D0,A3
00031012 <AmiBlitz3.ab3@20681> mymaxlib:  Ds.l 1
00031016 <AmiBlitz3.ab3@20685>   BSR.w JL_0_C340
0003101A <AmiBlitz3.ab3@20686>   LEA free(PC),A0
0003101E <AmiBlitz3.ab3@20687>   LEA freef(PC),A1
00031024 <AmiBlitz3.ab3@20688>   MOVE.w -$6(A2),$2(A0)
00031028 <AmiBlitz3.ab3@20689>   BSR.w pokecode
0003102C <AmiBlitz3.ab3@20690>   MOVE.l -$A(A2),D1
00031030 <AmiBlitz3.ab3@20693>   BEQ.w nosuperr
00031034 <AmiBlitz3.ab3@20694>   MOVEA.l mymaxlib(PC),A2
00031038 <AmiBlitz3.ab3@20695> BRA.w Amakelibsub
0003103C <AmiBlitz3.ab3@20700>   BSR.w JL_0_C340
00031042 <AmiBlitz3.ab3@20701>   LEA use,A0
00031048 <AmiBlitz3.ab3@20702>   LEA usef,A1
0003104E <AmiBlitz3.ab3@20703>   MOVE.w -$6(A2),$2(A0)
00031054 <AmiBlitz3.ab3@20704>   MOVE.w -$6(A2),-$2(A1)
00031058 <AmiBlitz3.ab3@20705>   ADDQ.w #4,-$2(A1)
0003105C <AmiBlitz3.ab3@20706>   BSR.w pokecode
00031060 <AmiBlitz3.ab3@20707>   MOVE.l -$E(A2),D1
00031064 <AmiBlitz3.ab3@20708> BRA.w maxjsr
0003106A <AmiBlitz3.ab3@20712>   JSR get1bytemain
00031070 <AmiBlitz3.ab3@20716>   MOVE.l firstiff,D0
00031074 <AmiBlitz3.ab3@20717>    BEQ.w noiferr
00031076 <AmiBlitz3.ab3@20718>   MOVEA.l D0,A0
0003107C <AmiBlitz3.ab3@20719>   CMPI.b #$1,$D(A0)
00031080 <AmiBlitz3.ab3@20720>    BEQ.w illelseerr
00031084 <AmiBlitz3.ab3@20721>   MOVE.w #$6000,D1
0003108A <AmiBlitz3.ab3@20723>     TST.b fast
0003108E <AmiBlitz3.ab3@20724>     BEQ 'l1
00031094 <AmiBlitz3.ab3@20725>     OR.l #$ff,d1
00031098 <AmiBlitz3.ab3@20726>     BSR writeword
0003109A <AmiBlitz3.ab3@20730>   SWAP D1
0003109E <AmiBlitz3.ab3@20731>   BSR.w writelong
000310A0 <AmiBlitz3.ab3@20732>   MOVEQ.l #$00,D1
000310A4 <AmiBlitz3.ab3@20733>   BSR.w AJL_0_D7B8
000310AC <AmiBlitz3.ab3@20734>   MOVE.l destpointer,$8(A0)
000310B0 <AmiBlitz3.ab3@20735> BRA.w do_then
000310B6 <AmiBlitz3.ab3@20739>   LEA ptr_parameterstore,A0
000310B8 <AmiBlitz3.ab3@20740>   MOVE.l A0,-(A7)
000310BC <AmiBlitz3.ab3@20741>   BSR.w JL_0_C23A
000310C0 <AmiBlitz3.ab3@20742> BRA.w handle_compileerror
000310C4 <AmiBlitz3.ab3@20746>   BSR.w JL_0_BF6A
000310C6 <AmiBlitz3.ab3@20747>   MOVEQ.l #$05,D1
000310D0 <AmiBlitz3.ab3@20749>   MOVE.w oldqflag,instringon
000310D6 <AmiBlitz3.ab3@20750>   MOVEA.l lastsourcepos,A5
000310DC <AmiBlitz3.ab3@20751>   LEA AJL_0_C25E,A0
000310E0 <AmiBlitz3.ab3@20752> BRA.w JL_0_C4B4
000310E6 <AmiBlitz3.ab3@20756>   LEA ptr_parameterstore,A0
000310EA <AmiBlitz3.ab3@20757>   BSR.w JL_0_C23A
000310F0 <AmiBlitz3.ab3@20758>   JSR get1bytemain
000310F4 <AmiBlitz3.ab3@20759>   BSR.w JL_0_CCA8
000310FA <AmiBlitz3.ab3@20760>   LEA namebuff2,A0
000310FE <AmiBlitz3.ab3@20761>   BSR.w JL_0_C23A
00031104 <AmiBlitz3.ab3@20762>   LEA AJL_0_C262,A0
00031106 <AmiBlitz3.ab3@20765>   LSL.w #2,D1
0003110C <AmiBlitz3.ab3@20766>   LEA CIF_branches,A1
00031110 <AmiBlitz3.ab3@20767>   MOVE.l $0(A1,D1.W),-(A7)
00031112 <AmiBlitz3.ab3@20768>   MOVEQ.l #-$01,D1
00031114 <AmiBlitz3.ab3@20771>   JSR (A0)
00031116 <AmiBlitz3.ab3@20773>   MOVEA.l (A7)+,A1
00031118 <AmiBlitz3.ab3@20775> JMP (A1)
0003111C <AmiBlitz3.ab3@20779>   BEQ.w JL_0_C4F6
00031120 <AmiBlitz3.ab3@20780> BRA.w JL_0_C4F4
00031124 <AmiBlitz3.ab3@20784>   BNE.w JL_0_C4F6
00031128 <AmiBlitz3.ab3@20785> BRA.w JL_0_C4F4
0003112C <AmiBlitz3.ab3@20789>   BLT.w JL_0_C4F6
00031130 <AmiBlitz3.ab3@20790> BRA.w JL_0_C4F4
00031134 <AmiBlitz3.ab3@20794>   BLE.w JL_0_C4F6
00031138 <AmiBlitz3.ab3@20795> BRA.w JL_0_C4F4
0003113C <AmiBlitz3.ab3@20799>   BGT.w JL_0_C4F6
00031140 <AmiBlitz3.ab3@20800> BRA.w JL_0_C4F4
00031144 <AmiBlitz3.ab3@20804>   BGE.w JL_0_C4F6
00031146 <AmiBlitz3.ab3@20807>   MOVEQ.l #$00,D1
0003114C <AmiBlitz3.ab3@20810>   MOVEA.l concomsp,A0
00031152 <AmiBlitz3.ab3@20811>   MOVE.w skipcode,(A0)+
00031158 <AmiBlitz3.ab3@20812>   MOVE.l A0,concomsp
0003115E <AmiBlitz3.ab3@20813>   MOVE.w D1,skipcode
00031164 <AmiBlitz3.ab3@20814>   JSR get1bytemain
00031168 <AmiBlitz3.ab3@20815>    BNE.w syntaxerr
0003116E <AmiBlitz3.ab3@20816> JMP bakup
00031176 <AmiBlitz3.ab3@20820> rescode:   Dc.b $2B,$7c,$00,$00,$00,$00 :   Ds.w 1         ;MOVE.L  #$00000000,$0000(A5)
0003117A <AmiBlitz3.ab3@20821> rescode2:  Dc.b $2B,$40                 :   Ds.w 1         ;MOVE.L  D0,$0000(A5)
0003117E <AmiBlitz3.ab3@20828>   MOVE.w #$FC17,D1
00031184 <AmiBlitz3.ab3@20829>   JSR uselib
0003118A <AmiBlitz3.ab3@20831>   JSR reget
0003118E <AmiBlitz3.ab3@20832>    BEQ.w do_Restore__resbeg
00031192 <AmiBlitz3.ab3@20833>   BSR.w JL_0_AE22                                          ;get label name!
00031196 <AmiBlitz3.ab3@20834>   MOVE.w rescode(PC),D1
0003119A <AmiBlitz3.ab3@20835>   BSR.w writeword
000311A0 <AmiBlitz3.ab3@20836>   JSR addoff                                               ;add offset
000311A4 <AmiBlitz3.ab3@20837>   MOVE.l $C(A2),D1
000311A8 <AmiBlitz3.ab3@20838>   BSR.w writelong
000311AC <AmiBlitz3.ab3@20839>   MOVE.w rescode+6(PC),D1
000311B0 <AmiBlitz3.ab3@20840>   BSR.w writeword
000311B4 <AmiBlitz3.ab3@20841>   MOVE.l $4(A2),D1                                         ;is it outstanding?
000311B8 <AmiBlitz3.ab3@20842>   BEQ.w do_Restore__no
000311BA <AmiBlitz3.ab3@20844>   MOVEA.l D1,A1
000311BE <AmiBlitz3.ab3@20845>   ADDQ.l #1,$4(A1)                                         ;make odd - flag for data reference.
000311C0 <AmiBlitz3.ab3@20846> RTS
000311C2 <AmiBlitz3.ab3@20851> RTS
000311C6 <AmiBlitz3.ab3@20854>   MOVE.w #$CD00,D1
000311CC <AmiBlitz3.ab3@20855>   JSR Atokejsr
000311D0 <AmiBlitz3.ab3@20856>   MOVE.l rescode2(PC),D1
000311D6 <AmiBlitz3.ab3@20857> JMP writelong
000311DA <AmiBlitz3.ab3@20861>   MOVE.w #$FC17,D1
000311E0 <AmiBlitz3.ab3@20862>   JSR uselib
000311E6 <AmiBlitz3.ab3@20865>   MOVE.l dataget,D1
000311EA <AmiBlitz3.ab3@20866>   BSR.w writelong
000311EE <AmiBlitz3.ab3@20867>   BSR.w getparameter
000311F2 <AmiBlitz3.ab3@20868>   BSR.w JL_0_8E3C
000311F6 <AmiBlitz3.ab3@20869>   BSR.w calcvar
000311FA <AmiBlitz3.ab3@20870>   BTST #$E,D2
000311FE <AmiBlitz3.ab3@20871>    BEQ.w JL_0_C5A6
00031202 <AmiBlitz3.ab3@20872>   MOVE.b #$6,D2
00031204 <AmiBlitz3.ab3@20875>   TST.b D2
00031208 <AmiBlitz3.ab3@20876>    BEQ.w noleterr
0003120E <AmiBlitz3.ab3@20877>   TST.b debugmode
00031212 <AmiBlitz3.ab3@20878>    BEQ.w JL_0_C5D0
00031216 <AmiBlitz3.ab3@20879>   MOVE.w #$7000,D1
00031218 <AmiBlitz3.ab3@20880>   MOVE.b D2,D1
0003121C <AmiBlitz3.ab3@20881>   ANDI.b #$F,D1
00031220 <AmiBlitz3.ab3@20882>   BSR.w writeword
00031224 <AmiBlitz3.ab3@20883>   MOVE.w #$C310,D1
00031226 <AmiBlitz3.ab3@20884>   MOVE.w D2,-(A7)
0003122A <AmiBlitz3.ab3@20885>   BSR.w Atokejsr
0003122C <AmiBlitz3.ab3@20886>   MOVE.w (A7)+,D2
00031230 <AmiBlitz3.ab3@20889>   CMP.b #$7,D2
00031234 <AmiBlitz3.ab3@20890>    BEQ.w JL_0_C684
00031238 <AmiBlitz3.ab3@20891>   CMP.b #$1,D2
0003123C <AmiBlitz3.ab3@20892>    BNE.w JL_0_C62A
00031242 <AmiBlitz3.ab3@20893>   LEA dataletb2,A0
00031248 <AmiBlitz3.ab3@20894>   LEA dataletb2f,A1
0003124C <AmiBlitz3.ab3@20895>   BTST #$F,D2
00031250 <AmiBlitz3.ab3@20896>    BEQ.w JL_0_C5FC
00031254 <AmiBlitz3.ab3@20897>   BSR.w pokecode
00031258 <AmiBlitz3.ab3@20898> BRA.w JL_0_C668
0003125E <AmiBlitz3.ab3@20901>   LEA dataletb,A0
00031264 <AmiBlitz3.ab3@20902>   LEA dataletbf,A1
0003126A <AmiBlitz3.ab3@20903>   TST.w varmode
0003126E <AmiBlitz3.ab3@20904>    BEQ.w JL_0_C61E
00031274 <AmiBlitz3.ab3@20905>   LEA dataletbl,A0
0003127A <AmiBlitz3.ab3@20906>   LEA dataletblf,A1
0003127E <AmiBlitz3.ab3@20909>   MOVE.w D3,$4(A0)
00031282 <AmiBlitz3.ab3@20910>   BSR.w pokecode
00031286 <AmiBlitz3.ab3@20911> BRA.w JL_0_C668
0003128C <AmiBlitz3.ab3@20914>   LEA dataletw,A0
00031290 <AmiBlitz3.ab3@20915>   CMP.b #$3,D2
00031294 <AmiBlitz3.ab3@20916>    BCS.w JL_0_C63E
0003129A <AmiBlitz3.ab3@20917>   LEA dataletl,A0
0003129E <AmiBlitz3.ab3@20920>   BTST #$F,D2
000312A2 <AmiBlitz3.ab3@20921>    BEQ.w JL_0_C652
000312A6 <AmiBlitz3.ab3@20922>   MOVE.w $4(A0),D1
000312AA <AmiBlitz3.ab3@20923>    BSR.w writeword
000312AE <AmiBlitz3.ab3@20924> BRA.w JL_0_C668
000312B4 <AmiBlitz3.ab3@20927>   TST.w varmode
000312B8 <AmiBlitz3.ab3@20928>    BEQ.w JL_0_C65E
000312BA <AmiBlitz3.ab3@20929>   ADDQ.w #6,A0
000312BE <AmiBlitz3.ab3@20932>   MOVE.w D3,$2(A0)
000312C0 <AmiBlitz3.ab3@20933>   MOVE.l (A0),D1
000312C4 <AmiBlitz3.ab3@20934>   BSR.w writelong
000312CA <AmiBlitz3.ab3@20937>   MOVE.l dataput,D1
000312CE <AmiBlitz3.ab3@20938>    BSR.w writelong
000312D2 <AmiBlitz3.ab3@20939>   CMP.w #$2C,D0
000312D6 <AmiBlitz3.ab3@20940>    BEQ.w JL_0_C67C
000312D8 <AmiBlitz3.ab3@20941> RTS
000312DE <AmiBlitz3.ab3@20944>   JSR get1bytemain
000312E2 <AmiBlitz3.ab3@20945> BRA.w JL_0_C584
000312E8 <AmiBlitz3.ab3@20949>   MOVE.w stlenget,D1
000312EC <AmiBlitz3.ab3@20950>    BSR.w writeword
000312F0 <AmiBlitz3.ab3@20951>   BTST #$F,D2
000312F4 <AmiBlitz3.ab3@20952>    BNE.w JL_0_C6C0
000312FA <AmiBlitz3.ab3@20953>   TST.w varmode
000312FE <AmiBlitz3.ab3@20954>    BEQ.w JL_0_C6B0
00031304 <AmiBlitz3.ab3@20955>   MOVE.w D3,leaampl+2
0003130A <AmiBlitz3.ab3@20956>   MOVE.l leaampl,D1
0003130E <AmiBlitz3.ab3@20957> BRA.w JL_0_C6BC
00031314 <AmiBlitz3.ab3@20960>   MOVE.w D3,leaamp+2
0003131A <AmiBlitz3.ab3@20961>   MOVE.l leaamp,D1
0003131E <AmiBlitz3.ab3@20964>   BSR.w writelong
00031322 <AmiBlitz3.ab3@20967>   MOVE.w #$C701,D1
00031328 <AmiBlitz3.ab3@20968>   MOVE.w varmode,D2
0003132C <AmiBlitz3.ab3@20969>    BEQ.w JL_0_C6D0
0003132E <AmiBlitz3.ab3@20970>   SUBQ.w #1,D1
00031332 <AmiBlitz3.ab3@20973>   BSR.w Atokejsr
0003133A <AmiBlitz3.ab3@20974>   MOVE.w #$FFFF,lasta6
00031340 <AmiBlitz3.ab3@20975>   LEA stalign,A0
00031346 <AmiBlitz3.ab3@20976>   LEA stalignf,A1
0003134A <AmiBlitz3.ab3@20977>   BSR.w pokecode
0003134E <AmiBlitz3.ab3@20978> BRA.w JL_0_C668
00031352 <AmiBlitz3.ab3@20982>   CMP.w #$2E,D0                                            ;definecode 'lb 'lw 'll
00031356 <AmiBlitz3.ab3@20983>    BNE.w JL_0_C720
0003135C <AmiBlitz3.ab3@20984>   JSR get1bytemain
00031360 <AmiBlitz3.ab3@20985>   CMP.w #$77,D0
00031364 <AmiBlitz3.ab3@20986>    BEQ.w JL_0_C71C
00031368 <AmiBlitz3.ab3@20987>   CMP.w #$62,D0
0003136C <AmiBlitz3.ab3@20988>    BEQ.w JL_0_C718
00031370 <AmiBlitz3.ab3@20989>   CMP.w #"s",d0
00031374 <AmiBlitz3.ab3@20990>   BEQ single3
00031378 <AmiBlitz3.ab3@20991>   CMP.w #"d",d0
0003137C <AmiBlitz3.ab3@20992>   BEQ double3
00031380 <AmiBlitz3.ab3@20993>   CMP.w #$6C,D0
00031384 <AmiBlitz3.ab3@20994>    BNE.w syntaxerr
00031386 <AmiBlitz3.ab3@20995>   MOVEQ.l #$02,D1
00031388 <AmiBlitz3.ab3@20996> RTS
00031390 <AmiBlitz3.ab3@21000>   MOVE.b #1,iee
00031392 <AmiBlitz3.ab3@21001>   MOVEQ.l #$3,d1
00031394 <AmiBlitz3.ab3@21002> RTS
0003139C <AmiBlitz3.ab3@21006>   MOVE.b #1,iee
0003139E <AmiBlitz3.ab3@21007>   MOVEQ.l #$4,d1
000313A0 <AmiBlitz3.ab3@21008> RTS
000313A2 <AmiBlitz3.ab3@21012>   MOVEQ.l #$00,D1
000313A4 <AmiBlitz3.ab3@21013> RTS
000313A6 <AmiBlitz3.ab3@21017>   MOVEQ.l #$01,D1
000313A8 <AmiBlitz3.ab3@21018> RTS
000313AA <AmiBlitz3.ab3@21022>   MOVEQ.l #$01,D1
000313B0 <AmiBlitz3.ab3@21023> JMP bakup
000313B4 <AmiBlitz3.ab3@21027>   BSR.w JL_0_C6F0
000313B6 <AmiBlitz3.ab3@21029>   MOVE.w D1,-(A7)
000313BA <AmiBlitz3.ab3@21030>    BSR.w AJL_0_BF6E
000313BE <AmiBlitz3.ab3@21031>   CMP.w #$2C,D0
000313C2 <AmiBlitz3.ab3@21032>    BNE.w syntaxerr
000313C4 <AmiBlitz3.ab3@21033>   MOVE.l D3,-(A7)
000313C8 <AmiBlitz3.ab3@21034>    BSR.w AJL_0_BF6E
000313CA <AmiBlitz3.ab3@21035>   MOVE.l D3,D1
000313CC <AmiBlitz3.ab3@21036>   MOVE.l (A7)+,D3
000313CE <AmiBlitz3.ab3@21037>   MOVE.w (A7)+,D2
000313D2 <AmiBlitz3.ab3@21038>    BEQ.w JL_0_C774
000313D6 <AmiBlitz3.ab3@21042>   CMP.w #$1,D2
000313DA <AmiBlitz3.ab3@21043>    BEQ.w JL_0_C768
000313DC <AmiBlitz3.ab3@21046>   SWAP D1
000313E0 <AmiBlitz3.ab3@21047>    BSR.w writeword
000313E2 <AmiBlitz3.ab3@21048>   SWAP D1
000313E6 <AmiBlitz3.ab3@21049>    BSR.w writeword
000313E8 <AmiBlitz3.ab3@21050>   SUBQ.l #1,D3
000313EC <AmiBlitz3.ab3@21051>    BNE.w JL_0_C754
000313EE <AmiBlitz3.ab3@21052> RTS
000313F2 <AmiBlitz3.ab3@21055>    BSR.w writeword
000313F4 <AmiBlitz3.ab3@21056>   SUBQ.l #1,D3
000313F8 <AmiBlitz3.ab3@21057>    BNE.w JL_0_C768
000313FA <AmiBlitz3.ab3@21058> RTS
000313FE <AmiBlitz3.ab3@21061>    BSR.w writebyte
00031400 <AmiBlitz3.ab3@21062>   SUBQ.l #1,D3
00031404 <AmiBlitz3.ab3@21063>    BNE.w JL_0_C774
00031406 <AmiBlitz3.ab3@21064> RTS
0003140A <AmiBlitz3.ab3@21068>   BSR.w JL_0_C6F0                                          ;definestorage
0003140C <AmiBlitz3.ab3@21069>   MOVE.w D1,-(A7)
00031410 <AmiBlitz3.ab3@21070>   BSR.w AJL_0_BF6E
00031412 <AmiBlitz3.ab3@21071>   MOVE.w (A7)+,D1
00031414 <AmiBlitz3.ab3@21072>   LSL.l D1,D3
00031416 <AmiBlitz3.ab3@21073>   MOVE.l d3,d0
0003141A <AmiBlitz3.ab3@21074>   BEQ 'll5
0003141C <AmiBlitz3.ab3@21075>   MOVEQ #0,d1
00031422 <AmiBlitz3.ab3@21078>     JSR writebyte
00031424 <AmiBlitz3.ab3@21079>     SUBQ.l #1,d3
00031428 <AmiBlitz3.ab3@21080>   BNE.s 'll10
0003142A <AmiBlitz3.ab3@21083> RTS
0003142C <AmiBlitz3.ab3@21087>   MOVE.w D0,-(A7)
00031432 <AmiBlitz3.ab3@21088>   LEA dummyasm,A0
00031438 <AmiBlitz3.ab3@21089>   MOVEA.l destpointer,A1
00031442 <AmiBlitz3.ab3@21090>   MOVE.w asmlen2,asmlen
00031448 <AmiBlitz3.ab3@21091>   JSR insasm
0003144A <AmiBlitz3.ab3@21092>   MOVE.w (A7)+,D0
0003144C <AmiBlitz3.ab3@21093> RTS
00031450 <AmiBlitz3.ab3@21097>   BSR.w JL_0_C6F0
0003145A <AmiBlitz3.ab3@21099>   MOVE.l #ptr_parameterstore,asmbuff
0003145C <AmiBlitz3.ab3@21100>   TST.w D1
00031460 <AmiBlitz3.ab3@21101>    BEQ.w JL_0_C7EE
00031464 <AmiBlitz3.ab3@21102>   CMP.w #$1,D1
00031468 <AmiBlitz3.ab3@21103>    BEQ.w JL_0_C844
0003146C <AmiBlitz3.ab3@21104>   CMP.w #$2,d1
00031470 <AmiBlitz3.ab3@21105>    BEQ long
00031474 <AmiBlitz3.ab3@21106>   CMP.w #$3,d1
00031478 <AmiBlitz3.ab3@21107>    BEQ single
0003147A <AmiBlitz3.ab3@21108>    MOVEQ.l #$0d,D3
00031480 <AmiBlitz3.ab3@21114>    JSR asmconst
00031484 <AmiBlitz3.ab3@21115>    BSR.w JL_0_C796
00031488 <AmiBlitz3.ab3@21116>    BSR.w writelong
0003148C <AmiBlitz3.ab3@21117>    BSR   writelong
00031490 <AmiBlitz3.ab3@21118>   CMP.w #$2C,D0
00031494 <AmiBlitz3.ab3@21119>    BEQ.w JL_0_C7D8b
00031496 <AmiBlitz3.ab3@21120> RTS
00031498 <AmiBlitz3.ab3@21124>   MOVEQ.l #$0B,D3
000314A0 <AmiBlitz3.ab3@21128>   MOVE.b #1,_dcb
000314A6 <AmiBlitz3.ab3@21131>   JSR asmconst
000314AC <AmiBlitz3.ab3@21132>   CLR.b _dcb
000314B0 <AmiBlitz3.ab3@21133>   BSR.w JL_0_C796
000314B4 <AmiBlitz3.ab3@21134>   BSR writebyte
000314B8 <AmiBlitz3.ab3@21135>   BSR writebyte
000314BC <AmiBlitz3.ab3@21136>   BSR writebyte                                            ;long
000314C0 <AmiBlitz3.ab3@21137>   BSR writebyte
000314C4 <AmiBlitz3.ab3@21138>   CMP.w #$2C,D0
000314C8 <AmiBlitz3.ab3@21139>    BEQ.w JL_0_C7D8
000314CA <AmiBlitz3.ab3@21140> RTS
000314CC <AmiBlitz3.ab3@21144>   MOVEQ.l #$0c,D3
000314D4 <AmiBlitz3.ab3@21148>   MOVE.b #1,_dcb
000314DA <AmiBlitz3.ab3@21151>   JSR asmconst
000314E0 <AmiBlitz3.ab3@21152>   CLR.b _dcb
000314E4 <AmiBlitz3.ab3@21153>   BSR.w JL_0_C796
000314E8 <AmiBlitz3.ab3@21154>   BSR.w writebyte
000314EC <AmiBlitz3.ab3@21155>   BSR.w writebyte
000314F0 <AmiBlitz3.ab3@21156>   BSR.w writebyte
000314F4 <AmiBlitz3.ab3@21157>   BSR.w writebyte
000314F8 <AmiBlitz3.ab3@21158>   CMP.w #$2C,D0
000314FC <AmiBlitz3.ab3@21159>    BEQ.w JL_0_C7D8a
000314FE <AmiBlitz3.ab3@21160> RTS
00031500 <AmiBlitz3.ab3@21165>   MOVEQ.l #$11,D3
00031506 <AmiBlitz3.ab3@21168>   JSR get1bytemain
0003150A <AmiBlitz3.ab3@21169>   CMP.w #$22,D0
0003150E <AmiBlitz3.ab3@21170>    BNE.w JL_0_C81E
00031510 <AmiBlitz3.ab3@21173>   MOVE.b (a5)+,d0                                          ;bsr.w get1bytemain ascii dc.b
00031514 <AmiBlitz3.ab3@21174>    BEQ.w syntaxerr
00031518 <AmiBlitz3.ab3@21175>   CMP.w #$22,D0
0003151C <AmiBlitz3.ab3@21176>    BEQ.w JL_0_C816
00031520 <AmiBlitz3.ab3@21177>   CMP.b #"\",d0
00031524 <AmiBlitz3.ab3@21178>    BNE 'n1
00031528 <AmiBlitz3.ab3@21179>   CMP.b #"\",(a5)
0003152C <AmiBlitz3.ab3@21180>    BEQ 'do1
0003152E <AmiBlitz3.ab3@21183>   MOVE.w D0,D1
00031532 <AmiBlitz3.ab3@21184>   BSR.w writebyte
00031536 <AmiBlitz3.ab3@21185> BRA.w JL_0_C7FC
0003153E <AmiBlitz3.ab3@21188>   CMP.l #"__DA",1(a5)
00031542 <AmiBlitz3.ab3@21189>    BNE 'nodate1
0003154A <AmiBlitz3.ab3@21190>   CMP.l #"TE__",5(a5)
0003154E <AmiBlitz3.ab3@21191>    BEQ 'c1
00031556 <AmiBlitz3.ab3@21192>   CMP.l #"TE_G",5(a5)
0003155A <AmiBlitz3.ab3@21193>    BNE 'nodate1
00031562 <AmiBlitz3.ab3@21194>   CMP.l #"ER__",9(a5)
00031566 <AmiBlitz3.ab3@21195>    BNE 'nodate1
0003156C <AmiBlitz3.ab3@21196>   JSR compiledatedc_ger
00031570 <AmiBlitz3.ab3@21197> BRA 'n1
00031576 <AmiBlitz3.ab3@21200>   JSR compiledatedc
0003157A <AmiBlitz3.ab3@21201> BRA 'n1
00031582 <AmiBlitz3.ab3@21204>   CMP.l #"__VE",1(a5)
00031586 <AmiBlitz3.ab3@21205>    BNE 'n1
0003158C <AmiBlitz3.ab3@21206>   CMP.w #"R_",5(a5)
00031590 <AmiBlitz3.ab3@21207>    BNE 'n1
00031596 <AmiBlitz3.ab3@21208>   JSR version_string_dc
0003159A <AmiBlitz3.ab3@21209> BRA.w JL_0_C7FC
000315A0 <AmiBlitz3.ab3@21213>   CLR.w instringon
000315A6 <AmiBlitz3.ab3@21214>   JSR get1bytemain
000315AA <AmiBlitz3.ab3@21215> BRA.w JL_0_C83A
000315B4 <AmiBlitz3.ab3@21220>    MOVE.w oldqflag,instringon
000315BA <AmiBlitz3.ab3@21221>   MOVEA.l lastsourcepos,A5
000315C0 <AmiBlitz3.ab3@21222>    JSR asmconst
000315C6 <AmiBlitz3.ab3@21223>   SUBQ.l #1,destpointer
000315CA <AmiBlitz3.ab3@21224>    BSR.w JL_0_C796
000315D0 <AmiBlitz3.ab3@21225>   ADDQ.l #1,destpointer
000315D4 <AmiBlitz3.ab3@21226>    BSR.w writebyte
000315D8 <AmiBlitz3.ab3@21229>   CMP.w #$2C,D0
000315DC <AmiBlitz3.ab3@21230>    BEQ.w JL_0_C7F0
000315DE <AmiBlitz3.ab3@21231> RTS
000315E0 <AmiBlitz3.ab3@21235>   MOVEQ.l #$10,D3
000315E8 <AmiBlitz3.ab3@21241>   MOVE.b #1,_dcb
000315EE <AmiBlitz3.ab3@21242>   JSR asmconst
000315F4 <AmiBlitz3.ab3@21243>   CLR.b _dcb
000315F8 <AmiBlitz3.ab3@21244>   BSR.w JL_0_C796
000315FC <AmiBlitz3.ab3@21245>   BSR.w writebyte
00031600 <AmiBlitz3.ab3@21246>   BSR.w writebyte
00031604 <AmiBlitz3.ab3@21247>   CMP.w #$2C,D0
00031608 <AmiBlitz3.ab3@21248>    BEQ.w JL_0_C84A
0003160A <AmiBlitz3.ab3@21249> RTS
00031610 <AmiBlitz3.ab3@21253>   ADDQ.l #3,destpointer
00031618 <AmiBlitz3.ab3@21254>   ANDI.w #$FFFC,destpointer+2
0003161A <AmiBlitz3.ab3@21255> RTS
00031620 <AmiBlitz3.ab3@21259>   ADDQ.l #7,destpointer
00031628 <AmiBlitz3.ab3@21260>   ANDI.w #$FFF8,destpointer+2
0003162A <AmiBlitz3.ab3@21261> RTS
00031630 <AmiBlitz3.ab3@21265>   ADDQ.l #1,destpointer                                    ;even
00031638 <AmiBlitz3.ab3@21266>   BCLR #$0,destpointer+3
0003163A <AmiBlitz3.ab3@21267> RTS
0003163C <AmiBlitz3.ab3@21270> datasize: Ds.w 1
00031642 <AmiBlitz3.ab3@21280>   TST.b debugmode
00031646 <AmiBlitz3.ab3@21281>   BEQ.w pdt__skip
0003164A <AmiBlitz3.ab3@21282>   MOVE.w #$4420,D0                                         ;'D '
0003164E <AmiBlitz3.ab3@21283>   MOVE.b datasize+1(PC),D0
00031652 <AmiBlitz3.ab3@21284> BRA.w JL_0_C1E6
00031654 <AmiBlitz3.ab3@21287> RTS
00031658 <AmiBlitz3.ab3@21291>   MOVE.w #$FC17,D1
0003165E <AmiBlitz3.ab3@21292>    JSR uselib
00031668 <AmiBlitz3.ab3@21294>    MOVE.w oldqflag,instringon
0003166E <AmiBlitz3.ab3@21295>   MOVEA.l lastsourcepos,A5
00031674 <AmiBlitz3.ab3@21296>    JSR AJL_0_498A
0003167A <AmiBlitz3.ab3@21297>   MOVE.w D1,datasize
0003167E <AmiBlitz3.ab3@21298>   CMP.w #$7,D1
00031682 <AmiBlitz3.ab3@21299>    BEQ.w JL_0_C944
00031684 <AmiBlitz3.ab3@21300>   MOVE.w D1,-(A7)
00031688 <AmiBlitz3.ab3@21303>   BSR.w pdt
0003168A <AmiBlitz3.ab3@21304>   MOVE.w (A7),D2
0003168E <AmiBlitz3.ab3@21305>    BSR.w JL_0_B1D8
00031690 <AmiBlitz3.ab3@21306>   CMP.w (A7),D2                                            ;datamode
00031694 <AmiBlitz3.ab3@21307>    BEQ.w JL_0_C920
00031696 <AmiBlitz3.ab3@21308>   MOVE.w D2,D1
00031698 <AmiBlitz3.ab3@21309>   MOVE.w (A7),D2
0003169C <AmiBlitz3.ab3@21310>   CMP.w #$2,D2
000316A0 <AmiBlitz3.ab3@21311>    BNE.w JL_0_C8FE
000316A4 <AmiBlitz3.ab3@21312>   CMP.w #$3,D1
000316A8 <AmiBlitz3.ab3@21313>    BNE.w baddaterr
000316AE <AmiBlitz3.ab3@21314>   CMP.l #$10000,D3
000316B2 <AmiBlitz3.ab3@21315>    BCC.w baddaterr
000316B6 <AmiBlitz3.ab3@21316> BRA.w JL_0_C920
000316BA <AmiBlitz3.ab3@21319>   CMP.w #$1,D2
000316BE <AmiBlitz3.ab3@21320>    BNE.w JL_0_C91C
000316C2 <AmiBlitz3.ab3@21321>   CMP.w #$2,D1
000316C6 <AmiBlitz3.ab3@21322>    BNE.w baddaterr
000316CC <AmiBlitz3.ab3@21323>   CMP.l #$100,D3
000316D0 <AmiBlitz3.ab3@21324>    BCC.w baddaterr
000316D4 <AmiBlitz3.ab3@21325> BRA.w JL_0_C920
000316D8 <AmiBlitz3.ab3@21328> BRA.w baddaterr
000316DC <AmiBlitz3.ab3@21331>   CMP.w #$3,D2
000316E0 <AmiBlitz3.ab3@21332>   BCC.w JL_0_C930
000316E4 <AmiBlitz3.ab3@21333>   BSR.w JL_0_C1E6
000316E8 <AmiBlitz3.ab3@21334> BRA.w JL_0_C934
000316EE <AmiBlitz3.ab3@21337>   TST.b iee
000316F2 <AmiBlitz3.ab3@21338>   BEQ 'old
000316F6 <AmiBlitz3.ab3@21339>   CMP.b #5,d2
000316FA <AmiBlitz3.ab3@21340>   BNE 'old
000316FE <AmiBlitz3.ab3@21341>   Dc.l $f2006400                                           ;  fpu data write fmove.s fp0,d0
00031702 <AmiBlitz3.ab3@21345>   BSR.w JL_0_C1DE                                          ;write data >3
00031708 <AmiBlitz3.ab3@21348>   JSR reget
0003170C <AmiBlitz3.ab3@21349>   CMP.w #$2C,D0
00031710 <AmiBlitz3.ab3@21350>    BEQ.w JL_0_C8CC
00031712 <AmiBlitz3.ab3@21351>   ADDQ.w #2,A7
00031714 <AmiBlitz3.ab3@21352> RTS
00031718 <AmiBlitz3.ab3@21355>    BSR.w pdt
0003171E <AmiBlitz3.ab3@21356>   MOVE.l data2,-(A7)
00031722 <AmiBlitz3.ab3@21357>    BSR.w JL_0_C1DE
00031724 <AmiBlitz3.ab3@21358>   MOVEQ.l #$00,D1
0003172A <AmiBlitz3.ab3@21359>    JSR get1bytemain
0003172E <AmiBlitz3.ab3@21360>    BEQ.w JL_0_C9A6
00031732 <AmiBlitz3.ab3@21361>   CMP.w #$22,D0
00031736 <AmiBlitz3.ab3@21362>    BEQ.w JL_0_C988
0003173A <AmiBlitz3.ab3@21363>   CMP.w #$2C,D0
0003173E <AmiBlitz3.ab3@21364>    BEQ.w JL_0_C9A6
00031742 <AmiBlitz3.ab3@21367>    BSR.w JL_0_C210
00031744 <AmiBlitz3.ab3@21368>   ADDQ.w #1,D1
0003174A <AmiBlitz3.ab3@21369>    JSR getchar
0003174C <AmiBlitz3.ab3@21370>   TST.w D0
00031750 <AmiBlitz3.ab3@21371>    BEQ.w JL_0_C9A6
00031754 <AmiBlitz3.ab3@21372>   CMP.w #$2C,D0
00031758 <AmiBlitz3.ab3@21373>    BEQ.w JL_0_C9A6
0003175C <AmiBlitz3.ab3@21374> BRA.w JL_0_C96C
0003175E <AmiBlitz3.ab3@21378>    MOVEQ #0,d0
00031760 <AmiBlitz3.ab3@21379>    MOVE.b (a5)+,d0
00031764 <AmiBlitz3.ab3@21380>    BEQ.w notqerr2
00031768 <AmiBlitz3.ab3@21381>   CMP.w #$22,D0
0003176C <AmiBlitz3.ab3@21382>    BEQ.w JL_0_C9A2
00031770 <AmiBlitz3.ab3@21383>    BSR.w JL_0_C210
00031772 <AmiBlitz3.ab3@21384>   ADDQ.w #1,D1
00031776 <AmiBlitz3.ab3@21385> BRA.w JL_0_C988
0003177C <AmiBlitz3.ab3@21386> notqerr2 JMP notqerr
00031782 <AmiBlitz3.ab3@21388>   CLR.w instringon
00031788 <AmiBlitz3.ab3@21389>   JSR get1bytemain
0003178A <AmiBlitz3.ab3@21392>   MOVEA.l (A7)+,A0
00031790 <AmiBlitz3.ab3@21393>   MOVE.w dontwrite,D2
00031794 <AmiBlitz3.ab3@21394>    BNE.w JL_0_C9B4
00031796 <AmiBlitz3.ab3@21395>   MOVE.l D1,(A0)
0003179C <AmiBlitz3.ab3@21398>   ADDQ.l #1,data2
000317A4 <AmiBlitz3.ab3@21399>   BCLR #$0,data2+3
000317A8 <AmiBlitz3.ab3@21400>   CMP.w #$2C,D0
000317AC <AmiBlitz3.ab3@21401>    BEQ.w JL_0_C944
000317AE <AmiBlitz3.ab3@21402> RTS
000317B4 <AmiBlitz3.ab3@21406> JMP vardeclareerr
000317BA <AmiBlitz3.ab3@21409>   MOVE.w proceduremode,D1                                  ;doshared
000317BE <AmiBlitz3.ab3@21411>   BNE.w 'l1
000317C0 <AmiBlitz3.ab3@21412>   MOVE.w D1,-(A7)
000317C6 <AmiBlitz3.ab3@21413>   CLR.w proceduremode
000317CC <AmiBlitz3.ab3@21416>   LEA varbase,a2
000317D0 <AmiBlitz3.ab3@21417>   BSR.w getparameter
000317D2 <AmiBlitz3.ab3@21418>   MOVE.w d2,-(a7)
000317D8 <AmiBlitz3.ab3@21419>    JSR findvariable
000317DC <AmiBlitz3.ab3@21420>    BEQ 'checkdim
000317E2 <AmiBlitz3.ab3@21421>    LEA sharebase,a2
000317E4 <AmiBlitz3.ab3@21422>    MOVEQ #$f+4,d7
000317E8 <AmiBlitz3.ab3@21423>    BSR.w findlab                                         ;find var
000317EC <AmiBlitz3.ab3@21424>    BEQ.b dupsherr
000317F0 <AmiBlitz3.ab3@21425>    BSR addlabel
000317F4 <AmiBlitz3.ab3@21426>    CMP.b #".",d0
000317F8 <AmiBlitz3.ab3@21427>    BNE JUMP_vardeclareerr
000317FA <AmiBlitz3.ab3@21428>    MOVE.l a2,a3
00031800 <AmiBlitz3.ab3@21429>    JSR JL_0_8EB8b
00031802 <AmiBlitz3.ab3@21460>   MOVE.w (a7)+,d2
00031806 <AmiBlitz3.ab3@21461>    CMP.b #",",d0
0003180A <AmiBlitz3.ab3@21462>    BNE 'ret
00031810 <AmiBlitz3.ab3@21463>    JSR get1bytemain
00031814 <AmiBlitz3.ab3@21464> BRA 'again2
0003181A <AmiBlitz3.ab3@21467>   MOVE.w (A7)+,proceduremode
0003181C <AmiBlitz3.ab3@21468> RTS
00031822 <AmiBlitz3.ab3@21475>    CMP.w #2,6(a2)
00031826 <AmiBlitz3.ab3@21476>    BEQ 'do
0003182C <AmiBlitz3.ab3@21477>    CMP.w #$102,6(a2)
00031830 <AmiBlitz3.ab3@21478>    BEQ 'do
00031836 <AmiBlitz3.ab3@21479> JMP errormsg_declaredtwice                                 ;was BRA 'errormsg_declaredtwice_
0003183C <AmiBlitz3.ab3@21482>   LEA varbase,a0
0003183E <AmiBlitz3.ab3@21485>   MOVE.l (A0),D0                                           ;find label
00031842 <AmiBlitz3.ab3@21486>    BEQ.b 'z1
00031844 <AmiBlitz3.ab3@21487>    CMP.l d0,a2
00031848 <AmiBlitz3.ab3@21488>    BEQ 'z1
0003184A <AmiBlitz3.ab3@21489>    MOVE.l d0,a0
0003184E <AmiBlitz3.ab3@21490> BRA 'm1
00031850 <AmiBlitz3.ab3@21493>   MOVE.l (a2),d1
00031852 <AmiBlitz3.ab3@21494>     MOVE.l d1,(a0)
00031854 <AmiBlitz3.ab3@21495>     CLR.l (a2)
0003185A <AmiBlitz3.ab3@21496>     LEA sharebase,a0
0003185C <AmiBlitz3.ab3@21497>     MOVE.l (a0),(a2)
0003185E <AmiBlitz3.ab3@21498>     MOVE.l a2,(a0)
00031864 <AmiBlitz3.ab3@21499>     JSR get1bytemain
0003186A <AmiBlitz3.ab3@21500>     JSR get1bytemain
0003186E <AmiBlitz3.ab3@21501> BRA 'domore
00031876 <AmiBlitz3.ab3@21504>   MOVE.b #1,nowdeclare
00031878 <AmiBlitz3.ab3@21505>   MOVE.w D1,-(A7)
0003187E <AmiBlitz3.ab3@21506>   CLR.w proceduremode
00031882 <AmiBlitz3.ab3@21509>    BSR.w getparameter
00031884 <AmiBlitz3.ab3@21510>   MOVE.w D2,-(A7)
0003188A <AmiBlitz3.ab3@21511>   LEA firstglob,A2
0003188E <AmiBlitz3.ab3@21512>    BSR.w findvariable2
00031892 <AmiBlitz3.ab3@21513>    BNE.b JL_0_CA06
00031898 <AmiBlitz3.ab3@21516>   MOVE.b flagmask+1,D1
0003189C <AmiBlitz3.ab3@21517>   MOVE.b $7(A2),D3
0003189E <AmiBlitz3.ab3@21518>   EOR.b D3,D1
000318A2 <AmiBlitz3.ab3@21519>    BEQ.w dupsherr
000318A6 <AmiBlitz3.ab3@21520>    BSR.w findlab
000318AA <AmiBlitz3.ab3@21521>    BEQ.b JL_0_C9F0
000318AE <AmiBlitz3.ab3@21524>    BSR.w addlabel
000318B0 <AmiBlitz3.ab3@21525>   MOVE.w (A7)+,D2
000318B2 <AmiBlitz3.ab3@21526>   MOVE.l A2,-(A7)
000318B6 <AmiBlitz3.ab3@21527>    BSR.w JL_0_8E3C
000318B8 <AmiBlitz3.ab3@21528>   MOVEA.l (A7)+,A2
000318BA <AmiBlitz3.ab3@21529>   MOVEQ.l #$04,D1
000318BC <AmiBlitz3.ab3@21530>   ADDQ.w #4,A2
000318BE <AmiBlitz3.ab3@21531>   ADDQ.w #4,A3
000318C0 <AmiBlitz3.ab3@21534>     MOVE.w (A3)+,(A2)+
000318C4 <AmiBlitz3.ab3@21535>   DBF D1,JL_0_CA1A
000318CC <AmiBlitz3.ab3@21537>   BTST #$1,flagmask+1
000318D0 <AmiBlitz3.ab3@21538>    BEQ.w JL_0_CA3C
000318D6 <AmiBlitz3.ab3@21539>    JSR get1bytemain
000318DA <AmiBlitz3.ab3@21540>   CMP.w #$29,D0
000318DE <AmiBlitz3.ab3@21541>    BNE.w syntaxerrc
000318E4 <AmiBlitz3.ab3@21542>    JSR get1bytemain
000318E8 <AmiBlitz3.ab3@21545>    CMP.w #$2C,D0
000318EC <AmiBlitz3.ab3@21546>    BNE.w JL_0_CA4C
000318F2 <AmiBlitz3.ab3@21547>    JSR get1bytemain
000318F6 <AmiBlitz3.ab3@21548> BRA.w JL_0_C9DE
000318FC <AmiBlitz3.ab3@21551>   MOVE.w (A7)+,proceduremode
000318FE <AmiBlitz3.ab3@21552> RTS
00031904 <AmiBlitz3.ab3@21554> syntaxerrc JMP syntaxerr
00031908 <AmiBlitz3.ab3@21557>    BSR.w JL_0_C05C
0003190E <AmiBlitz3.ab3@21558>    JSR check_incdir                                        ; ergebnis in d2
00031914 <AmiBlitz3.ab3@21560>    LEA ptr_parameterstore,a1
00031916 <AmiBlitz3.ab3@21561>    MOVE.l d2,-(a7)
0003191C <AmiBlitz3.ab3@21562>    LEA includetemp,a0                                      ; filename in includetemp packen
0003191E <AmiBlitz3.ab3@21565>      MOVE.b (a1)+,(a0)+
00031922 <AmiBlitz3.ab3@21566>    BNE 'l4
00031928 <AmiBlitz3.ab3@21568>    LEA ptr_parameterstore,a1
0003192A <AmiBlitz3.ab3@21569>    MOVE.l a1,a0
0003192C <AmiBlitz3.ab3@21572>     TST.b (a0)+
00031930 <AmiBlitz3.ab3@21573>    BNE 'l1
00031932 <AmiBlitz3.ab3@21576>      MOVE.b -(a0),d0
00031936 <AmiBlitz3.ab3@21577>      CMP.b #":",d0
0003193A <AmiBlitz3.ab3@21578>       BEQ 'out
0003193E <AmiBlitz3.ab3@21579>      CMP.b #"/",d0
00031942 <AmiBlitz3.ab3@21580>       BEQ 'out
00031944 <AmiBlitz3.ab3@21581>      CMP.l a1,a0
00031948 <AmiBlitz3.ab3@21582>       BEQ 'out2
0003194C <AmiBlitz3.ab3@21583> BRA 'l2
0003194E <AmiBlitz3.ab3@21586>    ADDQ.l #1,a0                                            ; dateinamen vom pfad extrahiert
00031950 <AmiBlitz3.ab3@21589>    MOVEQ.l #-$01,D2
00031952 <AmiBlitz3.ab3@21592>      ADDQ.w #1,D2
00031954 <AmiBlitz3.ab3@21593>      MOVE.b (a0)+,(a1)+
00031958 <AmiBlitz3.ab3@21594>    BNE 'l3
0003195A <AmiBlitz3.ab3@21595>    CLR.b (a1)+
00031960 <AmiBlitz3.ab3@21597>    LEA ptr_parameterstore,a1
00031964 <AmiBlitz3.ab3@21598>    BSR.w findxinc                                         ;find include
00031968 <AmiBlitz3.ab3@21599>     BEQ.w 'outb
0003196A <AmiBlitz3.ab3@21601>    MOVE.w D2,-(A7)
0003196E <AmiBlitz3.ab3@21602>    BSR.w addlabel
00031970 <AmiBlitz3.ab3@21603>    MOVE.w (A7)+,D2
00031976 <AmiBlitz3.ab3@21605>    LEA ptr_parameterstore,a1
0003197C <AmiBlitz3.ab3@21606>    LEA includetemp,a0                                      ; namen in includetemp schreiben
0003197E <AmiBlitz3.ab3@21609>     MOVE.b (a0)+,(a1)+
00031982 <AmiBlitz3.ab3@21610>    BNE 'l4b
00031984 <AmiBlitz3.ab3@21612>    MOVE.l (a7)+,d2
0003198A <AmiBlitz3.ab3@21613>    LEA ptr_parameterstore,a1
0003198E <AmiBlitz3.ab3@21614> BRA.w JL_0_CB18
00031994 <AmiBlitz3.ab3@21617>    LEA ptr_parameterstore,a1
0003199A <AmiBlitz3.ab3@21618>    LEA includetemp,a0
0003199C <AmiBlitz3.ab3@21621>     MOVE.b (a0)+,(a1)+
000319A0 <AmiBlitz3.ab3@21622>    BNE 'l4b2
000319A2 <AmiBlitz3.ab3@21624>    MOVE.l (a7)+,d2
000319A8 <AmiBlitz3.ab3@21625>    LEA ptr_parameterstore,a1
000319AA <AmiBlitz3.ab3@21628> RTS
000319AE <AmiBlitz3.ab3@21632>   BSR.w JL_0_C05C                                              ; test and get the parameter (includestring)
000319B4 <AmiBlitz3.ab3@21634>   JSR check_IncBinDir                                          ; to fix the path problem in CLIMode  tomsmart1
000319BA <AmiBlitz3.ab3@21636>   MOVEA.l _dosbase,A6
000319BC <AmiBlitz3.ab3@21637>   MOVE.l D0,D7                                                 ; store Lockpointer
000319C0 <AmiBlitz3.ab3@21638>    BEQ.w error_cant_open_include                               ; no pointer => errormessage
000319C2 <AmiBlitz3.ab3@21639>   MOVE.l D7,D1                                                 ; begin get the size of the file to include
000319C8 <AmiBlitz3.ab3@21640>   MOVE.l ptr_macrobuffer_begin,D2
000319CC <AmiBlitz3.ab3@21641>    JSR _Examine(A6)
000319D2 <AmiBlitz3.ab3@21642>   MOVEA.l ptr_macrobuffer_begin,A0
000319D6 <AmiBlitz3.ab3@21643>   MOVE.l $4(A0),D0
000319DA <AmiBlitz3.ab3@21644>    BPL.w error_cant_open_include                               ; something went wrong => errormessage
000319DE <AmiBlitz3.ab3@21645>   MOVE.l $7C(A0),D3                                            ; store the size of the file to include
000319E0 <AmiBlitz3.ab3@21646>   MOVE.l D7,D1                                                 ; begin unlock the file
000319E4 <AmiBlitz3.ab3@21647>    JSR _UnLock(A6)
000319EA <AmiBlitz3.ab3@21649>   MOVE.l #ptr_parameterstore,D1                                ; begin Open and Load the file
000319F0 <AmiBlitz3.ab3@21650>   MOVE.l #HUNK_RELOC_16__MODE_OLDFILE,D2                       
000319F4 <AmiBlitz3.ab3@21651>    JSR _Open(A6)
000319F6 <AmiBlitz3.ab3@21652>   MOVE.l D0,D7
000319FA <AmiBlitz3.ab3@21653>    BEQ.w error_cant_open_include
00031A00 <AmiBlitz3.ab3@21654>   MOVE.l destpointer,D0
00031A02 <AmiBlitz3.ab3@21655>   ADD.l D3,D0
00031A08 <AmiBlitz3.ab3@21656>   CMP.l destbufferend,D0
00031A0C <AmiBlitz3.ab3@21657>    BHI.w JL_0_CAF6
00031A12 <AmiBlitz3.ab3@21658>   MOVE.l destpointer,D2
00031A14 <AmiBlitz3.ab3@21659>   MOVE.l D7,D1
00031A18 <AmiBlitz3.ab3@21660>    JSR _Read(A6)
00031A1E <AmiBlitz3.ab3@21661>   CMP.l #$FFFFFFFF,D0
00031A22 <AmiBlitz3.ab3@21662>    BEQ.w error_reading_file
00031A28 <AmiBlitz3.ab3@21663>   ADD.l D0,destpointer
00031A2C <AmiBlitz3.ab3@21664> BRA.w JL_0_CB04
00031A34 <AmiBlitz3.ab3@21667>   MOVE.w #$FFFF,dontwrite
00031A3A <AmiBlitz3.ab3@21668>   MOVE.l D0,destpointer
00031A3C <AmiBlitz3.ab3@21671>   MOVE.l D7,D1
00031A40 <AmiBlitz3.ab3@21672> JMP _Close(A6)
00031A46 <AmiBlitz3.ab3@21676> JMP illdirerr
00031A4C <AmiBlitz3.ab3@21679>   TST.w dirmode                                            ;include  open
00031A50 <AmiBlitz3.ab3@21680>    BNE.w JUMP_illdirerr
00031A54 <AmiBlitz3.ab3@21681>   BSR.w JL_0_C05C
00031A5A <AmiBlitz3.ab3@21682>   JSR check_incdir
00031A5E <AmiBlitz3.ab3@21685>   BSR.w findconstant
00031A62 <AmiBlitz3.ab3@21686>    BEQ.w alincerr
00031A68 <AmiBlitz3.ab3@21688>   LEA constantbase,A2
00031A6C <AmiBlitz3.ab3@21689>   BSR.w addhere2
00031A70 <AmiBlitz3.ab3@21690>   CLR.w $C(A2)
00031A74 <AmiBlitz3.ab3@21691>   CLR.l $4(A2)
00031A7A <AmiBlitz3.ab3@21693>   MOVE.l #ptr_parameterstore,D1
00031A7C <AmiBlitz3.ab3@21694>   MOVE.l d1,a0
00031A82 <AmiBlitz3.ab3@21695>   LEA includetemp2,a1
00031A84 <AmiBlitz3.ab3@21698>     MOVE.b (a0)+,(a1)+
00031A88 <AmiBlitz3.ab3@21699>   BNE 'l1
00031A8E <AmiBlitz3.ab3@21700>   JSR save_includename
00031A98 <AmiBlitz3.ab3@21701>   MOVE.l #0,include_process
00031AA0 <AmiBlitz3.ab3@21703>   CMP.l #$62623200,-4(a0)                                  ;.bb2
00031AA4 <AmiBlitz3.ab3@21704>   BEQ 'ok
00031AAC <AmiBlitz3.ab3@21705>   CMP.l #$61623300,-4(a0)                                  ;.ab3
00031AB0 <AmiBlitz3.ab3@21706>   BEQ 'ok_tokenize
00031AB8 <AmiBlitz3.ab3@21707>   CMP.l #$61623200,-4(a0)                                  ;.ab2
00031ABC <AmiBlitz3.ab3@21708>   BEQ 'ok_tokenize
00031AC4 <AmiBlitz3.ab3@21709>   CMP.l #$2e626200,-4(a0)                                  ;.bb files
00031AC8 <AmiBlitz3.ab3@21710>   BEQ 'ok
00031ACE <AmiBlitz3.ab3@21711> JMP errortoken                                             ;can only include
00031AD8 <AmiBlitz3.ab3@21714>    MOVE.l #-1,include_process                              ; must tokenize the include
00031ADE <AmiBlitz3.ab3@21717>   MOVE.l #HUNK_RELOC_16__MODE_OLDFILE,D2
00031AE4 <AmiBlitz3.ab3@21718>   MOVEA.l _dosbase,A6
00031AE8 <AmiBlitz3.ab3@21719>   JSR _Open(A6)
00031AEC <AmiBlitz3.ab3@21720>   MOVE.l D0,$8(A2)
00031AF0 <AmiBlitz3.ab3@21721>   BEQ.w error_cant_open_include
00031AF6 <AmiBlitz3.ab3@21722>   CLR.l includeline
00031AFA <AmiBlitz3.ab3@21723>   MOVE.l 8(a2),d1
00031AFC <AmiBlitz3.ab3@21724>   MOVE.l d3,-(a7)
00031AFE <AmiBlitz3.ab3@21725>   MOVEQ #0,d2
00031B00 <AmiBlitz3.ab3@21726>   MOVEQ #1,d3
00031B04 <AmiBlitz3.ab3@21727>   JSR _Seek(a6)                                            ; -66
00031B08 <AmiBlitz3.ab3@21728>   MOVE.l 8(a2),d1
00031B0A <AmiBlitz3.ab3@21729>   MOVEQ #0,d2
00031B0C <AmiBlitz3.ab3@21730>   MOVEQ #-1,d3
00031B10 <AmiBlitz3.ab3@21731>   JSR _Seek(a6)                                            ; -66
00031B12 <AmiBlitz3.ab3@21732>   MOVE.l (a7)+,d3
00031B14 <AmiBlitz3.ab3@21733>   ADDQ.l #4,d0
00031B1A <AmiBlitz3.ab3@21735>   MOVE.l #$10000,D1
00031B20 <AmiBlitz3.ab3@21736>   MOVEA.l _execbase,A6
00031B24 <AmiBlitz3.ab3@21739>   JSR _AllocVec(a6)
00031B28 <AmiBlitz3.ab3@21741>   MOVE.l D0,$4(A2)
00031B2C <AmiBlitz3.ab3@21742>   MOVE.l D0,$E(A2)
00031B2E <AmiBlitz3.ab3@21743>   MOVEA.l D0,A5
00031B34 <AmiBlitz3.ab3@21750>   ADDQ.w #1,ininclude                                      ;enter include
00031B3A <AmiBlitz3.ab3@21753>   LEA _include,a0
00031B3E <AmiBlitz3.ab3@21754>   MOVEM.l a0-a6/d0-d7,-(a7)
00031B44 <AmiBlitz3.ab3@21755>   LEA ptr_parameterstore,a1
00031B46 <AmiBlitz3.ab3@21758>     MOVE.b (a0)+,(a1)+
00031B4A <AmiBlitz3.ab3@21759>   BNE 'l1b
00031B4C <AmiBlitz3.ab3@21761>   MOVEQ #9,d2
00031B52 <AmiBlitz3.ab3@21762>   JSR findlabel2
00031B56 <AmiBlitz3.ab3@21763>   BNE 'd
00031B5E <AmiBlitz3.ab3@21764>   MOVE.l #1,8(a2)
00031B62 <AmiBlitz3.ab3@21765>   MOVEM.l (a7)+,a0-a6/d0-d7
00031B66 <AmiBlitz3.ab3@21766> BRA 'd2
00031B6C <AmiBlitz3.ab3@21769>   JSR addlabelhash
00031B74 <AmiBlitz3.ab3@21770>   MOVE.l #$1,$4(A2)
00031B7C <AmiBlitz3.ab3@21771>   MOVE.l #1,8(a2)
00031B80 <AmiBlitz3.ab3@21772>   MOVEM.l (a7)+,a0-a6/d0-d7
00031B86 <AmiBlitz3.ab3@21775>   LEA inctab,a0
00031B88 <AmiBlitz3.ab3@21776>   MOVEQ #0,d1
00031B8E <AmiBlitz3.ab3@21777>   MOVE.w ininclude,d1
00031B92 <AmiBlitz3.ab3@21778>   CLR.l $0(a0,d1*4)
00031B98 <AmiBlitz3.ab3@21779>   MOVEA.l passstack,A7
00031B9E <AmiBlitz3.ab3@21780> JMP AJL_0_413A
00031BA4 <AmiBlitz3.ab3@21782> JUMP_dupmacerr JMP dupmacerr
00031BA6 <AmiBlitz3.ab3@21784> coolnest:   Ds.w 1
00031BAA <AmiBlitz3.ab3@21785> macline:    Ds.l 1
00031BB4 <AmiBlitz3.ab3@21789>   MOVE.l linenumat,macline
00031BB8 <AmiBlitz3.ab3@21790>    BSR.w makename2
00031BBC <AmiBlitz3.ab3@21791>    BEQ.w JUMP_syntaxerr
00031BC2 <AmiBlitz3.ab3@21793>    CLR.b thenmode
00031BCC <AmiBlitz3.ab3@21795>    MOVE.w oldqflag,instringon
00031BD2 <AmiBlitz3.ab3@21796>   MOVEA.l lastsourcepos,A5
00031BD6 <AmiBlitz3.ab3@21797>    BSR.w findmac
00031BDA <AmiBlitz3.ab3@21798>    BEQ.w JUMP_dupmacerr
00031BDE <AmiBlitz3.ab3@21799>    BSR.w addlabel
00031BE2 <AmiBlitz3.ab3@21800>   CLR.w $A(A2)
00031BE8 <AmiBlitz3.ab3@21801>   MOVEA.l ptr_macrobuffer_begin,A0
00031BEA <AmiBlitz3.ab3@21802>   MOVEQ.l #$00,D2
00031BF0 <AmiBlitz3.ab3@21803>   CLR.w coolnest
00031BF2 <AmiBlitz3.ab3@21806>   MOVE.b (a5),d0
00031BF6 <AmiBlitz3.ab3@21807>      BEQ 'l3
00031BFA <AmiBlitz3.ab3@21808>      CMP.b #" ",d0
00031BFE <AmiBlitz3.ab3@21809>       BNE 'l2                                              ;space macro
00031C00 <AmiBlitz3.ab3@21810>       ADDQ.l #1,a5
00031C04 <AmiBlitz3.ab3@21811> BRA 'l1
00031C08 <AmiBlitz3.ab3@21814>    CMP.b #";",d0
00031C0C <AmiBlitz3.ab3@21815>       BNE 'l3
00031C0E <AmiBlitz3.ab3@21818>    MOVE.b (a5),d0
00031C12 <AmiBlitz3.ab3@21819>       BEQ 'l5
00031C16 <AmiBlitz3.ab3@21820>       BSR.w JL_0_CC98                                      ;add comment
00031C18 <AmiBlitz3.ab3@21821>       ADDQ.l #1,a5
00031C1C <AmiBlitz3.ab3@21822> BRA 'l4
00031C20 <AmiBlitz3.ab3@21825>    MOVE.b #":",d0
00031C24 <AmiBlitz3.ab3@21826>       BSR.w JL_0_CC98
00031C28 <AmiBlitz3.ab3@21827>       MOVE.b #"@",d0
00031C2C <AmiBlitz3.ab3@21828>       BSR.w JL_0_CC98
00031C34 <AmiBlitz3.ab3@21831>    MOVE.b #0,temp
00031C3C <AmiBlitz3.ab3@21832>       MOVE.b #0,thenmode
00031C42 <AmiBlitz3.ab3@21835>   JSR getcharb
00031C44 <AmiBlitz3.ab3@21836>   TST.w D0
00031C48 <AmiBlitz3.ab3@21837>    BNE.w JL_0_CBDE
00031C4C <AmiBlitz3.ab3@21838>   MOVEM.l D2/A0/A2,-(A7)
00031C52 <AmiBlitz3.ab3@21839>   CMP.w #"@@",-3(a5)
00031C56 <AmiBlitz3.ab3@21840>   BNE 'l2a
00031C5C <AmiBlitz3.ab3@21841>   JSR nextline
00031C60 <AmiBlitz3.ab3@21842>   BEQ.w JUMP_macenderr
00031C64 <AmiBlitz3.ab3@21843>   MOVEM.l (A7)+,D2/A0/A2
00031C68 <AmiBlitz3.ab3@21844> BRA.w JL_0_CBB6
00031C6E <AmiBlitz3.ab3@21847>    JSR nextline
00031C72 <AmiBlitz3.ab3@21848>    BEQ.w JUMP_macenderr
00031C76 <AmiBlitz3.ab3@21849>   MOVEM.l (A7)+,D2/A0/A2
00031C78 <AmiBlitz3.ab3@21850>   TST.w D2
00031C7C <AmiBlitz3.ab3@21851>    BEQ.w JL_0_CBB6
00031C7E <AmiBlitz3.ab3@21854>   MOVE.b (a5),d0
00031C82 <AmiBlitz3.ab3@21855>       CMP.b #" ",d0
00031C86 <AmiBlitz3.ab3@21856>       BNE 'l1
00031C88 <AmiBlitz3.ab3@21857>       ADDQ.w #1,a5
00031C8C <AmiBlitz3.ab3@21858> BRA 'l2
00031C92 <AmiBlitz3.ab3@21861>   TST.b thenmode
00031C96 <AmiBlitz3.ab3@21862>      BEQ 'l3
00031C98 <AmiBlitz3.ab3@21863>      MOVEQ #":",d0
00031C9C <AmiBlitz3.ab3@21864>      BSR.w JL_0_CC98
00031CA0 <AmiBlitz3.ab3@21865>      MOVE.w #-$7FFE,D0                                     ;write end if
00031CA4 <AmiBlitz3.ab3@21866>      BSR macputw
00031CA8 <AmiBlitz3.ab3@21867>      MOVE.w #$800b,d0
00031CAC <AmiBlitz3.ab3@21868>      BSR.w macputw
00031CB2 <AmiBlitz3.ab3@21869>      CLR.b thenmode
00031CB4 <AmiBlitz3.ab3@21872>    MOVEQ.l #$3A,D0
00031CBC <AmiBlitz3.ab3@21873>      MOVE.b #1,temp
00031CC0 <AmiBlitz3.ab3@21875> BRA.w JL_0_CC2A
00031CC4 <AmiBlitz3.ab3@21879>   BPL.w JL_0_CC2A
00031CC8 <AmiBlitz3.ab3@21880>   CMP.w #-$7FF3,D0                                         ;macro ?
00031CCC <AmiBlitz3.ab3@21881>    BNE.w JL_0_CBF4
00031CD2 <AmiBlitz3.ab3@21882>   ADDQ.w #1,coolnest
00031CD6 <AmiBlitz3.ab3@21883> BRA.w JL_0_CC22
00031CDC <AmiBlitz3.ab3@21885> JUMP_macnesterr JMP macnesterr
00031CE0 <AmiBlitz3.ab3@21888>   CMP.w #$80d7,d0                                          ;object ?
00031CE4 <AmiBlitz3.ab3@21889>     BNE 'l1x
00031CEA <AmiBlitz3.ab3@21890>     TST.b objectcount
00031CEE <AmiBlitz3.ab3@21891>     BNE JUMP_macnesterr
00031CF2 <AmiBlitz3.ab3@21894>   CMP.w #$8021,d0
00031CF6 <AmiBlitz3.ab3@21895>     BNE 'nothen
00031CFE <AmiBlitz3.ab3@21896>     MOVE.b #1,thenmode
00031D04 <AmiBlitz3.ab3@21899>   TST.b thenmode
00031D08 <AmiBlitz3.ab3@21900>         BEQ 'l1
00031D0C <AmiBlitz3.ab3@21901>    CMP.w #$8002,d0                                         ;end if
00031D10 <AmiBlitz3.ab3@21902>    BNE 'l1
00031D14 <AmiBlitz3.ab3@21903>    MOVEM.l d0/a5,-(a7)
00031D1A <AmiBlitz3.ab3@21904>    JSR get1bytemain
00031D1C <AmiBlitz3.ab3@21905>    MOVE.w d0,d1
00031D20 <AmiBlitz3.ab3@21906>    MOVEM.l (a7)+,a5/d0
00031D24 <AmiBlitz3.ab3@21907>    CMP.w #$800b,d1
00031D28 <AmiBlitz3.ab3@21908>    BNE 'l1
00031D2E <AmiBlitz3.ab3@21909>    CLR.b thenmode
00031D32 <AmiBlitz3.ab3@21912>    CMP.w #-$7FFE,D0                                        ;end ?
00031D36 <AmiBlitz3.ab3@21913>    BNE.w JL_0_CC22
00031D38 <AmiBlitz3.ab3@21914>    MOVE.l a5,-(a7)
00031D3E <AmiBlitz3.ab3@21915>    JSR get1bytemain
00031D40 <AmiBlitz3.ab3@21916>    MOVE.l (a7)+,a5
00031D42 <AmiBlitz3.ab3@21917>    TST.w d0
00031D46 <AmiBlitz3.ab3@21918>    BEQ 'doend
00031D4A <AmiBlitz3.ab3@21919>    CMP.w #":",d0
00031D4E <AmiBlitz3.ab3@21920>    BEQ 'doend
00031D52 <AmiBlitz3.ab3@21921>    CMP.w #";",d0
00031D56 <AmiBlitz3.ab3@21922>    BEQ 'doend
00031D58 <AmiBlitz3.ab3@21923>    MOVE.l a5,-(a7)
00031D5E <AmiBlitz3.ab3@21924>    JSR get1bytemain
00031D62 <AmiBlitz3.ab3@21925>    MOVE.l -1(a5),d0
00031D64 <AmiBlitz3.ab3@21926>    MOVE.l (a7)+,a5
00031D6A <AmiBlitz3.ab3@21927>    CMP.l #"noa7",d0
00031D6E <AmiBlitz3.ab3@21928>    BEQ 'doend
00031D72 <AmiBlitz3.ab3@21929> BRA 'morechar
00031D76 <AmiBlitz3.ab3@21932>   MOVE.w #$8002,D0
00031D7A <AmiBlitz3.ab3@21933>    BSR.w macputw
00031D7E <AmiBlitz3.ab3@21934> BRA JL_0_CBB6
00031D84 <AmiBlitz3.ab3@21937>   JSR get1bytemain
00031D88 <AmiBlitz3.ab3@21938>    CMP.w #-$7FF3,D0                                        ;end macro
00031D8C <AmiBlitz3.ab3@21939>    BEQ.w 'lo1
00031D90 <AmiBlitz3.ab3@21940>   CMP.w #$80d7,d0                                          ;end object
00031D94 <AmiBlitz3.ab3@21941>   BNE JL_0_CC12
00031D9A <AmiBlitz3.ab3@21942>   SUBQ.b #1,objectcount
00031DA0 <AmiBlitz3.ab3@21943>   TST.b developobject
00031DA4 <AmiBlitz3.ab3@21944>   BEQ 'lo1
00031DA8 <AmiBlitz3.ab3@21945>   BSR skiprest
00031DAA <AmiBlitz3.ab3@21946> RTS
00031DB0 <AmiBlitz3.ab3@21949>   SUBQ.w #1,coolnest
00031DB4 <AmiBlitz3.ab3@21950>    BMI.w JL_0_CC32
00031DB6 <AmiBlitz3.ab3@21953>   MOVE.w D0,-(A7)
00031DBA <AmiBlitz3.ab3@21954>   MOVE.w #$8002,D0
00031DBE <AmiBlitz3.ab3@21955>    BSR.w macputw
00031DC0 <AmiBlitz3.ab3@21956>   MOVE.w (A7)+,D0
00031DC4 <AmiBlitz3.ab3@21957> BRA.w JL_0_CC22
00031DC8 <AmiBlitz3.ab3@21960>   BSR.w macputw
00031DCC <AmiBlitz3.ab3@21961> BRA.w JL_0_CBB6
00031DD2 <AmiBlitz3.ab3@21963> JUMP_macenderr JMP macenderr
00031DD8 <AmiBlitz3.ab3@21966>     CMP.w #"@@",-1(a5)                                     ;merge lines
00031DDC <AmiBlitz3.ab3@21967>     BNE 'no
00031DE0 <AmiBlitz3.ab3@21968>      MOVEM.l D2/A0/A2,-(A7)
00031DE6 <AmiBlitz3.ab3@21969>    JSR nextline
00031DEA <AmiBlitz3.ab3@21970>    BEQ.w JUMP_macenderr
00031DEE <AmiBlitz3.ab3@21971>   MOVEM.l (A7)+,D2/A0/A2
00031DF0 <AmiBlitz3.ab3@21972>     TST.w D2
00031DF4 <AmiBlitz3.ab3@21973>    BEQ.w JL_0_CBB6
00031DF8 <AmiBlitz3.ab3@21974> BRA JL_0_CBB6
00031DFC <AmiBlitz3.ab3@21978>   BSR.w JL_0_CC98
00031E00 <AmiBlitz3.ab3@21979> BRA.w JL_0_CBB6
00031E02 <AmiBlitz3.ab3@21982>   ADDQ.w #4,A7
00031E04 <AmiBlitz3.ab3@21983>   MOVE.l A0,D0
00031E0A <AmiBlitz3.ab3@21984>   SUB.l ptr_macrobuffer_begin,D0
00031E0E <AmiBlitz3.ab3@21987>    BEQ.w JL_0_CC5E
00031E12 <AmiBlitz3.ab3@21988>   CMPI.b #":",-(A0)
00031E16 <AmiBlitz3.ab3@21989>    BNE.w JL_0_CC5E
00031E1A <AmiBlitz3.ab3@21990>   CMP.w #$1,D0
00031E1E <AmiBlitz3.ab3@21991>    BEQ.w JL_0_CC58
00031E22 <AmiBlitz3.ab3@21992>   TST.b -$1(A0)
00031E26 <AmiBlitz3.ab3@21993>    BMI.w JL_0_CC5E
00031E28 <AmiBlitz3.ab3@21996>   SUBQ.w #1,D0
00031E2C <AmiBlitz3.ab3@21997> BRA.w JL_0_CC3C
00031E30 <AmiBlitz3.ab3@22000>   MOVE.w D0,$8(A2)
00031E34 <AmiBlitz3.ab3@22001>    BEQ.w JL_0_CC8E
00031E36 <AmiBlitz3.ab3@22002>   MOVEQ.l #$01,D1
00031E3C <AmiBlitz3.ab3@22003>   MOVEA.l _execbase,A6
00031E42 <AmiBlitz3.ab3@22004>   MOVE.l mempool,a0
00031E46 <AmiBlitz3.ab3@22005>   JSR _AllocPooled(a6)
00031E48 <AmiBlitz3.ab3@22007>   MOVEA.l D0,A0
00031E4C <AmiBlitz3.ab3@22008>   MOVE.l A0,$4(A2)
00031E50 <AmiBlitz3.ab3@22009>   MOVE.w $8(A2),D1
00031E54 <AmiBlitz3.ab3@22010>    BEQ.w JL_0_CC8E
00031E56 <AmiBlitz3.ab3@22011>   SUBQ.w #1,D1
00031E5C <AmiBlitz3.ab3@22012>   MOVEA.l ptr_macrobuffer_begin,A1
00031E5E <AmiBlitz3.ab3@22015>     MOVE.b (A1)+,(A0)+
00031E62 <AmiBlitz3.ab3@22016>   DBF D1,JL_0_CC88
00031E68 <AmiBlitz3.ab3@22019> JMP get1bytemain
00031E6A <AmiBlitz3.ab3@22023>   MOVE.w D0,D1
00031E6C <AmiBlitz3.ab3@22024>   LSR.w #8,D1
00031E6E <AmiBlitz3.ab3@22025>   MOVE.b D1,(A0)+
00031E70 <AmiBlitz3.ab3@22028>   MOVEQ.l #-$01,D2
00031E72 <AmiBlitz3.ab3@22029>   MOVE.b D0,(A0)+
00031E78 <AmiBlitz3.ab3@22030>   CMPA.l ptr_macrobuffer_end,A0
00031E7C <AmiBlitz3.ab3@22031>    BCC.w macbigerr2
00031E7E <AmiBlitz3.ab3@22032> RTS
00031E84 <AmiBlitz3.ab3@22033> macbigerr2 JMP macbigerr
00031E86 <AmiBlitz3.ab3@22036>   MOVE.l d0,-(a7)
00031E88 <AmiBlitz3.ab3@22037>   MOVEQ #0,d0
00031E8E <AmiBlitz3.ab3@22038>   CLR.b skiptoggle
00031E90 <AmiBlitz3.ab3@22041>     MOVE.b (a5),d0
00031E94 <AmiBlitz3.ab3@22042>     BEQ 'l3
00031E98 <AmiBlitz3.ab3@22043>     CMP.b #";",d0
00031E9C <AmiBlitz3.ab3@22044>     BNE 'l2
00031EA4 <AmiBlitz3.ab3@22045>     MOVE.b #1,skiptoggle
00031EAA <AmiBlitz3.ab3@22048>     TST.b skiptoggle
00031EAE <AmiBlitz3.ab3@22049>     BNE 'l4
00031EB2 <AmiBlitz3.ab3@22050>     CMP.b #":",d0
00031EB6 <AmiBlitz3.ab3@22051>     BEQ 'l3
00031EB8 <AmiBlitz3.ab3@22054>     ADDQ #1,a5
00031EBC <AmiBlitz3.ab3@22055> BRA 'loop
00031EC2 <AmiBlitz3.ab3@22058>   MOVE.w d0,lastchar
00031EC4 <AmiBlitz3.ab3@22059>   MOVE.l (a7)+,d0
00031EC6 <AmiBlitz3.ab3@22060> RTS
00031ECA <AmiBlitz3.ab3@22064>   BSR.w ifchar
00031ECE <AmiBlitz3.ab3@22065>    BNE.w JUMP_syntaxerr
00031ED0 <AmiBlitz3.ab3@22066>   MOVE.w D0,D1
00031ED6 <AmiBlitz3.ab3@22067>   JSR get1bytemain
00031EDA <AmiBlitz3.ab3@22068>   BSR.w ifchar
00031EDE <AmiBlitz3.ab3@22069>    BNE.w JL_0_CCDA
00031EE0 <AmiBlitz3.ab3@22070>   ADDQ.w #1,D0
00031EE2 <AmiBlitz3.ab3@22071>   MOVE.w D0,D2
00031EE4 <AmiBlitz3.ab3@22072>   ADD.w D0,D0
00031EE6 <AmiBlitz3.ab3@22073>   ADD.w D2,D0
00031EE8 <AmiBlitz3.ab3@22074>   ADD.w D0,D1
00031EEA <AmiBlitz3.ab3@22075>   MOVE.w D1,D0
00031EEE <AmiBlitz3.ab3@22076>   ANDI.w #$3,D0
00031EF2 <AmiBlitz3.ab3@22077>   CMP.w #$3,D0
00031EF6 <AmiBlitz3.ab3@22078>    BEQ.w JUMP_syntaxerr
00031EFC <AmiBlitz3.ab3@22080>   JSR get1bytemain
00031EFE <AmiBlitz3.ab3@22083> RTS
00031F00 <AmiBlitz3.ab3@22089> thetst1:  TST.b D0
00031F02 <AmiBlitz3.ab3@22090> thetst2:  TST.w D0
00031F04 <AmiBlitz3.ab3@22091> thetst3:  TST.l D0
00031F06 <AmiBlitz3.ab3@22092> thetst4:  TST.l (A7)+                                      ;Any Length?
00031F0A <AmiBlitz3.ab3@22093> thetst5:  JSR _Reschedule(A6)
00031F0E <AmiBlitz3.ab3@22095> posbr:    BEQ.w posbr
00031F12 <AmiBlitz3.ab3@22096> negbr:    BNE.w negbr
00031F14 <AmiBlitz3.ab3@22100>   MOVEQ.l #-$01,D2
00031F18 <AmiBlitz3.ab3@22101> BRA.w JL_0_D04C
00031F1E <AmiBlitz3.ab3@22105>   CLR.l fp0addr
00031F20 <AmiBlitz3.ab3@22106>   MOVEQ.l #$01,D1                                          ;while flag
00031F22 <AmiBlitz3.ab3@22107>   MOVEQ.l #$00,D2                                          ;negate flag
00031F26 <AmiBlitz3.ab3@22108> BRA.w JL_0_D04E
00031F2C <AmiBlitz3.ab3@22112>   LEA firstrep,A2
00031F2E <AmiBlitz3.ab3@22113>   MOVEQ.l #$08,D2
00031F32 <AmiBlitz3.ab3@22114> BRA.w freeslist
00031F36 <AmiBlitz3.ab3@22118>   LEA firstsel(PC),A2
00031F38 <AmiBlitz3.ab3@22119>   MOVEQ.l #$0E,D2
00031F3A <AmiBlitz3.ab3@22124>   MOVEQ.l #$00,D3
00031F3C <AmiBlitz3.ab3@22132>   MOVE.l (A2),D0
00031F3E <AmiBlitz3.ab3@22133>   CLR.l (A2)
00031F40 <AmiBlitz3.ab3@22134>   MOVEA.l D0,A2
00031F46 <AmiBlitz3.ab3@22135>   MOVEA.l _execbase,A6
00031F4A <AmiBlitz3.ab3@22138>     CMPA.w #$0,A2
00031F4E <AmiBlitz3.ab3@22139>      BEQ.w freelist__done
00031F50 <AmiBlitz3.ab3@22140>     TST.w D3
00031F54 <AmiBlitz3.ab3@22141>      BEQ.w freelist__skip
00031F58 <AmiBlitz3.ab3@22142>     MOVEM.l D2-D3/A2,-(A7)
00031F5A <AmiBlitz3.ab3@22143>     ADDA.w D3,A2
00031F5C <AmiBlitz3.ab3@22144>     MOVE.l D4,D2
00031F60 <AmiBlitz3.ab3@22145>     BSR.w freeslist
00031F64 <AmiBlitz3.ab3@22146>     MOVEM.l (A7)+,D2-D3/A2
00031F66 <AmiBlitz3.ab3@22149>     MOVEA.l A2,A1
00031F68 <AmiBlitz3.ab3@22150>     MOVE.l D2,D0
00031F6A <AmiBlitz3.ab3@22151>     MOVEA.l (A2),A2
00031F70 <AmiBlitz3.ab3@22152>     MOVE.l mempool,a0
00031F74 <AmiBlitz3.ab3@22153>     JSR _FreePooled(A6)
00031F78 <AmiBlitz3.ab3@22154> BRA.w freelist__loop
00031F7A <AmiBlitz3.ab3@22157> RTS
00031F80 <AmiBlitz3.ab3@22160> JMP eselerr
00031F84 <AmiBlitz3.ab3@22163> firstsel:  Ds.l 1
00031F88 <AmiBlitz3.ab3@22166> selpushb:   Dc.b $02,$40,$00,$FF                           ;ANDI.W  #$00FF,D0
00031F8A <AmiBlitz3.ab3@22169> selpushw:   MOVE.w D0,-(A7)
00031F8C <AmiBlitz3.ab3@22171> selpushl:   MOVE.l D0,-(A7)
00031F90 <AmiBlitz3.ab3@22173> selpushs:   LEA $4(A7),A2                                  ;(a7)=len of string!
00031F94 <AmiBlitz3.ab3@22176> selcomb:    ANDI.w #$FF,D0
00031F96 <AmiBlitz3.ab3@22177> selcomw:    CMP.w (A7),D0
00031F98 <AmiBlitz3.ab3@22179> selcoml:    CMP.l (A7),D0
00031F9C <AmiBlitz3.ab3@22181> selbne:     BNE.w selbne
00031F9E <AmiBlitz3.ab3@22183> endsel:     ADDQ.w #8,A7
00031FA2 <AmiBlitz3.ab3@22189>   MOVE.l firstsel(PC),D0                                  
00031FA6 <AmiBlitz3.ab3@22190>    BEQ.w JUMP_eselerr
00031FA8 <AmiBlitz3.ab3@22191>   MOVEA.l D0,A2
00031FAC <AmiBlitz3.ab3@22192>    BSR.w JL_0_CDFC
00031FB2 <AmiBlitz3.ab3@22195>   MOVEA.l _execbase,A6
00031FB6 <AmiBlitz3.ab3@22198>   MOVE.l $4(A2),D0
00031FBA <AmiBlitz3.ab3@22199>    BEQ.w doendsel__done
00031FBC <AmiBlitz3.ab3@22200>   MOVEA.l D0,A3
00031FC0 <AmiBlitz3.ab3@22201>   MOVEA.l $4(A3),A0
00031FC6 <AmiBlitz3.ab3@22202>   MOVE.l destpointer,D1
00031FC8 <AmiBlitz3.ab3@22203>   SUB.l A0,D1
00031FCE <AmiBlitz3.ab3@22205>     TST.b fast
00031FD2 <AmiBlitz3.ab3@22206>     BEQ doendsel__loop_l1
00031FD8 <AmiBlitz3.ab3@22207>     MOVE.w dontwrite,D0
00031FDC <AmiBlitz3.ab3@22208>     BNE.w doendsel__skip
00031FDE <AmiBlitz3.ab3@22209>     ADDQ.l #2,d1
00031FE2 <AmiBlitz3.ab3@22210>     MOVE.l d1,-2(a0)
00031FE6 <AmiBlitz3.ab3@22211>   BRA doendsel__skip
00031FEC <AmiBlitz3.ab3@22215>   TST.w dontwrite
00031FF0 <AmiBlitz3.ab3@22216>      BNE.w doendsel__skip
00031FF6 <AmiBlitz3.ab3@22217>   CMP.l #MaxWordSgnd,D1
00031FFA <AmiBlitz3.ab3@22218>    BHI.w JUMP_cbraerr
00031FFC <AmiBlitz3.ab3@22219>   MOVE.w D1,(A0)
00032000 <AmiBlitz3.ab3@22222>   MOVE.l (A3),$4(A2)                                       ;next of me is new first
00032002 <AmiBlitz3.ab3@22223>   MOVEA.l A3,A1
00032004 <AmiBlitz3.ab3@22224>   MOVEQ.l #$08,D0
0003200A <AmiBlitz3.ab3@22225>   MOVE.l mempool,a0
0003200E <AmiBlitz3.ab3@22226>    JSR _FreePooled(A6)
00032012 <AmiBlitz3.ab3@22227> BRA.w doendsel__loop
00032018 <AmiBlitz3.ab3@22230>   JSR popselect                                            ;fix stack on select
0003201C <AmiBlitz3.ab3@22231>   MOVEA.l firstsel(PC),A1
00032022 <AmiBlitz3.ab3@22232>   MOVE.l (A1),firstsel
00032024 <AmiBlitz3.ab3@22233>   MOVEQ.l #$0E,D0
0003202A <AmiBlitz3.ab3@22234>   MOVEA.l _execbase,A6
00032030 <AmiBlitz3.ab3@22235>   MOVE.l mempool,a0
00032034 <AmiBlitz3.ab3@22236>   JSR _FreePooled(A6)
0003203A <AmiBlitz3.ab3@22237> JMP get1bytemain
0003203C <AmiBlitz3.ab3@22241>   MOVEA.l (A7)+,A1
0003203E <AmiBlitz3.ab3@22242>   SUBQ.w #8,A1
00032040 <AmiBlitz3.ab3@22243>   MOVEQ.l #$09,D0
00032042 <AmiBlitz3.ab3@22244>   ADD.l (A1),D0
00032044 <AmiBlitz3.ab3@22247>   ADDQ.w #2,A7                                             ;for runtime errs!
00032048 <AmiBlitz3.ab3@22252>   MOVE.l firstsel(PC),D0
0003204C <AmiBlitz3.ab3@22253>    BEQ.w JUMP_defaerr
0003204E <AmiBlitz3.ab3@22254>   MOVEA.l D0,A2
00032052 <AmiBlitz3.ab3@22255>   BSR.w JL_0_CE26
00032056 <AmiBlitz3.ab3@22256>   BSR.w JL_0_CDFC
0003205A <AmiBlitz3.ab3@22257>   CLR.l $8(A2)
0003205E <AmiBlitz3.ab3@22258>   MOVE.w $C(A2),D2
00032062 <AmiBlitz3.ab3@22259> BRA.w JL_0_CE5E
00032068 <AmiBlitz3.ab3@22262> JMP defaerr
0003206C <AmiBlitz3.ab3@22265>   MOVE.l $8(A2),D0
00032070 <AmiBlitz3.ab3@22266>    BEQ.w JL_0_CE24
00032072 <AmiBlitz3.ab3@22267>   MOVEA.l D0,A0
00032078 <AmiBlitz3.ab3@22268>   MOVE.l destpointer,D1
0003207A <AmiBlitz3.ab3@22269>   SUB.l A0,D1
00032080 <AmiBlitz3.ab3@22271>     TST.b fast
00032084 <AmiBlitz3.ab3@22272>     BEQ 'l1
0003208A <AmiBlitz3.ab3@22273>     TST.w dontwrite
0003208E <AmiBlitz3.ab3@22274>     BNE.w JL_0_CE24
00032090 <AmiBlitz3.ab3@22275>     ADDQ.l #2,d1
00032094 <AmiBlitz3.ab3@22276>     MOVE.l D1,-2(A0)
00032098 <AmiBlitz3.ab3@22277>   BRA JL_0_CE24
0003209E <AmiBlitz3.ab3@22281>   TST.w dontwrite
000320A2 <AmiBlitz3.ab3@22282>      BNE.w JL_0_CE24
000320A8 <AmiBlitz3.ab3@22283>    CMP.l #MaxWordSgnd,D1
000320AC <AmiBlitz3.ab3@22284>    BHI.w JUMP_cbraerr
000320AE <AmiBlitz3.ab3@22285>   MOVE.w D1,(A0)
000320B0 <AmiBlitz3.ab3@22288> RTS
000320B6 <AmiBlitz3.ab3@22291> JMP cbraerr
000320BA <AmiBlitz3.ab3@22295>   MOVE.l $8(A2),D0
000320BE <AmiBlitz3.ab3@22296>    BEQ.w JL_0_CE5C
000320C0 <AmiBlitz3.ab3@22297>   MOVEA.l D0,A3
000320C4 <AmiBlitz3.ab3@22298>   MOVE.w #$6000,D1
000320CA <AmiBlitz3.ab3@22300>    TST.b fast
000320CE <AmiBlitz3.ab3@22301>    BEQ 'l1
000320D4 <AmiBlitz3.ab3@22302>    OR.l #$ff,d1
000320D8 <AmiBlitz3.ab3@22303>    BSR writeword
000320DC <AmiBlitz3.ab3@22307>   BSR.w writeword
000320DE <AmiBlitz3.ab3@22308>   MOVEQ.l #$08,D0
000320E0 <AmiBlitz3.ab3@22309>   MOVEQ.l #$01,D1
000320E6 <AmiBlitz3.ab3@22310>   MOVEA.l _execbase,A6
000320EC <AmiBlitz3.ab3@22311>   MOVE.l mempool,a0
000320F0 <AmiBlitz3.ab3@22312>   JSR _AllocPooled(a6)
000320F2 <AmiBlitz3.ab3@22314>   MOVEA.l D0,A0
000320F6 <AmiBlitz3.ab3@22315>   MOVE.l $4(A2),(A0)
000320FA <AmiBlitz3.ab3@22316>   MOVE.l A0,$4(A2)
00032102 <AmiBlitz3.ab3@22317>   MOVE.l destpointer,$4(A0)
00032106 <AmiBlitz3.ab3@22318> BRA.w writeword
00032108 <AmiBlitz3.ab3@22321> RTS
0003210E <AmiBlitz3.ab3@22325>   TST.b debugmode
00032112 <AmiBlitz3.ab3@22326>    BEQ.w JL_0_CE7A
00032116 <AmiBlitz3.ab3@22327>   MOVE.w #$C313,D1
0003211A <AmiBlitz3.ab3@22328>   CMP.w #$3,D2
0003211E <AmiBlitz3.ab3@22329>    BCS.w JL_0_CE76
00032120 <AmiBlitz3.ab3@22330>   ADDQ.w #1,D1
00032124 <AmiBlitz3.ab3@22333> BRA.w Atokejsr
00032126 <AmiBlitz3.ab3@22336> RTS
0003212C <AmiBlitz3.ab3@22340> JMP caseerr
00032130 <AmiBlitz3.ab3@22343>   MOVE.l firstsel(PC),D0
00032134 <AmiBlitz3.ab3@22344>    BEQ.w JUMP_caseerr
00032136 <AmiBlitz3.ab3@22345>   MOVEA.l D0,A2
0003213A <AmiBlitz3.ab3@22346>    BSR.w JL_0_CE26
0003213E <AmiBlitz3.ab3@22347>    BSR.w JL_0_CDFC
00032142 <AmiBlitz3.ab3@22348>   MOVE.w $C(A2),D2
00032144 <AmiBlitz3.ab3@22349>   MOVE.w D2,-(A7)
00032148 <AmiBlitz3.ab3@22350>    BSR.w JL_0_CE5E
0003214A <AmiBlitz3.ab3@22351>   MOVE.w (A7),D2
0003214E <AmiBlitz3.ab3@22352>    BSR.w bakeval
00032150 <AmiBlitz3.ab3@22353>   MOVE.w (A7)+,D2
00032154 <AmiBlitz3.ab3@22354>   LEA selcomb(PC),A0
00032158 <AmiBlitz3.ab3@22355>   LEA selcombf(PC),A1
0003215C <AmiBlitz3.ab3@22356>   CMP.w #$1,D2
00032160 <AmiBlitz3.ab3@22357>    BEQ.w JL_0_CED8
00032164 <AmiBlitz3.ab3@22358>   LEA selcomw(PC),A0
00032168 <AmiBlitz3.ab3@22359>   CMP.w #$2,D2
0003216C <AmiBlitz3.ab3@22360>    BEQ.w JL_0_CED8
00032170 <AmiBlitz3.ab3@22361>   LEA selcoml(PC),A0
00032174 <AmiBlitz3.ab3@22362>   LEA selcomlf(PC),A1
00032178 <AmiBlitz3.ab3@22363>   CMP.w #$7,D2
0003217C <AmiBlitz3.ab3@22364>    BCS.w JL_0_CED8
00032180 <AmiBlitz3.ab3@22366>   MOVE.w #$CE01,D1
00032184 <AmiBlitz3.ab3@22367>    BSR.w Atokejsr
00032188 <AmiBlitz3.ab3@22368> BRA.w JL_0_CEDC
0003218C <AmiBlitz3.ab3@22371>   BSR.w pokecode
00032190 <AmiBlitz3.ab3@22374>   MOVE.w selbne(PC),D1
00032196 <AmiBlitz3.ab3@22376>     TST.b fast
0003219A <AmiBlitz3.ab3@22377>     BEQ 'l1
000321A0 <AmiBlitz3.ab3@22378>     ORI.l #$ff,d1
000321A4 <AmiBlitz3.ab3@22379>     BSR writeword
000321A8 <AmiBlitz3.ab3@22382>   BSR.w writeword
000321AC <AmiBlitz3.ab3@22383>   MOVEA.l firstsel(PC),A0
000321B4 <AmiBlitz3.ab3@22384>   MOVE.l destpointer,$8(A0)
000321B8 <AmiBlitz3.ab3@22385> BRA.w writeword
000321BC <AmiBlitz3.ab3@22389> pcchk:      Dc.b $3F,$3C,$73,$45                           ;MOVE.W  #$7345,-(A7)   ;#"sE",-(a7) org source
000321BE <AmiBlitz3.ab3@22390> clrst:      Dc.b $42,$A7                                   ;CLR.L   -(A7)
000321C2 <AmiBlitz3.ab3@22393> sellineat:  Ds.l 1
000321C8 <AmiBlitz3.ab3@22399>   TST.b debugmode
000321CC <AmiBlitz3.ab3@22400>    BEQ.w JL_0_CF0E
000321D0 <AmiBlitz3.ab3@22401>   MOVE.l pcchk(PC),D1                                      ;move #"sE",-(a7)
000321D4 <AmiBlitz3.ab3@22402>    BSR.w writelong
000321DE <AmiBlitz3.ab3@22405>   MOVE.l linenumat,sellineat
000321E8 <AmiBlitz3.ab3@22407>    MOVE.l destpointer,pushpc
000321F2 <AmiBlitz3.ab3@22408>   MOVE.l hunkoffsetbase,pushoff
000321F4 <AmiBlitz3.ab3@22409>   MOVEQ.l #$00,D2
000321F8 <AmiBlitz3.ab3@22410>    BSR.w bakevalu                                          ;Evaluate
000321FC <AmiBlitz3.ab3@22411>    BSR.w JL_0_B5D2
00032200 <AmiBlitz3.ab3@22412>   CMP.w #$7,D2
00032204 <AmiBlitz3.ab3@22413>    BNE.w JL_0_CF36
00032208 <AmiBlitz3.ab3@22414>   MOVE.w clrst(PC),D1
0003220C <AmiBlitz3.ab3@22415>    BSR.w writeword
00032210 <AmiBlitz3.ab3@22418>    BSR.w JL_0_B63C
00032214 <AmiBlitz3.ab3@22419>   LEA selpushb(PC),A0
00032218 <AmiBlitz3.ab3@22420>   LEA selpushbf(PC),A1
0003221C <AmiBlitz3.ab3@22421>   CMP.w #$1,D2
00032220 <AmiBlitz3.ab3@22422>    BEQ.w JL_0_CF88
00032224 <AmiBlitz3.ab3@22423>   LEA selpushw(PC),A0
00032228 <AmiBlitz3.ab3@22424>   CMP.w #$2,D2
0003222C <AmiBlitz3.ab3@22425>    BEQ.w JL_0_CF88
00032230 <AmiBlitz3.ab3@22426>   LEA selpushl(PC),A0
00032234 <AmiBlitz3.ab3@22427>   LEA selpushlf(PC),A1
00032238 <AmiBlitz3.ab3@22428>   CMP.w #$7,D2
0003223C <AmiBlitz3.ab3@22429>    BCS.w JL_0_CF88
00032242 <AmiBlitz3.ab3@22431>   MOVE.w moved0a3,D1                                       ;d0 to a3!
00032246 <AmiBlitz3.ab3@22432>    BSR.w writeword
0003224A <AmiBlitz3.ab3@22433>   LEA selpushs(PC),A0
0003224E <AmiBlitz3.ab3@22434>   LEA selpushsf(PC),A1
00032252 <AmiBlitz3.ab3@22435>    BSR.w pokecode
00032256 <AmiBlitz3.ab3@22436>   MOVE.w #$C701,D1
0003225A <AmiBlitz3.ab3@22437>    BSR.w Atokejsr
0003225E <AmiBlitz3.ab3@22438> BRA.w JL_0_CF8C
00032262 <AmiBlitz3.ab3@22441>   BSR.w pokecode
00032264 <AmiBlitz3.ab3@22444>   MOVEQ.l #$0E,D0
00032266 <AmiBlitz3.ab3@22445>   MOVEQ.l #$01,D1
0003226C <AmiBlitz3.ab3@22446>   MOVEA.l _execbase,A6
00032272 <AmiBlitz3.ab3@22448>   MOVE.l mempool,a0
00032276 <AmiBlitz3.ab3@22449>   JSR _AllocPooled(a6)
00032278 <AmiBlitz3.ab3@22450>   MOVEA.l D0,A0
0003227C <AmiBlitz3.ab3@22451>   MOVE.l firstsel(PC),(A0)
00032282 <AmiBlitz3.ab3@22452>   MOVE.l A0,firstsel
00032286 <AmiBlitz3.ab3@22453>   CLR.l $4(A0)
0003228A <AmiBlitz3.ab3@22454>   CLR.l $8(A0)
0003228E <AmiBlitz3.ab3@22455>   MOVE.w D2,$C(A0)
00032290 <AmiBlitz3.ab3@22456> RTS
00032296 <AmiBlitz3.ab3@22460>   MOVE.l firstrep,D0
0003229A <AmiBlitz3.ab3@22461>    BEQ.w JUMP_unterr1
0003229E <AmiBlitz3.ab3@22462>   MOVE.w #$6000,D1
000322A2 <AmiBlitz3.ab3@22463>   BSR.w writeword
000322A4 <AmiBlitz3.ab3@22464>   MOVEA.l D0,A0
000322A8 <AmiBlitz3.ab3@22465>   MOVE.l $4(A0),D1
000322AE <AmiBlitz3.ab3@22466>   SUB.l destpointer,D1
000322B0 <AmiBlitz3.ab3@22467>   TST.w D1
000322B4 <AmiBlitz3.ab3@22468>    BPL.w JUMP_unterr2
000322B8 <AmiBlitz3.ab3@22469>   BSR.w writeword
000322BE <AmiBlitz3.ab3@22470>   MOVEA.l _execbase,A6
000322C2 <AmiBlitz3.ab3@22471> BRA.w JL_0_D036
000322C8 <AmiBlitz3.ab3@22474> JMP unterr2
000322CE <AmiBlitz3.ab3@22477> JMP unterr1
000322D4 <AmiBlitz3.ab3@22481>   MOVE.l firstrep,D0
000322D8 <AmiBlitz3.ab3@22482>    BEQ.w JUMP_unterr1
000322DC <AmiBlitz3.ab3@22483>   BSR.w do_if
000322E2 <AmiBlitz3.ab3@22484>   JSR reget
000322E6 <AmiBlitz3.ab3@22485>    BNE.w JUMP_syntaxerr
000322EC <AmiBlitz3.ab3@22486>   MOVE.w dontwrite,D1
000322F0 <AmiBlitz3.ab3@22487>    BNE.w JL_0_D020
000322F6 <AmiBlitz3.ab3@22488>   MOVEA.l firstrep,A0
000322FC <AmiBlitz3.ab3@22489>   MOVEA.l destpointer,A1
00032302 <AmiBlitz3.ab3@22491>     TST.b fast
00032306 <AmiBlitz3.ab3@22492>     BEQ 'l1
00032308 <AmiBlitz3.ab3@22493>     SUBQ.w #4,a1
0003230C <AmiBlitz3.ab3@22494>     MOVE.l $4(A0),D2
0003230E <AmiBlitz3.ab3@22495>     SUB.l A1,D2
00032310 <AmiBlitz3.ab3@22496>     MOVE.l d2,(a1)
00032314 <AmiBlitz3.ab3@22497>   BRA JL_0_D020
00032316 <AmiBlitz3.ab3@22501>   SUBQ.w #2,A1
0003231A <AmiBlitz3.ab3@22502>   MOVE.l $4(A0),D2
0003231C <AmiBlitz3.ab3@22503>   SUB.l A1,D2
0003231E <AmiBlitz3.ab3@22504>   TST.w D2
00032322 <AmiBlitz3.ab3@22505>    BPL.w JUMP_unterr2
00032324 <AmiBlitz3.ab3@22506>   MOVE.w D2,(A1)
0003232A <AmiBlitz3.ab3@22509>   MOVEA.l firstiff,A1
00032330 <AmiBlitz3.ab3@22510>   MOVE.l (A1),firstiff
00032332 <AmiBlitz3.ab3@22511>   MOVEQ.l #$0E,D0
00032338 <AmiBlitz3.ab3@22512>   MOVEA.l _execbase,A6
0003233E <AmiBlitz3.ab3@22513>   MOVE.l mempool,a0
00032342 <AmiBlitz3.ab3@22514>   JSR _FreePooled(A6)
00032348 <AmiBlitz3.ab3@22517>   MOVEA.l firstrep,A1
0003234E <AmiBlitz3.ab3@22518>   MOVE.l (A1),firstrep
00032350 <AmiBlitz3.ab3@22519>   MOVEQ.l #$08,D0
00032356 <AmiBlitz3.ab3@22520>   MOVE.l mempool,a0
0003235A <AmiBlitz3.ab3@22521> JMP _FreePooled(A6)
0003235E <AmiBlitz3.ab3@22524> iflineat:   Ds.l 1
00032360 <AmiBlitz3.ab3@22528>   MOVEQ.l #$00,D2
00032366 <AmiBlitz3.ab3@22529>   TST.b fast
0003236A <AmiBlitz3.ab3@22530>   BEQ 'l1
00032372 <AmiBlitz3.ab3@22531>   MOVE.b #1,nostringopt
0003237A <AmiBlitz3.ab3@22532>   MOVE.b #1,iniffcommand
0003237C <AmiBlitz3.ab3@22536>   MOVEQ.l #$00,D1
0003237E <AmiBlitz3.ab3@22539>   MOVE.w D1,-(A7)
00032384 <AmiBlitz3.ab3@22540>   MOVE.l destpointer,-(A7)
00032386 <AmiBlitz3.ab3@22541>   MOVE.w D2,-(A7)
00032390 <AmiBlitz3.ab3@22542>   MOVE.l linenumat,iflineat
00032392 <AmiBlitz3.ab3@22543>   MOVEQ.l #$00,D2
0003239C <AmiBlitz3.ab3@22544>   MOVE.b optistring,optistring2
000323A4 <AmiBlitz3.ab3@22545>   MOVE.b #1,optistring
000323A8 <AmiBlitz3.ab3@22546>   BSR.w bakevalu
000323B2 <AmiBlitz3.ab3@22547>   MOVE.b optistring2,optistring
000323B6 <AmiBlitz3.ab3@22548>   CMP.w #$5,D2
000323BA <AmiBlitz3.ab3@22549>    BEQ.w JL_0_D09C
000323BE <AmiBlitz3.ab3@22550>   MOVE.w thetst1(PC),D1
000323C2 <AmiBlitz3.ab3@22551>   CMP.w #$1,D2
000323C6 <AmiBlitz3.ab3@22552>    BEQ.w writebranchcode
000323CA <AmiBlitz3.ab3@22553>   MOVE.w thetst2(PC),D1
000323CE <AmiBlitz3.ab3@22554>   CMP.w #$2,D2
000323D2 <AmiBlitz3.ab3@22555>    BEQ.w writebranchcode
000323D6 <AmiBlitz3.ab3@22556>   MOVE.w thetst4(PC),D1
000323DA <AmiBlitz3.ab3@22557>   CMP.w #$7,D2
000323DE <AmiBlitz3.ab3@22558>    BEQ.w writebranchcode
000323E2 <AmiBlitz3.ab3@22559>   MOVE.w thetst3(PC),D1
000323E6 <AmiBlitz3.ab3@22560> BRA.w writebranchcode
000323EC <AmiBlitz3.ab3@22563>   TST.b fpu
000323F0 <AmiBlitz3.ab3@22564>   BEQ 'dofpu
000323F6 <AmiBlitz3.ab3@22565>   MOVE.l #$f200003a,d1
000323FA <AmiBlitz3.ab3@22566>   BSR writelong
000323FE <AmiBlitz3.ab3@22567>   MOVE.w #$f2c1,d1
00032402 <AmiBlitz3.ab3@22568>   BSR writeword
00032406 <AmiBlitz3.ab3@22569>   BSR writelong
00032408 <AmiBlitz3.ab3@22570>   ADDQ.l #2,a7
0003240C <AmiBlitz3.ab3@22571> BRA.w br2
00032410 <AmiBlitz3.ab3@22574>    MOVE.w #$C900,D1
00032414 <AmiBlitz3.ab3@22575>    BSR.w Atokejsr
00032418 <AmiBlitz3.ab3@22576>   MOVE.l thetst5(PC),D1
0003241C <AmiBlitz3.ab3@22577>    BSR.w writelong
00032420 <AmiBlitz3.ab3@22578> BRA.w JL_0_D0B4
00032426 <AmiBlitz3.ab3@22582>          CLR.b iniffcommand
0003242C <AmiBlitz3.ab3@22583>          TST.b fast                                        ;branchcode
00032430 <AmiBlitz3.ab3@22584>          BEQ b6
00032436 <AmiBlitz3.ab3@22585>          TST.b fpu
0003243A <AmiBlitz3.ab3@22586>          BEQ 'nofpu
00032440 <AmiBlitz3.ab3@22590>           MOVE.l destpointer,a0
00032446 <AmiBlitz3.ab3@22591>          SUB.l load_var_addr,a0
0003244C <AmiBlitz3.ab3@22592>          CMP.l #4,a0
00032450 <AmiBlitz3.ab3@22593>          BEQ 'nofpu
00032458 <AmiBlitz3.ab3@22594>          CMP.l #$f2400014,-4(a4)                           ;<
0003245C <AmiBlitz3.ab3@22595>          BNE 'nolt
00032462 <AmiBlitz3.ab3@22596>          SUBQ.l #2,destpointer
00032468 <AmiBlitz3.ab3@22597>          MOVE.w #$f293,-4(a4)                              ;
0003246C <AmiBlitz3.ab3@22598> BRA 'brf
00032474 <AmiBlitz3.ab3@22601>   CMP.l #$f2400015,-4(a4)                                  ;<=
00032478 <AmiBlitz3.ab3@22602>          BNE 'nole
0003247E <AmiBlitz3.ab3@22603>          SUBQ.l #2,destpointer
00032484 <AmiBlitz3.ab3@22604>          MOVE.w #$f292,-4(a4)
00032488 <AmiBlitz3.ab3@22605> BRA 'brf
00032490 <AmiBlitz3.ab3@22608>   CMP.l #$f2400013,-4(a4)                                  ;=>
00032494 <AmiBlitz3.ab3@22609>          BNE 'noge
0003249A <AmiBlitz3.ab3@22610>          SUBQ.l #2,destpointer
000324A0 <AmiBlitz3.ab3@22611>          MOVE.w #$f294,-4(a4)
000324A4 <AmiBlitz3.ab3@22612> BRA 'brf
000324AC <AmiBlitz3.ab3@22615>   CMP.l #$f2400012,-4(a4)                                  ;>
000324B0 <AmiBlitz3.ab3@22616>          BNE 'nogt
000324B6 <AmiBlitz3.ab3@22617>          SUBQ.l #2,destpointer
000324BC <AmiBlitz3.ab3@22618>          MOVE.w #$f295,-4(a4)
000324C0 <AmiBlitz3.ab3@22619> BRA 'brf
000324C8 <AmiBlitz3.ab3@22622>   CMP.l #$f2400001,-4(a4)                                  ;=
000324CC <AmiBlitz3.ab3@22623>          BNE 'noeq
000324D2 <AmiBlitz3.ab3@22624>          SUBQ.l #2,destpointer
000324D8 <AmiBlitz3.ab3@22625>          MOVE.w #$f28e,-4(a4)
000324DC <AmiBlitz3.ab3@22626> BRA 'brf
000324E4 <AmiBlitz3.ab3@22629>   CMP.l #$f240000e,-4(a4)                                  ;<>
000324E8 <AmiBlitz3.ab3@22630>          BNE 'none
000324EE <AmiBlitz3.ab3@22631>          SUBQ.l #2,destpointer
000324F4 <AmiBlitz3.ab3@22632>          MOVE.w #$f281,-4(a4)
000324F6 <AmiBlitz3.ab3@22635>   ADDQ.l #2,a7
000324FC <AmiBlitz3.ab3@22637>     TST.b fast
00032500 <AmiBlitz3.ab3@22638>     BEQ 'l1
00032506 <AmiBlitz3.ab3@22639>     OR.b #$40,-3(a4)
0003250A <AmiBlitz3.ab3@22640>     BSR writeword
0003250E <AmiBlitz3.ab3@22644>  BSR writeword
00032512 <AmiBlitz3.ab3@22645> BRA.s br2
00032518 <AmiBlitz3.ab3@22649>   MOVE.l destpointer,a0
0003251E <AmiBlitz3.ab3@22650>          SUB.l load_var_addr,a0
00032524 <AmiBlitz3.ab3@22651>          CMP.l #4,a0
00032528 <AmiBlitz3.ab3@22652>          BEQ JL_0_D0B4
0003252E <AmiBlitz3.ab3@22653>          CMP.w #$4eb9,-6(a4)
00032532 <AmiBlitz3.ab3@22654>          BEQ b6
00032538 <AmiBlitz3.ab3@22655>          CMP.w #$5ec0,-2(a4)                               ;>
0003253C <AmiBlitz3.ab3@22656>      BNE.s 'lb1
00032542 <AmiBlitz3.ab3@22657>          MOVE.w #$6f00,-2(a4)                              ;ble
00032546 <AmiBlitz3.ab3@22658> BRA.s br
0003254C <AmiBlitz3.ab3@22661>  CMP.w #$5dc0,-2(a4)                                       ;<
00032550 <AmiBlitz3.ab3@22662>   BNE.s 'lb2
00032556 <AmiBlitz3.ab3@22663>          MOVE.w #$6c00,-2(a4)                              ;bge
0003255A <AmiBlitz3.ab3@22664> BRA.s br
00032560 <AmiBlitz3.ab3@22667>   CMP.w #$57c0,-2(a4)                                      ;=
00032564 <AmiBlitz3.ab3@22668>   BNE.s 'lb3
0003256A <AmiBlitz3.ab3@22669>          MOVE.w #$6600,-2(a4)                              ;bne
0003256E <AmiBlitz3.ab3@22670> BRA.s br
00032574 <AmiBlitz3.ab3@22673>   CMP.w #$56c0,-2(a4)                                      ;<>
00032578 <AmiBlitz3.ab3@22674>   BNE.s 'lb4
0003257E <AmiBlitz3.ab3@22675>          MOVE.w #$6700,-2(a4)                              ;beq
00032582 <AmiBlitz3.ab3@22676> BRA.s br
00032588 <AmiBlitz3.ab3@22679>   CMP.w #$5cc0,-2(a4)                                      ;>=
0003258C <AmiBlitz3.ab3@22680>   BNE.s 'lb5
00032592 <AmiBlitz3.ab3@22681>          MOVE.w #$6d00,-2(a4)                              ;blt
00032596 <AmiBlitz3.ab3@22682> BRA.s br
0003259C <AmiBlitz3.ab3@22685>   CMP.w #$5fc0,-2(a4)                                      ;<=
000325A0 <AmiBlitz3.ab3@22686>         BNE.s b6
000325A6 <AmiBlitz3.ab3@22687>          MOVE.w #$6e00,-2(a4)                              ;bgt
000325A8 <AmiBlitz3.ab3@22690>   TST.w (a7)+
000325AE <AmiBlitz3.ab3@22692>         TST.b fast
000325B2 <AmiBlitz3.ab3@22693>         BEQ 'l1
000325B8 <AmiBlitz3.ab3@22694>         OR.b #$ff,-1(a4)                                   ;long branches
000325BC <AmiBlitz3.ab3@22695>         BSR writeword
000325C0 <AmiBlitz3.ab3@22699>         BSR writeword
000325C4 <AmiBlitz3.ab3@22700> BRA.s br2
000325C8 <AmiBlitz3.ab3@22703>   BSR.w writeword
000325CC <AmiBlitz3.ab3@22706>   MOVE.l posbr(PC),D1
000325CE <AmiBlitz3.ab3@22707>   TST.w (A7)+
000325D2 <AmiBlitz3.ab3@22708>    BEQ.w JL_0_D0C2
000325D6 <AmiBlitz3.ab3@22709>   MOVE.l negbr(PC),D1
000325DC <AmiBlitz3.ab3@22712>   TST.b fast
000325E0 <AmiBlitz3.ab3@22713>            BEQ 'l1
000325E6 <AmiBlitz3.ab3@22714>            OR.l #$00ff0000,d1
000325EA <AmiBlitz3.ab3@22715>            BSR writelong
000325EE <AmiBlitz3.ab3@22716>            BSR writeword
000325F2 <AmiBlitz3.ab3@22717> BRA br2
000325F6 <AmiBlitz3.ab3@22720>   BSR.w writelong
000325F8 <AmiBlitz3.ab3@22723>  MOVEQ.l #$0E,D0
000325FA <AmiBlitz3.ab3@22724>   MOVEQ.l #$01,D1
00032600 <AmiBlitz3.ab3@22725>   MOVEA.l _execbase,A6
00032606 <AmiBlitz3.ab3@22727>   MOVE.l mempool,a0
0003260A <AmiBlitz3.ab3@22728>   JSR _AllocPooled(a6)
0003260C <AmiBlitz3.ab3@22729>   MOVEA.l D0,A0
00032612 <AmiBlitz3.ab3@22730>   MOVE.l firstiff,(A0)
00032618 <AmiBlitz3.ab3@22731>   MOVE.l A0,firstiff
0003261C <AmiBlitz3.ab3@22732>   MOVE.l (A7)+,$4(A0)
00032624 <AmiBlitz3.ab3@22733>   MOVE.l destpointer,$8(A0)
00032628 <AmiBlitz3.ab3@22734>   MOVE.w (A7)+,$C(A0)
0003262E <AmiBlitz3.ab3@22735>    JSR reget
00032632 <AmiBlitz3.ab3@22736>    BEQ.w JL_0_D10C
00032638 <AmiBlitz3.ab3@22737>   BSET #$7,$C(A0)
00032642 <AmiBlitz3.ab3@22741>   MOVE.w oldqflag,instringon
00032648 <AmiBlitz3.ab3@22742>   MOVEA.l lastsourcepos,A5
00032650 <AmiBlitz3.ab3@22743>   MOVE.w #$003A,lastchar
00032652 <AmiBlitz3.ab3@22746> RTS
00032656 <AmiBlitz3.ab3@22750>   CMP.w #$1,D0
0003265A <AmiBlitz3.ab3@22751>    BLT.w JL_0_D128
0003265E <AmiBlitz3.ab3@22752>   CMP.w #$0,D0
00032662 <AmiBlitz3.ab3@22753>    BGT.w JL_0_D128
00032664 <AmiBlitz3.ab3@22754>   ADD.w D0,D0
00032666 <AmiBlitz3.ab3@22755>   ADD.w D0,D0
0003266A <AmiBlitz3.ab3@22756>   MOVEA.l JL_0_D128(PC,D0.W),A0
0003266C <AmiBlitz3.ab3@22759> JMP (A0)
00032670 <AmiBlitz3.ab3@22762> BRA.w JL_0_D128
00032674 <AmiBlitz3.ab3@22766>   CMP.w #$1,D0
00032678 <AmiBlitz3.ab3@22767>    BLT.w JL_0_D146
0003267C <AmiBlitz3.ab3@22768>   CMP.w #$0,D0
00032680 <AmiBlitz3.ab3@22769>    BGT.w JL_0_D146
00032682 <AmiBlitz3.ab3@22770>   ADD.w D0,D0
00032684 <AmiBlitz3.ab3@22771>   ADD.w D0,D0
00032688 <AmiBlitz3.ab3@22772>   MOVEA.l JL_0_D146(PC,D0.W),A0
0003268A <AmiBlitz3.ab3@22775>   JSR (A0)
0003268E <AmiBlitz3.ab3@22778> BRA.w JL_0_D146
00032692 <AmiBlitz3.ab3@22782>   CMP.w #$1,D0
00032696 <AmiBlitz3.ab3@22783>    BLT.w JL_0_D168
0003269A <AmiBlitz3.ab3@22784>   CMP.w #$0,D0
0003269E <AmiBlitz3.ab3@22785>    BGT.w JL_0_D168
000326A0 <AmiBlitz3.ab3@22786>   ADD.w D0,D0
000326A2 <AmiBlitz3.ab3@22787>   ADD.w D0,D0
000326A6 <AmiBlitz3.ab3@22788>   MOVEA.l JL_0_D168(PC,D0.W),A0
000326AA <AmiBlitz3.ab3@22791>   MOVE.w #$6753,-(A7)                                      ;#'gS' ;for runtime error checking!
000326AC <AmiBlitz3.ab3@22794>    JSR (A0)
000326B0 <AmiBlitz3.ab3@22797> BRA.w JL_0_D168
000326B2 <AmiBlitz3.ab3@22800> labcnt:   Ds.w 1
000326B4 <AmiBlitz3.ab3@22807>   MOVEQ.l #$02,D2
000326B8 <AmiBlitz3.ab3@22808>    BSR.w bakeval
000326BC <AmiBlitz3.ab3@22809>   LEA JL_0_D10E(PC),A0
000326C0 <AmiBlitz3.ab3@22810>   LEA JL_0_D12C(PC),A1
000326C4 <AmiBlitz3.ab3@22811>   MOVE.w #$001A,D1
000326C8 <AmiBlitz3.ab3@22812>   CMP.w #-$7FFB,D0
000326CC <AmiBlitz3.ab3@22813>    BEQ.w JL_0_D1B6
000326D0 <AmiBlitz3.ab3@22814>   CMP.w #-$7FFA,D0
000326D4 <AmiBlitz3.ab3@22815>    BNE.w JUMP_syntaxerr
000326D8 <AmiBlitz3.ab3@22816>   LEA JL_0_D12C(PC),A0
000326DC <AmiBlitz3.ab3@22817>   LEA JL_0_D14A(PC),A1
000326E0 <AmiBlitz3.ab3@22818>   MOVE.w #$001A,D1
000326E6 <AmiBlitz3.ab3@22819>   TST.b debugmode
000326EA <AmiBlitz3.ab3@22820>    BEQ.b JL_0_D1B6
000326F0 <AmiBlitz3.ab3@22821>    JSR chkstak
000326F4 <AmiBlitz3.ab3@22822>   LEA JL_0_D14A(PC),A0
000326F8 <AmiBlitz3.ab3@22823>   LEA labcnt(PC),A1
000326FC <AmiBlitz3.ab3@22824>   MOVE.w #$001E,D1
000326FE <AmiBlitz3.ab3@22827>   MOVE.w D1,-(A7)
00032704 <AmiBlitz3.ab3@22828>   MOVE.l destpointer,-(A7)                                 ;for when we know number of labels!
00032708 <AmiBlitz3.ab3@22829>    BSR.w pokecode
0003270E <AmiBlitz3.ab3@22830>   CLR.w labcnt
00032714 <AmiBlitz3.ab3@22835>    JSR get1bytemain
0003271A <AmiBlitz3.ab3@22836>   SUBQ.l #2,destpointer                                    ;for makealab!
0003271E <AmiBlitz3.ab3@22837>    BSR.w JL_0_AE22
00032724 <AmiBlitz3.ab3@22838>   ADDQ.l #2,destpointer
0003272A <AmiBlitz3.ab3@22839>    JSR addoff
0003272E <AmiBlitz3.ab3@22840>   MOVE.l $8(A2),D1
00032732 <AmiBlitz3.ab3@22841>    BSR.w writelong
00032738 <AmiBlitz3.ab3@22842>   ADDQ.w #1,labcnt
0003273E <AmiBlitz3.ab3@22843>    JSR reget
00032742 <AmiBlitz3.ab3@22844>   CMP.w #$2C,D0
00032746 <AmiBlitz3.ab3@22845>    BEQ.w JL_0_D1C8
00032748 <AmiBlitz3.ab3@22846>   MOVEA.l (A7)+,A0
0003274A <AmiBlitz3.ab3@22847>   MOVE.w (A7)+,D2
00032750 <AmiBlitz3.ab3@22848>   MOVE.w dontwrite,D1
00032754 <AmiBlitz3.ab3@22849>    BNE.w JL_0_D21A
00032758 <AmiBlitz3.ab3@22850>   MOVE.w labcnt(PC),D1
0003275C <AmiBlitz3.ab3@22851>   MOVE.w D1,$A(A0)
0003275E <AmiBlitz3.ab3@22852>   ADD.w D1,D1
00032760 <AmiBlitz3.ab3@22853>   ADD.w D1,D1
00032762 <AmiBlitz3.ab3@22854>   ADDQ.w #2,D1
00032766 <AmiBlitz3.ab3@22855>   MOVE.w D1,$2(A0,D2.W)
00032768 <AmiBlitz3.ab3@22858> RTS
0003276E <AmiBlitz3.ab3@22862>   TST.b debugmode
00032772 <AmiBlitz3.ab3@22863>    BEQ.w JL_0_D236
00032778 <AmiBlitz3.ab3@22864>    JSR chkstak
0003277E <AmiBlitz3.ab3@22865>   MOVE.l AL_0_D162,D1
00032782 <AmiBlitz3.ab3@22866>    BSR.w writelong
00032788 <AmiBlitz3.ab3@22868>   MOVE.w gosubcode,D1
0003278C <AmiBlitz3.ab3@22869> BRA.w JL_0_D246
00032792 <AmiBlitz3.ab3@22873>   MOVE.w gotocode,D1
00032794 <AmiBlitz3.ab3@22876>   MOVE.w D1,-(A7)
00032798 <AmiBlitz3.ab3@22877>    BSR.w JL_0_AE22
0003279A <AmiBlitz3.ab3@22878>   MOVE.w (A7)+,D1
0003279E <AmiBlitz3.ab3@22879>    BSR.w writeword
000327A4 <AmiBlitz3.ab3@22880>    JSR addoff
000327A8 <AmiBlitz3.ab3@22881>   MOVE.l $8(A2),D1
000327AC <AmiBlitz3.ab3@22882> BRA.w writelong
000327B2 <AmiBlitz3.ab3@22886>   MOVE.w proceduremode,D1
000327B6 <AmiBlitz3.ab3@22887>    BEQ.w JUMP_badpenderr
000327BA <AmiBlitz3.ab3@22888>   MOVE.w #$4EF9,D1
000327BE <AmiBlitz3.ab3@22889>    BSR.w writeword
000327C4 <AmiBlitz3.ab3@22890>    JSR addoff
000327CA <AmiBlitz3.ab3@22891>   MOVEA.l _execbase,A6
000327CC <AmiBlitz3.ab3@22892>   MOVEQ.l #$08,D0
000327CE <AmiBlitz3.ab3@22893>   MOVEQ.l #$01,D1
000327D4 <AmiBlitz3.ab3@22895>   MOVE.l mempool,a0
000327D8 <AmiBlitz3.ab3@22896>   JSR _AllocPooled(a6)
000327DA <AmiBlitz3.ab3@22897>   MOVEA.l D0,A0
000327E0 <AmiBlitz3.ab3@22898>   MOVE.l firstpend,(A0)
000327E6 <AmiBlitz3.ab3@22899>   MOVE.l A0,firstpend
000327EE <AmiBlitz3.ab3@22900>   MOVE.l destpointer,$4(A0)
000327F2 <AmiBlitz3.ab3@22901> BRA.w writelong
000327F6 <AmiBlitz3.ab3@22905>   BSR.w do_AsmExit
000327FC <AmiBlitz3.ab3@22906> JMP get1bytemain
00032804 <AmiBlitz3.ab3@22910>   MOVE.b #1,nostringopt
00032808 <AmiBlitz3.ab3@22911>   MOVEM.l a0/a1/d1,-(a7)
0003280E <AmiBlitz3.ab3@22912>   MOVEA.l currentfunction,A0
00032814 <AmiBlitz3.ab3@22913>     CMP.l #0,a0
00032818 <AmiBlitz3.ab3@22914>     BNE 'l1
0003281E <AmiBlitz3.ab3@22915>     JMP errorasmexit
00032820 <AmiBlitz3.ab3@22916> 'l1 MOVEQ.l #$00,D2
00032824 <AmiBlitz3.ab3@22917>   MOVE.b $5(A0),D2
00032828 <AmiBlitz3.ab3@22918>   BSR.w eval
0003282E <AmiBlitz3.ab3@22920>   MOVEA.l currentfunction,A0
00032832 <AmiBlitz3.ab3@22921>   MOVE.l funcstruct_returntype(a0),a0
00032838 <AmiBlitz3.ab3@22922>   CMP.l #0,a0
0003283C <AmiBlitz3.ab3@22923>   BEQ 'isstatement
00032844 <AmiBlitz3.ab3@22924>   CMP.l #$100,4(a0)
00032848 <AmiBlitz3.ab3@22925>   BLT.w 'isvar
0003284A <AmiBlitz3.ab3@22926>   MOVE.l a2,a1
00032850 <AmiBlitz3.ab3@22927>   TST.l typetocast
00032854 <AmiBlitz3.ab3@22928>   BEQ 'nocast
0003285A <AmiBlitz3.ab3@22929>   MOVE.l typetocast,a1
0003285C <AmiBlitz3.ab3@22930> 'nocast  CMP.l a0,a1
00032860 <AmiBlitz3.ab3@22931>   BEQ 'ok
00032866 <AmiBlitz3.ab3@22932>   CLR.l typetocast
0003286C <AmiBlitz3.ab3@22933>   MOVE.l lasttoken,d1
00032870 <AmiBlitz3.ab3@22934>   CMP.w #NullTokenID,d1                   ;$b581 ok, when token for null
00032874 <AmiBlitz3.ab3@22935>   BEQ 'isnull
0003287A <AmiBlitz3.ab3@22936> 'error  JMP errorconvertreturntype
0003287E <AmiBlitz3.ab3@22943>   MOVEM.l (a7)+,a0/a1/d1
00032882 <AmiBlitz3.ab3@22944> BRA.w do_AsmExit
00032888 <AmiBlitz3.ab3@22946> error_convert_types2 JMP error_convert_types
0003288E <AmiBlitz3.ab3@22959>   TST.b debugmode
00032892 <AmiBlitz3.ab3@22960>    BEQ.w JL_0_D2CA
00032896 <AmiBlitz3.ab3@22961>   MOVE.w #$C305,D1
0003289A <AmiBlitz3.ab3@22962> BRA.w Atokejsr
0003289E <AmiBlitz3.ab3@22965>   MOVE.w #$4E75,D1
000328A2 <AmiBlitz3.ab3@22966> BRA.w writeword
000328A6 <AmiBlitz3.ab3@22969> localslist:  Ds.l 1                                        ;all locals for procs.;??Looks like obsovled data??
000328AA <AmiBlitz3.ab3@22970> proclocals:  Ds.l 1                                        ;for debugga!
000328AC <AmiBlitz3.ab3@22971> procnum:     Ds.w 1
000328AE <AmiBlitz3.ab3@22972> procnum2:    Ds.w 1
000328B2 <AmiBlitz3.ab3@22973> prolineat:   Ds.l 1
000328B8 <AmiBlitz3.ab3@22977>    TST.w proceduremode
000328BC <AmiBlitz3.ab3@22978>    BGT JUMP_sreterr
000328C0 <AmiBlitz3.ab3@22979>    CMP.w #-$7FF9,D0
000328C4 <AmiBlitz3.ab3@22980>    BEQ.w JL_0_D29C
000328C6 <AmiBlitz3.ab3@22981>    MOVEQ.l #-$01,D1
000328CA <AmiBlitz3.ab3@22982> BRA.w do_function2
000328D0 <AmiBlitz3.ab3@22985> JMP sreterr
000328D6 <AmiBlitz3.ab3@22989>   CLR.b skipfunc
000328DC <AmiBlitz3.ab3@22990>   TST.l unusedfunc
000328E0 <AmiBlitz3.ab3@22991>   BEQ 'ex
000328E4 <AmiBlitz3.ab3@22992>   MOVEM.l d0-d7/a0-a6,-(a7)
000328EA <AmiBlitz3.ab3@22993>   MOVE.l unusedfunc,d1
000328F0 <AmiBlitz3.ab3@22994>   LEA ptr_parameterstore,a5
000328F2 <AmiBlitz3.ab3@22997>   MOVE.l d1,a0
000328F6 <AmiBlitz3.ab3@22998>   LEA 12(a0),a2
000328F8 <AmiBlitz3.ab3@22999>   MOVE.l a5,a1
000328FA <AmiBlitz3.ab3@23001>   CMPM.b (a1)+,(a2)+
000328FE <AmiBlitz3.ab3@23002>   BNE 'neq
00032900 <AmiBlitz3.ab3@23003>   TST.b (a2)
00032904 <AmiBlitz3.ab3@23004>   BNE 'ch
00032906 <AmiBlitz3.ab3@23005>   TST.b (a1)
0003290A <AmiBlitz3.ab3@23006>   BNE 'neq
00032912 <AmiBlitz3.ab3@23007>   MOVE.b #1,skipfunc
00032916 <AmiBlitz3.ab3@23008> BRA 'out
00032918 <AmiBlitz3.ab3@23011>   MOVE.l (a0),d1
0003291C <AmiBlitz3.ab3@23012>   BNE 'ag
00032920 <AmiBlitz3.ab3@23015>   MOVEM.l (a7)+,d0-d7/a0-a6
00032922 <AmiBlitz3.ab3@23018> RTS
00032928 <AmiBlitz3.ab3@23022> JMP dupprocerr
0003292E <AmiBlitz3.ab3@23025> JMP illprocperr
00032936 <AmiBlitz3.ab3@23032>   CMP.w #-1,proceduremode                                  ;was JUMP_sreterr_2
0003293A <AmiBlitz3.ab3@23033>    BEQ JUMP_sreterr
0003293E <AmiBlitz3.ab3@23034>   CMP.w #-$7FF9,D0
00032942 <AmiBlitz3.ab3@23035>    BEQ.w do_function_return
0003294C <AmiBlitz3.ab3@23038>   MOVE.w oldqflag,instringon
00032952 <AmiBlitz3.ab3@23039>   MOVEA.l lastsourcepos,A5
00032958 <AmiBlitz3.ab3@23040>   JSR getfunctionreturntype
0003295E <AmiBlitz3.ab3@23041>   JSR get1bytemain
00032964 <AmiBlitz3.ab3@23044>   TST.b declare
00032968 <AmiBlitz3.ab3@23045>   BEQ 'l1
00032970 <AmiBlitz3.ab3@23046>   MOVE.b #1,nowdeclare
00032976 <AmiBlitz3.ab3@23049>   JSR errchx                                           ;writejumpoverfunction
0003297C <AmiBlitz3.ab3@23052>   CLR.b fastfunc
00032986 <AmiBlitz3.ab3@23053>   MOVE.l firstiff,firstiffstore
0003298E <AmiBlitz3.ab3@23054>   CMP.l #"FAST",-1(a5)
00032992 <AmiBlitz3.ab3@23055>   BNE 'nofast
00032998 <AmiBlitz3.ab3@23056>   CMP.b #" ",3(a5)
0003299C <AmiBlitz3.ab3@23057>   BNE 'nofast
0003299E <AmiBlitz3.ab3@23058>   ADDQ.l #3,a5
000329A2 <AmiBlitz3.ab3@23061>     CMP.b #" ",(a5)
000329A6 <AmiBlitz3.ab3@23062>      BNE 'x1
000329A8 <AmiBlitz3.ab3@23063>     ADDQ #1,a5
000329AC <AmiBlitz3.ab3@23064> BRA 'x2
000329B2 <AmiBlitz3.ab3@23067>   MOVE.l a5,lastsourcepos
000329BA <AmiBlitz3.ab3@23068>   MOVE.b #1,fastfunc
000329C2 <AmiBlitz3.ab3@23071>   CMP.l #"NOOP",-1(a5)                                     ;compile 3* so its deactivate
000329C6 <AmiBlitz3.ab3@23072> BRA 'noopt
000329CC <AmiBlitz3.ab3@23074>   CMP.w #"T ",3(a5)                                        ;??Looks like dead code??
000329D0 <AmiBlitz3.ab3@23075>   BNE 'noopt
000329D2 <AmiBlitz3.ab3@23076>   ADDQ.l #4,a5
000329D6 <AmiBlitz3.ab3@23079>     CMP.b #" ",(a5)
000329DA <AmiBlitz3.ab3@23080>      BNE 'x1b
000329DC <AmiBlitz3.ab3@23081>     ADDQ #1,a5
000329E0 <AmiBlitz3.ab3@23082> BRA 'x2b
000329E6 <AmiBlitz3.ab3@23085>   MOVE.l a5,lastsourcepos
000329EC <AmiBlitz3.ab3@23087>   JSR makename2
000329F0 <AmiBlitz3.ab3@23088> BRA 'l1
000329F6 <AmiBlitz3.ab3@23092>   JSR makename2
000329FC <AmiBlitz3.ab3@23093>   JSR checkused
00032A02 <AmiBlitz3.ab3@23094>   TST.b skipfunc
00032A06 <AmiBlitz3.ab3@23095>    BEQ 'l1
00032A0C <AmiBlitz3.ab3@23096>   JSR skipme
00032A12 <AmiBlitz3.ab3@23097>   CLR.b fastfunc
00032A14 <AmiBlitz3.ab3@23098> RTS
00032A1E <AmiBlitz3.ab3@23101>   MOVE.l linenumat,prolineat
00032A24 <AmiBlitz3.ab3@23102>   ADDQ.w #1,procnum2
00032A2C <AmiBlitz3.ab3@23103>   MOVE.w procnum2(PC),procnum
00032A32 <AmiBlitz3.ab3@23104>   MOVE.w D1,proceduremode
00032A38 <AmiBlitz3.ab3@23105>   CLR.w locvaroff
00032A3C <AmiBlitz3.ab3@23106>   CMP.w #$7B,D0
00032A40 <AmiBlitz3.ab3@23107>    BNE.w JUMP_syntaxerr
00032A48 <AmiBlitz3.ab3@23108>    MOVE.b #1,infunctioncode
00032A4E <AmiBlitz3.ab3@23109>   MOVEA.l tempvm,A0
00032A56 <AmiBlitz3.ab3@23110>   MOVE.w $C(A0),memlibstat
00032A5C <AmiBlitz3.ab3@23111>   BCLR #$7,$C(A0)                                          ;Bit out of range
00032A60 <AmiBlitz3.ab3@23112>   MOVE.w #$4EF9,D1
00032A64 <AmiBlitz3.ab3@23113>    BSR.w writeword
00032A6A <AmiBlitz3.ab3@23114>    JSR addoff
00032A6E <AmiBlitz3.ab3@23115>    BSR.w writelong
00032A74 <AmiBlitz3.ab3@23116>    JSR findproc                                          ;findproc function
00032A78 <AmiBlitz3.ab3@23117>    BEQ.w JUMP_dupprocerr
00032A7E <AmiBlitz3.ab3@23118>    JSR addlabel
00032A84 <AmiBlitz3.ab3@23119>    MOVE.b #31,$20(a2)                                      ;increase if more pars
00032A8A <AmiBlitz3.ab3@23120>    MOVE.b #0,isfunc(a2)
00032A92 <AmiBlitz3.ab3@23121>    MOVE.l functionreturntype,funcstruct_returntype(a2)
00032A9A <AmiBlitz3.ab3@23122>   MOVE.l destpointer,$E(A2)
00032AA0 <AmiBlitz3.ab3@23123>   MOVE.l A2,currentfunction
00032AA6 <AmiBlitz3.ab3@23124>   LEA nops8,A0
00032AAC <AmiBlitz3.ab3@23125>   LEA dataget,A1
00032AB0 <AmiBlitz3.ab3@23126>    BSR.w pokecode2
00032AB6 <AmiBlitz3.ab3@23127>   TST.b debugmode
00032ABA <AmiBlitz3.ab3@23128>    BEQ.b JL_0_D3AA
00032ABC <AmiBlitz3.ab3@23129>   MOVEQ.l #$04,D1
00032AC2 <AmiBlitz3.ab3@23130>    JSR writetrap
00032ACC <AmiBlitz3.ab3@23131>   MOVE.l destpointer,proclocals
00032AD0 <AmiBlitz3.ab3@23132>    BSR.w writelong
00032AD4 <AmiBlitz3.ab3@23133>    BSR.w writelong
00032AD8 <AmiBlitz3.ab3@23136>    LEA $16(A2),A4
00032AE0 <AmiBlitz3.ab3@23137>   MOVE.b proceduremode+1,$5(A2)
00032AE2 <AmiBlitz3.ab3@23138>   MOVEQ.l #$00,D6
00032AE4 <AmiBlitz3.ab3@23139>   MOVEQ.l #$00,D5
00032AEA <AmiBlitz3.ab3@23140>    JSR get1bytemain
00032AEE <AmiBlitz3.ab3@23141>   CMP.w #$7D,D0
00032AF2 <AmiBlitz3.ab3@23142>    BEQ.w JL_0_D466
00032AF6 <AmiBlitz3.ab3@23145>    CMP.b #"@",d0
00032AFA <AmiBlitz3.ab3@23146>    BNE 'l2
00032AFC <AmiBlitz3.ab3@23147>    MOVE.l a0,-(a7)
00032B02 <AmiBlitz3.ab3@23148>    MOVE.l currentfunction,a0
00032B08 <AmiBlitz3.ab3@23149>    CMP.b #31,$20(a0)                                       ;increase if morepars
00032B0C <AmiBlitz3.ab3@23150>    BNE 'l1
00032B10 <AmiBlitz3.ab3@23151>    MOVE.b d6,$20(a0)                                       ;increase if morepar
00032B16 <AmiBlitz3.ab3@23154>    JSR get1bytemain
00032B18 <AmiBlitz3.ab3@23155>    MOVE.l (a7)+,a0
00032B1C <AmiBlitz3.ab3@23158>    BSR.w getparameter
00032B20 <AmiBlitz3.ab3@23159>    BSR.w JL_0_8E3C
00032B28 <AmiBlitz3.ab3@23160>   CMPI.l #$7,$4(A2)
00032B2C <AmiBlitz3.ab3@23161>    BNE.w JL_0_D3F6
00032B32 <AmiBlitz3.ab3@23162>   LEA stbuff,A0
00032B34 <AmiBlitz3.ab3@23163>   MOVE.w D5,D1
00032B36 <AmiBlitz3.ab3@23164>   LSL.w #2,D1
00032B3A <AmiBlitz3.ab3@23165>   MOVE.w D6,$0(A0,D1.W)
00032B40 <AmiBlitz3.ab3@23166>   MOVE.w $4(A3),$2(A0,D1.W)
00032B42 <AmiBlitz3.ab3@23167>   ADDQ.w #1,D5
00032B44 <AmiBlitz3.ab3@23168>   MOVEQ.l #$07,D2
00032B48 <AmiBlitz3.ab3@23169> BRA.w JL_0_D442
00032B4E <AmiBlitz3.ab3@23172> JMP toovarerr
00032B52 <AmiBlitz3.ab3@23175>   MOVE.w #$2940,D1
00032B54 <AmiBlitz3.ab3@23176>   MOVEQ.l #$03,D2
00032B5C <AmiBlitz3.ab3@23177>   BTST #$0,flagmask+1
00032B60 <AmiBlitz3.ab3@23178>    BNE.w JL_0_D430
00032B68 <AmiBlitz3.ab3@23179>   CMPI.l #$100,$4(A2)
00032B6C <AmiBlitz3.ab3@23180>    BCC.w JUMP_illprocperr
00032B70 <AmiBlitz3.ab3@23181>   MOVE.w $6(A2),D2
00032B74 <AmiBlitz3.ab3@23182>   CMP.w #$2,D2
00032B78 <AmiBlitz3.ab3@23183>    BHI.w JL_0_D430
00032B7C <AmiBlitz3.ab3@23184>    BEQ.w JL_0_D42C
00032B80 <AmiBlitz3.ab3@23185>   EORI.w #$3000,D1
00032B84 <AmiBlitz3.ab3@23186> BRA.w JL_0_D430
00032B8A <AmiBlitz3.ab3@23189> JMP more6pard
00032B8E <AmiBlitz3.ab3@23192>   ORI.w #$1000,D1
00032B90 <AmiBlitz3.ab3@23195>   OR.w D6,D1
00032B96 <AmiBlitz3.ab3@23196>   TST.b fpu
00032B9A <AmiBlitz3.ab3@23197>   BEQ 'nofpu
00032B9E <AmiBlitz3.ab3@23198>   CMP.b #5,d2
00032BA2 <AmiBlitz3.ab3@23199>   BNE 'nofpu
00032BA6 <AmiBlitz3.ab3@23200>   CMP.w #6,d6
00032BAA <AmiBlitz3.ab3@23201>   BLT 'l10a
00032BB0 <AmiBlitz3.ab3@23202>   CMP.l #newtype_double,a2
00032BB4 <AmiBlitz3.ab3@23203>   BEQ JUMP_more6pard
00032BB8 <AmiBlitz3.ab3@23204> BRA 'nofpu
00032BBE <AmiBlitz3.ab3@23207>   MOVE.l #$f22c6400,d1
00032BC2 <AmiBlitz3.ab3@23208>   MOVEM.l d0/a4,-(a7)
00032BC4 <AmiBlitz3.ab3@23209>   MOVE.l d6,d0
00032BC6 <AmiBlitz3.ab3@23210>   ASL.l #7,d0
00032BC8 <AmiBlitz3.ab3@23211>   OR.w d0,d1
00032BCE <AmiBlitz3.ab3@23212>   CMP.l #newtype_double,a2
00032BD2 <AmiBlitz3.ab3@23213>   BNE 'l1
00032BD8 <AmiBlitz3.ab3@23214>   OR.l #$1000,d1
00032BDC <AmiBlitz3.ab3@23217>   BSR writelong
00032BE0 <AmiBlitz3.ab3@23218>   MOVE.w 4(a3),d1
00032BE4 <AmiBlitz3.ab3@23219>   BSR writeword
00032BE8 <AmiBlitz3.ab3@23220>   MOVEM.l (a7)+,a4/d0
00032BEC <AmiBlitz3.ab3@23221> BRA JL_0_D442
00032BEE <AmiBlitz3.ab3@23224>   MOVE.l A4,-(A7)
00032BF2 <AmiBlitz3.ab3@23225>    CMP.w #6,d6
00032BF6 <AmiBlitz3.ab3@23226>    BLT 'l10
00032BFA <AmiBlitz3.ab3@23227>    MOVE.w #$c500-4,d1                                      ;savetemp+regnum
00032BFC <AmiBlitz3.ab3@23228>    ADD.w d6,d1
00032C02 <AmiBlitz3.ab3@23229>    JSR Atokejsr
00032C08 <AmiBlitz3.ab3@23230>    TST.w dontwrite
00032C0C <AmiBlitz3.ab3@23231>    BNE 'l10
00032C12 <AmiBlitz3.ab3@23232>    MOVE.l data1start,d1
00032C18 <AmiBlitz3.ab3@23233>    MOVE.l destpointer,a4
00032C1C <AmiBlitz3.ab3@23234>    ADD.l d1,-6(a4)
00032C22 <AmiBlitz3.ab3@23235>    MOVE.l destpointer,d1
00032C24 <AmiBlitz3.ab3@23236>    SUBQ.l #6,d1
00032C2A <AmiBlitz3.ab3@23237>    SUB.l destbufferstart,d1
00032C2C <AmiBlitz3.ab3@23239>    MOVE.l d2,-(a7)
00032C2E <AmiBlitz3.ab3@23240>    MOVE.l d1,d2
00032C34 <AmiBlitz3.ab3@23241>    JSR addhunkoffset                                       ;move.l $0,-x(a4)
00032C36 <AmiBlitz3.ab3@23242>    MOVE.l (a7)+,d2
00032C3C <AmiBlitz3.ab3@23243>    MOVE.l destpointer,a4
00032C40 <AmiBlitz3.ab3@23244>    CMP.w #2,d2
00032C44 <AmiBlitz3.ab3@23245>    BNE 'nw1
00032C4A <AmiBlitz3.ab3@23247>    MOVE.w #$3979,-8(a4)                                    ;move.w $0,-x(a4)
00032C52 <AmiBlitz3.ab3@23248>    ADD.l #2,-6(a4)
00032C56 <AmiBlitz3.ab3@23251>    CMP.w #1,d2
00032C5A <AmiBlitz3.ab3@23252>    BNE 'nb
00032C60 <AmiBlitz3.ab3@23253>    MOVE.w #$1979,-8(a4)                                    ;move.b $0,-x(a4)
00032C68 <AmiBlitz3.ab3@23254>    ADD.l #3,-6(a4)
00032C6E <AmiBlitz3.ab3@23257>    MOVE.w $4(a3),-2(a4)
00032C72 <AmiBlitz3.ab3@23258> BRA 'ne1
00032C76 <AmiBlitz3.ab3@23261>   BSR.w writeword                                          ;write storeparameter
00032C7A <AmiBlitz3.ab3@23264>   MOVE.w $4(A3),D1
00032C7E <AmiBlitz3.ab3@23265>    BSR.w writeword
00032C80 <AmiBlitz3.ab3@23268>   MOVEA.l (A7)+,A4
00032C86 <AmiBlitz3.ab3@23271>   CLR.l functionreturntype
00032C88 <AmiBlitz3.ab3@23272>   ADDQ.w #1,D6
00032C8C <AmiBlitz3.ab3@23273>   CMP.w #11,D6                                             ;max function parameters
00032C90 <AmiBlitz3.ab3@23274>    BCC.w JUMP_toovarerr
00032C96 <AmiBlitz3.ab3@23275>   MOVE.l currentfunction,a0
00032C9A <AmiBlitz3.ab3@23276>   MOVE.l a2,funcstruct_parametertype-4(a0,d6*4)                                    ;-4 because d6 is increment before
00032C9C <AmiBlitz3.ab3@23277>   MOVE.b D2,(A4)+
00032CA0 <AmiBlitz3.ab3@23278>   CMP.w #$2C,D0
00032CA4 <AmiBlitz3.ab3@23279>    BNE.w JL_0_D45E
00032CAA <AmiBlitz3.ab3@23280>    JSR get1bytemain
00032CAE <AmiBlitz3.ab3@23292> BRA.w JL_0_D3C6
00032CB2 <AmiBlitz3.ab3@23295>   CMP.w #$7D,D0
00032CB6 <AmiBlitz3.ab3@23296>    BNE.w JUMP_syntaxerr
00032CBC <AmiBlitz3.ab3@23299>   MOVEA.l currentfunction,A2
00032CBE <AmiBlitz3.ab3@23300>   LSL.w #4,D5
00032CC0 <AmiBlitz3.ab3@23301>   OR.w D5,D6
00032CC4 <AmiBlitz3.ab3@23302>   MOVE.b D6,$4(A2)
00032CC6 <AmiBlitz3.ab3@23303>   LSR.w #4,D6
00032CCA <AmiBlitz3.ab3@23304>    BEQ.w JL_0_D4C4
00032CD0 <AmiBlitz3.ab3@23305>   LEA stbuff,A0
00032CD2 <AmiBlitz3.ab3@23306>   SUBQ.w #1,D6
00032CD4 <AmiBlitz3.ab3@23309>     MOVE.w D6,D1                                           ;function stringpars
00032CD6 <AmiBlitz3.ab3@23310>     LSL.w #2,D1                                            ;stringsize was 2
00032CD8 <AmiBlitz3.ab3@23312>       LSL.w #1,d1
00032CDA <AmiBlitz3.ab3@23313>       ADDQ.w #4,d1
00032CDC <AmiBlitz3.ab3@23315>     ADDQ.w #8,D1
00032CE2 <AmiBlitz3.ab3@23316>     MOVE.w D1,funcst+2
00032CE8 <AmiBlitz3.ab3@23317>     MOVE.l funcst,D1
00032CEC <AmiBlitz3.ab3@23318>     BSR.w writelong
00032CEE <AmiBlitz3.ab3@23319>     MOVE.w (A0)+,D1
00032CF2 <AmiBlitz3.ab3@23320>     CMP.b #5,d1
00032CF6 <AmiBlitz3.ab3@23321>     BLE 's1
00032CFA <AmiBlitz3.ab3@23322>     MOVE.w #$266c,d1                                       ;native move.l 4(a4),a3
00032CFE <AmiBlitz3.ab3@23323>     BSR writeinstruction
00032D00 <AmiBlitz3.ab3@23324>     MOVE.w D6,D1                                           ;function stringpars
00032D02 <AmiBlitz3.ab3@23325>     LSL.w #2,D1                                            ;stringsize was 2
00032D04 <AmiBlitz3.ab3@23327>       LSL.w #1,d1
00032D06 <AmiBlitz3.ab3@23329>     ADDQ.w #8,D1
00032D0A <AmiBlitz3.ab3@23330>     BSR writeword
00032D0E <AmiBlitz3.ab3@23331>   BRA 's2
00032D14 <AmiBlitz3.ab3@23334>     OR.w movedna3,D1
00032D18 <AmiBlitz3.ab3@23335>      BSR.w writeword
00032D1E <AmiBlitz3.ab3@23338>     MOVE.w (A0)+,least+2
00032D24 <AmiBlitz3.ab3@23339>     MOVE.l least,D1
00032D28 <AmiBlitz3.ab3@23340>      BSR.w writelong
00032D2A <AmiBlitz3.ab3@23341>     MOVE.l A0,-(A7)
00032D2E <AmiBlitz3.ab3@23342>     MOVE.w #$C700,D1
00032D32 <AmiBlitz3.ab3@23343>      BSR.w Atokejsr
00032D34 <AmiBlitz3.ab3@23344>     MOVEA.l (A7)+,A0
00032D38 <AmiBlitz3.ab3@23345>   DBF D6,JL_0_D482
00032D3E <AmiBlitz3.ab3@23348> JMP get1bytemain
00032D44 <AmiBlitz3.ab3@23352>   MOVE.w dontwrite,D1
00032D48 <AmiBlitz3.ab3@23353>    BNE.w JL_0_D4F6
00032D4E <AmiBlitz3.ab3@23354>   MOVE.l destpointer,-(A7)
00032D54 <AmiBlitz3.ab3@23355>   MOVE.l A0,destpointer
00032D5A <AmiBlitz3.ab3@23356>   MOVE.l linksize,D1
00032D5E <AmiBlitz3.ab3@23357>    BSR.w writelong                                         ;writefunctions jumppos
00032D64 <AmiBlitz3.ab3@23358>    TST.b fastfunc
00032D68 <AmiBlitz3.ab3@23359>    BNE 'skip
00032D6C <AmiBlitz3.ab3@23360>   MOVE.w #$CC00,D1
00032D70 <AmiBlitz3.ab3@23361>    BSR.w tokejsr2                                          ;write clearvars
00032D76 <AmiBlitz3.ab3@23364>   MOVE.l (A7)+,destpointer
00032D78 <AmiBlitz3.ab3@23367> RTS
00032D7E <AmiBlitz3.ab3@23371>   MOVEA.l currentfunction,A2
00032D82 <AmiBlitz3.ab3@23372>   MOVEA.l $E(A2),A0
00032D86 <AmiBlitz3.ab3@23373>   MOVE.w $6(A2),D1
00032D8A <AmiBlitz3.ab3@23374>    BEQ.w JL_0_D538
00032D90 <AmiBlitz3.ab3@23375>   MOVE.w D1,linksize+2
00032D94 <AmiBlitz3.ab3@23376>   MOVE.w $8(A2),D1                                         ;check if function memalloc need
00032D98 <AmiBlitz3.ab3@23377>    BNE.w JL_0_D522
00032D9A <AmiBlitz3.ab3@23378>   ADDQ.w #6,A0
00032D9E <AmiBlitz3.ab3@23379>   MOVE.l A0,$E(A2)
00032DA2 <AmiBlitz3.ab3@23380> BRA.w JL_0_D4C8
00032DA4 <AmiBlitz3.ab3@23383>   MOVE.l A0,-(A7)
00032DA8 <AmiBlitz3.ab3@23384>    BSR.w JL_0_D4C8
00032DAA <AmiBlitz3.ab3@23385>   MOVEA.l (A7)+,A0
00032DAE <AmiBlitz3.ab3@23386>   LEA $A(A0),A0
00032DB4 <AmiBlitz3.ab3@23387>   MOVEA.l currentfunction,A2
00032DB8 <AmiBlitz3.ab3@23388> BRA.w JL_0_D54A
00032DBC <AmiBlitz3.ab3@23391>   MOVE.w $8(A2),D1
00032DC0 <AmiBlitz3.ab3@23392>    BNE.w JL_0_D54A
00032DC4 <AmiBlitz3.ab3@23393>   LEA $10(A0),A0
00032DC8 <AmiBlitz3.ab3@23394>   MOVE.l A0,$E(A2)
00032DCA <AmiBlitz3.ab3@23395> RTS
00032DD0 <AmiBlitz3.ab3@23399> JMP errormsg_nofast
00032DD6 <AmiBlitz3.ab3@23402>    MOVE.w dontwrite,D1                                     ;writeallocmem for functions (after releasemem called)
00032DDA <AmiBlitz3.ab3@23403>    BNE.w JL_0_D580
00032DE0 <AmiBlitz3.ab3@23404>    TST.b fastfunc
00032DE4 <AmiBlitz3.ab3@23405>    BNE JUMP_errormsg_nofast
00032DEA <AmiBlitz3.ab3@23406>   MOVE.l destpointer,-(A7)
00032DF0 <AmiBlitz3.ab3@23407>   MOVE.l A0,destpointer
00032DF4 <AmiBlitz3.ab3@23408>   MOVE.w #$4EB9,D1
00032DF8 <AmiBlitz3.ab3@23409>    BSR.w writeword
00032DFE <AmiBlitz3.ab3@23410>    JSR addoff
00032E02 <AmiBlitz3.ab3@23411>    BSR.w writelong
00032E04 <AmiBlitz3.ab3@23412>   MOVEA.l (A7)+,A0
00032E0A <AmiBlitz3.ab3@23413>   MOVEA.l destpointer,A1
00032E0C <AmiBlitz3.ab3@23414>   MOVE.l A0,-(A1)
00032E12 <AmiBlitz3.ab3@23415>   MOVE.l A0,destpointer
00032E16 <AmiBlitz3.ab3@23418>   MOVE.w $8(A2),D4
00032E1A <AmiBlitz3.ab3@23419>    BPL.w JL_0_D59E
00032E1E <AmiBlitz3.ab3@23420>   MOVE.w #$C004,D1
00032E22 <AmiBlitz3.ab3@23421>    BSR.w tokejsr2
00032E28 <AmiBlitz3.ab3@23422>   MOVEA.l currentfunction,A2
00032E2C <AmiBlitz3.ab3@23423>   MOVE.w $8(A2),D4
00032E30 <AmiBlitz3.ab3@23424>   ANDI.w #$7FFF,D4
00032E34 <AmiBlitz3.ab3@23427>    BEQ.w JL_0_D5E0
00032E38 <AmiBlitz3.ab3@23428>   MOVE.b $4(A2),D1
00032E3C <AmiBlitz3.ab3@23429>   ANDI.w #$F,D1
00032E3E <AmiBlitz3.ab3@23430>   MOVE.w D1,-(A7)
00032E42 <AmiBlitz3.ab3@23431>   CMP.w #$5,D1
00032E46 <AmiBlitz3.ab3@23432>    BCS.w JL_0_D5BC
00032E4A <AmiBlitz3.ab3@23433>   MOVE.w #$2F04,D1
00032E4E <AmiBlitz3.ab3@23434>    BSR.w writeword
00032E54 <AmiBlitz3.ab3@23437>   MOVE.l locdatast,D3
00032E5A <AmiBlitz3.ab3@23438>    JSR datastart
00032E5E <AmiBlitz3.ab3@23439>   MOVE.w #$C501,D1
00032E62 <AmiBlitz3.ab3@23440>    BSR.w tokejsr2
00032E64 <AmiBlitz3.ab3@23441>   MOVE.w (A7)+,D1
00032E68 <AmiBlitz3.ab3@23442>   CMP.w #$5,D1
00032E6C <AmiBlitz3.ab3@23443>    BCS.w JL_0_D5E0
00032E70 <AmiBlitz3.ab3@23444>   MOVE.w #$281F,D1
00032E74 <AmiBlitz3.ab3@23445>    BSR.w writeword
00032E78 <AmiBlitz3.ab3@23447>   MOVE.w #$4E75,D1
00032E7C <AmiBlitz3.ab3@23448> BRA.w writeword
00032E82 <AmiBlitz3.ab3@23452>   LEA mwait,A0
00032E88 <AmiBlitz3.ab3@23453>   LEA mwaitf,A1
00032E8C <AmiBlitz3.ab3@23454> BRA.w pokecode
00032E92 <AmiBlitz3.ab3@23458> JMP laberr
00032E96 <AmiBlitz3.ab3@23461>   CMP.w #$2E,D0
00032E9A <AmiBlitz3.ab3@23462>   BNE.w JUMP_syntaxerr
00032EA0 <AmiBlitz3.ab3@23463>   JSR getparameter2
00032EA4 <AmiBlitz3.ab3@23464>   BEQ.w JUMP_laberr
00032EAA <AmiBlitz3.ab3@23465>   LEA newtypebase,A2
00032EB0 <AmiBlitz3.ab3@23466>   JSR findtype
00032EB4 <AmiBlitz3.ab3@23467>   BNE.w JL_0_D626
00032EBC <AmiBlitz3.ab3@23468>   CMPI.l #MaxByte,$4(A2)
00032EC0 <AmiBlitz3.ab3@23469>   BNE.w JUMP_typeerr
00032EC4 <AmiBlitz3.ab3@23470> BRA.w JL_0_D62A
00032ECA <AmiBlitz3.ab3@23473> JMP typeerr
00032ED0 <AmiBlitz3.ab3@23476>   JSR addlabel
00032ED4 <AmiBlitz3.ab3@23479>   CLR.l $4(A2)
00032EDA <AmiBlitz3.ab3@23480>   MOVE.l A2,thistype
00032EE0 <AmiBlitz3.ab3@23481>   CLR.l prevtype
00032EE6 <AmiBlitz3.ab3@23482>   CLR.w typelen
00032EEC <AmiBlitz3.ab3@23483>   CLR.w linemode
00032EF2 <AmiBlitz3.ab3@23484>   JSR reget
00032EF6 <AmiBlitz3.ab3@23485>   BNE.w typemode
00032EF8 <AmiBlitz3.ab3@23486> RTS
00032EFC <AmiBlitz3.ab3@23489>   CMP.w #-$7FFE,D0
00032F00 <AmiBlitz3.ab3@23490>   BEQ.w JL_0_D82E
00032F0A <AmiBlitz3.ab3@23492>   MOVE.w oldqflag,instringon
00032F10 <AmiBlitz3.ab3@23493>   MOVEA.l lastsourcepos,A5
00032F12 <AmiBlitz3.ab3@23494>   MOVEQ.l #$00,D6
00032F16 <AmiBlitz3.ab3@23495>   CMP.w #$2A,D0
00032F1A <AmiBlitz3.ab3@23496>   BNE.w JL_0_D670
00032F1C <AmiBlitz3.ab3@23497>   MOVEQ.l #$01,D6
00032F22 <AmiBlitz3.ab3@23498>   JSR get1bytemain
00032F26 <AmiBlitz3.ab3@23499> BRA.w JL_0_D67E
00032F2A <AmiBlitz3.ab3@23502>   CMP.w #$40,D0
00032F2E <AmiBlitz3.ab3@23503>   BNE.w JL_0_D67E
00032F30 <AmiBlitz3.ab3@23504>   MOVEQ.l #$05,D6
00032F36 <AmiBlitz3.ab3@23505>   JSR get1bytemain
00032F3C <AmiBlitz3.ab3@23508>   MOVE.w D6,flagmask
00032F42 <AmiBlitz3.ab3@23509>   JSR getparameter2
00032F46 <AmiBlitz3.ab3@23510>   BEQ.w JUMP_syntaxerr
00032F4C <AmiBlitz3.ab3@23511>   MOVEA.l thistype,A2
00032F4E <AmiBlitz3.ab3@23512>   ADDQ.w #4,A2
00032F54 <AmiBlitz3.ab3@23513>   JSR findvariable2
00032F58 <AmiBlitz3.ab3@23514>   BEQ.w JUMP_dupofferr
00032F5E <AmiBlitz3.ab3@23515>   JSR addlabel
00032F60 <AmiBlitz3.ab3@23516>   MOVE.l A2,-(A7)
00032F64 <AmiBlitz3.ab3@23517>   CMP.w #$2E,D0
00032F68 <AmiBlitz3.ab3@23518>    BEQ.w JL_0_D6CE
00032F6C <AmiBlitz3.ab3@23519>   CMP.w #$24,D0
00032F70 <AmiBlitz3.ab3@23520>    BNE.w JL_0_D6C0
00032F76 <AmiBlitz3.ab3@23521>   MOVE.l #newtype_string,D2
00032F7C <AmiBlitz3.ab3@23522>    JSR get1bytemain
00032F80 <AmiBlitz3.ab3@23523> BRA.w JL_0_D710
00032F86 <AmiBlitz3.ab3@23526> JMP dupofferr
00032F8C <AmiBlitz3.ab3@23529>   MOVE.l prevtype,D2
00032F90 <AmiBlitz3.ab3@23530>   BEQ.w JUMP_notypeerr
00032F94 <AmiBlitz3.ab3@23531> BRA.w JL_0_D706
00032F9A <AmiBlitz3.ab3@23534> JMP notypeerr
00032FA0 <AmiBlitz3.ab3@23537>   JSR getparameter2
00032FA4 <AmiBlitz3.ab3@23538>    BEQ.w JUMP_syntaxerr
00032FAA <AmiBlitz3.ab3@23539>   LEA newtypebase,A2
00032FB0 <AmiBlitz3.ab3@23540>    JSR findtype
00032FB4 <AmiBlitz3.ab3@23541>    BEQ.w JL_0_D704
00032FBC <AmiBlitz3.ab3@23542>   BTST #$0,flagmask+1
00032FC0 <AmiBlitz3.ab3@23543>    BEQ.w JUMP_notypeerr
00032FC6 <AmiBlitz3.ab3@23544>   JSR addlabel
00032FCE <AmiBlitz3.ab3@23547>   MOVE.w linenumat+2,$8(A2)
00032FD6 <AmiBlitz3.ab3@23548>   MOVE.l #MaxByte,$4(A2)
00032FD8 <AmiBlitz3.ab3@23551>   MOVE.l A2,D2
00032FDE <AmiBlitz3.ab3@23554>   CMP.l #newtype_byte,D2
00032FE2 <AmiBlitz3.ab3@23555>    BEQ.w JL_0_D71E
00032FE8 <AmiBlitz3.ab3@23558>   ADDQ.w #1,typelen
00032FF0 <AmiBlitz3.ab3@23559>   BCLR #$0,typelen+1
00032FF2 <AmiBlitz3.ab3@23562>   MOVEQ.l #$00,D3
00032FF4 <AmiBlitz3.ab3@23563>   MOVEA.l D2,A2
00032FFA <AmiBlitz3.ab3@23564>   MOVE.l A2,prevtype
00032FFE <AmiBlitz3.ab3@23565>   MOVE.w $8(A2),D3
00033000 <AmiBlitz3.ab3@23566>   MOVEA.l (A7)+,A2
00033004 <AmiBlitz3.ab3@23567>   MOVE.l D2,$A(A2)
00033006 <AmiBlitz3.ab3@23568>   MOVEQ.l #$00,D4
0003300C <AmiBlitz3.ab3@23569>   MOVE.w typelen,D4
00033010 <AmiBlitz3.ab3@23570>   MOVE.w D4,$4(A2)
00033018 <AmiBlitz3.ab3@23571>   BTST #$0,flagmask+1
0003301C <AmiBlitz3.ab3@23572>    BEQ.w JL_0_D74C
0003301E <AmiBlitz3.ab3@23573>   MOVEQ.l #$04,D3
00033022 <AmiBlitz3.ab3@23576>   CMP.w #$5B,D0
00033026 <AmiBlitz3.ab3@23577>    BNE.w JL_0_D782
0003302A <AmiBlitz3.ab3@23578>   MOVEM.l D3-D4/A2,-(A7)
0003302E <AmiBlitz3.ab3@23579>    BSR.w AJL_0_BF6E
00033032 <AmiBlitz3.ab3@23580>   CMP.w #$5D,D0
00033036 <AmiBlitz3.ab3@23581>    BNE.w JUMP_syntaxerr
00033038 <AmiBlitz3.ab3@23582>   TST.w D6
0003303C <AmiBlitz3.ab3@23583>    BNE.w JUMP_fpconerr
0003303E <AmiBlitz3.ab3@23584>   MOVE.l D3,D1
00033042 <AmiBlitz3.ab3@23585>   MOVEM.l (A7)+,D3-D4/A2
00033048 <AmiBlitz3.ab3@23586>    JSR get1bytemain
0003304C <AmiBlitz3.ab3@23587>   MOVE.w D1,$8(A2)
00033050 <AmiBlitz3.ab3@23588>   MULU.l d1,d3                                             ;>32k fix was mulu.w
00033058 <AmiBlitz3.ab3@23589>   ORI.w #$2,flagmask
0003305A <AmiBlitz3.ab3@23592>   ADD.l D3,D4
00033060 <AmiBlitz3.ab3@23595>     CMP.l #65532,d4
00033064 <AmiBlitz3.ab3@23600>   BCC JUMP_toolongerr
0003306C <AmiBlitz3.ab3@23601>   MOVE.w flagmask,$6(A2)
00033072 <AmiBlitz3.ab3@23602>   MOVE.w D4,typelen
00033074 <AmiBlitz3.ab3@23603> RTS
0003307A <AmiBlitz3.ab3@23606> JMP badenderr
00033080 <AmiBlitz3.ab3@23609> JMP noiferr
00033086 <AmiBlitz3.ab3@23612> JMP toolongerr
0003308C <AmiBlitz3.ab3@23615> JMP fpconerr
00033092 <AmiBlitz3.ab3@23618>   MOVE.l firstiff,D0
00033096 <AmiBlitz3.ab3@23619>    BEQ.w JUMP_noiferr
00033098 <AmiBlitz3.ab3@23620>   MOVEA.l D0,A0
0003309C <AmiBlitz3.ab3@23621>   MOVE.w $C(A0),D0
000330A0 <AmiBlitz3.ab3@23622>   ANDI.w #$FF,D0
000330A2 <AmiBlitz3.ab3@23623>   CMP.w D0,D1
000330A6 <AmiBlitz3.ab3@23624>    BNE.w JUMP_badenderr
000330AA <AmiBlitz3.ab3@23627>   CMP.w #$1,D1
000330AE <AmiBlitz3.ab3@23628>   BNE.w JL_0_D7D8
000330B2 <AmiBlitz3.ab3@23629>   MOVE.w #$6000,D1
000330B8 <AmiBlitz3.ab3@23632>     TST.b fast
000330BC <AmiBlitz3.ab3@23633>     BEQ 'l1
000330C2 <AmiBlitz3.ab3@23634>     OR.l #$ff,d1
000330C6 <AmiBlitz3.ab3@23638>   BSR.w writeword
000330CC <AmiBlitz3.ab3@23639>   MOVEA.l destpointer,A1
000330D0 <AmiBlitz3.ab3@23640>   MOVE.l $4(A0),D1
000330D2 <AmiBlitz3.ab3@23641>   SUB.l A1,D1
000330D8 <AmiBlitz3.ab3@23644>     TST.b fast
000330DC <AmiBlitz3.ab3@23645>     BEQ 'l2
000330E0 <AmiBlitz3.ab3@23646>     BSR writelong
000330E4 <AmiBlitz3.ab3@23647>   BRA JL_0_D7D8
000330E8 <AmiBlitz3.ab3@23651>   BSR.w writeword
000330EC <AmiBlitz3.ab3@23654>   MOVEA.l $8(A0),A1                                        ;write if branch destination
000330F2 <AmiBlitz3.ab3@23655>   MOVE.l destpointer,D1
000330F4 <AmiBlitz3.ab3@23656>   SUB.l A1,D1
000330FA <AmiBlitz3.ab3@23659>     TST.b fast
000330FE <AmiBlitz3.ab3@23660>     BEQ 'l1
00033100 <AmiBlitz3.ab3@23661>     ADDQ.l #4,D1
00033106 <AmiBlitz3.ab3@23662>     MOVE.w dontwrite,D0
0003310A <AmiBlitz3.ab3@23663>     BNE.w JL_0_D7FE
0003310E <AmiBlitz3.ab3@23664>     MOVE.l d1,-$4(a1)
00033112 <AmiBlitz3.ab3@23665>   BRA JL_0_D7FE
00033114 <AmiBlitz3.ab3@23669>   ADDQ.l #2,d1
0003311A <AmiBlitz3.ab3@23670>   TST.w dontwrite
0003311E <AmiBlitz3.ab3@23671>   BNE JL_0_D7FE
00033124 <AmiBlitz3.ab3@23672>   CMP.l #MinWordSgnd,D1
00033128 <AmiBlitz3.ab3@23673>   BCC.w JUMP_bigiferr
0003312C <AmiBlitz3.ab3@23674>   MOVE.w D1,-$2(A1)
0003312E <AmiBlitz3.ab3@23677> RTS
00033134 <AmiBlitz3.ab3@23680> JMP bigiferr
0003313E <AmiBlitz3.ab3@23685>   MOVE.w oldqflag,instringon
00033144 <AmiBlitz3.ab3@23686>   MOVEA.l lastsourcepos,A5
00033146 <AmiBlitz3.ab3@23689>   MOVEQ.l #$01,D1
0003314A <AmiBlitz3.ab3@23690> BRA.w JL_0_D810
00033154 <AmiBlitz3.ab3@23694>   MOVE.w oldqflag,instringon
0003315A <AmiBlitz3.ab3@23695>   MOVEA.l lastsourcepos,A5
0003315C <AmiBlitz3.ab3@23698>   MOVEQ.l #$00,D1
00033160 <AmiBlitz3.ab3@23701>   BSR.w JL_0_D79E
00033164 <AmiBlitz3.ab3@23702>   BSR.w AJL_0_D81C
0003316A <AmiBlitz3.ab3@23703> JMP get1bytemain
00033170 <AmiBlitz3.ab3@23706>   MOVE.l (A0),firstiff
00033172 <AmiBlitz3.ab3@23707>   MOVEA.l A0,A1
00033174 <AmiBlitz3.ab3@23708>   MOVEQ.l #$0E,D0
0003317A <AmiBlitz3.ab3@23709>   MOVEA.l _execbase,A6
00033180 <AmiBlitz3.ab3@23710>   MOVE.l mempool,a0
00033184 <AmiBlitz3.ab3@23711> JMP _FreePooled(A6)
0003318A <AmiBlitz3.ab3@23715>   JSR get1bytemain
0003318E <AmiBlitz3.ab3@23718>   BEQ.w JL_0_D980
00033196 <AmiBlitz3.ab3@23719>   CMP.l #"noa7",-1(a5)
0003319A <AmiBlitz3.ab3@23720>   BNE 'l1
000331A0 <AmiBlitz3.ab3@23721>   JSR get1bytemain
000331A6 <AmiBlitz3.ab3@23722>   JSR get1bytemain
000331AC <AmiBlitz3.ab3@23723>   JSR get1bytemain
000331B4 <AmiBlitz3.ab3@23724>   MOVE.w #$3a,lastchar
000331B8 <AmiBlitz3.ab3@23725> BRA JL_0_D980
000331BE <AmiBlitz3.ab3@23728>   CMP.w #"d0",-1(a5)
000331C2 <AmiBlitz3.ab3@23729>   BNE 'l2
000331CA <AmiBlitz3.ab3@23730>   MOVE.b #1,returncode
000331D0 <AmiBlitz3.ab3@23731>   CLR.w lastchar
000331D4 <AmiBlitz3.ab3@23732> BRA JL_0_D980
000331D8 <AmiBlitz3.ab3@23735>   CMP.w #$80d7,d0
000331DC <AmiBlitz3.ab3@23736>   BNE JL_0_D836
000331E2 <AmiBlitz3.ab3@23737>   JSR skiprest
000331E4 <AmiBlitz3.ab3@23738> RTS
000331E8 <AmiBlitz3.ab3@23741>   BSR.w JL_0_D844
000331EE <AmiBlitz3.ab3@23742>   JSR reget
000331F2 <AmiBlitz3.ab3@23743>   BNE.w JL_0_D836
000331F4 <AmiBlitz3.ab3@23744> RTS
000331F8 <AmiBlitz3.ab3@23747>   CMP.w #-$7FFF,D0
000331FC <AmiBlitz3.ab3@23748>    BNE.w JL_0_D87E
00033202 <AmiBlitz3.ab3@23749>   MOVE.w linemode,D1
00033206 <AmiBlitz3.ab3@23750>    BNE.w JUMP_modeerr
0003320C <AmiBlitz3.ab3@23751>   ADDQ.w #1,typelen
00033214 <AmiBlitz3.ab3@23752>   BCLR #$0,typelen+1
0003321A <AmiBlitz3.ab3@23753>   MOVEA.l thistype,A0
00033222 <AmiBlitz3.ab3@23754>   MOVE.w typelen,$8(A0)
0003322A <AmiBlitz3.ab3@23755>   MOVE.w #$FFFF,linemode
00033230 <AmiBlitz3.ab3@23756> JMP get1bytemain
00033236 <AmiBlitz3.ab3@23759> JMP modeerr
0003323A <AmiBlitz3.ab3@23762>   CMP.w #-$7FF5,D0
0003323E <AmiBlitz3.ab3@23763>    BEQ.w JL_0_D80E
00033242 <AmiBlitz3.ab3@23764>   CMP.w #-$7FF4,D0
00033246 <AmiBlitz3.ab3@23765>    BEQ.w JL_0_D804
0003324A <AmiBlitz3.ab3@23766>   CMP.w #-$7FF8,D0
0003324E <AmiBlitz3.ab3@23767>    BNE.w JL_0_D89A
00033252 <AmiBlitz3.ab3@23770> BRA.w JL_0_D9E8
00033258 <AmiBlitz3.ab3@23773> JMP interr3
0003325C <AmiBlitz3.ab3@23776>   CMP.w #-$7FF7,D0
00033260 <AmiBlitz3.ab3@23777>    BNE.w JL_0_D8C8
00033266 <AmiBlitz3.ab3@23778>    TST.b fpu
0003326A <AmiBlitz3.ab3@23779>    BEQ 'nof
00033270 <AmiBlitz3.ab3@23780>    MOVEA.l currentfunction,A0
00033276 <AmiBlitz3.ab3@23781>    CMP.l #0,a0
0003327A <AmiBlitz3.ab3@23782>    BEQ 'nof
00033280 <AmiBlitz3.ab3@23783>    CMP.b #5,$5(a0)
00033284 <AmiBlitz3.ab3@23784>     BNE 'nof
0003328A <AmiBlitz3.ab3@23785>    MOVE.l #$f23c5000,d1
0003328E <AmiBlitz3.ab3@23786>    BSR writelong
00033292 <AmiBlitz3.ab3@23787>    MOVE.w #0,d1
00033296 <AmiBlitz3.ab3@23788>    BSR writeword
0003329A <AmiBlitz3.ab3@23791>   MOVE.w #$7000,D1                                         ;end function moveq #0,d0
0003329E <AmiBlitz3.ab3@23792>    BSR.w writeword
000332A4 <AmiBlitz3.ab3@23793>   MOVEA.l currentfunction,A0
000332AA <AmiBlitz3.ab3@23794>   CMP.l #0,a0
000332AE <AmiBlitz3.ab3@23795>   BEQ JL_0_D896
000332B4 <AmiBlitz3.ab3@23796>   MOVE.l destpointer,d1
000332B8 <AmiBlitz3.ab3@23797>   SUB.l $e(a0),d1
000332BC <AmiBlitz3.ab3@23798>   MOVE.l d1,isfunc+1(a0)
000332C2 <AmiBlitz3.ab3@23799>   CMPI.b #$7,$5(A0)
000332C6 <AmiBlitz3.ab3@23800>    BNE.w JL_0_D896
000332CC <AmiBlitz3.ab3@23801>   MOVE.w putstlen,D1
000332D0 <AmiBlitz3.ab3@23802>    BSR.w writeword
000332D4 <AmiBlitz3.ab3@23803> BRA.w JL_0_D896
000332DA <AmiBlitz3.ab3@23806> JMP interr
000332DE <AmiBlitz3.ab3@23809>  CMP.w #-$7FD0,D0
000332E2 <AmiBlitz3.ab3@23810>    BNE.w JL_0_D966
000332E8 <AmiBlitz3.ab3@23811>   MOVE.w proceduremode,D1
000332EC <AmiBlitz3.ab3@23812>    BNE.w JUMP_interr3
000332F2 <AmiBlitz3.ab3@23813>   TST.b debugmode
000332F6 <AmiBlitz3.ab3@23814>    BEQ.w JL_0_D90A
000332F8 <AmiBlitz3.ab3@23815>   MOVEQ.l #$03,D1
000332FE <AmiBlitz3.ab3@23816>    JSR writetrap
00033304 <AmiBlitz3.ab3@23817>   MOVE.w dontwrite,D1
00033308 <AmiBlitz3.ab3@23818>    BNE.w JL_0_D90A
0003330E <AmiBlitz3.ab3@23819>   MOVEA.l intcleanat,A0
00033314 <AmiBlitz3.ab3@23820>   MOVE.l destpointer,(A0)
00033318 <AmiBlitz3.ab3@23821>   MOVE.w #$C30C,D1
0003331C <AmiBlitz3.ab3@23822>    BSR.w Atokejsr
00033322 <AmiBlitz3.ab3@23825>   MOVE.w intstring,D1
00033326 <AmiBlitz3.ab3@23826>    BEQ.w JUMP_interr
0003332A <AmiBlitz3.ab3@23827>    BPL.w JL_0_D934
00033330 <AmiBlitz3.ab3@23828>   MOVE.w intlevel,D1
00033334 <AmiBlitz3.ab3@23829>   ORI.w #$7200,D1
00033338 <AmiBlitz3.ab3@23830>    BSR.w writeword
0003333C <AmiBlitz3.ab3@23831>   MOVE.w #$C103,D1
00033340 <AmiBlitz3.ab3@23832>    BSR.w Atokejsr
00033346 <AmiBlitz3.ab3@23833>   CLR.w intlevel
0003334C <AmiBlitz3.ab3@23836>  CLR.w intstring
00033352 <AmiBlitz3.ab3@23837>   MOVE.l intfin,D1
00033356 <AmiBlitz3.ab3@23838>    BSR.w writelong
0003335C <AmiBlitz3.ab3@23839>   MOVE.l #$70004E75,D1
00033360 <AmiBlitz3.ab3@23840>    BSR.w writelong
00033366 <AmiBlitz3.ab3@23841>   MOVE.w dontwrite,D1
0003336A <AmiBlitz3.ab3@23842>    BNE.w JL_0_D962
00033370 <AmiBlitz3.ab3@23843>   MOVEA.l intjmpat,A0
00033374 <AmiBlitz3.ab3@23844>   MOVE.l destpointer(PC),(A0)
0003337A <AmiBlitz3.ab3@23847> JMP get1bytemain
0003337E <AmiBlitz3.ab3@23851>   CMP.w #-$7FF2,D0
00033382 <AmiBlitz3.ab3@23852>    BEQ.w doendsel
00033386 <AmiBlitz3.ab3@23853>   CMP.w #-$7F4C,D0
0003338A <AmiBlitz3.ab3@23854>    BNE.w JL_0_D97C
00033390 <AmiBlitz3.ab3@23855> JMP doendseterr
00033396 <AmiBlitz3.ab3@23859> JMP syntaxerr
0003339C <AmiBlitz3.ab3@23863>   TST.w dirmode
000333A0 <AmiBlitz3.ab3@23864>   BNE.w JUMP_baddirerr
000333A4 <AmiBlitz3.ab3@23865>   MOVE.w #$C800,D1
000333AA <AmiBlitz3.ab3@23866>   JSR Atokejsr                                            ;end
000333B2 <AmiBlitz3.ab3@23867>   CMP.l #"noa7",-4(a5)
000333B6 <AmiBlitz3.ab3@23868>   BNE 'l10
000333BC <AmiBlitz3.ab3@23869>   TST.w dontwrite
000333C0 <AmiBlitz3.ab3@23870>   BNE 'l10
000333C6 <AmiBlitz3.ab3@23871>   MOVE.l destpointer,d1
000333C8 <AmiBlitz3.ab3@23872>   SUBQ.l #4,d1
000333CA <AmiBlitz3.ab3@23873>   MOVE.l a0,-(a7)
000333CC <AmiBlitz3.ab3@23874>   MOVE.l d1,a0
000333CE <AmiBlitz3.ab3@23875>   MOVE.l (a0),a0
000333D4 <AmiBlitz3.ab3@23876>   MOVE.l #$60000002,(a0)+
000333D8 <AmiBlitz3.ab3@23877>   MOVE.w #$588f,(a0)
000333DA <AmiBlitz3.ab3@23878>   MOVE.l (a7)+,a0
000333DC <AmiBlitz3.ab3@23881> RTS
000333E2 <AmiBlitz3.ab3@23885>   TST.w dirmode                                            ;stop
000333E6 <AmiBlitz3.ab3@23886>   BNE.w JUMP_baddirerr
000333E8 <AmiBlitz3.ab3@23887>   MOVE.w d0,d1
000333EC <AmiBlitz3.ab3@23888>   BEQ 'l10
000333F0 <AmiBlitz3.ab3@23889>   CMP.b #$3a,d0
000333F4 <AmiBlitz3.ab3@23890>   BEQ 'l10
000333FA <AmiBlitz3.ab3@23891>   JSR get1bytemain
00033400 <AmiBlitz3.ab3@23894>   TST.b debugmode
00033404 <AmiBlitz3.ab3@23895>   BEQ.w newstop
00033408 <AmiBlitz3.ab3@23896>   MOVE.w #$D501,D1
0003340C <AmiBlitz3.ab3@23897> BRA.w Atokejsr
0003340E <AmiBlitz3.ab3@23901>     RTS
00033410 <AmiBlitz3.ab3@23903>   MOVE.w d1,d0
00033414 <AmiBlitz3.ab3@23904>   BEQ 'l10
00033418 <AmiBlitz3.ab3@23905>   CMP.b #$3a,d0
0003341C <AmiBlitz3.ab3@23906>   BEQ 'l10
00033420 <AmiBlitz3.ab3@23907>   SUB.b #$30,d0
00033424 <AmiBlitz3.ab3@23908>   MOVE.w #$4e40,d1
00033428 <AmiBlitz3.ab3@23909> BRA 'l11
0003342C <AmiBlitz3.ab3@23912>   MOVE.w #$4e4a,d1
00033430 <AmiBlitz3.ab3@23913> BRA writeword
00033432 <AmiBlitz3.ab3@23916>   ADD.b d0,d1
00033436 <AmiBlitz3.ab3@23917> BRA writeword
0003343C <AmiBlitz3.ab3@23921> JMP badconterr
00033440 <AmiBlitz3.ab3@23924>   MOVE.w #$4E71,D1
00033444 <AmiBlitz3.ab3@23925> BRA.w writeword
0003344A <AmiBlitz3.ab3@23928>   MOVEA.l firstfor,A2
00033450 <AmiBlitz3.ab3@23929>   CLR.l firstfor
00033456 <AmiBlitz3.ab3@23930>   MOVEA.l _execbase,A6
0003345A <AmiBlitz3.ab3@23933>   CMPA.w #$0,A2
0003345E <AmiBlitz3.ab3@23934>   BEQ.w JL_0_D9E6
00033460 <AmiBlitz3.ab3@23935>   MOVEA.l A2,A1
00033462 <AmiBlitz3.ab3@23936>   MOVEA.l (A1),A2
00033464 <AmiBlitz3.ab3@23937>   MOVEQ.l #$00,D0
0003346A <AmiBlitz3.ab3@23938>   MOVE.l mempool2,a0
0003346E <AmiBlitz3.ab3@23939>   MOVE.b $10(A1),D0
00033472 <AmiBlitz3.ab3@23940>   JSR _FreePooled(A6)                                      ;freememfor_error
00033476 <AmiBlitz3.ab3@23941> BRA.w JL_0_D9CC
00033478 <AmiBlitz3.ab3@23944> RTS
0003347E <AmiBlitz3.ab3@23948> JMP badpenderr
00033484 <AmiBlitz3.ab3@23954>   MOVE.w proceduremode,D1
00033488 <AmiBlitz3.ab3@23955>    BEQ.w JUMP_badpenderr
0003348E <AmiBlitz3.ab3@23957>   MOVE.w dontwrite,D1
00033492 <AmiBlitz3.ab3@23958>    BNE.w JL_0_DA1A
00033498 <AmiBlitz3.ab3@23959>   MOVEA.l firstpend,A2
0003349C <AmiBlitz3.ab3@23962>   CMPA.w #$0,A2
000334A0 <AmiBlitz3.ab3@23963>    BEQ.w JL_0_DA1A
000334A4 <AmiBlitz3.ab3@23964>   MOVEA.l $4(A2),A0
000334AA <AmiBlitz3.ab3@23965>   MOVE.l destpointer,(A0)
000334AC <AmiBlitz3.ab3@23966>   MOVEA.l (A2),A2
000334B0 <AmiBlitz3.ab3@23967> BRA.w JL_0_DA02
000334B6 <AmiBlitz3.ab3@23970>   TST.b debugmode
000334BA <AmiBlitz3.ab3@23971>    BEQ.b JL_0_DA2A
000334BC <AmiBlitz3.ab3@23972>   MOVEQ.l #$05,D1
000334C2 <AmiBlitz3.ab3@23973>   JSR writetrap
000334C8 <AmiBlitz3.ab3@23976>   MOVEA.l firstlocal,A2                                    ;firstlocal
000334CE <AmiBlitz3.ab3@23977>   JSR calcstatic2b                                           ;calcstatic
000334D4 <AmiBlitz3.ab3@23978>   MOVEA.l currentfunction,A0
000334DA <AmiBlitz3.ab3@23979>   MOVE.l destpointer,d1
000334DE <AmiBlitz3.ab3@23980>   SUB.l $e(a0),d1
000334E2 <AmiBlitz3.ab3@23981>   MOVE.l d1,isfunc+1(a0)                                   ;store function size
000334E6 <AmiBlitz3.ab3@23982>   MOVE.w D4,$8(A0)                                         ;set if memalloc need
000334EC <AmiBlitz3.ab3@23983>   MOVE.l D3,locdatast
000334F2 <AmiBlitz3.ab3@23984>   MOVEA.l tempvm,A1
000334F8 <AmiBlitz3.ab3@23985>  CLR.b infunctioncode
000334FE <AmiBlitz3.ab3@23986>   MOVE.l firstiffstore,d1
00033504 <AmiBlitz3.ab3@23987>   CMP.l firstiff,d1
00033508 <AmiBlitz3.ab3@23988>   BNE JUMP_noenderr
0003350C <AmiBlitz3.ab3@23989>   TST.w $C(A1)                                             ;dim
00033510 <AmiBlitz3.ab3@23990>    BPL.w JL_0_DA64
00033516 <AmiBlitz3.ab3@23991>  BSET #$7,$8(A0)
0003351A <AmiBlitz3.ab3@23992>   MOVE.w #$C005,D1
0003351E <AmiBlitz3.ab3@23993>    BSR.w tokejsr2                                          ;writefreememstatement
00033522 <AmiBlitz3.ab3@23994> BRA.w JL_0_DA6C
00033528 <AmiBlitz3.ab3@23997> JMP noenderr
00033530 <AmiBlitz3.ab3@24000>   MOVE.w memlibstat,$C(A1)
00033536 <AmiBlitz3.ab3@24003>   MOVEA.l currentfunction,A0
0003353A <AmiBlitz3.ab3@24004>   MOVE.l $E(A0),-(A7)
00033542 <AmiBlitz3.ab3@24005>   MOVE.w locvaroff,$6(A0)
00033548 <AmiBlitz3.ab3@24006>   BCLR #$1,$7(A0)
0003354E <AmiBlitz3.ab3@24007>   BCLR #$0,$7(A0)
00033554 <AmiBlitz3.ab3@24008>   CMPI.b #$7,$5(A0)
00033558 <AmiBlitz3.ab3@24009>    BNE.w JL_0_DA9E
0003355E <AmiBlitz3.ab3@24010>   MOVE.w getstlen,D1
00033562 <AmiBlitz3.ab3@24011>    BSR.w writeword
00033566 <AmiBlitz3.ab3@24014>   TST.w $6(A0)
0003356A <AmiBlitz3.ab3@24015>    BEQ.w JL_0_DAB8
0003356E <AmiBlitz3.ab3@24016>   MOVE.w #$FC7B,D1
00033574 <AmiBlitz3.ab3@24017>    JSR uselib
0003357A <AmiBlitz3.ab3@24018>   MOVE.w unlinka4,D1
00033580 <AmiBlitz3.ab3@24019>    JSR writeword
00033586 <AmiBlitz3.ab3@24022>   MOVEA.l currentfunction,A0
00033588 <AmiBlitz3.ab3@24023>   MOVEQ.l #$00,D1
0003358C <AmiBlitz3.ab3@24024>   MOVE.b $4(A0),D1
0003358E <AmiBlitz3.ab3@24025>   LSR.w #4,D1
00033592 <AmiBlitz3.ab3@24026>    BEQ.w JL_0_DB24
00033594 <AmiBlitz3.ab3@24028>      LSL.w #1,d1
00033598 <AmiBlitz3.ab3@24030>   CMP.w #$1,D1
0003359C <AmiBlitz3.ab3@24031>    BNE.w JL_0_DAE0
000335A2 <AmiBlitz3.ab3@24032>   MOVE.w fix1,D1
000335A8 <AmiBlitz3.ab3@24033>    JSR writeword
000335AC <AmiBlitz3.ab3@24034> BRA.w JL_0_DB24
000335AE <AmiBlitz3.ab3@24037>   LSL.w #2,D1
000335B0 <AmiBlitz3.ab3@24038>   MOVE.w D1,-(A7)
000335B6 <AmiBlitz3.ab3@24039>   MOVE.w D1,moverts+2
000335BC <AmiBlitz3.ab3@24040>   MOVE.l moverts,D1
000335C2 <AmiBlitz3.ab3@24041>    JSR writelong
000335C4 <AmiBlitz3.ab3@24042>   MOVE.w (A7)+,D1
000335C8 <AmiBlitz3.ab3@24043>   CMP.w #$8,D1
000335CC <AmiBlitz3.ab3@24044>    BHI.w JL_0_DB14
000335D0 <AmiBlitz3.ab3@24045>   ANDI.w #$7,D1
000335D2 <AmiBlitz3.ab3@24046>   LSL.w #8,D1
000335D4 <AmiBlitz3.ab3@24047>   LSL.w #1,D1
000335DA <AmiBlitz3.ab3@24048>   OR.w fixq,D1
000335E0 <AmiBlitz3.ab3@24049>    JSR writeword
000335E4 <AmiBlitz3.ab3@24050> BRA.w JL_0_DB24
000335EA <AmiBlitz3.ab3@24054>    MOVE.w D1,fixstack+2
000335F0 <AmiBlitz3.ab3@24055>   MOVE.l fixstack,D1
000335F6 <AmiBlitz3.ab3@24056>    JSR writelong
000335FA <AmiBlitz3.ab3@24059>    BSR.w JL_0_D2CA
000335FE <AmiBlitz3.ab3@24060>    BSR.w JL_0_D4F8
00033600 <AmiBlitz3.ab3@24061>   MOVEA.l (A7)+,A0
00033606 <AmiBlitz3.ab3@24062>   MOVE.w dontwrite,D1
0003360A <AmiBlitz3.ab3@24063>    BNE.w JL_0_DB3E
00033610 <AmiBlitz3.ab3@24064>   MOVE.l destpointer,-(A0)
00033616 <AmiBlitz3.ab3@24067>   CLR.w proceduremode
0003361C <AmiBlitz3.ab3@24068>   CLR.l currentfunction
00033622 <AmiBlitz3.ab3@24069>   CLR.w procnum
00033626 <AmiBlitz3.ab3@24070>    BSR.w JL_0_DB5C
0003362C <AmiBlitz3.ab3@24071>    JSR freepends
00033632 <AmiBlitz3.ab3@24072> JMP get1bytemain
00033634 <AmiBlitz3.ab3@24075>   MOVEQ.l #$0C,D0
00033636 <AmiBlitz3.ab3@24076>   MOVEQ.l #$01,D1
0003363C <AmiBlitz3.ab3@24077>   MOVEA.l _execbase,A6
00033642 <AmiBlitz3.ab3@24079>   MOVE.l mempool,a0
00033646 <AmiBlitz3.ab3@24080>   JSR _AllocPooled(a6)
00033648 <AmiBlitz3.ab3@24081>   MOVEA.l D0,A0
0003364E <AmiBlitz3.ab3@24082>   MOVE.l alllocals,(A0)
00033654 <AmiBlitz3.ab3@24083>   MOVE.l A0,alllocals
0003365A <AmiBlitz3.ab3@24084>   MOVE.l firstlocal,D0
00033660 <AmiBlitz3.ab3@24085>   CLR.l firstlocal
00033664 <AmiBlitz3.ab3@24086>   MOVE.l D0,$4(A0)
0003366A <AmiBlitz3.ab3@24087>   MOVE.l firstglob,D1
00033670 <AmiBlitz3.ab3@24088>   CLR.l firstglob
00033674 <AmiBlitz3.ab3@24089>   MOVE.l D1,$8(A0)
0003367A <AmiBlitz3.ab3@24090>   TST.b debugmode
0003367E <AmiBlitz3.ab3@24091>    BEQ.b JL_0_DBB0
00033684 <AmiBlitz3.ab3@24092>   TST.w dontwrite
00033688 <AmiBlitz3.ab3@24093>    BNE.b JL_0_DBB0
0003368C <AmiBlitz3.ab3@24094>   MOVEA.l proclocals(PC),A0
0003368E <AmiBlitz3.ab3@24095>   MOVE.l D0,(A0)+
00033690 <AmiBlitz3.ab3@24096>   MOVE.l D1,(A0)
00033692 <AmiBlitz3.ab3@24099> RTS
00033698 <AmiBlitz3.ab3@24102> JMP baddirerr
0003369E <AmiBlitz3.ab3@24106>   TST.w dirmode
000336A2 <AmiBlitz3.ab3@24107>    BNE.w JUMP_baddirerr
000336A8 <AmiBlitz3.ab3@24108>   MOVE.l firstfor,D1
000336AC <AmiBlitz3.ab3@24109>    BEQ.w JUMP_noforerr
000336B2 <AmiBlitz3.ab3@24110>   JSR reget
000336B6 <AmiBlitz3.ab3@24111>    BEQ.w JL_0_DC18
000336BA <AmiBlitz3.ab3@24114>   BSR.w getparameter
000336BE <AmiBlitz3.ab3@24115>   MOVEA.l firstfor(PC),A2
000336C0 <AmiBlitz3.ab3@24116>   MOVEQ.l #$00,D1
000336C4 <AmiBlitz3.ab3@24117>   MOVE.b $10(A2),D1
000336C8 <AmiBlitz3.ab3@24118>   SUBI.w #$12,D1
000336CA <AmiBlitz3.ab3@24119>   CMP.w D1,D2
000336CE <AmiBlitz3.ab3@24120>    BNE.w JUMP_noforerr
000336D2 <AmiBlitz3.ab3@24121>   LEA ptr_parameterstore(PC),A0
000336D6 <AmiBlitz3.ab3@24122>   LEA $11(A2),A1
000336D8 <AmiBlitz3.ab3@24123>   SUBQ.w #1,D2
000336DA <AmiBlitz3.ab3@24126>     CMPM.b (A0)+,(A1)+
000336DE <AmiBlitz3.ab3@24127>     BNE.w JUMP_noforerr
000336E2 <AmiBlitz3.ab3@24128>   DBF D2,JL_0_DBF0
000336E6 <AmiBlitz3.ab3@24130>    BSR.w JL_0_DC1A
000336EC <AmiBlitz3.ab3@24131>    JSR reget
000336F0 <AmiBlitz3.ab3@24132>    BEQ.w JL_0_DC16
000336F4 <AmiBlitz3.ab3@24133>   CMP.w #$2C,D0
000336F8 <AmiBlitz3.ab3@24134>    BNE.w JUMP_syntaxerr
000336FE <AmiBlitz3.ab3@24135>    JSR get1bytemain
00033702 <AmiBlitz3.ab3@24136> BRA.w JL_0_DBCE
00033708 <AmiBlitz3.ab3@24139> JMP noforerr
0003370A <AmiBlitz3.ab3@24142> RTS
0003370E <AmiBlitz3.ab3@24146>   MOVE.l 8(a7),a2
00033712 <AmiBlitz3.ab3@24147>   Dc.l  $f2124400                                          ;fmove.s (a2),fp0
00033716 <AmiBlitz3.ab3@24148>   Dc.l  $F2174422                                          ;fadd.s (a7),fp0
0003371A <AmiBlitz3.ab3@24149>   Dc.l  $F2126400                                          ;fmove.s fp0,(a2)
0003371C <AmiBlitz3.ab3@24153>   MOVEA.l D1,A2
00033722 <AmiBlitz3.ab3@24156>   JSR popnext                                           ;error checking for next.
00033726 <AmiBlitz3.ab3@24157>   MOVE.w $C(A2),D0
0003372C <AmiBlitz3.ab3@24158>   LEA nextb,A0
00033732 <AmiBlitz3.ab3@24159>   LEA nextbf,A1
00033736 <AmiBlitz3.ab3@24160>   CMP.w #$1,D0
0003373A <AmiBlitz3.ab3@24161>    BEQ.w JL_0_DC74
00033740 <AmiBlitz3.ab3@24162>   LEA nextw,A0
00033746 <AmiBlitz3.ab3@24163>   LEA nextwf,A1
0003374A <AmiBlitz3.ab3@24164>   CMP.w #$2,D0
0003374E <AmiBlitz3.ab3@24165>    BEQ.w JL_0_DC74
00033754 <AmiBlitz3.ab3@24166>   LEA nextl,A0
0003375A <AmiBlitz3.ab3@24167>   LEA nextlf,A1
0003375E <AmiBlitz3.ab3@24168>   CMP.w #$5,D0
00033762 <AmiBlitz3.ab3@24169>    BNE.w JL_0_DC74
00033768 <AmiBlitz3.ab3@24170>    TST.b fpu
0003376C <AmiBlitz3.ab3@24171>    BEQ 'old
00033772 <AmiBlitz3.ab3@24172>    LEA fpu2dats,a0                                         ;fpu next code
00033778 <AmiBlitz3.ab3@24173>    LEA fpu2date,a1
0003377C <AmiBlitz3.ab3@24174> BRA JL_0_DC74
00033780 <AmiBlitz3.ab3@24177>   MOVE.w #$C900,D1
00033784 <AmiBlitz3.ab3@24178>    BSR.w Atokejsr
0003378A <AmiBlitz3.ab3@24179>   LEA nextf,A0
00033790 <AmiBlitz3.ab3@24180>   LEA nextff,A1
00033796 <AmiBlitz3.ab3@24183>   JSR pokecode
0003379C <AmiBlitz3.ab3@24184>     TST.b fast                                             ;fast for next deactivate
000337A0 <AmiBlitz3.ab3@24185> BRA 'l1
000337A6 <AmiBlitz3.ab3@24187>     TST.b onestep
000337AA <AmiBlitz3.ab3@24188>     BEQ 'l1
000337B0 <AmiBlitz3.ab3@24189>     CLR.b onestep
000337B6 <AmiBlitz3.ab3@24190>     SUBQ.l #4,destpointer
000337BA <AmiBlitz3.ab3@24191>     MOVE.w #$5292,d1
000337C0 <AmiBlitz3.ab3@24192>     JSR writeword
000337C4 <AmiBlitz3.ab3@24195>   MOVE.l JL_0_DCF4(PC),D1
000337CA <AmiBlitz3.ab3@24196>    JSR writelong
000337D0 <AmiBlitz3.ab3@24197>   MOVEA.l firstfor,A2
000337D6 <AmiBlitz3.ab3@24198>   MOVE.l (A2),firstfor
000337DA <AmiBlitz3.ab3@24199>   MOVEA.l $8(A2),A0
000337E0 <AmiBlitz3.ab3@24200>   MOVEA.l destpointer,A1
000337E2 <AmiBlitz3.ab3@24201>   MOVE.l A1,D1
000337E4 <AmiBlitz3.ab3@24202>   SUB.l A0,D1
000337E6 <AmiBlitz3.ab3@24203>   ADDQ.l #2,D1
000337EC <AmiBlitz3.ab3@24204>   CMP.l #MinWordSgnd,D1
000337F0 <AmiBlitz3.ab3@24205>    BCC.w JUMP_bigforerr
000337F6 <AmiBlitz3.ab3@24206>   TST.w dontwrite
000337FA <AmiBlitz3.ab3@24207>    BNE.w JL_0_DCB4
000337FE <AmiBlitz3.ab3@24208>   MOVE.w D1,-$2(A0)
00033800 <AmiBlitz3.ab3@24211>   MOVE.l A1,D1
00033804 <AmiBlitz3.ab3@24212>   SUB.l $4(A2),D1
00033806 <AmiBlitz3.ab3@24213>   SUBQ.l #6,D1
0003380C <AmiBlitz3.ab3@24214>   CMP.l #MinWordSgnd,D1
00033810 <AmiBlitz3.ab3@24215>    BCC.w JUMP_bigforerr
00033816 <AmiBlitz3.ab3@24216>   TST.w dontwrite
0003381A <AmiBlitz3.ab3@24217>    BNE.w JL_0_DCD6
0003381C <AmiBlitz3.ab3@24218>   NEG.w D1
00033820 <AmiBlitz3.ab3@24219>   MOVE.w D1,-$2(A1)
00033826 <AmiBlitz3.ab3@24222>   JSR popnext3
0003382C <AmiBlitz3.ab3@24223>   MOVEA.l _execbase,A6
0003382E <AmiBlitz3.ab3@24224>   MOVEA.l A2,A1
00033830 <AmiBlitz3.ab3@24225>   MOVEQ.l #$00,D0
00033834 <AmiBlitz3.ab3@24226>   MOVE.b $10(A1),D0
0003383A <AmiBlitz3.ab3@24227>   MOVE.l mempool2,a0
0003383E <AmiBlitz3.ab3@24228>   JSR _FreePooled(A6)
00033844 <AmiBlitz3.ab3@24229> JMP reget
0003384A <AmiBlitz3.ab3@24232> JMP notallowd
00033850 <AmiBlitz3.ab3@24235> JMP bigforerr
00033854 <AmiBlitz3.ab3@24242>   MOVE.w #$664F,-(A7)
00033858 <AmiBlitz3.ab3@24245> BRA.w JL_0_DCF4
0003385E <AmiBlitz3.ab3@24248> JMP error_dublicate_for
00033862 <AmiBlitz3.ab3@24251> forlineat:   Ds.l 1
00033864 <AmiBlitz3.ab3@24252> fortemp:     Ds.w 1
0003386A <AmiBlitz3.ab3@24259>   CLR.l fp0addr
00033870 <AmiBlitz3.ab3@24260>   TST.w dirmode
00033874 <AmiBlitz3.ab3@24261>    BNE.w JUMP_baddirerr
0003387E <AmiBlitz3.ab3@24262>   MOVE.l linenumat,forlineat
00033884 <AmiBlitz3.ab3@24266>   MOVE.l A5,letstart
00033888 <AmiBlitz3.ab3@24267>   BSR.w getparameter
0003388E <AmiBlitz3.ab3@24268>   MOVE.w D2,fortemp
00033894 <AmiBlitz3.ab3@24269>   JSR findfor
00033898 <AmiBlitz3.ab3@24270>    BEQ.w JUMP_error_dublicate_for
0003389E <AmiBlitz3.ab3@24271>   LEA firstfor,A2
000338A4 <AmiBlitz3.ab3@24272>   JSR addhere2
000338A6 <AmiBlitz3.ab3@24273>   MOVE.l A2,-(A7)
000338AC <AmiBlitz3.ab3@24274>   TST.b debugmode
000338B0 <AmiBlitz3.ab3@24275>    BEQ.b JL_0_DD4C
000338B6 <AmiBlitz3.ab3@24276>   JSR chkstak
000338BC <AmiBlitz3.ab3@24277>   MOVE.l AJL_0_DCF0,D1
000338C2 <AmiBlitz3.ab3@24278>   JSR  writelong
000338C6 <AmiBlitz3.ab3@24281>   MOVE.w fortemp(PC),D2
000338CE <AmiBlitz3.ab3@24282>   MOVE.b #1,formode
000338D2 <AmiBlitz3.ab3@24283>   BSR.w AJL_0_DEA6                                         ;for get 1. value
000338D8 <AmiBlitz3.ab3@24284>   CLR.b formode
000338DC <AmiBlitz3.ab3@24285>   CMP.w #-$7FE8,D0
000338E0 <AmiBlitz3.ab3@24286>    BNE.w JUMP_syntaxerr
000338E6 <AmiBlitz3.ab3@24287>   MOVE.w commode,D1
000338EA <AmiBlitz3.ab3@24288>    BNE.w JUMP_syntaxerr
000338EE <AmiBlitz3.ab3@24289>   CMP.b #$6,D2
000338F2 <AmiBlitz3.ab3@24290>    BCC.w JUMP_badforerr
000338F6 <AmiBlitz3.ab3@24291>   BTST #$F,D2
000338FA <AmiBlitz3.ab3@24292>    BNE.w JL_0_DD86
00033900 <AmiBlitz3.ab3@24293>   MOVE.w leaamp,D1
00033906 <AmiBlitz3.ab3@24294>   JSR pokewda5s
00033908 <AmiBlitz3.ab3@24295>   MOVE.w D3,D1
0003390E <AmiBlitz3.ab3@24296>   JSR  writeword
00033914 <AmiBlitz3.ab3@24299>   MOVE.w pushindex,D1
0003391A <AmiBlitz3.ab3@24300>   JSR  writeword
0003391E <AmiBlitz3.ab3@24301>   ANDI.w #$FF,D2
00033920 <AmiBlitz3.ab3@24303>   MOVEA.l (A7),A1
00033924 <AmiBlitz3.ab3@24304>   MOVE.w D2,$C(A1)
00033926 <AmiBlitz3.ab3@24305>   MOVE.w D2,-(A7)
0003392A <AmiBlitz3.ab3@24306>    BSR.w eval
00033930 <AmiBlitz3.ab3@24307>    CLR.b onestep
00033934 <AmiBlitz3.ab3@24308>    CMP.w #$8019,d0
00033938 <AmiBlitz3.ab3@24309>    BEQ 'l1
00033940 <AmiBlitz3.ab3@24310>    MOVE.b #1,onestep
00033942 <AmiBlitz3.ab3@24313>   MOVE.w (A7),D2
00033948 <AmiBlitz3.ab3@24314>   MOVE.w pushd0l,D1
0003394C <AmiBlitz3.ab3@24315>   CMP.w #$3,D2
00033950 <AmiBlitz3.ab3@24316>    BCC.w JL_0_DDB6
00033956 <AmiBlitz3.ab3@24317>   MOVE.w pushd0wd,D1
00033958 <AmiBlitz3.ab3@24320>    MOVE.w D1,-(A7)
0003395E <AmiBlitz3.ab3@24321>    TST.b fpu
00033962 <AmiBlitz3.ab3@24322>    BEQ 'old
00033966 <AmiBlitz3.ab3@24323>    CMP.b #5,d2
0003396A <AmiBlitz3.ab3@24324>    BNE 'old
00033970 <AmiBlitz3.ab3@24325>    MOVE.l #$f2276400,d1
00033976 <AmiBlitz3.ab3@24327>    JSR writelong
0003397A <AmiBlitz3.ab3@24328> BRA 'weit
00033980 <AmiBlitz3.ab3@24331>    JSR  writeword                                          ;fpu for end value
00033984 <AmiBlitz3.ab3@24334>   CMP.w #-$7FE7,D0
00033988 <AmiBlitz3.ab3@24335>    BNE.w JL_0_DDCC
0003398C <AmiBlitz3.ab3@24336>    BSR.w eval
00033992 <AmiBlitz3.ab3@24337>    TST.b fpu
00033996 <AmiBlitz3.ab3@24338>    BEQ JL_0_DE0C
0003399A <AmiBlitz3.ab3@24339>    CMP.b #5,d2
0003399E <AmiBlitz3.ab3@24340>    BNE JL_0_DE0C
000339A4 <AmiBlitz3.ab3@24341>    MOVE.l #$f2276400,d1                                    ;write step <> 1
000339AA <AmiBlitz3.ab3@24343>   JSR writelong
000339AC <AmiBlitz3.ab3@24346>    MOVE.w (a7)+,d1
000339B0 <AmiBlitz3.ab3@24347> BRA fpur
000339B4 <AmiBlitz3.ab3@24350>   CMP.w #$4,D2
000339B8 <AmiBlitz3.ab3@24351>    BCC.w JL_0_DDE0
000339BC <AmiBlitz3.ab3@24352>   MOVE.w #$7001,D1
000339C2 <AmiBlitz3.ab3@24353>   JSR writeword
000339C6 <AmiBlitz3.ab3@24354> BRA.w JL_0_DE0C
000339CC <AmiBlitz3.ab3@24357> JMP badforerr
000339D0 <AmiBlitz3.ab3@24360>   BNE.w JL_0_DDFA
000339D4 <AmiBlitz3.ab3@24361>   MOVE.w #$7001,D1
000339DA <AmiBlitz3.ab3@24362>   JSR writeword
000339E0 <AmiBlitz3.ab3@24363>   MOVE.w swapd0,D1
000339E6 <AmiBlitz3.ab3@24364>   JSR writeword
000339EA <AmiBlitz3.ab3@24365> BRA.w JL_0_DE0C
000339F0 <AmiBlitz3.ab3@24368>   TST.b fpu
000339F4 <AmiBlitz3.ab3@24369>    BEQ 'old
000339F8 <AmiBlitz3.ab3@24370>   CMP.b #5,d2
000339FC <AmiBlitz3.ab3@24371>    BNE 'old
00033A02 <AmiBlitz3.ab3@24372>   MOVE.l #$f23c5000,d1
00033A08 <AmiBlitz3.ab3@24373>   JSR writelong
00033A0C <AmiBlitz3.ab3@24374>   MOVE.w #$1,d1
00033A12 <AmiBlitz3.ab3@24375>   JSR writeword
00033A18 <AmiBlitz3.ab3@24376>   MOVE.l #$f2276400,d1
00033A1E <AmiBlitz3.ab3@24377>   JSR writelong
00033A20 <AmiBlitz3.ab3@24378>   MOVE.w (a7)+,d1
00033A24 <AmiBlitz3.ab3@24379> BRA fpur
00033A28 <AmiBlitz3.ab3@24382>   MOVE.w #$203C,D1                                         ;write step 1
00033A2E <AmiBlitz3.ab3@24383>   JSR writeword
00033A34 <AmiBlitz3.ab3@24384>   MOVE.l #$80000041,D1                                     ;ffp '1'
00033A3A <AmiBlitz3.ab3@24385>   JSR writelong
00033A3C <AmiBlitz3.ab3@24388>   MOVE.w (A7)+,D1
00033A42 <AmiBlitz3.ab3@24389>   JSR writeword                                            ;push step on stack
00033A44 <AmiBlitz3.ab3@24392>   MOVE.w (A7)+,D2
00033A46 <AmiBlitz3.ab3@24393>   MOVEA.l (A7),A1
00033A4E <AmiBlitz3.ab3@24394>   MOVE.l destpointer,$4(A1)
00033A54 <AmiBlitz3.ab3@24395>   LEA forcompb,A0
00033A5A <AmiBlitz3.ab3@24396>   LEA forcompbf,A1
00033A5E <AmiBlitz3.ab3@24397>   CMP.w #$1,D2
00033A62 <AmiBlitz3.ab3@24398>    BEQ.w JL_0_DE7E
00033A68 <AmiBlitz3.ab3@24399>   LEA forcompw,A0
00033A6E <AmiBlitz3.ab3@24400>   LEA forcompwf,A1
00033A72 <AmiBlitz3.ab3@24401>   CMP.w #$2,D2
00033A76 <AmiBlitz3.ab3@24402>    BEQ.w JL_0_DE7E
00033A7C <AmiBlitz3.ab3@24403>   LEA forcompl,A0
00033A82 <AmiBlitz3.ab3@24404>   LEA forcomplf,A1
00033A86 <AmiBlitz3.ab3@24405>   CMP.w #$5,D2
00033A8A <AmiBlitz3.ab3@24406>    BNE.w JL_0_DE7E
00033A90 <AmiBlitz3.ab3@24407>   TST.b fpu
00033A94 <AmiBlitz3.ab3@24408>    BEQ 'old
00033A9A <AmiBlitz3.ab3@24409>   LEA fpu_start,a0
00033AA0 <AmiBlitz3.ab3@24410>   LEA fpu_end,a1
00033AA6 <AmiBlitz3.ab3@24411>   JSR pokecode
00033AAA <AmiBlitz3.ab3@24412> BRA fpu3
00033AB0 <AmiBlitz3.ab3@24415>   LEA forcompf,A0                                         ;
00033AB6 <AmiBlitz3.ab3@24416>   LEA forcompff,A1
00033ABC <AmiBlitz3.ab3@24417>   JSR pokecode
00033AC0 <AmiBlitz3.ab3@24418>   MOVE.w #$C900,D1
00033AC4 <AmiBlitz3.ab3@24419>   BSR.w Atokejsr
00033ACA <AmiBlitz3.ab3@24420>   LEA forcompf2,A0
00033AD0 <AmiBlitz3.ab3@24421>   LEA forcompf2f,A1
00033AD6 <AmiBlitz3.ab3@24424>   JSR pokecode
00033ADC <AmiBlitz3.ab3@24425>   TST.b fast                                               ;fast for next
00033AE0 <AmiBlitz3.ab3@24426>    BEQ 's1
00033AE4 <AmiBlitz3.ab3@24427>   CMP.w #3,d2
00033AE8 <AmiBlitz3.ab3@24428>    BNE 's1
00033AEE <AmiBlitz3.ab3@24429>   TST.b onestep
00033AF2 <AmiBlitz3.ab3@24430>    BEQ 's1
00033AFC <AmiBlitz3.ab3@24431>   SUB.l #10,destpointer
00033B00 <AmiBlitz3.ab3@24432>   MOVE.w #$b081,d1
00033B06 <AmiBlitz3.ab3@24433>   JSR writeword
00033B0A <AmiBlitz3.ab3@24437>   MOVE.l thebgt(PC),D1
00033B10 <AmiBlitz3.ab3@24438>   JSR writelong
00033B12 <AmiBlitz3.ab3@24441>   MOVEA.l (A7)+,A1
00033B1A <AmiBlitz3.ab3@24442>   MOVE.l destpointer,$8(A1)
00033B20 <AmiBlitz3.ab3@24443> JMP reget
00033B24 <AmiBlitz3.ab3@24446>   MOVEA.l 8(a7),a2
00033B28 <AmiBlitz3.ab3@24447>   Dc.l $f2124400                                           ;fmove.s (a2),fp0
00033B2E <AmiBlitz3.ab3@24448>   fmove.s 4(a7),fp1
00033B32 <AmiBlitz3.ab3@24449>   BTST.b #7,(a7)
00033B36 <AmiBlitz3.ab3@24450>   BNE 'negi
00033B3A <AmiBlitz3.ab3@24451>   fcmp.x fp1,fp0
00033B3E <AmiBlitz3.ab3@24452> BRA 'negi2
00033B42 <AmiBlitz3.ab3@24455>   fcmp.x fp0,fp1
00033B46 <AmiBlitz3.ab3@24458>   Dc.l $f2920000                                           ;fbgt.w
00033B4A <AmiBlitz3.ab3@24462>   BGT.w thebgt
00033B50 <AmiBlitz3.ab3@24465>   MOVE.l A5,letstart
00033B56 <AmiBlitz3.ab3@24466>   JSR getparameter
00033B60 <AmiBlitz3.ab3@24472>   MOVE.l destpointer,pushpc
00033B6A <AmiBlitz3.ab3@24473>   MOVE.l hunkoffsetbase,pushoff
00033B70 <AmiBlitz3.ab3@24474>   CLR.l rightsidetype
00033B76 <AmiBlitz3.ab3@24475>   CLR.w rightsideflagmask
00033B7E <AmiBlitz3.ab3@24476>   MOVE.w #$0001,regnum
00033B84 <AmiBlitz3.ab3@24477>   JSR JL_0_8E3C
00033B8A <AmiBlitz3.ab3@24478>   JSR calcvar
00033B90 <AmiBlitz3.ab3@24479>   TST.b formode
00033B94 <AmiBlitz3.ab3@24480>   BEQ 'lf1
00033B9A <AmiBlitz3.ab3@24481>   CMP.l #newtype_double,A2
00033B9E <AmiBlitz3.ab3@24482>   BEQ JUMP_notallowd
00033BA4 <AmiBlitz3.ab3@24483>   MOVE.l a2,currtype
00033BAA <AmiBlitz3.ab3@24486>   CLR.w startoffsetmore
00033BAE <AmiBlitz3.ab3@24487>   CMP.w #$3d,d0
00033BB2 <AmiBlitz3.ab3@24488>   BNE 'l1a
00033BB6 <AmiBlitz3.ab3@24489>   BTST #15,d2
00033BBA <AmiBlitz3.ab3@24490>   BEQ 'l1a
00033BBE <AmiBlitz3.ab3@24491>   CMP.b #1,d2
00033BC2 <AmiBlitz3.ab3@24492>   BNE 'l1a
00033BCC <AmiBlitz3.ab3@24493>   MOVE.w leaa0a0+2,startoffsetmore
00033BD2 <AmiBlitz3.ab3@24496>   CLR.w regnum
00033BD6 <AmiBlitz3.ab3@24497>   BSR.w JL_0_B5D2
00033BDC <AmiBlitz3.ab3@24498>   CLR.w commode
00033BE2 <AmiBlitz3.ab3@24499>   CLR.w stackcorrect
00033BE8 <AmiBlitz3.ab3@24500>   CLR.w pcodd
00033BEE <AmiBlitz3.ab3@24501>   MOVE.w startoffsetmore,d1
00033BF2 <AmiBlitz3.ab3@24502>   BTST #0,d1
00033BF6 <AmiBlitz3.ab3@24503>   BEQ 'l2a
00033BFE <AmiBlitz3.ab3@24504>   MOVE.w #1,pcodd
00033C02 <AmiBlitz3.ab3@24507>   CMP.w #$3D,D0                                            ;=
00033C06 <AmiBlitz3.ab3@24508>   BEQ.w JL_0_DEE0
00033C08 <AmiBlitz3.ab3@24511>   MOVE.b (a5)+,d1
00033C0C <AmiBlitz3.ab3@24512>   BEQ 'l10
00033C10 <AmiBlitz3.ab3@24513>   CMP.b #":",d1
00033C14 <AmiBlitz3.ab3@24514>   BEQ 'l10
00033C18 <AmiBlitz3.ab3@24515>   CMP.b #";",d1
00033C1C <AmiBlitz3.ab3@24516>   BEQ 'l10
00033C20 <AmiBlitz3.ab3@24517>   CMP.b #"0",d1
00033C24 <AmiBlitz3.ab3@24518>   BLT 'l11
00033C28 <AmiBlitz3.ab3@24519>   CMP.b #"9",d1
00033C2C <AmiBlitz3.ab3@24520>   BGT 'l11
00033C30 <AmiBlitz3.ab3@24521> BRA.s 'l1
00033C38 <AmiBlitz3.ab3@24524>   MOVE.b #1,quickadd
00033C3E <AmiBlitz3.ab3@24527>   MOVEA.l letstart,A5
00033C40 <AmiBlitz3.ab3@24528>   SUBQ.w #1,A5
00033C44 <AmiBlitz3.ab3@24531>   CMP.b #$7,D2
00033C48 <AmiBlitz3.ab3@24532>    BNE.w JL_0_DF8A
00033C4C <AmiBlitz3.ab3@24538>   MOVEM.w D2-D3,-(A7)
00033C52 <AmiBlitz3.ab3@24539>   MOVE.l lastoffset_org,-(A7)
00033C58 <AmiBlitz3.ab3@24540>   MOVE.w varmode,-(A7)
00033C62 <AmiBlitz3.ab3@24542>    MOVE.l #forthstack,forthsp
00033C6C <AmiBlitz3.ab3@24543>    MOVE.l #precstack,precsp
00033C72 <AmiBlitz3.ab3@24544>    CLR.w regnum
00033C78 <AmiBlitz3.ab3@24545>    CLR.w nonew
00033C7E <AmiBlitz3.ab3@24546>    CLR.w sbasegot
00033C88 <AmiBlitz3.ab3@24547>    MOVE.w varcodelen,oldvcodelen
00033C8E <AmiBlitz3.ab3@24548>    CLR.w varcodelen
00033C96 <AmiBlitz3.ab3@24549>    MOVE.w #$FFFF,lasta6
00033C98 <AmiBlitz3.ab3@24552>   MOVEQ.l #$07,D2
00033C9C <AmiBlitz3.ab3@24553>    BSR.w eval
00033CA2 <AmiBlitz3.ab3@24554>   MOVE.w (A7)+,varmode
00033CA8 <AmiBlitz3.ab3@24555>   MOVE.l (A7)+,lastoffset_org
00033CAE <AmiBlitz3.ab3@24556>   MOVE.w moved0a3,D1
00033CB4 <AmiBlitz3.ab3@24557>    JSR writeword
00033CBA <AmiBlitz3.ab3@24558>   MOVE.w commode,D1
00033CBE <AmiBlitz3.ab3@24559>    BEQ.w JL_0_DF38
00033CC4 <AmiBlitz3.ab3@24560>   LEA pulla2st,A0
00033CCA <AmiBlitz3.ab3@24561>   LEA pulla2stf,A1
00033CD0 <AmiBlitz3.ab3@24562>    JSR pokecode
00033CD4 <AmiBlitz3.ab3@24563> BRA.w JL_0_DF3C
00033CD8 <AmiBlitz3.ab3@24566>   BSR.w JL_0_B63C
00033CDC <AmiBlitz3.ab3@24569>   MOVEM.w (A7)+,D2-D3
00033CE0 <AmiBlitz3.ab3@24570>   BTST #$F,D2
00033CE4 <AmiBlitz3.ab3@24571>   BNE.w JL_0_DF58
00033CEA <AmiBlitz3.ab3@24572>     MOVE.w D3,leaa5d3a2+2
00033CF0 <AmiBlitz3.ab3@24573>     MOVE.l leaa5d3a2,D1
00033CF6 <AmiBlitz3.ab3@24574>     JSR pokela5s
00033CFA <AmiBlitz3.ab3@24577>   MOVE.w #$FE6F,D1
00033D00 <AmiBlitz3.ab3@24578>   JSR uselib
00033D06 <AmiBlitz3.ab3@24579>   MOVE.l #$C700,D1
00033D0C <AmiBlitz3.ab3@24580>   MOVE.l d1,lastinstruction
00033D12 <AmiBlitz3.ab3@24581>   MOVE.w varmode,D2
00033D16 <AmiBlitz3.ab3@24582>   BNE.w JL_0_DF70
00033D18 <AmiBlitz3.ab3@24583>     ADDQ.w #1,D1
00033D1C <AmiBlitz3.ab3@24586>   BSR.w Atokejsr
00033D20 <AmiBlitz3.ab3@24587>   CMP.w #$2C,D0
00033D24 <AmiBlitz3.ab3@24588>   BNE.w JL_0_E0C6
00033D2A <AmiBlitz3.ab3@24590>   MOVE.w addq4a2,D1
00033D30 <AmiBlitz3.ab3@24591>   JSR writeword
00033D34 <AmiBlitz3.ab3@24592> BRA.w JL_0_E018
00033D3A <AmiBlitz3.ab3@24595> JMP error4char
00033D40 <AmiBlitz3.ab3@24598> JMP error_convert_types
00033D44 <AmiBlitz3.ab3@24602>    BTST #$E,D2
00033D48 <AmiBlitz3.ab3@24603>    BNE.w JL_0_DF9C
00033D4A <AmiBlitz3.ab3@24604>   TST.b D2
00033D4E <AmiBlitz3.ab3@24605>    BEQ.w JUMP_noleterr
00033D54 <AmiBlitz3.ab3@24606>    TST.b newsyntax
00033D58 <AmiBlitz3.ab3@24607>    BEQ JL_0_DFA0
00033D5C <AmiBlitz3.ab3@24610>    CMP.w #$4022,(a5)
00033D60 <AmiBlitz3.ab3@24611>    BNE JL_0_DFA0
00033D66 <AmiBlitz3.ab3@24612>    CMP.l #3,d2
00033D6A <AmiBlitz3.ab3@24613>    BNE  JUMP_error_convert_types
00033D6C <AmiBlitz3.ab3@24614>    ADDQ #2,a5
00033D6E <AmiBlitz3.ab3@24615>    MOVEQ #0,d0
00033D70 <AmiBlitz3.ab3@24616>    MOVE.b (a5)+,d0
00033D74 <AmiBlitz3.ab3@24617>    BEQ JL_0_DFA0
00033D78 <AmiBlitz3.ab3@24618>    CMP.b #$22,d0
00033D7C <AmiBlitz3.ab3@24619>    BNE 'l1
00033D80 <AmiBlitz3.ab3@24620>    MOVE.b #0,d0
00033D84 <AmiBlitz3.ab3@24621> BRA 'do
00033D86 <AmiBlitz3.ab3@24624>   ASL.l #8,d0
00033D88 <AmiBlitz3.ab3@24625>    MOVE.b (a5)+,d0
00033D8C <AmiBlitz3.ab3@24626>    BEQ JL_0_DFA0
00033D90 <AmiBlitz3.ab3@24627>    CMP.b #$22,d0
00033D94 <AmiBlitz3.ab3@24628>    BNE 'l2
00033D98 <AmiBlitz3.ab3@24629>    MOVE.b #0,d0
00033D9A <AmiBlitz3.ab3@24630>    ASR.l #8,d0
00033D9E <AmiBlitz3.ab3@24631> BRA 'do
00033DA0 <AmiBlitz3.ab3@24634>   ASL.l #8,d0
00033DA2 <AmiBlitz3.ab3@24635>     MOVE.b (a5)+,d0
00033DA6 <AmiBlitz3.ab3@24636>    BEQ JL_0_DFA0
00033DAA <AmiBlitz3.ab3@24637>    CMP.b #$22,d0
00033DAE <AmiBlitz3.ab3@24638>    BNE 'l3
00033DB2 <AmiBlitz3.ab3@24639>    MOVE.b #0,d0
00033DB4 <AmiBlitz3.ab3@24640>    ASR.l #8,d0
00033DB8 <AmiBlitz3.ab3@24641> BRA 'do
00033DBA <AmiBlitz3.ab3@24644>   ASL.l #8,d0
00033DBC <AmiBlitz3.ab3@24645>     MOVE.b (a5)+,d0
00033DC0 <AmiBlitz3.ab3@24646>    BEQ JL_0_DFA0
00033DC4 <AmiBlitz3.ab3@24647>    CMP.b #$22,d0
00033DC8 <AmiBlitz3.ab3@24648>    BNE 'l4
00033DCC <AmiBlitz3.ab3@24649>    MOVE.b #0,d0
00033DCE <AmiBlitz3.ab3@24650>    ASR.l #8,d0
00033DD2 <AmiBlitz3.ab3@24651> BRA 'do
00033DD6 <AmiBlitz3.ab3@24654>    CMP.b #$22,(a5)+
00033DDA <AmiBlitz3.ab3@24655>    BNE JUMP_error4char
00033DDE <AmiBlitz3.ab3@24658>   MOVE.w #$2b7c,d1
00033DE4 <AmiBlitz3.ab3@24659>    TST.w varmode
00033DE8 <AmiBlitz3.ab3@24660>    BEQ 'g3
00033DEC <AmiBlitz3.ab3@24661>    BCLR #9,d1
00033DF2 <AmiBlitz3.ab3@24664>     JSR writeword
00033DF4 <AmiBlitz3.ab3@24665>     MOVE.l d0,d1
00033DFA <AmiBlitz3.ab3@24666>     JSR writelong
00033DFC <AmiBlitz3.ab3@24667>     MOVE.w d3,d1
00033E02 <AmiBlitz3.ab3@24668>     JSR writeword
00033E08 <AmiBlitz3.ab3@24669>     JSR get1bytemain
00033E0A <AmiBlitz3.ab3@24670> RTS
00033E10 <AmiBlitz3.ab3@24676> JMP noleterr
00033E16 <AmiBlitz3.ab3@24680>   MOVE.w d2,vartype
00033E1A <AmiBlitz3.ab3@24681>   MOVE.b #$3,D2
00033E1E <AmiBlitz3.ab3@24684>   CMP.b #5,d2
00033E22 <AmiBlitz3.ab3@24685>   BNE 'l1
00033E28 <AmiBlitz3.ab3@24686>   MOVE.l a2,currtype
00033E2C <AmiBlitz3.ab3@24690>   MOVEM.w D2-D3,-(A7)
00033E32 <AmiBlitz3.ab3@24691>   MOVE.w varmode,-(A7)
00033E38 <AmiBlitz3.ab3@24692>   MOVE.l a2,leftsidetype
00033E42 <AmiBlitz3.ab3@24693>   MOVE.w flagmask,leftsideflagmask
00033E46 <AmiBlitz3.ab3@24694>   BTST #$f,d2
00033E4A <AmiBlitz3.ab3@24695>   BEQ 'nomultiassign
00033E50 <AmiBlitz3.ab3@24696>   CLR.l leftsidetype                        ;its multiassign to type entries so no typecheck need
00033E56 <AmiBlitz3.ab3@24697>   CLR.w leftsideflagmask
00033E5A <AmiBlitz3.ab3@24698> 'nomultiassign  ANDI.w #$FF,D2
00033E60 <AmiBlitz3.ab3@24699>   MOVE.l lastoffset_org,-(A7)
00033E66 <AmiBlitz3.ab3@24700>   JSR eval                                ; calc right side of var assign
00033E6A <AmiBlitz3.ab3@24701>   MOVEM.l a0/a1,-(a7)
00033E70 <AmiBlitz3.ab3@24702>   MOVE.l leftsidetype,a0
00033E76 <AmiBlitz3.ab3@24703>   CMP.l #0,a0
00033E7A <AmiBlitz3.ab3@24704>   BEQ 'nocheck
00033E82 <AmiBlitz3.ab3@24705>   CMP.w #1,leftsideflagmask
00033E86 <AmiBlitz3.ab3@24706>   BEQ 'isptr
00033E8E <AmiBlitz3.ab3@24707>   CMP.l #$100,4(a0)
00033E92 <AmiBlitz3.ab3@24708>   BLE 'nocheck
00033E98 <AmiBlitz3.ab3@24709> 'isptr TST.l typetocast
00033E9C <AmiBlitz3.ab3@24710>   BEQ 'nocast
00033EA2 <AmiBlitz3.ab3@24711>   MOVE.l typetocast,a1
00033EA6 <AmiBlitz3.ab3@24712>   BRA 'typecheck
00033EAC <AmiBlitz3.ab3@24713> 'nocast  TST.l rightsidetype
00033EB0 <AmiBlitz3.ab3@24714>   BEQ 'nocheck
00033EB6 <AmiBlitz3.ab3@24715>   MOVE.l rightsidetype,a1
00033EBE <AmiBlitz3.ab3@24716>   CMP.w #1,rightsideflagmask
00033EC2 <AmiBlitz3.ab3@24717>   BEQ 'ok
00033ECA <AmiBlitz3.ab3@24718>   CMP.l #$100,4(a1)
00033ECE <AmiBlitz3.ab3@24719>   BGE 'typecheck
00033ED6 <AmiBlitz3.ab3@24720>   CMP.l #$3,4(a1)
00033EDA <AmiBlitz3.ab3@24721>   BEQ 'ok                              ;long assign is allow with this codelines
00033EDE <AmiBlitz3.ab3@24722>   BRA 'error
00033EE4 <AmiBlitz3.ab3@24724>   TST.b typecheck
00033EE8 <AmiBlitz3.ab3@24725>   BEQ 'nocheck
00033EEE <AmiBlitz3.ab3@24726>   TST.b notypecheck
00033EF2 <AmiBlitz3.ab3@24727>   BNE 'ok
00033EF4 <AmiBlitz3.ab3@24728>   CMP.l a0,a1
00033EF8 <AmiBlitz3.ab3@24729>   BEQ 'ok
00033EFC <AmiBlitz3.ab3@24731>   MOVE.l 4(a1),a1                   ; load the address of 1. type.
00033F00 <AmiBlitz3.ab3@24732>   CMP.l $a(a1),a0                   ; check if the bigger type contain in first place same type as the function need
00033F04 <AmiBlitz3.ab3@24733>   BEQ 'ok
00033F0A <AmiBlitz3.ab3@24735>  JMP   error_convert_types     ;for syntax 4  = typecheck
00033F10 <AmiBlitz3.ab3@24738>    CLR.l typetocast
00033F14 <AmiBlitz3.ab3@24739>    MOVEM.l (a7)+, a0/a1
00033F1A <AmiBlitz3.ab3@24740>   MOVE.l (A7)+,lastoffset_org
00033F20 <AmiBlitz3.ab3@24741>   MOVE.w commode,D1
00033F24 <AmiBlitz3.ab3@24742>    BNE.w JL_0_DFCC
00033F28 <AmiBlitz3.ab3@24743>    BSR.w JL_0_B63C
00033F2E <AmiBlitz3.ab3@24746>   MOVE.w (A7)+,varmode
00033F32 <AmiBlitz3.ab3@24747>   MOVEM.w (A7)+,D2-D3
00033F36 <AmiBlitz3.ab3@24749>   MOVE.w #$2B40,D1
00033F3C <AmiBlitz3.ab3@24750>   MOVE.w varmode,D4
00033F40 <AmiBlitz3.ab3@24751>    BEQ.w JL_0_DFE8
00033F44 <AmiBlitz3.ab3@24752>   BCLR #$9,D1
00033F48 <AmiBlitz3.ab3@24755>   BTST #$F,D2
00033F4C <AmiBlitz3.ab3@24756>    BEQ.w JL_0_E090
00033F52 <AmiBlitz3.ab3@24757>    TST.b stackcorrect
00033F56 <AmiBlitz3.ab3@24758>    BNE 'st1
00033F5C <AmiBlitz3.ab3@24759>   MOVE.w commode,D1
00033F60 <AmiBlitz3.ab3@24760>    BEQ.w JL_0_E004
00033F66 <AmiBlitz3.ab3@24763>   MOVE.w pulla2,D1
00033F6C <AmiBlitz3.ab3@24764>    JSR writeword
00033F70 <AmiBlitz3.ab3@24767>   MOVE.w #$2480,D1
00033F74 <AmiBlitz3.ab3@24768>    MOVEM.l a0/d0,-(a7)
00033F7A <AmiBlitz3.ab3@24769>    MOVEA.l lastoffset_org,A0
00033F7C <AmiBlitz3.ab3@24770>    MOVE.l A0,D0
00033F80 <AmiBlitz3.ab3@24771>    BEQ.w 'skip
00033F82 <AmiBlitz3.ab3@24772>    MOVEA.l D0,A0
00033F8A <AmiBlitz3.ab3@24773>    MOVE.l $A(A0),currtype
00033F8E <AmiBlitz3.ab3@24776>   MOVEM.l (a7)+,a0/d0
00033F92 <AmiBlitz3.ab3@24777>   CMP.w #$2C,D0
00033F96 <AmiBlitz3.ab3@24778>    BNE.w JL_0_E090
00033F9A <AmiBlitz3.ab3@24779>     MOVE.w #$24C0,D1
00033F9E <AmiBlitz3.ab3@24780>    BSR.w JL_0_E090                                         ;write store
00033FA4 <AmiBlitz3.ab3@24783>    MOVE.l lastoffset_org,D0
00033FAC <AmiBlitz3.ab3@24787>   MOVE.w #$FFFF,commode
00033FB2 <AmiBlitz3.ab3@24788>   CLR.w varcodelen
00033FBA <AmiBlitz3.ab3@24789>   MOVE.b #1,optiarray
00033FC0 <AmiBlitz3.ab3@24790>   MOVE.w pusha2,D1
00033FC6 <AmiBlitz3.ab3@24791>    JSR writeword
00033FCC <AmiBlitz3.ab3@24792>   TST.l lastoffset_org
00033FD0 <AmiBlitz3.ab3@24793>   BEQ dimmore
00033FD6 <AmiBlitz3.ab3@24794>   MOVEA.l lastoffset_org,A0
00033FD8 <AmiBlitz3.ab3@24795>   MOVE.l (A0),D0
00033FDC <AmiBlitz3.ab3@24796>    BEQ.w JUMP_comerr
00033FDE <AmiBlitz3.ab3@24797>   MOVEA.l D0,A0
00033FE4 <AmiBlitz3.ab3@24798>   MOVE.l A0,lastoffset_org
00033FEA <AmiBlitz3.ab3@24799>   BTST #$1,$7(A0)
00033FEE <AmiBlitz3.ab3@24800>    BNE.w JUMP_nocomerr
00033FF2 <AmiBlitz3.ab3@24801>   MOVEA.l $A(A0),A1
00033FF6 <AmiBlitz3.ab3@24802>   MOVE.l $4(A1),D2
00033FFC <AmiBlitz3.ab3@24805>   BTST #$0,$7(A0)
00034000 <AmiBlitz3.ab3@24806>    BNE.w JL_0_E078
00034006 <AmiBlitz3.ab3@24807>   CMP.l #$100,D2
0003400A <AmiBlitz3.ab3@24808>    BCC.l JUMP_nocomerr
0003400E <AmiBlitz3.ab3@24809> BRA.w JL_0_E088                                     ; do do type\x= 10,20,30....
00034014 <AmiBlitz3.ab3@24812>         CLR.b optiarray
00034018 <AmiBlitz3.ab3@24813>         CMP.w #"@@",(a5)
0003401C <AmiBlitz3.ab3@24814>         BEQ 'n1
00034020 <AmiBlitz3.ab3@24815> BRA 'd1
00034026 <AmiBlitz3.ab3@24818>   JSR nextline
00034028 <AmiBlitz3.ab3@24819>         MOVE.l a5,-(a7)
0003402A <AmiBlitz3.ab3@24822>   MOVE.b (a5)+,d0
0003402E <AmiBlitz3.ab3@24823>         CMP.b #$20,d0
00034032 <AmiBlitz3.ab3@24824>         BEQ 'l2
00034034 <AmiBlitz3.ab3@24825>         MOVE.l (a7)+,a5
00034038 <AmiBlitz3.ab3@24826>         CMP.b #";",d0
0003403C <AmiBlitz3.ab3@24827>         BEQ 'n1
00034042 <AmiBlitz3.ab3@24830>         TST.w debugmode
00034046 <AmiBlitz3.ab3@24831>         BEQ JL_0_DEE0
00034048 <AmiBlitz3.ab3@24832>         MOVE.l a0,-(a7)
0003404E <AmiBlitz3.ab3@24833>         MOVE.l pushat,a0
00034054 <AmiBlitz3.ab3@24834>         CMP.l #0,a0
00034058 <AmiBlitz3.ab3@24835>         BNE 'o1
0003405C <AmiBlitz3.ab3@24836> BRA 'skip
00034064 <AmiBlitz3.ab3@24839>         ADD.l #1,2(a0)
0003406A <AmiBlitz3.ab3@24842>   CLR.w commode
00034072 <AmiBlitz3.ab3@24843>         MOVE.b #1,stackcorrect
00034074 <AmiBlitz3.ab3@24844>         MOVE.l (a7)+,a0
0003407A <AmiBlitz3.ab3@24845> JMP JL_0_DEE0
00034080 <AmiBlitz3.ab3@24848> JMP nocomerr
00034086 <AmiBlitz3.ab3@24851>   CMP.l #$100,D2
0003408A <AmiBlitz3.ab3@24852>    BCS.w JL_0_E084
0003408C <AmiBlitz3.ab3@24853>   MOVEQ.l #$00,D2
00034090 <AmiBlitz3.ab3@24856>   BSET #$E,D2
00034094 <AmiBlitz3.ab3@24859>   BSET #$F,D2
00034098 <AmiBlitz3.ab3@24860> BRA.w JL_0_DEE0
0003409E <AmiBlitz3.ab3@24863>    MOVE.l destpointer,a4
000340A6 <AmiBlitz3.ab3@24864>    MOVE.l #$f22a6400,-4(a4)
000340AC <AmiBlitz3.ab3@24865>    MOVE.w arrayoffset,d1
000340B2 <AmiBlitz3.ab3@24866> JMP writeword
000340B8 <AmiBlitz3.ab3@24869> JMP comerr
000340BE <AmiBlitz3.ab3@24872>    TST.b fpu
000340C2 <AmiBlitz3.ab3@24873>    BEQ 'nofloat
000340C6 <AmiBlitz3.ab3@24874>    CMP.b #5,d2
000340CA <AmiBlitz3.ab3@24875>    BNE 'nofloat
000340D0 <AmiBlitz3.ab3@24876>    CLR.w fp0var
000340D6 <AmiBlitz3.ab3@24877>    LEA regtable,a4
000340D8 <AmiBlitz3.ab3@24878>    TST.l (a4)
000340DC <AmiBlitz3.ab3@24879>    BEQ 'noreg
000340E0 <AmiBlitz3.ab3@24880>    BTST #15,d2                                             ;regvars
000340E4 <AmiBlitz3.ab3@24881>    BNE 'noreg
000340E8 <AmiBlitz3.ab3@24882>    CMP.w 0+4(a4),d3
000340EC <AmiBlitz3.ab3@24883>    BNE 'doreg1
000340F2 <AmiBlitz3.ab3@24884>    MOVE.l #$f2000380,d1
000340F8 <AmiBlitz3.ab3@24885>    MOVE.w regnum,d0
000340FC <AmiBlitz3.ab3@24886>    BNE 'noopt
00034102 <AmiBlitz3.ab3@24892>    MOVE.l destpointer,a4
0003410A <AmiBlitz3.ab3@24893>    CMP.l #$f2001c80,-8(a4)
0003410E <AmiBlitz3.ab3@24894>    BNE 'noopt
00034116 <AmiBlitz3.ab3@24895>    CMP.l #$f2000422,-4(a4)
0003411A <AmiBlitz3.ab3@24896>    BNE 'noopt
00034120 <AmiBlitz3.ab3@24897>    MOVE.l #$f20003a2,d1
0003412A <AmiBlitz3.ab3@24898>    SUB.l #8,destpointer
0003412C <AmiBlitz3.ab3@24901>    ASL.w #7,d0
0003412E <AmiBlitz3.ab3@24902>    OR.w d0,d1
00034134 <AmiBlitz3.ab3@24903>    JSR writelong
00034136 <AmiBlitz3.ab3@24904> RTS
0003413A <AmiBlitz3.ab3@24907>   CMP.w 8+4(a4),d3
0003413E <AmiBlitz3.ab3@24908>    BNE 'doreg2
00034144 <AmiBlitz3.ab3@24909>    MOVE.l #$f2000300,d1
0003414A <AmiBlitz3.ab3@24910>    MOVE.w regnum,d0
0003414C <AmiBlitz3.ab3@24911>    ASL.w #7,d0
0003414E <AmiBlitz3.ab3@24912>    OR.w d0,d1
00034154 <AmiBlitz3.ab3@24913>    JSR writelong
00034156 <AmiBlitz3.ab3@24914> RTS
0003415A <AmiBlitz3.ab3@24917>   CMP.w 16+4(a4),d3
0003415E <AmiBlitz3.ab3@24918>    BNE 'doreg3
00034164 <AmiBlitz3.ab3@24919>    MOVE.l #$f2000280,d1
0003416A <AmiBlitz3.ab3@24920>    MOVE.w regnum,d0
0003416C <AmiBlitz3.ab3@24921>    ASL.w #7,d0
0003416E <AmiBlitz3.ab3@24922>    OR.w d0,d1
00034174 <AmiBlitz3.ab3@24923>    JSR  writelong
00034176 <AmiBlitz3.ab3@24924>  RTS
0003417A <AmiBlitz3.ab3@24927>   CMP.w 24+4(a4),d3
0003417E <AmiBlitz3.ab3@24928>    BNE 'doreg4
00034184 <AmiBlitz3.ab3@24929>    MOVE.l #$f2000200,d1
0003418A <AmiBlitz3.ab3@24930>    MOVE.w regnum,d0
0003418C <AmiBlitz3.ab3@24931>    ASL.w #7,d0
0003418E <AmiBlitz3.ab3@24932>    OR.w d0,d1
00034194 <AmiBlitz3.ab3@24933>    JSR writelong
00034196 <AmiBlitz3.ab3@24934> RTS
0003419A <AmiBlitz3.ab3@24937>   CMP.w 32+4(a4),d3
0003419E <AmiBlitz3.ab3@24938>    BNE 'noreg
000341A4 <AmiBlitz3.ab3@24939>    MOVE.l #$f2000180,d1
000341AA <AmiBlitz3.ab3@24940>    MOVE.w regnum,d0
000341AC <AmiBlitz3.ab3@24941>    ASL.w #7,d0
000341AE <AmiBlitz3.ab3@24942>    OR.w d0,d1
000341B4 <AmiBlitz3.ab3@24943>    JSR writelong
000341B6 <AmiBlitz3.ab3@24944> RTS
000341BC <AmiBlitz3.ab3@24947>    TST.w regnum
000341C0 <AmiBlitz3.ab3@24948>    BNE 'nofp0
000341C6 <AmiBlitz3.ab3@24949>    MOVE.l destpointer ,a4
000341CE <AmiBlitz3.ab3@24950>    CMP.l #$f2304400,-6(a4)
000341D2 <AmiBlitz3.ab3@24951>    BNE 'do
000341D8 <AmiBlitz3.ab3@24952>    CMP.w #$1990,-2(a4)
000341DC <AmiBlitz3.ab3@24953>    BNE 'do
000341E0 <AmiBlitz3.ab3@24954>    BTST #15,d2                                             ;types ?
000341E4 <AmiBlitz3.ab3@24955>    BNE 'do
000341EA <AmiBlitz3.ab3@24956>   MOVE.l #$2b701990,d1                                     ;var
000341F0 <AmiBlitz3.ab3@24957>   TST.w varmode
000341F4 <AmiBlitz3.ab3@24958>   BEQ 'glob1
000341F8 <AmiBlitz3.ab3@24959>   BCLR #25,d1
000341FC <AmiBlitz3.ab3@24962>   MOVE.l d1,-6(a4)
00034200 <AmiBlitz3.ab3@24963>   MOVE.w d3,-2(a4)
00034206 <AmiBlitz3.ab3@24964>   CLR.w fp0var
0003420E <AmiBlitz3.ab3@24965>   MOVE.w #$ffff,fp0mode
00034210 <AmiBlitz3.ab3@24966> RTS
00034218 <AmiBlitz3.ab3@24969>    CMP.l #$f22d4400,-6(a4)                                 ;fmove.s (a5),fp0
0003421C <AmiBlitz3.ab3@24970>    BNE 'do3
00034226 <AmiBlitz3.ab3@24971>    CMP.l #newtype_double,currtype
0003422A <AmiBlitz3.ab3@24972>    BEQ 'do4
0003422E <AmiBlitz3.ab3@24975>   MOVE.w #$2b6d,d1
00034234 <AmiBlitz3.ab3@24976>    TST.w varmode
00034238 <AmiBlitz3.ab3@24977>    BEQ 'g2
0003423C <AmiBlitz3.ab3@24978>     BCLR #9,d1
00034240 <AmiBlitz3.ab3@24981>     CMP.w #$2b6d,d1
00034244 <AmiBlitz3.ab3@24982>     BNE 'd1
00034248 <AmiBlitz3.ab3@24983>     CMP.w -2(a4),d3
0003424C <AmiBlitz3.ab3@24984>     BNE 'd1
00034252 <AmiBlitz3.ab3@24985>     SUBQ.l #6,destpointer
00034256 <AmiBlitz3.ab3@24986> BRA 'd12
0003425A <AmiBlitz3.ab3@24989>     MOVE.w d1,-6(a4)                                       ;fmove.s to move.l mem,mem
00034260 <AmiBlitz3.ab3@24990>     MOVE.w -2(a4),-4(a4)
00034264 <AmiBlitz3.ab3@24991>     MOVE.w d3,-2(a4)
0003426A <AmiBlitz3.ab3@24994>   CLR.w fp0var
00034272 <AmiBlitz3.ab3@24995>     MOVE.w #$ffff,fp0mode
00034274 <AmiBlitz3.ab3@24996> RTS
0003427C <AmiBlitz3.ab3@24999>   CMP.l #$f22c4400,-6(a4)                                  ;fmove.s (a4)
00034280 <AmiBlitz3.ab3@25000>    BNE 'do4
00034284 <AmiBlitz3.ab3@25001>    MOVE.w #$2b6c,d1
0003428A <AmiBlitz3.ab3@25002>       TST.w varmode
0003428E <AmiBlitz3.ab3@25003>    BEQ 'g3
00034292 <AmiBlitz3.ab3@25004>    BCLR #9,d1
00034296 <AmiBlitz3.ab3@25007>   MOVE.w d1,-6(a4)
0003429C <AmiBlitz3.ab3@25008>     MOVE.w -2(a4),-4(a4)
000342A0 <AmiBlitz3.ab3@25009>     MOVE.w d3,-2(a4)
000342A6 <AmiBlitz3.ab3@25010>     CLR.w fp0var
000342AE <AmiBlitz3.ab3@25011>     MOVE.w #$ffff,fp0mode
000342B0 <AmiBlitz3.ab3@25012> RTS
000342B6 <AmiBlitz3.ab3@25015>   MOVE.w d3,fp0var
000342C0 <AmiBlitz3.ab3@25016>    MOVE.w varmode,fp0mode
000342C2 <AmiBlitz3.ab3@25017>    ADDQ.l #6,a4
000342C8 <AmiBlitz3.ab3@25018>    MOVE.l a4,fp0addr
000342D2 <AmiBlitz3.ab3@25019>    MOVE.l firstiff,fp0iff
000342D6 <AmiBlitz3.ab3@25022>   MOVEM.l d0/d4,-(a7)
000342D8 <AmiBlitz3.ab3@25023>    MOVEQ #0,d0
000342DE <AmiBlitz3.ab3@25024>     MOVE.w regnum,d0
000342E0 <AmiBlitz3.ab3@25025>    ASL.w #7,d0                                             ;fpu store var
000342E4 <AmiBlitz3.ab3@25026>   BTST #15,d2
000342E8 <AmiBlitz3.ab3@25027>    BEQ 'var
000342EA <AmiBlitz3.ab3@25028>    MOVE.w d1,d4
000342EE <AmiBlitz3.ab3@25029>    CMP.w #$24c0,d4
000342F2 <AmiBlitz3.ab3@25030>    BNE 'nopl
000342F8 <AmiBlitz3.ab3@25031>    MOVE.l #$f21a6400,d1
000342FA <AmiBlitz3.ab3@25032>    MOVEQ #0,d3
000342FE <AmiBlitz3.ab3@25033> BRA 'glob
00034304 <AmiBlitz3.ab3@25037>   MOVE.l #$f2126400,d1
00034306 <AmiBlitz3.ab3@25038>    TST.w d3                                                ;offset =0
0003430A <AmiBlitz3.ab3@25039>    BNE 'offset
00034310 <AmiBlitz3.ab3@25040>    MOVE.l #$f2126400,d1
00034312 <AmiBlitz3.ab3@25048>    MOVEQ #0,d3
00034316 <AmiBlitz3.ab3@25049> BRA 'glob
0003431C <AmiBlitz3.ab3@25052>   MOVE.l #$f22d6400,d1                                     ;var
00034322 <AmiBlitz3.ab3@25053>   TST.w varmode
00034326 <AmiBlitz3.ab3@25054>   BEQ 'glob
0003432A <AmiBlitz3.ab3@25055>   BCLR #16,d1
0003432C <AmiBlitz3.ab3@25056>  'glob OR.l d0,d1
00034336 <AmiBlitz3.ab3@25059>   CMP.l #newtype_double,currtype
0003433A <AmiBlitz3.ab3@25060>   BNE 'dbl1
00034340 <AmiBlitz3.ab3@25061>   OR.l #$00001000,d1
00034346 <AmiBlitz3.ab3@25064>   JSR writelong
0003434C <AmiBlitz3.ab3@25065>   CLR.l currtype
00034350 <AmiBlitz3.ab3@25066>   MOVEM.l (a7)+,d0/d4
00034352 <AmiBlitz3.ab3@25067>   MOVE.l d3,d1
00034356 <AmiBlitz3.ab3@25068>   BEQ 'nooffs
0003435C <AmiBlitz3.ab3@25069> JMP writeword
0003435E <AmiBlitz3.ab3@25072> RTS
00034364 <AmiBlitz3.ab3@25086>     TST.b fast                                             ;write lea->xx(a2)
00034368 <AmiBlitz3.ab3@25087>    BEQ 'la10
0003436E <AmiBlitz3.ab3@25091>    TST.b quickadd
00034374 <AmiBlitz3.ab3@25093>      CLR.b quickadd
00034378 <AmiBlitz3.ab3@25094>    CMP.w #$2480,d1
0003437C <AmiBlitz3.ab3@25095>    BNE 'la10
00034382 <AmiBlitz3.ab3@25096>    TST.b optiarray
00034386 <AmiBlitz3.ab3@25097>    BNE 'la10
0003438C <AmiBlitz3.ab3@25098>    MOVE.l destpointer,a4
00034392 <AmiBlitz3.ab3@25099>    CMP.w #$45ea,-4(a4)
00034396 <AmiBlitz3.ab3@25100>    BNE 'la10
0003439E <AmiBlitz3.ab3@25101>    CMP.w #8,pushclen
000343A2 <AmiBlitz3.ab3@25102>    BEQ 'la100
000343AA <AmiBlitz3.ab3@25103>    CMP.w #6,pushclen
000343AE <AmiBlitz3.ab3@25104>    BNE 'la10
000343B2 <AmiBlitz3.ab3@25105>    CMP.b #3,d2
000343B6 <AmiBlitz3.ab3@25106>    BCS 'la110
000343BC <AmiBlitz3.ab3@25108>    MOVE.w #$2540,-2(a4)
000343C2 <AmiBlitz3.ab3@25109>    MOVE.w arrayoffset,d1
000343C8 <AmiBlitz3.ab3@25110> JMP writeword
000343CE <AmiBlitz3.ab3@25113>    CLR.b quickadd
000343D0 <AmiBlitz3.ab3@25114> RTS
000343D4 <AmiBlitz3.ab3@25117>    CMP.b #2,d2
000343D8 <AmiBlitz3.ab3@25118>    BNE 'la120
000343DE <AmiBlitz3.ab3@25119>     MOVE.w #$3540,-2(a4)
000343E4 <AmiBlitz3.ab3@25120>    MOVE.w arrayoffset,d1
000343EA <AmiBlitz3.ab3@25121> JMP writeword
000343EE <AmiBlitz3.ab3@25124>   CMP.b #1,d2
000343F2 <AmiBlitz3.ab3@25125>    BNE.s 'la10
000343F8 <AmiBlitz3.ab3@25126>     MOVE.w #$1540,-2(a4)
000343FE <AmiBlitz3.ab3@25127>    MOVE.w arrayoffset,d1
00034404 <AmiBlitz3.ab3@25128> JMP writeword
00034408 <AmiBlitz3.ab3@25131>    CMP.b #3,d2
0003440C <AmiBlitz3.ab3@25132>    BCS 'la11
00034412 <AmiBlitz3.ab3@25133>    MOVE.w #$2540,-4(a4)
00034414 <AmiBlitz3.ab3@25134> RTS
00034418 <AmiBlitz3.ab3@25137>    CMP.b #2,d2
0003441C <AmiBlitz3.ab3@25138>    BNE 'la12
00034422 <AmiBlitz3.ab3@25139>     MOVE.w #$3540,-4(a4)
00034424 <AmiBlitz3.ab3@25140> RTS
00034428 <AmiBlitz3.ab3@25142>  'la12 CMP.b #1,d2
0003442C <AmiBlitz3.ab3@25143>    BNE.s 'la10
00034432 <AmiBlitz3.ab3@25144>     MOVE.w #$1540,-4(a4)
00034434 <AmiBlitz3.ab3@25145> RTS
0003443A <AmiBlitz3.ab3@25148>   CLR.b optiarray
0003443E <AmiBlitz3.ab3@25149>    CMP.b #$1,D2
00034442 <AmiBlitz3.ab3@25150>    BEQ.w JL_0_E0AC
00034446 <AmiBlitz3.ab3@25151>    BSR.w varalign
0003444A <AmiBlitz3.ab3@25152>    CMP.b #$3,D2
0003444E <AmiBlitz3.ab3@25153>    BCC.w writevarlong
00034454 <AmiBlitz3.ab3@25154>    TST.b fast                                              ;optiimmi
00034458 <AmiBlitz3.ab3@25155>    BEQ 'l10b
0003445E <AmiBlitz3.ab3@25160>    MOVE.l destpointer,a0
00034464 <AmiBlitz3.ab3@25161>    SUB.l imm_addr,a0
0003446A <AmiBlitz3.ab3@25162>    CMP.l #4,a0
0003446E <AmiBlitz3.ab3@25163>    BNE 'l10
00034474 <AmiBlitz3.ab3@25164>    CLR.l imm_addr
0003447A <AmiBlitz3.ab3@25165>    MOVE.l destpointer,a4
0003447E <AmiBlitz3.ab3@25166>    OR.w #$107c,d1
00034482 <AmiBlitz3.ab3@25167>    MOVE.w d1,-4(a4)
00034484 <AmiBlitz3.ab3@25168>     MOVE.w D3,D1
0003448A <AmiBlitz3.ab3@25169> JMP writeword
00034490 <AmiBlitz3.ab3@25172>   MOVE.l destpointer,a0
00034496 <AmiBlitz3.ab3@25173>   SUB.l load_var_addr,a0
0003449C <AmiBlitz3.ab3@25174>   CMP.l #4,a0
000344A0 <AmiBlitz3.ab3@25175>   BNE 'l10b
000344A6 <AmiBlitz3.ab3@25176>   CMP.w #$302d,-4(a4)                                      ;check 68k opcode
000344AA <AmiBlitz3.ab3@25177>   BNE 'l10b
000344B0 <AmiBlitz3.ab3@25179>   CLR.l load_var_addr
000344B6 <AmiBlitz3.ab3@25180>   MOVE.l destpointer,a4
000344BA <AmiBlitz3.ab3@25181>   OR.w #$102d,d1
000344BE <AmiBlitz3.ab3@25182>   MOVE.w d1,-4(a4)
000344C0 <AmiBlitz3.ab3@25183>   MOVE.w d3,d1
000344C6 <AmiBlitz3.ab3@25184> JMP writeword
000344CA <AmiBlitz3.ab3@25187>   ORI.w #$1000,D1                                          ;word
000344CE <AmiBlitz3.ab3@25188> BRA.w writestorevar
000344D4 <AmiBlitz3.ab3@25192>    TST.b fast                                              ;optiimmi
000344D8 <AmiBlitz3.ab3@25193>    BEQ 'l10b
000344DE <AmiBlitz3.ab3@25198>    MOVE.l destpointer,a0
000344E4 <AmiBlitz3.ab3@25199>    SUB.l imm_addr,a0
000344EA <AmiBlitz3.ab3@25200>    CMP.l #4,a0
000344EE <AmiBlitz3.ab3@25201>    BNE 'l10
000344F4 <AmiBlitz3.ab3@25202>    CLR.l imm_addr
000344FA <AmiBlitz3.ab3@25203>    MOVE.l destpointer,a4
000344FE <AmiBlitz3.ab3@25204>    OR.w #$7c,d1
00034502 <AmiBlitz3.ab3@25205>    EORI #$3000,d1
00034506 <AmiBlitz3.ab3@25206>    MOVE.w d1,-4(a4)
00034508 <AmiBlitz3.ab3@25207>       MOVE.w D3,D1
0003450E <AmiBlitz3.ab3@25208> JMP writeword
00034514 <AmiBlitz3.ab3@25211>   MOVE.l destpointer,a0
0003451A <AmiBlitz3.ab3@25212>   SUB.l load_var_addr,a0
00034520 <AmiBlitz3.ab3@25213>   CMP.l #4,a0
00034524 <AmiBlitz3.ab3@25214>   BNE 'l10b
0003452A <AmiBlitz3.ab3@25215>   CLR.l load_var_addr
00034530 <AmiBlitz3.ab3@25216>   MOVE.l destpointer,a4
00034536 <AmiBlitz3.ab3@25217>    CMP.w #$1b6d,-4(a4)
0003453A <AmiBlitz3.ab3@25218>    BNE 'l10b
0003453E <AmiBlitz3.ab3@25219>    OR.w #$2d,d1
00034542 <AmiBlitz3.ab3@25220>    EORI #$3000,d1
00034546 <AmiBlitz3.ab3@25221>    MOVE.w d1,-4(a4)
00034548 <AmiBlitz3.ab3@25222>   MOVE.w d3,d1
0003454E <AmiBlitz3.ab3@25223> JMP writeword
00034554 <AmiBlitz3.ab3@25226>   ADDQ.w #1,pcodd                                          ;byte
00034558 <AmiBlitz3.ab3@25227>   EORI.w #$3000,D1
0003455E <AmiBlitz3.ab3@25230>   JSR writeword
00034562 <AmiBlitz3.ab3@25231>   BTST #$7,D1
00034566 <AmiBlitz3.ab3@25232>    BNE JL_0_E0C6
00034568 <AmiBlitz3.ab3@25233>   MOVE.w D3,D1
0003456E <AmiBlitz3.ab3@25234> JMP writeword
00034574 <AmiBlitz3.ab3@25237>    TST.b fast                                              ;optiimmi
00034578 <AmiBlitz3.ab3@25238>    BEQ 'l10b
0003457E <AmiBlitz3.ab3@25242>    MOVE.l destpointer,a0
00034584 <AmiBlitz3.ab3@25243>    SUB.l imm_addr,a0
0003458A <AmiBlitz3.ab3@25244>    CMP.l #6,a0
0003458E <AmiBlitz3.ab3@25245>    BNE 'l10
00034594 <AmiBlitz3.ab3@25246>    CLR.l imm_addr
0003459A <AmiBlitz3.ab3@25247>    MOVE.l destpointer,a4
0003459E <AmiBlitz3.ab3@25248>    OR.w #$7c,d1
000345A2 <AmiBlitz3.ab3@25249>    MOVE.w d1,-6(a4)
000345A4 <AmiBlitz3.ab3@25250>     MOVE.w D3,D1
000345AA <AmiBlitz3.ab3@25251> JMP writeword
000345B0 <AmiBlitz3.ab3@25254>   MOVE.l destpointer,a0
000345B6 <AmiBlitz3.ab3@25255>   SUB.l load_var_addr,a0
000345BC <AmiBlitz3.ab3@25256>   CMP.l #4,a0
000345C0 <AmiBlitz3.ab3@25257>   BNE 'l10b
000345C6 <AmiBlitz3.ab3@25258>   CLR.l load_var_addr
000345CC <AmiBlitz3.ab3@25259>   MOVE.l destpointer,a4
000345D2 <AmiBlitz3.ab3@25260>   CMP.w #$245f,-2(a4)
000345D6 <AmiBlitz3.ab3@25261>   BEQ 'l10b
000345DA <AmiBlitz3.ab3@25262>   OR.w #$28,d1
000345DE <AmiBlitz3.ab3@25263>   OR.w d1,-4(a4)
000345E4 <AmiBlitz3.ab3@25264>   CMP.w #$2b6d,-4(a4)
000345E8 <AmiBlitz3.ab3@25265>   BNE 'd1
000345EC <AmiBlitz3.ab3@25266>   CMP.w -2(a4),d3
000345F0 <AmiBlitz3.ab3@25267>   BNE 'd1
000345F6 <AmiBlitz3.ab3@25268>   SUBQ.l #4,destpointer
000345F8 <AmiBlitz3.ab3@25269> RTS
000345FA <AmiBlitz3.ab3@25272>   MOVE.w d3,d1
00034600 <AmiBlitz3.ab3@25273> JMP writeword
00034606 <AmiBlitz3.ab3@25276>   JSR writeword
0003460A <AmiBlitz3.ab3@25277>   BTST #$7,D1
0003460E <AmiBlitz3.ab3@25278>    BNE.b JL_0_E0C6
00034610 <AmiBlitz3.ab3@25279>   MOVE.w D3,D1
00034616 <AmiBlitz3.ab3@25280> JMP writeword
00034618 <AmiBlitz3.ab3@25283> RTS
0003461A <AmiBlitz3.ab3@25287>   MOVE.w D1,-(A7)
0003461E <AmiBlitz3.ab3@25288>   MOVE.w pcodd(PC),D1
00034620 <AmiBlitz3.ab3@25289>   LSR.w #1,D1
00034624 <AmiBlitz3.ab3@25290>    BCC.b JL_0_E0E2
0003462A <AmiBlitz3.ab3@25291>   CLR.w pcodd
00034630 <AmiBlitz3.ab3@25292>   MOVE.w add1a2,D1
00034636 <AmiBlitz3.ab3@25293>    JSR writeword
00034638 <AmiBlitz3.ab3@25296>   MOVE.w (A7)+,D1
0003463A <AmiBlitz3.ab3@25297> RTS
0003463C <AmiBlitz3.ab3@25301> add1a2:     Dc.b $52,$4A                                   ;ADDQ.W  #1,A2
0003463E <AmiBlitz3.ab3@25304> pcodd:     Ds.w 1                                          ;add 1 to this for bytes
00034640 <AmiBlitz3.ab3@25305> listadd:   Ds.w 1                                          ;set to 8 if it's a list
00034642 <AmiBlitz3.ab3@25306> listsize:  Ds.w 1
00034648 <AmiBlitz3.ab3@25310>   ADDQ.w #1,regnum
00034650 <AmiBlitz3.ab3@25311>   MOVE.b #1,nowdeclare
00034656 <AmiBlitz3.ab3@25312>   CLR.b dimkeep
0003465E <AmiBlitz3.ab3@25313>    CMP.l #"KEEP",-1(a5)
00034662 <AmiBlitz3.ab3@25314>   BNE 'nokeep
00034668 <AmiBlitz3.ab3@25315>   CMP.b #" ",3(a5)
0003466C <AmiBlitz3.ab3@25316>   BNE 'nokeep
0003466E <AmiBlitz3.ab3@25317>   ADDQ.l #3,a5
00034672 <AmiBlitz3.ab3@25320>     CMP.b #" ",(a5)
00034676 <AmiBlitz3.ab3@25321>     BNE '1
00034678 <AmiBlitz3.ab3@25322>    ADDQ #1,a5
0003467C <AmiBlitz3.ab3@25323> BRA '2
00034682 <AmiBlitz3.ab3@25326>   MOVE.l a5,lastsourcepos
0003468A <AmiBlitz3.ab3@25327>   MOVE.b #1,dimkeep
0003468E <AmiBlitz3.ab3@25335>   MOVE.w #$FF9A,D1
00034694 <AmiBlitz3.ab3@25336>   JSR uselib
0003469A <AmiBlitz3.ab3@25339>   CLR.w listadd
0003469E <AmiBlitz3.ab3@25340>   CMP.w #-$7F4D,D0
000346A2 <AmiBlitz3.ab3@25341>    BNE.w JL_0_E11E
000346AA <AmiBlitz3.ab3@25342>   MOVE.w #$0008,listadd
000346AE <AmiBlitz3.ab3@25343>   MOVE.w #$FFFA,D1
000346B4 <AmiBlitz3.ab3@25344>    JSR uselib
000346BA <AmiBlitz3.ab3@25345>    JSR get1bytemain
000346C0 <AmiBlitz3.ab3@25348>   CLR.w nonew
000346C6 <AmiBlitz3.ab3@25349>    JSR getparameter
000346CE <AmiBlitz3.ab3@25350>   BTST #$1,flagmask+1
000346D2 <AmiBlitz3.ab3@25351>    BEQ.w JUMP_syntaxerr
000346D8 <AmiBlitz3.ab3@25352>    JSR JL_0_8E3C
000346DE <AmiBlitz3.ab3@25353>   MOVE.w notshared,D1
000346E2 <AmiBlitz3.ab3@25354>    BNE.w JL_0_E198
000346EA <AmiBlitz3.ab3@25355>   MOVE.w $8(A3),temp1
000346F0 <AmiBlitz3.ab3@25356>   MOVE.w proceduremode,D2
000346F4 <AmiBlitz3.ab3@25357>    BNE.w JL_0_E176
000346FA <AmiBlitz3.ab3@25358>   MOVE.w globalvarpointer,-(A7)
00034702 <AmiBlitz3.ab3@25359>   MOVE.w $4(A3),globalvarpointer
00034708 <AmiBlitz3.ab3@25360>   ADDQ.w #4,globalvarpointer
0003470C <AmiBlitz3.ab3@25361>    BSR.w write_dim_code
00034712 <AmiBlitz3.ab3@25362>   MOVE.w (A7)+,globalvarpointer
00034716 <AmiBlitz3.ab3@25363> BRA.w JL_0_E1BA
0003471C <AmiBlitz3.ab3@25374>   MOVE.w globalvarpointer,-(A7)
00034722 <AmiBlitz3.ab3@25375>             MOVE.w proceduremode,-(a7)
00034728 <AmiBlitz3.ab3@25376>             CLR.w proceduremode
00034730 <AmiBlitz3.ab3@25377>   MOVE.w $4(A3),globalvarpointer
00034736 <AmiBlitz3.ab3@25378>   ADDQ.w #4,globalvarpointer
0003473A <AmiBlitz3.ab3@25379>    BSR.w write_dim_code
00034740 <AmiBlitz3.ab3@25380>    MOVE.w (a7)+,proceduremode
00034746 <AmiBlitz3.ab3@25381>   MOVE.w (A7)+,globalvarpointer
0003474A <AmiBlitz3.ab3@25382> BRA.w JL_0_E1BA
00034752 <AmiBlitz3.ab3@25385>   MOVE.w #$FFFF,temp1
00034756 <AmiBlitz3.ab3@25386>   MOVE.w listadd(PC),D1
0003475A <AmiBlitz3.ab3@25387>    BEQ.w JL_0_E1B6
00034762 <AmiBlitz3.ab3@25388>   MOVE.w #$4000,temp1
00034768 <AmiBlitz3.ab3@25389>   BSET #$0,$6(A3)
0003476E <AmiBlitz3.ab3@25392>         TST.w proceduremode
00034772 <AmiBlitz3.ab3@25393>        BNE 'l1
00034778 <AmiBlitz3.ab3@25394>        MOVE.w locvaroff,-(a7)
0003477C <AmiBlitz3.ab3@25397>   BSR.w write_dim_code
00034782 <AmiBlitz3.ab3@25398>         TST.w proceduremode
00034786 <AmiBlitz3.ab3@25399>         BNE JL_0_E1BA
0003478C <AmiBlitz3.ab3@25400>        MOVE.w (A7)+,locvaroff
00034792 <AmiBlitz3.ab3@25403>   JSR get1bytemain
00034796 <AmiBlitz3.ab3@25404>   CMP.w #$2C,D0
0003479A <AmiBlitz3.ab3@25405>    BNE.w JL_0_E1CE
000347A0 <AmiBlitz3.ab3@25406>    JSR get1bytemain
000347A4 <AmiBlitz3.ab3@25407> BRA.w JL_0_E0FC
000347A6 <AmiBlitz3.ab3@25410> RTS
000347AE <AmiBlitz3.ab3@25413>   MOVE.w #$FFFF,nonew                                      ;#-1,nonew org source
000347B4 <AmiBlitz3.ab3@25414>   MOVE.w beginarr,D1
000347BA <AmiBlitz3.ab3@25415>    JSR writeword
000347BC <AmiBlitz3.ab3@25416>   MOVEQ.l #$00,D1
000347C2 <AmiBlitz3.ab3@25417>    JSR writeword
000347C4 <AmiBlitz3.ab3@25418>   MOVEQ.l #$04,D1
000347CC <AmiBlitz3.ab3@25419>   BTST #$0,flagmask+1
000347D0 <AmiBlitz3.ab3@25420>    BNE.w write_dim_code__pointer
000347D4 <AmiBlitz3.ab3@25421>   MOVE.w $8(A2),D1
000347D8 <AmiBlitz3.ab3@25424>   ADD.w listadd(PC),D1                                     ;size of one element.
000347DE <AmiBlitz3.ab3@25425>   MOVE.w D1,listsize
000347E4 <AmiBlitz3.ab3@25426>    JSR writeword
000347EA <AmiBlitz3.ab3@25427>   CLR.w temp2                                              ;# dim's got
000347EC <AmiBlitz3.ab3@25428>   MOVE.l A3,-(A7)
000347F2 <AmiBlitz3.ab3@25431>   ADDQ.w #1,temp2
000347F4 <AmiBlitz3.ab3@25432>   MOVEQ.l #$03,D2                                          ;get word
000347FA <AmiBlitz3.ab3@25433>   MOVE.w notshared,-(a7)
00034800 <AmiBlitz3.ab3@25434>    JSR eval
00034806 <AmiBlitz3.ab3@25435>   MOVE.w (a7)+,notshared
0003480C <AmiBlitz3.ab3@25436>   TST.b debugmode
00034810 <AmiBlitz3.ab3@25437>    BEQ.w write_dim_code__norerr0
00034814 <AmiBlitz3.ab3@25438>   MOVE.w #$C30F,D1
00034818 <AmiBlitz3.ab3@25444>       MOVE.w #$5281,d1
0003481E <AmiBlitz3.ab3@25445>       JSR writeword
00034824 <AmiBlitz3.ab3@25446>       MOVE.l #$4c010800,d1                                 ;dim >65536 fix
0003482A <AmiBlitz3.ab3@25447>       JSR writelong
00034830 <AmiBlitz3.ab3@25448>   MOVE.w proceduremode,D2
00034834 <AmiBlitz3.ab3@25449>    BEQ.w write_dim_code__global
0003483A <AmiBlitz3.ab3@25450>   SUBQ.w #4,locvaroff
00034844 <AmiBlitz3.ab3@25451>   MOVE.w locvaroff,putarr+2
00034848 <AmiBlitz3.ab3@25452> BRA.w write_dim_code__doit
0003484E <AmiBlitz3.ab3@25455> JMP syntaxerr
00034858 <AmiBlitz3.ab3@25458>   MOVE.w globalvarpointer,putarr+2
0003485E <AmiBlitz3.ab3@25459>   ADDQ.w #4,globalvarpointer
00034864 <AmiBlitz3.ab3@25462>   TST.b dimkeep
00034868 <AmiBlitz3.ab3@25463>            BEQ write_dim_code__doit_l1
0003486A <AmiBlitz3.ab3@25464>       MOVEQ #0,d1
00034870 <AmiBlitz3.ab3@25465>       MOVE.w putarr+2,d1
00034876 <AmiBlitz3.ab3@25466>       OR.l  #$222d0000,d1
0003487C <AmiBlitz3.ab3@25467>       MOVE.w proceduremode,D2
00034880 <AmiBlitz3.ab3@25468>       BEQ write_dim_code__doit_l2
00034886 <AmiBlitz3.ab3@25469>       TST.w notshared
0003488A <AmiBlitz3.ab3@25470>       BEQ write_dim_code__doit_l2
00034890 <AmiBlitz3.ab3@25471>       SUB.l #$00010000,d1
00034896 <AmiBlitz3.ab3@25474>   JSR writelong
0003489C <AmiBlitz3.ab3@25477>   MOVE.l putarr,D1
000348A2 <AmiBlitz3.ab3@25478>       TST.w notshared
000348A6 <AmiBlitz3.ab3@25479>       BNE write_dim_code__doit_l1a
000348AC <AmiBlitz3.ab3@25480>       JSR writelong
000348B0 <AmiBlitz3.ab3@25481> BRA write_dim_code__doit_l4
000348B6 <AmiBlitz3.ab3@25484>   JSR pokela5d
000348BA <AmiBlitz3.ab3@25487>   CMP.w #$2C,D0
000348BE <AmiBlitz3.ab3@25488>    BEQ.w write_dim_code__loop
000348C2 <AmiBlitz3.ab3@25489>   CMP.w #$29,D0
000348C6 <AmiBlitz3.ab3@25490>    BNE.w JUMP_syntaxerr
000348C8 <AmiBlitz3.ab3@25491>   MOVEA.l (A7)+,A3
000348CE <AmiBlitz3.ab3@25492>   MOVE.w temp1,D1
000348D2 <AmiBlitz3.ab3@25493>    BMI.w write_dim_code__nocare
000348D6 <AmiBlitz3.ab3@25497>   BTST #$E,D1
000348DA <AmiBlitz3.ab3@25498>    BEQ.w write_dim_code__notl
000348E2 <AmiBlitz3.ab3@25499>   CMPI.w #$1,temp2
000348E6 <AmiBlitz3.ab3@25500>    BNE.w JUMP_redimerr
000348EA <AmiBlitz3.ab3@25501> BRA.w write_dim_code__nocare
000348F0 <AmiBlitz3.ab3@25504> JMP redimerr
000348F6 <AmiBlitz3.ab3@25507>   CMP.w temp2,D1
000348FA <AmiBlitz3.ab3@25508>    BNE.w JUMP_redimerr                                      ;range too long
00034900 <AmiBlitz3.ab3@25511>   LEA globalvarpointer,A0
00034906 <AmiBlitz3.ab3@25512>   MOVE.w proceduremode,D1
0003490A <AmiBlitz3.ab3@25513>   BEQ.w write_dim_code__gskip
00034910 <AmiBlitz3.ab3@25514>   LEA locvaroff,A0
00034916 <AmiBlitz3.ab3@25517>   MOVE.W  extraword,(A0)
0003491A <AmiBlitz3.ab3@25518>   BRA.W   write_dim_code__care
00034922 <AmiBlitz3.ab3@25521>   MOVE.w temp2,$8(A3)                                      ;set # dim's
00034928 <AmiBlitz3.ab3@25524>   LEA doarr,A0
0003492E <AmiBlitz3.ab3@25525>   MOVE.w $4(A3),$2(A0)
00034936 <AmiBlitz3.ab3@25526>   MOVE.w putarr+2,$6(A0)
00034938 <AmiBlitz3.ab3@25527>   MOVE.l (A0)+,D1
0003493E <AmiBlitz3.ab3@25528>    JSR writelong
00034940 <AmiBlitz3.ab3@25529>   MOVE.l (A0),D1
00034946 <AmiBlitz3.ab3@25530>    JSR writelong
0003494C <AmiBlitz3.ab3@25531>    TST.b dimkeep
00034950 <AmiBlitz3.ab3@25532>   BNE write_dim_code__care_l3
00034954 <AmiBlitz3.ab3@25535>   MOVE.w #$C400,D1
00034958 <AmiBlitz3.ab3@25536> BRA write_dim_code__care_l2
0003495C <AmiBlitz3.ab3@25539>   MOVE.w #$C405,d1
00034962 <AmiBlitz3.ab3@25542>   MOVE.w proceduremode,D2
00034966 <AmiBlitz3.ab3@25543>    BEQ.w write_dim_code__isg
0003496C <AmiBlitz3.ab3@25544>    TST.w notshared
00034970 <AmiBlitz3.ab3@25545>    BEQ write_dim_code__isg
00034972 <AmiBlitz3.ab3@25546>   ADDQ.w #1,D1
00034976 <AmiBlitz3.ab3@25549>   MOVE.w listadd(PC),D2
0003497A <AmiBlitz3.ab3@25550>    BEQ.w write_dim_code__isrg
0003497C <AmiBlitz3.ab3@25551>   MOVE.w D1,-(A7)
00034980 <AmiBlitz3.ab3@25552>   MOVE.w setles(PC),D1
00034986 <AmiBlitz3.ab3@25553>    JSR writeword
0003498A <AmiBlitz3.ab3@25554>   MOVE.w listsize(PC),D1
00034990 <AmiBlitz3.ab3@25555>    JSR writeword
00034992 <AmiBlitz3.ab3@25556>   MOVE.w (A7)+,D1
00034994 <AmiBlitz3.ab3@25557>   ADDQ.w #3,D1
00034998 <AmiBlitz3.ab3@25560> BRA.w Atokejsr
0003499E <AmiBlitz3.ab3@25567>     MOVE.l #$f23c4400,d1
000349A4 <AmiBlitz3.ab3@25569>   MOVE.w regnum,d0
000349A6 <AmiBlitz3.ab3@25570>   ASL.w #7,d0
000349A8 <AmiBlitz3.ab3@25571>   OR.w d0,d1
000349AE <AmiBlitz3.ab3@25572>   JSR writelong
000349B4 <AmiBlitz3.ab3@25578>     MOVE.l #$40490fd9,d1
000349BA <AmiBlitz3.ab3@25580>   JSR writelong
000349C0 <AmiBlitz3.ab3@25581> JMP get1bytemain
000349C4 <AmiBlitz3.ab3@25585> setles:   Dc.b $38,$3C,$00,$00                             ;MOVE.W  #$0000,D4
000349C8 <AmiBlitz3.ab3@25592> vbr:                Ds.l 1
000349CA <AmiBlitz3.ab3@25593> cfetchmode:         Ds.w 1                               ;1=fetching a constant
000349D0 <AmiBlitz3.ab3@25595> constlibs           Dc.w $FDA7,$FCDF,$FD43               ;64935,64735,64835  org source
000349D4 <AmiBlitz3.ab3@25599> constpcat:          Ds.l 1
000349D8 <AmiBlitz3.ab3@25600> constlibat:         Ds.l 1
000349DC <AmiBlitz3.ab3@25601> constmaxpc:         Dc.l $400
000349E0 <AmiBlitz3.ab3@25603> stacksize:          Dc.l #DEFAULT_STACKSIZE              ;stackfuck org source
000349E4 <AmiBlitz3.ab3@25604> currentlabeladdr:   Dc.l labelbase                       ;lastrescon org source
000349E8 <AmiBlitz3.ab3@25605> currentmacroaddr:   Dc.l macrobase                       ;lastresmac org source
000349EC <AmiBlitz3.ab3@25606> lastrestype:        Dc.l newtype_string
000349EE <AmiBlitz3.ab3@25607> rescnt:             Ds.w 1                               ;# resident
000349F0 <AmiBlitz3.ab3@25608> state_of_residents: Ds.w 1                               ;reschg org source ;flag for if res's have changed
000349F4 <AmiBlitz3.ab3@25609> resat:              Dc.l residents_table                 ;??looks like not used anymore??
000349F6 <AmiBlitz3.ab3@25610> linedone:           Ds.w 1
00034A0C <AmiBlitz3.ab3@25611> directbuffer:       Ds.w 11                              ;dirpcat  dc.w 0 org source
00034A10 <AmiBlitz3.ab3@25620>   Dc.l 0                                        ; bytetobyte
00034A14 <AmiBlitz3.ab3@25621>   Dc.l convert_byte_to_word                     ; bytetoword
00034A18 <AmiBlitz3.ab3@25622>   Dc.l convert_byte_to_long                     ; bytetolong
00034A1C <AmiBlitz3.ab3@25623>   Dc.l convert_byte_to_quick                    ; bytetoquick
00034A20 <AmiBlitz3.ab3@25624>   Dc.l convert_byte_to_float                    ; bytetofloat
00034A24 <AmiBlitz3.ab3@25625>   Dc.l convert_byte_to_long                     ; bytetolong
00034A28 <AmiBlitz3.ab3@25626>   Dc.l error_convert_types                      ; noconerr
00034A2C <AmiBlitz3.ab3@25629>   Dc.l convert_word_to_byte                     ; wordtobyte
00034A30 <AmiBlitz3.ab3@25630>   Dc.l 0                                        ; wordtoword
00034A34 <AmiBlitz3.ab3@25631>   Dc.l convert_word_to_long                     ; wordtolong
00034A38 <AmiBlitz3.ab3@25632>   Dc.l convert_word_to_quick                    ; wordtoquick
00034A3C <AmiBlitz3.ab3@25633>   Dc.l convert_word_to_float                    ; wordtofloat
00034A40 <AmiBlitz3.ab3@25634>   Dc.l convert_word_to_long                     ; wordtolong
00034A44 <AmiBlitz3.ab3@25635>   Dc.l error_convert_types                      ; noconerr
00034A48 <AmiBlitz3.ab3@25638>   Dc.l convert_long_to_byte                     ; longtobyte
00034A4C <AmiBlitz3.ab3@25639>   Dc.l convert_long_to_word                     ; longtoword
00034A50 <AmiBlitz3.ab3@25640>   Dc.l 0                                        ; longtolong
00034A54 <AmiBlitz3.ab3@25641>   Dc.l convert_long_to_quick                    ; longtoquick
00034A58 <AmiBlitz3.ab3@25642>   Dc.l convert_long_to_float                    ; longtofloat
00034A5C <AmiBlitz3.ab3@25643>   Dc.l 0                                        ; longtolong
00034A60 <AmiBlitz3.ab3@25644>   Dc.l error_convert_types                      ; noconerr
00034A64 <AmiBlitz3.ab3@25647>   Dc.l convert_quick_to_byte                    ; quicktobyte
00034A68 <AmiBlitz3.ab3@25648>   Dc.l convert_quick_to_word                    ; quicktoword
00034A6C <AmiBlitz3.ab3@25649>   Dc.l convert_quick_to_long                    ; quicktolong
00034A70 <AmiBlitz3.ab3@25650>   Dc.l 0                                        ; quicktoquick
00034A74 <AmiBlitz3.ab3@25651>   Dc.l convert_quick_to_float                   ; quicktofloat
00034A78 <AmiBlitz3.ab3@25652>   Dc.l convert_quick_to_long                    ; quicktolong
00034A7C <AmiBlitz3.ab3@25653>   Dc.l error_convert_types                      ; noconerr
00034A80 <AmiBlitz3.ab3@25656>   Dc.l convert_float_to_byte                    ; floattobyte
00034A84 <AmiBlitz3.ab3@25657>   Dc.l convert_float_to_word                    ; floattoword
00034A88 <AmiBlitz3.ab3@25658>   Dc.l convert_float_to_long                    ; floattolong
00034A8C <AmiBlitz3.ab3@25659>   Dc.l convert_float_to_quick                   ; floattoquick
00034A90 <AmiBlitz3.ab3@25660>   Dc.l 0                                        ; floattofloat
00034A94 <AmiBlitz3.ab3@25661>   Dc.l convert_float_to_long                    ; floattolong
00034A98 <AmiBlitz3.ab3@25662>   Dc.l error_convert_types                      ; noconerr
00034A9C <AmiBlitz3.ab3@25665>   Dc.l convert_long_to_byte                     ; longtobyte
00034AA0 <AmiBlitz3.ab3@25666>   Dc.l convert_long_to_word                     ; longtoword
00034AA4 <AmiBlitz3.ab3@25667>   Dc.l 0                                        ; longtolong
00034AA8 <AmiBlitz3.ab3@25668>   Dc.l convert_long_to_quick                    ; longtoquick
00034AAC <AmiBlitz3.ab3@25669>   Dc.l convert_long_to_float                    ; longtofloat
00034AB0 <AmiBlitz3.ab3@25670>   Dc.l 0                                        ; longtolong
00034AB4 <AmiBlitz3.ab3@25671>   Dc.l error_convert_types                      ; noconerr
00034AB8 <AmiBlitz3.ab3@25674>   Dc.l error_convert_types                      ; noconerr
00034ABC <AmiBlitz3.ab3@25675>   Dc.l error_convert_types                      ; noconerr
00034AC0 <AmiBlitz3.ab3@25676>   Dc.l string_to_long                           ; stringtolong
00034AC4 <AmiBlitz3.ab3@25677>   Dc.l error_convert_types                      ; noconerr
00034AC8 <AmiBlitz3.ab3@25678>   Dc.l error_convert_types                      ; noconerr
00034ACC <AmiBlitz3.ab3@25679>   Dc.l string_to_long                           ; stringtolong
00034AD0 <AmiBlitz3.ab3@25680>   Ds.l 1
00034AD2 <AmiBlitz3.ab3@25686>   Dc.b $00,$2B                                  ;+ ; add
00034AD6 <AmiBlitz3.ab3@25687>   Dc.l do_plus_byte                             ;doplusb
00034ADA <AmiBlitz3.ab3@25688>   Dc.l do_plus_word                             ;doplusw
00034ADE <AmiBlitz3.ab3@25689>   Dc.l do_plus_long                             ;doplusl
00034AE2 <AmiBlitz3.ab3@25690>   Dc.l do_plus_long                             ;doplusl
00034AE6 <AmiBlitz3.ab3@25691>   Dc.l do_plus_float                            ;doplusf
00034AEA <AmiBlitz3.ab3@25692>   Ds.l 1
00034AEE <AmiBlitz3.ab3@25693>   Dc.l add_strings                              ;addstrings
00034AF0 <AmiBlitz3.ab3@25694>   Dc.b $0B,$B8
00034AF2 <AmiBlitz3.ab3@25696>   Dc.b $00,$2D                                  ;- ; sub
00034AF6 <AmiBlitz3.ab3@25697>   Dc.l do_minus_byte                            ;dominusb
00034AFA <AmiBlitz3.ab3@25698>   Dc.l do_minus_word                            ;dominusw
00034AFE <AmiBlitz3.ab3@25699>   Dc.l do_minus_long                            ;dominusl
00034B02 <AmiBlitz3.ab3@25700>   Dc.l do_minus_long                            ;dominusl
00034B06 <AmiBlitz3.ab3@25701>   Dc.l do_minus_float                           ;dominusf
00034B0E <AmiBlitz3.ab3@25702>   Ds.l 2
00034B10 <AmiBlitz3.ab3@25703>   Dc.b $0B,$B8
00034B12 <AmiBlitz3.ab3@25705>   Dc.b $00,$2A                                  ;* ; mul
00034B16 <AmiBlitz3.ab3@25706>   Dc.l do_times_byte                            ;dotimesb
00034B1A <AmiBlitz3.ab3@25707>   Dc.l do_times_word                            ;dotimesw
00034B1E <AmiBlitz3.ab3@25708>   Dc.l do_times_long                            ;dotimesl
00034B22 <AmiBlitz3.ab3@25709>   Dc.l do_times_quick                           ;dotimesq
00034B26 <AmiBlitz3.ab3@25710>   Dc.l do_times_float                           ;dotimesf
00034B2E <AmiBlitz3.ab3@25711>   Ds.l 2
00034B30 <AmiBlitz3.ab3@25712>   Dc.b $0F,$A0
00034B32 <AmiBlitz3.ab3@25714>   Dc.b $00,$2F                                  ;/ ; div
00034B36 <AmiBlitz3.ab3@25715>   Dc.l do_Div_byte                              ;dodivb
00034B3A <AmiBlitz3.ab3@25716>   Dc.l do_Div_word                              ;dodivb
00034B3E <AmiBlitz3.ab3@25717>   Dc.l do_Div_long                              ;dodivl
00034B42 <AmiBlitz3.ab3@25718>   Dc.l do_Div_quick                             ;dodivq
00034B46 <AmiBlitz3.ab3@25719>   Dc.l do_Div_float                             ;dodivf
00034B4E <AmiBlitz3.ab3@25720>   Ds.l 2
00034B50 <AmiBlitz3.ab3@25721>   Dc.b $0F,$A0
00034B52 <AmiBlitz3.ab3@25723>   Dc.b $00,$26                                  ;& ; & int
00034B56 <AmiBlitz3.ab3@25724>   Dc.l do_AND_byte                              ;doandb
00034B5A <AmiBlitz3.ab3@25725>   Dc.l do_AND_word                              ;doandw
00034B5E <AmiBlitz3.ab3@25726>   Dc.l do_AND_long                              ;doandl
00034B62 <AmiBlitz3.ab3@25727>   Dc.l do_AND_long                              ;doandl
00034B6E <AmiBlitz3.ab3@25728>   Ds.l 3
00034B70 <AmiBlitz3.ab3@25729>   Dc.b $13,$88
00034B72 <AmiBlitz3.ab3@25731>   Dc.b $00,$7C                                  ;| ;or int ;
00034B76 <AmiBlitz3.ab3@25732>   Dc.l do_OR_byte                               ;doorb
00034B7A <AmiBlitz3.ab3@25733>   Dc.l do_OR_word                               ;doorw
00034B7E <AmiBlitz3.ab3@25734>   Dc.l do_OR_long                               ;doorl
00034B82 <AmiBlitz3.ab3@25735>   Dc.l do_OR_long                               ;doorl
00034B8E <AmiBlitz3.ab3@25736>   Ds.l 3
00034B90 <AmiBlitz3.ab3@25737>   Dc.b $13,$88
00034B92 <AmiBlitz3.ab3@25739>   Dc.b $80,$42                                  ; AND int  ;(opand-opabcd)/$1c+$8000+fnum
00034B96 <AmiBlitz3.ab3@25740>   Dc.l do_AND_byte                              ;doandb
00034B9A <AmiBlitz3.ab3@25741>   Dc.l do_AND_word                              ;doandw
00034B9E <AmiBlitz3.ab3@25742>   Dc.l do_AND_long                              ;doandl
00034BA2 <AmiBlitz3.ab3@25743>   Dc.l do_AND_long                              ;doandl
00034BAE <AmiBlitz3.ab3@25744>   Ds.l 3
00034BB0 <AmiBlitz3.ab3@25745>   Dc.b $03,$E8
00034BB2 <AmiBlitz3.ab3@25747>   Dc.b $80,$8A                                  ; OR int   ;(opor-opabcd)/$1c+$8000+fnum
00034BB6 <AmiBlitz3.ab3@25748>   Dc.l do_OR_byte                               ;doorb
00034BBA <AmiBlitz3.ab3@25749>   Dc.l do_OR_word                               ;doorw
00034BBE <AmiBlitz3.ab3@25750>   Dc.l do_OR_long                               ;doorl
00034BC2 <AmiBlitz3.ab3@25751>   Dc.l do_OR_long                               ;doorl
00034BCE <AmiBlitz3.ab3@25752>   Ds.l 3
00034BD0 <AmiBlitz3.ab3@25753>   Dc.b $03,$E8
00034BD2 <AmiBlitz3.ab3@25755>   Dc.b $80,$73                                  ; EOR int  ;(opeor-opabcd)/$1c+$8000+fnum
00034BD6 <AmiBlitz3.ab3@25756>   Dc.l do_EOR_byte                              ;doeorb
00034BDA <AmiBlitz3.ab3@25757>   Dc.l do_EOR_word                              ;doeorw
00034BDE <AmiBlitz3.ab3@25758>   Dc.l do_EOR_long                              ;doeorl
00034BE2 <AmiBlitz3.ab3@25759>   Dc.l do_EOR_long                              ;doeorl
00034BEE <AmiBlitz3.ab3@25760>   Ds.l 3
00034BF0 <AmiBlitz3.ab3@25761>   Dc.b $03,$E8
00034BF2 <AmiBlitz3.ab3@25763>   Dc.b $80,$7C                                  ; LSL int  ;(oplsl-opabcd)/$1c+$8000+fnum
00034BF6 <AmiBlitz3.ab3@25764>   Dc.l do_LSL                                   ;dolslb
00034BFA <AmiBlitz3.ab3@25765>   Dc.l do_LSL                                   ;dolslw
00034BFE <AmiBlitz3.ab3@25766>   Dc.l do_LSL                                   ;dolsll
00034C02 <AmiBlitz3.ab3@25767>   Dc.l do_LSL                                   ;dolsll
00034C0E <AmiBlitz3.ab3@25768>   Ds.l 3
00034C10 <AmiBlitz3.ab3@25769>   Dc.b $17,$70
00034C12 <AmiBlitz3.ab3@25771>   Dc.b $80,$44                                  ; ASL int  ;(opasl-opabcd)/$1c+$8000+fnum
00034C16 <AmiBlitz3.ab3@25772>   Dc.l do_LSL                                   ;dolslb
00034C1A <AmiBlitz3.ab3@25773>   Dc.l do_LSL                                   ;dolslw
00034C1E <AmiBlitz3.ab3@25774>   Dc.l do_LSL                                   ;dolsll
00034C22 <AmiBlitz3.ab3@25775>   Dc.l do_LSL                                   ;dolsll
00034C2E <AmiBlitz3.ab3@25776>   Ds.l 3
00034C30 <AmiBlitz3.ab3@25777>   Dc.b $17,$70
00034C32 <AmiBlitz3.ab3@25779>   Dc.b $80,$7D                                  ; LSR int  ;(oplsr-opabcd)/$1c+$8000+fnum
00034C36 <AmiBlitz3.ab3@25780>   Dc.l do_LSR                                   ;dolsrb
00034C3A <AmiBlitz3.ab3@25781>   Dc.l do_LSR                                   ;dolsrw
00034C3E <AmiBlitz3.ab3@25782>   Dc.l do_LSR                                   ;dolsrl
00034C42 <AmiBlitz3.ab3@25783>   Dc.l do_LSR                                   ;dolsrl
00034C4E <AmiBlitz3.ab3@25784>   Ds.l 3
00034C50 <AmiBlitz3.ab3@25785>   Dc.b $17,$70
00034C52 <AmiBlitz3.ab3@25787>   Dc.b $80,$45                                  ; ASR int  ;(opasr-opabcd)/$1c+$8000+fnum
00034C56 <AmiBlitz3.ab3@25788>   Dc.l do_ASR                                   ;doasrb
00034C5A <AmiBlitz3.ab3@25789>   Dc.l do_ASR                                   ;doasrw
00034C5E <AmiBlitz3.ab3@25790>   Dc.l do_ASR                                   ;doasrl
00034C62 <AmiBlitz3.ab3@25791>   Dc.l do_ASR                                   ;doasrl
00034C6E <AmiBlitz3.ab3@25792>   Ds.l 3
00034C70 <AmiBlitz3.ab3@25793>   Dc.b $17,$70
00034C72 <AmiBlitz3.ab3@25795>   Dc.b $80,$B9                                  ;mod       ;$8006+tnum
00034C76 <AmiBlitz3.ab3@25796>   Dc.l do_mod_byte                              ;domodb
00034C7A <AmiBlitz3.ab3@25797>   Dc.l do_mod_word                              ;domodw
00034C7E <AmiBlitz3.ab3@25798>   Dc.l do_mod_long                              ;domodl
00034C82 <AmiBlitz3.ab3@25799>   Dc.l do_mod_quick                             ;domodq
00034C86 <AmiBlitz3.ab3@25800>   Dc.l do_mod_float                             ;domodf
00034C8E <AmiBlitz3.ab3@25801>   Ds.l 2
00034C90 <AmiBlitz3.ab3@25802>   Dc.b $13,$88
00034C92 <AmiBlitz3.ab3@25805>   Dc.b $00,$5E                                  ;^
00034C96 <AmiBlitz3.ab3@25806>   Dc.l do_pow                                   ;dopow
00034C9A <AmiBlitz3.ab3@25807>   Dc.l do_pow                                   ;dopow
00034C9E <AmiBlitz3.ab3@25808>   Dc.l do_pow                                   ;dopow
00034CA2 <AmiBlitz3.ab3@25809>   Dc.l do_pow                                   ;dopow
00034CA6 <AmiBlitz3.ab3@25810>   Dc.l do_pow                                   ;dopow
00034CAE <AmiBlitz3.ab3@25811>   Ds.l 2
00034CB0 <AmiBlitz3.ab3@25812>   Dc.b $1B,$58                                  ;7000
00034CB2 <AmiBlitz3.ab3@25815>   Dc.b $00,$3D                                  ;=
00034CB6 <AmiBlitz3.ab3@25816>   Dc.l do_equal_byte                            ;doeqb
00034CBA <AmiBlitz3.ab3@25817>   Dc.l do_equal_word                            ;doeqw
00034CBE <AmiBlitz3.ab3@25818>   Dc.l do_equal_long                            ;doeql
00034CC2 <AmiBlitz3.ab3@25819>   Dc.l do_equal_long                            ;doeql
00034CC6 <AmiBlitz3.ab3@25820>   Dc.l do_equal_float                           ;doeqf
00034CCA <AmiBlitz3.ab3@25821>   Dc.l do_equal_long                            ;doeql
00034CCE <AmiBlitz3.ab3@25822>   Dc.l do_equal_string                          ;doeqs
00034CD0 <AmiBlitz3.ab3@25823>   Dc.b $07,$D0                                  ;2000
00034CD2 <AmiBlitz3.ab3@25826>   Dc.b $3C,$3E                                  ;<>
00034CD6 <AmiBlitz3.ab3@25827>   Dc.l do_not_equal_byte                        ;doneb
00034CDA <AmiBlitz3.ab3@25828>   Dc.l do_not_equal_word                        ;donew
00034CDE <AmiBlitz3.ab3@25829>   Dc.l do_not_equal_long                        ;donel
00034CE2 <AmiBlitz3.ab3@25830>   Dc.l do_not_equal_long                        ;donel
00034CE6 <AmiBlitz3.ab3@25831>   Dc.l do_not_equal_float                       ;donef
00034CEA <AmiBlitz3.ab3@25832>   Dc.l do_not_equal_long                        ;donel
00034CEE <AmiBlitz3.ab3@25833>   Dc.l do_not_equal_string                      ;dones
00034CF0 <AmiBlitz3.ab3@25834>   Dc.b $07,$D0                                  ;2000
00034CF2 <AmiBlitz3.ab3@25837>   Dc.b $00,$3C                                  ;<
00034CF6 <AmiBlitz3.ab3@25838>   Dc.l do_littler_byte                          ;doltb
00034CFA <AmiBlitz3.ab3@25839>   Dc.l do_littler_word                          ;doltw
00034CFE <AmiBlitz3.ab3@25840>   Dc.l do_littler_long                          ;doltl
00034D02 <AmiBlitz3.ab3@25841>   Dc.l do_littler_long                          ;doltl
00034D06 <AmiBlitz3.ab3@25842>   Dc.l do_littler_float                         ;doltf
00034D0A <AmiBlitz3.ab3@25843>   Dc.l do_littler_long                          ;doltl
00034D0E <AmiBlitz3.ab3@25844>   Dc.l do_littler_string                        ;dolts
00034D10 <AmiBlitz3.ab3@25845>   Dc.b $07,$D0                                  ;2000
00034D12 <AmiBlitz3.ab3@25848>   Dc.b $3C,$3D                                  ;<=
00034D16 <AmiBlitz3.ab3@25849>   Dc.l do_littler_equal_byte                    ;doleb
00034D1A <AmiBlitz3.ab3@25850>   Dc.l do_littler_equal_word                    ;doleb
00034D1E <AmiBlitz3.ab3@25851>   Dc.l do_littler_equal_long                    ;dolel
00034D22 <AmiBlitz3.ab3@25852>   Dc.l do_littler_equal_long                    ;dolel
00034D26 <AmiBlitz3.ab3@25853>   Dc.l do_littler_equal_float                   ;dolef
00034D2A <AmiBlitz3.ab3@25854>   Dc.l do_littler_equal_long                    ;dolel
00034D2E <AmiBlitz3.ab3@25855>   Dc.l do_littler_equal_string                  ;doles
00034D30 <AmiBlitz3.ab3@25856>   Dc.b $07,$D0                                  ;2000
00034D32 <AmiBlitz3.ab3@25859>   Dc.b $00,$3E                                  ;>
00034D36 <AmiBlitz3.ab3@25860>   Dc.l do_greater_byte                          ;dogtb
00034D3A <AmiBlitz3.ab3@25861>   Dc.l do_greater_word                          ;dogtw
00034D3E <AmiBlitz3.ab3@25862>   Dc.l do_greater_long                          ;dogtl
00034D42 <AmiBlitz3.ab3@25863>   Dc.l do_greater_long                          ;dogtl
00034D46 <AmiBlitz3.ab3@25864>   Dc.l do_greater_float                         ;dogtf
00034D4A <AmiBlitz3.ab3@25865>   Dc.l do_greater_long                          ;dogtl
00034D4E <AmiBlitz3.ab3@25866>   Dc.l do_greater_string                        ;dogts
00034D50 <AmiBlitz3.ab3@25867>   Dc.b $07,$D0                                  ;2000
00034D52 <AmiBlitz3.ab3@25870>   Dc.b $3E,$3D                                  ;>=
00034D56 <AmiBlitz3.ab3@25871>   Dc.l do_greater_equal_byte                    ;dogeb
00034D5A <AmiBlitz3.ab3@25872>   Dc.l do_greater_equal_word                    ;dogew
00034D5E <AmiBlitz3.ab3@25873>   Dc.l do_greater_equal_long                    ;dogel
00034D62 <AmiBlitz3.ab3@25874>   Dc.l do_greater_equal_long                    ;dogel
00034D66 <AmiBlitz3.ab3@25875>   Dc.l do_greater_equal_float                   ;dogef
00034D6A <AmiBlitz3.ab3@25876>   Dc.l do_greater_equal_long                    ;dogel
00034D6E <AmiBlitz3.ab3@25877>   Dc.l do_greater_equal_string                  ;doges
00034D70 <AmiBlitz3.ab3@25878>   Dc.b $07,$D0                                  ;2000
00034D72 <AmiBlitz3.ab3@25880>   Dc.b $80,$CD                                  ;$8000+26+tnum
00034D76 <AmiBlitz3.ab3@25881>   Dc.l _BitTst
00034D7A <AmiBlitz3.ab3@25882>   Dc.l _BitTst
00034D7E <AmiBlitz3.ab3@25883>   Dc.l _BitTst
00034D82 <AmiBlitz3.ab3@25884>   Dc.l _BitTst
00034D8E <AmiBlitz3.ab3@25885>   Ds.l 3
00034D90 <AmiBlitz3.ab3@25886>   Dc.b $1F,$40                                  ;8000
00034D92 <AmiBlitz3.ab3@25888>   Dc.b $80,$CE                                  ;$8000+27+tnum
00034D96 <AmiBlitz3.ab3@25889>   Dc.l _BitSet
00034D9A <AmiBlitz3.ab3@25890>   Dc.l _BitSet
00034D9E <AmiBlitz3.ab3@25891>   Dc.l _BitSet
00034DA2 <AmiBlitz3.ab3@25892>   Dc.l _BitSet
00034DAE <AmiBlitz3.ab3@25893>   Ds.l 3
00034DB0 <AmiBlitz3.ab3@25894>   Dc.b $1F,$40                                  ;8000
00034DB2 <AmiBlitz3.ab3@25896>   Dc.b $80,$CF                                  ;$8000+28+tnum
00034DB6 <AmiBlitz3.ab3@25897>   Dc.l _BitClr
00034DBA <AmiBlitz3.ab3@25898>   Dc.l _BitClr
00034DBE <AmiBlitz3.ab3@25899>   Dc.l _BitClr
00034DC2 <AmiBlitz3.ab3@25900>   Dc.l _BitClr
00034DCE <AmiBlitz3.ab3@25901>   Ds.l 3
00034DD0 <AmiBlitz3.ab3@25902>   Dc.b $1F,$40                                  ;8000
00034DD2 <AmiBlitz3.ab3@25904>   Dc.b $80,$D0                                  ;$8000+29+tnum
00034DD6 <AmiBlitz3.ab3@25905>   Dc.l _BitChg
00034DDA <AmiBlitz3.ab3@25906>   Dc.l _BitChg
00034DDE <AmiBlitz3.ab3@25907>   Dc.l _BitChg
00034DE2 <AmiBlitz3.ab3@25908>   Dc.l _BitChg
00034DEE <AmiBlitz3.ab3@25909>   Ds.l 3
00034DF0 <AmiBlitz3.ab3@25910>   Dc.b $1F,$40                                  ;8000
00034DF2 <AmiBlitz3.ab3@25912>   Dc.b $00,$00
00034DF6 <AmiBlitz3.ab3@25917> modetable:   Dc.l typemode
00034DFA <AmiBlitz3.ab3@25920> newtypebase: Dc.l newtype_byte
00034E02 <AmiBlitz3.ab3@25923>   Dc.l newtype_word,$01                                    
00034E04 <AmiBlitz3.ab3@25924>   Dc.w $0001
00034E08 <AmiBlitz3.ab3@25925>   Dc.b 13,"b",0,0
00034E10 <AmiBlitz3.ab3@25928>   Dc.l newtype_long,$02
00034E12 <AmiBlitz3.ab3@25929>   Dc.w $0002
00034E16 <AmiBlitz3.ab3@25930>   Dc.b 13,"w",0,0
00034E1E <AmiBlitz3.ab3@25933>   Dc.l newtype_quick,$03                                   
00034E20 <AmiBlitz3.ab3@25934>   Dc.w $0004
00034E24 <AmiBlitz3.ab3@25935>   Dc.b 13,"l",0,0
00034E2C <AmiBlitz3.ab3@25938>   Dc.l newtype_float,$04                                   
00034E2E <AmiBlitz3.ab3@25939>   Dc.w $0004
00034E32 <AmiBlitz3.ab3@25940>   Dc.b 13,"q",0,0
00034E3A <AmiBlitz3.ab3@25944>   Dc.l newtype_double,$05                                  ;make problems on old residents
00034E3C <AmiBlitz3.ab3@25945>   Dc.w $0004
00034E40 <AmiBlitz3.ab3@25946>   Dc.b 13,"f",0,0
00034E48 <AmiBlitz3.ab3@25949>   Dc.l newtype_double,$06
00034E4A <AmiBlitz3.ab3@25950>   Dc.w $0004
00034E4E <AmiBlitz3.ab3@25951>   Dc.b 13,"a",0,0
00034E56 <AmiBlitz3.ab3@25954>   Dc.l newtype_string,$05                                  ;?? has to by $06 becous is number 6 not 5
00034E58 <AmiBlitz3.ab3@25955>   Dc.w $0008
00034E5C <AmiBlitz3.ab3@25956>   Dc.b 13,"d",0,0
00034E64 <AmiBlitz3.ab3@25960>   Dc.l $0000000,$07                                        ;stringtype
00034E66 <AmiBlitz3.ab3@25961>   Dc.w $0004
00034E6A <AmiBlitz3.ab3@25962>   Dc.b 13,"s",0,0
00034E72 <AmiBlitz3.ab3@25965>   Dc.l $00,$00
00034E74 <AmiBlitz3.ab3@25966>   Dc.w $0000
00034E78 <AmiBlitz3.ab3@25967>   Dc.b $01,$00,$00,$00
00034ED8 <AmiBlitz3.ab3@25970> incdir:               Ds.l 24                              ;dcb.b   96,0    org source
00034EDA <AmiBlitz3.ab3@25974> dirmode:              Ds.w 1                               ;shows if directmode is on
00034EDE <AmiBlitz3.ab3@25976>                       Ds.l 1                               ;int org source ;intuition!
00034EE0 <AmiBlitz3.ab3@25977> maxobject_pos:        Ds.w 1                               ;maxat org source ;max at
00034EE4 <AmiBlitz3.ab3@25978> maxsat:               Ds.l 1                               ;data1 info pos
00034EE6 <AmiBlitz3.ab3@25979> number_of_objects:    Ds.w 1                               ;nummaxs org source ;number of maximums
00034EE8 <AmiBlitz3.ab3@25981> maxsused:             Ds.w 1                               ;maximums used in prog
00034EEA <AmiBlitz3.ab3@25985> dark:                 Ds.w 1                               ;dark compile?
00034EEC <AmiBlitz3.ab3@25986> qlab:                 Ds.w 1                               ;quick lab allocate
00034EF0 <AmiBlitz3.ab3@25987> defaulttype:          Dc.l newtype_quick                   ;dc.l quicktype org source
00034EF2 <AmiBlitz3.ab3@25992> anyerrs:              Dc.w -1                              ;Any Errors in compile ?
00034EF4 <AmiBlitz3.ab3@25993> debugversion:         Ds.w 1                               ;makeexec org source ;make an executable file!
00034EF8 <AmiBlitz3.ab3@25994> noinits:              Ds.l 1                               ;flag for if we have any init routines!
00034EFC <AmiBlitz3.ab3@25996> letstart:             Ds.l 1
00034EFE <AmiBlitz3.ab3@25997> dontwrite:            Ds.w 1                               ;nomemleft org source
00034F7E <AmiBlitz3.ab3@25998> lastgloballabel:      Ds.l 32                              ;lastbiglab ds.b 128 org source
00034F82 <AmiBlitz3.ab3@26000> locdatast:            Ds.l 1
00034F86 <AmiBlitz3.ab3@26001> firstpend:            Ds.l 1
00034F8A <AmiBlitz3.ab3@26005> data2at:              Ds.l 1
00034F8E <AmiBlitz3.ab3@26006> data2:                Ds.l 1
00034F92 <AmiBlitz3.ab3@26007> data1start:           Ds.l 1                               ;data1at org source
00034F96 <AmiBlitz3.ab3@26008> data1:                Ds.l 1                               ;pc for initialized data!
00034F9A <AmiBlitz3.ab3@26009> destbufferstart:      Ds.l 1                               ;pcat org source
00034F9E <AmiBlitz3.ab3@26013> destbufferend:        Ds.l 1                               ;libat org source
00034FA2 <AmiBlitz3.ab3@26014> libend:               Ds.l 1                               ;lib org source
00034FA6 <AmiBlitz3.ab3@26015> allat:                Ds.l 1                               ;highest allocmemd location for code
00034FB0 <AmiBlitz3.ab3@26016> dummyasm:             Dc.w 0,0,0,0,0
00034FB4 <AmiBlitz3.ab3@26017>                       Dc.l 0
00034FB6 <AmiBlitz3.ab3@26018>                       Dc.w 0
00034FBA <AmiBlitz3.ab3@26022> buff1:                Ds.l 1                               ;buffer for text get
00034FBE <AmiBlitz3.ab3@26023> buff2:                Ds.l 1                               ;ditto for dest
00034FC0 <AmiBlitz3.ab3@26024> constmode:            Ds.w 1                               ;0 for norm, <>0 for assembler
00034FC2 <AmiBlitz3.ab3@26025> asmtype:              Ds.w 1                               ;0=contains no prog reference
00034FC4 <AmiBlitz3.ab3@26026> extraword:            Ds.w 1                               ;the extension word for assembler
00034FC6 <AmiBlitz3.ab3@26027> extraword2:           Ds.w 1                               ;ditto
00034FC8 <AmiBlitz3.ab3@26028> asmsize:              Ds.w 1
00034FCC <AmiBlitz3.ab3@26029> asmbuff:              Ds.l 1
00034FCE <AmiBlitz3.ab3@26030> asmlen:               Ds.w 1                               ;first (src) text len
00034FD0 <AmiBlitz3.ab3@26031> asmlen2:              Ds.w 1                               ;second (dest)
00034FD4 <AmiBlitz3.ab3@26032> templabel:            Ds.l 1                               ;linked list of expressions to resolve
00034FD6 <AmiBlitz3.ab3@26035> macnum:               Ds.w 1
00034FDA <AmiBlitz3.ab3@26037>                       Dc.l 0                               ;address of next 0 in include fil
00034FDE <AmiBlitz3.ab3@26038> titleat:              Ds.l 1                               ;5 longs for compile streaks
00034FE8 <AmiBlitz3.ab3@26039> progress_per_line:    Ds.w 5                               ;titleadd ds 5 org source ;5 adds for compile streaks
00034FEA <AmiBlitz3.ab3@26040> connest:              Ds.w 1                               ;conditional nest level
00034FEE <AmiBlitz3.ab3@26041> firstconst:           Ds.l 1                               ;first constant (#a)
00034FF0 <AmiBlitz3.ab3@26042> numarg:               Ds.w 1                               ;number of macro arguements
00034FF4 <AmiBlitz3.ab3@26043> myoline:              Ds.l 1                               ;macro done yet?
00034FF8 <AmiBlitz3.ab3@26044> myline:               Ds.l 1                               ;pointer to some memory to create
00034FFC <AmiBlitz3.ab3@26047>                       Ds.l 1
0003503C <AmiBlitz3.ab3@26048> concomstack:          Ds.l 16                              ;32 deep conditional compilation
00035040 <AmiBlitz3.ab3@26049> concomsp:             Dc.l concomstack                     ;stack pointer
00035042 <AmiBlitz3.ab3@26050> oldqflag:             Ds.w 1
00035046 <AmiBlitz3.ab3@26053>                       Ds.l 1
00035048 <AmiBlitz3.ab3@26055>                       Ds.w 1
0003504C <AmiBlitz3.ab3@26056> firstfor:             Ds.l 1                               ;first for
0003504E <AmiBlitz3.ab3@26057> stackpar:             Ds.w 1                               ;pushflag org source ;1 par to stack 0 normal
00035050 <AmiBlitz3.ab3@26058> sbgot:                Ds.w 1                               ;flag for string got 2
00035052 <AmiBlitz3.ab3@26059> convsize:             Ds.w 1                               ;usertype org source
00035054 <AmiBlitz3.ab3@26060> userp:                Ds.w 1
00035058 <AmiBlitz3.ab3@26065> ptr_userlibs_list:    Ds.l 1                               ;libslist org source
0003505A <AmiBlitz3.ab3@26066> a2offset:             Ds.w 1                               ;stackuse org source ;stack used when gathering lib parameters
0003505C <AmiBlitz3.ab3@26067> numreps:              Ds.w 1                               ;number of repeats in a repeatable
00035060 <AmiBlitz3.ab3@26069> locloc:               Ds.l 1
00035062 <AmiBlitz3.ab3@26070> locchar:              Ds.w 1
000350E2 <AmiBlitz3.ab3@26071> stbuff:               Ds.l 32                              ;was 8    ;six string varoffs
000350E4 <AmiBlitz3.ab3@26072> commode:              Ds.w 1                               ;in comma mode...
000350E8 <AmiBlitz3.ab3@26073> lastoffset_org:       Ds.l 1                               ;lastoffset org source ;last offset in calcvar!
000350EC <AmiBlitz3.ab3@26074> linenumat:            Dc.l $FFFFFFFF                       ;linecounter ;dc -1 org source ;line being processed
000350F0 <AmiBlitz3.ab3@26075> compilelinecounter:   Dc.l $FFFFFFFF                       ;menuret dc -1 org source ;menu return code
000350F2 <AmiBlitz3.ab3@26077>                       Ds.w 1                               ;opt reset offset
000351F2 <AmiBlitz3.ab3@26079>                       Ds.l 64                              ;Ds.b vcodelen org source ;code used to generate
000352F2 <AmiBlitz3.ab3@26081>                       Ds.l 64                              ;Ds.b vcodelen org source ;above for let.....
000352F4 <AmiBlitz3.ab3@26082> varcodelen:           Ds.w 1                               ;and length
000352F6 <AmiBlitz3.ab3@26084>                       Ds.w 1
000352FC <AmiBlitz3.ab3@26085> oldvcodelen:          Ds.w 3                               ;old varcodelen
00035300 <AmiBlitz3.ab3@26089> tempvm:               Ds.l 1                               ;memlib org source ;address of memory library
00035302 <AmiBlitz3.ab3@26090> memlibstat:           Ds.w 1                               ;status of memory library during
00035304 <AmiBlitz3.ab3@26093>                       Dc.w 0
00035306 <AmiBlitz3.ab3@26095>                       Dc.w 0
00035308 <AmiBlitz3.ab3@26097> varmode:              Ds.w 1                               ;0 a5 pointer to global
0003530C <AmiBlitz3.ab3@26099> currentfunction:      Ds.l 1                               ;thisproc org source
00035310 <AmiBlitz3.ab3@26100> firstproc:            Ds.l 1                               ;firstproc org source ;this procedure being 'done'
00035312 <AmiBlitz3.ab3@26101> 
00035314 <AmiBlitz3.ab3@26103> skipcode:             Ds.w 1                               ;nocompile ;comflag org source ;0 if no compile
00035318 <AmiBlitz3.ab3@26104> passstack:            Ds.l 1
0003531C <AmiBlitz3.ab3@26105> zero:                 Ds.l 1                               ;ZERO!
0003531E <AmiBlitz3.ab3@26106> ininclude:            Ds.w 1                               ;numincs org source ;number of include files
00035322 <AmiBlitz3.ab3@26108> xinclude_base:        Ds.l 1                               ;firstxinc org source ;first exclusive include.
00035326 <AmiBlitz3.ab3@26109> constantbase:         Ds.l 1                               ;firstinc org source ;first include
00035328 <AmiBlitz3.ab3@26110> lasta6:               Dc.w $FFFF                           ;-1 org source
0003532A <AmiBlitz3.ab3@26111> instringon:           Ds.w 1                               ;quoteflag org source
0003532E <AmiBlitz3.ab3@26112> ptr_macrobuffer_begin:Ds.l 1                               ;macrobuff org source ;pointer to macro collection buffer ;begin
00035332 <AmiBlitz3.ab3@26113> ptr_macrobuffer_end:  Ds.l 1                               ;macrobufff org source ;end of above ;end of
00035336 <AmiBlitz3.ab3@26114> macrobase:            Ds.l 1                               ;firstmacro org source ;linked list of macro's ;macrolist
0003533A <AmiBlitz3.ab3@26115> endop:                Ds.l 1                               ;end of program pc - before finishups!
0003533E <AmiBlitz3.ab3@26116> labelbase:            Ds.l 1                               ;firstlabel org source ;first lib struct
00035342 <AmiBlitz3.ab3@26117> end_of_tokenlist:     Ds.l 1                               ;lasttoken org source
00035344 <AmiBlitz3.ab3@26118> numstatic:            Ds.w 1                               ;number of static structs
00035348 <AmiBlitz3.ab3@26119> staticdata:           Ds.l 1                               ;data1 val for statics
0003534C <AmiBlitz3.ab3@26120> libpointer:           Ds.l 1                               ;firstlib org source ;first lib struct
0003534E <AmiBlitz3.ab3@26121> sbasegot:             Ds.w 1                               ;string base got?
00035352 <AmiBlitz3.ab3@26122> litdata1:             Ds.l 1
00035356 <AmiBlitz3.ab3@26126> objlen:               Ds.l 1
0003535A <AmiBlitz3.ab3@26127> hunkoffsetcounter:    Ds.l 1                               ;numoffs org source
0003535E <AmiBlitz3.ab3@26128> hunkoffsetbase:       Ds.l 1                               ;firstoff org source ;pointer to linked list
00035360 <AmiBlitz3.ab3@26130> flagmask:             Ds.w 1                               ;mask for flag of variable when
00035362 <AmiBlitz3.ab3@26132> notshared:            Ds.w 1                               ;added org source ;flag for seeing if variable was added!
00035364 <AmiBlitz3.ab3@26133> nonew:                Ds.w 1                               ;1 to inhibit new variable creation
00035368 <AmiBlitz3.ab3@26134> temp1:                Ds.l 1
0003536C <AmiBlitz3.ab3@26135> temp2:                Ds.l 1
00035370 <AmiBlitz3.ab3@26137> ptr_parameterstore:   Ds.l 1                               ;namebuff ds.b 128 org source
00035374 <AmiBlitz3.ab3@26138> fib_DirEntryType:     Ds.l 1                               ;namebuff+4 org source
000353E8 <AmiBlitz3.ab3@26139> fib_FileName:         Ds.l 29                              ;namebuff+8 org source
000353EC <AmiBlitz3.ab3@26140> fib_Size:             Ds.l 1                               ;namebuff+124 org source
0003546C <AmiBlitz3.ab3@26142> namebuff2:            Ds.b 128
00035474 <AmiBlitz3.ab3@26143>                       Ds.b 8                               ;for fileinfoblock
000354B4 <AmiBlitz3.ab3@26146> optstuff:             Ds.b 64                              ;temp opt make buffer
000354B6 <AmiBlitz3.ab3@26163>   Dc.b $00,$01                                             ; 1 byte schreiben ;one byte stuff...
000354BA <AmiBlitz3.ab3@26164>   Dc.l xtra_versionnumber                                  ; vers org source
000354BE <AmiBlitz3.ab3@26165>   Dc.l create_iconfile                                     ; create icon for executable
000354C2 <AmiBlitz3.ab3@26166>   Ds.l 1
000354C4 <AmiBlitz3.ab3@26168>   Dc.b $00,$02                                             ; 2 bytes schreiben  ;two byte stuff...
000354C8 <AmiBlitz3.ab3@26171>   Dc.l set_use_debugger
000354CC <AmiBlitz3.ab3@26172>   Dc.l AL_0_11010                                          ;+obsolet: debugger
000354D0 <AmiBlitz3.ab3@26173>   Dc.l AL_0_1103C                                          ;+obsolet: long arrays
000354D4 <AmiBlitz3.ab3@26174>   Dc.l AL_0_11068                                          ;+obsolet: expand macros
000354D8 <AmiBlitz3.ab3@26175>   Dc.l AL_0_11094                                          ;+obsolet: quoted macros
000354DC <AmiBlitz3.ab3@26176>   Dc.l set_make_smallestcode
000354E0 <AmiBlitz3.ab3@26177>   Dc.l set_link_debuginfo
000354E4 <AmiBlitz3.ab3@26178>   Dc.l set_autorun
000354E8 <AmiBlitz3.ab3@26179>   Dc.l set_interruptcheck
000354EC <AmiBlitz3.ab3@26180>   Dc.l set_assemblercheck
000354F0 <AmiBlitz3.ab3@26182>   Dc.l set_overflowcheck
000354F4 <AmiBlitz3.ab3@26183>   Dc.l default_obsolete                                    ;+obsolet: ohne inhalt
000354F8 <AmiBlitz3.ab3@26184>   Dc.l default_interruptcheck                              ;+obsolet: interruptcheck vorgabe
000354FC <AmiBlitz3.ab3@26185>   Dc.l default_overflowcheck                               ;+obsolet: overflow vorgabe
00035500 <AmiBlitz3.ab3@26188>   Ds.l 1
00035502 <AmiBlitz3.ab3@26190>   Dc.b $00,$04                                             ; 4 bytes schreiben..  ;four byte stuff...
00035506 <AmiBlitz3.ab3@26197>   Dc.l objectbuffer
0003550A <AmiBlitz3.ab3@26198>   Dc.l libsbuffer
0003550E <AmiBlitz3.ab3@26199>   Dc.l systembuffer
00035512 <AmiBlitz3.ab3@26200>   Dc.l databuffer
00035516 <AmiBlitz3.ab3@26201>   Dc.l macrobuffer_size
0003551A <AmiBlitz3.ab3@26202>   Dc.l stringbuffer
0003551E <AmiBlitz3.ab3@26205>   Ds.l 1
00035520 <AmiBlitz3.ab3@26209>   Dc.b $02,$20                                             ;dc 68*8; 544 bytes schreiben.
00035528 <AmiBlitz3.ab3@26210>   Dc.l residents_table,0
0003552A <AmiBlitz3.ab3@26214>   Dc.b $01,$80                                             ;dc 192*2; 384 bytes schreiben
00035532 <AmiBlitz3.ab3@26215>   Dc.l exepath,0                                           ; exepath und exefilename jeweils 192 bytes
00035534 <AmiBlitz3.ab3@26216>   Ds.w 1
00035630 <AmiBlitz3.ab3@26220>   Ds.l 63
0003572C <AmiBlitz3.ab3@26221>   Ds.l 63
00035828 <AmiBlitz3.ab3@26222>   Ds.l 63
0003590A <AmiBlitz3.ab3@26223>   Ds.w 113
0003590C <AmiBlitz3.ab3@26226> comsettings_message:  Ds.w 1                               ;allchg org source
0003590E <AmiBlitz3.ab3@26227> xtra_versionnumber:   Ds.w 1                               ;vers org source
00035914 <AmiBlitz3.ab3@26231>   CLR.b exefilename
00035916 <AmiBlitz3.ab3@26232>   TST.l d0
0003591A <AmiBlitz3.ab3@26233>   BNE read_xtrafile__l10
0003591C <AmiBlitz3.ab3@26234> RTS
00035922 <AmiBlitz3.ab3@26237>   JSR free_residents                                       ;jsr freeres2 org source
00035928 <AmiBlitz3.ab3@26238> 
0003592E <AmiBlitz3.ab3@26239>   LEA ptr_xtradata,A2
00035930 <AmiBlitz3.ab3@26240>   MOVEQ.l #$00,D4
00035932 <AmiBlitz3.ab3@26243>     MOVE.w (A2)+,D4                                        ; anzahl bytes zum lesen
00035936 <AmiBlitz3.ab3@26244>     BEQ.b read_xtrafile__done
00035938 <AmiBlitz3.ab3@26247>     MOVE.l (A2)+,D2
0003593C <AmiBlitz3.ab3@26248>   BEQ.b read_xtrafile__loop
0003593E <AmiBlitz3.ab3@26250>   MOVE.l D4,D3
00035940 <AmiBlitz3.ab3@26251>   MOVE.l D7,D1
00035944 <AmiBlitz3.ab3@26252>   JSR _Read(A6)                                            ; d1: file, d2: buffer, d3:length
00035946 <AmiBlitz3.ab3@26253>   TST.l D0
0003594A <AmiBlitz3.ab3@26254>   BNE.b read_xtrafile__loop2
0003594E <AmiBlitz3.ab3@26255> BRA.w read_xtrafile__done2
00035954 <AmiBlitz3.ab3@26258>   TST.b xtra_versionnumber
00035958 <AmiBlitz3.ab3@26259>    BNE.b read_xtrafile__nover0
00035960 <AmiBlitz3.ab3@26260>   MOVE.w #$0080,set_autorun                                ;auto run on
0003596A <AmiBlitz3.ab3@26261>   MOVE.w default_interruptcheck,set_interruptcheck         ;interupt checking on
00035970 <AmiBlitz3.ab3@26262>   CLR.w set_assemblercheck                                 ;assembler checking off
0003597A <AmiBlitz3.ab3@26263>   MOVE.w default_overflowcheck,set_overflowcheck           ;overflow chex
0003597E <AmiBlitz3.ab3@26264> BRA.b read_xtrafile__ver0
00035980 <AmiBlitz3.ab3@26267>   MOVE.l D7,D1                                             ;load cli arg!
00035986 <AmiBlitz3.ab3@26268>   MOVE.l #str_cliarguments,D2
0003598C <AmiBlitz3.ab3@26269>   MOVE.l #116,D3                                           ; vorher 128 , jetzt 8 weniger fuer die Versionsdaten
00035990 <AmiBlitz3.ab3@26270>   JSR _Read(A6)                                            ; d1: file, d2: buffer, d3:length
00035996 <AmiBlitz3.ab3@26271>   MOVE.l #str_cliarguments,A0
0003599C <AmiBlitz3.ab3@26272>   ADDA.l #115,A0
000359A2 <AmiBlitz3.ab3@26273>   MOVE.l #0,(a0) ; terminate it!
000359A4 <AmiBlitz3.ab3@26275>   MOVE.l D7,D1                                             ; I know, I know. Honitos started this horrible thing, see below...
000359AA <AmiBlitz3.ab3@26276>   MOVE.l #stacksize,D2
000359B0 <AmiBlitz3.ab3@26277>   MOVE.l #4,D3
000359B4 <AmiBlitz3.ab3@26278>   JSR _Read(A6)
000359BE <AmiBlitz3.ab3@26279>   CMP.l ##MIN_STACKSIZE,stacksize
000359C2 <AmiBlitz3.ab3@26280>   BGE 'stackok
000359CC <AmiBlitz3.ab3@26281>   MOVE.l ##MIN_STACKSIZE,stacksize
000359CE <AmiBlitz3.ab3@26284>   MOVE.l D7,D1
000359D4 <AmiBlitz3.ab3@26285>   MOVE.l #versioninformation,D2
000359DA <AmiBlitz3.ab3@26286>   MOVE.l #4,D3
000359DE <AmiBlitz3.ab3@26287>   JSR _Read(A6)
000359E0 <AmiBlitz3.ab3@26289>   MOVE.l D7,D1
000359E6 <AmiBlitz3.ab3@26290>   MOVE.l #number_of_builds,D2
000359EC <AmiBlitz3.ab3@26291>   MOVE.l #4,D3
000359F0 <AmiBlitz3.ab3@26292>   JSR _Read(A6)
000359F6 <AmiBlitz3.ab3@26298> 
000359FC <AmiBlitz3.ab3@26299>   MOVE.l A7,errstack
00035A06 <AmiBlitz3.ab3@26300>   MOVE.l #read_xtrafile__done2,errcont
00035A0E <AmiBlitz3.ab3@26301>   MOVE.w #$FFFF,ezerr
00035A14 <AmiBlitz3.ab3@26304>     MOVE.l #temp1,D2                                   ;LOAD maxobjectsvalues
00035A16 <AmiBlitz3.ab3@26305>     MOVEQ.l #$04,D3
00035A18 <AmiBlitz3.ab3@26306>     MOVE.l D7,D1
00035A1C <AmiBlitz3.ab3@26307>     JSR _Read(A6)
00035A1E <AmiBlitz3.ab3@26308>     TST.l D0
00035A22 <AmiBlitz3.ab3@26309>     BEQ.b read_xtrafile__done2
00035A28 <AmiBlitz3.ab3@26310>     MOVE.w temp1,D1
00035A2A <AmiBlitz3.ab3@26311>     TST.w d1                                               ;new
00035A2E <AmiBlitz3.ab3@26312>     BEQ read_xtrafile__done2                                         ;new
00035A34 <AmiBlitz3.ab3@26313>      JSR AJL_0_6F1A
00035A3A <AmiBlitz3.ab3@26315>     CMP.l #0,a1
00035A3E <AmiBlitz3.ab3@26316>     BEQ read_xtrafile__dloop
00035A42 <AmiBlitz3.ab3@26317>     MOVE.l $12(A1),D0
00035A4A <AmiBlitz3.ab3@26318>     MOVE.w temp1+2,-$4(A1,D0.L)
00035A4E <AmiBlitz3.ab3@26319> BRA.b read_xtrafile__dloop
00035A52 <AmiBlitz3.ab3@26325>   LEA residents_table(PC),A0
00035A54 <AmiBlitz3.ab3@26326>   MOVEQ.l #$07,D0
00035A58 <AmiBlitz3.ab3@26329>     CLR.l $40(A0)
00035A5C <AmiBlitz3.ab3@26330>     LEA ResidentEntryStep(A0),A0   ; $44
00035A60 <AmiBlitz3.ab3@26331>   DBF D0,read_xtrafile__loop3
00035A64 <AmiBlitz3.ab3@26333>   MOVEM.l D7/A6,-(A7)
00035A6A <AmiBlitz3.ab3@26334>   JSR init_buffers
00035A70 <AmiBlitz3.ab3@26335>   JSR reloadresident
00035A74 <AmiBlitz3.ab3@26336>   MOVEM.l (A7)+,D7/A6
00035A76 <AmiBlitz3.ab3@26337> RTS
00035A7E <AmiBlitz3.ab3@26341>   MOVE.b #$1,xtra_versionnumber                            ;.xtra version number...
00035A84 <AmiBlitz3.ab3@26350>   LEA ptr_xtradata,A2
00035A86 <AmiBlitz3.ab3@26351>   MOVEQ.l #$00,D4
00035A88 <AmiBlitz3.ab3@26355>   MOVE.w (A2)+,D4                                          ; anzahl bytes zu schreiben
00035A8C <AmiBlitz3.ab3@26356>   BEQ.b write_xtrafile__done
00035A8E <AmiBlitz3.ab3@26359>    MOVE.l (A2)+,D2
00035A92 <AmiBlitz3.ab3@26360>    BEQ.b write_xtrafile__loop
00035A94 <AmiBlitz3.ab3@26362>    MOVE.l D4,D3
00035A96 <AmiBlitz3.ab3@26363>    MOVE.l D7,D1                                            ; schreiben der daten in ptr_xtradata
00035A9A <AmiBlitz3.ab3@26364>    JSR _Write(A6)                                          ; d1: file, d2: buffer, d3:length
00035A9E <AmiBlitz3.ab3@26365> BRA.b write_xtrafile__loop2
00035AA0 <AmiBlitz3.ab3@26368>   MOVE.l D7,D1
00035AA6 <AmiBlitz3.ab3@26369>   MOVE.l #str_cliarguments,D2
00035AAC <AmiBlitz3.ab3@26370>   MOVE.l #116,D3
00035AB0 <AmiBlitz3.ab3@26371>   JSR _Write(A6)                                           ; hier werden 116 bytes an cli_arguments geschrieben !!
00035AB2 <AmiBlitz3.ab3@26373>   MOVE.l D7,D1
00035AB8 <AmiBlitz3.ab3@26374>   MOVE.l #stacksize,D2
00035ABE <AmiBlitz3.ab3@26375>   MOVE.l #4,D3
00035AC2 <AmiBlitz3.ab3@26376>   JSR _Write(A6)
00035AC4 <AmiBlitz3.ab3@26378>   MOVE.l D7,D1
00035ACA <AmiBlitz3.ab3@26379>   MOVE.l #versioninformation,D2
00035AD0 <AmiBlitz3.ab3@26380>   MOVE.l #4,D3
00035AD4 <AmiBlitz3.ab3@26381>   JSR _Write(A6)
00035AD6 <AmiBlitz3.ab3@26383>   MOVE.l D7,D1
00035ADC <AmiBlitz3.ab3@26384>   MOVE.l #number_of_builds,D2
00035AE2 <AmiBlitz3.ab3@26385>   MOVE.l #4,D3
00035AE6 <AmiBlitz3.ab3@26386>   JSR _Write(A6)
00035AEC <AmiBlitz3.ab3@26392>   LEA libpointer,A2
00035AEE <AmiBlitz3.ab3@26395>     MOVE.l (A2),D0
00035AF2 <AmiBlitz3.ab3@26396>     BEQ.w write_xtrafile__done2
00035AF4 <AmiBlitz3.ab3@26397>     MOVEA.l D0,A2
00035AF8 <AmiBlitz3.ab3@26398>     MOVE.l $12(A2),D4
00035AFC <AmiBlitz3.ab3@26399>     TST.w -$2(A2,D4.L)
00035B00 <AmiBlitz3.ab3@26400>     BEQ.w write_xtrafile__loop3
00035B04 <AmiBlitz3.ab3@26402>     LEA $4(A2),A0
00035B06 <AmiBlitz3.ab3@26403>     MOVE.l A0,D2
00035B08 <AmiBlitz3.ab3@26404>     MOVEQ.l #$02,D3
00035B0A <AmiBlitz3.ab3@26405>     MOVE.l D7,D1                                           ; schreiben der Libnum mit 2 bytes
00035B0E <AmiBlitz3.ab3@26406>     JSR _Write(A6)                                         ; d1: file, d2: buffer, d3:length
00035B12 <AmiBlitz3.ab3@26408>     LEA -$4(A2,D4.L),A0
00035B14 <AmiBlitz3.ab3@26409>     MOVE.l A0,D2
00035B16 <AmiBlitz3.ab3@26410>     MOVEQ.l #$02,D3
00035B18 <AmiBlitz3.ab3@26411>     MOVE.l D7,D1                                           ; schreiben der Max Objects mit 2 bytes
00035B1C <AmiBlitz3.ab3@26412>     JSR _Write(A6)                                         ; d1: file, d2: buffer, d3:length
00035B20 <AmiBlitz3.ab3@26413> BRA.w write_xtrafile__loop3
00035B26 <AmiBlitz3.ab3@26418>   LEA XTRAEndPadBytes,A2 ; get the start address off the 4 fill/pad/termination bytes
00035B28 <AmiBlitz3.ab3@26419>   MOVE.l A2,D2           ; move the address to d2
00035B2E <AmiBlitz3.ab3@26420>   MOVE.l #4,D3           ; we only need 4 bytes to save
00035B30 <AmiBlitz3.ab3@26421>   MOVE.l D7,D1           ; we set the file handle
00035B34 <AmiBlitz3.ab3@26422>   JSR _Write(A6)         ; and we write it.
00035B36 <AmiBlitz3.ab3@26424> RTS
00035B3C <AmiBlitz3.ab3@26429>   LEA optssave,A0                      ; backup address
00035B42 <AmiBlitz3.ab3@26430>   LEA ptr_xtradata,A1                  ; source address
00035B44 <AmiBlitz3.ab3@26433>   MOVE.w (A1)+,D0                                          ;length of data move
00035B48 <AmiBlitz3.ab3@26434>   BEQ.b 'backupdone
00035B4A <AmiBlitz3.ab3@26435>   SUBQ.w #1,D0
00035B4C <AmiBlitz3.ab3@26438>     MOVE.l (A1)+,D1
00035B50 <AmiBlitz3.ab3@26439>     BEQ.b 'backuploop
00035B52 <AmiBlitz3.ab3@26440>     MOVEA.l D1,A2
00035B54 <AmiBlitz3.ab3@26441>     MOVE.w D0,D1
00035B56 <AmiBlitz3.ab3@26444>       MOVE.b (A2)+,(A0)+
00035B5A <AmiBlitz3.ab3@26445>   DBF D1,'backuploop3
00035B5E <AmiBlitz3.ab3@26447> BRA.w 'backuploop2
00035B64 <AmiBlitz3.ab3@26451>   LEA bufferlist,A1
00035B66 <AmiBlitz3.ab3@26454>     MOVE.l (A1)+,D2
00035B6A <AmiBlitz3.ab3@26455>     BEQ.b 'loop4done
00035B6C <AmiBlitz3.ab3@26457>     MOVEA.l D2,A0
00035B6E <AmiBlitz3.ab3@26458>     MOVE.l (A0),D2
00035B70 <AmiBlitz3.ab3@26459>     ADDQ.w #8,A0
00035B76 <AmiBlitz3.ab3@26460>     JSR makelong
00035B7A <AmiBlitz3.ab3@26461> BRA.b 'loop4
00035B80 <AmiBlitz3.ab3@26464>   CLR.w state_of_residents                                 ;resident change
00035B86 <AmiBlitz3.ab3@26465>   CLR.w comsettings_message                                ;alloc change
00035B8C <AmiBlitz3.ab3@26466>   CLR.w maxobject_pos
00035B8E <AmiBlitz3.ab3@26467> RTS   ; new tomsmart1
00035B94 <AmiBlitz3.ab3@26471>   LEA optssave,A0
00035B9A <AmiBlitz3.ab3@26472>   LEA ptr_xtradata,A1
00035B9C <AmiBlitz3.ab3@26475>   MOVE.w (A1)+,D0
00035BA0 <AmiBlitz3.ab3@26476>   BEQ.b 'restoredone
00035BA2 <AmiBlitz3.ab3@26477>   SUBQ.w #1,D0
00035BA4 <AmiBlitz3.ab3@26480>     MOVE.l (A1)+,D1
00035BA8 <AmiBlitz3.ab3@26481>     BEQ.b 'restoreloop1
00035BAA <AmiBlitz3.ab3@26482>     MOVEA.l D1,A2
00035BAC <AmiBlitz3.ab3@26483>     MOVE.w D0,D1
00035BAE <AmiBlitz3.ab3@26486>       MOVE.b (A0)+,(A2)+
00035BB2 <AmiBlitz3.ab3@26487>   DBF D1,'restoreloop3
00035BB6 <AmiBlitz3.ab3@26489> BRA.b 'restoreloop2
00035BB8 <AmiBlitz3.ab3@26492> RTS
00035BBE <AmiBlitz3.ab3@26496>   JSR free_residents                    ; first free the allready loaded residents
00035BC4 <AmiBlitz3.ab3@26497>   JSR Clear_Residents_table             ; second clear the complete resident table
00035BC6 <AmiBlitz3.ab3@26498> RTS
00035BCE <AmiBlitz3.ab3@26502>   MOVE.w #$FFFF,state_of_residents
00035BD4 <AmiBlitz3.ab3@26503>   MOVE.w state_of_residents,D0
00035BDA <AmiBlitz3.ab3@26504>   JSR reloadresident
00035BDC <AmiBlitz3.ab3@26505> RTS
00035BDE <AmiBlitz3.ab3@26510>   MOVE.l d0,a1
00035BE4 <AmiBlitz3.ab3@26511>   MOVEA.l libpointer,A2
00035BE8 <AmiBlitz3.ab3@26514>     MOVE.l $12(A2),D0
00035BEC <AmiBlitz3.ab3@26515>     TST.w -$2(A2,D0.L)
00035BF0 <AmiBlitz3.ab3@26516>      BEQ.w JL_0_102AAa
00035BF2 <AmiBlitz3.ab3@26517>     SUBQ.w #1,D1
00035BF6 <AmiBlitz3.ab3@26518>      BPL.w JL_0_102AAa
00035BFA <AmiBlitz3.ab3@26519>     MOVEA.l -$1A(A2,D0.L),A3
00035BFC <AmiBlitz3.ab3@26520>     ADDA.l A2,A3
00035BFE <AmiBlitz3.ab3@26523>       MOVE.b (A3)+,(A1)+
00035C02 <AmiBlitz3.ab3@26524>     BNE.w JL_0_10294a
00035C04 <AmiBlitz3.ab3@26526>     CLR.b -(A1)
00035C08 <AmiBlitz3.ab3@26527>     MOVE.w -$4(A2,D0.L),D0
00035C0E <AmiBlitz3.ab3@26528>     AND.l #$ffff,d0
00035C10 <AmiBlitz3.ab3@26529> RTS
00035C12 <AmiBlitz3.ab3@26532>     MOVEA.l (A2),A2
00035C16 <AmiBlitz3.ab3@26533> BRA.w JL_0_1027Ca
00035C26 <AmiBlitz3.ab3@26538> str_maxobjects_name:   Dc.b "              ",0 : Even
00035C36 <AmiBlitz3.ab3@26539> str_maxobjects_name2:  Dc.b "              ",0 : Even
00035C3A <AmiBlitz3.ab3@26540> objectbuffer:          Dc.l #DEFAULT_OBJECTBUFFERSIZE  ; replaced with a constant tomsmart1
00035C3E <AmiBlitz3.ab3@26541>                        Dc.l $00000000
00035C4A <AmiBlitz3.ab3@26542> str_objectbuffer:      Dc.b "16384",0,0,0,0,0,0,0      ; string max 12 columns
00035C4E <AmiBlitz3.ab3@26544> libsbuffer:            Dc.l #DEFAULT_LIBSBUFFERSIZE    ; replaced with a constant tomsmart1
00035C52 <AmiBlitz3.ab3@26545>                        Dc.l $00000000
00035C5E <AmiBlitz3.ab3@26546> str_libsbuffer:        Dc.b "32768",0,0,0,0,0,0,0      ;was "16384"; string max 12 columns
00035C62 <AmiBlitz3.ab3@26548> systembuffer:          Dc.l #DEFAULT_SYSTEMBUFFERSIZE  ; system buffer  ; replaced with a constant tomsmart1
00035C66 <AmiBlitz3.ab3@26549>                        Dc.l $00000000
00035C72 <AmiBlitz3.ab3@26550> str_systembuffer:      Dc.b "4096",0,0,0,0,0,0,0,0     ; string max 12 columns
00035C76 <AmiBlitz3.ab3@26552> databuffer:            Dc.l #DEFAULT_DATABUFFERSIZE    ; data buffer   ; replaced with a constant tomsmart1
00035C7A <AmiBlitz3.ab3@26553>                        Dc.l $00000000
00035C86 <AmiBlitz3.ab3@26554> str_databuffer:        Dc.b "4096",0,0,0,0,0,0,0,0     ; string max 12 columns
00035C8A <AmiBlitz3.ab3@26556> macrobuffer_size:      Dc.l #DEFAULT_MACROBUFFERSIZE   ; macro buffer ; was $00002000 ; replaced with a constant tomsmart1
00035C8E <AmiBlitz3.ab3@26557>                        Dc.l $00000000
00035C9A <AmiBlitz3.ab3@26558> str_macrobuffer:       Dc.b "40000",0,0,0,0,0,0,0      ; string max 12 columns
00035C9E <AmiBlitz3.ab3@26560> stringbuffer:          Dc.l #DEFAULT_STRINGBUFFERSIZE  ; string buffer ; replaced with a constant tomsmart1
00035CA2 <AmiBlitz3.ab3@26561>                        Dc.l $00000000
00035CAE <AmiBlitz3.ab3@26562> str_stringbuffer:      Dc.b "10240",0,0,0,0,0,0,0      ; string max 12 columns
00035CB0 <AmiBlitz3.ab3@26564> maxobjects_value:      Dc.w $0064
00035CB4 <AmiBlitz3.ab3@26565>                        Dc.l $00000000
00035CC0 <AmiBlitz3.ab3@26566> str_maxobjects_value:  Dc.b "100",0,0,0,0,0,0,0,0,0    ; string max 12 columns
00035CC2 <AmiBlitz3.ab3@26568> maxobjects_value2:     Dc.w $0014
00035CC4 <AmiBlitz3.ab3@26569>                        Dc.w $0000
00035CD0 <AmiBlitz3.ab3@26571> str_maxobjects_value2: Dc.b "20",0,0,0,0,0,0,0,0,0,0   ; string max 12 columns
00035CD1 <AmiBlitz3.ab3@26575> set_create_iconfile:   Dc.b $00
00035CD4 <AmiBlitz3.ab3@26576> create_iconfile:       Dc.b $80,$01,$01                    ;create icon
00035CD6 <AmiBlitz3.ab3@26577>                        Dc.b $00,$01
00035CD7 <AmiBlitz3.ab3@26579> set_use_debugger:      Dc.b $00                            ; Flags.w
00035CDA <AmiBlitz3.ab3@26580> use_debugger:          Dc.b $80,$01,$01                    ; Activation.w
00035CDC <AmiBlitz3.ab3@26581>                        Dc.b $00,$01                        ; GadgetType.w
00035CE0 <AmiBlitz3.ab3@26582> AL_0_11010:            Dc.b $00,$80,$01,$01                ; flags, activation
00035CE4 <AmiBlitz3.ab3@26583> AL_0_1103C:            Dc.b $00,$80,$01,$01                ; flags, activation
00035CE8 <AmiBlitz3.ab3@26584> AL_0_11068:            Dc.b $00,$80,$01,$01                ; flags, activation
00035CEA <AmiBlitz3.ab3@26585> AL_0_11094:            Ds.w 1
00035CEB <AmiBlitz3.ab3@26587> set_make_smallestcode: Ds.b 1
00035CEE <AmiBlitz3.ab3@26588> make_smallestcode:     Dc.b $00,$01,$01                    ;make smallest
00035CF0 <AmiBlitz3.ab3@26589>                        Dc.b $00,$01
00035CF1 <AmiBlitz3.ab3@26590> set_link_debuginfo:    Ds.b 1
00035CF4 <AmiBlitz3.ab3@26591> link_debuginfo:        Dc.b $00,$01,$01                    ;create debuginfo
00035CF6 <AmiBlitz3.ab3@26592>                        Dc.b $00,$01
00035F16 <AmiBlitz3.ab3@26597>   Ds.l 136         ;resident files STEP $44 piece 8
00035F96 <AmiBlitz3.ab3@26602> str_calcexpression:        Ds.l 32
00035F9A <AmiBlitz3.ab3@26603> destbufferend_backup_calc: Ds.l 1
00035FA4 <AmiBlitz3.ab3@26608>   MOVE.l destbufferend,destbufferend_backup_calc
00035FAA <AmiBlitz3.ab3@26609> 
00035FB0 <AmiBlitz3.ab3@26610>   MOVE.l A7,errstack
00035FBA <AmiBlitz3.ab3@26611>   MOVE.l #Calc_Error_Exit,errcont
00035FE4 <AmiBlitz3.ab3@26618>   !basic         ; get the flage for the conversion form the editor
00036028 <AmiBlitz3.ab3@26619>   !ComData_GetW{comWord_CalculatorButtonBinFlag,D0} : MOVE.w d0,CalculatorButtonBinFlag
0003606C <AmiBlitz3.ab3@26620>   !ComData_GetW{comWord_CalculatorButtonDecFlag,D0} : MOVE.w d0,CalculatorButtonDecFlag
0003608A <AmiBlitz3.ab3@26621>   !asm
00036090 <AmiBlitz3.ab3@26623>   LEA str_calcexpression,A0
00036096 <AmiBlitz3.ab3@26632>   JSR setcvars
0003609C <AmiBlitz3.ab3@26633>   JSR setsvars
000360A2 <AmiBlitz3.ab3@26634>   CLR.w connest
000360A8 <AmiBlitz3.ab3@26635>   LEA str_calcexpression,A5
000360AE <AmiBlitz3.ab3@26636>   JSR AJL_0_BF6E
000360B4 <AmiBlitz3.ab3@26637>   LEA str_calcexpression,A0
000360B6 <AmiBlitz3.ab3@26638>   TST.l D3
000360BA <AmiBlitz3.ab3@26639>    BPL.w JL_0_11AE8
000360BE <AmiBlitz3.ab3@26640>   MOVE.b #$2D,(A0)+
000360C0 <AmiBlitz3.ab3@26641>   NEG.l D3
000360C8 <AmiBlitz3.ab3@26644>   CMPI.w #$80,CalculatorButtonDecFlag
000360CC <AmiBlitz3.ab3@26645>    BEQ.w JL_0_11B74
000360CE <AmiBlitz3.ab3@26646>   MOVEQ.l #$00,D1
000360D6 <AmiBlitz3.ab3@26647>   CMPI.w #$80,CalculatorButtonBinFlag
000360DA <AmiBlitz3.ab3@26648>    BNE.w JL_0_11B36
000360DC <AmiBlitz3.ab3@26649>   MOVEQ.l #$1F,D0
000360E0 <AmiBlitz3.ab3@26650>   MOVE.b #$25,(A0)+
000360E2 <AmiBlitz3.ab3@26653>       LSL.l #1,D3
000360E6 <AmiBlitz3.ab3@26654>        BCC.w JL_0_11B18
000360EA <AmiBlitz3.ab3@26655>       MOVE.b #"1",(A0)+
000360EC <AmiBlitz3.ab3@26656>       MOVEQ.l #-$01,D1
000360F0 <AmiBlitz3.ab3@26657>   BRA.w JL_0_11B22
000360F2 <AmiBlitz3.ab3@26660>       TST.w D1
000360F6 <AmiBlitz3.ab3@26661>       BEQ.w JL_0_11B22
000360FA <AmiBlitz3.ab3@26662>       MOVE.b #"0",(A0)+
000360FE <AmiBlitz3.ab3@26665>  DBF D0,JL_0_11B08
00036100 <AmiBlitz3.ab3@26668>   TST.w D1
00036104 <AmiBlitz3.ab3@26669>   BNE.w JL_0_11B30
00036108 <AmiBlitz3.ab3@26670>   MOVE.b #"0",(A0)+
0003610A <AmiBlitz3.ab3@26673>   CLR.b (A0)
0003610E <AmiBlitz3.ab3@26674> BRA.w JL_0_11B7C
00036110 <AmiBlitz3.ab3@26677>   MOVEQ.l #$07,D0
00036114 <AmiBlitz3.ab3@26678>   MOVE.b #$24,(A0)+
00036116 <AmiBlitz3.ab3@26681>     MOVE.l D3,D2
00036118 <AmiBlitz3.ab3@26682>     SWAP D2
0003611A <AmiBlitz3.ab3@26683>     LSR.w #8,D2
0003611C <AmiBlitz3.ab3@26684>     LSR.w #4,D2
00036120 <AmiBlitz3.ab3@26685>     ADDI.w #$30,D2
00036124 <AmiBlitz3.ab3@26686>     CMP.w #$3A,D2
00036128 <AmiBlitz3.ab3@26687>      BCS.w JL_0_11B52
0003612A <AmiBlitz3.ab3@26688>     ADDQ.w #7,D2
0003612E <AmiBlitz3.ab3@26691>     CMP.w #$30,D2
00036132 <AmiBlitz3.ab3@26692>     BEQ.w JL_0_11B62
00036134 <AmiBlitz3.ab3@26693>     MOVE.b D2,(A0)+
00036136 <AmiBlitz3.ab3@26694>     MOVEQ.l #-$01,D1
0003613A <AmiBlitz3.ab3@26695>   BRA.w JL_0_11B6A
0003613C <AmiBlitz3.ab3@26698>     TST.w D1
00036140 <AmiBlitz3.ab3@26699>      BEQ.w JL_0_11B6A
00036142 <AmiBlitz3.ab3@26700>     MOVE.b D2,(A0)+
00036144 <AmiBlitz3.ab3@26703>     LSL.l #4,D3
00036148 <AmiBlitz3.ab3@26704>  DBF D0,JL_0_11B3C
0003614C <AmiBlitz3.ab3@26706> BRA.w JL_0_11B26
0003614E <AmiBlitz3.ab3@26709>   MOVE.l D3,D2
00036154 <AmiBlitz3.ab3@26710>   JSR makelong
0003615E <AmiBlitz3.ab3@26717>   MOVE.l destbufferend_backup_calc,destbufferend
00036160 <AmiBlitz3.ab3@26719> RTS                         ; added tomsmart 2012 03 07 vor Calculator in PED
0003625F <AmiBlitz3.ab3@26723> str_cliarguments: Ds.b 255   ; a command line can acutally be 255 characters long
00036260 <AmiBlitz3.ab3@26725> Even
00036262 <AmiBlitz3.ab3@26739>     MOVE.b (a5)+,d0
00036266 <AmiBlitz3.ab3@26740>     BEQ 'l2
0003626A <AmiBlitz3.ab3@26741>     CMP.b #$80,d0
0003626E <AmiBlitz3.ab3@26742>     BNE 'l1
00036270 <AmiBlitz3.ab3@26743>     MOVE.b (a5)+,d0
00036274 <AmiBlitz3.ab3@26744>     BEQ 'l2
00036278 <AmiBlitz3.ab3@26745>     CMP.b #$02,d0
0003627C <AmiBlitz3.ab3@26746>   BNE 'l1
00036280 <AmiBlitz3.ab3@26749>     CMP.b #$20,(a5)+
00036284 <AmiBlitz3.ab3@26750>   BEQ 'l3
00036286 <AmiBlitz3.ab3@26751>   SUBQ.l #1,a5
00036288 <AmiBlitz3.ab3@26752>   TST.b (a5)
0003628C <AmiBlitz3.ab3@26753>   BEQ 'l2
00036290 <AmiBlitz3.ab3@26754>   CMP.w #$8008,(a5)
00036294 <AmiBlitz3.ab3@26755>   BEQ 'l4
00036298 <AmiBlitz3.ab3@26756>   CMP.w #$8009,(a5)
0003629C <AmiBlitz3.ab3@26757>   BEQ 'l4
000362A0 <AmiBlitz3.ab3@26758> BRA 'l1
000362A2 <AmiBlitz3.ab3@26761>   ADDQ.l #2,a5
000362A8 <AmiBlitz3.ab3@26762>   JSR skiprest
000362AA <AmiBlitz3.ab3@26763> RTS
000362B0 <AmiBlitz3.ab3@26766>   JSR nextline
000362B4 <AmiBlitz3.ab3@26767>   BNE 'l1
000362B6 <AmiBlitz3.ab3@26768> RTS
000362E0 <AmiBlitz3.ab3@26772>   !basic
000362EA <AmiBlitz3.ab3@26773>   DateFormat 1
000362F8 <AmiBlitz3.ab3@26774>   i.l=SystemDate
0003631E <AmiBlitz3.ab3@26775>   a$=Date$ (i)
0003639C <AmiBlitz3.ab3@26776>   a$=Replace$(a$,"/",".")
000363A2 <AmiBlitz3.ab3@26777>   GetD0 &a$
000363A4 <AmiBlitz3.ab3@26778>   MOVEQ #8,d2
000363A6 <AmiBlitz3.ab3@26779>   MOVE.l d0,a0
000363A8 <AmiBlitz3.ab3@26782>     MOVE.b (a0)+,d1
000363AE <AmiBlitz3.ab3@26783>     JSR pokedata1b
000363B2 <AmiBlitz3.ab3@26784>  DBF d2,'l1
000363B4 <AmiBlitz3.ab3@26786>   MOVEQ #0,d0
000363B6 <AmiBlitz3.ab3@26787>   MOVE.b (a0)+,d0
000363D4 <AmiBlitz3.ab3@26788>   !asm
000363DA <AmiBlitz3.ab3@26789>   ADD.l #9,d2
000363E0 <AmiBlitz3.ab3@26790>   ADD.l #9,a5
000363E2 <AmiBlitz3.ab3@26791> RTS
0003640C <AmiBlitz3.ab3@26795>   !basic
00036416 <AmiBlitz3.ab3@26796>   DateFormat 0
00036424 <AmiBlitz3.ab3@26797>   i.l=SystemDate
0003644A <AmiBlitz3.ab3@26798>   a$=Date$ (i)
000364C8 <AmiBlitz3.ab3@26799>   a$=Replace$(a$,"/",".")
000364CE <AmiBlitz3.ab3@26800>   GetD0 &a$
000364D0 <AmiBlitz3.ab3@26801>   MOVEQ #8,d2
000364D2 <AmiBlitz3.ab3@26802>   MOVE.l d0,a0
000364D4 <AmiBlitz3.ab3@26805>     MOVE.b (a0)+,d1
000364DA <AmiBlitz3.ab3@26806>     JSR pokedata1b
000364DE <AmiBlitz3.ab3@26807>  DBF d2,'l1
000364E0 <AmiBlitz3.ab3@26809>   MOVEQ #0,d0
000364E2 <AmiBlitz3.ab3@26810>   MOVE.b (a0)+,d0
00036500 <AmiBlitz3.ab3@26811>   !asm
00036506 <AmiBlitz3.ab3@26812>   ADD.l #9,d2
0003650C <AmiBlitz3.ab3@26813>   ADD.l #13,a5
0003650E <AmiBlitz3.ab3@26814> RTS
00036538 <AmiBlitz3.ab3@26818>   !basic
00036542 <AmiBlitz3.ab3@26819>   DateFormat 1
00036550 <AmiBlitz3.ab3@26820>   i.l = SystemDate
00036576 <AmiBlitz3.ab3@26821>   a$ = Date$ (i)
000365F4 <AmiBlitz3.ab3@26822>   a$ = Replace$(a$,"/",".")
000365FA <AmiBlitz3.ab3@26823>   GetD0 &a$
000365FC <AmiBlitz3.ab3@26824>   MOVEQ #8,d2
000365FE <AmiBlitz3.ab3@26825>   MOVE.l d0,a0
00036600 <AmiBlitz3.ab3@26828>     MOVE.b (a0)+,d1
00036606 <AmiBlitz3.ab3@26829>     JSR writebyte
0003660A <AmiBlitz3.ab3@26830>  DBF d2,'l1
0003660C <AmiBlitz3.ab3@26832>   MOVEQ #0,d0
0003660E <AmiBlitz3.ab3@26833>   MOVE.b (a0)+,d0
0003662C <AmiBlitz3.ab3@26834>   !asm
00036632 <AmiBlitz3.ab3@26835>   ADD.l #9,a5
00036634 <AmiBlitz3.ab3@26836> RTS
0003665E <AmiBlitz3.ab3@26840>   !basic
00036668 <AmiBlitz3.ab3@26841>   DateFormat 0
00036676 <AmiBlitz3.ab3@26842>   i.l=SystemDate
0003669C <AmiBlitz3.ab3@26843>   a$=Date$ (i)
0003671A <AmiBlitz3.ab3@26844>   a$=Replace$(a$,"/",".")
00036720 <AmiBlitz3.ab3@26845>   GetD0 &a$
00036722 <AmiBlitz3.ab3@26846>   MOVEQ #8,d2
00036724 <AmiBlitz3.ab3@26847>   MOVE.l d0,a0
00036726 <AmiBlitz3.ab3@26850>     MOVE.b (a0)+,d1
0003672C <AmiBlitz3.ab3@26851>     JSR writebyte
00036730 <AmiBlitz3.ab3@26852>  DBF d2,'l1
00036732 <AmiBlitz3.ab3@26854>   MOVEQ #0,d0
00036734 <AmiBlitz3.ab3@26855>   MOVE.b (a0)+,d0
00036752 <AmiBlitz3.ab3@26856>   !asm
00036758 <AmiBlitz3.ab3@26857>   ADD.l #13,a5
0003675A <AmiBlitz3.ab3@26858> RTS
0003675C <AmiBlitz3.ab3@26862>   MOVE.l d2,-(a7)                                          ; D2 -> stack
0003675E <AmiBlitz3.ab3@26863>   MOVE.l a5,d0
00036788 <AmiBlitz3.ab3@26864>   !basic
0003678C <AmiBlitz3.ab3@26865>   _myD0.l = PutD0
00036796 <AmiBlitz3.ab3@26866>   If _myD0
000367DC <AmiBlitz3.ab3@26867>     verstring$ = Left$(Peek.s(_myD0),9+3)
0003682E <AmiBlitz3.ab3@26868>     verstring$ = UnRight$(verstring$,3)                      ; Compilerkonstantenbeginn \__ entfernen
00036834 <AmiBlitz3.ab3@26869>   Else
0003686E <AmiBlitz3.ab3@26870>     error{"INTERNAL: Invalid pointer in version_string!"}
0003687E <AmiBlitz3.ab3@26875>   actual_version.l = Peek.l(?versioninformation)
0003688E <AmiBlitz3.ab3@26876>   actual_build.l   = Peek.l(?number_of_builds)
000368B2 <AmiBlitz3.ab3@26878>   Format "00"
000368E8 <AmiBlitz3.ab3@26879>   Select verstring$
0003690C <AmiBlitz3.ab3@26881>     Case "VER_MAJOR"
00036948 <AmiBlitz3.ab3@26882>      put_versionstr$ = Str$(actual_version LSR 24)
00036972 <AmiBlitz3.ab3@26884>     Case "VER_MINOR"
000369B6 <AmiBlitz3.ab3@26885>      put_versionstr$ = Str$((actual_version LSL 8) LSR 24)
000369E0 <AmiBlitz3.ab3@26887>     Case "VER_PATCH"
00036A24 <AmiBlitz3.ab3@26888>      put_versionstr$ = Str$((actual_version LSL 16) LSR 24 )
00036A4E <AmiBlitz3.ab3@26890>     Case "VER_BUILD"
00036A72 <AmiBlitz3.ab3@26891>      Format ""
00036AA6 <AmiBlitz3.ab3@26892>      put_versionstr$ = Str$(actual_build)
00036AAC <AmiBlitz3.ab3@26894>     Default
00036AD4 <AmiBlitz3.ab3@26895>      put_versionstr$ = "{unknown compilerconstant}"
00036AE2 <AmiBlitz3.ab3@26898>   End Select
00036B06 <AmiBlitz3.ab3@26899>   Format ""
00036B16 <AmiBlitz3.ab3@26901>   GetD0 FLen(put_versionstr$)                              ; laenge zielstring -> Stack
00036B18 <AmiBlitz3.ab3@26902>   MOVE.l d0,d2
00036B1A <AmiBlitz3.ab3@26903>   MOVE.l d2,-(a7)
00036B1E <AmiBlitz3.ab3@26904>   SUB #1,d2
00036B24 <AmiBlitz3.ab3@26906>   GetD0 &put_versionstr$                                   ; kopieren des neuen Strings in den Zielstring
00036B26 <AmiBlitz3.ab3@26907>   MOVE.l d0,a0
00036B28 <AmiBlitz3.ab3@26910>     MOVE.b (a0)+,d1
00036B2E <AmiBlitz3.ab3@26911>     JSR pokedata1b
00036B32 <AmiBlitz3.ab3@26912>  DBF d2,'l1
00036B34 <AmiBlitz3.ab3@26914>   MOVEQ #0,d0
00036B52 <AmiBlitz3.ab3@26915>   !asm
00036B54 <AmiBlitz3.ab3@26916>   MOVE.l (a7)+,d0                                          ; laenge Zielstring <- Stack
00036B56 <AmiBlitz3.ab3@26917>   MOVE.l (a7)+,d2                                          ; d2 <-Stack
00036B58 <AmiBlitz3.ab3@26918>   ADD.l d0,d2
00036B5E <AmiBlitz3.ab3@26919>   ADD.l #12,a5                                             ; string_ptr um konstante weitersetzen
00036B60 <AmiBlitz3.ab3@26920>   MOVEQ #0,d0
00036B62 <AmiBlitz3.ab3@26921> RTS
00036B64 <AmiBlitz3.ab3@26925>   MOVE.l a5,d0
00036B8E <AmiBlitz3.ab3@26926>   !basic
00036B92 <AmiBlitz3.ab3@26927>   _myD0.l = PutD0
00036B9C <AmiBlitz3.ab3@26928>   If _myD0
00036BE2 <AmiBlitz3.ab3@26929>     verstring$ = Left$(Peek.s(_myD0),9+3)
00036C34 <AmiBlitz3.ab3@26930>     verstring$ = UnRight$(verstring$,3)                      ; Compilerkonstantenbeginn \__ entfernen
00036C3A <AmiBlitz3.ab3@26931>   Else
00036C74 <AmiBlitz3.ab3@26932>     error{"INTERNAL: Invalid pointer in version_string_dc!"}
00036C84 <AmiBlitz3.ab3@26937>   actual_version.l = Peek.l(?versioninformation)
00036C94 <AmiBlitz3.ab3@26938>   actual_build.l   = Peek.l(?number_of_builds)
00036CB8 <AmiBlitz3.ab3@26940>   Format ""
00036CEE <AmiBlitz3.ab3@26941>   Select verstring$
00036D12 <AmiBlitz3.ab3@26943>     Case "VER_MAJOR"
00036D4E <AmiBlitz3.ab3@26944>      put_versionstr$ = Str$(actual_version LSR 24)
00036D78 <AmiBlitz3.ab3@26946>     Case "VER_MINOR"
00036DBC <AmiBlitz3.ab3@26947>      put_versionstr$ = Str$((actual_version LSL 8) LSR 24)
00036DE6 <AmiBlitz3.ab3@26949>     Case "VER_PATCH"
00036E2A <AmiBlitz3.ab3@26950>      put_versionstr$ = Str$((actual_version LSL 16) LSR 24 )
00036E54 <AmiBlitz3.ab3@26952>     Case "VER_BUILD"
00036E78 <AmiBlitz3.ab3@26953>      Format ""
00036EAC <AmiBlitz3.ab3@26954>      put_versionstr$ = Str$(actual_build)
00036EB2 <AmiBlitz3.ab3@26956>     Default
00036EDA <AmiBlitz3.ab3@26957>      put_versionstr$ = "{unknown compilerconstant}"
00036EE8 <AmiBlitz3.ab3@26959>   End Select
00036F0C <AmiBlitz3.ab3@26960>   Format ""
00036F22 <AmiBlitz3.ab3@26962>   GetD0 FLen(put_versionstr$)-1
00036F24 <AmiBlitz3.ab3@26963>   MOVE.l d0,d2
00036F2A <AmiBlitz3.ab3@26965>   GetD0 &put_versionstr$                                   ; kopieren des neuen Strings in den Zielstring
00036F2C <AmiBlitz3.ab3@26966>   MOVE.l d0,a0
00036F2E <AmiBlitz3.ab3@26969>     MOVE.b (a0)+,d1
00036F34 <AmiBlitz3.ab3@26970>     JSR writebyte
00036F38 <AmiBlitz3.ab3@26971>  DBF d2,'l1
00036F3A <AmiBlitz3.ab3@26973>   MOVEQ #0,d0
00036F3C <AmiBlitz3.ab3@26974>   MOVE.b -(a0),d0                                          ; letztes Zeichen in D0
00036F5A <AmiBlitz3.ab3@26975>   !asm
00036F60 <AmiBlitz3.ab3@26976>   ADD.l #12,a5                                             ; string_ptr um konstante weitersetzen
00036F62 <AmiBlitz3.ab3@26977> RTS
00036F64 <AmiBlitz3.ab3@27079>  MOVE.l a5,-(a7)
00036F90 <AmiBlitz3.ab3@27080>  !fget
00036F94 <AmiBlitz3.ab3@27081>  CMP.w #".",d0
00036F98 <AmiBlitz3.ab3@27082>  BNE 'skip
00036F9C <AmiBlitz3.ab3@27083>  MOVEM.l a2/d2,-(a7)
00036FA2 <AmiBlitz3.ab3@27084>  LEA newtypebase,a2
00036FA8 <AmiBlitz3.ab3@27085>  JSR getparameter2
00036FAC <AmiBlitz3.ab3@27086>  BEQ.w JUMP_syntaxerr
00036FB2 <AmiBlitz3.ab3@27087>  JSR findtype
00036FB6 <AmiBlitz3.ab3@27088>  BNE.w JUMP_notypeerr
00036FBC <AmiBlitz3.ab3@27089>  MOVE.l a2,typetocast
00036FC0 <AmiBlitz3.ab3@27090>  MOVEM.l (a7)+,a2/d2
00036FC4 <AmiBlitz3.ab3@27091>  CMP.w #")",d0
00036FC8 <AmiBlitz3.ab3@27092>  BNE JUMP_errorbracketmiss
00036FCA <AmiBlitz3.ab3@27093>  ADDQ.l #4,a7
00036FF6 <AmiBlitz3.ab3@27094>  !fget
00036FFC <AmiBlitz3.ab3@27095>  JMP nocast
00036FFE <AmiBlitz3.ab3@27097> 'skip MOVE.l (a7)+,a5
00037004 <AmiBlitz3.ab3@27098>  JMP JL_0_A410
0003700A <AmiBlitz3.ab3@27100> JUMP_errorbracketmiss JMP errorbracketmiss
00037034 <AmiBlitz3.ab3@27102> Function.l ab3_GetIncludeLock{filename.s}
00037054 <AmiBlitz3.ab3@27103>   incLock.l  = Lock_ (&filename,#ACCESS_READ)   ; try bla.blub
000370AC <AmiBlitz3.ab3@27104>   ex.s       = dos_GetExt{filename}
000370C0 <AmiBlitz3.ab3@27106>   If incLock = False
00037134 <AmiBlitz3.ab3@27107>     filename = dos_SetExt{filename,"ab3"}
00037154 <AmiBlitz3.ab3@27108>     incLock  = Lock_ (&filename,#ACCESS_READ)   ; try bla.ab3
00037168 <AmiBlitz3.ab3@27111>   If incLock = False
000371DC <AmiBlitz3.ab3@27112>     filename = dos_SetExt{filename,"ab2"}
000371FC <AmiBlitz3.ab3@27113>     incLock  = Lock_ (&filename,#ACCESS_READ)   ; try bla.ab2
00037210 <AmiBlitz3.ab3@27116>   If incLock = False
00037284 <AmiBlitz3.ab3@27117>     filename = dos_SetExt{filename,"bb2"}
000372A4 <AmiBlitz3.ab3@27118>     incLock  = Lock_ (&filename,#ACCESS_READ)   ; try bla.bb2
000372B8 <AmiBlitz3.ab3@27121>   If incLock = False
0003734A <AmiBlitz3.ab3@27122>     filename = dos_SetExt{filename,ex+".ab3"}
0003736A <AmiBlitz3.ab3@27123>     incLock  = Lock_ (&filename,#ACCESS_READ)   ; try bla.blub.ab3
0003737E <AmiBlitz3.ab3@27126>   If incLock = False
000373F2 <AmiBlitz3.ab3@27127>     filename = dos_SetExt{filename,"ab2"}
00037412 <AmiBlitz3.ab3@27128>     incLock  = Lock_ (&filename,#ACCESS_READ)   ; try bla.blub.ab2
00037426 <AmiBlitz3.ab3@27131>   If incLock = False
0003749A <AmiBlitz3.ab3@27132>     filename = dos_SetExt{filename,"bb2"}
000374BA <AmiBlitz3.ab3@27133>     incLock  = Lock_ (&filename,#ACCESS_READ)   ; try bla.blub.bb2
000374C4 <AmiBlitz3.ab3@27136>  Function Return incLock
000374DE <AmiBlitz3.ab3@27137> End Function
00037508 <AmiBlitz3.ab3@27141>   !basic
00037532 <AmiBlitz3.ab3@27142>   incString.s = Peek$(?ptr_parameterstore)
00037560 <AmiBlitz3.ab3@27144>   !ComData_LEA{comStr_CurrentDir,D0}                        ; get pointer to current Sourcefiledir
00037564 <AmiBlitz3.ab3@27145>   incDirP.l   = PutD0                                       ;    "
0003758C <AmiBlitz3.ab3@27146>   incDir_.s   = Peek.s(incDirP)                             ; get current Sourcefiledir
0003760C <AmiBlitz3.ab3@27147>   incFile.s   = dos_AddPart{incDir_,incString}              ; adding Sourcefiledir and Includestring
0003763E <AmiBlitz3.ab3@27148>   incLock.l   = ab3_GetIncludeLock{incFile}                 ; check if file exist
00037652 <AmiBlitz3.ab3@27150>   If incLock = False ; not found => check default Include Directory
00037662 <AmiBlitz3.ab3@27151>     incDirP.l = Peek.l(?incd)
0003766C <AmiBlitz3.ab3@27152>     If incDirP
00037694 <AmiBlitz3.ab3@27153>       incDir_.s = Peek.s(incDirP)
0003769A <AmiBlitz3.ab3@27154>     Else
00037704 <AmiBlitz3.ab3@27155>       incDir_.s = dos_AddPart{Peek.s(?str_blitz3assign),"Sourcecodes/Includes"}
00037784 <AmiBlitz3.ab3@27157>     incFile.s = dos_AddPart{incDir_,incString}
000377B6 <AmiBlitz3.ab3@27158>     incLock.l = ab3_GetIncludeLock{incFile}
000377CA <AmiBlitz3.ab3@27161>   If incLock = False ; not found => check relative to current source
000377E2 <AmiBlitz3.ab3@27162>     incDepth.l = Peek.w(?ininclude)-1
00037808 <AmiBlitz3.ab3@27163>     If incDepth >= 0 AND incDepth < #maxincludes
00037868 <AmiBlitz3.ab3@27164>       incDir_.s = dos_PathPart{incdim (incDepth)} ;= Peek.s(?includetemp2)
000378E8 <AmiBlitz3.ab3@27165>       incFile.s = dos_AddPart{incDir_,incString}
0003791A <AmiBlitz3.ab3@27166>       incLock.l = ab3_GetIncludeLock{incFile}
0003792E <AmiBlitz3.ab3@27170>   If incLock = False ; still not found => check default Include Directory and name only
0003793E <AmiBlitz3.ab3@27171>     incDirP.l = Peek.l(?incd)
00037948 <AmiBlitz3.ab3@27172>     If incDirP
00037970 <AmiBlitz3.ab3@27173>       incDir_.s = Peek.s(incDirP)
00037976 <AmiBlitz3.ab3@27174>     Else
000379E0 <AmiBlitz3.ab3@27175>       incDir_.s = dos_AddPart{Peek.s(?str_blitz3assign),"Sourcecodes/Includes"}
00037A8E <AmiBlitz3.ab3@27177>     incFile.s = dos_AddPart{incDir_,dos_FilePart{incString}}
00037AC0 <AmiBlitz3.ab3@27178>     incLock.l = ab3_GetIncludeLock{incFile}
00037ACA <AmiBlitz3.ab3@27181>   If incLock
00037AE0 <AmiBlitz3.ab3@27182>     MaxLen incFile = 1024
00037B04 <AmiBlitz3.ab3@27183>     NameFromLock_ incLock,&incFile,1024
00037B2E <AmiBlitz3.ab3@27184>     incFile = Peek.s(&incFile)
00037B66 <AmiBlitz3.ab3@27185>     Poke$ ?ptr_parameterstore,incFile
00037B7A <AmiBlitz3.ab3@27186>     i = FLen(incFile)
00037B86 <AmiBlitz3.ab3@27187>     GetReg d0,i
00037B8C <AmiBlitz3.ab3@27188>     MOVE.l d0,tempstore
00037B9C <AmiBlitz3.ab3@27189>     UnLock_ incLock
00037BBA <AmiBlitz3.ab3@27192>   !asm
00037BC0 <AmiBlitz3.ab3@27193>   TST.l tempstore
00037BC4 <AmiBlitz3.ab3@27194>    BEQ 'l1
00037BCA <AmiBlitz3.ab3@27195>   MOVE.l tempstore,d2
00037BCC <AmiBlitz3.ab3@27198> RTS
00037BF6 <AmiBlitz3.ab3@27202>   !basic
00037C20 <AmiBlitz3.ab3@27203>   incString.s = Peek$(?ptr_parameterstore)                  ; get the string
00037C4E <AmiBlitz3.ab3@27204>   !ComData_LEA{comStr_CurrentDir,D0}                        ; get pointer to current Sourcefiledir
00037C52 <AmiBlitz3.ab3@27205>   incDirP.l   = PutD0                                       ;    "
00037C7A <AmiBlitz3.ab3@27206>   incDir_.s   = Peek.s(incDirP)                             ; get current Sourcefiledir
00037CFA <AmiBlitz3.ab3@27207>   incFile.s   = dos_AddPart{incDir_,incString}              ; adding Sourcefiledir and Includestring
00037D1A <AmiBlitz3.ab3@27208>   incLock.l   = Lock_(&incFile,#ACCESS_READ)                ; check if file exist
00037D2E <AmiBlitz3.ab3@27210>   If incLock = False                                        ; not found => try orignal string only to find
00037D4E <AmiBlitz3.ab3@27211>     incLock.l = Lock_(&incString,#ACCESS_READ)
00037D58 <AmiBlitz3.ab3@27214>   If incLock                                                ; found => store full path
00037D6E <AmiBlitz3.ab3@27215>     MaxLen incFile = 1024
00037D92 <AmiBlitz3.ab3@27216>     NameFromLock_ incLock,&incFile,1024
00037DBC <AmiBlitz3.ab3@27217>     incFile = Peek.s(&incFile)
00037DF4 <AmiBlitz3.ab3@27218>     Poke$ ?ptr_parameterstore,incFile
00037E00 <AmiBlitz3.ab3@27221> 
00037E1E <AmiBlitz3.ab3@27222>   !asm
00037E20 <AmiBlitz3.ab3@27223> RTS
00037E26 <AmiBlitz3.ab3@27234>   JSR Aclearallvars
00037E2C <AmiBlitz3.ab3@27235>   JSR free_unusedfunctions
00037E36 <AmiBlitz3.ab3@27250>   MOVE.l #"NORE",reqmode
00037E3C <AmiBlitz3.ab3@27251> JSR handle_compileerror
00037E3E <AmiBlitz3.ab3@27254>   MOVE.l d0,-(a7)
00037E40 <AmiBlitz3.ab3@27255>   MOVE.l a5,d0
00037E4A <AmiBlitz3.ab3@27256>   !basica7
00037E4E <AmiBlitz3.ab3@27257>   i.l = PutD0
00037E58 <AmiBlitz3.ab3@27258>   If i
00037E80 <AmiBlitz3.ab3@27259>     a$ = Peek$(i)
00037EB2 <AmiBlitz3.ab3@27260>     b$ = Peeks$(i-7,7)
00037FEA <AmiBlitz3.ab3@27262> 
00037FF0 <AmiBlitz3.ab3@27263>     MOVE.l d0,result
00037FF4 <AmiBlitz3.ab3@27265>   !asma7
00037FF6 <AmiBlitz3.ab3@27266>   MOVE.l (a7)+,d0
00037FF8 <AmiBlitz3.ab3@27267> RTS
00038022 <AmiBlitz3.ab3@27271>   !basic
00038050 <AmiBlitz3.ab3@27272>   !ComData_LEA{comStr_CurrentDir,D0}
00038054 <AmiBlitz3.ab3@27273>   currentDirP.l = PutD0
00038082 <AmiBlitz3.ab3@27275>   !ComData_LEA{comStr_SourceName,D0}
00038086 <AmiBlitz3.ab3@27276>   fileNameP.l = PutD0
000380AE <AmiBlitz3.ab3@27278>   check_dirname$  = Peek$(currentDirP)
000380D6 <AmiBlitz3.ab3@27279>   check_filename$ = Peek$(fileNameP)
0003815C <AmiBlitz3.ab3@27280>   If (olddirname$<>check_dirname$) OR (oldfilename$<>check_filename$)
00038162 <AmiBlitz3.ab3@27281>     JSR free_unusedfunctions
000381AC <AmiBlitz3.ab3@27283>   olddirname$ = Peek$(check_dirname$)
000381F6 <AmiBlitz3.ab3@27284>   oldfilename$ = Peek$(check_filename$)
00038220 <AmiBlitz3.ab3@27285>   For i = 0 To #maxincludes-1
00038234 <AmiBlitz3.ab3@27286>     incline(i) = 0
00038244 <AmiBlitz3.ab3@27287>   Next
00038262 <AmiBlitz3.ab3@27288>   !asm
00038264 <AmiBlitz3.ab3@27289> RTS
00038266 <AmiBlitz3.ab3@27293>   MOVEQ #0,d1
00038268 <AmiBlitz3.ab3@27296>   MOVE.b (a5)+,d0
0003826C <AmiBlitz3.ab3@27297>   BEQ 'er1
00038270 <AmiBlitz3.ab3@27298>   CMP.b #$20,d0
00038274 <AmiBlitz3.ab3@27299>   BEQ 'l1
00038276 <AmiBlitz3.ab3@27300>   ADDQ #1,d1
0003827A <AmiBlitz3.ab3@27301>   CMP.b #$22,d0
0003827E <AmiBlitz3.ab3@27302>   BNE 'l1
00038280 <AmiBlitz3.ab3@27303> RTS
00038286 <AmiBlitz3.ab3@27306> JMP syntaxerr
000382AA <AmiBlitz3.ab3@27317> erro1t   Dc.b "Only one BSS / Chip Segment allowed",0 : Even
000382C8 <AmiBlitz3.ab3@27318> nodata   Dc.b "BSS Segment contains Data!!!!",0       : Even
000382CE <AmiBlitz3.ab3@27323>   TST.b exdebug
000382D2 <AmiBlitz3.ab3@27324>   BNE 'l10
000382D8 <AmiBlitz3.ab3@27325>   MOVE.l #$4e71,d1
000382DE <AmiBlitz3.ab3@27326>   JSR writeword
000382E4 <AmiBlitz3.ab3@27327>   MOVE.l destpointer,d0
000382E6 <AmiBlitz3.ab3@27328>   MOVE.l d0,d1
000382E8 <AmiBlitz3.ab3@27329>   ADDQ.l #3,d1
000382EE <AmiBlitz3.ab3@27330>   AND.l #$fffffffc,d1
000382F4 <AmiBlitz3.ab3@27331>   MOVE.l d1,destpointer
000382FA <AmiBlitz3.ab3@27332>   SUB.l destpointer,d0
000382FE <AmiBlitz3.ab3@27333>   BEQ 'lnf1
00038308 <AmiBlitz3.ab3@27334>   CMP.l #-1,bssstart
0003830C <AmiBlitz3.ab3@27335>   BNE 'lnf1
00038316 <AmiBlitz3.ab3@27336>   CMP.l #-1,chipstart
0003831A <AmiBlitz3.ab3@27337>   BNE 'lnf1
00038320 <AmiBlitz3.ab3@27338>   MOVE.l destpointer,a4
00038326 <AmiBlitz3.ab3@27339>   TST.w dontwrite
0003832A <AmiBlitz3.ab3@27340>   BNE 'lnf1
00038330 <AmiBlitz3.ab3@27341>   MOVE.w #$4e71,-2(a4)
0003833A <AmiBlitz3.ab3@27344>   CMP.l #-1,bssstart
0003833E <AmiBlitz3.ab3@27345>   BEQ 'l11
00038344 <AmiBlitz3.ab3@27346>   MOVE.l #erro1t,-(a7)
0003834A <AmiBlitz3.ab3@27347> JMP handle_compileerror
00038354 <AmiBlitz3.ab3@27350>   MOVE.l destpointer,bssstart
0003835C <AmiBlitz3.ab3@27351>   MOVE.b #1,bssmode
00038362 <AmiBlitz3.ab3@27354>   TST.b chipmode
00038366 <AmiBlitz3.ab3@27355>   BEQ 'l10
00038370 <AmiBlitz3.ab3@27356>   MOVE.l destpointer,chipend
00038376 <AmiBlitz3.ab3@27357>   CLR.b chipmode
0003837C <AmiBlitz3.ab3@27360>   JSR get1bytemain
0003837E <AmiBlitz3.ab3@27361> RTS
00038384 <AmiBlitz3.ab3@27365>    TST.b exdebug
00038388 <AmiBlitz3.ab3@27366>   BNE 'x1
0003838E <AmiBlitz3.ab3@27367>   MOVE.l destpointer,d0
00038394 <AmiBlitz3.ab3@27368>   MOVE.l d0,realbssend
0003839A <AmiBlitz3.ab3@27369>   MOVE.l #$4e71,d1
000383A0 <AmiBlitz3.ab3@27370>   JSR writeword
000383A6 <AmiBlitz3.ab3@27371>   MOVE.l destpointer,d0
000383A8 <AmiBlitz3.ab3@27372>   MOVE.l d0,d1
000383AA <AmiBlitz3.ab3@27373>   ADDQ.l #3,d1
000383B0 <AmiBlitz3.ab3@27374>   AND.l #$fffffffc,d1
000383B6 <AmiBlitz3.ab3@27375>   MOVE.l d1,destpointer
000383BC <AmiBlitz3.ab3@27376>   SUB.l destpointer,d0
000383C0 <AmiBlitz3.ab3@27377>   BEQ 'lnf1
000383C6 <AmiBlitz3.ab3@27378>   MOVE.l destpointer,a4
000383D0 <AmiBlitz3.ab3@27379>   CMP.l #-1,bssstart
000383D4 <AmiBlitz3.ab3@27380>   BNE 'lnf1
000383DE <AmiBlitz3.ab3@27381>   CMP.l #-1,chipstart
000383E2 <AmiBlitz3.ab3@27382>   BNE 'lnf1
000383E8 <AmiBlitz3.ab3@27383>   TST.w dontwrite
000383EC <AmiBlitz3.ab3@27384>   BNE 'lnf1
000383F2 <AmiBlitz3.ab3@27385>   MOVE.w #$4e71,-2(a4)
000383F8 <AmiBlitz3.ab3@27388>   TST.b bssmode
000383FC <AmiBlitz3.ab3@27389>   BEQ 'l10
00038406 <AmiBlitz3.ab3@27390>   MOVE.l destpointer,bssend
0003840C <AmiBlitz3.ab3@27391>   CLR.b bssmode
00038416 <AmiBlitz3.ab3@27396>   CMP.l #-1,chipstart
0003841A <AmiBlitz3.ab3@27397>   BEQ 'l11
00038420 <AmiBlitz3.ab3@27398>   MOVE.l #erro1t,-(a7)
00038426 <AmiBlitz3.ab3@27399> JMP handle_compileerror
00038430 <AmiBlitz3.ab3@27402>   MOVE.l destpointer,chipstart
00038438 <AmiBlitz3.ab3@27403>   MOVE.b #1,chipmode
0003843E <AmiBlitz3.ab3@27406>   JSR get1bytemain
00038440 <AmiBlitz3.ab3@27407> RTS
0003846A <AmiBlitz3.ab3@27411>   !basic
0003847C <AmiBlitz3.ab3@27421>   i.l = Peek.w(?ininclude)
000384A2 <AmiBlitz3.ab3@27422>   If i>=0 AND i<#maxincludes
000384D4 <AmiBlitz3.ab3@27423>     incdim (i) = Peek.s(?includetemp2)
000384EE <AmiBlitz3.ab3@27424>     incline(i) = Peek.l(?includeline)
000384F8 <AmiBlitz3.ab3@27426>     If CLIMode
000385A6 <AmiBlitz3.ab3@27427>       If cli_verbose>=2 Then NPrint "Include \\22",incdim(i),"\\22..."
000385C4 <AmiBlitz3.ab3@27431>   !asm
000385C6 <AmiBlitz3.ab3@27432> RTS
000385F0 <AmiBlitz3.ab3@27436>   !basic
00038602 <AmiBlitz3.ab3@27437>   i.l = Peek.w(?ininclude)
00038628 <AmiBlitz3.ab3@27438>   If i>=0 AND i<#maxincludes
00038658 <AmiBlitz3.ab3@27439>     incdim (i) = ""
0003866C <AmiBlitz3.ab3@27440>     incline(i) = 0
000386A4 <AmiBlitz3.ab3@27441>     If i>0 Then Poke.l (?includeline),incline(i-1)+1
000386C2 <AmiBlitz3.ab3@27443>   !asm
000386C4 <AmiBlitz3.ab3@27444> RTS
000386CA <AmiBlitz3.ab3@27448>   LEA replacedat,a0
000386CE <AmiBlitz3.ab3@27449>   Dc.w $3181,$0A00                                         ;MOVE.w d1,0(a0,d0.l*2)
000386D0 <AmiBlitz3.ab3@27450> RTS
000386D6 <AmiBlitz3.ab3@27454>   TST.b fpu
000386DA <AmiBlitz3.ab3@27455>   BEQ 'l1
000386E4 <AmiBlitz3.ab3@27458>   MOVE.l destpointer,newinitaddr
000386EA <AmiBlitz3.ab3@27459>   JSR writeword
000386F0 <AmiBlitz3.ab3@27460>   JSR writelong
000386F2 <AmiBlitz3.ab3@27461> RTS
000386F4 <AmiBlitz3.ab3@27466>   TST.b (a5)
000386F8 <AmiBlitz3.ab3@27467>    BEQ.s 'll20
000386FC <AmiBlitz3.ab3@27468>   CMP.b #$20,(a5)
00038700 <AmiBlitz3.ab3@27469>    BNE.s 'll10
00038702 <AmiBlitz3.ab3@27470>   ADDQ.l #1,a5
00038706 <AmiBlitz3.ab3@27471> BRA.s 'll21
0003870A <AmiBlitz3.ab3@27474>   CMP.b #";",(a5)
0003870E <AmiBlitz3.ab3@27475>   BNE.s 'll20
00038710 <AmiBlitz3.ab3@27478>   TST.b (a5)+
00038714 <AmiBlitz3.ab3@27479>   BEQ.s 'll23
00038718 <AmiBlitz3.ab3@27480> BRA.s 'll25
0003871A <AmiBlitz3.ab3@27483>   SUBQ.l #1,a5
0003871C <AmiBlitz3.ab3@27486> RTS
00038720 <AmiBlitz3.ab3@27490>   MOVEM.l a2/d2,-(a7)
00038722 <AmiBlitz3.ab3@27491>   MOVEQ #0,d2
00038728 <AmiBlitz3.ab3@27492>   LEA ptr_parameterstore,a0
0003872E <AmiBlitz3.ab3@27493>   LEA chartab,a2
00038730 <AmiBlitz3.ab3@27496>   MOVE.b (a5),d0
00038734 <AmiBlitz3.ab3@27497>   TST.b 0(a2,d0)
00038738 <AmiBlitz3.ab3@27498>   BNE 'l10
0003873A <AmiBlitz3.ab3@27499>   ADDQ.l #1,a5
0003873C <AmiBlitz3.ab3@27500>   MOVE.b d0,(a0)+
0003873E <AmiBlitz3.ab3@27501>   ADDQ.l #1,d2
00038742 <AmiBlitz3.ab3@27502> BRA fc2
00038744 <AmiBlitz3.ab3@27505>   CLR.b (a0)+
0003874A <AmiBlitz3.ab3@27506>   JSR findlabel2
0003874C <AmiBlitz3.ab3@27507>   MOVE.l a2,a0
00038750 <AmiBlitz3.ab3@27508>   MOVEM.l (a7)+,a2/d2
00038752 <AmiBlitz3.ab3@27509> RTS
00038754 <AmiBlitz3.ab3@27513>   TST.l d0
00038758 <AmiBlitz3.ab3@27514>   BNE 'l10
0003875E <AmiBlitz3.ab3@27515>     MOVE.l #syntax_,-(a7)
00038764 <AmiBlitz3.ab3@27516> JMP handle_compileerror
0003876A <AmiBlitz3.ab3@27519>   CMP.l #1,d0
0003876E <AmiBlitz3.ab3@27520>   BNE 'l20
00038774 <AmiBlitz3.ab3@27521>     MOVE.l #overflow,-(a7)
0003877A <AmiBlitz3.ab3@27522> JMP handle_compileerror
0003877C <AmiBlitz3.ab3@27525>   ADD.l a2,d0
0003877E <AmiBlitz3.ab3@27526>   MOVE.l d0,-(a7)
00038784 <AmiBlitz3.ab3@27527> JMP handle_compileerror
0003878A <AmiBlitz3.ab3@27531>   JMP _return
00038790 <AmiBlitz3.ab3@27532>   JMP _return
00038796 <AmiBlitz3.ab3@27533>   JMP _return
0003879C <AmiBlitz3.ab3@27534>   JMP _return
000387A2 <AmiBlitz3.ab3@27535>   JMP _return
000387A8 <AmiBlitz3.ab3@27536>   JMP _return
000387AE <AmiBlitz3.ab3@27537>   JMP _return
000387B4 <AmiBlitz3.ab3@27538>   JMP _return
000387BA <AmiBlitz3.ab3@27539>   JMP _return
000387C0 <AmiBlitz3.ab3@27540>   JMP _return
000387C6 <AmiBlitz3.ab3@27541>   JMP Atokejsr
000387CC <AmiBlitz3.ab3@27542>   JMP writeinit
000387D2 <AmiBlitz3.ab3@27543>   JMP macroexecute
000387D8 <AmiBlitz3.ab3@27544>   JMP findnext
000387DE <AmiBlitz3.ab3@27545>   JMP replacelib
000387E4 <AmiBlitz3.ab3@27546>   JMP findconstant2
000387EA <AmiBlitz3.ab3@27547>   JMP findchar                                             ;char in d1
000387F0 <AmiBlitz3.ab3@27548>   JMP stripspaces
000387F6 <AmiBlitz3.ab3@27549>   JMP calc                                                 ;d0 varmode
000387FC <AmiBlitz3.ab3@27550>   JMP error
00038802 <AmiBlitz3.ab3@27551>   JMP writelong                                            ;d1 value
00038808 <AmiBlitz3.ab3@27552>   JMP writeword                                            ;d1 value
0003880E <AmiBlitz3.ab3@27553>   JMP writebyte                                            ;d1 value
00038814 <AmiBlitz3.ab3@27554> JMP exit
00038818 <AmiBlitz3.ab3@27558>   destpointer:    Ds.l 1                                ;pc org source      ;Ds.w 1
0003881A <AmiBlitz3.ab3@27561>   fast            Dc.w 0
0003881C <AmiBlitz3.ab3@27562>   fpu             Dc.w 0
0003881E <AmiBlitz3.ab3@27563>   newsyntax       Dc.w 0
0003881F <AmiBlitz3.ab3@27565>   optistring      Dc.b 0
00038820 <AmiBlitz3.ab3@27566>   optistring2     Dc.b 0
00038821 <AmiBlitz3.ab3@27567>   optiarray       Dc.b 0
00038822 <AmiBlitz3.ab3@27568>   quickadd        Dc.b 0
00038824 <AmiBlitz3.ab3@27569>   newmode         Dc.w 0
00038826 <AmiBlitz3.ab3@27570>   mode            Dc.w 0
00038828 <AmiBlitz3.ab3@27571>   string1         Dc.w 0
0003882A <AmiBlitz3.ab3@27572>   load_var_size   Dc.w 0
0003882C <AmiBlitz3.ab3@27573>   load_var_reg    Dc.w 0
00038830 <AmiBlitz3.ab3@27574>   load_var_addr   Dc.l 0
00038832 <AmiBlitz3.ab3@27575>   imm_size        Dc.w 0
00038834 <AmiBlitz3.ab3@27576>   imm_reg         Dc.w 0
00038838 <AmiBlitz3.ab3@27577>   imm_addr        Dc.l 0
00038839 <AmiBlitz3.ab3@27578>   iee             Dc.b 0
0003883A <AmiBlitz3.ab3@27579>   _dcb            Dc.b 0
0003883E <AmiBlitz3.ab3@27580>   nohunkoffset    Dc.l 0
00038842 <AmiBlitz3.ab3@27583> teddata:        Dc.l tokens
00038846 <AmiBlitz3.ab3@27584>                 Dc.l 0 ;compilermenu_entries               ; NOT used anymore
0003884A <AmiBlitz3.ab3@27585>                 Dc.l read_xtrafile
0003884E <AmiBlitz3.ab3@27586>                 Dc.l write_xtrafile
00038852 <AmiBlitz3.ab3@27587>                 Dc.l call_menuentry                        ; compile AND RUN ?
00038856 <AmiBlitz3.ab3@27588>                 Dc.l 0
0003885A <AmiBlitz3.ab3@27589>                 Dc.b ":",34,".;"
0003885E <AmiBlitz3.ab3@27590>                 Dc.l "NEW1"
00038862 <AmiBlitz3.ab3@27591>                 Dc.l newtypebase
00038866 <AmiBlitz3.ab3@27592> realconstbase:  Dc.l labelbase
0003886A <AmiBlitz3.ab3@27593> deflib          Dc.l 0
0003886E <AmiBlitz3.ab3@27594> incd            Dc.l 0
00038872 <AmiBlitz3.ab3@27595>                 Dc.l 0
00038876 <AmiBlitz3.ab3@27596>                 Dc.l 0
0003887A <AmiBlitz3.ab3@27597>                 Dc.l 0
0003887C <AmiBlitz3.ab3@27598> _return         RTS
0003887D <AmiBlitz3.ab3@27599>                 Dc.b 0
00038C7D <AmiBlitz3.ab3@27600> chartab2        Ds.l 256
00038C81 <AmiBlitz3.ab3@27601> codeend         Dc.l 0
00038C85 <AmiBlitz3.ab3@27602> hunkoffsetnum   Dc.l 0
00038C89 <AmiBlitz3.ab3@27603> chipsize        Dc.l 0
00038C8D <AmiBlitz3.ab3@27604> bsssize         Dc.l 0
00038C91 <AmiBlitz3.ab3@27605> bssstart        Dc.l -1
00038C95 <AmiBlitz3.ab3@27606> bssend          Dc.l -1
00038C99 <AmiBlitz3.ab3@27607> chipstart       Dc.l -1
00038C9D <AmiBlitz3.ab3@27608> chipend         Dc.l -1
00038C9E <AmiBlitz3.ab3@27609> bssmode         Dc.b 0
00038C9F <AmiBlitz3.ab3@27610> chipmode        Dc.b 0
00038CA0 <AmiBlitz3.ab3@27611> newhunk         Dc.b 0
00038CA4 <AmiBlitz3.ab3@27612> bssnum          Dc.l 0
00038CA8 <AmiBlitz3.ab3@27613> chipnum         Dc.l 0
00038CAC <AmiBlitz3.ab3@27614> lastinstruction Dc.l 0
00038CB0 <AmiBlitz3.ab3@27615> lastinstructionaddr Dc.l 0
00038CC4 <AmiBlitz3.ab3@27616> hunkbegin       Dc.l $03F3,$00,$02,$00,$01
00038CC8 <AmiBlitz3.ab3@27617> tstsize1b:      Ds.l 1
00038CCC <AmiBlitz3.ab3@27618> bsssize2        Dc.l 1
00038CD0 <AmiBlitz3.ab3@27619>                 Dc.l $03E9
00038CD4 <AmiBlitz3.ab3@27620> tstsize2b:      Dc.l $100
00038CE8 <AmiBlitz3.ab3@27621> hunkbegin2      Dc.l $03F3,$00,$03,$00,$02
00038CEC <AmiBlitz3.ab3@27622> tstsize1c:      Ds.l 1
00038CF0 <AmiBlitz3.ab3@27623> bsssize3        Dc.l 1
00038CF4 <AmiBlitz3.ab3@27624> chipsize2       Dc.l 1
00038CF8 <AmiBlitz3.ab3@27625>                 Dc.l $3e9
00038CFC <AmiBlitz3.ab3@27626> tstsize2c       Dc.l 0
00038D0C <AmiBlitz3.ab3@27627> hunkend         Dc.l $3f2,$3eb,0,$3f2
00038D1C <AmiBlitz3.ab3@27628> hunkend2        Dc.l $3f2,$3ea,0,$3f2
00038D23 <AmiBlitz3.ab3@27629> strcpy          Dc.b "strcpy",0
00038D2A <AmiBlitz3.ab3@27630> strcmp          Dc.b "strcmp",0
00038D31 <AmiBlitz3.ab3@27631> strvar          Dc.b "strvar",0
00038D36 <AmiBlitz3.ab3@27632> qmul            Dc.b "qmul",0
00038D3B <AmiBlitz3.ab3@27633> qdiv            Dc.b "qdiv",0
00038D42 <AmiBlitz3.ab3@27634> _MaxLen         Dc.b "maxlen",0
00038D47 <AmiBlitz3.ab3@27635> notf            Dc.b "????",0
00038D6A <AmiBlitz3.ab3@27637> errtext         Dc.b "only reg addressing Mode supported",0
00038D94 <AmiBlitz3.ab3@27638> fpuerr          Dc.b "Instruction not yet supported by 68K FPU ",0
00038DD6 <AmiBlitz3.ab3@27639> cmplxerr        Dc.b "Formula too complex for 68K FPU or too much regload register used",0 : Even
00038DD8 <AmiBlitz3.ab3@27640> peeksize        Dc.w 0
00038DDC <AmiBlitz3.ab3@27642> mainstart       Dc.l 0
00038DDD <AmiBlitz3.ab3@27644> infunctioncode  Dc.b 0
00038DDF <AmiBlitz3.ab3@27645> regnumstore     Dc.w 0
00038E0C <AmiBlitz3.ab3@27646>                 Dc.b "$VER: AmiBlitz3 \\__VER_MAJOR.\\__VER_MINOR (\\__DATE_GER__) Build \\__VER_PATCH.\\__VER_BUILD",0 : Even
00038E14 <AmiBlitz3.ab3@27647> testcode        Dc.b "print i",0
00038E78 <AmiBlitz3.ab3@27648>                 Ds.b 100
00038E86 <AmiBlitz3.ab3@27649> devo            Dc.b "developobject",0 : Even
00038E98 <AmiBlitz3.ab3@27650> autostorename   Dc.b "__autoconstantnum",0
00038EA2 <AmiBlitz3.ab3@27651> _include        Dc.b "__include",0
00038EAA <AmiBlitz3.ab3@27652> _debug          Dc.b "__debug",0
00038EAE <AmiBlitz3.ab3@27653> unusedfunc      Dc.l 0
00038EB0 <AmiBlitz3.ab3@27657>   MOVE.l a0,d0
00038EDA <AmiBlitz3.ab3@27658>   !basic
00038EDE <AmiBlitz3.ab3@27659>   *olderror.l= PutD0
00038F38 <AmiBlitz3.ab3@27660> 
00038F6C <AmiBlitz3.ab3@27661>   error_type$ = error$
00039008 <AmiBlitz3.ab3@27662> 
0003901C <AmiBlitz3.ab3@27663>   If Peek.l (?beforeparameterfetch)
00039032 <AmiBlitz3.ab3@27664>     MaxLen detokenline.s = 65536
00039074 <AmiBlitz3.ab3@27665>    !ComData_GetL{comPtr_PreProcessor,include_preprocessor}
00039084 <AmiBlitz3.ab3@27666>    *tn.preprocessor = Peek.l(?include_preprocessor)
000390AE <AmiBlitz3.ab3@27667>     written.l = preproc_DetokenizeLine{*tn,Peek.l (?beforeparameterfetch),&detokenline}
000390D6 <AmiBlitz3.ab3@27668>     If written>0 Then Poke.b &detokenline+written,0
00039100 <AmiBlitz3.ab3@27669>     sourceLineText.s = Peek.s(&detokenline)
00039106 <AmiBlitz3.ab3@27670>   Else
0003912E <AmiBlitz3.ab3@27671>     sourceLineText = "NULL"
00039162 <AmiBlitz3.ab3@27673>   error_source$ = sourceLineText
000391B4 <AmiBlitz3.ab3@27674>   error$=error$+sourceLineText
000391BA <AmiBlitz3.ab3@27675>   GetD0 &error$
000391D8 <AmiBlitz3.ab3@27676>   !asm
000391DA <AmiBlitz3.ab3@27677>   MOVE.l d0,a0
000391DC <AmiBlitz3.ab3@27678> RTS
000391DE <AmiBlitz3.ab3@27682>   MOVE.l a0,-(a7)
000391E0 <AmiBlitz3.ab3@27683>   MOVE.l a0,d0
000391E2 <AmiBlitz3.ab3@27684>   MOVE.l a5,a0                                             ;macro title
0003920C <AmiBlitz3.ab3@27685>   !basic
00039210 <AmiBlitz3.ab3@27686>   i = PutD0
00039212 <AmiBlitz3.ab3@27687>   MOVEQ #20,d0
00039214 <AmiBlitz3.ab3@27690>     MOVE.b -(a0),d1
00039218 <AmiBlitz3.ab3@27691>     BEQ 'l1
0003921C <AmiBlitz3.ab3@27692>     CMP.b #":",d1
00039220 <AmiBlitz3.ab3@27693>     BEQ 'l1
00039222 <AmiBlitz3.ab3@27694>     SUBQ.l #1,d0
00039226 <AmiBlitz3.ab3@27695>     BNE 'l2
00039228 <AmiBlitz3.ab3@27698>   ADDQ #1,a0
0003922A <AmiBlitz3.ab3@27699>   MOVE.l a0,d0
0003922E <AmiBlitz3.ab3@27700>   i2.l = PutD0
0003924A <AmiBlitz3.ab3@27701>   If Peek.w (?ininclude)>0
000392A4 <AmiBlitz3.ab3@27702>     Poke.s (?includetemp2),incdim(Peek.w(?ininclude)-1)
000392B4 <AmiBlitz3.ab3@27703>     errorline.l = Peek.l(?includeline);-1
000392DC <AmiBlitz3.ab3@27704>     Poke.l ?compilelinecounter,Peek.l(?includeline) - 1
00039306 <AmiBlitz3.ab3@27705>     errorfile.s = Peek.s(?includetemp2)
0003930C <AmiBlitz3.ab3@27706>   Else
00039344 <AmiBlitz3.ab3@27707>     Poke.s (?includetemp2),Peek.s(?ptr_parameterstore)
0003935A <AmiBlitz3.ab3@27708>     errorline.l = Peek.l(?compilelinecounter) + 1
0003938E <AmiBlitz3.ab3@27709>     errorfile.s = cli_sourcefile
00039398 <AmiBlitz3.ab3@27712>   If i
0003943C <AmiBlitz3.ab3@27713>     errortext.s = !TRANS{Replace$(Peek.s(i),"\\0a","\n")}
000394BA <AmiBlitz3.ab3@27714>     errortext.s = Replace$(errortext,"\n","\\0a")
000394C0 <AmiBlitz3.ab3@27715>   Else
000394E8 <AmiBlitz3.ab3@27716>     errortext.s = "???"
00039660 <AmiBlitz3.ab3@27719>   NPrint "\\1b[1m",!TRANS{"Compiler Error"}," #",Peek.l(?errorcounter)," <",errorfile,"@",errorline,">\\1b[0m "
00039728 <AmiBlitz3.ab3@27720>   NPrint "  ",error_type$,"\\n  ",error_source$
00039746 <AmiBlitz3.ab3@27724>   !asm
00039748 <AmiBlitz3.ab3@27725>   MOVE.l (a7)+,a0
0003974A <AmiBlitz3.ab3@27726> RTS
0003974C <AmiBlitz3.ab3@27730>   MOVE.l a0,-(a7)
0003974E <AmiBlitz3.ab3@27731>   MOVE.l a0,d0
00039750 <AmiBlitz3.ab3@27732>   MOVE.l a5,a0                                             ;macro title
0003977A <AmiBlitz3.ab3@27733>   !basic
0003977E <AmiBlitz3.ab3@27734>   i = PutD0
00039780 <AmiBlitz3.ab3@27735>   MOVEQ #20,d0
00039782 <AmiBlitz3.ab3@27738>     MOVE.b -(a0),d1
00039786 <AmiBlitz3.ab3@27739>     BEQ 'l1
0003978A <AmiBlitz3.ab3@27740>     CMP.b #":",d1
0003978E <AmiBlitz3.ab3@27741>     BEQ 'l1
00039790 <AmiBlitz3.ab3@27742>     SUBQ.l #1,d0
00039794 <AmiBlitz3.ab3@27743>     BNE 'l2
00039796 <AmiBlitz3.ab3@27746>   ADDQ #1,a0
00039798 <AmiBlitz3.ab3@27747>   MOVE.l a0,d0
0003979C <AmiBlitz3.ab3@27748>   i2.l = PutD0
00039820 <AmiBlitz3.ab3@27749>   fid.l = file_Open{dos_AddPart{my_systemdir$,"ab_compileerror.txt"},#file_forcewrite}
00039834 <AmiBlitz3.ab3@27750>   If fid <> -1
00039850 <AmiBlitz3.ab3@27751>     If Peek.w (?ininclude)>0
000398AA <AmiBlitz3.ab3@27752>       Poke$(?includetemp2),incdim(Peek.w(?ininclude)-1)
000398B0 <AmiBlitz3.ab3@27753>     Else
000398DC <AmiBlitz3.ab3@27754>       Poke$(?includetemp2),""
00039906 <AmiBlitz3.ab3@27756>     a$ = Peek$(?includetemp2)
00039978 <AmiBlitz3.ab3@27757>     x$ = Replace$(Peek$(i),"\\0a","\n")
000399AA <AmiBlitz3.ab3@27758>     file_WriteLine{fid,x$}
000399F4 <AmiBlitz3.ab3@27759>     file_WriteLine{fid,Str$(Peek.l(?compilelinecounter) + 1)}
00039A20 <AmiBlitz3.ab3@27760>     If a$
00039A52 <AmiBlitz3.ab3@27761>       file_WriteLine{fid,a$}
00039A9C <AmiBlitz3.ab3@27762>       file_WriteLine{fid,Str$(Peek.l(?includeline)-1)}
00039AC4 <AmiBlitz3.ab3@27763>       Poke.l ?compilelinecounter,Peek.l(?includeline) - 1
00039ACA <AmiBlitz3.ab3@27764>     Else
00039AF0 <AmiBlitz3.ab3@27765>       file_WriteLine{fid,"none"}
00039B20 <AmiBlitz3.ab3@27767>     file_WriteLine{fid,Peek$(i2)}
00039B76 <AmiBlitz3.ab3@27768>     file_WriteLine{fid,Str$(Peek.l(?globallinecount))+" line(s) compiled"}
00039BC0 <AmiBlitz3.ab3@27769>     file_WriteLine{fid,Hex$(Peek.w(?globalvarpointer))+" global var base"}
00039BCA <AmiBlitz3.ab3@27770>     file_Close{fid}
00039BE8 <AmiBlitz3.ab3@27772>   !asm
00039BEA <AmiBlitz3.ab3@27773>   MOVE.l (a7)+,a0
00039BEC <AmiBlitz3.ab3@27774> RTS
00039C16 <AmiBlitz3.ab3@27778>   !basic
00039C1A <AmiBlitz3.ab3@27779>   progress.l     = PutD0
00039C2C <AmiBlitz3.ab3@27780>   total.l        = Peek.w(?progressbar_width)
00039C4A <AmiBlitz3.ab3@27781>   calcpro        = (progress * 100) / total +1
00039C5C <AmiBlitz3.ab3@27782>   pass.l         = Peek.w(?pass)
00039C6E <AmiBlitz3.ab3@27783>   typ.l          = Peek.w(?compiler_job)
00039C8C <AmiBlitz3.ab3@27786> If (pass><pass_old OR typ><typ_old)
00039C9A <AmiBlitz3.ab3@27788>     If pass_old><pass
00039D36 <AmiBlitz3.ab3@27789>       passtatusstr.s = !TRANS{"Pass"}+" "+Str$(pass)+"..."
00039D8C <AmiBlitz3.ab3@27790>       If cli_verbose>=2 Then NPrint passtatusstr
00039D92 <AmiBlitz3.ab3@27793>     pass_old = pass
00039D98 <AmiBlitz3.ab3@27794>     typ_old  = typ
00039D9E <AmiBlitz3.ab3@27795>     update_comstatus_gui = True
00039DB0 <AmiBlitz3.ab3@27796>     If typ=0
00039E90 <AmiBlitz3.ab3@27797>       comstatusstr = !TRANS{"Pass"}+" "+Str$(pass)+": "+!TRANS{"Compiling Sources..."}
00039E98 <AmiBlitz3.ab3@27798>       calcpro = 0  ; set gauge to 0
00039EAA <AmiBlitz3.ab3@27800>     If typ=1
00039F8A <AmiBlitz3.ab3@27801>       comstatusstr = !TRANS{"Pass"}+" "+Str$(pass)+": "+!TRANS{"Building Executable..."}
00039F92 <AmiBlitz3.ab3@27802>       calcpro = 0  ; set gauge to 0
00039FE8 <AmiBlitz3.ab3@27805>     If cli_verbose>=3 Then NPrint comstatusstr
00039FF6 <AmiBlitz3.ab3@27808>   If (calcpro >< calcpro_old)
0003A04A <AmiBlitz3.ab3@27809>     If cli_verbose>=4 Then NPrint calcpro,"% compiled..."
0003A050 <AmiBlitz3.ab3@27810>     calcpro_old = calcpro
0003A056 <AmiBlitz3.ab3@27811>     update_comstatus_gui = True
0003A070 <AmiBlitz3.ab3@27814>   If update_comstatus_gui = True                                     ; check if a update of the gui nessecary
0003A08E <AmiBlitz3.ab3@27815>     !asm
0003A0C0 <AmiBlitz3.ab3@27816> 
0003A0EA <AmiBlitz3.ab3@27817>     !basic
0003A0F0 <AmiBlitz3.ab3@27818>     update_comstatus_gui  = False ; because we update the gui
0003A10E <AmiBlitz3.ab3@27820>   !asm
0003A110 <AmiBlitz3.ab3@27821> RTS
0003A116 <AmiBlitz3.ab3@27826>   MOVE.w maxobject_pos,D5                                  ;max objects 1. visible
0003A11C <AmiBlitz3.ab3@27827>   LEA maxobjects_value,A3                                  ;current value
0003A122 <AmiBlitz3.ab3@27828>   MOVEA.l libpointer,A2
0003A126 <AmiBlitz3.ab3@27831>   CMPA.w #$0,A2
0003A12A <AmiBlitz3.ab3@27832>   BEQ.w menu4c__igotb
0003A12C <AmiBlitz3.ab3@27833>   MOVEA.l A2,A1
0003A130 <AmiBlitz3.ab3@27834>   ADDA.l $12(A1),A1
0003A134 <AmiBlitz3.ab3@27835>   TST.w -$2(A1)
0003A138 <AmiBlitz3.ab3@27836>   BEQ.w JL_0_FFF6b
0003A13A <AmiBlitz3.ab3@27837>   SUBQ.w #1,D5
0003A13E <AmiBlitz3.ab3@27838>   BMI.w JL_0_FFFCb
0003A140 <AmiBlitz3.ab3@27841>   MOVEA.l (A2),A2
0003A144 <AmiBlitz3.ab3@27842> BRA.w JL_0_FFDAb
0003A148 <AmiBlitz3.ab3@27845>   MOVE.w (A3),-$4(A1)
0003A14A <AmiBlitz3.ab3@27848> RTS
0003A150 <AmiBlitz3.ab3@27852>   MOVE.w debugnest,d0
0003A156 <AmiBlitz3.ab3@27853>   LEA storedebugmode, a0
0003A15E <AmiBlitz3.ab3@27854>   MOVE.b 0(a0,d0.w),debugmode
0003A164 <AmiBlitz3.ab3@27855>   TST.w debugnest
0003A168 <AmiBlitz3.ab3@27856>   BEQ JUMP_unpairrunerrs
0003A16E <AmiBlitz3.ab3@27857>   SUBQ.w #1,debugnest
0003A170 <AmiBlitz3.ab3@27858> RTS
0003A176 <AmiBlitz3.ab3@27861> JMP runerrsoverflow
0003A17C <AmiBlitz3.ab3@27864> JMP unpairrunerrs
0003A184 <AmiBlitz3.ab3@27868>   BCHG #$7,use_debugger
0003A18C <AmiBlitz3.ab3@27870>   BTST #$7,use_debugger
0003A190 <AmiBlitz3.ab3@27871>   BNE 'debugon
0003A196 <AmiBlitz3.ab3@27872>   CLR.w debugmode
0003A19A <AmiBlitz3.ab3@27873> BRA.b 'debugoff
0003A1A0 <AmiBlitz3.ab3@27876>   SNE debugmode
0003A1A2 <AmiBlitz3.ab3@27879>   MOVE.l a0,-(a7)
0003A1DA <AmiBlitz3.ab3@27882>   !ComData_SetB{comByte_DebugMode,debugmode}
0003A1DC <AmiBlitz3.ab3@27887>   MOVE.l (a7)+,a0
0003A1DE <AmiBlitz3.ab3@27888> RTS
0003A1E6 <AmiBlitz3.ab3@27893>   BTST #$7,use_debugger
0003A1EA <AmiBlitz3.ab3@27894>   BNE 'debugon
0003A1F0 <AmiBlitz3.ab3@27895>   CLR.w debugmode
0003A1F4 <AmiBlitz3.ab3@27896> BRA.b 'debugoff
0003A1FA <AmiBlitz3.ab3@27899>   SNE debugmode
0003A1FC <AmiBlitz3.ab3@27902> RTS
0003A202 <AmiBlitz3.ab3@27906>   ADDQ.w #1,debugnest
0003A208 <AmiBlitz3.ab3@27907>   MOVE.w debugnest,d0
0003A20C <AmiBlitz3.ab3@27908>   CMP.w #18,d0
0003A210 <AmiBlitz3.ab3@27909>    BGE JUMP_runerrsoverflow
0003A216 <AmiBlitz3.ab3@27910>   LEA storedebugmode, a0
0003A21E <AmiBlitz3.ab3@27911>   MOVE.b debugmode,0( a0,d0.w)
0003A224 <AmiBlitz3.ab3@27914>   SF debugmode
0003A226 <AmiBlitz3.ab3@27915> RTS
0003A2A6 <AmiBlitz3.ab3@27918> usedpath:  Ds.l 32
0003A2AA <AmiBlitz3.ab3@27922>   BEQ.w JUMP_syntaxerr
0003A2B0 <AmiBlitz3.ab3@27923>   LEA lastpath,A0
0003A2B4 <AmiBlitz3.ab3@27924>   MOVEM.l a0-a1/d0,-(a7)
0003A2BA <AmiBlitz3.ab3@27925>   LEA lastpath2,a1
0003A2BC <AmiBlitz3.ab3@27928>     MOVE.b (a0)+,(a1)+
0003A2C0 <AmiBlitz3.ab3@27929>   BNE 'l2
0003A2C4 <AmiBlitz3.ab3@27930>   MOVEM.l (a7)+,a0-a1/d0
0003A2C8 <AmiBlitz3.ab3@27931>   LEA usedpath(PC),A0
0003A2CC <AmiBlitz3.ab3@27932>   MOVEM.l a0-a1/d0,-(a7)
0003A2D2 <AmiBlitz3.ab3@27933>   LEA lastpath,a1
0003A2D4 <AmiBlitz3.ab3@27936>     MOVE.b (a0)+,(a1)+
0003A2D8 <AmiBlitz3.ab3@27937>   BNE 'l1
0003A2DC <AmiBlitz3.ab3@27938>   MOVEM.l (a7)+,a0-a1/d0
0003A2DE <AmiBlitz3.ab3@27941>   TST.w D0
0003A2E2 <AmiBlitz3.ab3@27942>    BMI.w JUMP_syntaxerr
0003A2E4 <AmiBlitz3.ab3@27943>   MOVE.b D0,(A0)+
0003A2E8 <AmiBlitz3.ab3@27944>   BSR.w JUMP_get1bytemain
0003A2EC <AmiBlitz3.ab3@27945>    BNE.w JL_0_4AA8
0003A2F0 <AmiBlitz3.ab3@27946>   MOVE.b #$2,(A0)
0003A2F2 <AmiBlitz3.ab3@27947> RTS
0003A2F6 <AmiBlitz3.ab3@27951>   BEQ.w JUMP_syntaxerr
0003A2FC <AmiBlitz3.ab3@27952>   LEA path2,A0
0003A2FE <AmiBlitz3.ab3@27962>   TST.w D0
0003A302 <AmiBlitz3.ab3@27963>    BMI.w JUMP_syntaxerr
0003A304 <AmiBlitz3.ab3@27964>   MOVE.b D0,(A0)+
0003A308 <AmiBlitz3.ab3@27965>   BSR.w JUMP_get1bytemain
0003A30C <AmiBlitz3.ab3@27966>    BNE.w JL_0_4AA8b
0003A310 <AmiBlitz3.ab3@27967>   MOVE.b #$2,(A0)
0003A312 <AmiBlitz3.ab3@27968> RTS
0003A318 <AmiBlitz3.ab3@27977> JMP errormsg_reg
0003A322 <AmiBlitz3.ab3@27981>   MOVE.l #$f22d6780,fpucodeglobal
0003A32C <AmiBlitz3.ab3@27982>   MOVE.l #$f22c6780,fpucodelocal
0003A332 <AmiBlitz3.ab3@27983>   LEA regtable,a0
0003A33C <AmiBlitz3.ab3@27984>   MOVE.l #7,maxregs
0003A33E <AmiBlitz3.ab3@27987>   MOVE.l (a0),d0
0003A342 <AmiBlitz3.ab3@27988>   BEQ 'e1
0003A344 <AmiBlitz3.ab3@27989>   CLR.l (a0)
0003A348 <AmiBlitz3.ab3@27990>   MOVE.w 4(a0),d0
0003A352 <AmiBlitz3.ab3@27991>   MOVE.l fpucodeglobal,fpucode
0003A356 <AmiBlitz3.ab3@27992>   TST.w 6(a0)
0003A35A <AmiBlitz3.ab3@27993>   BEQ 'glob
0003A364 <AmiBlitz3.ab3@27994>   MOVE.l fpucodelocal,fpucode
0003A36A <AmiBlitz3.ab3@27997>   MOVE.l fpucode,d1
0003A370 <AmiBlitz3.ab3@27998>   JSR writelong
0003A37A <AmiBlitz3.ab3@27999>   SUB.l #$80,fpucodelocal
0003A384 <AmiBlitz3.ab3@28000>   SUB.l #$80,fpucodeglobal
0003A386 <AmiBlitz3.ab3@28001>   MOVE.w d0,d1
0003A38C <AmiBlitz3.ab3@28002>   JSR writeword
0003A38E <AmiBlitz3.ab3@28003>   ADDQ #8,a0
0003A392 <AmiBlitz3.ab3@28004> BRA 'again
0003A394 <AmiBlitz3.ab3@28007> RTS
0003A39A <AmiBlitz3.ab3@28014> JMP notypeerr
0003A3A0 <AmiBlitz3.ab3@28017> JMP illtypeerr
0003A3AA <AmiBlitz3.ab3@28020>   MOVE.l #$f22d4780,fpucodeglobal
0003A3B4 <AmiBlitz3.ab3@28021>   MOVE.l #$f22c4780,fpucodelocal
0003A3BA <AmiBlitz3.ab3@28022>   LEA regtable,a0
0003A3BC <AmiBlitz3.ab3@28023>   TST.l (a0)
0003A3C0 <AmiBlitz3.ab3@28024>    BNE JUMP_errormsg_reg
0003A3C2 <AmiBlitz3.ab3@28025>   MOVE.l d7,-(a7)
0003A3C4 <AmiBlitz3.ab3@28026>   SUBQ.l #1,a5
0003A3CA <AmiBlitz3.ab3@28029>   JSR getparameter2
0003A3CE <AmiBlitz3.ab3@28030>   BEQ.w 'nopar
0003A3D4 <AmiBlitz3.ab3@28031>   MOVE.w d0,lastchar
0003A3DA <AmiBlitz3.ab3@28032>   JSR findvariable
0003A3DE <AmiBlitz3.ab3@28033>   BNE 'islocal
0003A3E8 <AmiBlitz3.ab3@28034>   MOVE.l fpucodeglobal,fpucode
0003A3F2 <AmiBlitz3.ab3@28035>   MOVE.l #3,maxregs
0003A3F4 <AmiBlitz3.ab3@28036>   MOVEQ #0,d7
0003A3FC <AmiBlitz3.ab3@28039>   CMP.l #newtype_float,$a(a2)                              ;is float type
0003A400 <AmiBlitz3.ab3@28040>    BEQ 'doit
0003A408 <AmiBlitz3.ab3@28041>   CMP.l #newtype_double,$a(a2)
0003A40C <AmiBlitz3.ab3@28042>    BNE JUMP_illtypeerr
0003A412 <AmiBlitz3.ab3@28045>   LEA regtable,a0
0003A414 <AmiBlitz3.ab3@28046>   MOVEQ #0,d0
0003A416 <AmiBlitz3.ab3@28049>   TST.l (a0)
0003A41A <AmiBlitz3.ab3@28050>    BEQ 'store
0003A41C <AmiBlitz3.ab3@28051>   ADDQ.l #4,d0
0003A41E <AmiBlitz3.ab3@28052>   ADDQ.l #8,a0
0003A424 <AmiBlitz3.ab3@28053>   CMP.l #16,d0
0003A428 <AmiBlitz3.ab3@28054>    BCS 'loop
0003A432 <AmiBlitz3.ab3@28055>   MOVE.l #2,maxregs
0003A438 <AmiBlitz3.ab3@28056>   CMP.l #20,d0
0003A43C <AmiBlitz3.ab3@28057>    BCS 'loop
0003A446 <AmiBlitz3.ab3@28058>   MOVE.l #1,maxregs
0003A44C <AmiBlitz3.ab3@28059>   CMP.l #24,d0
0003A450 <AmiBlitz3.ab3@28060>    BCS 'loop
0003A456 <AmiBlitz3.ab3@28061> JMP toovarerr
0003A45C <AmiBlitz3.ab3@28064>   TST.b fpu
0003A460 <AmiBlitz3.ab3@28065>    BEQ 'nofpu
0003A462 <AmiBlitz3.ab3@28066>   MOVE.l a2,(a0)
0003A468 <AmiBlitz3.ab3@28067>   MOVE.w 4(a2),4(a0)
0003A46C <AmiBlitz3.ab3@28068>   MOVE.w d7,6(a0)
0003A472 <AmiBlitz3.ab3@28069>   MOVE.l fpucode,d1
0003A47C <AmiBlitz3.ab3@28070>   SUB.l #$80,fpucodeglobal
0003A486 <AmiBlitz3.ab3@28071>   SUB.l #$80,fpucodelocal
0003A48C <AmiBlitz3.ab3@28072>   JSR writelong
0003A490 <AmiBlitz3.ab3@28073>   MOVE.w 4(a2),d1
0003A496 <AmiBlitz3.ab3@28074>   JSR writeword
0003A49C <AmiBlitz3.ab3@28077>   MOVE.w lastchar,d0
0003A4A0 <AmiBlitz3.ab3@28078>   CMP.w #":",d0
0003A4A4 <AmiBlitz3.ab3@28079>    BEQ 'nopar
0003A4A6 <AmiBlitz3.ab3@28080>   TST.w d0
0003A4AA <AmiBlitz3.ab3@28081>    BEQ 'nopar
0003A4AE <AmiBlitz3.ab3@28082>   CMP.w #",",d0
0003A4B2 <AmiBlitz3.ab3@28083>   BNE JUMP_syntaxerr
0003A4B6 <AmiBlitz3.ab3@28084> BRA 'l2
0003A4B8 <AmiBlitz3.ab3@28087>    MOVE.l (a7)+,d7
0003A4BA <AmiBlitz3.ab3@28088> RTS
0003A4BC <AmiBlitz3.ab3@28091>   MOVEQ #1,d7
0003A4C4 <AmiBlitz3.ab3@28092>   MOVE.b #1,newvariable
0003A4CA <AmiBlitz3.ab3@28093>   LEA firstlocal,a2
0003A4D0 <AmiBlitz3.ab3@28094>   JSR findvariable
0003A4D6 <AmiBlitz3.ab3@28095>   CLR.b newvariable
0003A4DC <AmiBlitz3.ab3@28096>   CMP.l #-1,d0
0003A4E0 <AmiBlitz3.ab3@28097>   BEQ.w JUMP_notypeerr2
0003A4EA <AmiBlitz3.ab3@28098>   MOVE.l fpucodelocal,fpucode
0003A4EE <AmiBlitz3.ab3@28099> BRA 'go
0003A4F2 <AmiBlitz3.ab3@28102>   CMP.b #".",d0
0003A4F6 <AmiBlitz3.ab3@28103>    BNE 'l1
0003A4FA <AmiBlitz3.ab3@28104>   BSR JUMP_get1bytemain
0003A4FE <AmiBlitz3.ab3@28105>   BSR JUMP_get1bytemain
0003A502 <AmiBlitz3.ab3@28108>   ORI .b #$20,d0
0003A506 <AmiBlitz3.ab3@28109>   CMP.b #"d",d0
0003A50A <AmiBlitz3.ab3@28110>    BNE JUMP_illeaerr
0003A50E <AmiBlitz3.ab3@28111>   BSR JUMP_get1bytemain
0003A512 <AmiBlitz3.ab3@28112>   SUB.b #$30,d0
0003A516 <AmiBlitz3.ab3@28113>   CMP.b #$7,d0
0003A51A <AmiBlitz3.ab3@28114>    BGT JUMP_syntaxerr
0003A51E <AmiBlitz3.ab3@28115>   MOVE.w #$49c0,d1
0003A520 <AmiBlitz3.ab3@28116>   ADD.b d0,d1
0003A526 <AmiBlitz3.ab3@28117>   JSR writeword
0003A52A <AmiBlitz3.ab3@28118>   BSR JUMP_get1bytemain
0003A52C <AmiBlitz3.ab3@28119> RTS
0003A532 <AmiBlitz3.ab3@28123>   LEA lastpath,a0
0003A536 <AmiBlitz3.ab3@28124>   LEA usedpath(PC),A1
0003A538 <AmiBlitz3.ab3@28127>     MOVE.b (a0)+,(a1)+
0003A53C <AmiBlitz3.ab3@28128>   BNE 'l1
0003A542 <AmiBlitz3.ab3@28130>   LEA lastpath2,a0
0003A548 <AmiBlitz3.ab3@28131>   LEA lastpath,A1
0003A54A <AmiBlitz3.ab3@28134>     MOVE.b (a0)+,(a1)+
0003A54E <AmiBlitz3.ab3@28135>   BNE 'l2
0003A550 <AmiBlitz3.ab3@28136> RTS
0003A556 <AmiBlitz3.ab3@28140>   TST.b objectcount
0003A55A <AmiBlitz3.ab3@28141>   BEQ 'l2a
0003A560 <AmiBlitz3.ab3@28142> JMP macnesterr
0003A566 <AmiBlitz3.ab3@28145>   LEA devo,a0
0003A56C <AmiBlitz3.ab3@28146>   ADDQ.b #1,objectcount
0003A570 <AmiBlitz3.ab3@28147>   MOVEM.l a1/d2,-(a7)
0003A576 <AmiBlitz3.ab3@28148>   LEA ptr_parameterstore,a1
0003A578 <AmiBlitz3.ab3@28151>     MOVE.b (a0)+,(a1)+
0003A57C <AmiBlitz3.ab3@28152>   BNE 'l1
0003A57E <AmiBlitz3.ab3@28154>   MOVEQ #13,d2
0003A584 <AmiBlitz3.ab3@28155>   JSR findlabel2
0003A588 <AmiBlitz3.ab3@28156>   BNE 'd
0003A58C <AmiBlitz3.ab3@28157>   TST.l 8(a2)
0003A590 <AmiBlitz3.ab3@28158>   BEQ 'd
0003A596 <AmiBlitz3.ab3@28159>   SUBQ.b #1,objectcount
0003A59A <AmiBlitz3.ab3@28160>   MOVEM.l (a7)+,a1/d2
0003A5A0 <AmiBlitz3.ab3@28161>   JSR skiprest
0003A5A8 <AmiBlitz3.ab3@28162>   MOVE.b #1,developobject
0003A5AA <AmiBlitz3.ab3@28163> RTS
0003A5AE <AmiBlitz3.ab3@28166>   MOVEM.l (a7)+,a1/d2
0003A5B6 <AmiBlitz3.ab3@28167>   MOVE.b #1,resdisable
0003A5BC <AmiBlitz3.ab3@28170>   CLR.b developobject
0003A5C2 <AmiBlitz3.ab3@28171> JMP do_Macro
0003A5C8 <AmiBlitz3.ab3@28175> JMP illeaerr
0003A5CE <AmiBlitz3.ab3@28179>   CLR.b typecheck
0003A5D4 <AmiBlitz3.ab3@28180>   CLR.b declare
0003A5DA <AmiBlitz3.ab3@28181>   CLR.b declare2
0003A5DE <AmiBlitz3.ab3@28182>   SUB.b #$30,d0
0003A5E2 <AmiBlitz3.ab3@28183>   BTST #0,d0
0003A5E6 <AmiBlitz3.ab3@28184>   BEQ 'l1
0003A5EE <AmiBlitz3.ab3@28185>   MOVE.b #1,declare
0003A5F2 <AmiBlitz3.ab3@28188>   BTST #1,d0
0003A5F6 <AmiBlitz3.ab3@28189>   BEQ 'l2
0003A5FE <AmiBlitz3.ab3@28190>   MOVE.b #1,declare2
0003A602 <AmiBlitz3.ab3@28193>   BTST #2,d0
0003A606 <AmiBlitz3.ab3@28194>   BEQ 'l3
0003A60E <AmiBlitz3.ab3@28195>   MOVE.b #1,typecheck
0003A612 <AmiBlitz3.ab3@28197>   BSR.w JUMP_get1bytemain
0003A614 <AmiBlitz3.ab3@28198> RTS
0003A61A <AmiBlitz3.ab3@28201> JMP get1bytemain
0003A644 <AmiBlitz3.ab3@28205>   !basic
0003A664 <AmiBlitz3.ab3@28207>   FillMem ?residents_table,?residents_table_end-?residents_table,0
0003A682 <AmiBlitz3.ab3@28208>   !asm
0003A684 <AmiBlitz3.ab3@28209> Return
0003A686 <AmiBlitz3.ab3@28214>   MOVE.l d2,-(a7)                                          ; D2 -> stack
0003A688 <AmiBlitz3.ab3@28215>   ADDQ #1,a5
0003A68A <AmiBlitz3.ab3@28216>   MOVE.l a5,-(a7)
0003A6B4 <AmiBlitz3.ab3@28217>   !basic
0003A6BA <AmiBlitz3.ab3@28218>   MOVE.l (a7)+,d0 : _myD0.l = PutD0
0003A6C4 <AmiBlitz3.ab3@28219>   If _myD0
0003A704 <AmiBlitz3.ab3@28220>     newconst$ = UCase$(Peek.s(_myD0))
0003A70A <AmiBlitz3.ab3@28221>   Else
0003A744 <AmiBlitz3.ab3@28222>     error{"INTERNAL: invalid pointer in check_newconstants!"}
0003A76C <AmiBlitz3.ab3@28223>     nwconst$="xxx"
0003A794 <AmiBlitz3.ab3@28225>   condata$ =""
0003A7A4 <AmiBlitz3.ab3@28226>   Poke.b ?skip_bytes,0
0003A800 <AmiBlitz3.ab3@28227>   If Left$(newconst$,2) = "__"
0003A85A <AmiBlitz3.ab3@28228>     Select Mid$(newconst$,3,4)
0003A87E <AmiBlitz3.ab3@28230>      Case "DATE"
0003A8D8 <AmiBlitz3.ab3@28231>       Select Mid$(newconst$,3,6)
0003A916 <AmiBlitz3.ab3@28232>       Case "DATE__" : DateFormat 1 : Poke.b ?skip_bytes,8
0003A95A <AmiBlitz3.ab3@28233>       Case "DATE_G" : DateFormat 0 : Poke.b ?skip_bytes,12
0003A968 <AmiBlitz3.ab3@28234>       End Select
0003A976 <AmiBlitz3.ab3@28235>       i.l=SystemDate
0003A99C <AmiBlitz3.ab3@28236>       condata$ = Date$ (i)
0003AA1A <AmiBlitz3.ab3@28237>       condata$ = Replace$(condata$,"/",".")
0003AA44 <AmiBlitz3.ab3@28239>      Case "VER_"
0003AA54 <AmiBlitz3.ab3@28242>       actual_version.l = Peek.l(?versioninformation)
0003AA64 <AmiBlitz3.ab3@28243>       actual_build.l   = Peek.l(?number_of_builds)
0003AA88 <AmiBlitz3.ab3@28245>       Format ""
0003AAE2 <AmiBlitz3.ab3@28246>       Select Mid$(newconst$,3,9)
0003AB06 <AmiBlitz3.ab3@28248>        Case "VER_MAJOR"
0003AB42 <AmiBlitz3.ab3@28249>         condata$ = Str$(actual_version LSR 24)
0003AB6C <AmiBlitz3.ab3@28251>        Case "VER_MINOR"
0003ABB0 <AmiBlitz3.ab3@28252>         condata$ = Str$((actual_version LSL 8) LSR 24)
0003ABDA <AmiBlitz3.ab3@28254>        Case "VER_PATCH"
0003AC1E <AmiBlitz3.ab3@28255>         condata$ = Str$((actual_version LSL 16) LSR 24 )
0003AC48 <AmiBlitz3.ab3@28257>        Case "VER_BUILD"
0003AC6C <AmiBlitz3.ab3@28258>         Format ""
0003ACA0 <AmiBlitz3.ab3@28259>         condata$ = Str$(actual_build)
0003ACA6 <AmiBlitz3.ab3@28261>        Default
0003ACCE <AmiBlitz3.ab3@28262>         condata$ = "{unknown compiler constant}"
0003ACDC <AmiBlitz3.ab3@28264>       End Select
0003AD00 <AmiBlitz3.ab3@28265>       Format ""
0003AD10 <AmiBlitz3.ab3@28266>       Poke.b ?skip_bytes,11
0003AD3A <AmiBlitz3.ab3@28268>      Case "THIS"
0003AD94 <AmiBlitz3.ab3@28269>       Select Mid$(newconst$,3,9)
0003ADB8 <AmiBlitz3.ab3@28271>        Case "THIS_FUNC"
0003ADC8 <AmiBlitz3.ab3@28272>         Poke.b ?skip_bytes,15
0003ADE8 <AmiBlitz3.ab3@28273>         If Peek.l(?currentfunction)<>0
0003AE34 <AmiBlitz3.ab3@28274>           condata$ = Peek.s(Peek.l(?currentfunction) + 32 + #funcentry_extend + 1)
0003AE3A <AmiBlitz3.ab3@28275>         Else
0003AE62 <AmiBlitz3.ab3@28276>           condata$ = "GLOBAL"
0003AE8C <AmiBlitz3.ab3@28279>        Case "THIS_INCL"
0003AE9C <AmiBlitz3.ab3@28280>         Poke.b ?skip_bytes,14
0003AEBC <AmiBlitz3.ab3@28281>         If Peek.l(?includetemp2)<>0
0003AF0A <AmiBlitz3.ab3@28282>           condata$ = dos_FilePart{Peek$(?includetemp2)}
0003AF34 <AmiBlitz3.ab3@28285>        Case "THIS_POIN"
0003AF44 <AmiBlitz3.ab3@28286>         Poke.b ?skip_bytes,14
0003AF64 <AmiBlitz3.ab3@28287>         If Peek.l(?currentfunction)<>0
0003AF92 <AmiBlitz3.ab3@28288>           condata$ = Hex$(Peek.l(?currentfunction))
0003AFA0 <AmiBlitz3.ab3@28291>       End Select
0003AFCA <AmiBlitz3.ab3@28293>      Case "CODE"
0003AFDA <AmiBlitz3.ab3@28294>       Poke.b ?skip_bytes,10
0003B03C <AmiBlitz3.ab3@28295>       If Mid$(newconst$,3,8) = "CODELINE"
0003B078 <AmiBlitz3.ab3@28296>         condata$ = Str$(Peek.l(?globallinecount))
0003B086 <AmiBlitz3.ab3@28299>     End Select
0003B08C <AmiBlitz3.ab3@28301>   Else
0003B0E0 <AmiBlitz3.ab3@28302>     Select Left$(newconst$,1)
0003B104 <AmiBlitz3.ab3@28304>      Case "R"
0003B114 <AmiBlitz3.ab3@28305>       Poke.b ?skip_bytes,3
0003B18C <AmiBlitz3.ab3@28306>       For i = 1 To Vallong(Mid$(newconst$,2,2))
0003B20C <AmiBlitz3.ab3@28307>         condata$ = condata$ + Mid$(newconst$,4,1)
0003B21C <AmiBlitz3.ab3@28308>       Next
0003B246 <AmiBlitz3.ab3@28310>      Case "N"
0003B256 <AmiBlitz3.ab3@28311>       Poke.b ?skip_bytes,1
0003B27A <AmiBlitz3.ab3@28312>       condata$ = Chr$(10)
0003B280 <AmiBlitz3.ab3@28314>      Default
0003B292 <AmiBlitz3.ab3@28315>       char1.b = Peek.b(&newconst$)
0003B2AA <AmiBlitz3.ab3@28316>       char2.b = Peek.b(&newconst$+1)
0003B2B6 <AmiBlitz3.ab3@28317>       nibble1.l = -1
0003B2C2 <AmiBlitz3.ab3@28318>       nibble2.l = -1
0003B300 <AmiBlitz3.ab3@28320>       If (char1>=@"0" AND char1<=@"9") Then nibble1 = char1-@"0"
0003B33E <AmiBlitz3.ab3@28321>       If (char2>=@"0" AND char2<=@"9") Then nibble2 = char2-@"0"
0003B382 <AmiBlitz3.ab3@28323>       If (char1>=@"a" AND char1<=@"f") Then nibble1 = char1-@"a" + 10
0003B3C6 <AmiBlitz3.ab3@28324>       If (char2>=@"a" AND char2<=@"f") Then nibble2 = char2-@"a" + 10
0003B40A <AmiBlitz3.ab3@28326>       If (char1>=@"A" AND char1<=@"F") Then nibble1 = char1-@"A" + 10
0003B44E <AmiBlitz3.ab3@28327>       If (char2>=@"A" AND char2<=@"F") Then nibble2 = char2-@"A" + 10
0003B474 <AmiBlitz3.ab3@28329>       If nibble1>=0 AND nibble2>=0
0003B48A <AmiBlitz3.ab3@28330>         newchar.l = (nibble1 LSL 4) + (nibble2)
0003B4AE <AmiBlitz3.ab3@28331>         condata$ = Chr$(newchar)
0003B4BE <AmiBlitz3.ab3@28332>         Poke.b ?skip_bytes,2
0003B4CC <AmiBlitz3.ab3@28335>     End Select
0003B52C <AmiBlitz3.ab3@28337>   If condata$ = "" AND Peek.b(?skip_bytes)=0
0003B652 <AmiBlitz3.ab3@28338>     !cout{"detected unknown const: " + newconst$}
0003B686 <AmiBlitz3.ab3@28339>     condata$ = newconst$
0003B69C <AmiBlitz3.ab3@28342>   GetD0 FLen(condata$)-1                                    ; laenge zielstring -> Stack
0003B69E <AmiBlitz3.ab3@28343>   MOVE.l d0,d2
0003B6A0 <AmiBlitz3.ab3@28344>   MOVE.l d2,-(a7)
0003B6A6 <AmiBlitz3.ab3@28346>   GetD0 &condata$                                          ; kopieren des neuen Strings in den Zielstring
0003B6A8 <AmiBlitz3.ab3@28347>   MOVE.l d0,a0
0003B6AA <AmiBlitz3.ab3@28350>     MOVE.b (a0)+,d1
0003B6B0 <AmiBlitz3.ab3@28351>     JSR pokedata1b
0003B6B4 <AmiBlitz3.ab3@28352>  DBF d2,'l1
0003B6D2 <AmiBlitz3.ab3@28354>   !asm
0003B6D4 <AmiBlitz3.ab3@28355>   MOVE.l (a7)+,d0                                          ; laenge Zielstring <- Stack
0003B6D6 <AmiBlitz3.ab3@28356>   MOVE.l (a7)+,d2                                          ; d2 <-Stack
0003B6D8 <AmiBlitz3.ab3@28357>   ADD.l d0,d2                                              ; eingefuegte chars zu D2 dazu
0003B6DE <AmiBlitz3.ab3@28358>   ADD.l #1,d2
0003B6E4 <AmiBlitz3.ab3@28360>   MOVE.l #0,d0                                             ; a5 um konstantennamen weiterschieben
0003B6EA <AmiBlitz3.ab3@28361>   MOVE.b skip_bytes,D0
0003B6EC <AmiBlitz3.ab3@28362>   ADD.l D0,a5
0003B6EE <AmiBlitz3.ab3@28363> RTS
0003B6F2 <AmiBlitz3.ab3@28438> MOVEM.l a3/d1,-(a7)
0003B6F8 <AmiBlitz3.ab3@28440> CLR.b a4a5store
0003B6FA <AmiBlitz3.ab3@28441> 'continue: MOVE.b (a3)+,d1
0003B6FE <AmiBlitz3.ab3@28442> CMP.b #$15,d1
0003B702 <AmiBlitz3.ab3@28443> BEQ 'find
0003B706 <AmiBlitz3.ab3@28444> CMP.b #$14,d1
0003B70A <AmiBlitz3.ab3@28445> BEQ 'find
0003B70E <AmiBlitz3.ab3@28446> CMP.b #$ff,d1
0003B712 <AmiBlitz3.ab3@28447> BNE 'continue
0003B716 <AmiBlitz3.ab3@28448> BRA 'notfind
0003B71C <AmiBlitz3.ab3@28450> MOVE.l #$48e7000c,d1                  ; write 68k movem.l a4/a5,-(a7)
0003B722 <AmiBlitz3.ab3@28451> JSR writelong
0003B72A <AmiBlitz3.ab3@28452> MOVE.b #1,a4a5store
0003B72E <AmiBlitz3.ab3@28453> 'notfind: MOVEM.l (a7)+,a3/d1
0003B730 <AmiBlitz3.ab3@28454> RTS
0003B736 <AmiBlitz3.ab3@28457> TST.b a4a5store
0003B73A <AmiBlitz3.ab3@28458> BEQ 'no
0003B740 <AmiBlitz3.ab3@28459> MOVE.l #$4cdf3000,d1                  ; write 68k movem.l (a7)+,a4/a5
0003B746 <AmiBlitz3.ab3@28460> JSR writelong
0003B74C <AmiBlitz3.ab3@28461> CLR.b a4a5store
0003B74E <AmiBlitz3.ab3@28462> 'no RTS
0003B74E <internal_commands.ab3@1> INCLUDE "internal_commands.ab3"
0003B752 <internal_commands.ab3@13> INCLUDE "internal_commands.ab3"
0003B754 <internal_commands.ab3@15> INCLUDE "internal_commands.ab3"
0003B75C <internal_commands.ab3@16> INCLUDE "internal_commands.ab3"
0003B768 <internal_commands.ab3@17> INCLUDE "internal_commands.ab3"
0003B76C <internal_commands.ab3@21> INCLUDE "internal_commands.ab3"
0003B76E <internal_commands.ab3@22> INCLUDE "internal_commands.ab3"
0003B772 <internal_commands.ab3@23> INCLUDE "internal_commands.ab3"
0003B7BB <internal_commands.ab3@24> INCLUDE "internal_commands.ab3"
0003B7BC <internal_commands.ab3@25> INCLUDE "internal_commands.ab3"
0003B7C0 <internal_commands.ab3@28> INCLUDE "internal_commands.ab3"
0003B7C2 <internal_commands.ab3@29> INCLUDE "internal_commands.ab3"
0003B7C6 <internal_commands.ab3@30> INCLUDE "internal_commands.ab3"
0003B7E2 <internal_commands.ab3@31> INCLUDE "internal_commands.ab3"
0003B7E6 <internal_commands.ab3@35> INCLUDE "internal_commands.ab3"
0003B7E8 <internal_commands.ab3@36> INCLUDE "internal_commands.ab3"
0003B7EC <internal_commands.ab3@37> INCLUDE "internal_commands.ab3"
0003B849 <internal_commands.ab3@38> INCLUDE "internal_commands.ab3"
0003B84A <internal_commands.ab3@39> INCLUDE "internal_commands.ab3"
0003B84E <internal_commands.ab3@42> INCLUDE "internal_commands.ab3"
0003B850 <internal_commands.ab3@43> INCLUDE "internal_commands.ab3"
0003B855 <internal_commands.ab3@44> INCLUDE "internal_commands.ab3"
0003B865 <internal_commands.ab3@45> INCLUDE "internal_commands.ab3"
0003B866 <internal_commands.ab3@46> INCLUDE "internal_commands.ab3"
0003B86A <internal_commands.ab3@49> INCLUDE "internal_commands.ab3"
0003B86C <internal_commands.ab3@50> INCLUDE "internal_commands.ab3"
0003B872 <internal_commands.ab3@51> INCLUDE "internal_commands.ab3"
0003B882 <internal_commands.ab3@52> INCLUDE "internal_commands.ab3"
0003B886 <internal_commands.ab3@56> INCLUDE "internal_commands.ab3"
0003B888 <internal_commands.ab3@57> INCLUDE "internal_commands.ab3"
0003B88F <internal_commands.ab3@58> INCLUDE "internal_commands.ab3"
0003B890 <internal_commands.ab3@59> INCLUDE "internal_commands.ab3"
0003B894 <internal_commands.ab3@63> INCLUDE "internal_commands.ab3"
0003B896 <internal_commands.ab3@64> INCLUDE "internal_commands.ab3"
0003B8A0 <internal_commands.ab3@65> INCLUDE "internal_commands.ab3"
0003B8D3 <internal_commands.ab3@66> INCLUDE "internal_commands.ab3"
0003B8D4 <internal_commands.ab3@67> INCLUDE "internal_commands.ab3"
0003B8D8 <internal_commands.ab3@70> INCLUDE "internal_commands.ab3"
0003B8DA <internal_commands.ab3@71> INCLUDE "internal_commands.ab3"
0003B8E3 <internal_commands.ab3@72> INCLUDE "internal_commands.ab3"
0003B91E <internal_commands.ab3@73> INCLUDE "internal_commands.ab3"
0003B922 <internal_commands.ab3@77> INCLUDE "internal_commands.ab3"
0003B924 <internal_commands.ab3@78> INCLUDE "internal_commands.ab3"
0003B92E <internal_commands.ab3@79> INCLUDE "internal_commands.ab3"
0003B92F <internal_commands.ab3@80> INCLUDE "internal_commands.ab3"
0003B930 <internal_commands.ab3@81> INCLUDE "internal_commands.ab3"
0003B934 <internal_commands.ab3@84> INCLUDE "internal_commands.ab3"
0003B936 <internal_commands.ab3@85> INCLUDE "internal_commands.ab3"
0003B939 <internal_commands.ab3@86> INCLUDE "internal_commands.ab3"
0003B950 <internal_commands.ab3@87> INCLUDE "internal_commands.ab3"
0003B954 <internal_commands.ab3@91> INCLUDE "internal_commands.ab3"
0003B956 <internal_commands.ab3@92> INCLUDE "internal_commands.ab3"
0003B95C <internal_commands.ab3@93> INCLUDE "internal_commands.ab3"
0003B969 <internal_commands.ab3@94> INCLUDE "internal_commands.ab3"
0003B96A <internal_commands.ab3@95> INCLUDE "internal_commands.ab3"
0003B96E <internal_commands.ab3@98> INCLUDE "internal_commands.ab3"
0003B970 <internal_commands.ab3@99> INCLUDE "internal_commands.ab3"
0003B976 <internal_commands.ab3@100> INCLUDE "internal_commands.ab3"
0003B982 <internal_commands.ab3@101> INCLUDE "internal_commands.ab3"
0003B986 <internal_commands.ab3@105> INCLUDE "internal_commands.ab3"
0003B988 <internal_commands.ab3@106> INCLUDE "internal_commands.ab3"
0003B98F <internal_commands.ab3@107> INCLUDE "internal_commands.ab3"
0003B99C <internal_commands.ab3@108> INCLUDE "internal_commands.ab3"
0003B9A0 <internal_commands.ab3@112> INCLUDE "internal_commands.ab3"
0003B9A2 <internal_commands.ab3@113> INCLUDE "internal_commands.ab3"
0003B9A7 <internal_commands.ab3@114> INCLUDE "internal_commands.ab3"
0003B9B4 <internal_commands.ab3@115> INCLUDE "internal_commands.ab3"
0003B9B8 <internal_commands.ab3@119> INCLUDE "internal_commands.ab3"
0003B9BA <internal_commands.ab3@120> INCLUDE "internal_commands.ab3"
0003B9C2 <internal_commands.ab3@121> INCLUDE "internal_commands.ab3"
0003B9C3 <internal_commands.ab3@122> INCLUDE "internal_commands.ab3"
0003B9C4 <internal_commands.ab3@123> INCLUDE "internal_commands.ab3"
0003B9C8 <internal_commands.ab3@126> INCLUDE "internal_commands.ab3"
0003B9CA <internal_commands.ab3@127> INCLUDE "internal_commands.ab3"
0003B9D2 <internal_commands.ab3@128> INCLUDE "internal_commands.ab3"
0003B9D3 <internal_commands.ab3@129> INCLUDE "internal_commands.ab3"
0003B9D4 <internal_commands.ab3@130> INCLUDE "internal_commands.ab3"
0003B9D8 <internal_commands.ab3@133> INCLUDE "internal_commands.ab3"
0003B9DA <internal_commands.ab3@134> INCLUDE "internal_commands.ab3"
0003B9E3 <internal_commands.ab3@135> INCLUDE "internal_commands.ab3"
0003B9EE <internal_commands.ab3@136> INCLUDE "internal_commands.ab3"
0003B9F2 <internal_commands.ab3@140> INCLUDE "internal_commands.ab3"
0003B9F4 <internal_commands.ab3@141> INCLUDE "internal_commands.ab3"
0003B9FC <internal_commands.ab3@142> INCLUDE "internal_commands.ab3"
0003BA07 <internal_commands.ab3@143> INCLUDE "internal_commands.ab3"
0003BA08 <internal_commands.ab3@144> INCLUDE "internal_commands.ab3"
0003BA0C <internal_commands.ab3@147> INCLUDE "internal_commands.ab3"
0003BA0E <internal_commands.ab3@148> INCLUDE "internal_commands.ab3"
0003BA15 <internal_commands.ab3@149> INCLUDE "internal_commands.ab3"
0003BA77 <internal_commands.ab3@150> INCLUDE "internal_commands.ab3"
0003BA78 <internal_commands.ab3@151> INCLUDE "internal_commands.ab3"
0003BA7C <internal_commands.ab3@154> INCLUDE "internal_commands.ab3"
0003BA7E <internal_commands.ab3@155> INCLUDE "internal_commands.ab3"
0003BA85 <internal_commands.ab3@156> INCLUDE "internal_commands.ab3"
0003BA94 <internal_commands.ab3@157> INCLUDE "internal_commands.ab3"
0003BA98 <internal_commands.ab3@161> INCLUDE "internal_commands.ab3"
0003BA9A <internal_commands.ab3@162> INCLUDE "internal_commands.ab3"
0003BA9E <internal_commands.ab3@163> INCLUDE "internal_commands.ab3"
0003BAD4 <internal_commands.ab3@164> INCLUDE "internal_commands.ab3"
0003BAD8 <internal_commands.ab3@168> INCLUDE "internal_commands.ab3"
0003BADA <internal_commands.ab3@169> INCLUDE "internal_commands.ab3"
0003BADF <internal_commands.ab3@170> INCLUDE "internal_commands.ab3"
0003BAEE <internal_commands.ab3@171> INCLUDE "internal_commands.ab3"
0003BAF2 <internal_commands.ab3@175> INCLUDE "internal_commands.ab3"
0003BAF4 <internal_commands.ab3@176> INCLUDE "internal_commands.ab3"
0003BAF7 <internal_commands.ab3@177> INCLUDE "internal_commands.ab3"
0003BB18 <internal_commands.ab3@178> INCLUDE "internal_commands.ab3"
0003BB1C <internal_commands.ab3@182> INCLUDE "internal_commands.ab3"
0003BB1E <internal_commands.ab3@183> INCLUDE "internal_commands.ab3"
0003BB23 <internal_commands.ab3@184> INCLUDE "internal_commands.ab3"
0003BB2F <internal_commands.ab3@185> INCLUDE "internal_commands.ab3"
0003BB30 <internal_commands.ab3@186> INCLUDE "internal_commands.ab3"
0003BB34 <internal_commands.ab3@189> INCLUDE "internal_commands.ab3"
0003BB36 <internal_commands.ab3@190> INCLUDE "internal_commands.ab3"
0003BB3B <internal_commands.ab3@191> INCLUDE "internal_commands.ab3"
0003BB52 <internal_commands.ab3@192> INCLUDE "internal_commands.ab3"
0003BB56 <internal_commands.ab3@196> INCLUDE "internal_commands.ab3"
0003BB58 <internal_commands.ab3@197> INCLUDE "internal_commands.ab3"
0003BB5D <internal_commands.ab3@198> INCLUDE "internal_commands.ab3"
0003BB6C <internal_commands.ab3@199> INCLUDE "internal_commands.ab3"
0003BB70 <internal_commands.ab3@203> INCLUDE "internal_commands.ab3"
0003BB72 <internal_commands.ab3@204> INCLUDE "internal_commands.ab3"
0003BB77 <internal_commands.ab3@205> INCLUDE "internal_commands.ab3"
0003BB96 <internal_commands.ab3@206> INCLUDE "internal_commands.ab3"
0003BB9A <internal_commands.ab3@210> INCLUDE "internal_commands.ab3"
0003BB9C <internal_commands.ab3@211> INCLUDE "internal_commands.ab3"
0003BBA1 <internal_commands.ab3@212> INCLUDE "internal_commands.ab3"
0003BBC0 <internal_commands.ab3@213> INCLUDE "internal_commands.ab3"
0003BBC4 <internal_commands.ab3@217> INCLUDE "internal_commands.ab3"
0003BBC6 <internal_commands.ab3@218> INCLUDE "internal_commands.ab3"
0003BBCC <internal_commands.ab3@219> INCLUDE "internal_commands.ab3"
0003BBCD <internal_commands.ab3@220> INCLUDE "internal_commands.ab3"
0003BBCE <internal_commands.ab3@221> INCLUDE "internal_commands.ab3"
0003BBD2 <internal_commands.ab3@224> INCLUDE "internal_commands.ab3"
0003BBD4 <internal_commands.ab3@225> INCLUDE "internal_commands.ab3"
0003BBD9 <internal_commands.ab3@226> INCLUDE "internal_commands.ab3"
0003BBDA <internal_commands.ab3@227> INCLUDE "internal_commands.ab3"
0003BBDE <internal_commands.ab3@231> INCLUDE "internal_commands.ab3"
0003BBE0 <internal_commands.ab3@232> INCLUDE "internal_commands.ab3"
0003BBE5 <internal_commands.ab3@233> INCLUDE "internal_commands.ab3"
0003BBF2 <internal_commands.ab3@234> INCLUDE "internal_commands.ab3"
0003BBF6 <internal_commands.ab3@238> INCLUDE "internal_commands.ab3"
0003BBF8 <internal_commands.ab3@239> INCLUDE "internal_commands.ab3"
0003BBFD <internal_commands.ab3@240> INCLUDE "internal_commands.ab3"
0003BC0C <internal_commands.ab3@241> INCLUDE "internal_commands.ab3"
0003BC10 <internal_commands.ab3@245> INCLUDE "internal_commands.ab3"
0003BC12 <internal_commands.ab3@246> INCLUDE "internal_commands.ab3"
0003BC17 <internal_commands.ab3@247> INCLUDE "internal_commands.ab3"
0003BC26 <internal_commands.ab3@248> INCLUDE "internal_commands.ab3"
0003BC2A <internal_commands.ab3@252> INCLUDE "internal_commands.ab3"
0003BC2C <internal_commands.ab3@253> INCLUDE "internal_commands.ab3"
0003BC32 <internal_commands.ab3@254> INCLUDE "internal_commands.ab3"
0003BC4F <internal_commands.ab3@255> INCLUDE "internal_commands.ab3"
0003BC50 <internal_commands.ab3@256> INCLUDE "internal_commands.ab3"
0003BC54 <internal_commands.ab3@259> INCLUDE "internal_commands.ab3"
0003BC56 <internal_commands.ab3@260> INCLUDE "internal_commands.ab3"
0003BC5C <internal_commands.ab3@261> INCLUDE "internal_commands.ab3"
0003BC79 <internal_commands.ab3@262> INCLUDE "internal_commands.ab3"
0003BC7A <internal_commands.ab3@263> INCLUDE "internal_commands.ab3"
0003BC7E <internal_commands.ab3@266> INCLUDE "internal_commands.ab3"
0003BC80 <internal_commands.ab3@267> INCLUDE "internal_commands.ab3"
0003BC83 <internal_commands.ab3@268> INCLUDE "internal_commands.ab3"
0003BC9A <internal_commands.ab3@269> INCLUDE "internal_commands.ab3"
0003BC9E <internal_commands.ab3@273> INCLUDE "internal_commands.ab3"
0003BCA0 <internal_commands.ab3@274> INCLUDE "internal_commands.ab3"
0003BCA3 <internal_commands.ab3@275> INCLUDE "internal_commands.ab3"
0003BCB2 <internal_commands.ab3@276> INCLUDE "internal_commands.ab3"
0003BCB6 <internal_commands.ab3@280> INCLUDE "internal_commands.ab3"
0003BCB8 <internal_commands.ab3@281> INCLUDE "internal_commands.ab3"
0003BCBD <internal_commands.ab3@282> INCLUDE "internal_commands.ab3"
0003BCBE <internal_commands.ab3@283> INCLUDE "internal_commands.ab3"
0003BCC2 <internal_commands.ab3@287> INCLUDE "internal_commands.ab3"
0003BCC4 <internal_commands.ab3@288> INCLUDE "internal_commands.ab3"
0003BCC8 <internal_commands.ab3@289> INCLUDE "internal_commands.ab3"
0003BCDD <internal_commands.ab3@290> INCLUDE "internal_commands.ab3"
0003BCDE <internal_commands.ab3@291> INCLUDE "internal_commands.ab3"
0003BCE2 <internal_commands.ab3@294> INCLUDE "internal_commands.ab3"
0003BCE4 <internal_commands.ab3@295> INCLUDE "internal_commands.ab3"
0003BCEB <internal_commands.ab3@296> INCLUDE "internal_commands.ab3"
0003BD04 <internal_commands.ab3@297> INCLUDE "internal_commands.ab3"
0003BD08 <internal_commands.ab3@301> INCLUDE "internal_commands.ab3"
0003BD0A <internal_commands.ab3@302> INCLUDE "internal_commands.ab3"
0003BD11 <internal_commands.ab3@303> INCLUDE "internal_commands.ab3"
0003BD1C <internal_commands.ab3@304> INCLUDE "internal_commands.ab3"
0003BD20 <internal_commands.ab3@308> INCLUDE "internal_commands.ab3"
0003BD22 <internal_commands.ab3@309> INCLUDE "internal_commands.ab3"
0003BD27 <internal_commands.ab3@310> INCLUDE "internal_commands.ab3"
0003BD3E <internal_commands.ab3@311> INCLUDE "internal_commands.ab3"
0003BD42 <internal_commands.ab3@315> INCLUDE "internal_commands.ab3"
0003BD44 <internal_commands.ab3@316> INCLUDE "internal_commands.ab3"
0003BD48 <internal_commands.ab3@317> INCLUDE "internal_commands.ab3"
0003BD5F <internal_commands.ab3@318> INCLUDE "internal_commands.ab3"
0003BD60 <internal_commands.ab3@319> INCLUDE "internal_commands.ab3"
0003BD64 <internal_commands.ab3@322> INCLUDE "internal_commands.ab3"
0003BD66 <internal_commands.ab3@323> INCLUDE "internal_commands.ab3"
0003BD6B <internal_commands.ab3@324> INCLUDE "internal_commands.ab3"
0003BD6C <internal_commands.ab3@325> INCLUDE "internal_commands.ab3"
0003BD70 <internal_commands.ab3@329> INCLUDE "internal_commands.ab3"
0003BD72 <internal_commands.ab3@330> INCLUDE "internal_commands.ab3"
0003BD77 <internal_commands.ab3@331> INCLUDE "internal_commands.ab3"
0003BD7B <internal_commands.ab3@332> INCLUDE "internal_commands.ab3"
0003BD7C <internal_commands.ab3@333> INCLUDE "internal_commands.ab3"
0003BD80 <internal_commands.ab3@336> INCLUDE "internal_commands.ab3"
0003BD82 <internal_commands.ab3@337> INCLUDE "internal_commands.ab3"
0003BD89 <internal_commands.ab3@338> INCLUDE "internal_commands.ab3"
0003BDA1 <internal_commands.ab3@339> INCLUDE "internal_commands.ab3"
0003BDA2 <internal_commands.ab3@340> INCLUDE "internal_commands.ab3"
0003BDA6 <internal_commands.ab3@343> INCLUDE "internal_commands.ab3"
0003BDA8 <internal_commands.ab3@344> INCLUDE "internal_commands.ab3"
0003BDAF <internal_commands.ab3@345> INCLUDE "internal_commands.ab3"
0003BDB4 <internal_commands.ab3@346> INCLUDE "internal_commands.ab3"
0003BDB8 <internal_commands.ab3@350> INCLUDE "internal_commands.ab3"
0003BDBA <internal_commands.ab3@351> INCLUDE "internal_commands.ab3"
0003BDC1 <internal_commands.ab3@352> INCLUDE "internal_commands.ab3"
0003BDC6 <internal_commands.ab3@353> INCLUDE "internal_commands.ab3"
0003BDCA <internal_commands.ab3@357> INCLUDE "internal_commands.ab3"
0003BDCC <internal_commands.ab3@358> INCLUDE "internal_commands.ab3"
0003BDD3 <internal_commands.ab3@359> INCLUDE "internal_commands.ab3"
0003BDEE <internal_commands.ab3@360> INCLUDE "internal_commands.ab3"
0003BDF2 <internal_commands.ab3@364> INCLUDE "internal_commands.ab3"
0003BDF4 <internal_commands.ab3@365> INCLUDE "internal_commands.ab3"
0003BDFC <internal_commands.ab3@366> INCLUDE "internal_commands.ab3"
0003BE15 <internal_commands.ab3@367> INCLUDE "internal_commands.ab3"
0003BE16 <internal_commands.ab3@368> INCLUDE "internal_commands.ab3"
0003BE1A <internal_commands.ab3@371> INCLUDE "internal_commands.ab3"
0003BE1C <internal_commands.ab3@372> INCLUDE "internal_commands.ab3"
0003BE22 <internal_commands.ab3@373> INCLUDE "internal_commands.ab3"
0003BE23 <internal_commands.ab3@374> INCLUDE "internal_commands.ab3"
0003BE24 <internal_commands.ab3@375> INCLUDE "internal_commands.ab3"
0003BE28 <internal_commands.ab3@378> INCLUDE "internal_commands.ab3"
0003BE2A <internal_commands.ab3@379> INCLUDE "internal_commands.ab3"
0003BE30 <internal_commands.ab3@380> INCLUDE "internal_commands.ab3"
0003BE31 <internal_commands.ab3@381> INCLUDE "internal_commands.ab3"
0003BE32 <internal_commands.ab3@382> INCLUDE "internal_commands.ab3"
0003BE36 <internal_commands.ab3@385> INCLUDE "internal_commands.ab3"
0003BE38 <internal_commands.ab3@386> INCLUDE "internal_commands.ab3"
0003BE3F <internal_commands.ab3@387> INCLUDE "internal_commands.ab3"
0003BE40 <internal_commands.ab3@388> INCLUDE "internal_commands.ab3"
0003BE44 <internal_commands.ab3@392> INCLUDE "internal_commands.ab3"
0003BE46 <internal_commands.ab3@393> INCLUDE "internal_commands.ab3"
0003BE4C <internal_commands.ab3@394> INCLUDE "internal_commands.ab3"
0003BE55 <internal_commands.ab3@395> INCLUDE "internal_commands.ab3"
0003BE56 <internal_commands.ab3@396> INCLUDE "internal_commands.ab3"
0003BE5A <internal_commands.ab3@399> INCLUDE "internal_commands.ab3"
0003BE5C <internal_commands.ab3@400> INCLUDE "internal_commands.ab3"
0003BE64 <internal_commands.ab3@401> INCLUDE "internal_commands.ab3"
0003BE71 <internal_commands.ab3@402> INCLUDE "internal_commands.ab3"
0003BE72 <internal_commands.ab3@403> INCLUDE "internal_commands.ab3"
0003BE76 <internal_commands.ab3@406> INCLUDE "internal_commands.ab3"
0003BE78 <internal_commands.ab3@407> INCLUDE "internal_commands.ab3"
0003BE80 <internal_commands.ab3@408> INCLUDE "internal_commands.ab3"
0003BE8D <internal_commands.ab3@409> INCLUDE "internal_commands.ab3"
0003BE8E <internal_commands.ab3@410> INCLUDE "internal_commands.ab3"
0003BE92 <internal_commands.ab3@413> INCLUDE "internal_commands.ab3"
0003BE94 <internal_commands.ab3@414> INCLUDE "internal_commands.ab3"
0003BE9C <internal_commands.ab3@415> INCLUDE "internal_commands.ab3"
0003BEA9 <internal_commands.ab3@416> INCLUDE "internal_commands.ab3"
0003BEAA <internal_commands.ab3@417> INCLUDE "internal_commands.ab3"
0003BEAE <internal_commands.ab3@420> INCLUDE "internal_commands.ab3"
0003BEB0 <internal_commands.ab3@421> INCLUDE "internal_commands.ab3"
0003BEB5 <internal_commands.ab3@422> INCLUDE "internal_commands.ab3"
0003BEB6 <internal_commands.ab3@423> INCLUDE "internal_commands.ab3"
0003BEBA <internal_commands.ab3@437> INCLUDE "internal_commands.ab3"
0003BEBC <internal_commands.ab3@438> INCLUDE "internal_commands.ab3"
0003BEC1 <internal_commands.ab3@439> INCLUDE "internal_commands.ab3"
0003BEC2 <internal_commands.ab3@440> INCLUDE "internal_commands.ab3"
0003BEC4 <internal_commands.ab3@443> INCLUDE "internal_commands.ab3"
0003BEC8 <internal_commands.ab3@444> INCLUDE "internal_commands.ab3"
0003BECA <internal_commands.ab3@445> INCLUDE "internal_commands.ab3"
0003BECC <internal_commands.ab3@446> INCLUDE "internal_commands.ab3"
0003BED0 <internal_commands.ab3@447> INCLUDE "internal_commands.ab3"
0003BED2 <internal_commands.ab3@448> INCLUDE "internal_commands.ab3"
0003BED6 <internal_commands.ab3@452> INCLUDE "internal_commands.ab3"
0003BED8 <internal_commands.ab3@453> INCLUDE "internal_commands.ab3"
0003BEDC <internal_commands.ab3@454> INCLUDE "internal_commands.ab3"
0003BEDD <internal_commands.ab3@455> INCLUDE "internal_commands.ab3"
0003BEDE <internal_commands.ab3@456> INCLUDE "internal_commands.ab3"
0003BEE0 <internal_commands.ab3@458> INCLUDE "internal_commands.ab3"
0003BEE4 <internal_commands.ab3@459> INCLUDE "internal_commands.ab3"
0003BEE6 <internal_commands.ab3@460> INCLUDE "internal_commands.ab3"
0003BEE8 <internal_commands.ab3@461> INCLUDE "internal_commands.ab3"
0003BEEC <internal_commands.ab3@462> INCLUDE "internal_commands.ab3"
0003BEEE <internal_commands.ab3@463> INCLUDE "internal_commands.ab3"
0003BEF2 <internal_commands.ab3@467> INCLUDE "internal_commands.ab3"
0003BEF4 <internal_commands.ab3@468> INCLUDE "internal_commands.ab3"
0003BEF9 <internal_commands.ab3@469> INCLUDE "internal_commands.ab3"
0003BEFA <internal_commands.ab3@470> INCLUDE "internal_commands.ab3"
0003BEFC <internal_commands.ab3@473> INCLUDE "internal_commands.ab3"
0003BF00 <internal_commands.ab3@474> INCLUDE "internal_commands.ab3"
0003BF02 <internal_commands.ab3@475> INCLUDE "internal_commands.ab3"
0003BF04 <internal_commands.ab3@476> INCLUDE "internal_commands.ab3"
0003BF08 <internal_commands.ab3@477> INCLUDE "internal_commands.ab3"
0003BF0A <internal_commands.ab3@478> INCLUDE "internal_commands.ab3"
0003BF0E <internal_commands.ab3@482> INCLUDE "internal_commands.ab3"
0003BF10 <internal_commands.ab3@483> INCLUDE "internal_commands.ab3"
0003BF15 <internal_commands.ab3@484> INCLUDE "internal_commands.ab3"
0003BF16 <internal_commands.ab3@485> INCLUDE "internal_commands.ab3"
0003BF18 <internal_commands.ab3@488> INCLUDE "internal_commands.ab3"
0003BF1C <internal_commands.ab3@489> INCLUDE "internal_commands.ab3"
0003BF1E <internal_commands.ab3@490> INCLUDE "internal_commands.ab3"
0003BF20 <internal_commands.ab3@491> INCLUDE "internal_commands.ab3"
0003BF24 <internal_commands.ab3@492> INCLUDE "internal_commands.ab3"
0003BF26 <internal_commands.ab3@493> INCLUDE "internal_commands.ab3"
0003BF2A <internal_commands.ab3@497> INCLUDE "internal_commands.ab3"
0003BF2C <internal_commands.ab3@498> INCLUDE "internal_commands.ab3"
0003BF31 <internal_commands.ab3@499> INCLUDE "internal_commands.ab3"
0003BF32 <internal_commands.ab3@500> INCLUDE "internal_commands.ab3"
0003BF34 <internal_commands.ab3@503> INCLUDE "internal_commands.ab3"
0003BF38 <internal_commands.ab3@504> INCLUDE "internal_commands.ab3"
0003BF3A <internal_commands.ab3@505> INCLUDE "internal_commands.ab3"
0003BF3C <internal_commands.ab3@506> INCLUDE "internal_commands.ab3"
0003BF40 <internal_commands.ab3@507> INCLUDE "internal_commands.ab3"
0003BF42 <internal_commands.ab3@508> INCLUDE "internal_commands.ab3"
0003BF46 <internal_commands.ab3@512> INCLUDE "internal_commands.ab3"
0003BF48 <internal_commands.ab3@513> INCLUDE "internal_commands.ab3"
0003BF4D <internal_commands.ab3@514> INCLUDE "internal_commands.ab3"
0003BF4E <internal_commands.ab3@515> INCLUDE "internal_commands.ab3"
0003BF50 <internal_commands.ab3@518> INCLUDE "internal_commands.ab3"
0003BF54 <internal_commands.ab3@519> INCLUDE "internal_commands.ab3"
0003BF56 <internal_commands.ab3@520> INCLUDE "internal_commands.ab3"
0003BF58 <internal_commands.ab3@521> INCLUDE "internal_commands.ab3"
0003BF5C <internal_commands.ab3@522> INCLUDE "internal_commands.ab3"
0003BF5E <internal_commands.ab3@523> INCLUDE "internal_commands.ab3"
0003BF62 <internal_commands.ab3@527> INCLUDE "internal_commands.ab3"
0003BF64 <internal_commands.ab3@528> INCLUDE "internal_commands.ab3"
0003BF68 <internal_commands.ab3@529> INCLUDE "internal_commands.ab3"
0003BF69 <internal_commands.ab3@530> INCLUDE "internal_commands.ab3"
0003BF6A <internal_commands.ab3@531> INCLUDE "internal_commands.ab3"
0003BF6C <internal_commands.ab3@533> INCLUDE "internal_commands.ab3"
0003BF70 <internal_commands.ab3@534> INCLUDE "internal_commands.ab3"
0003BF72 <internal_commands.ab3@535> INCLUDE "internal_commands.ab3"
0003BF74 <internal_commands.ab3@536> INCLUDE "internal_commands.ab3"
0003BF78 <internal_commands.ab3@537> INCLUDE "internal_commands.ab3"
0003BF7A <internal_commands.ab3@538> INCLUDE "internal_commands.ab3"
0003BF7E <internal_commands.ab3@542> INCLUDE "internal_commands.ab3"
0003BF80 <internal_commands.ab3@543> INCLUDE "internal_commands.ab3"
0003BF85 <internal_commands.ab3@544> INCLUDE "internal_commands.ab3"
0003BF86 <internal_commands.ab3@545> INCLUDE "internal_commands.ab3"
0003BF88 <internal_commands.ab3@548> INCLUDE "internal_commands.ab3"
0003BF8C <internal_commands.ab3@549> INCLUDE "internal_commands.ab3"
0003BF8E <internal_commands.ab3@550> INCLUDE "internal_commands.ab3"
0003BF90 <internal_commands.ab3@551> INCLUDE "internal_commands.ab3"
0003BF94 <internal_commands.ab3@552> INCLUDE "internal_commands.ab3"
0003BF96 <internal_commands.ab3@553> INCLUDE "internal_commands.ab3"
0003BF9A <internal_commands.ab3@557> INCLUDE "internal_commands.ab3"
0003BF9C <internal_commands.ab3@558> INCLUDE "internal_commands.ab3"
0003BFA0 <internal_commands.ab3@559> INCLUDE "internal_commands.ab3"
0003BFA1 <internal_commands.ab3@560> INCLUDE "internal_commands.ab3"
0003BFA2 <internal_commands.ab3@561> INCLUDE "internal_commands.ab3"
0003BFA4 <internal_commands.ab3@563> INCLUDE "internal_commands.ab3"
0003BFA8 <internal_commands.ab3@564> INCLUDE "internal_commands.ab3"
0003BFAA <internal_commands.ab3@565> INCLUDE "internal_commands.ab3"
0003BFAC <internal_commands.ab3@566> INCLUDE "internal_commands.ab3"
0003BFB0 <internal_commands.ab3@567> INCLUDE "internal_commands.ab3"
0003BFB2 <internal_commands.ab3@568> INCLUDE "internal_commands.ab3"
0003BFB6 <internal_commands.ab3@572> INCLUDE "internal_commands.ab3"
0003BFB8 <internal_commands.ab3@573> INCLUDE "internal_commands.ab3"
0003BFBC <internal_commands.ab3@574> INCLUDE "internal_commands.ab3"
0003BFBD <internal_commands.ab3@575> INCLUDE "internal_commands.ab3"
0003BFBE <internal_commands.ab3@576> INCLUDE "internal_commands.ab3"
0003BFC0 <internal_commands.ab3@578> INCLUDE "internal_commands.ab3"
0003BFC4 <internal_commands.ab3@579> INCLUDE "internal_commands.ab3"
0003BFC6 <internal_commands.ab3@580> INCLUDE "internal_commands.ab3"
0003BFC8 <internal_commands.ab3@581> INCLUDE "internal_commands.ab3"
0003BFCC <internal_commands.ab3@582> INCLUDE "internal_commands.ab3"
0003BFCE <internal_commands.ab3@583> INCLUDE "internal_commands.ab3"
0003BFD2 <internal_commands.ab3@587> INCLUDE "internal_commands.ab3"
0003BFD4 <internal_commands.ab3@588> INCLUDE "internal_commands.ab3"
0003BFD8 <internal_commands.ab3@589> INCLUDE "internal_commands.ab3"
0003BFD9 <internal_commands.ab3@590> INCLUDE "internal_commands.ab3"
0003BFDA <internal_commands.ab3@591> INCLUDE "internal_commands.ab3"
0003BFDC <internal_commands.ab3@593> INCLUDE "internal_commands.ab3"
0003BFE0 <internal_commands.ab3@594> INCLUDE "internal_commands.ab3"
0003BFE2 <internal_commands.ab3@595> INCLUDE "internal_commands.ab3"
0003BFE4 <internal_commands.ab3@596> INCLUDE "internal_commands.ab3"
0003BFE8 <internal_commands.ab3@597> INCLUDE "internal_commands.ab3"
0003BFEA <internal_commands.ab3@598> INCLUDE "internal_commands.ab3"
0003BFEE <internal_commands.ab3@602> INCLUDE "internal_commands.ab3"
0003BFF0 <internal_commands.ab3@603> INCLUDE "internal_commands.ab3"
0003BFF4 <internal_commands.ab3@604> INCLUDE "internal_commands.ab3"
0003BFF5 <internal_commands.ab3@605> INCLUDE "internal_commands.ab3"
0003BFF6 <internal_commands.ab3@606> INCLUDE "internal_commands.ab3"
0003BFF8 <internal_commands.ab3@608> INCLUDE "internal_commands.ab3"
0003BFFC <internal_commands.ab3@609> INCLUDE "internal_commands.ab3"
0003BFFE <internal_commands.ab3@610> INCLUDE "internal_commands.ab3"
0003C000 <internal_commands.ab3@611> INCLUDE "internal_commands.ab3"
0003C004 <internal_commands.ab3@612> INCLUDE "internal_commands.ab3"
0003C006 <internal_commands.ab3@613> INCLUDE "internal_commands.ab3"
0003C00A <internal_commands.ab3@617> INCLUDE "internal_commands.ab3"
0003C00C <internal_commands.ab3@618> INCLUDE "internal_commands.ab3"
0003C010 <internal_commands.ab3@619> INCLUDE "internal_commands.ab3"
0003C011 <internal_commands.ab3@620> INCLUDE "internal_commands.ab3"
0003C012 <internal_commands.ab3@621> INCLUDE "internal_commands.ab3"
0003C014 <internal_commands.ab3@623> INCLUDE "internal_commands.ab3"
0003C018 <internal_commands.ab3@624> INCLUDE "internal_commands.ab3"
0003C01A <internal_commands.ab3@625> INCLUDE "internal_commands.ab3"
0003C01C <internal_commands.ab3@626> INCLUDE "internal_commands.ab3"
0003C020 <internal_commands.ab3@627> INCLUDE "internal_commands.ab3"
0003C022 <internal_commands.ab3@628> INCLUDE "internal_commands.ab3"
0003C026 <internal_commands.ab3@632> INCLUDE "internal_commands.ab3"
0003C028 <internal_commands.ab3@633> INCLUDE "internal_commands.ab3"
0003C02C <internal_commands.ab3@634> INCLUDE "internal_commands.ab3"
0003C02D <internal_commands.ab3@635> INCLUDE "internal_commands.ab3"
0003C02E <internal_commands.ab3@636> INCLUDE "internal_commands.ab3"
0003C030 <internal_commands.ab3@638> INCLUDE "internal_commands.ab3"
0003C034 <internal_commands.ab3@639> INCLUDE "internal_commands.ab3"
0003C036 <internal_commands.ab3@640> INCLUDE "internal_commands.ab3"
0003C038 <internal_commands.ab3@641> INCLUDE "internal_commands.ab3"
0003C03C <internal_commands.ab3@642> INCLUDE "internal_commands.ab3"
0003C03E <internal_commands.ab3@643> INCLUDE "internal_commands.ab3"
0003C042 <internal_commands.ab3@647> INCLUDE "internal_commands.ab3"
0003C044 <internal_commands.ab3@648> INCLUDE "internal_commands.ab3"
0003C048 <internal_commands.ab3@649> INCLUDE "internal_commands.ab3"
0003C049 <internal_commands.ab3@650> INCLUDE "internal_commands.ab3"
0003C04A <internal_commands.ab3@651> INCLUDE "internal_commands.ab3"
0003C04C <internal_commands.ab3@653> INCLUDE "internal_commands.ab3"
0003C050 <internal_commands.ab3@654> INCLUDE "internal_commands.ab3"
0003C052 <internal_commands.ab3@655> INCLUDE "internal_commands.ab3"
0003C054 <internal_commands.ab3@656> INCLUDE "internal_commands.ab3"
0003C058 <internal_commands.ab3@657> INCLUDE "internal_commands.ab3"
0003C05A <internal_commands.ab3@658> INCLUDE "internal_commands.ab3"
0003C05E <internal_commands.ab3@662> INCLUDE "internal_commands.ab3"
0003C060 <internal_commands.ab3@663> INCLUDE "internal_commands.ab3"
0003C064 <internal_commands.ab3@664> INCLUDE "internal_commands.ab3"
0003C065 <internal_commands.ab3@665> INCLUDE "internal_commands.ab3"
0003C066 <internal_commands.ab3@666> INCLUDE "internal_commands.ab3"
0003C068 <internal_commands.ab3@668> INCLUDE "internal_commands.ab3"
0003C06C <internal_commands.ab3@669> INCLUDE "internal_commands.ab3"
0003C06E <internal_commands.ab3@670> INCLUDE "internal_commands.ab3"
0003C070 <internal_commands.ab3@671> INCLUDE "internal_commands.ab3"
0003C074 <internal_commands.ab3@672> INCLUDE "internal_commands.ab3"
0003C076 <internal_commands.ab3@673> INCLUDE "internal_commands.ab3"
0003C07A <internal_commands.ab3@677> INCLUDE "internal_commands.ab3"
0003C07C <internal_commands.ab3@678> INCLUDE "internal_commands.ab3"
0003C080 <internal_commands.ab3@679> INCLUDE "internal_commands.ab3"
0003C081 <internal_commands.ab3@680> INCLUDE "internal_commands.ab3"
0003C082 <internal_commands.ab3@681> INCLUDE "internal_commands.ab3"
0003C084 <internal_commands.ab3@683> INCLUDE "internal_commands.ab3"
0003C088 <internal_commands.ab3@684> INCLUDE "internal_commands.ab3"
0003C08A <internal_commands.ab3@685> INCLUDE "internal_commands.ab3"
0003C08C <internal_commands.ab3@686> INCLUDE "internal_commands.ab3"
0003C090 <internal_commands.ab3@687> INCLUDE "internal_commands.ab3"
0003C092 <internal_commands.ab3@688> INCLUDE "internal_commands.ab3"
0003C096 <internal_commands.ab3@692> INCLUDE "internal_commands.ab3"
0003C098 <internal_commands.ab3@693> INCLUDE "internal_commands.ab3"
0003C09C <internal_commands.ab3@694> INCLUDE "internal_commands.ab3"
0003C09D <internal_commands.ab3@695> INCLUDE "internal_commands.ab3"
0003C09E <internal_commands.ab3@696> INCLUDE "internal_commands.ab3"
0003C0A0 <internal_commands.ab3@698> INCLUDE "internal_commands.ab3"
0003C0A4 <internal_commands.ab3@699> INCLUDE "internal_commands.ab3"
0003C0A6 <internal_commands.ab3@700> INCLUDE "internal_commands.ab3"
0003C0A8 <internal_commands.ab3@701> INCLUDE "internal_commands.ab3"
0003C0AC <internal_commands.ab3@702> INCLUDE "internal_commands.ab3"
0003C0AE <internal_commands.ab3@703> INCLUDE "internal_commands.ab3"
0003C0B2 <internal_commands.ab3@707> INCLUDE "internal_commands.ab3"
0003C0B4 <internal_commands.ab3@708> INCLUDE "internal_commands.ab3"
0003C0B8 <internal_commands.ab3@709> INCLUDE "internal_commands.ab3"
0003C0B9 <internal_commands.ab3@710> INCLUDE "internal_commands.ab3"
0003C0BA <internal_commands.ab3@711> INCLUDE "internal_commands.ab3"
0003C0BC <internal_commands.ab3@713> INCLUDE "internal_commands.ab3"
0003C0C0 <internal_commands.ab3@714> INCLUDE "internal_commands.ab3"
0003C0C2 <internal_commands.ab3@715> INCLUDE "internal_commands.ab3"
0003C0C4 <internal_commands.ab3@716> INCLUDE "internal_commands.ab3"
0003C0C8 <internal_commands.ab3@717> INCLUDE "internal_commands.ab3"
0003C0CA <internal_commands.ab3@718> INCLUDE "internal_commands.ab3"
0003C0CE <internal_commands.ab3@722> INCLUDE "internal_commands.ab3"
0003C0D0 <internal_commands.ab3@723> INCLUDE "internal_commands.ab3"
0003C0D4 <internal_commands.ab3@724> INCLUDE "internal_commands.ab3"
0003C0D5 <internal_commands.ab3@725> INCLUDE "internal_commands.ab3"
0003C0D6 <internal_commands.ab3@726> INCLUDE "internal_commands.ab3"
0003C0D8 <internal_commands.ab3@728> INCLUDE "internal_commands.ab3"
0003C0DC <internal_commands.ab3@729> INCLUDE "internal_commands.ab3"
0003C0DE <internal_commands.ab3@730> INCLUDE "internal_commands.ab3"
0003C0E0 <internal_commands.ab3@731> INCLUDE "internal_commands.ab3"
0003C0E4 <internal_commands.ab3@732> INCLUDE "internal_commands.ab3"
0003C0E6 <internal_commands.ab3@733> INCLUDE "internal_commands.ab3"
0003C0EA <internal_commands.ab3@737> INCLUDE "internal_commands.ab3"
0003C0EC <internal_commands.ab3@738> INCLUDE "internal_commands.ab3"
0003C0F0 <internal_commands.ab3@739> INCLUDE "internal_commands.ab3"
0003C0F1 <internal_commands.ab3@740> INCLUDE "internal_commands.ab3"
0003C0F2 <internal_commands.ab3@741> INCLUDE "internal_commands.ab3"
0003C0F4 <internal_commands.ab3@743> INCLUDE "internal_commands.ab3"
0003C0F8 <internal_commands.ab3@744> INCLUDE "internal_commands.ab3"
0003C0FA <internal_commands.ab3@745> INCLUDE "internal_commands.ab3"
0003C0FC <internal_commands.ab3@746> INCLUDE "internal_commands.ab3"
0003C100 <internal_commands.ab3@747> INCLUDE "internal_commands.ab3"
0003C102 <internal_commands.ab3@748> INCLUDE "internal_commands.ab3"
0003C106 <internal_commands.ab3@752> INCLUDE "internal_commands.ab3"
0003C108 <internal_commands.ab3@753> INCLUDE "internal_commands.ab3"
0003C10C <internal_commands.ab3@754> INCLUDE "internal_commands.ab3"
0003C10D <internal_commands.ab3@755> INCLUDE "internal_commands.ab3"
0003C10E <internal_commands.ab3@756> INCLUDE "internal_commands.ab3"
0003C110 <internal_commands.ab3@758> INCLUDE "internal_commands.ab3"
0003C114 <internal_commands.ab3@759> INCLUDE "internal_commands.ab3"
0003C116 <internal_commands.ab3@760> INCLUDE "internal_commands.ab3"
0003C118 <internal_commands.ab3@761> INCLUDE "internal_commands.ab3"
0003C11C <internal_commands.ab3@762> INCLUDE "internal_commands.ab3"
0003C11E <internal_commands.ab3@763> INCLUDE "internal_commands.ab3"
0003C122 <internal_commands.ab3@767> INCLUDE "internal_commands.ab3"
0003C124 <internal_commands.ab3@768> INCLUDE "internal_commands.ab3"
0003C128 <internal_commands.ab3@769> INCLUDE "internal_commands.ab3"
0003C129 <internal_commands.ab3@770> INCLUDE "internal_commands.ab3"
0003C12A <internal_commands.ab3@771> INCLUDE "internal_commands.ab3"
0003C12C <internal_commands.ab3@773> INCLUDE "internal_commands.ab3"
0003C130 <internal_commands.ab3@774> INCLUDE "internal_commands.ab3"
0003C132 <internal_commands.ab3@775> INCLUDE "internal_commands.ab3"
0003C134 <internal_commands.ab3@776> INCLUDE "internal_commands.ab3"
0003C138 <internal_commands.ab3@777> INCLUDE "internal_commands.ab3"
0003C13A <internal_commands.ab3@778> INCLUDE "internal_commands.ab3"
0003C13E <internal_commands.ab3@782> INCLUDE "internal_commands.ab3"
0003C140 <internal_commands.ab3@783> INCLUDE "internal_commands.ab3"
0003C144 <internal_commands.ab3@784> INCLUDE "internal_commands.ab3"
0003C145 <internal_commands.ab3@785> INCLUDE "internal_commands.ab3"
0003C146 <internal_commands.ab3@786> INCLUDE "internal_commands.ab3"
0003C148 <internal_commands.ab3@788> INCLUDE "internal_commands.ab3"
0003C14C <internal_commands.ab3@789> INCLUDE "internal_commands.ab3"
0003C14E <internal_commands.ab3@790> INCLUDE "internal_commands.ab3"
0003C150 <internal_commands.ab3@791> INCLUDE "internal_commands.ab3"
0003C154 <internal_commands.ab3@792> INCLUDE "internal_commands.ab3"
0003C156 <internal_commands.ab3@793> INCLUDE "internal_commands.ab3"
0003C15A <internal_commands.ab3@797> INCLUDE "internal_commands.ab3"
0003C15C <internal_commands.ab3@798> INCLUDE "internal_commands.ab3"
0003C161 <internal_commands.ab3@799> INCLUDE "internal_commands.ab3"
0003C162 <internal_commands.ab3@800> INCLUDE "internal_commands.ab3"
0003C164 <internal_commands.ab3@803> INCLUDE "internal_commands.ab3"
0003C168 <internal_commands.ab3@804> INCLUDE "internal_commands.ab3"
0003C16A <internal_commands.ab3@805> INCLUDE "internal_commands.ab3"
0003C16C <internal_commands.ab3@806> INCLUDE "internal_commands.ab3"
0003C170 <internal_commands.ab3@807> INCLUDE "internal_commands.ab3"
0003C172 <internal_commands.ab3@808> INCLUDE "internal_commands.ab3"
0003C176 <internal_commands.ab3@812> INCLUDE "internal_commands.ab3"
0003C178 <internal_commands.ab3@813> INCLUDE "internal_commands.ab3"
0003C17D <internal_commands.ab3@814> INCLUDE "internal_commands.ab3"
0003C17E <internal_commands.ab3@815> INCLUDE "internal_commands.ab3"
0003C180 <internal_commands.ab3@818> INCLUDE "internal_commands.ab3"
0003C184 <internal_commands.ab3@819> INCLUDE "internal_commands.ab3"
0003C186 <internal_commands.ab3@820> INCLUDE "internal_commands.ab3"
0003C188 <internal_commands.ab3@821> INCLUDE "internal_commands.ab3"
0003C18C <internal_commands.ab3@822> INCLUDE "internal_commands.ab3"
0003C18E <internal_commands.ab3@823> INCLUDE "internal_commands.ab3"
0003C192 <internal_commands.ab3@827> INCLUDE "internal_commands.ab3"
0003C194 <internal_commands.ab3@828> INCLUDE "internal_commands.ab3"
0003C199 <internal_commands.ab3@829> INCLUDE "internal_commands.ab3"
0003C19A <internal_commands.ab3@830> INCLUDE "internal_commands.ab3"
0003C19C <internal_commands.ab3@833> INCLUDE "internal_commands.ab3"
0003C1A0 <internal_commands.ab3@834> INCLUDE "internal_commands.ab3"
0003C1A2 <internal_commands.ab3@835> INCLUDE "internal_commands.ab3"
0003C1A4 <internal_commands.ab3@836> INCLUDE "internal_commands.ab3"
0003C1A8 <internal_commands.ab3@837> INCLUDE "internal_commands.ab3"
0003C1AA <internal_commands.ab3@838> INCLUDE "internal_commands.ab3"
0003C1AE <internal_commands.ab3@842> INCLUDE "internal_commands.ab3"
0003C1B0 <internal_commands.ab3@843> INCLUDE "internal_commands.ab3"
0003C1B5 <internal_commands.ab3@844> INCLUDE "internal_commands.ab3"
0003C1B6 <internal_commands.ab3@845> INCLUDE "internal_commands.ab3"
0003C1B8 <internal_commands.ab3@848> INCLUDE "internal_commands.ab3"
0003C1BC <internal_commands.ab3@849> INCLUDE "internal_commands.ab3"
0003C1BE <internal_commands.ab3@850> INCLUDE "internal_commands.ab3"
0003C1C0 <internal_commands.ab3@851> INCLUDE "internal_commands.ab3"
0003C1C4 <internal_commands.ab3@852> INCLUDE "internal_commands.ab3"
0003C1C6 <internal_commands.ab3@853> INCLUDE "internal_commands.ab3"
0003C1CA <internal_commands.ab3@857> INCLUDE "internal_commands.ab3"
0003C1CC <internal_commands.ab3@858> INCLUDE "internal_commands.ab3"
0003C1D0 <internal_commands.ab3@859> INCLUDE "internal_commands.ab3"
0003C1D1 <internal_commands.ab3@860> INCLUDE "internal_commands.ab3"
0003C1D2 <internal_commands.ab3@861> INCLUDE "internal_commands.ab3"
0003C1D4 <internal_commands.ab3@863> INCLUDE "internal_commands.ab3"
0003C1D8 <internal_commands.ab3@864> INCLUDE "internal_commands.ab3"
0003C1DA <internal_commands.ab3@865> INCLUDE "internal_commands.ab3"
0003C1DC <internal_commands.ab3@866> INCLUDE "internal_commands.ab3"
0003C1E0 <internal_commands.ab3@867> INCLUDE "internal_commands.ab3"
0003C1E2 <internal_commands.ab3@868> INCLUDE "internal_commands.ab3"
0003C1E6 <internal_commands.ab3@872> INCLUDE "internal_commands.ab3"
0003C1E8 <internal_commands.ab3@873> INCLUDE "internal_commands.ab3"
0003C1EC <internal_commands.ab3@874> INCLUDE "internal_commands.ab3"
0003C1ED <internal_commands.ab3@875> INCLUDE "internal_commands.ab3"
0003C1EE <internal_commands.ab3@876> INCLUDE "internal_commands.ab3"
0003C1F0 <internal_commands.ab3@878> INCLUDE "internal_commands.ab3"
0003C1F4 <internal_commands.ab3@879> INCLUDE "internal_commands.ab3"
0003C1F6 <internal_commands.ab3@880> INCLUDE "internal_commands.ab3"
0003C1F8 <internal_commands.ab3@881> INCLUDE "internal_commands.ab3"
0003C1FC <internal_commands.ab3@882> INCLUDE "internal_commands.ab3"
0003C1FE <internal_commands.ab3@883> INCLUDE "internal_commands.ab3"
0003C202 <internal_commands.ab3@887> INCLUDE "internal_commands.ab3"
0003C204 <internal_commands.ab3@888> INCLUDE "internal_commands.ab3"
0003C208 <internal_commands.ab3@889> INCLUDE "internal_commands.ab3"
0003C209 <internal_commands.ab3@890> INCLUDE "internal_commands.ab3"
0003C20A <internal_commands.ab3@891> INCLUDE "internal_commands.ab3"
0003C20C <internal_commands.ab3@893> INCLUDE "internal_commands.ab3"
0003C210 <internal_commands.ab3@894> INCLUDE "internal_commands.ab3"
0003C212 <internal_commands.ab3@895> INCLUDE "internal_commands.ab3"
0003C214 <internal_commands.ab3@896> INCLUDE "internal_commands.ab3"
0003C218 <internal_commands.ab3@897> INCLUDE "internal_commands.ab3"
0003C21A <internal_commands.ab3@898> INCLUDE "internal_commands.ab3"
0003C21E <internal_commands.ab3@902> INCLUDE "internal_commands.ab3"
0003C220 <internal_commands.ab3@903> INCLUDE "internal_commands.ab3"
0003C224 <internal_commands.ab3@904> INCLUDE "internal_commands.ab3"
0003C225 <internal_commands.ab3@905> INCLUDE "internal_commands.ab3"
0003C226 <internal_commands.ab3@906> INCLUDE "internal_commands.ab3"
0003C228 <internal_commands.ab3@908> INCLUDE "internal_commands.ab3"
0003C22C <internal_commands.ab3@909> INCLUDE "internal_commands.ab3"
0003C22E <internal_commands.ab3@910> INCLUDE "internal_commands.ab3"
0003C230 <internal_commands.ab3@911> INCLUDE "internal_commands.ab3"
0003C234 <internal_commands.ab3@912> INCLUDE "internal_commands.ab3"
0003C236 <internal_commands.ab3@913> INCLUDE "internal_commands.ab3"
0003C23A <internal_commands.ab3@917> INCLUDE "internal_commands.ab3"
0003C23C <internal_commands.ab3@918> INCLUDE "internal_commands.ab3"
0003C240 <internal_commands.ab3@919> INCLUDE "internal_commands.ab3"
0003C241 <internal_commands.ab3@920> INCLUDE "internal_commands.ab3"
0003C242 <internal_commands.ab3@921> INCLUDE "internal_commands.ab3"
0003C244 <internal_commands.ab3@923> INCLUDE "internal_commands.ab3"
0003C248 <internal_commands.ab3@924> INCLUDE "internal_commands.ab3"
0003C24A <internal_commands.ab3@925> INCLUDE "internal_commands.ab3"
0003C24C <internal_commands.ab3@926> INCLUDE "internal_commands.ab3"
0003C250 <internal_commands.ab3@927> INCLUDE "internal_commands.ab3"
0003C252 <internal_commands.ab3@928> INCLUDE "internal_commands.ab3"
0003C256 <internal_commands.ab3@932> INCLUDE "internal_commands.ab3"
0003C258 <internal_commands.ab3@933> INCLUDE "internal_commands.ab3"
0003C25D <internal_commands.ab3@934> INCLUDE "internal_commands.ab3"
0003C25E <internal_commands.ab3@935> INCLUDE "internal_commands.ab3"
0003C260 <internal_commands.ab3@938> INCLUDE "internal_commands.ab3"
0003C264 <internal_commands.ab3@939> INCLUDE "internal_commands.ab3"
0003C266 <internal_commands.ab3@940> INCLUDE "internal_commands.ab3"
0003C268 <internal_commands.ab3@941> INCLUDE "internal_commands.ab3"
0003C26C <internal_commands.ab3@942> INCLUDE "internal_commands.ab3"
0003C26E <internal_commands.ab3@943> INCLUDE "internal_commands.ab3"
0003C272 <internal_commands.ab3@947> INCLUDE "internal_commands.ab3"
0003C274 <internal_commands.ab3@948> INCLUDE "internal_commands.ab3"
0003C279 <internal_commands.ab3@949> INCLUDE "internal_commands.ab3"
0003C27A <internal_commands.ab3@950> INCLUDE "internal_commands.ab3"
0003C27C <internal_commands.ab3@953> INCLUDE "internal_commands.ab3"
0003C280 <internal_commands.ab3@954> INCLUDE "internal_commands.ab3"
0003C282 <internal_commands.ab3@955> INCLUDE "internal_commands.ab3"
0003C284 <internal_commands.ab3@956> INCLUDE "internal_commands.ab3"
0003C288 <internal_commands.ab3@957> INCLUDE "internal_commands.ab3"
0003C28A <internal_commands.ab3@958> INCLUDE "internal_commands.ab3"
0003C28E <internal_commands.ab3@962> INCLUDE "internal_commands.ab3"
0003C290 <internal_commands.ab3@963> INCLUDE "internal_commands.ab3"
0003C295 <internal_commands.ab3@964> INCLUDE "internal_commands.ab3"
0003C296 <internal_commands.ab3@965> INCLUDE "internal_commands.ab3"
0003C298 <internal_commands.ab3@968> INCLUDE "internal_commands.ab3"
0003C29C <internal_commands.ab3@969> INCLUDE "internal_commands.ab3"
0003C29E <internal_commands.ab3@970> INCLUDE "internal_commands.ab3"
0003C2A0 <internal_commands.ab3@971> INCLUDE "internal_commands.ab3"
0003C2A4 <internal_commands.ab3@972> INCLUDE "internal_commands.ab3"
0003C2A6 <internal_commands.ab3@973> INCLUDE "internal_commands.ab3"
0003C2AA <internal_commands.ab3@977> INCLUDE "internal_commands.ab3"
0003C2AC <internal_commands.ab3@978> INCLUDE "internal_commands.ab3"
0003C2B1 <internal_commands.ab3@979> INCLUDE "internal_commands.ab3"
0003C2B2 <internal_commands.ab3@980> INCLUDE "internal_commands.ab3"
0003C2B4 <internal_commands.ab3@983> INCLUDE "internal_commands.ab3"
0003C2B8 <internal_commands.ab3@984> INCLUDE "internal_commands.ab3"
0003C2BA <internal_commands.ab3@985> INCLUDE "internal_commands.ab3"
0003C2BC <internal_commands.ab3@986> INCLUDE "internal_commands.ab3"
0003C2C0 <internal_commands.ab3@987> INCLUDE "internal_commands.ab3"
0003C2C2 <internal_commands.ab3@988> INCLUDE "internal_commands.ab3"
0003C2C6 <internal_commands.ab3@992> INCLUDE "internal_commands.ab3"
0003C2C8 <internal_commands.ab3@993> INCLUDE "internal_commands.ab3"
0003C2CD <internal_commands.ab3@994> INCLUDE "internal_commands.ab3"
0003C2CE <internal_commands.ab3@995> INCLUDE "internal_commands.ab3"
0003C2D0 <internal_commands.ab3@998> INCLUDE "internal_commands.ab3"
0003C2D4 <internal_commands.ab3@999> INCLUDE "internal_commands.ab3"
0003C2D6 <internal_commands.ab3@1000> INCLUDE "internal_commands.ab3"
0003C2D8 <internal_commands.ab3@1001> INCLUDE "internal_commands.ab3"
0003C2DC <internal_commands.ab3@1002> INCLUDE "internal_commands.ab3"
0003C2DE <internal_commands.ab3@1003> INCLUDE "internal_commands.ab3"
0003C2E2 <internal_commands.ab3@1007> INCLUDE "internal_commands.ab3"
0003C2E4 <internal_commands.ab3@1008> INCLUDE "internal_commands.ab3"
0003C2E9 <internal_commands.ab3@1009> INCLUDE "internal_commands.ab3"
0003C2EA <internal_commands.ab3@1010> INCLUDE "internal_commands.ab3"
0003C2EC <internal_commands.ab3@1013> INCLUDE "internal_commands.ab3"
0003C2F0 <internal_commands.ab3@1014> INCLUDE "internal_commands.ab3"
0003C2F2 <internal_commands.ab3@1015> INCLUDE "internal_commands.ab3"
0003C2F4 <internal_commands.ab3@1016> INCLUDE "internal_commands.ab3"
0003C2F8 <internal_commands.ab3@1017> INCLUDE "internal_commands.ab3"
0003C2FA <internal_commands.ab3@1018> INCLUDE "internal_commands.ab3"
0003C2FE <internal_commands.ab3@1022> INCLUDE "internal_commands.ab3"
0003C300 <internal_commands.ab3@1023> INCLUDE "internal_commands.ab3"
0003C305 <internal_commands.ab3@1024> INCLUDE "internal_commands.ab3"
0003C306 <internal_commands.ab3@1025> INCLUDE "internal_commands.ab3"
0003C308 <internal_commands.ab3@1028> INCLUDE "internal_commands.ab3"
0003C30C <internal_commands.ab3@1029> INCLUDE "internal_commands.ab3"
0003C30E <internal_commands.ab3@1030> INCLUDE "internal_commands.ab3"
0003C310 <internal_commands.ab3@1031> INCLUDE "internal_commands.ab3"
0003C314 <internal_commands.ab3@1032> INCLUDE "internal_commands.ab3"
0003C316 <internal_commands.ab3@1033> INCLUDE "internal_commands.ab3"
0003C31A <internal_commands.ab3@1037> INCLUDE "internal_commands.ab3"
0003C31C <internal_commands.ab3@1038> INCLUDE "internal_commands.ab3"
0003C321 <internal_commands.ab3@1039> INCLUDE "internal_commands.ab3"
0003C322 <internal_commands.ab3@1040> INCLUDE "internal_commands.ab3"
0003C324 <internal_commands.ab3@1043> INCLUDE "internal_commands.ab3"
0003C328 <internal_commands.ab3@1044> INCLUDE "internal_commands.ab3"
0003C32A <internal_commands.ab3@1045> INCLUDE "internal_commands.ab3"
0003C32C <internal_commands.ab3@1046> INCLUDE "internal_commands.ab3"
0003C330 <internal_commands.ab3@1047> INCLUDE "internal_commands.ab3"
0003C332 <internal_commands.ab3@1048> INCLUDE "internal_commands.ab3"
0003C336 <internal_commands.ab3@1052> INCLUDE "internal_commands.ab3"
0003C338 <internal_commands.ab3@1053> INCLUDE "internal_commands.ab3"
0003C33D <internal_commands.ab3@1054> INCLUDE "internal_commands.ab3"
0003C33E <internal_commands.ab3@1055> INCLUDE "internal_commands.ab3"
0003C340 <internal_commands.ab3@1058> INCLUDE "internal_commands.ab3"
0003C344 <internal_commands.ab3@1059> INCLUDE "internal_commands.ab3"
0003C346 <internal_commands.ab3@1060> INCLUDE "internal_commands.ab3"
0003C348 <internal_commands.ab3@1061> INCLUDE "internal_commands.ab3"
0003C34C <internal_commands.ab3@1062> INCLUDE "internal_commands.ab3"
0003C34E <internal_commands.ab3@1063> INCLUDE "internal_commands.ab3"
0003C352 <internal_commands.ab3@1067> INCLUDE "internal_commands.ab3"
0003C354 <internal_commands.ab3@1068> INCLUDE "internal_commands.ab3"
0003C359 <internal_commands.ab3@1069> INCLUDE "internal_commands.ab3"
0003C35A <internal_commands.ab3@1070> INCLUDE "internal_commands.ab3"
0003C35C <internal_commands.ab3@1073> INCLUDE "internal_commands.ab3"
0003C360 <internal_commands.ab3@1074> INCLUDE "internal_commands.ab3"
0003C362 <internal_commands.ab3@1075> INCLUDE "internal_commands.ab3"
0003C364 <internal_commands.ab3@1076> INCLUDE "internal_commands.ab3"
0003C368 <internal_commands.ab3@1077> INCLUDE "internal_commands.ab3"
0003C36A <internal_commands.ab3@1078> INCLUDE "internal_commands.ab3"
0003C36E <internal_commands.ab3@1082> INCLUDE "internal_commands.ab3"
0003C370 <internal_commands.ab3@1083> INCLUDE "internal_commands.ab3"
0003C375 <internal_commands.ab3@1084> INCLUDE "internal_commands.ab3"
0003C376 <internal_commands.ab3@1085> INCLUDE "internal_commands.ab3"
0003C378 <internal_commands.ab3@1088> INCLUDE "internal_commands.ab3"
0003C37C <internal_commands.ab3@1089> INCLUDE "internal_commands.ab3"
0003C37E <internal_commands.ab3@1090> INCLUDE "internal_commands.ab3"
0003C380 <internal_commands.ab3@1091> INCLUDE "internal_commands.ab3"
0003C384 <internal_commands.ab3@1092> INCLUDE "internal_commands.ab3"
0003C386 <internal_commands.ab3@1093> INCLUDE "internal_commands.ab3"
0003C38A <internal_commands.ab3@1097> INCLUDE "internal_commands.ab3"
0003C38C <internal_commands.ab3@1098> INCLUDE "internal_commands.ab3"
0003C391 <internal_commands.ab3@1099> INCLUDE "internal_commands.ab3"
0003C392 <internal_commands.ab3@1100> INCLUDE "internal_commands.ab3"
0003C394 <internal_commands.ab3@1103> INCLUDE "internal_commands.ab3"
0003C398 <internal_commands.ab3@1104> INCLUDE "internal_commands.ab3"
0003C39A <internal_commands.ab3@1105> INCLUDE "internal_commands.ab3"
0003C39C <internal_commands.ab3@1106> INCLUDE "internal_commands.ab3"
0003C3A0 <internal_commands.ab3@1107> INCLUDE "internal_commands.ab3"
0003C3A2 <internal_commands.ab3@1108> INCLUDE "internal_commands.ab3"
0003C3A6 <internal_commands.ab3@1112> INCLUDE "internal_commands.ab3"
0003C3A8 <internal_commands.ab3@1113> INCLUDE "internal_commands.ab3"
0003C3AD <internal_commands.ab3@1114> INCLUDE "internal_commands.ab3"
0003C3AE <internal_commands.ab3@1115> INCLUDE "internal_commands.ab3"
0003C3B0 <internal_commands.ab3@1118> INCLUDE "internal_commands.ab3"
0003C3B4 <internal_commands.ab3@1119> INCLUDE "internal_commands.ab3"
0003C3B6 <internal_commands.ab3@1120> INCLUDE "internal_commands.ab3"
0003C3B8 <internal_commands.ab3@1121> INCLUDE "internal_commands.ab3"
0003C3BC <internal_commands.ab3@1122> INCLUDE "internal_commands.ab3"
0003C3BE <internal_commands.ab3@1123> INCLUDE "internal_commands.ab3"
0003C3C2 <internal_commands.ab3@1127> INCLUDE "internal_commands.ab3"
0003C3C4 <internal_commands.ab3@1128> INCLUDE "internal_commands.ab3"
0003C3C9 <internal_commands.ab3@1129> INCLUDE "internal_commands.ab3"
0003C3CA <internal_commands.ab3@1130> INCLUDE "internal_commands.ab3"
0003C3CC <internal_commands.ab3@1133> INCLUDE "internal_commands.ab3"
0003C3D0 <internal_commands.ab3@1134> INCLUDE "internal_commands.ab3"
0003C3D2 <internal_commands.ab3@1135> INCLUDE "internal_commands.ab3"
0003C3D4 <internal_commands.ab3@1136> INCLUDE "internal_commands.ab3"
0003C3D8 <internal_commands.ab3@1137> INCLUDE "internal_commands.ab3"
0003C3DA <internal_commands.ab3@1138> INCLUDE "internal_commands.ab3"
0003C3DE <internal_commands.ab3@1142> INCLUDE "internal_commands.ab3"
0003C3E0 <internal_commands.ab3@1143> INCLUDE "internal_commands.ab3"
0003C3E5 <internal_commands.ab3@1144> INCLUDE "internal_commands.ab3"
0003C3E6 <internal_commands.ab3@1145> INCLUDE "internal_commands.ab3"
0003C3E8 <internal_commands.ab3@1148> INCLUDE "internal_commands.ab3"
0003C3EC <internal_commands.ab3@1149> INCLUDE "internal_commands.ab3"
0003C3EE <internal_commands.ab3@1150> INCLUDE "internal_commands.ab3"
0003C3F0 <internal_commands.ab3@1151> INCLUDE "internal_commands.ab3"
0003C3F4 <internal_commands.ab3@1152> INCLUDE "internal_commands.ab3"
0003C3F6 <internal_commands.ab3@1153> INCLUDE "internal_commands.ab3"
0003C3FA <internal_commands.ab3@1157> INCLUDE "internal_commands.ab3"
0003C3FC <internal_commands.ab3@1158> INCLUDE "internal_commands.ab3"
0003C401 <internal_commands.ab3@1159> INCLUDE "internal_commands.ab3"
0003C402 <internal_commands.ab3@1160> INCLUDE "internal_commands.ab3"
0003C404 <internal_commands.ab3@1163> INCLUDE "internal_commands.ab3"
0003C408 <internal_commands.ab3@1164> INCLUDE "internal_commands.ab3"
0003C40A <internal_commands.ab3@1165> INCLUDE "internal_commands.ab3"
0003C40C <internal_commands.ab3@1166> INCLUDE "internal_commands.ab3"
0003C410 <internal_commands.ab3@1167> INCLUDE "internal_commands.ab3"
0003C412 <internal_commands.ab3@1168> INCLUDE "internal_commands.ab3"
0003C416 <internal_commands.ab3@1172> INCLUDE "internal_commands.ab3"
0003C418 <internal_commands.ab3@1173> INCLUDE "internal_commands.ab3"
0003C41D <internal_commands.ab3@1174> INCLUDE "internal_commands.ab3"
0003C41E <internal_commands.ab3@1175> INCLUDE "internal_commands.ab3"
0003C420 <internal_commands.ab3@1178> INCLUDE "internal_commands.ab3"
0003C424 <internal_commands.ab3@1179> INCLUDE "internal_commands.ab3"
0003C426 <internal_commands.ab3@1180> INCLUDE "internal_commands.ab3"
0003C428 <internal_commands.ab3@1181> INCLUDE "internal_commands.ab3"
0003C42C <internal_commands.ab3@1182> INCLUDE "internal_commands.ab3"
0003C42E <internal_commands.ab3@1183> INCLUDE "internal_commands.ab3"
0003C432 <internal_commands.ab3@1186> INCLUDE "internal_commands.ab3"
0003C434 <internal_commands.ab3@1187> INCLUDE "internal_commands.ab3"
0003C438 <internal_commands.ab3@1188> INCLUDE "internal_commands.ab3"
0003C439 <internal_commands.ab3@1189> INCLUDE "internal_commands.ab3"
0003C43A <internal_commands.ab3@1190> INCLUDE "internal_commands.ab3"
0003C43C <internal_commands.ab3@1192> INCLUDE "internal_commands.ab3"
0003C440 <internal_commands.ab3@1193> INCLUDE "internal_commands.ab3"
0003C442 <internal_commands.ab3@1194> INCLUDE "internal_commands.ab3"
0003C444 <internal_commands.ab3@1195> INCLUDE "internal_commands.ab3"
0003C448 <internal_commands.ab3@1196> INCLUDE "internal_commands.ab3"
0003C44A <internal_commands.ab3@1197> INCLUDE "internal_commands.ab3"
0003C44E <internal_commands.ab3@1201> INCLUDE "internal_commands.ab3"
0003C450 <internal_commands.ab3@1202> INCLUDE "internal_commands.ab3"
0003C455 <internal_commands.ab3@1203> INCLUDE "internal_commands.ab3"
0003C456 <internal_commands.ab3@1204> INCLUDE "internal_commands.ab3"
0003C458 <internal_commands.ab3@1207> INCLUDE "internal_commands.ab3"
0003C45C <internal_commands.ab3@1208> INCLUDE "internal_commands.ab3"
0003C45E <internal_commands.ab3@1209> INCLUDE "internal_commands.ab3"
0003C460 <internal_commands.ab3@1210> INCLUDE "internal_commands.ab3"
0003C464 <internal_commands.ab3@1211> INCLUDE "internal_commands.ab3"
0003C466 <internal_commands.ab3@1212> INCLUDE "internal_commands.ab3"
0003C46A <internal_commands.ab3@1216> INCLUDE "internal_commands.ab3"
0003C46C <internal_commands.ab3@1217> INCLUDE "internal_commands.ab3"
0003C470 <internal_commands.ab3@1218> INCLUDE "internal_commands.ab3"
0003C471 <internal_commands.ab3@1219> INCLUDE "internal_commands.ab3"
0003C472 <internal_commands.ab3@1220> INCLUDE "internal_commands.ab3"
0003C474 <internal_commands.ab3@1222> INCLUDE "internal_commands.ab3"
0003C478 <internal_commands.ab3@1223> INCLUDE "internal_commands.ab3"
0003C47A <internal_commands.ab3@1224> INCLUDE "internal_commands.ab3"
0003C47C <internal_commands.ab3@1225> INCLUDE "internal_commands.ab3"
0003C480 <internal_commands.ab3@1226> INCLUDE "internal_commands.ab3"
0003C482 <internal_commands.ab3@1227> INCLUDE "internal_commands.ab3"
0003C486 <internal_commands.ab3@1231> INCLUDE "internal_commands.ab3"
0003C488 <internal_commands.ab3@1232> INCLUDE "internal_commands.ab3"
0003C48D <internal_commands.ab3@1233> INCLUDE "internal_commands.ab3"
0003C48E <internal_commands.ab3@1234> INCLUDE "internal_commands.ab3"
0003C490 <internal_commands.ab3@1237> INCLUDE "internal_commands.ab3"
0003C494 <internal_commands.ab3@1238> INCLUDE "internal_commands.ab3"
0003C496 <internal_commands.ab3@1239> INCLUDE "internal_commands.ab3"
0003C498 <internal_commands.ab3@1240> INCLUDE "internal_commands.ab3"
0003C49C <internal_commands.ab3@1241> INCLUDE "internal_commands.ab3"
0003C49E <internal_commands.ab3@1242> INCLUDE "internal_commands.ab3"
0003C4A2 <internal_commands.ab3@1246> INCLUDE "internal_commands.ab3"
0003C4A4 <internal_commands.ab3@1247> INCLUDE "internal_commands.ab3"
0003C4A9 <internal_commands.ab3@1248> INCLUDE "internal_commands.ab3"
0003C4AA <internal_commands.ab3@1249> INCLUDE "internal_commands.ab3"
0003C4AC <internal_commands.ab3@1252> INCLUDE "internal_commands.ab3"
0003C4B0 <internal_commands.ab3@1253> INCLUDE "internal_commands.ab3"
0003C4B2 <internal_commands.ab3@1254> INCLUDE "internal_commands.ab3"
0003C4B4 <internal_commands.ab3@1255> INCLUDE "internal_commands.ab3"
0003C4B8 <internal_commands.ab3@1256> INCLUDE "internal_commands.ab3"
0003C4BA <internal_commands.ab3@1257> INCLUDE "internal_commands.ab3"
0003C4BE <internal_commands.ab3@1261> INCLUDE "internal_commands.ab3"
0003C4C0 <internal_commands.ab3@1262> INCLUDE "internal_commands.ab3"
0003C4C4 <internal_commands.ab3@1263> INCLUDE "internal_commands.ab3"
0003C4C5 <internal_commands.ab3@1264> INCLUDE "internal_commands.ab3"
0003C4C6 <internal_commands.ab3@1265> INCLUDE "internal_commands.ab3"
0003C4C8 <internal_commands.ab3@1267> INCLUDE "internal_commands.ab3"
0003C4CC <internal_commands.ab3@1268> INCLUDE "internal_commands.ab3"
0003C4CE <internal_commands.ab3@1269> INCLUDE "internal_commands.ab3"
0003C4D0 <internal_commands.ab3@1270> INCLUDE "internal_commands.ab3"
0003C4D4 <internal_commands.ab3@1271> INCLUDE "internal_commands.ab3"
0003C4D6 <internal_commands.ab3@1272> INCLUDE "internal_commands.ab3"
0003C4DA <internal_commands.ab3@1276> INCLUDE "internal_commands.ab3"
0003C4DC <internal_commands.ab3@1277> INCLUDE "internal_commands.ab3"
0003C4E1 <internal_commands.ab3@1278> INCLUDE "internal_commands.ab3"
0003C4E2 <internal_commands.ab3@1279> INCLUDE "internal_commands.ab3"
0003C4E4 <internal_commands.ab3@1282> INCLUDE "internal_commands.ab3"
0003C4E8 <internal_commands.ab3@1283> INCLUDE "internal_commands.ab3"
0003C4EA <internal_commands.ab3@1284> INCLUDE "internal_commands.ab3"
0003C4EC <internal_commands.ab3@1285> INCLUDE "internal_commands.ab3"
0003C4F0 <internal_commands.ab3@1286> INCLUDE "internal_commands.ab3"
0003C4F2 <internal_commands.ab3@1287> INCLUDE "internal_commands.ab3"
0003C4F6 <internal_commands.ab3@1291> INCLUDE "internal_commands.ab3"
0003C4F8 <internal_commands.ab3@1292> INCLUDE "internal_commands.ab3"
0003C4FC <internal_commands.ab3@1293> INCLUDE "internal_commands.ab3"
0003C4FD <internal_commands.ab3@1294> INCLUDE "internal_commands.ab3"
0003C4FE <internal_commands.ab3@1295> INCLUDE "internal_commands.ab3"
0003C500 <internal_commands.ab3@1297> INCLUDE "internal_commands.ab3"
0003C504 <internal_commands.ab3@1298> INCLUDE "internal_commands.ab3"
0003C506 <internal_commands.ab3@1299> INCLUDE "internal_commands.ab3"
0003C508 <internal_commands.ab3@1300> INCLUDE "internal_commands.ab3"
0003C50C <internal_commands.ab3@1301> INCLUDE "internal_commands.ab3"
0003C50E <internal_commands.ab3@1302> INCLUDE "internal_commands.ab3"
0003C512 <internal_commands.ab3@1306> INCLUDE "internal_commands.ab3"
0003C514 <internal_commands.ab3@1307> INCLUDE "internal_commands.ab3"
0003C518 <internal_commands.ab3@1308> INCLUDE "internal_commands.ab3"
0003C519 <internal_commands.ab3@1309> INCLUDE "internal_commands.ab3"
0003C51A <internal_commands.ab3@1310> INCLUDE "internal_commands.ab3"
0003C51C <internal_commands.ab3@1312> INCLUDE "internal_commands.ab3"
0003C520 <internal_commands.ab3@1313> INCLUDE "internal_commands.ab3"
0003C522 <internal_commands.ab3@1314> INCLUDE "internal_commands.ab3"
0003C524 <internal_commands.ab3@1315> INCLUDE "internal_commands.ab3"
0003C528 <internal_commands.ab3@1316> INCLUDE "internal_commands.ab3"
0003C52A <internal_commands.ab3@1317> INCLUDE "internal_commands.ab3"
0003C52E <internal_commands.ab3@1321> INCLUDE "internal_commands.ab3"
0003C530 <internal_commands.ab3@1322> INCLUDE "internal_commands.ab3"
0003C538 <internal_commands.ab3@1323> INCLUDE "internal_commands.ab3"
0003C539 <internal_commands.ab3@1324> INCLUDE "internal_commands.ab3"
0003C53A <internal_commands.ab3@1325> INCLUDE "internal_commands.ab3"
0003C53C <internal_commands.ab3@1327> INCLUDE "internal_commands.ab3"
0003C540 <internal_commands.ab3@1328> INCLUDE "internal_commands.ab3"
0003C542 <internal_commands.ab3@1329> INCLUDE "internal_commands.ab3"
0003C544 <internal_commands.ab3@1330> INCLUDE "internal_commands.ab3"
0003C548 <internal_commands.ab3@1331> INCLUDE "internal_commands.ab3"
0003C54A <internal_commands.ab3@1332> INCLUDE "internal_commands.ab3"
0003C54E <internal_commands.ab3@1336> INCLUDE "internal_commands.ab3"
0003C550 <internal_commands.ab3@1337> INCLUDE "internal_commands.ab3"
0003C554 <internal_commands.ab3@1338> INCLUDE "internal_commands.ab3"
0003C555 <internal_commands.ab3@1339> INCLUDE "internal_commands.ab3"
0003C556 <internal_commands.ab3@1340> INCLUDE "internal_commands.ab3"
0003C558 <internal_commands.ab3@1342> INCLUDE "internal_commands.ab3"
0003C55C <internal_commands.ab3@1343> INCLUDE "internal_commands.ab3"
0003C55E <internal_commands.ab3@1344> INCLUDE "internal_commands.ab3"
0003C560 <internal_commands.ab3@1345> INCLUDE "internal_commands.ab3"
0003C564 <internal_commands.ab3@1346> INCLUDE "internal_commands.ab3"
0003C566 <internal_commands.ab3@1347> INCLUDE "internal_commands.ab3"
0003C56A <internal_commands.ab3@1351> INCLUDE "internal_commands.ab3"
0003C56C <internal_commands.ab3@1352> INCLUDE "internal_commands.ab3"
0003C570 <internal_commands.ab3@1353> INCLUDE "internal_commands.ab3"
0003C571 <internal_commands.ab3@1354> INCLUDE "internal_commands.ab3"
0003C572 <internal_commands.ab3@1355> INCLUDE "internal_commands.ab3"
0003C574 <internal_commands.ab3@1357> INCLUDE "internal_commands.ab3"
0003C578 <internal_commands.ab3@1358> INCLUDE "internal_commands.ab3"
0003C57A <internal_commands.ab3@1359> INCLUDE "internal_commands.ab3"
0003C57C <internal_commands.ab3@1360> INCLUDE "internal_commands.ab3"
0003C580 <internal_commands.ab3@1361> INCLUDE "internal_commands.ab3"
0003C582 <internal_commands.ab3@1362> INCLUDE "internal_commands.ab3"
0003C586 <internal_commands.ab3@1366> INCLUDE "internal_commands.ab3"
0003C588 <internal_commands.ab3@1367> INCLUDE "internal_commands.ab3"
0003C58C <internal_commands.ab3@1368> INCLUDE "internal_commands.ab3"
0003C58D <internal_commands.ab3@1369> INCLUDE "internal_commands.ab3"
0003C58E <internal_commands.ab3@1370> INCLUDE "internal_commands.ab3"
0003C590 <internal_commands.ab3@1372> INCLUDE "internal_commands.ab3"
0003C594 <internal_commands.ab3@1373> INCLUDE "internal_commands.ab3"
0003C596 <internal_commands.ab3@1374> INCLUDE "internal_commands.ab3"
0003C598 <internal_commands.ab3@1375> INCLUDE "internal_commands.ab3"
0003C59C <internal_commands.ab3@1376> INCLUDE "internal_commands.ab3"
0003C59E <internal_commands.ab3@1377> INCLUDE "internal_commands.ab3"
0003C5A2 <internal_commands.ab3@1381> INCLUDE "internal_commands.ab3"
0003C5A4 <internal_commands.ab3@1382> INCLUDE "internal_commands.ab3"
0003C5A9 <internal_commands.ab3@1383> INCLUDE "internal_commands.ab3"
0003C5AA <internal_commands.ab3@1384> INCLUDE "internal_commands.ab3"
0003C5AC <internal_commands.ab3@1387> INCLUDE "internal_commands.ab3"
0003C5B0 <internal_commands.ab3@1388> INCLUDE "internal_commands.ab3"
0003C5B2 <internal_commands.ab3@1389> INCLUDE "internal_commands.ab3"
0003C5B4 <internal_commands.ab3@1390> INCLUDE "internal_commands.ab3"
0003C5B8 <internal_commands.ab3@1391> INCLUDE "internal_commands.ab3"
0003C5BA <internal_commands.ab3@1392> INCLUDE "internal_commands.ab3"
0003C5BE <internal_commands.ab3@1396> INCLUDE "internal_commands.ab3"
0003C5C0 <internal_commands.ab3@1397> INCLUDE "internal_commands.ab3"
0003C5C4 <internal_commands.ab3@1398> INCLUDE "internal_commands.ab3"
0003C5C5 <internal_commands.ab3@1399> INCLUDE "internal_commands.ab3"
0003C5C6 <internal_commands.ab3@1400> INCLUDE "internal_commands.ab3"
0003C5C8 <internal_commands.ab3@1402> INCLUDE "internal_commands.ab3"
0003C5CC <internal_commands.ab3@1403> INCLUDE "internal_commands.ab3"
0003C5CE <internal_commands.ab3@1404> INCLUDE "internal_commands.ab3"
0003C5D0 <internal_commands.ab3@1405> INCLUDE "internal_commands.ab3"
0003C5D4 <internal_commands.ab3@1406> INCLUDE "internal_commands.ab3"
0003C5D6 <internal_commands.ab3@1407> INCLUDE "internal_commands.ab3"
0003C5DA <internal_commands.ab3@1411> INCLUDE "internal_commands.ab3"
0003C5DC <internal_commands.ab3@1412> INCLUDE "internal_commands.ab3"
0003C5E0 <internal_commands.ab3@1413> INCLUDE "internal_commands.ab3"
0003C5E1 <internal_commands.ab3@1414> INCLUDE "internal_commands.ab3"
0003C5E2 <internal_commands.ab3@1415> INCLUDE "internal_commands.ab3"
0003C5E4 <internal_commands.ab3@1417> INCLUDE "internal_commands.ab3"
0003C5E8 <internal_commands.ab3@1418> INCLUDE "internal_commands.ab3"
0003C5EA <internal_commands.ab3@1419> INCLUDE "internal_commands.ab3"
0003C5EC <internal_commands.ab3@1420> INCLUDE "internal_commands.ab3"
0003C5F0 <internal_commands.ab3@1421> INCLUDE "internal_commands.ab3"
0003C5F2 <internal_commands.ab3@1422> INCLUDE "internal_commands.ab3"
0003C5F6 <internal_commands.ab3@1426> INCLUDE "internal_commands.ab3"
0003C5F8 <internal_commands.ab3@1427> INCLUDE "internal_commands.ab3"
0003C5FD <internal_commands.ab3@1428> INCLUDE "internal_commands.ab3"
0003C5FE <internal_commands.ab3@1429> INCLUDE "internal_commands.ab3"
0003C600 <internal_commands.ab3@1432> INCLUDE "internal_commands.ab3"
0003C604 <internal_commands.ab3@1433> INCLUDE "internal_commands.ab3"
0003C606 <internal_commands.ab3@1434> INCLUDE "internal_commands.ab3"
0003C608 <internal_commands.ab3@1435> INCLUDE "internal_commands.ab3"
0003C60C <internal_commands.ab3@1436> INCLUDE "internal_commands.ab3"
0003C60E <internal_commands.ab3@1437> INCLUDE "internal_commands.ab3"
0003C612 <internal_commands.ab3@1441> INCLUDE "internal_commands.ab3"
0003C614 <internal_commands.ab3@1442> INCLUDE "internal_commands.ab3"
0003C619 <internal_commands.ab3@1443> INCLUDE "internal_commands.ab3"
0003C61A <internal_commands.ab3@1444> INCLUDE "internal_commands.ab3"
0003C61C <internal_commands.ab3@1447> INCLUDE "internal_commands.ab3"
0003C620 <internal_commands.ab3@1448> INCLUDE "internal_commands.ab3"
0003C622 <internal_commands.ab3@1449> INCLUDE "internal_commands.ab3"
0003C624 <internal_commands.ab3@1450> INCLUDE "internal_commands.ab3"
0003C628 <internal_commands.ab3@1451> INCLUDE "internal_commands.ab3"
0003C62A <internal_commands.ab3@1452> INCLUDE "internal_commands.ab3"
0003C62E <internal_commands.ab3@1457> INCLUDE "internal_commands.ab3"
0003C630 <internal_commands.ab3@1458> INCLUDE "internal_commands.ab3"
0003C636 <internal_commands.ab3@1459> INCLUDE "internal_commands.ab3"
0003C637 <internal_commands.ab3@1460> INCLUDE "internal_commands.ab3"
0003C638 <internal_commands.ab3@1461> INCLUDE "internal_commands.ab3"
0003C63A <internal_commands.ab3@1463> INCLUDE "internal_commands.ab3"
0003C63E <internal_commands.ab3@1464> INCLUDE "internal_commands.ab3"
0003C640 <internal_commands.ab3@1465> INCLUDE "internal_commands.ab3"
0003C642 <internal_commands.ab3@1466> INCLUDE "internal_commands.ab3"
0003C646 <internal_commands.ab3@1467> INCLUDE "internal_commands.ab3"
0003C648 <internal_commands.ab3@1468> INCLUDE "internal_commands.ab3"
0003C64C <internal_commands.ab3@1472> INCLUDE "internal_commands.ab3"
0003C64E <internal_commands.ab3@1473> INCLUDE "internal_commands.ab3"
0003C654 <internal_commands.ab3@1474> INCLUDE "internal_commands.ab3"
0003C655 <internal_commands.ab3@1475> INCLUDE "internal_commands.ab3"
0003C656 <internal_commands.ab3@1476> INCLUDE "internal_commands.ab3"
0003C658 <internal_commands.ab3@1478> INCLUDE "internal_commands.ab3"
0003C65C <internal_commands.ab3@1479> INCLUDE "internal_commands.ab3"
0003C65E <internal_commands.ab3@1480> INCLUDE "internal_commands.ab3"
0003C660 <internal_commands.ab3@1481> INCLUDE "internal_commands.ab3"
0003C664 <internal_commands.ab3@1482> INCLUDE "internal_commands.ab3"
0003C666 <internal_commands.ab3@1483> INCLUDE "internal_commands.ab3"
0003C66A <internal_commands.ab3@1487> INCLUDE "internal_commands.ab3"
0003C66C <internal_commands.ab3@1488> INCLUDE "internal_commands.ab3"
0003C672 <internal_commands.ab3@1489> INCLUDE "internal_commands.ab3"
0003C673 <internal_commands.ab3@1490> INCLUDE "internal_commands.ab3"
0003C674 <internal_commands.ab3@1491> INCLUDE "internal_commands.ab3"
0003C676 <internal_commands.ab3@1493> INCLUDE "internal_commands.ab3"
0003C67A <internal_commands.ab3@1494> INCLUDE "internal_commands.ab3"
0003C67C <internal_commands.ab3@1495> INCLUDE "internal_commands.ab3"
0003C67E <internal_commands.ab3@1496> INCLUDE "internal_commands.ab3"
0003C682 <internal_commands.ab3@1497> INCLUDE "internal_commands.ab3"
0003C684 <internal_commands.ab3@1498> INCLUDE "internal_commands.ab3"
0003C688 <internal_commands.ab3@1502> INCLUDE "internal_commands.ab3"
0003C68A <internal_commands.ab3@1503> INCLUDE "internal_commands.ab3"
0003C68F <internal_commands.ab3@1504> INCLUDE "internal_commands.ab3"
0003C690 <internal_commands.ab3@1505> INCLUDE "internal_commands.ab3"
0003C692 <internal_commands.ab3@1508> INCLUDE "internal_commands.ab3"
0003C696 <internal_commands.ab3@1509> INCLUDE "internal_commands.ab3"
0003C698 <internal_commands.ab3@1510> INCLUDE "internal_commands.ab3"
0003C69A <internal_commands.ab3@1511> INCLUDE "internal_commands.ab3"
0003C69E <internal_commands.ab3@1512> INCLUDE "internal_commands.ab3"
0003C6A0 <internal_commands.ab3@1513> INCLUDE "internal_commands.ab3"
0003C6A4 <internal_commands.ab3@1517> INCLUDE "internal_commands.ab3"
0003C6A6 <internal_commands.ab3@1518> INCLUDE "internal_commands.ab3"
0003C6AB <internal_commands.ab3@1519> INCLUDE "internal_commands.ab3"
0003C6AC <internal_commands.ab3@1520> INCLUDE "internal_commands.ab3"
0003C6AE <internal_commands.ab3@1523> INCLUDE "internal_commands.ab3"
0003C6B2 <internal_commands.ab3@1524> INCLUDE "internal_commands.ab3"
0003C6B4 <internal_commands.ab3@1525> INCLUDE "internal_commands.ab3"
0003C6B6 <internal_commands.ab3@1526> INCLUDE "internal_commands.ab3"
0003C6BA <internal_commands.ab3@1527> INCLUDE "internal_commands.ab3"
0003C6BC <internal_commands.ab3@1528> INCLUDE "internal_commands.ab3"
0003C6C0 <internal_commands.ab3@1532> INCLUDE "internal_commands.ab3"
0003C6C2 <internal_commands.ab3@1533> INCLUDE "internal_commands.ab3"
0003C6C7 <internal_commands.ab3@1534> INCLUDE "internal_commands.ab3"
0003C6C8 <internal_commands.ab3@1535> INCLUDE "internal_commands.ab3"
0003C6CA <internal_commands.ab3@1538> INCLUDE "internal_commands.ab3"
0003C6CE <internal_commands.ab3@1539> INCLUDE "internal_commands.ab3"
0003C6D0 <internal_commands.ab3@1540> INCLUDE "internal_commands.ab3"
0003C6D2 <internal_commands.ab3@1541> INCLUDE "internal_commands.ab3"
0003C6D6 <internal_commands.ab3@1542> INCLUDE "internal_commands.ab3"
0003C6D8 <internal_commands.ab3@1543> INCLUDE "internal_commands.ab3"
0003C6DC <internal_commands.ab3@1547> INCLUDE "internal_commands.ab3"
0003C6DE <internal_commands.ab3@1548> INCLUDE "internal_commands.ab3"
0003C6E2 <internal_commands.ab3@1549> INCLUDE "internal_commands.ab3"
0003C6E3 <internal_commands.ab3@1550> INCLUDE "internal_commands.ab3"
0003C6E4 <internal_commands.ab3@1551> INCLUDE "internal_commands.ab3"
0003C6E6 <internal_commands.ab3@1553> INCLUDE "internal_commands.ab3"
0003C6EA <internal_commands.ab3@1554> INCLUDE "internal_commands.ab3"
0003C6EC <internal_commands.ab3@1555> INCLUDE "internal_commands.ab3"
0003C6EE <internal_commands.ab3@1556> INCLUDE "internal_commands.ab3"
0003C6F2 <internal_commands.ab3@1557> INCLUDE "internal_commands.ab3"
0003C6F4 <internal_commands.ab3@1558> INCLUDE "internal_commands.ab3"
0003C6F8 <internal_commands.ab3@1562> INCLUDE "internal_commands.ab3"
0003C6FA <internal_commands.ab3@1563> INCLUDE "internal_commands.ab3"
0003C6FF <internal_commands.ab3@1564> INCLUDE "internal_commands.ab3"
0003C700 <internal_commands.ab3@1565> INCLUDE "internal_commands.ab3"
0003C702 <internal_commands.ab3@1568> INCLUDE "internal_commands.ab3"
0003C706 <internal_commands.ab3@1569> INCLUDE "internal_commands.ab3"
0003C708 <internal_commands.ab3@1570> INCLUDE "internal_commands.ab3"
0003C70A <internal_commands.ab3@1571> INCLUDE "internal_commands.ab3"
0003C70E <internal_commands.ab3@1572> INCLUDE "internal_commands.ab3"
0003C710 <internal_commands.ab3@1573> INCLUDE "internal_commands.ab3"
0003C714 <internal_commands.ab3@1577> INCLUDE "internal_commands.ab3"
0003C716 <internal_commands.ab3@1578> INCLUDE "internal_commands.ab3"
0003C71A <internal_commands.ab3@1579> INCLUDE "internal_commands.ab3"
0003C71B <internal_commands.ab3@1580> INCLUDE "internal_commands.ab3"
0003C71C <internal_commands.ab3@1581> INCLUDE "internal_commands.ab3"
0003C71E <internal_commands.ab3@1583> INCLUDE "internal_commands.ab3"
0003C722 <internal_commands.ab3@1584> INCLUDE "internal_commands.ab3"
0003C724 <internal_commands.ab3@1585> INCLUDE "internal_commands.ab3"
0003C726 <internal_commands.ab3@1586> INCLUDE "internal_commands.ab3"
0003C72A <internal_commands.ab3@1587> INCLUDE "internal_commands.ab3"
0003C72C <internal_commands.ab3@1588> INCLUDE "internal_commands.ab3"
0003C730 <internal_commands.ab3@1592> INCLUDE "internal_commands.ab3"
0003C732 <internal_commands.ab3@1593> INCLUDE "internal_commands.ab3"
0003C736 <internal_commands.ab3@1594> INCLUDE "internal_commands.ab3"
0003C737 <internal_commands.ab3@1595> INCLUDE "internal_commands.ab3"
0003C738 <internal_commands.ab3@1596> INCLUDE "internal_commands.ab3"
0003C73A <internal_commands.ab3@1598> INCLUDE "internal_commands.ab3"
0003C73E <internal_commands.ab3@1599> INCLUDE "internal_commands.ab3"
0003C740 <internal_commands.ab3@1600> INCLUDE "internal_commands.ab3"
0003C742 <internal_commands.ab3@1601> INCLUDE "internal_commands.ab3"
0003C746 <internal_commands.ab3@1602> INCLUDE "internal_commands.ab3"
0003C748 <internal_commands.ab3@1603> INCLUDE "internal_commands.ab3"
0003C74C <internal_commands.ab3@1607> INCLUDE "internal_commands.ab3"
0003C74E <internal_commands.ab3@1608> INCLUDE "internal_commands.ab3"
0003C751 <internal_commands.ab3@1609> INCLUDE "internal_commands.ab3"
0003C752 <internal_commands.ab3@1610> INCLUDE "internal_commands.ab3"
0003C754 <internal_commands.ab3@1613> INCLUDE "internal_commands.ab3"
0003C758 <internal_commands.ab3@1614> INCLUDE "internal_commands.ab3"
0003C75A <internal_commands.ab3@1615> INCLUDE "internal_commands.ab3"
0003C75C <internal_commands.ab3@1616> INCLUDE "internal_commands.ab3"
0003C760 <internal_commands.ab3@1617> INCLUDE "internal_commands.ab3"
0003C762 <internal_commands.ab3@1618> INCLUDE "internal_commands.ab3"
0003C766 <internal_commands.ab3@1622> INCLUDE "internal_commands.ab3"
0003C768 <internal_commands.ab3@1623> INCLUDE "internal_commands.ab3"
0003C76C <internal_commands.ab3@1624> INCLUDE "internal_commands.ab3"
0003C76D <internal_commands.ab3@1625> INCLUDE "internal_commands.ab3"
0003C76E <internal_commands.ab3@1626> INCLUDE "internal_commands.ab3"
0003C770 <internal_commands.ab3@1628> INCLUDE "internal_commands.ab3"
0003C774 <internal_commands.ab3@1629> INCLUDE "internal_commands.ab3"
0003C776 <internal_commands.ab3@1630> INCLUDE "internal_commands.ab3"
0003C778 <internal_commands.ab3@1631> INCLUDE "internal_commands.ab3"
0003C77C <internal_commands.ab3@1632> INCLUDE "internal_commands.ab3"
0003C77E <internal_commands.ab3@1633> INCLUDE "internal_commands.ab3"
0003C782 <internal_commands.ab3@1637> INCLUDE "internal_commands.ab3"
0003C784 <internal_commands.ab3@1638> INCLUDE "internal_commands.ab3"
0003C788 <internal_commands.ab3@1639> INCLUDE "internal_commands.ab3"
0003C789 <internal_commands.ab3@1640> INCLUDE "internal_commands.ab3"
0003C78A <internal_commands.ab3@1641> INCLUDE "internal_commands.ab3"
0003C78C <internal_commands.ab3@1643> INCLUDE "internal_commands.ab3"
0003C790 <internal_commands.ab3@1644> INCLUDE "internal_commands.ab3"
0003C792 <internal_commands.ab3@1645> INCLUDE "internal_commands.ab3"
0003C794 <internal_commands.ab3@1646> INCLUDE "internal_commands.ab3"
0003C798 <internal_commands.ab3@1647> INCLUDE "internal_commands.ab3"
0003C79A <internal_commands.ab3@1648> INCLUDE "internal_commands.ab3"
0003C79E <internal_commands.ab3@1652> INCLUDE "internal_commands.ab3"
0003C7A0 <internal_commands.ab3@1653> INCLUDE "internal_commands.ab3"
0003C7A6 <internal_commands.ab3@1654> INCLUDE "internal_commands.ab3"
0003C7A7 <internal_commands.ab3@1655> INCLUDE "internal_commands.ab3"
0003C7A8 <internal_commands.ab3@1656> INCLUDE "internal_commands.ab3"
0003C7AA <internal_commands.ab3@1658> INCLUDE "internal_commands.ab3"
0003C7AE <internal_commands.ab3@1659> INCLUDE "internal_commands.ab3"
0003C7B0 <internal_commands.ab3@1660> INCLUDE "internal_commands.ab3"
0003C7B2 <internal_commands.ab3@1661> INCLUDE "internal_commands.ab3"
0003C7B6 <internal_commands.ab3@1662> INCLUDE "internal_commands.ab3"
0003C7B8 <internal_commands.ab3@1663> INCLUDE "internal_commands.ab3"
0003C7BC <internal_commands.ab3@1667> INCLUDE "internal_commands.ab3"
0003C7BE <internal_commands.ab3@1668> INCLUDE "internal_commands.ab3"
0003C7C2 <internal_commands.ab3@1669> INCLUDE "internal_commands.ab3"
0003C7C3 <internal_commands.ab3@1670> INCLUDE "internal_commands.ab3"
0003C7C4 <internal_commands.ab3@1671> INCLUDE "internal_commands.ab3"
0003C7C6 <internal_commands.ab3@1673> INCLUDE "internal_commands.ab3"
0003C7CA <internal_commands.ab3@1674> INCLUDE "internal_commands.ab3"
0003C7CC <internal_commands.ab3@1675> INCLUDE "internal_commands.ab3"
0003C7CE <internal_commands.ab3@1676> INCLUDE "internal_commands.ab3"
0003C7D2 <internal_commands.ab3@1677> INCLUDE "internal_commands.ab3"
0003C7D4 <internal_commands.ab3@1678> INCLUDE "internal_commands.ab3"
0003C7D8 <internal_commands.ab3@1682> INCLUDE "internal_commands.ab3"
0003C7DA <internal_commands.ab3@1683> INCLUDE "internal_commands.ab3"
0003C7DE <internal_commands.ab3@1684> INCLUDE "internal_commands.ab3"
0003C7DF <internal_commands.ab3@1685> INCLUDE "internal_commands.ab3"
0003C7E0 <internal_commands.ab3@1686> INCLUDE "internal_commands.ab3"
0003C7E2 <internal_commands.ab3@1688> INCLUDE "internal_commands.ab3"
0003C7E6 <internal_commands.ab3@1689> INCLUDE "internal_commands.ab3"
0003C7E8 <internal_commands.ab3@1690> INCLUDE "internal_commands.ab3"
0003C7EA <internal_commands.ab3@1691> INCLUDE "internal_commands.ab3"
0003C7EE <internal_commands.ab3@1692> INCLUDE "internal_commands.ab3"
0003C7F0 <internal_commands.ab3@1693> INCLUDE "internal_commands.ab3"
0003C7F4 <internal_commands.ab3@1697> INCLUDE "internal_commands.ab3"
0003C7F6 <internal_commands.ab3@1698> INCLUDE "internal_commands.ab3"
0003C7FB <internal_commands.ab3@1699> INCLUDE "internal_commands.ab3"
0003C7FC <internal_commands.ab3@1700> INCLUDE "internal_commands.ab3"
0003C7FE <internal_commands.ab3@1703> INCLUDE "internal_commands.ab3"
0003C802 <internal_commands.ab3@1704> INCLUDE "internal_commands.ab3"
0003C804 <internal_commands.ab3@1705> INCLUDE "internal_commands.ab3"
0003C806 <internal_commands.ab3@1706> INCLUDE "internal_commands.ab3"
0003C80A <internal_commands.ab3@1707> INCLUDE "internal_commands.ab3"
0003C80C <internal_commands.ab3@1708> INCLUDE "internal_commands.ab3"
0003C810 <internal_commands.ab3@1712> INCLUDE "internal_commands.ab3"
0003C812 <internal_commands.ab3@1713> INCLUDE "internal_commands.ab3"
0003C817 <internal_commands.ab3@1714> INCLUDE "internal_commands.ab3"
0003C818 <internal_commands.ab3@1715> INCLUDE "internal_commands.ab3"
0003C81A <internal_commands.ab3@1718> INCLUDE "internal_commands.ab3"
0003C81E <internal_commands.ab3@1719> INCLUDE "internal_commands.ab3"
0003C820 <internal_commands.ab3@1720> INCLUDE "internal_commands.ab3"
0003C822 <internal_commands.ab3@1721> INCLUDE "internal_commands.ab3"
0003C826 <internal_commands.ab3@1722> INCLUDE "internal_commands.ab3"
0003C828 <internal_commands.ab3@1723> INCLUDE "internal_commands.ab3"
0003C82C <internal_commands.ab3@1727> INCLUDE "internal_commands.ab3"
0003C82E <internal_commands.ab3@1728> INCLUDE "internal_commands.ab3"
0003C832 <internal_commands.ab3@1729> INCLUDE "internal_commands.ab3"
0003C833 <internal_commands.ab3@1730> INCLUDE "internal_commands.ab3"
0003C834 <internal_commands.ab3@1731> INCLUDE "internal_commands.ab3"
0003C836 <internal_commands.ab3@1733> INCLUDE "internal_commands.ab3"
0003C83A <internal_commands.ab3@1734> INCLUDE "internal_commands.ab3"
0003C83C <internal_commands.ab3@1735> INCLUDE "internal_commands.ab3"
0003C83E <internal_commands.ab3@1736> INCLUDE "internal_commands.ab3"
0003C842 <internal_commands.ab3@1737> INCLUDE "internal_commands.ab3"
0003C844 <internal_commands.ab3@1738> INCLUDE "internal_commands.ab3"
0003C848 <internal_commands.ab3@1742> INCLUDE "internal_commands.ab3"
0003C84A <internal_commands.ab3@1743> INCLUDE "internal_commands.ab3"
0003C84E <internal_commands.ab3@1744> INCLUDE "internal_commands.ab3"
0003C84F <internal_commands.ab3@1745> INCLUDE "internal_commands.ab3"
0003C850 <internal_commands.ab3@1746> INCLUDE "internal_commands.ab3"
0003C852 <internal_commands.ab3@1748> INCLUDE "internal_commands.ab3"
0003C856 <internal_commands.ab3@1749> INCLUDE "internal_commands.ab3"
0003C858 <internal_commands.ab3@1750> INCLUDE "internal_commands.ab3"
0003C85A <internal_commands.ab3@1751> INCLUDE "internal_commands.ab3"
0003C85E <internal_commands.ab3@1752> INCLUDE "internal_commands.ab3"
0003C860 <internal_commands.ab3@1753> INCLUDE "internal_commands.ab3"
0003C864 <internal_commands.ab3@1757> INCLUDE "internal_commands.ab3"
0003C866 <internal_commands.ab3@1758> INCLUDE "internal_commands.ab3"
0003C86A <internal_commands.ab3@1759> INCLUDE "internal_commands.ab3"
0003C86B <internal_commands.ab3@1760> INCLUDE "internal_commands.ab3"
0003C86C <internal_commands.ab3@1761> INCLUDE "internal_commands.ab3"
0003C86E <internal_commands.ab3@1763> INCLUDE "internal_commands.ab3"
0003C872 <internal_commands.ab3@1764> INCLUDE "internal_commands.ab3"
0003C874 <internal_commands.ab3@1765> INCLUDE "internal_commands.ab3"
0003C876 <internal_commands.ab3@1766> INCLUDE "internal_commands.ab3"
0003C87A <internal_commands.ab3@1767> INCLUDE "internal_commands.ab3"
0003C87C <internal_commands.ab3@1768> INCLUDE "internal_commands.ab3"
0003C880 <internal_commands.ab3@1772> INCLUDE "internal_commands.ab3"
0003C882 <internal_commands.ab3@1773> INCLUDE "internal_commands.ab3"
0003C887 <internal_commands.ab3@1774> INCLUDE "internal_commands.ab3"
0003C888 <internal_commands.ab3@1775> INCLUDE "internal_commands.ab3"
0003C88A <internal_commands.ab3@1778> INCLUDE "internal_commands.ab3"
0003C88E <internal_commands.ab3@1779> INCLUDE "internal_commands.ab3"
0003C890 <internal_commands.ab3@1780> INCLUDE "internal_commands.ab3"
0003C892 <internal_commands.ab3@1781> INCLUDE "internal_commands.ab3"
0003C896 <internal_commands.ab3@1782> INCLUDE "internal_commands.ab3"
0003C898 <internal_commands.ab3@1783> INCLUDE "internal_commands.ab3"
0003C89C <internal_commands.ab3@1787> INCLUDE "internal_commands.ab3"
0003C89E <internal_commands.ab3@1788> INCLUDE "internal_commands.ab3"
0003C8A2 <internal_commands.ab3@1789> INCLUDE "internal_commands.ab3"
0003C8A3 <internal_commands.ab3@1790> INCLUDE "internal_commands.ab3"
0003C8A4 <internal_commands.ab3@1791> INCLUDE "internal_commands.ab3"
0003C8A6 <internal_commands.ab3@1793> INCLUDE "internal_commands.ab3"
0003C8AA <internal_commands.ab3@1794> INCLUDE "internal_commands.ab3"
0003C8AC <internal_commands.ab3@1795> INCLUDE "internal_commands.ab3"
0003C8AE <internal_commands.ab3@1796> INCLUDE "internal_commands.ab3"
0003C8B2 <internal_commands.ab3@1797> INCLUDE "internal_commands.ab3"
0003C8B4 <internal_commands.ab3@1798> INCLUDE "internal_commands.ab3"
0003C8B8 <internal_commands.ab3@1802> INCLUDE "internal_commands.ab3"
0003C8BA <internal_commands.ab3@1803> INCLUDE "internal_commands.ab3"
0003C8BE <internal_commands.ab3@1804> INCLUDE "internal_commands.ab3"
0003C8BF <internal_commands.ab3@1805> INCLUDE "internal_commands.ab3"
0003C8C0 <internal_commands.ab3@1806> INCLUDE "internal_commands.ab3"
0003C8C2 <internal_commands.ab3@1808> INCLUDE "internal_commands.ab3"
0003C8C6 <internal_commands.ab3@1809> INCLUDE "internal_commands.ab3"
0003C8C8 <internal_commands.ab3@1810> INCLUDE "internal_commands.ab3"
0003C8CA <internal_commands.ab3@1811> INCLUDE "internal_commands.ab3"
0003C8CE <internal_commands.ab3@1812> INCLUDE "internal_commands.ab3"
0003C8D0 <internal_commands.ab3@1813> INCLUDE "internal_commands.ab3"
0003C8D4 <internal_commands.ab3@1817> INCLUDE "internal_commands.ab3"
0003C8D6 <internal_commands.ab3@1818> INCLUDE "internal_commands.ab3"
0003C8DA <internal_commands.ab3@1819> INCLUDE "internal_commands.ab3"
0003C8DB <internal_commands.ab3@1820> INCLUDE "internal_commands.ab3"
0003C8DC <internal_commands.ab3@1821> INCLUDE "internal_commands.ab3"
0003C8DE <internal_commands.ab3@1823> INCLUDE "internal_commands.ab3"
0003C8E2 <internal_commands.ab3@1824> INCLUDE "internal_commands.ab3"
0003C8E4 <internal_commands.ab3@1825> INCLUDE "internal_commands.ab3"
0003C8E6 <internal_commands.ab3@1826> INCLUDE "internal_commands.ab3"
0003C8EA <internal_commands.ab3@1827> INCLUDE "internal_commands.ab3"
0003C8EC <internal_commands.ab3@1828> INCLUDE "internal_commands.ab3"
0003C8F0 <internal_commands.ab3@1832> INCLUDE "internal_commands.ab3"
0003C8F2 <internal_commands.ab3@1833> INCLUDE "internal_commands.ab3"
0003C8F6 <internal_commands.ab3@1834> INCLUDE "internal_commands.ab3"
0003C8F7 <internal_commands.ab3@1835> INCLUDE "internal_commands.ab3"
0003C8F8 <internal_commands.ab3@1836> INCLUDE "internal_commands.ab3"
0003C8FA <internal_commands.ab3@1838> INCLUDE "internal_commands.ab3"
0003C8FE <internal_commands.ab3@1839> INCLUDE "internal_commands.ab3"
0003C900 <internal_commands.ab3@1840> INCLUDE "internal_commands.ab3"
0003C902 <internal_commands.ab3@1841> INCLUDE "internal_commands.ab3"
0003C906 <internal_commands.ab3@1842> INCLUDE "internal_commands.ab3"
0003C908 <internal_commands.ab3@1843> INCLUDE "internal_commands.ab3"
0003C90C <internal_commands.ab3@1847> INCLUDE "internal_commands.ab3"
0003C90E <internal_commands.ab3@1848> INCLUDE "internal_commands.ab3"
0003C912 <internal_commands.ab3@1849> INCLUDE "internal_commands.ab3"
0003C913 <internal_commands.ab3@1850> INCLUDE "internal_commands.ab3"
0003C914 <internal_commands.ab3@1851> INCLUDE "internal_commands.ab3"
0003C916 <internal_commands.ab3@1853> INCLUDE "internal_commands.ab3"
0003C91A <internal_commands.ab3@1854> INCLUDE "internal_commands.ab3"
0003C91C <internal_commands.ab3@1855> INCLUDE "internal_commands.ab3"
0003C91E <internal_commands.ab3@1856> INCLUDE "internal_commands.ab3"
0003C922 <internal_commands.ab3@1857> INCLUDE "internal_commands.ab3"
0003C924 <internal_commands.ab3@1858> INCLUDE "internal_commands.ab3"
0003C928 <internal_commands.ab3@1862> INCLUDE "internal_commands.ab3"
0003C92A <internal_commands.ab3@1863> INCLUDE "internal_commands.ab3"
0003C92E <internal_commands.ab3@1864> INCLUDE "internal_commands.ab3"
0003C92F <internal_commands.ab3@1865> INCLUDE "internal_commands.ab3"
0003C930 <internal_commands.ab3@1866> INCLUDE "internal_commands.ab3"
0003C932 <internal_commands.ab3@1868> INCLUDE "internal_commands.ab3"
0003C936 <internal_commands.ab3@1869> INCLUDE "internal_commands.ab3"
0003C938 <internal_commands.ab3@1870> INCLUDE "internal_commands.ab3"
0003C93A <internal_commands.ab3@1871> INCLUDE "internal_commands.ab3"
0003C93E <internal_commands.ab3@1872> INCLUDE "internal_commands.ab3"
0003C940 <internal_commands.ab3@1873> INCLUDE "internal_commands.ab3"
0003C944 <internal_commands.ab3@1877> INCLUDE "internal_commands.ab3"
0003C946 <internal_commands.ab3@1878> INCLUDE "internal_commands.ab3"
0003C94A <internal_commands.ab3@1879> INCLUDE "internal_commands.ab3"
0003C94B <internal_commands.ab3@1880> INCLUDE "internal_commands.ab3"
0003C94C <internal_commands.ab3@1881> INCLUDE "internal_commands.ab3"
0003C94E <internal_commands.ab3@1883> INCLUDE "internal_commands.ab3"
0003C952 <internal_commands.ab3@1884> INCLUDE "internal_commands.ab3"
0003C954 <internal_commands.ab3@1885> INCLUDE "internal_commands.ab3"
0003C956 <internal_commands.ab3@1886> INCLUDE "internal_commands.ab3"
0003C95A <internal_commands.ab3@1887> INCLUDE "internal_commands.ab3"
0003C95C <internal_commands.ab3@1888> INCLUDE "internal_commands.ab3"
0003C960 <internal_commands.ab3@1892> INCLUDE "internal_commands.ab3"
0003C962 <internal_commands.ab3@1893> INCLUDE "internal_commands.ab3"
0003C966 <internal_commands.ab3@1894> INCLUDE "internal_commands.ab3"
0003C967 <internal_commands.ab3@1895> INCLUDE "internal_commands.ab3"
0003C968 <internal_commands.ab3@1896> INCLUDE "internal_commands.ab3"
0003C96A <internal_commands.ab3@1898> INCLUDE "internal_commands.ab3"
0003C96E <internal_commands.ab3@1899> INCLUDE "internal_commands.ab3"
0003C970 <internal_commands.ab3@1900> INCLUDE "internal_commands.ab3"
0003C972 <internal_commands.ab3@1901> INCLUDE "internal_commands.ab3"
0003C976 <internal_commands.ab3@1902> INCLUDE "internal_commands.ab3"
0003C978 <internal_commands.ab3@1903> INCLUDE "internal_commands.ab3"
0003C97C <internal_commands.ab3@1907> INCLUDE "internal_commands.ab3"
0003C97E <internal_commands.ab3@1908> INCLUDE "internal_commands.ab3"
0003C982 <internal_commands.ab3@1909> INCLUDE "internal_commands.ab3"
0003C983 <internal_commands.ab3@1910> INCLUDE "internal_commands.ab3"
0003C984 <internal_commands.ab3@1911> INCLUDE "internal_commands.ab3"
0003C986 <internal_commands.ab3@1913> INCLUDE "internal_commands.ab3"
0003C98A <internal_commands.ab3@1914> INCLUDE "internal_commands.ab3"
0003C98C <internal_commands.ab3@1915> INCLUDE "internal_commands.ab3"
0003C98E <internal_commands.ab3@1916> INCLUDE "internal_commands.ab3"
0003C992 <internal_commands.ab3@1917> INCLUDE "internal_commands.ab3"
0003C994 <internal_commands.ab3@1918> INCLUDE "internal_commands.ab3"
0003C998 <internal_commands.ab3@1922> INCLUDE "internal_commands.ab3"
0003C99A <internal_commands.ab3@1923> INCLUDE "internal_commands.ab3"
0003C99E <internal_commands.ab3@1924> INCLUDE "internal_commands.ab3"
0003C99F <internal_commands.ab3@1925> INCLUDE "internal_commands.ab3"
0003C9A0 <internal_commands.ab3@1926> INCLUDE "internal_commands.ab3"
0003C9A2 <internal_commands.ab3@1928> INCLUDE "internal_commands.ab3"
0003C9A6 <internal_commands.ab3@1929> INCLUDE "internal_commands.ab3"
0003C9A8 <internal_commands.ab3@1930> INCLUDE "internal_commands.ab3"
0003C9AA <internal_commands.ab3@1931> INCLUDE "internal_commands.ab3"
0003C9AE <internal_commands.ab3@1932> INCLUDE "internal_commands.ab3"
0003C9B0 <internal_commands.ab3@1933> INCLUDE "internal_commands.ab3"
0003C9B4 <internal_commands.ab3@1937> INCLUDE "internal_commands.ab3"
0003C9B6 <internal_commands.ab3@1938> INCLUDE "internal_commands.ab3"
0003C9BA <internal_commands.ab3@1939> INCLUDE "internal_commands.ab3"
0003C9BB <internal_commands.ab3@1940> INCLUDE "internal_commands.ab3"
0003C9BC <internal_commands.ab3@1941> INCLUDE "internal_commands.ab3"
0003C9BE <internal_commands.ab3@1943> INCLUDE "internal_commands.ab3"
0003C9C2 <internal_commands.ab3@1944> INCLUDE "internal_commands.ab3"
0003C9C4 <internal_commands.ab3@1945> INCLUDE "internal_commands.ab3"
0003C9C6 <internal_commands.ab3@1946> INCLUDE "internal_commands.ab3"
0003C9CA <internal_commands.ab3@1947> INCLUDE "internal_commands.ab3"
0003C9CC <internal_commands.ab3@1948> INCLUDE "internal_commands.ab3"
0003C9D0 <internal_commands.ab3@1952> INCLUDE "internal_commands.ab3"
0003C9D2 <internal_commands.ab3@1953> INCLUDE "internal_commands.ab3"
0003C9D6 <internal_commands.ab3@1954> INCLUDE "internal_commands.ab3"
0003C9D7 <internal_commands.ab3@1955> INCLUDE "internal_commands.ab3"
0003C9D8 <internal_commands.ab3@1956> INCLUDE "internal_commands.ab3"
0003C9DA <internal_commands.ab3@1958> INCLUDE "internal_commands.ab3"
0003C9DE <internal_commands.ab3@1959> INCLUDE "internal_commands.ab3"
0003C9E0 <internal_commands.ab3@1960> INCLUDE "internal_commands.ab3"
0003C9E2 <internal_commands.ab3@1961> INCLUDE "internal_commands.ab3"
0003C9E6 <internal_commands.ab3@1962> INCLUDE "internal_commands.ab3"
0003C9E8 <internal_commands.ab3@1963> INCLUDE "internal_commands.ab3"
0003C9EC <internal_commands.ab3@1967> INCLUDE "internal_commands.ab3"
0003C9EE <internal_commands.ab3@1968> INCLUDE "internal_commands.ab3"
0003C9F2 <internal_commands.ab3@1969> INCLUDE "internal_commands.ab3"
0003C9F3 <internal_commands.ab3@1970> INCLUDE "internal_commands.ab3"
0003C9F4 <internal_commands.ab3@1971> INCLUDE "internal_commands.ab3"
0003C9F6 <internal_commands.ab3@1973> INCLUDE "internal_commands.ab3"
0003C9FA <internal_commands.ab3@1974> INCLUDE "internal_commands.ab3"
0003C9FC <internal_commands.ab3@1975> INCLUDE "internal_commands.ab3"
0003C9FE <internal_commands.ab3@1976> INCLUDE "internal_commands.ab3"
0003CA02 <internal_commands.ab3@1977> INCLUDE "internal_commands.ab3"
0003CA04 <internal_commands.ab3@1978> INCLUDE "internal_commands.ab3"
0003CA08 <internal_commands.ab3@1982> INCLUDE "internal_commands.ab3"
0003CA0A <internal_commands.ab3@1983> INCLUDE "internal_commands.ab3"
0003CA0E <internal_commands.ab3@1984> INCLUDE "internal_commands.ab3"
0003CA0F <internal_commands.ab3@1985> INCLUDE "internal_commands.ab3"
0003CA10 <internal_commands.ab3@1986> INCLUDE "internal_commands.ab3"
0003CA12 <internal_commands.ab3@1988> INCLUDE "internal_commands.ab3"
0003CA16 <internal_commands.ab3@1989> INCLUDE "internal_commands.ab3"
0003CA18 <internal_commands.ab3@1990> INCLUDE "internal_commands.ab3"
0003CA1A <internal_commands.ab3@1991> INCLUDE "internal_commands.ab3"
0003CA1E <internal_commands.ab3@1992> INCLUDE "internal_commands.ab3"
0003CA20 <internal_commands.ab3@1993> INCLUDE "internal_commands.ab3"
0003CA24 <internal_commands.ab3@1997> INCLUDE "internal_commands.ab3"
0003CA26 <internal_commands.ab3@1998> INCLUDE "internal_commands.ab3"
0003CA29 <internal_commands.ab3@1999> INCLUDE "internal_commands.ab3"
0003CA2A <internal_commands.ab3@2000> INCLUDE "internal_commands.ab3"
0003CA2C <internal_commands.ab3@2003> INCLUDE "internal_commands.ab3"
0003CA30 <internal_commands.ab3@2004> INCLUDE "internal_commands.ab3"
0003CA32 <internal_commands.ab3@2005> INCLUDE "internal_commands.ab3"
0003CA34 <internal_commands.ab3@2006> INCLUDE "internal_commands.ab3"
0003CA38 <internal_commands.ab3@2007> INCLUDE "internal_commands.ab3"
0003CA3A <internal_commands.ab3@2008> INCLUDE "internal_commands.ab3"
0003CA3E <internal_commands.ab3@2012> INCLUDE "internal_commands.ab3"
0003CA40 <internal_commands.ab3@2013> INCLUDE "internal_commands.ab3"
0003CA43 <internal_commands.ab3@2014> INCLUDE "internal_commands.ab3"
0003CA44 <internal_commands.ab3@2015> INCLUDE "internal_commands.ab3"
0003CA46 <internal_commands.ab3@2018> INCLUDE "internal_commands.ab3"
0003CA4A <internal_commands.ab3@2019> INCLUDE "internal_commands.ab3"
0003CA4C <internal_commands.ab3@2020> INCLUDE "internal_commands.ab3"
0003CA4E <internal_commands.ab3@2021> INCLUDE "internal_commands.ab3"
0003CA52 <internal_commands.ab3@2022> INCLUDE "internal_commands.ab3"
0003CA54 <internal_commands.ab3@2023> INCLUDE "internal_commands.ab3"
0003CA58 <internal_commands.ab3@2027> INCLUDE "internal_commands.ab3"
0003CA5A <internal_commands.ab3@2028> INCLUDE "internal_commands.ab3"
0003CA5F <internal_commands.ab3@2029> INCLUDE "internal_commands.ab3"
0003CA60 <internal_commands.ab3@2030> INCLUDE "internal_commands.ab3"
0003CA62 <internal_commands.ab3@2033> INCLUDE "internal_commands.ab3"
0003CA66 <internal_commands.ab3@2034> INCLUDE "internal_commands.ab3"
0003CA68 <internal_commands.ab3@2035> INCLUDE "internal_commands.ab3"
0003CA6A <internal_commands.ab3@2036> INCLUDE "internal_commands.ab3"
0003CA6E <internal_commands.ab3@2037> INCLUDE "internal_commands.ab3"
0003CA70 <internal_commands.ab3@2038> INCLUDE "internal_commands.ab3"
0003CA74 <internal_commands.ab3@2042> INCLUDE "internal_commands.ab3"
0003CA76 <internal_commands.ab3@2043> INCLUDE "internal_commands.ab3"
0003CA7A <internal_commands.ab3@2044> INCLUDE "internal_commands.ab3"
0003CA7B <internal_commands.ab3@2045> INCLUDE "internal_commands.ab3"
0003CA7C <internal_commands.ab3@2046> INCLUDE "internal_commands.ab3"
0003CA7E <internal_commands.ab3@2048> INCLUDE "internal_commands.ab3"
0003CA82 <internal_commands.ab3@2049> INCLUDE "internal_commands.ab3"
0003CA84 <internal_commands.ab3@2050> INCLUDE "internal_commands.ab3"
0003CA86 <internal_commands.ab3@2051> INCLUDE "internal_commands.ab3"
0003CA8A <internal_commands.ab3@2052> INCLUDE "internal_commands.ab3"
0003CA8C <internal_commands.ab3@2053> INCLUDE "internal_commands.ab3"
0003CA90 <internal_commands.ab3@2057> INCLUDE "internal_commands.ab3"
0003CA92 <internal_commands.ab3@2058> INCLUDE "internal_commands.ab3"
0003CA97 <internal_commands.ab3@2059> INCLUDE "internal_commands.ab3"
0003CA98 <internal_commands.ab3@2060> INCLUDE "internal_commands.ab3"
0003CA9A <internal_commands.ab3@2063> INCLUDE "internal_commands.ab3"
0003CA9E <internal_commands.ab3@2064> INCLUDE "internal_commands.ab3"
0003CAA0 <internal_commands.ab3@2065> INCLUDE "internal_commands.ab3"
0003CAA2 <internal_commands.ab3@2066> INCLUDE "internal_commands.ab3"
0003CAA6 <internal_commands.ab3@2067> INCLUDE "internal_commands.ab3"
0003CAA8 <internal_commands.ab3@2068> INCLUDE "internal_commands.ab3"
0003CAAC <internal_commands.ab3@2072> INCLUDE "internal_commands.ab3"
0003CAAE <internal_commands.ab3@2073> INCLUDE "internal_commands.ab3"
0003CAB3 <internal_commands.ab3@2074> INCLUDE "internal_commands.ab3"
0003CAB4 <internal_commands.ab3@2075> INCLUDE "internal_commands.ab3"
0003CAB6 <internal_commands.ab3@2078> INCLUDE "internal_commands.ab3"
0003CABA <internal_commands.ab3@2079> INCLUDE "internal_commands.ab3"
0003CABC <internal_commands.ab3@2080> INCLUDE "internal_commands.ab3"
0003CABE <internal_commands.ab3@2081> INCLUDE "internal_commands.ab3"
0003CAC2 <internal_commands.ab3@2082> INCLUDE "internal_commands.ab3"
0003CAC4 <internal_commands.ab3@2083> INCLUDE "internal_commands.ab3"
0003CAC8 <internal_commands.ab3@2087> INCLUDE "internal_commands.ab3"
0003CACA <internal_commands.ab3@2088> INCLUDE "internal_commands.ab3"
0003CACF <internal_commands.ab3@2089> INCLUDE "internal_commands.ab3"
0003CAD0 <internal_commands.ab3@2090> INCLUDE "internal_commands.ab3"
0003CAD2 <internal_commands.ab3@2093> INCLUDE "internal_commands.ab3"
0003CAD6 <internal_commands.ab3@2094> INCLUDE "internal_commands.ab3"
0003CAD8 <internal_commands.ab3@2095> INCLUDE "internal_commands.ab3"
0003CADA <internal_commands.ab3@2096> INCLUDE "internal_commands.ab3"
0003CADE <internal_commands.ab3@2097> INCLUDE "internal_commands.ab3"
0003CAE0 <internal_commands.ab3@2098> INCLUDE "internal_commands.ab3"
0003CAE4 <internal_commands.ab3@2102> INCLUDE "internal_commands.ab3"
0003CAE6 <internal_commands.ab3@2103> INCLUDE "internal_commands.ab3"
0003CAEB <internal_commands.ab3@2104> INCLUDE "internal_commands.ab3"
0003CAEC <internal_commands.ab3@2105> INCLUDE "internal_commands.ab3"
0003CAEE <internal_commands.ab3@2108> INCLUDE "internal_commands.ab3"
0003CAF2 <internal_commands.ab3@2109> INCLUDE "internal_commands.ab3"
0003CAF4 <internal_commands.ab3@2110> INCLUDE "internal_commands.ab3"
0003CAF6 <internal_commands.ab3@2111> INCLUDE "internal_commands.ab3"
0003CAFA <internal_commands.ab3@2112> INCLUDE "internal_commands.ab3"
0003CAFC <internal_commands.ab3@2113> INCLUDE "internal_commands.ab3"
0003CB00 <internal_commands.ab3@2117> INCLUDE "internal_commands.ab3"
0003CB02 <internal_commands.ab3@2118> INCLUDE "internal_commands.ab3"
0003CB07 <internal_commands.ab3@2119> INCLUDE "internal_commands.ab3"
0003CB08 <internal_commands.ab3@2120> INCLUDE "internal_commands.ab3"
0003CB0A <internal_commands.ab3@2123> INCLUDE "internal_commands.ab3"
0003CB0E <internal_commands.ab3@2124> INCLUDE "internal_commands.ab3"
0003CB10 <internal_commands.ab3@2125> INCLUDE "internal_commands.ab3"
0003CB12 <internal_commands.ab3@2126> INCLUDE "internal_commands.ab3"
0003CB16 <internal_commands.ab3@2127> INCLUDE "internal_commands.ab3"
0003CB18 <internal_commands.ab3@2128> INCLUDE "internal_commands.ab3"
0003CB1C <internal_commands.ab3@2132> INCLUDE "internal_commands.ab3"
0003CB1E <internal_commands.ab3@2133> INCLUDE "internal_commands.ab3"
0003CB22 <internal_commands.ab3@2134> INCLUDE "internal_commands.ab3"
0003CB23 <internal_commands.ab3@2135> INCLUDE "internal_commands.ab3"
0003CB24 <internal_commands.ab3@2136> INCLUDE "internal_commands.ab3"
0003CB26 <internal_commands.ab3@2138> INCLUDE "internal_commands.ab3"
0003CB2A <internal_commands.ab3@2139> INCLUDE "internal_commands.ab3"
0003CB2C <internal_commands.ab3@2140> INCLUDE "internal_commands.ab3"
0003CB2E <internal_commands.ab3@2141> INCLUDE "internal_commands.ab3"
0003CB32 <internal_commands.ab3@2142> INCLUDE "internal_commands.ab3"
0003CB34 <internal_commands.ab3@2143> INCLUDE "internal_commands.ab3"
0003CB38 <internal_commands.ab3@2147> INCLUDE "internal_commands.ab3"
0003CB3A <internal_commands.ab3@2148> INCLUDE "internal_commands.ab3"
0003CB3F <internal_commands.ab3@2149> INCLUDE "internal_commands.ab3"
0003CB40 <internal_commands.ab3@2150> INCLUDE "internal_commands.ab3"
0003CB42 <internal_commands.ab3@2153> INCLUDE "internal_commands.ab3"
0003CB46 <internal_commands.ab3@2154> INCLUDE "internal_commands.ab3"
0003CB48 <internal_commands.ab3@2155> INCLUDE "internal_commands.ab3"
0003CB4A <internal_commands.ab3@2156> INCLUDE "internal_commands.ab3"
0003CB4E <internal_commands.ab3@2157> INCLUDE "internal_commands.ab3"
0003CB50 <internal_commands.ab3@2158> INCLUDE "internal_commands.ab3"
0003CB54 <internal_commands.ab3@2162> INCLUDE "internal_commands.ab3"
0003CB56 <internal_commands.ab3@2163> INCLUDE "internal_commands.ab3"
0003CB5C <internal_commands.ab3@2164> INCLUDE "internal_commands.ab3"
0003CB5D <internal_commands.ab3@2165> INCLUDE "internal_commands.ab3"
0003CB5E <internal_commands.ab3@2166> INCLUDE "internal_commands.ab3"
0003CB60 <internal_commands.ab3@2168> INCLUDE "internal_commands.ab3"
0003CB64 <internal_commands.ab3@2169> INCLUDE "internal_commands.ab3"
0003CB66 <internal_commands.ab3@2170> INCLUDE "internal_commands.ab3"
0003CB68 <internal_commands.ab3@2171> INCLUDE "internal_commands.ab3"
0003CB6C <internal_commands.ab3@2172> INCLUDE "internal_commands.ab3"
0003CB6E <internal_commands.ab3@2173> INCLUDE "internal_commands.ab3"
0003CB72 <internal_commands.ab3@2177> INCLUDE "internal_commands.ab3"
0003CB74 <internal_commands.ab3@2178> INCLUDE "internal_commands.ab3"
0003CB78 <internal_commands.ab3@2179> INCLUDE "internal_commands.ab3"
0003CB79 <internal_commands.ab3@2180> INCLUDE "internal_commands.ab3"
0003CB7A <internal_commands.ab3@2181> INCLUDE "internal_commands.ab3"
0003CB7C <internal_commands.ab3@2183> INCLUDE "internal_commands.ab3"
0003CB80 <internal_commands.ab3@2184> INCLUDE "internal_commands.ab3"
0003CB82 <internal_commands.ab3@2185> INCLUDE "internal_commands.ab3"
0003CB84 <internal_commands.ab3@2186> INCLUDE "internal_commands.ab3"
0003CB88 <internal_commands.ab3@2187> INCLUDE "internal_commands.ab3"
0003CB8A <internal_commands.ab3@2188> INCLUDE "internal_commands.ab3"
0003CB8E <internal_commands.ab3@2192> INCLUDE "internal_commands.ab3"
0003CB90 <internal_commands.ab3@2193> INCLUDE "internal_commands.ab3"
0003CB95 <internal_commands.ab3@2194> INCLUDE "internal_commands.ab3"
0003CB96 <internal_commands.ab3@2195> INCLUDE "internal_commands.ab3"
0003CB98 <internal_commands.ab3@2198> INCLUDE "internal_commands.ab3"
0003CB9C <internal_commands.ab3@2199> INCLUDE "internal_commands.ab3"
0003CB9E <internal_commands.ab3@2200> INCLUDE "internal_commands.ab3"
0003CBA0 <internal_commands.ab3@2201> INCLUDE "internal_commands.ab3"
0003CBA4 <internal_commands.ab3@2202> INCLUDE "internal_commands.ab3"
0003CBA6 <internal_commands.ab3@2203> INCLUDE "internal_commands.ab3"
0003CBAA <internal_commands.ab3@2208> INCLUDE "internal_commands.ab3"
0003CBAC <internal_commands.ab3@2209> INCLUDE "internal_commands.ab3"
0003CBB3 <internal_commands.ab3@2210> INCLUDE "internal_commands.ab3"
0003CBB4 <internal_commands.ab3@2211> INCLUDE "internal_commands.ab3"
0003CBB6 <internal_commands.ab3@2230> INCLUDE "internal_commands.ab3"
0003CBB8 <internal_commands.ab3@2231> INCLUDE "internal_commands.ab3"
0003CBBA <internal_commands.ab3@2235> INCLUDE "internal_commands.ab3"
0003CBBC <internal_commands.ab3@2236> INCLUDE "internal_commands.ab3"
0003CBBE <internal_commands.ab3@2240> INCLUDE "internal_commands.ab3"
0003CBC0 <internal_commands.ab3@2241> INCLUDE "internal_commands.ab3"
0003CBC2 <internal_commands.ab3@2245> INCLUDE "internal_commands.ab3"
0003CBC4 <internal_commands.ab3@2246> INCLUDE "internal_commands.ab3"
0003CBC6 <internal_commands.ab3@2251> INCLUDE "internal_commands.ab3"
0003CBCA <internal_commands.ab3@2252> INCLUDE "internal_commands.ab3"
0003CBCC <internal_commands.ab3@2253> INCLUDE "internal_commands.ab3"
0003CBCE <internal_commands.ab3@2254> INCLUDE "internal_commands.ab3"
0003CBD0 <internal_commands.ab3@2255> INCLUDE "internal_commands.ab3"
0003CBD2 <internal_commands.ab3@2256> INCLUDE "internal_commands.ab3"
0003CBD6 <internal_commands.ab3@2257> INCLUDE "internal_commands.ab3"
0003CBDC <internal_commands.ab3@2260> INCLUDE "internal_commands.ab3"
0003CBE0 <internal_commands.ab3@2261> INCLUDE "internal_commands.ab3"
0003CBE2 <internal_commands.ab3@2262> INCLUDE "internal_commands.ab3"
0003CBE4 <internal_commands.ab3@2263> INCLUDE "internal_commands.ab3"
0003CBE6 <internal_commands.ab3@2264> INCLUDE "internal_commands.ab3"
0003CBE8 <internal_commands.ab3@2265> INCLUDE "internal_commands.ab3"
0003CBEA <internal_commands.ab3@2266> INCLUDE "internal_commands.ab3"
0003CBEC <internal_commands.ab3@2273> INCLUDE "internal_commands.ab3"
0003CBF0 <internal_commands.ab3@2274> INCLUDE "internal_commands.ab3"
0003CBF4 <internal_commands.ab3@2275> INCLUDE "internal_commands.ab3"
0003CBF8 <internal_commands.ab3@2276> INCLUDE "internal_commands.ab3"
0003CBFC <internal_commands.ab3@2277> INCLUDE "internal_commands.ab3"
0003CC00 <internal_commands.ab3@2278> INCLUDE "internal_commands.ab3"
0003CC02 <internal_commands.ab3@2281> INCLUDE "internal_commands.ab3"
0003CC04 <internal_commands.ab3@2282> INCLUDE "internal_commands.ab3"
0003CC08 <internal_commands.ab3@2283> INCLUDE "internal_commands.ab3"
0003CC0C <internal_commands.ab3@2284> INCLUDE "internal_commands.ab3"
0003CC10 <internal_commands.ab3@2285> INCLUDE "internal_commands.ab3"
0003CC14 <internal_commands.ab3@2286> INCLUDE "internal_commands.ab3"
0003CC16 <internal_commands.ab3@2289> INCLUDE "internal_commands.ab3"
0003CC18 <internal_commands.ab3@2290> INCLUDE "internal_commands.ab3"
0003CC1C <internal_commands.ab3@2291> INCLUDE "internal_commands.ab3"
0003CC20 <internal_commands.ab3@2292> INCLUDE "internal_commands.ab3"
0003CC24 <internal_commands.ab3@2293> INCLUDE "internal_commands.ab3"
0003CC28 <internal_commands.ab3@2294> INCLUDE "internal_commands.ab3"
0003CC2A <internal_commands.ab3@2295> INCLUDE "internal_commands.ab3"
0003CC2C <internal_commands.ab3@2298> INCLUDE "internal_commands.ab3"
0003CC2E <internal_commands.ab3@2299> INCLUDE "internal_commands.ab3"
0003CC32 <internal_commands.ab3@2300> INCLUDE "internal_commands.ab3"
0003CC34 <internal_commands.ab3@2302> INCLUDE "internal_commands.ab3"
0003CC38 <internal_commands.ab3@2303> INCLUDE "internal_commands.ab3"
0003CC3A <internal_commands.ab3@2307> INCLUDE "internal_commands.ab3"
0003CC3E <internal_commands.ab3@2308> INCLUDE "internal_commands.ab3"
0003CC40 <internal_commands.ab3@2309> INCLUDE "internal_commands.ab3"
0003CC44 <internal_commands.ab3@2310> INCLUDE "internal_commands.ab3"
0003CC48 <internal_commands.ab3@2311> INCLUDE "internal_commands.ab3"
0003CC4C <internal_commands.ab3@2312> INCLUDE "internal_commands.ab3"
0003CC50 <internal_commands.ab3@2316> INCLUDE "internal_commands.ab3"
0003CC54 <internal_commands.ab3@2317> INCLUDE "internal_commands.ab3"
0003CC58 <internal_commands.ab3@2319> INCLUDE "internal_commands.ab3"
0003CC5C <internal_commands.ab3@2320> INCLUDE "internal_commands.ab3"
0003CC60 <internal_commands.ab3@2321> INCLUDE "internal_commands.ab3"
0003CC64 <internal_commands.ab3@2322> INCLUDE "internal_commands.ab3"
0003CC68 <internal_commands.ab3@2323> INCLUDE "internal_commands.ab3"
0003CC6C <internal_commands.ab3@2324> INCLUDE "internal_commands.ab3"
0003CC70 <internal_commands.ab3@2325> INCLUDE "internal_commands.ab3"
0003CC74 <internal_commands.ab3@2326> INCLUDE "internal_commands.ab3"
0003CC78 <internal_commands.ab3@2328> INCLUDE "internal_commands.ab3"
0003CC7C <internal_commands.ab3@2331> INCLUDE "internal_commands.ab3"
0003CC80 <internal_commands.ab3@2332> INCLUDE "internal_commands.ab3"
0003CC84 <internal_commands.ab3@2334> INCLUDE "internal_commands.ab3"
0003CC88 <internal_commands.ab3@2335> INCLUDE "internal_commands.ab3"
0003CC8C <internal_commands.ab3@2336> INCLUDE "internal_commands.ab3"
0003CC90 <internal_commands.ab3@2337> INCLUDE "internal_commands.ab3"
0003CC94 <internal_commands.ab3@2338> INCLUDE "internal_commands.ab3"
0003CC98 <internal_commands.ab3@2339> INCLUDE "internal_commands.ab3"
0003CC9C <internal_commands.ab3@2340> INCLUDE "internal_commands.ab3"
0003CCA0 <internal_commands.ab3@2341> INCLUDE "internal_commands.ab3"
0003CCA4 <internal_commands.ab3@2343> INCLUDE "internal_commands.ab3"
0003CCA8 <internal_commands.ab3@2346> INCLUDE "internal_commands.ab3"
0003CCAA <internal_commands.ab3@2347> INCLUDE "internal_commands.ab3"
0003CCAE <internal_commands.ab3@2348> INCLUDE "internal_commands.ab3"
0003CCB2 <internal_commands.ab3@2349> INCLUDE "internal_commands.ab3"
0003CCB6 <internal_commands.ab3@2350> INCLUDE "internal_commands.ab3"
0003CCBA <internal_commands.ab3@2351> INCLUDE "internal_commands.ab3"
0003CCBE <internal_commands.ab3@2352> INCLUDE "internal_commands.ab3"
0003CCC2 <internal_commands.ab3@2353> INCLUDE "internal_commands.ab3"
0003CCC6 <internal_commands.ab3@2356> INCLUDE "internal_commands.ab3"
0003CCCA <internal_commands.ab3@2357> INCLUDE "internal_commands.ab3"
0003CCCE <internal_commands.ab3@2358> INCLUDE "internal_commands.ab3"
0003CCD0 <internal_commands.ab3@2359> INCLUDE "internal_commands.ab3"
0003CCD2 <internal_commands.ab3@2362> INCLUDE "internal_commands.ab3"
0003CCD4 <internal_commands.ab3@2363> INCLUDE "internal_commands.ab3"
0003CCD6 <internal_commands.ab3@2364> INCLUDE "internal_commands.ab3"
0003CCD8 <internal_commands.ab3@2365> INCLUDE "internal_commands.ab3"
0003CCDC <internal_commands.ab3@2366> INCLUDE "internal_commands.ab3"
0003CCE0 <internal_commands.ab3@2369> INCLUDE "internal_commands.ab3"
0003CCE4 <internal_commands.ab3@2370> INCLUDE "internal_commands.ab3"
0003CCE8 <internal_commands.ab3@2371> INCLUDE "internal_commands.ab3"
0003CCEA <internal_commands.ab3@2372> INCLUDE "internal_commands.ab3"
0003CCEE <internal_commands.ab3@2373> INCLUDE "internal_commands.ab3"
0003CCF2 <internal_commands.ab3@2376> INCLUDE "internal_commands.ab3"
0003CCF6 <internal_commands.ab3@2379> INCLUDE "internal_commands.ab3"
0003CCFA <internal_commands.ab3@2380> INCLUDE "internal_commands.ab3"
0003CCFC <internal_commands.ab3@2381> INCLUDE "internal_commands.ab3"
0003CCFE <internal_commands.ab3@2382> INCLUDE "internal_commands.ab3"
0003CD02 <internal_commands.ab3@2383> INCLUDE "internal_commands.ab3"
0003CD06 <internal_commands.ab3@2386> INCLUDE "internal_commands.ab3"
0003CD0A <internal_commands.ab3@2387> INCLUDE "internal_commands.ab3"
0003CD0E <internal_commands.ab3@2390> INCLUDE "internal_commands.ab3"
0003CD12 <internal_commands.ab3@2393> INCLUDE "internal_commands.ab3"
0003CD16 <internal_commands.ab3@2394> INCLUDE "internal_commands.ab3"
0003CD18 <internal_commands.ab3@2395> INCLUDE "internal_commands.ab3"
0003CD1A <internal_commands.ab3@2396> INCLUDE "internal_commands.ab3"
0003CD1E <internal_commands.ab3@2397> INCLUDE "internal_commands.ab3"
0003CD22 <internal_commands.ab3@2400> INCLUDE "internal_commands.ab3"
0003CD26 <internal_commands.ab3@2401> INCLUDE "internal_commands.ab3"
0003CD28 <internal_commands.ab3@2405> INCLUDE "internal_commands.ab3"
0003CD2C <internal_commands.ab3@2406> INCLUDE "internal_commands.ab3"
0003CD30 <internal_commands.ab3@2407> INCLUDE "internal_commands.ab3"
0003CD32 <internal_commands.ab3@2408> INCLUDE "internal_commands.ab3"
0003CD36 <internal_commands.ab3@2409> INCLUDE "internal_commands.ab3"
0003CD3A <internal_commands.ab3@2410> INCLUDE "internal_commands.ab3"
0003CD3C <internal_commands.ab3@2413> INCLUDE "internal_commands.ab3"
0003CD40 <internal_commands.ab3@2414> INCLUDE "internal_commands.ab3"
0003CD44 <internal_commands.ab3@2415> INCLUDE "internal_commands.ab3"
0003CD48 <internal_commands.ab3@2416> INCLUDE "internal_commands.ab3"
0003CD4C <internal_commands.ab3@2419> INCLUDE "internal_commands.ab3"
0003CD50 <internal_commands.ab3@2420> INCLUDE "internal_commands.ab3"
0003CD52 <internal_commands.ab3@2424> INCLUDE "internal_commands.ab3"
0003CD56 <internal_commands.ab3@2425> INCLUDE "internal_commands.ab3"
0003CD58 <internal_commands.ab3@2426> INCLUDE "internal_commands.ab3"
0003CD5A <internal_commands.ab3@2427> INCLUDE "internal_commands.ab3"
0003CD5C <internal_commands.ab3@2428> INCLUDE "internal_commands.ab3"
0003CD60 <internal_commands.ab3@2429> INCLUDE "internal_commands.ab3"
0003CD64 <internal_commands.ab3@2432> INCLUDE "internal_commands.ab3"
0003CD68 <internal_commands.ab3@2433> INCLUDE "internal_commands.ab3"
0003CD6C <internal_commands.ab3@2434> INCLUDE "internal_commands.ab3"
0003CD70 <internal_commands.ab3@2435> INCLUDE "internal_commands.ab3"
0003CD74 <internal_commands.ab3@2439> INCLUDE "internal_commands.ab3"
0003CD78 <internal_commands.ab3@2440> INCLUDE "internal_commands.ab3"
0003CD7C <internal_commands.ab3@2444> INCLUDE "internal_commands.ab3"
0003CD80 <internal_commands.ab3@2445> INCLUDE "internal_commands.ab3"
0003CD84 <internal_commands.ab3@2449> INCLUDE "internal_commands.ab3"
0003CD88 <internal_commands.ab3@2450> INCLUDE "internal_commands.ab3"
0003CD8C <internal_commands.ab3@2454> INCLUDE "internal_commands.ab3"
0003CD8E <internal_commands.ab3@2456> INCLUDE "internal_commands.ab3"
0003CD92 <internal_commands.ab3@2457> INCLUDE "internal_commands.ab3"
0003CD96 <internal_commands.ab3@2458> INCLUDE "internal_commands.ab3"
0003CD98 <internal_commands.ab3@2459> INCLUDE "internal_commands.ab3"
0003CD9A <internal_commands.ab3@2460> INCLUDE "internal_commands.ab3"
0003CD9C <internal_commands.ab3@2461> INCLUDE "internal_commands.ab3"
0003CDA0 <internal_commands.ab3@2462> INCLUDE "internal_commands.ab3"
0003CDA4 <internal_commands.ab3@2463> INCLUDE "internal_commands.ab3"
0003CDA6 <internal_commands.ab3@2464> INCLUDE "internal_commands.ab3"
0003CDAA <internal_commands.ab3@2465> INCLUDE "internal_commands.ab3"
0003CDAC <internal_commands.ab3@2466> INCLUDE "internal_commands.ab3"
0003CDAE <internal_commands.ab3@2467> INCLUDE "internal_commands.ab3"
0003CDB0 <internal_commands.ab3@2468> INCLUDE "internal_commands.ab3"
0003CDB4 <internal_commands.ab3@2469> INCLUDE "internal_commands.ab3"
0003CDB8 <internal_commands.ab3@2470> INCLUDE "internal_commands.ab3"
0003CDBA <internal_commands.ab3@2473> INCLUDE "internal_commands.ab3"
0003CDBC <internal_commands.ab3@2474> INCLUDE "internal_commands.ab3"
0003CDC0 <internal_commands.ab3@2475> INCLUDE "internal_commands.ab3"
0003CDC4 <internal_commands.ab3@2476> INCLUDE "internal_commands.ab3"
0003CDC8 <internal_commands.ab3@2477> INCLUDE "internal_commands.ab3"
0003CDCC <internal_commands.ab3@2478> INCLUDE "internal_commands.ab3"
0003CDCE <internal_commands.ab3@2479> INCLUDE "internal_commands.ab3"
0003CDD2 <internal_commands.ab3@2480> INCLUDE "internal_commands.ab3"
0003CDD6 <internal_commands.ab3@2481> INCLUDE "internal_commands.ab3"
0003CDDA <internal_commands.ab3@2482> INCLUDE "internal_commands.ab3"
0003CDDC <internal_commands.ab3@2483> INCLUDE "internal_commands.ab3"
0003CDDE <internal_commands.ab3@2484> INCLUDE "internal_commands.ab3"
0003CDE0 <internal_commands.ab3@2485> INCLUDE "internal_commands.ab3"
0003CDE2 <internal_commands.ab3@2488> INCLUDE "internal_commands.ab3"
0003CDE4 <internal_commands.ab3@2489> INCLUDE "internal_commands.ab3"
0003CDE6 <internal_commands.ab3@2490> INCLUDE "internal_commands.ab3"
0003CDEA <internal_commands.ab3@2491> INCLUDE "internal_commands.ab3"
0003CDEE <internal_commands.ab3@2492> INCLUDE "internal_commands.ab3"
0003CDF0 <internal_commands.ab3@2496> INCLUDE "internal_commands.ab3"
0003CDF4 <internal_commands.ab3@2497> INCLUDE "internal_commands.ab3"
0003CDF6 <internal_commands.ab3@2498> INCLUDE "internal_commands.ab3"
0003CDFA <internal_commands.ab3@2499> INCLUDE "internal_commands.ab3"
0003CDFE <internal_commands.ab3@2500> INCLUDE "internal_commands.ab3"
0003CE00 <internal_commands.ab3@2501> INCLUDE "internal_commands.ab3"
0003CE02 <internal_commands.ab3@2504> INCLUDE "internal_commands.ab3"
0003CE04 <internal_commands.ab3@2508> INCLUDE "internal_commands.ab3"
0003CE08 <internal_commands.ab3@2509> INCLUDE "internal_commands.ab3"
0003CE0A <internal_commands.ab3@2510> INCLUDE "internal_commands.ab3"
0003CE0E <internal_commands.ab3@2511> INCLUDE "internal_commands.ab3"
0003CE12 <internal_commands.ab3@2512> INCLUDE "internal_commands.ab3"
0003CE16 <internal_commands.ab3@2513> INCLUDE "internal_commands.ab3"
0003CE18 <internal_commands.ab3@2516> INCLUDE "internal_commands.ab3"
0003CE1C <internal_commands.ab3@2520> INCLUDE "internal_commands.ab3"
0003CE20 <internal_commands.ab3@2521> INCLUDE "internal_commands.ab3"
0003CE22 <internal_commands.ab3@2522> INCLUDE "internal_commands.ab3"
0003CE26 <internal_commands.ab3@2523> INCLUDE "internal_commands.ab3"
0003CE2A <internal_commands.ab3@2524> INCLUDE "internal_commands.ab3"
0003CE2E <internal_commands.ab3@2527> INCLUDE "internal_commands.ab3"
0003CE32 <internal_commands.ab3@2528> INCLUDE "internal_commands.ab3"
0003CE36 <internal_commands.ab3@2529> INCLUDE "internal_commands.ab3"
0003CE3A <internal_commands.ab3@2530> INCLUDE "internal_commands.ab3"
0003CE3E <internal_commands.ab3@2531> INCLUDE "internal_commands.ab3"
0003CE42 <internal_commands.ab3@2538> INCLUDE "internal_commands.ab3"
0003CE44 <internal_commands.ab3@2539> INCLUDE "internal_commands.ab3"
0003CE49 <internal_commands.ab3@2540> INCLUDE "internal_commands.ab3"
0003CE4A <internal_commands.ab3@2541> INCLUDE "internal_commands.ab3"
0003CE4E <internal_commands.ab3@2545> INCLUDE "internal_commands.ab3"
0003CE50 <internal_commands.ab3@2546> INCLUDE "internal_commands.ab3"
0003CE57 <internal_commands.ab3@2547> INCLUDE "internal_commands.ab3"
0003CE58 <internal_commands.ab3@2548> INCLUDE "internal_commands.ab3"
0003CE5C <internal_commands.ab3@2552> INCLUDE "internal_commands.ab3"
0003CE5E <internal_commands.ab3@2553> INCLUDE "internal_commands.ab3"
0003CE65 <internal_commands.ab3@2554> INCLUDE "internal_commands.ab3"
0003CE66 <internal_commands.ab3@2555> INCLUDE "internal_commands.ab3"
0003CE6A <internal_commands.ab3@2559> INCLUDE "internal_commands.ab3"
0003CE6C <internal_commands.ab3@2560> INCLUDE "internal_commands.ab3"
0003CE74 <internal_commands.ab3@2561> INCLUDE "internal_commands.ab3"
0003CE75 <internal_commands.ab3@2562> INCLUDE "internal_commands.ab3"
0003CE76 <internal_commands.ab3@2563> INCLUDE "internal_commands.ab3"
0003CE7A <internal_commands.ab3@2566> INCLUDE "internal_commands.ab3"
0003CE7C <internal_commands.ab3@2567> INCLUDE "internal_commands.ab3"
0003CE81 <internal_commands.ab3@2568> INCLUDE "internal_commands.ab3"
0003CE95 <internal_commands.ab3@2569> INCLUDE "internal_commands.ab3"
0003CE96 <internal_commands.ab3@2570> INCLUDE "internal_commands.ab3"
0003CE9A <internal_commands.ab3@2573> INCLUDE "internal_commands.ab3"
0003CE9C <internal_commands.ab3@2574> INCLUDE "internal_commands.ab3"
0003CEA0 <internal_commands.ab3@2575> INCLUDE "internal_commands.ab3"
0003CEA1 <internal_commands.ab3@2576> INCLUDE "internal_commands.ab3"
0003CEA2 <internal_commands.ab3@2577> INCLUDE "internal_commands.ab3"
0003CEA6 <internal_commands.ab3@2580> INCLUDE "internal_commands.ab3"
0003CEA8 <internal_commands.ab3@2581> INCLUDE "internal_commands.ab3"
0003CEAB <internal_commands.ab3@2582> INCLUDE "internal_commands.ab3"
0003CEAC <internal_commands.ab3@2583> INCLUDE "internal_commands.ab3"
0003CEB0 <internal_commands.ab3@2587> INCLUDE "internal_commands.ab3"
0003CEB2 <internal_commands.ab3@2588> INCLUDE "internal_commands.ab3"
0003CEB9 <internal_commands.ab3@2589> INCLUDE "internal_commands.ab3"
0003CEBA <internal_commands.ab3@2590> INCLUDE "internal_commands.ab3"
0003CEBE <internal_commands.ab3@2594> INCLUDE "internal_commands.ab3"
0003CEC0 <internal_commands.ab3@2595> INCLUDE "internal_commands.ab3"
0003CEC6 <internal_commands.ab3@2596> INCLUDE "internal_commands.ab3"
0003CED3 <internal_commands.ab3@2597> INCLUDE "internal_commands.ab3"
0003CED4 <internal_commands.ab3@2598> INCLUDE "internal_commands.ab3"
0003CED8 <internal_commands.ab3@2601> INCLUDE "internal_commands.ab3"
0003CEDA <internal_commands.ab3@2602> INCLUDE "internal_commands.ab3"
0003CEE1 <internal_commands.ab3@2603> INCLUDE "internal_commands.ab3"
0003CEF9 <internal_commands.ab3@2604> INCLUDE "internal_commands.ab3"
0003CEFA <internal_commands.ab3@2605> INCLUDE "internal_commands.ab3"
0003CEFE <internal_commands.ab3@2608> INCLUDE "internal_commands.ab3"
0003CF00 <internal_commands.ab3@2609> INCLUDE "internal_commands.ab3"
0003CF04 <internal_commands.ab3@2610> INCLUDE "internal_commands.ab3"
0003CF27 <internal_commands.ab3@2611> INCLUDE "internal_commands.ab3"
0003CF28 <internal_commands.ab3@2612> INCLUDE "internal_commands.ab3"
0003CF2C <internal_commands.ab3@2615> INCLUDE "internal_commands.ab3"
0003CF2E <internal_commands.ab3@2616> INCLUDE "internal_commands.ab3"
0003CF35 <internal_commands.ab3@2617> INCLUDE "internal_commands.ab3"
0003CF40 <internal_commands.ab3@2618> INCLUDE "internal_commands.ab3"
0003CF44 <internal_commands.ab3@2622> INCLUDE "internal_commands.ab3"
0003CF46 <internal_commands.ab3@2623> INCLUDE "internal_commands.ab3"
0003CF4C <internal_commands.ab3@2624> INCLUDE "internal_commands.ab3"
0003CF4D <internal_commands.ab3@2625> INCLUDE "internal_commands.ab3"
0003CF4E <internal_commands.ab3@2626> INCLUDE "internal_commands.ab3"
0003CF52 <internal_commands.ab3@2629> INCLUDE "internal_commands.ab3"
0003CF54 <internal_commands.ab3@2630> INCLUDE "internal_commands.ab3"
0003CF59 <internal_commands.ab3@2631> INCLUDE "internal_commands.ab3"
0003CF5A <internal_commands.ab3@2632> INCLUDE "internal_commands.ab3"
0003CF5E <internal_commands.ab3@2636> INCLUDE "internal_commands.ab3"
0003CF60 <internal_commands.ab3@2637> INCLUDE "internal_commands.ab3"
0003CF67 <internal_commands.ab3@2638> INCLUDE "internal_commands.ab3"
0003CF79 <internal_commands.ab3@2639> INCLUDE "internal_commands.ab3"
0003CF7A <internal_commands.ab3@2640> INCLUDE "internal_commands.ab3"
0003CF7E <internal_commands.ab3@2643> INCLUDE "internal_commands.ab3"
0003CF80 <internal_commands.ab3@2644> INCLUDE "internal_commands.ab3"
0003CF8A <internal_commands.ab3@2645> INCLUDE "internal_commands.ab3"
0003CF8B <internal_commands.ab3@2646> INCLUDE "internal_commands.ab3"
0003CF8C <internal_commands.ab3@2647> INCLUDE "internal_commands.ab3"
0003CF90 <internal_commands.ab3@2650> INCLUDE "internal_commands.ab3"
0003CF92 <internal_commands.ab3@2651> INCLUDE "internal_commands.ab3"
0003CF9A <internal_commands.ab3@2652> INCLUDE "internal_commands.ab3"
0003CFA7 <internal_commands.ab3@2653> INCLUDE "internal_commands.ab3"
0003CFA8 <internal_commands.ab3@2654> INCLUDE "internal_commands.ab3"
0003CFAC <internal_commands.ab3@2657> INCLUDE "internal_commands.ab3"
0003CFAE <internal_commands.ab3@2658> INCLUDE "internal_commands.ab3"
0003CFB1 <internal_commands.ab3@2659> INCLUDE "internal_commands.ab3"
0003CFEC <internal_commands.ab3@2660> INCLUDE "internal_commands.ab3"
0003CFF0 <internal_commands.ab3@2664> INCLUDE "internal_commands.ab3"
0003CFF2 <internal_commands.ab3@2665> INCLUDE "internal_commands.ab3"
0003CFF6 <internal_commands.ab3@2666> INCLUDE "internal_commands.ab3"
0003CFF7 <internal_commands.ab3@2667> INCLUDE "internal_commands.ab3"
0003CFF8 <internal_commands.ab3@2668> INCLUDE "internal_commands.ab3"
0003CFFC <internal_commands.ab3@2671> INCLUDE "internal_commands.ab3"
0003CFFE <internal_commands.ab3@2672> INCLUDE "internal_commands.ab3"
0003D006 <internal_commands.ab3@2673> INCLUDE "internal_commands.ab3"
0003D007 <internal_commands.ab3@2674> INCLUDE "internal_commands.ab3"
0003D008 <internal_commands.ab3@2675> INCLUDE "internal_commands.ab3"
0003D00C <internal_commands.ab3@2678> INCLUDE "internal_commands.ab3"
0003D00E <internal_commands.ab3@2679> INCLUDE "internal_commands.ab3"
0003D016 <internal_commands.ab3@2680> INCLUDE "internal_commands.ab3"
0003D026 <internal_commands.ab3@2681> INCLUDE "internal_commands.ab3"
0003D02A <internal_commands.ab3@2685> INCLUDE "internal_commands.ab3"
0003D02C <internal_commands.ab3@2686> INCLUDE "internal_commands.ab3"
0003D035 <internal_commands.ab3@2687> INCLUDE "internal_commands.ab3"
0003D03D <internal_commands.ab3@2688> INCLUDE "internal_commands.ab3"
0003D03E <internal_commands.ab3@2689> INCLUDE "internal_commands.ab3"
0003D042 <internal_commands.ab3@2692> INCLUDE "internal_commands.ab3"
0003D044 <internal_commands.ab3@2693> INCLUDE "internal_commands.ab3"
0003D04C <internal_commands.ab3@2694> INCLUDE "internal_commands.ab3"
0003D055 <internal_commands.ab3@2695> INCLUDE "internal_commands.ab3"
0003D056 <internal_commands.ab3@2696> INCLUDE "internal_commands.ab3"
0003D05A <internal_commands.ab3@2699> INCLUDE "internal_commands.ab3"
0003D05C <internal_commands.ab3@2700> INCLUDE "internal_commands.ab3"
0003D064 <internal_commands.ab3@2701> INCLUDE "internal_commands.ab3"
0003D065 <internal_commands.ab3@2702> INCLUDE "internal_commands.ab3"
0003D066 <internal_commands.ab3@2703> INCLUDE "internal_commands.ab3"
0003D06A <internal_commands.ab3@2706> INCLUDE "internal_commands.ab3"
0003D06C <internal_commands.ab3@2707> INCLUDE "internal_commands.ab3"
0003D072 <internal_commands.ab3@2708> INCLUDE "internal_commands.ab3"
0003D073 <internal_commands.ab3@2709> INCLUDE "internal_commands.ab3"
0003D074 <internal_commands.ab3@2710> INCLUDE "internal_commands.ab3"
0003D078 <internal_commands.ab3@2713> INCLUDE "internal_commands.ab3"
0003D07A <internal_commands.ab3@2714> INCLUDE "internal_commands.ab3"
0003D081 <internal_commands.ab3@2715> INCLUDE "internal_commands.ab3"
0003D082 <internal_commands.ab3@2716> INCLUDE "internal_commands.ab3"
0003D086 <internal_commands.ab3@2720> INCLUDE "internal_commands.ab3"
0003D088 <internal_commands.ab3@2721> INCLUDE "internal_commands.ab3"
0003D08F <internal_commands.ab3@2722> INCLUDE "internal_commands.ab3"
0003D090 <internal_commands.ab3@2723> INCLUDE "internal_commands.ab3"
0003D094 <internal_commands.ab3@2727> INCLUDE "internal_commands.ab3"
0003D096 <internal_commands.ab3@2728> INCLUDE "internal_commands.ab3"
0003D09D <internal_commands.ab3@2729> INCLUDE "internal_commands.ab3"
0003D09E <internal_commands.ab3@2730> INCLUDE "internal_commands.ab3"
0003D0A2 <internal_commands.ab3@2734> INCLUDE "internal_commands.ab3"
0003D0A4 <internal_commands.ab3@2735> INCLUDE "internal_commands.ab3"
0003D0AB <internal_commands.ab3@2736> INCLUDE "internal_commands.ab3"
0003D0AC <internal_commands.ab3@2737> INCLUDE "internal_commands.ab3"
0003D0B0 <internal_commands.ab3@2741> INCLUDE "internal_commands.ab3"
0003D0B2 <internal_commands.ab3@2742> INCLUDE "internal_commands.ab3"
0003D0B7 <internal_commands.ab3@2743> INCLUDE "internal_commands.ab3"
0003D0CD <internal_commands.ab3@2744> INCLUDE "internal_commands.ab3"
0003D0CE <internal_commands.ab3@2745> INCLUDE "internal_commands.ab3"
0003D0D2 <internal_commands.ab3@2748> INCLUDE "internal_commands.ab3"
0003D0D4 <internal_commands.ab3@2749> INCLUDE "internal_commands.ab3"
0003D0DE <internal_commands.ab3@2750> INCLUDE "internal_commands.ab3"
0003D0DF <internal_commands.ab3@2751> INCLUDE "internal_commands.ab3"
0003D0E0 <internal_commands.ab3@2752> INCLUDE "internal_commands.ab3"
0003D0E4 <internal_commands.ab3@2755> INCLUDE "internal_commands.ab3"
0003D0E6 <internal_commands.ab3@2756> INCLUDE "internal_commands.ab3"
0003D0F1 <internal_commands.ab3@2757> INCLUDE "internal_commands.ab3"
0003D0F2 <internal_commands.ab3@2758> INCLUDE "internal_commands.ab3"
0003D0F6 <internal_commands.ab3@2762> INCLUDE "internal_commands.ab3"
0003D0F8 <internal_commands.ab3@2763> INCLUDE "internal_commands.ab3"
0003D104 <internal_commands.ab3@2764> INCLUDE "internal_commands.ab3"
0003D131 <internal_commands.ab3@2765> INCLUDE "internal_commands.ab3"
0003D132 <internal_commands.ab3@2766> INCLUDE "internal_commands.ab3"
0003D136 <internal_commands.ab3@2769> INCLUDE "internal_commands.ab3"
0003D138 <internal_commands.ab3@2770> INCLUDE "internal_commands.ab3"
0003D140 <internal_commands.ab3@2771> INCLUDE "internal_commands.ab3"
0003D177 <internal_commands.ab3@2772> INCLUDE "internal_commands.ab3"
0003D178 <internal_commands.ab3@2773> INCLUDE "internal_commands.ab3"
0003D17C <internal_commands.ab3@2776> INCLUDE "internal_commands.ab3"
0003D17E <internal_commands.ab3@2777> INCLUDE "internal_commands.ab3"
0003D186 <internal_commands.ab3@2778> INCLUDE "internal_commands.ab3"
0003D1A5 <internal_commands.ab3@2779> INCLUDE "internal_commands.ab3"
0003D1A6 <internal_commands.ab3@2780> INCLUDE "internal_commands.ab3"
0003D1AA <internal_commands.ab3@2783> INCLUDE "internal_commands.ab3"
0003D1AC <internal_commands.ab3@2784> INCLUDE "internal_commands.ab3"
0003D1B3 <internal_commands.ab3@2785> INCLUDE "internal_commands.ab3"
0003D1E9 <internal_commands.ab3@2786> INCLUDE "internal_commands.ab3"
0003D1EA <internal_commands.ab3@2787> INCLUDE "internal_commands.ab3"
0003D1EE <internal_commands.ab3@2790> INCLUDE "internal_commands.ab3"
0003D1F0 <internal_commands.ab3@2791> INCLUDE "internal_commands.ab3"
0003D1F9 <internal_commands.ab3@2792> INCLUDE "internal_commands.ab3"
0003D22E <internal_commands.ab3@2793> INCLUDE "internal_commands.ab3"
0003D232 <internal_commands.ab3@2797> INCLUDE "internal_commands.ab3"
0003D234 <internal_commands.ab3@2798> INCLUDE "internal_commands.ab3"
0003D244 <internal_commands.ab3@2799> INCLUDE "internal_commands.ab3"
0003D27B <internal_commands.ab3@2800> INCLUDE "internal_commands.ab3"
0003D27C <internal_commands.ab3@2801> INCLUDE "internal_commands.ab3"
0003D27C <AmiBlitz3.ab3@28466> INCLUDE "internal_commands.ab3"
0003D280 <AmiBlitz3.ab3@28471>            Dc.l cif_lt                                     ;ciflt
0003D284 <AmiBlitz3.ab3@28472>            Dc.l cif_eq                                     ;cifeq
0003D288 <AmiBlitz3.ab3@28473>            Dc.l cif_gt                                     ;cifgt
0003D28C <AmiBlitz3.ab3@28474>            Ds.l 1                                          ;0
0003D290 <AmiBlitz3.ab3@28475>            Dc.l cif_le                                     ;cifle
0003D294 <AmiBlitz3.ab3@28476>            Dc.l cif_ne                                     ;cifne
0003D298 <AmiBlitz3.ab3@28477>            Dc.l cif_le                                     ;cifge
0003D29C <AmiBlitz3.ab3@28478>            Ds.l 1                                          ;0
0003D2A0 <AmiBlitz3.ab3@28479>            Dc.l cif_ge                                     ;cifge
0003D2A4 <AmiBlitz3.ab3@28480>            Dc.l cif_ne                                     ;cifne
0003D2A8 <AmiBlitz3.ab3@28481>            Dc.l cif_ge                                     ;cifge
0003D2AC <AmiBlitz3.ab3@28482>            Ds.l 1                                          ;0
0003D2B0 <AmiBlitz3.ab3@28485>            Dc.l do_newtype                                 ;donewtype
0003D2B4 <AmiBlitz3.ab3@28486>            Dc.l do_end                                     ;doend
0003D2B8 <AmiBlitz3.ab3@28487>            Dc.l do_let                                     ;dolet
0003D2BC <AmiBlitz3.ab3@28488>            Dc.l do_dim                                     ;dodim
0003D2C0 <AmiBlitz3.ab3@28489>            Dc.l do_goto                                    ;dogoto
0003D2C4 <AmiBlitz3.ab3@28490>            Dc.l do_gosub                                   ;dogosub
0003D2C8 <AmiBlitz3.ab3@28491>            Dc.l do_return                                  ;doreturn
0003D2CC <AmiBlitz3.ab3@28492>            Dc.l do_statement                               ;dostatement
0003D2D0 <AmiBlitz3.ab3@28493>            Dc.l do_function                                ;dofunc
0003D2D4 <AmiBlitz3.ab3@28494>            Dc.l do_mousewait                               ;domwait
0003D2D8 <AmiBlitz3.ab3@28495>            Dc.l do_if                                      ;doif
0003D2DC <AmiBlitz3.ab3@28496>            Dc.l do_while                                   ;dowhile
0003D2E0 <AmiBlitz3.ab3@28497>            Dc.l do_Macro                                   ;domacro
0003D2E4 <AmiBlitz3.ab3@28498>            Dc.l do_select                                  ;doselect
0003D2E8 <AmiBlitz3.ab3@28499>            Dc.l do_case                                    ;docase
0003D2EC <AmiBlitz3.ab3@28500>            Dc.l do_default                                 ;dodefault
0003D2F0 <AmiBlitz3.ab3@28501>            Dc.l do_AsmExit                                 ;doasmexit
0003D2F4 <AmiBlitz3.ab3@28502>            Dc.l do_xinclude                                ;doxinclude
0003D2F8 <AmiBlitz3.ab3@28503>            Dc.l do_INCLUDE                                 ;doinclude
0003D2FC <AmiBlitz3.ab3@28504>            Dc.l do_syntax                                  ;syntaxerr
0003D300 <AmiBlitz3.ab3@28505>            Dc.l do_shared                                  ;doshared
0003D304 <AmiBlitz3.ab3@28506>            Dc.l do_for                                     ;dofor
0003D308 <AmiBlitz3.ab3@28507>            Dc.l do_next                                    ;donext
0003D30C <AmiBlitz3.ab3@28508>            Dc.l syntaxerr                                  ; To
0003D310 <AmiBlitz3.ab3@28509>            Dc.l syntaxerr                                  ; Step
0003D314 <AmiBlitz3.ab3@28510>            Dc.l do_data                                    ;dodata
0003D318 <AmiBlitz3.ab3@28511>            Dc.l do_read                                    ;doread
0003D31C <AmiBlitz3.ab3@28515>            Dc.l syntaxerr                                  ; CNIF
0003D320 <AmiBlitz3.ab3@28516>            Dc.l syntaxerr                                  ; CSIF
0003D324 <AmiBlitz3.ab3@28517>            Dc.l syntaxerr                                  ; CELSE
0003D328 <AmiBlitz3.ab3@28518>            Dc.l syntaxerr                                  ; CEND
0003D32C <AmiBlitz3.ab3@28519>            Dc.l do_cerr                                    ;docerr
0003D330 <AmiBlitz3.ab3@28520>            Dc.l do_then                                    ;dothen
0003D334 <AmiBlitz3.ab3@28521>            Dc.l do_else                                    ;doelse
0003D338 <AmiBlitz3.ab3@28522>            Dc.l do_even4                                   ;doeven4
0003D33C <AmiBlitz3.ab3@28523>            Dc.l do_even8                                   ;doeven8
0003D340 <AmiBlitz3.ab3@28525>            Dc.l do_dc                                      ;dodc
0003D344 <AmiBlitz3.ab3@28526>            Dc.l do_ds                                      ;dods
0003D348 <AmiBlitz3.ab3@28527>            Dc.l do_even                                    ;doeven
0003D34C <AmiBlitz3.ab3@28528>            Dc.l do_dcb                                     ;dodcb
0003D350 <AmiBlitz3.ab3@28529>            Dc.l do_setreg                                  ;dosetreg
0003D354 <AmiBlitz3.ab3@28530>            Dc.l do_IncBin                                  ;doincbin
0003D358 <AmiBlitz3.ab3@28531>            Dc.l do_free                                    ;dofree
0003D35C <AmiBlitz3.ab3@28532>            Dc.l do_use                                     ;douse
0003D360 <AmiBlitz3.ab3@28533>            Dc.l do_Stop                                    ;dostop
0003D364 <AmiBlitz3.ab3@28534>            Dc.l do_Cont                                    ;docont
0003D368 <AmiBlitz3.ab3@28535>            Dc.l syntaxerr                                  ;syntaxeer
0003D36C <AmiBlitz3.ab3@28536>            Dc.l do_SetInt                                  ;dosetint
0003D370 <AmiBlitz3.ab3@28537>            Dc.l do_ClrInt                                  ;doclrint
0003D374 <AmiBlitz3.ab3@28538>            Dc.l do_MaxLen                                  ;domaxlen
0003D378 <AmiBlitz3.ab3@28539>            Dc.l do_DEFTYPE                                 ;dodeftype
0003D37C <AmiBlitz3.ab3@28540>            Dc.l do_BLITZ                                   ;doblitz
0003D380 <AmiBlitz3.ab3@28541>            Dc.l do_AMIGA                                   ;doamiga
0003D384 <AmiBlitz3.ab3@28542>            Dc.l do_QAMIGA                                  ;doqamiga
0003D388 <AmiBlitz3.ab3@28543>            Dc.l do_VWait                                   ;dovwait
0003D38C <AmiBlitz3.ab3@28544>            Dc.l do_LibJsr                                  ;dolibjsr
0003D390 <AmiBlitz3.ab3@28545>            Dc.l do_TokeJsr                                 ;dotokejsr
0003D394 <AmiBlitz3.ab3@28546>            Dc.l do_BLibJsr                                 ;doblibjsr
0003D398 <AmiBlitz3.ab3@28547>            Dc.l _extb                                      ;syntaxerr
0003D39C <AmiBlitz3.ab3@28551>            Dc.l syntaxerr                                  ;syntaxerr      ;flash2 ; for list
0003D3A0 <AmiBlitz3.ab3@28552>            Dc.l do_SetErr                                  ;doseterr
0003D3A4 <AmiBlitz3.ab3@28553>            Dc.l do_ClrErr                                  ;doclrerr
0003D3A8 <AmiBlitz3.ab3@28554>            Dc.l syntaxerr                                  ;syntaxerr
0003D3AC <AmiBlitz3.ab3@28555>            Dc.l do_ErrFail                                 ;doerrfail
0003D3B0 <AmiBlitz3.ab3@28556>            Dc.l syntaxerr
0003D3B4 <AmiBlitz3.ab3@28557>            Dc.l syntaxerr                                  ;mod
0003D3B8 <AmiBlitz3.ab3@28558>            Dc.l syntaxerr                                  ;Pi
0003D3BC <AmiBlitz3.ab3@28559>            Dc.l do_Repeat                                  ;dorepeat
0003D3C0 <AmiBlitz3.ab3@28560>            Dc.l do_Until                                   ;dountil
0003D3C4 <AmiBlitz3.ab3@28561>            Dc.l do_PutReg                                  ;doputreg
0003D3C8 <AmiBlitz3.ab3@28562>            Dc.l do_Pop                                     ;dopop
0003D3CC <AmiBlitz3.ab3@28563>            Dc.l do_INCDIR                                  ;doincdir
0003D3D0 <AmiBlitz3.ab3@28564>            Dc.l mydo_Endif2                                ;mydoendif2
0003D3D4 <AmiBlitz3.ab3@28565>            Dc.l do_Wend                                    ;dowend
0003D3D8 <AmiBlitz3.ab3@28566>            Dc.l do_SysJsr                                  ;dosysjsr
0003D3DC <AmiBlitz3.ab3@28567>            Dc.l do_WBStartup                               ;dowbstartup
0003D3E0 <AmiBlitz3.ab3@28568>            Dc.l syntaxerr
0003D3E4 <AmiBlitz3.ab3@28569>            Dc.l do_Ongo                                    ;doongo
0003D3E8 <AmiBlitz3.ab3@28570>            Dc.l syntaxerr
0003D3EC <AmiBlitz3.ab3@28571>            Dc.l do_Forever                                 ;doforever
0003D3F0 <AmiBlitz3.ab3@28572>            Dc.l do_Restore                                 ;dorestore
0003D3F4 <AmiBlitz3.ab3@28573>            Dc.l do_Exchange                                ;doexchange
0003D3F8 <AmiBlitz3.ab3@28574>            Dc.l do_USEPATH                                 ;dousepath
0003D3FC <AmiBlitz3.ab3@28575>            Dc.l do_CloseEd                                 ;doclosed
0003D400 <AmiBlitz3.ab3@28576>            Dc.l do_NoCli                                   ;donocli
0003D404 <AmiBlitz3.ab3@28577>            Dc.l syntaxerr                                  ;syntaxerr
0003D408 <AmiBlitz3.ab3@28578>            Dc.l syntaxerr                                  ;syntaxerr
0003D40C <AmiBlitz3.ab3@28579>            Dc.l syntaxerr                                  ;syntaxerr
0003D410 <AmiBlitz3.ab3@28580>            Dc.l syntaxerr                                  ;syntaxerr
0003D414 <AmiBlitz3.ab3@28581>            Dc.l syntaxerr                                  ;syntaxerr
0003D418 <AmiBlitz3.ab3@28582>            Dc.l do_runerrson                               ;dorunerrson
0003D41C <AmiBlitz3.ab3@28583>            Dc.l do_runerrsoff                              ;dorunerrsoff
0003D420 <AmiBlitz3.ab3@28584>            Dc.l do_uselastpath
0003D424 <AmiBlitz3.ab3@28585>            Dc.l do_regload
0003D428 <AmiBlitz3.ab3@28586>            Dc.l do_regsave
0003D42C <AmiBlitz3.ab3@28587>            Dc.l do_Object
0003D430 <AmiBlitz3.ab3@28588>            Dc.l do_usepath2
0003D434 <AmiBlitz3.ab3@28589>            Dc.l do_LastRunErrsMode
0003D438 <AmiBlitz3.ab3@28612> menu_items:Dc.l menu_compile_run                                ;menuadds oreg source
0003D43C <AmiBlitz3.ab3@28613>            Dc.l menu_run
0003D440 <AmiBlitz3.ab3@28614>            Dc.l menu_createexecutable
0003D444 <AmiBlitz3.ab3@28615>            Dc.l menu_dummyfunc                                  ;was menu_compileroptions
0003D448 <AmiBlitz3.ab3@28616>            Dc.l menu_createresidentfile
0003D44C <AmiBlitz3.ab3@28617> 
0003D450 <AmiBlitz3.ab3@28618> 
0003D454 <AmiBlitz3.ab3@28619>            Dc.l menu_dummyfunc                                  ;was menu_calculator
0003D458 <AmiBlitz3.ab3@28620>            Dc.l menu_reloadlibs
0003D45C <AmiBlitz3.ab3@28621>            Dc.l menu_loaddebugmodule
0003D460 <AmiBlitz3.ab3@28622>            Dc.l menu_dummyfunc
0003D464 <AmiBlitz3.ab3@28623>            Dc.l menu_newcreate
0003D468 <AmiBlitz3.ab3@28624>            Dc.l menu_dummyfunc
0003D46C <AmiBlitz3.ab3@28625>            Dc.l menu_toggledebug
0003D470 <AmiBlitz3.ab3@28626>            Dc.l menu_dummyfunc
0003D474 <AmiBlitz3.ab3@28627>            Dc.l menu_dummyfunc
0003D49E <AmiBlitz3.ab3@28632>   !basic
0003D500 <AmiBlitz3.ab3@28633>   error{!TRANS{"Invalid AmiBlitz3 menu item called!"} }
0003D51E <AmiBlitz3.ab3@28634>   !asm
0003D520 <AmiBlitz3.ab3@28635> RTS
0003D521 <AmiBlitz3.ab3@28641> set_autorun:               Dc.b $00
0003D526 <AmiBlitz3.ab3@28642> autorun:                   Dc.b $80,$01,$01,$00,$01
0003D527 <AmiBlitz3.ab3@28644> set_interruptcheck:        Dc.b $00
0003D52C <AmiBlitz3.ab3@28645> interruptcheck             Dc.b $80,$01,$01,$00,$01
0003D52D <AmiBlitz3.ab3@28647> set_assemblercheck:        Ds.b 1
0003D532 <AmiBlitz3.ab3@28648> assemblercheck:            Dc.b $00,$01,$01,$00,$01
0003D533 <AmiBlitz3.ab3@28650> set_overflowcheck:         Ds.b 1
0003D538 <AmiBlitz3.ab3@28651> overflowcheck:             Dc.b $00,$01,$01,$00,$01
0003D53E <AmiBlitz3.ab3@28653> default_obsolete:          Dc.b $00,$80,$01,$01,$00,$01
0003D544 <AmiBlitz3.ab3@28654> default_interruptcheck:    Dc.b $00,$80,$01,$01,$00,$01
0003D54A <AmiBlitz3.ab3@28655> default_overflowcheck:     Dc.b $00,$80,$01,$01,$00,$01
0003D54C <AmiBlitz3.ab3@28656> Even4
0003D558 <AmiBlitz3.ab3@28659> tsthead:                   Dc.l $000003F3,$00000000,$00000001
0003D560 <AmiBlitz3.ab3@28660>                            Dc.l $00000000,$00000000
0003D568 <AmiBlitz3.ab3@28661> tstsize1:                  Dc.l $00000100,$000003E9
0003D56C <AmiBlitz3.ab3@28662> tstsize2:                  Dc.l $00000100
0003D570 <AmiBlitz3.ab3@28663> tstend:                    Dc.l $000003EC
0003D578 <AmiBlitz3.ab3@28664> tstsize3:                  Ds.l 2
0003D57C <AmiBlitz3.ab3@28665> tstdone:                   Dc.l $000003F2
0003D580 <AmiBlitz3.ab3@28668> edstruct:                  Dc.l tokens                     ;data for ted
0003D584 <AmiBlitz3.ab3@28672>                            Dc.l 0
0003D588 <AmiBlitz3.ab3@28674>                            Dc.l read_xtrafile              ;load .xtra routine
0003D58C <AmiBlitz3.ab3@28675>                            Dc.l write_xtrafile             ;save .xtra routine
0003D590 <AmiBlitz3.ab3@28676>                            Dc.l call_menuentry             ;Menu Routine
0003D594 <AmiBlitz3.ab3@28677>                            Ds.l 1                          ;cleanup (?)
0003D598 <AmiBlitz3.ab3@28678>                            Dc.b ":",34,".;"
0003D694 <AmiBlitz3.ab3@28681> 
0003D774 <AmiBlitz3.ab3@28682>                            Ds.l 56
0003D776 <AmiBlitz3.ab3@28687> lslimm:                    Dc.b $E1,$48                                             ;LSL.W   #8,D0
0003D77A <AmiBlitz3.ab3@28690> use:                       Dc.b $26,$6D,$00,$00                                     ;MOVEA.L $0000(A5),A3
0003D77C <AmiBlitz3.ab3@28691>                            Dc.b $D6,$C0                                             ;ADDA.W  D0,A3
0003D780 <AmiBlitz3.ab3@28692>                            Dc.b $2B,$4B,$00,$00                                     ;MOVE.L  A3,$0000(A5)
0003D786 <AmiBlitz3.ab3@28696> beginarr:                  Dc.b $20,$3C,$00,$00,$00,$00                             ;MOVE.L  #$00000000,D0
0003D788 <AmiBlitz3.ab3@28700>                            Dc.b $C0,$C1                                             ;MULU.W  D1,D0
0003D78C <AmiBlitz3.ab3@28703> putarr:                    Dc.b $2B,$40 :                            Dc.b $00,$00   ;MOVE.L  D0,$0000(A5)
0003D790 <AmiBlitz3.ab3@28706> doarr:                     Dc.b $34,$3C,$00,$00                                     ;MOVE.W  #$0000,D2
0003D794 <AmiBlitz3.ab3@28707>                            Dc.b $36,$3C,$00,$00                                     ;MOVE.W  #$0000,D3
0003D796 <AmiBlitz3.ab3@28713>                            Dc.b $4A,$40                                             ;TST.W   D0
0003D798 <AmiBlitz3.ab3@28717>                            Dc.b $4A,$80                                             ;TST.L   D0
0003D79A <AmiBlitz3.ab3@28720> nops8:                     Dc.b $4E,$71                                             ;NOP
0003D79C <AmiBlitz3.ab3@28721>                            Dc.b $4E,$71                                             ;NOP
0003D79E <AmiBlitz3.ab3@28722>                            Dc.b $4E,$71                                             ;NOP
0003D7A0 <AmiBlitz3.ab3@28723>                            Dc.b $4E,$71                                             ;NOP
0003D7A2 <AmiBlitz3.ab3@28724> nops4:                     Dc.b $4E,$71                                             ;NOP
0003D7A4 <AmiBlitz3.ab3@28726>                            Dc.b $4E,$71                                             ;NOP
0003D7A6 <AmiBlitz3.ab3@28727>                            Dc.b $4E,$71                                             ;NOP
0003D7A8 <AmiBlitz3.ab3@28728>                            Dc.b $4E,$71                                             ;NOP
0003D7AC <AmiBlitz3.ab3@28732> dataget:                   Dc.b $26,$6D :                            Dc.b $00,$00   ;MOVEA.L $0000(A5),A3
0003D7B0 <AmiBlitz3.ab3@28735> dataput:                   Dc.b $2B,$4B :                            Dc.b $00,$00   ;MOVE.L  A3,$0000(A5)
0003D7B2 <AmiBlitz3.ab3@28738> stlenget:                  Dc.b $2F,$1B                                             ;MOVE.L  (A3)+,-(A7)
0003D7B4 <AmiBlitz3.ab3@28741> stalign:                   Dc.b $52,$4B                                             ;ADDQ.W  #1,A3
0003D7B6 <AmiBlitz3.ab3@28742>                            Dc.b $C1,$8B                                             ;EXG D0,A3
0003D7BA <AmiBlitz3.ab3@28743>                            Dc.b $08,$80,$00,$00                                     ;BCLR    #0,D0
0003D7BC <AmiBlitz3.ab3@28744>                            Dc.b $C1,$8B                                             ;EXG D0,A3
0003D7BE <AmiBlitz3.ab3@28750> dataletb:                  Dc.b $52,$4B                                             ;ADDQ.W  #1,A3
0003D7C2 <AmiBlitz3.ab3@28751>                            Dc.b $1B,$5B,$00,$00                                     ;MOVE.B  (A3)+,$0000(A5)
0003D7C4 <AmiBlitz3.ab3@28756> dataletbl:                 Dc.b $52,$4B                                             ;ADDQ.W  #1,A3
0003D7C8 <AmiBlitz3.ab3@28757>                            Dc.b $19,$5B,$00,$00                                     ;MOVE.B  (A3)+,$0000(A4)
0003D7CA <AmiBlitz3.ab3@28761> dataletb2:                 Dc.b $52,$4B                                             ;ADDQ.W  #1,A3
0003D7CC <AmiBlitz3.ab3@28762>                            Dc.b $14,$9B                                             ;MOVE.B  (A3)+,(A2)
0003D7D0 <AmiBlitz3.ab3@28768> dataletw:                  Dc.b $3B,$5B,$00,$00                                     ;MOVE.W  (A3)+,$0000(A5)
0003D7D2 <AmiBlitz3.ab3@28769>                            Dc.b $34,$9B                                             ;MOVE.W  (A3)+,(A2)
0003D7D6 <AmiBlitz3.ab3@28770>                            Dc.b $39,$5B,$00,$00                                     ;MOVE.W  (A3)+,$0000(A4)
0003D7DA <AmiBlitz3.ab3@28774> dataletl:                  Dc.b $2B,$5B,$00,$00                                     ;MOVE.L  (A3)+,$0000(A5)
0003D7DC <AmiBlitz3.ab3@28775>                            Dc.b $24,$9B                                             ;MOVE.L  (A3)+,(A2)
0003D7E0 <AmiBlitz3.ab3@28776>                            Dc.b $29,$5B,$00,$00                                     ;MOVE.L  (A3)+,$0000(A4)
0003D7E2 <AmiBlitz3.ab3@28779> nextfixw:                  Dc.b $50,$4F                                             ;ADDQ.W  #8,A7
0003D7E6 <AmiBlitz3.ab3@28782> nextfixw2:                 Dc.b $4F,$EF,$00,$0A                                     ;LEA $000A(A7),A7
0003D7EA <AmiBlitz3.ab3@28785> nextfixl:                  Dc.b $4F,$EF,$00,$0C                                     ;LEA $000C(A7),A7
0003D7EE <AmiBlitz3.ab3@28788> nextfixl2:                 Dc.b $4F,$EF,$00,$0E                                     ;LEA $000E(A7),A7
0003D7F2 <AmiBlitz3.ab3@28792>                            Dc.b $24,$6F,$00,$04                                     ;MOVEA.L $0004(A7),A2
0003D7F4 <AmiBlitz3.ab3@28793>                            Dc.b $30,$17                                             ;MOVE.W  (A7),D0
0003D7F6 <AmiBlitz3.ab3@28794>                            Dc.b $D1,$12                                             ;ADD.B   D0,(A2)
0003D7FA <AmiBlitz3.ab3@28799>                            Dc.b $24,$6F,$00,$04                                     ;MOVEA.L $0004(A7),A2
0003D7FC <AmiBlitz3.ab3@28800>                            Dc.b $30,$17                                             ;MOVE.W  (A7),D0
0003D7FE <AmiBlitz3.ab3@28801>                            Dc.b $D1,$52                                             ;ADD.W   D0,(A2)
0003D802 <AmiBlitz3.ab3@28806>                            Dc.b $24,$6F,$00,$08                                     ;MOVEA.L $0008(A7),A2
0003D804 <AmiBlitz3.ab3@28807>                            Dc.b $20,$17                                             ;MOVE.L  (A7),D0
0003D806 <AmiBlitz3.ab3@28808>                            Dc.b $D1,$92                                             ;ADD.L   D0,(A2)
0003D80A <AmiBlitz3.ab3@28813>                            Dc.b $24,$6F,$00,$08                                     ;MOVEA.L $0008(A7),A2
0003D80C <AmiBlitz3.ab3@28814>                            Dc.b $20,$12                                             ;MOVE.L  (A2),D0
0003D80E <AmiBlitz3.ab3@28815>                            Dc.b $22,$17                                             ;MOVE.L  (A7),D1
0003D812 <AmiBlitz3.ab3@28816>                            Dc.b $4E,$AE,$FF,$BE                                     ;JSR -$0042(A6)
0003D814 <AmiBlitz3.ab3@28817>                            Dc.b $24,$80                                             ;MOVE.L  D0,(A2)
0003D818 <AmiBlitz3.ab3@28822>                            Dc.b $24,$6F,$00,$04                                     ;MOVEA.L $0004(A7),A2
0003D81A <AmiBlitz3.ab3@28823>                            Dc.b $10,$12                                             ;MOVE.B  (A2),D0
0003D81E <AmiBlitz3.ab3@28824>                            Dc.b $32,$2F,$00,$02                                     ;MOVE.W  $0002(A7),D1
0003D820 <AmiBlitz3.ab3@28825>                            Dc.b $4A,$57                                             ;TST.W   (A7)
0003D824 <AmiBlitz3.ab3@28826>                            Dc.b $6A,$00,$00,$04                                     ;BPL.W   L000001         ;.skip org source
0003D826 <AmiBlitz3.ab3@28827>                            Dc.b $C1,$41                                             ;EXG D0,D1
0003D828 <AmiBlitz3.ab3@28830>                            Dc.b $B0,$01                                             ;CMP.B   D1,D0
0003D82C <AmiBlitz3.ab3@28835>                            Dc.b $24,$6F,$00,$04                                     ;MOVEA.L $0004(A7),A2
0003D82E <AmiBlitz3.ab3@28836>                            Dc.b $30,$12                                             ;MOVE.W  (A2),D0
0003D832 <AmiBlitz3.ab3@28837>                            Dc.b $32,$2F,$00,$02                                     ;MOVE.W  $0002(A7),D1
0003D834 <AmiBlitz3.ab3@28838>                            Dc.b $4A,$57                                             ;TST.W   (A7)
0003D838 <AmiBlitz3.ab3@28839>                            Dc.b $6A,$00,$00,$04                                     ;BPL.W   L000002         ;.skip org source
0003D83A <AmiBlitz3.ab3@28840>                            Dc.b $C1,$41                                             ;EXG D0,D1
0003D83C <AmiBlitz3.ab3@28843>                            Dc.b $B0,$41                                             ;CMP.W   D1,D0
0003D840 <AmiBlitz3.ab3@28848>                            Dc.b $24,$6F,$00,$08                                     ;MOVEA.L $0008(A7),A2
0003D842 <AmiBlitz3.ab3@28849>                            Dc.b $20,$12                                             ;MOVE.L  (A2),D0
0003D846 <AmiBlitz3.ab3@28850>                            Dc.b $22,$2F,$00,$04                                     ;MOVE.L  $0004(A7),D1
0003D848 <AmiBlitz3.ab3@28851>                            Dc.b $4A,$57                                             ;TST.W   (A7)
0003D84C <AmiBlitz3.ab3@28852>                            Dc.b $6A,$00,$00,$04                                     ;BPL.W   L000003         ;.skip org source
0003D84E <AmiBlitz3.ab3@28853>                            Dc.b $C1,$41                                             ;EXG D0,D1
0003D850 <AmiBlitz3.ab3@28856>                            Dc.b $B0,$81                                             ;CMP.L   D1,D0
0003D854 <AmiBlitz3.ab3@28861>                            Dc.b $24,$6F,$00,$08                                     ;MOVEA.L $0008(A7),A2
0003D856 <AmiBlitz3.ab3@28862>                            Dc.b $20,$12                                             ;MOVE.L  (A2),D0
0003D85A <AmiBlitz3.ab3@28863>                            Dc.b $22,$2F,$00,$04                                     ;MOVE.L  $0004(A7),D1
0003D860 <AmiBlitz3.ab3@28864>                            Dc.b $08,$2F,$00,$07,$00,$03                             ;BTST    #7,$0003(A7)
0003D864 <AmiBlitz3.ab3@28865>                            Dc.b $67,$00,$00,$04                                     ;BEQ.W   L000004
0003D866 <AmiBlitz3.ab3@28866>                            Dc.b $C1,$41                                             ;EXG D0,D1
0003D86A <AmiBlitz3.ab3@28873>                            Dc.b $4E,$AE,$FF,$D6                                     ;JSR -$002A(A6)
0003D86C <AmiBlitz3.ab3@28877> swapd0:                    Dc.b $48,$40                                             ;SWAP    D0
0003D86E <AmiBlitz3.ab3@28880> pushindex:                 Dc.b $2F,$0A                                             ;MOVE.L  A2,-(A7)
0003D872 <AmiBlitz3.ab3@28883> leaamp:                    Dc.b $45,$ED :                            Dc.b $00,$00   ;LEA $0000(A5),A2
0003D874 <AmiBlitz3.ab3@28884> leaamp2:                   Dc.b $20,$0A                                             ;MOVE.L  A2,D0
0003D878 <AmiBlitz3.ab3@28887> leaampl:                   Dc.b $45,$EC :                            Dc.b $00,$00   ;LEA $0000(A4),A2
0003D87A <AmiBlitz3.ab3@28890> stamp:                     Dc.b $20,$12                                             ;MOVE.L  (A2),D0
0003D87E <AmiBlitz3.ab3@28893> stamp2:                    Dc.b $24,$6D :                            Dc.b $00,$00   ;MOVEA.L $0000(A5),A2
0003D880 <AmiBlitz3.ab3@28897>                            Dc.b $58,$4F                                             ;ADDQ.W  #4,A7
0003D882 <AmiBlitz3.ab3@28900> pushd0wd:                  Dc.b $3F,$00                                             ;MOVE.W  D0,-(A7)
0003D884 <AmiBlitz3.ab3@28903> pushd0l:                   Dc.b $2F,$00                                             ;MOVE.L  D0,-(A7)
0003D888 <AmiBlitz3.ab3@28906> movenumrep:                Dc.b $3E,$3C :                            Dc.b $00,$00   ;MOVE.W  #$0000,D7
0003D88C <AmiBlitz3.ab3@28909> preplibst:                 Dc.b $45,$EF :                            Dc.b $00,$00   ;LEA $0000(A7),A2
0003D890 <AmiBlitz3.ab3@28912> fixlibst:                  Dc.b $4F,$EF :                            Dc.b $00,$00   ;LEA $0000(A7),A7
0003D892 <AmiBlitz3.ab3@28915> pushdn:                    Dc.b $2F,$00                                             ;MOVE.L  D0,-(A7)
0003D894 <AmiBlitz3.ab3@28918> movea3a7:                  Dc.b $2F,$0B                                             ;MOVE.L  A3,-(A7)
0003D898 <AmiBlitz3.ab3@28921> movestst2:                 Dc.b $20,$2F :                            Dc.b $00,$06   ;MOVE.L  $0006(A7),D0
0003D89E <AmiBlitz3.ab3@28922>                            Dc.b $3F,$6F,$00,$04,$00,$08                             ;MOVE.W  $0004(A7),$0008(A7)
0003D8A0 <AmiBlitz3.ab3@28923>                            Dc.b $2E,$9F                                             ;MOVE.L  (A7)+,(A7)
0003D8A4 <AmiBlitz3.ab3@28927> movea7dn:                  Dc.b $20,$2F :                            Dc.b $00,$04   ;MOVE.L  $0004(A7),D0
0003D8A6 <AmiBlitz3.ab3@28928>                            Dc.b $2E,$9F                                             ;MOVE.L  (A7)+,(A7)
0003D8A8 <AmiBlitz3.ab3@28932> moved0a3:                  Dc.b $26,$40                                             ;MOVEA.L D0,A3
0003D8AC <AmiBlitz3.ab3@28935> movestdn:                  Dc.b $20,$2D :                            Dc.b $00,$00   ;MOVE.L  $0000(A5),D0
0003D8AE <AmiBlitz3.ab3@28939>                            Dc.b $20,$0B                                             ;MOVE.L  A3,D0
0003D8B0 <AmiBlitz3.ab3@28943>                            Dc.b $2F,$00                                             ;MOVE.L  D0,-(A7)
0003D8B2 <AmiBlitz3.ab3@28947>                            Dc.b $20,$1F                                             ;MOVE.L  (A7)+,D0
0003D8B6 <AmiBlitz3.ab3@28950> moverts:                   Dc.b $2F,$57 :                            Dc.b $00,$00   ;MOVE.L  (A7),$0000(A7)
0003D8BA <AmiBlitz3.ab3@28953> fixstack:                  Dc.b $4F,$EF :                            Dc.b $00,$00   ;LEA $0000(A7),A7
0003D8BC <AmiBlitz3.ab3@28956> fixq:                      Dc.b $50,$4F                                             ;ADDQ.W  #8,A7
0003D8BE <AmiBlitz3.ab3@28959> fix1:                      Dc.b $2E,$9F                                             ;MOVE.L  (A7)+,(A7)
0003D8C0 <AmiBlitz3.ab3@28962> movedna3:                  Dc.b $26,$40                                             ;MOVEA.L D0,A3
0003D8C4 <AmiBlitz3.ab3@28965> least:                     Dc.b $45,$EC :                            Dc.b $00,$00   ;LEA $0000(A4),A2
0003D8C8 <AmiBlitz3.ab3@28968> funcst:                    Dc.b $2F,$2C :                            Dc.b $00,$00   ;MOVE.L  $0000(A4),-(A7)
0003D8CA <AmiBlitz3.ab3@28971> addq4a2:                   Dc.b $58,$4A                                             ;ADDQ.W  #4,A2
0003D8CC <AmiBlitz3.ab3@28975>                            Dc.b $2F,$0B                                             ;MOVE.L  A3,-(A7)
0003D8D0 <AmiBlitz3.ab3@28978>                            Dc.b $2B,$4B,$00,$00                                     ;MOVE.L  A3,$0000(A5)
0003D8D2 <AmiBlitz3.ab3@28984>                            Dc.b $26,$5F                                             ;MOVEA.L (A7)+,A3
0003D8D6 <AmiBlitz3.ab3@28987>                            Dc.b $2B,$4B,$00,$00                                     ;MOVE.L  A3,$0000(A5)
0003D8D8 <AmiBlitz3.ab3@28993>                            Dc.b $CB,$4C                                             ;EXG A5,A4
0003D8DC <AmiBlitz3.ab3@28997> linksize:                  Dc.b $4E,$54 :                            Dc.b $00,$00   ;LINK    A4,#-$0000
0003D8DE <AmiBlitz3.ab3@29000> unlinka4:                  Dc.b $4E,$5C                                             ;UNLK    A4
0003D8E0 <AmiBlitz3.ab3@29004>                            Dc.b $2F,$0A                                             ;MOVE.L  A2,-(A7)
0003D8E2 <AmiBlitz3.ab3@29008>                            Dc.b $24,$5F                                             ;MOVEA.L (A7)+,A2
0003D8E8 <AmiBlitz3.ab3@29011> gotocode:                  Dc.b $4E,$F9,$00,$00,$00,$00                             ;JMP $00000000
0003D8EE <AmiBlitz3.ab3@29014> gosubcode:                 Dc.b $4E,$B9,$00,$00,$00,$00                             ;JSR $00000000
0003D8F6 <AmiBlitz3.ab3@29018> mwait:                     Dc.b $08,$39,$00,$06,$00,$BF,$E0,$01                     ;BTST    #6,$00BFE001
0003D8FA <AmiBlitz3.ab3@29019>                            Dc.b $66,$00,$FF,$F6                                     ;BNE.W   L000005       ;mwait: org source
0003D8FC <AmiBlitz3.ab3@29023> libreg:                    Dc.b $20,$00                                             ;MOVE.L  D0,D0
0003D900 <AmiBlitz3.ab3@29026> libbase:                   Dc.b $2C,$6D :                            Dc.b $00,$00   ;MOVEA.L $0000(A5),A6
0003D904 <AmiBlitz3.ab3@29029> libjsr:                    Dc.b $4E,$AE :                            Dc.b $00,$00   ;JSR $0000(A6)
0003D908 <AmiBlitz3.ab3@29032> regtransd:                 Dc.b $20,$2D,$00,$00                                     ;MOVE.L  $0000(A5),D0
0003D90C <AmiBlitz3.ab3@29033> regtransa:                 Dc.b $20,$6D,$00,$00                                     ;MOVEA.L $0000(A5),A0
0003D910 <AmiBlitz3.ab3@29037>                            Dc.b $26,$7C,$00,$00                                     ;MOVEA.L #$00000000,A3
0003D914 <AmiBlitz3.ab3@29039>                            Dc.l $3F1B                                               ;MOVE.W  (A3)+,-(A7)
0003D916 <AmiBlitz3.ab3@29042> movea2dn:                  Dc.b $20,$12                                             ;MOVE.L  (A2),D0
0003D91A <AmiBlitz3.ab3@29045> moved3a5dn:                Dc.b $20,$2D,$00,$00                                     ;MOVE.L  $0000(A5),D0
0003D91C <AmiBlitz3.ab3@29048> stvarget2:                 Dc.b $70,$00                                             ;MOVEQ   #$00,D0
0003D91E <AmiBlitz3.ab3@29049>                            Dc.b $2F,$00                                             ;MOVE.L  D0,-(A7)
0003D920 <AmiBlitz3.ab3@29050>                            Dc.b $4A,$92                                             ;TST.L   (A2)
0003D924 <AmiBlitz3.ab3@29051> 
0003D926 <AmiBlitz3.ab3@29052>                            Dc.b $20,$52                                             ;MOVEA.L (A2),A0
0003D928 <AmiBlitz3.ab3@29053>                            Dc.b $59,$48                                             ;SUBQ.W  #4,A0
0003D92A <AmiBlitz3.ab3@29054>                            Dc.b $2E,$98                                             ;MOVE.L  (A0)+,(A7)
0003D930 <AmiBlitz3.ab3@29056>                            Dc.b $4E,$B9,$00,$00,$00,$00                             ;JSR $00000000
0003D932 <AmiBlitz3.ab3@29061> addcode:                   Dc.b $20,$1F                                             ;MOVE.L  (A7)+,D0
0003D934 <AmiBlitz3.ab3@29062>                            Dc.b $D1,$97                                             ;ADD.L   D0,(A7)
0003D936 <AmiBlitz3.ab3@29066> pushlen:                   Dc.b $2F,$18                                             ;MOVE.L  (A0)+,-(A7)
0003D93A <AmiBlitz3.ab3@29069> leaa5d3a2:                 Dc.b $45,$ED :                            Dc.b $00,$00   ;LEA $0000(A5),A2
0003D93C <AmiBlitz3.ab3@29072> pusha2:                    Dc.b $2F,$0A                                             ;MOVE.L  A2,-(A7)
0003D93E <AmiBlitz3.ab3@29076>                            Dc.b $24,$57                                             ;MOVEA.L (A7),A2
0003D940 <AmiBlitz3.ab3@29079> pulla2:                    Dc.b $24,$5F                                             ;MOVEA.L (A7)+,A2
0003D944 <AmiBlitz3.ab3@29082> pulla2st:                  Dc.b $24,$6F,$00,$04                                     ;MOVEA.L $0004(A7),A2
0003D946 <AmiBlitz3.ab3@29083>                            Dc.b $2E,$9F                                             ;MOVE.L  (A7)+,(A7)
0003D94A <AmiBlitz3.ab3@29087> pusha3:                    Dc.b $2F,$2D :                            Dc.b $00,$00   ;MOVE.L  $0000(A5),-(A7)
0003D94E <AmiBlitz3.ab3@29088> pusha32:                   Dc.b $2B,$4B :                            Dc.b $00,$00   ;MOVE.L  A3,$0000(A5)
0003D952 <AmiBlitz3.ab3@29092> pulla3:                    Dc.b $2B,$5F :                            Dc.b $00,$00   ;MOVE.L  (A7)+,$0000(A5)
0003D956 <AmiBlitz3.ab3@29096> geta3:                     Dc.b $26,$6D :                            Dc.b $00,$00   ;MOVEA.L $0000(A5),A3
0003D95C <AmiBlitz3.ab3@29100> numtoa0:                   Dc.b $20,$7C,$00,$00,$00,$00                             ;MOVEA.L #$00000000,A0
0003D962 <AmiBlitz3.ab3@29103> numtoa2:                   Dc.b $24,$7C,$00,$00,$00,$00                             ;MOVEA.L #$00000000,A2
0003D966 <AmiBlitz3.ab3@29107> endarray:                  Dc.b $38,$3C :                            Dc.b $00,$00   ;MOVE.W  #$0000,D4
0003D96A <AmiBlitz3.ab3@29111>                            Dc.b $34,$3C,$00,$00                                     ;MOVE.W  #$0000,D2
0003D96E <AmiBlitz3.ab3@29112>                            Dc.b $36,$3C,$00,$00                                     ;MOVE.W  #$0000,D3
0003D974 <AmiBlitz3.ab3@29117>                            Dc.b $20,$3C,$00,$00,$00,$04                             ;MOVE.L  #$00000004,D0
0003D978 <AmiBlitz3.ab3@29122>                            Dc.b $2B,$40,$00,$00                                     ;MOVE.L  D0,$0000(A5)
0003D97A <AmiBlitz3.ab3@29127>                            Dc.b $C0,$C1                                             ;MULU.W  D1,D0
0003D97E <AmiBlitz3.ab3@29131>                            Dc.b $2B,$40,$00,$00                                     ;MOVE.L  D0,$0000(A5)
0003D980 <AmiBlitz3.ab3@29135> movea0:                    Dc.b $24,$52                                             ;MOVEA.L (A2),A2
0003D982 <AmiBlitz3.ab3@29138> adda0a0:                   Dc.b $D5,$CA                                             ;ADDA.L  A2,A2
0003D984 <AmiBlitz3.ab3@29139>                            Dc.b $D5,$CA                                             ;ADDA.L  A2,A2
0003D988 <AmiBlitz3.ab3@29143>                            Dc.b $2C,$78,$00,$04                                     ;MOVEA.L $0004,A6
0003D98C <AmiBlitz3.ab3@29147> movea5a0:                  Dc.b $24,$6D :                            Dc.b $00,$00   ;MOVEA.L $0000(A5),A2
0003D990 <AmiBlitz3.ab3@29150> movea0a0:                  Dc.b $24,$6A :                            Dc.b $00,$00   ;MOVEA.L $0000(A2),A2
0003D992 <AmiBlitz3.ab3@29153> addqa0:                    Dc.b $52,$4A                                             ;ADDQ.W  #1,A2
0003D996 <AmiBlitz3.ab3@29156> leaa0a0:                   Dc.b $45,$EA :                            Dc.b $00,$00   ;LEA $0000(A2),A2
0003D998 <AmiBlitz3.ab3@29159> addrega2:                  Dc.b $D4,$C0                                             ;ADDA.W  D0,A2
0003D9A1 <AmiBlitz3.ab3@29163>                            Dc.b "ram:test",0
0003D9A2 <AmiBlitz3.ab3@29164> Even
0003D9A6 <AmiBlitz3.ab3@29168>                            Dc.l  0                          ;was  Ds.w 3 org source
0003D9A8 <AmiBlitz3.ab3@29170>                            Dc.w  0
0003D9AC <AmiBlitz3.ab3@29173> _mathffpbase:              Ds.l 1                           ;maths org source
0003D9AE <AmiBlitz3.ab3@29174> regnum:                    Ds.w 1                           ;regat org source       ;register being used!
0003D9B0 <AmiBlitz3.ab3@29175> typelen:                   Ds.w 1
0003D9B4 <AmiBlitz3.ab3@29176> prevtype:                  Ds.l 1
0003D9B8 <AmiBlitz3.ab3@29177> lastsourcepos:             Ds.l 1                           ;prevloc org source
0003D9BA <AmiBlitz3.ab3@29178> lastchar:                  Ds.w 1
0003D9BE <AmiBlitz3.ab3@29179> thistype:                  Ds.l 1
0003D9C2 <AmiBlitz3.ab3@29180> errstack:                  Ds.l 1
0003D9C6 <AmiBlitz3.ab3@29181> errcont:                   Ds.l 1
0003D9C8 <AmiBlitz3.ab3@29182> linemode:                  Ds.w 1                          ;0 if norm, 1 if newtype
0003D9CA <AmiBlitz3.ab3@29183> linesleft:                 Ds.w 1
0003D9CE <AmiBlitz3.ab3@29184> sourceline:                Ds.l 1                          ;thisitem org source
0003D9D2 <AmiBlitz3.ab3@29185> varbase:                   Ds.l 1                          ;firstvar org source
0003D9D6 <AmiBlitz3.ab3@29186> alllocals:                 Ds.l 1
0003D9DA <AmiBlitz3.ab3@29187> firstlocal:                Ds.l 1
0003D9DE <AmiBlitz3.ab3@29188> firstglob:                 Ds.l 1
0003D9E0 <AmiBlitz3.ab3@29189> globalvarpointer:          Ds.w 1                          ;varoff org source
0003D9E2 <AmiBlitz3.ab3@29190> locvaroff:                 Ds.w 1
0003D9E6 <AmiBlitz3.ab3@29191> firstitem_:                 Ds.l 1
0003D9E8 <AmiBlitz3.ab3@29192> numlines_org:              Ds.w 1                          ;numlines org source
0003D9EA <AmiBlitz3.ab3@29193> returncode_org:            Ds.w 1                          ;returncode org source
0003D9EE <AmiBlitz3.ab3@29194> firstiff:                  Ds.l 1                          ;firstif org source
0003D9F2 <AmiBlitz3.ab3@29195> ptr_seg_ped:               Ds.l 1                          ;segadd org source
0003DBF2 <AmiBlitz3.ab3@29196> str_pedfile:               Ds.b #MAX_STRINGSIZE            ;segname org source
0003DC02 <AmiBlitz3.ab3@29197> str_mathffpname:           Dc.b "mathffp.library",0 : Even ;mathsname org source
0003DE02 <AmiBlitz3.ab3@29198> str_libfilename:           Ds.b #MAX_STRINGSIZE
0003E002 <AmiBlitz3.ab3@29199> str_path_userlibs:         Ds.b #MAX_STRINGSIZE
0003E202 <AmiBlitz3.ab3@29200> str_defaultdbug:           Ds.b #MAX_STRINGSIZE            ;debugname org source
0003E206 <AmiBlitz3.ab3@29202> ptr_seg_debugger:          Ds.l 1                          ;dseg org source
0003E406 <AmiBlitz3.ab3@29203> str_blitz3assign:          Ds.b #MAX_STRINGSIZE            ;dpath org source
0003E606 <AmiBlitz3.ab3@29205> str_path_acidlibs:         Ds.b #MAX_STRINGSIZE            ;acidname org source
0003E60A <AmiBlitz3.ab3@29206> size_acidlibs:             Ds.l 1                          ;acidlibs org source
0003E80A <AmiBlitz3.ab3@29207> str_path_deflibs:          Ds.b #MAX_STRINGSIZE            ;defname org source
0003E80E <AmiBlitz3.ab3@29208> size_deflibs:              Ds.l 1                          ;deflibs org source
0003EA0E <AmiBlitz3.ab3@29209> str_tempfilename:          Ds.b #MAX_STRINGSIZE
0003EC0E <AmiBlitz3.ab3@29211> str_temp_debugmodulename:  Ds.b #MAX_STRINGSIZE            ;dname org source
0003EC12 <AmiBlitz3.ab3@29212> ptr_temp_debugmodule:      Ds.l 1                          ;dname2 org source
0003EE12 <AmiBlitz3.ab3@29214> str_path_includes:         Ds.b #MAX_STRINGSIZE            ;acidname org source
0003EE16 <AmiBlitz3.ab3@29220>   Dc.b $E3,$10,$00,$01                                     ;icondata  
0003EE1A <AmiBlitz3.ab3@29221>   Dc.b $00,$00,$00,$00
0003EE1E <AmiBlitz3.ab3@29222>   Dc.b $00,$19,$00,$11
0003EE22 <AmiBlitz3.ab3@29223>   Dc.b $00,$2E,$00,$18
0003EE26 <AmiBlitz3.ab3@29224>   Dc.b $00,$04,$00,$03
0003EE2A <AmiBlitz3.ab3@29225>   Dc.b $00,$01,$00,$22
0003EE2E <AmiBlitz3.ab3@29226>   Dc.b $73,$68,$00,$00
0003EE32 <AmiBlitz3.ab3@29227>   Dc.b $00,$00,$00,$00
0003EE36 <AmiBlitz3.ab3@29228>   Dc.b $00,$00,$00,$00
0003EE3A <AmiBlitz3.ab3@29229>   Dc.b $00,$00,$00,$00
0003EE3E <AmiBlitz3.ab3@29230>   Dc.b $00,$00,$00,$00
0003EE42 <AmiBlitz3.ab3@29231>   Dc.b $00,$00,$00,$00
0003EE46 <AmiBlitz3.ab3@29232>   Dc.b $03,$22,$00,$21
0003EE4A <AmiBlitz3.ab3@29233>   Dc.b $3C,$28,$00,$22
0003EE4E <AmiBlitz3.ab3@29234>   Dc.b $6E,$C0,$00,$00
0003EE52 <AmiBlitz3.ab3@29235>   Dc.b $00,$12,$00,$00
0003EE56 <AmiBlitz3.ab3@29236>   Dc.b $00,$0E,$00,$00
0003EE5A <AmiBlitz3.ab3@29237>   Dc.b $00,$00,$00,$00
0003EE5E <AmiBlitz3.ab3@29238>   Dc.b $00,$00,$00,$00
0003EE62 <AmiBlitz3.ab3@29239>   Dc.b $00,$00,$00,$00
0003EE66 <AmiBlitz3.ab3@29240>   Dc.b $00,$00,$00,$2E
0003EE6A <AmiBlitz3.ab3@29241>   Dc.b $00,$17,$00,$02
0003EE6E <AmiBlitz3.ab3@29242>   Dc.b $00,$01,$8E,$80
0003EE72 <AmiBlitz3.ab3@29243>   Dc.b $03,$00,$00,$00
0003EE76 <AmiBlitz3.ab3@29244>   Dc.b $00,$00,$FF,$FF
0003EE7A <AmiBlitz3.ab3@29245>   Dc.b $FF,$FF,$FF,$FC
0003EE7E <AmiBlitz3.ab3@29246>   Dc.b $80,$00,$00,$00
0003EE82 <AmiBlitz3.ab3@29247>   Dc.b $00,$00,$80,$00
0003EE86 <AmiBlitz3.ab3@29248>   Dc.b $00,$3F,$BB,$40
0003EE8A <AmiBlitz3.ab3@29249>   Dc.b $80,$1F,$C0,$00
0003EE8E <AmiBlitz3.ab3@29250>   Dc.b $00,$00,$80,$3F
0003EE92 <AmiBlitz3.ab3@29251>   Dc.b $C0,$0F,$BB,$40
0003EE96 <AmiBlitz3.ab3@29252>   Dc.b $80,$1F,$C0,$00
0003EE9A <AmiBlitz3.ab3@29253>   Dc.b $00,$00,$8E,$00
0003EE9E <AmiBlitz3.ab3@29254>   Dc.b $F8,$00,$00,$00
0003EEA2 <AmiBlitz3.ab3@29255>   Dc.b $8F,$01,$FF,$00
0003EEA6 <AmiBlitz3.ab3@29256>   Dc.b $3B,$40,$81,$E3
0003EEAA <AmiBlitz3.ab3@29257>   Dc.b $F7,$C0,$00,$00
0003EEAE <AmiBlitz3.ab3@29258>   Dc.b $80,$7F,$F8,$70
0003EEB2 <AmiBlitz3.ab3@29259>   Dc.b $3B,$40,$80,$0F
0003EEB6 <AmiBlitz3.ab3@29260>   Dc.b $7C,$E0,$00,$00
0003EEBA <AmiBlitz3.ab3@29261>   Dc.b $80,$00,$FD,$80
0003EEBE <AmiBlitz3.ab3@29262>   Dc.b $00,$00,$80,$01
0003EEC2 <AmiBlitz3.ab3@29263>   Dc.b $F6,$00,$FB,$40
0003EEC6 <AmiBlitz3.ab3@29264>   Dc.b $80,$03,$EF,$00
0003EECA <AmiBlitz3.ab3@29265>   Dc.b $00,$00,$80,$07
0003EECE <AmiBlitz3.ab3@29266>   Dc.b $87,$80,$3B,$40
0003EED2 <AmiBlitz3.ab3@29267>   Dc.b $80,$0F,$01,$C0
0003EED6 <AmiBlitz3.ab3@29268>   Dc.b $00,$00,$80,$03
0003EEDA <AmiBlitz3.ab3@29269>   Dc.b $F0,$70,$1D,$40
0003EEDE <AmiBlitz3.ab3@29270>   Dc.b $80,$00,$18,$1C
0003EEE2 <AmiBlitz3.ab3@29271>   Dc.b $00,$00,$80,$00
0003EEE6 <AmiBlitz3.ab3@29272>   Dc.b $10,$06,$03,$40
0003EEEA <AmiBlitz3.ab3@29273>   Dc.b $80,$00,$20,$1F
0003EEEE <AmiBlitz3.ab3@29274>   Dc.b $00,$00,$80,$00
0003EEF2 <AmiBlitz3.ab3@29275>   Dc.b $00,$00,$01,$40
0003EEF6 <AmiBlitz3.ab3@29276>   Dc.b $80,$00,$00,$00
0003EEFA <AmiBlitz3.ab3@29277>   Dc.b $00,$00,$80,$00
0003EEFE <AmiBlitz3.ab3@29278>   Dc.b $00,$00,$00,$00
0003EF02 <AmiBlitz3.ab3@29279>   Dc.b $00,$00,$00,$00
0003EF06 <AmiBlitz3.ab3@29280>   Dc.b $00,$00,$00,$00
0003EF0A <AmiBlitz3.ab3@29281>   Dc.b $00,$00,$00,$04
0003EF0E <AmiBlitz3.ab3@29282>   Dc.b $00,$3F,$FC,$01
0003EF12 <AmiBlitz3.ab3@29283>   Dc.b $BB,$44,$00,$60
0003EF16 <AmiBlitz3.ab3@29284>   Dc.b $FE,$00,$00,$04
0003EF1A <AmiBlitz3.ab3@29285>   Dc.b $00,$CF,$FF,$01
0003EF1E <AmiBlitz3.ab3@29286>   Dc.b $BB,$44,$1F,$EF
0003EF22 <AmiBlitz3.ab3@29287>   Dc.b $FF,$00,$00,$04
0003EF26 <AmiBlitz3.ab3@29288>   Dc.b $33,$FF,$FF,$E0
0003EF2A <AmiBlitz3.ab3@29289>   Dc.b $00,$04,$37,$FE
0003EF2E <AmiBlitz3.ab3@29290>   Dc.b $7F,$FC,$1B,$44
0003EF32 <AmiBlitz3.ab3@29291>   Dc.b $0F,$9C,$FF,$FF
0003EF36 <AmiBlitz3.ab3@29292>   Dc.b $00,$04,$03,$E3
0003EF3A <AmiBlitz3.ab3@29293>   Dc.b $FF,$FF,$DB,$44
0003EF3E <AmiBlitz3.ab3@29294>   Dc.b $00,$7F,$BF,$FF
0003EF42 <AmiBlitz3.ab3@29295>   Dc.b $80,$04,$00,$0F
0003EF46 <AmiBlitz3.ab3@29296>   Dc.b $3F,$FE,$00,$04
0003EF4A <AmiBlitz3.ab3@29297>   Dc.b $00,$06,$7F,$F8
0003EF4E <AmiBlitz3.ab3@29298>   Dc.b $1B,$44,$00,$0C
0003EF52 <AmiBlitz3.ab3@29299>   Dc.b $F7,$FC,$00,$04
0003EF56 <AmiBlitz3.ab3@29300>   Dc.b $00,$19,$F9,$FE
0003EF5A <AmiBlitz3.ab3@29301>   Dc.b $1B,$44,$00,$33
0003EF5E <AmiBlitz3.ab3@29302>   Dc.b $FE,$7F,$00,$04
0003EF62 <AmiBlitz3.ab3@29303>   Dc.b $00,$0F,$FF,$BF
0003EF66 <AmiBlitz3.ab3@29304>   Dc.b $CD,$44,$00,$03
0003EF6A <AmiBlitz3.ab3@29305>   Dc.b $EF,$EF,$F0,$04
0003EF6E <AmiBlitz3.ab3@29306>   Dc.b $00,$00,$7F,$DF
0003EF72 <AmiBlitz3.ab3@29307>   Dc.b $FB,$44,$00,$00
0003EF76 <AmiBlitz3.ab3@29308>   Dc.b $FF,$A7,$FC,$04
0003EF7A <AmiBlitz3.ab3@29309>   Dc.b $00,$00,$7E,$3F
0003EF7E <AmiBlitz3.ab3@29310>   Dc.b $FD,$44,$00,$00
0003EF82 <AmiBlitz3.ab3@29311>   Dc.b $00,$00,$00,$04
0003EF86 <AmiBlitz3.ab3@29312>   Dc.b $7F,$FF,$FF,$FF
0003EF8A <AmiBlitz3.ab3@29313>   Dc.b $FF,$FC,$00,$00
0003EF8E <AmiBlitz3.ab3@29314>   Dc.b $00,$01,$00,$00
0003EF91 <AmiBlitz3.ab3@29315>   Dc.b $00,$00,$04
0003EF97 <AmiBlitz3.ab3@29318> str_infoextention2:  Dc.b ".info",0                           ;infoname org source
0003EFEF <AmiBlitz3.ab3@29319> errorlimit_text:     Dc.b "There are too much errors, compiling is stop now. Please fix errors first and try again",0
0003EFF0 <AmiBlitz3.ab3@29320> Even
0003EFF4 <AmiBlitz3.ab3@29322> sysdebug:            Dc.l $3F0
0003EFF8 <AmiBlitz3.ab3@29326> exelock              Ds.l 1
0003EFFC <AmiBlitz3.ab3@29330> includesourceline    Dc.l 0
0003F000 <AmiBlitz3.ab3@29331> linenum              Ds.l 1
0003F004 <AmiBlitz3.ab3@29332> globallinecount      Ds.l 1
0003F022 <AmiBlitz3.ab3@29333> myversion            Dc.b "\\__VER_MAJOR.\\__VER_MINOR (\\__DATE_GER__) Build \\__VER_PATCH.\\__VER_BUILD",0 : Even
0003F026 <AmiBlitz3.ab3@29334> calc_option          Dc.l 1
0003F02A <AmiBlitz3.ab3@29335> versioninformation   Dc.l $00
0003F02E <AmiBlitz3.ab3@29336> number_of_builds     Dc.l $00
0003F030 <AmiBlitz3.ab3@29337> leftsideflagmask     Ds.w 1    ;this contain the flag if pointer (1) or not
0003F032 <AmiBlitz3.ab3@29338> rightsideflagmask    Ds.w 1
0003F034 <AmiBlitz3.ab3@29340> BSS
0003F036 <AmiBlitz3.ab3@29341> debugnest            Ds.w 1
0003F03A <AmiBlitz3.ab3@29342> instringf            Ds.l 1
0003F03E <AmiBlitz3.ab3@29343> funcscanon           Ds.l 1
0003F052 <AmiBlitz3.ab3@29344> storedebugmode       Ds.b 20
0003F056 <AmiBlitz3.ab3@29345> firsttimepref        Ds.l 1
0003F057 <AmiBlitz3.ab3@29346> funcparloop          Ds.b 1                   ; is 1 when function calling parameter are compile
0003F058 <AmiBlitz3.ab3@29347> blitzparloop         Ds.b 1                   ; is 1 when blitzlib calling parameters are compile
0003F05A <AmiBlitz3.ab3@29348> nostringopt          Ds.w 1
0003F0DA <AmiBlitz3.ab3@29349> path2:               Ds.l 32
0003F0DE <AmiBlitz3.ab3@29350> typebase             Dc.l 0
0003F0E0 <AmiBlitz3.ab3@29351> doublepeek           Dc.w 0
0003F0E4 <AmiBlitz3.ab3@29352> lastoffset           Dc.l 0
0003F0E6 <AmiBlitz3.ab3@29353> firsttime            Dc.w 0
0003F0EA <AmiBlitz3.ab3@29354> lastdestpointer      Dc.l 0
0003F0EE <AmiBlitz3.ab3@29355> prevwritedat         Dc.l 0
0003F0F2 <AmiBlitz3.ab3@29356> lastsourceline       Dc.l 0
0003F0F6 <AmiBlitz3.ab3@29357> lastwritedat         Dc.l 0
0003F0F8 <AmiBlitz3.ab3@29358> makeexec             Dc.w 0
0003F0FA <AmiBlitz3.ab3@29359> makeexec_remember    Dc.w 0
0003F0FE <AmiBlitz3.ab3@29360> sharebase            Ds.l 1
0003F102 <AmiBlitz3.ab3@29361> tempa7               Ds.l 1
0003F104 <AmiBlitz3.ab3@29362> incnif               Ds.w 1
0003F108 <AmiBlitz3.ab3@29363> tempstore            Ds.l 1
0003F10C <AmiBlitz3.ab3@29364> result               Ds.l 1
0003F10E <AmiBlitz3.ab3@29365> automode             Ds.w 1
0003F110 <AmiBlitz3.ab3@29366> stackcorrect         Ds.w 1
0003F112 <AmiBlitz3.ab3@29367> formode              Ds.w 1
0003F116 <AmiBlitz3.ab3@29368> limitregs            Ds.l 1
0003F118 <AmiBlitz3.ab3@29369> onestep              Ds.w 1
0003F11C <AmiBlitz3.ab3@29370> reqmode              Ds.l 1
0003F1BC <AmiBlitz3.ab3@29371> inctab               Ds.l 40
0003F1BE <AmiBlitz3.ab3@29372> funcoptimize_deprecated  Ds.w 1 ; deprecated, see comByte_FuncOptimize ; Wanderer
0003F1C2 <AmiBlitz3.ab3@29373> includeline          Ds.l 1
0003F1C6 <AmiBlitz3.ab3@29374> morememadd           Ds.l 1
0003F1C8 <AmiBlitz3.ab3@29375> objectcount          Ds.w 1
0003F1CC <AmiBlitz3.ab3@29376> savefuncspace        Ds.l 1
0003F1D0 <AmiBlitz3.ab3@29377> lasttrap1            Ds.l 1
0003F1D4 <AmiBlitz3.ab3@29378> currentfunccall      Ds.l 1
0003F1D5 <AmiBlitz3.ab3@29379> skipfunc             Ds.b 1
0003F1D6 <AmiBlitz3.ab3@29380> resdisable           Ds.b 1
0003F1D7 <AmiBlitz3.ab3@29381> skiptoggle           Ds.b 1
0003F1D8 <AmiBlitz3.ab3@29382> developobject        Ds.b 1
0003F1DA <AmiBlitz3.ab3@29383> iniffcommand         Ds.w 1
0003F1DC <AmiBlitz3.ab3@29384> startoffsetmore      Ds.w 1
0003F1DE <AmiBlitz3.ab3@29385> olddebugmode         Ds.w 1
0003F1E2 <AmiBlitz3.ab3@29386> fpucodeglobal        Ds.l 1
0003F1E6 <AmiBlitz3.ab3@29387> fpucodelocal         Ds.l 1
0003F1EA <AmiBlitz3.ab3@29388> maxregs              Ds.l 1
0003F1EE <AmiBlitz3.ab3@29389> fpucode              Ds.l 1
0003F1F0 <AmiBlitz3.ab3@29390> firstmline           Ds.w 1
0003F230 <AmiBlitz3.ab3@29391> regtable             Ds.l 16
0003F232 <AmiBlitz3.ab3@29392> exdebug              Ds.w 1
0003F234 <AmiBlitz3.ab3@29393> a2offset2            Ds.w 1
0003F238 <AmiBlitz3.ab3@29394> parnumtemp           Ds.l 1
0003F239 <AmiBlitz3.ab3@29395> doimmediate          Ds.b 1
0003F23A <AmiBlitz3.ab3@29396> notypecheck          Ds.b 1
0003F23C <AmiBlitz3.ab3@29397> vartype              Ds.w 1
0003F23D <AmiBlitz3.ab3@29398> peekaddrsize         Ds.b 1
0003F23E <AmiBlitz3.ab3@29399> declare2             Ds.b 1
0003F240 <AmiBlitz3.ab3@29400> parameternum         Ds.w 1
0003F244 <AmiBlitz3.ab3@29401> lasttoken            Ds.l 1
0003F246 <AmiBlitz3.ab3@29402> newvariable          Ds.w 1
0003F247 <AmiBlitz3.ab3@29403> declare              Ds.b 1
0003F248 <AmiBlitz3.ab3@29404> typecheck            Ds.b 1
0003F249 <AmiBlitz3.ab3@29405> nowdeclare           Ds.b 1
0003F24A <AmiBlitz3.ab3@29406> dimkeep              Ds.b 1
0003F24B <AmiBlitz3.ab3@29407> a4a5store            Ds.b 1
0003F24C <AmiBlitz3.ab3@29408> ___freetouse         Ds.b 1
0003F250 <AmiBlitz3.ab3@29409> firstiffstore        Ds.l 1
0003F254 <AmiBlitz3.ab3@29410> destpointer2         Ds.l 1
0003F258 <AmiBlitz3.ab3@29411> stackaddr            Ds.l 1
0003F35C <AmiBlitz3.ab3@29412> allowtab             Ds.b 260
0003F45C <AmiBlitz3.ab3@29413> templine             Ds.b 256
0003F45E <AmiBlitz3.ab3@29414> thenmode             Ds.w 1
0003F460 <AmiBlitz3.ab3@29415> temp                 Ds.w 1
0003F462 <AmiBlitz3.ab3@29416> tempregnum           Ds.w 1
0003F466 <AmiBlitz3.ab3@29418> numlines2            Ds.l 1
0003F46A <AmiBlitz3.ab3@29419> numlines             Ds.l 1
0003F46C <AmiBlitz3.ab3@29420> exmac                Ds.w 1
0003F46E <AmiBlitz3.ab3@29421> returncode           Ds.w 1
0003F472 <AmiBlitz3.ab3@29422> fp0iff               Ds.l 1
0003F476 <AmiBlitz3.ab3@29423> fp0addr              Ds.l 1
0003F478 <AmiBlitz3.ab3@29424> fp0mode              Ds.w 1
0003F47A <AmiBlitz3.ab3@29425> fp0var               Ds.w 1
0003F47C <AmiBlitz3.ab3@29426> fastfunc             Ds.w 1
0003F47E <AmiBlitz3.ab3@29427> retmode              Ds.w 1
0003F480 <AmiBlitz3.ab3@29428> parnum               Ds.w 1
0003F482 <AmiBlitz3.ab3@29429> regmask              Ds.w 1
0003F484 <AmiBlitz3.ab3@29430> regnumfunc           Ds.w 1
0003F486 <AmiBlitz3.ab3@29431> libmode              Ds.w 1
0003F48A <AmiBlitz3.ab3@29432> oldline              Ds.l 1
0003F48E <AmiBlitz3.ab3@29433> sourceline3          Ds.l 1
0003F556 <AmiBlitz3.ab3@29434> debugstore           Ds.b 200
0003F55A <AmiBlitz3.ab3@29435> deststore            Ds.l 1
0003F55E <AmiBlitz3.ab3@29437> loada                Ds.l 1
0003F562 <AmiBlitz3.ab3@29439> currtype             Ds.l 1
0003F566 <AmiBlitz3.ab3@29440> arrayoffset          Ds.l 1
0003F56A <AmiBlitz3.ab3@29441> lastlabel            Ds.l 1
0003F56E <AmiBlitz3.ab3@29442> curtemplabel         Ds.l 1
0003F572 <AmiBlitz3.ab3@29443> sourceline2          Ds.l 1
0003F672 <AmiBlitz3.ab3@29444> chartab              Ds.b 256
0003F6EA <AmiBlitz3.ab3@29445> tempspace            Ds.b 120
000BF6FA <AmiBlitz3.ab3@29446> instrtab             Ds.l 65538*2
000C76FA <AmiBlitz3.ab3@29448> labelhash            Ds.l 8192                             ;-bssstore clear every compile pass
000E76FE <AmiBlitz3.ab3@29449> replacedat           Ds.w 65538
000EF6FE <AmiBlitz3.ab3@29450> variablehash         Ds.l 8192
000EF702 <AmiBlitz3.ab3@29451> newinitaddr          Ds.l 1
000EF706 <AmiBlitz3.ab3@29452> realbssend           Ds.l 1
000EF708 <AmiBlitz3.ab3@29453> saved0               Ds.w 1
000EF788 <AmiBlitz3.ab3@29454> lastpath             Ds.b 128
000EF808 <AmiBlitz3.ab3@29455> lastpath2            Ds.b 128
000EF8D0 <AmiBlitz3.ab3@29456> fpustackbase         Ds.w 100
000EF8D4 <AmiBlitz3.ab3@29457> 
000EF8D6 <AmiBlitz3.ab3@29458> isconstantvalue      Dc.w 0  ; contain a type (1-7) if a constant expression is used as a Parameter or on right side of =
000EF8DA <AmiBlitz3.ab3@29459> lastfunction         Dc.l 0  ; the address of the function in the Parameter or rght side of =
000EF8DE <AmiBlitz3.ab3@29460> leftsidetype         Dc.l 0  ;this contain the address of the type from the left side of the variable assign
000EF8E2 <AmiBlitz3.ab3@29461> rightsidetype        Dc.l 0  ; same as above but right side
000EF8E6 <AmiBlitz3.ab3@29464> trap15temp           Ds.l 1
000EF8EA <AmiBlitz3.ab3@29465> trap15temp2          Ds.l 1
000EF8EE <AmiBlitz3.ab3@29466> templibend           Ds.l 1
000EF8F2 <AmiBlitz3.ab3@29467> tempdata1start       Ds.l 1
000EF8F6 <AmiBlitz3.ab3@29468> stacktrack           Ds.l 1
000EF8FA <AmiBlitz3.ab3@29469> pad                  Ds.l 1
000EF9FA <AmiBlitz3.ab3@29470> includetemp          Ds.b 256
000F03FA <AmiBlitz3.ab3@29471> includetemp2         Ds.b 256*10
000F03FC <AmiBlitz3.ab3@29472> funccall             Ds.w 1
000F0400 <AmiBlitz3.ab3@29475> ptr_resfile          Ds.l 1
000F0402 <AmiBlitz3.ab3@29476> CalculatorButtonBinFlag:    Ds.w 1
000F0404 <AmiBlitz3.ab3@29477> CalculatorButtonDecFlag:    Ds.w 1
000F0408 <AmiBlitz3.ab3@29478> ped_startup_addr:    Ds.l 1
000F0409 <AmiBlitz3.ab3@29479> start_without_libs:  Ds.b 1
000F040A <AmiBlitz3.ab3@29480> skip_bytes:          Ds.b 1
000F040E <AmiBlitz3.ab3@29481> functionreturntype   Ds.l 1  ; a temp store of it.do not read this value
000F0412 <AmiBlitz3.ab3@29482> beforeparameterfetch Ds.l 1
000F0416 <AmiBlitz3.ab3@29483> typetocast           Ds.l 1
000F041A <AmiBlitz3.ab3@29484> errorcounter         Ds.l 1
000F041B <AmiBlitz3.ab3@29485> iserror              Ds.b 1
000F041C <AmiBlitz3.ab3@29486> Even
000F0420 <AmiBlitz3.ab3@29488> CLIMode:             Dc.l 0
000F0424 <AmiBlitz3.ab3@29489> XTRAEndPadBytes:     Dc.l 0                             ; 4 fill/pad/termination bytes for the xtra write function  tomsmart1
000F0428 <AmiBlitz3.ab3@29490> maxerrorcount:       Ds.l 1                             ; added to make it changeable in CLI Mode tomsmart1
