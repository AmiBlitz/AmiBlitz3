00000008 <AmiBlitz3.ab3@0> 
00000014 <AmiBlitz3.ab3@43> optimize 5                               ; don't use FPU (opt. 4)
00000076 <AmiBlitz3.ab3@64> !initasm                                 ; some initial mumbo jumbo
000000A0 <AmiBlitz3.ab3@65> !basic
000000AC <AmiBlitz3.ab3@70> cli_verbose = -1
000000B2 <AmiBlitz3.ab3@71> CLIMode     = False
000000C8 <AmiBlitz3.ab3@72> MaxLen cli_tempstr.s = 1024
000000E4 <AmiBlitz3.ab3@73> GetCurrentDirName_ &cli_tempstr,1024  ; get the current dir to restore it on exit
0000010E <AmiBlitz3.ab3@74> cli_path.s = Peek.s(&cli_tempstr)
0000010E <library_offsets.ab3@1> XINCLUDE "/Shared/library_offsets.ab3"   ; needed includes
0000010E <AmiBlitz3.ab3@78> XINCLUDE "/Shared/library_offsets.ab3"   ; needed includes
0000010E <dos.include.ab3@1> XINCLUDE "dos.include.ab3"
0000010E <error.include.ab3@1> XINCLUDE "dos.include.ab3"
00000146 <error.include.ab3@62> XINCLUDE "dos.include.ab3"
0000016E <error.include.ab3@63> XINCLUDE "dos.include.ab3"
00000196 <error.include.ab3@64> XINCLUDE "dos.include.ab3"
000001BE <error.include.ab3@65> XINCLUDE "dos.include.ab3"
000001C4 <error.include.ab3@66> XINCLUDE "dos.include.ab3"
000001F8 <error.include.ab3@67> XINCLUDE "dos.include.ab3"
0000022C <error.include.ab3@68> XINCLUDE "dos.include.ab3"
00000260 <error.include.ab3@69> XINCLUDE "dos.include.ab3"
0000027C <error.include.ab3@73> XINCLUDE "dos.include.ab3"
00000296 <error.include.ab3@99> XINCLUDE "dos.include.ab3"
000002A2 <error.include.ab3@101> XINCLUDE "dos.include.ab3"
000002A6 <error.include.ab3@102> XINCLUDE "dos.include.ab3"
000002B4 <error.include.ab3@104> XINCLUDE "dos.include.ab3"
000002F6 <error.include.ab3@124> XINCLUDE "dos.include.ab3"
0000037A <error.include.ab3@126> XINCLUDE "dos.include.ab3"
000003E6 <error.include.ab3@127> XINCLUDE "dos.include.ab3"
00000400 <error.include.ab3@129> XINCLUDE "dos.include.ab3"
00000438 <error.include.ab3@130> XINCLUDE "dos.include.ab3"
00000498 <error.include.ab3@131> XINCLUDE "dos.include.ab3"
000004A6 <error.include.ab3@133> XINCLUDE "dos.include.ab3"
000004B4 <error.include.ab3@134> XINCLUDE "dos.include.ab3"
000004C2 <error.include.ab3@135> XINCLUDE "dos.include.ab3"
000004D0 <error.include.ab3@136> XINCLUDE "dos.include.ab3"
000004F8 <error.include.ab3@137> XINCLUDE "dos.include.ab3"
00000506 <error.include.ab3@138> XINCLUDE "dos.include.ab3"
0000050E <error.include.ab3@139> XINCLUDE "dos.include.ab3"
00000540 <error.include.ab3@141> XINCLUDE "dos.include.ab3"
0000055A <error.include.ab3@146> XINCLUDE "dos.include.ab3"
00000592 <error.include.ab3@147> XINCLUDE "dos.include.ab3"
00000598 <error.include.ab3@148> XINCLUDE "dos.include.ab3"
000005DC <error.include.ab3@149> XINCLUDE "dos.include.ab3"
00000624 <error.include.ab3@150> XINCLUDE "dos.include.ab3"
0000062E <error.include.ab3@154> XINCLUDE "dos.include.ab3"
00000648 <error.include.ab3@156> XINCLUDE "dos.include.ab3"
00000692 <error.include.ab3@195> XINCLUDE "dos.include.ab3"
0000069A <error.include.ab3@197> XINCLUDE "dos.include.ab3"
00000706 <error.include.ab3@198> XINCLUDE "dos.include.ab3"
00000728 <error.include.ab3@199> XINCLUDE "dos.include.ab3"
00000788 <error.include.ab3@200> XINCLUDE "dos.include.ab3"
00000796 <error.include.ab3@202> XINCLUDE "dos.include.ab3"
000007A4 <error.include.ab3@203> XINCLUDE "dos.include.ab3"
000007B2 <error.include.ab3@204> XINCLUDE "dos.include.ab3"
000007C0 <error.include.ab3@205> XINCLUDE "dos.include.ab3"
00000820 <error.include.ab3@206> XINCLUDE "dos.include.ab3"
0000082E <error.include.ab3@207> XINCLUDE "dos.include.ab3"
00000864 <error.include.ab3@210> XINCLUDE "dos.include.ab3"
0000086E <error.include.ab3@214> XINCLUDE "dos.include.ab3"
0000088A <error.include.ab3@215> XINCLUDE "dos.include.ab3"
0000088A <multilist.include.ab3@1> XINCLUDE "dos.include.ab3"
0000088A <strptr.include.ab3@1> XINCLUDE "dos.include.ab3"
0000088A <useful.include.ab3@1> XINCLUDE "dos.include.ab3"
000008B8 <useful.include.ab3@286> XINCLUDE "dos.include.ab3"
000008C2 <useful.include.ab3@287> XINCLUDE "dos.include.ab3"
000008D6 <useful.include.ab3@288> XINCLUDE "dos.include.ab3"
000008DE <useful.include.ab3@289> XINCLUDE "dos.include.ab3"
00000906 <useful.include.ab3@290> XINCLUDE "dos.include.ab3"
0000092C <useful.include.ab3@291> XINCLUDE "dos.include.ab3"
0000094C <useful.include.ab3@294> XINCLUDE "dos.include.ab3"
0000095A <useful.include.ab3@295> XINCLUDE "dos.include.ab3"
00000980 <useful.include.ab3@296> XINCLUDE "dos.include.ab3"
00000988 <useful.include.ab3@298> XINCLUDE "dos.include.ab3"
00000990 <useful.include.ab3@299> XINCLUDE "dos.include.ab3"
00000996 <useful.include.ab3@300> XINCLUDE "dos.include.ab3"
000009B2 <useful.include.ab3@301> XINCLUDE "dos.include.ab3"
000009D6 <useful.include.ab3@302> XINCLUDE "dos.include.ab3"
000009EA <useful.include.ab3@303> XINCLUDE "dos.include.ab3"
000009F0 <useful.include.ab3@304> XINCLUDE "dos.include.ab3"
00000A3A <useful.include.ab3@305> XINCLUDE "dos.include.ab3"
00000A3C <useful.include.ab3@306> XINCLUDE "dos.include.ab3"
00000A4A <useful.include.ab3@308> XINCLUDE "dos.include.ab3"
00000A6A <useful.include.ab3@310> XINCLUDE "dos.include.ab3"
00000AC8 <useful.include.ab3@311> XINCLUDE "dos.include.ab3"
00000ACE <useful.include.ab3@312> XINCLUDE "dos.include.ab3"
00000ADC <useful.include.ab3@313> XINCLUDE "dos.include.ab3"
00000AF0 <useful.include.ab3@314> XINCLUDE "dos.include.ab3"
00000B02 <useful.include.ab3@315> XINCLUDE "dos.include.ab3"
00000B10 <useful.include.ab3@316> XINCLUDE "dos.include.ab3"
00000B16 <useful.include.ab3@317> XINCLUDE "dos.include.ab3"
00000B22 <useful.include.ab3@318> XINCLUDE "dos.include.ab3"
00000B36 <useful.include.ab3@321> XINCLUDE "dos.include.ab3"
00000B4A <useful.include.ab3@322> XINCLUDE "dos.include.ab3"
00000B5C <useful.include.ab3@323> XINCLUDE "dos.include.ab3"
00000B6A <useful.include.ab3@324> XINCLUDE "dos.include.ab3"
00000B88 <useful.include.ab3@325> XINCLUDE "dos.include.ab3"
00000B8E <useful.include.ab3@326> XINCLUDE "dos.include.ab3"
00000BA2 <useful.include.ab3@330> XINCLUDE "dos.include.ab3"
00000BAC <useful.include.ab3@331> XINCLUDE "dos.include.ab3"
00000BB4 <useful.include.ab3@332> XINCLUDE "dos.include.ab3"
00000BD2 <useful.include.ab3@333> XINCLUDE "dos.include.ab3"
00000BD8 <useful.include.ab3@334> XINCLUDE "dos.include.ab3"
00000C04 <useful.include.ab3@335> XINCLUDE "dos.include.ab3"
00000C0A <useful.include.ab3@337> XINCLUDE "dos.include.ab3"
00000C1C <useful.include.ab3@338> XINCLUDE "dos.include.ab3"
00000C34 <useful.include.ab3@339> XINCLUDE "dos.include.ab3"
00000C4C <useful.include.ab3@340> XINCLUDE "dos.include.ab3"
00000C6A <useful.include.ab3@341> XINCLUDE "dos.include.ab3"
00000C6C <useful.include.ab3@343> XINCLUDE "dos.include.ab3"
00000C7A <useful.include.ab3@344> XINCLUDE "dos.include.ab3"
00000CA0 <useful.include.ab3@345> XINCLUDE "dos.include.ab3"
00000D34 <useful.include.ab3@346> XINCLUDE "dos.include.ab3"
00000D42 <useful.include.ab3@348> XINCLUDE "dos.include.ab3"
00000D48 <useful.include.ab3@349> XINCLUDE "dos.include.ab3"
00000D72 <useful.include.ab3@350> XINCLUDE "dos.include.ab3"
00000D90 <useful.include.ab3@351> XINCLUDE "dos.include.ab3"
00000D90 <strptr.include.ab3@37> XINCLUDE "dos.include.ab3"
00000DAA <strptr.include.ab3@96> XINCLUDE "dos.include.ab3"
00000DB4 <strptr.include.ab3@97> XINCLUDE "dos.include.ab3"
00000DFC <strptr.include.ab3@98> XINCLUDE "dos.include.ab3"
00000E00 <strptr.include.ab3@100> XINCLUDE "dos.include.ab3"
00000E2E <strptr.include.ab3@197> XINCLUDE "dos.include.ab3"
00000E38 <strptr.include.ab3@198> XINCLUDE "dos.include.ab3"
00000E80 <strptr.include.ab3@199> XINCLUDE "dos.include.ab3"
00000E94 <strptr.include.ab3@200> XINCLUDE "dos.include.ab3"
00000EA6 <strptr.include.ab3@201> XINCLUDE "dos.include.ab3"
00000ECA <strptr.include.ab3@205> XINCLUDE "dos.include.ab3"
00000ED4 <strptr.include.ab3@208> XINCLUDE "dos.include.ab3"
00000EE2 <strptr.include.ab3@209> XINCLUDE "dos.include.ab3"
00000EEC <strptr.include.ab3@210> XINCLUDE "dos.include.ab3"
00000F14 <strptr.include.ab3@211> XINCLUDE "dos.include.ab3"
00000F2E <strptr.include.ab3@212> XINCLUDE "dos.include.ab3"
00000F46 <strptr.include.ab3@216> XINCLUDE "dos.include.ab3"
00000F60 <strptr.include.ab3@282> XINCLUDE "dos.include.ab3"
00000F6A <strptr.include.ab3@283> XINCLUDE "dos.include.ab3"
00000F78 <strptr.include.ab3@284> XINCLUDE "dos.include.ab3"
00000FAA <strptr.include.ab3@285> XINCLUDE "dos.include.ab3"
00000FC8 <strptr.include.ab3@287> XINCLUDE "dos.include.ab3"
00000FD2 <strptr.include.ab3@288> XINCLUDE "dos.include.ab3"
00000FD2 <multilist.include.ab3@44> XINCLUDE "dos.include.ab3"
00000FE8 <multilist.include.ab3@61> XINCLUDE "dos.include.ab3"
00001002 <multilist.include.ab3@406> XINCLUDE "dos.include.ab3"
0000100C <multilist.include.ab3@407> XINCLUDE "dos.include.ab3"
0000102E <multilist.include.ab3@408> XINCLUDE "dos.include.ab3"
00001052 <multilist.include.ab3@409> XINCLUDE "dos.include.ab3"
00001064 <multilist.include.ab3@410> XINCLUDE "dos.include.ab3"
0000107C <multilist.include.ab3@411> XINCLUDE "dos.include.ab3"
00001090 <multilist.include.ab3@412> XINCLUDE "dos.include.ab3"
000010A2 <multilist.include.ab3@415> XINCLUDE "dos.include.ab3"
000010B2 <multilist.include.ab3@416> XINCLUDE "dos.include.ab3"
000010B8 <multilist.include.ab3@417> XINCLUDE "dos.include.ab3"
000010C8 <multilist.include.ab3@418> XINCLUDE "dos.include.ab3"
000010D8 <multilist.include.ab3@419> XINCLUDE "dos.include.ab3"
000010F2 <multilist.include.ab3@420> XINCLUDE "dos.include.ab3"
000010F6 <multilist.include.ab3@422> XINCLUDE "dos.include.ab3"
00001110 <multilist.include.ab3@585> XINCLUDE "dos.include.ab3"
00001140 <multilist.include.ab3@586> XINCLUDE "dos.include.ab3"
0000114A <multilist.include.ab3@588> XINCLUDE "dos.include.ab3"
00001154 <multilist.include.ab3@589> XINCLUDE "dos.include.ab3"
00001176 <multilist.include.ab3@590> XINCLUDE "dos.include.ab3"
0000119A <multilist.include.ab3@591> XINCLUDE "dos.include.ab3"
000011AC <multilist.include.ab3@592> XINCLUDE "dos.include.ab3"
000011C4 <multilist.include.ab3@593> XINCLUDE "dos.include.ab3"
000011D8 <multilist.include.ab3@594> XINCLUDE "dos.include.ab3"
000011EA <multilist.include.ab3@597> XINCLUDE "dos.include.ab3"
000011FA <multilist.include.ab3@598> XINCLUDE "dos.include.ab3"
00001200 <multilist.include.ab3@599> XINCLUDE "dos.include.ab3"
00001210 <multilist.include.ab3@600> XINCLUDE "dos.include.ab3"
00001220 <multilist.include.ab3@601> XINCLUDE "dos.include.ab3"
0000123A <multilist.include.ab3@602> XINCLUDE "dos.include.ab3"
00001240 <multilist.include.ab3@603> XINCLUDE "dos.include.ab3"
00001246 <multilist.include.ab3@604> XINCLUDE "dos.include.ab3"
0000124A <multilist.include.ab3@605> XINCLUDE "dos.include.ab3"
00001264 <multilist.include.ab3@713> XINCLUDE "dos.include.ab3"
0000126C <multilist.include.ab3@714> XINCLUDE "dos.include.ab3"
00001276 <multilist.include.ab3@715> XINCLUDE "dos.include.ab3"
0000128C <multilist.include.ab3@716> XINCLUDE "dos.include.ab3"
000012A0 <multilist.include.ab3@717> XINCLUDE "dos.include.ab3"
000012C4 <multilist.include.ab3@718> XINCLUDE "dos.include.ab3"
000012D2 <multilist.include.ab3@721> XINCLUDE "dos.include.ab3"
000012DC <multilist.include.ab3@722> XINCLUDE "dos.include.ab3"
000012E2 <multilist.include.ab3@723> XINCLUDE "dos.include.ab3"
000012EC <multilist.include.ab3@724> XINCLUDE "dos.include.ab3"
000012F2 <multilist.include.ab3@725> XINCLUDE "dos.include.ab3"
00001310 <multilist.include.ab3@742> XINCLUDE "dos.include.ab3"
00001318 <multilist.include.ab3@743> XINCLUDE "dos.include.ab3"
00001322 <multilist.include.ab3@744> XINCLUDE "dos.include.ab3"
00001340 <multilist.include.ab3@745> XINCLUDE "dos.include.ab3"
00001356 <multilist.include.ab3@746> XINCLUDE "dos.include.ab3"
0000136A <multilist.include.ab3@747> XINCLUDE "dos.include.ab3"
0000139E <multilist.include.ab3@748> XINCLUDE "dos.include.ab3"
000013AC <multilist.include.ab3@751> XINCLUDE "dos.include.ab3"
000013B6 <multilist.include.ab3@752> XINCLUDE "dos.include.ab3"
000013BC <multilist.include.ab3@753> XINCLUDE "dos.include.ab3"
000013C6 <multilist.include.ab3@754> XINCLUDE "dos.include.ab3"
000013CA <multilist.include.ab3@756> XINCLUDE "dos.include.ab3"
000013D0 <multilist.include.ab3@757> XINCLUDE "dos.include.ab3"
000013EA <multilist.include.ab3@795> XINCLUDE "dos.include.ab3"
000013F4 <multilist.include.ab3@796> XINCLUDE "dos.include.ab3"
000013FE <multilist.include.ab3@797> XINCLUDE "dos.include.ab3"
00001414 <multilist.include.ab3@798> XINCLUDE "dos.include.ab3"
00001424 <multilist.include.ab3@799> XINCLUDE "dos.include.ab3"
0000142E <multilist.include.ab3@801> XINCLUDE "dos.include.ab3"
00001434 <multilist.include.ab3@802> XINCLUDE "dos.include.ab3"
00001438 <multilist.include.ab3@803> XINCLUDE "dos.include.ab3"
0000145A <multilist.include.ab3@821> XINCLUDE "dos.include.ab3"
00001462 <multilist.include.ab3@822> XINCLUDE "dos.include.ab3"
0000147C <multilist.include.ab3@823> XINCLUDE "dos.include.ab3"
00001486 <multilist.include.ab3@824> XINCLUDE "dos.include.ab3"
0000149C <multilist.include.ab3@825> XINCLUDE "dos.include.ab3"
000014B0 <multilist.include.ab3@826> XINCLUDE "dos.include.ab3"
00001506 <multilist.include.ab3@827> XINCLUDE "dos.include.ab3"
00001540 <multilist.include.ab3@828> XINCLUDE "dos.include.ab3"
00001552 <multilist.include.ab3@829> XINCLUDE "dos.include.ab3"
00001574 <multilist.include.ab3@830> XINCLUDE "dos.include.ab3"
0000157A <multilist.include.ab3@831> XINCLUDE "dos.include.ab3"
000015D0 <multilist.include.ab3@832> XINCLUDE "dos.include.ab3"
0000160A <multilist.include.ab3@833> XINCLUDE "dos.include.ab3"
00001610 <multilist.include.ab3@835> XINCLUDE "dos.include.ab3"
0000164A <multilist.include.ab3@836> XINCLUDE "dos.include.ab3"
00001684 <multilist.include.ab3@837> XINCLUDE "dos.include.ab3"
00001696 <multilist.include.ab3@839> XINCLUDE "dos.include.ab3"
000016A0 <multilist.include.ab3@840> XINCLUDE "dos.include.ab3"
000016A6 <multilist.include.ab3@841> XINCLUDE "dos.include.ab3"
000016B0 <multilist.include.ab3@842> XINCLUDE "dos.include.ab3"
000016C4 <multilist.include.ab3@843> XINCLUDE "dos.include.ab3"
0000170A <multilist.include.ab3@870> XINCLUDE "dos.include.ab3"
00001712 <multilist.include.ab3@871> XINCLUDE "dos.include.ab3"
00001730 <multilist.include.ab3@872> XINCLUDE "dos.include.ab3"
0000175C <multilist.include.ab3@873> XINCLUDE "dos.include.ab3"
0000177A <multilist.include.ab3@874> XINCLUDE "dos.include.ab3"
00001794 <multilist.include.ab3@875> XINCLUDE "dos.include.ab3"
000017AE <multilist.include.ab3@876> XINCLUDE "dos.include.ab3"
00001830 <multilist.include.ab3@877> XINCLUDE "dos.include.ab3"
00001844 <multilist.include.ab3@879> XINCLUDE "dos.include.ab3"
0000185C <multilist.include.ab3@880> XINCLUDE "dos.include.ab3"
00001862 <multilist.include.ab3@881> XINCLUDE "dos.include.ab3"
0000187A <multilist.include.ab3@882> XINCLUDE "dos.include.ab3"
00001890 <multilist.include.ab3@884> XINCLUDE "dos.include.ab3"
000018AA <multilist.include.ab3@886> XINCLUDE "dos.include.ab3"
000018BE <multilist.include.ab3@887> XINCLUDE "dos.include.ab3"
000018CC <multilist.include.ab3@888> XINCLUDE "dos.include.ab3"
00001922 <multilist.include.ab3@889> XINCLUDE "dos.include.ab3"
00001958 <multilist.include.ab3@890> XINCLUDE "dos.include.ab3"
00001988 <multilist.include.ab3@891> XINCLUDE "dos.include.ab3"
00001A10 <multilist.include.ab3@893> XINCLUDE "dos.include.ab3"
00001A16 <multilist.include.ab3@894> XINCLUDE "dos.include.ab3"
00001A24 <multilist.include.ab3@895> XINCLUDE "dos.include.ab3"
00001A7A <multilist.include.ab3@896> XINCLUDE "dos.include.ab3"
00001AB0 <multilist.include.ab3@897> XINCLUDE "dos.include.ab3"
00001AE0 <multilist.include.ab3@898> XINCLUDE "dos.include.ab3"
00001AE6 <multilist.include.ab3@901> XINCLUDE "dos.include.ab3"
00001B00 <multilist.include.ab3@902> XINCLUDE "dos.include.ab3"
00001B0E <multilist.include.ab3@903> XINCLUDE "dos.include.ab3"
00001B48 <multilist.include.ab3@904> XINCLUDE "dos.include.ab3"
00001B7E <multilist.include.ab3@905> XINCLUDE "dos.include.ab3"
00001BAE <multilist.include.ab3@906> XINCLUDE "dos.include.ab3"
00001BBC <multilist.include.ab3@909> XINCLUDE "dos.include.ab3"
00001BC6 <multilist.include.ab3@910> XINCLUDE "dos.include.ab3"
00001BCC <multilist.include.ab3@911> XINCLUDE "dos.include.ab3"
00001BD6 <multilist.include.ab3@912> XINCLUDE "dos.include.ab3"
00001BEA <multilist.include.ab3@913> XINCLUDE "dos.include.ab3"
00001BEA <dos.include.ab3@57> XINCLUDE "dos.include.ab3"
00001BEA <wbstart.include.ab3@1> XINCLUDE "dos.include.ab3"
00001C00 <wbstart.include.ab3@58> XINCLUDE "dos.include.ab3"
00001C0A <wbstart.include.ab3@59> XINCLUDE "dos.include.ab3"
00001C22 <wbstart.include.ab3@61> XINCLUDE "dos.include.ab3"
00001C24 <wbstart.include.ab3@63> XINCLUDE "dos.include.ab3"
00001C52 <wbstart.include.ab3@64> XINCLUDE "dos.include.ab3"
00001C52 <dos.include.ab3@59> XINCLUDE "dos.include.ab3"
00001C68 <dos.include.ab3@61> XINCLUDE "dos.include.ab3"
00001C70 <dos.include.ab3@79> XINCLUDE "dos.include.ab3"
00001C78 <dos.include.ab3@80> XINCLUDE "dos.include.ab3"
00001CA0 <dos.include.ab3@81> XINCLUDE "dos.include.ab3"
00001CA8 <dos.include.ab3@82> XINCLUDE "dos.include.ab3"
00001CD0 <dos.include.ab3@83> XINCLUDE "dos.include.ab3"
00001CF8 <dos.include.ab3@84> XINCLUDE "dos.include.ab3"
00001D20 <dos.include.ab3@85> XINCLUDE "dos.include.ab3"
00001D28 <dos.include.ab3@86> XINCLUDE "dos.include.ab3"
00001D30 <dos.include.ab3@87> XINCLUDE "dos.include.ab3"
00001D38 <dos.include.ab3@88> XINCLUDE "dos.include.ab3"
00001D40 <dos.include.ab3@89> XINCLUDE "dos.include.ab3"
00001D48 <dos.include.ab3@90> XINCLUDE "dos.include.ab3"
00001D50 <dos.include.ab3@91> XINCLUDE "dos.include.ab3"
00001D58 <dos.include.ab3@92> XINCLUDE "dos.include.ab3"
00001D60 <dos.include.ab3@93> XINCLUDE "dos.include.ab3"
00001D68 <dos.include.ab3@94> XINCLUDE "dos.include.ab3"
00001D88 <dos.include.ab3@95> XINCLUDE "dos.include.ab3"
00001D90 <dos.include.ab3@96> XINCLUDE "dos.include.ab3"
00001D98 <dos.include.ab3@97> XINCLUDE "dos.include.ab3"
00001DC0 <dos.include.ab3@99> XINCLUDE "dos.include.ab3"
00001DD6 <dos.include.ab3@130> XINCLUDE "dos.include.ab3"
00001DE2 <dos.include.ab3@131> XINCLUDE "dos.include.ab3"
00001DE6 <dos.include.ab3@132> XINCLUDE "dos.include.ab3"
00001DFC <dos.include.ab3@145> XINCLUDE "dos.include.ab3"
00001E16 <dos.include.ab3@146> XINCLUDE "dos.include.ab3"
00001E2C <dos.include.ab3@147> XINCLUDE "dos.include.ab3"
00001E56 <dos.include.ab3@148> XINCLUDE "dos.include.ab3"
00001E60 <dos.include.ab3@149> XINCLUDE "dos.include.ab3"
00001E66 <dos.include.ab3@150> XINCLUDE "dos.include.ab3"
00001E7C <dos.include.ab3@163> XINCLUDE "dos.include.ab3"
00001E96 <dos.include.ab3@164> XINCLUDE "dos.include.ab3"
00001EAC <dos.include.ab3@165> XINCLUDE "dos.include.ab3"
00001ED6 <dos.include.ab3@166> XINCLUDE "dos.include.ab3"
00001EE0 <dos.include.ab3@167> XINCLUDE "dos.include.ab3"
00001EE6 <dos.include.ab3@168> XINCLUDE "dos.include.ab3"
00001F10 <dos.include.ab3@184> XINCLUDE "dos.include.ab3"
00001F1C <dos.include.ab3@185> XINCLUDE "dos.include.ab3"
00001F3C <dos.include.ab3@186> XINCLUDE "dos.include.ab3"
00001F46 <dos.include.ab3@187> XINCLUDE "dos.include.ab3"
00001F56 <dos.include.ab3@188> XINCLUDE "dos.include.ab3"
00001F66 <dos.include.ab3@189> XINCLUDE "dos.include.ab3"
00001F70 <dos.include.ab3@191> XINCLUDE "dos.include.ab3"
00001F8A <dos.include.ab3@192> XINCLUDE "dos.include.ab3"
00001FA0 <dos.include.ab3@430> XINCLUDE "dos.include.ab3"
00001FB2 <dos.include.ab3@432> XINCLUDE "dos.include.ab3"
0000202C <dos.include.ab3@433> XINCLUDE "dos.include.ab3"
00002056 <dos.include.ab3@434> XINCLUDE "dos.include.ab3"
0000206E <dos.include.ab3@435> XINCLUDE "dos.include.ab3"
00002084 <dos.include.ab3@461> XINCLUDE "dos.include.ab3"
00002096 <dos.include.ab3@462> XINCLUDE "dos.include.ab3"
0000209A <dos.include.ab3@463> XINCLUDE "dos.include.ab3"
000020B0 <dos.include.ab3@479> XINCLUDE "dos.include.ab3"
000020B2 <dos.include.ab3@480> XINCLUDE "dos.include.ab3"
000020EC <dos.include.ab3@541> XINCLUDE "dos.include.ab3"
00002120 <dos.include.ab3@543> XINCLUDE "dos.include.ab3"
00002146 <dos.include.ab3@544> XINCLUDE "dos.include.ab3"
00002166 <dos.include.ab3@545> XINCLUDE "dos.include.ab3"
00002186 <dos.include.ab3@546> XINCLUDE "dos.include.ab3"
000021B0 <dos.include.ab3@549> XINCLUDE "dos.include.ab3"
000021FC <dos.include.ab3@551> XINCLUDE "dos.include.ab3"
0000220E <dos.include.ab3@552> XINCLUDE "dos.include.ab3"
0000225E <dos.include.ab3@553> XINCLUDE "dos.include.ab3"
00002288 <dos.include.ab3@556> XINCLUDE "dos.include.ab3"
000022A6 <dos.include.ab3@558> XINCLUDE "dos.include.ab3"
000022D0 <dos.include.ab3@674> XINCLUDE "dos.include.ab3"
000022E6 <dos.include.ab3@675> XINCLUDE "dos.include.ab3"
000022F0 <dos.include.ab3@676> XINCLUDE "dos.include.ab3"
00002318 <dos.include.ab3@677> XINCLUDE "dos.include.ab3"
0000231E <dos.include.ab3@678> XINCLUDE "dos.include.ab3"
00002346 <dos.include.ab3@679> XINCLUDE "dos.include.ab3"
00002370 <dos.include.ab3@681> XINCLUDE "dos.include.ab3"
0000238E <dos.include.ab3@682> XINCLUDE "dos.include.ab3"
000023B8 <dos.include.ab3@705> XINCLUDE "dos.include.ab3"
00002428 <dos.include.ab3@706> XINCLUDE "dos.include.ab3"
00002452 <dos.include.ab3@707> XINCLUDE "dos.include.ab3"
00002470 <dos.include.ab3@708> XINCLUDE "dos.include.ab3"
0000249A <dos.include.ab3@743> XINCLUDE "dos.include.ab3"
000024BA <dos.include.ab3@744> XINCLUDE "dos.include.ab3"
000024E6 <dos.include.ab3@745> XINCLUDE "dos.include.ab3"
000024F0 <dos.include.ab3@746> XINCLUDE "dos.include.ab3"
0000250A <dos.include.ab3@747> XINCLUDE "dos.include.ab3"
00002534 <dos.include.ab3@894> XINCLUDE "dos.include.ab3"
000025E2 <dos.include.ab3@895> XINCLUDE "dos.include.ab3"
000025F8 <dos.include.ab3@896> XINCLUDE "dos.include.ab3"
00002602 <dos.include.ab3@897> XINCLUDE "dos.include.ab3"
0000262A <dos.include.ab3@898> XINCLUDE "dos.include.ab3"
00002634 <dos.include.ab3@899> XINCLUDE "dos.include.ab3"
0000263A <dos.include.ab3@900> XINCLUDE "dos.include.ab3"
00002640 <dos.include.ab3@901> XINCLUDE "dos.include.ab3"
00002646 <dos.include.ab3@902> XINCLUDE "dos.include.ab3"
00002658 <dos.include.ab3@904> XINCLUDE "dos.include.ab3"
00002662 <dos.include.ab3@906> XINCLUDE "dos.include.ab3"
0000267C <dos.include.ab3@907> XINCLUDE "dos.include.ab3"
000026BA <dos.include.ab3@928> XINCLUDE "dos.include.ab3"
000026C2 <dos.include.ab3@929> XINCLUDE "dos.include.ab3"
00002770 <dos.include.ab3@930> XINCLUDE "dos.include.ab3"
00002784 <dos.include.ab3@931> XINCLUDE "dos.include.ab3"
000027C6 <dos.include.ab3@932> XINCLUDE "dos.include.ab3"
000027E6 <dos.include.ab3@934> XINCLUDE "dos.include.ab3"
000027F0 <dos.include.ab3@935> XINCLUDE "dos.include.ab3"
0000280C <dos.include.ab3@936> XINCLUDE "dos.include.ab3"
00002846 <dos.include.ab3@988> XINCLUDE "dos.include.ab3"
0000284E <dos.include.ab3@989> XINCLUDE "dos.include.ab3"
000028FC <dos.include.ab3@990> XINCLUDE "dos.include.ab3"
00002932 <dos.include.ab3@991> XINCLUDE "dos.include.ab3"
00002952 <dos.include.ab3@992> XINCLUDE "dos.include.ab3"
00002970 <dos.include.ab3@993> XINCLUDE "dos.include.ab3"
00002994 <dos.include.ab3@994> XINCLUDE "dos.include.ab3"
0000299E <dos.include.ab3@996> XINCLUDE "dos.include.ab3"
000029BA <dos.include.ab3@997> XINCLUDE "dos.include.ab3"
000029F4 <dos.include.ab3@1014> XINCLUDE "dos.include.ab3"
00002AA2 <dos.include.ab3@1015> XINCLUDE "dos.include.ab3"
00002ADA <dos.include.ab3@1016> XINCLUDE "dos.include.ab3"
00002AFA <dos.include.ab3@1017> XINCLUDE "dos.include.ab3"
00002B00 <dos.include.ab3@1018> XINCLUDE "dos.include.ab3"
00002B20 <dos.include.ab3@1019> XINCLUDE "dos.include.ab3"
00002B2A <dos.include.ab3@1020> XINCLUDE "dos.include.ab3"
00002B44 <dos.include.ab3@1021> XINCLUDE "dos.include.ab3"
00002B5C <dos.include.ab3@1022> XINCLUDE "dos.include.ab3"
00002B66 <dos.include.ab3@1025> XINCLUDE "dos.include.ab3"
00002B82 <dos.include.ab3@1026> XINCLUDE "dos.include.ab3"
00002BAC <dos.include.ab3@1161> XINCLUDE "dos.include.ab3"
00002BBA <dos.include.ab3@1163> XINCLUDE "dos.include.ab3"
00002C80 <dos.include.ab3@1164> XINCLUDE "dos.include.ab3"
00002CAA <dos.include.ab3@1165> XINCLUDE "dos.include.ab3"
00002CD2 <dos.include.ab3@1167> XINCLUDE "dos.include.ab3"
00002CFC <dos.include.ab3@1168> XINCLUDE "dos.include.ab3"
00002D26 <dos.include.ab3@1170> XINCLUDE "dos.include.ab3"
00002D44 <dos.include.ab3@1171> XINCLUDE "dos.include.ab3"
00002D6E <dos.include.ab3@1189> XINCLUDE "dos.include.ab3"
00002DDA <dos.include.ab3@1191> XINCLUDE "dos.include.ab3"
00002E02 <dos.include.ab3@1192> XINCLUDE "dos.include.ab3"
00002E10 <dos.include.ab3@1193> XINCLUDE "dos.include.ab3"
00002E44 <dos.include.ab3@1194> XINCLUDE "dos.include.ab3"
00002E52 <dos.include.ab3@1197> XINCLUDE "dos.include.ab3"
00002E74 <dos.include.ab3@1203> XINCLUDE "dos.include.ab3"
00002E82 <dos.include.ab3@1207> XINCLUDE "dos.include.ab3"
00002EA6 <dos.include.ab3@1208> XINCLUDE "dos.include.ab3"
00002ED0 <dos.include.ab3@1209> XINCLUDE "dos.include.ab3"
00002EFA <dos.include.ab3@1212> XINCLUDE "dos.include.ab3"
00002F18 <dos.include.ab3@1213> XINCLUDE "dos.include.ab3"
00002F42 <dos.include.ab3@1274> XINCLUDE "dos.include.ab3"
00002F9A <dos.include.ab3@1275> XINCLUDE "dos.include.ab3"
00002FC4 <dos.include.ab3@1276> XINCLUDE "dos.include.ab3"
00002FE2 <dos.include.ab3@1277> XINCLUDE "dos.include.ab3"
00002FF8 <dos.include.ab3@1351> XINCLUDE "dos.include.ab3"
00002FFE <dos.include.ab3@1353> XINCLUDE "dos.include.ab3"
00003008 <dos.include.ab3@1354> XINCLUDE "dos.include.ab3"
00003012 <dos.include.ab3@1355> XINCLUDE "dos.include.ab3"
00003030 <dos.include.ab3@1358> XINCLUDE "dos.include.ab3"
00003036 <dos.include.ab3@1359> XINCLUDE "dos.include.ab3"
0000303C <dos.include.ab3@1360> XINCLUDE "dos.include.ab3"
0000304C <dos.include.ab3@1362> XINCLUDE "dos.include.ab3"
00003052 <dos.include.ab3@1363> XINCLUDE "dos.include.ab3"
0000305A <dos.include.ab3@1364> XINCLUDE "dos.include.ab3"
00003082 <dos.include.ab3@1365> XINCLUDE "dos.include.ab3"
0000308C <dos.include.ab3@1366> XINCLUDE "dos.include.ab3"
00003096 <dos.include.ab3@1368> XINCLUDE "dos.include.ab3"
000030AA <dos.include.ab3@1369> XINCLUDE "dos.include.ab3"
000030C0 <dos.include.ab3@1474> XINCLUDE "dos.include.ab3"
000030C6 <dos.include.ab3@1480> XINCLUDE "dos.include.ab3"
000030EA <dos.include.ab3@1481> XINCLUDE "dos.include.ab3"
0000310E <dos.include.ab3@1482> XINCLUDE "dos.include.ab3"
00003132 <dos.include.ab3@1483> XINCLUDE "dos.include.ab3"
00003138 <dos.include.ab3@1484> XINCLUDE "dos.include.ab3"
00003164 <dos.include.ab3@1485> XINCLUDE "dos.include.ab3"
00003166 <dos.include.ab3@1486> XINCLUDE "dos.include.ab3"
00003194 <dos.include.ab3@1487> XINCLUDE "dos.include.ab3"
000031BE <dos.include.ab3@1503> XINCLUDE "dos.include.ab3"
00003242 <dos.include.ab3@1506> XINCLUDE "dos.include.ab3"
0000330A <dos.include.ab3@1507> XINCLUDE "dos.include.ab3"
00003314 <dos.include.ab3@1509> XINCLUDE "dos.include.ab3"
0000335E <dos.include.ab3@1510> XINCLUDE "dos.include.ab3"
000033AA <dos.include.ab3@1512> XINCLUDE "dos.include.ab3"
000033E2 <dos.include.ab3@1513> XINCLUDE "dos.include.ab3"
000033F4 <dos.include.ab3@1514> XINCLUDE "dos.include.ab3"
0000340A <dos.include.ab3@1515> XINCLUDE "dos.include.ab3"
00003410 <dos.include.ab3@1516> XINCLUDE "dos.include.ab3"
00003426 <dos.include.ab3@1517> XINCLUDE "dos.include.ab3"
0000345A <dos.include.ab3@1519> XINCLUDE "dos.include.ab3"
00003460 <dos.include.ab3@1520> XINCLUDE "dos.include.ab3"
0000346A <dos.include.ab3@1522> XINCLUDE "dos.include.ab3"
00003484 <dos.include.ab3@1523> XINCLUDE "dos.include.ab3"
000034CE <dos.include.ab3@1553> XINCLUDE "dos.include.ab3"
00003504 <dos.include.ab3@1555> XINCLUDE "dos.include.ab3"
00003528 <dos.include.ab3@1556> XINCLUDE "dos.include.ab3"
00003532 <dos.include.ab3@1557> XINCLUDE "dos.include.ab3"
0000355A <dos.include.ab3@1558> XINCLUDE "dos.include.ab3"
000035A2 <dos.include.ab3@1561> XINCLUDE "dos.include.ab3"
00003678 <dos.include.ab3@1563> XINCLUDE "dos.include.ab3"
000036A2 <dos.include.ab3@1564> XINCLUDE "dos.include.ab3"
000036C2 <dos.include.ab3@1565> XINCLUDE "dos.include.ab3"
000036FC <dos.include.ab3@1584> XINCLUDE "dos.include.ab3"
00003702 <dos.include.ab3@1586> XINCLUDE "dos.include.ab3"
00003708 <dos.include.ab3@1587> XINCLUDE "dos.include.ab3"
00003710 <dos.include.ab3@1588> XINCLUDE "dos.include.ab3"
00003746 <dos.include.ab3@1589> XINCLUDE "dos.include.ab3"
00003754 <dos.include.ab3@1590> XINCLUDE "dos.include.ab3"
0000375E <dos.include.ab3@1591> XINCLUDE "dos.include.ab3"
0000378A <dos.include.ab3@1592> XINCLUDE "dos.include.ab3"
00003798 <dos.include.ab3@1593> XINCLUDE "dos.include.ab3"
000037A2 <dos.include.ab3@1594> XINCLUDE "dos.include.ab3"
000037D0 <dos.include.ab3@1596> XINCLUDE "dos.include.ab3"
0000384E <dos.include.ab3@1599> XINCLUDE "dos.include.ab3"
000038A0 <dos.include.ab3@1602> XINCLUDE "dos.include.ab3"
000038B2 <dos.include.ab3@1603> XINCLUDE "dos.include.ab3"
00003920 <dos.include.ab3@1604> XINCLUDE "dos.include.ab3"
00003926 <dos.include.ab3@1605> XINCLUDE "dos.include.ab3"
00003972 <dos.include.ab3@1606> XINCLUDE "dos.include.ab3"
00003A40 <dos.include.ab3@1610> XINCLUDE "dos.include.ab3"
00003B20 <dos.include.ab3@1611> XINCLUDE "dos.include.ab3"
00003B8C <dos.include.ab3@1613> XINCLUDE "dos.include.ab3"
00003B92 <dos.include.ab3@1614> XINCLUDE "dos.include.ab3"
00003BAE <dos.include.ab3@1615> XINCLUDE "dos.include.ab3"
00003BBC <dos.include.ab3@1618> XINCLUDE "dos.include.ab3"
00003BC2 <dos.include.ab3@1619> XINCLUDE "dos.include.ab3"
00003BD4 <dos.include.ab3@1622> XINCLUDE "dos.include.ab3"
00003BEA <dos.include.ab3@1623> XINCLUDE "dos.include.ab3"
00003BF4 <dos.include.ab3@1624> XINCLUDE "dos.include.ab3"
00003C10 <dos.include.ab3@1625> XINCLUDE "dos.include.ab3"
00003C3A <dos.include.ab3@2220> XINCLUDE "dos.include.ab3"
00003C4E <dos.include.ab3@2221> XINCLUDE "dos.include.ab3"
00003C8C <dos.include.ab3@2222> XINCLUDE "dos.include.ab3"
00003D72 <dos.include.ab3@2223> XINCLUDE "dos.include.ab3"
00003D78 <dos.include.ab3@2224> XINCLUDE "dos.include.ab3"
00003DC8 <dos.include.ab3@2225> XINCLUDE "dos.include.ab3"
00003DF2 <dos.include.ab3@2226> XINCLUDE "dos.include.ab3"
00003E10 <dos.include.ab3@2227> XINCLUDE "dos.include.ab3"
00003E3A <dos.include.ab3@2251> XINCLUDE "dos.include.ab3"
00003E4E <dos.include.ab3@2252> XINCLUDE "dos.include.ab3"
00003E8C <dos.include.ab3@2253> XINCLUDE "dos.include.ab3"
00003F72 <dos.include.ab3@2254> XINCLUDE "dos.include.ab3"
00003F78 <dos.include.ab3@2255> XINCLUDE "dos.include.ab3"
00003FEA <dos.include.ab3@2256> XINCLUDE "dos.include.ab3"
00004014 <dos.include.ab3@2257> XINCLUDE "dos.include.ab3"
00004032 <dos.include.ab3@2258> XINCLUDE "dos.include.ab3"
0000406C <dos.include.ab3@2284> XINCLUDE "dos.include.ab3"
000040A4 <dos.include.ab3@2285> XINCLUDE "dos.include.ab3"
000040FC <dos.include.ab3@2286> XINCLUDE "dos.include.ab3"
00004160 <dos.include.ab3@2287> XINCLUDE "dos.include.ab3"
0000418A <dos.include.ab3@2289> XINCLUDE "dos.include.ab3"
000041AA <dos.include.ab3@2290> XINCLUDE "dos.include.ab3"
000041D4 <dos.include.ab3@2307> XINCLUDE "dos.include.ab3"
000041DA <dos.include.ab3@2308> XINCLUDE "dos.include.ab3"
000041F0 <dos.include.ab3@2309> XINCLUDE "dos.include.ab3"
000041FA <dos.include.ab3@2310> XINCLUDE "dos.include.ab3"
00004200 <dos.include.ab3@2311> XINCLUDE "dos.include.ab3"
00004210 <dos.include.ab3@2312> XINCLUDE "dos.include.ab3"
0000421A <dos.include.ab3@2314> XINCLUDE "dos.include.ab3"
00004234 <dos.include.ab3@2315> XINCLUDE "dos.include.ab3"
00004262 <dos.include.ab3@2557> XINCLUDE "dos.include.ab3"
00004284 <dos.include.ab3@2558> XINCLUDE "dos.include.ab3"
0000428C <dos.include.ab3@2559> XINCLUDE "dos.include.ab3"
0000429A <dos.include.ab3@2560> XINCLUDE "dos.include.ab3"
000042B4 <dos.include.ab3@2562> XINCLUDE "dos.include.ab3"
000042E2 <dos.include.ab3@2581> XINCLUDE "dos.include.ab3"
000042F6 <dos.include.ab3@2582> XINCLUDE "dos.include.ab3"
0000432A <dos.include.ab3@2583> XINCLUDE "dos.include.ab3"
00004344 <dos.include.ab3@2585> XINCLUDE "dos.include.ab3"
0000434C <dos.include.ab3@2586> XINCLUDE "dos.include.ab3"
0000435A <dos.include.ab3@2587> XINCLUDE "dos.include.ab3"
00004374 <dos.include.ab3@2589> XINCLUDE "dos.include.ab3"
0000439E <dos.include.ab3@2725> XINCLUDE "dos.include.ab3"
000043AA <dos.include.ab3@2727> XINCLUDE "dos.include.ab3"
000043CA <dos.include.ab3@2728> XINCLUDE "dos.include.ab3"
000043F0 <dos.include.ab3@2729> XINCLUDE "dos.include.ab3"
0000441C <dos.include.ab3@2730> XINCLUDE "dos.include.ab3"
00004434 <dos.include.ab3@2731> XINCLUDE "dos.include.ab3"
00004442 <dos.include.ab3@2733> XINCLUDE "dos.include.ab3"
00004448 <dos.include.ab3@2734> XINCLUDE "dos.include.ab3"
00004454 <dos.include.ab3@2735> XINCLUDE "dos.include.ab3"
0000445A <dos.include.ab3@2737> XINCLUDE "dos.include.ab3"
00004466 <dos.include.ab3@2738> XINCLUDE "dos.include.ab3"
00004476 <dos.include.ab3@2740> XINCLUDE "dos.include.ab3"
0000447C <dos.include.ab3@2741> XINCLUDE "dos.include.ab3"
00004488 <dos.include.ab3@2742> XINCLUDE "dos.include.ab3"
00004492 <dos.include.ab3@2744> XINCLUDE "dos.include.ab3"
000044AC <dos.include.ab3@2745> XINCLUDE "dos.include.ab3"
000044AC <AmiBlitz3.ab3@79> XINCLUDE "dos.include.ab3"
000044BA <AmiBlitz3.ab3@81> If dos_FromCLI{}
000044C0 <AmiBlitz3.ab3@82>   CLIMode.l=True
000044CC <AmiBlitz3.ab3@83>   error_SetFlags{#error_stdout}
000044CC <common.ab3@1> XINCLUDE "/Shared/common.ab3"
000044F4 <common.ab3@49> XINCLUDE "/Shared/common.ab3"
000044FA <common.ab3@262> XINCLUDE "/Shared/common.ab3"
000044FC <common.ab3@263> XINCLUDE "/Shared/common.ab3"
0000468C <common.ab3@264> XINCLUDE "/Shared/common.ab3"
00004690 <common.ab3@265> XINCLUDE "/Shared/common.ab3"
00004694 <common.ab3@267> XINCLUDE "/Shared/common.ab3"
00004698 <common.ab3@268> XINCLUDE "/Shared/common.ab3"
0000469C <common.ab3@270> XINCLUDE "/Shared/common.ab3"
000046A0 <common.ab3@271> XINCLUDE "/Shared/common.ab3"
000046A4 <common.ab3@272> XINCLUDE "/Shared/common.ab3"
000046A8 <common.ab3@273> XINCLUDE "/Shared/common.ab3"
000046AC <common.ab3@274> XINCLUDE "/Shared/common.ab3"
000046B0 <common.ab3@275> XINCLUDE "/Shared/common.ab3"
000046B4 <common.ab3@276> XINCLUDE "/Shared/common.ab3"
000046B8 <common.ab3@277> XINCLUDE "/Shared/common.ab3"
000046BC <common.ab3@278> XINCLUDE "/Shared/common.ab3"
000046C0 <common.ab3@280> XINCLUDE "/Shared/common.ab3"
000046C4 <common.ab3@282> XINCLUDE "/Shared/common.ab3"
000046C8 <common.ab3@283> XINCLUDE "/Shared/common.ab3"
000046CC <common.ab3@284> XINCLUDE "/Shared/common.ab3"
000046D0 <common.ab3@285> XINCLUDE "/Shared/common.ab3"
000046D4 <common.ab3@286> XINCLUDE "/Shared/common.ab3"
000046D8 <common.ab3@287> XINCLUDE "/Shared/common.ab3"
000046DC <common.ab3@288> XINCLUDE "/Shared/common.ab3"
000046E0 <common.ab3@289> XINCLUDE "/Shared/common.ab3"
000046E4 <common.ab3@290> XINCLUDE "/Shared/common.ab3"
000046E8 <common.ab3@291> XINCLUDE "/Shared/common.ab3"
000046F0 <common.ab3@294> XINCLUDE "/Shared/common.ab3"
000046F4 <common.ab3@295> XINCLUDE "/Shared/common.ab3"
000046F6 <common.ab3@296> XINCLUDE "/Shared/common.ab3"
000046FA <common.ab3@297> XINCLUDE "/Shared/common.ab3"
000046FC <common.ab3@298> XINCLUDE "/Shared/common.ab3"
00004700 <common.ab3@299> XINCLUDE "/Shared/common.ab3"
00004704 <common.ab3@300> XINCLUDE "/Shared/common.ab3"
00004708 <common.ab3@301> XINCLUDE "/Shared/common.ab3"
0000470C <common.ab3@302> XINCLUDE "/Shared/common.ab3"
00004710 <common.ab3@303> XINCLUDE "/Shared/common.ab3"
00004718 <common.ab3@304> XINCLUDE "/Shared/common.ab3"
00004720 <common.ab3@305> XINCLUDE "/Shared/common.ab3"
00004724 <common.ab3@306> XINCLUDE "/Shared/common.ab3"
00004728 <common.ab3@307> XINCLUDE "/Shared/common.ab3"
0000472C <common.ab3@308> XINCLUDE "/Shared/common.ab3"
0000472E <common.ab3@310> XINCLUDE "/Shared/common.ab3"
000047EE <common.ab3@311> XINCLUDE "/Shared/common.ab3"
00004836 <common.ab3@312> XINCLUDE "/Shared/common.ab3"
0000483A <common.ab3@314> XINCLUDE "/Shared/common.ab3"
0000483C <common.ab3@315> XINCLUDE "/Shared/common.ab3"
00004840 <common.ab3@316> XINCLUDE "/Shared/common.ab3"
00004842 <common.ab3@317> XINCLUDE "/Shared/common.ab3"
00004844 <common.ab3@318> XINCLUDE "/Shared/common.ab3"
00004846 <common.ab3@319> XINCLUDE "/Shared/common.ab3"
00004848 <common.ab3@320> XINCLUDE "/Shared/common.ab3"
0000484A <common.ab3@322> XINCLUDE "/Shared/common.ab3"
0000484C <common.ab3@323> XINCLUDE "/Shared/common.ab3"
0000484D <common.ab3@327> XINCLUDE "/Shared/common.ab3"
0000484E <common.ab3@329> XINCLUDE "/Shared/common.ab3"
00004850 <common.ab3@330> XINCLUDE "/Shared/common.ab3"
00004852 <common.ab3@331> XINCLUDE "/Shared/common.ab3"
00004854 <common.ab3@333> XINCLUDE "/Shared/common.ab3"
00004856 <common.ab3@336> XINCLUDE "/Shared/common.ab3"
00004858 <common.ab3@338> XINCLUDE "/Shared/common.ab3"
0000485A <common.ab3@340> XINCLUDE "/Shared/common.ab3"
0000485E <common.ab3@342> XINCLUDE "/Shared/common.ab3"
00004860 <common.ab3@344> XINCLUDE "/Shared/common.ab3"
00004862 <common.ab3@345> XINCLUDE "/Shared/common.ab3"
00004864 <common.ab3@347> XINCLUDE "/Shared/common.ab3"
00004868 <common.ab3@349> XINCLUDE "/Shared/common.ab3"
0000486A <common.ab3@350> XINCLUDE "/Shared/common.ab3"
0000486C <common.ab3@351> XINCLUDE "/Shared/common.ab3"
00004870 <common.ab3@354> XINCLUDE "/Shared/common.ab3"
00004872 <common.ab3@355> XINCLUDE "/Shared/common.ab3"
00004874 <common.ab3@356> XINCLUDE "/Shared/common.ab3"
00004876 <common.ab3@357> XINCLUDE "/Shared/common.ab3"
00004878 <common.ab3@359> XINCLUDE "/Shared/common.ab3"
0000487A <common.ab3@360> XINCLUDE "/Shared/common.ab3"
0000487E <common.ab3@362> XINCLUDE "/Shared/common.ab3"
00004880 <common.ab3@363> XINCLUDE "/Shared/common.ab3"
00004882 <common.ab3@364> XINCLUDE "/Shared/common.ab3"
00004884 <common.ab3@368> XINCLUDE "/Shared/common.ab3"
00004886 <common.ab3@369> XINCLUDE "/Shared/common.ab3"
0000488A <common.ab3@370> XINCLUDE "/Shared/common.ab3"
0000488C <common.ab3@376> XINCLUDE "/Shared/common.ab3"
0000488E <common.ab3@378> XINCLUDE "/Shared/common.ab3"
00004890 <common.ab3@380> XINCLUDE "/Shared/common.ab3"
00004892 <common.ab3@381> XINCLUDE "/Shared/common.ab3"
00004894 <common.ab3@382> XINCLUDE "/Shared/common.ab3"
00004898 <common.ab3@383> XINCLUDE "/Shared/common.ab3"
0000489A <common.ab3@384> XINCLUDE "/Shared/common.ab3"
0000489C <common.ab3@385> XINCLUDE "/Shared/common.ab3"
0000489E <common.ab3@386> XINCLUDE "/Shared/common.ab3"
000048A0 <common.ab3@387> XINCLUDE "/Shared/common.ab3"
000048A2 <common.ab3@389> XINCLUDE "/Shared/common.ab3"
000048A4 <common.ab3@391> XINCLUDE "/Shared/common.ab3"
000048A6 <common.ab3@393> XINCLUDE "/Shared/common.ab3"
000048AA <common.ab3@394> XINCLUDE "/Shared/common.ab3"
000048AC <common.ab3@395> XINCLUDE "/Shared/common.ab3"
000048DA <common.ab3@396> XINCLUDE "/Shared/common.ab3"
000048E4 <common.ab3@397> XINCLUDE "/Shared/common.ab3"
000048E8 <common.ab3@398> XINCLUDE "/Shared/common.ab3"
000048EA <common.ab3@400> XINCLUDE "/Shared/common.ab3"
000048EC <common.ab3@401> XINCLUDE "/Shared/common.ab3"
000048F0 <common.ab3@402> XINCLUDE "/Shared/common.ab3"
000048F4 <common.ab3@403> XINCLUDE "/Shared/common.ab3"
000048FD <common.ab3@404> XINCLUDE "/Shared/common.ab3"
00004900 <common.ab3@405> XINCLUDE "/Shared/common.ab3"
0000492D <common.ab3@406> XINCLUDE "/Shared/common.ab3"
0000496D <common.ab3@407> XINCLUDE "/Shared/common.ab3"
00004979 <common.ab3@408> XINCLUDE "/Shared/common.ab3"
000049C9 <common.ab3@409> XINCLUDE "/Shared/common.ab3"
000049D5 <common.ab3@410> XINCLUDE "/Shared/common.ab3"
00004A25 <common.ab3@411> XINCLUDE "/Shared/common.ab3"
00004B21 <common.ab3@412> XINCLUDE "/Shared/common.ab3"
00004B23 <common.ab3@413> XINCLUDE "/Shared/common.ab3"
00004BE3 <common.ab3@414> XINCLUDE "/Shared/common.ab3"
00004C23 <common.ab3@415> XINCLUDE "/Shared/common.ab3"
00004C25 <common.ab3@416> XINCLUDE "/Shared/common.ab3"
00004C26 <common.ab3@417> XINCLUDE "/Shared/common.ab3"
00004C2A <common.ab3@420> XINCLUDE "/Shared/common.ab3"
00004C2E <common.ab3@422> XINCLUDE "/Shared/common.ab3"
00004C32 <common.ab3@423> XINCLUDE "/Shared/common.ab3"
00004C36 <common.ab3@424> XINCLUDE "/Shared/common.ab3"
00004C3A <common.ab3@426> XINCLUDE "/Shared/common.ab3"
00004C3E <common.ab3@428> XINCLUDE "/Shared/common.ab3"
00004C42 <common.ab3@429> XINCLUDE "/Shared/common.ab3"
00004C46 <common.ab3@430> XINCLUDE "/Shared/common.ab3"
00004C4A <common.ab3@431> XINCLUDE "/Shared/common.ab3"
00004C4E <common.ab3@432> XINCLUDE "/Shared/common.ab3"
00004C52 <common.ab3@433> XINCLUDE "/Shared/common.ab3"
00004C56 <common.ab3@434> XINCLUDE "/Shared/common.ab3"
00004C5A <common.ab3@435> XINCLUDE "/Shared/common.ab3"
00004C5E <common.ab3@437> XINCLUDE "/Shared/common.ab3"
00004C62 <common.ab3@439> XINCLUDE "/Shared/common.ab3"
00004C66 <common.ab3@441> XINCLUDE "/Shared/common.ab3"
00004C6A <common.ab3@443> XINCLUDE "/Shared/common.ab3"
00004C6E <common.ab3@444> XINCLUDE "/Shared/common.ab3"
00004C78 <common.ab3@445> XINCLUDE "/Shared/common.ab3"
00004C7C <common.ab3@446> XINCLUDE "/Shared/common.ab3"
00004C80 <common.ab3@449> XINCLUDE "/Shared/common.ab3"
00004C82 <common.ab3@450> XINCLUDE "/Shared/common.ab3"
00004C84 <common.ab3@451> XINCLUDE "/Shared/common.ab3"
00004CA2 <common.ab3@452> XINCLUDE "/Shared/common.ab3"
00004CA6 <common.ab3@453> XINCLUDE "/Shared/common.ab3"
00004CA8 <common.ab3@455> XINCLUDE "/Shared/common.ab3"
00004CAC <common.ab3@456> XINCLUDE "/Shared/common.ab3"
00004CE0 <common.ab3@457> XINCLUDE "/Shared/common.ab3"
00004CE4 <common.ab3@458> XINCLUDE "/Shared/common.ab3"
00004CF2 <common.ab3@460> XINCLUDE "/Shared/common.ab3"
00004D04 <common.ab3@461> XINCLUDE "/Shared/common.ab3"
00004D06 <common.ab3@462> XINCLUDE "/Shared/common.ab3"
00004D1A <common.ab3@463> XINCLUDE "/Shared/common.ab3"
00004D30 <common.ab3@464> XINCLUDE "/Shared/common.ab3"
00004D46 <common.ab3@465> XINCLUDE "/Shared/common.ab3"
00004D5C <common.ab3@466> XINCLUDE "/Shared/common.ab3"
00004D72 <common.ab3@467> XINCLUDE "/Shared/common.ab3"
00004D74 <common.ab3@468> XINCLUDE "/Shared/common.ab3"
00004D76 <common.ab3@469> XINCLUDE "/Shared/common.ab3"
00004D7A <common.ab3@471> XINCLUDE "/Shared/common.ab3"
00004D7E <common.ab3@473> XINCLUDE "/Shared/common.ab3"
00004D82 <common.ab3@475> XINCLUDE "/Shared/common.ab3"
00004D86 <common.ab3@476> XINCLUDE "/Shared/common.ab3"
00004D8A <common.ab3@477> XINCLUDE "/Shared/common.ab3"
00004D8E <common.ab3@478> XINCLUDE "/Shared/common.ab3"
00004D92 <common.ab3@479> XINCLUDE "/Shared/common.ab3"
00004D96 <common.ab3@480> XINCLUDE "/Shared/common.ab3"
00004D9A <common.ab3@481> XINCLUDE "/Shared/common.ab3"
00004D9E <common.ab3@482> XINCLUDE "/Shared/common.ab3"
00004DA4 <common.ab3@483> XINCLUDE "/Shared/common.ab3"
00004DB6 <common.ab3@484> XINCLUDE "/Shared/common.ab3"
00004DB8 <common.ab3@488> XINCLUDE "/Shared/common.ab3"
00004DBC <common.ab3@489> XINCLUDE "/Shared/common.ab3"
00004DBE <common.ab3@490> XINCLUDE "/Shared/common.ab3"
00004DC2 <common.ab3@491> XINCLUDE "/Shared/common.ab3"
00004DC4 <common.ab3@492> XINCLUDE "/Shared/common.ab3"
00004DC8 <common.ab3@493> XINCLUDE "/Shared/common.ab3"
00004DCA <common.ab3@494> XINCLUDE "/Shared/common.ab3"
00004DCE <common.ab3@495> XINCLUDE "/Shared/common.ab3"
00004DD0 <common.ab3@496> XINCLUDE "/Shared/common.ab3"
00004DD4 <common.ab3@497> XINCLUDE "/Shared/common.ab3"
00004DD6 <common.ab3@498> XINCLUDE "/Shared/common.ab3"
00004DDA <common.ab3@499> XINCLUDE "/Shared/common.ab3"
00004DDC <common.ab3@500> XINCLUDE "/Shared/common.ab3"
00004DE0 <common.ab3@501> XINCLUDE "/Shared/common.ab3"
00004DE2 <common.ab3@502> XINCLUDE "/Shared/common.ab3"
00004DE6 <common.ab3@503> XINCLUDE "/Shared/common.ab3"
00004DE8 <common.ab3@504> XINCLUDE "/Shared/common.ab3"
00004DEC <common.ab3@505> XINCLUDE "/Shared/common.ab3"
00004DEE <common.ab3@506> XINCLUDE "/Shared/common.ab3"
00004DF2 <common.ab3@507> XINCLUDE "/Shared/common.ab3"
00004DF4 <common.ab3@508> XINCLUDE "/Shared/common.ab3"
00004DF8 <common.ab3@509> XINCLUDE "/Shared/common.ab3"
00004DFA <common.ab3@510> XINCLUDE "/Shared/common.ab3"
00004DFE <common.ab3@511> XINCLUDE "/Shared/common.ab3"
00004E00 <common.ab3@512> XINCLUDE "/Shared/common.ab3"
00004E04 <common.ab3@513> XINCLUDE "/Shared/common.ab3"
00004E06 <common.ab3@514> XINCLUDE "/Shared/common.ab3"
00004E0A <common.ab3@515> XINCLUDE "/Shared/common.ab3"
00004E0C <common.ab3@516> XINCLUDE "/Shared/common.ab3"
00004E20 <common.ab3@520> XINCLUDE "/Shared/common.ab3"
00004E34 <common.ab3@521> XINCLUDE "/Shared/common.ab3"
00004E48 <common.ab3@522> XINCLUDE "/Shared/common.ab3"
00004E4A <common.ab3@523> XINCLUDE "/Shared/common.ab3"
00004E4E <common.ab3@524> XINCLUDE "/Shared/common.ab3"
00004E52 <common.ab3@525> XINCLUDE "/Shared/common.ab3"
00004E56 <common.ab3@526> XINCLUDE "/Shared/common.ab3"
00004E5A <common.ab3@527> XINCLUDE "/Shared/common.ab3"
00004E5E <common.ab3@528> XINCLUDE "/Shared/common.ab3"
00004E62 <common.ab3@529> XINCLUDE "/Shared/common.ab3"
00004E66 <common.ab3@530> XINCLUDE "/Shared/common.ab3"
00004E67 <common.ab3@531> XINCLUDE "/Shared/common.ab3"
00004E68 <common.ab3@532> XINCLUDE "/Shared/common.ab3"
00004E69 <common.ab3@533> XINCLUDE "/Shared/common.ab3"
00004E6C <common.ab3@534> XINCLUDE "/Shared/common.ab3"
00004E70 <common.ab3@535> XINCLUDE "/Shared/common.ab3"
00004E74 <common.ab3@536> XINCLUDE "/Shared/common.ab3"
00004E78 <common.ab3@537> XINCLUDE "/Shared/common.ab3"
00004E7C <common.ab3@538> XINCLUDE "/Shared/common.ab3"
00004E80 <common.ab3@539> XINCLUDE "/Shared/common.ab3"
00004E84 <common.ab3@540> XINCLUDE "/Shared/common.ab3"
00004E85 <common.ab3@541> XINCLUDE "/Shared/common.ab3"
00004E86 <common.ab3@542> XINCLUDE "/Shared/common.ab3"
00004E88 <common.ab3@543> XINCLUDE "/Shared/common.ab3"
00004E8C <common.ab3@544> XINCLUDE "/Shared/common.ab3"
00004E90 <common.ab3@545> XINCLUDE "/Shared/common.ab3"
00004E94 <common.ab3@546> XINCLUDE "/Shared/common.ab3"
00004E98 <common.ab3@548> XINCLUDE "/Shared/common.ab3"
00004E9C <common.ab3@549> XINCLUDE "/Shared/common.ab3"
00004EA0 <common.ab3@550> XINCLUDE "/Shared/common.ab3"
00004EA4 <common.ab3@551> XINCLUDE "/Shared/common.ab3"
00004EA8 <common.ab3@552> XINCLUDE "/Shared/common.ab3"
00004EAC <common.ab3@553> XINCLUDE "/Shared/common.ab3"
00004EB0 <common.ab3@554> XINCLUDE "/Shared/common.ab3"
00004EB4 <common.ab3@555> XINCLUDE "/Shared/common.ab3"
00004EB8 <common.ab3@559> XINCLUDE "/Shared/common.ab3"
00004EBC <common.ab3@560> XINCLUDE "/Shared/common.ab3"
00004EC0 <common.ab3@561> XINCLUDE "/Shared/common.ab3"
00004EC2 <common.ab3@562> XINCLUDE "/Shared/common.ab3"
00004EC3 <common.ab3@563> XINCLUDE "/Shared/common.ab3"
00004EC7 <common.ab3@564> XINCLUDE "/Shared/common.ab3"
00004ECB <common.ab3@565> XINCLUDE "/Shared/common.ab3"
00004ECF <common.ab3@566> XINCLUDE "/Shared/common.ab3"
00004ED3 <common.ab3@567> XINCLUDE "/Shared/common.ab3"
00004ED4 <common.ab3@569> XINCLUDE "/Shared/common.ab3"
00004ED8 <common.ab3@571> XINCLUDE "/Shared/common.ab3"
00004EDC <common.ab3@572> XINCLUDE "/Shared/common.ab3"
00004EE0 <common.ab3@573> XINCLUDE "/Shared/common.ab3"
00004EE4 <common.ab3@574> XINCLUDE "/Shared/common.ab3"
00004EE8 <common.ab3@575> XINCLUDE "/Shared/common.ab3"
00004EE9 <common.ab3@576> XINCLUDE "/Shared/common.ab3"
00004EEA <common.ab3@578> XINCLUDE "/Shared/common.ab3"
00004EEE <common.ab3@580> XINCLUDE "/Shared/common.ab3"
00004EF2 <common.ab3@581> XINCLUDE "/Shared/common.ab3"
00004EF4 <common.ab3@582> XINCLUDE "/Shared/common.ab3"
00004EF6 <common.ab3@583> XINCLUDE "/Shared/common.ab3"
00004EFA <common.ab3@587> XINCLUDE "/Shared/common.ab3"
00004EFE <common.ab3@588> XINCLUDE "/Shared/common.ab3"
00004F02 <common.ab3@590> XINCLUDE "/Shared/common.ab3"
00004F06 <common.ab3@591> XINCLUDE "/Shared/common.ab3"
00004F0A <common.ab3@593> XINCLUDE "/Shared/common.ab3"
00004F0E <common.ab3@594> XINCLUDE "/Shared/common.ab3"
00004F12 <common.ab3@596> XINCLUDE "/Shared/common.ab3"
00004F16 <common.ab3@597> XINCLUDE "/Shared/common.ab3"
00004F1A <common.ab3@598> XINCLUDE "/Shared/common.ab3"
00004F1E <common.ab3@599> XINCLUDE "/Shared/common.ab3"
00004F22 <common.ab3@600> XINCLUDE "/Shared/common.ab3"
00004F26 <common.ab3@601> XINCLUDE "/Shared/common.ab3"
00004F2A <common.ab3@602> XINCLUDE "/Shared/common.ab3"
00004F2E <common.ab3@603> XINCLUDE "/Shared/common.ab3"
00004F32 <common.ab3@604> XINCLUDE "/Shared/common.ab3"
00004F36 <common.ab3@605> XINCLUDE "/Shared/common.ab3"
00004F3A <common.ab3@606> XINCLUDE "/Shared/common.ab3"
00004F3E <common.ab3@607> XINCLUDE "/Shared/common.ab3"
00004F42 <common.ab3@608> XINCLUDE "/Shared/common.ab3"
00004F46 <common.ab3@609> XINCLUDE "/Shared/common.ab3"
00004F46 <AmiBlitz3.ab3@86> XINCLUDE "/Shared/common.ab3"
00004F46 <preprocessor.include.ab3@1> XINCLUDE "/Shared/preprocessor.include.ab3"
00004F46 <hashmap.include.ab3@1> XINCLUDE "/Shared/preprocessor.include.ab3"
00004F64 <hashmap.include.ab3@39> XINCLUDE "/Shared/preprocessor.include.ab3"
00004F6C <hashmap.include.ab3@41> XINCLUDE "/Shared/preprocessor.include.ab3"
00004F9A <hashmap.include.ab3@42> XINCLUDE "/Shared/preprocessor.include.ab3"
00004FCA <hashmap.include.ab3@43> XINCLUDE "/Shared/preprocessor.include.ab3"
00004FDA <hashmap.include.ab3@44> XINCLUDE "/Shared/preprocessor.include.ab3"
00004FE4 <hashmap.include.ab3@46> XINCLUDE "/Shared/preprocessor.include.ab3"
00004FEA <hashmap.include.ab3@48> XINCLUDE "/Shared/preprocessor.include.ab3"
0000500C <hashmap.include.ab3@52> XINCLUDE "/Shared/preprocessor.include.ab3"
0000502C <hashmap.include.ab3@54> XINCLUDE "/Shared/preprocessor.include.ab3"
0000503E <hashmap.include.ab3@55> XINCLUDE "/Shared/preprocessor.include.ab3"
00005066 <hashmap.include.ab3@56> XINCLUDE "/Shared/preprocessor.include.ab3"
0000506C <hashmap.include.ab3@58> XINCLUDE "/Shared/preprocessor.include.ab3"
00005086 <hashmap.include.ab3@62> XINCLUDE "/Shared/preprocessor.include.ab3"
000050A0 <hashmap.include.ab3@64> XINCLUDE "/Shared/preprocessor.include.ab3"
000050B2 <hashmap.include.ab3@65> XINCLUDE "/Shared/preprocessor.include.ab3"
000050C0 <hashmap.include.ab3@66> XINCLUDE "/Shared/preprocessor.include.ab3"
000050F4 <hashmap.include.ab3@67> XINCLUDE "/Shared/preprocessor.include.ab3"
00005102 <hashmap.include.ab3@68> XINCLUDE "/Shared/preprocessor.include.ab3"
0000510C <hashmap.include.ab3@69> XINCLUDE "/Shared/preprocessor.include.ab3"
0000511E <hashmap.include.ab3@70> XINCLUDE "/Shared/preprocessor.include.ab3"
00005158 <hashmap.include.ab3@71> XINCLUDE "/Shared/preprocessor.include.ab3"
00005168 <hashmap.include.ab3@72> XINCLUDE "/Shared/preprocessor.include.ab3"
0000516E <hashmap.include.ab3@74> XINCLUDE "/Shared/preprocessor.include.ab3"
0000517E <hashmap.include.ab3@75> XINCLUDE "/Shared/preprocessor.include.ab3"
0000518A <hashmap.include.ab3@77> XINCLUDE "/Shared/preprocessor.include.ab3"
00005198 <hashmap.include.ab3@79> XINCLUDE "/Shared/preprocessor.include.ab3"
000051A8 <hashmap.include.ab3@80> XINCLUDE "/Shared/preprocessor.include.ab3"
000051C8 <hashmap.include.ab3@81> XINCLUDE "/Shared/preprocessor.include.ab3"
000051D4 <hashmap.include.ab3@83> XINCLUDE "/Shared/preprocessor.include.ab3"
000051E2 <hashmap.include.ab3@84> XINCLUDE "/Shared/preprocessor.include.ab3"
000051F0 <hashmap.include.ab3@85> XINCLUDE "/Shared/preprocessor.include.ab3"
000051FE <hashmap.include.ab3@86> XINCLUDE "/Shared/preprocessor.include.ab3"
0000520C <hashmap.include.ab3@87> XINCLUDE "/Shared/preprocessor.include.ab3"
0000523E <hashmap.include.ab3@88> XINCLUDE "/Shared/preprocessor.include.ab3"
0000524C <hashmap.include.ab3@89> XINCLUDE "/Shared/preprocessor.include.ab3"
0000525C <hashmap.include.ab3@90> XINCLUDE "/Shared/preprocessor.include.ab3"
00005262 <hashmap.include.ab3@91> XINCLUDE "/Shared/preprocessor.include.ab3"
00005266 <hashmap.include.ab3@93> XINCLUDE "/Shared/preprocessor.include.ab3"
00005280 <hashmap.include.ab3@97> XINCLUDE "/Shared/preprocessor.include.ab3"
0000529A <hashmap.include.ab3@99> XINCLUDE "/Shared/preprocessor.include.ab3"
000052B4 <hashmap.include.ab3@100> XINCLUDE "/Shared/preprocessor.include.ab3"
000052D4 <hashmap.include.ab3@102> XINCLUDE "/Shared/preprocessor.include.ab3"
000052DE <hashmap.include.ab3@103> XINCLUDE "/Shared/preprocessor.include.ab3"
000052EA <hashmap.include.ab3@104> XINCLUDE "/Shared/preprocessor.include.ab3"
000052FE <hashmap.include.ab3@105> XINCLUDE "/Shared/preprocessor.include.ab3"
00005330 <hashmap.include.ab3@106> XINCLUDE "/Shared/preprocessor.include.ab3"
00005348 <hashmap.include.ab3@107> XINCLUDE "/Shared/preprocessor.include.ab3"
00005354 <hashmap.include.ab3@108> XINCLUDE "/Shared/preprocessor.include.ab3"
00005362 <hashmap.include.ab3@109> XINCLUDE "/Shared/preprocessor.include.ab3"
00005370 <hashmap.include.ab3@110> XINCLUDE "/Shared/preprocessor.include.ab3"
0000537A <hashmap.include.ab3@111> XINCLUDE "/Shared/preprocessor.include.ab3"
00005388 <hashmap.include.ab3@112> XINCLUDE "/Shared/preprocessor.include.ab3"
000053B2 <hashmap.include.ab3@113> XINCLUDE "/Shared/preprocessor.include.ab3"
000053BC <hashmap.include.ab3@116> XINCLUDE "/Shared/preprocessor.include.ab3"
000053C2 <hashmap.include.ab3@118> XINCLUDE "/Shared/preprocessor.include.ab3"
000053F0 <hashmap.include.ab3@122> XINCLUDE "/Shared/preprocessor.include.ab3"
0000540A <hashmap.include.ab3@124> XINCLUDE "/Shared/preprocessor.include.ab3"
0000542A <hashmap.include.ab3@125> XINCLUDE "/Shared/preprocessor.include.ab3"
0000543E <hashmap.include.ab3@126> XINCLUDE "/Shared/preprocessor.include.ab3"
00005456 <hashmap.include.ab3@127> XINCLUDE "/Shared/preprocessor.include.ab3"
0000547E <hashmap.include.ab3@128> XINCLUDE "/Shared/preprocessor.include.ab3"
00005498 <hashmap.include.ab3@129> XINCLUDE "/Shared/preprocessor.include.ab3"
000054A6 <hashmap.include.ab3@130> XINCLUDE "/Shared/preprocessor.include.ab3"
000054B4 <hashmap.include.ab3@131> XINCLUDE "/Shared/preprocessor.include.ab3"
000054C2 <hashmap.include.ab3@132> XINCLUDE "/Shared/preprocessor.include.ab3"
000054D6 <hashmap.include.ab3@133> XINCLUDE "/Shared/preprocessor.include.ab3"
0000552A <hashmap.include.ab3@134> XINCLUDE "/Shared/preprocessor.include.ab3"
00005554 <hashmap.include.ab3@135> XINCLUDE "/Shared/preprocessor.include.ab3"
00005598 <hashmap.include.ab3@137> XINCLUDE "/Shared/preprocessor.include.ab3"
000055B8 <hashmap.include.ab3@138> XINCLUDE "/Shared/preprocessor.include.ab3"
000055CA <hashmap.include.ab3@139> XINCLUDE "/Shared/preprocessor.include.ab3"
000055EE <hashmap.include.ab3@140> XINCLUDE "/Shared/preprocessor.include.ab3"
000055FC <hashmap.include.ab3@141> XINCLUDE "/Shared/preprocessor.include.ab3"
00005654 <hashmap.include.ab3@142> XINCLUDE "/Shared/preprocessor.include.ab3"
0000569A <hashmap.include.ab3@143> XINCLUDE "/Shared/preprocessor.include.ab3"
000056A0 <hashmap.include.ab3@144> XINCLUDE "/Shared/preprocessor.include.ab3"
000056A6 <hashmap.include.ab3@145> XINCLUDE "/Shared/preprocessor.include.ab3"
000056CE <hashmap.include.ab3@147> XINCLUDE "/Shared/preprocessor.include.ab3"
000056E0 <hashmap.include.ab3@148> XINCLUDE "/Shared/preprocessor.include.ab3"
000056F2 <hashmap.include.ab3@149> XINCLUDE "/Shared/preprocessor.include.ab3"
0000572C <hashmap.include.ab3@150> XINCLUDE "/Shared/preprocessor.include.ab3"
0000573C <hashmap.include.ab3@151> XINCLUDE "/Shared/preprocessor.include.ab3"
00005742 <hashmap.include.ab3@153> XINCLUDE "/Shared/preprocessor.include.ab3"
00005752 <hashmap.include.ab3@154> XINCLUDE "/Shared/preprocessor.include.ab3"
00005758 <hashmap.include.ab3@156> XINCLUDE "/Shared/preprocessor.include.ab3"
0000575E <hashmap.include.ab3@158> XINCLUDE "/Shared/preprocessor.include.ab3"
00005776 <hashmap.include.ab3@160> XINCLUDE "/Shared/preprocessor.include.ab3"
000057B4 <hashmap.include.ab3@164> XINCLUDE "/Shared/preprocessor.include.ab3"
000057D0 <hashmap.include.ab3@166> XINCLUDE "/Shared/preprocessor.include.ab3"
00005802 <hashmap.include.ab3@167> XINCLUDE "/Shared/preprocessor.include.ab3"
00005816 <hashmap.include.ab3@168> XINCLUDE "/Shared/preprocessor.include.ab3"
0000582A <hashmap.include.ab3@169> XINCLUDE "/Shared/preprocessor.include.ab3"
00005842 <hashmap.include.ab3@170> XINCLUDE "/Shared/preprocessor.include.ab3"
0000586A <hashmap.include.ab3@172> XINCLUDE "/Shared/preprocessor.include.ab3"
00005874 <hashmap.include.ab3@176> XINCLUDE "/Shared/preprocessor.include.ab3"
00005882 <hashmap.include.ab3@177> XINCLUDE "/Shared/preprocessor.include.ab3"
0000589A <hashmap.include.ab3@178> XINCLUDE "/Shared/preprocessor.include.ab3"
000058A0 <hashmap.include.ab3@182> XINCLUDE "/Shared/preprocessor.include.ab3"
000058A8 <hashmap.include.ab3@183> XINCLUDE "/Shared/preprocessor.include.ab3"
000058C8 <hashmap.include.ab3@186> XINCLUDE "/Shared/preprocessor.include.ab3"
000058EE <hashmap.include.ab3@187> XINCLUDE "/Shared/preprocessor.include.ab3"
000058F8 <hashmap.include.ab3@188> XINCLUDE "/Shared/preprocessor.include.ab3"
00005906 <hashmap.include.ab3@189> XINCLUDE "/Shared/preprocessor.include.ab3"
00005910 <hashmap.include.ab3@191> XINCLUDE "/Shared/preprocessor.include.ab3"
0000593C <hashmap.include.ab3@192> XINCLUDE "/Shared/preprocessor.include.ab3"
00005950 <hashmap.include.ab3@193> XINCLUDE "/Shared/preprocessor.include.ab3"
00005956 <hashmap.include.ab3@194> XINCLUDE "/Shared/preprocessor.include.ab3"
00005964 <hashmap.include.ab3@195> XINCLUDE "/Shared/preprocessor.include.ab3"
0000599A <hashmap.include.ab3@198> XINCLUDE "/Shared/preprocessor.include.ab3"
000059E8 <hashmap.include.ab3@199> XINCLUDE "/Shared/preprocessor.include.ab3"
00005A10 <hashmap.include.ab3@201> XINCLUDE "/Shared/preprocessor.include.ab3"
00005A2A <hashmap.include.ab3@202> XINCLUDE "/Shared/preprocessor.include.ab3"
00005A3C <hashmap.include.ab3@203> XINCLUDE "/Shared/preprocessor.include.ab3"
00005A46 <hashmap.include.ab3@206> XINCLUDE "/Shared/preprocessor.include.ab3"
00005A62 <hashmap.include.ab3@208> XINCLUDE "/Shared/preprocessor.include.ab3"
00005A8C <hashmap.include.ab3@212> XINCLUDE "/Shared/preprocessor.include.ab3"
00005AA8 <hashmap.include.ab3@214> XINCLUDE "/Shared/preprocessor.include.ab3"
00005ACA <hashmap.include.ab3@215> XINCLUDE "/Shared/preprocessor.include.ab3"
00005AF8 <hashmap.include.ab3@216> XINCLUDE "/Shared/preprocessor.include.ab3"
00005B12 <hashmap.include.ab3@217> XINCLUDE "/Shared/preprocessor.include.ab3"
00005B3A <hashmap.include.ab3@218> XINCLUDE "/Shared/preprocessor.include.ab3"
00005B56 <hashmap.include.ab3@219> XINCLUDE "/Shared/preprocessor.include.ab3"
00005B72 <hashmap.include.ab3@220> XINCLUDE "/Shared/preprocessor.include.ab3"
00005B80 <hashmap.include.ab3@221> XINCLUDE "/Shared/preprocessor.include.ab3"
00005B94 <hashmap.include.ab3@223> XINCLUDE "/Shared/preprocessor.include.ab3"
00005BB6 <hashmap.include.ab3@224> XINCLUDE "/Shared/preprocessor.include.ab3"
00005BD8 <hashmap.include.ab3@225> XINCLUDE "/Shared/preprocessor.include.ab3"
00005BE6 <hashmap.include.ab3@226> XINCLUDE "/Shared/preprocessor.include.ab3"
00005C06 <hashmap.include.ab3@227> XINCLUDE "/Shared/preprocessor.include.ab3"
00005C36 <hashmap.include.ab3@228> XINCLUDE "/Shared/preprocessor.include.ab3"
00005C3C <hashmap.include.ab3@229> XINCLUDE "/Shared/preprocessor.include.ab3"
00005C70 <hashmap.include.ab3@230> XINCLUDE "/Shared/preprocessor.include.ab3"
00005CB2 <hashmap.include.ab3@231> XINCLUDE "/Shared/preprocessor.include.ab3"
00005CC2 <hashmap.include.ab3@232> XINCLUDE "/Shared/preprocessor.include.ab3"
00005CCC <hashmap.include.ab3@233> XINCLUDE "/Shared/preprocessor.include.ab3"
00005CDC <hashmap.include.ab3@234> XINCLUDE "/Shared/preprocessor.include.ab3"
00005CE2 <hashmap.include.ab3@238> XINCLUDE "/Shared/preprocessor.include.ab3"
00005CEA <hashmap.include.ab3@240> XINCLUDE "/Shared/preprocessor.include.ab3"
00005CF0 <hashmap.include.ab3@242> XINCLUDE "/Shared/preprocessor.include.ab3"
00005D1E <hashmap.include.ab3@246> XINCLUDE "/Shared/preprocessor.include.ab3"
00005D50 <hashmap.include.ab3@248> XINCLUDE "/Shared/preprocessor.include.ab3"
00005D88 <hashmap.include.ab3@249> XINCLUDE "/Shared/preprocessor.include.ab3"
00005D9C <hashmap.include.ab3@250> XINCLUDE "/Shared/preprocessor.include.ab3"
00005DB4 <hashmap.include.ab3@251> XINCLUDE "/Shared/preprocessor.include.ab3"
00005DDC <hashmap.include.ab3@252> XINCLUDE "/Shared/preprocessor.include.ab3"
00005E0E <hashmap.include.ab3@253> XINCLUDE "/Shared/preprocessor.include.ab3"
00005E2A <hashmap.include.ab3@254> XINCLUDE "/Shared/preprocessor.include.ab3"
00005E38 <hashmap.include.ab3@255> XINCLUDE "/Shared/preprocessor.include.ab3"
00005E4C <hashmap.include.ab3@256> XINCLUDE "/Shared/preprocessor.include.ab3"
00005EA0 <hashmap.include.ab3@257> XINCLUDE "/Shared/preprocessor.include.ab3"
00005ECA <hashmap.include.ab3@258> XINCLUDE "/Shared/preprocessor.include.ab3"
00005F0E <hashmap.include.ab3@259> XINCLUDE "/Shared/preprocessor.include.ab3"
00005F34 <hashmap.include.ab3@260> XINCLUDE "/Shared/preprocessor.include.ab3"
00005F3A <hashmap.include.ab3@262> XINCLUDE "/Shared/preprocessor.include.ab3"
00005F58 <hashmap.include.ab3@264> XINCLUDE "/Shared/preprocessor.include.ab3"
00005F76 <hashmap.include.ab3@266> XINCLUDE "/Shared/preprocessor.include.ab3"
00005F94 <hashmap.include.ab3@303> XINCLUDE "/Shared/preprocessor.include.ab3"
00005F9A <hashmap.include.ab3@305> XINCLUDE "/Shared/preprocessor.include.ab3"
00005FBC <hashmap.include.ab3@306> XINCLUDE "/Shared/preprocessor.include.ab3"
00005FEA <hashmap.include.ab3@308> XINCLUDE "/Shared/preprocessor.include.ab3"
00006012 <hashmap.include.ab3@309> XINCLUDE "/Shared/preprocessor.include.ab3"
00006036 <hashmap.include.ab3@310> XINCLUDE "/Shared/preprocessor.include.ab3"
0000608C <hashmap.include.ab3@313> XINCLUDE "/Shared/preprocessor.include.ab3"
000060DE <hashmap.include.ab3@314> XINCLUDE "/Shared/preprocessor.include.ab3"
00006134 <hashmap.include.ab3@315> XINCLUDE "/Shared/preprocessor.include.ab3"
00006144 <hashmap.include.ab3@318> XINCLUDE "/Shared/preprocessor.include.ab3"
00006196 <hashmap.include.ab3@319> XINCLUDE "/Shared/preprocessor.include.ab3"
000061BE <hashmap.include.ab3@320> XINCLUDE "/Shared/preprocessor.include.ab3"
000061E4 <hashmap.include.ab3@321> XINCLUDE "/Shared/preprocessor.include.ab3"
00006200 <hashmap.include.ab3@322> XINCLUDE "/Shared/preprocessor.include.ab3"
00006208 <hashmap.include.ab3@323> XINCLUDE "/Shared/preprocessor.include.ab3"
00006230 <hashmap.include.ab3@324> XINCLUDE "/Shared/preprocessor.include.ab3"
0000625E <hashmap.include.ab3@327> XINCLUDE "/Shared/preprocessor.include.ab3"
00006286 <hashmap.include.ab3@328> XINCLUDE "/Shared/preprocessor.include.ab3"
0000628E <hashmap.include.ab3@329> XINCLUDE "/Shared/preprocessor.include.ab3"
000062B2 <hashmap.include.ab3@330> XINCLUDE "/Shared/preprocessor.include.ab3"
000062E6 <hashmap.include.ab3@332> XINCLUDE "/Shared/preprocessor.include.ab3"
00006302 <hashmap.include.ab3@333> XINCLUDE "/Shared/preprocessor.include.ab3"
0000630C <hashmap.include.ab3@334> XINCLUDE "/Shared/preprocessor.include.ab3"
00006320 <hashmap.include.ab3@335> XINCLUDE "/Shared/preprocessor.include.ab3"
00006340 <hashmap.include.ab3@336> XINCLUDE "/Shared/preprocessor.include.ab3"
0000635C <hashmap.include.ab3@337> XINCLUDE "/Shared/preprocessor.include.ab3"
0000636A <hashmap.include.ab3@338> XINCLUDE "/Shared/preprocessor.include.ab3"
00006378 <hashmap.include.ab3@339> XINCLUDE "/Shared/preprocessor.include.ab3"
0000637E <hashmap.include.ab3@340> XINCLUDE "/Shared/preprocessor.include.ab3"
00006396 <hashmap.include.ab3@341> XINCLUDE "/Shared/preprocessor.include.ab3"
000063A6 <hashmap.include.ab3@343> XINCLUDE "/Shared/preprocessor.include.ab3"
000063D4 <hashmap.include.ab3@344> XINCLUDE "/Shared/preprocessor.include.ab3"
00006430 <hashmap.include.ab3@345> XINCLUDE "/Shared/preprocessor.include.ab3"
000064A6 <hashmap.include.ab3@346> XINCLUDE "/Shared/preprocessor.include.ab3"
00006502 <hashmap.include.ab3@347> XINCLUDE "/Shared/preprocessor.include.ab3"
00006508 <hashmap.include.ab3@348> XINCLUDE "/Shared/preprocessor.include.ab3"
00006512 <hashmap.include.ab3@351> XINCLUDE "/Shared/preprocessor.include.ab3"
00006518 <hashmap.include.ab3@353> XINCLUDE "/Shared/preprocessor.include.ab3"
00006546 <hashmap.include.ab3@357> XINCLUDE "/Shared/preprocessor.include.ab3"
0000654C <hashmap.include.ab3@359> XINCLUDE "/Shared/preprocessor.include.ab3"
0000656C <hashmap.include.ab3@360> XINCLUDE "/Shared/preprocessor.include.ab3"
00006576 <hashmap.include.ab3@361> XINCLUDE "/Shared/preprocessor.include.ab3"
00006588 <hashmap.include.ab3@362> XINCLUDE "/Shared/preprocessor.include.ab3"
00006598 <hashmap.include.ab3@363> XINCLUDE "/Shared/preprocessor.include.ab3"
000065A2 <hashmap.include.ab3@366> XINCLUDE "/Shared/preprocessor.include.ab3"
000065BC <hashmap.include.ab3@368> XINCLUDE "/Shared/preprocessor.include.ab3"
000065D6 <hashmap.include.ab3@372> XINCLUDE "/Shared/preprocessor.include.ab3"
000065DC <hashmap.include.ab3@374> XINCLUDE "/Shared/preprocessor.include.ab3"
000065E2 <hashmap.include.ab3@375> XINCLUDE "/Shared/preprocessor.include.ab3"
000065EC <hashmap.include.ab3@376> XINCLUDE "/Shared/preprocessor.include.ab3"
000065F4 <hashmap.include.ab3@377> XINCLUDE "/Shared/preprocessor.include.ab3"
0000661C <hashmap.include.ab3@378> XINCLUDE "/Shared/preprocessor.include.ab3"
00006622 <hashmap.include.ab3@379> XINCLUDE "/Shared/preprocessor.include.ab3"
00006636 <hashmap.include.ab3@380> XINCLUDE "/Shared/preprocessor.include.ab3"
00006672 <hashmap.include.ab3@382> XINCLUDE "/Shared/preprocessor.include.ab3"
00006698 <hashmap.include.ab3@383> XINCLUDE "/Shared/preprocessor.include.ab3"
000066A6 <hashmap.include.ab3@384> XINCLUDE "/Shared/preprocessor.include.ab3"
000066E2 <hashmap.include.ab3@386> XINCLUDE "/Shared/preprocessor.include.ab3"
000066F6 <hashmap.include.ab3@387> XINCLUDE "/Shared/preprocessor.include.ab3"
00006732 <hashmap.include.ab3@389> XINCLUDE "/Shared/preprocessor.include.ab3"
00006748 <hashmap.include.ab3@390> XINCLUDE "/Shared/preprocessor.include.ab3"
0000675C <hashmap.include.ab3@392> XINCLUDE "/Shared/preprocessor.include.ab3"
00006766 <hashmap.include.ab3@393> XINCLUDE "/Shared/preprocessor.include.ab3"
0000678A <hashmap.include.ab3@394> XINCLUDE "/Shared/preprocessor.include.ab3"
000067C2 <hashmap.include.ab3@395> XINCLUDE "/Shared/preprocessor.include.ab3"
000067C8 <hashmap.include.ab3@396> XINCLUDE "/Shared/preprocessor.include.ab3"
000067D0 <hashmap.include.ab3@397> XINCLUDE "/Shared/preprocessor.include.ab3"
000067E4 <hashmap.include.ab3@400> XINCLUDE "/Shared/preprocessor.include.ab3"
000067EE <hashmap.include.ab3@401> XINCLUDE "/Shared/preprocessor.include.ab3"
00006816 <hashmap.include.ab3@402> XINCLUDE "/Shared/preprocessor.include.ab3"
0000683E <hashmap.include.ab3@403> XINCLUDE "/Shared/preprocessor.include.ab3"
00006850 <hashmap.include.ab3@404> XINCLUDE "/Shared/preprocessor.include.ab3"
0000687C <hashmap.include.ab3@405> XINCLUDE "/Shared/preprocessor.include.ab3"
000068B0 <hashmap.include.ab3@406> XINCLUDE "/Shared/preprocessor.include.ab3"
000068DC <hashmap.include.ab3@407> XINCLUDE "/Shared/preprocessor.include.ab3"
00006928 <hashmap.include.ab3@408> XINCLUDE "/Shared/preprocessor.include.ab3"
00006938 <hashmap.include.ab3@410> XINCLUDE "/Shared/preprocessor.include.ab3"
0000693E <hashmap.include.ab3@412> XINCLUDE "/Shared/preprocessor.include.ab3"
00006946 <hashmap.include.ab3@413> XINCLUDE "/Shared/preprocessor.include.ab3"
00006974 <hashmap.include.ab3@416> XINCLUDE "/Shared/preprocessor.include.ab3"
00006976 <hashmap.include.ab3@418> XINCLUDE "/Shared/preprocessor.include.ab3"
0000697C <hashmap.include.ab3@419> XINCLUDE "/Shared/preprocessor.include.ab3"
00006986 <hashmap.include.ab3@421> XINCLUDE "/Shared/preprocessor.include.ab3"
000069B0 <hashmap.include.ab3@422> XINCLUDE "/Shared/preprocessor.include.ab3"
000069BA <hashmap.include.ab3@425> XINCLUDE "/Shared/preprocessor.include.ab3"
000069C0 <hashmap.include.ab3@427> XINCLUDE "/Shared/preprocessor.include.ab3"
000069EA <hashmap.include.ab3@431> XINCLUDE "/Shared/preprocessor.include.ab3"
000069F0 <hashmap.include.ab3@433> XINCLUDE "/Shared/preprocessor.include.ab3"
00006A10 <hashmap.include.ab3@434> XINCLUDE "/Shared/preprocessor.include.ab3"
00006A1A <hashmap.include.ab3@435> XINCLUDE "/Shared/preprocessor.include.ab3"
00006A28 <hashmap.include.ab3@436> XINCLUDE "/Shared/preprocessor.include.ab3"
00006A38 <hashmap.include.ab3@437> XINCLUDE "/Shared/preprocessor.include.ab3"
00006A42 <hashmap.include.ab3@440> XINCLUDE "/Shared/preprocessor.include.ab3"
00006A5C <hashmap.include.ab3@442> XINCLUDE "/Shared/preprocessor.include.ab3"
00006A5C <preprocessor.include.ab3@11> XINCLUDE "/Shared/preprocessor.include.ab3"
00006A76 <preprocessor.include.ab3@31> XINCLUDE "/Shared/preprocessor.include.ab3"
00006A90 <preprocessor.include.ab3@32> XINCLUDE "/Shared/preprocessor.include.ab3"
00006AB2 <preprocessor.include.ab3@33> XINCLUDE "/Shared/preprocessor.include.ab3"
00006AE4 <preprocessor.include.ab3@34> XINCLUDE "/Shared/preprocessor.include.ab3"
00006AE8 <preprocessor.include.ab3@35> XINCLUDE "/Shared/preprocessor.include.ab3"
00006B02 <preprocessor.include.ab3@39> XINCLUDE "/Shared/preprocessor.include.ab3"
00006B1C <preprocessor.include.ab3@40> XINCLUDE "/Shared/preprocessor.include.ab3"
00006B26 <preprocessor.include.ab3@41> XINCLUDE "/Shared/preprocessor.include.ab3"
00006B3C <preprocessor.include.ab3@42> XINCLUDE "/Shared/preprocessor.include.ab3"
00006B40 <preprocessor.include.ab3@43> XINCLUDE "/Shared/preprocessor.include.ab3"
00006B5A <preprocessor.include.ab3@47> XINCLUDE "/Shared/preprocessor.include.ab3"
00006B74 <preprocessor.include.ab3@48> XINCLUDE "/Shared/preprocessor.include.ab3"
00006B8E <preprocessor.include.ab3@49> XINCLUDE "/Shared/preprocessor.include.ab3"
00006BB2 <preprocessor.include.ab3@50> XINCLUDE "/Shared/preprocessor.include.ab3"
00006BB8 <preprocessor.include.ab3@51> XINCLUDE "/Shared/preprocessor.include.ab3"
00006BE2 <preprocessor.include.ab3@52> XINCLUDE "/Shared/preprocessor.include.ab3"
00006BFC <preprocessor.include.ab3@53> XINCLUDE "/Shared/preprocessor.include.ab3"
00006C0C <preprocessor.include.ab3@54> XINCLUDE "/Shared/preprocessor.include.ab3"
00006C16 <preprocessor.include.ab3@57> XINCLUDE "/Shared/preprocessor.include.ab3"
00006C24 <preprocessor.include.ab3@58> XINCLUDE "/Shared/preprocessor.include.ab3"
00006C46 <preprocessor.include.ab3@59> XINCLUDE "/Shared/preprocessor.include.ab3"
00006C7A <preprocessor.include.ab3@60> XINCLUDE "/Shared/preprocessor.include.ab3"
00006C96 <preprocessor.include.ab3@61> XINCLUDE "/Shared/preprocessor.include.ab3"
00006CA0 <preprocessor.include.ab3@62> XINCLUDE "/Shared/preprocessor.include.ab3"
00006CBC <preprocessor.include.ab3@63> XINCLUDE "/Shared/preprocessor.include.ab3"
00006CCA <preprocessor.include.ab3@64> XINCLUDE "/Shared/preprocessor.include.ab3"
00006CDE <preprocessor.include.ab3@65> XINCLUDE "/Shared/preprocessor.include.ab3"
00006D00 <preprocessor.include.ab3@66> XINCLUDE "/Shared/preprocessor.include.ab3"
00006D22 <preprocessor.include.ab3@67> XINCLUDE "/Shared/preprocessor.include.ab3"
00006D40 <preprocessor.include.ab3@68> XINCLUDE "/Shared/preprocessor.include.ab3"
00006D6E <preprocessor.include.ab3@69> XINCLUDE "/Shared/preprocessor.include.ab3"
00006D74 <preprocessor.include.ab3@70> XINCLUDE "/Shared/preprocessor.include.ab3"
00006D84 <preprocessor.include.ab3@72> XINCLUDE "/Shared/preprocessor.include.ab3"
00006D88 <preprocessor.include.ab3@74> XINCLUDE "/Shared/preprocessor.include.ab3"
00006D9E <preprocessor.include.ab3@78> XINCLUDE "/Shared/preprocessor.include.ab3"
00006DBE <preprocessor.include.ab3@79> XINCLUDE "/Shared/preprocessor.include.ab3"
00006DC8 <preprocessor.include.ab3@80> XINCLUDE "/Shared/preprocessor.include.ab3"
00006DF2 <preprocessor.include.ab3@81> XINCLUDE "/Shared/preprocessor.include.ab3"
00006E08 <preprocessor.include.ab3@82> XINCLUDE "/Shared/preprocessor.include.ab3"
00006E18 <preprocessor.include.ab3@83> XINCLUDE "/Shared/preprocessor.include.ab3"
00006E34 <preprocessor.include.ab3@85> XINCLUDE "/Shared/preprocessor.include.ab3"
00006E50 <preprocessor.include.ab3@86> XINCLUDE "/Shared/preprocessor.include.ab3"
00006E6C <preprocessor.include.ab3@87> XINCLUDE "/Shared/preprocessor.include.ab3"
00006E88 <preprocessor.include.ab3@88> XINCLUDE "/Shared/preprocessor.include.ab3"
00006EA4 <preprocessor.include.ab3@89> XINCLUDE "/Shared/preprocessor.include.ab3"
00006EC0 <preprocessor.include.ab3@90> XINCLUDE "/Shared/preprocessor.include.ab3"
00006EDC <preprocessor.include.ab3@91> XINCLUDE "/Shared/preprocessor.include.ab3"
00006EF8 <preprocessor.include.ab3@92> XINCLUDE "/Shared/preprocessor.include.ab3"
00006F14 <preprocessor.include.ab3@93> XINCLUDE "/Shared/preprocessor.include.ab3"
00006F30 <preprocessor.include.ab3@94> XINCLUDE "/Shared/preprocessor.include.ab3"
00006F4C <preprocessor.include.ab3@95> XINCLUDE "/Shared/preprocessor.include.ab3"
00006F68 <preprocessor.include.ab3@96> XINCLUDE "/Shared/preprocessor.include.ab3"
00006F84 <preprocessor.include.ab3@97> XINCLUDE "/Shared/preprocessor.include.ab3"
00006FA0 <preprocessor.include.ab3@98> XINCLUDE "/Shared/preprocessor.include.ab3"
00006FBC <preprocessor.include.ab3@99> XINCLUDE "/Shared/preprocessor.include.ab3"
00006FD8 <preprocessor.include.ab3@100> XINCLUDE "/Shared/preprocessor.include.ab3"
00006FF4 <preprocessor.include.ab3@101> XINCLUDE "/Shared/preprocessor.include.ab3"
00007010 <preprocessor.include.ab3@102> XINCLUDE "/Shared/preprocessor.include.ab3"
0000702C <preprocessor.include.ab3@103> XINCLUDE "/Shared/preprocessor.include.ab3"
00007048 <preprocessor.include.ab3@104> XINCLUDE "/Shared/preprocessor.include.ab3"
00007064 <preprocessor.include.ab3@105> XINCLUDE "/Shared/preprocessor.include.ab3"
00007080 <preprocessor.include.ab3@106> XINCLUDE "/Shared/preprocessor.include.ab3"
0000709C <preprocessor.include.ab3@107> XINCLUDE "/Shared/preprocessor.include.ab3"
000070B8 <preprocessor.include.ab3@108> XINCLUDE "/Shared/preprocessor.include.ab3"
000070D4 <preprocessor.include.ab3@109> XINCLUDE "/Shared/preprocessor.include.ab3"
000070F0 <preprocessor.include.ab3@110> XINCLUDE "/Shared/preprocessor.include.ab3"
0000710C <preprocessor.include.ab3@111> XINCLUDE "/Shared/preprocessor.include.ab3"
00007128 <preprocessor.include.ab3@112> XINCLUDE "/Shared/preprocessor.include.ab3"
00007144 <preprocessor.include.ab3@113> XINCLUDE "/Shared/preprocessor.include.ab3"
00007160 <preprocessor.include.ab3@114> XINCLUDE "/Shared/preprocessor.include.ab3"
0000717C <preprocessor.include.ab3@115> XINCLUDE "/Shared/preprocessor.include.ab3"
00007198 <preprocessor.include.ab3@116> XINCLUDE "/Shared/preprocessor.include.ab3"
000071B4 <preprocessor.include.ab3@117> XINCLUDE "/Shared/preprocessor.include.ab3"
000071D0 <preprocessor.include.ab3@118> XINCLUDE "/Shared/preprocessor.include.ab3"
000071EC <preprocessor.include.ab3@119> XINCLUDE "/Shared/preprocessor.include.ab3"
00007208 <preprocessor.include.ab3@120> XINCLUDE "/Shared/preprocessor.include.ab3"
00007224 <preprocessor.include.ab3@121> XINCLUDE "/Shared/preprocessor.include.ab3"
00007240 <preprocessor.include.ab3@122> XINCLUDE "/Shared/preprocessor.include.ab3"
0000725C <preprocessor.include.ab3@123> XINCLUDE "/Shared/preprocessor.include.ab3"
00007278 <preprocessor.include.ab3@124> XINCLUDE "/Shared/preprocessor.include.ab3"
00007294 <preprocessor.include.ab3@125> XINCLUDE "/Shared/preprocessor.include.ab3"
000072B0 <preprocessor.include.ab3@126> XINCLUDE "/Shared/preprocessor.include.ab3"
000072CC <preprocessor.include.ab3@127> XINCLUDE "/Shared/preprocessor.include.ab3"
000072E8 <preprocessor.include.ab3@128> XINCLUDE "/Shared/preprocessor.include.ab3"
00007304 <preprocessor.include.ab3@129> XINCLUDE "/Shared/preprocessor.include.ab3"
00007320 <preprocessor.include.ab3@130> XINCLUDE "/Shared/preprocessor.include.ab3"
0000733C <preprocessor.include.ab3@131> XINCLUDE "/Shared/preprocessor.include.ab3"
00007358 <preprocessor.include.ab3@132> XINCLUDE "/Shared/preprocessor.include.ab3"
00007374 <preprocessor.include.ab3@133> XINCLUDE "/Shared/preprocessor.include.ab3"
00007390 <preprocessor.include.ab3@134> XINCLUDE "/Shared/preprocessor.include.ab3"
000073AC <preprocessor.include.ab3@135> XINCLUDE "/Shared/preprocessor.include.ab3"
000073C8 <preprocessor.include.ab3@136> XINCLUDE "/Shared/preprocessor.include.ab3"
000073E4 <preprocessor.include.ab3@137> XINCLUDE "/Shared/preprocessor.include.ab3"
00007400 <preprocessor.include.ab3@138> XINCLUDE "/Shared/preprocessor.include.ab3"
0000741C <preprocessor.include.ab3@139> XINCLUDE "/Shared/preprocessor.include.ab3"
00007438 <preprocessor.include.ab3@140> XINCLUDE "/Shared/preprocessor.include.ab3"
00007454 <preprocessor.include.ab3@141> XINCLUDE "/Shared/preprocessor.include.ab3"
00007470 <preprocessor.include.ab3@142> XINCLUDE "/Shared/preprocessor.include.ab3"
0000748C <preprocessor.include.ab3@143> XINCLUDE "/Shared/preprocessor.include.ab3"
000074A8 <preprocessor.include.ab3@144> XINCLUDE "/Shared/preprocessor.include.ab3"
000074C4 <preprocessor.include.ab3@145> XINCLUDE "/Shared/preprocessor.include.ab3"
000074E0 <preprocessor.include.ab3@146> XINCLUDE "/Shared/preprocessor.include.ab3"
000074FC <preprocessor.include.ab3@147> XINCLUDE "/Shared/preprocessor.include.ab3"
00007518 <preprocessor.include.ab3@148> XINCLUDE "/Shared/preprocessor.include.ab3"
00007534 <preprocessor.include.ab3@149> XINCLUDE "/Shared/preprocessor.include.ab3"
00007550 <preprocessor.include.ab3@150> XINCLUDE "/Shared/preprocessor.include.ab3"
0000756C <preprocessor.include.ab3@151> XINCLUDE "/Shared/preprocessor.include.ab3"
00007588 <preprocessor.include.ab3@152> XINCLUDE "/Shared/preprocessor.include.ab3"
000075A4 <preprocessor.include.ab3@153> XINCLUDE "/Shared/preprocessor.include.ab3"
000075C0 <preprocessor.include.ab3@154> XINCLUDE "/Shared/preprocessor.include.ab3"
000075DC <preprocessor.include.ab3@155> XINCLUDE "/Shared/preprocessor.include.ab3"
000075F8 <preprocessor.include.ab3@156> XINCLUDE "/Shared/preprocessor.include.ab3"
00007614 <preprocessor.include.ab3@157> XINCLUDE "/Shared/preprocessor.include.ab3"
00007630 <preprocessor.include.ab3@158> XINCLUDE "/Shared/preprocessor.include.ab3"
0000764C <preprocessor.include.ab3@159> XINCLUDE "/Shared/preprocessor.include.ab3"
00007668 <preprocessor.include.ab3@160> XINCLUDE "/Shared/preprocessor.include.ab3"
00007684 <preprocessor.include.ab3@161> XINCLUDE "/Shared/preprocessor.include.ab3"
000076A0 <preprocessor.include.ab3@162> XINCLUDE "/Shared/preprocessor.include.ab3"
000076BC <preprocessor.include.ab3@163> XINCLUDE "/Shared/preprocessor.include.ab3"
000076D8 <preprocessor.include.ab3@164> XINCLUDE "/Shared/preprocessor.include.ab3"
000076F4 <preprocessor.include.ab3@165> XINCLUDE "/Shared/preprocessor.include.ab3"
00007710 <preprocessor.include.ab3@166> XINCLUDE "/Shared/preprocessor.include.ab3"
0000772C <preprocessor.include.ab3@167> XINCLUDE "/Shared/preprocessor.include.ab3"
00007748 <preprocessor.include.ab3@168> XINCLUDE "/Shared/preprocessor.include.ab3"
00007764 <preprocessor.include.ab3@169> XINCLUDE "/Shared/preprocessor.include.ab3"
00007780 <preprocessor.include.ab3@170> XINCLUDE "/Shared/preprocessor.include.ab3"
0000779C <preprocessor.include.ab3@171> XINCLUDE "/Shared/preprocessor.include.ab3"
000077B8 <preprocessor.include.ab3@172> XINCLUDE "/Shared/preprocessor.include.ab3"
000077D4 <preprocessor.include.ab3@173> XINCLUDE "/Shared/preprocessor.include.ab3"
000077F0 <preprocessor.include.ab3@174> XINCLUDE "/Shared/preprocessor.include.ab3"
0000780C <preprocessor.include.ab3@175> XINCLUDE "/Shared/preprocessor.include.ab3"
00007828 <preprocessor.include.ab3@176> XINCLUDE "/Shared/preprocessor.include.ab3"
00007844 <preprocessor.include.ab3@177> XINCLUDE "/Shared/preprocessor.include.ab3"
00007860 <preprocessor.include.ab3@178> XINCLUDE "/Shared/preprocessor.include.ab3"
0000787C <preprocessor.include.ab3@179> XINCLUDE "/Shared/preprocessor.include.ab3"
00007898 <preprocessor.include.ab3@180> XINCLUDE "/Shared/preprocessor.include.ab3"
000078B4 <preprocessor.include.ab3@181> XINCLUDE "/Shared/preprocessor.include.ab3"
000078D0 <preprocessor.include.ab3@182> XINCLUDE "/Shared/preprocessor.include.ab3"
000078EC <preprocessor.include.ab3@183> XINCLUDE "/Shared/preprocessor.include.ab3"
00007908 <preprocessor.include.ab3@184> XINCLUDE "/Shared/preprocessor.include.ab3"
00007924 <preprocessor.include.ab3@185> XINCLUDE "/Shared/preprocessor.include.ab3"
00007940 <preprocessor.include.ab3@186> XINCLUDE "/Shared/preprocessor.include.ab3"
0000795C <preprocessor.include.ab3@187> XINCLUDE "/Shared/preprocessor.include.ab3"
00007978 <preprocessor.include.ab3@188> XINCLUDE "/Shared/preprocessor.include.ab3"
00007994 <preprocessor.include.ab3@189> XINCLUDE "/Shared/preprocessor.include.ab3"
000079B0 <preprocessor.include.ab3@190> XINCLUDE "/Shared/preprocessor.include.ab3"
000079CC <preprocessor.include.ab3@191> XINCLUDE "/Shared/preprocessor.include.ab3"
000079E8 <preprocessor.include.ab3@192> XINCLUDE "/Shared/preprocessor.include.ab3"
00007A04 <preprocessor.include.ab3@193> XINCLUDE "/Shared/preprocessor.include.ab3"
00007A20 <preprocessor.include.ab3@194> XINCLUDE "/Shared/preprocessor.include.ab3"
00007A3C <preprocessor.include.ab3@195> XINCLUDE "/Shared/preprocessor.include.ab3"
00007A58 <preprocessor.include.ab3@196> XINCLUDE "/Shared/preprocessor.include.ab3"
00007A74 <preprocessor.include.ab3@197> XINCLUDE "/Shared/preprocessor.include.ab3"
00007A90 <preprocessor.include.ab3@198> XINCLUDE "/Shared/preprocessor.include.ab3"
00007AAC <preprocessor.include.ab3@199> XINCLUDE "/Shared/preprocessor.include.ab3"
00007AC8 <preprocessor.include.ab3@200> XINCLUDE "/Shared/preprocessor.include.ab3"
00007AE4 <preprocessor.include.ab3@201> XINCLUDE "/Shared/preprocessor.include.ab3"
00007B00 <preprocessor.include.ab3@202> XINCLUDE "/Shared/preprocessor.include.ab3"
00007B1C <preprocessor.include.ab3@203> XINCLUDE "/Shared/preprocessor.include.ab3"
00007B38 <preprocessor.include.ab3@204> XINCLUDE "/Shared/preprocessor.include.ab3"
00007B54 <preprocessor.include.ab3@205> XINCLUDE "/Shared/preprocessor.include.ab3"
00007B70 <preprocessor.include.ab3@206> XINCLUDE "/Shared/preprocessor.include.ab3"
00007B8C <preprocessor.include.ab3@207> XINCLUDE "/Shared/preprocessor.include.ab3"
00007BA8 <preprocessor.include.ab3@208> XINCLUDE "/Shared/preprocessor.include.ab3"
00007BC4 <preprocessor.include.ab3@209> XINCLUDE "/Shared/preprocessor.include.ab3"
00007BE0 <preprocessor.include.ab3@210> XINCLUDE "/Shared/preprocessor.include.ab3"
00007BFC <preprocessor.include.ab3@211> XINCLUDE "/Shared/preprocessor.include.ab3"
00007C18 <preprocessor.include.ab3@212> XINCLUDE "/Shared/preprocessor.include.ab3"
00007C20 <preprocessor.include.ab3@213> XINCLUDE "/Shared/preprocessor.include.ab3"
00007C2A <preprocessor.include.ab3@214> XINCLUDE "/Shared/preprocessor.include.ab3"
00007C34 <preprocessor.include.ab3@216> XINCLUDE "/Shared/preprocessor.include.ab3"
00007C3A <preprocessor.include.ab3@217> XINCLUDE "/Shared/preprocessor.include.ab3"
00007C68 <preprocessor.include.ab3@254> XINCLUDE "/Shared/preprocessor.include.ab3"
00007C84 <preprocessor.include.ab3@255> XINCLUDE "/Shared/preprocessor.include.ab3"
00007CB6 <preprocessor.include.ab3@256> XINCLUDE "/Shared/preprocessor.include.ab3"
00007CC0 <preprocessor.include.ab3@257> XINCLUDE "/Shared/preprocessor.include.ab3"
00007CE2 <preprocessor.include.ab3@258> XINCLUDE "/Shared/preprocessor.include.ab3"
00007CEC <preprocessor.include.ab3@259> XINCLUDE "/Shared/preprocessor.include.ab3"
00007CF6 <preprocessor.include.ab3@260> XINCLUDE "/Shared/preprocessor.include.ab3"
00007D00 <preprocessor.include.ab3@262> XINCLUDE "/Shared/preprocessor.include.ab3"
00007D1A <preprocessor.include.ab3@263> XINCLUDE "/Shared/preprocessor.include.ab3"
00007D48 <preprocessor.include.ab3@267> XINCLUDE "/Shared/preprocessor.include.ab3"
00007D64 <preprocessor.include.ab3@268> XINCLUDE "/Shared/preprocessor.include.ab3"
00007D72 <preprocessor.include.ab3@269> XINCLUDE "/Shared/preprocessor.include.ab3"
00007DAC <preprocessor.include.ab3@270> XINCLUDE "/Shared/preprocessor.include.ab3"
00007DB4 <preprocessor.include.ab3@272> XINCLUDE "/Shared/preprocessor.include.ab3"
00007DCE <preprocessor.include.ab3@273> XINCLUDE "/Shared/preprocessor.include.ab3"
00007DF4 <preprocessor.include.ab3@280> XINCLUDE "/Shared/preprocessor.include.ab3"
00007E16 <preprocessor.include.ab3@281> XINCLUDE "/Shared/preprocessor.include.ab3"
00007E3A <preprocessor.include.ab3@282> XINCLUDE "/Shared/preprocessor.include.ab3"
00007E40 <preprocessor.include.ab3@283> XINCLUDE "/Shared/preprocessor.include.ab3"
00007E4E <preprocessor.include.ab3@284> XINCLUDE "/Shared/preprocessor.include.ab3"
00007E54 <preprocessor.include.ab3@285> XINCLUDE "/Shared/preprocessor.include.ab3"
00007E5C <preprocessor.include.ab3@286> XINCLUDE "/Shared/preprocessor.include.ab3"
00007E62 <preprocessor.include.ab3@287> XINCLUDE "/Shared/preprocessor.include.ab3"
00007E6A <preprocessor.include.ab3@288> XINCLUDE "/Shared/preprocessor.include.ab3"
00007E7E <preprocessor.include.ab3@290> XINCLUDE "/Shared/preprocessor.include.ab3"
00007EA4 <preprocessor.include.ab3@291> XINCLUDE "/Shared/preprocessor.include.ab3"
00007ECC <preprocessor.include.ab3@292> XINCLUDE "/Shared/preprocessor.include.ab3"
00007ED6 <preprocessor.include.ab3@294> XINCLUDE "/Shared/preprocessor.include.ab3"
00007EEA <preprocessor.include.ab3@295> XINCLUDE "/Shared/preprocessor.include.ab3"
00007EFE <preprocessor.include.ab3@296> XINCLUDE "/Shared/preprocessor.include.ab3"
00007F0E <preprocessor.include.ab3@297> XINCLUDE "/Shared/preprocessor.include.ab3"
00007F28 <preprocessor.include.ab3@298> XINCLUDE "/Shared/preprocessor.include.ab3"
00007F56 <preprocessor.include.ab3@299> XINCLUDE "/Shared/preprocessor.include.ab3"
00007F6A <preprocessor.include.ab3@300> XINCLUDE "/Shared/preprocessor.include.ab3"
00007F92 <preprocessor.include.ab3@301> XINCLUDE "/Shared/preprocessor.include.ab3"
00007F98 <preprocessor.include.ab3@302> XINCLUDE "/Shared/preprocessor.include.ab3"
00007FA0 <preprocessor.include.ab3@303> XINCLUDE "/Shared/preprocessor.include.ab3"
00007FA6 <preprocessor.include.ab3@305> XINCLUDE "/Shared/preprocessor.include.ab3"
00007FCE <preprocessor.include.ab3@306> XINCLUDE "/Shared/preprocessor.include.ab3"
00007FD8 <preprocessor.include.ab3@308> XINCLUDE "/Shared/preprocessor.include.ab3"
00007FE6 <preprocessor.include.ab3@309> XINCLUDE "/Shared/preprocessor.include.ab3"
00008004 <preprocessor.include.ab3@310> XINCLUDE "/Shared/preprocessor.include.ab3"
00008012 <preprocessor.include.ab3@311> XINCLUDE "/Shared/preprocessor.include.ab3"
0000801A <preprocessor.include.ab3@312> XINCLUDE "/Shared/preprocessor.include.ab3"
00008020 <preprocessor.include.ab3@313> XINCLUDE "/Shared/preprocessor.include.ab3"
00008034 <preprocessor.include.ab3@317> XINCLUDE "/Shared/preprocessor.include.ab3"
0000803E <preprocessor.include.ab3@318> XINCLUDE "/Shared/preprocessor.include.ab3"
0000804C <preprocessor.include.ab3@319> XINCLUDE "/Shared/preprocessor.include.ab3"
00008066 <preprocessor.include.ab3@320> XINCLUDE "/Shared/preprocessor.include.ab3"
0000806C <preprocessor.include.ab3@322> XINCLUDE "/Shared/preprocessor.include.ab3"
00008074 <preprocessor.include.ab3@323> XINCLUDE "/Shared/preprocessor.include.ab3"
0000807A <preprocessor.include.ab3@325> XINCLUDE "/Shared/preprocessor.include.ab3"
0000808E <preprocessor.include.ab3@326> XINCLUDE "/Shared/preprocessor.include.ab3"
00008098 <preprocessor.include.ab3@327> XINCLUDE "/Shared/preprocessor.include.ab3"
000080A0 <preprocessor.include.ab3@328> XINCLUDE "/Shared/preprocessor.include.ab3"
000080B4 <preprocessor.include.ab3@329> XINCLUDE "/Shared/preprocessor.include.ab3"
000080C8 <preprocessor.include.ab3@334> XINCLUDE "/Shared/preprocessor.include.ab3"
000080DC <preprocessor.include.ab3@335> XINCLUDE "/Shared/preprocessor.include.ab3"
000080FA <preprocessor.include.ab3@337> XINCLUDE "/Shared/preprocessor.include.ab3"
00008108 <preprocessor.include.ab3@338> XINCLUDE "/Shared/preprocessor.include.ab3"
00008118 <preprocessor.include.ab3@339> XINCLUDE "/Shared/preprocessor.include.ab3"
00008140 <preprocessor.include.ab3@340> XINCLUDE "/Shared/preprocessor.include.ab3"
00008162 <preprocessor.include.ab3@341> XINCLUDE "/Shared/preprocessor.include.ab3"
00008176 <preprocessor.include.ab3@344> XINCLUDE "/Shared/preprocessor.include.ab3"
00008194 <preprocessor.include.ab3@346> XINCLUDE "/Shared/preprocessor.include.ab3"
000081A2 <preprocessor.include.ab3@347> XINCLUDE "/Shared/preprocessor.include.ab3"
000081C8 <preprocessor.include.ab3@348> XINCLUDE "/Shared/preprocessor.include.ab3"
000081F0 <preprocessor.include.ab3@349> XINCLUDE "/Shared/preprocessor.include.ab3"
00008212 <preprocessor.include.ab3@350> XINCLUDE "/Shared/preprocessor.include.ab3"
00008242 <preprocessor.include.ab3@353> XINCLUDE "/Shared/preprocessor.include.ab3"
00008270 <preprocessor.include.ab3@357> XINCLUDE "/Shared/preprocessor.include.ab3"
000082A2 <preprocessor.include.ab3@358> XINCLUDE "/Shared/preprocessor.include.ab3"
000082B0 <preprocessor.include.ab3@360> XINCLUDE "/Shared/preprocessor.include.ab3"
000082B6 <preprocessor.include.ab3@361> XINCLUDE "/Shared/preprocessor.include.ab3"
000082C6 <preprocessor.include.ab3@364> XINCLUDE "/Shared/preprocessor.include.ab3"
000082CC <preprocessor.include.ab3@365> XINCLUDE "/Shared/preprocessor.include.ab3"
000082F2 <preprocessor.include.ab3@369> XINCLUDE "/Shared/preprocessor.include.ab3"
00008314 <preprocessor.include.ab3@370> XINCLUDE "/Shared/preprocessor.include.ab3"
0000833C <preprocessor.include.ab3@371> XINCLUDE "/Shared/preprocessor.include.ab3"
0000835C <preprocessor.include.ab3@372> XINCLUDE "/Shared/preprocessor.include.ab3"
0000837E <preprocessor.include.ab3@373> XINCLUDE "/Shared/preprocessor.include.ab3"
00008384 <preprocessor.include.ab3@374> XINCLUDE "/Shared/preprocessor.include.ab3"
00008392 <preprocessor.include.ab3@375> XINCLUDE "/Shared/preprocessor.include.ab3"
000083A0 <preprocessor.include.ab3@376> XINCLUDE "/Shared/preprocessor.include.ab3"
000083A6 <preprocessor.include.ab3@377> XINCLUDE "/Shared/preprocessor.include.ab3"
000083AE <preprocessor.include.ab3@378> XINCLUDE "/Shared/preprocessor.include.ab3"
000083CC <preprocessor.include.ab3@379> XINCLUDE "/Shared/preprocessor.include.ab3"
000083E0 <preprocessor.include.ab3@380> XINCLUDE "/Shared/preprocessor.include.ab3"
000083F0 <preprocessor.include.ab3@381> XINCLUDE "/Shared/preprocessor.include.ab3"
00008406 <preprocessor.include.ab3@383> XINCLUDE "/Shared/preprocessor.include.ab3"
0000841E <preprocessor.include.ab3@385> XINCLUDE "/Shared/preprocessor.include.ab3"
0000843A <preprocessor.include.ab3@386> XINCLUDE "/Shared/preprocessor.include.ab3"
00008444 <preprocessor.include.ab3@387> XINCLUDE "/Shared/preprocessor.include.ab3"
00008460 <preprocessor.include.ab3@388> XINCLUDE "/Shared/preprocessor.include.ab3"
00008472 <preprocessor.include.ab3@389> XINCLUDE "/Shared/preprocessor.include.ab3"
000084A0 <preprocessor.include.ab3@390> XINCLUDE "/Shared/preprocessor.include.ab3"
000084DC <preprocessor.include.ab3@391> XINCLUDE "/Shared/preprocessor.include.ab3"
000084EC <preprocessor.include.ab3@392> XINCLUDE "/Shared/preprocessor.include.ab3"
000084F2 <preprocessor.include.ab3@393> XINCLUDE "/Shared/preprocessor.include.ab3"
000084F8 <preprocessor.include.ab3@396> XINCLUDE "/Shared/preprocessor.include.ab3"
00008510 <preprocessor.include.ab3@397> XINCLUDE "/Shared/preprocessor.include.ab3"
00008520 <preprocessor.include.ab3@398> XINCLUDE "/Shared/preprocessor.include.ab3"
000085A6 <preprocessor.include.ab3@399> XINCLUDE "/Shared/preprocessor.include.ab3"
000085E0 <preprocessor.include.ab3@400> XINCLUDE "/Shared/preprocessor.include.ab3"
00008616 <preprocessor.include.ab3@401> XINCLUDE "/Shared/preprocessor.include.ab3"
00008626 <preprocessor.include.ab3@402> XINCLUDE "/Shared/preprocessor.include.ab3"
00008634 <preprocessor.include.ab3@404> XINCLUDE "/Shared/preprocessor.include.ab3"
0000863A <preprocessor.include.ab3@405> XINCLUDE "/Shared/preprocessor.include.ab3"
0000864A <preprocessor.include.ab3@406> XINCLUDE "/Shared/preprocessor.include.ab3"
00008674 <preprocessor.include.ab3@407> XINCLUDE "/Shared/preprocessor.include.ab3"
0000867A <preprocessor.include.ab3@408> XINCLUDE "/Shared/preprocessor.include.ab3"
000086A6 <preprocessor.include.ab3@409> XINCLUDE "/Shared/preprocessor.include.ab3"
000086B6 <preprocessor.include.ab3@412> XINCLUDE "/Shared/preprocessor.include.ab3"
000086C6 <preprocessor.include.ab3@414> XINCLUDE "/Shared/preprocessor.include.ab3"
000086E4 <preprocessor.include.ab3@415> XINCLUDE "/Shared/preprocessor.include.ab3"
000086F2 <preprocessor.include.ab3@416> XINCLUDE "/Shared/preprocessor.include.ab3"
00008728 <preprocessor.include.ab3@417> XINCLUDE "/Shared/preprocessor.include.ab3"
0000874C <preprocessor.include.ab3@418> XINCLUDE "/Shared/preprocessor.include.ab3"
00008760 <preprocessor.include.ab3@421> XINCLUDE "/Shared/preprocessor.include.ab3"
00008770 <preprocessor.include.ab3@423> XINCLUDE "/Shared/preprocessor.include.ab3"
0000878E <preprocessor.include.ab3@424> XINCLUDE "/Shared/preprocessor.include.ab3"
0000879C <preprocessor.include.ab3@425> XINCLUDE "/Shared/preprocessor.include.ab3"
000087C0 <preprocessor.include.ab3@426> XINCLUDE "/Shared/preprocessor.include.ab3"
000087E4 <preprocessor.include.ab3@427> XINCLUDE "/Shared/preprocessor.include.ab3"
000087F2 <preprocessor.include.ab3@431> XINCLUDE "/Shared/preprocessor.include.ab3"
00008800 <preprocessor.include.ab3@432> XINCLUDE "/Shared/preprocessor.include.ab3"
00008820 <preprocessor.include.ab3@433> XINCLUDE "/Shared/preprocessor.include.ab3"
0000882E <preprocessor.include.ab3@434> XINCLUDE "/Shared/preprocessor.include.ab3"
00008834 <preprocessor.include.ab3@435> XINCLUDE "/Shared/preprocessor.include.ab3"
0000883A <preprocessor.include.ab3@438> XINCLUDE "/Shared/preprocessor.include.ab3"
00008848 <preprocessor.include.ab3@440> XINCLUDE "/Shared/preprocessor.include.ab3"
00008856 <preprocessor.include.ab3@441> XINCLUDE "/Shared/preprocessor.include.ab3"
00008876 <preprocessor.include.ab3@442> XINCLUDE "/Shared/preprocessor.include.ab3"
00008884 <preprocessor.include.ab3@443> XINCLUDE "/Shared/preprocessor.include.ab3"
0000888A <preprocessor.include.ab3@444> XINCLUDE "/Shared/preprocessor.include.ab3"
000088B4 <preprocessor.include.ab3@447> XINCLUDE "/Shared/preprocessor.include.ab3"
000088C4 <preprocessor.include.ab3@450> XINCLUDE "/Shared/preprocessor.include.ab3"
000088CE <preprocessor.include.ab3@452> XINCLUDE "/Shared/preprocessor.include.ab3"
000088E2 <preprocessor.include.ab3@453> XINCLUDE "/Shared/preprocessor.include.ab3"
00008908 <preprocessor.include.ab3@457> XINCLUDE "/Shared/preprocessor.include.ab3"
0000892A <preprocessor.include.ab3@458> XINCLUDE "/Shared/preprocessor.include.ab3"
00008952 <preprocessor.include.ab3@459> XINCLUDE "/Shared/preprocessor.include.ab3"
00008958 <preprocessor.include.ab3@460> XINCLUDE "/Shared/preprocessor.include.ab3"
00008966 <preprocessor.include.ab3@461> XINCLUDE "/Shared/preprocessor.include.ab3"
0000896C <preprocessor.include.ab3@462> XINCLUDE "/Shared/preprocessor.include.ab3"
00008980 <preprocessor.include.ab3@463> XINCLUDE "/Shared/preprocessor.include.ab3"
00008990 <preprocessor.include.ab3@464> XINCLUDE "/Shared/preprocessor.include.ab3"
000089A6 <preprocessor.include.ab3@466> XINCLUDE "/Shared/preprocessor.include.ab3"
000089BE <preprocessor.include.ab3@468> XINCLUDE "/Shared/preprocessor.include.ab3"
000089DA <preprocessor.include.ab3@469> XINCLUDE "/Shared/preprocessor.include.ab3"
000089E4 <preprocessor.include.ab3@470> XINCLUDE "/Shared/preprocessor.include.ab3"
00008A00 <preprocessor.include.ab3@471> XINCLUDE "/Shared/preprocessor.include.ab3"
00008A2E <preprocessor.include.ab3@472> XINCLUDE "/Shared/preprocessor.include.ab3"
00008A6A <preprocessor.include.ab3@473> XINCLUDE "/Shared/preprocessor.include.ab3"
00008A7A <preprocessor.include.ab3@474> XINCLUDE "/Shared/preprocessor.include.ab3"
00008A88 <preprocessor.include.ab3@476> XINCLUDE "/Shared/preprocessor.include.ab3"
00008A8E <preprocessor.include.ab3@477> XINCLUDE "/Shared/preprocessor.include.ab3"
00008A9E <preprocessor.include.ab3@478> XINCLUDE "/Shared/preprocessor.include.ab3"
00008AC8 <preprocessor.include.ab3@479> XINCLUDE "/Shared/preprocessor.include.ab3"
00008ACE <preprocessor.include.ab3@480> XINCLUDE "/Shared/preprocessor.include.ab3"
00008AFA <preprocessor.include.ab3@481> XINCLUDE "/Shared/preprocessor.include.ab3"
00008B0A <preprocessor.include.ab3@483> XINCLUDE "/Shared/preprocessor.include.ab3"
00008B1A <preprocessor.include.ab3@485> XINCLUDE "/Shared/preprocessor.include.ab3"
00008B38 <preprocessor.include.ab3@486> XINCLUDE "/Shared/preprocessor.include.ab3"
00008B46 <preprocessor.include.ab3@487> XINCLUDE "/Shared/preprocessor.include.ab3"
00008B7C <preprocessor.include.ab3@488> XINCLUDE "/Shared/preprocessor.include.ab3"
00008BA0 <preprocessor.include.ab3@489> XINCLUDE "/Shared/preprocessor.include.ab3"
00008BB4 <preprocessor.include.ab3@492> XINCLUDE "/Shared/preprocessor.include.ab3"
00008BC4 <preprocessor.include.ab3@494> XINCLUDE "/Shared/preprocessor.include.ab3"
00008BE2 <preprocessor.include.ab3@495> XINCLUDE "/Shared/preprocessor.include.ab3"
00008BF0 <preprocessor.include.ab3@496> XINCLUDE "/Shared/preprocessor.include.ab3"
00008C14 <preprocessor.include.ab3@497> XINCLUDE "/Shared/preprocessor.include.ab3"
00008C38 <preprocessor.include.ab3@498> XINCLUDE "/Shared/preprocessor.include.ab3"
00008C3E <preprocessor.include.ab3@502> XINCLUDE "/Shared/preprocessor.include.ab3"
00008C4E <preprocessor.include.ab3@503> XINCLUDE "/Shared/preprocessor.include.ab3"
00008C54 <preprocessor.include.ab3@504> XINCLUDE "/Shared/preprocessor.include.ab3"
00008C76 <preprocessor.include.ab3@508> XINCLUDE "/Shared/preprocessor.include.ab3"
00008C7E <preprocessor.include.ab3@509> XINCLUDE "/Shared/preprocessor.include.ab3"
00008CB4 <preprocessor.include.ab3@510> XINCLUDE "/Shared/preprocessor.include.ab3"
00008CD0 <preprocessor.include.ab3@511> XINCLUDE "/Shared/preprocessor.include.ab3"
00008CD6 <preprocessor.include.ab3@512> XINCLUDE "/Shared/preprocessor.include.ab3"
00008D0C <preprocessor.include.ab3@516> XINCLUDE "/Shared/preprocessor.include.ab3"
00008D28 <preprocessor.include.ab3@517> XINCLUDE "/Shared/preprocessor.include.ab3"
00008D50 <preprocessor.include.ab3@518> XINCLUDE "/Shared/preprocessor.include.ab3"
00008D6E <preprocessor.include.ab3@519> XINCLUDE "/Shared/preprocessor.include.ab3"
00008D8C <preprocessor.include.ab3@520> XINCLUDE "/Shared/preprocessor.include.ab3"
00008DBA <preprocessor.include.ab3@521> XINCLUDE "/Shared/preprocessor.include.ab3"
00008E1C <preprocessor.include.ab3@522> XINCLUDE "/Shared/preprocessor.include.ab3"
00008E36 <preprocessor.include.ab3@523> XINCLUDE "/Shared/preprocessor.include.ab3"
00008E50 <preprocessor.include.ab3@527> XINCLUDE "/Shared/preprocessor.include.ab3"
00008E5A <preprocessor.include.ab3@528> XINCLUDE "/Shared/preprocessor.include.ab3"
00008E98 <preprocessor.include.ab3@529> XINCLUDE "/Shared/preprocessor.include.ab3"
00008E9C <preprocessor.include.ab3@530> XINCLUDE "/Shared/preprocessor.include.ab3"
00008EA6 <preprocessor.include.ab3@532> XINCLUDE "/Shared/preprocessor.include.ab3"
00008ED4 <preprocessor.include.ab3@533> XINCLUDE "/Shared/preprocessor.include.ab3"
00008EF4 <preprocessor.include.ab3@534> XINCLUDE "/Shared/preprocessor.include.ab3"
00008F0C <preprocessor.include.ab3@535> XINCLUDE "/Shared/preprocessor.include.ab3"
00008F6A <preprocessor.include.ab3@536> XINCLUDE "/Shared/preprocessor.include.ab3"
00008F96 <preprocessor.include.ab3@537> XINCLUDE "/Shared/preprocessor.include.ab3"
00008FA8 <preprocessor.include.ab3@538> XINCLUDE "/Shared/preprocessor.include.ab3"
00008FB8 <preprocessor.include.ab3@539> XINCLUDE "/Shared/preprocessor.include.ab3"
00008FD0 <preprocessor.include.ab3@540> XINCLUDE "/Shared/preprocessor.include.ab3"
00008FD6 <preprocessor.include.ab3@542> XINCLUDE "/Shared/preprocessor.include.ab3"
00009010 <preprocessor.include.ab3@543> XINCLUDE "/Shared/preprocessor.include.ab3"
0000901A <preprocessor.include.ab3@545> XINCLUDE "/Shared/preprocessor.include.ab3"
00009020 <preprocessor.include.ab3@546> XINCLUDE "/Shared/preprocessor.include.ab3"
0000902A <preprocessor.include.ab3@547> XINCLUDE "/Shared/preprocessor.include.ab3"
0000903C <preprocessor.include.ab3@548> XINCLUDE "/Shared/preprocessor.include.ab3"
0000903C <AmiBlitz3.ab3@87> XINCLUDE "/Shared/preprocessor.include.ab3"
0000903C <logging.include.ab3@1> XINCLUDE "PE/logging.include.ab3"
0000903C <PE_Tools.include.ab3@1> XINCLUDE "PE/logging.include.ab3"
00009060 <PE_Tools.include.ab3@75> XINCLUDE "PE/logging.include.ab3"
00009068 <PE_Tools.include.ab3@84> XINCLUDE "PE/logging.include.ab3"
00009096 <PE_Tools.include.ab3@85> XINCLUDE "PE/logging.include.ab3"
000090C4 <PE_Tools.include.ab3@86> XINCLUDE "PE/logging.include.ab3"
00009134 <PE_Tools.include.ab3@87> XINCLUDE "PE/logging.include.ab3"
00009142 <PE_Tools.include.ab3@88> XINCLUDE "PE/logging.include.ab3"
00009192 <PE_Tools.include.ab3@89> XINCLUDE "PE/logging.include.ab3"
00009192 <logging.include.ab3@11> XINCLUDE "PE/logging.include.ab3"
00009192 <file.include.ab3@1> XINCLUDE "PE/logging.include.ab3"
00009192 <asl.include.ab3@1> XINCLUDE "PE/logging.include.ab3"
000091B6 <asl.include.ab3@94> XINCLUDE "PE/logging.include.ab3"
000091DE <asl.include.ab3@95> XINCLUDE "PE/logging.include.ab3"
00009202 <asl.include.ab3@96> XINCLUDE "PE/logging.include.ab3"
00009230 <asl.include.ab3@295> XINCLUDE "PE/logging.include.ab3"
0000944E <asl.include.ab3@297> XINCLUDE "PE/logging.include.ab3"
0000947C <asl.include.ab3@299> XINCLUDE "PE/logging.include.ab3"
000094A8 <asl.include.ab3@301> XINCLUDE "PE/logging.include.ab3"
000094E4 <asl.include.ab3@302> XINCLUDE "PE/logging.include.ab3"
00009510 <asl.include.ab3@303> XINCLUDE "PE/logging.include.ab3"
0000953C <asl.include.ab3@304> XINCLUDE "PE/logging.include.ab3"
00009568 <asl.include.ab3@305> XINCLUDE "PE/logging.include.ab3"
00009594 <asl.include.ab3@306> XINCLUDE "PE/logging.include.ab3"
000095C0 <asl.include.ab3@307> XINCLUDE "PE/logging.include.ab3"
000095EC <asl.include.ab3@308> XINCLUDE "PE/logging.include.ab3"
00009618 <asl.include.ab3@309> XINCLUDE "PE/logging.include.ab3"
00009644 <asl.include.ab3@310> XINCLUDE "PE/logging.include.ab3"
000096CE <asl.include.ab3@312> XINCLUDE "PE/logging.include.ab3"
00009758 <asl.include.ab3@313> XINCLUDE "PE/logging.include.ab3"
000097F6 <asl.include.ab3@314> XINCLUDE "PE/logging.include.ab3"
00009840 <asl.include.ab3@315> XINCLUDE "PE/logging.include.ab3"
00009880 <asl.include.ab3@316> XINCLUDE "PE/logging.include.ab3"
00009886 <asl.include.ab3@317> XINCLUDE "PE/logging.include.ab3"
000098D0 <asl.include.ab3@320> XINCLUDE "PE/logging.include.ab3"
00009910 <asl.include.ab3@321> XINCLUDE "PE/logging.include.ab3"
0000993A <asl.include.ab3@322> XINCLUDE "PE/logging.include.ab3"
00009940 <asl.include.ab3@323> XINCLUDE "PE/logging.include.ab3"
0000996A <asl.include.ab3@324> XINCLUDE "PE/logging.include.ab3"
00009994 <asl.include.ab3@326> XINCLUDE "PE/logging.include.ab3"
000099BE <asl.include.ab3@328> XINCLUDE "PE/logging.include.ab3"
000099C8 <asl.include.ab3@329> XINCLUDE "PE/logging.include.ab3"
000099E6 <asl.include.ab3@330> XINCLUDE "PE/logging.include.ab3"
00009A08 <asl.include.ab3@331> XINCLUDE "PE/logging.include.ab3"
00009A36 <asl.include.ab3@332> XINCLUDE "PE/logging.include.ab3"
00009A64 <asl.include.ab3@333> XINCLUDE "PE/logging.include.ab3"
00009A92 <asl.include.ab3@334> XINCLUDE "PE/logging.include.ab3"
00009AD8 <asl.include.ab3@337> XINCLUDE "PE/logging.include.ab3"
00009B1E <asl.include.ab3@338> XINCLUDE "PE/logging.include.ab3"
00009B64 <asl.include.ab3@339> XINCLUDE "PE/logging.include.ab3"
00009B9C <asl.include.ab3@341> XINCLUDE "PE/logging.include.ab3"
00009C9A <asl.include.ab3@342> XINCLUDE "PE/logging.include.ab3"
00009CB8 <asl.include.ab3@344> XINCLUDE "PE/logging.include.ab3"
00009CC2 <asl.include.ab3@346> XINCLUDE "PE/logging.include.ab3"
00009CE8 <asl.include.ab3@347> XINCLUDE "PE/logging.include.ab3"
00009CFA <asl.include.ab3@349> XINCLUDE "PE/logging.include.ab3"
00009D28 <asl.include.ab3@350> XINCLUDE "PE/logging.include.ab3"
00009D50 <asl.include.ab3@351> XINCLUDE "PE/logging.include.ab3"
00009D62 <asl.include.ab3@352> XINCLUDE "PE/logging.include.ab3"
00009DB8 <asl.include.ab3@353> XINCLUDE "PE/logging.include.ab3"
00009DEE <asl.include.ab3@354> XINCLUDE "PE/logging.include.ab3"
00009DFE <asl.include.ab3@356> XINCLUDE "PE/logging.include.ab3"
00009E04 <asl.include.ab3@357> XINCLUDE "PE/logging.include.ab3"
00009E16 <asl.include.ab3@358> XINCLUDE "PE/logging.include.ab3"
00009E20 <asl.include.ab3@359> XINCLUDE "PE/logging.include.ab3"
00009E5A <asl.include.ab3@360> XINCLUDE "PE/logging.include.ab3"
00009E60 <asl.include.ab3@361> XINCLUDE "PE/logging.include.ab3"
00009EB8 <asl.include.ab3@362> XINCLUDE "PE/logging.include.ab3"
00009ED6 <asl.include.ab3@364> XINCLUDE "PE/logging.include.ab3"
00009EDC <asl.include.ab3@367> XINCLUDE "PE/logging.include.ab3"
00009EEC <asl.include.ab3@370> XINCLUDE "PE/logging.include.ab3"
00009EFC <asl.include.ab3@371> XINCLUDE "PE/logging.include.ab3"
00009F0C <asl.include.ab3@372> XINCLUDE "PE/logging.include.ab3"
00009F1C <asl.include.ab3@373> XINCLUDE "PE/logging.include.ab3"
00009F2C <asl.include.ab3@375> XINCLUDE "PE/logging.include.ab3"
00009F36 <asl.include.ab3@377> XINCLUDE "PE/logging.include.ab3"
00009F4A <asl.include.ab3@378> XINCLUDE "PE/logging.include.ab3"
00009F60 <asl.include.ab3@394> XINCLUDE "PE/logging.include.ab3"
00009F88 <asl.include.ab3@396> XINCLUDE "PE/logging.include.ab3"
00009F92 <asl.include.ab3@397> XINCLUDE "PE/logging.include.ab3"
00009FA4 <asl.include.ab3@398> XINCLUDE "PE/logging.include.ab3"
00009FDE <asl.include.ab3@399> XINCLUDE "PE/logging.include.ab3"
00009FE8 <asl.include.ab3@400> XINCLUDE "PE/logging.include.ab3"
0000A012 <asl.include.ab3@402> XINCLUDE "PE/logging.include.ab3"
0000A02A <asl.include.ab3@403> XINCLUDE "PE/logging.include.ab3"
0000A07C <asl.include.ab3@439> XINCLUDE "PE/logging.include.ab3"
0000A0AA <asl.include.ab3@441> XINCLUDE "PE/logging.include.ab3"
0000A13C <asl.include.ab3@442> XINCLUDE "PE/logging.include.ab3"
0000A182 <asl.include.ab3@443> XINCLUDE "PE/logging.include.ab3"
0000A214 <asl.include.ab3@444> XINCLUDE "PE/logging.include.ab3"
0000A22E <asl.include.ab3@445> XINCLUDE "PE/logging.include.ab3"
0000A22E <file.include.ab3@57> XINCLUDE "PE/logging.include.ab3"
0000A244 <file.include.ab3@66> XINCLUDE "PE/logging.include.ab3"
0000A25A <file.include.ab3@67> XINCLUDE "PE/logging.include.ab3"
0000A270 <file.include.ab3@68> XINCLUDE "PE/logging.include.ab3"
0000A286 <file.include.ab3@70> XINCLUDE "PE/logging.include.ab3"
0000A292 <file.include.ab3@72> XINCLUDE "PE/logging.include.ab3"
0000A29E <file.include.ab3@73> XINCLUDE "PE/logging.include.ab3"
0000A2AA <file.include.ab3@74> XINCLUDE "PE/logging.include.ab3"
0000A2B6 <file.include.ab3@75> XINCLUDE "PE/logging.include.ab3"
0000A2DE <file.include.ab3@77> XINCLUDE "PE/logging.include.ab3"
0000A306 <file.include.ab3@78> XINCLUDE "PE/logging.include.ab3"
0000A32E <file.include.ab3@79> XINCLUDE "PE/logging.include.ab3"
0000A352 <file.include.ab3@109> XINCLUDE "PE/logging.include.ab3"
0000A376 <file.include.ab3@110> XINCLUDE "PE/logging.include.ab3"
0000A390 <file.include.ab3@156> XINCLUDE "PE/logging.include.ab3"
0000A3A0 <file.include.ab3@157> XINCLUDE "PE/logging.include.ab3"
0000A3A2 <file.include.ab3@158> XINCLUDE "PE/logging.include.ab3"
0000A3A4 <file.include.ab3@159> XINCLUDE "PE/logging.include.ab3"
0000A3A6 <file.include.ab3@160> XINCLUDE "PE/logging.include.ab3"
0000A3A8 <file.include.ab3@161> XINCLUDE "PE/logging.include.ab3"
0000A3AA <file.include.ab3@162> XINCLUDE "PE/logging.include.ab3"
0000A3AE <file.include.ab3@163> XINCLUDE "PE/logging.include.ab3"
0000A3B2 <file.include.ab3@164> XINCLUDE "PE/logging.include.ab3"
0000A3B6 <file.include.ab3@165> XINCLUDE "PE/logging.include.ab3"
0000A3B8 <file.include.ab3@166> XINCLUDE "PE/logging.include.ab3"
0000A3BA <file.include.ab3@167> XINCLUDE "PE/logging.include.ab3"
0000A3BC <file.include.ab3@168> XINCLUDE "PE/logging.include.ab3"
0000A3BE <file.include.ab3@169> XINCLUDE "PE/logging.include.ab3"
0000A3C0 <file.include.ab3@170> XINCLUDE "PE/logging.include.ab3"
0000A3C2 <file.include.ab3@171> XINCLUDE "PE/logging.include.ab3"
0000A3C4 <file.include.ab3@172> XINCLUDE "PE/logging.include.ab3"
0000A3CE <file.include.ab3@173> XINCLUDE "PE/logging.include.ab3"
0000A3D4 <file.include.ab3@174> XINCLUDE "PE/logging.include.ab3"
0000A3EE <file.include.ab3@215> XINCLUDE "PE/logging.include.ab3"
0000A40C <file.include.ab3@217> XINCLUDE "PE/logging.include.ab3"
0000A412 <file.include.ab3@218> XINCLUDE "PE/logging.include.ab3"
0000A42C <file.include.ab3@237> XINCLUDE "PE/logging.include.ab3"
0000A448 <file.include.ab3@239> XINCLUDE "PE/logging.include.ab3"
0000A46E <file.include.ab3@240> XINCLUDE "PE/logging.include.ab3"
0000A48E <file.include.ab3@241> XINCLUDE "PE/logging.include.ab3"
0000A498 <file.include.ab3@242> XINCLUDE "PE/logging.include.ab3"
0000A4C4 <file.include.ab3@243> XINCLUDE "PE/logging.include.ab3"
0000A4E6 <file.include.ab3@244> XINCLUDE "PE/logging.include.ab3"
0000A500 <file.include.ab3@245> XINCLUDE "PE/logging.include.ab3"
0000A506 <file.include.ab3@248> XINCLUDE "PE/logging.include.ab3"
0000A540 <file.include.ab3@249> XINCLUDE "PE/logging.include.ab3"
0000A55E <file.include.ab3@251> XINCLUDE "PE/logging.include.ab3"
0000A564 <file.include.ab3@252> XINCLUDE "PE/logging.include.ab3"
0000A582 <file.include.ab3@271> XINCLUDE "PE/logging.include.ab3"
0000A588 <file.include.ab3@273> XINCLUDE "PE/logging.include.ab3"
0000A5AA <file.include.ab3@274> XINCLUDE "PE/logging.include.ab3"
0000A5CA <file.include.ab3@275> XINCLUDE "PE/logging.include.ab3"
0000A602 <file.include.ab3@276> XINCLUDE "PE/logging.include.ab3"
0000A61E <file.include.ab3@277> XINCLUDE "PE/logging.include.ab3"
0000A624 <file.include.ab3@278> XINCLUDE "PE/logging.include.ab3"
0000A62A <file.include.ab3@279> XINCLUDE "PE/logging.include.ab3"
0000A630 <file.include.ab3@281> XINCLUDE "PE/logging.include.ab3"
0000A636 <file.include.ab3@282> XINCLUDE "PE/logging.include.ab3"
0000A652 <file.include.ab3@283> XINCLUDE "PE/logging.include.ab3"
0000A69E <file.include.ab3@285> XINCLUDE "PE/logging.include.ab3"
0000A6A4 <file.include.ab3@286> XINCLUDE "PE/logging.include.ab3"
0000A6DE <file.include.ab3@287> XINCLUDE "PE/logging.include.ab3"
0000A6EA <file.include.ab3@288> XINCLUDE "PE/logging.include.ab3"
0000A706 <file.include.ab3@289> XINCLUDE "PE/logging.include.ab3"
0000A70C <file.include.ab3@291> XINCLUDE "PE/logging.include.ab3"
0000A746 <file.include.ab3@292> XINCLUDE "PE/logging.include.ab3"
0000A750 <file.include.ab3@296> XINCLUDE "PE/logging.include.ab3"
0000A756 <file.include.ab3@297> XINCLUDE "PE/logging.include.ab3"
0000A774 <file.include.ab3@316> XINCLUDE "PE/logging.include.ab3"
0000A7A2 <file.include.ab3@318> XINCLUDE "PE/logging.include.ab3"
0000A7A8 <file.include.ab3@319> XINCLUDE "PE/logging.include.ab3"
0000A7BE <file.include.ab3@335> XINCLUDE "PE/logging.include.ab3"
0000A7C6 <file.include.ab3@337> XINCLUDE "PE/logging.include.ab3"
0000A822 <file.include.ab3@338> XINCLUDE "PE/logging.include.ab3"
0000A830 <file.include.ab3@339> XINCLUDE "PE/logging.include.ab3"
0000A836 <file.include.ab3@340> XINCLUDE "PE/logging.include.ab3"
0000A868 <file.include.ab3@341> XINCLUDE "PE/logging.include.ab3"
0000A872 <file.include.ab3@342> XINCLUDE "PE/logging.include.ab3"
0000A878 <file.include.ab3@343> XINCLUDE "PE/logging.include.ab3"
0000A892 <file.include.ab3@397> XINCLUDE "PE/logging.include.ab3"
0000A8A4 <file.include.ab3@399> XINCLUDE "PE/logging.include.ab3"
0000A902 <file.include.ab3@400> XINCLUDE "PE/logging.include.ab3"
0000A93C <file.include.ab3@401> XINCLUDE "PE/logging.include.ab3"
0000A976 <file.include.ab3@402> XINCLUDE "PE/logging.include.ab3"
0000A994 <file.include.ab3@403> XINCLUDE "PE/logging.include.ab3"
0000A9B2 <file.include.ab3@404> XINCLUDE "PE/logging.include.ab3"
0000A9C8 <file.include.ab3@405> XINCLUDE "PE/logging.include.ab3"
0000A9E4 <file.include.ab3@406> XINCLUDE "PE/logging.include.ab3"
0000A9FE <file.include.ab3@407> XINCLUDE "PE/logging.include.ab3"
0000AA7C <file.include.ab3@408> XINCLUDE "PE/logging.include.ab3"
0000AA8E <file.include.ab3@410> XINCLUDE "PE/logging.include.ab3"
0000AAA4 <file.include.ab3@422> XINCLUDE "PE/logging.include.ab3"
0000AACE <file.include.ab3@424> XINCLUDE "PE/logging.include.ab3"
0000AAD8 <file.include.ab3@425> XINCLUDE "PE/logging.include.ab3"
0000AAE8 <file.include.ab3@426> XINCLUDE "PE/logging.include.ab3"
0000AAEC <file.include.ab3@427> XINCLUDE "PE/logging.include.ab3"
0000AB1A <file.include.ab3@428> XINCLUDE "PE/logging.include.ab3"
0000AB34 <file.include.ab3@447> XINCLUDE "PE/logging.include.ab3"
0000AB46 <file.include.ab3@449> XINCLUDE "PE/logging.include.ab3"
0000AB66 <file.include.ab3@450> XINCLUDE "PE/logging.include.ab3"
0000AB7C <file.include.ab3@451> XINCLUDE "PE/logging.include.ab3"
0000ABB4 <file.include.ab3@452> XINCLUDE "PE/logging.include.ab3"
0000ABDE <file.include.ab3@453> XINCLUDE "PE/logging.include.ab3"
0000AC08 <file.include.ab3@456> XINCLUDE "PE/logging.include.ab3"
0000AC20 <file.include.ab3@457> XINCLUDE "PE/logging.include.ab3"
0000AC36 <file.include.ab3@525> XINCLUDE "PE/logging.include.ab3"
0000AC7E <file.include.ab3@527> XINCLUDE "PE/logging.include.ab3"
0000AC9E <file.include.ab3@528> XINCLUDE "PE/logging.include.ab3"
0000ACA6 <file.include.ab3@529> XINCLUDE "PE/logging.include.ab3"
0000ACE4 <file.include.ab3@568> XINCLUDE "PE/logging.include.ab3"
0000ACF0 <file.include.ab3@570> XINCLUDE "PE/logging.include.ab3"
0000ACFA <file.include.ab3@571> XINCLUDE "PE/logging.include.ab3"
0000AD0C <file.include.ab3@572> XINCLUDE "PE/logging.include.ab3"
0000AD12 <file.include.ab3@573> XINCLUDE "PE/logging.include.ab3"
0000AD20 <file.include.ab3@574> XINCLUDE "PE/logging.include.ab3"
0000AD48 <file.include.ab3@575> XINCLUDE "PE/logging.include.ab3"
0000AD5C <file.include.ab3@576> XINCLUDE "PE/logging.include.ab3"
0000AD84 <file.include.ab3@577> XINCLUDE "PE/logging.include.ab3"
0000AD98 <file.include.ab3@578> XINCLUDE "PE/logging.include.ab3"
0000ADC0 <file.include.ab3@579> XINCLUDE "PE/logging.include.ab3"
0000ADD4 <file.include.ab3@580> XINCLUDE "PE/logging.include.ab3"
0000ADFC <file.include.ab3@581> XINCLUDE "PE/logging.include.ab3"
0000ADFE <file.include.ab3@582> XINCLUDE "PE/logging.include.ab3"
0000AE22 <file.include.ab3@584> XINCLUDE "PE/logging.include.ab3"
0000AE5A <file.include.ab3@586> XINCLUDE "PE/logging.include.ab3"
0000AEE4 <file.include.ab3@587> XINCLUDE "PE/logging.include.ab3"
0000AF0C <file.include.ab3@588> XINCLUDE "PE/logging.include.ab3"
0000AF3C <file.include.ab3@589> XINCLUDE "PE/logging.include.ab3"
0000AF74 <file.include.ab3@593> XINCLUDE "PE/logging.include.ab3"
0000AFCC <file.include.ab3@594> XINCLUDE "PE/logging.include.ab3"
0000B024 <file.include.ab3@595> XINCLUDE "PE/logging.include.ab3"
0000B0A4 <file.include.ab3@597> XINCLUDE "PE/logging.include.ab3"
0000B0D8 <file.include.ab3@598> XINCLUDE "PE/logging.include.ab3"
0000B10C <file.include.ab3@599> XINCLUDE "PE/logging.include.ab3"
0000B112 <file.include.ab3@600> XINCLUDE "PE/logging.include.ab3"
0000B120 <file.include.ab3@601> XINCLUDE "PE/logging.include.ab3"
0000B154 <file.include.ab3@602> XINCLUDE "PE/logging.include.ab3"
0000B17C <file.include.ab3@603> XINCLUDE "PE/logging.include.ab3"
0000B234 <file.include.ab3@604> XINCLUDE "PE/logging.include.ab3"
0000B2B4 <file.include.ab3@605> XINCLUDE "PE/logging.include.ab3"
0000B2E8 <file.include.ab3@606> XINCLUDE "PE/logging.include.ab3"
0000B308 <file.include.ab3@608> XINCLUDE "PE/logging.include.ab3"
0000B30E <file.include.ab3@609> XINCLUDE "PE/logging.include.ab3"
0000B314 <file.include.ab3@610> XINCLUDE "PE/logging.include.ab3"
0000B3E4 <file.include.ab3@611> XINCLUDE "PE/logging.include.ab3"
0000B3F8 <file.include.ab3@614> XINCLUDE "PE/logging.include.ab3"
0000B4B0 <file.include.ab3@615> XINCLUDE "PE/logging.include.ab3"
0000B530 <file.include.ab3@616> XINCLUDE "PE/logging.include.ab3"
0000B620 <file.include.ab3@617> XINCLUDE "PE/logging.include.ab3"
0000B62A <file.include.ab3@618> XINCLUDE "PE/logging.include.ab3"
0000B65E <file.include.ab3@619> XINCLUDE "PE/logging.include.ab3"
0000B67E <file.include.ab3@620> XINCLUDE "PE/logging.include.ab3"
0000B684 <file.include.ab3@621> XINCLUDE "PE/logging.include.ab3"
0000B68A <file.include.ab3@622> XINCLUDE "PE/logging.include.ab3"
0000B75A <file.include.ab3@623> XINCLUDE "PE/logging.include.ab3"
0000B76E <file.include.ab3@627> XINCLUDE "PE/logging.include.ab3"
0000B7A2 <file.include.ab3@628> XINCLUDE "PE/logging.include.ab3"
0000B7CA <file.include.ab3@629> XINCLUDE "PE/logging.include.ab3"
0000B882 <file.include.ab3@630> XINCLUDE "PE/logging.include.ab3"
0000B902 <file.include.ab3@631> XINCLUDE "PE/logging.include.ab3"
0000B936 <file.include.ab3@632> XINCLUDE "PE/logging.include.ab3"
0000B956 <file.include.ab3@635> XINCLUDE "PE/logging.include.ab3"
0000B95C <file.include.ab3@636> XINCLUDE "PE/logging.include.ab3"
0000B962 <file.include.ab3@637> XINCLUDE "PE/logging.include.ab3"
0000BA32 <file.include.ab3@638> XINCLUDE "PE/logging.include.ab3"
0000BA46 <file.include.ab3@641> XINCLUDE "PE/logging.include.ab3"
0000BAFE <file.include.ab3@642> XINCLUDE "PE/logging.include.ab3"
0000BB7E <file.include.ab3@643> XINCLUDE "PE/logging.include.ab3"
0000BBB2 <file.include.ab3@644> XINCLUDE "PE/logging.include.ab3"
0000BBD2 <file.include.ab3@645> XINCLUDE "PE/logging.include.ab3"
0000BBD8 <file.include.ab3@646> XINCLUDE "PE/logging.include.ab3"
0000BBDE <file.include.ab3@647> XINCLUDE "PE/logging.include.ab3"
0000BCAE <file.include.ab3@648> XINCLUDE "PE/logging.include.ab3"
0000BCB4 <file.include.ab3@651> XINCLUDE "PE/logging.include.ab3"
0000BCEE <file.include.ab3@652> XINCLUDE "PE/logging.include.ab3"
0000BCF0 <file.include.ab3@653> XINCLUDE "PE/logging.include.ab3"
0000BCF6 <file.include.ab3@655> XINCLUDE "PE/logging.include.ab3"
0000BD8E <file.include.ab3@656> XINCLUDE "PE/logging.include.ab3"
0000BDA0 <file.include.ab3@659> XINCLUDE "PE/logging.include.ab3"
0000BDB6 <file.include.ab3@660> XINCLUDE "PE/logging.include.ab3"
0000BE20 <file.include.ab3@661> XINCLUDE "PE/logging.include.ab3"
0000BE8A <file.include.ab3@662> XINCLUDE "PE/logging.include.ab3"
0000BEA4 <file.include.ab3@663> XINCLUDE "PE/logging.include.ab3"
0000BEC0 <file.include.ab3@664> XINCLUDE "PE/logging.include.ab3"
0000BEDE <file.include.ab3@665> XINCLUDE "PE/logging.include.ab3"
0000BEF8 <file.include.ab3@666> XINCLUDE "PE/logging.include.ab3"
0000BF02 <file.include.ab3@668> XINCLUDE "PE/logging.include.ab3"
0000BF1E <file.include.ab3@669> XINCLUDE "PE/logging.include.ab3"
0000BF40 <file.include.ab3@805> XINCLUDE "PE/logging.include.ab3"
0000BF46 <file.include.ab3@807> XINCLUDE "PE/logging.include.ab3"
0000BF6C <file.include.ab3@808> XINCLUDE "PE/logging.include.ab3"
0000BF88 <file.include.ab3@809> XINCLUDE "PE/logging.include.ab3"
0000BF9A <file.include.ab3@810> XINCLUDE "PE/logging.include.ab3"
0000BFF8 <file.include.ab3@811> XINCLUDE "PE/logging.include.ab3"
0000C030 <file.include.ab3@812> XINCLUDE "PE/logging.include.ab3"
0000C036 <file.include.ab3@813> XINCLUDE "PE/logging.include.ab3"
0000C07E <file.include.ab3@814> XINCLUDE "PE/logging.include.ab3"
0000C098 <file.include.ab3@815> XINCLUDE "PE/logging.include.ab3"
0000C0A6 <file.include.ab3@818> XINCLUDE "PE/logging.include.ab3"
0000C0AC <file.include.ab3@819> XINCLUDE "PE/logging.include.ab3"
0000C0B2 <file.include.ab3@820> XINCLUDE "PE/logging.include.ab3"
0000C0C4 <file.include.ab3@821> XINCLUDE "PE/logging.include.ab3"
0000C1B0 <file.include.ab3@822> XINCLUDE "PE/logging.include.ab3"
0000C1B6 <file.include.ab3@823> XINCLUDE "PE/logging.include.ab3"
0000C1FC <file.include.ab3@824> XINCLUDE "PE/logging.include.ab3"
0000C208 <file.include.ab3@825> XINCLUDE "PE/logging.include.ab3"
0000C26E <file.include.ab3@826> XINCLUDE "PE/logging.include.ab3"
0000C2B4 <file.include.ab3@827> XINCLUDE "PE/logging.include.ab3"
0000C2FC <file.include.ab3@830> XINCLUDE "PE/logging.include.ab3"
0000C364 <file.include.ab3@831> XINCLUDE "PE/logging.include.ab3"
0000C36A <file.include.ab3@832> XINCLUDE "PE/logging.include.ab3"
0000C3A4 <file.include.ab3@833> XINCLUDE "PE/logging.include.ab3"
0000C3AA <file.include.ab3@835> XINCLUDE "PE/logging.include.ab3"
0000C40C <file.include.ab3@836> XINCLUDE "PE/logging.include.ab3"
0000C416 <file.include.ab3@838> XINCLUDE "PE/logging.include.ab3"
0000C42A <file.include.ab3@839> XINCLUDE "PE/logging.include.ab3"
0000C444 <file.include.ab3@841> XINCLUDE "PE/logging.include.ab3"
0000C44A <file.include.ab3@843> XINCLUDE "PE/logging.include.ab3"
0000C470 <file.include.ab3@844> XINCLUDE "PE/logging.include.ab3"
0000C48C <file.include.ab3@845> XINCLUDE "PE/logging.include.ab3"
0000C4EA <file.include.ab3@846> XINCLUDE "PE/logging.include.ab3"
0000C4EE <file.include.ab3@849> XINCLUDE "PE/logging.include.ab3"
0000C510 <file.include.ab3@867> XINCLUDE "PE/logging.include.ab3"
0000C516 <file.include.ab3@869> XINCLUDE "PE/logging.include.ab3"
0000C532 <file.include.ab3@870> XINCLUDE "PE/logging.include.ab3"
0000C552 <file.include.ab3@871> XINCLUDE "PE/logging.include.ab3"
0000C590 <file.include.ab3@872> XINCLUDE "PE/logging.include.ab3"
0000C5DE <file.include.ab3@873> XINCLUDE "PE/logging.include.ab3"
0000C614 <file.include.ab3@874> XINCLUDE "PE/logging.include.ab3"
0000C61A <file.include.ab3@875> XINCLUDE "PE/logging.include.ab3"
0000C620 <file.include.ab3@876> XINCLUDE "PE/logging.include.ab3"
0000C650 <file.include.ab3@877> XINCLUDE "PE/logging.include.ab3"
0000C656 <file.include.ab3@878> XINCLUDE "PE/logging.include.ab3"
0000C65C <file.include.ab3@880> XINCLUDE "PE/logging.include.ab3"
0000C66E <file.include.ab3@881> XINCLUDE "PE/logging.include.ab3"
0000C6CC <file.include.ab3@882> XINCLUDE "PE/logging.include.ab3"
0000C704 <file.include.ab3@883> XINCLUDE "PE/logging.include.ab3"
0000C70A <file.include.ab3@884> XINCLUDE "PE/logging.include.ab3"
0000C752 <file.include.ab3@885> XINCLUDE "PE/logging.include.ab3"
0000C76C <file.include.ab3@886> XINCLUDE "PE/logging.include.ab3"
0000C77A <file.include.ab3@888> XINCLUDE "PE/logging.include.ab3"
0000C780 <file.include.ab3@889> XINCLUDE "PE/logging.include.ab3"
0000C786 <file.include.ab3@890> XINCLUDE "PE/logging.include.ab3"
0000C798 <file.include.ab3@891> XINCLUDE "PE/logging.include.ab3"
0000C79E <file.include.ab3@892> XINCLUDE "PE/logging.include.ab3"
0000C7A4 <file.include.ab3@893> XINCLUDE "PE/logging.include.ab3"
0000C802 <file.include.ab3@894> XINCLUDE "PE/logging.include.ab3"
0000C84A <file.include.ab3@897> XINCLUDE "PE/logging.include.ab3"
0000C854 <file.include.ab3@900> XINCLUDE "PE/logging.include.ab3"
0000C85A <file.include.ab3@901> XINCLUDE "PE/logging.include.ab3"
0000C874 <file.include.ab3@955> XINCLUDE "PE/logging.include.ab3"
0000C87A <file.include.ab3@957> XINCLUDE "PE/logging.include.ab3"
0000C8C2 <file.include.ab3@958> XINCLUDE "PE/logging.include.ab3"
0000C900 <file.include.ab3@959> XINCLUDE "PE/logging.include.ab3"
0000C90A <file.include.ab3@960> XINCLUDE "PE/logging.include.ab3"
0000C910 <file.include.ab3@961> XINCLUDE "PE/logging.include.ab3"
0000C936 <file.include.ab3@1108> XINCLUDE "PE/logging.include.ab3"
0000C93C <file.include.ab3@1110> XINCLUDE "PE/logging.include.ab3"
0000C962 <file.include.ab3@1111> XINCLUDE "PE/logging.include.ab3"
0000C9C2 <file.include.ab3@1112> XINCLUDE "PE/logging.include.ab3"
0000C9DC <file.include.ab3@1113> XINCLUDE "PE/logging.include.ab3"
0000C9E6 <file.include.ab3@1114> XINCLUDE "PE/logging.include.ab3"
0000CA00 <file.include.ab3@1115> XINCLUDE "PE/logging.include.ab3"
0000CA0A <file.include.ab3@1116> XINCLUDE "PE/logging.include.ab3"
0000CA22 <file.include.ab3@1117> XINCLUDE "PE/logging.include.ab3"
0000CA52 <file.include.ab3@1118> XINCLUDE "PE/logging.include.ab3"
0000CA6E <file.include.ab3@1119> XINCLUDE "PE/logging.include.ab3"
0000CA7C <file.include.ab3@1120> XINCLUDE "PE/logging.include.ab3"
0000CA82 <file.include.ab3@1123> XINCLUDE "PE/logging.include.ab3"
0000CABC <file.include.ab3@1124> XINCLUDE "PE/logging.include.ab3"
0000CAC6 <file.include.ab3@1126> XINCLUDE "PE/logging.include.ab3"
0000CACC <file.include.ab3@1127> XINCLUDE "PE/logging.include.ab3"
0000CAEA <file.include.ab3@1148> XINCLUDE "PE/logging.include.ab3"
0000CAF0 <file.include.ab3@1150> XINCLUDE "PE/logging.include.ab3"
0000CB02 <file.include.ab3@1151> XINCLUDE "PE/logging.include.ab3"
0000CB10 <file.include.ab3@1152> XINCLUDE "PE/logging.include.ab3"
0000CB2E <file.include.ab3@1153> XINCLUDE "PE/logging.include.ab3"
0000CB64 <file.include.ab3@1154> XINCLUDE "PE/logging.include.ab3"
0000CB76 <file.include.ab3@1155> XINCLUDE "PE/logging.include.ab3"
0000CBC0 <file.include.ab3@1156> XINCLUDE "PE/logging.include.ab3"
0000CCAA <file.include.ab3@1157> XINCLUDE "PE/logging.include.ab3"
0000CCC8 <file.include.ab3@1158> XINCLUDE "PE/logging.include.ab3"
0000CCEE <file.include.ab3@1160> XINCLUDE "PE/logging.include.ab3"
0000CD0A <file.include.ab3@1161> XINCLUDE "PE/logging.include.ab3"
0000CD36 <file.include.ab3@1162> XINCLUDE "PE/logging.include.ab3"
0000CD40 <file.include.ab3@1163> XINCLUDE "PE/logging.include.ab3"
0000CD6E <file.include.ab3@1164> XINCLUDE "PE/logging.include.ab3"
0000CD88 <file.include.ab3@1165> XINCLUDE "PE/logging.include.ab3"
0000CDA4 <file.include.ab3@1166> XINCLUDE "PE/logging.include.ab3"
0000CDAA <file.include.ab3@1167> XINCLUDE "PE/logging.include.ab3"
0000CDE4 <file.include.ab3@1168> XINCLUDE "PE/logging.include.ab3"
0000CDEA <file.include.ab3@1170> XINCLUDE "PE/logging.include.ab3"
0000CDF0 <file.include.ab3@1171> XINCLUDE "PE/logging.include.ab3"
0000CDF6 <file.include.ab3@1173> XINCLUDE "PE/logging.include.ab3"
0000CE96 <file.include.ab3@1174> XINCLUDE "PE/logging.include.ab3"
0000CE9C <file.include.ab3@1176> XINCLUDE "PE/logging.include.ab3"
0000CF3E <file.include.ab3@1177> XINCLUDE "PE/logging.include.ab3"
0000CF44 <file.include.ab3@1179> XINCLUDE "PE/logging.include.ab3"
0000CF7E <file.include.ab3@1180> XINCLUDE "PE/logging.include.ab3"
0000CF88 <file.include.ab3@1182> XINCLUDE "PE/logging.include.ab3"
0000CF8E <file.include.ab3@1183> XINCLUDE "PE/logging.include.ab3"
0000CFA8 <file.include.ab3@1245> XINCLUDE "PE/logging.include.ab3"
0000CFC6 <file.include.ab3@1247> XINCLUDE "PE/logging.include.ab3"
0000CFCC <file.include.ab3@1248> XINCLUDE "PE/logging.include.ab3"
0000CFE6 <file.include.ab3@1398> XINCLUDE "PE/logging.include.ab3"
0000D006 <file.include.ab3@1400> XINCLUDE "PE/logging.include.ab3"
0000D0BA <file.include.ab3@1401> XINCLUDE "PE/logging.include.ab3"
0000D0C0 <file.include.ab3@1402> XINCLUDE "PE/logging.include.ab3"
0000D0C6 <file.include.ab3@1403> XINCLUDE "PE/logging.include.ab3"
0000D0F0 <file.include.ab3@1404> XINCLUDE "PE/logging.include.ab3"
0000D0FC <file.include.ab3@1406> XINCLUDE "PE/logging.include.ab3"
0000D102 <file.include.ab3@1407> XINCLUDE "PE/logging.include.ab3"
0000D11C <file.include.ab3@1593> XINCLUDE "PE/logging.include.ab3"
0000D124 <file.include.ab3@1594> XINCLUDE "PE/logging.include.ab3"
0000D12C <file.include.ab3@1595> XINCLUDE "PE/logging.include.ab3"
0000D142 <file.include.ab3@1596> XINCLUDE "PE/logging.include.ab3"
0000D15A <file.include.ab3@1597> XINCLUDE "PE/logging.include.ab3"
0000D16C <file.include.ab3@1598> XINCLUDE "PE/logging.include.ab3"
0000D178 <file.include.ab3@1599> XINCLUDE "PE/logging.include.ab3"
0000D17E <file.include.ab3@1600> XINCLUDE "PE/logging.include.ab3"
0000D186 <file.include.ab3@1601> XINCLUDE "PE/logging.include.ab3"
0000D1BE <file.include.ab3@1602> XINCLUDE "PE/logging.include.ab3"
0000D1D0 <file.include.ab3@1603> XINCLUDE "PE/logging.include.ab3"
0000D1F4 <file.include.ab3@1604> XINCLUDE "PE/logging.include.ab3"
0000D206 <file.include.ab3@1605> XINCLUDE "PE/logging.include.ab3"
0000D212 <file.include.ab3@1606> XINCLUDE "PE/logging.include.ab3"
0000D218 <file.include.ab3@1607> XINCLUDE "PE/logging.include.ab3"
0000D228 <file.include.ab3@1608> XINCLUDE "PE/logging.include.ab3"
0000D246 <file.include.ab3@1613> XINCLUDE "PE/logging.include.ab3"
0000D258 <file.include.ab3@1616> XINCLUDE "PE/logging.include.ab3"
0000D2A4 <file.include.ab3@1617> XINCLUDE "PE/logging.include.ab3"
0000D2AA <file.include.ab3@1619> XINCLUDE "PE/logging.include.ab3"
0000D2D4 <file.include.ab3@1621> XINCLUDE "PE/logging.include.ab3"
0000D2EC <file.include.ab3@1622> XINCLUDE "PE/logging.include.ab3"
0000D31A <file.include.ab3@1706> XINCLUDE "PE/logging.include.ab3"
0000D32E <file.include.ab3@1707> XINCLUDE "PE/logging.include.ab3"
0000D344 <file.include.ab3@1708> XINCLUDE "PE/logging.include.ab3"
0000D364 <file.include.ab3@1709> XINCLUDE "PE/logging.include.ab3"
0000D37A <file.include.ab3@1710> XINCLUDE "PE/logging.include.ab3"
0000D384 <file.include.ab3@1711> XINCLUDE "PE/logging.include.ab3"
0000D39E <file.include.ab3@1712> XINCLUDE "PE/logging.include.ab3"
0000D3C0 <file.include.ab3@1787> XINCLUDE "PE/logging.include.ab3"
0000D3D8 <file.include.ab3@1789> XINCLUDE "PE/logging.include.ab3"
0000D3FA <file.include.ab3@1790> XINCLUDE "PE/logging.include.ab3"
0000D400 <file.include.ab3@1791> XINCLUDE "PE/logging.include.ab3"
0000D432 <file.include.ab3@1811> XINCLUDE "PE/logging.include.ab3"
0000D446 <file.include.ab3@1813> XINCLUDE "PE/logging.include.ab3"
0000D45E <file.include.ab3@1814> XINCLUDE "PE/logging.include.ab3"
0000D476 <file.include.ab3@1815> XINCLUDE "PE/logging.include.ab3"
0000D496 <file.include.ab3@1816> XINCLUDE "PE/logging.include.ab3"
0000D4C6 <file.include.ab3@1817> XINCLUDE "PE/logging.include.ab3"
0000D4F6 <file.include.ab3@1818> XINCLUDE "PE/logging.include.ab3"
0000D508 <file.include.ab3@1819> XINCLUDE "PE/logging.include.ab3"
0000D510 <file.include.ab3@1820> XINCLUDE "PE/logging.include.ab3"
0000D53A <file.include.ab3@1821> XINCLUDE "PE/logging.include.ab3"
0000D544 <file.include.ab3@1823> XINCLUDE "PE/logging.include.ab3"
0000D55E <file.include.ab3@1824> XINCLUDE "PE/logging.include.ab3"
0000D578 <file.include.ab3@1841> XINCLUDE "PE/logging.include.ab3"
0000D596 <file.include.ab3@1843> XINCLUDE "PE/logging.include.ab3"
0000D5B6 <file.include.ab3@1844> XINCLUDE "PE/logging.include.ab3"
0000D600 <file.include.ab3@1845> XINCLUDE "PE/logging.include.ab3"
0000D61A <file.include.ab3@1846> XINCLUDE "PE/logging.include.ab3"
0000D62C <file.include.ab3@1847> XINCLUDE "PE/logging.include.ab3"
0000D662 <file.include.ab3@1848> XINCLUDE "PE/logging.include.ab3"
0000D674 <file.include.ab3@1849> XINCLUDE "PE/logging.include.ab3"
0000D67C <file.include.ab3@1850> XINCLUDE "PE/logging.include.ab3"
0000D6A4 <file.include.ab3@1851> XINCLUDE "PE/logging.include.ab3"
0000D6AA <file.include.ab3@1853> XINCLUDE "PE/logging.include.ab3"
0000D6D2 <file.include.ab3@1854> XINCLUDE "PE/logging.include.ab3"
0000D6E2 <file.include.ab3@1856> XINCLUDE "PE/logging.include.ab3"
0000D6F6 <file.include.ab3@1857> XINCLUDE "PE/logging.include.ab3"
0000D70C <file.include.ab3@1870> XINCLUDE "PE/logging.include.ab3"
0000D71C <file.include.ab3@1872> XINCLUDE "PE/logging.include.ab3"
0000D720 <file.include.ab3@1873> XINCLUDE "PE/logging.include.ab3"
0000D736 <file.include.ab3@1894> XINCLUDE "PE/logging.include.ab3"
0000D760 <file.include.ab3@1896> XINCLUDE "PE/logging.include.ab3"
0000D768 <file.include.ab3@1897> XINCLUDE "PE/logging.include.ab3"
0000D768 <logging.include.ab3@13> XINCLUDE "PE/logging.include.ab3"
0000D806 <logging.include.ab3@35> XINCLUDE "PE/logging.include.ab3"
0000D80C <logging.include.ab3@36> XINCLUDE "PE/logging.include.ab3"
0000D812 <logging.include.ab3@37> XINCLUDE "PE/logging.include.ab3"
0000D818 <logging.include.ab3@38> XINCLUDE "PE/logging.include.ab3"
0000D852 <logging.include.ab3@129> XINCLUDE "PE/logging.include.ab3"
0000D884 <logging.include.ab3@131> XINCLUDE "PE/logging.include.ab3"
0000D892 <logging.include.ab3@132> XINCLUDE "PE/logging.include.ab3"
0000D8C2 <logging.include.ab3@133> XINCLUDE "PE/logging.include.ab3"
0000DC32 <logging.include.ab3@134> XINCLUDE "PE/logging.include.ab3"
0000DC40 <logging.include.ab3@135> XINCLUDE "PE/logging.include.ab3"
0000DC46 <logging.include.ab3@136> XINCLUDE "PE/logging.include.ab3"
0000DED8 <logging.include.ab3@137> XINCLUDE "PE/logging.include.ab3"
0000DEF2 <logging.include.ab3@139> XINCLUDE "PE/logging.include.ab3"
0000DF2C <logging.include.ab3@142> XINCLUDE "PE/logging.include.ab3"
0000DF7E <logging.include.ab3@143> XINCLUDE "PE/logging.include.ab3"
0000DF8C <logging.include.ab3@144> XINCLUDE "PE/logging.include.ab3"
0000DFE2 <logging.include.ab3@145> XINCLUDE "PE/logging.include.ab3"
0000DFE8 <logging.include.ab3@146> XINCLUDE "PE/logging.include.ab3"
0000E062 <logging.include.ab3@147> XINCLUDE "PE/logging.include.ab3"
0000E0D6 <logging.include.ab3@148> XINCLUDE "PE/logging.include.ab3"
0000E0F0 <logging.include.ab3@150> XINCLUDE "PE/logging.include.ab3"
0000E0F0 <AmiBlitz3.ab3@89> XINCLUDE "PE/logging.include.ab3"
0000E0F0 <translation.include.ab3@1> XINCLUDE "translation.include.ab3"
0000E0F0 <phrasebook.include.ab3@1> XINCLUDE "translation.include.ab3"
0000E0F0 <prefixtree.include.ab3@1> XINCLUDE "translation.include.ab3"
0000E0F0 <dynamicarray.include.ab3@1> XINCLUDE "translation.include.ab3"
0000E118 <dynamicarray.include.ab3@42> XINCLUDE "translation.include.ab3"
0000E132 <dynamicarray.include.ab3@55> XINCLUDE "translation.include.ab3"
0000E13C <dynamicarray.include.ab3@56> XINCLUDE "translation.include.ab3"
0000E14E <dynamicarray.include.ab3@57> XINCLUDE "translation.include.ab3"
0000E172 <dynamicarray.include.ab3@58> XINCLUDE "translation.include.ab3"
0000E180 <dynamicarray.include.ab3@60> XINCLUDE "translation.include.ab3"
0000E18C <dynamicarray.include.ab3@61> XINCLUDE "translation.include.ab3"
0000E190 <dynamicarray.include.ab3@63> XINCLUDE "translation.include.ab3"
0000E1AE <dynamicarray.include.ab3@99> XINCLUDE "translation.include.ab3"
0000E1C8 <dynamicarray.include.ab3@101> XINCLUDE "translation.include.ab3"
0000E1E8 <dynamicarray.include.ab3@102> XINCLUDE "translation.include.ab3"
0000E1F2 <dynamicarray.include.ab3@103> XINCLUDE "translation.include.ab3"
0000E200 <dynamicarray.include.ab3@104> XINCLUDE "translation.include.ab3"
0000E20C <dynamicarray.include.ab3@105> XINCLUDE "translation.include.ab3"
0000E21A <dynamicarray.include.ab3@106> XINCLUDE "translation.include.ab3"
0000E226 <dynamicarray.include.ab3@107> XINCLUDE "translation.include.ab3"
0000E232 <dynamicarray.include.ab3@108> XINCLUDE "translation.include.ab3"
0000E244 <dynamicarray.include.ab3@109> XINCLUDE "translation.include.ab3"
0000E254 <dynamicarray.include.ab3@110> XINCLUDE "translation.include.ab3"
0000E25E <dynamicarray.include.ab3@113> XINCLUDE "translation.include.ab3"
0000E264 <dynamicarray.include.ab3@114> XINCLUDE "translation.include.ab3"
0000E27E <dynamicarray.include.ab3@425> XINCLUDE "translation.include.ab3"
0000E288 <dynamicarray.include.ab3@427> XINCLUDE "translation.include.ab3"
0000E292 <dynamicarray.include.ab3@428> XINCLUDE "translation.include.ab3"
0000E2A2 <dynamicarray.include.ab3@429> XINCLUDE "translation.include.ab3"
0000E2AC <dynamicarray.include.ab3@430> XINCLUDE "translation.include.ab3"
0000E2BE <dynamicarray.include.ab3@431> XINCLUDE "translation.include.ab3"
0000E2D4 <dynamicarray.include.ab3@432> XINCLUDE "translation.include.ab3"
0000E2DE <dynamicarray.include.ab3@433> XINCLUDE "translation.include.ab3"
0000E2E4 <dynamicarray.include.ab3@435> XINCLUDE "translation.include.ab3"
0000E2E8 <dynamicarray.include.ab3@437> XINCLUDE "translation.include.ab3"
0000E2FE <dynamicarray.include.ab3@531> XINCLUDE "translation.include.ab3"
0000E304 <dynamicarray.include.ab3@533> XINCLUDE "translation.include.ab3"
0000E30E <dynamicarray.include.ab3@535> XINCLUDE "translation.include.ab3"
0000E344 <dynamicarray.include.ab3@536> XINCLUDE "translation.include.ab3"
0000E34E <dynamicarray.include.ab3@537> XINCLUDE "translation.include.ab3"
0000E352 <dynamicarray.include.ab3@538> XINCLUDE "translation.include.ab3"
0000E380 <dynamicarray.include.ab3@539> XINCLUDE "translation.include.ab3"
0000E380 <prefixtree.include.ab3@156> XINCLUDE "translation.include.ab3"
0000E39A <prefixtree.include.ab3@221> XINCLUDE "translation.include.ab3"
0000E3A4 <prefixtree.include.ab3@223> XINCLUDE "translation.include.ab3"
0000E3CC <prefixtree.include.ab3@224> XINCLUDE "translation.include.ab3"
0000E3EE <prefixtree.include.ab3@225> XINCLUDE "translation.include.ab3"
0000E406 <prefixtree.include.ab3@226> XINCLUDE "translation.include.ab3"
0000E41C <prefixtree.include.ab3@227> XINCLUDE "translation.include.ab3"
0000E420 <prefixtree.include.ab3@230> XINCLUDE "translation.include.ab3"
0000E43A <prefixtree.include.ab3@283> XINCLUDE "translation.include.ab3"
0000E45A <prefixtree.include.ab3@284> XINCLUDE "translation.include.ab3"
0000E464 <prefixtree.include.ab3@285> XINCLUDE "translation.include.ab3"
0000E47E <prefixtree.include.ab3@286> XINCLUDE "translation.include.ab3"
0000E48C <prefixtree.include.ab3@287> XINCLUDE "translation.include.ab3"
0000E49A <prefixtree.include.ab3@288> XINCLUDE "translation.include.ab3"
0000E4A8 <prefixtree.include.ab3@289> XINCLUDE "translation.include.ab3"
0000E4B6 <prefixtree.include.ab3@290> XINCLUDE "translation.include.ab3"
0000E4C2 <prefixtree.include.ab3@291> XINCLUDE "translation.include.ab3"
0000E4CC <prefixtree.include.ab3@292> XINCLUDE "translation.include.ab3"
0000E4DA <prefixtree.include.ab3@293> XINCLUDE "translation.include.ab3"
0000E4E8 <prefixtree.include.ab3@294> XINCLUDE "translation.include.ab3"
0000E4F6 <prefixtree.include.ab3@295> XINCLUDE "translation.include.ab3"
0000E510 <prefixtree.include.ab3@296> XINCLUDE "translation.include.ab3"
0000E51E <prefixtree.include.ab3@297> XINCLUDE "translation.include.ab3"
0000E52E <prefixtree.include.ab3@298> XINCLUDE "translation.include.ab3"
0000E53E <prefixtree.include.ab3@299> XINCLUDE "translation.include.ab3"
0000E54E <prefixtree.include.ab3@300> XINCLUDE "translation.include.ab3"
0000E55C <prefixtree.include.ab3@301> XINCLUDE "translation.include.ab3"
0000E566 <prefixtree.include.ab3@303> XINCLUDE "translation.include.ab3"
0000E56C <prefixtree.include.ab3@304> XINCLUDE "translation.include.ab3"
0000E58A <prefixtree.include.ab3@322> XINCLUDE "translation.include.ab3"
0000E590 <prefixtree.include.ab3@323> XINCLUDE "translation.include.ab3"
0000E59A <prefixtree.include.ab3@324> XINCLUDE "translation.include.ab3"
0000E5BA <prefixtree.include.ab3@325> XINCLUDE "translation.include.ab3"
0000E5E8 <prefixtree.include.ab3@326> XINCLUDE "translation.include.ab3"
0000E606 <prefixtree.include.ab3@327> XINCLUDE "translation.include.ab3"
0000E610 <prefixtree.include.ab3@328> XINCLUDE "translation.include.ab3"
0000E622 <prefixtree.include.ab3@329> XINCLUDE "translation.include.ab3"
0000E64E <prefixtree.include.ab3@330> XINCLUDE "translation.include.ab3"
0000E664 <prefixtree.include.ab3@331> XINCLUDE "translation.include.ab3"
0000E670 <prefixtree.include.ab3@333> XINCLUDE "translation.include.ab3"
0000E67C <prefixtree.include.ab3@334> XINCLUDE "translation.include.ab3"
0000E682 <prefixtree.include.ab3@335> XINCLUDE "translation.include.ab3"
0000E688 <prefixtree.include.ab3@336> XINCLUDE "translation.include.ab3"
0000E68E <prefixtree.include.ab3@337> XINCLUDE "translation.include.ab3"
0000E6C6 <prefixtree.include.ab3@338> XINCLUDE "translation.include.ab3"
0000E6CC <prefixtree.include.ab3@340> XINCLUDE "translation.include.ab3"
0000E6D2 <prefixtree.include.ab3@341> XINCLUDE "translation.include.ab3"
0000E6DC <prefixtree.include.ab3@344> XINCLUDE "translation.include.ab3"
0000E6E2 <prefixtree.include.ab3@345> XINCLUDE "translation.include.ab3"
0000E714 <prefixtree.include.ab3@365> XINCLUDE "translation.include.ab3"
0000E730 <prefixtree.include.ab3@366> XINCLUDE "translation.include.ab3"
0000E74A <prefixtree.include.ab3@367> XINCLUDE "translation.include.ab3"
0000E75E <prefixtree.include.ab3@368> XINCLUDE "translation.include.ab3"
0000E7AE <prefixtree.include.ab3@369> XINCLUDE "translation.include.ab3"
0000E7D0 <prefixtree.include.ab3@371> XINCLUDE "translation.include.ab3"
0000E7E4 <prefixtree.include.ab3@372> XINCLUDE "translation.include.ab3"
0000E7F2 <prefixtree.include.ab3@373> XINCLUDE "translation.include.ab3"
0000E7FE <prefixtree.include.ab3@374> XINCLUDE "translation.include.ab3"
0000E806 <prefixtree.include.ab3@375> XINCLUDE "translation.include.ab3"
0000E80E <prefixtree.include.ab3@376> XINCLUDE "translation.include.ab3"
0000E816 <prefixtree.include.ab3@377> XINCLUDE "translation.include.ab3"
0000E81E <prefixtree.include.ab3@378> XINCLUDE "translation.include.ab3"
0000E824 <prefixtree.include.ab3@379> XINCLUDE "translation.include.ab3"
0000E832 <prefixtree.include.ab3@380> XINCLUDE "translation.include.ab3"
0000E854 <prefixtree.include.ab3@382> XINCLUDE "translation.include.ab3"
0000E880 <prefixtree.include.ab3@383> XINCLUDE "translation.include.ab3"
0000E892 <prefixtree.include.ab3@385> XINCLUDE "translation.include.ab3"
0000E898 <prefixtree.include.ab3@386> XINCLUDE "translation.include.ab3"
0000E8C0 <prefixtree.include.ab3@388> XINCLUDE "translation.include.ab3"
0000E8E4 <prefixtree.include.ab3@389> XINCLUDE "translation.include.ab3"
0000E90C <prefixtree.include.ab3@390> XINCLUDE "translation.include.ab3"
0000E940 <prefixtree.include.ab3@391> XINCLUDE "translation.include.ab3"
0000E950 <prefixtree.include.ab3@392> XINCLUDE "translation.include.ab3"
0000E95A <prefixtree.include.ab3@393> XINCLUDE "translation.include.ab3"
0000E968 <prefixtree.include.ab3@394> XINCLUDE "translation.include.ab3"
0000E97C <prefixtree.include.ab3@395> XINCLUDE "translation.include.ab3"
0000E982 <prefixtree.include.ab3@396> XINCLUDE "translation.include.ab3"
0000E9A2 <prefixtree.include.ab3@397> XINCLUDE "translation.include.ab3"
0000E9A8 <prefixtree.include.ab3@398> XINCLUDE "translation.include.ab3"
0000E9B0 <prefixtree.include.ab3@400> XINCLUDE "translation.include.ab3"
0000E9EA <prefixtree.include.ab3@402> XINCLUDE "translation.include.ab3"
0000EA10 <prefixtree.include.ab3@403> XINCLUDE "translation.include.ab3"
0000EA28 <prefixtree.include.ab3@404> XINCLUDE "translation.include.ab3"
0000EA5C <prefixtree.include.ab3@405> XINCLUDE "translation.include.ab3"
0000EA64 <prefixtree.include.ab3@406> XINCLUDE "translation.include.ab3"
0000EA72 <prefixtree.include.ab3@408> XINCLUDE "translation.include.ab3"
0000EA78 <prefixtree.include.ab3@410> XINCLUDE "translation.include.ab3"
0000EA90 <prefixtree.include.ab3@411> XINCLUDE "translation.include.ab3"
0000EA96 <prefixtree.include.ab3@412> XINCLUDE "translation.include.ab3"
0000EA9C <prefixtree.include.ab3@413> XINCLUDE "translation.include.ab3"
0000EAB6 <prefixtree.include.ab3@414> XINCLUDE "translation.include.ab3"
0000EABC <prefixtree.include.ab3@417> XINCLUDE "translation.include.ab3"
0000EAC2 <prefixtree.include.ab3@419> XINCLUDE "translation.include.ab3"
0000EAC8 <prefixtree.include.ab3@421> XINCLUDE "translation.include.ab3"
0000EAD6 <prefixtree.include.ab3@422> XINCLUDE "translation.include.ab3"
0000EAE4 <prefixtree.include.ab3@423> XINCLUDE "translation.include.ab3"
0000EB1E <prefixtree.include.ab3@425> XINCLUDE "translation.include.ab3"
0000EB44 <prefixtree.include.ab3@426> XINCLUDE "translation.include.ab3"
0000EB5C <prefixtree.include.ab3@427> XINCLUDE "translation.include.ab3"
0000EB68 <prefixtree.include.ab3@430> XINCLUDE "translation.include.ab3"
0000EB74 <prefixtree.include.ab3@431> XINCLUDE "translation.include.ab3"
0000EB80 <prefixtree.include.ab3@432> XINCLUDE "translation.include.ab3"
0000EB8C <prefixtree.include.ab3@433> XINCLUDE "translation.include.ab3"
0000EB98 <prefixtree.include.ab3@434> XINCLUDE "translation.include.ab3"
0000EBA2 <prefixtree.include.ab3@435> XINCLUDE "translation.include.ab3"
0000EBAA <prefixtree.include.ab3@437> XINCLUDE "translation.include.ab3"
0000EBC4 <prefixtree.include.ab3@438> XINCLUDE "translation.include.ab3"
0000EC02 <prefixtree.include.ab3@485> XINCLUDE "translation.include.ab3"
0000EC08 <prefixtree.include.ab3@486> XINCLUDE "translation.include.ab3"
0000EC6E <prefixtree.include.ab3@487> XINCLUDE "translation.include.ab3"
0000ECAE <prefixtree.include.ab3@489> XINCLUDE "translation.include.ab3"
0000ED04 <prefixtree.include.ab3@490> XINCLUDE "translation.include.ab3"
0000ED76 <prefixtree.include.ab3@491> XINCLUDE "translation.include.ab3"
0000ED82 <prefixtree.include.ab3@493> XINCLUDE "translation.include.ab3"
0000ED90 <prefixtree.include.ab3@494> XINCLUDE "translation.include.ab3"
0000EDD6 <prefixtree.include.ab3@495> XINCLUDE "translation.include.ab3"
0000EE20 <prefixtree.include.ab3@496> XINCLUDE "translation.include.ab3"
0000EE58 <prefixtree.include.ab3@497> XINCLUDE "translation.include.ab3"
0000EEAC <prefixtree.include.ab3@498> XINCLUDE "translation.include.ab3"
0000EEB2 <prefixtree.include.ab3@499> XINCLUDE "translation.include.ab3"
0000EEB8 <prefixtree.include.ab3@500> XINCLUDE "translation.include.ab3"
0000EEC6 <prefixtree.include.ab3@502> XINCLUDE "translation.include.ab3"
0000EECE <prefixtree.include.ab3@503> XINCLUDE "translation.include.ab3"
0000EF08 <prefixtree.include.ab3@505> XINCLUDE "translation.include.ab3"
0000EF2E <prefixtree.include.ab3@506> XINCLUDE "translation.include.ab3"
0000EF46 <prefixtree.include.ab3@507> XINCLUDE "translation.include.ab3"
0000EF7C <prefixtree.include.ab3@508> XINCLUDE "translation.include.ab3"
0000EF92 <prefixtree.include.ab3@509> XINCLUDE "translation.include.ab3"
0000EFA0 <prefixtree.include.ab3@511> XINCLUDE "translation.include.ab3"
0000EFB8 <prefixtree.include.ab3@512> XINCLUDE "translation.include.ab3"
0000EFF0 <prefixtree.include.ab3@513> XINCLUDE "translation.include.ab3"
0000F016 <prefixtree.include.ab3@514> XINCLUDE "translation.include.ab3"
0000F05E <prefixtree.include.ab3@515> XINCLUDE "translation.include.ab3"
0000F064 <prefixtree.include.ab3@516> XINCLUDE "translation.include.ab3"
0000F07E <prefixtree.include.ab3@518> XINCLUDE "translation.include.ab3"
0000F08A <prefixtree.include.ab3@519> XINCLUDE "translation.include.ab3"
0000F090 <prefixtree.include.ab3@520> XINCLUDE "translation.include.ab3"
0000F0BC <prefixtree.include.ab3@521> XINCLUDE "translation.include.ab3"
0000F0D0 <prefixtree.include.ab3@526> XINCLUDE "translation.include.ab3"
0000F0DE <prefixtree.include.ab3@528> XINCLUDE "translation.include.ab3"
0000F0E6 <prefixtree.include.ab3@529> XINCLUDE "translation.include.ab3"
0000F120 <prefixtree.include.ab3@531> XINCLUDE "translation.include.ab3"
0000F146 <prefixtree.include.ab3@532> XINCLUDE "translation.include.ab3"
0000F15E <prefixtree.include.ab3@533> XINCLUDE "translation.include.ab3"
0000F198 <prefixtree.include.ab3@534> XINCLUDE "translation.include.ab3"
0000F1C2 <prefixtree.include.ab3@535> XINCLUDE "translation.include.ab3"
0000F1DA <prefixtree.include.ab3@536> XINCLUDE "translation.include.ab3"
0000F20A <prefixtree.include.ab3@537> XINCLUDE "translation.include.ab3"
0000F236 <prefixtree.include.ab3@538> XINCLUDE "translation.include.ab3"
0000F252 <prefixtree.include.ab3@539> XINCLUDE "translation.include.ab3"
0000F260 <prefixtree.include.ab3@541> XINCLUDE "translation.include.ab3"
0000F26E <prefixtree.include.ab3@542> XINCLUDE "translation.include.ab3"
0000F2AC <prefixtree.include.ab3@543> XINCLUDE "translation.include.ab3"
0000F2E8 <prefixtree.include.ab3@544> XINCLUDE "translation.include.ab3"
0000F354 <prefixtree.include.ab3@545> XINCLUDE "translation.include.ab3"
0000F382 <prefixtree.include.ab3@546> XINCLUDE "translation.include.ab3"
0000F3B0 <prefixtree.include.ab3@547> XINCLUDE "translation.include.ab3"
0000F3F8 <prefixtree.include.ab3@548> XINCLUDE "translation.include.ab3"
0000F412 <prefixtree.include.ab3@551> XINCLUDE "translation.include.ab3"
0000F45A <prefixtree.include.ab3@552> XINCLUDE "translation.include.ab3"
0000F478 <prefixtree.include.ab3@553> XINCLUDE "translation.include.ab3"
0000F496 <prefixtree.include.ab3@554> XINCLUDE "translation.include.ab3"
0000F4B0 <prefixtree.include.ab3@557> XINCLUDE "translation.include.ab3"
0000F4BC <prefixtree.include.ab3@558> XINCLUDE "translation.include.ab3"
0000F4C2 <prefixtree.include.ab3@559> XINCLUDE "translation.include.ab3"
0000F4EE <prefixtree.include.ab3@560> XINCLUDE "translation.include.ab3"
0000F506 <prefixtree.include.ab3@562> XINCLUDE "translation.include.ab3"
0000F50C <prefixtree.include.ab3@563> XINCLUDE "translation.include.ab3"
0000F520 <prefixtree.include.ab3@566> XINCLUDE "translation.include.ab3"
0000F52E <prefixtree.include.ab3@568> XINCLUDE "translation.include.ab3"
0000F53C <prefixtree.include.ab3@569> XINCLUDE "translation.include.ab3"
0000F54A <prefixtree.include.ab3@570> XINCLUDE "translation.include.ab3"
0000F552 <prefixtree.include.ab3@571> XINCLUDE "translation.include.ab3"
0000F57E <prefixtree.include.ab3@572> XINCLUDE "translation.include.ab3"
0000F5A6 <prefixtree.include.ab3@573> XINCLUDE "translation.include.ab3"
0000F5CE <prefixtree.include.ab3@574> XINCLUDE "translation.include.ab3"
0000F63A <prefixtree.include.ab3@575> XINCLUDE "translation.include.ab3"
0000F64A <prefixtree.include.ab3@576> XINCLUDE "translation.include.ab3"
0000F676 <prefixtree.include.ab3@577> XINCLUDE "translation.include.ab3"
0000F6CC <prefixtree.include.ab3@579> XINCLUDE "translation.include.ab3"
0000F6DA <prefixtree.include.ab3@580> XINCLUDE "translation.include.ab3"
0000F6E8 <prefixtree.include.ab3@581> XINCLUDE "translation.include.ab3"
0000F6EE <prefixtree.include.ab3@582> XINCLUDE "translation.include.ab3"
0000F742 <prefixtree.include.ab3@584> XINCLUDE "translation.include.ab3"
0000F862 <prefixtree.include.ab3@585> XINCLUDE "translation.include.ab3"
0000F8B2 <prefixtree.include.ab3@587> XINCLUDE "translation.include.ab3"
0000F908 <prefixtree.include.ab3@588> XINCLUDE "translation.include.ab3"
0000F974 <prefixtree.include.ab3@589> XINCLUDE "translation.include.ab3"
0000F97C <prefixtree.include.ab3@593> XINCLUDE "translation.include.ab3"
0000F9B6 <prefixtree.include.ab3@595> XINCLUDE "translation.include.ab3"
0000F9DC <prefixtree.include.ab3@596> XINCLUDE "translation.include.ab3"
0000F9F4 <prefixtree.include.ab3@597> XINCLUDE "translation.include.ab3"
0000FA2E <prefixtree.include.ab3@598> XINCLUDE "translation.include.ab3"
0000FA58 <prefixtree.include.ab3@599> XINCLUDE "translation.include.ab3"
0000FA70 <prefixtree.include.ab3@600> XINCLUDE "translation.include.ab3"
0000FA94 <prefixtree.include.ab3@602> XINCLUDE "translation.include.ab3"
0000FAE8 <prefixtree.include.ab3@603> XINCLUDE "translation.include.ab3"
0000FAF0 <prefixtree.include.ab3@604> XINCLUDE "translation.include.ab3"
0000FAF6 <prefixtree.include.ab3@605> XINCLUDE "translation.include.ab3"
0000FB58 <prefixtree.include.ab3@606> XINCLUDE "translation.include.ab3"
0000FB84 <prefixtree.include.ab3@607> XINCLUDE "translation.include.ab3"
0000FBA0 <prefixtree.include.ab3@610> XINCLUDE "translation.include.ab3"
0000FBAE <prefixtree.include.ab3@612> XINCLUDE "translation.include.ab3"
0000FBBC <prefixtree.include.ab3@613> XINCLUDE "translation.include.ab3"
0000FBCA <prefixtree.include.ab3@615> XINCLUDE "translation.include.ab3"
0000FBD8 <prefixtree.include.ab3@616> XINCLUDE "translation.include.ab3"
0000FC1C <prefixtree.include.ab3@617> XINCLUDE "translation.include.ab3"
0000FC88 <prefixtree.include.ab3@618> XINCLUDE "translation.include.ab3"
0000FCB6 <prefixtree.include.ab3@619> XINCLUDE "translation.include.ab3"
0000FCCA <prefixtree.include.ab3@620> XINCLUDE "translation.include.ab3"
0000FCFC <prefixtree.include.ab3@621> XINCLUDE "translation.include.ab3"
0000FD46 <prefixtree.include.ab3@622> XINCLUDE "translation.include.ab3"
0000FD56 <prefixtree.include.ab3@623> XINCLUDE "translation.include.ab3"
0000FD8A <prefixtree.include.ab3@624> XINCLUDE "translation.include.ab3"
0000FDAC <prefixtree.include.ab3@625> XINCLUDE "translation.include.ab3"
0000FDBC <prefixtree.include.ab3@626> XINCLUDE "translation.include.ab3"
0000FDC4 <prefixtree.include.ab3@629> XINCLUDE "translation.include.ab3"
0000FE08 <prefixtree.include.ab3@630> XINCLUDE "translation.include.ab3"
0000FE74 <prefixtree.include.ab3@631> XINCLUDE "translation.include.ab3"
0000FEA2 <prefixtree.include.ab3@632> XINCLUDE "translation.include.ab3"
0000FEC6 <prefixtree.include.ab3@634> XINCLUDE "translation.include.ab3"
0000FF0A <prefixtree.include.ab3@635> XINCLUDE "translation.include.ab3"
0000FF76 <prefixtree.include.ab3@636> XINCLUDE "translation.include.ab3"
0000FFA4 <prefixtree.include.ab3@637> XINCLUDE "translation.include.ab3"
0000FFD2 <prefixtree.include.ab3@638> XINCLUDE "translation.include.ab3"
0000FFDA <prefixtree.include.ab3@639> XINCLUDE "translation.include.ab3"
00010008 <prefixtree.include.ab3@640> XINCLUDE "translation.include.ab3"
0001007A <prefixtree.include.ab3@641> XINCLUDE "translation.include.ab3"
00010080 <prefixtree.include.ab3@642> XINCLUDE "translation.include.ab3"
000100AE <prefixtree.include.ab3@643> XINCLUDE "translation.include.ab3"
00010120 <prefixtree.include.ab3@644> XINCLUDE "translation.include.ab3"
0001013E <prefixtree.include.ab3@647> XINCLUDE "translation.include.ab3"
00010162 <prefixtree.include.ab3@648> XINCLUDE "translation.include.ab3"
0001017A <prefixtree.include.ab3@649> XINCLUDE "translation.include.ab3"
00010180 <prefixtree.include.ab3@650> XINCLUDE "translation.include.ab3"
00010186 <prefixtree.include.ab3@653> XINCLUDE "translation.include.ab3"
00010188 <prefixtree.include.ab3@655> XINCLUDE "translation.include.ab3"
00010192 <prefixtree.include.ab3@658> XINCLUDE "translation.include.ab3"
000101BE <prefixtree.include.ab3@659> XINCLUDE "translation.include.ab3"
000101E0 <prefixtree.include.ab3@677> XINCLUDE "translation.include.ab3"
000101E8 <prefixtree.include.ab3@679> XINCLUDE "translation.include.ab3"
000101EE <prefixtree.include.ab3@680> XINCLUDE "translation.include.ab3"
000101FC <prefixtree.include.ab3@681> XINCLUDE "translation.include.ab3"
00010236 <prefixtree.include.ab3@683> XINCLUDE "translation.include.ab3"
0001025C <prefixtree.include.ab3@684> XINCLUDE "translation.include.ab3"
00010274 <prefixtree.include.ab3@685> XINCLUDE "translation.include.ab3"
000102AE <prefixtree.include.ab3@686> XINCLUDE "translation.include.ab3"
000102D8 <prefixtree.include.ab3@687> XINCLUDE "translation.include.ab3"
000102F0 <prefixtree.include.ab3@689> XINCLUDE "translation.include.ab3"
00010308 <prefixtree.include.ab3@690> XINCLUDE "translation.include.ab3"
00010340 <prefixtree.include.ab3@691> XINCLUDE "translation.include.ab3"
00010348 <prefixtree.include.ab3@693> XINCLUDE "translation.include.ab3"
00010382 <prefixtree.include.ab3@695> XINCLUDE "translation.include.ab3"
00010394 <prefixtree.include.ab3@697> XINCLUDE "translation.include.ab3"
000103BA <prefixtree.include.ab3@698> XINCLUDE "translation.include.ab3"
000103D0 <prefixtree.include.ab3@699> XINCLUDE "translation.include.ab3"
000103F6 <prefixtree.include.ab3@700> XINCLUDE "translation.include.ab3"
0001040A <prefixtree.include.ab3@701> XINCLUDE "translation.include.ab3"
00010422 <prefixtree.include.ab3@703> XINCLUDE "translation.include.ab3"
00010434 <prefixtree.include.ab3@705> XINCLUDE "translation.include.ab3"
0001043E <prefixtree.include.ab3@707> XINCLUDE "translation.include.ab3"
00010452 <prefixtree.include.ab3@709> XINCLUDE "translation.include.ab3"
0001046C <prefixtree.include.ab3@726> XINCLUDE "translation.include.ab3"
00010488 <prefixtree.include.ab3@728> XINCLUDE "translation.include.ab3"
0001049A <prefixtree.include.ab3@729> XINCLUDE "translation.include.ab3"
000104B6 <prefixtree.include.ab3@730> XINCLUDE "translation.include.ab3"
000104F2 <prefixtree.include.ab3@731> XINCLUDE "translation.include.ab3"
0001050E <prefixtree.include.ab3@732> XINCLUDE "translation.include.ab3"
0001052E <prefixtree.include.ab3@733> XINCLUDE "translation.include.ab3"
00010538 <prefixtree.include.ab3@734> XINCLUDE "translation.include.ab3"
0001053E <prefixtree.include.ab3@735> XINCLUDE "translation.include.ab3"
00010548 <prefixtree.include.ab3@736> XINCLUDE "translation.include.ab3"
00010550 <prefixtree.include.ab3@738> XINCLUDE "translation.include.ab3"
00010556 <prefixtree.include.ab3@740> XINCLUDE "translation.include.ab3"
00010584 <prefixtree.include.ab3@759> XINCLUDE "translation.include.ab3"
000105AC <prefixtree.include.ab3@760> XINCLUDE "translation.include.ab3"
000105EC <prefixtree.include.ab3@761> XINCLUDE "translation.include.ab3"
00010604 <prefixtree.include.ab3@762> XINCLUDE "translation.include.ab3"
0001064A <prefixtree.include.ab3@763> XINCLUDE "translation.include.ab3"
00010674 <prefixtree.include.ab3@766> XINCLUDE "translation.include.ab3"
000106A2 <prefixtree.include.ab3@767> XINCLUDE "translation.include.ab3"
000106BC <prefixtree.include.ab3@966> XINCLUDE "translation.include.ab3"
000106C2 <prefixtree.include.ab3@967> XINCLUDE "translation.include.ab3"
000106DA <prefixtree.include.ab3@968> XINCLUDE "translation.include.ab3"
000106E4 <prefixtree.include.ab3@969> XINCLUDE "translation.include.ab3"
000106F6 <prefixtree.include.ab3@970> XINCLUDE "translation.include.ab3"
0001072E <prefixtree.include.ab3@971> XINCLUDE "translation.include.ab3"
0001073C <prefixtree.include.ab3@972> XINCLUDE "translation.include.ab3"
00010748 <prefixtree.include.ab3@973> XINCLUDE "translation.include.ab3"
00010764 <prefixtree.include.ab3@974> XINCLUDE "translation.include.ab3"
00010786 <prefixtree.include.ab3@975> XINCLUDE "translation.include.ab3"
000107A8 <prefixtree.include.ab3@976> XINCLUDE "translation.include.ab3"
000107CA <prefixtree.include.ab3@977> XINCLUDE "translation.include.ab3"
000107EC <prefixtree.include.ab3@978> XINCLUDE "translation.include.ab3"
00010808 <prefixtree.include.ab3@979> XINCLUDE "translation.include.ab3"
00010826 <prefixtree.include.ab3@980> XINCLUDE "translation.include.ab3"
0001083A <prefixtree.include.ab3@981> XINCLUDE "translation.include.ab3"
00010840 <prefixtree.include.ab3@983> XINCLUDE "translation.include.ab3"
00010842 <prefixtree.include.ab3@985> XINCLUDE "translation.include.ab3"
00010848 <prefixtree.include.ab3@986> XINCLUDE "translation.include.ab3"
00010852 <prefixtree.include.ab3@988> XINCLUDE "translation.include.ab3"
00010858 <prefixtree.include.ab3@989> XINCLUDE "translation.include.ab3"
00010876 <prefixtree.include.ab3@1007> XINCLUDE "translation.include.ab3"
0001087C <prefixtree.include.ab3@1008> XINCLUDE "translation.include.ab3"
000108A0 <prefixtree.include.ab3@1009> XINCLUDE "translation.include.ab3"
000108BE <prefixtree.include.ab3@1010> XINCLUDE "translation.include.ab3"
000108EC <prefixtree.include.ab3@1011> XINCLUDE "translation.include.ab3"
0001091A <prefixtree.include.ab3@1012> XINCLUDE "translation.include.ab3"
00010948 <prefixtree.include.ab3@1013> XINCLUDE "translation.include.ab3"
00010976 <prefixtree.include.ab3@1014> XINCLUDE "translation.include.ab3"
000109AA <prefixtree.include.ab3@1015> XINCLUDE "translation.include.ab3"
000109BA <prefixtree.include.ab3@1016> XINCLUDE "translation.include.ab3"
000109C4 <prefixtree.include.ab3@1018> XINCLUDE "translation.include.ab3"
000109CA <prefixtree.include.ab3@1019> XINCLUDE "translation.include.ab3"
000109CA <phrasebook.include.ab3@34> XINCLUDE "translation.include.ab3"
00010A14 <phrasebook.include.ab3@58> XINCLUDE "translation.include.ab3"
00010A34 <phrasebook.include.ab3@59> XINCLUDE "translation.include.ab3"
00010A3E <phrasebook.include.ab3@60> XINCLUDE "translation.include.ab3"
00010A52 <phrasebook.include.ab3@61> XINCLUDE "translation.include.ab3"
00010A98 <phrasebook.include.ab3@62> XINCLUDE "translation.include.ab3"
00010ADE <phrasebook.include.ab3@63> XINCLUDE "translation.include.ab3"
00010B24 <phrasebook.include.ab3@64> XINCLUDE "translation.include.ab3"
00010B2E <phrasebook.include.ab3@66> XINCLUDE "translation.include.ab3"
00010B4A <phrasebook.include.ab3@67> XINCLUDE "translation.include.ab3"
00010B74 <phrasebook.include.ab3@70> XINCLUDE "translation.include.ab3"
00010BF2 <phrasebook.include.ab3@71> XINCLUDE "translation.include.ab3"
00010C70 <phrasebook.include.ab3@72> XINCLUDE "translation.include.ab3"
00010CEE <phrasebook.include.ab3@73> XINCLUDE "translation.include.ab3"
00010D6C <phrasebook.include.ab3@74> XINCLUDE "translation.include.ab3"
00010DEA <phrasebook.include.ab3@75> XINCLUDE "translation.include.ab3"
00010E68 <phrasebook.include.ab3@76> XINCLUDE "translation.include.ab3"
00010EE6 <phrasebook.include.ab3@77> XINCLUDE "translation.include.ab3"
00010F64 <phrasebook.include.ab3@78> XINCLUDE "translation.include.ab3"
00010FE2 <phrasebook.include.ab3@79> XINCLUDE "translation.include.ab3"
00011060 <phrasebook.include.ab3@80> XINCLUDE "translation.include.ab3"
000110E4 <phrasebook.include.ab3@81> XINCLUDE "translation.include.ab3"
00011114 <phrasebook.include.ab3@82> XINCLUDE "translation.include.ab3"
00011170 <phrasebook.include.ab3@84> XINCLUDE "translation.include.ab3"
0001119C <phrasebook.include.ab3@85> XINCLUDE "translation.include.ab3"
00011266 <phrasebook.include.ab3@86> XINCLUDE "translation.include.ab3"
00011274 <phrasebook.include.ab3@88> XINCLUDE "translation.include.ab3"
000112B2 <phrasebook.include.ab3@89> XINCLUDE "translation.include.ab3"
00011336 <phrasebook.include.ab3@90> XINCLUDE "translation.include.ab3"
00011360 <phrasebook.include.ab3@91> XINCLUDE "translation.include.ab3"
0001137E <phrasebook.include.ab3@92> XINCLUDE "translation.include.ab3"
00011398 <phrasebook.include.ab3@106> XINCLUDE "translation.include.ab3"
000113A2 <phrasebook.include.ab3@107> XINCLUDE "translation.include.ab3"
000113AE <phrasebook.include.ab3@108> XINCLUDE "translation.include.ab3"
000113BE <phrasebook.include.ab3@109> XINCLUDE "translation.include.ab3"
000113CE <phrasebook.include.ab3@110> XINCLUDE "translation.include.ab3"
000113DE <phrasebook.include.ab3@111> XINCLUDE "translation.include.ab3"
000113EE <phrasebook.include.ab3@112> XINCLUDE "translation.include.ab3"
000113F2 <phrasebook.include.ab3@114> XINCLUDE "translation.include.ab3"
00011430 <phrasebook.include.ab3@131> XINCLUDE "translation.include.ab3"
00011488 <phrasebook.include.ab3@132> XINCLUDE "translation.include.ab3"
000114E4 <phrasebook.include.ab3@133> XINCLUDE "translation.include.ab3"
0001156E <phrasebook.include.ab3@134> XINCLUDE "translation.include.ab3"
000115EC <phrasebook.include.ab3@135> XINCLUDE "translation.include.ab3"
00011606 <phrasebook.include.ab3@137> XINCLUDE "translation.include.ab3"
00011634 <phrasebook.include.ab3@155> XINCLUDE "translation.include.ab3"
00011670 <phrasebook.include.ab3@156> XINCLUDE "translation.include.ab3"
0001173E <phrasebook.include.ab3@158> XINCLUDE "translation.include.ab3"
0001180C <phrasebook.include.ab3@159> XINCLUDE "translation.include.ab3"
00011858 <phrasebook.include.ab3@161> XINCLUDE "translation.include.ab3"
000118D6 <phrasebook.include.ab3@162> XINCLUDE "translation.include.ab3"
00011954 <phrasebook.include.ab3@163> XINCLUDE "translation.include.ab3"
000119B2 <phrasebook.include.ab3@165> XINCLUDE "translation.include.ab3"
00011A48 <phrasebook.include.ab3@166> XINCLUDE "translation.include.ab3"
00011A80 <phrasebook.include.ab3@168> XINCLUDE "translation.include.ab3"
00011ADE <phrasebook.include.ab3@169> XINCLUDE "translation.include.ab3"
00011B66 <phrasebook.include.ab3@170> XINCLUDE "translation.include.ab3"
00011B6E <phrasebook.include.ab3@172> XINCLUDE "translation.include.ab3"
00011BD8 <phrasebook.include.ab3@174> XINCLUDE "translation.include.ab3"
00011C44 <phrasebook.include.ab3@175> XINCLUDE "translation.include.ab3"
00011C82 <phrasebook.include.ab3@176> XINCLUDE "translation.include.ab3"
00011D0A <phrasebook.include.ab3@177> XINCLUDE "translation.include.ab3"
00011D36 <phrasebook.include.ab3@187> XINCLUDE "translation.include.ab3"
00011D92 <phrasebook.include.ab3@188> XINCLUDE "translation.include.ab3"
00011E5A <phrasebook.include.ab3@189> XINCLUDE "translation.include.ab3"
00011EBE <phrasebook.include.ab3@190> XINCLUDE "translation.include.ab3"
00011EC4 <phrasebook.include.ab3@191> XINCLUDE "translation.include.ab3"
00011EF8 <phrasebook.include.ab3@192> XINCLUDE "translation.include.ab3"
00011FC6 <phrasebook.include.ab3@196> XINCLUDE "translation.include.ab3"
00012094 <phrasebook.include.ab3@197> XINCLUDE "translation.include.ab3"
000120BE <phrasebook.include.ab3@199> XINCLUDE "translation.include.ab3"
000120DC <phrasebook.include.ab3@200> XINCLUDE "translation.include.ab3"
0001210A <phrasebook.include.ab3@204> XINCLUDE "translation.include.ab3"
00012146 <phrasebook.include.ab3@205> XINCLUDE "translation.include.ab3"
000121B6 <phrasebook.include.ab3@206> XINCLUDE "translation.include.ab3"
000121BE <phrasebook.include.ab3@207> XINCLUDE "translation.include.ab3"
00012210 <phrasebook.include.ab3@208> XINCLUDE "translation.include.ab3"
00012238 <phrasebook.include.ab3@209> XINCLUDE "translation.include.ab3"
00012250 <phrasebook.include.ab3@210> XINCLUDE "translation.include.ab3"
00012304 <phrasebook.include.ab3@211> XINCLUDE "translation.include.ab3"
00012312 <phrasebook.include.ab3@212> XINCLUDE "translation.include.ab3"
00012368 <phrasebook.include.ab3@213> XINCLUDE "translation.include.ab3"
000123C6 <phrasebook.include.ab3@214> XINCLUDE "translation.include.ab3"
000123CC <phrasebook.include.ab3@215> XINCLUDE "translation.include.ab3"
00012450 <phrasebook.include.ab3@216> XINCLUDE "translation.include.ab3"
000124D4 <phrasebook.include.ab3@217> XINCLUDE "translation.include.ab3"
00012558 <phrasebook.include.ab3@218> XINCLUDE "translation.include.ab3"
000125D6 <phrasebook.include.ab3@219> XINCLUDE "translation.include.ab3"
00012654 <phrasebook.include.ab3@220> XINCLUDE "translation.include.ab3"
000126D2 <phrasebook.include.ab3@221> XINCLUDE "translation.include.ab3"
00012750 <phrasebook.include.ab3@222> XINCLUDE "translation.include.ab3"
000127CE <phrasebook.include.ab3@223> XINCLUDE "translation.include.ab3"
0001284C <phrasebook.include.ab3@224> XINCLUDE "translation.include.ab3"
000128CA <phrasebook.include.ab3@225> XINCLUDE "translation.include.ab3"
000128F4 <phrasebook.include.ab3@226> XINCLUDE "translation.include.ab3"
00012912 <phrasebook.include.ab3@227> XINCLUDE "translation.include.ab3"
00012940 <phrasebook.include.ab3@245> XINCLUDE "translation.include.ab3"
00012984 <phrasebook.include.ab3@246> XINCLUDE "translation.include.ab3"
0001298A <phrasebook.include.ab3@247> XINCLUDE "translation.include.ab3"
000129A4 <phrasebook.include.ab3@248> XINCLUDE "translation.include.ab3"
000129C0 <phrasebook.include.ab3@249> XINCLUDE "translation.include.ab3"
000129F4 <phrasebook.include.ab3@250> XINCLUDE "translation.include.ab3"
00012A18 <phrasebook.include.ab3@251> XINCLUDE "translation.include.ab3"
00012A40 <phrasebook.include.ab3@252> XINCLUDE "translation.include.ab3"
00012AAC <phrasebook.include.ab3@253> XINCLUDE "translation.include.ab3"
00012B0A <phrasebook.include.ab3@256> XINCLUDE "translation.include.ab3"
00012B68 <phrasebook.include.ab3@257> XINCLUDE "translation.include.ab3"
00012BB4 <phrasebook.include.ab3@258> XINCLUDE "translation.include.ab3"
00012C0E <phrasebook.include.ab3@259> XINCLUDE "translation.include.ab3"
00012C14 <phrasebook.include.ab3@260> XINCLUDE "translation.include.ab3"
00012C1A <phrasebook.include.ab3@262> XINCLUDE "translation.include.ab3"
00012C24 <phrasebook.include.ab3@263> XINCLUDE "translation.include.ab3"
00012C2E <phrasebook.include.ab3@264> XINCLUDE "translation.include.ab3"
00012C48 <phrasebook.include.ab3@265> XINCLUDE "translation.include.ab3"
00012C76 <phrasebook.include.ab3@282> XINCLUDE "translation.include.ab3"
00012C7C <phrasebook.include.ab3@283> XINCLUDE "translation.include.ab3"
00012CC0 <phrasebook.include.ab3@284> XINCLUDE "translation.include.ab3"
00012CDA <phrasebook.include.ab3@285> XINCLUDE "translation.include.ab3"
00012CEA <phrasebook.include.ab3@286> XINCLUDE "translation.include.ab3"
00012CF4 <phrasebook.include.ab3@287> XINCLUDE "translation.include.ab3"
00012D00 <phrasebook.include.ab3@288> XINCLUDE "translation.include.ab3"
00012D0A <phrasebook.include.ab3@289> XINCLUDE "translation.include.ab3"
00012D2E <phrasebook.include.ab3@292> XINCLUDE "translation.include.ab3"
00012D76 <phrasebook.include.ab3@293> XINCLUDE "translation.include.ab3"
00012DBE <phrasebook.include.ab3@294> XINCLUDE "translation.include.ab3"
00012E06 <phrasebook.include.ab3@295> XINCLUDE "translation.include.ab3"
00012E1C <phrasebook.include.ab3@296> XINCLUDE "translation.include.ab3"
00012E30 <phrasebook.include.ab3@297> XINCLUDE "translation.include.ab3"
00012E3A <phrasebook.include.ab3@299> XINCLUDE "translation.include.ab3"
00012E44 <phrasebook.include.ab3@300> XINCLUDE "translation.include.ab3"
00012E5E <phrasebook.include.ab3@301> XINCLUDE "translation.include.ab3"
00012E88 <phrasebook.include.ab3@317> XINCLUDE "translation.include.ab3"
00012ECC <phrasebook.include.ab3@318> XINCLUDE "translation.include.ab3"
00012EE6 <phrasebook.include.ab3@319> XINCLUDE "translation.include.ab3"
00012F44 <phrasebook.include.ab3@320> XINCLUDE "translation.include.ab3"
00012F5E <phrasebook.include.ab3@321> XINCLUDE "translation.include.ab3"
00012F76 <phrasebook.include.ab3@323> XINCLUDE "translation.include.ab3"
00012F80 <phrasebook.include.ab3@324> XINCLUDE "translation.include.ab3"
00012F9C <phrasebook.include.ab3@325> XINCLUDE "translation.include.ab3"
00012FAA <phrasebook.include.ab3@326> XINCLUDE "translation.include.ab3"
00012FB6 <phrasebook.include.ab3@327> XINCLUDE "translation.include.ab3"
00013002 <phrasebook.include.ab3@328> XINCLUDE "translation.include.ab3"
00013054 <phrasebook.include.ab3@329> XINCLUDE "translation.include.ab3"
000130A6 <phrasebook.include.ab3@330> XINCLUDE "translation.include.ab3"
000130BA <phrasebook.include.ab3@331> XINCLUDE "translation.include.ab3"
000130CA <phrasebook.include.ab3@332> XINCLUDE "translation.include.ab3"
000130D0 <phrasebook.include.ab3@333> XINCLUDE "translation.include.ab3"
000130D2 <phrasebook.include.ab3@335> XINCLUDE "translation.include.ab3"
000130D8 <phrasebook.include.ab3@336> XINCLUDE "translation.include.ab3"
000130E2 <phrasebook.include.ab3@338> XINCLUDE "translation.include.ab3"
000130EC <phrasebook.include.ab3@339> XINCLUDE "translation.include.ab3"
00013106 <phrasebook.include.ab3@340> XINCLUDE "translation.include.ab3"
00013130 <phrasebook.include.ab3@379> XINCLUDE "translation.include.ab3"
00013146 <phrasebook.include.ab3@380> XINCLUDE "translation.include.ab3"
00013150 <phrasebook.include.ab3@381> XINCLUDE "translation.include.ab3"
000131C8 <phrasebook.include.ab3@382> XINCLUDE "translation.include.ab3"
00013204 <phrasebook.include.ab3@383> XINCLUDE "translation.include.ab3"
00013214 <phrasebook.include.ab3@384> XINCLUDE "translation.include.ab3"
00013234 <phrasebook.include.ab3@385> XINCLUDE "translation.include.ab3"
00013254 <phrasebook.include.ab3@386> XINCLUDE "translation.include.ab3"
00013274 <phrasebook.include.ab3@387> XINCLUDE "translation.include.ab3"
000132AA <phrasebook.include.ab3@388> XINCLUDE "translation.include.ab3"
000132D2 <phrasebook.include.ab3@389> XINCLUDE "translation.include.ab3"
0001330A <phrasebook.include.ab3@390> XINCLUDE "translation.include.ab3"
0001336E <phrasebook.include.ab3@391> XINCLUDE "translation.include.ab3"
0001338E <phrasebook.include.ab3@392> XINCLUDE "translation.include.ab3"
0001340A <phrasebook.include.ab3@393> XINCLUDE "translation.include.ab3"
00013442 <phrasebook.include.ab3@396> XINCLUDE "translation.include.ab3"
000134B8 <phrasebook.include.ab3@397> XINCLUDE "translation.include.ab3"
000134D8 <phrasebook.include.ab3@398> XINCLUDE "translation.include.ab3"
00013554 <phrasebook.include.ab3@399> XINCLUDE "translation.include.ab3"
0001358C <phrasebook.include.ab3@402> XINCLUDE "translation.include.ab3"
00013602 <phrasebook.include.ab3@403> XINCLUDE "translation.include.ab3"
00013622 <phrasebook.include.ab3@404> XINCLUDE "translation.include.ab3"
0001369E <phrasebook.include.ab3@405> XINCLUDE "translation.include.ab3"
000136CA <phrasebook.include.ab3@408> XINCLUDE "translation.include.ab3"
000136D2 <phrasebook.include.ab3@409> XINCLUDE "translation.include.ab3"
00013718 <phrasebook.include.ab3@410> XINCLUDE "translation.include.ab3"
00013738 <phrasebook.include.ab3@411> XINCLUDE "translation.include.ab3"
00013742 <phrasebook.include.ab3@412> XINCLUDE "translation.include.ab3"
0001375A <phrasebook.include.ab3@413> XINCLUDE "translation.include.ab3"
0001376A <phrasebook.include.ab3@414> XINCLUDE "translation.include.ab3"
000137A2 <phrasebook.include.ab3@415> XINCLUDE "translation.include.ab3"
000137D4 <phrasebook.include.ab3@416> XINCLUDE "translation.include.ab3"
000137E6 <phrasebook.include.ab3@419> XINCLUDE "translation.include.ab3"
00013868 <phrasebook.include.ab3@420> XINCLUDE "translation.include.ab3"
00013872 <phrasebook.include.ab3@421> XINCLUDE "translation.include.ab3"
000138A4 <phrasebook.include.ab3@422> XINCLUDE "translation.include.ab3"
000138D6 <phrasebook.include.ab3@423> XINCLUDE "translation.include.ab3"
00013902 <phrasebook.include.ab3@428> XINCLUDE "translation.include.ab3"
0001392E <phrasebook.include.ab3@429> XINCLUDE "translation.include.ab3"
00013950 <phrasebook.include.ab3@430> XINCLUDE "translation.include.ab3"
0001395A <phrasebook.include.ab3@432> XINCLUDE "translation.include.ab3"
00013974 <phrasebook.include.ab3@433> XINCLUDE "translation.include.ab3"
00013974 <translation.include.ab3@31> XINCLUDE "translation.include.ab3"
0001398A <translation.include.ab3@43> XINCLUDE "translation.include.ab3"
000139A6 <translation.include.ab3@44> XINCLUDE "translation.include.ab3"
000139A8 <translation.include.ab3@45> XINCLUDE "translation.include.ab3"
000139D6 <translation.include.ab3@46> XINCLUDE "translation.include.ab3"
000139D6 <AmiBlitz3.ab3@91> XINCLUDE "translation.include.ab3"
000139D6 <ted.include.ab3@1> XINCLUDE "/Shared/ted.include.ab3"
000139F0 <ted.include.ab3@161> XINCLUDE "/Shared/ted.include.ab3"
000139FA <ted.include.ab3@162> XINCLUDE "/Shared/ted.include.ab3"
00013A1C <ted.include.ab3@163> XINCLUDE "/Shared/ted.include.ab3"
00013A34 <ted.include.ab3@164> XINCLUDE "/Shared/ted.include.ab3"
00013A4E <ted.include.ab3@166> XINCLUDE "/Shared/ted.include.ab3"
00013A80 <ted.include.ab3@167> XINCLUDE "/Shared/ted.include.ab3"
00013A8A <ted.include.ab3@168> XINCLUDE "/Shared/ted.include.ab3"
00013A90 <ted.include.ab3@170> XINCLUDE "/Shared/ted.include.ab3"
00013AA2 <ted.include.ab3@171> XINCLUDE "/Shared/ted.include.ab3"
00013B16 <ted.include.ab3@172> XINCLUDE "/Shared/ted.include.ab3"
00013B1C <ted.include.ab3@173> XINCLUDE "/Shared/ted.include.ab3"
00013B56 <ted.include.ab3@174> XINCLUDE "/Shared/ted.include.ab3"
00013B60 <ted.include.ab3@177> XINCLUDE "/Shared/ted.include.ab3"
00013B66 <ted.include.ab3@178> XINCLUDE "/Shared/ted.include.ab3"
00013B7C <ted.include.ab3@180> XINCLUDE "/Shared/ted.include.ab3"
00013B86 <ted.include.ab3@181> XINCLUDE "/Shared/ted.include.ab3"
00013B9E <ted.include.ab3@183> XINCLUDE "/Shared/ted.include.ab3"
00013BA0 <ted.include.ab3@185> XINCLUDE "/Shared/ted.include.ab3"
00013BCE <ted.include.ab3@186> XINCLUDE "/Shared/ted.include.ab3"
00013BE8 <ted.include.ab3@190> XINCLUDE "/Shared/ted.include.ab3"
00013BFE <ted.include.ab3@191> XINCLUDE "/Shared/ted.include.ab3"
00013C32 <ted.include.ab3@192> XINCLUDE "/Shared/ted.include.ab3"
00013C36 <ted.include.ab3@194> XINCLUDE "/Shared/ted.include.ab3"
00013C50 <ted.include.ab3@196> XINCLUDE "/Shared/ted.include.ab3"
00013C66 <ted.include.ab3@197> XINCLUDE "/Shared/ted.include.ab3"
00013C9A <ted.include.ab3@198> XINCLUDE "/Shared/ted.include.ab3"
00013C9E <ted.include.ab3@200> XINCLUDE "/Shared/ted.include.ab3"
00013CB8 <ted.include.ab3@216> XINCLUDE "/Shared/ted.include.ab3"
00013CCE <ted.include.ab3@217> XINCLUDE "/Shared/ted.include.ab3"
00013D02 <ted.include.ab3@218> XINCLUDE "/Shared/ted.include.ab3"
00013D06 <ted.include.ab3@220> XINCLUDE "/Shared/ted.include.ab3"
00013D20 <ted.include.ab3@236> XINCLUDE "/Shared/ted.include.ab3"
00013D36 <ted.include.ab3@237> XINCLUDE "/Shared/ted.include.ab3"
00013D6A <ted.include.ab3@238> XINCLUDE "/Shared/ted.include.ab3"
00013D6E <ted.include.ab3@240> XINCLUDE "/Shared/ted.include.ab3"
00013D88 <ted.include.ab3@242> XINCLUDE "/Shared/ted.include.ab3"
00013D9E <ted.include.ab3@243> XINCLUDE "/Shared/ted.include.ab3"
00013DD2 <ted.include.ab3@244> XINCLUDE "/Shared/ted.include.ab3"
00013DD6 <ted.include.ab3@246> XINCLUDE "/Shared/ted.include.ab3"
00013DD6 <AmiBlitz3.ab3@92> XINCLUDE "/Shared/ted.include.ab3"
00013DD6 <CLIModeSupport.ab3@1> XINCLUDE "CLIModeSupport.ab3"
00013DEC <CLIModeSupport.ab3@4> XINCLUDE "CLIModeSupport.ab3"
00013E02 <CLIModeSupport.ab3@7> XINCLUDE "CLIModeSupport.ab3"
00013E10 <CLIModeSupport.ab3@8> XINCLUDE "CLIModeSupport.ab3"
00013E1E <CLIModeSupport.ab3@9> XINCLUDE "CLIModeSupport.ab3"
00013E28 <CLIModeSupport.ab3@11> XINCLUDE "CLIModeSupport.ab3"
00013E3A <CLIModeSupport.ab3@12> XINCLUDE "CLIModeSupport.ab3"
00013E4C <CLIModeSupport.ab3@13> XINCLUDE "CLIModeSupport.ab3"
00013E52 <CLIModeSupport.ab3@14> XINCLUDE "CLIModeSupport.ab3"
00013E8C <CLIModeSupport.ab3@15> XINCLUDE "CLIModeSupport.ab3"
00013E90 <CLIModeSupport.ab3@18> XINCLUDE "CLIModeSupport.ab3"
00013EA6 <CLIModeSupport.ab3@21> XINCLUDE "CLIModeSupport.ab3"
00013EBC <CLIModeSupport.ab3@23> XINCLUDE "CLIModeSupport.ab3"
00013EC8 <CLIModeSupport.ab3@24> XINCLUDE "CLIModeSupport.ab3"
00013ED4 <CLIModeSupport.ab3@25> XINCLUDE "CLIModeSupport.ab3"
00013EDC <CLIModeSupport.ab3@26> XINCLUDE "CLIModeSupport.ab3"
00013EE4 <CLIModeSupport.ab3@27> XINCLUDE "CLIModeSupport.ab3"
00013EE8 <CLIModeSupport.ab3@28> XINCLUDE "CLIModeSupport.ab3"
00013F12 <CLIModeSupport.ab3@47> XINCLUDE "CLIModeSupport.ab3"
00013F3E <CLIModeSupport.ab3@49> XINCLUDE "CLIModeSupport.ab3"
00013F50 <CLIModeSupport.ab3@50> XINCLUDE "CLIModeSupport.ab3"
00013F68 <CLIModeSupport.ab3@52> XINCLUDE "CLIModeSupport.ab3"
00013F7E <CLIModeSupport.ab3@56> XINCLUDE "CLIModeSupport.ab3"
00013F84 <CLIModeSupport.ab3@58> XINCLUDE "CLIModeSupport.ab3"
00013FBA <CLIModeSupport.ab3@61> XINCLUDE "CLIModeSupport.ab3"
00013FF2 <CLIModeSupport.ab3@62> XINCLUDE "CLIModeSupport.ab3"
0001402A <CLIModeSupport.ab3@63> XINCLUDE "CLIModeSupport.ab3"
00014062 <CLIModeSupport.ab3@64> XINCLUDE "CLIModeSupport.ab3"
0001409A <CLIModeSupport.ab3@65> XINCLUDE "CLIModeSupport.ab3"
000140D2 <CLIModeSupport.ab3@66> XINCLUDE "CLIModeSupport.ab3"
0001410A <CLIModeSupport.ab3@67> XINCLUDE "CLIModeSupport.ab3"
00014142 <CLIModeSupport.ab3@68> XINCLUDE "CLIModeSupport.ab3"
0001417A <CLIModeSupport.ab3@69> XINCLUDE "CLIModeSupport.ab3"
000141B2 <CLIModeSupport.ab3@70> XINCLUDE "CLIModeSupport.ab3"
000141EA <CLIModeSupport.ab3@71> XINCLUDE "CLIModeSupport.ab3"
00014222 <CLIModeSupport.ab3@72> XINCLUDE "CLIModeSupport.ab3"
0001425A <CLIModeSupport.ab3@73> XINCLUDE "CLIModeSupport.ab3"
0001428E <CLIModeSupport.ab3@74> XINCLUDE "CLIModeSupport.ab3"
00014298 <CLIModeSupport.ab3@75> XINCLUDE "CLIModeSupport.ab3"
000142A2 <CLIModeSupport.ab3@77> XINCLUDE "CLIModeSupport.ab3"
000142AC <CLIModeSupport.ab3@78> XINCLUDE "CLIModeSupport.ab3"
000142D6 <CLIModeSupport.ab3@82> XINCLUDE "CLIModeSupport.ab3"
000142E0 <CLIModeSupport.ab3@83> XINCLUDE "CLIModeSupport.ab3"
000142E4 <CLIModeSupport.ab3@84> XINCLUDE "CLIModeSupport.ab3"
00014318 <CLIModeSupport.ab3@85> XINCLUDE "CLIModeSupport.ab3"
00014336 <CLIModeSupport.ab3@88> XINCLUDE "CLIModeSupport.ab3"
00014340 <CLIModeSupport.ab3@89> XINCLUDE "CLIModeSupport.ab3"
0001434C <CLIModeSupport.ab3@90> XINCLUDE "CLIModeSupport.ab3"
00014352 <CLIModeSupport.ab3@91> XINCLUDE "CLIModeSupport.ab3"
0001435E <CLIModeSupport.ab3@92> XINCLUDE "CLIModeSupport.ab3"
00014364 <CLIModeSupport.ab3@93> XINCLUDE "CLIModeSupport.ab3"
00014370 <CLIModeSupport.ab3@94> XINCLUDE "CLIModeSupport.ab3"
00014376 <CLIModeSupport.ab3@95> XINCLUDE "CLIModeSupport.ab3"
0001437C <CLIModeSupport.ab3@98> XINCLUDE "CLIModeSupport.ab3"
000143B6 <CLIModeSupport.ab3@99> XINCLUDE "CLIModeSupport.ab3"
000143BC <CLIModeSupport.ab3@100> XINCLUDE "CLIModeSupport.ab3"
000143D2 <CLIModeSupport.ab3@103> XINCLUDE "CLIModeSupport.ab3"
000143DC <CLIModeSupport.ab3@105> XINCLUDE "CLIModeSupport.ab3"
000143E2 <CLIModeSupport.ab3@106> XINCLUDE "CLIModeSupport.ab3"
000143E8 <CLIModeSupport.ab3@108> XINCLUDE "CLIModeSupport.ab3"
000143E9 <CLIModeSupport.ab3@110> XINCLUDE "CLIModeSupport.ab3"
000143EA <CLIModeSupport.ab3@111> XINCLUDE "CLIModeSupport.ab3"
000143EB <CLIModeSupport.ab3@112> XINCLUDE "CLIModeSupport.ab3"
000143EC <CLIModeSupport.ab3@113> XINCLUDE "CLIModeSupport.ab3"
000143EE <CLIModeSupport.ab3@118> XINCLUDE "CLIModeSupport.ab3"
000143F0 <CLIModeSupport.ab3@119> XINCLUDE "CLIModeSupport.ab3"
000143F2 <CLIModeSupport.ab3@122> XINCLUDE "CLIModeSupport.ab3"
000143F4 <CLIModeSupport.ab3@123> XINCLUDE "CLIModeSupport.ab3"
000143F8 <CLIModeSupport.ab3@124> XINCLUDE "CLIModeSupport.ab3"
000143FA <CLIModeSupport.ab3@126> XINCLUDE "CLIModeSupport.ab3"
000143FC <CLIModeSupport.ab3@127> XINCLUDE "CLIModeSupport.ab3"
00014400 <CLIModeSupport.ab3@128> XINCLUDE "CLIModeSupport.ab3"
00014402 <CLIModeSupport.ab3@129> XINCLUDE "CLIModeSupport.ab3"
00014404 <CLIModeSupport.ab3@156> XINCLUDE "CLIModeSupport.ab3"
00014406 <CLIModeSupport.ab3@157> XINCLUDE "CLIModeSupport.ab3"
00014408 <CLIModeSupport.ab3@158> XINCLUDE "CLIModeSupport.ab3"
0001440A <CLIModeSupport.ab3@159> XINCLUDE "CLIModeSupport.ab3"
0001440C <CLIModeSupport.ab3@163> XINCLUDE "CLIModeSupport.ab3"
00014410 <CLIModeSupport.ab3@164> XINCLUDE "CLIModeSupport.ab3"
00014416 <CLIModeSupport.ab3@172> XINCLUDE "CLIModeSupport.ab3"
0001441A <CLIModeSupport.ab3@173> XINCLUDE "CLIModeSupport.ab3"
0001441C <CLIModeSupport.ab3@176> XINCLUDE "CLIModeSupport.ab3"
00014420 <CLIModeSupport.ab3@177> XINCLUDE "CLIModeSupport.ab3"
00014422 <CLIModeSupport.ab3@178> XINCLUDE "CLIModeSupport.ab3"
00014424 <CLIModeSupport.ab3@179> XINCLUDE "CLIModeSupport.ab3"
00014426 <CLIModeSupport.ab3@180> XINCLUDE "CLIModeSupport.ab3"
00014428 <CLIModeSupport.ab3@181> XINCLUDE "CLIModeSupport.ab3"
0001442A <CLIModeSupport.ab3@184> XINCLUDE "CLIModeSupport.ab3"
0001442C <CLIModeSupport.ab3@186> XINCLUDE "CLIModeSupport.ab3"
00014432 <CLIModeSupport.ab3@187> XINCLUDE "CLIModeSupport.ab3"
00014438 <CLIModeSupport.ab3@192> XINCLUDE "CLIModeSupport.ab3"
0001443A <CLIModeSupport.ab3@196> XINCLUDE "CLIModeSupport.ab3"
0001443E <CLIModeSupport.ab3@198> XINCLUDE "CLIModeSupport.ab3"
00014442 <CLIModeSupport.ab3@199> XINCLUDE "CLIModeSupport.ab3"
00014448 <CLIModeSupport.ab3@200> XINCLUDE "CLIModeSupport.ab3"
0001444E <CLIModeSupport.ab3@203> XINCLUDE "CLIModeSupport.ab3"
00014452 <CLIModeSupport.ab3@204> XINCLUDE "CLIModeSupport.ab3"
00014456 <CLIModeSupport.ab3@206> XINCLUDE "CLIModeSupport.ab3"
0001445C <CLIModeSupport.ab3@209> XINCLUDE "CLIModeSupport.ab3"
00014460 <CLIModeSupport.ab3@210> XINCLUDE "CLIModeSupport.ab3"
00014466 <CLIModeSupport.ab3@213> XINCLUDE "CLIModeSupport.ab3"
0001446C <CLIModeSupport.ab3@216> XINCLUDE "CLIModeSupport.ab3"
00014470 <CLIModeSupport.ab3@217> XINCLUDE "CLIModeSupport.ab3"
00014476 <CLIModeSupport.ab3@220> XINCLUDE "CLIModeSupport.ab3"
0001447A <CLIModeSupport.ab3@221> XINCLUDE "CLIModeSupport.ab3"
00014480 <CLIModeSupport.ab3@222> XINCLUDE "CLIModeSupport.ab3"
00014484 <CLIModeSupport.ab3@223> XINCLUDE "CLIModeSupport.ab3"
00014488 <CLIModeSupport.ab3@228> XINCLUDE "CLIModeSupport.ab3"
0001448C <CLIModeSupport.ab3@229> XINCLUDE "CLIModeSupport.ab3"
00014490 <CLIModeSupport.ab3@230> XINCLUDE "CLIModeSupport.ab3"
00014494 <CLIModeSupport.ab3@231> XINCLUDE "CLIModeSupport.ab3"
00014498 <CLIModeSupport.ab3@232> XINCLUDE "CLIModeSupport.ab3"
0001449C <CLIModeSupport.ab3@236> XINCLUDE "CLIModeSupport.ab3"
000144A0 <CLIModeSupport.ab3@237> XINCLUDE "CLIModeSupport.ab3"
000144A4 <CLIModeSupport.ab3@238> XINCLUDE "CLIModeSupport.ab3"
000144A8 <CLIModeSupport.ab3@239> XINCLUDE "CLIModeSupport.ab3"
000144AC <CLIModeSupport.ab3@240> XINCLUDE "CLIModeSupport.ab3"
000144B0 <CLIModeSupport.ab3@241> XINCLUDE "CLIModeSupport.ab3"
000144B6 <CLIModeSupport.ab3@242> XINCLUDE "CLIModeSupport.ab3"
000144BA <CLIModeSupport.ab3@243> XINCLUDE "CLIModeSupport.ab3"
000144C0 <CLIModeSupport.ab3@246> XINCLUDE "CLIModeSupport.ab3"
000144C2 <CLIModeSupport.ab3@247> XINCLUDE "CLIModeSupport.ab3"
000144C6 <CLIModeSupport.ab3@248> XINCLUDE "CLIModeSupport.ab3"
000144CA <CLIModeSupport.ab3@249> XINCLUDE "CLIModeSupport.ab3"
000144CE <CLIModeSupport.ab3@253> XINCLUDE "CLIModeSupport.ab3"
000144D2 <CLIModeSupport.ab3@254> XINCLUDE "CLIModeSupport.ab3"
000144D6 <CLIModeSupport.ab3@255> XINCLUDE "CLIModeSupport.ab3"
000144DA <CLIModeSupport.ab3@256> XINCLUDE "CLIModeSupport.ab3"
000144DE <CLIModeSupport.ab3@258> XINCLUDE "CLIModeSupport.ab3"
000144E2 <CLIModeSupport.ab3@259> XINCLUDE "CLIModeSupport.ab3"
000144E8 <CLIModeSupport.ab3@262> XINCLUDE "CLIModeSupport.ab3"
000144EA <CLIModeSupport.ab3@263> XINCLUDE "CLIModeSupport.ab3"
000144EE <CLIModeSupport.ab3@264> XINCLUDE "CLIModeSupport.ab3"
000144F2 <CLIModeSupport.ab3@267> XINCLUDE "CLIModeSupport.ab3"
000144F6 <CLIModeSupport.ab3@268> XINCLUDE "CLIModeSupport.ab3"
000144FA <CLIModeSupport.ab3@269> XINCLUDE "CLIModeSupport.ab3"
000144FE <CLIModeSupport.ab3@272> XINCLUDE "CLIModeSupport.ab3"
00014502 <CLIModeSupport.ab3@273> XINCLUDE "CLIModeSupport.ab3"
00014506 <CLIModeSupport.ab3@275> XINCLUDE "CLIModeSupport.ab3"
0001450A <CLIModeSupport.ab3@276> XINCLUDE "CLIModeSupport.ab3"
0001450E <CLIModeSupport.ab3@277> XINCLUDE "CLIModeSupport.ab3"
00014512 <CLIModeSupport.ab3@278> XINCLUDE "CLIModeSupport.ab3"
00014516 <CLIModeSupport.ab3@279> XINCLUDE "CLIModeSupport.ab3"
0001451A <CLIModeSupport.ab3@280> XINCLUDE "CLIModeSupport.ab3"
0001451E <CLIModeSupport.ab3@281> XINCLUDE "CLIModeSupport.ab3"
00014522 <CLIModeSupport.ab3@282> XINCLUDE "CLIModeSupport.ab3"
00014526 <CLIModeSupport.ab3@283> XINCLUDE "CLIModeSupport.ab3"
0001452A <CLIModeSupport.ab3@284> XINCLUDE "CLIModeSupport.ab3"
0001452E <CLIModeSupport.ab3@285> XINCLUDE "CLIModeSupport.ab3"
00014532 <CLIModeSupport.ab3@286> XINCLUDE "CLIModeSupport.ab3"
00014538 <CLIModeSupport.ab3@289> XINCLUDE "CLIModeSupport.ab3"
0001453A <CLIModeSupport.ab3@290> XINCLUDE "CLIModeSupport.ab3"
0001453E <CLIModeSupport.ab3@292> XINCLUDE "CLIModeSupport.ab3"
00014542 <CLIModeSupport.ab3@293> XINCLUDE "CLIModeSupport.ab3"
00014548 <CLIModeSupport.ab3@294> XINCLUDE "CLIModeSupport.ab3"
0001454E <CLIModeSupport.ab3@297> XINCLUDE "CLIModeSupport.ab3"
00014552 <CLIModeSupport.ab3@298> XINCLUDE "CLIModeSupport.ab3"
00014556 <CLIModeSupport.ab3@300> XINCLUDE "CLIModeSupport.ab3"
0001455C <CLIModeSupport.ab3@303> XINCLUDE "CLIModeSupport.ab3"
00014560 <CLIModeSupport.ab3@304> XINCLUDE "CLIModeSupport.ab3"
00014566 <CLIModeSupport.ab3@305> XINCLUDE "CLIModeSupport.ab3"
0001456A <CLIModeSupport.ab3@306> XINCLUDE "CLIModeSupport.ab3"
0001456C <CLIModeSupport.ab3@310> XINCLUDE "CLIModeSupport.ab3"
00014572 <CLIModeSupport.ab3@311> XINCLUDE "CLIModeSupport.ab3"
00014574 <CLIModeSupport.ab3@314> XINCLUDE "CLIModeSupport.ab3"
00014576 <CLIModeSupport.ab3@315> XINCLUDE "CLIModeSupport.ab3"
00014578 <CLIModeSupport.ab3@316> XINCLUDE "CLIModeSupport.ab3"
0001457A <CLIModeSupport.ab3@319> XINCLUDE "CLIModeSupport.ab3"
0001457E <CLIModeSupport.ab3@320> XINCLUDE "CLIModeSupport.ab3"
00014580 <CLIModeSupport.ab3@321> XINCLUDE "CLIModeSupport.ab3"
00014584 <CLIModeSupport.ab3@322> XINCLUDE "CLIModeSupport.ab3"
00014588 <CLIModeSupport.ab3@323> XINCLUDE "CLIModeSupport.ab3"
0001458C <CLIModeSupport.ab3@324> XINCLUDE "CLIModeSupport.ab3"
0001458E <CLIModeSupport.ab3@325> XINCLUDE "CLIModeSupport.ab3"
00014592 <CLIModeSupport.ab3@326> XINCLUDE "CLIModeSupport.ab3"
00014594 <CLIModeSupport.ab3@330> XINCLUDE "CLIModeSupport.ab3"
00014596 <CLIModeSupport.ab3@331> XINCLUDE "CLIModeSupport.ab3"
0001459A <CLIModeSupport.ab3@332> XINCLUDE "CLIModeSupport.ab3"
0001459C <CLIModeSupport.ab3@333> XINCLUDE "CLIModeSupport.ab3"
000145A0 <CLIModeSupport.ab3@334> XINCLUDE "CLIModeSupport.ab3"
000145A2 <CLIModeSupport.ab3@338> XINCLUDE "CLIModeSupport.ab3"
000145A6 <CLIModeSupport.ab3@339> XINCLUDE "CLIModeSupport.ab3"
000145AC <CLIModeSupport.ab3@342> XINCLUDE "CLIModeSupport.ab3"
000145AE <CLIModeSupport.ab3@343> XINCLUDE "CLIModeSupport.ab3"
000145B2 <CLIModeSupport.ab3@345> XINCLUDE "CLIModeSupport.ab3"
000145B6 <CLIModeSupport.ab3@346> XINCLUDE "CLIModeSupport.ab3"
000145BC <CLIModeSupport.ab3@347> XINCLUDE "CLIModeSupport.ab3"
000145C2 <CLIModeSupport.ab3@350> XINCLUDE "CLIModeSupport.ab3"
000145C6 <CLIModeSupport.ab3@351> XINCLUDE "CLIModeSupport.ab3"
000145CA <CLIModeSupport.ab3@353> XINCLUDE "CLIModeSupport.ab3"
000145D0 <CLIModeSupport.ab3@356> XINCLUDE "CLIModeSupport.ab3"
000145D4 <CLIModeSupport.ab3@357> XINCLUDE "CLIModeSupport.ab3"
000145DA <CLIModeSupport.ab3@358> XINCLUDE "CLIModeSupport.ab3"
000145DE <CLIModeSupport.ab3@359> XINCLUDE "CLIModeSupport.ab3"
000145E2 <CLIModeSupport.ab3@360> XINCLUDE "CLIModeSupport.ab3"
000145E4 <CLIModeSupport.ab3@363> XINCLUDE "CLIModeSupport.ab3"
000145E8 <CLIModeSupport.ab3@364> XINCLUDE "CLIModeSupport.ab3"
000145EE <CLIModeSupport.ab3@365> XINCLUDE "CLIModeSupport.ab3"
000145F2 <CLIModeSupport.ab3@366> XINCLUDE "CLIModeSupport.ab3"
000145F6 <CLIModeSupport.ab3@368> XINCLUDE "CLIModeSupport.ab3"
000145FA <CLIModeSupport.ab3@369> XINCLUDE "CLIModeSupport.ab3"
000145FE <CLIModeSupport.ab3@370> XINCLUDE "CLIModeSupport.ab3"
00014602 <CLIModeSupport.ab3@371> XINCLUDE "CLIModeSupport.ab3"
00014606 <CLIModeSupport.ab3@372> XINCLUDE "CLIModeSupport.ab3"
0001460A <CLIModeSupport.ab3@376> XINCLUDE "CLIModeSupport.ab3"
0001460E <CLIModeSupport.ab3@377> XINCLUDE "CLIModeSupport.ab3"
00014610 <CLIModeSupport.ab3@378> XINCLUDE "CLIModeSupport.ab3"
00014612 <CLIModeSupport.ab3@379> XINCLUDE "CLIModeSupport.ab3"
00014614 <CLIModeSupport.ab3@382> XINCLUDE "CLIModeSupport.ab3"
00014618 <CLIModeSupport.ab3@383> XINCLUDE "CLIModeSupport.ab3"
0001461A <CLIModeSupport.ab3@384> XINCLUDE "CLIModeSupport.ab3"
0001461C <CLIModeSupport.ab3@385> XINCLUDE "CLIModeSupport.ab3"
0001461E <CLIModeSupport.ab3@386> XINCLUDE "CLIModeSupport.ab3"
00014620 <CLIModeSupport.ab3@387> XINCLUDE "CLIModeSupport.ab3"
00014622 <CLIModeSupport.ab3@388> XINCLUDE "CLIModeSupport.ab3"
00014626 <CLIModeSupport.ab3@389> XINCLUDE "CLIModeSupport.ab3"
00014628 <CLIModeSupport.ab3@390> XINCLUDE "CLIModeSupport.ab3"
0001462C <CLIModeSupport.ab3@391> XINCLUDE "CLIModeSupport.ab3"
0001462E <CLIModeSupport.ab3@395> XINCLUDE "CLIModeSupport.ab3"
00014630 <CLIModeSupport.ab3@396> XINCLUDE "CLIModeSupport.ab3"
00014632 <CLIModeSupport.ab3@397> XINCLUDE "CLIModeSupport.ab3"
00014636 <CLIModeSupport.ab3@398> XINCLUDE "CLIModeSupport.ab3"
00014638 <CLIModeSupport.ab3@399> XINCLUDE "CLIModeSupport.ab3"
0001463A <CLIModeSupport.ab3@403> XINCLUDE "CLIModeSupport.ab3"
0001463C <CLIModeSupport.ab3@406> XINCLUDE "CLIModeSupport.ab3"
00014640 <CLIModeSupport.ab3@407> XINCLUDE "CLIModeSupport.ab3"
00014644 <CLIModeSupport.ab3@412> XINCLUDE "CLIModeSupport.ab3"
00014648 <CLIModeSupport.ab3@413> XINCLUDE "CLIModeSupport.ab3"
0001464C <CLIModeSupport.ab3@414> XINCLUDE "CLIModeSupport.ab3"
00014650 <CLIModeSupport.ab3@415> XINCLUDE "CLIModeSupport.ab3"
00014654 <CLIModeSupport.ab3@416> XINCLUDE "CLIModeSupport.ab3"
00014658 <CLIModeSupport.ab3@417> XINCLUDE "CLIModeSupport.ab3"
0001465C <CLIModeSupport.ab3@418> XINCLUDE "CLIModeSupport.ab3"
00014660 <CLIModeSupport.ab3@419> XINCLUDE "CLIModeSupport.ab3"
00014662 <CLIModeSupport.ab3@422> XINCLUDE "CLIModeSupport.ab3"
00014664 <CLIModeSupport.ab3@425> XINCLUDE "CLIModeSupport.ab3"
00014666 <CLIModeSupport.ab3@429> XINCLUDE "CLIModeSupport.ab3"
0001466A <CLIModeSupport.ab3@430> XINCLUDE "CLIModeSupport.ab3"
0001466C <CLIModeSupport.ab3@431> XINCLUDE "CLIModeSupport.ab3"
0001466E <CLIModeSupport.ab3@432> XINCLUDE "CLIModeSupport.ab3"
00014684 <CLIModeSupport.ab3@437> XINCLUDE "CLIModeSupport.ab3"
0001468A <CLIModeSupport.ab3@438> XINCLUDE "CLIModeSupport.ab3"
000146C8 <CLIModeSupport.ab3@440> XINCLUDE "CLIModeSupport.ab3"
000146CC <CLIModeSupport.ab3@441> XINCLUDE "CLIModeSupport.ab3"
000146D6 <CLIModeSupport.ab3@442> XINCLUDE "CLIModeSupport.ab3"
000146D8 <CLIModeSupport.ab3@443> XINCLUDE "CLIModeSupport.ab3"
0001470C <CLIModeSupport.ab3@444> XINCLUDE "CLIModeSupport.ab3"
0001471C <CLIModeSupport.ab3@445> XINCLUDE "CLIModeSupport.ab3"
0001471E <CLIModeSupport.ab3@448> XINCLUDE "CLIModeSupport.ab3"
00014756 <CLIModeSupport.ab3@449> XINCLUDE "CLIModeSupport.ab3"
0001478E <CLIModeSupport.ab3@450> XINCLUDE "CLIModeSupport.ab3"
000147C6 <CLIModeSupport.ab3@451> XINCLUDE "CLIModeSupport.ab3"
000147D0 <CLIModeSupport.ab3@453> XINCLUDE "CLIModeSupport.ab3"
000147D6 <CLIModeSupport.ab3@454> XINCLUDE "CLIModeSupport.ab3"
000147EC <CLIModeSupport.ab3@458> XINCLUDE "CLIModeSupport.ab3"
0001482A <CLIModeSupport.ab3@459> XINCLUDE "CLIModeSupport.ab3"
0001482E <CLIModeSupport.ab3@460> XINCLUDE "CLIModeSupport.ab3"
00014836 <CLIModeSupport.ab3@461> XINCLUDE "CLIModeSupport.ab3"
00014874 <CLIModeSupport.ab3@462> XINCLUDE "CLIModeSupport.ab3"
00014876 <CLIModeSupport.ab3@463> XINCLUDE "CLIModeSupport.ab3"
0001487A <CLIModeSupport.ab3@464> XINCLUDE "CLIModeSupport.ab3"
000148B8 <CLIModeSupport.ab3@466> XINCLUDE "CLIModeSupport.ab3"
000148BC <CLIModeSupport.ab3@467> XINCLUDE "CLIModeSupport.ab3"
000148FA <CLIModeSupport.ab3@469> XINCLUDE "CLIModeSupport.ab3"
000148FE <CLIModeSupport.ab3@470> XINCLUDE "CLIModeSupport.ab3"
00014928 <CLIModeSupport.ab3@472> XINCLUDE "CLIModeSupport.ab3"
00014932 <CLIModeSupport.ab3@473> XINCLUDE "CLIModeSupport.ab3"
00014946 <CLIModeSupport.ab3@474> XINCLUDE "CLIModeSupport.ab3"
0001496C <CLIModeSupport.ab3@475> XINCLUDE "CLIModeSupport.ab3"
00014972 <CLIModeSupport.ab3@476> XINCLUDE "CLIModeSupport.ab3"
00014980 <CLIModeSupport.ab3@477> XINCLUDE "CLIModeSupport.ab3"
00014986 <CLIModeSupport.ab3@478> XINCLUDE "CLIModeSupport.ab3"
000149BE <CLIModeSupport.ab3@480> XINCLUDE "CLIModeSupport.ab3"
000149C2 <CLIModeSupport.ab3@483> XINCLUDE "CLIModeSupport.ab3"
000149EC <CLIModeSupport.ab3@486> XINCLUDE "CLIModeSupport.ab3"
000149F2 <CLIModeSupport.ab3@487> XINCLUDE "CLIModeSupport.ab3"
00014A12 <CLIModeSupport.ab3@488> XINCLUDE "CLIModeSupport.ab3"
00014A1C <CLIModeSupport.ab3@489> XINCLUDE "CLIModeSupport.ab3"
00014A20 <CLIModeSupport.ab3@490> XINCLUDE "CLIModeSupport.ab3"
00014A22 <CLIModeSupport.ab3@491> XINCLUDE "CLIModeSupport.ab3"
00014A40 <CLIModeSupport.ab3@492> XINCLUDE "CLIModeSupport.ab3"
00014A42 <CLIModeSupport.ab3@493> XINCLUDE "CLIModeSupport.ab3"
00014A48 <CLIModeSupport.ab3@494> XINCLUDE "CLIModeSupport.ab3"
00014A4E <CLIModeSupport.ab3@495> XINCLUDE "CLIModeSupport.ab3"
00014A78 <CLIModeSupport.ab3@497> XINCLUDE "CLIModeSupport.ab3"
00014A7A <CLIModeSupport.ab3@498> XINCLUDE "CLIModeSupport.ab3"
00014AA8 <CLIModeSupport.ab3@499> XINCLUDE "CLIModeSupport.ab3"
00014AAC <CLIModeSupport.ab3@500> XINCLUDE "CLIModeSupport.ab3"
00014ADA <CLIModeSupport.ab3@501> XINCLUDE "CLIModeSupport.ab3"
00014ADE <CLIModeSupport.ab3@502> XINCLUDE "CLIModeSupport.ab3"
00014B04 <CLIModeSupport.ab3@504> XINCLUDE "CLIModeSupport.ab3"
00014B14 <CLIModeSupport.ab3@505> XINCLUDE "CLIModeSupport.ab3"
00014B1A <CLIModeSupport.ab3@506> XINCLUDE "CLIModeSupport.ab3"
00014B20 <CLIModeSupport.ab3@507> XINCLUDE "CLIModeSupport.ab3"
00014B5A <CLIModeSupport.ab3@508> XINCLUDE "CLIModeSupport.ab3"
00014B64 <CLIModeSupport.ab3@510> XINCLUDE "CLIModeSupport.ab3"
00014B7E <CLIModeSupport.ab3@511> XINCLUDE "CLIModeSupport.ab3"
00014B9C <CLIModeSupport.ab3@523> XINCLUDE "CLIModeSupport.ab3"
00014BA4 <CLIModeSupport.ab3@524> XINCLUDE "CLIModeSupport.ab3"
00014BAA <CLIModeSupport.ab3@525> XINCLUDE "CLIModeSupport.ab3"
00014BB0 <CLIModeSupport.ab3@526> XINCLUDE "CLIModeSupport.ab3"
00014BD2 <CLIModeSupport.ab3@527> XINCLUDE "CLIModeSupport.ab3"
00014BEA <CLIModeSupport.ab3@529> XINCLUDE "CLIModeSupport.ab3"
00014C10 <CLIModeSupport.ab3@530> XINCLUDE "CLIModeSupport.ab3"
00014C3A <CLIModeSupport.ab3@531> XINCLUDE "CLIModeSupport.ab3"
00014C48 <CLIModeSupport.ab3@532> XINCLUDE "CLIModeSupport.ab3"
00014C4E <CLIModeSupport.ab3@533> XINCLUDE "CLIModeSupport.ab3"
00014C62 <CLIModeSupport.ab3@534> XINCLUDE "CLIModeSupport.ab3"
00014C7A <CLIModeSupport.ab3@536> XINCLUDE "CLIModeSupport.ab3"
00014C88 <CLIModeSupport.ab3@537> XINCLUDE "CLIModeSupport.ab3"
00014C9C <CLIModeSupport.ab3@538> XINCLUDE "CLIModeSupport.ab3"
00014CD2 <CLIModeSupport.ab3@539> XINCLUDE "CLIModeSupport.ab3"
00014CE0 <CLIModeSupport.ab3@540> XINCLUDE "CLIModeSupport.ab3"
00014D10 <CLIModeSupport.ab3@541> XINCLUDE "CLIModeSupport.ab3"
00014D1E <CLIModeSupport.ab3@542> XINCLUDE "CLIModeSupport.ab3"
00014D24 <CLIModeSupport.ab3@543> XINCLUDE "CLIModeSupport.ab3"
00014D32 <CLIModeSupport.ab3@544> XINCLUDE "CLIModeSupport.ab3"
00014D38 <CLIModeSupport.ab3@545> XINCLUDE "CLIModeSupport.ab3"
00014D3E <CLIModeSupport.ab3@547> XINCLUDE "CLIModeSupport.ab3"
00014D4C <CLIModeSupport.ab3@548> XINCLUDE "CLIModeSupport.ab3"
00014D4E <CLIModeSupport.ab3@549> XINCLUDE "CLIModeSupport.ab3"
00014D54 <CLIModeSupport.ab3@551> XINCLUDE "CLIModeSupport.ab3"
00014D6A <CLIModeSupport.ab3@553> XINCLUDE "CLIModeSupport.ab3"
00014D74 <CLIModeSupport.ab3@554> XINCLUDE "CLIModeSupport.ab3"
00014D7A <CLIModeSupport.ab3@555> XINCLUDE "CLIModeSupport.ab3"
00014DA4 <CLIModeSupport.ab3@559> XINCLUDE "CLIModeSupport.ab3"
00014DE2 <CLIModeSupport.ab3@562> XINCLUDE "CLIModeSupport.ab3"
00014DE6 <CLIModeSupport.ab3@563> XINCLUDE "CLIModeSupport.ab3"
00014E24 <CLIModeSupport.ab3@564> XINCLUDE "CLIModeSupport.ab3"
00014E28 <CLIModeSupport.ab3@565> XINCLUDE "CLIModeSupport.ab3"
00014E66 <CLIModeSupport.ab3@566> XINCLUDE "CLIModeSupport.ab3"
00014E6A <CLIModeSupport.ab3@567> XINCLUDE "CLIModeSupport.ab3"
00014E72 <CLIModeSupport.ab3@569> XINCLUDE "CLIModeSupport.ab3"
00014E7A <CLIModeSupport.ab3@570> XINCLUDE "CLIModeSupport.ab3"
00014EBE <CLIModeSupport.ab3@572> XINCLUDE "CLIModeSupport.ab3"
00014ED0 <CLIModeSupport.ab3@573> XINCLUDE "CLIModeSupport.ab3"
00014EDE <CLIModeSupport.ab3@574> XINCLUDE "CLIModeSupport.ab3"
00014F12 <CLIModeSupport.ab3@575> XINCLUDE "CLIModeSupport.ab3"
00014F36 <CLIModeSupport.ab3@577> XINCLUDE "CLIModeSupport.ab3"
00014F40 <CLIModeSupport.ab3@578> XINCLUDE "CLIModeSupport.ab3"
00014F5A <CLIModeSupport.ab3@579> XINCLUDE "CLIModeSupport.ab3"
00014F6E <CLIModeSupport.ab3@580> XINCLUDE "CLIModeSupport.ab3"
00014FC6 <CLIModeSupport.ab3@581> XINCLUDE "CLIModeSupport.ab3"
00015066 <CLIModeSupport.ab3@582> XINCLUDE "CLIModeSupport.ab3"
0001506E <CLIModeSupport.ab3@583> XINCLUDE "CLIModeSupport.ab3"
000150A6 <CLIModeSupport.ab3@584> XINCLUDE "CLIModeSupport.ab3"
000150AC <CLIModeSupport.ab3@585> XINCLUDE "CLIModeSupport.ab3"
000150BC <CLIModeSupport.ab3@586> XINCLUDE "CLIModeSupport.ab3"
000150E4 <CLIModeSupport.ab3@589> XINCLUDE "CLIModeSupport.ab3"
0001510C <CLIModeSupport.ab3@590> XINCLUDE "CLIModeSupport.ab3"
00015114 <CLIModeSupport.ab3@591> XINCLUDE "CLIModeSupport.ab3"
0001511A <CLIModeSupport.ab3@592> XINCLUDE "CLIModeSupport.ab3"
00015122 <CLIModeSupport.ab3@593> XINCLUDE "CLIModeSupport.ab3"
0001512A <CLIModeSupport.ab3@594> XINCLUDE "CLIModeSupport.ab3"
00015152 <CLIModeSupport.ab3@595> XINCLUDE "CLIModeSupport.ab3"
0001515A <CLIModeSupport.ab3@596> XINCLUDE "CLIModeSupport.ab3"
00015162 <CLIModeSupport.ab3@597> XINCLUDE "CLIModeSupport.ab3"
00015168 <CLIModeSupport.ab3@598> XINCLUDE "CLIModeSupport.ab3"
0001516E <CLIModeSupport.ab3@599> XINCLUDE "CLIModeSupport.ab3"
00015174 <CLIModeSupport.ab3@600> XINCLUDE "CLIModeSupport.ab3"
0001517A <CLIModeSupport.ab3@601> XINCLUDE "CLIModeSupport.ab3"
00015180 <CLIModeSupport.ab3@602> XINCLUDE "CLIModeSupport.ab3"
00015186 <CLIModeSupport.ab3@603> XINCLUDE "CLIModeSupport.ab3"
0001518C <CLIModeSupport.ab3@604> XINCLUDE "CLIModeSupport.ab3"
00015192 <CLIModeSupport.ab3@605> XINCLUDE "CLIModeSupport.ab3"
0001519A <CLIModeSupport.ab3@606> XINCLUDE "CLIModeSupport.ab3"
000151A2 <CLIModeSupport.ab3@607> XINCLUDE "CLIModeSupport.ab3"
000151CA <CLIModeSupport.ab3@608> XINCLUDE "CLIModeSupport.ab3"
000151D0 <CLIModeSupport.ab3@609> XINCLUDE "CLIModeSupport.ab3"
000151D6 <CLIModeSupport.ab3@610> XINCLUDE "CLIModeSupport.ab3"
000151DE <CLIModeSupport.ab3@611> XINCLUDE "CLIModeSupport.ab3"
000151FE <CLIModeSupport.ab3@615> XINCLUDE "CLIModeSupport.ab3"
0001520E <CLIModeSupport.ab3@617> XINCLUDE "CLIModeSupport.ab3"
0001521E <CLIModeSupport.ab3@618> XINCLUDE "CLIModeSupport.ab3"
0001522E <CLIModeSupport.ab3@620> XINCLUDE "CLIModeSupport.ab3"
0001523E <CLIModeSupport.ab3@621> XINCLUDE "CLIModeSupport.ab3"
0001524E <CLIModeSupport.ab3@622> XINCLUDE "CLIModeSupport.ab3"
0001525E <CLIModeSupport.ab3@623> XINCLUDE "CLIModeSupport.ab3"
0001526E <CLIModeSupport.ab3@624> XINCLUDE "CLIModeSupport.ab3"
0001527E <CLIModeSupport.ab3@625> XINCLUDE "CLIModeSupport.ab3"
0001528E <CLIModeSupport.ab3@626> XINCLUDE "CLIModeSupport.ab3"
0001529E <CLIModeSupport.ab3@627> XINCLUDE "CLIModeSupport.ab3"
000152AE <CLIModeSupport.ab3@628> XINCLUDE "CLIModeSupport.ab3"
000152BE <CLIModeSupport.ab3@629> XINCLUDE "CLIModeSupport.ab3"
000152CE <CLIModeSupport.ab3@630> XINCLUDE "CLIModeSupport.ab3"
000152DE <CLIModeSupport.ab3@631> XINCLUDE "CLIModeSupport.ab3"
000152EE <CLIModeSupport.ab3@632> XINCLUDE "CLIModeSupport.ab3"
000152FE <CLIModeSupport.ab3@633> XINCLUDE "CLIModeSupport.ab3"
00015312 <CLIModeSupport.ab3@635> XINCLUDE "CLIModeSupport.ab3"
00015324 <CLIModeSupport.ab3@636> XINCLUDE "CLIModeSupport.ab3"
00015336 <CLIModeSupport.ab3@637> XINCLUDE "CLIModeSupport.ab3"
00015348 <CLIModeSupport.ab3@638> XINCLUDE "CLIModeSupport.ab3"
0001535A <CLIModeSupport.ab3@639> XINCLUDE "CLIModeSupport.ab3"
00015360 <CLIModeSupport.ab3@640> XINCLUDE "CLIModeSupport.ab3"
00015372 <CLIModeSupport.ab3@641> XINCLUDE "CLIModeSupport.ab3"
00015384 <CLIModeSupport.ab3@642> XINCLUDE "CLIModeSupport.ab3"
00015396 <CLIModeSupport.ab3@643> XINCLUDE "CLIModeSupport.ab3"
000153A8 <CLIModeSupport.ab3@644> XINCLUDE "CLIModeSupport.ab3"
000153BA <CLIModeSupport.ab3@646> XINCLUDE "CLIModeSupport.ab3"
000153CC <CLIModeSupport.ab3@647> XINCLUDE "CLIModeSupport.ab3"
000153EA <CLIModeSupport.ab3@649> XINCLUDE "CLIModeSupport.ab3"
000153F0 <CLIModeSupport.ab3@650> XINCLUDE "CLIModeSupport.ab3"
000153F6 <CLIModeSupport.ab3@652> XINCLUDE "CLIModeSupport.ab3"
00015420 <CLIModeSupport.ab3@653> XINCLUDE "CLIModeSupport.ab3"
00015432 <CLIModeSupport.ab3@654> XINCLUDE "CLIModeSupport.ab3"
00015466 <CLIModeSupport.ab3@657> XINCLUDE "CLIModeSupport.ab3"
0001547E <CLIModeSupport.ab3@658> XINCLUDE "CLIModeSupport.ab3"
000154CA <CLIModeSupport.ab3@659> XINCLUDE "CLIModeSupport.ab3"
000154DC <CLIModeSupport.ab3@660> XINCLUDE "CLIModeSupport.ab3"
00015532 <CLIModeSupport.ab3@661> XINCLUDE "CLIModeSupport.ab3"
000155A4 <CLIModeSupport.ab3@662> XINCLUDE "CLIModeSupport.ab3"
000155AA <CLIModeSupport.ab3@663> XINCLUDE "CLIModeSupport.ab3"
000155DE <CLIModeSupport.ab3@664> XINCLUDE "CLIModeSupport.ab3"
00015606 <CLIModeSupport.ab3@665> XINCLUDE "CLIModeSupport.ab3"
0001562E <CLIModeSupport.ab3@667> XINCLUDE "CLIModeSupport.ab3"
00015668 <CLIModeSupport.ab3@668> XINCLUDE "CLIModeSupport.ab3"
00015680 <CLIModeSupport.ab3@669> XINCLUDE "CLIModeSupport.ab3"
00015704 <CLIModeSupport.ab3@670> XINCLUDE "CLIModeSupport.ab3"
0001571E <CLIModeSupport.ab3@671> XINCLUDE "CLIModeSupport.ab3"
0001576C <CLIModeSupport.ab3@672> XINCLUDE "CLIModeSupport.ab3"
0001577C <CLIModeSupport.ab3@674> XINCLUDE "CLIModeSupport.ab3"
00015784 <CLIModeSupport.ab3@676> XINCLUDE "CLIModeSupport.ab3"
00015798 <CLIModeSupport.ab3@677> XINCLUDE "CLIModeSupport.ab3"
000157DE <CLIModeSupport.ab3@678> XINCLUDE "CLIModeSupport.ab3"
000157E4 <CLIModeSupport.ab3@679> XINCLUDE "CLIModeSupport.ab3"
0001582E <CLIModeSupport.ab3@680> XINCLUDE "CLIModeSupport.ab3"
00015898 <CLIModeSupport.ab3@681> XINCLUDE "CLIModeSupport.ab3"
000158FE <CLIModeSupport.ab3@682> XINCLUDE "CLIModeSupport.ab3"
00015932 <CLIModeSupport.ab3@683> XINCLUDE "CLIModeSupport.ab3"
0001595E <CLIModeSupport.ab3@685> XINCLUDE "CLIModeSupport.ab3"
000159AC <CLIModeSupport.ab3@686> XINCLUDE "CLIModeSupport.ab3"
000159D0 <CLIModeSupport.ab3@687> XINCLUDE "CLIModeSupport.ab3"
000159D6 <CLIModeSupport.ab3@688> XINCLUDE "CLIModeSupport.ab3"
000159E4 <CLIModeSupport.ab3@690> XINCLUDE "CLIModeSupport.ab3"
00015A42 <CLIModeSupport.ab3@692> XINCLUDE "CLIModeSupport.ab3"
00015AA0 <CLIModeSupport.ab3@693> XINCLUDE "CLIModeSupport.ab3"
00015ACA <CLIModeSupport.ab3@694> XINCLUDE "CLIModeSupport.ab3"
00015AD4 <CLIModeSupport.ab3@695> XINCLUDE "CLIModeSupport.ab3"
00015ADC <CLIModeSupport.ab3@696> XINCLUDE "CLIModeSupport.ab3"
00015B1A <CLIModeSupport.ab3@697> XINCLUDE "CLIModeSupport.ab3"
00015B66 <CLIModeSupport.ab3@698> XINCLUDE "CLIModeSupport.ab3"
00015B78 <CLIModeSupport.ab3@699> XINCLUDE "CLIModeSupport.ab3"
00015BCE <CLIModeSupport.ab3@700> XINCLUDE "CLIModeSupport.ab3"
00015C46 <CLIModeSupport.ab3@701> XINCLUDE "CLIModeSupport.ab3"
00015C4C <CLIModeSupport.ab3@702> XINCLUDE "CLIModeSupport.ab3"
00015C80 <CLIModeSupport.ab3@703> XINCLUDE "CLIModeSupport.ab3"
00015CA8 <CLIModeSupport.ab3@704> XINCLUDE "CLIModeSupport.ab3"
00015CDE <CLIModeSupport.ab3@707> XINCLUDE "CLIModeSupport.ab3"
00015CEC <CLIModeSupport.ab3@708> XINCLUDE "CLIModeSupport.ab3"
00015CFA <CLIModeSupport.ab3@709> XINCLUDE "CLIModeSupport.ab3"
00015D6E <CLIModeSupport.ab3@710> XINCLUDE "CLIModeSupport.ab3"
00015D74 <CLIModeSupport.ab3@711> XINCLUDE "CLIModeSupport.ab3"
00015DBE <CLIModeSupport.ab3@712> XINCLUDE "CLIModeSupport.ab3"
00015E08 <CLIModeSupport.ab3@713> XINCLUDE "CLIModeSupport.ab3"
00015E38 <CLIModeSupport.ab3@714> XINCLUDE "CLIModeSupport.ab3"
00015E68 <CLIModeSupport.ab3@715> XINCLUDE "CLIModeSupport.ab3"
00015E92 <CLIModeSupport.ab3@716> XINCLUDE "CLIModeSupport.ab3"
00015EE4 <CLIModeSupport.ab3@717> XINCLUDE "CLIModeSupport.ab3"
00015F3A <CLIModeSupport.ab3@718> XINCLUDE "CLIModeSupport.ab3"
00015F8A <CLIModeSupport.ab3@719> XINCLUDE "CLIModeSupport.ab3"
00015FF0 <CLIModeSupport.ab3@720> XINCLUDE "CLIModeSupport.ab3"
0001605C <CLIModeSupport.ab3@721> XINCLUDE "CLIModeSupport.ab3"
00016088 <CLIModeSupport.ab3@722> XINCLUDE "CLIModeSupport.ab3"
000160B8 <CLIModeSupport.ab3@723> XINCLUDE "CLIModeSupport.ab3"
00016134 <CLIModeSupport.ab3@724> XINCLUDE "CLIModeSupport.ab3"
00016164 <CLIModeSupport.ab3@725> XINCLUDE "CLIModeSupport.ab3"
00016194 <CLIModeSupport.ab3@726> XINCLUDE "CLIModeSupport.ab3"
000161C4 <CLIModeSupport.ab3@727> XINCLUDE "CLIModeSupport.ab3"
000161F4 <CLIModeSupport.ab3@728> XINCLUDE "CLIModeSupport.ab3"
00016224 <CLIModeSupport.ab3@729> XINCLUDE "CLIModeSupport.ab3"
00016254 <CLIModeSupport.ab3@730> XINCLUDE "CLIModeSupport.ab3"
00016284 <CLIModeSupport.ab3@731> XINCLUDE "CLIModeSupport.ab3"
000162B4 <CLIModeSupport.ab3@732> XINCLUDE "CLIModeSupport.ab3"
000162E4 <CLIModeSupport.ab3@733> XINCLUDE "CLIModeSupport.ab3"
00016314 <CLIModeSupport.ab3@734> XINCLUDE "CLIModeSupport.ab3"
00016390 <CLIModeSupport.ab3@735> XINCLUDE "CLIModeSupport.ab3"
000163C2 <CLIModeSupport.ab3@736> XINCLUDE "CLIModeSupport.ab3"
000163F4 <CLIModeSupport.ab3@737> XINCLUDE "CLIModeSupport.ab3"
00016424 <CLIModeSupport.ab3@738> XINCLUDE "CLIModeSupport.ab3"
0001642A <CLIModeSupport.ab3@739> XINCLUDE "CLIModeSupport.ab3"
0001649E <CLIModeSupport.ab3@740> XINCLUDE "CLIModeSupport.ab3"
0001650A <CLIModeSupport.ab3@741> XINCLUDE "CLIModeSupport.ab3"
0001651C <CLIModeSupport.ab3@742> XINCLUDE "CLIModeSupport.ab3"
0001654A <CLIModeSupport.ab3@743> XINCLUDE "CLIModeSupport.ab3"
00016572 <CLIModeSupport.ab3@744> XINCLUDE "CLIModeSupport.ab3"
00016586 <CLIModeSupport.ab3@745> XINCLUDE "CLIModeSupport.ab3"
000165B0 <CLIModeSupport.ab3@746> XINCLUDE "CLIModeSupport.ab3"
000165F4 <CLIModeSupport.ab3@747> XINCLUDE "CLIModeSupport.ab3"
00016604 <CLIModeSupport.ab3@748> XINCLUDE "CLIModeSupport.ab3"
00016614 <CLIModeSupport.ab3@749> XINCLUDE "CLIModeSupport.ab3"
0001661A <CLIModeSupport.ab3@750> XINCLUDE "CLIModeSupport.ab3"
0001662A <CLIModeSupport.ab3@752> XINCLUDE "CLIModeSupport.ab3"
00016638 <CLIModeSupport.ab3@756> XINCLUDE "CLIModeSupport.ab3"
00016642 <CLIModeSupport.ab3@759> XINCLUDE "CLIModeSupport.ab3"
0001667A <CLIModeSupport.ab3@762> XINCLUDE "CLIModeSupport.ab3"
000166B2 <CLIModeSupport.ab3@763> XINCLUDE "CLIModeSupport.ab3"
000166EA <CLIModeSupport.ab3@764> XINCLUDE "CLIModeSupport.ab3"
000166FA <CLIModeSupport.ab3@765> XINCLUDE "CLIModeSupport.ab3"
00016762 <CLIModeSupport.ab3@766> XINCLUDE "CLIModeSupport.ab3"
0001679A <CLIModeSupport.ab3@767> XINCLUDE "CLIModeSupport.ab3"
000167AA <CLIModeSupport.ab3@768> XINCLUDE "CLIModeSupport.ab3"
000167BA <CLIModeSupport.ab3@769> XINCLUDE "CLIModeSupport.ab3"
00016822 <CLIModeSupport.ab3@770> XINCLUDE "CLIModeSupport.ab3"
0001688A <CLIModeSupport.ab3@771> XINCLUDE "CLIModeSupport.ab3"
000168F2 <CLIModeSupport.ab3@772> XINCLUDE "CLIModeSupport.ab3"
0001695A <CLIModeSupport.ab3@773> XINCLUDE "CLIModeSupport.ab3"
000169C2 <CLIModeSupport.ab3@774> XINCLUDE "CLIModeSupport.ab3"
00016A2A <CLIModeSupport.ab3@775> XINCLUDE "CLIModeSupport.ab3"
00016A92 <CLIModeSupport.ab3@776> XINCLUDE "CLIModeSupport.ab3"
00016AFA <CLIModeSupport.ab3@777> XINCLUDE "CLIModeSupport.ab3"
00016B0A <CLIModeSupport.ab3@778> XINCLUDE "CLIModeSupport.ab3"
00016B42 <CLIModeSupport.ab3@780> XINCLUDE "CLIModeSupport.ab3"
00016B7C <CLIModeSupport.ab3@781> XINCLUDE "CLIModeSupport.ab3"
00016BB6 <CLIModeSupport.ab3@782> XINCLUDE "CLIModeSupport.ab3"
00016BEE <CLIModeSupport.ab3@783> XINCLUDE "CLIModeSupport.ab3"
00016C0A <CLIModeSupport.ab3@784> XINCLUDE "CLIModeSupport.ab3"
00016C42 <CLIModeSupport.ab3@785> XINCLUDE "CLIModeSupport.ab3"
00016C68 <CLIModeSupport.ab3@787> XINCLUDE "CLIModeSupport.ab3"
00016C70 <CLIModeSupport.ab3@790> XINCLUDE "CLIModeSupport.ab3"
00016C78 <CLIModeSupport.ab3@792> XINCLUDE "CLIModeSupport.ab3"
00016C80 <CLIModeSupport.ab3@793> XINCLUDE "CLIModeSupport.ab3"
00016C88 <CLIModeSupport.ab3@795> XINCLUDE "CLIModeSupport.ab3"
00016C9C <CLIModeSupport.ab3@796> XINCLUDE "CLIModeSupport.ab3"
00016CCA <CLIModeSupport.ab3@797> XINCLUDE "CLIModeSupport.ab3"
00016CE4 <CLIModeSupport.ab3@798> XINCLUDE "CLIModeSupport.ab3"
00016CF2 <CLIModeSupport.ab3@799> XINCLUDE "CLIModeSupport.ab3"
00016D5E <CLIModeSupport.ab3@800> XINCLUDE "CLIModeSupport.ab3"
00016D84 <CLIModeSupport.ab3@801> XINCLUDE "CLIModeSupport.ab3"
00016DA0 <CLIModeSupport.ab3@802> XINCLUDE "CLIModeSupport.ab3"
00016DAA <CLIModeSupport.ab3@803> XINCLUDE "CLIModeSupport.ab3"
00016DB4 <CLIModeSupport.ab3@804> XINCLUDE "CLIModeSupport.ab3"
00016DC0 <CLIModeSupport.ab3@805> XINCLUDE "CLIModeSupport.ab3"
00016DCE <CLIModeSupport.ab3@806> XINCLUDE "CLIModeSupport.ab3"
00016DDA <CLIModeSupport.ab3@807> XINCLUDE "CLIModeSupport.ab3"
00016E16 <CLIModeSupport.ab3@808> XINCLUDE "CLIModeSupport.ab3"
00016E30 <CLIModeSupport.ab3@809> XINCLUDE "CLIModeSupport.ab3"
00016E3E <CLIModeSupport.ab3@810> XINCLUDE "CLIModeSupport.ab3"
00016E5E <CLIModeSupport.ab3@811> XINCLUDE "CLIModeSupport.ab3"
00016E6C <CLIModeSupport.ab3@812> XINCLUDE "CLIModeSupport.ab3"
00016E7A <CLIModeSupport.ab3@813> XINCLUDE "CLIModeSupport.ab3"
00016E80 <CLIModeSupport.ab3@815> XINCLUDE "CLIModeSupport.ab3"
00016E90 <CLIModeSupport.ab3@816> XINCLUDE "CLIModeSupport.ab3"
00016E94 <CLIModeSupport.ab3@818> XINCLUDE "CLIModeSupport.ab3"
00016EC8 <CLIModeSupport.ab3@819> XINCLUDE "CLIModeSupport.ab3"
00016EFC <CLIModeSupport.ab3@820> XINCLUDE "CLIModeSupport.ab3"
00016F00 <CLIModeSupport.ab3@821> XINCLUDE "CLIModeSupport.ab3"
00016F34 <CLIModeSupport.ab3@822> XINCLUDE "CLIModeSupport.ab3"
00016F38 <CLIModeSupport.ab3@823> XINCLUDE "CLIModeSupport.ab3"
00016F6C <CLIModeSupport.ab3@824> XINCLUDE "CLIModeSupport.ab3"
00016F72 <CLIModeSupport.ab3@825> XINCLUDE "CLIModeSupport.ab3"
00016FA8 <CLIModeSupport.ab3@827> XINCLUDE "CLIModeSupport.ab3"
00016FDE <CLIModeSupport.ab3@828> XINCLUDE "CLIModeSupport.ab3"
00017014 <CLIModeSupport.ab3@829> XINCLUDE "CLIModeSupport.ab3"
0001704C <CLIModeSupport.ab3@830> XINCLUDE "CLIModeSupport.ab3"
00017084 <CLIModeSupport.ab3@831> XINCLUDE "CLIModeSupport.ab3"
00017124 <CLIModeSupport.ab3@833> XINCLUDE "CLIModeSupport.ab3"
00017164 <CLIModeSupport.ab3@834> XINCLUDE "CLIModeSupport.ab3"
0001719A <CLIModeSupport.ab3@835> XINCLUDE "CLIModeSupport.ab3"
000171D0 <CLIModeSupport.ab3@836> XINCLUDE "CLIModeSupport.ab3"
00017208 <CLIModeSupport.ab3@839> XINCLUDE "CLIModeSupport.ab3"
00017226 <CLIModeSupport.ab3@840> XINCLUDE "CLIModeSupport.ab3"
0001722A <CLIModeSupport.ab3@841> XINCLUDE "CLIModeSupport.ab3"
00017230 <CLIModeSupport.ab3@842> XINCLUDE "CLIModeSupport.ab3"
00017236 <CLIModeSupport.ab3@843> XINCLUDE "CLIModeSupport.ab3"
0001723A <CLIModeSupport.ab3@844> XINCLUDE "CLIModeSupport.ab3"
00017264 <CLIModeSupport.ab3@845> XINCLUDE "CLIModeSupport.ab3"
00017278 <CLIModeSupport.ab3@849> XINCLUDE "CLIModeSupport.ab3"
000172B6 <CLIModeSupport.ab3@850> XINCLUDE "CLIModeSupport.ab3"
000172EA <CLIModeSupport.ab3@851> XINCLUDE "CLIModeSupport.ab3"
00017320 <CLIModeSupport.ab3@855> XINCLUDE "CLIModeSupport.ab3"
00017378 <CLIModeSupport.ab3@857> XINCLUDE "CLIModeSupport.ab3"
000173A6 <CLIModeSupport.ab3@858> XINCLUDE "CLIModeSupport.ab3"
000173AA <CLIModeSupport.ab3@859> XINCLUDE "CLIModeSupport.ab3"
000173E0 <CLIModeSupport.ab3@860> XINCLUDE "CLIModeSupport.ab3"
0001740E <CLIModeSupport.ab3@861> XINCLUDE "CLIModeSupport.ab3"
0001743C <CLIModeSupport.ab3@863> XINCLUDE "CLIModeSupport.ab3"
00017440 <CLIModeSupport.ab3@864> XINCLUDE "CLIModeSupport.ab3"
00017476 <CLIModeSupport.ab3@865> XINCLUDE "CLIModeSupport.ab3"
000174A4 <CLIModeSupport.ab3@867> XINCLUDE "CLIModeSupport.ab3"
000174A8 <CLIModeSupport.ab3@868> XINCLUDE "CLIModeSupport.ab3"
0001750C <CLIModeSupport.ab3@869> XINCLUDE "CLIModeSupport.ab3"
00017512 <CLIModeSupport.ab3@872> XINCLUDE "CLIModeSupport.ab3"
0001754C <CLIModeSupport.ab3@873> XINCLUDE "CLIModeSupport.ab3"
00017556 <CLIModeSupport.ab3@876> XINCLUDE "CLIModeSupport.ab3"
00017560 <CLIModeSupport.ab3@878> XINCLUDE "CLIModeSupport.ab3"
0001757A <CLIModeSupport.ab3@879> XINCLUDE "CLIModeSupport.ab3"
000175A4 <CLIModeSupport.ab3@882> XINCLUDE "CLIModeSupport.ab3"
000175AA <CLIModeSupport.ab3@883> XINCLUDE "CLIModeSupport.ab3"
000175CA <CLIModeSupport.ab3@884> XINCLUDE "CLIModeSupport.ab3"
000175D4 <CLIModeSupport.ab3@885> XINCLUDE "CLIModeSupport.ab3"
000175D8 <CLIModeSupport.ab3@886> XINCLUDE "CLIModeSupport.ab3"
000175DA <CLIModeSupport.ab3@887> XINCLUDE "CLIModeSupport.ab3"
000175F8 <CLIModeSupport.ab3@888> XINCLUDE "CLIModeSupport.ab3"
000175FA <CLIModeSupport.ab3@889> XINCLUDE "CLIModeSupport.ab3"
00017600 <CLIModeSupport.ab3@890> XINCLUDE "CLIModeSupport.ab3"
00017606 <CLIModeSupport.ab3@892> XINCLUDE "CLIModeSupport.ab3"
00017630 <CLIModeSupport.ab3@893> XINCLUDE "CLIModeSupport.ab3"
00017632 <CLIModeSupport.ab3@894> XINCLUDE "CLIModeSupport.ab3"
00017660 <CLIModeSupport.ab3@895> XINCLUDE "CLIModeSupport.ab3"
00017664 <CLIModeSupport.ab3@896> XINCLUDE "CLIModeSupport.ab3"
00017692 <CLIModeSupport.ab3@897> XINCLUDE "CLIModeSupport.ab3"
00017696 <CLIModeSupport.ab3@898> XINCLUDE "CLIModeSupport.ab3"
000176BC <CLIModeSupport.ab3@899> XINCLUDE "CLIModeSupport.ab3"
000176CC <CLIModeSupport.ab3@900> XINCLUDE "CLIModeSupport.ab3"
000176D2 <CLIModeSupport.ab3@901> XINCLUDE "CLIModeSupport.ab3"
000176D8 <CLIModeSupport.ab3@902> XINCLUDE "CLIModeSupport.ab3"
00017712 <CLIModeSupport.ab3@903> XINCLUDE "CLIModeSupport.ab3"
0001771C <CLIModeSupport.ab3@905> XINCLUDE "CLIModeSupport.ab3"
00017736 <CLIModeSupport.ab3@906> XINCLUDE "CLIModeSupport.ab3"
00017754 <CLIModeSupport.ab3@909> XINCLUDE "CLIModeSupport.ab3"
0001777E <CLIModeSupport.ab3@910> XINCLUDE "CLIModeSupport.ab3"
000177AC <CLIModeSupport.ab3@911> XINCLUDE "CLIModeSupport.ab3"
0001783C <CLIModeSupport.ab3@912> XINCLUDE "CLIModeSupport.ab3"
00017846 <CLIModeSupport.ab3@914> XINCLUDE "CLIModeSupport.ab3"
0001785A <CLIModeSupport.ab3@915> XINCLUDE "CLIModeSupport.ab3"
00017896 <CLIModeSupport.ab3@916> XINCLUDE "CLIModeSupport.ab3"
000178D2 <CLIModeSupport.ab3@917> XINCLUDE "CLIModeSupport.ab3"
0001790E <CLIModeSupport.ab3@918> XINCLUDE "CLIModeSupport.ab3"
0001794A <CLIModeSupport.ab3@919> XINCLUDE "CLIModeSupport.ab3"
00017986 <CLIModeSupport.ab3@920> XINCLUDE "CLIModeSupport.ab3"
0001798C <CLIModeSupport.ab3@921> XINCLUDE "CLIModeSupport.ab3"
000179C6 <CLIModeSupport.ab3@922> XINCLUDE "CLIModeSupport.ab3"
000179D8 <CLIModeSupport.ab3@927> XINCLUDE "CLIModeSupport.ab3"
000179E8 <CLIModeSupport.ab3@928> XINCLUDE "CLIModeSupport.ab3"
000179F4 <CLIModeSupport.ab3@931> XINCLUDE "CLIModeSupport.ab3"
00017A0E <CLIModeSupport.ab3@932> XINCLUDE "CLIModeSupport.ab3"
00017A10 <CLIModeSupport.ab3@934> XINCLUDE "CLIModeSupport.ab3"
00017A2E <CLIModeSupport.ab3@935> XINCLUDE "CLIModeSupport.ab3"
00017A34 <CLIModeSupport.ab3@936> XINCLUDE "CLIModeSupport.ab3"
00017A5E <CLIModeSupport.ab3@937> XINCLUDE "CLIModeSupport.ab3"
00017A60 <CLIModeSupport.ab3@938> XINCLUDE "CLIModeSupport.ab3"
00017A6A <CLIModeSupport.ab3@940> XINCLUDE "CLIModeSupport.ab3"
00017A70 <CLIModeSupport.ab3@941> XINCLUDE "CLIModeSupport.ab3"
00017A82 <CLIModeSupport.ab3@944> XINCLUDE "CLIModeSupport.ab3"
00017ABC <CLIModeSupport.ab3@961> XINCLUDE "CLIModeSupport.ab3"
00017AD6 <CLIModeSupport.ab3@965> XINCLUDE "CLIModeSupport.ab3"
00017AEA <CLIModeSupport.ab3@967> XINCLUDE "CLIModeSupport.ab3"
00017B54 <CLIModeSupport.ab3@968> XINCLUDE "CLIModeSupport.ab3"
00017B5A <CLIModeSupport.ab3@969> XINCLUDE "CLIModeSupport.ab3"
00017BC4 <CLIModeSupport.ab3@970> XINCLUDE "CLIModeSupport.ab3"
00017BD8 <CLIModeSupport.ab3@973> XINCLUDE "CLIModeSupport.ab3"
00017C42 <CLIModeSupport.ab3@974> XINCLUDE "CLIModeSupport.ab3"
00017C78 <CLIModeSupport.ab3@975> XINCLUDE "CLIModeSupport.ab3"
00017C7E <CLIModeSupport.ab3@976> XINCLUDE "CLIModeSupport.ab3"
00017CE8 <CLIModeSupport.ab3@977> XINCLUDE "CLIModeSupport.ab3"
00017CFC <CLIModeSupport.ab3@978> XINCLUDE "CLIModeSupport.ab3"
00017D32 <CLIModeSupport.ab3@979> XINCLUDE "CLIModeSupport.ab3"
00017D38 <CLIModeSupport.ab3@980> XINCLUDE "CLIModeSupport.ab3"
00017D6E <CLIModeSupport.ab3@981> XINCLUDE "CLIModeSupport.ab3"
00017D82 <CLIModeSupport.ab3@985> XINCLUDE "CLIModeSupport.ab3"
00017DEC <CLIModeSupport.ab3@986> XINCLUDE "CLIModeSupport.ab3"
00017DF2 <CLIModeSupport.ab3@987> XINCLUDE "CLIModeSupport.ab3"
00017E5C <CLIModeSupport.ab3@988> XINCLUDE "CLIModeSupport.ab3"
00017E70 <CLIModeSupport.ab3@991> XINCLUDE "CLIModeSupport.ab3"
00017EA6 <CLIModeSupport.ab3@992> XINCLUDE "CLIModeSupport.ab3"
00017EAC <CLIModeSupport.ab3@993> XINCLUDE "CLIModeSupport.ab3"
00017EE2 <CLIModeSupport.ab3@994> XINCLUDE "CLIModeSupport.ab3"
00017EFC <CLIModeSupport.ab3@999> XINCLUDE "CLIModeSupport.ab3"
00017F10 <CLIModeSupport.ab3@1001> XINCLUDE "CLIModeSupport.ab3"
00017F7A <CLIModeSupport.ab3@1002> XINCLUDE "CLIModeSupport.ab3"
00017F80 <CLIModeSupport.ab3@1003> XINCLUDE "CLIModeSupport.ab3"
00017FEA <CLIModeSupport.ab3@1004> XINCLUDE "CLIModeSupport.ab3"
00017FFE <CLIModeSupport.ab3@1007> XINCLUDE "CLIModeSupport.ab3"
00018068 <CLIModeSupport.ab3@1008> XINCLUDE "CLIModeSupport.ab3"
0001806E <CLIModeSupport.ab3@1009> XINCLUDE "CLIModeSupport.ab3"
000180D8 <CLIModeSupport.ab3@1010> XINCLUDE "CLIModeSupport.ab3"
000180EC <CLIModeSupport.ab3@1013> XINCLUDE "CLIModeSupport.ab3"
00018156 <CLIModeSupport.ab3@1014> XINCLUDE "CLIModeSupport.ab3"
0001815C <CLIModeSupport.ab3@1015> XINCLUDE "CLIModeSupport.ab3"
000181C6 <CLIModeSupport.ab3@1016> XINCLUDE "CLIModeSupport.ab3"
000181DA <CLIModeSupport.ab3@1019> XINCLUDE "CLIModeSupport.ab3"
00018244 <CLIModeSupport.ab3@1020> XINCLUDE "CLIModeSupport.ab3"
0001824A <CLIModeSupport.ab3@1021> XINCLUDE "CLIModeSupport.ab3"
000182B4 <CLIModeSupport.ab3@1022> XINCLUDE "CLIModeSupport.ab3"
000182C6 <CLIModeSupport.ab3@1027> XINCLUDE "CLIModeSupport.ab3"
000182D6 <CLIModeSupport.ab3@1028> XINCLUDE "CLIModeSupport.ab3"
000182E0 <CLIModeSupport.ab3@1031> XINCLUDE "CLIModeSupport.ab3"
0001834A <CLIModeSupport.ab3@1032> XINCLUDE "CLIModeSupport.ab3"
00018350 <CLIModeSupport.ab3@1033> XINCLUDE "CLIModeSupport.ab3"
000183BA <CLIModeSupport.ab3@1034> XINCLUDE "CLIModeSupport.ab3"
000183C4 <CLIModeSupport.ab3@1037> XINCLUDE "CLIModeSupport.ab3"
0001842E <CLIModeSupport.ab3@1038> XINCLUDE "CLIModeSupport.ab3"
00018464 <CLIModeSupport.ab3@1039> XINCLUDE "CLIModeSupport.ab3"
0001846A <CLIModeSupport.ab3@1040> XINCLUDE "CLIModeSupport.ab3"
000184D4 <CLIModeSupport.ab3@1042> XINCLUDE "CLIModeSupport.ab3"
0001850A <CLIModeSupport.ab3@1043> XINCLUDE "CLIModeSupport.ab3"
00018512 <CLIModeSupport.ab3@1046> XINCLUDE "CLIModeSupport.ab3"
00018540 <CLIModeSupport.ab3@1048> XINCLUDE "CLIModeSupport.ab3"
00018544 <CLIModeSupport.ab3@1049> XINCLUDE "CLIModeSupport.ab3"
0001856C <CLIModeSupport.ab3@1050> XINCLUDE "CLIModeSupport.ab3"
00018572 <CLIModeSupport.ab3@1053> XINCLUDE "CLIModeSupport.ab3"
00018578 <CLIModeSupport.ab3@1056> XINCLUDE "CLIModeSupport.ab3"
0001857E <CLIModeSupport.ab3@1057> XINCLUDE "CLIModeSupport.ab3"
00018584 <CLIModeSupport.ab3@1058> XINCLUDE "CLIModeSupport.ab3"
0001858A <CLIModeSupport.ab3@1059> XINCLUDE "CLIModeSupport.ab3"
00018594 <CLIModeSupport.ab3@1060> XINCLUDE "CLIModeSupport.ab3"
0001859E <CLIModeSupport.ab3@1061> XINCLUDE "CLIModeSupport.ab3"
000185CC <CLIModeSupport.ab3@1063> XINCLUDE "CLIModeSupport.ab3"
000185F8 <CLIModeSupport.ab3@1065> XINCLUDE "CLIModeSupport.ab3"
00018600 <CLIModeSupport.ab3@1066> XINCLUDE "CLIModeSupport.ab3"
00018666 <CLIModeSupport.ab3@1069> XINCLUDE "CLIModeSupport.ab3"
0001869A <CLIModeSupport.ab3@1070> XINCLUDE "CLIModeSupport.ab3"
000186A0 <CLIModeSupport.ab3@1071> XINCLUDE "CLIModeSupport.ab3"
00018720 <CLIModeSupport.ab3@1072> XINCLUDE "CLIModeSupport.ab3"
00018732 <CLIModeSupport.ab3@1074> XINCLUDE "CLIModeSupport.ab3"
00018798 <CLIModeSupport.ab3@1075> XINCLUDE "CLIModeSupport.ab3"
000187FE <CLIModeSupport.ab3@1076> XINCLUDE "CLIModeSupport.ab3"
00018804 <CLIModeSupport.ab3@1077> XINCLUDE "CLIModeSupport.ab3"
0001880C <CLIModeSupport.ab3@1078> XINCLUDE "CLIModeSupport.ab3"
0001880E <CLIModeSupport.ab3@1082> XINCLUDE "CLIModeSupport.ab3"
0001882C <CLIModeSupport.ab3@1083> XINCLUDE "CLIModeSupport.ab3"
0001886A <CLIModeSupport.ab3@1084> XINCLUDE "CLIModeSupport.ab3"
000188A8 <CLIModeSupport.ab3@1085> XINCLUDE "CLIModeSupport.ab3"
000188AE <CLIModeSupport.ab3@1087> XINCLUDE "CLIModeSupport.ab3"
000188B4 <CLIModeSupport.ab3@1088> XINCLUDE "CLIModeSupport.ab3"
000188BA <CLIModeSupport.ab3@1089> XINCLUDE "CLIModeSupport.ab3"
000188C4 <CLIModeSupport.ab3@1092> XINCLUDE "CLIModeSupport.ab3"
000188CA <CLIModeSupport.ab3@1093> XINCLUDE "CLIModeSupport.ab3"
000188D0 <CLIModeSupport.ab3@1094> XINCLUDE "CLIModeSupport.ab3"
000188D6 <CLIModeSupport.ab3@1095> XINCLUDE "CLIModeSupport.ab3"
000188DC <CLIModeSupport.ab3@1096> XINCLUDE "CLIModeSupport.ab3"
000188E0 <CLIModeSupport.ab3@1097> XINCLUDE "CLIModeSupport.ab3"
000188EA <CLIModeSupport.ab3@1098> XINCLUDE "CLIModeSupport.ab3"
000188EE <CLIModeSupport.ab3@1099> XINCLUDE "CLIModeSupport.ab3"
00018918 <CLIModeSupport.ab3@1101> XINCLUDE "CLIModeSupport.ab3"
0001891A <CLIModeSupport.ab3@1102> XINCLUDE "CLIModeSupport.ab3"
00018920 <CLIModeSupport.ab3@1104> XINCLUDE "CLIModeSupport.ab3"
00018924 <CLIModeSupport.ab3@1105> XINCLUDE "CLIModeSupport.ab3"
0001892A <CLIModeSupport.ab3@1107> XINCLUDE "CLIModeSupport.ab3"
0001892E <CLIModeSupport.ab3@1108> XINCLUDE "CLIModeSupport.ab3"
0001893E <CLIModeSupport.ab3@1110> XINCLUDE "CLIModeSupport.ab3"
00018998 <CLIModeSupport.ab3@1111> XINCLUDE "CLIModeSupport.ab3"
000189AA <CLIModeSupport.ab3@1113> XINCLUDE "CLIModeSupport.ab3"
00018A14 <CLIModeSupport.ab3@1114> XINCLUDE "CLIModeSupport.ab3"
00018A1A <CLIModeSupport.ab3@1115> XINCLUDE "CLIModeSupport.ab3"
00018A64 <CLIModeSupport.ab3@1116> XINCLUDE "CLIModeSupport.ab3"
00018A76 <CLIModeSupport.ab3@1119> XINCLUDE "CLIModeSupport.ab3"
00018AA2 <CLIModeSupport.ab3@1120> XINCLUDE "CLIModeSupport.ab3"
00018B48 <CLIModeSupport.ab3@1121> XINCLUDE "CLIModeSupport.ab3"
00018B66 <CLIModeSupport.ab3@1122> XINCLUDE "CLIModeSupport.ab3"
00018B6C <CLIModeSupport.ab3@1123> XINCLUDE "CLIModeSupport.ab3"
00018B96 <CLIModeSupport.ab3@1124> XINCLUDE "CLIModeSupport.ab3"
00018BA0 <CLIModeSupport.ab3@1125> XINCLUDE "CLIModeSupport.ab3"
00018BD2 <CLIModeSupport.ab3@1126> XINCLUDE "CLIModeSupport.ab3"
00018BEC <CLIModeSupport.ab3@1127> XINCLUDE "CLIModeSupport.ab3"
00018C00 <CLIModeSupport.ab3@1132> XINCLUDE "CLIModeSupport.ab3"
00018C0C <CLIModeSupport.ab3@1134> XINCLUDE "CLIModeSupport.ab3"
00018C26 <CLIModeSupport.ab3@1135> XINCLUDE "CLIModeSupport.ab3"
00018C30 <CLIModeSupport.ab3@1137> XINCLUDE "CLIModeSupport.ab3"
00018C4A <CLIModeSupport.ab3@1139> XINCLUDE "CLIModeSupport.ab3"
00018C74 <CLIModeSupport.ab3@1143> XINCLUDE "CLIModeSupport.ab3"
00018C98 <CLIModeSupport.ab3@1144> XINCLUDE "CLIModeSupport.ab3"
00018CD6 <CLIModeSupport.ab3@1145> XINCLUDE "CLIModeSupport.ab3"
00018CDA <CLIModeSupport.ab3@1146> XINCLUDE "CLIModeSupport.ab3"
00018D18 <CLIModeSupport.ab3@1148> XINCLUDE "CLIModeSupport.ab3"
00018D1C <CLIModeSupport.ab3@1149> XINCLUDE "CLIModeSupport.ab3"
00018D5A <CLIModeSupport.ab3@1152> XINCLUDE "CLIModeSupport.ab3"
00018D98 <CLIModeSupport.ab3@1153> XINCLUDE "CLIModeSupport.ab3"
00018D9A <CLIModeSupport.ab3@1154> XINCLUDE "CLIModeSupport.ab3"
00018DCE <CLIModeSupport.ab3@1155> XINCLUDE "CLIModeSupport.ab3"
00018DD4 <CLIModeSupport.ab3@1157> XINCLUDE "CLIModeSupport.ab3"
00018E18 <CLIModeSupport.ab3@1158> XINCLUDE "CLIModeSupport.ab3"
00018E2A <CLIModeSupport.ab3@1159> XINCLUDE "CLIModeSupport.ab3"
00018E32 <CLIModeSupport.ab3@1161> XINCLUDE "CLIModeSupport.ab3"
00018E38 <CLIModeSupport.ab3@1162> XINCLUDE "CLIModeSupport.ab3"
00018E42 <CLIModeSupport.ab3@1164> XINCLUDE "CLIModeSupport.ab3"
00018E50 <CLIModeSupport.ab3@1165> XINCLUDE "CLIModeSupport.ab3"
00018E56 <CLIModeSupport.ab3@1166> XINCLUDE "CLIModeSupport.ab3"
00018E7E <CLIModeSupport.ab3@1167> XINCLUDE "CLIModeSupport.ab3"
00018E98 <CLIModeSupport.ab3@1168> XINCLUDE "CLIModeSupport.ab3"
00018EA2 <CLIModeSupport.ab3@1169> XINCLUDE "CLIModeSupport.ab3"
00018EA8 <CLIModeSupport.ab3@1170> XINCLUDE "CLIModeSupport.ab3"
00018EC6 <CLIModeSupport.ab3@1172> XINCLUDE "CLIModeSupport.ab3"
00018ED0 <CLIModeSupport.ab3@1173> XINCLUDE "CLIModeSupport.ab3"
00018ED6 <CLIModeSupport.ab3@1174> XINCLUDE "CLIModeSupport.ab3"
00018EDC <CLIModeSupport.ab3@1175> XINCLUDE "CLIModeSupport.ab3"
00018EE6 <CLIModeSupport.ab3@1176> XINCLUDE "CLIModeSupport.ab3"
00018EF4 <CLIModeSupport.ab3@1177> XINCLUDE "CLIModeSupport.ab3"
00018EFA <CLIModeSupport.ab3@1178> XINCLUDE "CLIModeSupport.ab3"
00018F0A <CLIModeSupport.ab3@1180> XINCLUDE "CLIModeSupport.ab3"
00018F36 <CLIModeSupport.ab3@1181> XINCLUDE "CLIModeSupport.ab3"
00018F4C <CLIModeSupport.ab3@1182> XINCLUDE "CLIModeSupport.ab3"
00018F56 <CLIModeSupport.ab3@1183> XINCLUDE "CLIModeSupport.ab3"
00018F5C <CLIModeSupport.ab3@1184> XINCLUDE "CLIModeSupport.ab3"
00018FB4 <CLIModeSupport.ab3@1186> XINCLUDE "CLIModeSupport.ab3"
00019022 <CLIModeSupport.ab3@1188> XINCLUDE "CLIModeSupport.ab3"
0001903A <CLIModeSupport.ab3@1189> XINCLUDE "CLIModeSupport.ab3"
00019040 <CLIModeSupport.ab3@1190> XINCLUDE "CLIModeSupport.ab3"
00019078 <CLIModeSupport.ab3@1191> XINCLUDE "CLIModeSupport.ab3"
000190A6 <CLIModeSupport.ab3@1193> XINCLUDE "CLIModeSupport.ab3"
000190D0 <CLIModeSupport.ab3@1194> XINCLUDE "CLIModeSupport.ab3"
000190DA <CLIModeSupport.ab3@1196> XINCLUDE "CLIModeSupport.ab3"
00019102 <CLIModeSupport.ab3@1197> XINCLUDE "CLIModeSupport.ab3"
0001912C <CLIModeSupport.ab3@1198> XINCLUDE "CLIModeSupport.ab3"
000191CE <CLIModeSupport.ab3@1199> XINCLUDE "CLIModeSupport.ab3"
000191DC <CLIModeSupport.ab3@1200> XINCLUDE "CLIModeSupport.ab3"
0001922C <CLIModeSupport.ab3@1201> XINCLUDE "CLIModeSupport.ab3"
0001923C <CLIModeSupport.ab3@1202> XINCLUDE "CLIModeSupport.ab3"
00019304 <CLIModeSupport.ab3@1203> XINCLUDE "CLIModeSupport.ab3"
00019338 <CLIModeSupport.ab3@1205> XINCLUDE "CLIModeSupport.ab3"
0001936C <CLIModeSupport.ab3@1206> XINCLUDE "CLIModeSupport.ab3"
000193A0 <CLIModeSupport.ab3@1207> XINCLUDE "CLIModeSupport.ab3"
000193D4 <CLIModeSupport.ab3@1208> XINCLUDE "CLIModeSupport.ab3"
00019408 <CLIModeSupport.ab3@1209> XINCLUDE "CLIModeSupport.ab3"
0001943C <CLIModeSupport.ab3@1210> XINCLUDE "CLIModeSupport.ab3"
00019470 <CLIModeSupport.ab3@1211> XINCLUDE "CLIModeSupport.ab3"
000194A4 <CLIModeSupport.ab3@1212> XINCLUDE "CLIModeSupport.ab3"
000194A6 <CLIModeSupport.ab3@1214> XINCLUDE "CLIModeSupport.ab3"
000194E4 <CLIModeSupport.ab3@1215> XINCLUDE "CLIModeSupport.ab3"
000194E8 <CLIModeSupport.ab3@1216> XINCLUDE "CLIModeSupport.ab3"
00019526 <CLIModeSupport.ab3@1219> XINCLUDE "CLIModeSupport.ab3"
00019564 <CLIModeSupport.ab3@1220> XINCLUDE "CLIModeSupport.ab3"
00019566 <CLIModeSupport.ab3@1221> XINCLUDE "CLIModeSupport.ab3"
0001956C <CLIModeSupport.ab3@1222> XINCLUDE "CLIModeSupport.ab3"
00019570 <CLIModeSupport.ab3@1223> XINCLUDE "CLIModeSupport.ab3"
00019572 <CLIModeSupport.ab3@1225> XINCLUDE "CLIModeSupport.ab3"
000195B0 <CLIModeSupport.ab3@1226> XINCLUDE "CLIModeSupport.ab3"
000195EE <CLIModeSupport.ab3@1227> XINCLUDE "CLIModeSupport.ab3"
000195F0 <CLIModeSupport.ab3@1228> XINCLUDE "CLIModeSupport.ab3"
000195F2 <CLIModeSupport.ab3@1229> XINCLUDE "CLIModeSupport.ab3"
000195F4 <CLIModeSupport.ab3@1230> XINCLUDE "CLIModeSupport.ab3"
000195FA <CLIModeSupport.ab3@1231> XINCLUDE "CLIModeSupport.ab3"
000195FE <CLIModeSupport.ab3@1232> XINCLUDE "CLIModeSupport.ab3"
0001960E <CLIModeSupport.ab3@1234> XINCLUDE "CLIModeSupport.ab3"
00019626 <CLIModeSupport.ab3@1235> XINCLUDE "CLIModeSupport.ab3"
0001963E <CLIModeSupport.ab3@1236> XINCLUDE "CLIModeSupport.ab3"
00019656 <CLIModeSupport.ab3@1237> XINCLUDE "CLIModeSupport.ab3"
00019680 <CLIModeSupport.ab3@1239> XINCLUDE "CLIModeSupport.ab3"
000196AA <CLIModeSupport.ab3@1240> XINCLUDE "CLIModeSupport.ab3"
000196D8 <CLIModeSupport.ab3@1242> XINCLUDE "CLIModeSupport.ab3"
000196DC <CLIModeSupport.ab3@1243> XINCLUDE "CLIModeSupport.ab3"
00019704 <CLIModeSupport.ab3@1244> XINCLUDE "CLIModeSupport.ab3"
00019706 <CLIModeSupport.ab3@1245> XINCLUDE "CLIModeSupport.ab3"
00019744 <CLIModeSupport.ab3@1246> XINCLUDE "CLIModeSupport.ab3"
00019748 <CLIModeSupport.ab3@1247> XINCLUDE "CLIModeSupport.ab3"
00019786 <CLIModeSupport.ab3@1248> XINCLUDE "CLIModeSupport.ab3"
0001978A <CLIModeSupport.ab3@1249> XINCLUDE "CLIModeSupport.ab3"
000197C8 <CLIModeSupport.ab3@1250> XINCLUDE "CLIModeSupport.ab3"
000197CC <CLIModeSupport.ab3@1251> XINCLUDE "CLIModeSupport.ab3"
0001980A <CLIModeSupport.ab3@1253> XINCLUDE "CLIModeSupport.ab3"
0001980E <CLIModeSupport.ab3@1254> XINCLUDE "CLIModeSupport.ab3"
00019834 <CLIModeSupport.ab3@1256> XINCLUDE "CLIModeSupport.ab3"
0001985A <CLIModeSupport.ab3@1257> XINCLUDE "CLIModeSupport.ab3"
00019880 <CLIModeSupport.ab3@1258> XINCLUDE "CLIModeSupport.ab3"
000198A6 <CLIModeSupport.ab3@1259> XINCLUDE "CLIModeSupport.ab3"
000198CC <CLIModeSupport.ab3@1260> XINCLUDE "CLIModeSupport.ab3"
00019922 <CLIModeSupport.ab3@1261> XINCLUDE "CLIModeSupport.ab3"
00019978 <CLIModeSupport.ab3@1262> XINCLUDE "CLIModeSupport.ab3"
000199C6 <CLIModeSupport.ab3@1263> XINCLUDE "CLIModeSupport.ab3"
00019A1C <CLIModeSupport.ab3@1264> XINCLUDE "CLIModeSupport.ab3"
00019A42 <CLIModeSupport.ab3@1265> XINCLUDE "CLIModeSupport.ab3"
00019A68 <CLIModeSupport.ab3@1266> XINCLUDE "CLIModeSupport.ab3"
00019A8E <CLIModeSupport.ab3@1267> XINCLUDE "CLIModeSupport.ab3"
00019AE4 <CLIModeSupport.ab3@1268> XINCLUDE "CLIModeSupport.ab3"
00019B32 <CLIModeSupport.ab3@1269> XINCLUDE "CLIModeSupport.ab3"
00019B80 <CLIModeSupport.ab3@1270> XINCLUDE "CLIModeSupport.ab3"
00019C3A <CLIModeSupport.ab3@1271> XINCLUDE "CLIModeSupport.ab3"
00019C90 <CLIModeSupport.ab3@1272> XINCLUDE "CLIModeSupport.ab3"
00019CB6 <CLIModeSupport.ab3@1273> XINCLUDE "CLIModeSupport.ab3"
00019CDC <CLIModeSupport.ab3@1274> XINCLUDE "CLIModeSupport.ab3"
00019D02 <CLIModeSupport.ab3@1275> XINCLUDE "CLIModeSupport.ab3"
00019D58 <CLIModeSupport.ab3@1276> XINCLUDE "CLIModeSupport.ab3"
00019DAE <CLIModeSupport.ab3@1277> XINCLUDE "CLIModeSupport.ab3"
00019DFC <CLIModeSupport.ab3@1278> XINCLUDE "CLIModeSupport.ab3"
00019E4A <CLIModeSupport.ab3@1279> XINCLUDE "CLIModeSupport.ab3"
00019E98 <CLIModeSupport.ab3@1280> XINCLUDE "CLIModeSupport.ab3"
00019EE6 <CLIModeSupport.ab3@1281> XINCLUDE "CLIModeSupport.ab3"
00019F34 <CLIModeSupport.ab3@1282> XINCLUDE "CLIModeSupport.ab3"
00019F82 <CLIModeSupport.ab3@1283> XINCLUDE "CLIModeSupport.ab3"
00019FD0 <CLIModeSupport.ab3@1284> XINCLUDE "CLIModeSupport.ab3"
00019FF6 <CLIModeSupport.ab3@1285> XINCLUDE "CLIModeSupport.ab3"
0001A01C <CLIModeSupport.ab3@1286> XINCLUDE "CLIModeSupport.ab3"
0001A042 <CLIModeSupport.ab3@1287> XINCLUDE "CLIModeSupport.ab3"
0001A090 <CLIModeSupport.ab3@1288> XINCLUDE "CLIModeSupport.ab3"
0001A0DE <CLIModeSupport.ab3@1289> XINCLUDE "CLIModeSupport.ab3"
0001A134 <CLIModeSupport.ab3@1290> XINCLUDE "CLIModeSupport.ab3"
0001A182 <CLIModeSupport.ab3@1291> XINCLUDE "CLIModeSupport.ab3"
0001A1D0 <CLIModeSupport.ab3@1292> XINCLUDE "CLIModeSupport.ab3"
0001A21E <CLIModeSupport.ab3@1293> XINCLUDE "CLIModeSupport.ab3"
0001A244 <CLIModeSupport.ab3@1294> XINCLUDE "CLIModeSupport.ab3"
0001A26A <CLIModeSupport.ab3@1295> XINCLUDE "CLIModeSupport.ab3"
0001A290 <CLIModeSupport.ab3@1296> XINCLUDE "CLIModeSupport.ab3"
0001A2C8 <CLIModeSupport.ab3@1297> XINCLUDE "CLIModeSupport.ab3"
0001A2F0 <CLIModeSupport.ab3@1298> XINCLUDE "CLIModeSupport.ab3"
0001A304 <CLIModeSupport.ab3@1299> XINCLUDE "CLIModeSupport.ab3"
0001A378 <CLIModeSupport.ab3@1300> XINCLUDE "CLIModeSupport.ab3"
0001A3BE <CLIModeSupport.ab3@1301> XINCLUDE "CLIModeSupport.ab3"
0001A46C <CLIModeSupport.ab3@1302> XINCLUDE "CLIModeSupport.ab3"
0001A4D8 <CLIModeSupport.ab3@1303> XINCLUDE "CLIModeSupport.ab3"
0001A4E8 <CLIModeSupport.ab3@1304> XINCLUDE "CLIModeSupport.ab3"
0001A50E <CLIModeSupport.ab3@1306> XINCLUDE "CLIModeSupport.ab3"
0001A518 <CLIModeSupport.ab3@1308> XINCLUDE "CLIModeSupport.ab3"
0001A542 <CLIModeSupport.ab3@1309> XINCLUDE "CLIModeSupport.ab3"
0001A548 <CLIModeSupport.ab3@1310> XINCLUDE "CLIModeSupport.ab3"
0001A558 <CLIModeSupport.ab3@1312> XINCLUDE "CLIModeSupport.ab3"
0001A5F8 <CLIModeSupport.ab3@1314> XINCLUDE "CLIModeSupport.ab3"
0001A638 <CLIModeSupport.ab3@1315> XINCLUDE "CLIModeSupport.ab3"
0001A63E <CLIModeSupport.ab3@1317> XINCLUDE "CLIModeSupport.ab3"
0001A6A0 <CLIModeSupport.ab3@1318> XINCLUDE "CLIModeSupport.ab3"
0001A6AA <CLIModeSupport.ab3@1320> XINCLUDE "CLIModeSupport.ab3"
0001A6B4 <CLIModeSupport.ab3@1322> XINCLUDE "CLIModeSupport.ab3"
0001A6CE <CLIModeSupport.ab3@1323> XINCLUDE "CLIModeSupport.ab3"
0001A6F0 <CLIModeSupport.ab3@1399> XINCLUDE "CLIModeSupport.ab3"
0001A712 <CLIModeSupport.ab3@1400> XINCLUDE "CLIModeSupport.ab3"
0001A76C <CLIModeSupport.ab3@1401> XINCLUDE "CLIModeSupport.ab3"
0001A78E <CLIModeSupport.ab3@1402> XINCLUDE "CLIModeSupport.ab3"
0001A7B0 <CLIModeSupport.ab3@1403> XINCLUDE "CLIModeSupport.ab3"
0001A80A <CLIModeSupport.ab3@1404> XINCLUDE "CLIModeSupport.ab3"
0001A84C <CLIModeSupport.ab3@1405> XINCLUDE "CLIModeSupport.ab3"
0001A852 <CLIModeSupport.ab3@1407> XINCLUDE "CLIModeSupport.ab3"
0001A860 <CLIModeSupport.ab3@1408> XINCLUDE "CLIModeSupport.ab3"
0001A866 <CLIModeSupport.ab3@1410> XINCLUDE "CLIModeSupport.ab3"
0001A87A <CLIModeSupport.ab3@1411> XINCLUDE "CLIModeSupport.ab3"
0001A884 <CLIModeSupport.ab3@1412> XINCLUDE "CLIModeSupport.ab3"
0001A8FE <CLIModeSupport.ab3@1413> XINCLUDE "CLIModeSupport.ab3"
0001A908 <CLIModeSupport.ab3@1414> XINCLUDE "CLIModeSupport.ab3"
0001A90E <CLIModeSupport.ab3@1415> XINCLUDE "CLIModeSupport.ab3"
0001A922 <CLIModeSupport.ab3@1418> XINCLUDE "CLIModeSupport.ab3"
0001A92C <CLIModeSupport.ab3@1419> XINCLUDE "CLIModeSupport.ab3"
0001A9AC <CLIModeSupport.ab3@1420> XINCLUDE "CLIModeSupport.ab3"
0001A9B6 <CLIModeSupport.ab3@1421> XINCLUDE "CLIModeSupport.ab3"
0001A9BC <CLIModeSupport.ab3@1422> XINCLUDE "CLIModeSupport.ab3"
0001A9D0 <CLIModeSupport.ab3@1425> XINCLUDE "CLIModeSupport.ab3"
0001A9DA <CLIModeSupport.ab3@1426> XINCLUDE "CLIModeSupport.ab3"
0001AA22 <CLIModeSupport.ab3@1427> XINCLUDE "CLIModeSupport.ab3"
0001AA30 <CLIModeSupport.ab3@1428> XINCLUDE "CLIModeSupport.ab3"
0001AA56 <CLIModeSupport.ab3@1429> XINCLUDE "CLIModeSupport.ab3"
0001AA60 <CLIModeSupport.ab3@1430> XINCLUDE "CLIModeSupport.ab3"
0001AACA <CLIModeSupport.ab3@1431> XINCLUDE "CLIModeSupport.ab3"
0001AB9C <CLIModeSupport.ab3@1432> XINCLUDE "CLIModeSupport.ab3"
0001ABA6 <CLIModeSupport.ab3@1433> XINCLUDE "CLIModeSupport.ab3"
0001ABAC <CLIModeSupport.ab3@1434> XINCLUDE "CLIModeSupport.ab3"
0001ABB6 <CLIModeSupport.ab3@1436> XINCLUDE "CLIModeSupport.ab3"
0001ABBC <CLIModeSupport.ab3@1437> XINCLUDE "CLIModeSupport.ab3"
0001ABD0 <CLIModeSupport.ab3@1440> XINCLUDE "CLIModeSupport.ab3"
0001ABDA <CLIModeSupport.ab3@1441> XINCLUDE "CLIModeSupport.ab3"
0001AC22 <CLIModeSupport.ab3@1442> XINCLUDE "CLIModeSupport.ab3"
0001AC2C <CLIModeSupport.ab3@1443> XINCLUDE "CLIModeSupport.ab3"
0001AC32 <CLIModeSupport.ab3@1444> XINCLUDE "CLIModeSupport.ab3"
0001AC46 <CLIModeSupport.ab3@1447> XINCLUDE "CLIModeSupport.ab3"
0001AC6C <CLIModeSupport.ab3@1448> XINCLUDE "CLIModeSupport.ab3"
0001AC80 <CLIModeSupport.ab3@1451> XINCLUDE "CLIModeSupport.ab3"
0001ACA6 <CLIModeSupport.ab3@1452> XINCLUDE "CLIModeSupport.ab3"
0001ACBA <CLIModeSupport.ab3@1455> XINCLUDE "CLIModeSupport.ab3"
0001ACE0 <CLIModeSupport.ab3@1456> XINCLUDE "CLIModeSupport.ab3"
0001ACF4 <CLIModeSupport.ab3@1459> XINCLUDE "CLIModeSupport.ab3"
0001ACFE <CLIModeSupport.ab3@1460> XINCLUDE "CLIModeSupport.ab3"
0001AD2C <CLIModeSupport.ab3@1461> XINCLUDE "CLIModeSupport.ab3"
0001AD7C <CLIModeSupport.ab3@1462> XINCLUDE "CLIModeSupport.ab3"
0001AD9C <CLIModeSupport.ab3@1463> XINCLUDE "CLIModeSupport.ab3"
0001ADB4 <CLIModeSupport.ab3@1464> XINCLUDE "CLIModeSupport.ab3"
0001AE98 <CLIModeSupport.ab3@1465> XINCLUDE "CLIModeSupport.ab3"
0001AEA2 <CLIModeSupport.ab3@1466> XINCLUDE "CLIModeSupport.ab3"
0001AEA8 <CLIModeSupport.ab3@1467> XINCLUDE "CLIModeSupport.ab3"
0001AEAA <CLIModeSupport.ab3@1469> XINCLUDE "CLIModeSupport.ab3"
0001AEBE <CLIModeSupport.ab3@1470> XINCLUDE "CLIModeSupport.ab3"
0001AEF0 <CLIModeSupport.ab3@1473> XINCLUDE "CLIModeSupport.ab3"
0001AEF6 <CLIModeSupport.ab3@1474> XINCLUDE "CLIModeSupport.ab3"
0001AF3A <CLIModeSupport.ab3@1475> XINCLUDE "CLIModeSupport.ab3"
0001AF4C <CLIModeSupport.ab3@1476> XINCLUDE "CLIModeSupport.ab3"
0001AF5E <CLIModeSupport.ab3@1477> XINCLUDE "CLIModeSupport.ab3"
0001AF68 <CLIModeSupport.ab3@1478> XINCLUDE "CLIModeSupport.ab3"
0001AF6E <CLIModeSupport.ab3@1479> XINCLUDE "CLIModeSupport.ab3"
0001AF78 <CLIModeSupport.ab3@1481> XINCLUDE "CLIModeSupport.ab3"
0001AF92 <CLIModeSupport.ab3@1482> XINCLUDE "CLIModeSupport.ab3"
0001AF92 <AmiBlitz3.ab3@93> XINCLUDE "CLIModeSupport.ab3"
0001B012 <AmiBlitz3.ab3@98> dynassign.s = dos_GetToolString{"ASSIGN",default_assign$}       ; replaced hardcoded path  tomsmart1 2012 03 09
0001B04A <AmiBlitz3.ab3@99> If dynassign <> ""
0001B060 <AmiBlitz3.ab3@100>     *AssignSema.SignalSemaphore = FindSemaphore_(&dynassign)    ; does it already exist?
0001B06A <AmiBlitz3.ab3@101>     If *AssignSema
0001B07A <AmiBlitz3.ab3@102>       ObtainSemaphoreShared_ *AssignSema
0001B080 <AmiBlitz3.ab3@103>     Else                                                        ; no, create one...
0001B0A0 <AmiBlitz3.ab3@104>       *AssignSema = AllocVec_ (SizeOf.SignalSemaphore,#MEMF_PUBLIC|#MEMF_CLEAR)
0001B0AA <AmiBlitz3.ab3@105>       If *AssignSema
0001B0BA <AmiBlitz3.ab3@106>         InitSemaphore_ *AssignSema
0001B0EE <AmiBlitz3.ab3@108>         *AssignSema\ss_Link\ln_Name = AllocVec_(FLen(dynassign)+1,#MEMF_PUBLIC|#MEMF_CLEAR)
0001B100 <AmiBlitz3.ab3@109>         If *AssignSema\ss_Link\ln_Name
0001B13C <AmiBlitz3.ab3@110>           Poke.s  *AssignSema\ss_Link\ln_Name,dynassign
0001B148 <AmiBlitz3.ab3@112>         *AssignSema\ss_Link\ln_Pri  = 1
0001B154 <AmiBlitz3.ab3@113>         *AssignSema\ss_Link\ln_Type = #NT_SIGNALSEM
0001B164 <AmiBlitz3.ab3@115>         AddSemaphore_ *AssignSema
0001B174 <AmiBlitz3.ab3@116>         ObtainSemaphoreShared_ *AssignSema
0001B1C0 <AmiBlitz3.ab3@122>   mydir.s = dos_GetProgDir{"Sys:"}
0001B220 <AmiBlitz3.ab3@123>   If dos_SetAssign{dynassign,mydir,False}
0001B2B4 <AmiBlitz3.ab3@124>     dos_AddAssign{"LIBS:",dos_AddPart{dynassign,"Libs"}}
0001B2EC <AmiBlitz3.ab3@127>   Poke$ ?str_blitz3assign,dynassign
0001B36E <AmiBlitz3.ab3@128>   Poke$ ?str_defaultdbug,dos_AddPart{dynassign,"Debug/DefaultDBug"}
0001B3F0 <AmiBlitz3.ab3@131>   Poke$ ?str_path_acidlibs,dos_AddPart{dynassign, "BlitzLibs/AcidLibs"}
0001B472 <AmiBlitz3.ab3@132>   Poke$ ?str_path_deflibs ,dos_AddPart{dynassign, "BlitzLibs/DefLibs" }
0001B4F4 <AmiBlitz3.ab3@133>   Poke$ ?str_path_userlibs,dos_AddPart{dynassign, "BlitzLibs/UserLibs"}
0001B576 <AmiBlitz3.ab3@134>   Poke$ ?str_path_includes,dos_AddPart{dynassign, "Sourcecodes/Includes"}
0001B5EA <AmiBlitz3.ab3@135>   my_systemdir$    = dos_AddPart{dynassign, "System"}
0001B65E <AmiBlitz3.ab3@136>   my_residentsdir$ = dos_AddPart{dynassign, "BlitzLibs/Residents"}
0001B6D2 <AmiBlitz3.ab3@137>   my_blitzlibsdir$ = dos_AddPart{dynassign, "BlitzLibs"}
0001B700 <AmiBlitz3.ab3@138>   dos_CreateDir{my_blitzlibsdir$}
0001B724 <AmiBlitz3.ab3@139>   dos_CreateDir{Peek$(?str_path_userlibs)}
0001B752 <AmiBlitz3.ab3@140>   dos_CreateDir{my_residentsdir$}
0001B780 <AmiBlitz3.ab3@141>   dos_CreateDir{my_systemdir$}
0001B84A <AmiBlitz3.ab3@147> pedfile$ = dos_GetToolString{"EDITOR",dos_AddPart{my_systemdir$,"PED"}}
0001B882 <AmiBlitz3.ab3@148> Poke.s ?str_pedfile,pedfile$
0001B8C0 <AmiBlitz3.ab3@150> If dos_GetToolState{"START_WITHOUT_LIBS"} = -1
0001B8D0 <AmiBlitz3.ab3@151>   Poke.b ?start_without_libs,1
0001B8D6 <AmiBlitz3.ab3@152> Else
0001B8E6 <AmiBlitz3.ab3@153>   Poke.b ?start_without_libs,0
0001B924 <AmiBlitz3.ab3@156> If dos_GetToolState{"ONEPASSCOMPILING"} = -1
0001B92A <AmiBlitz3.ab3@157>   OnePassCompiling.l = True
0001B930 <AmiBlitz3.ab3@158> Else
0001B936 <AmiBlitz3.ab3@159>   OnePassCompiling   = False
0001B95C <AmiBlitz3.ab3@162> !TRANS_INIT{"AmiBlitz3"}     ; init localization via translation.include
0001B98A <AmiBlitz3.ab3@167> If ( FindResident_("MorphOS") )
0001B99A <AmiBlitz3.ab3@168>   Poke.b ?MorphOS,1      ; set it to use CacheClear_E
0001B9A0 <AmiBlitz3.ab3@169> Else
0001B9B0 <AmiBlitz3.ab3@170>   Poke.b ?MorphOS,0      ; set it to use CacheClear_U
0001B9BC <AmiBlitz3.ab3@174> dbg_fid.l = -1 ; no debug file id yet!
0001B9CE <AmiBlitz3.ab3@177> Poke.l ?maxerrorcount,#defaultmaxerrorcount                ; set the default value  tomsmart1
0001B9D8 <AmiBlitz3.ab3@179> If CLIMode
0001B9DE <AmiBlitz3.ab3@182>   err.l      = False                                       ; indicate that an error has occured
0001B9E4 <AmiBlitz3.ab3@183>   showhelp.l = False                                       ; show the CLI tool's help
0001BA3C <AmiBlitz3.ab3@186>   cli_progpath.s      = dos_GetProgDir{default_assign$}    ; replaced hardcoded path  tomsmart1 2012 03 09
0001BA64 <AmiBlitz3.ab3@187>   cli_sourcefile.s    = ""
0001BA8C <AmiBlitz3.ab3@188>   cli_exefile.s       = ""
0001BAB4 <AmiBlitz3.ab3@189>   cli_savefile.s      = ""
0001BADC <AmiBlitz3.ab3@190>   cli_dumpfile.s      = ""
0001BB04 <AmiBlitz3.ab3@191>   cli_includepath.s   = ""
0001BB2C <AmiBlitz3.ab3@192>   cli_blitzlibpath.s  = ""
0001BB32 <AmiBlitz3.ab3@193>   cli_debuginfo.l     = False
0001BB38 <AmiBlitz3.ab3@194>   cli_run.l           = False
0001BB40 <AmiBlitz3.ab3@195>   cli_dumpflags.l     = $FFFFFFFF
0001BB68 <AmiBlitz3.ab3@196>   cli_info.s          = ""
0001BB6E <AmiBlitz3.ab3@197>   cli_release.l       = False
0001BB78 <AmiBlitz3.ab3@198>   cli_numargs.l       = dos_GetNumArgs{}
0001BB7E <AmiBlitz3.ab3@199>   cli_gui.l           = False
0001BB86 <AmiBlitz3.ab3@200>   cli_dumpform.l      = 1 ; 0 = bin, 1 = ASCII
0001BB8E <AmiBlitz3.ab3@201>   cli_verbose.l       = 1
0001BB96 <AmiBlitz3.ab3@202>   cli_comdbgflags.l   = $00000000             ; added to support compiler and debugger settings via CLI  tomsmart1
0001BB9E <AmiBlitz3.ab3@203>   cli_comstrbufsize.l = 0
0001BBA6 <AmiBlitz3.ab3@204>   cli_exestacksize.l  = 0
0001BBAE <AmiBlitz3.ab3@205>   cli_maxerrors.l     = 0                     ; added to make maxerrorcount changable in CLIMode  tomsmart1
0001BBB4 <AmiBlitz3.ab3@206>   OnePassCompiling    = False
0001BBCC <AmiBlitz3.ab3@207>   If cli_numargs=0 Then showhelp=True
0001BBFC <AmiBlitz3.ab3@211>     arg.s = dos_GetNextArg{}                               ; get the next CLI argument
0001BC48 <AmiBlitz3.ab3@212>     larg.s = LCase$(arg)                                   ; lower case the option string
0001BD10 <AmiBlitz3.ab3@213>     If Left$(larg,1)="-" Then larg = Right$(larg,FLen(larg)-1)
0001BD46 <AmiBlitz3.ab3@214>     Select larg
0001BD92 <AmiBlitz3.ab3@215>       Case "s" : larg="source"
0001BDE4 <AmiBlitz3.ab3@216>       Case "e" : larg="exe"
0001BE36 <AmiBlitz3.ab3@217>       Case "d" : larg="debug"
0001BE88 <AmiBlitz3.ab3@218>       Case "r" : larg="release"
0001BEDA <AmiBlitz3.ab3@219>       Case "h" : larg="help"
0001BF2C <AmiBlitz3.ab3@220>       Case "v" : larg="verbose"
0001BF7E <AmiBlitz3.ab3@221>       Case "1" : larg="1pass"
0001BF8C <AmiBlitz3.ab3@222>     End Select
0001BFC2 <AmiBlitz3.ab3@224>     Select larg
0001C016 <AmiBlitz3.ab3@225>       Case "exe"      : cli_exefile     = dos_GetNextArg{}
0001C070 <AmiBlitz3.ab3@226>       Case "source"   : cli_sourcefile  = dos_GetNextArg{}
0001C0CA <AmiBlitz3.ab3@227>       Case "save"     : cli_savefile    = dos_GetNextArg{}
0001C0FA <AmiBlitz3.ab3@228>       Case "debug"    : cli_debuginfo   = True
0001C12A <AmiBlitz3.ab3@229>       Case "run"      : cli_run         = True
0001C15A <AmiBlitz3.ab3@230>       Case "release"  : cli_release     = True
0001C18A <AmiBlitz3.ab3@231>       Case "ped"      : cli_gui         = True
0001C1E4 <AmiBlitz3.ab3@232>       Case "dform"    : cli_dumpform.l  = Vallong(dos_GetNextArg{})
0001C256 <AmiBlitz3.ab3@233>       Case "dump"     : cli_info        = LCase$(dos_GetNextArg{})
0001C286 <AmiBlitz3.ab3@234>                         cli_dumpfile    = dos_GetNextArg{}
0001C28E <AmiBlitz3.ab3@235>                         cli_dumpflags   = $0
0001C2EE <AmiBlitz3.ab3@236>                         If Instr(cli_info,"all"  ) Then cli_dumpflags | $FFFFFFFF
0001C34E <AmiBlitz3.ab3@237>                         If Instr(cli_info,"token") Then cli_dumpflags | #DUMPFLG_TOKENS
0001C3AE <AmiBlitz3.ab3@238>                         If Instr(cli_info,"label") Then cli_dumpflags | #DUMPFLG_LABELS
0001C40E <AmiBlitz3.ab3@239>                         If Instr(cli_info,"var"  ) Then cli_dumpflags | #DUMPFLG_VARS
0001C46E <AmiBlitz3.ab3@240>                         If Instr(cli_info,"const") Then cli_dumpflags | #DUMPFLG_CONSTANTS
0001C4CE <AmiBlitz3.ab3@241>                         If Instr(cli_info,"func" ) Then cli_dumpflags | #DUMPFLG_FUNCTIONS
0001C52E <AmiBlitz3.ab3@242>                         If Instr(cli_info,"macro") Then cli_dumpflags | #DUMPFLG_MACROS
0001C58E <AmiBlitz3.ab3@243>                         If Instr(cli_info,"type" ) Then cli_dumpflags | #DUMPFLG_NEWTYPES
0001C5EE <AmiBlitz3.ab3@244>                         If Instr(cli_info,"lib"  ) Then cli_dumpflags | #DUMPFLG_LIBS
0001C600 <AmiBlitz3.ab3@245>                         If cli_dumpflags = $0
0001C606 <AmiBlitz3.ab3@246>                          err=True
0001C69A <AmiBlitz3.ab3@247>                          NPrint "\\1b[1m*** ERROR: Invalid flags for dumpfile \\22",cli_info,"\\22 specified!\\1b[0m"
0001C70C <AmiBlitz3.ab3@250>       Case "setcom"   : cli_setcom.s    = LCase$(dos_GetNextArg{})
0001C714 <AmiBlitz3.ab3@251>                         cli_comflags.l  = $0
0001C774 <AmiBlitz3.ab3@252>                         If Instr(cli_setcom,"icon"  ) Then cli_comflags | #CLI_COMSETICONFLAG     ; create Icon
0001C7D4 <AmiBlitz3.ab3@253>                         If Instr(cli_setcom,"small" ) Then cli_comflags | #CLI_COMSETSMALLFLAG    ; make smallest code
0001C834 <AmiBlitz3.ab3@254>                         If Instr(cli_setcom,"func"  ) Then cli_comflags | #CLI_COMSETFUNCFLAG     ; use Functionoptimizer
0001C894 <AmiBlitz3.ab3@255> 
0001C8F4 <AmiBlitz3.ab3@256>                         If Instr(cli_setcom,"dbgf"  ) Then cli_comflags | #CLI_COMSETDBGFFLAG     ; create a .dbf file
0001C90E <AmiBlitz3.ab3@257>                         If (cli_comflags & #CLI_COMSETALLFLAGS) = 0                               ; test if args are correct
0001C914 <AmiBlitz3.ab3@258>                           err=True                                                                ; no
0001C9A8 <AmiBlitz3.ab3@259>                           NPrint "\\1b[1m*** ERROR: Invalid flags for setcom \\22",cli_setcom,"\\22 specified!\\1b[0m"
0001C9AE <AmiBlitz3.ab3@260>                         Else
0001C9BC <AmiBlitz3.ab3@261>                           cli_comdbgflags | cli_comflags                                          ; yes then add it
0001CA2E <AmiBlitz3.ab3@264>       Case "setdbg"   : cli_setdbg.s    = LCase$(dos_GetNextArg{})
0001CA36 <AmiBlitz3.ab3@265>                         cli_dbgflags.l  = $0
0001CA96 <AmiBlitz3.ab3@266>                         If Instr(cli_setdbg,"auto" ) Then cli_dbgflags | #CLI_DEBUGAUTOFLAG       ; autorun
0001CAF6 <AmiBlitz3.ab3@267>                         If Instr(cli_setdbg,"irq"  ) Then cli_dbgflags | #CLI_DEBUGIRQFLAG        ; interrupt check
0001CB56 <AmiBlitz3.ab3@268>                         If Instr(cli_setdbg,"asm"  ) Then cli_dbgflags | #CLI_DEBUGASMFLAG        ; assembler check
0001CBB6 <AmiBlitz3.ab3@269>                         If Instr(cli_setdbg,"ofl"  ) Then cli_dbgflags | #CLI_DEBUGOFLFLAG        ; overflow check
0001CBD0 <AmiBlitz3.ab3@270>                         If (cli_dbgflags & #CLI_DEBUGALLFLAGS) = 0                                ; yes then add it
0001CBD6 <AmiBlitz3.ab3@271>                           err=True                                                                ; no
0001CC6A <AmiBlitz3.ab3@272>                           NPrint "\\1b[1m*** ERROR: Invalid flags for setdbg \\22",cli_setdbg,"\\22 specified!\\1b[0m"
0001CC70 <AmiBlitz3.ab3@273>                         Else
0001CC7E <AmiBlitz3.ab3@274>                           cli_comdbgflags | cli_dbgflags                                          ; yes then add it
0001CCD8 <AmiBlitz3.ab3@276>       Case "strbufsize": cli_comstrbufsize = Vallong(dos_GetNextArg{})
0001CD32 <AmiBlitz3.ab3@277>       Case "stacksize" : cli_exestacksize  = Vallong(dos_GetNextArg{})
0001CD8C <AmiBlitz3.ab3@278> 
0001CDB2 <AmiBlitz3.ab3@279>                          If ((cli_maxerrors > 0) AND (cli_maxerrors <4097))                        ; check
0001CDC2 <AmiBlitz3.ab3@280>                            Poke.l ?maxerrorcount,cli_maxerrors
0001CDF2 <AmiBlitz3.ab3@282>       Case "1pass"     : OnePassCompiling = True   ; added to use big buffers for compile so only 1 pass is needed  tomsmart1
0001CE4C <AmiBlitz3.ab3@283>       Case "verbose"   : cli_verbose      = Vallong(dos_GetNextArg{})
0001CE7C <AmiBlitz3.ab3@284>       Case "help"      : showhelp         = True             ; show the help and quit
0001CE82 <AmiBlitz3.ab3@285>       Default
0001CEBA <AmiBlitz3.ab3@286>         If arg><""
0001CF4E <AmiBlitz3.ab3@287>           NPrint "\\1b[1m*** ERROR: Unknown option \\22",arg,"\\22 specified!\\1b[0m"
0001CF54 <AmiBlitz3.ab3@288>           err = True
0001CF62 <AmiBlitz3.ab3@290>     End Select
0001CFAE <AmiBlitz3.ab3@291>   Until arg = "" OR err=True          ; until we processed all arguments
0001CFD0 <AmiBlitz3.ab3@294>   If err><False OR showhelp = True
0001CFDA <AmiBlitz3.ab3@295>     If showhelp
0001D03C <AmiBlitz3.ab3@296>     NPrint "AmiBlitz ",Peek.s(?myversion)
0001D074 <AmiBlitz3.ab3@297>     NPrint "\\nSyntax: AmiBlitz3 [options]"
0001D0AC <AmiBlitz3.ab3@298>     NPrint "\\nOptions:"
0001D0E4 <AmiBlitz3.ab3@299>     NPrint "  -(s)ource <file>    : input source code filename (bb2, ab2 or ab3)"
0001D11C <AmiBlitz3.ab3@300>     NPrint "  -(e)xe <file>       : output executable filename"
0001D154 <AmiBlitz3.ab3@301>     NPrint "  -(d)ebug            : compile and start runtime debugger"
0001D18C <AmiBlitz3.ab3@302>     NPrint "  -(r)elease          : create release executable (size optimized)"
0001D1C4 <AmiBlitz3.ab3@303>     NPrint "  -run                : run compiled program"
0001D1FC <AmiBlitz3.ab3@304>     NPrint "  -dump <info> <file> : dump compiler internals to file"
0001D234 <AmiBlitz3.ab3@305>     NPrint "                        (info=all|token|label|var|func|const|macro|type|lib)"
0001D26C <AmiBlitz3.ab3@306>     NPrint "  -setcom <options>   : set compiler settings (options=icon|small|func|ldbg|dbgf)"       ; added  tomsmart1
0001D2A4 <AmiBlitz3.ab3@307>     NPrint "  -setdbg <check>     : set debugger settings (check=auto|irq|asm|ofl)"                  ; added  tomsmart1
0001D2DC <AmiBlitz3.ab3@308>     NPrint "  -strbufsize <n>     : set the string buffer size of the compiler"                      ; added  tomsmart1
0001D314 <AmiBlitz3.ab3@309>     NPrint "  -stacksize <n>      : set the stacksize for the exe if it run/debug"                   ; added  tomsmart1
0001D34C <AmiBlitz3.ab3@310>     NPrint "  -maxerrors <n>      : set maxerrorcounter of the compiler (1-4096; default=99)"        ; added  tomsmart1
0001D384 <AmiBlitz3.ab3@311>     NPrint "  -(1)pass            : use large buffers for compile"
0001D3BC <AmiBlitz3.ab3@312>     NPrint "  -dform <n>          : format of compiler internals dump (0=bin, 1=ASCII; default=1)"
0001D3F4 <AmiBlitz3.ab3@313>     NPrint "  -PED                : start AmiBlitz3 IDE (PED)"
0001D42C <AmiBlitz3.ab3@314>     NPrint "  -save <file>        : re-save source code (convert format, if needed)"
0001D464 <AmiBlitz3.ab3@315>     NPrint "  -(v)erbose <n>      : set verbose level (0, 1 or 2; default=1)"
0001D49C <AmiBlitz3.ab3@316>     NPrint "  -(h)elp             : show this help"
0001D4D4 <AmiBlitz3.ab3@317>     NPrint "\\nExample:"
0001D50C <AmiBlitz3.ab3@318>     NPrint "  AmiBlitz3 -s \\22DH0:Sourcecodes/MyProgram.ab3\\22 -e RAM:MyProgram.exe"
0001D544 <AmiBlitz3.ab3@319>     NPrint "\\nNote: To start the AmiBlitz3 IDE, run from Workbench or with -PED option."
0001D54A <AmiBlitz3.ab3@322>     Goto abnormal_exit
0001D566 <AmiBlitz3.ab3@325>   If cli_gui        Then CLIMode = False : error_SetFlags{#error_requester}
0001D5CA <AmiBlitz3.ab3@326>   If cli_sourcefile Then Poke.s ?str_tempfilename,cli_sourcefile
0001D5DA <AmiBlitz3.ab3@329> Poke.l ?CLIMode,CLIMode
0001D5FE <AmiBlitz3.ab3@364>   Dim incdim.s (#maxincludes)
0001D622 <AmiBlitz3.ab3@365>   Dim incline.l(#maxincludes)
0001D63C <AmiBlitz3.ab3@633> Function.s Get_Libinfo{addr_libnum.l}
0001D648 <AmiBlitz3.ab3@635>   lib_ab2.b = False : lib_os.b = False
0001D64E <AmiBlitz3.ab3@636>   addr_counter.l = addr_libnum
0001D656 <AmiBlitz3.ab3@637>   skip.l = 0
0001D668 <AmiBlitz3.ab3@638>   If addr_counter=0
0001D6A2 <AmiBlitz3.ab3@639>     error{"INTERNAL: \\__THIS_FUNCTION: Invalid pointer!"}
0001D6C0 <AmiBlitz3.ab3@640>     Function Return ""
0001D6CE <AmiBlitz3.ab3@645>     mem.l = Peek.l(addr_counter)
0001D6DC <AmiBlitz3.ab3@650>     addr_counter + 2
0001D6FC <AmiBlitz3.ab3@651>     If (mem = $0000ffff) Then lib_ab2= True : skip = 8
0001D716 <AmiBlitz3.ab3@652>     If (mem LSR 16) = $ffe2
0001D71C <AmiBlitz3.ab3@654>       lib_os = True
0001D724 <AmiBlitz3.ab3@655>       skip = 10
0001D76A <AmiBlitz3.ab3@656>       If Peek$(addr_counter+skip) = "" Then skip + 4
0001D7AE <AmiBlitz3.ab3@658>   Until (lib_ab2=True OR lib_os = True) OR (addr_counter>addr_libnum + $400)
0001D7C4 <AmiBlitz3.ab3@660>   If (addr_counter>addr_libnum + $400)
0001D7E2 <AmiBlitz3.ab3@662>     Function Return ""
0001D7E8 <AmiBlitz3.ab3@663>   Else
0001D80C <AmiBlitz3.ab3@664>     Function Return Peek$(addr_counter + skip)
0001D816 <AmiBlitz3.ab3@666> End Function
0001D834 <AmiBlitz3.ab3@711>   !asm
0001D83A <AmiBlitz3.ab3@712>   MOVEA.l _execbase,A6
0001D83E <AmiBlitz3.ab3@713>   MOVEM.l d0/a0,-(a7)
0001D840 <AmiBlitz3.ab3@715>   MOVEQ #127,d0
0001D846 <AmiBlitz3.ab3@716>   LEA chartab,a0
0001D84C <AmiBlitz3.ab3@719>     MOVE.b #1,128(a0)
0001D84E <AmiBlitz3.ab3@720>     CLR.b (a0)+
0001D852 <AmiBlitz3.ab3@721>   DBF d0,'l12
0001D858 <AmiBlitz3.ab3@723>   LEA chartab,a0
0001D85C <AmiBlitz3.ab3@724>   MOVE.b #1,(a0)
0001D862 <AmiBlitz3.ab3@725>   MOVE.b #1,","(a0)
0001D868 <AmiBlitz3.ab3@726>   MOVE.b #1,";"(a0)
0001D86E <AmiBlitz3.ab3@727>   MOVE.b #1,":"(a0)
0001D874 <AmiBlitz3.ab3@728>   MOVE.b #1,"("(a0)
0001D87A <AmiBlitz3.ab3@729>   MOVE.b #1,")"(a0)
0001D880 <AmiBlitz3.ab3@730>   MOVE.b #1,"="(a0)
0001D886 <AmiBlitz3.ab3@731>   MOVE.b #1,"+"(a0)
0001D88C <AmiBlitz3.ab3@732>   MOVE.b #1,"-"(a0)
0001D892 <AmiBlitz3.ab3@733>   MOVE.b #1,"*"(a0)
0001D898 <AmiBlitz3.ab3@734>   MOVE.b #1,"/"(a0)
0001D89E <AmiBlitz3.ab3@735>   MOVE.b #1,"$"(a0)
0001D8A4 <AmiBlitz3.ab3@736>   MOVE.b #1,"%"(a0)
0001D8AA <AmiBlitz3.ab3@737>   MOVE.b #1,"."(a0)
0001D8B0 <AmiBlitz3.ab3@738>   MOVE.b #1,"["(a0)
0001D8B6 <AmiBlitz3.ab3@739>   MOVE.b #1,"]"(a0)
0001D8BC <AmiBlitz3.ab3@740>   MOVE.b #1,"{"(a0)
0001D8C2 <AmiBlitz3.ab3@741>   MOVE.b #1,"}"(a0)
0001D8C8 <AmiBlitz3.ab3@742>   MOVE.b #1,"\"(a0)
0001D8CE <AmiBlitz3.ab3@743>   MOVE.b #1,">"(a0)
0001D8D4 <AmiBlitz3.ab3@744>   MOVE.b #1,"<"(a0)
0001D8DA <AmiBlitz3.ab3@745>   MOVE.b #1,"&"(a0)
0001D8E0 <AmiBlitz3.ab3@746>   MOVE.b #1,"|"(a0)
0001D8E6 <AmiBlitz3.ab3@747>   MOVE.b #1,"^"(a0)
0001D8EC <AmiBlitz3.ab3@748>   MOVE.b #1,$7e(a0)
0001D8F2 <AmiBlitz3.ab3@749>   MOVE.w #$0101,1(a0)
0001D8F8 <AmiBlitz3.ab3@751>   LEA instrtab,a0
0001D8FE <AmiBlitz3.ab3@752>   MOVE.l #labelhash-instrtab,d0
0001D900 <AmiBlitz3.ab3@753>   ASR.l #2,d0
0001D902 <AmiBlitz3.ab3@754>   SUBQ.l #1,d0
0001D904 <AmiBlitz3.ab3@757>    CLR.l (a0)+
0001D906 <AmiBlitz3.ab3@758>    SUBQ.l #1,d0
0001D90A <AmiBlitz3.ab3@759>   BNE 'l10
0001D910 <AmiBlitz3.ab3@761>   LEA allowtab,a0
0001D916 <AmiBlitz3.ab3@762>   MOVE.l #255,d0
0001D918 <AmiBlitz3.ab3@765>     CLR.b (a0)+
0001D91C <AmiBlitz3.ab3@766>   DBF d0,'la1
0001D922 <AmiBlitz3.ab3@768>   LEA allowtab,a0
0001D928 <AmiBlitz3.ab3@769>   MOVE.b #1,$7d(a0)
0001D92E <AmiBlitz3.ab3@770>   MOVE.b #1,$7c(a0)
0001D934 <AmiBlitz3.ab3@771>   MOVE.b #1,$44(a0)
0001D93A <AmiBlitz3.ab3@772>   MOVE.b #1,$45(a0)
0001D940 <AmiBlitz3.ab3@773>   MOVE.b #1,$b9(a0)
0001D946 <AmiBlitz3.ab3@774>   MOVE.b #1,$89(a0)
0001D94C <AmiBlitz3.ab3@775>   MOVE.b #1,$ce(a0)
0001D952 <AmiBlitz3.ab3@776>   MOVE.b #1,$cf(a0)
0001D958 <AmiBlitz3.ab3@777>   MOVE.b #1,$d0(a0)
0001D95E <AmiBlitz3.ab3@778>   MOVE.b #1,$cd(a0)
0001D960 <AmiBlitz3.ab3@779>   MOVEQ #0,d0
0001D966 <AmiBlitz3.ab3@781>   MOVEA.l _execbase,a6
0001D96C <AmiBlitz3.ab3@786>   MOVE.l #$10000,d0
0001D972 <AmiBlitz3.ab3@787>   MOVE.l #80000,d1
0001D974 <AmiBlitz3.ab3@788>   MOVE.l d1,d2
0001D978 <AmiBlitz3.ab3@789>   JSR _CreatePool(a6)                                      ; alloc memory for own stuff
0001D97E <AmiBlitz3.ab3@790>   MOVE.l d0,mempool
0001D982 <AmiBlitz3.ab3@791>   MOVEM.l (a7)+,d0/a0
0001D988 <AmiBlitz3.ab3@792>   TST.l mempool
0001D98C <AmiBlitz3.ab3@793>   BEQ shutdown_compiler
0001D990 <AmiBlitz3.ab3@795>   MOVEA.l $114(A6),A4                                      ; get adress of this.Task-Structure
0001D996 <AmiBlitz3.ab3@796>   MOVE.l A4,ptr_ThisTask
0001D99A <AmiBlitz3.ab3@798>   BSR.w open_doslibrary
0001D99E <AmiBlitz3.ab3@799>   BEQ.w shutdown_compiler
0001D9A4 <AmiBlitz3.ab3@801>   MOVE.l D2,stacksize
0001D9A6 <AmiBlitz3.ab3@808>   MOVEQ.l #$00,D0
0001D9AC <AmiBlitz3.ab3@809>   LEA tokens,A0
0001D9AE <AmiBlitz3.ab3@812>     ADDQ.w #1,D0
0001D9B0 <AmiBlitz3.ab3@813>     MOVE.l (A0),D1
0001D9B4 <AmiBlitz3.ab3@814>     BEQ.w 'gotlast
0001D9B6 <AmiBlitz3.ab3@815>     MOVEA.l D1,A0
0001D9BA <AmiBlitz3.ab3@816>  BRA.w 'loop
0001D9C0 <AmiBlitz3.ab3@819>   MOVE.l A0,end_of_tokenlist
0001D9C4 <AmiBlitz3.ab3@821>   BSR.w makeasmtable
0001D9CC <AmiBlitz3.ab3@823>   MOVE.w #$FFFF,returncode_org    ; was -1                         ;#-1,returncode
0001D9D0 <AmiBlitz3.ab3@825>   BSR.w open_mathlibrary
0001D9D4 <AmiBlitz3.ab3@826>   BEQ.w freemem_and_quit4
0001D9DA <AmiBlitz3.ab3@828>   MOVE.l constmaxpc,D0
0001D9DC <AmiBlitz3.ab3@829>   MOVEQ.l #$02,D1                                          ;chipmem            ;01 org source
0001D9E2 <AmiBlitz3.ab3@830>   MOVEA.l _execbase,A6
0001D9E6 <AmiBlitz3.ab3@831>   JSR _AllocMem(A6)                                        ;mem for branch routine
0001D9EC <AmiBlitz3.ab3@832>   MOVE.l D0,constpcat
0001D9F0 <AmiBlitz3.ab3@833>   BEQ.w freemem_and_quit3
0001D9F6 <AmiBlitz3.ab3@834>   ADD.l constmaxpc,D0
0001D9FC <AmiBlitz3.ab3@835>   MOVE.l D0,constlibat
0001DA02 <AmiBlitz3.ab3@837>   MOVE.l macrobuffer_size,D0
0001DA08 <AmiBlitz3.ab3@839>   CMP.l #DEFAULT_MACROBUFFERSIZE,d0                        ; replaced by a constant  tomsmart1
0001DA0C <AmiBlitz3.ab3@840>   BGE 'ok
0001DA12 <AmiBlitz3.ab3@841>     MOVE.l #DEFAULT_MACROBUFFERSIZE,d0
0001DA18 <AmiBlitz3.ab3@842>     MOVE.l d0,macrobuffer_size                             ; replaced with a constant tomsmart1
0001DA1A <AmiBlitz3.ab3@845>   ADDQ.l #4,d0
0001DA1C <AmiBlitz3.ab3@847>   MOVEQ.l #$01,D1
0001DA22 <AmiBlitz3.ab3@848>   MOVEA.l _execbase,A6
0001DA26 <AmiBlitz3.ab3@849>   JSR _AllocMem(A6)                                        ;macro mem
0001DA28 <AmiBlitz3.ab3@851>   MOVE.l d0,a0
0001DA2E <AmiBlitz3.ab3@852>   MOVE.l macrobuffer_size,(a0)+
0001DA30 <AmiBlitz3.ab3@853>   MOVE.l a0,d0
0001DA36 <AmiBlitz3.ab3@855>   MOVE.l D0,ptr_macrobuffer_begin
0001DA3A <AmiBlitz3.ab3@856>   BEQ.w freemem_and_quit2
0001DA40 <AmiBlitz3.ab3@857>   ADD.l macrobuffer_size,D0
0001DA46 <AmiBlitz3.ab3@858>   MOVE.l D0,ptr_macrobuffer_end
0001DA4C <AmiBlitz3.ab3@861>   TST.l CLIMode
0001DA50 <AmiBlitz3.ab3@862>   BEQ load_ped
0001DA7A <AmiBlitz3.ab3@865>   !basic
0001DA84 <AmiBlitz3.ab3@866>   succ.l = InitEmulatedPED{}
0001DA88 <AmiBlitz3.ab3@867>   GetD0 succ
0001DAA6 <AmiBlitz3.ab3@868>   !asm
0001DAA8 <AmiBlitz3.ab3@869>   TST.l d0
0001DAAC <AmiBlitz3.ab3@870>   BEQ freemem_and_quit
0001DAB2 <AmiBlitz3.ab3@871> JMP skip_ped
0001DAB8 <AmiBlitz3.ab3@877>   MOVE.l #str_pedfile,D1                                   ; Load PED
0001DABE <AmiBlitz3.ab3@878>   MOVEA.l _dosbase,A6
0001DAC2 <AmiBlitz3.ab3@879>   JSR _LoadSeg(A6)
0001DAC8 <AmiBlitz3.ab3@880>   MOVE.l D0,ptr_seg_ped
0001DACC <AmiBlitz3.ab3@882>   BEQ.w cant_load_PED         ; was freemem_and_quit  added error massage  that we can't load it  tomsmart1  2012 03
0001DACE <AmiBlitz3.ab3@886>   MOVEA.l D0,A2
0001DAD0 <AmiBlitz3.ab3@887>   ADDA.l A2,A2
0001DAD2 <AmiBlitz3.ab3@888>   ADDA.l A2,A2
0001DAD8 <AmiBlitz3.ab3@890>   LEA teddata,a1                                           ;lea edstruct,A1
0001DADE <AmiBlitz3.ab3@891>   MOVE.l #"TEDY",d1
0001DAE2 <AmiBlitz3.ab3@892>   JSR 4(A2)                                                ; Run PED
0001DAE8 <AmiBlitz3.ab3@894>   MOVE.l A0,ped_startup_addr                               ; PED returns address of routine "startup_code"
0001DAEE <AmiBlitz3.ab3@895>   MOVE.l A1,comdata                                        ; PED returns address of comdata-area in A1
0001DB2C <AmiBlitz3.ab3@897>   !ComData_GetW{comWord_PEDIsAvailable,D0}                 ; if PED_IsAvailable=0, quit AmiBlitz
0001DB30 <AmiBlitz3.ab3@898>   BEQ.w unload_ped
0001DB34 <AmiBlitz3.ab3@899> 
0001DB38 <AmiBlitz3.ab3@900>   BNE old_version_of_PED                                   ; no, than exit
0001DB76 <AmiBlitz3.ab3@906>   !ComData_GetL{comData_Magic,D0}
0001DB7C <AmiBlitz3.ab3@907>   CMP.l ##MagicIdentifier_Long,D0                          ;"~::~",D0    ; replace with a constants  tomsmart1 2012 03 09
0001DB80 <AmiBlitz3.ab3@908>   BNE unload_ped
0001DBB8 <AmiBlitz3.ab3@911>   !ComData_SetL{comPtr_Trap15            ,#directTrap15 }
0001DBF0 <AmiBlitz3.ab3@912>   !ComData_SetL{comPtr_DirectBuffer      ,#directbuffer}
0001DC28 <AmiBlitz3.ab3@913>   !ComData_SetL{comPtr_MacroBase         ,#macrobase}
0001DC60 <AmiBlitz3.ab3@914>   !ComData_SetL{comPtr_VarBase           ,#varbase }
0001DC98 <AmiBlitz3.ab3@915>   !ComData_SetL{comPtr_InstrBase         ,#instrtab}
0001DCD0 <AmiBlitz3.ab3@916>   !ComData_SetL{comPtr_LibPointer        ,#libpointer}
0001DD08 <AmiBlitz3.ab3@917>   !ComData_SetL{comPtr_CompilerVersion   ,#myversion }
0001DD40 <AmiBlitz3.ab3@918>   !ComData_SetL{comPtr_VersionInformation,#versioninformation}
0001DD78 <AmiBlitz3.ab3@919>   !ComData_SetL{comPtr_NumberOfBuilds    ,#number_of_builds}
0001DDB0 <AmiBlitz3.ab3@920>   !ComData_SetL{comFunc_SaveSource       ,#ab3_SaveSource}
0001DDE8 <AmiBlitz3.ab3@921>   !ComData_SetL{comFunc_LoadSource       ,#ab3_LoadSource}
0001DE20 <AmiBlitz3.ab3@922>   !ComData_SetL{comFunc_ClearSource      ,#ab3_ClearSource}
0001DE58 <AmiBlitz3.ab3@925>   !ComData_SetL{comFunc_CalculatExpression       ,#menu_calculator}
0001DE90 <AmiBlitz3.ab3@926>   !ComData_SetL{comPtr_CalculatorExpressionString,#str_calcexpression}
0001DEC8 <AmiBlitz3.ab3@929>   !ComData_SetL{comFunc_BackupXtraData           ,#BackupXtraData}
0001DF00 <AmiBlitz3.ab3@930>   !ComData_SetL{comFunc_RestoreXtraData          ,#RestoreXtraData}
0001DF38 <AmiBlitz3.ab3@932>   !ComData_SetL{comFunc_GetObjectEntry           ,#getobjectentry}
0001DF70 <AmiBlitz3.ab3@933>   !ComData_SetL{comFunc_StoreMaxObjects          ,#storemaxobjects}
0001DFA8 <AmiBlitz3.ab3@935>   !ComData_SetL{comFunc_ReloadResidentsForPED    ,#ReloadResidentsForPED}
0001DFE0 <AmiBlitz3.ab3@936>   !ComData_SetL{comFunc_FreeClearResidentsForPED ,#FreeClearResidentsForPED}    ; add tomsmart1 2012 06 09
0001E018 <AmiBlitz3.ab3@938>   !ComData_SetL{comPtr_Residents_Table           ,#residents_table}
0001E050 <AmiBlitz3.ab3@939>   !ComData_SetL{comPtr_StringBuffer_Long         ,#stringbuffer}
0001E088 <AmiBlitz3.ab3@940>   !ComData_SetL{comPtr_Stacksize_Long            ,#stacksize}
0001E0C0 <AmiBlitz3.ab3@941>   !ComData_SetL{comPtr_Create_IconFile_Byte      ,#create_iconfile}
0001E0F8 <AmiBlitz3.ab3@942>   !ComData_SetL{comPtr_Make_SmallestCode_Byte    ,#make_smallestcode}
0001E130 <AmiBlitz3.ab3@943>   !ComData_SetL{comPtr_Link_DebugInfo_Byte       ,#link_debuginfo}
0001E168 <AmiBlitz3.ab3@944>   !ComData_SetL{comPtr_Use_Debugger_Byte         ,#use_debugger}
0001E1A0 <AmiBlitz3.ab3@945>   !ComData_SetL{comPtr_Autorun_Byte              ,#autorun}
0001E1D8 <AmiBlitz3.ab3@946>   !ComData_SetL{comPtr_InterruptCheck_Byte       ,#interruptcheck}
0001E210 <AmiBlitz3.ab3@947>   !ComData_SetL{comPtr_AssemblerCheck_Byte       ,#assemblercheck}
0001E248 <AmiBlitz3.ab3@948>   !ComData_SetL{comPtr_OverflowCheck_Byte        ,#overflowcheck}
0001E280 <AmiBlitz3.ab3@949>   !ComData_SetL{comPtr_Number_of_Objects_Word    ,#number_of_objects}
0001E2B8 <AmiBlitz3.ab3@950>   !ComData_SetL{comPtr_MaxObjects_Value_Word     ,#maxobjects_value}
0001E2F0 <AmiBlitz3.ab3@951>   !ComData_SetL{comPtr_MaxObject_Pos_Word        ,#maxobject_pos}
0001E328 <AmiBlitz3.ab3@954>   !ComData_SetL{comPtr_CLIArgumentsString       ,#str_cliarguments}
0001E32E <AmiBlitz3.ab3@956>   CLR.w returncode_org
0001E358 <AmiBlitz3.ab3@958>   !basic
0001E362 <AmiBlitz3.ab3@959>   If CLIMode
0001E3D4 <AmiBlitz3.ab3@960>     If cli_verbose>=3 Then NPrint !TRANS{"Loading BlitzLibs..."}
0001E3F2 <AmiBlitz3.ab3@962>   !asm
0001E3F8 <AmiBlitz3.ab3@966>   TST.b start_without_libs
0001E3FC <AmiBlitz3.ab3@967>   BNE 'skip_loading_libs
0001E400 <AmiBlitz3.ab3@969>     BSR.w call_setpointerbusy
0001E40A <AmiBlitz3.ab3@970>     MOVE.l #$FFFFffff,linenumat   ; was -1
0001E40E <AmiBlitz3.ab3@971>     BSR.w get_libraries
0001E414 <AmiBlitz3.ab3@972>     JSR init_libraries
0001E418 <AmiBlitz3.ab3@973>     BSR.w init_buffers
0001E41C <AmiBlitz3.ab3@974>     BSR.w call_setpointernormal
0001E41E <AmiBlitz3.ab3@982>   MOVEQ.l #-$01,D0
0001E424 <AmiBlitz3.ab3@983>   MOVEA.l _execbase,A6
0001E428 <AmiBlitz3.ab3@984>   JSR _AllocSignal(A6)
0001E42E <AmiBlitz3.ab3@985>   MOVE.l D0,signalNum
0001E430 <AmiBlitz3.ab3@986>   MOVEQ.l #$00,D1
0001E432 <AmiBlitz3.ab3@987>   BSET D0,D1
0001E438 <AmiBlitz3.ab3@988>   MOVE.l D1,signals
0001E43E <AmiBlitz3.ab3@995>   MOVE.l #str_defaultdbug,D1
0001E442 <AmiBlitz3.ab3@996>   MOVEA.l _dosbase(PC),A6
0001E446 <AmiBlitz3.ab3@997>   JSR _LoadSeg(A6)
0001E44C <AmiBlitz3.ab3@998>   MOVE.l D0,ptr_seg_debugger
0001E44E <AmiBlitz3.ab3@1001>   TST.l d0
0001E452 <AmiBlitz3.ab3@1002>   BNE 'ok_12
0001E47C <AmiBlitz3.ab3@1003>     !basic
0001E4DE <AmiBlitz3.ab3@1004>     error{!TRANS{"The Debugexecutor `Defaultdbug` was not found.\\nDebugging is not possible."}}
0001E4FC <AmiBlitz3.ab3@1005>     !asm
0001E502 <AmiBlitz3.ab3@1008>   TST.l CLIMode
0001E506 <AmiBlitz3.ab3@1009>   BEQ run_ped
0001E530 <AmiBlitz3.ab3@1015>   !basic
0001E536 <AmiBlitz3.ab3@1016>   err.l = False
0001E562 <AmiBlitz3.ab3@1024>   If cli_sourcefile
0001E582 <AmiBlitz3.ab3@1025>     lock.l = Lock_(&cli_sourcefile,#ACCESS_READ)
0001E58C <AmiBlitz3.ab3@1026>     If lock
0001E5B0 <AmiBlitz3.ab3@1027>       NameFromLock_ lock,&cli_tempstr,1024
0001E5DA <AmiBlitz3.ab3@1028>       cli_sourcefile.s = Peek.s(&cli_tempstr)
0001E5EA <AmiBlitz3.ab3@1029>       UnLock_ lock
0001E616 <AmiBlitz3.ab3@1032>     If cli_exefile
0001E668 <AmiBlitz3.ab3@1033>       SetCurrentDir{dos_PathPart{cli_sourcefile}}
0001E6C0 <AmiBlitz3.ab3@1034>       path.s = dos_PathPart{cli_exefile}
0001E6E0 <AmiBlitz3.ab3@1035>       lock.l = Lock_(&path,#ACCESS_READ)
0001E6EA <AmiBlitz3.ab3@1036>       If lock
0001E70E <AmiBlitz3.ab3@1037>         NameFromLock_ lock,&cli_tempstr,1024
0001E738 <AmiBlitz3.ab3@1038>         path.s = Peek.s(&cli_tempstr)
0001E7E6 <AmiBlitz3.ab3@1039>         cli_exefile = dos_AddPart{path,dos_FilePart{cli_exefile}}
0001E7F6 <AmiBlitz3.ab3@1040>         UnLock_ lock
0001E840 <AmiBlitz3.ab3@1051>   If cli_verbose>=3 Then NPrint "Initializing token hashmap..."
0001E8B4 <AmiBlitz3.ab3@1052> 
0001E8BE <AmiBlitz3.ab3@1053>   *PreProcessor.preprocessor = preproc_Create{}
0001E8CE <AmiBlitz3.ab3@1054>   Poke.l ?comPtr_PreProcessor,*PreProcessor
0001E900 <AmiBlitz3.ab3@1055>   preproc_LoadTokens{*PreProcessor,TokenHashMapFile}
0001E916 <AmiBlitz3.ab3@1056>   If *PreProcessor\tokens=Null
0001E990 <AmiBlitz3.ab3@1057>     If cli_verbose>=1 Then NPrint "No hashmap found (\\22"+TokenHashMapFile+"\\22), will be created..."
0001E99A <AmiBlitz3.ab3@1058>     preproc_QueryTokens{*PreProcessor}
0001E9CC <AmiBlitz3.ab3@1059>     preproc_SaveTokens{*PreProcessor,TokenHashMapFile}
0001EA18 <AmiBlitz3.ab3@1067>   If cli_sourcefile><"" AND err=False
0001EABE <AmiBlitz3.ab3@1068>     If cli_verbose>=3 Then NPrint "Loading sourcecode \\22",cli_sourcefile,"\\22..."
0001EAF0 <AmiBlitz3.ab3@1069>     succ=LoadSource{cli_sourcefile}
0001EAFA <AmiBlitz3.ab3@1070>     If succ
0001EB32 <AmiBlitz3.ab3@1071> 
0001EBAC <AmiBlitz3.ab3@1072>         If cli_verbose>=1 Then NPrint "Compiling \\22"+cli_sourcefile+"\\22..."
0001EBEE <AmiBlitz3.ab3@1073> 
0001EBF8 <AmiBlitz3.ab3@1075>         If comerr
0001EBFE <AmiBlitz3.ab3@1077>         Else
0001EC04 <AmiBlitz3.ab3@1081>     Else
0001EC54 <AmiBlitz3.ab3@1082>       If cli_verbose>=0 NPrint "\\1b[1m*** ERROR: Unable to read source file!\\1b[0m" : err=True
0001ECA0 <AmiBlitz3.ab3@1086>   If cli_savefile><"" AND err=False
0001ED1A <AmiBlitz3.ab3@1087>     If cli_verbose>=2 Then NPrint "Saving sourcefiles as "+cli_savefile+"..."
0001ED48 <AmiBlitz3.ab3@1088>     SaveSource{cli_savefile}
0001ED94 <AmiBlitz3.ab3@1091>   If cli_dumpfile><"" AND err=False
0001EDDE <AmiBlitz3.ab3@1092>     If cli_verbose>=2 Then NPrint "Saving dumpfile..."
0001EE14 <AmiBlitz3.ab3@1093>     DumpFile{cli_dumpfile,cli_dumpflags,cli_dumpform}
0001EE1E <AmiBlitz3.ab3@1096>   If cli_run
0001EE32 <AmiBlitz3.ab3@1097>     If comerr=False
0001EE5E <AmiBlitz3.ab3@1098>       If cli_exefile
0001EED8 <AmiBlitz3.ab3@1099>         If cli_verbose>=1 Then NPrint "Recompiling "+cli_sourcefile+" for debug..."
0001EF0E <AmiBlitz3.ab3@1100> 
0001EF58 <AmiBlitz3.ab3@1102>       If cli_verbose>=1 Then NPrint "Running program..."
0001EF66 <AmiBlitz3.ab3@1103> 
0001EF68 <AmiBlitz3.ab3@1105>         CLR.l d0
0001EFA6 <AmiBlitz3.ab3@1106>         !ComData_GetB{comByte_RunningFlag,D0}
0001EFAA <AmiBlitz3.ab3@1107>         running.l = PutD0
0001EFC6 <AmiBlitz3.ab3@1108>         If running Then Delay_ 50
0001EFDA <AmiBlitz3.ab3@1110>       Until running=False
0001EFEE <AmiBlitz3.ab3@1111>       If Peek.l(?_runerror)
0001F03E <AmiBlitz3.ab3@1112>         If cli_verbose>=0 Then NPrint "\\1b[1m*** ERROR: Unable to run compiled program!\\1b[0m" : err=True
0001F04E <AmiBlitz3.ab3@1123>   preproc_Free{*PreProcessor} : *PreProcessor=Null
0001F098 <AmiBlitz3.ab3@1124>   If cli_verbose>=3 Then NPrint "Exit AmiBlitz3."
0001F09E <AmiBlitz3.ab3@1125>   DeinitEmulatedPED{}
0001F0BC <AmiBlitz3.ab3@1127>   !asm
0001F0C2 <AmiBlitz3.ab3@1128> JMP terminate_ab3
0001F0C8 <AmiBlitz3.ab3@1134>   MOVEA.l ped_startup_addr,A1
0001F0CE <AmiBlitz3.ab3@1135>   LEA str_tempfilename,A0
0001F0D0 <AmiBlitz3.ab3@1136>   JSR (A1)            ;goto editor with filename!
0001F0D6 <AmiBlitz3.ab3@1143>   MOVE.l signalNum,D0
0001F0DC <AmiBlitz3.ab3@1144>   MOVEA.l _execbase,A6
0001F0E0 <AmiBlitz3.ab3@1145>   JSR _FreeSignal(A6)
0001F0E6 <AmiBlitz3.ab3@1147>   MOVE.l ptr_seg_debugger,D1
0001F0EA <AmiBlitz3.ab3@1148>   BEQ.b 'noseg
0001F0EE <AmiBlitz3.ab3@1149>     MOVEA.l _dosbase(PC),A6
0001F0F2 <AmiBlitz3.ab3@1150>     JSR _UnLoadSeg(A6)
0001F0F6 <AmiBlitz3.ab3@1153>   BSR.w Aclearallvars
0001F0FA <AmiBlitz3.ab3@1154>   BSR.w free_residents
0001F100 <AmiBlitz3.ab3@1155>   JSR free_blitzlibs
0001F106 <AmiBlitz3.ab3@1158>   MOVE.l ptr_seg_ped,D1
0001F10A <AmiBlitz3.ab3@1159>   BEQ freemem_and_quit
0001F10E <AmiBlitz3.ab3@1160>   MOVEA.l _dosbase(PC),A6
0001F112 <AmiBlitz3.ab3@1161>   JSR _UnLoadSeg(A6)
0001F116 <AmiBlitz3.ab3@1162>   BRA freemem_and_quit     ; added by tomsmart1 for Ped errormessage
0001F140 <AmiBlitz3.ab3@1165>   !basic
0001F204 <AmiBlitz3.ab3@1166> 
0001F222 <AmiBlitz3.ab3@1167>   !asm
0001F226 <AmiBlitz3.ab3@1168>   BRA freemem_and_quit
0001F250 <AmiBlitz3.ab3@1171>   !basic
0001F314 <AmiBlitz3.ab3@1172>   error{!TRANS{"Can't load the Editor:\n"} + pedfile$ + !TRANS{"\n must quit, sorry!"} }  ; show error message  tomsmart1
0001F332 <AmiBlitz3.ab3@1173>   !asm
0001F336 <AmiBlitz3.ab3@1177>   BSR.w freeallox
0001F33C <AmiBlitz3.ab3@1179>   MOVEA.l ptr_macrobuffer_begin,A1
0001F33E <AmiBlitz3.ab3@1181>   MOVE.l -(a1),D0
0001F340 <AmiBlitz3.ab3@1182>   ADDQ.l #4,d0
0001F346 <AmiBlitz3.ab3@1184>   MOVEA.l _execbase,A6
0001F34A <AmiBlitz3.ab3@1185>   JSR _FreeMem(A6)
0001F350 <AmiBlitz3.ab3@1188>   MOVEA.l _dosbase,A1
0001F356 <AmiBlitz3.ab3@1189>   MOVEA.l _execbase,A6
0001F35A <AmiBlitz3.ab3@1190>   JSR _CloseLibrary(A6)
0001F360 <AmiBlitz3.ab3@1192>   MOVEA.l constpcat,A1
0001F366 <AmiBlitz3.ab3@1193>   MOVE.l constmaxpc,D0
0001F36C <AmiBlitz3.ab3@1194>   MOVEA.l _execbase,A6
0001F370 <AmiBlitz3.ab3@1195>   JSR _FreeMem(A6)
0001F376 <AmiBlitz3.ab3@1198>   MOVEA.l _mathffpbase,A1
0001F37C <AmiBlitz3.ab3@1199>   MOVEA.l _execbase,A6
0001F380 <AmiBlitz3.ab3@1200>   JSR _CloseLibrary(A6)
0001F386 <AmiBlitz3.ab3@1204>   TST.l mempool2                    ; test if mempool2 is allocated
0001F38A <AmiBlitz3.ab3@1205>   BEQ shutdown_compiler             ; no jump
0001F390 <AmiBlitz3.ab3@1206>   MOVEA.l _execbase,A6              ; yes delete it to free the memory
0001F396 <AmiBlitz3.ab3@1207>   MOVE.l mempool2,a0
0001F39A <AmiBlitz3.ab3@1208>   JSR _DeletePool(a6)
0001F3A0 <AmiBlitz3.ab3@1209>   CLR.l mempool2
0001F3A6 <AmiBlitz3.ab3@1212>   MOVEA.l _execbase,A6
0001F3AC <AmiBlitz3.ab3@1213>   MOVE.l mempool,a0
0001F3B0 <AmiBlitz3.ab3@1214>   JSR _DeletePool(a6)
0001F3B6 <AmiBlitz3.ab3@1215>   CLR.l pushat
0001F3BC <AmiBlitz3.ab3@1216>   CLR.l mempool
0001F3C2 <AmiBlitz3.ab3@1218>   JSR free_unusedfunctions
0001F3C4 <AmiBlitz3.ab3@1219>   MOVEQ #0,d0
0001F3D2 <AmiBlitz3.ab3@1222>   !exitasm
0001F40A <AmiBlitz3.ab3@1223>   If dynassign<>""
0001F414 <AmiBlitz3.ab3@1224>     If *AssignSema
0001F424 <AmiBlitz3.ab3@1225>       ReleaseSemaphore_ *AssignSema
0001F43C <AmiBlitz3.ab3@1226>       If (AttemptSemaphore_ (*AssignSema))                 ; we are the exclusive owner of the sema now!
0001F4D0 <AmiBlitz3.ab3@1227>         dos_RemAssign{"LIBS:",dos_AddPart{dynassign,"Libs"}}
0001F50A <AmiBlitz3.ab3@1228>         dos_RemAssign{dynassign}
0001F51A <AmiBlitz3.ab3@1229>         RemSemaphore_ *AssignSema
0001F52A <AmiBlitz3.ab3@1230>         ReleaseSemaphore_ *AssignSema
0001F55C <AmiBlitz3.ab3@1231>         If *AssignSema\ss_Link\ln_Name Then FreeVec_ *AssignSema\ss_Link\ln_Name : *AssignSema\ss_Link\ln_Name = Null
0001F56C <AmiBlitz3.ab3@1232>         FreeVec_ *AssignSema
0001F572 <AmiBlitz3.ab3@1233>         *AssignSema = Null
0001F5A0 <AmiBlitz3.ab3@1237>   SetCurrentDir{cli_path}
0001F5C2 <AmiBlitz3.ab3@1238>   !coutclose
0001F5C8 <AmiBlitz3.ab3@1239> End
0001F5D4 <AmiBlitz3.ab3@1243> str_doslibrary:     Dc.b "dos.library",0 : Even
0001F5D8 <AmiBlitz3.ab3@1244> _dosbase:           Ds.l 1
0001F5DE <AmiBlitz3.ab3@1248>   MOVEA.l _execbase,A6
0001F5E4 <AmiBlitz3.ab3@1249>   LEA str_doslibrary,A1
0001F5E8 <AmiBlitz3.ab3@1250>   JSR _OldOpenLibrary(A6)
0001F5EE <AmiBlitz3.ab3@1251>   MOVE.l D0,_dosbase
0001F5F0 <AmiBlitz3.ab3@1252> RTS
0001F5F6 <AmiBlitz3.ab3@1256>   MOVEA.l #str_mathffpname,A1
0001F5FC <AmiBlitz3.ab3@1257>   MOVEA.l _execbase,A6
0001F600 <AmiBlitz3.ab3@1258>   JSR _OldOpenLibrary(A6)
0001F606 <AmiBlitz3.ab3@1259>   MOVE.l D0,_mathffpbase
0001F608 <AmiBlitz3.ab3@1260> RTS
0001F63A <AmiBlitz3.ab3@1267> !ComData_JMP{comFunc_SetNormalPointer}
0001F66C <AmiBlitz3.ab3@1274> !ComData_JMP{comFunc_SetBusyPointer}
0001F696 <AmiBlitz3.ab3@1278>   !basic
0001F69A <AmiBlitz3.ab3@1279>   ab3save_filenameP.l = PutD0
0001F6A4 <AmiBlitz3.ab3@1280>   If ab3save_filenameP
0001F6CC <AmiBlitz3.ab3@1281>     ab3save_filename.s = Peek.s(ab3save_filenameP)
0001F6FA <AmiBlitz3.ab3@1283>     SaveSource{ab3save_filename}
0001F700 <AmiBlitz3.ab3@1284>   Else
0001F73A <AmiBlitz3.ab3@1285>     error{"INTERNAL ERROR: no filename passed in D0 to SaveSource{}!"}
0001F758 <AmiBlitz3.ab3@1287>   !asm
0001F75A <AmiBlitz3.ab3@1288>   RTS
0001F784 <AmiBlitz3.ab3@1291>   !basic
0001F788 <AmiBlitz3.ab3@1292>   ab3save_filenameP.l = PutD0
0001F792 <AmiBlitz3.ab3@1293>   If ab3save_filenameP
0001F7BA <AmiBlitz3.ab3@1294>     ab3save_filename.s = Peek.s(ab3save_filenameP)
0001F7E8 <AmiBlitz3.ab3@1295>     LoadSource{ab3save_filename}
0001F7EE <AmiBlitz3.ab3@1296>   Else
0001F828 <AmiBlitz3.ab3@1297>     error{"INTERNAL ERROR: no filename passed in D0 to LoadSource{}!"}
0001F846 <AmiBlitz3.ab3@1299>   !asm
0001F848 <AmiBlitz3.ab3@1300>   RTS
0001F872 <AmiBlitz3.ab3@1303>   !basic
0001F878 <AmiBlitz3.ab3@1304>   ClearSource{}
0001F896 <AmiBlitz3.ab3@1305>   !asm
0001F898 <AmiBlitz3.ab3@1306>   RTS
0001F8C2 <AmiBlitz3.ab3@1309>   !basic
0001F8C8 <AmiBlitz3.ab3@1310>   OpenConsoleFake{}
0001F8E6 <AmiBlitz3.ab3@1311>   !asm
0001F8E8 <AmiBlitz3.ab3@1312>   RTS
0001F912 <AmiBlitz3.ab3@1316>   !basic
0001F918 <AmiBlitz3.ab3@1317>   CloseConsoleFake{}
0001F936 <AmiBlitz3.ab3@1318>   !asm
0001F938 <AmiBlitz3.ab3@1319>   RTS
0001F93E <AmiBlitz3.ab3@1324>   MOVE.w d6,menuitemdebug
0001F968 <AmiBlitz3.ab3@1325>   !basic
0001F97A <AmiBlitz3.ab3@1326>   menuitemx.l = Peek.w(?menuitemdebug)
0001F9A0 <AmiBlitz3.ab3@1327>   If menuitemx>16 OR  menuitemx<0
0001FA14 <AmiBlitz3.ab3@1328>     error{"Called invalid AB3 Menuitem #"+Str$(menuitemx)+"!"}
0001FA1C <AmiBlitz3.ab3@1329>     menuitemx=0
0001FA2C <AmiBlitz3.ab3@1331>   Poke.w ?menuitemdebug,menuitemx
0001FA4A <AmiBlitz3.ab3@1332>   !asm
0001FA50 <AmiBlitz3.ab3@1333>   MOVE.w menuitemdebug,d6
0001FA56 <AmiBlitz3.ab3@1337>   MOVE.l A5,firstitem_
0001FA5C <AmiBlitz3.ab3@1338>   MOVE.w D7,numlines_org
0001FA62 <AmiBlitz3.ab3@1340>   MOVE.l d7,numlines
0001FA64 <AmiBlitz3.ab3@1342>   LSL.w #2,D6
0001FA6A <AmiBlitz3.ab3@1343>   LEA menu_items,A0
0001FA6E <AmiBlitz3.ab3@1344>   MOVEA.l $0(A0,D6.W),A0
0001FA78 <AmiBlitz3.ab3@1345>   MOVE.l #$FFFFffff,linenumat             ; was -1
0001FA82 <AmiBlitz3.ab3@1346>   MOVE.l #$FFFFffff,compilelinecounter    ; was -1
0001FA84 <AmiBlitz3.ab3@1347>   JSR (A0)                              ; jsr to the function for the menuitem
0001FA8A <AmiBlitz3.ab3@1348>   MOVE.l compilelinecounter,D0
0001FA8C <AmiBlitz3.ab3@1349> RTS
0001FA90 <AmiBlitz3.ab3@1351> menuitemdebug: Dc.l 0
0001FA94 <AmiBlitz3.ab3@1353> mempool                Dc.l 0
0001FAAA <AmiBlitz3.ab3@1354> str_loaddebugmessage:  Dc.b "Debug module to load",0 : Even        ; was dtext org source
0001FAB0 <AmiBlitz3.ab3@1355> dloaderr:              JSR handle_compileerror
0001FACC <AmiBlitz3.ab3@1356>                        Dc.b "Can't LoadSeg debug module!",0 : Even
0001FB0A <AmiBlitz3.ab3@1364>   !ComData_GetL{comFunc_ASLFileRequest,A3}
0001FB10 <AmiBlitz3.ab3@1365>   LEA str_loaddebugmessage,A2
0001FB16 <AmiBlitz3.ab3@1366>   LEA str_blitz3assign,A0
0001FB1C <AmiBlitz3.ab3@1367>   LEA str_temp_debugmodulename,A1
0001FB1E <AmiBlitz3.ab3@1368>   JSR (A3)                                                  ;open ped filerequest
0001FB22 <AmiBlitz3.ab3@1369>   BEQ.w nodload
0001FB28 <AmiBlitz3.ab3@1374>   MOVE.l D0,ptr_temp_debugmodule
0001FB2C <AmiBlitz3.ab3@1375>   BSR.w call_setpointerbusy
0001FB32 <AmiBlitz3.ab3@1377> 
0001FB38 <AmiBlitz3.ab3@1379>   MOVE.l A7,errstack
0001FB42 <AmiBlitz3.ab3@1380>   MOVE.l #nodload,errcont
0001FB48 <AmiBlitz3.ab3@1381>   MOVE.l ptr_temp_debugmodule,D1
0001FB4C <AmiBlitz3.ab3@1383>   MOVEA.l _dosbase(PC),A6
0001FB50 <AmiBlitz3.ab3@1384>   JSR _LoadSeg(A6)
0001FB52 <AmiBlitz3.ab3@1385>   MOVE.l D0,D7
0001FB56 <AmiBlitz3.ab3@1386>   BEQ.w dloaderr
0001FB5C <AmiBlitz3.ab3@1387>   MOVE.l ptr_seg_debugger,D1
0001FB60 <AmiBlitz3.ab3@1388>   BEQ.b 'ndseg
0001FB64 <AmiBlitz3.ab3@1389>   MOVEA.l _dosbase(PC),A6
0001FB68 <AmiBlitz3.ab3@1390>   JSR _UnLoadSeg(A6)
0001FB6C <AmiBlitz3.ab3@1391>   BSR.w call_setpointernormal
0001FB72 <AmiBlitz3.ab3@1394>   MOVE.l D7,ptr_seg_debugger
0001FB74 <AmiBlitz3.ab3@1397> RTS
0001FB92 <AmiBlitz3.ab3@1400> str_request_exename:   Dc.b "Name of Executable to Create:",0 : Even                        ;xtext org source
0001FC52 <AmiBlitz3.ab3@1401> exepath:               Ds.l 48                             ;Ds.b #MAX_STRINGSIZE ; Ds.l 48  ;xpath  dcb.b 192,0 org source
0001FD12 <AmiBlitz3.ab3@1402> exefilename:           Ds.l 48                             ;Ds.b #MAX_STRINGSIZE ; Ds.l 48  ;xname  dcb.b 192,0 org source
0001FD16 <AmiBlitz3.ab3@1403> ptr_newexefilename:    Dc.l 0                                                               ;execname org
0001FD40 <AmiBlitz3.ab3@1407>   !basic
0001FD6A <AmiBlitz3.ab3@1408>   exepath.s = Peek.s(?exepath)
0001FD94 <AmiBlitz3.ab3@1409>   exefile.s = Peek.s(?exefilename)
0001FE14 <AmiBlitz3.ab3@1410>   exefile.s = dos_AddPart{exepath,exefile}
0001FE4C <AmiBlitz3.ab3@1411>   Poke.s ?tempspace,exefile
0001FE6A <AmiBlitz3.ab3@1412>   !asm
0001FE70 <AmiBlitz3.ab3@1433>   LEA tempspace,a0
0001FE72 <AmiBlitz3.ab3@1434>   MOVE.l a0,d0
0001FE76 <AmiBlitz3.ab3@1435> BRA newcreate2
0001FEA0 <AmiBlitz3.ab3@1443>   !basic
0001FECA <AmiBlitz3.ab3@1444>   request_exename.s = Peek.s(?str_request_exename )
0001FF26 <AmiBlitz3.ab3@1445>   request_exename   = !TRANS{request_exename}
0001FF2C <AmiBlitz3.ab3@1446>   GetD0 &request_exename
0001FF4A <AmiBlitz3.ab3@1447>   !asm
0001FF4C <AmiBlitz3.ab3@1448>   MOVE.l D0,A2
0001FF8A <AmiBlitz3.ab3@1452>   !ComData_GetL{comFunc_ASLFileRequest,A3}
0001FF90 <AmiBlitz3.ab3@1454>   LEA exepath,A0
0001FF96 <AmiBlitz3.ab3@1455>   LEA exefilename,A1
0001FF98 <AmiBlitz3.ab3@1456>   JSR (A3)                                                 ;open ped filerequest
0001FF9C <AmiBlitz3.ab3@1458>   BEQ.w cancel_createexe    ; was 'err
0001FFA6 <AmiBlitz3.ab3@1462>   ADD.l #1,number_of_builds
0001FFAC <AmiBlitz3.ab3@1466>   MOVE.l D0,ptr_newexefilename
0001FFB4 <AmiBlitz3.ab3@1467>   MOVE.w #-1,debugversion
0001FFBA <AmiBlitz3.ab3@1468>   MOVE.w set_make_smallestcode,-(A7)
0001FFC2 <AmiBlitz3.ab3@1473>     MOVE.w #1,makeexec
0001FFC8 <AmiBlitz3.ab3@1474>     JSR ab3_OpenDebugFile
0001FFCC <AmiBlitz3.ab3@1476>     BSR.w startcompile
0001FFD2 <AmiBlitz3.ab3@1478>     JSR ab3_CloseDebugFile
0001FFDC <AmiBlitz3.ab3@1480>     CMP.l #"NORE",reqmode
0001FFE0 <AmiBlitz3.ab3@1481>   BEQ 'l1
0001FFE6 <AmiBlitz3.ab3@1483>   TST.w anyerrs
0001FFEA <AmiBlitz3.ab3@1484>   BNE.b 'skip
0001FFEE <AmiBlitz3.ab3@1485>   BSR.w savefile
0001FFF4 <AmiBlitz3.ab3@1488>   MOVE.w (A7)+,set_make_smallestcode
0001FFF6 <AmiBlitz3.ab3@1491> RTS
0001FFFE <AmiBlitz3.ab3@1495>   MOVE.w #-1,flag_noPED
00020000 <AmiBlitz3.ab3@1496> RTS
00020008 <AmiBlitz3.ab3@1500>   MOVE.w #-1,flag_noCLI
0002000A <AmiBlitz3.ab3@1501> RTS
00020034 <AmiBlitz3.ab3@1505>   !basic
0002005C <AmiBlitz3.ab3@1506>     If dbg_fid>=0 Then file_Close{dbg_fid} : dbg_fid = -1
0002006C <AmiBlitz3.ab3@1507>     Poke.w ?word_WriteDebugFileNow,0
0002008A <AmiBlitz3.ab3@1508>   !asm
0002008C <AmiBlitz3.ab3@1509> RTS
000200B6 <AmiBlitz3.ab3@1513>   !basic
000200C6 <AmiBlitz3.ab3@1514>   Poke.w ?word_WriteDebugFileNow,0
000200D8 <AmiBlitz3.ab3@1515>   If dbg_fid>=0
000200EE <AmiBlitz3.ab3@1516>     file_Close{dbg_fid} : dbg_fid = -1
00020100 <AmiBlitz3.ab3@1518>   If dbg_fid.l<0
00020102 <AmiBlitz3.ab3@1519>     CLR.l d0
00020140 <AmiBlitz3.ab3@1520>     !ComData_GetW{comWord_CreateDebugFile,D0}
00020144 <AmiBlitz3.ab3@1521>     dbg_Create.l = PutD0
0002014E <AmiBlitz3.ab3@1522>     If (dbg_Create) ; only when set!
0002015E <AmiBlitz3.ab3@1523>       exefileP.l = Peek.l (?ptr_newexefilename)
00020186 <AmiBlitz3.ab3@1524>       exefile.s = ""
000201B8 <AmiBlitz3.ab3@1525>       If exefileP Then exefile.s = Peek.s(exefileP)
000201F0 <AmiBlitz3.ab3@1526>       If exefile><""
00020246 <AmiBlitz3.ab3@1527>         dbg_fid = file_Open{exefile+".dbg",#file_forcewrite}
00020258 <AmiBlitz3.ab3@1528>         If dbg_fid>=0
0002026A <AmiBlitz3.ab3@1529>           Poke.w ?word_WriteDebugFileNow,-1
00020276 <AmiBlitz3.ab3@1532>       oldhunkoffset.l = -1
0002029E <AmiBlitz3.ab3@1533>       oldfile.s       = ""
000202BC <AmiBlitz3.ab3@1536>   !asm
000202BE <AmiBlitz3.ab3@1537> RTS
000202C4 <AmiBlitz3.ab3@1541> TST.w word_WriteDebugFileNow
000202C8 <AmiBlitz3.ab3@1542> BEQ 'skipdebugfile
000202F2 <AmiBlitz3.ab3@1543> !basic
00020304 <AmiBlitz3.ab3@1544>   If dbg_fid>=0
00020316 <AmiBlitz3.ab3@1545>     pass.l          = Peek.w(?pass)
00020328 <AmiBlitz3.ab3@1546>     makesmallest.b  = Peek.b(?make_smallestcode)               ; get the status of make_smallestcode  tomsmart1
0002034C <AmiBlitz3.ab3@1547> 
00020352 <AmiBlitz3.ab3@1548>       oldhunkoffset.l = hunkoffset.l
00020386 <AmiBlitz3.ab3@1549>       oldfile.s       = codefile.s
000203A2 <AmiBlitz3.ab3@1550>       If Peek.w (?ininclude)>0
000203B2 <AmiBlitz3.ab3@1551>         codeline.l = Peek.l(?includeline);-1
00020422 <AmiBlitz3.ab3@1552>         codefile.s = dos_FilePart{incdim(Peek.w(?ininclude)-1)}
00020428 <AmiBlitz3.ab3@1553>       Else
00020456 <AmiBlitz3.ab3@1554>         !ComData_LEA{comStr_SourceName,A0}
00020458 <AmiBlitz3.ab3@1555>         MOVE.l A0,D0
0002045C <AmiBlitz3.ab3@1556>         sourceP.l = PutD0
00020484 <AmiBlitz3.ab3@1557>         codefile.s = Peek.s(sourceP)
00020494 <AmiBlitz3.ab3@1558>         codeline.l = Peek.l(?linenumat)
000204BC <AmiBlitz3.ab3@1560>       hunkoffset.l = Peek.l(?destpointer)-Peek.l(?destbufferstart)
00020510 <AmiBlitz3.ab3@1561>       If oldhunkoffset><hunkoffset OR oldfile><codefile
00020520 <AmiBlitz3.ab3@1568>         *sourceLine.SourceLine_t = Peek.l(?sourceline)
0002052A <AmiBlitz3.ab3@1569>         If *sourceLine
00020540 <AmiBlitz3.ab3@1570>           MaxLen detokenline.s = 65536
00020582 <AmiBlitz3.ab3@1571>          !ComData_GetL{comPtr_PreProcessor,include_preprocessor}
00020592 <AmiBlitz3.ab3@1572>          *tn.preprocessor = Peek.l(?include_preprocessor)
000205BE <AmiBlitz3.ab3@1573>           written.l = preproc_Detokenize{*tn,&*sourceLine\Text,&detokenline,*sourceLine\CharLength}
000205EC <AmiBlitz3.ab3@1574>           If written>0 Then Poke.b &detokenline+written-1,0
00020616 <AmiBlitz3.ab3@1575>           sourceLineText.s = Peek.s(&detokenline)
0002061C <AmiBlitz3.ab3@1576>         Else
00020644 <AmiBlitz3.ab3@1577>           sourceLineText = "NULL"
0002070C <AmiBlitz3.ab3@1580>         file_WriteLine{dbg_fid,Hex$(hunkoffset)+" <"+codefile+"@"+Str$(codeline)+"> "+sourceLineText}
0002072A <AmiBlitz3.ab3@1586> !asm
0002072C <AmiBlitz3.ab3@1588> RTS
0002072E <AmiBlitz3.ab3@1590> word_WriteDebugFileNow: Dc.w 0
00020730 <AmiBlitz3.ab3@1594> flag_noPED:  Ds.w 1                                        ;closeed org source
00020732 <AmiBlitz3.ab3@1595> flag_noCLI:  Ds.w 1                                        ;nocli org source
00020736 <AmiBlitz3.ab3@1599>   MOVEM.l A2-A3,-(A7)
0002073C <AmiBlitz3.ab3@1600>   CLR.b doublepeek
00020742 <AmiBlitz3.ab3@1601>   MOVE.l A5,lastsourcepos
00020748 <AmiBlitz3.ab3@1602>    JSR getchar
0002074C <AmiBlitz3.ab3@1603>   CMP.w #$2E,D0              ;'.'
00020750 <AmiBlitz3.ab3@1604>    BEQ.w 'ok
00020756 <AmiBlitz3.ab3@1605>   MOVEA.l defaulttype,A2
0002075A <AmiBlitz3.ab3@1606>   CMP.w #$24,D0              ;'$'
0002075E <AmiBlitz3.ab3@1607>    BNE.w 'none
00020760 <AmiBlitz3.ab3@1608>   MOVEQ.l #$07,D1
00020764 <AmiBlitz3.ab3@1609>  BRA.w 'skip
0002076A <AmiBlitz3.ab3@1612>   JSR getparameter2
0002076E <AmiBlitz3.ab3@1613>   BEQ.w JUMP_syntaxerr1
00020774 <AmiBlitz3.ab3@1614>   LEA newtypebase,A2
0002077A <AmiBlitz3.ab3@1615>   JSR findtype
0002077E <AmiBlitz3.ab3@1616>   BNE.w JUMP_notypeerr1
00020788 <AmiBlitz3.ab3@1621>   MOVE.w oldqflag,instringon
0002078E <AmiBlitz3.ab3@1622>   MOVEA.l lastsourcepos,A5
00020794 <AmiBlitz3.ab3@1624>   MOVE.l a2,functionreturntype
0002079C <AmiBlitz3.ab3@1625>   CMPI.l #$100,$4(A2)
000207A0 <AmiBlitz3.ab3@1626>   BLE.w 'isvar
000207A2 <AmiBlitz3.ab3@1630>   MOVEQ #3,d1
000207A6 <AmiBlitz3.ab3@1631>   BRA 'skip
000207AA <AmiBlitz3.ab3@1641>   MOVE.w $6(A2),D1
000207B0 <AmiBlitz3.ab3@1643>   CMP.w #8,8(a2)
000207B4 <AmiBlitz3.ab3@1644>   BNE 'l1
000207BC <AmiBlitz3.ab3@1645>   MOVE.b #1,doublepeek
000207C2 <AmiBlitz3.ab3@1650>   MOVE.w D1,convsize
000207C6 <AmiBlitz3.ab3@1651>   MOVEM.l (A7)+,A2-A3
000207C8 <AmiBlitz3.ab3@1652> RTS
000207CE <AmiBlitz3.ab3@1654> JUMP_notypeerr1  JMP notypeerr
000207D4 <AmiBlitz3.ab3@1655> JUMP_illtypeerr1 JMP illtypeerr
000207DA <AmiBlitz3.ab3@1656> JUMP_syntaxerr1  JMP syntaxerr
000207DE <AmiBlitz3.ab3@1661>   MOVEM.l D0-D1/A0-A1/A6,-(A7)
000207E4 <AmiBlitz3.ab3@1662>   MOVEA.l _execbase,A6
000207EA <AmiBlitz3.ab3@1663>   TST.b MorphOS                    ; test if we have MorphOS ( 0 no, 1 yes)
000207EE <AmiBlitz3.ab3@1664>    BEQ 'useclearU                  ; if we have 0 = No MorpOS then jump
000207F0 <AmiBlitz3.ab3@1666>   MOVEQ.l #8,d1
000207F6 <AmiBlitz3.ab3@1667>   MOVE.l #200,d0
000207FA <AmiBlitz3.ab3@1668>   JSR _CacheClearE(A6)
000207FE <AmiBlitz3.ab3@1669>  BRA 'exit
00020802 <AmiBlitz3.ab3@1708>   JSR _CacheClearU(A6)
00020806 <AmiBlitz3.ab3@1711>   MOVEM.l (A7)+,D0-D1/A0-A1/A6
00020808 <AmiBlitz3.ab3@1712> RTS
00020812 <AmiBlitz3.ab3@1720>   ADD.l #1,number_of_builds
00020818 <AmiBlitz3.ab3@1722>   CLR.w debugversion
0002081E <AmiBlitz3.ab3@1723>   CLR.w flag_noPED
00020824 <AmiBlitz3.ab3@1724>   CLR.w flag_noCLI
0002082C <AmiBlitz3.ab3@1728>     MOVE.w #0,makeexec                                     ;MOVE.w #$FFFF,debugversion
00020830 <AmiBlitz3.ab3@1730>     BSR.w startcompile
0002083A <AmiBlitz3.ab3@1732>     CMP.l #"NORE",reqmode
0002083E <AmiBlitz3.ab3@1733>   BEQ 'l1
00020844 <AmiBlitz3.ab3@1739>   TST.w anyerrs
00020848 <AmiBlitz3.ab3@1740>    BNE.w 'dontrun
0002084C <AmiBlitz3.ab3@1742>   MOVE.w flag_noPED(PC),D1
00020850 <AmiBlitz3.ab3@1743>    BEQ.w 'noclose
00020882 <AmiBlitz3.ab3@1747>   !ComData_JSR{comFunc_CloseGUI}
00020886 <AmiBlitz3.ab3@1748>  BRA.b 'runprogram
0002088A <AmiBlitz3.ab3@1752>   BSR.w compilerequester
00020890 <AmiBlitz3.ab3@1757>   MOVEA.l _dosbase,A6
00020896 <AmiBlitz3.ab3@1759>   LEA exepath,a0
00020898 <AmiBlitz3.ab3@1760>   MOVE.l a0,d1
0002089A <AmiBlitz3.ab3@1761>   MOVEQ #-2,d2
0002089E <AmiBlitz3.ab3@1762>   JSR _Lock(a6)                                            ;lock
000208A4 <AmiBlitz3.ab3@1763>   MOVE.l d0,exelock
000208AA <AmiBlitz3.ab3@1765>   MOVE.l #0,d1
000208AE <AmiBlitz3.ab3@1766>   JSR _CurrentDir(A6)
000208B4 <AmiBlitz3.ab3@1767>   MOVE.l D0,lock_currentdir
000208B6 <AmiBlitz3.ab3@1768>   MOVE.l D0,D1
000208BA <AmiBlitz3.ab3@1769>   JSR _CurrentDir(A6)
000208C0 <AmiBlitz3.ab3@1771>   CLR.l ptr_exetask
000208C6 <AmiBlitz3.ab3@1780>   MOVE.l #str_process_name,D1
000208C8 <AmiBlitz3.ab3@1781>   MOVEQ.l #$00,D2
000208CE <AmiBlitz3.ab3@1782>   MOVE.l #proc_seglist,D3
000208D0 <AmiBlitz3.ab3@1783>   LSR.l #2,D3
000208D6 <AmiBlitz3.ab3@1784>   MOVE.l stacksize,D4
000208DC <AmiBlitz3.ab3@1785>   MOVEA.l _dosbase,A6
000208E0 <AmiBlitz3.ab3@1786>   JSR _CreateProc(A6)                                      ;runtask
000208E2 <AmiBlitz3.ab3@1787>   TST.l D0
000208E6 <AmiBlitz3.ab3@1788>    BEQ 'ErrorRunningProg
0002091C <AmiBlitz3.ab3@1793>   !ComData_SetB{comByte_RunningFlag,#1}   ; this should be done here, straigt after it is clear that
00020922 <AmiBlitz3.ab3@1797>   TST.w flag_noPED
00020926 <AmiBlitz3.ab3@1798>    BNE.b 'fatal
0002092A <AmiBlitz3.ab3@1799>   BSR.w close_compilewin
00020930 <AmiBlitz3.ab3@1802>   CLR.l firstlocal
00020936 <AmiBlitz3.ab3@1803>   CLR.l firstglob
0002093A <AmiBlitz3.ab3@1805>   MOVE.w flag_noPED(PC),D1
0002093E <AmiBlitz3.ab3@1806>   BEQ.w 'noopen         ;skip_openGUI
00020970 <AmiBlitz3.ab3@1810>   !ComData_JSR{comFunc_CreateGUI}
00020972 <AmiBlitz3.ab3@1820>  RTS
0002097C <AmiBlitz3.ab3@1824>   MOVE.l #1,_runerror
00020980 <AmiBlitz3.ab3@1825> BRA 'fatal
00020984 <AmiBlitz3.ab3@1829> _runerror: Dc.l 0
00020988 <AmiBlitz3.ab3@1830> lock_currentdir:    Ds.l 1                                          ;tasklock org source
0002098C <AmiBlitz3.ab3@1831> ptr_exetask:        Ds.l 1                                          ;panictask org source
00020990 <AmiBlitz3.ab3@1832> signalNum:          Ds.l 1                                          ;panicbit org source
00020994 <AmiBlitz3.ab3@1833> signals:            Ds.l 1                                          ;panicmask org source
000209AA <AmiBlitz3.ab3@1835> str_process_name:   Dc.b "Blitz ][ Program Proc",0 : Even           ;procname org source
000209AF <AmiBlitz3.ab3@1836>                     Ds.b 5                                          ;cnop 0,4 :dc.l 0   ;length org source
000209B0 <AmiBlitz3.ab3@1837> Even4
000209B4 <AmiBlitz3.ab3@1839> ptr_ThisTask:       Ds.l 1                                          ;length
000209B8 <AmiBlitz3.ab3@1840> .proc_seglist:      Ds.l 1                                          ;procstart org source ;next
000209BE <AmiBlitz3.ab3@1844>   MOVEA.l $4,A0
000209C6 <AmiBlitz3.ab3@1845>   MOVE.l  $114(A0),ptr_exetask
000209CC <AmiBlitz3.ab3@1847>   MOVEA.l _dosbase,A6
000209D2 <AmiBlitz3.ab3@1848>   MOVE.l exelock,D1
000209D6 <AmiBlitz3.ab3@1849>   JSR _CurrentDir(A6)
00020A0C <AmiBlitz3.ab3@1855>   !ComData_SetB{comByte_RunningFlag,#1}
00020A10 <AmiBlitz3.ab3@1862>   MOVE.w flag_noCLI(PC),D1
00020A14 <AmiBlitz3.ab3@1863>    BNE.b 'skip_openconsole
00020A46 <AmiBlitz3.ab3@1867>   !ComData_JSR{comFunc_OpenConsole}
00020A4A <AmiBlitz3.ab3@1870>   BSR.w calcvbr
00020A50 <AmiBlitz3.ab3@1871>   MOVEA.l vbr,A0
00020A56 <AmiBlitz3.ab3@1876>   CLR.w dirmode
00020A5C <AmiBlitz3.ab3@1877>   CLR.l firstglob
00020A62 <AmiBlitz3.ab3@1878>   CLR.l firstlocal
00020A68 <AmiBlitz3.ab3@1882>   MOVE.l stacksize,D2
00020A6E <AmiBlitz3.ab3@1883>   MOVE.l #$624C745A,D7                                      ;#'bLtZ',d7 org source ;force cli-type run
00020A74 <AmiBlitz3.ab3@1884>   LEA str_cliarguments,A0                                   ;cli arguement
00020A7A <AmiBlitz3.ab3@1885>   MOVEA.l destbufferstart,A1
00020A7E <AmiBlitz3.ab3@1887>   BSR.w Aclearcache
00020A80 <AmiBlitz3.ab3@1891>   JSR (A1)                                                 ; execute compiled code  ;Run the thing!
00020A86 <AmiBlitz3.ab3@1894>   MOVEA.l vbr,A0
00020A8C <AmiBlitz3.ab3@1896>   CLR.l firstglob
00020A92 <AmiBlitz3.ab3@1897>   CLR.l firstlocal
00020A98 <AmiBlitz3.ab3@1898>   MOVEA.l _dosbase,A6
00020A9E <AmiBlitz3.ab3@1899>   MOVE.l exelock,d1
00020AA2 <AmiBlitz3.ab3@1900>   BEQ 'nolock
00020AA6 <AmiBlitz3.ab3@1901>   JSR _UnLock(a6)
00020ADC <AmiBlitz3.ab3@1906>   !ComData_SetB{comByte_RunningFlag,#0}
00020AE0 <AmiBlitz3.ab3@1910>   MOVE.w flag_noCLI(PC),D1
00020AE4 <AmiBlitz3.ab3@1911>    BNE.b 'skip_closeconsole
00020B16 <AmiBlitz3.ab3@1915>   !ComData_JSR{comFunc_CloseConsole}
00020B1E <AmiBlitz3.ab3@1918>   MOVE.w #$0001,stopit      ;ended OK!
00020B22 <AmiBlitz3.ab3@1919>   MOVE.l signals(PC),D0
00020B28 <AmiBlitz3.ab3@1920>   MOVEA.l ptr_ThisTask,A1
00020B2E <AmiBlitz3.ab3@1921>   MOVEA.l _execbase,A6
00020B32 <AmiBlitz3.ab3@1922>   JSR _Signal(A6)
00020B34 <AmiBlitz3.ab3@1923> RTS
00020B3A <AmiBlitz3.ab3@1927>   MOVEA.l _execbase,A6
00020B3E <AmiBlitz3.ab3@1928>   MOVE.w $128(A6),D0
00020B40 <AmiBlitz3.ab3@1929>   MOVEQ.l #$00,D1
00020B44 <AmiBlitz3.ab3@1930>   ANDI.w #$F,D0
00020B48 <AmiBlitz3.ab3@1933>     BEQ.b 'skip
00020B4A <AmiBlitz3.ab3@1934>     ADDQ.w #1,D1
00020B4C <AmiBlitz3.ab3@1935>     LSR.w #1,D0
00020B50 <AmiBlitz3.ab3@1936>  BRA.b 'loop
00020B52 <AmiBlitz3.ab3@1939>   MOVEQ.l #$00,D2
00020B56 <AmiBlitz3.ab3@1940>   CMP.w #$2,D1
00020B5A <AmiBlitz3.ab3@1941>    BCS.b 'skip2
00020B60 <AmiBlitz3.ab3@1942>   MOVEA.l _execbase,A6
00020B64 <AmiBlitz3.ab3@1943>   JSR _SuperState(A6)
00020B68 <AmiBlitz3.ab3@1944>   Dc.l $4E7A2801                                           ;movec vbr,D2
00020B6C <AmiBlitz3.ab3@1945>   JSR _UserState(A6)
00020B72 <AmiBlitz3.ab3@1948>   MOVE.l D2,vbr
00020B74 <AmiBlitz3.ab3@1949> RTS
00020B7A <AmiBlitz3.ab3@1954>   LEA instrtab,a0
00020B80 <AmiBlitz3.ab3@1955>   MOVE.l #labelhash-instrtab,d0
00020B82 <AmiBlitz3.ab3@1956>   ASR.l #2,d0
00020B84 <AmiBlitz3.ab3@1957>   SUBQ.l #1,d0
00020B86 <AmiBlitz3.ab3@1960>   CLR.l (a0)+
00020B88 <AmiBlitz3.ab3@1961>   SUBQ.l #1,d0
00020B8C <AmiBlitz3.ab3@1962>   BNE 'l10
00020B90 <AmiBlitz3.ab3@1964>   BSR.w call_setpointerbusy
00020B94 <AmiBlitz3.ab3@1965>   BSR.w free_userlibs
00020B98 <AmiBlitz3.ab3@1966>   BSR.w scan_for_userlibs
00020B9C <AmiBlitz3.ab3@1967>   BSR.w loadblitzlibs
00020BA0 <AmiBlitz3.ab3@1968> BRA.w call_setpointernormal
00020BCA <AmiBlitz3.ab3@1980>   !basic
00020C04 <AmiBlitz3.ab3@1981>   Poke.l ?size_acidlibs, dos_GetFileSize{Peek$(?str_path_acidlibs)}
00020C14 <AmiBlitz3.ab3@1983>   deflibNameP.l = Peek.l(?deflib)
00020C1E <AmiBlitz3.ab3@1984>   If deflibNameP
00020C50 <AmiBlitz3.ab3@1985>     If Peek.s(deflibNameP)<>""
00020C9A <AmiBlitz3.ab3@1986>       Poke.l ?size_deflibs, dos_GetFileSize{Peek.s(Peek.l(?deflib))}
00020CA0 <AmiBlitz3.ab3@1987>     Else
00020CDA <AmiBlitz3.ab3@1988>       Poke.l ?size_deflibs, dos_GetFileSize{Peek.s(?str_path_deflibs)}
00020CE0 <AmiBlitz3.ab3@1990>   Else
00020D1A <AmiBlitz3.ab3@1991>     Poke.l ?size_deflibs, dos_GetFileSize{Peek.s(?str_path_deflibs)}
00020D54 <AmiBlitz3.ab3@1992>     error{"INTERNAL: Invalid deflib name pointer!"}
00020D72 <AmiBlitz3.ab3@1994>   !asm
00020D78 <AmiBlitz3.ab3@2000>   MOVE.l #str_path_userlibs,D1
00020D7A <AmiBlitz3.ab3@2001>   MOVEQ.l #-$02,D2
00020D80 <AmiBlitz3.ab3@2002>   MOVEA.l _dosbase,A6
00020D84 <AmiBlitz3.ab3@2003>   JSR _Lock(A6)
00020D86 <AmiBlitz3.ab3@2004>   MOVE.l D0,D7
00020D8A <AmiBlitz3.ab3@2005>    BEQ.w 'done     ;exit_get_libraries
00020D8C <AmiBlitz3.ab3@2007>   MOVE.l D7,D1
00020D92 <AmiBlitz3.ab3@2008>   MOVE.l #ptr_parameterstore,D2
00020D96 <AmiBlitz3.ab3@2009>   JSR _Examine(A6)
00020D98 <AmiBlitz3.ab3@2010>   TST.l D0
00020D9C <AmiBlitz3.ab3@2011>   BEQ.w 'done2   ;unlock_and_exit_get_libraries
00020DA2 <AmiBlitz3.ab3@2012>   MOVE.l fib_DirEntryType,D0
00020DA6 <AmiBlitz3.ab3@2013>   BMI.w 'done2   ;unlock_and_exit_get_libraries
00020DA8 <AmiBlitz3.ab3@2021>     MOVE.l D7,D1
00020DAE <AmiBlitz3.ab3@2022>     MOVE.l #ptr_parameterstore,D2
00020DB4 <AmiBlitz3.ab3@2023>     MOVEA.l _dosbase,A6
00020DB8 <AmiBlitz3.ab3@2024>     JSR _ExNext(A6)
00020DBA <AmiBlitz3.ab3@2025>     TST.l D0
00020DBE <AmiBlitz3.ab3@2026>      BEQ.w 'ok    ;exit_scan_libsdrawer                            ; kein weiteres File
00020DC4 <AmiBlitz3.ab3@2028>     MOVE.l fib_DirEntryType,D0                             ; positive for directoies, negative for files
00020DC8 <AmiBlitz3.ab3@2029>     BPL.w 'loop    ;scan_libsdrawer                                  ; skip directories
00020DCE <AmiBlitz3.ab3@2031>     LEA fib_FileName,A0                                    ; pruefen ob infofile
00020DD2 <AmiBlitz3.ab3@2032>     BSR.w check_for_infoextention
00020DD6 <AmiBlitz3.ab3@2033>     BEQ.w 'loop    ;scan_libsdrawer
00020DDC <AmiBlitz3.ab3@2035>     MOVEA.l _execbase,A6                                   ; allocate $26 = 38 bytes fuer listeneintrag
00020DDE <AmiBlitz3.ab3@2036>     MOVEQ.l #$26,D0
00020DE0 <AmiBlitz3.ab3@2037>     MOVEQ.l #$01,D1
00020DE6 <AmiBlitz3.ab3@2039>     MOVE.l mempool,a0
00020DEA <AmiBlitz3.ab3@2040>     JSR _AllocPooled(a6)
00020DF0 <AmiBlitz3.ab3@2043>     MOVEA.l _dosbase,A6
00020DF2 <AmiBlitz3.ab3@2045>     MOVE.l D0,D6                                           ; sichere speicheradresse in D6
00020DF8 <AmiBlitz3.ab3@2047>     LEA ptr_userlibs_list,A0                               ; pruefe liste
00020DFA <AmiBlitz3.ab3@2050>     MOVE.l (A0),D5
00020DFE <AmiBlitz3.ab3@2051>      BEQ.w 'here                                       ; kein pointer da? kann springe weiter
00020E00 <AmiBlitz3.ab3@2052>     MOVEA.l D5,A2
00020E02 <AmiBlitz3.ab3@2053>     ADDQ.w #6,A2                                       ; 6 bytes weiter gehen, um dateinamen zu speichern
00020E08 <AmiBlitz3.ab3@2055>     LEA fib_FileName,A1    ;filename                  ; vergleich, ob Dateiname schon in der liste ist
00020E0A <AmiBlitz3.ab3@2058>       MOVEQ.l #$00,D0
00020E0C <AmiBlitz3.ab3@2059>       MOVE.b (A1)+,D0
00020E10 <AmiBlitz3.ab3@2060>        BEQ.w 'here         ;I'm shorter                ; dateiname komplett, dann weiter
00020E12 <AmiBlitz3.ab3@2061>       MOVEQ.l #$00,D1
00020E14 <AmiBlitz3.ab3@2062>       MOVE.b (A2)+,D1
00020E18 <AmiBlitz3.ab3@2063>        BEQ.w 'next         ;I'm longer
00020E3A <AmiBlitz3.ab3@2065>       !compare1                                            ;bsr.w tstalpha
00020E3E <AmiBlitz3.ab3@2067>       BNE.w 'acskip
00020E42 <AmiBlitz3.ab3@2068>       ANDI.w #$DF,D0       ; was 255-32
00020E44 <AmiBlitz3.ab3@2071>       EXG.l D0,D1
00020E66 <AmiBlitz3.ab3@2073>       !compare1                                            ;bsr.w tstalpha
00020E6A <AmiBlitz3.ab3@2075>       BNE.w 'acskip2
00020E6E <AmiBlitz3.ab3@2076>       ANDI.w #$DF,D0        ; was 255-32
00020E70 <AmiBlitz3.ab3@2079>       EXG.l D0,D1
00020E72 <AmiBlitz3.ab3@2080>       CMP.b D1,D0
00020E76 <AmiBlitz3.ab3@2081>     BEQ.w 'comloop
00020E7A <AmiBlitz3.ab3@2082>     BCS.w 'here             ;I'm less than
00020E7C <AmiBlitz3.ab3@2085>     MOVEA.l D5,A0
00020E80 <AmiBlitz3.ab3@2086>  BRA.w 'insloop
00020E82 <AmiBlitz3.ab3@2089>     MOVEA.l D6,A1                                          ; hier war die adresse des allokierten Speicers drin
00020E84 <AmiBlitz3.ab3@2090>     MOVE.l (A0),(A1)            ;next of last is next of me
00020E86 <AmiBlitz3.ab3@2091>     MOVE.l A1,(A0)              ;I am next of last
00020E88 <AmiBlitz3.ab3@2092>     ADDQ.w #4,A1                                           ; pointer zum naechsten namen ueberspringen
00020E8C <AmiBlitz3.ab3@2093>     MOVE.w #$FFFF,(A1)+         ; was - 1;set 'Used' flag  ; $FFFF schreiben
00020E92 <AmiBlitz3.ab3@2094>     MOVEA.l #fib_FileName,A0    ; was #namebuff+8,         ; dateinamen in die liste kopieren
00020E94 <AmiBlitz3.ab3@2097>       MOVE.b (A0)+,(A1)+
00020E98 <AmiBlitz3.ab3@2098>     BNE.w 'coploop
00020E9C <AmiBlitz3.ab3@2099>  BRA.w 'loop    ;scan_libsdrawer
00020E9E <AmiBlitz3.ab3@2102>   MOVE.l D7,D1
00020EA4 <AmiBlitz3.ab3@2103>   MOVEA.l _dosbase,A6
00020EA8 <AmiBlitz3.ab3@2104>   JSR _UnLock(A6)
00020EAA <AmiBlitz3.ab3@2105>   MOVEQ.l #-$01,D0
00020EAC <AmiBlitz3.ab3@2108>  RTS
00020EAE <AmiBlitz3.ab3@2111>   MOVE.l D7,D1
00020EB4 <AmiBlitz3.ab3@2112>   MOVEA.l _dosbase,A6
00020EB8 <AmiBlitz3.ab3@2113>   JSR _UnLock(A6)
00020EBA <AmiBlitz3.ab3@2114>   MOVEQ.l #$00,D0
00020EBC <AmiBlitz3.ab3@2115> RTS
00020EC2 <AmiBlitz3.ab3@2120>   MOVEA.l _execbase,A6
00020EC8 <AmiBlitz3.ab3@2121>   MOVEA.l ptr_userlibs_list,A2
00020ECE <AmiBlitz3.ab3@2122>   CLR.l ptr_userlibs_list
00020ED2 <AmiBlitz3.ab3@2125>     CMPA.w #$0,A2
00020ED6 <AmiBlitz3.ab3@2126>     BEQ.w 'done
00020ED8 <AmiBlitz3.ab3@2127>       MOVEA.l A2,A1
00020EDA <AmiBlitz3.ab3@2128>       MOVEQ.l #$26,D0
00020EDC <AmiBlitz3.ab3@2129>       MOVEA.l (A2),A2
00020EE2 <AmiBlitz3.ab3@2131>       MOVE.l mempool,a0
00020EE8 <AmiBlitz3.ab3@2132>       MOVEA.l _execbase,A6
00020EEC <AmiBlitz3.ab3@2133>       JSR _FreePooled(A6)
00020EF0 <AmiBlitz3.ab3@2136>  BRA.w 'loop
00020EF2 <AmiBlitz3.ab3@2139> RTS
00020EF4 <AmiBlitz3.ab3@2143> pass:  Dc.w 0                                             ; smallpass org source
00020EF6 <AmiBlitz3.ab3@2144> compiler_job: Dc.w 0                                      ; added by thilo: what the compiler is doing at the moment
00020EFC <AmiBlitz3.ab3@2150>   MOVE.l A7,errstack                                      ;startcompile
00020F00 <AmiBlitz3.ab3@2152>   !regs2stack
00020F08 <AmiBlitz3.ab3@2153>   BTST #$7,make_smallestcode       ; test if makesmall is set
00020F0C <AmiBlitz3.ab3@2154>   BNE 'nobigallox                  ; yes makesmall is set, we don't change the buffers
00020F12 <AmiBlitz3.ab3@2155>     JSR bigallox                   ; no try to make big buffers for 1 pass compile
00020F16 <AmiBlitz3.ab3@2158>   !stack2regs
00020F1C <AmiBlitz3.ab3@2169>   CLR.l reqmode
00020F26 <AmiBlitz3.ab3@2171>   MOVE.l #Aclearallvars,errcont
00020F30 <AmiBlitz3.ab3@2172>   MOVE.l #concomstack,concomsp
00020F34 <AmiBlitz3.ab3@2181>   MOVE.w #1450,D0
00020F36 <AmiBlitz3.ab3@2183>   LSR.w #3,D0
00020F38 <AmiBlitz3.ab3@2184>   SUBQ.w #7,D0                                             ; 173
00020F3E <AmiBlitz3.ab3@2185>   MOVE.w D0,progressbar_width
00020F40 <AmiBlitz3.ab3@2186>   SWAP D0
00020F42 <AmiBlitz3.ab3@2187>   CLR.w D0
00020F48 <AmiBlitz3.ab3@2188>   MOVE.l numlines,d1           ; was divu numlines,d0
00020F4C <AmiBlitz3.ab3@2189>   DIVU.l d1,d0                                             ; progressbar_width / numlines
00020F4E <AmiBlitz3.ab3@2191>   TST.w D0
00020F52 <AmiBlitz3.ab3@2192>   BNE.w 'ok
00020F54 <AmiBlitz3.ab3@2193>   MOVEQ.l #-$01,D0
00020F5A <AmiBlitz3.ab3@2196>   MOVE.w D0,progress_per_line
00020F62 <AmiBlitz3.ab3@2206>   BTST #$7,use_debugger
00020F66 <AmiBlitz3.ab3@2209>   BNE 'debugon
00020F6C <AmiBlitz3.ab3@2210>   CLR.w debugmode
00020F70 <AmiBlitz3.ab3@2211>  BRA.b 'debugoff
00020F76 <AmiBlitz3.ab3@2214>   SNE debugmode
00020FAE <AmiBlitz3.ab3@2222>   !ComData_SetB{comByte_DebugMode,debugmode}
00020FB4 <AmiBlitz3.ab3@2225>   CLR.w dirmode           ;direct mode flag                                  ;direct mode flag
00020FBA <AmiBlitz3.ab3@2226>   CLR.w ezerr             ;quiet error                                 ;quiet error
00020FC0 <AmiBlitz3.ab3@2227>   CLR.l currentfunction
00020FC6 <AmiBlitz3.ab3@2228>   CLR.w connest
00020FCC <AmiBlitz3.ab3@2229>   CLR.w varmode
00020FD2 <AmiBlitz3.ab3@2230>   CLR.w proceduremode
00020FD8 <AmiBlitz3.ab3@2231>   CLR.w ininclude
00020FDE <AmiBlitz3.ab3@2232>   CLR.w intstring
00020FE4 <AmiBlitz3.ab3@2233>   CLR.w pass
00020FEC <AmiBlitz3.ab3@2235>   MOVE.w #0,compiler_job
00020FF2 <AmiBlitz3.ab3@2236>   CLR.l errorcounter
00020FF8 <AmiBlitz3.ab3@2247>   CLR.l funcscanon
00020FFC <AmiBlitz3.ab3@2249>   BSR.w compileall
00021002 <AmiBlitz3.ab3@2251> 
00021008 <AmiBlitz3.ab3@2252>   TST.l errorcounter
0002100C <AmiBlitz3.ab3@2253>   BEQ 'skiperrorstop
0002100E <AmiBlitz3.ab3@2254>  RTS
00021014 <AmiBlitz3.ab3@2257>   MOVE.w dontwrite_nomemleft,d0
00021018 <AmiBlitz3.ab3@2258>   CMP.w #1,d0
0002101C <AmiBlitz3.ab3@2259>   BNE 'l3
00021022 <AmiBlitz3.ab3@2260>   TST.l errorcounter
00021026 <AmiBlitz3.ab3@2261>   BNE 'l3
0002102C <AmiBlitz3.ab3@2262>   CLR.w dontwrite_nomemleft
00021030 <AmiBlitz3.ab3@2263>   BSR compileall                                           ;if a function is not found
00021036 <AmiBlitz3.ab3@2264>   ADDQ.w #1,pass
00021074 <AmiBlitz3.ab3@2268>   !ComData_GetB{comByte_FuncOptimize,D0}  ; now its in the xtra file and can be put to GUI settings ; Wanderer
00021078 <AmiBlitz3.ab3@2269>   BEQ 'out  ; only if func optimize is set >< 0; Wanderer
0002107E <AmiBlitz3.ab3@2270>   LEA firstproc,a0
00021084 <AmiBlitz3.ab3@2271>   CLR.l savefuncspace
00021086 <AmiBlitz3.ab3@2272>   MOVE.l (a0),d0
00021088 <AmiBlitz3.ab3@2276>     MOVE.l d0,a0
0002108C <AmiBlitz3.ab3@2277>     BEQ 'out
00021090 <AmiBlitz3.ab3@2278>     TST.b isfunc(a0)
00021094 <AmiBlitz3.ab3@2279>     BNE 'nex
00021098 <AmiBlitz3.ab3@2280>     MOVEM.l d2/a6/a0,-(a7)
0002109A <AmiBlitz3.ab3@2282>     MOVEQ #0,d0
0002109E <AmiBlitz3.ab3@2283>     MOVE.b $21+#funcentry_extend-1(a0),d0
000210A2 <AmiBlitz3.ab3@2284>     SUB.w #$21+#funcentry_extend,d0
000210A6 <AmiBlitz3.ab3@2285>     ADD.w #16,d0
000210AC <AmiBlitz3.ab3@2286>     MOVE.l #$10000,d1
000210AE <AmiBlitz3.ab3@2287>     MOVE.l d0,d2
000210B4 <AmiBlitz3.ab3@2288>     MOVEA.l _execbase,A6
000210B8 <AmiBlitz3.ab3@2289>     JSR _AllocMem(a6)         ; thilo: not 100% sure about this!
000210BA <AmiBlitz3.ab3@2290>     MOVE.l d0,a1
000210BE <AmiBlitz3.ab3@2291>     MOVE.l d2,4(a1)
000210C4 <AmiBlitz3.ab3@2292>     MOVE.l unusedfunc,(a1)
000210CA <AmiBlitz3.ab3@2293>     MOVE.l d0,unusedfunc
000210CE <AmiBlitz3.ab3@2294>     MOVEM.l (a7)+,a6/a0/d2
000210D2 <AmiBlitz3.ab3@2295>     MOVE.l isfunc+1(a0),d0
000210D4 <AmiBlitz3.ab3@2296>     ADDQ.l #6,d0
000210DA <AmiBlitz3.ab3@2297>     ADD.l d0,savefuncspace
000210DE <AmiBlitz3.ab3@2300>     MOVE.l d0,8(a1)
000210E2 <AmiBlitz3.ab3@2301>     LEA 12(a1),a1
000210E4 <AmiBlitz3.ab3@2302>     MOVE.l a0,-(a7)
000210E8 <AmiBlitz3.ab3@2303>     LEA $21+#funcentry_extend(a0),a0
000210EA <AmiBlitz3.ab3@2306>       MOVE.b (a0)+,(a1)+
000210EE <AmiBlitz3.ab3@2307>     BNE 'l1
000210F0 <AmiBlitz3.ab3@2308>     MOVE.l (a7)+,a0
000210F2 <AmiBlitz3.ab3@2311>     MOVE.l (a0),d0
000210F6 <AmiBlitz3.ab3@2312>  BRA 'lr1
000210FE <AmiBlitz3.ab3@2315>   BTST #$7,make_smallestcode
00021102 <AmiBlitz3.ab3@2316>   BEQ.b 'nosmall                                           ;optimize for executable
00021108 <AmiBlitz3.ab3@2318>   CLR.l morememadd
0002110C <AmiBlitz3.ab3@2322>   BSR.w alloxadj
00021110 <AmiBlitz3.ab3@2323>   BEQ.w 'anerr
00021114 <AmiBlitz3.ab3@2326>   BSR.w compileall
0002111A <AmiBlitz3.ab3@2328>   ADDQ.w #1,pass
00021120 <AmiBlitz3.ab3@2332>   MOVE.w dontwrite_nomemleft,D1
00021124 <AmiBlitz3.ab3@2333>   BEQ.w 'dosave
00021128 <AmiBlitz3.ab3@2354>  BRA.w 'inc     ; was beq
00021130 <AmiBlitz3.ab3@2368>   MOVE.w #$FFFF,anyerrs        ; was -1
00021134 <AmiBlitz3.ab3@2369>  BRA.w 'dosave
00021138 <AmiBlitz3.ab3@2372>   BSR.w alloxinc                                          ;increase all by 50%
0002113C <AmiBlitz3.ab3@2373>   BEQ.w Aclearallvars
00021140 <AmiBlitz3.ab3@2374>  BRA.w 'retry
00021144 <AmiBlitz3.ab3@2387> BRA.w qfree        ;used to go after beq .nosave                          ;???????
0002114A <AmiBlitz3.ab3@2393>   JSR freereps
00021150 <AmiBlitz3.ab3@2394>   JSR freesels
00021156 <AmiBlitz3.ab3@2395>   JSR freetlist
0002115C <AmiBlitz3.ab3@2396>   JSR freepends
00021162 <AmiBlitz3.ab3@2397>   JSR freeifs
00021168 <AmiBlitz3.ab3@2398>   JSR freeincs
0002116E <AmiBlitz3.ab3@2399>   JSR freexincs
00021174 <AmiBlitz3.ab3@2400>   JSR freefors
0002117A <AmiBlitz3.ab3@2401> JMP cleartemplabel
0002117E <AmiBlitz3.ab3@2404> mempool2:  Dc.l 0
00021184 <AmiBlitz3.ab3@2409>   JSR Aclearcache
0002118C <AmiBlitz3.ab3@2411>   BTST #$7,use_debugger
00021190 <AmiBlitz3.ab3@2413>   BNE 'debugon
00021196 <AmiBlitz3.ab3@2414>   CLR.w debugmode
0002119A <AmiBlitz3.ab3@2415>  BRA.b 'debugoff
000211A0 <AmiBlitz3.ab3@2418>   SNE debugmode
000211D8 <AmiBlitz3.ab3@2423>   !ComData_SetB{comByte_DebugMode,debugmode}
000211DE <AmiBlitz3.ab3@2425>   LEA regtable,a0
000211E0 <AmiBlitz3.ab3@2426>   MOVEQ #10,d0
000211E2 <AmiBlitz3.ab3@2429>     CLR.l (a0)+
000211E6 <AmiBlitz3.ab3@2430>   DBF d0,'l1
000211EC <AmiBlitz3.ab3@2432>   LEA includetemp2,a0
000211EE <AmiBlitz3.ab3@2433>   CLR.b (a0)
000211F8 <AmiBlitz3.ab3@2434>   MOVE.l #7,maxregs
000211FE <AmiBlitz3.ab3@2435>   CLR.w debugnest
00021204 <AmiBlitz3.ab3@2436>   CLR.b funcparloop
0002120A <AmiBlitz3.ab3@2437>   CLR.b nostringopt
00021210 <AmiBlitz3.ab3@2438>   CLR.b firsttime
00021216 <AmiBlitz3.ab3@2439>   CLR.l lastdestpointer
0002121C <AmiBlitz3.ab3@2440>   CLR.l lastwritedat
00021222 <AmiBlitz3.ab3@2441>   CLR.l prevwritedat
00021228 <AmiBlitz3.ab3@2442>   CLR.l includeline
0002122E <AmiBlitz3.ab3@2443>   CLR.b incnif
00021234 <AmiBlitz3.ab3@2444>   CLR.b formode
0002123A <AmiBlitz3.ab3@2445>   CLR.b funccall
00021240 <AmiBlitz3.ab3@2446>   CLR.w objectcount
00021246 <AmiBlitz3.ab3@2447>   CLR.b resdisable
0002124C <AmiBlitz3.ab3@2448>   CLR.b developobject
00021252 <AmiBlitz3.ab3@2449>   CLR.b optistring
00021258 <AmiBlitz3.ab3@2450>   CLR.b optistring2
0002125E <AmiBlitz3.ab3@2451>   CLR.b optiarray
00021264 <AmiBlitz3.ab3@2452>   CLR.b quickadd
0002126A <AmiBlitz3.ab3@2453>   CLR.w newmode
00021270 <AmiBlitz3.ab3@2454>   CLR.w mode
00021276 <AmiBlitz3.ab3@2455>   CLR.w string1
0002127C <AmiBlitz3.ab3@2456>   CLR.b fastfunc
00021282 <AmiBlitz3.ab3@2457>   CLR.w load_var_size
00021288 <AmiBlitz3.ab3@2458>   CLR.w load_var_reg
0002128E <AmiBlitz3.ab3@2459>   CLR.l load_var_addr
00021294 <AmiBlitz3.ab3@2460>   CLR.w imm_size
0002129A <AmiBlitz3.ab3@2461>   CLR.w imm_reg
000212A0 <AmiBlitz3.ab3@2462>   CLR.l imm_addr
000212A6 <AmiBlitz3.ab3@2463>   CLR.b _dcb
000212AC <AmiBlitz3.ab3@2464>   CLR.l nohunkoffset
000212B2 <AmiBlitz3.ab3@2465>   CLR.b peekaddrsize
000212B8 <AmiBlitz3.ab3@2466>   CLR.b typecheck
000212BE <AmiBlitz3.ab3@2467>   CLR.b declare2
000212C4 <AmiBlitz3.ab3@2468>   CLR.b declare
000212CA <AmiBlitz3.ab3@2469>   CLR.l myoline                                          ;check
000212D0 <AmiBlitz3.ab3@2470>   CLR.l myline                                          ;check
000212D6 <AmiBlitz3.ab3@2471>   CLR.b newvariable
000212DC <AmiBlitz3.ab3@2472>   CLR.b saved0
000212E2 <AmiBlitz3.ab3@2473>   CLR.l bsssize
000212E8 <AmiBlitz3.ab3@2474>   CLR.l chipsize
000212EE <AmiBlitz3.ab3@2475>   CLR.b infunctioncode
000212F4 <AmiBlitz3.ab3@2476>   CLR.l errorcounter
000212FE <AmiBlitz3.ab3@2477>   MOVE.l #-1,bssstart
00021308 <AmiBlitz3.ab3@2478>   MOVE.l #-1,bssend
00021312 <AmiBlitz3.ab3@2479>   MOVE.l #-1,chipstart
0002131C <AmiBlitz3.ab3@2480>   MOVE.l #-1,chipend
00021324 <AmiBlitz3.ab3@2481>   MOVE.w #0,bssmode
0002132A <AmiBlitz3.ab3@2482>   CLR.w a2offset
00021330 <AmiBlitz3.ab3@2483>   CLR.w fast
00021336 <AmiBlitz3.ab3@2484>   CLR.w fpu
0002133C <AmiBlitz3.ab3@2485>   CLR.b iee
00021342 <AmiBlitz3.ab3@2486>   CLR.w newsyntax
00021346 <AmiBlitz3.ab3@2488>   BSR.w qfree
0002134C <AmiBlitz3.ab3@2489>   JSR killoffs              ;free up DOS offset table
00021352 <AmiBlitz3.ab3@2490>   JSR frallvars               ;free up Global vars
00021358 <AmiBlitz3.ab3@2491>   JSR fralltypes              ;free up all types
0002135E <AmiBlitz3.ab3@2492>   JSR freemacs                ;free up actual macro defines.
00021364 <AmiBlitz3.ab3@2493>   JSR clearfunctionlist       ;free up states/funcs
0002136A <AmiBlitz3.ab3@2495>   TST.w pass                  
00021370 <AmiBlitz3.ab3@2498>   JSR clearlabels             ;free up labels
00021376 <AmiBlitz3.ab3@2500>   JSR clearhash
0002137C <AmiBlitz3.ab3@2503>   LEA devo,a0
00021380 <AmiBlitz3.ab3@2504>   MOVEM.l a0-a6/d0-d7,-(a7)
00021386 <AmiBlitz3.ab3@2505>   LEA ptr_parameterstore,a1
00021388 <AmiBlitz3.ab3@2508>     MOVE.b (a0)+,(a1)+
0002138C <AmiBlitz3.ab3@2509>   BNE 'l1b
0002138E <AmiBlitz3.ab3@2510>   MOVEQ #13,d2
00021394 <AmiBlitz3.ab3@2511>   JSR findlabel2
00021398 <AmiBlitz3.ab3@2512>   BNE 'd
0002139C <AmiBlitz3.ab3@2513>   CLR.l 8(a2)
000213A0 <AmiBlitz3.ab3@2516>   MOVEM.l (a7)+,a0-a6/d0-d7
000213CA <AmiBlitz3.ab3@2517>   !basic
0002143E <AmiBlitz3.ab3@2518>   dos_Delete{dos_AddPart{my_systemdir$,"ab_compileerror.txt"}}
0002145C <AmiBlitz3.ab3@2519>   !asm
00021462 <AmiBlitz3.ab3@2520>   CLR.b returncode
00021468 <AmiBlitz3.ab3@2522> JMP freeprocvs                     ;free up outstanding proc stuff
0002146E <AmiBlitz3.ab3@2526>   MOVE.l #bssstore-labelhash,d0
00021470 <AmiBlitz3.ab3@2527>   ASR.l #2,d0
00021476 <AmiBlitz3.ab3@2528>   LEA labelhash,a0
00021478 <AmiBlitz3.ab3@2531>     CLR.l (a0)+
0002147A <AmiBlitz3.ab3@2532>     SUBQ.l #1,d0
0002147E <AmiBlitz3.ab3@2533>   BNE.s 'l10
00021484 <AmiBlitz3.ab3@2535>   LEA labelbase,a1
00021486 <AmiBlitz3.ab3@2536>   MOVE.l (a1),d0
0002148A <AmiBlitz3.ab3@2537>   BEQ 'l11
0002148C <AmiBlitz3.ab3@2540>     MOVE.l d0,a1
00021490 <AmiBlitz3.ab3@2541>     TST.l 4(a1)
00021494 <AmiBlitz3.ab3@2542>     BEQ 'l29
00021498 <AmiBlitz3.ab3@2543>     LEA $13(a1),a0
0002149A <AmiBlitz3.ab3@2544>     MOVEQ #0,d0
0002149C <AmiBlitz3.ab3@2545>     MOVEQ #0,d1
0002149E <AmiBlitz3.ab3@2548>       MOVE.b (a0)+,d1
000214A2 <AmiBlitz3.ab3@2549>       BEQ 'l12
000214A8 <AmiBlitz3.ab3@2550>       !hashalgo
000214AC <AmiBlitz3.ab3@2551>  BRA 'l13
000214B2 <AmiBlitz3.ab3@2554>     LEA labelhash,a0
000214B8 <AmiBlitz3.ab3@2555>     AND.l #hashsize,d0
000214BA <AmiBlitz3.ab3@2556>      ASL.l #2,d0
000214BE <AmiBlitz3.ab3@2557>     MOVE.l 0(a0,d0),d1                                     ;*4
000214C2 <AmiBlitz3.ab3@2558>     MOVE.l d1,$c(a1)
000214C6 <AmiBlitz3.ab3@2559>     MOVE.l a1,0(a0,d0)
000214C8 <AmiBlitz3.ab3@2562>     MOVE.l (a1),d0
000214CC <AmiBlitz3.ab3@2563>   BNE 'l21
000214CE <AmiBlitz3.ab3@2566> RTS
000214D4 <AmiBlitz3.ab3@2570>   MOVEA.l lastrestype,A0
000214D6 <AmiBlitz3.ab3@2571>   MOVEA.l (A0),A2
000214D8 <AmiBlitz3.ab3@2572>   CLR.l (A0)
000214DE <AmiBlitz3.ab3@2573> JMP freetypes
000214E4 <AmiBlitz3.ab3@2577>   MOVEA.l varbase,A3
000214EA <AmiBlitz3.ab3@2578>   CLR.l varbase
000214EE <AmiBlitz3.ab3@2582>   CMPA.w #$0,A3
000214F2 <AmiBlitz3.ab3@2583>   BEQ.w 'l20
000214F4 <AmiBlitz3.ab3@2584>   MOVEA.l A3,A1
000214F6 <AmiBlitz3.ab3@2585>   MOVEA.l (A3),A3
000214F8 <AmiBlitz3.ab3@2586>   MOVEQ.l #$00,D0
000214FC <AmiBlitz3.ab3@2587>   MOVE.b $E+4(A1),D0
00021502 <AmiBlitz3.ab3@2588>   MOVEA.l _execbase,A6
00021508 <AmiBlitz3.ab3@2589>   MOVE.l mempool2,a0
0002150C <AmiBlitz3.ab3@2590>   JSR _FreePooled(A6)
00021510 <AmiBlitz3.ab3@2591>  BRA.w 'l10
00021512 <AmiBlitz3.ab3@2594> RTS
00021518 <AmiBlitz3.ab3@2600>   LEA firstiff,A2
0002151A <AmiBlitz3.ab3@2601>   MOVEQ.l #$0E,D2
00021520 <AmiBlitz3.ab3@2602> JMP freeslist
00021522 <AmiBlitz3.ab3@2608> progressbar_width:   Dc.w 100                              ;riteend org source ;right end of include strip
00021524 <AmiBlitz3.ab3@2609> inmacro:             Ds.w 1                                ;macmask org source ;macro found
0002152A <AmiBlitz3.ab3@2616>   CLR.w inmacro
00021530 <AmiBlitz3.ab3@2618>   ADDQ.l #1,globallinecount
00021536 <AmiBlitz3.ab3@2619>   CLR.b nostringopt
0002153A <AmiBlitz3.ab3@2621>   BSR.w freembuff
00021540 <AmiBlitz3.ab3@2622>   CLR.w instringon
00021546 <AmiBlitz3.ab3@2627>   TST.w ininclude
0002154A <AmiBlitz3.ab3@2628>   BEQ.w 'skip3
00021550 <AmiBlitz3.ab3@2630>   ADDQ.l #1,includeline
00021556 <AmiBlitz3.ab3@2631>     JSR ab3_WriteDebugFile
0002155C <AmiBlitz3.ab3@2633>   JSR readinc
00021560 <AmiBlitz3.ab3@2634>   BEQ.w 'skip3
00021566 <AmiBlitz3.ab3@2638>   MOVE.w ininclude,D0
0002156A <AmiBlitz3.ab3@2639>   CMP.w #$4,D0
0002156E <AmiBlitz3.ab3@2640>   BCC.w 'stskip
00021570 <AmiBlitz3.ab3@2641>   ADD.w D0,D0
00021576 <AmiBlitz3.ab3@2642>   LEA progress_per_line,A0
0002157A <AmiBlitz3.ab3@2643>   MOVE.w $0(A0,D0.W),D2     ;offset in line
0002157E <AmiBlitz3.ab3@2644>   CMP.w progressbar_width(PC),D2
00021582 <AmiBlitz3.ab3@2645>   BCC.w 'stskip
00021586 <AmiBlitz3.ab3@2646>   ADDQ.w #1,$0(A0,D0.W)
00021588 <AmiBlitz3.ab3@2648>   LSR.w #1,D0
0002158A <AmiBlitz3.ab3@2650>   MOVE.l d0,d1
0002158C <AmiBlitz3.ab3@2651>   EXT.l d1
0002158E <AmiBlitz3.ab3@2652>   MOVE.l d2,d0
00021590 <AmiBlitz3.ab3@2653>   EXT.l d0                                                 ;d0=x,d1=y
00021596 <AmiBlitz3.ab3@2655>   JSR update_progressbar
00021598 <AmiBlitz3.ab3@2659>   MOVEQ.l #-$01,D0
0002159A <AmiBlitz3.ab3@2660>  RTS
000215A0 <AmiBlitz3.ab3@2665>   MOVE.l titleat,D0
000215A2 <AmiBlitz3.ab3@2666>   MOVEQ.l #$00,D1
000215A8 <AmiBlitz3.ab3@2667>   MOVE.w progress_per_line,D1
000215AA <AmiBlitz3.ab3@2668>   ADD.l D1,D0
000215AC <AmiBlitz3.ab3@2669>   MOVE.l D0,D1
000215AE <AmiBlitz3.ab3@2670>   SWAP D0
000215B4 <AmiBlitz3.ab3@2671>   CMP.w titleat,D0
000215B8 <AmiBlitz3.ab3@2672>    BEQ.w 'skip3a
000215BA <AmiBlitz3.ab3@2677>   EXT.l d0
000215BC <AmiBlitz3.ab3@2678>   MOVE.l d1,-(a7)
000215C4 <AmiBlitz3.ab3@2681>   MOVE.w #1,compiler_job                                    ; set to compiler job 1 (=build executable)
000215CA <AmiBlitz3.ab3@2682>   JSR update_progressbar
000215D2 <AmiBlitz3.ab3@2683>   MOVE.w #0,compiler_job                                    ; set to compiler job 0 (=compile source)
000215D4 <AmiBlitz3.ab3@2689>   MOVE.l (a7)+,d1
000215DA <AmiBlitz3.ab3@2693>   MOVE.l D1,titleat
000215E0 <AmiBlitz3.ab3@2696>   ADDQ.l #1,linenumat
000215E6 <AmiBlitz3.ab3@2697>   CLR.w linedone
000215EC <AmiBlitz3.ab3@2699>   JSR ab3_WriteDebugFile  ; write to DebugFile every main source line
000215F2 <AmiBlitz3.ab3@2705>   SUBQ.l #1,numlines2
000215F6 <AmiBlitz3.ab3@2707>    BEQ.w 'skip
000215FC <AmiBlitz3.ab3@2708>   MOVEA.l sourceline,A0
000215FE <AmiBlitz3.ab3@2709>   MOVEA.l (A0),A0
00021604 <AmiBlitz3.ab3@2710>   MOVE.l A0,sourceline
00021608 <AmiBlitz3.ab3@2711>   LEA $9(A0),A5
0002160A <AmiBlitz3.ab3@2714> RTS
0002160C <AmiBlitz3.ab3@2718>   MOVE.w D0,-(A7)
0002160E <AmiBlitz3.ab3@2719>   MOVEQ.l #$03,D0
00021610 <AmiBlitz3.ab3@2722>     MOVE.w D1,D2
00021614 <AmiBlitz3.ab3@2723>     ANDI.w #$F,D2
00021618 <AmiBlitz3.ab3@2724>     ADDI.w #$30,D2
0002161C <AmiBlitz3.ab3@2725>     CMP.w #$3A,D2
00021620 <AmiBlitz3.ab3@2726>      BCS.w 'skip
00021622 <AmiBlitz3.ab3@2727>     ADDQ.w #7,D2
00021626 <AmiBlitz3.ab3@2730>     MOVE.b D2,$0(A0,D0.W)
00021628 <AmiBlitz3.ab3@2731>     LSR.w #4,D1
0002162C <AmiBlitz3.ab3@2732>   DBF D0,'loop
0002162E <AmiBlitz3.ab3@2734>   MOVE.w (A7)+,D0
00021630 <AmiBlitz3.ab3@2735> RTS
00021636 <AmiBlitz3.ab3@2745>   MOVE.w skipcode,D1
0002163A <AmiBlitz3.ab3@2746>   BNE.w 'loop0
0002163C <AmiBlitz3.ab3@2747>  RTS
0002163E <AmiBlitz3.ab3@2750>   MOVE.l A5,-(A7)
00021640 <AmiBlitz3.ab3@2751>   MOVEQ.l #$3A,D1      ;':'
00021642 <AmiBlitz3.ab3@2752>   MOVEQ.l #$21,D2      ;'!'
00021644 <AmiBlitz3.ab3@2753>   MOVEQ.l #$3B,D3      ;';'
00021646 <AmiBlitz3.ab3@2754>   MOVEQ.l #$22,D4      ;'"'
00021648 <AmiBlitz3.ab3@2757>   MOVE.b (A5)+,D0
0002164C <AmiBlitz3.ab3@2758>    BEQ.w 'done
00021650 <AmiBlitz3.ab3@2759>    BPL.w 'test
00021652 <AmiBlitz3.ab3@2760>   MOVE.b (A5)+,D0
00021656 <AmiBlitz3.ab3@2761>  BRA.w 'loop
00021658 <AmiBlitz3.ab3@2764>   CMP.b D4,D0
0002165C <AmiBlitz3.ab3@2765>    BNE.w 'notq
0002165E <AmiBlitz3.ab3@2768>   MOVE.b (A5)+,D0
00021662 <AmiBlitz3.ab3@2769>    BEQ.w notqerr
00021666 <AmiBlitz3.ab3@2775>   CMP.b #$22,D0        ;'"'
0002166A <AmiBlitz3.ab3@2776>    BNE.w 'qloop
0002166E <AmiBlitz3.ab3@2777>  BRA.w 'loop
00021670 <AmiBlitz3.ab3@2780>   CMP.b D1,D0
00021674 <AmiBlitz3.ab3@2781>    BEQ.w 'done
00021676 <AmiBlitz3.ab3@2782>   CMP.b D3,D0
0002167A <AmiBlitz3.ab3@2783>    BEQ.w 'done       ;macro character!
0002167C <AmiBlitz3.ab3@2784>   CMP.b D2,D0
00021680 <AmiBlitz3.ab3@2785>    BNE.w 'loop
00021688 <AmiBlitz3.ab3@2789>   MOVE.w #$FFFF,inmacro    ; was -1                                ; no runtimecheck in macros
0002168A <AmiBlitz3.ab3@2790>   MOVEA.l A5,A3
00021690 <AmiBlitz3.ab3@2792>    JSR getparameter2
00021694 <AmiBlitz3.ab3@2793>    BNE.w 'fkitme
0002169A <AmiBlitz3.ab3@2794>  JMP syntaxerr
000216A4 <AmiBlitz3.ab3@2799>    MOVE.w oldqflag,instringon
000216AA <AmiBlitz3.ab3@2800>   MOVEA.l lastsourcepos,A5
000216B0 <AmiBlitz3.ab3@2803>    JSR findmac                                             ;find macro
000216B4 <AmiBlitz3.ab3@2804>    BEQ.w 'kl1
000216BA <AmiBlitz3.ab3@2805>  JMP nomacerr
000216C0 <AmiBlitz3.ab3@2809>   TST.b debugmode
000216C4 <AmiBlitz3.ab3@2810>   BEQ 'sk1
000216C8 <AmiBlitz3.ab3@2811>   MOVE.w #$4e71,d1
000216CE <AmiBlitz3.ab3@2812>   JSR writeword
000216D0 <AmiBlitz3.ab3@2813>   MOVE.l a5,-(a7)
000216D2 <AmiBlitz3.ab3@2814>   MOVE.l a3,a5
000216D4 <AmiBlitz3.ab3@2815>   SUBQ.l #1,a5
000216DC <AmiBlitz3.ab3@2816>   MOVE.w #$0,inmacro
000216E0 <AmiBlitz3.ab3@2817>   BSR debugstuffa
000216E8 <AmiBlitz3.ab3@2818>   MOVE.w #$FFFF,inmacro
000216EA <AmiBlitz3.ab3@2819>   MOVE.l (a7)+,a5
000216EE <AmiBlitz3.ab3@2820>   MOVE.w #$4e71,d1
000216F4 <AmiBlitz3.ab3@2821>   JSR writeword
000216F6 <AmiBlitz3.ab3@2825>   MOVEA.l A5,A4            ;start of parameters!
000216FA <AmiBlitz3.ab3@2829>    CMP.b #" ",(a4)+
000216FE <AmiBlitz3.ab3@2830>     BEQ 'l5a
00021700 <AmiBlitz3.ab3@2831>      SUBQ.l#1,a4
00021704 <AmiBlitz3.ab3@2832>      CMP.b #",",(a4)
00021708 <AmiBlitz3.ab3@2833>     BEQ 'nops
0002170A <AmiBlitz3.ab3@2837>   MOVEQ.l #$00,D4          ;narg=0
00021710 <AmiBlitz3.ab3@2839>   TST.b newsyntax
00021714 <AmiBlitz3.ab3@2840>   BEQ 'l10b
00021718 <AmiBlitz3.ab3@2841>   MOVEM.l a0/d0,-(a7)
0002171C <AmiBlitz3.ab3@2842>   MOVE.l 4(a2),a0
00021720 <AmiBlitz3.ab3@2843>   MOVE.w 8(a2),d0
00021724 <AmiBlitz3.ab3@2846>   CMP.b #"`",(a0)+
00021728 <AmiBlitz3.ab3@2847>   BEQ 'x1
0002172A <AmiBlitz3.ab3@2848>   SUBQ.w #1,d0
0002172E <AmiBlitz3.ab3@2849>   BNE 'x2
00021732 <AmiBlitz3.ab3@2850>  BRA 'x3
00021736 <AmiBlitz3.ab3@2853>   MOVEM.l (a7)+,a0/d0
0002173A <AmiBlitz3.ab3@2854>  BRA 'l10
0002173E <AmiBlitz3.ab3@2857>   MOVEM.l (a7)+,a0/d0
00021742 <AmiBlitz3.ab3@2858>  BRA 'nops
00021746 <AmiBlitz3.ab3@2862>   CMPI.b #"{",(A4)
0002174A <AmiBlitz3.ab3@2863>    BNE.w 'nops
0002174C <AmiBlitz3.ab3@2868>   ADDQ.l #1,a4
00021750 <AmiBlitz3.ab3@2871>     CMP.b #" ",(a4)
00021754 <AmiBlitz3.ab3@2872>     BEQ 'l5
00021758 <AmiBlitz3.ab3@2873>     MOVEM.l a0/d0,-(a7)
0002175E <AmiBlitz3.ab3@2874>     CLR.b exmac
00021764 <AmiBlitz3.ab3@2875>     LEA chartab,a0
00021766 <AmiBlitz3.ab3@2876>     MOVEQ #0,d0
00021768 <AmiBlitz3.ab3@2877>     MOVE.b (a4),d0
0002176C <AmiBlitz3.ab3@2878>     BMI 'm1
00021770 <AmiBlitz3.ab3@2879>     TST.b 0(a0,d0)
00021774 <AmiBlitz3.ab3@2880>     BEQ 'm1
0002177A <AmiBlitz3.ab3@2881>     TST.b newsyntax
0002177E <AmiBlitz3.ab3@2882>     BEQ 'ns1
00021782 <AmiBlitz3.ab3@2883>     CMP.b #"#",d0
00021786 <AmiBlitz3.ab3@2884>     BEQ 'm1
0002178A <AmiBlitz3.ab3@2885>     CMP.b #"$",d0
0002178E <AmiBlitz3.ab3@2886>     BEQ 'm1
00021792 <AmiBlitz3.ab3@2887>     CMP.b #"-",d0
00021796 <AmiBlitz3.ab3@2888>     BEQ 'm1
0002179A <AmiBlitz3.ab3@2891>   CMP.b #",",d0
0002179E <AmiBlitz3.ab3@2892>     BEQ 'm1
000217A2 <AmiBlitz3.ab3@2893>     CMP.b #"{",d0
000217A6 <AmiBlitz3.ab3@2894>     BNE 'm1b
000217A8 <AmiBlitz3.ab3@2895>     ADDQ.l #1,a4
000217AC <AmiBlitz3.ab3@2896>  BRA 'm1
000217B2 <AmiBlitz3.ab3@2899>   TST.b newsyntax
000217B6 <AmiBlitz3.ab3@2900>     BEQ 'm1
000217BE <AmiBlitz3.ab3@2901>     MOVE.b #1,exmac
000217C2 <AmiBlitz3.ab3@2904>   MOVEM.l (a7)+,a0/d0
000217C8 <AmiBlitz3.ab3@2905>     TST.b exmac
000217CC <AmiBlitz3.ab3@2906>     BNE 'nops
000217CE <AmiBlitz3.ab3@2913>   TST.b (a4)
000217D2 <AmiBlitz3.ab3@2914>   BEQ 'nops
000217D8 <AmiBlitz3.ab3@2918>   MOVEA.l ptr_macrobuffer_begin,A0    ;start of parameter collect
000217DA <AmiBlitz3.ab3@2921>   ADDQ.w #1,D4                        ;another p
000217DC <AmiBlitz3.ab3@2922>   MOVE.l A4,(A0)
000217E0 <AmiBlitz3.ab3@2924>   CLR.w 4(a0)
000217E4 <AmiBlitz3.ab3@2926>    BSR.w findit
000217E6 <AmiBlitz3.ab3@2929>   ADDQ.l #4,a0
000217E8 <AmiBlitz3.ab3@2935>   SUBQ.w #1,(a0)+
000217EC <AmiBlitz3.ab3@2937>   CMP.b #$7D,D0     ;'}'
000217F0 <AmiBlitz3.ab3@2939>   BEQ 'l10b1
000217F2 <AmiBlitz3.ab3@2940>   TST.b d0
000217F6 <AmiBlitz3.ab3@2941>   BEQ 'l10b1
000217FA <AmiBlitz3.ab3@2942>  BRA 'ppl
00021800 <AmiBlitz3.ab3@2948>   CLR.l sourceline3
00021802 <AmiBlitz3.ab3@2950>   MOVEA.l A4,A5
00021808 <AmiBlitz3.ab3@2953>   MOVE.w D4,numarg
0002180E <AmiBlitz3.ab3@2964>   MOVE.l #$01,D1
00021814 <AmiBlitz3.ab3@2965>   MOVEA.l _execbase,A6
0002181A <AmiBlitz3.ab3@2967>   MOVE.l mempool,a0
00021820 <AmiBlitz3.ab3@2968>   MOVE.l macrobuffer_size,D0
00021826 <AmiBlitz3.ab3@2969>   CMP.l #DEFAULT_MACROBUFFERSIZE,d0                          ; replaced with a constant tomsmart1
0002182A <AmiBlitz3.ab3@2970>   BGE 'l1mc
00021830 <AmiBlitz3.ab3@2971>   MOVE.l #DEFAULT_MACROBUFFERSIZE,d0                         ; replaced with a constant tomsmart1
00021836 <AmiBlitz3.ab3@2972>   MOVE.l d0,macrobuffer_size
0002183A <AmiBlitz3.ab3@2975>   JSR _AllocPooled(a6)
00021844 <AmiBlitz3.ab3@2979>   MOVE.l myline,myoline
00021846 <AmiBlitz3.ab3@2983>   ADDQ.l #1,d0
0002184C <AmiBlitz3.ab3@2985>   MOVE.l D0,myline
0002184E <AmiBlitz3.ab3@2986>   MOVEA.l D0,A1
00021854 <AmiBlitz3.ab3@2988>   MOVE.b #":",-1(a1)
00021856 <AmiBlitz3.ab3@2990>   MOVEA.l A1,A6
0002185C <AmiBlitz3.ab3@2991>   ADDA.l macrobuffer_size,A6   ;end of macro buffer
0002185E <AmiBlitz3.ab3@2993>   MOVEA.l (A7)+,A0             ;start of the line
00021860 <AmiBlitz3.ab3@2996>   CMPA.l A6,A1
00021864 <AmiBlitz3.ab3@2997>    BCC.w mbovererr
00021866 <AmiBlitz3.ab3@2998>   MOVE.b (A0)+,(a1)+
00021868 <AmiBlitz3.ab3@2999>   CMPA.l A3,A0
0002186C <AmiBlitz3.ab3@3000>    BCS.w 'loop2
0002186E <AmiBlitz3.ab3@3001>   SUBQ.w #1,A1                 ;back over '#'
00021872 <AmiBlitz3.ab3@3003>   MOVE.w $8(A2),D1             ;mac len
00021876 <AmiBlitz3.ab3@3004>    BEQ.w 'loop4
0002187E <AmiBlitz3.ab3@3005>   MOVE.w $A(A2),macnum
00021882 <AmiBlitz3.ab3@3006>   ADDQ.w #1,$A(A2)
00021886 <AmiBlitz3.ab3@3007>   MOVEA.l $4(A2),A2
00021888 <AmiBlitz3.ab3@3008>   SUBQ.w #1,D1
0002188E <AmiBlitz3.ab3@3010>   CLR.b firstmline
00021890 <AmiBlitz3.ab3@3014>     MOVEQ.l #$00,D0
00021892 <AmiBlitz3.ab3@3015>     MOVE.b (A2)+,D0
00021898 <AmiBlitz3.ab3@3017>     TST.b firstmline
0002189C <AmiBlitz3.ab3@3018>     BNE 'c1
000218A0 <AmiBlitz3.ab3@3019>     CMP.b #$22,d0         ;'"'
000218A4 <AmiBlitz3.ab3@3020>     BNE 's1
000218AC <AmiBlitz3.ab3@3021>     MOVE.b #1,firstmline
000218B0 <AmiBlitz3.ab3@3024>     CMP.b #":",d0
000218B4 <AmiBlitz3.ab3@3025>     BNE 'm1a
000218BC <AmiBlitz3.ab3@3026>     MOVE.b #1,firstmline
000218C0 <AmiBlitz3.ab3@3029>     CMP.b #";",d0
000218C4 <AmiBlitz3.ab3@3030>     BNE 'c1
000218C6 <AmiBlitz3.ab3@3033>     SUBQ.w #1,d1                                           ;filter out comment
000218C8 <AmiBlitz3.ab3@3034>     MOVE.b (a2)+,d0
000218CE <AmiBlitz3.ab3@3035>     CMP.w #":@",-1(a2)
000218D2 <AmiBlitz3.ab3@3036>     BEQ 'c2
000218D4 <AmiBlitz3.ab3@3037>     TST.w d1
000218D8 <AmiBlitz3.ab3@3038>     BNE 'l1d
000218DC <AmiBlitz3.ab3@3039>    BRA 'oky2
000218E2 <AmiBlitz3.ab3@3042>     CMP.b #":",1(a2)
000218E6 <AmiBlitz3.ab3@3043>       BNE 'l1d
000218E8 <AmiBlitz3.ab3@3044>       ADDQ #2,a2
000218EA <AmiBlitz3.ab3@3045>       SUBQ #3,d1
000218EC <AmiBlitz3.ab3@3046>       MOVE.b (a2)+,d0
000218F4 <AmiBlitz3.ab3@3047>       MOVE.b #1,firstmline
000218F8 <AmiBlitz3.ab3@3051>     CMP.b #"`",D0
000218FC <AmiBlitz3.ab3@3052>      BNE.w 'oky
000218FE <AmiBlitz3.ab3@3053>     SUBQ.w #1,D1
00021900 <AmiBlitz3.ab3@3054>     MOVE.b (A2)+,D0
00021904 <AmiBlitz3.ab3@3055>     CMP.w #$7B,D0       ;'{'
00021908 <AmiBlitz3.ab3@3056>      BEQ.w 'evalit
0002190C <AmiBlitz3.ab3@3057>     CMP.w #$40,D0       ;'@'
00021910 <AmiBlitz3.ab3@3058>      BNE.w 'notnum
00021912 <AmiBlitz3.ab3@3062>     MOVEQ.l #$00,D2
00021918 <AmiBlitz3.ab3@3063>     MOVE.w macnum,D2
0002191A <AmiBlitz3.ab3@3064>     MOVEA.l A1,A0
0002191C <AmiBlitz3.ab3@3065>     MOVE.w D1,-(A7)
00021922 <AmiBlitz3.ab3@3066>      JSR makelong
00021924 <AmiBlitz3.ab3@3067>     MOVEA.l A0,A1
00021926 <AmiBlitz3.ab3@3068>     MOVE.w (A7)+,D1
0002192A <AmiBlitz3.ab3@3070>    BRA.w 'oky2
0002192E <AmiBlitz3.ab3@3073>     ORI.w #$20,D0
00021932 <AmiBlitz3.ab3@3074>     CMP.w #$7A,D0       ;'z'
00021936 <AmiBlitz3.ab3@3075>      BCS.w 'fkit
0002193C <AmiBlitz3.ab3@3076>    JMP ilconsterr
00021940 <AmiBlitz3.ab3@3079>     SUBI.w #$30,D0
00021944 <AmiBlitz3.ab3@3080>     CMP.w #$A,D0
00021948 <AmiBlitz3.ab3@3081>      BCS.w 'itsgot
0002194C <AmiBlitz3.ab3@3083>     SUBI.w #$27,D0
00021950 <AmiBlitz3.ab3@3084>     CMP.w #$A,D0
00021954 <AmiBlitz3.ab3@3085>      BCC.w 'fkit2
0002195A <AmiBlitz3.ab3@3086>    JMP ilconsterr
0002195E <AmiBlitz3.ab3@3089>    BRA.w 'itsgot
00021960 <AmiBlitz3.ab3@3092>     MOVE.l A5,-(A7)
00021964 <AmiBlitz3.ab3@3093>     MOVEM.l D1/A1-A2/A6,-(A7)
00021966 <AmiBlitz3.ab3@3094>     MOVEA.l A2,A5
0002196C <AmiBlitz3.ab3@3095>      JSR evalconst2
00021970 <AmiBlitz3.ab3@3096>     CMP.w #$7D,D0      ;'}'
00021974 <AmiBlitz3.ab3@3097>      BEQ.w 'allisok
0002197A <AmiBlitz3.ab3@3098>    JMP syntaxerr
0002197E <AmiBlitz3.ab3@3101>     MOVEM.l (A7)+,D1/A1-A2/A6
00021980 <AmiBlitz3.ab3@3102>     MOVE.l A5,D2
00021982 <AmiBlitz3.ab3@3103>     SUB.l A2,D2
00021984 <AmiBlitz3.ab3@3104>     SUB.w D2,D1
00021986 <AmiBlitz3.ab3@3105>     MOVEA.l A5,A2
0002198C <AmiBlitz3.ab3@3107>     CLR.w instringon
0002198E <AmiBlitz3.ab3@3108>     MOVEA.l (A7)+,A5
00021990 <AmiBlitz3.ab3@3110>     MOVE.l D3,D0
00021994 <AmiBlitz3.ab3@3111>     BPL.w 'itsgot
0002199A <AmiBlitz3.ab3@3112>    JMP ilconsterr
0002199C <AmiBlitz3.ab3@3115>     SUBQ.w #1,D0
000219A0 <AmiBlitz3.ab3@3116>      BPL.w 'ok
000219A6 <AmiBlitz3.ab3@3120>     MOVE.w numarg,D0
000219AA <AmiBlitz3.ab3@3121>     DIVU #$A,D0
000219AE <AmiBlitz3.ab3@3122>     ADDI.w #$30,D0
000219B0 <AmiBlitz3.ab3@3123>     CMPA.l A6,A1
000219B4 <AmiBlitz3.ab3@3124>      BCC.w mbovererr
000219B6 <AmiBlitz3.ab3@3125>     MOVE.b D0,(A1)+
000219B8 <AmiBlitz3.ab3@3126>     SWAP D0
000219BC <AmiBlitz3.ab3@3127>     ADDI.w #$30,D0
000219BE <AmiBlitz3.ab3@3128>     CMPA.l A6,A1
000219C2 <AmiBlitz3.ab3@3129>      BCC.w mbovererr
000219C4 <AmiBlitz3.ab3@3130>     MOVE.b D0,(A1)+
000219C8 <AmiBlitz3.ab3@3131>    BRA.w 'oky2
000219CE <AmiBlitz3.ab3@3137>     CMP.w numarg,D0
000219D2 <AmiBlitz3.ab3@3138>      BCC.w 'oky2
000219D4 <AmiBlitz3.ab3@3139>     LSL.w #1,D0
000219D6 <AmiBlitz3.ab3@3140>     MOVE.w D0,D4
000219D8 <AmiBlitz3.ab3@3141>     LSL.w #1,D0
000219DA <AmiBlitz3.ab3@3142>     ADD.w D4,D0          ;*6
000219E0 <AmiBlitz3.ab3@3143>     MOVEA.l ptr_macrobuffer_begin,A0
000219E2 <AmiBlitz3.ab3@3144>     ADDA.w D0,A0
000219E6 <AmiBlitz3.ab3@3145>     MOVE.w $4(A0),D4     ;len of replacetext
000219EA <AmiBlitz3.ab3@3146>      BEQ.w 'oky2
000219EC <AmiBlitz3.ab3@3147>     MOVEA.l (A0),A0
000219EE <AmiBlitz3.ab3@3148>     SUBQ.w #1,D4
000219F0 <AmiBlitz3.ab3@3151>       CMPA.l A6,A1
000219F4 <AmiBlitz3.ab3@3152>        BCC.w mbovererr
000219F8 <AmiBlitz3.ab3@3154>       CMP.w #"@@",(a0)
000219FC <AmiBlitz3.ab3@3155>        BNE 'l10e
00021A02 <AmiBlitz3.ab3@3156>       TST.w ininclude
00021A06 <AmiBlitz3.ab3@3157>        BNE errorjoin
00021A0C <AmiBlitz3.ab3@3160>       MOVE.l sourceline,a0
00021A0E <AmiBlitz3.ab3@3161>       MOVE.l (a0),a0
00021A14 <AmiBlitz3.ab3@3162>       CMP.l #0,a0
00021A18 <AmiBlitz3.ab3@3163>       BNE 'l11e
00021A1A <AmiBlitz3.ab3@3164>       MOVEQ #0,d0
00021A20 <AmiBlitz3.ab3@3165>       JSR error
00021A26 <AmiBlitz3.ab3@3168>       MOVE.l a0,sourceline
00021A2C <AmiBlitz3.ab3@3169>       ADDQ.l #1,linenumat
00021A30 <AmiBlitz3.ab3@3170>       LEA 9(a0),a0
00021A32 <AmiBlitz3.ab3@3171>       MOVE.l a0,-(a7)
00021A36 <AmiBlitz3.ab3@3174>       CMP.b #" ",(a0)+
00021A3A <AmiBlitz3.ab3@3175>        BEQ 'l110e
00021A40 <AmiBlitz3.ab3@3176>       CMP.b #";",-1(a0)
00021A42 <AmiBlitz3.ab3@3177>       MOVE.l (a7)+,a0
00021A46 <AmiBlitz3.ab3@3178>        BEQ 'l111e
00021A48 <AmiBlitz3.ab3@3179>       SUBQ.l #1,d4
00021A4A <AmiBlitz3.ab3@3183>       MOVE.b (A0)+,(A1)+
00021A4E <AmiBlitz3.ab3@3184>     DBF D4,'plp
00021A52 <AmiBlitz3.ab3@3186>     BRA.w 'oky2
00021A54 <AmiBlitz3.ab3@3189>     CMPA.l A6,A1
00021A58 <AmiBlitz3.ab3@3190>      BCC.w mbovererr
00021A5A <AmiBlitz3.ab3@3191>     MOVE.b D0,(A1)+
00021A5E <AmiBlitz3.ab3@3192>      BPL.w 'oky2
00021A60 <AmiBlitz3.ab3@3193>     CMPA.l A6,A1
00021A64 <AmiBlitz3.ab3@3194>      BCC.w mbovererr
00021A66 <AmiBlitz3.ab3@3195>     MOVE.b (A2)+,(A1)+
00021A68 <AmiBlitz3.ab3@3196>     SUBQ.w #1,D1
00021A6C <AmiBlitz3.ab3@3199>    DBF D1,'loop3
00021A6E <AmiBlitz3.ab3@3209>   CMPA.l A6,A1
00021A72 <AmiBlitz3.ab3@3210>    BCC.w mbovererr
00021A74 <AmiBlitz3.ab3@3211>   MOVE.b (A5)+,(A1)+
00021A78 <AmiBlitz3.ab3@3212>    BNE.w 'loop4
00021A7E <AmiBlitz3.ab3@3214>   MOVEA.l myline,A5
00021A84 <AmiBlitz3.ab3@3216>   MOVE.l myoline,D0
00021A88 <AmiBlitz3.ab3@3217>    BEQ.w 'skip3
00021A8A <AmiBlitz3.ab3@3219>   SUBQ.l #1,d0
00021A8C <AmiBlitz3.ab3@3221>   MOVEA.l D0,A1
00021A92 <AmiBlitz3.ab3@3222>   MOVE.l macrobuffer_size,D0
00021A98 <AmiBlitz3.ab3@3223>   MOVEA.l _execbase,A6
00021A9E <AmiBlitz3.ab3@3225>   MOVE.l mempool,a0
00021AA2 <AmiBlitz3.ab3@3226>   JSR _FreePooled(A6)
00021AA6 <AmiBlitz3.ab3@3231>  BRA.w 'loop0
00021AA8 <AmiBlitz3.ab3@3234>   MOVEA.l (A7)+,A5
00021AAA <AmiBlitz3.ab3@3235> RTS
00021AB0 <AmiBlitz3.ab3@3239>   MOVE.l myline,D0
00021AB4 <AmiBlitz3.ab3@3240>   BEQ.w 'no
00021AB6 <AmiBlitz3.ab3@3242>   SUBQ.l #1,d0
00021ABC <AmiBlitz3.ab3@3244>   CLR.l myline
00021ABE <AmiBlitz3.ab3@3245>   MOVEA.l D0,A1
00021AC4 <AmiBlitz3.ab3@3246>   MOVE.l macrobuffer_size,D0
00021ACA <AmiBlitz3.ab3@3247>   MOVEA.l _execbase,A6
00021AD0 <AmiBlitz3.ab3@3249>   MOVE.l mempool,a0
00021AD4 <AmiBlitz3.ab3@3250>  JMP _FreePooled(A6)
00021AD6 <AmiBlitz3.ab3@3255> RTS
00021AD8 <AmiBlitz3.ab3@3261>   MOVEQ.l #$00,D2    ;no nesting
00021ADC <AmiBlitz3.ab3@3265>   ADDQ.w #1,4(a0)
00021ADE <AmiBlitz3.ab3@3267>    MOVE.b (A4)+,D0
00021AE2 <AmiBlitz3.ab3@3270>    BEQ exit1
00021AE6 <AmiBlitz3.ab3@3272>    BPL.w 'tst
00021AEA <AmiBlitz3.ab3@3274>   ADDQ.w #1,4(a0)
00021AEC <AmiBlitz3.ab3@3276>   ADDQ.w #1,A4
00021AF0 <AmiBlitz3.ab3@3277>  BRA.w 'loop
00021AF6 <AmiBlitz3.ab3@3281>    TST.w instringon
00021AFA <AmiBlitz3.ab3@3282>    BNE 'lnom
00021AFE <AmiBlitz3.ab3@3283>    CMP.b #";",d0
00021B02 <AmiBlitz3.ab3@3284>    BEQ exit2
00021B06 <AmiBlitz3.ab3@3285>    CMP.b #":",d0
00021B0A <AmiBlitz3.ab3@3286>    BEQ exit2
00021B0E <AmiBlitz3.ab3@3290>   CMP.b #$22,D0           ;'"'
00021B12 <AmiBlitz3.ab3@3291>    BNE.w 'notq
00021B18 <AmiBlitz3.ab3@3292>   NOT.w instringon
00021B1C <AmiBlitz3.ab3@3293>  BRA.w 'loop
00021B22 <AmiBlitz3.ab3@3296>   TST.w instringon
00021B26 <AmiBlitz3.ab3@3297>    BNE.w 'loop
00021B2A <AmiBlitz3.ab3@3299>    CMP.b #"@",d0
00021B2E <AmiBlitz3.ab3@3300>    BNE 'l10
00021B32 <AmiBlitz3.ab3@3301>    CMP.b #"@",(a4)
00021B36 <AmiBlitz3.ab3@3302>    BNE 'l10
00021B3C <AmiBlitz3.ab3@3303>    TST.w ininclude
00021B40 <AmiBlitz3.ab3@3304>    BNE errorjoin
00021B46 <AmiBlitz3.ab3@3305>    MOVE.l sourceline3,a4
00021B4C <AmiBlitz3.ab3@3306>    CMP.l #0,a4
00021B50 <AmiBlitz3.ab3@3307>    BNE 'l11
00021B56 <AmiBlitz3.ab3@3308>    MOVE.l sourceline,a4
00021B58 <AmiBlitz3.ab3@3311>   MOVE.l (a4),a4
00021B5E <AmiBlitz3.ab3@3312>       CMP.l #0,a4
00021B62 <AmiBlitz3.ab3@3313>       BNE 'l12
00021B64 <AmiBlitz3.ab3@3314>       MOVEQ #0,d0
00021B6A <AmiBlitz3.ab3@3315>       JSR error
00021B70 <AmiBlitz3.ab3@3318>    MOVE.l a4,sourceline3
00021B74 <AmiBlitz3.ab3@3319>    LEA 9(a4),a4
00021B76 <AmiBlitz3.ab3@3320>    MOVEQ #",",d0
00021B7A <AmiBlitz3.ab3@3324>   CMP.b #$2C,D0       ;','
00021B7E <AmiBlitz3.ab3@3325>    BNE.w 'notc
00021B80 <AmiBlitz3.ab3@3326>   TST.w D2
00021B84 <AmiBlitz3.ab3@3327>    BEQ.w 'done
00021B88 <AmiBlitz3.ab3@3328>  BRA.w 'loop
00021B8C <AmiBlitz3.ab3@3333>    CMP.b #$7B,D0      ; same as itisopen                                     ;"{"
00021B90 <AmiBlitz3.ab3@3334>    BEQ.w 'l10b
00021B94 <AmiBlitz3.ab3@3335>   CMP.b #$28,D0                                            ;"("
00021B98 <AmiBlitz3.ab3@3339>    BNE.w 'noto
00021B9A <AmiBlitz3.ab3@3340>   ADDQ.w #1,D2
00021B9E <AmiBlitz3.ab3@3341>  BRA.w 'loop
00021BA2 <AmiBlitz3.ab3@3344>   CMP.b #$7D,D0       ;'}'                                    ;"}"
00021BA6 <AmiBlitz3.ab3@3345>    BNE.w 'notcb
00021BA8 <AmiBlitz3.ab3@3346>  TST.w D2
00021BAC <AmiBlitz3.ab3@3347>    BEQ.w 'done
00021BB0 <AmiBlitz3.ab3@3352>    CMP.b #$7D,D0     ; same as isitclose                                       ;"}"
00021BB4 <AmiBlitz3.ab3@3353>    BEQ.w 'l10a
00021BB8 <AmiBlitz3.ab3@3354>   CMP.b #$29,D0                                            ;")"
00021BBC <AmiBlitz3.ab3@3358>    BNE.w 'loop
00021BBE <AmiBlitz3.ab3@3359>   SUBQ.w #1,D2
00021BC2 <AmiBlitz3.ab3@3360> BRA.w 'loop
00021BC4 <AmiBlitz3.ab3@3363> RTS
00021BC6 <AmiBlitz3.ab3@3368>       SUBQ.l #1,a4
00021BCC <AmiBlitz3.ab3@3369>       CLR.l sourceline3
00021BCE <AmiBlitz3.ab3@3370> RTS
00021BD0 <AmiBlitz3.ab3@3374>       MOVEQ #0,d0
00021BD2 <AmiBlitz3.ab3@3375>       SUBQ.l #1,a4
00021BD8 <AmiBlitz3.ab3@3376>       CLR.l sourceline3
00021BDA <AmiBlitz3.ab3@3377> RTS
00021BDE <AmiBlitz3.ab3@3382>   CMP.b #$7B,D0        ;'{'                                     ;"{"
00021BE2 <AmiBlitz3.ab3@3383>   BEQ.w 'yes
00021BE6 <AmiBlitz3.ab3@3384>   CMP.b #$28,D0        ;'('                                    ;"("
00021BE8 <AmiBlitz3.ab3@3387> RTS
00021BEC <AmiBlitz3.ab3@3391>   CMP.b #$7D,D0         ;'}'                                   ;"}"
00021BF0 <AmiBlitz3.ab3@3392>   BEQ.w 'yes
00021BF4 <AmiBlitz3.ab3@3393>   CMP.b #$29,D0         ;')'                                   ;")"
00021BF6 <AmiBlitz3.ab3@3396> RTS
00021BF8 <AmiBlitz3.ab3@3400> stopit:     Ds.w 1
00021BFA <AmiBlitz3.ab3@3401> clrreq:     Ds.w 1
00021BFE <AmiBlitz3.ab3@3423>   MOVE.w clrreq(PC),D0
00021C02 <AmiBlitz3.ab3@3424>    BEQ.w 'skip
00021C34 <AmiBlitz3.ab3@3426> 
00021C3A <AmiBlitz3.ab3@3428>   LEA clrreq,a0
00021C3C <AmiBlitz3.ab3@3429>   NOT.w (a0)                                               ;reass
00021C42 <AmiBlitz3.ab3@3430>   MOVEA.l ptr_ThisTask,A0
00021C46 <AmiBlitz3.ab3@3431>   CLR.l $1E(A0)
00021C4A <AmiBlitz3.ab3@3432>   CLR.l $2A(A0)
00021C4C <AmiBlitz3.ab3@3435> RTS
00021C4E <AmiBlitz3.ab3@3438> intsused:  Ds.w 1
00021C56 <AmiBlitz3.ab3@3442>   MOVE.w #-1,blitzoff
00021C5C <AmiBlitz3.ab3@3443>   CLR.w intsused
00021C62 <AmiBlitz3.ab3@3444>   CLR.w anyerrs
00021C68 <AmiBlitz3.ab3@3445>   CLR.w blitzmode
00021C6E <AmiBlitz3.ab3@3446>   CLR.w dontwrite_nomemleft                                              ;nomemleft
00021C74 <AmiBlitz3.ab3@3447>   CLR.w constmode
00021C7A <AmiBlitz3.ab3@3448>   CLR.w cmake
00021C80 <AmiBlitz3.ab3@3449>   CLR.w cfetchmode
00021C86 <AmiBlitz3.ab3@3450>   CLR.l intdata1
00021C8C <AmiBlitz3.ab3@3451>   CLR.w fuckpos
00021C92 <AmiBlitz3.ab3@3452>   CLR.w procnum
00021C98 <AmiBlitz3.ab3@3453>   CLR.w procnum2
00021C9E <AmiBlitz3.ab3@3454>   CLR.w dfetch
00021CA4 <AmiBlitz3.ab3@3455>   CLR.l titleat
00021CAA <AmiBlitz3.ab3@3456>   CLR.b usedpath
00021CB0 <AmiBlitz3.ab3@3457>   CLR.b path2
00021CB6 <AmiBlitz3.ab3@3458>   CLR.w inerr
00021CBC <AmiBlitz3.ab3@3459>   CLR.w intlevel
00021CC2 <AmiBlitz3.ab3@3460>   CLR.l cont_pc
00021CC8 <AmiBlitz3.ab3@3461>   CLR.l cont_pc2
00021CCE <AmiBlitz3.ab3@3462>   CLR.l lastcontlink
00021CD8 <AmiBlitz3.ab3@3464>   MOVE.l destbufferstart,destpointer
00021CE2 <AmiBlitz3.ab3@3465>   MOVE.l destbufferstart,bigpc
00021CEC <AmiBlitz3.ab3@3466>   MOVE.l destbufferend,libend
00021CF6 <AmiBlitz3.ab3@3467>   MOVE.l data1start,data1
00021D00 <AmiBlitz3.ab3@3468>   MOVE.l data2at,data2
00021D08 <AmiBlitz3.ab3@3470>   MOVE.w #-1,skipcode                                      ;#-1,comflag org source
00021D10 <AmiBlitz3.ab3@3471>   MOVE.w #-1,linemode                                      ;#-1,linemode org soruce
00021D16 <AmiBlitz3.ab3@3472>   CLR.w oldvcodelen
00021D1C <AmiBlitz3.ab3@3473>   CLR.b lastgloballabel                                    ;lastbiglab org source
00021D1E <AmiBlitz3.ab3@3475> RTS
00021D20 <AmiBlitz3.ab3@3478> debugmode:  Ds.w 1                                         ;debugga org source ;debugger enabled?
00021D26 <AmiBlitz3.ab3@3482>   LEA  clrreq,a1
00021D2A <AmiBlitz3.ab3@3483>   MOVE.w #2000,(a1)
00021D54 <AmiBlitz3.ab3@3484>   !basic
00021D6A <AmiBlitz3.ab3@3485> 
00021DBA <AmiBlitz3.ab3@3486>   comstatusstr   = !TRANS{"Initializing Compiler..."} ;default settings
00021DC2 <AmiBlitz3.ab3@3487>   calcpro.l      = 0
00021DCA <AmiBlitz3.ab3@3488>   calcpro_old.l  = 0
00021DD6 <AmiBlitz3.ab3@3489>   typ_old.l      = -1
00021DE2 <AmiBlitz3.ab3@3490>   pass_old.l     = -1
00021DE8 <AmiBlitz3.ab3@3491>   update_comstatus_gui.b = True ; for the first
00021E22 <AmiBlitz3.ab3@3493>   GetD0 &comstatusstr : !ComData_SetL{comPtr_CompileStatusString,d0}  ; set pointer of status string for gui tomsmart1 2012 05 12
00021E5C <AmiBlitz3.ab3@3494>   GetD0 &calcpro      : !ComData_SetL{comPtr_CompileCalcProLong ,d0}  ; set pointer of calcpro long for gui tomsmart1 2012 05 12
00021E7A <AmiBlitz3.ab3@3495>   !asm
00021EAC <AmiBlitz3.ab3@3496> 
00021EB2 <AmiBlitz3.ab3@3498>   CLR.w stopit
00021EB4 <AmiBlitz3.ab3@3499> RTS
00021EBA <AmiBlitz3.ab3@3506>   CLR.w storedebugmode
00021EC0 <AmiBlitz3.ab3@3507>   CLR.b iserror
00021EC4 <AmiBlitz3.ab3@3509>   BSR.w compilerequester
00021ECE <AmiBlitz3.ab3@3511>   MOVE.l #0,globallinecount
00021ED4 <AmiBlitz3.ab3@3512>   JSR check_of_same_source
00021ED8 <AmiBlitz3.ab3@3515>   BSR.w call_setpointerbusy
00021EDC <AmiBlitz3.ab3@3517>   BSR.w setcvars
00021EE4 <AmiBlitz3.ab3@3519>   MOVE.w #$8000,globalvarpointer
00021EEE <AmiBlitz3.ab3@3520>   MOVE.l #newtype_quick,defaulttype
00021EF4 <AmiBlitz3.ab3@3522>   MOVE.l A7,passstack
00021EFE <AmiBlitz3.ab3@3523>   MOVE.l #firstitem_,sourceline
00021F08 <AmiBlitz3.ab3@3524>   MOVE.w numlines_org,linesleft
00021F12 <AmiBlitz3.ab3@3526>   MOVE.l numlines,numlines2
00021F18 <AmiBlitz3.ab3@3528>   ADDQ.w #1,linesleft
00021F1E <AmiBlitz3.ab3@3529>   ADDQ.l #1,numlines2
00021F28 <AmiBlitz3.ab3@3530>   MOVE.l #-1,linenumat
00021F2C <AmiBlitz3.ab3@3532>   BSR.w resetlibs
00021F30 <AmiBlitz3.ab3@3533>   BSR.w Aclearallvars
00021F36 <AmiBlitz3.ab3@3535>   LEA progress_per_line+2,A0
00021F38 <AmiBlitz3.ab3@3536>   MOVEQ.l #$03,D0
00021F3A <AmiBlitz3.ab3@3539>     CLR.w (A0)+
00021F3E <AmiBlitz3.ab3@3540>   DBF D0,'okloop
00021F44 <AmiBlitz3.ab3@3544>   LEA _include,a0
00021F48 <AmiBlitz3.ab3@3545>   MOVEM.l a0-a6/d0-d7,-(a7)
00021F4E <AmiBlitz3.ab3@3546>   LEA ptr_parameterstore,a1
00021F50 <AmiBlitz3.ab3@3549>     MOVE.b (a0)+,(a1)+
00021F54 <AmiBlitz3.ab3@3550>   BNE 'l1b
00021F56 <AmiBlitz3.ab3@3552>   MOVEQ #9,d2
00021F5C <AmiBlitz3.ab3@3553>   JSR findlabel2
00021F60 <AmiBlitz3.ab3@3554>   BNE 'd
00021F68 <AmiBlitz3.ab3@3555>   MOVE.l #0,8(a2)
00021F6C <AmiBlitz3.ab3@3556>   MOVEM.l (a7)+,a0-a6/d0-d7
00021F70 <AmiBlitz3.ab3@3557>  BRA 'd2
00021F76 <AmiBlitz3.ab3@3560>   JSR addlabelhash
00021F7E <AmiBlitz3.ab3@3561>   MOVE.l #$1,$4(A2)
00021F86 <AmiBlitz3.ab3@3562>   MOVE.l #0,8(a2)
00021F8A <AmiBlitz3.ab3@3563>   MOVEM.l (a7)+,a0-a6/d0-d7
00021F90 <AmiBlitz3.ab3@3566>   LEA _debug,a0
00021F94 <AmiBlitz3.ab3@3567>   MOVEM.l a0-a6/d0-d7,-(a7)
00021F9A <AmiBlitz3.ab3@3568>   LEA ptr_parameterstore,a1
00021F9C <AmiBlitz3.ab3@3571>     MOVE.b (a0)+,(a1)+
00021FA0 <AmiBlitz3.ab3@3572>   BNE 'l9b
00021FA2 <AmiBlitz3.ab3@3574>   MOVEQ #7,d2
00021FA8 <AmiBlitz3.ab3@3575>   JSR findlabel2
00021FAC <AmiBlitz3.ab3@3576>   BNE 'd9
00021FB0 <AmiBlitz3.ab3@3577>   MOVE.b debugmode(PC),D0
00021FB2 <AmiBlitz3.ab3@3578>   EXT.w d0
00021FB4 <AmiBlitz3.ab3@3579>   EXT.l d0
00021FB8 <AmiBlitz3.ab3@3580>   MOVE.l d0,8(a2)
00021FBC <AmiBlitz3.ab3@3581>   MOVEM.l (a7)+,a0-a6/d0-d7
00021FC0 <AmiBlitz3.ab3@3582>  BRA 'd9b
00021FC6 <AmiBlitz3.ab3@3585>   JSR addlabelhash
00021FCE <AmiBlitz3.ab3@3586>   MOVE.l #$1,$4(A2)
00021FD2 <AmiBlitz3.ab3@3587>   MOVE.b debugmode(PC),D0
00021FD4 <AmiBlitz3.ab3@3588>   EXT.w d0
00021FD6 <AmiBlitz3.ab3@3589>   EXT.l d0
00021FDA <AmiBlitz3.ab3@3590>   MOVE.l d0,8(a2)
00021FDE <AmiBlitz3.ab3@3591>   MOVEM.l (a7)+,a0-a6/d0-d7
00021FE4 <AmiBlitz3.ab3@3594>   MOVE.l #firstitem_,a0
00021FE6 <AmiBlitz3.ab3@3595>   MOVE.l (a0),a0
00021FEA <AmiBlitz3.ab3@3596>   LEA 9(a0),a0
00021FF2 <AmiBlitz3.ab3@3597>   MOVE.w #0,exdebug
00021FF8 <AmiBlitz3.ab3@3598>   TST.b debugmode
00021FFC <AmiBlitz3.ab3@3599>    BEQ 'l10
00021FFE <AmiBlitz3.ab3@3602>   MOVE.b (a0)+,d0
00022002 <AmiBlitz3.ab3@3603>    BEQ 'l10
00022006 <AmiBlitz3.ab3@3604>   CMP.b #$20,d0
0002200A <AmiBlitz3.ab3@3605>    BEQ 'l2
0002200C <AmiBlitz3.ab3@3606>   SUBQ.l #1,a0
00022012 <AmiBlitz3.ab3@3607>   CMP.l #"DEBU",(a0)
00022016 <AmiBlitz3.ab3@3608>    BNE 'l10
0002201C <AmiBlitz3.ab3@3609>   CMP.b #"G",4(a0)
00022020 <AmiBlitz3.ab3@3610>    BNE 'l10
00022028 <AmiBlitz3.ab3@3611>   MOVE.w #$0,debugversion
00022030 <AmiBlitz3.ab3@3612>   MOVE.b #1,exdebug
00022036 <AmiBlitz3.ab3@3619>   LEA nops4,A0
0002203C <AmiBlitz3.ab3@3620>   LEA nopsf,A1
00022042 <AmiBlitz3.ab3@3621>   JSR pokecode2                                            ;write intro nops
00022048 <AmiBlitz3.ab3@3623>   MOVE.l #$01010101,d1
0002204E <AmiBlitz3.ab3@3624>   JSR writedatalong                                        ;for the 4 tempregs
00022054 <AmiBlitz3.ab3@3625>   JSR writedatalong
0002205A <AmiBlitz3.ab3@3626>   JSR writedatalong
00022060 <AmiBlitz3.ab3@3627>   JSR writedatalong
00022066 <AmiBlitz3.ab3@3628>   TST.b saved0
0002206A <AmiBlitz3.ab3@3629>    BEQ 'l1
00022070 <AmiBlitz3.ab3@3630>   MOVE.l #$4e714e71,d1
00022076 <AmiBlitz3.ab3@3631>   JSR writelong                                            ;add 2 nops
0002207C <AmiBlitz3.ab3@3632>   MOVE.l #$4e714e71,d1
00022082 <AmiBlitz3.ab3@3633>   JSR writelong                                            ;add 2 nops
00022088 <AmiBlitz3.ab3@3634>   MOVE.l #$4e714e71,d1
0002208E <AmiBlitz3.ab3@3635>   JSR writelong                                            ;add 2 nops
00022094 <AmiBlitz3.ab3@3636>    MOVE.l #$4e714e71,d1
0002209A <AmiBlitz3.ab3@3637>   JSR writelong                                            ;add 2 nops
0002209E <AmiBlitz3.ab3@3641>   MOVE.b debugmode(PC),D1
000220A2 <AmiBlitz3.ab3@3642>    BEQ.b 'dskip
000220AC <AmiBlitz3.ab3@3643>   MOVE.b debugmode,storedebugmode
000220B0 <AmiBlitz3.ab3@3645>   MOVE.w #$FFDC,D1        ;#runerrlib,
000220B4 <AmiBlitz3.ab3@3646>    BSR.w uselib
000220BA <AmiBlitz3.ab3@3648>   TST.w debugversion                                       ;make a version for debugger
000220BE <AmiBlitz3.ab3@3649>    BNE.b 'exec
000220C2 <AmiBlitz3.ab3@3653>   MOVE.w #$FA3C,D1        ;#debuglib,
000220C6 <AmiBlitz3.ab3@3654>    BSR.w uselib
000220CA <AmiBlitz3.ab3@3655>   MOVE.w #$0001,D1        ;#dhandlerlib,
000220CE <AmiBlitz3.ab3@3656>    BSR.w uselib
000220D2 <AmiBlitz3.ab3@3657>  BRA.b 'dskip
000220D6 <AmiBlitz3.ab3@3662>   MOVE.w #$FA32,D1        ;#rundebuglib,
000220DA <AmiBlitz3.ab3@3663>   BSR.w uselib
000220DE <AmiBlitz3.ab3@3666>   BSR.w nextline
000220E4 <AmiBlitz3.ab3@3668>   CLR.l linenum
000220EA <AmiBlitz3.ab3@3669>   CLR.l stacktrack
000220F0 <AmiBlitz3.ab3@3675>   ADDQ.l #1,linenum
000220FA <AmiBlitz3.ab3@3676>   MOVE.l destpointer,destpointer2
00022100 <AmiBlitz3.ab3@3677>   MOVE.l a5,sourceline2
00022104 <AmiBlitz3.ab3@3679>   BSR.w compile_line                                        ;compile pass
00022108 <AmiBlitz3.ab3@3683>   BSR.w nextline
0002210C <AmiBlitz3.ab3@3684>    BNE.w passloop
00022110 <AmiBlitz3.ab3@3685>   BSR.w JUMP_do_runerrson
00022114 <AmiBlitz3.ab3@3686>   BSR.w pointchk
0002211A <AmiBlitz3.ab3@3688>   TST.b objectcount
0002211E <AmiBlitz3.ab3@3689>    BNE macenderr
00022124 <AmiBlitz3.ab3@3691>   CLR.l linenumat
00022128 <AmiBlitz3.ab3@3692>   BSR.w errchx2
00022132 <AmiBlitz3.ab3@3694>   CMP.l #-1,bssend
00022136 <AmiBlitz3.ab3@3695>    BNE 'l30
00022140 <AmiBlitz3.ab3@3696>   MOVE.l destpointer,bssend                                ;compile end
00022146 <AmiBlitz3.ab3@3699>   MOVE.l destpointer,d0
00022150 <AmiBlitz3.ab3@3700>   CMP.l #-1,bssstart
00022154 <AmiBlitz3.ab3@3701>   BNE 'lnf6
0002215E <AmiBlitz3.ab3@3702>   CMP.l #-1,chipstart
00022162 <AmiBlitz3.ab3@3703>   BNE 'lnf6
00022166 <AmiBlitz3.ab3@3704>  BRA 'leven4
0002216C <AmiBlitz3.ab3@3707>   MOVE.l destpointer,d1
0002216E <AmiBlitz3.ab3@3708>   ADDQ.l #3,d1
00022174 <AmiBlitz3.ab3@3709>   AND.l #$fffffffc,d1                                      ;bug ?
0002217A <AmiBlitz3.ab3@3710>   MOVE.l d1,destpointer
00022184 <AmiBlitz3.ab3@3713>   MOVE.l destpointer,codeend
0002218E <AmiBlitz3.ab3@3714>   CMP.l #-1,chipend
00022192 <AmiBlitz3.ab3@3715>   BNE 'l31
0002219C <AmiBlitz3.ab3@3716>   MOVE.l destpointer,chipend
000221A2 <AmiBlitz3.ab3@3719>   MOVE.l destpointer,d1
000221A4 <AmiBlitz3.ab3@3720>   ADDQ.l #1,d1
000221AA <AmiBlitz3.ab3@3721>   AND.l #$fffffffe,d1                                     ;new evenexit
000221B0 <AmiBlitz3.ab3@3722>   MOVE.l d1,destpointer
000221B4 <AmiBlitz3.ab3@3725>   MOVE.b debugmode(PC),D1
000221B8 <AmiBlitz3.ab3@3726>    BEQ.b 'nodb
000221BC <AmiBlitz3.ab3@3728>    BSR.w debugstuff
000221C0 <AmiBlitz3.ab3@3729>   MOVE.w #$C300,D1        ;#finalscheck,
000221C6 <AmiBlitz3.ab3@3730>    JSR Atokejsr
000221CA <AmiBlitz3.ab3@3732>    BSR.w debugstuff
000221CE <AmiBlitz3.ab3@3733>   MOVE.l eopcode(PC),D1
000221D4 <AmiBlitz3.ab3@3734>    JSR writelong
000221D8 <AmiBlitz3.ab3@3735>   MOVE.l lastcontlink(PC),D1
000221DC <AmiBlitz3.ab3@3736>    BEQ.b 'nocl
000221DE <AmiBlitz3.ab3@3737>   MOVEA.l D1,A0
000221E2 <AmiBlitz3.ab3@3738>   CLR.w $6(A0)
000221EC <AmiBlitz3.ab3@3745>   MOVE.l destpointer,endop                                ;where end goes...
000221F2 <AmiBlitz3.ab3@3747>   TST.w blitzmode
000221F6 <AmiBlitz3.ab3@3748>   BEQ.w 'nobl
000221FA <AmiBlitz3.ab3@3749>   BSR.w do_AMIGA                                          ;back to amiga if in blitz!
00022200 <AmiBlitz3.ab3@3752>   TST.w intsused
00022204 <AmiBlitz3.ab3@3753>   BEQ.b 'noints
00022208 <AmiBlitz3.ab3@3754>   MOVE.w #$C105,D1                                        ;interupts off!
0002220E <AmiBlitz3.ab3@3755>   JSR tokejsr2
00022212 <AmiBlitz3.ab3@3758>   BSR.w calcstatic
00022218 <AmiBlitz3.ab3@3759>   MOVE.w D4,numstatic
0002221E <AmiBlitz3.ab3@3760>   MOVE.l D3,staticdata
00022222 <AmiBlitz3.ab3@3761>    BSR.w calcmaxs
00022228 <AmiBlitz3.ab3@3763>   TST.l tokeslist
0002222C <AmiBlitz3.ab3@3764>    BEQ.b 'skipjsrs
00022232 <AmiBlitz3.ab3@3766>   MOVE.w gotocode,D1                                       ;jmp!
00022238 <AmiBlitz3.ab3@3767>    JSR writeword
00022242 <AmiBlitz3.ab3@3768>   MOVE.l destpointer,endjmpat
00022246 <AmiBlitz3.ab3@3769>    BSR.w addoff
0002224C <AmiBlitz3.ab3@3770>    JSR writelong                                           
00022250 <AmiBlitz3.ab3@3772>    BSR.w fixjsrs                                         ;has to be done before finits!
00022256 <AmiBlitz3.ab3@3776>   TST.w dontwrite_nomemleft
0002225A <AmiBlitz3.ab3@3777>    BNE.b 'skipjsrs
0002225E <AmiBlitz3.ab3@3778>   MOVEA.l endjmpat(PC),A4
00022264 <AmiBlitz3.ab3@3779>   MOVE.l destpointer,(A4)
0002226A <AmiBlitz3.ab3@3783>   TST.b returncode
0002226E <AmiBlitz3.ab3@3784>   BEQ 'l2
00022272 <AmiBlitz3.ab3@3785>   MOVE.w #$2e80,d1
00022278 <AmiBlitz3.ab3@3786>   JSR writeword
0002227E <AmiBlitz3.ab3@3790>   JSR makefinits
00022284 <AmiBlitz3.ab3@3792>   TST.b returncode
00022288 <AmiBlitz3.ab3@3793>   BEQ 'l3
0002228C <AmiBlitz3.ab3@3794>   MOVE.w #$4e75,d1
00022292 <AmiBlitz3.ab3@3795>   JSR writeword
00022296 <AmiBlitz3.ab3@3796>  BRA 'l1
0002229C <AmiBlitz3.ab3@3800>   MOVE.l #$70004E75,D1
000222A2 <AmiBlitz3.ab3@3801>   JSR writelong                                            ;write moveq #0,d0:rts
000222A8 <AmiBlitz3.ab3@3804>   JSR makeinits
000222AC <AmiBlitz3.ab3@3805>   BSR.w asmfixer
000222B0 <AmiBlitz3.ab3@3807>   BSR.w close_compilewin
000222B4 <AmiBlitz3.ab3@3808> BRA.w call_setpointernormal
000222BA <AmiBlitz3.ab3@3811> JUMP_do_runerrson JMP do_runerrson
000222BC <AmiBlitz3.ab3@3815> eopcode:    Dc.b $70,$03                                   ;MOVEQ #$03,D0
000222BE <AmiBlitz3.ab3@3816>             Dc.b $4E,$40                                   ;TRAP  #00
000222C2 <AmiBlitz3.ab3@3818> endjmpat:   Ds.l 1
000222C8 <AmiBlitz3.ab3@3822>   MOVEA.l newtype_string,A2
000222CE <AmiBlitz3.ab3@3823>   MOVE.l #MaxByte,D0                                       ;move.l #$ff,d0 org source
000222D2 <AmiBlitz3.ab3@3826>     CMPA.w #$0,A2
000222D6 <AmiBlitz3.ab3@3827>      BEQ.w 'done
000222DA <AmiBlitz3.ab3@3828>     CMP.l $4(A2),D0
000222DE <AmiBlitz3.ab3@3829>      BNE.w 'next
000222E6 <AmiBlitz3.ab3@3830>     MOVE.w $8(A2),linenumat+2                              ;type not found  ;move 8(a2),linenumat org source
000222EA <AmiBlitz3.ab3@3831>  BRA.w notypeerr
000222EC <AmiBlitz3.ab3@3834>     MOVEA.l (A2),A2
000222F0 <AmiBlitz3.ab3@3835>  BRA.w 'loop
000222F2 <AmiBlitz3.ab3@3838> RTS
000222F8 <AmiBlitz3.ab3@3842>   LEA labelbase,A2
000222FA <AmiBlitz3.ab3@3846>   MOVE.l (A2),D0                                           ;testlabels
000222FE <AmiBlitz3.ab3@3847>    BEQ.w 'done
00022300 <AmiBlitz3.ab3@3848>   MOVEA.l D0,A2
00022304 <AmiBlitz3.ab3@3849>   MOVE.l $4(A2),D0
00022308 <AmiBlitz3.ab3@3850>   BTST #$0,D0
0002230C <AmiBlitz3.ab3@3851>    BNE.w 'loop
00022310 <AmiBlitz3.ab3@3852>   MOVE.l $8(A2),D0
00022314 <AmiBlitz3.ab3@3853>    BNE.w 'loop
0002231C <AmiBlitz3.ab3@3854>   MOVE.w $10(A2),linenumat+2
0002231E <AmiBlitz3.ab3@3855>   MOVEQ #0,d0
00022322 <AmiBlitz3.ab3@3856>   MOVE.b $12(a2),d0
0002232A <AmiBlitz3.ab3@3857>   MOVE.w 0(a2,d0),linenumat
00022330 <AmiBlitz3.ab3@3858>  JMP nolaberr                                               ;label not found
00022336 <AmiBlitz3.ab3@3861>   MOVE.l concomsp,D0
0002233C <AmiBlitz3.ab3@3862>   CMP.l #concomstack,D0
00022340 <AmiBlitz3.ab3@3863>    BNE.w chxerr4
00022346 <AmiBlitz3.ab3@3864>   MOVE.w connest,D1
0002234A <AmiBlitz3.ab3@3865>    BNE.w chxerr4
0002234C <AmiBlitz3.ab3@3869>   MOVE.l D1,-(A7)
00022352 <AmiBlitz3.ab3@3870>   MOVE.l firstsel,D1
00022356 <AmiBlitz3.ab3@3871>    BNE.w 'err1
0002235C <AmiBlitz3.ab3@3872>   MOVE.l firstrep,D1
00022360 <AmiBlitz3.ab3@3873>    BNE.w 'err2
00022366 <AmiBlitz3.ab3@3874>   MOVE.w intstring,D1
0002236A <AmiBlitz3.ab3@3875>    BNE.w 'err3
0002236E <AmiBlitz3.ab3@3876>   MOVE.l 4(a7),d1
00022374 <AmiBlitz3.ab3@3877>   MOVE.w proceduremode,D1
00022378 <AmiBlitz3.ab3@3878>    BNE.w 'err6
0002237E <AmiBlitz3.ab3@3879>   MOVE.l firstiff,d1
00022382 <AmiBlitz3.ab3@3880>    BNE 'err5
00022388 <AmiBlitz3.ab3@3881>   MOVE.l firstfor,D1
0002238C <AmiBlitz3.ab3@3882>    BNE.w 'err7
0002238E <AmiBlitz3.ab3@3883>   MOVE.l (A7)+,D1
00022390 <AmiBlitz3.ab3@3884>  RTS
0002239A <AmiBlitz3.ab3@3887>   MOVE.l sellineat,linenumat
000223A0 <AmiBlitz3.ab3@3888>  JMP selerrz
000223AA <AmiBlitz3.ab3@3891>   MOVE.l replineat,linenumat
000223B0 <AmiBlitz3.ab3@3892>  JMP unterr3
000223BA <AmiBlitz3.ab3@3895>   MOVE.l intlineat,linenumat
000223C0 <AmiBlitz3.ab3@3896>  JMP interr2
000223CA <AmiBlitz3.ab3@3899>   MOVE.l iflineat,linenumat
000223D0 <AmiBlitz3.ab3@3900>  JMP noenderr
000223DA <AmiBlitz3.ab3@3903>   MOVE.l prolineat,linenumat
000223E0 <AmiBlitz3.ab3@3904>  JMP nopenderr
000223EA <AmiBlitz3.ab3@3907>   MOVE.l forlineat,linenumat
000223F0 <AmiBlitz3.ab3@3908> JMP nonexterr
000223FA <AmiBlitz3.ab3@3912>   MOVE.l ciflineat,linenumat
00022400 <AmiBlitz3.ab3@3913> JMP nocenderr
0002240A <AmiBlitz3.ab3@3917>   MOVE.l data1,maxsat
0002240C <AmiBlitz3.ab3@3918>   MOVEQ.l #$00,D4
00022412 <AmiBlitz3.ab3@3919>   MOVEA.l libpointer,A2
00022416 <AmiBlitz3.ab3@3922>     CMPA.w #$0,A2
0002241A <AmiBlitz3.ab3@3923>      BEQ.w 'done
0002241E <AmiBlitz3.ab3@3924>     TST.w $C(A2)
00022422 <AmiBlitz3.ab3@3925>      BPL.w 'next
00022426 <AmiBlitz3.ab3@3926>     MOVE.l $12(A2),D0
0002242A <AmiBlitz3.ab3@3927>     TST.w -$2(A2,D0.L)
0002242E <AmiBlitz3.ab3@3928>      BEQ.w 'next
00022430 <AmiBlitz3.ab3@3930>     ADDQ.w #1,D4
00022434 <AmiBlitz3.ab3@3931>     MOVE.w -$6(A2,D0.L),D1
00022438 <AmiBlitz3.ab3@3932>     BSR.w pokedata1
0002243A <AmiBlitz3.ab3@3933>     MOVEQ.l #$01,D1
0002243E <AmiBlitz3.ab3@3934>     MOVE.w -$2(A2,D0.L),D2
00022440 <AmiBlitz3.ab3@3935>     LSL.w D2,D1
00022444 <AmiBlitz3.ab3@3936>     MULU -$4(A2,D0.L),D1                                   ;write objectspacesize
00022448 <AmiBlitz3.ab3@3937>     BSR.w writedatalong
0002244A <AmiBlitz3.ab3@3940>     MOVEA.l (A2),A2
0002244E <AmiBlitz3.ab3@3941>  BRA.w 'loop
00022454 <AmiBlitz3.ab3@3944>   MOVE.w D4,maxsused
00022458 <AmiBlitz3.ab3@3945>    BEQ.w 'done2
0002245C <AmiBlitz3.ab3@3946>   MOVE.w #$FFFA,D1       ;was #65530    ;use memlib                                  ;;use memlib
00022460 <AmiBlitz3.ab3@3947> BRA.w uselib
00022462 <AmiBlitz3.ab3@3950> RTS
00022468 <AmiBlitz3.ab3@3956>    MOVE.l a7,stackaddr
0002246C <AmiBlitz3.ab3@3958>    BSR.w compile_term
00022470 <AmiBlitz3.ab3@3959>    BSR.w reget
00022474 <AmiBlitz3.ab3@3960>    BNE.w illeolerr
0002247A <AmiBlitz3.ab3@3962>    TST.w dontwrite_nomemleft
0002247E <AmiBlitz3.ab3@3963>    BNE 'l1
00022484 <AmiBlitz3.ab3@3964>    TST.l stacktrack
00022488 <AmiBlitz3.ab3@3965>    BNE errormsg_stack
0002248C <AmiBlitz3.ab3@3969>    CMP.w #-$7FDE,D0            ; was #$8000+34
00022490 <AmiBlitz3.ab3@3970>    BNE.w 'notelse
00022496 <AmiBlitz3.ab3@3971>    JSR do_else2
0002249A <AmiBlitz3.ab3@3972>  BRA.w compile_line
0002249C <AmiBlitz3.ab3@3975>   TST.w D0
000224A0 <AmiBlitz3.ab3@3976>   BNE.w compile_line
000224A6 <AmiBlitz3.ab3@3982>   MOVE.l firstiff,D0
000224AA <AmiBlitz3.ab3@3983>    BEQ.w 'done
000224AC <AmiBlitz3.ab3@3984>   MOVEA.l D0,A0
000224B0 <AmiBlitz3.ab3@3985>   MOVE.w $C(A0),D1
000224B4 <AmiBlitz3.ab3@3986>    BPL.w 'done
000224B8 <AmiBlitz3.ab3@3990>   BCLR #$F,D1
000224BE <AmiBlitz3.ab3@3991>    JSR doendif2
000224C4 <AmiBlitz3.ab3@3992>    JSR freetheifz
000224C8 <AmiBlitz3.ab3@3993> BRA.w 'unthen
000224CA <AmiBlitz3.ab3@3996> RTS
000224D0 <AmiBlitz3.ab3@4000>   LEA lastgloballabel,A0
000224D2 <AmiBlitz3.ab3@4001>   TST.b (A0)
000224D6 <AmiBlitz3.ab3@4002>   BEQ.w nolocerr
000224DC <AmiBlitz3.ab3@4003>   LEA ptr_parameterstore,A1
000224DE <AmiBlitz3.ab3@4004>   MOVEQ.l #$00,D2
000224E0 <AmiBlitz3.ab3@4007>   ADDQ.w #1,D2
000224E2 <AmiBlitz3.ab3@4008>   MOVE.b (A0)+,(A1)+
000224E6 <AmiBlitz3.ab3@4009>    BNE.w 'loop
000224EC <AmiBlitz3.ab3@4010>   MOVE.b #$27,-$1(A1)
000224EE <AmiBlitz3.ab3@4011>   MOVE.w D2,-(A7)
000224F4 <AmiBlitz3.ab3@4012>    JSR makename4
000224F6 <AmiBlitz3.ab3@4013>   CMP.w (A7)+,D2
000224FA <AmiBlitz3.ab3@4014>    BEQ.w syntaxerr
000224FC <AmiBlitz3.ab3@4015>    TST.w d0
00022500 <AmiBlitz3.ab3@4016>    BPL 'done
00022508 <AmiBlitz3.ab3@4017>    MOVE.w #$3a,lastchar
0002250A <AmiBlitz3.ab3@4018>    SUBQ.l #2,a5
0002250C <AmiBlitz3.ab3@4021> RTS
00022516 <AmiBlitz3.ab3@4025>   MOVE.l #forthstack,forthsp
00022520 <AmiBlitz3.ab3@4026>   MOVE.l #precstack,precsp
00022522 <AmiBlitz3.ab3@4027> RTS
00022524 <AmiBlitz3.ab3@4034>   MOVEQ.l #$00,D4
0002254E <AmiBlitz3.ab3@4037>   !basic
00022590 <AmiBlitz3.ab3@4038> 
000225A0 <AmiBlitz3.ab3@4040>   If (c_abort = 1)           ; check if set
000225A2 <AmiBlitz3.ab3@4041>     MOVEQ.l #-$01,d4
000225A8 <AmiBlitz3.ab3@4042>     MOVE.w D4,stopit
000225C6 <AmiBlitz3.ab3@4043>     !asm
000225CA <AmiBlitz3.ab3@4044>     BRA 'skip
000225E8 <AmiBlitz3.ab3@4046>   !asm
000225EA <AmiBlitz3.ab3@4047>   MOVEQ.l #$00,D6
000225EC <AmiBlitz3.ab3@4048>   MOVEQ.l #$00,D7                                          ; clr Z-Flag for beq.b in chkstop_chk
000225EE <AmiBlitz3.ab3@4052> RTS
000225F2 <AmiBlitz3.ab3@4056>   MOVE.w stopit(PC),D0
000225F6 <AmiBlitz3.ab3@4057>   BEQ 'chk
000225FC <AmiBlitz3.ab3@4059>   SUBQ.w #1,stopit
000225FE <AmiBlitz3.ab3@4064>  RTS
00022606 <AmiBlitz3.ab3@4068>   MOVE.w #2000,stopit
0002260A <AmiBlitz3.ab3@4070>   BSR.w chkrealstop
0002260E <AmiBlitz3.ab3@4071>   BEQ.b 'rts
00022612 <AmiBlitz3.ab3@4074>   BSR.w close_compilewin
00022616 <AmiBlitz3.ab3@4075>   BSR.w call_setpointernormal
0002261C <AmiBlitz3.ab3@4077>   MOVEA.l errstack,A7
00022622 <AmiBlitz3.ab3@4078>   MOVEA.l errcont,A0
0002262A <AmiBlitz3.ab3@4079>   MOVE.w #-1,anyerrs
0002262C <AmiBlitz3.ab3@4080> JMP (A0)
00022630 <AmiBlitz3.ab3@4083> d_pc:           Ds.l 1
00022634 <AmiBlitz3.ab3@4084> d_bigpc:        Ds.l 1
00022636 <AmiBlitz3.ab3@4085> d_nomemleft:    Ds.w 1
0002263A <AmiBlitz3.ab3@4086> cont_pc:        Ds.l 1
0002263E <AmiBlitz3.ab3@4087> cont_pc2:       Ds.l 1
00022642 <AmiBlitz3.ab3@4088> lastcontlink:   Ds.l 1
00022646 <AmiBlitz3.ab3@4092>   ORI.w #$4E40,D1
0002264A <AmiBlitz3.ab3@4093> BRA.w JUMP_writeword
00022650 <AmiBlitz3.ab3@4097>   TST.b debugmode
00022654 <AmiBlitz3.ab3@4098>   BEQ.w debugstuffa_rts
0002265A <AmiBlitz3.ab3@4109>   TST.w dirmode                                            ;or while in direct mode...
0002265E <AmiBlitz3.ab3@4110>    BNE debugstuffa_rts
00022668 <AmiBlitz3.ab3@4112>   MOVE.l destpointer,d_pc
00022672 <AmiBlitz3.ab3@4113>   MOVE.l bigpc,d_bigpc
0002267C <AmiBlitz3.ab3@4114>   MOVE.w dontwrite_nomemleft,d_nomemleft
00022680 <AmiBlitz3.ab3@4116>   MOVEM.l D0-D1,-(A7)
00022682 <AmiBlitz3.ab3@4118>   MOVEQ.l #$01,D1
00022686 <AmiBlitz3.ab3@4119>    BSR.w writetrap                                         ;write the adress to sourceline
0002268C <AmiBlitz3.ab3@4123>    MOVE.l destpointer,D0
00022692 <AmiBlitz3.ab3@4124>   MOVE.l cont_pc,D1
00022698 <AmiBlitz3.ab3@4125>   MOVE.l D0,cont_pc
0002269E <AmiBlitz3.ab3@4126>   MOVE.l D1,cont_pc2
000226A2 <AmiBlitz3.ab3@4127>    BEQ.b 'skip
000226A8 <AmiBlitz3.ab3@4129>   TST.w dontwrite_nomemleft
000226AC <AmiBlitz3.ab3@4130>    BNE.b 'skip
000226AE <AmiBlitz3.ab3@4132>   MOVEA.l D1,A4
000226B0 <AmiBlitz3.ab3@4133>   SUB.l A4,D0
000226B4 <AmiBlitz3.ab3@4134>   MOVE.w D0,$6(A4)
000226BA <AmiBlitz3.ab3@4135>   MOVE.l A4,lastcontlink
000226C0 <AmiBlitz3.ab3@4139>   TST.w ininclude
000226C6 <AmiBlitz3.ab3@4141>   TST.w makeexec
000226CA <AmiBlitz3.ab3@4142>   BEQ 'l1
000226D0 <AmiBlitz3.ab3@4143>   TST.w exdebug
000226D4 <AmiBlitz3.ab3@4144>   BEQ 'noinc
000226D8 <AmiBlitz3.ab3@4147>   MOVEM.l a0-a1/d2/d3,-(a7)                                ;write source for includes
000226DE <AmiBlitz3.ab3@4148>   MOVE.l data1,d1
000226E4 <AmiBlitz3.ab3@4149>   TST.b firsttime
000226E8 <AmiBlitz3.ab3@4150>   BNE 'nofirst
000226F0 <AmiBlitz3.ab3@4151>   MOVE.b #1,firsttime
000226F6 <AmiBlitz3.ab3@4152>   MOVE.l #"DuCk",d1                                        ; to found from debugger the code start
000226FC <AmiBlitz3.ab3@4153>   JSR writedatalong
00022702 <AmiBlitz3.ab3@4154>   MOVE.l #"AmiB",d1
00022708 <AmiBlitz3.ab3@4155>   JSR writedatalong
0002270E <AmiBlitz3.ab3@4156>   MOVE.l destbufferstart,d1
00022714 <AmiBlitz3.ab3@4157>   JSR writedatalong
0002271A <AmiBlitz3.ab3@4158>   TST.w dontwrite_nomemleft
0002271E <AmiBlitz3.ab3@4159>   BNE 'nohunk
00022724 <AmiBlitz3.ab3@4160>   MOVE.l data1,d1
00022726 <AmiBlitz3.ab3@4161>   SUBQ.l #4,d1
0002272C <AmiBlitz3.ab3@4162>   SUB.l destbufferstart,d1
0002272E <AmiBlitz3.ab3@4163>   MOVE.l d1,d2
00022734 <AmiBlitz3.ab3@4164>   JSR addhunkoffset
0002273A <AmiBlitz3.ab3@4167>   MOVE.l destpointer,d2
00022740 <AmiBlitz3.ab3@4168>   MOVE.l data1,d1
00022746 <AmiBlitz3.ab3@4171>   MOVE.l destpointer,d2
00022748 <AmiBlitz3.ab3@4172>   MOVE.l d1,d3
0002274E <AmiBlitz3.ab3@4173>   SUB.l destbufferstart,d1
00022754 <AmiBlitz3.ab3@4174>   OR.l #$80000000,d1
0002275A <AmiBlitz3.ab3@4175>   JSR writelong
00022760 <AmiBlitz3.ab3@4176>   TST.w inmacro
00022764 <AmiBlitz3.ab3@4177>   BEQ 'sc1
0002276A <AmiBlitz3.ab3@4178>   MOVE.l myline,a0
0002276E <AmiBlitz3.ab3@4180>  BRA 'inc2
00022774 <AmiBlitz3.ab3@4183>   TST.w ininclude
00022778 <AmiBlitz3.ab3@4184>   BEQ 'inc
0002277E <AmiBlitz3.ab3@4185>   MOVE.l includesourceline,a0
00022782 <AmiBlitz3.ab3@4186>  BRA 'inc2
00022788 <AmiBlitz3.ab3@4189>   MOVE.l sourceline,a0
0002278C <AmiBlitz3.ab3@4190>   LEA 9(a0),a0
0002278E <AmiBlitz3.ab3@4193>   MOVE.l d1,d2
00022790 <AmiBlitz3.ab3@4194>   MOVE.l A5,D1
00022792 <AmiBlitz3.ab3@4195>   SUB.l a0,D1
00022798 <AmiBlitz3.ab3@4196>   ADD.l #9,d1
0002279C <AmiBlitz3.ab3@4197>   BSR.w JUMP_writeword
000227A2 <AmiBlitz3.ab3@4198>   CMP.l #9,d1
000227A6 <AmiBlitz3.ab3@4199>   BEQ 'pos1
000227AC <AmiBlitz3.ab3@4200>   TST.w dontwrite_nomemleft
000227B0 <AmiBlitz3.ab3@4201>   BNE 'nopad
000227B6 <AmiBlitz3.ab3@4202>   MOVE.l lastsourceline,d1
000227BA <AmiBlitz3.ab3@4203>   MOVE.l d1,-6(a4)
000227BE <AmiBlitz3.ab3@4204>  BRA 'nopad
000227C4 <AmiBlitz3.ab3@4207>   MOVE.l d2,lastsourceline
000227CE <AmiBlitz3.ab3@4208>    MOVE.l destpointer,lastdestpointer
000227D0 <AmiBlitz3.ab3@4209>    MOVEQ #0,d1
000227D6 <AmiBlitz3.ab3@4210>   MOVE.l data1,d2
000227DC <AmiBlitz3.ab3@4211>   SUB.l destbufferstart,d2
000227E2 <AmiBlitz3.ab3@4212>   JSR writedatalong
000227E8 <AmiBlitz3.ab3@4213>   TST.w dontwrite_nomemleft
000227EC <AmiBlitz3.ab3@4214>   BNE 'no2
000227F2 <AmiBlitz3.ab3@4215>   JSR addhunkoffset
000227F8 <AmiBlitz3.ab3@4218>   MOVE.l data1,d2
000227FE <AmiBlitz3.ab3@4219>   SUB.l destbufferstart,d2
00022804 <AmiBlitz3.ab3@4220>   JSR writedatalong
0002280A <AmiBlitz3.ab3@4221>   TST.w dontwrite_nomemleft
0002280E <AmiBlitz3.ab3@4222>   BNE 'no
00022814 <AmiBlitz3.ab3@4223>   JSR addhunkoffset
0002281A <AmiBlitz3.ab3@4224>   MOVE.l lastwritedat,a1
00022820 <AmiBlitz3.ab3@4225>   CMP.l #0,a1
00022824 <AmiBlitz3.ab3@4226>   BEQ 'no
00022826 <AmiBlitz3.ab3@4227>   MOVE.l d3,(a1)
0002282E <AmiBlitz3.ab3@4228>   MOVE.l prevwritedat,4(a1)
00022838 <AmiBlitz3.ab3@4229>   MOVE.l lastwritedat,prevwritedat
0002283E <AmiBlitz3.ab3@4232>   MOVE.l d3,lastwritedat
00022840 <AmiBlitz3.ab3@4233>   MOVEQ #4,d1
00022844 <AmiBlitz3.ab3@4234>   BSR pokedata1b
00022846 <AmiBlitz3.ab3@4237>   MOVE.b (a0)+,d1
0002284A <AmiBlitz3.ab3@4238>   BEQ 'done
0002284E <AmiBlitz3.ab3@4239>   BSR pokedata1b
00022852 <AmiBlitz3.ab3@4240>  BRA 'loop
00022854 <AmiBlitz3.ab3@4243>   MOVEQ #0,d1
00022858 <AmiBlitz3.ab3@4244>   BSR pokedata1b
0002285E <AmiBlitz3.ab3@4245>   MOVE.l data1,d1
00022862 <AmiBlitz3.ab3@4246>   BTST #0,d1
00022866 <AmiBlitz3.ab3@4247>   BEQ 'nopad
00022868 <AmiBlitz3.ab3@4248>   MOVEQ #0,d1
0002286C <AmiBlitz3.ab3@4249>   BSR pokedata1b
00022870 <AmiBlitz3.ab3@4252>   MOVEM.l (a7)+,a0-a1/d2/d3
00022874 <AmiBlitz3.ab3@4253>  BRA 'noinc2
0002287A <AmiBlitz3.ab3@4257>   MOVE.l sourceline,D1
00022880 <AmiBlitz3.ab3@4258>   JSR writelong
00022882 <AmiBlitz3.ab3@4259>   MOVE.l A5,D1
00022888 <AmiBlitz3.ab3@4260>   SUB.l sourceline,D1
0002288E <AmiBlitz3.ab3@4261>   JSR writeword
00022890 <AmiBlitz3.ab3@4264>   MOVEQ.l #$00,D1
00022896 <AmiBlitz3.ab3@4265>   JSR writeword          ;next cont goes here!                                  ; was: BSR.w writeword
0002289A <AmiBlitz3.ab3@4267>   MOVEM.l (A7)+,D0-D1
0002289C <AmiBlitz3.ab3@4270> RTS
000228A2 <AmiBlitz3.ab3@4274>   TST.b debugmode                                          ;extern debug
000228A6 <AmiBlitz3.ab3@4275>    BEQ.b 'rts
000228AC <AmiBlitz3.ab3@4276>   TST.b dirmode
000228B0 <AmiBlitz3.ab3@4277>   BNE 'rts
000228BA <AmiBlitz3.ab3@4285>   MOVE.w d_nomemleft,dontwrite_nomemleft
000228C4 <AmiBlitz3.ab3@4286>   MOVE.l d_bigpc,bigpc
000228CE <AmiBlitz3.ab3@4287>   MOVE.l d_pc,destpointer
000228D8 <AmiBlitz3.ab3@4288>   MOVE.l cont_pc2,cont_pc
000228DA <AmiBlitz3.ab3@4291> RTS
000228E4 <AmiBlitz3.ab3@4296>   MOVE.l #forthstack,forthsp
000228EE <AmiBlitz3.ab3@4297>   MOVE.l #precstack,precsp
000228F4 <AmiBlitz3.ab3@4298>   CLR.w regnum
000228FA <AmiBlitz3.ab3@4299>   CLR.w nonew
00022900 <AmiBlitz3.ab3@4300>   CLR.w sbasegot
0002290A <AmiBlitz3.ab3@4301>   MOVE.w varcodelen,oldvcodelen
00022910 <AmiBlitz3.ab3@4302>   CLR.w varcodelen
00022918 <AmiBlitz3.ab3@4303>   MOVE.w #-1,lasta6
0002291A <AmiBlitz3.ab3@4304> RTS
00022920 <AmiBlitz3.ab3@4308>   TST.w linemode
00022924 <AmiBlitz3.ab3@4309>   BMI.b 'skip
00022928 <AmiBlitz3.ab3@4310>   BSR.w undodebug
0002292E <AmiBlitz3.ab3@4311>   MOVE.w linemode,D1
00022930 <AmiBlitz3.ab3@4312>   ADDQ.w #4,A7
00022932 <AmiBlitz3.ab3@4313>   LSL.w #2,D1
00022938 <AmiBlitz3.ab3@4314>   LEA modetable,A0
0002293C <AmiBlitz3.ab3@4315>   MOVEA.l $0(A0,D1.W),A0
00022940 <AmiBlitz3.ab3@4316>   BSR.w reget
00022942 <AmiBlitz3.ab3@4317>  JMP (A0)                                                   ;jumptokenroutine
00022944 <AmiBlitz3.ab3@4320> RTS
0002294C <AmiBlitz3.ab3@4328>   MOVE.w #0,leaa0a0+2
00022952 <AmiBlitz3.ab3@4329>   CLR.b nowdeclare
00022958 <AmiBlitz3.ab3@4330>   CLR.b notypecheck
0002295E <AmiBlitz3.ab3@4331>   CLR.l lasttoken
00022964 <AmiBlitz3.ab3@4332>   CLR.b doimmediate
0002296A <AmiBlitz3.ab3@4333>   CLR.w vartype
00022970 <AmiBlitz3.ab3@4334>   CLR.w regnumfunc
00022976 <AmiBlitz3.ab3@4335>   CLR.b optistring
0002297C <AmiBlitz3.ab3@4336>   CLR.b iniffcommand
00022982 <AmiBlitz3.ab3@4337>   CLR.w instringon  ; new
00022988 <AmiBlitz3.ab3@4338>   CLR.b funccall
0002298E <AmiBlitz3.ab3@4339>   CLR.l currentfunccall
00022994 <AmiBlitz3.ab3@4340>   CLR.l leftsidetype
0002299A <AmiBlitz3.ab3@4341>   CLR.l rightsidetype
000229A0 <AmiBlitz3.ab3@4342>   CLR.w leftsideflagmask
000229A6 <AmiBlitz3.ab3@4343>   CLR.w rightsideflagmask
000229AC <AmiBlitz3.ab3@4344>   CLR.b peekaddrsize
000229B2 <AmiBlitz3.ab3@4345>   CLR.b blitzparloop
000229B8 <AmiBlitz3.ab3@4346>   CLR.b funcparloop
000229BE <AmiBlitz3.ab3@4347>   CLR.w parnum           ;7.2014
000229C4 <AmiBlitz3.ab3@4348>   TST.b debugmode
000229C8 <AmiBlitz3.ab3@4349>    BEQ 'fpu
000229D2 <AmiBlitz3.ab3@4355>   MOVE.b fpu,iee
000229D6 <AmiBlitz3.ab3@4356>   MOVE.w stopit(PC),D0
000229DA <AmiBlitz3.ab3@4357>   BNE 'chkstop_chkb
000229DE <AmiBlitz3.ab3@4359>   BSR.w chkstop                                          ; message here
000229E4 <AmiBlitz3.ab3@4363>   SUBQ.w #1,stopit
000229E8 <AmiBlitz3.ab3@4367>   BSR.w findmacro                                          ;macro
000229EE <AmiBlitz3.ab3@4429>   TST.b debugmode
000229F2 <AmiBlitz3.ab3@4430>    BEQ.s 'l10
000229F8 <AmiBlitz3.ab3@4431>   TST.b exdebug
000229FC <AmiBlitz3.ab3@4432>   BEQ 'l10a
000229FE <AmiBlitz3.ab3@4433>   MOVE.w (a5),d0
00022A02 <AmiBlitz3.ab3@4434>   CMP.w #$8025,d0
00022A06 <AmiBlitz3.ab3@4435>    BEQ 'l10
00022A0A <AmiBlitz3.ab3@4438>   BSR.w debugstuffa                                         ;insert runtimecode debugcode
00022A0E <AmiBlitz3.ab3@4442>   BSR.w get1bytemain                                       ;gettokenmain
00022A12 <AmiBlitz3.ab3@4443>    BEQ.w undodebug
00022A16 <AmiBlitz3.ab3@4444>   CMP.w #$002b,d0                                            ;check for + cast sign
00022A1A <AmiBlitz3.ab3@4445>     BNE 'lb2
00022A1E <AmiBlitz3.ab3@4446>     BSR.w get1bytemain
00022A26 <AmiBlitz3.ab3@4447>     MOVE.b #1,notypecheck
00022A30 <AmiBlitz3.ab3@4458>   MOVE.l #forthstack,forthsp
00022A3A <AmiBlitz3.ab3@4459>   MOVE.l #precstack,precsp
00022A40 <AmiBlitz3.ab3@4460>   CLR.w regnum
00022A46 <AmiBlitz3.ab3@4461>   CLR.w nonew
00022A4C <AmiBlitz3.ab3@4462>   CLR.w sbasegot
00022A56 <AmiBlitz3.ab3@4463>   MOVE.w varcodelen,oldvcodelen
00022A5C <AmiBlitz3.ab3@4465>   CLR.w varcodelen
00022A64 <AmiBlitz3.ab3@4466>   MOVE.w #$FFFF,lasta6
00022A68 <AmiBlitz3.ab3@4469>   BSR.w smode
00022A6A <AmiBlitz3.ab3@4472>   TST.w D0                 ; was behind cmp ... and befor handleascii in org source
00022A6E <AmiBlitz3.ab3@4473>   BMI.w get_tokencode      ; "
00022A72 <AmiBlitz3.ab3@4475>   CMP.w #$2E,D0            ;'.'
00022A76 <AmiBlitz3.ab3@4476>    BEQ.w handlemouse                                         ;shortlist
00022A7A <AmiBlitz3.ab3@4477>   CMP.w #"#",D0
00022A7E <AmiBlitz3.ab3@4478>    BEQ.w handleconst                                         ;constant found
00022A82 <AmiBlitz3.ab3@4479>   CMP.w #$27,D0            ;'''  ; was #loclabch
00022A86 <AmiBlitz3.ab3@4480>    BEQ.w handlelocal                                            ;local label
00022A8C <AmiBlitz3.ab3@4483>   MOVE.l A5,letstart
00022A92 <AmiBlitz3.ab3@4484>   JSR getparameter
00022A96 <AmiBlitz3.ab3@4485>   BSR.w reget
00022A9A <AmiBlitz3.ab3@4486>    BEQ.w handlelabel                                         ;label found
00022A9E <AmiBlitz3.ab3@4487>   CMP.w #$7B,D0         ;'{'
00022AA2 <AmiBlitz3.ab3@4488>    BEQ.w handleproc
00022AA4 <AmiBlitz3.ab3@4490>   TST.w d0
00022AA8 <AmiBlitz3.ab3@4491>    BPL 'll1
00022AAE <AmiBlitz3.ab3@4492>   TST.b newsyntax
00022AB2 <AmiBlitz3.ab3@4493>    BEQ 'll1
00022AB8 <AmiBlitz3.ab3@4494>   LEA allowtab,a0
00022ABA <AmiBlitz3.ab3@4495>   MOVEQ #0,d1
00022ABC <AmiBlitz3.ab3@4496>   MOVE.b d0,d1
00022AC0 <AmiBlitz3.ab3@4497>   TST.b 0(a0,d1.w)
00022AC4 <AmiBlitz3.ab3@4498>    BNE 'll1
00022AC6 <AmiBlitz3.ab3@4499>   SUBQ.l #2,a5
00022ACE <AmiBlitz3.ab3@4500>   MOVE.w #":",lastchar                                     ;no doublepoint
00022AD2 <AmiBlitz3.ab3@4501>  BRA handlelabel
00022ADA <AmiBlitz3.ab3@4504>   CMP.l #"equ ",-1(a5)
00022ADE <AmiBlitz3.ab3@4505>    BEQ 'll4
00022AE6 <AmiBlitz3.ab3@4506>   CMP.l #"EQU ",-1(a5)
00022AEA <AmiBlitz3.ab3@4507>    BNE 'll2
00022AEC <AmiBlitz3.ab3@4510>   ADDQ.l #2,a5
00022AF0 <AmiBlitz3.ab3@4511>   BSR.w findlabel2
00022AF4 <AmiBlitz3.ab3@4512>   BEQ.w 'lf1
00022AF8 <AmiBlitz3.ab3@4513>   BSR.w addlabelhash
00022B00 <AmiBlitz3.ab3@4514>   MOVE.l #$1,$4(A2)
00022B08 <AmiBlitz3.ab3@4517>   CMPI.l #$1,$4(A2)
00022B0C <AmiBlitz3.ab3@4518>    BNE.w illconerr
00022B10 <AmiBlitz3.ab3@4519>   BSR get1bytemain
00022B12 <AmiBlitz3.ab3@4520>   MOVE.l A2,-(A7)
00022B14 <AmiBlitz3.ab3@4531>   SUBQ.l #1,a5
00022B16 <AmiBlitz3.ab3@4534>   SUBQ.l #1,a5
00022B1C <AmiBlitz3.ab3@4535>   JSR evalconst2
00022B1E <AmiBlitz3.ab3@4536>   MOVEA.l (A7)+,A2
00022B22 <AmiBlitz3.ab3@4537>   MOVE.l D3,$8(A2)
00022B24 <AmiBlitz3.ab3@4538>   RTS
00022B28 <AmiBlitz3.ab3@4539>   BSR get1bytemain
00022B30 <AmiBlitz3.ab3@4542>   CMP.l #"SET ",-1(a5)
00022B34 <AmiBlitz3.ab3@4543>   BNE 'll3
00022B38 <AmiBlitz3.ab3@4544>  BRA 'll4
00022B3E <AmiBlitz3.ab3@4548> JMP dolet2
00022B42 <AmiBlitz3.ab3@4552>   CMP.w #-$7FDE,D0    ; was #$8000+34,
00022B46 <AmiBlitz3.ab3@4553>   BEQ.w get_tokencode
00022B4A <AmiBlitz3.ab3@4554> BRA.w undodebug       ;!*!*!
00022B4E <AmiBlitz3.ab3@4558>   BSR.w undodebug    ;!***!
00022B52 <AmiBlitz3.ab3@4559>   BSR.w createlab
00022B56 <AmiBlitz3.ab3@4560> BRA.w handlelab2
00022B5A <AmiBlitz3.ab3@4564>   BSR.w get1bytemain
00022B5E <AmiBlitz3.ab3@4565>    BEQ.w handleeol     ;syntaxerr
00022B62 <AmiBlitz3.ab3@4566>   CMP.w #"'",D0        ; was #loclabch
00022B66 <AmiBlitz3.ab3@4567>    BEQ.w handlelocal
00022B6A <AmiBlitz3.ab3@4568>    BSR.w makename2
00022B6C <AmiBlitz3.ab3@4570>    TST.w d0
00022B70 <AmiBlitz3.ab3@4571>    BPL handlelabel
00022B72 <AmiBlitz3.ab3@4572>    SUBQ.l #2,a5
00022B7A <AmiBlitz3.ab3@4573>    MOVE.w #":",lastchar
00022B7E <AmiBlitz3.ab3@4574> BRA handlelabel                                              ;????
00022B82 <AmiBlitz3.ab3@4581>   BSR.w undodebug      ;!***!
00022B88 <AmiBlitz3.ab3@4583>   LEA ptr_parameterstore,A0
00022B8E <AmiBlitz3.ab3@4584>   LEA lastgloballabel,A1
00022B90 <AmiBlitz3.ab3@4587>   MOVE.b (A0)+,(A1)+
00022B94 <AmiBlitz3.ab3@4588>    BNE.w 'coplab
00022B98 <AmiBlitz3.ab3@4592>   BSR.w findlabel2
00022B9C <AmiBlitz3.ab3@4593>    BEQ.w 'found
00022BA0 <AmiBlitz3.ab3@4595>    BSR.w addlabelhash
00022BA4 <AmiBlitz3.ab3@4598>   CLR.l $4(A2)                ;no refs
00022BAC <AmiBlitz3.ab3@4599>   MOVE.l destpointer,$8(A2)   ;pc of label.
00022BB4 <AmiBlitz3.ab3@4604>   MOVE.w procnum,$10(A2)
00022BB6 <AmiBlitz3.ab3@4605>  RTS
00022BBA <AmiBlitz3.ab3@4608>   MOVE.l $4(A2),D0
00022BBE <AmiBlitz3.ab3@4609>   BTST #$0,D0
00022BC2 <AmiBlitz3.ab3@4610>    BNE.w illlaberr
00022BC8 <AmiBlitz3.ab3@4612>   TST.w pass
00022BCC <AmiBlitz3.ab3@4615>   MOVE.l $8(A2),D0
00022BD0 <AmiBlitz3.ab3@4616>    BNE.w duplaberr
00022BD8 <AmiBlitz3.ab3@4617>   MOVE.w procnum,$10(A2)
00022BDC <AmiBlitz3.ab3@4621>   MOVEA.l $4(A2),A3      ;start of refs list
00022BE2 <AmiBlitz3.ab3@4622>   MOVEA.l _execbase,A6
00022BE6 <AmiBlitz3.ab3@4625>   CMPA.w #$0,A3
00022BEA <AmiBlitz3.ab3@4626>    BEQ.w 'done
00022BEE <AmiBlitz3.ab3@4628>     MOVE.l $4(A2),D1
00022BF2 <AmiBlitz3.ab3@4629>     BTST #$0,D1
00022BF6 <AmiBlitz3.ab3@4630>     BNE.w illlaberr
00022BFA <AmiBlitz3.ab3@4632>   MOVE.w $8(A3),D1
00022BFE <AmiBlitz3.ab3@4633>   CMP.w $10(A2),D1
00022C02 <AmiBlitz3.ab3@4634>    BEQ.w 'isok
00022C08 <AmiBlitz3.ab3@4636>    TST.b newsyntax
00022C0C <AmiBlitz3.ab3@4637>    BEQ 'l1
00022C10 <AmiBlitz3.ab3@4638>  BRA.w 'isok                                            ;label context out of range fix
00022C18 <AmiBlitz3.ab3@4644>   MOVE.w $A(A3),linenumat+2                                ;move 10(a3),linenumat org source
00022C1C <AmiBlitz3.ab3@4645>  BRA.w referr
00022C22 <AmiBlitz3.ab3@4648>   MOVE.w dontwrite_nomemleft,D1
00022C26 <AmiBlitz3.ab3@4649>    BNE.w 'isaskip
00022C2A <AmiBlitz3.ab3@4650>   MOVEA.l $4(A3),A1
00022C30 <AmiBlitz3.ab3@4651>   BTST #$0,$7(A3)
00022C34 <AmiBlitz3.ab3@4652>    BEQ.w 'pcref
00022C36 <AmiBlitz3.ab3@4656>   SUBQ.w #1,A1
00022C3C <AmiBlitz3.ab3@4657>   MOVE.l data2,(A1)
00022C40 <AmiBlitz3.ab3@4658>  BRA.w 'isaskip
00022C46 <AmiBlitz3.ab3@4661>   MOVE.l destpointer,(A1)
00022C48 <AmiBlitz3.ab3@4664>   MOVEA.l A3,A1
00022C4A <AmiBlitz3.ab3@4665>   MOVEA.l (A3),A3
00022C4E <AmiBlitz3.ab3@4666>   MOVE.l A3,$4(A2)     ;new first.
00022C50 <AmiBlitz3.ab3@4667>   MOVEQ.l #$0C+2,D0    ; was #12
00022C56 <AmiBlitz3.ab3@4670>   MOVE.l mempool,a0
00022C5C <AmiBlitz3.ab3@4671>   MOVEA.l _execbase,A6
00022C60 <AmiBlitz3.ab3@4672>   JSR _FreePooled(A6)
00022C64 <AmiBlitz3.ab3@4674>  BRA.w 'floop
00022C6E <AmiBlitz3.ab3@4680>    MOVE.l #forthstack,forthsp
00022C78 <AmiBlitz3.ab3@4681>   MOVE.l #precstack,precsp
00022C7C <AmiBlitz3.ab3@4683>    BSR.w getparameter2
00022C80 <AmiBlitz3.ab3@4687>   BSR.w findlabel2
00022C84 <AmiBlitz3.ab3@4688>    BEQ.w 'cfound
00022C88 <AmiBlitz3.ab3@4689>    BSR.w addlabelhash
00022C90 <AmiBlitz3.ab3@4690>   MOVE.l #$1,$4(A2)
00022C94 <AmiBlitz3.ab3@4691>  BRA.w 'cn
00022C9C <AmiBlitz3.ab3@4694>   CMPI.l #$1,$4(A2)
00022CA0 <AmiBlitz3.ab3@4695>    BNE.w illconerr
00022CA4 <AmiBlitz3.ab3@4706>   CMP.w #$3D,D0         ;'='
00022CA8 <AmiBlitz3.ab3@4707>   BEQ.w 'asscon
00022CAA <AmiBlitz3.ab3@4708>  RTS
00022CAC <AmiBlitz3.ab3@4711>   MOVE.l A2,-(A7)
00022CB2 <AmiBlitz3.ab3@4712>   JSR evalconst2
00022CB4 <AmiBlitz3.ab3@4713>   MOVEA.l (A7)+,A2
00022CB8 <AmiBlitz3.ab3@4714>   MOVE.l D3,$8(A2)                                         ;store constant
00022CC0 <AmiBlitz3.ab3@4716>   CMP.w #$0a,lastchar
00022CC4 <AmiBlitz3.ab3@4717>   BNE 'l1
00022CCC <AmiBlitz3.ab3@4718>   MOVE.w #":",lastchar                                     ;hack to read wizard include files
00022CCE <AmiBlitz3.ab3@4722> RTS
00022CD2 <AmiBlitz3.ab3@4728>   BSR.w findproc                                           ;write statement call
00022CD6 <AmiBlitz3.ab3@4730>   BEQ '_state
00022CDC <AmiBlitz3.ab3@4731>   TST.l unusedfunc
00022CE0 <AmiBlitz3.ab3@4733>   BEQ noprocerr          ; was bne
00022CE6 <AmiBlitz3.ab3@4736>   JSR gotoendsource
00022CEA <AmiBlitz3.ab3@4740>   TST.b $5(A2)
00022CF0 <AmiBlitz3.ab3@4743>   MOVE.l a2,currentfunccall
00022CF8 <AmiBlitz3.ab3@4744>   MOVE.b #1,funccall
00022CFE <AmiBlitz3.ab3@4745>   MOVE.b #1,isfunc(a2)
00022D02 <AmiBlitz3.ab3@4747>   MOVE.l $E(A2),-(A7)         ;pc of proc.
00022D04 <AmiBlitz3.ab3@4748>   MOVEQ.l #$00,D0
00022D08 <AmiBlitz3.ab3@4749>   MOVE.b $4(A2),D0
00022D0E <AmiBlitz3.ab3@4750>   MOVE.l d0,parnumtemp
00022D12 <AmiBlitz3.ab3@4751>   BEQ.w 'nopars
00022D16 <AmiBlitz3.ab3@4753>   TST.b $20(a2)                                            ;increase if morepar
00022D1A <AmiBlitz3.ab3@4754>   BNE 'no0par
00022D1C <AmiBlitz3.ab3@4755>   MOVE.l a5,a4
00022D20 <AmiBlitz3.ab3@4758>   CMP.b #$20,(a4)+
00022D24 <AmiBlitz3.ab3@4759>   BEQ 'l1
00022D2A <AmiBlitz3.ab3@4760>   CMP.b #"}",-1(a4)
00022D2E <AmiBlitz3.ab3@4761>   BNE  'no0par                                             ;statementcall pars
00022D30 <AmiBlitz3.ab3@4762>   MOVEQ #0,d0
00022D34 <AmiBlitz3.ab3@4766>   LEA $16(A2),A1            ;pointer to var desc list
00022D36 <AmiBlitz3.ab3@4770>   MOVE.l d1,-(a7)
00022D38 <AmiBlitz3.ab3@4771>   MOVE.b (a1),d2
00022D3A <AmiBlitz3.ab3@4772>   MOVE.l d0,d1
00022D3E <AmiBlitz3.ab3@4773>   CMP.w #4,d2
00022D42 <AmiBlitz3.ab3@4774>   BNE 'l1b
00022D48 <AmiBlitz3.ab3@4775>   ADD.l #$203c,d1
00022D4E <AmiBlitz3.ab3@4776>   JSR writeword
00022D54 <AmiBlitz3.ab3@4777>   MOVE.l #$ffff0000,d1
00022D5A <AmiBlitz3.ab3@4778>   JSR writelong
00022D5E <AmiBlitz3.ab3@4779>  BRA 'l2b
00022D64 <AmiBlitz3.ab3@4782>   TST.b fpu
00022D68 <AmiBlitz3.ab3@4783>   BNE 'l1c
00022D6C <AmiBlitz3.ab3@4784>   CMP.w #5,d2
00022D70 <AmiBlitz3.ab3@4785>   BNE 'l1c
00022D76 <AmiBlitz3.ab3@4786>   ADD.l #$203c,d1
00022D7C <AmiBlitz3.ab3@4787>   JSR writeword
00022D82 <AmiBlitz3.ab3@4788>   MOVE.l #$800000c1,d1
00022D88 <AmiBlitz3.ab3@4789>   JSR writelong
00022D8C <AmiBlitz3.ab3@4790>  BRA 'l2b
00022D92 <AmiBlitz3.ab3@4793>   ADD.l #$70ff,d1
00022D98 <AmiBlitz3.ab3@4794>   JSR writeword
00022D9E <AmiBlitz3.ab3@4795>   MOVE.l #$f23c5000,d1
00022DA0 <AmiBlitz3.ab3@4796>   MOVE.l d0,d2
00022DA2 <AmiBlitz3.ab3@4797>   ASR.l #2,d2
00022DA4 <AmiBlitz3.ab3@4798>   ADD.l d2,d1
00022DAA <AmiBlitz3.ab3@4799>   JSR writelong
00022DAE <AmiBlitz3.ab3@4800>   MOVE.w #$ffff,d1
00022DB4 <AmiBlitz3.ab3@4801>   JSR writeword
00022DB6 <AmiBlitz3.ab3@4804>   MOVE.l (a7)+,d1
00022DB8 <AmiBlitz3.ab3@4805>   ADDQ.l #1,a1
00022DBE <AmiBlitz3.ab3@4806>   ADD.l #$0200,d0
00022DC4 <AmiBlitz3.ab3@4807>   CMP.l #$0e00,d0
00022DC8 <AmiBlitz3.ab3@4808>    BEQ syntaxerr
00022DCA <AmiBlitz3.ab3@4809>   TST.b (a1)
00022DCE <AmiBlitz3.ab3@4810>    BNE 'again
00022DD2 <AmiBlitz3.ab3@4811>  BRA 'nopars
00022DDC <AmiBlitz3.ab3@4814>   MOVE.w a2offset,a2offset2
00022DE0 <AmiBlitz3.ab3@4815>   LEA $16(A2),A2
00022DE6 <AmiBlitz3.ab3@4816>   MOVE.b funcparloop,-(a7)
00022DEE <AmiBlitz3.ab3@4817>   MOVE.b #1,funcparloop
00022DF4 <AmiBlitz3.ab3@4818>   MOVE.b blitzparloop,-(a7)
00022DFA <AmiBlitz3.ab3@4819>   CLR.b blitzparloop
00022DFE <AmiBlitz3.ab3@4821>   BSR.w fetchpees2
00022E04 <AmiBlitz3.ab3@4823>   MOVE.b (a7)+,blitzparloop
00022E0A <AmiBlitz3.ab3@4824>   MOVE.b (a7)+,funcparloop
00022E0E <AmiBlitz3.ab3@4826>  BRA.w 'nopars3
00022E12 <AmiBlitz3.ab3@4830>   BSR.w get1bytemain
00022E16 <AmiBlitz3.ab3@4833>   CMP.w #$7D,D0        ;'}'
00022E1A <AmiBlitz3.ab3@4834>    BNE.w morepar_                                          ;syntax error morepar
00022E20 <AmiBlitz3.ab3@4835>    JSR chkstak
00022E22 <AmiBlitz3.ab3@4836>   MOVE.l (A7)+,D1
00022E28 <AmiBlitz3.ab3@4854>    JSR makefjsr
00022E2E <AmiBlitz3.ab3@4877>   CLR.b funccall
00022E32 <AmiBlitz3.ab3@4879> BRA.w get1bytemain
00022E38 <AmiBlitz3.ab3@4886>   MOVE.l d0,lasttoken
00022E3C <AmiBlitz3.ab3@4887>   CMP.w #$c09f,d0                                          ;hack to use getregd0 instead of getd0
00022E40 <AmiBlitz3.ab3@4888>   BNE 'l2
00022E44 <AmiBlitz3.ab3@4889>    MOVE.w #$dd05,d0
00022E48 <AmiBlitz3.ab3@4892>   CMP.w #$c0a0,d0                                          ;hack to use getregd0 instead of getd0
00022E4C <AmiBlitz3.ab3@4893>   BNE 'l3
00022E50 <AmiBlitz3.ab3@4894>    MOVE.w #$dd06,d0
00022E54 <AmiBlitz3.ab3@4898>   CMP.w #-$7FC4,D0               ; was #$8000+fnum,
00022E58 <AmiBlitz3.ab3@4899>   BCS.w 'nono
00022E5C <AmiBlitz3.ab3@4900>     CMP.w #-$7F4D,D0             ; was #$8000+tnum,
00022E60 <AmiBlitz3.ab3@4901>     BCC.w 'nono
00022E68 <AmiBlitz3.ab3@4903>       BTST #$7,assemblercheck    ; was optreq2ga3+13                            ;inline Assembler checking
00022E6C <AmiBlitz3.ab3@4904>       BNE.b 'asmok
00022E72 <AmiBlitz3.ab3@4906>         TST.b debugmode
00022E76 <AmiBlitz3.ab3@4907>         BEQ.b 'l10
00022E80 <AmiBlitz3.ab3@4912>           MOVE.w d_nomemleft,dontwrite_nomemleft
00022E8A <AmiBlitz3.ab3@4913>           MOVE.l d_bigpc,bigpc
00022E94 <AmiBlitz3.ab3@4914>           MOVE.l d_pc,destpointer
00022E9E <AmiBlitz3.ab3@4915>           MOVE.l cont_pc2,cont_pc
00022EA2 <AmiBlitz3.ab3@4923>  BRA.w asmit   ;assemble the bastard
00022EA6 <AmiBlitz3.ab3@4930>   BCLR #$F,D0
00022EA8 <AmiBlitz3.ab3@4931>   MOVE.w D0,D1
00022EAC <AmiBlitz3.ab3@4932>   ANDI.w #$7F00,D1
00022EB0 <AmiBlitz3.ab3@4933>   BNE.w handlelib
00022EB4 <AmiBlitz3.ab3@4935>     CMP.w #$B3,D0        ; was #tnum,                                  ;intern Instructions
00022EB8 <AmiBlitz3.ab3@4936>     BCS.w 'isokat
00022EBC <AmiBlitz3.ab3@4938>       SUBI.w #$77,D0     ; was #tnum-fnum,
00022EC0 <AmiBlitz3.ab3@4939>       CMP.w #$4B,D0      ; was #fnum+15
00022EC4 <AmiBlitz3.ab3@4940>       BEQ.w 'noerr
00022EC8 <AmiBlitz3.ab3@4941>         CMP.w #$46,D0    ; was #fnum+10,
00022ECC <AmiBlitz3.ab3@4942>         BEQ.w 'noerr
00022ED0 <AmiBlitz3.ab3@4943>  BRA.w 'doerr                                            ; change tokennum
00022ED4 <AmiBlitz3.ab3@4946>     CMP.w #$38,D0        ;check for things which don't want
00022ED8 <AmiBlitz3.ab3@4947>      BEQ.w 'noerr        ;error checking...
00022EDC <AmiBlitz3.ab3@4948>     CMP.w #$39,D0
00022EE0 <AmiBlitz3.ab3@4949>      BEQ.w 'noerr
00022EE4 <AmiBlitz3.ab3@4950>     CMP.w #$D,D0
00022EE8 <AmiBlitz3.ab3@4951>      BEQ.w 'noerr
00022EEC <AmiBlitz3.ab3@4952>     CMP.w #$12,D0
00022EF0 <AmiBlitz3.ab3@4953>      BEQ.w 'noerr
00022EF4 <AmiBlitz3.ab3@4954>     CMP.w #$13,D0
00022EF8 <AmiBlitz3.ab3@4955>      BEQ.w 'noerr
00022EFC <AmiBlitz3.ab3@4956>     CMP.w #$1A,D0
00022F00 <AmiBlitz3.ab3@4957>      BEQ.w 'noerr
00022F04 <AmiBlitz3.ab3@4958>     CMP.w #$2A,D0
00022F08 <AmiBlitz3.ab3@4959>      BHI.w 'doerr
00022F0C <AmiBlitz3.ab3@4960>     CMP.w #$23,D0
00022F10 <AmiBlitz3.ab3@4961>      BCS.b 'doerr
00022F14 <AmiBlitz3.ab3@4964>   BSR.w undodebug
00022F16 <AmiBlitz3.ab3@4967>   SUBQ.w #1,D0
00022F18 <AmiBlitz3.ab3@4968>   LSL.w #2,D0
00022F1E <AmiBlitz3.ab3@4978>   LEA instructionbase,A0
00022F22 <AmiBlitz3.ab3@4979>   MOVEA.l $0(A0,D0.W),A0
00022F24 <AmiBlitz3.ab3@4980>   MOVE.l A0,-(A7)
00022F28 <AmiBlitz3.ab3@4981> BRA.w get1bytemain
00022F2A <AmiBlitz3.ab3@4987>   MOVE.w D0,D1
00022F2E <AmiBlitz3.ab3@4988>    BSR.w searchinstr    ;toke stuff in a3
00022F34 <AmiBlitz3.ab3@4990>    TST.b newmode
00022F38 <AmiBlitz3.ab3@4991>    BNE compile_term
00022F3E <AmiBlitz3.ab3@4993>   BTST #$2,$1(A3)                                          ;a3 = pointer to instr ;toke stuff in a3
00022F42 <AmiBlitz3.ab3@4994>    BNE.w stamigalib
00022F48 <AmiBlitz3.ab3@4995>   BTST #$0,$1(A3)
00022F4C <AmiBlitz3.ab3@4996>    BEQ.w needreturn_                                       ;syntax err need return   ;check it's a statement
00022F50 <AmiBlitz3.ab3@4998>    BSR.w sizespec                                         ;does it need a size specifier?
00022F54 <AmiBlitz3.ab3@4999>    BSR.w countpees
00022F5A <AmiBlitz3.ab3@5005>   MOVE.w numreps,-(A7)
00022F60 <AmiBlitz3.ab3@5006>   MOVE.w userp,-(A7)
00022F66 <AmiBlitz3.ab3@5007>   MOVE.w a2offset,-(A7)
00022F68 <AmiBlitz3.ab3@5008>   MOVE.l A2,-(A7)                                          ;recurs.
00022F72 <AmiBlitz3.ab3@5009>   MOVE.w convsize,userp
00022F76 <AmiBlitz3.ab3@5010>   LEA $6(A3),A1
00022F78 <AmiBlitz3.ab3@5015>    MOVE.w (A1),D2
00022F7C <AmiBlitz3.ab3@5016>    BMI.w 'SERR                                              ;statement syntax error
00022F80 <AmiBlitz3.ab3@5017>   ANDI.w #$FF,D2
00022F82 <AmiBlitz3.ab3@5018>   CMP.w D2,D1
00022F86 <AmiBlitz3.ab3@5019>    BEQ.w 'found
00022F8A <AmiBlitz3.ab3@5020>    BCS.w 'next
00022F8C <AmiBlitz3.ab3@5021>   MOVE.b (A1),D3
00022F90 <AmiBlitz3.ab3@5022>   ANDI.w #$7,D3
00022F94 <AmiBlitz3.ab3@5023>    BEQ.w 'next
00022F96 <AmiBlitz3.ab3@5024>   MOVE.w D2,D4
00022F98 <AmiBlitz3.ab3@5025>   SUB.w D3,D4
00022F9A <AmiBlitz3.ab3@5026>   MOVEQ.l #$00,D5
00022F9C <AmiBlitz3.ab3@5027>   MOVE.w D1,D5
00022F9E <AmiBlitz3.ab3@5028>   SUB.w D4,D5
00022FA0 <AmiBlitz3.ab3@5029>   DIVU D3,D5
00022FA2 <AmiBlitz3.ab3@5030>   SWAP D5
00022FA4 <AmiBlitz3.ab3@5031>   TST.w D5
00022FA8 <AmiBlitz3.ab3@5032>    BEQ.w 'found
00022FAA <AmiBlitz3.ab3@5035>   ADDQ.w #2,A1
00022FAC <AmiBlitz3.ab3@5036>   ADDA.w D2,A1
00022FB0 <AmiBlitz3.ab3@5037>    BSR.w aligna1
00022FB4 <AmiBlitz3.ab3@5038>    BSR.w skiplibreg
00022FB8 <AmiBlitz3.ab3@5039>   LEA $C(A1),A1
00022FBC <AmiBlitz3.ab3@5040>  BRA.w 'loop
00022FBE <AmiBlitz3.ab3@5044>   MOVE.w (a3),d2
00022FC2 <AmiBlitz3.ab3@5045>   BTST #1,d2
00022FC6 <AmiBlitz3.ab3@5046>   BEQ statement_
00022FCA <AmiBlitz3.ab3@5047>   CMP.w #1,d1
00022FCE <AmiBlitz3.ab3@5048>   BEQ statement_
00022FD2 <AmiBlitz3.ab3@5051>   CMP.b #$20,(a5)+
00022FD6 <AmiBlitz3.ab3@5052>   BEQ 'l2
00022FDC <AmiBlitz3.ab3@5053>   CMP.b #"(",-2(a5)
00022FE0 <AmiBlitz3.ab3@5054>   BNE 'l1
00022FE4 <AmiBlitz3.ab3@5055>  BRA parameter_
00022FE8 <AmiBlitz3.ab3@5058>  BRA inbrackets_
00022FEA <AmiBlitz3.ab3@5062>   MOVE.b (A1),D2
00022FEC <AmiBlitz3.ab3@5063>   LSL.w #8,D2
00022FEE <AmiBlitz3.ab3@5064>   OR.w D2,D1
00022FF0 <AmiBlitz3.ab3@5065>   MOVE.l A1,-(A7)
00022FF6 <AmiBlitz3.ab3@5066>   CLR.w a2offset
00022FF8 <AmiBlitz3.ab3@5067>   TST.w D1
00022FFC <AmiBlitz3.ab3@5068>    BEQ.w 'nopees
00023000 <AmiBlitz3.ab3@5069>   LEA $2(A1),A2
00023006 <AmiBlitz3.ab3@5071>   MOVE.l lasttoken,-(a7)
0002300C <AmiBlitz3.ab3@5072>   CLR.l lasttoken
00023010 <AmiBlitz3.ab3@5074>   BSR.w fetchlibps
00023016 <AmiBlitz3.ab3@5076>   MOVE.l (a7)+,lasttoken
0002301A <AmiBlitz3.ab3@5078>  BRA.w 'skip
0002301E <AmiBlitz3.ab3@5081>   BSR.w get1bytemain
00023020 <AmiBlitz3.ab3@5084>   MOVEA.l (A7)+,A1
00023022 <AmiBlitz3.ab3@5085>   MOVEA.l (A7)+,A2
00023028 <AmiBlitz3.ab3@5086>   MOVE.w a2offset,D1
0002302C <AmiBlitz3.ab3@5087>    BEQ.w 'skip2
00023032 <AmiBlitz3.ab3@5088>   MOVE.w D1,preplibst+2
00023038 <AmiBlitz3.ab3@5089>   MOVE.l preplibst,D1
0002303E <AmiBlitz3.ab3@5090>    JSR writelong                                           ;write array offset stack correct
00023048 <AmiBlitz3.ab3@5091>   MOVE.w numreps,movenumrep+2
0002304C <AmiBlitz3.ab3@5092>    BEQ.w 'skip2
00023052 <AmiBlitz3.ab3@5093>   MOVE.l movenumrep,D1
00023058 <AmiBlitz3.ab3@5094>    JSR writelong
0002305E <AmiBlitz3.ab3@5098>   JSR userjsr
00023064 <AmiBlitz3.ab3@5103>   MOVE.w a2offset,D1
00023068 <AmiBlitz3.ab3@5104>    BEQ.w 'skip3
0002306C <AmiBlitz3.ab3@5105>   CMP.w #$8,D1
00023070 <AmiBlitz3.ab3@5106>    BHI.w 'skip4
00023074 <AmiBlitz3.ab3@5107>   ANDI.w #$7,D1
00023076 <AmiBlitz3.ab3@5108>   LSL.w #8,D1
00023078 <AmiBlitz3.ab3@5109>   LSL.w #1,D1
0002307C <AmiBlitz3.ab3@5110>   ORI.w #$504F,D1       ;addq #x,a7
00023082 <AmiBlitz3.ab3@5111>   JSR writeword
00023086 <AmiBlitz3.ab3@5112>  BRA.w 'skip3
0002308C <AmiBlitz3.ab3@5115>   MOVE.w D1,fixlibst+2
00023092 <AmiBlitz3.ab3@5116>   MOVE.l fixlibst,D1
00023098 <AmiBlitz3.ab3@5117>   JSR writelong
0002309E <AmiBlitz3.ab3@5120>   MOVE.w (A7)+,a2offset
000230A4 <AmiBlitz3.ab3@5121>   MOVE.w (A7)+,userp
000230AA <AmiBlitz3.ab3@5122>   MOVE.w (A7)+,numreps
000230AE <AmiBlitz3.ab3@5123> BRA.w reget
000230B2 <AmiBlitz3.ab3@5127>   MOVEM.l A2-A3,-(A7)
000230B8 <AmiBlitz3.ab3@5129>   CLR.b doublepeek
000230BE <AmiBlitz3.ab3@5131>   MOVE.l A5,lastsourcepos
000230C2 <AmiBlitz3.ab3@5132>    BSR.w getchar          ;','
000230C6 <AmiBlitz3.ab3@5133>   CMP.w #$2E,D0
000230CA <AmiBlitz3.ab3@5134>    BEQ.w 'ok1
000230D0 <AmiBlitz3.ab3@5135>   MOVEA.l defaulttype,A2
000230D4 <AmiBlitz3.ab3@5136>   CMP.w #$24,D0           ;'$'
000230D8 <AmiBlitz3.ab3@5137>    BNE.w 'none
000230DA <AmiBlitz3.ab3@5138>   MOVEQ.l #$07,D1
000230DE <AmiBlitz3.ab3@5139>  BRA.w 'skip
000230E2 <AmiBlitz3.ab3@5142>   BSR.w getparameter2
000230E6 <AmiBlitz3.ab3@5143>   BEQ.w syntaxerr
000230EC <AmiBlitz3.ab3@5144>   LEA newtypebase,A2
000230F0 <AmiBlitz3.ab3@5145>   BSR.w findtype
000230F4 <AmiBlitz3.ab3@5146>   BNE.w notypeerr
000230FE <AmiBlitz3.ab3@5151>   MOVE.w oldqflag,instringon
00023104 <AmiBlitz3.ab3@5152>   MOVEA.l lastsourcepos,A5
00023108 <AmiBlitz3.ab3@5160>   MOVE.w $6(A2),D1
0002310E <AmiBlitz3.ab3@5162>   CMP.w #8,8(a2)
00023112 <AmiBlitz3.ab3@5163>   BNE 'l1
0002311A <AmiBlitz3.ab3@5164>   MOVE.b #1,doublepeek
00023120 <AmiBlitz3.ab3@5169>   MOVE.w D1,convsize
00023124 <AmiBlitz3.ab3@5170>   MOVEM.l (A7)+,A2-A3
00023126 <AmiBlitz3.ab3@5171> RTS
0002312C <AmiBlitz3.ab3@5176>   BTST #$3,$1(A3)
00023130 <AmiBlitz3.ab3@5177>   BEQ.w 'skip
00023134 <AmiBlitz3.ab3@5178>   BSR.w sizespec2                                         ;read peek/poke size
00023138 <AmiBlitz3.ab3@5180>   ORI.w #$7000,D1
0002313E <AmiBlitz3.ab3@5181>   JSR writeword
00023144 <AmiBlitz3.ab3@5182>   ADDQ.w #1,regnum
00023146 <AmiBlitz3.ab3@5185> RTS
00023148 <AmiBlitz3.ab3@5192>             Dc.b $10,$12                                   ;MOVE.B  (A2),D0
0002314A <AmiBlitz3.ab3@5193>             Dc.b $14,$91                                   ;MOVE.B  (A1),(A2)
0002314C <AmiBlitz3.ab3@5194>             Dc.b $12,$80                                   ;MOVE.B  D0,(A1)
0002314E <AmiBlitz3.ab3@5198> swapw:      Dc.b $30,$12                                   ;MOVE.W  (A2),D0
00023150 <AmiBlitz3.ab3@5199>             Dc.b $34,$91                                   ;MOVE.W  (A1),(A2)
00023152 <AmiBlitz3.ab3@5200>             Dc.b $32,$80                                   ;MOVE.W  D0,(A1)
00023154 <AmiBlitz3.ab3@5204> swapl:      Dc.b $20,$12                                   ;MOVE.L  (A2),D0
00023156 <AmiBlitz3.ab3@5205>             Dc.b $24,$91                                   ;MOVE.L  (A1),(A2)
00023158 <AmiBlitz3.ab3@5206>             Dc.b $22,$80                                   ;MOVE.L  D0,(A1)
0002315A <AmiBlitz3.ab3@5210> pulla1:     Dc.b $22,$5F                                   ;MOVEA.L (A7)+,A1
0002315C <AmiBlitz3.ab3@5213> srctype:    Ds.w 1
00023160 <AmiBlitz3.ab3@5218>   BSR.w excget
00023164 <AmiBlitz3.ab3@5219>   CMP.w #$2C,D0     ;','
00023168 <AmiBlitz3.ab3@5220>    BNE.w syntaxerr
0002316E <AmiBlitz3.ab3@5221>   MOVE.b D2,srctype
00023174 <AmiBlitz3.ab3@5222>   MOVE.w pusha2,D1
0002317A <AmiBlitz3.ab3@5223>   JSR writeword
0002317E <AmiBlitz3.ab3@5224>   BSR.w get1bytemain
00023182 <AmiBlitz3.ab3@5225>   BSR.w excget
00023188 <AmiBlitz3.ab3@5226>   CMP.b srctype,D2
0002318C <AmiBlitz3.ab3@5227>    BNE.w excerr2
00023192 <AmiBlitz3.ab3@5228>   MOVE.w pulla1,D1
00023198 <AmiBlitz3.ab3@5229>    JSR writeword
0002319C <AmiBlitz3.ab3@5231>   CMP.b #$2,D2
000231A0 <AmiBlitz3.ab3@5232>    BCS.w 'byte
000231A4 <AmiBlitz3.ab3@5233>    BEQ.w 'word
000231A8 <AmiBlitz3.ab3@5234>   LEA swapl(PC),A0
000231AC <AmiBlitz3.ab3@5235>   LEA swaplf(PC),A1
000231B2 <AmiBlitz3.ab3@5236>  JMP pokecode
000231B6 <AmiBlitz3.ab3@5239>   LEA swapw(PC),A0
000231BA <AmiBlitz3.ab3@5240>   LEA swapwf(PC),A1
000231C0 <AmiBlitz3.ab3@5241>  JMP pokecode
000231C4 <AmiBlitz3.ab3@5244>   LEA swapb(PC),A0
000231C8 <AmiBlitz3.ab3@5245>   LEA swapbf(PC),A1
000231CE <AmiBlitz3.ab3@5246> JMP pokecode
000231D4 <AmiBlitz3.ab3@5250>   JSR getparameter
000231D8 <AmiBlitz3.ab3@5251>   BSR.w fetchvars
000231DE <AmiBlitz3.ab3@5252>   JSR calcvar
000231E2 <AmiBlitz3.ab3@5253>   BTST #$E,D2
000231E6 <AmiBlitz3.ab3@5254>    BEQ.w 'skip
000231EA <AmiBlitz3.ab3@5255>   MOVE.b #$4,D2
000231EC <AmiBlitz3.ab3@5258>   TST.b D2
000231F0 <AmiBlitz3.ab3@5259>    BEQ.w excerr
000231F4 <AmiBlitz3.ab3@5260>   BTST #$F,D2
000231F8 <AmiBlitz3.ab3@5261>    BNE.w 'done
000231FE <AmiBlitz3.ab3@5262>   MOVE.w leaamp,D1
00023204 <AmiBlitz3.ab3@5263>    JSR pokewda5s
00023206 <AmiBlitz3.ab3@5264>   MOVE.w D3,D1
0002320C <AmiBlitz3.ab3@5265>  JMP writeword
0002320E <AmiBlitz3.ab3@5268> RTS
00023214 <AmiBlitz3.ab3@5277>   MOVE.l mempool,a0
0002321A <AmiBlitz3.ab3@5278>   MOVEA.l _execbase,A6
0002321E <AmiBlitz3.ab3@5279> JMP _AllocPooled(a6)
00023222 <AmiBlitz3.ab3@5284>   MOVE.w #$BF00,D1       ; was #wbstart
00023228 <AmiBlitz3.ab3@5285> JMP Atokejsr
0002322C <AmiBlitz3.ab3@5289>   CMP.w #-$7FFA,D0       ; was  #$8006
00023230 <AmiBlitz3.ab3@5290>    BEQ.w popreturn
00023234 <AmiBlitz3.ab3@5291>   CMP.w #-$7FEA,D0       ; was  #$8000+22,
00023238 <AmiBlitz3.ab3@5292>    BEQ.w popnext2
0002323C <AmiBlitz3.ab3@5293>   CMP.w #-$7FF2,D0       ; was  #$8000+14,
00023240 <AmiBlitz3.ab3@5294>    BEQ.w popselect2
00023244 <AmiBlitz3.ab3@5296>   CMP.w #-$7FF5,D0       ; was  #$8000+11
00023248 <AmiBlitz3.ab3@5297>    BEQ.w get1bytemain
0002324C <AmiBlitz3.ab3@5298>   CMP.w #-$7FF4,D0       ; was  #$8000+12
00023250 <AmiBlitz3.ab3@5299>    BEQ.w get1bytemain
00023254 <AmiBlitz3.ab3@5300>   CMP.w #-$7FEC,D0       ; was  #$8000+20
00023258 <AmiBlitz3.ab3@5301>    BEQ.w get1bytemain
0002325C <AmiBlitz3.ab3@5302>   CMP.w #-$7F45,D0       ; was  #$8000+tnum+8
00023260 <AmiBlitz3.ab3@5303>    BEQ.w get1bytemain
00023264 <AmiBlitz3.ab3@5304> BRA.w syntaxerr
0002326A <AmiBlitz3.ab3@5308>   TST.b debugmode
0002326E <AmiBlitz3.ab3@5309>    BEQ.w 'norerr
00023272 <AmiBlitz3.ab3@5310>   LEA 'rfix(PC),A0
00023276 <AmiBlitz3.ab3@5311>   LEA 'rfixf(PC),A1
0002327C <AmiBlitz3.ab3@5312>    JSR pokecode
00023280 <AmiBlitz3.ab3@5313>   MOVE.w #$C305,D1
00023286 <AmiBlitz3.ab3@5314>    JSR Atokejsr
0002328A <AmiBlitz3.ab3@5315>   MOVE.w 'rfix2(PC),D1
00023290 <AmiBlitz3.ab3@5317>    JSR writeword
00023294 <AmiBlitz3.ab3@5318>  BRA.w get1bytemain
0002329A <AmiBlitz3.ab3@5321>   CMPI.w #$6753,$4(A7)                                     ;#"gS",4(A7)
0002329E <AmiBlitz3.ab3@5322>   BEQ.w 'rfix2
000232A4 <AmiBlitz3.ab3@5325>   JSR $20000                                               ;reass
000232A6 <AmiBlitz3.ab3@5328>   ADDQ.w #6,A7
000232AA <AmiBlitz3.ab3@5331>   MOVE.w 'sfix(PC),D1
000232B0 <AmiBlitz3.ab3@5332>   JSR writeword
000232B4 <AmiBlitz3.ab3@5333> BRA.w get1bytemain
000232B6 <AmiBlitz3.ab3@5338>   Dc.b $58,$4F                                             ;ADDQ.W  #4,A7
000232BC <AmiBlitz3.ab3@5343>   MOVE.l firstfor,D0
000232C0 <AmiBlitz3.ab3@5344>    BEQ.w noforerr
000232C2 <AmiBlitz3.ab3@5345>   MOVEA.l D0,A2
000232C6 <AmiBlitz3.ab3@5346>    BSR.w get1bytemain
000232CA <AmiBlitz3.ab3@5347>   BSR.w popnext
000232D0 <AmiBlitz3.ab3@5350>   TST.b debugmode
000232D4 <AmiBlitz3.ab3@5351>    BEQ.w 'ner
000232DA <AmiBlitz3.ab3@5352>   MOVE.l nextfixw2,D1
000232E0 <AmiBlitz3.ab3@5353>   CMPI.w #$3,$C(A2)
000232E4 <AmiBlitz3.ab3@5354>    BCS.w 'writelong2
000232EA <AmiBlitz3.ab3@5355>   MOVE.l nextfixl2,D1
000232F0 <AmiBlitz3.ab3@5358>   JMP  writelong
000232F6 <AmiBlitz3.ab3@5361>   CMPI.w #$3,$C(A2)
000232FA <AmiBlitz3.ab3@5362>    BCS.w 'skip2
00023300 <AmiBlitz3.ab3@5363>   MOVE.l nextfixl,D1
00023306 <AmiBlitz3.ab3@5364>   JMP writelong
0002330C <AmiBlitz3.ab3@5367>   MOVE.w nextfixw,D1
00023312 <AmiBlitz3.ab3@5368> JMP writeword
00023316 <AmiBlitz3.ab3@5373>   MOVE.w $C(A2),D0
0002331C <AmiBlitz3.ab3@5374>   TST.b debugmode
00023320 <AmiBlitz3.ab3@5375>    BEQ.w 'norunerr
00023324 <AmiBlitz3.ab3@5376>   MOVE.w #$C306,D1
00023328 <AmiBlitz3.ab3@5377>   CMP.w #$3,D0
0002332C <AmiBlitz3.ab3@5378>    BCS.w 'oktc
0002332E <AmiBlitz3.ab3@5379>   ADDQ.w #1,D1
00023330 <AmiBlitz3.ab3@5382>   MOVE.l A2,-(A7)
00023336 <AmiBlitz3.ab3@5383>   JSR Atokejsr
00023338 <AmiBlitz3.ab3@5384>   MOVEA.l (A7)+,A2
0002333A <AmiBlitz3.ab3@5387> RTS
00023340 <AmiBlitz3.ab3@5391>   MOVE.l firstsel,D0
00023344 <AmiBlitz3.ab3@5392>    BEQ.w eselerr
00023346 <AmiBlitz3.ab3@5393>   MOVEA.l D0,A2
0002334A <AmiBlitz3.ab3@5394>    BSR.w get1bytemain
0002334E <AmiBlitz3.ab3@5397>   MOVE.w $C(A2),D2
00023354 <AmiBlitz3.ab3@5398>   TST.b debugmode
00023358 <AmiBlitz3.ab3@5399>    BEQ.w 'norerr
0002335C <AmiBlitz3.ab3@5400>   MOVE.w #$C313,D1
00023360 <AmiBlitz3.ab3@5401>   CMP.w #$3,D2
00023364 <AmiBlitz3.ab3@5402>    BCS.w 'chkit
00023366 <AmiBlitz3.ab3@5403>   ADDQ.w #1,D1
0002336C <AmiBlitz3.ab3@5406>   JSR Atokejsr                                             ;make sure next thing on stack
0002336E <AmiBlitz3.ab3@5410>   MOVEQ.l #$02,D1
00023372 <AmiBlitz3.ab3@5411>   CMP.w #$3,D2
00023376 <AmiBlitz3.ab3@5412>    BCS.w 'doit
00023378 <AmiBlitz3.ab3@5413>   MOVEQ.l #$04,D1
0002337C <AmiBlitz3.ab3@5414>   CMP.w #$7,D2
00023380 <AmiBlitz3.ab3@5415>    BCS.w 'doit
00023386 <AmiBlitz3.ab3@5416>   LEA endselstr,A0
0002338C <AmiBlitz3.ab3@5417>   LEA endselstrf,A1
00023392 <AmiBlitz3.ab3@5418>   TST.b debugmode
00023396 <AmiBlitz3.ab3@5419>    BEQ.w 'norerr3
0002339C <AmiBlitz3.ab3@5420>   LEA endselstrf2,A1
000233A2 <AmiBlitz3.ab3@5423>   JSR pokecode
000233A6 <AmiBlitz3.ab3@5424>   MOVE.w #$C003,D1                                         ;global freemem
000233AC <AmiBlitz3.ab3@5425>  JMP Atokejsr
000233B2 <AmiBlitz3.ab3@5428>   TST.b debugmode
000233B6 <AmiBlitz3.ab3@5429>    BEQ.w 'norerr2
000233B8 <AmiBlitz3.ab3@5430>   ADDQ.w #2,D1                                             ;for the "sE"
000233BA <AmiBlitz3.ab3@5433>   LSL.w #8,D1
000233BC <AmiBlitz3.ab3@5434>   LSL.w #1,D1
000233C2 <AmiBlitz3.ab3@5435>   OR.w endsel,D1
000233C8 <AmiBlitz3.ab3@5436> JMP writeword
000233CC <AmiBlitz3.ab3@5439> firstrep:    Ds.l 1
000233D0 <AmiBlitz3.ab3@5440> replineat:   Ds.l 1
000233D6 <AmiBlitz3.ab3@5449>   CLR.l fp0addr
000233E0 <AmiBlitz3.ab3@5450>   MOVE.l linenumat,replineat
000233E2 <AmiBlitz3.ab3@5451>   MOVEQ.l #$08,D0
000233E8 <AmiBlitz3.ab3@5452>   MOVEA.l _execbase,A6
000233EE <AmiBlitz3.ab3@5453>   MOVE.l mempool,a0
000233F2 <AmiBlitz3.ab3@5454>   JSR _AllocPooled(a6)
000233F4 <AmiBlitz3.ab3@5456>   MOVEA.l D0,A0
000233F8 <AmiBlitz3.ab3@5457>   MOVE.l firstrep(PC),(A0)
000233FE <AmiBlitz3.ab3@5458>   MOVE.l A0,firstrep
00023406 <AmiBlitz3.ab3@5459>   MOVE.l destpointer,$4(A0)
00023408 <AmiBlitz3.ab3@5460> RTS
0002340E <AmiBlitz3.ab3@5463> str_temp:  Ds.w 3                                            ;infochk  ds.b 6 org source
00023412 <AmiBlitz3.ab3@5466>   LEA str_temp(PC),A1
00023414 <AmiBlitz3.ab3@5467>   CLR.w (A1)
00023418 <AmiBlitz3.ab3@5468>   CLR.l $2(A1)
0002341A <AmiBlitz3.ab3@5471>   MOVEQ.l #$04,D0
0002341E <AmiBlitz3.ab3@5474>     MOVE.b $1(A1),(A1)+
00023422 <AmiBlitz3.ab3@5475>   DBF D0,'loop
00023426 <AmiBlitz3.ab3@5480>   LEA str_temp(PC),A1
00023428 <AmiBlitz3.ab3@5481>   MOVE.b (A0),D0
0002342C <AmiBlitz3.ab3@5482>   ORI.b #$20,D0
00023430 <AmiBlitz3.ab3@5483>   MOVE.b D0,$5(A1)
00023432 <AmiBlitz3.ab3@5484>   TST.b (A0)+
00023436 <AmiBlitz3.ab3@5485>    BNE.w 'loop2
0002343A <AmiBlitz3.ab3@5486>   CMPI.w #$2E69,(A1)+                                      ;".i"
0002343E <AmiBlitz3.ab3@5487>    BNE.w 'no
00023444 <AmiBlitz3.ab3@5488>   CMPI.l #$6E666F20,(A1)                                   ;"nfo "
00023446 <AmiBlitz3.ab3@5491> RTS
0002344A <AmiBlitz3.ab3@5495>   BPL.w 'evaltoke
0002344C <AmiBlitz3.ab3@5496>   MOVE.w D0,D1
00023450 <AmiBlitz3.ab3@5497>   ANDI.w #$7F80,D1
00023454 <AmiBlitz3.ab3@5498>    BEQ.w tokeerr
00023458 <AmiBlitz3.ab3@5499>   BCLR #$F,D0
0002345A <AmiBlitz3.ab3@5500>   MOVE.w D0,D4                                             ;got toke number
0002345E <AmiBlitz3.ab3@5501>   BSR.w get1bytemain
00023462 <AmiBlitz3.ab3@5502>  BRA.w 'gotnum
00023468 <AmiBlitz3.ab3@5505>   JSR evalconst
0002346E <AmiBlitz3.ab3@5506>   CMP.l #MaxWord,D3
00023472 <AmiBlitz3.ab3@5507>    BHI.w tokeerr
00023474 <AmiBlitz3.ab3@5508>   TST.w D6
00023478 <AmiBlitz3.ab3@5509>    BNE.w tokeerr
0002347A <AmiBlitz3.ab3@5510>   MOVE.w D3,D4
0002347C <AmiBlitz3.ab3@5513>   MOVEQ.l #$00,D5
00023480 <AmiBlitz3.ab3@5514>   CMP.w #$2C,D0
00023484 <AmiBlitz3.ab3@5515>    BNE.w 'gotfrom
00023486 <AmiBlitz3.ab3@5516>   MOVE.w D4,-(A7)
0002348C <AmiBlitz3.ab3@5517>    JSR evalconst2
00023492 <AmiBlitz3.ab3@5518>   CMP.l #MaxWord,D3
00023496 <AmiBlitz3.ab3@5519>    BHI.w tokeerr
00023498 <AmiBlitz3.ab3@5520>   TST.w D6
0002349C <AmiBlitz3.ab3@5521>    BNE.w tokeerr
0002349E <AmiBlitz3.ab3@5522>   MOVE.w D3,D5
000234A0 <AmiBlitz3.ab3@5523>   MOVE.w (A7)+,D4
000234A2 <AmiBlitz3.ab3@5526> RTS                                                        ;d4=toke, d5=form
000234A4 <AmiBlitz3.ab3@5530>   TST.w D0
000234A8 <AmiBlitz3.ab3@5531>    BSR.w gettokeps
000234AC <AmiBlitz3.ab3@5532>   MOVE.w #$4EB9,D1
000234B2 <AmiBlitz3.ab3@5533>   JSR writeword
000234B6 <AmiBlitz3.ab3@5534>   BSR.w addoff
000234B8 <AmiBlitz3.ab3@5535>   MOVE.w D5,D1
000234BC <AmiBlitz3.ab3@5536>   ORI.w #$8000,D1                                          ;Toke of Amiga type.
000234BE <AmiBlitz3.ab3@5537>   SWAP D1
000234C0 <AmiBlitz3.ab3@5538>   MOVE.w D4,D1
000234C6 <AmiBlitz3.ab3@5539> JMP writelong
000234C8 <AmiBlitz3.ab3@5543>   TST.w D0
000234CC <AmiBlitz3.ab3@5544>    BSR.w gettokeps
000234D0 <AmiBlitz3.ab3@5545>   MOVE.w #$4EB9,D1
000234D6 <AmiBlitz3.ab3@5546>   JSR writeword
000234DA <AmiBlitz3.ab3@5547>   BSR.w addoff
000234DC <AmiBlitz3.ab3@5548>   MOVE.w D5,D1
000234E0 <AmiBlitz3.ab3@5549>   ORI.w #$C000,D1                                          ;Toke of Blitz type.
000234E2 <AmiBlitz3.ab3@5550>   SWAP D1
000234E4 <AmiBlitz3.ab3@5551>   MOVE.w D4,D1
000234EA <AmiBlitz3.ab3@5552>   JMP writelong
000234F0 <AmiBlitz3.ab3@5556>   JSR evalconst
000234F6 <AmiBlitz3.ab3@5557>   CMP.l #$10000,D3
000234FA <AmiBlitz3.ab3@5558>    BCC.w tokeerr
000234FC <AmiBlitz3.ab3@5559>   MOVE.w D3,D1
00023502 <AmiBlitz3.ab3@5560> JMP Atokejsr
00023506 <AmiBlitz3.ab3@5564>   BSR.w gettokeps
0002350A <AmiBlitz3.ab3@5565>   MOVE.w #$4EB9,D1
00023510 <AmiBlitz3.ab3@5566>   JSR writeword
00023516 <AmiBlitz3.ab3@5567>   MOVE.l destpointer,D3
0002351E <AmiBlitz3.ab3@5568>   BTST #$7,blitzmode
00023522 <AmiBlitz3.ab3@5569>    BEQ.w 'inamiga
00023526 <AmiBlitz3.ab3@5570>   BSET #$E,D5
0002352A <AmiBlitz3.ab3@5573>   BSR.w maketjsr
0002352E <AmiBlitz3.ab3@5574>   BSR.w addoff
00023534 <AmiBlitz3.ab3@5575> JMP writelong
00023538 <AmiBlitz3.ab3@5579>   BEQ.w 'zero
0002353A <AmiBlitz3.ab3@5580>   MOVEQ.l #$02,D2                                          ;get a word
00023540 <AmiBlitz3.ab3@5582>   JSR bakeval
00023544 <AmiBlitz3.ab3@5583>   MOVE.w fvwait(PC),D1
00023548 <AmiBlitz3.ab3@5584>  BRA.w 'vcont
0002354C <AmiBlitz3.ab3@5587>   MOVE.w #$7000,D1                                         ;moveq #0,d0
00023552 <AmiBlitz3.ab3@5590>   JSR writeword
00023556 <AmiBlitz3.ab3@5591>   MOVE.w #$C104,D1
0002355C <AmiBlitz3.ab3@5592> JMP Atokejsr
0002355E <AmiBlitz3.ab3@5596>   SUBQ.w #1,D0
00023564 <AmiBlitz3.ab3@5599>   Dc.w $3b7c,$ffff,0                                       ;move.w #$FFFF,$0(A5) ;noopt
00023568 <AmiBlitz3.ab3@5602>   Dc.l $426d0001                                           ;clr.w $0(A5)
0002356C <AmiBlitz3.ab3@5606>   MOVE.b debugmode(PC),D1
00023570 <AmiBlitz3.ab3@5607>   BEQ.b 'skip
00023574 <AmiBlitz3.ab3@5608>   MOVE.w #$D500,D1
0002357A <AmiBlitz3.ab3@5609> JMP Atokejsr
0002357C <AmiBlitz3.ab3@5612> RTS
00023584 <AmiBlitz3.ab3@5616>   BSET #$0,blitzmode
0002358C <AmiBlitz3.ab3@5617>   BSET #$7,blitzmode
00023590 <AmiBlitz3.ab3@5618>   MOVE.w #$C200,D1
00023596 <AmiBlitz3.ab3@5619>   JSR Atokejsr
0002359C <AmiBlitz3.ab3@5620>   TST.b debugmode
000235A0 <AmiBlitz3.ab3@5621>    BEQ.w 'done
000235A4 <AmiBlitz3.ab3@5622>   MOVE.w cgoblitz(PC),D1
000235AA <AmiBlitz3.ab3@5623>   JSR writeword
000235AC <AmiBlitz3.ab3@5624>   MOVEQ.l #-$01,D1
000235B2 <AmiBlitz3.ab3@5625>   JSR writeword
000235B8 <AmiBlitz3.ab3@5626>   JSR getbbase
000235BE <AmiBlitz3.ab3@5627>   JSR writeword
000235C2 <AmiBlitz3.ab3@5630> BRA.w debugmode_codelabel
000235C6 <AmiBlitz3.ab3@5634>   MOVE.w #$C201,D1
000235CA <AmiBlitz3.ab3@5635> BRA.w do_AMIGA_toamode
000235CE <AmiBlitz3.ab3@5638>   MOVE.W  #$C202,D1
000235D6 <AmiBlitz3.ab3@5641>   BSET #$0,blitzmode
000235DE <AmiBlitz3.ab3@5642>   BCLR #$7,blitzmode
000235E4 <AmiBlitz3.ab3@5643>   JSR Atokejsr
000235EA <AmiBlitz3.ab3@5644>   TST.b debugmode
000235EE <AmiBlitz3.ab3@5645>    BEQ.w 'done
000235F2 <AmiBlitz3.ab3@5646>   MOVE.w cgoamiga(PC),D1
000235F8 <AmiBlitz3.ab3@5647>   JSR writeword
000235FE <AmiBlitz3.ab3@5648>   JSR getbbase
00023604 <AmiBlitz3.ab3@5649>   JSR writeword
00023608 <AmiBlitz3.ab3@5652> BRA.w debugmode_codelabel
0002360C <AmiBlitz3.ab3@5656>   MOVEM.l D2-D7/A2-A4,-(A7)
00023610 <AmiBlitz3.ab3@5659>   MOVEM.l (A7)+,D2-D7/A2-A4
00023616 <AmiBlitz3.ab3@5663>   JSR evalconst
0002361C <AmiBlitz3.ab3@5664>   CMP.l #$E,D3
00023620 <AmiBlitz3.ab3@5665>    BCC.w interr4
00023624 <AmiBlitz3.ab3@5666>   MOVE.w #$7000,D1
00023626 <AmiBlitz3.ab3@5667>   OR.w D3,D1
0002362C <AmiBlitz3.ab3@5668>   JSR writeword
00023630 <AmiBlitz3.ab3@5669>   MOVE.w #$C101,D1
00023636 <AmiBlitz3.ab3@5670> JMP Atokejsr                                               ;clear the interupt
00023638 <AmiBlitz3.ab3@5673> inerr:       Ds.w 1                                        ;flag - in error trap mode
0002363C <AmiBlitz3.ab3@5674> errjmp:      Ds.l 1                                        ;where err jump is
00023640 <AmiBlitz3.ab3@5675> errcode:     Ds.l 1
00023644 <AmiBlitz3.ab3@5679>   MOVE.W  #$D202,D1
0002364A <AmiBlitz3.ab3@5680> JMP Atokejsr                                               ;BRA.W Atokejsr
0002364E <AmiBlitz3.ab3@5684>   MOVE.w inerr(PC),D1
00023652 <AmiBlitz3.ab3@5685>    BEQ.w errerr3
00023658 <AmiBlitz3.ab3@5686>   CLR.w inerr
0002365E <AmiBlitz3.ab3@5687>   MOVE.w dontwrite_nomemleft,D1
00023662 <AmiBlitz3.ab3@5688>    BNE.w 'skip
00023666 <AmiBlitz3.ab3@5689>   MOVEA.l errjmp(PC),A0
0002366C <AmiBlitz3.ab3@5690>   MOVE.l destpointer,(A0)
00023670 <AmiBlitz3.ab3@5693> BRA.w get1bytemain
00023674 <AmiBlitz3.ab3@5697>   MOVE.w #$D205,D1
0002367A <AmiBlitz3.ab3@5698> JMP Atokejsr
00023680 <AmiBlitz3.ab3@5702>   MOVE.w proceduremode,D1
00023684 <AmiBlitz3.ab3@5703>    BNE.w errerr1
00023688 <AmiBlitz3.ab3@5704>   MOVE.w inerr(PC),D1
0002368C <AmiBlitz3.ab3@5705>    BNE.w errerr2
00023692 <AmiBlitz3.ab3@5706>   LEA inerr,a0
00023694 <AmiBlitz3.ab3@5707>   NOT.w (a0)                                               ;reass
00023698 <AmiBlitz3.ab3@5708>   MOVE.w #$203C,D1                                         ;move.l #x,d0
0002369E <AmiBlitz3.ab3@5709>   JSR writeword
000236A8 <AmiBlitz3.ab3@5710>   MOVE.l destpointer,errcode
000236AC <AmiBlitz3.ab3@5711>   BSR.w addoff
000236B2 <AmiBlitz3.ab3@5712>   JSR writelong
000236B6 <AmiBlitz3.ab3@5713>   MOVE.w #$D201,D1
000236BC <AmiBlitz3.ab3@5714>   JSR Atokejsr
000236C0 <AmiBlitz3.ab3@5715>   MOVE.w #$4EF9,D1                                         ;JMP
000236C6 <AmiBlitz3.ab3@5716>   JSR writeword
000236D0 <AmiBlitz3.ab3@5717>   MOVE.l destpointer,errjmp
000236D4 <AmiBlitz3.ab3@5718>   BSR.w addoff
000236DA <AmiBlitz3.ab3@5719>   JSR writelong
000236E0 <AmiBlitz3.ab3@5720>   MOVE.w dontwrite_nomemleft,D1
000236E4 <AmiBlitz3.ab3@5721>    BNE.w 'skip
000236E8 <AmiBlitz3.ab3@5722>   MOVEA.l errcode(PC),A0
000236EE <AmiBlitz3.ab3@5723>   MOVE.l destpointer,(A0)
000236F0 <AmiBlitz3.ab3@5726> RTS
000236F4 <AmiBlitz3.ab3@5729> intlineat:  Ds.l 1
000236F6 <AmiBlitz3.ab3@5733>   MOVEQ.l #-$01,D1                                        ;type - need new string space
000236FA <AmiBlitz3.ab3@5734>   BSR.w errchx
00023700 <AmiBlitz3.ab3@5735>   MOVE.w D1,intstring
0002370A <AmiBlitz3.ab3@5736>   MOVE.l linenumat,intlineat
00023710 <AmiBlitz3.ab3@5737>   JSR evalconst                                           ;get constant - int level
00023716 <AmiBlitz3.ab3@5738>   CMP.l #$E,D3
0002371A <AmiBlitz3.ab3@5739>    BCC.w interr4
00023720 <AmiBlitz3.ab3@5740>   ST intsused
00023726 <AmiBlitz3.ab3@5741>   MOVE.w D3,intlevel
0002372A <AmiBlitz3.ab3@5742>   MOVE.w #$7000,D1
0002372C <AmiBlitz3.ab3@5743>   OR.w D3,D1                                              
00023732 <AmiBlitz3.ab3@5744>   JSR writeword                                         ;moveq #x,d0
00023736 <AmiBlitz3.ab3@5745>   MOVE.w #$223C,D1                                        ;move.l #x,d1
0002373C <AmiBlitz3.ab3@5746>   JSR writeword
00023740 <AmiBlitz3.ab3@5747>   BSR.w addoff
00023746 <AmiBlitz3.ab3@5748>   MOVE.l destpointer,-(A7)
0002374A <AmiBlitz3.ab3@5749>   BSR.w writelong
0002374E <AmiBlitz3.ab3@5750>   MOVE.w #$C100,D1
00023754 <AmiBlitz3.ab3@5751>   JSR Atokejsr
00023758 <AmiBlitz3.ab3@5752>   MOVE.w #$4EF9,D1                                        ;jmp
0002375E <AmiBlitz3.ab3@5753>   JSR writeword
00023762 <AmiBlitz3.ab3@5754>   BSR.w addoff
0002376C <AmiBlitz3.ab3@5755>   MOVE.l destpointer,intjmpat
00023770 <AmiBlitz3.ab3@5756>   BSR.w writelong
00023772 <AmiBlitz3.ab3@5757>   MOVEA.l (A7)+,A0
00023778 <AmiBlitz3.ab3@5758>   MOVE.w dontwrite_nomemleft,D1
0002377C <AmiBlitz3.ab3@5759>   BNE.w 'dontpoke
00023782 <AmiBlitz3.ab3@5760>   MOVE.l destpointer,(A0)
00023786 <AmiBlitz3.ab3@5763>   MOVE.l intstart0(PC),D1
0002378A <AmiBlitz3.ab3@5764>   BSR.w writelong
00023790 <AmiBlitz3.ab3@5765>   TST.b debugmode
00023794 <AmiBlitz3.ab3@5766>    BEQ.w 'norerr
00023796 <AmiBlitz3.ab3@5770>   MOVEQ.l #$02,D1
0002379A <AmiBlitz3.ab3@5771>   BSR.w writetrap
0002379E <AmiBlitz3.ab3@5772>   BSR.w addoff
000237A8 <AmiBlitz3.ab3@5773>   MOVE.l destpointer,intcleanat
000237AC <AmiBlitz3.ab3@5774>   BSR.w writelong
000237B2 <AmiBlitz3.ab3@5775>   MOVE.w intlevel,D1
000237B6 <AmiBlitz3.ab3@5776>   BSR.w writeword
000237BA <AmiBlitz3.ab3@5777>   MOVE.w #$C30B,D1                                         ;disable stack checks
000237C0 <AmiBlitz3.ab3@5778>   JSR Atokejsr
000237C4 <AmiBlitz3.ab3@5781>   MOVE.w #$FED3,D1
000237C8 <AmiBlitz3.ab3@5782>   BSR.w uselib
000237CC <AmiBlitz3.ab3@5783>   MOVE.w #$C102,D1
000237D2 <AmiBlitz3.ab3@5784>   JSR Atokejsr
000237DA <AmiBlitz3.ab3@5785>   MOVE.w #-1,lasta6
000237E4 <AmiBlitz3.ab3@5786>   MOVE.l linenumat,intline
000237E6 <AmiBlitz3.ab3@5787> RTS
000237E8 <AmiBlitz3.ab3@5791>             Ds.w 1                                         ;??looks like obsolved data??
000237EC <AmiBlitz3.ab3@5793> intdata1:   Ds.l 1                                         ;where in data1 a5 is being kept
000237F0 <AmiBlitz3.ab3@5795> intjmpat:   Ds.l 1
000237F4 <AmiBlitz3.ab3@5796> intline:    Ds.l 1
000237F6 <AmiBlitz3.ab3@5797> intstring:  Ds.w 1                                         ;flag 0 = no setint
000237F8 <AmiBlitz3.ab3@5800> intlevel:   Ds.w 1
000237FC <AmiBlitz3.ab3@5801> intcleanat: Ds.l 1
00023800 <AmiBlitz3.ab3@5802> ret15add:   Ds.l 1
00023802 <AmiBlitz3.ab3@5803> ret15cc:    Ds.w 1
0002380A <AmiBlitz3.ab3@5807>   ADDI.l #$12,$2(A7)
00023812 <AmiBlitz3.ab3@5808>   MOVE.l $2(A7),ret15add
00023818 <AmiBlitz3.ab3@5809>   MOVE.w (A7),ret15cc
00023820 <AmiBlitz3.ab3@5810>   MOVE.l #directdo,$2(A7)
00023822 <AmiBlitz3.ab3@5811> RTE
00023826 <AmiBlitz3.ab3@5820>   MOVE.l ret15add(PC),-(A7)
0002382A <AmiBlitz3.ab3@5821>   MOVE.w ret15cc(PC),-(A7)                                 ;15*4
0002382E <AmiBlitz3.ab3@5822>   MOVEM.l D0-D7/A0-A6,-(A7)
00023838 <AmiBlitz3.ab3@5823>   MOVE.l destbufferend,trap15temp                          ;store high buff addr
00023842 <AmiBlitz3.ab3@5824>   MOVE.l destbufferstart,trap15temp2
0002384C <AmiBlitz3.ab3@5825>   MOVE.l libend,templibend
00023856 <AmiBlitz3.ab3@5826>   MOVE.l data1start,tempdata1start
0002385C <AmiBlitz3.ab3@5827>   CLR.l hunkoffsetcounter
00023862 <AmiBlitz3.ab3@5829>   MOVE.l directbuffer,a0
00023868 <AmiBlitz3.ab3@5833>   MOVE.l a0,destbufferstart
0002386E <AmiBlitz3.ab3@5834>   ADD.l #3900,a0
00023874 <AmiBlitz3.ab3@5835>   MOVE.l a0,destbufferend
0002387A <AmiBlitz3.ab3@5836>   TST.b exdebug
0002387E <AmiBlitz3.ab3@5837>   BEQ 'l1
00023884 <AmiBlitz3.ab3@5838>   MOVE.l a0,libend
0002388A <AmiBlitz3.ab3@5839>   ADD.l #4000,a0
00023890 <AmiBlitz3.ab3@5840>   MOVE.l a0,data1start
0002389A <AmiBlitz3.ab3@5843>   MOVE.l #'dircont,errcont
000238A0 <AmiBlitz3.ab3@5844> 
000238A6 <AmiBlitz3.ab3@5845>   MOVE.l A7,errstack
000238AE <AmiBlitz3.ab3@5846>   MOVE.w #$FFFF,dirmode
000238B2 <AmiBlitz3.ab3@5848>     MOVEA.l ret15add(PC),A1
000238B8 <AmiBlitz3.ab3@5849>     MOVE.w -(A1),blitzmode
000238BA <AmiBlitz3.ab3@5850>     CLR.l -(A1)
000238C0 <AmiBlitz3.ab3@5851>     MOVE.l -(A1),firstglob
000238C6 <AmiBlitz3.ab3@5852>     MOVE.l -(A1),firstlocal
000238CC <AmiBlitz3.ab3@5854>   CLR.w proceduremode
000238D2 <AmiBlitz3.ab3@5855>   MOVE.l firstglob,D0
000238D8 <AmiBlitz3.ab3@5856>   OR.l firstlocal,D0
000238DC <AmiBlitz3.ab3@5857>   BEQ.b 'skip
000238E2 <AmiBlitz3.ab3@5858>   NOT.w proceduremode
000238E4 <AmiBlitz3.ab3@5861>   MOVEA.l -(A1),A0                                         ;address of string
000238E6 <AmiBlitz3.ab3@5865>   MOVE.l A0,-(A7)
00023924 <AmiBlitz3.ab3@5868>   !ComData_GetL{comFunc_DebugTrap,A1}
00023926 <AmiBlitz3.ab3@5869>   JSR (A1)                                                 ;tokenise line.....
00023928 <AmiBlitz3.ab3@5871>   MOVEA.l (A7)+,A5
00023932 <AmiBlitz3.ab3@5872>   MOVE.l directbuffer,destpointer
00023938 <AmiBlitz3.ab3@5873>   TST.b exdebug
0002393C <AmiBlitz3.ab3@5874>   BEQ 'noexdebug
0002393E <AmiBlitz3.ab3@5875>   MOVE.l a5,a0
00023944 <AmiBlitz3.ab3@5876>   MOVE.l #200,d0
0002394A <AmiBlitz3.ab3@5879>     MOVE.b 0(a0,d0.l),8(a0,d0.l)
0002394E <AmiBlitz3.ab3@5880>   DBF d0,'l2
00023954 <AmiBlitz3.ab3@5885>   MOVE.l destpointer,a0
00023958 <AmiBlitz3.ab3@5886>   MOVE.w #$207c,(a0)+
0002395A <AmiBlitz3.ab3@5887>   MOVE.l a5,d0
00023960 <AmiBlitz3.ab3@5888>   ADD.l #$206,d0                                           ;constant from debuglib
00023962 <AmiBlitz3.ab3@5889>   MOVE.l d0,(a0)+
00023968 <AmiBlitz3.ab3@5890>   MOVE.l a0,destpointer
0002396A <AmiBlitz3.ab3@5891>   MOVE.l a5,a0
0002396E <AmiBlitz3.ab3@5892>   MOVE.w #$8039,(a0)+                                      ;TokeJsr 164 (inputoutputlib) LSL 7+4
00023974 <AmiBlitz3.ab3@5893>   MOVE.l #"$520",(a0)+
00023978 <AmiBlitz3.ab3@5894>   MOVE.w #"4:",(a0)+
0002397E <AmiBlitz3.ab3@5897>   CLR.w dontwrite_nomemleft
00023986 <AmiBlitz3.ab3@5898>   MOVE.w #$FFFF,lasta6
0002398A <AmiBlitz3.ab3@5899>   BSR.w compile_line                                        ;.....compile it
00023990 <AmiBlitz3.ab3@5900>   TST.b exdebug
00023994 <AmiBlitz3.ab3@5901>   BEQ 'noexdebug2
0002399A <AmiBlitz3.ab3@5902>   JSR fixjsrs
000239A0 <AmiBlitz3.ab3@5905>   CLR.w proceduremode
000239A4 <AmiBlitz3.ab3@5906>   BSR.w errchx
000239A8 <AmiBlitz3.ab3@5907>   MOVE.w #$4EF9,D1
000239AC <AmiBlitz3.ab3@5908>   BSR.w writeword                                          ;JMP
000239B0 <AmiBlitz3.ab3@5909>   MOVE.l ret15add(PC),D1
000239B4 <AmiBlitz3.ab3@5910>   BSR.w writelong                                          ;jmp to done
000239BA <AmiBlitz3.ab3@5911>   MOVE.w dontwrite_nomemleft,D0
000239BE <AmiBlitz3.ab3@5912>    BNE.w nodirmem
000239C6 <AmiBlitz3.ab3@5913>   MOVE.l directbuffer,$3E(A7)                              ;install code address
000239CC <AmiBlitz3.ab3@5916>   CLR.w dirmode
000239D2 <AmiBlitz3.ab3@5917>   MOVE.w ret15cc(PC),$3C(A7)
000239DC <AmiBlitz3.ab3@5918>   MOVE.l trap15temp,destbufferend
000239E6 <AmiBlitz3.ab3@5919>   MOVE.l trap15temp2,destbufferstart
000239F0 <AmiBlitz3.ab3@5920>   MOVE.l tempdata1start,data1start
000239FA <AmiBlitz3.ab3@5921>   MOVE.l templibend,libend
000239FE <AmiBlitz3.ab3@5922>   MOVEM.l (A7)+,D0-D7/A0-A6
00023A02 <AmiBlitz3.ab3@5923>   BSR.w Aclearcache                                        ;selden used
00023A04 <AmiBlitz3.ab3@5924> RTR
00023A08 <AmiBlitz3.ab3@5927>   MOVEA.l ret15add(PC),A0
00023A0A <AmiBlitz3.ab3@5928>   SUBQ.w #2,A0
00023A0C <AmiBlitz3.ab3@5929>   MOVE.l D0,-(A0)
00023A10 <AmiBlitz3.ab3@5930> BRA.w 'direxit
00023A14 <AmiBlitz3.ab3@5934>   MOVE.w $6(A3),D1
00023A18 <AmiBlitz3.ab3@5935>   BSR.w uselib                                             ;get lib for base address
00023A1C <AmiBlitz3.ab3@5936>   MOVE.w $A(A1),-(A7)                                      ;libbase reg
00023A1E <AmiBlitz3.ab3@5937>   ADDQ.w #8,A3
00023A20 <AmiBlitz3.ab3@5938>   MOVE.w (A3)+,-(A7)                                       ;get offset for lib
00023A22 <AmiBlitz3.ab3@5939>   MOVE.l A3,-(A7)
00023A24 <AmiBlitz3.ab3@5943>   MOVEQ.l #$00,D3
00023A2A <AmiBlitz3.ab3@5945>   JSR checka4a5
00023A2C <AmiBlitz3.ab3@5949>   MOVE.b (A3)+,D1
00023A30 <AmiBlitz3.ab3@5950>    BMI.w 'done
00023A32 <AmiBlitz3.ab3@5951>   MOVEQ.l #$03,D2
00023A34 <AmiBlitz3.ab3@5952>   ADDQ.w #1,D3
00023A38 <AmiBlitz3.ab3@5953>   MOVEM.l D3/A3,-(A7)
00023A3E <AmiBlitz3.ab3@5955>   MOVE.b funcparloop,-(a7)
00023A46 <AmiBlitz3.ab3@5956>   MOVE.b #0,funcparloop
00023A4C <AmiBlitz3.ab3@5957>   MOVE.l leftsidetype,-(a7)
00023A52 <AmiBlitz3.ab3@5958>   MOVE.l rightsidetype,-(a7)
00023A58 <AmiBlitz3.ab3@5959>   MOVE.w leftsideflagmask,-(a7)
00023A5E <AmiBlitz3.ab3@5960>   MOVE.w rightsideflagmask,-(a7)
00023A64 <AmiBlitz3.ab3@5961>   CLR.l leftsidetype
00023A6A <AmiBlitz3.ab3@5962>   CLR.l rightsidetype
00023A70 <AmiBlitz3.ab3@5963>   CLR.w leftsideflagmask
00023A76 <AmiBlitz3.ab3@5964>   CLR.w rightsideflagmask
00023A7C <AmiBlitz3.ab3@5965>   MOVE.b blitzparloop,-(a7)
00023A84 <AmiBlitz3.ab3@5966>   MOVE.b #1,blitzparloop                                 ;write the parameter to stack
00023A8A <AmiBlitz3.ab3@5968>   JSR peval
00023A90 <AmiBlitz3.ab3@5970>   MOVE.b (a7)+,blitzparloop
00023A96 <AmiBlitz3.ab3@5971>   MOVE.w (a7)+,rightsideflagmask
00023A9C <AmiBlitz3.ab3@5972>   MOVE.w (a7)+,leftsideflagmask
00023AA2 <AmiBlitz3.ab3@5973>   MOVE.l (a7)+,rightsidetype
00023AA8 <AmiBlitz3.ab3@5974>   MOVE.l (a7)+,leftsidetype
00023AAE <AmiBlitz3.ab3@5975>   MOVE.b (a7)+,funcparloop
00023AB2 <AmiBlitz3.ab3@5976>   MOVEM.l (A7)+,D3/A3
00023AB6 <AmiBlitz3.ab3@5978>   CMP.w #$2C,D0     ; ','
00023ABA <AmiBlitz3.ab3@5979>    BEQ.w 'loop
00023ABC <AmiBlitz3.ab3@5980>   TST.b (A3)
00023AC0 <AmiBlitz3.ab3@5981>    BPL.w syntaxerr
00023AC2 <AmiBlitz3.ab3@5984>   MOVEA.l (A7)+,A3
00023AC4 <AmiBlitz3.ab3@5985>   SUBQ.w #1,D3
00023AC8 <AmiBlitz3.ab3@5986>    BPL.w 'toend
00023ACC <AmiBlitz3.ab3@5987>    BSR.w get1bytemain                                      ;no pars - get :
00023AD0 <AmiBlitz3.ab3@5988>  BRA.w 'nopars
00023AD2 <AmiBlitz3.ab3@5991>   TST.b (A3)+                                              ;go to end of params
00023AD6 <AmiBlitz3.ab3@5992>    BPL.w 'toend
00023AD8 <AmiBlitz3.ab3@5993>   SUBQ.w #1,A3
00023ADA <AmiBlitz3.ab3@5996>    MOVEQ.l #$00,D1
00023ADC <AmiBlitz3.ab3@5997>    MOVE.b -(A3),D1
00023AE0 <AmiBlitz3.ab3@5998>    BTST #$4,D1
00023AE4 <AmiBlitz3.ab3@5999>     BNE.w 'addreg
00023AE6 <AmiBlitz3.ab3@6000>    LSL.w #8,D1
00023AE8 <AmiBlitz3.ab3@6001>    LSL.w #1,D1
00023AEC <AmiBlitz3.ab3@6002>    ORI.w #$201F,D1
00023AF0 <AmiBlitz3.ab3@6003>  BRA.w 'gotit
00023AF4 <AmiBlitz3.ab3@6006>    ANDI.w #$7,D1
00023AF6 <AmiBlitz3.ab3@6007>    LSL.w #8,D1
00023AF8 <AmiBlitz3.ab3@6008>    LSL.w #1,D1
00023AFC <AmiBlitz3.ab3@6009>    ORI.w #$205F,D1
00023B00 <AmiBlitz3.ab3@6012>     BSR.w writeword
00023B04 <AmiBlitz3.ab3@6013>   DBF D3,'loop2
00023B0A <AmiBlitz3.ab3@6016>   MOVE.w (A7)+,libjsr+2
00023B10 <AmiBlitz3.ab3@6017>   MOVE.w (A7)+,libbase+2
00023B16 <AmiBlitz3.ab3@6018>   MOVE.l libbase,D1
00023B1A <AmiBlitz3.ab3@6019>    BSR.w writelong
00023B20 <AmiBlitz3.ab3@6020>   MOVE.l libjsr,D1
00023B26 <AmiBlitz3.ab3@6021>   JSR writelong
00023B2C <AmiBlitz3.ab3@6023>   JSR restorea4a5
00023B2E <AmiBlitz3.ab3@6025> RTS
00023B34 <AmiBlitz3.ab3@6032>   MOVE.l data1,D4
00023B3A <AmiBlitz3.ab3@6033>   SUB.l data1start,D4
00023B40 <AmiBlitz3.ab3@6034>   ADD.l #10000,d4
00023B46 <AmiBlitz3.ab3@6035>   MOVE.l libend,D3
00023B4C <AmiBlitz3.ab3@6036>   SUB.l destbufferend,D3
00023B52 <AmiBlitz3.ab3@6037>   ADD.l #40000,d3
00023B58 <AmiBlitz3.ab3@6038>   MOVE.l bigpc,D2
00023B5E <AmiBlitz3.ab3@6039>   SUB.l destbufferstart,D2
00023B64 <AmiBlitz3.ab3@6040>   ADD.l #20000,d2
00023B6A <AmiBlitz3.ab3@6041>   MOVE.l databuffer,D5
00023B70 <AmiBlitz3.ab3@6042>   ADD.l #10000,D5
00023B74 <AmiBlitz3.ab3@6043>  BRA newallox
00023B7A <AmiBlitz3.ab3@6046>   MOVE.l objectbuffer,D2       ;??Looks like unused code??
00023B7C <AmiBlitz3.ab3@6047>   LSR.l #1,D2
00023B82 <AmiBlitz3.ab3@6048>   ADD.l objectbuffer,D2
00023B88 <AmiBlitz3.ab3@6050>   MOVE.l libsbuffer,D3
00023B8A <AmiBlitz3.ab3@6051>   LSR.l #1,D3
00023B90 <AmiBlitz3.ab3@6052>   ADD.l libsbuffer,D3
00023B96 <AmiBlitz3.ab3@6054>   MOVE.l systembuffer,D4
00023B98 <AmiBlitz3.ab3@6055>   LSR.l #1,D4
00023B9E <AmiBlitz3.ab3@6056>   ADD.l systembuffer,D4
00023BA4 <AmiBlitz3.ab3@6058>   MOVE.l databuffer,D5
00023BA6 <AmiBlitz3.ab3@6059>   LSR.l #1,D5
00023BAC <AmiBlitz3.ab3@6060>   ADD.l databuffer,D5
00023BB0 <AmiBlitz3.ab3@6062> BRA.w newallox
00023BB6 <AmiBlitz3.ab3@6066>   MOVE.l bigpc,D2
00023BBC <AmiBlitz3.ab3@6067>   SUB.l destbufferstart,D2                                     ;size of object buffer
00023BC2 <AmiBlitz3.ab3@6068>   SUB.l savefuncspace,d2
00023BC8 <AmiBlitz3.ab3@6070>   TST.w debugversion
00023BCC <AmiBlitz3.ab3@6071>    BNE.b 'skip
00023BD2 <AmiBlitz3.ab3@6072>   ADDI.l #$800,D2
00023BD8 <AmiBlitz3.ab3@6075>   MOVE.l libend,D3
00023BDE <AmiBlitz3.ab3@6076>   SUB.l destbufferend,D3
00023BE4 <AmiBlitz3.ab3@6080>   MOVE.l data1,D4
00023BEA <AmiBlitz3.ab3@6081>   SUB.l data1start,D4
00023BF0 <AmiBlitz3.ab3@6085>   MOVE.l data2,D5
00023BF6 <AmiBlitz3.ab3@6086>   SUB.l data2at,D5
00023BFC <AmiBlitz3.ab3@6089>   CLR.l morememadd
00023C00 <AmiBlitz3.ab3@6093>   BSR.w makeallox
00023C04 <AmiBlitz3.ab3@6094>   BNE.w 'done
00023C08 <AmiBlitz3.ab3@6095>  BRA.w init_buffers
00023C0A <AmiBlitz3.ab3@6098> RTS
00023C10 <AmiBlitz3.ab3@6102>   MOVEA.l _execbase,A6
00023C16 <AmiBlitz3.ab3@6103>   MOVE.l objlen,D0
00023C1A <AmiBlitz3.ab3@6104>   BEQ.w 'skip
00023C20 <AmiBlitz3.ab3@6105>   CLR.l objlen
00023C26 <AmiBlitz3.ab3@6106>   MOVEA.l destbufferstart,A1
00023C2C <AmiBlitz3.ab3@6108>   MOVE.l mempool,a0
00023C30 <AmiBlitz3.ab3@6109> JMP _FreeVec(A6)
00023C32 <AmiBlitz3.ab3@6114> RTS
00023C38 <AmiBlitz3.ab3@6118>   MOVE.l objectbuffer,D2
00023C3E <AmiBlitz3.ab3@6119>   MOVE.l libsbuffer,D3
00023C44 <AmiBlitz3.ab3@6120>   MOVE.l systembuffer,D4
00023C4A <AmiBlitz3.ab3@6121>   MOVE.l databuffer,D5
00023C52 <AmiBlitz3.ab3@6126>   MOVE.w #$FFFF,anyerrs      ; was -1
00023C56 <AmiBlitz3.ab3@6127>   BSR.w freeallox
00023C58 <AmiBlitz3.ab3@6131>   ADDQ.l #1,D2
00023C5C <AmiBlitz3.ab3@6132>   BCLR #$0,D2
00023C5E <AmiBlitz3.ab3@6133>   ADDQ.l #1,D3
00023C62 <AmiBlitz3.ab3@6134>   BCLR #$0,D3
00023C64 <AmiBlitz3.ab3@6135>   ADDQ.l #1,D4
00023C68 <AmiBlitz3.ab3@6136>   BCLR #$0,D4
00023C6A <AmiBlitz3.ab3@6138>   TST.l d5        ; ??? make no sence ??
00023C6E <AmiBlitz3.ab3@6139>   BNE 'l1
00023C70 <AmiBlitz3.ab3@6143>   ADDQ.l #1,D5
00023C74 <AmiBlitz3.ab3@6144>   BCLR #$0,D5
00023C76 <AmiBlitz3.ab3@6146>   MOVE.l D2,D0
00023C78 <AmiBlitz3.ab3@6147>   ADD.l D3,D0
00023C7A <AmiBlitz3.ab3@6148>   ADD.l D4,D0
00023C7C <AmiBlitz3.ab3@6149>   ADD.l D5,D0
00023C82 <AmiBlitz3.ab3@6151>   ADD.l #moremem,d0
00023C84 <AmiBlitz3.ab3@6153>   MOVE.l D0,D6
00023C8A <AmiBlitz3.ab3@6154>   MOVE.l #MemfPublic_MemfClear,D1
00023C90 <AmiBlitz3.ab3@6156>   MOVE.l mempool,a0
00023C96 <AmiBlitz3.ab3@6157>   MOVEA.l _execbase,A6
00023C9A <AmiBlitz3.ab3@6158>   JSR _AllocVec(a6)                                        ;alloc mem for objectbuffer
00023C9C <AmiBlitz3.ab3@6161>   TST.l D0
00023CA0 <AmiBlitz3.ab3@6162>   BEQ.w 'done
00023CA6 <AmiBlitz3.ab3@6163>   MOVE.l D6,objlen
00023CAC <AmiBlitz3.ab3@6164>   MOVE.l D2,objectbuffer
00023CB2 <AmiBlitz3.ab3@6165>   MOVE.l D3,libsbuffer
00023CB8 <AmiBlitz3.ab3@6166>   MOVE.l D4,systembuffer
00023CBE <AmiBlitz3.ab3@6167>   MOVE.l D5,databuffer
00023CC4 <AmiBlitz3.ab3@6168>   MOVE.l D0,destbufferstart
00023CF8 <AmiBlitz3.ab3@6172>   !ComData_SetL{comPtr_DestBufferStart,D0}
00023CFA <AmiBlitz3.ab3@6174>   ADD.l D2,D0
00023D00 <AmiBlitz3.ab3@6175>   MOVE.l D0,destbufferend
00023D02 <AmiBlitz3.ab3@6176>   ADD.l D3,D0
00023D08 <AmiBlitz3.ab3@6177>   MOVE.l D0,data1start
00023D0A <AmiBlitz3.ab3@6178>   ADD.l D4,D0
00023D10 <AmiBlitz3.ab3@6179>   MOVE.l D0,data2at
00023D12 <AmiBlitz3.ab3@6180>   ADD.l D5,D0
00023D18 <AmiBlitz3.ab3@6181>   MOVE.l D0,allat
00023D1A <AmiBlitz3.ab3@6184> RTS
00023D1E <AmiBlitz3.ab3@6188>   Dc.b $00,$00,$00,$01                                     ;         1
00023D22 <AmiBlitz3.ab3@6189>   Dc.b $00,$00,$00,$0A                                     ;        10
00023D26 <AmiBlitz3.ab3@6190>   Dc.b $00,$00,$00,$64                                     ;       100
00023D2A <AmiBlitz3.ab3@6191>   Dc.b $00,$00,$03,$E8                                     ;      1000
00023D2E <AmiBlitz3.ab3@6192>   Dc.b $00,$00,$27,$10                                     ;     10000
00023D32 <AmiBlitz3.ab3@6193>   Dc.b $00,$01,$86,$A0                                     ;    100000
00023D36 <AmiBlitz3.ab3@6194>   Dc.b $00,$0F,$42,$40                                     ;   1000000
00023D3A <AmiBlitz3.ab3@6195>   Dc.b $00,$98,$96,$80                                     ;  10000000
00023D3E <AmiBlitz3.ab3@6196>   Dc.b $05,$F5,$E1,$00                                     ; 100000000
00023D42 <AmiBlitz3.ab3@6197>   Dc.b $3B,$9A,$CA,$00                                     ;1000000000
00023D44 <AmiBlitz3.ab3@6201>   MOVEQ.l #$00,D1                                          ;no zero printed
00023D46 <AmiBlitz3.ab3@6202>   MOVEQ.l #$24,D3                                          ; "$"
00023D48 <AmiBlitz3.ab3@6205>   MOVEQ.l #$30,D4                                          ; "0"
00023D4C <AmiBlitz3.ab3@6208>     CMP.l divisors(PC,D3.W),D2
00023D50 <AmiBlitz3.ab3@6209>     BCS.w 'skip
00023D54 <AmiBlitz3.ab3@6210>     SUB.l divisors(PC,D3.W),D2
00023D56 <AmiBlitz3.ab3@6211>     ADDQ.w #1,D4
00023D5A <AmiBlitz3.ab3@6212>  BRA.w 'loop2
00023D5E <AmiBlitz3.ab3@6215>   CMP.b #"0",D4
00023D62 <AmiBlitz3.ab3@6216>   BNE.w 'doit
00023D64 <AmiBlitz3.ab3@6217>   TST.w D1
00023D68 <AmiBlitz3.ab3@6218>   BEQ.w 'skip2
00023D6A <AmiBlitz3.ab3@6221>   MOVE.b D4,(A0)+
00023D6C <AmiBlitz3.ab3@6222>   MOVEQ.l #$01,D1
00023D6E <AmiBlitz3.ab3@6225>   SUBQ.w #4,D3
00023D72 <AmiBlitz3.ab3@6226>   BPL.w 'loop
00023D74 <AmiBlitz3.ab3@6227>   TST.w D1
00023D78 <AmiBlitz3.ab3@6228>   BNE.w 'skip3
00023D7C <AmiBlitz3.ab3@6229>   MOVE.b #"0",(A0)+
00023D7E <AmiBlitz3.ab3@6232>   CLR.b (A0)
00023D80 <AmiBlitz3.ab3@6233> RTS
00023DA0 <AmiBlitz3.ab3@6236> str_residentrequester:  Dc.b "Name of Resident File to Create",0 : Even        ;restext org source
00023E60 <AmiBlitz3.ab3@6237> str_residentpath:       Ds.l 48                                                ;respath org source
00023F20 <AmiBlitz3.ab3@6238> str_residentname:       Ds.l 48                                                ;resname org source
00023F26 <AmiBlitz3.ab3@6244>   MOVE.l macrobase,D0
00023F2A <AmiBlitz3.ab3@6245>    BNE.w 'skip
00023F30 <AmiBlitz3.ab3@6246>   MOVE.l newtype_string,D0
00023F34 <AmiBlitz3.ab3@6247>    BNE.w 'skip
00023F3A <AmiBlitz3.ab3@6248>   MOVEA.l labelbase,A2
00023F3E <AmiBlitz3.ab3@6251>     CMPA.w #$0,A2
00023F42 <AmiBlitz3.ab3@6252>      BEQ.w 'err
00023F4A <AmiBlitz3.ab3@6253>     CMPI.l #$1,$4(A2)
00023F4E <AmiBlitz3.ab3@6254>      BEQ.w 'skip
00023F50 <AmiBlitz3.ab3@6255>     MOVEA.l (A2),A2
00023F54 <AmiBlitz3.ab3@6256>  BRA.w 'loop
00023F7E <AmiBlitz3.ab3@6260>   !basic
00023FE0 <AmiBlitz3.ab3@6261> 
00023FFE <AmiBlitz3.ab3@6262>   !asm
00024000 <AmiBlitz3.ab3@6264>  RTS
0002403E <AmiBlitz3.ab3@6269>   !ComData_GetL{comFunc_ASLFileRequest,A3}
00024044 <AmiBlitz3.ab3@6270>   LEA str_residentrequester,A2
0002404A <AmiBlitz3.ab3@6271>   LEA str_residentpath,A0
00024050 <AmiBlitz3.ab3@6272>   LEA str_residentname,A1
0002407A <AmiBlitz3.ab3@6274>   !basic
000240B2 <AmiBlitz3.ab3@6275>     Poke$ ?str_residentpath,my_residentsdir$
000240DE <AmiBlitz3.ab3@6276>     Poke$ ?str_residentname,".res"
000240FC <AmiBlitz3.ab3@6277>   !asm
000240FE <AmiBlitz3.ab3@6279>   JSR (A3)                                                 ;open ped filerequest
00024102 <AmiBlitz3.ab3@6280>   BEQ.w 'err
00024104 <AmiBlitz3.ab3@6284>   MOVE.l D0,D1
0002410A <AmiBlitz3.ab3@6285>   MOVE.l #HUNK_RELOC_8__MODE_NEWFILE,D2
0002410E <AmiBlitz3.ab3@6286>   MOVEA.l _dosbase(PC),A6
00024112 <AmiBlitz3.ab3@6287>   JSR _Open(A6)
00024114 <AmiBlitz3.ab3@6288>   MOVE.l D0,D7               ;handle                                ;handle
00024118 <AmiBlitz3.ab3@6289>   BEQ.w 'err
0002411C <AmiBlitz3.ab3@6291>   MOVEM.l d2-d7/a0-a6,-(a7)
00024122 <AmiBlitz3.ab3@6292>   LEA devo,a0
00024128 <AmiBlitz3.ab3@6293>   LEA ptr_parameterstore,a1
0002412A <AmiBlitz3.ab3@6296>     MOVE.b (a0)+,(a1)+
0002412E <AmiBlitz3.ab3@6297>   BNE 'l1
00024130 <AmiBlitz3.ab3@6298>   MOVEQ #13,d2
00024136 <AmiBlitz3.ab3@6299>   JSR findlabel2
0002413A <AmiBlitz3.ab3@6300>   BNE 'd
0002413E <AmiBlitz3.ab3@6301>   TST.l 8(a2)
00024142 <AmiBlitz3.ab3@6302>   BEQ 'd2
0002416C <AmiBlitz3.ab3@6303>   !basic
000241CE <AmiBlitz3.ab3@6304>     error{!TRANS{"Cannot create Resident with develope debug 1"}}
000241EC <AmiBlitz3.ab3@6305>   !asm
000241F0 <AmiBlitz3.ab3@6306>   MOVEM.l (a7)+,d2-d7/a0-a6
000241F4 <AmiBlitz3.ab3@6307>   MOVEA.l _dosbase(PC),A6
000241F6 <AmiBlitz3.ab3@6308>   MOVE.l d7,d1
000241FA <AmiBlitz3.ab3@6309>   JSR _Close(a6)
000241FE <AmiBlitz3.ab3@6310>  BRA 'err
00024202 <AmiBlitz3.ab3@6314>   MOVEM.l (a7)+,d2-d7/a0-a6
00024206 <AmiBlitz3.ab3@6316>   BSR.w call_setpointerbusy
0002420A <AmiBlitz3.ab3@6318>   BSR.w killoffs
0002420C <AmiBlitz3.ab3@6320>   MOVE.l D7,D1
00024212 <AmiBlitz3.ab3@6321>   MOVE.l #tsthead,D2        ;header                               ;header
00024214 <AmiBlitz3.ab3@6322>   MOVEQ.l #$20,D3
00024218 <AmiBlitz3.ab3@6323>   MOVEA.l _dosbase(PC),A6
0002421C <AmiBlitz3.ab3@6324>   JSR _Write(A6)
0002421E <AmiBlitz3.ab3@6326>   MOVEQ.l #$00,D6           ;offset from start of file!                               ;offset from start of file!
00024222 <AmiBlitz3.ab3@6327>   BSR.w restypes
00024226 <AmiBlitz3.ab3@6328>   BSR.w resmacs
0002422A <AmiBlitz3.ab3@6329>   BSR.w resconsts
0002422C <AmiBlitz3.ab3@6331>   MOVE.l D6,D3
0002422E <AmiBlitz3.ab3@6332>   ADDQ.l #3,D3
00024234 <AmiBlitz3.ab3@6333>   ANDI.l #$FFFFFFFC,D3      ;long word align                               ;long word align
00024236 <AmiBlitz3.ab3@6334>   MOVE.l D3,-(A7)
00024238 <AmiBlitz3.ab3@6335>   SUB.l D6,D3
0002423C <AmiBlitz3.ab3@6336>   BEQ.w 'noalign
00024242 <AmiBlitz3.ab3@6337>   MOVE.l #writelist,D2      ; was #hello,
00024244 <AmiBlitz3.ab3@6338>   MOVE.l D7,D1
0002424A <AmiBlitz3.ab3@6339>   MOVEA.l _dosbase,A6
0002424E <AmiBlitz3.ab3@6340>   JSR _Write(A6)
00024258 <AmiBlitz3.ab3@6343>    MOVE.l hunkoffsetcounter,tstsize3
0002425C <AmiBlitz3.ab3@6344>    BEQ.w 'skip2a
0002425E <AmiBlitz3.ab3@6345>   MOVE.l D7,D1
00024264 <AmiBlitz3.ab3@6346>   MOVE.l #tstend,D2
00024266 <AmiBlitz3.ab3@6347>   MOVEQ.l #$0C,D3
0002426C <AmiBlitz3.ab3@6348>   MOVEA.l _dosbase,A6
00024270 <AmiBlitz3.ab3@6349>    JSR _Write(A6)
00024276 <AmiBlitz3.ab3@6353>   MOVEA.l hunkoffsetbase,A2
0002427A <AmiBlitz3.ab3@6356>   CMPA.w #$0,A2
0002427E <AmiBlitz3.ab3@6357>    BEQ.w 'skip2
00024282 <AmiBlitz3.ab3@6358>   LEA $4(A2),A1
00024284 <AmiBlitz3.ab3@6359>   MOVE.l D7,D1
00024286 <AmiBlitz3.ab3@6360>   MOVE.l A1,D2
00024288 <AmiBlitz3.ab3@6361>   MOVEQ.l #$04,D3
0002428E <AmiBlitz3.ab3@6362>   MOVEA.l _dosbase,A6
00024292 <AmiBlitz3.ab3@6363>    JSR _Write(A6)
00024294 <AmiBlitz3.ab3@6364>   MOVEA.l (A2),A2
00024298 <AmiBlitz3.ab3@6365>  BRA.w 'oloop
0002429A <AmiBlitz3.ab3@6368>   MOVE.l D7,D1
000242A0 <AmiBlitz3.ab3@6369>   MOVE.l #zero,D2
000242A2 <AmiBlitz3.ab3@6370>   MOVEQ.l #$04,D3
000242A8 <AmiBlitz3.ab3@6371>   MOVEA.l _dosbase,A6
000242AC <AmiBlitz3.ab3@6372>   JSR _Write(A6)
000242AE <AmiBlitz3.ab3@6375>   MOVE.l D7,D1
000242B4 <AmiBlitz3.ab3@6376>   MOVE.l #tstdone,D2
000242B6 <AmiBlitz3.ab3@6377>   MOVEQ.l #$04,D3
000242BC <AmiBlitz3.ab3@6378>   MOVEA.l _dosbase,A6
000242C0 <AmiBlitz3.ab3@6379>    JSR _Write(A6)
000242C2 <AmiBlitz3.ab3@6380>   MOVE.l (A7)+,D0
000242C4 <AmiBlitz3.ab3@6381>   LSR.l #2,D0
000242CA <AmiBlitz3.ab3@6382>   MOVE.l D0,temp1
000242CC <AmiBlitz3.ab3@6384>   MOVE.l D7,D1
000242CE <AmiBlitz3.ab3@6385>   MOVEQ.l #$14,D2
000242D0 <AmiBlitz3.ab3@6386>   MOVEQ.l #-$01,D3
000242D4 <AmiBlitz3.ab3@6387>   JSR _Seek(A6)
000242D6 <AmiBlitz3.ab3@6388>   MOVE.l D7,D1
000242DC <AmiBlitz3.ab3@6389>   MOVE.l #temp1,D2
000242DE <AmiBlitz3.ab3@6390>   MOVEQ.l #$04,D3
000242E2 <AmiBlitz3.ab3@6391>    JSR _Write(A6)
000242E4 <AmiBlitz3.ab3@6392>   MOVE.l D7,D1
000242E6 <AmiBlitz3.ab3@6393>   MOVEQ.l #$1C,D2
000242E8 <AmiBlitz3.ab3@6394>   MOVEQ.l #-$01,D3
000242EC <AmiBlitz3.ab3@6395>    JSR _Seek(A6)
000242EE <AmiBlitz3.ab3@6396>   MOVE.l D7,D1
000242F4 <AmiBlitz3.ab3@6397>   MOVE.l #temp1,D2
000242F6 <AmiBlitz3.ab3@6398>   MOVEQ.l #$04,D3
000242FA <AmiBlitz3.ab3@6399>    JSR _Write(A6)
000242FC <AmiBlitz3.ab3@6401>   MOVE.l D7,D1
00024300 <AmiBlitz3.ab3@6402>    JSR _Close(A6)
00024304 <AmiBlitz3.ab3@6403> BRA.w call_setpointernormal
00024306 <AmiBlitz3.ab3@6409>   ADDQ.w #5,D1
00024308 <AmiBlitz3.ab3@6410>   ADDQ.b #8,D0
0002430C <AmiBlitz3.ab3@6414>     CMPA.w #$0,A2
00024310 <AmiBlitz3.ab3@6415>     BEQ.w 'done
00024314 <AmiBlitz3.ab3@6416>      BSR.w writeitem
00024316 <AmiBlitz3.ab3@6417>     MOVEA.l (A2),A2
0002431A <AmiBlitz3.ab3@6418>  BRA.w 'loop
0002431C <AmiBlitz3.ab3@6421> RTS
0002431E <AmiBlitz3.ab3@6425>   MOVEQ.l #$00,D3
00024322 <AmiBlitz3.ab3@6426>   MOVE.b $0(A2,D5.W),D3
00024324 <AmiBlitz3.ab3@6427>   ADDQ.w #1,D3
00024328 <AmiBlitz3.ab3@6428>   BCLR #$0,D3                                              ;word align
0002432A <AmiBlitz3.ab3@6429>   MOVE.l (A2),-(A7)
0002432E <AmiBlitz3.ab3@6430>    BEQ.w 'skip
00024332 <AmiBlitz3.ab3@6431>    BSR.w 'resoff
00024334 <AmiBlitz3.ab3@6432>   ADD.l D3,D6
00024336 <AmiBlitz3.ab3@6433>   MOVE.l D6,(A2)
00024338 <AmiBlitz3.ab3@6434>   SUB.l D3,D6
0002433A <AmiBlitz3.ab3@6437>    ADD.l D3,D6
0002433C <AmiBlitz3.ab3@6438>   MOVE.l A2,D2
0002433E <AmiBlitz3.ab3@6439>   MOVE.l D7,D1
00024344 <AmiBlitz3.ab3@6440>   MOVEA.l _dosbase,A6
00024348 <AmiBlitz3.ab3@6441>    JSR _Write(A6)
0002434A <AmiBlitz3.ab3@6442>   MOVE.l (A7)+,(A2)
0002434C <AmiBlitz3.ab3@6443>  RTS
0002434E <AmiBlitz3.ab3@6446>   MOVE.l D6,D2
00024352 <AmiBlitz3.ab3@6447> BRA.w addhunkoffset
00024356 <AmiBlitz3.ab3@6454>     CMPA.w #$0,A2
0002435A <AmiBlitz3.ab3@6455>      BEQ.w 'done
00024360 <AmiBlitz3.ab3@6456>     MOVEA.l newtypebase,A1
00024362 <AmiBlitz3.ab3@6457>     MOVEQ.l #$00,D1
00024366 <AmiBlitz3.ab3@6460>       CMPA.w #$0,A1
0002436A <AmiBlitz3.ab3@6461>       BEQ.w 'found
0002436E <AmiBlitz3.ab3@6462>       CMPA.l $A(A2),A1
00024372 <AmiBlitz3.ab3@6463>        BEQ.w 'found
00024374 <AmiBlitz3.ab3@6464>       ADDQ.w #1,D1
00024376 <AmiBlitz3.ab3@6465>       MOVEA.l (A1),A1
0002437A <AmiBlitz3.ab3@6466>  BRA.w 'loop2
0002437E <AmiBlitz3.ab3@6469>     MOVE.w $A(A2),-(A7)
00024382 <AmiBlitz3.ab3@6470>     MOVE.w D1,$A(A2)
00024386 <AmiBlitz3.ab3@6471>      BSR.w writeitem
0002438A <AmiBlitz3.ab3@6472>     MOVE.w (A7)+,$A(A2)
0002438C <AmiBlitz3.ab3@6473>     MOVEA.l (A2),A2
00024390 <AmiBlitz3.ab3@6474>  BRA.w 'loop
00024392 <AmiBlitz3.ab3@6477> RTS
00024394 <AmiBlitz3.ab3@6481>   MOVEQ.l #$00,D0
00024398 <AmiBlitz3.ab3@6484>   CMPA.w #$0,A2
0002439C <AmiBlitz3.ab3@6485>    BEQ.w 'done
0002439E <AmiBlitz3.ab3@6486>   ADDQ.w #1,D0
000243A0 <AmiBlitz3.ab3@6487>   MOVEA.l (A2),A2
000243A4 <AmiBlitz3.ab3@6488>  BRA.w 'loop
000243AA <AmiBlitz3.ab3@6491>   MOVE.w D0,temp1
000243AC <AmiBlitz3.ab3@6492>   MOVE.l D7,D1
000243B2 <AmiBlitz3.ab3@6493>   MOVE.l #temp1,D2
000243B4 <AmiBlitz3.ab3@6494>   MOVEQ.l #$02,D3
000243B6 <AmiBlitz3.ab3@6495>   ADDQ.l #2,D6
000243BC <AmiBlitz3.ab3@6496>   MOVEA.l _dosbase,A6
000243C0 <AmiBlitz3.ab3@6497> JMP _Write(A6)
000243C6 <AmiBlitz3.ab3@6504>    TST.b resdisable
000243CA <AmiBlitz3.ab3@6505>    BEQ 'l1
000243D0 <AmiBlitz3.ab3@6506>    MOVE.l currentmacroaddr,a3
000243D6 <AmiBlitz3.ab3@6507>    CMP.l #0,a3
000243DA <AmiBlitz3.ab3@6508>    BEQ 'l1
000243DC <AmiBlitz3.ab3@6509>    MOVE.l (a3),a3
000243E0 <AmiBlitz3.ab3@6510>  BRA 'l2
000243E6 <AmiBlitz3.ab3@6514>   MOVEA.l macrobase,A3                                     ;??begin org code??
000243E8 <AmiBlitz3.ab3@6517>   MOVEA.l A3,A2
000243EC <AmiBlitz3.ab3@6518>   BSR.w countem
000243F0 <AmiBlitz3.ab3@6521>    CMPA.w #$0,A3
000243F4 <AmiBlitz3.ab3@6522>    BEQ.w 'done
000243F6 <AmiBlitz3.ab3@6523>   MOVE.l D6,D5
000243F8 <AmiBlitz3.ab3@6524>   MOVE.l (A3),-(A7)
000243FC <AmiBlitz3.ab3@6525>   MOVE.l $4(A3),-(A7)
000243FE <AmiBlitz3.ab3@6526>   MOVEQ.l #$00,D3
00024402 <AmiBlitz3.ab3@6527>   MOVE.b $C(A3),D3
00024404 <AmiBlitz3.ab3@6528>   ADDQ.w #1,D3
00024408 <AmiBlitz3.ab3@6529>   BCLR #$0,D3
0002440A <AmiBlitz3.ab3@6530>   ADD.l D3,D6                                              ;add len of struct
0002440E <AmiBlitz3.ab3@6531>   TST.w $8(A3)
00024412 <AmiBlitz3.ab3@6532>    BEQ.w 'notext
00024416 <AmiBlitz3.ab3@6533>   MOVE.l D6,$4(A3)
00024418 <AmiBlitz3.ab3@6534>   MOVE.l D5,D2
0002441A <AmiBlitz3.ab3@6535>   ADDQ.l #4,D2
0002441E <AmiBlitz3.ab3@6536>    BSR.w addhunkoffset
00024420 <AmiBlitz3.ab3@6539>   MOVEQ.l #$00,D4
00024424 <AmiBlitz3.ab3@6540>   MOVE.w $8(A3),D4
00024426 <AmiBlitz3.ab3@6541>   ADDQ.w #1,D4
0002442A <AmiBlitz3.ab3@6542>   BCLR #$0,D4
0002442C <AmiBlitz3.ab3@6543>   ADD.l D4,D6
0002442E <AmiBlitz3.ab3@6544>   TST.l (A3)
00024432 <AmiBlitz3.ab3@6545>    BEQ.w 'nomore
00024434 <AmiBlitz3.ab3@6546>   MOVE.l D6,(A3)
00024436 <AmiBlitz3.ab3@6547>   MOVE.l D5,D2
0002443A <AmiBlitz3.ab3@6548>    BSR.w addhunkoffset
0002443C <AmiBlitz3.ab3@6551>   MOVE.l A3,D2
0002443E <AmiBlitz3.ab3@6552>   MOVE.l D7,D1
00024444 <AmiBlitz3.ab3@6553>    MOVEA.l _dosbase,A6
00024448 <AmiBlitz3.ab3@6554>    JSR _Write(a6)
0002444A <AmiBlitz3.ab3@6555>   TST.l D4
0002444E <AmiBlitz3.ab3@6556>    BEQ.w 'skip
00024450 <AmiBlitz3.ab3@6557>   MOVE.l (A7),D2
00024452 <AmiBlitz3.ab3@6558>   MOVE.l D4,D3
00024454 <AmiBlitz3.ab3@6559>   MOVE.l D7,D1
0002445A <AmiBlitz3.ab3@6560>     MOVEA.l _dosbase,A6
0002445E <AmiBlitz3.ab3@6561>    JSR _Write(A6)
00024462 <AmiBlitz3.ab3@6564>   MOVE.l (A7)+,$4(A3)
00024464 <AmiBlitz3.ab3@6565>   MOVE.l (A7)+,(A3)
00024466 <AmiBlitz3.ab3@6566>   MOVEA.l (A3),A3
0002446A <AmiBlitz3.ab3@6567>  BRA.w 'loop
0002446C <AmiBlitz3.ab3@6570> RTS
00024472 <AmiBlitz3.ab3@6575>   TST.b resdisable
00024476 <AmiBlitz3.ab3@6576>   BEQ 'l1
0002447C <AmiBlitz3.ab3@6577>   MOVE.l lastrestype,a3
00024482 <AmiBlitz3.ab3@6578>   CMP.l #0,a3
00024486 <AmiBlitz3.ab3@6579>   BEQ 'l1
00024488 <AmiBlitz3.ab3@6580>   MOVE.l (a3),a3
0002448C <AmiBlitz3.ab3@6581>  BRA 'l2
00024492 <AmiBlitz3.ab3@6585>   MOVEA.l newtype_string,A3
00024494 <AmiBlitz3.ab3@6588>   MOVEA.l A3,A2
00024498 <AmiBlitz3.ab3@6589>    BSR.w countem
0002449C <AmiBlitz3.ab3@6592>    CMPA.w #$0,A3
000244A0 <AmiBlitz3.ab3@6593>    BEQ.w 'done
000244A2 <AmiBlitz3.ab3@6594>   MOVE.l D6,-(A7)
000244A6 <AmiBlitz3.ab3@6595>   MOVEA.l $4(A3),A2
000244A8 <AmiBlitz3.ab3@6596>   MOVEQ.l #$0E,D5
000244AC <AmiBlitz3.ab3@6597>    BSR.w writeoffs
000244AE <AmiBlitz3.ab3@6599>   MOVE.l (A7)+,D0
000244B2 <AmiBlitz3.ab3@6600>   MOVE.l $4(A3),-(A7)
000244B6 <AmiBlitz3.ab3@6601>   MOVE.l D0,$4(A3)
000244B8 <AmiBlitz3.ab3@6602>   MOVE.l D6,D2
000244BA <AmiBlitz3.ab3@6603>   ADDQ.l #4,D2
000244BE <AmiBlitz3.ab3@6604>    BSR.w addhunkoffset
000244C0 <AmiBlitz3.ab3@6605>   MOVEQ.l #$00,D3
000244C4 <AmiBlitz3.ab3@6606>   MOVE.b $A(A3),D3
000244C6 <AmiBlitz3.ab3@6607>   ADDQ.w #1,D3
000244CA <AmiBlitz3.ab3@6608>   BCLR #$0,D3
000244CC <AmiBlitz3.ab3@6609>   ADD.l D3,D6
000244CE <AmiBlitz3.ab3@6610>   MOVE.l A3,D2
000244D0 <AmiBlitz3.ab3@6611>   MOVE.l D7,D1
000244D6 <AmiBlitz3.ab3@6612>     MOVEA.l _dosbase,A6
000244DA <AmiBlitz3.ab3@6613>     JSR _Write(A6)
000244DE <AmiBlitz3.ab3@6614>   MOVE.l (A7)+,$4(A3)
000244E0 <AmiBlitz3.ab3@6615>   MOVEA.l (A3),A3
000244E4 <AmiBlitz3.ab3@6616>  BRA.w 'loop
000244E6 <AmiBlitz3.ab3@6619> RTS
000244EC <AmiBlitz3.ab3@6624>    TST.b resdisable
000244F0 <AmiBlitz3.ab3@6625>    BEQ 'l1
000244F6 <AmiBlitz3.ab3@6626>    MOVE.l currentlabeladdr,a2
000244FC <AmiBlitz3.ab3@6627>    CMP.l #0,a2
00024500 <AmiBlitz3.ab3@6628>    BEQ 'l1
00024502 <AmiBlitz3.ab3@6629>    MOVE.l (a2),a2
00024506 <AmiBlitz3.ab3@6630>  BRA 'l2
0002450C <AmiBlitz3.ab3@6634>    MOVEA.l labelbase,A2
0002450E <AmiBlitz3.ab3@6637>    MOVEQ.l #$00,D0
00024512 <AmiBlitz3.ab3@6640>    CMPA.w #$0,A2
00024516 <AmiBlitz3.ab3@6641>    BEQ.w 'done
0002451E <AmiBlitz3.ab3@6642>   CMPI.l #$1,$4(A2)
00024522 <AmiBlitz3.ab3@6643>    BNE.w 'next
00024524 <AmiBlitz3.ab3@6644>   ADDQ.w #1,D0
00024526 <AmiBlitz3.ab3@6647>   MOVEA.l (A2),A2
0002452A <AmiBlitz3.ab3@6648>  BRA.w 'loop
00024530 <AmiBlitz3.ab3@6651>   MOVE.w D0,temp1
00024532 <AmiBlitz3.ab3@6652>   MOVE.l D7,D1
00024538 <AmiBlitz3.ab3@6653>   MOVE.l #temp1,D2
0002453A <AmiBlitz3.ab3@6654>   MOVEQ.l #$02,D3
0002453C <AmiBlitz3.ab3@6655>   ADDQ.l #2,D6
00024542 <AmiBlitz3.ab3@6656>     MOVEA.l _dosbase,A6
00024546 <AmiBlitz3.ab3@6657>     JSR _Write(A6)
0002454C <AmiBlitz3.ab3@6659>    TST.b resdisable
00024550 <AmiBlitz3.ab3@6660>    BEQ 'done_l1
00024556 <AmiBlitz3.ab3@6661>    MOVE.l currentlabeladdr,a2
0002455C <AmiBlitz3.ab3@6662>    CMP.l #0,a2
00024560 <AmiBlitz3.ab3@6663>    BEQ 'done_l1
00024562 <AmiBlitz3.ab3@6664>    MOVE.l (a2),a2
00024566 <AmiBlitz3.ab3@6665>  BRA 'loop2
0002456C <AmiBlitz3.ab3@6669>    MOVEA.l labelbase,A2                                    ;write resident labels
00024570 <AmiBlitz3.ab3@6672>    CMPA.w #$0,A2
00024574 <AmiBlitz3.ab3@6673>    BEQ.w 'done2
0002457C <AmiBlitz3.ab3@6674>   CMPI.l #$1,$4(A2)
00024580 <AmiBlitz3.ab3@6675>    BNE.w 'next2
00024582 <AmiBlitz3.ab3@6676>    MOVEQ.l #$00,D3
00024586 <AmiBlitz3.ab3@6677>   MOVE.b $12(A2),D3                                        ;length
00024588 <AmiBlitz3.ab3@6678>   ADDQ.w #1,D3
0002458C <AmiBlitz3.ab3@6679>   BCLR #$0,D3
0002458E <AmiBlitz3.ab3@6680>   MOVE.l D6,D2
00024590 <AmiBlitz3.ab3@6681>   ADD.l D3,D6
00024592 <AmiBlitz3.ab3@6682>   MOVE.l (A2),-(A7)
00024594 <AmiBlitz3.ab3@6683>   TST.l (A2)
00024598 <AmiBlitz3.ab3@6684>    BEQ.w 'nonext
0002459A <AmiBlitz3.ab3@6685>   MOVE.l D6,(A2)
0002459E <AmiBlitz3.ab3@6686>    BSR.w addhunkoffset
000245A0 <AmiBlitz3.ab3@6689>   MOVE.l A2,D2
000245A2 <AmiBlitz3.ab3@6690>   MOVE.l D7,D1
000245A8 <AmiBlitz3.ab3@6691>     MOVEA.l _dosbase,A6
000245AC <AmiBlitz3.ab3@6692>     JSR _Write(A6)
000245AE <AmiBlitz3.ab3@6693>   MOVE.l (A7)+,(A2)
000245B0 <AmiBlitz3.ab3@6696>   MOVEA.l (A2),A2
000245B4 <AmiBlitz3.ab3@6697>  BRA.w 'loop2
000245B6 <AmiBlitz3.ab3@6700> RTS
000245E0 <AmiBlitz3.ab3@6705>    !basic
000245E6 <AmiBlitz3.ab3@6706>     MOVE.l ptr_resfile,d0
000245F6 <AmiBlitz3.ab3@6707>     resfileP.l = Peek.l(?ptr_resfile)
00024600 <AmiBlitz3.ab3@6708>     If resfileP
00024628 <AmiBlitz3.ab3@6709>       resfile$ = Peek.s(resfileP)
00024674 <AmiBlitz3.ab3@6710>       tests.b = Instr(resfile$,"/")
000246C0 <AmiBlitz3.ab3@6711>       testc.b = Instr(resfile$,":")
000246E2 <AmiBlitz3.ab3@6712>       If tests=0 AND testc=0
00024762 <AmiBlitz3.ab3@6713>         resfile$ = dos_AddPart{my_residentsdir$,resfile$}
00024774 <AmiBlitz3.ab3@6714>         Poke.l ?ptr_resfile,&resfile$
0002477A <AmiBlitz3.ab3@6716>     Else
000247B4 <AmiBlitz3.ab3@6717>       error{"INTERNAL: Invalid pointer in ptr_resfile!"}
000247D2 <AmiBlitz3.ab3@6719>    !asm
000247D4 <AmiBlitz3.ab3@6720> RTS
000247DA <AmiBlitz3.ab3@6727> 
000247E0 <AmiBlitz3.ab3@6728>   MOVE.l A7,errstack
000247EA <AmiBlitz3.ab3@6732>   MOVE.l #'next,errcont
000247F2 <AmiBlitz3.ab3@6733>   MOVE.w #$FFFF,ezerr         ; was -1
000247F6 <AmiBlitz3.ab3@6735>   BSR.w Aclearallvars
000247FA <AmiBlitz3.ab3@6736>   BSR.w free_residents
00024800 <AmiBlitz3.ab3@6738>   LEA residents_table,A5
00024802 <AmiBlitz3.ab3@6739>   MOVEQ.l #$07,D6
00024804 <AmiBlitz3.ab3@6742>     TST.b (A5)
00024808 <AmiBlitz3.ab3@6743>     BEQ.w 'next
0002480E <AmiBlitz3.ab3@6744>     MOVE.l A5,ptr_resfile
00024812 <AmiBlitz3.ab3@6745>     BSR check_residentpath
00024818 <AmiBlitz3.ab3@6746>     MOVE.l ptr_resfile,d1
0002481E <AmiBlitz3.ab3@6747>     MOVEA.l _dosbase,A6
00024822 <AmiBlitz3.ab3@6748>     JSR _LoadSeg(A6)
00024826 <AmiBlitz3.ab3@6749>     MOVE.l D0,$40(A5)
0002482A <AmiBlitz3.ab3@6750>     BNE.w 'yeah
0002482E <AmiBlitz3.ab3@6752>     BSR.w reserr
00024830 <AmiBlitz3.ab3@6756>     MOVEA.l D0,A3
00024832 <AmiBlitz3.ab3@6757>     ADDA.l A3,A3
00024834 <AmiBlitz3.ab3@6758>     ADDA.l A3,A3
00024836 <AmiBlitz3.ab3@6759>     ADDQ.w #4,A3                                           ;start of res
0002483A <AmiBlitz3.ab3@6761>     BSR.w fixtypes
0002483E <AmiBlitz3.ab3@6762>     BSR.w fixmacs                                        ;add macros to list
00024842 <AmiBlitz3.ab3@6763>     BSR.w fixconsts                                        ;read labels
00024846 <AmiBlitz3.ab3@6766>     LEA ResidentEntryStep(A5),A5       ;$44
0002484A <AmiBlitz3.ab3@6767>   DBF D6,'loop
00024854 <AmiBlitz3.ab3@6772>   MOVE.l #free_residents,errcont
0002485A <AmiBlitz3.ab3@6774>   MOVEA.l newtype_string,A3
0002485C <AmiBlitz3.ab3@6775>   MOVEQ.l #$0B,D7
00024860 <AmiBlitz3.ab3@6776>   BSR.w checkclash
00024866 <AmiBlitz3.ab3@6778>   MOVEA.l macrobase,A3
00024868 <AmiBlitz3.ab3@6779>   MOVEQ.l #$d,D7
0002486C <AmiBlitz3.ab3@6780>   BSR.w checkclash
00024872 <AmiBlitz3.ab3@6782>   MOVEA.l firstconst,A3
00024874 <AmiBlitz3.ab3@6783>   MOVEQ.l #$19,D7
00024878 <AmiBlitz3.ab3@6784>   BSR.w checkclash
0002487A <AmiBlitz3.ab3@6787> RTS
0002487C <AmiBlitz3.ab3@6791>   MOVEA.l A3,A4
00024880 <AmiBlitz3.ab3@6794>     CMPA.w #$0,A4
00024884 <AmiBlitz3.ab3@6795>     BEQ.w 'done
0002488A <AmiBlitz3.ab3@6797>     LEA ptr_parameterstore,A0
0002488E <AmiBlitz3.ab3@6798>     LEA $0(A4,D7.W),A1
00024890 <AmiBlitz3.ab3@6799>     MOVEQ.l #-$01,D2
00024892 <AmiBlitz3.ab3@6802>       ADDQ.w #1,D2
00024894 <AmiBlitz3.ab3@6803>       MOVE.b (A1)+,(A0)+
00024898 <AmiBlitz3.ab3@6804>     BNE.w 'loop2
0002489A <AmiBlitz3.ab3@6805>     MOVEA.l A3,A2
0002489E <AmiBlitz3.ab3@6808>     BSR.w findlab
000248A2 <AmiBlitz3.ab3@6809>     BNE.w 'next                                  ;not found
000248A4 <AmiBlitz3.ab3@6810>     CMPA.l A2,A4
000248A8 <AmiBlitz3.ab3@6812>     BEQ.w 'l1
000248AA <AmiBlitz3.ab3@6813>     MOVE.l a1,a5
000248AE <AmiBlitz3.ab3@6815>  BRA clasherr      ; was bne
000248B2 <AmiBlitz3.ab3@6818>  BRA.w 'more
000248B4 <AmiBlitz3.ab3@6821>     MOVEA.l (A4),A4
000248B8 <AmiBlitz3.ab3@6822>  BRA.w 'loop
000248BA <AmiBlitz3.ab3@6825> RTS
000248C0 <AmiBlitz3.ab3@6829>   MOVEA.l _dosbase,A6
000248C6 <AmiBlitz3.ab3@6831>   LEA newtype_string,A0
000248CC <AmiBlitz3.ab3@6832>   MOVE.l A0,lastrestype
000248CE <AmiBlitz3.ab3@6833>   CLR.l (A0)
000248D4 <AmiBlitz3.ab3@6835>   LEA macrobase,A0
000248DA <AmiBlitz3.ab3@6836>   MOVE.l A0,currentmacroaddr
000248DC <AmiBlitz3.ab3@6837>   CLR.l (A0)
000248E2 <AmiBlitz3.ab3@6839>   LEA labelbase,A0
000248E8 <AmiBlitz3.ab3@6840>   MOVE.l A0,currentlabeladdr
000248EA <AmiBlitz3.ab3@6841>   CLR.l (A0)
000248F0 <AmiBlitz3.ab3@6842>   CLR.w rescnt
00024928 <AmiBlitz3.ab3@6846>   !ComData_SetB{comByte_DebugMode,debugmode}
0002492E <AmiBlitz3.ab3@6849>   LEA residents_table,A2
00024930 <AmiBlitz3.ab3@6850>   MOVEQ.l #$07,D2
00024934 <AmiBlitz3.ab3@6853>      MOVE.l $40(A2),D1
00024938 <AmiBlitz3.ab3@6854>      BEQ.w 'next
0002493C <AmiBlitz3.ab3@6855>       CLR.l $40(A2)
00024942 <AmiBlitz3.ab3@6856>       MOVEA.l _dosbase,A6
00024946 <AmiBlitz3.ab3@6857>       JSR _UnLoadSeg(A6)
0002494A <AmiBlitz3.ab3@6860>      LEA ResidentEntryStep(A2),A2   ; $44
0002494E <AmiBlitz3.ab3@6861>  DBF D2,'loop
00024950 <AmiBlitz3.ab3@6863> RTS
00024952 <AmiBlitz3.ab3@6867>   MOVE.w (A3)+,D1
00024956 <AmiBlitz3.ab3@6868>   BEQ.w 'done
0002495C <AmiBlitz3.ab3@6869>   MOVEA.l currentlabeladdr,A2
0002495E <AmiBlitz3.ab3@6870>   MOVE.l A3,(A2)
00024960 <AmiBlitz3.ab3@6871>   SUBQ.w #1,D1
00024962 <AmiBlitz3.ab3@6874>     MOVEA.l A3,A2
00024964 <AmiBlitz3.ab3@6875>     MOVEA.l (A3),A3
00024968 <AmiBlitz3.ab3@6876>   DBF D1,'loop
0002496A <AmiBlitz3.ab3@6879>   CLR.l (a2)                                               ;bugfix for object
00024970 <AmiBlitz3.ab3@6881>   MOVE.l A2,currentlabeladdr
00024972 <AmiBlitz3.ab3@6882>   MOVEA.l A2,A3
00024974 <AmiBlitz3.ab3@6883>   MOVEQ.l #$00,D0
00024978 <AmiBlitz3.ab3@6884>   MOVE.b $12(A3),D0
0002497A <AmiBlitz3.ab3@6885>   ADDQ.w #1,D0
0002497E <AmiBlitz3.ab3@6886>   BCLR #$0,D0
00024980 <AmiBlitz3.ab3@6887>   ADDA.w D0,A3
00024982 <AmiBlitz3.ab3@6890> RTS
00024984 <AmiBlitz3.ab3@6894>   MOVE.w (A3)+,D1
00024988 <AmiBlitz3.ab3@6895>   BEQ.w 'done
0002498E <AmiBlitz3.ab3@6896>   MOVEA.l currentmacroaddr,A2
00024990 <AmiBlitz3.ab3@6897>   MOVE.l A3,(A2)
00024992 <AmiBlitz3.ab3@6898>   SUBQ.w #1,D1
00024994 <AmiBlitz3.ab3@6901>     MOVEA.l A3,A2
00024996 <AmiBlitz3.ab3@6902>     MOVEA.l (A3),A3
0002499A <AmiBlitz3.ab3@6903>   DBF D1,'loop
000249A0 <AmiBlitz3.ab3@6905>   MOVE.l A2,currentmacroaddr
000249A2 <AmiBlitz3.ab3@6906>   MOVEA.l A2,A3
000249A4 <AmiBlitz3.ab3@6907>   MOVEQ.l #$00,D0
000249A8 <AmiBlitz3.ab3@6908>   MOVE.b $C(A3),D0
000249AA <AmiBlitz3.ab3@6909>   ADDQ.w #1,D0
000249AE <AmiBlitz3.ab3@6910>   BCLR #$0,D0
000249B2 <AmiBlitz3.ab3@6911>   MOVE.w $8(A3),D1
000249B4 <AmiBlitz3.ab3@6912>   ADDQ.w #1,D1
000249B8 <AmiBlitz3.ab3@6913>   BCLR #$0,D1
000249BA <AmiBlitz3.ab3@6914>   ADDA.w D0,A3
000249BC <AmiBlitz3.ab3@6915>   ADDA.w D1,A3
000249BE <AmiBlitz3.ab3@6918> RTS
000249C0 <AmiBlitz3.ab3@6923>   MOVE.w (A3)+,D1            ;number of types to do
000249C4 <AmiBlitz3.ab3@6924>   BEQ.w 'done
000249C6 <AmiBlitz3.ab3@6925>   MOVE.w D1,-(A7)
000249C8 <AmiBlitz3.ab3@6926>   SUBQ.w #1,D1
000249CE <AmiBlitz3.ab3@6927>   MOVEA.l lastrestype,A2
000249D0 <AmiBlitz3.ab3@6928>   MOVE.l A2,-(A7)
000249D2 <AmiBlitz3.ab3@6931>       MOVE.l (A3),D0          ;skip through offsets
000249D6 <AmiBlitz3.ab3@6932>       BEQ.w 'loopme
000249D8 <AmiBlitz3.ab3@6933>       MOVEA.l D0,A3
000249DC <AmiBlitz3.ab3@6934>  BRA.w 'loop
000249E0 <AmiBlitz3.ab3@6937>       MOVE.b $E(A3),D0
000249E2 <AmiBlitz3.ab3@6938>       ADDQ.w #1,D0
000249E6 <AmiBlitz3.ab3@6939>       BCLR #$0,D0
000249E8 <AmiBlitz3.ab3@6940>       ADDA.w D0,A3            ;a3=type
000249EA <AmiBlitz3.ab3@6941>       MOVE.l A3,(A2)          ;link
000249EC <AmiBlitz3.ab3@6942>       MOVEA.l A3,A2
000249EE <AmiBlitz3.ab3@6943>       MOVEQ.l #$00,D0
000249F2 <AmiBlitz3.ab3@6944>       MOVE.b $A(A3),D0
000249F4 <AmiBlitz3.ab3@6945>       ADDQ.w #1,D0
000249F8 <AmiBlitz3.ab3@6946>       BCLR #$0,D0
000249FA <AmiBlitz3.ab3@6947>       ADDA.w D0,A3            ;next offset
000249FE <AmiBlitz3.ab3@6948>   DBF D1,'loop
00024A00 <AmiBlitz3.ab3@6952>   MOVEA.l (A7)+,A0
00024A02 <AmiBlitz3.ab3@6953>   MOVEA.l (A0),A0
00024A06 <AmiBlitz3.ab3@6956>     CMPA.w #$0,A0
00024A0A <AmiBlitz3.ab3@6957>     BEQ.w 'fdone
00024A0E <AmiBlitz3.ab3@6958>     MOVEA.l $4(A0),A1          ;first offset!
00024A12 <AmiBlitz3.ab3@6961>     CMPA.w #$0,A1
00024A16 <AmiBlitz3.ab3@6962>     BEQ.w 'fofd
00024A1A <AmiBlitz3.ab3@6964>     MOVE.w $A(A1),D0           ;number of type
00024A20 <AmiBlitz3.ab3@6965>     MOVEA.l newtypebase,A4
00024A24 <AmiBlitz3.ab3@6966>     CMP.w #$7,D0
00024A28 <AmiBlitz3.ab3@6967>     BCS.w 'fsys
00024A2E <AmiBlitz3.ab3@6968>     SUB.w rescnt,D0
00024A30 <AmiBlitz3.ab3@6971>     SUBQ.w #1,D0
00024A34 <AmiBlitz3.ab3@6972>     BMI.w 'fdone2
00024A36 <AmiBlitz3.ab3@6975>        MOVEA.l (A4),A4
00024A3A <AmiBlitz3.ab3@6976>   DBF D0,'floop3
00024A3E <AmiBlitz3.ab3@6979>     MOVE.l A4,$A(A1)
00024A40 <AmiBlitz3.ab3@6980>     MOVEA.l (A1),A1
00024A44 <AmiBlitz3.ab3@6981>  BRA.w 'floop2
00024A46 <AmiBlitz3.ab3@6984>     MOVEA.l (A0),A0
00024A4A <AmiBlitz3.ab3@6985>  BRA.w 'floop
00024A4C <AmiBlitz3.ab3@6988>   MOVE.w (A7)+,D0
00024A52 <AmiBlitz3.ab3@6989>   ADD.w D0,rescnt
00024A58 <AmiBlitz3.ab3@6990>   MOVE.l A2,lastrestype
00024A5A <AmiBlitz3.ab3@6993> RTS
00024A60 <AmiBlitz3.ab3@7000>   LEA tokens,A0
00024A64 <AmiBlitz3.ab3@7001>   MOVE.w #$003A,D0                                         ; $003A : 58 dec
00024A66 <AmiBlitz3.ab3@7004>     MOVEA.l (A0),A0
00024A6A <AmiBlitz3.ab3@7005>   DBF D0,'loop
00024A70 <AmiBlitz3.ab3@7007>   MOVEA.l #asmpnts,A1                                      ;create tokentab
00024A74 <AmiBlitz3.ab3@7008>   MOVE.w #$0076,D0        ; was #tnum-fnum-1,                                 ; $0076 : 118 dec
00024A78 <AmiBlitz3.ab3@7011>       LEA $6(A0),A2
00024A7A <AmiBlitz3.ab3@7014>         TST.b (A2)+
00024A7E <AmiBlitz3.ab3@7015>       BNE.w 'loop3
00024A80 <AmiBlitz3.ab3@7018>         TST.b (A2)+
00024A84 <AmiBlitz3.ab3@7019>       BNE.w 'loop4
00024A86 <AmiBlitz3.ab3@7021>       ADDQ.w #1,A2
00024A88 <AmiBlitz3.ab3@7022>       EXG.l D1,A2
00024A8C <AmiBlitz3.ab3@7023>       BCLR #$0,D1
00024A8E <AmiBlitz3.ab3@7024>       EXG.l D1,A2
00024A90 <AmiBlitz3.ab3@7025>       MOVE.l A2,(A1)+
00024A92 <AmiBlitz3.ab3@7026>       MOVEA.l (A0),A0
00024A96 <AmiBlitz3.ab3@7027>   DBF D0,'loop2
00024A98 <AmiBlitz3.ab3@7028> RTS
00024A9C <AmiBlitz3.ab3@7032>   BSR.w asmconst
00024A9E <AmiBlitz3.ab3@7033>   MOVEQ.l #$0B,D5
00024AA0 <AmiBlitz3.ab3@7034> RTS
00024AA2 <AmiBlitz3.ab3@7037> unmove:  Ds.w 1
00024AA6 <AmiBlitz3.ab3@7041>   MOVE.w #$48E7,D1
00024AAA <AmiBlitz3.ab3@7042>   BSR.w writeword                                          ;movem.l -(a7)
00024AAE <AmiBlitz3.ab3@7043>   MOVE.w #$000F,D2
00024AB0 <AmiBlitz3.ab3@7044>   SUB.w D4,D2
00024AB2 <AmiBlitz3.ab3@7045>   MOVEQ.l #-$01,D1
00024AB4 <AmiBlitz3.ab3@7046>   BCLR D2,D1
00024AB8 <AmiBlitz3.ab3@7047>   BSR.w writeword
00024ABA <AmiBlitz3.ab3@7048>   MOVEQ.l #-$01,D1
00024ABC <AmiBlitz3.ab3@7049>   BCLR D4,D1
00024AC2 <AmiBlitz3.ab3@7050>   MOVE.w D1,unmove
00024AC4 <AmiBlitz3.ab3@7051> RTS
00024AC8 <AmiBlitz3.ab3@7055>   MOVE.w #$4CDF,D1
00024ACC <AmiBlitz3.ab3@7056>   BSR.w writeword
00024AD0 <AmiBlitz3.ab3@7057>   MOVE.w unmove(PC),D1
00024AD4 <AmiBlitz3.ab3@7058>  BRA.w writeword
00024AD8 <AmiBlitz3.ab3@7071>   BSR.w get_reg2
00024ADC <AmiBlitz3.ab3@7072>   CMP.w #$2C,D0                                            ;#','
00024AE0 <AmiBlitz3.ab3@7073>    BNE.w syntaxerr
00024AE6 <AmiBlitz3.ab3@7074>   MOVE.l #$48E7FFFE,D1                                     ;movem to stack
00024AEA <AmiBlitz3.ab3@7075>    BSR.w writelong
00024AEC <AmiBlitz3.ab3@7076>   MOVE.w D4,D1
00024AF0 <AmiBlitz3.ab3@7077>   ORI.w #$2F00,D1
00024AF4 <AmiBlitz3.ab3@7078>    BSR.w writeword
00024AF8 <AmiBlitz3.ab3@7080>    BSR.w get1bytemain
00024AFC <AmiBlitz3.ab3@7081>    BSR.w getparameter
00024B00 <AmiBlitz3.ab3@7082>    BSR.w fetchvars
00024B04 <AmiBlitz3.ab3@7083>    BSR.w calcvar
00024B08 <AmiBlitz3.ab3@7084>    BTST #$E,D2
00024B0C <AmiBlitz3.ab3@7085>    BEQ.w 'notp
00024B10 <AmiBlitz3.ab3@7088>    MOVE.b #$3,D2
00024B14 <AmiBlitz3.ab3@7089>  BRA.w 'pd
00024B16 <AmiBlitz3.ab3@7092>   TST.b D2
00024B1A <AmiBlitz3.ab3@7093>    BEQ.w 'issa
00024B1E <AmiBlitz3.ab3@7094>   CMP.b #$7,D2
00024B22 <AmiBlitz3.ab3@7095>    BEQ.w 'issa
00024B26 <AmiBlitz3.ab3@7098>   BTST #$F,D2
00024B2A <AmiBlitz3.ab3@7099>    BNE.w 'nsimp
00024B2E <AmiBlitz3.ab3@7100>   MOVE.w #$45ED,D1                                         ;lea x(a5),a2
00024B32 <AmiBlitz3.ab3@7101>    BSR.w writeword
00024B34 <AmiBlitz3.ab3@7102>   MOVE.w D3,D1
00024B38 <AmiBlitz3.ab3@7103>    BSR.w writeword
00024B3C <AmiBlitz3.ab3@7106>   MOVE.w #$201F,D1                                         ;move.l (a7)+,d0
00024B40 <AmiBlitz3.ab3@7107>    BSR.w writeword
00024B44 <AmiBlitz3.ab3@7108>   MOVE.w #$1480,D1
00024B48 <AmiBlitz3.ab3@7109>   CMP.b #$1,D2
00024B4C <AmiBlitz3.ab3@7110>    BEQ.w 'pg
00024B50 <AmiBlitz3.ab3@7111>   EORI.w #$3000,D1
00024B54 <AmiBlitz3.ab3@7112>   CMP.b #$2,D2
00024B58 <AmiBlitz3.ab3@7113>    BNE.w 'pg
00024B5C <AmiBlitz3.ab3@7114>   ORI.w #$1000,D1
00024B60 <AmiBlitz3.ab3@7117>   BSR.w writeword
00024B66 <AmiBlitz3.ab3@7118>   MOVE.l #$4CDF7FFF,D1
00024B6A <AmiBlitz3.ab3@7119> BRA.w writelong
00024B6E <AmiBlitz3.ab3@7123>   BSR.w get_reg2
00024B72 <AmiBlitz3.ab3@7124>   CMP.w #$2C,D0     ;','
00024B76 <AmiBlitz3.ab3@7125>    BNE.w syntaxerr
00024B7A <AmiBlitz3.ab3@7126>    BSR.w regmovems
00024B7C <AmiBlitz3.ab3@7127>   MOVE.w D4,-(A7)
00024B7E <AmiBlitz3.ab3@7128>   MOVEQ.l #$03,D2   ;get a long
00024B82 <AmiBlitz3.ab3@7129>    BSR.w eval
00024B84 <AmiBlitz3.ab3@7130>   MOVE.w (A7)+,D1
00024B88 <AmiBlitz3.ab3@7131>    BEQ.w 'done
00024B8C <AmiBlitz3.ab3@7132>   CMP.w #$8,D1
00024B90 <AmiBlitz3.ab3@7133>    BCC.w 'addreg
00024B92 <AmiBlitz3.ab3@7134>   LSL.w #8,D1
00024B94 <AmiBlitz3.ab3@7135>   LSL.w #1,D1
00024B98 <AmiBlitz3.ab3@7136>   ORI.w #$2000,D1
00024B9C <AmiBlitz3.ab3@7137>    BSR.w writeword
00024BA0 <AmiBlitz3.ab3@7138>  BRA.w 'done
00024BA2 <AmiBlitz3.ab3@7141>   SUBQ.w #8,D1
00024BA4 <AmiBlitz3.ab3@7142>   LSL.w #8,D1
00024BA6 <AmiBlitz3.ab3@7143>   LSL.w #1,D1
00024BAA <AmiBlitz3.ab3@7144>   ORI.w #$2040,D1
00024BAE <AmiBlitz3.ab3@7145>   BSR.w writeword
00024BB2 <AmiBlitz3.ab3@7148> BRA.w dounmove
00024BB6 <AmiBlitz3.ab3@7153>   BSR.w get1bytemain
00024BBA <AmiBlitz3.ab3@7156>   ORI.w #$20,D0
00024BBE <AmiBlitz3.ab3@7157>   CMP.w #$64,D0       ;'d'
00024BC2 <AmiBlitz3.ab3@7158>    BEQ.w getan3
00024BC6 <AmiBlitz3.ab3@7159>   CMP.w #$61,D0       ;'a'
00024BCA <AmiBlitz3.ab3@7160>    BNE.w syntaxerr
00024BCE <AmiBlitz3.ab3@7161>    BSR.w getan3
00024BD0 <AmiBlitz3.ab3@7162>   ADDQ.w #8,D4
00024BD2 <AmiBlitz3.ab3@7163> RTS
00024BFE <AmiBlitz3.ab3@7168>   !fget                                                   ;bsr.w get1bytemain
00024C02 <AmiBlitz3.ab3@7170>   ORI.w #$20,D0
00024C06 <AmiBlitz3.ab3@7173>   CMP.w #$61,D0     ;'a'
00024C0A <AmiBlitz3.ab3@7174>   BNE.w syntaxerr
00024C36 <AmiBlitz3.ab3@7178>   !fget                                                    ;bsr.w get1bytemain
00024C3A <AmiBlitz3.ab3@7180>   SUBI.w #$30,D0
00024C3E <AmiBlitz3.ab3@7181>    BMI.w syntaxerr
00024C42 <AmiBlitz3.ab3@7182>   CMP.w #$7,D0
00024C46 <AmiBlitz3.ab3@7183>    BHI.w syntaxerr
00024C48 <AmiBlitz3.ab3@7184>   MOVE.w D0,D4
00024C74 <AmiBlitz3.ab3@7186>   !fget
00024C76 <AmiBlitz3.ab3@7188> RTS                                                        ;bra.w get1bytemain
00024C78 <AmiBlitz3.ab3@7192>   ADDQ.w #8,D4
00024C7A <AmiBlitz3.ab3@7195>   MOVEQ.l #$00,D5    ;bits for reg
00024C7E <AmiBlitz3.ab3@7196>   SUBI.w #$30,D4
00024C82 <AmiBlitz3.ab3@7199>   CMP.w #$2D,D0      ;'-'
00024C86 <AmiBlitz3.ab3@7200>    BEQ.w 'range
00024C8A <AmiBlitz3.ab3@7201>   CMP.w #$2F,D0      ;'/'
00024C8E <AmiBlitz3.ab3@7202>    BEQ.w 'one
00024C92 <AmiBlitz3.ab3@7203>  BRA.w syntaxerr
00024C94 <AmiBlitz3.ab3@7206>   BSET D4,D5
00024C96 <AmiBlitz3.ab3@7209>   MOVE.w D5,D4
00024C98 <AmiBlitz3.ab3@7210>   MOVEQ.l #$0F,D5
00024C9A <AmiBlitz3.ab3@7211>  RTS
00024C9C <AmiBlitz3.ab3@7214>   BSET D4,D5
00024CA0 <AmiBlitz3.ab3@7215>   BSR.w get_reg
00024CB2 <AmiBlitz3.ab3@7217>   !compare3                                                ;bsr.w tstend2
00024CB6 <AmiBlitz3.ab3@7219>   BNE.w 'loop
00024CBA <AmiBlitz3.ab3@7220>  BRA.w 'done2
00024CBC <AmiBlitz3.ab3@7223>   MOVE.w D4,D1    ;from
00024CC0 <AmiBlitz3.ab3@7224>    BSR.w get_reg
00024CC2 <AmiBlitz3.ab3@7225>   CMP.w D4,D1
00024CC6 <AmiBlitz3.ab3@7226>    BLS.w 'loop2
00024CC8 <AmiBlitz3.ab3@7227>   EXG.l D4,D1
00024CCA <AmiBlitz3.ab3@7230>   BSET D1,D5
00024CCC <AmiBlitz3.ab3@7231>   ADDQ.w #1,D1
00024CCE <AmiBlitz3.ab3@7232>   CMP.w D4,D1
00024CD2 <AmiBlitz3.ab3@7233>    BLS.w 'loop2
00024CE4 <AmiBlitz3.ab3@7235>   !compare3                                                ;bsr.w tstend2
00024CE8 <AmiBlitz3.ab3@7237>   BNE.w 'loop
00024CEC <AmiBlitz3.ab3@7238> BRA.w 'done
00024CEE <AmiBlitz3.ab3@7244>   MOVEA.l A5,A4                                            ;bsr.w get1bytemain
00024D1A <AmiBlitz3.ab3@7246>    !fget
00024D1E <AmiBlitz3.ab3@7248>   CMP.w #$23,D0       ;'#'
00024D22 <AmiBlitz3.ab3@7249>    BEQ.w getimm
00024D26 <AmiBlitz3.ab3@7250>   CMP.w #$28,D0       ;'('
00024D2A <AmiBlitz3.ab3@7251>    BEQ.w 'ind
00024D2E <AmiBlitz3.ab3@7252>   CMP.w #$2D,D0       ;'-'
00024D32 <AmiBlitz3.ab3@7253>    BNE.w 'more
00024D5E <AmiBlitz3.ab3@7255>    !fget                                                   ;bsr.w get1bytemain       -(
00024D62 <AmiBlitz3.ab3@7257>   CMP.w #$28,D0       ;'('
00024D66 <AmiBlitz3.ab3@7258>    BNE.w 'notccr
00024D6A <AmiBlitz3.ab3@7259>    BSR.w getan
00024D6E <AmiBlitz3.ab3@7260>   CMP.w #$29,D0       ;')'
00024D72 <AmiBlitz3.ab3@7261>    BNE.w syntaxerr
00024D74 <AmiBlitz3.ab3@7262>   MOVEQ.l #$04,D5
00024DA0 <AmiBlitz3.ab3@7264>   !fget                                                    ;bsr.w get1bytemain  
00024DA2 <AmiBlitz3.ab3@7265>  RTS
00024DA6 <AmiBlitz3.ab3@7269>   BSR.w getan
00024DAA <AmiBlitz3.ab3@7270>   CMP.w #$29,D0      ;')'
00024DAE <AmiBlitz3.ab3@7271>    BNE.w syntaxerr
00024DDA <AmiBlitz3.ab3@7273>   !fget
00024DDE <AmiBlitz3.ab3@7275>   CMP.w #$2B,D0      ;'+'
00024DE2 <AmiBlitz3.ab3@7276>    BEQ.w 'postinc
00024DE4 <AmiBlitz3.ab3@7277>   MOVEQ.l #$02,D5
00024DE6 <AmiBlitz3.ab3@7278>  RTS
00024DE8 <AmiBlitz3.ab3@7281>   MOVEQ.l #$03,D5
00024E14 <AmiBlitz3.ab3@7283>   !fget                                                    ;bra.w get1bytemain
00024E16 <AmiBlitz3.ab3@7284>  RTS
00024E1A <AmiBlitz3.ab3@7288>   ORI.w #$20,D0
00024E1C <AmiBlitz3.ab3@7289>   MOVE.w D0,D1      ;first
00024E48 <AmiBlitz3.ab3@7291>    !fget                                                   ;bsr.w get1bytemain  ;get second
00024E4C <AmiBlitz3.ab3@7293>   CMP.w #$64,D1     ;'d'
00024E50 <AmiBlitz3.ab3@7294>    BNE.w 'notdn
00024E54 <AmiBlitz3.ab3@7295>   CMP.w #$30,D0     ;'0'
00024E58 <AmiBlitz3.ab3@7296>    BCS.w 'notan
00024E5C <AmiBlitz3.ab3@7297>   CMP.w #$37,D0     ;'7'
00024E60 <AmiBlitz3.ab3@7298>    BHI.w 'notan
00024E62 <AmiBlitz3.ab3@7299>   MOVE.w D0,D4
00024E8E <AmiBlitz3.ab3@7301>    !fget                                                   ;bsr.w get1bytemain
00024EA0 <AmiBlitz3.ab3@7302>    !compare3                                               ;bsr.w tstend2
00024EA4 <AmiBlitz3.ab3@7304>    BEQ.w 'dn
00024EA8 <AmiBlitz3.ab3@7305>   CMP.w #$2D,D0     ;'-'
00024EAC <AmiBlitz3.ab3@7306>    BEQ.w getmovem
00024EB0 <AmiBlitz3.ab3@7307>   CMP.w #$2F,D0     ;'/'
00024EB4 <AmiBlitz3.ab3@7308>    BEQ.w getmovem
00024EB8 <AmiBlitz3.ab3@7309>  BRA.w 'notan2
00024EBA <AmiBlitz3.ab3@7312>   MOVEQ.l #$00,D5
00024EBE <AmiBlitz3.ab3@7313>   SUBI.w #$30,D4
00024EC0 <AmiBlitz3.ab3@7314>  RTS
00024EC4 <AmiBlitz3.ab3@7317>    CMP.w #$61,D1    ;'a'
00024EC8 <AmiBlitz3.ab3@7318>    BNE.w 'notan
00024ECC <AmiBlitz3.ab3@7320>   CMP.w #$30,D0     ;'0'
00024ED0 <AmiBlitz3.ab3@7321>    BCS.w 'notan
00024ED4 <AmiBlitz3.ab3@7322>   CMP.w #$37,D0     ;'7'
00024ED8 <AmiBlitz3.ab3@7323>    BHI.w 'notan
00024EDA <AmiBlitz3.ab3@7324>   MOVE.w D0,D4
00024F06 <AmiBlitz3.ab3@7326>    !fget                                                   ;bsr.w get1bytemain
00024F18 <AmiBlitz3.ab3@7327>    !compare3                                               ;bsr.w tstend2
00024F1C <AmiBlitz3.ab3@7329>    BEQ.w 'an
00024F20 <AmiBlitz3.ab3@7330>   CMP.w #$2D,D0     ;'-'
00024F24 <AmiBlitz3.ab3@7331>    BEQ.w getmovem2                                         ;movem
00024F28 <AmiBlitz3.ab3@7332>   CMP.w #$2F,D0     ;'/'
00024F2C <AmiBlitz3.ab3@7333>    BEQ.w getmovem2
00024F30 <AmiBlitz3.ab3@7334>  BRA.w 'notan2
00024F32 <AmiBlitz3.ab3@7340>   MOVEQ.l #1,d5
00024F36 <AmiBlitz3.ab3@7341>   SUBI.w #$30,D4
00024F3A <AmiBlitz3.ab3@7343>   BRA 'l10
00024F3C <AmiBlitz3.ab3@7344>   ADDQ.w #8,d4                             ; ??? looks like dead code ???
00024F3E <AmiBlitz3.ab3@7345>   MOVEQ #0,d5                              ;   "
00024F40 <AmiBlitz3.ab3@7346>   BSET d4,d5                               ;   "
00024F42 <AmiBlitz3.ab3@7347>   MOVE.w d5,d4                             ;   "
00024F44 <AmiBlitz3.ab3@7348>   MOVEQ.l #$0f,D5                          ;   "             ;01
00024F46 <AmiBlitz3.ab3@7352>  RTS
00024F4A <AmiBlitz3.ab3@7355>   ORI.w #$20,D0
00024F4C <AmiBlitz3.ab3@7356>   MOVE.w D0,D4
00024F78 <AmiBlitz3.ab3@7357>    !fget                                                   ;bsr.w get1bytemain ;get third
00024F8A <AmiBlitz3.ab3@7362>   !compare3                                                ;bsr.w tstend2
00024F8E <AmiBlitz3.ab3@7364>    BNE.w 'notsx
00024F92 <AmiBlitz3.ab3@7365>   CMP.w #$73,D1       ;'s'
00024F96 <AmiBlitz3.ab3@7366>    BNE.w 'notsx
00024F9A <AmiBlitz3.ab3@7367>   CMP.w #$70,D4       ;'p'
00024F9E <AmiBlitz3.ab3@7368>    BNE.w 'notsp
00024FB0 <AmiBlitz3.ab3@7370>    !compare3                                               ;bsr.w tstend2
00024FB4 <AmiBlitz3.ab3@7372>    BNE.w 'notccr
00024FB6 <AmiBlitz3.ab3@7376>   MOVEQ.l #$07,D4
00024FB8 <AmiBlitz3.ab3@7377>   MOVEQ.l #$01,D5
00024FBA <AmiBlitz3.ab3@7378>  RTS
00024FBE <AmiBlitz3.ab3@7381>   CMP.w #$72,D4      ;'r'
00024FC2 <AmiBlitz3.ab3@7382>    BNE.w 'notccr
00024FD4 <AmiBlitz3.ab3@7384>    !compare3                                               ;bsr.w tstend2
00024FD8 <AmiBlitz3.ab3@7386>    BNE.w 'notccr
00024FDA <AmiBlitz3.ab3@7387>   MOVEQ.l #$0D,D5
00024FDC <AmiBlitz3.ab3@7388>  RTS
00024FE0 <AmiBlitz3.ab3@7391>   ORI.w #$20,D0
00024FE4 <AmiBlitz3.ab3@7392>   CMP.w #$63,D1      ;'c'
00024FE8 <AmiBlitz3.ab3@7393>    BNE.w 'notccr0
00024FEC <AmiBlitz3.ab3@7394>   CMP.w #$63,D4      ;'c'
00024FF0 <AmiBlitz3.ab3@7395>    BNE.w 'notccr
00024FF4 <AmiBlitz3.ab3@7396>   CMP.w #$72,D0      ;'r'
00024FF8 <AmiBlitz3.ab3@7397>    BNE.w 'notccr
00024FFC <AmiBlitz3.ab3@7398>    BSR.w get1bytemain                                      ;??wy not !fget
00025000 <AmiBlitz3.ab3@7399>    BEQ.w 'ccr
00025004 <AmiBlitz3.ab3@7400>   CMP.w #$2C,D0
00025008 <AmiBlitz3.ab3@7401>    BNE.w 'notccr
0002500A <AmiBlitz3.ab3@7407>   MOVEQ.l #$0C,D5
0002500C <AmiBlitz3.ab3@7408>  RTS
00025010 <AmiBlitz3.ab3@7411>   CMP.w #$75,D1      ;'u'
00025014 <AmiBlitz3.ab3@7412>    BNE.w 'notccr
00025018 <AmiBlitz3.ab3@7413>   CMP.w #$73,D4      ;'s'
0002501C <AmiBlitz3.ab3@7414>    BNE.w 'notccr
00025020 <AmiBlitz3.ab3@7415>   CMP.w #$70,D0      ;'p'
00025024 <AmiBlitz3.ab3@7416>    BNE.w 'notccr
00025028 <AmiBlitz3.ab3@7417>    BSR.w get1bytemain                                      ;??wy not !fget
0002502C <AmiBlitz3.ab3@7418>    BEQ.w 'usp
00025030 <AmiBlitz3.ab3@7419>   CMP.w #$2C,D0      ;','
00025034 <AmiBlitz3.ab3@7420>    BNE.w 'notccr
00025036 <AmiBlitz3.ab3@7423>   MOVEQ.l #$0E,D5
00025038 <AmiBlitz3.ab3@7424>  RTS
0002503A <AmiBlitz3.ab3@7430>   MOVEA.l A4,A5
0002503E <AmiBlitz3.ab3@7431>    BSR.w asmconst
00025050 <AmiBlitz3.ab3@7434>    !compare3                                               ;bsr.w tstend2
00025054 <AmiBlitz3.ab3@7436>    BEQ.w 'abs1
00025058 <AmiBlitz3.ab3@7437>   CMP.w #$2E,D0      ;'.'
0002505C <AmiBlitz3.ab3@7438>    BEQ.w 'absx
00025060 <AmiBlitz3.ab3@7439>   CMP.w #$28,D0      ;'('
00025064 <AmiBlitz3.ab3@7440>    BNE.w syntaxerr
00025068 <AmiBlitz3.ab3@7441>    BSR.w get1bytemain                                      ;??wy not !fget
0002506C <AmiBlitz3.ab3@7442>   ORI.w #$20,D0
00025070 <AmiBlitz3.ab3@7443>   CMP.w #$70,D0      ;'p'
00025074 <AmiBlitz3.ab3@7444>    BNE.w 'notpcrel
00025078 <AmiBlitz3.ab3@7445>    BSR.w get1bytemain                                      ;??wy not !fget
0002507C <AmiBlitz3.ab3@7446>   ORI.w #$20,D0
00025080 <AmiBlitz3.ab3@7447>   CMP.w #$63,D0      ;'c'
00025084 <AmiBlitz3.ab3@7448>    BNE.w syntaxerr
00025088 <AmiBlitz3.ab3@7449>    BSR.w get1bytemain                                      ;??wy not !fget
0002508C <AmiBlitz3.ab3@7450>    BSR.w getrest
0002508E <AmiBlitz3.ab3@7451>   ADDQ.w #4,D5
00025090 <AmiBlitz3.ab3@7452>  RTS
00025094 <AmiBlitz3.ab3@7455>   BSR.w getan2
00025098 <AmiBlitz3.ab3@7456>  BRA.w getrest
0002509C <AmiBlitz3.ab3@7459>    BSR.w get1bytemain                                     ;??wy not !fget
000250A0 <AmiBlitz3.ab3@7460>   ORI.w #$20,D0
000250A4 <AmiBlitz3.ab3@7461>   CMP.w #$77,D0      ;'w'
000250A8 <AmiBlitz3.ab3@7462>    BEQ.w 'absw
000250AC <AmiBlitz3.ab3@7463>   CMP.w #$6C,D0      ;'l'
000250B0 <AmiBlitz3.ab3@7464>    BNE.w syntaxerr
000250B2 <AmiBlitz3.ab3@7467>   MOVEQ.l #$08,D5
000250B4 <AmiBlitz3.ab3@7468>  RTS
000250B6 <AmiBlitz3.ab3@7471>   MOVEQ.l #$07,D5
000250B8 <AmiBlitz3.ab3@7472> RTS
000250BA <AmiBlitz3.ab3@7476>   TST.w D0
000250BE <AmiBlitz3.ab3@7477>    BEQ.w 'ok
000250C2 <AmiBlitz3.ab3@7478>   CMP.w #$3A,D0       ;':'
000250C6 <AmiBlitz3.ab3@7479>    BEQ.w 'ok
000250CA <AmiBlitz3.ab3@7480>   CMP.w #$2C,D0       ;','
000250CC <AmiBlitz3.ab3@7483> RTS
000250D0 <AmiBlitz3.ab3@7487>   CMP.w #$2C,D0       ;','
000250D4 <AmiBlitz3.ab3@7488>    BNE.w 'dis
000250D8 <AmiBlitz3.ab3@7489>    BSR.w get1bytemain                                      ;??wy not !fget
000250DC <AmiBlitz3.ab3@7490>   ORI.w #$20,D0
000250DE <AmiBlitz3.ab3@7491>   MOVEQ.l #$00,D1
000250E2 <AmiBlitz3.ab3@7492>   CMP.w #$64,D0       ;'d'
000250E6 <AmiBlitz3.ab3@7493>    BEQ.w 'ianxi
000250EA <AmiBlitz3.ab3@7494>   CMP.w #$61,D0       ;'a'
000250EE <AmiBlitz3.ab3@7495>    BNE.w syntaxerr
000250F2 <AmiBlitz3.ab3@7496>   BSET #$F,D1
000250F6 <AmiBlitz3.ab3@7499>    BSR.w get1bytemain                                      ;??wy not !fget
000250FA <AmiBlitz3.ab3@7500>   SUBI.w #$30,D0
000250FE <AmiBlitz3.ab3@7501>    BMI.w syntaxerr
00025102 <AmiBlitz3.ab3@7502>   CMP.w #$7,D0
00025106 <AmiBlitz3.ab3@7503>    BHI.w syntaxerr
00025108 <AmiBlitz3.ab3@7504>   LSL.w #8,D0
0002510A <AmiBlitz3.ab3@7505>   LSL.w #4,D0
0002510C <AmiBlitz3.ab3@7506>   OR.w D0,D1
00025110 <AmiBlitz3.ab3@7507>    BSR.w get1bytemain                                      ;??wy not !fget
00025114 <AmiBlitz3.ab3@7508>   CMP.w #$2E,D0       ;'.'
00025118 <AmiBlitz3.ab3@7509>    BNE.w 'ok2
0002511C <AmiBlitz3.ab3@7510>    BSR.w get1bytemain                                      ;??wy not !fget
00025120 <AmiBlitz3.ab3@7511>   ORI.w #$20,D0
00025124 <AmiBlitz3.ab3@7512>   CMP.w #$77,D0       ;'w'
00025128 <AmiBlitz3.ab3@7513>    BEQ.w 'ok
0002512C <AmiBlitz3.ab3@7514>   CMP.w #$6C,D0       ;'l'
00025130 <AmiBlitz3.ab3@7515>    BNE.w syntaxerr
00025134 <AmiBlitz3.ab3@7516>   BSET #$B,D1
00025138 <AmiBlitz3.ab3@7519>    BSR.w get1bytemain                                      ;??wy not !fget
0002513C <AmiBlitz3.ab3@7523>    CMP.b #"*",d0                                            ;020 * Mode
00025140 <AmiBlitz3.ab3@7524>             BNE 'l1
00025144 <AmiBlitz3.ab3@7525>             BSR.w get1bytemain                             ;??wy not !fget
00025148 <AmiBlitz3.ab3@7526>             CMP.b #"2",d0
0002514C <AmiBlitz3.ab3@7527>             BNE 'l2
00025150 <AmiBlitz3.ab3@7528>             OR.w #$200,d1
00025154 <AmiBlitz3.ab3@7529>  BRA 'l1b
00025158 <AmiBlitz3.ab3@7532>             CMP.b #"4",d0
0002515C <AmiBlitz3.ab3@7533>             BNE 'l3
00025160 <AmiBlitz3.ab3@7534>             OR.w #$400,d1
00025164 <AmiBlitz3.ab3@7535>  BRA 'l1b
00025168 <AmiBlitz3.ab3@7538>             CMP.b #"8",d0
0002516C <AmiBlitz3.ab3@7539>             BNE syntaxerr
00025170 <AmiBlitz3.ab3@7540>             OR.w #$600,d1
00025174 <AmiBlitz3.ab3@7543>         BSR.w get1bytemain                                 ;??wy not !fget
00025178 <AmiBlitz3.ab3@7547>   CMP.w #$29,D0       ;')'
0002517C <AmiBlitz3.ab3@7548>    BNE.w syntaxerr
00025182 <AmiBlitz3.ab3@7549>   MOVE.w D1,extraword
00025184 <AmiBlitz3.ab3@7550>   MOVEQ.l #$06,D5
00025188 <AmiBlitz3.ab3@7551>  BRA.w get1bytemain                                         ;??wy not !fget
0002518C <AmiBlitz3.ab3@7554>   CMP.w #")",D0                                            ;")"
00025190 <AmiBlitz3.ab3@7555>    BNE.w errorbracketmiss                                  ; was syntax error
00025192 <AmiBlitz3.ab3@7556>   MOVEQ.l #$05,D5
00025196 <AmiBlitz3.ab3@7557> BRA.w get1bytemain                                         ;??wy not !fget
0002519C <AmiBlitz3.ab3@7564>   MOVEA.l asmbuff,A0
000251A2 <AmiBlitz3.ab3@7565>   MOVE.w ininclude,D1
000251A8 <AmiBlitz3.ab3@7566>   OR.w inmacro,D1
000251AA <AmiBlitz3.ab3@7567>   MOVE.w D1,(A0)+                                          ;flag!
000251AE <AmiBlitz3.ab3@7568>    BNE.w copyconst
000251B0 <AmiBlitz3.ab3@7569>   MOVE.l A5,-(A7)
000251B4 <AmiBlitz3.ab3@7570>    BSR.w copyconst
000251BA <AmiBlitz3.ab3@7571>   MOVEA.l asmbuff,A0
000251BE <AmiBlitz3.ab3@7572>   CMP.w #$4,D1
000251C2 <AmiBlitz3.ab3@7573>    BLS.w 'leave
000251C8 <AmiBlitz3.ab3@7574>   TST.w lc
000251CC <AmiBlitz3.ab3@7575>    BNE.w 'leave
000251CE <AmiBlitz3.ab3@7576>   ADDQ.w #2,A0
000251D0 <AmiBlitz3.ab3@7577>   MOVE.l (A7)+,(A0)+
000251D2 <AmiBlitz3.ab3@7578>   CLR.b (A0)
000251DA <AmiBlitz3.ab3@7579>   MOVE.w #$0004,asmlen2                                    ;pointer + 0
000251DC <AmiBlitz3.ab3@7580>  RTS
000251DE <AmiBlitz3.ab3@7583>   NOT.w (A0)
000251E0 <AmiBlitz3.ab3@7584>   ADDQ.w #4,A7
000251E2 <AmiBlitz3.ab3@7585> RTS
000251E4 <AmiBlitz3.ab3@7588> lc:  Ds.w 1
000251EA <AmiBlitz3.ab3@7592>   CLR.w lc
000251EC <AmiBlitz3.ab3@7593>   MOVEQ.l #$00,D1
000251EE <AmiBlitz3.ab3@7596>    ADDQ.w #1,D1                                            ;label name
0002521A <AmiBlitz3.ab3@7598>    !fget                                                   ;bsr.w get1bytemain
0002521E <AmiBlitz3.ab3@7600>    BEQ.w 'done
00025222 <AmiBlitz3.ab3@7603>    CMP.w #$22,d0
00025226 <AmiBlitz3.ab3@7604>    BNE.s 'loop_l10
0002522C <AmiBlitz3.ab3@7605>    NOT.w instringon
00025230 <AmiBlitz3.ab3@7608>    CMP.w #":",d0
00025234 <AmiBlitz3.ab3@7609>    BNE.s 'loop_l11
0002523A <AmiBlitz3.ab3@7610>    TST.w instringon
0002523E <AmiBlitz3.ab3@7611>    BEQ 'done
00025240 <AmiBlitz3.ab3@7615>   TST.w D0
00025244 <AmiBlitz3.ab3@7616>   BPL.w 'notmi
00025246 <AmiBlitz3.ab3@7617>   MOVE.w D0,-(A7)
00025248 <AmiBlitz3.ab3@7618>   LSR.w #8,D0
0002524A <AmiBlitz3.ab3@7619>   MOVE.b D0,(A0)+
0002524C <AmiBlitz3.ab3@7620>   MOVE.w (A7)+,D0
0002524E <AmiBlitz3.ab3@7621>   MOVE.b D0,(A0)+
00025250 <AmiBlitz3.ab3@7622>   ADDQ.w #1,D1
00025254 <AmiBlitz3.ab3@7623>  BRA.s 'loop
0002525A <AmiBlitz3.ab3@7626>    TST.w instringon
0002525E <AmiBlitz3.ab3@7627>    BNE.w 'putbyte
00025264 <AmiBlitz3.ab3@7629>    TST.b _dcb
00025268 <AmiBlitz3.ab3@7630>    BNE 'notmi_l10
0002526C <AmiBlitz3.ab3@7632>    CMP.w #$28,D0     ;'('
00025270 <AmiBlitz3.ab3@7633>    BEQ.w 'done
00025274 <AmiBlitz3.ab3@7637>    CMP.w #$2C,D0     ;','
00025278 <AmiBlitz3.ab3@7638>    BEQ.w 'done
0002527C <AmiBlitz3.ab3@7639>    CMP.b #"'",D0           ; was #loclabch
00025280 <AmiBlitz3.ab3@7640>    BNE.w 'putbyte
00025286 <AmiBlitz3.ab3@7641>    MOVE.w D0,lc                                     ;locallabels
00025288 <AmiBlitz3.ab3@7642>    MOVE.l A1,-(A7)
0002528E <AmiBlitz3.ab3@7643>    LEA lastgloballabel,A1
00025290 <AmiBlitz3.ab3@7644>    TST.b (A1)
00025294 <AmiBlitz3.ab3@7645>    BEQ.w nolocerr
00025296 <AmiBlitz3.ab3@7648>   ADDQ.w #1,D1
00025298 <AmiBlitz3.ab3@7649>   MOVE.b (A1)+,(A0)+
0002529C <AmiBlitz3.ab3@7650>    BNE.w 'cloop
0002529E <AmiBlitz3.ab3@7651>   SUBQ.w #1,D1
000252A0 <AmiBlitz3.ab3@7652>   SUBQ.w #1,A0
000252A2 <AmiBlitz3.ab3@7653>   MOVEA.l (A7)+,A1
000252A4 <AmiBlitz3.ab3@7656>   MOVE.b D0,(A0)+
000252A8 <AmiBlitz3.ab3@7657>  BRA.w 'loop
000252AA <AmiBlitz3.ab3@7660>   CLR.b (A0)
000252B0 <AmiBlitz3.ab3@7661>   MOVE.w D1,asmlen2
000252B2 <AmiBlitz3.ab3@7662> RTS
000252B8 <AmiBlitz3.ab3@7668>   CMP.l #$80ad,d0      
000252BC <AmiBlitz3.ab3@7669>   BNE.s 'l12
000252C2 <AmiBlitz3.ab3@7670>  JMP bssseg
000252C8 <AmiBlitz3.ab3@7673>   CMP.l #$807f,d0
000252CC <AmiBlitz3.ab3@7674>     BNE.s 'l13
000252D2 <AmiBlitz3.ab3@7675>  JMP chipseg
000252D8 <AmiBlitz3.ab3@7678>   ADDQ.l #1,destpointer                                    ;even
000252E0 <AmiBlitz3.ab3@7679>   BCLR #$0,destpointer+3
000252E4 <AmiBlitz3.ab3@7681>   SUBI.w #$803C,D0         ; was #$8000+fnum
000252E6 <AmiBlitz3.ab3@7682>   LSL.w #2,D0
000252EC <AmiBlitz3.ab3@7683>   MOVEA.l #asmpnts,A0
000252F0 <AmiBlitz3.ab3@7684>   MOVEA.l $0(A0,D0.W),A0                                   ;begin inline assembler
000252F6 <AmiBlitz3.ab3@7685>   MOVE.w D0,temp1
000252F8 <AmiBlitz3.ab3@7686>   MOVE.l A0,-(A7)
000252FA <AmiBlitz3.ab3@7688>   MOVEQ.l #$01,D1         ;word len (byte=0, long=2)
00025326 <AmiBlitz3.ab3@7690>    !fget                                                   ;bsr.w get1bytemain
0002532A <AmiBlitz3.ab3@7692>   CMP.w #$2E,D0           ;'.'
0002532E <AmiBlitz3.ab3@7693>    BNE.w 'dsize
0002535A <AmiBlitz3.ab3@7695>   !fget                                                    ;bsr.w get1bytemain
0002535E <AmiBlitz3.ab3@7697>   ORI.w #$20,D0
00025362 <AmiBlitz3.ab3@7698>   CMP.w #$77,D0           ;'w'                                  ;long
00025366 <AmiBlitz3.ab3@7699>    BEQ.w 'wsize
0002536A <AmiBlitz3.ab3@7700>   CMP.w #$62,D0           ;'b'                                 ;byte
0002536E <AmiBlitz3.ab3@7701>    BEQ.w 'bsize
00025372 <AmiBlitz3.ab3@7702>   CMP.w #$6C,D0           ;'l'                                 ;word
00025376 <AmiBlitz3.ab3@7704>    BEQ.w 'lsize
0002537A <AmiBlitz3.ab3@7705>   CMP.w #"s",d0
0002537E <AmiBlitz3.ab3@7707>   BNE syntaxerr
00025382 <AmiBlitz3.ab3@7708>  BRA.w 'bsize             ; was 'lsize org source
00025384 <AmiBlitz3.ab3@7711>   MOVEQ.l #$00,D1
00025388 <AmiBlitz3.ab3@7712>   MOVE.w $8(A0),D0
0002538C <AmiBlitz3.ab3@7713>  BRA.w 'tstsize
0002538E <AmiBlitz3.ab3@7716>   MOVEQ.l #$04,D1
00025392 <AmiBlitz3.ab3@7717>  BRA.w 'putsize
00025394 <AmiBlitz3.ab3@7720>   MOVEQ.l #$04,D1
00025398 <AmiBlitz3.ab3@7721>   MOVE.w $8(A0),D0
0002539A <AmiBlitz3.ab3@7722>   LSR.w #4,D0
0002539E <AmiBlitz3.ab3@7723>  BRA.w 'tstsize
000253A0 <AmiBlitz3.ab3@7726>   MOVEQ.l #$08,D1
000253A4 <AmiBlitz3.ab3@7727>   MOVE.w $8(A0),D0
000253A6 <AmiBlitz3.ab3@7728>   LSR.w #8,D0
000253AA <AmiBlitz3.ab3@7731>    ANDI.w #$F,D0
000253AE <AmiBlitz3.ab3@7732>   CMP.w #$F,D0
000253B2 <AmiBlitz3.ab3@7734>    BNE.w 'cl60
000253BA <AmiBlitz3.ab3@7737>    CMP.l #"MULS",-6(a0)
000253BE <AmiBlitz3.ab3@7738>    BNE 'c20
000253C4 <AmiBlitz3.ab3@7739>    MOVE.l #$4c000800,d1
000253CA <AmiBlitz3.ab3@7740>  JMP do32
000253D2 <AmiBlitz3.ab3@7743>    CMP.l #"MULU",-6(a0)
000253D6 <AmiBlitz3.ab3@7744>    BNE 'c30
000253DC <AmiBlitz3.ab3@7745>    MOVE.l #$4c000000,d1
000253E2 <AmiBlitz3.ab3@7746>  JMP do32
000253EA <AmiBlitz3.ab3@7749>    CMP.l #"DIVS",-6(a0)
000253EE <AmiBlitz3.ab3@7750>    BNE 'c40
000253F4 <AmiBlitz3.ab3@7751>    MOVE.l #$4c400800,d1
000253FA <AmiBlitz3.ab3@7752>  JMP do32
00025402 <AmiBlitz3.ab3@7755>    CMP.l #"DIVU",-6(a0)
00025406 <AmiBlitz3.ab3@7756>    BNE 'c50
0002540C <AmiBlitz3.ab3@7757>    MOVE.l #$4c400000,d1
00025412 <AmiBlitz3.ab3@7758>  JMP do32
00025416 <AmiBlitz3.ab3@7762>  BRA illsizeerr             ; in org source this was afte 'c160
00025442 <AmiBlitz3.ab3@7765>   !fget                                                    ;bsr.w get1bytemain
00025448 <AmiBlitz3.ab3@7768>   MOVE.w D1,asmsize
0002544A <AmiBlitz3.ab3@7769>   MOVEQ.l #-$01,D3
0002544E <AmiBlitz3.ab3@7770>    BSR.w reget
00025452 <AmiBlitz3.ab3@7771>    BEQ.w 'done0
0002545C <AmiBlitz3.ab3@7772>   MOVE.l #ptr_parameterstore,asmbuff
00025466 <AmiBlitz3.ab3@7775>    MOVE.w oldqflag,instringon
0002546C <AmiBlitz3.ab3@7776>   MOVEA.l lastsourcepos,A5
00025470 <AmiBlitz3.ab3@7778>    BSR.w getea
00025472 <AmiBlitz3.ab3@7779>   MOVE.l D4,D2                                              ;to src
00025474 <AmiBlitz3.ab3@7780>   MOVE.l D5,D3
0002547E <AmiBlitz3.ab3@7781>   MOVE.w asmlen2,asmlen
00025480 <AmiBlitz3.ab3@7782>   MOVEQ.l #-$01,D5
0002548A <AmiBlitz3.ab3@7783>   MOVE.w extraword,extraword2
0002548E <AmiBlitz3.ab3@7784>   CMP.w #$2C,D0                                             ;','
00025492 <AmiBlitz3.ab3@7785>    BNE.w 'done0
0002549C <AmiBlitz3.ab3@7786>   MOVE.l #namebuff2,asmbuff
000254A0 <AmiBlitz3.ab3@7787>    BSR.w getea                                              ;dest
000254A2 <AmiBlitz3.ab3@7794>   MOVEA.l (A7)+,A0
000254A8 <AmiBlitz3.ab3@7798>   MOVEA.l destpointer,A1    ; pc
000254AA <AmiBlitz3.ab3@7800>   MOVEA.l A1,A4
000254AC <AmiBlitz3.ab3@7801>   ADDQ.w #2,A1
000254AE <AmiBlitz3.ab3@7802>   MOVE.w (A0),D1            ;opcode
000254B0 <AmiBlitz3.ab3@7803>   TST.w D3
000254B4 <AmiBlitz3.ab3@7804>    BMI.w 'none              ;no src/dest ea!
000254B8 <AmiBlitz3.ab3@7808>   MOVE.w $E(A0),D0
000254BC <AmiBlitz3.ab3@7809>    BPL.w 'noia
000254C0 <AmiBlitz3.ab3@7810>   BTST #$0,D0
000254C4 <AmiBlitz3.ab3@7811>    BEQ.w 'noa
000254C8 <AmiBlitz3.ab3@7812>   CMP.w #$1,D5
000254CC <AmiBlitz3.ab3@7813>    BNE.w 'noa
000254D0 <AmiBlitz3.ab3@7814>   CMP.w #$E,D3
000254D4 <AmiBlitz3.ab3@7815>    BEQ.w 'noia
000254DA <AmiBlitz3.ab3@7816>   MOVE.w temp1,D0
000254DC <AmiBlitz3.ab3@7817>   ADDQ.w #4,D0
000254E0 <AmiBlitz3.ab3@7818>  BRA.w 'moveon
000254E4 <AmiBlitz3.ab3@7821>   BTST #$1,D0
000254E8 <AmiBlitz3.ab3@7822>    BEQ.w 'noia
000254EC <AmiBlitz3.ab3@7823>   CMP.w #$B,D3
000254F0 <AmiBlitz3.ab3@7824>    BNE.w 'noia
000254F6 <AmiBlitz3.ab3@7825>   MOVE.w temp1,D0
000254F8 <AmiBlitz3.ab3@7828>   ADDQ.w #4,D0
000254FE <AmiBlitz3.ab3@7829>   MOVEA.l #asmpnts,A0
00025502 <AmiBlitz3.ab3@7830>   MOVEA.l $0(A0,D0.W),A0
00025504 <AmiBlitz3.ab3@7831>   MOVE.w (A0),D1
0002550E <AmiBlitz3.ab3@7834>   MOVE.l #ptr_parameterstore,buff1
00025518 <AmiBlitz3.ab3@7835>   MOVE.l #namebuff2,buff2
0002551C <AmiBlitz3.ab3@7836>   MOVE.l $A(A0),D0
00025520 <AmiBlitz3.ab3@7837>    BEQ.w 'nojsr
00025522 <AmiBlitz3.ab3@7838>   MOVEA.l D0,A3
00025528 <AmiBlitz3.ab3@7839>   MOVE.w asmsize,D6
0002552A <AmiBlitz3.ab3@7840>    JSR (A3)
0002552E <AmiBlitz3.ab3@7841>    BPL.w 'noerr
00025532 <AmiBlitz3.ab3@7842>   CMP.w #-$2,D0
00025536 <AmiBlitz3.ab3@7843>    BEQ.w illsizeerr
0002553A <AmiBlitz3.ab3@7844>  BRA.w illeaerr
0002553E <AmiBlitz3.ab3@7847>   BEQ.w 'nojsr
00025540 <AmiBlitz3.ab3@7849>   EXG.l D2,D4
00025542 <AmiBlitz3.ab3@7850>   EXG.l D3,D5
00025548 <AmiBlitz3.ab3@7852>   MOVE.l extraword,D6
0002554A <AmiBlitz3.ab3@7853>   SWAP D6
00025550 <AmiBlitz3.ab3@7854>   MOVE.l D6,extraword
0002555A <AmiBlitz3.ab3@7856>   MOVE.l #namebuff2,buff1
00025564 <AmiBlitz3.ab3@7857>   MOVE.l #ptr_parameterstore,buff2
0002556A <AmiBlitz3.ab3@7859>   MOVE.w asmlen,D6
00025570 <AmiBlitz3.ab3@7860>   MOVE.w asmlen2,D7
00025576 <AmiBlitz3.ab3@7861>   MOVE.w D6,asmlen2
0002557C <AmiBlitz3.ab3@7862>   MOVE.w D7,asmlen
00025586 <AmiBlitz3.ab3@7865>   MOVE.l buff1,asmbuff
0002558A <AmiBlitz3.ab3@7866>   MOVE.w $E(A0),D0
0002558E <AmiBlitz3.ab3@7867>    BEQ.w 'nothing
00025592 <AmiBlitz3.ab3@7868>    BMI.w 'nothing
00025596 <AmiBlitz3.ab3@7870>    CMP.w #$7000,d1
0002559A <AmiBlitz3.ab3@7871>    BNE 'skip
0002559E <AmiBlitz3.ab3@7872>    CMP.w #$b,d3
000255A2 <AmiBlitz3.ab3@7873>    BNE illeaerr
000255A6 <AmiBlitz3.ab3@7877>    CMP.w #$1,D0
000255AA <AmiBlitz3.ab3@7878>    BNE.w 'n1to8
000255AE <AmiBlitz3.ab3@7879>    CMP.w #$B,D3
000255B2 <AmiBlitz3.ab3@7880>    BNE.w 'nothing
000255B6 <AmiBlitz3.ab3@7883>    BSR.w insasm
000255B8 <AmiBlitz3.ab3@7884>   MOVE.w D4,D2
000255BA <AmiBlitz3.ab3@7885>   MOVE.w D5,D3
000255BE <AmiBlitz3.ab3@7886>  BRA.w 'skipsrc2
000255C2 <AmiBlitz3.ab3@7889>    CMP.w #$2,D0
000255C6 <AmiBlitz3.ab3@7890>    BNE.w 'notbcc
000255CA <AmiBlitz3.ab3@7891>   CMP.w #$8,D3
000255CE <AmiBlitz3.ab3@7892>    BNE.w illeaerr
000255D0 <AmiBlitz3.ab3@7893>   MOVEQ.l #$09,D3
000255D4 <AmiBlitz3.ab3@7894>  BRA.w 'nothing
000255D8 <AmiBlitz3.ab3@7897>    CMP.w #$3,D0
000255DC <AmiBlitz3.ab3@7898>    BEQ.w 'skipsrc
000255E0 <AmiBlitz3.ab3@7901>   CMP.w #$4,D0
000255E4 <AmiBlitz3.ab3@7902>    BEQ.w 'skipsrc
000255E8 <AmiBlitz3.ab3@7905>   CMP.w #$5,D0
000255EC <AmiBlitz3.ab3@7906>    BNE.w 'notdbf
000255F0 <AmiBlitz3.ab3@7907>   CMP.w #$8,D5
000255F4 <AmiBlitz3.ab3@7908>    BNE.w illeaerr
000255F6 <AmiBlitz3.ab3@7909>   OR.w D2,D1
000255F8 <AmiBlitz3.ab3@7910>   MOVEQ.l #$09,D5
000255FC <AmiBlitz3.ab3@7914>   MOVE.w $2(A0),D6
00025600 <AmiBlitz3.ab3@7915>   MOVE.b $6(A0),D7
00025604 <AmiBlitz3.ab3@7916>   MOVEM.l D4-D5,-(A7)
0002560A <AmiBlitz3.ab3@7917>   MOVE.w extraword2,D4
0002560E <AmiBlitz3.ab3@7918>    BSR.w doea          ;do src
00025612 <AmiBlitz3.ab3@7920>   MOVEM.l (A7)+,D2-D3
00025614 <AmiBlitz3.ab3@7922>   TST.w D3
00025618 <AmiBlitz3.ab3@7925>     BMI.w 'one
0002561E <AmiBlitz3.ab3@7926>   MOVE.w extraword,D4
00025622 <AmiBlitz3.ab3@7927>   MOVE.w $4(A0),D6
00025626 <AmiBlitz3.ab3@7928>   MOVE.b $7(A0),D7
00025630 <AmiBlitz3.ab3@7929>   MOVE.l buff2,asmbuff
0002563A <AmiBlitz3.ab3@7930>   MOVE.w asmlen2,asmlen
0002563E <AmiBlitz3.ab3@7931>    BSR.w doea
00025642 <AmiBlitz3.ab3@7932>  BRA.w 'putit
00025646 <AmiBlitz3.ab3@7935>   MOVE.w $4(A0),D0
0002564A <AmiBlitz3.ab3@7936>    BNE.w illeaerr
0002564E <AmiBlitz3.ab3@7937>  BRA.w 'putit
00025652 <AmiBlitz3.ab3@7940>   MOVE.w $2(A0),D0
00025656 <AmiBlitz3.ab3@7941>   OR.w $4(A0),D0
0002565A <AmiBlitz3.ab3@7942>    BNE.w illeaerr
0002565E <AmiBlitz3.ab3@7947>   MOVE.w $8(A0),D0
00025662 <AmiBlitz3.ab3@7948>   ANDI.w #$F000,D0
00025666 <AmiBlitz3.ab3@7949>   CMP.w #-$1000,D0    ;was #$f000
0002566A <AmiBlitz3.ab3@7950>    BEQ.w 'nosizep
0002566C <AmiBlitz3.ab3@7951>   LSR.w #8,D0
0002566E <AmiBlitz3.ab3@7952>   LSR.w #4,D0         ;shift for size
00025672 <AmiBlitz3.ab3@7954>   MOVE.w $8(A0),D2
00025678 <AmiBlitz3.ab3@7955>   MOVE.w asmsize,D3
0002567A <AmiBlitz3.ab3@7956>   LSR.w D3,D2
0002567E <AmiBlitz3.ab3@7957>   ANDI.w #$F,D2
00025680 <AmiBlitz3.ab3@7958>   LSL.w D0,D2
00025682 <AmiBlitz3.ab3@7959>   OR.w D2,D1          ;size into opcode
00025688 <AmiBlitz3.ab3@7962>   CMPA.l destbufferend,A4
0002568C <AmiBlitz3.ab3@7963>    BCS.w 'oky
00025694 <AmiBlitz3.ab3@7964>   MOVE.w #$FFFF,dontwrite_nomemleft     ; was -1
00025698 <AmiBlitz3.ab3@7965>  BRA.w 'done
0002569A <AmiBlitz3.ab3@7968>   MOVE.w D1,(A4)
000256A0 <AmiBlitz3.ab3@7971>   MOVE.l A1,destpointer
000256A2 <AmiBlitz3.ab3@7972> RTS
000256A8 <AmiBlitz3.ab3@7976>   MOVE.l destpointer,-(A7)
000256AE <AmiBlitz3.ab3@7977>   MOVE.l A1,destpointer
000256B2 <AmiBlitz3.ab3@7978>    BSR.w addoff
000256B8 <AmiBlitz3.ab3@7979>   MOVEA.l destpointer,A1
000256BE <AmiBlitz3.ab3@7980>   MOVE.l (A7)+,destpointer
000256C0 <AmiBlitz3.ab3@7981> RTS
000256C4 <AmiBlitz3.ab3@7985>   MOVEM.l d2-d6,-(a7)
000256CA <AmiBlitz3.ab3@7986>   JSR stripspaces
000256CE <AmiBlitz3.ab3@7987>   CMP.b #"d",(a5)+
000256D2 <AmiBlitz3.ab3@7988>   BNE noreg
000256D4 <AmiBlitz3.ab3@7989>   MOVE.b (a5)+,d0
000256D8 <AmiBlitz3.ab3@7990>   CMP.b #$30,d0
000256DC <AmiBlitz3.ab3@7991>   BLT noreg
000256E0 <AmiBlitz3.ab3@7992>   CMP.b #$37,d0
000256E4 <AmiBlitz3.ab3@7993>   BGT noreg
000256E8 <AmiBlitz3.ab3@7994>   SUB.b #$30,d0
000256EA <AmiBlitz3.ab3@7995>   MOVEQ #0,d3
000256EC <AmiBlitz3.ab3@7996>   MOVE.b d0,d3                                             ;reg1
000256EE <AmiBlitz3.ab3@7997>   ASL.l #8,d3
000256F0 <AmiBlitz3.ab3@7998>   ASL.l #8,d3
000256F6 <AmiBlitz3.ab3@7999>   JSR stripspaces
000256FA <AmiBlitz3.ab3@8000>   CMP.b #",",(a5)+
000256FE <AmiBlitz3.ab3@8001>   BNE noreg
00025704 <AmiBlitz3.ab3@8002>   JSR stripspaces
00025708 <AmiBlitz3.ab3@8003>   CMP.b #"d",(a5)+
0002570C <AmiBlitz3.ab3@8004>   BNE noreg
0002570E <AmiBlitz3.ab3@8005>   MOVE.b (a5)+,d0
00025712 <AmiBlitz3.ab3@8006>   CMP.b #$30,d0
00025716 <AmiBlitz3.ab3@8007>   BLT noreg
0002571A <AmiBlitz3.ab3@8008>   CMP.b #$37,d0
0002571E <AmiBlitz3.ab3@8009>   BGT noreg
00025722 <AmiBlitz3.ab3@8010>   SUB.b #$30,d0
00025724 <AmiBlitz3.ab3@8011>   MOVEQ #0,d4
00025726 <AmiBlitz3.ab3@8012>   MOVE.b d0,d4                                             ;reg2
00025728 <AmiBlitz3.ab3@8013>   ASL.l #8,d4
0002572A <AmiBlitz3.ab3@8014>   ASL.l #4,d4
0002572C <AmiBlitz3.ab3@8015>   OR.b d0,d1
0002572E <AmiBlitz3.ab3@8016>   OR.l d3,d1
00025730 <AmiBlitz3.ab3@8017>   OR.l d4,d1
00025736 <AmiBlitz3.ab3@8018>   JSR writelong
0002573A <AmiBlitz3.ab3@8019>   MOVEM.l (a7)+,d2-d6
0002573E <AmiBlitz3.ab3@8020>   MOVEM.l d1/a1-a3,-(a7)
00025742 <AmiBlitz3.ab3@8021> BRA exit
00025746 <AmiBlitz3.ab3@8025>   MOVEM.l (a7)+,d2-d6
0002574C <AmiBlitz3.ab3@8026>   LEA errtext,a0
0002574E <AmiBlitz3.ab3@8027>   MOVE.l a0,-(a7)
00025754 <AmiBlitz3.ab3@8028> JMP handle_compileerror
0002575A <AmiBlitz3.ab3@8033>   MOVE.w dontwrite_nomemleft,D1
0002575E <AmiBlitz3.ab3@8034>    BNE.w 'done
00025766 <AmiBlitz3.ab3@8035>   BTST #$7,make_smallestcode
0002576A <AmiBlitz3.ab3@8036>    BEQ.w 'go
0002576E <AmiBlitz3.ab3@8037>   MOVE.w pass(PC),D1
00025772 <AmiBlitz3.ab3@8038>    BEQ.w 'done
00025778 <AmiBlitz3.ab3@8041>   MOVEA.l templabel,A2                                     ;insert labels in Code
00025780 <AmiBlitz3.ab3@8042>   MOVE.b #1,curtemplabel
00025788 <AmiBlitz3.ab3@8043>   MOVE.w #$FFFF,constmode
0002578E <AmiBlitz3.ab3@8044>   CLR.w regnum
00025798 <AmiBlitz3.ab3@8045>           MOVE.l #forthstack,forthsp
000257A2 <AmiBlitz3.ab3@8046>           MOVE.l #precstack,precsp
000257A6 <AmiBlitz3.ab3@8047>    BSR.w prepstack
000257A8 <AmiBlitz3.ab3@8050>   MOVE.l A2,-(A7)
000257AC <AmiBlitz3.ab3@8051>    BSR.w chkstop
000257AE <AmiBlitz3.ab3@8052>   MOVEA.l (A7)+,A2
000257B2 <AmiBlitz3.ab3@8053>   CMPA.w #$0,A2
000257B6 <AmiBlitz3.ab3@8054>    BEQ.w 'done2
000257BC <AmiBlitz3.ab3@8055>    CLR.b iee
000257C2 <AmiBlitz3.ab3@8056>   MOVE.l A2,asmbuff
000257C6 <AmiBlitz3.ab3@8057>   LEA $10(A2),A5
000257CA <AmiBlitz3.ab3@8058>   TST.b $F(A2)
000257CE <AmiBlitz3.ab3@8059>    BNE.w 'skipo
000257D0 <AmiBlitz3.ab3@8060>   MOVEA.l (A5),A5                                          ;pointer to real text
000257D6 <AmiBlitz3.ab3@8063>    CLR.w asmtype
000257DA <AmiBlitz3.ab3@8064>    CMP.b #".",(a5)
000257DE <AmiBlitz3.ab3@8065>    BNE.s 'skipo_l10
000257E0 <AmiBlitz3.ab3@8066>    MOVE.l a2,-(a7)
000257E2 <AmiBlitz3.ab3@8067>    ADDQ.l #1,a5
000257E8 <AmiBlitz3.ab3@8068>    LEA newtypebase,a2
000257EC <AmiBlitz3.ab3@8069>    BSR getparameter2
000257F0 <AmiBlitz3.ab3@8070>    BEQ.w syntaxerr
000257F4 <AmiBlitz3.ab3@8071>    BSR findtype
000257F8 <AmiBlitz3.ab3@8072>    BNE.w notypeerr
000257FC <AmiBlitz3.ab3@8073>    LEA $4(a2),a2
00025800 <AmiBlitz3.ab3@8074>    BSR getparameter2
00025804 <AmiBlitz3.ab3@8075>    BEQ.w syntaxerr
00025808 <AmiBlitz3.ab3@8076>    BSR.w findvariable2
0002580C <AmiBlitz3.ab3@8077>    BNE.w notypeerr
00025810 <AmiBlitz3.ab3@8078>    MOVE.w $4(a2),d3
00025812 <AmiBlitz3.ab3@8079>    EXT.l d3
00025816 <AmiBlitz3.ab3@8080>  BRA 'skipo_l30b
0002581A <AmiBlitz3.ab3@8083>   CMP.b #"\",(a5)
0002581E <AmiBlitz3.ab3@8084>     BNE 'skipo_l20
00025820 <AmiBlitz3.ab3@8085>     ADDQ.l #1,a5
00025822 <AmiBlitz3.ab3@8086>    MOVE.l a2,-(a7)
00025824 <AmiBlitz3.ab3@8087>    MOVE.l a5,a4
0002582A <AmiBlitz3.ab3@8088>    LEA usedpath,a5
0002582E <AmiBlitz3.ab3@8089>    CMP.b #"*",(a5)
00025832 <AmiBlitz3.ab3@8090>    BNE 'skipo_lm1
00025834 <AmiBlitz3.ab3@8091>    ADDQ.l #1,a5
00025838 <AmiBlitz3.ab3@8094>    BSR.w getparameter2
0002583C <AmiBlitz3.ab3@8095>    BEQ.w syntaxerr
00025842 <AmiBlitz3.ab3@8096>    LEA varbase,A2
0002584A <AmiBlitz3.ab3@8097>    MOVE.b #1,newvariable
0002584E <AmiBlitz3.ab3@8098>    BSR.w findvariable
00025854 <AmiBlitz3.ab3@8099>    CLR.b newvariable
0002585A <AmiBlitz3.ab3@8100>    CMP.l #-1,d0
0002585E <AmiBlitz3.ab3@8101>    BEQ.w notypeerr
00025860 <AmiBlitz3.ab3@8102>    MOVE.l a4,a5
00025864 <AmiBlitz3.ab3@8103>    MOVE.l $a(a2),a2
00025868 <AmiBlitz3.ab3@8104>    LEA $4(a2),a2
0002586C <AmiBlitz3.ab3@8105>    BSR getparameter2
00025870 <AmiBlitz3.ab3@8106>    BEQ.w syntaxerr
00025874 <AmiBlitz3.ab3@8107>    BSR.w findvariable2
00025878 <AmiBlitz3.ab3@8108>    BNE.w notypeerr
0002587C <AmiBlitz3.ab3@8109>   MOVE.w $4(A2),D3
0002587E <AmiBlitz3.ab3@8110>   EXT.l D3
00025884 <AmiBlitz3.ab3@8113>    CMP.b #"[",-1(a5)
00025888 <AmiBlitz3.ab3@8114>    BNE 'skipo_l30c
0002588A <AmiBlitz3.ab3@8115>    MOVEQ #0,d0
0002588C <AmiBlitz3.ab3@8116>    MOVE.b (a5)+,d0
0002588E <AmiBlitz3.ab3@8117>    MOVE.l d3,-(a7)
00025890 <AmiBlitz3.ab3@8118>    MOVEQ #0,d3
00025896 <AmiBlitz3.ab3@8119>    JSR atoi
00025898 <AmiBlitz3.ab3@8120>    MOVE.l (a7)+,d1
0002589C <AmiBlitz3.ab3@8121>    MOVE.l $a(a2),a2
000258A0 <AmiBlitz3.ab3@8122>    MOVE.w 8(a2),d0
000258A2 <AmiBlitz3.ab3@8123>    MULS d0,d3
000258A4 <AmiBlitz3.ab3@8124>    ADD.l d1,d3
000258A6 <AmiBlitz3.ab3@8127>   MOVE.l (a7)+,a2
000258AA <AmiBlitz3.ab3@8128>  BRA 'oko
000258B0 <AmiBlitz3.ab3@8131>   CMP.w #$c,$8(a2)
000258B4 <AmiBlitz3.ab3@8132>      BEQ 'skipo_lf1
000258BA <AmiBlitz3.ab3@8133>      CMP.w #$d,$8(a2)
000258BE <AmiBlitz3.ab3@8134>      BEQ 'skipo_lf1
000258C4 <AmiBlitz3.ab3@8137>   JSR evalconst3
000258CA <AmiBlitz3.ab3@8140>   MOVEA.l asmbuff,A2
000258CE <AmiBlitz3.ab3@8141>    BEQ.w 'oko
000258D2 <AmiBlitz3.ab3@8142>   CMP.w #$28,D0
000258D6 <AmiBlitz3.ab3@8143>    BEQ.w 'oko
000258DA <AmiBlitz3.ab3@8144>   CMP.w #$2C,D0
000258DE <AmiBlitz3.ab3@8145>    BEQ.w 'oko
000258E2 <AmiBlitz3.ab3@8146>  BRA.w syntaxerr
000258EA <AmiBlitz3.ab3@8149>   MOVE.b #1,iee
000258EE <AmiBlitz3.ab3@8150>  BRA 'skipo_lf2
000258F2 <AmiBlitz3.ab3@8153>   MOVEA.l $4(A2),A1
000258F6 <AmiBlitz3.ab3@8155>   MOVE.w $8(A2),D1                                         ;labelmode
000258FA <AmiBlitz3.ab3@8156>   CMP.w #$5,D1
000258FE <AmiBlitz3.ab3@8157>    BNE.w 'notdan
00025902 <AmiBlitz3.ab3@8160>    BSR.w chkword                                           ;word
00025904 <AmiBlitz3.ab3@8163>   MOVE.w D3,(A1)
00025908 <AmiBlitz3.ab3@8164>  BRA.w 'next
0002590C <AmiBlitz3.ab3@8167>   CMP.w #$6,D1
00025910 <AmiBlitz3.ab3@8168>    BNE.w 'notdanxi
00025914 <AmiBlitz3.ab3@8171>    BSR.w chkbyte                                           ;byte
00025918 <AmiBlitz3.ab3@8174>   MOVE.b D3,$1(A1)
0002591C <AmiBlitz3.ab3@8175>  BRA.w 'next
00025920 <AmiBlitz3.ab3@8178>    CMP.w #$11,D1                                           ;byte
00025924 <AmiBlitz3.ab3@8179>    BEQ.w 'isbyte2
00025928 <AmiBlitz3.ab3@8180>    CMP.w #$c,d1
0002592C <AmiBlitz3.ab3@8181>    BEQ 'single1
00025930 <AmiBlitz3.ab3@8182>    CMP.w #$d,d1
00025934 <AmiBlitz3.ab3@8183>    BEQ 'double1
00025938 <AmiBlitz3.ab3@8184>   CMP.w #$7,D1
0002593C <AmiBlitz3.ab3@8185>    BEQ.w 'word                                             ;word
00025940 <AmiBlitz3.ab3@8186>   CMP.w #$8,D1
00025944 <AmiBlitz3.ab3@8187>    BNE.w 'notabsl
0002594A <AmiBlitz3.ab3@8190>   MOVE.w asmtype,D1                                        ;long
0002594E <AmiBlitz3.ab3@8191>    BEQ.w 'notpcrel
00025952 <AmiBlitz3.ab3@8192>      BSR.w asmoff
00025954 <AmiBlitz3.ab3@8195>   MOVE.l D3,(A1)
00025958 <AmiBlitz3.ab3@8196>  BRA.w 'next
0002595E <AmiBlitz3.ab3@8199>   fmove.s fp0,0(a1)
00025962 <AmiBlitz3.ab3@8200>  BRA.w 'next
00025968 <AmiBlitz3.ab3@8203>   fmove.d fp0,0(a1)
0002596C <AmiBlitz3.ab3@8204>  BRA.w 'next
00025970 <AmiBlitz3.ab3@8207>   CMP.w #$9,D1
00025974 <AmiBlitz3.ab3@8208>    BNE.w 'notdpc
00025976 <AmiBlitz3.ab3@8209>   SUB.l A1,D3                                              ;branchword
0002597A <AmiBlitz3.ab3@8210>    BSR.w chkword
0002597C <AmiBlitz3.ab3@8211>   MOVE.w D3,(A1)
00025980 <AmiBlitz3.ab3@8212>  BRA.w 'next
00025984 <AmiBlitz3.ab3@8215>   CMP.w #$A,D1
00025988 <AmiBlitz3.ab3@8216>    BNE.w 'imm
0002598A <AmiBlitz3.ab3@8217>   SUB.l A1,D3                                              ;branchbyte
0002598E <AmiBlitz3.ab3@8218>  BRA.w 'isbyte
00025992 <AmiBlitz3.ab3@8221>   CMP.w #$11,d1
00025996 <AmiBlitz3.ab3@8222>   BLE 'imm_org
00025998 <AmiBlitz3.ab3@8223>   MOVE.l a3,-(a7)
0002599E <AmiBlitz3.ab3@8224>   LEA pluginbase,a3
000259A2 <AmiBlitz3.ab3@8225>   MOVE.l 8(a2),a0
000259A4 <AmiBlitz3.ab3@8226>   JSR (a0)                                                 ;hook
000259A6 <AmiBlitz3.ab3@8227>   MOVE.l (a7)+,a3
000259AA <AmiBlitz3.ab3@8228>  BRA 'next
000259AE <AmiBlitz3.ab3@8231>   MOVE.w $A(A2),D0
000259B2 <AmiBlitz3.ab3@8232>    BEQ.w 'noflag
000259B6 <AmiBlitz3.ab3@8233>   CMP.w #$1,D0
000259BA <AmiBlitz3.ab3@8234>    BEQ.w 'tocount
000259BE <AmiBlitz3.ab3@8235>   CMP.w #$3,D0
000259C2 <AmiBlitz3.ab3@8236>    BEQ.w 'tomoveq
000259C6 <AmiBlitz3.ab3@8237>   CMP.w #$4,D0
000259CA <AmiBlitz3.ab3@8238>    BEQ.w 'totrap
000259CE <AmiBlitz3.ab3@8241>   CMP.w #$B,D1                                             ;long
000259D2 <AmiBlitz3.ab3@8242>    BEQ.w 'isabsl
000259D6 <AmiBlitz3.ab3@8243>  BRA 'word2                                                ;word
000259DC <AmiBlitz3.ab3@8246>   CMP.l #$F,D3
000259E0 <AmiBlitz3.ab3@8247>    BHI.w illtraperr
000259E2 <AmiBlitz3.ab3@8248>   OR.b D3,-(A1)
000259E6 <AmiBlitz3.ab3@8249>  BRA.w 'next
000259EC <AmiBlitz3.ab3@8252>   CMP.l #$8,D3
000259F0 <AmiBlitz3.ab3@8253>    BHI.w illimmerr
000259F2 <AmiBlitz3.ab3@8254>   TST.l D3
000259F6 <AmiBlitz3.ab3@8255>    BEQ.w illimmerr
000259FA <AmiBlitz3.ab3@8256>   ANDI.w #$7,D3
000259FC <AmiBlitz3.ab3@8257>   LSL.w #8,D3
000259FE <AmiBlitz3.ab3@8258>   LSL.w #1,D3
00025A00 <AmiBlitz3.ab3@8259>   OR.w D3,-(A1)
00025A04 <AmiBlitz3.ab3@8260>  BRA.w 'next
00025A08 <AmiBlitz3.ab3@8263>    BSR.w chkbyte
00025A0A <AmiBlitz3.ab3@8264>   MOVE.b D3,-(A1)
00025A0C <AmiBlitz3.ab3@8267>   MOVEA.l (A2),A2
00025A10 <AmiBlitz3.ab3@8268>  BRA.w 'loop
00025A16 <AmiBlitz3.ab3@8271>   CLR.w constmode
00025A1C <AmiBlitz3.ab3@8274>   CLR.b curtemplabel
00025A1E <AmiBlitz3.ab3@8275> RTS
00025A20 <AmiBlitz3.ab3@8284>   BTST D3,D6
00025A24 <AmiBlitz3.ab3@8285>    BEQ.w illeaerr
00025A28 <AmiBlitz3.ab3@8286>    BSR.w makemode
00025A2C <AmiBlitz3.ab3@8287>   CMP.w #$7,D3
00025A30 <AmiBlitz3.ab3@8288>    BCS.w 'skip
00025A32 <AmiBlitz3.ab3@8289>   MOVE.w D3,D2
00025A34 <AmiBlitz3.ab3@8290>   SUBQ.w #7,D2
00025A38 <AmiBlitz3.ab3@8291>   CMP.w #$5,D2
00025A3C <AmiBlitz3.ab3@8292>    BCS.w 'skip0
00025A3E <AmiBlitz3.ab3@8293>   MOVEQ.l #$04,D2
00025A40 <AmiBlitz3.ab3@8296>   MOVEQ.l #$07,D3
00025A42 <AmiBlitz3.ab3@8299>   MOVE.b D7,D0
00025A46 <AmiBlitz3.ab3@8300>   ANDI.w #$F,D0
00025A4A <AmiBlitz3.ab3@8301>   CMP.w #$F,D0
00025A4E <AmiBlitz3.ab3@8302>    BEQ.w 'skip2
00025A50 <AmiBlitz3.ab3@8303>   LSL.w D0,D3
00025A52 <AmiBlitz3.ab3@8304>   OR.w D3,D1
00025A54 <AmiBlitz3.ab3@8307>   LSR.w #4,D7
00025A58 <AmiBlitz3.ab3@8308>   ANDI.w #$F,D7
00025A5C <AmiBlitz3.ab3@8309>   CMP.w #$F,D7
00025A60 <AmiBlitz3.ab3@8310>    BEQ.w 'skip3
00025A62 <AmiBlitz3.ab3@8311>   LSL.w D7,D2
00025A64 <AmiBlitz3.ab3@8312>   OR.w D2,D1
00025A66 <AmiBlitz3.ab3@8315> RTS
00025A6C <AmiBlitz3.ab3@8319>   CMP.l #$7F,D3
00025A70 <AmiBlitz3.ab3@8320>    BGT.w illdiserr
00025A76 <AmiBlitz3.ab3@8321>   CMP.l #$FFFFFF80,D3                                      ;#-128,d3 org source
00025A7A <AmiBlitz3.ab3@8322>    BLT.w illdiserr
00025A7C <AmiBlitz3.ab3@8323> RTS
00025A82 <AmiBlitz3.ab3@8327>   CMP.l #$7fff,D3
00025A86 <AmiBlitz3.ab3@8328>    BGT.w illdiserr
00025A8C <AmiBlitz3.ab3@8329>   CMP.l #$FFFF8000,D3                                      ;#-32768,d3 org source
00025A90 <AmiBlitz3.ab3@8330>    BLT.w illdiserr
00025A92 <AmiBlitz3.ab3@8331> RTS
00025A94 <AmiBlitz3.ab3@8336>   MOVE.b (a5)+,d0
00025A96 <AmiBlitz3.ab3@8337>   CMP.b d1,d0
00025A9A <AmiBlitz3.ab3@8338>   BEQ 'll10
00025A9C <AmiBlitz3.ab3@8339>   TST.b d0
00025AA0 <AmiBlitz3.ab3@8340>   BNE 'll20
00025AA2 <AmiBlitz3.ab3@8343>   SUBQ #1,a5
00025AA4 <AmiBlitz3.ab3@8344> RTS
00025AA6 <AmiBlitz3.ab3@8349>   MOVE.b (a5)+,d0
00025AAA <AmiBlitz3.ab3@8350>   CMP.b #",",d0
00025AAE <AmiBlitz3.ab3@8351>   BEQ 'll10
00025AB2 <AmiBlitz3.ab3@8352>   CMP.b #";",d0
00025AB6 <AmiBlitz3.ab3@8353>   BEQ 'll10
00025ABA <AmiBlitz3.ab3@8354>  CMP.b #":",d0
00025ABE <AmiBlitz3.ab3@8355>   BEQ 'll10
00025AC0 <AmiBlitz3.ab3@8358>   TST.b d0
00025AC4 <AmiBlitz3.ab3@8359>   BNE 'll20
00025AC6 <AmiBlitz3.ab3@8362>   SUBQ #1,a5
00025AC8 <AmiBlitz3.ab3@8363> RTS
00025ACA <AmiBlitz3.ab3@8367>   ADD.l a2,d1
00025AD0 <AmiBlitz3.ab3@8368>   LEA tempspace,a1
00025AD2 <AmiBlitz3.ab3@8369>   MOVE.l d1,a0
00025AD4 <AmiBlitz3.ab3@8372>   MOVE.b (a0)+,(a1)+
00025AD8 <AmiBlitz3.ab3@8373>   BNE.s 'l10
00025ADA <AmiBlitz3.ab3@8374>   SUBQ.l #1,a0
00025ADC <AmiBlitz3.ab3@8375>   SUBQ.l #1,a1
00025ADE <AmiBlitz3.ab3@8378>   MOVE.b (a5)+,(a1)+
00025AE2 <AmiBlitz3.ab3@8379>   BNE.s 'l20
00025AE4 <AmiBlitz3.ab3@8380>   CLR.b (a1)
00025AEA <AmiBlitz3.ab3@8381>   LEA tempspace,a5
00025AEC <AmiBlitz3.ab3@8382> RTS
00025AF0 <AmiBlitz3.ab3@8386>   MOVEM.l D1-D2/A0,-(A7)
00025AF2 <AmiBlitz3.ab3@8387>   MOVE.l d0,d2
00025AF4 <AmiBlitz3.ab3@8388>   MOVEQ #0,d1
00025AF6 <AmiBlitz3.ab3@8389>   MOVE.l a5,a4
00025AF8 <AmiBlitz3.ab3@8392>   ADDQ.l #1,d1
00025AFA <AmiBlitz3.ab3@8393>   MOVE.b (a5)+,d0
00025AFE <AmiBlitz3.ab3@8394>   CMP.b #",",d0
00025B02 <AmiBlitz3.ab3@8395>   BEQ 'll10
00025B06 <AmiBlitz3.ab3@8396>   CMP.b #";",d0
00025B0A <AmiBlitz3.ab3@8397>   BEQ 'll10
00025B0E <AmiBlitz3.ab3@8398>   CMP.b #":",d0
00025B12 <AmiBlitz3.ab3@8399>   BEQ 'll10
00025B16 <AmiBlitz3.ab3@8400>   CMP.b #"(",d0
00025B1A <AmiBlitz3.ab3@8401>   BEQ 'll10
00025B1C <AmiBlitz3.ab3@8402>   TST.b d0
00025B20 <AmiBlitz3.ab3@8403>   BNE 'll20
00025B22 <AmiBlitz3.ab3@8406>   SUBQ #1,a5
00025B26 <AmiBlitz3.ab3@8407>   CMP.b #"'",(a4)
00025B2A <AmiBlitz3.ab3@8408>   BEQ 'llocal
00025B30 <AmiBlitz3.ab3@8409>   TST.w inmacro
00025B34 <AmiBlitz3.ab3@8410>   BNE 'lmacro
00025B36 <AmiBlitz3.ab3@8411>   MOVEQ.l #$14+4,D0
00025B38 <AmiBlitz3.ab3@8412>   ADD.l d1,d0
00025B3A <AmiBlitz3.ab3@8413>   MOVE.l d1,-(a7)
00025B3C <AmiBlitz3.ab3@8414>   MOVEQ.l #$01,D1
00025B42 <AmiBlitz3.ab3@8415>   MOVEA.l _execbase,A6
00025B48 <AmiBlitz3.ab3@8416>   MOVE.l mempool2,a0
00025B4C <AmiBlitz3.ab3@8417>   JSR _AllocPooled(a6)
00025B4E <AmiBlitz3.ab3@8419>   MOVE.l (a7)+,d1
00025B50 <AmiBlitz3.ab3@8420>   TST.l d0
00025B54 <AmiBlitz3.ab3@8421>   BEQ nomemory
00025B56 <AmiBlitz3.ab3@8422>   MOVEA.l D0,A0
00025B5E <AmiBlitz3.ab3@8424>   MOVE.w linenumat+2,$A(A0)
00025B64 <AmiBlitz3.ab3@8426>   MOVE.l templabel,(A0)
00025B6A <AmiBlitz3.ab3@8427>   MOVE.l A0,templabel
00025B72 <AmiBlitz3.ab3@8428>   MOVE.l destpointer,$4(A0)
00025B76 <AmiBlitz3.ab3@8429>   MOVE.l d2,$8(A0)
00025B7A <AmiBlitz3.ab3@8430>   LEA $E(A0),A0
00025B7E <AmiBlitz3.ab3@8431>   MOVE.b #$14,(A0)+
00025B80 <AmiBlitz3.ab3@8432>   CLR.b (a0)+
00025B82 <AmiBlitz3.ab3@8434>   MOVE.l a0,d2
00025B84 <AmiBlitz3.ab3@8435>   ADDQ.l #4,d2
00025B86 <AmiBlitz3.ab3@8436>   MOVE.l d2,(a0)+
00025B88 <AmiBlitz3.ab3@8439>   MOVE.b (a4)+,(a0)+
00025B8A <AmiBlitz3.ab3@8440>   SUBQ.l #1,d1
00025B8E <AmiBlitz3.ab3@8441>   BNE 'lc1
00025B90 <AmiBlitz3.ab3@8442>   CLR.b (a0)+
00025B96 <AmiBlitz3.ab3@8443>   MOVE.w linenumat,(a0)
00025B9A <AmiBlitz3.ab3@8444>   MOVEM.l (A7)+,D1-D2/A0
00025B9C <AmiBlitz3.ab3@8445>  RTS
00025B9E <AmiBlitz3.ab3@8448>   MOVEQ.l #$10+2,D0
00025BA0 <AmiBlitz3.ab3@8449>   ADD.l d1,d0
00025BA4 <AmiBlitz3.ab3@8450>   MOVEM.l a4/d3,-(a7)
00025BA6 <AmiBlitz3.ab3@8451>   MOVE.l d1,d3
00025BA8 <AmiBlitz3.ab3@8452>   MOVEQ.l #$01,D1
00025BAE <AmiBlitz3.ab3@8453>   MOVEA.l _execbase,A6
00025BB4 <AmiBlitz3.ab3@8454>   MOVE.l mempool2,a0
00025BB8 <AmiBlitz3.ab3@8455>   JSR _AllocPooled(a6)
00025BBA <AmiBlitz3.ab3@8457>   TST.l d0
00025BBE <AmiBlitz3.ab3@8458>   BEQ nomemory
00025BC0 <AmiBlitz3.ab3@8459>   MOVEA.l D0,A0
00025BC8 <AmiBlitz3.ab3@8462>   MOVE.w linenumat+2,$C(A0)
00025BCE <AmiBlitz3.ab3@8463>   MOVE.l templabel,(A0)
00025BD4 <AmiBlitz3.ab3@8464>   MOVE.l A0,templabel
00025BDC <AmiBlitz3.ab3@8465>   MOVE.l destpointer,$4(A0)
00025BE0 <AmiBlitz3.ab3@8466>   MOVE.l d2,$8(A0)
00025BE4 <AmiBlitz3.ab3@8467>   LEA $E(A0),A0
00025BE6 <AmiBlitz3.ab3@8468>   MOVE.b d3,(A0)+
00025BEC <AmiBlitz3.ab3@8469>   ADD.b #$10,-1(a0)
00025BF0 <AmiBlitz3.ab3@8470>   MOVE.b #$1,(a0)+
00025BF2 <AmiBlitz3.ab3@8471>   SUBQ.w #1,d3
00025BF4 <AmiBlitz3.ab3@8474>   MOVE.b (a4)+,(a0)+
00025BF6 <AmiBlitz3.ab3@8475>   SUBQ.l #1,d3
00025BFA <AmiBlitz3.ab3@8476>   BNE.s 'lm2
00025BFC <AmiBlitz3.ab3@8477>   CLR.b (a0)+
00025C02 <AmiBlitz3.ab3@8478>   MOVE.w linenumat,(a0)
00025C06 <AmiBlitz3.ab3@8479>   MOVEM.l (a7)+,d3/a4
00025C0A <AmiBlitz3.ab3@8480>   MOVEM.l (A7)+,D1-D2/A0
00025C0C <AmiBlitz3.ab3@8481>  RTS
00025C12 <AmiBlitz3.ab3@8484>   LEA lastgloballabel,a1
00025C14 <AmiBlitz3.ab3@8487>   ADDQ.l #1,d1
00025C16 <AmiBlitz3.ab3@8488>   TST.b (a1)+
00025C1A <AmiBlitz3.ab3@8489>   BNE.s 'll11
00025C1C <AmiBlitz3.ab3@8490>   MOVEQ.l #$10+2,D0
00025C1E <AmiBlitz3.ab3@8491>   ADD.l d1,d0
00025C22 <AmiBlitz3.ab3@8492>   MOVEM.l a4/d3,-(a7)
00025C24 <AmiBlitz3.ab3@8493>   MOVE.l d1,d3
00025C26 <AmiBlitz3.ab3@8494>   MOVEQ.l #$01,D1
00025C2C <AmiBlitz3.ab3@8495>   MOVEA.l _execbase,A6
00025C32 <AmiBlitz3.ab3@8496>   MOVE.l mempool2,a0
00025C36 <AmiBlitz3.ab3@8497>   JSR _AllocPooled(a6)
00025C38 <AmiBlitz3.ab3@8499>   TST.l d0
00025C3C <AmiBlitz3.ab3@8500>   BEQ nomemory
00025C3E <AmiBlitz3.ab3@8501>   MOVEA.l D0,A0
00025C46 <AmiBlitz3.ab3@8504>   MOVE.w linenumat+2,$C(A0)
00025C4C <AmiBlitz3.ab3@8505>   MOVE.l templabel,(A0)
00025C52 <AmiBlitz3.ab3@8506>   MOVE.l A0,templabel
00025C5A <AmiBlitz3.ab3@8507>   MOVE.l destpointer,$4(A0)
00025C5E <AmiBlitz3.ab3@8508>   MOVE.l d2,$8(A0)
00025C62 <AmiBlitz3.ab3@8509>   LEA $E(A0),A0
00025C64 <AmiBlitz3.ab3@8510>   MOVE.b d3,(A0)+
00025C6A <AmiBlitz3.ab3@8511>   ADD.b #$10,-1(a0)
00025C6E <AmiBlitz3.ab3@8512>   MOVE.b #$1,(a0)+
00025C70 <AmiBlitz3.ab3@8513>   SUBQ.w #1,d3
00025C76 <AmiBlitz3.ab3@8514>   LEA lastgloballabel,a1
00025C78 <AmiBlitz3.ab3@8517>   SUBQ.l #1,d3
00025C7A <AmiBlitz3.ab3@8518>   MOVE.b (a1)+,(a0)+
00025C7E <AmiBlitz3.ab3@8519>   BNE.s 'lm3
00025C80 <AmiBlitz3.ab3@8520>   SUBQ.l #1,a0
00025C82 <AmiBlitz3.ab3@8523>   MOVE.b (a4)+,(a0)+
00025C84 <AmiBlitz3.ab3@8524>   SUBQ.l #1,d3
00025C88 <AmiBlitz3.ab3@8525>   BNE.s 'lm1
00025C8A <AmiBlitz3.ab3@8526>   CLR.b (a0)+
00025C90 <AmiBlitz3.ab3@8527>   MOVE.w linenumat,(a0)
00025C94 <AmiBlitz3.ab3@8528>   MOVEM.l (a7)+,d3/a4
00025C98 <AmiBlitz3.ab3@8529>   MOVEM.l (A7)+,D1-D2/A0
00025C9A <AmiBlitz3.ab3@8530> RTS
00025CC4 <AmiBlitz3.ab3@8534>   !basic
00025D26 <AmiBlitz3.ab3@8535>   error{!TRANS{"No memory available!!!\\nAB3 will terminate due to low memory!"}}
00025D38 <AmiBlitz3.ab3@8536>   loop Delay_ 1
00025D3E <AmiBlitz3.ab3@8537> Goto loop
00025D42 <AmiBlitz3.ab3@8541>   MOVEM.l D0-D2/A0,-(A7)
00025D46 <AmiBlitz3.ab3@8542>   MOVE.w $E(A0),-(A7)
00025D4A <AmiBlitz3.ab3@8543>    BPL.w 'ok
00025D4C <AmiBlitz3.ab3@8544>   CLR.w (A7)
00025D4E <AmiBlitz3.ab3@8547>   MOVE.l A1,-(A7)
00025D50 <AmiBlitz3.ab3@8548>   MOVEQ.l #$10+2,D0
00025D56 <AmiBlitz3.ab3@8549>   ADD.w asmlen,D0
00025D58 <AmiBlitz3.ab3@8550>   MOVE.w D0,D2
00025D5A <AmiBlitz3.ab3@8551>   MOVEQ.l #$01,D1
00025D60 <AmiBlitz3.ab3@8552>   MOVEA.l _execbase,A6
00025D66 <AmiBlitz3.ab3@8553>   MOVE.l mempool2,a0
00025D6A <AmiBlitz3.ab3@8554>   JSR _AllocPooled(a6)
00025D6C <AmiBlitz3.ab3@8556>   MOVEA.l D0,A0
00025D74 <AmiBlitz3.ab3@8559>   MOVE.w linenumat+2,$C(A0)
00025D7A <AmiBlitz3.ab3@8560>   MOVE.l templabel,(A0)
00025D80 <AmiBlitz3.ab3@8561>   MOVE.l A0,templabel
00025D84 <AmiBlitz3.ab3@8562>   MOVE.l (A7),$4(A0)
00025D88 <AmiBlitz3.ab3@8563>   MOVE.w d3,$8(A0)
00025D8E <AmiBlitz3.ab3@8564>   MOVE.w $4(A7),$A(A0)
00025D92 <AmiBlitz3.ab3@8565>   LEA $E(A0),A0
00025D94 <AmiBlitz3.ab3@8566>   MOVE.b D2,(A0)+                                           ;length
00025D9A <AmiBlitz3.ab3@8567>   MOVEA.l asmbuff,A1
00025D9C <AmiBlitz3.ab3@8568>   ADDQ.w #1,A1
00025D9E <AmiBlitz3.ab3@8569>   MOVE.b (A1)+,(A0)+                                        ;type - 0 = indirect,else direct
00025DA2 <AmiBlitz3.ab3@8570>    BNE.w 'loop
00025DA4 <AmiBlitz3.ab3@8571>   MOVE.l (A1)+,(A0)+
00025DAA <AmiBlitz3.ab3@8572>   MOVE.w linenumat,(a0)
00025DAE <AmiBlitz3.ab3@8573>  BRA.w 'loopdone
00025DB0 <AmiBlitz3.ab3@8576>    MOVE.b (A1)+,(A0)+
00025DB4 <AmiBlitz3.ab3@8577>    BNE.w 'loop
00025DBA <AmiBlitz3.ab3@8578>    MOVE.w linenumat,(a0)
00025DBC <AmiBlitz3.ab3@8581>   MOVEA.l (A7)+,A1
00025DBE <AmiBlitz3.ab3@8582>   ADDQ.w #2,A7
00025DC2 <AmiBlitz3.ab3@8583>   MOVEM.l (A7)+,D0-D2/A0
00025DC4 <AmiBlitz3.ab3@8584> RTS
00025DC8 <AmiBlitz3.ab3@8588>   CMP.w #$5,D3
00025DCC <AmiBlitz3.ab3@8589>    BCS.w 'done
00025DD0 <AmiBlitz3.ab3@8590>   CMP.w #$B,D3
00025DD4 <AmiBlitz3.ab3@8591>    BHI.w 'done2
00025DD8 <AmiBlitz3.ab3@8592>    BEQ.w 'imm
00025DDC <AmiBlitz3.ab3@8593>    BSR.w insasm
00025DE0 <AmiBlitz3.ab3@8594>   CMP.w #$5,D3
00025DE4 <AmiBlitz3.ab3@8595>    BEQ.w 'word
00025DE8 <AmiBlitz3.ab3@8596>   CMP.w #$6,D3
00025DEC <AmiBlitz3.ab3@8597>    BEQ.w 'dxi
00025DF0 <AmiBlitz3.ab3@8598>   CMP.w #$7,D3
00025DF4 <AmiBlitz3.ab3@8599>    BEQ.w 'word
00025DF8 <AmiBlitz3.ab3@8600>   CMP.w #$8,D3
00025DFC <AmiBlitz3.ab3@8601>    BEQ.w 'long
00025E00 <AmiBlitz3.ab3@8602>   CMP.w #$9,D3
00025E04 <AmiBlitz3.ab3@8603>    BEQ.w 'word
00025E0A <AmiBlitz3.ab3@8607>   CMPA.l destbufferend,A1
00025E0E <AmiBlitz3.ab3@8608>    BCS.w 'ok7
00025E10 <AmiBlitz3.ab3@8609>   ADDQ.w #2,A1
00025E12 <AmiBlitz3.ab3@8610>  RTS
00025E14 <AmiBlitz3.ab3@8613>   MOVE.w D4,(A1)+
00025E16 <AmiBlitz3.ab3@8614>  RTS
00025E1E <AmiBlitz3.ab3@8617>   CMPI.w #$8,asmsize
00025E22 <AmiBlitz3.ab3@8618>    BCC.w 'immlong
00025E24 <AmiBlitz3.ab3@8619>   MOVEQ.l #$10,D3
00025E28 <AmiBlitz3.ab3@8620>    BSR.w insasm
00025E2A <AmiBlitz3.ab3@8621>   MOVEQ.l #$0B,D3
00025E2E <AmiBlitz3.ab3@8622>  BRA.w 'word
00025E32 <AmiBlitz3.ab3@8625>   BSR.w insasm
00025E34 <AmiBlitz3.ab3@8628>   ADDQ.w #2,A1
00025E36 <AmiBlitz3.ab3@8631>   ADDQ.w #2,A1
00025E38 <AmiBlitz3.ab3@8632>  RTS
00025E3C <AmiBlitz3.ab3@8635>   CMP.w #$F,D3
00025E40 <AmiBlitz3.ab3@8636>    BNE.w 'done
00025E46 <AmiBlitz3.ab3@8637>   CMPA.l destbufferend,A1
00025E4A <AmiBlitz3.ab3@8638>    BCS.w 'ok3
00025E4C <AmiBlitz3.ab3@8639>   ADDQ.w #2,A1
00025E4E <AmiBlitz3.ab3@8640>   ADDQ.w #4,A7
00025E50 <AmiBlitz3.ab3@8641>  RTS
00025E52 <AmiBlitz3.ab3@8644>   MOVE.w D2,(A1)+
00025E54 <AmiBlitz3.ab3@8645>   ADDQ.w #4,A7
00025E56 <AmiBlitz3.ab3@8648> RTS
00025E5A <AmiBlitz3.ab3@8657>   BSR.w storeloc
00025E64 <AmiBlitz3.ab3@8659>   MOVE.l linenumat,oldline
00025E66 <AmiBlitz3.ab3@8661>   MOVEQ.l #$00,D1
00025E6A <AmiBlitz3.ab3@8662>    BSR.w get1bytemain    ;eol?
00025E6E <AmiBlitz3.ab3@8663>    BEQ.w 'done
00025E70 <AmiBlitz3.ab3@8664>   MOVEQ.l #$00,D3
00025E74 <AmiBlitz3.ab3@8665>  BRA.w 'skiphelp
00025E78 <AmiBlitz3.ab3@8668>    BSR.w get1bytemain
00025E7C <AmiBlitz3.ab3@8669>    BNE.w 'skip
00025E7E <AmiBlitz3.ab3@8673>   TST.w D3
00025E82 <AmiBlitz3.ab3@8674>    BNE.w brackets_                                         ;syntax error brackets
00025E86 <AmiBlitz3.ab3@8675>  BRA.w 'done2
00025E8C <AmiBlitz3.ab3@8678>    MOVE.w instringon,D4
00025E90 <AmiBlitz3.ab3@8681>     BEQ 'skiphelp
00025E92 <AmiBlitz3.ab3@8684>     MOVEQ #0,d0
00025E94 <AmiBlitz3.ab3@8685>      MOVE.b (a5)+,d0                                       ;fix "ue"
00025E9A <AmiBlitz3.ab3@8686>      MOVE.w d0,lastchar
00025E9E <AmiBlitz3.ab3@8687>      BEQ 'ready
00025EA2 <AmiBlitz3.ab3@8688>      CMP.b #$22,d0
00025EA6 <AmiBlitz3.ab3@8689>      BNE 'l1
00025EAC <AmiBlitz3.ab3@8690>      NOT.w instringon
00025EB0 <AmiBlitz3.ab3@8691>  BRA 'loop
00025EB4 <AmiBlitz3.ab3@8696>            CMP.b #"@",d0                                   ;expand line @@ 1. for parameter
00025EB8 <AmiBlitz3.ab3@8697>            BNE 'l10
00025EBC <AmiBlitz3.ab3@8698>            CMP.b #"@",(a5)
00025EC0 <AmiBlitz3.ab3@8699>            BNE 'l10
00025EC6 <AmiBlitz3.ab3@8702>            TST.w ininclude
00025ECA <AmiBlitz3.ab3@8703>            BNE 'inc
00025ED0 <AmiBlitz3.ab3@8704>            MOVE.l sourceline3,a5
00025ED6 <AmiBlitz3.ab3@8705>            CMP.l #0,a5
00025EDA <AmiBlitz3.ab3@8706>            BNE 'l11t
00025EE0 <AmiBlitz3.ab3@8707>            MOVEA.l sourceline,A5
00025EE2 <AmiBlitz3.ab3@8710>            MOVEA.l (A5),A5
00025EE8 <AmiBlitz3.ab3@8711>            CMP.l #0,a5
00025EEC <AmiBlitz3.ab3@8712>            BEQ 'done2
00025EF2 <AmiBlitz3.ab3@8713>            MOVE.l a5,sourceline3
00025EF6 <AmiBlitz3.ab3@8714>            LEA $9(A5),A5
00025EFA <AmiBlitz3.ab3@8715>   BRA 'l11
00025EFC <AmiBlitz3.ab3@8718>            ADDQ.l #1,a5
00025EFE <AmiBlitz3.ab3@8719>            TST.b (a5)
00025F02 <AmiBlitz3.ab3@8720>            BNE 'inc
00025F04 <AmiBlitz3.ab3@8724>            ADDQ.l #1,a5
00025F06 <AmiBlitz3.ab3@8725>            TST.b (a5)
00025F0A <AmiBlitz3.ab3@8726>            BEQ illeolerr
00025F0C <AmiBlitz3.ab3@8727>            MOVE.l a5,-(a7)
00025F10 <AmiBlitz3.ab3@8730>       CMP.b #" ",(a5)+
00025F14 <AmiBlitz3.ab3@8731>       BEQ 'l110
00025F1A <AmiBlitz3.ab3@8732>        CMP.b #";",-1(a5)
00025F1C <AmiBlitz3.ab3@8733>        MOVE.l (a7)+,a5
00025F20 <AmiBlitz3.ab3@8734>        BEQ 'l111
00025F24 <AmiBlitz3.ab3@8735>   BRA 'loop
00025F28 <AmiBlitz3.ab3@8739>    CMP.w #$29,D0      ;')'
00025F2C <AmiBlitz3.ab3@8740>    BNE.w 'skip2
00025F2E <AmiBlitz3.ab3@8741>   TST.w D3
00025F32 <AmiBlitz3.ab3@8742>    BEQ.w 'done2
00025F34 <AmiBlitz3.ab3@8745>   SUBQ.w #1,D3
00025F38 <AmiBlitz3.ab3@8746>  BRA.w 'loop
00025F3C <AmiBlitz3.ab3@8749>    CMP.w #$7D,D0      ;'}'
00025F40 <AmiBlitz3.ab3@8750>    BEQ.w 'skip3
00025F44 <AmiBlitz3.ab3@8751>   CMP.w #$28,D0       ;'('
00025F48 <AmiBlitz3.ab3@8752>    BNE.w 'skip4a
00025F4A <AmiBlitz3.ab3@8755>    ADDQ.w #1,D3
00025F4E <AmiBlitz3.ab3@8756>  BRA.w 'loop
00025F52 <AmiBlitz3.ab3@8759>   CMP.w #$7B,D0        ;'{'
00025F56 <AmiBlitz3.ab3@8760>    BEQ.w 'skip4
00025F5A <AmiBlitz3.ab3@8761>   CMP.w #$2C,D0        ;','
00025F5E <AmiBlitz3.ab3@8762>    BNE.w 'loop
00025F60 <AmiBlitz3.ab3@8763>   TST.w D3
00025F64 <AmiBlitz3.ab3@8764>    BNE.w 'loop
00025F66 <AmiBlitz3.ab3@8765>   ADDQ.w #1,D1
00025F6A <AmiBlitz3.ab3@8766>  BRA.w 'loop
00025F6C <AmiBlitz3.ab3@8769>   ADDQ.w #1,D1
00025F72 <AmiBlitz3.ab3@8773>   CLR.l sourceline3
00025F7C <AmiBlitz3.ab3@8774>   MOVE.l oldline,linenumat
00025F80 <AmiBlitz3.ab3@8776> BRA.w resloc
00025F86 <AmiBlitz3.ab3@8789>    CLR.w numreps
00025F88 <AmiBlitz3.ab3@8790>   MOVE.w D1,D0
00025F8C <AmiBlitz3.ab3@8791>   ANDI.w #$FF00,D0
00025F90 <AmiBlitz3.ab3@8792>    BEQ.w 'noreps
00025F92 <AmiBlitz3.ab3@8793>   LSR.w #8,D0
00025F94 <AmiBlitz3.ab3@8794>   LSR.w #4,D0           ;d0= start of reps
00025F98 <AmiBlitz3.ab3@8795>    BEQ.w 'skip
00025F9A <AmiBlitz3.ab3@8796>   SUB.b D0,D1           ;new number to fetch
00025FA4 <AmiBlitz3.ab3@8798>    MOVE.w regnum,regnumfunc
00025FAA <AmiBlitz3.ab3@8799>    MOVE.b funcparloop,-(a7)
00025FB2 <AmiBlitz3.ab3@8800>    MOVE.b #0,funcparloop
00025FB8 <AmiBlitz3.ab3@8801>    MOVE.l leftsidetype,-(a7)
00025FBE <AmiBlitz3.ab3@8802>    MOVE.l rightsidetype,-(a7)
00025FC4 <AmiBlitz3.ab3@8803>    MOVE.w leftsideflagmask,-(a7)
00025FCA <AmiBlitz3.ab3@8804>    MOVE.w rightsideflagmask,-(a7)
00025FD0 <AmiBlitz3.ab3@8805>    CLR.l leftsidetype
00025FD6 <AmiBlitz3.ab3@8806>    CLR.l rightsidetype
00025FDC <AmiBlitz3.ab3@8807>    CLR.w leftsideflagmask
00025FE2 <AmiBlitz3.ab3@8808>    CLR.w rightsideflagmask
00025FE8 <AmiBlitz3.ab3@8809>    MOVE.b blitzparloop,-(a7)
00025FF0 <AmiBlitz3.ab3@8810>    MOVE.b #1,blitzparloop
00025FF4 <AmiBlitz3.ab3@8812>    BSR.w fetchpees2      ;fetch first parms
00025FFA <AmiBlitz3.ab3@8814>    MOVE.b (a7)+,blitzparloop
00026000 <AmiBlitz3.ab3@8815>    MOVE.w (a7)+,rightsideflagmask
00026006 <AmiBlitz3.ab3@8816>    MOVE.w (a7)+,leftsideflagmask
0002600C <AmiBlitz3.ab3@8817>    MOVE.l (a7)+,rightsidetype
00026012 <AmiBlitz3.ab3@8818>    MOVE.l (a7)+,leftsidetype
00026018 <AmiBlitz3.ab3@8819>    MOVE.b (a7)+,funcparloop
0002601C <AmiBlitz3.ab3@8821>   CMP.w #$2C,D0          ;','
00026020 <AmiBlitz3.ab3@8822>    BNE.w syntaxerr
00026022 <AmiBlitz3.ab3@8827>   MOVE.w D1,D2
00026024 <AmiBlitz3.ab3@8828>   LSR.w #8,D2
00026028 <AmiBlitz3.ab3@8829>   ANDI.w #$7,D2         ;# repeatable....
0002602A <AmiBlitz3.ab3@8832>    CMP.b D2,D1
0002602E <AmiBlitz3.ab3@8833>    BCS.w 'repsdone      ;all reps done....
00026030 <AmiBlitz3.ab3@8834>   SUB.b D2,D1
00026034 <AmiBlitz3.ab3@8835>   MOVEM.l D2/A2,-(A7)
00026036 <AmiBlitz3.ab3@8836>   MOVE.w D2,D0
0002603C <AmiBlitz3.ab3@8838>   MOVE.b funcparloop,-(a7)
00026044 <AmiBlitz3.ab3@8839>   MOVE.b #0,funcparloop
0002604A <AmiBlitz3.ab3@8840>   MOVE.l leftsidetype,-(a7)
00026050 <AmiBlitz3.ab3@8841>   MOVE.l rightsidetype,-(a7)
00026056 <AmiBlitz3.ab3@8842>   MOVE.w leftsideflagmask,-(a7)
0002605C <AmiBlitz3.ab3@8843>   MOVE.w rightsideflagmask,-(a7)
00026062 <AmiBlitz3.ab3@8844>   CLR.l leftsidetype
00026068 <AmiBlitz3.ab3@8845>   CLR.l rightsidetype
0002606E <AmiBlitz3.ab3@8846>   CLR.w leftsideflagmask
00026074 <AmiBlitz3.ab3@8847>   CLR.w rightsideflagmask
0002607A <AmiBlitz3.ab3@8848>   MOVE.b blitzparloop,-(a7)
00026082 <AmiBlitz3.ab3@8849>   MOVE.b #1,blitzparloop
00026086 <AmiBlitz3.ab3@8851>   BSR.w fetchpees4
0002608C <AmiBlitz3.ab3@8853>   MOVE.b (a7)+,blitzparloop
00026092 <AmiBlitz3.ab3@8854>   MOVE.w (a7)+,rightsideflagmask
00026098 <AmiBlitz3.ab3@8855>   MOVE.w (a7)+,leftsideflagmask
0002609E <AmiBlitz3.ab3@8856>   MOVE.l (a7)+,rightsidetype
000260A4 <AmiBlitz3.ab3@8857>   MOVE.l (a7)+,leftsidetype
000260AA <AmiBlitz3.ab3@8858>   MOVE.b (a7)+,funcparloop
000260AE <AmiBlitz3.ab3@8860>   MOVEM.l (A7)+,D2/A2
000260B4 <AmiBlitz3.ab3@8861>   ADDQ.w #1,numreps
000260B8 <AmiBlitz3.ab3@8862>  BRA.w 'rloop
000260BE <AmiBlitz3.ab3@8865>    MOVE.w numreps,D3
000260C2 <AmiBlitz3.ab3@8866>    BEQ.w syntaxerr
000260C4 <AmiBlitz3.ab3@8867>   ADDA.w D2,A2
000260C8 <AmiBlitz3.ab3@8868>   ANDI.w #$FF,D1
000260CC <AmiBlitz3.ab3@8869>    BEQ.w 'done
000260D0 <AmiBlitz3.ab3@8876>   CMP.w #$2C,D0       ;','
000260D4 <AmiBlitz3.ab3@8877>    BNE.w syntaxerr
000260D6 <AmiBlitz3.ab3@8880>    MOVE.w D1,D0
000260DA <AmiBlitz3.ab3@8881>    BNE.w 'fetchpees2b
000260DC <AmiBlitz3.ab3@8884>  RTS
000260E2 <AmiBlitz3.ab3@8888>   MOVE.b funcparloop,-(a7)
000260E8 <AmiBlitz3.ab3@8889>   MOVE.l leftsidetype,-(a7)
000260EE <AmiBlitz3.ab3@8890>   MOVE.l rightsidetype,-(a7)
000260F4 <AmiBlitz3.ab3@8891>   MOVE.w leftsideflagmask,-(a7)
000260FA <AmiBlitz3.ab3@8892>   MOVE.w rightsideflagmask,-(a7)
00026100 <AmiBlitz3.ab3@8893>   CLR.l leftsidetype
00026106 <AmiBlitz3.ab3@8894>   CLR.l rightsidetype
0002610C <AmiBlitz3.ab3@8895>   CLR.w leftsideflagmask
00026112 <AmiBlitz3.ab3@8896>   CLR.w rightsideflagmask
0002611A <AmiBlitz3.ab3@8897>   MOVE.b #0,funcparloop
00026120 <AmiBlitz3.ab3@8898>   MOVE.b blitzparloop,-(a7)
00026128 <AmiBlitz3.ab3@8899>   MOVE.b #1,blitzparloop
0002612C <AmiBlitz3.ab3@8900>   BSR.w fetchpees2
00026132 <AmiBlitz3.ab3@8901>   MOVE.b (a7)+,blitzparloop
00026138 <AmiBlitz3.ab3@8902>   MOVE.w (a7)+,rightsideflagmask
0002613E <AmiBlitz3.ab3@8903>   MOVE.w (a7)+,leftsideflagmask
00026144 <AmiBlitz3.ab3@8904>   MOVE.l (a7)+,rightsidetype
0002614A <AmiBlitz3.ab3@8905>   MOVE.l (a7)+,leftsidetype
00026150 <AmiBlitz3.ab3@8906>   MOVE.b (a7)+,funcparloop
00026152 <AmiBlitz3.ab3@8907> RTS
00026156 <AmiBlitz3.ab3@8911> ptype:    Dc.b $3F,$3C,$00,$00                             ;MOVE.W  #$0000,-(A7)
00026158 <AmiBlitz3.ab3@8914> partostack:  Ds.w 1                                        ;pmode org source
0002615A <AmiBlitz3.ab3@8918>   MOVEQ.l #$01,D2
0002615E <AmiBlitz3.ab3@8919> BRA.w fetchpees3
00026160 <AmiBlitz3.ab3@8922>   MOVEQ.l #$00,D2
00026164 <AmiBlitz3.ab3@8925>   ANDI.w #$F,D0
0002616A <AmiBlitz3.ab3@8933>   CLR.w parnum
0002616C <AmiBlitz3.ab3@8934>   MOVE.w D1,-(A7)
00026170 <AmiBlitz3.ab3@8935>   MOVE.w partostack(PC),-(A7)                              ;in case of recursion
00026176 <AmiBlitz3.ab3@8936>   MOVE.w D2,partostack
00026178 <AmiBlitz3.ab3@8937>   MOVE.w D0,-(A7)
0002617C <AmiBlitz3.ab3@8938>   CMP.w #"@@",(a5)                                        
00026180 <AmiBlitz3.ab3@8939>   BNE 'loop                                      ;was 'l15
00026186 <AmiBlitz3.ab3@8940>   TST.w ininclude                                          ;merge macrolines
0002618A <AmiBlitz3.ab3@8941>   BNE errorjoin
00026190 <AmiBlitz3.ab3@8942>        MOVEA.l sourceline,A5
00026192 <AmiBlitz3.ab3@8945>            MOVEA.l (A5),A5
00026198 <AmiBlitz3.ab3@8946>            MOVE.l a5,sourceline
0002619C <AmiBlitz3.ab3@8947>            LEA $9(A5),A5
000261A2 <AmiBlitz3.ab3@8948>            ADDQ.l #1,linenumat
000261A4 <AmiBlitz3.ab3@8951>   MOVE.b (A2)+,D2                                          ;parameterloop   d2=vartype
000261A8 <AmiBlitz3.ab3@8952>    BNE.w 'skip0
000261AE <AmiBlitz3.ab3@8953>   MOVE.w userp,D2                                          ;user selected type
000261B0 <AmiBlitz3.ab3@8956>    MOVE.l A2,-(A7)
000261B6 <AmiBlitz3.ab3@8957>    ADDQ.w #1,parnum
000261BC <AmiBlitz3.ab3@8958>    TST.b funccall
000261C0 <AmiBlitz3.ab3@8959>    BEQ 'skip0_l1
000261C8 <AmiBlitz3.ab3@8960>    CMP.w #6,parnum
000261CC <AmiBlitz3.ab3@8961>    BLE 'skip0_l1
000261D0 <AmiBlitz3.ab3@8962>    CMP.w #7,d2
000261D6 <AmiBlitz3.ab3@8968>    TST.b fpu
000261DA <AmiBlitz3.ab3@8969>    BEQ 'skip0_old
000261E0 <AmiBlitz3.ab3@8970>    TST.w regnumfunc
000261E4 <AmiBlitz3.ab3@8971>    BEQ 'skip0_old
000261EA <AmiBlitz3.ab3@8972>    CMP.w #$48e7,-4(a4)
000261EE <AmiBlitz3.ab3@8973>    BNE 'skip0_old
000261F0 <AmiBlitz3.ab3@8974>    MOVEQ #0,d1
000261F6 <AmiBlitz3.ab3@8975>    MOVE.w regnum,d1
000261FC <AmiBlitz3.ab3@8976>    CMP regnumfunc,d1                                       ;fpu reg function save
00026200 <AmiBlitz3.ab3@8977>    BGE 'skip0_old
00026202 <AmiBlitz3.ab3@8978>    ASL.w #7,d1
00026204 <AmiBlitz3.ab3@8979>    MOVE.l d0,-(a7)
0002620A <AmiBlitz3.ab3@8980>    MOVE.w regnumfunc,d0
00026210 <AmiBlitz3.ab3@8981>    CLR.w regmask
00026216 <AmiBlitz3.ab3@8984>    BSET d0,regmask
00026218 <AmiBlitz3.ab3@8985>    SUBQ #1,d0
0002621C <AmiBlitz3.ab3@8986>    BNE 'skip0_loop
0002621E <AmiBlitz3.ab3@8987>     MOVEQ #0,d0
00026224 <AmiBlitz3.ab3@8990>       BTST d0,regmask
00026228 <AmiBlitz3.ab3@8991>       BEQ 'skip0_noa7
0002622A <AmiBlitz3.ab3@8992>       MOVEQ #0,d1
0002622C <AmiBlitz3.ab3@8993>       MOVE.w d0,d1
0002622E <AmiBlitz3.ab3@8994>       SUBQ.w #1,d1
00026230 <AmiBlitz3.ab3@8995>       ASL #7,d1
00026236 <AmiBlitz3.ab3@8996>       OR.l #$f2277400,d1                                   ;fmove.d
0002623A <AmiBlitz3.ab3@8998>       BSR writelong
00026240 <AmiBlitz3.ab3@9000>       ADDQ.l #2,stacktrack
00026246 <AmiBlitz3.ab3@9001>       MOVE.l stacktrack,d1
0002624C <AmiBlitz3.ab3@9002>       CMP.l #180,d1
00026250 <AmiBlitz3.ab3@9003>       BGT conmemerr                                        ;formel too complex
00026252 <AmiBlitz3.ab3@9004>       MOVE.l a0,-(a7)
00026258 <AmiBlitz3.ab3@9005>       LEA fpustackbase,a0
00026260 <AmiBlitz3.ab3@9006>       MOVE.w regmask,0(a0,d1)
00026262 <AmiBlitz3.ab3@9007>       MOVE.l (a7)+,a0
00026264 <AmiBlitz3.ab3@9010>       ADDQ.w #1,d0
0002626A <AmiBlitz3.ab3@9011>       CMP.w regnumfunc,d0
0002626E <AmiBlitz3.ab3@9012>       BLE 'skip0_loop2
00026270 <AmiBlitz3.ab3@9015>       MOVE.l (a7)+,d0
00026276 <AmiBlitz3.ab3@9018>      MOVE.l currentfunccall,-(a7)
0002627C <AmiBlitz3.ab3@9019>      MOVE.w parnum,-(a7)
00026282 <AmiBlitz3.ab3@9020>      TST.l rightsidetype
00026286 <AmiBlitz3.ab3@9021>      BSR.w handlep
0002628C <AmiBlitz3.ab3@9022>      MOVE.w (a7)+,parnum
00026292 <AmiBlitz3.ab3@9024>    MOVE.l (a7)+,currentfunccall
00026298 <AmiBlitz3.ab3@9027>     TST.b typecheck                            ;typecheck for function call
0002629C <AmiBlitz3.ab3@9028>     BEQ 'notypecheck
000262A2 <AmiBlitz3.ab3@9029>     TST.b notypecheck
000262A6 <AmiBlitz3.ab3@9030>     BNE 'notypecheck
000262AC <AmiBlitz3.ab3@9031>     TST.b blitzparloop
000262B0 <AmiBlitz3.ab3@9032>     BNE 'isblitzlibcall                                    ;no typecheck for blitzlibs currently
000262BA <AmiBlitz3.ab3@9033>     CMP.l #0,currentfunccall
000262BE <AmiBlitz3.ab3@9034>     BEQ 'isblitzlibcall
000262C2 <AmiBlitz3.ab3@9035>     MOVEM.l a0/a1,-(a7)
000262C8 <AmiBlitz3.ab3@9036>     MOVE.l currentfunccall,a0
000262CE <AmiBlitz3.ab3@9037>     MOVE.w parnum,d1
000262D4 <AmiBlitz3.ab3@9038>     TST.b isconstantvalue
000262D8 <AmiBlitz3.ab3@9039>     BEQ 'noconstant
000262E2 <AmiBlitz3.ab3@9040>     CMP.l #0,lastconstantvalue
000262E6 <AmiBlitz3.ab3@9041>     BEQ 'isnull
000262EA <AmiBlitz3.ab3@9044>     MOVE.l funcstruct_parametertype-4(a0,d1*4),a0
000262F0 <AmiBlitz3.ab3@9045>     CMP.l #0,a0
000262F4 <AmiBlitz3.ab3@9046>     BEQ 'notype
000262FC <AmiBlitz3.ab3@9047>     CMP.l #$100,4(a0)
00026300 <AmiBlitz3.ab3@9048>     BLE 'notype
00026306 <AmiBlitz3.ab3@9049>     MOVE.l lasttoken,d1
0002630A <AmiBlitz3.ab3@9050>     CMP.w #NullTokenID,d1                   ;$b581 ok, when token for null
0002630E <AmiBlitz3.ab3@9051>     BEQ 'isnull
00026314 <AmiBlitz3.ab3@9052>     TST.l typetocast
00026318 <AmiBlitz3.ab3@9053>     BEQ 'nocast
0002631E <AmiBlitz3.ab3@9054>     MOVE.l typetocast,a1
00026322 <AmiBlitz3.ab3@9055>     BRA 'typecheck
00026328 <AmiBlitz3.ab3@9058>     MOVE.l rightsidetype,a1
0002632E <AmiBlitz3.ab3@9059>     CMP.l #0,a1
00026332 <AmiBlitz3.ab3@9060>     BEQ 'notype
0002633A <AmiBlitz3.ab3@9062>   'typecheck   CMP.l #$100,4(a1)
0002633C <AmiBlitz3.ab3@9064>     CMP.l a0,a1
00026340 <AmiBlitz3.ab3@9065>     BEQ 'ok
00026348 <AmiBlitz3.ab3@9067>     CMP.l #$100,4(a1)                 ; is a type here
0002634C <AmiBlitz3.ab3@9068>     BLE 'error
00026350 <AmiBlitz3.ab3@9069>     MOVE.l 4(a1),a1                   ; load the address of type.
00026354 <AmiBlitz3.ab3@9070>     CMP.l $a(a1),a0                   ; check if the bigger type contain in first place same type as the function need
00026358 <AmiBlitz3.ab3@9071>     BEQ 'ok
0002635E <AmiBlitz3.ab3@9074>    JMP error_convert_types            ; for syntax 4
00026364 <AmiBlitz3.ab3@9079>     CLR.l typetocast
00026368 <AmiBlitz3.ab3@9080>     MOVEM.l (a7)+,a0/a1
0002636E <AmiBlitz3.ab3@9086>    CLR.l lastfunction
00026374 <AmiBlitz3.ab3@9087>    TST.b fpu
00026378 <AmiBlitz3.ab3@9088>    BEQ 'skip0_noprint
0002637A <AmiBlitz3.ab3@9089>   MOVE.l (a7),a2
0002637C <AmiBlitz3.ab3@9090>   ADDQ.l #1,a2
00026380 <AmiBlitz3.ab3@9091>    CMP.b #5,d2
00026384 <AmiBlitz3.ab3@9092>   BNE 'skip0_noprint
0002638A <AmiBlitz3.ab3@9093>   CMP.b #$5d,24(a2)
0002638E <AmiBlitz3.ab3@9094>   BNE 'skip0_noprint
00026394 <AmiBlitz3.ab3@9095>   CMP.b #$81,25(a2)
00026398 <AmiBlitz3.ab3@9096>   BLT 'skip0_noprint
0002639E <AmiBlitz3.ab3@9097>   CMP.b #$86,25(a2)
000263A2 <AmiBlitz3.ab3@9098>   BEQ 'skip0_ok
000263A8 <AmiBlitz3.ab3@9099>   CMP.b #$87,25(a2)
000263AC <AmiBlitz3.ab3@9100>   BEQ 'skip0_ok
000263B2 <AmiBlitz3.ab3@9101>   CMP.b #$88,25(a2)
000263B6 <AmiBlitz3.ab3@9102>   BEQ 'skip0_ok
000263BC <AmiBlitz3.ab3@9103>   CMP.b #$83,25(a2)
000263C0 <AmiBlitz3.ab3@9104>   BGT 'skip0_noprint
000263C6 <AmiBlitz3.ab3@9107>   MOVE.l destpointer,a4
000263CC <AmiBlitz3.ab3@9108>   CMP.w #$2f00,-2(a4)
000263D0 <AmiBlitz3.ab3@9109>   BNE 'skip0_noprint
000263D6 <AmiBlitz3.ab3@9110>   SUBQ.l #2,destpointer
000263DC <AmiBlitz3.ab3@9112>   MOVE.l #$f2277400,d1
000263E0 <AmiBlitz3.ab3@9113>   BSR writelong                                            ;fmove.d fp0,-(a7)
000263E6 <AmiBlitz3.ab3@9114>   ADDQ #4,a2offset
000263EC <AmiBlitz3.ab3@9131>   CLR.b optistring
000263EE <AmiBlitz3.ab3@9132>   MOVEA.l (A7)+,A2
000263F2 <AmiBlitz3.ab3@9133>    CMP.w #"@",d0
000263F6 <AmiBlitz3.ab3@9134>   BNE 'skip0_l10
000263FA <AmiBlitz3.ab3@9135>    CMP.b #"@",(a5)
000263FE <AmiBlitz3.ab3@9136>   BNE 'skip0_l10
00026404 <AmiBlitz3.ab3@9137>   TST.w ininclude
00026408 <AmiBlitz3.ab3@9138>   BNE errorjoin
0002640E <AmiBlitz3.ab3@9139>   MOVEA.l sourceline,A5
00026410 <AmiBlitz3.ab3@9140>            MOVEA.l (A5),A5
00026416 <AmiBlitz3.ab3@9141>            MOVE.l a5,sourceline
0002641C <AmiBlitz3.ab3@9142>            ADDQ.l #1,linenumat
00026420 <AmiBlitz3.ab3@9143>            LEA $9(A5),A5
00026422 <AmiBlitz3.ab3@9144>            MOVEQ #0,d0
00026426 <AmiBlitz3.ab3@9145>            BSR get1bytemain
0002642A <AmiBlitz3.ab3@9148>    CMP.b #32,(a5)+ ;for space after a ,
0002642E <AmiBlitz3.ab3@9149>    BEQ 'skip0_l10:
00026430 <AmiBlitz3.ab3@9150>    SUBQ.l #1,a5
00026434 <AmiBlitz3.ab3@9152>    CMP.w #"@@",(a5)                                        ;if merge
00026438 <AmiBlitz3.ab3@9153>    BNE 'skip0_l15
0002643C <AmiBlitz3.ab3@9154>    MOVEM.l d0-d7/a0-a4/a6,-(a7)
00026442 <AmiBlitz3.ab3@9155>    JSR mergeline
00026446 <AmiBlitz3.ab3@9156>    MOVEM.l (a7)+,d0-d7/a0-a4/a6
00026448 <AmiBlitz3.ab3@9176>       SUBQ.w #1,(A7)
0002644C <AmiBlitz3.ab3@9177>    BEQ.w 'done
00026450 <AmiBlitz3.ab3@9179>     CMP.w #$2C,D0
00026454 <AmiBlitz3.ab3@9181>    BNE 'overloadfunc
00026458 <AmiBlitz3.ab3@9182>  BRA.w 'loop
0002645A <AmiBlitz3.ab3@9185>   ADDQ.w #2,A7
00026460 <AmiBlitz3.ab3@9186>   MOVE.w (A7)+,partostack
00026462 <AmiBlitz3.ab3@9187>   MOVE.w (A7)+,D1
00026468 <AmiBlitz3.ab3@9188>   CLR.b isconstantvalue
00026472 <AmiBlitz3.ab3@9189>   MOVE.l currentfunccall,lastfunction
00026478 <AmiBlitz3.ab3@9190>   CLR.b funccall
0002647E <AmiBlitz3.ab3@9191>   CLR.l currentfunccall
00026480 <AmiBlitz3.ab3@9192>  RTS
00026486 <AmiBlitz3.ab3@9195>   CLR.b funccall
0002648C <AmiBlitz3.ab3@9196>   MOVE.w regnum,d1
00026492 <AmiBlitz3.ab3@9197>   MOVE.l currentfunccall,a4
00026496 <AmiBlitz3.ab3@9198>   CMP.b $20(a4),d1                                         ;increase if more pars
0002649A <AmiBlitz3.ab3@9199>   BLT notparerr
0002649C <AmiBlitz3.ab3@9202>   MOVE.b (a2)+,d2
000264A4 <AmiBlitz3.ab3@9203>   ADD.w #1,parnum
000264AA <AmiBlitz3.ab3@9204>   TST.b fpu
000264AE <AmiBlitz3.ab3@9205>   BEQ 'nofpu
000264B2 <AmiBlitz3.ab3@9206>   CMP.b #5,d2
000264B6 <AmiBlitz3.ab3@9207>   BNE 'nofpu
000264B8 <AmiBlitz3.ab3@9208>   MOVEQ #0,d1
000264BE <AmiBlitz3.ab3@9209>   MOVE.w regnum,d1
000264C6 <AmiBlitz3.ab3@9210>   CMP.w #6,regnum
000264CA <AmiBlitz3.ab3@9211>   BLT 'nostack2
000264CE <AmiBlitz3.ab3@9218>   MOVE.w #$2c3c,d1
000264D2 <AmiBlitz3.ab3@9219>   BSR writeword
000264D8 <AmiBlitz3.ab3@9220>   MOVE.l #$bf800000,d1
000264DC <AmiBlitz3.ab3@9221>   BSR writelong
000264E0 <AmiBlitz3.ab3@9222>   MOVE.w #$c4ff,d1                                         ;savetemp+regnum
000264E6 <AmiBlitz3.ab3@9223>   ADD.w parnum,d1
000264EC <AmiBlitz3.ab3@9224>   JSR Atokejsr
000264F2 <AmiBlitz3.ab3@9225>   TST.w dontwrite_nomemleft
000264F6 <AmiBlitz3.ab3@9226>   BNE 'l1
000264FC <AmiBlitz3.ab3@9227>   MOVE.l data1start,d1
00026502 <AmiBlitz3.ab3@9228>   MOVE.l destpointer,a4
00026506 <AmiBlitz3.ab3@9229>   ADD.l d1,-4(a4)
0002650C <AmiBlitz3.ab3@9230>   MOVE.l destpointer,d1
0002650E <AmiBlitz3.ab3@9231>   SUBQ.l #4,d1
00026514 <AmiBlitz3.ab3@9232>   SUB.l destbufferstart,d1
00026516 <AmiBlitz3.ab3@9233>   MOVE.l d2,-(a7)
00026518 <AmiBlitz3.ab3@9234>   MOVE.l d1,d2
0002651E <AmiBlitz3.ab3@9235>   JSR addhunkoffset
00026520 <AmiBlitz3.ab3@9236>   MOVE.l (a7)+,d2
00026524 <AmiBlitz3.ab3@9237>  BRA 'l1
00026526 <AmiBlitz3.ab3@9240>   ASL.l #7,d1
0002652C <AmiBlitz3.ab3@9241>   OR.l #$F23C5000,d1                                       ;fmove.w #-1,fpx
00026530 <AmiBlitz3.ab3@9242>   BSR writelong
00026532 <AmiBlitz3.ab3@9243>   MOVEQ #-1,d1                                             ;-1
00026536 <AmiBlitz3.ab3@9244>   BSR writeword
0002653A <AmiBlitz3.ab3@9245>  BRA 'l1
00026540 <AmiBlitz3.ab3@9248>   MOVE.w regnum,d1
00026548 <AmiBlitz3.ab3@9249>   CMP.w #6,regnum
0002654C <AmiBlitz3.ab3@9250>   BLT 'nostack
00026550 <AmiBlitz3.ab3@9255>   CMP.b #2,d2
00026554 <AmiBlitz3.ab3@9256>   BGT 'nw
00026558 <AmiBlitz3.ab3@9257>  BRA 'nos
0002655C <AmiBlitz3.ab3@9266>   CMP.w #7,d2
00026560 <AmiBlitz3.ab3@9267>   BNE 'nos
00026566 <AmiBlitz3.ab3@9268>   ADDQ #4,a2offset
0002656C <AmiBlitz3.ab3@9271>     MOVE.l #$48780000,d1
00026570 <AmiBlitz3.ab3@9272>     BSR writelong
00026576 <AmiBlitz3.ab3@9273>     ADDQ.w #4,a2offset
0002657A <AmiBlitz3.ab3@9274>     MOVE.w #$2f3c,d1
0002657E <AmiBlitz3.ab3@9275>     BSR writeword
00026584 <AmiBlitz3.ab3@9276>     MOVE.l #-1,d1
00026588 <AmiBlitz3.ab3@9277>     BSR writelong
0002658C <AmiBlitz3.ab3@9278>    BRA 'l1
00026590 <AmiBlitz3.ab3@9282>   CMP.b #4,d2
00026594 <AmiBlitz3.ab3@9283>       BNE 'noq
00026598 <AmiBlitz3.ab3@9284>       MOVE.w #$2c3c,d1
0002659C <AmiBlitz3.ab3@9285>       BSR writeword
000265A2 <AmiBlitz3.ab3@9286>       MOVE.l #$ffff0000,d1
000265A6 <AmiBlitz3.ab3@9287>       BSR writelong
000265AA <AmiBlitz3.ab3@9288>  BRA 'noq2
000265AE <AmiBlitz3.ab3@9291>      CMP.b #5,d2
000265B2 <AmiBlitz3.ab3@9292>      BNE 'nof
000265B6 <AmiBlitz3.ab3@9293>       MOVE.w #$2c3c,d1
000265BA <AmiBlitz3.ab3@9294>       BSR writeword
000265C0 <AmiBlitz3.ab3@9295>       MOVE.l #$800000c1,d1
000265C4 <AmiBlitz3.ab3@9296>       BSR writelong
000265C8 <AmiBlitz3.ab3@9297>  BRA 'noq2
000265CC <AmiBlitz3.ab3@9300>   MOVE.w #$7cff,d1
000265D0 <AmiBlitz3.ab3@9301>   BSR writeword
000265D4 <AmiBlitz3.ab3@9304>   MOVE.w #$c4ff,d1                                         ;savetemp+regnum
000265DA <AmiBlitz3.ab3@9305>   ADD.w parnum,d1
000265E0 <AmiBlitz3.ab3@9306>   JSR Atokejsr
000265E6 <AmiBlitz3.ab3@9307>    TST.w dontwrite_nomemleft
000265EA <AmiBlitz3.ab3@9308>    BNE 'l1
000265F0 <AmiBlitz3.ab3@9309>    MOVE.l data1start,d1
000265F6 <AmiBlitz3.ab3@9310>    MOVE.l destpointer,a4
000265FA <AmiBlitz3.ab3@9311>    ADD.l d1,-4(a4)
00026600 <AmiBlitz3.ab3@9312>    MOVE.l destpointer,d1
00026602 <AmiBlitz3.ab3@9313>    SUBQ.l #4,d1
00026608 <AmiBlitz3.ab3@9314>    SUB.l destbufferstart,d1
0002660A <AmiBlitz3.ab3@9315>    MOVE.l d2,-(a7)
0002660C <AmiBlitz3.ab3@9316>    MOVE.l d1,d2
00026612 <AmiBlitz3.ab3@9317>    JSR addhunkoffset
00026614 <AmiBlitz3.ab3@9318>    MOVE.l (a7)+,d2
00026618 <AmiBlitz3.ab3@9319>  BRA 'l1
0002661A <AmiBlitz3.ab3@9322>   ASL.l #8,d1
0002661C <AmiBlitz3.ab3@9323>   ASL.l #1,d1
00026622 <AmiBlitz3.ab3@9324>   OR.l #$203c,d1                                           ;-1
00026626 <AmiBlitz3.ab3@9325>   BSR writeword
0002662C <AmiBlitz3.ab3@9326>   MOVE.l #-1,d1
00026630 <AmiBlitz3.ab3@9327>   CMP.b #4,d2
00026634 <AmiBlitz3.ab3@9328>   BNE 'nq1
0002663A <AmiBlitz3.ab3@9329>   MOVE.l #$ffff0000,d1
0002663E <AmiBlitz3.ab3@9332>   CMP.b #5,d2
00026642 <AmiBlitz3.ab3@9333>   BNE 'nof2
00026648 <AmiBlitz3.ab3@9334>   TST.b fpu
0002664C <AmiBlitz3.ab3@9335>   BNE 'nof2
00026652 <AmiBlitz3.ab3@9336>   MOVE.l #$800000c1,d1
00026656 <AmiBlitz3.ab3@9339>    BSR writelong
0002665A <AmiBlitz3.ab3@9340>    CMP.b #7,d2
0002665E <AmiBlitz3.ab3@9341>    BNE 'l1
00026664 <AmiBlitz3.ab3@9343>      MOVE.l #$48780000,d1
00026668 <AmiBlitz3.ab3@9344>      BSR writelong
0002666E <AmiBlitz3.ab3@9346>    ADDQ.w #4,a2offset                                      ; bug fix for string parameters
00026674 <AmiBlitz3.ab3@9347>    MOVE.l #$594f,d1                                        ; subq #4,a7
00026678 <AmiBlitz3.ab3@9348>    BSR writeword
0002667A <AmiBlitz3.ab3@9351>    SUBQ.w #1,(A7)
0002667E <AmiBlitz3.ab3@9352>    BEQ.w 'done
00026684 <AmiBlitz3.ab3@9353>    ADDQ.w #1,regnum
00026688 <AmiBlitz3.ab3@9354>  BRA 'ol2
0002668A <AmiBlitz3.ab3@9367>    MOVE.w D2,D1
0002668E <AmiBlitz3.ab3@9368>    ANDI.w #$40,D1          ;push bit
00026694 <AmiBlitz3.ab3@9369>    MOVE.b D1,partostack
00026696 <AmiBlitz3.ab3@9370>    TST.b D2
0002669A <AmiBlitz3.ab3@9371>     BMI.w handlevara
0002669E <AmiBlitz3.ab3@9372>    BTST #$5,D2
000266A2 <AmiBlitz3.ab3@9373>     BNE.w handlearr
000266A8 <AmiBlitz3.ab3@9378>     MOVE.w regnumstore,-(a7)
000266AE <AmiBlitz3.ab3@9379>     MOVE.w tempregnum,-(a7)
000266B4 <AmiBlitz3.ab3@9380>     MOVE.w parnum,-(a7)
000266B8 <AmiBlitz3.ab3@9382>     BSR.w getap                                        ;recursive entry
000266BE <AmiBlitz3.ab3@9384>     MOVE.w (a7)+,parnum
000266C4 <AmiBlitz3.ab3@9385>     MOVE.w (a7)+,tempregnum
000266CA <AmiBlitz3.ab3@9386>     MOVE.w (a7)+,regnumstore
000266CE <AmiBlitz3.ab3@9392>     MOVE.w partostack(PC),D1
000266D2 <AmiBlitz3.ab3@9393>     BEQ.w putapincreg
000266D8 <AmiBlitz3.ab3@9397>    ADDQ.w #4,a2offset
000266DE <AmiBlitz3.ab3@9399>    MOVE.w pushdn,D1
000266E4 <AmiBlitz3.ab3@9400>    OR.w regnum,D1      ;push long
000266E8 <AmiBlitz3.ab3@9401>    CMP.w #$3,D2
000266EC <AmiBlitz3.ab3@9402>     BCC.w 'skip
000266F2 <AmiBlitz3.ab3@9403>    SUBQ.w #2,a2offset
000266F6 <AmiBlitz3.ab3@9404>    ORI.w #$1000,D1    ;push word only
000266FA <AmiBlitz3.ab3@9405>    BSR.w writeword
000266FC <AmiBlitz3.ab3@9406>  RTS
00026700 <AmiBlitz3.ab3@9410>   CMP.b #7,d2
00026704 <AmiBlitz3.ab3@9411>    BNE 'l10a
0002670C <AmiBlitz3.ab3@9412>    CMP.b #2,optistring
00026712 <AmiBlitz3.ab3@9416>   TST.b iee
00026716 <AmiBlitz3.ab3@9417>   BEQ 'olda
0002671A <AmiBlitz3.ab3@9418>   CMP.b #5,d2
0002671E <AmiBlitz3.ab3@9419>   BNE 'olda
00026722 <AmiBlitz3.ab3@9423>   BSR.w writeword                                          ;write val to stack
00026724 <AmiBlitz3.ab3@9424>  RTS
0002672A <AmiBlitz3.ab3@9428>   SUBQ.w #4,a2offset
0002672C <AmiBlitz3.ab3@9429> RTS
00026732 <AmiBlitz3.ab3@9434>   ADDQ.w #1,regnum
00026734 <AmiBlitz3.ab3@9435> RTS
00026736 <AmiBlitz3.ab3@9439>   MOVEQ.l #$03,D2
0002673A <AmiBlitz3.ab3@9440> BRA.w putap
0002673E <AmiBlitz3.ab3@9446>   ANDI.w #$7,D2
00026740 <AmiBlitz3.ab3@9447>   MOVE.w D2,-(A7)
00026744 <AmiBlitz3.ab3@9449>    BSR.w ampersand2  ;ignore pnt to $
00026748 <AmiBlitz3.ab3@9451>   CMP.b #$7,D2                                             ;ignore pnt to $
0002674C <AmiBlitz3.ab3@9452>    BEQ.w 'nop2
00026750 <AmiBlitz3.ab3@9454>   BTST #$E,D2
00026754 <AmiBlitz3.ab3@9455>    BEQ.w 'nop
00026758 <AmiBlitz3.ab3@9456>   MOVE.b #$3,D2      ;pointer to long                                      ;pointer to long
0002675C <AmiBlitz3.ab3@9457>  BRA.w 'nop2
0002675E <AmiBlitz3.ab3@9460>    TST.b D2
00026762 <AmiBlitz3.ab3@9461>    BNE.w 'nop2
00026766 <AmiBlitz3.ab3@9462>   MOVE.b #$3,D2
00026768 <AmiBlitz3.ab3@9465>   MOVE.w (A7)+,D3
0002676A <AmiBlitz3.ab3@9466>   TST.b D3
0002676E <AmiBlitz3.ab3@9467>    BEQ.w 'unp
00026770 <AmiBlitz3.ab3@9468>   CMP.b D2,D3
00026774 <AmiBlitz3.ab3@9469>    BEQ.w putalp
00026778 <AmiBlitz3.ab3@9470>  BRA.w mismatcherr
0002677E <AmiBlitz3.ab3@9473>   ADDQ.w #2,a2offset
00026782 <AmiBlitz3.ab3@9474>   MOVE.w ptype(PC),D1
00026786 <AmiBlitz3.ab3@9475>    BSR.w writeword
00026788 <AmiBlitz3.ab3@9476>   MOVEQ.l #$00,D1
0002678A <AmiBlitz3.ab3@9477>   MOVE.b D2,D1
0002678E <AmiBlitz3.ab3@9478>    BSR.w writeword
00026792 <AmiBlitz3.ab3@9479> BRA.w putalp
00026794 <AmiBlitz3.ab3@9483>    MOVE.w D2,-(A7)
00026798 <AmiBlitz3.ab3@9484>    BSR.w baseadd
0002679E <AmiBlitz3.ab3@9485>   BTST #$4,$1(A7)
000267A2 <AmiBlitz3.ab3@9486>    BEQ.w 'nohigh
000267A6 <AmiBlitz3.ab3@9487>    BSR.w highadd
000267AC <AmiBlitz3.ab3@9490>    BTST #$3,$1(A7)
000267B0 <AmiBlitz3.ab3@9491>    BEQ.w 'notype
000267B4 <AmiBlitz3.ab3@9492>    BSR.w sendtype
000267B6 <AmiBlitz3.ab3@9495>    MOVE.w (A7)+,D2
000267BA <AmiBlitz3.ab3@9496> BRA.w get1bytemain
000267C0 <AmiBlitz3.ab3@9502>   MOVE.w regnum,D1
000267C2 <AmiBlitz3.ab3@9503>   LSL.w #8,D1
000267C4 <AmiBlitz3.ab3@9504>   LSL.w #1,D1
000267C8 <AmiBlitz3.ab3@9505>   ORI.w #$7000,D1
000267CE <AmiBlitz3.ab3@9506>   BTST #$0,$7(A3)
000267D2 <AmiBlitz3.ab3@9507>    BNE.w 'isap         ;A Pointer
000267DA <AmiBlitz3.ab3@9508>   CMPI.l #$100,$4(A2)
000267DE <AmiBlitz3.ab3@9509>    BCC.w arrerr1       ;illegal type to send
000267E2 <AmiBlitz3.ab3@9510>   MOVE.b $7(A2),D1
000267E6 <AmiBlitz3.ab3@9513>   BSR.w writeword      ;moveq #type,d regat
000267E8 <AmiBlitz3.ab3@9514>   MOVEQ.l #$02,D2      ;just a word.
000267EC <AmiBlitz3.ab3@9515> BRA.w pushap
000267F0 <AmiBlitz3.ab3@9518>   MOVE.b #$3,D1
000267F4 <AmiBlitz3.ab3@9519> BRA.w 'putit
000267F8 <AmiBlitz3.ab3@9525>    BSR.w get1bytemain                                      ;write array paramter code
000267FC <AmiBlitz3.ab3@9526>    BSR.w getparameter
00026804 <AmiBlitz3.ab3@9527>   BTST #$1,flagmask+1
00026808 <AmiBlitz3.ab3@9528>    BEQ.w syntaxerr
0002680C <AmiBlitz3.ab3@9529>    BSR.w fetchvars
00026810 <AmiBlitz3.ab3@9531>    BSR.w get1bytemain
00026814 <AmiBlitz3.ab3@9532>   CMP.w #$29,D0          ;')'  ;we just want a() or whatever                                 ;we just want a() or whatever
00026818 <AmiBlitz3.ab3@9533>    BNE.w syntaxerr
0002681E <AmiBlitz3.ab3@9534>   MOVE.w notshared,D1
00026822 <AmiBlitz3.ab3@9535>    BNE.w noarrayerr
00026828 <AmiBlitz3.ab3@9536>   MOVE.w regnum,D1
0002682A <AmiBlitz3.ab3@9537>   LSL.w #8,D1
0002682C <AmiBlitz3.ab3@9538>   LSL.w #1,D1
00026830 <AmiBlitz3.ab3@9539>   OR.w fbase(PC),D1
00026836 <AmiBlitz3.ab3@9541>    TST.b varmode
0002683A <AmiBlitz3.ab3@9542>    BEQ 'l1
0002683E <AmiBlitz3.ab3@9543>    BCLR #0,d1
00026842 <AmiBlitz3.ab3@9547>    BSR.w writeword
00026846 <AmiBlitz3.ab3@9548>   MOVE.w $4(A3),D1
0002684A <AmiBlitz3.ab3@9549>    BSR.w writeword
0002684E <AmiBlitz3.ab3@9550> BRA.w putalp      ;OK, we've got da base reg.
00026854 <AmiBlitz3.ab3@9556>   MOVE.w regnum,D1
00026856 <AmiBlitz3.ab3@9557>   LSL.w #8,D1
00026858 <AmiBlitz3.ab3@9558>   LSL.w #1,D1
0002685C <AmiBlitz3.ab3@9559>   OR.w fbase(PC),D1
00026862 <AmiBlitz3.ab3@9561>    TST.b varmode
00026866 <AmiBlitz3.ab3@9562>    BEQ 'l1
0002686A <AmiBlitz3.ab3@9563>    BCLR #0,d1
0002686E <AmiBlitz3.ab3@9567>    BSR.w writeword
00026872 <AmiBlitz3.ab3@9569>   MOVE.w $8(A3),D1
00026874 <AmiBlitz3.ab3@9570>   LSL.w #2,D1
0002687A <AmiBlitz3.ab3@9571>   MOVE.w varmode,D2
0002687E <AmiBlitz3.ab3@9572>    BEQ.w 'isglob
00026880 <AmiBlitz3.ab3@9573>   NEG.w D1
00026884 <AmiBlitz3.ab3@9576>    ADD.w $4(A3),D1
00026888 <AmiBlitz3.ab3@9577>    BSR.w writeword
0002688E <AmiBlitz3.ab3@9578>   MOVE.w regnum,D1
00026890 <AmiBlitz3.ab3@9579>   LSL.w #8,D1
00026892 <AmiBlitz3.ab3@9580>   LSL.w #1,D1
00026896 <AmiBlitz3.ab3@9582>   MOVE.w partostack(PC),D2
0002689A <AmiBlitz3.ab3@9583>    BNE.w 'dopadd           ;we just pushed last parameter!
000268A2 <AmiBlitz3.ab3@9584>   CMPI.w #$7,regnum
000268A6 <AmiBlitz3.ab3@9585>    BCC.w 'dopadd           ;last was d6, it must have been
000268AA <AmiBlitz3.ab3@9587>   OR.w pushlast(PC),D1
000268B0 <AmiBlitz3.ab3@9588>   MOVE.w regnum,D2
000268B2 <AmiBlitz3.ab3@9589>   SUBQ.w #1,D2
000268B4 <AmiBlitz3.ab3@9590>   OR.w D2,D1
000268B8 <AmiBlitz3.ab3@9591>  BRA.w 'pp
000268BC <AmiBlitz3.ab3@9596>   OR.w pushadd(PC),D1
000268C0 <AmiBlitz3.ab3@9599>   BSR.w writeword
000268C8 <AmiBlitz3.ab3@9600>   MOVE.b #$1,partostack
000268CC <AmiBlitz3.ab3@9601> BRA.w putalp
000268D0 <AmiBlitz3.ab3@9605> fbase:       Dc.b $20,$2D,$00,$00                           ;MOVE.L  $0000(A5),D0
000268D2 <AmiBlitz3.ab3@9606> pushadd:     Dc.b $D0,$97                                   ;ADD.L (A7),D0
000268D4 <AmiBlitz3.ab3@9607> pushlast:    Dc.b $D0,$80                                   ;ADD.L D0,D0
000268D8 <AmiBlitz3.ab3@9612>   ANDI.w #$7,D2                                            ;0-7 (unknown to string)
000268DC <AmiBlitz3.ab3@9613>    BEQ.w evalu2
000268E0 <AmiBlitz3.ab3@9614> BRA.w eval
000268E6 <AmiBlitz3.ab3@9618>   MOVEA.l libpointer,A1
000268EA <AmiBlitz3.ab3@9621>    CMPA.w #$0,A1
000268EE <AmiBlitz3.ab3@9622>    BEQ.w 'done
000268F4 <AmiBlitz3.ab3@9623>   MOVE.w #-1,$A(A1)
000268FA <AmiBlitz3.ab3@9624>   BCLR #$7,$C(A1)
000268FC <AmiBlitz3.ab3@9625>   MOVEA.l (A1),A1
00026900 <AmiBlitz3.ab3@9626>  BRA.w 'loop
00026902 <AmiBlitz3.ab3@9629> RTS
00026906 <AmiBlitz3.ab3@9633>   MOVE.w #$FFFE,D1       ;#allocvars
0002690A <AmiBlitz3.ab3@9637>    BSR.w findlib
00026910 <AmiBlitz3.ab3@9640>   TST.w cfetchmode
00026914 <AmiBlitz3.ab3@9641>    BEQ.w 'noconst
0002691A <AmiBlitz3.ab3@9642>   BTST #$6,$C(A1)
0002691E <AmiBlitz3.ab3@9643>    BNE.w 'constok
00026922 <AmiBlitz3.ab3@9645>  BRA.w badconerr                                            ;Can't use this Library!
00026924 <AmiBlitz3.ab3@9648>  RTS
0002692A <AmiBlitz3.ab3@9651>    BSET #$7,$C(A1)
0002692E <AmiBlitz3.ab3@9652>    BNE.w 'skip                                         ;already done....
00026934 <AmiBlitz3.ab3@9653>    CMPI.w #-1,$A(A1)
00026938 <AmiBlitz3.ab3@9654>    BNE.w 'skip                                         ;something already here
0002693E <AmiBlitz3.ab3@9658>    TST.w dirmode
00026942 <AmiBlitz3.ab3@9659>    BEQ.b 'oktouse
00026948 <AmiBlitz3.ab3@9662>    TST.b exdebug
0002694C <AmiBlitz3.ab3@9663>    BEQ 'l1
00026950 <AmiBlitz3.ab3@9664>  BRA.b 'oktouse
00026956 <AmiBlitz3.ab3@9668>   BCLR #$7,$C(A1)
0002695A <AmiBlitz3.ab3@9669>  BRA.w dirliberr
00026960 <AmiBlitz3.ab3@9673>   MOVE.b debugmode,-(a7)
00026964 <AmiBlitz3.ab3@9675>   MOVEM.l D1/A0/A2,-(A7)
0002696C <AmiBlitz3.ab3@9685>   BTST #$7,use_debugger
00026970 <AmiBlitz3.ab3@9686>   BNE 'debugon
00026972 <AmiBlitz3.ab3@9687>   CLR.w D1
00026976 <AmiBlitz3.ab3@9688>  BRA.b 'debugoff
00026978 <AmiBlitz3.ab3@9691>   SNE D1
0002697E <AmiBlitz3.ab3@9694>   MOVE.b d1,debugmode
00026980 <AmiBlitz3.ab3@9699>   MOVEA.l A1,A0
00026984 <AmiBlitz3.ab3@9700>   ADDA.l $12(A1),A0
00026988 <AmiBlitz3.ab3@9701>   TST.w -$2(A0)
0002698C <AmiBlitz3.ab3@9702>    BEQ.w 'notmax
00026990 <AmiBlitz3.ab3@9703>   MOVEM.l A0-A1,-(A7)
00026994 <AmiBlitz3.ab3@9704>   MOVE.w #$FB4F,D1            ; #64335,
00026998 <AmiBlitz3.ab3@9705>    BSR.w uselib
0002699C <AmiBlitz3.ab3@9706>   MOVEM.l (A7)+,A0-A1
000269A2 <AmiBlitz3.ab3@9707>   ADDQ.w #1,globalvarpointer
000269AA <AmiBlitz3.ab3@9708>   BCLR #$0,globalvarpointer+1
000269B2 <AmiBlitz3.ab3@9709>   MOVE.w globalvarpointer,-$6(A0)
000269B8 <AmiBlitz3.ab3@9710>   ADDQ.w #4,globalvarpointer
000269BC <AmiBlitz3.ab3@9711>   TST.l -$E(A0)
000269C0 <AmiBlitz3.ab3@9712>    BEQ.w 'notmax
000269C6 <AmiBlitz3.ab3@9713>   ADDQ.w #4,globalvarpointer
000269CE <AmiBlitz3.ab3@9716>   MOVE.l libend,$28(A1)      ;pc of lib
000269D0 <AmiBlitz3.ab3@9717>   MOVEA.l A1,A0
000269D4 <AmiBlitz3.ab3@9718>   ADDA.l $12(A1),A0          ;start of lib
000269D6 <AmiBlitz3.ab3@9720>   MOVE.l A1,D1
000269DA <AmiBlitz3.ab3@9721>   ADD.l $6(A1),D1            ;end of lib
000269DE <AmiBlitz3.ab3@9722>   TST.l $2C(A1)
000269E2 <AmiBlitz3.ab3@9723>    BEQ.w 'nor
000269E8 <AmiBlitz3.ab3@9724>   TST.b debugmode
000269EC <AmiBlitz3.ab3@9725>    BNE.w 'nor                ;errs turned on
000269EE <AmiBlitz3.ab3@9726>   MOVE.l A1,D1
000269F2 <AmiBlitz3.ab3@9727>   ADD.l $2C(A1),D1           ;copy only non-errchks
000269F8 <AmiBlitz3.ab3@9730>   MOVEA.l libend,A2
000269FE <AmiBlitz3.ab3@9733>   CMPA.l data1start,A2
00026A02 <AmiBlitz3.ab3@9734>    BCS.w 'okp
00026A0A <AmiBlitz3.ab3@9735>   MOVE.w #$FFFF,dontwrite_nomemleft     ; -1
00026A0C <AmiBlitz3.ab3@9738>   ADDQ.w #2,A0
00026A0E <AmiBlitz3.ab3@9739>   ADDQ.w #2,A2
00026A10 <AmiBlitz3.ab3@9740>   CMPA.l D1,A0
00026A14 <AmiBlitz3.ab3@9741>    BCS.w 'bad
00026A18 <AmiBlitz3.ab3@9742>  BRA.w 'toreloc
00026A1A <AmiBlitz3.ab3@9745>   MOVE.w (A0)+,(A2)+                                       ;copylibcode
00026A1C <AmiBlitz3.ab3@9746>   CMPA.l D1,A0
00026A20 <AmiBlitz3.ab3@9747>    BCS.w 'loop
00026A26 <AmiBlitz3.ab3@9750>   MOVE.l A2,libend
00026A2A <AmiBlitz3.ab3@9751>   MOVE.l $20(A1),D1
00026A2E <AmiBlitz3.ab3@9752>    BEQ.w 'noreloc
00026A32 <AmiBlitz3.ab3@9754>   MOVEM.l D0/D2-D3,-(A7)
00026A36 <AmiBlitz3.ab3@9755>   MOVEA.l $24(A1),A0         ;start of reloc table
00026A38 <AmiBlitz3.ab3@9756>   MOVEQ.l #$00,D3            ;no tokejsrs (yet!)
00026A3A <AmiBlitz3.ab3@9762>   MOVE.l (A0)+,D2
00026A3E <AmiBlitz3.ab3@9763>   TST.l $2C(A1)
00026A42 <AmiBlitz3.ab3@9764>    BEQ.w 'skipr
00026A48 <AmiBlitz3.ab3@9765>   TST.b debugmode
00026A4C <AmiBlitz3.ab3@9766>    BNE.w 'skipr
00026A50 <AmiBlitz3.ab3@9767>   CMP.l $2C(A1),D2
00026A54 <AmiBlitz3.ab3@9768>    BCC.w 'next
00026A58 <AmiBlitz3.ab3@9771>   TST.w $0(A1,D2.L)
00026A5C <AmiBlitz3.ab3@9772>    BPL.w 'notajsr
00026A5E <AmiBlitz3.ab3@9773>   TST.l D3
00026A62 <AmiBlitz3.ab3@9774>    BNE.w 'notajsr      ;already done...
00026A64 <AmiBlitz3.ab3@9775>   MOVE.l A0,D0
00026A66 <AmiBlitz3.ab3@9776>   MOVE.l D1,D3         ;number left to do!
00026A6A <AmiBlitz3.ab3@9779>   SUB.l $12(A1),D2
00026A6E <AmiBlitz3.ab3@9780>    BMI.w 'next
00026A72 <AmiBlitz3.ab3@9781>   ADD.l $28(A1),D2
00026A74 <AmiBlitz3.ab3@9782>   MOVE.l D2,-(A7)
00026A7A <AmiBlitz3.ab3@9783>   SUB.l destbufferstart,D2
00026A7E <AmiBlitz3.ab3@9784>    BSR.w addhunkoffset
00026A80 <AmiBlitz3.ab3@9785>   MOVEA.l (A7)+,A2
00026A86 <AmiBlitz3.ab3@9786>   TST.w dontwrite_nomemleft
00026A8A <AmiBlitz3.ab3@9787>    BNE.w 'next
00026A8E <AmiBlitz3.ab3@9788>   MOVE.l $28(A1),D2
00026A92 <AmiBlitz3.ab3@9789>   SUB.l $12(A1),D2
00026A94 <AmiBlitz3.ab3@9790>   ADD.l D2,(A2)
00026A96 <AmiBlitz3.ab3@9793>    SUBQ.l #1,D1
00026A9A <AmiBlitz3.ab3@9794>    BNE.w 'reloop
00026A9C <AmiBlitz3.ab3@9795>   MOVE.l D3,D2
00026AA0 <AmiBlitz3.ab3@9796>    BEQ.w 'nohand
00026AA2 <AmiBlitz3.ab3@9797>   MOVEA.l D0,A2
00026AA4 <AmiBlitz3.ab3@9798>   SUBQ.w #4,A2
00026AA8 <AmiBlitz3.ab3@9800>    BSR.w handlejsrs
00026AAC <AmiBlitz3.ab3@9803>    MOVEM.l (A7)+,D0/D2-D3
00026AB0 <AmiBlitz3.ab3@9806>    MOVEM.l (A7)+,D1/A0/A2
00026AB4 <AmiBlitz3.ab3@9808>   MOVEM.l D1-D2,-(A7)
00026AB8 <AmiBlitz3.ab3@9809>   TST.w $1A(A1)
00026ABC <AmiBlitz3.ab3@9810>    BNE.w 'skip2a
00026AC0 <AmiBlitz3.ab3@9811>   CLR.w $A(A1)
00026AC4 <AmiBlitz3.ab3@9812>  BRA.w 'skip2
00026ACA <AmiBlitz3.ab3@9815>   ADDQ.w #1,globalvarpointer
00026AD2 <AmiBlitz3.ab3@9816>   BCLR #$0,globalvarpointer+1
00026ADA <AmiBlitz3.ab3@9817>   MOVE.w globalvarpointer,$A(A1)
00026ADE <AmiBlitz3.ab3@9819>   CMP.w #-$12D,D1            ; was  #65235,
00026AE2 <AmiBlitz3.ab3@9820>    BNE.w 'nots1
00026AEA <AmiBlitz3.ab3@9822>   MOVE.w $A(A1),movestdn+2
00026AF2 <AmiBlitz3.ab3@9823>   MOVE.w $A(A1),pusha3+2
00026AFA <AmiBlitz3.ab3@9824>   MOVE.w $A(A1),pusha32+2
00026B02 <AmiBlitz3.ab3@9825>   MOVE.w $A(A1),pulla3+2
00026B0A <AmiBlitz3.ab3@9826>   MOVE.w $A(A1),geta3+2
00026B0E <AmiBlitz3.ab3@9829>    CMP.w #-$3E9,D1           ; was #64535,
00026B12 <AmiBlitz3.ab3@9830>    BNE.w 'notd
00026B1A <AmiBlitz3.ab3@9832>   MOVE.w $A(A1),dataget+2
00026B22 <AmiBlitz3.ab3@9833>   MOVE.w $A(A1),dataput+2
00026B2A <AmiBlitz3.ab3@9834>   MOVE.w $A(A1),rescode+6
00026B32 <AmiBlitz3.ab3@9835>   MOVE.w $A(A1),rescode2+2
00026B38 <AmiBlitz3.ab3@9838>   ADDQ.w #2,globalvarpointer
00026B3C <AmiBlitz3.ab3@9839>   TST.w $1A(A1)
00026B40 <AmiBlitz3.ab3@9840>    BMI.w 'jword
00026B46 <AmiBlitz3.ab3@9841>   ADDQ.w #2,globalvarpointer
00026B4A <AmiBlitz3.ab3@9844>   MOVEM.l D1/A1,-(A7)
00026B4E <AmiBlitz3.ab3@9845>   BSR.w usevars
00026B52 <AmiBlitz3.ab3@9846>   MOVEM.l (A7)+,D1/A1
00026B54 <AmiBlitz3.ab3@9849>   MOVE.w D1,D2
00026B58 <AmiBlitz3.ab3@9850>   MOVE.l $16(A1),D1
00026B5C <AmiBlitz3.ab3@9851>    BSR.w uselib2
00026B60 <AmiBlitz3.ab3@9852>   MOVE.l $1C(A1),D1
00026B64 <AmiBlitz3.ab3@9853>    BSR.w uselib2
00026B68 <AmiBlitz3.ab3@9854>   MOVEM.l (A7)+,D1-D2
00026B6E <AmiBlitz3.ab3@9856>   MOVE.b (a7)+,debugmode
00026B70 <AmiBlitz3.ab3@9859> RTS
00026B72 <AmiBlitz3.ab3@9866>   MOVEQ.l #$00,D2       ;do list till this...
00026B78 <AmiBlitz3.ab3@9869>   MOVEA.l tokeslist,A2
00026B7A <AmiBlitz3.ab3@9870>   CMPA.l D2,A2
00026B7E <AmiBlitz3.ab3@9871>    BEQ.w 'done
00026B80 <AmiBlitz3.ab3@9872>   MOVE.l A2,-(A7)       ;next till...
00026B82 <AmiBlitz3.ab3@9875>   MOVEQ.l #$00,D3
00026B86 <AmiBlitz3.ab3@9878>   MOVEA.l $8(A2),A3
00026B88 <AmiBlitz3.ab3@9879>   CMPA.l D3,A3
00026B8C <AmiBlitz3.ab3@9880>    BEQ.w 'done4
00026B8E <AmiBlitz3.ab3@9882>   MOVE.l A3,-(A7)
00026B92 <AmiBlitz3.ab3@9883>   MOVEM.l D2-D3/A2-A3,-(A7)
00026B96 <AmiBlitz3.ab3@9884>   MOVE.w $4(A2),D1
00026B9A <AmiBlitz3.ab3@9885>   MOVE.w $6(A2),D2
00026B9E <AmiBlitz3.ab3@9887>    BSR.w tokecode
00026BA2 <AmiBlitz3.ab3@9889>   MOVEM.l (A7)+,D2-D3/A2-A3
00026BA8 <AmiBlitz3.ab3@9891>   MOVE.w dontwrite_nomemleft,D0
00026BAC <AmiBlitz3.ab3@9892>    BEQ.w 'ok
00026BAE <AmiBlitz3.ab3@9895>   MOVEA.l (A3),A3
00026BB0 <AmiBlitz3.ab3@9896>   CMPA.l D3,A3
00026BB4 <AmiBlitz3.ab3@9897>    BNE.w 'loop5
00026BB8 <AmiBlitz3.ab3@9898>  BRA.w 'skipz
00026BBC <AmiBlitz3.ab3@9901>   MOVEA.l $4(A3),A0
00026BBE <AmiBlitz3.ab3@9902>   MOVE.l D7,(A0)
00026BC0 <AmiBlitz3.ab3@9903>   MOVEA.l (A3),A3
00026BC2 <AmiBlitz3.ab3@9904>   CMPA.l D3,A3
00026BC6 <AmiBlitz3.ab3@9905>    BNE.w 'ok
00026BC8 <AmiBlitz3.ab3@9908>   MOVE.l (A7)+,D3
00026BCC <AmiBlitz3.ab3@9909>  BRA.w 'loop3
00026BCE <AmiBlitz3.ab3@9912>    MOVEA.l (A2),A2
00026BD0 <AmiBlitz3.ab3@9913>   CMPA.l D2,A2
00026BD4 <AmiBlitz3.ab3@9914>    BNE.w 'loop2
00026BD6 <AmiBlitz3.ab3@9915>   MOVE.l (A7)+,D2
00026BDA <AmiBlitz3.ab3@9916>  BRA.w 'loop
00026BDC <AmiBlitz3.ab3@9919> RTS
00026BDE <AmiBlitz3.ab3@9927>   MOVE.w D2,-(A7)
00026BE2 <AmiBlitz3.ab3@9928>    BSR.w searchinstr
00026BE4 <AmiBlitz3.ab3@9929>   MOVE.w (A7)+,D2
00026BEC <AmiBlitz3.ab3@9931>   BCLR #$7,blitzmode
00026BF0 <AmiBlitz3.ab3@9932>   BCLR #$E,D2
00026BF4 <AmiBlitz3.ab3@9933>    BEQ.w 'isamiga
00026BFC <AmiBlitz3.ab3@9934>   BSET #$7,blitzmode
00026BFE <AmiBlitz3.ab3@9937>   TST.w (A3)
00026C02 <AmiBlitz3.ab3@9938>    BEQ.w 'simple
00026C08 <AmiBlitz3.ab3@9939>   BTST #$2,$1(A3)
00026C0C <AmiBlitz3.ab3@9940>    BNE.w tokeerr
00026C12 <AmiBlitz3.ab3@9941>   BTST #$3,$1(A3)
00026C16 <AmiBlitz3.ab3@9942>    BNE.w tokeerr
00026C1A <AmiBlitz3.ab3@9946>   LEA $6(A3),A3     ;skip node
00026C1C <AmiBlitz3.ab3@9949>   MOVE.w (A3)+,D0
00026C20 <AmiBlitz3.ab3@9950>    BMI.w tokeerr
00026C24 <AmiBlitz3.ab3@9951>   ANDI.w #$FF,D0
00026C26 <AmiBlitz3.ab3@9952>   ADDA.w D0,A3
00026C28 <AmiBlitz3.ab3@9953>   ADDQ.w #1,A3
00026C2A <AmiBlitz3.ab3@9954>   EXG.l D0,A3
00026C2E <AmiBlitz3.ab3@9955>   BCLR #$0,D0
00026C30 <AmiBlitz3.ab3@9956>   EXG.l D0,A3
00026C32 <AmiBlitz3.ab3@9957>   SUBQ.w #1,D2
00026C36 <AmiBlitz3.ab3@9958>    BPL.w 'loop2
00026C38 <AmiBlitz3.ab3@9960>   TST.w (A3)
00026C3C <AmiBlitz3.ab3@9961>    BNE.w 'go4it          ;no libs to fetch....
00026C40 <AmiBlitz3.ab3@9962>   MOVE.l $2(A3),D0
00026C44 <AmiBlitz3.ab3@9963>   OR.l $A(A3),D0
00026C48 <AmiBlitz3.ab3@9964>    BNE.w 'go4it          ;no error chx...
00026C4E <AmiBlitz3.ab3@9965>   BTST #$0,$9(A3)
00026C52 <AmiBlitz3.ab3@9966>    BNE.w 'go4it          ;ditto...
00026C56 <AmiBlitz3.ab3@9967>   MOVE.l $6(A3),D7       ;sub offset
00026C5A <AmiBlitz3.ab3@9968>   MOVE.w $0(A2,D7.L),D0
00026C5E <AmiBlitz3.ab3@9969>   ANDI.w #$F000,D0
00026C62 <AmiBlitz3.ab3@9970>   CMP.w #-$6000,D0
00026C66 <AmiBlitz3.ab3@9971>    BEQ.w 'go4it
00026C6A <AmiBlitz3.ab3@9974>   SUB.l $12(A2),D7
00026C6E <AmiBlitz3.ab3@9975>   ADD.l $28(A2),D7
00026C70 <AmiBlitz3.ab3@9976>  RTS
00026C76 <AmiBlitz3.ab3@9979>   LEA cutejsr,A0
00026C7C <AmiBlitz3.ab3@9983>   MOVE.l destpointer,-(A7)
00026C84 <AmiBlitz3.ab3@9984>   MOVE.w #$FFFF,lasta6     ; was -1
00026C86 <AmiBlitz3.ab3@9986>    JSR (A0)
00026C8A <AmiBlitz3.ab3@9987>   MOVE.w #$4E75,D1
00026C8E <AmiBlitz3.ab3@9988>    BSR.w writeword
00026C90 <AmiBlitz3.ab3@9990>   MOVE.l (A7)+,D7
00026C92 <AmiBlitz3.ab3@9991>  RTS
00026C94 <AmiBlitz3.ab3@9994>   TST.w (A3)+
00026C98 <AmiBlitz3.ab3@9995>    BEQ.w 'skip
00026C9A <AmiBlitz3.ab3@9996>   ADDQ.w #2,A3
00026C9E <AmiBlitz3.ab3@9997>  BRA.w 'loop2
00026CA2 <AmiBlitz3.ab3@10000>   LEA $C(A3),A3
00026CA6 <AmiBlitz3.ab3@10001>  BRA.w 'loop
00026CA8 <AmiBlitz3.ab3@10004>   TST.w D2
00026CAC <AmiBlitz3.ab3@10005>    BNE.w tokeerr
00026CB0 <AmiBlitz3.ab3@10007>   TST.w $6(A3)
00026CB4 <AmiBlitz3.ab3@10008>    BNE.w 'be4it
00026CB8 <AmiBlitz3.ab3@10009>   MOVE.l $8(A3),D0
00026CBC <AmiBlitz3.ab3@10010>   OR.l $10(A3),D0
00026CC0 <AmiBlitz3.ab3@10011>    BNE.w 'be4it
00026CC6 <AmiBlitz3.ab3@10012>   BTST #$0,$F(A3)
00026CCA <AmiBlitz3.ab3@10013>    BNE.w 'be4it
00026CCE <AmiBlitz3.ab3@10014>   MOVE.l $C(A3),D7
00026CD2 <AmiBlitz3.ab3@10015>   MOVE.w $0(A2,D7.L),D0
00026CD6 <AmiBlitz3.ab3@10016>   ANDI.w #$F000,D0
00026CDA <AmiBlitz3.ab3@10017>   CMP.w #-$6000,D0        ; was #$a000
00026CDE <AmiBlitz3.ab3@10018>    BNE.w 'penis
00026CE0 <AmiBlitz3.ab3@10021>   MOVE.l A3,D1
00026CE2 <AmiBlitz3.ab3@10022>   SUB.l A2,D1
00026CE8 <AmiBlitz3.ab3@10023>   LEA Amakelibsub,A0
00026CEC <AmiBlitz3.ab3@10024> BRA.w 'putcode
00026CF2 <AmiBlitz3.ab3@10028>   MOVEA.l _execbase,A6
00026CF8 <AmiBlitz3.ab3@10029>   MOVEA.l tokeslist,A2
00026CFE <AmiBlitz3.ab3@10030>   CLR.l tokeslist
00026D02 <AmiBlitz3.ab3@10033>     CMPA.w #$0,A2
00026D06 <AmiBlitz3.ab3@10034>      BEQ.w 'done2
00026D0A <AmiBlitz3.ab3@10035>     MOVEA.l $8(A2),A3
00026D0E <AmiBlitz3.ab3@10038>       CMPA.w #$0,A3
00026D12 <AmiBlitz3.ab3@10039>        BEQ.w 'done3
00026D14 <AmiBlitz3.ab3@10040>       MOVEA.l A3,A1
00026D16 <AmiBlitz3.ab3@10041>       MOVEA.l (A3),A3
00026D18 <AmiBlitz3.ab3@10042>       MOVEQ.l #$08,D0
00026D1E <AmiBlitz3.ab3@10044>       MOVE.l mempool,a0
00026D24 <AmiBlitz3.ab3@10045>       MOVEA.l _execbase,A6
00026D28 <AmiBlitz3.ab3@10046>       JSR _FreePooled(A6)
00026D2C <AmiBlitz3.ab3@10049>  BRA.w 'floop2
00026D2E <AmiBlitz3.ab3@10052>     MOVEA.l A2,A1
00026D30 <AmiBlitz3.ab3@10053>     MOVEA.l (A2),A2
00026D32 <AmiBlitz3.ab3@10054>     MOVEQ.l #$0C,D0
00026D38 <AmiBlitz3.ab3@10056>     MOVE.l mempool,a0
00026D3E <AmiBlitz3.ab3@10057>     MOVEA.l _execbase,A6
00026D42 <AmiBlitz3.ab3@10058>     JSR _FreePooled(A6)
00026D46 <AmiBlitz3.ab3@10061>  BRA.w 'floop
00026D48 <AmiBlitz3.ab3@10064> RTS
00026D4C <AmiBlitz3.ab3@10070>   MOVEM.l D3-D5/A1-A6,-(A7)
00026D4E <AmiBlitz3.ab3@10071>   MOVEA.l A1,A4
00026D50 <AmiBlitz3.ab3@10074>   MOVE.l (A2)+,D3
00026D54 <AmiBlitz3.ab3@10075>   MOVE.w $0(A4,D3.L),D5
00026D58 <AmiBlitz3.ab3@10076>    BPL.w 'next
00026D5C <AmiBlitz3.ab3@10078>   TST.l $2C(A4)
00026D60 <AmiBlitz3.ab3@10079>    BEQ.w 'skipr
00026D66 <AmiBlitz3.ab3@10080>   TST.b debugmode
00026D6A <AmiBlitz3.ab3@10081>    BNE.w 'skipr
00026D6E <AmiBlitz3.ab3@10082>   CMP.l $2C(A4),D3
00026D72 <AmiBlitz3.ab3@10083>    BCC.w 'next
00026D76 <AmiBlitz3.ab3@10086>   BCLR #$F,D5             ;to offset number
00026D7A <AmiBlitz3.ab3@10087>   MOVE.w $2(A4,D3.L),D4
00026D7E <AmiBlitz3.ab3@10088>   SUB.l $12(A4),D3
00026D82 <AmiBlitz3.ab3@10089>   ADD.l $28(A4),D3
00026D86 <AmiBlitz3.ab3@10091>   MOVEM.l D2/A2/A4,-(A7)
00026D8A <AmiBlitz3.ab3@10092>    BSR.w maketjsr
00026D8E <AmiBlitz3.ab3@10093>   MOVEM.l (A7)+,D2/A2/A4
00026D90 <AmiBlitz3.ab3@10096>   SUBQ.l #1,D2
00026D94 <AmiBlitz3.ab3@10097>    BNE.w 'loop
00026D98 <AmiBlitz3.ab3@10099>   MOVEM.l (A7)+,D3-D5/A1-A6
00026D9A <AmiBlitz3.ab3@10100> RTS
00026DA0 <AmiBlitz3.ab3@10108>   LEA tokeslist,A3
00026DA6 <AmiBlitz3.ab3@10109>   MOVEA.l _execbase,A6
00026DA8 <AmiBlitz3.ab3@10112>   MOVE.l (A3),D0
00026DAC <AmiBlitz3.ab3@10113>    BEQ.w 'notfound
00026DAE <AmiBlitz3.ab3@10114>   MOVEA.l D0,A3
00026DB2 <AmiBlitz3.ab3@10115>   CMP.w $4(A3),D4
00026DB6 <AmiBlitz3.ab3@10116>    BNE.w 'loop2
00026DBA <AmiBlitz3.ab3@10117>   CMP.w $6(A3),D5
00026DBE <AmiBlitz3.ab3@10118>    BNE.w 'loop2
00026DC2 <AmiBlitz3.ab3@10119>  BRA.w 'found
00026DC4 <AmiBlitz3.ab3@10124>   MOVEQ.l #$0C,D0
00026DC6 <AmiBlitz3.ab3@10125>   MOVEQ.l #$01,D1
00026DCC <AmiBlitz3.ab3@10127>   MOVE.l mempool,a0
00026DD0 <AmiBlitz3.ab3@10128>   JSR _AllocPooled(a6)
00026DD2 <AmiBlitz3.ab3@10131>   MOVEA.l D0,A3
00026DD8 <AmiBlitz3.ab3@10132>   MOVE.l tokeslist,(A3)
00026DDE <AmiBlitz3.ab3@10133>   MOVE.l A3,tokeslist
00026DE2 <AmiBlitz3.ab3@10134>   MOVE.w D4,$4(A3)
00026DE6 <AmiBlitz3.ab3@10135>   MOVE.w D5,$6(A3)
00026DEA <AmiBlitz3.ab3@10136>   CLR.l $8(A3)
00026DEC <AmiBlitz3.ab3@10139>   MOVEQ.l #$08,D0
00026DEE <AmiBlitz3.ab3@10140>   MOVEQ.l #$01,D1
00026DF4 <AmiBlitz3.ab3@10142>   MOVE.l mempool,a0
00026DF8 <AmiBlitz3.ab3@10143>   JSR _AllocPooled(a6)
00026DFA <AmiBlitz3.ab3@10146>   MOVEA.l D0,A0
00026DFE <AmiBlitz3.ab3@10147>   MOVE.l D3,$4(A0)
00026E02 <AmiBlitz3.ab3@10148>   MOVE.l $8(A3),(A0)
00026E06 <AmiBlitz3.ab3@10149>   MOVE.l A0,$8(A3)
00026E08 <AmiBlitz3.ab3@10151>   MOVE.w D4,D1
00026E0C <AmiBlitz3.ab3@10152> BRA.w searchinstr       ;use this library - NOW!
00026E10 <AmiBlitz3.ab3@10155> tokeslist: Ds.l 1
00026E14 <AmiBlitz3.ab3@10168>   BEQ.w 'skip
00026E16 <AmiBlitz3.ab3@10169>   MOVE.l A1,-(A7)
00026E18 <AmiBlitz3.ab3@10170>   ADDA.l D1,A1
00026E1A <AmiBlitz3.ab3@10171>   ADDQ.w #6,A1
00026E1C <AmiBlitz3.ab3@10174>     MOVE.w (A1)+,D1
00026E20 <AmiBlitz3.ab3@10175>     BEQ.w 'done
00026E22 <AmiBlitz3.ab3@10176>     CMP.w D2,D1
00026E26 <AmiBlitz3.ab3@10177>     BEQ.w 'skip2
00026E28 <AmiBlitz3.ab3@10178>     MOVE.l A1,-(A7)
00026E2C <AmiBlitz3.ab3@10179>     BSR.w uselib
00026E2E <AmiBlitz3.ab3@10180>     MOVEA.l (A7)+,A1
00026E30 <AmiBlitz3.ab3@10183>     ADDQ.w #2,A1
00026E34 <AmiBlitz3.ab3@10184>  BRA.w 'loop
00026E36 <AmiBlitz3.ab3@10187>   MOVEA.l (A7)+,A1
00026E38 <AmiBlitz3.ab3@10190> RTS
00026E3E <AmiBlitz3.ab3@10194>   MOVEA.l libpointer,A1
00026E42 <AmiBlitz3.ab3@10197>   CMPA.w #$0,A1
00026E46 <AmiBlitz3.ab3@10198>    BEQ.b 'rts
00026E4A <AmiBlitz3.ab3@10199>   CMP.w $4(A1),D1
00026E4E <AmiBlitz3.ab3@10200>    BEQ.w 'found
00026E50 <AmiBlitz3.ab3@10201>   MOVEA.l (A1),A1
00026E54 <AmiBlitz3.ab3@10202>  BRA.w 'loop
00026E56 <AmiBlitz3.ab3@10205>   MOVEQ.l #-$01,D1
00026E58 <AmiBlitz3.ab3@10208> RTS
00026E5C <AmiBlitz3.ab3@10215>   MOVEM.l d0/a2,-(a7)
00026E5E <AmiBlitz3.ab3@10216>   MOVEQ #0,d0
00026E64 <AmiBlitz3.ab3@10217>   LEA instrtab+4,a2
00026E66 <AmiBlitz3.ab3@10218>   MOVE.w d1,d0
00026E68 <AmiBlitz3.ab3@10219>   ASL.l #3,d0
00026E6C <AmiBlitz3.ab3@10220>   MOVE.l 0(a2,d0.l),a1                                     ;*8
00026E72 <AmiBlitz3.ab3@10221>   CMP.l #0,a1
00026E76 <AmiBlitz3.ab3@10222>   BNE 'foundb
00026E7C <AmiBlitz3.ab3@10224>   MOVEA.l libpointer,A1
00026E80 <AmiBlitz3.ab3@10227>     CMPA.w #$0,A1
00026E84 <AmiBlitz3.ab3@10229>     BEQ.w noliberr
00026E88 <AmiBlitz3.ab3@10231>     CMP.w $4(A1),D1
00026E8C <AmiBlitz3.ab3@10232>     BEQ.w 'found
00026E8E <AmiBlitz3.ab3@10233>    MOVEA.l (A1),A1
00026E92 <AmiBlitz3.ab3@10234>  BRA.w 'loop
00026E96 <AmiBlitz3.ab3@10238>   MOVE.l a1,0(a2,d0.l)
00026E9A <AmiBlitz3.ab3@10241>   MOVEM.l (a7)+,d0/a2
00026E9C <AmiBlitz3.ab3@10243> RTS
00026EA0 <AmiBlitz3.ab3@10253>   MOVEM.l d0-d1/a1,-(a7)
00026EA2 <AmiBlitz3.ab3@10254>   MOVEQ #0,d0
00026EA8 <AmiBlitz3.ab3@10255>   LEA instrtab,a1
00026EAA <AmiBlitz3.ab3@10256>   MOVE.w d1,d0
00026EAC <AmiBlitz3.ab3@10257>   ASL.l #3,d0
00026EB0 <AmiBlitz3.ab3@10258>   MOVE.l 0(a1,d0.l),a3
00026EB4 <AmiBlitz3.ab3@10259>   MOVE.l 4(a1,d0.l),a2
00026EBA <AmiBlitz3.ab3@10260>   CMP.l #0,a3
00026EBE <AmiBlitz3.ab3@10261>   BNE 'foundb
00026EC4 <AmiBlitz3.ab3@10264>   MOVEA.l libpointer,A2
00026EC8 <AmiBlitz3.ab3@10267>   CMPA.w #$0,A2
00026ECC <AmiBlitz3.ab3@10268>   BEQ.w notokerr
00026ED0 <AmiBlitz3.ab3@10269>   CMP.w $E(A2),D1
00026ED4 <AmiBlitz3.ab3@10270>   BCS.w 'next
00026ED8 <AmiBlitz3.ab3@10271>   CMP.w $10(A2),D1
00026EDC <AmiBlitz3.ab3@10272>   BCC.w 'next
00026EE0 <AmiBlitz3.ab3@10276>   LEA $30(A2),A3
00026EE4 <AmiBlitz3.ab3@10277>   TST.w $4(A2)
00026EE8 <AmiBlitz3.ab3@10278>   BPL.w 'userlib
00026EEC <AmiBlitz3.ab3@10281>     CMP.w $E(A2),D1
00026EF0 <AmiBlitz3.ab3@10282>     BEQ.w 'found
00026EF2 <AmiBlitz3.ab3@10283>     SUBQ.w #1,D1
00026EF6 <AmiBlitz3.ab3@10284>     MOVEA.l $2(A3),A3
00026EFA <AmiBlitz3.ab3@10285>  BRA.w 'loop2
00026EFE <AmiBlitz3.ab3@10289>   MOVE.l a3,0(a1,d0.l)
00026F02 <AmiBlitz3.ab3@10290>   MOVE.l a2,4(a1,d0.l)
00026F06 <AmiBlitz3.ab3@10293>   MOVEM.l (a7)+,d0-d1/a1
00026F0A <AmiBlitz3.ab3@10295>   MOVEM.l D1/A1-a3,-(A7)      ; was  movem.l d1/a1,-(a7)
00026F0E <AmiBlitz3.ab3@10297>   CMP.w #1,(a3)
00026F12 <AmiBlitz3.ab3@10298>   BNE.s 'ex10
00026F1A <AmiBlitz3.ab3@10299>   CMP.l #$12345678,$e(a3)
00026F1E <AmiBlitz3.ab3@10300>   BNE.s 'ex10
00026F24 <AmiBlitz3.ab3@10301>   CMP.w #$ffff,$16(a3)
00026F28 <AmiBlitz3.ab3@10302>   BNE.s 'ex10
00026F2C <AmiBlitz3.ab3@10303>   MOVE.l $12(a3),d1
00026F30 <AmiBlitz3.ab3@10304>   BEQ.s 'ex10
00026F36 <AmiBlitz3.ab3@10305>   LEA pluginbase,a3
00026F3A <AmiBlitz3.ab3@10307>  JMP 0(a2,d1.l)                                             ;plugin
00026F3C <AmiBlitz3.ab3@10311>   MOVEA.l A2,A1
00026F42 <AmiBlitz3.ab3@10313>   CLR.b newmode
00026F46 <AmiBlitz3.ab3@10315>   MOVE.w $4(A1),D1       ;set lib#
00026F4A <AmiBlitz3.ab3@10320>   BSR.w uselib3
00026F4E <AmiBlitz3.ab3@10321>   MOVEM.l (A7)+,D1/A1-a3
00026F50 <AmiBlitz3.ab3@10322>  RTS
00026F56 <AmiBlitz3.ab3@10326>   MOVE.w globalvarpointer,-(a7)         ; "
00026F5E <AmiBlitz3.ab3@10327>   MOVE.w #$8004,globalvarpointer        ; "
00026F62 <AmiBlitz3.ab3@10328>   BSR.w uselib3                         ; "
00026F68 <AmiBlitz3.ab3@10329>   MOVE.w (a7)+,globalvarpointer         ; "
00026F6C <AmiBlitz3.ab3@10330>   MOVEM.l (A7)+,D1/A1-a3
00026F6E <AmiBlitz3.ab3@10331>  RTS
00026F72 <AmiBlitz3.ab3@10335>     CMP.w $E(A2),D1
00026F76 <AmiBlitz3.ab3@10336>     BEQ.w 'found
00026F78 <AmiBlitz3.ab3@10337>     SUBQ.w #1,D1
00026F7C <AmiBlitz3.ab3@10338>     MOVEA.l $2(A3),A3
00026F80 <AmiBlitz3.ab3@10339>  BRA.w 'userlib
00026F82 <AmiBlitz3.ab3@10342>   MOVEA.l (A2),A2
00026F86 <AmiBlitz3.ab3@10343> BRA.w 'loop
00026F8A <AmiBlitz3.ab3@10347>   MOVEM.l (A7)+,D1/A1-a3
00026F90 <AmiBlitz3.ab3@10348>   JSR stripspaces
00026F92 <AmiBlitz3.ab3@10349>   MOVEQ #0,d0
00026F94 <AmiBlitz3.ab3@10350>   MOVE.b (a5)+,d0
00026F9A <AmiBlitz3.ab3@10351>   MOVE.w d0,lastchar
00026F9C <AmiBlitz3.ab3@10352>   ADDQ.l #4,a7
00026F9E <AmiBlitz3.ab3@10353> RTS
00026FA4 <AmiBlitz3.ab3@10356> JUMP_writeword JMP writeword
00026FA8 <AmiBlitz3.ab3@10359> ptr_acidlibs:   Ds.l 1                                     ;deflibsat org source
00026FAC <AmiBlitz3.ab3@10360> ptr_deflibs:    Ds.l 1                                     ;acidlibsat org source
00026FB0 <AmiBlitz3.ab3@10361> ptr_userlibs:   Ds.l 1                                     ;blitzlibsat org source  ;;start of blitzlibs list!
00026FB2 <AmiBlitz3.ab3@10371>   TST.l D0
00026FB6 <AmiBlitz3.ab3@10372>   BEQ.w 'rts
00026FB8 <AmiBlitz3.ab3@10373>     MOVE.l D0,D6                                           ;d6=len
00026FBE <AmiBlitz3.ab3@10374>     MOVEA.l _dosbase,A6
00026FC4 <AmiBlitz3.ab3@10375>     MOVE.l #HUNK_RELOC_16__MODE_OLDFILE,D2
00026FC8 <AmiBlitz3.ab3@10376>     JSR _Open(A6)
00026FCA <AmiBlitz3.ab3@10377>     MOVE.l D0,D7
00026FCE <AmiBlitz3.ab3@10378>     BEQ.w 'rts
00026FD0 <AmiBlitz3.ab3@10379>       MOVE.l D6,D0
00026FD2 <AmiBlitz3.ab3@10380>       MOVEQ.l #$01,D1
00026FD8 <AmiBlitz3.ab3@10381>       MOVEA.l _execbase,A6
00026FDE <AmiBlitz3.ab3@10384>       MOVE.l mempool,a0
00026FE2 <AmiBlitz3.ab3@10385>       JSR _AllocPooled(a6)
00026FE4 <AmiBlitz3.ab3@10387>       MOVE.l D0,D5                                         ;start address
00026FE6 <AmiBlitz3.ab3@10389>       MOVE.l D7,D1                                         ; handle
00026FE8 <AmiBlitz3.ab3@10390>       MOVE.l D5,D2                                         ; buffer addr
00026FEA <AmiBlitz3.ab3@10391>       MOVE.l D6,D3                                         ; size
00026FF0 <AmiBlitz3.ab3@10392>       MOVEA.l _dosbase,A6
00026FF4 <AmiBlitz3.ab3@10393>       JSR _Read(A6)
00026FF6 <AmiBlitz3.ab3@10394>       MOVE.l D7,D1
00026FFA <AmiBlitz3.ab3@10395>       JSR _Close(A6)
00026FFC <AmiBlitz3.ab3@10397>       MOVEA.l D5,A0                                        ; buffer addr
00026FFE <AmiBlitz3.ab3@10403>         MOVE.l (A0)+,D0                                    ; naechster Longwert nach DO
00027002 <AmiBlitz3.ab3@10404>         BEQ.b 'linkdone                                    ; wenn <> 0, dann
00027006 <AmiBlitz3.ab3@10405>           LEA $20(A0),A1  ;link in.                        ;   lade inhalt von D0+40bytes nach A1
00027008 <AmiBlitz3.ab3@10406>           MOVE.l A1,(A3)                                   ;   kopiere Adresse in A1 zum libpointer
0002700A <AmiBlitz3.ab3@10407>           MOVEA.l A1,A3                                    ;   kopiere A1 nach A3
0002700C <AmiBlitz3.ab3@10408>           ADDA.l D0,A0                                     ;   addiere inhalt von D0 zu A0 hinzu
00027010 <AmiBlitz3.ab3@10412>           MOVE.l -$4(A1),D0    ;number of longwords.       ;   hole die 4bytes vor nach D0
00027012 <AmiBlitz3.ab3@10413>           ADD.l D0,D0          ;to bytes...                ;   verdoppele D0
00027014 <AmiBlitz3.ab3@10414>           ADD.l D0,D0                                      ;   verdoppele D0 nochmal
00027018 <AmiBlitz3.ab3@10415>           MOVE.l D0,$6(A1)     ;fix 1                      ;   schreibe D0 6bytes nach A1
0002701C <AmiBlitz3.ab3@10416>           CLR.l $20(A1)        ;no relocs                  ;   loesche D0+40bytes
00027020 <AmiBlitz3.ab3@10417>           LEA $C(A1,D0.L),A2   ;reloc info.                ;   lade inhalt von (A1)+D0+$C nach A2
00027022 <AmiBlitz3.ab3@10418>           CMPA.l A0,A2         ;is it over?
00027026 <AmiBlitz3.ab3@10419>           BCC.b 'linkloop                                  ; wenn A0=>A2
0002702C <AmiBlitz3.ab3@10421>             MOVE.l -$8(A2),$20(A1)  ;number of relocs.     ;
00027030 <AmiBlitz3.ab3@10422>             MOVE.l A2,$24(A1)       ;pointer to relocs.    ;
00027034 <AmiBlitz3.ab3@10423>   BRA.w 'linkloop
00027036 <AmiBlitz3.ab3@10426>       MOVE.l D5,D0
00027038 <AmiBlitz3.ab3@10429> RTS
00027062 <AmiBlitz3.ab3@10434>   !basic
000270D6 <AmiBlitz3.ab3@10435>    tempmapping$ = dos_AddPart{my_systemdir$,"token_mapping_userlibs.txt"}
0002710A <AmiBlitz3.ab3@10436>    dos_Delete{tempmapping$}
0002714E <AmiBlitz3.ab3@10437>    fid.l = file_Open{tempmapping$,#file_forcewrite}
0002716C <AmiBlitz3.ab3@10438>   !asm
00027172 <AmiBlitz3.ab3@10440>   LEA libpointer,A3
00027178 <AmiBlitz3.ab3@10444>   MOVE.l size_deflibs,D0                 ; in org source was acid libs first
0002717E <AmiBlitz3.ab3@10445>   MOVE.l deflib,d1
00027182 <AmiBlitz3.ab3@10447>   BEQ 'l1
00027186 <AmiBlitz3.ab3@10448>  BRA 'l2
0002718C <AmiBlitz3.ab3@10451>   MOVE.l #str_path_deflibs,D1
00027190 <AmiBlitz3.ab3@10455>   BSR.w load_libsfile
00027196 <AmiBlitz3.ab3@10456>   MOVE.l D0,ptr_deflibs
0002719C <AmiBlitz3.ab3@10459>   MOVE.l size_acidlibs,D0               ; in org source was deflibs libs second
000271A2 <AmiBlitz3.ab3@10460>   MOVE.l #str_path_acidlibs,D1
000271A6 <AmiBlitz3.ab3@10461>   BSR.w load_libsfile
000271AC <AmiBlitz3.ab3@10462>   MOVE.l D0,ptr_acidlibs
000271AE <AmiBlitz3.ab3@10468>   CLR.l (A3)
000271B4 <AmiBlitz3.ab3@10469>   MOVE.l A3,ptr_userlibs
000271BA <AmiBlitz3.ab3@10474>   LEA str_libfilename,A0
000271C0 <AmiBlitz3.ab3@10475>   LEA str_path_userlibs,A1
000271C2 <AmiBlitz3.ab3@10478>     MOVE.b (A1)+,(A0)+
000271C6 <AmiBlitz3.ab3@10479>   BNE.b 'loop0
000271C8 <AmiBlitz3.ab3@10482>   SUBQ.w #1,A0
000271CC <AmiBlitz3.ab3@10483>   MOVE.b #$2F,(A0)+
000271CE <AmiBlitz3.ab3@10487>   MOVE.l A0,-(A7) ;store first pos for chars        ; -- store str_path_userlibs in A7
000271D4 <AmiBlitz3.ab3@10489>   LEA ptr_userlibs_list,A2   ;lib names!
000271DA <AmiBlitz3.ab3@10490>   MOVEA.l ptr_userlibs,A3
000271E0 <AmiBlitz3.ab3@10491>   MOVEA.l _dosbase,A6
000271E2 <AmiBlitz3.ab3@10496>       MOVE.l (A2),D0                                       ; addresse aus liste nach D0
000271E6 <AmiBlitz3.ab3@10497>       BNE.b 'more                                      ; wenn nix drin, processing ueberspringen
000271E8 <AmiBlitz3.ab3@10499>       CLR.l (A3)
000271EA <AmiBlitz3.ab3@10500>       ADDQ.w #4,A7
00027214 <AmiBlitz3.ab3@10502>       !basic
00027228 <AmiBlitz3.ab3@10503>       If fid<>-1
00027232 <AmiBlitz3.ab3@10504>         file_Close{fid}
0002723E <AmiBlitz3.ab3@10505>         fid = -1
0002725C <AmiBlitz3.ab3@10507>       !asm
00027260 <AmiBlitz3.ab3@10509>  BRA.w process_libraries
00027262 <AmiBlitz3.ab3@10512>       MOVEA.l D0,A2                                        ; addresse zureuck nach A2
00027266 <AmiBlitz3.ab3@10513>       TST.w $4(A2)                                         ; naechste addresse pruefen
0002726A <AmiBlitz3.ab3@10514>     BEQ.b 'loop
0002726E <AmiBlitz3.ab3@10516>     LEA $6(A2),A1          ;add dir name to libsdir
00027270 <AmiBlitz3.ab3@10517>     MOVEA.l (A7),A0
00027272 <AmiBlitz3.ab3@10520>       MOVE.b (A1)+,(A0)+
00027276 <AmiBlitz3.ab3@10521>     BNE.w 'loop2
00027278 <AmiBlitz3.ab3@10525>     MOVE.l A0,-(A7)                  ;pointer for lib name
0002727E <AmiBlitz3.ab3@10527>     MOVE.l #str_libfilename,D1
00027280 <AmiBlitz3.ab3@10528>     MOVEQ.l #-$02,D2
00027286 <AmiBlitz3.ab3@10529>     MOVEA.l _dosbase,A6
0002728A <AmiBlitz3.ab3@10530>      JSR _Lock(A6)
0002728C <AmiBlitz3.ab3@10531>     MOVE.l D0,D1
00027290 <AmiBlitz3.ab3@10532>      BEQ.w 'exdone2
00027292 <AmiBlitz3.ab3@10533>     MOVEA.l (A7),A0
00027298 <AmiBlitz3.ab3@10534>     MOVE.b #$2F,-$1(A0)           ;#'/'
0002729A <AmiBlitz3.ab3@10537>     MOVE.l D1,-(A7)               ;lock
000272A0 <AmiBlitz3.ab3@10538>     MOVE.l #ptr_parameterstore,D2
000272A6 <AmiBlitz3.ab3@10539>     MOVEA.l _dosbase,A6
000272AA <AmiBlitz3.ab3@10540>     JSR _Examine(A6)
000272AC <AmiBlitz3.ab3@10541>     TST.l D0
000272B0 <AmiBlitz3.ab3@10542>      BEQ.w 'exdone
000272B6 <AmiBlitz3.ab3@10549>     LEA fib_FileName,A0
000272BA <AmiBlitz3.ab3@10550>     BSR.w check_for_infoextention
000272BE <AmiBlitz3.ab3@10551>     BEQ.w 'exdone
000272E8 <AmiBlitz3.ab3@10555>     !basic
0002736C <AmiBlitz3.ab3@10556>       Poke$ ?str_libfilename,dos_AddPart{Peek$(?str_path_userlibs),Peek$(?fib_FileName)}
0002738A <AmiBlitz3.ab3@10557>     !asm
00027390 <AmiBlitz3.ab3@10558>     MOVE.l #str_libfilename,D1
00027394 <AmiBlitz3.ab3@10559>     BSR.w open_userlibfile
00027396 <AmiBlitz3.ab3@10563>     MOVE.l (A7)+,D1
0002739C <AmiBlitz3.ab3@10564>     MOVEA.l _dosbase,A6
000273A0 <AmiBlitz3.ab3@10565>     JSR _UnLock(A6)
000273A2 <AmiBlitz3.ab3@10568>     ADDQ.w #4,A7    ;forget namepos
000273A6 <AmiBlitz3.ab3@10569> BRA.w 'loop
000273AC <AmiBlitz3.ab3@10576>   MOVE.l #HUNK_RELOC_16__MODE_OLDFILE,D2
000273B2 <AmiBlitz3.ab3@10577>   MOVEA.l _dosbase,A6
000273B6 <AmiBlitz3.ab3@10578>    JSR _Open(A6)
000273B8 <AmiBlitz3.ab3@10579>   MOVE.l D0,D7
000273BC <AmiBlitz3.ab3@10580>    BEQ.w 'openerr
000273BE <AmiBlitz3.ab3@10583>   MOVE.l D7,D1                                             ; filehandle
000273C4 <AmiBlitz3.ab3@10584>   MOVE.l #optstuff,D2                                     ; buffer
000273CA <AmiBlitz3.ab3@10585>   MOVEA.l _dosbase,A6
000273CC <AmiBlitz3.ab3@10586>   MOVEQ.l #$20,D3                                          ; size
000273D0 <AmiBlitz3.ab3@10587>   JSR _Read(A6)
000273D6 <AmiBlitz3.ab3@10590>   MOVE.l optstuff+28,D6      ;long words to read
000273D8 <AmiBlitz3.ab3@10591>   LSL.l #2,D6
000273DA <AmiBlitz3.ab3@10592>   MOVE.l D6,D0
000273DC <AmiBlitz3.ab3@10593>   MOVEQ.l #$01,D1
000273E2 <AmiBlitz3.ab3@10594>   MOVEA.l _execbase,A6
000273E8 <AmiBlitz3.ab3@10597>   MOVE.l mempool,a0
000273EC <AmiBlitz3.ab3@10598>   JSR _AllocPooled(a6)
000273EE <AmiBlitz3.ab3@10600>   MOVEA.l D0,A5
000273F4 <AmiBlitz3.ab3@10603>   MOVEA.l _dosbase,A6
000273F6 <AmiBlitz3.ab3@10604>   MOVE.l D7,D1                                             ; filehandle
000273F8 <AmiBlitz3.ab3@10605>   MOVE.l A5,D2                                             ; buffer
000273FA <AmiBlitz3.ab3@10606>   MOVE.l D6,D3                                             ; size
000273FE <AmiBlitz3.ab3@10607>    JSR _Read(A6)   ;read in struct
00027400 <AmiBlitz3.ab3@10609>   MOVE.l A5,(A3)
00027402 <AmiBlitz3.ab3@10612>   MOVE.l A5,d0
00027404 <AmiBlitz3.ab3@10615>   MOVEA.l A5,A3
00027408 <AmiBlitz3.ab3@10616>   MOVE.l D6,$6(A5)
0002740C <AmiBlitz3.ab3@10617>   CLR.l $20(A5)
00027436 <AmiBlitz3.ab3@10619>   !basic
00027440 <AmiBlitz3.ab3@10621>   addr_libnum.l = PutD0 + 4
00027454 <AmiBlitz3.ab3@10622>   If fid<>-1
000274F4 <AmiBlitz3.ab3@10623>     currentlib$ = LSet$(Peek.s(?fib_FileName),30)+";"+LSet$(Get_Libinfo{addr_libnum},30) ;+";"+Str$(Peek.w(addr_libnum))
00027526 <AmiBlitz3.ab3@10624>     file_WriteLine{fid,currentlib$}
00027544 <AmiBlitz3.ab3@10626>   !asm
00027546 <AmiBlitz3.ab3@10629>   MOVE.l D7,D1                                             ; filehandle
0002754C <AmiBlitz3.ab3@10630>   MOVE.l #optstuff,D2                                     ; buffer
0002754E <AmiBlitz3.ab3@10631>   MOVEQ.l #$0C,D3                                          ; size
00027554 <AmiBlitz3.ab3@10632>   MOVEA.l _dosbase,A6
00027558 <AmiBlitz3.ab3@10633>    JSR _Read(A6)
0002755E <AmiBlitz3.ab3@10636>   CMP.l #$C,D0
00027562 <AmiBlitz3.ab3@10637>    BCS.w 'closeup
00027568 <AmiBlitz3.ab3@10640>   MOVE.l optstuff+4,D0
0002756C <AmiBlitz3.ab3@10641>   MOVE.l D0,$20(A5)
0002756E <AmiBlitz3.ab3@10642>   LSL.l #2,D0
00027570 <AmiBlitz3.ab3@10643>   MOVE.l D0,D5             ;length of reloc info
00027572 <AmiBlitz3.ab3@10644>   MOVEQ.l #$01,D1
00027578 <AmiBlitz3.ab3@10645>   MOVEA.l _execbase,A6
0002757E <AmiBlitz3.ab3@10647>   MOVE.l mempool,a0
00027582 <AmiBlitz3.ab3@10648>   JSR _AllocPooled(a6)
00027588 <AmiBlitz3.ab3@10651>   MOVEA.l _dosbase,A6
0002758C <AmiBlitz3.ab3@10653>   MOVE.l D0,$24(A5)        ;pointer to reloc mem
0002758E <AmiBlitz3.ab3@10654>   MOVE.l D7,D1
00027590 <AmiBlitz3.ab3@10655>   MOVE.l D0,D2
00027592 <AmiBlitz3.ab3@10656>   MOVE.l D5,D3
00027596 <AmiBlitz3.ab3@10657>   JSR _Read(A6)
00027598 <AmiBlitz3.ab3@10660>   MOVE.l D7,D1
0002759E <AmiBlitz3.ab3@10661>   MOVEA.l _dosbase,A6
000275A2 <AmiBlitz3.ab3@10662> JMP _Close(A6)
000275A4 <AmiBlitz3.ab3@10665> RTS
000275AA <AmiBlitz3.ab3@10675>   CLR.w number_of_objects
000275B0 <AmiBlitz3.ab3@10676>   MOVEA.l end_of_tokenlist,A3
000275B6 <AmiBlitz3.ab3@10677>   MOVEA.l libpointer,A2
000275BA <AmiBlitz3.ab3@10680>     CMPA.w #$0,A2
000275BE <AmiBlitz3.ab3@10681>     BEQ.w 'done                                        ; <-- abbruch mit RTS
000275C2 <AmiBlitz3.ab3@10683>     MOVE.w $4(A2),D7                                       ; <-- get tokennumber
000275C6 <AmiBlitz3.ab3@10684>     BMI.w 'syslib
000275C8 <AmiBlitz3.ab3@10685>       LSL.w #7,D7
000275CA <AmiBlitz3.ab3@10686>       ADDQ.w #1,D7
000275CE <AmiBlitz3.ab3@10687>       MOVE.w D7,$E(A2)
000275D2 <AmiBlitz3.ab3@10690>     LEA $30(A2),A1
000275D8 <AmiBlitz3.ab3@10691>     LEA temp1,A4
000275DA <AmiBlitz3.ab3@10694>       MOVE.w (A1),D0
000275DE <AmiBlitz3.ab3@10695>       BMI.w 'next
000275E0 <AmiBlitz3.ab3@10696>       MOVE.l A1,(A4)
000275E2 <AmiBlitz3.ab3@10697>       MOVEA.l A1,A4      ;last link for subs
000275E4 <AmiBlitz3.ab3@10698>       ADDQ.w #2,A4
000275E6 <AmiBlitz3.ab3@10699>       ADDQ.w #6,A1
000275EA <AmiBlitz3.ab3@10700>       CMP.w #$8,D0
000275EE <AmiBlitz3.ab3@10701>       BEQ.w 'addtoke
000275F2 <AmiBlitz3.ab3@10702>         ANDI.w #$F,D0
000275F6 <AmiBlitz3.ab3@10703>         BNE.w 'something
000275FA <AmiBlitz3.ab3@10707>           BSR.w skiplibreg
000275FE <AmiBlitz3.ab3@10708>           LEA $C(A1),A1
00027600 <AmiBlitz3.ab3@10709>           ADDQ.w #1,D7   ;in case it's a user lib
00027604 <AmiBlitz3.ab3@10710>  BRA.w 'loop2
00027608 <AmiBlitz3.ab3@10713>     BTST #$2,D0
0002760C <AmiBlitz3.ab3@10714>     BEQ.w 'notalib
0002760E <AmiBlitz3.ab3@10715>       ADDQ.w #4,A1
00027610 <AmiBlitz3.ab3@10718>         TST.b (A1)+
00027614 <AmiBlitz3.ab3@10719>       BPL.w 'alibloop
00027618 <AmiBlitz3.ab3@10720>       BSR.w aligna1
0002761C <AmiBlitz3.ab3@10721>  BRA.w 'addtoke
0002761E <AmiBlitz3.ab3@10726>       MOVE.w (A1)+,D0
00027622 <AmiBlitz3.ab3@10727>       BMI.w 'addtoke
00027626 <AmiBlitz3.ab3@10728>       ANDI.w #$FF,D0
00027628 <AmiBlitz3.ab3@10729>       ADDA.w D0,A1
0002762C <AmiBlitz3.ab3@10730>       BSR.w aligna1
00027630 <AmiBlitz3.ab3@10731>       BSR.w skiplibreg
00027634 <AmiBlitz3.ab3@10732>       LEA $C(A1),A1
00027638 <AmiBlitz3.ab3@10733>  BRA.w 'stloop
0002763A <AmiBlitz3.ab3@10736>     MOVE.l A1,(A3)
0002763C <AmiBlitz3.ab3@10737>     MOVEA.l A1,A3
0002763E <AmiBlitz3.ab3@10738>     ADDQ.w #4,A1
00027640 <AmiBlitz3.ab3@10740>     MOVE.w D7,(A1)+
00027642 <AmiBlitz3.ab3@10743>       TST.b (A1)+
00027646 <AmiBlitz3.ab3@10744>     BNE.w 'tokeloop
00027648 <AmiBlitz3.ab3@10747>       TST.b (A1)+
0002764C <AmiBlitz3.ab3@10748>     BNE.w 'tokeloop2
00027650 <AmiBlitz3.ab3@10749>     BSR.w aligna1
00027652 <AmiBlitz3.ab3@10750>     ADDQ.w #1,D7
00027656 <AmiBlitz3.ab3@10751>  BRA.w 'loop2
0002765A <AmiBlitz3.ab3@10754>     TST.w $4(A2)
0002765E <AmiBlitz3.ab3@10755>      BMI.w 'notulib
00027662 <AmiBlitz3.ab3@10756>     MOVE.w D7,$10(A2)
00027664 <AmiBlitz3.ab3@10759>     ADDQ.w #2,A1
00027666 <AmiBlitz3.ab3@10760>     TST.l (A1)+
0002766A <AmiBlitz3.ab3@10761>      BEQ.w 'nomax
00027670 <AmiBlitz3.ab3@10762>     ADDQ.w #1,number_of_objects
00027674 <AmiBlitz3.ab3@10763>     LEA $16(A1),A1
00027676 <AmiBlitz3.ab3@10766>     SUBA.l A2,A1
0002767A <AmiBlitz3.ab3@10767>     MOVE.l A1,$12(A2)
0002767C <AmiBlitz3.ab3@10768>     MOVEA.l (A2),A2
00027680 <AmiBlitz3.ab3@10769>  BRA.w 'loop
00027682 <AmiBlitz3.ab3@10772>   CLR.l (A3)
00027688 <AmiBlitz3.ab3@10774> 
0002768E <AmiBlitz3.ab3@10776>   MOVE.l A7,errstack
00027698 <AmiBlitz3.ab3@10777>   MOVE.l #'cont,errcont
000276A0 <AmiBlitz3.ab3@10778>   MOVE.w #$FFFF,ezerr       ; was -1
000276A4 <AmiBlitz3.ab3@10779>   MOVE.w #$FFFA,D1          ;#65530
000276A8 <AmiBlitz3.ab3@10780>    BSR.w findlib            ;get address of mem lib
000276AE <AmiBlitz3.ab3@10781>   MOVE.l A1,tempvm
000276B2 <AmiBlitz3.ab3@10782>   MOVE.w #$FDA7,D1          ;#64935,
000276B6 <AmiBlitz3.ab3@10783>    BSR.w findlib
000276BC <AmiBlitz3.ab3@10784>   MOVE.l A1,ffplib
000276BE <AmiBlitz3.ab3@10787> RTS
000276C2 <AmiBlitz3.ab3@10790> ffplib:  Ds.l 1
000276C4 <AmiBlitz3.ab3@10794>     TST.w (A1)+
000276C8 <AmiBlitz3.ab3@10795>     BEQ.w 'done
000276CA <AmiBlitz3.ab3@10796>     ADDQ.w #2,A1
000276CE <AmiBlitz3.ab3@10797>  BRA.w skiplibreg
000276D0 <AmiBlitz3.ab3@10800> RTS
000276D2 <AmiBlitz3.ab3@10804>   EXG.l A1,A0
000276D6 <AmiBlitz3.ab3@10805>   BSR.w aligna1
000276D8 <AmiBlitz3.ab3@10806>   EXG.l A1,A0
000276DA <AmiBlitz3.ab3@10807> RTS
000276DC <AmiBlitz3.ab3@10811>   EXG.l D0,A1
000276DE <AmiBlitz3.ab3@10812>   ADDQ.l #1,D0
000276E2 <AmiBlitz3.ab3@10813>   BCLR #$0,D0
000276E4 <AmiBlitz3.ab3@10814>   EXG.l D0,A1
000276E6 <AmiBlitz3.ab3@10815> RTS
000276EC <AmiBlitz3.ab3@10819>   MOVEA.l _execbase,A6
000276F2 <AmiBlitz3.ab3@10820>   MOVEA.l ptr_userlibs,A2
000276F4 <AmiBlitz3.ab3@10821>   MOVE.l (A2),D0
000276F6 <AmiBlitz3.ab3@10822>   CLR.l (A2)
000276F8 <AmiBlitz3.ab3@10823>   MOVEA.l D0,A2
000276FC <AmiBlitz3.ab3@10826>     CMPA.w #$0,A2
00027700 <AmiBlitz3.ab3@10827>     BEQ.w free_userlib
00027704 <AmiBlitz3.ab3@10829>     MOVE.l $20(A2),D0
00027708 <AmiBlitz3.ab3@10830>     BEQ.b 'skip
0002770A <AmiBlitz3.ab3@10831>       LSL.l #2,D0
00027710 <AmiBlitz3.ab3@10833>       MOVE.l mempool,a0
00027714 <AmiBlitz3.ab3@10835>       MOVEA.l $24(A2),A1
00027718 <AmiBlitz3.ab3@10837>       JSR _FreePooled(A6)
0002771A <AmiBlitz3.ab3@10842>     MOVEA.l A2,A1
0002771E <AmiBlitz3.ab3@10843>     MOVE.l $6(A1),D0
00027724 <AmiBlitz3.ab3@10845>     MOVE.l mempool,a0
00027726 <AmiBlitz3.ab3@10847>     MOVEA.l (A2),A2
0002772C <AmiBlitz3.ab3@10849>     MOVEA.l _execbase,A6
00027730 <AmiBlitz3.ab3@10850>     JSR _FreePooled(A6)
00027734 <AmiBlitz3.ab3@10853> BRA.w 'loop
00027738 <AmiBlitz3.ab3@10857>   BSR.w free_userlibs
0002773E <AmiBlitz3.ab3@10859>   MOVEA.l _execbase,A6
00027744 <AmiBlitz3.ab3@10860>   CLR.l libpointer
0002774A <AmiBlitz3.ab3@10861>   MOVEA.l end_of_tokenlist,A0
0002774C <AmiBlitz3.ab3@10862>   CLR.l (A0)
00027752 <AmiBlitz3.ab3@10864>   MOVE.l size_acidlibs,D0
00027756 <AmiBlitz3.ab3@10865>   BEQ.b 'defskip
0002775C <AmiBlitz3.ab3@10866>     MOVE.l ptr_acidlibs,D1
00027760 <AmiBlitz3.ab3@10867>     BEQ.b 'defskip
00027766 <AmiBlitz3.ab3@10868>       CLR.l ptr_acidlibs
00027768 <AmiBlitz3.ab3@10869>       MOVEA.l D1,A1
0002776E <AmiBlitz3.ab3@10871>       MOVE.l mempool,a0
00027774 <AmiBlitz3.ab3@10872>       MOVEA.l _execbase,A6
00027778 <AmiBlitz3.ab3@10873>       JSR _FreePooled(A6)                                 ; free acidlibs
0002777E <AmiBlitz3.ab3@10878>   MOVE.l size_deflibs,D0
00027782 <AmiBlitz3.ab3@10879>   BEQ.b 'acidskip
00027788 <AmiBlitz3.ab3@10880>     MOVE.l ptr_deflibs,D1
0002778C <AmiBlitz3.ab3@10881>     BEQ.b 'acidskip
00027792 <AmiBlitz3.ab3@10882>       CLR.l ptr_deflibs                                    ; d0: memorySize
00027794 <AmiBlitz3.ab3@10883>       MOVEA.l D1,A1                                        ; a1: memory
0002779A <AmiBlitz3.ab3@10885>       MOVE.l mempool,a0                                    ; a0: poolHeader
000277A0 <AmiBlitz3.ab3@10886>       MOVEA.l _execbase,A6
000277A4 <AmiBlitz3.ab3@10887>       JSR _FreePooled(A6)                                  ; free deflibs
000277A6 <AmiBlitz3.ab3@10892> RTS
000277AC <AmiBlitz3.ab3@10896>   MOVEA.l currentmacroaddr,A0
000277AE <AmiBlitz3.ab3@10897>   MOVEA.l (A0),A2
000277B0 <AmiBlitz3.ab3@10898>   CLR.l (A0)
000277B6 <AmiBlitz3.ab3@10899>   MOVEA.l _execbase,A6
000277BA <AmiBlitz3.ab3@10902>     CMPA.w #$0,A2
000277BE <AmiBlitz3.ab3@10903>     BEQ.w 'done
000277C0 <AmiBlitz3.ab3@10904>     MOVEQ.l #$00,D0
000277C4 <AmiBlitz3.ab3@10905>     MOVE.w $8(A2),D0
000277C8 <AmiBlitz3.ab3@10906>     BEQ.w 'skip
000277CC <AmiBlitz3.ab3@10907>     MOVEA.l $4(A2),A1
000277D2 <AmiBlitz3.ab3@10909>     MOVE.l mempool,a0
000277D6 <AmiBlitz3.ab3@10910>     JSR _FreePooled(A6)
000277D8 <AmiBlitz3.ab3@10915>     MOVEA.l A2,A1
000277DA <AmiBlitz3.ab3@10916>     MOVEA.l (A2),A2
000277DC <AmiBlitz3.ab3@10917>     MOVEQ.l #$00,D0
000277E0 <AmiBlitz3.ab3@10918>     MOVE.b $C(A1),D0
000277E6 <AmiBlitz3.ab3@10920>     MOVE.l mempool2,a0
000277EA <AmiBlitz3.ab3@10921>     JSR _FreePooled(A6)
000277EE <AmiBlitz3.ab3@10925>  BRA.w 'loop
000277F0 <AmiBlitz3.ab3@10928> RTS
000277F6 <AmiBlitz3.ab3@10932>   MOVEA.l templabel,A2
000277FC <AmiBlitz3.ab3@10933>   CLR.l templabel
000277FE <AmiBlitz3.ab3@10935> RTS
00027804 <AmiBlitz3.ab3@10937>   MOVEA.l _execbase,A6                                     ;??looks like dead code?
00027808 <AmiBlitz3.ab3@10940>     CMPA.w #$0,A2
0002780C <AmiBlitz3.ab3@10941>     BEQ.w 'done
0002780E <AmiBlitz3.ab3@10942>     MOVEQ.l #$00,D0
00027812 <AmiBlitz3.ab3@10943>     MOVE.b $E(A2),D0                                       ;labeltemp
00027814 <AmiBlitz3.ab3@10944>     MOVEA.l A2,A1
00027816 <AmiBlitz3.ab3@10945>     MOVEA.l (A2),A2
0002781C <AmiBlitz3.ab3@10947>     MOVE.l mempool2,a0
00027820 <AmiBlitz3.ab3@10952>  BRA.w 'loop
00027822 <AmiBlitz3.ab3@10955> RTS
00027828 <AmiBlitz3.ab3@10959>   MOVEA.l data1,A4
0002782E <AmiBlitz3.ab3@10960>   CMPA.l data2at,A4
00027832 <AmiBlitz3.ab3@10961>   BCC.w 'over
00027834 <AmiBlitz3.ab3@10962>     MOVE.b D1,(A4)+
0002783A <AmiBlitz3.ab3@10963>     MOVE.l A4,data1
0002783C <AmiBlitz3.ab3@10964>  RTS
00027844 <AmiBlitz3.ab3@10967>   MOVE.w #$FFFF,dontwrite_nomemleft     ; was -1                             ;move #-1, org source
0002784A <AmiBlitz3.ab3@10968>   ADDQ.l #1,data1
0002784C <AmiBlitz3.ab3@10969> RTS
0002784E <AmiBlitz3.ab3@10973>   SWAP D1
00027852 <AmiBlitz3.ab3@10974>   BSR.w pokedata1
00027854 <AmiBlitz3.ab3@10975>   SWAP D1
0002785A <AmiBlitz3.ab3@10978>   MOVEA.l data1,A4
00027860 <AmiBlitz3.ab3@10979>   CMPA.l data2at,A4
00027864 <AmiBlitz3.ab3@10980>    BCC.w 'over
00027866 <AmiBlitz3.ab3@10981>   MOVE.w D1,(A4)+
0002786C <AmiBlitz3.ab3@10982>   MOVE.l A4,data1
0002786E <AmiBlitz3.ab3@10983>  RTS
00027876 <AmiBlitz3.ab3@10986>   MOVE.w #$FFFF,dontwrite_nomemleft    ; was -1
0002787C <AmiBlitz3.ab3@10987>   ADDQ.l #2,data1
0002787E <AmiBlitz3.ab3@10988> RTS
00027884 <AmiBlitz3.ab3@10992>   MOVE.l data1,D3                                      ;write local string/type allocs
00027886 <AmiBlitz3.ab3@10993>   MOVEQ.l #$00,D4
0002788A <AmiBlitz3.ab3@10996>   CMPA.w #$0,A2
0002788E <AmiBlitz3.ab3@10997>    BEQ.w 'done
00027892 <AmiBlitz3.ab3@10998>   TST.w $6(A2)
00027896 <AmiBlitz3.ab3@10999>    BNE.w 'next
0002789A <AmiBlitz3.ab3@11000>   MOVEA.l $A(A2),A3
000278A2 <AmiBlitz3.ab3@11001>   CMPI.l #$100,$4(A3)
000278A6 <AmiBlitz3.ab3@11002>    BCS.w 'next
000278AA <AmiBlitz3.ab3@11003>   MOVE.w $4(A2),D1
000278AE <AmiBlitz3.ab3@11004>    BSR.w pokedata1
000278B2 <AmiBlitz3.ab3@11005>   MOVE.w $8(A3),D1
000278B6 <AmiBlitz3.ab3@11006>    BSR.w pokedata1
000278B8 <AmiBlitz3.ab3@11007>   ADDQ.w #1,D4
000278BA <AmiBlitz3.ab3@11010>    MOVEA.l (A2),A2
000278BE <AmiBlitz3.ab3@11011>  BRA.w 'loop
000278C0 <AmiBlitz3.ab3@11014>    TST.w D4
000278C4 <AmiBlitz3.ab3@11015>    BEQ.w calcstatic2_skip
000278C8 <AmiBlitz3.ab3@11016>   MOVE.w #$FF37,D1              ;#65335
000278CC <AmiBlitz3.ab3@11017>    BSR.w uselib                 ;use statics lib
000278D0 <AmiBlitz3.ab3@11018>   MOVE.w #$FFFA,D1              ;use memlib
000278D4 <AmiBlitz3.ab3@11019> BRA.w uselib
000278DA <AmiBlitz3.ab3@11028>   MOVEA.l varbase,A2                                       ;add alloc mem for types/strings global
000278E0 <AmiBlitz3.ab3@11031>   MOVE.l data1,D3
000278E2 <AmiBlitz3.ab3@11032>   MOVEQ.l #$00,D4
000278E8 <AmiBlitz3.ab3@11034>   TST.b iserror
000278EC <AmiBlitz3.ab3@11035>   BEQ 'loop
000278EE <AmiBlitz3.ab3@11036>   RTS
000278F2 <AmiBlitz3.ab3@11040>    CMPA.w #$0,A2
000278F6 <AmiBlitz3.ab3@11041>    BEQ.w 'done
000278FA <AmiBlitz3.ab3@11042>   TST.w $6(A2)
000278FE <AmiBlitz3.ab3@11043>    BNE.w 'next
00027902 <AmiBlitz3.ab3@11044>   MOVEA.l $A(A2),A3
0002790A <AmiBlitz3.ab3@11045>   CMPI.l #$100,$4(A3)
0002790E <AmiBlitz3.ab3@11046>    BCS.w 'next
00027912 <AmiBlitz3.ab3@11047>   MOVE.w $4(A2),D1
00027916 <AmiBlitz3.ab3@11048>    BSR.w pokedata1
0002791A <AmiBlitz3.ab3@11049>   MOVE.w $8(A3),D1
0002791E <AmiBlitz3.ab3@11050>    BSR.w pokedata1
00027920 <AmiBlitz3.ab3@11051>   ADDQ.w #1,D4
00027922 <AmiBlitz3.ab3@11054>   MOVEA.l (A2),A2
00027926 <AmiBlitz3.ab3@11055>  BRA.w 'loop
0002792C <AmiBlitz3.ab3@11060>   MOVEA.l sharebase,A2  ; org  varbase
00027930 <AmiBlitz3.ab3@11063>   CMPA.w #$0,A2
00027934 <AmiBlitz3.ab3@11064>    BEQ.w 'doneb
00027938 <AmiBlitz3.ab3@11066>   TST.w $6(A2)
0002793C <AmiBlitz3.ab3@11067>    BNE.w 'nextb
00027940 <AmiBlitz3.ab3@11068>   MOVEA.l $A(A2),A3
00027948 <AmiBlitz3.ab3@11069>   CMPI.l #$100,$4(A3)
0002794C <AmiBlitz3.ab3@11070>    BCS.w 'nextb
00027950 <AmiBlitz3.ab3@11071>   MOVE.w $4(A2),D1
00027954 <AmiBlitz3.ab3@11072>    BSR.w pokedata1
00027958 <AmiBlitz3.ab3@11073>   MOVE.w $8(A3),D1
0002795C <AmiBlitz3.ab3@11074>    BSR.w pokedata1
0002795E <AmiBlitz3.ab3@11075>   ADDQ.w #1,D4
00027960 <AmiBlitz3.ab3@11078>   MOVEA.l (A2),A2
00027964 <AmiBlitz3.ab3@11079>  BRA.w 'loopb
00027966 <AmiBlitz3.ab3@11083>    TST.w D4
0002796A <AmiBlitz3.ab3@11084>    BEQ.w calcstatic2_skip
0002796E <AmiBlitz3.ab3@11085>   MOVE.w #$FF37,D1      ;#65335
00027972 <AmiBlitz3.ab3@11086>    BSR.w uselib         ;use statics lib                                   ;use statics lib
00027976 <AmiBlitz3.ab3@11087>   MOVE.w #$FFFA,D1      ;use memlib                                   ;use memlib
0002797A <AmiBlitz3.ab3@11088> BRA.w uselib
0002797C <AmiBlitz3.ab3@11091> RTS
00027982 <AmiBlitz3.ab3@11095>   MOVE.w numtoa2,D1
00027986 <AmiBlitz3.ab3@11096>    BSR.w writeword
0002798A <AmiBlitz3.ab3@11097>    BSR.w addoff
0002798C <AmiBlitz3.ab3@11098>   MOVE.l D3,D1
00027990 <AmiBlitz3.ab3@11099>    BSR.w writelong
00027992 <AmiBlitz3.ab3@11100>   SUBQ.w #1,D4
00027998 <AmiBlitz3.ab3@11101>   MOVE.w D4,endarray+2
0002799E <AmiBlitz3.ab3@11102>   MOVE.l endarray,D1
000279A2 <AmiBlitz3.ab3@11103> BRA.w writelong
000279A4 <AmiBlitz3.ab3@11107>   MOVE.l D3,-(A7)
000279AA <AmiBlitz3.ab3@11110>   MOVEA.l _dosbase,A6
000279AE <AmiBlitz3.ab3@11112>   JSR _Write(a6)
000279B0 <AmiBlitz3.ab3@11113>   CMP.l (A7)+,D0
000279B4 <AmiBlitz3.ab3@11114>    BNE.w 'skip
000279B6 <AmiBlitz3.ab3@11115>  RTS
000279B8 <AmiBlitz3.ab3@11118>   MOVE.l D7,D1
000279BE <AmiBlitz3.ab3@11121>   MOVEA.l _dosbase,A6
000279C2 <AmiBlitz3.ab3@11123>   JSR _Close(a6)
000279C8 <AmiBlitz3.ab3@11126> JMP error_create_exe
000279CE <AmiBlitz3.ab3@11135> 
000279D4 <AmiBlitz3.ab3@11137>   MOVE.l A7,errstack
000279D8 <AmiBlitz3.ab3@11139>   MOVEM.l d2-d7/a2-a6,-(a7)
000279E2 <AmiBlitz3.ab3@11141>   MOVE.l #'rts,errcont
000279E8 <AmiBlitz3.ab3@11143>    JSR call_setpointerbusy
000279F0 <AmiBlitz3.ab3@11145>   MOVE.w #$FFFF,anyerrs   ; was -1
000279FA <AmiBlitz3.ab3@11147>   CMP.l #-1,chipstart
000279FE <AmiBlitz3.ab3@11148>   BEQ 'l01
00027A04 <AmiBlitz3.ab3@11149>   MOVE.l chipend,d1
00027A06 <AmiBlitz3.ab3@11150>   ADDQ.l #3,d1
00027A0C <AmiBlitz3.ab3@11151>   AND.l #$fffffffc,d1                                      ;bug
00027A12 <AmiBlitz3.ab3@11152>   MOVE.l d1,chipend
00027A14 <AmiBlitz3.ab3@11153>   MOVE.l d1,a1
00027A1A <AmiBlitz3.ab3@11154>   MOVE.l chipstart,a0
00027A1C <AmiBlitz3.ab3@11155>   MOVE.l a1,d1
00027A1E <AmiBlitz3.ab3@11156>   SUB.l a0,d1
00027A24 <AmiBlitz3.ab3@11157>   MOVE.l d1,chipsize
00027A2E <AmiBlitz3.ab3@11160>   CMP.l #-1,bssstart
00027A32 <AmiBlitz3.ab3@11161>   BEQ 'l11
00027A38 <AmiBlitz3.ab3@11162>   MOVE.l realbssend,a1
00027A3E <AmiBlitz3.ab3@11163>   MOVE.l bssstart,a0
00027A40 <AmiBlitz3.ab3@11164>   MOVE.l a1,d1
00027A42 <AmiBlitz3.ab3@11165>   SUB.l a0,d1
00027A48 <AmiBlitz3.ab3@11166>   MOVE.l d1,bsssize
00027A4C <AmiBlitz3.ab3@11167>   BEQ 'l11
00027A4E <AmiBlitz3.ab3@11170>   TST.b (a0)+
00027A52 <AmiBlitz3.ab3@11171>   BEQ 'l31
00027A58 <AmiBlitz3.ab3@11172>   TST.b debugmode
00027A5C <AmiBlitz3.ab3@11173>   BEQ 'l1
00027A62 <AmiBlitz3.ab3@11174>   TST.b exdebug
00027A66 <AmiBlitz3.ab3@11175>   BNE 'l31
00027A6C <AmiBlitz3.ab3@11178>   MOVE.l #nodata,-(a7)
00027A72 <AmiBlitz3.ab3@11179>  JMP handle_compileerror
00027A74 <AmiBlitz3.ab3@11182>   CMP.l a0,a1
00027A78 <AmiBlitz3.ab3@11183>   BGT 'l32
00027A7E <AmiBlitz3.ab3@11184>   MOVE.l bssend,d1
00027A80 <AmiBlitz3.ab3@11185>   ADDQ.l #3,d1
00027A86 <AmiBlitz3.ab3@11186>   AND.l #$fffffffc,d1                                      ;bug
00027A8C <AmiBlitz3.ab3@11187>   MOVE.l d1,bssend
00027A8E <AmiBlitz3.ab3@11188>   MOVE.l d1,a1
00027A94 <AmiBlitz3.ab3@11189>   MOVE.l bssstart,a0
00027A96 <AmiBlitz3.ab3@11190>   MOVE.l a1,d1
00027A98 <AmiBlitz3.ab3@11191>   SUB.l a0,d1
00027A9E <AmiBlitz3.ab3@11192>   MOVE.l d1,bsssize
00027AA2 <AmiBlitz3.ab3@11195>   MOVEM.l d5-d7/d3,-(a7)
00027AA8 <AmiBlitz3.ab3@11197>   MOVE.w dontwrite_nomemleft,D1
00027AAC <AmiBlitz3.ab3@11198>   BNE.w 'fixdone
00027AB2 <AmiBlitz3.ab3@11200>   MOVE.l chipsize,d5
00027AB8 <AmiBlitz3.ab3@11201>   MOVE.l bsssize,d3
00027ABE <AmiBlitz3.ab3@11202>   MOVE.l chipstart,d7
00027AC4 <AmiBlitz3.ab3@11203>   MOVE.l bssstart,d6
00027ACA <AmiBlitz3.ab3@11205>   MOVEA.l hunkoffsetbase,A2
00027AD0 <AmiBlitz3.ab3@11206>   MOVEA.l destbufferstart,A1
00027AD2 <AmiBlitz3.ab3@11207>   MOVE.l A1,D2
00027AD8 <AmiBlitz3.ab3@11208>   ADD.l noinits,D2
00027ADE <AmiBlitz3.ab3@11210>   CLR.l hunkoffsetnum
00027AE2 <AmiBlitz3.ab3@11214>   CMPA.w #$0,A2
00027AE6 <AmiBlitz3.ab3@11215>    BEQ.w 'fixdone
00027AEA <AmiBlitz3.ab3@11216>   MOVE.l $4(A2),D0
00027AEE <AmiBlitz3.ab3@11218>    LEA $0(a1,d0.l),a0
00027AF0 <AmiBlitz3.ab3@11219>    MOVE.l (a0),d1
00027AF2 <AmiBlitz3.ab3@11220>   TST.l d1
00027AF6 <AmiBlitz3.ab3@11221>    BMI.w 'lm1a
00027AFE <AmiBlitz3.ab3@11222>   MOVE.b #0,newhunk
00027B08 <AmiBlitz3.ab3@11223>   CMP.l #-1,chipstart
00027B0C <AmiBlitz3.ab3@11224>   BEQ 'l10a
00027B12 <AmiBlitz3.ab3@11225>   CMP.l chipstart,d1
00027B16 <AmiBlitz3.ab3@11226>   BLT 'l10a
00027B1E <AmiBlitz3.ab3@11227>   MOVE.b #1,newhunk
00027B24 <AmiBlitz3.ab3@11228>   CMP.l chipend,d1
00027B28 <AmiBlitz3.ab3@11229>   BGE 'l110a
00027B2A <AmiBlitz3.ab3@11230>   SUB.l d7,(a0)
00027B32 <AmiBlitz3.ab3@11231>   ADD.l #$80000000,4(a2)
00027B36 <AmiBlitz3.ab3@11232>  BRA 'noway
00027B3A <AmiBlitz3.ab3@11235>   SUB.l d5,0(a0)
00027B44 <AmiBlitz3.ab3@11238>   CMP.l #-1,bssstart
00027B48 <AmiBlitz3.ab3@11239>     BEQ 'l11a
00027B4E <AmiBlitz3.ab3@11240>   CMP.l bssstart,d1
00027B52 <AmiBlitz3.ab3@11241>   BLT 'l11a
00027B58 <AmiBlitz3.ab3@11242>   CMP.l bssend,d1
00027B5C <AmiBlitz3.ab3@11243>   BGE 'l111a
00027B62 <AmiBlitz3.ab3@11244>   TST.b newhunk
00027B66 <AmiBlitz3.ab3@11245>   BEQ 'ln1a
00027B68 <AmiBlitz3.ab3@11246>   ADD.l d5,(a0)
00027B6A <AmiBlitz3.ab3@11249>   SUB.l d6,(a0)
00027B72 <AmiBlitz3.ab3@11250>   ADD.l #$40000000,4(a2)
00027B76 <AmiBlitz3.ab3@11251>  BRA 'noway
00027B7A <AmiBlitz3.ab3@11254>   SUB.l d3,0(a0)
00027B7C <AmiBlitz3.ab3@11257>   SUB.l D2,(A0)
00027B82 <AmiBlitz3.ab3@11260>   ADDQ.l #1,hunkoffsetnum
00027B84 <AmiBlitz3.ab3@11264>    MOVEA.l (A2),A2
00027B88 <AmiBlitz3.ab3@11265>  BRA.w 'loop0
00027B8C <AmiBlitz3.ab3@11269>   MOVEM.l (a7)+,d5-d7/d3
00027B92 <AmiBlitz3.ab3@11271>   MOVE.l ptr_newexefilename,D1
00027B98 <AmiBlitz3.ab3@11272>   MOVE.l #HUNK_RELOC_8__MODE_NEWFILE,D2
00027B9E <AmiBlitz3.ab3@11273>   MOVEA.l _dosbase,A6
00027BA2 <AmiBlitz3.ab3@11274>    JSR _Open(A6)
00027BA4 <AmiBlitz3.ab3@11275>   MOVE.l D0,D7
00027BA8 <AmiBlitz3.ab3@11276>    BEQ.w execerr
00027BAE <AmiBlitz3.ab3@11278>   MOVE.l objlen,D0
00027BB4 <AmiBlitz3.ab3@11280>   SUB.l #moremem,d0
00027BBA <AmiBlitz3.ab3@11282>   SUB.l noinits,D0
00027BC4 <AmiBlitz3.ab3@11284>   CMP.l #-1,bssstart
00027BC8 <AmiBlitz3.ab3@11285>   BEQ 'l60
00027BCE <AmiBlitz3.ab3@11286>   SUB.l bsssize,d0
00027BD4 <AmiBlitz3.ab3@11287>   SUB.l chipsize,d0
00027BD8 <AmiBlitz3.ab3@11288>  BRA.s 'l61
00027BE2 <AmiBlitz3.ab3@11291>   CMP.l #-1,chipstart
00027BE6 <AmiBlitz3.ab3@11292>   BEQ 'l61
00027BEC <AmiBlitz3.ab3@11293>   SUB.l bsssize,d0
00027BF2 <AmiBlitz3.ab3@11294>   SUB.l chipsize,d0
00027BF4 <AmiBlitz3.ab3@11298>   ADDQ.l #3,D0
00027BF6 <AmiBlitz3.ab3@11299>   LSR.l #2,D0
00027BFC <AmiBlitz3.ab3@11300>   MOVE.l D0,tstsize1
00027C02 <AmiBlitz3.ab3@11301>   MOVE.l D0,tstsize2
00027C04 <AmiBlitz3.ab3@11302>   MOVE.l D7,D1
00027C0A <AmiBlitz3.ab3@11303>   MOVE.l #tsthead,D2                                      ;hunkbegin
00027C0C <AmiBlitz3.ab3@11304>   MOVEQ.l #$20,D3
00027C16 <AmiBlitz3.ab3@11306>   CMP.l #-1,bssstart
00027C1A <AmiBlitz3.ab3@11307>   BEQ 'lb1
00027C24 <AmiBlitz3.ab3@11308>   CMP.l #-1,chipstart
00027C28 <AmiBlitz3.ab3@11309>   BEQ 'lb1
00027C32 <AmiBlitz3.ab3@11310>   MOVE.l #1,bssnum
00027C3C <AmiBlitz3.ab3@11311>   MOVE.l #2,chipnum
00027C3E <AmiBlitz3.ab3@11312>   MOVEQ.l #$28,D3
00027C44 <AmiBlitz3.ab3@11313>   MOVE.l bsssize,d2
00027C46 <AmiBlitz3.ab3@11314>   ADDQ.l #3,d2
00027C48 <AmiBlitz3.ab3@11315>   ASR.l #2,d2
00027C4E <AmiBlitz3.ab3@11316>   MOVE.l d2,hunkend+8
00027C54 <AmiBlitz3.ab3@11317>   MOVE.l d2,bsssize3
00027C5A <AmiBlitz3.ab3@11318>   MOVE.l chipsize,d2
00027C5C <AmiBlitz3.ab3@11319>   ADDQ.l #3,d2
00027C5E <AmiBlitz3.ab3@11320>   ASR.l #2,d2
00027C64 <AmiBlitz3.ab3@11321>   MOVE.l d2,chipsize2
00027C6E <AmiBlitz3.ab3@11322>   ADD.l #$40000000,chipsize2
00027C74 <AmiBlitz3.ab3@11323>   MOVE.l d2,hunkend2+8
00027C7A <AmiBlitz3.ab3@11324>   MOVE.l D0,tstsize1c
00027C80 <AmiBlitz3.ab3@11325>   MOVE.l D0,tstsize2c
00027C86 <AmiBlitz3.ab3@11326>   MOVE.l #hunkbegin2,d2
00027C8A <AmiBlitz3.ab3@11327>  BRA 'l100b
00027C94 <AmiBlitz3.ab3@11330>   CMP.l #-1,bssstart
00027C98 <AmiBlitz3.ab3@11331>   BEQ 'l10b
00027CA2 <AmiBlitz3.ab3@11332>   MOVE.l #1,bssnum
00027CA4 <AmiBlitz3.ab3@11333>   MOVEQ.l #$24,D3
00027CAA <AmiBlitz3.ab3@11334>   MOVE.l bsssize,d2
00027CAC <AmiBlitz3.ab3@11335>   ADDQ.l #3,d2
00027CAE <AmiBlitz3.ab3@11336>   ASR.l #2,d2
00027CB4 <AmiBlitz3.ab3@11337>   MOVE.l d2,hunkend+8
00027CBA <AmiBlitz3.ab3@11338>   MOVE.l d2,bsssize2
00027CC0 <AmiBlitz3.ab3@11339>   MOVE.l D0,tstsize1b
00027CC6 <AmiBlitz3.ab3@11340>   MOVE.l D0,tstsize2b
00027CCC <AmiBlitz3.ab3@11341>   MOVE.l #hunkbegin,d2
00027CD6 <AmiBlitz3.ab3@11344>   CMP.l #-1,chipstart
00027CDA <AmiBlitz3.ab3@11345>   BEQ 'l100b
00027CE4 <AmiBlitz3.ab3@11346>   MOVE.l #1,chipnum
00027CE6 <AmiBlitz3.ab3@11347>   MOVEQ.l #$24,D3
00027CEC <AmiBlitz3.ab3@11348>   MOVE.l chipsize,d2
00027CEE <AmiBlitz3.ab3@11349>   ADDQ.l #3,d2
00027CF0 <AmiBlitz3.ab3@11350>   ASR.l #2,d2
00027CF6 <AmiBlitz3.ab3@11351>   MOVE.l d2,hunkend2+8
00027CFC <AmiBlitz3.ab3@11352>   MOVE.l d2,bsssize2
00027D06 <AmiBlitz3.ab3@11353>   ADD.l #$40000000,bsssize2
00027D0C <AmiBlitz3.ab3@11354>   MOVE.l D0,tstsize1b
00027D12 <AmiBlitz3.ab3@11355>   MOVE.l D0,tstsize2b
00027D18 <AmiBlitz3.ab3@11356>   MOVE.l #hunkbegin,d2
00027D1C <AmiBlitz3.ab3@11360>    BSR.w mywrite
00027D22 <AmiBlitz3.ab3@11362>   MOVE.l destbufferstart,D2
00027D28 <AmiBlitz3.ab3@11363>   ADD.l noinits,D2
00027D2E <AmiBlitz3.ab3@11364>   MOVE.l objlen,D3
00027D34 <AmiBlitz3.ab3@11365>   SUB.l #moremem,d3
00027D3A <AmiBlitz3.ab3@11366>   SUB.l noinits,D3
00027D44 <AmiBlitz3.ab3@11368>   CMP.l #-1,bssstart
00027D48 <AmiBlitz3.ab3@11369>   BNE 'l40
00027D52 <AmiBlitz3.ab3@11370>   CMP.l #-1,chipstart
00027D56 <AmiBlitz3.ab3@11371>   BNE 'l40
00027D5A <AmiBlitz3.ab3@11372>  BRA 'l41
00027D60 <AmiBlitz3.ab3@11375>   MOVE.l codeend,d1
00027D62 <AmiBlitz3.ab3@11376>     SUB.l d2,d1
00027D64 <AmiBlitz3.ab3@11377>     MOVE.l d1,d3
00027D6A <AmiBlitz3.ab3@11378>   SUB.l bsssize,d3
00027D70 <AmiBlitz3.ab3@11379>   SUB.l chipsize,d3
00027D72 <AmiBlitz3.ab3@11380>   MOVE.l D7,D1
00027D76 <AmiBlitz3.ab3@11381>   BSR.w mywrite
00027D7C <AmiBlitz3.ab3@11382>   MOVE.l objlen,D3
00027D82 <AmiBlitz3.ab3@11383>   SUB.l #moremem,d3
00027D88 <AmiBlitz3.ab3@11384>   SUB.l noinits,D3
00027D8A <AmiBlitz3.ab3@11385>   MOVE.l d3,d1
00027D90 <AmiBlitz3.ab3@11386>   MOVE.l destbufferstart,D2
00027D96 <AmiBlitz3.ab3@11387>   ADD.l noinits,D2
00027D98 <AmiBlitz3.ab3@11388>   ADD.l d2,d1
00027D9E <AmiBlitz3.ab3@11389>   SUB.l codeend,d1
00027DA0 <AmiBlitz3.ab3@11390>   MOVE.l d1,d3
00027DA6 <AmiBlitz3.ab3@11391>   MOVE.l codeend,d2
00027DA8 <AmiBlitz3.ab3@11394>   MOVE.l d2,d1
00027DAA <AmiBlitz3.ab3@11395>   ADD.l d3,d1
00027DAC <AmiBlitz3.ab3@11397>   ADDQ.l #3,D1
00027DB2 <AmiBlitz3.ab3@11398>   ANDI.l #$FFFFFFFC,D1
00027DB4 <AmiBlitz3.ab3@11400>   SUB.l d2,d1
00027DB6 <AmiBlitz3.ab3@11401>   MOVE.l d1,d3
00027DB8 <AmiBlitz3.ab3@11402>   MOVE.l D7,D1
00027DBC <AmiBlitz3.ab3@11404>    BSR.w mywrite
00027DC6 <AmiBlitz3.ab3@11406>   MOVE.l hunkoffsetcounter,tstsize3
00027DCA <AmiBlitz3.ab3@11407>    BEQ.w 'skip
00027DCC <AmiBlitz3.ab3@11408>   MOVE.l D7,D1
00027DD2 <AmiBlitz3.ab3@11409>   MOVE.l #tstend,D2
00027DD4 <AmiBlitz3.ab3@11410>   MOVEQ.l #$04,D3           ; was #12
00027DD8 <AmiBlitz3.ab3@11411>    BSR.w mywrite
00027DDE <AmiBlitz3.ab3@11413>    MOVEA.l _execbase,A6
00027DE4 <AmiBlitz3.ab3@11414>    MOVE.l hunkoffsetcounter,d0
00027DE6 <AmiBlitz3.ab3@11415>    ASL.l #2,d0
00027DEC <AmiBlitz3.ab3@11416>    ADD.l #12,d0
00027DEE <AmiBlitz3.ab3@11417>    MOVEQ #0,d1
00027DF2 <AmiBlitz3.ab3@11418>    JSR _AllocMem(a6)
00027DF4 <AmiBlitz3.ab3@11419>    TST.l d0
00027DF8 <AmiBlitz3.ab3@11420>    BEQ 'nomem
00027DFE <AmiBlitz3.ab3@11421>    MOVE.l noinits,D4
00027E00 <AmiBlitz3.ab3@11422>    MOVE.l d5,-(a7)
00027E02 <AmiBlitz3.ab3@11423>    MOVE.l d0,d5
00027E04 <AmiBlitz3.ab3@11424>    MOVE.l d0,a1
00027E0A <AmiBlitz3.ab3@11425>    MOVEA.l hunkoffsetbase,A2
00027E12 <AmiBlitz3.ab3@11426>    MOVE.b #0,newhunk
00027E16 <AmiBlitz3.ab3@11429>   CMPA.w #$0,A2
00027E1A <AmiBlitz3.ab3@11430>    BEQ.w 'savehunk
00027E20 <AmiBlitz3.ab3@11431>   MOVE.l destbufferstart,D2
00027E26 <AmiBlitz3.ab3@11432>   ADD.l noinits,D2
00027E2A <AmiBlitz3.ab3@11433>   MOVE.l  $4(A2),d1
00027E2E <AmiBlitz3.ab3@11434>   BTST #31,d1
00027E32 <AmiBlitz3.ab3@11435>   BEQ 'lh1
00027E3A <AmiBlitz3.ab3@11436>   MOVE.b #1,newhunk
00027E3E <AmiBlitz3.ab3@11437>  BRA 'lh3
00027E42 <AmiBlitz3.ab3@11440>   BTST #30,d1
00027E46 <AmiBlitz3.ab3@11441>   BEQ 'lh2
00027E4E <AmiBlitz3.ab3@11442>   MOVE.b #1,newhunk
00027E52 <AmiBlitz3.ab3@11443>  BRA 'lh3
00027E54 <AmiBlitz3.ab3@11446>   ADD.l d1,d2
00027E5A <AmiBlitz3.ab3@11447>   CMP.l chipend,d2
00027E5E <AmiBlitz3.ab3@11448>   BLT 'l102c
00027E64 <AmiBlitz3.ab3@11449>   SUB.l chipsize,d1
00027E6A <AmiBlitz3.ab3@11452>   CMP.l bssend,d2
00027E6E <AmiBlitz3.ab3@11453>   BLT 'l101c
00027E74 <AmiBlitz3.ab3@11454>   SUB.l bsssize,d1
00027E76 <AmiBlitz3.ab3@11457>   MOVE.l d1,(a1)
00027E78 <AmiBlitz3.ab3@11458>   SUB.l D4,(A1)+
00027E7A <AmiBlitz3.ab3@11461>   MOVEA.l (A2),A2
00027E7E <AmiBlitz3.ab3@11462>  BRA.w 'oloopb
00027E80 <AmiBlitz3.ab3@11465>   MOVE.l D7,D1
00027E86 <AmiBlitz3.ab3@11466>   MOVEA.l _dosbase,A6
00027E90 <AmiBlitz3.ab3@11467>   MOVE.l hunkoffsetnum,tstsize3
00027E94 <AmiBlitz3.ab3@11468>   BEQ 'ln1c
00027E9A <AmiBlitz3.ab3@11469>   MOVE.l #tstend+4,d2
00027E9C <AmiBlitz3.ab3@11470>     MOVEQ #8,d3
00027EA0 <AmiBlitz3.ab3@11471>    JSR _Write(A6)
00027EA2 <AmiBlitz3.ab3@11472>   MOVE.l d7,d1
00027EA8 <AmiBlitz3.ab3@11473>   MOVE.l hunkoffsetnum,d3
00027EAA <AmiBlitz3.ab3@11474>   ASL.l #2,d3
00027EAC <AmiBlitz3.ab3@11475>   MOVE.l d5,D2
00027EB0 <AmiBlitz3.ab3@11476>   JSR _Write(a6)
00027EB6 <AmiBlitz3.ab3@11479>   TST.b newhunk
00027EBA <AmiBlitz3.ab3@11480>   BEQ 'l10c
00027EC0 <AmiBlitz3.ab3@11481>   MOVEA.l hunkoffsetbase,A2
00027EC2 <AmiBlitz3.ab3@11482>   MOVE.l d5,a0
00027EC4 <AmiBlitz3.ab3@11483>   ADDQ #8,a0
00027ECC <AmiBlitz3.ab3@11484>   MOVE.l bssnum,-4(a0)
00027ECE <AmiBlitz3.ab3@11485>   MOVEQ #0,d6
00027ED2 <AmiBlitz3.ab3@11488>   CMPA.w #$0,A2
00027ED6 <AmiBlitz3.ab3@11489>    BEQ.w 'lh3c
00027EDC <AmiBlitz3.ab3@11490>   MOVE.l destbufferstart,D2
00027EE2 <AmiBlitz3.ab3@11491>   ADD.l noinits,D2
00027EE6 <AmiBlitz3.ab3@11492>   MOVE.l  $4(A2),d1
00027EEA <AmiBlitz3.ab3@11493>   BTST #30,d1
00027EEE <AmiBlitz3.ab3@11494>   BEQ 'lh1c
00027EF2 <AmiBlitz3.ab3@11495>   BCLR #30,d1
00027EF4 <AmiBlitz3.ab3@11496>   MOVE.l d1,(a0)
00027EF6 <AmiBlitz3.ab3@11497>   SUB.l D4,(A0)+
00027EF8 <AmiBlitz3.ab3@11498>   ADDQ.l #1,d6
00027EFA <AmiBlitz3.ab3@11501>   MOVE.l (a2),a2
00027EFE <AmiBlitz3.ab3@11502>  BRA 'lh2c
00027F00 <AmiBlitz3.ab3@11505>   TST.l d6
00027F04 <AmiBlitz3.ab3@11506>     BEQ 'lh10c
00027F06 <AmiBlitz3.ab3@11507>     MOVE.l d5,a0
00027F08 <AmiBlitz3.ab3@11508>     MOVE.l d6,(a0)
00027F0A <AmiBlitz3.ab3@11509>     MOVE.l d7,d1
00027F0C <AmiBlitz3.ab3@11510>     MOVE.l d5,d2
00027F0E <AmiBlitz3.ab3@11511>     MOVE.l d6,d3
00027F10 <AmiBlitz3.ab3@11512>     ASL.l #2,d3
00027F12 <AmiBlitz3.ab3@11513>     ADDQ.l #8,d3
00027F16 <AmiBlitz3.ab3@11514>     BSR.w mywrite
00027F1C <AmiBlitz3.ab3@11517>   MOVEA.l hunkoffsetbase,A2
00027F1E <AmiBlitz3.ab3@11518>   MOVE.l d5,a0
00027F20 <AmiBlitz3.ab3@11519>   ADDQ #8,a0
00027F28 <AmiBlitz3.ab3@11520>   MOVE.l chipnum,-4(a0)
00027F2A <AmiBlitz3.ab3@11521>   MOVEQ #0,d6
00027F2E <AmiBlitz3.ab3@11524>   CMPA.w #$0,A2
00027F32 <AmiBlitz3.ab3@11525>    BEQ.w 'lh30c
00027F38 <AmiBlitz3.ab3@11526>   MOVE.l destbufferstart,D2
00027F3E <AmiBlitz3.ab3@11527>   ADD.l noinits,D2
00027F42 <AmiBlitz3.ab3@11528>   MOVE.l  $4(A2),d1
00027F46 <AmiBlitz3.ab3@11529>   BTST #31,d1
00027F4A <AmiBlitz3.ab3@11530>   BEQ 'lh11c
00027F4E <AmiBlitz3.ab3@11531>   BCLR #31,d1
00027F50 <AmiBlitz3.ab3@11532>   MOVE.l d1,(a0)
00027F52 <AmiBlitz3.ab3@11533>   SUB.l D4,(A0)+
00027F54 <AmiBlitz3.ab3@11534>   ADDQ.l #1,d6
00027F56 <AmiBlitz3.ab3@11537>   MOVE.l (a2),a2
00027F5A <AmiBlitz3.ab3@11538>  BRA 'lh20c
00027F5C <AmiBlitz3.ab3@11541>   TST.l d6
00027F60 <AmiBlitz3.ab3@11542>     BEQ 'l10c
00027F62 <AmiBlitz3.ab3@11543>     MOVE.l d5,a0
00027F64 <AmiBlitz3.ab3@11544>     MOVE.l d6,(a0)
00027F66 <AmiBlitz3.ab3@11545>     MOVE.l d7,d1
00027F68 <AmiBlitz3.ab3@11546>     MOVE.l d5,d2
00027F6A <AmiBlitz3.ab3@11547>     MOVE.l d6,d3
00027F6C <AmiBlitz3.ab3@11548>     ASL.l #2,d3
00027F6E <AmiBlitz3.ab3@11549>     ADDQ.l #8,d3
00027F72 <AmiBlitz3.ab3@11550>     BSR.w mywrite
00027F78 <AmiBlitz3.ab3@11554>    MOVEA.l _execbase,A6
00027F7E <AmiBlitz3.ab3@11555>    MOVE.l hunkoffsetcounter,d0
00027F80 <AmiBlitz3.ab3@11556>    ASL.l #2,d0
00027F86 <AmiBlitz3.ab3@11557>    ADD.l #12,d0
00027F88 <AmiBlitz3.ab3@11558>    MOVE.l d5,a1
00027F8C <AmiBlitz3.ab3@11559>    JSR _FreeMem(a6)
00027F92 <AmiBlitz3.ab3@11560>    MOVEA.l _dosbase,A6
00027F94 <AmiBlitz3.ab3@11561>    MOVE.l (a7)+,d5
00027F98 <AmiBlitz3.ab3@11562>  BRA 'skip2
00027F9E <AmiBlitz3.ab3@11566>   MOVEA.l hunkoffsetbase,A2
00027FA4 <AmiBlitz3.ab3@11567>   MOVE.l noinits,D4
00027FA8 <AmiBlitz3.ab3@11570>   CMPA.w #$0,A2                                            ;write hunkoffsets
00027FAC <AmiBlitz3.ab3@11571>   BEQ.w 'skip2
00027FB0 <AmiBlitz3.ab3@11572>   LEA $4(A2),A1
00027FB2 <AmiBlitz3.ab3@11573>   SUB.l D4,(A1)
00027FB4 <AmiBlitz3.ab3@11574>   MOVE.l D7,D1
00027FB6 <AmiBlitz3.ab3@11575>   MOVE.l A1,D2
00027FB8 <AmiBlitz3.ab3@11576>   MOVEQ.l #$04,D3
00027FBC <AmiBlitz3.ab3@11577>   BSR.w mywrite
00027FC0 <AmiBlitz3.ab3@11579>   ADD.l D4,$4(A2)
00027FC2 <AmiBlitz3.ab3@11580>   MOVEA.l (A2),A2
00027FC6 <AmiBlitz3.ab3@11581>  BRA.w 'loop
00027FCC <AmiBlitz3.ab3@11584>   CLR.l tstsize3
00027FCE <AmiBlitz3.ab3@11585>   MOVE.l D7,D1
00027FD4 <AmiBlitz3.ab3@11586>   MOVE.l #tstsize3,D2
00027FD6 <AmiBlitz3.ab3@11587>   MOVEQ.l #$04,D3
00027FDA <AmiBlitz3.ab3@11588>    BSR.w mywrite
00027FE2 <AmiBlitz3.ab3@11591>   BTST #$7,link_debuginfo
00027FE6 <AmiBlitz3.ab3@11592>    BEQ.w 'nodebug
00027FEC <AmiBlitz3.ab3@11594>   MOVE.l #sysdebug,D2                                      ;debughunks
00027FEE <AmiBlitz3.ab3@11595>   MOVEQ.l #$04,D3
00027FF0 <AmiBlitz3.ab3@11596>   MOVE.l D7,D1
00027FF4 <AmiBlitz3.ab3@11597>    BSR.w mywrite
00027FFA <AmiBlitz3.ab3@11599>   MOVEA.l labelbase,A2
00027FFE <AmiBlitz3.ab3@11602>   CMPA.w #$0,A2
00028002 <AmiBlitz3.ab3@11603>    BEQ.w 'dedone
00028008 <AmiBlitz3.ab3@11604>   BTST #$0,$7(A2)
0002800C <AmiBlitz3.ab3@11605>    BEQ.w 'dedeb
00028014 <AmiBlitz3.ab3@11606>   CMPI.l #$1,$4(A2)
00028018 <AmiBlitz3.ab3@11609>   BRA.w 'denext                                            ;only addr labels
0002801A <AmiBlitz3.ab3@11613>   MOVEQ.l #$00,D4
0002801E <AmiBlitz3.ab3@11614>   MOVE.b $12(A2),D4
00028022 <AmiBlitz3.ab3@11615>   SUBI.w #$13,D4
00028024 <AmiBlitz3.ab3@11616>   ADDQ.w #2,D4
00028028 <AmiBlitz3.ab3@11617>   ANDI.w #$FFFC,D4     ;long align
0002802A <AmiBlitz3.ab3@11618>   MOVE.l D4,D5
0002802C <AmiBlitz3.ab3@11619>   LSR.w #2,D5
00028032 <AmiBlitz3.ab3@11620>   MOVE.l D5,temp1
00028034 <AmiBlitz3.ab3@11621>   LSL.w #2,D5          ;#bytes
0002803A <AmiBlitz3.ab3@11623>   MOVE.l #temp1,a1
00028040 <AmiBlitz3.ab3@11627>   LEA debugstore,a0
00028042 <AmiBlitz3.ab3@11628>   MOVE.l (a1),(a0)+
00028044 <AmiBlitz3.ab3@11630>   MOVEQ.l #$04,D3
00028048 <AmiBlitz3.ab3@11634>   LEA $13(A2),A1
0002804A <AmiBlitz3.ab3@11636>   MOVE.l d4,d1
0002804C <AmiBlitz3.ab3@11637>   SUBQ.l #1,d1
0002804E <AmiBlitz3.ab3@11640>     MOVE.b (a1)+,d0
00028052 <AmiBlitz3.ab3@11641>     BEQ 'l21d
00028056 <AmiBlitz3.ab3@11642>     CMP.b #"'",d0                                            ; ' does reassembler/assembler not like, so replace
0002805A <AmiBlitz3.ab3@11643>     BNE 'ok
0002805E <AmiBlitz3.ab3@11644>     MOVE.b #"_",d0
00028060 <AmiBlitz3.ab3@11647>    MOVE.b d0,(a0)+                                      ; copy labeltext to debuginfo
00028064 <AmiBlitz3.ab3@11648>   DBF d1,'l10d
00028068 <AmiBlitz3.ab3@11650>   BRA 'l22d
0002806A <AmiBlitz3.ab3@11653>       CLR.b (a0)+
0002806E <AmiBlitz3.ab3@11654>   DBF d1,'l21d
00028070 <AmiBlitz3.ab3@11657>   ADD.l d4,d3
00028072 <AmiBlitz3.ab3@11664>   SUB.l D4,D5
00028076 <AmiBlitz3.ab3@11665>    BEQ.w 'deoff
0002807C <AmiBlitz3.ab3@11667>   MOVE.l #zero,a1
0002807E <AmiBlitz3.ab3@11671>   MOVE.l (a1),(a0)+
00028080 <AmiBlitz3.ab3@11675>   ADD.l d5,d3
00028084 <AmiBlitz3.ab3@11681>   MOVE.l $8(A2),D2
0002808A <AmiBlitz3.ab3@11682>   SUB.l destbufferstart,D2
00028090 <AmiBlitz3.ab3@11683>   SUB.l noinits,D2
00028096 <AmiBlitz3.ab3@11684>   MOVE.l D2,temp1
0002809C <AmiBlitz3.ab3@11686>   MOVE.l #temp1,a1
0002809E <AmiBlitz3.ab3@11690>   MOVE.l (a1),(a0)+
000280A4 <AmiBlitz3.ab3@11691>   ADD.l #4,d3
000280AA <AmiBlitz3.ab3@11692>   LEA debugstore,a0
000280AC <AmiBlitz3.ab3@11693>   MOVE.l a0,d2
000280AE <AmiBlitz3.ab3@11696>   MOVE.l D7,D1
000280B2 <AmiBlitz3.ab3@11697>   BSR.w mywrite
000280B4 <AmiBlitz3.ab3@11700>   MOVEA.l (A2),A2
000280B8 <AmiBlitz3.ab3@11701>  BRA.w 'deloop
000280BE <AmiBlitz3.ab3@11704>   MOVE.l #zero,D2
000280C0 <AmiBlitz3.ab3@11705>   MOVEQ.l #$04,D3
000280C2 <AmiBlitz3.ab3@11706>   MOVE.l D7,D1
000280C6 <AmiBlitz3.ab3@11707>   BSR.w mywrite
000280C8 <AmiBlitz3.ab3@11710>   MOVE.l D7,D1
000280CE <AmiBlitz3.ab3@11711>   MOVE.l #tstdone,D2                                      ;hunkend
000280D0 <AmiBlitz3.ab3@11712>   MOVEQ.l #$04,D3
000280DA <AmiBlitz3.ab3@11714>   CMPI.l #-1,bssstart
000280DE <AmiBlitz3.ab3@11715>   BEQ 'l10e
000280E0 <AmiBlitz3.ab3@11716>   MOVEQ #16,d3
000280E6 <AmiBlitz3.ab3@11717>   MOVE.l #hunkend,d2
000280F0 <AmiBlitz3.ab3@11718>   CMPI.l #-1,chipstart
000280F4 <AmiBlitz3.ab3@11719>   BEQ 'l10e
000280F6 <AmiBlitz3.ab3@11720>   MOVE.l d7,d1
000280F8 <AmiBlitz3.ab3@11721>   MOVEQ #12,d3
000280FC <AmiBlitz3.ab3@11722>   BSR.w mywrite
00028106 <AmiBlitz3.ab3@11725>   CMPI.l #-1,chipstart
0002810A <AmiBlitz3.ab3@11726>   BEQ 'l11e
0002810C <AmiBlitz3.ab3@11727>   MOVEQ #12,d3
00028112 <AmiBlitz3.ab3@11728>   MOVE.l #hunkend2,d2
00028114 <AmiBlitz3.ab3@11729>   MOVE.l d7,d1
00028118 <AmiBlitz3.ab3@11730>   BSR.w mywrite
0002811A <AmiBlitz3.ab3@11731>   MOVE.l d7,d1
00028120 <AmiBlitz3.ab3@11732>   MOVE.l chipstart,d2
00028126 <AmiBlitz3.ab3@11733>   MOVE.l chipsize,d3
0002812A <AmiBlitz3.ab3@11734>   BSR.w mywrite
0002812C <AmiBlitz3.ab3@11735>   MOVEQ #4,d3
00028132 <AmiBlitz3.ab3@11736>   MOVE.l #hunkend,d2
00028134 <AmiBlitz3.ab3@11737>   MOVE.l d7,d1
00028138 <AmiBlitz3.ab3@11741>   BSR.w mywrite
0002813A <AmiBlitz3.ab3@11742>   MOVE.l D7,D1
00028140 <AmiBlitz3.ab3@11743>   MOVEA.l _dosbase,A6
00028144 <AmiBlitz3.ab3@11744>   JSR _Close(A6)
0002814C <AmiBlitz3.ab3@11749>   BTST #$7,create_iconfile
00028150 <AmiBlitz3.ab3@11750>    BEQ.w 'done
00028156 <AmiBlitz3.ab3@11754>   MOVEA.l ptr_newexefilename,A0
00028158 <AmiBlitz3.ab3@11757>     TST.b (A0)+
0002815C <AmiBlitz3.ab3@11758>   BNE.w 'iloop
0002815E <AmiBlitz3.ab3@11759>   SUBQ.w #1,A0
00028160 <AmiBlitz3.ab3@11760>   MOVE.l A0,-(A7)        ;to later null out!
00028166 <AmiBlitz3.ab3@11761>   LEA str_infoextention2,A1
00028168 <AmiBlitz3.ab3@11764>     MOVE.b (A1)+,(A0)+
0002816C <AmiBlitz3.ab3@11765>   BNE.w 'iloop2
00028172 <AmiBlitz3.ab3@11767>   MOVE.l ptr_newexefilename,D1
00028174 <AmiBlitz3.ab3@11768>   MOVEQ.l #-$02,D2
0002817A <AmiBlitz3.ab3@11769>   MOVEA.l _dosbase,A6
0002817E <AmiBlitz3.ab3@11770>   JSR _Lock(A6)
00028180 <AmiBlitz3.ab3@11771>   MOVE.l D0,D1
00028184 <AmiBlitz3.ab3@11772>   BEQ.w 'dildo      ;not exist                                    ;no icon exit so jump to create one  tomsmart1
00028188 <AmiBlitz3.ab3@11773>   JSR _UnLock(A6)                                          ;OH!! there is a Icon so we must Unlock it  tomsmart1
0002818C <AmiBlitz3.ab3@11774>  BRA.w 'ifail                                            ;and skip writing a Icon  tomsmart1
00028192 <AmiBlitz3.ab3@11777>   MOVE.l ptr_newexefilename,D1
00028198 <AmiBlitz3.ab3@11778>   MOVE.l #HUNK_RELOC_8__MODE_NEWFILE,D2
0002819E <AmiBlitz3.ab3@11779>   MOVEA.l _dosbase,A6
000281A2 <AmiBlitz3.ab3@11780>    JSR _Open(A6)
000281A4 <AmiBlitz3.ab3@11781>   MOVE.l D0,D7
000281A8 <AmiBlitz3.ab3@11782>    BEQ.w 'ifail
000281AE <AmiBlitz3.ab3@11783>   MOVE.l #icongfx_data,D2                                  ; icon graphics
000281B4 <AmiBlitz3.ab3@11784>   MOVE.l #icongfx_data_end-icongfx_data,D3                 ; length of gfx-data
000281B6 <AmiBlitz3.ab3@11785>   MOVE.l D7,D1
000281BC <AmiBlitz3.ab3@11786>   MOVEA.l _dosbase,A6
000281C0 <AmiBlitz3.ab3@11787>   JSR _Write(A6)
000281C2 <AmiBlitz3.ab3@11788>   MOVE.l D7,D1
000281C6 <AmiBlitz3.ab3@11789>   JSR _Close(A6)
000281C8 <AmiBlitz3.ab3@11792>   MOVEA.l (A7)+,A0
000281CA <AmiBlitz3.ab3@11793>   CLR.b (A0)
000281D0 <AmiBlitz3.ab3@11799>   TST.b exdebug
000281D4 <AmiBlitz3.ab3@11800>    BEQ 'fixdoneb
000281DA <AmiBlitz3.ab3@11801>   MOVE.w dontwrite_nomemleft,D1
000281DE <AmiBlitz3.ab3@11802>   BNE.w 'fixdoneb
000281E4 <AmiBlitz3.ab3@11803>   MOVE.l chipsize,d5
000281EA <AmiBlitz3.ab3@11804>   MOVE.l bsssize,d3
000281F0 <AmiBlitz3.ab3@11805>   MOVE.l chipstart,d7
000281F6 <AmiBlitz3.ab3@11806>   MOVE.l bssstart,d6
000281FC <AmiBlitz3.ab3@11807>   MOVEA.l hunkoffsetbase,A2
00028202 <AmiBlitz3.ab3@11808>   MOVEA.l destbufferstart,A1
00028204 <AmiBlitz3.ab3@11809>   MOVE.l A1,D2
0002820A <AmiBlitz3.ab3@11810>   ADD.l noinits,D2
00028210 <AmiBlitz3.ab3@11811>   CLR.l hunkoffsetnum
00028214 <AmiBlitz3.ab3@11814>   CMPA.w #$0,A2
00028218 <AmiBlitz3.ab3@11815>    BEQ.w 'fixdoneb
0002821C <AmiBlitz3.ab3@11816>   MOVE.l $4(A2),D0
00028220 <AmiBlitz3.ab3@11817>    LEA $0(a1,d0.l),a0
00028222 <AmiBlitz3.ab3@11818>    MOVE.l (a0),d1
00028224 <AmiBlitz3.ab3@11819>   TST.l d1
00028228 <AmiBlitz3.ab3@11820>    BMI.w 'lm1f
00028230 <AmiBlitz3.ab3@11821>   MOVE.b #0,newhunk
0002823A <AmiBlitz3.ab3@11822>   CMP.l #-1,chipstart
0002823E <AmiBlitz3.ab3@11823>   BEQ 'l10f
00028244 <AmiBlitz3.ab3@11824>   CMP.l chipstart,d1
00028248 <AmiBlitz3.ab3@11825>   BLT 'l10f
00028250 <AmiBlitz3.ab3@11826>   MOVE.b #1,newhunk
00028256 <AmiBlitz3.ab3@11827>   CMP.l chipend,d1
0002825A <AmiBlitz3.ab3@11828>   BGE 'l110f
0002825C <AmiBlitz3.ab3@11829>   ADD.l d7,(a0)
00028264 <AmiBlitz3.ab3@11830>   ADD.l #$80000000,4(a2)
00028268 <AmiBlitz3.ab3@11831>  BRA 'nowayb
0002826C <AmiBlitz3.ab3@11834>   ADD.l d5,0(a0)
00028276 <AmiBlitz3.ab3@11837>   CMP.l #-1,bssstart
0002827A <AmiBlitz3.ab3@11838>     BEQ 'l11f
00028280 <AmiBlitz3.ab3@11839>   CMP.l bssstart,d1
00028284 <AmiBlitz3.ab3@11840>   BLT 'l11f
0002828A <AmiBlitz3.ab3@11841>   CMP.l bssend,d1
0002828E <AmiBlitz3.ab3@11842>   BGE 'l111f
00028294 <AmiBlitz3.ab3@11843>   TST.b newhunk
00028298 <AmiBlitz3.ab3@11844>   BEQ 'ln1f
0002829A <AmiBlitz3.ab3@11845>   ADD.l d5,(a0)
0002829C <AmiBlitz3.ab3@11848>   ADD.l d6,(a0)
000282A4 <AmiBlitz3.ab3@11849>   ADD.l #$40000000,4(a2)
000282A8 <AmiBlitz3.ab3@11850>  BRA 'nowayb
000282AC <AmiBlitz3.ab3@11853>   ADD.l d3,0(a0)
000282AE <AmiBlitz3.ab3@11856>   ADD.l D2,(A0)                                            ;only normal code offsets restore
000282B4 <AmiBlitz3.ab3@11859>   ADDQ.l #1,hunkoffsetnum
000282B6 <AmiBlitz3.ab3@11862>   MOVEA.l (A2),A2
000282BA <AmiBlitz3.ab3@11863>  BRA.w 'loop0b
000282C0 <AmiBlitz3.ab3@11867>   JSR call_setpointernormal
000282C4 <AmiBlitz3.ab3@11868>   MOVEM.l (a7)+,d2-d7/a2-a6
000282C6 <AmiBlitz3.ab3@11871> RTS
000282C8 <AmiBlitz3.ab3@11877>   MOVE.l D2,-(A7)
000282CE <AmiBlitz3.ab3@11878>   MOVE.l destpointer,D2
000282D4 <AmiBlitz3.ab3@11879>   SUB.l destbufferstart,D2
000282D8 <AmiBlitz3.ab3@11880>   BSR.w addhunkoffset
000282DA <AmiBlitz3.ab3@11881>   MOVE.l (A7)+,D2
000282DC <AmiBlitz3.ab3@11882> RTS
000282E0 <AmiBlitz3.ab3@11888>   MOVEM.l D0-D1/A0-A1/A6,-(A7)
000282E6 <AmiBlitz3.ab3@11890>   TST.b nohunkoffset
000282EA <AmiBlitz3.ab3@11891>   BNE 'l10
000282EC <AmiBlitz3.ab3@11893>   MOVEQ.l #$8,D0
000282EE <AmiBlitz3.ab3@11894>   MOVEQ.l #$01,D1
000282F4 <AmiBlitz3.ab3@11895>   MOVEA.l _execbase,A6
000282FA <AmiBlitz3.ab3@11897>   MOVE.l mempool2,a0
000282FE <AmiBlitz3.ab3@11898>   JSR _AllocPooled(a6)
00028304 <AmiBlitz3.ab3@11902>   ADDQ.l #1,hunkoffsetcounter
00028306 <AmiBlitz3.ab3@11903>   MOVEA.l D0,A0
0002830C <AmiBlitz3.ab3@11904>   MOVE.l hunkoffsetbase,(A0)
00028312 <AmiBlitz3.ab3@11905>   MOVE.l A0,hunkoffsetbase
00028316 <AmiBlitz3.ab3@11906>   MOVE.l D2,$4(A0)
0002831A <AmiBlitz3.ab3@11911>   MOVEM.l (A7)+,D0-D1/A0-A1/A6
0002831C <AmiBlitz3.ab3@11912> RTS
00028322 <AmiBlitz3.ab3@11918>   CLR.l hunkoffsetbase
00028328 <AmiBlitz3.ab3@11919>   MOVEA.l _execbase,A6
0002832E <AmiBlitz3.ab3@11920>   MOVEA.l hunkoffsetbase,A2
00028332 <AmiBlitz3.ab3@11923>     CMPA.w #$0,A2
00028336 <AmiBlitz3.ab3@11924>      BEQ.w 'skip
00028338 <AmiBlitz3.ab3@11925>     MOVEA.l A2,A1
0002833A <AmiBlitz3.ab3@11926>     MOVEQ.l #$08,D0
0002833C <AmiBlitz3.ab3@11927>     MOVEA.l (A2),A2
00028342 <AmiBlitz3.ab3@11929>     MOVE.l mempool2,a0
00028346 <AmiBlitz3.ab3@11930>     JSR _FreePooled(A6)
0002834A <AmiBlitz3.ab3@11933>  BRA.w 'loop
00028350 <AmiBlitz3.ab3@11936>   CLR.l hunkoffsetcounter
00028352 <AmiBlitz3.ab3@11937> RTS
0002836A <AmiBlitz3.ab3@11940> cmakebuff:  Ds.l 6                                          ;dc.w 12 org source
0002836E <AmiBlitz3.ab3@11941> cmakea5:    Ds.l 1
00028370 <AmiBlitz3.ab3@11942> cmake:      Ds.w 1
000283F0 <AmiBlitz3.ab3@11943> cmakebak:   Ds.l 32                                         ;ds.b 128 org source
000283F6 <AmiBlitz3.ab3@11947>   MOVE.l A5,lastsourcepos
00028400 <AmiBlitz3.ab3@11948>   MOVE.w instringon,oldqflag
00028402 <AmiBlitz3.ab3@11951>   MOVEQ.l #$00,D0
00028404 <AmiBlitz3.ab3@11952>   MOVE.b (A5)+,D0
00028408 <AmiBlitz3.ab3@11953>    BEQ 'donea
0002840C <AmiBlitz3.ab3@11954>   BPL 'stuffa
0002840E <AmiBlitz3.ab3@11955>   LSL.l #8,D0
00028410 <AmiBlitz3.ab3@11956>   MOVE.b (A5)+,D0
00028412 <AmiBlitz3.ab3@11957>   MOVE.l a1,-(a7)
00028418 <AmiBlitz3.ab3@11958>   LEA replacedat,a1
0002841C <AmiBlitz3.ab3@11959>   Dc.w $4a71,$0a00                                         ;TST.w 0(a1,d0.l*2)
00028420 <AmiBlitz3.ab3@11960>   BEQ 'l10
00028424 <AmiBlitz3.ab3@11961>   Dc.w $3031,$0a00                                         ;MOVE.w 0(a1,d0.l*2),d0
00028426 <AmiBlitz3.ab3@11965>   MOVE.l (a7)+,a1
0002842A <AmiBlitz3.ab3@11966>  BRA 'weiter
0002842E <AmiBlitz3.ab3@11969>   CMP.w #$22,D0
00028432 <AmiBlitz3.ab3@11970>    BEQ.b 'swapquotea
00028436 <AmiBlitz3.ab3@11971>   CMP.w #$3B,D0
0002843A <AmiBlitz3.ab3@11972>    BNE.b 'donea
00028440 <AmiBlitz3.ab3@11973>   TST.w instringon
00028444 <AmiBlitz3.ab3@11974>    BNE.b 'donea
00028446 <AmiBlitz3.ab3@11977>   MOVE.b (A5)+,D0
0002844A <AmiBlitz3.ab3@11978>              BEQ 'l1
0002844E <AmiBlitz3.ab3@11979>              CMP.b #":",d0
00028452 <AmiBlitz3.ab3@11980>              BNE 'loopa                                ;:@
00028456 <AmiBlitz3.ab3@11981>              CMP.b #"@",(a5)
0002845A <AmiBlitz3.ab3@11982>              BNE 'loopa
0002845C <AmiBlitz3.ab3@11983>              ADDQ #1,a5
00028462 <AmiBlitz3.ab3@11986>   MOVE.w D0,lastchar
00028466 <AmiBlitz3.ab3@11989>  BRA.s 'weiter
0002846C <AmiBlitz3.ab3@11992>   NOT.w instringon
00028472 <AmiBlitz3.ab3@11995>    MOVE.w D0,lastchar
00028476 <AmiBlitz3.ab3@11996>    BEQ.w 'done
0002847A <AmiBlitz3.ab3@11997>    BPL.w 'done2
0002847E <AmiBlitz3.ab3@11998>   CMP.w #-$7FE4,D0                                         ;cnif
00028482 <AmiBlitz3.ab3@11999>    BEQ.w 'cnif
00028486 <AmiBlitz3.ab3@12000>   CMP.w #-$7FE3,D0                                         ;csif
0002848A <AmiBlitz3.ab3@12001>    BEQ.w 'csif
0002848E <AmiBlitz3.ab3@12002>   CMP.w #-$7FE2,D0                                         ;celse
00028492 <AmiBlitz3.ab3@12003>    BEQ.w 'celse
00028496 <AmiBlitz3.ab3@12004>   CMP.w #-$7FE1,D0                                         ;cend
0002849A <AmiBlitz3.ab3@12005>    BEQ.w 'cend
000284A0 <AmiBlitz3.ab3@12008>   TST.w skipcode
000284A4 <AmiBlitz3.ab3@12009>    BEQ.w getchar
000284A8 <AmiBlitz3.ab3@12010>   CMP.w #$7E,D0
000284AC <AmiBlitz3.ab3@12011>    BEQ.w 'cmake                                            ;tilde
000284B0 <AmiBlitz3.ab3@12012>   CMP.w #$2,D0
000284B4 <AmiBlitz3.ab3@12013>    BNE.w 'notunpath
000284BA <AmiBlitz3.ab3@12014>   MOVEA.l usedfrom,A5
000284C0 <AmiBlitz3.ab3@12015>   CLR.l usedfrom
000284C4 <AmiBlitz3.ab3@12016>  BRA.w getchar
000284C8 <AmiBlitz3.ab3@12019>   CMP.w #$1,D0
000284CC <AmiBlitz3.ab3@12020>    BNE.w 'done
000284D0 <AmiBlitz3.ab3@12024>   MOVEA.l cmakea5(PC),A5
000284D4 <AmiBlitz3.ab3@12025>  BRA.w getchar
000284DA <AmiBlitz3.ab3@12028>   TST.w cmake
000284DE <AmiBlitz3.ab3@12029>    BNE.w 'done
000284E2 <AmiBlitz3.ab3@12031>   MOVEM.l D0-D7/A0-A6,-(A7)
000284E8 <AmiBlitz3.ab3@12032>   LEA cmake,a0                                            ;reass
000284EA <AmiBlitz3.ab3@12033>   NOT.w (a0)
000284EE <AmiBlitz3.ab3@12034>   LEA cmakebak(PC),A0
000284F4 <AmiBlitz3.ab3@12035>   LEA ptr_parameterstore,A1
000284F6 <AmiBlitz3.ab3@12036>   MOVEQ.l #$1F,D0
000284F8 <AmiBlitz3.ab3@12039>     MOVE.l (A1)+,(A0)+
000284FC <AmiBlitz3.ab3@12040>   DBF D0,'cmloop
00028502 <AmiBlitz3.ab3@12043>    JSR evalconst3
00028506 <AmiBlitz3.ab3@12044>   CMP.w #$7E,D0
0002850A <AmiBlitz3.ab3@12045>    BNE.w syntaxerr
00028510 <AmiBlitz3.ab3@12046>   MOVE.l A5,cmakea5                                      ;tilde
00028514 <AmiBlitz3.ab3@12047>   LEA cmakebuff(PC),A0
00028516 <AmiBlitz3.ab3@12048>   MOVE.l D3,D2
0002851A <AmiBlitz3.ab3@12049>   BSR.w makelong
0002851C <AmiBlitz3.ab3@12050>   ADDQ.b #1,(A0)
00028522 <AmiBlitz3.ab3@12051>   LEA cmake,a0
00028524 <AmiBlitz3.ab3@12052>   NOT.w (a0)                                               ;reass
00028528 <AmiBlitz3.ab3@12053>   LEA cmakebak(PC),A0
0002852E <AmiBlitz3.ab3@12054>   LEA ptr_parameterstore,A1
00028530 <AmiBlitz3.ab3@12055>   MOVEQ.l #$1F,D0
00028532 <AmiBlitz3.ab3@12058>     MOVE.l (A0)+,(A1)+
00028536 <AmiBlitz3.ab3@12059>   DBF D0,'cmloop2
0002853A <AmiBlitz3.ab3@12061>   MOVEM.l (A7)+,D0-D7/A0-A6
0002853E <AmiBlitz3.ab3@12062>   LEA cmakebuff(PC),A5
00028542 <AmiBlitz3.ab3@12063>  BRA.w getchar
00028544 <AmiBlitz3.ab3@12066>  RTS
0002854E <AmiBlitz3.ab3@12069>   MOVE.l linenumat,ciflineat                               ;csif
00028554 <AmiBlitz3.ab3@12070>   TST.w skipcode
00028558 <AmiBlitz3.ab3@12071>    BEQ.w 'incnest
0002855C <AmiBlitz3.ab3@12072>    BSR.w get1bytemain
0002855E <AmiBlitz3.ab3@12073>    MOVE.l a1,-(a7)
00028564 <AmiBlitz3.ab3@12074>    JSR do_csif
00028566 <AmiBlitz3.ab3@12075>    MOVE.l (a7)+,a1
0002856A <AmiBlitz3.ab3@12076>  BRA.w getchar
00028574 <AmiBlitz3.ab3@12079>   MOVE.l linenumat,ciflineat                               ;cnif
0002857A <AmiBlitz3.ab3@12080>   TST.w skipcode
0002857E <AmiBlitz3.ab3@12081>    BEQ.w 'incnest
00028582 <AmiBlitz3.ab3@12082>    BSR.w get1bytemain
00028586 <AmiBlitz3.ab3@12083>    CMP.b #"@",d0
0002858A <AmiBlitz3.ab3@12084>    BNE 'cnif_ok2
0002858E <AmiBlitz3.ab3@12085>    BSR.w get1bytemain
00028596 <AmiBlitz3.ab3@12086>    MOVE.b #1,incnif
0002859C <AmiBlitz3.ab3@12087>    JSR findconstant2
000285A0 <AmiBlitz3.ab3@12088>    BEQ 'cnif_ok2
000285A6 <AmiBlitz3.ab3@12091>    MOVE.w fast,-(a7)
000285AC <AmiBlitz3.ab3@12092>    CLR.b fast
000285AE <AmiBlitz3.ab3@12093>    MOVE.l a1,-(a7)
000285B4 <AmiBlitz3.ab3@12094>    JSR do_cnif
000285BA <AmiBlitz3.ab3@12095>    CLR.b incnif
000285BC <AmiBlitz3.ab3@12096>    MOVE.l (a7)+,a1
000285C2 <AmiBlitz3.ab3@12097>    MOVE.w (a7)+,fast
000285C6 <AmiBlitz3.ab3@12098>  BRA.w getchar
000285CC <AmiBlitz3.ab3@12101>   ADDQ.w #1,connest
000285D0 <AmiBlitz3.ab3@12102>  BRA.w getchar
000285D6 <AmiBlitz3.ab3@12105>   MOVE.w connest,D0                                      ;celse
000285DA <AmiBlitz3.ab3@12106>    BNE.w getchar
000285E0 <AmiBlitz3.ab3@12107>   NOT.w skipcode
000285E4 <AmiBlitz3.ab3@12108>  BRA.w getchar
000285EA <AmiBlitz3.ab3@12111>   SUBQ.w #1,connest                                      ;cend
000285EE <AmiBlitz3.ab3@12112>    BPL.w getchar
000285F4 <AmiBlitz3.ab3@12113>   ADDQ.w #1,connest
000285FA <AmiBlitz3.ab3@12114>   MOVEA.l concomsp,A0
00028600 <AmiBlitz3.ab3@12115>   CMPA.l #concomstack,A0
00028604 <AmiBlitz3.ab3@12116>    BEQ.w nociferr
00028606 <AmiBlitz3.ab3@12117>   SUBQ.w #2,A0
0002860C <AmiBlitz3.ab3@12118>   MOVE.l A0,concomsp
00028612 <AmiBlitz3.ab3@12119>   MOVE.w (A0),skipcode
00028616 <AmiBlitz3.ab3@12120> BRA.w getchar
0002861A <AmiBlitz3.ab3@12123> ciflineat:   Ds.l 1
0002861C <AmiBlitz3.ab3@12131>   MOVEQ.l #$00,D0
0002861E <AmiBlitz3.ab3@12132>   MOVE.b (A5)+,D0
00028622 <AmiBlitz3.ab3@12133>    BEQ.b 'done
00028626 <AmiBlitz3.ab3@12134>    BPL.b 'stuff
00028628 <AmiBlitz3.ab3@12135>   LSL.w #8,D0
0002862A <AmiBlitz3.ab3@12136>   MOVE.b (A5)+,D0
0002862C <AmiBlitz3.ab3@12137>  RTS
00028630 <AmiBlitz3.ab3@12140>   CMP.w #$22,D0
00028634 <AmiBlitz3.ab3@12141>    BEQ.b 'swapquote
00028638 <AmiBlitz3.ab3@12142>   CMP.w #$3B,D0
0002863C <AmiBlitz3.ab3@12143>    BNE.b 'done
00028642 <AmiBlitz3.ab3@12144>   TST.w instringon
00028646 <AmiBlitz3.ab3@12145>    BNE.b 'done
00028648 <AmiBlitz3.ab3@12148>   MOVE.b (A5)+,D0
0002864C <AmiBlitz3.ab3@12149>             BEQ 'loop_l1
00028650 <AmiBlitz3.ab3@12150>             CMP.b #":",d0
00028654 <AmiBlitz3.ab3@12151>             BNE 'loop
00028658 <AmiBlitz3.ab3@12152>             CMP.b #"@",(a5)
0002865C <AmiBlitz3.ab3@12153>             BNE 'loop
00028662 <AmiBlitz3.ab3@12156>   MOVE.w D0,lastchar
00028664 <AmiBlitz3.ab3@12159>  RTS
0002866A <AmiBlitz3.ab3@12162>   NOT.w instringon
0002866C <AmiBlitz3.ab3@12163> RTS
00028670 <AmiBlitz3.ab3@12167>   BSR.w getchar
00028676 <AmiBlitz3.ab3@12168>   TST.w instringon
0002867A <AmiBlitz3.ab3@12169>    BNE.w 'skip
0002867E <AmiBlitz3.ab3@12170>   CMP.w #$20,D0        ;' '
00028682 <AmiBlitz3.ab3@12171>    BEQ.w get1byte_
00028684 <AmiBlitz3.ab3@12174> RTS
0002869E <AmiBlitz3.ab3@12177> gs:        Ds.w 13                                         ;ds.b 26  org source
000286A2 <AmiBlitz3.ab3@12178>            Dc.b $F6,$E4,$FC,$D6                            ;dc.b 228,246,252,196,214,220 org source
000286A4 <AmiBlitz3.ab3@12179>            Dc.b $C4,$DC
000286A8 <AmiBlitz3.ab3@12186>   BSR.w getchar
000286AE <AmiBlitz3.ab3@12187>   TST.w instringon
000286B2 <AmiBlitz3.ab3@12188>    BNE.w gchar2
000286B6 <AmiBlitz3.ab3@12189>   CMP.w #$20,D0
000286BA <AmiBlitz3.ab3@12190>    BEQ.w get1bytemain
000286BC <AmiBlitz3.ab3@12192>   TST.w D0
000286C0 <AmiBlitz3.ab3@12195>   BEQ.b 'zero
000286C6 <AmiBlitz3.ab3@12196>   TST.w instringon
000286CA <AmiBlitz3.ab3@12197>    BEQ.b 'noqoute
000286CE <AmiBlitz3.ab3@12198>   CMP.b #$20,D0           ;' '
000286D2 <AmiBlitz3.ab3@12199>    BCC.b 'skip
000286D6 <AmiBlitz3.ab3@12200>   MOVE.b gs(PC,D0.W),D0
000286D8 <AmiBlitz3.ab3@12201>  RTS
000286DC <AmiBlitz3.ab3@12204>   CMP.w #-$7FDE,D0                                         ;cmp #$8000+34,d0 org source  ;else
000286E0 <AmiBlitz3.ab3@12205>    BEQ.b 'zero
000286E4 <AmiBlitz3.ab3@12206>   CMP.w #$3A,D0           ;':'
000286E8 <AmiBlitz3.ab3@12207>    BEQ.b 'zero
000286EA <AmiBlitz3.ab3@12210>   TST.w D0
000286EC <AmiBlitz3.ab3@12213> RTS
000286F2 <AmiBlitz3.ab3@12217>   MOVE.w lastchar,D0
000286F6 <AmiBlitz3.ab3@12218> BRA.w gchar2
00028700 <AmiBlitz3.ab3@12222>   MOVE.w oldqflag,instringon
00028706 <AmiBlitz3.ab3@12223>   MOVEA.l lastsourcepos,A5
00028708 <AmiBlitz3.ab3@12224> RTS
0002870E <AmiBlitz3.ab3@12228>   MOVE.w D0,locchar
00028714 <AmiBlitz3.ab3@12229>   MOVE.l A5,locloc
00028716 <AmiBlitz3.ab3@12230> RTS
0002871C <AmiBlitz3.ab3@12234>   MOVEA.l locloc,A5
00028722 <AmiBlitz3.ab3@12235>   MOVE.w locchar,D0
00028728 <AmiBlitz3.ab3@12236>   MOVE.w D0,lastchar
0002872A <AmiBlitz3.ab3@12237> RTS
0002872A <internal_errormsg.ab3@1> XINCLUDE "internal_errormsg.ab3"
00028772 <internal_errormsg.ab3@9> XINCLUDE "internal_errormsg.ab3"
000287C4 <internal_errormsg.ab3@10> XINCLUDE "internal_errormsg.ab3"
00028802 <internal_errormsg.ab3@11> XINCLUDE "internal_errormsg.ab3"
00028840 <internal_errormsg.ab3@12> XINCLUDE "internal_errormsg.ab3"
0002886A <internal_errormsg.ab3@13> XINCLUDE "internal_errormsg.ab3"
0002889A <internal_errormsg.ab3@14> XINCLUDE "internal_errormsg.ab3"
000288E4 <internal_errormsg.ab3@15> XINCLUDE "internal_errormsg.ab3"
0002896A <internal_errormsg.ab3@16> XINCLUDE "internal_errormsg.ab3"
000289CC <internal_errormsg.ab3@17> XINCLUDE "internal_errormsg.ab3"
00028A14 <internal_errormsg.ab3@18> XINCLUDE "internal_errormsg.ab3"
00028A66 <internal_errormsg.ab3@19> XINCLUDE "internal_errormsg.ab3"
00028AC8 <internal_errormsg.ab3@20> XINCLUDE "internal_errormsg.ab3"
00028B16 <internal_errormsg.ab3@21> XINCLUDE "internal_errormsg.ab3"
00028B4C <internal_errormsg.ab3@22> XINCLUDE "internal_errormsg.ab3"
00028B7A <internal_errormsg.ab3@23> XINCLUDE "internal_errormsg.ab3"
00028B94 <internal_errormsg.ab3@24> XINCLUDE "internal_errormsg.ab3"
00028BB2 <internal_errormsg.ab3@25> XINCLUDE "internal_errormsg.ab3"
00028C30 <internal_errormsg.ab3@26> XINCLUDE "internal_errormsg.ab3"
00028C5A <internal_errormsg.ab3@27> XINCLUDE "internal_errormsg.ab3"
00028C80 <internal_errormsg.ab3@28> XINCLUDE "internal_errormsg.ab3"
00028CA0 <internal_errormsg.ab3@29> XINCLUDE "internal_errormsg.ab3"
00028CBE <internal_errormsg.ab3@30> XINCLUDE "internal_errormsg.ab3"
00028CDE <internal_errormsg.ab3@31> XINCLUDE "internal_errormsg.ab3"
00028D06 <internal_errormsg.ab3@32> XINCLUDE "internal_errormsg.ab3"
00028D30 <internal_errormsg.ab3@33> XINCLUDE "internal_errormsg.ab3"
00028D4C <internal_errormsg.ab3@34> XINCLUDE "internal_errormsg.ab3"
00028D72 <internal_errormsg.ab3@35> XINCLUDE "internal_errormsg.ab3"
00028D8A <internal_errormsg.ab3@36> XINCLUDE "internal_errormsg.ab3"
00028DE8 <internal_errormsg.ab3@37> XINCLUDE "internal_errormsg.ab3"
00028E0A <internal_errormsg.ab3@38> XINCLUDE "internal_errormsg.ab3"
00028E30 <internal_errormsg.ab3@39> XINCLUDE "internal_errormsg.ab3"
00028E58 <internal_errormsg.ab3@40> XINCLUDE "internal_errormsg.ab3"
00028E78 <internal_errormsg.ab3@41> XINCLUDE "internal_errormsg.ab3"
00028E9C <internal_errormsg.ab3@42> XINCLUDE "internal_errormsg.ab3"
00028EE2 <internal_errormsg.ab3@43> XINCLUDE "internal_errormsg.ab3"
00028F06 <internal_errormsg.ab3@44> XINCLUDE "internal_errormsg.ab3"
00028F2A <internal_errormsg.ab3@45> XINCLUDE "internal_errormsg.ab3"
00028F4A <internal_errormsg.ab3@46> XINCLUDE "internal_errormsg.ab3"
00028F6E <internal_errormsg.ab3@47> XINCLUDE "internal_errormsg.ab3"
00028F90 <internal_errormsg.ab3@48> XINCLUDE "internal_errormsg.ab3"
00028FBC <internal_errormsg.ab3@49> XINCLUDE "internal_errormsg.ab3"
00028FE2 <internal_errormsg.ab3@50> XINCLUDE "internal_errormsg.ab3"
00028FEC <internal_errormsg.ab3@53> XINCLUDE "internal_errormsg.ab3"
00029012 <internal_errormsg.ab3@54> XINCLUDE "internal_errormsg.ab3"
00029064 <internal_errormsg.ab3@56> XINCLUDE "internal_errormsg.ab3"
000290CE <internal_errormsg.ab3@57> XINCLUDE "internal_errormsg.ab3"
0002912C <internal_errormsg.ab3@58> XINCLUDE "internal_errormsg.ab3"
0002919A <internal_errormsg.ab3@59> XINCLUDE "internal_errormsg.ab3"
000291D6 <internal_errormsg.ab3@60> XINCLUDE "internal_errormsg.ab3"
000291F4 <internal_errormsg.ab3@61> XINCLUDE "internal_errormsg.ab3"
0002921A <internal_errormsg.ab3@62> XINCLUDE "internal_errormsg.ab3"
0002924A <internal_errormsg.ab3@63> XINCLUDE "internal_errormsg.ab3"
0002926E <internal_errormsg.ab3@64> XINCLUDE "internal_errormsg.ab3"
0002929C <internal_errormsg.ab3@65> XINCLUDE "internal_errormsg.ab3"
000292C0 <internal_errormsg.ab3@66> XINCLUDE "internal_errormsg.ab3"
000292D6 <internal_errormsg.ab3@67> XINCLUDE "internal_errormsg.ab3"
000292EC <internal_errormsg.ab3@68> XINCLUDE "internal_errormsg.ab3"
000292F2 <internal_errormsg.ab3@71> XINCLUDE "internal_errormsg.ab3"
000292FA <internal_errormsg.ab3@73> XINCLUDE "internal_errormsg.ab3"
000292FC <internal_errormsg.ab3@75> XINCLUDE "internal_errormsg.ab3"
00029300 <internal_errormsg.ab3@76> XINCLUDE "internal_errormsg.ab3"
00029308 <internal_errormsg.ab3@77> XINCLUDE "internal_errormsg.ab3"
0002930A <internal_errormsg.ab3@79> XINCLUDE "internal_errormsg.ab3"
00029344 <internal_errormsg.ab3@81> XINCLUDE "internal_errormsg.ab3"
00029370 <internal_errormsg.ab3@82> XINCLUDE "internal_errormsg.ab3"
000293A0 <internal_errormsg.ab3@83> XINCLUDE "internal_errormsg.ab3"
000293D8 <internal_errormsg.ab3@84> XINCLUDE "internal_errormsg.ab3"
00029432 <internal_errormsg.ab3@85> XINCLUDE "internal_errormsg.ab3"
00029434 <internal_errormsg.ab3@89> XINCLUDE "internal_errormsg.ab3"
00029438 <internal_errormsg.ab3@90> XINCLUDE "internal_errormsg.ab3"
0002943C <internal_errormsg.ab3@91> XINCLUDE "internal_errormsg.ab3"
00029440 <internal_errormsg.ab3@92> XINCLUDE "internal_errormsg.ab3"
00029444 <internal_errormsg.ab3@93> XINCLUDE "internal_errormsg.ab3"
00029448 <internal_errormsg.ab3@94> XINCLUDE "internal_errormsg.ab3"
0002944C <internal_errormsg.ab3@95> XINCLUDE "internal_errormsg.ab3"
00029450 <internal_errormsg.ab3@96> XINCLUDE "internal_errormsg.ab3"
00029454 <internal_errormsg.ab3@97> XINCLUDE "internal_errormsg.ab3"
00029458 <internal_errormsg.ab3@98> XINCLUDE "internal_errormsg.ab3"
0002945C <internal_errormsg.ab3@99> XINCLUDE "internal_errormsg.ab3"
0002949A <internal_errormsg.ab3@100> XINCLUDE "internal_errormsg.ab3"
000294CC <internal_errormsg.ab3@102> XINCLUDE "internal_errormsg.ab3"
000294EA <internal_errormsg.ab3@103> XINCLUDE "internal_errormsg.ab3"
00029514 <internal_errormsg.ab3@104> XINCLUDE "internal_errormsg.ab3"
00029530 <internal_errormsg.ab3@105> XINCLUDE "internal_errormsg.ab3"
0002954A <internal_errormsg.ab3@106> XINCLUDE "internal_errormsg.ab3"
00029568 <internal_errormsg.ab3@107> XINCLUDE "internal_errormsg.ab3"
0002958C <internal_errormsg.ab3@108> XINCLUDE "internal_errormsg.ab3"
0002958E <internal_errormsg.ab3@112> XINCLUDE "internal_errormsg.ab3"
000295E0 <internal_errormsg.ab3@114> XINCLUDE "internal_errormsg.ab3"
00029608 <internal_errormsg.ab3@116> XINCLUDE "internal_errormsg.ab3"
00029630 <internal_errormsg.ab3@117> XINCLUDE "internal_errormsg.ab3"
0002964C <internal_errormsg.ab3@121> XINCLUDE "internal_errormsg.ab3"
0002966C <internal_errormsg.ab3@122> XINCLUDE "internal_errormsg.ab3"
00029684 <internal_errormsg.ab3@123> XINCLUDE "internal_errormsg.ab3"
000296C8 <internal_errormsg.ab3@124> XINCLUDE "internal_errormsg.ab3"
00029710 <internal_errormsg.ab3@125> XINCLUDE "internal_errormsg.ab3"
0002973A <internal_errormsg.ab3@126> XINCLUDE "internal_errormsg.ab3"
00029764 <internal_errormsg.ab3@127> XINCLUDE "internal_errormsg.ab3"
0002977E <internal_errormsg.ab3@131> XINCLUDE "internal_errormsg.ab3"
000297A8 <internal_errormsg.ab3@132> XINCLUDE "internal_errormsg.ab3"
000297FC <internal_errormsg.ab3@133> XINCLUDE "internal_errormsg.ab3"
00029848 <internal_errormsg.ab3@134> XINCLUDE "internal_errormsg.ab3"
00029880 <internal_errormsg.ab3@135> XINCLUDE "internal_errormsg.ab3"
00029886 <internal_errormsg.ab3@138> XINCLUDE "internal_errormsg.ab3"
00029894 <internal_errormsg.ab3@142> XINCLUDE "internal_errormsg.ab3"
000298C4 <internal_errormsg.ab3@145> XINCLUDE "internal_errormsg.ab3"
000298F8 <internal_errormsg.ab3@146> XINCLUDE "internal_errormsg.ab3"
0002995E <internal_errormsg.ab3@147> XINCLUDE "internal_errormsg.ab3"
0002997C <internal_errormsg.ab3@148> XINCLUDE "internal_errormsg.ab3"
000299F6 <internal_errormsg.ab3@149> XINCLUDE "internal_errormsg.ab3"
00029A1E <internal_errormsg.ab3@150> XINCLUDE "internal_errormsg.ab3"
00029A34 <internal_errormsg.ab3@151> XINCLUDE "internal_errormsg.ab3"
00029A48 <internal_errormsg.ab3@152> XINCLUDE "internal_errormsg.ab3"
00029A68 <internal_errormsg.ab3@153> XINCLUDE "internal_errormsg.ab3"
00029A6E <internal_errormsg.ab3@156> XINCLUDE "internal_errormsg.ab3"
00029A80 <internal_errormsg.ab3@160> XINCLUDE "internal_errormsg.ab3"
00029AB4 <internal_errormsg.ab3@163> XINCLUDE "internal_errormsg.ab3"
00029ACC <internal_errormsg.ab3@164> XINCLUDE "internal_errormsg.ab3"
00029AE8 <internal_errormsg.ab3@165> XINCLUDE "internal_errormsg.ab3"
00029B00 <internal_errormsg.ab3@166> XINCLUDE "internal_errormsg.ab3"
00029B20 <internal_errormsg.ab3@167> XINCLUDE "internal_errormsg.ab3"
00029B40 <internal_errormsg.ab3@168> XINCLUDE "internal_errormsg.ab3"
00029B66 <internal_errormsg.ab3@169> XINCLUDE "internal_errormsg.ab3"
00029B7C <internal_errormsg.ab3@170> XINCLUDE "internal_errormsg.ab3"
00029B98 <internal_errormsg.ab3@171> XINCLUDE "internal_errormsg.ab3"
00029BC2 <internal_errormsg.ab3@172> XINCLUDE "internal_errormsg.ab3"
00029BDA <internal_errormsg.ab3@173> XINCLUDE "internal_errormsg.ab3"
00029BF6 <internal_errormsg.ab3@174> XINCLUDE "internal_errormsg.ab3"
00029C16 <internal_errormsg.ab3@175> XINCLUDE "internal_errormsg.ab3"
00029C2E <internal_errormsg.ab3@176> XINCLUDE "internal_errormsg.ab3"
00029C32 <internal_errormsg.ab3@179> XINCLUDE "internal_errormsg.ab3"
00029C38 <internal_errormsg.ab3@180> XINCLUDE "internal_errormsg.ab3"
00029C3E <internal_errormsg.ab3@181> XINCLUDE "internal_errormsg.ab3"
00029C53 <internal_errormsg.ab3@182> XINCLUDE "internal_errormsg.ab3"
00029C59 <internal_errormsg.ab3@184> XINCLUDE "internal_errormsg.ab3"
00029C5A <internal_errormsg.ab3@185> XINCLUDE "internal_errormsg.ab3"
00029C5E <internal_errormsg.ab3@188> XINCLUDE "internal_errormsg.ab3"
00029C64 <internal_errormsg.ab3@189> XINCLUDE "internal_errormsg.ab3"
00029C6A <internal_errormsg.ab3@190> XINCLUDE "internal_errormsg.ab3"
00029C7D <internal_errormsg.ab3@191> XINCLUDE "internal_errormsg.ab3"
00029C83 <internal_errormsg.ab3@193> XINCLUDE "internal_errormsg.ab3"
00029C84 <internal_errormsg.ab3@194> XINCLUDE "internal_errormsg.ab3"
00029CA2 <internal_errormsg.ab3@196> XINCLUDE "internal_errormsg.ab3"
00029CBA <internal_errormsg.ab3@197> XINCLUDE "internal_errormsg.ab3"
00029CD6 <internal_errormsg.ab3@198> XINCLUDE "internal_errormsg.ab3"
00029D00 <internal_errormsg.ab3@199> XINCLUDE "internal_errormsg.ab3"
00029D1A <internal_errormsg.ab3@200> XINCLUDE "internal_errormsg.ab3"
00029D3A <internal_errormsg.ab3@201> XINCLUDE "internal_errormsg.ab3"
00029D58 <internal_errormsg.ab3@202> XINCLUDE "internal_errormsg.ab3"
00029D86 <internal_errormsg.ab3@203> XINCLUDE "internal_errormsg.ab3"
00029D90 <internal_errormsg.ab3@206> XINCLUDE "internal_errormsg.ab3"
00029DC2 <internal_errormsg.ab3@207> XINCLUDE "internal_errormsg.ab3"
00029DE0 <internal_errormsg.ab3@209> XINCLUDE "internal_errormsg.ab3"
00029DFE <internal_errormsg.ab3@210> XINCLUDE "internal_errormsg.ab3"
00029E1E <internal_errormsg.ab3@211> XINCLUDE "internal_errormsg.ab3"
00029E44 <internal_errormsg.ab3@212> XINCLUDE "internal_errormsg.ab3"
00029E6A <internal_errormsg.ab3@213> XINCLUDE "internal_errormsg.ab3"
00029E92 <internal_errormsg.ab3@214> XINCLUDE "internal_errormsg.ab3"
00029EB0 <internal_errormsg.ab3@215> XINCLUDE "internal_errormsg.ab3"
00029ED0 <internal_errormsg.ab3@216> XINCLUDE "internal_errormsg.ab3"
00029EEA <internal_errormsg.ab3@217> XINCLUDE "internal_errormsg.ab3"
00029F0C <internal_errormsg.ab3@218> XINCLUDE "internal_errormsg.ab3"
00029F2A <internal_errormsg.ab3@219> XINCLUDE "internal_errormsg.ab3"
00029F4C <internal_errormsg.ab3@220> XINCLUDE "internal_errormsg.ab3"
00029F70 <internal_errormsg.ab3@221> XINCLUDE "internal_errormsg.ab3"
00029F76 <internal_errormsg.ab3@225> XINCLUDE "internal_errormsg.ab3"
00029F92 <internal_errormsg.ab3@227> XINCLUDE "internal_errormsg.ab3"
00029FAE <internal_errormsg.ab3@229> XINCLUDE "internal_errormsg.ab3"
00029FCC <internal_errormsg.ab3@230> XINCLUDE "internal_errormsg.ab3"
00029FEA <internal_errormsg.ab3@231> XINCLUDE "internal_errormsg.ab3"
0002A038 <internal_errormsg.ab3@232> XINCLUDE "internal_errormsg.ab3"
0002A056 <internal_errormsg.ab3@233> XINCLUDE "internal_errormsg.ab3"
0002A074 <internal_errormsg.ab3@234> XINCLUDE "internal_errormsg.ab3"
0002A08E <internal_errormsg.ab3@235> XINCLUDE "internal_errormsg.ab3"
0002A0DA <internal_errormsg.ab3@236> XINCLUDE "internal_errormsg.ab3"
0002A100 <internal_errormsg.ab3@237> XINCLUDE "internal_errormsg.ab3"
0002A120 <internal_errormsg.ab3@238> XINCLUDE "internal_errormsg.ab3"
0002A142 <internal_errormsg.ab3@239> XINCLUDE "internal_errormsg.ab3"
0002A15E <internal_errormsg.ab3@240> XINCLUDE "internal_errormsg.ab3"
0002A184 <internal_errormsg.ab3@241> XINCLUDE "internal_errormsg.ab3"
0002A1A0 <internal_errormsg.ab3@242> XINCLUDE "internal_errormsg.ab3"
0002A1BE <internal_errormsg.ab3@243> XINCLUDE "internal_errormsg.ab3"
0002A1E6 <internal_errormsg.ab3@244> XINCLUDE "internal_errormsg.ab3"
0002A202 <internal_errormsg.ab3@245> XINCLUDE "internal_errormsg.ab3"
0002A212 <internal_errormsg.ab3@246> XINCLUDE "internal_errormsg.ab3"
0002A234 <internal_errormsg.ab3@247> XINCLUDE "internal_errormsg.ab3"
0002A236 <internal_errormsg.ab3@251> XINCLUDE "internal_errormsg.ab3"
0002A250 <internal_errormsg.ab3@253> XINCLUDE "internal_errormsg.ab3"
0002A274 <internal_errormsg.ab3@255> XINCLUDE "internal_errormsg.ab3"
0002A294 <internal_errormsg.ab3@256> XINCLUDE "internal_errormsg.ab3"
0002A2C6 <internal_errormsg.ab3@257> XINCLUDE "internal_errormsg.ab3"
0002A324 <internal_errormsg.ab3@258> XINCLUDE "internal_errormsg.ab3"
0002A35C <internal_errormsg.ab3@259> XINCLUDE "internal_errormsg.ab3"
0002A39A <internal_errormsg.ab3@260> XINCLUDE "internal_errormsg.ab3"
0002A3D0 <internal_errormsg.ab3@261> XINCLUDE "internal_errormsg.ab3"
0002A402 <internal_errormsg.ab3@262> XINCLUDE "internal_errormsg.ab3"
0002A426 <internal_errormsg.ab3@263> XINCLUDE "internal_errormsg.ab3"
0002A44A <internal_errormsg.ab3@264> XINCLUDE "internal_errormsg.ab3"
0002A494 <internal_errormsg.ab3@265> XINCLUDE "internal_errormsg.ab3"
0002A4BC <internal_errormsg.ab3@266> XINCLUDE "internal_errormsg.ab3"
0002A506 <internal_errormsg.ab3@267> XINCLUDE "internal_errormsg.ab3"
0002A546 <internal_errormsg.ab3@268> XINCLUDE "internal_errormsg.ab3"
0002A546 <AmiBlitz3.ab3@12241> XINCLUDE "internal_errormsg.ab3"
0002A548 <AmiBlitz3.ab3@12245> ezerr:   Ds.w 1                                            ;for simple errors
0002A54E <AmiBlitz3.ab3@12252>    MOVE.l myline,d0
0002A552 <AmiBlitz3.ab3@12253>   BNE 'l2
0002A558 <AmiBlitz3.ab3@12256>     MOVE.l a5,lastsourcepos
0002A55A <AmiBlitz3.ab3@12259>     SUBA.l a5,a5
0002A560 <AmiBlitz3.ab3@12262>   TST.l usedfrom
0002A564 <AmiBlitz3.ab3@12263>   BEQ 'org
0002A56A <AmiBlitz3.ab3@12264>     MOVEA.l usedfrom,a5
0002A570 <AmiBlitz3.ab3@12268>   TST.w dirmode
0002A574 <AmiBlitz3.ab3@12269>   BNE.b 'quiet
0002A57A <AmiBlitz3.ab3@12271>     JSR call_setpointernormal
0002A57E <AmiBlitz3.ab3@12273>     MOVE.w ezerr(PC),D0
0002A582 <AmiBlitz3.ab3@12274>     BNE.w 'skip
0002A588 <AmiBlitz3.ab3@12275>       MOVE.w cfetchmode,D0
0002A58C <AmiBlitz3.ab3@12276>       BEQ.w 'skip2
0002A596 <AmiBlitz3.ab3@12277>         MOVE.l oldlibat,destbufferend                      ;fix up lib thing.
0002A59C <AmiBlitz3.ab3@12280>   MOVE.w constmode,D0
0002A5A0 <AmiBlitz3.ab3@12281>   BEQ.b 'skip3
0002A5A4 <AmiBlitz3.ab3@12282>     BSR.w asmerr2
0002A5AA <AmiBlitz3.ab3@12285>   MOVE.l firstlocal,D1
0002A5B0 <AmiBlitz3.ab3@12286>   OR.l firstglob,D1
0002A5B4 <AmiBlitz3.ab3@12287>   BEQ.b 'notproc                                           ;?!?!?!
0002A5BA <AmiBlitz3.ab3@12289> 
0002A5BE <AmiBlitz3.ab3@12290>     BNE 'notproc                                           ; yes skip
0002A5C4 <AmiBlitz3.ab3@12292>       JSR droplocals                                        ; no free some data ????
0002A5CC <AmiBlitz3.ab3@12295>   MOVE.w #$FFFF,anyerrs                                    ;#-1,anyerrs org source
0002A5D6 <AmiBlitz3.ab3@12297>   CMP.l #"NORE",reqmode                                    ;for used functions
0002A5DA <AmiBlitz3.ab3@12298>   BEQ 'notproc_l1
0002A5E4 <AmiBlitz3.ab3@12300>     MOVE.l linenumat,compilelinecounter
0002A5EA <AmiBlitz3.ab3@12303>   JSR close_compilewin
0002A5EC <AmiBlitz3.ab3@12306>   MOVEA.l (A7)+,A0
0002A5F2 <AmiBlitz3.ab3@12308>   MOVE.l errorcounter,d0                                   ; added to make maxerrorcount changable in CLIMode  tomsmart1
0002A5F8 <AmiBlitz3.ab3@12309>   CMP.l maxerrorcount,d0                                   ; changed to make maxerrorcount changable in CLIMode  tomsmart1
0002A5FC <AmiBlitz3.ab3@12310>   BLT 'lesserror
0002A602 <AmiBlitz3.ab3@12311>   LEA errorlimit_text,a0
0002A608 <AmiBlitz3.ab3@12314>   ADDQ.l #1,errorcounter
0002A60E <AmiBlitz3.ab3@12315>   JSR errorstringparse
0002A618 <AmiBlitz3.ab3@12316>   CMP.l #"NORE",reqmode                                    ;for used functions
0002A61C <AmiBlitz3.ab3@12317>   BEQ 'skip_Lxx2
0002A622 <AmiBlitz3.ab3@12318>   TST.l CLIMode
0002A626 <AmiBlitz3.ab3@12319>   BNE 'climode_output
0002A62C <AmiBlitz3.ab3@12322>     JSR save_errorfile
0002A630 <AmiBlitz3.ab3@12323>     BRA 'end_output
0002A636 <AmiBlitz3.ab3@12326>     JSR stdout_error
0002A63C <AmiBlitz3.ab3@12329>        MOVE.l errorcounter,d0                          ; added to make maxerrorcount changable in CLIMode  tomsmart1
0002A642 <AmiBlitz3.ab3@12330>        CMP.l maxerrorcount,d0                          ; changed to make maxerrorcount changable in CLIMode  tomsmart1
0002A646 <AmiBlitz3.ab3@12331>        BGT 'end_output
0002A64C <AmiBlitz3.ab3@12332>       MOVE.l lastsourcepos,a5
0002A64E <AmiBlitz3.ab3@12335>       TST.b (a5)
0002A652 <AmiBlitz3.ab3@12336>         BEQ 'ok2
0002A654 <AmiBlitz3.ab3@12337>       MOVE.b (a5)+,d0                                  ; position to usefull source position to avoid following errors
0002A658 <AmiBlitz3.ab3@12338>       BEQ 'ok
0002A65C <AmiBlitz3.ab3@12339>       CMP.b #":",d0
0002A660 <AmiBlitz3.ab3@12340>       BEQ 'ok
0002A664 <AmiBlitz3.ab3@12341>       BRA 'loop
0002A666 <AmiBlitz3.ab3@12344>     SUBQ.l #1,a5
0002A66E <AmiBlitz3.ab3@12347>       MOVE.w #0,lastchar
0002A676 <AmiBlitz3.ab3@12348>       MOVE.b #1,iserror
0002A67C <AmiBlitz3.ab3@12349>       MOVE.l stackaddr,a7
0002A67E <AmiBlitz3.ab3@12350>       RTS
0002A680 <AmiBlitz3.ab3@12358>   MOVE.l A0,-(a7)
0002A6BE <AmiBlitz3.ab3@12359>   !ComData_GetL{comFunc_ErrorRequest,A1}
0002A6C0 <AmiBlitz3.ab3@12360>   MOVE.l (a7)+,A0
0002A6C4 <AmiBlitz3.ab3@12362>   MOVEM.l d6/D7/A6,-(A7)
0002A6CA <AmiBlitz3.ab3@12364>   MOVE.l includeline,d7
0002A6D0 <AmiBlitz3.ab3@12365>   MOVE.l #"INLN",a6
0002A6DA <AmiBlitz3.ab3@12366>   MOVE.l errstack,tempa7
0002A6DC <AmiBlitz3.ab3@12368>   JSR (A1)                                                  ;open ped errorrequest
0002A6E0 <AmiBlitz3.ab3@12370>   MOVEM.l (A7)+,D7/d6/A6
0002A6E6 <AmiBlitz3.ab3@12374>   MOVE.l tempa7,a7
0002A6EC <AmiBlitz3.ab3@12376>   MOVEA.l errcont,A0
0002A6EE <AmiBlitz3.ab3@12379>  RTS
0002A6F4 <AmiBlitz3.ab3@12382>   MOVEA.l errstack,A7
0002A6FA <AmiBlitz3.ab3@12383>   MOVEA.l errcont,A0
0002A6FC <AmiBlitz3.ab3@12385>  RTS
0002A6FE <AmiBlitz3.ab3@12389>   MOVE.l (A7),D0
0002A704 <AmiBlitz3.ab3@12390>   MOVEA.l errstack,A7
0002A70A <AmiBlitz3.ab3@12391>   MOVEA.l errcont,A0
0002A70C <AmiBlitz3.ab3@12392> JMP (A0)
0002A710 <AmiBlitz3.ab3@12398>   CMP.w #$7A,D0                                            ;'z'
0002A714 <AmiBlitz3.ab3@12399>    BHI.w 'no
0002A718 <AmiBlitz3.ab3@12400>   CMP.w #$41,D0                                            ;'A'
0002A71C <AmiBlitz3.ab3@12401>    BCS.w 'no
0002A720 <AmiBlitz3.ab3@12402>   CMP.w #$61,D0                                            ;'a'
0002A724 <AmiBlitz3.ab3@12403>    BCC.w 'yes
0002A728 <AmiBlitz3.ab3@12404>   CMP.w #$5A,D0                                            ;'Z'
0002A72C <AmiBlitz3.ab3@12405>    BHI.w 'no
0002A72E <AmiBlitz3.ab3@12408>   CMP.w D0,D0
0002A730 <AmiBlitz3.ab3@12411> RTS
0002A734 <AmiBlitz3.ab3@12419>   CMP.w #$30,D0                                            ;'0'
0002A738 <AmiBlitz3.ab3@12420>    BCS.w 'skip
0002A73C <AmiBlitz3.ab3@12421>   CMP.w #$39,D0                                            ;'9'
0002A740 <AmiBlitz3.ab3@12422>    BHI.w 'skip
0002A742 <AmiBlitz3.ab3@12423>   CMP.w D0,D0
0002A744 <AmiBlitz3.ab3@12426> RTS
0002A766 <AmiBlitz3.ab3@12433>   !compare1                                                ;bsr.w tstalpha
0002A76A <AmiBlitz3.ab3@12435>    BEQ.w 'skip
0002A77C <AmiBlitz3.ab3@12437>   !compare2                                                ;bsr.w tstnum2
0002A780 <AmiBlitz3.ab3@12439>    BEQ.w 'skip
0002A784 <AmiBlitz3.ab3@12440>   CMP.w #$5F,D0                                            ;'_'
0002A788 <AmiBlitz3.ab3@12441>    BEQ.w 'skip
0002A78C <AmiBlitz3.ab3@12442>   CMP.w #$27,D0                                            ;''';#loclabch,d0 org source
0002A78E <AmiBlitz3.ab3@12445> RTS
0002A798 <AmiBlitz3.ab3@12451>   MOVE.w oldqflag,instringon
0002A79E <AmiBlitz3.ab3@12452>   MOVEA.l lastsourcepos,A5
0002A7A4 <AmiBlitz3.ab3@12461>   MOVE.l a5,beforeparameterfetch
0002A7AA <AmiBlitz3.ab3@12463>   LEA ptr_parameterstore,A1
0002A7AC <AmiBlitz3.ab3@12466>   MOVEQ.l #$00,D2
0002A7B2 <AmiBlitz3.ab3@12470>   LEA chartab,a0
0002A7B4 <AmiBlitz3.ab3@12471>   MOVEQ #0,d0
0002A7BA <AmiBlitz3.ab3@12472>   MOVE.l A5,lastsourcepos
0002A7C4 <AmiBlitz3.ab3@12473>   MOVE.w instringon,oldqflag
0002A7C6 <AmiBlitz3.ab3@12476>     MOVE.b (a5)+,d0
0002A7CA <AmiBlitz3.ab3@12477>   CMP.b #$20,d0                                            ;space deftype
0002A7CE <AmiBlitz3.ab3@12478>   BEQ 'retry
0002A7D4 <AmiBlitz3.ab3@12480>   MOVE.w d0,lastchar
0002A7D8 <AmiBlitz3.ab3@12481>   TST.b 0(a0,d0.w)
0002A7DC <AmiBlitz3.ab3@12482>   BNE 'done
0002A7DE <AmiBlitz3.ab3@12495>   MOVE.b D0,(A1)+
0002A7E0 <AmiBlitz3.ab3@12496>   ADDQ.l #1,D2
0002A7E6 <AmiBlitz3.ab3@12499>   MOVE.l A5,lastsourcepos
0002A7E8 <AmiBlitz3.ab3@12502>   MOVE.b (a5)+,d0
0002A7EE <AmiBlitz3.ab3@12503>   MOVE.b d0,lastchar+1
0002A7F2 <AmiBlitz3.ab3@12504>   CMP.b #$20,d0
0002A7F6 <AmiBlitz3.ab3@12505>   BEQ 'loop_l20
0002A7FA <AmiBlitz3.ab3@12507>   TST.b 0(a0,d0)
0002A7FE <AmiBlitz3.ab3@12508>   BEQ 'loop
0002A802 <AmiBlitz3.ab3@12509>   CMP.b #2,d0
0002A806 <AmiBlitz3.ab3@12510>   BNE 'loop_lf1
0002A80C <AmiBlitz3.ab3@12511>   MOVEA.l usedfrom,A5
0002A812 <AmiBlitz3.ab3@12512>   CLR.l usedfrom
0002A816 <AmiBlitz3.ab3@12513>  BRA 'loop_ln1
0002A81A <AmiBlitz3.ab3@12516>   CMP.b #1,d0
0002A81E <AmiBlitz3.ab3@12517>   BNE 'loop_l20
0002A822 <AmiBlitz3.ab3@12518>   MOVEA.l cmakea5(PC),A5
0002A826 <AmiBlitz3.ab3@12519>  BRA 'loop_ln1
0002A82A <AmiBlitz3.ab3@12522>   CMP.b #$7e,d0
0002A82E <AmiBlitz3.ab3@12523>             BNE 'loop_lt
0002A834 <AmiBlitz3.ab3@12524>             TST.w cmake
0002A838 <AmiBlitz3.ab3@12525>             BNE.w 'loop_a1
0002A83A <AmiBlitz3.ab3@12526>             SUBQ.l #1,a5
0002A83E <AmiBlitz3.ab3@12527>             BSR.w get1bytemain
0002A842 <AmiBlitz3.ab3@12528>  BRA 'loop
0002A846 <AmiBlitz3.ab3@12532>  BRA 'loop_gpex
0002A84A <AmiBlitz3.ab3@12536>   BSR.w getchar
0002A86C <AmiBlitz3.ab3@12538>    !compare1                                               ;bsr.w tstalpha
0002A870 <AmiBlitz3.ab3@12539>    BEQ.w 'loop_getp1
0002A882 <AmiBlitz3.ab3@12540>    !compare2                                               ;bsr.w tstnum
0002A886 <AmiBlitz3.ab3@12541>    BEQ.w 'loop_getp1
0002A88A <AmiBlitz3.ab3@12542>   CMP.w #$5F,D0                                            ;'_'
0002A88E <AmiBlitz3.ab3@12543>    BEQ.w 'loop_getp1
0002A892 <AmiBlitz3.ab3@12544>   CMP.w #$27,D0                                            ;''';#loclabch,d0 org source
0002A896 <AmiBlitz3.ab3@12548>       BNE 'loop_gpex
0002A89A <AmiBlitz3.ab3@12549>       CMP.b #$20,d0
0002A89E <AmiBlitz3.ab3@12551>       BNE.w 'loop
0002A8A0 <AmiBlitz3.ab3@12554>      TST.b d0
0002A8A4 <AmiBlitz3.ab3@12555>      BPL 'loop_l10
0002A8A6 <AmiBlitz3.ab3@12556>      SUBQ.l #1,a5
0002A8AA <AmiBlitz3.ab3@12557>      BSR get1byte_
0002A8AE <AmiBlitz3.ab3@12565>    CMP.w #$20,D0
0002A8B2 <AmiBlitz3.ab3@12566>    BNE.w 'done
0002A8B4 <AmiBlitz3.ab3@12568>    MOVEQ #0,d0
0002A8BA <AmiBlitz3.ab3@12569>   MOVE.l a5,lastsourcepos
0002A8BC <AmiBlitz3.ab3@12572>   MOVE.b (a5)+,d0                                          ;neuneu
0002A8C0 <AmiBlitz3.ab3@12573>   BPL 'loop_l101
0002A8C2 <AmiBlitz3.ab3@12574>   ASL.w #8,d0
0002A8C4 <AmiBlitz3.ab3@12575>   MOVE.b (a5)+,d0
0002A8CA <AmiBlitz3.ab3@12578>   TST.w instringon
0002A8CE <AmiBlitz3.ab3@12579>   BNE 'loop_l102
0002A8D2 <AmiBlitz3.ab3@12580>   CMP.b #$20,d0
0002A8D6 <AmiBlitz3.ab3@12581>   BEQ 'loop_l103
0002A8DA <AmiBlitz3.ab3@12582>   CMP.b #";",d0
0002A8DE <AmiBlitz3.ab3@12583>   BNE 'loop_l102
0002A8E0 <AmiBlitz3.ab3@12586>   MOVE.b (A5)+,D0
0002A8E4 <AmiBlitz3.ab3@12587>              BEQ 'loop_l1
0002A8E8 <AmiBlitz3.ab3@12588>              CMP.b #":",d0
0002A8EC <AmiBlitz3.ab3@12589>              BNE 'loop_lr                         ;:@
0002A8F0 <AmiBlitz3.ab3@12590>              CMP.b #"@",(a5)
0002A8F4 <AmiBlitz3.ab3@12591>              BNE 'loop_lr
0002A8F6 <AmiBlitz3.ab3@12592>              ADDQ #1,a5
0002A8FC <AmiBlitz3.ab3@12596>   MOVE.w d0,lastchar
0002A900 <AmiBlitz3.ab3@12602>   CMP.b #";",d0
0002A904 <AmiBlitz3.ab3@12603>   BEQ 'done_l11
0002A906 <AmiBlitz3.ab3@12605>   CLR.b (A1)
0002A908 <AmiBlitz3.ab3@12609>   TST.w D2
0002A90A <AmiBlitz3.ab3@12610>  RTS
0002A90C <AmiBlitz3.ab3@12614>   CLR.b (a1)
0002A90E <AmiBlitz3.ab3@12615>   MOVEQ #0,d0
0002A914 <AmiBlitz3.ab3@12616>   MOVE.w d0,lastchar
0002A916 <AmiBlitz3.ab3@12619>   TST.w D2
0002A918 <AmiBlitz3.ab3@12620> RTS
0002A91A <AmiBlitz3.ab3@12627>   MOVE.l (A2),D0
0002A91E <AmiBlitz3.ab3@12630>   BEQ.w 'here
0002A920 <AmiBlitz3.ab3@12631>   MOVEA.l D0,A2
0002A924 <AmiBlitz3.ab3@12632>  BRA.w 'loop
0002A928 <AmiBlitz3.ab3@12635> BRA.w reget
0002A92A <AmiBlitz3.ab3@12641>   MOVE.l (A2),-(A7)
0002A92E <AmiBlitz3.ab3@12642>   BSR.w addlabel
0002A930 <AmiBlitz3.ab3@12643>   MOVE.l (A7)+,(A2)
0002A932 <AmiBlitz3.ab3@12644> RTS
0002A938 <AmiBlitz3.ab3@12649>   CLR.l fp0addr
0002A93E <AmiBlitz3.ab3@12650>   TST.w dirmode
0002A942 <AmiBlitz3.ab3@12651>    BNE.w illdirerr
0002A944 <AmiBlitz3.ab3@12652>   MOVEQ.l #$00,D0
0002A946 <AmiBlitz3.ab3@12653>   MOVE.w D7,D0
0002A948 <AmiBlitz3.ab3@12654>   ADD.w D2,D0
0002A94A <AmiBlitz3.ab3@12655>   ADDQ.w #1,D0
0002A94C <AmiBlitz3.ab3@12656>   MOVE.w D0,D2
0002A94E <AmiBlitz3.ab3@12657>   ADDQ.l #2,d0
0002A950 <AmiBlitz3.ab3@12658>   MOVEQ.l #$01,D1
0002A956 <AmiBlitz3.ab3@12659>   MOVEA.l _execbase,A6
0002A95C <AmiBlitz3.ab3@12660>   MOVE.l mempool2,a0
0002A960 <AmiBlitz3.ab3@12661>   JSR _AllocPooled(a6)
0002A966 <AmiBlitz3.ab3@12663>   MOVE.l lastlabel,a2
0002A968 <AmiBlitz3.ab3@12664>   MOVE.l D0,(A2)
0002A96A <AmiBlitz3.ab3@12665>   MOVE.l d0,a0
0002A96C <AmiBlitz3.ab3@12666>   CLR.l (a0)
0002A972 <AmiBlitz3.ab3@12667>   MOVE.l a0,lastlabel
0002A974 <AmiBlitz3.ab3@12668>   MOVE.l d0,A2
0002A978 <AmiBlitz3.ab3@12669>   LEA -$1(A0,D7.W),A0
0002A97A <AmiBlitz3.ab3@12670>   MOVE.b D2,(A0)+
0002A980 <AmiBlitz3.ab3@12671>   LEA ptr_parameterstore,A1
0002A982 <AmiBlitz3.ab3@12672>   MOVEQ #0,d0
0002A984 <AmiBlitz3.ab3@12673>   MOVEQ #0,d1
0002A986 <AmiBlitz3.ab3@12676>   MOVE.b (A1)+,d1
0002A98A <AmiBlitz3.ab3@12677>    BEQ 'l1
0002A990 <AmiBlitz3.ab3@12678>    !hashalgo
0002A992 <AmiBlitz3.ab3@12679>    MOVE.b d1,(A0)+
0002A996 <AmiBlitz3.ab3@12680>  BRA 'loop2a
0002A998 <AmiBlitz3.ab3@12683>    CLR.b (a0)+
0002A99E <AmiBlitz3.ab3@12684>    LEA labelhash,a0
0002A9A4 <AmiBlitz3.ab3@12685>    AND.l #hashsize,d0
0002A9A6 <AmiBlitz3.ab3@12686>    ASL.l #2,d0
0002A9AA <AmiBlitz3.ab3@12687>    MOVE.l 0(a0,d0),d1
0002A9AE <AmiBlitz3.ab3@12688>    MOVE.l d1,$c(a2)
0002A9B2 <AmiBlitz3.ab3@12689>    MOVE.l a2,0(a0,d0)
0002A9B4 <AmiBlitz3.ab3@12690>    MOVEQ #0,d0
0002A9B8 <AmiBlitz3.ab3@12691> BRA.w reget
0002A9BE <AmiBlitz3.ab3@12695>    TST.b newvariable
0002A9C2 <AmiBlitz3.ab3@12696>    BNE addlabel
0002A9C8 <AmiBlitz3.ab3@12699>   TST.w dirmode
0002A9CC <AmiBlitz3.ab3@12700>    BNE.w illdirerr
0002A9CE <AmiBlitz3.ab3@12701>   MOVEQ.l #$00,D0
0002A9D0 <AmiBlitz3.ab3@12702>   MOVE.w D7,D0
0002A9D2 <AmiBlitz3.ab3@12703>   ADD.w D2,D0
0002A9D4 <AmiBlitz3.ab3@12704>   ADDQ.w #1,D0
0002A9D6 <AmiBlitz3.ab3@12705>   MOVE.w D0,D2
0002A9D8 <AmiBlitz3.ab3@12706>   MOVEQ.l #$01,D1
0002A9DE <AmiBlitz3.ab3@12707>   MOVEA.l _execbase,A6
0002A9E4 <AmiBlitz3.ab3@12708>   MOVE.l mempool2,a0
0002A9E8 <AmiBlitz3.ab3@12709>   JSR _AllocPooled(a6)
0002A9EA <AmiBlitz3.ab3@12710>   MOVEA.l D0,A0
0002A9F0 <AmiBlitz3.ab3@12712>   LEA varbase,a2
0002A9F2 <AmiBlitz3.ab3@12713>   MOVE.l (a2),(a0)
0002A9F4 <AmiBlitz3.ab3@12714>   MOVE.l A0,(A2)
0002A9F6 <AmiBlitz3.ab3@12715>   MOVEA.l A0,A2
0002A9FA <AmiBlitz3.ab3@12716>   LEA -$1(A0,D7.W),A0
0002A9FC <AmiBlitz3.ab3@12717>   MOVE.b D2,(A0)+
0002AA02 <AmiBlitz3.ab3@12718>   LEA ptr_parameterstore,A1
0002AA04 <AmiBlitz3.ab3@12719>   MOVEQ #0,d0
0002AA06 <AmiBlitz3.ab3@12720>   MOVEQ #0,d1
0002AA08 <AmiBlitz3.ab3@12723>   MOVE.b (A1)+,d1
0002AA0C <AmiBlitz3.ab3@12724>    BEQ 'l12
0002AA12 <AmiBlitz3.ab3@12725>    !hashalgo
0002AA14 <AmiBlitz3.ab3@12726>    MOVE.b d1,(A0)+
0002AA18 <AmiBlitz3.ab3@12727>  BRA 'l11
0002AA1A <AmiBlitz3.ab3@12730>   CLR.b (a0)+
0002AA20 <AmiBlitz3.ab3@12731>   LEA variablehash,a0
0002AA26 <AmiBlitz3.ab3@12732>    AND.l #hashsize,d0
0002AA28 <AmiBlitz3.ab3@12733>    ASL.l #2,d0
0002AA2C <AmiBlitz3.ab3@12734>    MOVE.l 0(a0,d0),d1
0002AA30 <AmiBlitz3.ab3@12735>    MOVE.l d1,$e(a2)
0002AA34 <AmiBlitz3.ab3@12736>    MOVE.l a2,0(a0,d0)
0002AA36 <AmiBlitz3.ab3@12737>    MOVEQ #0,d0
0002AA3A <AmiBlitz3.ab3@12738> BRA.w reget
0002AA40 <AmiBlitz3.ab3@12742>   TST.w dirmode
0002AA44 <AmiBlitz3.ab3@12743>    BNE.w illdirerr
0002AA46 <AmiBlitz3.ab3@12750>   MOVEQ.l #$00,D0
0002AA48 <AmiBlitz3.ab3@12751>   MOVE.w D7,D0
0002AA4A <AmiBlitz3.ab3@12752>   ADD.w D2,D0
0002AA4C <AmiBlitz3.ab3@12753>   ADDQ.w #1,D0
0002AA4E <AmiBlitz3.ab3@12754>   MOVE.w D0,D2
0002AA50 <AmiBlitz3.ab3@12755>   MOVEQ.l #$01,D1
0002AA56 <AmiBlitz3.ab3@12756>   MOVEA.l _execbase,A6
0002AA5C <AmiBlitz3.ab3@12758>   MOVE.l mempool2,a0
0002AA60 <AmiBlitz3.ab3@12759>   JSR _AllocPooled(a6)
0002AA62 <AmiBlitz3.ab3@12763>   MOVEA.l D0,A0
0002AA64 <AmiBlitz3.ab3@12764>   MOVE.l A0,(A2)
0002AA66 <AmiBlitz3.ab3@12765>   CLR.l (a0)              ;clear next
0002AA6A <AmiBlitz3.ab3@12767>   CLR.l 8(a0)
0002AA6C <AmiBlitz3.ab3@12768>   MOVEA.l A0,A2
0002AA70 <AmiBlitz3.ab3@12770>   LEA -$1(A0,D7.W),A0
0002AA72 <AmiBlitz3.ab3@12771>   MOVE.b D2,(A0)+          ;put in struct length
0002AA78 <AmiBlitz3.ab3@12772>   LEA ptr_parameterstore,A1
0002AA7A <AmiBlitz3.ab3@12774>   MOVEQ #0,d0
0002AA7C <AmiBlitz3.ab3@12775>   MOVEQ #0,d1
0002AA7E <AmiBlitz3.ab3@12779> 
0002AA80 <AmiBlitz3.ab3@12780>   MOVE.b d1,(A0)+       ; "
0002AA84 <AmiBlitz3.ab3@12781>   BNE.w 'loop2
0002AA88 <AmiBlitz3.ab3@12782> BRA.w reget
0002AA8A <AmiBlitz3.ab3@12786>   MOVEQ.l #$13,D7
0002AA90 <AmiBlitz3.ab3@12787>   LEA constantbase,A2
0002AA94 <AmiBlitz3.ab3@12788> BRA.w findlab
0002AA96 <AmiBlitz3.ab3@12792>   MOVEQ.l #$05+8,D7        ; was #5                                ;#5,d7 org source
0002AA9C <AmiBlitz3.ab3@12793>   LEA xinclude_base,A2
0002AAA0 <AmiBlitz3.ab3@12794> BRA.w findlab
0002AAA2 <AmiBlitz3.ab3@12798>   MOVEQ.l #$09,D7
0002AAA8 <AmiBlitz3.ab3@12799>   LEA firstconst,A2
0002AAAC <AmiBlitz3.ab3@12800> BRA.w findlab
0002AAAE <AmiBlitz3.ab3@12804>   MOVEQ.l #$0d,D7                                          ;find macro
0002AAB4 <AmiBlitz3.ab3@12805>   LEA macrobase,A2
0002AAB8 <AmiBlitz3.ab3@12806> BRA.w findlab
0002AABE <AmiBlitz3.ab3@12810>   LEA labelhash,A2
0002AAC0 <AmiBlitz3.ab3@12811>   MOVEQ.l #$13,D7
0002AAC2 <AmiBlitz3.ab3@12813>   EXT.l d2
0002AAC8 <AmiBlitz3.ab3@12814>   LEA ptr_parameterstore,A0
0002AACA <AmiBlitz3.ab3@12815>   MOVEQ #0,d0
0002AACC <AmiBlitz3.ab3@12816>   MOVEQ #0,d1
0002AACE <AmiBlitz3.ab3@12819>     MOVE.b (a0)+,d1
0002AAD2 <AmiBlitz3.ab3@12820>     BEQ 'l15
0002AAD8 <AmiBlitz3.ab3@12821>     !hashalgo
0002AADC <AmiBlitz3.ab3@12822>  BRA 'l20
0002AAE2 <AmiBlitz3.ab3@12825>   AND.l #hashsize,d0
0002AAE4 <AmiBlitz3.ab3@12826>   ASL.l #2,d0
0002AAE8 <AmiBlitz3.ab3@12827>   MOVE.l 0(a2,d0),d0
0002AAEC <AmiBlitz3.ab3@12828>  BRA 'l11
0002AAF0 <AmiBlitz3.ab3@12831>   MOVE.l $c(A2),D0          ;  begin copy of findlabel
0002AAF4 <AmiBlitz3.ab3@12834>   BEQ findlab_no
0002AAF6 <AmiBlitz3.ab3@12835>   MOVEA.l D0,A2
0002AAF8 <AmiBlitz3.ab3@12836>   MOVEQ.l #$00,D0
0002AAFC <AmiBlitz3.ab3@12837>   MOVE.b -$1(A2,D7.l),D0
0002AB02 <AmiBlitz3.ab3@12838>   LEA ptr_parameterstore,A0
0002AB04 <AmiBlitz3.ab3@12839>   SUB.l D7,D0
0002AB06 <AmiBlitz3.ab3@12840>   SUBQ.l #1,D0
0002AB08 <AmiBlitz3.ab3@12841>   CMP.l D0,D2
0002AB0C <AmiBlitz3.ab3@12842>    BNE.b 'loop
0002AB10 <AmiBlitz3.ab3@12843>   LEA $0(A2,D7.W),A1
0002AB12 <AmiBlitz3.ab3@12844>   SUBQ.l #1,D0
0002AB14 <AmiBlitz3.ab3@12847>     MOVE.b (a1)+,d1
0002AB16 <AmiBlitz3.ab3@12848>     CMP.b (a0)+,d1
0002AB1A <AmiBlitz3.ab3@12850>     BNE.b 'loop
0002AB1E <AmiBlitz3.ab3@12851>   DBF D0,'loop2
0002AB22 <AmiBlitz3.ab3@12853>   BSR.w reget
0002AB24 <AmiBlitz3.ab3@12854>   CMP.w D0,D0
0002AB26 <AmiBlitz3.ab3@12855> RTS                     ; end copy of findlab
0002AB28 <AmiBlitz3.ab3@12859>   MOVEQ.l #$0B,D7
0002AB2C <AmiBlitz3.ab3@12860> BRA.w findlab
0002AB32 <AmiBlitz3.ab3@12864>   LEA firstproc,A2
0002AB38 <AmiBlitz3.ab3@12865>   MOVE.l #$21+#funcentry_extend,D7    ; was #33,
0002AB3C <AmiBlitz3.ab3@12866> BRA findlab
0002AB42 <AmiBlitz3.ab3@12870>   LEA firstfor,A2
0002AB44 <AmiBlitz3.ab3@12871>   MOVEQ.l #$11,D7
0002AB48 <AmiBlitz3.ab3@12872> BRA.w findlab
0002AB4A <AmiBlitz3.ab3@12876>   MOVEQ.l #$0F,D7
0002AB4E <AmiBlitz3.ab3@12878> BRA.w findlab
0002AB50 <AmiBlitz3.ab3@12882>   MOVEQ.l #$0F+4,D7
0002AB56 <AmiBlitz3.ab3@12883>   TST.b newvariable
0002AB5A <AmiBlitz3.ab3@12884>    BNE.w findlab
0002AB60 <AmiBlitz3.ab3@12885>   LEA variablehash,A2
0002AB66 <AmiBlitz3.ab3@12886>   LEA ptr_parameterstore,A0
0002AB68 <AmiBlitz3.ab3@12887>   MOVEQ #0,d0
0002AB6A <AmiBlitz3.ab3@12888>   MOVEQ #0,d1
0002AB6C <AmiBlitz3.ab3@12891>     MOVE.b (a0)+,d1
0002AB70 <AmiBlitz3.ab3@12892>     BEQ 'l15
0002AB76 <AmiBlitz3.ab3@12893>     !hashalgo
0002AB7A <AmiBlitz3.ab3@12894>  BRA 'l20
0002AB80 <AmiBlitz3.ab3@12897>   AND.l #hashsize,d0
0002AB82 <AmiBlitz3.ab3@12898>   ASL.l #2,d0
0002AB86 <AmiBlitz3.ab3@12899>   MOVE.l 0(a2,d0),d0
0002AB8A <AmiBlitz3.ab3@12900>  BRA 'l11
0002AB8E <AmiBlitz3.ab3@12903>   MOVE.l $e(A2),D0                                         ;find label
0002AB92 <AmiBlitz3.ab3@12906>   BEQ findlab_no
0002AB94 <AmiBlitz3.ab3@12907>   MOVEA.l D0,A2
0002AB96 <AmiBlitz3.ab3@12908>   MOVEQ.l #$00,D0
0002AB9A <AmiBlitz3.ab3@12909>   MOVE.b -$1(A2,D7.W),D0
0002ABA0 <AmiBlitz3.ab3@12910>   LEA ptr_parameterstore,A0
0002ABA2 <AmiBlitz3.ab3@12911>   SUB.w D7,D0
0002ABA4 <AmiBlitz3.ab3@12912>   SUBQ.l #1,D0
0002ABA6 <AmiBlitz3.ab3@12913>   CMP.w D0,D2
0002ABAA <AmiBlitz3.ab3@12914>    BNE.b 'l10
0002ABAE <AmiBlitz3.ab3@12915>   LEA $0(A2,D7.W),A1
0002ABB0 <AmiBlitz3.ab3@12916>   SUBQ.l #1,D0
0002ABB2 <AmiBlitz3.ab3@12919>     MOVE.b (a1)+,d1
0002ABB4 <AmiBlitz3.ab3@12920>     CMP.b (a0)+,d1
0002ABB8 <AmiBlitz3.ab3@12922>     BNE.b 'l10
0002ABBC <AmiBlitz3.ab3@12923>   DBF D0,'l201
0002ABC0 <AmiBlitz3.ab3@12925>   BSR.w reget
0002ABC2 <AmiBlitz3.ab3@12926>   CMP.w D0,D0
0002ABC4 <AmiBlitz3.ab3@12927> RTS
0002ABC6 <AmiBlitz3.ab3@12940>     MOVE.l (A2),D0                                         ;find label
0002ABCA <AmiBlitz3.ab3@12941>      BEQ.b findlab_no
0002ABCC <AmiBlitz3.ab3@12942>     MOVEA.l D0,A2
0002ABCE <AmiBlitz3.ab3@12943>     MOVEQ.l #$00,D0
0002ABD2 <AmiBlitz3.ab3@12944>     MOVE.b -$1(A2,D7.W),D0
0002ABD4 <AmiBlitz3.ab3@12945>     SUB.l D7,D0
0002ABD6 <AmiBlitz3.ab3@12946>     SUBQ.l #1,D0
0002ABD8 <AmiBlitz3.ab3@12947>   CMP.w D0,D2
0002ABDC <AmiBlitz3.ab3@12948>   BNE.b 'loop
0002ABE0 <AmiBlitz3.ab3@12950>   LEA $0(A2,D7.W),A1
0002ABE6 <AmiBlitz3.ab3@12951>   LEA ptr_parameterstore,A0
0002ABE8 <AmiBlitz3.ab3@12952>   SUBQ.l #1,D0
0002ABEA <AmiBlitz3.ab3@12956>     MOVE.b (a1)+,d1
0002ABEC <AmiBlitz3.ab3@12957>     CMP.b (a0)+,d1
0002ABF0 <AmiBlitz3.ab3@12960>     BNE.b 'loop
0002ABF4 <AmiBlitz3.ab3@12961>   DBF D0,'loop2
0002ABF8 <AmiBlitz3.ab3@12963>   BSR.w reget
0002ABFA <AmiBlitz3.ab3@12964>   CMP.w D0,D0
0002ABFC <AmiBlitz3.ab3@12965>  RTS
0002AC00 <AmiBlitz3.ab3@12968>   BSR.w reget
0002AC02 <AmiBlitz3.ab3@12969>   MOVEQ.l #-$01,D1
0002AC04 <AmiBlitz3.ab3@12970> RTS
0002AC0A <AmiBlitz3.ab3@12974>   MOVEA.l alllocals,A4
0002AC10 <AmiBlitz3.ab3@12975>   CLR.l alllocals
0002AC14 <AmiBlitz3.ab3@12981>     CMPA.w #$0,A4
0002AC18 <AmiBlitz3.ab3@12982>      BEQ.b 'done
0002AC1C <AmiBlitz3.ab3@12983>     MOVEA.l $4(A4),A3
0002AC20 <AmiBlitz3.ab3@12985>     MOVEA.l $8(A4),A3
0002AC22 <AmiBlitz3.ab3@12987>     MOVEA.l A4,A1
0002AC24 <AmiBlitz3.ab3@12988>     MOVEA.l (A4),A4
0002AC26 <AmiBlitz3.ab3@12989>     MOVEQ.l #$0C,D0
0002AC2C <AmiBlitz3.ab3@12990>     MOVEA.l _execbase,A6
0002AC32 <AmiBlitz3.ab3@12992>     MOVE.l mempool,a0
0002AC36 <AmiBlitz3.ab3@12993>     JSR _FreePooled(A6)
0002AC3A <AmiBlitz3.ab3@12996>  BRA.b 'loop
0002AC40 <AmiBlitz3.ab3@13000>   CLR.l firstglob                                          ;fix 2*aclearallvar called
0002AC46 <AmiBlitz3.ab3@13001>   CLR.l firstlocal
0002AC4C <AmiBlitz3.ab3@13002>   CLR.l sharebase
0002AC52 <AmiBlitz3.ab3@13003>   TST.l mempool2
0002AC56 <AmiBlitz3.ab3@13004>   BEQ 'done_l10
0002AC5C <AmiBlitz3.ab3@13006>   MOVEA.l _execbase,A6
0002AC62 <AmiBlitz3.ab3@13007>   MOVE.l mempool2,a0
0002AC68 <AmiBlitz3.ab3@13008>   CLR.l mempool2
0002AC6C <AmiBlitz3.ab3@13009>   JSR _DeletePool(a6)
0002AC72 <AmiBlitz3.ab3@13012>   MOVE.l _execbase,a6
0002AC78 <AmiBlitz3.ab3@13013>   MOVE.l #$10000,d0
0002AC7E <AmiBlitz3.ab3@13014>   MOVE.l #80000,d1
0002AC80 <AmiBlitz3.ab3@13015>   MOVE.l d1,d2
0002AC84 <AmiBlitz3.ab3@13016>   JSR _CreatePool(a6)
0002AC8A <AmiBlitz3.ab3@13017>   MOVE.l d0,mempool2
0002AC8C <AmiBlitz3.ab3@13019> RTS
0002AC90 <AmiBlitz3.ab3@13024>   CMPA.w #$0,A3
0002AC94 <AmiBlitz3.ab3@13025>    BEQ.w 'done
0002AC96 <AmiBlitz3.ab3@13026>   MOVEA.l A3,A1
0002AC98 <AmiBlitz3.ab3@13027>   MOVEA.l (A3),A3
0002AC9A <AmiBlitz3.ab3@13028>   MOVEQ.l #$00,D0
0002AC9E <AmiBlitz3.ab3@13029>   MOVE.b $E(A1),D0
0002ACA4 <AmiBlitz3.ab3@13030>   MOVEA.l _execbase,A6
0002ACAA <AmiBlitz3.ab3@13032>   MOVE.l mempool2,a0
0002ACAE <AmiBlitz3.ab3@13033>   JSR _FreePooled(A6)
0002ACB2 <AmiBlitz3.ab3@13036>  BRA.w freevars
0002ACB6 <AmiBlitz3.ab3@13040>     CMPA.w #$0,A3
0002ACBA <AmiBlitz3.ab3@13041>      BEQ.w 'done
0002ACBC <AmiBlitz3.ab3@13042>     MOVEA.l A3,A1
0002ACBE <AmiBlitz3.ab3@13043>     MOVEA.l (A3),A3
0002ACC0 <AmiBlitz3.ab3@13044>     MOVEQ.l #$00,D0
0002ACC4 <AmiBlitz3.ab3@13045>     MOVE.b $E+4(A1),D0
0002ACCA <AmiBlitz3.ab3@13046>     MOVEA.l _execbase,A6
0002ACD0 <AmiBlitz3.ab3@13047>     MOVE.l mempool2,a0
0002ACD4 <AmiBlitz3.ab3@13048>     JSR _FreePooled(A6)
0002ACD8 <AmiBlitz3.ab3@13049>  BRA.w 'freevarsb
0002ACDA <AmiBlitz3.ab3@13053> RTS
0002ACE0 <AmiBlitz3.ab3@13059>   MOVEA.l currentlabeladdr,A0
0002ACE6 <AmiBlitz3.ab3@13060>   MOVE.l a0,lastlabel
0002ACE8 <AmiBlitz3.ab3@13061>   MOVEA.l (A0),A2
0002ACEA <AmiBlitz3.ab3@13062>   CLR.l (A0)
0002ACF0 <AmiBlitz3.ab3@13063>   MOVEA.l _execbase,A6
0002ACF4 <AmiBlitz3.ab3@13066>   CMPA.w #$0,A2
0002ACF8 <AmiBlitz3.ab3@13067>    BEQ.w 'done
0002ACFC <AmiBlitz3.ab3@13068>   MOVE.l $4(A2),D0
0002AD00 <AmiBlitz3.ab3@13069>   BTST #$0,D0
0002AD04 <AmiBlitz3.ab3@13070>    BNE.w 'skip
0002AD06 <AmiBlitz3.ab3@13071>   MOVEA.l D0,A3
0002AD0A <AmiBlitz3.ab3@13074>     CMPA.w #$0,A3
0002AD0E <AmiBlitz3.ab3@13075>      BEQ.w 'skip
0002AD10 <AmiBlitz3.ab3@13076>     MOVEA.l A3,A1
0002AD12 <AmiBlitz3.ab3@13077>     MOVEA.l (A3),A3
0002AD14 <AmiBlitz3.ab3@13078>     MOVEQ.l #$0C+2,D0     ; was #12                                 ;cancel fix
0002AD1A <AmiBlitz3.ab3@13080>     MOVE.l mempool,a0
0002AD1E <AmiBlitz3.ab3@13081>     JSR _FreePooled(A6)
0002AD22 <AmiBlitz3.ab3@13084>  BRA.w 'loop2
0002AD24 <AmiBlitz3.ab3@13087>   MOVEQ.l #$00,D0
0002AD28 <AmiBlitz3.ab3@13088>   MOVE.b $12(A2),D0
0002AD2A <AmiBlitz3.ab3@13089>   MOVEA.l A2,A1
0002AD2C <AmiBlitz3.ab3@13090>   MOVEA.l (A2),A2
0002AD32 <AmiBlitz3.ab3@13092>   MOVE.l mempool2,a0
0002AD36 <AmiBlitz3.ab3@13096>  BRA.w 'loop
0002AD38 <AmiBlitz3.ab3@13099> RTS
0002AD3E <AmiBlitz3.ab3@13103>   MOVEA.l firstpend,A3
0002AD44 <AmiBlitz3.ab3@13104>   CLR.l firstpend
0002AD4A <AmiBlitz3.ab3@13105>   MOVEA.l _execbase,A6
0002AD4E <AmiBlitz3.ab3@13108>     CMPA.w #$0,A3
0002AD52 <AmiBlitz3.ab3@13109>      BEQ.w 'done
0002AD54 <AmiBlitz3.ab3@13110>     MOVEA.l A3,A1
0002AD56 <AmiBlitz3.ab3@13111>     MOVEQ.l #$08,D0
0002AD58 <AmiBlitz3.ab3@13112>     MOVEA.l (A3),A3
0002AD5E <AmiBlitz3.ab3@13114>     MOVE.l mempool,a0
0002AD62 <AmiBlitz3.ab3@13115>     JSR _FreePooled(A6)
0002AD66 <AmiBlitz3.ab3@13118>  BRA.w 'fpnd2
0002AD68 <AmiBlitz3.ab3@13121> RTS
0002AD6E <AmiBlitz3.ab3@13127>   MOVEA.l firstproc,A2
0002AD74 <AmiBlitz3.ab3@13128>   CLR.l firstproc
0002AD7A <AmiBlitz3.ab3@13129>   MOVEA.l _execbase,A6
0002AD7E <AmiBlitz3.ab3@13132>     CMPA.w #$0,A2
0002AD82 <AmiBlitz3.ab3@13133>      BEQ.w 'done
0002AD84 <AmiBlitz3.ab3@13134>     MOVEA.l A2,A1
0002AD86 <AmiBlitz3.ab3@13135>     MOVEA.l (A2),A2
0002AD88 <AmiBlitz3.ab3@13136>     MOVEQ.l #$00,D0
0002AD8C <AmiBlitz3.ab3@13137>     MOVE.b $20+#funcentry_extend(A1),D0    ; was 32(a1),
0002AD92 <AmiBlitz3.ab3@13139>     MOVE.l mempool2,a0
0002AD96 <AmiBlitz3.ab3@13140>     JSR _FreePooled(A6)
0002AD9A <AmiBlitz3.ab3@13143>  BRA.w 'loop
0002AD9C <AmiBlitz3.ab3@13146> RTS
0002ADA0 <AmiBlitz3.ab3@13151>   CMPA.w #$0,A2
0002ADA4 <AmiBlitz3.ab3@13152>    BEQ.w 'done
0002ADA8 <AmiBlitz3.ab3@13153>   MOVEA.l $4(A2),A3
0002ADAC <AmiBlitz3.ab3@13154>   CMPA.w #$FF,A3
0002ADB0 <AmiBlitz3.ab3@13155>    BEQ.w 'noway
0002ADB4 <AmiBlitz3.ab3@13159>    BSR.w freevars
0002ADB6 <AmiBlitz3.ab3@13162>     MOVEA.l A2,A1
0002ADB8 <AmiBlitz3.ab3@13163>     MOVEA.l (A2),A2
0002ADBA <AmiBlitz3.ab3@13164>     MOVEQ.l #$00,D0
0002ADBE <AmiBlitz3.ab3@13165>     MOVE.b $A(A1),D0
0002ADC4 <AmiBlitz3.ab3@13166>     MOVEA.l _execbase,A6
0002ADCA <AmiBlitz3.ab3@13168>     MOVE.l mempool2,a0
0002ADCE <AmiBlitz3.ab3@13169>     JSR _FreePooled(A6)
0002ADD2 <AmiBlitz3.ab3@13172>  BRA.w freetypes
0002ADD4 <AmiBlitz3.ab3@13175> RTS
0002ADDA <AmiBlitz3.ab3@13184>   JSR usevars
0002ADE0 <AmiBlitz3.ab3@13186>   CLR.w notshared
0002ADE6 <AmiBlitz3.ab3@13187>   CLR.w varmode           ;local mode
0002ADEC <AmiBlitz3.ab3@13188>   MOVE.w proceduremode,D1
0002ADF0 <AmiBlitz3.ab3@13189>    BNE.w fvarlocal
0002ADF6 <AmiBlitz3.ab3@13191>   LEA varbase,A2
0002ADFC <AmiBlitz3.ab3@13193>   LEA ptr_parameterstore,a0
0002AE00 <AmiBlitz3.ab3@13194>   CMP.b #$22,(a0)
0002AE04 <AmiBlitz3.ab3@13195>   BNE fvarback
0002AE06 <AmiBlitz3.ab3@13196>   MOVEQ #0,d0
0002AE0C <AmiBlitz3.ab3@13197>  JMP error
0002AE10 <AmiBlitz3.ab3@13202>   BSR.w findvariable
0002AE14 <AmiBlitz3.ab3@13205>   BNE.w fvaradd
0002AE1A <AmiBlitz3.ab3@13210>   MOVE.b flagmask+1,D1
0002AE1E <AmiBlitz3.ab3@13211>   MOVE.b $7(A2),D3
0002AE20 <AmiBlitz3.ab3@13212>   EOR.b D3,D1
0002AE24 <AmiBlitz3.ab3@13214>   BNE 'l2
0002AE2C <AmiBlitz3.ab3@13215>   CMP.b #2,nowdeclare
0002AE30 <AmiBlitz3.ab3@13216>   BEQ errormsg_declaredtwice
0002AE34 <AmiBlitz3.ab3@13217>  BRA.w fvarfound
0002AE38 <AmiBlitz3.ab3@13221>   BSR.w findlab
0002AE3C <AmiBlitz3.ab3@13223>   BNE 'l1
0002AE44 <AmiBlitz3.ab3@13224>   CMP.b #2,nowdeclare
0002AE48 <AmiBlitz3.ab3@13225>   BEQ errormsg_declaredtwice
0002AE4A <AmiBlitz3.ab3@13226>   CMP.w d0,d0
0002AE4E <AmiBlitz3.ab3@13230>  BRA.w 'more
0002AE50 <AmiBlitz3.ab3@13234>    MOVE.l a2,-(a7)
0002AE56 <AmiBlitz3.ab3@13235>    LEA sharebase,a2
0002AE58 <AmiBlitz3.ab3@13236>    MOVEQ #$f+4,d7
0002AE5C <AmiBlitz3.ab3@13237>    BSR.w findlab
0002AE60 <AmiBlitz3.ab3@13238>    BEQ 'l2x
0002AE62 <AmiBlitz3.ab3@13239>    MOVE.l (a7)+,a2
0002AE66 <AmiBlitz3.ab3@13240>  BRA 'cont
0002AE68 <AmiBlitz3.ab3@13243>   ADDQ.l #4,a7
0002AE6E <AmiBlitz3.ab3@13244>   CLR.w varmode
0002AE74 <AmiBlitz3.ab3@13245>   MOVE.b flagmask+1,D1
0002AE78 <AmiBlitz3.ab3@13246>   MOVE.b $7(A2),D3
0002AE7A <AmiBlitz3.ab3@13247>   EOR.b D3,D1
0002AE7E <AmiBlitz3.ab3@13248>   BNE vardeclareerr
0002AE82 <AmiBlitz3.ab3@13249>  BRA fvarfound
0002AE88 <AmiBlitz3.ab3@13253>    MOVE.w nonew,D1
0002AE8C <AmiBlitz3.ab3@13254>    BNE.w nonewerr
0002AE92 <AmiBlitz3.ab3@13256>    TST.b nowdeclare
0002AE96 <AmiBlitz3.ab3@13257>    BNE 'l2b
0002AE9C <AmiBlitz3.ab3@13258>    TST.b declare2
0002AEA0 <AmiBlitz3.ab3@13259>    BEQ 'l1b
0002AEA4 <AmiBlitz3.ab3@13260>    CMP.b #$2e,d0
0002AEA8 <AmiBlitz3.ab3@13261>    BEQ 'l2b
0002AEAC <AmiBlitz3.ab3@13262>    CMP.b #"$",d0
0002AEB0 <AmiBlitz3.ab3@13263>    BEQ 'l2b
0002AEB4 <AmiBlitz3.ab3@13264>  BRA vardeclareerr
0002AEBA <AmiBlitz3.ab3@13267>   TST.b declare
0002AEBE <AmiBlitz3.ab3@13268>    BNE vardeclareerr
0002AEC2 <AmiBlitz3.ab3@13272>   BSR.w addvariable      ;create var
0002AEC8 <AmiBlitz3.ab3@13273>   NOT.w notshared        ;set added flag
0002AECA <AmiBlitz3.ab3@13274>   MOVEA.l A2,A3
0002AED0 <AmiBlitz3.ab3@13275>   MOVEA.l defaulttype,A2
0002AED4 <AmiBlitz3.ab3@13276>   CMP.w #$2E,D0         ;'.'
0002AED8 <AmiBlitz3.ab3@13277>    BEQ.w 'clapton
0002AEDC <AmiBlitz3.ab3@13278>   CMP.w #$24,D0         ;'$'
0002AEE0 <AmiBlitz3.ab3@13279>    BNE.w 'usedef
0002AEE6 <AmiBlitz3.ab3@13280>   LEA newtype_string,A2
0002AEEA <AmiBlitz3.ab3@13281>    BSR.w get1bytemain
0002AEEE <AmiBlitz3.ab3@13282>  BRA.w 'usedef
0002AEF2 <AmiBlitz3.ab3@13285>   BSR.w getparameter2
0002AEF8 <AmiBlitz3.ab3@13286>   LEA newtypebase,A2
0002AEFC <AmiBlitz3.ab3@13287>    BSR.w findtype
0002AF00 <AmiBlitz3.ab3@13288>    BNE.w notypeerr
0002AF06 <AmiBlitz3.ab3@13291>   CMPA.l #newtype_byte,A2
0002AF0A <AmiBlitz3.ab3@13292>    BEQ.w 'byte
0002AF10 <AmiBlitz3.ab3@13293>   MOVE.w varmode,D1
0002AF14 <AmiBlitz3.ab3@13294>    BNE.w 'pit
0002AF1A <AmiBlitz3.ab3@13295>   ADDQ.w #1,globalvarpointer
0002AF22 <AmiBlitz3.ab3@13298>   BCLR #$0,globalvarpointer+1
0002AF26 <AmiBlitz3.ab3@13301>   MOVE.l A2,$A(A3)           ;set type
0002AF2E <AmiBlitz3.ab3@13302>   MOVE.w flagmask,$6(A3)                                  ;??????????
0002AF30 <AmiBlitz3.ab3@13303>   MOVEQ.l #$04,D1
0002AF38 <AmiBlitz3.ab3@13304>   BTST #$0,flagmask+1
0002AF3C <AmiBlitz3.ab3@13305>    BNE.w 'skip3
0002AF44 <AmiBlitz3.ab3@13306>   BTST #$1,flagmask+1
0002AF48 <AmiBlitz3.ab3@13307>    BNE.w 'skip3
0002AF50 <AmiBlitz3.ab3@13308>   CMPI.l #$100,$4(A2)
0002AF54 <AmiBlitz3.ab3@13309>    BCC.w 'skip3
0002AF58 <AmiBlitz3.ab3@13310>   MOVE.w $8(A2),D1
0002AF5E <AmiBlitz3.ab3@13313>   TST.w varmode
0002AF62 <AmiBlitz3.ab3@13314>    BEQ.w fvaradd_pit2
0002AF64 <AmiBlitz3.ab3@13315>   NEG.w D1
0002AF6A <AmiBlitz3.ab3@13316>   ADD.w D1,globalvarpointer
0002AF72 <AmiBlitz3.ab3@13317>   MOVE.w globalvarpointer,$4(A3)
0002AF74 <AmiBlitz3.ab3@13318>  RTS
0002AF7C <AmiBlitz3.ab3@13321>   MOVE.w globalvarpointer,$4(A3)
0002AF82 <AmiBlitz3.ab3@13322>   ADD.w D1,globalvarpointer
0002AF84 <AmiBlitz3.ab3@13323> RTS
0002AF88 <AmiBlitz3.ab3@13328>    BSR.w getparameter2
0002AF8E <AmiBlitz3.ab3@13329>   LEA newtypebase,A2
0002AF92 <AmiBlitz3.ab3@13330>    BSR.w findtype
0002AF96 <AmiBlitz3.ab3@13331>    BNE.w notypeerr
0002AF9C <AmiBlitz3.ab3@13334>   CMPA.l #newtype_byte,A2
0002AFA0 <AmiBlitz3.ab3@13335>    BEQ.w 'byte
0002AFA6 <AmiBlitz3.ab3@13336>   MOVE.w varmode,D1
0002AFAA <AmiBlitz3.ab3@13337>    BNE.w 'pit
0002AFB0 <AmiBlitz3.ab3@13338>   ADDQ.w #1,globalvarpointer
0002AFB8 <AmiBlitz3.ab3@13341>   BCLR #$0,globalvarpointer+1
0002AFBC <AmiBlitz3.ab3@13344>   MOVE.l A2,$A(A3)              ;set type
0002AFC4 <AmiBlitz3.ab3@13345>   MOVE.w flagmask,$6(A3)                                  ;??????????
0002AFC6 <AmiBlitz3.ab3@13347>   MOVEQ.l #$04,D1
0002AFCE <AmiBlitz3.ab3@13348>   BTST #$0,flagmask+1
0002AFD2 <AmiBlitz3.ab3@13349>    BNE.w 'skip3
0002AFDA <AmiBlitz3.ab3@13350>   BTST #$1,flagmask+1
0002AFDE <AmiBlitz3.ab3@13351>    BNE.w 'skip3
0002AFE6 <AmiBlitz3.ab3@13352>   CMPI.l #$100,$4(A2)
0002AFEA <AmiBlitz3.ab3@13353>    BCC.w 'skip3
0002AFEE <AmiBlitz3.ab3@13354>   MOVE.w $8(A2),D1
0002AFF4 <AmiBlitz3.ab3@13357>   TST.w varmode
0002AFF8 <AmiBlitz3.ab3@13358> BRA.w fvaradd_pit2
0002AFFE <AmiBlitz3.ab3@13368>   LEA firstglob,A2
0002B002 <AmiBlitz3.ab3@13369>    BSR.w findvariable2
0002B006 <AmiBlitz3.ab3@13372>   BNE.w 'hendrix
0002B00C <AmiBlitz3.ab3@13373>   MOVE.b flagmask+1,D1
0002B010 <AmiBlitz3.ab3@13374>   MOVE.b $7(A2),D3
0002B012 <AmiBlitz3.ab3@13375>   EOR.b D3,D1
0002B016 <AmiBlitz3.ab3@13376>    BEQ.w fvarfound
0002B01A <AmiBlitz3.ab3@13377>    BSR.w findlab
0002B01E <AmiBlitz3.ab3@13378>  BRA.w 'more
0002B026 <AmiBlitz3.ab3@13381>   MOVE.w #$FFFF,varmode           ; was -1
0002B02C <AmiBlitz3.ab3@13382>   MOVE.w globalvarpointer,-(A7)
0002B036 <AmiBlitz3.ab3@13383>   MOVE.w locvaroff,globalvarpointer
0002B03C <AmiBlitz3.ab3@13384>   LEA firstlocal,A2
0002B044 <AmiBlitz3.ab3@13386>   MOVE.b #1,newvariable
0002B048 <AmiBlitz3.ab3@13388>    BSR.w fvarback
0002B04E <AmiBlitz3.ab3@13390>   CLR.b newvariable
0002B058 <AmiBlitz3.ab3@13392>   MOVE.w globalvarpointer,locvaroff
0002B05E <AmiBlitz3.ab3@13393>   MOVE.w (A7)+,globalvarpointer
0002B060 <AmiBlitz3.ab3@13394> RTS
0002B062 <AmiBlitz3.ab3@13398>   MOVEA.l A2,A3
0002B066 <AmiBlitz3.ab3@13402>   CMP.w #$2E,D0         ;'.'
0002B06A <AmiBlitz3.ab3@13403>    BEQ.w 'skipsh
0002B06E <AmiBlitz3.ab3@13404>   CMP.w #$24,D0         ;'$'
0002B072 <AmiBlitz3.ab3@13405>    BNE.w 'skip4
0002B07A <AmiBlitz3.ab3@13406>   CMPI.l #newtype_string,$A(A3)
0002B07E <AmiBlitz3.ab3@13407>    BNE.w rongtypeerr
0002B082 <AmiBlitz3.ab3@13408>    BSR.w get1bytemain
0002B086 <AmiBlitz3.ab3@13409>  BRA.w 'skip4
0002B08A <AmiBlitz3.ab3@13412>    BSR.w getparameter2
0002B090 <AmiBlitz3.ab3@13413>   LEA newtypebase,A2
0002B094 <AmiBlitz3.ab3@13414>    BSR.w findtype
0002B098 <AmiBlitz3.ab3@13415>    BNE.w notypeerr
0002B09C <AmiBlitz3.ab3@13416>   CMPA.l $A(A3),A2
0002B0A0 <AmiBlitz3.ab3@13417>    BNE.w rongtypeerr
0002B0A8 <AmiBlitz3.ab3@13420>   BTST #$0,flagmask+1
0002B0AC <AmiBlitz3.ab3@13421>    BEQ.w 'skipz
0002B0B2 <AmiBlitz3.ab3@13423>   BTST #$0,$7(A3)
0002B0B6 <AmiBlitz3.ab3@13424>    BEQ.w pointerr
0002B0BA <AmiBlitz3.ab3@13427>   MOVEA.l $A(A3),A2
0002B0BC <AmiBlitz3.ab3@13428> RTS
0002B0BE <AmiBlitz3.ab3@13432>    TST.l D3                                                ;newtype >32kb  .w to .l
0002B0C2 <AmiBlitz3.ab3@13433>    BEQ.w 'done2a
0002B0CC <AmiBlitz3.ab3@13435>    MOVE.l destpointer,loada
0002B0D0 <AmiBlitz3.ab3@13438>  BRA 'done3a
0002B0D4 <AmiBlitz3.ab3@13441>   CMP.w #$9,D3                                             ;_addq_arrays
0002B0D8 <AmiBlitz3.ab3@13442>    BCC.w 'done3a
0002B0DE <AmiBlitz3.ab3@13444>   MOVE.w d3,arrayoffset
0002B0E2 <AmiBlitz3.ab3@13446>   ANDI.w #$7,D3
0002B0E4 <AmiBlitz3.ab3@13447>   LSL.w #8,D3
0002B0E6 <AmiBlitz3.ab3@13448>   LSL.w #1,D3
0002B0EE <AmiBlitz3.ab3@13449>   ANDI.w #$F1FF,addqa0
0002B0F4 <AmiBlitz3.ab3@13450>   OR.w D3,addqa0
0002B0FA <AmiBlitz3.ab3@13451>   MOVE.w addqa0,D1
0002B0FE <AmiBlitz3.ab3@13452>  BRA.w writeword
0002B104 <AmiBlitz3.ab3@13456>   CMP.l #$7fff,d3                                          ;>32kb newtypes
0002B108 <AmiBlitz3.ab3@13457>   BGT longoffset
0002B10E <AmiBlitz3.ab3@13459>   MOVE.w D3,leaa0a0+2
0002B114 <AmiBlitz3.ab3@13461>   MOVE.w d3,arrayoffset
0002B11A <AmiBlitz3.ab3@13463>   MOVE.l leaa0a0,D1
0002B11E <AmiBlitz3.ab3@13464>   BSR.w writelong
0002B120 <AmiBlitz3.ab3@13467> RTS
0002B124 <AmiBlitz3.ab3@13471>    MOVE.w #$d5fc,d1
0002B128 <AmiBlitz3.ab3@13472>    BSR writeword
0002B12A <AmiBlitz3.ab3@13473>    MOVE.l d3,d1
0002B12E <AmiBlitz3.ab3@13474>    BSR.w writelong
0002B130 <AmiBlitz3.ab3@13475> RTS
0002B134 <AmiBlitz3.ab3@13479>   Dc.w $b0ad,0000                                          ;cmp.l $0(A5),D0    ;nooptimize
0002B138 <AmiBlitz3.ab3@13482>    BCS.w arrchk3                                           
0002B13E <AmiBlitz3.ab3@13483>    JSR $20000                                              ;jsr 0
0002B144 <AmiBlitz3.ab3@13494>   TST.b fast
0002B148 <AmiBlitz3.ab3@13495>   BEQ 'l1
0002B14A <AmiBlitz3.ab3@13496>    MOVEQ #0,d1                                             ;faster arrays
0002B150 <AmiBlitz3.ab3@13497>    MOVE.w regnum,d2
0002B152 <AmiBlitz3.ab3@13498>    MOVE.w d2,d1
0002B154 <AmiBlitz3.ab3@13499>    LSL.w #8,d1
0002B156 <AmiBlitz3.ab3@13500>    LSL.w #4,d1
0002B158 <AmiBlitz3.ab3@13501>    ADD.w d2,d1
0002B15E <AmiBlitz3.ab3@13502>    OR.l #$4c2d0000,d1
0002B164 <AmiBlitz3.ab3@13503>    TST.w varmode
0002B168 <AmiBlitz3.ab3@13504>    BEQ 'l1a
0002B16C <AmiBlitz3.ab3@13505>    BCLR #16,d1
0002B170 <AmiBlitz3.ab3@13508>    BSR writelong
0002B174 <AmiBlitz3.ab3@13509>    MOVE.w $4(A7),D1
0002B178 <AmiBlitz3.ab3@13510>    BSR.w writeword
0002B17E <AmiBlitz3.ab3@13511>    MOVE.w regnum,D1
0002B180 <AmiBlitz3.ab3@13512>   SUBQ.w #1,D1
0002B182 <AmiBlitz3.ab3@13513>   LSL.w #8,D1
0002B184 <AmiBlitz3.ab3@13514>   LSL.w #1,D1
0002B188 <AmiBlitz3.ab3@13515>   ORI.w #$D080,D1
0002B18E <AmiBlitz3.ab3@13516>   OR.w regnum,D1
0002B192 <AmiBlitz3.ab3@13517>    BSR.w writeword
0002B194 <AmiBlitz3.ab3@13518>  RTS
0002B19A <AmiBlitz3.ab3@13522>   MOVE.w regnum,D2
0002B19E <AmiBlitz3.ab3@13524>   MOVE.w arrmul1(PC),D1
0002B1A0 <AmiBlitz3.ab3@13525>   OR.w D2,D1
0002B1A2 <AmiBlitz3.ab3@13526>   SUBQ.w #1,D1
0002B1A6 <AmiBlitz3.ab3@13527>    BSR.w writeword
0002B1AA <AmiBlitz3.ab3@13528>   MOVE.w arrmul2(PC),D1
0002B1AC <AmiBlitz3.ab3@13529>   OR.w D2,D1
0002B1AE <AmiBlitz3.ab3@13530>   MOVE.w D2,D3
0002B1B0 <AmiBlitz3.ab3@13531>   SUBQ.w #1,D3
0002B1B2 <AmiBlitz3.ab3@13532>   LSL.w #8,D3
0002B1B4 <AmiBlitz3.ab3@13533>   LSL.w #1,D3
0002B1B6 <AmiBlitz3.ab3@13534>   OR.w D3,D1
0002B1BA <AmiBlitz3.ab3@13535>    BSR.w writeword
0002B1BE <AmiBlitz3.ab3@13536>   MOVE.w arrmul3(PC),D1
0002B1C0 <AmiBlitz3.ab3@13537>   MOVE.w D2,D3
0002B1C2 <AmiBlitz3.ab3@13538>   LSL.w #8,D3
0002B1C4 <AmiBlitz3.ab3@13539>   LSL.w #1,D3
0002B1C6 <AmiBlitz3.ab3@13540>   OR.w D3,D1
0002B1CA <AmiBlitz3.ab3@13541>    BSR.w pokewda5s
0002B1CE <AmiBlitz3.ab3@13542>   MOVE.w $4(A7),D1         ; was 4+0
0002B1D0 <AmiBlitz3.ab3@13543>   ADDQ.w #2,D1
0002B1D4 <AmiBlitz3.ab3@13544>    BSR.w writeword
0002B1D8 <AmiBlitz3.ab3@13546>   MOVE.w arrmul4(PC),D1
0002B1DA <AmiBlitz3.ab3@13547>   MOVE.w D2,D3
0002B1DC <AmiBlitz3.ab3@13548>   SUBQ.w #1,D3
0002B1DE <AmiBlitz3.ab3@13549>   LSL.w #8,D3
0002B1E0 <AmiBlitz3.ab3@13550>   LSL.w #1,D3
0002B1E2 <AmiBlitz3.ab3@13551>   OR.w D3,D1
0002B1E6 <AmiBlitz3.ab3@13552>    BSR.w pokewda5s
0002B1EA <AmiBlitz3.ab3@13553>   MOVE.w $4(A7),D1       ; was 4+0
0002B1EE <AmiBlitz3.ab3@13554>    BSR.w writeword
0002B1F2 <AmiBlitz3.ab3@13556>   MOVE.w arrmul5(PC),D1
0002B1F4 <AmiBlitz3.ab3@13557>   OR.w D2,D1
0002B1F6 <AmiBlitz3.ab3@13558>   SUBQ.w #1,D1
0002B1FA <AmiBlitz3.ab3@13559>    BSR.w writeword
0002B1FE <AmiBlitz3.ab3@13560>   MOVE.w arrmul6(PC),D1
0002B200 <AmiBlitz3.ab3@13561>   OR.w D2,D1
0002B202 <AmiBlitz3.ab3@13562>   SUBQ.w #1,D1
0002B206 <AmiBlitz3.ab3@13563>    BSR.w writeword
0002B20A <AmiBlitz3.ab3@13564>   MOVE.w arrmul7(PC),D1
0002B20C <AmiBlitz3.ab3@13565>   OR.w D2,D1
0002B20E <AmiBlitz3.ab3@13566>   SUBQ.w #1,D1
0002B210 <AmiBlitz3.ab3@13567>   MOVE.w D2,D3
0002B212 <AmiBlitz3.ab3@13568>   LSL.w #8,D3
0002B214 <AmiBlitz3.ab3@13569>   LSL.w #1,D3
0002B216 <AmiBlitz3.ab3@13570>   OR.w D3,D1
0002B21A <AmiBlitz3.ab3@13571>    BSR.w writeword
0002B21E <AmiBlitz3.ab3@13572>   MOVE.w arrmul8(PC),D1
0002B220 <AmiBlitz3.ab3@13573>   MOVE.w D2,D3
0002B222 <AmiBlitz3.ab3@13574>   SUBQ.w #1,D3
0002B224 <AmiBlitz3.ab3@13575>   LSL.w #8,D3
0002B226 <AmiBlitz3.ab3@13576>   LSL.w #1,D3
0002B228 <AmiBlitz3.ab3@13577>   OR.w D3,D1
0002B22C <AmiBlitz3.ab3@13578>    BSR.w writeword
0002B232 <AmiBlitz3.ab3@13580>   MOVE.w regnum,D1
0002B234 <AmiBlitz3.ab3@13581>   SUBQ.w #1,D1
0002B236 <AmiBlitz3.ab3@13582>   LSL.w #8,D1
0002B238 <AmiBlitz3.ab3@13583>   LSL.w #1,D1
0002B23C <AmiBlitz3.ab3@13584>   ORI.w #$D080,D1
0002B242 <AmiBlitz3.ab3@13585>   OR.w regnum,D1
0002B246 <AmiBlitz3.ab3@13586> BRA.w writeword
0002B248 <AmiBlitz3.ab3@13594> arrmul1:   MOVE.l d0,-(a7)                                ;write array access
0002B24A <AmiBlitz3.ab3@13595> arrmul2:   MOVE  d0,d0
0002B24E <AmiBlitz3.ab3@13596> arrmul3:   MULU 0(a5),d0                                  ;mulu   x+2(a5),d1  ;lo*lo
0002B252 <AmiBlitz3.ab3@13597> arrmul4:   MULU 0(a5),d0                                  ;mulu   x(a5),d0    ;hi*lo
0002B254 <AmiBlitz3.ab3@13599> arrmul5:   SWAP d0
0002B256 <AmiBlitz3.ab3@13600> arrmul6:   CLR d0
0002B258 <AmiBlitz3.ab3@13601> arrmul7:   ADD.l d0,d0
0002B25A <AmiBlitz3.ab3@13602> arrmul8:   MOVE.l (a7)+,d0
0002B25E <AmiBlitz3.ab3@13607> listcode1:  Dc.b $24,$6D :              Dc.b $00,$00       ;MOVEA.L $0000(A5),A2      ;pointer to start of array data
0002B262 <AmiBlitz3.ab3@13608> listcode2:  Dc.b $24,$6A,$FF,$E0                           ;MOVEA.L -$0020(A2),A2     ;pointer to current
0002B264 <AmiBlitz3.ab3@13609> listarfix:  Dc.b $50,$4A                                   ;ADDQ.W  #8,A2
0002B26A <AmiBlitz3.ab3@13627>   CLR.l lastoffset_org
0002B270 <AmiBlitz3.ab3@13628>   BTST #$1,$7(A3)
0002B274 <AmiBlitz3.ab3@13629>    BEQ.w 'notarr
0002B27A <AmiBlitz3.ab3@13630>   MOVE.w notshared,D1
0002B27E <AmiBlitz3.ab3@13631>    BNE.w noarrerr
0002B282 <AmiBlitz3.ab3@13632>    BSR.w get1bytemain
0002B286 <AmiBlitz3.ab3@13633>   CMP.w #$29,D0
0002B28A <AmiBlitz3.ab3@13634>    BNE.w 'notalist
0002B290 <AmiBlitz3.ab3@13635>   BTST #$0,$6(A3)
0002B294 <AmiBlitz3.ab3@13636>    BEQ.w nolisterr
0002B29C <AmiBlitz3.ab3@13637>   MOVE.w $4(A3),listcode1+2
0002B2A0 <AmiBlitz3.ab3@13638>   MOVE.l listcode1(PC),D1
0002B2A4 <AmiBlitz3.ab3@13639>    BSR.w pokela5s
0002B2A8 <AmiBlitz3.ab3@13640>   MOVE.l listcode2(PC),D1
0002B2AC <AmiBlitz3.ab3@13641>    BSR.w writelong
0002B2B2 <AmiBlitz3.ab3@13642>   TST.b debugmode
0002B2B6 <AmiBlitz3.ab3@13643>    BEQ.w 'nolrerr
0002B2B8 <AmiBlitz3.ab3@13647>   MOVE.l A2,-(A7)
0002B2BC <AmiBlitz3.ab3@13648>   MOVE.w #$C315,D1
0002B2C0 <AmiBlitz3.ab3@13649>    BSR.w Atokejsr
0002B2C2 <AmiBlitz3.ab3@13650>   MOVEA.l (A7)+,A2
0002B2C6 <AmiBlitz3.ab3@13653>    MOVE.w listarfix(PC),D1                                 ;addq #8,a2
0002B2CA <AmiBlitz3.ab3@13655>    BSR.w writeword
0002B2CE <AmiBlitz3.ab3@13656>  BRA.w 'normalar
0002B2D0 <AmiBlitz3.ab3@13659>  'listoff:   Ds.w 1
0002B2D6 <AmiBlitz3.ab3@13662>   CLR.w 'listoff
0002B2DC <AmiBlitz3.ab3@13663>   BTST #$0,$6(A3)
0002B2E0 <AmiBlitz3.ab3@13664>    BEQ.w 'knop
0002B2E8 <AmiBlitz3.ab3@13665>   MOVE.w #$0008,'listoff                            ;adjust size of one element if list.
0002B2EC <AmiBlitz3.ab3@13668>   MOVEM.l A2-A3,-(A7)
0002B2F2 <AmiBlitz3.ab3@13669>   MOVE.w varmode,-(A7)
0002B2F6 <AmiBlitz3.ab3@13670>   MOVE.w $8(A3),-(A7)                                       ;number of dims
0002B2FA <AmiBlitz3.ab3@13671>   MOVE.w $4(A3),-(A7)                                       ;varoff
0002B2FC <AmiBlitz3.ab3@13672>   MOVE.l A2,-(A7)
0002B302 <AmiBlitz3.ab3@13673>   MOVE.w flagmask,-(A7)
0002B30C <AmiBlitz3.ab3@13675>   MOVE.w oldqflag,instringon
0002B312 <AmiBlitz3.ab3@13676>   MOVEA.l lastsourcepos,A5
0002B316 <AmiBlitz3.ab3@13677>    BSR.w arreval
0002B31C <AmiBlitz3.ab3@13678>   MOVE.w (A7)+,flagmask
0002B324 <AmiBlitz3.ab3@13679>   MOVE.w $8(A7),varmode
0002B32A <AmiBlitz3.ab3@13680>   TST.b debugmode
0002B32E <AmiBlitz3.ab3@13681>    BEQ.w 'noszchk
0002B330 <AmiBlitz3.ab3@13685>   MOVEA.l (A7)+,A2
0002B332 <AmiBlitz3.ab3@13686>   MOVEQ.l #$04,D1
0002B33A <AmiBlitz3.ab3@13687>   BTST #$0,flagmask+1                                      ;pointer?
0002B33E <AmiBlitz3.ab3@13688>    BNE.b 'domul                                          ;yes, then use 4 byte mul...
0002B342 <AmiBlitz3.ab3@13689>   MOVE.w $8(A2),D1
0002B346 <AmiBlitz3.ab3@13692>   ADD.w 'listoff(PC),D1
0002B34A <AmiBlitz3.ab3@13693>   BSR.w muld1
0002B350 <AmiBlitz3.ab3@13694>   ADDQ.w #1,regnum
0002B352 <AmiBlitz3.ab3@13697>   ADDQ.w #4,(A7)
0002B356 <AmiBlitz3.ab3@13698>   TST.w $4(A7)
0002B35A <AmiBlitz3.ab3@13699>    BEQ.w 'isglob
0002B35C <AmiBlitz3.ab3@13700>   SUBQ.w #8,(A7)                                           ;range check local array
0002B362 <AmiBlitz3.ab3@13703>   TST.b debugmode
0002B366 <AmiBlitz3.ab3@13704>    BEQ.w 'noer1
0002B36C <AmiBlitz3.ab3@13705>   MOVE.w regnum,D1
0002B36E <AmiBlitz3.ab3@13706>   SUBQ.w #1,D1
0002B370 <AmiBlitz3.ab3@13707>   LSL.w #8,D1
0002B372 <AmiBlitz3.ab3@13708>   LSL.w #1,D1
0002B376 <AmiBlitz3.ab3@13709>   OR.w zarrchk(PC),D1
0002B37A <AmiBlitz3.ab3@13710>    BSR.w pokewda5s                                         ;cmp.l x(a5),D regat
0002B37C <AmiBlitz3.ab3@13711>   MOVE.w (A7),D1
0002B380 <AmiBlitz3.ab3@13712>    BSR.w writeword
0002B384 <AmiBlitz3.ab3@13713>   MOVE.l arrchk2(PC),D1
0002B388 <AmiBlitz3.ab3@13714>    BSR.w writelong
0002B38C <AmiBlitz3.ab3@13715>   MOVE.w #$C309,D1
0002B390 <AmiBlitz3.ab3@13716>    BSR.w Atokejsr
0002B394 <AmiBlitz3.ab3@13719>   SUBQ.w #1,$2(A7)
0002B398 <AmiBlitz3.ab3@13720>    BEQ.w 'ardone
0002B39C <AmiBlitz3.ab3@13721>   CMP.w #$2C,D0
0002B3A0 <AmiBlitz3.ab3@13722>    BNE.w syntaxerr
0002B3A6 <AmiBlitz3.ab3@13723>    TST.b fast
0002B3AA <AmiBlitz3.ab3@13724>    BNE 'l1
0002B3AE <AmiBlitz3.ab3@13725>    BSR.w arrevalchk
0002B3B2 <AmiBlitz3.ab3@13726>  BRA 'l2
0002B3B6 <AmiBlitz3.ab3@13729>   BSR arreval
0002B3BE <AmiBlitz3.ab3@13732>   MOVE.w $4(A7),varmode
0002B3C2 <AmiBlitz3.ab3@13733>   BSR.w makeamul
0002B3C6 <AmiBlitz3.ab3@13734>  BRA.w 'arloop
0002B3CA <AmiBlitz3.ab3@13737>   CMP.w #$29,D0
0002B3CE <AmiBlitz3.ab3@13738>    BNE.w syntaxerr
0002B3D4 <AmiBlitz3.ab3@13739>   SUBQ.w #1,regnum
0002B3D6 <AmiBlitz3.ab3@13740>   ADDQ.w #6,A7
0002B3DA <AmiBlitz3.ab3@13741>   MOVEM.l (A7)+,A2-A3
0002B3E2 <AmiBlitz3.ab3@13742>   MOVE.w $4(A3),movea5a0+2
0002B3E8 <AmiBlitz3.ab3@13743>   MOVE.l movea5a0,D1
0002B3EC <AmiBlitz3.ab3@13744>    BSR.w pokela5s
0002B3F2 <AmiBlitz3.ab3@13745>   MOVE.w regnum,D1
0002B3F6 <AmiBlitz3.ab3@13746>   ORI.w #$D5C0,D1                                          ;add.l Dr,a2
0002B3FA <AmiBlitz3.ab3@13747>    BSR.w writeword
0002B400 <AmiBlitz3.ab3@13748>   BTST #$0,$6(A3)
0002B404 <AmiBlitz3.ab3@13749>    BEQ.w 'normalar
0002B408 <AmiBlitz3.ab3@13753>   MOVE.w listarfix(PC),D1
0002B40C <AmiBlitz3.ab3@13754>    BSR.w writeword
0002B410 <AmiBlitz3.ab3@13757>   BSR.w get1bytemain
0002B416 <AmiBlitz3.ab3@13761>   BTST #$0,$7(A3)
0002B41A <AmiBlitz3.ab3@13762>    BEQ.w 'noppnt
0002B41E <AmiBlitz3.ab3@13763>   CMP.w #$5C,D0
0002B422 <AmiBlitz3.ab3@13764>    BNE.w 'pmskip
0002B426 <AmiBlitz3.ab3@13765>   MOVE.w 'pfix(PC),D1
0002B42A <AmiBlitz3.ab3@13766>    BSR.w writeword
0002B42E <AmiBlitz3.ab3@13769>   MOVE.w #$8000,D2
0002B432 <AmiBlitz3.ab3@13770>  BRA.w 'loopml
0002B436 <AmiBlitz3.ab3@13773>   MOVE.w #$C000,D2
0002B43A <AmiBlitz3.ab3@13774>  BRA.w 'loopml
0002B43C <AmiBlitz3.ab3@13777>  'pfix:   Dc.b $24,$52                                   ;MOVEA.L (A2),A2
0002B440 <AmiBlitz3.ab3@13782>   CMP.w #$28,D0
0002B444 <AmiBlitz3.ab3@13783>    BEQ.w noarrerr
0002B44C <AmiBlitz3.ab3@13784>   CMPI.l #$100,$4(A2)
0002B450 <AmiBlitz3.ab3@13785>    BCS.w 'simpvar
0002B456 <AmiBlitz3.ab3@13786>   BTST #$0,$7(A3)
0002B45A <AmiBlitz3.ab3@13787>    BEQ.w 'notap
0002B45E <AmiBlitz3.ab3@13791>   CMP.w #$5C,D0
0002B462 <AmiBlitz3.ab3@13792>    BEQ.w 'notap
0002B464 <AmiBlitz3.ab3@13793>   MOVEQ.l #$00,D2
0002B468 <AmiBlitz3.ab3@13794>  BRA.w 'simpvar2
0002B46C <AmiBlitz3.ab3@13797>   MOVE.w #$8000,D2
0002B474 <AmiBlitz3.ab3@13798>   MOVE.w $4(A3),movea5a0+2
0002B47A <AmiBlitz3.ab3@13799>   MOVE.l movea5a0,D1
0002B47E <AmiBlitz3.ab3@13800>    BSR.w pokela5s                                         ;move.l x(a5),a2
0002B484 <AmiBlitz3.ab3@13802>    TST.b debugmode
0002B488 <AmiBlitz3.ab3@13803>    BEQ.w 'skip
0002B48C <AmiBlitz3.ab3@13804>    MOVE.w #$c320,D1
0002B492 <AmiBlitz3.ab3@13805>    JSR Atokejsr
0002B494 <AmiBlitz3.ab3@13809>   MOVEQ.l #$00,D3
0002B498 <AmiBlitz3.ab3@13812>   CMP.w #$5C,D0
0002B49C <AmiBlitz3.ab3@13813>    BNE.w 'done
0002B4A4 <AmiBlitz3.ab3@13814>   CMPI.l #$100,$4(A2)
0002B4A8 <AmiBlitz3.ab3@13815>    BCS.w rongtypeerr
0002B4AA <AmiBlitz3.ab3@13816>   MOVE.w D2,-(A7)
0002B4AE <AmiBlitz3.ab3@13817>    BSR.w getparameter2
0002B4B2 <AmiBlitz3.ab3@13818>    BEQ.w syntaxerr
0002B4B4 <AmiBlitz3.ab3@13819>   ADDQ.w #4,A2
0002B4B8 <AmiBlitz3.ab3@13820>    BSR.w findvariable2
0002B4BC <AmiBlitz3.ab3@13821>    BNE.w noofferr
0002B4BE <AmiBlitz3.ab3@13822>   MOVE.w (A7)+,D2
0002B4C0 <AmiBlitz3.ab3@13823>   MOVEA.l A2,A3                                             ;pointer to offset
0002B4C4 <AmiBlitz3.ab3@13824>   MOVEA.l $A(A3),A2                                         ;pointer to type
0002B4C6 <AmiBlitz3.ab3@13825>   MOVEQ #0,d1
0002B4CA <AmiBlitz3.ab3@13826>   MOVE.w 4(a3),d1
0002B4CC <AmiBlitz3.ab3@13827>   ADD.l d1,d3
0002B4D2 <AmiBlitz3.ab3@13829>   MOVE.l A3,lastoffset_org
0002B4D6 <AmiBlitz3.ab3@13830>   CMP.w #$5B,D0
0002B4DA <AmiBlitz3.ab3@13831>    BNE.w 'realdone
0002B4E0 <AmiBlitz3.ab3@13832>   BTST #$1,$7(A3)                                           ;a array [] in newtype is found
0002B4E4 <AmiBlitz3.ab3@13833>    BEQ.w rongtypeerr
0002B4E8 <AmiBlitz3.ab3@13834>    BSR.w addd0a0
0002B4EC <AmiBlitz3.ab3@13835>   MOVEM.l A2-A3,-(A7)
0002B4F2 <AmiBlitz3.ab3@13836>   MOVE.w varmode,-(A7)
0002B4F8 <AmiBlitz3.ab3@13837>   MOVE.l lastoffset_org,-(A7)
0002B4FE <AmiBlitz3.ab3@13838>   MOVE.w pusha2,D1
0002B502 <AmiBlitz3.ab3@13839>   BSR.w writeword
0002B504 <AmiBlitz3.ab3@13840>   MOVEQ.l #$03,D2                                          ;was 2 >32kb types
0002B50E <AmiBlitz3.ab3@13841>   MOVE.l destpointer,deststore
0002B514 <AmiBlitz3.ab3@13842>   MOVE.l leftsidetype,-(a7)
0002B51A <AmiBlitz3.ab3@13843>   MOVE.l rightsidetype,-(a7)
0002B520 <AmiBlitz3.ab3@13845>   MOVE.w leftsideflagmask,-(a7)
0002B526 <AmiBlitz3.ab3@13846>   MOVE.w rightsideflagmask,-(a7)
0002B52C <AmiBlitz3.ab3@13847>   CLR.l rightsidetype
0002B532 <AmiBlitz3.ab3@13848>   CLR.l leftsidetype
0002B538 <AmiBlitz3.ab3@13849>   CLR.w leftsideflagmask
0002B53E <AmiBlitz3.ab3@13850>   CLR.w rightsideflagmask
0002B542 <AmiBlitz3.ab3@13851>   BSR.w eval
0002B548 <AmiBlitz3.ab3@13852>   MOVE.w (a7)+,rightsideflagmask
0002B54E <AmiBlitz3.ab3@13853>   MOVE.w (a7)+,leftsideflagmask
0002B554 <AmiBlitz3.ab3@13854>   MOVE.l (a7)+,rightsidetype
0002B55A <AmiBlitz3.ab3@13855>   MOVE.l (a7)+,leftsidetype
0002B55E <AmiBlitz3.ab3@13856>   CMP.w #$5D,D0
0002B562 <AmiBlitz3.ab3@13857>    BNE.w syntaxerr
0002B568 <AmiBlitz3.ab3@13858>   TST.b fast                                               ;a2,-(a7) array
0002B56C <AmiBlitz3.ab3@13859>   BEQ 'loop0_l10
0002B572 <AmiBlitz3.ab3@13865>   MOVE.l destpointer,d1
0002B578 <AmiBlitz3.ab3@13866>   SUB.l deststore,d1
0002B57E <AmiBlitz3.ab3@13867>   CMP.l #4,d1
0002B582 <AmiBlitz3.ab3@13868>   BNE 'loop0_l10
0002B588 <AmiBlitz3.ab3@13869>   MOVE.l destpointer,a4
0002B58E <AmiBlitz3.ab3@13870>   MOVE.l -4(a4),-6(a4)
0002B594 <AmiBlitz3.ab3@13871>   SUBQ.l #2,destpointer
0002B59A <AmiBlitz3.ab3@13872>   CLR.l imm_addr
0002B5A0 <AmiBlitz3.ab3@13873>   CLR.l load_var_addr
0002B5A4 <AmiBlitz3.ab3@13874>  BRA 'loop0_l20
0002B5AA <AmiBlitz3.ab3@13877>   MOVE.w pulla2,D1
0002B5AE <AmiBlitz3.ab3@13878>    BSR.w writeword
0002B5B4 <AmiBlitz3.ab3@13881>   MOVE.l (A7)+,lastoffset_org
0002B5BA <AmiBlitz3.ab3@13882>   MOVE.w (A7)+,varmode
0002B5BE <AmiBlitz3.ab3@13883>   MOVEM.l (A7)+,A2-A3
0002B5C4 <AmiBlitz3.ab3@13889>   TST.w debugmode
0002B5C8 <AmiBlitz3.ab3@13890>    BEQ.b 'nobchk
0002B5CC <AmiBlitz3.ab3@13891>   MOVE.w $8(A3),D1
0002B5D0 <AmiBlitz3.ab3@13892>    BEQ.b 'nobchk                                   ;no [0] checks!
0002B5D6 <AmiBlitz3.ab3@13896>   MOVE.w D1,brchkcode+2
0002B5DC <AmiBlitz3.ab3@13897>   MOVE.w regnum,D1
0002B5DE <AmiBlitz3.ab3@13898>   LSL.w #8,D1
0002B5E0 <AmiBlitz3.ab3@13899>   LSL.w #1,D1
0002B5E4 <AmiBlitz3.ab3@13900>   OR.w brchkcode0(PC),D1
0002B5EA <AmiBlitz3.ab3@13901>   MOVE.w D1,brchkcode
0002B5EE <AmiBlitz3.ab3@13902>   MOVE.l brchkcode(PC),D1
0002B5F2 <AmiBlitz3.ab3@13903>    BSR.w writelong
0002B5F6 <AmiBlitz3.ab3@13904>   MOVE.l brchkcode+4(PC),D1
0002B5FA <AmiBlitz3.ab3@13905>    BSR.w writelong
0002B5FE <AmiBlitz3.ab3@13906>   MOVE.w brchkcode+8(PC),D1
0002B602 <AmiBlitz3.ab3@13907>    BSR.w writeword
0002B604 <AmiBlitz3.ab3@13910>   MOVEQ.l #$04,D1
0002B60A <AmiBlitz3.ab3@13911>   BTST #$0,$7(A3)
0002B60E <AmiBlitz3.ab3@13912>    BNE.w 'dothemul
0002B612 <AmiBlitz3.ab3@13913>   MOVE.w $8(A2),D1
0002B616 <AmiBlitz3.ab3@13916>   BSR.w muld1
0002B61C <AmiBlitz3.ab3@13917>   MOVE.w addrega2,D1
0002B622 <AmiBlitz3.ab3@13918>   OR.w regnum,D1
0002B626 <AmiBlitz3.ab3@13919>    OR.w #$100,d1                                           ;>32kb types
0002B62A <AmiBlitz3.ab3@13920>    BSR.w writeword
0002B62E <AmiBlitz3.ab3@13921>    BSR.w get1bytemain
0002B630 <AmiBlitz3.ab3@13922>   MOVEQ.l #$00,D3
0002B634 <AmiBlitz3.ab3@13923>   MOVE.w #$8000,D2
0002B63A <AmiBlitz3.ab3@13926>   BTST #$0,$7(A3)
0002B63E <AmiBlitz3.ab3@13927>    BNE.w 'pointer
0002B642 <AmiBlitz3.ab3@13928>  BRA.w 'loop0
0002B646 <AmiBlitz3.ab3@13931>  CMP.w #$5C,D0
0002B64A <AmiBlitz3.ab3@13932>    BNE.w 'done3
0002B64C <AmiBlitz3.ab3@13933>   TST.w D3
0002B650 <AmiBlitz3.ab3@13934>    BNE.w 'pskip
0002B656 <AmiBlitz3.ab3@13935>   MOVE.w movea0,D1
0002B65A <AmiBlitz3.ab3@13936>    BSR.w writeword
0002B65E <AmiBlitz3.ab3@13937>  BRA.w 'pmore
0002B664 <AmiBlitz3.ab3@13940>   MOVE.w D3,movea0a0+2
0002B66A <AmiBlitz3.ab3@13941>   MOVE.l movea0a0,D1
0002B66E <AmiBlitz3.ab3@13942>    BSR.w writelong
0002B674 <AmiBlitz3.ab3@13945>   BTST #$2,$7(A3)
0002B678 <AmiBlitz3.ab3@13946>    BEQ.w 'loopml
0002B67E <AmiBlitz3.ab3@13947>   MOVE.l adda0a0,D1
0002B682 <AmiBlitz3.ab3@13948>    BSR.w writelong
0002B686 <AmiBlitz3.ab3@13949>  BRA.w 'loopml
0002B68A <AmiBlitz3.ab3@13952>   BSET #$E,D2
0002B690 <AmiBlitz3.ab3@13953>   BTST #$2,$7(A3)
0002B694 <AmiBlitz3.ab3@13954>    BNE.w 'done
0002B698 <AmiBlitz3.ab3@13955>   BSET #$D,D2
0002B6A0 <AmiBlitz3.ab3@13958>   CMPI.l #$100,$4(A2)
0002B6A4 <AmiBlitz3.ab3@13959>    BCC.w 'done2
0002B6A8 <AmiBlitz3.ab3@13960>   MOVE.b $7(A2),D2
0002B6AC <AmiBlitz3.ab3@13963>  BRA.w addd0a0
0002B6B0 <AmiBlitz3.ab3@13966>   MOVE.w $6(A2),D2
0002B6B4 <AmiBlitz3.ab3@13969>   MOVE.w $4(A3),D3
0002B6BA <AmiBlitz3.ab3@13970>   BTST #$0,$7(A3)
0002B6BE <AmiBlitz3.ab3@13971>    BEQ.w 'nopoint
0002B6C2 <AmiBlitz3.ab3@13972>   BSET #$E,D2
0002B6C4 <AmiBlitz3.ab3@13975> RTS
0002B6C8 <AmiBlitz3.ab3@13979> brchkcode0:  Dc.b $B0,$7C,$00,$00                          ;CMP.W   #$0000,D0
0002B6CC <AmiBlitz3.ab3@13980> brchkcode:   Dc.b $B0,$7C :             Dc.b $00,$00       ;CMP.W   #$0000,D0
0002B6CE <AmiBlitz3.ab3@13981>              Dc.b $65,$04                                  ;BCS.B   brchkcode_ok
0002B6D0 <AmiBlitz3.ab3@13982>              Dc.b $70,$02                                  ;MOVEQ   #$02,D0
0002B6D2 <AmiBlitz3.ab3@13983>              Dc.b $4E,$40                                  ;TRAP    #00
0002B6D8 <AmiBlitz3.ab3@13991>   TST.w varmode
0002B6DC <AmiBlitz3.ab3@13992>    BEQ.w writeword
0002B6E0 <AmiBlitz3.ab3@13993>   BCLR #$0,D1
0002B6E4 <AmiBlitz3.ab3@13994> BRA.w writeword
0002B6EA <AmiBlitz3.ab3@13997>   TST.w varmode
0002B6EE <AmiBlitz3.ab3@13998>    BEQ.w writeword
0002B6F2 <AmiBlitz3.ab3@13999>   BCLR #$9,D1
0002B6F6 <AmiBlitz3.ab3@14000> BRA.w writeword
0002B6FC <AmiBlitz3.ab3@14003>   TST.w proceduremode
0002B700 <AmiBlitz3.ab3@14004>    BEQ.w writelong
0002B704 <AmiBlitz3.ab3@14005>   BCLR #$19,D1
0002B708 <AmiBlitz3.ab3@14006> BRA.w writelong
0002B70E <AmiBlitz3.ab3@14009>   TST.w varmode
0002B712 <AmiBlitz3.ab3@14010>   BEQ.w writelong
0002B716 <AmiBlitz3.ab3@14011>   BCLR #$10,D1
0002B71C <AmiBlitz3.ab3@14019>   ADDQ.l #1,destpointer                                   ; this is a copy of the writewordcode
0002B724 <AmiBlitz3.ab3@14020>   BCLR #$0,destpointer+3
0002B72A <AmiBlitz3.ab3@14021>   MOVEA.l destpointer,A4
0002B730 <AmiBlitz3.ab3@14022>   CMPA.l destbufferend,A4
0002B734 <AmiBlitz3.ab3@14023>    BCC.w 'overa
0002B736 <AmiBlitz3.ab3@14024>   MOVE.l D1,(A4)+
0002B73C <AmiBlitz3.ab3@14027>   MOVE.l A4,destpointer
0002B740 <AmiBlitz3.ab3@14028>   CMPA.l bigpc(PC),A4
0002B744 <AmiBlitz3.ab3@14029>    BHI.w 'nbpa
0002B746 <AmiBlitz3.ab3@14030>  RTS
0002B74C <AmiBlitz3.ab3@14033>   TST.w cfetchmode                                         ; to complete the subroutine
0002B750 <AmiBlitz3.ab3@14034>   BNE.w 'nbp2a                                             ;
0002B756 <AmiBlitz3.ab3@14035>   MOVE.l A4,bigpc                                          ;
0002B758 <AmiBlitz3.ab3@14038>  RTS
0002B760 <AmiBlitz3.ab3@14041>   MOVE.w #$FFFF,dontwrite_nomemleft                                  ;#-1 org source
0002B766 <AmiBlitz3.ab3@14042>   CLR.b fast
0002B76C <AmiBlitz3.ab3@14043>   CLR.b fpu
0002B772 <AmiBlitz3.ab3@14044>   CLR.b iee                                                ; in writeword this is #2
0002B774 <AmiBlitz3.ab3@14045>   ADDQ.w #4,A4
0002B778 <AmiBlitz3.ab3@14046> BRA.w 'msa
0002B77E <AmiBlitz3.ab3@14065>   ADDQ.l #1,destpointer
0002B786 <AmiBlitz3.ab3@14066>   BCLR #$0,destpointer+3
0002B78C <AmiBlitz3.ab3@14067>   MOVEA.l destpointer,A4
0002B792 <AmiBlitz3.ab3@14068>   CMPA.l destbufferend,A4
0002B796 <AmiBlitz3.ab3@14069>    BCC.w 'over
0002B798 <AmiBlitz3.ab3@14070>   MOVE.w D1,(A4)+
0002B79E <AmiBlitz3.ab3@14073>   MOVE.l A4,destpointer
0002B7A2 <AmiBlitz3.ab3@14074>   CMPA.l bigpc(PC),A4
0002B7A6 <AmiBlitz3.ab3@14075>    BHI.w 'nbp
0002B7A8 <AmiBlitz3.ab3@14076>  RTS
0002B7AE <AmiBlitz3.ab3@14079>   TST.w cfetchmode
0002B7B2 <AmiBlitz3.ab3@14080>   BNE.w 'nbp2
0002B7B8 <AmiBlitz3.ab3@14081>   MOVE.l A4,bigpc
0002B7BA <AmiBlitz3.ab3@14084>  RTS
0002B7C2 <AmiBlitz3.ab3@14087>   MOVE.w #$FFFF,dontwrite_nomemleft                                  ;#-1 org source
0002B7C4 <AmiBlitz3.ab3@14088>   ADDQ.w #2,A4
0002B7CA <AmiBlitz3.ab3@14089>   CLR.b fast
0002B7D0 <AmiBlitz3.ab3@14090>   CLR.b fpu
0002B7D6 <AmiBlitz3.ab3@14091>   CLR.b iee
0002B7DA <AmiBlitz3.ab3@14092> BRA.w 'ms
0002B7E0 <AmiBlitz3.ab3@14096>   MOVEA.l destpointer,A4
0002B7E6 <AmiBlitz3.ab3@14097>   CMPA.l destbufferend,A4
0002B7EA <AmiBlitz3.ab3@14098>    BCC.w 'over
0002B7EC <AmiBlitz3.ab3@14099>   MOVE.b D1,(A4)+
0002B7F2 <AmiBlitz3.ab3@14102>   MOVE.l A4,destpointer
0002B7F6 <AmiBlitz3.ab3@14103>   CMPA.l bigpc(PC),A4
0002B7FA <AmiBlitz3.ab3@14104>    BHI.w 'nbp
0002B7FC <AmiBlitz3.ab3@14105>  RTS
0002B802 <AmiBlitz3.ab3@14108>   TST.w cfetchmode
0002B806 <AmiBlitz3.ab3@14109>    BNE.w 'nbp2
0002B80C <AmiBlitz3.ab3@14110>   MOVE.l A4,bigpc
0002B80E <AmiBlitz3.ab3@14113>  RTS
0002B816 <AmiBlitz3.ab3@14116>   MOVE.w #-1,dontwrite_nomemleft
0002B818 <AmiBlitz3.ab3@14117>   ADDQ.w #1,A4
0002B81E <AmiBlitz3.ab3@14118>   CLR.b fast
0002B824 <AmiBlitz3.ab3@14119>   CLR.b fpu
0002B82A <AmiBlitz3.ab3@14120>   CLR.b iee
0002B82E <AmiBlitz3.ab3@14121> BRA.w 'ms
0002B832 <AmiBlitz3.ab3@14124> bigpc:   Ds.l 1
0002B834 <AmiBlitz3.ab3@14128>   MOVE.w (A0)+,D1
0002B838 <AmiBlitz3.ab3@14129>   BSR.w writeword
0002B83A <AmiBlitz3.ab3@14132>     CMPA.l A1,A0
0002B83E <AmiBlitz3.ab3@14133>     BCC.w 'done
0002B840 <AmiBlitz3.ab3@14134>       MOVE.w (A0)+,D1
0002B844 <AmiBlitz3.ab3@14135>       BSR.w writeword
0002B848 <AmiBlitz3.ab3@14136>  BRA.w 'loop
0002B84A <AmiBlitz3.ab3@14139> RTS
0002B84C <AmiBlitz3.ab3@14143>   MOVE.w (A0)+,D1
0002B850 <AmiBlitz3.ab3@14144>   BSR.w writeword
0002B852 <AmiBlitz3.ab3@14145>   CMPA.l A1,A0
0002B856 <AmiBlitz3.ab3@14146>   BCS.w pokecode2
0002B858 <AmiBlitz3.ab3@14147> RTS
0002B85E <AmiBlitz3.ab3@14154>   TST.b iniffcommand
0002B862 <AmiBlitz3.ab3@14155>   BEQ 'l1
0002B866 <AmiBlitz3.ab3@14156>     MOVE.w #$4880,D1
0002B86C <AmiBlitz3.ab3@14157>     OR.w regnum,D1
0002B870 <AmiBlitz3.ab3@14158>     BSR writeword
0002B872 <AmiBlitz3.ab3@14162> RTS
0002B876 <AmiBlitz3.ab3@14168>   BSR.w convert_byte_to_word
0002B87C <AmiBlitz3.ab3@14172>   TST.b iee
0002B880 <AmiBlitz3.ab3@14173>   BEQ 'old
0002B884 <AmiBlitz3.ab3@14174>   CMP.b #5,d2
0002B888 <AmiBlitz3.ab3@14175>   BEQ wtof
0002B88C <AmiBlitz3.ab3@14179>   MOVE.w #$48C0,D1
0002B892 <AmiBlitz3.ab3@14180>   OR.w regnum,D1
0002B896 <AmiBlitz3.ab3@14181> BRA.w writeword
0002B898 <AmiBlitz3.ab3@14185>   MOVEQ #0,d0
0002B89E <AmiBlitz3.ab3@14186>   MOVE.w regnum,d0
0002B8A0 <AmiBlitz3.ab3@14187>   ASL.l #7,d0
0002B8A6 <AmiBlitz3.ab3@14188>   MOVE.l #$f2005000,d1
0002B8A8 <AmiBlitz3.ab3@14189>   OR.l d0,d1
0002B8AA <AmiBlitz3.ab3@14190>   ASL.l #1,d0
0002B8AC <AmiBlitz3.ab3@14191>   ASL.l #8,d0
0002B8AE <AmiBlitz3.ab3@14192>   OR.l d0,d1
0002B8B2 <AmiBlitz3.ab3@14193> BRA writelong
0002B8B6 <AmiBlitz3.ab3@14197>   BSR.w convert_byte_to_word
0002B8BA <AmiBlitz3.ab3@14200>   MOVE.w #$4840,D1
0002B8C0 <AmiBlitz3.ab3@14201>   OR.w regnum,D1
0002B8C4 <AmiBlitz3.ab3@14202>    BSR.w writeword
0002B8C8 <AmiBlitz3.ab3@14203>   MOVE.w #$4240,D1
0002B8CE <AmiBlitz3.ab3@14204>   OR.w regnum,D1
0002B8D2 <AmiBlitz3.ab3@14205> BRA.w writeword
0002B8D6 <AmiBlitz3.ab3@14209>   CMP.w #$ffdc,d1
0002B8DA <AmiBlitz3.ab3@14210>   BNE 'negfpu
0002B8DC <AmiBlitz3.ab3@14211>   MOVEQ #0,d0
0002B8E2 <AmiBlitz3.ab3@14212>   MOVE.w regnum,d0
0002B8E4 <AmiBlitz3.ab3@14213>   ASL.l #7,d0
0002B8EA <AmiBlitz3.ab3@14214>   MOVE.l #$f2004000,d1
0002B8EC <AmiBlitz3.ab3@14215>   OR.l d0,d1
0002B8EE <AmiBlitz3.ab3@14216>   ASL.l #1,d0
0002B8F0 <AmiBlitz3.ab3@14217>   ASL.l #8,d0
0002B8F2 <AmiBlitz3.ab3@14218>   OR.l d0,d1
0002B8F6 <AmiBlitz3.ab3@14219>  BRA writelong
0002B8F8 <AmiBlitz3.ab3@14222>   MOVEQ #0,d1
0002B8FE <AmiBlitz3.ab3@14223>   MOVE.w regnum,d1                                         ;fpu neg
0002B900 <AmiBlitz3.ab3@14224>   ASL.l #7,d1
0002B906 <AmiBlitz3.ab3@14225>   OR.l #$f200001a,d1
0002B908 <AmiBlitz3.ab3@14226>   MOVE.l d0,-(a7)
0002B90A <AmiBlitz3.ab3@14227>   MOVEQ #0,d0
0002B910 <AmiBlitz3.ab3@14228>   MOVE.w regnum,d0
0002B912 <AmiBlitz3.ab3@14229>   ASL.l #8,d0
0002B914 <AmiBlitz3.ab3@14230>   ASL.l #2,d0
0002B916 <AmiBlitz3.ab3@14231>   OR.l d0,d1
0002B918 <AmiBlitz3.ab3@14232>   MOVE.l (a7)+,d0
0002B91C <AmiBlitz3.ab3@14233> BRA writelong
0002B922 <AmiBlitz3.ab3@14239>    TST.b iee
0002B926 <AmiBlitz3.ab3@14240>    BNE wtof
0002B92A <AmiBlitz3.ab3@14242>    BSR.w convert_byte_to_long
0002B92E <AmiBlitz3.ab3@14245>    MOVE.w #$FFDC,D1
0002B934 <AmiBlitz3.ab3@14249>    TST.b iee
0002B938 <AmiBlitz3.ab3@14250>    BNE ltof
0002B93E <AmiBlitz3.ab3@14252>    MOVE.w D1,libjsr+2
0002B942 <AmiBlitz3.ab3@14253>    BSR.w savereg
0002B944 <AmiBlitz3.ab3@14254>   MOVE.l D4,D1
0002B948 <AmiBlitz3.ab3@14255>    BSR.w pokemovem
0002B94C <AmiBlitz3.ab3@14256>   MOVE.w #$C900,D1      ; #getffpbase,
0002B950 <AmiBlitz3.ab3@14257>    BSR.w Atokejsr
0002B954 <AmiBlitz3.ab3@14258>    BSR.w ritetod0
0002B95A <AmiBlitz3.ab3@14259>   MOVE.l libjsr,D1
0002B95E <AmiBlitz3.ab3@14260>    BSR.w writelong
0002B962 <AmiBlitz3.ab3@14261>    BSR.w ritefromd0
0002B964 <AmiBlitz3.ab3@14262>   MOVE.l D5,D1
0002B968 <AmiBlitz3.ab3@14263> BRA.w pokemovem
0002B96A <AmiBlitz3.ab3@14265> RTS ; dead old code
0002B96E <AmiBlitz3.ab3@14268>   MOVE.w #$C317,D1     ;#wtobover
0002B974 <AmiBlitz3.ab3@14270>   TST.b typecheck
0002B978 <AmiBlitz3.ab3@14271>   BEQ 'l1
0002B97E <AmiBlitz3.ab3@14272>    TST.b notypecheck
0002B982 <AmiBlitz3.ab3@14273>    BNE 'l1
0002B988 <AmiBlitz3.ab3@14274>    TST.l lasttoken
0002B98E <AmiBlitz3.ab3@14284>   TST.b debugmode
0002B992 <AmiBlitz3.ab3@14285>    BEQ.w 'skip
0002B99A <AmiBlitz3.ab3@14286>   BTST #$7,overflowcheck      ;;*** was 7! overflow checking?
0002B99E <AmiBlitz3.ab3@14287>    BEQ.w 'skip
0002B9A4 <AmiBlitz3.ab3@14289>   TST.w cfetchmode
0002B9A8 <AmiBlitz3.ab3@14290>    BNE.w 'skip
0002B9AE <AmiBlitz3.ab3@14292>   TST.w regnum
0002B9B2 <AmiBlitz3.ab3@14293>    BEQ.w 'isok
0002B9B4 <AmiBlitz3.ab3@14294>   MOVE.w D1,-(A7)
0002B9B8 <AmiBlitz3.ab3@14295>   MOVE.w 'code1(PC),D1
0002B9BC <AmiBlitz3.ab3@14296>    BSR.w writeword
0002B9C2 <AmiBlitz3.ab3@14297>   MOVE.w regnum,D1
0002B9C6 <AmiBlitz3.ab3@14298>   OR.w 'code3(PC),D1
0002B9CA <AmiBlitz3.ab3@14299>    BSR.w writeword
0002B9CC <AmiBlitz3.ab3@14300>   MOVE.w (A7)+,D1
0002B9D0 <AmiBlitz3.ab3@14301>    BSR.w 'isok
0002B9D4 <AmiBlitz3.ab3@14302>   MOVE.w 'code2(PC),D1
0002B9D8 <AmiBlitz3.ab3@14303>  BRA.w writeword
0002B9DC <AmiBlitz3.ab3@14306>   MOVEM.l D0-D7/A0-A6,-(A7)
0002B9E0 <AmiBlitz3.ab3@14307>    BSR.w Atokejsr
0002B9E4 <AmiBlitz3.ab3@14308>   MOVEM.l (A7)+,D0-D7/A0-A6
0002B9E6 <AmiBlitz3.ab3@14311>  RTS
0002B9E8 <AmiBlitz3.ab3@14314>   MOVE.l D0,-(A7)
0002B9EA <AmiBlitz3.ab3@14317>   MOVE.l (A7)+,D0
0002B9EC <AmiBlitz3.ab3@14320>   MOVE.l D0,D0
0002B9F0 <AmiBlitz3.ab3@14325>   BSR.w convert_word_to_long
0002B9F6 <AmiBlitz3.ab3@14327>   TST.b iee
0002B9FA <AmiBlitz3.ab3@14328>   BEQ 'old
0002B9FE <AmiBlitz3.ab3@14329>   CMP.b #5,d2
0002BA02 <AmiBlitz3.ab3@14330>   BNE 'old
0002BA04 <AmiBlitz3.ab3@14331>  RTS
0002BA08 <AmiBlitz3.ab3@14335> BRA.w bytetof2
0002BA0C <AmiBlitz3.ab3@14338>   MOVE.w #$C316,D1      ; #ltobover
0002BA12 <AmiBlitz3.ab3@14340>   TST.b typecheck
0002BA16 <AmiBlitz3.ab3@14341>   BEQ 'l1
0002BA1C <AmiBlitz3.ab3@14342>   TST.b peekaddrsize
0002BA20 <AmiBlitz3.ab3@14343>   BNE 'l1
0002BA26 <AmiBlitz3.ab3@14344>   TST.b notypecheck
0002BA2A <AmiBlitz3.ab3@14345>   BNE 'l1
0002BA30 <AmiBlitz3.ab3@14346>   TST.l lasttoken
0002BA34 <AmiBlitz3.ab3@14353> BRA.w overchk
0002BA38 <AmiBlitz3.ab3@14356>   MOVE.w #$C318,D1      ; #ltowover,
0002BA3E <AmiBlitz3.ab3@14358>   TST.b typecheck
0002BA42 <AmiBlitz3.ab3@14359>   BEQ 'l1
0002BA48 <AmiBlitz3.ab3@14360>   TST.b peekaddrsize
0002BA4C <AmiBlitz3.ab3@14361>   BNE 'l1
0002BA52 <AmiBlitz3.ab3@14362>   TST.b notypecheck
0002BA56 <AmiBlitz3.ab3@14363>   BNE 'l1
0002BA5C <AmiBlitz3.ab3@14364>   TST.l lasttoken
0002BA60 <AmiBlitz3.ab3@14371> BRA.w overchk
0002BA64 <AmiBlitz3.ab3@14374>   MOVE.w #$C318,D1      ;#ltowover,
0002BA6A <AmiBlitz3.ab3@14376>   TST.b typecheck
0002BA6E <AmiBlitz3.ab3@14377>   BEQ 'l1
0002BA74 <AmiBlitz3.ab3@14378>   TST.b notypecheck
0002BA78 <AmiBlitz3.ab3@14379>   BNE 'l1
0002BA7E <AmiBlitz3.ab3@14380>   TST.l lasttoken
0002BA82 <AmiBlitz3.ab3@14387>   BSR.w overchk
0002BA86 <AmiBlitz3.ab3@14388> BRA.w convert_word_to_quick
0002BA8A <AmiBlitz3.ab3@14391> BRA.w bytetof2
0002BA8C <AmiBlitz3.ab3@14393> RTS ; dead old code
0002BA90 <AmiBlitz3.ab3@14396>   MOVE.w #$C319,D1         ; #qtobover,
0002BA96 <AmiBlitz3.ab3@14398>   TST.b typecheck
0002BA9A <AmiBlitz3.ab3@14399>   BEQ 'l1
0002BAA0 <AmiBlitz3.ab3@14400>   TST.b notypecheck
0002BAA4 <AmiBlitz3.ab3@14401>   BNE 'l1
0002BAAA <AmiBlitz3.ab3@14402>   TST.l lasttoken
0002BAAE <AmiBlitz3.ab3@14409>   BSR.w overchk
0002BAB2 <AmiBlitz3.ab3@14412>   MOVE.w #$4240,D1
0002BAB8 <AmiBlitz3.ab3@14413>   OR.w regnum,D1
0002BABC <AmiBlitz3.ab3@14414>   BSR.w writeword
0002BAC0 <AmiBlitz3.ab3@14415>   MOVE.w #$4840,D1
0002BAC6 <AmiBlitz3.ab3@14416>   OR.w regnum,D1
0002BACA <AmiBlitz3.ab3@14417> BRA.w writeword
0002BACE <AmiBlitz3.ab3@14420> BRA.w quicktob2
0002BAD2 <AmiBlitz3.ab3@14423>   BSR.w quicktob2
0002BAD6 <AmiBlitz3.ab3@14424> BRA.w convert_word_to_long
0002BAD8 <AmiBlitz3.ab3@14429>   MOVEQ #0,d0
0002BADE <AmiBlitz3.ab3@14430>   MOVE.w regnum,d0
0002BAE0 <AmiBlitz3.ab3@14431>   ASL.l #7,d0
0002BAE6 <AmiBlitz3.ab3@14432>   MOVE.l #$f2004000,d1
0002BAE8 <AmiBlitz3.ab3@14433>   OR.l d0,d1
0002BAEA <AmiBlitz3.ab3@14434>   ASL.l #1,d0
0002BAEC <AmiBlitz3.ab3@14435>   ASL.l #8,d0
0002BAEE <AmiBlitz3.ab3@14436>   OR.l d0,d1
0002BAF2 <AmiBlitz3.ab3@14437>   BSR writelong
0002BAF8 <AmiBlitz3.ab3@14438>   MOVE.w regnum,d0
0002BAFA <AmiBlitz3.ab3@14439>   ASL.l #7,d0
0002BB00 <AmiBlitz3.ab3@14440>   MOVE.l #$f23c4423,d1                                     ;fmul.s #1/65536,fpreg
0002BB02 <AmiBlitz3.ab3@14441>   OR.w d0,d1
0002BB06 <AmiBlitz3.ab3@14442>   BSR writelong
0002BB0C <AmiBlitz3.ab3@14443>   MOVE.l #$37800000,d1
0002BB10 <AmiBlitz3.ab3@14444>   BSR writelong
0002BB12 <AmiBlitz3.ab3@14445> RTS
0002BB18 <AmiBlitz3.ab3@14452>   TST.b iee
0002BB1C <AmiBlitz3.ab3@14453>   BNE qtof
0002BB20 <AmiBlitz3.ab3@14455>   MOVE.w #$D300,D1       ; #qutofl,
0002BB22 <AmiBlitz3.ab3@14458>   MOVE.w D1,-(A7)
0002BB26 <AmiBlitz3.ab3@14459>    BSR.w savereg
0002BB28 <AmiBlitz3.ab3@14460>   MOVE.l D4,D1
0002BB2C <AmiBlitz3.ab3@14461>    BSR.w pokemovem
0002BB30 <AmiBlitz3.ab3@14463>    BSR.w ritetod0
0002BB32 <AmiBlitz3.ab3@14464>   MOVE.w (A7)+,D1
0002BB36 <AmiBlitz3.ab3@14465>    BSR.w Atokejsr
0002BB3A <AmiBlitz3.ab3@14467>    BSR.w ritefromd0
0002BB3C <AmiBlitz3.ab3@14468>   MOVE.l D5,D1
0002BB40 <AmiBlitz3.ab3@14469> BRA.w pokemovem
0002BB42 <AmiBlitz3.ab3@14471> RTS ; dead old code
0002BB48 <AmiBlitz3.ab3@14475>   TST.b typecheck
0002BB4C <AmiBlitz3.ab3@14476>   BEQ 'l1
0002BB52 <AmiBlitz3.ab3@14477>   TST.b notypecheck
0002BB56 <AmiBlitz3.ab3@14478>   BNE 'l1
0002BB5C <AmiBlitz3.ab3@14479>   TST.l lasttoken
0002BB62 <AmiBlitz3.ab3@14485>   TST.b iee
0002BB66 <AmiBlitz3.ab3@14486>   BNE ftol
0002BB6A <AmiBlitz3.ab3@14488>   MOVE.w #$C31A,D1       ; #ftobover
0002BB6E <AmiBlitz3.ab3@14489>   BSR.w overchk
0002BB72 <AmiBlitz3.ab3@14491>   BSR.w floattolong2
0002BB76 <AmiBlitz3.ab3@14492> BRA.w convert_long_to_byte
0002BB78 <AmiBlitz3.ab3@14494> RTS ; dead old code
0002BB7E <AmiBlitz3.ab3@14498>   TST.b typecheck
0002BB82 <AmiBlitz3.ab3@14499>   BEQ 'l1
0002BB88 <AmiBlitz3.ab3@14500>   TST.b notypecheck
0002BB8C <AmiBlitz3.ab3@14501>   BNE 'l1
0002BB92 <AmiBlitz3.ab3@14502>   TST.l lasttoken
0002BB98 <AmiBlitz3.ab3@14508>   TST.b iee
0002BB9C <AmiBlitz3.ab3@14509>   BNE ftol
0002BBA0 <AmiBlitz3.ab3@14511>   MOVE.w #$C31B,D1         ; #ftowover
0002BBA4 <AmiBlitz3.ab3@14512>   BSR.w overchk
0002BBA8 <AmiBlitz3.ab3@14514>   BSR.w floattolong2
0002BBAC <AmiBlitz3.ab3@14515> BRA.w convert_long_to_word
0002BBAE <AmiBlitz3.ab3@14517> RTS  ; dead old code
0002BBB4 <AmiBlitz3.ab3@14521>   TST.b iee
0002BBB8 <AmiBlitz3.ab3@14522>   BNE ftol
0002BBBC <AmiBlitz3.ab3@14524>   MOVE.w #$C31C,D1     ; #ftolover,
0002BBC0 <AmiBlitz3.ab3@14525>   BSR.w overchk
0002BBC4 <AmiBlitz3.ab3@14528>   MOVE.w #$FFE2,D1     ; #-30,
0002BBC8 <AmiBlitz3.ab3@14529> BRA.w fdo2
0002BBCA <AmiBlitz3.ab3@14533>   MOVE.l d0,-(a7)
0002BBCC <AmiBlitz3.ab3@14534>   MOVEQ #0,d0
0002BBD2 <AmiBlitz3.ab3@14535>   MOVE.w regnum,d0
0002BBD4 <AmiBlitz3.ab3@14536>   ASL.l #7,d0
0002BBDA <AmiBlitz3.ab3@14537>   MOVE.l #$f2006000,d1
0002BBDC <AmiBlitz3.ab3@14538>   OR.l d0,d1
0002BBDE <AmiBlitz3.ab3@14539>   ASL.l #1,d0
0002BBE0 <AmiBlitz3.ab3@14540>   ASL.l #8,d0
0002BBE2 <AmiBlitz3.ab3@14541>   OR.l d0,d1
0002BBE4 <AmiBlitz3.ab3@14542>   MOVE.l (a7)+,d0
0002BBE8 <AmiBlitz3.ab3@14543> BRA writelong
0002BBEA <AmiBlitz3.ab3@14547>   MOVE.l d0,-(a7)
0002BBEC <AmiBlitz3.ab3@14548>   MOVEQ #0,d0
0002BBF2 <AmiBlitz3.ab3@14549>   MOVE.l #$f23c4023,d1
0002BBF8 <AmiBlitz3.ab3@14550>   MOVE.w regnum,d0
0002BBFA <AmiBlitz3.ab3@14551>   ASL.l #7,d0
0002BBFC <AmiBlitz3.ab3@14552>   OR.l d0,d1
0002BC00 <AmiBlitz3.ab3@14553>   BSR writelong
0002BC06 <AmiBlitz3.ab3@14554>   MOVE.l #$00010000,d1
0002BC0A <AmiBlitz3.ab3@14555>   BSR writelong
0002BC10 <AmiBlitz3.ab3@14556>   MOVE.w regnum,d0
0002BC12 <AmiBlitz3.ab3@14557>   ASL.l #7,d0
0002BC18 <AmiBlitz3.ab3@14558>   MOVE.l #$f2006000,d1
0002BC1A <AmiBlitz3.ab3@14559>   OR.l d0,d1
0002BC1C <AmiBlitz3.ab3@14560>   ASL.l #1,d0
0002BC1E <AmiBlitz3.ab3@14561>   ASL.l #8,d0
0002BC20 <AmiBlitz3.ab3@14562>   OR.l d0,d1
0002BC24 <AmiBlitz3.ab3@14563>   BSR writelong
0002BC26 <AmiBlitz3.ab3@14564>   MOVE.l (a7)+,d0
0002BC28 <AmiBlitz3.ab3@14565> RTS
0002BC2A <AmiBlitz3.ab3@14568> RTS         ; dead old code
0002BC30 <AmiBlitz3.ab3@14575>   TST.b iee
0002BC34 <AmiBlitz3.ab3@14576>   BNE ftoq
0002BC38 <AmiBlitz3.ab3@14578>   MOVE.w #$C31B,D1    ; #ftowover,
0002BC3C <AmiBlitz3.ab3@14579>   BSR.w overchk
0002BC40 <AmiBlitz3.ab3@14581>   MOVE.w #$D301,D1    ; #fltoqu,
0002BC44 <AmiBlitz3.ab3@14582> BRA.w qtof2
0002BC4A <AmiBlitz3.ab3@14587>    TST.b blitzparloop
0002BC4E <AmiBlitz3.ab3@14588>    BNE 'l1
0002BC54 <AmiBlitz3.ab3@14589>    TST.b funcparloop
0002BC58 <AmiBlitz3.ab3@14590>    BNE 'l1
0002BC5C <AmiBlitz3.ab3@14591>    BRA error_convert_types
0002BC64 <AmiBlitz3.ab3@14594>   CMP.b #2,optistring
0002BC68 <AmiBlitz3.ab3@14595>   BEQ JLrts
0002BC6E <AmiBlitz3.ab3@14597>   MOVE.w stol,D1
0002BC72 <AmiBlitz3.ab3@14598>   BSR.w writeword
0002BC7A <AmiBlitz3.ab3@14600>   CMPI.w #$2,sbgot
0002BC7E <AmiBlitz3.ab3@14602>   BCS.w sbtolong                     ; was BRA
0002BC82 <AmiBlitz3.ab3@14604>   MOVE.w ceos(PC),D1                 ; begin copy of sbtolong
0002BC86 <AmiBlitz3.ab3@14605>   BSR.w writeword
0002BC8C <AmiBlitz3.ab3@14607>   MOVE.w regnum,D1
0002BC8E <AmiBlitz3.ab3@14608>   LSL.w #8,D1
0002BC90 <AmiBlitz3.ab3@14609>   LSL.w #1,D1
0002BC98 <AmiBlitz3.ab3@14610>   CMPI.w #$2,sbgot
0002BC9C <AmiBlitz3.ab3@14611>   BCS.w sbtolong_skip2
0002BCA2 <AmiBlitz3.ab3@14612>   MOVE.w a2offset,D3
0002BCA8 <AmiBlitz3.ab3@14613>   SUB.w thisstuse,D3
0002BCAC <AmiBlitz3.ab3@14614>   CMP.w #$6,D3
0002BCB0 <AmiBlitz3.ab3@14615>   BNE.w 'lenonly
0002BCB6 <AmiBlitz3.ab3@14616>   OR.w movestst2,D1
0002BCBA <AmiBlitz3.ab3@14617>   BSR.w writeword
0002BCC0 <AmiBlitz3.ab3@14618>   LEA movestst2+2,A0
0002BCC6 <AmiBlitz3.ab3@14619>   LEA movestst2f,A1
0002BCCA <AmiBlitz3.ab3@14620>  BRA.w pokecode2
0002BCD0 <AmiBlitz3.ab3@14623>   OR.w movea7dn,D1
0002BCD4 <AmiBlitz3.ab3@14624>   BSR.w writeword
0002BCDA <AmiBlitz3.ab3@14625>   MOVE.l #0,D1
0002BCDE <AmiBlitz3.ab3@14626> BRA.w writeword                      ; end of copy
0002BCE4 <AmiBlitz3.ab3@14633>   ADDQ.w #1,fuckpos
0002BCE8 <AmiBlitz3.ab3@14634>   BSR.w writeconvertcode
0002BCEE <AmiBlitz3.ab3@14635>   SUBQ.w #1,fuckpos
0002BCF0 <AmiBlitz3.ab3@14639> RTS
0002BCF2 <AmiBlitz3.ab3@14643>   MOVE.w D3,D1
0002BCF6 <AmiBlitz3.ab3@14645>   CMP.w #7,d1
0002BCFA <AmiBlitz3.ab3@14646>   BLE 'ok
0002BD00 <AmiBlitz3.ab3@14647>   JMP errorinternalconvert
0002BD02 <AmiBlitz3.ab3@14651>   SUBQ.w #1,D1
0002BD06 <AmiBlitz3.ab3@14652>   MULU #$7,D1
0002BD08 <AmiBlitz3.ab3@14653>   ADD.w D2,D1
0002BD0A <AmiBlitz3.ab3@14654>   SUBQ.w #1,D1
0002BD0C <AmiBlitz3.ab3@14655>   LSL.w #2,D1
0002BD12 <AmiBlitz3.ab3@14656>   LEA convtable,A0
0002BD16 <AmiBlitz3.ab3@14657>   MOVE.l $0(A0,D1.W),D1
0002BD1A <AmiBlitz3.ab3@14658>   BEQ.w 'skip
0002BD1C <AmiBlitz3.ab3@14659>     MOVEA.l D1,A0
0002BD20 <AmiBlitz3.ab3@14661>     CMP.b #$ff,d3
0002BD24 <AmiBlitz3.ab3@14662>     BEQ 'skip
0002BD26 <AmiBlitz3.ab3@14664>  JMP (A0)
0002BD28 <AmiBlitz3.ab3@14667> RTS
0002BD2C <AmiBlitz3.ab3@14670> usedfrom:  Ds.l 1
0002BD30 <AmiBlitz3.ab3@14677>   CMP.w #"\",D0
0002BD34 <AmiBlitz3.ab3@14678>   BNE.w 'skip0
0002BD38 <AmiBlitz3.ab3@14680>     CMP.b #"\",(a5)
0002BD3C <AmiBlitz3.ab3@14681>     BNE 'first
0002BD42 <AmiBlitz3.ab3@14682>       MOVE.l A5,usedfrom
0002BD48 <AmiBlitz3.ab3@14683>       LEA path2,A5
0002BD4C <AmiBlitz3.ab3@14684>  BRA 'g1
0002BD4E <AmiBlitz3.ab3@14688>     SUBQ.w #1,A5
0002BD54 <AmiBlitz3.ab3@14689>   MOVE.l A5,usedfrom
0002BD5A <AmiBlitz3.ab3@14690>   LEA usedpath,A5                                          ;read path
0002BD5E <AmiBlitz3.ab3@14695>   BSR.w get1bytemain
0002BD64 <AmiBlitz3.ab3@14698>   CLR.w flagmask
0002BD68 <AmiBlitz3.ab3@14699>   CMP.w #$2A,D0             ;'*'
0002BD6C <AmiBlitz3.ab3@14700>    BNE.w 'skip
0002BD74 <AmiBlitz3.ab3@14701>   MOVE.w #$0001,flagmask
0002BD78 <AmiBlitz3.ab3@14704>    BSR.w getparameter2
0002BD7C <AmiBlitz3.ab3@14707>    BEQ.w syntaxerr
0002BD80 <AmiBlitz3.ab3@14708>   CMP.w #$28,D0             ;'('
0002BD84 <AmiBlitz3.ab3@14709>    BEQ.w 'setmask
0002BD88 <AmiBlitz3.ab3@14710>   CMP.w #$2E,D0             ;'.'
0002BD8C <AmiBlitz3.ab3@14711>    BEQ.w 'morem
0002BD90 <AmiBlitz3.ab3@14712>   CMP.w #$24,D0             ;'$'
0002BD94 <AmiBlitz3.ab3@14713>    BNE.w 'done
0002BD9C <AmiBlitz3.ab3@14714>   ORI.w #$8,flagmask
0002BDA0 <AmiBlitz3.ab3@14715>    BSR.w storeloc
0002BDA4 <AmiBlitz3.ab3@14716>    BSR.w get1bytemain
0002BDA8 <AmiBlitz3.ab3@14717>  BRA.w 'morez
0002BDAC <AmiBlitz3.ab3@14721>   BSR.w storeloc
0002BDAE <AmiBlitz3.ab3@14722>   MOVE.w D2,-(A7)
0002BDB4 <AmiBlitz3.ab3@14723>   LEA namebuff2,A1
0002BDB8 <AmiBlitz3.ab3@14724>    BSR.w makename3
0002BDBC <AmiBlitz3.ab3@14725>    BEQ.w syntaxerr
0002BDBE <AmiBlitz3.ab3@14726>   MOVE.w (A7)+,D2
0002BDC0 <AmiBlitz3.ab3@14729>    MOVE.w D0,D1
0002BDC4 <AmiBlitz3.ab3@14730>    BSR.w resloc
0002BDC8 <AmiBlitz3.ab3@14731>    CMP.w #$28,D1             ;'('
0002BDCC <AmiBlitz3.ab3@14732>    BNE.w 'done
0002BDD4 <AmiBlitz3.ab3@14735>   ORI.w #$2,flagmask
0002BDD6 <AmiBlitz3.ab3@14738>  RTS
0002BDDA <AmiBlitz3.ab3@14741>   CMP.w #$40,D0              ;'@'
0002BDDE <AmiBlitz3.ab3@14742>    BNE.w 'skip2
0002BDE6 <AmiBlitz3.ab3@14743>   MOVE.w #$0005,flagmask
0002BDEA <AmiBlitz3.ab3@14744>  BRA.w 'more2
0002BDEE <AmiBlitz3.ab3@14747>   BSR.w makename2
0002BDF2 <AmiBlitz3.ab3@14748> BRA.w 'more
0002BDF6 <AmiBlitz3.ab3@14752>   MOVE.w #$FED3,D1          ; #65235
0002BDFA <AmiBlitz3.ab3@14753>    BSR.w uselib
0002BE00 <AmiBlitz3.ab3@14754>   LEA pusha3,A0
0002BE06 <AmiBlitz3.ab3@14755>   LEA pusha3f,A1
0002BE0A <AmiBlitz3.ab3@14756> BRA.w pokecode
0002BE0E <AmiBlitz3.ab3@14760>   MOVE.w #$FED3,D1          ; #65235
0002BE12 <AmiBlitz3.ab3@14761>    BSR.w uselib
0002BE18 <AmiBlitz3.ab3@14762>   LEA pulla3,A0
0002BE1E <AmiBlitz3.ab3@14763>   LEA pulla3f,A1
0002BE22 <AmiBlitz3.ab3@14764> BRA.w pokecode
0002BE24 <AmiBlitz3.ab3@14768> ceos:   Dc.b $42,$1B                                       ;CLR.B   (A3)+             ;*!
0002BE2C <AmiBlitz3.ab3@14774>     CMP.b #2,optistring
0002BE30 <AmiBlitz3.ab3@14775>    BEQ 'l10
0002BE34 <AmiBlitz3.ab3@14777>    MOVE.w ceos(PC),D1
0002BE38 <AmiBlitz3.ab3@14778>    BSR.w writeword                                         ;clr.b (a3)
0002BE3E <AmiBlitz3.ab3@14783>   MOVE.w regnum,D1
0002BE40 <AmiBlitz3.ab3@14784>   LSL.w #8,D1
0002BE42 <AmiBlitz3.ab3@14785>   LSL.w #1,D1
0002BE4A <AmiBlitz3.ab3@14786>   CMPI.w #$2,sbgot
0002BE4E <AmiBlitz3.ab3@14787>    BCS.w sbtolong_skip2
0002BE54 <AmiBlitz3.ab3@14788>   MOVE.w a2offset,D3                                       ;stackuse,d3 org source
0002BE5A <AmiBlitz3.ab3@14789>   SUB.w thisstuse,D3
0002BE5E <AmiBlitz3.ab3@14790>   CMP.w #$6,D3
0002BE62 <AmiBlitz3.ab3@14791>    BNE.w 'lenonly
0002BE68 <AmiBlitz3.ab3@14792>   OR.w movestst2,D1
0002BE6C <AmiBlitz3.ab3@14793>    BSR.w writeword
0002BE72 <AmiBlitz3.ab3@14794>   LEA movestst2+2,A0
0002BE78 <AmiBlitz3.ab3@14795>   LEA movestst2f,A1
0002BE7C <AmiBlitz3.ab3@14796>  BRA.w pokecode2
0002BE82 <AmiBlitz3.ab3@14799>    OR.w movea7dn,D1
0002BE86 <AmiBlitz3.ab3@14800>    BSR.w writeword
0002BE8C <AmiBlitz3.ab3@14801>   MOVE.l movea7dn+2,D1
0002BE90 <AmiBlitz3.ab3@14814>   BSR writelong
0002BE98 <AmiBlitz3.ab3@14817>    CMP.w #6,regnum
0002BE9C <AmiBlitz3.ab3@14818>    BEQ 'l1
0002BEA2 <AmiBlitz3.ab3@14819>    TST.w stackpar
0002BEA6 <AmiBlitz3.ab3@14820>    BNE 'l1
0002BEAC <AmiBlitz3.ab3@14821>    TST.b funcparloop
0002BEB0 <AmiBlitz3.ab3@14822>    BEQ 'l1
0002BEB6 <AmiBlitz3.ab3@14823>    MOVE.l #$48780000,d1
0002BEBA <AmiBlitz3.ab3@14824>    BSR writelong
0002BEBC <AmiBlitz3.ab3@14828>  RTS
0002BEBE <AmiBlitz3.ab3@14834>      MOVE.l d1,-(a7)
0002BEC6 <AmiBlitz3.ab3@14835>      CMP.w #6,regnum
0002BECA <AmiBlitz3.ab3@14836>      BEQ 'l1
0002BED0 <AmiBlitz3.ab3@14837>      TST.w stackpar
0002BED4 <AmiBlitz3.ab3@14838>      BNE 'l1
0002BEDA <AmiBlitz3.ab3@14839>      TST.b funcparloop
0002BEDE <AmiBlitz3.ab3@14840>      BEQ 'l1
0002BEE4 <AmiBlitz3.ab3@14841>      MOVE.l #$48780000,d1
0002BEE8 <AmiBlitz3.ab3@14842>      BSR writelong
0002BEEA <AmiBlitz3.ab3@14845>      MOVE.l (a7)+,d1
0002BEF0 <AmiBlitz3.ab3@14848>    OR.w movestdn,D1
0002BEF4 <AmiBlitz3.ab3@14849>    BSR.w writeword
0002BEF8 <AmiBlitz3.ab3@14850>   MOVE.w #$FED3,D1        ;#65235
0002BEFC <AmiBlitz3.ab3@14851>    BSR.w uselib
0002BF00 <AmiBlitz3.ab3@14852>   MOVE.w $A(A1),D1
0002BF04 <AmiBlitz3.ab3@14853> BRA.w writeword
0002BF06 <AmiBlitz3.ab3@14856> unknown:    Ds.w 1
0002BF0C <AmiBlitz3.ab3@14859> somecode:   Dc.b $0C,$80,$00,$01,$00,$00                   ;CMPI.L  #$00010000,D0
0002BF10 <AmiBlitz3.ab3@14860> somecode2:  Dc.b $65,$00,$00,$08                           ;BCS.W   codeisok
0002BF16 <AmiBlitz3.ab3@14861>             Dc.b $4E,$B9,$00,$00,$00,$00                   ;JSR $00000000
0002BF1C <AmiBlitz3.ab3@14867>   TST.b debugmode
0002BF20 <AmiBlitz3.ab3@14868>   BEQ.w sharreval
0002BF24 <AmiBlitz3.ab3@14869>  BSR.w arreval
0002BF28 <AmiBlitz3.ab3@14872>   MOVE.w somecode(PC),D1
0002BF2E <AmiBlitz3.ab3@14873>   OR.w regnum,D1
0002BF32 <AmiBlitz3.ab3@14874>    BSR.w writeword
0002BF34 <AmiBlitz3.ab3@14875>   MOVEQ.l #$01,D1
0002BF36 <AmiBlitz3.ab3@14876>   SWAP D1
0002BF3A <AmiBlitz3.ab3@14877>    BSR.w writelong
0002BF3E <AmiBlitz3.ab3@14878>   MOVE.l somecode2(PC),D1
0002BF42 <AmiBlitz3.ab3@14879>    BSR.w writelong
0002BF46 <AmiBlitz3.ab3@14880>   MOVE.w #$C309,D1     ; was #arrerr,
0002BF4A <AmiBlitz3.ab3@14881> BRA.w Atokejsr
0002BF4C <AmiBlitz3.ab3@14885>   MOVEQ.l #$02,D2
0002BF4E <AmiBlitz3.ab3@14886>   MOVEQ.l #$00,D1
0002BF50 <AmiBlitz3.ab3@14887>   MOVEQ.l #$00,D3
0002BF54 <AmiBlitz3.ab3@14888> BRA.w maineval2
0002BF56 <AmiBlitz3.ab3@14892>   MOVEQ.l #$03,D2           ;getlong
0002BF58 <AmiBlitz3.ab3@14893>   MOVEQ.l #$00,D1           ;no push
0002BF5A <AmiBlitz3.ab3@14894>   MOVEQ.l #$00,D3           ;and convert
0002BF60 <AmiBlitz3.ab3@14895>   MOVE.b notypecheck,-(a7)
0002BF68 <AmiBlitz3.ab3@14896>   MOVE.b #1,notypecheck                                    ;typecheck need switch off for array offset calculation code
0002BF6E <AmiBlitz3.ab3@14897>   JSR maineval2             ;2!* ;was bra
0002BF74 <AmiBlitz3.ab3@14899>   MOVE.b (a7)+,notypecheck                                 ;now its switch to old state
0002BF76 <AmiBlitz3.ab3@14900> RTS
0002BF80 <AmiBlitz3.ab3@14906>   MOVE.w oldqflag,instringon
0002BF86 <AmiBlitz3.ab3@14907>   MOVEA.l lastsourcepos,A5
0002BF88 <AmiBlitz3.ab3@14909>   MOVEQ.l #-$01,D1
0002BF8A <AmiBlitz3.ab3@14910>   MOVEQ.l #-$01,D3
0002BF8E <AmiBlitz3.ab3@14911> BRA.w peval
0002BF98 <AmiBlitz3.ab3@14917>   MOVE.w oldqflag,instringon
0002BF9E <AmiBlitz3.ab3@14918>   MOVEA.l lastsourcepos,A5
0002BFA0 <AmiBlitz3.ab3@14921>   MOVEQ.l #-$01,D1
0002BFA2 <AmiBlitz3.ab3@14922>   MOVEQ.l #$00,D3
0002BFA8 <AmiBlitz3.ab3@14924>   MOVE.l leftsidetype,-(a7)
0002BFAE <AmiBlitz3.ab3@14925>   MOVE.l rightsidetype,-(a7)
0002BFB4 <AmiBlitz3.ab3@14926>   MOVE.w leftsideflagmask,-(a7)
0002BFBA <AmiBlitz3.ab3@14927>   MOVE.w rightsideflagmask,-(a7)
0002BFC0 <AmiBlitz3.ab3@14928>   CLR.l leftsidetype
0002BFC6 <AmiBlitz3.ab3@14929>   CLR.l rightsidetype
0002BFCC <AmiBlitz3.ab3@14930>   CLR.w leftsideflagmask
0002BFD2 <AmiBlitz3.ab3@14931>   CLR.w rightsideflagmask
0002BFD8 <AmiBlitz3.ab3@14933>   JSR maineval                    ; was bra
0002BFDE <AmiBlitz3.ab3@14935>   MOVE.w (a7)+,rightsideflagmask
0002BFE4 <AmiBlitz3.ab3@14936>   MOVE.w (a7)+,leftsideflagmask
0002BFEA <AmiBlitz3.ab3@14937>   MOVE.l (a7)+,rightsidetype
0002BFF0 <AmiBlitz3.ab3@14938>   MOVE.l (a7)+,leftsidetype
0002BFF2 <AmiBlitz3.ab3@14939> RTS
0002BFFC <AmiBlitz3.ab3@14945>   MOVE.w oldqflag,instringon
0002C002 <AmiBlitz3.ab3@14946>   MOVEA.l lastsourcepos,A5
0002C004 <AmiBlitz3.ab3@14949>   MOVEQ.l #$00,D1
0002C006 <AmiBlitz3.ab3@14950>   MOVEQ.l #-$01,D3
0002C00A <AmiBlitz3.ab3@14951> BRA.w maineval
0002C00C <AmiBlitz3.ab3@14955>   MOVEQ.l #$01,D1
0002C00E <AmiBlitz3.ab3@14956>   MOVEQ.l #-$01,D3
0002C012 <AmiBlitz3.ab3@14957> BRA.w maineval
0002C01C <AmiBlitz3.ab3@14963>   MOVE.w oldqflag,instringon
0002C022 <AmiBlitz3.ab3@14964>   MOVEA.l lastsourcepos,A5
0002C024 <AmiBlitz3.ab3@14968>   MOVEQ.l #$00,D1      ;no push
0002C026 <AmiBlitz3.ab3@14969>   MOVEQ.l #$00,D3
0002C02E <AmiBlitz3.ab3@14990>    CMPI.w #$6,regnum
0002C032 <AmiBlitz3.ab3@14991>    BCS.w maineval2
0002C034 <AmiBlitz3.ab3@14993>    MOVEQ #0,d1
0002C03A <AmiBlitz3.ab3@14994>    MOVE.l destpointer,a4
0002C040 <AmiBlitz3.ab3@14996>    CMPA.l destbufferend,A4
0002C044 <AmiBlitz3.ab3@14997>    BCC.w 'l2
0002C04A <AmiBlitz3.ab3@14999>    CMP.w #$2f0a,-2(a4)                                    ;bug is a move.l a2,-(a7) before (show temp calc)?
0002C04E <AmiBlitz3.ab3@15001>    BNE 'l2
0002C052 <AmiBlitz3.ab3@15005> BRA 'l1
0002C054 <AmiBlitz3.ab3@15009>   MOVEQ.l #-$01,D1                                         ;do stackpar write
0002C05C <AmiBlitz3.ab3@15012>   MOVE.w #$0006,regnum                                     ;write a func par To stack
0002C062 <AmiBlitz3.ab3@15018>   MOVE.w thisstuse,-(A7)
0002C06C <AmiBlitz3.ab3@15019>   MOVE.w a2offset,thisstuse
0002C072 <AmiBlitz3.ab3@15021>   MOVE.w stackpar,-(A7)
0002C078 <AmiBlitz3.ab3@15022>   MOVE.w D1,stackpar
0002C07E <AmiBlitz3.ab3@15023>   MOVE.w sbgot,-(A7)
0002C084 <AmiBlitz3.ab3@15024>   CLR.w sbgot                ;not pushed yet
0002C088 <AmiBlitz3.ab3@15025>   MOVE.w unknown(PC),-(A7)
0002C08E <AmiBlitz3.ab3@15026>   MOVE.w D3,unknown
0002C090 <AmiBlitz3.ab3@15028>   MOVE.w D2,-(a7)
0002C096 <AmiBlitz3.ab3@15030>   MOVE.w d2,mode
0002C09A <AmiBlitz3.ab3@15032>    BSR.w eval3
0002C09C <AmiBlitz3.ab3@15033>   MOVE.w (a7)+,d3            ;type asked for
0002C0A0 <AmiBlitz3.ab3@15034>    BEQ.w 'noconv
0002C0A4 <AmiBlitz3.ab3@15035>   MOVE.w unknown(PC),D1
0002C0A8 <AmiBlitz3.ab3@15036>    BNE.w 'noconv
0002C0AA <AmiBlitz3.ab3@15037>   EXG.l D2,D3
0002C0AC <AmiBlitz3.ab3@15039>    MOVE.l a2,-(a7)
0002C0B2 <AmiBlitz3.ab3@15040>    TST.b curtemplabel
0002C0B6 <AmiBlitz3.ab3@15041>    BEQ 'l10
0002C0BC <AmiBlitz3.ab3@15042>    MOVE.l asmbuff,a2
0002C0C2 <AmiBlitz3.ab3@15043>    CMP.w #$c,$8(a2)
0002C0C6 <AmiBlitz3.ab3@15044>    BEQ 'l20
0002C0CC <AmiBlitz3.ab3@15045>    CMP.w #$d,$8(a2)
0002C0D0 <AmiBlitz3.ab3@15046>    BEQ 'l20
0002C0D2 <AmiBlitz3.ab3@15049>   CMP.w d2,d3
0002C0D6 <AmiBlitz3.ab3@15050>   BEQ 'l20
0002C0DA <AmiBlitz3.ab3@15051>   BSR.w writeconvertcode
0002C0E0 <AmiBlitz3.ab3@15052>   CLR.b doimmediate
0002C0E2 <AmiBlitz3.ab3@15055>   MOVE.l (a7)+,a2
0002C0E8 <AmiBlitz3.ab3@15059>   MOVE.w (A7)+,unknown
0002C0EE <AmiBlitz3.ab3@15060>   MOVE.w stackpar,D1
0002C0F2 <AmiBlitz3.ab3@15061>    BEQ.w 'skipme
0002C0F6 <AmiBlitz3.ab3@15062>    BMI.w 'skipme
0002C0FC <AmiBlitz3.ab3@15066>   MOVE.w regnum,D1
0002C0FE <AmiBlitz3.ab3@15067>   LSL.w #8,D1
0002C100 <AmiBlitz3.ab3@15068>   LSL.w #1,D1
0002C104 <AmiBlitz3.ab3@15069>   CMP.w #$7,D2
0002C108 <AmiBlitz3.ab3@15070>    BNE.w 'hi1
0002C110 <AmiBlitz3.ab3@15072>    CMP.b #2,optistring
0002C114 <AmiBlitz3.ab3@15073>    BEQ 'hi1a
0002C116 <AmiBlitz3.ab3@15075>   MOVE.w D1,-(A7)
0002C11C <AmiBlitz3.ab3@15076>   OR.w getstlen,D1
0002C120 <AmiBlitz3.ab3@15077>    BSR.w writeword
0002C122 <AmiBlitz3.ab3@15078>   MOVE.w (A7)+,D1
0002C128 <AmiBlitz3.ab3@15081>   ADDQ.w #2,a2offset                                        ;lib mode to stack
0002C12C <AmiBlitz3.ab3@15086>   MOVE.w #$3f3c,d1
0002C130 <AmiBlitz3.ab3@15088>    BSR.w writeword
0002C132 <AmiBlitz3.ab3@15093>   MOVE.w d2,d1
0002C138 <AmiBlitz3.ab3@15094>   MOVE.w d1,libmode
0002C13C <AmiBlitz3.ab3@15096>    BSR.w writeword
0002C140 <AmiBlitz3.ab3@15098>   CMP.w #$7,D2
0002C144 <AmiBlitz3.ab3@15099>    BNE.w 'skipme
0002C14A <AmiBlitz3.ab3@15100>   MOVE.w putstlen,D1
0002C150 <AmiBlitz3.ab3@15101>   OR.w regnum,D1
0002C154 <AmiBlitz3.ab3@15102>    BSR.w writeword
0002C158 <AmiBlitz3.ab3@15105>    CMP.w #$7,D2
0002C15C <AmiBlitz3.ab3@15106>    BNE.w 'notst
0002C164 <AmiBlitz3.ab3@15119>    CMP.b #2,optistring
0002C168 <AmiBlitz3.ab3@15120>    BEQ 'skipme_l10
0002C16E <AmiBlitz3.ab3@15122>    ADDQ.w #4,a2offset     ;a length on da stack.....
0002C172 <AmiBlitz3.ab3@15123>    BSR.w sbtolong
0002C176 <AmiBlitz3.ab3@15124>  BRA.w 'notst2
0002C17E <AmiBlitz3.ab3@15129>     CMP.w #6,regnum
0002C182 <AmiBlitz3.ab3@15130>     BEQ 'skipme_l10_l1
0002C188 <AmiBlitz3.ab3@15131>     TST.b funcparloop
0002C18C <AmiBlitz3.ab3@15132>     BEQ 'skipme_l10_l1
0002C192 <AmiBlitz3.ab3@15133>     MOVE.l #$48780000,d1
0002C196 <AmiBlitz3.ab3@15134>     BSR writelong
0002C19A <AmiBlitz3.ab3@15138>  BRA.w 'notst2
0002C1A0 <AmiBlitz3.ab3@15141>   ADDQ.w #2,a2offset
0002C1A4 <AmiBlitz3.ab3@15142>  BRA 'skipme
0002C1AC <AmiBlitz3.ab3@15146>   CMPI.w #$2,sbgot
0002C1B0 <AmiBlitz3.ab3@15147>    BCS.w 'notst2                                         ;correct stack
0002C1B4 <AmiBlitz3.ab3@15148>   MOVE.w ststfix(PC),D1
0002C1B8 <AmiBlitz3.ab3@15149>    BSR.w writeword
0002C1BE <AmiBlitz3.ab3@15152>   MOVE.w (A7)+,sbgot
0002C1C4 <AmiBlitz3.ab3@15154>   MOVE.w stackpar,D1
0002C1C8 <AmiBlitz3.ab3@15155>    BPL.w 'skip
0002C1CC <AmiBlitz3.ab3@15157>    CMP.b #7,d2
0002C1D0 <AmiBlitz3.ab3@15158>    BEQ 'notst2_l1
0002C1D6 <AmiBlitz3.ab3@15159>   TST.b funcparloop
0002C1DA <AmiBlitz3.ab3@15160>   BEQ 'notst2_l1
0002C1DE <AmiBlitz3.ab3@15161>   CMP.b #5,d2
0002C1E2 <AmiBlitz3.ab3@15162>   BNE 'notst2_skip
0002C1E8 <AmiBlitz3.ab3@15163>   TST.b fpu
0002C1EC <AmiBlitz3.ab3@15164>   BEQ 'notst2_skip
0002C1F2 <AmiBlitz3.ab3@15165>   MOVE.l #$f2066700,d1                                     ;fmove.s fp6,d6
0002C1F8 <AmiBlitz3.ab3@15166>   JSR writelong
0002C1FC <AmiBlitz3.ab3@15169>   MOVE.w #$c4ff,d1                                         ;savetemp+regnum
0002C202 <AmiBlitz3.ab3@15170>   ADD.w parnum,d1
0002C208 <AmiBlitz3.ab3@15171>   JSR Atokejsr
0002C20E <AmiBlitz3.ab3@15172>    TST.w dontwrite_nomemleft
0002C212 <AmiBlitz3.ab3@15173>    BNE 'notst2_l1
0002C218 <AmiBlitz3.ab3@15174>    MOVE.l data1start,d1
0002C21E <AmiBlitz3.ab3@15175>    MOVE.l destpointer,a4
0002C222 <AmiBlitz3.ab3@15176>    ADD.l d1,-4(a4)
0002C228 <AmiBlitz3.ab3@15177>    MOVE.l destpointer,d1
0002C22A <AmiBlitz3.ab3@15178>    SUBQ.l #4,d1
0002C230 <AmiBlitz3.ab3@15179>    SUB.l destbufferstart,d1
0002C232 <AmiBlitz3.ab3@15180>    MOVE.l d2,-(a7)
0002C234 <AmiBlitz3.ab3@15181>    MOVE.l d1,d2
0002C23A <AmiBlitz3.ab3@15182>    JSR addhunkoffset
0002C23C <AmiBlitz3.ab3@15183>    MOVE.l (a7)+,d2
0002C240 <AmiBlitz3.ab3@15184>  BRA 'skip
0002C246 <AmiBlitz3.ab3@15188>   ADDQ.w #2,a2offset
0002C24C <AmiBlitz3.ab3@15189>   MOVE.w pushd0wd,D1
0002C250 <AmiBlitz3.ab3@15190>   CMP.w #$3,D2                                             ;write parameter to stack
0002C254 <AmiBlitz3.ab3@15191>    BCS.w 'ok
0002C25A <AmiBlitz3.ab3@15192>   ADDQ.w #2,a2offset
0002C260 <AmiBlitz3.ab3@15194>   TST.b fpu
0002C264 <AmiBlitz3.ab3@15195>   BEQ 'notst2_nofpu
0002C268 <AmiBlitz3.ab3@15196>   CMP.w #5,d2
0002C26C <AmiBlitz3.ab3@15197>   BNE 'notst2_nofpu
0002C26E <AmiBlitz3.ab3@15198>   MOVEQ #0,d1
0002C274 <AmiBlitz3.ab3@15199>   MOVE.w regnum,d1
0002C276 <AmiBlitz3.ab3@15200>   ASL.l #7,d1
0002C27C <AmiBlitz3.ab3@15201>   OR.l #$f2276400,d1
0002C280 <AmiBlitz3.ab3@15202>   BSR writelong
0002C284 <AmiBlitz3.ab3@15203>  BRA 'skip
0002C28A <AmiBlitz3.ab3@15207>   MOVE.w pushd0l,D1
0002C290 <AmiBlitz3.ab3@15210>    OR.w regnum,D1
0002C294 <AmiBlitz3.ab3@15211>    BSR.w writeword                                         ;nat
0002C29A <AmiBlitz3.ab3@15214>   MOVE.w (A7)+,stackpar
0002C2A0 <AmiBlitz3.ab3@15215>   MOVE.w (A7)+,thisstuse
0002C2A2 <AmiBlitz3.ab3@15216> RTS
0002C2A4 <AmiBlitz3.ab3@15219> thisstuse: Ds.w 1
0002C2A6 <AmiBlitz3.ab3@15222> ststfix:   Dc.b $58,$4F                                    ;ADDQ.W  #4,A7
0002C2A8 <AmiBlitz3.ab3@15223> pushut:    Dc.b $3F,$00                                    ;MOVE.W  D0,-(A7)
0002C2AC <AmiBlitz3.ab3@15228>   BSR.w eval4
0002C2B6 <AmiBlitz3.ab3@15229>   SUBI.l #$12,forthsp
0002C2B8 <AmiBlitz3.ab3@15230> RTS
0002C2BA <AmiBlitz3.ab3@15234>   MOVEQ.l #$01,D1
0002C2BE <AmiBlitz3.ab3@15237>       MOVEA.l precsp(PC),A1
0002C2C0 <AmiBlitz3.ab3@15238>       MOVE.l A0,(A1)+
0002C2C2 <AmiBlitz3.ab3@15239>       MOVE.w D1,(A1)+
0002C2C8 <AmiBlitz3.ab3@15240>       MOVE.l A1,precsp
0002C2CC <AmiBlitz3.ab3@15242>    BSR.w calcloop
0002C2CE <AmiBlitz3.ab3@15243>   TST.w D1
0002C2D2 <AmiBlitz3.ab3@15244>    BNE.w syntaxerr
0002C2D8 <AmiBlitz3.ab3@15246>   SUBQ.l #6,precsp           ;pop the prec set up
0002C2DA <AmiBlitz3.ab3@15247> RTS
0002C2DE <AmiBlitz3.ab3@15251>   BSR.w eval2
0002C2E2 <AmiBlitz3.ab3@15254>   MOVEA.l precsp(PC),A1
0002C2E4 <AmiBlitz3.ab3@15255>   CMP.w -(A1),D1
0002C2E8 <AmiBlitz3.ab3@15256>    BHI.w 'higher
0002C2EA <AmiBlitz3.ab3@15257>  RTS
0002C2EE <AmiBlitz3.ab3@15263>   MOVEA.l precsp(PC),A1
0002C2F0 <AmiBlitz3.ab3@15264>   MOVE.l A0,(A1)+
0002C2F2 <AmiBlitz3.ab3@15265>   MOVE.w D1,(A1)+
0002C2F8 <AmiBlitz3.ab3@15266>   MOVE.l A1,precsp
0002C2FA <AmiBlitz3.ab3@15268>   MOVE.w D2,-(A7)
0002C300 <AmiBlitz3.ab3@15269>   ADDQ.w #1,regnum
0002C304 <AmiBlitz3.ab3@15270>    BSR.w calcloop               ;constant optimizer
0002C30A <AmiBlitz3.ab3@15271>   SUBQ.w #1,regnum
0002C30C <AmiBlitz3.ab3@15272>   MOVE.w (A7)+,D3
0002C310 <AmiBlitz3.ab3@15273>   MOVEM.l D1/A0,-(A7)
0002C314 <AmiBlitz3.ab3@15274>    BEQ.w 'skip
0002C318 <AmiBlitz3.ab3@15275>    BSR.w convtypef     ;could possibly fuck regat+1 !
0002C31C <AmiBlitz3.ab3@15278>   BSR.w popprec
0002C320 <AmiBlitz3.ab3@15279>   BSR.w writecode
0002C324 <AmiBlitz3.ab3@15286>   MOVEA.l forthsp(PC),A0
0002C328 <AmiBlitz3.ab3@15287>   MOVE.w -$2(A0),D1
0002C32C <AmiBlitz3.ab3@15288>   OR.w -$14(A0),D1
0002C330 <AmiBlitz3.ab3@15289>   MOVE.w D1,-$14(A0)
0002C334 <AmiBlitz3.ab3@15290>    BNE.w 'no
0002C33A <AmiBlitz3.ab3@15291>   MOVE.w dontwrite_nomemleft,D1
0002C33E <AmiBlitz3.ab3@15292>    BNE.w 'no
0002C342 <AmiBlitz3.ab3@15299>    MOVEA.l -$24(A0),A0
0002C47E <AmiBlitz3.ab3@15301>   !newcalc
0002C482 <AmiBlitz3.ab3@15302>    BEQ 'l10
0002C486 <AmiBlitz3.ab3@15303>    MOVEA.l forthsp(PC),A0
0002C48E <AmiBlitz3.ab3@15304>    MOVE.w -$18(A0),lasta6
0002C496 <AmiBlitz3.ab3@15305>    MOVE.l -$1C(A0),lasta6
0002C49A <AmiBlitz3.ab3@15306>    MOVEA.l -$24(A0),A0
0002C4A0 <AmiBlitz3.ab3@15307>    MOVE.l A0,destpointer
0002C4A6 <AmiBlitz3.ab3@15308>    MOVEA.l _mathffpbase,A6
0002C4AC <AmiBlitz3.ab3@15309>    MOVEA.l ffplib,A1
0002C4B0 <AmiBlitz3.ab3@15310>  BRA 'cont1
0002C4B4 <AmiBlitz3.ab3@15314>   MOVE.w #$2000,D1
0002C4BA <AmiBlitz3.ab3@15315>   OR.w regnum,D1            ; was regat(pc),
0002C4BE <AmiBlitz3.ab3@15316>    BSR.w writeword
0002C4C0 <AmiBlitz3.ab3@15318>     MOVEQ #0,d1
0002C4C6 <AmiBlitz3.ab3@15319>     MOVE.w regnum,D1
0002C4C8 <AmiBlitz3.ab3@15320>     ASL.l #8,d1
0002C4CA <AmiBlitz3.ab3@15321>     ASL.l #2,d1
0002C4D0 <AmiBlitz3.ab3@15322>     OR.l #$f2000000,d1
0002C4D4 <AmiBlitz3.ab3@15323>     BSR writelong
0002C4D8 <AmiBlitz3.ab3@15325>   MOVE.w #$4E75,D1
0002C4DC <AmiBlitz3.ab3@15326>    BSR.w writeword
0002C4E4 <AmiBlitz3.ab3@15327>   MOVE.w -$18(A0),lasta6
0002C4EC <AmiBlitz3.ab3@15328>   MOVE.l -$1C(A0),lasta6
0002C4F0 <AmiBlitz3.ab3@15329>   MOVEA.l -$24(A0),A0
0002C4F6 <AmiBlitz3.ab3@15330>   MOVE.l A0,destpointer
0002C4FA <AmiBlitz3.ab3@15332>   MOVEM.l D2/A5,-(A7)
0002C500 <AmiBlitz3.ab3@15334>   MOVEA.l _mathffpbase,A6
0002C506 <AmiBlitz3.ab3@15335>   MOVEA.l ffplib,A1
0002C50A <AmiBlitz3.ab3@15336>   MOVE.w $A(A1),D0
0002C510 <AmiBlitz3.ab3@15337>   LEA _mathffpbase,A5
0002C512 <AmiBlitz3.ab3@15338>   SUBA.w D0,A5
0002C518 <AmiBlitz3.ab3@15340>   JSR Aclearcache                                          ;neg +
0002C51E <AmiBlitz3.ab3@15342>   CLR.l load_var_addr
0002C524 <AmiBlitz3.ab3@15343>   CLR.l imm_addr
0002C52A <AmiBlitz3.ab3@15344>   TST.w dontwrite_nomemleft
0002C52E <AmiBlitz3.ab3@15345>   BNE '1
0002C530 <AmiBlitz3.ab3@15347>   JSR (A0)                                                 ;calc constant inline expression
0002C534 <AmiBlitz3.ab3@15351>   MOVEM.l (A7)+,D2/A5
0002C53A <AmiBlitz3.ab3@15358>   MOVE.b d2,isconstantvalue
0002C540 <AmiBlitz3.ab3@15359>   MOVE.l d0,lastconstantvalue
0002C546 <AmiBlitz3.ab3@15361>   MOVE.w regnum,D1
0002C548 <AmiBlitz3.ab3@15362>   LSL.w #8,D1
0002C54A <AmiBlitz3.ab3@15363>   LSL.w #1,D1
0002C54E <AmiBlitz3.ab3@15364>   ORI.w #$203C,D1      ;move.l #x,dn
0002C552 <AmiBlitz3.ab3@15365>   CMP.w #$3,D2
0002C556 <AmiBlitz3.ab3@15366>    BCC.w 'ok
0002C55A <AmiBlitz3.ab3@15367>   ORI.w #$1000,D1
0002C55E <AmiBlitz3.ab3@15368>    BSR.w writeword
0002C560 <AmiBlitz3.ab3@15369>   MOVE.w D0,D1
0002C564 <AmiBlitz3.ab3@15370>    BSR.w writeword
0002C568 <AmiBlitz3.ab3@15371>  BRA.w 'mode
0002C56E <AmiBlitz3.ab3@15375>   TST.b iee                                                ;fpu constant
0002C572 <AmiBlitz3.ab3@15376>   BEQ 'l10b
0002C576 <AmiBlitz3.ab3@15377>   CMP.b #5,d2
0002C57A <AmiBlitz3.ab3@15378>   BNE 'l10b
0002C57C <AmiBlitz3.ab3@15379>   MOVEQ #0,d1
0002C582 <AmiBlitz3.ab3@15380>   MOVE.w regnum,D1
0002C584 <AmiBlitz3.ab3@15381>   ASL.l #7,d1
0002C58A <AmiBlitz3.ab3@15382>   OR.l #$f23c5400,d1
0002C58E <AmiBlitz3.ab3@15383>   BSR writelong
0002C590 <AmiBlitz3.ab3@15384>   SUBQ.l #8,a7
0002C596 <AmiBlitz3.ab3@15385>   fmove.d fp0,0(a7)
0002C598 <AmiBlitz3.ab3@15386>   MOVE.l (a7)+,d1
0002C59C <AmiBlitz3.ab3@15387>   BSR writelong
0002C59E <AmiBlitz3.ab3@15388>   MOVE.l (a7)+,d1
0002C5A2 <AmiBlitz3.ab3@15389>   BSR writelong
0002C5A6 <AmiBlitz3.ab3@15390>  BRA 'mode
0002C5AA <AmiBlitz3.ab3@15394>   BSR.w writeword
0002C5AC <AmiBlitz3.ab3@15395>   MOVE.l D0,D1
0002C5B0 <AmiBlitz3.ab3@15396>   BSR.w writelong
0002C5B4 <AmiBlitz3.ab3@15403>   MOVEA.l forthsp(PC),A0
0002C5B8 <AmiBlitz3.ab3@15404>   MOVEA.l -$20(A0),A3
0002C5BE <AmiBlitz3.ab3@15405>   MOVEA.l hunkoffsetbase,A2
0002C5C4 <AmiBlitz3.ab3@15406>   MOVE.l A3,hunkoffsetbase
0002C5CA <AmiBlitz3.ab3@15407>   MOVEA.l _execbase,A6
0002C5CC <AmiBlitz3.ab3@15410>   CMPA.l A3,A2
0002C5D0 <AmiBlitz3.ab3@15411>   BEQ.w 'done
0002C5D6 <AmiBlitz3.ab3@15412>   SUBQ.l #1,hunkoffsetcounter
0002C5D8 <AmiBlitz3.ab3@15413>   MOVEA.l A2,A1
0002C5DA <AmiBlitz3.ab3@15414>   MOVEA.l (A2),A2
0002C5DC <AmiBlitz3.ab3@15415>   MOVEQ.l #$8,D0
0002C5E2 <AmiBlitz3.ab3@15417>   MOVE.l mempool2,a0
0002C5E6 <AmiBlitz3.ab3@15418>    JSR _FreePooled(A6)
0002C5EA <AmiBlitz3.ab3@15421>  BRA.w 'loop
0002C5EE <AmiBlitz3.ab3@15424>   MOVEA.l forthsp(PC),A0
0002C5F2 <AmiBlitz3.ab3@15427>   LEA -$12(A0),A0
0002C5F8 <AmiBlitz3.ab3@15428>   MOVE.l A0,forthsp
0002C5FC <AmiBlitz3.ab3@15430>   MOVEM.l (A7)+,D1/A0
0002C600 <AmiBlitz3.ab3@15431>   BSR.w reget
0002C604 <AmiBlitz3.ab3@15432> BRA.w 'more
0002C608 <AmiBlitz3.ab3@15441>   BSR.w getelement
0002C60A <AmiBlitz3.ab3@15443>   TST.w d0
0002C60E <AmiBlitz3.ab3@15444>   BEQ 'done
0002C612 <AmiBlitz3.ab3@15445>   CMP.b #",",d0
0002C616 <AmiBlitz3.ab3@15446>   BEQ 'done
0002C61A <AmiBlitz3.ab3@15447>   CMP.b #"@",d0                                            ;expandline @@
0002C61E <AmiBlitz3.ab3@15448>   BEQ 'done
0002C624 <AmiBlitz3.ab3@15451>   LEA operators,A0
0002C626 <AmiBlitz3.ab3@15454>    TST.w (A0)
0002C62A <AmiBlitz3.ab3@15455>    BEQ.w 'done
0002C62C <AmiBlitz3.ab3@15456>   CMP.w (A0),D0
0002C630 <AmiBlitz3.ab3@15457>    BEQ.w 'found
0002C634 <AmiBlitz3.ab3@15458>   LEA $20(A0),A0
0002C638 <AmiBlitz3.ab3@15459>  BRA.w 'loop
0002C63A <AmiBlitz3.ab3@15462>   MOVEQ.l #$00,D1
0002C63C <AmiBlitz3.ab3@15463>  RTS
0002C640 <AmiBlitz3.ab3@15466>   CMP.w #$3C,D0
0002C644 <AmiBlitz3.ab3@15467>    BNE.w 'notlt
0002C648 <AmiBlitz3.ab3@15468>    BSR.w get1bytemain
0002C64C <AmiBlitz3.ab3@15469>   CMP.w #$3D,D0
0002C650 <AmiBlitz3.ab3@15470>    BNE.w 'notlteq
0002C656 <AmiBlitz3.ab3@15471>   LEA ople,A0
0002C65A <AmiBlitz3.ab3@15472>  BRA.w 'found2
0002C65E <AmiBlitz3.ab3@15475>   CMP.w #$3E,D0          ;'>'
0002C662 <AmiBlitz3.ab3@15476>    BNE.w 'found3
0002C666 <AmiBlitz3.ab3@15477>  BRA.w 'isne
0002C66A <AmiBlitz3.ab3@15480>   CMP.w #$3E,D0          ;'>'
0002C66E <AmiBlitz3.ab3@15481>    BNE.w 'notqt
0002C672 <AmiBlitz3.ab3@15482>    BSR.w get1bytemain
0002C676 <AmiBlitz3.ab3@15483>   CMP.w #$3D,D0          ;'='
0002C67A <AmiBlitz3.ab3@15484>    BNE.w 'notgteq
0002C680 <AmiBlitz3.ab3@15485>   LEA opge,A0
0002C684 <AmiBlitz3.ab3@15486>  BRA.w 'found2
0002C688 <AmiBlitz3.ab3@15489>   CMP.w #$3C,D0          ;'<'
0002C68C <AmiBlitz3.ab3@15490>    BEQ.w 'isne
0002C696 <AmiBlitz3.ab3@15495>     MOVE.w oldqflag,instringon
0002C69C <AmiBlitz3.ab3@15496>     MOVEA.l lastsourcepos,A5
0002C6A0 <AmiBlitz3.ab3@15498>  BRA.w 'found2
0002C6A4 <AmiBlitz3.ab3@15501>   CMP.w #$3D,D0          ;'='
0002C6A8 <AmiBlitz3.ab3@15502>    BNE.w 'found2
0002C6AC <AmiBlitz3.ab3@15503>    BSR.w get1bytemain
0002C6B0 <AmiBlitz3.ab3@15504>   CMP.w #$3E,D0          ;'>'
0002C6B4 <AmiBlitz3.ab3@15505>    BNE.w 'noteqgt
0002C6BA <AmiBlitz3.ab3@15506>   LEA opge,A0
0002C6BE <AmiBlitz3.ab3@15507>  BRA.w 'found2
0002C6C2 <AmiBlitz3.ab3@15510>   CMP.w #$3C,D0          ;'<'
0002C6C6 <AmiBlitz3.ab3@15511>   BNE.w 'found3
0002C6CC <AmiBlitz3.ab3@15514>   LEA opne,A0
0002C6D0 <AmiBlitz3.ab3@15520>   MOVE.w $1E(A0),D1
0002C6D2 <AmiBlitz3.ab3@15521> RTS
0002C6D4 <AmiBlitz3.ab3@15530>   MOVE.w d2,d1
0002C6D6 <AmiBlitz3.ab3@15531>   SUBQ.w #1,D1
0002C6DA <AmiBlitz3.ab3@15532>    BMI.w illoperr
0002C6DC <AmiBlitz3.ab3@15533>   LSL.w #2,D1
0002C6E0 <AmiBlitz3.ab3@15534>   MOVE.l $2(A0,D1.W),D1
0002C6E4 <AmiBlitz3.ab3@15535>    BEQ.w illoperr
0002C6E6 <AmiBlitz3.ab3@15536>   MOVEA.l D1,A0
0002C6E8 <AmiBlitz3.ab3@15537> JMP (A0)
0002C6EC <AmiBlitz3.ab3@15553>   MOVEA.l precsp(PC),A1
0002C6F2 <AmiBlitz3.ab3@15554>   CMPA.l #precstackf,A1
0002C6F6 <AmiBlitz3.ab3@15555>    BCC.w pserr
0002C6F8 <AmiBlitz3.ab3@15556>   MOVE.w -(A1),D1
0002C6FA <AmiBlitz3.ab3@15557>   MOVEA.l -(A1),A0
0002C700 <AmiBlitz3.ab3@15558>   MOVE.l A1,precsp
0002C702 <AmiBlitz3.ab3@15559> RTS
0002C706 <AmiBlitz3.ab3@15562> precsp:      Dc.l precstack
0002C802 <AmiBlitz3.ab3@15563> precstack:   Ds.l 63                                       ;ds 6*32 org source   ;Lotsa Room?
0002C886 <AmiBlitz3.ab3@15564>              Ds.l 33
0002C888 <AmiBlitz3.ab3@15570> mseq:  SEQ D0
0002C88A <AmiBlitz3.ab3@15571> msne:    SNE D0
0002C88C <AmiBlitz3.ab3@15572> mslt:    SLT D0
0002C88E <AmiBlitz3.ab3@15573> msle:    SLE D0
0002C890 <AmiBlitz3.ab3@15574> msgt:    SGT D0
0002C892 <AmiBlitz3.ab3@15575> msge:    SGE D0
0002C894 <AmiBlitz3.ab3@15577> cmp0:    CMP.b D0,D0
0002C896 <AmiBlitz3.ab3@15578> cmp1:    CMP.w D0,D0
0002C898 <AmiBlitz3.ab3@15579> cmp2:    CMP.l D0,D0
0002C89C <AmiBlitz3.ab3@15583>   MOVE.w cmp0(PC),D1
0002C8A0 <AmiBlitz3.ab3@15584> BRA.w doeqcmp2                                            ;writecompare
0002C8A4 <AmiBlitz3.ab3@15588>   MOVE.w cmp0(PC),D1
0002C8A8 <AmiBlitz3.ab3@15589> BRA.w donecmp2
0002C8AC <AmiBlitz3.ab3@15593>   MOVE.w cmp0(PC),D1
0002C8B0 <AmiBlitz3.ab3@15594> BRA.w doltcmp2
0002C8B4 <AmiBlitz3.ab3@15598>   MOVE.w cmp0(PC),D1
0002C8B8 <AmiBlitz3.ab3@15599> BRA.w dolecmp2
0002C8BC <AmiBlitz3.ab3@15603>   MOVE.w cmp0(PC),D1
0002C8C0 <AmiBlitz3.ab3@15604> BRA.w dogtcmp2
0002C8C4 <AmiBlitz3.ab3@15609>   MOVE.w cmp0(PC),D1
0002C8C8 <AmiBlitz3.ab3@15610> BRA.w dogecmp2
0002C8CC <AmiBlitz3.ab3@15614>   MOVE.w cmp1(PC),D1
0002C8D0 <AmiBlitz3.ab3@15615> BRA.w doeqcmp2
0002C8D4 <AmiBlitz3.ab3@15619>   MOVE.w cmp1(PC),D1
0002C8D8 <AmiBlitz3.ab3@15620> BRA.w donecmp2
0002C8DC <AmiBlitz3.ab3@15624>   MOVE.w cmp1(PC),D1
0002C8E0 <AmiBlitz3.ab3@15625> BRA.w doltcmp2
0002C8E4 <AmiBlitz3.ab3@15629>   MOVE.w cmp1(PC),D1
0002C8E8 <AmiBlitz3.ab3@15630> BRA.w dolecmp2
0002C8EC <AmiBlitz3.ab3@15634>   MOVE.w cmp1(PC),D1
0002C8F0 <AmiBlitz3.ab3@15635> BRA.w dogtcmp2
0002C8F4 <AmiBlitz3.ab3@15640>   MOVE.w cmp1(PC),D1
0002C8F8 <AmiBlitz3.ab3@15641> BRA.w dogecmp2
0002C8FC <AmiBlitz3.ab3@15645>   MOVE.w cmp2(PC),D1                                   ;writecomparelong
0002C900 <AmiBlitz3.ab3@15646> BRA doeqcmp2
0002C904 <AmiBlitz3.ab3@15649>   MOVE.w cmp2(PC),D1
0002C908 <AmiBlitz3.ab3@15650> BRA donecmp2
0002C90C <AmiBlitz3.ab3@15654>   MOVE.w cmp2(PC),D1
0002C910 <AmiBlitz3.ab3@15655> BRA.w doltcmp2
0002C914 <AmiBlitz3.ab3@15659>   MOVE.w cmp2(PC),D1
0002C918 <AmiBlitz3.ab3@15660> BRA.w dolecmp2
0002C91C <AmiBlitz3.ab3@15664>   MOVE.w cmp2(PC),D1
0002C920 <AmiBlitz3.ab3@15665> BRA.w dogtcmp2
0002C924 <AmiBlitz3.ab3@15669>   MOVE.w cmp2(PC),D1
0002C928 <AmiBlitz3.ab3@15670> BRA.w dogecmp2
0002C92A <AmiBlitz3.ab3@15673> cfregat:  Ds.w 1
0002C930 <AmiBlitz3.ab3@15677>   MOVE.w D1,libjsr+2
0002C934 <AmiBlitz3.ab3@15678>    BSR.w savereg
0002C936 <AmiBlitz3.ab3@15679>   MOVE.l D4,D1
0002C93A <AmiBlitz3.ab3@15680>    BSR.w pokemovem
0002C93E <AmiBlitz3.ab3@15681>   MOVE.w #$C900,D1
0002C942 <AmiBlitz3.ab3@15682>    BSR.w Atokejsr
0002C946 <AmiBlitz3.ab3@15683>    BSR.w ritetod0
0002C94C <AmiBlitz3.ab3@15684>   MOVE.l libjsr,D1
0002C950 <AmiBlitz3.ab3@15685>    BSR.w writelong
0002C95A <AmiBlitz3.ab3@15686>   MOVE.w regnum,cfregat
0002C960 <AmiBlitz3.ab3@15687>   CLR.w regnum
0002C962 <AmiBlitz3.ab3@15688> RTS
0002C96C <AmiBlitz3.ab3@15692>   MOVE.w cfregat,regnum
0002C970 <AmiBlitz3.ab3@15693>    BSR.w ritefromd0
0002C972 <AmiBlitz3.ab3@15694>   MOVE.l D5,D1
0002C976 <AmiBlitz3.ab3@15695> BRA.w pokemovem
0002C978 <AmiBlitz3.ab3@15699>    MOVEQ.l #-$2A,D1
0002C97E <AmiBlitz3.ab3@15700>    TST.b fpu
0002C982 <AmiBlitz3.ab3@15701>    BEQ 'nofpu
0002C984 <AmiBlitz3.ab3@15702>    MOVEQ #0,d1
0002C98A <AmiBlitz3.ab3@15703>    MOVE.w regnum,d1
0002C98C <AmiBlitz3.ab3@15704>    MOVE.l d1,d2
0002C98E <AmiBlitz3.ab3@15705>    ASL.l #7,d1
0002C990 <AmiBlitz3.ab3@15706>    ADDQ  #1,d2
0002C992 <AmiBlitz3.ab3@15707>    ASL.l #8,d2
0002C994 <AmiBlitz3.ab3@15708>    ASL.l #2,d2
0002C996 <AmiBlitz3.ab3@15709>    OR.l d2,d1
0002C99C <AmiBlitz3.ab3@15710>    OR.l #$f2000038,d1
0002C9A2 <AmiBlitz3.ab3@15711>    JSR writelong
0002C9A6 <AmiBlitz3.ab3@15712>    MOVE.w #$f240,d1
0002C9AC <AmiBlitz3.ab3@15713>    OR.w regnum,d1
0002C9B0 <AmiBlitz3.ab3@15714>    BSR writeword
0002C9B2 <AmiBlitz3.ab3@15715>    MOVEQ.l #1,d2
0002C9B6 <AmiBlitz3.ab3@15716>    MOVE.w #1,d1                                            ;fpu comp fseq
0002C9BA <AmiBlitz3.ab3@15717>    BSR writeword
0002C9BC <AmiBlitz3.ab3@15718>  RTS
0002C9C0 <AmiBlitz3.ab3@15721>    BSR.w docflib
0002C9C4 <AmiBlitz3.ab3@15722>    BSR.w doeqcmp
0002C9C8 <AmiBlitz3.ab3@15723> BRA.w docflib2
0002C9CA <AmiBlitz3.ab3@15727>   MOVEQ.l #-$2A,D1
0002C9D0 <AmiBlitz3.ab3@15728>   TST.b fpu
0002C9D4 <AmiBlitz3.ab3@15729>    BEQ 'nofpu
0002C9D6 <AmiBlitz3.ab3@15730>    MOVEQ #0,d1
0002C9DC <AmiBlitz3.ab3@15731>    MOVE.w regnum,d1
0002C9DE <AmiBlitz3.ab3@15732>    MOVE.l d1,d2
0002C9E0 <AmiBlitz3.ab3@15733>    ASL.l #7,d1
0002C9E2 <AmiBlitz3.ab3@15734>    ADDQ  #1,d2
0002C9E4 <AmiBlitz3.ab3@15735>    ASL.l #8,d2
0002C9E6 <AmiBlitz3.ab3@15736>    ASL.l #2,d2
0002C9E8 <AmiBlitz3.ab3@15737>    OR.l d2,d1
0002C9EE <AmiBlitz3.ab3@15738>    OR.l #$f2000038,d1
0002C9F4 <AmiBlitz3.ab3@15739>    JSR writelong
0002C9F8 <AmiBlitz3.ab3@15740>    MOVE.w #$f240,d1
0002C9FE <AmiBlitz3.ab3@15741>    OR.w regnum,d1
0002CA02 <AmiBlitz3.ab3@15742>    BSR writeword
0002CA08 <AmiBlitz3.ab3@15743>    MOVE.l #1,d2
0002CA0C <AmiBlitz3.ab3@15744>    MOVE.w #$e,d1                                           ;fpu comp fsne
0002CA10 <AmiBlitz3.ab3@15745>    BSR writeword
0002CA12 <AmiBlitz3.ab3@15746>  RTS
0002CA16 <AmiBlitz3.ab3@15749>    BSR.w docflib
0002CA1A <AmiBlitz3.ab3@15750>    BSR.w donecmp
0002CA1E <AmiBlitz3.ab3@15751> BRA.w docflib2
0002CA20 <AmiBlitz3.ab3@15755>   MOVEQ.l #-$2A,D1
0002CA26 <AmiBlitz3.ab3@15756>     TST.b fpu
0002CA2A <AmiBlitz3.ab3@15757>    BEQ 'nofpu
0002CA2C <AmiBlitz3.ab3@15758>    MOVEQ #0,d1
0002CA32 <AmiBlitz3.ab3@15759>    MOVE.w regnum,d1
0002CA34 <AmiBlitz3.ab3@15760>    MOVE.l d1,d2
0002CA36 <AmiBlitz3.ab3@15761>    ASL.l #7,d1
0002CA38 <AmiBlitz3.ab3@15762>    ADDQ  #1,d2
0002CA3A <AmiBlitz3.ab3@15763>    ASL.l #8,d2
0002CA3C <AmiBlitz3.ab3@15764>    ASL.l #2,d2
0002CA3E <AmiBlitz3.ab3@15765>    OR.l d2,d1
0002CA44 <AmiBlitz3.ab3@15766>    OR.l #$f2000038,d1
0002CA4A <AmiBlitz3.ab3@15767>    JSR writelong
0002CA4E <AmiBlitz3.ab3@15768>    MOVE.w #$f240,d1
0002CA54 <AmiBlitz3.ab3@15769>    OR.w regnum,d1
0002CA58 <AmiBlitz3.ab3@15770>    BSR writeword
0002CA5E <AmiBlitz3.ab3@15771>    MOVE.l #$1,d2
0002CA62 <AmiBlitz3.ab3@15772>    MOVE.w #$14,d1                                          ;fpu comp fslt
0002CA66 <AmiBlitz3.ab3@15773>    BSR writeword
0002CA68 <AmiBlitz3.ab3@15774>  RTS
0002CA6C <AmiBlitz3.ab3@15777>    BSR.w docflib
0002CA70 <AmiBlitz3.ab3@15778>    BSR.w doltcmp
0002CA74 <AmiBlitz3.ab3@15779> BRA.w docflib2
0002CA76 <AmiBlitz3.ab3@15783>   MOVEQ.l #-$2A,D1
0002CA7C <AmiBlitz3.ab3@15784>   TST.b fpu
0002CA80 <AmiBlitz3.ab3@15785>    BEQ 'nofpu
0002CA82 <AmiBlitz3.ab3@15786>    MOVEQ #0,d1
0002CA88 <AmiBlitz3.ab3@15787>    MOVE.w regnum,d1
0002CA8A <AmiBlitz3.ab3@15788>    MOVE.l d1,d2
0002CA8C <AmiBlitz3.ab3@15789>    ASL.l #7,d1
0002CA8E <AmiBlitz3.ab3@15790>    ADDQ  #1,d2
0002CA90 <AmiBlitz3.ab3@15791>    ASL.l #8,d2
0002CA92 <AmiBlitz3.ab3@15792>    ASL.l #2,d2
0002CA94 <AmiBlitz3.ab3@15793>    OR.l d2,d1
0002CA9A <AmiBlitz3.ab3@15794>    OR.l #$f2000038,d1
0002CAA0 <AmiBlitz3.ab3@15795>    JSR writelong
0002CAA4 <AmiBlitz3.ab3@15796>    MOVE.w #$f240,d1
0002CAAA <AmiBlitz3.ab3@15797>    OR.w regnum,d1
0002CAAE <AmiBlitz3.ab3@15798>    BSR writeword
0002CAB4 <AmiBlitz3.ab3@15799>    MOVE.l #1,d2
0002CAB8 <AmiBlitz3.ab3@15800>    MOVE.w #$15,d1                                          ;fpu comp fsle
0002CABC <AmiBlitz3.ab3@15801>    BSR writeword
0002CABE <AmiBlitz3.ab3@15802>  RTS
0002CAC2 <AmiBlitz3.ab3@15805>    BSR.w docflib
0002CAC6 <AmiBlitz3.ab3@15806>    BSR.w dolecmp
0002CACA <AmiBlitz3.ab3@15807> BRA.w docflib2
0002CACC <AmiBlitz3.ab3@15811>   MOVEQ.l #-$2A,D1
0002CAD2 <AmiBlitz3.ab3@15812>    TST.b fpu
0002CAD6 <AmiBlitz3.ab3@15813>    BEQ 'nofpu
0002CAD8 <AmiBlitz3.ab3@15814>     MOVEQ #0,d1
0002CADE <AmiBlitz3.ab3@15815>    MOVE.w regnum,d1
0002CAE0 <AmiBlitz3.ab3@15816>    MOVE.l d1,d2
0002CAE2 <AmiBlitz3.ab3@15817>    ASL.l #7,d1
0002CAE4 <AmiBlitz3.ab3@15818>    ADDQ  #1,d2
0002CAE6 <AmiBlitz3.ab3@15819>    ASL.l #8,d2
0002CAE8 <AmiBlitz3.ab3@15820>    ASL.l #2,d2
0002CAEA <AmiBlitz3.ab3@15821>    OR.l d2,d1
0002CAF0 <AmiBlitz3.ab3@15822>    OR.l #$f2000038,d1
0002CAF6 <AmiBlitz3.ab3@15823>    JSR writelong
0002CAFA <AmiBlitz3.ab3@15824>    MOVE.w #$f240,d1
0002CB00 <AmiBlitz3.ab3@15825>    OR.w regnum,d1
0002CB04 <AmiBlitz3.ab3@15826>    BSR writeword
0002CB0A <AmiBlitz3.ab3@15827>    MOVE.l #1,d2
0002CB0E <AmiBlitz3.ab3@15828>    MOVE.w #$12,d1                                          ;fpu comp fsgt
0002CB12 <AmiBlitz3.ab3@15829>    BSR writeword
0002CB14 <AmiBlitz3.ab3@15830>  RTS
0002CB18 <AmiBlitz3.ab3@15833>    BSR.w docflib
0002CB1C <AmiBlitz3.ab3@15834>    BSR.w dogtcmp
0002CB20 <AmiBlitz3.ab3@15835> BRA.w docflib2
0002CB22 <AmiBlitz3.ab3@15839>   MOVEQ.l #-$2A,D1
0002CB28 <AmiBlitz3.ab3@15840>  TST.b fpu
0002CB2C <AmiBlitz3.ab3@15841>    BEQ 'nofpu
0002CB2E <AmiBlitz3.ab3@15842>    MOVEQ #0,d1
0002CB34 <AmiBlitz3.ab3@15843>    MOVE.w regnum,d1
0002CB36 <AmiBlitz3.ab3@15844>    MOVE.l d1,d2
0002CB38 <AmiBlitz3.ab3@15845>    ASL.l #7,d1
0002CB3A <AmiBlitz3.ab3@15846>    ADDQ  #1,d2
0002CB3C <AmiBlitz3.ab3@15847>    ASL.l #8,d2
0002CB3E <AmiBlitz3.ab3@15848>    ASL.l #2,d2
0002CB40 <AmiBlitz3.ab3@15849>    OR.l d2,d1
0002CB46 <AmiBlitz3.ab3@15850>    OR.l #$f2000038,d1
0002CB4C <AmiBlitz3.ab3@15851>    JSR writelong
0002CB50 <AmiBlitz3.ab3@15852>    MOVE.w #$f240,d1
0002CB56 <AmiBlitz3.ab3@15853>    OR.w regnum,d1
0002CB5A <AmiBlitz3.ab3@15854>    BSR writeword
0002CB60 <AmiBlitz3.ab3@15855>    MOVE.l #1,d2
0002CB64 <AmiBlitz3.ab3@15856>    MOVE.w #$13,d1                                          ;fpu comp fsge
0002CB68 <AmiBlitz3.ab3@15857>    BSR writeword
0002CB6A <AmiBlitz3.ab3@15858>  RTS
0002CB6E <AmiBlitz3.ab3@15861>    BSR.w docflib
0002CB72 <AmiBlitz3.ab3@15862>    BSR.w dogecmp
0002CB76 <AmiBlitz3.ab3@15863> BRA.w docflib2
0002CB7C <AmiBlitz3.ab3@15868>   MOVE.l #$CE00,D1
0002CB82 <AmiBlitz3.ab3@15869>    MOVE.l d1,lastinstruction
0002CB86 <AmiBlitz3.ab3@15870>    BSR.w Atokejsr
0002CB8A <AmiBlitz3.ab3@15871> BRA.w doeqcmp
0002CB90 <AmiBlitz3.ab3@15875>   MOVE.l #$CE00,D1
0002CB96 <AmiBlitz3.ab3@15876>    MOVE.l d1,lastinstruction
0002CB9A <AmiBlitz3.ab3@15877>    BSR.w Atokejsr
0002CB9E <AmiBlitz3.ab3@15878> BRA.w donecmp
0002CBA4 <AmiBlitz3.ab3@15882>   MOVE.l #$CE00,D1
0002CBAA <AmiBlitz3.ab3@15883>    MOVE.l d1,lastinstruction
0002CBAE <AmiBlitz3.ab3@15884>    BSR.w Atokejsr
0002CBB2 <AmiBlitz3.ab3@15885> BRA.w doltcmp
0002CBB8 <AmiBlitz3.ab3@15889>   MOVE.l #$CE00,D1
0002CBBE <AmiBlitz3.ab3@15890>    MOVE.l d1,lastinstruction
0002CBC2 <AmiBlitz3.ab3@15891>    BSR.w Atokejsr
0002CBC6 <AmiBlitz3.ab3@15892> BRA.w dolecmp
0002CBCC <AmiBlitz3.ab3@15896>   MOVE.l #$CE00,D1
0002CBD2 <AmiBlitz3.ab3@15897>    MOVE.l d1,lastinstruction
0002CBD6 <AmiBlitz3.ab3@15898>    BSR.w Atokejsr
0002CBDA <AmiBlitz3.ab3@15899> BRA.w dogtcmp
0002CBE0 <AmiBlitz3.ab3@15903>   MOVE.l #$CE00,D1
0002CBE6 <AmiBlitz3.ab3@15904>    MOVE.l d1,lastinstruction
0002CBEA <AmiBlitz3.ab3@15905>    BSR.w Atokejsr
0002CBEE <AmiBlitz3.ab3@15906> BRA.w dogecmp
0002CBF4 <AmiBlitz3.ab3@15911>   TST.b fast                                               ;compare
0002CBF8 <AmiBlitz3.ab3@15912>   BEQ 'org
0002CBFE <AmiBlitz3.ab3@15916>   MOVE.l destpointer,a0
0002CC04 <AmiBlitz3.ab3@15917>   SUB.l imm_addr,a0
0002CC0A <AmiBlitz3.ab3@15918>   CMP.l #6,a0
0002CC0E <AmiBlitz3.ab3@15919>   BNE 'l11
0002CC14 <AmiBlitz3.ab3@15920>   MOVE.l imm_addr,a0
0002CC1C <AmiBlitz3.ab3@15921>   CMP.w #$223c,imm_addr
0002CC20 <AmiBlitz3.ab3@15922>   BNE 'org
0002CC26 <AmiBlitz3.ab3@15923>   ADD.w #$8e80,-6(a4)
0002CC2C <AmiBlitz3.ab3@15926>   CLR.l imm_addr
0002CC2E <AmiBlitz3.ab3@15927>  RTS
0002CC34 <AmiBlitz3.ab3@15930>   CMP.l #4,a0
0002CC38 <AmiBlitz3.ab3@15931>   BNE 'l10
0002CC3C <AmiBlitz3.ab3@15932>   CMP.b #2,d3
0002CC40 <AmiBlitz3.ab3@15933>   BNE 'l11b
0002CC46 <AmiBlitz3.ab3@15934>   ADD.w #$7e40,-4(a4)
0002CC48 <AmiBlitz3.ab3@15935>  RTS
0002CC4E <AmiBlitz3.ab3@15938>   ADD.w #$7e00,-4(a4)
0002CC50 <AmiBlitz3.ab3@15939>  RTS
0002CC56 <AmiBlitz3.ab3@15942>    MOVE.l destpointer,a0
0002CC5C <AmiBlitz3.ab3@15943>    SUB.l load_var_addr,a0
0002CC60 <AmiBlitz3.ab3@15944>    CMP.w #4,a0
0002CC64 <AmiBlitz3.ab3@15945>    BNE 'org
0002CC68 <AmiBlitz3.ab3@15946>    CMP.b #3,d3
0002CC6C <AmiBlitz3.ab3@15947>    BCS 'lv1
0002CC72 <AmiBlitz3.ab3@15948>    CLR.l load_var_addr
0002CC78 <AmiBlitz3.ab3@15949>    ADD.w #$9080-$200,-4(a4)
0002CC7A <AmiBlitz3.ab3@15950>  RTS
0002CC7E <AmiBlitz3.ab3@15953>   CMP.b #2,d3
0002CC82 <AmiBlitz3.ab3@15954>    BNE 'org
0002CC88 <AmiBlitz3.ab3@15955>    CLR.l load_var_addr
0002CC8E <AmiBlitz3.ab3@15956>    ADD.w #$8040-$200,-4(a4)
0002CC90 <AmiBlitz3.ab3@15957>  RTS
0002CC96 <AmiBlitz3.ab3@15960>   MOVE.w regnum,D3
0002CC98 <AmiBlitz3.ab3@15961>   OR.w D3,D1
0002CC9A <AmiBlitz3.ab3@15962>   LSL.w #8,D3
0002CC9C <AmiBlitz3.ab3@15963>   LSL.w #1,D3
0002CC9E <AmiBlitz3.ab3@15964>   OR.w D3,D1
0002CCA0 <AmiBlitz3.ab3@15965>   ADDQ.w #1,D1
0002CCA4 <AmiBlitz3.ab3@15966> BRA.w writeword
0002CCA8 <AmiBlitz3.ab3@15970>    BSR.w cmpit
0002CCAC <AmiBlitz3.ab3@15973>    MOVE.w mseq(PC),D1
0002CCB0 <AmiBlitz3.ab3@15974> BRA.w cpoke
0002CCB4 <AmiBlitz3.ab3@15978>   BSR.w cmpit
0002CCB8 <AmiBlitz3.ab3@15981>   MOVE.w msne(PC),D1
0002CCBC <AmiBlitz3.ab3@15982> BRA.w cpoke
0002CCC0 <AmiBlitz3.ab3@15986>   BSR.w cmpit
0002CCC4 <AmiBlitz3.ab3@15989>    MOVE.w mslt(PC),D1
0002CCC8 <AmiBlitz3.ab3@15990> BRA.w cpoke
0002CCCC <AmiBlitz3.ab3@15994>    BSR.w cmpit
0002CCD0 <AmiBlitz3.ab3@15997>    MOVE.w msle(PC),D1
0002CCD4 <AmiBlitz3.ab3@15998> BRA.w cpoke
0002CCD8 <AmiBlitz3.ab3@16002>    BSR.w cmpit
0002CCDC <AmiBlitz3.ab3@16005>    MOVE.w msgt(PC),D1
0002CCE0 <AmiBlitz3.ab3@16006> BRA.w cpoke
0002CCE4 <AmiBlitz3.ab3@16010>   BSR.w cmpit
0002CCE8 <AmiBlitz3.ab3@16013>    MOVE.w msge(PC),D1
0002CCEE <AmiBlitz3.ab3@16016>    OR.w regnum,D1
0002CCF2 <AmiBlitz3.ab3@16017>    CMP.w #5,d2
0002CCF6 <AmiBlitz3.ab3@16018>    BNE 'nod0
0002CCFA <AmiBlitz3.ab3@16019>    CMP.w #5,d3
0002CCFE <AmiBlitz3.ab3@16020>    BNE 'nod0
0002CD00 <AmiBlitz3.ab3@16021>    MOVE.l d1,-(a7)
0002CD06 <AmiBlitz3.ab3@16022>    MOVE.l #$44004a00,d1                                    ;68k neg.b:tst.b
0002CD0A <AmiBlitz3.ab3@16023>    BSR writelong
0002CD0C <AmiBlitz3.ab3@16024>    MOVE.l (a7)+,d1
0002CD10 <AmiBlitz3.ab3@16027>    BSR.w writeword                                         ;writeseq
0002CD12 <AmiBlitz3.ab3@16028>    MOVEQ.l #1,d2
0002CD18 <AmiBlitz3.ab3@16029>    MOVE.l lasttoken,d1
0002CD1E <AmiBlitz3.ab3@16030>     TST.b fast
0002CD22 <AmiBlitz3.ab3@16031>     BEQ.s 'l11
0002CD28 <AmiBlitz3.ab3@16032>    CMP.l #$800b,d1
0002CD2C <AmiBlitz3.ab3@16033>    BEQ 'l10
0002CD30 <AmiBlitz3.ab3@16036>   MOVE.w #$4880,D1                                         ;ext.w D regat
0002CD36 <AmiBlitz3.ab3@16037>   OR.w regnum,D1
0002CD3A <AmiBlitz3.ab3@16038>    BSR.w writeword                                         ;writeext.w
0002CD3C <AmiBlitz3.ab3@16039>   MOVEQ.l #$02,D2                                          ;type now WORD!
0002CD3E <AmiBlitz3.ab3@16042> RTS
0002CD42 <AmiBlitz3.ab3@16047>   MOVE.w #$D040,D1
0002CD44 <AmiBlitz3.ab3@16048>   MOVEQ.l #$02,D2                                          ;writeaddword   ;now a word
0002CD48 <AmiBlitz3.ab3@16049> BRA.w doplus2
0002CD4C <AmiBlitz3.ab3@16053>   MOVE.w #$D040,D1
0002CD4E <AmiBlitz3.ab3@16054>   MOVEQ.l #$03,D2                                          ;now a long
0002CD52 <AmiBlitz3.ab3@16055>    BSR.w doplus2
0002CD56 <AmiBlitz3.ab3@16056> BRA.w convert_word_to_long
0002CD5A <AmiBlitz3.ab3@16060>   MOVE.w #$D080,D1                                         ;writeaddlong
0002CD5C <AmiBlitz3.ab3@16063>   MOVE.w d1,a1
0002CD62 <AmiBlitz3.ab3@16064>   TST.b fast
0002CD66 <AmiBlitz3.ab3@16065>   BEQ 'l10
0002CD68 <AmiBlitz3.ab3@16069>   ASR.w #8,d1
0002CD6C <AmiBlitz3.ab3@16070>   CMP.b #$90,d1
0002CD70 <AmiBlitz3.ab3@16071>   BEQ 'sub1
0002CD74 <AmiBlitz3.ab3@16072>   CMP.b #$d0,d1
0002CD78 <AmiBlitz3.ab3@16073>   BNE 'l10
0002CD7C <AmiBlitz3.ab3@16074>   CMP.b #3,d3
0002CD80 <AmiBlitz3.ab3@16075>   BCS 'lq10
0002CD86 <AmiBlitz3.ab3@16076>   TST.b quickadd
0002CD8C <AmiBlitz3.ab3@16080>    MOVE.l destpointer,a0
0002CD92 <AmiBlitz3.ab3@16081>    CLR.b quickadd
0002CD98 <AmiBlitz3.ab3@16082>    CLR.l load_var_addr
0002CD9E <AmiBlitz3.ab3@16083>    SUB.l imm_addr,a0
0002CDA2 <AmiBlitz3.ab3@16084>    CMP.w #6,a0
0002CDA6 <AmiBlitz3.ab3@16085>    BEQ 'li10
0002CDAA <AmiBlitz3.ab3@16086>    CMP.w #4,a0
0002CDAE <AmiBlitz3.ab3@16087>    BNE.s 'li1
0002CDB4 <AmiBlitz3.ab3@16088>    CLR.l imm_addr
0002CDBA <AmiBlitz3.ab3@16089>    ADD.w #$a040-$200,-4(a4)
0002CDBC <AmiBlitz3.ab3@16090>  RTS
0002CDBE <AmiBlitz3.ab3@16093>    MOVE.l a4,a0
0002CDC4 <AmiBlitz3.ab3@16094>    SUB.l load_var_addr,a0
0002CDCA <AmiBlitz3.ab3@16095>    CMP.l #$a,a0
0002CDCE <AmiBlitz3.ab3@16096>    BNE 'l10e
0002CDD4 <AmiBlitz3.ab3@16097>    CLR.l load_var_addr
0002CDD8 <AmiBlitz3.ab3@16098>    MOVE.w -$8(a4),d1
0002CDDE <AmiBlitz3.ab3@16099>    MOVE.l -$4(a4),-$8(a4)
0002CDE2 <AmiBlitz3.ab3@16100>    MOVE.w d1,-$4(a4)
0002CDE8 <AmiBlitz3.ab3@16101>    SUB.w #$1980,-$a(a4)
0002CDEE <AmiBlitz3.ab3@16102>    SUBQ.l #2,destpointer
0002CDF0 <AmiBlitz3.ab3@16103>  RTS
0002CDF6 <AmiBlitz3.ab3@16106>   CLR.b quickadd
0002CDFA <AmiBlitz3.ab3@16107>  BRA 'l10
0002CE00 <AmiBlitz3.ab3@16110>    CLR.l imm_addr
0002CE04 <AmiBlitz3.ab3@16111>    TST.l -4(a4)                                            ;skip If ADD.l #0,dx
0002CE08 <AmiBlitz3.ab3@16112>    BNE 'doit
0002CE0E <AmiBlitz3.ab3@16113>    SUBQ.l #6,destpointer
0002CE10 <AmiBlitz3.ab3@16114>  RTS
0002CE16 <AmiBlitz3.ab3@16117>    ADD.w #$b080-$200,-6(a4)
0002CE18 <AmiBlitz3.ab3@16118>  RTS
0002CE1E <AmiBlitz3.ab3@16121>    MOVE.l destpointer,a0
0002CE24 <AmiBlitz3.ab3@16122>    SUB.l load_var_addr,a0
0002CE28 <AmiBlitz3.ab3@16123>    CMP.w #4,a0
0002CE2C <AmiBlitz3.ab3@16124>    BNE 'l10
0002CE30 <AmiBlitz3.ab3@16125>    CMP.b #3,d3
0002CE34 <AmiBlitz3.ab3@16126>    BNE 'lv1
0002CE3A <AmiBlitz3.ab3@16127>    CLR.l load_var_addr
0002CE40 <AmiBlitz3.ab3@16128>    ADD.w #$b080-$200,-4(a4)
0002CE42 <AmiBlitz3.ab3@16129>  RTS
0002CE46 <AmiBlitz3.ab3@16132>   CMP.b #2,d3
0002CE4A <AmiBlitz3.ab3@16133>   BNE 'l10
0002CE50 <AmiBlitz3.ab3@16134>   CLR.l load_var_addr
0002CE56 <AmiBlitz3.ab3@16135>   ADD.w #$a040-$200,-4(a4)
0002CE58 <AmiBlitz3.ab3@16136>  RTS
0002CE5E <AmiBlitz3.ab3@16139>   MOVE.w regnum,D3
0002CE60 <AmiBlitz3.ab3@16140>   MOVE.w a1,d1
0002CE62 <AmiBlitz3.ab3@16141>   OR.w D3,D1
0002CE64 <AmiBlitz3.ab3@16142>   ADDQ.w #1,D1
0002CE66 <AmiBlitz3.ab3@16143>   LSL.w #8,D3
0002CE68 <AmiBlitz3.ab3@16144>   LSL.w #1,D3
0002CE6A <AmiBlitz3.ab3@16145>   OR.w D3,D1
0002CE6E <AmiBlitz3.ab3@16146>  BRA.w writeword
0002CE72 <AmiBlitz3.ab3@16149>    CMP.b #3,d3
0002CE76 <AmiBlitz3.ab3@16150>    BCS 'sub1_lq10
0002CE7C <AmiBlitz3.ab3@16151>    TST.b quickadd
0002CE82 <AmiBlitz3.ab3@16155>    MOVE.l destpointer,a0
0002CE88 <AmiBlitz3.ab3@16156>    CLR.b quickadd
0002CE8E <AmiBlitz3.ab3@16157>    CLR.l load_var_addr
0002CE94 <AmiBlitz3.ab3@16158>    SUB.l imm_addr,a0
0002CE98 <AmiBlitz3.ab3@16159>    CMP.w #6,a0
0002CE9C <AmiBlitz3.ab3@16160>    BEQ 'sub1_li10
0002CEA0 <AmiBlitz3.ab3@16161>    CMP.w #4,a0
0002CEA4 <AmiBlitz3.ab3@16162>    BNE.s 'sub1_li1
0002CEAA <AmiBlitz3.ab3@16163>    CLR.l imm_addr
0002CEB0 <AmiBlitz3.ab3@16164>    ADD.w #$6040-$200,-4(a4)
0002CEB2 <AmiBlitz3.ab3@16165>  RTS
0002CEB4 <AmiBlitz3.ab3@16168>    MOVE.l a4,a0
0002CEBA <AmiBlitz3.ab3@16169>     SUB.l load_var_addr,a0
0002CEC0 <AmiBlitz3.ab3@16170>     CMP.l #$a,a0
0002CEC4 <AmiBlitz3.ab3@16171>     BNE 'sub1_l10e
0002CECA <AmiBlitz3.ab3@16172>    CLR.l load_var_addr
0002CECE <AmiBlitz3.ab3@16173>    MOVE.w -$8(a4),d1
0002CED4 <AmiBlitz3.ab3@16174>    MOVE.l -$4(a4),-$8(a4)
0002CED8 <AmiBlitz3.ab3@16175>    MOVE.w d1,-$4(a4)
0002CEDE <AmiBlitz3.ab3@16176>    SUB.w #$1b80,-$a(a4)
0002CEE4 <AmiBlitz3.ab3@16177>    SUBQ.l #2,destpointer
0002CEE6 <AmiBlitz3.ab3@16178>  RTS
0002CEEC <AmiBlitz3.ab3@16181>   CLR.b quickadd
0002CEF0 <AmiBlitz3.ab3@16182>  BRA 'sub1_l10
0002CEF6 <AmiBlitz3.ab3@16185>    CLR.l imm_addr
0002CEFC <AmiBlitz3.ab3@16186>    ADD.w #$7080-$200,-6(a4)
0002CEFE <AmiBlitz3.ab3@16187>  RTS
0002CF04 <AmiBlitz3.ab3@16190>    MOVE.l destpointer,a0
0002CF0A <AmiBlitz3.ab3@16191>    SUB.l load_var_addr,a0
0002CF0E <AmiBlitz3.ab3@16192>    CMP.w #4,a0
0002CF12 <AmiBlitz3.ab3@16193>    BNE 'sub1_l10
0002CF16 <AmiBlitz3.ab3@16194>    CMP.b #3,d3
0002CF1A <AmiBlitz3.ab3@16195>    BNE 'sub1_lv1
0002CF20 <AmiBlitz3.ab3@16196>    CLR.l load_var_addr
0002CF26 <AmiBlitz3.ab3@16197>    ADD.w #$7080-$200,-4(a4)
0002CF28 <AmiBlitz3.ab3@16198>  RTS
0002CF2C <AmiBlitz3.ab3@16201>    CMP.b #2,d3
0002CF30 <AmiBlitz3.ab3@16202>    BNE 'sub1_l10
0002CF36 <AmiBlitz3.ab3@16203>    CLR.l load_var_addr
0002CF3C <AmiBlitz3.ab3@16204>    ADD.w #$6040-$200,-4(a4)
0002CF3E <AmiBlitz3.ab3@16205>  RTS
0002CF44 <AmiBlitz3.ab3@16208>   MOVE.w regnum,D3
0002CF46 <AmiBlitz3.ab3@16209>   MOVE.w a1,d1
0002CF48 <AmiBlitz3.ab3@16210>   OR.w D3,D1
0002CF4A <AmiBlitz3.ab3@16211>   ADDQ.w #1,D1
0002CF4C <AmiBlitz3.ab3@16212>   LSL.w #8,D3
0002CF4E <AmiBlitz3.ab3@16213>   LSL.w #1,D3
0002CF50 <AmiBlitz3.ab3@16214>   OR.w D3,D1
0002CF54 <AmiBlitz3.ab3@16215> BRA.w writeword
0002CF56 <AmiBlitz3.ab3@16219>   MOVEQ #0,d0
0002CF5C <AmiBlitz3.ab3@16220>   MOVE.w regnum,d0
0002CF5E <AmiBlitz3.ab3@16221>   ADDQ #1,d0
0002CF60 <AmiBlitz3.ab3@16222>   ASL.w #8,d0
0002CF62 <AmiBlitz3.ab3@16223>   ASL.w #2,d0
0002CF68 <AmiBlitz3.ab3@16224>   MOVE.l #$f2000022,d1                                     ;fpu add
0002CF6A <AmiBlitz3.ab3@16225>   OR.l d0,d1
0002CF70 <AmiBlitz3.ab3@16226>   MOVE.w regnum,d0
0002CF72 <AmiBlitz3.ab3@16227>   ASL.w #7,d0
0002CF74 <AmiBlitz3.ab3@16228>   OR.l d0,d1
0002CF78 <AmiBlitz3.ab3@16229> BRA.w writelong
0002CF7E <AmiBlitz3.ab3@16236>   TST.b iee
0002CF82 <AmiBlitz3.ab3@16237>   BNE do_plus_float_fadd1
0002CF86 <AmiBlitz3.ab3@16238>   MOVE.w #$FFBE,D1                                         ;#-66,d1 org soruce ;floatadd
0002CF8C <AmiBlitz3.ab3@16241>    MOVE.w D1,libjsr+2
0002CF90 <AmiBlitz3.ab3@16242>    BSR.w savereg
0002CF92 <AmiBlitz3.ab3@16243>   MOVE.l D4,D1
0002CF96 <AmiBlitz3.ab3@16244>    BSR.w pokemovem
0002CF9A <AmiBlitz3.ab3@16245>   MOVE.w #$C900,D1
0002CF9E <AmiBlitz3.ab3@16246>    BSR.w Atokejsr
0002CFA2 <AmiBlitz3.ab3@16247>    BSR.w ritetod0
0002CFA8 <AmiBlitz3.ab3@16248>   MOVE.l libjsr,D1
0002CFAC <AmiBlitz3.ab3@16249>    BSR.w writelong
0002CFB0 <AmiBlitz3.ab3@16250>    BSR.w ritefromd0
0002CFB2 <AmiBlitz3.ab3@16251>   MOVE.l D5,D1
0002CFB6 <AmiBlitz3.ab3@16252> BRA.w pokemovem
0002CFBC <AmiBlitz3.ab3@16256>   MOVE.w regnum,D1
0002CFBE <AmiBlitz3.ab3@16257>   LSL.w #8,D1
0002CFC0 <AmiBlitz3.ab3@16258>   LSL.w #1,D1
0002CFC2 <AmiBlitz3.ab3@16259>   MOVE.w D1,-(A7)
0002CFC6 <AmiBlitz3.ab3@16260>   CMP.w #3072,d1
0002CFCA <AmiBlitz3.ab3@16261>   BEQ 'l1
0002CFD0 <AmiBlitz3.ab3@16262>   OR.w addcode,D1                                          ;move.l (a7)+,d0
0002CFD4 <AmiBlitz3.ab3@16263> BRA 'l2
0002CFD8 <AmiBlitz3.ab3@16266>    MOVE.w #$588f,d1                                        ;addq.l #4,a7
0002CFDC <AmiBlitz3.ab3@16269>    BSR.w writeword
0002CFDE <AmiBlitz3.ab3@16270>   MOVE.w (A7)+,D1
0002CFE4 <AmiBlitz3.ab3@16271>   OR.w addcode+2,D1                                        ;native string add.l d0,(a7)
0002CFE8 <AmiBlitz3.ab3@16272> BRA.w writeword
0002CFEC <AmiBlitz3.ab3@16278>   MOVE.w #$9040,D1
0002CFF0 <AmiBlitz3.ab3@16279> BRA.w doplus2
0002CFF4 <AmiBlitz3.ab3@16283>   MOVE.w #$9040,D1
0002CFF8 <AmiBlitz3.ab3@16284> BRA.w doplus2
0002CFFC <AmiBlitz3.ab3@16288>   MOVE.w #$9080,D1
0002D000 <AmiBlitz3.ab3@16289> BRA.w doplus2
0002D006 <AmiBlitz3.ab3@16293>    TST.b iee
0002D00A <AmiBlitz3.ab3@16294>     BNE 'fs1
0002D00E <AmiBlitz3.ab3@16295>   MOVE.w #$FFB8,D1                                         ;floatsub
0002D012 <AmiBlitz3.ab3@16296> BRA.w doflib
0002D014 <AmiBlitz3.ab3@16299>   MOVEQ #0,d0
0002D01A <AmiBlitz3.ab3@16300>   MOVE.w regnum,d0
0002D01C <AmiBlitz3.ab3@16301>   ADDQ #1,d0
0002D01E <AmiBlitz3.ab3@16302>   ASL.w #8,d0
0002D020 <AmiBlitz3.ab3@16303>   ASL.w #2,d0
0002D026 <AmiBlitz3.ab3@16304>   MOVE.l #$f2000028,d1
0002D028 <AmiBlitz3.ab3@16305>   OR.l d0,d1
0002D02E <AmiBlitz3.ab3@16306>   MOVE.w regnum,d0
0002D030 <AmiBlitz3.ab3@16307>   ASL.w #7,d0
0002D032 <AmiBlitz3.ab3@16308>   OR.l d0,d1
0002D036 <AmiBlitz3.ab3@16309> BRA.w writelong
0002D03A <AmiBlitz3.ab3@16315>   MOVE.w #$C1C0,D1
0002D03C <AmiBlitz3.ab3@16316>   MOVEQ.l #$02,D2                                          ;now a word
0002D040 <AmiBlitz3.ab3@16317> BRA.w doplus2
0002D044 <AmiBlitz3.ab3@16321>   MOVE.w #$C1C0,D1
0002D046 <AmiBlitz3.ab3@16322>   MOVEQ.l #$03,D2                                          ;now a long.
0002D04A <AmiBlitz3.ab3@16323> BRA.w doplus2
0002D04E <AmiBlitz3.ab3@16327>   MOVE.w #$CA00,D1                                         ;quickmul
0002D052 <AmiBlitz3.ab3@16328> BRA.w domylib
0002D058 <AmiBlitz3.ab3@16332>   TST.b fast
0002D05C <AmiBlitz3.ab3@16333>   BNE.s 'l10
0002D060 <AmiBlitz3.ab3@16334>   MOVE.w #$CA01,D1                                         ;writelongmul
0002D064 <AmiBlitz3.ab3@16335> BRA.w domylib
0002D06A <AmiBlitz3.ab3@16344>    MOVE.l destpointer,a0
0002D070 <AmiBlitz3.ab3@16345>    SUB.l imm_addr,a0
0002D074 <AmiBlitz3.ab3@16346>    CMP.w #6,a0
0002D078 <AmiBlitz3.ab3@16347>    BNE 'li1
0002D07A <AmiBlitz3.ab3@16348>    MOVEQ.l #2,d1
0002D07C <AmiBlitz3.ab3@16349>    MOVEQ #1,d3
0002D080 <AmiBlitz3.ab3@16352>   CMP.l -4(a4),d1
0002D084 <AmiBlitz3.ab3@16353>    BEQ 'oklsl
0002D086 <AmiBlitz3.ab3@16354>     LSL.l #1,d1
0002D08C <AmiBlitz3.ab3@16355>     ADD.l #1,d3
0002D092 <AmiBlitz3.ab3@16356>     CMP.l #9,d3
0002D096 <AmiBlitz3.ab3@16357>     BNE 'ag
0002D09A <AmiBlitz3.ab3@16358>    MOVE.w -2(a4),d1
0002D09E <AmiBlitz3.ab3@16359>    BSR writeword
0002D0A4 <AmiBlitz3.ab3@16360>    MOVE.w -6(a4),-4(a4)
0002D0AC <AmiBlitz3.ab3@16361>    MOVE.l #$4c3c0800,-8(a4)
0002D0B2 <AmiBlitz3.ab3@16362>    MOVE.w regnum,D3
0002D0B6 <AmiBlitz3.ab3@16363>    MULS #$1000,D3
0002D0BA <AmiBlitz3.ab3@16364>    OR.w D3,-6(a4)
0002D0C0 <AmiBlitz3.ab3@16365>    CLR.l load_var_addr
0002D0C6 <AmiBlitz3.ab3@16366>    CLR.l imm_addr
0002D0CA <AmiBlitz3.ab3@16367> BRA 'li3
0002D0CE <AmiBlitz3.ab3@16370>    CMP.w #8,d3
0002D0D2 <AmiBlitz3.ab3@16371>    BEQ 'ok
0002D0D4 <AmiBlitz3.ab3@16372>    ASL.l #1,d3
0002D0D6 <AmiBlitz3.ab3@16373>    ASL.l #8,d3
0002D0DA <AmiBlitz3.ab3@16374>    MOVE.w #$e188,d1
0002D0DC <AmiBlitz3.ab3@16375>    OR.w d3,d1
0002D0E0 <AmiBlitz3.ab3@16376>    MOVE.w d1,-6(a4)
0002D0E4 <AmiBlitz3.ab3@16377> BRA 'okls
0002D0EA <AmiBlitz3.ab3@16380>   MOVE.w #$e188,-6(a4)                                     ;lsl.l #,dx
0002D0F0 <AmiBlitz3.ab3@16383>   MOVE.w regnum,d3
0002D0F4 <AmiBlitz3.ab3@16384>    OR.b d3,-5(a4)
0002D0FA <AmiBlitz3.ab3@16385>    SUBQ.l #4,destpointer
0002D100 <AmiBlitz3.ab3@16386>    CLR.l load_var_addr
0002D106 <AmiBlitz3.ab3@16387>    CLR.l imm_addr
0002D10A <AmiBlitz3.ab3@16388> BRA 'li3
0002D110 <AmiBlitz3.ab3@16391>    MOVE.l destpointer,a0
0002D116 <AmiBlitz3.ab3@16392>    SUB.l load_var_addr,a0
0002D11A <AmiBlitz3.ab3@16393>    CMP.w #4,a0
0002D11E <AmiBlitz3.ab3@16394>    BNE 'li2
0002D122 <AmiBlitz3.ab3@16395>    MOVE.w -2(a4),d1
0002D126 <AmiBlitz3.ab3@16396>    BSR writeword
0002D12C <AmiBlitz3.ab3@16397>    MOVE.b #$4c,-6(a4)
0002D132 <AmiBlitz3.ab3@16398>    MOVE.w #$0800,-4(a4)
0002D138 <AmiBlitz3.ab3@16399>    MOVE.w regnum,D3
0002D13C <AmiBlitz3.ab3@16400>    MULS #$1000,d3
0002D140 <AmiBlitz3.ab3@16401>    OR.w D3,-4(a4)
0002D144 <AmiBlitz3.ab3@16402> BRA 'li3
0002D14A <AmiBlitz3.ab3@16405>    MOVE.l #$4c010800,d1
0002D150 <AmiBlitz3.ab3@16406>    MOVE.w regnum,D3
0002D152 <AmiBlitz3.ab3@16407>    EXT.l d3
0002D156 <AmiBlitz3.ab3@16408>    MULS #$1000,d3
0002D158 <AmiBlitz3.ab3@16409>    OR.w D3,d1
0002D15C <AmiBlitz3.ab3@16410>    MULS #$10,d3
0002D15E <AmiBlitz3.ab3@16411>    ADD.l d3,d1
0002D162 <AmiBlitz3.ab3@16412>    BSR writelong
0002D164 <AmiBlitz3.ab3@16417> RTS
0002D166 <AmiBlitz3.ab3@16421>   MOVE.w D1,-(A7)
0002D16A <AmiBlitz3.ab3@16422>    BSR.w savereg
0002D16C <AmiBlitz3.ab3@16423>   MOVE.l D4,D1
0002D170 <AmiBlitz3.ab3@16424>    BSR.w pokemovem
0002D174 <AmiBlitz3.ab3@16425>    BSR.w ritetod0
0002D176 <AmiBlitz3.ab3@16426>   MOVEQ #0,d1
0002D178 <AmiBlitz3.ab3@16427>   MOVE.w (A7)+,D1
0002D17E <AmiBlitz3.ab3@16428>   MOVE.l d1,lastinstruction
0002D182 <AmiBlitz3.ab3@16429>    BSR.w Atokejsr
0002D186 <AmiBlitz3.ab3@16430>    BSR.w ritefromd0
0002D188 <AmiBlitz3.ab3@16431>   MOVE.l D5,D1
0002D18C <AmiBlitz3.ab3@16432> BRA.w pokemovem
0002D192 <AmiBlitz3.ab3@16436>    TST.b iee
0002D196 <AmiBlitz3.ab3@16437>     BNE fm1
0002D19A <AmiBlitz3.ab3@16438>  MOVE.w #$FFB2,D1                                          ;floatmul
0002D19E <AmiBlitz3.ab3@16439> BRA.w doflib
0002D1A0 <AmiBlitz3.ab3@16442>   MOVEQ #0,d0
0002D1A6 <AmiBlitz3.ab3@16443>  MOVE.w regnum,d0
0002D1A8 <AmiBlitz3.ab3@16444>  ADDQ #1,d0
0002D1AA <AmiBlitz3.ab3@16445>  ASL.w #8,d0
0002D1AC <AmiBlitz3.ab3@16446>  ASL.w #2,d0
0002D1B2 <AmiBlitz3.ab3@16447>  MOVE.l #$f2000023,d1
0002D1B4 <AmiBlitz3.ab3@16448>  OR.l d0,d1
0002D1BA <AmiBlitz3.ab3@16449>  MOVE.w regnum,d0
0002D1BC <AmiBlitz3.ab3@16450>  ASL.w #7,d0
0002D1BE <AmiBlitz3.ab3@16451>  OR.l d0,d1
0002D1C2 <AmiBlitz3.ab3@16452> BRA.w writelong
0002D1C4 <AmiBlitz3.ab3@16456>   MOVE.w D2,-(A7)                                          ;dopow
0002D1C6 <AmiBlitz3.ab3@16457>   MOVE.w D2,D3
0002D1C8 <AmiBlitz3.ab3@16458>   MOVEQ.l #$05,D2
0002D1CC <AmiBlitz3.ab3@16459>    BSR.w convtypef
0002D1D2 <AmiBlitz3.ab3@16460>   ADDQ.w #1,regnum
0002D1D4 <AmiBlitz3.ab3@16461>   MOVE.w (A7)+,D3
0002D1D6 <AmiBlitz3.ab3@16462>   MOVEQ.l #$05,D2
0002D1DA <AmiBlitz3.ab3@16463>    BSR.w writeconvertcode
0002D1E0 <AmiBlitz3.ab3@16464>   SUBQ.w #1,regnum
0002D1E4 <AmiBlitz3.ab3@16465>    BSR.w nocando
0002D1EA <AmiBlitz3.ab3@16466>    TST.b fpu
0002D1EE <AmiBlitz3.ab3@16467>    BEQ 'old
0002D1F0 <AmiBlitz3.ab3@16468>    MOVEQ #0,d1
0002D1F6 <AmiBlitz3.ab3@16469>    MOVE.w regnum,d1
0002D1F8 <AmiBlitz3.ab3@16470>   MOVE.l d1,d0
0002D1FA <AmiBlitz3.ab3@16471>   ASL.w #7,d1
0002D1FC <AmiBlitz3.ab3@16472>   ASL.w #8,d0
0002D1FE <AmiBlitz3.ab3@16473>   ASL.w #2,d0
0002D200 <AmiBlitz3.ab3@16474>   OR.w d0,d1
0002D202 <AmiBlitz3.ab3@16475>   MOVE.l d1,-(a7)
0002D208 <AmiBlitz3.ab3@16477>    OR.l #$f2000016,d1                                       ;flog2.x fp0      ;fpu ^ pow
0002D20C <AmiBlitz3.ab3@16478>    BSR writelong
0002D212 <AmiBlitz3.ab3@16479>    MOVE.w regnum,d0
0002D214 <AmiBlitz3.ab3@16480>  ADDQ #1,d0
0002D216 <AmiBlitz3.ab3@16481>  ASL.w #8,d0
0002D218 <AmiBlitz3.ab3@16482>  ASL.w #2,d0
0002D21E <AmiBlitz3.ab3@16483>  MOVE.l #$f2000023,d1
0002D220 <AmiBlitz3.ab3@16484>  OR.l d0,d1
0002D226 <AmiBlitz3.ab3@16485>  MOVE.w regnum,d0
0002D228 <AmiBlitz3.ab3@16486>  ASL.w #7,d0
0002D22A <AmiBlitz3.ab3@16487>  OR.l d0,d1
0002D230 <AmiBlitz3.ab3@16488>    OR.l #$f2000023,d1                                      ;fmulx.x fp1,fp0
0002D234 <AmiBlitz3.ab3@16489>    BSR writelong
0002D236 <AmiBlitz3.ab3@16490>    MOVE.l (a7)+,d1
0002D23C <AmiBlitz3.ab3@16492>    OR.l #$f2000011,d1                                      ;ftwotox.x fp0
0002D240 <AmiBlitz3.ab3@16493>    BSR writelong
0002D242 <AmiBlitz3.ab3@16494> RTS
0002D246 <AmiBlitz3.ab3@16497>   MOVE.w #$6001,D1
0002D24A <AmiBlitz3.ab3@16498> BRA.w domylib
0002D24E <AmiBlitz3.ab3@16504>   MOVEA.l forthsp(PC),A0
0002D252 <AmiBlitz3.ab3@16505>   MOVE.w #$FFFF,-(A0)                                      ;#-1,-(a0) org source
0002D254 <AmiBlitz3.ab3@16506> RTS
0002D258 <AmiBlitz3.ab3@16512>   MOVE.w #$D400,D1
0002D25C <AmiBlitz3.ab3@16513> BRA.w domylib
0002D260 <AmiBlitz3.ab3@16517>   MOVE.w #$D401,D1
0002D264 <AmiBlitz3.ab3@16518> BRA.w domylib
0002D268 <AmiBlitz3.ab3@16522>    BSR.w nocando                                           ;modlib uses an alibjsr here!
0002D26C <AmiBlitz3.ab3@16523>   MOVE.w #$D402,D1
0002D270 <AmiBlitz3.ab3@16524> BRA.w domylib
0002D274 <AmiBlitz3.ab3@16528>   MOVE.w #$D403,D1
0002D276 <AmiBlitz3.ab3@16529>   MOVEQ.l #$02,D2                                          ;now a word.
0002D27A <AmiBlitz3.ab3@16530> BRA.w domylib
0002D27E <AmiBlitz3.ab3@16534>    BSR.w nocando                                           ;modlib lib uses an alibjsr!  ;domod float
0002D284 <AmiBlitz3.ab3@16535>   TST.b fpu
0002D288 <AmiBlitz3.ab3@16536>   BEQ 'old
0002D28A <AmiBlitz3.ab3@16537>   MOVEQ #0,d1
0002D290 <AmiBlitz3.ab3@16538>   MOVE.w regnum,d1                                         ;fpu mod
0002D292 <AmiBlitz3.ab3@16539>   MOVE.l d1,d0
0002D294 <AmiBlitz3.ab3@16540>   ADDQ.l #1,d1
0002D296 <AmiBlitz3.ab3@16541>   ASL.l #7,d0
0002D298 <AmiBlitz3.ab3@16542>   ASL.l #8,d1
0002D29A <AmiBlitz3.ab3@16543>   ASL.l #2,d1
0002D29C <AmiBlitz3.ab3@16544>   OR.l d0,d1
0002D29E <AmiBlitz3.ab3@16545>   MOVE.l d0,-(a7)
0002D2A4 <AmiBlitz3.ab3@16546>   OR.l #$f2000021,d1
0002D2A8 <AmiBlitz3.ab3@16547>   BSR writelong
0002D2AA <AmiBlitz3.ab3@16548>   MOVE.l (a7)+,d0
0002D2AC <AmiBlitz3.ab3@16549>  RTS
0002D2B0 <AmiBlitz3.ab3@16552>   MOVE.w #$D404,D1
0002D2B2 <AmiBlitz3.ab3@16553>   MOVEQ.l #$03,D2                                          ;now a long
0002D2B6 <AmiBlitz3.ab3@16554> BRA.w domylib
0002D2BA <AmiBlitz3.ab3@16562>   MOVE.w #$48C0,D1
0002D2C0 <AmiBlitz3.ab3@16563>   OR.w regnum,D1
0002D2C4 <AmiBlitz3.ab3@16564>    BSR.w writeword
0002D2C6 <AmiBlitz3.ab3@16565>   ADDQ.w #1,D1
0002D2CA <AmiBlitz3.ab3@16566>    BSR.w writeword
0002D2CE <AmiBlitz3.ab3@16569>    MOVE.w #$48C0,D1
0002D2D4 <AmiBlitz3.ab3@16570>   OR.w regnum,D1
0002D2D8 <AmiBlitz3.ab3@16571>    BSR.w writeword
0002D2DC <AmiBlitz3.ab3@16572>   MOVE.w #$81C0,D1
0002D2E0 <AmiBlitz3.ab3@16573> BRA.w doplus2
0002D2E6 <AmiBlitz3.ab3@16577>   TST.b fast
0002D2EA <AmiBlitz3.ab3@16578>   BNE.s 'l10
0002D2EE <AmiBlitz3.ab3@16579>   MOVE.w #$CB01,D1
0002D2F2 <AmiBlitz3.ab3@16580> BRA.w domylib
0002D2F6 <AmiBlitz3.ab3@16586>   BSR.w savereg
0002D2F8 <AmiBlitz3.ab3@16587>   MOVE.l D4,D1
0002D2FC <AmiBlitz3.ab3@16588>    BSR.w pokemovem
0002D300 <AmiBlitz3.ab3@16589>    BSR.w ritetod0
0002D306 <AmiBlitz3.ab3@16603>    MOVE.l #$4c410800,d1
0002D30A <AmiBlitz3.ab3@16604>    BSR writelong
0002D30E <AmiBlitz3.ab3@16607>   MOVE.w #$4e71,d1
0002D312 <AmiBlitz3.ab3@16609>    BSR.w ritefromd0
0002D314 <AmiBlitz3.ab3@16610>   MOVE.l D5,D1
0002D318 <AmiBlitz3.ab3@16611> BRA.w pokemovem
0002D31C <AmiBlitz3.ab3@16614>     CMP.w #8,d3
0002D320 <AmiBlitz3.ab3@16615>     BEQ 'ok
0002D322 <AmiBlitz3.ab3@16616>     ASL.l #1,d3
0002D324 <AmiBlitz3.ab3@16617>     ASL.l #8,d3
0002D328 <AmiBlitz3.ab3@16618>     MOVE.w #$e080,d1
0002D32A <AmiBlitz3.ab3@16619>     OR.w d3,d1
0002D32E <AmiBlitz3.ab3@16620> BRA 'oklsr2
0002D332 <AmiBlitz3.ab3@16623>   MOVE.w #$e080,d1                                         ;lsr.l #,dx
0002D338 <AmiBlitz3.ab3@16626>      SUBQ.l #6,destpointer
0002D33C <AmiBlitz3.ab3@16627>      BSR writeword
0002D33E <AmiBlitz3.ab3@16628>      MOVE.l (a7)+,d3
0002D340 <AmiBlitz3.ab3@16629>      MOVEQ #0,d1
0002D346 <AmiBlitz3.ab3@16630>      CLR.l load_var_addr
0002D34C <AmiBlitz3.ab3@16631>      CLR.l imm_addr
0002D350 <AmiBlitz3.ab3@16632> BRA pokemovem
0002D354 <AmiBlitz3.ab3@16636>   MOVE.w #$CB00,D1                                         ;quickdiv
0002D358 <AmiBlitz3.ab3@16637> BRA.w domylib
0002D35E <AmiBlitz3.ab3@16641>    TST.b iee
0002D362 <AmiBlitz3.ab3@16642>    BNE fdiv1
0002D366 <AmiBlitz3.ab3@16643>    MOVE.w #$FFAC,D1                                        ;floatdiv
0002D36A <AmiBlitz3.ab3@16644> BRA.w doflib
0002D36C <AmiBlitz3.ab3@16648>   MOVEQ #0,d0
0002D372 <AmiBlitz3.ab3@16649>   MOVE.w regnum,d0
0002D374 <AmiBlitz3.ab3@16650>   ADDQ #1,d0
0002D376 <AmiBlitz3.ab3@16651>   ASL.w #8,d0
0002D378 <AmiBlitz3.ab3@16652>   ASL.w #2,d0
0002D37E <AmiBlitz3.ab3@16653>   MOVE.l #$f2000020,d1                                     ;fpu div
0002D380 <AmiBlitz3.ab3@16654>   OR.l d0,d1
0002D386 <AmiBlitz3.ab3@16655>   MOVE.w regnum,d0
0002D388 <AmiBlitz3.ab3@16656>   ASL.w #7,d0
0002D38A <AmiBlitz3.ab3@16657>   OR.l d0,d1
0002D38E <AmiBlitz3.ab3@16658> BRA.w writelong
0002D392 <AmiBlitz3.ab3@16662>   MOVE.w #$C000,D1
0002D396 <AmiBlitz3.ab3@16663> BRA.w doplus2
0002D39A <AmiBlitz3.ab3@16667>   MOVE.w #$C040,D1
0002D39E <AmiBlitz3.ab3@16668> BRA.w doplus2
0002D3A2 <AmiBlitz3.ab3@16672>   MOVE.w #$C080,D1
0002D3A6 <AmiBlitz3.ab3@16673> BRA.w doplus2
0002D3AA <AmiBlitz3.ab3@16677>   MOVE.w #$8000,D1
0002D3AE <AmiBlitz3.ab3@16678> BRA.w doplus2
0002D3B2 <AmiBlitz3.ab3@16682>   MOVE.w #$8040,D1
0002D3B6 <AmiBlitz3.ab3@16683> BRA.w doplus2
0002D3BA <AmiBlitz3.ab3@16687>   MOVE.w #$8080,D1
0002D3BE <AmiBlitz3.ab3@16688> BRA.w doplus2
0002D3C2 <AmiBlitz3.ab3@16692>   MOVE.w #$B100,D1
0002D3C8 <AmiBlitz3.ab3@16695>    MOVE.w regnum,D3
0002D3CA <AmiBlitz3.ab3@16696>   OR.w D3,D1
0002D3CC <AmiBlitz3.ab3@16697>   ADDQ.w #1,D3
0002D3CE <AmiBlitz3.ab3@16698>   LSL.w #8,D3
0002D3D0 <AmiBlitz3.ab3@16699>   LSL.w #1,D3
0002D3D2 <AmiBlitz3.ab3@16700>   OR.w D3,D1
0002D3D6 <AmiBlitz3.ab3@16701> BRA.w writeword
0002D3DA <AmiBlitz3.ab3@16705>   MOVE.w #$B140,D1
0002D3DE <AmiBlitz3.ab3@16706> BRA.w doeor2
0002D3E2 <AmiBlitz3.ab3@16710>   MOVE.w #$B180,D1
0002D3E6 <AmiBlitz3.ab3@16711> BRA.w doeor2
0002D3EA <AmiBlitz3.ab3@16715>   MOVE.w #$E1A8,D1
0002D3EE <AmiBlitz3.ab3@16716> BRA.w shpoke
0002D3F2 <AmiBlitz3.ab3@16720>   MOVE.w #$E0A8,D1
0002D3F6 <AmiBlitz3.ab3@16721> BRA.w shpoke
0002D3FA <AmiBlitz3.ab3@16725>   MOVE.w #$E0A0,D1
0002D3FE <AmiBlitz3.ab3@16726> BRA.w shpoke
0002D400 <AmiBlitz3.ab3@16730>   MOVE.w D1,-(A7)
0002D406 <AmiBlitz3.ab3@16731>   ADDQ.w #1,regnum   ;make second a word!
0002D408 <AmiBlitz3.ab3@16732>   MOVE.w D2,-(A7)
0002D40A <AmiBlitz3.ab3@16733>   MOVE.w D2,D3
0002D40C <AmiBlitz3.ab3@16734>   MOVEQ.l #$02,D2
0002D410 <AmiBlitz3.ab3@16741>    BSR.w writeconvertcode
0002D412 <AmiBlitz3.ab3@16745>   MOVE.w (A7)+,D2     ;type
0002D418 <AmiBlitz3.ab3@16746>   SUBQ.w #1,regnum
0002D41C <AmiBlitz3.ab3@16747>   CMP.w #$4,D2        ;don't fuck with quix
0002D420 <AmiBlitz3.ab3@16748>    BEQ.w 'skip
0002D422 <AmiBlitz3.ab3@16749>   MOVE.w D2,D3
0002D424 <AmiBlitz3.ab3@16750>   MOVEQ.l #$03,D2
0002D428 <AmiBlitz3.ab3@16751>    BSR.w convtypef    ;make first (and current) a long
0002D42A <AmiBlitz3.ab3@16754>    MOVE.w (A7)+,D1
0002D430 <AmiBlitz3.ab3@16756>   MOVE.w regnum,D3
0002D432 <AmiBlitz3.ab3@16757>   OR.w D3,D1
0002D434 <AmiBlitz3.ab3@16758>   ADDQ.w #1,D3
0002D436 <AmiBlitz3.ab3@16759>   LSL.w #8,D3
0002D438 <AmiBlitz3.ab3@16760>   LSL.w #1,D3
0002D43A <AmiBlitz3.ab3@16761>   OR.w D3,D1
0002D43E <AmiBlitz3.ab3@16762> BRA.w writeword
0002D442 <AmiBlitz3.ab3@16766>   MOVE.w #$0100,D1
0002D446 <AmiBlitz3.ab3@16767>    BSR.w dothebit
0002D44C <AmiBlitz3.ab3@16769>   MOVE.w regnum,D1
0002D450 <AmiBlitz3.ab3@16770>   ORI.w #$56C0,D1    ;sne regat
0002D454 <AmiBlitz3.ab3@16771>    BSR.w writeword
0002D45A <AmiBlitz3.ab3@16773>   MOVE.w regnum,D1
0002D45E <AmiBlitz3.ab3@16774>   ORI.w #$4880,D1    ;ext.w D regat
0002D462 <AmiBlitz3.ab3@16775>    BSR.w writeword
0002D464 <AmiBlitz3.ab3@16777>   MOVEQ.l #$02,D2    ;type now WORD!
0002D466 <AmiBlitz3.ab3@16778> RTS
0002D46A <AmiBlitz3.ab3@16782>   MOVE.w #$01C0,D1
0002D46E <AmiBlitz3.ab3@16785>    BSR.w dothebit
0002D470 <AmiBlitz3.ab3@16787>   MOVEQ.l #$03,D2    ;type now LONG!
0002D472 <AmiBlitz3.ab3@16788> RTS
0002D476 <AmiBlitz3.ab3@16792>   MOVE.w #$0180,D1
0002D47A <AmiBlitz3.ab3@16793> BRA.w dothemip
0002D47E <AmiBlitz3.ab3@16797>   MOVE.w #$0140,D1
0002D482 <AmiBlitz3.ab3@16798> BRA.w dothemip
0002D484 <AmiBlitz3.ab3@16802>   MOVE.w D1,-(A7)
0002D486 <AmiBlitz3.ab3@16806>   MOVE.w D2,-(A7)
0002D488 <AmiBlitz3.ab3@16807>   MOVE.w D2,D3
0002D48A <AmiBlitz3.ab3@16808>   MOVEQ.l #$03,D2         ;first to long!
0002D48E <AmiBlitz3.ab3@16809>    BSR.w convtypef
0002D490 <AmiBlitz3.ab3@16811>   MOVE.w (A7)+,D3
0002D492 <AmiBlitz3.ab3@16812>   MOVEQ.l #$01,D2         ;second to byte!
0002D498 <AmiBlitz3.ab3@16813>   ADDQ.w #1,regnum
0002D49C <AmiBlitz3.ab3@16814>    BSR.w writeconvertcode
0002D4A2 <AmiBlitz3.ab3@16815>   SUBQ.w #1,regnum
0002D4A8 <AmiBlitz3.ab3@16817>   MOVE.w regnum,D1
0002D4AA <AmiBlitz3.ab3@16818>   MOVE.w D1,D2
0002D4AC <AmiBlitz3.ab3@16819>   ADDQ.w #1,D2
0002D4AE <AmiBlitz3.ab3@16820>   LSL.w #8,D2
0002D4B0 <AmiBlitz3.ab3@16821>   LSL.w #1,D2
0002D4B2 <AmiBlitz3.ab3@16822>   OR.w (A7)+,D1
0002D4B4 <AmiBlitz3.ab3@16823>   OR.w D2,D1
0002D4B8 <AmiBlitz3.ab3@16824> BRA.w writeword        ;btst regat+1,regat
0002D4BE <AmiBlitz3.ab3@16830>   MOVE.w regnum,D1
0002D4C2 <AmiBlitz3.ab3@16831>    BEQ.w 'skip
0002D4C6 <AmiBlitz3.ab3@16832>   ORI.w #$2000,D1
0002D4CA <AmiBlitz3.ab3@16833>    BSR.w writeword
0002D4CE <AmiBlitz3.ab3@16834>   ADDI.w #$201,D1
0002D4D2 <AmiBlitz3.ab3@16835>    BSR.w writeword
0002D4D4 <AmiBlitz3.ab3@16838> RTS
0002D4DA <AmiBlitz3.ab3@16844>   MOVE.w regnum,D1
0002D4DE <AmiBlitz3.ab3@16845>    BEQ.w 'skip
0002D4E0 <AmiBlitz3.ab3@16846>   LSL.w #8,D1
0002D4E2 <AmiBlitz3.ab3@16847>   LSL.w #1,D1
0002D4E6 <AmiBlitz3.ab3@16848>   ORI.w #$2000,D1
0002D4EA <AmiBlitz3.ab3@16849>    BSR.w writeword
0002D4EC <AmiBlitz3.ab3@16852> RTS
0002D4F2 <AmiBlitz3.ab3@16857>    CLR.b isconstantvalue
0002D4F8 <AmiBlitz3.ab3@16858>    CLR.l lastconstantvalue
0002D500 <AmiBlitz3.ab3@16860>    CMPI.w #$7,regnum
0002D504 <AmiBlitz3.ab3@16861>    BCS.w getelement2
0002D50A <AmiBlitz3.ab3@16863>   MOVE.l #$f2277700,d1                                     ;fmove.d fp6,-(a7)
0002D50E <AmiBlitz3.ab3@16864>   BSR writelong
0002D512 <AmiBlitz3.ab3@16865>   MOVE.w #$2F06,D1                                         ;d6 to stack
0002D516 <AmiBlitz3.ab3@16868>   CMP.w #$3,D2
0002D51A <AmiBlitz3.ab3@16869>    BCS.w 'skip
0002D51E <AmiBlitz3.ab3@16870>   MOVE.w #$2F06,D1
0002D522 <AmiBlitz3.ab3@16873>   BSR.w writeword
0002D524 <AmiBlitz3.ab3@16874>   MOVE.w D1,-(A7)
0002D52A <AmiBlitz3.ab3@16876>   SUBQ.w #1,regnum
0002D52E <AmiBlitz3.ab3@16877>    BSR.w getelement2
0002D534 <AmiBlitz3.ab3@16878>   ADDQ.w #1,regnum
0002D53A <AmiBlitz3.ab3@16881>   MOVE.l #$f2001b80,d1
0002D53E <AmiBlitz3.ab3@16882>   BSR writelong
0002D542 <AmiBlitz3.ab3@16884>   MOVE.w #$3E06,D1
0002D546 <AmiBlitz3.ab3@16885>   CMP.w #$3,D2
0002D54A <AmiBlitz3.ab3@16886>    BCS.w 'skip2
0002D54E <AmiBlitz3.ab3@16887>   MOVE.w #$2E06,D1
0002D552 <AmiBlitz3.ab3@16890>   BSR.w writeword
0002D554 <AmiBlitz3.ab3@16892>   MOVE.w (A7)+,D1
0002D558 <AmiBlitz3.ab3@16893>   ANDI.w #$F000,D1
0002D55C <AmiBlitz3.ab3@16894>   ORI.w #$C1F,D1
0002D562 <AmiBlitz3.ab3@16895>   JSR writeword
0002D568 <AmiBlitz3.ab3@16897>   MOVE.l #$f21f5700,d1                                     ;fmove.d (a7)+,fp6
0002D56C <AmiBlitz3.ab3@16898> BRA writelong
0002D570 <AmiBlitz3.ab3@16903>   BSR.w getelement2
0002D574 <AmiBlitz3.ab3@16904>   MOVE.w #$4440,D1
0002D578 <AmiBlitz3.ab3@16905>   CMP.w #$3,D2
0002D57C <AmiBlitz3.ab3@16906>    BCS.w 'doneg
0002D580 <AmiBlitz3.ab3@16907>   MOVE.w #$4480,D1
0002D584 <AmiBlitz3.ab3@16908>   CMP.w #$5,D2
0002D588 <AmiBlitz3.ab3@16909>    BCS.w 'doneg
0002D58C <AmiBlitz3.ab3@16910>   CMP.w #$6,D2
0002D590 <AmiBlitz3.ab3@16911>    BCC.w illoperr
0002D594 <AmiBlitz3.ab3@16912>   MOVE.w #$FFC4,D1   ; was -60
0002D598 <AmiBlitz3.ab3@16913>  BRA.w fdo2
0002D59E <AmiBlitz3.ab3@16916>   OR.w regnum,D1                                           ;negate
0002D5A4 <AmiBlitz3.ab3@16918>   CLR.l imm_addr
0002D5A8 <AmiBlitz3.ab3@16920> BRA.w writeword
0002D5AC <AmiBlitz3.ab3@16924>    BSR.w eval4
0002D5B0 <AmiBlitz3.ab3@16925>   CMP.w #")",D0
0002D5B4 <AmiBlitz3.ab3@16926>    BEQ.w 'done
0002D5B8 <AmiBlitz3.ab3@16927>   CMP.w #"}",D0
0002D5BC <AmiBlitz3.ab3@16928>    BNE.w brackets_                                         ;syntax error brackets
0002D5C0 <AmiBlitz3.ab3@16931> BRA.w get1bytemain
0002D5C4 <AmiBlitz3.ab3@16937>    BSR.w eval4
0002D5C8 <AmiBlitz3.ab3@16938>   CMP.w #$5,D2
0002D5CC <AmiBlitz3.ab3@16939>    BCC.w illoperr
0002D5D2 <AmiBlitz3.ab3@16940>   MOVE.w regnum,D1
0002D5D6 <AmiBlitz3.ab3@16941>   ORI.w #$4640,D1     ;not.w
0002D5DA <AmiBlitz3.ab3@16942>   CMP.w #$3,D2
0002D5DE <AmiBlitz3.ab3@16943>    BCS.w writeword
0002D5E2 <AmiBlitz3.ab3@16944>   EORI.w #$C0,D1
0002D5E6 <AmiBlitz3.ab3@16945> BRA.w writeword
0002D5E8 <AmiBlitz3.ab3@16949>   MOVEQ.l #$05,D2         ;return Pi.;move.l #x,dnf
0002D5EE <AmiBlitz3.ab3@16951>    TST.b fpu
0002D5F2 <AmiBlitz3.ab3@16952>   BEQ 'old
0002D5F8 <AmiBlitz3.ab3@16953> JMP fpupi
0002D5FE <AmiBlitz3.ab3@16957>   MOVE.w regnum,D1
0002D600 <AmiBlitz3.ab3@16958>   LSL.w #8,D1
0002D602 <AmiBlitz3.ab3@16959>   LSL.w #1,D1
0002D606 <AmiBlitz3.ab3@16960>   ORI.w #$203C,D1
0002D60A <AmiBlitz3.ab3@16961>    BSR.w writeword      ;move.l #x,dn
0002D610 <AmiBlitz3.ab3@16962>   MOVE.l #$C90FDA42,D1
0002D614 <AmiBlitz3.ab3@16963>    BSR.w writelong
0002D618 <AmiBlitz3.ab3@16964> BRA.w get1bytemain
0002D714 <AmiBlitz3.ab3@16972> forthstack:  Ds.l 63                                       ;ds.b  18*32 org source
0002D810 <AmiBlitz3.ab3@16973>              Ds.l 63
0002D858 <AmiBlitz3.ab3@16974>              Ds.l 18
0002D85C <AmiBlitz3.ab3@16975> forthsp:     Dc.l forthstack
0002D862 <AmiBlitz3.ab3@16978> JUMP_checkcast     JMP checkcast
0002D868 <AmiBlitz3.ab3@16979> JUMP_syntaxerropt4 JMP syntaxerropt4
0002D894 <AmiBlitz3.ab3@16987>    !fget
0002D898 <AmiBlitz3.ab3@16988>    CMP.b #$7e,d0
0002D89C <AmiBlitz3.ab3@16989>    BNE 'noc
0002D89E <AmiBlitz3.ab3@16990>    SUBQ.l #1,a5
0002D8A2 <AmiBlitz3.ab3@16991>    BSR get1bytemain
0002D8A6 <AmiBlitz3.ab3@16994>    CMP.b #"#",d0
0002D8AA <AmiBlitz3.ab3@16995>    BNE 'ld1
0002D8AE <AmiBlitz3.ab3@16996>    CMP.b #$22,(a5)
0002D8B2 <AmiBlitz3.ab3@16997>    BNE 'ld1
0002D8B8 <AmiBlitz3.ab3@16998>    JSR addimmi
0002D8BC <AmiBlitz3.ab3@17001>    CMP.b #$22,d0
0002D8C0 <AmiBlitz3.ab3@17002>    BNE 'l11
0002D8C6 <AmiBlitz3.ab3@17012>    NOT.w instringon
0002D8C8 <AmiBlitz3.ab3@17015>    TST.b d0
0002D8CC <AmiBlitz3.ab3@17016>    BPL 'l10
0002D8CE <AmiBlitz3.ab3@17017>    LSL.w #8,d0
0002D8D0 <AmiBlitz3.ab3@17018>    MOVE.b (a5)+,d0                      ; get blitzlib instruction with returnvalue(called in functions/statement)
0002D8D6 <AmiBlitz3.ab3@17019>    MOVE.l d0,lasttoken
0002D8DC <AmiBlitz3.ab3@17020>    MOVE.w d0,lastchar
0002D8E2 <AmiBlitz3.ab3@17021>    CLR.l rightsidetype                  ; blitzlibs do currently no type check
0002D8E8 <AmiBlitz3.ab3@17022>    CLR.w rightsideflagmask
0002D8EC <AmiBlitz3.ab3@17026>   CMP.w #"(",D0
0002D8F0 <AmiBlitz3.ab3@17027>    BEQ.w JUMP_checkcast                 ; was  beq bracket org source
0002D8F4 <AmiBlitz3.ab3@17032>   CMP.w #"{",D0
0002D8F8 <AmiBlitz3.ab3@17033>    BEQ.w bracket
0002D8FC <AmiBlitz3.ab3@17034>   CMP.w #$2D,D0         ;'-'
0002D900 <AmiBlitz3.ab3@17035>    BEQ.w negate
0002D904 <AmiBlitz3.ab3@17036>   CMP.w #-$7F77,D0      ; was #(opnot-opabcd)/$1c+$8000+fnum,
0002D908 <AmiBlitz3.ab3@17037>    BEQ.w notit
0002D90C <AmiBlitz3.ab3@17039>   MOVEA.l forthsp(PC),A1
0002D912 <AmiBlitz3.ab3@17040>   CMPA.l #forthsp,A1
0002D916 <AmiBlitz3.ab3@17041>    BCC.w conmemerr
0002D91C <AmiBlitz3.ab3@17043>   MOVE.l destpointer,(A1)+
0002D922 <AmiBlitz3.ab3@17044>   MOVE.l hunkoffsetbase,(A1)+
0002D928 <AmiBlitz3.ab3@17045>   MOVE.l lasta6,(A1)+
0002D92E <AmiBlitz3.ab3@17046>   MOVE.w lasta6,(A1)+
0002D930 <AmiBlitz3.ab3@17047>   CLR.w (A1)+
0002D932 <AmiBlitz3.ab3@17049>   CLR.w (A1)+
0002D938 <AmiBlitz3.ab3@17050>   MOVE.l A1,forthsp
0002D94A <AmiBlitz3.ab3@17056>    !compare2
0002D94E <AmiBlitz3.ab3@17058>    BEQ.w fetchnum
0002D952 <AmiBlitz3.ab3@17059>   CMP.w #".",D0
0002D956 <AmiBlitz3.ab3@17060>    BEQ.w fetchfrac
0002D95A <AmiBlitz3.ab3@17061>   CMP.w #"#",D0
0002D95E <AmiBlitz3.ab3@17062>    BEQ.w get_constant
0002D962 <AmiBlitz3.ab3@17063>   CMP.w #"$",D0
0002D966 <AmiBlitz3.ab3@17064>    BEQ.w get_hexconstant
0002D96A <AmiBlitz3.ab3@17065>   CMP.w #"%",D0
0002D96E <AmiBlitz3.ab3@17066>    BEQ.w fetchbin
0002D972 <AmiBlitz3.ab3@17067>   CMP.w #-$7FD1,D0    ; was #$8000+47,
0002D976 <AmiBlitz3.ab3@17068>    BEQ.w fetchsize
0002D97A <AmiBlitz3.ab3@17069>   CMP.w #-$7F46,D0    ; was #$8007+tnum,
0002D97E <AmiBlitz3.ab3@17070>    BEQ.w fetchpi
0002D982 <AmiBlitz3.ab3@17071>   CMP.w #-$7F3B,D0    ; was #$8000+tnum+18,
0002D986 <AmiBlitz3.ab3@17072>    BEQ.w fetchon
0002D98A <AmiBlitz3.ab3@17073>   CMP.w #-$7F3A,D0    ; was #$8000+tnum+19,
0002D98E <AmiBlitz3.ab3@17074>    BEQ.w fetchoff
0002D994 <AmiBlitz3.ab3@17076>   MOVE.w constmode,D1
0002D998 <AmiBlitz3.ab3@17077>    BEQ.w 'noasm
0002D9BA <AmiBlitz3.ab3@17079>    !compare1                                               ;bsr.w tstalpha
0002D9BE <AmiBlitz3.ab3@17081>    BEQ.w fetchasm
0002D9C2 <AmiBlitz3.ab3@17082>   CMP.w #$5F,D0     ;'_'
0002D9C6 <AmiBlitz3.ab3@17083>    BEQ.w fetchasm
0002D9CA <AmiBlitz3.ab3@17084>   CMP.w #$22,D0     ;'"'
0002D9CE <AmiBlitz3.ab3@17085>    BEQ.w fetchqasm
0002D9D2 <AmiBlitz3.ab3@17087>  BRA.w syntaxerr
0002D9D8 <AmiBlitz3.ab3@17090>   MOVE.w cfetchmode,D1
0002D9DC <AmiBlitz3.ab3@17091>   BEQ.w 'asmok
0002D9E0 <AmiBlitz3.ab3@17092>  BRA.w badconerr       ;we're trying to get a const here! 
0002D9E2 <AmiBlitz3.ab3@17095>   NOT.w -(A1)    ;set forth stack type to non-const
0002DA04 <AmiBlitz3.ab3@17100>   !compare1                                                ;bsr.w tstalpha
0002DA08 <AmiBlitz3.ab3@17102>    BEQ.w variable
0002DA0C <AmiBlitz3.ab3@17103>   CMP.w #$2A,D0     ;'*'
0002DA10 <AmiBlitz3.ab3@17104>    BEQ.w variable
0002DA14 <AmiBlitz3.ab3@17105>   CMP.w #$5C,D0     ;'\'
0002DA18 <AmiBlitz3.ab3@17106>    BEQ.w variable
0002DA1C <AmiBlitz3.ab3@17107>   CMP.w #$22,D0     ;'"'
0002DA20 <AmiBlitz3.ab3@17108>    BEQ.w litstring
0002DA24 <AmiBlitz3.ab3@17109>   BTST #$F,D0
0002DA28 <AmiBlitz3.ab3@17110>    BNE.w f_unction
0002DA2C <AmiBlitz3.ab3@17111>   CMP.w #"&",D0
0002DA30 <AmiBlitz3.ab3@17112>    BEQ.w getvaraddr                                          ;jump to & address of var code
0002DA34 <AmiBlitz3.ab3@17113>   CMP.w #"?",D0
0002DA38 <AmiBlitz3.ab3@17114>    BEQ.w qmark
0002DA3C <AmiBlitz3.ab3@17118>   CMP.b #"@",d0
0002DA40 <AmiBlitz3.ab3@17119>    BNE syntaxerr
0002DA46 <AmiBlitz3.ab3@17120>   TST.b newsyntax
0002DA4A <AmiBlitz3.ab3@17121>    BEQ JUMP_syntaxerropt4
0002DA50 <AmiBlitz3.ab3@17122>   MOVE.w regnum,D1
0002DA52 <AmiBlitz3.ab3@17123>   LSL.w #8,D1
0002DA54 <AmiBlitz3.ab3@17124>   LSL.w #1,D1
0002DA58 <AmiBlitz3.ab3@17125>   ORI.w #$203C,D1
0002DA5C <AmiBlitz3.ab3@17126>   BSR.w writeword
0002DA60 <AmiBlitz3.ab3@17127>   CMP.b #$22,(a5)
0002DA64 <AmiBlitz3.ab3@17128>    BNE syntaxerr
0002DA66 <AmiBlitz3.ab3@17129>   ADDQ #1,a5
0002DA68 <AmiBlitz3.ab3@17130>   MOVEQ #0,d0
0002DA6C <AmiBlitz3.ab3@17131>   CMP.b #1,d2
0002DA70 <AmiBlitz3.ab3@17132>    BEQ 'l3b
0002DA74 <AmiBlitz3.ab3@17133>   CMP.b #2,d2
0002DA78 <AmiBlitz3.ab3@17134>    BEQ 'l2b
0002DA7C <AmiBlitz3.ab3@17135>   CMP.b #4,d2
0002DA80 <AmiBlitz3.ab3@17136>    BEQ error_convert_types
0002DA82 <AmiBlitz3.ab3@17137>   MOVE.b (a5)+,d0
0002DA86 <AmiBlitz3.ab3@17138>   BEQ syntaxerr
0002DA8A <AmiBlitz3.ab3@17139>   CMP.b #$22,d0
0002DA8E <AmiBlitz3.ab3@17140>   BNE 'l1
0002DA92 <AmiBlitz3.ab3@17141>     MOVE.b #0,d0
0002DA96 <AmiBlitz3.ab3@17142>  BRA 'do
0002DA98 <AmiBlitz3.ab3@17145>   ASL.l #8,d0
0002DA9A <AmiBlitz3.ab3@17146>   MOVE.b (a5)+,d0
0002DA9E <AmiBlitz3.ab3@17147>   BEQ syntaxerr
0002DAA2 <AmiBlitz3.ab3@17148>   CMP.b #$22,d0
0002DAA6 <AmiBlitz3.ab3@17149>   BNE 'l2
0002DAAA <AmiBlitz3.ab3@17150>     MOVE.b #0,d0
0002DAAC <AmiBlitz3.ab3@17151>     ASR.l #8,d0
0002DAB0 <AmiBlitz3.ab3@17152>  BRA 'do
0002DAB2 <AmiBlitz3.ab3@17155>   ASL.l #8,d0
0002DAB4 <AmiBlitz3.ab3@17158>   MOVE.b (a5)+,d0
0002DAB8 <AmiBlitz3.ab3@17159>    BEQ syntaxerr
0002DABC <AmiBlitz3.ab3@17160>    CMP.b #$22,d0
0002DAC0 <AmiBlitz3.ab3@17161>    BNE 'l3
0002DAC4 <AmiBlitz3.ab3@17162>    MOVE.b #0,d0
0002DAC6 <AmiBlitz3.ab3@17163>    ASR.l #8,d0
0002DACA <AmiBlitz3.ab3@17164>  BRA 'do
0002DACC <AmiBlitz3.ab3@17167>   ASL.l #8,d0
0002DACE <AmiBlitz3.ab3@17170>   MOVE.b (a5)+,d0
0002DAD2 <AmiBlitz3.ab3@17171>    BEQ syntaxerr
0002DAD6 <AmiBlitz3.ab3@17172>    CMP.b #$22,d0
0002DADA <AmiBlitz3.ab3@17173>    BNE 'l4
0002DADE <AmiBlitz3.ab3@17174>    MOVE.b #0,d0
0002DAE0 <AmiBlitz3.ab3@17175>    ASR.l #8,d0
0002DAE4 <AmiBlitz3.ab3@17176>  BRA 'do
0002DAE8 <AmiBlitz3.ab3@17179>    CMP.b #$22,(a5)+
0002DAEC <AmiBlitz3.ab3@17180>    BNE error4char
0002DAEE <AmiBlitz3.ab3@17183>   MOVE.l d0,d1
0002DAF2 <AmiBlitz3.ab3@17184>     BSR writelong
0002DAF6 <AmiBlitz3.ab3@17185>     BSR get1bytemain
0002DAF8 <AmiBlitz3.ab3@17186> RTS
0002DAFC <AmiBlitz3.ab3@17191>   BSR.w get1bytemain
0002DB00 <AmiBlitz3.ab3@17192>   CMP.w #$2E,D0     ; '.'
0002DB04 <AmiBlitz3.ab3@17193>    BEQ.b sizeobj
0002DB0E <AmiBlitz3.ab3@17199>   MOVE.w oldqflag,instringon
0002DB14 <AmiBlitz3.ab3@17200>   MOVEA.l lastsourcepos,A5
0002DB16 <AmiBlitz3.ab3@17202>   MOVE.w D2,-(A7)
0002DB1A <AmiBlitz3.ab3@17203>    BSR.w getparameter2
0002DB1E <AmiBlitz3.ab3@17204>    BEQ.w syntaxerr
0002DB24 <AmiBlitz3.ab3@17205>   LEA varbase,A2
0002DB28 <AmiBlitz3.ab3@17206>    BSR.w findvariable
0002DB2C <AmiBlitz3.ab3@17207>    BNE.w notypeerr         ;!
0002DB30 <AmiBlitz3.ab3@17210>   MOVE.w $4(A2),D3
0002DB32 <AmiBlitz3.ab3@17211>   EXT.l D3
0002DB34 <AmiBlitz3.ab3@17212>   MOVE.w (A7)+,D2
0002DB38 <AmiBlitz3.ab3@17213> BRA.w fetchnum2
0002DB3A <AmiBlitz3.ab3@17217>   MOVE.w D2,-(A7)
0002DB3E <AmiBlitz3.ab3@17218>    BSR.w getparameter2
0002DB42 <AmiBlitz3.ab3@17219>    BEQ.w syntaxerr
0002DB48 <AmiBlitz3.ab3@17220>   LEA newtypebase,A2
0002DB4C <AmiBlitz3.ab3@17221>    BSR.w findtype
0002DB50 <AmiBlitz3.ab3@17222>    BNE.w notypeerr
0002DB52 <AmiBlitz3.ab3@17223>   MOVEQ.l #$00,D3
0002DB56 <AmiBlitz3.ab3@17224>   CMP.w #$5C,D0     ;'\'
0002DB5A <AmiBlitz3.ab3@17225>    BNE.w 'jty
0002DB5E <AmiBlitz3.ab3@17226>    BSR.w getparameter2
0002DB62 <AmiBlitz3.ab3@17227>    BEQ.w syntaxerr
0002DB66 <AmiBlitz3.ab3@17228>   LEA $4(A2),A2
0002DB6A <AmiBlitz3.ab3@17229>    BSR.w findvariable2
0002DB6E <AmiBlitz3.ab3@17230>    BNE.w noofferr
0002DB72 <AmiBlitz3.ab3@17231>   MOVE.w $4(A2),D3
0002DB76 <AmiBlitz3.ab3@17232>  BRA.w 'jty2
0002DB7A <AmiBlitz3.ab3@17235>   MOVE.w $8(A2),D3
0002DB7C <AmiBlitz3.ab3@17238>   MOVE.w (A7)+,D2
0002DB80 <AmiBlitz3.ab3@17239> BRA.w fetchnum2
0002DB82 <AmiBlitz3.ab3@17243>   MOVEQ.l #-$01,D3
0002DB86 <AmiBlitz3.ab3@17244>    BSR.w get1bytemain
0002DB8A <AmiBlitz3.ab3@17245> BRA.w fetchnum2
0002DB8C <AmiBlitz3.ab3@17249>   MOVEQ.l #$00,D3
0002DB90 <AmiBlitz3.ab3@17250>    BSR.w get1bytemain
0002DB94 <AmiBlitz3.ab3@17251> BRA.w fetchnum2
0002DB98 <AmiBlitz3.ab3@17257>   CMP.w #$30,D0     ;'0'
0002DB9C <AmiBlitz3.ab3@17258>    BCS.w 'no
0002DBA0 <AmiBlitz3.ab3@17259>   CMP.w #$39,D0     ;'9'
0002DBA4 <AmiBlitz3.ab3@17260>    BLS.w 'yes
0002DBA8 <AmiBlitz3.ab3@17261>   ANDI.w #$FFDF,D0
0002DBAC <AmiBlitz3.ab3@17262>   CMP.w #$46,D0     ;'F'
0002DBB0 <AmiBlitz3.ab3@17263>    BHI.w 'no
0002DBB4 <AmiBlitz3.ab3@17264>   CMP.w #$41,D0     ;'A'
0002DBB8 <AmiBlitz3.ab3@17265>    BCS.w 'no
0002DBBA <AmiBlitz3.ab3@17268>    CMP.w D0,D0
0002DBBC <AmiBlitz3.ab3@17271> RTS
0002DBC0 <AmiBlitz3.ab3@17275>   CMP.w #$31,D0    ;'1'
0002DBC4 <AmiBlitz3.ab3@17276>    BEQ.w 'ok
0002DBC8 <AmiBlitz3.ab3@17277>   CMP.w #$30,D0    ;'0'
0002DBCA <AmiBlitz3.ab3@17280> RTS
0002DBCC <AmiBlitz3.ab3@17285>    MOVEQ #0,d0
0002DBCE <AmiBlitz3.ab3@17286>    MOVE.b (a5)+,d0
0002DBD0 <AmiBlitz3.ab3@17287>    MOVE.b (a5)+,d0
0002DBD4 <AmiBlitz3.ab3@17288>    BSR ishex
0002DBD8 <AmiBlitz3.ab3@17289>    BNE syntaxerr
0002DBDC <AmiBlitz3.ab3@17290>    SUBI.w #$30,D0
0002DBE0 <AmiBlitz3.ab3@17291>    CMP.w #$9,D0
0002DBE4 <AmiBlitz3.ab3@17292>    BLS.w 'l1
0002DBE6 <AmiBlitz3.ab3@17293>    SUBQ.w #7,D0
0002DBE8 <AmiBlitz3.ab3@17296>    MOVE.l d0,d1
0002DBEA <AmiBlitz3.ab3@17297>    MOVE.b (a5)+,d0
0002DBEE <AmiBlitz3.ab3@17298>      BSR ishex
0002DBF2 <AmiBlitz3.ab3@17299>     BNE syntaxerr
0002DBF4 <AmiBlitz3.ab3@17300>     LSL.l #4,d1
0002DBF8 <AmiBlitz3.ab3@17301>     SUBI.w #$30,D0
0002DBFC <AmiBlitz3.ab3@17302>    CMP.w #$9,D0
0002DC00 <AmiBlitz3.ab3@17303>    BLS.w 'l2
0002DC02 <AmiBlitz3.ab3@17304>    SUBQ.w #7,D0
0002DC04 <AmiBlitz3.ab3@17307>   ADD.l d1,d0
0002DC06 <AmiBlitz3.ab3@17308> RTS
0002DC0A <AmiBlitz3.ab3@17312>    BSR.w get1bytemain
0002DC0E <AmiBlitz3.ab3@17313>    BSR.w ishex
0002DC12 <AmiBlitz3.ab3@17314>    BNE.w syntaxerr
0002DC14 <AmiBlitz3.ab3@17315>   MOVEQ.l #$00,D3
0002DC18 <AmiBlitz3.ab3@17317>   CMP.w #5,d2
0002DC1C <AmiBlitz3.ab3@17318>   BNE 'loop
0002DC22 <AmiBlitz3.ab3@17319>   CMP.l #newtype_double,a2
0002DC26 <AmiBlitz3.ab3@17320>   BEQ 'doit
0002DC2C <AmiBlitz3.ab3@17321>   CMP.l #newtype_float,a2
0002DC30 <AmiBlitz3.ab3@17322>   BNE 'loop
0002DC38 <AmiBlitz3.ab3@17325>    fmove.s #0,fp0
0002DC3E <AmiBlitz3.ab3@17328>   TST.b fpu
0002DC42 <AmiBlitz3.ab3@17329>   BEQ 'loop
0002DC48 <AmiBlitz3.ab3@17330>   fmove.w #16,fp1
0002DC4C <AmiBlitz3.ab3@17331>   fmul.x fp1,fp0
0002DC50 <AmiBlitz3.ab3@17332>   SUBI.w #$30,D0
0002DC54 <AmiBlitz3.ab3@17333>   CMP.w #$9,D0
0002DC58 <AmiBlitz3.ab3@17334>    BLS.w 'skipa
0002DC5A <AmiBlitz3.ab3@17335>   SUBQ.w #7,D0
0002DC5E <AmiBlitz3.ab3@17338>    fmove.w d0,fp1
0002DC62 <AmiBlitz3.ab3@17339>    fadd.x fp1,fp0
0002DC66 <AmiBlitz3.ab3@17340>    BSR.w get1bytemain
0002DC6A <AmiBlitz3.ab3@17341>    BSR.w ishex
0002DC6E <AmiBlitz3.ab3@17342>    BEQ.w 'loopa
0002DC72 <AmiBlitz3.ab3@17343>  BRA.w nofpregload
0002DC78 <AmiBlitz3.ab3@17347>   CMP.l #$10000000,D3
0002DC7C <AmiBlitz3.ab3@17348>    BCC.w overerr
0002DC7E <AmiBlitz3.ab3@17349>   LSL.l #4,D3
0002DC82 <AmiBlitz3.ab3@17350>   SUBI.w #$30,D0
0002DC86 <AmiBlitz3.ab3@17351>   CMP.w #$9,D0
0002DC8A <AmiBlitz3.ab3@17352>    BLS.w 'skip
0002DC8C <AmiBlitz3.ab3@17353>   SUBQ.w #7,D0
0002DC8E <AmiBlitz3.ab3@17356>   OR.w D0,D3
0002DC92 <AmiBlitz3.ab3@17357>    BSR.w get1bytemain
0002DC96 <AmiBlitz3.ab3@17358>    BSR.w ishex
0002DC9A <AmiBlitz3.ab3@17359>    BEQ.w 'loop
0002DC9E <AmiBlitz3.ab3@17360> BRA.w fetchnum2
0002DCA2 <AmiBlitz3.ab3@17364>    BSR.w get1bytemain
0002DCA6 <AmiBlitz3.ab3@17365>    BSR.w checkbin
0002DCAA <AmiBlitz3.ab3@17366>    BNE.w syntaxerr
0002DCAC <AmiBlitz3.ab3@17367>    MOVEQ.l #$00,D3
0002DCAE <AmiBlitz3.ab3@17370>    LSL.l #1,D3
0002DCB2 <AmiBlitz3.ab3@17371>    BCS.w overerr
0002DCB6 <AmiBlitz3.ab3@17372>   SUBI.w #$30,D0
0002DCB8 <AmiBlitz3.ab3@17373>   OR.w D0,D3
0002DCBC <AmiBlitz3.ab3@17374>    BSR.w get1bytemain
0002DCC0 <AmiBlitz3.ab3@17375>    BSR.w checkbin
0002DCC4 <AmiBlitz3.ab3@17376>    BEQ.w 'loop
0002DCC8 <AmiBlitz3.ab3@17377> BRA.w fetchnum2
0002DCCA <AmiBlitz3.ab3@17381>    MOVE.w d2,-(A7)
0002DCD2 <AmiBlitz3.ab3@17383>    MOVE.b #0,automode
0002DCD6 <AmiBlitz3.ab3@17384>    CMP.b #"@",(a5)
0002DCDA <AmiBlitz3.ab3@17385>    BNE 'l1
0002DCDC <AmiBlitz3.ab3@17386>    ADDQ.l #1,a5
0002DCE4 <AmiBlitz3.ab3@17387>    MOVE.b #1,automode
0002DCE8 <AmiBlitz3.ab3@17388>    BSR getparameter2
0002DCEC <AmiBlitz3.ab3@17389>    BSR findlabel2
0002DCF0 <AmiBlitz3.ab3@17390>    BNE 'addit
0002DCF4 <AmiBlitz3.ab3@17391>  BRA errormsg_autocount
0002DCF8 <AmiBlitz3.ab3@17394>   BSR.w addlabelhash
0002DD00 <AmiBlitz3.ab3@17395>   MOVE.l #$1,$4(A2)
0002DD04 <AmiBlitz3.ab3@17396>   MOVEM.l a2/a5,-(a7)
0002DD0A <AmiBlitz3.ab3@17397>   MOVE.w lastchar,-(a7)
0002DD10 <AmiBlitz3.ab3@17398>   LEA autostorename,a5
0002DD14 <AmiBlitz3.ab3@17399>   BSR getparameter2
0002DD18 <AmiBlitz3.ab3@17400>   BSR findlabel2
0002DD1C <AmiBlitz3.ab3@17401>   BEQ 'found
0002DD20 <AmiBlitz3.ab3@17402>   BSR.w addlabelhash
0002DD28 <AmiBlitz3.ab3@17403>   MOVE.l #$1,$4(A2)
0002DD30 <AmiBlitz3.ab3@17404>   MOVE.l #0,8(a2)
0002DD32 <AmiBlitz3.ab3@17407>    MOVE.w (a7)+,d0
0002DD38 <AmiBlitz3.ab3@17408>    MOVE.w d0,lastchar
0002DD3C <AmiBlitz3.ab3@17409>   MOVE.l 8(a2),d3
0002DD44 <AmiBlitz3.ab3@17410>   ADD.l #1,8(a2)
0002DD48 <AmiBlitz3.ab3@17411>   MOVEM.l (a7)+,a2/a5
0002DD4C <AmiBlitz3.ab3@17412>   MOVE.l d3,8(a2)
0002DD50 <AmiBlitz3.ab3@17413>   MOVE.l $8(A2),D3
0002DD54 <AmiBlitz3.ab3@17414>  BRA.l 'l3
0002DD58 <AmiBlitz3.ab3@17418>   BSR.w getparameter2
0002DD5E <AmiBlitz3.ab3@17420>     TST.b incnif
0002DD62 <AmiBlitz3.ab3@17421>     BEQ 'lc1
0002DD66 <AmiBlitz3.ab3@17422>     BSR.w findlabel2
0002DD6A <AmiBlitz3.ab3@17423>     BNE 'l5
0002DD6C <AmiBlitz3.ab3@17424>     MOVEQ #1,d3
0002DD6E <AmiBlitz3.ab3@17425>     MOVE.w (A7)+,D2
0002DD72 <AmiBlitz3.ab3@17426>  BRA fetchnum2
0002DD74 <AmiBlitz3.ab3@17429>   MOVEQ #0,d3
0002DD76 <AmiBlitz3.ab3@17430>     MOVE.w (A7)+,D2
0002DD7A <AmiBlitz3.ab3@17431>  BRA fetchnum2
0002DD7E <AmiBlitz3.ab3@17435>    BSR.w findlabel2
0002DD82 <AmiBlitz3.ab3@17436>    BNE.w cnferr
0002DD8A <AmiBlitz3.ab3@17439>    CMPI.l #$1,$4(A2)
0002DD8E <AmiBlitz3.ab3@17440>    BNE.w cnferr
0002DD92 <AmiBlitz3.ab3@17443>    MOVE.l $8(A2),D3
0002DD94 <AmiBlitz3.ab3@17444>    MOVE.w (A7)+,D2
0002DD98 <AmiBlitz3.ab3@17445> BRA.w fetchnum2     ;to right type.
0002DD9E <AmiBlitz3.ab3@17450>   CLR.w vartype
0002DDA6 <AmiBlitz3.ab3@17451>   MOVE.b #3,peekaddrsize
0002DDAA <AmiBlitz3.ab3@17453>   BSR.w ampersand2
0002DDB0 <AmiBlitz3.ab3@17455>   MOVE.l a2,rightsidetype
0002DDBA <AmiBlitz3.ab3@17456>   MOVE.w flagmask,rightsideflagmask
0002DDBC <AmiBlitz3.ab3@17458>   MOVEQ.l #$03,D2
0002DDBE <AmiBlitz3.ab3@17459> RTS
0002DDC2 <AmiBlitz3.ab3@17463>    BSR.w get1bytemain
0002DDD4 <AmiBlitz3.ab3@17465>    !compare2
0002DDD8 <AmiBlitz3.ab3@17466>    BEQ andop2
0002DDDC <AmiBlitz3.ab3@17468>    BSR.w getparameter
0002DDE0 <AmiBlitz3.ab3@17469>    BSR.w fetchvars
0002DDE4 <AmiBlitz3.ab3@17470>    BSR.w calcvar
0002DDE8 <AmiBlitz3.ab3@17472>   CMP.b #$7,D2
0002DDEC <AmiBlitz3.ab3@17473>    BNE.w 'notst
0002DDF0 <AmiBlitz3.ab3@17474>   BTST #$F,D2
0002DDF4 <AmiBlitz3.ab3@17475>    BNE.w 'algot2
0002DDFA <AmiBlitz3.ab3@17476>   MOVE.w D3,stamp2+2
0002DE00 <AmiBlitz3.ab3@17477>   MOVE.l stamp2,D1
0002DE04 <AmiBlitz3.ab3@17478>    BSR.w pokela5s
0002DE08 <AmiBlitz3.ab3@17479>  BRA.w 'algot
0002DE0E <AmiBlitz3.ab3@17482>   MOVE.w regnum,D1
0002DE10 <AmiBlitz3.ab3@17483>   LSL.w #8,D1
0002DE12 <AmiBlitz3.ab3@17484>   LSL.w #1,D1
0002DE18 <AmiBlitz3.ab3@17485>   OR.w stamp,D1
0002DE1C <AmiBlitz3.ab3@17486>    BSR.w writeword
0002DE1E <AmiBlitz3.ab3@17487>  RTS
0002DE22 <AmiBlitz3.ab3@17490>   BTST #$F,D2
0002DE26 <AmiBlitz3.ab3@17491>    BNE.w 'algot
0002DE2C <AmiBlitz3.ab3@17492>   MOVE.w D3,leaamp+2
0002DE32 <AmiBlitz3.ab3@17493>   MOVE.l leaamp,D1
0002DE36 <AmiBlitz3.ab3@17494>    BSR.w pokela5s
0002DE3C <AmiBlitz3.ab3@17497>   MOVE.w regnum,D1
0002DE3E <AmiBlitz3.ab3@17498>   LSL.w #8,D1
0002DE40 <AmiBlitz3.ab3@17499>   LSL.w #1,D1
0002DE46 <AmiBlitz3.ab3@17500>   OR.w leaamp2,D1
0002DE4A <AmiBlitz3.ab3@17501> BRA.w writeword
0002DE4E <AmiBlitz3.ab3@17506>   MOVE.w #$D200,D1     ; was #ern,
0002DE52 <AmiBlitz3.ab3@17507>    BSR.w Atokejsr
0002DE54 <AmiBlitz3.ab3@17508>   MOVEQ.l #$03,D2
0002DE56 <AmiBlitz3.ab3@17509> RTS
0002DE5A <AmiBlitz3.ab3@17513> addrcode:  Dc.b $20,$6D,$00,$00                            ;MOVEA.L $0000(A5),A0
0002DE5C <AmiBlitz3.ab3@17514>            Dc.b $D0,$C0                                    ;ADDA.W  D0,A0
0002DE5E <AmiBlitz3.ab3@17515>            Dc.b $20,$08                                    ;MOVE.L  A0,D0
0002DE62 <AmiBlitz3.ab3@17521>    BSR.w get1bytemain
0002DE64 <AmiBlitz3.ab3@17523>   MOVE.w D0,D1
0002DE68 <AmiBlitz3.ab3@17524>    BPL.w syntaxerr
0002DE6A <AmiBlitz3.ab3@17525>   MOVE.w D2,-(A7)
0002DE6E <AmiBlitz3.ab3@17526>   BCLR #$F,D1
0002DE72 <AmiBlitz3.ab3@17527>    BSR.w searchinstr
0002DE76 <AmiBlitz3.ab3@17528>   MOVE.l $12(A2),D0
0002DE7A <AmiBlitz3.ab3@17529>   TST.w -$2(A2,D0.L)
0002DE7E <AmiBlitz3.ab3@17530>    BEQ.w freeerr
0002DE80 <AmiBlitz3.ab3@17531>   MOVE.w (A7)+,D2
0002DE82 <AmiBlitz3.ab3@17532> RTS
0002DE86 <AmiBlitz3.ab3@17536>   MOVE.l $0(A5),D0
0002DE8A <AmiBlitz3.ab3@17537>    BNE.b ucodeskip
0002DE8C <AmiBlitz3.ab3@17538>   MOVEQ.l #-$01,D0
0002DE90 <AmiBlitz3.ab3@17539> BRA.b usedcodef
0002DE94 <AmiBlitz3.ab3@17542>   SUB.l $0(A5),D0
0002DE96 <AmiBlitz3.ab3@17545>   LSR.w #8,D0
0002DE9A <AmiBlitz3.ab3@17550>    MOVE.l $0(A5),D0
0002DE9E <AmiBlitz3.ab3@17551>    BNE.b ucodeskip2
0002DEA0 <AmiBlitz3.ab3@17552>   MOVEQ.l #-$01,D0
0002DEA4 <AmiBlitz3.ab3@17553> BRA.b usedcode2f
0002DEA8 <AmiBlitz3.ab3@17556>   SUB.l $0(A5),D0                                          ;usedcode2
0002DEAA <AmiBlitz3.ab3@17557>   LSR.w #8,D0
0002DEAC <AmiBlitz3.ab3@17560>   LSR.w #8,D0
0002DEAE <AmiBlitz3.ab3@17565>   MOVE.l D0,-(A7)
0002DEB0 <AmiBlitz3.ab3@17568>   MOVE.l (A7)+,D0
0002DEB2 <AmiBlitz3.ab3@17571>   MOVE.l D0,D0
0002DEB6 <AmiBlitz3.ab3@17577>   BSR.w fetchit
0002DEBA <AmiBlitz3.ab3@17579>   MOVE.w -$2(A2,D0.L),D3
0002DEBE <AmiBlitz3.ab3@17580>   CMP.w #$9,D3
0002DEC2 <AmiBlitz3.ab3@17581>    BCC.w 'skip
0002DEC6 <AmiBlitz3.ab3@17585>   LEA usedcode(PC),A0
0002DECA <AmiBlitz3.ab3@17586>   LEA usedcodef(PC),A1
0002DED0 <AmiBlitz3.ab3@17588>   ANDI.w #$F1FF,$E+4(A0)                                   ;and #$f1ff,ucodediv-usedcode(a0) org source
0002DED4 <AmiBlitz3.ab3@17589>   ANDI.w #$7,D3
0002DED6 <AmiBlitz3.ab3@17590>   LSL.w #8,D3
0002DED8 <AmiBlitz3.ab3@17591>   LSL.w #1,D3
0002DEDC <AmiBlitz3.ab3@17592>   OR.w D3,$E+4(A0)                                         ;or  d3,ucodediv-usedcode(a0) org source
0002DEE0 <AmiBlitz3.ab3@17593>  BRA.w 'skip2
0002DEE4 <AmiBlitz3.ab3@17598>   LEA usedcode2(PC),A0
0002DEE8 <AmiBlitz3.ab3@17599>   LEA usedcode2f(PC),A1
0002DEEE <AmiBlitz3.ab3@17601>   ANDI.w #$F1FF,$10+4(A0)                                  ;and #$f1ff,ucodediv2-usedcode2(a0) org source
0002DEF0 <AmiBlitz3.ab3@17602>   SUBQ.w #8,D3
0002DEF2 <AmiBlitz3.ab3@17603>   LSL.w #8,D3
0002DEF4 <AmiBlitz3.ab3@17604>   LSL.w #1,D3
0002DEF8 <AmiBlitz3.ab3@17605>   OR.w D3,$10+4(A0)                                        ;or  d3,ucodediv2-usedcode2(a0) org source
0002DEFC <AmiBlitz3.ab3@17608>   MOVE.w -$6(A2,D0.L),D3
0002DF00 <AmiBlitz3.ab3@17609>   MOVE.w D3,$C+4(A0)                                       ;move d3,ucodeskip-usedcode+2(a0) org source
0002DF02 <AmiBlitz3.ab3@17610>   ADDQ.w #4,D3
0002DF06 <AmiBlitz3.ab3@17611>   MOVE.w D3,$2(A0)
0002DF0C <AmiBlitz3.ab3@17612>   MOVE.w regnum,D1
0002DF10 <AmiBlitz3.ab3@17613>    BEQ.w 'skip3
0002DF14 <AmiBlitz3.ab3@17614>   MOVE.w usedprep(PC),D1
0002DF18 <AmiBlitz3.ab3@17615>    BSR.w writeword
0002DF1C <AmiBlitz3.ab3@17618>   BSR.w pokecode
0002DF22 <AmiBlitz3.ab3@17619>   MOVE.w regnum,D1
0002DF26 <AmiBlitz3.ab3@17620>    BEQ.w 'skip4
0002DF28 <AmiBlitz3.ab3@17621>   LSL.w #8,D1
0002DF2A <AmiBlitz3.ab3@17622>   LSL.w #1,D1
0002DF2E <AmiBlitz3.ab3@17623>   OR.w usedfix(PC),D1
0002DF32 <AmiBlitz3.ab3@17624>    BSR.w writeword
0002DF36 <AmiBlitz3.ab3@17625>   MOVE.w useddone(PC),D1
0002DF3A <AmiBlitz3.ab3@17626>    BSR.w writeword
0002DF3C <AmiBlitz3.ab3@17629>    MOVEQ.l #$02,D2
0002DF40 <AmiBlitz3.ab3@17630> BRA.w get1bytemain
0002DF44 <AmiBlitz3.ab3@17638>    BSR.w fetchit
0002DF46 <AmiBlitz3.ab3@17640>   MOVEQ.l #$00,D3
0002DF4A <AmiBlitz3.ab3@17641>   MOVE.w -$4(A2,D0.L),D3
0002DF4E <AmiBlitz3.ab3@17642>    BSR.w get1bytemain
0002DF52 <AmiBlitz3.ab3@17643> BRA.w fetchnum2
0002DF56 <AmiBlitz3.ab3@17650>    BSR.w get1bytemain    ;get the token
0002DF58 <AmiBlitz3.ab3@17651>   MOVE.w D0,-(A7)
0002DF5C <AmiBlitz3.ab3@17652>    BSR.w get1bytemain    ;and the bracket?
0002DF60 <AmiBlitz3.ab3@17653>   CMP.w #$28,D0          ;'('
0002DF64 <AmiBlitz3.ab3@17654>    BNE.w syntaxerr
0002DF66 <AmiBlitz3.ab3@17655>   MOVE.w (A7)+,D0
0002DF6A <AmiBlitz3.ab3@17656>    BSR.w getmaxel
0002DF6E <AmiBlitz3.ab3@17657>    BSR.w reget
0002DF72 <AmiBlitz3.ab3@17658>   CMP.w #$29,D0          ;')'
0002DF76 <AmiBlitz3.ab3@17659>    BNE.w syntaxerr
0002DF7A <AmiBlitz3.ab3@17663>   LEA addrcode(PC),A0
0002DF7E <AmiBlitz3.ab3@17664>   LEA addrcodef(PC),A1
0002DF84 <AmiBlitz3.ab3@17665>   MOVE.w -$6(A2),$2(A0) ;x(a5)
0002DF88 <AmiBlitz3.ab3@17666>   MOVE.w $4(A0),D1
0002DF8C <AmiBlitz3.ab3@17667>   ANDI.w #$FFF8,D1
0002DF92 <AmiBlitz3.ab3@17668>   OR.w regnum,D1
0002DF96 <AmiBlitz3.ab3@17669>   MOVE.w D1,$4(A0)      ;add Dregat,a0
0002DF9A <AmiBlitz3.ab3@17670>   MOVE.w $6(A0),D1
0002DF9E <AmiBlitz3.ab3@17671>   ANDI.w #$F1FF,D1
0002DFA4 <AmiBlitz3.ab3@17672>   MOVE.w regnum,D0
0002DFA6 <AmiBlitz3.ab3@17673>   LSL.w #8,D0
0002DFA8 <AmiBlitz3.ab3@17674>   LSL.w #1,D0
0002DFAA <AmiBlitz3.ab3@17675>   OR.w D0,D1
0002DFAE <AmiBlitz3.ab3@17676>   MOVE.w D1,$6(A0)      ;move.l a0,Dregat
0002DFB2 <AmiBlitz3.ab3@17677>    BSR.w pokecode
0002DFB4 <AmiBlitz3.ab3@17678>   MOVEQ.l #$03,D2       ;now a long
0002DFB8 <AmiBlitz3.ab3@17679> BRA.w get1bytemain
0002DFBC <AmiBlitz3.ab3@17685>   CMP.w #-$7F4D,D0     ; was #$8000+tnum,
0002DFC0 <AmiBlitz3.ab3@17686>    BHI.w 'overasm
0002DFC4 <AmiBlitz3.ab3@17687>  BRA.w syntaxerr
0002DFC8 <AmiBlitz3.ab3@17692>   CMP.w #NullTokenID,d0                                ;#$b581 check for lib 107 token 1 "NULL" form elomorsyslib
0002DFCC <AmiBlitz3.ab3@17693>    BNE 'nonull
0002DFD2 <AmiBlitz3.ab3@17694>    MOVE.l d0,lastinstruction
0002DFD6 <AmiBlitz3.ab3@17695>    MOVE.w #$7000,d1                                            ;asm instr moveq #0,dx
0002DFDC <AmiBlitz3.ab3@17696>    MOVE.w regnum,d0
0002DFDE <AmiBlitz3.ab3@17697>    ASL.l #7,d0
0002DFE0 <AmiBlitz3.ab3@17698>    ASL.l #2,d0
0002DFE2 <AmiBlitz3.ab3@17699>    OR.l d0,d1
0002DFE6 <AmiBlitz3.ab3@17700>    BSR writeword
0002DFEC <AmiBlitz3.ab3@17701>    JSR get1bytemain
0002DFEE <AmiBlitz3.ab3@17702>   RTS
0002DFF2 <AmiBlitz3.ab3@17705>   CMP.w #$c982,d0
0002DFF6 <AmiBlitz3.ab3@17706>    BNE nonew_
0002DFF8 <AmiBlitz3.ab3@17709>   MOVE.l a5,-(a7)
0002DFFE <AmiBlitz3.ab3@17710>   MOVE.w lastchar,-(a7)
0002E004 <AmiBlitz3.ab3@17711>   JSR get1bytemain
0002E008 <AmiBlitz3.ab3@17712>   CMP.w #"(",d0                                             ; use oldcode
0002E00C <AmiBlitz3.ab3@17713>   BNE 'newcode
0002E012 <AmiBlitz3.ab3@17714>   JSR get1bytemain
0002E016 <AmiBlitz3.ab3@17715>   CMP.w #")",d0
0002E01A <AmiBlitz3.ab3@17716>   BEQ 'newcode
0002E020 <AmiBlitz3.ab3@17717>   MOVE.w (a7)+,lastchar
0002E022 <AmiBlitz3.ab3@17718>   MOVE.l (a7)+,a5
0002E028 <AmiBlitz3.ab3@17719>   MOVE.w lastchar,d0
0002E02C <AmiBlitz3.ab3@17720>   BRA nonew_
0002E02E <AmiBlitz3.ab3@17723>   MOVE.l a0,-(a7)
0002E034 <AmiBlitz3.ab3@17724>   TST.b blitzparloop
0002E038 <AmiBlitz3.ab3@17725>   BNE 'err
0002E03E <AmiBlitz3.ab3@17726>   TST.b funcparloop
0002E042 <AmiBlitz3.ab3@17727>   BNE 'err
0002E046 <AmiBlitz3.ab3@17728>   BRA 'ok
0002E04C <AmiBlitz3.ab3@17731>   JMP errornewnotincalls
0002E052 <AmiBlitz3.ab3@17734>   MOVE.l #$203c0000,d1
0002E056 <AmiBlitz3.ab3@17735>   BSR writelong                                            ; 68k asm move.l #$xx,d0
0002E058 <AmiBlitz3.ab3@17736>   MOVEQ #0,d1
0002E05C <AmiBlitz3.ab3@17737>   MOVE.w 8(a0),d1
0002E060 <AmiBlitz3.ab3@17738>   BSR writeword
0002E064 <AmiBlitz3.ab3@17739>   MOVE.w #$7200,d1                                         ; 68k asm "moveq #0,d1"
0002E068 <AmiBlitz3.ab3@17740>   BSR writeword
0002E06C <AmiBlitz3.ab3@17741>   MOVE.w #$C002,D1                                         ;call function to alloc global mem
0002E070 <AmiBlitz3.ab3@17742>   BSR.w tokejsr2
0002E072 <AmiBlitz3.ab3@17743>   MOVE.l (a7)+,a0
0002E074 <AmiBlitz3.ab3@17744>   ADDQ.l #6,a7                      ; a5 need not restore
0002E078 <AmiBlitz3.ab3@17745>   CMP.w #")",d0
0002E07C <AmiBlitz3.ab3@17746>   BNE 'nobracket
0002E082 <AmiBlitz3.ab3@17747>   JSR get1bytemain
0002E084 <AmiBlitz3.ab3@17750> RTS
0002E088 <AmiBlitz3.ab3@17754>   CMP.w #-$7F4A,D0      ; was #$8003+tnum,
0002E08C <AmiBlitz3.ab3@17755>    BEQ.w doern
0002E090 <AmiBlitz3.ab3@17756>   CMP.w #-$7F48,D0      ; was #$8005+tnum,
0002E094 <AmiBlitz3.ab3@17757>    BEQ.w doaddr
0002E098 <AmiBlitz3.ab3@17758>   CMP.w #-$7F3C,D0      ; was #$8011+tnum,
0002E09C <AmiBlitz3.ab3@17759>    BEQ.w domaximum
0002E0A0 <AmiBlitz3.ab3@17760>   CMP.w #-$7F2F,D0      ; was #$801e+tnum,
0002E0A4 <AmiBlitz3.ab3@17761>    BEQ.w doused
0002E0A6 <AmiBlitz3.ab3@17763>   MOVE.w D2,-(A7)       ;remember old type!
0002E0A8 <AmiBlitz3.ab3@17764>   MOVE.w D0,D1
0002E0AC <AmiBlitz3.ab3@17765>   BCLR #$F,D1
0002E0B0 <AmiBlitz3.ab3@17769>    BSR.w searchinstr
0002E0B2 <AmiBlitz3.ab3@17770>   MOVE.w (A3),D1
0002E0B6 <AmiBlitz3.ab3@17771>   BTST #$1,D1
0002E0BA <AmiBlitz3.ab3@17772>    BEQ.w noreturn_                                         ;syntax error noreturn
0002E0BE <AmiBlitz3.ab3@17773>   BTST #$2,D1
0002E0C2 <AmiBlitz3.ab3@17774>    BNE.w amigalib
0002E0C4 <AmiBlitz3.ab3@17780>   LSR.w #8,D1
0002E0CA <AmiBlitz3.ab3@17781>   BTST #$3,$1(A3)
0002E0CE <AmiBlitz3.ab3@17782>    BEQ.w 'no0
0002E0D4 <AmiBlitz3.ab3@17784>    JSR sizespec2
0002E0DA <AmiBlitz3.ab3@17788>    CLR.l rightsidetype
0002E0E0 <AmiBlitz3.ab3@17789>    CLR.w rightsideflagmask
0002E0E2 <AmiBlitz3.ab3@17791>    MOVE.w D1,-(A7)                                         ;is library instruction
0002E0E6 <AmiBlitz3.ab3@17792>   CMP.w #$7,D1
0002E0EA <AmiBlitz3.ab3@17793>    BNE.w 'notst0
0002E0EC <AmiBlitz3.ab3@17794>   MOVE.l A2,-(A7)
0002E0F0 <AmiBlitz3.ab3@17795>    BSR.w makesbase
0002E0F2 <AmiBlitz3.ab3@17796>   MOVEA.l (A7)+,A2
0002E0F6 <AmiBlitz3.ab3@17799>     BSR.w savem
0002E0F8 <AmiBlitz3.ab3@17800>   MOVE.w D3,-(A7)        ;the movem regs
0002E0FC <AmiBlitz3.ab3@17802>    BSR.w get1bytemain
0002E0FE <AmiBlitz3.ab3@17803>   MOVEQ.l #$00,D1
0002E102 <AmiBlitz3.ab3@17804>   CMP.w #$28,D0          ;'('
0002E106 <AmiBlitz3.ab3@17805>    BNE.w 'nopars
0002E10C <AmiBlitz3.ab3@17806>    JSR countpees
0002E10E <AmiBlitz3.ab3@17807>   TST.w D1
0002E112 <AmiBlitz3.ab3@17808>    BEQ.w syntaxerr
0002E116 <AmiBlitz3.ab3@17809>  BRA.w 'skip0
0002E120 <AmiBlitz3.ab3@17814>   MOVE.w oldqflag,instringon
0002E126 <AmiBlitz3.ab3@17815>   MOVEA.l lastsourcepos,A5
0002E12C <AmiBlitz3.ab3@17819>    MOVE.w regnum,-(A7)
0002E136 <AmiBlitz3.ab3@17821>    MOVE.w regnum,regnumstore
0002E13C <AmiBlitz3.ab3@17822>    TST.b fpu
0002E140 <AmiBlitz3.ab3@17823>             BEQ 'nofloat
0002E146 <AmiBlitz3.ab3@17824>             CMP.w #$ffff,28(a3)
0002E14A <AmiBlitz3.ab3@17825>             BNE 'nofloat
0002E150 <AmiBlitz3.ab3@17826>             CMP.w #$3c01,34(a3)                            ;val do nofpu stuff
0002E154 <AmiBlitz3.ab3@17827>             BEQ 'nofloat
0002E15A <AmiBlitz3.ab3@17828>             CMP.w #$3c02,34(a3)                            ;int skip
0002E15E <AmiBlitz3.ab3@17829>             BEQ 'quick1
0002E162 <AmiBlitz3.ab3@17830>             CMP.b #5,(a3)
0002E166 <AmiBlitz3.ab3@17831>             BNE 'nofloat
0002E16C <AmiBlitz3.ab3@17834>             CLR.l load_var_addr
0002E170 <AmiBlitz3.ab3@17835>  BRA 'isfpu
0002E176 <AmiBlitz3.ab3@17839>    CLR.w regnum
0002E178 <AmiBlitz3.ab3@17842>    MOVE.w D1,-(A7)
0002E17E <AmiBlitz3.ab3@17843>   BTST #$3,$1(A3)
0002E182 <AmiBlitz3.ab3@17844>    BEQ.w 'no2
0002E186 <AmiBlitz3.ab3@17865>   MOVE.w $6(A7),D1
0002E18C <AmiBlitz3.ab3@17867>   MOVE.w d1,peeksize
0002E190 <AmiBlitz3.ab3@17878>   ORI.w #$7000,D1
0002E194 <AmiBlitz3.ab3@17879>   BSR.w writeword                                          ;write peekmode
0002E19A <AmiBlitz3.ab3@17882>   ADDQ.w #1,regnum
0002E19C <AmiBlitz3.ab3@17883>   MOVE.w (A7),D1
0002E1A4 <AmiBlitz3.ab3@17887>   MOVE.w 2(a7),tempregnum
0002E1AA <AmiBlitz3.ab3@17888>   MOVE.w parnum,-(a7)                                       ;7.2014 parnum need store to allow functioncall in parameter >6
0002E1B0 <AmiBlitz3.ab3@17889>   CLR.w parnum                                              ;7.2014
0002E1B6 <AmiBlitz3.ab3@17891>   JSR dolibtoke                                             ;write code of blitzfunc
0002E1BC <AmiBlitz3.ab3@17893>   MOVE.w (a7)+,parnum                                       ;7.2014 new restore parnum
0002E1BE <AmiBlitz3.ab3@17895>   TST.w (A7)+
0002E1C2 <AmiBlitz3.ab3@17896>   BEQ.w 'skip
0002E1C6 <AmiBlitz3.ab3@17897>   CMP.w #")",D0                                             ; check if ) here for correct end of blitzlib function call
0002E1CA <AmiBlitz3.ab3@17898>   BNE.w errorbracketmiss                                    ; was syntax error
0002E1D0 <AmiBlitz3.ab3@17900>   CLR.l lasttoken
0002E1D4 <AmiBlitz3.ab3@17902>   BSR.w get1bytemain
0002E1D6 <AmiBlitz3.ab3@17905>    MOVE.w (A7)+,D1
0002E1DC <AmiBlitz3.ab3@17906>    MOVE.w D1,regnum
0002E1E0 <AmiBlitz3.ab3@17907>    BEQ.w 'skip2
0002E1E6 <AmiBlitz3.ab3@17909>    CMP.w #$3c01,24(a2)                                     ;val skipped
0002E1EA <AmiBlitz3.ab3@17910>    BNE 'noval
0002E1F0 <AmiBlitz3.ab3@17911>    TST.b fpu
0002E1F4 <AmiBlitz3.ab3@17912>    BEQ 'noval
0002E1FA <AmiBlitz3.ab3@17913>    CLR.l load_var_addr
0002E1FC <AmiBlitz3.ab3@17914>    MOVEQ #0,d1
0002E202 <AmiBlitz3.ab3@17915>    MOVE.w regnum,d1
0002E204 <AmiBlitz3.ab3@17916>    LSL.l #7,d1
0002E20A <AmiBlitz3.ab3@17917>    OR.l #$f2000000,d1
0002E20E <AmiBlitz3.ab3@17918>    BSR writelong
0002E212 <AmiBlitz3.ab3@17919>  BRA 'skip2
0002E218 <AmiBlitz3.ab3@17922>    CMP.w #$3c02,24(a2)                                     ;int skipped
0002E21C <AmiBlitz3.ab3@17923>    BEQ 'quick
0002E220 <AmiBlitz3.ab3@17924>    CMP.b #5,d2
0002E224 <AmiBlitz3.ab3@17925>    BNE 'nofpu2
0002E22A <AmiBlitz3.ab3@17926>    TST.b fpu
0002E22E <AmiBlitz3.ab3@17927>    BEQ 'nofpu2
0002E234 <AmiBlitz3.ab3@17932>    CLR.l load_var_addr
0002E238 <AmiBlitz3.ab3@17933>  BRA 'skip2
0002E23A <AmiBlitz3.ab3@17937>   LSL.w #8,D1
0002E23C <AmiBlitz3.ab3@17938>   LSL.w #1,D1
0002E240 <AmiBlitz3.ab3@17939>   ORI.w #$2000,D1
0002E244 <AmiBlitz3.ab3@17940>   BSR.w writeword      ;move.l d0,regat                                    ;write move.l d0,dx
0002E24A <AmiBlitz3.ab3@17942>   TST.b fpu
0002E24E <AmiBlitz3.ab3@17943>   BEQ 'skip2
0002E250 <AmiBlitz3.ab3@17944>   MOVEQ #0,d1
0002E256 <AmiBlitz3.ab3@17945>   MOVE.w regnum,d1
0002E258 <AmiBlitz3.ab3@17946>   LSL.l #7,d1
0002E25E <AmiBlitz3.ab3@17947>   OR.l #$f2000000,d1
0002E260 <AmiBlitz3.ab3@17952>        MOVE.w (A7)+,D3
0002E264 <AmiBlitz3.ab3@17953>        BEQ.w 'nomovem
0002E26A <AmiBlitz3.ab3@17955>        TST.b fpu
0002E26E <AmiBlitz3.ab3@17956>        BEQ 'nofpu3
0002E270 <AmiBlitz3.ab3@17957>       MOVE.l d0,-(a7)
0002E272 <AmiBlitz3.ab3@17958>        MOVE.l a0,-(a7)
0002E278 <AmiBlitz3.ab3@17959>        MOVE.l stacktrack,d1
0002E27E <AmiBlitz3.ab3@17960>        LEA fpustackbase,a0
0002E286 <AmiBlitz3.ab3@17961>        MOVE.w 0(a0,d1),regmask
0002E288 <AmiBlitz3.ab3@17962>        MOVE.l (a7)+,a0
0002E28C <AmiBlitz3.ab3@17963>       MOVE.w #8,d0
0002E290 <AmiBlitz3.ab3@17966>       BEQ 'ready
0002E296 <AmiBlitz3.ab3@17967>       BTST d0,regmask
0002E29A <AmiBlitz3.ab3@17968>       BEQ 'noa7
0002E29C <AmiBlitz3.ab3@17969>       MOVEQ #0,d1
0002E29E <AmiBlitz3.ab3@17970>       MOVE.w d0,d1
0002E2A0 <AmiBlitz3.ab3@17971>       SUBQ.w #1,d1
0002E2A2 <AmiBlitz3.ab3@17972>       ASL #7,d1
0002E2A8 <AmiBlitz3.ab3@17974>       OR.l #$f21f5400,d1                                   ;fmove.d (a7)+
0002E2AC <AmiBlitz3.ab3@17975>       BSR writelong
0002E2B2 <AmiBlitz3.ab3@17976>       SUBQ.l #2,stacktrack
0002E2B4 <AmiBlitz3.ab3@17979>       SUBQ.w #1,d0
0002E2B8 <AmiBlitz3.ab3@17980>       BNE 'loop
0002E2BA <AmiBlitz3.ab3@17983>       MOVE.l (a7)+,d0
0002E2C0 <AmiBlitz3.ab3@17984>       SUBQ.l #2,stacktrack                                 ;int track
0002E2C4 <AmiBlitz3.ab3@17988>    MOVE.w #$4CDF,D1
0002E2C8 <AmiBlitz3.ab3@17989>    BSR.w writeword                                         ;write movem.l (a7)+,
0002E2CA <AmiBlitz3.ab3@17990>   MOVEQ.l #$00,D1
0002E2CC <AmiBlitz3.ab3@17991>   MOVEQ.l #$0F,D4
0002E2CE <AmiBlitz3.ab3@17994>     LSL.w #1,D3
0002E2D0 <AmiBlitz3.ab3@17995>     ROXR.w #1,D1
0002E2D4 <AmiBlitz3.ab3@17996>   DBF D4,'loopsw
0002E2D8 <AmiBlitz3.ab3@17997>    BSR.w writeword      ;poke movem (a7)+...
0002E2DE <AmiBlitz3.ab3@17999>    TST.b fast
0002E2E2 <AmiBlitz3.ab3@18000>    BEQ 'nomovem
0002E2E8 <AmiBlitz3.ab3@18001>    TST.w regnum
0002E2EC <AmiBlitz3.ab3@18002>    BEQ 'nomovem
0002E2F2 <AmiBlitz3.ab3@18003>    CMP.w #$3c0e,$1c(a3)                                    ;true
0002E2F6 <AmiBlitz3.ab3@18004>    BNE 'l1b
0002E2FC <AmiBlitz3.ab3@18005>    MOVE.w regnum,d1
0002E2FE <AmiBlitz3.ab3@18006>    ASL.l #8,d1
0002E300 <AmiBlitz3.ab3@18007>    ASL.l #1,d1
0002E304 <AmiBlitz3.ab3@18008>    OR.w #$70ff,d1
0002E30E <AmiBlitz3.ab3@18009>    SUB.l #12,destpointer
0002E312 <AmiBlitz3.ab3@18010>    BSR writeword
0002E318 <AmiBlitz3.ab3@18013>   CMP.w #$3c0f,$1c(a3)                                     ;false
0002E31C <AmiBlitz3.ab3@18014>    BNE 'l2b
0002E322 <AmiBlitz3.ab3@18015>     MOVE.w regnum,d1
0002E324 <AmiBlitz3.ab3@18016>     ASL.l #8,d1
0002E326 <AmiBlitz3.ab3@18017>     ASL.l #1,d1
0002E32A <AmiBlitz3.ab3@18018>     OR.w #$7000,d1
0002E334 <AmiBlitz3.ab3@18019>     SUB.l #12,destpointer
0002E338 <AmiBlitz3.ab3@18020>     BSR writeword
0002E33A <AmiBlitz3.ab3@18025>    MOVE.w (A7)+,D2
0002E33E <AmiBlitz3.ab3@18026>   CMP.w #$7,D2                                             ;destination var type
0002E342 <AmiBlitz3.ab3@18027>    BNE.w 'notst
0002E348 <AmiBlitz3.ab3@18028>   MOVE.w putstlen,D1
0002E34E <AmiBlitz3.ab3@18029>   OR.w regnum,D1
0002E352 <AmiBlitz3.ab3@18030>    BSR.w writeword
0002E356 <AmiBlitz3.ab3@18033> BRA.w varcont
0002E35A <AmiBlitz3.ab3@18038>   MOVE.w $6(A3),D1
0002E35E <AmiBlitz3.ab3@18039>    BSR.w uselib           ;get lib for base address
0002E362 <AmiBlitz3.ab3@18040>    BSR.w savereg
0002E364 <AmiBlitz3.ab3@18041>   MOVE.l D4,D1
0002E366 <AmiBlitz3.ab3@18042>   MOVE.l D5,-(A7)
0002E36A <AmiBlitz3.ab3@18043>    BSR.w pokemovem
0002E36E <AmiBlitz3.ab3@18044>   MOVE.w $A(A1),-(A7)     ;libbase reg
0002E370 <AmiBlitz3.ab3@18045>   ADDQ.w #8,A3
0002E372 <AmiBlitz3.ab3@18046>   MOVE.w (A3)+,-(A7)      ;get offset for lib
0002E374 <AmiBlitz3.ab3@18047>   MOVE.l A3,-(A7)
0002E378 <AmiBlitz3.ab3@18048>    BSR.w get1bytemain
0002E37A <AmiBlitz3.ab3@18049>   MOVE.w D0,-(A7)         ;remember first bracket....
0002E37C <AmiBlitz3.ab3@18053>   MOVEQ.l #$00,D3
0002E382 <AmiBlitz3.ab3@18055>   JSR checka4a5
0002E384 <AmiBlitz3.ab3@18059>   MOVE.b (A3)+,D1
0002E388 <AmiBlitz3.ab3@18060>    BMI.w 'done
0002E38A <AmiBlitz3.ab3@18061>   MOVEQ.l #$03,D2
0002E38C <AmiBlitz3.ab3@18062>   ADDQ.w #1,D3
0002E390 <AmiBlitz3.ab3@18063>   MOVEM.l D3/A3,-(A7)
0002E396 <AmiBlitz3.ab3@18065>   MOVE.b funcparloop,-(a7)
0002E39C <AmiBlitz3.ab3@18066>   CLR.b funcparloop
0002E3A2 <AmiBlitz3.ab3@18067>   MOVE.b blitzparloop,-(a7)
0002E3AA <AmiBlitz3.ab3@18068>   MOVE.b #1,blitzparloop
0002E3B0 <AmiBlitz3.ab3@18069>   MOVE.l lasttoken,-(a7)
0002E3B6 <AmiBlitz3.ab3@18070>   MOVE.l leftsidetype,-(a7)
0002E3BC <AmiBlitz3.ab3@18071>   MOVE.l rightsidetype,-(a7)
0002E3C0 <AmiBlitz3.ab3@18073>   BSR.w peval
0002E3C6 <AmiBlitz3.ab3@18075>   MOVE.l (a7)+,rightsidetype
0002E3CC <AmiBlitz3.ab3@18076>   MOVE.l (a7)+,leftsidetype
0002E3D2 <AmiBlitz3.ab3@18077>   MOVE.l (a7)+,lasttoken
0002E3D8 <AmiBlitz3.ab3@18078>   MOVE.b (a7)+,blitzparloop
0002E3DE <AmiBlitz3.ab3@18079>   MOVE.b (a7)+,funcparloop
0002E3E4 <AmiBlitz3.ab3@18081>   SUBQ.w #4,a2offset              ;readjust stack! it's coming off later!
0002E3E8 <AmiBlitz3.ab3@18082>   MOVEM.l (A7)+,D3/A3
0002E3EC <AmiBlitz3.ab3@18083>   CMP.w #$2C,D0                   ;','
0002E3F0 <AmiBlitz3.ab3@18084>    BEQ.w 'loop
0002E3F2 <AmiBlitz3.ab3@18085>   TST.b (A3)
0002E3F6 <AmiBlitz3.ab3@18086>    BPL.w syntaxerr
0002E3F8 <AmiBlitz3.ab3@18089>   MOVE.w (A7)+,D1
0002E3FC <AmiBlitz3.ab3@18090>    BSR.w tstbras
0002E3FE <AmiBlitz3.ab3@18091>   MOVEA.l (A7)+,A3
0002E400 <AmiBlitz3.ab3@18092>   SUBQ.w #1,D3
0002E404 <AmiBlitz3.ab3@18093>    BMI.w 'nopars
0002E406 <AmiBlitz3.ab3@18096>   TST.b (A3)+                     ;go to end of params
0002E40A <AmiBlitz3.ab3@18097>    BPL.w 'toend
0002E40C <AmiBlitz3.ab3@18098>   SUBQ.w #1,A3
0002E40E <AmiBlitz3.ab3@18101>     MOVEQ.l #$00,D1
0002E410 <AmiBlitz3.ab3@18102>     MOVE.b -(A3),D1
0002E414 <AmiBlitz3.ab3@18103>     BTST #$4,D1
0002E418 <AmiBlitz3.ab3@18104>      BNE.w 'addreg
0002E41E <AmiBlitz3.ab3@18105>     CMP.w regnum,D1
0002E422 <AmiBlitz3.ab3@18106>      BCC.w 'nomovem
0002E424 <AmiBlitz3.ab3@18107>     BSET D1,D5
0002E426 <AmiBlitz3.ab3@18108>     MOVEQ.l #$0F,D0
0002E428 <AmiBlitz3.ab3@18109>     SUB.w D1,D0
0002E42A <AmiBlitz3.ab3@18110>     BSET D0,D4
0002E42C <AmiBlitz3.ab3@18113>     LSL.w #8,D1
0002E42E <AmiBlitz3.ab3@18114>     LSL.w #1,D1
0002E432 <AmiBlitz3.ab3@18115>     ORI.w #$201F,D1
0002E436 <AmiBlitz3.ab3@18116>    BRA.w 'gotit
0002E43A <AmiBlitz3.ab3@18119>     ANDI.w #$7,D1
0002E43C <AmiBlitz3.ab3@18120>     LSL.w #8,D1
0002E43E <AmiBlitz3.ab3@18121>     LSL.w #1,D1
0002E442 <AmiBlitz3.ab3@18122>     ORI.w #$205F,D1
0002E446 <AmiBlitz3.ab3@18125>      BSR.w writeword
0002E44A <AmiBlitz3.ab3@18126>   DBF D3,'loop2
0002E450 <AmiBlitz3.ab3@18129>   MOVE.w (A7)+,libjsr+2
0002E456 <AmiBlitz3.ab3@18130>   MOVE.w (A7)+,libbase+2
0002E45C <AmiBlitz3.ab3@18131>   MOVE.l libbase,D1
0002E460 <AmiBlitz3.ab3@18132>    BSR.w writelong
0002E466 <AmiBlitz3.ab3@18133>   MOVE.l libjsr,D1
0002E46A <AmiBlitz3.ab3@18134>    BSR.w writelong
0002E470 <AmiBlitz3.ab3@18135>   MOVE.w regnum,D1
0002E474 <AmiBlitz3.ab3@18136>    BEQ.w 'nofin
0002E476 <AmiBlitz3.ab3@18137>   LSL.w #8,D1
0002E478 <AmiBlitz3.ab3@18138>   LSL.w #1,D1
0002E47C <AmiBlitz3.ab3@18139>   ORI.w #$2000,D1
0002E480 <AmiBlitz3.ab3@18140>    BSR.w writeword
0002E482 <AmiBlitz3.ab3@18143>   MOVE.l (A7)+,D1
0002E486 <AmiBlitz3.ab3@18144>    BSR.w pokemovem
0002E48C <AmiBlitz3.ab3@18146>    JSR restorea4a5
0002E48E <AmiBlitz3.ab3@18148>   MOVEQ.l #$03,D2
0002E492 <AmiBlitz3.ab3@18149>    BSR.w reget
0002E496 <AmiBlitz3.ab3@18150> BRA.w varcont
0002E498 <AmiBlitz3.ab3@18159>   TST.w D3
0002E49C <AmiBlitz3.ab3@18160>    BEQ.w 'nopars
0002E4A0 <AmiBlitz3.ab3@18161>   CMP.w #$28,D1      ;'('
0002E4A4 <AmiBlitz3.ab3@18162>    BNE.w syntaxerr
0002E4A8 <AmiBlitz3.ab3@18163>   CMP.w #$29,D0      ;')'
0002E4AC <AmiBlitz3.ab3@18164>    BNE.w syntaxerr
0002E4B0 <AmiBlitz3.ab3@18165>  BRA.w get1bytemain
0002E4B4 <AmiBlitz3.ab3@18168>   CMP.w #$28,D1       ;'('
0002E4B8 <AmiBlitz3.ab3@18169>    BNE.w 'skip
0002E4BC <AmiBlitz3.ab3@18170>    BSR.w get1bytemain
0002E4C0 <AmiBlitz3.ab3@18171>   CMP.w #$29,D0       ;')'
0002E4C4 <AmiBlitz3.ab3@18172>    BNE.w syntaxerr
0002E4C8 <AmiBlitz3.ab3@18173>  BRA.w get1bytemain
0002E4CA <AmiBlitz3.ab3@18176> RTS
0002E4CC <AmiBlitz3.ab3@18180>   TST.w D1
0002E4D0 <AmiBlitz3.ab3@18181>    BNE.w writelong
0002E4D2 <AmiBlitz3.ab3@18182> RTS
0002E4D6 <AmiBlitz3.ab3@18187>   MOVE.w #$48E7,D4
0002E4D8 <AmiBlitz3.ab3@18188>   SWAP D4
0002E4DA <AmiBlitz3.ab3@18189>   CLR.w D4
0002E4DE <AmiBlitz3.ab3@18190>   MOVE.w #$4CDF,D5
0002E4E0 <AmiBlitz3.ab3@18191>   SWAP D5
0002E4E2 <AmiBlitz3.ab3@18192>   CLR.w D5
0002E4E8 <AmiBlitz3.ab3@18193>   MOVE.w regnum,D1
0002E4EC <AmiBlitz3.ab3@18194>    BEQ.w 'skip
0002E4F0 <AmiBlitz3.ab3@18195>   BSET #$F,D4
0002E4F4 <AmiBlitz3.ab3@18196>   BSET #$0,D5
0002E4F8 <AmiBlitz3.ab3@18197>   CMP.w #$2,D1
0002E4FC <AmiBlitz3.ab3@18198>    BCS.w 'skip2
0002E500 <AmiBlitz3.ab3@18201>   BSET #$E,D4
0002E504 <AmiBlitz3.ab3@18202>   BSET #$1,D5
0002E506 <AmiBlitz3.ab3@18205>  RTS
0002E50C <AmiBlitz3.ab3@18208>   TST.w fuckpos
0002E510 <AmiBlitz3.ab3@18209>   BNE.w 'skip3
0002E512 <AmiBlitz3.ab3@18210> RTS
0002E514 <AmiBlitz3.ab3@18213> fuckpos:  Ds.w 1
0002E51A <AmiBlitz3.ab3@18217>   MOVE.w sbasegot,D1
0002E51E <AmiBlitz3.ab3@18218>    BEQ.w 'skip
0002E522 <AmiBlitz3.ab3@18222>   MOVE.w sbgot(PC),D1
0002E526 <AmiBlitz3.ab3@18223>    BNE.w 'skip2
0002E52E <AmiBlitz3.ab3@18227>   MOVE.w #$0002,sbgot
0002E534 <AmiBlitz3.ab3@18228>   MOVE.w movea3a7,D1
0002E538 <AmiBlitz3.ab3@18229>  BRA.w writeword
0002E53A <AmiBlitz3.ab3@18232>  RTS
0002E542 <AmiBlitz3.ab3@18237>   MOVE.w #$0001,sbgot                                      ;voodoo magic! - Will it work?
0002E548 <AmiBlitz3.ab3@18239>   MOVE.l #$C601,D1                  ; was #workstart,
0002E550 <AmiBlitz3.ab3@18240>   MOVE.w #-1,sbasegot               
0002E556 <AmiBlitz3.ab3@18242>   MOVE.l d1,lastinstruction
0002E55A <AmiBlitz3.ab3@18244>   BSR.w Atokejsr
0002E55C <AmiBlitz3.ab3@18245> RTS
0002E566 <AmiBlitz3.ab3@18250>   MOVE.l data1,litdata1
0002E56C <AmiBlitz3.ab3@18252>   TST.b fast
0002E570 <AmiBlitz3.ab3@18253>   BEQ 'l50                                                 ;optistring  seem impossible to get work
0002E574 <AmiBlitz3.ab3@18257>  BRA 'l50                                                  ;to deactivate
0002E57A <AmiBlitz3.ab3@18263>   TST.b optistring
0002E57E <AmiBlitz3.ab3@18264>   BNE.s 'l21
0002E584 <AmiBlitz3.ab3@18265>   CLR.b string1
0002E58C <AmiBlitz3.ab3@18266>   MOVE.b #1,optistring
0002E592 <AmiBlitz3.ab3@18267>   TST.b nostringopt
0002E596 <AmiBlitz3.ab3@18268>   BNE 'l21
0002E598 <AmiBlitz3.ab3@18269>   MOVE.l a5,a4
0002E59A <AmiBlitz3.ab3@18270>   SUBQ.l #1,a4
0002E59C <AmiBlitz3.ab3@18273>     TST.b (a4)
0002E5A0 <AmiBlitz3.ab3@18274>     BMI 'l19a
0002E5A4 <AmiBlitz3.ab3@18275>     BEQ.s 'l20
0002E5A8 <AmiBlitz3.ab3@18276>     CMP.b #$22,(a4)
0002E5AC <AmiBlitz3.ab3@18277>     BEQ.s 'l19
0002E5B2 <AmiBlitz3.ab3@18280>     TST.w string1
0002E5B6 <AmiBlitz3.ab3@18281>     BNE 'l11
0002E5BA <AmiBlitz3.ab3@18282>     CMP.b #":",(a4)
0002E5BE <AmiBlitz3.ab3@18283>     BEQ.s 'l20
0002E5C2 <AmiBlitz3.ab3@18284>     CMP.b #";",(a4)
0002E5C6 <AmiBlitz3.ab3@18285>     BEQ.s 'l20
0002E5CA <AmiBlitz3.ab3@18286>     CMP.b #"+",(a4)
0002E5CE <AmiBlitz3.ab3@18287>     BEQ.s 'l21
0002E5D2 <AmiBlitz3.ab3@18288>     CMP.b #",",(a4)
0002E5D6 <AmiBlitz3.ab3@18289>     BEQ.s 'l20                                             ;was l21
0002E5DA <AmiBlitz3.ab3@18290>     CMP.b #")",(a4)
0002E5DE <AmiBlitz3.ab3@18291>     BEQ.s 'l20                                             ;was l21
0002E5E0 <AmiBlitz3.ab3@18294>     ADDQ.l #1,a4
0002E5E4 <AmiBlitz3.ab3@18295>  BRA.s 'l10
0002E5EC <AmiBlitz3.ab3@18298>   BCHG #0,string1
0002E5F0 <AmiBlitz3.ab3@18299>  BRA 'l18
0002E5F2 <AmiBlitz3.ab3@18302>   ADDQ.l #1,a4
0002E5F4 <AmiBlitz3.ab3@18303>   TST.b (a4)
0002E5F8 <AmiBlitz3.ab3@18304>   BEQ 'l21
0002E5FC <AmiBlitz3.ab3@18305>  BRA 'l11
0002E5FE <AmiBlitz3.ab3@18308>   MOVE.l a5,a4
0002E600 <AmiBlitz3.ab3@18309>   SUBQ.l #1,a4
0002E604 <AmiBlitz3.ab3@18312>   CMP.b #$20,-(a4)
0002E608 <AmiBlitz3.ab3@18313>   BEQ 'll1
0002E60C <AmiBlitz3.ab3@18314>   CMP.b #"+",(a4)
0002E610 <AmiBlitz3.ab3@18315>   BEQ 'l21
0002E618 <AmiBlitz3.ab3@18330>   MOVE.b #2,optistring
0002E620 <AmiBlitz3.ab3@18333>   CMP.b #2,optistring
0002E624 <AmiBlitz3.ab3@18334>   BEQ.s 'l100
0002E628 <AmiBlitz3.ab3@18337>   BSR.w makesbase
0002E62C <AmiBlitz3.ab3@18339>   BSR.w pokedata1                                          ;writestringsizespace
0002E630 <AmiBlitz3.ab3@18340>   BSR.w pokedata1
0002E632 <AmiBlitz3.ab3@18343>   MOVEQ.l #$00,D2
0002E638 <AmiBlitz3.ab3@18347>     MOVE.l a5,lastsourcepos
0002E63A <AmiBlitz3.ab3@18348>     MOVEQ #0,d0
0002E63C <AmiBlitz3.ab3@18349>     MOVE.b (a5)+,d0
0002E63E <AmiBlitz3.ab3@18351>     TST.w D0
0002E642 <AmiBlitz3.ab3@18352>      BEQ.w notqerr
0002E646 <AmiBlitz3.ab3@18353>     CMP.w #$22,D0     ; '"'                                     ; --- " ---
0002E64A <AmiBlitz3.ab3@18354>      BEQ.w 'done
0002E64E <AmiBlitz3.ab3@18356>     CMP.b #"\",d0
0002E652 <AmiBlitz3.ab3@18357>      BNE 'l1
0002E656 <AmiBlitz3.ab3@18358>     CMP.b #"\",(a5)
0002E65A <AmiBlitz3.ab3@18359>      BNE 'l1
0002E660 <AmiBlitz3.ab3@18360>     TST.b newsyntax
0002E664 <AmiBlitz3.ab3@18361>      BEQ 'l1
0002E66A <AmiBlitz3.ab3@18362>     CMP.w #"\\",1(a5)                                      ; new compiler constants
0002E66E <AmiBlitz3.ab3@18363>     BNE 'l2
0002E670 <AmiBlitz3.ab3@18364>     ADDQ #2,a5
0002E672 <AmiBlitz3.ab3@18367>     ADDQ.w #1,D2
0002E674 <AmiBlitz3.ab3@18368>     MOVE.w D0,D1
0002E678 <AmiBlitz3.ab3@18369>     BSR.w pokedata1b                                        ;writestring
0002E67C <AmiBlitz3.ab3@18370>  BRA.w 'writestring
0002E682 <AmiBlitz3.ab3@18373>     JSR check_newconstants
0002E686 <AmiBlitz3.ab3@18374>  BRA 'writestring
0002E68C <AmiBlitz3.ab3@18379>   NOT instringon
0002E692 <AmiBlitz3.ab3@18381>   MOVE.w dontwrite_nomemleft,D1
0002E696 <AmiBlitz3.ab3@18382>   BNE.w 'skip
0002E69E <AmiBlitz3.ab3@18384>   CMP.b #2,optistring
0002E6A2 <AmiBlitz3.ab3@18385>   BEQ 'skip
0002E6A8 <AmiBlitz3.ab3@18387>     MOVEA.l litdata1,A0
0002E6AA <AmiBlitz3.ab3@18388>     CLR.w (A0)+                                            ;writesize
0002E6AC <AmiBlitz3.ab3@18389>     MOVE.w D2,(A0)
0002E6B0 <AmiBlitz3.ab3@18392>   BSR.w makelit                                          ;writestringconstantcode
0002E6B6 <AmiBlitz3.ab3@18393>   ADDQ.l #1,data1
0002E6BE <AmiBlitz3.ab3@18394>   BCLR #$0,data1+3
0002E6C0 <AmiBlitz3.ab3@18395>   MOVEQ.l #$07,D2
0002E6C4 <AmiBlitz3.ab3@18396> BRA.w get1bytemain
0002E6C8 <AmiBlitz3.ab3@18401>   BSR.w makename2
0002E6CC <AmiBlitz3.ab3@18403>   BSR.w findlabel2
0002E6D0 <AmiBlitz3.ab3@18404>   BEQ.w 'found
0002E6D4 <AmiBlitz3.ab3@18406>   BSR.w addlabelhash
0002E6D8 <AmiBlitz3.ab3@18407>   CLR.l $4(A2)           ;no refs
0002E6DC <AmiBlitz3.ab3@18408>   CLR.l $8(A2)           ;not created yet (no PC)
0002E6E4 <AmiBlitz3.ab3@18410>   MOVE.w linenumat+2,$10(A2)  ; was linenumat,    ;context
0002E6EA <AmiBlitz3.ab3@18412>   MOVE.w linenumat,d0
0002E6EC <AmiBlitz3.ab3@18413>   MOVEQ #0,d1
0002E6F0 <AmiBlitz3.ab3@18414>   MOVE.b -1(a2,d7),d1
0002E6F4 <AmiBlitz3.ab3@18415>   MOVE.w d0,0(a2,d1)
0002E6F8 <AmiBlitz3.ab3@18417>  BRA.w 'makeit
0002E6FC <AmiBlitz3.ab3@18420>   TST.l $8(A2)
0002E700 <AmiBlitz3.ab3@18421>   BNE.w 'gotit    ;already made
0002E706 <AmiBlitz3.ab3@18427>   MOVEA.l _execbase,A6
0002E708 <AmiBlitz3.ab3@18428>   MOVEQ.l #$0C+2,D0      ; was 12
0002E70A <AmiBlitz3.ab3@18429>   MOVEQ.l #$01,D1
0002E710 <AmiBlitz3.ab3@18431>   MOVE.l mempool,a0
0002E714 <AmiBlitz3.ab3@18432>   JSR _AllocPooled(a6)
0002E716 <AmiBlitz3.ab3@18435>   MOVEA.l D0,A0
0002E71A <AmiBlitz3.ab3@18436>   MOVE.l $4(A2),(A0)
0002E71E <AmiBlitz3.ab3@18437>   MOVE.l A0,$4(A2)
0002E726 <AmiBlitz3.ab3@18438>   MOVE.l destpointer,$4(A0)
0002E72A <AmiBlitz3.ab3@18439>   ADDQ.l #2,$4(A0)
0002E732 <AmiBlitz3.ab3@18440>   MOVE.w procnum,$8(A0)
0002E73A <AmiBlitz3.ab3@18441>   MOVE.w linenumat+2,$A(A0)   ; was linenumat,
0002E742 <AmiBlitz3.ab3@18443>   MOVE.w linenumat,$c(a0)
0002E744 <AmiBlitz3.ab3@18445>  RTS
0002E748 <AmiBlitz3.ab3@18448>   MOVE.l $4(A2),D1
0002E74C <AmiBlitz3.ab3@18449>   BTST #$0,D1
0002E750 <AmiBlitz3.ab3@18450>    BNE.w illlaberr
0002E756 <AmiBlitz3.ab3@18451>   MOVE.w procnum,D1
0002E75A <AmiBlitz3.ab3@18452>   CMP.w $10(A2),D1
0002E75E <AmiBlitz3.ab3@18453>    BNE.w referr
0002E760 <AmiBlitz3.ab3@18456> RTS
0002E762 <AmiBlitz3.ab3@18462>   MOVE.w D0,-(A7)
0002E76A <AmiBlitz3.ab3@18464>   CMP.b #2,optistring
0002E76E <AmiBlitz3.ab3@18465>   BEQ 'l10
0002E774 <AmiBlitz3.ab3@18469>   MOVE.w numtoa0,D1
0002E778 <AmiBlitz3.ab3@18470>    BSR.w writeword
0002E77C <AmiBlitz3.ab3@18471>    BSR.w addoff
0002E782 <AmiBlitz3.ab3@18472>   MOVE.l litdata1,D1
0002E786 <AmiBlitz3.ab3@18473>    BSR.w writelong
0002E78C <AmiBlitz3.ab3@18474>   MOVE.w pushlen,D1
0002E790 <AmiBlitz3.ab3@18475>    BSR.w writeword
0002E794 <AmiBlitz3.ab3@18476>   MOVE.w #$C600,D1        ; was #copstring
0002E798 <AmiBlitz3.ab3@18477>    BSR.w Atokejsr
0002E79A <AmiBlitz3.ab3@18478>   MOVE.w (A7)+,D0
0002E79C <AmiBlitz3.ab3@18479>  RTS
0002E79E <AmiBlitz3.ab3@18483>   MOVEQ #0,d1
0002E7A2 <AmiBlitz3.ab3@18484>   BSR.w pokedata1b
0002E7A8 <AmiBlitz3.ab3@18485>   MOVE.l destpointer,a4
0002E7AC <AmiBlitz3.ab3@18486>   MOVE.w #$203c,d1
0002E7B2 <AmiBlitz3.ab3@18487>   TST.w mode
0002E7B6 <AmiBlitz3.ab3@18488>   BNE 'lm10
0002E7BC <AmiBlitz3.ab3@18489>    ADDQ.w #4,a2offset
0002E7C0 <AmiBlitz3.ab3@18490>   MOVE.w #$2f3c,d1
0002E7C6 <AmiBlitz3.ab3@18493>   TST.w mode
0002E7CA <AmiBlitz3.ab3@18494>   BEQ 'lm3
0002E7D0 <AmiBlitz3.ab3@18495>   MOVE.w regnum,D0
0002E7D2 <AmiBlitz3.ab3@18496>   LSL.w #8,D0
0002E7D4 <AmiBlitz3.ab3@18497>   LSL.w #1,D0
0002E7D6 <AmiBlitz3.ab3@18498>   OR.w d0,d1
0002E7DA <AmiBlitz3.ab3@18499>   BSR writeword
0002E7DE <AmiBlitz3.ab3@18500>   BSR.w addoff
0002E7E4 <AmiBlitz3.ab3@18501>   MOVE.l litdata1,D1
0002E7E8 <AmiBlitz3.ab3@18502>   BSR.w writelong
0002E7F0 <AmiBlitz3.ab3@18503>   CMP.w #3,mode
0002E7F4 <AmiBlitz3.ab3@18504>   BEQ 'l30
0002E7FA <AmiBlitz3.ab3@18505>    ADDQ.w #4,a2offset
0002E7FE <AmiBlitz3.ab3@18506>   MOVE.w #$4878,D1
0002E802 <AmiBlitz3.ab3@18507>   BSR.w writeword
0002E804 <AmiBlitz3.ab3@18508>   MOVE.l d2,d1
0002E808 <AmiBlitz3.ab3@18509>   BSR writeword
0002E80A <AmiBlitz3.ab3@18512>   MOVE.w (A7)+,D0
0002E80C <AmiBlitz3.ab3@18513>  RTS
0002E812 <AmiBlitz3.ab3@18516>   MOVE.l #$3f3c0007,d1
0002E816 <AmiBlitz3.ab3@18517>   BSR writelong
0002E81C <AmiBlitz3.ab3@18518>   MOVE.w regnum,D1
0002E81E <AmiBlitz3.ab3@18519>   LSL.w #8,D1
0002E820 <AmiBlitz3.ab3@18520>   LSL.w #1,D1
0002E824 <AmiBlitz3.ab3@18521>   ORI.w #$2f3c,d1
0002E828 <AmiBlitz3.ab3@18522>   BSR writeword
0002E82E <AmiBlitz3.ab3@18523>    ADDQ.w #4,a2offset
0002E830 <AmiBlitz3.ab3@18524>   MOVE.l d2,d1
0002E834 <AmiBlitz3.ab3@18525>   BSR writelong
0002E838 <AmiBlitz3.ab3@18526>   MOVE.w #$2f3c,d1
0002E83C <AmiBlitz3.ab3@18527>   BSR writeword
0002E840 <AmiBlitz3.ab3@18528>   BSR.w addoff
0002E846 <AmiBlitz3.ab3@18529>   MOVE.l litdata1,D1
0002E84A <AmiBlitz3.ab3@18530>   BSR.w writelong
0002E84C <AmiBlitz3.ab3@18531>   MOVE.w (A7)+,D0
0002E84E <AmiBlitz3.ab3@18532> RTS
0002E852 <AmiBlitz3.ab3@18537>   BSR.w get1bytemain
0002E856 <AmiBlitz3.ab3@18538>    BSR.w makealab2
0002E85C <AmiBlitz3.ab3@18540>   MOVE.w regnum,D1
0002E85E <AmiBlitz3.ab3@18541>   LSL.w #8,D1
0002E860 <AmiBlitz3.ab3@18542>   LSL.w #1,D1
0002E864 <AmiBlitz3.ab3@18543>   ORI.w #$203C,D1
0002E868 <AmiBlitz3.ab3@18544>    BSR.w writeword        ;create move.l #loc,dn
0002E86C <AmiBlitz3.ab3@18545>    BSR.w addoff
0002E870 <AmiBlitz3.ab3@18546>   MOVE.l $8(A2),D1
0002E874 <AmiBlitz3.ab3@18547>    BSR.w writelong
0002E876 <AmiBlitz3.ab3@18548>   MOVEQ.l #$03,D2
0002E87C <AmiBlitz3.ab3@18550>   CLR.b peekaddrsize
0002E880 <AmiBlitz3.ab3@18552> BRA.w reget
0002E882 <AmiBlitz3.ab3@18556>   MOVEQ.l #$00,D3
0002E886 <AmiBlitz3.ab3@18559>   BSR.w get1bytemain
0002E88A <AmiBlitz3.ab3@18560>    BEQ.w syntaxerr
0002E88E <AmiBlitz3.ab3@18561>   CMP.w #$22,D0         ;'"'
0002E892 <AmiBlitz3.ab3@18562>    BEQ.w 'done
0002E894 <AmiBlitz3.ab3@18563>   LSL.l #8,D3
0002E896 <AmiBlitz3.ab3@18564>   MOVE.b D0,D3
0002E89A <AmiBlitz3.ab3@18565>  BRA.w 'loop
0002E89E <AmiBlitz3.ab3@18568>   BSR.w get1bytemain
0002E8A2 <AmiBlitz3.ab3@18569> BRA.w fetchnum2
0002E8A4 <AmiBlitz3.ab3@18573>   MOVE.w D2,-(A7)                                          ;basicvarsforasm
0002E8A8 <AmiBlitz3.ab3@18574>    BSR.w makename2              ;get the things name
0002E8AC <AmiBlitz3.ab3@18575>    BSR.w findlabel2
0002E8B0 <AmiBlitz3.ab3@18577>    BEQ.w 'l10
0002E8B6 <AmiBlitz3.ab3@18578>    LEA ptr_parameterstore,a0
0002E8BC <AmiBlitz3.ab3@18579>    CMP.b #"@",-1(a0,d2.w)
0002E8C0 <AmiBlitz3.ab3@18581>    BNE cnferr
0002E8C4 <AmiBlitz3.ab3@18583>    CLR.b -1(a0,d2.w)
0002E8C6 <AmiBlitz3.ab3@18584>    SUBQ.l #1,d2
0002E8CC <AmiBlitz3.ab3@18585>    LEA varbase,a2
0002E8D0 <AmiBlitz3.ab3@18586>    BSR findvariable
0002E8D4 <AmiBlitz3.ab3@18587>    BNE cnferr
0002E8D8 <AmiBlitz3.ab3@18588>    CMP.b #"\",d0
0002E8DC <AmiBlitz3.ab3@18589>    BNE 'l6
0002E8E2 <AmiBlitz3.ab3@18590>    ADDQ #1,lastsourcepos
0002E8E6 <AmiBlitz3.ab3@18591>    MOVE.l $a(a2),a2
0002E8E8 <AmiBlitz3.ab3@18592>    ADDQ.l #4,a2
0002E8EC <AmiBlitz3.ab3@18593>    BSR.w makename2
0002E8F0 <AmiBlitz3.ab3@18594>    BSR findvariable2
0002E8F4 <AmiBlitz3.ab3@18595>    BNE cnferr
0002E8F8 <AmiBlitz3.ab3@18596>  BRA.s 'l6                                                  ;???
0002E8FC <AmiBlitz3.ab3@18599>    MOVE.w $4(a2),d3
0002E8FE <AmiBlitz3.ab3@18600>    EXT.l d3
0002E902 <AmiBlitz3.ab3@18601>  BRA 'npc
0002E906 <AmiBlitz3.ab3@18605>   MOVE.l $8(A2),D3          ;val.
0002E90E <AmiBlitz3.ab3@18606>   CMPI.l #$1,$4(A2)
0002E912 <AmiBlitz3.ab3@18607>    BEQ.w 'npc
0002E918 <AmiBlitz3.ab3@18608>   NOT.w asmtype
0002E91A <AmiBlitz3.ab3@18611>   MOVE.w (A7)+,D2
0002E91E <AmiBlitz3.ab3@18612> BRA.w fetchnum2
0002E920 <AmiBlitz3.ab3@18616>   MOVE.w D2,-(A7)           ;remember old type
0002E924 <AmiBlitz3.ab3@18617>    BSR.w getparameter
0002E928 <AmiBlitz3.ab3@18618>   CMP.w #"{",D0                                          ;test if var = function{}
0002E92C <AmiBlitz3.ab3@18619>    BEQ.w isfunction
0002E930 <AmiBlitz3.ab3@18620>    BSR.w fetchvars
0002E934 <AmiBlitz3.ab3@18622>    BSR.w calcvar                                         ;getvaroffset+type
0002E938 <AmiBlitz3.ab3@18623>    BSR.w variable2
0002E93E <AmiBlitz3.ab3@18625>    MOVE.l a2,rightsidetype
0002E948 <AmiBlitz3.ab3@18626>    MOVE.w flagmask, rightsideflagmask
0002E94E <AmiBlitz3.ab3@18638>    TST.b typecheck
0002E952 <AmiBlitz3.ab3@18639>    BEQ varcont
0002E95C <AmiBlitz3.ab3@18640>    CMP.l #$da01,lasttoken                                  ;poke
0002E960 <AmiBlitz3.ab3@18641>    BEQ 'l1
0002E96A <AmiBlitz3.ab3@18642>    CMP.l #$da02,lasttoken                                  ;peek
0002E96E <AmiBlitz3.ab3@18643>    BNE 'l2
0002E976 <AmiBlitz3.ab3@18646>    CMP.w #1,parnum                                         ; is not call when & is used in parameter
0002E97A <AmiBlitz3.ab3@18647>    BNE varcont
0002E980 <AmiBlitz3.ab3@18648>    MOVE.b d2,peekaddrsize
0002E984 <AmiBlitz3.ab3@18649>    BRA varcont
0002E98A <AmiBlitz3.ab3@18652>   CLR.b peekaddrsize
0002E98E <AmiBlitz3.ab3@18656>   CMP.w #$1,D2
0002E992 <AmiBlitz3.ab3@18657>    BNE.w 'notabyte
0002E998 <AmiBlitz3.ab3@18661>   MOVE.w regnum,D1
0002E99C <AmiBlitz3.ab3@18662>   ORI.w #$4880,D1      ;ext.w Dn
0002E9A0 <AmiBlitz3.ab3@18663>    BSR.w writeword
0002E9A2 <AmiBlitz3.ab3@18666>   MOVE.w (A7)+,D3      ;old type
0002E9A6 <AmiBlitz3.ab3@18667>    BEQ.w 'done         ;type not set yet...
0002E9AC <AmiBlitz3.ab3@18670>    MOVE.l lastinstructionaddr,a0
0002E9B0 <AmiBlitz3.ab3@18672>   CMP.w #$3,D3
0002E9B4 <AmiBlitz3.ab3@18673>    BNE.w 'nob
0002E9B8 <AmiBlitz3.ab3@18674>   CMP.w #$4,D2
0002E9BC <AmiBlitz3.ab3@18675>    BEQ.w 'conv2
0002E9BE <AmiBlitz3.ab3@18678>   CMP.w D2,D3
0002E9C2 <AmiBlitz3.ab3@18679>    BLS.w 'done
0002E9C4 <AmiBlitz3.ab3@18682>   EXG.l D2,D3
0002E9C6 <AmiBlitz3.ab3@18684>   MOVE.l a0,-(a7)
0002E9CC <AmiBlitz3.ab3@18685>   TST.b typecheck
0002E9D0 <AmiBlitz3.ab3@18686>   BEQ 'ok
0002E9D6 <AmiBlitz3.ab3@18687>   TST.b notypecheck
0002E9DA <AmiBlitz3.ab3@18688>   BNE 'ok
0002E9E0 <AmiBlitz3.ab3@18689>   MOVE.l leftsidetype,a0
0002E9EA <AmiBlitz3.ab3@18690>   CMP.l #0,leftsidetype
0002E9EE <AmiBlitz3.ab3@18691>   BEQ 'ok
0002E9F6 <AmiBlitz3.ab3@18692>   CMP.w #1,leftsideflagmask
0002E9FA <AmiBlitz3.ab3@18693>   BEQ 'isptr
0002EA02 <AmiBlitz3.ab3@18694>   CMP.l #$100,4(a0)
0002EA06 <AmiBlitz3.ab3@18695>   BLE 'ok
0002EA0A <AmiBlitz3.ab3@18698>   CMP.b #3,d3
0002EA0E <AmiBlitz3.ab3@18699>   BEQ 'ok
0002EA12 <AmiBlitz3.ab3@18700>   CMP.b #7,d3
0002EA16 <AmiBlitz3.ab3@18701>   BEQ 'ok
0002EA1C <AmiBlitz3.ab3@18702>   JMP   error_convert_types      ;for all syntax only long and string allowed to assign to a type
0002EA1E <AmiBlitz3.ab3@18705>   MOVE.l (a7)+,a0
0002EA22 <AmiBlitz3.ab3@18707>   BSR.w writeconvertcode         ;called from var assign      ;bump up new type to old...
0002EA26 <AmiBlitz3.ab3@18710> BRA.w reget
0002EA28 <AmiBlitz3.ab3@18714>   MOVEQ.l #$00,D3
0002EA2E <AmiBlitz3.ab3@18715>   MOVE.w regnum,D1
0002EA32 <AmiBlitz3.ab3@18716>    BEQ.w savem_skip
0002EA34 <AmiBlitz3.ab3@18717>   SUBQ.w #1,D1
0002EA36 <AmiBlitz3.ab3@18720>      LSR.l #1,D3
0002EA3A <AmiBlitz3.ab3@18721>      BSET #$F,D3
0002EA3E <AmiBlitz3.ab3@18722>   DBF D1,'loop
0002EA44 <AmiBlitz3.ab3@18724>    TST.b fpu
0002EA48 <AmiBlitz3.ab3@18725>    BEQ 'l1
0002EA4E <AmiBlitz3.ab3@18726>    ADDQ.l #2,stacktrack                                    ;intern command
0002EA50 <AmiBlitz3.ab3@18727>     MOVE.l a0,-(a7)
0002EA56 <AmiBlitz3.ab3@18728>     MOVE.l stacktrack,d1
0002EA5C <AmiBlitz3.ab3@18729>     LEA fpustackbase,a0
0002EA60 <AmiBlitz3.ab3@18730>     CLR.w 0(a0,d1)
0002EA66 <AmiBlitz3.ab3@18731>     CLR.w regmask
0002EA68 <AmiBlitz3.ab3@18732>     MOVE.l (a7)+,a0
0002EA6C <AmiBlitz3.ab3@18736>   MOVE.w #$48E7,D1
0002EA70 <AmiBlitz3.ab3@18737>    BSR.w writeword                                         ;write movem.l d0/d1,-(a7)
0002EA72 <AmiBlitz3.ab3@18738>   MOVE.w D3,D1
0002EA76 <AmiBlitz3.ab3@18739> BRA.w writeword
0002EA78 <AmiBlitz3.ab3@18744>   MOVEQ.l #$00,D3
0002EA7E <AmiBlitz3.ab3@18745>   MOVE.w regnum,D1
0002EA82 <AmiBlitz3.ab3@18746>    BEQ.w savem_skip
0002EA84 <AmiBlitz3.ab3@18747>   SUBQ.w #1,D1
0002EA86 <AmiBlitz3.ab3@18750>     LSR.l #1,D3
0002EA8A <AmiBlitz3.ab3@18751>     BSET #$F,D3
0002EA8E <AmiBlitz3.ab3@18752>   DBF D1,'loop
0002EA94 <AmiBlitz3.ab3@18754>    TST.b fpu
0002EA98 <AmiBlitz3.ab3@18755>    BEQ 'l1
0002EA9E <AmiBlitz3.ab3@18756>    ADDQ.l #2,stacktrack                                    ;intern command
0002EAA0 <AmiBlitz3.ab3@18757>     MOVE.l a0,-(a7)
0002EAA6 <AmiBlitz3.ab3@18758>     MOVE.l stacktrack,d1
0002EAAC <AmiBlitz3.ab3@18759>     LEA fpustackbase,a0
0002EAB0 <AmiBlitz3.ab3@18760>     CLR.w 0(a0,d1)
0002EAB4 <AmiBlitz3.ab3@18761>    CMP.b #5,(a3)                                           ;result float ?
0002EAB8 <AmiBlitz3.ab3@18762>     BNE 'nofpu
0002EAC2 <AmiBlitz3.ab3@18764>     MOVE.w regnum,regnumfunc
0002EAC8 <AmiBlitz3.ab3@18767>   CLR.w regmask
0002EACA <AmiBlitz3.ab3@18768>     MOVE.l (a7)+,a0
0002EACE <AmiBlitz3.ab3@18772>   MOVE.w #$48E7,D1
0002EAD2 <AmiBlitz3.ab3@18773>    BSR.w writeword                                         ;write movem.l d0/d1,-(a7)
0002EAD4 <AmiBlitz3.ab3@18774>   MOVE.w D3,D1
0002EAD8 <AmiBlitz3.ab3@18775>  BRA.w writeword
0002EADA <AmiBlitz3.ab3@18778> RTS
0002EADC <AmiBlitz3.ab3@18782>   MOVE.l D1,-(A7)
0002EAE0 <AmiBlitz3.ab3@18783>   MOVE.w #$4EB9,D1
0002EAE4 <AmiBlitz3.ab3@18784>    BSR.w writeword
0002EAE8 <AmiBlitz3.ab3@18785>    BSR.w addoff
0002EAEA <AmiBlitz3.ab3@18786>   MOVE.l (A7)+,D1
0002EAEE <AmiBlitz3.ab3@18787> BRA.w writelong
0002EAF2 <AmiBlitz3.ab3@18794>    BSR.w findproc                                          ;write function call
0002EAF6 <AmiBlitz3.ab3@18796>    BEQ 'l1a
0002EAFC <AmiBlitz3.ab3@18797>    TST.l unusedfunc
0002EB00 <AmiBlitz3.ab3@18799>    BEQ noprocerr
0002EB06 <AmiBlitz3.ab3@18802>    JSR gotoendsource
0002EB0E <AmiBlitz3.ab3@18805>   MOVE.l funcstruct_returntype(a2),rightsidetype
0002EB14 <AmiBlitz3.ab3@18806>   TST.l typetocast
0002EB18 <AmiBlitz3.ab3@18807>   BEQ 'nocast
0002EB22 <AmiBlitz3.ab3@18808>   MOVE.l typetocast,rightsidetype
0002EB28 <AmiBlitz3.ab3@18809>   CLR.l typetocast
0002EB2A <AmiBlitz3.ab3@18810>   MOVE.l a1,-(a7)
0002EB30 <AmiBlitz3.ab3@18811>   MOVE.l rightsidetype,a1
0002EB36 <AmiBlitz3.ab3@18812>   CMP.l leftsidetype,a1
0002EB3A <AmiBlitz3.ab3@18813>   BEQ 'ok
0002EB40 <AmiBlitz3.ab3@18814>   JMP errorconvertreturntype2
0002EB42 <AmiBlitz3.ab3@18817>   MOVE.l (a7)+,a1
0002EB44 <AmiBlitz3.ab3@18821>   MOVEQ.l #$00,D1
0002EB48 <AmiBlitz3.ab3@18822>   MOVE.b $5(A2),D1
0002EB4E <AmiBlitz3.ab3@18824>   MOVE.b d1,retmode
0002EB52 <AmiBlitz3.ab3@18826>    BMI.w illprocerr
0002EB58 <AmiBlitz3.ab3@18828>    MOVE.b #1,isfunc(a2)
0002EB5A <AmiBlitz3.ab3@18830>   MOVE.w D1,-(A7)
0002EB5C <AmiBlitz3.ab3@18831>   MOVEQ.l #$00,D1
0002EB60 <AmiBlitz3.ab3@18832>   MOVE.b $4(A2),D1
0002EB62 <AmiBlitz3.ab3@18833>   LSR.w #4,D1
0002EB66 <AmiBlitz3.ab3@18834>    BEQ.w 'skip
0002EB68 <AmiBlitz3.ab3@18835>   LSL.w #2,D1
0002EB6E <AmiBlitz3.ab3@18836>   SUB.w D1,a2offset
0002EB72 <AmiBlitz3.ab3@18839>   CMPI.w #$7,(A7)       ;function type!
0002EB76 <AmiBlitz3.ab3@18840>    BNE.b 'sss
0002EB78 <AmiBlitz3.ab3@18841>   MOVE.l A2,-(A7)
0002EB7C <AmiBlitz3.ab3@18842>    BSR.w makesbase
0002EB7E <AmiBlitz3.ab3@18843>   MOVEA.l (A7)+,A2
0002EB84 <AmiBlitz3.ab3@18846>   MOVE.w sbasegot,-(A7)
0002EB88 <AmiBlitz3.ab3@18847>    BEQ.b 'sssz
0002EB8C <AmiBlitz3.ab3@18848>    BSR.w dopusha3
0002EB90 <AmiBlitz3.ab3@18851>   BSR.w savemfunc
0002EB92 <AmiBlitz3.ab3@18852>   MOVE.w D3,-(A7)             ;the movem regs
0002EB96 <AmiBlitz3.ab3@18854>   MOVE.l $E(A2),D1            ;pc of function call
0002EB9A <AmiBlitz3.ab3@18856>   TST.b $20(a2)                                            ;increase if morepar
0002EB9E <AmiBlitz3.ab3@18857>   BNE 'no0par
0002EBA0 <AmiBlitz3.ab3@18858>   MOVE.l a5,a4
0002EBA4 <AmiBlitz3.ab3@18861>   CMP.b #$20,(a4)+
0002EBA8 <AmiBlitz3.ab3@18862>   BEQ 'l1
0002EBAE <AmiBlitz3.ab3@18863>   CMP.b #"}",-1(a4)
0002EBB2 <AmiBlitz3.ab3@18864>   BNE  'no0par
0002EBB4 <AmiBlitz3.ab3@18865>   MOVEQ #0,d0
0002EBB8 <AmiBlitz3.ab3@18868>   LEA $16(A2),A1
0002EBBA <AmiBlitz3.ab3@18871>   MOVE.l d1,-(a7)
0002EBBC <AmiBlitz3.ab3@18872>   MOVE.b (a1),d2
0002EBBE <AmiBlitz3.ab3@18873>   MOVE.l d0,d1
0002EBC2 <AmiBlitz3.ab3@18874>   CMP.w #4,d2
0002EBC6 <AmiBlitz3.ab3@18875>   BNE 'l1b
0002EBCC <AmiBlitz3.ab3@18876>   ADD.l #$203c,d1
0002EBD0 <AmiBlitz3.ab3@18877>   BSR writeword
0002EBD6 <AmiBlitz3.ab3@18878>   MOVE.l #$ffff0000,d1
0002EBDA <AmiBlitz3.ab3@18879>   BSR writelong
0002EBDE <AmiBlitz3.ab3@18880>  BRA 'l2b
0002EBE4 <AmiBlitz3.ab3@18883>    TST.b fpu
0002EBE8 <AmiBlitz3.ab3@18884>    BNE 'l1c
0002EBEC <AmiBlitz3.ab3@18885>    CMP.w #5,d2
0002EBF0 <AmiBlitz3.ab3@18886>    BNE 'l1c
0002EBF6 <AmiBlitz3.ab3@18887>    ADD.l #$203c,d1
0002EBFA <AmiBlitz3.ab3@18888>    BSR writeword
0002EC00 <AmiBlitz3.ab3@18889>    MOVE.l #$800000c1,d1
0002EC04 <AmiBlitz3.ab3@18890>    BSR writelong
0002EC08 <AmiBlitz3.ab3@18891>  BRA 'l2b
0002EC0E <AmiBlitz3.ab3@18894>   ADD.l #$70ff,d1
0002EC12 <AmiBlitz3.ab3@18895>   BSR writeword
0002EC16 <AmiBlitz3.ab3@18896>   CMP.w #7,d2
0002EC1A <AmiBlitz3.ab3@18897>   BNE 'l1d
0002EC20 <AmiBlitz3.ab3@18898>   MOVE.l #$2f3c0000,d1      ; write code move.l #0,-(a7)
0002EC24 <AmiBlitz3.ab3@18899>   BSR writelong
0002EC26 <AmiBlitz3.ab3@18900>   MOVEQ #0,d1
0002EC2A <AmiBlitz3.ab3@18901>   BSR writeword
0002EC30 <AmiBlitz3.ab3@18902>   MOVE.l #$2f3c0000,d1      ; write code move.l #0,-(a7)
0002EC34 <AmiBlitz3.ab3@18903>   BSR writelong
0002EC36 <AmiBlitz3.ab3@18904>   MOVEQ #0,d1
0002EC3A <AmiBlitz3.ab3@18905>   BSR writeword
0002EC40 <AmiBlitz3.ab3@18908>   MOVE.l #$f23c5000,d1
0002EC42 <AmiBlitz3.ab3@18909>   MOVE.l d0,d2
0002EC44 <AmiBlitz3.ab3@18910>   ASR.l #2,d2
0002EC46 <AmiBlitz3.ab3@18911>   ADD.l d2,d1
0002EC4A <AmiBlitz3.ab3@18912>   BSR writelong
0002EC4E <AmiBlitz3.ab3@18913>   MOVE.w #$ffff,d1
0002EC52 <AmiBlitz3.ab3@18914>   BSR writeword
0002EC54 <AmiBlitz3.ab3@18918>   MOVE.l (a7)+,d1
0002EC56 <AmiBlitz3.ab3@18919>      ADDQ.l #1,a1
0002EC5C <AmiBlitz3.ab3@18920>      ADD.l #$0200,d0
0002EC62 <AmiBlitz3.ab3@18921>      CMP.l #$0e00,d0
0002EC66 <AmiBlitz3.ab3@18922>      BEQ syntaxerr
0002EC68 <AmiBlitz3.ab3@18923>      TST.b (a1)
0002EC6C <AmiBlitz3.ab3@18924>      BNE 'again
0002EC70 <AmiBlitz3.ab3@18925>  BRA 'p1
0002EC74 <AmiBlitz3.ab3@18929>   TST.b $4(A2)
0002EC78 <AmiBlitz3.ab3@18930>    BNE.w 'somepars
0002EC7C <AmiBlitz3.ab3@18935>   BSR.w makefjsr
0002EC80 <AmiBlitz3.ab3@18936>    BSR.w get1bytemain
0002EC84 <AmiBlitz3.ab3@18937>  BRA.w 'nopars
0002EC8A <AmiBlitz3.ab3@18942>   MOVE.w parnum,-(a7)                                      ;7.2014 need store so function calls in parameter >6 can work
0002EC90 <AmiBlitz3.ab3@18944>   MOVE.w regnum,-(A7)         ;old regat
0002EC9A <AmiBlitz3.ab3@18946>   MOVE.w regnum,regnumfunc
0002EC9C <AmiBlitz3.ab3@18950>   MOVE.l D1,-(A7)                                          ;write functioncall with pars
0002ECA4 <AmiBlitz3.ab3@18952>   MOVE.b #1,funccall
0002ECA6 <AmiBlitz3.ab3@18954>   MOVEQ.l #$00,D0
0002ECAA <AmiBlitz3.ab3@18955>   MOVE.b $4(A2),D0
0002ECB4 <AmiBlitz3.ab3@18957>   MOVE.w a2offset,a2offset2
0002ECBC <AmiBlitz3.ab3@18958>   MOVE.b 5(a2),retmode
0002ECC2 <AmiBlitz3.ab3@18959>   MOVE.l a2,currentfunccall
0002ECC6 <AmiBlitz3.ab3@18961>   LEA $16(A2),A2              ;pointer to var desc
0002ECCC <AmiBlitz3.ab3@18962>   CLR.w regnum
0002ECD2 <AmiBlitz3.ab3@18964>   CLR.w regmask
0002ECD8 <AmiBlitz3.ab3@18965>   MOVE.b isconstantvalue,-(a7)
0002ECDE <AmiBlitz3.ab3@18966>   MOVE.b funcparloop,-(a7)
0002ECE6 <AmiBlitz3.ab3@18967>   MOVE.b #1,funcparloop
0002ECEC <AmiBlitz3.ab3@18968>   MOVE.l rightsidetype,-(a7)
0002ECF2 <AmiBlitz3.ab3@18969>   MOVE.l leftsidetype,-(a7)                               ;store values To stack so it can work recursive
0002ECF8 <AmiBlitz3.ab3@18970>   MOVE.b blitzparloop,-(a7)
0002ECFE <AmiBlitz3.ab3@18971>   CLR.b blitzparloop
0002ED04 <AmiBlitz3.ab3@18973>   JSR fetchpees2
0002ED0A <AmiBlitz3.ab3@18976>   MOVE.b (a7)+,blitzparloop
0002ED10 <AmiBlitz3.ab3@18977>   MOVE.l (a7)+,leftsidetype
0002ED16 <AmiBlitz3.ab3@18978>   MOVE.l (a7)+,rightsidetype
0002ED1C <AmiBlitz3.ab3@18979>   MOVE.b (a7)+,funcparloop
0002ED22 <AmiBlitz3.ab3@18980>   MOVE.b (a7)+,isconstantvalue
0002ED28 <AmiBlitz3.ab3@18982>   JSR chkstak
0002ED2A <AmiBlitz3.ab3@18983>   MOVE.l (A7)+,D1
0002ED2E <AmiBlitz3.ab3@19000>    BTST #0,d1
0002ED32 <AmiBlitz3.ab3@19001>    BNE intern1
0002ED36 <AmiBlitz3.ab3@19003>    BSR.w makefjsr
0002ED3C <AmiBlitz3.ab3@19027>   MOVE.w (A7)+,regnum
0002ED42 <AmiBlitz3.ab3@19029>   MOVE.w (a7)+,parnum                                     ;07.2014
0002ED46 <AmiBlitz3.ab3@19033>   CMP.w #"}",D0
0002ED4A <AmiBlitz3.ab3@19034>    BNE.w errorbracketmiss2
0002ED4C <AmiBlitz3.ab3@19037>    MOVEQ #0,d1                                            ; end of function call pars
0002ED52 <AmiBlitz3.ab3@19039>   MOVE.w regnum,D1
0002ED56 <AmiBlitz3.ab3@19040>    BEQ.w 'nopars3
0002ED5C <AmiBlitz3.ab3@19042>    TST.b fpu
0002ED60 <AmiBlitz3.ab3@19043>    BEQ 'old
0002ED68 <AmiBlitz3.ab3@19044>    CMP.b #5,retmode
0002ED6C <AmiBlitz3.ab3@19045>    BNE 'old
0002ED6E <AmiBlitz3.ab3@19046>    ASL.l #7,d1
0002ED74 <AmiBlitz3.ab3@19047>    OR.l #$f2000000,d1
0002ED78 <AmiBlitz3.ab3@19048>    BSR writelong
0002ED7C <AmiBlitz3.ab3@19049>  BRA 'nopars3
0002ED7E <AmiBlitz3.ab3@19053>   LSL.w #8,D1
0002ED80 <AmiBlitz3.ab3@19054>   LSL.w #1,D1
0002ED84 <AmiBlitz3.ab3@19055>   ORI.w #$2000,D1
0002ED88 <AmiBlitz3.ab3@19056>    BSR.w writeword         ;move.l d0,regat
0002ED8A <AmiBlitz3.ab3@19059>    MOVE.w (A7)+,D3
0002ED8E <AmiBlitz3.ab3@19060>    BEQ.w 'nomovem
0002ED94 <AmiBlitz3.ab3@19062>    TST.b fpu
0002ED98 <AmiBlitz3.ab3@19063>    BEQ 'old2
0002ED9A <AmiBlitz3.ab3@19064>    MOVE.l d0,-(a7)
0002ED9E <AmiBlitz3.ab3@19065>    MOVE.w #8,d0
0002EDA0 <AmiBlitz3.ab3@19066>    MOVE.l a0,-(a7)
0002EDA6 <AmiBlitz3.ab3@19067>    MOVE.l stacktrack,d1
0002EDAC <AmiBlitz3.ab3@19068>    LEA fpustackbase,a0
0002EDB4 <AmiBlitz3.ab3@19069>    MOVE.w 0(a0,d1),regmask
0002EDB6 <AmiBlitz3.ab3@19070>    MOVE.l (a7)+,a0
0002EDBA <AmiBlitz3.ab3@19073>   BEQ 'ready
0002EDC0 <AmiBlitz3.ab3@19074>    BTST d0,regmask
0002EDC4 <AmiBlitz3.ab3@19075>    BEQ 'noa7
0002EDC6 <AmiBlitz3.ab3@19076>    MOVEQ #0,d1
0002EDC8 <AmiBlitz3.ab3@19077>    MOVE.w d0,d1
0002EDCA <AmiBlitz3.ab3@19078>    SUBQ.w #1,d1
0002EDCC <AmiBlitz3.ab3@19079>    ASL #7,d1
0002EDD2 <AmiBlitz3.ab3@19081>    OR.l #$f21f5400,d1                                      ;fmove.d (a7)+
0002EDD6 <AmiBlitz3.ab3@19082>    BSR writelong
0002EDDC <AmiBlitz3.ab3@19083>    SUBQ.l #2,stacktrack
0002EDDE <AmiBlitz3.ab3@19086>    SUBQ.w #1,d0
0002EDE2 <AmiBlitz3.ab3@19087>    BNE 'loop
0002EDE8 <AmiBlitz3.ab3@19090>   SUBQ.l #2,stacktrack                                     ;integer sub
0002EDEA <AmiBlitz3.ab3@19091>   MOVE.l (a7)+,d0
0002EDEE <AmiBlitz3.ab3@19095>   MOVE.w #$4CDF,D1
0002EDF2 <AmiBlitz3.ab3@19096>    BSR.w writeword
0002EDF4 <AmiBlitz3.ab3@19097>   MOVEQ.l #$00,D1
0002EDF6 <AmiBlitz3.ab3@19098>   MOVEQ.l #$0F,D4
0002EDF8 <AmiBlitz3.ab3@19101>     LSL.w #1,D3
0002EDFA <AmiBlitz3.ab3@19102>     ROXR.w #1,D1
0002EDFE <AmiBlitz3.ab3@19103>   DBF D4,'loopsw                                         ;movem.l (a7)+,dx
0002EE02 <AmiBlitz3.ab3@19105>     BSR.w writeword        ;poke movem (a7)+...
0002EE08 <AmiBlitz3.ab3@19107>    CLR.w regnumfunc
0002EE0A <AmiBlitz3.ab3@19111>   MOVE.w (A7)+,D1
0002EE0E <AmiBlitz3.ab3@19112>    BEQ.b 'nores
0002EE12 <AmiBlitz3.ab3@19113>   CMPI.w #$7,(A7)
0002EE16 <AmiBlitz3.ab3@19114>    BEQ.b 'issb
0002EE1C <AmiBlitz3.ab3@19116>   LEA geta3,A0
0002EE22 <AmiBlitz3.ab3@19117>   LEA geta3f,A1
0002EE26 <AmiBlitz3.ab3@19118>    BSR.w pokecode
0002EE2A <AmiBlitz3.ab3@19119>  BRA.b 'nosb
0002EE30 <AmiBlitz3.ab3@19123>   MOVE.w deca3,D1
0002EE34 <AmiBlitz3.ab3@19124>    BSR.w writeword
0002EE38 <AmiBlitz3.ab3@19127>   BSR.w dopulla3          ;fix up string base
0002EE3A <AmiBlitz3.ab3@19130>   MOVE.w (A7)+,D2         ;what it returns!
0002EE3E <AmiBlitz3.ab3@19131>   CMP.w #$7,D2
0002EE42 <AmiBlitz3.ab3@19132>    BNE.w 'notst
0002EE48 <AmiBlitz3.ab3@19133>   MOVE.w putstlen,D1
0002EE4E <AmiBlitz3.ab3@19134>   OR.w regnum,D1
0002EE52 <AmiBlitz3.ab3@19135>    BSR.w writeword
0002EE56 <AmiBlitz3.ab3@19138>   BSR.w get1bytemain
0002EE5A <AmiBlitz3.ab3@19139> BRA.w varcont
0002EE5C <AmiBlitz3.ab3@19143> deca3:   Dc.b $53,$4B                                      ;SUBQ.W  #1,A3
0002EE64 <AmiBlitz3.ab3@19151>   CMP.b #2,optistring
0002EE68 <AmiBlitz3.ab3@19152>   BEQ 'fs2
0002EE6C <AmiBlitz3.ab3@19154>   BSR.w makesbase                                          ;writestringvariable
0002EE70 <AmiBlitz3.ab3@19155>   BTST #$F,D2
0002EE74 <AmiBlitz3.ab3@19156>    BNE.w 'already
0002EE7A <AmiBlitz3.ab3@19157>   MOVE.w D3,leaa5d3a2+2
0002EE80 <AmiBlitz3.ab3@19158>   MOVE.l leaa5d3a2,D1
0002EE84 <AmiBlitz3.ab3@19159>    BSR.w pokela5s
0002EE8A <AmiBlitz3.ab3@19162>   MOVE.w regnum,D1
0002EE8C <AmiBlitz3.ab3@19163>   LSL.w #8,D1
0002EE8E <AmiBlitz3.ab3@19164>   LSL.w #1,D1
0002EE92 <AmiBlitz3.ab3@19165>   ORI.w #$7000,D1
0002EE98 <AmiBlitz3.ab3@19166>   LEA stvarget2,A0
0002EE9A <AmiBlitz3.ab3@19167>   MOVE.w D1,(A0)
0002EEA0 <AmiBlitz3.ab3@19168>   MOVE.w regnum,D1
0002EEA6 <AmiBlitz3.ab3@19169>   ANDI.w #$FFF8,$2(A0)
0002EEAA <AmiBlitz3.ab3@19170>   OR.w D1,$2(A0)
0002EEB0 <AmiBlitz3.ab3@19171>   LEA stvarget2f,A1
0002EEB4 <AmiBlitz3.ab3@19172>    BSR.w pokecode
0002EEB8 <AmiBlitz3.ab3@19173>   MOVE.w #$C600,D1     ; was #copstring,
0002EEBC <AmiBlitz3.ab3@19174>    BSR.w Atokejsr
0002EEBE <AmiBlitz3.ab3@19175>   MOVEQ.l #$07,D2
0002EEC2 <AmiBlitz3.ab3@19176>  BRA.w reget
0002EEC8 <AmiBlitz3.ab3@19180>      TST.w stackpar
0002EECC <AmiBlitz3.ab3@19181>      BMI 'l10
0002EED2 <AmiBlitz3.ab3@19182>      MOVE.l #$3f3c0007,d1
0002EED8 <AmiBlitz3.ab3@19183>      ADDQ.w #2,a2offset
0002EEDC <AmiBlitz3.ab3@19184>      BSR writelong
0002EEE0 <AmiBlitz3.ab3@19187>   MOVE.w #$4878,d1
0002EEE6 <AmiBlitz3.ab3@19188>      CLR.w stackpar
0002EEEA <AmiBlitz3.ab3@19189>      BSR writeword
0002EEEE <AmiBlitz3.ab3@19190>      MOVE.w #$0,d1
0002EEF2 <AmiBlitz3.ab3@19191>      BSR writeword
0002EEF6 <AmiBlitz3.ab3@19192>      MOVE.w #$246d,d1
0002EEFA <AmiBlitz3.ab3@19193>      BSR writeword
0002EEFC <AmiBlitz3.ab3@19194>      MOVE.w d3,d1
0002EF00 <AmiBlitz3.ab3@19195>      BSR writeword
0002EF06 <AmiBlitz3.ab3@19196>      MOVE.l #$4a926704,d1
0002EF0A <AmiBlitz3.ab3@19197>      BSR writelong
0002EF10 <AmiBlitz3.ab3@19198>      MOVE.l #$2eaafffc,d1
0002EF14 <AmiBlitz3.ab3@19199>      BSR writelong
0002EF18 <AmiBlitz3.ab3@19200>      MOVE.w #$2f0a,d1
0002EF1E <AmiBlitz3.ab3@19201>      ADDQ.w #8,a2offset
0002EF22 <AmiBlitz3.ab3@19202>      BSR writeword
0002EF26 <AmiBlitz3.ab3@19203> BRA.w reget
0002EF2A <AmiBlitz3.ab3@19208>   CMP.b #$7,D2                                             ;load basic var
0002EF2E <AmiBlitz3.ab3@19209>    BEQ.w stvar
0002EF34 <AmiBlitz3.ab3@19211>    TST.b iee
0002EF38 <AmiBlitz3.ab3@19212>    BEQ 'noiee
0002EF3C <AmiBlitz3.ab3@19213>    CMP.b #5,d2
0002EF40 <AmiBlitz3.ab3@19214>    BNE 'noiee
0002EF42 <AmiBlitz3.ab3@19215>    MOVE.l d0,-(a7)                                         ;fpu load var
0002EF46 <AmiBlitz3.ab3@19216>    BTST #15,d2
0002EF4A <AmiBlitz3.ab3@19217>    BEQ 'var
0002EF50 <AmiBlitz3.ab3@19218>    CMP.l #$7fff,d3
0002EF54 <AmiBlitz3.ab3@19219>    BGT 'longoffset
0002EF5A <AmiBlitz3.ab3@19220>    MOVE.l #$f22a4400,d1                                    ;newtype     >32kb
0002EF5C <AmiBlitz3.ab3@19221>    TST.w d3                                                ;offset =0
0002EF60 <AmiBlitz3.ab3@19222>    BNE 'offset
0002EF66 <AmiBlitz3.ab3@19225>   MOVE.l #$f2124400,d1
0002EF68 <AmiBlitz3.ab3@19226>    MOVEQ #0,d3
0002EF6C <AmiBlitz3.ab3@19227>  BRA 'glob
0002EF72 <AmiBlitz3.ab3@19230>   SUBQ.l #4,destpointer
0002EF76 <AmiBlitz3.ab3@19231>  BRA 'glob
0002EF7C <AmiBlitz3.ab3@19234>   TST.b fast
0002EF80 <AmiBlitz3.ab3@19235>    BEQ 'nofastload
0002EF86 <AmiBlitz3.ab3@19236>    TST.w regnum
0002EF8A <AmiBlitz3.ab3@19237>    BNE 'nofastload
0002EF90 <AmiBlitz3.ab3@19238>    CMP.l fp0addr,a4
0002EF94 <AmiBlitz3.ab3@19239>    BNE 'nofastload
0002EF9A <AmiBlitz3.ab3@19240>    MOVE.l fp0iff,d1
0002EFA0 <AmiBlitz3.ab3@19241>    CMP.l firstiff,d1
0002EFA4 <AmiBlitz3.ab3@19242>    BNE 'nofastload
0002EFAA <AmiBlitz3.ab3@19243>    MOVE.w varmode,d1
0002EFB0 <AmiBlitz3.ab3@19244>    CMP.w fp0mode,d1
0002EFB4 <AmiBlitz3.ab3@19245>    BNE 'nofastload
0002EFBA <AmiBlitz3.ab3@19246>    CMP.w fp0var,d3
0002EFBE <AmiBlitz3.ab3@19247>    BNE 'nofastload
0002EFC2 <AmiBlitz3.ab3@19248>    BCLR #16,d2
0002EFC4 <AmiBlitz3.ab3@19249>    MOVE.l (a7)+,d0
0002EFC6 <AmiBlitz3.ab3@19250>  RTS
0002EFC8 <AmiBlitz3.ab3@19253>    MOVEQ #0,d0
0002EFCE <AmiBlitz3.ab3@19254>    MOVE.w regnum,d0
0002EFD4 <AmiBlitz3.ab3@19255>    CMP.l maxregs,d0
0002EFD8 <AmiBlitz3.ab3@19256>    BLE 'ok
0002EFDE <AmiBlitz3.ab3@19257>    LEA cmplxerr,a0
0002EFE0 <AmiBlitz3.ab3@19258>   MOVE.l a0,-(a7)
0002EFE6 <AmiBlitz3.ab3@19259>  JMP handle_compileerror
0002EFEC <AmiBlitz3.ab3@19262>    LEA regtable,a4
0002EFEE <AmiBlitz3.ab3@19263>    TST.l (a4)
0002EFF2 <AmiBlitz3.ab3@19264>    BEQ 'noreg
0002EFF6 <AmiBlitz3.ab3@19265>    CMP.w 0+4(a4),d3
0002EFFA <AmiBlitz3.ab3@19266>    BNE 'doreg1
0002F000 <AmiBlitz3.ab3@19267>    MOVE.l #$f2001c00,d1
0002F006 <AmiBlitz3.ab3@19268>    MOVE.w regnum,d0
0002F008 <AmiBlitz3.ab3@19269>    ASL.w #7,d0
0002F00A <AmiBlitz3.ab3@19270>    OR.w d0,d1
0002F00E <AmiBlitz3.ab3@19271>    BSR writelong
0002F010 <AmiBlitz3.ab3@19272>    MOVE.l (a7)+,d0
0002F012 <AmiBlitz3.ab3@19273>  RTS
0002F016 <AmiBlitz3.ab3@19276>   CMP.w 8+4(a4),d3
0002F01A <AmiBlitz3.ab3@19277>    BNE 'doreg2
0002F020 <AmiBlitz3.ab3@19278>    MOVE.l #$f2001800,d1
0002F026 <AmiBlitz3.ab3@19279>    MOVE.w regnum,d0
0002F028 <AmiBlitz3.ab3@19280>    ASL.w #7,d0
0002F02A <AmiBlitz3.ab3@19281>    OR.w d0,d1
0002F02E <AmiBlitz3.ab3@19282>    BSR writelong
0002F030 <AmiBlitz3.ab3@19283>    MOVE.l (a7)+,d0
0002F032 <AmiBlitz3.ab3@19284>  RTS
0002F036 <AmiBlitz3.ab3@19287>   CMP.w 16+4(a4),d3
0002F03A <AmiBlitz3.ab3@19288>    BNE 'doreg3
0002F040 <AmiBlitz3.ab3@19289>    MOVE.l #$f2001400,d1
0002F046 <AmiBlitz3.ab3@19290>    MOVE.w regnum,d0
0002F048 <AmiBlitz3.ab3@19291>    ASL.w #7,d0
0002F04A <AmiBlitz3.ab3@19292>    OR.w d0,d1
0002F04E <AmiBlitz3.ab3@19293>    BSR  writelong
0002F050 <AmiBlitz3.ab3@19294>    MOVE.l (a7)+,d0
0002F052 <AmiBlitz3.ab3@19295>  RTS
0002F056 <AmiBlitz3.ab3@19298>   CMP.w 24+4(a4),d3
0002F05A <AmiBlitz3.ab3@19299>    BNE 'doreg4
0002F060 <AmiBlitz3.ab3@19300>    MOVE.l #$f2001000,d1
0002F066 <AmiBlitz3.ab3@19301>    MOVE.w regnum,d0
0002F068 <AmiBlitz3.ab3@19302>    ASL.w #7,d0
0002F06A <AmiBlitz3.ab3@19303>    OR.w d0,d1
0002F06E <AmiBlitz3.ab3@19304>    BSR writelong
0002F070 <AmiBlitz3.ab3@19305>    MOVE.l (a7)+,d0
0002F072 <AmiBlitz3.ab3@19306>  RTS
0002F076 <AmiBlitz3.ab3@19309>    CMP.w 32+4(a4),d3
0002F07A <AmiBlitz3.ab3@19310>    BNE 'noreg
0002F080 <AmiBlitz3.ab3@19311>    MOVE.l #$f2000c00,d1
0002F086 <AmiBlitz3.ab3@19312>    MOVE.w regnum,d0
0002F088 <AmiBlitz3.ab3@19313>    ASL.w #7,d0
0002F08A <AmiBlitz3.ab3@19314>    OR.w d0,d1
0002F08E <AmiBlitz3.ab3@19315>    BSR writelong
0002F090 <AmiBlitz3.ab3@19316>    MOVE.l (a7)+,d0
0002F092 <AmiBlitz3.ab3@19317>  RTS
0002F098 <AmiBlitz3.ab3@19320>    MOVE.l #$f22d4400,d1                                    ;var
0002F09E <AmiBlitz3.ab3@19321>    TST.w varmode
0002F0A2 <AmiBlitz3.ab3@19322>   BEQ 'glob
0002F0A6 <AmiBlitz3.ab3@19323>   BCLR #16,d1                                              ;local
0002F0A8 <AmiBlitz3.ab3@19326>    MOVEQ #0,d0
0002F0AE <AmiBlitz3.ab3@19327>    MOVE.w regnum,d0
0002F0B2 <AmiBlitz3.ab3@19328>    CMP.w #7,d0
0002F0B6 <AmiBlitz3.ab3@19329>    BLE 'ok2
0002F0BC <AmiBlitz3.ab3@19330>    LEA cmplxerr,a0
0002F0BE <AmiBlitz3.ab3@19331>   MOVE.l a0,-(a7)
0002F0C4 <AmiBlitz3.ab3@19332>  JMP handle_compileerror
0002F0C6 <AmiBlitz3.ab3@19335>      ASL.w #7,d0
0002F0C8 <AmiBlitz3.ab3@19336>    OR.l d0,d1
0002F0D0 <AmiBlitz3.ab3@19337>    CMP.l #doublecheck,8(a2)
0002F0D4 <AmiBlitz3.ab3@19338>    BNE 'dbl
0002F0DA <AmiBlitz3.ab3@19339>    OR.l #$00001000,d1
0002F0DE <AmiBlitz3.ab3@19342>   BSR writelong
0002F0E0 <AmiBlitz3.ab3@19343>    MOVE.l (a7)+,d0
0002F0E4 <AmiBlitz3.ab3@19344>    AND.w #$ff,d2
0002F0E6 <AmiBlitz3.ab3@19345>    MOVE.w d3,d1
0002F0EA <AmiBlitz3.ab3@19346>    BEQ 'nooffs
0002F0EE <AmiBlitz3.ab3@19347>  BRA writeword
0002F0F0 <AmiBlitz3.ab3@19352>  RTS
0002F0F6 <AmiBlitz3.ab3@19355>   MOVE.w regnum,D1
0002F0FC <AmiBlitz3.ab3@19357>   MOVE.w d1,load_var_reg
0002F0FE <AmiBlitz3.ab3@19359>   LSL.w #8,D1
0002F108 <AmiBlitz3.ab3@19361>   MOVE.l destpointer,load_var_addr
0002F10E <AmiBlitz3.ab3@19362>   MOVE.w d2,load_var_size
0002F110 <AmiBlitz3.ab3@19364>   LSL.w #1,D1
0002F114 <AmiBlitz3.ab3@19365>   BTST #$E,D2
0002F118 <AmiBlitz3.ab3@19366>    BNE.w 'pointer
0002F11A <AmiBlitz3.ab3@19367>   TST.b D2
0002F11E <AmiBlitz3.ab3@19368>    BNE.w 'skip2
0002F120 <AmiBlitz3.ab3@19369>   MOVEQ.l #$03,D2
0002F124 <AmiBlitz3.ab3@19370>   ORI.w #$200A,D1
0002F128 <AmiBlitz3.ab3@19371>  BRA.w writeword
0002F12C <AmiBlitz3.ab3@19374>   MOVE.b #$3,D2
0002F130 <AmiBlitz3.ab3@19377>   BTST #$F,D2
0002F134 <AmiBlitz3.ab3@19378>    BEQ.w 'simpvar                                         ;loadarray
0002F13A <AmiBlitz3.ab3@19380>    TST.b fast                                              ;lea->move xx(a2)
0002F13E <AmiBlitz3.ab3@19381>    BEQ 'la10
0002F144 <AmiBlitz3.ab3@19386>    CLR.l load_var_addr
0002F148 <AmiBlitz3.ab3@19387>  BRA 'la10
0002F150 <AmiBlitz3.ab3@19389>    CMP.w #$2012,movea2dn                                  ;??Looks like dead code??
0002F154 <AmiBlitz3.ab3@19390>    BNE 'la10
0002F15A <AmiBlitz3.ab3@19391>    TST.b optiarray
0002F15E <AmiBlitz3.ab3@19392>    BNE 'la10
0002F164 <AmiBlitz3.ab3@19393>    MOVE.l destpointer,a4
0002F16A <AmiBlitz3.ab3@19394>    SUB.l loada,a4
0002F16E <AmiBlitz3.ab3@19395>    CMP.w #4,a4
0002F172 <AmiBlitz3.ab3@19396>    BEQ 'la100
0002F176 <AmiBlitz3.ab3@19397>    CMP.w #2,a4
0002F17A <AmiBlitz3.ab3@19398>    BNE 'la10
0002F180 <AmiBlitz3.ab3@19399>    MOVE.l destpointer,a4
0002F184 <AmiBlitz3.ab3@19400>    CMP.b #3,d2
0002F188 <AmiBlitz3.ab3@19401>    BCS 'la110
0002F18E <AmiBlitz3.ab3@19402>    MOVE.w #$202a,-2(a4)
0002F192 <AmiBlitz3.ab3@19403>    OR.w d1,-2(a4)
0002F198 <AmiBlitz3.ab3@19404>    MOVE.w arrayoffset,d1
0002F19C <AmiBlitz3.ab3@19405>    BSR writeword
0002F1A0 <AmiBlitz3.ab3@19406>  BRA 'more
0002F1A4 <AmiBlitz3.ab3@19409>    CMP.b #2,d2
0002F1A8 <AmiBlitz3.ab3@19410>    BNE 'la120
0002F1AE <AmiBlitz3.ab3@19411>     MOVE.w #$302a,-2(a4)
0002F1B2 <AmiBlitz3.ab3@19412>    OR.w d1,-2(a4)
0002F1B8 <AmiBlitz3.ab3@19414>    MOVE.w arrayoffset,d1
0002F1BC <AmiBlitz3.ab3@19415>    BSR writeword
0002F1C0 <AmiBlitz3.ab3@19416>  BRA 'more
0002F1C4 <AmiBlitz3.ab3@19419>   CMP.b #1,d2
0002F1C8 <AmiBlitz3.ab3@19420>    BNE.s 'la10
0002F1CE <AmiBlitz3.ab3@19421>     MOVE.w #$102a,-2(a4)
0002F1D2 <AmiBlitz3.ab3@19422>    OR.w d1,-2(a4)
0002F1D8 <AmiBlitz3.ab3@19423>    MOVE.w arrayoffset,d1
0002F1DC <AmiBlitz3.ab3@19424>    BSR writeword
0002F1E0 <AmiBlitz3.ab3@19425>  BRA 'more
0002F1E6 <AmiBlitz3.ab3@19428>   MOVE.l destpointer,a4
0002F1EC <AmiBlitz3.ab3@19429>    CMP.w #$45ea,-2(a4)
0002F1F0 <AmiBlitz3.ab3@19430>    BNE 'la10
0002F1F4 <AmiBlitz3.ab3@19431>    CMP.b #3,d2
0002F1F8 <AmiBlitz3.ab3@19432>    BCS 'la11
0002F1FE <AmiBlitz3.ab3@19433>    MOVE.w #$202a,-4(a4)
0002F202 <AmiBlitz3.ab3@19434>    OR.w d1,-4(a4)
0002F206 <AmiBlitz3.ab3@19435>  BRA 'more
0002F20A <AmiBlitz3.ab3@19438>    CMP.b #2,d2
0002F20E <AmiBlitz3.ab3@19439>    BNE 'la12
0002F214 <AmiBlitz3.ab3@19440>     MOVE.w #$302a,-4(a4)
0002F218 <AmiBlitz3.ab3@19441>    OR.w d1,-4(a4)
0002F21C <AmiBlitz3.ab3@19442>  BRA 'more
0002F220 <AmiBlitz3.ab3@19445>   CMP.b #1,d2
0002F224 <AmiBlitz3.ab3@19446>    BNE.s 'la10
0002F22A <AmiBlitz3.ab3@19447>     MOVE.w #$102a,-4(a4)
0002F22E <AmiBlitz3.ab3@19448>    OR.w d1,-4(a4)
0002F232 <AmiBlitz3.ab3@19449>  BRA 'more
0002F238 <AmiBlitz3.ab3@19453>    OR.w movea2dn,D1
0002F23C <AmiBlitz3.ab3@19454>    BSR.w 'size
0002F240 <AmiBlitz3.ab3@19455>    BSR.w writeword
0002F244 <AmiBlitz3.ab3@19458>   ANDI.w #$FF,D2
0002F246 <AmiBlitz3.ab3@19459>  RTS
0002F24C <AmiBlitz3.ab3@19463>    MOVE.l destpointer,a4              ; "
0002F254 <AmiBlitz3.ab3@19464>    MOVE.l #$f22a4400,-4(a4)           ; "
0002F25A <AmiBlitz3.ab3@19465>    MOVE.w arrayoffset,d1              ; "
0002F25E <AmiBlitz3.ab3@19466>  BRA writeword
0002F264 <AmiBlitz3.ab3@19470>   OR.w moved3a5dn,D1                                        ;write move.l 0(a5),reg
0002F268 <AmiBlitz3.ab3@19471>    BSR.w 'size
0002F26C <AmiBlitz3.ab3@19472>    BSR.w pokewda5s
0002F26E <AmiBlitz3.ab3@19473>   MOVE.w D3,D1
0002F272 <AmiBlitz3.ab3@19474>    BSR.w writeword
0002F276 <AmiBlitz3.ab3@19475>  BRA.w 'more
0002F27A <AmiBlitz3.ab3@19480>   BTST #$E,D2
0002F27E <AmiBlitz3.ab3@19481>    BNE.w 'long
0002F282 <AmiBlitz3.ab3@19482>   CMP.b #$1,D2
0002F286 <AmiBlitz3.ab3@19483>    BEQ.w 'byte
0002F28A <AmiBlitz3.ab3@19484>   CMP.b #$2,D2
0002F28E <AmiBlitz3.ab3@19485>    BEQ.w 'word
0002F290 <AmiBlitz3.ab3@19488>  RTS
0002F294 <AmiBlitz3.ab3@19491>   EORI.w #$3000,D1
0002F296 <AmiBlitz3.ab3@19492>  RTS
0002F29A <AmiBlitz3.ab3@19495>   ORI.w #$1000,D1
0002F29C <AmiBlitz3.ab3@19496> RTS
0002F2A4 <AmiBlitz3.ab3@19502>   MOVE.w #$FFFF,dfetch    ; was -1
0002F2A8 <AmiBlitz3.ab3@19503>   BSR.w get1bytemain
0002F2AC <AmiBlitz3.ab3@19504>   CMP.w #$2D,D0           ;'-'
0002F2B0 <AmiBlitz3.ab3@19505>    BNE.w 'datado
0002F2B4 <AmiBlitz3.ab3@19506>   BSR.w get1bytemain
0002F2B8 <AmiBlitz3.ab3@19507>   BSR.w 'datado
0002F2BC <AmiBlitz3.ab3@19509>   CMP.w #$5,D2
0002F2C0 <AmiBlitz3.ab3@19510>    BCC.w 'nfp
0002F2C2 <AmiBlitz3.ab3@19511>   NEG.l D0
0002F2C4 <AmiBlitz3.ab3@19512>  RTS
0002F2CA <AmiBlitz3.ab3@19516>   TST.b fpu
0002F2CE <AmiBlitz3.ab3@19517>   BEQ 'noneg
0002F2D2 <AmiBlitz3.ab3@19518>   fneg.x fp0
0002F2D4 <AmiBlitz3.ab3@19519>  RTS
0002F2D8 <AmiBlitz3.ab3@19524>   BCHG #$7,D0
0002F2DA <AmiBlitz3.ab3@19525>  RTS
0002F2DE <AmiBlitz3.ab3@19529>   CMP.w #$24,D0          ;'$'
0002F2E2 <AmiBlitz3.ab3@19530>    BEQ.w get_hexconstant
0002F2E6 <AmiBlitz3.ab3@19531>   CMP.w #$25,D0          ;'%'
0002F2EA <AmiBlitz3.ab3@19532>    BEQ.w fetchbin
0002F2EE <AmiBlitz3.ab3@19535>   CMP.w #$2E,D0          ;'.'
0002F2F2 <AmiBlitz3.ab3@19536>    BNE.w fetchnum
0002F2F4 <AmiBlitz3.ab3@19540>   MOVEQ.l #$00,D3
0002F2F8 <AmiBlitz3.ab3@19541> BRA.w fetchpoint2
0002F2FA <AmiBlitz3.ab3@19545>   MOVEQ.l #$00,D3                                          ;number
0002F2FE <AmiBlitz3.ab3@19547>    BSR.w atoi
0002F302 <AmiBlitz3.ab3@19549>   CMP.w #$2E,D0             ;'.'
0002F306 <AmiBlitz3.ab3@19550>    BEQ.w fetchpoint
0002F30A <AmiBlitz3.ab3@19551>   ORI.w #$20,D0
0002F30E <AmiBlitz3.ab3@19552>   CMP.w #$65,D0             ;'e'
0002F312 <AmiBlitz3.ab3@19553>    BNE.w fetchnum2
0002F318 <AmiBlitz3.ab3@19554>   CMP.l #$800000,D3
0002F31C <AmiBlitz3.ab3@19555>    BCC.w overerr
0002F31E <AmiBlitz3.ab3@19556>   MOVEQ.l #-$01,D6
0002F322 <AmiBlitz3.ab3@19558>   fmove.l d3,fp0
0002F324 <AmiBlitz3.ab3@19560>   MOVE.l D3,D0
0002F32A <AmiBlitz3.ab3@19561>   MOVEA.l _mathffpbase,A6
0002F32E <AmiBlitz3.ab3@19562>    JSR -$24(A6)             ;int to ffp
0002F330 <AmiBlitz3.ab3@19563>   MOVE.l D0,D3
0002F334 <AmiBlitz3.ab3@19564>    BSR.w dothee
0002F338 <AmiBlitz3.ab3@19565>    BSR.w reget
0002F33C <AmiBlitz3.ab3@19566>    BSR.w consttype2
0002F340 <AmiBlitz3.ab3@19567> BRA.w fetchnum3
0002F344 <AmiBlitz3.ab3@19572>   CMP.b #4,d2
0002F348 <AmiBlitz3.ab3@19573>   BEQ 'l4
0002F34C <AmiBlitz3.ab3@19574>   MOVE.b #5,d2                                             ;nprint 2/0.5 bugfix
0002F352 <AmiBlitz3.ab3@19577>    TST.b fpu
0002F356 <AmiBlitz3.ab3@19578>    BNE 'l1
0002F35C <AmiBlitz3.ab3@19580>    CMP.l #$800000,D3
0002F360 <AmiBlitz3.ab3@19581>    BCC.w overerr
0002F364 <AmiBlitz3.ab3@19583>  BRA fetchpoint2
0002F36A <AmiBlitz3.ab3@19586>   CMP.l #$7fffffff,d3
0002F36E <AmiBlitz3.ab3@19587>     BCC.w overerr
0002F370 <AmiBlitz3.ab3@19592>   MOVEQ.l #-$01,D6         ;now a float.
0002F372 <AmiBlitz3.ab3@19593>   MOVE.l D3,D0
0002F376 <AmiBlitz3.ab3@19595>   fmove.l d3,fp0
0002F37C <AmiBlitz3.ab3@19597>   MOVEA.l _mathffpbase,A6
0002F380 <AmiBlitz3.ab3@19598>    JSR -$24(A6)            ;int to ffp                                       ;integer to ffp
0002F382 <AmiBlitz3.ab3@19599>   MOVE.l D0,-(A7)          ;save whole number
0002F386 <AmiBlitz3.ab3@19600>    BSR.w get1bytemain
0002F38A <AmiBlitz3.ab3@19601>    BSR.w tstnum
0002F38E <AmiBlitz3.ab3@19602>    BNE.w syntaxerr
0002F390 <AmiBlitz3.ab3@19603>   MOVEQ.l #$00,D3
0002F394 <AmiBlitz3.ab3@19604>    BSR.w atoi              ;get int frac
0002F396 <AmiBlitz3.ab3@19605>   TST.l D3
0002F39A <AmiBlitz3.ab3@19606>    BEQ.w 'pskip
0002F3A0 <AmiBlitz3.ab3@19608>   TST.b fpu
0002F3A4 <AmiBlitz3.ab3@19609>   BNE 'l1
0002F3AA <AmiBlitz3.ab3@19611>   CMP.l #$800000,D3
0002F3AE <AmiBlitz3.ab3@19612>    BCC.w overerr
0002F3B2 <AmiBlitz3.ab3@19614>  BRA 'l2
0002F3B8 <AmiBlitz3.ab3@19617>   CMP.l #$7fffffff,d3
0002F3BC <AmiBlitz3.ab3@19618>   BCC overerr
0002F3C0 <AmiBlitz3.ab3@19621>   fmove.l d5,fp1
0002F3C2 <AmiBlitz3.ab3@19623>   MOVE.l D5,D0
0002F3C6 <AmiBlitz3.ab3@19624>    JSR -$24(A6)        ;divisor to ffp
0002F3C8 <AmiBlitz3.ab3@19625>   MOVE.l D0,D5
0002F3CC <AmiBlitz3.ab3@19627>   fmove.l d3,fp2
0002F3CE <AmiBlitz3.ab3@19629>   MOVE.l D3,D0
0002F3D2 <AmiBlitz3.ab3@19630>    JSR -$24(A6)        ;to ffp
0002F3D6 <AmiBlitz3.ab3@19632>   fdiv.x fp1,fp2
0002F3D8 <AmiBlitz3.ab3@19634>   MOVE.l D5,D1
0002F3DC <AmiBlitz3.ab3@19635>    JSR -$54(A6)       ;num/divisor (eg .25=25/100)
0002F3E0 <AmiBlitz3.ab3@19637>   fadd.x fp2,fp0
0002F3E2 <AmiBlitz3.ab3@19639>   MOVE.l (A7)+,D1
0002F3E6 <AmiBlitz3.ab3@19640>    JSR -$42(A6)       ;add 'em
0002F3E8 <AmiBlitz3.ab3@19641>   MOVE.l D0,D3
0002F3EC <AmiBlitz3.ab3@19642>    BSR.w reget
0002F3F0 <AmiBlitz3.ab3@19643>   ORI.w #$20,D0
0002F3F4 <AmiBlitz3.ab3@19644>   CMP.w #$65,D0       ;'e'
0002F3F8 <AmiBlitz3.ab3@19645>    BNE.w 'pskip2
0002F3FC <AmiBlitz3.ab3@19648>    BSR.w dothee
0002F400 <AmiBlitz3.ab3@19651>    BSR.w reget
0002F404 <AmiBlitz3.ab3@19652>    BSR.w consttype2
0002F408 <AmiBlitz3.ab3@19653> BRA.w fetchnum3
0002F40A <AmiBlitz3.ab3@19656>   MOVE.l (A7)+,D3
0002F40E <AmiBlitz3.ab3@19657> BRA.w 'pskip2
0002F412 <AmiBlitz3.ab3@19662>   BSR.w get1bytemain
0002F416 <AmiBlitz3.ab3@19663>   CMP.w #$2B,D0       ;'+'
0002F41A <AmiBlitz3.ab3@19664>    BEQ.w 'pos
0002F41E <AmiBlitz3.ab3@19665>   CMP.w #$2D,D0       ;'-'
0002F422 <AmiBlitz3.ab3@19666>    BNE.w 'pos2
0002F426 <AmiBlitz3.ab3@19668>    BSR.w get1bytemain
0002F42A <AmiBlitz3.ab3@19669>    BSR.w getsign
0002F42C <AmiBlitz3.ab3@19673>   MOVE.l D3,D0
0002F430 <AmiBlitz3.ab3@19675>   fdiv.x fp1,fp0
0002F432 <AmiBlitz3.ab3@19677>   MOVE.l D4,D1
0002F436 <AmiBlitz3.ab3@19678>    JSR -$54(A6)
0002F438 <AmiBlitz3.ab3@19679>   MOVE.l D0,D3
0002F43A <AmiBlitz3.ab3@19680> RTS
0002F43E <AmiBlitz3.ab3@19683>   BSR.w get1bytemain
0002F442 <AmiBlitz3.ab3@19686>   BSR.w getsign
0002F446 <AmiBlitz3.ab3@19690>   fmul.x fp1,fp0
0002F448 <AmiBlitz3.ab3@19691>   MOVE.l D3,D0
0002F44A <AmiBlitz3.ab3@19692>   MOVE.l D4,D1
0002F44E <AmiBlitz3.ab3@19693>    JSR -$4E(A6)
0002F450 <AmiBlitz3.ab3@19694>   MOVE.l D0,D3
0002F452 <AmiBlitz3.ab3@19695> RTS
0002F456 <AmiBlitz3.ab3@19699>   BSR.w tstnum
0002F45A <AmiBlitz3.ab3@19700>    BNE.w syntaxerr
0002F45C <AmiBlitz3.ab3@19701>   MOVE.w D0,D4
0002F460 <AmiBlitz3.ab3@19702>   SUBI.w #$30,D4
0002F464 <AmiBlitz3.ab3@19703>    BSR.w get1bytemain
0002F468 <AmiBlitz3.ab3@19704>    BSR.w tstnum
0002F46C <AmiBlitz3.ab3@19705>    BNE.w 'skip
0002F470 <AmiBlitz3.ab3@19706>   MULU #$A,D4
0002F474 <AmiBlitz3.ab3@19707>   SUBI.w #$30,D0
0002F476 <AmiBlitz3.ab3@19708>   ADD.w D0,D4
0002F47A <AmiBlitz3.ab3@19709>    BSR.w get1bytemain
0002F47E <AmiBlitz3.ab3@19713>   CMP.w #$12,D4
0002F482 <AmiBlitz3.ab3@19714>    BHI.w overerr
0002F484 <AmiBlitz3.ab3@19716>   LSL.w #3,D4
0002F48A <AmiBlitz3.ab3@19717>   LEA fputab,a0
0002F48C <AmiBlitz3.ab3@19718>   ADD.l d4,a0
0002F492 <AmiBlitz3.ab3@19719>   fmove.d 0(a0),fp1
0002F494 <AmiBlitz3.ab3@19721>   LSR.w #1,d4               ; was #2
0002F498 <AmiBlitz3.ab3@19722>   MOVE.l facts(PC,D4.W),D4
0002F49A <AmiBlitz3.ab3@19723> RTS
0002F4E2 <AmiBlitz3.ab3@19727>   Dc.d 1,10,100,1000,10000,100000,1000000,10000000,100000000  ;,1000000000,10000000000
0002F4E6 <AmiBlitz3.ab3@19732>   Dc.l $80000041
0002F4EA <AmiBlitz3.ab3@19733>   Dc.l $A0000044
0002F4EE <AmiBlitz3.ab3@19734>   Dc.l $C8000047
0002F4F2 <AmiBlitz3.ab3@19735>   Dc.l $FA00004A
0002F4F6 <AmiBlitz3.ab3@19736>   Dc.l $9C40004E
0002F4FA <AmiBlitz3.ab3@19737>   Dc.l $C3500051
0002F4FE <AmiBlitz3.ab3@19738>   Dc.l $F4240054
0002F502 <AmiBlitz3.ab3@19739>   Dc.l $98968058
0002F506 <AmiBlitz3.ab3@19740>   Dc.l $BEBC205B
0002F50A <AmiBlitz3.ab3@19741>   Dc.l $EE6B285E
0002F50E <AmiBlitz3.ab3@19742>   Dc.l $9502F962
0002F512 <AmiBlitz3.ab3@19743>   Dc.l $BA43B765
0002F516 <AmiBlitz3.ab3@19744>   Dc.l $E8D4A568
0002F51A <AmiBlitz3.ab3@19745>   Dc.l $9184E76C
0002F51E <AmiBlitz3.ab3@19746>   Dc.l $B5E6A96F
0002F522 <AmiBlitz3.ab3@19747>   Dc.l $E35F2972
0002F526 <AmiBlitz3.ab3@19748>   Dc.l $8E1BCA76
0002F52A <AmiBlitz3.ab3@19749>   Dc.l $B1A2BD79
0002F52E <AmiBlitz3.ab3@19750>   Dc.l $DE0B6C7C
0002F530 <AmiBlitz3.ab3@19754>   MOVEQ.l #$01,D5
0002F532 <AmiBlitz3.ab3@19757>   LSL.l #1,D5
0002F534 <AmiBlitz3.ab3@19758>   MOVE.l D5,D1
0002F536 <AmiBlitz3.ab3@19759>   LSL.l #2,D5
0002F538 <AmiBlitz3.ab3@19760>   ADD.l D1,D5                                              ;divisor for frac convert!
0002F53A <AmiBlitz3.ab3@19762>   LSL.l #1,D3
0002F53E <AmiBlitz3.ab3@19763>    BCS.w overerr
0002F540 <AmiBlitz3.ab3@19764>   MOVE.l D3,D1
0002F542 <AmiBlitz3.ab3@19765>   LSL.l #1,D3
0002F546 <AmiBlitz3.ab3@19766>    BCS.w overerr
0002F548 <AmiBlitz3.ab3@19767>   LSL.l #1,D3
0002F54C <AmiBlitz3.ab3@19768>    BCS.w overerr
0002F54E <AmiBlitz3.ab3@19769>   ADD.l D1,D3
0002F552 <AmiBlitz3.ab3@19770>   SUBI.w #$30,D0
0002F554 <AmiBlitz3.ab3@19771>   ADD.l D0,D3
0002F580 <AmiBlitz3.ab3@19773>    !fget                                                   ;bsr.w get1bytemain
0002F584 <AmiBlitz3.ab3@19774>    CMP.b #1,d0
0002F588 <AmiBlitz3.ab3@19775>    BNE 'cm1
0002F58A <AmiBlitz3.ab3@19776>    SUBQ.l #1,a5
0002F58E <AmiBlitz3.ab3@19777>    BSR get1bytemain                                        ;??wy not !fget
0002F592 <AmiBlitz3.ab3@19780>   CMP.b #$7e,d0
0002F596 <AmiBlitz3.ab3@19781>    BNE 'cm2
0002F598 <AmiBlitz3.ab3@19782>    SUBQ.l #1,a5
0002F59C <AmiBlitz3.ab3@19783>    BSR get1bytemain
0002F59E <AmiBlitz3.ab3@19786>   TST.b d0
0002F5A2 <AmiBlitz3.ab3@19787>    BPL 'l10
0002F5A4 <AmiBlitz3.ab3@19788>    LSL.w #8,d0
0002F5A6 <AmiBlitz3.ab3@19789>    MOVE.b (a5)+,d0
0002F5AC <AmiBlitz3.ab3@19790>    MOVE.w d0,lastchar
0002F5BE <AmiBlitz3.ab3@19793>   !compare2                                                ;bsr.w tstnum ;cmake bug
0002F5C2 <AmiBlitz3.ab3@19795>    BEQ.w 'loop
0002F5C4 <AmiBlitz3.ab3@19796> RTS
0002F5C6 <AmiBlitz3.ab3@19799> dfetch:  Ds.w 1                                            ;fetching data?
0002F5CA <AmiBlitz3.ab3@19803>   MOVE.w dfetch(PC),D1
0002F5CE <AmiBlitz3.ab3@19804>    BEQ.w 'doit
0002F5D4 <AmiBlitz3.ab3@19805>   CLR.w dfetch
0002F5D6 <AmiBlitz3.ab3@19806>  RTS
0002F5DC <AmiBlitz3.ab3@19810>   MOVE.b d2,isconstantvalue
0002F5E2 <AmiBlitz3.ab3@19811>   MOVE.l d0,lastconstantvalue
0002F5E8 <AmiBlitz3.ab3@19812>   MOVE.w d2,imm_size
0002F5F2 <AmiBlitz3.ab3@19813>   MOVE.w regnum,imm_reg
0002F5FC <AmiBlitz3.ab3@19814>   MOVE.l destpointer,imm_addr                           ; long
0002F600 <AmiBlitz3.ab3@19816>   CMP.w #$3,D2          ; order of cmp/beq in org soure is different
0002F604 <AmiBlitz3.ab3@19817>   BEQ.w 'long
0002F608 <AmiBlitz3.ab3@19818>   CMP.w #$5,D2                                          ;float
0002F60C <AmiBlitz3.ab3@19819>   BEQ.w 'long
0002F610 <AmiBlitz3.ab3@19820>   CMP.w #$1,D2
0002F614 <AmiBlitz3.ab3@19821>   BEQ.w 'word
0002F618 <AmiBlitz3.ab3@19822>   CMP.w #$2,D2
0002F61C <AmiBlitz3.ab3@19823>   BEQ.w 'word
0002F620 <AmiBlitz3.ab3@19824>   CMP.w #$4,D2
0002F624 <AmiBlitz3.ab3@19825>   BEQ.w 'long
0002F628 <AmiBlitz3.ab3@19826>  BRA.w mismatcherr
0002F62E <AmiBlitz3.ab3@19829>   MOVE.w regnum,D1
0002F630 <AmiBlitz3.ab3@19830>   LSL.w #8,D1
0002F632 <AmiBlitz3.ab3@19831>   LSL.w #1,D1
0002F636 <AmiBlitz3.ab3@19832>   ORI.w #$303C,D1
0002F63A <AmiBlitz3.ab3@19833>    BSR.w writeword
0002F63C <AmiBlitz3.ab3@19834>   MOVE.w D0,D1
0002F640 <AmiBlitz3.ab3@19835>    BSR.w writeword
0002F644 <AmiBlitz3.ab3@19836>  BRA.w reget
0002F646 <AmiBlitz3.ab3@19840>   MOVEQ #0,d1
0002F64C <AmiBlitz3.ab3@19842>   MOVE.w regnum,D1
0002F652 <AmiBlitz3.ab3@19844>   TST.b fpu
0002F656 <AmiBlitz3.ab3@19845>   BEQ 'f1
0002F65A <AmiBlitz3.ab3@19846>   CMP.w #5,d2
0002F65E <AmiBlitz3.ab3@19847>   BEQ 'l10
0002F662 <AmiBlitz3.ab3@19848>  BRA 'f2
0002F668 <AmiBlitz3.ab3@19851>   TST.b iee
0002F66C <AmiBlitz3.ab3@19852>   BNE 'l10
0002F66E <AmiBlitz3.ab3@19856>   LSL.w #8,D1
0002F670 <AmiBlitz3.ab3@19857>   LSL.w #1,D1
0002F674 <AmiBlitz3.ab3@19858>   ORI.w #$203C,D1
0002F678 <AmiBlitz3.ab3@19859>    BSR.w writeword
0002F67A <AmiBlitz3.ab3@19860>   MOVE.l D0,D1
0002F67E <AmiBlitz3.ab3@19861>    BSR.w writelong
0002F682 <AmiBlitz3.ab3@19862>  BRA.w reget
0002F684 <AmiBlitz3.ab3@19866>   MOVEQ #5,d2
0002F686 <AmiBlitz3.ab3@19867>   ASL.l #7,d1
0002F688 <AmiBlitz3.ab3@19868>   SUBQ.l #8,a7
0002F68E <AmiBlitz3.ab3@19873>       OR.l #$f23c4400,d1                                   ;fmove.s
0002F694 <AmiBlitz3.ab3@19874>        fmove.s fp0,0(a7)
0002F698 <AmiBlitz3.ab3@19876>   BSR writelong
0002F69A <AmiBlitz3.ab3@19877>   MOVE.l (a7)+,d1
0002F69E <AmiBlitz3.ab3@19878>   BSR writelong
0002F6A0 <AmiBlitz3.ab3@19879>   MOVE.l (a7)+,d1
0002F6A4 <AmiBlitz3.ab3@19883> BRA.w reget
0002F6A6 <AmiBlitz3.ab3@19890>  MOVE.l D3,D0
0002F6A8 <AmiBlitz3.ab3@19891>   TST.w D6
0002F6AC <AmiBlitz3.ab3@19892>    BEQ.w 'skip            ;already integer
0002F6B2 <AmiBlitz3.ab3@19893>   MOVEA.l _mathffpbase,A6
0002F6B6 <AmiBlitz3.ab3@19894>    JSR -$1E(A6)
0002F6BA <AmiBlitz3.ab3@19895>    BVC.w 'skip
0002F6BC <AmiBlitz3.ab3@19896>   ADDQ.w #4,A7
0002F6C0 <AmiBlitz3.ab3@19897>  BRA.w numdofloat
0002F6C2 <AmiBlitz3.ab3@19900> RTS
0002F6C4 <AmiBlitz3.ab3@19904>   MOVEQ.l #$00,D6          ;no frac
0002F6C8 <AmiBlitz3.ab3@19906>    fmove.l d3,fp0
0002F6CC <AmiBlitz3.ab3@19910>   BSR.w consttype2
0002F6D0 <AmiBlitz3.ab3@19911> BRA.w fetchnum3
0002F6D2 <AmiBlitz3.ab3@19919>   MOVE.w D2,-(A7)                       ;
0002F6D6 <AmiBlitz3.ab3@19920>    BSR.w evalconst                      ;  "
0002F6D8 <AmiBlitz3.ab3@19921>   MOVE.w (A7)+,D2
0002F6DA <AmiBlitz3.ab3@19924>   TST.w D2
0002F6DE <AmiBlitz3.ab3@19925>    BNE.w 'something
0002F6E0 <AmiBlitz3.ab3@19929>   TST.w D6
0002F6E4 <AmiBlitz3.ab3@19930>    BEQ.w 'nofrac
0002F6E6 <AmiBlitz3.ab3@19931>   MOVEQ.l #$04,D2
0002F6EA <AmiBlitz3.ab3@19932>  BRA.w 'quick2
0002F6EC <AmiBlitz3.ab3@19935>   MOVEQ.l #$02,D2
0002F6F0 <AmiBlitz3.ab3@19936>  BRA.w 'byte
0002F6F4 <AmiBlitz3.ab3@19939>   CMP.w #$1,D2
0002F6F8 <AmiBlitz3.ab3@19940>    BEQ.w 'byte
0002F6FC <AmiBlitz3.ab3@19941>   CMP.w #$2,D2
0002F700 <AmiBlitz3.ab3@19942>    BEQ.w 'word
0002F704 <AmiBlitz3.ab3@19943>   CMP.w #$3,D2
0002F708 <AmiBlitz3.ab3@19944>    BEQ.w 'long
0002F70C <AmiBlitz3.ab3@19945>   CMP.w #$4,D2
0002F710 <AmiBlitz3.ab3@19946>    BEQ.w 'quick
0002F714 <AmiBlitz3.ab3@19947>   CMP.w #$5,D2
0002F718 <AmiBlitz3.ab3@19948>    BEQ.w 'float
0002F71C <AmiBlitz3.ab3@19949>  BRA.w mismatcherr
0002F720 <AmiBlitz3.ab3@19952>   BSR.w makeint                                          ;bugfix if a.b=$90 bug fix
0002F726 <AmiBlitz3.ab3@19953>   CMP.l #$7f,D0             ;127
0002F72A <AmiBlitz3.ab3@19954>    BGT.w 'over1
0002F730 <AmiBlitz3.ab3@19955>   CMP.l #$FFFFFF80,D0       ;-128
0002F734 <AmiBlitz3.ab3@19956>    BGE.w 'dobword
0002F736 <AmiBlitz3.ab3@19959>   MOVEQ.l #$02,D2                                          ;was 2 before
0002F73C <AmiBlitz3.ab3@19960>   CMP.l #$7fff,D0           ;32767
0002F740 <AmiBlitz3.ab3@19961>    BGT.w 'byte2
0002F746 <AmiBlitz3.ab3@19962>   CMP.l #$FFFF8000,D0       ;32768
0002F74A <AmiBlitz3.ab3@19963>    BGE.w 'dobword
0002F74C <AmiBlitz3.ab3@19966>   MOVEQ.l #$03,D2
0002F750 <AmiBlitz3.ab3@19967>  BRA.w 'dobword
0002F752 <AmiBlitz3.ab3@19994>   TST.w D6
0002F756 <AmiBlitz3.ab3@19995>    BNE.w 'quick2
0002F75A <AmiBlitz3.ab3@19996>    BSR.w makeint
0002F75E <AmiBlitz3.ab3@19997>  BRA.w 'over1
0002F762 <AmiBlitz3.ab3@20000>   BSR.w makeint
0002F764 <AmiBlitz3.ab3@20001>   TST.w D6
0002F768 <AmiBlitz3.ab3@20002>   BEQ.w 'qint
0002F76E <AmiBlitz3.ab3@20005>   CMP.l #MaxWordSgnd,D0   ;32767
0002F772 <AmiBlitz3.ab3@20006>    BGT.w numdofloat
0002F778 <AmiBlitz3.ab3@20007>   CMP.l #$FFFF8000,D0     ;-32768
0002F77C <AmiBlitz3.ab3@20008>    BLT.w numdofloat
0002F77E <AmiBlitz3.ab3@20010>   MOVE.w D0,-(A7)         ;save whole part
0002F782 <AmiBlitz3.ab3@20011>    JSR -$24(A6)           ;back to ffp
0002F784 <AmiBlitz3.ab3@20012>   MOVE.l D0,D1
0002F786 <AmiBlitz3.ab3@20013>   MOVE.l D3,D0
0002F78A <AmiBlitz3.ab3@20014>    JSR -$48(A6)           ;subtract - d0=fraction!
0002F790 <AmiBlitz3.ab3@20015>   MOVE.l #$80000051,D1    ;65536
0002F794 <AmiBlitz3.ab3@20016>    JSR -$4E(A6)           ;*65536
0002F798 <AmiBlitz3.ab3@20017>    JSR -$1E(A6)           ;back to int
0002F79C <AmiBlitz3.ab3@20019>    BEQ.w 'knob            ;numdofloat
0002F7A2 <AmiBlitz3.ab3@20020>   CMP.l #$10000,D0        ;65536
0002F7A6 <AmiBlitz3.ab3@20021>    BCC.w 'knob            ;numdofloat
0002F7A8 <AmiBlitz3.ab3@20022>   MOVE.w D0,D1
0002F7AA <AmiBlitz3.ab3@20023>   MOVE.w (A7)+,D0
0002F7AC <AmiBlitz3.ab3@20024>   SWAP D0
0002F7AE <AmiBlitz3.ab3@20025>   MOVE.w D1,D0
0002F7B2 <AmiBlitz3.ab3@20026>  BRA.w 'dolong
0002F7B4 <AmiBlitz3.ab3@20029>   ADDQ.w #2,A7
0002F7B8 <AmiBlitz3.ab3@20030>  BRA.w numdofloat
0002F7BE <AmiBlitz3.ab3@20033>   CMP.l #MaxWordSgnd,D0   ;#32767
0002F7C2 <AmiBlitz3.ab3@20034>    BGT.w 'byte2
0002F7C8 <AmiBlitz3.ab3@20035>   CMP.l #$FFFF8000,D0     ;#32768
0002F7CC <AmiBlitz3.ab3@20036>    BLT.w 'byte2
0002F7CE <AmiBlitz3.ab3@20037>   SWAP D0
0002F7D2 <AmiBlitz3.ab3@20038>  BRA.w 'dolong
0002F7D4 <AmiBlitz3.ab3@20041>   TST.w D6
0002F7D8 <AmiBlitz3.ab3@20042>   BNE.w numdofloat
0002F7DA <AmiBlitz3.ab3@20043>   MOVE.l D3,D0
0002F7DE <AmiBlitz3.ab3@20044>  BRA.w 'dolong
0002F7E0 <AmiBlitz3.ab3@20047>   TST.w D6
0002F7E4 <AmiBlitz3.ab3@20048>   BNE.w numdofloat
0002F7E6 <AmiBlitz3.ab3@20049>   MOVE.l D3,D0
0002F7EC <AmiBlitz3.ab3@20050>   MOVEA.l _mathffpbase,A6
0002F7F0 <AmiBlitz3.ab3@20051>   JSR -$24(A6)           ;int to float
0002F7F2 <AmiBlitz3.ab3@20052>   MOVE.l D0,D3
0002F7F6 <AmiBlitz3.ab3@20053>  BRA.w numdofloat
0002F7F8 <AmiBlitz3.ab3@20057> RTS
0002F7FA <AmiBlitz3.ab3@20061>   MOVEQ.l #$05,D2
0002F7FC <AmiBlitz3.ab3@20062>   MOVE.l D3,D0
0002F7FE <AmiBlitz3.ab3@20063> RTS
0002F802 <AmiBlitz3.ab3@20067>             Ds.l 1                                         ;??Looks like unused data??
0002F806 <AmiBlitz3.ab3@20068> pushpc:     Ds.l 1
0002F80A <AmiBlitz3.ab3@20069> pushoff:    Ds.l 1
0002F80E <AmiBlitz3.ab3@20070> pushdooff:  Ds.l 1
0002F810 <AmiBlitz3.ab3@20071> pushclen:   Ds.w 1
0002F814 <AmiBlitz3.ab3@20072> pushat:     Ds.l 1
0002F81E <AmiBlitz3.ab3@20078>   MOVE.l destpointer,pushpc
0002F828 <AmiBlitz3.ab3@20079>   MOVE.l hunkoffsetbase,pushoff
0002F82A <AmiBlitz3.ab3@20080>  RTS
0002F82E <AmiBlitz3.ab3@20086>   MOVEM.l D0-D1/A0-A1,-(A7)
0002F834 <AmiBlitz3.ab3@20088>   MOVE.l destpointer,D0
0002F838 <AmiBlitz3.ab3@20089>   MOVE.l pushpc(PC),D1
0002F83E <AmiBlitz3.ab3@20090>   MOVE.l D1,destpointer    ;New PC
0002F840 <AmiBlitz3.ab3@20091>   SUB.l D1,D0              ;len
0002F846 <AmiBlitz3.ab3@20092>   MOVE.w D0,pushclen
0002F84A <AmiBlitz3.ab3@20093>    BEQ.w 'skip
0002F850 <AmiBlitz3.ab3@20094>   MOVE.w dontwrite_nomemleft,D1
0002F854 <AmiBlitz3.ab3@20095>    BNE.w 'skip
0002F85C <AmiBlitz3.ab3@20098>    CMP.w #1000,pushclen
0002F860 <AmiBlitz3.ab3@20099>    BGE conmemerr
0002F866 <AmiBlitz3.ab3@20100>    MOVE.l pushat,d0
0002F86A <AmiBlitz3.ab3@20101>    BNE 'nomem
0002F870 <AmiBlitz3.ab3@20102>    MOVE.l #1024,d0
0002F872 <AmiBlitz3.ab3@20104>   MOVEQ.l #$01,D1
0002F878 <AmiBlitz3.ab3@20105>   MOVEA.l _execbase,A6
0002F87E <AmiBlitz3.ab3@20107>   MOVE.l mempool,a0
0002F882 <AmiBlitz3.ab3@20108>   JSR _AllocPooled(a6)
0002F888 <AmiBlitz3.ab3@20111>   MOVE.l D0,pushat
0002F88A <AmiBlitz3.ab3@20116>   MOVEA.l D0,A0          ;destination
0002F890 <AmiBlitz3.ab3@20117>   MOVEA.l pushpc,A1      ;source
0002F896 <AmiBlitz3.ab3@20118>   MOVE.l A1,destpointer
0002F89C <AmiBlitz3.ab3@20119>   MOVE.w pushclen,D0
0002F89E <AmiBlitz3.ab3@20120>   LSR.w #1,D0
0002F8A0 <AmiBlitz3.ab3@20121>   SUBQ.w #1,D0           ;to word dbf
0002F8A2 <AmiBlitz3.ab3@20124>     MOVE.w (A1)+,(A0)+
0002F8A6 <AmiBlitz3.ab3@20125>   DBF D0,'loop
0002F8B0 <AmiBlitz3.ab3@20127>    MOVE.l hunkoffsetbase,pushdooff
0002F8B4 <AmiBlitz3.ab3@20130>   MOVEM.l (A7)+,D0-D1/A0-A1
0002F8B6 <AmiBlitz3.ab3@20131> RTS
0002F8BA <AmiBlitz3.ab3@20137>   MOVEM.l D0-D1/A0-A1,-(A7)
0002F8BC <AmiBlitz3.ab3@20138>   MOVEQ.l #$00,D0
0002F8C2 <AmiBlitz3.ab3@20139>   MOVE.w pushclen,D0
0002F8C6 <AmiBlitz3.ab3@20140>    BEQ.w 'skip
0002F8CC <AmiBlitz3.ab3@20141>   MOVE.l destpointer,D1     ;pc before put
0002F8D2 <AmiBlitz3.ab3@20142>   ADD.l D0,destpointer
0002F8D8 <AmiBlitz3.ab3@20143>   TST.w dontwrite_nomemleft
0002F8DC <AmiBlitz3.ab3@20144>    BNE.w 'skip
0002F8DE <AmiBlitz3.ab3@20146>   LSR.w #1,D0
0002F8E0 <AmiBlitz3.ab3@20147>   SUBQ.w #1,D0
0002F8E2 <AmiBlitz3.ab3@20149>   MOVEA.l D1,A1
0002F8E8 <AmiBlitz3.ab3@20150>   MOVEA.l pushat,A0
0002F8EE <AmiBlitz3.ab3@20153>     CMPA.l destbufferend,A1
0002F8F2 <AmiBlitz3.ab3@20154>     BCS.w 'ok
0002F8FA <AmiBlitz3.ab3@20156>     MOVE.w #$FFFF,dontwrite_nomemleft    ; was -1
0002F8FE <AmiBlitz3.ab3@20157>   BRA.w 'skip
0002F900 <AmiBlitz3.ab3@20160>      MOVE.w (A0)+,(A1)+                                    ;copylibcode
0002F904 <AmiBlitz3.ab3@20161>   DBF D0,'loop
0002F90A <AmiBlitz3.ab3@20166>   SUB.l pushpc,D1
0002F90E <AmiBlitz3.ab3@20167>   BEQ.w 'skip2
0002F914 <AmiBlitz3.ab3@20168>   MOVEA.l pushdooff,A0
0002F91A <AmiBlitz3.ab3@20171>   CMPA.l pushoff,A0
0002F91E <AmiBlitz3.ab3@20172>   BEQ.w 'done
0002F922 <AmiBlitz3.ab3@20173>   MOVEA.l $4(A0),A1          ;address in prog.
0002F928 <AmiBlitz3.ab3@20174>   ADDA.l destbufferstart,A1
0002F92E <AmiBlitz3.ab3@20175>   CMPA.l destbufferend,A1
0002F932 <AmiBlitz3.ab3@20176>   BCC.w 'next                ;leave offs >= lib
0002F936 <AmiBlitz3.ab3@20177>   ADD.l D1,$4(A0)
0002F938 <AmiBlitz3.ab3@20180>   MOVEA.l (A0),A0
0002F93C <AmiBlitz3.ab3@20181>  BRA.w 'loop2
0002F942 <AmiBlitz3.ab3@20185>   MOVEA.l pushat,A1
0002F944 <AmiBlitz3.ab3@20186>   MOVEQ.l #$00,D0
0002F94A <AmiBlitz3.ab3@20187>   MOVE.w pushclen,D0
0002F950 <AmiBlitz3.ab3@20188>   MOVEA.l _execbase,A6
0002F956 <AmiBlitz3.ab3@20189>   MOVE.l mempool,a0
0002F95A <AmiBlitz3.ab3@20193>   MOVEM.l (A7)+,D0-D1/A0-A1
0002F95C <AmiBlitz3.ab3@20194> RTS
0002F95E <AmiBlitz3.ab3@20200>   MOVE.l D1,-(A7)                                          ;array mul
0002F960 <AmiBlitz3.ab3@20201>   MOVEQ.l #$00,D2
0002F962 <AmiBlitz3.ab3@20202>   MOVEQ.l #$0F,D3
0002F964 <AmiBlitz3.ab3@20205>     LSL.w #1,D1
0002F968 <AmiBlitz3.ab3@20206>     BCC.w 'shskip
0002F96A <AmiBlitz3.ab3@20207>     ADDQ.w #1,D2
0002F96C <AmiBlitz3.ab3@20208>     MOVE.w D3,D4
0002F970 <AmiBlitz3.ab3@20211>   DBF D3,'shloop
0002F972 <AmiBlitz3.ab3@20213>   SUBQ.w #1,D2
0002F976 <AmiBlitz3.ab3@20214>    BNE.w 'domul
0002F978 <AmiBlitz3.ab3@20215>   ADDQ.w #4,A7           ; was 2
0002F97A <AmiBlitz3.ab3@20216>   MOVE.w D4,D1
0002F97E <AmiBlitz3.ab3@20217>    BEQ.w 'done
0002F982 <AmiBlitz3.ab3@20218>   CMP.w #$8,D1
0002F986 <AmiBlitz3.ab3@20219>    BCS.w 'once
0002F98A <AmiBlitz3.ab3@20220>   SUBI.w #$8,D1
0002F98E <AmiBlitz3.ab3@20221>    BSR.w 'once
0002F990 <AmiBlitz3.ab3@20222>   MOVEQ.l #$00,D1
0002F992 <AmiBlitz3.ab3@20225>   LSL.w #8,D1
0002F994 <AmiBlitz3.ab3@20226>   LSL.w #1,D1
0002F998 <AmiBlitz3.ab3@20227>   ORI.w #$E188,D1
0002F99E <AmiBlitz3.ab3@20228>   OR.w regnum,D1
0002F9A2 <AmiBlitz3.ab3@20229>  BRA.w writeword
0002F9A4 <AmiBlitz3.ab3@20232>  RTS
0002F9A6 <AmiBlitz3.ab3@20236>   MOVEQ #0,d1
0002F9AC <AmiBlitz3.ab3@20237>   MOVE.w regnum,D1
0002F9AE <AmiBlitz3.ab3@20239>   LSL.l #8,D1
0002F9B0 <AmiBlitz3.ab3@20242>   LSL.l #4,d1
0002F9B6 <AmiBlitz3.ab3@20246>   OR.l #$4c3c0000,d1
0002F9BC <AmiBlitz3.ab3@20247>   OR.w regnum,d1
0002F9C0 <AmiBlitz3.ab3@20248>   BSR.w writelong          ; was writeword
0002F9C2 <AmiBlitz3.ab3@20250>   MOVE.l (A7)+,D1
0002F9C6 <AmiBlitz3.ab3@20253> BRA writelong
0002F9CC <AmiBlitz3.ab3@20260>   MOVE.l destpointer,-(A7)
0002F9CE <AmiBlitz3.ab3@20261>   MOVEQ.l #-$01,D7
0002F9D2 <AmiBlitz3.ab3@20264>     BSR.w findhilib
0002F9D6 <AmiBlitz3.ab3@20265>      BEQ.w 'done
0002F9DA <AmiBlitz3.ab3@20266>     TST.w $C(A2)
0002F9DE <AmiBlitz3.ab3@20267>      BPL.w 'loop
0002F9E2 <AmiBlitz3.ab3@20268>     MOVE.l $16(A2),D1
0002F9E6 <AmiBlitz3.ab3@20269>     BEQ.w 'loop
0002F9EA <AmiBlitz3.ab3@20271>     MOVE.w $4(A2),D1                                       ; check state in D1 and do some things
0002F9EE <AmiBlitz3.ab3@20272>     CMP.w #-$2,D1          ; was #allocvars
0002F9F2 <AmiBlitz3.ab3@20273>      BNE.w 'notvar
0002F9F6 <AmiBlitz3.ab3@20274>     BSR.w makevsize
0002F9FA <AmiBlitz3.ab3@20275>  BRA.w 'more
0002F9FE <AmiBlitz3.ab3@20278>     CMP.w #-$5C4,D1       ; was #debuglib
0002FA02 <AmiBlitz3.ab3@20279>      BNE.w 'notdebuglib
0002FA06 <AmiBlitz3.ab3@20283>     MOVE.w #$7000,D1      ;moveq #0,d0
0002FA0E <AmiBlitz3.ab3@20284>     BTST #$7,autorun
0002FA10 <AmiBlitz3.ab3@20285>     SNE D1
0002FA14 <AmiBlitz3.ab3@20286>     BSR.w writeword
0002FA18 <AmiBlitz3.ab3@20287>  BRA.w 'more
0002FA1C <AmiBlitz3.ab3@20290>     CMP.w #-$12D,D1       ; was 65235
0002FA20 <AmiBlitz3.ab3@20291>      BNE.w 'notstring1
0002FA24 <AmiBlitz3.ab3@20292>     BSR.w makessize
0002FA28 <AmiBlitz3.ab3@20293>  BRA.w 'more
0002FA2C <AmiBlitz3.ab3@20296>     CMP.w #-$1F5,D1       ; was 65035
0002FA30 <AmiBlitz3.ab3@20297>      BNE.w 'notexit
0002FA34 <AmiBlitz3.ab3@20299>     MOVE.w #$203C,D1
0002FA38 <AmiBlitz3.ab3@20300>     BSR.w writeword
0002FA3C <AmiBlitz3.ab3@20301>     BSR.w addoff
0002FA42 <AmiBlitz3.ab3@20302>     MOVE.l endop,D1
0002FA46 <AmiBlitz3.ab3@20303>     BSR.w writelong
0002FA4A <AmiBlitz3.ab3@20304>  BRA.w 'more
0002FA4E <AmiBlitz3.ab3@20307>     CMP.w #-$3E9,D1       ; was 64535
0002FA52 <AmiBlitz3.ab3@20308>      BNE.w 'notdatalib
0002FA56 <AmiBlitz3.ab3@20309>     MOVE.w #$203C,D1
0002FA5A <AmiBlitz3.ab3@20310>     BSR.w writeword
0002FA5E <AmiBlitz3.ab3@20311>     BSR.w addoff
0002FA64 <AmiBlitz3.ab3@20312>     MOVE.l data2at,D1
0002FA68 <AmiBlitz3.ab3@20313>     BSR.w writelong
0002FA6C <AmiBlitz3.ab3@20314>  BRA.w 'more
0002FA70 <AmiBlitz3.ab3@20317>     CMP.w #$1,D1          ; was #dhandlerlib
0002FA74 <AmiBlitz3.ab3@20318>      BNE.w 'notdhandler
0002FA78 <AmiBlitz3.ab3@20319>     MOVE.w #$203C,D1
0002FA7C <AmiBlitz3.ab3@20320>     BSR.w writeword
0002FA82 <AmiBlitz3.ab3@20321>     MOVE.l ptr_seg_debugger,D1
0002FA86 <AmiBlitz3.ab3@20322>     BSR.w writelong
0002FA8A <AmiBlitz3.ab3@20326>     MOVE.l $16(A2),D1
0002FA92 <AmiBlitz3.ab3@20327>     MOVE.w #$FFFF,lasta6     ; was -1
0002FA96 <AmiBlitz3.ab3@20328>     BSR.w Amakelibsub
0002FA9C <AmiBlitz3.ab3@20329>     CMPI.w #$FFFE,$4(A2)     ; was #allocvars
0002FAA0 <AmiBlitz3.ab3@20330>      BNE.w 'notvar2
0002FAA6 <AmiBlitz3.ab3@20332>     MOVE.l intdata1,D1
0002FAAA <AmiBlitz3.ab3@20333>      BEQ.w 'notvar2
0002FAB0 <AmiBlitz3.ab3@20334>     MOVE.w putidata1,D1
0002FAB4 <AmiBlitz3.ab3@20335>     BSR.w writeword
0002FAB8 <AmiBlitz3.ab3@20336>     BSR.w addoff
0002FABE <AmiBlitz3.ab3@20337>     MOVE.l intdata1,D1
0002FAC2 <AmiBlitz3.ab3@20338>     BSR.w writelong
0002FAC6 <AmiBlitz3.ab3@20341>     MOVE.w #$2B40,D1
0002FACA <AmiBlitz3.ab3@20342>     TST.w $1A(A2)
0002FACE <AmiBlitz3.ab3@20343>      BEQ.w 'loop
0002FAD2 <AmiBlitz3.ab3@20344>      BPL.w 'long
0002FAD6 <AmiBlitz3.ab3@20345>     MOVE.w #$3B40,D1
0002FADA <AmiBlitz3.ab3@20348>     BSR.w writeword
0002FADE <AmiBlitz3.ab3@20349>     MOVE.w $A(A2),D1
0002FAE2 <AmiBlitz3.ab3@20350>      BSR.w writeword
0002FAE8 <AmiBlitz3.ab3@20351>     CMPI.w #$FFFA,$4(A2)   ; was #65530
0002FAEC <AmiBlitz3.ab3@20352>      BNE.w 'loop
0002FAEE <AmiBlitz3.ab3@20354>     MOVE.w D7,-(A7)
0002FAF4 <AmiBlitz3.ab3@20355>     MOVE.w numstatic,D4
0002FAF8 <AmiBlitz3.ab3@20356>      BEQ.w 'nostats
0002FAFE <AmiBlitz3.ab3@20357>     MOVE.l staticdata,D3
0002FB04 <AmiBlitz3.ab3@20358>      JSR datastart
0002FB08 <AmiBlitz3.ab3@20359>     MOVE.w #$C500,D1       ; was #alstat
0002FB0C <AmiBlitz3.ab3@20360>      BSR.w tokejsr2
0002FB12 <AmiBlitz3.ab3@20363>     MOVE.w maxsused,D4
0002FB16 <AmiBlitz3.ab3@20364>      BEQ.w 'nomaxs
0002FB1C <AmiBlitz3.ab3@20365>     MOVE.l maxsat,D3
0002FB22 <AmiBlitz3.ab3@20366>      JSR datastart
0002FB26 <AmiBlitz3.ab3@20367>     MOVE.w #$CF00,D1      ; was #setmaxs
0002FB2A <AmiBlitz3.ab3@20368>      BSR.w tokejsr2
0002FB2C <AmiBlitz3.ab3@20371>     MOVE.w (A7)+,D7
0002FB30 <AmiBlitz3.ab3@20373>  BRA.w 'loop
0002FB36 <AmiBlitz3.ab3@20379>   MOVE.l destpointer,D1
0002FB38 <AmiBlitz3.ab3@20380>   CMP.l (A7),D1
0002FB3C <AmiBlitz3.ab3@20381>    BNE.w 'yi
0002FB44 <AmiBlitz3.ab3@20382>   MOVE.w #$0008,noinits+2
0002FB48 <AmiBlitz3.ab3@20383>  BRA.w 'yi3
0002FB4E <AmiBlitz3.ab3@20386>   CLR.w noinits+2
0002FB54 <AmiBlitz3.ab3@20387>   MOVE.w dontwrite_nomemleft,D1
0002FB58 <AmiBlitz3.ab3@20388>    BNE.w 'yi2
0002FB5E <AmiBlitz3.ab3@20390>   TST.l newinitaddr
0002FB62 <AmiBlitz3.ab3@20391>    BEQ 'l10
0002FB68 <AmiBlitz3.ab3@20392>   MOVE.l newinitaddr,D2
0002FB6E <AmiBlitz3.ab3@20393>   SUB.l destbufferstart,D2
0002FB70 <AmiBlitz3.ab3@20394>   ADDQ.l #2,d2
0002FB76 <AmiBlitz3.ab3@20396>   MOVEA.l newinitaddr,A0                                   ;write newinitcode
0002FB7A <AmiBlitz3.ab3@20400>   MOVE.w #$4EB9,(A0)+
0002FB7C <AmiBlitz3.ab3@20401>   MOVE.l (A7),(A0)+
0002FB80 <AmiBlitz3.ab3@20404>  BRA 'l20
0002FB86 <AmiBlitz3.ab3@20407>   MOVEA.l destbufferstart,A0                               ;write initcode
0002FB8C <AmiBlitz3.ab3@20408>   TST.b saved0
0002FB90 <AmiBlitz3.ab3@20409>   BEQ 'l1
0002FB94 <AmiBlitz3.ab3@20410>   MOVE.w #$23c0,(a0)+
0002FB96 <AmiBlitz3.ab3@20411>   MOVE.l a0,a1
0002FB98 <AmiBlitz3.ab3@20412>   ADDQ.l #6,a1
0002FB9A <AmiBlitz3.ab3@20413>   MOVE.l a1,(a0)+
0002FB9C <AmiBlitz3.ab3@20415>   MOVEQ.l #$02,D2
0002FBA0 <AmiBlitz3.ab3@20416>   BSR.w addhunkoffset
0002FBA4 <AmiBlitz3.ab3@20418>   MOVE.w #$6004,(a0)+
0002FBAA <AmiBlitz3.ab3@20419>   MOVE.l #$4e714e71,(a0)+
0002FBAE <AmiBlitz3.ab3@20422>   MOVE.w #$4EB9,(A0)+
0002FBB0 <AmiBlitz3.ab3@20423>   MOVE.l (A7),(A0)+
0002FBB2 <AmiBlitz3.ab3@20424>   MOVEQ #2,d2
0002FBB8 <AmiBlitz3.ab3@20425>   TST.b saved0
0002FBBC <AmiBlitz3.ab3@20426>   BEQ 'l20
0002FBBE <AmiBlitz3.ab3@20427>   MOVEQ.l #14,D2
0002FBC2 <AmiBlitz3.ab3@20430>   BSR.w addhunkoffset
0002FBC6 <AmiBlitz3.ab3@20431>   MOVE.w #$2039,(a0)+
0002FBC8 <AmiBlitz3.ab3@20432>   MOVE.l a1,(a0)+
0002FBCA <AmiBlitz3.ab3@20433>   MOVEQ.l #20,d2
0002FBCE <AmiBlitz3.ab3@20436>   BSR.w addhunkoffset
0002FBD2 <AmiBlitz3.ab3@20440>   MOVE.w #$4E75,D1
0002FBD6 <AmiBlitz3.ab3@20441>   BSR.w writeword
0002FBD8 <AmiBlitz3.ab3@20444>   ADDQ.w #4,A7
0002FBDA <AmiBlitz3.ab3@20445> RTS
0002FBDE <AmiBlitz3.ab3@20450>   Dc.b $22,$2D,$00,$00                                     ;MOVE.L  $0000(A5),D1
0002FBE4 <AmiBlitz3.ab3@20452>   Dc.b $23,$CD,$00,$00,$00,$00                             ;MOVE.L  A5,$00000000
0002FBEA <AmiBlitz3.ab3@20454>   Dc.b $24,$7C,$00,$00,$00,$00                             ;MOVEA.L #$00000000,A2
0002FBF0 <AmiBlitz3.ab3@20459>   MOVE.l stringbuffer,D1
0002FBF4 <AmiBlitz3.ab3@20460> BRA.w makesize
0002FBF6 <AmiBlitz3.ab3@20465>   MOVEQ.l #$00,D1
0002FBFC <AmiBlitz3.ab3@20466>   MOVE.w globalvarpointer,D1
0002FC00 <AmiBlitz3.ab3@20467>   SUBI.w #$8000,D1
0002FC04 <AmiBlitz3.ab3@20468>   BNE.w makesize
0002FC06 <AmiBlitz3.ab3@20469>     MOVEQ.l #$08,D1
0002FC08 <AmiBlitz3.ab3@20474>   MOVE.l D1,-(A7)
0002FC0C <AmiBlitz3.ab3@20475>   MOVE.w #$203C,D1
0002FC10 <AmiBlitz3.ab3@20476>   BSR.w writeword
0002FC12 <AmiBlitz3.ab3@20477>   MOVE.l (A7)+,D1
0002FC16 <AmiBlitz3.ab3@20478> BRA.w writelong
0002FC18 <AmiBlitz3.ab3@20486>   MOVEQ.l #$00,D1
0002FC1E <AmiBlitz3.ab3@20487>   MOVEA.l libpointer,A1
0002FC22 <AmiBlitz3.ab3@20490>     CMPA.w #$0,A1
0002FC26 <AmiBlitz3.ab3@20491>     BEQ.w 'done
0002FC2A <AmiBlitz3.ab3@20492>       CMP.w $4(A1),D7
0002FC2E <AmiBlitz3.ab3@20493>       BLS.w 'next
0002FC32 <AmiBlitz3.ab3@20494>         CMP.w $4(A1),D1
0002FC36 <AmiBlitz3.ab3@20495>         BCC.w 'next
0002FC3A <AmiBlitz3.ab3@20496>           MOVE.w $4(A1),D1
0002FC3C <AmiBlitz3.ab3@20497>           MOVEA.l A1,A2
0002FC3E <AmiBlitz3.ab3@20500>     MOVEA.l (A1),A1
0002FC42 <AmiBlitz3.ab3@20501>  BRA.w 'loop
0002FC44 <AmiBlitz3.ab3@20504>   MOVE.w D1,D7
0002FC46 <AmiBlitz3.ab3@20505> RTS
0002FC48 <AmiBlitz3.ab3@20513>   MOVEQ.l #-$01,D1
0002FC4E <AmiBlitz3.ab3@20514>   MOVEA.l libpointer,A1
0002FC52 <AmiBlitz3.ab3@20517>     CMPA.w #$0,A1
0002FC56 <AmiBlitz3.ab3@20518>      BEQ.w 'done
0002FC5A <AmiBlitz3.ab3@20519>     CMP.w $4(A1),D7
0002FC5E <AmiBlitz3.ab3@20520>      BCC.w 'next
0002FC62 <AmiBlitz3.ab3@20521>     CMP.w $4(A1),D1
0002FC66 <AmiBlitz3.ab3@20522>      BLS.w 'next
0002FC6A <AmiBlitz3.ab3@20523>     MOVE.w $4(A1),D1
0002FC6C <AmiBlitz3.ab3@20524>     MOVEA.l A1,A2
0002FC6E <AmiBlitz3.ab3@20527>     MOVEA.l (A1),A1
0002FC72 <AmiBlitz3.ab3@20528> BRA.w 'loop
0002FC74 <AmiBlitz3.ab3@20531>   MOVE.w D1,D7
0002FC78 <AmiBlitz3.ab3@20532>   CMP.w #-$1,D1
0002FC7A <AmiBlitz3.ab3@20533> RTS
0002FC80 <AmiBlitz3.ab3@20541>   ADDQ.w #1,globalvarpointer
0002FC88 <AmiBlitz3.ab3@20542>   BCLR #$0,globalvarpointer+1
0002FC8A <AmiBlitz3.ab3@20543>   MOVEQ.l #$00,D7
0002FC8E <AmiBlitz3.ab3@20546>     BSR.w findlolib
0002FC92 <AmiBlitz3.ab3@20547>     BEQ.w 'azdone
0002FC96 <AmiBlitz3.ab3@20548>     TST.w $C(A2)
0002FC9A <AmiBlitz3.ab3@20549>     BPL.w 'loop
0002FC9C <AmiBlitz3.ab3@20552>     MOVEA.l A2,A1
0002FCA0 <AmiBlitz3.ab3@20553>     ADDA.l $12(A1),A1
0002FCA4 <AmiBlitz3.ab3@20554>     TST.w -$2(A1)
0002FCA8 <AmiBlitz3.ab3@20555>     BEQ.w 'nomax
0002FCAC <AmiBlitz3.ab3@20559>     MOVE.l -$A(A1),D1
0002FCB0 <AmiBlitz3.ab3@20560>     LEA $6(A2,D1.L),A3
0002FCB2 <AmiBlitz3.ab3@20563>       TST.w (A3)+
0002FCB6 <AmiBlitz3.ab3@20564>       BEQ.w 'plopf
0002FCB8 <AmiBlitz3.ab3@20565>         ADDQ.w #2,A3
0002FCBC <AmiBlitz3.ab3@20566>  BRA.w 'plop
0002FCC0 <AmiBlitz3.ab3@20569>     TST.l $4(A3)
0002FCC4 <AmiBlitz3.ab3@20570>     BEQ.w 'nomax
0002FCC8 <AmiBlitz3.ab3@20574>       MOVE.w freemax(PC),D1    ;move.w #x,-(a7)
0002FCCC <AmiBlitz3.ab3@20575>       BSR.w writeword
0002FCD0 <AmiBlitz3.ab3@20576>       MOVE.w -$4(A1),D1
0002FCD4 <AmiBlitz3.ab3@20577>       BSR.w writeword          ;x (max)
0002FCDA <AmiBlitz3.ab3@20578>       MOVE.l free,D1
0002FCDE <AmiBlitz3.ab3@20579>       MOVE.w -$6(A1),D1
0002FCE2 <AmiBlitz3.ab3@20580>       BSR.w writelong          ;move.l x(a5),a3
0002FCE8 <AmiBlitz3.ab3@20582>       MOVE.l destpointer,-(A7)
0002FCEA <AmiBlitz3.ab3@20583>       MOVEQ.l #$01,D1
0002FCEE <AmiBlitz3.ab3@20584>       MOVE.w -$2(A1),D2
0002FCF0 <AmiBlitz3.ab3@20585>       LSL.w D2,D1
0002FCF2 <AmiBlitz3.ab3@20586>       MOVE.w D1,-(A7)
0002FCF6 <AmiBlitz3.ab3@20587>       MOVE.l -$A(A1),D1
0002FCFA <AmiBlitz3.ab3@20588>       BSR.w Amakelibsub
0002FCFE <AmiBlitz3.ab3@20589>       MOVE.w freemax3(PC),D1
0002FD02 <AmiBlitz3.ab3@20590>       BSR.w writeword          ;lea x(a3),a3
0002FD04 <AmiBlitz3.ab3@20591>       MOVE.w (A7)+,D1
0002FD08 <AmiBlitz3.ab3@20592>       BSR.w writeword
0002FD0C <AmiBlitz3.ab3@20593>       MOVE.l freemax2(PC),D1
0002FD10 <AmiBlitz3.ab3@20594>       BSR.w writelong
0002FD12 <AmiBlitz3.ab3@20595>       MOVE.l (A7)+,D1
0002FD18 <AmiBlitz3.ab3@20596>       SUB.l destpointer,D1
0002FD1C <AmiBlitz3.ab3@20597>       BSR.w writeword
0002FD20 <AmiBlitz3.ab3@20598>       MOVE.w freemax4(PC),D1
0002FD24 <AmiBlitz3.ab3@20599>       BSR.w writeword
0002FD28 <AmiBlitz3.ab3@20602>     MOVE.l $1C(A2),D1
0002FD2C <AmiBlitz3.ab3@20603>     BEQ.w 'loop
0002FD30 <AmiBlitz3.ab3@20607>     MOVE.w $4(A2),D1
0002FD34 <AmiBlitz3.ab3@20608>     CMP.w #-$2,D1              ; was #allocvars
0002FD38 <AmiBlitz3.ab3@20609>     BNE.w 'notvfin
0002FD3C <AmiBlitz3.ab3@20610>       BSR.w makevsize
0002FD40 <AmiBlitz3.ab3@20611>  BRA.w 'more
0002FD44 <AmiBlitz3.ab3@20614>     CMP.w #-$12D,D1            ; was #65235
0002FD48 <AmiBlitz3.ab3@20615>     BNE.w 'more
0002FD4C <AmiBlitz3.ab3@20616>       BSR.w makessize
0002FD50 <AmiBlitz3.ab3@20617>  BRA.w 'more
0002FD54 <AmiBlitz3.ab3@20621>     MOVE.l $1C(A2),D1
0002FD5C <AmiBlitz3.ab3@20622>     MOVE.w #$FFFF,lasta6       ; was -1
0002FD60 <AmiBlitz3.ab3@20623>     BSR.w Amakelibsub
0002FD64 <AmiBlitz3.ab3@20624>  BRA.w 'loop
0002FD66 <AmiBlitz3.ab3@20627> RTS
0002FD6A <AmiBlitz3.ab3@20631> freemax:   Dc.b $3F,$3C,$00,$00                            ;MOVE.W  #$0000,-(A7)
0002FD6C <AmiBlitz3.ab3@20633> freemax2:  Dc.b $53,$57                                    ;SUBQ.W  #1,(A7)
0002FD70 <AmiBlitz3.ab3@20634>            Dc.b $66,$00,$FF,$FC                            ;BNE.W freemax2
0002FD72 <AmiBlitz3.ab3@20635> freemax4:  Dc.b $54,$4F                                    ;ADDQ.W  #2,A7
0002FD76 <AmiBlitz3.ab3@20636> freemax3:  Dc.b $47,$EB,$00,$00                            ;LEA $0000(A3),A3
0002FD7C <AmiBlitz3.ab3@20641>   TST.b debugmode
0002FD80 <AmiBlitz3.ab3@20642>    BEQ.b 'skip
0002FD86 <AmiBlitz3.ab3@20643>   TST.w debugversion
0002FD8A <AmiBlitz3.ab3@20644>    BNE.b 'skip
0002FD8E <AmiBlitz3.ab3@20645>   MOVE.w #$C308,D1
0002FD92 <AmiBlitz3.ab3@20646>  BRA.w Atokejsr
0002FD94 <AmiBlitz3.ab3@20649> RTS
0002FD9C <AmiBlitz3.ab3@20653>   MOVE.w #$FFFF,lasta6
0002FDA0 <AmiBlitz3.ab3@20658>   MOVEM.l D0-d7/A0-a6,-(A7)
0002FDA8 <AmiBlitz3.ab3@20659>   MOVE.b #1,nostringopt
0002FDAE <AmiBlitz3.ab3@20660>   JSR searchinstr
0002FDB0 <AmiBlitz3.ab3@20661>   MOVE.l A3,D1
0002FDB2 <AmiBlitz3.ab3@20662>   SUB.l A2,D1
0002FDB6 <AmiBlitz3.ab3@20663>   BSR.w Amakelibsub
0002FDBA <AmiBlitz3.ab3@20664>   MOVEM.l (A7)+,d0-d7/a0-a6
0002FDBC <AmiBlitz3.ab3@20665> RTS
0002FDC2 <AmiBlitz3.ab3@20672>   MOVE.l libisat,-(A7)                                   ;library write
0002FDC8 <AmiBlitz3.ab3@20673>   MOVE.l A2,libisat
0002FDCA <AmiBlitz3.ab3@20675>   MOVEA.l A1,A2
0002FDCC <AmiBlitz3.ab3@20676>   MOVE.w (A2)+,D1
0002FDD2 <AmiBlitz3.ab3@20677>   MOVE.l a2,lastinstructionaddr
0002FDD6 <AmiBlitz3.ab3@20678>   ANDI.w #$FF,D1
0002FDD8 <AmiBlitz3.ab3@20679>   ADDA.w D1,A2
0002FDDA <AmiBlitz3.ab3@20680>   EXG.l D0,A2
0002FDDC <AmiBlitz3.ab3@20681>   ADDQ.l #1,D0
0002FDE0 <AmiBlitz3.ab3@20682>   BCLR #$0,D0
0002FDE2 <AmiBlitz3.ab3@20683>   EXG.l D0,A2
0002FDE6 <AmiBlitz3.ab3@20684> BRA.w makelsub2
0002FDEC <AmiBlitz3.ab3@20688>   MOVE.l libisat,-(A7)
0002FDF2 <AmiBlitz3.ab3@20689>   MOVE.l A2,libisat
0002FDF4 <AmiBlitz3.ab3@20690>   MOVEA.l A3,A2
0002FDF8 <AmiBlitz3.ab3@20691> BRA.w makelsub2
0002FDFA <AmiBlitz3.ab3@20695>   MOVE.l a1,-(a7)
0002FDFC <AmiBlitz3.ab3@20698>   MOVE.l d0,a0
0002FE00 <AmiBlitz3.ab3@20699>   MOVE.l $a(a0),d0
0002FE02 <AmiBlitz3.ab3@20700>   MOVE.l d0,a1
0002FE0A <AmiBlitz3.ab3@20701>   CMP.l #8,4(a1)
0002FE0E <AmiBlitz3.ab3@20702>   BLE 'norec
0002FE10 <AmiBlitz3.ab3@20703>   MOVE.l a0,-(a7)
0002FE16 <AmiBlitz3.ab3@20704>   MOVE.l typebase,-(a7)
0002FE18 <AmiBlitz3.ab3@20705>   MOVEQ #0,d0
0002FE1C <AmiBlitz3.ab3@20706>   MOVE.w 4(a0),d0
0002FE22 <AmiBlitz3.ab3@20707>   ADD.l d0,typebase
0002FE26 <AmiBlitz3.ab3@20708>   MOVE.l $4(a1),d0
0002FE2A <AmiBlitz3.ab3@20709>   BSR scantype
0002FE30 <AmiBlitz3.ab3@20710>   MOVE.l (a7)+,typebase
0002FE32 <AmiBlitz3.ab3@20711>   MOVE.l (a7)+,a0
0002FE38 <AmiBlitz3.ab3@20714>   CMP.l #newtype_string,d0
0002FE3C <AmiBlitz3.ab3@20715>   BNE 'nostring
0002FE42 <AmiBlitz3.ab3@20716>   ADDQ #2,a2offset
0002FE48 <AmiBlitz3.ab3@20717>   MOVE.l #$3f3c0000,d1
0002FE4A <AmiBlitz3.ab3@20718>   MOVEQ #0,d0
0002FE4E <AmiBlitz3.ab3@20719>   MOVE.w 4(a0),d0
0002FE54 <AmiBlitz3.ab3@20720>   ADD.l typebase,d0
0002FE56 <AmiBlitz3.ab3@20721>   MOVE.w d0,d1
0002FE5A <AmiBlitz3.ab3@20722>   BSR writelong
0002FE60 <AmiBlitz3.ab3@20723>   TST.b debugmode
0002FE64 <AmiBlitz3.ab3@20724>   BEQ 'l1a
0002FE66 <AmiBlitz3.ab3@20725>   MOVE.l d1,-(a7)
0002FE6C <AmiBlitz3.ab3@20726>   MOVE.l #$c308,d1
0002FE72 <AmiBlitz3.ab3@20727>   JSR Atokejsr
0002FE74 <AmiBlitz3.ab3@20728>   MOVE.l (a7)+,d1
0002FE78 <AmiBlitz3.ab3@20731>   TST.w 8(a0)
0002FE7C <AmiBlitz3.ab3@20732>   BEQ 'nostring
0002FE80 <AmiBlitz3.ab3@20733>   MOVEM.l d2/d3,-(a7)
0002FE82 <AmiBlitz3.ab3@20734>   MOVE.l d1,d2
0002FE84 <AmiBlitz3.ab3@20735>   MOVEQ #0,d3
0002FE88 <AmiBlitz3.ab3@20736>   MOVE.w 8(a0),d3
0002FE8A <AmiBlitz3.ab3@20737>   SUBQ.l #1,d3
0002FE8E <AmiBlitz3.ab3@20738>   BEQ 'nostring2
0002FE90 <AmiBlitz3.ab3@20741>   ADDQ.l #4,d2
0002FE92 <AmiBlitz3.ab3@20742>   MOVE.l d2,d1
0002FE96 <AmiBlitz3.ab3@20743>   BSR writelong
0002FE9C <AmiBlitz3.ab3@20744>   TST.b debugmode
0002FEA0 <AmiBlitz3.ab3@20745>   BEQ 'l1
0002FEA6 <AmiBlitz3.ab3@20746>   MOVE.l #$c308,d1
0002FEAC <AmiBlitz3.ab3@20747>   JSR Atokejsr
0002FEB2 <AmiBlitz3.ab3@20750>   ADDQ #2,a2offset
0002FEB4 <AmiBlitz3.ab3@20751>   SUBQ.l #1,d3
0002FEB8 <AmiBlitz3.ab3@20752>   BNE 'loop
0002FEBC <AmiBlitz3.ab3@20755>   MOVEM.l (a7)+,d2/d3
0002FEBE <AmiBlitz3.ab3@20758>   MOVE.l (a0),d0
0002FEC2 <AmiBlitz3.ab3@20759>   BNE 'more
0002FEC4 <AmiBlitz3.ab3@20760>   MOVE.l (a7)+,a1
0002FEC6 <AmiBlitz3.ab3@20761> RTS
0002FECA <AmiBlitz3.ab3@20764> libisat:   Ds.l 1
0002FED0 <AmiBlitz3.ab3@20770>   MOVE.l libisat,-(A7)                                   
0002FED6 <AmiBlitz3.ab3@20771>   MOVE.l A2,libisat
0002FEDA <AmiBlitz3.ab3@20772>   LEA $6(A2,D1.L),A2
0002FEE2 <AmiBlitz3.ab3@20777>   CMP.l #$3e19436c,$1c-8(a2)                               ;clear type
0002FEE6 <AmiBlitz3.ab3@20778>   BEQ 'dowritevar
0002FEEE <AmiBlitz3.ab3@20779>   CMP.l #$3e18436f,$1c-8(a2)                               ;copy type
0002FEF2 <AmiBlitz3.ab3@20780>   BEQ 'dowritevar
0002FEFA <AmiBlitz3.ab3@20781>   CMP.l #$3e175265,$1c(a2)
0002FEFE <AmiBlitz3.ab3@20782>   BEQ 'dowritevar
0002FF06 <AmiBlitz3.ab3@20783>   CMP.l #$3e165772,$1c(a2)
0002FF0A <AmiBlitz3.ab3@20784>   BNE 'nowritef
0002FF0E <AmiBlitz3.ab3@20787>   MOVEM.l a0-a2/d2,-(a7)
0002FF10 <AmiBlitz3.ab3@20788>   MOVEQ #0,d1
0002FF1A <AmiBlitz3.ab3@20789>   MOVE.l #0,typebase
0002FF1E <AmiBlitz3.ab3@20790>   MOVE.l $a(a3),a0
0002FF22 <AmiBlitz3.ab3@20791>   MOVE.l $4(a0),d0
0002FF28 <AmiBlitz3.ab3@20792>   CMP.l #8,d0
0002FF2C <AmiBlitz3.ab3@20793>   BLE 'notype
0002FF30 <AmiBlitz3.ab3@20794>   BSR scantype
0002FF36 <AmiBlitz3.ab3@20797>   MOVE.l #$3f3c0000,d1
0002FF3C <AmiBlitz3.ab3@20798>   MOVE.w a2offset,d1
0002FF40 <AmiBlitz3.ab3@20799>   BSR writelong
0002FF46 <AmiBlitz3.ab3@20800>   MOVE.l #$3f3c0000,d1
0002FF4A <AmiBlitz3.ab3@20801>   MOVE.l $a(a3),a0
0002FF4E <AmiBlitz3.ab3@20802>   MOVE.w 8(a0),d1
0002FF52 <AmiBlitz3.ab3@20803>   BSR writelong
0002FF58 <AmiBlitz3.ab3@20804>   MOVE.l #$3f3cab12,d1
0002FF5C <AmiBlitz3.ab3@20805>   BSR writelong
0002FF62 <AmiBlitz3.ab3@20806>   ADDQ.w #6,a2offset
0002FF66 <AmiBlitz3.ab3@20807>   MOVEM.l (a7)+,a0-a2/d2
0002FF6C <AmiBlitz3.ab3@20810>   TST.b fpu
0002FF70 <AmiBlitz3.ab3@20811>   BEQ 'nofpu2
0002FF78 <AmiBlitz3.ab3@20812>   CMP.l #$496e7400,$1a(a2)
0002FF7C <AmiBlitz3.ab3@20813>   BNE 'noint
0002FF7E <AmiBlitz3.ab3@20814>   MOVEQ #0,d1
0002FF84 <AmiBlitz3.ab3@20815>   SUBQ.l #8,destpointer                                    ;fpu int
0002FF8A <AmiBlitz3.ab3@20816>   CLR.w a2offset
0002FF8E <AmiBlitz3.ab3@20817>   CMP.b #2,d2
0002FF92 <AmiBlitz3.ab3@20818>   BGT 'noword
0002FF96 <AmiBlitz3.ab3@20819>   MOVE.w #$48c0,d1
0002FF9C <AmiBlitz3.ab3@20820>   OR.w regnumstore,d1
0002FFA0 <AmiBlitz3.ab3@20821>   BSR writeword
0002FFA4 <AmiBlitz3.ab3@20822>  BRA 'exit2
0002FFA8 <AmiBlitz3.ab3@20825>    CMP.b #3,d2
0002FFAC <AmiBlitz3.ab3@20826>         BNE 'nolong
0002FFB0 <AmiBlitz3.ab3@20827>  BRA 'exit2
0002FFB4 <AmiBlitz3.ab3@20830>    CMP.b #4,d2
0002FFB8 <AmiBlitz3.ab3@20831>         BNE 'noquick
0002FFBC <AmiBlitz3.ab3@20832>         MOVE.w #$e080,d1
0002FFC2 <AmiBlitz3.ab3@20833>         OR.w regnumstore,d1
0002FFC6 <AmiBlitz3.ab3@20834>         BSR writeword
0002FFCA <AmiBlitz3.ab3@20835>         MOVE.w #$e080,d1
0002FFD0 <AmiBlitz3.ab3@20836>         OR.w regnumstore,d1
0002FFD4 <AmiBlitz3.ab3@20837>         BSR writeword
0002FFD8 <AmiBlitz3.ab3@20838>  BRA 'exit2
0002FFDA <AmiBlitz3.ab3@20841>         MOVEQ #0,d0
0002FFDC <AmiBlitz3.ab3@20842>         MOVEQ #0,d1
0002FFE2 <AmiBlitz3.ab3@20843>         MOVE.w regnumstore,d0
0002FFE4 <AmiBlitz3.ab3@20844>         ASL.l #7,d0
0002FFEA <AmiBlitz3.ab3@20845>         OR.l #$f23c4428,d1                                 ;fsub.s 0.5,fpx
0002FFEC <AmiBlitz3.ab3@20846>         OR.l d0,d1
0002FFF2 <AmiBlitz3.ab3@20848>         MOVE.l #$3f000000,d1
0002FFF4 <AmiBlitz3.ab3@20850>         MOVEQ #0,d0
0002FFF6 <AmiBlitz3.ab3@20851>         MOVEQ #0,d1
0002FFFC <AmiBlitz3.ab3@20852>         MOVE.w regnumstore,d0
0002FFFE <AmiBlitz3.ab3@20853>         ASL.l #7,d0
00030000 <AmiBlitz3.ab3@20854>         MOVE.l d0,d1
00030006 <AmiBlitz3.ab3@20855>         OR.l #$f2000003,d1                                 ;fintrz fpx
00030008 <AmiBlitz3.ab3@20856>         ASL.l #3,d0
0003000A <AmiBlitz3.ab3@20857>         OR.l d0,d1
0003000E <AmiBlitz3.ab3@20858>         BSR writelong
00030010 <AmiBlitz3.ab3@20859>         MOVEQ #0,d0
00030016 <AmiBlitz3.ab3@20860>         MOVE.w regnumstore,d0
00030018 <AmiBlitz3.ab3@20861>         ASL.l #7,d0
0003001E <AmiBlitz3.ab3@20862>         MOVE.l #$f2006000,d1                               ;fmove.l fp0,d0
00030020 <AmiBlitz3.ab3@20863>         OR.l d0,d1
00030022 <AmiBlitz3.ab3@20864>         ASL.l #1,d0
00030024 <AmiBlitz3.ab3@20865>         ASL.l #8,d0
00030026 <AmiBlitz3.ab3@20866>         OR.l d0,d1
0003002A <AmiBlitz3.ab3@20867>  BRA 'exit
00030030 <AmiBlitz3.ab3@20870>   CMP.w #$3c01,24(a2)
00030034 <AmiBlitz3.ab3@20871>   BNE 'noval
00030036 <AmiBlitz3.ab3@20872>   MOVE.l a2,-(a7)
0003003A <AmiBlitz3.ab3@20873>   BSR.w makelsub3
0003003C <AmiBlitz3.ab3@20874>   MOVE.l (a7)+,a2
00030040 <AmiBlitz3.ab3@20875>  BRA 'exit2
00030048 <AmiBlitz3.ab3@20892>   CMP.l #$41627300,$1a(a2)
0003004C <AmiBlitz3.ab3@20893>   BNE 'noabs
0003004E <AmiBlitz3.ab3@20894>   MOVEQ #0,d1
00030054 <AmiBlitz3.ab3@20895>   MOVE.w regnumstore,d1
00030056 <AmiBlitz3.ab3@20896>   MOVE.w d1,d0
00030058 <AmiBlitz3.ab3@20897>   ASL.w #7,d1
0003005A <AmiBlitz3.ab3@20898>   ASL.w #8,d0
0003005C <AmiBlitz3.ab3@20899>   ASL.w #2,d0
0003005E <AmiBlitz3.ab3@20900>   OR.w d0,d1
00030064 <AmiBlitz3.ab3@20901>   SUBQ.l #8,destpointer                                    ;fpu abs
00030068 <AmiBlitz3.ab3@20902>   MOVEM.l d3/d1,-(a7)
0003006C <AmiBlitz3.ab3@20903>   MOVE.w #5,d3
0003006E <AmiBlitz3.ab3@20904>   EXG d2,d3
00030074 <AmiBlitz3.ab3@20905>   MOVE.w regnum,-(a7)
0003007E <AmiBlitz3.ab3@20906>   MOVE.w regnumstore,regnum
00030082 <AmiBlitz3.ab3@20907>   BSR writeconvertcode
00030088 <AmiBlitz3.ab3@20908>   MOVE.w (a7)+,regnum
0003008A <AmiBlitz3.ab3@20909>   EXG d2,d3
0003008E <AmiBlitz3.ab3@20910>   MOVEM.l (a7)+,d3/d1
00030094 <AmiBlitz3.ab3@20911>   OR.l #$f2000018,d1
0003009A <AmiBlitz3.ab3@20912>   CLR.w a2offset
0003009E <AmiBlitz3.ab3@20913>  BRA 'exit
000300A2 <AmiBlitz3.ab3@20916>   CMP.b #5,d2
000300A6 <AmiBlitz3.ab3@20917>   BNE 'nofpu2
000300AA <AmiBlitz3.ab3@20918>   MOVE.b 24(a2),d0
000300AE <AmiBlitz3.ab3@20919>   CMP.b #$60,d0                                            ;nolib $edxx
000300B2 <AmiBlitz3.ab3@20920>   BNE 'nofpu
000300B4 <AmiBlitz3.ab3@20921>   MOVEQ #0,d1
000300BA <AmiBlitz3.ab3@20922>   MOVE.w regnumstore,d1
000300BC <AmiBlitz3.ab3@20923>   MOVE.w d1,d0
000300BE <AmiBlitz3.ab3@20924>   ASL.w #7,d1
000300C0 <AmiBlitz3.ab3@20925>   ASL.w #8,d0
000300C2 <AmiBlitz3.ab3@20926>   ASL.w #2,d0
000300C4 <AmiBlitz3.ab3@20927>   OR.w d0,d1
000300C8 <AmiBlitz3.ab3@20928>   MOVE.b 25(a2),d0
000300CC <AmiBlitz3.ab3@20929>   CMP.b #5,d0
000300D0 <AmiBlitz3.ab3@20930>   BNE 'nocos
000300D6 <AmiBlitz3.ab3@20931>   OR.l #$f200001d,d1                                       ;fpu cos
000300DA <AmiBlitz3.ab3@20932>  BRA 'exit
000300DE <AmiBlitz3.ab3@20935>   CMP.b #$c,d0
000300E2 <AmiBlitz3.ab3@20936>   BNE 'nosqr
000300E8 <AmiBlitz3.ab3@20937>   OR.l #$f2000004,d1                                       ;fpu sqr
000300EC <AmiBlitz3.ab3@20938>  BRA 'exit
000300F0 <AmiBlitz3.ab3@20941>   CMP.b #$d,d0
000300F4 <AmiBlitz3.ab3@20942>   BNE 'notan
000300FA <AmiBlitz3.ab3@20943>   OR.l #$f200000f,d1                                       ;fpu tan
000300FE <AmiBlitz3.ab3@20944>  BRA 'exit
00030102 <AmiBlitz3.ab3@20947>   CMP.b #$a,d0
00030106 <AmiBlitz3.ab3@20948>   BNE 'nosin
0003010C <AmiBlitz3.ab3@20949>   OR.l #$f200000e,d1                                       ;fpu sin
00030110 <AmiBlitz3.ab3@20950>  BRA 'exit
00030114 <AmiBlitz3.ab3@20953>   CMP.b #$3,d0
00030118 <AmiBlitz3.ab3@20954>   BNE 'noasin
0003011E <AmiBlitz3.ab3@20955>   OR.l #$f200000c,d1                                       ;fpu asin
00030122 <AmiBlitz3.ab3@20956>  BRA 'exit
00030126 <AmiBlitz3.ab3@20959>   CMP.b #$2,d0
0003012A <AmiBlitz3.ab3@20960>   BNE 'noacos
00030130 <AmiBlitz3.ab3@20961>   OR.l #$f200001c,d1                                       ;fpu acos
00030134 <AmiBlitz3.ab3@20962>  BRA 'exit
00030138 <AmiBlitz3.ab3@20965>   CMP.b #$4,d0
0003013C <AmiBlitz3.ab3@20966>   BNE 'noatan
00030142 <AmiBlitz3.ab3@20967>   OR.l #$f200000a,d1                                       ;fpu atan
00030146 <AmiBlitz3.ab3@20968>  BRA 'exit
0003014A <AmiBlitz3.ab3@20971>   CMP.b #$e,d0
0003014E <AmiBlitz3.ab3@20972>   BNE 'nohtan
00030154 <AmiBlitz3.ab3@20973>   OR.l #$f2000009,d1                                       ;fpu htan
00030158 <AmiBlitz3.ab3@20974>  BRA 'exit
0003015C <AmiBlitz3.ab3@20977>   CMP.b #$6,d0
00030160 <AmiBlitz3.ab3@20978>   BNE 'nohcos
00030166 <AmiBlitz3.ab3@20979>   OR.l #$f2000019,d1                                       ;fpu hcos
0003016A <AmiBlitz3.ab3@20980>  BRA 'exit
0003016E <AmiBlitz3.ab3@20983>   CMP.b #$b,d0
00030172 <AmiBlitz3.ab3@20984>   BNE 'nohsin
00030178 <AmiBlitz3.ab3@20985>   OR.l #$f2000002,d1                                       ;fpu hsin
0003017C <AmiBlitz3.ab3@20986>  BRA 'exit
00030180 <AmiBlitz3.ab3@20989>   CMP.b #$9,d0
00030184 <AmiBlitz3.ab3@20990>   BNE 'nolog
0003018A <AmiBlitz3.ab3@20991>   OR.l #$f2000014,d1                                       ;fpu log
0003018E <AmiBlitz3.ab3@20992>  BRA 'exit
00030192 <AmiBlitz3.ab3@20995>   CMP.b #$8,d0
00030196 <AmiBlitz3.ab3@20996>   BNE 'nolog10
0003019C <AmiBlitz3.ab3@20997>   OR.l #$f2000015,d1                                       ;fpu log10
000301A0 <AmiBlitz3.ab3@20998>  BRA 'exit
000301A4 <AmiBlitz3.ab3@21001>   CMP.b #$7,d0
000301A8 <AmiBlitz3.ab3@21002>   BNE 'noexp
000301AE <AmiBlitz3.ab3@21003>   OR.l #$f2000010,d1                                       ;fpu exp
000301B2 <AmiBlitz3.ab3@21004>  BRA 'exit
000301B8 <AmiBlitz3.ab3@21007>   LEA fpuerr,a0
000301BA <AmiBlitz3.ab3@21008>   MOVE.l a0,-(a7)
000301C0 <AmiBlitz3.ab3@21009>  JMP handle_compileerror
000301C4 <AmiBlitz3.ab3@21013>   CMP.b #$3c,d0
000301C8 <AmiBlitz3.ab3@21014>   BNE 'nofpu2
000301CA <AmiBlitz3.ab3@21015>   MOVEQ #0,d1
000301D0 <AmiBlitz3.ab3@21016>       MOVE.w regnumstore,d1
000301D2 <AmiBlitz3.ab3@21017>       MOVE.w d1,d0
000301D4 <AmiBlitz3.ab3@21018>       ASL.w #7,d1
000301D6 <AmiBlitz3.ab3@21019>       ASL.w #8,d0
000301D8 <AmiBlitz3.ab3@21020>       ASL.w #2,d0
000301DA <AmiBlitz3.ab3@21021>       OR.w d0,d1
000301E0 <AmiBlitz3.ab3@21022>       CMP.b #$03,25(a2)
000301E4 <AmiBlitz3.ab3@21023>       BNE 'nosgn
000301EA <AmiBlitz3.ab3@21026>       SUBQ.l #8,destpointer                                ;fpu sgn
000301F0 <AmiBlitz3.ab3@21027>         OR.l #$f200003a,d1
000301F4 <AmiBlitz3.ab3@21028>         BSR writelong
000301FA <AmiBlitz3.ab3@21029>         CLR.w a2offset
00030200 <AmiBlitz3.ab3@21030>          MOVE.l #$F28E0006,d1
00030204 <AmiBlitz3.ab3@21031>          BSR writelong
0003020A <AmiBlitz3.ab3@21032>   MOVE.l #$7000600a,d1
0003020E <AmiBlitz3.ab3@21033>   BSR writelong
00030214 <AmiBlitz3.ab3@21034>   MOVE.l #$70014840,d1
00030218 <AmiBlitz3.ab3@21035>   BSR writelong
0003021E <AmiBlitz3.ab3@21036>   MOVE.l #$F292,d1
00030222 <AmiBlitz3.ab3@21037>   BSR writeword
00030228 <AmiBlitz3.ab3@21038>   MOVE.l #$000470FF,d1
0003022C <AmiBlitz3.ab3@21039>  BRA 'exit
00030234 <AmiBlitz3.ab3@21042>   CMP.l #"Frac",$1a(a2)
00030238 <AmiBlitz3.ab3@21043>   BNE 'nofrac
0003023E <AmiBlitz3.ab3@21044>  JMP notwork
00030242 <AmiBlitz3.ab3@21085>  BRA 'exit
00030246 <AmiBlitz3.ab3@21090>   BSR.w makelsub3                                          ;write lib code
0003024C <AmiBlitz3.ab3@21091>   MOVE.l (A7)+,libisat
0003024E <AmiBlitz3.ab3@21092>  RTS
00030252 <AmiBlitz3.ab3@21096>   BSR writelong
00030258 <AmiBlitz3.ab3@21099>   MOVE.l (A7)+,libisat
0003025A <AmiBlitz3.ab3@21100> RTS
0003025E <AmiBlitz3.ab3@21104>   BSR.w fetchregs
00030264 <AmiBlitz3.ab3@21106>   TST.b debugmode
00030268 <AmiBlitz3.ab3@21107>    BEQ.w 'norerr
0003026A <AmiBlitz3.ab3@21109>   MOVE.l (A2),D1
0003026E <AmiBlitz3.ab3@21110>   OR.l $8(A2),D1
00030272 <AmiBlitz3.ab3@21111>   BCLR #$0,D1
00030274 <AmiBlitz3.ab3@21112>   TST.l D1
00030278 <AmiBlitz3.ab3@21113>    BEQ.w 'norerr
0003027A <AmiBlitz3.ab3@21115>   MOVE.l (A2)+,D1
0003027E <AmiBlitz3.ab3@21116>   BTST #$0,D1
00030282 <AmiBlitz3.ab3@21117>    BEQ.w 'skiptt
00030288 <AmiBlitz3.ab3@21118>   TST.w blitzmode
0003028C <AmiBlitz3.ab3@21119>    BPL.w blitzerr
00030292 <AmiBlitz3.ab3@21120>   TST.b debugmode
00030296 <AmiBlitz3.ab3@21121>    BEQ.w 'skiptt2
00030298 <AmiBlitz3.ab3@21122>   MOVE.l D1,-(A7)
0003029C <AmiBlitz3.ab3@21123>   MOVE.w #$C311,D1   ; was #inblitz,
000302A0 <AmiBlitz3.ab3@21124>    BSR.w makebtst
000302A2 <AmiBlitz3.ab3@21125>   MOVE.l (A7)+,D1
000302A6 <AmiBlitz3.ab3@21128>   BCLR #$0,D1
000302A8 <AmiBlitz3.ab3@21131>   TST.l D1
000302AC <AmiBlitz3.ab3@21133>    BSR.w doajsr
000302AE <AmiBlitz3.ab3@21134>   MOVE.l (A2)+,D1
000302B2 <AmiBlitz3.ab3@21135>    BSR.w doajsrrout
000302B4 <AmiBlitz3.ab3@21136>   MOVE.l (A2)+,D1
000302B8 <AmiBlitz3.ab3@21137>    BSR.w doajsr
000302BC <AmiBlitz3.ab3@21138>  BRA.w 'more
000302C2 <AmiBlitz3.ab3@21141>   BTST #$0,$3(A2)
000302C6 <AmiBlitz3.ab3@21142>    BEQ.w 'penis
000302CA <AmiBlitz3.ab3@21146>   MOVE.w blitzmode(PC),D1
000302CE <AmiBlitz3.ab3@21147>    BPL.w blitzerr
000302D2 <AmiBlitz3.ab3@21150>   MOVE.l $4(A2),D1
000302D6 <AmiBlitz3.ab3@21151>    BSR.w doajsrrout
000302DC <AmiBlitz3.ab3@21154>   MOVEA.l libisat,A2
000302DE <AmiBlitz3.ab3@21155> RTS
000302E2 <AmiBlitz3.ab3@21162>   BTST #$0,D1
000302E6 <AmiBlitz3.ab3@21163>    BEQ.w 'doajsr
000302EC <AmiBlitz3.ab3@21164>   TST.w blitzmode
000302F0 <AmiBlitz3.ab3@21165>    BMI.w amigaerr
000302F6 <AmiBlitz3.ab3@21166>   TST.b debugmode
000302FA <AmiBlitz3.ab3@21167>    BEQ.w 'doajsr2      
000302FC <AmiBlitz3.ab3@21168>   MOVE.l D1,-(A7)
00030300 <AmiBlitz3.ab3@21169>   MOVE.w #$C312,D1     ; #inamiga,
00030304 <AmiBlitz3.ab3@21170>    BSR.w makebtst
00030306 <AmiBlitz3.ab3@21171>   MOVE.l (A7)+,D1
0003030A <AmiBlitz3.ab3@21174>   BCLR #$0,D1
0003030C <AmiBlitz3.ab3@21177>   TST.l D1
00030310 <AmiBlitz3.ab3@21180>    BEQ.w 'skip
00030312 <AmiBlitz3.ab3@21181>   MOVE.l A1,-(A7)
00030316 <AmiBlitz3.ab3@21182>    BSR.w doajsr2
00030318 <AmiBlitz3.ab3@21183>   MOVEA.l (A7)+,A1
0003031A <AmiBlitz3.ab3@21186> RTS
00030320 <AmiBlitz3.ab3@21190>   MOVEA.l libisat,A0
00030326 <AmiBlitz3.ab3@21191>   TST.w cfetchmode
0003032A <AmiBlitz3.ab3@21192>    BEQ.w 'nfetch
0003032C <AmiBlitz3.ab3@21193>   ADD.l A0,D1
0003032E <AmiBlitz3.ab3@21194>   MOVE.l D1,-(A7)
00030332 <AmiBlitz3.ab3@21195>   MOVE.w #$4EB9,D1
00030336 <AmiBlitz3.ab3@21196>    BSR.w writeword
00030338 <AmiBlitz3.ab3@21197>   MOVE.l (A7)+,D1
0003033C <AmiBlitz3.ab3@21198>  BRA.w writelong
00030340 <AmiBlitz3.ab3@21205>   LEA $0(A0,D1.L),A1
00030346 <AmiBlitz3.ab3@21206>   CLR.w inline
0003034A <AmiBlitz3.ab3@21209>   CMPI.b #$A0,(A1)+
0003034E <AmiBlitz3.ab3@21210>    BNE.w 'ugly
00030350 <AmiBlitz3.ab3@21211>   TST.b (A1)+
00030354 <AmiBlitz3.ab3@21212>    BEQ.w 'iszero
0003035A <AmiBlitz3.ab3@21213>   CMPI.b #$1,-$1(A1)
0003035E <AmiBlitz3.ab3@21214>    BEQ.w 'isone
00030364 <AmiBlitz3.ab3@21218>   MOVE.w (A1)+,inline
00030366 <AmiBlitz3.ab3@21219>   ADDQ.l #4,D1
0003036A <AmiBlitz3.ab3@21220>  BRA.w 'cute
00030370 <AmiBlitz3.ab3@21225>   TST.w blitzmode
00030374 <AmiBlitz3.ab3@21226>    BPL.w 'inamiga
0003037A <AmiBlitz3.ab3@21228>   TST.b debugmode
0003037E <AmiBlitz3.ab3@21229>    BEQ.w 'nobrerr
00030382 <AmiBlitz3.ab3@21230>   MOVE.w #$C311,D1       ; was #inblitz,
00030386 <AmiBlitz3.ab3@21231>    BSR.w makebtst
00030388 <AmiBlitz3.ab3@21234>   MOVE.l (A1)+,D1
0003038C <AmiBlitz3.ab3@21235>   LEA $0(A0,D1.L),A1
00030390 <AmiBlitz3.ab3@21236>  BRA.w 'cute
00030396 <AmiBlitz3.ab3@21239>   TST.b debugmode
0003039A <AmiBlitz3.ab3@21240>    BEQ.w 'noarerr        
0003039C <AmiBlitz3.ab3@21241>   MOVE.l D1,-(A7)
000303A0 <AmiBlitz3.ab3@21242>   MOVE.w #$C312,D1       ; was #inamiga,
000303A4 <AmiBlitz3.ab3@21243>    BSR.w makebtst
000303A6 <AmiBlitz3.ab3@21244>   MOVE.l (A7)+,D1
000303A8 <AmiBlitz3.ab3@21247>   ADDQ.w #4,A1
000303AA <AmiBlitz3.ab3@21248>   ADDQ.l #6,D1
000303AE <AmiBlitz3.ab3@21249>  BRA.w 'cute
000303B4 <AmiBlitz3.ab3@21252>   TST.w inline
000303B8 <AmiBlitz3.ab3@21253>    BEQ.w 'notin
000303BA <AmiBlitz3.ab3@21255>   SUBQ.w #1,A1
000303BC <AmiBlitz3.ab3@21256>   MOVEA.l A1,A0
000303C0 <AmiBlitz3.ab3@21257>   ADDA.w inline(PC),A1
000303C4 <AmiBlitz3.ab3@21258>  BRA.w pokecode2
000303C8 <AmiBlitz3.ab3@21261>   MOVEM.l a0/D1,-(A7)          ; was  d1,-(a7)
000303CE <AmiBlitz3.ab3@21263>   TST.w debugversion
000303D2 <AmiBlitz3.ab3@21264>   BEQ 'l11
000303DA <AmiBlitz3.ab3@21265>   BTST #$7,link_debuginfo
000303DE <AmiBlitz3.ab3@21266>   BEQ.w 'l11
000303E4 <AmiBlitz3.ab3@21267>   MOVE.l lastinstruction,d1
000303E8 <AmiBlitz3.ab3@21268>   BEQ 'l11
000303EE <AmiBlitz3.ab3@21269>   CLR.l lastinstruction
000303F4 <AmiBlitz3.ab3@21270>   CMP.l #$e000,d1
000303F8 <AmiBlitz3.ab3@21271>   BGE 'ln99
000303FE <AmiBlitz3.ab3@21272>   LEA notf,a0
00030404 <AmiBlitz3.ab3@21273>   CMP.l #$c601,d1
00030408 <AmiBlitz3.ab3@21274>   BNE 'ln1
0003040E <AmiBlitz3.ab3@21275>   LEA strcpy,a0
00030412 <AmiBlitz3.ab3@21276>  BRA 'ln3
00030418 <AmiBlitz3.ab3@21279>   CMP.l #$c700,d1
0003041C <AmiBlitz3.ab3@21280>   BNE 'ln2
00030422 <AmiBlitz3.ab3@21281>   LEA strvar,a0
00030426 <AmiBlitz3.ab3@21282>  BRA 'ln3
0003042C <AmiBlitz3.ab3@21285>   CMP.l #$ce00,d1
00030430 <AmiBlitz3.ab3@21286>   BNE 'ln4
00030436 <AmiBlitz3.ab3@21287>   LEA strcmp,a0
0003043A <AmiBlitz3.ab3@21288>  BRA 'ln3
00030440 <AmiBlitz3.ab3@21291>   CMP.l #$ca00,d1
00030444 <AmiBlitz3.ab3@21292>   BNE 'ln5
0003044A <AmiBlitz3.ab3@21293>   LEA qmul,a0
0003044E <AmiBlitz3.ab3@21294>  BRA 'ln3
00030454 <AmiBlitz3.ab3@21297>   CMP.l #$d000,d1
00030458 <AmiBlitz3.ab3@21298>      BNE 'ln6
0003045E <AmiBlitz3.ab3@21299>      LEA _MaxLen,a0
00030462 <AmiBlitz3.ab3@21300>  BRA 'ln3
00030468 <AmiBlitz3.ab3@21303>   CMP.l #$cb00,d1
0003046C <AmiBlitz3.ab3@21304>   BNE 'ln3
00030472 <AmiBlitz3.ab3@21305>   LEA qdiv,a0
00030476 <AmiBlitz3.ab3@21306>  BRA 'ln3
00030478 <AmiBlitz3.ab3@21309>   MOVE.l d1,a0
0003047C <AmiBlitz3.ab3@21310>   LEA $8(a0),a0
00030480 <AmiBlitz3.ab3@21313>   CMP.w #$ffff,(a0)+
00030484 <AmiBlitz3.ab3@21314>   BNE 'l1
00030488 <AmiBlitz3.ab3@21315>   LEA 6(a0),a0
0003048C <AmiBlitz3.ab3@21318>   MOVEM.l a1/a2/d7/d2,-(a7)
0003048E <AmiBlitz3.ab3@21319>   MOVEQ #0,d2
00030494 <AmiBlitz3.ab3@21320>   LEA ptr_parameterstore,a1
00030496 <AmiBlitz3.ab3@21323>   ADDQ.l #1,d2
00030498 <AmiBlitz3.ab3@21324>   MOVE.b (a0)+,d0
0003049C <AmiBlitz3.ab3@21325> 
000304A0 <AmiBlitz3.ab3@21326>   BNE 'nodollar
000304A4 <AmiBlitz3.ab3@21327>   MOVE.b #"S",d0
000304A8 <AmiBlitz3.ab3@21330>   CMP.b #"?",d0
000304AC <AmiBlitz3.ab3@21331>   BEQ 'nolabelwrite
000304AE <AmiBlitz3.ab3@21332>   MOVE.b d0,(a1)+
000304B2 <AmiBlitz3.ab3@21333>   BNE 'l2
000304B8 <AmiBlitz3.ab3@21334>   MOVE.w #"__",-1(a1)
000304BA <AmiBlitz3.ab3@21335>   ADDQ.l #2,d2
000304BE <AmiBlitz3.ab3@21336>   CLR.b 1(a1)
000304C4 <AmiBlitz3.ab3@21337>   JSR findlabel2
000304C8 <AmiBlitz3.ab3@21338>   BEQ 'l3
000304CE <AmiBlitz3.ab3@21339>   JSR addlabelhash
000304D2 <AmiBlitz3.ab3@21342>   CLR.l 4(a2)
000304D6 <AmiBlitz3.ab3@21343>   MOVE.l $14(a7),a0
000304DA <AmiBlitz3.ab3@21344>   MOVE.l $10(a7),d1
000304DE <AmiBlitz3.ab3@21345>   SUB.l $12(a0),d1
000304E2 <AmiBlitz3.ab3@21346>   ADD.l $28(a0),d1
000304E6 <AmiBlitz3.ab3@21347>   MOVE.l d1,8(a2)
000304EA <AmiBlitz3.ab3@21350>   MOVEM.l (a7)+,a1/a2/d7/d2
000304F0 <AmiBlitz3.ab3@21353>   TST.b typecheck
000304F4 <AmiBlitz3.ab3@21354>   BEQ 'p1
000304FA <AmiBlitz3.ab3@21355>   MOVE.l lasttoken,d1
00030500 <AmiBlitz3.ab3@21356>   CMP.l #$da01,d1                                          ;poke
00030504 <AmiBlitz3.ab3@21357>   BEQ 'lp1
0003050A <AmiBlitz3.ab3@21358>   CMP.l #$da02,d1                                          ;peek
0003050E <AmiBlitz3.ab3@21359>   BNE 'p1
00030514 <AmiBlitz3.ab3@21362>   TST.b peekaddrsize
00030518 <AmiBlitz3.ab3@21363>   BEQ 'p1
00030520 <AmiBlitz3.ab3@21364>   CMP.b #3,peekaddrsize
00030524 <AmiBlitz3.ab3@21365>   BNE errormsg_onlylong
0003052A <AmiBlitz3.ab3@21366>   CLR.b peekaddrsize
00030530 <AmiBlitz3.ab3@21374>    TST.b fpu
00030534 <AmiBlitz3.ab3@21375>   BNE 'optf
0003053A <AmiBlitz3.ab3@21376>   TST.b fast
0003053E <AmiBlitz3.ab3@21377>   BEQ 'l10
00030546 <AmiBlitz3.ab3@21383>   CMP.l #"Poke",20(a2)                                     ;poke
0003054A <AmiBlitz3.ab3@21384>   BNE 'peekopt
0003054E <AmiBlitz3.ab3@21385>   TST.b 24(a2)
00030552 <AmiBlitz3.ab3@21386>   BNE 'peekopt
00030556 <AmiBlitz3.ab3@21387>   CMP.b #3,d2
0003055A <AmiBlitz3.ab3@21388>   BNE 'lw1
00030560 <AmiBlitz3.ab3@21391>   MOVE.l #$21821990,d1
00030564 <AmiBlitz3.ab3@21392>  BRA.s 'exitjsr
00030568 <AmiBlitz3.ab3@21395>   CMP.b #2,d2
0003056C <AmiBlitz3.ab3@21396>   BNE 'lb1
00030572 <AmiBlitz3.ab3@21397>   MOVE.l #$31821990,d1
00030576 <AmiBlitz3.ab3@21398>  BRA.s 'exitjsr
0003057A <AmiBlitz3.ab3@21401>   CMP.b #1,d2
0003057E <AmiBlitz3.ab3@21402>   BNE 'lp3
00030584 <AmiBlitz3.ab3@21403>   MOVE.l #$11821990,d1
00030588 <AmiBlitz3.ab3@21404>  BRA.s 'exitjsr
0003058C <AmiBlitz3.ab3@21407>   CMP.b #5,d2
00030590 <AmiBlitz3.ab3@21408>     BNE 'l10
00030596 <AmiBlitz3.ab3@21409>     TST.b fpu
0003059A <AmiBlitz3.ab3@21410>     BEQ 'll1
000305A0 <AmiBlitz3.ab3@21411>      MOVE.l destpointer,a4
000305A8 <AmiBlitz3.ab3@21412>     CMP.l #$f22d4500,-6(a4)
000305AC <AmiBlitz3.ab3@21413>     BNE 'noglob
000305B2 <AmiBlitz3.ab3@21414>     TST.b doublepeek
000305B6 <AmiBlitz3.ab3@21415>     BNE 'noglob
000305BC <AmiBlitz3.ab3@21416>     MOVE.w -2(a4),-4(a4)
000305C2 <AmiBlitz3.ab3@21417>     MOVE.w #$21ad,-6(a4)
000305C8 <AmiBlitz3.ab3@21418>     MOVE.w #$1990,-2(a4)
000305D0 <AmiBlitz3.ab3@21419>     MOVE.w #9,peeksize
000305D2 <AmiBlitz3.ab3@21420>     ADDQ #8,a7
000305D4 <AmiBlitz3.ab3@21421>  RTS
000305DC <AmiBlitz3.ab3@21424>     CMP.l #$f22c4500,-6(a4)
000305E0 <AmiBlitz3.ab3@21425>     BNE 'nolocal
000305E6 <AmiBlitz3.ab3@21426>     MOVE.w -2(a4),-4(a4)
000305EC <AmiBlitz3.ab3@21427>     TST.b doublepeek                                       ;dont move longfix on double floats
000305F0 <AmiBlitz3.ab3@21428>     BNE 'nolocal
000305F6 <AmiBlitz3.ab3@21429>     MOVE.w #$21ac,-6(a4)
000305FC <AmiBlitz3.ab3@21430>     MOVE.w #$1990,-2(a4)
00030604 <AmiBlitz3.ab3@21431>     MOVE.w #9,peeksize
00030606 <AmiBlitz3.ab3@21432>     ADDQ #8,a7
00030608 <AmiBlitz3.ab3@21433>  RTS
0003060C <AmiBlitz3.ab3@21436>     MOVE.w #$f230,d1
00030610 <AmiBlitz3.ab3@21437>     BSR writeword
00030616 <AmiBlitz3.ab3@21438>   MOVE.l #$65001990,d1
0003061C <AmiBlitz3.ab3@21439>   TST.b doublepeek
00030620 <AmiBlitz3.ab3@21440>   BEQ 'exitjsr
00030626 <AmiBlitz3.ab3@21441>   OR.l   #$10000000,d1
00030628 <AmiBlitz3.ab3@21444>   ADDQ #8,a7
00030630 <AmiBlitz3.ab3@21445>   MOVE.w #9,peeksize
00030634 <AmiBlitz3.ab3@21446>  BRA writelong
0003063C <AmiBlitz3.ab3@21449>   CMP.l #"Peek",20(a2)
00030640 <AmiBlitz3.ab3@21450>   BNE 'l10
00030644 <AmiBlitz3.ab3@21451>   TST.b 24(a2)
00030648 <AmiBlitz3.ab3@21452>   BNE 'l10
00030650 <AmiBlitz3.ab3@21453>   CMP.w #7,peeksize
00030654 <AmiBlitz3.ab3@21454>   BEQ 'l10
0003065C <AmiBlitz3.ab3@21455>    CMP.w #3,peeksize
00030660 <AmiBlitz3.ab3@21456>    BNE.s 'lw1a
00030666 <AmiBlitz3.ab3@21459>   MOVE.l #$20301990,d1
0003066A <AmiBlitz3.ab3@21460>  BRA 'exitjsr
00030672 <AmiBlitz3.ab3@21463>   CMP.w #2,peeksize
00030676 <AmiBlitz3.ab3@21464>    BNE.s 'lb1a
0003067C <AmiBlitz3.ab3@21465>    MOVE.l #$30301990,d1
00030680 <AmiBlitz3.ab3@21466>  BRA 'exitjsr
00030688 <AmiBlitz3.ab3@21469>   CMP.w #1,peeksize
0003068C <AmiBlitz3.ab3@21470>    BNE.s 'lf1
00030692 <AmiBlitz3.ab3@21471>    MOVE.l #$10301990,d1
00030696 <AmiBlitz3.ab3@21472>  BRA 'exitjsr
0003069E <AmiBlitz3.ab3@21475>   CMP.w #5,peeksize
000306A2 <AmiBlitz3.ab3@21476>    BNE 'l10
000306A8 <AmiBlitz3.ab3@21477>    TST.b fpu
000306AC <AmiBlitz3.ab3@21478>    BEQ 'll1a
000306B0 <AmiBlitz3.ab3@21479>    MOVE.w #$f230,d1
000306B4 <AmiBlitz3.ab3@21480>    BSR writeword
000306B6 <AmiBlitz3.ab3@21481>    MOVEQ #0,d1
000306BC <AmiBlitz3.ab3@21482>    MOVE.w tempregnum,d1
000306BE <AmiBlitz3.ab3@21483>    ASL.l #7,d1
000306C0 <AmiBlitz3.ab3@21484>    ASL.l #8,d1
000306C2 <AmiBlitz3.ab3@21485>    ASL.l #8,d1
000306C8 <AmiBlitz3.ab3@21486>    ADD.l #$44001990,d1
000306CE <AmiBlitz3.ab3@21487>     TST.b doublepeek
000306D2 <AmiBlitz3.ab3@21488>     BEQ 'exitjsr2
000306D8 <AmiBlitz3.ab3@21489>     OR.l   #$10000000,d1
000306DC <AmiBlitz3.ab3@21492>  BRA 'exitjsr
000306E0 <AmiBlitz3.ab3@21496>   MOVE.w #$4EB9,D1
000306E4 <AmiBlitz3.ab3@21497>    BSR.w writeword                                         ;writesysjsr
000306E8 <AmiBlitz3.ab3@21498>   MOVEM.l (A7)+,a0/D1        ; was  (a7)+,d1
000306EE <AmiBlitz3.ab3@21499>    JSR addoff
000306F2 <AmiBlitz3.ab3@21500>   SUB.l $12(A0),D1
000306F6 <AmiBlitz3.ab3@21501>   ADD.l $28(A0),D1
000306FA <AmiBlitz3.ab3@21502> BRA.w writelong
000306FC <AmiBlitz3.ab3@21507>   MOVE.w D1,-(A7)
00030700 <AmiBlitz3.ab3@21508>   MOVE.w tstmode(PC),D1
00030704 <AmiBlitz3.ab3@21509>    BSR.w writeword
00030708 <AmiBlitz3.ab3@21510>    BSR.w getbbase
0003070C <AmiBlitz3.ab3@21511>    BSR.w writeword
0003070E <AmiBlitz3.ab3@21512>   MOVE.w (A7)+,D1
00030712 <AmiBlitz3.ab3@21513>   MOVEM.l D0/D3-D7/A0-A2/A4,-(A7)
00030716 <AmiBlitz3.ab3@21514>    BSR.w Atokejsr
0003071A <AmiBlitz3.ab3@21515>   MOVEM.l (A7)+,D0/D3-D7/A0-A2/A4
0003071C <AmiBlitz3.ab3@21516> RTS
00030720 <AmiBlitz3.ab3@21524>   MOVE.w blitzoff(PC),D1
00030724 <AmiBlitz3.ab3@21525>   CMP.w #-$1,D1
00030728 <AmiBlitz3.ab3@21526>    BNE.w 'done
0003072E <AmiBlitz3.ab3@21527>   ADDQ.w #1,globalvarpointer
00030736 <AmiBlitz3.ab3@21528>   BCLR #$0,globalvarpointer+1
0003073C <AmiBlitz3.ab3@21529>   MOVE.w globalvarpointer,D1
00030742 <AmiBlitz3.ab3@21530>   MOVE.w D1,blitzoff
00030748 <AmiBlitz3.ab3@21531>   ADDQ.w #2,globalvarpointer
0003074A <AmiBlitz3.ab3@21534> RTS
0003074E <AmiBlitz3.ab3@21538> tstmode:    Dc.b $4A,$6D,$00,$00                           ;TST.W $0000(A5)
00030750 <AmiBlitz3.ab3@21541> inline:     Ds.w 1
00030752 <AmiBlitz3.ab3@21542> blitzoff:   Dc.w $FFFF                                   ;-1 org source
00030754 <AmiBlitz3.ab3@21543> blitzmode:  Ds.w 1                                       ;+=amiga, -=blitz
00030756 <AmiBlitz3.ab3@21547>   MOVE.w (A2)+,D1
0003075A <AmiBlitz3.ab3@21548>    BEQ.w 'done
0003075C <AmiBlitz3.ab3@21549>   MOVE.w (A2)+,D2
00030760 <AmiBlitz3.ab3@21550>    BSR.w toreg
00030764 <AmiBlitz3.ab3@21551>  BRA.w fetchregs
00030766 <AmiBlitz3.ab3@21554> RTS
0003076A <AmiBlitz3.ab3@21560>   CMP.w #-$100,D2
0003076E <AmiBlitz3.ab3@21561>    BCC.w 'yeah
00030772 <AmiBlitz3.ab3@21563>   BCLR #$F,D2
00030776 <AmiBlitz3.ab3@21564>    BEQ.w 'nobm
0003077C <AmiBlitz3.ab3@21566>   TST.w blitzmode
00030780 <AmiBlitz3.ab3@21567>    BMI.w 'yeah
00030782 <AmiBlitz3.ab3@21568>  RTS
00030786 <AmiBlitz3.ab3@21571>   BCLR #$E,D2
0003078A <AmiBlitz3.ab3@21572>    BEQ.w 'yeah
00030790 <AmiBlitz3.ab3@21574>   TST.w blitzmode
00030794 <AmiBlitz3.ab3@21575>    BPL.w 'yeah
00030796 <AmiBlitz3.ab3@21576>  RTS
0003079C <AmiBlitz3.ab3@21579>   JSR uselib
0003079E <AmiBlitz3.ab3@21580>   TST.b D2
000307A2 <AmiBlitz3.ab3@21581>    BEQ.w 'norm
000307A6 <AmiBlitz3.ab3@21582>   CMP.b #$4,D2
000307AA <AmiBlitz3.ab3@21583>    BNE.w 'suv
000307AE <AmiBlitz3.ab3@21584>   MOVE.w #$0004,-(A7)
000307B4 <AmiBlitz3.ab3@21585>   MOVE.l #$FFFFFFFA,-(A7)                                  ;#-6,-(a7) org source
000307B8 <AmiBlitz3.ab3@21586>  BRA.w 'sendmd
000307BC <AmiBlitz3.ab3@21589>   CMP.b #$3,D2
000307C0 <AmiBlitz3.ab3@21590>    BNE.w 'notnmax
000307C2 <AmiBlitz3.ab3@21591>   CLR.w -(A7)
000307C8 <AmiBlitz3.ab3@21592>   MOVE.l #$FFFFFFFC,-(A7)                                  ;#-4,-(a7) org source
000307CA <AmiBlitz3.ab3@21598>   LSR.w #8,D2
000307CE <AmiBlitz3.ab3@21599>   MOVE.w #$303C,D1                                         ;move.w #x,dn
000307D2 <AmiBlitz3.ab3@21600>   BTST #$7,D2
000307D6 <AmiBlitz3.ab3@21601>    BEQ.w 'skipad
000307DA <AmiBlitz3.ab3@21602>   MOVE.w #$307C,D1                                         ;move.w #x,an
000307DE <AmiBlitz3.ab3@21603>   CMP.w #$16,D2
000307E2 <AmiBlitz3.ab3@21604>    BNE.w 'skipad
000307EA <AmiBlitz3.ab3@21605>   MOVE.w #$FFFF,lasta6                                     ;-1 org source
000307EE <AmiBlitz3.ab3@21608>   ANDI.w #$7,D2
000307F0 <AmiBlitz3.ab3@21609>   LSL.w #8,D2
000307F2 <AmiBlitz3.ab3@21610>   LSL.w #1,D2
000307F4 <AmiBlitz3.ab3@21611>   OR.w D2,D1
000307F8 <AmiBlitz3.ab3@21612>    BSR.w writeword
000307FC <AmiBlitz3.ab3@21613>   MOVE.l $12(A1),D1
000307FE <AmiBlitz3.ab3@21614>   ADD.l (A7)+,D1
00030802 <AmiBlitz3.ab3@21615>   MOVE.w $0(A1,D1.L),D1
00030804 <AmiBlitz3.ab3@21616>   ADD.w (A7)+,D1
00030808 <AmiBlitz3.ab3@21617>  BRA.w writeword
0003080A <AmiBlitz3.ab3@21620>   MOVE.w D2,-(A7)
0003080C <AmiBlitz3.ab3@21621>   LSR.w #8,D2
00030810 <AmiBlitz3.ab3@21622>   CMP.w #$16,D2
00030814 <AmiBlitz3.ab3@21623>    BNE.w 'isnta6
0003081C <AmiBlitz3.ab3@21624>   MOVE.w #$FFFF,lasta6                                     ;-1 org source
00030820 <AmiBlitz3.ab3@21627>   MOVE.l $12(A1),D1                                        ;objectspace
00030824 <AmiBlitz3.ab3@21628>   MOVE.w -$6(A1,D1.L),-(A7)
00030828 <AmiBlitz3.ab3@21629>    BSR.w makeregop
0003082C <AmiBlitz3.ab3@21630>    BSR.w writeword
0003082E <AmiBlitz3.ab3@21631>   MOVE.w (A7)+,D1
00030830 <AmiBlitz3.ab3@21632>   MOVE.w (A7)+,D2
00030832 <AmiBlitz3.ab3@21633>   TST.b D2
00030836 <AmiBlitz3.ab3@21634>    BPL.w 'skippy1
0003083A <AmiBlitz3.ab3@21639>    BSR.w writeword                                         ;move.l x(a5),dn
0003083C <AmiBlitz3.ab3@21640>   MOVE.w D2,-(A7)                                          ;store reg used
00030840 <AmiBlitz3.ab3@21642>   ADDA.l $12(A1),A1
00030842 <AmiBlitz3.ab3@21643>   MOVE.b D2,D1
00030846 <AmiBlitz3.ab3@21644>   ANDI.w #$7,D1
0003084C <AmiBlitz3.ab3@21646>   TST.b debugmode
00030850 <AmiBlitz3.ab3@21647>    BEQ.w 'norerr
00030852 <AmiBlitz3.ab3@21649>   MOVE.w D1,-(A7)
00030854 <AmiBlitz3.ab3@21650>   LSL.w #8,D1
00030856 <AmiBlitz3.ab3@21651>   LSL.w #1,D1
0003085A <AmiBlitz3.ab3@21652>   ORI.w #$B07C,D1                                          ;cmp #x,dn
0003085E <AmiBlitz3.ab3@21653>    BSR.w writeword
00030862 <AmiBlitz3.ab3@21654>   MOVE.w -$4(A1),D1
00030866 <AmiBlitz3.ab3@21655>    BSR.w writeword
0003086A <AmiBlitz3.ab3@21656>   MOVE.l maxchk(PC),D1                                  ;bcs
0003086E <AmiBlitz3.ab3@21657>    BSR.w writelong
00030870 <AmiBlitz3.ab3@21658>   MOVE.l A2,-(A7)
00030874 <AmiBlitz3.ab3@21659>   MOVE.w #$C30A,D1
00030878 <AmiBlitz3.ab3@21660>    BSR.w Atokejsr
0003087A <AmiBlitz3.ab3@21661>   MOVEA.l (A7)+,A2
0003087C <AmiBlitz3.ab3@21662>   MOVE.w (A7)+,D1
00030880 <AmiBlitz3.ab3@21665>   MOVE.w -$2(A1),D2                                        ;shift amount
00030884 <AmiBlitz3.ab3@21668>   CMP.w #$9,D2
00030888 <AmiBlitz3.ab3@21669>    BCS.w 'simp
0003088C <AmiBlitz3.ab3@21670>   MOVEM.w D1-D2,-(A7)
0003088E <AmiBlitz3.ab3@21672>   MOVEQ.l #$00,D2                                          ;!!!!!
00030890 <AmiBlitz3.ab3@21674>   LSL.w #8,D2
00030892 <AmiBlitz3.ab3@21675>   LSL.w #1,D2
00030894 <AmiBlitz3.ab3@21676>   OR.w D2,D1
00030898 <AmiBlitz3.ab3@21677>   OR.w lsldn(PC),D1
0003089C <AmiBlitz3.ab3@21678>    BSR.w writeword
000308A0 <AmiBlitz3.ab3@21679>   MOVEM.w (A7)+,D1-D2
000308A2 <AmiBlitz3.ab3@21680>   SUBQ.w #8,D2
000308A6 <AmiBlitz3.ab3@21681>  BRA.w 'shloop
000308A8 <AmiBlitz3.ab3@21684>   MOVE.w D1,-(A7)
000308AC <AmiBlitz3.ab3@21685>   OR.w #$48c0,d1
000308B0 <AmiBlitz3.ab3@21686>   BSR writeword
000308B2 <AmiBlitz3.ab3@21687>   MOVE.w (a7),d1
000308B4 <AmiBlitz3.ab3@21688>   TST.w D2
000308B8 <AmiBlitz3.ab3@21689>   BEQ.w 'simp2
000308BC <AmiBlitz3.ab3@21691>   ANDI.w #$7,D2                                            ;?????
000308BE <AmiBlitz3.ab3@21693>   LSL.w #8,D2
000308C0 <AmiBlitz3.ab3@21694>   LSL.w #1,D2
000308C2 <AmiBlitz3.ab3@21695>   OR.w D2,D1
000308C6 <AmiBlitz3.ab3@21696>   OR.w lsldn(PC),D1
000308CA <AmiBlitz3.ab3@21697>    BSR.w writeword
000308CC <AmiBlitz3.ab3@21703>   MOVE.w (A7)+,D1
000308D0 <AmiBlitz3.ab3@21704>   ANDI.w #$7,D1
000308D4 <AmiBlitz3.ab3@21705>   OR.w maxdo(PC),D1
000308D6 <AmiBlitz3.ab3@21706>   MOVE.w (A7)+,D2
000308D8 <AmiBlitz3.ab3@21707>   LSL.w #1,D2
000308DC <AmiBlitz3.ab3@21708>   ANDI.w #$E00,D2
000308DE <AmiBlitz3.ab3@21709>   OR.w D2,D1
000308E2 <AmiBlitz3.ab3@21710>  BRA.w writeword
000308E6 <AmiBlitz3.ab3@21713>   CMP.b #$1,D2
000308EA <AmiBlitz3.ab3@21714>    BEQ.w 'skippy
000308EC <AmiBlitz3.ab3@21718>   ADDQ.w #4,D1
000308F2 <AmiBlitz3.ab3@21720>   TST.b debugmode
000308F6 <AmiBlitz3.ab3@21721>    BEQ.w 'skippy
000308FA <AmiBlitz3.ab3@21723>    BSR.w writeword
000308FC <AmiBlitz3.ab3@21724>   SWAP D1
00030900 <AmiBlitz3.ab3@21725>   MOVE.w 'theretest(PC),D1
00030902 <AmiBlitz3.ab3@21726>   SWAP D1
00030906 <AmiBlitz3.ab3@21727>    BSR.w writelong
0003090A <AmiBlitz3.ab3@21728>   MOVE.l 'theretest+4(PC),D1
0003090E <AmiBlitz3.ab3@21729>    BSR.w writelong
00030912 <AmiBlitz3.ab3@21730>   MOVE.l 'theretest+8(PC),D1
00030916 <AmiBlitz3.ab3@21731>  BRA.w writelong
0003091A <AmiBlitz3.ab3@21734>  BRA.w writeword
0003091E <AmiBlitz3.ab3@21739>             Dc.b $4A,$AD,$00,$00                           ;TST.L  $0000(A5)
00030922 <AmiBlitz3.ab3@21740>             Dc.b $66,$00,$00,$06                           ;BNE.W  'ttskip
00030924 <AmiBlitz3.ab3@21741>             Dc.b $70,$01                                   ;MOVEQ  #$01,D0
00030926 <AmiBlitz3.ab3@21742>             Dc.b $4E,$40                                   ;TRAP   #00
00030928 <AmiBlitz3.ab3@21747>   LSR.w #8,D2
0003092C <AmiBlitz3.ab3@21748>   CMP.b #$16,D2
00030930 <AmiBlitz3.ab3@21749>    BNE.w 'nota6
00030934 <AmiBlitz3.ab3@21750>   MOVE.w $A(A1),D1
0003093A <AmiBlitz3.ab3@21751>   CMP.w lasta6,D1
0003093E <AmiBlitz3.ab3@21752>    BEQ.w 'sk
00030944 <AmiBlitz3.ab3@21753>   MOVE.w D1,lasta6
00030948 <AmiBlitz3.ab3@21756>    BSR.w makeregop
0003094C <AmiBlitz3.ab3@21757>   TST.w $1A(A1)
00030950 <AmiBlitz3.ab3@21758>    BPL.w 'long
00030954 <AmiBlitz3.ab3@21759>   CMP.w stackop(PC),D1
00030958 <AmiBlitz3.ab3@21760>    BNE.w 'notst
0003095E <AmiBlitz3.ab3@21761>   SUBQ.w #2,a2offset
00030962 <AmiBlitz3.ab3@21764>    ORI.w #$1000,D1
00030966 <AmiBlitz3.ab3@21767>    BSR.w writeword
0003096A <AmiBlitz3.ab3@21768>   MOVE.w $A(A1),D1
0003096E <AmiBlitz3.ab3@21769>    BSR.w writeword
00030970 <AmiBlitz3.ab3@21772> RTS
00030972 <AmiBlitz3.ab3@21776> lsldn:      Dc.b $E1,$88                 ;Dc.b $48 ;object long acsess    ;LSL.L   #8,D0
00030976 <AmiBlitz3.ab3@21777> maxchk:     Dc.b $65,$00,$00,$08                                          ;BCS.W   maxchk_ok
0003097C <AmiBlitz3.ab3@21778>             Dc.b $4E,$B9,$00,$00,$00,$00                                  ;JSR     $00000000
0003097E <AmiBlitz3.ab3@21781> 
00030980 <AmiBlitz3.ab3@21784>             Dc.b $00,$00
00030984 <AmiBlitz3.ab3@21785> stackop:    Dc.b $2F,$2D,$00,$00                                          ;MOVE.L  $0000(A5),-(A7)
00030988 <AmiBlitz3.ab3@21792>   CMP.b #$FF,D2
0003098C <AmiBlitz3.ab3@21793>    BNE.w 'notst
00030990 <AmiBlitz3.ab3@21794>   MOVE.w stackop(PC),D1
00030996 <AmiBlitz3.ab3@21795>   ADDQ.w #4,a2offset
00030998 <AmiBlitz3.ab3@21796>  RTS
0003099A <AmiBlitz3.ab3@21799>   MOVE.l A3,-(A7)
000309A0 <AmiBlitz3.ab3@21800>   LEA regtransd,A3
000309A4 <AmiBlitz3.ab3@21801>   BTST #$4,D2
000309A8 <AmiBlitz3.ab3@21802>    BEQ.w 'skip
000309AE <AmiBlitz3.ab3@21803>   LEA regtransa,A3
000309B2 <AmiBlitz3.ab3@21806>   ANDI.w #$7,D2
000309B4 <AmiBlitz3.ab3@21807>   MOVE.w D2,D1
000309B6 <AmiBlitz3.ab3@21808>   LSL.w #8,D1
000309B8 <AmiBlitz3.ab3@21809>   LSL.w #1,D1
000309BA <AmiBlitz3.ab3@21810>   OR.w (A3),D1
000309BC <AmiBlitz3.ab3@21811>   MOVEA.l (A7)+,A3
000309BE <AmiBlitz3.ab3@21812> RTS
000309C2 <AmiBlitz3.ab3@21818>   CMP.w #$3C,D0
000309C6 <AmiBlitz3.ab3@21819>    BCS.w 'no
000309CA <AmiBlitz3.ab3@21820>   CMP.w #$3E,D0
000309CE <AmiBlitz3.ab3@21821>    BHI.w 'no
000309D2 <AmiBlitz3.ab3@21822>   SUBI.w #$3C,D0
000309D4 <AmiBlitz3.ab3@21823>   CMP.w D0,D0
000309D6 <AmiBlitz3.ab3@21826> RTS
000309E0 <AmiBlitz3.ab3@21839>   MOVE.w oldqflag,instringon
000309E6 <AmiBlitz3.ab3@21840>   MOVEA.l lastsourcepos,A5
000309EC <AmiBlitz3.ab3@21849>   MOVE.w regnum,-(A7)
000309F2 <AmiBlitz3.ab3@21850>   CLR.w regnum
000309F8 <AmiBlitz3.ab3@21851>   MOVE.l destpointer,-(A7)
000309FE <AmiBlitz3.ab3@21852>   MOVE.l destbufferend,-(A7)
00030A04 <AmiBlitz3.ab3@21853>   MOVE.w dontwrite_nomemleft,-(A7)
00030A0A <AmiBlitz3.ab3@21854>   MOVE.w lasta6,-(A7)
00030A10 <AmiBlitz3.ab3@21855>   MOVE.w cfetchmode,-(A7)
00030A14 <AmiBlitz3.ab3@21856>    BNE.w 'something
00030A1E <AmiBlitz3.ab3@21857>   MOVE.l destbufferend,oldlibat
00030A24 <AmiBlitz3.ab3@21858>   MOVEA.l constpcat,A0
00030A2A <AmiBlitz3.ab3@21859>   MOVE.l A0,destpointer
00030A2E <AmiBlitz3.ab3@21860>  BRA.w 'some2
00030A34 <AmiBlitz3.ab3@21865>   MOVEA.l destpointer,A0     ;continue in cmode buff
00030A36 <AmiBlitz3.ab3@21868>   MOVE.l A0,-(A7)
00030A40 <AmiBlitz3.ab3@21869>   MOVE.l constlibat,destbufferend      ;for overflow
00030A46 <AmiBlitz3.ab3@21870>   CLR.w dontwrite_nomemleft
00030A4E <AmiBlitz3.ab3@21872>   MOVE.w #$FFFF,lasta6                 ; was -1
00030A56 <AmiBlitz3.ab3@21873>   MOVE.w #$FFFF,cfetchmode             ; was -1
00030A5A <AmiBlitz3.ab3@21877>     BSR.w arreval                      ;!
00030A5C <AmiBlitz3.ab3@21879>    MOVE.l (a7),a0
00030B98 <AmiBlitz3.ab3@21881>  !newcalc
00030B9C <AmiBlitz3.ab3@21882>    BEQ 'l10
00030B9E <AmiBlitz3.ab3@21883>    MOVE.l d0,d3
00030BA0 <AmiBlitz3.ab3@21884>    MOVEA.l (A7)+,A0
00030BA4 <AmiBlitz3.ab3@21885>  BRA 'bc1
00030BA8 <AmiBlitz3.ab3@21889>    MOVE.w #$2600,D1              ;move.l d0,d3
00030BAE <AmiBlitz3.ab3@21890>   OR.w regnum,D1
00030BB2 <AmiBlitz3.ab3@21891>    BSR.w writeword
00030BB6 <AmiBlitz3.ab3@21892>   MOVE.w #$4E75,D1               ;rts!
00030BBA <AmiBlitz3.ab3@21893>    BSR.w writeword
00030BC0 <AmiBlitz3.ab3@21895>   MOVE.w dontwrite_nomemleft,D1
00030BC4 <AmiBlitz3.ab3@21896>    BNE.w conmemerr
00030BC6 <AmiBlitz3.ab3@21898>   MOVEA.l (A7)+,A0
00030BC8 <AmiBlitz3.ab3@21900>   NOP
00030BCE <AmiBlitz3.ab3@21902>    JSR Aclearcache                                         ;simple expression
00030BD0 <AmiBlitz3.ab3@21904>    JSR (A0)                                                ;writeresult
00030BD6 <AmiBlitz3.ab3@21907>   MOVE.w (A7)+,cfetchmode
00030BDC <AmiBlitz3.ab3@21908>   MOVE.w (A7)+,lasta6
00030BE2 <AmiBlitz3.ab3@21909>   MOVE.w (A7)+,dontwrite_nomemleft
00030BE8 <AmiBlitz3.ab3@21910>   MOVE.l (A7)+,destbufferend
00030BEE <AmiBlitz3.ab3@21911>   MOVE.l (A7)+,destpointer
00030BF4 <AmiBlitz3.ab3@21912>   MOVE.w (A7)+,regnum
00030BFA <AmiBlitz3.ab3@21917> JMP reget
00030BFE <AmiBlitz3.ab3@21920> oldlibat:   Ds.l 1
00030C04 <AmiBlitz3.ab3@21924>   LEA incdir,A0
00030C08 <AmiBlitz3.ab3@21927>   CMP.w #$22,D0     ;'"'
00030C0C <AmiBlitz3.ab3@21928>    BEQ.w 'skip
00030C0E <AmiBlitz3.ab3@21929>   MOVE.b D0,(A0)+
00030C10 <AmiBlitz3.ab3@21930>   TST.w D0
00030C14 <AmiBlitz3.ab3@21931>    BEQ.w 'done
00030C18 <AmiBlitz3.ab3@21932>    BMI.w syntaxerr
00030C1E <AmiBlitz3.ab3@21935>   JSR get1bytemain                                         ;_long
00030C22 <AmiBlitz3.ab3@21936>  BRA.w 'loop
00030C24 <AmiBlitz3.ab3@21939> RTS
00030C2A <AmiBlitz3.ab3@21946>   LEA ptr_parameterstore,A1                                ;getparameter
00030C30 <AmiBlitz3.ab3@21947>   LEA incdir,A0
00030C32 <AmiBlitz3.ab3@21948>   MOVEQ.l #-$01,D2
00030C34 <AmiBlitz3.ab3@21951>     ADDQ.w #1,D2
00030C36 <AmiBlitz3.ab3@21952>     MOVE.b (A0)+,(A1)+
00030C3A <AmiBlitz3.ab3@21953>   BNE.w 'loop0
00030C3C <AmiBlitz3.ab3@21954>   SUBQ.w #1,A1
00030C46 <AmiBlitz3.ab3@21957>   MOVE.w oldqflag,instringon
00030C4C <AmiBlitz3.ab3@21958>   MOVEA.l lastsourcepos,A5
00030C52 <AmiBlitz3.ab3@21962>   JSR get1bytemain
00030C54 <AmiBlitz3.ab3@21963>   TST.w D0
00030C58 <AmiBlitz3.ab3@21964>    BMI.w syntaxerr
00030C5C <AmiBlitz3.ab3@21965>   CMP.b #$22,D0         ;'"'
00030C60 <AmiBlitz3.ab3@21966>    BEQ.w 'loop
00030C62 <AmiBlitz3.ab3@21967>   MOVE.b D0,(A1)+
00030C66 <AmiBlitz3.ab3@21968>    BEQ.w 'done
00030C68 <AmiBlitz3.ab3@21969>   ADDQ.w #1,D2
00030C6C <AmiBlitz3.ab3@21970>  BRA.w 'loop
00030C6E <AmiBlitz3.ab3@21973>   TST.w D2
00030C72 <AmiBlitz3.ab3@21974>    BEQ.w syntaxerr
00030C74 <AmiBlitz3.ab3@21975> RTS
00030C7A <AmiBlitz3.ab3@21982>   MOVEA.l constantbase,A2
00030C7E <AmiBlitz3.ab3@21984>   MOVEA.l $E(A2),A5
00030C84 <AmiBlitz3.ab3@21986>   MOVE.l a5,includesourceline
00030C8A <AmiBlitz3.ab3@21987>   LEA inctab,a0
00030C90 <AmiBlitz3.ab3@21988>   MOVE.w ininclude,d0
00030C94 <AmiBlitz3.ab3@21989>   MOVE.l $0(a0,d0*4),d0
00030C98 <AmiBlitz3.ab3@21991>   MOVEA.l $4(A2),A0
00030C9C <AmiBlitz3.ab3@21993>   LEA $0(A0,D0.l),A0   ;end of buffer!
00030C9E <AmiBlitz3.ab3@21994>   MOVEA.l A5,A1
00030CA0 <AmiBlitz3.ab3@21997>     CMPA.l A0,A1
00030CA4 <AmiBlitz3.ab3@21998>      BCC.w readpend
00030CA6 <AmiBlitz3.ab3@21999>   TST.b (A1)+
00030CAA <AmiBlitz3.ab3@22000>   BNE.w 'loop
00030CAE <AmiBlitz3.ab3@22001> BRA.w imakeend
00030CB2 <AmiBlitz3.ab3@22006>   MOVEA.l $4(A2),A1
00030CB4 <AmiBlitz3.ab3@22009>   CMPA.l A0,A5
00030CB8 <AmiBlitz3.ab3@22010>   BCC.w 'skip
00030CBA <AmiBlitz3.ab3@22011>   MOVE.b (A5)+,(A1)+
00030CBE <AmiBlitz3.ab3@22012>  BRA.w 'loop
00030CC0 <AmiBlitz3.ab3@22015>   MOVE.l A1,D0
00030CC4 <AmiBlitz3.ab3@22016>   SUB.l $4(A2),D0
00030CCA <AmiBlitz3.ab3@22018>   LEA inctab,a0
00030CCC <AmiBlitz3.ab3@22019>   MOVEQ #0,d1
00030CD2 <AmiBlitz3.ab3@22020>   MOVE.w ininclude,d1
00030CD6 <AmiBlitz3.ab3@22021>   MOVE.l d0,0(a0,d1*4)
00030CDC <AmiBlitz3.ab3@22024>   MOVEA.l _dosbase,A6
00030CE0 <AmiBlitz3.ab3@22025>   MOVE.l $8(A2),D1
00030CE2 <AmiBlitz3.ab3@22026>   MOVE.l A1,D2
00030CE8 <AmiBlitz3.ab3@22028>   MOVE.l D2,include_base
00030CEE <AmiBlitz3.ab3@22029>   MOVE.l #$10000000,d3                                     ;load whole file
00030CF0 <AmiBlitz3.ab3@22032>   SUB.l D0,D3
00030CF4 <AmiBlitz3.ab3@22034>    JSR _Read(A6)
00030CF6 <AmiBlitz3.ab3@22036>   TST.l D0
00030CFA <AmiBlitz3.ab3@22037>    BMI.w error_reading_file
00030CFE <AmiBlitz3.ab3@22039>    BEQ.w closeinc
00030D04 <AmiBlitz3.ab3@22040>    MOVE.l D0,include_length
00030D46 <AmiBlitz3.ab3@22041>    !ComData_GetL{comPtr_PreProcessor,include_preprocessor}
00030D70 <AmiBlitz3.ab3@22042>    !basic
00030D80 <AmiBlitz3.ab3@22043>    ilen.l  = Peek.l(?include_length)
00030D90 <AmiBlitz3.ab3@22044>    ibase.l = Peek.l(?include_base)
00030DA0 <AmiBlitz3.ab3@22045>    ido.l   = Peek.l(?include_process)
00030DB0 <AmiBlitz3.ab3@22046>    *tn.preprocessor = Peek.l(?include_preprocessor)
00030DBA <AmiBlitz3.ab3@22047>    If ido
00030DCC <AmiBlitz3.ab3@22048>      ioffset.l = SkipXtraHeader{ibase,ilen}
00030DF2 <AmiBlitz3.ab3@22049>      nilen.l = preproc_Tokenize{*tn,ibase+ioffset,ibase,ilen-ioffset}
00030E04 <AmiBlitz3.ab3@22050>      If nilen>0
00030E14 <AmiBlitz3.ab3@22054>        Poke.l ?include_length,nilen
00030E32 <AmiBlitz3.ab3@22057>    !asm
00030E3C <AmiBlitz3.ab3@22058>    MOVE.l #0,include_process
00030E42 <AmiBlitz3.ab3@22059>    MOVE.l include_length,D0
00030E48 <AmiBlitz3.ab3@22060>    LEA inctab,a0
00030E4A <AmiBlitz3.ab3@22061>    MOVEQ #0,d1
00030E50 <AmiBlitz3.ab3@22062>    MOVE.w ininclude,d1
00030E54 <AmiBlitz3.ab3@22063>    ADD.l d0,0(a0,d1*4)
00030E58 <AmiBlitz3.ab3@22067>   MOVEA.l $4(A2),A5
00030E5C <AmiBlitz3.ab3@22070>    MOVE.l 0(a0,d1*4),d0
00030E60 <AmiBlitz3.ab3@22072>   CLR.b $0(A5,D0.l)
00030E62 <AmiBlitz3.ab3@22075>   MOVEA.l A5,A0
00030E64 <AmiBlitz3.ab3@22078>     TST.b (A0)+
00030E68 <AmiBlitz3.ab3@22079>   BNE.w 'loop2
00030E6C <AmiBlitz3.ab3@22080>   MOVE.l A0,$E(A2)
00030E6E <AmiBlitz3.ab3@22081> RTS
00030E72 <AmiBlitz3.ab3@22084> include_length:        Dc.l 0                              ; for tokenizer!
00030E76 <AmiBlitz3.ab3@22085> include_base:          Dc.l 0
00030E7A <AmiBlitz3.ab3@22086> include_process:       Dc.l 0
00030E7E <AmiBlitz3.ab3@22087> include_preprocessor:  Dc.l 0
00030E82 <AmiBlitz3.ab3@22091>   MOVE.l $8(A2),D1
00030E88 <AmiBlitz3.ab3@22092>   MOVEA.l _dosbase,A6
00030E8C <AmiBlitz3.ab3@22093>   JSR _Close(a6)
00030E92 <AmiBlitz3.ab3@22094>   MOVEA.l _execbase,A6
00030E96 <AmiBlitz3.ab3@22095>   MOVEA.l $4(A2),A1
00030E9C <AmiBlitz3.ab3@22096>   MOVE.l #$400*8,D0         ; #inclen                               ;exit include
00030EA0 <AmiBlitz3.ab3@22101>   JSR _FreeVec(a6)
00030EA6 <AmiBlitz3.ab3@22104>   MOVE.l (A2),constantbase
00030EA8 <AmiBlitz3.ab3@22105>   MOVEA.l A2,A1
00030EAA <AmiBlitz3.ab3@22106>   MOVEQ.l #$00,D0
00030EAE <AmiBlitz3.ab3@22107>   MOVE.b $12(A2),D0
00030EB4 <AmiBlitz3.ab3@22108>   MOVEA.l _execbase,A6
00030EBA <AmiBlitz3.ab3@22111>   MOVE.l mempool2,a0
00030EBE <AmiBlitz3.ab3@22112>   JSR _FreePooled(A6)
00030EC4 <AmiBlitz3.ab3@22113>   JSR zero_includename
00030ECA <AmiBlitz3.ab3@22115>   SUBQ.w #1,ininclude
00030ECE <AmiBlitz3.ab3@22116>   BNE.w readinc
00030ED4 <AmiBlitz3.ab3@22120>   LEA _include,a0
00030ED8 <AmiBlitz3.ab3@22121>   MOVEM.l a0-a6/d0-d7,-(a7)
00030EDE <AmiBlitz3.ab3@22122>   LEA ptr_parameterstore,a1
00030EE0 <AmiBlitz3.ab3@22125>     MOVE.b (a0)+,(a1)+
00030EE4 <AmiBlitz3.ab3@22126>   BNE 'l1b
00030EE6 <AmiBlitz3.ab3@22127>   MOVEQ #9,d2
00030EEC <AmiBlitz3.ab3@22128>   JSR findlabel2
00030EF0 <AmiBlitz3.ab3@22129>   BNE 'd
00030EF4 <AmiBlitz3.ab3@22130>   CLR.l 8(a2)
00030EF8 <AmiBlitz3.ab3@22133>   MOVEM.l (a7)+,a0-a6/d0-d7
00030EFA <AmiBlitz3.ab3@22135> RTS
00030F00 <AmiBlitz3.ab3@22140>   MOVE.l unusedfunc,d0
00030F04 <AmiBlitz3.ab3@22141>   BEQ 'noclear
00030F08 <AmiBlitz3.ab3@22142>   MOVEM.l d0-d2/a0-a1/a6,-(a7)
00030F0A <AmiBlitz3.ab3@22145>     MOVE.l d0,a1
00030F0E <AmiBlitz3.ab3@22146>     MOVE.l 4(a1),d0
00030F10 <AmiBlitz3.ab3@22147>     MOVE.l (a1),d2
00030F16 <AmiBlitz3.ab3@22148>     MOVE.l _execbase,a6
00030F1A <AmiBlitz3.ab3@22149>     JSR _FreeMem(a6)
00030F1C <AmiBlitz3.ab3@22150>     MOVE.l d2,d0
00030F20 <AmiBlitz3.ab3@22151>   BNE 'f1
00030F26 <AmiBlitz3.ab3@22152>   CLR.l unusedfunc
00030F2A <AmiBlitz3.ab3@22153>   MOVEM.l (a7)+,a0-a1/a6/d0-d2
00030F2C <AmiBlitz3.ab3@22156> RTS
00030F32 <AmiBlitz3.ab3@22161>   MOVEA.l xinclude_base,A2
00030F38 <AmiBlitz3.ab3@22162>   CLR.l xinclude_base
00030F3C <AmiBlitz3.ab3@22165>     CMPA.w #$0,A2
00030F40 <AmiBlitz3.ab3@22166>      BEQ.w 'done
00030F42 <AmiBlitz3.ab3@22167>     MOVEQ.l #$00,D0
00030F46 <AmiBlitz3.ab3@22168>     MOVE.b 4+8(A2),D0           ; was 4 org
00030F48 <AmiBlitz3.ab3@22169>     MOVEA.l A2,A1
00030F4A <AmiBlitz3.ab3@22170>     MOVEA.l (A2),A2
00030F50 <AmiBlitz3.ab3@22171>     MOVEA.l _execbase,A6
00030F56 <AmiBlitz3.ab3@22174>     MOVE.l mempool2,a0
00030F5A <AmiBlitz3.ab3@22175>     JSR _FreePooled(A6)
00030F5E <AmiBlitz3.ab3@22177>  BRA.w 'loop
00030F60 <AmiBlitz3.ab3@22180> RTS
00030F66 <AmiBlitz3.ab3@22184>   MOVEA.l constantbase,A2
00030F6C <AmiBlitz3.ab3@22185>   CLR.l constantbase
00030F70 <AmiBlitz3.ab3@22188>     CMPA.w #$0,A2
00030F74 <AmiBlitz3.ab3@22189>      BEQ.w 'done
00030F78 <AmiBlitz3.ab3@22190>     MOVE.l $8(A2),D1
00030F7C <AmiBlitz3.ab3@22191>      BEQ.w 'noclose
00030F82 <AmiBlitz3.ab3@22192>     MOVEA.l _dosbase,A6
00030F86 <AmiBlitz3.ab3@22193>      JSR _Close(A6)
00030F8A <AmiBlitz3.ab3@22196>     MOVE.l $4(A2),D0
00030F8E <AmiBlitz3.ab3@22197>      BEQ.w 'skip
00030F90 <AmiBlitz3.ab3@22198>     MOVEA.l D0,A1
00030F96 <AmiBlitz3.ab3@22199>     MOVE.l #$400*8,D0          ; was #inclen
00030F9C <AmiBlitz3.ab3@22200>     MOVEA.l _execbase,A6
00030FA2 <AmiBlitz3.ab3@22203>     MOVE.l mempool,a0
00030FA6 <AmiBlitz3.ab3@22204>     JSR _FreeVec(a6)
00030FA8 <AmiBlitz3.ab3@22208>     MOVEQ.l #$00,D0
00030FAC <AmiBlitz3.ab3@22209>     MOVE.b $12(A2),D0
00030FAE <AmiBlitz3.ab3@22210>     MOVEA.l A2,A1
00030FB0 <AmiBlitz3.ab3@22211>     MOVEA.l (A2),A2
00030FB6 <AmiBlitz3.ab3@22212>     MOVEA.l _execbase,A6
00030FBC <AmiBlitz3.ab3@22215>     MOVE.l mempool2,a0
00030FC0 <AmiBlitz3.ab3@22216>     JSR _FreePooled(A6)
00030FC4 <AmiBlitz3.ab3@22218>  BRA.w 'loop
00030FC6 <AmiBlitz3.ab3@22221> RTS
00030FC8 <AmiBlitz3.ab3@22228>   SWAP D0
00030FCC <AmiBlitz3.ab3@22229>    BSR.w pokedata2
00030FCE <AmiBlitz3.ab3@22230>   SWAP D0
00030FD4 <AmiBlitz3.ab3@22235>   MOVEA.l data2,A4
00030FDA <AmiBlitz3.ab3@22236>   CMPA.l allat,A4
00030FDE <AmiBlitz3.ab3@22237>    BCC.w 'over
00030FE0 <AmiBlitz3.ab3@22238>   MOVE.w D0,(A4)+
00030FE6 <AmiBlitz3.ab3@22239>   MOVE.l A4,data2
00030FE8 <AmiBlitz3.ab3@22240>  RTS
00030FF0 <AmiBlitz3.ab3@22243>   MOVE.w #$FFFF,dontwrite_nomemleft        ; was -1
00030FF6 <AmiBlitz3.ab3@22244>   ADDQ.l #2,data2
00030FF8 <AmiBlitz3.ab3@22245> RTS
00030FFE <AmiBlitz3.ab3@22249>   MOVEA.l data2,A4
00031004 <AmiBlitz3.ab3@22250>   CMPA.l allat,A4
00031008 <AmiBlitz3.ab3@22251>    BCC.w 'over
0003100A <AmiBlitz3.ab3@22252>   MOVE.b D0,(A4)+
00031010 <AmiBlitz3.ab3@22253>   MOVE.l A4,data2
00031012 <AmiBlitz3.ab3@22254>  RTS
0003101A <AmiBlitz3.ab3@22257>   MOVE.w #$FFFF,dontwrite_nomemleft        ; was -1
00031020 <AmiBlitz3.ab3@22258>   ADDQ.l #1,data2
00031022 <AmiBlitz3.ab3@22259> RTS
00031026 <AmiBlitz3.ab3@22265>   CMP.w #$22,D0          ;'"'
0003102A <AmiBlitz3.ab3@22266>    BNE.w syntaxerr
00031030 <AmiBlitz3.ab3@22269>   JSR get1bytemain
00031034 <AmiBlitz3.ab3@22270>   CMP.b #$22,D0
00031038 <AmiBlitz3.ab3@22271>    BEQ.w 'done
0003103A <AmiBlitz3.ab3@22272>   TST.w D0
0003103E <AmiBlitz3.ab3@22273>    BEQ.w syntaxerr
00031040 <AmiBlitz3.ab3@22274>   MOVE.b D0,(A0)+
00031044 <AmiBlitz3.ab3@22275>  BRA.w 'getsp2
00031046 <AmiBlitz3.ab3@22278>   CLR.b (A0)
00031048 <AmiBlitz3.ab3@22279> RTS
0003104A <AmiBlitz3.ab3@22283>   TST.l D3
0003104C <AmiBlitz3.ab3@22284> RTS
00031052 <AmiBlitz3.ab3@22290>   LEA ptr_parameterstore,A0
00031058 <AmiBlitz3.ab3@22291>   LEA namebuff2,A1
0003105A <AmiBlitz3.ab3@22294>     MOVE.b (A0)+,D0
0003105E <AmiBlitz3.ab3@22295>     BEQ.w 'short
00031060 <AmiBlitz3.ab3@22296>   CMP.b (A1)+,D0
00031064 <AmiBlitz3.ab3@22297>   BEQ.w 'loop
00031066 <AmiBlitz3.ab3@22298>  RTS
00031068 <AmiBlitz3.ab3@22301>   TST.b (A1)
0003106C <AmiBlitz3.ab3@22302>   BNE.w 'lt
0003106E <AmiBlitz3.ab3@22303>  RTS
00031072 <AmiBlitz3.ab3@22306>   CMP.w #$1,D0
00031074 <AmiBlitz3.ab3@22307> RTS
00031078 <AmiBlitz3.ab3@22314>   CMP.w #$2E,D0                ;"."                            ;dodeftype
0003107C <AmiBlitz3.ab3@22315>    BNE.w syntaxerr
00031080 <AmiBlitz3.ab3@22316>   BSR.w getparameter2
00031086 <AmiBlitz3.ab3@22317>   LEA newtypebase,A2
0003108A <AmiBlitz3.ab3@22318>   BSR.w findtype
0003108E <AmiBlitz3.ab3@22319>    BNE.w notypeerr
00031094 <AmiBlitz3.ab3@22321>   TST.b declare
00031098 <AmiBlitz3.ab3@22322>    BNE 'l1
0003109E <AmiBlitz3.ab3@22323>   TST.b declare2
000310A2 <AmiBlitz3.ab3@22324>    BEQ 'l2
000310AA <AmiBlitz3.ab3@22327>   MOVE.b #2,nowdeclare
000310B0 <AmiBlitz3.ab3@22331>   JSR reget
000310B4 <AmiBlitz3.ab3@22332>    BNE.w 'more
000310BA <AmiBlitz3.ab3@22333>   MOVE.l A2,defaulttype
000310BC <AmiBlitz3.ab3@22334>  RTS
000310C2 <AmiBlitz3.ab3@22340>   MOVE.l defaulttype,-(A7)
000310C8 <AmiBlitz3.ab3@22341>   MOVE.l A2,defaulttype
000310CC <AmiBlitz3.ab3@22344>   BSR.w getparameter
000310D0 <AmiBlitz3.ab3@22345>    BSR.w fetchvars
000310D4 <AmiBlitz3.ab3@22346>   CMP.w #$2C,D0            ;","
000310D8 <AmiBlitz3.ab3@22347>    BNE.w 'done
000310DE <AmiBlitz3.ab3@22348>    JSR get1bytemain                                        ; was BSR.w
000310E2 <AmiBlitz3.ab3@22349>  BRA.w 'loopz
000310E8 <AmiBlitz3.ab3@22352>   MOVE.l (A7)+,defaulttype
000310EA <AmiBlitz3.ab3@22353> RTS
000310EE <AmiBlitz3.ab3@22357>   LEA $4(A5),A2                                            ;fehler function
000310F0 <AmiBlitz3.ab3@22360>   MOVE.l A2,D0
000310F4 <AmiBlitz3.ab3@22365>   BSR.w getparameter
000310F8 <AmiBlitz3.ab3@22366>   BSR.w fetchvars
000310FC <AmiBlitz3.ab3@22367>   BSR.w calcvar
00031100 <AmiBlitz3.ab3@22369>   CMP.b #$7,D2
00031104 <AmiBlitz3.ab3@22370>    BNE.w mismatcherr
00031108 <AmiBlitz3.ab3@22371>   MOVE.w varmode(PC),-(A7)
0003110C <AmiBlitz3.ab3@22372>   CMP.w #$3D,D0            ;"="
00031110 <AmiBlitz3.ab3@22373>    BNE.w syntaxerr
00031114 <AmiBlitz3.ab3@22374>   BTST #$F,D2
00031118 <AmiBlitz3.ab3@22375>    BNE.w 'already
0003111C <AmiBlitz3.ab3@22376>   MOVE.w maxprep1(PC),D1
00031120 <AmiBlitz3.ab3@22377>   BSR.w pokewda5s
00031122 <AmiBlitz3.ab3@22378>   MOVE.w D3,D1
00031126 <AmiBlitz3.ab3@22379>   BSR.w writeword
0003112A <AmiBlitz3.ab3@22382>   MOVE.w maxprep2(PC),D1
0003112E <AmiBlitz3.ab3@22383>   BSR.w writeword
00031134 <AmiBlitz3.ab3@22384>   ADDQ.w #1,regnum
00031136 <AmiBlitz3.ab3@22385>   MOVEQ.l #$03,D2
0003113A <AmiBlitz3.ab3@22386>   BSR.w eval
00031140 <AmiBlitz3.ab3@22387>   MOVE.l #$D000,D1              ; was #maxlen
00031146 <AmiBlitz3.ab3@22389>   MOVE.l d1,lastinstruction
00031148 <AmiBlitz3.ab3@22391>   TST.w (A7)+
0003114C <AmiBlitz3.ab3@22392>    BEQ.w Atokejsr
0003114E <AmiBlitz3.ab3@22393>   ADDQ.w #1,D1
00031152 <AmiBlitz3.ab3@22394> BRA.w Atokejsr
00031154 <AmiBlitz3.ab3@22398>   MOVE.w D0,D1
00031158 <AmiBlitz3.ab3@22399>    BPL.w syntaxerr
0003115C <AmiBlitz3.ab3@22400>   BCLR #$F,D1
00031162 <AmiBlitz3.ab3@22401>    JSR searchinstr
00031166 <AmiBlitz3.ab3@22402>   MOVE.l $12(A2),D0
0003116A <AmiBlitz3.ab3@22403>   TST.w -$2(A2,D0.L)
0003116E <AmiBlitz3.ab3@22404>    BEQ.w freeerr
00031170 <AmiBlitz3.ab3@22405>   MOVEQ.l #$02,D2
00031172 <AmiBlitz3.ab3@22406>   MOVE.l A2,-(A7)
00031176 <AmiBlitz3.ab3@22408>    BSR.w eval
00031178 <AmiBlitz3.ab3@22410>   MOVEA.l (A7)+,A2
0003117E <AmiBlitz3.ab3@22411>   MOVE.l A2,mymaxlib
00031182 <AmiBlitz3.ab3@22413>   ADDA.l $12(A2),A2
00031188 <AmiBlitz3.ab3@22414>   TST.b debugmode
0003118C <AmiBlitz3.ab3@22415>    BEQ.w 'pen
00031192 <AmiBlitz3.ab3@22419>   MOVE.w regnum,D1
00031194 <AmiBlitz3.ab3@22420>   LSL.w #8,D1
00031196 <AmiBlitz3.ab3@22421>   LSL.w #1,D1
0003119A <AmiBlitz3.ab3@22422>   ORI.w #$B07C,D1       ;cmp #x,dn
0003119E <AmiBlitz3.ab3@22423>    BSR.w writeword
000311A2 <AmiBlitz3.ab3@22424>   MOVE.w -$4(A2),D1
000311A6 <AmiBlitz3.ab3@22425>    BSR.w writeword
000311AC <AmiBlitz3.ab3@22426>   MOVE.l maxchk,D1      ;bcs
000311B0 <AmiBlitz3.ab3@22427>    BSR.w writelong
000311B2 <AmiBlitz3.ab3@22428>   MOVE.l A2,-(A7)
000311B6 <AmiBlitz3.ab3@22429>   MOVE.w #$C30A,D1      ; was #maxerr,
000311BA <AmiBlitz3.ab3@22430>    BSR.w Atokejsr
000311BC <AmiBlitz3.ab3@22431>   MOVEA.l (A7)+,A2
000311C0 <AmiBlitz3.ab3@22434>   MOVE.w -$2(A2),D2     ;# shifts
000311C6 <AmiBlitz3.ab3@22437>   MOVE.w regnum,D1
000311CC <AmiBlitz3.ab3@22438>   OR.w lslimm,D1
000311D0 <AmiBlitz3.ab3@22439>   CMP.w #$8,D2
000311D4 <AmiBlitz3.ab3@22440>    BCS.w 'under
000311D8 <AmiBlitz3.ab3@22441>    BSR.w writeword
000311DA <AmiBlitz3.ab3@22442>   SUBQ.w #8,D2
000311DE <AmiBlitz3.ab3@22443>    BNE.w 'loop
000311E2 <AmiBlitz3.ab3@22444>  BRA.w 'shdone
000311E4 <AmiBlitz3.ab3@22447>   MOVE.w D2,D0
000311E6 <AmiBlitz3.ab3@22448>   LSL.w #8,D0
000311E8 <AmiBlitz3.ab3@22449>   LSL.w #1,D0
000311EA <AmiBlitz3.ab3@22450>   OR.w D0,D1
000311EE <AmiBlitz3.ab3@22451>   BSR.w writeword
000311F0 <AmiBlitz3.ab3@22454> RTS
000311F4 <AmiBlitz3.ab3@22459>   Dc.b $26,$6D,$00,$00                                     ;MOVEA.L $0000(A5),A3
000311F6 <AmiBlitz3.ab3@22460>   Dc.b $D6,$C0                                             ;ADDA.W  D0,A3
000311FA <AmiBlitz3.ab3@22464> mymaxlib:  Ds.l 1
000311FE <AmiBlitz3.ab3@22468>   BSR.w getmaxel
00031202 <AmiBlitz3.ab3@22470>   LEA free(PC),A0
00031206 <AmiBlitz3.ab3@22471>   LEA freef(PC),A1
0003120C <AmiBlitz3.ab3@22472>   MOVE.w -$6(A2),$2(A0)
00031210 <AmiBlitz3.ab3@22473>   BSR.w pokecode
00031214 <AmiBlitz3.ab3@22475>   MOVE.l -$A(A2),D1
00031218 <AmiBlitz3.ab3@22478>   BEQ.w nosuperr
0003121C <AmiBlitz3.ab3@22479>   MOVEA.l mymaxlib(PC),A2
00031220 <AmiBlitz3.ab3@22480> BRA.w Amakelibsub
00031224 <AmiBlitz3.ab3@22484>   BSR.w getmaxel
0003122A <AmiBlitz3.ab3@22486>   LEA use,A0
00031230 <AmiBlitz3.ab3@22487>   LEA usef,A1
00031236 <AmiBlitz3.ab3@22488>   MOVE.w -$6(A2),$2(A0)
0003123C <AmiBlitz3.ab3@22489>   MOVE.w -$6(A2),-$2(A1)
00031240 <AmiBlitz3.ab3@22490>   ADDQ.w #4,-$2(A1)
00031244 <AmiBlitz3.ab3@22491>   BSR.w pokecode
00031248 <AmiBlitz3.ab3@22493>   MOVE.l -$E(A2),D1
0003124C <AmiBlitz3.ab3@22495> BRA.w maxjsr
00031252 <AmiBlitz3.ab3@22500>   JSR get1bytemain
00031258 <AmiBlitz3.ab3@22503>   MOVE.l firstiff,D0
0003125C <AmiBlitz3.ab3@22504>    BEQ.w noiferr
0003125E <AmiBlitz3.ab3@22505>   MOVEA.l D0,A0
00031264 <AmiBlitz3.ab3@22506>   CMPI.b #$1,$D(A0)
00031268 <AmiBlitz3.ab3@22507>    BEQ.w illelseerr
0003126C <AmiBlitz3.ab3@22508>   MOVE.w #$6000,D1
00031272 <AmiBlitz3.ab3@22511>     TST.b fast
00031276 <AmiBlitz3.ab3@22512>     BEQ 'l1
0003127C <AmiBlitz3.ab3@22513>     OR.l #$ff,d1
00031280 <AmiBlitz3.ab3@22514>     BSR writeword
00031282 <AmiBlitz3.ab3@22519>   SWAP D1
00031286 <AmiBlitz3.ab3@22520>   BSR.w writelong
00031288 <AmiBlitz3.ab3@22521>   MOVEQ.l #$00,D1
0003128C <AmiBlitz3.ab3@22522>   BSR.w doendif2
00031294 <AmiBlitz3.ab3@22523>   MOVE.l destpointer,$8(A0)
00031298 <AmiBlitz3.ab3@22524> BRA.w do_then
0003129E <AmiBlitz3.ab3@22528>   LEA ptr_parameterstore,A0
000312A0 <AmiBlitz3.ab3@22529>   MOVE.l A0,-(A7)
000312A4 <AmiBlitz3.ab3@22530>   BSR.w getsp
000312A8 <AmiBlitz3.ab3@22531> BRA.w handle_compileerror
000312AC <AmiBlitz3.ab3@22535>   BSR.w evalconst
000312AE <AmiBlitz3.ab3@22536>   MOVEQ.l #$05,D1       ;beq
000312B8 <AmiBlitz3.ab3@22539>   MOVE.w oldqflag,instringon
000312BE <AmiBlitz3.ab3@22540>   MOVEA.l lastsourcepos,A5
000312C4 <AmiBlitz3.ab3@22542>   LEA numcom,A0
000312C8 <AmiBlitz3.ab3@22543> BRA.w compare
000312CE <AmiBlitz3.ab3@22547>   LEA ptr_parameterstore,A0
000312D2 <AmiBlitz3.ab3@22548>   BSR.w getsp
000312D8 <AmiBlitz3.ab3@22549>   JSR get1bytemain
000312DC <AmiBlitz3.ab3@22550>   BSR.w collif
000312E2 <AmiBlitz3.ab3@22551>   LEA namebuff2,A0
000312E6 <AmiBlitz3.ab3@22552>   BSR.w getsp
000312EC <AmiBlitz3.ab3@22553>   LEA strcom,A0
000312EE <AmiBlitz3.ab3@22561>   LSL.w #2,D1
000312F4 <AmiBlitz3.ab3@22562>   LEA CIF_branches,A1
000312F8 <AmiBlitz3.ab3@22563>   MOVE.l $0(A1,D1.W),-(A7)
000312FA <AmiBlitz3.ab3@22564>   MOVEQ.l #-$01,D1           ;comp flag
000312FC <AmiBlitz3.ab3@22566>   JSR (A0)
000312FE <AmiBlitz3.ab3@22568>   MOVEA.l (A7)+,A1
00031300 <AmiBlitz3.ab3@22569> JMP (A1)
00031304 <AmiBlitz3.ab3@22573>   BEQ.w cifdo
00031308 <AmiBlitz3.ab3@22574> BRA.w cifdont
0003130C <AmiBlitz3.ab3@22577>   BNE.w cifdo
00031310 <AmiBlitz3.ab3@22578> BRA.w cifdont
00031314 <AmiBlitz3.ab3@22581>   BLT.w cifdo
00031318 <AmiBlitz3.ab3@22582> BRA.w cifdont
0003131C <AmiBlitz3.ab3@22585>   BLE.w cifdo
00031320 <AmiBlitz3.ab3@22586> BRA.w cifdont
00031324 <AmiBlitz3.ab3@22589>   BGT.w cifdo
00031328 <AmiBlitz3.ab3@22590> BRA.w cifdont
0003132C <AmiBlitz3.ab3@22593>   BGE.w cifdo
0003132E <AmiBlitz3.ab3@22596>   MOVEQ.l #$00,D1
00031334 <AmiBlitz3.ab3@22599>   MOVEA.l concomsp,A0
0003133A <AmiBlitz3.ab3@22600>   MOVE.w skipcode,(A0)+
00031340 <AmiBlitz3.ab3@22601>   MOVE.l A0,concomsp
00031346 <AmiBlitz3.ab3@22602>   MOVE.w D1,skipcode
0003134C <AmiBlitz3.ab3@22603>   JSR get1bytemain
00031350 <AmiBlitz3.ab3@22604>    BNE.w syntaxerr
00031356 <AmiBlitz3.ab3@22605> JMP bakup
0003135E <AmiBlitz3.ab3@22609> rescode:   Dc.b $2B,$7c,$00,$00,$00,$00 :   Ds.w 1         ;MOVE.L  #$00000000,$0000(A5)
00031362 <AmiBlitz3.ab3@22610> rescode2:  Dc.b $2B,$40                 :   Ds.w 1         ;MOVE.L  D0,$0000(A5)
00031366 <AmiBlitz3.ab3@22617>   MOVE.w #$FC17,D1
0003136C <AmiBlitz3.ab3@22618>   JSR uselib
00031372 <AmiBlitz3.ab3@22620>   JSR reget
00031376 <AmiBlitz3.ab3@22621>    BEQ.w 'resbeg
0003137A <AmiBlitz3.ab3@22622>   BSR.w makealab2                                          ;get label name!
0003137E <AmiBlitz3.ab3@22623>   MOVE.w rescode(PC),D1
00031382 <AmiBlitz3.ab3@22624>   BSR.w writeword
00031388 <AmiBlitz3.ab3@22625>   JSR addoff                                               ;add offset
0003138C <AmiBlitz3.ab3@22626>   MOVE.l $C(A2),D1
00031390 <AmiBlitz3.ab3@22627>   BSR.w writelong
00031394 <AmiBlitz3.ab3@22628>   MOVE.w rescode+6(PC),D1
00031398 <AmiBlitz3.ab3@22629>   BSR.w writeword
0003139C <AmiBlitz3.ab3@22630>   MOVE.l $4(A2),D1                                         ;is it outstanding?
000313A0 <AmiBlitz3.ab3@22631>   BEQ.w 'no
000313A2 <AmiBlitz3.ab3@22633>   MOVEA.l D1,A1
000313A6 <AmiBlitz3.ab3@22634>   ADDQ.l #1,$4(A1)                                         ;make odd - flag for data reference.
000313A8 <AmiBlitz3.ab3@22635>  RTS
000313AA <AmiBlitz3.ab3@22640>  RTS
000313AE <AmiBlitz3.ab3@22643>   MOVE.w #$CD00,D1
000313B4 <AmiBlitz3.ab3@22644>   JSR Atokejsr
000313B8 <AmiBlitz3.ab3@22645>   MOVE.l rescode2(PC),D1
000313BE <AmiBlitz3.ab3@22646> JMP writelong
000313C2 <AmiBlitz3.ab3@22650>   MOVE.w #$FC17,D1
000313C8 <AmiBlitz3.ab3@22651>   JSR uselib
000313CE <AmiBlitz3.ab3@22654>   MOVE.l dataget,D1
000313D2 <AmiBlitz3.ab3@22655>   BSR.w writelong
000313D6 <AmiBlitz3.ab3@22656>   BSR.w getparameter
000313DA <AmiBlitz3.ab3@22657>   BSR.w fetchvars
000313DE <AmiBlitz3.ab3@22658>   BSR.w calcvar
000313E2 <AmiBlitz3.ab3@22659>   BTST #$E,D2
000313E6 <AmiBlitz3.ab3@22660>    BEQ.w 'notap
000313EA <AmiBlitz3.ab3@22662>   MOVE.b #$6,D2      ;pointer becomes an address!
000313EC <AmiBlitz3.ab3@22665>   TST.b D2
000313F0 <AmiBlitz3.ab3@22666>    BEQ.w noleterr   ;read in a whole struct....later!
000313F6 <AmiBlitz3.ab3@22667>   TST.b debugmode
000313FA <AmiBlitz3.ab3@22668>    BEQ.w 'norerr
000313FE <AmiBlitz3.ab3@22670>   MOVE.w #$7000,D1
00031400 <AmiBlitz3.ab3@22671>   MOVE.b D2,D1
00031404 <AmiBlitz3.ab3@22672>   ANDI.b #$F,D1
00031408 <AmiBlitz3.ab3@22673>   BSR.w writeword
0003140C <AmiBlitz3.ab3@22674>   MOVE.w #$C310,D1     ; was  #datachk
0003140E <AmiBlitz3.ab3@22675>   MOVE.w D2,-(A7)
00031412 <AmiBlitz3.ab3@22676>   BSR.w Atokejsr
00031414 <AmiBlitz3.ab3@22677>   MOVE.w (A7)+,D2
00031418 <AmiBlitz3.ab3@22680>   CMP.b #$7,D2
0003141C <AmiBlitz3.ab3@22681>    BEQ.w 'string
00031420 <AmiBlitz3.ab3@22682>   CMP.b #$1,D2
00031424 <AmiBlitz3.ab3@22683>    BNE.w 'notbyte
0003142A <AmiBlitz3.ab3@22685>   LEA dataletb2,A0
00031430 <AmiBlitz3.ab3@22686>   LEA dataletb2f,A1
00031434 <AmiBlitz3.ab3@22687>   BTST #$F,D2
00031438 <AmiBlitz3.ab3@22688>    BEQ.w 'bimm
0003143C <AmiBlitz3.ab3@22689>   BSR.w pokecode
00031440 <AmiBlitz3.ab3@22690>  BRA.w 'next
00031446 <AmiBlitz3.ab3@22693>   LEA dataletb,A0
0003144C <AmiBlitz3.ab3@22694>   LEA dataletbf,A1
00031452 <AmiBlitz3.ab3@22696>   TST.w varmode
00031456 <AmiBlitz3.ab3@22697>    BEQ.w 'byteglobal
0003145C <AmiBlitz3.ab3@22698>   LEA dataletbl,A0
00031462 <AmiBlitz3.ab3@22699>   LEA dataletblf,A1
00031466 <AmiBlitz3.ab3@22702>   MOVE.w D3,$4(A0)
0003146A <AmiBlitz3.ab3@22703>   BSR.w pokecode
0003146E <AmiBlitz3.ab3@22704>  BRA.w 'next
00031474 <AmiBlitz3.ab3@22707>   LEA dataletw,A0
00031478 <AmiBlitz3.ab3@22708>   CMP.b #$3,D2
0003147C <AmiBlitz3.ab3@22709>    BCS.w 'word
00031482 <AmiBlitz3.ab3@22710>   LEA dataletl,A0
00031486 <AmiBlitz3.ab3@22713>   BTST #$F,D2
0003148A <AmiBlitz3.ab3@22714>    BEQ.w 'imm
0003148E <AmiBlitz3.ab3@22715>   MOVE.w $4(A0),D1
00031492 <AmiBlitz3.ab3@22716>    BSR.w writeword
00031496 <AmiBlitz3.ab3@22717>  BRA.w 'next
0003149C <AmiBlitz3.ab3@22720>   TST.w varmode
000314A0 <AmiBlitz3.ab3@22721>    BEQ.w 'wlglobal
000314A2 <AmiBlitz3.ab3@22722>   ADDQ.w #6,A0
000314A6 <AmiBlitz3.ab3@22725>   MOVE.w D3,$2(A0)
000314A8 <AmiBlitz3.ab3@22726>   MOVE.l (A0),D1
000314AC <AmiBlitz3.ab3@22727>   BSR.w writelong
000314B2 <AmiBlitz3.ab3@22730>   MOVE.l dataput,D1
000314B6 <AmiBlitz3.ab3@22731>    BSR.w writelong
000314BA <AmiBlitz3.ab3@22732>   CMP.w #$2C,D0        ;','
000314BE <AmiBlitz3.ab3@22733>    BEQ.w 'more
000314C0 <AmiBlitz3.ab3@22734>  RTS
000314C6 <AmiBlitz3.ab3@22737>   JSR get1bytemain
000314CA <AmiBlitz3.ab3@22738>  BRA.w 'loop
000314D0 <AmiBlitz3.ab3@22741>   MOVE.w stlenget,D1
000314D4 <AmiBlitz3.ab3@22742>    BSR.w writeword     ;move.l (a3)+,-(a7)
000314D8 <AmiBlitz3.ab3@22743>   BTST #$F,D2
000314DC <AmiBlitz3.ab3@22744>    BNE.w 'ok
000314E2 <AmiBlitz3.ab3@22746>   TST.w varmode
000314E6 <AmiBlitz3.ab3@22747>    BEQ.w 'sglobal
000314EC <AmiBlitz3.ab3@22748>   MOVE.w D3,leaampl+2
000314F2 <AmiBlitz3.ab3@22749>   MOVE.l leaampl,D1
000314F6 <AmiBlitz3.ab3@22750>  BRA.w 'sskip
000314FC <AmiBlitz3.ab3@22753>   MOVE.w D3,leaamp+2
00031502 <AmiBlitz3.ab3@22754>   MOVE.l leaamp,D1
00031506 <AmiBlitz3.ab3@22757>   BSR.w writelong
0003150A <AmiBlitz3.ab3@22760>   MOVE.w #$C701,D1     ;was  #astring
00031510 <AmiBlitz3.ab3@22761>   MOVE.w varmode,D2
00031514 <AmiBlitz3.ab3@22762>    BEQ.w 'global
00031516 <AmiBlitz3.ab3@22763>   SUBQ.w #1,D1
0003151A <AmiBlitz3.ab3@22766>   BSR.w Atokejsr
00031522 <AmiBlitz3.ab3@22767>   MOVE.w #$FFFF,lasta6    ; was -1
00031528 <AmiBlitz3.ab3@22768>   LEA stalign,A0
0003152E <AmiBlitz3.ab3@22769>   LEA stalignf,A1
00031532 <AmiBlitz3.ab3@22770>   BSR.w pokecode
00031536 <AmiBlitz3.ab3@22771> BRA.w 'next
0003153A <AmiBlitz3.ab3@22775>   CMP.w #$2E,D0        ;'.'                                    ;definecode 'lb 'lw 'll
0003153E <AmiBlitz3.ab3@22776>    BNE.w 'word
00031544 <AmiBlitz3.ab3@22777>   JSR get1bytemain
00031548 <AmiBlitz3.ab3@22778>   CMP.w #$77,D0        ;'w'
0003154C <AmiBlitz3.ab3@22779>    BEQ.w 'word2
00031550 <AmiBlitz3.ab3@22780>   CMP.w #$62,D0        ;'b'
00031554 <AmiBlitz3.ab3@22781>    BEQ.w 'byte
00031558 <AmiBlitz3.ab3@22783>   CMP.w #"s",d0        ;'s'
0003155C <AmiBlitz3.ab3@22784>   BEQ 'single3         
00031560 <AmiBlitz3.ab3@22785>   CMP.w #"d",d0        ;'d'
00031564 <AmiBlitz3.ab3@22786>   BEQ 'double3
00031568 <AmiBlitz3.ab3@22788>   CMP.w #$6C,D0        ;'l'
0003156C <AmiBlitz3.ab3@22789>    BNE.w syntaxerr
0003156E <AmiBlitz3.ab3@22790>   MOVEQ.l #$02,D1
00031570 <AmiBlitz3.ab3@22791>  RTS
00031578 <AmiBlitz3.ab3@22795>   MOVE.b #1,iee
0003157A <AmiBlitz3.ab3@22796>   MOVEQ.l #$3,d1
0003157C <AmiBlitz3.ab3@22797>  RTS
00031584 <AmiBlitz3.ab3@22800>   MOVE.b #1,iee
00031586 <AmiBlitz3.ab3@22801>   MOVEQ.l #$4,d1
00031588 <AmiBlitz3.ab3@22802>  RTS
0003158A <AmiBlitz3.ab3@22806>   MOVEQ.l #$00,D1
0003158C <AmiBlitz3.ab3@22807>  RTS
0003158E <AmiBlitz3.ab3@22810>   MOVEQ.l #$01,D1
00031590 <AmiBlitz3.ab3@22811>  RTS
00031592 <AmiBlitz3.ab3@22814>   MOVEQ.l #$01,D1
00031598 <AmiBlitz3.ab3@22815> JMP bakup
0003159C <AmiBlitz3.ab3@22819>   BSR.w getsize2
0003159E <AmiBlitz3.ab3@22821>   MOVE.w D1,-(A7)
000315A2 <AmiBlitz3.ab3@22822>    BSR.w evalconst2
000315A6 <AmiBlitz3.ab3@22823>   CMP.w #$2C,D0        ;','
000315AA <AmiBlitz3.ab3@22824>    BNE.w syntaxerr
000315AC <AmiBlitz3.ab3@22825>   MOVE.l D3,-(A7)
000315B0 <AmiBlitz3.ab3@22826>    BSR.w evalconst2
000315B2 <AmiBlitz3.ab3@22827>   MOVE.l D3,D1        ;to put in memory
000315B4 <AmiBlitz3.ab3@22828>   MOVE.l (A7)+,D3     ;number of times
000315B6 <AmiBlitz3.ab3@22829>   MOVE.w (A7)+,D2
000315BA <AmiBlitz3.ab3@22830>    BEQ.w 'byte
000315BE <AmiBlitz3.ab3@22836>   CMP.w #$1,D2
000315C2 <AmiBlitz3.ab3@22837>    BEQ.w 'word
000315C4 <AmiBlitz3.ab3@22840>   SWAP D1
000315C8 <AmiBlitz3.ab3@22841>    BSR.w writeword
000315CA <AmiBlitz3.ab3@22842>   SWAP D1
000315CE <AmiBlitz3.ab3@22843>    BSR.w writeword
000315D0 <AmiBlitz3.ab3@22844>   SUBQ.l #1,D3
000315D4 <AmiBlitz3.ab3@22845>    BNE.w 'long
000315D6 <AmiBlitz3.ab3@22846>  RTS
000315DA <AmiBlitz3.ab3@22849>    BSR.w writeword
000315DC <AmiBlitz3.ab3@22850>   SUBQ.l #1,D3
000315E0 <AmiBlitz3.ab3@22851>    BNE.w 'word
000315E2 <AmiBlitz3.ab3@22852>  RTS
000315E6 <AmiBlitz3.ab3@22855>    BSR.w writebyte
000315E8 <AmiBlitz3.ab3@22856>   SUBQ.l #1,D3
000315EC <AmiBlitz3.ab3@22857>    BNE.w 'byte
000315EE <AmiBlitz3.ab3@22858> RTS
000315F2 <AmiBlitz3.ab3@22862>   BSR.w getsize2                                          ;definestorage
000315F4 <AmiBlitz3.ab3@22863>   MOVE.w D1,-(A7)
000315F8 <AmiBlitz3.ab3@22864>   BSR.w evalconst3
000315FA <AmiBlitz3.ab3@22865>   MOVE.w (A7)+,D1
000315FC <AmiBlitz3.ab3@22866>   LSL.l D1,D3
000315FE <AmiBlitz3.ab3@22868>   MOVE.l d3,d0
00031602 <AmiBlitz3.ab3@22869>   BEQ 'll5
00031604 <AmiBlitz3.ab3@22870>   MOVEQ #0,d1
0003160A <AmiBlitz3.ab3@22873>     JSR writebyte
0003160C <AmiBlitz3.ab3@22874>     SUBQ.l #1,d3
00031610 <AmiBlitz3.ab3@22875>   BNE.s 'll10
00031612 <AmiBlitz3.ab3@22880> RTS
00031614 <AmiBlitz3.ab3@22884>   MOVE.w D0,-(A7)
0003161A <AmiBlitz3.ab3@22885>   LEA dummyasm,A0
00031620 <AmiBlitz3.ab3@22886>   MOVEA.l destpointer,A1
0003162A <AmiBlitz3.ab3@22887>   MOVE.w asmlen2,asmlen
00031630 <AmiBlitz3.ab3@22888>   JSR insasm
00031632 <AmiBlitz3.ab3@22889>   MOVE.w (A7)+,D0
00031634 <AmiBlitz3.ab3@22890> RTS
00031638 <AmiBlitz3.ab3@22894>   BSR.w getsize2
00031642 <AmiBlitz3.ab3@22896>   MOVE.l #ptr_parameterstore,asmbuff
00031644 <AmiBlitz3.ab3@22897>   TST.w D1
00031648 <AmiBlitz3.ab3@22898>    BEQ.w 'byte
0003164C <AmiBlitz3.ab3@22899>   CMP.w #$1,D1
00031650 <AmiBlitz3.ab3@22900>    BEQ.w 'word
00031654 <AmiBlitz3.ab3@22902>   CMP.w #$2,d1
00031658 <AmiBlitz3.ab3@22903>    BEQ 'long
0003165C <AmiBlitz3.ab3@22904>   CMP.w #$3,d1
00031660 <AmiBlitz3.ab3@22905>    BEQ 'single
00031662 <AmiBlitz3.ab3@22910>    MOVEQ.l #$0d,D3
00031668 <AmiBlitz3.ab3@22918>    JSR asmconst
0003166C <AmiBlitz3.ab3@22919>    BSR.w insasm2
00031670 <AmiBlitz3.ab3@22920>    BSR.w writelong
00031674 <AmiBlitz3.ab3@22922>    BSR   writelong
00031678 <AmiBlitz3.ab3@22924>   CMP.w #$2C,D0    ; ','
0003167C <AmiBlitz3.ab3@22925>    BEQ.w 'lloop
0003167E <AmiBlitz3.ab3@22926>  RTS
00031680 <AmiBlitz3.ab3@22930>   MOVEQ.l #$0B,D3
00031688 <AmiBlitz3.ab3@22934>   MOVE.b #1,_dcb
0003168E <AmiBlitz3.ab3@22937>   JSR asmconst
00031694 <AmiBlitz3.ab3@22938>   CLR.b _dcb
00031698 <AmiBlitz3.ab3@22939>   BSR.w insasm2
0003169C <AmiBlitz3.ab3@22940>   BSR writebyte
000316A0 <AmiBlitz3.ab3@22941>   BSR writebyte
000316A4 <AmiBlitz3.ab3@22942>   BSR writebyte                                            ;long
000316A8 <AmiBlitz3.ab3@22943>   BSR writebyte
000316AC <AmiBlitz3.ab3@22944>   CMP.w #$2C,D0
000316B0 <AmiBlitz3.ab3@22945>    BEQ.w 'lloopb
000316B2 <AmiBlitz3.ab3@22946>  RTS
000316B4 <AmiBlitz3.ab3@22949>   MOVEQ.l #$0c,D3
000316BC <AmiBlitz3.ab3@22953>   MOVE.b #1,_dcb
000316C2 <AmiBlitz3.ab3@22956>   JSR asmconst
000316C8 <AmiBlitz3.ab3@22957>   CLR.b _dcb
000316CC <AmiBlitz3.ab3@22958>   BSR.w insasm2
000316D0 <AmiBlitz3.ab3@22959>   BSR.w writebyte
000316D4 <AmiBlitz3.ab3@22960>   BSR.w writebyte
000316D8 <AmiBlitz3.ab3@22961>   BSR.w writebyte
000316DC <AmiBlitz3.ab3@22962>   BSR.w writebyte
000316E0 <AmiBlitz3.ab3@22963>   CMP.w #$2C,D0
000316E4 <AmiBlitz3.ab3@22964>    BEQ.w 'lloopa
000316E6 <AmiBlitz3.ab3@22965>  RTS
000316E8 <AmiBlitz3.ab3@22971>   MOVEQ.l #$11,D3
000316EE <AmiBlitz3.ab3@22974>   JSR get1bytemain
000316F2 <AmiBlitz3.ab3@22975>   CMP.w #$22,D0     ;'"'
000316F6 <AmiBlitz3.ab3@22976>    BNE.w 'notq
000316F8 <AmiBlitz3.ab3@22981>   MOVE.b (a5)+,d0                                          ;bsr.w get1bytemain ascii dc.b
000316FC <AmiBlitz3.ab3@22983>    BEQ.w syntaxerr
00031700 <AmiBlitz3.ab3@22984>   CMP.w #$22,D0   ;'"'
00031704 <AmiBlitz3.ab3@22985>    BEQ.w 'qdone
00031708 <AmiBlitz3.ab3@22987>   CMP.b #"\",d0
0003170C <AmiBlitz3.ab3@22988>    BNE 'n1
00031710 <AmiBlitz3.ab3@22989>   CMP.b #"\",(a5)
00031714 <AmiBlitz3.ab3@22990>    BEQ 'do1
00031716 <AmiBlitz3.ab3@22994>   MOVE.w D0,D1
0003171A <AmiBlitz3.ab3@22995>   BSR.w writebyte
0003171E <AmiBlitz3.ab3@22996>  BRA.w 'qloop
00031726 <AmiBlitz3.ab3@23000>   CMP.l #"__DA",1(a5)
0003172A <AmiBlitz3.ab3@23001>    BNE 'nodate1
00031732 <AmiBlitz3.ab3@23002>   CMP.l #"TE__",5(a5)
00031736 <AmiBlitz3.ab3@23003>    BEQ 'c1
0003173E <AmiBlitz3.ab3@23004>   CMP.l #"TE_G",5(a5)
00031742 <AmiBlitz3.ab3@23005>    BNE 'nodate1
0003174A <AmiBlitz3.ab3@23006>   CMP.l #"ER__",9(a5)
0003174E <AmiBlitz3.ab3@23007>    BNE 'nodate1
00031754 <AmiBlitz3.ab3@23008>   JSR compiledatedc_ger
00031758 <AmiBlitz3.ab3@23009>  BRA 'n1
0003175E <AmiBlitz3.ab3@23012>   JSR compiledatedc
00031762 <AmiBlitz3.ab3@23013>  BRA 'n1
0003176A <AmiBlitz3.ab3@23016>   CMP.l #"__VE",1(a5)
0003176E <AmiBlitz3.ab3@23017>    BNE 'n1
00031774 <AmiBlitz3.ab3@23018>   CMP.w #"R_",5(a5)
00031778 <AmiBlitz3.ab3@23019>    BNE 'n1
0003177E <AmiBlitz3.ab3@23020>   JSR version_string_dc
00031782 <AmiBlitz3.ab3@23021>  BRA.w 'qloop
00031788 <AmiBlitz3.ab3@23025>   CLR.w instringon
0003178E <AmiBlitz3.ab3@23027>   JSR get1bytemain
00031792 <AmiBlitz3.ab3@23028>  BRA.w 'bdone
0003179C <AmiBlitz3.ab3@23033>    MOVE.w oldqflag,instringon
000317A2 <AmiBlitz3.ab3@23034>   MOVEA.l lastsourcepos,A5
000317A8 <AmiBlitz3.ab3@23036>    JSR asmconst
000317AE <AmiBlitz3.ab3@23037>   SUBQ.l #1,destpointer
000317B2 <AmiBlitz3.ab3@23038>    BSR.w insasm2
000317B8 <AmiBlitz3.ab3@23039>   ADDQ.l #1,destpointer
000317BC <AmiBlitz3.ab3@23040>    BSR.w writebyte
000317C0 <AmiBlitz3.ab3@23043>   CMP.w #$2C,D0   ;','
000317C4 <AmiBlitz3.ab3@23044>    BEQ.w 'bloop
000317C6 <AmiBlitz3.ab3@23045>  RTS
000317C8 <AmiBlitz3.ab3@23048>   MOVEQ.l #$10,D3
000317D0 <AmiBlitz3.ab3@23057>   MOVE.b #1,_dcb
000317D6 <AmiBlitz3.ab3@23059>   JSR asmconst
000317DC <AmiBlitz3.ab3@23061>   CLR.b _dcb
000317E0 <AmiBlitz3.ab3@23063>   BSR.w insasm2
000317E4 <AmiBlitz3.ab3@23066>   BSR.w writebyte
000317E8 <AmiBlitz3.ab3@23067>   BSR.w writebyte
000317EC <AmiBlitz3.ab3@23069>   CMP.w #$2C,D0      ;','
000317F0 <AmiBlitz3.ab3@23070>    BEQ.w 'wloop
000317F2 <AmiBlitz3.ab3@23071> RTS
000317F8 <AmiBlitz3.ab3@23075>   ADDQ.l #3,destpointer
00031800 <AmiBlitz3.ab3@23076>   ANDI.w #$FFFC,destpointer+2
00031802 <AmiBlitz3.ab3@23077> RTS
00031808 <AmiBlitz3.ab3@23081>   ADDQ.l #7,destpointer
00031810 <AmiBlitz3.ab3@23082>   ANDI.w #$FFF8,destpointer+2
00031812 <AmiBlitz3.ab3@23083> RTS
00031818 <AmiBlitz3.ab3@23087>   ADDQ.l #1,destpointer                                    ;even
00031820 <AmiBlitz3.ab3@23088>   BCLR #$0,destpointer+3
00031822 <AmiBlitz3.ab3@23089> RTS
00031824 <AmiBlitz3.ab3@23092> datasize: Ds.w 1
0003182A <AmiBlitz3.ab3@23102>   TST.b debugmode
0003182E <AmiBlitz3.ab3@23103>   BEQ.w 'skip
00031832 <AmiBlitz3.ab3@23104>   MOVE.w #$4420,D0                                         ;'D '
00031836 <AmiBlitz3.ab3@23105>   MOVE.b datasize+1(PC),D0
0003183A <AmiBlitz3.ab3@23106>  BRA.w pokedata2
0003183C <AmiBlitz3.ab3@23109> RTS
00031840 <AmiBlitz3.ab3@23113>   MOVE.w #$FC17,D1           ;#64535
00031846 <AmiBlitz3.ab3@23114>    JSR uselib
00031850 <AmiBlitz3.ab3@23117>    MOVE.w oldqflag,instringon
00031856 <AmiBlitz3.ab3@23118>   MOVEA.l lastsourcepos,A5
0003185C <AmiBlitz3.ab3@23120>    JSR sizespec2        ;get size of it into d1
00031862 <AmiBlitz3.ab3@23121>   MOVE.w D1,datasize
00031866 <AmiBlitz3.ab3@23125>   CMP.w #$7,D1
0003186A <AmiBlitz3.ab3@23126>    BEQ.w 'string
0003186C <AmiBlitz3.ab3@23128>   MOVE.w D1,-(A7)
00031870 <AmiBlitz3.ab3@23131>   BSR.w pdt
00031872 <AmiBlitz3.ab3@23132>   MOVE.w (A7),D2
00031876 <AmiBlitz3.ab3@23133>    BSR.w fetchdata
00031878 <AmiBlitz3.ab3@23134>   CMP.w (A7),D2                                            ;datamode
0003187C <AmiBlitz3.ab3@23135>    BEQ.w 'dataok
0003187E <AmiBlitz3.ab3@23137>   MOVE.w D2,D1
00031880 <AmiBlitz3.ab3@23138>   MOVE.w (A7),D2
00031884 <AmiBlitz3.ab3@23139>   CMP.w #$2,D2
00031888 <AmiBlitz3.ab3@23140>    BNE.w 'notw
0003188C <AmiBlitz3.ab3@23141>   CMP.w #$3,D1
00031890 <AmiBlitz3.ab3@23142>    BNE.w baddaterr
00031896 <AmiBlitz3.ab3@23143>   CMP.l #$10000,D3        ; was  #65536
0003189A <AmiBlitz3.ab3@23144>    BCC.w baddaterr
0003189E <AmiBlitz3.ab3@23145>  BRA.w 'dataok
000318A2 <AmiBlitz3.ab3@23148>   CMP.w #$1,D2
000318A6 <AmiBlitz3.ab3@23149>    BNE.w 'notb
000318AA <AmiBlitz3.ab3@23150>   CMP.w #$2,D1
000318AE <AmiBlitz3.ab3@23151>    BNE.w baddaterr
000318B4 <AmiBlitz3.ab3@23152>   CMP.l #$100,D3
000318B8 <AmiBlitz3.ab3@23153>    BCC.w baddaterr
000318BC <AmiBlitz3.ab3@23154>  BRA.w 'dataok
000318C0 <AmiBlitz3.ab3@23157>  BRA.w baddaterr
000318C4 <AmiBlitz3.ab3@23160>   CMP.w #$3,D2
000318C8 <AmiBlitz3.ab3@23161>   BCC.w 'notword
000318CC <AmiBlitz3.ab3@23162>   BSR.w pokedata2
000318D0 <AmiBlitz3.ab3@23163>  BRA.w 'next
000318D6 <AmiBlitz3.ab3@23167>   TST.b iee
000318DA <AmiBlitz3.ab3@23168>   BEQ 'old
000318DE <AmiBlitz3.ab3@23169>   CMP.b #5,d2
000318E2 <AmiBlitz3.ab3@23170>   BNE 'old
000318E6 <AmiBlitz3.ab3@23171>   Dc.l $f2006400                                           ;  fpu data write fmove.s fp0,d0
000318EA <AmiBlitz3.ab3@23176>   BSR.w pokedata2l                                          ;write data >3
000318F0 <AmiBlitz3.ab3@23179>   JSR reget
000318F4 <AmiBlitz3.ab3@23180>   CMP.w #$2C,D0     ;','
000318F8 <AmiBlitz3.ab3@23181>    BEQ.w 'more
000318FA <AmiBlitz3.ab3@23182>   ADDQ.w #2,A7
000318FC <AmiBlitz3.ab3@23183>  RTS
00031900 <AmiBlitz3.ab3@23186>    BSR.w pdt
00031906 <AmiBlitz3.ab3@23187>   MOVE.l data2,-(A7)
0003190A <AmiBlitz3.ab3@23188>    BSR.w pokedata2l
0003190C <AmiBlitz3.ab3@23189>   MOVEQ.l #$00,D1
00031912 <AmiBlitz3.ab3@23191>    JSR get1bytemain
00031916 <AmiBlitz3.ab3@23192>    BEQ.w 'done
0003191A <AmiBlitz3.ab3@23193>   CMP.w #$22,D0       ;'"'
0003191E <AmiBlitz3.ab3@23194>    BEQ.w 'quoted
00031922 <AmiBlitz3.ab3@23195>   CMP.w #$2C,D0       ;','
00031926 <AmiBlitz3.ab3@23196>    BEQ.w 'done
0003192A <AmiBlitz3.ab3@23199>    BSR.w pokedata2b
0003192C <AmiBlitz3.ab3@23200>   ADDQ.w #1,D1
00031932 <AmiBlitz3.ab3@23201>    JSR getchar
00031934 <AmiBlitz3.ab3@23202>   TST.w D0
00031938 <AmiBlitz3.ab3@23203>    BEQ.w 'done
0003193C <AmiBlitz3.ab3@23204>   CMP.w #$2C,D0
00031940 <AmiBlitz3.ab3@23205>    BEQ.w 'done       ;','
00031944 <AmiBlitz3.ab3@23206>  BRA.w 'loop2
00031946 <AmiBlitz3.ab3@23211>    MOVEQ #0,d0
00031948 <AmiBlitz3.ab3@23212>    MOVE.b (a5)+,d0
0003194C <AmiBlitz3.ab3@23214>    BEQ.w notqerr2
00031950 <AmiBlitz3.ab3@23215>   CMP.w #$22,D0       ;'"'
00031954 <AmiBlitz3.ab3@23216>    BEQ.w 'done2
00031958 <AmiBlitz3.ab3@23217>    BSR.w pokedata2b
0003195A <AmiBlitz3.ab3@23218>   ADDQ.w #1,D1
0003195E <AmiBlitz3.ab3@23219>  BRA.w 'quoted
00031964 <AmiBlitz3.ab3@23223>   CLR.w instringon
0003196A <AmiBlitz3.ab3@23225>   JSR get1bytemain
0003196C <AmiBlitz3.ab3@23228>   MOVEA.l (A7)+,A0
00031972 <AmiBlitz3.ab3@23229>   MOVE.w dontwrite_nomemleft,D2
00031976 <AmiBlitz3.ab3@23230>    BNE.w 'nopoke
00031978 <AmiBlitz3.ab3@23231>   MOVE.l D1,(A0)
0003197E <AmiBlitz3.ab3@23234>   ADDQ.l #1,data2
00031986 <AmiBlitz3.ab3@23235>   BCLR #$0,data2+3
0003198A <AmiBlitz3.ab3@23236>   CMP.w #$2C,D0      ;','
0003198E <AmiBlitz3.ab3@23237>    BEQ.w 'string
00031990 <AmiBlitz3.ab3@23238> RTS
00031996 <AmiBlitz3.ab3@23242> notqerr2           JMP notqerr
0003199C <AmiBlitz3.ab3@23243> JUMP_vardeclareerr JMP vardeclareerr
000319A2 <AmiBlitz3.ab3@23251>   MOVE.w proceduremode,D1                                  ;doshared
000319A6 <AmiBlitz3.ab3@23254>   BNE.w 'l1
000319A8 <AmiBlitz3.ab3@23255>   MOVE.w D1,-(A7)
000319AE <AmiBlitz3.ab3@23256>   CLR.w proceduremode
000319B4 <AmiBlitz3.ab3@23259>   LEA varbase,a2
000319B8 <AmiBlitz3.ab3@23260>   BSR.w getparameter
000319BA <AmiBlitz3.ab3@23261>   MOVE.w d2,-(a7)
000319C0 <AmiBlitz3.ab3@23262>    JSR findvariable
000319C4 <AmiBlitz3.ab3@23263>    BEQ 'checkdim
000319CA <AmiBlitz3.ab3@23264>    LEA sharebase,a2
000319CC <AmiBlitz3.ab3@23265>    MOVEQ #$f+4,d7
000319D0 <AmiBlitz3.ab3@23266>    BSR.w findlab                                         ;find var
000319D4 <AmiBlitz3.ab3@23267>    BEQ.b dupsherr
000319D8 <AmiBlitz3.ab3@23268>    BSR addlabel
000319DC <AmiBlitz3.ab3@23269>    CMP.b #".",d0
000319E0 <AmiBlitz3.ab3@23270>    BNE JUMP_vardeclareerr
000319E2 <AmiBlitz3.ab3@23271>    MOVE.l a2,a3
000319E8 <AmiBlitz3.ab3@23272>    JSR claptonb       ; jump to a copy of fvaradd 'clapton
000319EA <AmiBlitz3.ab3@23303>   MOVE.w (a7)+,d2
000319EE <AmiBlitz3.ab3@23304>    CMP.b #",",d0
000319F2 <AmiBlitz3.ab3@23305>    BNE 'ret
000319F8 <AmiBlitz3.ab3@23306>    JSR get1bytemain
000319FC <AmiBlitz3.ab3@23307>  BRA 'again2
00031A02 <AmiBlitz3.ab3@23310>   MOVE.w (A7)+,proceduremode
00031A04 <AmiBlitz3.ab3@23311>  RTS
00031A0A <AmiBlitz3.ab3@23314>    CMP.w #2,6(a2)
00031A0E <AmiBlitz3.ab3@23315>    BEQ 'do
00031A14 <AmiBlitz3.ab3@23316>    CMP.w #$102,6(a2)
00031A18 <AmiBlitz3.ab3@23317>    BEQ 'do
00031A1E <AmiBlitz3.ab3@23318>  JMP errormsg_declaredtwice                                 ;was BRA 'errormsg_declaredtwice_
00031A24 <AmiBlitz3.ab3@23321>   LEA varbase,a0
00031A26 <AmiBlitz3.ab3@23324>   MOVE.l (A0),D0                                           ;find label
00031A2A <AmiBlitz3.ab3@23325>    BEQ.b 'z1
00031A2C <AmiBlitz3.ab3@23326>    CMP.l d0,a2
00031A30 <AmiBlitz3.ab3@23327>    BEQ 'z1
00031A32 <AmiBlitz3.ab3@23328>    MOVE.l d0,a0
00031A36 <AmiBlitz3.ab3@23329>  BRA 'm1
00031A38 <AmiBlitz3.ab3@23332>   MOVE.l (a2),d1
00031A3A <AmiBlitz3.ab3@23333>     MOVE.l d1,(a0)
00031A3C <AmiBlitz3.ab3@23334>     CLR.l (a2)
00031A42 <AmiBlitz3.ab3@23335>     LEA sharebase,a0
00031A44 <AmiBlitz3.ab3@23336>     MOVE.l (a0),(a2)
00031A46 <AmiBlitz3.ab3@23337>     MOVE.l a2,(a0)
00031A4C <AmiBlitz3.ab3@23338>     JSR get1bytemain
00031A52 <AmiBlitz3.ab3@23339>     JSR get1bytemain
00031A56 <AmiBlitz3.ab3@23340>  BRA 'domore
00031A5E <AmiBlitz3.ab3@23343>   MOVE.b #1,nowdeclare
00031A60 <AmiBlitz3.ab3@23345>   MOVE.w D1,-(A7)
00031A66 <AmiBlitz3.ab3@23346>   CLR.w proceduremode
00031A6A <AmiBlitz3.ab3@23349>    BSR.w getparameter
00031A6C <AmiBlitz3.ab3@23350>   MOVE.w D2,-(A7)
00031A72 <AmiBlitz3.ab3@23352>   LEA firstglob,A2
00031A76 <AmiBlitz3.ab3@23353>    BSR.w findvariable2
00031A7A <AmiBlitz3.ab3@23354>    BNE.b 'notfound
00031A80 <AmiBlitz3.ab3@23357>   MOVE.b flagmask+1,D1
00031A84 <AmiBlitz3.ab3@23358>   MOVE.b $7(A2),D3
00031A86 <AmiBlitz3.ab3@23359>   EOR.b D3,D1
00031A8A <AmiBlitz3.ab3@23360>    BEQ.w dupsherr
00031A8E <AmiBlitz3.ab3@23361>    BSR.w findlab
00031A92 <AmiBlitz3.ab3@23362>    BEQ.b 'try2
00031A96 <AmiBlitz3.ab3@23365>    BSR.w addlabel
00031A98 <AmiBlitz3.ab3@23366>   MOVE.w (A7)+,D2
00031A9A <AmiBlitz3.ab3@23367>   MOVE.l A2,-(A7)   ;new glob
00031A9E <AmiBlitz3.ab3@23368>    BSR.w fetchvars     
00031AA0 <AmiBlitz3.ab3@23369>   MOVEA.l (A7)+,A2
00031AA2 <AmiBlitz3.ab3@23370>   MOVEQ.l #$04,D1
00031AA4 <AmiBlitz3.ab3@23371>   ADDQ.w #4,A2
00031AA6 <AmiBlitz3.ab3@23372>   ADDQ.w #4,A3
00031AA8 <AmiBlitz3.ab3@23375>     MOVE.w (A3)+,(A2)+
00031AAC <AmiBlitz3.ab3@23376>   DBF D1,'loop
00031AB4 <AmiBlitz3.ab3@23378>   BTST #$1,flagmask+1
00031AB8 <AmiBlitz3.ab3@23379>    BEQ.w 'done
00031ABE <AmiBlitz3.ab3@23380>    JSR get1bytemain
00031AC2 <AmiBlitz3.ab3@23381>   CMP.w #$29,D0         ;')'
00031AC6 <AmiBlitz3.ab3@23382>    BNE.w JUMP_syntaxerr
00031ACC <AmiBlitz3.ab3@23383>    JSR get1bytemain
00031AD0 <AmiBlitz3.ab3@23386>    CMP.w #$2C,D0         ;','
00031AD4 <AmiBlitz3.ab3@23387>    BNE.w 'done2
00031ADA <AmiBlitz3.ab3@23388>    JSR get1bytemain
00031ADE <AmiBlitz3.ab3@23389>  BRA.w 'loop2
00031AE4 <AmiBlitz3.ab3@23392>   MOVE.w (A7)+,proceduremode
00031AE6 <AmiBlitz3.ab3@23393> RTS
00031AEA <AmiBlitz3.ab3@23400>    BSR.w makeiname
00031AF0 <AmiBlitz3.ab3@23401>    JSR check_incdir                                        ; ergebnis in d2
00031AF6 <AmiBlitz3.ab3@23403>    LEA ptr_parameterstore,a1
00031AF8 <AmiBlitz3.ab3@23404>    MOVE.l d2,-(a7)
00031AFE <AmiBlitz3.ab3@23405>    LEA includetemp,a0                                      ; filename in includetemp packen
00031B00 <AmiBlitz3.ab3@23408>      MOVE.b (a1)+,(a0)+
00031B04 <AmiBlitz3.ab3@23409>    BNE 'l4
00031B0A <AmiBlitz3.ab3@23411>    LEA ptr_parameterstore,a1
00031B0C <AmiBlitz3.ab3@23412>    MOVE.l a1,a0
00031B0E <AmiBlitz3.ab3@23415>     TST.b (a0)+
00031B12 <AmiBlitz3.ab3@23416>    BNE 'l1
00031B14 <AmiBlitz3.ab3@23419>      MOVE.b -(a0),d0
00031B18 <AmiBlitz3.ab3@23420>      CMP.b #":",d0
00031B1C <AmiBlitz3.ab3@23421>       BEQ 'out
00031B20 <AmiBlitz3.ab3@23422>      CMP.b #"/",d0
00031B24 <AmiBlitz3.ab3@23423>       BEQ 'out
00031B26 <AmiBlitz3.ab3@23424>      CMP.l a1,a0
00031B2A <AmiBlitz3.ab3@23425>       BEQ 'out2
00031B2E <AmiBlitz3.ab3@23426>  BRA 'l2
00031B30 <AmiBlitz3.ab3@23429>    ADDQ.l #1,a0                                            ; dateinamen vom pfad extrahiert
00031B32 <AmiBlitz3.ab3@23432>    MOVEQ.l #-$01,D2
00031B34 <AmiBlitz3.ab3@23435>      ADDQ.w #1,D2
00031B36 <AmiBlitz3.ab3@23436>      MOVE.b (a0)+,(a1)+
00031B3A <AmiBlitz3.ab3@23437>    BNE 'l3
00031B3C <AmiBlitz3.ab3@23438>    CLR.b (a1)+
00031B42 <AmiBlitz3.ab3@23440>    LEA ptr_parameterstore,a1
00031B46 <AmiBlitz3.ab3@23441>    BSR.w findxinc                                         ;find include
00031B4A <AmiBlitz3.ab3@23442>     BEQ.w 'outb
00031B4C <AmiBlitz3.ab3@23444>    MOVE.w D2,-(A7)
00031B50 <AmiBlitz3.ab3@23445>    BSR.w addlabel
00031B52 <AmiBlitz3.ab3@23446>    MOVE.w (A7)+,D2
00031B58 <AmiBlitz3.ab3@23448>    LEA ptr_parameterstore,a1
00031B5E <AmiBlitz3.ab3@23449>    LEA includetemp,a0                                      ; namen in includetemp schreiben
00031B60 <AmiBlitz3.ab3@23452>     MOVE.b (a0)+,(a1)+
00031B64 <AmiBlitz3.ab3@23453>    BNE 'l4b
00031B66 <AmiBlitz3.ab3@23455>    MOVE.l (a7)+,d2
00031B6C <AmiBlitz3.ab3@23456>    LEA ptr_parameterstore,a1
00031B70 <AmiBlitz3.ab3@23458>  BRA.w doinc2
00031B76 <AmiBlitz3.ab3@23462>    LEA ptr_parameterstore,a1
00031B7C <AmiBlitz3.ab3@23463>    LEA includetemp,a0
00031B7E <AmiBlitz3.ab3@23466>     MOVE.b (a0)+,(a1)+
00031B82 <AmiBlitz3.ab3@23467>    BNE 'l4b2
00031B84 <AmiBlitz3.ab3@23469>    MOVE.l (a7)+,d2
00031B8A <AmiBlitz3.ab3@23470>    LEA ptr_parameterstore,a1
00031B8C <AmiBlitz3.ab3@23472> RTS
00031B90 <AmiBlitz3.ab3@23476>   BSR.w makeiname                                              ; test and get the parameter (includestring)
00031B96 <AmiBlitz3.ab3@23480>   JSR check_IncBinDir                                          ; to fix the path problem in CLIMode  tomsmart1
00031B9C <AmiBlitz3.ab3@23482>   MOVEA.l _dosbase,A6
00031B9E <AmiBlitz3.ab3@23484>   MOVE.l D0,D7                                                 ; store Lockpointer
00031BA2 <AmiBlitz3.ab3@23485>    BEQ.w error_cant_open_include                               ; no pointer => errormessage
00031BA4 <AmiBlitz3.ab3@23486>   MOVE.l D7,D1                                                 ; begin get the size of the file to include
00031BAA <AmiBlitz3.ab3@23487>   MOVE.l ptr_macrobuffer_begin,D2
00031BAE <AmiBlitz3.ab3@23488>    JSR _Examine(A6)
00031BB4 <AmiBlitz3.ab3@23489>   MOVEA.l ptr_macrobuffer_begin,A0
00031BB8 <AmiBlitz3.ab3@23490>   MOVE.l $4(A0),D0
00031BBC <AmiBlitz3.ab3@23491>    BPL.w error_cant_open_include                               ; something went wrong => errormessage
00031BC0 <AmiBlitz3.ab3@23492>   MOVE.l $7C(A0),D3      ;length                                       ; store the size of the file to include
00031BC2 <AmiBlitz3.ab3@23493>   MOVE.l D7,D1                                                 ; begin unlock the file
00031BC6 <AmiBlitz3.ab3@23494>    JSR _UnLock(A6)
00031BCC <AmiBlitz3.ab3@23496>   MOVE.l #ptr_parameterstore,D1                                ; begin Open and Load the file
00031BD2 <AmiBlitz3.ab3@23497>   MOVE.l #HUNK_RELOC_16__MODE_OLDFILE,D2                       
00031BD6 <AmiBlitz3.ab3@23498>    JSR _Open(A6)
00031BD8 <AmiBlitz3.ab3@23499>   MOVE.l D0,D7
00031BDC <AmiBlitz3.ab3@23500>    BEQ.w error_cant_open_include
00031BE2 <AmiBlitz3.ab3@23501>   MOVE.l destpointer,D0
00031BE4 <AmiBlitz3.ab3@23502>   ADD.l D3,D0
00031BEA <AmiBlitz3.ab3@23503>   CMP.l destbufferend,D0
00031BEE <AmiBlitz3.ab3@23504>    BHI.w 'over
00031BF4 <AmiBlitz3.ab3@23505>   MOVE.l destpointer,D2
00031BF6 <AmiBlitz3.ab3@23506>   MOVE.l D7,D1
00031BFA <AmiBlitz3.ab3@23507>    JSR _Read(A6)
00031C00 <AmiBlitz3.ab3@23508>   CMP.l #$FFFFFFFF,D0              ; was -1
00031C04 <AmiBlitz3.ab3@23509>    BEQ.w error_reading_file
00031C0A <AmiBlitz3.ab3@23510>   ADD.l D0,destpointer
00031C0E <AmiBlitz3.ab3@23511>  BRA.w 'close
00031C16 <AmiBlitz3.ab3@23514>   MOVE.w #$FFFF,dontwrite_nomemleft          ; was -1
00031C1C <AmiBlitz3.ab3@23515>   MOVE.l D0,destpointer
00031C1E <AmiBlitz3.ab3@23518>   MOVE.l D7,D1
00031C22 <AmiBlitz3.ab3@23519> JMP _Close(A6)
00031C28 <AmiBlitz3.ab3@23522> JUMP_illdirerr JMP illdirerr
00031C2E <AmiBlitz3.ab3@23528>   TST.w dirmode                                            ;include  open
00031C32 <AmiBlitz3.ab3@23529>    BNE.w JUMP_illdirerr
00031C36 <AmiBlitz3.ab3@23531>   BSR.w makeiname
00031C3C <AmiBlitz3.ab3@23533>   JSR check_incdir
00031C40 <AmiBlitz3.ab3@23537>   BSR.w findconstant
00031C44 <AmiBlitz3.ab3@23538>    BEQ.w alincerr
00031C4A <AmiBlitz3.ab3@23540>   LEA constantbase,A2
00031C4E <AmiBlitz3.ab3@23541>   BSR.w addhere2
00031C52 <AmiBlitz3.ab3@23543>   CLR.w $C(A2)
00031C56 <AmiBlitz3.ab3@23544>   CLR.l $4(A2)
00031C5C <AmiBlitz3.ab3@23546>   MOVE.l #ptr_parameterstore,D1
00031C5E <AmiBlitz3.ab3@23547>   MOVE.l d1,a0
00031C64 <AmiBlitz3.ab3@23548>   LEA includetemp2,a1
00031C66 <AmiBlitz3.ab3@23551>     MOVE.b (a0)+,(a1)+
00031C6A <AmiBlitz3.ab3@23552>   BNE 'l1
00031C70 <AmiBlitz3.ab3@23553>   JSR save_includename
00031C7A <AmiBlitz3.ab3@23554>   MOVE.l #0,include_process
00031C82 <AmiBlitz3.ab3@23556>   CMP.l #$62623200,-4(a0)                                  ;.bb2
00031C86 <AmiBlitz3.ab3@23557>   BEQ 'ok
00031C8E <AmiBlitz3.ab3@23558>   CMP.l #$61623300,-4(a0)                                  ;.ab3
00031C92 <AmiBlitz3.ab3@23559>   BEQ 'ok_tokenize
00031C9A <AmiBlitz3.ab3@23560>   CMP.l #$61623200,-4(a0)                                  ;.ab2
00031C9E <AmiBlitz3.ab3@23561>   BEQ 'ok_tokenize
00031CA6 <AmiBlitz3.ab3@23562>   CMP.l #$2e626200,-4(a0)                                  ;.bb files
00031CAA <AmiBlitz3.ab3@23563>   BEQ 'ok
00031CB0 <AmiBlitz3.ab3@23564>  JMP errortoken                                             ;can only include
00031CBA <AmiBlitz3.ab3@23567>    MOVE.l #-1,include_process                              ; must tokenize the include
00031CC0 <AmiBlitz3.ab3@23570>   MOVE.l #HUNK_RELOC_16__MODE_OLDFILE,D2
00031CC6 <AmiBlitz3.ab3@23571>   MOVEA.l _dosbase,A6
00031CCA <AmiBlitz3.ab3@23572>   JSR _Open(A6)
00031CCE <AmiBlitz3.ab3@23573>   MOVE.l D0,$8(A2)
00031CD2 <AmiBlitz3.ab3@23574>   BEQ.w error_cant_open_include
00031CD8 <AmiBlitz3.ab3@23575>   CLR.l includeline
00031CDC <AmiBlitz3.ab3@23576>   MOVE.l 8(a2),d1
00031CDE <AmiBlitz3.ab3@23577>   MOVE.l d3,-(a7)
00031CE0 <AmiBlitz3.ab3@23578>   MOVEQ #0,d2
00031CE2 <AmiBlitz3.ab3@23579>   MOVEQ #1,d3
00031CE6 <AmiBlitz3.ab3@23580>   JSR _Seek(a6)                                            ; -66
00031CEA <AmiBlitz3.ab3@23581>   MOVE.l 8(a2),d1
00031CEC <AmiBlitz3.ab3@23582>   MOVEQ #0,d2
00031CEE <AmiBlitz3.ab3@23583>   MOVEQ #-1,d3
00031CF2 <AmiBlitz3.ab3@23584>   JSR _Seek(a6)                                            ; -66
00031CF4 <AmiBlitz3.ab3@23585>   MOVE.l (a7)+,d3
00031CF6 <AmiBlitz3.ab3@23586>   ADDQ.l #4,d0
00031CFC <AmiBlitz3.ab3@23590>   MOVE.l #$10000,D1
00031D02 <AmiBlitz3.ab3@23592>   MOVEA.l _execbase,A6
00031D06 <AmiBlitz3.ab3@23596>   JSR _AllocVec(a6)
00031D0A <AmiBlitz3.ab3@23600>   MOVE.l D0,$4(A2)
00031D0E <AmiBlitz3.ab3@23601>   MOVE.l D0,$E(A2)
00031D10 <AmiBlitz3.ab3@23602>   MOVEA.l D0,A5
00031D16 <AmiBlitz3.ab3@23610>   ADDQ.w #1,ininclude                                      ;enter include
00031D1C <AmiBlitz3.ab3@23614>   LEA _include,a0
00031D20 <AmiBlitz3.ab3@23615>   MOVEM.l a0-a6/d0-d7,-(a7)
00031D26 <AmiBlitz3.ab3@23616>   LEA ptr_parameterstore,a1
00031D28 <AmiBlitz3.ab3@23619>     MOVE.b (a0)+,(a1)+
00031D2C <AmiBlitz3.ab3@23620>   BNE 'l1b
00031D2E <AmiBlitz3.ab3@23622>   MOVEQ #9,d2
00031D34 <AmiBlitz3.ab3@23623>   JSR findlabel2
00031D38 <AmiBlitz3.ab3@23624>   BNE 'd
00031D40 <AmiBlitz3.ab3@23625>   MOVE.l #1,8(a2)
00031D44 <AmiBlitz3.ab3@23626>   MOVEM.l (a7)+,a0-a6/d0-d7
00031D48 <AmiBlitz3.ab3@23627>  BRA 'd2
00031D4E <AmiBlitz3.ab3@23630>   JSR addlabelhash
00031D56 <AmiBlitz3.ab3@23631>   MOVE.l #$1,$4(A2)
00031D5E <AmiBlitz3.ab3@23632>   MOVE.l #1,8(a2)
00031D62 <AmiBlitz3.ab3@23633>   MOVEM.l (a7)+,a0-a6/d0-d7
00031D68 <AmiBlitz3.ab3@23636>   LEA inctab,a0
00031D6A <AmiBlitz3.ab3@23637>   MOVEQ #0,d1
00031D70 <AmiBlitz3.ab3@23638>   MOVE.w ininclude,d1
00031D74 <AmiBlitz3.ab3@23639>   CLR.l $0(a0,d1*4)
00031D7A <AmiBlitz3.ab3@23641>   MOVEA.l passstack,A7
00031D80 <AmiBlitz3.ab3@23642> JMP passnxt
00031D86 <AmiBlitz3.ab3@23645> JUMP_dupmacerr  JMP dupmacerr
00031D8C <AmiBlitz3.ab3@23646> JUMP_macenderr  JMP macenderr
00031D92 <AmiBlitz3.ab3@23647> JUMP_macnesterr JMP macnesterr
00031D94 <AmiBlitz3.ab3@23650> coolnest:   Ds.w 1
00031D98 <AmiBlitz3.ab3@23651> macline:    Ds.l 1
00031DA2 <AmiBlitz3.ab3@23657>   MOVE.l linenumat,macline
00031DA6 <AmiBlitz3.ab3@23659>    BSR.w makename2
00031DAA <AmiBlitz3.ab3@23660>    BEQ.w JUMP_syntaxerr
00031DB0 <AmiBlitz3.ab3@23662>    CLR.b thenmode
00031DBA <AmiBlitz3.ab3@23666>    MOVE.w oldqflag,instringon
00031DC0 <AmiBlitz3.ab3@23667>   MOVEA.l lastsourcepos,A5
00031DC4 <AmiBlitz3.ab3@23669>    BSR.w findmac
00031DC8 <AmiBlitz3.ab3@23670>    BEQ.w JUMP_dupmacerr
00031DCC <AmiBlitz3.ab3@23671>    BSR.w addlabel
00031DD0 <AmiBlitz3.ab3@23672>   CLR.w $A(A2)
00031DD6 <AmiBlitz3.ab3@23673>   MOVEA.l ptr_macrobuffer_begin,A0
00031DD8 <AmiBlitz3.ab3@23674>   MOVEQ.l #$00,D2     ;flag for nothing got yet!
00031DDE <AmiBlitz3.ab3@23675>   CLR.w coolnest
00031DE0 <AmiBlitz3.ab3@23679>   MOVE.b (a5),d0
00031DE4 <AmiBlitz3.ab3@23680>      BEQ 'l3
00031DE8 <AmiBlitz3.ab3@23681>      CMP.b #" ",d0
00031DEC <AmiBlitz3.ab3@23682>       BNE 'l2                                              ;space macro
00031DEE <AmiBlitz3.ab3@23683>       ADDQ.l #1,a5
00031DF2 <AmiBlitz3.ab3@23684>  BRA 'l1
00031DF6 <AmiBlitz3.ab3@23687>    CMP.b #";",d0
00031DFA <AmiBlitz3.ab3@23688>       BNE 'l3
00031DFC <AmiBlitz3.ab3@23691>    MOVE.b (a5),d0
00031E00 <AmiBlitz3.ab3@23692>       BEQ 'l5
00031E04 <AmiBlitz3.ab3@23693>       BSR.w macputb                                      ;add comment
00031E06 <AmiBlitz3.ab3@23694>       ADDQ.l #1,a5
00031E0A <AmiBlitz3.ab3@23695>  BRA 'l4
00031E0E <AmiBlitz3.ab3@23698>    MOVE.b #":",d0
00031E12 <AmiBlitz3.ab3@23699>       BSR.w macputb
00031E16 <AmiBlitz3.ab3@23700>       MOVE.b #"@",d0
00031E1A <AmiBlitz3.ab3@23701>       BSR.w macputb
00031E22 <AmiBlitz3.ab3@23704>    MOVE.b #0,temp
00031E2A <AmiBlitz3.ab3@23705>       MOVE.b #0,thenmode
00031E30 <AmiBlitz3.ab3@23708>   JSR getcharb   ;get next character
00031E32 <AmiBlitz3.ab3@23710>   TST.w D0
00031E36 <AmiBlitz3.ab3@23711>    BNE.w 'skip
00031E3A <AmiBlitz3.ab3@23712>   MOVEM.l D2/A0/A2,-(A7)
00031E40 <AmiBlitz3.ab3@23714>   CMP.w #"@@",-3(a5)
00031E44 <AmiBlitz3.ab3@23715>   BNE 'l2a
00031E4A <AmiBlitz3.ab3@23716>   JSR nextline
00031E4E <AmiBlitz3.ab3@23717>   BEQ.w JUMP_macenderr
00031E52 <AmiBlitz3.ab3@23718>   MOVEM.l (A7)+,D2/A0/A2
00031E56 <AmiBlitz3.ab3@23719>  BRA.w 'gather
00031E5C <AmiBlitz3.ab3@23723>    JSR nextline
00031E60 <AmiBlitz3.ab3@23724>    BEQ.w JUMP_macenderr
00031E64 <AmiBlitz3.ab3@23725>   MOVEM.l (A7)+,D2/A0/A2
00031E66 <AmiBlitz3.ab3@23726>   TST.w D2
00031E6A <AmiBlitz3.ab3@23727>    BEQ.w 'gather
00031E6C <AmiBlitz3.ab3@23731>   MOVE.b (a5),d0
00031E70 <AmiBlitz3.ab3@23732>       CMP.b #" ",d0
00031E74 <AmiBlitz3.ab3@23733>       BNE 'l1a
00031E76 <AmiBlitz3.ab3@23734>       ADDQ.w #1,a5
00031E7A <AmiBlitz3.ab3@23735>  BRA 'l2b
00031E80 <AmiBlitz3.ab3@23738>   TST.b thenmode
00031E84 <AmiBlitz3.ab3@23739>      BEQ 'l3a
00031E86 <AmiBlitz3.ab3@23740>      MOVEQ #":",d0
00031E8A <AmiBlitz3.ab3@23741>      BSR.w macputb
00031E8E <AmiBlitz3.ab3@23742>      MOVE.w #-$7FFE,D0                                     ;write end if
00031E92 <AmiBlitz3.ab3@23743>      BSR macputw
00031E96 <AmiBlitz3.ab3@23744>      MOVE.w #$800b,d0
00031E9A <AmiBlitz3.ab3@23745>      BSR.w macputw
00031EA0 <AmiBlitz3.ab3@23746>      CLR.b thenmode
00031EA2 <AmiBlitz3.ab3@23750>    MOVEQ.l #$3A,D0
00031EAA <AmiBlitz3.ab3@23752>      MOVE.b #1,temp
00031EAE <AmiBlitz3.ab3@23755>  BRA.w 'notend2
00031EB2 <AmiBlitz3.ab3@23758>   BPL.w 'notend2
00031EB6 <AmiBlitz3.ab3@23759>   CMP.w #-$7FF3,D0         ; was #$800d                                ;macro ?
00031EBA <AmiBlitz3.ab3@23760>    BNE.w 'notamac
00031EC0 <AmiBlitz3.ab3@23761>   ADDQ.w #1,coolnest
00031EC4 <AmiBlitz3.ab3@23762>  BRA.w 'notend
00031EC8 <AmiBlitz3.ab3@23766>   CMP.w #$80d7,d0                                          ;object ?
00031ECC <AmiBlitz3.ab3@23767>     BNE 'l1x
00031ED2 <AmiBlitz3.ab3@23768>     TST.b objectcount
00031ED6 <AmiBlitz3.ab3@23769>     BNE JUMP_macnesterr
00031EDA <AmiBlitz3.ab3@23772>   CMP.w #$8021,d0
00031EDE <AmiBlitz3.ab3@23773>     BNE 'nothen
00031EE6 <AmiBlitz3.ab3@23774>     MOVE.b #1,thenmode
00031EEC <AmiBlitz3.ab3@23777>   TST.b thenmode
00031EF0 <AmiBlitz3.ab3@23778>         BEQ 'l1c
00031EF4 <AmiBlitz3.ab3@23779>    CMP.w #$8002,d0                                         ;end if
00031EF8 <AmiBlitz3.ab3@23780>    BNE 'l1c
00031EFC <AmiBlitz3.ab3@23781>    MOVEM.l d0/a5,-(a7)
00031F02 <AmiBlitz3.ab3@23782>    JSR get1bytemain
00031F04 <AmiBlitz3.ab3@23783>    MOVE.w d0,d1
00031F08 <AmiBlitz3.ab3@23784>    MOVEM.l (a7)+,a5/d0
00031F0C <AmiBlitz3.ab3@23785>    CMP.w #$800b,d1
00031F10 <AmiBlitz3.ab3@23786>    BNE 'l1c
00031F16 <AmiBlitz3.ab3@23787>    CLR.b thenmode
00031F1A <AmiBlitz3.ab3@23791>    CMP.w #-$7FFE,D0   ; was #$8002                                     ;end ?
00031F1E <AmiBlitz3.ab3@23792>    BNE.w 'notend
00031F20 <AmiBlitz3.ab3@23794>    MOVE.l a5,-(a7)
00031F26 <AmiBlitz3.ab3@23795>    JSR get1bytemain
00031F28 <AmiBlitz3.ab3@23796>    MOVE.l (a7)+,a5
00031F2A <AmiBlitz3.ab3@23797>    TST.w d0
00031F2E <AmiBlitz3.ab3@23798>    BEQ 'doend
00031F32 <AmiBlitz3.ab3@23799>    CMP.w #":",d0
00031F36 <AmiBlitz3.ab3@23800>    BEQ 'doend
00031F3A <AmiBlitz3.ab3@23801>    CMP.w #";",d0
00031F3E <AmiBlitz3.ab3@23802>    BEQ 'doend
00031F40 <AmiBlitz3.ab3@23803>    MOVE.l a5,-(a7)
00031F46 <AmiBlitz3.ab3@23804>    JSR get1bytemain
00031F4A <AmiBlitz3.ab3@23805>    MOVE.l -1(a5),d0
00031F4C <AmiBlitz3.ab3@23806>    MOVE.l (a7)+,a5
00031F52 <AmiBlitz3.ab3@23807>    CMP.l #"noa7",d0
00031F56 <AmiBlitz3.ab3@23808>    BEQ 'doend
00031F5A <AmiBlitz3.ab3@23809>  BRA 'morechar
00031F5E <AmiBlitz3.ab3@23812>   MOVE.w #$8002,D0
00031F62 <AmiBlitz3.ab3@23813>    BSR.w macputw
00031F66 <AmiBlitz3.ab3@23814>  BRA 'gather
00031F6C <AmiBlitz3.ab3@23818>   JSR get1bytemain
00031F70 <AmiBlitz3.ab3@23819>    CMP.w #-$7FF3,D0        ;was #$800d,                                ;end macro
00031F74 <AmiBlitz3.ab3@23821>    BEQ.w 'lo1
00031F78 <AmiBlitz3.ab3@23822>   CMP.w #$80d7,d0                                          ;end object
00031F7C <AmiBlitz3.ab3@23824>   BNE 'notem
00031F82 <AmiBlitz3.ab3@23826>   SUBQ.b #1,objectcount
00031F88 <AmiBlitz3.ab3@23827>   TST.b developobject
00031F8C <AmiBlitz3.ab3@23828>   BEQ 'lo1
00031F90 <AmiBlitz3.ab3@23829>   BSR skiprest
00031F92 <AmiBlitz3.ab3@23830>  RTS
00031F98 <AmiBlitz3.ab3@23834>   SUBQ.w #1,coolnest
00031F9C <AmiBlitz3.ab3@23835>    BMI.w 'macdone
00031F9E <AmiBlitz3.ab3@23838>   MOVE.w D0,-(A7)
00031FA2 <AmiBlitz3.ab3@23839>   MOVE.w #$8002,D0
00031FA6 <AmiBlitz3.ab3@23840>    BSR.w macputw
00031FA8 <AmiBlitz3.ab3@23841>   MOVE.w (A7)+,D0
00031FAC <AmiBlitz3.ab3@23842>  BRA.w 'notend
00031FB0 <AmiBlitz3.ab3@23845>   BSR.w macputw
00031FB4 <AmiBlitz3.ab3@23846>  BRA.w 'gather
00031FBA <AmiBlitz3.ab3@23850>     CMP.w #"@@",-1(a5)                                     ;merge lines
00031FBE <AmiBlitz3.ab3@23851>     BNE 'no
00031FC2 <AmiBlitz3.ab3@23852>      MOVEM.l D2/A0/A2,-(A7)
00031FC8 <AmiBlitz3.ab3@23853>    JSR nextline
00031FCC <AmiBlitz3.ab3@23854>    BEQ.w JUMP_macenderr
00031FD0 <AmiBlitz3.ab3@23855>   MOVEM.l (A7)+,D2/A0/A2
00031FD2 <AmiBlitz3.ab3@23856>     TST.w D2
00031FD6 <AmiBlitz3.ab3@23857>    BEQ.w 'gather
00031FDA <AmiBlitz3.ab3@23858>  BRA 'gather
00031FDE <AmiBlitz3.ab3@23862>   BSR.w macputb
00031FE2 <AmiBlitz3.ab3@23863>  BRA.w 'gather
00031FE4 <AmiBlitz3.ab3@23866>   ADDQ.w #4,A7
00031FE6 <AmiBlitz3.ab3@23867>   MOVE.l A0,D0
00031FEC <AmiBlitz3.ab3@23868>   SUB.l ptr_macrobuffer_begin,D0
00031FF0 <AmiBlitz3.ab3@23874>    BEQ.w 'cdone
00031FF4 <AmiBlitz3.ab3@23875>   CMPI.b #":",-(A0)
00031FF8 <AmiBlitz3.ab3@23876>    BNE.w 'cdone
00031FFC <AmiBlitz3.ab3@23877>   CMP.w #$1,D0
00032000 <AmiBlitz3.ab3@23878>    BEQ.w 'cdo
00032004 <AmiBlitz3.ab3@23879>   TST.b -$1(A0)
00032008 <AmiBlitz3.ab3@23880>    BMI.w 'cdone
0003200A <AmiBlitz3.ab3@23883>   SUBQ.w #1,D0
0003200E <AmiBlitz3.ab3@23884>  BRA.w 'mclean
00032012 <AmiBlitz3.ab3@23887>   MOVE.w D0,$8(A2)
00032016 <AmiBlitz3.ab3@23888>    BEQ.w 'skip2
00032018 <AmiBlitz3.ab3@23889>   MOVEQ.l #$01,D1
0003201E <AmiBlitz3.ab3@23890>   MOVEA.l _execbase,A6
00032024 <AmiBlitz3.ab3@23892>   MOVE.l mempool,a0
00032028 <AmiBlitz3.ab3@23893>   JSR _AllocPooled(a6)
0003202A <AmiBlitz3.ab3@23896>   MOVEA.l D0,A0
0003202E <AmiBlitz3.ab3@23897>   MOVE.l A0,$4(A2)
00032032 <AmiBlitz3.ab3@23898>   MOVE.w $8(A2),D1
00032036 <AmiBlitz3.ab3@23899>    BEQ.w 'skip2
00032038 <AmiBlitz3.ab3@23900>   SUBQ.w #1,D1
0003203E <AmiBlitz3.ab3@23901>   MOVEA.l ptr_macrobuffer_begin,A1
00032040 <AmiBlitz3.ab3@23904>     MOVE.b (A1)+,(A0)+
00032044 <AmiBlitz3.ab3@23905>   DBF D1,'lll
0003204A <AmiBlitz3.ab3@23908> JMP get1bytemain
0003204C <AmiBlitz3.ab3@23912>   MOVE.w D0,D1
0003204E <AmiBlitz3.ab3@23913>   LSR.w #8,D1
00032050 <AmiBlitz3.ab3@23914>   MOVE.b D1,(A0)+
00032052 <AmiBlitz3.ab3@23917>   MOVEQ.l #-$01,D2
00032054 <AmiBlitz3.ab3@23918>   MOVE.b D0,(A0)+
0003205A <AmiBlitz3.ab3@23919>   CMPA.l ptr_macrobuffer_end,A0
0003205E <AmiBlitz3.ab3@23920>    BCC.w macbigerr2
00032060 <AmiBlitz3.ab3@23921> RTS
00032066 <AmiBlitz3.ab3@23924> macbigerr2 JMP macbigerr
00032068 <AmiBlitz3.ab3@23928>   MOVE.l d0,-(a7)
0003206A <AmiBlitz3.ab3@23929>   MOVEQ #0,d0
00032070 <AmiBlitz3.ab3@23930>   CLR.b skiptoggle
00032072 <AmiBlitz3.ab3@23933>     MOVE.b (a5),d0
00032076 <AmiBlitz3.ab3@23934>     BEQ 'l3
0003207A <AmiBlitz3.ab3@23935>     CMP.b #";",d0
0003207E <AmiBlitz3.ab3@23936>     BNE 'l2
00032086 <AmiBlitz3.ab3@23937>     MOVE.b #1,skiptoggle
0003208C <AmiBlitz3.ab3@23940>     TST.b skiptoggle
00032090 <AmiBlitz3.ab3@23941>     BNE 'l4
00032094 <AmiBlitz3.ab3@23942>     CMP.b #":",d0
00032098 <AmiBlitz3.ab3@23943>     BEQ 'l3
0003209A <AmiBlitz3.ab3@23946>     ADDQ #1,a5
0003209E <AmiBlitz3.ab3@23947>  BRA 'loop
000320A4 <AmiBlitz3.ab3@23950>   MOVE.w d0,lastchar
000320A6 <AmiBlitz3.ab3@23951>   MOVE.l (a7)+,d0
000320A8 <AmiBlitz3.ab3@23952> RTS
000320AC <AmiBlitz3.ab3@23959>   BSR.w ifchar
000320B0 <AmiBlitz3.ab3@23960>    BNE.w JUMP_syntaxerr
000320B2 <AmiBlitz3.ab3@23961>   MOVE.w D0,D1
000320B8 <AmiBlitz3.ab3@23962>   JSR get1bytemain
000320BC <AmiBlitz3.ab3@23963>   BSR.w ifchar
000320C0 <AmiBlitz3.ab3@23964>    BNE.w 'skip
000320C2 <AmiBlitz3.ab3@23965>   ADDQ.w #1,D0
000320C4 <AmiBlitz3.ab3@23966>   MOVE.w D0,D2
000320C6 <AmiBlitz3.ab3@23967>   ADD.w D0,D0
000320C8 <AmiBlitz3.ab3@23968>   ADD.w D2,D0
000320CA <AmiBlitz3.ab3@23969>   ADD.w D0,D1
000320CC <AmiBlitz3.ab3@23970>   MOVE.w D1,D0
000320D0 <AmiBlitz3.ab3@23971>   ANDI.w #$3,D0
000320D4 <AmiBlitz3.ab3@23972>   CMP.w #$3,D0
000320D8 <AmiBlitz3.ab3@23973>    BEQ.w JUMP_syntaxerr
000320DE <AmiBlitz3.ab3@23975>   JSR get1bytemain
000320E0 <AmiBlitz3.ab3@23978> RTS
000320E2 <AmiBlitz3.ab3@23981> thetst1:  TST.b D0
000320E4 <AmiBlitz3.ab3@23982> thetst2:  TST.w D0
000320E6 <AmiBlitz3.ab3@23983> thetst3:  TST.l D0
000320E8 <AmiBlitz3.ab3@23984> thetst4:  TST.l (A7)+                                      ;Any Length?
000320EC <AmiBlitz3.ab3@23985> thetst5:  JSR _Reschedule(A6)
000320F0 <AmiBlitz3.ab3@23987> posbr:    BEQ.w posbr
000320F4 <AmiBlitz3.ab3@23988> negbr:    BNE.w negbr
000320F6 <AmiBlitz3.ab3@23992>   MOVEQ.l #-$01,D2
000320FA <AmiBlitz3.ab3@23993> BRA.w doifm
00032100 <AmiBlitz3.ab3@23997>   CLR.l fp0addr
00032102 <AmiBlitz3.ab3@23998>   MOVEQ.l #$01,D1                                          ;while flag
00032104 <AmiBlitz3.ab3@23999>   MOVEQ.l #$00,D2                                          ;negate flag
00032108 <AmiBlitz3.ab3@24000> BRA.w doif2
0003210E <AmiBlitz3.ab3@24004>   LEA firstrep,A2
00032110 <AmiBlitz3.ab3@24005>   MOVEQ.l #$08,D2
00032114 <AmiBlitz3.ab3@24006> BRA.w freeslist
00032118 <AmiBlitz3.ab3@24010>   LEA firstsel(PC),A2
0003211A <AmiBlitz3.ab3@24011>   MOVEQ.l #$0E,D2
0003211C <AmiBlitz3.ab3@24016>   MOVEQ.l #$00,D3
0003211E <AmiBlitz3.ab3@24024>   MOVE.l (A2),D0
00032120 <AmiBlitz3.ab3@24025>   CLR.l (A2)
00032122 <AmiBlitz3.ab3@24026>   MOVEA.l D0,A2
00032128 <AmiBlitz3.ab3@24027>   MOVEA.l _execbase,A6
0003212C <AmiBlitz3.ab3@24030>     CMPA.w #$0,A2
00032130 <AmiBlitz3.ab3@24031>      BEQ.w 'done
00032132 <AmiBlitz3.ab3@24032>     TST.w D3
00032136 <AmiBlitz3.ab3@24033>      BEQ.w 'skip
0003213A <AmiBlitz3.ab3@24034>     MOVEM.l D2-D3/A2,-(A7)
0003213C <AmiBlitz3.ab3@24035>     ADDA.w D3,A2
0003213E <AmiBlitz3.ab3@24036>     MOVE.l D4,D2
00032142 <AmiBlitz3.ab3@24037>     BSR.w freeslist
00032146 <AmiBlitz3.ab3@24038>     MOVEM.l (A7)+,D2-D3/A2
00032148 <AmiBlitz3.ab3@24041>     MOVEA.l A2,A1
0003214A <AmiBlitz3.ab3@24042>     MOVE.l D2,D0
0003214C <AmiBlitz3.ab3@24043>     MOVEA.l (A2),A2
00032152 <AmiBlitz3.ab3@24044>     MOVE.l mempool,a0
00032156 <AmiBlitz3.ab3@24045>     JSR _FreePooled(A6)
0003215A <AmiBlitz3.ab3@24046>  BRA.w 'loop
0003215C <AmiBlitz3.ab3@24049> RTS
00032162 <AmiBlitz3.ab3@24051> JUMP_eselerr JMP eselerr
00032166 <AmiBlitz3.ab3@24054> firstsel:  Ds.l 1
0003216A <AmiBlitz3.ab3@24057> selpushb:   Dc.b $02,$40,$00,$FF                           ;ANDI.W  #$00FF,D0
0003216C <AmiBlitz3.ab3@24060> selpushw:   MOVE.w D0,-(A7)
0003216E <AmiBlitz3.ab3@24062> selpushl:   MOVE.l D0,-(A7)
00032172 <AmiBlitz3.ab3@24064> selpushs:   LEA $4(A7),A2                                  ;(a7)=len of string!
00032176 <AmiBlitz3.ab3@24067> selcomb:    ANDI.w #$FF,D0
00032178 <AmiBlitz3.ab3@24068> selcomw:    CMP.w (A7),D0
0003217A <AmiBlitz3.ab3@24070> selcoml:    CMP.l (A7),D0
0003217E <AmiBlitz3.ab3@24072> selbne:     BNE.w selbne
00032180 <AmiBlitz3.ab3@24074> endsel:     ADDQ.w #8,A7
00032184 <AmiBlitz3.ab3@24080>   MOVE.l firstsel(PC),D0                                  
00032188 <AmiBlitz3.ab3@24081>    BEQ.w JUMP_eselerr
0003218A <AmiBlitz3.ab3@24082>   MOVEA.l D0,A2
0003218E <AmiBlitz3.ab3@24083>    BSR.w fillbne
00032194 <AmiBlitz3.ab3@24086>   MOVEA.l _execbase,A6
00032198 <AmiBlitz3.ab3@24089>   MOVE.l $4(A2),D0
0003219C <AmiBlitz3.ab3@24090>    BEQ.w 'done
0003219E <AmiBlitz3.ab3@24091>   MOVEA.l D0,A3
000321A2 <AmiBlitz3.ab3@24092>   MOVEA.l $4(A3),A0
000321A8 <AmiBlitz3.ab3@24093>   MOVE.l destpointer,D1
000321AA <AmiBlitz3.ab3@24094>   SUB.l A0,D1
000321B0 <AmiBlitz3.ab3@24096>     TST.b fast
000321B4 <AmiBlitz3.ab3@24097>     BEQ 'loop_l1
000321BA <AmiBlitz3.ab3@24098>     MOVE.w dontwrite_nomemleft,D0
000321BE <AmiBlitz3.ab3@24099>     BNE.w 'skip
000321C0 <AmiBlitz3.ab3@24100>     ADDQ.l #2,d1
000321C4 <AmiBlitz3.ab3@24101>     MOVE.l d1,-2(a0)
000321C8 <AmiBlitz3.ab3@24102>   BRA 'skip
000321CE <AmiBlitz3.ab3@24106>   TST.w dontwrite_nomemleft
000321D2 <AmiBlitz3.ab3@24107>      BNE.w 'skip
000321D8 <AmiBlitz3.ab3@24108>   CMP.l #MaxWordSgnd,D1
000321DC <AmiBlitz3.ab3@24109>    BHI.w JUMP_cbraerr
000321DE <AmiBlitz3.ab3@24110>   MOVE.w D1,(A0)
000321E2 <AmiBlitz3.ab3@24113>   MOVE.l (A3),$4(A2)                                       ;next of me is new first
000321E4 <AmiBlitz3.ab3@24114>   MOVEA.l A3,A1
000321E6 <AmiBlitz3.ab3@24115>   MOVEQ.l #$08,D0
000321EC <AmiBlitz3.ab3@24116>   MOVE.l mempool,a0
000321F0 <AmiBlitz3.ab3@24117>    JSR _FreePooled(A6)
000321F4 <AmiBlitz3.ab3@24118>  BRA.w 'loop
000321FA <AmiBlitz3.ab3@24121>   JSR popselect                                            ;fix stack on select
000321FE <AmiBlitz3.ab3@24122>   MOVEA.l firstsel(PC),A1
00032204 <AmiBlitz3.ab3@24123>   MOVE.l (A1),firstsel
00032206 <AmiBlitz3.ab3@24124>   MOVEQ.l #$0E,D0
0003220C <AmiBlitz3.ab3@24125>   MOVEA.l _execbase,A6
00032212 <AmiBlitz3.ab3@24126>   MOVE.l mempool,a0
00032216 <AmiBlitz3.ab3@24127>   JSR _FreePooled(A6)
0003221C <AmiBlitz3.ab3@24128> JMP get1bytemain
0003221E <AmiBlitz3.ab3@24132>   MOVEA.l (A7)+,A1
00032220 <AmiBlitz3.ab3@24133>   SUBQ.w #8,A1
00032222 <AmiBlitz3.ab3@24134>   MOVEQ.l #$09,D0
00032224 <AmiBlitz3.ab3@24135>   ADD.l (A1),D0
00032226 <AmiBlitz3.ab3@24138>   ADDQ.w #2,A7                                             ;for runtime errs!
0003222A <AmiBlitz3.ab3@24143>   MOVE.l firstsel(PC),D0
0003222E <AmiBlitz3.ab3@24144>    BEQ.w JUMP_defaerr
00032230 <AmiBlitz3.ab3@24145>   MOVEA.l D0,A2
00032234 <AmiBlitz3.ab3@24146>   BSR.w fillbra
00032238 <AmiBlitz3.ab3@24147>   BSR.w fillbne
0003223C <AmiBlitz3.ab3@24148>   CLR.l $8(A2)
00032240 <AmiBlitz3.ab3@24149>   MOVE.w $C(A2),D2
00032244 <AmiBlitz3.ab3@24150> BRA.w casechk
0003224A <AmiBlitz3.ab3@24152> JUMP_defaerr JMP defaerr
0003224E <AmiBlitz3.ab3@24157>   MOVE.l $8(A2),D0
00032252 <AmiBlitz3.ab3@24158>    BEQ.w 'skip   ;none to do!
00032254 <AmiBlitz3.ab3@24159>   MOVEA.l D0,A0
0003225A <AmiBlitz3.ab3@24160>   MOVE.l destpointer,D1
0003225C <AmiBlitz3.ab3@24161>   SUB.l A0,D1
00032262 <AmiBlitz3.ab3@24164>     TST.b fast
00032266 <AmiBlitz3.ab3@24165>     BEQ 'l1
0003226C <AmiBlitz3.ab3@24166>     TST.w dontwrite_nomemleft
00032270 <AmiBlitz3.ab3@24167>     BNE.w 'skip
00032272 <AmiBlitz3.ab3@24168>     ADDQ.l #2,d1
00032276 <AmiBlitz3.ab3@24169>     MOVE.l D1,-2(A0)
0003227A <AmiBlitz3.ab3@24170>   BRA 'skip
00032280 <AmiBlitz3.ab3@24174>   TST.w dontwrite_nomemleft
00032284 <AmiBlitz3.ab3@24175>      BNE.w 'skip
0003228A <AmiBlitz3.ab3@24177>    CMP.l #MaxWordSgnd,D1
0003228E <AmiBlitz3.ab3@24178>    BHI.w JUMP_cbraerr
00032290 <AmiBlitz3.ab3@24179>   MOVE.w D1,(A0)
00032292 <AmiBlitz3.ab3@24182> RTS
00032298 <AmiBlitz3.ab3@24184> JUMP_cbraerr JMP cbraerr
0003229C <AmiBlitz3.ab3@24190>   MOVE.l $8(A2),D0
000322A0 <AmiBlitz3.ab3@24191>    BEQ.w 'skip
000322A2 <AmiBlitz3.ab3@24195>   MOVEA.l D0,A3
000322A6 <AmiBlitz3.ab3@24196>   MOVE.w #$6000,D1
000322AC <AmiBlitz3.ab3@24199>    TST.b fast
000322B0 <AmiBlitz3.ab3@24200>    BEQ 'l1
000322B6 <AmiBlitz3.ab3@24201>    OR.l #$ff,d1
000322BA <AmiBlitz3.ab3@24202>    BSR writeword
000322BE <AmiBlitz3.ab3@24207>   BSR.w writeword
000322C0 <AmiBlitz3.ab3@24208>   MOVEQ.l #$08,D0
000322C2 <AmiBlitz3.ab3@24209>   MOVEQ.l #$01,D1
000322C8 <AmiBlitz3.ab3@24210>   MOVEA.l _execbase,A6
000322CE <AmiBlitz3.ab3@24212>   MOVE.l mempool,a0
000322D2 <AmiBlitz3.ab3@24213>   JSR _AllocPooled(a6)
000322D4 <AmiBlitz3.ab3@24216>   MOVEA.l D0,A0
000322D8 <AmiBlitz3.ab3@24217>   MOVE.l $4(A2),(A0)
000322DC <AmiBlitz3.ab3@24218>   MOVE.l A0,$4(A2)
000322E4 <AmiBlitz3.ab3@24219>   MOVE.l destpointer,$4(A0)
000322E8 <AmiBlitz3.ab3@24220>  BRA.w writeword
000322EA <AmiBlitz3.ab3@24223> RTS
000322F0 <AmiBlitz3.ab3@24227>   TST.b debugmode
000322F4 <AmiBlitz3.ab3@24228>    BEQ.w 'norerr
000322F8 <AmiBlitz3.ab3@24229>   MOVE.w #$C313,D1
000322FC <AmiBlitz3.ab3@24230>   CMP.w #$3,D2
00032300 <AmiBlitz3.ab3@24231>    BCS.w 'dochk
00032302 <AmiBlitz3.ab3@24232>   ADDQ.w #1,D1
00032306 <AmiBlitz3.ab3@24235>  BRA.w Atokejsr
00032308 <AmiBlitz3.ab3@24238> RTS
0003230E <AmiBlitz3.ab3@24241> JUMP_caseerr JMP caseerr
00032312 <AmiBlitz3.ab3@24248>   MOVE.l firstsel(PC),D0
00032316 <AmiBlitz3.ab3@24249>    BEQ.w JUMP_caseerr
00032318 <AmiBlitz3.ab3@24250>   MOVEA.l D0,A2
0003231C <AmiBlitz3.ab3@24251>    BSR.w fillbra
00032320 <AmiBlitz3.ab3@24252>    BSR.w fillbne
00032324 <AmiBlitz3.ab3@24254>   MOVE.w $C(A2),D2    ;type to get!
00032326 <AmiBlitz3.ab3@24255>   MOVE.w D2,-(A7)
0003232A <AmiBlitz3.ab3@24256>    BSR.w casechk
0003232C <AmiBlitz3.ab3@24257>   MOVE.w (A7),D2
00032330 <AmiBlitz3.ab3@24260>    BSR.w bakeval
00032332 <AmiBlitz3.ab3@24261>   MOVE.w (A7)+,D2    ;types to compare
00032336 <AmiBlitz3.ab3@24262>   LEA selcomb(PC),A0
0003233A <AmiBlitz3.ab3@24263>   LEA selcombf(PC),A1
0003233E <AmiBlitz3.ab3@24264>   CMP.w #$1,D2
00032342 <AmiBlitz3.ab3@24265>    BEQ.w 'doit
00032346 <AmiBlitz3.ab3@24266>   LEA selcomw(PC),A0
0003234A <AmiBlitz3.ab3@24267>   CMP.w #$2,D2
0003234E <AmiBlitz3.ab3@24268>    BEQ.w 'doit
00032352 <AmiBlitz3.ab3@24269>   LEA selcoml(PC),A0
00032356 <AmiBlitz3.ab3@24270>   LEA selcomlf(PC),A1
0003235A <AmiBlitz3.ab3@24271>   CMP.w #$7,D2
0003235E <AmiBlitz3.ab3@24272>    BCS.w 'doit
00032362 <AmiBlitz3.ab3@24274>   MOVE.w #$CE01,D1     ; was #casestrcomp
00032366 <AmiBlitz3.ab3@24275>    BSR.w Atokejsr
0003236A <AmiBlitz3.ab3@24276>  BRA.w 'doneit
0003236E <AmiBlitz3.ab3@24279>   BSR.w pokecode
00032372 <AmiBlitz3.ab3@24282>   MOVE.w selbne(PC),D1
00032378 <AmiBlitz3.ab3@24285>     TST.b fast
0003237C <AmiBlitz3.ab3@24286>     BEQ 'l1
00032382 <AmiBlitz3.ab3@24287>     ORI.l #$ff,d1
00032386 <AmiBlitz3.ab3@24288>     BSR writeword
0003238A <AmiBlitz3.ab3@24293>   BSR.w writeword
0003238E <AmiBlitz3.ab3@24294>   MOVEA.l firstsel(PC),A0
00032396 <AmiBlitz3.ab3@24295>   MOVE.l destpointer,$8(A0)
0003239A <AmiBlitz3.ab3@24296> BRA.w writeword
0003239E <AmiBlitz3.ab3@24300> pcchk:      Dc.b $3F,$3C,$73,$45                           ;MOVE.W  #$7345,-(A7)   ;#"sE",-(a7) org source
000323A0 <AmiBlitz3.ab3@24301> clrst:      Dc.b $42,$A7                                   ;CLR.L   -(A7)
000323A4 <AmiBlitz3.ab3@24304> sellineat:  Ds.l 1
000323AA <AmiBlitz3.ab3@24310>   TST.b debugmode
000323AE <AmiBlitz3.ab3@24311>    BEQ.w 'norerr
000323B2 <AmiBlitz3.ab3@24312>   MOVE.l pcchk(PC),D1                                      ;move #"sE",-(a7)
000323B6 <AmiBlitz3.ab3@24313>    BSR.w writelong
000323C0 <AmiBlitz3.ab3@24316>   MOVE.l linenumat,sellineat
000323CA <AmiBlitz3.ab3@24319>    MOVE.l destpointer,pushpc
000323D4 <AmiBlitz3.ab3@24320>   MOVE.l hunkoffsetbase,pushoff
000323D6 <AmiBlitz3.ab3@24322>   MOVEQ.l #$00,D2
000323DA <AmiBlitz3.ab3@24323>    BSR.w bakevalu                                          ;Evaluate
000323DE <AmiBlitz3.ab3@24324>    BSR.w pushdo
000323E2 <AmiBlitz3.ab3@24325>   CMP.w #$7,D2
000323E6 <AmiBlitz3.ab3@24326>    BNE.w 'nos
000323EA <AmiBlitz3.ab3@24327>   MOVE.w clrst(PC),D1
000323EE <AmiBlitz3.ab3@24328>    BSR.w writeword
000323F2 <AmiBlitz3.ab3@24331>    BSR.w pushput
000323F6 <AmiBlitz3.ab3@24332>   LEA selpushb(PC),A0
000323FA <AmiBlitz3.ab3@24333>   LEA selpushbf(PC),A1
000323FE <AmiBlitz3.ab3@24334>   CMP.w #$1,D2
00032402 <AmiBlitz3.ab3@24335>    BEQ.w 'doit
00032406 <AmiBlitz3.ab3@24336>   LEA selpushw(PC),A0
0003240A <AmiBlitz3.ab3@24337>   CMP.w #$2,D2
0003240E <AmiBlitz3.ab3@24338>    BEQ.w 'doit
00032412 <AmiBlitz3.ab3@24339>   LEA selpushl(PC),A0
00032416 <AmiBlitz3.ab3@24340>   LEA selpushlf(PC),A1
0003241A <AmiBlitz3.ab3@24341>   CMP.w #$7,D2
0003241E <AmiBlitz3.ab3@24342>    BCS.w 'doit
00032424 <AmiBlitz3.ab3@24344>   MOVE.w moved0a3,D1                                       ;d0 to a3!
00032428 <AmiBlitz3.ab3@24345>    BSR.w writeword
0003242C <AmiBlitz3.ab3@24346>   LEA selpushs(PC),A0
00032430 <AmiBlitz3.ab3@24347>   LEA selpushsf(PC),A1
00032434 <AmiBlitz3.ab3@24348>    BSR.w pokecode
00032438 <AmiBlitz3.ab3@24349>   MOVE.w #$C701,D1     ; was #astring
0003243C <AmiBlitz3.ab3@24350>    BSR.w Atokejsr
00032440 <AmiBlitz3.ab3@24351>  BRA.w 'doneit
00032444 <AmiBlitz3.ab3@24354>   BSR.w pokecode
00032446 <AmiBlitz3.ab3@24357>   MOVEQ.l #$0E,D0
00032448 <AmiBlitz3.ab3@24358>   MOVEQ.l #$01,D1
0003244E <AmiBlitz3.ab3@24359>   MOVEA.l _execbase,A6
00032454 <AmiBlitz3.ab3@24362>   MOVE.l mempool,a0
00032458 <AmiBlitz3.ab3@24363>   JSR _AllocPooled(a6)
0003245A <AmiBlitz3.ab3@24365>   MOVEA.l D0,A0
0003245E <AmiBlitz3.ab3@24366>   MOVE.l firstsel(PC),(A0)
00032464 <AmiBlitz3.ab3@24367>   MOVE.l A0,firstsel
00032468 <AmiBlitz3.ab3@24368>   CLR.l $4(A0)
0003246C <AmiBlitz3.ab3@24369>   CLR.l $8(A0)        ;default mode!
00032470 <AmiBlitz3.ab3@24370>   MOVE.w D2,$C(A0)
00032472 <AmiBlitz3.ab3@24371> RTS
00032478 <AmiBlitz3.ab3@24375>   MOVE.l firstrep,D0
0003247C <AmiBlitz3.ab3@24376>    BEQ.w JUMP_unterr1
00032480 <AmiBlitz3.ab3@24377>   MOVE.w #$6000,D1      ;BRA
00032484 <AmiBlitz3.ab3@24378>   BSR.w writeword
00032486 <AmiBlitz3.ab3@24379>   MOVEA.l D0,A0
0003248A <AmiBlitz3.ab3@24380>   MOVE.l $4(A0),D1      ;dest pc
00032490 <AmiBlitz3.ab3@24381>   SUB.l destpointer,D1
00032492 <AmiBlitz3.ab3@24382>   TST.w D1
00032496 <AmiBlitz3.ab3@24383>    BPL.w JUMP_unterr2
0003249A <AmiBlitz3.ab3@24384>   BSR.w writeword
000324A0 <AmiBlitz3.ab3@24385>   MOVEA.l _execbase,A6
000324A4 <AmiBlitz3.ab3@24386> BRA.w unlinkrep
000324AA <AmiBlitz3.ab3@24388> JUMP_unterr2 JMP unterr2
000324B0 <AmiBlitz3.ab3@24389> JUMP_unterr1 JMP unterr1
000324B6 <AmiBlitz3.ab3@24393>   MOVE.l firstrep,D0
000324BA <AmiBlitz3.ab3@24394>    BEQ.w JUMP_unterr1    ;no repeat!
000324BE <AmiBlitz3.ab3@24395>   BSR.w do_if            ;do the until
000324C4 <AmiBlitz3.ab3@24397>   JSR reget
000324C8 <AmiBlitz3.ab3@24398>    BNE.w JUMP_syntaxerr
000324CE <AmiBlitz3.ab3@24400>   MOVE.w dontwrite_nomemleft,D1
000324D2 <AmiBlitz3.ab3@24401>    BNE.w 'skip
000324D8 <AmiBlitz3.ab3@24402>   MOVEA.l firstrep,A0
000324DE <AmiBlitz3.ab3@24403>   MOVEA.l destpointer,A1
000324E4 <AmiBlitz3.ab3@24406>     TST.b fast
000324E8 <AmiBlitz3.ab3@24407>     BEQ 'l1
000324EA <AmiBlitz3.ab3@24408>     SUBQ.w #4,a1
000324EE <AmiBlitz3.ab3@24409>     MOVE.l $4(A0),D2
000324F0 <AmiBlitz3.ab3@24410>     SUB.l A1,D2
000324F2 <AmiBlitz3.ab3@24411>     MOVE.l d2,(a1)
000324F6 <AmiBlitz3.ab3@24412>   BRA 'skip
000324F8 <AmiBlitz3.ab3@24417>   SUBQ.w #2,A1
000324FC <AmiBlitz3.ab3@24418>   MOVE.l $4(A0),D2    ;dest pc.
000324FE <AmiBlitz3.ab3@24419>   SUB.l A1,D2
00032500 <AmiBlitz3.ab3@24420>   TST.w D2
00032504 <AmiBlitz3.ab3@24421>    BPL.w JUMP_unterr2
00032506 <AmiBlitz3.ab3@24422>   MOVE.w D2,(A1)      ;put in pra dest.
0003250C <AmiBlitz3.ab3@24425>   MOVEA.l firstiff,A1
00032512 <AmiBlitz3.ab3@24426>   MOVE.l (A1),firstiff
00032514 <AmiBlitz3.ab3@24427>   MOVEQ.l #$0E,D0
0003251A <AmiBlitz3.ab3@24428>   MOVEA.l _execbase,A6
00032520 <AmiBlitz3.ab3@24431>   MOVE.l mempool,a0
00032524 <AmiBlitz3.ab3@24432>   JSR _FreePooled(A6)
0003252A <AmiBlitz3.ab3@24436>   MOVEA.l firstrep,A1
00032530 <AmiBlitz3.ab3@24437>   MOVE.l (A1),firstrep
00032532 <AmiBlitz3.ab3@24438>   MOVEQ.l #$08,D0
00032538 <AmiBlitz3.ab3@24441>   MOVE.l mempool,a0
0003253C <AmiBlitz3.ab3@24442> JMP _FreePooled(A6)
00032540 <AmiBlitz3.ab3@24445> iflineat:   Ds.l 1
00032542 <AmiBlitz3.ab3@24449>   MOVEQ.l #$00,D2   ;negate flag
00032548 <AmiBlitz3.ab3@24451>   TST.b fast
0003254C <AmiBlitz3.ab3@24452>   BEQ 'l1
00032554 <AmiBlitz3.ab3@24453>   MOVE.b #1,nostringopt
0003255C <AmiBlitz3.ab3@24454>   MOVE.b #1,iniffcommand
0003255E <AmiBlitz3.ab3@24459>   MOVEQ.l #$00,D1  ;if flag
00032560 <AmiBlitz3.ab3@24465>   MOVE.w D1,-(A7)
00032566 <AmiBlitz3.ab3@24466>   MOVE.l destpointer,-(A7)
00032568 <AmiBlitz3.ab3@24467>   MOVE.w D2,-(A7)
00032572 <AmiBlitz3.ab3@24468>   MOVE.l linenumat,iflineat
00032574 <AmiBlitz3.ab3@24470>   MOVEQ.l #$00,D2
0003257E <AmiBlitz3.ab3@24472>   MOVE.b optistring,optistring2
00032586 <AmiBlitz3.ab3@24473>   MOVE.b #1,optistring
0003258A <AmiBlitz3.ab3@24475>   BSR.w bakevalu       ;Get True/False Expression!
00032594 <AmiBlitz3.ab3@24477>   MOVE.b optistring2,optistring
00032598 <AmiBlitz3.ab3@24479>   CMP.w #$5,D2
0003259C <AmiBlitz3.ab3@24480>    BEQ.w 'float
000325A0 <AmiBlitz3.ab3@24481>   MOVE.w thetst1(PC),D1
000325A4 <AmiBlitz3.ab3@24482>   CMP.w #$1,D2
000325A8 <AmiBlitz3.ab3@24483>    BEQ.w 'writebranchcode
000325AC <AmiBlitz3.ab3@24484>   MOVE.w thetst2(PC),D1
000325B0 <AmiBlitz3.ab3@24485>   CMP.w #$2,D2
000325B4 <AmiBlitz3.ab3@24486>    BEQ.w 'writebranchcode
000325B8 <AmiBlitz3.ab3@24487>   MOVE.w thetst4(PC),D1
000325BC <AmiBlitz3.ab3@24488>   CMP.w #$7,D2
000325C0 <AmiBlitz3.ab3@24489>    BEQ.w 'writebranchcode
000325C4 <AmiBlitz3.ab3@24490>   MOVE.w thetst3(PC),D1
000325C8 <AmiBlitz3.ab3@24491>  BRA.w 'writebranchcode
000325CE <AmiBlitz3.ab3@24495>   TST.b fpu
000325D2 <AmiBlitz3.ab3@24496>   BEQ 'dofpu
000325D8 <AmiBlitz3.ab3@24497>   MOVE.l #$f200003a,d1
000325DC <AmiBlitz3.ab3@24498>   BSR writelong
000325E0 <AmiBlitz3.ab3@24499>   MOVE.w #$f2c1,d1       
000325E4 <AmiBlitz3.ab3@24500>   BSR writeword
000325E8 <AmiBlitz3.ab3@24501>   BSR writelong
000325EA <AmiBlitz3.ab3@24502>   ADDQ.l #2,a7
000325EE <AmiBlitz3.ab3@24503>  BRA.w 'br2
000325F2 <AmiBlitz3.ab3@24507>    MOVE.w #$C900,D1     ;was #getffpbase
000325F6 <AmiBlitz3.ab3@24508>    BSR.w Atokejsr
000325FA <AmiBlitz3.ab3@24509>   MOVE.l thetst5(PC),D1
000325FE <AmiBlitz3.ab3@24510>    BSR.w writelong
00032602 <AmiBlitz3.ab3@24511>  BRA.w 'gotst2
00032608 <AmiBlitz3.ab3@24515>          CLR.b iniffcommand
0003260E <AmiBlitz3.ab3@24516>          TST.b fast                                        ;branchcode
00032612 <AmiBlitz3.ab3@24517>          BEQ 'b6
00032618 <AmiBlitz3.ab3@24518>          TST.b fpu
0003261C <AmiBlitz3.ab3@24519>          BEQ 'nofpu
00032622 <AmiBlitz3.ab3@24523>           MOVE.l destpointer,a0
00032628 <AmiBlitz3.ab3@24524>          SUB.l load_var_addr,a0
0003262E <AmiBlitz3.ab3@24525>          CMP.l #4,a0
00032632 <AmiBlitz3.ab3@24526>          BEQ 'nofpu
0003263A <AmiBlitz3.ab3@24527>          CMP.l #$f2400014,-4(a4)                           ;<
0003263E <AmiBlitz3.ab3@24528>          BNE 'nolt
00032644 <AmiBlitz3.ab3@24529>          SUBQ.l #2,destpointer
0003264A <AmiBlitz3.ab3@24530>          MOVE.w #$f293,-4(a4)                              ;
0003264E <AmiBlitz3.ab3@24531>  BRA 'brf
00032656 <AmiBlitz3.ab3@24534>   CMP.l #$f2400015,-4(a4)                                  ;<=
0003265A <AmiBlitz3.ab3@24535>          BNE 'nole
00032660 <AmiBlitz3.ab3@24536>          SUBQ.l #2,destpointer
00032666 <AmiBlitz3.ab3@24537>          MOVE.w #$f292,-4(a4)
0003266A <AmiBlitz3.ab3@24538>  BRA 'brf
00032672 <AmiBlitz3.ab3@24541>   CMP.l #$f2400013,-4(a4)                                  ;=>
00032676 <AmiBlitz3.ab3@24542>          BNE 'noge
0003267C <AmiBlitz3.ab3@24543>          SUBQ.l #2,destpointer
00032682 <AmiBlitz3.ab3@24544>          MOVE.w #$f294,-4(a4)
00032686 <AmiBlitz3.ab3@24545>  BRA 'brf
0003268E <AmiBlitz3.ab3@24548>   CMP.l #$f2400012,-4(a4)                                  ;>
00032692 <AmiBlitz3.ab3@24549>          BNE 'nogt
00032698 <AmiBlitz3.ab3@24550>          SUBQ.l #2,destpointer
0003269E <AmiBlitz3.ab3@24551>          MOVE.w #$f295,-4(a4)
000326A2 <AmiBlitz3.ab3@24552>  BRA 'brf
000326AA <AmiBlitz3.ab3@24555>   CMP.l #$f2400001,-4(a4)                                  ;=
000326AE <AmiBlitz3.ab3@24556>          BNE 'noeq
000326B4 <AmiBlitz3.ab3@24557>          SUBQ.l #2,destpointer
000326BA <AmiBlitz3.ab3@24558>          MOVE.w #$f28e,-4(a4)
000326BE <AmiBlitz3.ab3@24559>  BRA 'brf
000326C6 <AmiBlitz3.ab3@24562>   CMP.l #$f240000e,-4(a4)                                  ;<>
000326CA <AmiBlitz3.ab3@24563>          BNE 'none
000326D0 <AmiBlitz3.ab3@24564>          SUBQ.l #2,destpointer
000326D6 <AmiBlitz3.ab3@24565>          MOVE.w #$f281,-4(a4)
000326D8 <AmiBlitz3.ab3@24568>   ADDQ.l #2,a7
000326DE <AmiBlitz3.ab3@24570>     TST.b fast
000326E2 <AmiBlitz3.ab3@24571>     BEQ 'l1
000326E8 <AmiBlitz3.ab3@24572>     OR.b #$40,-3(a4)
000326EC <AmiBlitz3.ab3@24573>     BSR writeword
000326F0 <AmiBlitz3.ab3@24577>   BSR writeword
000326F4 <AmiBlitz3.ab3@24578>  BRA.s 'br2
000326FA <AmiBlitz3.ab3@24582>   MOVE.l destpointer,a0
00032700 <AmiBlitz3.ab3@24583>          SUB.l load_var_addr,a0
00032706 <AmiBlitz3.ab3@24584>          CMP.l #4,a0
0003270A <AmiBlitz3.ab3@24585>          BEQ 'gotst2
00032710 <AmiBlitz3.ab3@24586>          CMP.w #$4eb9,-6(a4)
00032714 <AmiBlitz3.ab3@24587>          BEQ 'b6
0003271A <AmiBlitz3.ab3@24588>          CMP.w #$5ec0,-2(a4)                               ;>
0003271E <AmiBlitz3.ab3@24589>      BNE.s 'lb1
00032724 <AmiBlitz3.ab3@24590>          MOVE.w #$6f00,-2(a4)                              ;ble
00032728 <AmiBlitz3.ab3@24591>  BRA.s 'br
0003272E <AmiBlitz3.ab3@24594>   CMP.w #$5dc0,-2(a4)                                       ;<
00032732 <AmiBlitz3.ab3@24595>   BNE.s 'lb2
00032738 <AmiBlitz3.ab3@24596>          MOVE.w #$6c00,-2(a4)                              ;bge
0003273C <AmiBlitz3.ab3@24597>  BRA.s 'br
00032742 <AmiBlitz3.ab3@24600>   CMP.w #$57c0,-2(a4)                                      ;=
00032746 <AmiBlitz3.ab3@24601>   BNE.s 'lb3
0003274C <AmiBlitz3.ab3@24602>          MOVE.w #$6600,-2(a4)                              ;bne
00032750 <AmiBlitz3.ab3@24603>  BRA.s 'br
00032756 <AmiBlitz3.ab3@24606>   CMP.w #$56c0,-2(a4)                                      ;<>
0003275A <AmiBlitz3.ab3@24607>   BNE.s 'lb4
00032760 <AmiBlitz3.ab3@24608>          MOVE.w #$6700,-2(a4)                              ;beq
00032764 <AmiBlitz3.ab3@24609>  BRA.s 'br
0003276A <AmiBlitz3.ab3@24612>   CMP.w #$5cc0,-2(a4)                                      ;>=
0003276E <AmiBlitz3.ab3@24613>   BNE.s 'lb5
00032774 <AmiBlitz3.ab3@24614>          MOVE.w #$6d00,-2(a4)                              ;blt
00032778 <AmiBlitz3.ab3@24615>  BRA.s 'br
0003277E <AmiBlitz3.ab3@24618>   CMP.w #$5fc0,-2(a4)                                      ;<=
00032782 <AmiBlitz3.ab3@24619>         BNE.s 'b6
00032788 <AmiBlitz3.ab3@24620>          MOVE.w #$6e00,-2(a4)                              ;bgt
0003278A <AmiBlitz3.ab3@24623>   TST.w (a7)+
00032790 <AmiBlitz3.ab3@24625>         TST.b fast
00032794 <AmiBlitz3.ab3@24626>         BEQ 'l1a
0003279A <AmiBlitz3.ab3@24627>         OR.b #$ff,-1(a4)                                   ;long branches
0003279E <AmiBlitz3.ab3@24628>         BSR writeword
000327A2 <AmiBlitz3.ab3@24632>         BSR writeword
000327A6 <AmiBlitz3.ab3@24633>  BRA.s 'br2
000327AA <AmiBlitz3.ab3@24637>   BSR.w writeword
000327AE <AmiBlitz3.ab3@24640>   MOVE.l posbr(PC),D1
000327B0 <AmiBlitz3.ab3@24641>   TST.w (A7)+
000327B4 <AmiBlitz3.ab3@24642>    BEQ.w 'skip
000327B8 <AmiBlitz3.ab3@24643>   MOVE.l negbr(PC),D1
000327BE <AmiBlitz3.ab3@24647>   TST.b fast
000327C2 <AmiBlitz3.ab3@24648>            BEQ 'l1b
000327C8 <AmiBlitz3.ab3@24649>            OR.l #$00ff0000,d1
000327CC <AmiBlitz3.ab3@24650>            BSR writelong
000327D0 <AmiBlitz3.ab3@24651>            BSR writeword
000327D4 <AmiBlitz3.ab3@24652>  BRA 'br2
000327D8 <AmiBlitz3.ab3@24655>   BSR.w writelong
000327DA <AmiBlitz3.ab3@24659>   MOVEQ.l #$0E,D0
000327DC <AmiBlitz3.ab3@24660>   MOVEQ.l #$01,D1
000327E2 <AmiBlitz3.ab3@24661>   MOVEA.l _execbase,A6
000327E8 <AmiBlitz3.ab3@24664>   MOVE.l mempool,a0
000327EC <AmiBlitz3.ab3@24665>   JSR _AllocPooled(a6)
000327EE <AmiBlitz3.ab3@24668>   MOVEA.l D0,A0
000327F4 <AmiBlitz3.ab3@24669>   MOVE.l firstiff,(A0)
000327FA <AmiBlitz3.ab3@24670>   MOVE.l A0,firstiff
000327FE <AmiBlitz3.ab3@24671>   MOVE.l (A7)+,$4(A0)
00032806 <AmiBlitz3.ab3@24672>   MOVE.l destpointer,$8(A0)
0003280A <AmiBlitz3.ab3@24673>   MOVE.w (A7)+,$C(A0)
00032810 <AmiBlitz3.ab3@24674>    JSR reget
00032814 <AmiBlitz3.ab3@24675>    BEQ.w ifdone
0003281A <AmiBlitz3.ab3@24676>   BSET #$7,$C(A0)    ;one liner
00032824 <AmiBlitz3.ab3@24682>   MOVE.w oldqflag,instringon
0003282A <AmiBlitz3.ab3@24683>   MOVEA.l lastsourcepos,A5
00032832 <AmiBlitz3.ab3@24685>   MOVE.w #$003A,lastchar      ; ':'
00032834 <AmiBlitz3.ab3@24688> RTS
00032838 <AmiBlitz3.ab3@24692>   CMP.w #$1,D0     ;4
0003283C <AmiBlitz3.ab3@24693>    BLT.w gc1skip   ;4
00032840 <AmiBlitz3.ab3@24694>   CMP.w #$0,D0     ;2
00032844 <AmiBlitz3.ab3@24695>    BGT.w gc1skip
00032846 <AmiBlitz3.ab3@24696>   ADD.w D0,D0
00032848 <AmiBlitz3.ab3@24697>   ADD.w D0,D0
0003284C <AmiBlitz3.ab3@24698>   MOVEA.l gc1labs-4(PC,D0.W),A0
0003284E <AmiBlitz3.ab3@24699>  JMP (A0)
00032852 <AmiBlitz3.ab3@24702>  BRA.w gc1skip
00032856 <AmiBlitz3.ab3@24708>   CMP.w #$1,D0     ;4
0003285A <AmiBlitz3.ab3@24709>    BLT.w gc2skip   ;4
0003285E <AmiBlitz3.ab3@24710>   CMP.w #$0,D0     ;2
00032862 <AmiBlitz3.ab3@24711>    BGT.w gc2skip
00032864 <AmiBlitz3.ab3@24712>   ADD.w D0,D0
00032866 <AmiBlitz3.ab3@24713>   ADD.w D0,D0
0003286A <AmiBlitz3.ab3@24714>   MOVEA.l gc2labs-4(PC,D0.W),A0
0003286C <AmiBlitz3.ab3@24715>   JSR (A0)
00032870 <AmiBlitz3.ab3@24718>  BRA.w gc2skip
00032874 <AmiBlitz3.ab3@24724>   CMP.w #$1,D0    ;4
00032878 <AmiBlitz3.ab3@24725>    BLT.w gc3skip  ;4
0003287C <AmiBlitz3.ab3@24726>   CMP.w #$0,D0    ;2
00032880 <AmiBlitz3.ab3@24727>    BGT.w gc3skip
00032882 <AmiBlitz3.ab3@24728>   ADD.w D0,D0
00032884 <AmiBlitz3.ab3@24729>   ADD.w D0,D0
00032888 <AmiBlitz3.ab3@24730>   MOVEA.l gc3labs-4(PC,D0.W),A0
0003288C <AmiBlitz3.ab3@24733>   MOVE.w #$6753,-(A7)                                      ;#'gS' ;for runtime error checking!
0003288E <AmiBlitz3.ab3@24734>    JSR (A0)
00032892 <AmiBlitz3.ab3@24737>  BRA.w gc3skip
00032894 <AmiBlitz3.ab3@24742> labcnt:   Ds.w 1
00032896 <AmiBlitz3.ab3@24749>   MOVEQ.l #$02,D2
0003289A <AmiBlitz3.ab3@24750>    BSR.w bakeval
0003289E <AmiBlitz3.ab3@24752>   LEA ongotocode(PC),A0
000328A2 <AmiBlitz3.ab3@24753>   LEA ongotocodef(PC),A1
000328A6 <AmiBlitz3.ab3@24754>   MOVE.w #gc1skip-ongotocode,D1      ; is #$001A
000328AA <AmiBlitz3.ab3@24755>   CMP.w #-$7FFB,D0                   ; was #$8005
000328AE <AmiBlitz3.ab3@24756>    BEQ.w 'isok
000328B2 <AmiBlitz3.ab3@24757>   CMP.w #-$7FFA,D0                   ; was #$8006
000328B6 <AmiBlitz3.ab3@24758>    BNE.w JUMP_syntaxerr
000328BA <AmiBlitz3.ab3@24759>   LEA ongosubcode(PC),A0
000328BE <AmiBlitz3.ab3@24760>   LEA ongosubcodef(PC),A1
000328C2 <AmiBlitz3.ab3@24761>   MOVE.w #gc2skip-ongosubcode,D1     ; is #$001A
000328C8 <AmiBlitz3.ab3@24763>   TST.b debugmode
000328CC <AmiBlitz3.ab3@24764>    BEQ.b 'isok
000328D2 <AmiBlitz3.ab3@24766>    JSR chkstak
000328D6 <AmiBlitz3.ab3@24767>   LEA ongcode(PC),A0
000328DA <AmiBlitz3.ab3@24768>   LEA ongcodef(PC),A1
000328DE <AmiBlitz3.ab3@24769>   MOVE.w #gc3skip-ongcode,D1         ; is #$001E
000328E0 <AmiBlitz3.ab3@24772>   MOVE.w D1,-(A7)
000328E6 <AmiBlitz3.ab3@24773>   MOVE.l destpointer,-(A7)                                 ;for when we know number of labels!
000328EA <AmiBlitz3.ab3@24774>    BSR.w pokecode
000328F0 <AmiBlitz3.ab3@24775>   CLR.w labcnt
000328F6 <AmiBlitz3.ab3@24781>    JSR get1bytemain
000328FC <AmiBlitz3.ab3@24782>   SUBQ.l #2,destpointer                                    ;for makealab!
00032900 <AmiBlitz3.ab3@24783>    BSR.w makealab2
00032906 <AmiBlitz3.ab3@24784>   ADDQ.l #2,destpointer
0003290C <AmiBlitz3.ab3@24785>    JSR addoff
00032910 <AmiBlitz3.ab3@24786>   MOVE.l $8(A2),D1
00032914 <AmiBlitz3.ab3@24787>    BSR.w writelong
0003291A <AmiBlitz3.ab3@24788>   ADDQ.w #1,labcnt
00032920 <AmiBlitz3.ab3@24789>    JSR reget
00032924 <AmiBlitz3.ab3@24790>   CMP.w #$2C,D0 ; ','
00032928 <AmiBlitz3.ab3@24791>    BEQ.w 'loop
0003292A <AmiBlitz3.ab3@24793>   MOVEA.l (A7)+,A0
0003292C <AmiBlitz3.ab3@24794>   MOVE.w (A7)+,D2
00032932 <AmiBlitz3.ab3@24795>   MOVE.w dontwrite_nomemleft,D1
00032936 <AmiBlitz3.ab3@24796>    BNE.w 'done
0003293A <AmiBlitz3.ab3@24798>   MOVE.w labcnt(PC),D1
0003293E <AmiBlitz3.ab3@24799>   MOVE.w D1,$A(A0)       ;for cmp#
00032940 <AmiBlitz3.ab3@24800>   ADD.w D1,D1
00032942 <AmiBlitz3.ab3@24801>   ADD.w D1,D1
00032944 <AmiBlitz3.ab3@24802>   ADDQ.w #2,D1
00032948 <AmiBlitz3.ab3@24803>   MOVE.w D1,$2(A0,D2.W)  ;for bra!
0003294A <AmiBlitz3.ab3@24806> RTS
00032950 <AmiBlitz3.ab3@24810>   TST.b debugmode
00032954 <AmiBlitz3.ab3@24811>    BEQ.w 'noerr
0003295A <AmiBlitz3.ab3@24813>    JSR chkstak
00032960 <AmiBlitz3.ab3@24814>   MOVE.l goset,D1
00032964 <AmiBlitz3.ab3@24815>    BSR.w writelong
0003296A <AmiBlitz3.ab3@24818>   MOVE.w gosubcode,D1
0003296E <AmiBlitz3.ab3@24819> BRA.w dogoto2
00032974 <AmiBlitz3.ab3@24823>   MOVE.w gotocode,D1
00032976 <AmiBlitz3.ab3@24826>   MOVE.w D1,-(A7)
0003297A <AmiBlitz3.ab3@24827>    BSR.w makealab2
0003297C <AmiBlitz3.ab3@24828>   MOVE.w (A7)+,D1
00032980 <AmiBlitz3.ab3@24829>    BSR.w writeword
00032986 <AmiBlitz3.ab3@24830>    JSR addoff
0003298A <AmiBlitz3.ab3@24831>   MOVE.l $8(A2),D1
0003298E <AmiBlitz3.ab3@24832> BRA.w writelong
00032994 <AmiBlitz3.ab3@24836>   MOVE.w proceduremode,D1
00032998 <AmiBlitz3.ab3@24837>    BEQ.w JUMP_badpenderr
0003299C <AmiBlitz3.ab3@24839>   MOVE.w #$4EF9,D1
000329A0 <AmiBlitz3.ab3@24840>    BSR.w writeword
000329A6 <AmiBlitz3.ab3@24841>    JSR addoff
000329AC <AmiBlitz3.ab3@24843>   MOVEA.l _execbase,A6
000329AE <AmiBlitz3.ab3@24844>   MOVEQ.l #$08,D0
000329B0 <AmiBlitz3.ab3@24845>   MOVEQ.l #$01,D1
000329B6 <AmiBlitz3.ab3@24848>   MOVE.l mempool,a0
000329BA <AmiBlitz3.ab3@24849>   JSR _AllocPooled(a6)
000329BC <AmiBlitz3.ab3@24851>   MOVEA.l D0,A0
000329C2 <AmiBlitz3.ab3@24852>   MOVE.l firstpend,(A0)
000329C8 <AmiBlitz3.ab3@24853>   MOVE.l A0,firstpend
000329D0 <AmiBlitz3.ab3@24854>   MOVE.l destpointer,$4(A0)
000329D4 <AmiBlitz3.ab3@24856> BRA.w writelong
000329D8 <AmiBlitz3.ab3@24860>   BSR.w do_AsmExit
000329DE <AmiBlitz3.ab3@24861> JMP get1bytemain
000329E6 <AmiBlitz3.ab3@24866>   MOVE.b #1,nostringopt
000329EA <AmiBlitz3.ab3@24867>   MOVEM.l a0/a1/d1,-(a7)
000329F0 <AmiBlitz3.ab3@24869>   MOVEA.l currentfunction,A0
000329F6 <AmiBlitz3.ab3@24871>     CMP.l #0,a0
000329FA <AmiBlitz3.ab3@24872>     BNE 'l1
00032A00 <AmiBlitz3.ab3@24873>     JMP errorasmexit
00032A02 <AmiBlitz3.ab3@24876>   MOVEQ.l #$00,D2
00032A06 <AmiBlitz3.ab3@24878>   MOVE.b $5(A0),D2      ;type returning!
00032A0A <AmiBlitz3.ab3@24879>   BSR.w eval            ;put return val in d0.
00032A10 <AmiBlitz3.ab3@24882>   MOVEA.l currentfunction,A0
00032A14 <AmiBlitz3.ab3@24883>   MOVE.l funcstruct_returntype(a0),a0
00032A1A <AmiBlitz3.ab3@24884>   CMP.l #0,a0
00032A1E <AmiBlitz3.ab3@24885>   BEQ 'isstatement
00032A26 <AmiBlitz3.ab3@24886>   CMP.l #$100,4(a0)
00032A2A <AmiBlitz3.ab3@24887>   BLT.w 'isvar
00032A2C <AmiBlitz3.ab3@24888>   MOVE.l a2,a1
00032A32 <AmiBlitz3.ab3@24889>   TST.l typetocast
00032A36 <AmiBlitz3.ab3@24890>   BEQ 'nocast
00032A3C <AmiBlitz3.ab3@24891>   MOVE.l typetocast,a1
00032A3E <AmiBlitz3.ab3@24894>   CMP.l a0,a1
00032A42 <AmiBlitz3.ab3@24895>   BEQ 'ok
00032A48 <AmiBlitz3.ab3@24896>   CLR.l typetocast
00032A4E <AmiBlitz3.ab3@24897>   MOVE.l lasttoken,d1
00032A52 <AmiBlitz3.ab3@24898>   CMP.w #NullTokenID,d1                   ;$b581 ok, when token for null
00032A56 <AmiBlitz3.ab3@24899>   BEQ 'isnull
00032A5C <AmiBlitz3.ab3@24902>   JMP errorconvertreturntype
00032A60 <AmiBlitz3.ab3@24911>   MOVEM.l (a7)+,a0/a1/d1
00032A64 <AmiBlitz3.ab3@24914> BRA.w do_AsmExit
00032A6A <AmiBlitz3.ab3@24916> error_convert_types2 JMP error_convert_types
00032A70 <AmiBlitz3.ab3@24932>   TST.b debugmode
00032A74 <AmiBlitz3.ab3@24933>    BEQ.w normret
00032A78 <AmiBlitz3.ab3@24934>   MOVE.w #$C305,D1        ; was #chkret,
00032A7C <AmiBlitz3.ab3@24935> BRA.w Atokejsr
00032A80 <AmiBlitz3.ab3@24942>   MOVE.w #$4E75,D1
00032A84 <AmiBlitz3.ab3@24943> BRA.w writeword
00032A88 <AmiBlitz3.ab3@24946> localslist:  Ds.l 1                                        ;all locals for procs.;??Looks like obsovled data??
00032A8C <AmiBlitz3.ab3@24947> proclocals:  Ds.l 1                                        ;for debugga!
00032A8E <AmiBlitz3.ab3@24948> procnum:     Ds.w 1
00032A90 <AmiBlitz3.ab3@24949> procnum2:    Ds.w 1
00032A94 <AmiBlitz3.ab3@24950> prolineat:   Ds.l 1
00032A9A <AmiBlitz3.ab3@24955>    TST.w proceduremode
00032A9E <AmiBlitz3.ab3@24956>    BGT JUMP_sreterr
00032AA2 <AmiBlitz3.ab3@24958>    CMP.w #-$7FF9,D0     ;was #$8007
00032AA6 <AmiBlitz3.ab3@24959>    BEQ.w stateret
00032AA8 <AmiBlitz3.ab3@24960>    MOVEQ.l #-$01,D1  ;statement flag
00032AAC <AmiBlitz3.ab3@24961> BRA.w do_function2
00032AB2 <AmiBlitz3.ab3@24963> JUMP_sreterr JMP sreterr
00032AB8 <AmiBlitz3.ab3@24967>   CLR.b skipfunc
00032ABE <AmiBlitz3.ab3@24968>   TST.l unusedfunc
00032AC2 <AmiBlitz3.ab3@24969>   BEQ 'ex
00032AC6 <AmiBlitz3.ab3@24970>   MOVEM.l d0-d7/a0-a6,-(a7)
00032ACC <AmiBlitz3.ab3@24971>   MOVE.l unusedfunc,d1
00032AD2 <AmiBlitz3.ab3@24972>   LEA ptr_parameterstore,a5
00032AD4 <AmiBlitz3.ab3@24975>   MOVE.l d1,a0
00032AD8 <AmiBlitz3.ab3@24976>   LEA 12(a0),a2
00032ADA <AmiBlitz3.ab3@24977>   MOVE.l a5,a1
00032ADC <AmiBlitz3.ab3@24979>   CMPM.b (a1)+,(a2)+
00032AE0 <AmiBlitz3.ab3@24980>   BNE 'neq
00032AE2 <AmiBlitz3.ab3@24981>   TST.b (a2)
00032AE6 <AmiBlitz3.ab3@24982>   BNE 'ch
00032AE8 <AmiBlitz3.ab3@24983>   TST.b (a1)
00032AEC <AmiBlitz3.ab3@24984>   BNE 'neq
00032AF4 <AmiBlitz3.ab3@24985>   MOVE.b #1,skipfunc
00032AF8 <AmiBlitz3.ab3@24986>  BRA 'out
00032AFA <AmiBlitz3.ab3@24989>   MOVE.l (a0),d1
00032AFE <AmiBlitz3.ab3@24990>   BNE 'ag
00032B02 <AmiBlitz3.ab3@24993>   MOVEM.l (a7)+,d0-d7/a0-a6
00032B04 <AmiBlitz3.ab3@24996> RTS
00032B0A <AmiBlitz3.ab3@24999> JUMP_dupprocerr  JMP dupprocerr
00032B10 <AmiBlitz3.ab3@25000> JUMP_illprocperr JMP illprocperr
00032B16 <AmiBlitz3.ab3@25001> JUMP_toovarerr   JMP toovarerr
00032B1C <AmiBlitz3.ab3@25002> JUMP_more6pard   JMP more6pard
00032B24 <AmiBlitz3.ab3@25006>   CMP.w #-1,proceduremode                                  
00032B28 <AmiBlitz3.ab3@25007>    BEQ JUMP_sreterr
00032B2C <AmiBlitz3.ab3@25008>   CMP.w #-$7FF9,D0      ; was #$8007
00032B30 <AmiBlitz3.ab3@25009>    BEQ.w do_function_return
00032B3A <AmiBlitz3.ab3@25013>   MOVE.w oldqflag,instringon
00032B40 <AmiBlitz3.ab3@25014>   MOVEA.l lastsourcepos,A5
00032B46 <AmiBlitz3.ab3@25016>   JSR getfunctionreturntype
00032B4C <AmiBlitz3.ab3@25017>   JSR get1bytemain
00032B52 <AmiBlitz3.ab3@25023>   TST.b declare
00032B56 <AmiBlitz3.ab3@25024>   BEQ 'l3
00032B5E <AmiBlitz3.ab3@25025>   MOVE.b #1,nowdeclare
00032B64 <AmiBlitz3.ab3@25029>   JSR errchx                                           ;writejumpoverfunction
00032B6A <AmiBlitz3.ab3@25033>   CLR.b fastfunc
00032B74 <AmiBlitz3.ab3@25034>   MOVE.l firstiff,firstiffstore
00032B7C <AmiBlitz3.ab3@25035>   CMP.l #"FAST",-1(a5)
00032B80 <AmiBlitz3.ab3@25036>   BNE 'nofast
00032B86 <AmiBlitz3.ab3@25037>   CMP.b #" ",3(a5)
00032B8A <AmiBlitz3.ab3@25038>   BNE 'nofast
00032B8C <AmiBlitz3.ab3@25039>   ADDQ.l #3,a5
00032B90 <AmiBlitz3.ab3@25042>     CMP.b #" ",(a5)
00032B94 <AmiBlitz3.ab3@25043>      BNE 'x1
00032B96 <AmiBlitz3.ab3@25044>     ADDQ #1,a5
00032B9A <AmiBlitz3.ab3@25045>  BRA 'x2
00032BA0 <AmiBlitz3.ab3@25048>   MOVE.l a5,lastsourcepos
00032BA8 <AmiBlitz3.ab3@25049>   MOVE.b #1,fastfunc
00032BB0 <AmiBlitz3.ab3@25052>   CMP.l #"NOOP",-1(a5)                                     ;compile 3* so its deactivate
00032BB4 <AmiBlitz3.ab3@25053>  BRA 'noopt
00032BBA <AmiBlitz3.ab3@25055>   CMP.w #"T ",3(a5)                                        ;??Looks like dead code??
00032BBE <AmiBlitz3.ab3@25056>   BNE 'noopt                                               ;          "
00032BC0 <AmiBlitz3.ab3@25057>   ADDQ.l #4,a5                                             ;          "
00032BC4 <AmiBlitz3.ab3@25060>     CMP.b #" ",(a5)                                        ;          "
00032BC8 <AmiBlitz3.ab3@25061>      BNE 'x1b                                              ;          "
00032BCA <AmiBlitz3.ab3@25062>     ADDQ #1,a5                                             ;          "
00032BCE <AmiBlitz3.ab3@25063>  BRA 'x2b
00032BD4 <AmiBlitz3.ab3@25066>   MOVE.l a5,lastsourcepos                                  ;          "
00032BDA <AmiBlitz3.ab3@25067>   JSR makename2                                            ;          "
00032BDE <AmiBlitz3.ab3@25068>  BRA 'l1                                                   ;          "
00032BE4 <AmiBlitz3.ab3@25071>   JSR makename2
00032BEA <AmiBlitz3.ab3@25072>   JSR checkused
00032BF0 <AmiBlitz3.ab3@25073>   TST.b skipfunc
00032BF4 <AmiBlitz3.ab3@25074>    BEQ 'l1
00032BFA <AmiBlitz3.ab3@25075>   JSR skipme
00032C00 <AmiBlitz3.ab3@25076>   CLR.b fastfunc
00032C02 <AmiBlitz3.ab3@25077>  RTS
00032C0C <AmiBlitz3.ab3@25081>   MOVE.l linenumat,prolineat
00032C12 <AmiBlitz3.ab3@25083>   ADDQ.w #1,procnum2
00032C1A <AmiBlitz3.ab3@25084>   MOVE.w procnum2(PC),procnum
00032C20 <AmiBlitz3.ab3@25085>   MOVE.w D1,proceduremode
00032C26 <AmiBlitz3.ab3@25086>   CLR.w locvaroff
00032C2A <AmiBlitz3.ab3@25088>   CMP.w #$7B,D0   ;'{'
00032C2E <AmiBlitz3.ab3@25089>    BNE.w JUMP_syntaxerr
00032C36 <AmiBlitz3.ab3@25091>    MOVE.b #1,infunctioncode
00032C3C <AmiBlitz3.ab3@25093>   MOVEA.l tempvm,A0
00032C44 <AmiBlitz3.ab3@25094>   MOVE.w $C(A0),memlibstat
00032C4A <AmiBlitz3.ab3@25095>   BCLR #$7,$C(A0)                                          ;Bit out of range
00032C4E <AmiBlitz3.ab3@25096>   MOVE.w #$4EF9,D1  ;make a jump around the proc
00032C52 <AmiBlitz3.ab3@25097>    BSR.w writeword
00032C58 <AmiBlitz3.ab3@25098>    JSR addoff
00032C5C <AmiBlitz3.ab3@25099>    BSR.w writelong
00032C62 <AmiBlitz3.ab3@25101>    JSR findproc                                          ;findproc function
00032C66 <AmiBlitz3.ab3@25102>    BEQ.w JUMP_dupprocerr
00032C6C <AmiBlitz3.ab3@25103>    JSR addlabel
00032C72 <AmiBlitz3.ab3@25105>    MOVE.b #31,$20(a2)                                      ;increase if more pars
00032C78 <AmiBlitz3.ab3@25106>    MOVE.b #0,isfunc(a2)
00032C80 <AmiBlitz3.ab3@25107>    MOVE.l functionreturntype,funcstruct_returntype(a2)
00032C88 <AmiBlitz3.ab3@25109>   MOVE.l destpointer,$E(A2)    ;new!
00032C8E <AmiBlitz3.ab3@25110>   MOVE.l A2,currentfunction
00032C94 <AmiBlitz3.ab3@25112>   LEA nops8,A0
00032C9A <AmiBlitz3.ab3@25113>   LEA nopsf,A1
00032C9E <AmiBlitz3.ab3@25114>    BSR.w pokecode2
00032CA4 <AmiBlitz3.ab3@25116>   TST.b debugmode
00032CA8 <AmiBlitz3.ab3@25117>    BEQ.b 'nodebug
00032CAA <AmiBlitz3.ab3@25119>   MOVEQ.l #$04,D1
00032CB0 <AmiBlitz3.ab3@25120>    JSR writetrap
00032CBA <AmiBlitz3.ab3@25121>   MOVE.l destpointer,proclocals
00032CBE <AmiBlitz3.ab3@25122>    BSR.w writelong
00032CC2 <AmiBlitz3.ab3@25123>    BSR.w writelong
00032CC6 <AmiBlitz3.ab3@25126>    LEA $16(A2),A4
00032CCE <AmiBlitz3.ab3@25127>   MOVE.b proceduremode+1,$5(A2)
00032CD0 <AmiBlitz3.ab3@25128>   MOVEQ.l #$00,D6
00032CD2 <AmiBlitz3.ab3@25129>   MOVEQ.l #$00,D5
00032CD8 <AmiBlitz3.ab3@25130>    JSR get1bytemain
00032CDC <AmiBlitz3.ab3@25131>   CMP.w #$7D,D0        ; '}'
00032CE0 <AmiBlitz3.ab3@25132>    BEQ.w 'done
00032CE4 <AmiBlitz3.ab3@25136>    CMP.b #"@",d0
00032CE8 <AmiBlitz3.ab3@25137>    BNE 'l2
00032CEA <AmiBlitz3.ab3@25138>    MOVE.l a0,-(a7)
00032CF0 <AmiBlitz3.ab3@25139>    MOVE.l currentfunction,a0
00032CF6 <AmiBlitz3.ab3@25140>    CMP.b #31,$20(a0)                                       ;increase if morepars
00032CFA <AmiBlitz3.ab3@25141>    BNE 'l4
00032CFE <AmiBlitz3.ab3@25142>    MOVE.b d6,$20(a0)                                       ;increase if morepar
00032D04 <AmiBlitz3.ab3@25145>    JSR get1bytemain
00032D06 <AmiBlitz3.ab3@25146>    MOVE.l (a7)+,a0
00032D0A <AmiBlitz3.ab3@25150>    BSR.w getparameter
00032D0E <AmiBlitz3.ab3@25151>    BSR.w fetchvars
00032D16 <AmiBlitz3.ab3@25152>   CMPI.l #$7,$4(A2)
00032D1A <AmiBlitz3.ab3@25153>    BNE.w 'notst
00032D20 <AmiBlitz3.ab3@25154>   LEA stbuff,A0
00032D22 <AmiBlitz3.ab3@25155>   MOVE.w D5,D1
00032D24 <AmiBlitz3.ab3@25156>   LSL.w #2,D1
00032D28 <AmiBlitz3.ab3@25157>   MOVE.w D6,$0(A0,D1.W)
00032D2E <AmiBlitz3.ab3@25158>   MOVE.w $4(A3),$2(A0,D1.W)
00032D30 <AmiBlitz3.ab3@25159>   ADDQ.w #1,D5
00032D32 <AmiBlitz3.ab3@25160>   MOVEQ.l #$07,D2
00032D36 <AmiBlitz3.ab3@25161>  BRA.w 'pgot
00032D3A <AmiBlitz3.ab3@25164>   MOVE.w #$2940,D1
00032D3C <AmiBlitz3.ab3@25165>   MOVEQ.l #$03,D2
00032D44 <AmiBlitz3.ab3@25166>   BTST #$0,flagmask+1
00032D48 <AmiBlitz3.ab3@25167>    BNE.w 'sgot
00032D50 <AmiBlitz3.ab3@25168>   CMPI.l #$100,$4(A2)
00032D54 <AmiBlitz3.ab3@25169>    BCC.w JUMP_illprocperr
00032D58 <AmiBlitz3.ab3@25170>   MOVE.w $6(A2),D2
00032D5C <AmiBlitz3.ab3@25171>   CMP.w #$2,D2
00032D60 <AmiBlitz3.ab3@25172>    BHI.w 'sgot
00032D64 <AmiBlitz3.ab3@25173>    BEQ.w 'wgot
00032D68 <AmiBlitz3.ab3@25174>   EORI.w #$3000,D1
00032D6C <AmiBlitz3.ab3@25175>  BRA.w 'sgot
00032D70 <AmiBlitz3.ab3@25178>   ORI.w #$1000,D1
00032D72 <AmiBlitz3.ab3@25181>   OR.w D6,D1
00032D78 <AmiBlitz3.ab3@25183>   TST.b fpu
00032D7C <AmiBlitz3.ab3@25184>   BEQ 'nofpu
00032D80 <AmiBlitz3.ab3@25185>   CMP.b #5,d2
00032D84 <AmiBlitz3.ab3@25186>   BNE 'nofpu
00032D88 <AmiBlitz3.ab3@25187>   CMP.w #6,d6
00032D8C <AmiBlitz3.ab3@25188>   BLT 'l10a
00032D92 <AmiBlitz3.ab3@25189>   CMP.l #newtype_double,a2
00032D96 <AmiBlitz3.ab3@25190>   BEQ JUMP_more6pard
00032D9A <AmiBlitz3.ab3@25191>  BRA 'nofpu
00032DA0 <AmiBlitz3.ab3@25194>   MOVE.l #$f22c6400,d1
00032DA4 <AmiBlitz3.ab3@25195>   MOVEM.l d0/a4,-(a7)
00032DA6 <AmiBlitz3.ab3@25196>   MOVE.l d6,d0
00032DA8 <AmiBlitz3.ab3@25197>   ASL.l #7,d0
00032DAA <AmiBlitz3.ab3@25198>   OR.w d0,d1
00032DB0 <AmiBlitz3.ab3@25199>   CMP.l #newtype_double,a2
00032DB4 <AmiBlitz3.ab3@25200>   BNE 'l5
00032DBA <AmiBlitz3.ab3@25201>   OR.l #$1000,d1
00032DBE <AmiBlitz3.ab3@25204>   BSR writelong
00032DC2 <AmiBlitz3.ab3@25205>   MOVE.w 4(a3),d1
00032DC6 <AmiBlitz3.ab3@25206>   BSR writeword
00032DCA <AmiBlitz3.ab3@25207>   MOVEM.l (a7)+,a4/d0
00032DCE <AmiBlitz3.ab3@25208>  BRA 'pgot
00032DD0 <AmiBlitz3.ab3@25212>   MOVE.l A4,-(A7)
00032DD4 <AmiBlitz3.ab3@25214>    CMP.w #6,d6
00032DD8 <AmiBlitz3.ab3@25215>    BLT 'l10
00032DDC <AmiBlitz3.ab3@25216>    MOVE.w #$c500-4,d1                                      ;savetemp+regnum
00032DDE <AmiBlitz3.ab3@25217>    ADD.w d6,d1
00032DE4 <AmiBlitz3.ab3@25218>    JSR Atokejsr
00032DEA <AmiBlitz3.ab3@25219>    TST.w dontwrite_nomemleft
00032DEE <AmiBlitz3.ab3@25220>    BNE 'l10
00032DF4 <AmiBlitz3.ab3@25221>    MOVE.l data1start,d1
00032DFA <AmiBlitz3.ab3@25222>    MOVE.l destpointer,a4
00032DFE <AmiBlitz3.ab3@25223>    ADD.l d1,-6(a4)
00032E04 <AmiBlitz3.ab3@25224>    MOVE.l destpointer,d1
00032E06 <AmiBlitz3.ab3@25225>    SUBQ.l #6,d1
00032E0C <AmiBlitz3.ab3@25226>    SUB.l destbufferstart,d1
00032E0E <AmiBlitz3.ab3@25228>    MOVE.l d2,-(a7)
00032E10 <AmiBlitz3.ab3@25229>    MOVE.l d1,d2
00032E16 <AmiBlitz3.ab3@25230>    JSR addhunkoffset                                       ;move.l $0,-x(a4)
00032E18 <AmiBlitz3.ab3@25231>    MOVE.l (a7)+,d2
00032E1E <AmiBlitz3.ab3@25232>    MOVE.l destpointer,a4
00032E22 <AmiBlitz3.ab3@25233>    CMP.w #2,d2
00032E26 <AmiBlitz3.ab3@25234>    BNE 'nw1
00032E2C <AmiBlitz3.ab3@25236>    MOVE.w #$3979,-8(a4)                                    ;move.w $0,-x(a4)
00032E34 <AmiBlitz3.ab3@25237>    ADD.l #2,-6(a4)
00032E38 <AmiBlitz3.ab3@25240>    CMP.w #1,d2
00032E3C <AmiBlitz3.ab3@25241>    BNE 'nb
00032E42 <AmiBlitz3.ab3@25242>    MOVE.w #$1979,-8(a4)                                    ;move.b $0,-x(a4)
00032E4A <AmiBlitz3.ab3@25243>    ADD.l #3,-6(a4)
00032E50 <AmiBlitz3.ab3@25246>    MOVE.w $4(a3),-2(a4)
00032E54 <AmiBlitz3.ab3@25247>  BRA 'ne1
00032E58 <AmiBlitz3.ab3@25251>   BSR.w writeword                                          ;write storeparameter
00032E5C <AmiBlitz3.ab3@25254>   MOVE.w $4(A3),D1
00032E60 <AmiBlitz3.ab3@25255>    BSR.w writeword
00032E62 <AmiBlitz3.ab3@25258>   MOVEA.l (A7)+,A4
00032E68 <AmiBlitz3.ab3@25262>   CLR.l functionreturntype
00032E6A <AmiBlitz3.ab3@25264>   ADDQ.w #1,D6
00032E6E <AmiBlitz3.ab3@25265>   CMP.w #11,D6          ; was #7                            ;max function parameters
00032E72 <AmiBlitz3.ab3@25266>    BCC.w JUMP_toovarerr
00032E78 <AmiBlitz3.ab3@25268>   MOVE.l currentfunction,a0
00032E7C <AmiBlitz3.ab3@25269>   MOVE.l a2,funcstruct_parametertype-4(a0,d6*4)             ;-4 because d6 is increment before
00032E7E <AmiBlitz3.ab3@25271>   MOVE.b D2,(A4)+
00032E82 <AmiBlitz3.ab3@25272>   CMP.w #$2C,D0      ;','
00032E86 <AmiBlitz3.ab3@25273>    BNE.w 'nomore
00032E8C <AmiBlitz3.ab3@25274>    JSR get1bytemain
00032E90 <AmiBlitz3.ab3@25288>  BRA.w 'more
00032E94 <AmiBlitz3.ab3@25291>   CMP.w #$7D,D0
00032E98 <AmiBlitz3.ab3@25292>    BNE.w JUMP_syntaxerr
00032E9E <AmiBlitz3.ab3@25295>   MOVEA.l currentfunction,A2
00032EA0 <AmiBlitz3.ab3@25296>   LSL.w #4,D5
00032EA2 <AmiBlitz3.ab3@25297>   OR.w D5,D6
00032EA6 <AmiBlitz3.ab3@25298>   MOVE.b D6,$4(A2)
00032EA8 <AmiBlitz3.ab3@25299>   LSR.w #4,D6
00032EAC <AmiBlitz3.ab3@25300>    BEQ.w 'nostrings
00032EB2 <AmiBlitz3.ab3@25301>   LEA stbuff,A0
00032EB4 <AmiBlitz3.ab3@25302>   SUBQ.w #1,D6
00032EB6 <AmiBlitz3.ab3@25308>     MOVE.w D6,D1                                           ;function stringpars
00032EB8 <AmiBlitz3.ab3@25309>     LSL.w #2,D1                                            ;stringsize was 2
00032EBA <AmiBlitz3.ab3@25312>       LSL.w #1,d1
00032EBC <AmiBlitz3.ab3@25313>       ADDQ.w #4,d1
00032EBE <AmiBlitz3.ab3@25316>     ADDQ.w #8,D1
00032EC4 <AmiBlitz3.ab3@25317>     MOVE.w D1,funcst+2
00032ECA <AmiBlitz3.ab3@25318>     MOVE.l funcst,D1
00032ECE <AmiBlitz3.ab3@25319>     BSR.w writelong
00032ED0 <AmiBlitz3.ab3@25320>     MOVE.w (A0)+,D1
00032ED4 <AmiBlitz3.ab3@25322>     CMP.b #5,d1
00032ED8 <AmiBlitz3.ab3@25323>     BLE 's1
00032EDC <AmiBlitz3.ab3@25324>     MOVE.w #$266c,d1                                       ;native move.l 4(a4),a3
00032EE0 <AmiBlitz3.ab3@25325>     BSR writeword    ; was writeinstruction  tomsmart1
00032EE2 <AmiBlitz3.ab3@25326>     MOVE.w D6,D1                                           ;function stringpars
00032EE4 <AmiBlitz3.ab3@25327>     LSL.w #2,D1                                            ;stringsize was 2
00032EE6 <AmiBlitz3.ab3@25329>       LSL.w #1,d1
00032EE8 <AmiBlitz3.ab3@25331>     ADDQ.w #8,D1
00032EEC <AmiBlitz3.ab3@25332>     BSR writeword
00032EF0 <AmiBlitz3.ab3@25333>   BRA 's2
00032EF6 <AmiBlitz3.ab3@25337>     OR.w movedna3,D1
00032EFA <AmiBlitz3.ab3@25338>      BSR.w writeword
00032F00 <AmiBlitz3.ab3@25341>     MOVE.w (A0)+,least+2
00032F06 <AmiBlitz3.ab3@25342>     MOVE.l least,D1
00032F0A <AmiBlitz3.ab3@25343>      BSR.w writelong
00032F0C <AmiBlitz3.ab3@25344>     MOVE.l A0,-(A7)
00032F10 <AmiBlitz3.ab3@25345>     MOVE.w #$C700,D1
00032F14 <AmiBlitz3.ab3@25346>      BSR.w Atokejsr
00032F16 <AmiBlitz3.ab3@25347>     MOVEA.l (A7)+,A0
00032F1A <AmiBlitz3.ab3@25348>   DBF D6,'stloop
00032F20 <AmiBlitz3.ab3@25351> JMP get1bytemain
00032F26 <AmiBlitz3.ab3@25355>   MOVE.w dontwrite_nomemleft,D1
00032F2A <AmiBlitz3.ab3@25356>    BNE.w 'skip
00032F30 <AmiBlitz3.ab3@25357>   MOVE.l destpointer,-(A7)
00032F36 <AmiBlitz3.ab3@25359>   MOVE.l A0,destpointer
00032F3C <AmiBlitz3.ab3@25360>   MOVE.l linksize,D1
00032F40 <AmiBlitz3.ab3@25361>    BSR.w writelong                                         ;writefunctions jumppos
00032F46 <AmiBlitz3.ab3@25363>    TST.b fastfunc
00032F4A <AmiBlitz3.ab3@25364>    BNE 'skip1
00032F4E <AmiBlitz3.ab3@25366>   MOVE.w #$CC00,D1      ; was #clrloc
00032F52 <AmiBlitz3.ab3@25367>    BSR.w tokejsr2                                          ;write clearvars
00032F58 <AmiBlitz3.ab3@25370>   MOVE.l (A7)+,destpointer
00032F5A <AmiBlitz3.ab3@25373> RTS
00032F60 <AmiBlitz3.ab3@25376> JUMP_errormsg_nofast  JMP errormsg_nofast
00032F66 <AmiBlitz3.ab3@25381>   MOVEA.l currentfunction,A2
00032F6A <AmiBlitz3.ab3@25382>   MOVEA.l $E(A2),A0          ;pc of proc
00032F6E <AmiBlitz3.ab3@25383>   MOVE.w $6(A2),D1
00032F72 <AmiBlitz3.ab3@25384>    BEQ.w 'skiplink
00032F78 <AmiBlitz3.ab3@25385>   MOVE.w D1,linksize+2
00032F7C <AmiBlitz3.ab3@25386>   MOVE.w $8(A2),D1                                         ;check if function memalloc need
00032F80 <AmiBlitz3.ab3@25387>    BNE.w 'howdy
00032F82 <AmiBlitz3.ab3@25391>   ADDQ.w #6,A0
00032F86 <AmiBlitz3.ab3@25392>   MOVE.l A0,$E(A2)
00032F8A <AmiBlitz3.ab3@25393>  BRA.w linkput
00032F8C <AmiBlitz3.ab3@25398>   MOVE.l A0,-(A7)
00032F90 <AmiBlitz3.ab3@25399>    BSR.w linkput
00032F92 <AmiBlitz3.ab3@25400>   MOVEA.l (A7)+,A0
00032F96 <AmiBlitz3.ab3@25401>   LEA $A(A0),A0
00032F9C <AmiBlitz3.ab3@25402>   MOVEA.l currentfunction,A2
00032FA0 <AmiBlitz3.ab3@25403>  BRA.w 'cont
00032FA4 <AmiBlitz3.ab3@25406>   MOVE.w $8(A2),D1
00032FA8 <AmiBlitz3.ab3@25407>    BNE.w 'cont
00032FAC <AmiBlitz3.ab3@25408>   LEA $10(A0),A0
00032FB0 <AmiBlitz3.ab3@25409>   MOVE.l A0,$E(A2)
00032FB2 <AmiBlitz3.ab3@25410>  RTS
00032FB8 <AmiBlitz3.ab3@25413>    MOVE.w dontwrite_nomemleft,D1                                     ;writeallocmem for functions (after releasemem called)
00032FBC <AmiBlitz3.ab3@25414>    BNE.w 'contskip
00032FC2 <AmiBlitz3.ab3@25417>    TST.b fastfunc
00032FC6 <AmiBlitz3.ab3@25418>    BNE JUMP_errormsg_nofast
00032FCC <AmiBlitz3.ab3@25420>   MOVE.l destpointer,-(A7)
00032FD2 <AmiBlitz3.ab3@25421>   MOVE.l A0,destpointer
00032FD6 <AmiBlitz3.ab3@25422>   MOVE.w #$4EB9,D1      ;jsr
00032FDA <AmiBlitz3.ab3@25423>    BSR.w writeword
00032FE0 <AmiBlitz3.ab3@25424>    JSR addoff
00032FE4 <AmiBlitz3.ab3@25425>    BSR.w writelong
00032FE6 <AmiBlitz3.ab3@25427>   MOVEA.l (A7)+,A0
00032FEC <AmiBlitz3.ab3@25428>   MOVEA.l destpointer,A1
00032FEE <AmiBlitz3.ab3@25429>   MOVE.l A0,-(A1)
00032FF4 <AmiBlitz3.ab3@25430>   MOVE.l A0,destpointer
00032FF8 <AmiBlitz3.ab3@25433>   MOVE.w $8(A2),D4
00032FFC <AmiBlitz3.ab3@25434>    BPL.w 'linky
00033000 <AmiBlitz3.ab3@25435>   MOVE.w #$C004,D1   ; was  #newmem
00033004 <AmiBlitz3.ab3@25436>    BSR.w tokejsr2
0003300A <AmiBlitz3.ab3@25437>   MOVEA.l currentfunction,A2
0003300E <AmiBlitz3.ab3@25438>   MOVE.w $8(A2),D4
00033012 <AmiBlitz3.ab3@25439>   ANDI.w #$7FFF,D4        ;#32767,
00033016 <AmiBlitz3.ab3@25442>    BEQ.w 'skipstat
0003301A <AmiBlitz3.ab3@25446>   MOVE.b $4(A2),D1
0003301E <AmiBlitz3.ab3@25447>   ANDI.w #$F,D1
00033020 <AmiBlitz3.ab3@25448>   MOVE.w D1,-(A7)
00033024 <AmiBlitz3.ab3@25449>   CMP.w #$5,D1
00033028 <AmiBlitz3.ab3@25450>    BCS.w 'npush
0003302C <AmiBlitz3.ab3@25451>   MOVE.w #$2F04,D1
00033030 <AmiBlitz3.ab3@25452>    BSR.w writeword
00033036 <AmiBlitz3.ab3@25455>   MOVE.l locdatast,D3
0003303C <AmiBlitz3.ab3@25456>    JSR datastart
00033040 <AmiBlitz3.ab3@25457>   MOVE.w #$C501,D1    ; was #localstat
00033044 <AmiBlitz3.ab3@25458>    BSR.w tokejsr2
00033046 <AmiBlitz3.ab3@25460>   MOVE.w (A7)+,D1
0003304A <AmiBlitz3.ab3@25461>   CMP.w #$5,D1
0003304E <AmiBlitz3.ab3@25462>    BCS.w 'skipstat
00033052 <AmiBlitz3.ab3@25463>   MOVE.w #$281F,D1
00033056 <AmiBlitz3.ab3@25464>    BSR.w writeword
0003305A <AmiBlitz3.ab3@25467>   MOVE.w #$4E75,D1
0003305E <AmiBlitz3.ab3@25468> BRA.w writeword
00033064 <AmiBlitz3.ab3@25472>   LEA mwait,A0
0003306A <AmiBlitz3.ab3@25473>   LEA mwaitf,A1
0003306E <AmiBlitz3.ab3@25474> BRA.w pokecode
00033074 <AmiBlitz3.ab3@25477> JUMP_laberr    JMP laberr
0003307A <AmiBlitz3.ab3@25478> JUMP_typeerr   JMP typeerr
00033080 <AmiBlitz3.ab3@25479> JUMP_dupofferr JMP dupofferr
00033084 <AmiBlitz3.ab3@25482>   CMP.w #$2E,D0           ;'.'
00033088 <AmiBlitz3.ab3@25483>   BNE.w JUMP_syntaxerr
0003308E <AmiBlitz3.ab3@25484>   JSR getparameter2
00033092 <AmiBlitz3.ab3@25485>   BEQ.w JUMP_laberr
00033098 <AmiBlitz3.ab3@25486>   LEA newtypebase,A2
0003309E <AmiBlitz3.ab3@25487>   JSR findtype
000330A2 <AmiBlitz3.ab3@25488>   BNE.w 'ok1
000330AA <AmiBlitz3.ab3@25489>   CMPI.l #MaxByte,$4(A2)    ; was #$FF
000330AE <AmiBlitz3.ab3@25490>   BNE.w JUMP_typeerr
000330B2 <AmiBlitz3.ab3@25491>  BRA.w 'ok2
000330B8 <AmiBlitz3.ab3@25494>   JSR addlabel
000330BC <AmiBlitz3.ab3@25497>   CLR.l $4(A2)
000330C2 <AmiBlitz3.ab3@25498>   MOVE.l A2,thistype
000330C8 <AmiBlitz3.ab3@25499>   CLR.l prevtype
000330CE <AmiBlitz3.ab3@25500>   CLR.w typelen
000330D4 <AmiBlitz3.ab3@25501>   CLR.w linemode
000330DA <AmiBlitz3.ab3@25502>   JSR reget
000330DE <AmiBlitz3.ab3@25503>   BNE.w typemode
000330E0 <AmiBlitz3.ab3@25504> RTS
000330E4 <AmiBlitz3.ab3@25508>   CMP.w #-$7FFE,D0      ; was #$8002
000330E8 <AmiBlitz3.ab3@25509>   BEQ.w doend2
000330F2 <AmiBlitz3.ab3@25512>   MOVE.w oldqflag,instringon
000330F8 <AmiBlitz3.ab3@25513>   MOVEA.l lastsourcepos,A5
000330FA <AmiBlitz3.ab3@25515>   MOVEQ.l #$00,D6      ;not pointer
000330FE <AmiBlitz3.ab3@25516>   CMP.w #$2A,D0        ;'*'
00033102 <AmiBlitz3.ab3@25517>   BNE.w 'skip
00033104 <AmiBlitz3.ab3@25518>   MOVEQ.l #$01,D6
0003310A <AmiBlitz3.ab3@25519>   JSR get1bytemain
0003310E <AmiBlitz3.ab3@25520>  BRA.w 'skipv
00033112 <AmiBlitz3.ab3@25523>   CMP.w #$40,D0         ;'@'
00033116 <AmiBlitz3.ab3@25524>   BNE.w 'skipv
00033118 <AmiBlitz3.ab3@25525>   MOVEQ.l #$05,D6
0003311E <AmiBlitz3.ab3@25526>   JSR get1bytemain
00033124 <AmiBlitz3.ab3@25529>   MOVE.w D6,flagmask
0003312A <AmiBlitz3.ab3@25530>   JSR getparameter2
0003312E <AmiBlitz3.ab3@25531>   BEQ.w JUMP_syntaxerr
00033134 <AmiBlitz3.ab3@25532>   MOVEA.l thistype,A2
00033136 <AmiBlitz3.ab3@25533>   ADDQ.w #4,A2
0003313C <AmiBlitz3.ab3@25534>   JSR findvariable2
00033140 <AmiBlitz3.ab3@25535>   BEQ.w JUMP_dupofferr     ;beq    .skip2
00033146 <AmiBlitz3.ab3@25537>   JSR addlabel
00033148 <AmiBlitz3.ab3@25540>   MOVE.l A2,-(A7)
0003314C <AmiBlitz3.ab3@25541>   CMP.w #$2E,D0           ;'.'
00033150 <AmiBlitz3.ab3@25542>    BEQ.w 'skip3
00033154 <AmiBlitz3.ab3@25543>   CMP.w #$24,D0           ;'$'
00033158 <AmiBlitz3.ab3@25544>    BNE.w 'notstring
0003315E <AmiBlitz3.ab3@25545>   MOVE.l #newtype_string,D2
00033164 <AmiBlitz3.ab3@25546>    JSR get1bytemain
00033168 <AmiBlitz3.ab3@25547>  BRA.w 'skip4a
0003316E <AmiBlitz3.ab3@25550>   MOVE.l prevtype,D2
00033172 <AmiBlitz3.ab3@25551>   BEQ.w JUMP_notypeerr2
00033176 <AmiBlitz3.ab3@25552>  BRA.w 'skip4
0003317C <AmiBlitz3.ab3@25555>   JSR getparameter2
00033180 <AmiBlitz3.ab3@25556>    BEQ.w JUMP_syntaxerr
00033186 <AmiBlitz3.ab3@25557>   LEA newtypebase,A2
0003318C <AmiBlitz3.ab3@25558>    JSR findtype
00033190 <AmiBlitz3.ab3@25559>    BEQ.w 'gotit
00033198 <AmiBlitz3.ab3@25560>   BTST #$0,flagmask+1
0003319C <AmiBlitz3.ab3@25561>    BEQ.w JUMP_notypeerr2
000331A2 <AmiBlitz3.ab3@25565>   JSR addlabel
000331AA <AmiBlitz3.ab3@25570>   MOVE.w linenumat+2,$8(A2)
000331B2 <AmiBlitz3.ab3@25571>   MOVE.l #MaxByte,$4(A2)       ; was $FF  ;set to pointer crap
000331B4 <AmiBlitz3.ab3@25574>   MOVE.l A2,D2
000331BA <AmiBlitz3.ab3@25577>   CMP.l #newtype_byte,D2
000331BE <AmiBlitz3.ab3@25578>    BEQ.w 'byte
000331C4 <AmiBlitz3.ab3@25581>   ADDQ.w #1,typelen
000331CC <AmiBlitz3.ab3@25582>   BCLR #$0,typelen+1
000331CE <AmiBlitz3.ab3@25585>   MOVEQ.l #$00,D3
000331D0 <AmiBlitz3.ab3@25586>   MOVEA.l D2,A2
000331D6 <AmiBlitz3.ab3@25587>   MOVE.l A2,prevtype
000331DA <AmiBlitz3.ab3@25588>   MOVE.w $8(A2),D3
000331DC <AmiBlitz3.ab3@25589>   MOVEA.l (A7)+,A2
000331E0 <AmiBlitz3.ab3@25590>   MOVE.l D2,$A(A2)
000331E2 <AmiBlitz3.ab3@25591>   MOVEQ.l #$00,D4
000331E8 <AmiBlitz3.ab3@25592>   MOVE.w typelen,D4
000331EC <AmiBlitz3.ab3@25593>   MOVE.w D4,$4(A2)
000331F4 <AmiBlitz3.ab3@25594>   BTST #$0,flagmask+1
000331F8 <AmiBlitz3.ab3@25595>    BEQ.w 'skipz
000331FA <AmiBlitz3.ab3@25596>   MOVEQ.l #$04,D3
000331FE <AmiBlitz3.ab3@25599>   CMP.w #$5B,D0            ;'['
00033202 <AmiBlitz3.ab3@25600>    BNE.w 'skipzz
00033206 <AmiBlitz3.ab3@25604>   MOVEM.l D3-D4/A2,-(A7)
0003320A <AmiBlitz3.ab3@25605>    BSR.w evalconst3
0003320E <AmiBlitz3.ab3@25606>   CMP.w #$5D,D0            ;']'
00033212 <AmiBlitz3.ab3@25607>    BNE.w JUMP_syntaxerr
00033214 <AmiBlitz3.ab3@25608>   TST.w D6
00033218 <AmiBlitz3.ab3@25609>    BNE.w JUMP_fpconerr
0003321A <AmiBlitz3.ab3@25610>   MOVE.l D3,D1
0003321E <AmiBlitz3.ab3@25611>   MOVEM.l (A7)+,D3-D4/A2
00033224 <AmiBlitz3.ab3@25612>    JSR get1bytemain
00033228 <AmiBlitz3.ab3@25613>   MOVE.w D1,$8(A2)
0003322C <AmiBlitz3.ab3@25614>   MULU.l d1,d3                                             ;>32k fix was mulu.w
00033234 <AmiBlitz3.ab3@25615>   ORI.w #$2,flagmask
00033236 <AmiBlitz3.ab3@25618>   ADD.l D3,D4
0003323C <AmiBlitz3.ab3@25621>     CMP.l #65532,d4
00033240 <AmiBlitz3.ab3@25627>   BCC JUMP_toolongerr
00033248 <AmiBlitz3.ab3@25628>   MOVE.w flagmask,$6(A2)
0003324E <AmiBlitz3.ab3@25629>   MOVE.w D4,typelen
00033250 <AmiBlitz3.ab3@25630> RTS
00033256 <AmiBlitz3.ab3@25633> JUMP_badenderr  JMP badenderr
0003325C <AmiBlitz3.ab3@25634> JUMP_noiferr    JMP noiferr
00033262 <AmiBlitz3.ab3@25635> JUMP_toolongerr JMP toolongerr
00033268 <AmiBlitz3.ab3@25636> JUMP_fpconerr   JMP fpconerr
0003326E <AmiBlitz3.ab3@25640>   MOVE.l firstiff,D0
00033272 <AmiBlitz3.ab3@25641>    BEQ.w JUMP_noiferr
00033274 <AmiBlitz3.ab3@25642>   MOVEA.l D0,A0
00033278 <AmiBlitz3.ab3@25643>   MOVE.w $C(A0),D0
0003327C <AmiBlitz3.ab3@25644>   ANDI.w #$FF,D0
0003327E <AmiBlitz3.ab3@25645>   CMP.w D0,D1
00033282 <AmiBlitz3.ab3@25646>    BNE.w JUMP_badenderr
00033286 <AmiBlitz3.ab3@25649>   CMP.w #$1,D1
0003328A <AmiBlitz3.ab3@25650>   BNE.w 'calcbra
0003328E <AmiBlitz3.ab3@25652>   MOVE.w #$6000,D1
00033294 <AmiBlitz3.ab3@25655>     TST.b fast
00033298 <AmiBlitz3.ab3@25656>     BEQ 'l1
0003329E <AmiBlitz3.ab3@25657>     OR.l #$ff,d1
000332A2 <AmiBlitz3.ab3@25662>   BSR.w writeword
000332A8 <AmiBlitz3.ab3@25663>   MOVEA.l destpointer,A1
000332AC <AmiBlitz3.ab3@25664>   MOVE.l $4(A0),D1
000332AE <AmiBlitz3.ab3@25665>   SUB.l A1,D1
000332B4 <AmiBlitz3.ab3@25668>     TST.b fast
000332B8 <AmiBlitz3.ab3@25669>     BEQ 'l2
000332BC <AmiBlitz3.ab3@25670>     BSR writelong
000332C0 <AmiBlitz3.ab3@25671>   BRA 'calcbra
000332C4 <AmiBlitz3.ab3@25676>   BSR.w writeword
000332C8 <AmiBlitz3.ab3@25679>   MOVEA.l $8(A0),A1                                        ;write if branch destination
000332CE <AmiBlitz3.ab3@25680>   MOVE.l destpointer,D1
000332D0 <AmiBlitz3.ab3@25681>   SUB.l A1,D1
000332D6 <AmiBlitz3.ab3@25684>     TST.b fast
000332DA <AmiBlitz3.ab3@25685>     BEQ 'l3
000332DC <AmiBlitz3.ab3@25686>     ADDQ.l #4,D1
000332E2 <AmiBlitz3.ab3@25687>     MOVE.w dontwrite_nomemleft,D0
000332E6 <AmiBlitz3.ab3@25688>     BNE.w 'skip
000332EA <AmiBlitz3.ab3@25689>     MOVE.l d1,-$4(a1)
000332EE <AmiBlitz3.ab3@25690>   BRA 'skip
000332F0 <AmiBlitz3.ab3@25695>   ADDQ.l #2,d1
000332F6 <AmiBlitz3.ab3@25697>   TST.w dontwrite_nomemleft
000332FA <AmiBlitz3.ab3@25699>   BNE 'skip
00033300 <AmiBlitz3.ab3@25701>   CMP.l #MinWordSgnd,D1
00033304 <AmiBlitz3.ab3@25702>   BCC.w JUMP_bigiferr
00033308 <AmiBlitz3.ab3@25704>   MOVE.w D1,-$2(A1)
0003330A <AmiBlitz3.ab3@25707> RTS
00033310 <AmiBlitz3.ab3@25709> JUMP_bigiferr JMP bigiferr
0003331A <AmiBlitz3.ab3@25714>   MOVE.w oldqflag,instringon
00033320 <AmiBlitz3.ab3@25715>   MOVEA.l lastsourcepos,A5
00033322 <AmiBlitz3.ab3@25718>   MOVEQ.l #$01,D1
00033326 <AmiBlitz3.ab3@25719> BRA.w doendif
00033330 <AmiBlitz3.ab3@25723>   MOVE.w oldqflag,instringon
00033336 <AmiBlitz3.ab3@25724>   MOVEA.l lastsourcepos,A5
00033338 <AmiBlitz3.ab3@25727>   MOVEQ.l #$00,D1
0003333C <AmiBlitz3.ab3@25730>   BSR.w doendif3
00033340 <AmiBlitz3.ab3@25731>   BSR.w freetheifz
00033346 <AmiBlitz3.ab3@25732> JMP get1bytemain
0003334C <AmiBlitz3.ab3@25736>   MOVE.l (A0),firstiff
0003334E <AmiBlitz3.ab3@25737>   MOVEA.l A0,A1
00033350 <AmiBlitz3.ab3@25738>   MOVEQ.l #$0E,D0
00033356 <AmiBlitz3.ab3@25739>   MOVEA.l _execbase,A6
0003335C <AmiBlitz3.ab3@25742>   MOVE.l mempool,a0
00033360 <AmiBlitz3.ab3@25743> JMP _FreePooled(A6)
00033366 <AmiBlitz3.ab3@25747> JUMP_modeerr JMP modeerr
0003336C <AmiBlitz3.ab3@25748> JUMP_interr3 JMP interr3
00033372 <AmiBlitz3.ab3@25749> JUMP_interr JMP interr
00033378 <AmiBlitz3.ab3@25753>   JSR get1bytemain
0003337C <AmiBlitz3.ab3@25756>   BEQ.w 'done
00033384 <AmiBlitz3.ab3@25758>   CMP.l #"noa7",-1(a5)
00033388 <AmiBlitz3.ab3@25759>   BNE 'l1
0003338E <AmiBlitz3.ab3@25760>   JSR get1bytemain
00033394 <AmiBlitz3.ab3@25761>   JSR get1bytemain
0003339A <AmiBlitz3.ab3@25762>   JSR get1bytemain
000333A2 <AmiBlitz3.ab3@25763>   MOVE.w #$3a,lastchar
000333A6 <AmiBlitz3.ab3@25764>  BRA 'done
000333AC <AmiBlitz3.ab3@25767>   CMP.w #"d0",-1(a5)
000333B0 <AmiBlitz3.ab3@25768>   BNE 'l2
000333B8 <AmiBlitz3.ab3@25769>   MOVE.b #1,returncode
000333BE <AmiBlitz3.ab3@25770>   CLR.w lastchar
000333C2 <AmiBlitz3.ab3@25771>  BRA 'done
000333C6 <AmiBlitz3.ab3@25774>   CMP.w #$80d7,d0
000333CA <AmiBlitz3.ab3@25775>   BNE 'loop
000333D0 <AmiBlitz3.ab3@25776>   JSR skiprest
000333D2 <AmiBlitz3.ab3@25777>  RTS
000333D6 <AmiBlitz3.ab3@25781>   BSR.w 'doend3
000333DC <AmiBlitz3.ab3@25782>   JSR reget
000333E0 <AmiBlitz3.ab3@25783>   BNE.w 'loop
000333E2 <AmiBlitz3.ab3@25784>  RTS
000333E6 <AmiBlitz3.ab3@25787>   CMP.w #-$7FFF,D0        ; was #$8001
000333EA <AmiBlitz3.ab3@25788>    BNE.w 'nottype
000333F0 <AmiBlitz3.ab3@25789>   MOVE.w linemode,D1
000333F4 <AmiBlitz3.ab3@25790>    BNE.w JUMP_modeerr
000333FA <AmiBlitz3.ab3@25791>   ADDQ.w #1,typelen
00033402 <AmiBlitz3.ab3@25792>   BCLR #$0,typelen+1
00033408 <AmiBlitz3.ab3@25793>   MOVEA.l thistype,A0
00033410 <AmiBlitz3.ab3@25794>   MOVE.w typelen,$8(A0)
00033418 <AmiBlitz3.ab3@25795>   MOVE.w #$FFFF,linemode        ; was -1
0003341E <AmiBlitz3.ab3@25796>  JMP get1bytemain
00033422 <AmiBlitz3.ab3@25799>   CMP.w #-$7FF5,D0    ; was #$800b
00033426 <AmiBlitz3.ab3@25800>    BEQ.w mydoendif
0003342A <AmiBlitz3.ab3@25803>   CMP.w #-$7FF4,D0    ; was #$800c
0003342E <AmiBlitz3.ab3@25804>    BEQ.w dowend2
00033432 <AmiBlitz3.ab3@25807>   CMP.w #-$7FF8,D0    ; was #$8008
00033436 <AmiBlitz3.ab3@25808>    BNE.w 'notstate
0003343A <AmiBlitz3.ab3@25813>  BRA.w endstate
0003343E <AmiBlitz3.ab3@25816>   CMP.w #-$7FF7,D0        ; was #$8009
00033442 <AmiBlitz3.ab3@25817>    BNE.w 'notfunc
00033448 <AmiBlitz3.ab3@25819>    TST.b fpu
0003344C <AmiBlitz3.ab3@25820>    BEQ 'nof
00033452 <AmiBlitz3.ab3@25821>    MOVEA.l currentfunction,A0
00033458 <AmiBlitz3.ab3@25822>    CMP.l #0,a0
0003345C <AmiBlitz3.ab3@25823>    BEQ 'nof
00033462 <AmiBlitz3.ab3@25824>    CMP.b #5,$5(a0)
00033466 <AmiBlitz3.ab3@25825>     BNE 'nof
0003346C <AmiBlitz3.ab3@25826>    MOVE.l #$f23c5000,d1
00033470 <AmiBlitz3.ab3@25827>    BSR writelong
00033474 <AmiBlitz3.ab3@25828>    MOVE.w #0,d1
00033478 <AmiBlitz3.ab3@25829>    BSR writeword
0003347C <AmiBlitz3.ab3@25833>   MOVE.w #$7000,D1                                         ;end function moveq #0,d0
00033480 <AmiBlitz3.ab3@25834>    BSR.w writeword
00033486 <AmiBlitz3.ab3@25835>   MOVEA.l currentfunction,A0
0003348C <AmiBlitz3.ab3@25837>   CMP.l #0,a0
00033490 <AmiBlitz3.ab3@25838>   BEQ 'state
00033496 <AmiBlitz3.ab3@25839>   MOVE.l destpointer,d1
0003349A <AmiBlitz3.ab3@25840>   SUB.l $e(a0),d1
0003349E <AmiBlitz3.ab3@25841>   MOVE.l d1,isfunc+1(a0)
000334A4 <AmiBlitz3.ab3@25843>   CMPI.b #$7,$5(A0)
000334A8 <AmiBlitz3.ab3@25844>    BNE.w 'state
000334AE <AmiBlitz3.ab3@25845>   MOVE.w putstlen,D1
000334B2 <AmiBlitz3.ab3@25846>    BSR.w writeword
000334B6 <AmiBlitz3.ab3@25847>  BRA.w 'state
000334BA <AmiBlitz3.ab3@25850>   CMP.w #-$7FD0,D0         ; was #$8000+48
000334BE <AmiBlitz3.ab3@25851>    BNE.w 'notsetint
000334C4 <AmiBlitz3.ab3@25853>   MOVE.w proceduremode,D1
000334C8 <AmiBlitz3.ab3@25854>    BNE.w JUMP_interr3
000334CE <AmiBlitz3.ab3@25856>   TST.b debugmode
000334D2 <AmiBlitz3.ab3@25857>    BEQ.w 'norerrf1
000334D4 <AmiBlitz3.ab3@25859>   MOVEQ.l #$03,D1
000334DA <AmiBlitz3.ab3@25860>    JSR writetrap
000334E0 <AmiBlitz3.ab3@25862>   MOVE.w dontwrite_nomemleft,D1
000334E4 <AmiBlitz3.ab3@25863>    BNE.w 'norerrf1
000334EA <AmiBlitz3.ab3@25865>   MOVEA.l intcleanat,A0
000334F0 <AmiBlitz3.ab3@25866>   MOVE.l destpointer,(A0)
000334F4 <AmiBlitz3.ab3@25868>   MOVE.w #$C30C,D1       ; was #gouse
000334F8 <AmiBlitz3.ab3@25869>    BSR.w Atokejsr        ;for runerrlib stack chex
000334FE <AmiBlitz3.ab3@25872>   MOVE.w intstring,D1
00033502 <AmiBlitz3.ab3@25873>    BEQ.w JUMP_interr
00033506 <AmiBlitz3.ab3@25874>    BPL.w 'nosp
0003350C <AmiBlitz3.ab3@25876>   MOVE.w intlevel,D1
00033510 <AmiBlitz3.ab3@25877>   ORI.w #$7200,D1
00033514 <AmiBlitz3.ab3@25878>    BSR.w writeword       ;moveq #level,d1
00033518 <AmiBlitz3.ab3@25879>   MOVE.w #$C103,D1       ; was #oldint,
0003351C <AmiBlitz3.ab3@25880>    BSR.w Atokejsr
00033522 <AmiBlitz3.ab3@25881>   CLR.w intlevel
00033528 <AmiBlitz3.ab3@25884>   CLR.w intstring
0003352E <AmiBlitz3.ab3@25886>   MOVE.l intfin,D1
00033532 <AmiBlitz3.ab3@25887>    BSR.w writelong
00033538 <AmiBlitz3.ab3@25889>   MOVE.l #$70004E75,D1
0003353C <AmiBlitz3.ab3@25890>    BSR.w writelong
00033542 <AmiBlitz3.ab3@25892>   MOVE.w dontwrite_nomemleft,D1
00033546 <AmiBlitz3.ab3@25893>    BNE.w 'sintdone
0003354C <AmiBlitz3.ab3@25894>   MOVEA.l intjmpat,A0
00033550 <AmiBlitz3.ab3@25895>   MOVE.l destpointer(PC),(A0)
00033556 <AmiBlitz3.ab3@25898>  JMP get1bytemain
0003355A <AmiBlitz3.ab3@25901>   CMP.w #-$7FF2,D0   ; was #$800e     ;end select?
0003355E <AmiBlitz3.ab3@25902>    BEQ.w doendsel
00033562 <AmiBlitz3.ab3@25903>   CMP.w #-$7F4C,D0  ; was #$8001+tnum
00033566 <AmiBlitz3.ab3@25904>    BNE.w 'notseterr
0003356C <AmiBlitz3.ab3@25905>  JMP doendseterr
00033572 <AmiBlitz3.ab3@25909>  JMP syntaxerr
00033578 <AmiBlitz3.ab3@25912>   TST.w dirmode
0003357C <AmiBlitz3.ab3@25913>   BNE.w JUMP_baddirerr
00033580 <AmiBlitz3.ab3@25914>   MOVE.w #$C800,D1      ; #endjmp
00033586 <AmiBlitz3.ab3@25915>   JSR Atokejsr          ; was bra org source                                  ;end
0003358E <AmiBlitz3.ab3@25917>   CMP.l #"noa7",-4(a5)
00033592 <AmiBlitz3.ab3@25918>   BNE 'l10
00033598 <AmiBlitz3.ab3@25919>   TST.w dontwrite_nomemleft
0003359C <AmiBlitz3.ab3@25920>   BNE 'l10
000335A2 <AmiBlitz3.ab3@25921>   MOVE.l destpointer,d1
000335A4 <AmiBlitz3.ab3@25922>   SUBQ.l #4,d1
000335A6 <AmiBlitz3.ab3@25923>   MOVE.l a0,-(a7)
000335A8 <AmiBlitz3.ab3@25924>   MOVE.l d1,a0
000335AA <AmiBlitz3.ab3@25925>   MOVE.l (a0),a0
000335B0 <AmiBlitz3.ab3@25926>   MOVE.l #$60000002,(a0)+
000335B4 <AmiBlitz3.ab3@25927>   MOVE.w #$588f,(a0)
000335B6 <AmiBlitz3.ab3@25928>   MOVE.l (a7)+,a0
000335B8 <AmiBlitz3.ab3@25931> RTS
000335BE <AmiBlitz3.ab3@25936>   TST.w dirmode                                            ;stop
000335C2 <AmiBlitz3.ab3@25937>   BNE.w JUMP_baddirerr
000335C4 <AmiBlitz3.ab3@25939>   MOVE.w d0,d1
000335C8 <AmiBlitz3.ab3@25940>   BEQ 'l10
000335CC <AmiBlitz3.ab3@25941>   CMP.b #$3a,d0
000335D0 <AmiBlitz3.ab3@25942>   BEQ 'l10
000335D6 <AmiBlitz3.ab3@25943>   JSR get1bytemain
000335DC <AmiBlitz3.ab3@25947>   TST.b debugmode
000335E0 <AmiBlitz3.ab3@25948>   BEQ.w newstop
000335E4 <AmiBlitz3.ab3@25949>   MOVE.w #$D501,D1
000335E8 <AmiBlitz3.ab3@25950> BRA.w Atokejsr
000335EA <AmiBlitz3.ab3@25956>     RTS
000335EC <AmiBlitz3.ab3@25958>   MOVE.w d1,d0
000335F0 <AmiBlitz3.ab3@25959>   BEQ 'l10
000335F4 <AmiBlitz3.ab3@25960>   CMP.b #$3a,d0
000335F8 <AmiBlitz3.ab3@25961>   BEQ 'l10
000335FC <AmiBlitz3.ab3@25962>   SUB.b #$30,d0
00033600 <AmiBlitz3.ab3@25963>   MOVE.w #$4e40,d1
00033604 <AmiBlitz3.ab3@25964>  BRA 'l11
00033608 <AmiBlitz3.ab3@25967>   MOVE.w #$4e4a,d1
0003360C <AmiBlitz3.ab3@25968>  BRA writeword
0003360E <AmiBlitz3.ab3@25971>   ADD.b d0,d1
00033612 <AmiBlitz3.ab3@25972> BRA writeword
00033618 <AmiBlitz3.ab3@25976> JMP badconterr        ;cont not currently supported!
0003361C <AmiBlitz3.ab3@25979>   MOVE.w #$4E71,D1
00033620 <AmiBlitz3.ab3@25980> BRA.w writeword
00033626 <AmiBlitz3.ab3@25985>   MOVEA.l firstfor,A2
0003362C <AmiBlitz3.ab3@25986>   CLR.l firstfor
00033632 <AmiBlitz3.ab3@25987>   MOVEA.l _execbase,A6
00033636 <AmiBlitz3.ab3@25990>   CMPA.w #$0,A2
0003363A <AmiBlitz3.ab3@25991>   BEQ.w 'done
0003363C <AmiBlitz3.ab3@25992>   MOVEA.l A2,A1
0003363E <AmiBlitz3.ab3@25993>   MOVEA.l (A1),A2
00033640 <AmiBlitz3.ab3@25994>   MOVEQ.l #$00,D0
00033644 <AmiBlitz3.ab3@25995>   MOVE.b $10(A1),D0
0003364A <AmiBlitz3.ab3@25998>   MOVE.l mempool2,a0  
0003364E <AmiBlitz3.ab3@25999>   JSR _FreePooled(A6)                                      ;freememfor_error
00033652 <AmiBlitz3.ab3@26001>  BRA.w 'loop
00033654 <AmiBlitz3.ab3@26004> RTS
0003365A <AmiBlitz3.ab3@26007> JUMP_badpenderr JMP badpenderr
00033660 <AmiBlitz3.ab3@26008> JUMP_noenderr   JMP noenderr
00033666 <AmiBlitz3.ab3@26014>   MOVE.w proceduremode,D1
0003366A <AmiBlitz3.ab3@26015>    BEQ.w JUMP_badpenderr
00033670 <AmiBlitz3.ab3@26017>   MOVE.w dontwrite_nomemleft,D1
00033674 <AmiBlitz3.ab3@26018>    BNE.w 'ship
0003367A <AmiBlitz3.ab3@26019>   MOVEA.l firstpend,A2
0003367E <AmiBlitz3.ab3@26022>   CMPA.w #$0,A2
00033682 <AmiBlitz3.ab3@26023>    BEQ.w 'ship
00033686 <AmiBlitz3.ab3@26024>   MOVEA.l $4(A2),A0
0003368C <AmiBlitz3.ab3@26025>   MOVE.l destpointer,(A0)
0003368E <AmiBlitz3.ab3@26026>   MOVEA.l (A2),A2
00033692 <AmiBlitz3.ab3@26027>  BRA.w 'loop0
00033698 <AmiBlitz3.ab3@26030>   TST.b debugmode
0003369C <AmiBlitz3.ab3@26031>    BEQ.b 'ship2
0003369E <AmiBlitz3.ab3@26033>   MOVEQ.l #$05,D1
000336A4 <AmiBlitz3.ab3@26034>   JSR writetrap
000336AA <AmiBlitz3.ab3@26037>   MOVEA.l firstlocal,A2                                    ;firstlocal
000336B0 <AmiBlitz3.ab3@26038>   JSR calcstatic2b                                           ;calcstatic
000336B6 <AmiBlitz3.ab3@26039>   MOVEA.l currentfunction,A0
000336BC <AmiBlitz3.ab3@26041>   MOVE.l destpointer,d1
000336C0 <AmiBlitz3.ab3@26042>   SUB.l $e(a0),d1
000336C4 <AmiBlitz3.ab3@26043>   MOVE.l d1,isfunc+1(a0)                                   ;store function size
000336C8 <AmiBlitz3.ab3@26045>   MOVE.w D4,$8(A0)                                         ;set if memalloc need
000336CE <AmiBlitz3.ab3@26046>   MOVE.l D3,locdatast
000336D4 <AmiBlitz3.ab3@26047>   MOVEA.l tempvm,A1
000336DA <AmiBlitz3.ab3@26049>   CLR.b infunctioncode
000336E0 <AmiBlitz3.ab3@26050>   MOVE.l firstiffstore,d1
000336E6 <AmiBlitz3.ab3@26051>   CMP.l firstiff,d1
000336EA <AmiBlitz3.ab3@26052>   BNE JUMP_noenderr
000336EE <AmiBlitz3.ab3@26054>   TST.w $C(A1)                                             ;dim
000336F2 <AmiBlitz3.ab3@26055>    BPL.w 'nolskip
000336F8 <AmiBlitz3.ab3@26056>  BSET #$7,$8(A0)
000336FC <AmiBlitz3.ab3@26057>   MOVE.w #$C005,D1      ;#freelast,
00033700 <AmiBlitz3.ab3@26058>    BSR.w tokejsr2                                          ;writefreememstatement
00033704 <AmiBlitz3.ab3@26059>  BRA.w 'lskip2
0003370C <AmiBlitz3.ab3@26062>   MOVE.w memlibstat,$C(A1)
00033712 <AmiBlitz3.ab3@26065>   MOVEA.l currentfunction,A0
00033716 <AmiBlitz3.ab3@26066>   MOVE.l $E(A0),-(A7)
0003371E <AmiBlitz3.ab3@26067>   MOVE.w locvaroff,$6(A0)
00033724 <AmiBlitz3.ab3@26068>   BCLR #$1,$7(A0)
0003372A <AmiBlitz3.ab3@26069>   BCLR #$0,$7(A0)
00033730 <AmiBlitz3.ab3@26070>   CMPI.b #$7,$5(A0)
00033734 <AmiBlitz3.ab3@26071>    BNE.w 'penis
0003373A <AmiBlitz3.ab3@26072>   MOVE.w getstlen,D1
0003373E <AmiBlitz3.ab3@26073>    BSR.w writeword
00033742 <AmiBlitz3.ab3@26076>   TST.w $6(A0)
00033746 <AmiBlitz3.ab3@26077>    BEQ.w 'nolink
0003374A <AmiBlitz3.ab3@26078>   MOVE.w #$FC7B,D1   ;#64635
00033750 <AmiBlitz3.ab3@26079>    JSR uselib
00033756 <AmiBlitz3.ab3@26080>   MOVE.w unlinka4,D1
0003375C <AmiBlitz3.ab3@26081>    JSR writeword
00033762 <AmiBlitz3.ab3@26087>   MOVEA.l currentfunction,A0
00033764 <AmiBlitz3.ab3@26088>   MOVEQ.l #$00,D1
00033768 <AmiBlitz3.ab3@26089>   MOVE.b $4(A0),D1
0003376A <AmiBlitz3.ab3@26090>   LSR.w #4,D1
0003376E <AmiBlitz3.ab3@26091>    BEQ.w 'nofix
00033770 <AmiBlitz3.ab3@26094>      LSL.w #1,d1
00033774 <AmiBlitz3.ab3@26097>   CMP.w #$1,D1
00033778 <AmiBlitz3.ab3@26098>    BNE.w 'not1
0003377E <AmiBlitz3.ab3@26099>   MOVE.w fix1,D1
00033784 <AmiBlitz3.ab3@26100>    JSR writeword
00033788 <AmiBlitz3.ab3@26101>  BRA.w 'nofix
0003378A <AmiBlitz3.ab3@26104>   LSL.w #2,D1
0003378C <AmiBlitz3.ab3@26105>   MOVE.w D1,-(A7)
00033792 <AmiBlitz3.ab3@26106>   MOVE.w D1,moverts+2
00033798 <AmiBlitz3.ab3@26107>   MOVE.l moverts,D1
0003379E <AmiBlitz3.ab3@26108>    JSR writelong
000337A0 <AmiBlitz3.ab3@26109>   MOVE.w (A7)+,D1
000337A4 <AmiBlitz3.ab3@26110>   CMP.w #$8,D1
000337A8 <AmiBlitz3.ab3@26111>    BHI.w 'fix
000337AC <AmiBlitz3.ab3@26112>   ANDI.w #$7,D1
000337AE <AmiBlitz3.ab3@26113>   LSL.w #8,D1
000337B0 <AmiBlitz3.ab3@26114>   LSL.w #1,D1
000337B6 <AmiBlitz3.ab3@26115>   OR.w fixq,D1
000337BC <AmiBlitz3.ab3@26116>    JSR writeword
000337C0 <AmiBlitz3.ab3@26117>  BRA.w 'nofix
000337C6 <AmiBlitz3.ab3@26120>    MOVE.w D1,fixstack+2
000337CC <AmiBlitz3.ab3@26121>   MOVE.l fixstack,D1
000337D2 <AmiBlitz3.ab3@26122>    JSR writelong
000337D6 <AmiBlitz3.ab3@26125>    BSR.w normret
000337DA <AmiBlitz3.ab3@26129>    BSR.w procfixer
000337DC <AmiBlitz3.ab3@26131>   MOVEA.l (A7)+,A0
000337E2 <AmiBlitz3.ab3@26132>   MOVE.w dontwrite_nomemleft,D1
000337E6 <AmiBlitz3.ab3@26133>    BNE.w 'skipjp
000337EC <AmiBlitz3.ab3@26134>   MOVE.l destpointer,-(A0)
000337F2 <AmiBlitz3.ab3@26137>   CLR.w proceduremode
000337F8 <AmiBlitz3.ab3@26138>   CLR.l currentfunction
000337FE <AmiBlitz3.ab3@26139>   CLR.w procnum
00033802 <AmiBlitz3.ab3@26140>    BSR.w droplocals
00033808 <AmiBlitz3.ab3@26141>    JSR freepends
0003380E <AmiBlitz3.ab3@26142> JMP get1bytemain
00033810 <AmiBlitz3.ab3@26146>   MOVEQ.l #$0C,D0
00033812 <AmiBlitz3.ab3@26147>   MOVEQ.l #$01,D1
00033818 <AmiBlitz3.ab3@26148>   MOVEA.l _execbase,A6
0003381E <AmiBlitz3.ab3@26151>   MOVE.l mempool,a0
00033822 <AmiBlitz3.ab3@26152>   JSR _AllocPooled(a6)
00033824 <AmiBlitz3.ab3@26154>   MOVEA.l D0,A0
0003382A <AmiBlitz3.ab3@26155>   MOVE.l alllocals,(A0)
00033830 <AmiBlitz3.ab3@26156>   MOVE.l A0,alllocals
00033836 <AmiBlitz3.ab3@26158>   MOVE.l firstlocal,D0
0003383C <AmiBlitz3.ab3@26159>   CLR.l firstlocal
00033840 <AmiBlitz3.ab3@26160>   MOVE.l D0,$4(A0)
00033846 <AmiBlitz3.ab3@26161>   MOVE.l firstglob,D1
0003384C <AmiBlitz3.ab3@26162>   CLR.l firstglob
00033850 <AmiBlitz3.ab3@26163>   MOVE.l D1,$8(A0)
00033856 <AmiBlitz3.ab3@26165>   TST.b debugmode
0003385A <AmiBlitz3.ab3@26166>    BEQ.b 'skip
00033860 <AmiBlitz3.ab3@26167>   TST.w dontwrite_nomemleft
00033864 <AmiBlitz3.ab3@26168>    BNE.b 'skip
00033868 <AmiBlitz3.ab3@26170>   MOVEA.l proclocals(PC),A0
0003386A <AmiBlitz3.ab3@26171>   MOVE.l D0,(A0)+
0003386C <AmiBlitz3.ab3@26172>   MOVE.l D1,(A0)
0003386E <AmiBlitz3.ab3@26175> RTS
00033874 <AmiBlitz3.ab3@26178> JUMP_baddirerr JMP baddirerr
0003387A <AmiBlitz3.ab3@26179> JUMP_noforerr  JMP noforerr
00033880 <AmiBlitz3.ab3@26183>   TST.w dirmode
00033884 <AmiBlitz3.ab3@26184>    BNE.w JUMP_baddirerr
0003388A <AmiBlitz3.ab3@26185>   MOVE.l firstfor,D1
0003388E <AmiBlitz3.ab3@26186>    BEQ.w JUMP_noforerr
00033894 <AmiBlitz3.ab3@26187>   JSR reget
00033898 <AmiBlitz3.ab3@26188>    BEQ.w 'unknown
0003389C <AmiBlitz3.ab3@26194>   BSR.w getparameter
000338A0 <AmiBlitz3.ab3@26195>   MOVEA.l firstfor(PC),A2
000338A2 <AmiBlitz3.ab3@26196>   MOVEQ.l #$00,D1
000338A6 <AmiBlitz3.ab3@26197>   MOVE.b $10(A2),D1
000338AA <AmiBlitz3.ab3@26198>   SUBI.w #$12,D1
000338AC <AmiBlitz3.ab3@26199>   CMP.w D1,D2
000338B0 <AmiBlitz3.ab3@26200>    BNE.w JUMP_noforerr
000338B4 <AmiBlitz3.ab3@26201>   LEA ptr_parameterstore(PC),A0
000338B8 <AmiBlitz3.ab3@26202>   LEA $11(A2),A1
000338BA <AmiBlitz3.ab3@26203>   SUBQ.w #1,D2
000338BC <AmiBlitz3.ab3@26206>     CMPM.b (A0)+,(A1)+
000338C0 <AmiBlitz3.ab3@26207>     BNE.w JUMP_noforerr
000338C4 <AmiBlitz3.ab3@26208>   DBF D2,'chkname
000338C8 <AmiBlitz3.ab3@26210>    BSR.w 'unknown2
000338CE <AmiBlitz3.ab3@26211>    JSR reget
000338D2 <AmiBlitz3.ab3@26212>    BEQ.w 'byebye
000338D6 <AmiBlitz3.ab3@26213>   CMP.w #$2C,D0           ; ','
000338DA <AmiBlitz3.ab3@26214>    BNE.w JUMP_syntaxerr
000338E0 <AmiBlitz3.ab3@26215>    JSR get1bytemain
000338E4 <AmiBlitz3.ab3@26216>  BRA.w 'nextnext
000338E6 <AmiBlitz3.ab3@26219>  RTS
000338EA <AmiBlitz3.ab3@26223>   MOVE.l 8(a7),a2
000338EE <AmiBlitz3.ab3@26224>   Dc.l  $f2124400                                          ;fmove.s (a2),fp0
000338F2 <AmiBlitz3.ab3@26225>   Dc.l  $F2174422                                          ;fadd.s (a7),fp0
000338F6 <AmiBlitz3.ab3@26226>   Dc.l  $F2126400                                          ;fmove.s fp0,(a2)
000338F8 <AmiBlitz3.ab3@26231>   MOVEA.l D1,A2
000338FE <AmiBlitz3.ab3@26234>   JSR popnext                                           ;error checking for next.
00033902 <AmiBlitz3.ab3@26235>   MOVE.w $C(A2),D0
00033908 <AmiBlitz3.ab3@26237>   LEA nextb,A0
0003390E <AmiBlitz3.ab3@26238>   LEA nextbf,A1
00033912 <AmiBlitz3.ab3@26239>   CMP.w #$1,D0
00033916 <AmiBlitz3.ab3@26240>    BEQ.w 'donext
0003391C <AmiBlitz3.ab3@26241>   LEA nextw,A0
00033922 <AmiBlitz3.ab3@26242>   LEA nextwf,A1
00033926 <AmiBlitz3.ab3@26243>   CMP.w #$2,D0
0003392A <AmiBlitz3.ab3@26244>    BEQ.w 'donext
00033930 <AmiBlitz3.ab3@26245>   LEA nextl,A0
00033936 <AmiBlitz3.ab3@26246>   LEA nextlf,A1
0003393A <AmiBlitz3.ab3@26247>   CMP.w #$5,D0
0003393E <AmiBlitz3.ab3@26248>    BNE.w 'donext
00033944 <AmiBlitz3.ab3@26250>    TST.b fpu
00033948 <AmiBlitz3.ab3@26251>    BEQ 'old
0003394E <AmiBlitz3.ab3@26252>    LEA 'fpu2dats,a0                                         ;fpu next code
00033954 <AmiBlitz3.ab3@26253>    LEA 'fpu2date,a1
00033958 <AmiBlitz3.ab3@26254>  BRA 'donext
0003395C <AmiBlitz3.ab3@26258>   MOVE.w #$C900,D1     ; #getffpbase
00033960 <AmiBlitz3.ab3@26259>    BSR.w Atokejsr
00033966 <AmiBlitz3.ab3@26260>   LEA nextf,A0
0003396C <AmiBlitz3.ab3@26261>   LEA nextff,A1
00033972 <AmiBlitz3.ab3@26264>   JSR pokecode
00033978 <AmiBlitz3.ab3@26266>    TST.b fast                                             ;fast for next deactivate
0003397C <AmiBlitz3.ab3@26267>  BRA 'l1
00033982 <AmiBlitz3.ab3@26269>     TST.b onestep
00033986 <AmiBlitz3.ab3@26270>     BEQ 'l1
0003398C <AmiBlitz3.ab3@26271>     CLR.b onestep
00033992 <AmiBlitz3.ab3@26272>     SUBQ.l #4,destpointer
00033996 <AmiBlitz3.ab3@26273>     MOVE.w #$5292,d1
0003399C <AmiBlitz3.ab3@26274>     JSR writeword
000339A0 <AmiBlitz3.ab3@26278>   MOVE.l thebra(PC),D1
000339A6 <AmiBlitz3.ab3@26279>    JSR writelong
000339AC <AmiBlitz3.ab3@26281>   MOVEA.l firstfor,A2
000339B2 <AmiBlitz3.ab3@26282>   MOVE.l (A2),firstfor
000339B6 <AmiBlitz3.ab3@26286>   MOVEA.l $8(A2),A0
000339BC <AmiBlitz3.ab3@26287>   MOVEA.l destpointer,A1
000339BE <AmiBlitz3.ab3@26288>   MOVE.l A1,D1
000339C0 <AmiBlitz3.ab3@26289>   SUB.l A0,D1            ;d1=positive bra
000339C2 <AmiBlitz3.ab3@26290>   ADDQ.l #2,D1
000339C8 <AmiBlitz3.ab3@26291>   CMP.l #MinWordSgnd,D1  ; #32768,
000339CC <AmiBlitz3.ab3@26292>    BCC.w JUMP_bigforerr
000339D2 <AmiBlitz3.ab3@26293>   TST.w dontwrite_nomemleft
000339D6 <AmiBlitz3.ab3@26294>    BNE.w 'nopoke1
000339DA <AmiBlitz3.ab3@26295>   MOVE.w D1,-$2(A0)
000339DC <AmiBlitz3.ab3@26298>   MOVE.l A1,D1
000339E0 <AmiBlitz3.ab3@26299>   SUB.l $4(A2),D1
000339E2 <AmiBlitz3.ab3@26300>   SUBQ.l #6,D1
000339E8 <AmiBlitz3.ab3@26301>   CMP.l #MinWordSgnd,D1 ;#32768,
000339EC <AmiBlitz3.ab3@26302>    BCC.w JUMP_bigforerr
000339F2 <AmiBlitz3.ab3@26303>   TST.w dontwrite_nomemleft
000339F6 <AmiBlitz3.ab3@26304>    BNE.w 'skip
000339F8 <AmiBlitz3.ab3@26305>   NEG.w D1
000339FC <AmiBlitz3.ab3@26306>   MOVE.w D1,-$2(A1)
00033A02 <AmiBlitz3.ab3@26309>   JSR popnext3                ;fix stack
00033A08 <AmiBlitz3.ab3@26311>   MOVEA.l _execbase,A6
00033A0A <AmiBlitz3.ab3@26312>   MOVEA.l A2,A1
00033A0C <AmiBlitz3.ab3@26313>   MOVEQ.l #$00,D0
00033A10 <AmiBlitz3.ab3@26314>   MOVE.b $10(A1),D0
00033A16 <AmiBlitz3.ab3@26317>   MOVE.l mempool2,a0
00033A1A <AmiBlitz3.ab3@26318>   JSR _FreePooled(A6)
00033A20 <AmiBlitz3.ab3@26320> JMP reget
00033A26 <AmiBlitz3.ab3@26323> JUMP_notallowd JMP notallowd
00033A2C <AmiBlitz3.ab3@26324> JUMP_bigforerr JMP bigforerr
00033A30 <AmiBlitz3.ab3@26328>   MOVE.w #$664F,-(A7)          ;#'fO',
00033A34 <AmiBlitz3.ab3@26331>  BRA.w thebra
00033A3A <AmiBlitz3.ab3@26334> JUMP_error_dublicate_for JMP error_dublicate_for
00033A40 <AmiBlitz3.ab3@26335> JUMP_badforerr           JMP badforerr
00033A44 <AmiBlitz3.ab3@26338> forlineat:   Ds.l 1
00033A46 <AmiBlitz3.ab3@26339> fortemp:     Ds.w 1
00033A4C <AmiBlitz3.ab3@26347>   CLR.l fp0addr
00033A52 <AmiBlitz3.ab3@26349>   TST.w dirmode
00033A56 <AmiBlitz3.ab3@26350>    BNE.w JUMP_baddirerr
00033A60 <AmiBlitz3.ab3@26351>   MOVE.l linenumat,forlineat
00033A66 <AmiBlitz3.ab3@26355>   MOVE.l A5,letstart
00033A6A <AmiBlitz3.ab3@26356>   BSR.w getparameter
00033A70 <AmiBlitz3.ab3@26357>   MOVE.w D2,fortemp
00033A76 <AmiBlitz3.ab3@26359>   JSR findfor
00033A7A <AmiBlitz3.ab3@26360>    BEQ.w JUMP_error_dublicate_for
00033A80 <AmiBlitz3.ab3@26361>   LEA firstfor,A2
00033A86 <AmiBlitz3.ab3@26362>   JSR addhere2
00033A88 <AmiBlitz3.ab3@26363>   MOVE.l A2,-(A7)
00033A8E <AmiBlitz3.ab3@26365>   TST.b debugmode
00033A92 <AmiBlitz3.ab3@26366>    BEQ.b 'noerr
00033A98 <AmiBlitz3.ab3@26368>   JSR chkstak
00033A9E <AmiBlitz3.ab3@26369>   MOVE.l forset,D1
00033AA4 <AmiBlitz3.ab3@26370>   JSR  writelong
00033AA8 <AmiBlitz3.ab3@26373>   MOVE.w fortemp(PC),D2
00033AB0 <AmiBlitz3.ab3@26375>   MOVE.b #1,formode
00033AB4 <AmiBlitz3.ab3@26377>   BSR.w dolet2                                         ;for get 1. value
00033ABA <AmiBlitz3.ab3@26378>   CLR.b formode
00033ABE <AmiBlitz3.ab3@26379>   CMP.w #-$7FE8,D0       ; was #$8018,
00033AC2 <AmiBlitz3.ab3@26380>    BNE.w JUMP_syntaxerr
00033AC8 <AmiBlitz3.ab3@26381>   MOVE.w commode,D1
00033ACC <AmiBlitz3.ab3@26382>    BNE.w JUMP_syntaxerr
00033AD0 <AmiBlitz3.ab3@26383>   CMP.b #$6,D2
00033AD4 <AmiBlitz3.ab3@26384>    BCC.w JUMP_badforerr
00033AD8 <AmiBlitz3.ab3@26385>   BTST #$F,D2
00033ADC <AmiBlitz3.ab3@26386>    BNE.w 'skip
00033AE2 <AmiBlitz3.ab3@26387>   MOVE.w leaamp,D1
00033AE8 <AmiBlitz3.ab3@26388>   JSR pokewda5s
00033AEA <AmiBlitz3.ab3@26389>   MOVE.w D3,D1
00033AF0 <AmiBlitz3.ab3@26390>   JSR  writeword
00033AF6 <AmiBlitz3.ab3@26393>   MOVE.w pushindex,D1
00033AFC <AmiBlitz3.ab3@26394>   JSR  writeword         ;index lea on stack
00033B00 <AmiBlitz3.ab3@26395>   ANDI.w #$FF,D2
00033B02 <AmiBlitz3.ab3@26397>   MOVEA.l (A7),A1
00033B06 <AmiBlitz3.ab3@26398>   MOVE.w D2,$C(A1)
00033B08 <AmiBlitz3.ab3@26400>   MOVE.w D2,-(A7)
00033B0C <AmiBlitz3.ab3@26401>    BSR.w eval             ;get fin
00033B12 <AmiBlitz3.ab3@26403>    CLR.b onestep
00033B16 <AmiBlitz3.ab3@26404>    CMP.w #$8019,d0
00033B1A <AmiBlitz3.ab3@26405>    BEQ 'l1
00033B22 <AmiBlitz3.ab3@26406>    MOVE.b #1,onestep
00033B24 <AmiBlitz3.ab3@26410>   MOVE.w (A7),D2
00033B2A <AmiBlitz3.ab3@26412>   MOVE.w pushd0l,D1
00033B2E <AmiBlitz3.ab3@26413>   CMP.w #$3,D2
00033B32 <AmiBlitz3.ab3@26414>    BCC.w 'skip1
00033B38 <AmiBlitz3.ab3@26415>   MOVE.w pushd0wd,D1
00033B3A <AmiBlitz3.ab3@26418>    MOVE.w D1,-(A7)
00033B40 <AmiBlitz3.ab3@26420>    TST.b fpu
00033B44 <AmiBlitz3.ab3@26421>    BEQ 'old
00033B48 <AmiBlitz3.ab3@26422>    CMP.b #5,d2
00033B4C <AmiBlitz3.ab3@26423>    BNE 'old
00033B52 <AmiBlitz3.ab3@26424>    MOVE.l #$f2276400,d1
00033B58 <AmiBlitz3.ab3@26426>    JSR writelong
00033B5C <AmiBlitz3.ab3@26427>  BRA 'weit
00033B62 <AmiBlitz3.ab3@26431>    JSR  writeword        ;push fin on stack                                   ;fpu for end value
00033B66 <AmiBlitz3.ab3@26434>   CMP.w #-$7FE7,D0      ; was #$8019,
00033B6A <AmiBlitz3.ab3@26435>    BNE.w 'defstep
00033B6E <AmiBlitz3.ab3@26437>    BSR.w eval           ;get step
00033B74 <AmiBlitz3.ab3@26439>    TST.b fpu
00033B78 <AmiBlitz3.ab3@26440>    BEQ 'pushstep
00033B7C <AmiBlitz3.ab3@26441>    CMP.b #5,d2
00033B80 <AmiBlitz3.ab3@26442>    BNE 'pushstep
00033B86 <AmiBlitz3.ab3@26443>    MOVE.l #$f2276400,d1                                    ;write step <> 1
00033B8C <AmiBlitz3.ab3@26445>   JSR writelong
00033B8E <AmiBlitz3.ab3@26450>    MOVE.w (a7)+,d1
00033B92 <AmiBlitz3.ab3@26451>  BRA 'fpur
00033B96 <AmiBlitz3.ab3@26455>   CMP.w #$4,D2
00033B9A <AmiBlitz3.ab3@26456>    BCC.w 'qup
00033B9E <AmiBlitz3.ab3@26457>   MOVE.w #$7001,D1
00033BA4 <AmiBlitz3.ab3@26458>   JSR writeword
00033BA8 <AmiBlitz3.ab3@26459>  BRA.w 'pushstep
00033BAC <AmiBlitz3.ab3@26462>   BNE.w 'notq
00033BB0 <AmiBlitz3.ab3@26463>   MOVE.w #$7001,D1
00033BB6 <AmiBlitz3.ab3@26464>   JSR writeword
00033BBC <AmiBlitz3.ab3@26465>   MOVE.w swapd0,D1
00033BC2 <AmiBlitz3.ab3@26466>   JSR writeword
00033BC6 <AmiBlitz3.ab3@26467>  BRA.w 'pushstep
00033BCC <AmiBlitz3.ab3@26471>   TST.b fpu
00033BD0 <AmiBlitz3.ab3@26472>    BEQ 'old2
00033BD4 <AmiBlitz3.ab3@26473>   CMP.b #5,d2
00033BD8 <AmiBlitz3.ab3@26474>    BNE 'old2
00033BDE <AmiBlitz3.ab3@26475>   MOVE.l #$f23c5000,d1
00033BE4 <AmiBlitz3.ab3@26476>   JSR writelong
00033BE8 <AmiBlitz3.ab3@26477>   MOVE.w #$1,d1
00033BEE <AmiBlitz3.ab3@26478>   JSR writeword
00033BF4 <AmiBlitz3.ab3@26479>   MOVE.l #$f2276400,d1
00033BFA <AmiBlitz3.ab3@26480>   JSR writelong
00033BFC <AmiBlitz3.ab3@26481>   MOVE.w (a7)+,d1
00033C00 <AmiBlitz3.ab3@26482>  BRA 'fpur
00033C04 <AmiBlitz3.ab3@26486>   MOVE.w #$203C,D1                                         ;write step 1
00033C0A <AmiBlitz3.ab3@26487>   JSR writeword
00033C10 <AmiBlitz3.ab3@26488>   MOVE.l #$80000041,D1     ;ffp '1'                                ;ffp '1'
00033C16 <AmiBlitz3.ab3@26489>   JSR writelong
00033C18 <AmiBlitz3.ab3@26492>   MOVE.w (A7)+,D1
00033C1E <AmiBlitz3.ab3@26493>   JSR writeword           ;push step on stack                                 ;push step on stack
00033C20 <AmiBlitz3.ab3@26498>   MOVE.w (A7)+,D2
00033C22 <AmiBlitz3.ab3@26499>   MOVEA.l (A7),A1
00033C2A <AmiBlitz3.ab3@26500>   MOVE.l destpointer,$4(A1)
00033C30 <AmiBlitz3.ab3@26501>   LEA forcompb,A0
00033C36 <AmiBlitz3.ab3@26502>   LEA forcompbf,A1
00033C3A <AmiBlitz3.ab3@26503>   CMP.w #$1,D2
00033C3E <AmiBlitz3.ab3@26504>    BEQ.w 'docomp
00033C44 <AmiBlitz3.ab3@26505>   LEA forcompw,A0
00033C4A <AmiBlitz3.ab3@26506>   LEA forcompwf,A1
00033C4E <AmiBlitz3.ab3@26507>   CMP.w #$2,D2
00033C52 <AmiBlitz3.ab3@26508>    BEQ.w 'docomp
00033C58 <AmiBlitz3.ab3@26509>   LEA forcompl,A0
00033C5E <AmiBlitz3.ab3@26510>   LEA forcomplf,A1
00033C62 <AmiBlitz3.ab3@26511>   CMP.w #$5,D2
00033C66 <AmiBlitz3.ab3@26512>    BNE.w 'docomp
00033C6C <AmiBlitz3.ab3@26514>   TST.b fpu
00033C70 <AmiBlitz3.ab3@26515>    BEQ 'old3
00033C76 <AmiBlitz3.ab3@26516>   LEA fpu_start,a0
00033C7C <AmiBlitz3.ab3@26517>   LEA fpu_end,a1
00033C82 <AmiBlitz3.ab3@26518>   JSR pokecode
00033C86 <AmiBlitz3.ab3@26519>  BRA 'fpu3
00033C8C <AmiBlitz3.ab3@26523>   LEA forcompf,A0                                         ;
00033C92 <AmiBlitz3.ab3@26524>   LEA forcompff,A1
00033C98 <AmiBlitz3.ab3@26525>   JSR pokecode
00033C9C <AmiBlitz3.ab3@26526>   MOVE.w #$C900,D1       ; #getffpbase,
00033CA0 <AmiBlitz3.ab3@26527>   BSR.w Atokejsr
00033CA6 <AmiBlitz3.ab3@26528>   LEA forcompf2,A0
00033CAC <AmiBlitz3.ab3@26529>   LEA forcompf2f,A1
00033CB2 <AmiBlitz3.ab3@26532>   JSR pokecode
00033CB8 <AmiBlitz3.ab3@26534>   TST.b fast                                               ;fast for next
00033CBC <AmiBlitz3.ab3@26535>    BEQ 's1
00033CC0 <AmiBlitz3.ab3@26536>   CMP.w #3,d2
00033CC4 <AmiBlitz3.ab3@26537>    BNE 's1
00033CCA <AmiBlitz3.ab3@26538>   TST.b onestep
00033CCE <AmiBlitz3.ab3@26539>    BEQ 's1
00033CD8 <AmiBlitz3.ab3@26540>   SUB.l #10,destpointer
00033CDC <AmiBlitz3.ab3@26541>   MOVE.w #$b081,d1
00033CE2 <AmiBlitz3.ab3@26542>   JSR writeword
00033CE6 <AmiBlitz3.ab3@26547>   MOVE.l thebgt(PC),D1
00033CEC <AmiBlitz3.ab3@26548>   JSR writelong
00033CEE <AmiBlitz3.ab3@26553>   MOVEA.l (A7)+,A1
00033CF6 <AmiBlitz3.ab3@26554>   MOVE.l destpointer,$8(A1)
00033CFC <AmiBlitz3.ab3@26555> JMP reget
00033D00 <AmiBlitz3.ab3@26560>   MOVEA.l 8(a7),a2
00033D04 <AmiBlitz3.ab3@26561>   Dc.l $f2124400                                           ;fmove.s (a2),fp0
00033D0A <AmiBlitz3.ab3@26562>   fmove.s 4(a7),fp1
00033D0E <AmiBlitz3.ab3@26563>   BTST.b #7,(a7)
00033D12 <AmiBlitz3.ab3@26564>   BNE 'negi
00033D16 <AmiBlitz3.ab3@26565>   fcmp.x fp1,fp0
00033D1A <AmiBlitz3.ab3@26566>  BRA 'negi2
00033D1E <AmiBlitz3.ab3@26569>   fcmp.x fp0,fp1
00033D22 <AmiBlitz3.ab3@26572>   Dc.l $f2920000                                           ;fbgt.w
00033D26 <AmiBlitz3.ab3@26578>   BGT.w thebgt
00033D2C <AmiBlitz3.ab3@26581> JUMP_error4char          JMP error4char
00033D32 <AmiBlitz3.ab3@26582> JUMP_error_convert_types JMP error_convert_types
00033D38 <AmiBlitz3.ab3@26583> JUMP_noleterr            JMP noleterr
00033D3E <AmiBlitz3.ab3@26584> JUMP_nocomerr            JMP nocomerr
00033D44 <AmiBlitz3.ab3@26585> JUMP_comerr              JMP comerr
00033D4A <AmiBlitz3.ab3@26589>   MOVE.l A5,letstart
00033D50 <AmiBlitz3.ab3@26590>   JSR getparameter
00033D5A <AmiBlitz3.ab3@26597>   MOVE.l destpointer,pushpc
00033D64 <AmiBlitz3.ab3@26598>   MOVE.l hunkoffsetbase,pushoff
00033D6A <AmiBlitz3.ab3@26599>   CLR.l rightsidetype
00033D70 <AmiBlitz3.ab3@26600>   CLR.w rightsideflagmask
00033D78 <AmiBlitz3.ab3@26602>   MOVE.w #$0001,regnum            ;don't disturb this reg!
00033D7E <AmiBlitz3.ab3@26603>   JSR fetchvars                   ;var in a3, type in a2
00033D84 <AmiBlitz3.ab3@26604>   JSR calcvar                     ;get offset stuff
00033D8A <AmiBlitz3.ab3@26606>   TST.b formode
00033D8E <AmiBlitz3.ab3@26607>   BEQ 'lf1
00033D94 <AmiBlitz3.ab3@26608>   CMP.l #newtype_double,A2
00033D98 <AmiBlitz3.ab3@26609>   BEQ JUMP_notallowd
00033D9E <AmiBlitz3.ab3@26610>   MOVE.l a2,currtype
00033DA4 <AmiBlitz3.ab3@26613>   CLR.w startoffsetmore
00033DA8 <AmiBlitz3.ab3@26614>   CMP.w #$3d,d0
00033DAC <AmiBlitz3.ab3@26615>   BNE 'l1a
00033DB0 <AmiBlitz3.ab3@26616>   BTST #15,d2
00033DB4 <AmiBlitz3.ab3@26617>   BEQ 'l1a
00033DB8 <AmiBlitz3.ab3@26618>   CMP.b #1,d2
00033DBC <AmiBlitz3.ab3@26619>   BNE 'l1a
00033DC6 <AmiBlitz3.ab3@26620>   MOVE.w leaa0a0+2,startoffsetmore
00033DCC <AmiBlitz3.ab3@26624>   CLR.w regnum                     ;don't disturb this reg
00033DD0 <AmiBlitz3.ab3@26625>   BSR.w pushdo
00033DD6 <AmiBlitz3.ab3@26626>   CLR.w commode
00033DDC <AmiBlitz3.ab3@26628>   CLR.w stackcorrect
00033DE2 <AmiBlitz3.ab3@26630>   CLR.w pcodd
00033DE8 <AmiBlitz3.ab3@26632>   MOVE.w startoffsetmore,d1
00033DEC <AmiBlitz3.ab3@26633>   BTST #0,d1
00033DF0 <AmiBlitz3.ab3@26634>   BEQ 'l2a
00033DF8 <AmiBlitz3.ab3@26635>   MOVE.w #1,pcodd
00033DFC <AmiBlitz3.ab3@26640>   CMP.w #$3D,D0              ;'='                              ;=
00033E00 <AmiBlitz3.ab3@26641>   BEQ.w 'nextcom
00033E02 <AmiBlitz3.ab3@26645>   MOVE.b (a5)+,d1
00033E06 <AmiBlitz3.ab3@26646>   BEQ 'l10
00033E0A <AmiBlitz3.ab3@26647>   CMP.b #":",d1
00033E0E <AmiBlitz3.ab3@26648>   BEQ 'l10
00033E12 <AmiBlitz3.ab3@26649>   CMP.b #";",d1
00033E16 <AmiBlitz3.ab3@26650>   BEQ 'l10
00033E1A <AmiBlitz3.ab3@26651>   CMP.b #"0",d1
00033E1E <AmiBlitz3.ab3@26652>   BLT 'l11
00033E22 <AmiBlitz3.ab3@26653>   CMP.b #"9",d1
00033E26 <AmiBlitz3.ab3@26654>   BGT 'l11
00033E2A <AmiBlitz3.ab3@26655>  BRA.s 'l1
00033E32 <AmiBlitz3.ab3@26658>   MOVE.b #1,quickadd
00033E38 <AmiBlitz3.ab3@26665>   MOVEA.l letstart,A5
00033E3A <AmiBlitz3.ab3@26666>   SUBQ.w #1,A5
00033E3E <AmiBlitz3.ab3@26669>   CMP.b #$7,D2
00033E42 <AmiBlitz3.ab3@26670>    BNE.w 'notstring
00033E46 <AmiBlitz3.ab3@26681>   MOVEM.w D2-D3,-(A7)
00033E4C <AmiBlitz3.ab3@26682>   MOVE.l lastoffset_org,-(A7)
00033E52 <AmiBlitz3.ab3@26683>   MOVE.w varmode,-(A7)
00033E5C <AmiBlitz3.ab3@26686>     MOVE.l #forthstack,forthsp
00033E66 <AmiBlitz3.ab3@26687>    MOVE.l #precstack,precsp
00033E6C <AmiBlitz3.ab3@26688>    CLR.w regnum
00033E72 <AmiBlitz3.ab3@26689>    CLR.w nonew
00033E78 <AmiBlitz3.ab3@26690>    CLR.w sbasegot
00033E82 <AmiBlitz3.ab3@26691>    MOVE.w varcodelen,oldvcodelen
00033E88 <AmiBlitz3.ab3@26692>    CLR.w varcodelen
00033E90 <AmiBlitz3.ab3@26693>    MOVE.w #$FFFF,lasta6
00033E92 <AmiBlitz3.ab3@26697>   MOVEQ.l #$07,D2
00033E96 <AmiBlitz3.ab3@26698>    BSR.w eval
00033E9C <AmiBlitz3.ab3@26699>   MOVE.w (A7)+,varmode
00033EA2 <AmiBlitz3.ab3@26700>   MOVE.l (A7)+,lastoffset_org
00033EA8 <AmiBlitz3.ab3@26701>   MOVE.w moved0a3,D1
00033EAE <AmiBlitz3.ab3@26702>    JSR writeword
00033EB4 <AmiBlitz3.ab3@26703>   MOVE.w commode,D1
00033EB8 <AmiBlitz3.ab3@26704>    BEQ.w 'stconti
00033EBE <AmiBlitz3.ab3@26705>   LEA pulla2st,A0
00033EC4 <AmiBlitz3.ab3@26706>   LEA pulla2stf,A1
00033ECA <AmiBlitz3.ab3@26707>    JSR pokecode
00033ECE <AmiBlitz3.ab3@26708>  BRA.w 'stconti2
00033ED2 <AmiBlitz3.ab3@26711>   BSR.w pushput
00033ED6 <AmiBlitz3.ab3@26714>   MOVEM.w (A7)+,D2-D3
00033EDA <AmiBlitz3.ab3@26715>   BTST #$F,D2
00033EDE <AmiBlitz3.ab3@26716>   BNE.w 'already
00033EE4 <AmiBlitz3.ab3@26717>     MOVE.w D3,leaa5d3a2+2
00033EEA <AmiBlitz3.ab3@26718>     MOVE.l leaa5d3a2,D1
00033EF0 <AmiBlitz3.ab3@26719>     JSR pokela5s
00033EF4 <AmiBlitz3.ab3@26722>   MOVE.w #$FE6F,D1         ; was #65135,
00033EFA <AmiBlitz3.ab3@26723>   JSR uselib
00033F00 <AmiBlitz3.ab3@26724>   MOVE.l #$C700,D1         ; was #lastring,
00033F06 <AmiBlitz3.ab3@26725>   MOVE.l d1,lastinstruction
00033F0C <AmiBlitz3.ab3@26726>   MOVE.w varmode,D2
00033F10 <AmiBlitz3.ab3@26727>   BNE.w 'local
00033F12 <AmiBlitz3.ab3@26728>     ADDQ.w #1,D1           ;use global allocmem
00033F16 <AmiBlitz3.ab3@26731>   BSR.w Atokejsr
00033F1A <AmiBlitz3.ab3@26732>   CMP.w #$2C,D0           ;','
00033F1E <AmiBlitz3.ab3@26733>   BNE.w 'done
00033F24 <AmiBlitz3.ab3@26735>   MOVE.w addq4a2,D1
00033F2A <AmiBlitz3.ab3@26736>   JSR writeword
00033F2E <AmiBlitz3.ab3@26737>  BRA.w 'nextstr
00033F32 <AmiBlitz3.ab3@26740>    BTST #$E,D2             ;pointer, ignore!
00033F36 <AmiBlitz3.ab3@26741>    BNE.w 'skip
00033F38 <AmiBlitz3.ab3@26742>   TST.b D2
00033F3C <AmiBlitz3.ab3@26743>    BEQ.w JUMP_noleterr     ;tried to assign a struct - later!
00033F42 <AmiBlitz3.ab3@26745>    TST.b newsyntax
00033F46 <AmiBlitz3.ab3@26746>    BEQ 'skip2
00033F4A <AmiBlitz3.ab3@26749>    CMP.w #$4022,(a5)
00033F4E <AmiBlitz3.ab3@26750>    BNE 'skip2
00033F54 <AmiBlitz3.ab3@26751>    CMP.l #3,d2
00033F58 <AmiBlitz3.ab3@26752>    BNE  JUMP_error_convert_types
00033F5A <AmiBlitz3.ab3@26753>    ADDQ #2,a5
00033F5C <AmiBlitz3.ab3@26754>    MOVEQ #0,d0
00033F5E <AmiBlitz3.ab3@26755>    MOVE.b (a5)+,d0
00033F62 <AmiBlitz3.ab3@26756>    BEQ 'skip2
00033F66 <AmiBlitz3.ab3@26757>    CMP.b #$22,d0
00033F6A <AmiBlitz3.ab3@26758>    BNE 'l5
00033F6E <AmiBlitz3.ab3@26759>    MOVE.b #0,d0
00033F72 <AmiBlitz3.ab3@26760>  BRA 'do
00033F74 <AmiBlitz3.ab3@26763>   ASL.l #8,d0
00033F76 <AmiBlitz3.ab3@26764>    MOVE.b (a5)+,d0
00033F7A <AmiBlitz3.ab3@26765>    BEQ 'skip2
00033F7E <AmiBlitz3.ab3@26766>    CMP.b #$22,d0
00033F82 <AmiBlitz3.ab3@26767>    BNE 'l2
00033F86 <AmiBlitz3.ab3@26768>    MOVE.b #0,d0
00033F88 <AmiBlitz3.ab3@26769>    ASR.l #8,d0
00033F8C <AmiBlitz3.ab3@26770>  BRA 'do
00033F8E <AmiBlitz3.ab3@26773>   ASL.l #8,d0
00033F90 <AmiBlitz3.ab3@26774>     MOVE.b (a5)+,d0
00033F94 <AmiBlitz3.ab3@26775>    BEQ 'skip2
00033F98 <AmiBlitz3.ab3@26776>    CMP.b #$22,d0
00033F9C <AmiBlitz3.ab3@26777>    BNE 'l3
00033FA0 <AmiBlitz3.ab3@26778>    MOVE.b #0,d0
00033FA2 <AmiBlitz3.ab3@26779>    ASR.l #8,d0
00033FA6 <AmiBlitz3.ab3@26780>  BRA 'do
00033FA8 <AmiBlitz3.ab3@26783>   ASL.l #8,d0
00033FAA <AmiBlitz3.ab3@26784>     MOVE.b (a5)+,d0
00033FAE <AmiBlitz3.ab3@26785>    BEQ 'skip2
00033FB2 <AmiBlitz3.ab3@26786>    CMP.b #$22,d0
00033FB6 <AmiBlitz3.ab3@26787>    BNE 'l4
00033FBA <AmiBlitz3.ab3@26788>    MOVE.b #0,d0
00033FBC <AmiBlitz3.ab3@26789>    ASR.l #8,d0
00033FC0 <AmiBlitz3.ab3@26790>  BRA 'do
00033FC4 <AmiBlitz3.ab3@26793>    CMP.b #$22,(a5)+
00033FC8 <AmiBlitz3.ab3@26794>    BNE JUMP_error4char
00033FCC <AmiBlitz3.ab3@26797>   MOVE.w #$2b7c,d1
00033FD2 <AmiBlitz3.ab3@26798>    TST.w varmode
00033FD6 <AmiBlitz3.ab3@26799>    BEQ 'g3
00033FDA <AmiBlitz3.ab3@26800>    BCLR #9,d1
00033FE0 <AmiBlitz3.ab3@26803>     JSR writeword
00033FE2 <AmiBlitz3.ab3@26804>     MOVE.l d0,d1
00033FE8 <AmiBlitz3.ab3@26805>     JSR writelong
00033FEA <AmiBlitz3.ab3@26806>     MOVE.w d3,d1
00033FF0 <AmiBlitz3.ab3@26807>     JSR writeword
00033FF6 <AmiBlitz3.ab3@26808>     JSR get1bytemain
00033FF8 <AmiBlitz3.ab3@26809>  RTS
00033FFE <AmiBlitz3.ab3@26816>   MOVE.w d2,vartype
00034002 <AmiBlitz3.ab3@26818>   MOVE.b #$3,D2
00034006 <AmiBlitz3.ab3@26825>   CMP.b #5,d2
0003400A <AmiBlitz3.ab3@26826>   BNE 'l1aa
00034010 <AmiBlitz3.ab3@26827>   MOVE.l a2,currtype
00034014 <AmiBlitz3.ab3@26832>   MOVEM.w D2-D3,-(A7)
0003401A <AmiBlitz3.ab3@26833>   MOVE.w varmode,-(A7)
00034020 <AmiBlitz3.ab3@26835>   MOVE.l a2,leftsidetype
0003402A <AmiBlitz3.ab3@26836>   MOVE.w flagmask,leftsideflagmask
0003402E <AmiBlitz3.ab3@26837>   BTST #$f,d2
00034032 <AmiBlitz3.ab3@26838>   BEQ 'nomultiassign
00034038 <AmiBlitz3.ab3@26839>   CLR.l leftsidetype                        ;its multiassign to type entries so no typecheck need
0003403E <AmiBlitz3.ab3@26840>   CLR.w leftsideflagmask
00034042 <AmiBlitz3.ab3@26844>   ANDI.w #$FF,D2
00034048 <AmiBlitz3.ab3@26845>   MOVE.l lastoffset_org,-(A7)
0003404E <AmiBlitz3.ab3@26846>   JSR eval                                ; calc right side of var assign
00034052 <AmiBlitz3.ab3@26848>   MOVEM.l a0/a1,-(a7)
00034058 <AmiBlitz3.ab3@26849>   MOVE.l leftsidetype,a0
0003405E <AmiBlitz3.ab3@26850>   CMP.l #0,a0
00034062 <AmiBlitz3.ab3@26851>   BEQ 'nocheck
0003406A <AmiBlitz3.ab3@26852>   CMP.w #1,leftsideflagmask
0003406E <AmiBlitz3.ab3@26853>   BEQ 'isptr
00034076 <AmiBlitz3.ab3@26854>   CMP.l #$100,4(a0)
0003407A <AmiBlitz3.ab3@26855>   BLE 'nocheck
00034080 <AmiBlitz3.ab3@26858>   TST.l typetocast
00034084 <AmiBlitz3.ab3@26859>   BEQ 'nocast
0003408A <AmiBlitz3.ab3@26860>   MOVE.l typetocast,a1
0003408E <AmiBlitz3.ab3@26861>   BRA 'typecheck
00034094 <AmiBlitz3.ab3@26864>   TST.l rightsidetype
00034098 <AmiBlitz3.ab3@26865>   BEQ 'nocheck
0003409E <AmiBlitz3.ab3@26866>   MOVE.l rightsidetype,a1
000340A6 <AmiBlitz3.ab3@26867>   CMP.w #1,rightsideflagmask
000340AA <AmiBlitz3.ab3@26868>   BEQ 'ok
000340B2 <AmiBlitz3.ab3@26869>   CMP.l #$100,4(a1)
000340B6 <AmiBlitz3.ab3@26870>   BGE 'typecheck
000340BE <AmiBlitz3.ab3@26871>   CMP.l #$3,4(a1)
000340C2 <AmiBlitz3.ab3@26872>   BEQ 'ok                              ;long assign is allow with this codelines
000340C6 <AmiBlitz3.ab3@26873>   BRA 'error
000340CC <AmiBlitz3.ab3@26876>   TST.b typecheck
000340D0 <AmiBlitz3.ab3@26877>   BEQ 'nocheck
000340D6 <AmiBlitz3.ab3@26878>   TST.b notypecheck
000340DA <AmiBlitz3.ab3@26879>   BNE 'ok
000340DC <AmiBlitz3.ab3@26880>   CMP.l a0,a1
000340E0 <AmiBlitz3.ab3@26881>   BEQ 'ok
000340E4 <AmiBlitz3.ab3@26883>   MOVE.l 4(a1),a1                   ; load the address of 1. type.
000340E8 <AmiBlitz3.ab3@26884>   CMP.l $a(a1),a0                   ; check if the bigger type contain in first place same type as the function need
000340EC <AmiBlitz3.ab3@26885>   BEQ 'ok
000340F2 <AmiBlitz3.ab3@26888>  JMP   error_convert_types     ;for syntax 4  = typecheck
000340F8 <AmiBlitz3.ab3@26892>    CLR.l typetocast
000340FC <AmiBlitz3.ab3@26893>    MOVEM.l (a7)+, a0/a1
00034102 <AmiBlitz3.ab3@26895>   MOVE.l (A7)+,lastoffset_org
00034108 <AmiBlitz3.ab3@26896>   MOVE.w commode,D1
0003410C <AmiBlitz3.ab3@26897>    BNE.w 'conti
00034110 <AmiBlitz3.ab3@26898>    BSR.w pushput
00034116 <AmiBlitz3.ab3@26901>   MOVE.w (A7)+,varmode
0003411A <AmiBlitz3.ab3@26902>   MOVEM.w (A7)+,D2-D3
0003411E <AmiBlitz3.ab3@26907>   MOVE.w #$2B40,D1
00034124 <AmiBlitz3.ab3@26908>   MOVE.w varmode,D4
00034128 <AmiBlitz3.ab3@26909>    BEQ.w 'skip1
0003412C <AmiBlitz3.ab3@26910>   BCLR #$9,D1
00034130 <AmiBlitz3.ab3@26913>   BTST #$F,D2
00034134 <AmiBlitz3.ab3@26914>    BEQ.w 'code
0003413A <AmiBlitz3.ab3@26917>    TST.b stackcorrect
0003413E <AmiBlitz3.ab3@26918>    BNE 'st1
00034144 <AmiBlitz3.ab3@26920>   MOVE.w commode,D1
00034148 <AmiBlitz3.ab3@26921>    BEQ.w 'skipc1
0003414E <AmiBlitz3.ab3@26926>   MOVE.w pulla2,D1
00034154 <AmiBlitz3.ab3@26927>    JSR writeword
00034158 <AmiBlitz3.ab3@26930>   MOVE.w #$2480,D1               ;move.l d0,(a2)
0003415C <AmiBlitz3.ab3@26933>    MOVEM.l a0/d0,-(a7)
00034162 <AmiBlitz3.ab3@26934>    MOVEA.l lastoffset_org,A0
00034164 <AmiBlitz3.ab3@26935>    MOVE.l A0,D0
00034168 <AmiBlitz3.ab3@26936>    BEQ.w 'skipa
0003416A <AmiBlitz3.ab3@26937>    MOVEA.l D0,A0
00034172 <AmiBlitz3.ab3@26938>    MOVE.l $A(A0),currtype
00034176 <AmiBlitz3.ab3@26941>   MOVEM.l (a7)+,a0/d0
0003417A <AmiBlitz3.ab3@26943>   CMP.w #$2C,D0                ; ','
0003417E <AmiBlitz3.ab3@26944>    BNE.w 'code
00034182 <AmiBlitz3.ab3@26946>     MOVE.w #$24C0,D1           ;move.l d0,(a2)+
00034186 <AmiBlitz3.ab3@26947>    BSR.w 'code                                         ;write store
0003418C <AmiBlitz3.ab3@26950>    MOVE.l lastoffset_org,D0
00034194 <AmiBlitz3.ab3@26956>   MOVE.w #$FFFF,commode    ; -1
0003419A <AmiBlitz3.ab3@26957>   CLR.w varcodelen
000341A2 <AmiBlitz3.ab3@26959>   MOVE.b #1,optiarray
000341A8 <AmiBlitz3.ab3@26961>   MOVE.w pusha2,D1
000341AE <AmiBlitz3.ab3@26962>    JSR writeword
000341B4 <AmiBlitz3.ab3@26964>   TST.l lastoffset_org
000341B8 <AmiBlitz3.ab3@26965>   BEQ 'dimmore
000341BE <AmiBlitz3.ab3@26966>   MOVEA.l lastoffset_org,A0
000341C0 <AmiBlitz3.ab3@26968>   MOVE.l (A0),D0
000341C4 <AmiBlitz3.ab3@26969>    BEQ.w JUMP_comerr          ;comma past end of struct
000341C6 <AmiBlitz3.ab3@26970>   MOVEA.l D0,A0
000341CC <AmiBlitz3.ab3@26971>   MOVE.l A0,lastoffset_org
000341D2 <AmiBlitz3.ab3@26972>   BTST #$1,$7(A0)
000341D6 <AmiBlitz3.ab3@26973>    BNE.w JUMP_nocomerr        ;can't use comma on multiple entries
000341DA <AmiBlitz3.ab3@26974>   MOVEA.l $A(A0),A1
000341DE <AmiBlitz3.ab3@26975>   MOVE.l $4(A1),D2
000341E4 <AmiBlitz3.ab3@26979>   BTST #$0,$7(A0)
000341E8 <AmiBlitz3.ab3@26980>    BNE.w 'nextpnt             ;pointer
000341EE <AmiBlitz3.ab3@26981>   CMP.l #$100,D2
000341F2 <AmiBlitz3.ab3@26982>    BCC.l JUMP_nocomerr        ;or on structs
000341F6 <AmiBlitz3.ab3@26983>  BRA.w 'docom                                     ; do do type\x= 10,20,30....
000341FC <AmiBlitz3.ab3@26987>         CLR.b optiarray
00034200 <AmiBlitz3.ab3@26988>         CMP.w #"@@",(a5)
00034204 <AmiBlitz3.ab3@26989>         BEQ 'n1
00034208 <AmiBlitz3.ab3@26990>  BRA 'd1
0003420E <AmiBlitz3.ab3@26993>   JSR nextline
00034210 <AmiBlitz3.ab3@26994>         MOVE.l a5,-(a7)
00034212 <AmiBlitz3.ab3@26997>   MOVE.b (a5)+,d0
00034216 <AmiBlitz3.ab3@26998>         CMP.b #$20,d0
0003421A <AmiBlitz3.ab3@26999>         BEQ 'l6
0003421C <AmiBlitz3.ab3@27000>         MOVE.l (a7)+,a5
00034220 <AmiBlitz3.ab3@27001>         CMP.b #";",d0
00034224 <AmiBlitz3.ab3@27002>         BEQ 'n1
0003422A <AmiBlitz3.ab3@27005>         TST.w debugmode
0003422E <AmiBlitz3.ab3@27006>         BEQ 'nextcom
00034230 <AmiBlitz3.ab3@27007>         MOVE.l a0,-(a7)
00034236 <AmiBlitz3.ab3@27008>         MOVE.l pushat,a0
0003423C <AmiBlitz3.ab3@27009>         CMP.l #0,a0
00034240 <AmiBlitz3.ab3@27010>         BNE 'o1
00034244 <AmiBlitz3.ab3@27011>  BRA 'skipb
0003424C <AmiBlitz3.ab3@27014>         ADD.l #1,2(a0)
00034252 <AmiBlitz3.ab3@27017>   CLR.w commode
0003425A <AmiBlitz3.ab3@27018>         MOVE.b #1,stackcorrect
0003425C <AmiBlitz3.ab3@27019>         MOVE.l (a7)+,a0
00034262 <AmiBlitz3.ab3@27020>  JMP 'nextcom
00034268 <AmiBlitz3.ab3@27024>   CMP.l #$100,D2
0003426C <AmiBlitz3.ab3@27025>    BCS.w 'nextpnt2
0003426E <AmiBlitz3.ab3@27026>   MOVEQ.l #$00,D2
00034272 <AmiBlitz3.ab3@27029>   BSET #$E,D2
00034276 <AmiBlitz3.ab3@27032>   BSET #$F,D2
0003427A <AmiBlitz3.ab3@27033>  BRA.w 'nextcom
00034280 <AmiBlitz3.ab3@27037>    MOVE.l destpointer,a4                   ;
00034288 <AmiBlitz3.ab3@27038>    MOVE.l #$f22a6400,-4(a4)                ;
0003428E <AmiBlitz3.ab3@27039>    MOVE.w arrayoffset,d1                   ;
00034294 <AmiBlitz3.ab3@27040>  JMP writeword                             ;
0003429A <AmiBlitz3.ab3@27045>    TST.b fpu
0003429E <AmiBlitz3.ab3@27046>    BEQ 'nofloat
000342A2 <AmiBlitz3.ab3@27047>    CMP.b #5,d2
000342A6 <AmiBlitz3.ab3@27048>    BNE 'nofloat
000342AC <AmiBlitz3.ab3@27049>    CLR.w fp0var
000342B2 <AmiBlitz3.ab3@27050>    LEA regtable,a4
000342B4 <AmiBlitz3.ab3@27051>    TST.l (a4)
000342B8 <AmiBlitz3.ab3@27052>    BEQ 'noreg
000342BC <AmiBlitz3.ab3@27053>    BTST #15,d2                                             ;regvars
000342C0 <AmiBlitz3.ab3@27054>    BNE 'noreg
000342C4 <AmiBlitz3.ab3@27055>    CMP.w 0+4(a4),d3
000342C8 <AmiBlitz3.ab3@27056>    BNE 'doreg1
000342CE <AmiBlitz3.ab3@27057>    MOVE.l #$f2000380,d1
000342D4 <AmiBlitz3.ab3@27058>    MOVE.w regnum,d0
000342D8 <AmiBlitz3.ab3@27059>    BNE 'noopt
000342DE <AmiBlitz3.ab3@27065>    MOVE.l destpointer,a4
000342E6 <AmiBlitz3.ab3@27066>    CMP.l #$f2001c80,-8(a4)
000342EA <AmiBlitz3.ab3@27067>    BNE 'noopt
000342F2 <AmiBlitz3.ab3@27068>    CMP.l #$f2000422,-4(a4)
000342F6 <AmiBlitz3.ab3@27069>    BNE 'noopt
000342FC <AmiBlitz3.ab3@27070>    MOVE.l #$f20003a2,d1
00034306 <AmiBlitz3.ab3@27071>    SUB.l #8,destpointer
00034308 <AmiBlitz3.ab3@27074>    ASL.w #7,d0
0003430A <AmiBlitz3.ab3@27075>    OR.w d0,d1
00034310 <AmiBlitz3.ab3@27076>    JSR writelong
00034312 <AmiBlitz3.ab3@27077>  RTS
00034316 <AmiBlitz3.ab3@27080>   CMP.w 8+4(a4),d3
0003431A <AmiBlitz3.ab3@27081>    BNE 'doreg2
00034320 <AmiBlitz3.ab3@27082>    MOVE.l #$f2000300,d1
00034326 <AmiBlitz3.ab3@27083>    MOVE.w regnum,d0
00034328 <AmiBlitz3.ab3@27084>    ASL.w #7,d0
0003432A <AmiBlitz3.ab3@27085>    OR.w d0,d1
00034330 <AmiBlitz3.ab3@27086>    JSR writelong
00034332 <AmiBlitz3.ab3@27087>  RTS
00034336 <AmiBlitz3.ab3@27090>   CMP.w 16+4(a4),d3
0003433A <AmiBlitz3.ab3@27091>    BNE 'doreg3
00034340 <AmiBlitz3.ab3@27092>    MOVE.l #$f2000280,d1
00034346 <AmiBlitz3.ab3@27093>    MOVE.w regnum,d0
00034348 <AmiBlitz3.ab3@27094>    ASL.w #7,d0
0003434A <AmiBlitz3.ab3@27095>    OR.w d0,d1
00034350 <AmiBlitz3.ab3@27096>    JSR  writelong
00034352 <AmiBlitz3.ab3@27097>  RTS
00034356 <AmiBlitz3.ab3@27100>   CMP.w 24+4(a4),d3
0003435A <AmiBlitz3.ab3@27101>    BNE 'doreg4
00034360 <AmiBlitz3.ab3@27102>    MOVE.l #$f2000200,d1
00034366 <AmiBlitz3.ab3@27103>    MOVE.w regnum,d0
00034368 <AmiBlitz3.ab3@27104>    ASL.w #7,d0
0003436A <AmiBlitz3.ab3@27105>    OR.w d0,d1
00034370 <AmiBlitz3.ab3@27106>    JSR writelong
00034372 <AmiBlitz3.ab3@27107>  RTS
00034376 <AmiBlitz3.ab3@27110>   CMP.w 32+4(a4),d3
0003437A <AmiBlitz3.ab3@27111>    BNE 'noreg
00034380 <AmiBlitz3.ab3@27112>    MOVE.l #$f2000180,d1
00034386 <AmiBlitz3.ab3@27113>    MOVE.w regnum,d0
00034388 <AmiBlitz3.ab3@27114>    ASL.w #7,d0
0003438A <AmiBlitz3.ab3@27115>    OR.w d0,d1
00034390 <AmiBlitz3.ab3@27116>    JSR writelong
00034392 <AmiBlitz3.ab3@27117>  RTS
00034398 <AmiBlitz3.ab3@27120>    TST.w regnum
0003439C <AmiBlitz3.ab3@27121>    BNE 'nofp0
000343A2 <AmiBlitz3.ab3@27122>    MOVE.l destpointer ,a4
000343AA <AmiBlitz3.ab3@27123>    CMP.l #$f2304400,-6(a4)
000343AE <AmiBlitz3.ab3@27124>    BNE 'do5
000343B4 <AmiBlitz3.ab3@27125>    CMP.w #$1990,-2(a4)
000343B8 <AmiBlitz3.ab3@27126>    BNE 'do5
000343BC <AmiBlitz3.ab3@27127>    BTST #15,d2                                             ;types ?
000343C0 <AmiBlitz3.ab3@27128>    BNE 'do5
000343C6 <AmiBlitz3.ab3@27129>   MOVE.l #$2b701990,d1                                     ;var
000343CC <AmiBlitz3.ab3@27130>   TST.w varmode
000343D0 <AmiBlitz3.ab3@27131>   BEQ 'glob1
000343D4 <AmiBlitz3.ab3@27132>   BCLR #25,d1
000343D8 <AmiBlitz3.ab3@27135>   MOVE.l d1,-6(a4)
000343DC <AmiBlitz3.ab3@27136>   MOVE.w d3,-2(a4)
000343E2 <AmiBlitz3.ab3@27137>   CLR.w fp0var
000343EA <AmiBlitz3.ab3@27138>   MOVE.w #$ffff,fp0mode
000343EC <AmiBlitz3.ab3@27139>  RTS
000343F4 <AmiBlitz3.ab3@27142>    CMP.l #$f22d4400,-6(a4)                                 ;fmove.s (a5),fp0
000343F8 <AmiBlitz3.ab3@27143>    BNE 'do3
00034402 <AmiBlitz3.ab3@27144>    CMP.l #newtype_double,currtype
00034406 <AmiBlitz3.ab3@27145>    BEQ 'do4
0003440A <AmiBlitz3.ab3@27148>   MOVE.w #$2b6d,d1
00034410 <AmiBlitz3.ab3@27149>    TST.w varmode
00034414 <AmiBlitz3.ab3@27150>    BEQ 'g2
00034418 <AmiBlitz3.ab3@27151>     BCLR #9,d1
0003441C <AmiBlitz3.ab3@27154>     CMP.w #$2b6d,d1
00034420 <AmiBlitz3.ab3@27155>     BNE 'd1a
00034424 <AmiBlitz3.ab3@27156>     CMP.w -2(a4),d3
00034428 <AmiBlitz3.ab3@27157>     BNE 'd1a
0003442E <AmiBlitz3.ab3@27158>     SUBQ.l #6,destpointer
00034432 <AmiBlitz3.ab3@27159>  BRA 'd12
00034436 <AmiBlitz3.ab3@27162>     MOVE.w d1,-6(a4)                                       ;fmove.s to move.l mem,mem
0003443C <AmiBlitz3.ab3@27163>     MOVE.w -2(a4),-4(a4)
00034440 <AmiBlitz3.ab3@27164>     MOVE.w d3,-2(a4)
00034446 <AmiBlitz3.ab3@27167>   CLR.w fp0var
0003444E <AmiBlitz3.ab3@27168>     MOVE.w #$ffff,fp0mode
00034450 <AmiBlitz3.ab3@27169>  RTS
00034458 <AmiBlitz3.ab3@27172>   CMP.l #$f22c4400,-6(a4)                                  ;fmove.s (a4)
0003445C <AmiBlitz3.ab3@27173>    BNE 'do4
00034460 <AmiBlitz3.ab3@27174>    MOVE.w #$2b6c,d1
00034466 <AmiBlitz3.ab3@27175>       TST.w varmode
0003446A <AmiBlitz3.ab3@27176>    BEQ 'g3a
0003446E <AmiBlitz3.ab3@27177>    BCLR #9,d1
00034472 <AmiBlitz3.ab3@27180>   MOVE.w d1,-6(a4)
00034478 <AmiBlitz3.ab3@27181>     MOVE.w -2(a4),-4(a4)
0003447C <AmiBlitz3.ab3@27182>     MOVE.w d3,-2(a4)
00034482 <AmiBlitz3.ab3@27183>     CLR.w fp0var
0003448A <AmiBlitz3.ab3@27184>     MOVE.w #$ffff,fp0mode
0003448C <AmiBlitz3.ab3@27185>  RTS
00034492 <AmiBlitz3.ab3@27188>   MOVE.w d3,fp0var
0003449C <AmiBlitz3.ab3@27189>    MOVE.w varmode,fp0mode
0003449E <AmiBlitz3.ab3@27190>    ADDQ.l #6,a4
000344A4 <AmiBlitz3.ab3@27191>    MOVE.l a4,fp0addr
000344AE <AmiBlitz3.ab3@27192>    MOVE.l firstiff,fp0iff
000344B2 <AmiBlitz3.ab3@27195>   MOVEM.l d0/d4,-(a7)
000344B4 <AmiBlitz3.ab3@27196>    MOVEQ #0,d0
000344BA <AmiBlitz3.ab3@27197>     MOVE.w regnum,d0
000344BC <AmiBlitz3.ab3@27198>    ASL.w #7,d0                                             ;fpu store var
000344C0 <AmiBlitz3.ab3@27199>   BTST #15,d2
000344C4 <AmiBlitz3.ab3@27200>    BEQ 'var
000344C6 <AmiBlitz3.ab3@27201>    MOVE.w d1,d4
000344CA <AmiBlitz3.ab3@27202>    CMP.w #$24c0,d4
000344CE <AmiBlitz3.ab3@27203>    BNE 'nopl
000344D4 <AmiBlitz3.ab3@27204>    MOVE.l #$f21a6400,d1
000344D6 <AmiBlitz3.ab3@27205>    MOVEQ #0,d3
000344DA <AmiBlitz3.ab3@27206>  BRA 'glob
000344E0 <AmiBlitz3.ab3@27210>   MOVE.l #$f2126400,d1
000344E2 <AmiBlitz3.ab3@27211>    TST.w d3                                                ;offset =0
000344E6 <AmiBlitz3.ab3@27212>    BNE 'offset
000344EC <AmiBlitz3.ab3@27213>    MOVE.l #$f2126400,d1
000344EE <AmiBlitz3.ab3@27221>    MOVEQ #0,d3
000344F2 <AmiBlitz3.ab3@27222>  BRA 'glob
000344F8 <AmiBlitz3.ab3@27225>   MOVE.l #$f22d6400,d1                                     ;var
000344FE <AmiBlitz3.ab3@27226>   TST.w varmode
00034502 <AmiBlitz3.ab3@27227>   BEQ 'glob
00034506 <AmiBlitz3.ab3@27228>   BCLR #16,d1
00034508 <AmiBlitz3.ab3@27229>  'glob OR.l d0,d1
00034512 <AmiBlitz3.ab3@27232>   CMP.l #newtype_double,currtype
00034516 <AmiBlitz3.ab3@27233>   BNE 'dbl1
0003451C <AmiBlitz3.ab3@27234>   OR.l #$00001000,d1
00034522 <AmiBlitz3.ab3@27237>   JSR writelong
00034528 <AmiBlitz3.ab3@27238>   CLR.l currtype
0003452C <AmiBlitz3.ab3@27239>   MOVEM.l (a7)+,d0/d4
0003452E <AmiBlitz3.ab3@27240>   MOVE.l d3,d1
00034532 <AmiBlitz3.ab3@27241>   BEQ 'nooffs
00034538 <AmiBlitz3.ab3@27242>  JMP writeword
0003453A <AmiBlitz3.ab3@27245>  RTS
00034540 <AmiBlitz3.ab3@27259>     TST.b fast                                             ;write lea->xx(a2)
00034544 <AmiBlitz3.ab3@27260>    BEQ 'la10
0003454A <AmiBlitz3.ab3@27264>    TST.b quickadd
00034550 <AmiBlitz3.ab3@27266>      CLR.b quickadd
00034554 <AmiBlitz3.ab3@27267>    CMP.w #$2480,d1
00034558 <AmiBlitz3.ab3@27268>    BNE 'la10
0003455E <AmiBlitz3.ab3@27269>    TST.b optiarray
00034562 <AmiBlitz3.ab3@27270>    BNE 'la10
00034568 <AmiBlitz3.ab3@27271>    MOVE.l destpointer,a4
0003456E <AmiBlitz3.ab3@27272>    CMP.w #$45ea,-4(a4)
00034572 <AmiBlitz3.ab3@27273>    BNE 'la10
0003457A <AmiBlitz3.ab3@27274>    CMP.w #8,pushclen
0003457E <AmiBlitz3.ab3@27275>    BEQ 'la100
00034586 <AmiBlitz3.ab3@27276>    CMP.w #6,pushclen
0003458A <AmiBlitz3.ab3@27277>    BNE 'la10
0003458E <AmiBlitz3.ab3@27278>    CMP.b #3,d2
00034592 <AmiBlitz3.ab3@27279>    BCS 'la110
00034598 <AmiBlitz3.ab3@27281>    MOVE.w #$2540,-2(a4)
0003459E <AmiBlitz3.ab3@27282>    MOVE.w arrayoffset,d1
000345A4 <AmiBlitz3.ab3@27283>  JMP writeword
000345AA <AmiBlitz3.ab3@27286>    CLR.b quickadd
000345AC <AmiBlitz3.ab3@27287>  RTS
000345B0 <AmiBlitz3.ab3@27290>    CMP.b #2,d2
000345B4 <AmiBlitz3.ab3@27291>    BNE 'la120
000345BA <AmiBlitz3.ab3@27292>     MOVE.w #$3540,-2(a4)
000345C0 <AmiBlitz3.ab3@27293>    MOVE.w arrayoffset,d1
000345C6 <AmiBlitz3.ab3@27294>  JMP writeword
000345CA <AmiBlitz3.ab3@27297>   CMP.b #1,d2
000345CE <AmiBlitz3.ab3@27298>    BNE.s 'la10
000345D4 <AmiBlitz3.ab3@27299>     MOVE.w #$1540,-2(a4)
000345DA <AmiBlitz3.ab3@27300>    MOVE.w arrayoffset,d1
000345E0 <AmiBlitz3.ab3@27301>  JMP writeword
000345E4 <AmiBlitz3.ab3@27304>    CMP.b #3,d2
000345E8 <AmiBlitz3.ab3@27305>    BCS 'la11
000345EE <AmiBlitz3.ab3@27306>    MOVE.w #$2540,-4(a4)
000345F0 <AmiBlitz3.ab3@27307>  RTS
000345F4 <AmiBlitz3.ab3@27310>    CMP.b #2,d2
000345F8 <AmiBlitz3.ab3@27311>    BNE 'la12
000345FE <AmiBlitz3.ab3@27312>     MOVE.w #$3540,-4(a4)
00034600 <AmiBlitz3.ab3@27313>  RTS
00034604 <AmiBlitz3.ab3@27316>    CMP.b #1,d2
00034608 <AmiBlitz3.ab3@27317>    BNE.s 'la10
0003460E <AmiBlitz3.ab3@27318>     MOVE.w #$1540,-4(a4)
00034610 <AmiBlitz3.ab3@27319>  RTS
00034616 <AmiBlitz3.ab3@27322>   CLR.b optiarray
0003461A <AmiBlitz3.ab3@27324>    CMP.b #$1,D2
0003461E <AmiBlitz3.ab3@27325>    BEQ.w 'byte
00034622 <AmiBlitz3.ab3@27326>    BSR.w varalign
00034626 <AmiBlitz3.ab3@27327>    CMP.b #$3,D2
0003462A <AmiBlitz3.ab3@27328>    BCC.w 'writevarlong
00034630 <AmiBlitz3.ab3@27330>    TST.b fast                                              ;optiimmi
00034634 <AmiBlitz3.ab3@27331>    BEQ 'l10bc
0003463A <AmiBlitz3.ab3@27336>    MOVE.l destpointer,a0
00034640 <AmiBlitz3.ab3@27337>    SUB.l imm_addr,a0
00034646 <AmiBlitz3.ab3@27338>    CMP.l #4,a0
0003464A <AmiBlitz3.ab3@27339>    BNE 'l10c
00034650 <AmiBlitz3.ab3@27340>    CLR.l imm_addr
00034656 <AmiBlitz3.ab3@27341>    MOVE.l destpointer,a4
0003465A <AmiBlitz3.ab3@27342>    OR.w #$107c,d1
0003465E <AmiBlitz3.ab3@27343>    MOVE.w d1,-4(a4)
00034660 <AmiBlitz3.ab3@27344>     MOVE.w D3,D1
00034666 <AmiBlitz3.ab3@27345>  JMP writeword
0003466C <AmiBlitz3.ab3@27348>   MOVE.l destpointer,a0
00034672 <AmiBlitz3.ab3@27349>   SUB.l load_var_addr,a0
00034678 <AmiBlitz3.ab3@27350>   CMP.l #4,a0
0003467C <AmiBlitz3.ab3@27351>   BNE 'l10bc
00034682 <AmiBlitz3.ab3@27352>   CMP.w #$302d,-4(a4)                                      ;check 68k opcode
00034686 <AmiBlitz3.ab3@27353>   BNE 'l10bc
0003468C <AmiBlitz3.ab3@27355>   CLR.l load_var_addr
00034692 <AmiBlitz3.ab3@27356>   MOVE.l destpointer,a4
00034696 <AmiBlitz3.ab3@27357>   OR.w #$102d,d1
0003469A <AmiBlitz3.ab3@27358>   MOVE.w d1,-4(a4)
0003469C <AmiBlitz3.ab3@27359>   MOVE.w d3,d1
000346A2 <AmiBlitz3.ab3@27360>  JMP writeword
000346A6 <AmiBlitz3.ab3@27364>   ORI.w #$1000,D1                                          ;word
000346AA <AmiBlitz3.ab3@27365>  BRA.w 'writestorevar
000346B0 <AmiBlitz3.ab3@27370>    TST.b fast                                              ;optiimmi
000346B4 <AmiBlitz3.ab3@27371>    BEQ 'l10bb
000346BA <AmiBlitz3.ab3@27376>    MOVE.l destpointer,a0
000346C0 <AmiBlitz3.ab3@27377>    SUB.l imm_addr,a0
000346C6 <AmiBlitz3.ab3@27378>    CMP.l #4,a0
000346CA <AmiBlitz3.ab3@27379>    BNE 'l10d
000346D0 <AmiBlitz3.ab3@27380>    CLR.l imm_addr
000346D6 <AmiBlitz3.ab3@27381>    MOVE.l destpointer,a4
000346DA <AmiBlitz3.ab3@27382>    OR.w #$7c,d1
000346DE <AmiBlitz3.ab3@27383>    EORI #$3000,d1
000346E2 <AmiBlitz3.ab3@27384>    MOVE.w d1,-4(a4)
000346E4 <AmiBlitz3.ab3@27385>       MOVE.w D3,D1
000346EA <AmiBlitz3.ab3@27386>  JMP writeword
000346F0 <AmiBlitz3.ab3@27389>   MOVE.l destpointer,a0
000346F6 <AmiBlitz3.ab3@27390>   SUB.l load_var_addr,a0
000346FC <AmiBlitz3.ab3@27391>   CMP.l #4,a0
00034700 <AmiBlitz3.ab3@27392>   BNE 'l10bb
00034706 <AmiBlitz3.ab3@27393>   CLR.l load_var_addr
0003470C <AmiBlitz3.ab3@27394>   MOVE.l destpointer,a4
00034712 <AmiBlitz3.ab3@27395>    CMP.w #$1b6d,-4(a4)
00034716 <AmiBlitz3.ab3@27396>    BNE 'l10bb
0003471A <AmiBlitz3.ab3@27397>    OR.w #$2d,d1
0003471E <AmiBlitz3.ab3@27398>    EORI #$3000,d1
00034722 <AmiBlitz3.ab3@27399>    MOVE.w d1,-4(a4)
00034724 <AmiBlitz3.ab3@27400>   MOVE.w d3,d1
0003472A <AmiBlitz3.ab3@27401>  JMP writeword
00034730 <AmiBlitz3.ab3@27405>   ADDQ.w #1,pcodd                                          ;byte
00034734 <AmiBlitz3.ab3@27406>   EORI.w #$3000,D1
0003473A <AmiBlitz3.ab3@27409>   JSR writeword
0003473E <AmiBlitz3.ab3@27410>   BTST #$7,D1
00034742 <AmiBlitz3.ab3@27411>    BNE 'done
00034744 <AmiBlitz3.ab3@27412>   MOVE.w D3,D1
0003474A <AmiBlitz3.ab3@27413>  JMP writeword
00034750 <AmiBlitz3.ab3@27416>    TST.b fast                                              ;optiimmi
00034754 <AmiBlitz3.ab3@27417>    BEQ 'l10ba
0003475A <AmiBlitz3.ab3@27421>    MOVE.l destpointer,a0
00034760 <AmiBlitz3.ab3@27422>    SUB.l imm_addr,a0
00034766 <AmiBlitz3.ab3@27423>    CMP.l #6,a0
0003476A <AmiBlitz3.ab3@27424>    BNE 'l10e
00034770 <AmiBlitz3.ab3@27425>    CLR.l imm_addr
00034776 <AmiBlitz3.ab3@27426>    MOVE.l destpointer,a4
0003477A <AmiBlitz3.ab3@27427>    OR.w #$7c,d1
0003477E <AmiBlitz3.ab3@27428>    MOVE.w d1,-6(a4)
00034780 <AmiBlitz3.ab3@27429>     MOVE.w D3,D1
00034786 <AmiBlitz3.ab3@27430>  JMP writeword
0003478C <AmiBlitz3.ab3@27433>   MOVE.l destpointer,a0
00034792 <AmiBlitz3.ab3@27434>   SUB.l load_var_addr,a0
00034798 <AmiBlitz3.ab3@27435>   CMP.l #4,a0
0003479C <AmiBlitz3.ab3@27436>   BNE 'l10ba
000347A2 <AmiBlitz3.ab3@27437>   CLR.l load_var_addr
000347A8 <AmiBlitz3.ab3@27438>   MOVE.l destpointer,a4
000347AE <AmiBlitz3.ab3@27439>   CMP.w #$245f,-2(a4)
000347B2 <AmiBlitz3.ab3@27440>   BEQ 'l10ba
000347B6 <AmiBlitz3.ab3@27441>   OR.w #$28,d1
000347BA <AmiBlitz3.ab3@27442>   OR.w d1,-4(a4)
000347C0 <AmiBlitz3.ab3@27443>   CMP.w #$2b6d,-4(a4)
000347C4 <AmiBlitz3.ab3@27444>   BNE 'd1aa
000347C8 <AmiBlitz3.ab3@27445>   CMP.w -2(a4),d3
000347CC <AmiBlitz3.ab3@27446>   BNE 'd1aa
000347D2 <AmiBlitz3.ab3@27447>   SUBQ.l #4,destpointer
000347D4 <AmiBlitz3.ab3@27448>  RTS
000347D6 <AmiBlitz3.ab3@27451>   MOVE.w d3,d1
000347DC <AmiBlitz3.ab3@27452>  JMP writeword
000347E2 <AmiBlitz3.ab3@27456>   JSR writeword
000347E6 <AmiBlitz3.ab3@27457>   BTST #$7,D1
000347EA <AmiBlitz3.ab3@27458>    BNE.b 'done
000347EC <AmiBlitz3.ab3@27459>   MOVE.w D3,D1
000347F2 <AmiBlitz3.ab3@27460>  JMP writeword
000347F4 <AmiBlitz3.ab3@27463> RTS
000347F6 <AmiBlitz3.ab3@27467>   MOVE.w D1,-(A7)
000347FA <AmiBlitz3.ab3@27468>   MOVE.w pcodd(PC),D1
000347FC <AmiBlitz3.ab3@27469>   LSR.w #1,D1
00034800 <AmiBlitz3.ab3@27470>    BCC.b 'done
00034806 <AmiBlitz3.ab3@27471>   CLR.w pcodd
0003480C <AmiBlitz3.ab3@27472>   MOVE.w add1a2,D1
00034812 <AmiBlitz3.ab3@27473>    JSR writeword
00034814 <AmiBlitz3.ab3@27476>   MOVE.w (A7)+,D1
00034816 <AmiBlitz3.ab3@27477> RTS
00034818 <AmiBlitz3.ab3@27481> add1a2:     Dc.b $52,$4A                                   ;ADDQ.W  #1,A2
0003481A <AmiBlitz3.ab3@27484> pcodd:     Ds.w 1                                          ;add 1 to this for bytes
0003481C <AmiBlitz3.ab3@27485> listadd:   Ds.w 1                                          ;set to 8 if it's a list
0003481E <AmiBlitz3.ab3@27486> listsize:  Ds.w 1
00034824 <AmiBlitz3.ab3@27492>   ADDQ.w #1,regnum               ;get things into d1
0003482C <AmiBlitz3.ab3@27494>   MOVE.b #1,nowdeclare
00034832 <AmiBlitz3.ab3@27495>   CLR.b dimkeep
0003483A <AmiBlitz3.ab3@27496>    CMP.l #"KEEP",-1(a5)
0003483E <AmiBlitz3.ab3@27497>   BNE 'nokeep
00034844 <AmiBlitz3.ab3@27498>   CMP.b #" ",3(a5)
00034848 <AmiBlitz3.ab3@27499>   BNE 'nokeep
0003484A <AmiBlitz3.ab3@27500>   ADDQ.l #3,a5
0003484E <AmiBlitz3.ab3@27503>     CMP.b #" ",(a5)
00034852 <AmiBlitz3.ab3@27504>     BNE '1
00034854 <AmiBlitz3.ab3@27505>    ADDQ #1,a5
00034858 <AmiBlitz3.ab3@27506>  BRA '2
0003485E <AmiBlitz3.ab3@27509>   MOVE.l a5,lastsourcepos
00034866 <AmiBlitz3.ab3@27510>   MOVE.b #1,dimkeep
0003486A <AmiBlitz3.ab3@27519>   MOVE.w #$FF9A,D1           ; is #65434,
00034870 <AmiBlitz3.ab3@27520>   JSR uselib                 ;arrays lib!
00034876 <AmiBlitz3.ab3@27523>   CLR.w listadd
0003487A <AmiBlitz3.ab3@27524>   CMP.w #-$7F4D,D0           ; was #$8000+tnum,d0
0003487E <AmiBlitz3.ab3@27525>    BNE.w 'notlist
00034886 <AmiBlitz3.ab3@27526>   MOVE.w #$0008,listadd      ;it's a list
0003488A <AmiBlitz3.ab3@27527>   MOVE.w #$FFFA,D1           ; is #65530
00034890 <AmiBlitz3.ab3@27528>    JSR uselib                ;use memlib
00034896 <AmiBlitz3.ab3@27529>    JSR get1bytemain
0003489C <AmiBlitz3.ab3@27532>   CLR.w nonew
000348A2 <AmiBlitz3.ab3@27533>    JSR getparameter
000348A8 <AmiBlitz3.ab3@27535>   JSR checkdoubledeclare
000348B0 <AmiBlitz3.ab3@27537>   BTST #$1,flagmask+1
000348B4 <AmiBlitz3.ab3@27538>    BEQ.w JUMP_syntaxerr
000348BA <AmiBlitz3.ab3@27539>    JSR fetchvars
000348C0 <AmiBlitz3.ab3@27540>   MOVE.w notshared,D1      ; added,
000348C4 <AmiBlitz3.ab3@27541>    BNE.w 'added
000348CC <AmiBlitz3.ab3@27545>   MOVE.w $8(A3),temp1
000348D2 <AmiBlitz3.ab3@27546>   MOVE.w proceduremode,D2
000348D6 <AmiBlitz3.ab3@27547>    BNE.w 'reloc
000348DC <AmiBlitz3.ab3@27549>   MOVE.w globalvarpointer,-(A7)
000348E4 <AmiBlitz3.ab3@27550>   MOVE.w $4(A3),globalvarpointer
000348EA <AmiBlitz3.ab3@27551>   ADDQ.w #4,globalvarpointer
000348EE <AmiBlitz3.ab3@27552>    BSR.w write_dim_code
000348F4 <AmiBlitz3.ab3@27553>   MOVE.w (A7)+,globalvarpointer
000348F8 <AmiBlitz3.ab3@27554>  BRA.w 'next
000348FE <AmiBlitz3.ab3@27569>   MOVE.w globalvarpointer,-(A7)
00034904 <AmiBlitz3.ab3@27570>             MOVE.w proceduremode,-(a7)
0003490A <AmiBlitz3.ab3@27571>             CLR.w proceduremode
00034912 <AmiBlitz3.ab3@27572>   MOVE.w $4(A3),globalvarpointer
00034918 <AmiBlitz3.ab3@27573>   ADDQ.w #4,globalvarpointer
0003491C <AmiBlitz3.ab3@27574>    BSR.w write_dim_code
00034922 <AmiBlitz3.ab3@27575>    MOVE.w (a7)+,proceduremode
00034928 <AmiBlitz3.ab3@27576>   MOVE.w (A7)+,globalvarpointer
0003492C <AmiBlitz3.ab3@27578>  BRA.w 'next
00034934 <AmiBlitz3.ab3@27583>   MOVE.w #$FFFF,temp1                ; was -1  ;no care on # dims
00034938 <AmiBlitz3.ab3@27584>   MOVE.w listadd(PC),D1
0003493C <AmiBlitz3.ab3@27585>    BEQ.w 'isok
00034944 <AmiBlitz3.ab3@27586>   MOVE.w #$4000,temp1                ;yes, we do care - must be 1
0003494A <AmiBlitz3.ab3@27588>   BSET #$0,$6(A3)                    ;set to list type of array
00034950 <AmiBlitz3.ab3@27592>         TST.w proceduremode
00034954 <AmiBlitz3.ab3@27593>        BNE 'l1
0003495A <AmiBlitz3.ab3@27594>        MOVE.w locvaroff,-(a7)
0003495E <AmiBlitz3.ab3@27598>   BSR.w write_dim_code
00034964 <AmiBlitz3.ab3@27600>         TST.w proceduremode
00034968 <AmiBlitz3.ab3@27601>         BNE 'next
0003496E <AmiBlitz3.ab3@27602>        MOVE.w (A7)+,locvaroff
00034974 <AmiBlitz3.ab3@27606>   JSR get1bytemain
00034978 <AmiBlitz3.ab3@27607>   CMP.w #$2C,D0                ; ","
0003497C <AmiBlitz3.ab3@27608>    BNE.w 'done
00034982 <AmiBlitz3.ab3@27609>    JSR get1bytemain
00034986 <AmiBlitz3.ab3@27610>  BRA.w dodim2
00034988 <AmiBlitz3.ab3@27613> RTS
0003498E <AmiBlitz3.ab3@27616> JUMP_syntaxerr JMP syntaxerr
00034994 <AmiBlitz3.ab3@27617> JUMP_redimerr JMP redimerr
0003499C <AmiBlitz3.ab3@27621>   MOVE.w #$FFFF,nonew                                      ;#-1,nonew org source
000349A2 <AmiBlitz3.ab3@27622>   MOVE.w beginarr,D1
000349A8 <AmiBlitz3.ab3@27623>    JSR writeword
000349AA <AmiBlitz3.ab3@27624>   MOVEQ.l #$00,D1
000349B0 <AmiBlitz3.ab3@27625>    JSR writeword
000349B2 <AmiBlitz3.ab3@27626>   MOVEQ.l #$04,D1
000349BA <AmiBlitz3.ab3@27627>   BTST #$0,flagmask+1
000349BE <AmiBlitz3.ab3@27628>    BNE.w 'pointer
000349C2 <AmiBlitz3.ab3@27629>   MOVE.w $8(A2),D1
000349C6 <AmiBlitz3.ab3@27632>   ADD.w listadd(PC),D1                                     ;size of one element.
000349CC <AmiBlitz3.ab3@27633>   MOVE.w D1,listsize
000349D2 <AmiBlitz3.ab3@27634>    JSR writeword
000349D8 <AmiBlitz3.ab3@27635>   CLR.w temp2                                              ;# dim's got
000349DA <AmiBlitz3.ab3@27636>   MOVE.l A3,-(A7)
000349E0 <AmiBlitz3.ab3@27639>   ADDQ.w #1,temp2
000349E2 <AmiBlitz3.ab3@27640>   MOVEQ.l #$03,D2                                          ;get word
000349E8 <AmiBlitz3.ab3@27641>   MOVE.w notshared,-(a7)
000349EE <AmiBlitz3.ab3@27642>    JSR eval
000349F4 <AmiBlitz3.ab3@27643>   MOVE.w (a7)+,notshared
000349FA <AmiBlitz3.ab3@27644>   TST.b debugmode
000349FE <AmiBlitz3.ab3@27645>    BEQ.w 'norerr0
00034A02 <AmiBlitz3.ab3@27646>   MOVE.w #$C30F,D1
00034A06 <AmiBlitz3.ab3@27652>       MOVE.w #$5281,d1
00034A0C <AmiBlitz3.ab3@27653>       JSR writeword
00034A12 <AmiBlitz3.ab3@27654>       MOVE.l #$4c010800,d1                                 ;dim >65536 fix
00034A18 <AmiBlitz3.ab3@27655>       JSR writelong
00034A1E <AmiBlitz3.ab3@27656>   MOVE.w proceduremode,D2
00034A22 <AmiBlitz3.ab3@27657>    BEQ.w 'global
00034A28 <AmiBlitz3.ab3@27658>   SUBQ.w #4,locvaroff
00034A32 <AmiBlitz3.ab3@27659>   MOVE.w locvaroff,putarr+2
00034A36 <AmiBlitz3.ab3@27660>  BRA.w 'doit
00034A40 <AmiBlitz3.ab3@27663>   MOVE.w globalvarpointer,putarr+2
00034A46 <AmiBlitz3.ab3@27664>   ADDQ.w #4,globalvarpointer
00034A4C <AmiBlitz3.ab3@27667>   TST.b dimkeep
00034A50 <AmiBlitz3.ab3@27668>            BEQ 'doit_l1
00034A52 <AmiBlitz3.ab3@27669>       MOVEQ #0,d1
00034A58 <AmiBlitz3.ab3@27670>       MOVE.w putarr+2,d1
00034A5E <AmiBlitz3.ab3@27671>       OR.l  #$222d0000,d1
00034A64 <AmiBlitz3.ab3@27672>       MOVE.w proceduremode,D2
00034A68 <AmiBlitz3.ab3@27673>       BEQ 'doit_l2
00034A6E <AmiBlitz3.ab3@27674>       TST.w notshared
00034A72 <AmiBlitz3.ab3@27675>       BEQ 'doit_l2
00034A78 <AmiBlitz3.ab3@27676>       SUB.l #$00010000,d1
00034A7E <AmiBlitz3.ab3@27679>   JSR writelong
00034A84 <AmiBlitz3.ab3@27682>   MOVE.l putarr,D1
00034A8A <AmiBlitz3.ab3@27683>       TST.w notshared
00034A8E <AmiBlitz3.ab3@27684>       BNE 'doit_l1a
00034A94 <AmiBlitz3.ab3@27685>       JSR writelong
00034A98 <AmiBlitz3.ab3@27686>  BRA 'doit_l4
00034A9E <AmiBlitz3.ab3@27689>   JSR pokela5d
00034AA2 <AmiBlitz3.ab3@27692>   CMP.w #$2C,D0
00034AA6 <AmiBlitz3.ab3@27693>    BEQ.w 'loop
00034AAA <AmiBlitz3.ab3@27694>   CMP.w #$29,D0
00034AAE <AmiBlitz3.ab3@27695>    BNE.w JUMP_syntaxerr
00034AB0 <AmiBlitz3.ab3@27696>   MOVEA.l (A7)+,A3
00034AB6 <AmiBlitz3.ab3@27697>   MOVE.w temp1,D1
00034ABA <AmiBlitz3.ab3@27698>    BMI.w 'nocare
00034ABE <AmiBlitz3.ab3@27702>   BTST #$E,D1
00034AC2 <AmiBlitz3.ab3@27703>    BEQ.w 'notl
00034ACA <AmiBlitz3.ab3@27704>   CMPI.w #$1,temp2
00034ACE <AmiBlitz3.ab3@27705>    BNE.w JUMP_redimerr
00034AD2 <AmiBlitz3.ab3@27706>  BRA.w 'nocare
00034AD8 <AmiBlitz3.ab3@27709>   CMP.w temp2,D1
00034ADC <AmiBlitz3.ab3@27710>    BNE.w JUMP_redimerr                                     ;range too long
00034AE2 <AmiBlitz3.ab3@27713>   LEA globalvarpointer,A0
00034AE8 <AmiBlitz3.ab3@27714>   MOVE.w proceduremode,D1
00034AEC <AmiBlitz3.ab3@27715>   BEQ.w 'gskip
00034AF2 <AmiBlitz3.ab3@27716>   LEA locvaroff,A0
00034AF8 <AmiBlitz3.ab3@27719>   MOVE.W  extraword,(A0)
00034AFC <AmiBlitz3.ab3@27720>   BRA.W   'care
00034B04 <AmiBlitz3.ab3@27723>   MOVE.w temp2,$8(A3)                                      ;set # dim's
00034B0A <AmiBlitz3.ab3@27726>   LEA doarr,A0
00034B10 <AmiBlitz3.ab3@27727>   MOVE.w $4(A3),$2(A0)
00034B18 <AmiBlitz3.ab3@27728>   MOVE.w putarr+2,$6(A0)
00034B1A <AmiBlitz3.ab3@27729>   MOVE.l (A0)+,D1
00034B20 <AmiBlitz3.ab3@27730>    JSR writelong
00034B22 <AmiBlitz3.ab3@27731>   MOVE.l (A0),D1
00034B28 <AmiBlitz3.ab3@27732>    JSR writelong
00034B2E <AmiBlitz3.ab3@27733>    TST.b dimkeep
00034B32 <AmiBlitz3.ab3@27734>   BNE 'care_l3
00034B36 <AmiBlitz3.ab3@27737>   MOVE.w #$C400,D1
00034B3A <AmiBlitz3.ab3@27738>  BRA 'care_l2
00034B3E <AmiBlitz3.ab3@27741>   MOVE.w #$C405,d1
00034B44 <AmiBlitz3.ab3@27744>   MOVE.w proceduremode,D2
00034B48 <AmiBlitz3.ab3@27745>    BEQ.w 'isg
00034B4E <AmiBlitz3.ab3@27746>    TST.w notshared
00034B52 <AmiBlitz3.ab3@27747>    BEQ 'isg
00034B54 <AmiBlitz3.ab3@27748>   ADDQ.w #1,D1
00034B58 <AmiBlitz3.ab3@27751>   MOVE.w listadd(PC),D2
00034B5C <AmiBlitz3.ab3@27752>    BEQ.w 'isrg
00034B5E <AmiBlitz3.ab3@27753>   MOVE.w D1,-(A7)
00034B62 <AmiBlitz3.ab3@27754>   MOVE.w setles(PC),D1
00034B68 <AmiBlitz3.ab3@27755>    JSR writeword
00034B6C <AmiBlitz3.ab3@27756>   MOVE.w listsize(PC),D1
00034B72 <AmiBlitz3.ab3@27757>    JSR writeword
00034B74 <AmiBlitz3.ab3@27758>   MOVE.w (A7)+,D1
00034B76 <AmiBlitz3.ab3@27759>   ADDQ.w #3,D1
00034B7A <AmiBlitz3.ab3@27762> BRA.w Atokejsr
00034B7E <AmiBlitz3.ab3@27765> setles:   Dc.b $38,$3C,$00,$00                             ;MOVE.W  #$0000,D4
00034B84 <AmiBlitz3.ab3@27774>     MOVE.l #$f23c4400,d1
00034B8A <AmiBlitz3.ab3@27776>   MOVE.w regnum,d0
00034B8C <AmiBlitz3.ab3@27777>   ASL.w #7,d0
00034B8E <AmiBlitz3.ab3@27778>   OR.w d0,d1
00034B94 <AmiBlitz3.ab3@27779>   JSR writelong
00034B9A <AmiBlitz3.ab3@27785>     MOVE.l #$40490fd9,d1
00034BA0 <AmiBlitz3.ab3@27787>   JSR writelong
00034BA6 <AmiBlitz3.ab3@27788> JMP get1bytemain
00034BAA <AmiBlitz3.ab3@27795> vbr:                Ds.l 1
00034BAC <AmiBlitz3.ab3@27796> cfetchmode:         Ds.w 1                               ;1=fetching a constant
00034BB2 <AmiBlitz3.ab3@27798> constlibs           Dc.w $FDA7,$FCDF,$FD43               ;64935,64735,64835  org source
00034BB6 <AmiBlitz3.ab3@27802> constpcat:          Ds.l 1
00034BBA <AmiBlitz3.ab3@27803> constlibat:         Ds.l 1
00034BBE <AmiBlitz3.ab3@27804> constmaxpc:         Dc.l $400
00034BC2 <AmiBlitz3.ab3@27806> stacksize:          Dc.l #DEFAULT_STACKSIZE              ;stackfuck org source
00034BC6 <AmiBlitz3.ab3@27807> currentlabeladdr:   Dc.l labelbase                       ;lastrescon org source
00034BCA <AmiBlitz3.ab3@27808> currentmacroaddr:   Dc.l macrobase                       ;lastresmac org source
00034BCE <AmiBlitz3.ab3@27809> lastrestype:        Dc.l newtype_string
00034BD0 <AmiBlitz3.ab3@27810> rescnt:             Ds.w 1                               ;# resident
00034BD2 <AmiBlitz3.ab3@27811> state_of_residents: Ds.w 1                               ;reschg org source ;flag for if res's have changed
00034BD6 <AmiBlitz3.ab3@27812> resat:              Dc.l residents_table                 ;??looks like not used anymore??
00034BD8 <AmiBlitz3.ab3@27813> linedone:           Ds.w 1
00034BEE <AmiBlitz3.ab3@27814> directbuffer:       Ds.w 11                              ;dirpcat  dc.w 0 org source
00034BF2 <AmiBlitz3.ab3@27823>   Dc.l 0                                        ; bytetobyte
00034BF6 <AmiBlitz3.ab3@27824>   Dc.l convert_byte_to_word                     ; bytetoword
00034BFA <AmiBlitz3.ab3@27825>   Dc.l convert_byte_to_long                     ; bytetolong
00034BFE <AmiBlitz3.ab3@27826>   Dc.l convert_byte_to_quick                    ; bytetoquick
00034C02 <AmiBlitz3.ab3@27827>   Dc.l convert_byte_to_float                    ; bytetofloat
00034C06 <AmiBlitz3.ab3@27828>   Dc.l convert_byte_to_long                     ; bytetolong
00034C0A <AmiBlitz3.ab3@27829>   Dc.l error_convert_types                      ; noconerr
00034C0E <AmiBlitz3.ab3@27832>   Dc.l convert_word_to_byte                     ; wordtobyte
00034C12 <AmiBlitz3.ab3@27833>   Dc.l 0                                        ; wordtoword
00034C16 <AmiBlitz3.ab3@27834>   Dc.l convert_word_to_long                     ; wordtolong
00034C1A <AmiBlitz3.ab3@27835>   Dc.l convert_word_to_quick                    ; wordtoquick
00034C1E <AmiBlitz3.ab3@27836>   Dc.l convert_word_to_float                    ; wordtofloat
00034C22 <AmiBlitz3.ab3@27837>   Dc.l convert_word_to_long                     ; wordtolong
00034C26 <AmiBlitz3.ab3@27838>   Dc.l error_convert_types                      ; noconerr
00034C2A <AmiBlitz3.ab3@27841>   Dc.l convert_long_to_byte                     ; longtobyte
00034C2E <AmiBlitz3.ab3@27842>   Dc.l convert_long_to_word                     ; longtoword
00034C32 <AmiBlitz3.ab3@27843>   Dc.l 0                                        ; longtolong
00034C36 <AmiBlitz3.ab3@27844>   Dc.l convert_long_to_quick                    ; longtoquick
00034C3A <AmiBlitz3.ab3@27845>   Dc.l convert_long_to_float                    ; longtofloat
00034C3E <AmiBlitz3.ab3@27846>   Dc.l 0                                        ; longtolong
00034C42 <AmiBlitz3.ab3@27847>   Dc.l error_convert_types                      ; noconerr
00034C46 <AmiBlitz3.ab3@27850>   Dc.l convert_quick_to_byte                    ; quicktobyte
00034C4A <AmiBlitz3.ab3@27851>   Dc.l convert_quick_to_word                    ; quicktoword
00034C4E <AmiBlitz3.ab3@27852>   Dc.l convert_quick_to_long                    ; quicktolong
00034C52 <AmiBlitz3.ab3@27853>   Dc.l 0                                        ; quicktoquick
00034C56 <AmiBlitz3.ab3@27854>   Dc.l convert_quick_to_float                   ; quicktofloat
00034C5A <AmiBlitz3.ab3@27855>   Dc.l convert_quick_to_long                    ; quicktolong
00034C5E <AmiBlitz3.ab3@27856>   Dc.l error_convert_types                      ; noconerr
00034C62 <AmiBlitz3.ab3@27859>   Dc.l convert_float_to_byte                    ; floattobyte
00034C66 <AmiBlitz3.ab3@27860>   Dc.l convert_float_to_word                    ; floattoword
00034C6A <AmiBlitz3.ab3@27861>   Dc.l convert_float_to_long                    ; floattolong
00034C6E <AmiBlitz3.ab3@27862>   Dc.l convert_float_to_quick                   ; floattoquick
00034C72 <AmiBlitz3.ab3@27863>   Dc.l 0                                        ; floattofloat
00034C76 <AmiBlitz3.ab3@27864>   Dc.l convert_float_to_long                    ; floattolong
00034C7A <AmiBlitz3.ab3@27865>   Dc.l error_convert_types                      ; noconerr
00034C7E <AmiBlitz3.ab3@27868>   Dc.l convert_long_to_byte                     ; longtobyte
00034C82 <AmiBlitz3.ab3@27869>   Dc.l convert_long_to_word                     ; longtoword
00034C86 <AmiBlitz3.ab3@27870>   Dc.l 0                                        ; longtolong
00034C8A <AmiBlitz3.ab3@27871>   Dc.l convert_long_to_quick                    ; longtoquick
00034C8E <AmiBlitz3.ab3@27872>   Dc.l convert_long_to_float                    ; longtofloat
00034C92 <AmiBlitz3.ab3@27873>   Dc.l 0                                        ; longtolong
00034C96 <AmiBlitz3.ab3@27874>   Dc.l error_convert_types                      ; noconerr
00034C9A <AmiBlitz3.ab3@27877>   Dc.l error_convert_types                      ; noconerr
00034C9E <AmiBlitz3.ab3@27878>   Dc.l error_convert_types                      ; noconerr
00034CA2 <AmiBlitz3.ab3@27879>   Dc.l string_to_long                           ; stringtolong
00034CA6 <AmiBlitz3.ab3@27880>   Dc.l error_convert_types                      ; noconerr
00034CAA <AmiBlitz3.ab3@27881>   Dc.l error_convert_types                      ; noconerr
00034CAE <AmiBlitz3.ab3@27882>   Dc.l string_to_long                           ; stringtolong
00034CB2 <AmiBlitz3.ab3@27883>   Ds.l 1
00034CB4 <AmiBlitz3.ab3@27889>   Dc.b $00,$2B                                  ;+ ; add
00034CB8 <AmiBlitz3.ab3@27890>   Dc.l do_plus_byte                             ;doplusb
00034CBC <AmiBlitz3.ab3@27891>   Dc.l do_plus_word                             ;doplusw
00034CC0 <AmiBlitz3.ab3@27892>   Dc.l do_plus_long                             ;doplusl
00034CC4 <AmiBlitz3.ab3@27893>   Dc.l do_plus_long                             ;doplusl
00034CC8 <AmiBlitz3.ab3@27894>   Dc.l do_plus_float                            ;doplusf
00034CCC <AmiBlitz3.ab3@27895>   Ds.l 1
00034CD0 <AmiBlitz3.ab3@27896>   Dc.l add_strings                              ;addstrings
00034CD2 <AmiBlitz3.ab3@27897>   Dc.b $0B,$B8
00034CD4 <AmiBlitz3.ab3@27899>   Dc.b $00,$2D                                  ;- ; sub
00034CD8 <AmiBlitz3.ab3@27900>   Dc.l do_minus_byte                            ;dominusb
00034CDC <AmiBlitz3.ab3@27901>   Dc.l do_minus_word                            ;dominusw
00034CE0 <AmiBlitz3.ab3@27902>   Dc.l do_minus_long                            ;dominusl
00034CE4 <AmiBlitz3.ab3@27903>   Dc.l do_minus_long                            ;dominusl
00034CE8 <AmiBlitz3.ab3@27904>   Dc.l do_minus_float                           ;dominusf
00034CF0 <AmiBlitz3.ab3@27905>   Ds.l 2
00034CF2 <AmiBlitz3.ab3@27906>   Dc.b $0B,$B8
00034CF4 <AmiBlitz3.ab3@27908>   Dc.b $00,$2A                                  ;* ; mul
00034CF8 <AmiBlitz3.ab3@27909>   Dc.l do_times_byte                            ;dotimesb
00034CFC <AmiBlitz3.ab3@27910>   Dc.l do_times_word                            ;dotimesw
00034D00 <AmiBlitz3.ab3@27911>   Dc.l do_times_long                            ;dotimesl
00034D04 <AmiBlitz3.ab3@27912>   Dc.l do_times_quick                           ;dotimesq
00034D08 <AmiBlitz3.ab3@27913>   Dc.l do_times_float                           ;dotimesf
00034D10 <AmiBlitz3.ab3@27914>   Ds.l 2
00034D12 <AmiBlitz3.ab3@27915>   Dc.b $0F,$A0
00034D14 <AmiBlitz3.ab3@27917>   Dc.b $00,$2F                                  ;/ ; div
00034D18 <AmiBlitz3.ab3@27918>   Dc.l do_Div_byte                              ;dodivb
00034D1C <AmiBlitz3.ab3@27919>   Dc.l do_Div_word                              ;dodivb
00034D20 <AmiBlitz3.ab3@27920>   Dc.l do_Div_long                              ;dodivl
00034D24 <AmiBlitz3.ab3@27921>   Dc.l do_Div_quick                             ;dodivq
00034D28 <AmiBlitz3.ab3@27922>   Dc.l do_Div_float                             ;dodivf
00034D30 <AmiBlitz3.ab3@27923>   Ds.l 2
00034D32 <AmiBlitz3.ab3@27924>   Dc.b $0F,$A0
00034D34 <AmiBlitz3.ab3@27926>   Dc.b $00,$26                                  ;& ; & int
00034D38 <AmiBlitz3.ab3@27927>   Dc.l do_AND_byte                              ;doandb
00034D3C <AmiBlitz3.ab3@27928>   Dc.l do_AND_word                              ;doandw
00034D40 <AmiBlitz3.ab3@27929>   Dc.l do_AND_long                              ;doandl
00034D44 <AmiBlitz3.ab3@27930>   Dc.l do_AND_long                              ;doandl
00034D50 <AmiBlitz3.ab3@27931>   Ds.l 3
00034D52 <AmiBlitz3.ab3@27932>   Dc.b $13,$88
00034D54 <AmiBlitz3.ab3@27934>   Dc.b $00,$7C                                  ;| ;or int ;
00034D58 <AmiBlitz3.ab3@27935>   Dc.l do_OR_byte                               ;doorb
00034D5C <AmiBlitz3.ab3@27936>   Dc.l do_OR_word                               ;doorw
00034D60 <AmiBlitz3.ab3@27937>   Dc.l do_OR_long                               ;doorl
00034D64 <AmiBlitz3.ab3@27938>   Dc.l do_OR_long                               ;doorl
00034D70 <AmiBlitz3.ab3@27939>   Ds.l 3
00034D72 <AmiBlitz3.ab3@27940>   Dc.b $13,$88
00034D74 <AmiBlitz3.ab3@27942>   Dc.b $80,$42                                  ; AND int  ;(opand-opabcd)/$1c+$8000+fnum
00034D78 <AmiBlitz3.ab3@27943>   Dc.l do_AND_byte                              ;doandb
00034D7C <AmiBlitz3.ab3@27944>   Dc.l do_AND_word                              ;doandw
00034D80 <AmiBlitz3.ab3@27945>   Dc.l do_AND_long                              ;doandl
00034D84 <AmiBlitz3.ab3@27946>   Dc.l do_AND_long                              ;doandl
00034D90 <AmiBlitz3.ab3@27947>   Ds.l 3
00034D92 <AmiBlitz3.ab3@27948>   Dc.b $03,$E8
00034D94 <AmiBlitz3.ab3@27950>   Dc.b $80,$8A                                  ; OR int   ;(opor-opabcd)/$1c+$8000+fnum
00034D98 <AmiBlitz3.ab3@27951>   Dc.l do_OR_byte                               ;doorb
00034D9C <AmiBlitz3.ab3@27952>   Dc.l do_OR_word                               ;doorw
00034DA0 <AmiBlitz3.ab3@27953>   Dc.l do_OR_long                               ;doorl
00034DA4 <AmiBlitz3.ab3@27954>   Dc.l do_OR_long                               ;doorl
00034DB0 <AmiBlitz3.ab3@27955>   Ds.l 3
00034DB2 <AmiBlitz3.ab3@27956>   Dc.b $03,$E8
00034DB4 <AmiBlitz3.ab3@27958>   Dc.b $80,$73                                  ; EOR int  ;(opeor-opabcd)/$1c+$8000+fnum
00034DB8 <AmiBlitz3.ab3@27959>   Dc.l do_EOR_byte                              ;doeorb
00034DBC <AmiBlitz3.ab3@27960>   Dc.l do_EOR_word                              ;doeorw
00034DC0 <AmiBlitz3.ab3@27961>   Dc.l do_EOR_long                              ;doeorl
00034DC4 <AmiBlitz3.ab3@27962>   Dc.l do_EOR_long                              ;doeorl
00034DD0 <AmiBlitz3.ab3@27963>   Ds.l 3
00034DD2 <AmiBlitz3.ab3@27964>   Dc.b $03,$E8
00034DD4 <AmiBlitz3.ab3@27966>   Dc.b $80,$7C                                  ; LSL int  ;(oplsl-opabcd)/$1c+$8000+fnum
00034DD8 <AmiBlitz3.ab3@27967>   Dc.l do_LSL                                   ;dolslb
00034DDC <AmiBlitz3.ab3@27968>   Dc.l do_LSL                                   ;dolslw
00034DE0 <AmiBlitz3.ab3@27969>   Dc.l do_LSL                                   ;dolsll
00034DE4 <AmiBlitz3.ab3@27970>   Dc.l do_LSL                                   ;dolsll
00034DF0 <AmiBlitz3.ab3@27971>   Ds.l 3
00034DF2 <AmiBlitz3.ab3@27972>   Dc.b $17,$70
00034DF4 <AmiBlitz3.ab3@27974>   Dc.b $80,$44                                  ; ASL int  ;(opasl-opabcd)/$1c+$8000+fnum
00034DF8 <AmiBlitz3.ab3@27975>   Dc.l do_LSL                                   ;dolslb
00034DFC <AmiBlitz3.ab3@27976>   Dc.l do_LSL                                   ;dolslw
00034E00 <AmiBlitz3.ab3@27977>   Dc.l do_LSL                                   ;dolsll
00034E04 <AmiBlitz3.ab3@27978>   Dc.l do_LSL                                   ;dolsll
00034E10 <AmiBlitz3.ab3@27979>   Ds.l 3
00034E12 <AmiBlitz3.ab3@27980>   Dc.b $17,$70
00034E14 <AmiBlitz3.ab3@27982>   Dc.b $80,$7D                                  ; LSR int  ;(oplsr-opabcd)/$1c+$8000+fnum
00034E18 <AmiBlitz3.ab3@27983>   Dc.l do_LSR                                   ;dolsrb
00034E1C <AmiBlitz3.ab3@27984>   Dc.l do_LSR                                   ;dolsrw
00034E20 <AmiBlitz3.ab3@27985>   Dc.l do_LSR                                   ;dolsrl
00034E24 <AmiBlitz3.ab3@27986>   Dc.l do_LSR                                   ;dolsrl
00034E30 <AmiBlitz3.ab3@27987>   Ds.l 3
00034E32 <AmiBlitz3.ab3@27988>   Dc.b $17,$70
00034E34 <AmiBlitz3.ab3@27990>   Dc.b $80,$45                                  ; ASR int  ;(opasr-opabcd)/$1c+$8000+fnum
00034E38 <AmiBlitz3.ab3@27991>   Dc.l do_ASR                                   ;doasrb
00034E3C <AmiBlitz3.ab3@27992>   Dc.l do_ASR                                   ;doasrw
00034E40 <AmiBlitz3.ab3@27993>   Dc.l do_ASR                                   ;doasrl
00034E44 <AmiBlitz3.ab3@27994>   Dc.l do_ASR                                   ;doasrl
00034E50 <AmiBlitz3.ab3@27995>   Ds.l 3
00034E52 <AmiBlitz3.ab3@27996>   Dc.b $17,$70
00034E54 <AmiBlitz3.ab3@27998>   Dc.b $80,$B9                                  ;mod       ;$8006+tnum
00034E58 <AmiBlitz3.ab3@27999>   Dc.l do_mod_byte                              ;domodb
00034E5C <AmiBlitz3.ab3@28000>   Dc.l do_mod_word                              ;domodw
00034E60 <AmiBlitz3.ab3@28001>   Dc.l do_mod_long                              ;domodl
00034E64 <AmiBlitz3.ab3@28002>   Dc.l do_mod_quick                             ;domodq
00034E68 <AmiBlitz3.ab3@28003>   Dc.l do_mod_float                             ;domodf
00034E70 <AmiBlitz3.ab3@28004>   Ds.l 2
00034E72 <AmiBlitz3.ab3@28005>   Dc.b $13,$88
00034E74 <AmiBlitz3.ab3@28008>   Dc.b $00,$5E                                  ;^
00034E78 <AmiBlitz3.ab3@28009>   Dc.l do_pow                                   ;dopow
00034E7C <AmiBlitz3.ab3@28010>   Dc.l do_pow                                   ;dopow
00034E80 <AmiBlitz3.ab3@28011>   Dc.l do_pow                                   ;dopow
00034E84 <AmiBlitz3.ab3@28012>   Dc.l do_pow                                   ;dopow
00034E88 <AmiBlitz3.ab3@28013>   Dc.l do_pow                                   ;dopow
00034E90 <AmiBlitz3.ab3@28014>   Ds.l 2
00034E92 <AmiBlitz3.ab3@28015>   Dc.b $1B,$58                                  ;7000
00034E94 <AmiBlitz3.ab3@28018>   Dc.b $00,$3D                                  ;=
00034E98 <AmiBlitz3.ab3@28019>   Dc.l do_equal_byte                            ;doeqb
00034E9C <AmiBlitz3.ab3@28020>   Dc.l do_equal_word                            ;doeqw
00034EA0 <AmiBlitz3.ab3@28021>   Dc.l do_equal_long                            ;doeql
00034EA4 <AmiBlitz3.ab3@28022>   Dc.l do_equal_long                            ;doeql
00034EA8 <AmiBlitz3.ab3@28023>   Dc.l do_equal_float                           ;doeqf
00034EAC <AmiBlitz3.ab3@28024>   Dc.l do_equal_long                            ;doeql
00034EB0 <AmiBlitz3.ab3@28025>   Dc.l do_equal_string                          ;doeqs
00034EB2 <AmiBlitz3.ab3@28026>   Dc.b $07,$D0                                  ;2000
00034EB4 <AmiBlitz3.ab3@28029>   Dc.b $3C,$3E                                  ;<>
00034EB8 <AmiBlitz3.ab3@28030>   Dc.l do_not_equal_byte                        ;doneb
00034EBC <AmiBlitz3.ab3@28031>   Dc.l do_not_equal_word                        ;donew
00034EC0 <AmiBlitz3.ab3@28032>   Dc.l do_not_equal_long                        ;donel
00034EC4 <AmiBlitz3.ab3@28033>   Dc.l do_not_equal_long                        ;donel
00034EC8 <AmiBlitz3.ab3@28034>   Dc.l do_not_equal_float                       ;donef
00034ECC <AmiBlitz3.ab3@28035>   Dc.l do_not_equal_long                        ;donel
00034ED0 <AmiBlitz3.ab3@28036>   Dc.l do_not_equal_string                      ;dones
00034ED2 <AmiBlitz3.ab3@28037>   Dc.b $07,$D0                                  ;2000
00034ED4 <AmiBlitz3.ab3@28040>   Dc.b $00,$3C                                  ;<
00034ED8 <AmiBlitz3.ab3@28041>   Dc.l do_littler_byte                          ;doltb
00034EDC <AmiBlitz3.ab3@28042>   Dc.l do_littler_word                          ;doltw
00034EE0 <AmiBlitz3.ab3@28043>   Dc.l do_littler_long                          ;doltl
00034EE4 <AmiBlitz3.ab3@28044>   Dc.l do_littler_long                          ;doltl
00034EE8 <AmiBlitz3.ab3@28045>   Dc.l do_littler_float                         ;doltf
00034EEC <AmiBlitz3.ab3@28046>   Dc.l do_littler_long                          ;doltl
00034EF0 <AmiBlitz3.ab3@28047>   Dc.l do_littler_string                        ;dolts
00034EF2 <AmiBlitz3.ab3@28048>   Dc.b $07,$D0                                  ;2000
00034EF4 <AmiBlitz3.ab3@28051>   Dc.b $3C,$3D                                  ;<=
00034EF8 <AmiBlitz3.ab3@28052>   Dc.l do_littler_equal_byte                    ;doleb
00034EFC <AmiBlitz3.ab3@28053>   Dc.l do_littler_equal_word                    ;doleb
00034F00 <AmiBlitz3.ab3@28054>   Dc.l do_littler_equal_long                    ;dolel
00034F04 <AmiBlitz3.ab3@28055>   Dc.l do_littler_equal_long                    ;dolel
00034F08 <AmiBlitz3.ab3@28056>   Dc.l do_littler_equal_float                   ;dolef
00034F0C <AmiBlitz3.ab3@28057>   Dc.l do_littler_equal_long                    ;dolel
00034F10 <AmiBlitz3.ab3@28058>   Dc.l do_littler_equal_string                  ;doles
00034F12 <AmiBlitz3.ab3@28059>   Dc.b $07,$D0                                  ;2000
00034F14 <AmiBlitz3.ab3@28062>   Dc.b $00,$3E                                  ;>
00034F18 <AmiBlitz3.ab3@28063>   Dc.l do_greater_byte                          ;dogtb
00034F1C <AmiBlitz3.ab3@28064>   Dc.l do_greater_word                          ;dogtw
00034F20 <AmiBlitz3.ab3@28065>   Dc.l do_greater_long                          ;dogtl
00034F24 <AmiBlitz3.ab3@28066>   Dc.l do_greater_long                          ;dogtl
00034F28 <AmiBlitz3.ab3@28067>   Dc.l do_greater_float                         ;dogtf
00034F2C <AmiBlitz3.ab3@28068>   Dc.l do_greater_long                          ;dogtl
00034F30 <AmiBlitz3.ab3@28069>   Dc.l do_greater_string                        ;dogts
00034F32 <AmiBlitz3.ab3@28070>   Dc.b $07,$D0                                  ;2000
00034F34 <AmiBlitz3.ab3@28073>   Dc.b $3E,$3D                                  ;>=
00034F38 <AmiBlitz3.ab3@28074>   Dc.l do_greater_equal_byte                    ;dogeb
00034F3C <AmiBlitz3.ab3@28075>   Dc.l do_greater_equal_word                    ;dogew
00034F40 <AmiBlitz3.ab3@28076>   Dc.l do_greater_equal_long                    ;dogel
00034F44 <AmiBlitz3.ab3@28077>   Dc.l do_greater_equal_long                    ;dogel
00034F48 <AmiBlitz3.ab3@28078>   Dc.l do_greater_equal_float                   ;dogef
00034F4C <AmiBlitz3.ab3@28079>   Dc.l do_greater_equal_long                    ;dogel
00034F50 <AmiBlitz3.ab3@28080>   Dc.l do_greater_equal_string                  ;doges
00034F52 <AmiBlitz3.ab3@28081>   Dc.b $07,$D0                                  ;2000
00034F54 <AmiBlitz3.ab3@28083>   Dc.b $80,$CD                                  ;$8000+26+tnum
00034F58 <AmiBlitz3.ab3@28084>   Dc.l _BitTst
00034F5C <AmiBlitz3.ab3@28085>   Dc.l _BitTst
00034F60 <AmiBlitz3.ab3@28086>   Dc.l _BitTst
00034F64 <AmiBlitz3.ab3@28087>   Dc.l _BitTst
00034F70 <AmiBlitz3.ab3@28088>   Ds.l 3
00034F72 <AmiBlitz3.ab3@28089>   Dc.b $1F,$40                                  ;8000
00034F74 <AmiBlitz3.ab3@28091>   Dc.b $80,$CE                                  ;$8000+27+tnum
00034F78 <AmiBlitz3.ab3@28092>   Dc.l _BitSet
00034F7C <AmiBlitz3.ab3@28093>   Dc.l _BitSet
00034F80 <AmiBlitz3.ab3@28094>   Dc.l _BitSet
00034F84 <AmiBlitz3.ab3@28095>   Dc.l _BitSet
00034F90 <AmiBlitz3.ab3@28096>   Ds.l 3
00034F92 <AmiBlitz3.ab3@28097>   Dc.b $1F,$40                                  ;8000
00034F94 <AmiBlitz3.ab3@28099>   Dc.b $80,$CF                                  ;$8000+28+tnum
00034F98 <AmiBlitz3.ab3@28100>   Dc.l _BitClr
00034F9C <AmiBlitz3.ab3@28101>   Dc.l _BitClr
00034FA0 <AmiBlitz3.ab3@28102>   Dc.l _BitClr
00034FA4 <AmiBlitz3.ab3@28103>   Dc.l _BitClr
00034FB0 <AmiBlitz3.ab3@28104>   Ds.l 3
00034FB2 <AmiBlitz3.ab3@28105>   Dc.b $1F,$40                                  ;8000
00034FB4 <AmiBlitz3.ab3@28107>   Dc.b $80,$D0                                  ;$8000+29+tnum
00034FB8 <AmiBlitz3.ab3@28108>   Dc.l _BitChg
00034FBC <AmiBlitz3.ab3@28109>   Dc.l _BitChg
00034FC0 <AmiBlitz3.ab3@28110>   Dc.l _BitChg
00034FC4 <AmiBlitz3.ab3@28111>   Dc.l _BitChg
00034FD0 <AmiBlitz3.ab3@28112>   Ds.l 3
00034FD2 <AmiBlitz3.ab3@28113>   Dc.b $1F,$40                                  ;8000
00034FD4 <AmiBlitz3.ab3@28115>   Dc.b $00,$00
00034FD8 <AmiBlitz3.ab3@28120> modetable:   Dc.l typemode
00034FDC <AmiBlitz3.ab3@28123> newtypebase: Dc.l newtype_byte
00034FE4 <AmiBlitz3.ab3@28126>   Dc.l newtype_word,$01                                    
00034FE6 <AmiBlitz3.ab3@28127>   Dc.w $0001
00034FEA <AmiBlitz3.ab3@28128>   Dc.b 13,"b",0,0
00034FF2 <AmiBlitz3.ab3@28131>   Dc.l newtype_long,$02
00034FF4 <AmiBlitz3.ab3@28132>   Dc.w $0002
00034FF8 <AmiBlitz3.ab3@28133>   Dc.b 13,"w",0,0
00035000 <AmiBlitz3.ab3@28136>   Dc.l newtype_quick,$03                                   
00035002 <AmiBlitz3.ab3@28137>   Dc.w $0004
00035006 <AmiBlitz3.ab3@28138>   Dc.b 13,"l",0,0
0003500E <AmiBlitz3.ab3@28141>   Dc.l newtype_float,$04                                   
00035010 <AmiBlitz3.ab3@28142>   Dc.w $0004
00035014 <AmiBlitz3.ab3@28143>   Dc.b 13,"q",0,0
0003501C <AmiBlitz3.ab3@28147>   Dc.l newtype_double,$05                                  ;make problems on old residents
0003501E <AmiBlitz3.ab3@28148>   Dc.w $0004
00035022 <AmiBlitz3.ab3@28149>   Dc.b 13,"f",0,0
0003502A <AmiBlitz3.ab3@28152>   Dc.l newtype_double,$06
0003502C <AmiBlitz3.ab3@28153>   Dc.w $0004
00035030 <AmiBlitz3.ab3@28154>   Dc.b 13,"a",0,0
00035038 <AmiBlitz3.ab3@28157>   Dc.l newtype_string,$05                                  ;?? has to by $06 becous is number 6 not 5
0003503A <AmiBlitz3.ab3@28158>   Dc.w $0008
0003503E <AmiBlitz3.ab3@28159>   Dc.b 13,"d",0,0
00035046 <AmiBlitz3.ab3@28163>   Dc.l $0000000,$07                                        ;stringtype
00035048 <AmiBlitz3.ab3@28164>   Dc.w $0004
0003504C <AmiBlitz3.ab3@28165>   Dc.b 13,"s",0,0
00035054 <AmiBlitz3.ab3@28168>   Dc.l $00,$00
00035056 <AmiBlitz3.ab3@28169>   Dc.w $0000
0003505A <AmiBlitz3.ab3@28170>   Dc.b $01,$00,$00,$00
000350BA <AmiBlitz3.ab3@28173> incdir:               Ds.l 24                              ;dcb.b   96,0    org source
000350BC <AmiBlitz3.ab3@28177> dirmode:              Ds.w 1                               ;shows if directmode is on
000350C0 <AmiBlitz3.ab3@28179>                       Ds.l 1                               ;int org source ;intuition!
000350C2 <AmiBlitz3.ab3@28180> maxobject_pos:        Ds.w 1                               ;maxat org source ;max at
000350C6 <AmiBlitz3.ab3@28181> maxsat:               Ds.l 1                               ;data1 info pos
000350C8 <AmiBlitz3.ab3@28182> number_of_objects:    Ds.w 1                               ;nummaxs org source ;number of maximums
000350CA <AmiBlitz3.ab3@28184> maxsused:             Ds.w 1                               ;maximums used in prog
000350CC <AmiBlitz3.ab3@28188> dark:                 Ds.w 1                               ;dark compile?
000350CE <AmiBlitz3.ab3@28189> qlab:                 Ds.w 1                               ;quick lab allocate
000350D2 <AmiBlitz3.ab3@28190> defaulttype:          Dc.l newtype_quick                   ;dc.l quicktype org source
000350D4 <AmiBlitz3.ab3@28195> anyerrs:              Dc.w -1                              ;Any Errors in compile ?
000350D6 <AmiBlitz3.ab3@28196> debugversion:         Ds.w 1                               ;makeexec org source ;make an executable file!
000350DA <AmiBlitz3.ab3@28197> noinits:              Ds.l 1                               ;flag for if we have any init routines!
000350DE <AmiBlitz3.ab3@28199> letstart:             Ds.l 1
000350E0 <AmiBlitz3.ab3@28200> dontwrite_nomemleft:  Ds.w 1                               ;nomemleft org source
00035160 <AmiBlitz3.ab3@28201> lastgloballabel:      Ds.l 32                              ;lastbiglab ds.b 128 org source
00035164 <AmiBlitz3.ab3@28203> locdatast:            Ds.l 1
00035168 <AmiBlitz3.ab3@28204> firstpend:            Ds.l 1
0003516C <AmiBlitz3.ab3@28208> data2at:              Ds.l 1
00035170 <AmiBlitz3.ab3@28209> data2:                Ds.l 1
00035174 <AmiBlitz3.ab3@28210> data1start:           Ds.l 1                               ;data1at org source
00035178 <AmiBlitz3.ab3@28211> data1:                Ds.l 1                               ;pc for initialized data!
0003517C <AmiBlitz3.ab3@28212> destbufferstart:      Ds.l 1                               ;pcat org source
00035180 <AmiBlitz3.ab3@28216> destbufferend:        Ds.l 1                               ;libat org source
00035184 <AmiBlitz3.ab3@28217> libend:               Ds.l 1                               ;lib org source
00035188 <AmiBlitz3.ab3@28218> allat:                Ds.l 1                               ;highest allocmemd location for code
00035192 <AmiBlitz3.ab3@28219> dummyasm:             Dc.w 0,0,0,0,0
00035196 <AmiBlitz3.ab3@28220>                       Dc.l 0
00035198 <AmiBlitz3.ab3@28221>                       Dc.w 0
0003519C <AmiBlitz3.ab3@28225> buff1:                Ds.l 1                               ;buffer for text get
000351A0 <AmiBlitz3.ab3@28226> buff2:                Ds.l 1                               ;ditto for dest
000351A2 <AmiBlitz3.ab3@28227> constmode:            Ds.w 1                               ;0 for norm, <>0 for assembler
000351A4 <AmiBlitz3.ab3@28228> asmtype:              Ds.w 1                               ;0=contains no prog reference
000351A6 <AmiBlitz3.ab3@28229> extraword:            Ds.w 1                               ;the extension word for assembler
000351A8 <AmiBlitz3.ab3@28230> extraword2:           Ds.w 1                               ;ditto
000351AA <AmiBlitz3.ab3@28231> asmsize:              Ds.w 1
000351AE <AmiBlitz3.ab3@28232> asmbuff:              Ds.l 1
000351B0 <AmiBlitz3.ab3@28233> asmlen:               Ds.w 1                               ;first (src) text len
000351B2 <AmiBlitz3.ab3@28234> asmlen2:              Ds.w 1                               ;second (dest)
000351B6 <AmiBlitz3.ab3@28235> templabel:            Ds.l 1                               ;linked list of expressions to resolve
000351B8 <AmiBlitz3.ab3@28238> macnum:               Ds.w 1
000351BC <AmiBlitz3.ab3@28240>                       Dc.l 0                               ;address of next 0 in include fil
000351C0 <AmiBlitz3.ab3@28241> titleat:              Ds.l 1                               ;5 longs for compile streaks
000351CA <AmiBlitz3.ab3@28242> progress_per_line:    Ds.w 5                               ;titleadd ds 5 org source ;5 adds for compile streaks
000351CC <AmiBlitz3.ab3@28243> connest:              Ds.w 1                               ;conditional nest level
000351D0 <AmiBlitz3.ab3@28244> firstconst:           Ds.l 1                               ;first constant (#a)
000351D2 <AmiBlitz3.ab3@28245> numarg:               Ds.w 1                               ;number of macro arguements
000351D6 <AmiBlitz3.ab3@28246> myoline:              Ds.l 1                               ;macro done yet?
000351DA <AmiBlitz3.ab3@28247> myline:               Ds.l 1                               ;pointer to some memory to create
000351DE <AmiBlitz3.ab3@28250>                       Ds.l 1
0003521E <AmiBlitz3.ab3@28251> concomstack:          Ds.l 16                              ;32 deep conditional compilation
00035222 <AmiBlitz3.ab3@28252> concomsp:             Dc.l concomstack                     ;stack pointer
00035224 <AmiBlitz3.ab3@28253> oldqflag:             Ds.w 1
00035228 <AmiBlitz3.ab3@28256>                       Ds.l 1
0003522A <AmiBlitz3.ab3@28258>                       Ds.w 1
0003522E <AmiBlitz3.ab3@28259> firstfor:             Ds.l 1                               ;first for
00035230 <AmiBlitz3.ab3@28260> stackpar:             Ds.w 1                               ;pushflag org source ;1 par to stack 0 normal
00035232 <AmiBlitz3.ab3@28261> sbgot:                Ds.w 1                               ;flag for string got 2
00035234 <AmiBlitz3.ab3@28262> convsize:             Ds.w 1                               ;usertype org source
00035236 <AmiBlitz3.ab3@28263> userp:                Ds.w 1
0003523A <AmiBlitz3.ab3@28268> ptr_userlibs_list:    Ds.l 1                               ;libslist org source
0003523C <AmiBlitz3.ab3@28269> a2offset:             Ds.w 1                               ;stackuse org source ;stack used when gathering lib parameters
0003523E <AmiBlitz3.ab3@28270> numreps:              Ds.w 1                               ;number of repeats in a repeatable
00035242 <AmiBlitz3.ab3@28272> locloc:               Ds.l 1
00035244 <AmiBlitz3.ab3@28273> locchar:              Ds.w 1
000352C4 <AmiBlitz3.ab3@28274> stbuff:               Ds.l 32                              ;was 8    ;six string varoffs
000352C6 <AmiBlitz3.ab3@28275> commode:              Ds.w 1                               ;in comma mode...
000352CA <AmiBlitz3.ab3@28276> lastoffset_org:       Ds.l 1                               ;lastoffset org source ;last offset in calcvar!
000352CE <AmiBlitz3.ab3@28277> linenumat:            Dc.l $FFFFFFFF                       ;linecounter ;dc -1 org source ;line being processed
000352D2 <AmiBlitz3.ab3@28278> compilelinecounter:   Dc.l $FFFFFFFF                       ;menuret dc -1 org source ;menu return code
000352D4 <AmiBlitz3.ab3@28280>                       Ds.w 1                               ;opt reset offset
000353D4 <AmiBlitz3.ab3@28282>                       Ds.l 64                              ;Ds.b vcodelen org source ;code used to generate
000354D4 <AmiBlitz3.ab3@28284>                       Ds.l 64                              ;Ds.b vcodelen org source ;above for let.....
000354D6 <AmiBlitz3.ab3@28285> varcodelen:           Ds.w 1                               ;and length
000354D8 <AmiBlitz3.ab3@28287>                       Ds.w 1
000354DE <AmiBlitz3.ab3@28288> oldvcodelen:          Ds.w 3                               ;old varcodelen
000354E0 <AmiBlitz3.ab3@28291> Even4
000354E4 <AmiBlitz3.ab3@28292> tempvm:               Ds.l 1                               ;memlib org source ;address of memory library
000354E6 <AmiBlitz3.ab3@28293> memlibstat:           Ds.w 1                               ;status of memory library during
000354E8 <AmiBlitz3.ab3@28296>                       Dc.w 0
000354EA <AmiBlitz3.ab3@28298>                       Dc.w 0
000354EC <AmiBlitz3.ab3@28300> varmode:              Ds.w 1                               ;0 a5 pointer to global
000354F0 <AmiBlitz3.ab3@28302> currentfunction:      Ds.l 1                               ;thisproc org source
000354F4 <AmiBlitz3.ab3@28303> firstproc:            Ds.l 1                               ;firstproc org source ;this procedure being 'done'
000354F6 <AmiBlitz3.ab3@28304> 
000354F8 <AmiBlitz3.ab3@28306> skipcode:             Ds.w 1                               ;nocompile ;comflag org source ;0 if no compile
000354FC <AmiBlitz3.ab3@28307> passstack:            Ds.l 1
00035500 <AmiBlitz3.ab3@28308> zero:                 Ds.l 1                               ;ZERO!
00035502 <AmiBlitz3.ab3@28309> ininclude:            Ds.w 1                               ;numincs org source ;number of include files
00035506 <AmiBlitz3.ab3@28311> xinclude_base:        Ds.l 1                               ;firstxinc org source ;first exclusive include.
0003550A <AmiBlitz3.ab3@28312> constantbase:         Ds.l 1                               ;firstinc org source ;first include
0003550C <AmiBlitz3.ab3@28313> lasta6:               Dc.w $FFFF                           ;-1 org source
0003550E <AmiBlitz3.ab3@28314> instringon:           Ds.w 1                               ;quoteflag org source
00035512 <AmiBlitz3.ab3@28315> ptr_macrobuffer_begin:Ds.l 1                               ;macrobuff org source ;pointer to macro collection buffer ;begin
00035516 <AmiBlitz3.ab3@28316> ptr_macrobuffer_end:  Ds.l 1                               ;macrobufff org source ;end of above ;end of
0003551A <AmiBlitz3.ab3@28317> macrobase:            Ds.l 1                               ;firstmacro org source ;linked list of macro's ;macrolist
0003551E <AmiBlitz3.ab3@28318> endop:                Ds.l 1                               ;end of program pc - before finishups!
00035522 <AmiBlitz3.ab3@28319> labelbase:            Ds.l 1                               ;firstlabel org source ;first lib struct
00035526 <AmiBlitz3.ab3@28320> end_of_tokenlist:     Ds.l 1                               ;lasttoken org source
00035528 <AmiBlitz3.ab3@28321> numstatic:            Ds.w 1                               ;number of static structs
0003552C <AmiBlitz3.ab3@28322> staticdata:           Ds.l 1                               ;data1 val for statics
00035530 <AmiBlitz3.ab3@28323> libpointer:           Ds.l 1                               ;firstlib org source ;first lib struct
00035532 <AmiBlitz3.ab3@28324> sbasegot:             Ds.w 1                               ;string base got?
00035536 <AmiBlitz3.ab3@28325> litdata1:             Ds.l 1
0003553A <AmiBlitz3.ab3@28329> objlen:               Ds.l 1
0003553E <AmiBlitz3.ab3@28330> hunkoffsetcounter:    Ds.l 1                               ;numoffs org source
00035542 <AmiBlitz3.ab3@28331> hunkoffsetbase:       Ds.l 1                               ;firstoff org source ;pointer to linked list
00035544 <AmiBlitz3.ab3@28333> flagmask:             Ds.w 1                               ;mask for flag of variable when
00035546 <AmiBlitz3.ab3@28335> notshared:            Ds.w 1                               ;added org source ;flag for seeing if variable was added!
00035548 <AmiBlitz3.ab3@28336> nonew:                Ds.w 1                               ;1 to inhibit new variable creation
0003554C <AmiBlitz3.ab3@28337> temp1:                Ds.l 1
00035550 <AmiBlitz3.ab3@28338> temp2:                Ds.l 1
00035554 <AmiBlitz3.ab3@28340> ptr_parameterstore:   Ds.l 1                               ;namebuff ds.b 128 org source
00035558 <AmiBlitz3.ab3@28341> fib_DirEntryType:     Ds.l 1                               ;namebuff+4 org source
000355CC <AmiBlitz3.ab3@28342> fib_FileName:         Ds.l 29                              ;namebuff+8 org source
000355D0 <AmiBlitz3.ab3@28343> fib_Size:             Ds.l 1                               ;namebuff+124 org source
00035650 <AmiBlitz3.ab3@28345> namebuff2:            Ds.b 128
00035658 <AmiBlitz3.ab3@28346>                       Ds.b 8                               ;for fileinfoblock
00035698 <AmiBlitz3.ab3@28349> optstuff:             Ds.b 64                              ;temp opt make buffer
0003569A <AmiBlitz3.ab3@28366>   Dc.b $00,$01                                             ; 1 byte schreiben ;one byte stuff...
0003569E <AmiBlitz3.ab3@28367>   Dc.l xtra_versionnumber                                  ; vers org source
000356A2 <AmiBlitz3.ab3@28368>   Dc.l create_iconfile                                     ; create icon for executable
000356A6 <AmiBlitz3.ab3@28369>   Ds.l 1
000356A8 <AmiBlitz3.ab3@28371>   Dc.b $00,$02                                             ; 2 bytes schreiben  ;two byte stuff...
000356AC <AmiBlitz3.ab3@28374>   Dc.l set_use_debugger
000356B0 <AmiBlitz3.ab3@28375>   Dc.l AL_0_11010                                          ;+obsolet: debugger
000356B4 <AmiBlitz3.ab3@28376>   Dc.l AL_0_1103C                                          ;+obsolet: long arrays
000356B8 <AmiBlitz3.ab3@28377>   Dc.l AL_0_11068                                          ;+obsolet: expand macros
000356BC <AmiBlitz3.ab3@28378>   Dc.l AL_0_11094                                          ;+obsolet: quoted macros
000356C0 <AmiBlitz3.ab3@28379>   Dc.l set_make_smallestcode
000356C4 <AmiBlitz3.ab3@28380>   Dc.l set_link_debuginfo
000356C8 <AmiBlitz3.ab3@28381>   Dc.l set_autorun
000356CC <AmiBlitz3.ab3@28382>   Dc.l set_interruptcheck
000356D0 <AmiBlitz3.ab3@28383>   Dc.l set_assemblercheck
000356D4 <AmiBlitz3.ab3@28385>   Dc.l set_overflowcheck
000356D8 <AmiBlitz3.ab3@28386>   Dc.l default_obsolete                                    ;+obsolet: ohne inhalt
000356DC <AmiBlitz3.ab3@28387>   Dc.l default_interruptcheck                              ;+obsolet: interruptcheck vorgabe
000356E0 <AmiBlitz3.ab3@28388>   Dc.l default_overflowcheck                               ;+obsolet: overflow vorgabe
000356E4 <AmiBlitz3.ab3@28391>   Ds.l 1
000356E6 <AmiBlitz3.ab3@28393>   Dc.b $00,$04                                             ; 4 bytes schreiben..  ;four byte stuff...
000356EA <AmiBlitz3.ab3@28400>   Dc.l objectbuffer
000356EE <AmiBlitz3.ab3@28401>   Dc.l libsbuffer
000356F2 <AmiBlitz3.ab3@28402>   Dc.l systembuffer
000356F6 <AmiBlitz3.ab3@28403>   Dc.l databuffer
000356FA <AmiBlitz3.ab3@28404>   Dc.l macrobuffer_size
000356FE <AmiBlitz3.ab3@28405>   Dc.l stringbuffer
00035702 <AmiBlitz3.ab3@28408>   Ds.l 1
00035704 <AmiBlitz3.ab3@28412>   Dc.b $02,$20                                             ;dc 68*8; 544 bytes schreiben.
0003570C <AmiBlitz3.ab3@28413>   Dc.l residents_table,0
0003570E <AmiBlitz3.ab3@28417>   Dc.b $01,$80                                             ;dc 192*2; 384 bytes schreiben
00035716 <AmiBlitz3.ab3@28418>   Dc.l exepath,0                                           ; exepath und exefilename jeweils 192 bytes
00035718 <AmiBlitz3.ab3@28419>   Ds.w 1
00035814 <AmiBlitz3.ab3@28423>   Ds.l 63
00035910 <AmiBlitz3.ab3@28424>   Ds.l 63
00035A0C <AmiBlitz3.ab3@28425>   Ds.l 63
00035AEE <AmiBlitz3.ab3@28426>   Ds.w 113
00035AF0 <AmiBlitz3.ab3@28429> comsettings_message:  Ds.w 1                               ;allchg org source
00035AF2 <AmiBlitz3.ab3@28430> xtra_versionnumber:   Ds.w 1                               ;vers org source
00035AF8 <AmiBlitz3.ab3@28434>   CLR.b exefilename
00035AFA <AmiBlitz3.ab3@28435>   TST.l d0
00035AFE <AmiBlitz3.ab3@28436>   BNE 'l10
00035B00 <AmiBlitz3.ab3@28437>  RTS
00035B06 <AmiBlitz3.ab3@28440>   JSR free_residents                                       ;jsr freeres2 org source
00035B0C <AmiBlitz3.ab3@28441> 
00035B12 <AmiBlitz3.ab3@28442>   LEA ptr_xtradata,A2
00035B14 <AmiBlitz3.ab3@28443>   MOVEQ.l #$00,D4
00035B16 <AmiBlitz3.ab3@28446>     MOVE.w (A2)+,D4                                        ; anzahl bytes zum lesen
00035B1A <AmiBlitz3.ab3@28447>     BEQ.b 'done
00035B1C <AmiBlitz3.ab3@28450>     MOVE.l (A2)+,D2
00035B20 <AmiBlitz3.ab3@28451>   BEQ.b 'loop
00035B22 <AmiBlitz3.ab3@28453>   MOVE.l D4,D3
00035B24 <AmiBlitz3.ab3@28454>   MOVE.l D7,D1
00035B28 <AmiBlitz3.ab3@28455>   JSR _Read(A6)                                            ; d1: file, d2: buffer, d3:length
00035B2A <AmiBlitz3.ab3@28456>   TST.l D0
00035B2E <AmiBlitz3.ab3@28457>   BNE.b 'loop2
00035B32 <AmiBlitz3.ab3@28458>  BRA.w 'done2
00035B38 <AmiBlitz3.ab3@28461>   TST.b xtra_versionnumber
00035B3C <AmiBlitz3.ab3@28462>    BNE.b 'nover0
00035B44 <AmiBlitz3.ab3@28463>   MOVE.w #$0080,set_autorun                                ;auto run on
00035B4E <AmiBlitz3.ab3@28464>   MOVE.w default_interruptcheck,set_interruptcheck         ;interupt checking on
00035B54 <AmiBlitz3.ab3@28465>   CLR.w set_assemblercheck                                 ;assembler checking off
00035B5E <AmiBlitz3.ab3@28466>   MOVE.w default_overflowcheck,set_overflowcheck           ;overflow chex
00035B62 <AmiBlitz3.ab3@28467>  BRA.b 'ver0
00035B64 <AmiBlitz3.ab3@28470>   MOVE.l D7,D1                                             ;load cli arg!
00035B6A <AmiBlitz3.ab3@28471>   MOVE.l #str_cliarguments,D2
00035B70 <AmiBlitz3.ab3@28472>   MOVE.l #116,D3                                           ; vorher 128 , jetzt 8 weniger fuer die Versionsdaten
00035B74 <AmiBlitz3.ab3@28473>   JSR _Read(A6)                                            ; d1: file, d2: buffer, d3:length
00035B7A <AmiBlitz3.ab3@28474>   MOVE.l #str_cliarguments,A0
00035B80 <AmiBlitz3.ab3@28475>   ADDA.l #115,A0
00035B86 <AmiBlitz3.ab3@28476>   MOVE.l #0,(a0) ; terminate it!
00035B88 <AmiBlitz3.ab3@28478>   MOVE.l D7,D1                                             ; I know, I know. Honitos started this horrible thing, see below...
00035B8E <AmiBlitz3.ab3@28479>   MOVE.l #stacksize,D2
00035B94 <AmiBlitz3.ab3@28480>   MOVE.l #4,D3
00035B98 <AmiBlitz3.ab3@28481>   JSR _Read(A6)
00035BA2 <AmiBlitz3.ab3@28482>   CMP.l ##MIN_STACKSIZE,stacksize
00035BA6 <AmiBlitz3.ab3@28483>   BGE 'stackok
00035BB0 <AmiBlitz3.ab3@28484>   MOVE.l ##MIN_STACKSIZE,stacksize
00035BB2 <AmiBlitz3.ab3@28487>   MOVE.l D7,D1
00035BB8 <AmiBlitz3.ab3@28488>   MOVE.l #versioninformation,D2
00035BBE <AmiBlitz3.ab3@28489>   MOVE.l #4,D3
00035BC2 <AmiBlitz3.ab3@28490>   JSR _Read(A6)
00035BC4 <AmiBlitz3.ab3@28492>   MOVE.l D7,D1
00035BCA <AmiBlitz3.ab3@28493>   MOVE.l #number_of_builds,D2
00035BD0 <AmiBlitz3.ab3@28494>   MOVE.l #4,D3
00035BD4 <AmiBlitz3.ab3@28495>   JSR _Read(A6)
00035BDA <AmiBlitz3.ab3@28501> 
00035BE0 <AmiBlitz3.ab3@28502>   MOVE.l A7,errstack
00035BEA <AmiBlitz3.ab3@28503>   MOVE.l #'done2,errcont
00035BF2 <AmiBlitz3.ab3@28504>   MOVE.w #$FFFF,ezerr
00035BF8 <AmiBlitz3.ab3@28507>     MOVE.l #temp1,D2                                   ;LOAD maxobjectsvalues
00035BFA <AmiBlitz3.ab3@28508>     MOVEQ.l #$04,D3
00035BFC <AmiBlitz3.ab3@28509>     MOVE.l D7,D1
00035C00 <AmiBlitz3.ab3@28510>     JSR _Read(A6)
00035C02 <AmiBlitz3.ab3@28511>     TST.l D0
00035C06 <AmiBlitz3.ab3@28512>     BEQ.b 'done2
00035C0C <AmiBlitz3.ab3@28513>     MOVE.w temp1,D1
00035C0E <AmiBlitz3.ab3@28514>     TST.w d1                                               ;new
00035C12 <AmiBlitz3.ab3@28515>     BEQ 'done2                                         ;new
00035C18 <AmiBlitz3.ab3@28516>      JSR findlibnoerr
00035C1E <AmiBlitz3.ab3@28518>     CMP.l #0,a1
00035C22 <AmiBlitz3.ab3@28519>     BEQ 'dloop
00035C26 <AmiBlitz3.ab3@28520>     MOVE.l $12(A1),D0
00035C2E <AmiBlitz3.ab3@28521>     MOVE.w temp1+2,-$4(A1,D0.L)
00035C32 <AmiBlitz3.ab3@28522>  BRA.b 'dloop
00035C36 <AmiBlitz3.ab3@28528>   LEA residents_table(PC),A0
00035C38 <AmiBlitz3.ab3@28529>   MOVEQ.l #$07,D0
00035C3C <AmiBlitz3.ab3@28532>     CLR.l $40(A0)
00035C40 <AmiBlitz3.ab3@28533>     LEA ResidentEntryStep(A0),A0   ; $44
00035C44 <AmiBlitz3.ab3@28534>   DBF D0,'loop3
00035C48 <AmiBlitz3.ab3@28536>   MOVEM.l D7/A6,-(A7)
00035C4E <AmiBlitz3.ab3@28537>   JSR init_buffers
00035C54 <AmiBlitz3.ab3@28538>   JSR reloadresident
00035C58 <AmiBlitz3.ab3@28539>   MOVEM.l (A7)+,D7/A6
00035C5A <AmiBlitz3.ab3@28540> RTS
00035C62 <AmiBlitz3.ab3@28544>   MOVE.b #$1,xtra_versionnumber                            ;.xtra version number...
00035C68 <AmiBlitz3.ab3@28553>   LEA ptr_xtradata,A2
00035C6A <AmiBlitz3.ab3@28554>   MOVEQ.l #$00,D4
00035C6C <AmiBlitz3.ab3@28558>   MOVE.w (A2)+,D4                                          ; anzahl bytes zu schreiben
00035C70 <AmiBlitz3.ab3@28559>   BEQ.b 'done
00035C72 <AmiBlitz3.ab3@28562>    MOVE.l (A2)+,D2
00035C76 <AmiBlitz3.ab3@28563>    BEQ.b 'loop
00035C78 <AmiBlitz3.ab3@28565>    MOVE.l D4,D3
00035C7A <AmiBlitz3.ab3@28566>    MOVE.l D7,D1                                            ; schreiben der daten in ptr_xtradata
00035C7E <AmiBlitz3.ab3@28567>    JSR _Write(A6)                                          ; d1: file, d2: buffer, d3:length
00035C82 <AmiBlitz3.ab3@28568>  BRA.b 'loop2
00035C84 <AmiBlitz3.ab3@28571>   MOVE.l D7,D1
00035C8A <AmiBlitz3.ab3@28572>   MOVE.l #str_cliarguments,D2
00035C90 <AmiBlitz3.ab3@28573>   MOVE.l #116,D3
00035C94 <AmiBlitz3.ab3@28574>   JSR _Write(A6)                                           ; hier werden 116 bytes an cli_arguments geschrieben !!
00035C96 <AmiBlitz3.ab3@28576>   MOVE.l D7,D1
00035C9C <AmiBlitz3.ab3@28577>   MOVE.l #stacksize,D2
00035CA2 <AmiBlitz3.ab3@28578>   MOVE.l #4,D3
00035CA6 <AmiBlitz3.ab3@28579>   JSR _Write(A6)
00035CA8 <AmiBlitz3.ab3@28581>   MOVE.l D7,D1
00035CAE <AmiBlitz3.ab3@28582>   MOVE.l #versioninformation,D2
00035CB4 <AmiBlitz3.ab3@28583>   MOVE.l #4,D3
00035CB8 <AmiBlitz3.ab3@28584>   JSR _Write(A6)
00035CBA <AmiBlitz3.ab3@28586>   MOVE.l D7,D1
00035CC0 <AmiBlitz3.ab3@28587>   MOVE.l #number_of_builds,D2
00035CC6 <AmiBlitz3.ab3@28588>   MOVE.l #4,D3
00035CCA <AmiBlitz3.ab3@28589>   JSR _Write(A6)
00035CD0 <AmiBlitz3.ab3@28595>   LEA libpointer,A2
00035CD2 <AmiBlitz3.ab3@28598>     MOVE.l (A2),D0
00035CD6 <AmiBlitz3.ab3@28599>     BEQ.w 'done2
00035CD8 <AmiBlitz3.ab3@28600>     MOVEA.l D0,A2
00035CDC <AmiBlitz3.ab3@28601>     MOVE.l $12(A2),D4
00035CE0 <AmiBlitz3.ab3@28602>     TST.w -$2(A2,D4.L)
00035CE4 <AmiBlitz3.ab3@28603>     BEQ.w 'loop3
00035CE8 <AmiBlitz3.ab3@28605>     LEA $4(A2),A0
00035CEA <AmiBlitz3.ab3@28606>     MOVE.l A0,D2
00035CEC <AmiBlitz3.ab3@28607>     MOVEQ.l #$02,D3
00035CEE <AmiBlitz3.ab3@28608>     MOVE.l D7,D1                                           ; schreiben der Libnum mit 2 bytes
00035CF2 <AmiBlitz3.ab3@28609>     JSR _Write(A6)                                         ; d1: file, d2: buffer, d3:length
00035CF6 <AmiBlitz3.ab3@28611>     LEA -$4(A2,D4.L),A0
00035CF8 <AmiBlitz3.ab3@28612>     MOVE.l A0,D2
00035CFA <AmiBlitz3.ab3@28613>     MOVEQ.l #$02,D3
00035CFC <AmiBlitz3.ab3@28614>     MOVE.l D7,D1                                           ; schreiben der Max Objects mit 2 bytes
00035D00 <AmiBlitz3.ab3@28615>     JSR _Write(A6)                                         ; d1: file, d2: buffer, d3:length
00035D04 <AmiBlitz3.ab3@28616>  BRA.w 'loop3
00035D0A <AmiBlitz3.ab3@28621>   LEA XTRAEndPadBytes,A2 ; get the start address off the 4 fill/pad/termination bytes
00035D0C <AmiBlitz3.ab3@28622>   MOVE.l A2,D2           ; move the address to d2
00035D12 <AmiBlitz3.ab3@28623>   MOVE.l #4,D3           ; we only need 4 bytes to save
00035D14 <AmiBlitz3.ab3@28624>   MOVE.l D7,D1           ; we set the file handle
00035D18 <AmiBlitz3.ab3@28625>   JSR _Write(A6)         ; and we write it.
00035D1A <AmiBlitz3.ab3@28627> RTS
00035D20 <AmiBlitz3.ab3@28632>   LEA optssave,A0                      ; backup address
00035D26 <AmiBlitz3.ab3@28633>   LEA ptr_xtradata,A1                  ; source address
00035D28 <AmiBlitz3.ab3@28636>   MOVE.w (A1)+,D0                                          ;length of data move
00035D2C <AmiBlitz3.ab3@28637>   BEQ.b 'backupdone
00035D2E <AmiBlitz3.ab3@28638>   SUBQ.w #1,D0
00035D30 <AmiBlitz3.ab3@28641>     MOVE.l (A1)+,D1
00035D34 <AmiBlitz3.ab3@28642>     BEQ.b 'backuploop
00035D36 <AmiBlitz3.ab3@28643>     MOVEA.l D1,A2
00035D38 <AmiBlitz3.ab3@28644>     MOVE.w D0,D1
00035D3A <AmiBlitz3.ab3@28647>       MOVE.b (A2)+,(A0)+
00035D3E <AmiBlitz3.ab3@28648>   DBF D1,'backuploop3
00035D42 <AmiBlitz3.ab3@28650>  BRA.w 'backuploop2
00035D48 <AmiBlitz3.ab3@28654>   LEA bufferlist,A1
00035D4A <AmiBlitz3.ab3@28657>     MOVE.l (A1)+,D2
00035D4E <AmiBlitz3.ab3@28658>     BEQ.b 'loop4done
00035D50 <AmiBlitz3.ab3@28660>     MOVEA.l D2,A0
00035D52 <AmiBlitz3.ab3@28661>     MOVE.l (A0),D2
00035D54 <AmiBlitz3.ab3@28662>     ADDQ.w #8,A0
00035D5A <AmiBlitz3.ab3@28663>     JSR makelong
00035D5E <AmiBlitz3.ab3@28664>  BRA.b 'loop4
00035D64 <AmiBlitz3.ab3@28667>   CLR.w state_of_residents                                 ;resident change
00035D6A <AmiBlitz3.ab3@28668>   CLR.w comsettings_message                                ;alloc change
00035D70 <AmiBlitz3.ab3@28669>   CLR.w maxobject_pos
00035D72 <AmiBlitz3.ab3@28670> RTS   ; new tomsmart1
00035D78 <AmiBlitz3.ab3@28674>   LEA optssave,A0
00035D7E <AmiBlitz3.ab3@28675>   LEA ptr_xtradata,A1
00035D80 <AmiBlitz3.ab3@28678>   MOVE.w (A1)+,D0
00035D84 <AmiBlitz3.ab3@28679>   BEQ.b 'restoredone
00035D86 <AmiBlitz3.ab3@28680>   SUBQ.w #1,D0
00035D88 <AmiBlitz3.ab3@28683>     MOVE.l (A1)+,D1
00035D8C <AmiBlitz3.ab3@28684>     BEQ.b 'restoreloop1
00035D8E <AmiBlitz3.ab3@28685>     MOVEA.l D1,A2
00035D90 <AmiBlitz3.ab3@28686>     MOVE.w D0,D1
00035D92 <AmiBlitz3.ab3@28689>       MOVE.b (A0)+,(A2)+
00035D96 <AmiBlitz3.ab3@28690>   DBF D1,'restoreloop3
00035D9A <AmiBlitz3.ab3@28692>  BRA.b 'restoreloop2
00035D9C <AmiBlitz3.ab3@28695> RTS
00035DA2 <AmiBlitz3.ab3@28699>   JSR free_residents                    ; first free the allready loaded residents
00035DA8 <AmiBlitz3.ab3@28700>   JSR Clear_Residents_table             ; second clear the complete resident table
00035DAA <AmiBlitz3.ab3@28701> RTS
00035DB2 <AmiBlitz3.ab3@28705>   MOVE.w #$FFFF,state_of_residents
00035DB8 <AmiBlitz3.ab3@28706>   MOVE.w state_of_residents,D0
00035DBE <AmiBlitz3.ab3@28707>   JSR reloadresident
00035DC0 <AmiBlitz3.ab3@28708> RTS
00035DC2 <AmiBlitz3.ab3@28714>   MOVE.l d0,a1
00035DC8 <AmiBlitz3.ab3@28716>   MOVEA.l libpointer,A2
00035DCC <AmiBlitz3.ab3@28719>     MOVE.l $12(A2),D0
00035DD0 <AmiBlitz3.ab3@28720>     TST.w -$2(A2,D0.L)
00035DD4 <AmiBlitz3.ab3@28721>      BEQ.w 'next
00035DD6 <AmiBlitz3.ab3@28722>     SUBQ.w #1,D1
00035DDA <AmiBlitz3.ab3@28723>      BPL.w 'next
00035DDE <AmiBlitz3.ab3@28725>     MOVEA.l -$1A(A2,D0.L),A3    ;token offset
00035DE0 <AmiBlitz3.ab3@28726>     ADDA.l A2,A3
00035DE2 <AmiBlitz3.ab3@28729>       MOVE.b (A3)+,(A1)+
00035DE6 <AmiBlitz3.ab3@28730>     BNE.w 'tt1
00035DE8 <AmiBlitz3.ab3@28732>     CLR.b -(A1)
00035DEC <AmiBlitz3.ab3@28734>     MOVE.w -$4(A2,D0.L),D0
00035DF2 <AmiBlitz3.ab3@28736>     AND.l #$ffff,d0
00035DF4 <AmiBlitz3.ab3@28737>  RTS
00035DF6 <AmiBlitz3.ab3@28741>     MOVEA.l (A2),A2
00035DFA <AmiBlitz3.ab3@28742> BRA.w 'loop
00035E0A <AmiBlitz3.ab3@28747> str_maxobjects_name:   Dc.b "              ",0 : Even
00035E1A <AmiBlitz3.ab3@28748> str_maxobjects_name2:  Dc.b "              ",0 : Even
00035E1E <AmiBlitz3.ab3@28749> objectbuffer:          Dc.l #DEFAULT_OBJECTBUFFERSIZE  ; replaced with a constant tomsmart1
00035E22 <AmiBlitz3.ab3@28750>                        Dc.l $00000000
00035E2E <AmiBlitz3.ab3@28751> str_objectbuffer:      Dc.b "16384",0,0,0,0,0,0,0      ; string max 12 columns
00035E32 <AmiBlitz3.ab3@28753> libsbuffer:            Dc.l #DEFAULT_LIBSBUFFERSIZE    ; replaced with a constant tomsmart1
00035E36 <AmiBlitz3.ab3@28754>                        Dc.l $00000000
00035E42 <AmiBlitz3.ab3@28755> str_libsbuffer:        Dc.b "32768",0,0,0,0,0,0,0      ;was "16384"; string max 12 columns
00035E46 <AmiBlitz3.ab3@28757> systembuffer:          Dc.l #DEFAULT_SYSTEMBUFFERSIZE  ; system buffer  ; replaced with a constant tomsmart1
00035E4A <AmiBlitz3.ab3@28758>                        Dc.l $00000000
00035E56 <AmiBlitz3.ab3@28759> str_systembuffer:      Dc.b "4096",0,0,0,0,0,0,0,0     ; string max 12 columns
00035E5A <AmiBlitz3.ab3@28761> databuffer:            Dc.l #DEFAULT_DATABUFFERSIZE    ; data buffer   ; replaced with a constant tomsmart1
00035E5E <AmiBlitz3.ab3@28762>                        Dc.l $00000000
00035E6A <AmiBlitz3.ab3@28763> str_databuffer:        Dc.b "4096",0,0,0,0,0,0,0,0     ; string max 12 columns
00035E6E <AmiBlitz3.ab3@28765> macrobuffer_size:      Dc.l #DEFAULT_MACROBUFFERSIZE   ; macro buffer ; was $00002000 ; replaced with a constant tomsmart1
00035E72 <AmiBlitz3.ab3@28766>                        Dc.l $00000000
00035E7E <AmiBlitz3.ab3@28767> str_macrobuffer:       Dc.b "40000",0,0,0,0,0,0,0      ; string max 12 columns
00035E82 <AmiBlitz3.ab3@28769> stringbuffer:          Dc.l #DEFAULT_STRINGBUFFERSIZE  ; string buffer ; replaced with a constant tomsmart1
00035E86 <AmiBlitz3.ab3@28770>                        Dc.l $00000000
00035E92 <AmiBlitz3.ab3@28771> str_stringbuffer:      Dc.b "10240",0,0,0,0,0,0,0      ; string max 12 columns
00035E94 <AmiBlitz3.ab3@28773> maxobjects_value:      Dc.w $0064
00035E98 <AmiBlitz3.ab3@28774>                        Dc.l $00000000
00035EA4 <AmiBlitz3.ab3@28775> str_maxobjects_value:  Dc.b "100",0,0,0,0,0,0,0,0,0    ; string max 12 columns
00035EA6 <AmiBlitz3.ab3@28777> maxobjects_value2:     Dc.w $0014
00035EA8 <AmiBlitz3.ab3@28778>                        Dc.w $0000
00035EB4 <AmiBlitz3.ab3@28780> str_maxobjects_value2: Dc.b "20",0,0,0,0,0,0,0,0,0,0   ; string max 12 columns
00035EB5 <AmiBlitz3.ab3@28784> set_create_iconfile:   Dc.b $00
00035EB8 <AmiBlitz3.ab3@28785> create_iconfile:       Dc.b $80,$01,$01                    ;create icon
00035EBA <AmiBlitz3.ab3@28786>                        Dc.b $00,$01
00035EBB <AmiBlitz3.ab3@28788> set_use_debugger:      Dc.b $00                            ; Flags.w
00035EBE <AmiBlitz3.ab3@28789> use_debugger:          Dc.b $80,$01,$01                    ; Activation.w
00035EC0 <AmiBlitz3.ab3@28790>                        Dc.b $00,$01                        ; GadgetType.w
00035EC4 <AmiBlitz3.ab3@28791> AL_0_11010:            Dc.b $00,$80,$01,$01                ; flags, activation
00035EC8 <AmiBlitz3.ab3@28792> AL_0_1103C:            Dc.b $00,$80,$01,$01                ; flags, activation
00035ECC <AmiBlitz3.ab3@28793> AL_0_11068:            Dc.b $00,$80,$01,$01                ; flags, activation
00035ECE <AmiBlitz3.ab3@28794> AL_0_11094:            Ds.w 1
00035ECF <AmiBlitz3.ab3@28796> set_make_smallestcode: Ds.b 1
00035ED2 <AmiBlitz3.ab3@28797> make_smallestcode:     Dc.b $00,$01,$01                    ;make smallest
00035ED4 <AmiBlitz3.ab3@28798>                        Dc.b $00,$01
00035ED5 <AmiBlitz3.ab3@28799> set_link_debuginfo:    Ds.b 1
00035ED8 <AmiBlitz3.ab3@28800> link_debuginfo:        Dc.b $00,$01,$01                    ;create debuginfo
00035EDA <AmiBlitz3.ab3@28801>                        Dc.b $00,$01
000360FA <AmiBlitz3.ab3@28806>   Ds.l 136         ;resident files STEP $44 piece 8
0003617A <AmiBlitz3.ab3@28811> str_calcexpression:        Ds.l 32
0003617E <AmiBlitz3.ab3@28812> destbufferend_backup_calc: Ds.l 1             ; was calclibat
00036188 <AmiBlitz3.ab3@28820>   MOVE.l destbufferend,destbufferend_backup_calc
0003618E <AmiBlitz3.ab3@28822> 
00036194 <AmiBlitz3.ab3@28824>   MOVE.l A7,errstack
0003619E <AmiBlitz3.ab3@28825>   MOVE.l #Calc_Error_Exit,errcont
000361C8 <AmiBlitz3.ab3@28833>   !basic         ; get the flage for the conversion form the editor
0003620C <AmiBlitz3.ab3@28834>   !ComData_GetW{comWord_CalculatorButtonBinFlag,D0} : MOVE.w d0,CalculatorButtonBinFlag
00036250 <AmiBlitz3.ab3@28835>   !ComData_GetW{comWord_CalculatorButtonDecFlag,D0} : MOVE.w d0,CalculatorButtonDecFlag
0003626E <AmiBlitz3.ab3@28836>   !asm
00036274 <AmiBlitz3.ab3@28839>   LEA str_calcexpression,A0
0003627A <AmiBlitz3.ab3@28847>   JSR setcvars
00036280 <AmiBlitz3.ab3@28848>   JSR setsvars
00036286 <AmiBlitz3.ab3@28850>   CLR.w connest             ;no idea...
0003628C <AmiBlitz3.ab3@28851>   LEA str_calcexpression,A5
00036292 <AmiBlitz3.ab3@28852>   JSR evalconst3            ;evaluate constant
00036298 <AmiBlitz3.ab3@28854>   LEA str_calcexpression,A0
0003629A <AmiBlitz3.ab3@28855>   TST.l D3
0003629E <AmiBlitz3.ab3@28856>    BPL.w 'ispos
000362A2 <AmiBlitz3.ab3@28857>   MOVE.b #$2D,(A0)+         ;'-'
000362A4 <AmiBlitz3.ab3@28858>   NEG.l D3
000362AC <AmiBlitz3.ab3@28861>   CMPI.w #$80,CalculatorButtonDecFlag
000362B0 <AmiBlitz3.ab3@28862>    BEQ.w 'dec
000362B2 <AmiBlitz3.ab3@28863>   MOVEQ.l #$00,D1
000362BA <AmiBlitz3.ab3@28864>   CMPI.w #$80,CalculatorButtonBinFlag
000362BE <AmiBlitz3.ab3@28865>    BNE.w 'hex
000362C0 <AmiBlitz3.ab3@28868>   MOVEQ.l #$1F,D0
000362C4 <AmiBlitz3.ab3@28869>   MOVE.b #$25,(A0)+      ;'%'
000362C6 <AmiBlitz3.ab3@28872>       LSL.l #1,D3
000362CA <AmiBlitz3.ab3@28873>        BCC.w 'bzero
000362CE <AmiBlitz3.ab3@28874>       MOVE.b #"1",(A0)+
000362D0 <AmiBlitz3.ab3@28875>       MOVEQ.l #-$01,D1
000362D4 <AmiBlitz3.ab3@28876>   BRA.w 'bnext
000362D6 <AmiBlitz3.ab3@28879>       TST.w D1
000362DA <AmiBlitz3.ab3@28880>       BEQ.w 'bnext
000362DE <AmiBlitz3.ab3@28881>       MOVE.b #"0",(A0)+
000362E2 <AmiBlitz3.ab3@28884>  DBF D0,'bloop
000362E4 <AmiBlitz3.ab3@28887>   TST.w D1
000362E8 <AmiBlitz3.ab3@28888>   BNE.w 'pc1
000362EC <AmiBlitz3.ab3@28889>   MOVE.b #"0",(A0)+
000362EE <AmiBlitz3.ab3@28892>   CLR.b (A0)
000362F2 <AmiBlitz3.ab3@28893>  BRA.w 'pc
000362F4 <AmiBlitz3.ab3@28896>   MOVEQ.l #$07,D0
000362F8 <AmiBlitz3.ab3@28897>   MOVE.b #$24,(A0)+  ;'$'
000362FA <AmiBlitz3.ab3@28900>     MOVE.l D3,D2
000362FC <AmiBlitz3.ab3@28901>     SWAP D2
000362FE <AmiBlitz3.ab3@28902>     LSR.w #8,D2
00036300 <AmiBlitz3.ab3@28903>     LSR.w #4,D2
00036304 <AmiBlitz3.ab3@28904>     ADDI.w #$30,D2
00036308 <AmiBlitz3.ab3@28905>     CMP.w #$3A,D2
0003630C <AmiBlitz3.ab3@28906>      BCS.w 'hok
0003630E <AmiBlitz3.ab3@28907>     ADDQ.w #7,D2
00036312 <AmiBlitz3.ab3@28910>     CMP.w #$30,D2
00036316 <AmiBlitz3.ab3@28911>     BEQ.w 'hzero
00036318 <AmiBlitz3.ab3@28912>     MOVE.b D2,(A0)+
0003631A <AmiBlitz3.ab3@28913>     MOVEQ.l #-$01,D1
0003631E <AmiBlitz3.ab3@28914>   BRA.w 'hnext
00036320 <AmiBlitz3.ab3@28917>     TST.w D1
00036324 <AmiBlitz3.ab3@28918>      BEQ.w 'hnext
00036326 <AmiBlitz3.ab3@28919>     MOVE.b D2,(A0)+
00036328 <AmiBlitz3.ab3@28922>     LSL.l #4,D3
0003632C <AmiBlitz3.ab3@28923>  DBF D0,'hloop
00036330 <AmiBlitz3.ab3@28925>  BRA.w 'bdone
00036332 <AmiBlitz3.ab3@28928>   MOVE.l D3,D2
00036338 <AmiBlitz3.ab3@28929>   JSR makelong          ;to long...
00036342 <AmiBlitz3.ab3@28936>   MOVE.l destbufferend_backup_calc,destbufferend
00036344 <AmiBlitz3.ab3@28938> RTS                         ; added tomsmart 2012 03 07 vor Calculator in PED
00036443 <AmiBlitz3.ab3@28942> str_cliarguments: Ds.b 255   ; a command line can acutally be 255 characters long
00036444 <AmiBlitz3.ab3@28944> Even
00036446 <AmiBlitz3.ab3@28962>     MOVE.b (a5)+,d0
0003644A <AmiBlitz3.ab3@28963>     BEQ 'l2
0003644E <AmiBlitz3.ab3@28964>     CMP.b #$80,d0
00036452 <AmiBlitz3.ab3@28965>     BNE 'l1
00036454 <AmiBlitz3.ab3@28966>     MOVE.b (a5)+,d0
00036458 <AmiBlitz3.ab3@28967>     BEQ 'l2
0003645C <AmiBlitz3.ab3@28968>     CMP.b #$02,d0
00036460 <AmiBlitz3.ab3@28969>   BNE 'l1
00036464 <AmiBlitz3.ab3@28972>     CMP.b #$20,(a5)+
00036468 <AmiBlitz3.ab3@28973>   BEQ 'l3
0003646A <AmiBlitz3.ab3@28974>   SUBQ.l #1,a5
0003646C <AmiBlitz3.ab3@28975>   TST.b (a5)
00036470 <AmiBlitz3.ab3@28976>   BEQ 'l2
00036474 <AmiBlitz3.ab3@28977>   CMP.w #$8008,(a5)
00036478 <AmiBlitz3.ab3@28978>   BEQ 'l4
0003647C <AmiBlitz3.ab3@28979>   CMP.w #$8009,(a5)
00036480 <AmiBlitz3.ab3@28980>   BEQ 'l4
00036484 <AmiBlitz3.ab3@28981>  BRA 'l1
00036486 <AmiBlitz3.ab3@28984>   ADDQ.l #2,a5
0003648C <AmiBlitz3.ab3@28985>   JSR skiprest
0003648E <AmiBlitz3.ab3@28986> RTS
00036494 <AmiBlitz3.ab3@28989>   JSR nextline
00036498 <AmiBlitz3.ab3@28990>   BNE 'l1
0003649A <AmiBlitz3.ab3@28991> RTS
000364C4 <AmiBlitz3.ab3@28995>   !basic
000364CE <AmiBlitz3.ab3@28996>   DateFormat 1
000364DC <AmiBlitz3.ab3@28997>   i.l=SystemDate
00036502 <AmiBlitz3.ab3@28998>   a$=Date$ (i)
00036580 <AmiBlitz3.ab3@28999>   a$=Replace$(a$,"/",".")
00036586 <AmiBlitz3.ab3@29000>   GetD0 &a$
00036588 <AmiBlitz3.ab3@29001>   MOVEQ #8,d2
0003658A <AmiBlitz3.ab3@29002>   MOVE.l d0,a0
0003658C <AmiBlitz3.ab3@29005>     MOVE.b (a0)+,d1
00036592 <AmiBlitz3.ab3@29006>     JSR pokedata1b
00036596 <AmiBlitz3.ab3@29007>  DBF d2,'l1
00036598 <AmiBlitz3.ab3@29009>   MOVEQ #0,d0
0003659A <AmiBlitz3.ab3@29010>   MOVE.b (a0)+,d0
000365B8 <AmiBlitz3.ab3@29011>   !asm
000365BE <AmiBlitz3.ab3@29012>   ADD.l #9,d2
000365C4 <AmiBlitz3.ab3@29013>   ADD.l #9,a5
000365C6 <AmiBlitz3.ab3@29014> RTS
000365F0 <AmiBlitz3.ab3@29018>   !basic
000365FA <AmiBlitz3.ab3@29019>   DateFormat 0
00036608 <AmiBlitz3.ab3@29020>   i.l=SystemDate
0003662E <AmiBlitz3.ab3@29021>   a$=Date$ (i)
000366AC <AmiBlitz3.ab3@29022>   a$=Replace$(a$,"/",".")
000366B2 <AmiBlitz3.ab3@29023>   GetD0 &a$
000366B4 <AmiBlitz3.ab3@29024>   MOVEQ #8,d2
000366B6 <AmiBlitz3.ab3@29025>   MOVE.l d0,a0
000366B8 <AmiBlitz3.ab3@29028>     MOVE.b (a0)+,d1
000366BE <AmiBlitz3.ab3@29029>     JSR pokedata1b
000366C2 <AmiBlitz3.ab3@29030>  DBF d2,'l1
000366C4 <AmiBlitz3.ab3@29032>   MOVEQ #0,d0
000366C6 <AmiBlitz3.ab3@29033>   MOVE.b (a0)+,d0
000366E4 <AmiBlitz3.ab3@29034>   !asm
000366EA <AmiBlitz3.ab3@29035>   ADD.l #9,d2
000366F0 <AmiBlitz3.ab3@29036>   ADD.l #13,a5
000366F2 <AmiBlitz3.ab3@29037> RTS
0003671C <AmiBlitz3.ab3@29041>   !basic
00036726 <AmiBlitz3.ab3@29042>   DateFormat 1
00036734 <AmiBlitz3.ab3@29043>   i.l = SystemDate
0003675A <AmiBlitz3.ab3@29044>   a$ = Date$ (i)
000367D8 <AmiBlitz3.ab3@29045>   a$ = Replace$(a$,"/",".")
000367DE <AmiBlitz3.ab3@29046>   GetD0 &a$
000367E0 <AmiBlitz3.ab3@29047>   MOVEQ #8,d2
000367E2 <AmiBlitz3.ab3@29048>   MOVE.l d0,a0
000367E4 <AmiBlitz3.ab3@29051>     MOVE.b (a0)+,d1
000367EA <AmiBlitz3.ab3@29052>     JSR writebyte
000367EE <AmiBlitz3.ab3@29053>  DBF d2,'l1
000367F0 <AmiBlitz3.ab3@29055>   MOVEQ #0,d0
000367F2 <AmiBlitz3.ab3@29056>   MOVE.b (a0)+,d0
00036810 <AmiBlitz3.ab3@29057>   !asm
00036816 <AmiBlitz3.ab3@29058>   ADD.l #9,a5
00036818 <AmiBlitz3.ab3@29059> RTS
00036842 <AmiBlitz3.ab3@29063>   !basic
0003684C <AmiBlitz3.ab3@29064>   DateFormat 0
0003685A <AmiBlitz3.ab3@29065>   i.l=SystemDate
00036880 <AmiBlitz3.ab3@29066>   a$=Date$ (i)
000368FE <AmiBlitz3.ab3@29067>   a$=Replace$(a$,"/",".")
00036904 <AmiBlitz3.ab3@29068>   GetD0 &a$
00036906 <AmiBlitz3.ab3@29069>   MOVEQ #8,d2
00036908 <AmiBlitz3.ab3@29070>   MOVE.l d0,a0
0003690A <AmiBlitz3.ab3@29073>     MOVE.b (a0)+,d1
00036910 <AmiBlitz3.ab3@29074>     JSR writebyte
00036914 <AmiBlitz3.ab3@29075>  DBF d2,'l1
00036916 <AmiBlitz3.ab3@29077>   MOVEQ #0,d0
00036918 <AmiBlitz3.ab3@29078>   MOVE.b (a0)+,d0
00036936 <AmiBlitz3.ab3@29079>   !asm
0003693C <AmiBlitz3.ab3@29080>   ADD.l #13,a5
0003693E <AmiBlitz3.ab3@29081> RTS
00036940 <AmiBlitz3.ab3@29085>   MOVE.l d2,-(a7)                                          ; D2 -> stack
00036942 <AmiBlitz3.ab3@29086>   MOVE.l a5,d0
0003696C <AmiBlitz3.ab3@29087>   !basic
00036970 <AmiBlitz3.ab3@29088>   _myD0.l = PutD0
0003697A <AmiBlitz3.ab3@29089>   If _myD0
000369C0 <AmiBlitz3.ab3@29090>     verstring$ = Left$(Peek.s(_myD0),9+3)
00036A12 <AmiBlitz3.ab3@29091>     verstring$ = UnRight$(verstring$,3)                      ; Compilerkonstantenbeginn \__ entfernen
00036A18 <AmiBlitz3.ab3@29092>   Else
00036A52 <AmiBlitz3.ab3@29093>     error{"INTERNAL: Invalid pointer in version_string!"}
00036A62 <AmiBlitz3.ab3@29098>   actual_version.l = Peek.l(?versioninformation)
00036A72 <AmiBlitz3.ab3@29099>   actual_build.l   = Peek.l(?number_of_builds)
00036A96 <AmiBlitz3.ab3@29101>   Format "00"
00036ACC <AmiBlitz3.ab3@29102>   Select verstring$
00036AF0 <AmiBlitz3.ab3@29104>     Case "VER_MAJOR"
00036B2C <AmiBlitz3.ab3@29105>      put_versionstr$ = Str$(actual_version LSR 24)
00036B56 <AmiBlitz3.ab3@29107>     Case "VER_MINOR"
00036B9A <AmiBlitz3.ab3@29108>      put_versionstr$ = Str$((actual_version LSL 8) LSR 24)
00036BC4 <AmiBlitz3.ab3@29110>     Case "VER_PATCH"
00036C08 <AmiBlitz3.ab3@29111>      put_versionstr$ = Str$((actual_version LSL 16) LSR 24 )
00036C32 <AmiBlitz3.ab3@29113>     Case "VER_BUILD"
00036C56 <AmiBlitz3.ab3@29114>      Format ""
00036C8A <AmiBlitz3.ab3@29115>      put_versionstr$ = Str$(actual_build)
00036C90 <AmiBlitz3.ab3@29117>     Default
00036CB8 <AmiBlitz3.ab3@29118>      put_versionstr$ = "{unknown compilerconstant}"
00036CC6 <AmiBlitz3.ab3@29121>   End Select
00036CEA <AmiBlitz3.ab3@29122>   Format ""
00036CFA <AmiBlitz3.ab3@29124>   GetD0 FLen(put_versionstr$)                              ; laenge zielstring -> Stack
00036CFC <AmiBlitz3.ab3@29125>   MOVE.l d0,d2
00036CFE <AmiBlitz3.ab3@29126>   MOVE.l d2,-(a7)
00036D02 <AmiBlitz3.ab3@29127>   SUB #1,d2
00036D08 <AmiBlitz3.ab3@29129>   GetD0 &put_versionstr$                                   ; kopieren des neuen Strings in den Zielstring
00036D0A <AmiBlitz3.ab3@29130>   MOVE.l d0,a0
00036D0C <AmiBlitz3.ab3@29133>     MOVE.b (a0)+,d1
00036D12 <AmiBlitz3.ab3@29134>     JSR pokedata1b
00036D16 <AmiBlitz3.ab3@29135>  DBF d2,'l1
00036D18 <AmiBlitz3.ab3@29137>   MOVEQ #0,d0
00036D36 <AmiBlitz3.ab3@29138>   !asm
00036D38 <AmiBlitz3.ab3@29139>   MOVE.l (a7)+,d0                                          ; laenge Zielstring <- Stack
00036D3A <AmiBlitz3.ab3@29140>   MOVE.l (a7)+,d2                                          ; d2 <-Stack
00036D3C <AmiBlitz3.ab3@29141>   ADD.l d0,d2
00036D42 <AmiBlitz3.ab3@29142>   ADD.l #12,a5                                             ; string_ptr um konstante weitersetzen
00036D44 <AmiBlitz3.ab3@29143>   MOVEQ #0,d0
00036D46 <AmiBlitz3.ab3@29144> RTS
00036D48 <AmiBlitz3.ab3@29148>   MOVE.l a5,d0
00036D72 <AmiBlitz3.ab3@29149>   !basic
00036D76 <AmiBlitz3.ab3@29150>   _myD0.l = PutD0
00036D80 <AmiBlitz3.ab3@29151>   If _myD0
00036DC6 <AmiBlitz3.ab3@29152>     verstring$ = Left$(Peek.s(_myD0),9+3)
00036E18 <AmiBlitz3.ab3@29153>     verstring$ = UnRight$(verstring$,3)                      ; Compilerkonstantenbeginn \__ entfernen
00036E1E <AmiBlitz3.ab3@29154>   Else
00036E58 <AmiBlitz3.ab3@29155>     error{"INTERNAL: Invalid pointer in version_string_dc!"}
00036E68 <AmiBlitz3.ab3@29160>   actual_version.l = Peek.l(?versioninformation)
00036E78 <AmiBlitz3.ab3@29161>   actual_build.l   = Peek.l(?number_of_builds)
00036E9C <AmiBlitz3.ab3@29163>   Format ""
00036ED2 <AmiBlitz3.ab3@29164>   Select verstring$
00036EF6 <AmiBlitz3.ab3@29166>     Case "VER_MAJOR"
00036F32 <AmiBlitz3.ab3@29167>      put_versionstr$ = Str$(actual_version LSR 24)
00036F5C <AmiBlitz3.ab3@29169>     Case "VER_MINOR"
00036FA0 <AmiBlitz3.ab3@29170>      put_versionstr$ = Str$((actual_version LSL 8) LSR 24)
00036FCA <AmiBlitz3.ab3@29172>     Case "VER_PATCH"
0003700E <AmiBlitz3.ab3@29173>      put_versionstr$ = Str$((actual_version LSL 16) LSR 24 )
00037038 <AmiBlitz3.ab3@29175>     Case "VER_BUILD"
0003705C <AmiBlitz3.ab3@29176>      Format ""
00037090 <AmiBlitz3.ab3@29177>      put_versionstr$ = Str$(actual_build)
00037096 <AmiBlitz3.ab3@29179>     Default
000370BE <AmiBlitz3.ab3@29180>      put_versionstr$ = "{unknown compilerconstant}"
000370CC <AmiBlitz3.ab3@29182>   End Select
000370F0 <AmiBlitz3.ab3@29183>   Format ""
00037106 <AmiBlitz3.ab3@29185>   GetD0 FLen(put_versionstr$)-1
00037108 <AmiBlitz3.ab3@29186>   MOVE.l d0,d2
0003710E <AmiBlitz3.ab3@29188>   GetD0 &put_versionstr$                                   ; kopieren des neuen Strings in den Zielstring
00037110 <AmiBlitz3.ab3@29189>   MOVE.l d0,a0
00037112 <AmiBlitz3.ab3@29192>     MOVE.b (a0)+,d1
00037118 <AmiBlitz3.ab3@29193>     JSR writebyte
0003711C <AmiBlitz3.ab3@29194>  DBF d2,'l1
0003711E <AmiBlitz3.ab3@29196>   MOVEQ #0,d0
00037120 <AmiBlitz3.ab3@29197>   MOVE.b -(a0),d0                                          ; letztes Zeichen in D0
0003713E <AmiBlitz3.ab3@29198>   !asm
00037144 <AmiBlitz3.ab3@29199>   ADD.l #12,a5                                             ; string_ptr um konstante weitersetzen
00037146 <AmiBlitz3.ab3@29200> RTS
00037148 <AmiBlitz3.ab3@29302>   MOVE.l a5,-(a7)
00037174 <AmiBlitz3.ab3@29303>   !fget
00037178 <AmiBlitz3.ab3@29304>   CMP.w #".",d0
0003717C <AmiBlitz3.ab3@29305>   BNE 'skip
00037180 <AmiBlitz3.ab3@29306>   MOVEM.l a2/d2,-(a7)
00037186 <AmiBlitz3.ab3@29307>   LEA newtypebase,a2
0003718C <AmiBlitz3.ab3@29308>   JSR getparameter2
00037190 <AmiBlitz3.ab3@29309>   BEQ.w JUMP_syntaxerr
00037196 <AmiBlitz3.ab3@29310>   JSR findtype
0003719A <AmiBlitz3.ab3@29311>   BNE.w JUMP_notypeerr2
000371A0 <AmiBlitz3.ab3@29312>   MOVE.l a2,typetocast
000371A4 <AmiBlitz3.ab3@29313>   MOVEM.l (a7)+,a2/d2
000371A8 <AmiBlitz3.ab3@29314>   CMP.w #")",d0
000371AC <AmiBlitz3.ab3@29315>   BNE JUMP_errorbracketmiss
000371AE <AmiBlitz3.ab3@29316>   ADDQ.l #4,a7
000371DA <AmiBlitz3.ab3@29317>   !fget
000371E0 <AmiBlitz3.ab3@29318>   JMP nocast
000371E2 <AmiBlitz3.ab3@29321>   MOVE.l (a7)+,a5
000371E8 <AmiBlitz3.ab3@29322> JMP bracket
000371EE <AmiBlitz3.ab3@29325> JUMP_errorbracketmiss JMP errorbracketmiss
00037218 <AmiBlitz3.ab3@29328> Function.l ab3_GetIncludeLock{filename.s}
00037238 <AmiBlitz3.ab3@29329>   incLock.l  = Lock_ (&filename,#ACCESS_READ)   ; try bla.blub
00037290 <AmiBlitz3.ab3@29330>   ex.s       = dos_GetExt{filename}
000372A4 <AmiBlitz3.ab3@29332>   If incLock = False
00037318 <AmiBlitz3.ab3@29333>     filename = dos_SetExt{filename,"ab3"}
00037338 <AmiBlitz3.ab3@29334>     incLock  = Lock_ (&filename,#ACCESS_READ)   ; try bla.ab3
0003734C <AmiBlitz3.ab3@29337>   If incLock = False
000373C0 <AmiBlitz3.ab3@29338>     filename = dos_SetExt{filename,"ab2"}
000373E0 <AmiBlitz3.ab3@29339>     incLock  = Lock_ (&filename,#ACCESS_READ)   ; try bla.ab2
000373F4 <AmiBlitz3.ab3@29342>   If incLock = False
00037468 <AmiBlitz3.ab3@29343>     filename = dos_SetExt{filename,"bb2"}
00037488 <AmiBlitz3.ab3@29344>     incLock  = Lock_ (&filename,#ACCESS_READ)   ; try bla.bb2
0003749C <AmiBlitz3.ab3@29347>   If incLock = False
0003752E <AmiBlitz3.ab3@29348>     filename = dos_SetExt{filename,ex+".ab3"}
0003754E <AmiBlitz3.ab3@29349>     incLock  = Lock_ (&filename,#ACCESS_READ)   ; try bla.blub.ab3
00037562 <AmiBlitz3.ab3@29352>   If incLock = False
000375D6 <AmiBlitz3.ab3@29353>     filename = dos_SetExt{filename,"ab2"}
000375F6 <AmiBlitz3.ab3@29354>     incLock  = Lock_ (&filename,#ACCESS_READ)   ; try bla.blub.ab2
0003760A <AmiBlitz3.ab3@29357>   If incLock = False
0003767E <AmiBlitz3.ab3@29358>     filename = dos_SetExt{filename,"bb2"}
0003769E <AmiBlitz3.ab3@29359>     incLock  = Lock_ (&filename,#ACCESS_READ)   ; try bla.blub.bb2
000376A8 <AmiBlitz3.ab3@29362>  Function Return incLock
000376C2 <AmiBlitz3.ab3@29363> End Function
000376EC <AmiBlitz3.ab3@29367>   !basic
00037716 <AmiBlitz3.ab3@29368>   incString.s = Peek$(?ptr_parameterstore)
00037744 <AmiBlitz3.ab3@29370>   !ComData_LEA{comStr_CurrentDir,D0}                        ; get pointer to current Sourcefiledir
00037748 <AmiBlitz3.ab3@29371>   incDirP.l   = PutD0                                       ;    "
00037770 <AmiBlitz3.ab3@29372>   incDir_.s   = Peek.s(incDirP)                             ; get current Sourcefiledir
000377F0 <AmiBlitz3.ab3@29373>   incFile.s   = dos_AddPart{incDir_,incString}              ; adding Sourcefiledir and Includestring
00037822 <AmiBlitz3.ab3@29374>   incLock.l   = ab3_GetIncludeLock{incFile}                 ; check if file exist
00037836 <AmiBlitz3.ab3@29376>   If incLock = False ; not found => check default Include Directory
00037846 <AmiBlitz3.ab3@29377>     incDirP.l = Peek.l(?incd)
00037850 <AmiBlitz3.ab3@29378>     If incDirP
00037878 <AmiBlitz3.ab3@29379>       incDir_.s = Peek.s(incDirP)
0003787E <AmiBlitz3.ab3@29380>     Else
000378E8 <AmiBlitz3.ab3@29381>       incDir_.s = dos_AddPart{Peek.s(?str_blitz3assign),"Sourcecodes/Includes"}
00037968 <AmiBlitz3.ab3@29383>     incFile.s = dos_AddPart{incDir_,incString}
0003799A <AmiBlitz3.ab3@29384>     incLock.l = ab3_GetIncludeLock{incFile}
000379AE <AmiBlitz3.ab3@29387>   If incLock = False ; not found => check relative to current source
000379C6 <AmiBlitz3.ab3@29388>     incDepth.l = Peek.w(?ininclude)-1
000379EC <AmiBlitz3.ab3@29389>     If incDepth >= 0 AND incDepth < #maxincludes
00037A4C <AmiBlitz3.ab3@29390>       incDir_.s = dos_PathPart{incdim (incDepth)} ;= Peek.s(?includetemp2)
00037ACC <AmiBlitz3.ab3@29391>       incFile.s = dos_AddPart{incDir_,incString}
00037AFE <AmiBlitz3.ab3@29392>       incLock.l = ab3_GetIncludeLock{incFile}
00037B12 <AmiBlitz3.ab3@29396>   If incLock = False ; still not found => check default Include Directory and name only
00037B22 <AmiBlitz3.ab3@29397>     incDirP.l = Peek.l(?incd)
00037B2C <AmiBlitz3.ab3@29398>     If incDirP
00037B54 <AmiBlitz3.ab3@29399>       incDir_.s = Peek.s(incDirP)
00037B5A <AmiBlitz3.ab3@29400>     Else
00037BC4 <AmiBlitz3.ab3@29401>       incDir_.s = dos_AddPart{Peek.s(?str_blitz3assign),"Sourcecodes/Includes"}
00037C72 <AmiBlitz3.ab3@29403>     incFile.s = dos_AddPart{incDir_,dos_FilePart{incString}}
00037CA4 <AmiBlitz3.ab3@29404>     incLock.l = ab3_GetIncludeLock{incFile}
00037CAE <AmiBlitz3.ab3@29407>   If incLock
00037CC4 <AmiBlitz3.ab3@29408>     MaxLen incFile = 1024
00037CE8 <AmiBlitz3.ab3@29409>     NameFromLock_ incLock,&incFile,1024
00037D12 <AmiBlitz3.ab3@29410>     incFile = Peek.s(&incFile)
00037D4A <AmiBlitz3.ab3@29411>     Poke$ ?ptr_parameterstore,incFile
00037D5E <AmiBlitz3.ab3@29412>     i = FLen(incFile)
00037D6A <AmiBlitz3.ab3@29413>     GetReg d0,i
00037D70 <AmiBlitz3.ab3@29414>     MOVE.l d0,tempstore
00037D80 <AmiBlitz3.ab3@29415>     UnLock_ incLock
00037D9E <AmiBlitz3.ab3@29418>   !asm
00037DA4 <AmiBlitz3.ab3@29419>   TST.l tempstore
00037DA8 <AmiBlitz3.ab3@29420>    BEQ 'l1
00037DAE <AmiBlitz3.ab3@29421>   MOVE.l tempstore,d2
00037DB0 <AmiBlitz3.ab3@29424> RTS
00037DDA <AmiBlitz3.ab3@29428>   !basic
00037E04 <AmiBlitz3.ab3@29429>   incString.s = Peek$(?ptr_parameterstore)                  ; get the string
00037E32 <AmiBlitz3.ab3@29430>   !ComData_LEA{comStr_CurrentDir,D0}                        ; get pointer to current Sourcefiledir
00037E36 <AmiBlitz3.ab3@29431>   incDirP.l   = PutD0                                       ;    "
00037E5E <AmiBlitz3.ab3@29432>   incDir_.s   = Peek.s(incDirP)                             ; get current Sourcefiledir
00037EDE <AmiBlitz3.ab3@29433>   incFile.s   = dos_AddPart{incDir_,incString}              ; adding Sourcefiledir and Includestring
00037EFE <AmiBlitz3.ab3@29434>   incLock.l   = Lock_(&incFile,#ACCESS_READ)                ; check if file exist
00037F12 <AmiBlitz3.ab3@29436>   If incLock = False                                        ; not found => try orignal string only to find
00037F32 <AmiBlitz3.ab3@29437>     incLock.l = Lock_(&incString,#ACCESS_READ)
00037F3C <AmiBlitz3.ab3@29440>   If incLock                                                ; found => store full path
00037F52 <AmiBlitz3.ab3@29441>     MaxLen incFile = 1024
00037F76 <AmiBlitz3.ab3@29442>     NameFromLock_ incLock,&incFile,1024
00037FA0 <AmiBlitz3.ab3@29443>     incFile = Peek.s(&incFile)
00037FD8 <AmiBlitz3.ab3@29444>     Poke$ ?ptr_parameterstore,incFile
00037FE4 <AmiBlitz3.ab3@29447> 
00038002 <AmiBlitz3.ab3@29448>   !asm
00038004 <AmiBlitz3.ab3@29449> RTS
0003800A <AmiBlitz3.ab3@29460>   JSR Aclearallvars
00038010 <AmiBlitz3.ab3@29461>   JSR free_unusedfunctions
0003801A <AmiBlitz3.ab3@29476>   MOVE.l #"NORE",reqmode
00038020 <AmiBlitz3.ab3@29477> JSR handle_compileerror
00038022 <AmiBlitz3.ab3@29480>   MOVE.l d0,-(a7)
00038024 <AmiBlitz3.ab3@29481>   MOVE.l a5,d0
0003802E <AmiBlitz3.ab3@29482>   !basica7
00038032 <AmiBlitz3.ab3@29483>   i.l = PutD0
0003803C <AmiBlitz3.ab3@29484>   If i
00038064 <AmiBlitz3.ab3@29485>     a$ = Peek$(i)
00038096 <AmiBlitz3.ab3@29486>     b$ = Peeks$(i-7,7)
000381CE <AmiBlitz3.ab3@29488> 
000381D4 <AmiBlitz3.ab3@29489>     MOVE.l d0,result
000381D8 <AmiBlitz3.ab3@29491>   !asma7
000381DA <AmiBlitz3.ab3@29492>   MOVE.l (a7)+,d0
000381DC <AmiBlitz3.ab3@29493> RTS
00038206 <AmiBlitz3.ab3@29497>   !basic
00038234 <AmiBlitz3.ab3@29498>   !ComData_LEA{comStr_CurrentDir,D0}
00038238 <AmiBlitz3.ab3@29499>   currentDirP.l = PutD0
00038266 <AmiBlitz3.ab3@29501>   !ComData_LEA{comStr_SourceName,D0}
0003826A <AmiBlitz3.ab3@29502>   fileNameP.l = PutD0
00038292 <AmiBlitz3.ab3@29504>   check_dirname$  = Peek$(currentDirP)
000382BA <AmiBlitz3.ab3@29505>   check_filename$ = Peek$(fileNameP)
00038340 <AmiBlitz3.ab3@29506>   If (olddirname$<>check_dirname$) OR (oldfilename$<>check_filename$)
00038346 <AmiBlitz3.ab3@29507>     JSR free_unusedfunctions
00038390 <AmiBlitz3.ab3@29509>   olddirname$ = Peek$(check_dirname$)
000383DA <AmiBlitz3.ab3@29510>   oldfilename$ = Peek$(check_filename$)
00038404 <AmiBlitz3.ab3@29511>   For i = 0 To #maxincludes-1
00038418 <AmiBlitz3.ab3@29512>     incline(i) = 0
00038428 <AmiBlitz3.ab3@29513>   Next
00038446 <AmiBlitz3.ab3@29514>   !asm
00038448 <AmiBlitz3.ab3@29515> RTS
0003844A <AmiBlitz3.ab3@29519>   MOVEQ #0,d1
0003844C <AmiBlitz3.ab3@29522>   MOVE.b (a5)+,d0
00038450 <AmiBlitz3.ab3@29523>   BEQ 'er1
00038454 <AmiBlitz3.ab3@29524>   CMP.b #$20,d0
00038458 <AmiBlitz3.ab3@29525>   BEQ 'l1
0003845A <AmiBlitz3.ab3@29526>   ADDQ #1,d1
0003845E <AmiBlitz3.ab3@29527>   CMP.b #$22,d0
00038462 <AmiBlitz3.ab3@29528>   BNE 'l1
00038464 <AmiBlitz3.ab3@29529>  RTS
0003846A <AmiBlitz3.ab3@29532> JMP syntaxerr
0003848E <AmiBlitz3.ab3@29536> erro1t   Dc.b "Only one BSS / Chip Segment allowed",0 : Even
000384AC <AmiBlitz3.ab3@29537> nodata   Dc.b "BSS Segment contains Data!!!!",0       : Even
000384B2 <AmiBlitz3.ab3@29542>   TST.b exdebug
000384B6 <AmiBlitz3.ab3@29543>   BNE 'l10
000384BC <AmiBlitz3.ab3@29544>   MOVE.l #$4e71,d1
000384C2 <AmiBlitz3.ab3@29545>   JSR writeword
000384C8 <AmiBlitz3.ab3@29546>   MOVE.l destpointer,d0
000384CA <AmiBlitz3.ab3@29547>   MOVE.l d0,d1
000384CC <AmiBlitz3.ab3@29548>   ADDQ.l #3,d1
000384D2 <AmiBlitz3.ab3@29549>   AND.l #$fffffffc,d1
000384D8 <AmiBlitz3.ab3@29550>   MOVE.l d1,destpointer
000384DE <AmiBlitz3.ab3@29551>   SUB.l destpointer,d0
000384E2 <AmiBlitz3.ab3@29552>   BEQ 'lnf1
000384EC <AmiBlitz3.ab3@29553>   CMP.l #-1,bssstart
000384F0 <AmiBlitz3.ab3@29554>   BNE 'lnf1
000384FA <AmiBlitz3.ab3@29555>   CMP.l #-1,chipstart
000384FE <AmiBlitz3.ab3@29556>   BNE 'lnf1
00038504 <AmiBlitz3.ab3@29557>   MOVE.l destpointer,a4
0003850A <AmiBlitz3.ab3@29558>   TST.w dontwrite_nomemleft
0003850E <AmiBlitz3.ab3@29559>   BNE 'lnf1
00038514 <AmiBlitz3.ab3@29560>   MOVE.w #$4e71,-2(a4)
0003851E <AmiBlitz3.ab3@29563>   CMP.l #-1,bssstart
00038522 <AmiBlitz3.ab3@29564>   BEQ 'l11
00038528 <AmiBlitz3.ab3@29565>   MOVE.l #erro1t,-(a7)
0003852E <AmiBlitz3.ab3@29566>  JMP handle_compileerror
00038538 <AmiBlitz3.ab3@29569>   MOVE.l destpointer,bssstart
00038540 <AmiBlitz3.ab3@29570>   MOVE.b #1,bssmode
00038546 <AmiBlitz3.ab3@29573>   TST.b chipmode
0003854A <AmiBlitz3.ab3@29574>   BEQ 'l10
00038554 <AmiBlitz3.ab3@29575>   MOVE.l destpointer,chipend
0003855A <AmiBlitz3.ab3@29576>   CLR.b chipmode
00038560 <AmiBlitz3.ab3@29579>   JSR get1bytemain
00038562 <AmiBlitz3.ab3@29580> RTS
00038568 <AmiBlitz3.ab3@29584>    TST.b exdebug
0003856C <AmiBlitz3.ab3@29585>   BNE 'x1
00038572 <AmiBlitz3.ab3@29586>   MOVE.l destpointer,d0
00038578 <AmiBlitz3.ab3@29587>   MOVE.l d0,realbssend
0003857E <AmiBlitz3.ab3@29588>   MOVE.l #$4e71,d1
00038584 <AmiBlitz3.ab3@29589>   JSR writeword
0003858A <AmiBlitz3.ab3@29590>   MOVE.l destpointer,d0
0003858C <AmiBlitz3.ab3@29591>   MOVE.l d0,d1
0003858E <AmiBlitz3.ab3@29592>   ADDQ.l #3,d1
00038594 <AmiBlitz3.ab3@29593>   AND.l #$fffffffc,d1
0003859A <AmiBlitz3.ab3@29594>   MOVE.l d1,destpointer
000385A0 <AmiBlitz3.ab3@29595>   SUB.l destpointer,d0
000385A4 <AmiBlitz3.ab3@29596>   BEQ 'lnf1
000385AA <AmiBlitz3.ab3@29597>   MOVE.l destpointer,a4
000385B4 <AmiBlitz3.ab3@29598>   CMP.l #-1,bssstart
000385B8 <AmiBlitz3.ab3@29599>   BNE 'lnf1
000385C2 <AmiBlitz3.ab3@29600>   CMP.l #-1,chipstart
000385C6 <AmiBlitz3.ab3@29601>   BNE 'lnf1
000385CC <AmiBlitz3.ab3@29602>   TST.w dontwrite_nomemleft
000385D0 <AmiBlitz3.ab3@29603>   BNE 'lnf1
000385D6 <AmiBlitz3.ab3@29604>   MOVE.w #$4e71,-2(a4)
000385DC <AmiBlitz3.ab3@29607>   TST.b bssmode
000385E0 <AmiBlitz3.ab3@29608>   BEQ 'l10
000385EA <AmiBlitz3.ab3@29609>   MOVE.l destpointer,bssend
000385F0 <AmiBlitz3.ab3@29610>   CLR.b bssmode
000385FA <AmiBlitz3.ab3@29615>   CMP.l #-1,chipstart
000385FE <AmiBlitz3.ab3@29616>   BEQ 'l11
00038604 <AmiBlitz3.ab3@29617>   MOVE.l #erro1t,-(a7)
0003860A <AmiBlitz3.ab3@29618>  JMP handle_compileerror
00038614 <AmiBlitz3.ab3@29621>   MOVE.l destpointer,chipstart
0003861C <AmiBlitz3.ab3@29622>   MOVE.b #1,chipmode
00038622 <AmiBlitz3.ab3@29625>   JSR get1bytemain
00038624 <AmiBlitz3.ab3@29626> RTS
0003864E <AmiBlitz3.ab3@29630>   !basic
00038660 <AmiBlitz3.ab3@29640>   i.l = Peek.w(?ininclude)
00038686 <AmiBlitz3.ab3@29641>   If i>=0 AND i<#maxincludes
000386B8 <AmiBlitz3.ab3@29642>     incdim (i) = Peek.s(?includetemp2)
000386D2 <AmiBlitz3.ab3@29643>     incline(i) = Peek.l(?includeline)
000386DC <AmiBlitz3.ab3@29645>     If CLIMode
0003878A <AmiBlitz3.ab3@29646>       If cli_verbose>=2 Then NPrint "Include \\22",incdim(i),"\\22..."
000387A8 <AmiBlitz3.ab3@29650>   !asm
000387AA <AmiBlitz3.ab3@29651> RTS
000387D4 <AmiBlitz3.ab3@29655>   !basic
000387E6 <AmiBlitz3.ab3@29656>   i.l = Peek.w(?ininclude)
0003880C <AmiBlitz3.ab3@29657>   If i>=0 AND i<#maxincludes
0003883C <AmiBlitz3.ab3@29658>     incdim (i) = ""
00038850 <AmiBlitz3.ab3@29659>     incline(i) = 0
00038888 <AmiBlitz3.ab3@29660>     If i>0 Then Poke.l (?includeline),incline(i-1)+1
000388A6 <AmiBlitz3.ab3@29662>   !asm
000388A8 <AmiBlitz3.ab3@29663> RTS
000388AE <AmiBlitz3.ab3@29667>   LEA replacedat,a0
000388B2 <AmiBlitz3.ab3@29668>   Dc.w $3181,$0A00                                         ;MOVE.w d1,0(a0,d0.l*2)
000388B4 <AmiBlitz3.ab3@29669> RTS
000388BA <AmiBlitz3.ab3@29673>   TST.b fpu
000388BE <AmiBlitz3.ab3@29674>   BEQ 'l1
000388C8 <AmiBlitz3.ab3@29677>   MOVE.l destpointer,newinitaddr
000388CE <AmiBlitz3.ab3@29678>   JSR writeword
000388D4 <AmiBlitz3.ab3@29679>   JSR writelong
000388D6 <AmiBlitz3.ab3@29680> RTS
000388D8 <AmiBlitz3.ab3@29685>   TST.b (a5)
000388DC <AmiBlitz3.ab3@29686>    BEQ.s 'll20
000388E0 <AmiBlitz3.ab3@29687>   CMP.b #$20,(a5)
000388E4 <AmiBlitz3.ab3@29688>    BNE.s 'll10
000388E6 <AmiBlitz3.ab3@29689>   ADDQ.l #1,a5
000388EA <AmiBlitz3.ab3@29690>  BRA.s 'll21
000388EE <AmiBlitz3.ab3@29693>   CMP.b #";",(a5)
000388F2 <AmiBlitz3.ab3@29694>   BNE.s 'll20
000388F4 <AmiBlitz3.ab3@29697>   TST.b (a5)+
000388F8 <AmiBlitz3.ab3@29698>   BEQ.s 'll23
000388FC <AmiBlitz3.ab3@29699>  BRA.s 'll25
000388FE <AmiBlitz3.ab3@29702>   SUBQ.l #1,a5
00038900 <AmiBlitz3.ab3@29705> RTS
00038904 <AmiBlitz3.ab3@29709>   MOVEM.l a2/d2,-(a7)
00038906 <AmiBlitz3.ab3@29710>   MOVEQ #0,d2
0003890C <AmiBlitz3.ab3@29711>   LEA ptr_parameterstore,a0
00038912 <AmiBlitz3.ab3@29712>   LEA chartab,a2
00038914 <AmiBlitz3.ab3@29715>   MOVE.b (a5),d0
00038918 <AmiBlitz3.ab3@29716>   TST.b 0(a2,d0)
0003891C <AmiBlitz3.ab3@29717>   BNE 'l10
0003891E <AmiBlitz3.ab3@29718>   ADDQ.l #1,a5
00038920 <AmiBlitz3.ab3@29719>   MOVE.b d0,(a0)+
00038922 <AmiBlitz3.ab3@29720>   ADDQ.l #1,d2
00038926 <AmiBlitz3.ab3@29721>  BRA fc2
00038928 <AmiBlitz3.ab3@29724>   CLR.b (a0)+
0003892E <AmiBlitz3.ab3@29725>   JSR findlabel2
00038930 <AmiBlitz3.ab3@29726>   MOVE.l a2,a0
00038934 <AmiBlitz3.ab3@29727>   MOVEM.l (a7)+,a2/d2
00038936 <AmiBlitz3.ab3@29728> RTS
00038938 <AmiBlitz3.ab3@29732>   TST.l d0
0003893C <AmiBlitz3.ab3@29733>   BNE 'l10
00038942 <AmiBlitz3.ab3@29734>     MOVE.l #syntax_,-(a7)
00038948 <AmiBlitz3.ab3@29735>  JMP handle_compileerror
0003894E <AmiBlitz3.ab3@29738>   CMP.l #1,d0
00038952 <AmiBlitz3.ab3@29739>   BNE 'l20
00038958 <AmiBlitz3.ab3@29740>     MOVE.l #overflow,-(a7)
0003895E <AmiBlitz3.ab3@29741>  JMP handle_compileerror
00038960 <AmiBlitz3.ab3@29744>   ADD.l a2,d0
00038962 <AmiBlitz3.ab3@29745>   MOVE.l d0,-(a7)
00038968 <AmiBlitz3.ab3@29746> JMP handle_compileerror
0003896E <AmiBlitz3.ab3@29750>   JMP _return
00038974 <AmiBlitz3.ab3@29751>   JMP _return
0003897A <AmiBlitz3.ab3@29752>   JMP _return
00038980 <AmiBlitz3.ab3@29753>   JMP _return
00038986 <AmiBlitz3.ab3@29754>   JMP _return
0003898C <AmiBlitz3.ab3@29755>   JMP _return
00038992 <AmiBlitz3.ab3@29756>   JMP _return
00038998 <AmiBlitz3.ab3@29757>   JMP _return
0003899E <AmiBlitz3.ab3@29758>   JMP _return
000389A4 <AmiBlitz3.ab3@29759>   JMP _return
000389AA <AmiBlitz3.ab3@29760>   JMP Atokejsr
000389B0 <AmiBlitz3.ab3@29761>   JMP writeinit
000389B6 <AmiBlitz3.ab3@29762>   JMP macroexecute
000389BC <AmiBlitz3.ab3@29763>   JMP findnext
000389C2 <AmiBlitz3.ab3@29764>   JMP replacelib
000389C8 <AmiBlitz3.ab3@29765>   JMP findconstant2
000389CE <AmiBlitz3.ab3@29766>   JMP findchar                                             ;char in d1
000389D4 <AmiBlitz3.ab3@29767>   JMP stripspaces
000389DA <AmiBlitz3.ab3@29768>   JMP calc                                                 ;d0 varmode
000389E0 <AmiBlitz3.ab3@29769>   JMP error
000389E6 <AmiBlitz3.ab3@29770>   JMP writelong                                            ;d1 value
000389EC <AmiBlitz3.ab3@29771>   JMP writeword                                            ;d1 value
000389F2 <AmiBlitz3.ab3@29772>   JMP writebyte                                            ;d1 value
000389F8 <AmiBlitz3.ab3@29773> JMP exit
000389FC <AmiBlitz3.ab3@29777>   destpointer:    Ds.l 1                                ;pc org source      ;Ds.w 1
000389FE <AmiBlitz3.ab3@29780>   fast            Dc.w 0
00038A00 <AmiBlitz3.ab3@29781>   fpu             Dc.w 0
00038A02 <AmiBlitz3.ab3@29782>   newsyntax       Dc.w 0
00038A03 <AmiBlitz3.ab3@29784>   optistring      Dc.b 0
00038A04 <AmiBlitz3.ab3@29785>   optistring2     Dc.b 0
00038A05 <AmiBlitz3.ab3@29786>   optiarray       Dc.b 0
00038A06 <AmiBlitz3.ab3@29787>   quickadd        Dc.b 0
00038A08 <AmiBlitz3.ab3@29788>   newmode         Dc.w 0
00038A0A <AmiBlitz3.ab3@29789>   mode            Dc.w 0
00038A0C <AmiBlitz3.ab3@29790>   string1         Dc.w 0
00038A0E <AmiBlitz3.ab3@29791>   load_var_size   Dc.w 0
00038A10 <AmiBlitz3.ab3@29792>   load_var_reg    Dc.w 0
00038A14 <AmiBlitz3.ab3@29793>   load_var_addr   Dc.l 0
00038A16 <AmiBlitz3.ab3@29794>   imm_size        Dc.w 0
00038A18 <AmiBlitz3.ab3@29795>   imm_reg         Dc.w 0
00038A1C <AmiBlitz3.ab3@29796>   imm_addr        Dc.l 0
00038A1D <AmiBlitz3.ab3@29797>   iee             Dc.b 0
00038A1E <AmiBlitz3.ab3@29798>   _dcb            Dc.b 0
00038A22 <AmiBlitz3.ab3@29799>   nohunkoffset    Dc.l 0
00038A26 <AmiBlitz3.ab3@29802> teddata:        Dc.l tokens
00038A2A <AmiBlitz3.ab3@29803>                 Dc.l 0 ;compilermenu_entries               ; NOT used anymore
00038A2E <AmiBlitz3.ab3@29804>                 Dc.l read_xtrafile
00038A32 <AmiBlitz3.ab3@29805>                 Dc.l write_xtrafile
00038A36 <AmiBlitz3.ab3@29806>                 Dc.l call_menuentry                        ; compile AND RUN ?
00038A3A <AmiBlitz3.ab3@29807>                 Dc.l 0
00038A3E <AmiBlitz3.ab3@29808>                 Dc.b ":",34,".;"
00038A42 <AmiBlitz3.ab3@29809>                 Dc.l "NEW1"
00038A46 <AmiBlitz3.ab3@29810>                 Dc.l newtypebase
00038A4A <AmiBlitz3.ab3@29811> realconstbase:  Dc.l labelbase
00038A4E <AmiBlitz3.ab3@29812> deflib          Dc.l 0
00038A52 <AmiBlitz3.ab3@29813> incd            Dc.l 0
00038A56 <AmiBlitz3.ab3@29814>                 Dc.l 0
00038A5A <AmiBlitz3.ab3@29815>                 Dc.l 0
00038A5E <AmiBlitz3.ab3@29816>                 Dc.l 0
00038A60 <AmiBlitz3.ab3@29817> _return         RTS
00038A61 <AmiBlitz3.ab3@29818>                 Dc.b 0
00038E61 <AmiBlitz3.ab3@29819> chartab2        Ds.l 256
00038E65 <AmiBlitz3.ab3@29820> codeend         Dc.l 0
00038E69 <AmiBlitz3.ab3@29821> hunkoffsetnum   Dc.l 0
00038E6D <AmiBlitz3.ab3@29822> chipsize        Dc.l 0
00038E71 <AmiBlitz3.ab3@29823> bsssize         Dc.l 0
00038E75 <AmiBlitz3.ab3@29824> bssstart        Dc.l -1
00038E79 <AmiBlitz3.ab3@29825> bssend          Dc.l -1
00038E7D <AmiBlitz3.ab3@29826> chipstart       Dc.l -1
00038E81 <AmiBlitz3.ab3@29827> chipend         Dc.l -1
00038E82 <AmiBlitz3.ab3@29828> bssmode         Dc.b 0
00038E83 <AmiBlitz3.ab3@29829> chipmode        Dc.b 0
00038E84 <AmiBlitz3.ab3@29830> newhunk         Dc.b 0
00038E88 <AmiBlitz3.ab3@29831> bssnum          Dc.l 0
00038E8C <AmiBlitz3.ab3@29832> chipnum         Dc.l 0
00038E90 <AmiBlitz3.ab3@29833> lastinstruction Dc.l 0
00038E94 <AmiBlitz3.ab3@29834> lastinstructionaddr Dc.l 0
00038EA8 <AmiBlitz3.ab3@29835> hunkbegin       Dc.l $03F3,$00,$02,$00,$01
00038EAC <AmiBlitz3.ab3@29836> tstsize1b:      Ds.l 1
00038EB0 <AmiBlitz3.ab3@29837> bsssize2        Dc.l 1
00038EB4 <AmiBlitz3.ab3@29838>                 Dc.l $03E9
00038EB8 <AmiBlitz3.ab3@29839> tstsize2b:      Dc.l $100
00038ECC <AmiBlitz3.ab3@29840> hunkbegin2      Dc.l $03F3,$00,$03,$00,$02
00038ED0 <AmiBlitz3.ab3@29841> tstsize1c:      Ds.l 1
00038ED4 <AmiBlitz3.ab3@29842> bsssize3        Dc.l 1
00038ED8 <AmiBlitz3.ab3@29843> chipsize2       Dc.l 1
00038EDC <AmiBlitz3.ab3@29844>                 Dc.l $3e9
00038EE0 <AmiBlitz3.ab3@29845> tstsize2c       Dc.l 0
00038EF0 <AmiBlitz3.ab3@29846> hunkend         Dc.l $3f2,$3eb,0,$3f2
00038F00 <AmiBlitz3.ab3@29847> hunkend2        Dc.l $3f2,$3ea,0,$3f2
00038F07 <AmiBlitz3.ab3@29848> strcpy          Dc.b "strcpy",0
00038F0E <AmiBlitz3.ab3@29849> strcmp          Dc.b "strcmp",0
00038F15 <AmiBlitz3.ab3@29850> strvar          Dc.b "strvar",0
00038F1A <AmiBlitz3.ab3@29851> qmul            Dc.b "qmul",0
00038F1F <AmiBlitz3.ab3@29852> qdiv            Dc.b "qdiv",0
00038F26 <AmiBlitz3.ab3@29853> _MaxLen         Dc.b "maxlen",0
00038F2B <AmiBlitz3.ab3@29854> notf            Dc.b "????",0
00038F4E <AmiBlitz3.ab3@29856> errtext         Dc.b "only reg addressing Mode supported",0
00038F78 <AmiBlitz3.ab3@29857> fpuerr          Dc.b "Instruction not yet supported by 68K FPU ",0
00038FBA <AmiBlitz3.ab3@29858> cmplxerr        Dc.b "Formula too complex for 68K FPU or too much regload register used",0 : Even
00038FBC <AmiBlitz3.ab3@29859> peeksize        Dc.w 0
00038FC0 <AmiBlitz3.ab3@29861> mainstart       Dc.l 0
00038FC1 <AmiBlitz3.ab3@29863> infunctioncode  Dc.b 0
00038FC3 <AmiBlitz3.ab3@29864> regnumstore     Dc.w 0
00038FF0 <AmiBlitz3.ab3@29865>                 Dc.b "$VER: AmiBlitz3 \\__VER_MAJOR.\\__VER_MINOR (\\__DATE_GER__) Build \\__VER_PATCH.\\__VER_BUILD",0 : Even
00038FF8 <AmiBlitz3.ab3@29866> testcode        Dc.b "print i",0
0003905C <AmiBlitz3.ab3@29867>                 Ds.b 100
0003906A <AmiBlitz3.ab3@29868> devo            Dc.b "developobject",0 : Even
0003907C <AmiBlitz3.ab3@29869> autostorename   Dc.b "__autoconstantnum",0
00039086 <AmiBlitz3.ab3@29870> _include        Dc.b "__include",0
0003908E <AmiBlitz3.ab3@29871> _debug          Dc.b "__debug",0
00039092 <AmiBlitz3.ab3@29872> unusedfunc      Dc.l 0
00039094 <AmiBlitz3.ab3@29876>   MOVE.l a0,d0
000390BE <AmiBlitz3.ab3@29877>   !basic
000390C2 <AmiBlitz3.ab3@29878>   *olderror.l= PutD0
0003911C <AmiBlitz3.ab3@29879> 
00039150 <AmiBlitz3.ab3@29880>   error_type$ = error$
000391EC <AmiBlitz3.ab3@29881> 
00039200 <AmiBlitz3.ab3@29882>   If Peek.l (?beforeparameterfetch)
00039216 <AmiBlitz3.ab3@29883>     MaxLen detokenline.s = 65536
00039258 <AmiBlitz3.ab3@29884>    !ComData_GetL{comPtr_PreProcessor,include_preprocessor}
00039268 <AmiBlitz3.ab3@29885>    *tn.preprocessor = Peek.l(?include_preprocessor)
00039292 <AmiBlitz3.ab3@29886>     written.l = preproc_DetokenizeLine{*tn,Peek.l (?beforeparameterfetch),&detokenline}
000392BA <AmiBlitz3.ab3@29887>     If written>0 Then Poke.b &detokenline+written,0
000392FE <AmiBlitz3.ab3@29888>     If written>40 Then Poke.s &detokenline+36,"..."   ; added to limit the wide of the error requester  tomsmart1
00039328 <AmiBlitz3.ab3@29889>     sourceLineText.s = Peek.s(&detokenline)
0003932E <AmiBlitz3.ab3@29890>   Else
00039356 <AmiBlitz3.ab3@29891>     sourceLineText = "NULL"
0003938A <AmiBlitz3.ab3@29893>   error_source$ = sourceLineText
000393DC <AmiBlitz3.ab3@29894>   error$ + sourceLineText
000393E2 <AmiBlitz3.ab3@29895>   GetD0 &error$
00039400 <AmiBlitz3.ab3@29896>   !asm
00039402 <AmiBlitz3.ab3@29897>   MOVE.l d0,a0
00039404 <AmiBlitz3.ab3@29898> RTS
00039406 <AmiBlitz3.ab3@29902>   MOVE.l a0,-(a7)
00039408 <AmiBlitz3.ab3@29903>   MOVE.l a0,d0
0003940A <AmiBlitz3.ab3@29904>   MOVE.l a5,a0                                             ;macro title
00039434 <AmiBlitz3.ab3@29905>   !basic
00039438 <AmiBlitz3.ab3@29906>   i = PutD0
0003943A <AmiBlitz3.ab3@29907>   MOVEQ #20,d0
0003943C <AmiBlitz3.ab3@29910>     MOVE.b -(a0),d1
00039440 <AmiBlitz3.ab3@29911>     BEQ 'l1
00039444 <AmiBlitz3.ab3@29912>     CMP.b #":",d1
00039448 <AmiBlitz3.ab3@29913>     BEQ 'l1
0003944A <AmiBlitz3.ab3@29914>     SUBQ.l #1,d0
0003944E <AmiBlitz3.ab3@29915>     BNE 'l2
00039450 <AmiBlitz3.ab3@29918>   ADDQ #1,a0
00039452 <AmiBlitz3.ab3@29919>   MOVE.l a0,d0
00039456 <AmiBlitz3.ab3@29920>   i2.l = PutD0
00039472 <AmiBlitz3.ab3@29921>   If Peek.w (?ininclude)>0
000394CC <AmiBlitz3.ab3@29922>     Poke.s (?includetemp2),incdim(Peek.w(?ininclude)-1)
000394DC <AmiBlitz3.ab3@29923>     errorline.l = Peek.l(?includeline);-1
00039504 <AmiBlitz3.ab3@29924>     Poke.l ?compilelinecounter,Peek.l(?includeline) - 1
0003952E <AmiBlitz3.ab3@29925>     errorfile.s = Peek.s(?includetemp2)
00039534 <AmiBlitz3.ab3@29926>   Else
0003956C <AmiBlitz3.ab3@29927>     Poke.s (?includetemp2),Peek.s(?ptr_parameterstore)
00039582 <AmiBlitz3.ab3@29928>     errorline.l = Peek.l(?compilelinecounter) + 1
000395B6 <AmiBlitz3.ab3@29929>     errorfile.s = cli_sourcefile
000395C0 <AmiBlitz3.ab3@29932>   If i
00039664 <AmiBlitz3.ab3@29933>     errortext.s = !TRANS{Replace$(Peek.s(i),"\\0a","\n")}
000396E2 <AmiBlitz3.ab3@29934>     errortext.s = Replace$(errortext,"\n","\\0a")
000396E8 <AmiBlitz3.ab3@29935>   Else
00039710 <AmiBlitz3.ab3@29936>     errortext.s = "???"
00039888 <AmiBlitz3.ab3@29939>   NPrint "\\1b[1m",!TRANS{"Compiler Error"}," #",Peek.l(?errorcounter)," <",errorfile,"@",errorline,">\\1b[0m "
00039950 <AmiBlitz3.ab3@29940>   NPrint "  ",error_type$,"\\n  ",error_source$
0003996E <AmiBlitz3.ab3@29944>   !asm
00039970 <AmiBlitz3.ab3@29945>   MOVE.l (a7)+,a0
00039972 <AmiBlitz3.ab3@29946> RTS
00039974 <AmiBlitz3.ab3@29950>   MOVE.l a0,-(a7)
00039976 <AmiBlitz3.ab3@29951>   MOVE.l a0,d0
00039978 <AmiBlitz3.ab3@29952>   MOVE.l a5,a0                                             ;macro title
000399A2 <AmiBlitz3.ab3@29953>   !basic
000399A6 <AmiBlitz3.ab3@29954>   i = PutD0
000399A8 <AmiBlitz3.ab3@29955>   MOVEQ #20,d0
000399AA <AmiBlitz3.ab3@29958>     MOVE.b -(a0),d1
000399AE <AmiBlitz3.ab3@29959>     BEQ 'l1
000399B2 <AmiBlitz3.ab3@29960>     CMP.b #":",d1
000399B6 <AmiBlitz3.ab3@29961>     BEQ 'l1
000399B8 <AmiBlitz3.ab3@29962>     SUBQ.l #1,d0
000399BC <AmiBlitz3.ab3@29963>     BNE 'l2
000399BE <AmiBlitz3.ab3@29966>   ADDQ #1,a0
000399C0 <AmiBlitz3.ab3@29967>   MOVE.l a0,d0
000399C4 <AmiBlitz3.ab3@29968>   i2.l = PutD0
00039A48 <AmiBlitz3.ab3@29969>   fid.l = file_Open{dos_AddPart{my_systemdir$,"ab_compileerror.txt"},#file_forcewrite}
00039A5C <AmiBlitz3.ab3@29970>   If fid <> -1
00039A78 <AmiBlitz3.ab3@29971>     If Peek.w (?ininclude)>0
00039AD2 <AmiBlitz3.ab3@29972>       Poke$(?includetemp2),incdim(Peek.w(?ininclude)-1)
00039AD8 <AmiBlitz3.ab3@29973>     Else
00039B04 <AmiBlitz3.ab3@29974>       Poke$(?includetemp2),""
00039B2E <AmiBlitz3.ab3@29976>     a$ = Peek$(?includetemp2)
00039BA0 <AmiBlitz3.ab3@29977>     x$ = Replace$(Peek$(i),"\\0a","\n")
00039BD2 <AmiBlitz3.ab3@29978>     file_WriteLine{fid,x$}
00039C1C <AmiBlitz3.ab3@29979>     file_WriteLine{fid,Str$(Peek.l(?compilelinecounter) + 1)}
00039C48 <AmiBlitz3.ab3@29980>     If a$
00039C7A <AmiBlitz3.ab3@29981>       file_WriteLine{fid,a$}
00039CC4 <AmiBlitz3.ab3@29982>       file_WriteLine{fid,Str$(Peek.l(?includeline)-1)}
00039CEC <AmiBlitz3.ab3@29983>       Poke.l ?compilelinecounter,Peek.l(?includeline) - 1
00039CF2 <AmiBlitz3.ab3@29984>     Else
00039D18 <AmiBlitz3.ab3@29985>       file_WriteLine{fid,"none"}
00039D48 <AmiBlitz3.ab3@29987>     file_WriteLine{fid,Peek$(i2)}
00039D9E <AmiBlitz3.ab3@29988>     file_WriteLine{fid,Str$(Peek.l(?globallinecount))+" line(s) compiled"}
00039DE8 <AmiBlitz3.ab3@29989>     file_WriteLine{fid,Hex$(Peek.w(?globalvarpointer))+" global var base"}
00039DF2 <AmiBlitz3.ab3@29990>     file_Close{fid}
00039E10 <AmiBlitz3.ab3@29992>   !asm
00039E12 <AmiBlitz3.ab3@29993>   MOVE.l (a7)+,a0
00039E14 <AmiBlitz3.ab3@29994> RTS
00039E3E <AmiBlitz3.ab3@29998>   !basic
00039E42 <AmiBlitz3.ab3@29999>   progress.l     = PutD0
00039E54 <AmiBlitz3.ab3@30000>   total.l        = Peek.w(?progressbar_width)
00039E72 <AmiBlitz3.ab3@30001>   calcpro        = (progress * 100) / total +1
00039E84 <AmiBlitz3.ab3@30002>   pass.l         = Peek.w(?pass)
00039E96 <AmiBlitz3.ab3@30003>   typ.l          = Peek.w(?compiler_job)
00039EB4 <AmiBlitz3.ab3@30006> If (pass><pass_old OR typ><typ_old)
00039EC2 <AmiBlitz3.ab3@30008>     If pass_old><pass
00039F5E <AmiBlitz3.ab3@30009>       passtatusstr.s = !TRANS{"Pass"}+" "+Str$(pass)+"..."
00039FB4 <AmiBlitz3.ab3@30010>       If cli_verbose>=2 Then NPrint passtatusstr
00039FBA <AmiBlitz3.ab3@30013>     pass_old = pass
00039FC0 <AmiBlitz3.ab3@30014>     typ_old  = typ
00039FC6 <AmiBlitz3.ab3@30015>     update_comstatus_gui = True
00039FD8 <AmiBlitz3.ab3@30016>     If typ=0
0003A0B8 <AmiBlitz3.ab3@30017>       comstatusstr = !TRANS{"Pass"}+" "+Str$(pass)+": "+!TRANS{"Compiling Sources..."}
0003A0C0 <AmiBlitz3.ab3@30018>       calcpro = 0  ; set gauge to 0
0003A0D2 <AmiBlitz3.ab3@30020>     If typ=1
0003A1B2 <AmiBlitz3.ab3@30021>       comstatusstr = !TRANS{"Pass"}+" "+Str$(pass)+": "+!TRANS{"Building Executable..."}
0003A1BA <AmiBlitz3.ab3@30022>       calcpro = 0  ; set gauge to 0
0003A210 <AmiBlitz3.ab3@30025>     If cli_verbose>=3 Then NPrint comstatusstr
0003A21E <AmiBlitz3.ab3@30028>   If (calcpro >< calcpro_old)
0003A272 <AmiBlitz3.ab3@30029>     If cli_verbose>=4 Then NPrint calcpro,"% compiled..."
0003A278 <AmiBlitz3.ab3@30030>     calcpro_old = calcpro
0003A27E <AmiBlitz3.ab3@30031>     update_comstatus_gui = True
0003A298 <AmiBlitz3.ab3@30034>   If update_comstatus_gui = True                                     ; check if a update of the gui nessecary
0003A2B6 <AmiBlitz3.ab3@30035>     !asm
0003A2E8 <AmiBlitz3.ab3@30036> 
0003A312 <AmiBlitz3.ab3@30037>     !basic
0003A318 <AmiBlitz3.ab3@30038>     update_comstatus_gui  = False ; because we update the gui
0003A336 <AmiBlitz3.ab3@30040>   !asm
0003A338 <AmiBlitz3.ab3@30041> RTS
0003A33E <AmiBlitz3.ab3@30046>   MOVE.w maxobject_pos,D5                                  ;max objects 1. visible
0003A344 <AmiBlitz3.ab3@30047>   LEA maxobjects_value,A3                                  ;current value
0003A34A <AmiBlitz3.ab3@30048>   MOVEA.l libpointer,A2
0003A34E <AmiBlitz3.ab3@30051>   CMPA.w #$0,A2
0003A352 <AmiBlitz3.ab3@30052>   BEQ.w 'igot
0003A354 <AmiBlitz3.ab3@30053>   MOVEA.l A2,A1
0003A358 <AmiBlitz3.ab3@30054>   ADDA.l $12(A1),A1
0003A35C <AmiBlitz3.ab3@30055>   TST.w -$2(A1)
0003A360 <AmiBlitz3.ab3@30056>   BEQ.w 'ugwl2
0003A362 <AmiBlitz3.ab3@30057>   SUBQ.w #1,D5
0003A366 <AmiBlitz3.ab3@30058>   BMI.w 'ugw2
0003A368 <AmiBlitz3.ab3@30061>   MOVEA.l (A2),A2
0003A36C <AmiBlitz3.ab3@30062>  BRA.w 'ugwl
0003A370 <AmiBlitz3.ab3@30065>   MOVE.w (A3),-$4(A1)
0003A372 <AmiBlitz3.ab3@30068> RTS
0003A378 <AmiBlitz3.ab3@30072>   MOVE.w debugnest,d0
0003A37E <AmiBlitz3.ab3@30073>   LEA storedebugmode, a0
0003A386 <AmiBlitz3.ab3@30074>   MOVE.b 0(a0,d0.w),debugmode
0003A38C <AmiBlitz3.ab3@30075>   TST.w debugnest
0003A390 <AmiBlitz3.ab3@30076>   BEQ JUMP_unpairrunerrs
0003A396 <AmiBlitz3.ab3@30077>   SUBQ.w #1,debugnest
0003A398 <AmiBlitz3.ab3@30078> RTS
0003A39E <AmiBlitz3.ab3@30080> JUMP_runerrsoverflow JMP runerrsoverflow
0003A3A4 <AmiBlitz3.ab3@30081> JUMP_unpairrunerrs   JMP unpairrunerrs
0003A3AC <AmiBlitz3.ab3@30085>   BCHG #$7,use_debugger
0003A3B4 <AmiBlitz3.ab3@30087>   BTST #$7,use_debugger
0003A3B8 <AmiBlitz3.ab3@30088>   BNE 'debugon
0003A3BE <AmiBlitz3.ab3@30089>   CLR.w debugmode
0003A3C2 <AmiBlitz3.ab3@30090>  BRA.b 'debugoff
0003A3C8 <AmiBlitz3.ab3@30093>   SNE debugmode
0003A3CA <AmiBlitz3.ab3@30096>   MOVE.l a0,-(a7)
0003A402 <AmiBlitz3.ab3@30099>   !ComData_SetB{comByte_DebugMode,debugmode}
0003A404 <AmiBlitz3.ab3@30104>   MOVE.l (a7)+,a0
0003A406 <AmiBlitz3.ab3@30105> RTS
0003A40E <AmiBlitz3.ab3@30110>   BTST #$7,use_debugger
0003A412 <AmiBlitz3.ab3@30112>   BNE 'debugon
0003A418 <AmiBlitz3.ab3@30113>   CLR.w debugmode
0003A41C <AmiBlitz3.ab3@30114>  BRA.b 'debugoff
0003A422 <AmiBlitz3.ab3@30118>   SNE debugmode
0003A424 <AmiBlitz3.ab3@30121> RTS
0003A42A <AmiBlitz3.ab3@30126>   ADDQ.w #1,debugnest
0003A430 <AmiBlitz3.ab3@30127>   MOVE.w debugnest,d0
0003A434 <AmiBlitz3.ab3@30128>   CMP.w #18,d0
0003A438 <AmiBlitz3.ab3@30129>    BGE JUMP_runerrsoverflow
0003A43E <AmiBlitz3.ab3@30130>   LEA storedebugmode, a0
0003A446 <AmiBlitz3.ab3@30131>   MOVE.b debugmode,0( a0,d0.w)
0003A44C <AmiBlitz3.ab3@30135>   SF debugmode
0003A44E <AmiBlitz3.ab3@30136> RTS
0003A4CE <AmiBlitz3.ab3@30139> usedpath:  Ds.l 32
0003A4D2 <AmiBlitz3.ab3@30143>   BEQ.w JUMP_syntaxerr
0003A4D8 <AmiBlitz3.ab3@30144>   LEA lastpath,A0
0003A4DC <AmiBlitz3.ab3@30146>   MOVEM.l a0-a1/d0,-(a7)
0003A4E2 <AmiBlitz3.ab3@30147>   LEA lastpath2,a1
0003A4E4 <AmiBlitz3.ab3@30150>     MOVE.b (a0)+,(a1)+
0003A4E8 <AmiBlitz3.ab3@30151>   BNE 'l2
0003A4EC <AmiBlitz3.ab3@30152>   MOVEM.l (a7)+,a0-a1/d0
0003A4F0 <AmiBlitz3.ab3@30153>   LEA usedpath(PC),A0
0003A4F4 <AmiBlitz3.ab3@30154>   MOVEM.l a0-a1/d0,-(a7)
0003A4FA <AmiBlitz3.ab3@30155>   LEA lastpath,a1
0003A4FC <AmiBlitz3.ab3@30158>     MOVE.b (a0)+,(a1)+
0003A500 <AmiBlitz3.ab3@30159>   BNE 'l1
0003A504 <AmiBlitz3.ab3@30160>   MOVEM.l (a7)+,a0-a1/d0
0003A506 <AmiBlitz3.ab3@30164>   TST.w D0
0003A50A <AmiBlitz3.ab3@30165>    BMI.w JUMP_syntaxerr
0003A50C <AmiBlitz3.ab3@30166>   MOVE.b D0,(A0)+
0003A510 <AmiBlitz3.ab3@30167>   BSR.w JUMP_get1bytemain
0003A514 <AmiBlitz3.ab3@30168>    BNE.w 'loop
0003A518 <AmiBlitz3.ab3@30171>   MOVE.b #$2,(A0)
0003A51A <AmiBlitz3.ab3@30172> RTS
0003A51E <AmiBlitz3.ab3@30176>   BEQ.w JUMP_syntaxerr
0003A524 <AmiBlitz3.ab3@30177>   LEA path2,A0
0003A526 <AmiBlitz3.ab3@30189>   TST.w D0
0003A52A <AmiBlitz3.ab3@30190>    BMI.w JUMP_syntaxerr
0003A52C <AmiBlitz3.ab3@30191>   MOVE.b D0,(A0)+
0003A530 <AmiBlitz3.ab3@30192>   BSR.w JUMP_get1bytemain
0003A534 <AmiBlitz3.ab3@30193>    BNE.w 'loop
0003A538 <AmiBlitz3.ab3@30196>   MOVE.b #$2,(A0)
0003A53A <AmiBlitz3.ab3@30197> RTS
0003A540 <AmiBlitz3.ab3@30200> JUMP_errormsg_reg JMP errormsg_reg
0003A54A <AmiBlitz3.ab3@30204>   MOVE.l #$f22d6780,fpucodeglobal
0003A554 <AmiBlitz3.ab3@30205>   MOVE.l #$f22c6780,fpucodelocal
0003A55A <AmiBlitz3.ab3@30206>   LEA regtable,a0
0003A564 <AmiBlitz3.ab3@30207>   MOVE.l #7,maxregs
0003A566 <AmiBlitz3.ab3@30210>   MOVE.l (a0),d0
0003A56A <AmiBlitz3.ab3@30211>   BEQ 'e1
0003A56C <AmiBlitz3.ab3@30212>   CLR.l (a0)
0003A570 <AmiBlitz3.ab3@30213>   MOVE.w 4(a0),d0
0003A57A <AmiBlitz3.ab3@30214>   MOVE.l fpucodeglobal,fpucode
0003A57E <AmiBlitz3.ab3@30215>   TST.w 6(a0)
0003A582 <AmiBlitz3.ab3@30216>   BEQ 'glob
0003A58C <AmiBlitz3.ab3@30217>   MOVE.l fpucodelocal,fpucode
0003A592 <AmiBlitz3.ab3@30220>   MOVE.l fpucode,d1
0003A598 <AmiBlitz3.ab3@30221>   JSR writelong
0003A5A2 <AmiBlitz3.ab3@30222>   SUB.l #$80,fpucodelocal
0003A5AC <AmiBlitz3.ab3@30223>   SUB.l #$80,fpucodeglobal
0003A5AE <AmiBlitz3.ab3@30224>   MOVE.w d0,d1
0003A5B4 <AmiBlitz3.ab3@30225>   JSR writeword
0003A5B6 <AmiBlitz3.ab3@30226>   ADDQ #8,a0
0003A5BA <AmiBlitz3.ab3@30227>  BRA 'again
0003A5BC <AmiBlitz3.ab3@30230> RTS
0003A5C2 <AmiBlitz3.ab3@30233> JUMP_notypeerr2 JMP notypeerr
0003A5C8 <AmiBlitz3.ab3@30234> JUMP_illtypeerr JMP illtypeerr
0003A5D2 <AmiBlitz3.ab3@30237>   MOVE.l #$f22d4780,fpucodeglobal
0003A5DC <AmiBlitz3.ab3@30238>   MOVE.l #$f22c4780,fpucodelocal
0003A5E2 <AmiBlitz3.ab3@30239>   LEA regtable,a0
0003A5E4 <AmiBlitz3.ab3@30240>   TST.l (a0)
0003A5E8 <AmiBlitz3.ab3@30241>    BNE JUMP_errormsg_reg
0003A5EA <AmiBlitz3.ab3@30242>   MOVE.l d7,-(a7)
0003A5EC <AmiBlitz3.ab3@30243>   SUBQ.l #1,a5
0003A5F2 <AmiBlitz3.ab3@30246>   JSR getparameter2
0003A5F6 <AmiBlitz3.ab3@30247>   BEQ.w 'nopar
0003A5FC <AmiBlitz3.ab3@30248>   MOVE.w d0,lastchar
0003A602 <AmiBlitz3.ab3@30249>   JSR findvariable
0003A606 <AmiBlitz3.ab3@30250>   BNE 'islocal
0003A610 <AmiBlitz3.ab3@30251>   MOVE.l fpucodeglobal,fpucode
0003A61A <AmiBlitz3.ab3@30252>   MOVE.l #3,maxregs
0003A61C <AmiBlitz3.ab3@30253>   MOVEQ #0,d7
0003A624 <AmiBlitz3.ab3@30256>   CMP.l #newtype_float,$a(a2)                              ;is float type
0003A628 <AmiBlitz3.ab3@30257>    BEQ 'doit
0003A630 <AmiBlitz3.ab3@30258>   CMP.l #newtype_double,$a(a2)
0003A634 <AmiBlitz3.ab3@30259>    BNE JUMP_illtypeerr
0003A63A <AmiBlitz3.ab3@30262>   LEA regtable,a0
0003A63C <AmiBlitz3.ab3@30263>   MOVEQ #0,d0
0003A63E <AmiBlitz3.ab3@30266>   TST.l (a0)
0003A642 <AmiBlitz3.ab3@30267>    BEQ 'store
0003A644 <AmiBlitz3.ab3@30268>   ADDQ.l #4,d0
0003A646 <AmiBlitz3.ab3@30269>   ADDQ.l #8,a0
0003A64C <AmiBlitz3.ab3@30270>   CMP.l #16,d0
0003A650 <AmiBlitz3.ab3@30271>    BCS 'loop
0003A65A <AmiBlitz3.ab3@30272>   MOVE.l #2,maxregs
0003A660 <AmiBlitz3.ab3@30273>   CMP.l #20,d0
0003A664 <AmiBlitz3.ab3@30274>    BCS 'loop
0003A66E <AmiBlitz3.ab3@30275>   MOVE.l #1,maxregs
0003A674 <AmiBlitz3.ab3@30276>   CMP.l #24,d0
0003A678 <AmiBlitz3.ab3@30277>    BCS 'loop
0003A67E <AmiBlitz3.ab3@30278>  JMP toovarerr
0003A684 <AmiBlitz3.ab3@30281>   TST.b fpu
0003A688 <AmiBlitz3.ab3@30282>    BEQ 'nofpu
0003A68A <AmiBlitz3.ab3@30283>   MOVE.l a2,(a0)
0003A690 <AmiBlitz3.ab3@30284>   MOVE.w 4(a2),4(a0)
0003A694 <AmiBlitz3.ab3@30285>   MOVE.w d7,6(a0)
0003A69A <AmiBlitz3.ab3@30286>   MOVE.l fpucode,d1
0003A6A4 <AmiBlitz3.ab3@30287>   SUB.l #$80,fpucodeglobal
0003A6AE <AmiBlitz3.ab3@30288>   SUB.l #$80,fpucodelocal
0003A6B4 <AmiBlitz3.ab3@30289>   JSR writelong
0003A6B8 <AmiBlitz3.ab3@30290>   MOVE.w 4(a2),d1
0003A6BE <AmiBlitz3.ab3@30291>   JSR writeword
0003A6C4 <AmiBlitz3.ab3@30294>   MOVE.w lastchar,d0
0003A6C8 <AmiBlitz3.ab3@30295>   CMP.w #":",d0
0003A6CC <AmiBlitz3.ab3@30296>    BEQ 'nopar
0003A6CE <AmiBlitz3.ab3@30297>   TST.w d0
0003A6D2 <AmiBlitz3.ab3@30298>    BEQ 'nopar
0003A6D6 <AmiBlitz3.ab3@30299>   CMP.w #",",d0
0003A6DA <AmiBlitz3.ab3@30300>   BNE JUMP_syntaxerr
0003A6DE <AmiBlitz3.ab3@30301>  BRA 'l2
0003A6E0 <AmiBlitz3.ab3@30304>    MOVE.l (a7)+,d7
0003A6E2 <AmiBlitz3.ab3@30305>  RTS
0003A6E4 <AmiBlitz3.ab3@30308>   MOVEQ #1,d7
0003A6EC <AmiBlitz3.ab3@30309>   MOVE.b #1,newvariable
0003A6F2 <AmiBlitz3.ab3@30310>   LEA firstlocal,a2
0003A6F8 <AmiBlitz3.ab3@30311>   JSR findvariable
0003A6FE <AmiBlitz3.ab3@30312>   CLR.b newvariable
0003A704 <AmiBlitz3.ab3@30313>   CMP.l #-1,d0
0003A708 <AmiBlitz3.ab3@30314>   BEQ.w JUMP_notypeerr2
0003A712 <AmiBlitz3.ab3@30315>   MOVE.l fpucodelocal,fpucode
0003A716 <AmiBlitz3.ab3@30316>  BRA 'go
0003A71A <AmiBlitz3.ab3@30319>   CMP.b #".",d0
0003A71E <AmiBlitz3.ab3@30320>    BNE 'l1
0003A722 <AmiBlitz3.ab3@30321>   BSR JUMP_get1bytemain
0003A726 <AmiBlitz3.ab3@30322>   BSR JUMP_get1bytemain
0003A72A <AmiBlitz3.ab3@30325>   ORI .b #$20,d0
0003A72E <AmiBlitz3.ab3@30326>   CMP.b #"d",d0
0003A732 <AmiBlitz3.ab3@30327>    BNE JUMP_illeaerr
0003A736 <AmiBlitz3.ab3@30328>   BSR JUMP_get1bytemain
0003A73A <AmiBlitz3.ab3@30329>   SUB.b #$30,d0
0003A73E <AmiBlitz3.ab3@30330>   CMP.b #$7,d0
0003A742 <AmiBlitz3.ab3@30331>    BGT JUMP_syntaxerr
0003A746 <AmiBlitz3.ab3@30332>   MOVE.w #$49c0,d1
0003A748 <AmiBlitz3.ab3@30333>   ADD.b d0,d1
0003A74E <AmiBlitz3.ab3@30334>   JSR writeword
0003A752 <AmiBlitz3.ab3@30335>   BSR JUMP_get1bytemain
0003A754 <AmiBlitz3.ab3@30336> RTS
0003A75A <AmiBlitz3.ab3@30340>   LEA lastpath,a0
0003A75E <AmiBlitz3.ab3@30341>   LEA usedpath(PC),A1
0003A760 <AmiBlitz3.ab3@30344>     MOVE.b (a0)+,(a1)+
0003A764 <AmiBlitz3.ab3@30345>   BNE 'l1
0003A76A <AmiBlitz3.ab3@30347>   LEA lastpath2,a0
0003A770 <AmiBlitz3.ab3@30348>   LEA lastpath,A1
0003A772 <AmiBlitz3.ab3@30351>     MOVE.b (a0)+,(a1)+
0003A776 <AmiBlitz3.ab3@30352>   BNE 'l2
0003A778 <AmiBlitz3.ab3@30353> RTS
0003A77E <AmiBlitz3.ab3@30357>   TST.b objectcount
0003A782 <AmiBlitz3.ab3@30358>   BEQ 'l2a
0003A788 <AmiBlitz3.ab3@30359>  JMP macnesterr
0003A78E <AmiBlitz3.ab3@30362>   LEA devo,a0
0003A794 <AmiBlitz3.ab3@30363>   ADDQ.b #1,objectcount
0003A798 <AmiBlitz3.ab3@30364>   MOVEM.l a1/d2,-(a7)
0003A79E <AmiBlitz3.ab3@30365>   LEA ptr_parameterstore,a1
0003A7A0 <AmiBlitz3.ab3@30368>     MOVE.b (a0)+,(a1)+
0003A7A4 <AmiBlitz3.ab3@30369>   BNE 'l1
0003A7A6 <AmiBlitz3.ab3@30371>   MOVEQ #13,d2
0003A7AC <AmiBlitz3.ab3@30372>   JSR findlabel2
0003A7B0 <AmiBlitz3.ab3@30373>   BNE 'd
0003A7B4 <AmiBlitz3.ab3@30374>   TST.l 8(a2)
0003A7B8 <AmiBlitz3.ab3@30375>   BEQ 'd
0003A7BE <AmiBlitz3.ab3@30376>   SUBQ.b #1,objectcount
0003A7C2 <AmiBlitz3.ab3@30377>   MOVEM.l (a7)+,a1/d2
0003A7C8 <AmiBlitz3.ab3@30378>   JSR skiprest
0003A7D0 <AmiBlitz3.ab3@30379>   MOVE.b #1,developobject
0003A7D2 <AmiBlitz3.ab3@30380>  RTS
0003A7D6 <AmiBlitz3.ab3@30383>   MOVEM.l (a7)+,a1/d2
0003A7DE <AmiBlitz3.ab3@30384>   MOVE.b #1,resdisable
0003A7E4 <AmiBlitz3.ab3@30387>   CLR.b developobject
0003A7EA <AmiBlitz3.ab3@30388> JMP do_Macro
0003A7F0 <AmiBlitz3.ab3@30391> JUMP_illeaerr JMP illeaerr
0003A7F6 <AmiBlitz3.ab3@30395>   CLR.b typecheck
0003A7FC <AmiBlitz3.ab3@30396>   CLR.b declare
0003A802 <AmiBlitz3.ab3@30397>   CLR.b declare2
0003A806 <AmiBlitz3.ab3@30398>   SUB.b #$30,d0
0003A80A <AmiBlitz3.ab3@30399>   BTST #0,d0
0003A80E <AmiBlitz3.ab3@30400>   BEQ 'l1
0003A816 <AmiBlitz3.ab3@30401>   MOVE.b #1,declare
0003A81A <AmiBlitz3.ab3@30404>   BTST #1,d0
0003A81E <AmiBlitz3.ab3@30405>   BEQ 'l2
0003A826 <AmiBlitz3.ab3@30406>   MOVE.b #1,declare2
0003A82A <AmiBlitz3.ab3@30409>   BTST #2,d0
0003A82E <AmiBlitz3.ab3@30410>   BEQ 'l3
0003A836 <AmiBlitz3.ab3@30411>   MOVE.b #1,typecheck
0003A83A <AmiBlitz3.ab3@30414>   BSR.w JUMP_get1bytemain
0003A83C <AmiBlitz3.ab3@30415> RTS
0003A842 <AmiBlitz3.ab3@30417> JUMP_get1bytemain JMP get1bytemain
0003A86C <AmiBlitz3.ab3@30421>   !basic
0003A88C <AmiBlitz3.ab3@30423>   FillMem ?residents_table,?residents_table_end-?residents_table,0
0003A8AA <AmiBlitz3.ab3@30424>   !asm
0003A8AC <AmiBlitz3.ab3@30425> Return
0003A8AE <AmiBlitz3.ab3@30430>   MOVE.l d2,-(a7)                                          ; D2 -> stack
0003A8B0 <AmiBlitz3.ab3@30431>   ADDQ #1,a5
0003A8B2 <AmiBlitz3.ab3@30432>   MOVE.l a5,-(a7)
0003A8DC <AmiBlitz3.ab3@30433>   !basic
0003A8E2 <AmiBlitz3.ab3@30434>   MOVE.l (a7)+,d0 : _myD0.l = PutD0
0003A8EC <AmiBlitz3.ab3@30435>   If _myD0
0003A92C <AmiBlitz3.ab3@30436>     newconst$ = UCase$(Peek.s(_myD0))
0003A932 <AmiBlitz3.ab3@30437>   Else
0003A96C <AmiBlitz3.ab3@30438>     error{"INTERNAL: invalid pointer in check_newconstants!"}
0003A994 <AmiBlitz3.ab3@30439>     nwconst$="xxx"
0003A9BC <AmiBlitz3.ab3@30441>   condata$ =""
0003A9CC <AmiBlitz3.ab3@30442>   Poke.b ?skip_bytes,0
0003AA28 <AmiBlitz3.ab3@30443>   If Left$(newconst$,2) = "__"
0003AA82 <AmiBlitz3.ab3@30444>     Select Mid$(newconst$,3,4)
0003AAA6 <AmiBlitz3.ab3@30446>      Case "DATE"
0003AB00 <AmiBlitz3.ab3@30447>       Select Mid$(newconst$,3,6)
0003AB3E <AmiBlitz3.ab3@30448>       Case "DATE__" : DateFormat 1 : Poke.b ?skip_bytes,8
0003AB82 <AmiBlitz3.ab3@30449>       Case "DATE_G" : DateFormat 0 : Poke.b ?skip_bytes,12
0003AB90 <AmiBlitz3.ab3@30450>       End Select
0003AB9E <AmiBlitz3.ab3@30451>       i.l=SystemDate
0003ABC4 <AmiBlitz3.ab3@30452>       condata$ = Date$ (i)
0003AC42 <AmiBlitz3.ab3@30453>       condata$ = Replace$(condata$,"/",".")
0003AC6C <AmiBlitz3.ab3@30455>      Case "VER_"
0003AC7C <AmiBlitz3.ab3@30458>       actual_version.l = Peek.l(?versioninformation)
0003AC8C <AmiBlitz3.ab3@30459>       actual_build.l   = Peek.l(?number_of_builds)
0003ACB0 <AmiBlitz3.ab3@30461>       Format ""
0003AD0A <AmiBlitz3.ab3@30462>       Select Mid$(newconst$,3,9)
0003AD2E <AmiBlitz3.ab3@30464>        Case "VER_MAJOR"
0003AD6A <AmiBlitz3.ab3@30465>         condata$ = Str$(actual_version LSR 24)
0003AD94 <AmiBlitz3.ab3@30467>        Case "VER_MINOR"
0003ADD8 <AmiBlitz3.ab3@30468>         condata$ = Str$((actual_version LSL 8) LSR 24)
0003AE02 <AmiBlitz3.ab3@30470>        Case "VER_PATCH"
0003AE46 <AmiBlitz3.ab3@30471>         condata$ = Str$((actual_version LSL 16) LSR 24 )
0003AE70 <AmiBlitz3.ab3@30473>        Case "VER_BUILD"
0003AE94 <AmiBlitz3.ab3@30474>         Format ""
0003AEC8 <AmiBlitz3.ab3@30475>         condata$ = Str$(actual_build)
0003AECE <AmiBlitz3.ab3@30477>        Default
0003AEF6 <AmiBlitz3.ab3@30478>         condata$ = "{unknown compiler constant}"
0003AF04 <AmiBlitz3.ab3@30480>       End Select
0003AF28 <AmiBlitz3.ab3@30481>       Format ""
0003AF38 <AmiBlitz3.ab3@30482>       Poke.b ?skip_bytes,11
0003AF62 <AmiBlitz3.ab3@30484>      Case "THIS"
0003AFBC <AmiBlitz3.ab3@30485>       Select Mid$(newconst$,3,9)
0003AFE0 <AmiBlitz3.ab3@30487>        Case "THIS_FUNC"
0003AFF0 <AmiBlitz3.ab3@30488>         Poke.b ?skip_bytes,15
0003B010 <AmiBlitz3.ab3@30489>         If Peek.l(?currentfunction)<>0
0003B05C <AmiBlitz3.ab3@30490>           condata$ = Peek.s(Peek.l(?currentfunction) + 32 + #funcentry_extend + 1)
0003B062 <AmiBlitz3.ab3@30491>         Else
0003B08A <AmiBlitz3.ab3@30492>           condata$ = "GLOBAL"
0003B0B4 <AmiBlitz3.ab3@30495>        Case "THIS_INCL"
0003B0C4 <AmiBlitz3.ab3@30496>         Poke.b ?skip_bytes,14
0003B0E4 <AmiBlitz3.ab3@30497>         If Peek.l(?includetemp2)<>0
0003B132 <AmiBlitz3.ab3@30498>           condata$ = dos_FilePart{Peek$(?includetemp2)}
0003B15C <AmiBlitz3.ab3@30501>        Case "THIS_POIN"
0003B16C <AmiBlitz3.ab3@30502>         Poke.b ?skip_bytes,14
0003B18C <AmiBlitz3.ab3@30503>         If Peek.l(?currentfunction)<>0
0003B1BA <AmiBlitz3.ab3@30504>           condata$ = Hex$(Peek.l(?currentfunction))
0003B1C8 <AmiBlitz3.ab3@30507>       End Select
0003B1F2 <AmiBlitz3.ab3@30509>      Case "CODE"
0003B202 <AmiBlitz3.ab3@30510>       Poke.b ?skip_bytes,10
0003B264 <AmiBlitz3.ab3@30511>       If Mid$(newconst$,3,8) = "CODELINE"
0003B2A0 <AmiBlitz3.ab3@30512>         condata$ = Str$(Peek.l(?globallinecount))
0003B2AE <AmiBlitz3.ab3@30515>     End Select
0003B2B4 <AmiBlitz3.ab3@30517>   Else
0003B308 <AmiBlitz3.ab3@30518>     Select Left$(newconst$,1)
0003B32C <AmiBlitz3.ab3@30520>      Case "R"
0003B33C <AmiBlitz3.ab3@30521>       Poke.b ?skip_bytes,3
0003B3B4 <AmiBlitz3.ab3@30522>       For i = 1 To Vallong(Mid$(newconst$,2,2))
0003B434 <AmiBlitz3.ab3@30523>         condata$ = condata$ + Mid$(newconst$,4,1)
0003B444 <AmiBlitz3.ab3@30524>       Next
0003B46E <AmiBlitz3.ab3@30526>      Case "N"
0003B47E <AmiBlitz3.ab3@30527>       Poke.b ?skip_bytes,1
0003B4A2 <AmiBlitz3.ab3@30528>       condata$ = Chr$(10)
0003B4A8 <AmiBlitz3.ab3@30530>      Default
0003B4BA <AmiBlitz3.ab3@30531>       char1.b = Peek.b(&newconst$)
0003B4D2 <AmiBlitz3.ab3@30532>       char2.b = Peek.b(&newconst$+1)
0003B4DE <AmiBlitz3.ab3@30533>       nibble1.l = -1
0003B4EA <AmiBlitz3.ab3@30534>       nibble2.l = -1
0003B528 <AmiBlitz3.ab3@30536>       If (char1>=@"0" AND char1<=@"9") Then nibble1 = char1-@"0"
0003B566 <AmiBlitz3.ab3@30537>       If (char2>=@"0" AND char2<=@"9") Then nibble2 = char2-@"0"
0003B5AA <AmiBlitz3.ab3@30539>       If (char1>=@"a" AND char1<=@"f") Then nibble1 = char1-@"a" + 10
0003B5EE <AmiBlitz3.ab3@30540>       If (char2>=@"a" AND char2<=@"f") Then nibble2 = char2-@"a" + 10
0003B632 <AmiBlitz3.ab3@30542>       If (char1>=@"A" AND char1<=@"F") Then nibble1 = char1-@"A" + 10
0003B676 <AmiBlitz3.ab3@30543>       If (char2>=@"A" AND char2<=@"F") Then nibble2 = char2-@"A" + 10
0003B69C <AmiBlitz3.ab3@30545>       If nibble1>=0 AND nibble2>=0
0003B6B2 <AmiBlitz3.ab3@30546>         newchar.l = (nibble1 LSL 4) + (nibble2)
0003B6D6 <AmiBlitz3.ab3@30547>         condata$ = Chr$(newchar)
0003B6E6 <AmiBlitz3.ab3@30548>         Poke.b ?skip_bytes,2
0003B6F4 <AmiBlitz3.ab3@30551>     End Select
0003B754 <AmiBlitz3.ab3@30553>   If condata$ = "" AND Peek.b(?skip_bytes)=0
0003B87A <AmiBlitz3.ab3@30554>     !cout{"detected unknown const: " + newconst$}
0003B8AE <AmiBlitz3.ab3@30555>     condata$ = newconst$
0003B8C4 <AmiBlitz3.ab3@30558>   GetD0 FLen(condata$)-1                                    ; laenge zielstring -> Stack
0003B8C6 <AmiBlitz3.ab3@30559>   MOVE.l d0,d2
0003B8C8 <AmiBlitz3.ab3@30560>   MOVE.l d2,-(a7)
0003B8CE <AmiBlitz3.ab3@30562>   GetD0 &condata$                                          ; kopieren des neuen Strings in den Zielstring
0003B8D0 <AmiBlitz3.ab3@30563>   MOVE.l d0,a0
0003B8D2 <AmiBlitz3.ab3@30566>     MOVE.b (a0)+,d1
0003B8D8 <AmiBlitz3.ab3@30567>     JSR pokedata1b
0003B8DC <AmiBlitz3.ab3@30568>  DBF d2,'l1
0003B8FA <AmiBlitz3.ab3@30570>   !asm
0003B8FC <AmiBlitz3.ab3@30571>   MOVE.l (a7)+,d0                                          ; laenge Zielstring <- Stack
0003B8FE <AmiBlitz3.ab3@30572>   MOVE.l (a7)+,d2                                          ; d2 <-Stack
0003B900 <AmiBlitz3.ab3@30573>   ADD.l d0,d2                                              ; eingefuegte chars zu D2 dazu
0003B906 <AmiBlitz3.ab3@30574>   ADD.l #1,d2
0003B90C <AmiBlitz3.ab3@30576>   MOVE.l #0,d0                                             ; a5 um konstantennamen weiterschieben
0003B912 <AmiBlitz3.ab3@30577>   MOVE.b skip_bytes,D0
0003B914 <AmiBlitz3.ab3@30578>   ADD.l D0,a5
0003B916 <AmiBlitz3.ab3@30579> RTS
0003B91A <AmiBlitz3.ab3@30655>   MOVEM.l d0-d2/a0-a5,-(a7)
0003B920 <AmiBlitz3.ab3@30656>   TST.w proceduremode                                     ;1 in function
0003B924 <AmiBlitz3.ab3@30657>   BEQ 'global
0003B92A <AmiBlitz3.ab3@30658>   LEA firstglob,a2
0003B930 <AmiBlitz3.ab3@30659>   JSR findvariable2
0003B934 <AmiBlitz3.ab3@30660>   BEQ 'isused
0003B93C <AmiBlitz3.ab3@30661>   MOVE.b #1,newvariable
0003B942 <AmiBlitz3.ab3@30662>   LEA firstlocal,a2
0003B948 <AmiBlitz3.ab3@30663>   JSR findvariable
0003B94C <AmiBlitz3.ab3@30664>   BEQ 'isused
0003B952 <AmiBlitz3.ab3@30665>   CLR.b newvariable
0003B956 <AmiBlitz3.ab3@30666>   MOVEM.l (a7)+,d0-d2/a0-a5
0003B958 <AmiBlitz3.ab3@30667>   RTS
0003B95E <AmiBlitz3.ab3@30670>   JSR findvariable
0003B962 <AmiBlitz3.ab3@30671>   BNE 'isunused
0003B968 <AmiBlitz3.ab3@30674>    MOVE.w lastchar,-(a7)                                  ;get the typename from source
0003B96E <AmiBlitz3.ab3@30675>    JSR getparameter2
0003B974 <AmiBlitz3.ab3@30676>    MOVE.w (a7)+,lastchar
0003B978 <AmiBlitz3.ab3@30677>    MOVE.l $a(a2),a0                                       ; get the name of the type
0003B97C <AmiBlitz3.ab3@30678>    LEA $b(a0),a0
0003B982 <AmiBlitz3.ab3@30679>    LEA ptr_parameterstore,a1
0003B984 <AmiBlitz3.ab3@30682>    CMPM.b (a0)+,(a1)+                                     ; compare name
0003B988 <AmiBlitz3.ab3@30683>    BNE'error
0003B98A <AmiBlitz3.ab3@30684>    TST.b (a1)
0003B98E <AmiBlitz3.ab3@30685> 
0003B990 <AmiBlitz3.ab3@30686>    TST.b (a0)
0003B994 <AmiBlitz3.ab3@30687>    BNE 'error
0003B998 <AmiBlitz3.ab3@30690>   MOVEM.l (a7)+,d0-d2/a0-a5
0003B99A <AmiBlitz3.ab3@30691>  RTS
0003B9A0 <AmiBlitz3.ab3@30694> JMP errormsg_declaredtwice
0003B9A4 <AmiBlitz3.ab3@30698>   MOVEM.l a3/d1,-(a7)
0003B9AA <AmiBlitz3.ab3@30700>   CLR.b a4a5store
0003B9AC <AmiBlitz3.ab3@30703>   MOVE.b (a3)+,d1
0003B9B0 <AmiBlitz3.ab3@30704>   CMP.b #$15,d1
0003B9B4 <AmiBlitz3.ab3@30705>   BEQ 'find
0003B9B8 <AmiBlitz3.ab3@30706>   CMP.b #$14,d1
0003B9BC <AmiBlitz3.ab3@30707>   BEQ 'find
0003B9C0 <AmiBlitz3.ab3@30708>   CMP.b #$ff,d1
0003B9C4 <AmiBlitz3.ab3@30709>   BNE 'continue
0003B9C8 <AmiBlitz3.ab3@30710>   BRA 'notfind
0003B9CE <AmiBlitz3.ab3@30713>   MOVE.l #$48e7000c,d1                  ; write 68k movem.l a4/a5,-(a7)
0003B9D4 <AmiBlitz3.ab3@30714>   JSR writelong
0003B9DC <AmiBlitz3.ab3@30715>   MOVE.b #1,a4a5store
0003B9E0 <AmiBlitz3.ab3@30718>   MOVEM.l (a7)+,a3/d1
0003B9E2 <AmiBlitz3.ab3@30719> RTS
0003B9E8 <AmiBlitz3.ab3@30723>   TST.b a4a5store
0003B9EC <AmiBlitz3.ab3@30724>   BEQ 'no
0003B9F2 <AmiBlitz3.ab3@30725>   MOVE.l #$4cdf3000,d1                  ; write 68k movem.l (a7)+,a4/a5
0003B9F8 <AmiBlitz3.ab3@30726>   JSR writelong
0003B9FE <AmiBlitz3.ab3@30727>   CLR.b a4a5store
0003BA00 <AmiBlitz3.ab3@30730> RTS
0003BA00 <internal_commands.ab3@1> INCLUDE "internal_commands.ab3"
0003BA04 <internal_commands.ab3@13> INCLUDE "internal_commands.ab3"
0003BA06 <internal_commands.ab3@15> INCLUDE "internal_commands.ab3"
0003BA0E <internal_commands.ab3@16> INCLUDE "internal_commands.ab3"
0003BA1A <internal_commands.ab3@17> INCLUDE "internal_commands.ab3"
0003BA1E <internal_commands.ab3@21> INCLUDE "internal_commands.ab3"
0003BA20 <internal_commands.ab3@22> INCLUDE "internal_commands.ab3"
0003BA24 <internal_commands.ab3@23> INCLUDE "internal_commands.ab3"
0003BA6D <internal_commands.ab3@24> INCLUDE "internal_commands.ab3"
0003BA6E <internal_commands.ab3@25> INCLUDE "internal_commands.ab3"
0003BA72 <internal_commands.ab3@28> INCLUDE "internal_commands.ab3"
0003BA74 <internal_commands.ab3@29> INCLUDE "internal_commands.ab3"
0003BA78 <internal_commands.ab3@30> INCLUDE "internal_commands.ab3"
0003BA94 <internal_commands.ab3@31> INCLUDE "internal_commands.ab3"
0003BA98 <internal_commands.ab3@35> INCLUDE "internal_commands.ab3"
0003BA9A <internal_commands.ab3@36> INCLUDE "internal_commands.ab3"
0003BA9E <internal_commands.ab3@37> INCLUDE "internal_commands.ab3"
0003BAFB <internal_commands.ab3@38> INCLUDE "internal_commands.ab3"
0003BAFC <internal_commands.ab3@39> INCLUDE "internal_commands.ab3"
0003BB00 <internal_commands.ab3@42> INCLUDE "internal_commands.ab3"
0003BB02 <internal_commands.ab3@43> INCLUDE "internal_commands.ab3"
0003BB07 <internal_commands.ab3@44> INCLUDE "internal_commands.ab3"
0003BB17 <internal_commands.ab3@45> INCLUDE "internal_commands.ab3"
0003BB18 <internal_commands.ab3@46> INCLUDE "internal_commands.ab3"
0003BB1C <internal_commands.ab3@49> INCLUDE "internal_commands.ab3"
0003BB1E <internal_commands.ab3@50> INCLUDE "internal_commands.ab3"
0003BB24 <internal_commands.ab3@51> INCLUDE "internal_commands.ab3"
0003BB34 <internal_commands.ab3@52> INCLUDE "internal_commands.ab3"
0003BB38 <internal_commands.ab3@56> INCLUDE "internal_commands.ab3"
0003BB3A <internal_commands.ab3@57> INCLUDE "internal_commands.ab3"
0003BB41 <internal_commands.ab3@58> INCLUDE "internal_commands.ab3"
0003BB42 <internal_commands.ab3@59> INCLUDE "internal_commands.ab3"
0003BB46 <internal_commands.ab3@63> INCLUDE "internal_commands.ab3"
0003BB48 <internal_commands.ab3@64> INCLUDE "internal_commands.ab3"
0003BB52 <internal_commands.ab3@65> INCLUDE "internal_commands.ab3"
0003BB85 <internal_commands.ab3@66> INCLUDE "internal_commands.ab3"
0003BB86 <internal_commands.ab3@67> INCLUDE "internal_commands.ab3"
0003BB8A <internal_commands.ab3@70> INCLUDE "internal_commands.ab3"
0003BB8C <internal_commands.ab3@71> INCLUDE "internal_commands.ab3"
0003BB95 <internal_commands.ab3@72> INCLUDE "internal_commands.ab3"
0003BBD0 <internal_commands.ab3@73> INCLUDE "internal_commands.ab3"
0003BBD4 <internal_commands.ab3@77> INCLUDE "internal_commands.ab3"
0003BBD6 <internal_commands.ab3@78> INCLUDE "internal_commands.ab3"
0003BBE0 <internal_commands.ab3@79> INCLUDE "internal_commands.ab3"
0003BBE1 <internal_commands.ab3@80> INCLUDE "internal_commands.ab3"
0003BBE2 <internal_commands.ab3@81> INCLUDE "internal_commands.ab3"
0003BBE6 <internal_commands.ab3@84> INCLUDE "internal_commands.ab3"
0003BBE8 <internal_commands.ab3@85> INCLUDE "internal_commands.ab3"
0003BBEB <internal_commands.ab3@86> INCLUDE "internal_commands.ab3"
0003BC02 <internal_commands.ab3@87> INCLUDE "internal_commands.ab3"
0003BC06 <internal_commands.ab3@91> INCLUDE "internal_commands.ab3"
0003BC08 <internal_commands.ab3@92> INCLUDE "internal_commands.ab3"
0003BC0E <internal_commands.ab3@93> INCLUDE "internal_commands.ab3"
0003BC1B <internal_commands.ab3@94> INCLUDE "internal_commands.ab3"
0003BC1C <internal_commands.ab3@95> INCLUDE "internal_commands.ab3"
0003BC20 <internal_commands.ab3@98> INCLUDE "internal_commands.ab3"
0003BC22 <internal_commands.ab3@99> INCLUDE "internal_commands.ab3"
0003BC28 <internal_commands.ab3@100> INCLUDE "internal_commands.ab3"
0003BC34 <internal_commands.ab3@101> INCLUDE "internal_commands.ab3"
0003BC38 <internal_commands.ab3@105> INCLUDE "internal_commands.ab3"
0003BC3A <internal_commands.ab3@106> INCLUDE "internal_commands.ab3"
0003BC41 <internal_commands.ab3@107> INCLUDE "internal_commands.ab3"
0003BC4E <internal_commands.ab3@108> INCLUDE "internal_commands.ab3"
0003BC52 <internal_commands.ab3@112> INCLUDE "internal_commands.ab3"
0003BC54 <internal_commands.ab3@113> INCLUDE "internal_commands.ab3"
0003BC59 <internal_commands.ab3@114> INCLUDE "internal_commands.ab3"
0003BC66 <internal_commands.ab3@115> INCLUDE "internal_commands.ab3"
0003BC6A <internal_commands.ab3@119> INCLUDE "internal_commands.ab3"
0003BC6C <internal_commands.ab3@120> INCLUDE "internal_commands.ab3"
0003BC74 <internal_commands.ab3@121> INCLUDE "internal_commands.ab3"
0003BC75 <internal_commands.ab3@122> INCLUDE "internal_commands.ab3"
0003BC76 <internal_commands.ab3@123> INCLUDE "internal_commands.ab3"
0003BC7A <internal_commands.ab3@126> INCLUDE "internal_commands.ab3"
0003BC7C <internal_commands.ab3@127> INCLUDE "internal_commands.ab3"
0003BC84 <internal_commands.ab3@128> INCLUDE "internal_commands.ab3"
0003BC85 <internal_commands.ab3@129> INCLUDE "internal_commands.ab3"
0003BC86 <internal_commands.ab3@130> INCLUDE "internal_commands.ab3"
0003BC8A <internal_commands.ab3@133> INCLUDE "internal_commands.ab3"
0003BC8C <internal_commands.ab3@134> INCLUDE "internal_commands.ab3"
0003BC95 <internal_commands.ab3@135> INCLUDE "internal_commands.ab3"
0003BCA0 <internal_commands.ab3@136> INCLUDE "internal_commands.ab3"
0003BCA4 <internal_commands.ab3@140> INCLUDE "internal_commands.ab3"
0003BCA6 <internal_commands.ab3@141> INCLUDE "internal_commands.ab3"
0003BCAE <internal_commands.ab3@142> INCLUDE "internal_commands.ab3"
0003BCB9 <internal_commands.ab3@143> INCLUDE "internal_commands.ab3"
0003BCBA <internal_commands.ab3@144> INCLUDE "internal_commands.ab3"
0003BCBE <internal_commands.ab3@147> INCLUDE "internal_commands.ab3"
0003BCC0 <internal_commands.ab3@148> INCLUDE "internal_commands.ab3"
0003BCC7 <internal_commands.ab3@149> INCLUDE "internal_commands.ab3"
0003BD29 <internal_commands.ab3@150> INCLUDE "internal_commands.ab3"
0003BD2A <internal_commands.ab3@151> INCLUDE "internal_commands.ab3"
0003BD2E <internal_commands.ab3@154> INCLUDE "internal_commands.ab3"
0003BD30 <internal_commands.ab3@155> INCLUDE "internal_commands.ab3"
0003BD37 <internal_commands.ab3@156> INCLUDE "internal_commands.ab3"
0003BD46 <internal_commands.ab3@157> INCLUDE "internal_commands.ab3"
0003BD4A <internal_commands.ab3@161> INCLUDE "internal_commands.ab3"
0003BD4C <internal_commands.ab3@162> INCLUDE "internal_commands.ab3"
0003BD50 <internal_commands.ab3@163> INCLUDE "internal_commands.ab3"
0003BD86 <internal_commands.ab3@164> INCLUDE "internal_commands.ab3"
0003BD8A <internal_commands.ab3@168> INCLUDE "internal_commands.ab3"
0003BD8C <internal_commands.ab3@169> INCLUDE "internal_commands.ab3"
0003BD91 <internal_commands.ab3@170> INCLUDE "internal_commands.ab3"
0003BDA0 <internal_commands.ab3@171> INCLUDE "internal_commands.ab3"
0003BDA4 <internal_commands.ab3@175> INCLUDE "internal_commands.ab3"
0003BDA6 <internal_commands.ab3@176> INCLUDE "internal_commands.ab3"
0003BDA9 <internal_commands.ab3@177> INCLUDE "internal_commands.ab3"
0003BDCA <internal_commands.ab3@178> INCLUDE "internal_commands.ab3"
0003BDCE <internal_commands.ab3@182> INCLUDE "internal_commands.ab3"
0003BDD0 <internal_commands.ab3@183> INCLUDE "internal_commands.ab3"
0003BDD5 <internal_commands.ab3@184> INCLUDE "internal_commands.ab3"
0003BDE1 <internal_commands.ab3@185> INCLUDE "internal_commands.ab3"
0003BDE2 <internal_commands.ab3@186> INCLUDE "internal_commands.ab3"
0003BDE6 <internal_commands.ab3@189> INCLUDE "internal_commands.ab3"
0003BDE8 <internal_commands.ab3@190> INCLUDE "internal_commands.ab3"
0003BDED <internal_commands.ab3@191> INCLUDE "internal_commands.ab3"
0003BE04 <internal_commands.ab3@192> INCLUDE "internal_commands.ab3"
0003BE08 <internal_commands.ab3@196> INCLUDE "internal_commands.ab3"
0003BE0A <internal_commands.ab3@197> INCLUDE "internal_commands.ab3"
0003BE0F <internal_commands.ab3@198> INCLUDE "internal_commands.ab3"
0003BE1E <internal_commands.ab3@199> INCLUDE "internal_commands.ab3"
0003BE22 <internal_commands.ab3@203> INCLUDE "internal_commands.ab3"
0003BE24 <internal_commands.ab3@204> INCLUDE "internal_commands.ab3"
0003BE29 <internal_commands.ab3@205> INCLUDE "internal_commands.ab3"
0003BE48 <internal_commands.ab3@206> INCLUDE "internal_commands.ab3"
0003BE4C <internal_commands.ab3@210> INCLUDE "internal_commands.ab3"
0003BE4E <internal_commands.ab3@211> INCLUDE "internal_commands.ab3"
0003BE53 <internal_commands.ab3@212> INCLUDE "internal_commands.ab3"
0003BE72 <internal_commands.ab3@213> INCLUDE "internal_commands.ab3"
0003BE76 <internal_commands.ab3@217> INCLUDE "internal_commands.ab3"
0003BE78 <internal_commands.ab3@218> INCLUDE "internal_commands.ab3"
0003BE7E <internal_commands.ab3@219> INCLUDE "internal_commands.ab3"
0003BE7F <internal_commands.ab3@220> INCLUDE "internal_commands.ab3"
0003BE80 <internal_commands.ab3@221> INCLUDE "internal_commands.ab3"
0003BE84 <internal_commands.ab3@224> INCLUDE "internal_commands.ab3"
0003BE86 <internal_commands.ab3@225> INCLUDE "internal_commands.ab3"
0003BE8B <internal_commands.ab3@226> INCLUDE "internal_commands.ab3"
0003BE8C <internal_commands.ab3@227> INCLUDE "internal_commands.ab3"
0003BE90 <internal_commands.ab3@231> INCLUDE "internal_commands.ab3"
0003BE92 <internal_commands.ab3@232> INCLUDE "internal_commands.ab3"
0003BE97 <internal_commands.ab3@233> INCLUDE "internal_commands.ab3"
0003BEA4 <internal_commands.ab3@234> INCLUDE "internal_commands.ab3"
0003BEA8 <internal_commands.ab3@238> INCLUDE "internal_commands.ab3"
0003BEAA <internal_commands.ab3@239> INCLUDE "internal_commands.ab3"
0003BEAF <internal_commands.ab3@240> INCLUDE "internal_commands.ab3"
0003BEBE <internal_commands.ab3@241> INCLUDE "internal_commands.ab3"
0003BEC2 <internal_commands.ab3@245> INCLUDE "internal_commands.ab3"
0003BEC4 <internal_commands.ab3@246> INCLUDE "internal_commands.ab3"
0003BEC9 <internal_commands.ab3@247> INCLUDE "internal_commands.ab3"
0003BED8 <internal_commands.ab3@248> INCLUDE "internal_commands.ab3"
0003BEDC <internal_commands.ab3@254> INCLUDE "internal_commands.ab3"
0003BEDE <internal_commands.ab3@255> INCLUDE "internal_commands.ab3"
0003BEE4 <internal_commands.ab3@256> INCLUDE "internal_commands.ab3"
0003BF01 <internal_commands.ab3@257> INCLUDE "internal_commands.ab3"
0003BF02 <internal_commands.ab3@258> INCLUDE "internal_commands.ab3"
0003BF06 <internal_commands.ab3@261> INCLUDE "internal_commands.ab3"
0003BF08 <internal_commands.ab3@262> INCLUDE "internal_commands.ab3"
0003BF0E <internal_commands.ab3@263> INCLUDE "internal_commands.ab3"
0003BF2B <internal_commands.ab3@264> INCLUDE "internal_commands.ab3"
0003BF2C <internal_commands.ab3@265> INCLUDE "internal_commands.ab3"
0003BF30 <internal_commands.ab3@268> INCLUDE "internal_commands.ab3"
0003BF32 <internal_commands.ab3@269> INCLUDE "internal_commands.ab3"
0003BF35 <internal_commands.ab3@270> INCLUDE "internal_commands.ab3"
0003BF4C <internal_commands.ab3@271> INCLUDE "internal_commands.ab3"
0003BF50 <internal_commands.ab3@275> INCLUDE "internal_commands.ab3"
0003BF52 <internal_commands.ab3@276> INCLUDE "internal_commands.ab3"
0003BF55 <internal_commands.ab3@277> INCLUDE "internal_commands.ab3"
0003BF64 <internal_commands.ab3@278> INCLUDE "internal_commands.ab3"
0003BF68 <internal_commands.ab3@282> INCLUDE "internal_commands.ab3"
0003BF6A <internal_commands.ab3@283> INCLUDE "internal_commands.ab3"
0003BF6F <internal_commands.ab3@284> INCLUDE "internal_commands.ab3"
0003BF70 <internal_commands.ab3@285> INCLUDE "internal_commands.ab3"
0003BF74 <internal_commands.ab3@289> INCLUDE "internal_commands.ab3"
0003BF76 <internal_commands.ab3@290> INCLUDE "internal_commands.ab3"
0003BF7A <internal_commands.ab3@291> INCLUDE "internal_commands.ab3"
0003BF8F <internal_commands.ab3@292> INCLUDE "internal_commands.ab3"
0003BF90 <internal_commands.ab3@293> INCLUDE "internal_commands.ab3"
0003BF94 <internal_commands.ab3@296> INCLUDE "internal_commands.ab3"
0003BF96 <internal_commands.ab3@297> INCLUDE "internal_commands.ab3"
0003BF9D <internal_commands.ab3@298> INCLUDE "internal_commands.ab3"
0003BFB6 <internal_commands.ab3@299> INCLUDE "internal_commands.ab3"
0003BFBA <internal_commands.ab3@303> INCLUDE "internal_commands.ab3"
0003BFBC <internal_commands.ab3@304> INCLUDE "internal_commands.ab3"
0003BFC3 <internal_commands.ab3@305> INCLUDE "internal_commands.ab3"
0003BFCE <internal_commands.ab3@306> INCLUDE "internal_commands.ab3"
0003BFD2 <internal_commands.ab3@312> INCLUDE "internal_commands.ab3"
0003BFD4 <internal_commands.ab3@313> INCLUDE "internal_commands.ab3"
0003BFD9 <internal_commands.ab3@314> INCLUDE "internal_commands.ab3"
0003BFF0 <internal_commands.ab3@315> INCLUDE "internal_commands.ab3"
0003BFF4 <internal_commands.ab3@319> INCLUDE "internal_commands.ab3"
0003BFF6 <internal_commands.ab3@320> INCLUDE "internal_commands.ab3"
0003BFFA <internal_commands.ab3@321> INCLUDE "internal_commands.ab3"
0003C011 <internal_commands.ab3@322> INCLUDE "internal_commands.ab3"
0003C012 <internal_commands.ab3@323> INCLUDE "internal_commands.ab3"
0003C016 <internal_commands.ab3@326> INCLUDE "internal_commands.ab3"
0003C018 <internal_commands.ab3@327> INCLUDE "internal_commands.ab3"
0003C01D <internal_commands.ab3@328> INCLUDE "internal_commands.ab3"
0003C01E <internal_commands.ab3@329> INCLUDE "internal_commands.ab3"
0003C022 <internal_commands.ab3@333> INCLUDE "internal_commands.ab3"
0003C024 <internal_commands.ab3@334> INCLUDE "internal_commands.ab3"
0003C029 <internal_commands.ab3@335> INCLUDE "internal_commands.ab3"
0003C02D <internal_commands.ab3@336> INCLUDE "internal_commands.ab3"
0003C02E <internal_commands.ab3@337> INCLUDE "internal_commands.ab3"
0003C032 <internal_commands.ab3@340> INCLUDE "internal_commands.ab3"
0003C034 <internal_commands.ab3@341> INCLUDE "internal_commands.ab3"
0003C03B <internal_commands.ab3@342> INCLUDE "internal_commands.ab3"
0003C053 <internal_commands.ab3@343> INCLUDE "internal_commands.ab3"
0003C054 <internal_commands.ab3@344> INCLUDE "internal_commands.ab3"
0003C058 <internal_commands.ab3@347> INCLUDE "internal_commands.ab3"
0003C05A <internal_commands.ab3@348> INCLUDE "internal_commands.ab3"
0003C061 <internal_commands.ab3@349> INCLUDE "internal_commands.ab3"
0003C066 <internal_commands.ab3@350> INCLUDE "internal_commands.ab3"
0003C06A <internal_commands.ab3@354> INCLUDE "internal_commands.ab3"
0003C06C <internal_commands.ab3@355> INCLUDE "internal_commands.ab3"
0003C073 <internal_commands.ab3@356> INCLUDE "internal_commands.ab3"
0003C078 <internal_commands.ab3@357> INCLUDE "internal_commands.ab3"
0003C07C <internal_commands.ab3@361> INCLUDE "internal_commands.ab3"
0003C07E <internal_commands.ab3@362> INCLUDE "internal_commands.ab3"
0003C085 <internal_commands.ab3@363> INCLUDE "internal_commands.ab3"
0003C0A0 <internal_commands.ab3@364> INCLUDE "internal_commands.ab3"
0003C0A4 <internal_commands.ab3@368> INCLUDE "internal_commands.ab3"
0003C0A6 <internal_commands.ab3@369> INCLUDE "internal_commands.ab3"
0003C0AE <internal_commands.ab3@370> INCLUDE "internal_commands.ab3"
0003C0C7 <internal_commands.ab3@371> INCLUDE "internal_commands.ab3"
0003C0C8 <internal_commands.ab3@372> INCLUDE "internal_commands.ab3"
0003C0CC <internal_commands.ab3@375> INCLUDE "internal_commands.ab3"
0003C0CE <internal_commands.ab3@376> INCLUDE "internal_commands.ab3"
0003C0D4 <internal_commands.ab3@377> INCLUDE "internal_commands.ab3"
0003C0D5 <internal_commands.ab3@378> INCLUDE "internal_commands.ab3"
0003C0D6 <internal_commands.ab3@379> INCLUDE "internal_commands.ab3"
0003C0DA <internal_commands.ab3@382> INCLUDE "internal_commands.ab3"
0003C0DC <internal_commands.ab3@383> INCLUDE "internal_commands.ab3"
0003C0E2 <internal_commands.ab3@384> INCLUDE "internal_commands.ab3"
0003C0E3 <internal_commands.ab3@385> INCLUDE "internal_commands.ab3"
0003C0E4 <internal_commands.ab3@386> INCLUDE "internal_commands.ab3"
0003C0E8 <internal_commands.ab3@389> INCLUDE "internal_commands.ab3"
0003C0EA <internal_commands.ab3@390> INCLUDE "internal_commands.ab3"
0003C0F1 <internal_commands.ab3@391> INCLUDE "internal_commands.ab3"
0003C0F2 <internal_commands.ab3@392> INCLUDE "internal_commands.ab3"
0003C0F6 <internal_commands.ab3@396> INCLUDE "internal_commands.ab3"
0003C0F8 <internal_commands.ab3@397> INCLUDE "internal_commands.ab3"
0003C0FE <internal_commands.ab3@398> INCLUDE "internal_commands.ab3"
0003C107 <internal_commands.ab3@399> INCLUDE "internal_commands.ab3"
0003C108 <internal_commands.ab3@400> INCLUDE "internal_commands.ab3"
0003C10C <internal_commands.ab3@403> INCLUDE "internal_commands.ab3"
0003C10E <internal_commands.ab3@404> INCLUDE "internal_commands.ab3"
0003C116 <internal_commands.ab3@405> INCLUDE "internal_commands.ab3"
0003C123 <internal_commands.ab3@406> INCLUDE "internal_commands.ab3"
0003C124 <internal_commands.ab3@407> INCLUDE "internal_commands.ab3"
0003C128 <internal_commands.ab3@410> INCLUDE "internal_commands.ab3"
0003C12A <internal_commands.ab3@411> INCLUDE "internal_commands.ab3"
0003C132 <internal_commands.ab3@412> INCLUDE "internal_commands.ab3"
0003C13F <internal_commands.ab3@413> INCLUDE "internal_commands.ab3"
0003C140 <internal_commands.ab3@414> INCLUDE "internal_commands.ab3"
0003C144 <internal_commands.ab3@417> INCLUDE "internal_commands.ab3"
0003C146 <internal_commands.ab3@418> INCLUDE "internal_commands.ab3"
0003C14E <internal_commands.ab3@419> INCLUDE "internal_commands.ab3"
0003C15B <internal_commands.ab3@420> INCLUDE "internal_commands.ab3"
0003C15C <internal_commands.ab3@421> INCLUDE "internal_commands.ab3"
0003C160 <internal_commands.ab3@424> INCLUDE "internal_commands.ab3"
0003C162 <internal_commands.ab3@425> INCLUDE "internal_commands.ab3"
0003C167 <internal_commands.ab3@426> INCLUDE "internal_commands.ab3"
0003C168 <internal_commands.ab3@427> INCLUDE "internal_commands.ab3"
0003C16C <internal_commands.ab3@517> INCLUDE "internal_commands.ab3"
0003C16E <internal_commands.ab3@518> INCLUDE "internal_commands.ab3"
0003C173 <internal_commands.ab3@519> INCLUDE "internal_commands.ab3"
0003C174 <internal_commands.ab3@520> INCLUDE "internal_commands.ab3"
0003C176 <internal_commands.ab3@523> INCLUDE "internal_commands.ab3"
0003C17A <internal_commands.ab3@524> INCLUDE "internal_commands.ab3"
0003C17C <internal_commands.ab3@525> INCLUDE "internal_commands.ab3"
0003C17E <internal_commands.ab3@526> INCLUDE "internal_commands.ab3"
0003C182 <internal_commands.ab3@527> INCLUDE "internal_commands.ab3"
0003C184 <internal_commands.ab3@528> INCLUDE "internal_commands.ab3"
0003C188 <internal_commands.ab3@532> INCLUDE "internal_commands.ab3"
0003C18A <internal_commands.ab3@533> INCLUDE "internal_commands.ab3"
0003C18E <internal_commands.ab3@534> INCLUDE "internal_commands.ab3"
0003C18F <internal_commands.ab3@535> INCLUDE "internal_commands.ab3"
0003C190 <internal_commands.ab3@536> INCLUDE "internal_commands.ab3"
0003C192 <internal_commands.ab3@538> INCLUDE "internal_commands.ab3"
0003C196 <internal_commands.ab3@539> INCLUDE "internal_commands.ab3"
0003C198 <internal_commands.ab3@540> INCLUDE "internal_commands.ab3"
0003C19A <internal_commands.ab3@541> INCLUDE "internal_commands.ab3"
0003C19E <internal_commands.ab3@542> INCLUDE "internal_commands.ab3"
0003C1A0 <internal_commands.ab3@543> INCLUDE "internal_commands.ab3"
0003C1A4 <internal_commands.ab3@547> INCLUDE "internal_commands.ab3"
0003C1A6 <internal_commands.ab3@548> INCLUDE "internal_commands.ab3"
0003C1AB <internal_commands.ab3@549> INCLUDE "internal_commands.ab3"
0003C1AC <internal_commands.ab3@550> INCLUDE "internal_commands.ab3"
0003C1AE <internal_commands.ab3@553> INCLUDE "internal_commands.ab3"
0003C1B2 <internal_commands.ab3@554> INCLUDE "internal_commands.ab3"
0003C1B4 <internal_commands.ab3@555> INCLUDE "internal_commands.ab3"
0003C1B6 <internal_commands.ab3@556> INCLUDE "internal_commands.ab3"
0003C1BA <internal_commands.ab3@557> INCLUDE "internal_commands.ab3"
0003C1BC <internal_commands.ab3@558> INCLUDE "internal_commands.ab3"
0003C1C0 <internal_commands.ab3@562> INCLUDE "internal_commands.ab3"
0003C1C2 <internal_commands.ab3@563> INCLUDE "internal_commands.ab3"
0003C1C7 <internal_commands.ab3@564> INCLUDE "internal_commands.ab3"
0003C1C8 <internal_commands.ab3@565> INCLUDE "internal_commands.ab3"
0003C1CA <internal_commands.ab3@568> INCLUDE "internal_commands.ab3"
0003C1CE <internal_commands.ab3@569> INCLUDE "internal_commands.ab3"
0003C1D0 <internal_commands.ab3@570> INCLUDE "internal_commands.ab3"
0003C1D2 <internal_commands.ab3@571> INCLUDE "internal_commands.ab3"
0003C1D6 <internal_commands.ab3@572> INCLUDE "internal_commands.ab3"
0003C1D8 <internal_commands.ab3@573> INCLUDE "internal_commands.ab3"
0003C1DC <internal_commands.ab3@577> INCLUDE "internal_commands.ab3"
0003C1DE <internal_commands.ab3@578> INCLUDE "internal_commands.ab3"
0003C1E3 <internal_commands.ab3@579> INCLUDE "internal_commands.ab3"
0003C1E4 <internal_commands.ab3@580> INCLUDE "internal_commands.ab3"
0003C1E6 <internal_commands.ab3@583> INCLUDE "internal_commands.ab3"
0003C1EA <internal_commands.ab3@584> INCLUDE "internal_commands.ab3"
0003C1EC <internal_commands.ab3@585> INCLUDE "internal_commands.ab3"
0003C1EE <internal_commands.ab3@586> INCLUDE "internal_commands.ab3"
0003C1F2 <internal_commands.ab3@587> INCLUDE "internal_commands.ab3"
0003C1F4 <internal_commands.ab3@588> INCLUDE "internal_commands.ab3"
0003C1F8 <internal_commands.ab3@592> INCLUDE "internal_commands.ab3"
0003C1FA <internal_commands.ab3@593> INCLUDE "internal_commands.ab3"
0003C1FF <internal_commands.ab3@594> INCLUDE "internal_commands.ab3"
0003C200 <internal_commands.ab3@595> INCLUDE "internal_commands.ab3"
0003C202 <internal_commands.ab3@598> INCLUDE "internal_commands.ab3"
0003C206 <internal_commands.ab3@599> INCLUDE "internal_commands.ab3"
0003C208 <internal_commands.ab3@600> INCLUDE "internal_commands.ab3"
0003C20A <internal_commands.ab3@601> INCLUDE "internal_commands.ab3"
0003C20E <internal_commands.ab3@602> INCLUDE "internal_commands.ab3"
0003C210 <internal_commands.ab3@603> INCLUDE "internal_commands.ab3"
0003C214 <internal_commands.ab3@607> INCLUDE "internal_commands.ab3"
0003C216 <internal_commands.ab3@608> INCLUDE "internal_commands.ab3"
0003C21A <internal_commands.ab3@609> INCLUDE "internal_commands.ab3"
0003C21B <internal_commands.ab3@610> INCLUDE "internal_commands.ab3"
0003C21C <internal_commands.ab3@611> INCLUDE "internal_commands.ab3"
0003C21E <internal_commands.ab3@613> INCLUDE "internal_commands.ab3"
0003C222 <internal_commands.ab3@614> INCLUDE "internal_commands.ab3"
0003C224 <internal_commands.ab3@615> INCLUDE "internal_commands.ab3"
0003C226 <internal_commands.ab3@616> INCLUDE "internal_commands.ab3"
0003C22A <internal_commands.ab3@617> INCLUDE "internal_commands.ab3"
0003C22C <internal_commands.ab3@618> INCLUDE "internal_commands.ab3"
0003C230 <internal_commands.ab3@622> INCLUDE "internal_commands.ab3"
0003C232 <internal_commands.ab3@623> INCLUDE "internal_commands.ab3"
0003C237 <internal_commands.ab3@624> INCLUDE "internal_commands.ab3"
0003C238 <internal_commands.ab3@625> INCLUDE "internal_commands.ab3"
0003C23A <internal_commands.ab3@628> INCLUDE "internal_commands.ab3"
0003C23E <internal_commands.ab3@629> INCLUDE "internal_commands.ab3"
0003C240 <internal_commands.ab3@630> INCLUDE "internal_commands.ab3"
0003C242 <internal_commands.ab3@631> INCLUDE "internal_commands.ab3"
0003C246 <internal_commands.ab3@632> INCLUDE "internal_commands.ab3"
0003C248 <internal_commands.ab3@633> INCLUDE "internal_commands.ab3"
0003C24C <internal_commands.ab3@637> INCLUDE "internal_commands.ab3"
0003C24E <internal_commands.ab3@638> INCLUDE "internal_commands.ab3"
0003C252 <internal_commands.ab3@639> INCLUDE "internal_commands.ab3"
0003C253 <internal_commands.ab3@640> INCLUDE "internal_commands.ab3"
0003C254 <internal_commands.ab3@641> INCLUDE "internal_commands.ab3"
0003C256 <internal_commands.ab3@643> INCLUDE "internal_commands.ab3"
0003C25A <internal_commands.ab3@644> INCLUDE "internal_commands.ab3"
0003C25C <internal_commands.ab3@645> INCLUDE "internal_commands.ab3"
0003C25E <internal_commands.ab3@646> INCLUDE "internal_commands.ab3"
0003C262 <internal_commands.ab3@647> INCLUDE "internal_commands.ab3"
0003C264 <internal_commands.ab3@648> INCLUDE "internal_commands.ab3"
0003C268 <internal_commands.ab3@652> INCLUDE "internal_commands.ab3"
0003C26A <internal_commands.ab3@653> INCLUDE "internal_commands.ab3"
0003C26E <internal_commands.ab3@654> INCLUDE "internal_commands.ab3"
0003C26F <internal_commands.ab3@655> INCLUDE "internal_commands.ab3"
0003C270 <internal_commands.ab3@656> INCLUDE "internal_commands.ab3"
0003C272 <internal_commands.ab3@658> INCLUDE "internal_commands.ab3"
0003C276 <internal_commands.ab3@659> INCLUDE "internal_commands.ab3"
0003C278 <internal_commands.ab3@660> INCLUDE "internal_commands.ab3"
0003C27A <internal_commands.ab3@661> INCLUDE "internal_commands.ab3"
0003C27E <internal_commands.ab3@662> INCLUDE "internal_commands.ab3"
0003C280 <internal_commands.ab3@663> INCLUDE "internal_commands.ab3"
0003C284 <internal_commands.ab3@667> INCLUDE "internal_commands.ab3"
0003C286 <internal_commands.ab3@668> INCLUDE "internal_commands.ab3"
0003C28A <internal_commands.ab3@669> INCLUDE "internal_commands.ab3"
0003C28B <internal_commands.ab3@670> INCLUDE "internal_commands.ab3"
0003C28C <internal_commands.ab3@671> INCLUDE "internal_commands.ab3"
0003C28E <internal_commands.ab3@673> INCLUDE "internal_commands.ab3"
0003C292 <internal_commands.ab3@674> INCLUDE "internal_commands.ab3"
0003C294 <internal_commands.ab3@675> INCLUDE "internal_commands.ab3"
0003C296 <internal_commands.ab3@676> INCLUDE "internal_commands.ab3"
0003C29A <internal_commands.ab3@677> INCLUDE "internal_commands.ab3"
0003C29C <internal_commands.ab3@678> INCLUDE "internal_commands.ab3"
0003C2A0 <internal_commands.ab3@682> INCLUDE "internal_commands.ab3"
0003C2A2 <internal_commands.ab3@683> INCLUDE "internal_commands.ab3"
0003C2A6 <internal_commands.ab3@684> INCLUDE "internal_commands.ab3"
0003C2A7 <internal_commands.ab3@685> INCLUDE "internal_commands.ab3"
0003C2A8 <internal_commands.ab3@686> INCLUDE "internal_commands.ab3"
0003C2AA <internal_commands.ab3@688> INCLUDE "internal_commands.ab3"
0003C2AE <internal_commands.ab3@689> INCLUDE "internal_commands.ab3"
0003C2B0 <internal_commands.ab3@690> INCLUDE "internal_commands.ab3"
0003C2B2 <internal_commands.ab3@691> INCLUDE "internal_commands.ab3"
0003C2B6 <internal_commands.ab3@692> INCLUDE "internal_commands.ab3"
0003C2B8 <internal_commands.ab3@693> INCLUDE "internal_commands.ab3"
0003C2BC <internal_commands.ab3@697> INCLUDE "internal_commands.ab3"
0003C2BE <internal_commands.ab3@698> INCLUDE "internal_commands.ab3"
0003C2C2 <internal_commands.ab3@699> INCLUDE "internal_commands.ab3"
0003C2C3 <internal_commands.ab3@700> INCLUDE "internal_commands.ab3"
0003C2C4 <internal_commands.ab3@701> INCLUDE "internal_commands.ab3"
0003C2C6 <internal_commands.ab3@703> INCLUDE "internal_commands.ab3"
0003C2CA <internal_commands.ab3@704> INCLUDE "internal_commands.ab3"
0003C2CC <internal_commands.ab3@705> INCLUDE "internal_commands.ab3"
0003C2CE <internal_commands.ab3@706> INCLUDE "internal_commands.ab3"
0003C2D2 <internal_commands.ab3@707> INCLUDE "internal_commands.ab3"
0003C2D4 <internal_commands.ab3@708> INCLUDE "internal_commands.ab3"
0003C2D8 <internal_commands.ab3@712> INCLUDE "internal_commands.ab3"
0003C2DA <internal_commands.ab3@713> INCLUDE "internal_commands.ab3"
0003C2DE <internal_commands.ab3@714> INCLUDE "internal_commands.ab3"
0003C2DF <internal_commands.ab3@715> INCLUDE "internal_commands.ab3"
0003C2E0 <internal_commands.ab3@716> INCLUDE "internal_commands.ab3"
0003C2E2 <internal_commands.ab3@718> INCLUDE "internal_commands.ab3"
0003C2E6 <internal_commands.ab3@719> INCLUDE "internal_commands.ab3"
0003C2E8 <internal_commands.ab3@720> INCLUDE "internal_commands.ab3"
0003C2EA <internal_commands.ab3@721> INCLUDE "internal_commands.ab3"
0003C2EE <internal_commands.ab3@722> INCLUDE "internal_commands.ab3"
0003C2F0 <internal_commands.ab3@723> INCLUDE "internal_commands.ab3"
0003C2F4 <internal_commands.ab3@727> INCLUDE "internal_commands.ab3"
0003C2F6 <internal_commands.ab3@728> INCLUDE "internal_commands.ab3"
0003C2FA <internal_commands.ab3@729> INCLUDE "internal_commands.ab3"
0003C2FB <internal_commands.ab3@730> INCLUDE "internal_commands.ab3"
0003C2FC <internal_commands.ab3@731> INCLUDE "internal_commands.ab3"
0003C2FE <internal_commands.ab3@733> INCLUDE "internal_commands.ab3"
0003C302 <internal_commands.ab3@734> INCLUDE "internal_commands.ab3"
0003C304 <internal_commands.ab3@735> INCLUDE "internal_commands.ab3"
0003C306 <internal_commands.ab3@736> INCLUDE "internal_commands.ab3"
0003C30A <internal_commands.ab3@737> INCLUDE "internal_commands.ab3"
0003C30C <internal_commands.ab3@738> INCLUDE "internal_commands.ab3"
0003C310 <internal_commands.ab3@742> INCLUDE "internal_commands.ab3"
0003C312 <internal_commands.ab3@743> INCLUDE "internal_commands.ab3"
0003C316 <internal_commands.ab3@744> INCLUDE "internal_commands.ab3"
0003C317 <internal_commands.ab3@745> INCLUDE "internal_commands.ab3"
0003C318 <internal_commands.ab3@746> INCLUDE "internal_commands.ab3"
0003C31A <internal_commands.ab3@748> INCLUDE "internal_commands.ab3"
0003C31E <internal_commands.ab3@749> INCLUDE "internal_commands.ab3"
0003C320 <internal_commands.ab3@750> INCLUDE "internal_commands.ab3"
0003C322 <internal_commands.ab3@751> INCLUDE "internal_commands.ab3"
0003C326 <internal_commands.ab3@752> INCLUDE "internal_commands.ab3"
0003C328 <internal_commands.ab3@753> INCLUDE "internal_commands.ab3"
0003C32C <internal_commands.ab3@757> INCLUDE "internal_commands.ab3"
0003C32E <internal_commands.ab3@758> INCLUDE "internal_commands.ab3"
0003C332 <internal_commands.ab3@759> INCLUDE "internal_commands.ab3"
0003C333 <internal_commands.ab3@760> INCLUDE "internal_commands.ab3"
0003C334 <internal_commands.ab3@761> INCLUDE "internal_commands.ab3"
0003C336 <internal_commands.ab3@763> INCLUDE "internal_commands.ab3"
0003C33A <internal_commands.ab3@764> INCLUDE "internal_commands.ab3"
0003C33C <internal_commands.ab3@765> INCLUDE "internal_commands.ab3"
0003C33E <internal_commands.ab3@766> INCLUDE "internal_commands.ab3"
0003C342 <internal_commands.ab3@767> INCLUDE "internal_commands.ab3"
0003C344 <internal_commands.ab3@768> INCLUDE "internal_commands.ab3"
0003C348 <internal_commands.ab3@772> INCLUDE "internal_commands.ab3"
0003C34A <internal_commands.ab3@773> INCLUDE "internal_commands.ab3"
0003C34E <internal_commands.ab3@774> INCLUDE "internal_commands.ab3"
0003C34F <internal_commands.ab3@775> INCLUDE "internal_commands.ab3"
0003C350 <internal_commands.ab3@776> INCLUDE "internal_commands.ab3"
0003C352 <internal_commands.ab3@778> INCLUDE "internal_commands.ab3"
0003C356 <internal_commands.ab3@779> INCLUDE "internal_commands.ab3"
0003C358 <internal_commands.ab3@780> INCLUDE "internal_commands.ab3"
0003C35A <internal_commands.ab3@781> INCLUDE "internal_commands.ab3"
0003C35E <internal_commands.ab3@782> INCLUDE "internal_commands.ab3"
0003C360 <internal_commands.ab3@783> INCLUDE "internal_commands.ab3"
0003C364 <internal_commands.ab3@787> INCLUDE "internal_commands.ab3"
0003C366 <internal_commands.ab3@788> INCLUDE "internal_commands.ab3"
0003C36A <internal_commands.ab3@789> INCLUDE "internal_commands.ab3"
0003C36B <internal_commands.ab3@790> INCLUDE "internal_commands.ab3"
0003C36C <internal_commands.ab3@791> INCLUDE "internal_commands.ab3"
0003C36E <internal_commands.ab3@793> INCLUDE "internal_commands.ab3"
0003C372 <internal_commands.ab3@794> INCLUDE "internal_commands.ab3"
0003C374 <internal_commands.ab3@795> INCLUDE "internal_commands.ab3"
0003C376 <internal_commands.ab3@796> INCLUDE "internal_commands.ab3"
0003C37A <internal_commands.ab3@797> INCLUDE "internal_commands.ab3"
0003C37C <internal_commands.ab3@798> INCLUDE "internal_commands.ab3"
0003C380 <internal_commands.ab3@802> INCLUDE "internal_commands.ab3"
0003C382 <internal_commands.ab3@803> INCLUDE "internal_commands.ab3"
0003C386 <internal_commands.ab3@804> INCLUDE "internal_commands.ab3"
0003C387 <internal_commands.ab3@805> INCLUDE "internal_commands.ab3"
0003C388 <internal_commands.ab3@806> INCLUDE "internal_commands.ab3"
0003C38A <internal_commands.ab3@808> INCLUDE "internal_commands.ab3"
0003C38E <internal_commands.ab3@809> INCLUDE "internal_commands.ab3"
0003C390 <internal_commands.ab3@810> INCLUDE "internal_commands.ab3"
0003C392 <internal_commands.ab3@811> INCLUDE "internal_commands.ab3"
0003C396 <internal_commands.ab3@812> INCLUDE "internal_commands.ab3"
0003C398 <internal_commands.ab3@813> INCLUDE "internal_commands.ab3"
0003C39C <internal_commands.ab3@817> INCLUDE "internal_commands.ab3"
0003C39E <internal_commands.ab3@818> INCLUDE "internal_commands.ab3"
0003C3A2 <internal_commands.ab3@819> INCLUDE "internal_commands.ab3"
0003C3A3 <internal_commands.ab3@820> INCLUDE "internal_commands.ab3"
0003C3A4 <internal_commands.ab3@821> INCLUDE "internal_commands.ab3"
0003C3A6 <internal_commands.ab3@823> INCLUDE "internal_commands.ab3"
0003C3AA <internal_commands.ab3@824> INCLUDE "internal_commands.ab3"
0003C3AC <internal_commands.ab3@825> INCLUDE "internal_commands.ab3"
0003C3AE <internal_commands.ab3@826> INCLUDE "internal_commands.ab3"
0003C3B2 <internal_commands.ab3@827> INCLUDE "internal_commands.ab3"
0003C3B4 <internal_commands.ab3@828> INCLUDE "internal_commands.ab3"
0003C3B8 <internal_commands.ab3@832> INCLUDE "internal_commands.ab3"
0003C3BA <internal_commands.ab3@833> INCLUDE "internal_commands.ab3"
0003C3BE <internal_commands.ab3@834> INCLUDE "internal_commands.ab3"
0003C3BF <internal_commands.ab3@835> INCLUDE "internal_commands.ab3"
0003C3C0 <internal_commands.ab3@836> INCLUDE "internal_commands.ab3"
0003C3C2 <internal_commands.ab3@838> INCLUDE "internal_commands.ab3"
0003C3C6 <internal_commands.ab3@839> INCLUDE "internal_commands.ab3"
0003C3C8 <internal_commands.ab3@840> INCLUDE "internal_commands.ab3"
0003C3CA <internal_commands.ab3@841> INCLUDE "internal_commands.ab3"
0003C3CE <internal_commands.ab3@842> INCLUDE "internal_commands.ab3"
0003C3D0 <internal_commands.ab3@843> INCLUDE "internal_commands.ab3"
0003C3D4 <internal_commands.ab3@847> INCLUDE "internal_commands.ab3"
0003C3D6 <internal_commands.ab3@848> INCLUDE "internal_commands.ab3"
0003C3DA <internal_commands.ab3@849> INCLUDE "internal_commands.ab3"
0003C3DB <internal_commands.ab3@850> INCLUDE "internal_commands.ab3"
0003C3DC <internal_commands.ab3@851> INCLUDE "internal_commands.ab3"
0003C3DE <internal_commands.ab3@853> INCLUDE "internal_commands.ab3"
0003C3E2 <internal_commands.ab3@854> INCLUDE "internal_commands.ab3"
0003C3E4 <internal_commands.ab3@855> INCLUDE "internal_commands.ab3"
0003C3E6 <internal_commands.ab3@856> INCLUDE "internal_commands.ab3"
0003C3EA <internal_commands.ab3@857> INCLUDE "internal_commands.ab3"
0003C3EC <internal_commands.ab3@858> INCLUDE "internal_commands.ab3"
0003C3F0 <internal_commands.ab3@862> INCLUDE "internal_commands.ab3"
0003C3F2 <internal_commands.ab3@863> INCLUDE "internal_commands.ab3"
0003C3F6 <internal_commands.ab3@864> INCLUDE "internal_commands.ab3"
0003C3F7 <internal_commands.ab3@865> INCLUDE "internal_commands.ab3"
0003C3F8 <internal_commands.ab3@866> INCLUDE "internal_commands.ab3"
0003C3FA <internal_commands.ab3@868> INCLUDE "internal_commands.ab3"
0003C3FE <internal_commands.ab3@869> INCLUDE "internal_commands.ab3"
0003C400 <internal_commands.ab3@870> INCLUDE "internal_commands.ab3"
0003C402 <internal_commands.ab3@871> INCLUDE "internal_commands.ab3"
0003C406 <internal_commands.ab3@872> INCLUDE "internal_commands.ab3"
0003C408 <internal_commands.ab3@873> INCLUDE "internal_commands.ab3"
0003C40C <internal_commands.ab3@877> INCLUDE "internal_commands.ab3"
0003C40E <internal_commands.ab3@878> INCLUDE "internal_commands.ab3"
0003C413 <internal_commands.ab3@879> INCLUDE "internal_commands.ab3"
0003C414 <internal_commands.ab3@880> INCLUDE "internal_commands.ab3"
0003C416 <internal_commands.ab3@883> INCLUDE "internal_commands.ab3"
0003C41A <internal_commands.ab3@884> INCLUDE "internal_commands.ab3"
0003C41C <internal_commands.ab3@885> INCLUDE "internal_commands.ab3"
0003C41E <internal_commands.ab3@886> INCLUDE "internal_commands.ab3"
0003C422 <internal_commands.ab3@887> INCLUDE "internal_commands.ab3"
0003C424 <internal_commands.ab3@888> INCLUDE "internal_commands.ab3"
0003C428 <internal_commands.ab3@892> INCLUDE "internal_commands.ab3"
0003C42A <internal_commands.ab3@893> INCLUDE "internal_commands.ab3"
0003C42F <internal_commands.ab3@894> INCLUDE "internal_commands.ab3"
0003C430 <internal_commands.ab3@895> INCLUDE "internal_commands.ab3"
0003C432 <internal_commands.ab3@898> INCLUDE "internal_commands.ab3"
0003C436 <internal_commands.ab3@899> INCLUDE "internal_commands.ab3"
0003C438 <internal_commands.ab3@900> INCLUDE "internal_commands.ab3"
0003C43A <internal_commands.ab3@901> INCLUDE "internal_commands.ab3"
0003C43E <internal_commands.ab3@902> INCLUDE "internal_commands.ab3"
0003C440 <internal_commands.ab3@903> INCLUDE "internal_commands.ab3"
0003C444 <internal_commands.ab3@907> INCLUDE "internal_commands.ab3"
0003C446 <internal_commands.ab3@908> INCLUDE "internal_commands.ab3"
0003C44B <internal_commands.ab3@909> INCLUDE "internal_commands.ab3"
0003C44C <internal_commands.ab3@910> INCLUDE "internal_commands.ab3"
0003C44E <internal_commands.ab3@913> INCLUDE "internal_commands.ab3"
0003C452 <internal_commands.ab3@914> INCLUDE "internal_commands.ab3"
0003C454 <internal_commands.ab3@915> INCLUDE "internal_commands.ab3"
0003C456 <internal_commands.ab3@916> INCLUDE "internal_commands.ab3"
0003C45A <internal_commands.ab3@917> INCLUDE "internal_commands.ab3"
0003C45C <internal_commands.ab3@918> INCLUDE "internal_commands.ab3"
0003C460 <internal_commands.ab3@922> INCLUDE "internal_commands.ab3"
0003C462 <internal_commands.ab3@923> INCLUDE "internal_commands.ab3"
0003C467 <internal_commands.ab3@924> INCLUDE "internal_commands.ab3"
0003C468 <internal_commands.ab3@925> INCLUDE "internal_commands.ab3"
0003C46A <internal_commands.ab3@928> INCLUDE "internal_commands.ab3"
0003C46E <internal_commands.ab3@929> INCLUDE "internal_commands.ab3"
0003C470 <internal_commands.ab3@930> INCLUDE "internal_commands.ab3"
0003C472 <internal_commands.ab3@931> INCLUDE "internal_commands.ab3"
0003C476 <internal_commands.ab3@932> INCLUDE "internal_commands.ab3"
0003C478 <internal_commands.ab3@933> INCLUDE "internal_commands.ab3"
0003C47C <internal_commands.ab3@937> INCLUDE "internal_commands.ab3"
0003C47E <internal_commands.ab3@938> INCLUDE "internal_commands.ab3"
0003C482 <internal_commands.ab3@939> INCLUDE "internal_commands.ab3"
0003C483 <internal_commands.ab3@940> INCLUDE "internal_commands.ab3"
0003C484 <internal_commands.ab3@941> INCLUDE "internal_commands.ab3"
0003C486 <internal_commands.ab3@943> INCLUDE "internal_commands.ab3"
0003C48A <internal_commands.ab3@944> INCLUDE "internal_commands.ab3"
0003C48C <internal_commands.ab3@945> INCLUDE "internal_commands.ab3"
0003C48E <internal_commands.ab3@946> INCLUDE "internal_commands.ab3"
0003C492 <internal_commands.ab3@947> INCLUDE "internal_commands.ab3"
0003C494 <internal_commands.ab3@948> INCLUDE "internal_commands.ab3"
0003C498 <internal_commands.ab3@952> INCLUDE "internal_commands.ab3"
0003C49A <internal_commands.ab3@953> INCLUDE "internal_commands.ab3"
0003C49E <internal_commands.ab3@954> INCLUDE "internal_commands.ab3"
0003C49F <internal_commands.ab3@955> INCLUDE "internal_commands.ab3"
0003C4A0 <internal_commands.ab3@956> INCLUDE "internal_commands.ab3"
0003C4A2 <internal_commands.ab3@958> INCLUDE "internal_commands.ab3"
0003C4A6 <internal_commands.ab3@959> INCLUDE "internal_commands.ab3"
0003C4A8 <internal_commands.ab3@960> INCLUDE "internal_commands.ab3"
0003C4AA <internal_commands.ab3@961> INCLUDE "internal_commands.ab3"
0003C4AE <internal_commands.ab3@962> INCLUDE "internal_commands.ab3"
0003C4B0 <internal_commands.ab3@963> INCLUDE "internal_commands.ab3"
0003C4B4 <internal_commands.ab3@967> INCLUDE "internal_commands.ab3"
0003C4B6 <internal_commands.ab3@968> INCLUDE "internal_commands.ab3"
0003C4BA <internal_commands.ab3@969> INCLUDE "internal_commands.ab3"
0003C4BB <internal_commands.ab3@970> INCLUDE "internal_commands.ab3"
0003C4BC <internal_commands.ab3@971> INCLUDE "internal_commands.ab3"
0003C4BE <internal_commands.ab3@973> INCLUDE "internal_commands.ab3"
0003C4C2 <internal_commands.ab3@974> INCLUDE "internal_commands.ab3"
0003C4C4 <internal_commands.ab3@975> INCLUDE "internal_commands.ab3"
0003C4C6 <internal_commands.ab3@976> INCLUDE "internal_commands.ab3"
0003C4CA <internal_commands.ab3@977> INCLUDE "internal_commands.ab3"
0003C4CC <internal_commands.ab3@978> INCLUDE "internal_commands.ab3"
0003C4D0 <internal_commands.ab3@982> INCLUDE "internal_commands.ab3"
0003C4D2 <internal_commands.ab3@983> INCLUDE "internal_commands.ab3"
0003C4D6 <internal_commands.ab3@984> INCLUDE "internal_commands.ab3"
0003C4D7 <internal_commands.ab3@985> INCLUDE "internal_commands.ab3"
0003C4D8 <internal_commands.ab3@986> INCLUDE "internal_commands.ab3"
0003C4DA <internal_commands.ab3@988> INCLUDE "internal_commands.ab3"
0003C4DE <internal_commands.ab3@989> INCLUDE "internal_commands.ab3"
0003C4E0 <internal_commands.ab3@990> INCLUDE "internal_commands.ab3"
0003C4E2 <internal_commands.ab3@991> INCLUDE "internal_commands.ab3"
0003C4E6 <internal_commands.ab3@992> INCLUDE "internal_commands.ab3"
0003C4E8 <internal_commands.ab3@993> INCLUDE "internal_commands.ab3"
0003C4EC <internal_commands.ab3@997> INCLUDE "internal_commands.ab3"
0003C4EE <internal_commands.ab3@998> INCLUDE "internal_commands.ab3"
0003C4F2 <internal_commands.ab3@999> INCLUDE "internal_commands.ab3"
0003C4F3 <internal_commands.ab3@1000> INCLUDE "internal_commands.ab3"
0003C4F4 <internal_commands.ab3@1001> INCLUDE "internal_commands.ab3"
0003C4F6 <internal_commands.ab3@1003> INCLUDE "internal_commands.ab3"
0003C4FA <internal_commands.ab3@1004> INCLUDE "internal_commands.ab3"
0003C4FC <internal_commands.ab3@1005> INCLUDE "internal_commands.ab3"
0003C4FE <internal_commands.ab3@1006> INCLUDE "internal_commands.ab3"
0003C502 <internal_commands.ab3@1007> INCLUDE "internal_commands.ab3"
0003C504 <internal_commands.ab3@1008> INCLUDE "internal_commands.ab3"
0003C508 <internal_commands.ab3@1012> INCLUDE "internal_commands.ab3"
0003C50A <internal_commands.ab3@1013> INCLUDE "internal_commands.ab3"
0003C50F <internal_commands.ab3@1014> INCLUDE "internal_commands.ab3"
0003C510 <internal_commands.ab3@1015> INCLUDE "internal_commands.ab3"
0003C512 <internal_commands.ab3@1018> INCLUDE "internal_commands.ab3"
0003C516 <internal_commands.ab3@1019> INCLUDE "internal_commands.ab3"
0003C518 <internal_commands.ab3@1020> INCLUDE "internal_commands.ab3"
0003C51A <internal_commands.ab3@1021> INCLUDE "internal_commands.ab3"
0003C51E <internal_commands.ab3@1022> INCLUDE "internal_commands.ab3"
0003C520 <internal_commands.ab3@1023> INCLUDE "internal_commands.ab3"
0003C524 <internal_commands.ab3@1027> INCLUDE "internal_commands.ab3"
0003C526 <internal_commands.ab3@1028> INCLUDE "internal_commands.ab3"
0003C52B <internal_commands.ab3@1029> INCLUDE "internal_commands.ab3"
0003C52C <internal_commands.ab3@1030> INCLUDE "internal_commands.ab3"
0003C52E <internal_commands.ab3@1033> INCLUDE "internal_commands.ab3"
0003C532 <internal_commands.ab3@1034> INCLUDE "internal_commands.ab3"
0003C534 <internal_commands.ab3@1035> INCLUDE "internal_commands.ab3"
0003C536 <internal_commands.ab3@1036> INCLUDE "internal_commands.ab3"
0003C53A <internal_commands.ab3@1037> INCLUDE "internal_commands.ab3"
0003C53C <internal_commands.ab3@1038> INCLUDE "internal_commands.ab3"
0003C540 <internal_commands.ab3@1042> INCLUDE "internal_commands.ab3"
0003C542 <internal_commands.ab3@1043> INCLUDE "internal_commands.ab3"
0003C547 <internal_commands.ab3@1044> INCLUDE "internal_commands.ab3"
0003C548 <internal_commands.ab3@1045> INCLUDE "internal_commands.ab3"
0003C54A <internal_commands.ab3@1048> INCLUDE "internal_commands.ab3"
0003C54E <internal_commands.ab3@1049> INCLUDE "internal_commands.ab3"
0003C550 <internal_commands.ab3@1050> INCLUDE "internal_commands.ab3"
0003C552 <internal_commands.ab3@1051> INCLUDE "internal_commands.ab3"
0003C556 <internal_commands.ab3@1052> INCLUDE "internal_commands.ab3"
0003C558 <internal_commands.ab3@1053> INCLUDE "internal_commands.ab3"
0003C55C <internal_commands.ab3@1057> INCLUDE "internal_commands.ab3"
0003C55E <internal_commands.ab3@1058> INCLUDE "internal_commands.ab3"
0003C563 <internal_commands.ab3@1059> INCLUDE "internal_commands.ab3"
0003C564 <internal_commands.ab3@1060> INCLUDE "internal_commands.ab3"
0003C566 <internal_commands.ab3@1063> INCLUDE "internal_commands.ab3"
0003C56A <internal_commands.ab3@1064> INCLUDE "internal_commands.ab3"
0003C56C <internal_commands.ab3@1065> INCLUDE "internal_commands.ab3"
0003C56E <internal_commands.ab3@1066> INCLUDE "internal_commands.ab3"
0003C572 <internal_commands.ab3@1067> INCLUDE "internal_commands.ab3"
0003C574 <internal_commands.ab3@1068> INCLUDE "internal_commands.ab3"
0003C578 <internal_commands.ab3@1072> INCLUDE "internal_commands.ab3"
0003C57A <internal_commands.ab3@1073> INCLUDE "internal_commands.ab3"
0003C57F <internal_commands.ab3@1074> INCLUDE "internal_commands.ab3"
0003C580 <internal_commands.ab3@1075> INCLUDE "internal_commands.ab3"
0003C582 <internal_commands.ab3@1078> INCLUDE "internal_commands.ab3"
0003C586 <internal_commands.ab3@1079> INCLUDE "internal_commands.ab3"
0003C588 <internal_commands.ab3@1080> INCLUDE "internal_commands.ab3"
0003C58A <internal_commands.ab3@1081> INCLUDE "internal_commands.ab3"
0003C58E <internal_commands.ab3@1082> INCLUDE "internal_commands.ab3"
0003C590 <internal_commands.ab3@1083> INCLUDE "internal_commands.ab3"
0003C594 <internal_commands.ab3@1087> INCLUDE "internal_commands.ab3"
0003C596 <internal_commands.ab3@1088> INCLUDE "internal_commands.ab3"
0003C59B <internal_commands.ab3@1089> INCLUDE "internal_commands.ab3"
0003C59C <internal_commands.ab3@1090> INCLUDE "internal_commands.ab3"
0003C59E <internal_commands.ab3@1093> INCLUDE "internal_commands.ab3"
0003C5A2 <internal_commands.ab3@1094> INCLUDE "internal_commands.ab3"
0003C5A4 <internal_commands.ab3@1095> INCLUDE "internal_commands.ab3"
0003C5A6 <internal_commands.ab3@1096> INCLUDE "internal_commands.ab3"
0003C5AA <internal_commands.ab3@1097> INCLUDE "internal_commands.ab3"
0003C5AC <internal_commands.ab3@1098> INCLUDE "internal_commands.ab3"
0003C5B0 <internal_commands.ab3@1102> INCLUDE "internal_commands.ab3"
0003C5B2 <internal_commands.ab3@1103> INCLUDE "internal_commands.ab3"
0003C5B7 <internal_commands.ab3@1104> INCLUDE "internal_commands.ab3"
0003C5B8 <internal_commands.ab3@1105> INCLUDE "internal_commands.ab3"
0003C5BA <internal_commands.ab3@1108> INCLUDE "internal_commands.ab3"
0003C5BE <internal_commands.ab3@1109> INCLUDE "internal_commands.ab3"
0003C5C0 <internal_commands.ab3@1110> INCLUDE "internal_commands.ab3"
0003C5C2 <internal_commands.ab3@1111> INCLUDE "internal_commands.ab3"
0003C5C6 <internal_commands.ab3@1112> INCLUDE "internal_commands.ab3"
0003C5C8 <internal_commands.ab3@1113> INCLUDE "internal_commands.ab3"
0003C5CC <internal_commands.ab3@1117> INCLUDE "internal_commands.ab3"
0003C5CE <internal_commands.ab3@1118> INCLUDE "internal_commands.ab3"
0003C5D3 <internal_commands.ab3@1119> INCLUDE "internal_commands.ab3"
0003C5D4 <internal_commands.ab3@1120> INCLUDE "internal_commands.ab3"
0003C5D6 <internal_commands.ab3@1123> INCLUDE "internal_commands.ab3"
0003C5DA <internal_commands.ab3@1124> INCLUDE "internal_commands.ab3"
0003C5DC <internal_commands.ab3@1125> INCLUDE "internal_commands.ab3"
0003C5DE <internal_commands.ab3@1126> INCLUDE "internal_commands.ab3"
0003C5E2 <internal_commands.ab3@1127> INCLUDE "internal_commands.ab3"
0003C5E4 <internal_commands.ab3@1128> INCLUDE "internal_commands.ab3"
0003C5E8 <internal_commands.ab3@1132> INCLUDE "internal_commands.ab3"
0003C5EA <internal_commands.ab3@1133> INCLUDE "internal_commands.ab3"
0003C5EF <internal_commands.ab3@1134> INCLUDE "internal_commands.ab3"
0003C5F0 <internal_commands.ab3@1135> INCLUDE "internal_commands.ab3"
0003C5F2 <internal_commands.ab3@1138> INCLUDE "internal_commands.ab3"
0003C5F6 <internal_commands.ab3@1139> INCLUDE "internal_commands.ab3"
0003C5F8 <internal_commands.ab3@1140> INCLUDE "internal_commands.ab3"
0003C5FA <internal_commands.ab3@1141> INCLUDE "internal_commands.ab3"
0003C5FE <internal_commands.ab3@1142> INCLUDE "internal_commands.ab3"
0003C600 <internal_commands.ab3@1143> INCLUDE "internal_commands.ab3"
0003C604 <internal_commands.ab3@1147> INCLUDE "internal_commands.ab3"
0003C606 <internal_commands.ab3@1148> INCLUDE "internal_commands.ab3"
0003C60B <internal_commands.ab3@1149> INCLUDE "internal_commands.ab3"
0003C60C <internal_commands.ab3@1150> INCLUDE "internal_commands.ab3"
0003C60E <internal_commands.ab3@1153> INCLUDE "internal_commands.ab3"
0003C612 <internal_commands.ab3@1154> INCLUDE "internal_commands.ab3"
0003C614 <internal_commands.ab3@1155> INCLUDE "internal_commands.ab3"
0003C616 <internal_commands.ab3@1156> INCLUDE "internal_commands.ab3"
0003C61A <internal_commands.ab3@1157> INCLUDE "internal_commands.ab3"
0003C61C <internal_commands.ab3@1158> INCLUDE "internal_commands.ab3"
0003C620 <internal_commands.ab3@1162> INCLUDE "internal_commands.ab3"
0003C622 <internal_commands.ab3@1163> INCLUDE "internal_commands.ab3"
0003C627 <internal_commands.ab3@1164> INCLUDE "internal_commands.ab3"
0003C628 <internal_commands.ab3@1165> INCLUDE "internal_commands.ab3"
0003C62A <internal_commands.ab3@1168> INCLUDE "internal_commands.ab3"
0003C62E <internal_commands.ab3@1169> INCLUDE "internal_commands.ab3"
0003C630 <internal_commands.ab3@1170> INCLUDE "internal_commands.ab3"
0003C632 <internal_commands.ab3@1171> INCLUDE "internal_commands.ab3"
0003C636 <internal_commands.ab3@1172> INCLUDE "internal_commands.ab3"
0003C638 <internal_commands.ab3@1173> INCLUDE "internal_commands.ab3"
0003C63C <internal_commands.ab3@1177> INCLUDE "internal_commands.ab3"
0003C63E <internal_commands.ab3@1178> INCLUDE "internal_commands.ab3"
0003C643 <internal_commands.ab3@1179> INCLUDE "internal_commands.ab3"
0003C644 <internal_commands.ab3@1180> INCLUDE "internal_commands.ab3"
0003C646 <internal_commands.ab3@1183> INCLUDE "internal_commands.ab3"
0003C64A <internal_commands.ab3@1184> INCLUDE "internal_commands.ab3"
0003C64C <internal_commands.ab3@1185> INCLUDE "internal_commands.ab3"
0003C64E <internal_commands.ab3@1186> INCLUDE "internal_commands.ab3"
0003C652 <internal_commands.ab3@1187> INCLUDE "internal_commands.ab3"
0003C654 <internal_commands.ab3@1188> INCLUDE "internal_commands.ab3"
0003C658 <internal_commands.ab3@1192> INCLUDE "internal_commands.ab3"
0003C65A <internal_commands.ab3@1193> INCLUDE "internal_commands.ab3"
0003C65F <internal_commands.ab3@1194> INCLUDE "internal_commands.ab3"
0003C660 <internal_commands.ab3@1195> INCLUDE "internal_commands.ab3"
0003C662 <internal_commands.ab3@1198> INCLUDE "internal_commands.ab3"
0003C666 <internal_commands.ab3@1199> INCLUDE "internal_commands.ab3"
0003C668 <internal_commands.ab3@1200> INCLUDE "internal_commands.ab3"
0003C66A <internal_commands.ab3@1201> INCLUDE "internal_commands.ab3"
0003C66E <internal_commands.ab3@1202> INCLUDE "internal_commands.ab3"
0003C670 <internal_commands.ab3@1203> INCLUDE "internal_commands.ab3"
0003C674 <internal_commands.ab3@1207> INCLUDE "internal_commands.ab3"
0003C676 <internal_commands.ab3@1208> INCLUDE "internal_commands.ab3"
0003C67B <internal_commands.ab3@1209> INCLUDE "internal_commands.ab3"
0003C67C <internal_commands.ab3@1210> INCLUDE "internal_commands.ab3"
0003C67E <internal_commands.ab3@1213> INCLUDE "internal_commands.ab3"
0003C682 <internal_commands.ab3@1214> INCLUDE "internal_commands.ab3"
0003C684 <internal_commands.ab3@1215> INCLUDE "internal_commands.ab3"
0003C686 <internal_commands.ab3@1216> INCLUDE "internal_commands.ab3"
0003C68A <internal_commands.ab3@1217> INCLUDE "internal_commands.ab3"
0003C68C <internal_commands.ab3@1218> INCLUDE "internal_commands.ab3"
0003C690 <internal_commands.ab3@1222> INCLUDE "internal_commands.ab3"
0003C692 <internal_commands.ab3@1223> INCLUDE "internal_commands.ab3"
0003C697 <internal_commands.ab3@1224> INCLUDE "internal_commands.ab3"
0003C698 <internal_commands.ab3@1225> INCLUDE "internal_commands.ab3"
0003C69A <internal_commands.ab3@1228> INCLUDE "internal_commands.ab3"
0003C69E <internal_commands.ab3@1229> INCLUDE "internal_commands.ab3"
0003C6A0 <internal_commands.ab3@1230> INCLUDE "internal_commands.ab3"
0003C6A2 <internal_commands.ab3@1231> INCLUDE "internal_commands.ab3"
0003C6A6 <internal_commands.ab3@1232> INCLUDE "internal_commands.ab3"
0003C6A8 <internal_commands.ab3@1233> INCLUDE "internal_commands.ab3"
0003C6AC <internal_commands.ab3@1237> INCLUDE "internal_commands.ab3"
0003C6AE <internal_commands.ab3@1238> INCLUDE "internal_commands.ab3"
0003C6B3 <internal_commands.ab3@1239> INCLUDE "internal_commands.ab3"
0003C6B4 <internal_commands.ab3@1240> INCLUDE "internal_commands.ab3"
0003C6B6 <internal_commands.ab3@1243> INCLUDE "internal_commands.ab3"
0003C6BA <internal_commands.ab3@1244> INCLUDE "internal_commands.ab3"
0003C6BC <internal_commands.ab3@1245> INCLUDE "internal_commands.ab3"
0003C6BE <internal_commands.ab3@1246> INCLUDE "internal_commands.ab3"
0003C6C2 <internal_commands.ab3@1247> INCLUDE "internal_commands.ab3"
0003C6C4 <internal_commands.ab3@1248> INCLUDE "internal_commands.ab3"
0003C6C8 <internal_commands.ab3@1252> INCLUDE "internal_commands.ab3"
0003C6CA <internal_commands.ab3@1253> INCLUDE "internal_commands.ab3"
0003C6CF <internal_commands.ab3@1254> INCLUDE "internal_commands.ab3"
0003C6D0 <internal_commands.ab3@1255> INCLUDE "internal_commands.ab3"
0003C6D2 <internal_commands.ab3@1258> INCLUDE "internal_commands.ab3"
0003C6D6 <internal_commands.ab3@1259> INCLUDE "internal_commands.ab3"
0003C6D8 <internal_commands.ab3@1260> INCLUDE "internal_commands.ab3"
0003C6DA <internal_commands.ab3@1261> INCLUDE "internal_commands.ab3"
0003C6DE <internal_commands.ab3@1262> INCLUDE "internal_commands.ab3"
0003C6E0 <internal_commands.ab3@1263> INCLUDE "internal_commands.ab3"
0003C6E4 <internal_commands.ab3@1266> INCLUDE "internal_commands.ab3"
0003C6E6 <internal_commands.ab3@1267> INCLUDE "internal_commands.ab3"
0003C6EA <internal_commands.ab3@1268> INCLUDE "internal_commands.ab3"
0003C6EB <internal_commands.ab3@1269> INCLUDE "internal_commands.ab3"
0003C6EC <internal_commands.ab3@1270> INCLUDE "internal_commands.ab3"
0003C6EE <internal_commands.ab3@1272> INCLUDE "internal_commands.ab3"
0003C6F2 <internal_commands.ab3@1273> INCLUDE "internal_commands.ab3"
0003C6F4 <internal_commands.ab3@1274> INCLUDE "internal_commands.ab3"
0003C6F6 <internal_commands.ab3@1275> INCLUDE "internal_commands.ab3"
0003C6FA <internal_commands.ab3@1276> INCLUDE "internal_commands.ab3"
0003C6FC <internal_commands.ab3@1277> INCLUDE "internal_commands.ab3"
0003C700 <internal_commands.ab3@1281> INCLUDE "internal_commands.ab3"
0003C702 <internal_commands.ab3@1282> INCLUDE "internal_commands.ab3"
0003C707 <internal_commands.ab3@1283> INCLUDE "internal_commands.ab3"
0003C708 <internal_commands.ab3@1284> INCLUDE "internal_commands.ab3"
0003C70A <internal_commands.ab3@1287> INCLUDE "internal_commands.ab3"
0003C70E <internal_commands.ab3@1288> INCLUDE "internal_commands.ab3"
0003C710 <internal_commands.ab3@1289> INCLUDE "internal_commands.ab3"
0003C712 <internal_commands.ab3@1290> INCLUDE "internal_commands.ab3"
0003C716 <internal_commands.ab3@1291> INCLUDE "internal_commands.ab3"
0003C718 <internal_commands.ab3@1292> INCLUDE "internal_commands.ab3"
0003C71C <internal_commands.ab3@1296> INCLUDE "internal_commands.ab3"
0003C71E <internal_commands.ab3@1297> INCLUDE "internal_commands.ab3"
0003C722 <internal_commands.ab3@1298> INCLUDE "internal_commands.ab3"
0003C723 <internal_commands.ab3@1299> INCLUDE "internal_commands.ab3"
0003C724 <internal_commands.ab3@1300> INCLUDE "internal_commands.ab3"
0003C726 <internal_commands.ab3@1302> INCLUDE "internal_commands.ab3"
0003C72A <internal_commands.ab3@1303> INCLUDE "internal_commands.ab3"
0003C72C <internal_commands.ab3@1304> INCLUDE "internal_commands.ab3"
0003C72E <internal_commands.ab3@1305> INCLUDE "internal_commands.ab3"
0003C732 <internal_commands.ab3@1306> INCLUDE "internal_commands.ab3"
0003C734 <internal_commands.ab3@1307> INCLUDE "internal_commands.ab3"
0003C738 <internal_commands.ab3@1311> INCLUDE "internal_commands.ab3"
0003C73A <internal_commands.ab3@1312> INCLUDE "internal_commands.ab3"
0003C73F <internal_commands.ab3@1313> INCLUDE "internal_commands.ab3"
0003C740 <internal_commands.ab3@1314> INCLUDE "internal_commands.ab3"
0003C742 <internal_commands.ab3@1317> INCLUDE "internal_commands.ab3"
0003C746 <internal_commands.ab3@1318> INCLUDE "internal_commands.ab3"
0003C748 <internal_commands.ab3@1319> INCLUDE "internal_commands.ab3"
0003C74A <internal_commands.ab3@1320> INCLUDE "internal_commands.ab3"
0003C74E <internal_commands.ab3@1321> INCLUDE "internal_commands.ab3"
0003C750 <internal_commands.ab3@1322> INCLUDE "internal_commands.ab3"
0003C754 <internal_commands.ab3@1326> INCLUDE "internal_commands.ab3"
0003C756 <internal_commands.ab3@1327> INCLUDE "internal_commands.ab3"
0003C75B <internal_commands.ab3@1328> INCLUDE "internal_commands.ab3"
0003C75C <internal_commands.ab3@1329> INCLUDE "internal_commands.ab3"
0003C75E <internal_commands.ab3@1332> INCLUDE "internal_commands.ab3"
0003C762 <internal_commands.ab3@1333> INCLUDE "internal_commands.ab3"
0003C764 <internal_commands.ab3@1334> INCLUDE "internal_commands.ab3"
0003C766 <internal_commands.ab3@1335> INCLUDE "internal_commands.ab3"
0003C76A <internal_commands.ab3@1336> INCLUDE "internal_commands.ab3"
0003C76C <internal_commands.ab3@1337> INCLUDE "internal_commands.ab3"
0003C770 <internal_commands.ab3@1341> INCLUDE "internal_commands.ab3"
0003C772 <internal_commands.ab3@1342> INCLUDE "internal_commands.ab3"
0003C776 <internal_commands.ab3@1343> INCLUDE "internal_commands.ab3"
0003C777 <internal_commands.ab3@1344> INCLUDE "internal_commands.ab3"
0003C778 <internal_commands.ab3@1345> INCLUDE "internal_commands.ab3"
0003C77A <internal_commands.ab3@1347> INCLUDE "internal_commands.ab3"
0003C77E <internal_commands.ab3@1348> INCLUDE "internal_commands.ab3"
0003C780 <internal_commands.ab3@1349> INCLUDE "internal_commands.ab3"
0003C782 <internal_commands.ab3@1350> INCLUDE "internal_commands.ab3"
0003C786 <internal_commands.ab3@1351> INCLUDE "internal_commands.ab3"
0003C788 <internal_commands.ab3@1352> INCLUDE "internal_commands.ab3"
0003C78C <internal_commands.ab3@1356> INCLUDE "internal_commands.ab3"
0003C78E <internal_commands.ab3@1357> INCLUDE "internal_commands.ab3"
0003C793 <internal_commands.ab3@1358> INCLUDE "internal_commands.ab3"
0003C794 <internal_commands.ab3@1359> INCLUDE "internal_commands.ab3"
0003C796 <internal_commands.ab3@1362> INCLUDE "internal_commands.ab3"
0003C79A <internal_commands.ab3@1363> INCLUDE "internal_commands.ab3"
0003C79C <internal_commands.ab3@1364> INCLUDE "internal_commands.ab3"
0003C79E <internal_commands.ab3@1365> INCLUDE "internal_commands.ab3"
0003C7A2 <internal_commands.ab3@1366> INCLUDE "internal_commands.ab3"
0003C7A4 <internal_commands.ab3@1367> INCLUDE "internal_commands.ab3"
0003C7A8 <internal_commands.ab3@1371> INCLUDE "internal_commands.ab3"
0003C7AA <internal_commands.ab3@1372> INCLUDE "internal_commands.ab3"
0003C7AE <internal_commands.ab3@1373> INCLUDE "internal_commands.ab3"
0003C7AF <internal_commands.ab3@1374> INCLUDE "internal_commands.ab3"
0003C7B0 <internal_commands.ab3@1375> INCLUDE "internal_commands.ab3"
0003C7B2 <internal_commands.ab3@1377> INCLUDE "internal_commands.ab3"
0003C7B6 <internal_commands.ab3@1378> INCLUDE "internal_commands.ab3"
0003C7B8 <internal_commands.ab3@1379> INCLUDE "internal_commands.ab3"
0003C7BA <internal_commands.ab3@1380> INCLUDE "internal_commands.ab3"
0003C7BE <internal_commands.ab3@1381> INCLUDE "internal_commands.ab3"
0003C7C0 <internal_commands.ab3@1382> INCLUDE "internal_commands.ab3"
0003C7C4 <internal_commands.ab3@1386> INCLUDE "internal_commands.ab3"
0003C7C6 <internal_commands.ab3@1387> INCLUDE "internal_commands.ab3"
0003C7CA <internal_commands.ab3@1388> INCLUDE "internal_commands.ab3"
0003C7CB <internal_commands.ab3@1389> INCLUDE "internal_commands.ab3"
0003C7CC <internal_commands.ab3@1390> INCLUDE "internal_commands.ab3"
0003C7CE <internal_commands.ab3@1392> INCLUDE "internal_commands.ab3"
0003C7D2 <internal_commands.ab3@1393> INCLUDE "internal_commands.ab3"
0003C7D4 <internal_commands.ab3@1394> INCLUDE "internal_commands.ab3"
0003C7D6 <internal_commands.ab3@1395> INCLUDE "internal_commands.ab3"
0003C7DA <internal_commands.ab3@1396> INCLUDE "internal_commands.ab3"
0003C7DC <internal_commands.ab3@1397> INCLUDE "internal_commands.ab3"
0003C7E0 <internal_commands.ab3@1401> INCLUDE "internal_commands.ab3"
0003C7E2 <internal_commands.ab3@1402> INCLUDE "internal_commands.ab3"
0003C7EA <internal_commands.ab3@1403> INCLUDE "internal_commands.ab3"
0003C7EB <internal_commands.ab3@1404> INCLUDE "internal_commands.ab3"
0003C7EC <internal_commands.ab3@1405> INCLUDE "internal_commands.ab3"
0003C7EE <internal_commands.ab3@1407> INCLUDE "internal_commands.ab3"
0003C7F2 <internal_commands.ab3@1408> INCLUDE "internal_commands.ab3"
0003C7F4 <internal_commands.ab3@1409> INCLUDE "internal_commands.ab3"
0003C7F6 <internal_commands.ab3@1410> INCLUDE "internal_commands.ab3"
0003C7FA <internal_commands.ab3@1411> INCLUDE "internal_commands.ab3"
0003C7FC <internal_commands.ab3@1412> INCLUDE "internal_commands.ab3"
0003C800 <internal_commands.ab3@1416> INCLUDE "internal_commands.ab3"
0003C802 <internal_commands.ab3@1417> INCLUDE "internal_commands.ab3"
0003C806 <internal_commands.ab3@1418> INCLUDE "internal_commands.ab3"
0003C807 <internal_commands.ab3@1419> INCLUDE "internal_commands.ab3"
0003C808 <internal_commands.ab3@1420> INCLUDE "internal_commands.ab3"
0003C80A <internal_commands.ab3@1422> INCLUDE "internal_commands.ab3"
0003C80E <internal_commands.ab3@1423> INCLUDE "internal_commands.ab3"
0003C810 <internal_commands.ab3@1424> INCLUDE "internal_commands.ab3"
0003C812 <internal_commands.ab3@1425> INCLUDE "internal_commands.ab3"
0003C816 <internal_commands.ab3@1426> INCLUDE "internal_commands.ab3"
0003C818 <internal_commands.ab3@1427> INCLUDE "internal_commands.ab3"
0003C81C <internal_commands.ab3@1431> INCLUDE "internal_commands.ab3"
0003C81E <internal_commands.ab3@1432> INCLUDE "internal_commands.ab3"
0003C822 <internal_commands.ab3@1433> INCLUDE "internal_commands.ab3"
0003C823 <internal_commands.ab3@1434> INCLUDE "internal_commands.ab3"
0003C824 <internal_commands.ab3@1435> INCLUDE "internal_commands.ab3"
0003C826 <internal_commands.ab3@1437> INCLUDE "internal_commands.ab3"
0003C82A <internal_commands.ab3@1438> INCLUDE "internal_commands.ab3"
0003C82C <internal_commands.ab3@1439> INCLUDE "internal_commands.ab3"
0003C82E <internal_commands.ab3@1440> INCLUDE "internal_commands.ab3"
0003C832 <internal_commands.ab3@1441> INCLUDE "internal_commands.ab3"
0003C834 <internal_commands.ab3@1442> INCLUDE "internal_commands.ab3"
0003C838 <internal_commands.ab3@1446> INCLUDE "internal_commands.ab3"
0003C83A <internal_commands.ab3@1447> INCLUDE "internal_commands.ab3"
0003C83E <internal_commands.ab3@1448> INCLUDE "internal_commands.ab3"
0003C83F <internal_commands.ab3@1449> INCLUDE "internal_commands.ab3"
0003C840 <internal_commands.ab3@1450> INCLUDE "internal_commands.ab3"
0003C842 <internal_commands.ab3@1452> INCLUDE "internal_commands.ab3"
0003C846 <internal_commands.ab3@1453> INCLUDE "internal_commands.ab3"
0003C848 <internal_commands.ab3@1454> INCLUDE "internal_commands.ab3"
0003C84A <internal_commands.ab3@1455> INCLUDE "internal_commands.ab3"
0003C84E <internal_commands.ab3@1456> INCLUDE "internal_commands.ab3"
0003C850 <internal_commands.ab3@1457> INCLUDE "internal_commands.ab3"
0003C854 <internal_commands.ab3@1461> INCLUDE "internal_commands.ab3"
0003C856 <internal_commands.ab3@1462> INCLUDE "internal_commands.ab3"
0003C85B <internal_commands.ab3@1463> INCLUDE "internal_commands.ab3"
0003C85C <internal_commands.ab3@1464> INCLUDE "internal_commands.ab3"
0003C85E <internal_commands.ab3@1467> INCLUDE "internal_commands.ab3"
0003C862 <internal_commands.ab3@1468> INCLUDE "internal_commands.ab3"
0003C864 <internal_commands.ab3@1469> INCLUDE "internal_commands.ab3"
0003C866 <internal_commands.ab3@1470> INCLUDE "internal_commands.ab3"
0003C86A <internal_commands.ab3@1471> INCLUDE "internal_commands.ab3"
0003C86C <internal_commands.ab3@1472> INCLUDE "internal_commands.ab3"
0003C870 <internal_commands.ab3@1476> INCLUDE "internal_commands.ab3"
0003C872 <internal_commands.ab3@1477> INCLUDE "internal_commands.ab3"
0003C876 <internal_commands.ab3@1478> INCLUDE "internal_commands.ab3"
0003C877 <internal_commands.ab3@1479> INCLUDE "internal_commands.ab3"
0003C878 <internal_commands.ab3@1480> INCLUDE "internal_commands.ab3"
0003C87A <internal_commands.ab3@1482> INCLUDE "internal_commands.ab3"
0003C87E <internal_commands.ab3@1483> INCLUDE "internal_commands.ab3"
0003C880 <internal_commands.ab3@1484> INCLUDE "internal_commands.ab3"
0003C882 <internal_commands.ab3@1485> INCLUDE "internal_commands.ab3"
0003C886 <internal_commands.ab3@1486> INCLUDE "internal_commands.ab3"
0003C888 <internal_commands.ab3@1487> INCLUDE "internal_commands.ab3"
0003C88C <internal_commands.ab3@1491> INCLUDE "internal_commands.ab3"
0003C88E <internal_commands.ab3@1492> INCLUDE "internal_commands.ab3"
0003C892 <internal_commands.ab3@1493> INCLUDE "internal_commands.ab3"
0003C893 <internal_commands.ab3@1494> INCLUDE "internal_commands.ab3"
0003C894 <internal_commands.ab3@1495> INCLUDE "internal_commands.ab3"
0003C896 <internal_commands.ab3@1497> INCLUDE "internal_commands.ab3"
0003C89A <internal_commands.ab3@1498> INCLUDE "internal_commands.ab3"
0003C89C <internal_commands.ab3@1499> INCLUDE "internal_commands.ab3"
0003C89E <internal_commands.ab3@1500> INCLUDE "internal_commands.ab3"
0003C8A2 <internal_commands.ab3@1501> INCLUDE "internal_commands.ab3"
0003C8A4 <internal_commands.ab3@1502> INCLUDE "internal_commands.ab3"
0003C8A8 <internal_commands.ab3@1506> INCLUDE "internal_commands.ab3"
0003C8AA <internal_commands.ab3@1507> INCLUDE "internal_commands.ab3"
0003C8AF <internal_commands.ab3@1508> INCLUDE "internal_commands.ab3"
0003C8B0 <internal_commands.ab3@1509> INCLUDE "internal_commands.ab3"
0003C8B2 <internal_commands.ab3@1512> INCLUDE "internal_commands.ab3"
0003C8B6 <internal_commands.ab3@1513> INCLUDE "internal_commands.ab3"
0003C8B8 <internal_commands.ab3@1514> INCLUDE "internal_commands.ab3"
0003C8BA <internal_commands.ab3@1515> INCLUDE "internal_commands.ab3"
0003C8BE <internal_commands.ab3@1516> INCLUDE "internal_commands.ab3"
0003C8C0 <internal_commands.ab3@1517> INCLUDE "internal_commands.ab3"
0003C8C4 <internal_commands.ab3@1521> INCLUDE "internal_commands.ab3"
0003C8C6 <internal_commands.ab3@1522> INCLUDE "internal_commands.ab3"
0003C8CB <internal_commands.ab3@1523> INCLUDE "internal_commands.ab3"
0003C8CC <internal_commands.ab3@1524> INCLUDE "internal_commands.ab3"
0003C8CE <internal_commands.ab3@1527> INCLUDE "internal_commands.ab3"
0003C8D2 <internal_commands.ab3@1528> INCLUDE "internal_commands.ab3"
0003C8D4 <internal_commands.ab3@1529> INCLUDE "internal_commands.ab3"
0003C8D6 <internal_commands.ab3@1530> INCLUDE "internal_commands.ab3"
0003C8DA <internal_commands.ab3@1531> INCLUDE "internal_commands.ab3"
0003C8DC <internal_commands.ab3@1532> INCLUDE "internal_commands.ab3"
0003C8E0 <internal_commands.ab3@1537> INCLUDE "internal_commands.ab3"
0003C8E2 <internal_commands.ab3@1538> INCLUDE "internal_commands.ab3"
0003C8E8 <internal_commands.ab3@1539> INCLUDE "internal_commands.ab3"
0003C8E9 <internal_commands.ab3@1540> INCLUDE "internal_commands.ab3"
0003C8EA <internal_commands.ab3@1541> INCLUDE "internal_commands.ab3"
0003C8EC <internal_commands.ab3@1543> INCLUDE "internal_commands.ab3"
0003C8F0 <internal_commands.ab3@1544> INCLUDE "internal_commands.ab3"
0003C8F2 <internal_commands.ab3@1545> INCLUDE "internal_commands.ab3"
0003C8F4 <internal_commands.ab3@1546> INCLUDE "internal_commands.ab3"
0003C8F8 <internal_commands.ab3@1547> INCLUDE "internal_commands.ab3"
0003C8FA <internal_commands.ab3@1548> INCLUDE "internal_commands.ab3"
0003C8FE <internal_commands.ab3@1552> INCLUDE "internal_commands.ab3"
0003C900 <internal_commands.ab3@1553> INCLUDE "internal_commands.ab3"
0003C906 <internal_commands.ab3@1554> INCLUDE "internal_commands.ab3"
0003C907 <internal_commands.ab3@1555> INCLUDE "internal_commands.ab3"
0003C908 <internal_commands.ab3@1556> INCLUDE "internal_commands.ab3"
0003C90A <internal_commands.ab3@1558> INCLUDE "internal_commands.ab3"
0003C90E <internal_commands.ab3@1559> INCLUDE "internal_commands.ab3"
0003C910 <internal_commands.ab3@1560> INCLUDE "internal_commands.ab3"
0003C912 <internal_commands.ab3@1561> INCLUDE "internal_commands.ab3"
0003C916 <internal_commands.ab3@1562> INCLUDE "internal_commands.ab3"
0003C918 <internal_commands.ab3@1563> INCLUDE "internal_commands.ab3"
0003C91C <internal_commands.ab3@1567> INCLUDE "internal_commands.ab3"
0003C91E <internal_commands.ab3@1568> INCLUDE "internal_commands.ab3"
0003C924 <internal_commands.ab3@1569> INCLUDE "internal_commands.ab3"
0003C925 <internal_commands.ab3@1570> INCLUDE "internal_commands.ab3"
0003C926 <internal_commands.ab3@1571> INCLUDE "internal_commands.ab3"
0003C928 <internal_commands.ab3@1573> INCLUDE "internal_commands.ab3"
0003C92C <internal_commands.ab3@1574> INCLUDE "internal_commands.ab3"
0003C92E <internal_commands.ab3@1575> INCLUDE "internal_commands.ab3"
0003C930 <internal_commands.ab3@1576> INCLUDE "internal_commands.ab3"
0003C934 <internal_commands.ab3@1577> INCLUDE "internal_commands.ab3"
0003C936 <internal_commands.ab3@1578> INCLUDE "internal_commands.ab3"
0003C93A <internal_commands.ab3@1582> INCLUDE "internal_commands.ab3"
0003C93C <internal_commands.ab3@1583> INCLUDE "internal_commands.ab3"
0003C941 <internal_commands.ab3@1584> INCLUDE "internal_commands.ab3"
0003C942 <internal_commands.ab3@1585> INCLUDE "internal_commands.ab3"
0003C944 <internal_commands.ab3@1588> INCLUDE "internal_commands.ab3"
0003C948 <internal_commands.ab3@1589> INCLUDE "internal_commands.ab3"
0003C94A <internal_commands.ab3@1590> INCLUDE "internal_commands.ab3"
0003C94C <internal_commands.ab3@1591> INCLUDE "internal_commands.ab3"
0003C950 <internal_commands.ab3@1592> INCLUDE "internal_commands.ab3"
0003C952 <internal_commands.ab3@1593> INCLUDE "internal_commands.ab3"
0003C956 <internal_commands.ab3@1597> INCLUDE "internal_commands.ab3"
0003C958 <internal_commands.ab3@1598> INCLUDE "internal_commands.ab3"
0003C95D <internal_commands.ab3@1599> INCLUDE "internal_commands.ab3"
0003C95E <internal_commands.ab3@1600> INCLUDE "internal_commands.ab3"
0003C960 <internal_commands.ab3@1603> INCLUDE "internal_commands.ab3"
0003C964 <internal_commands.ab3@1604> INCLUDE "internal_commands.ab3"
0003C966 <internal_commands.ab3@1605> INCLUDE "internal_commands.ab3"
0003C968 <internal_commands.ab3@1606> INCLUDE "internal_commands.ab3"
0003C96C <internal_commands.ab3@1607> INCLUDE "internal_commands.ab3"
0003C96E <internal_commands.ab3@1608> INCLUDE "internal_commands.ab3"
0003C972 <internal_commands.ab3@1612> INCLUDE "internal_commands.ab3"
0003C974 <internal_commands.ab3@1613> INCLUDE "internal_commands.ab3"
0003C979 <internal_commands.ab3@1614> INCLUDE "internal_commands.ab3"
0003C97A <internal_commands.ab3@1615> INCLUDE "internal_commands.ab3"
0003C97C <internal_commands.ab3@1618> INCLUDE "internal_commands.ab3"
0003C980 <internal_commands.ab3@1619> INCLUDE "internal_commands.ab3"
0003C982 <internal_commands.ab3@1620> INCLUDE "internal_commands.ab3"
0003C984 <internal_commands.ab3@1621> INCLUDE "internal_commands.ab3"
0003C988 <internal_commands.ab3@1622> INCLUDE "internal_commands.ab3"
0003C98A <internal_commands.ab3@1623> INCLUDE "internal_commands.ab3"
0003C98E <internal_commands.ab3@1627> INCLUDE "internal_commands.ab3"
0003C990 <internal_commands.ab3@1628> INCLUDE "internal_commands.ab3"
0003C994 <internal_commands.ab3@1629> INCLUDE "internal_commands.ab3"
0003C995 <internal_commands.ab3@1630> INCLUDE "internal_commands.ab3"
0003C996 <internal_commands.ab3@1631> INCLUDE "internal_commands.ab3"
0003C998 <internal_commands.ab3@1633> INCLUDE "internal_commands.ab3"
0003C99C <internal_commands.ab3@1634> INCLUDE "internal_commands.ab3"
0003C99E <internal_commands.ab3@1635> INCLUDE "internal_commands.ab3"
0003C9A0 <internal_commands.ab3@1636> INCLUDE "internal_commands.ab3"
0003C9A4 <internal_commands.ab3@1637> INCLUDE "internal_commands.ab3"
0003C9A6 <internal_commands.ab3@1638> INCLUDE "internal_commands.ab3"
0003C9AA <internal_commands.ab3@1642> INCLUDE "internal_commands.ab3"
0003C9AC <internal_commands.ab3@1643> INCLUDE "internal_commands.ab3"
0003C9B1 <internal_commands.ab3@1644> INCLUDE "internal_commands.ab3"
0003C9B2 <internal_commands.ab3@1645> INCLUDE "internal_commands.ab3"
0003C9B4 <internal_commands.ab3@1648> INCLUDE "internal_commands.ab3"
0003C9B8 <internal_commands.ab3@1649> INCLUDE "internal_commands.ab3"
0003C9BA <internal_commands.ab3@1650> INCLUDE "internal_commands.ab3"
0003C9BC <internal_commands.ab3@1651> INCLUDE "internal_commands.ab3"
0003C9C0 <internal_commands.ab3@1652> INCLUDE "internal_commands.ab3"
0003C9C2 <internal_commands.ab3@1653> INCLUDE "internal_commands.ab3"
0003C9C6 <internal_commands.ab3@1657> INCLUDE "internal_commands.ab3"
0003C9C8 <internal_commands.ab3@1658> INCLUDE "internal_commands.ab3"
0003C9CC <internal_commands.ab3@1659> INCLUDE "internal_commands.ab3"
0003C9CD <internal_commands.ab3@1660> INCLUDE "internal_commands.ab3"
0003C9CE <internal_commands.ab3@1661> INCLUDE "internal_commands.ab3"
0003C9D0 <internal_commands.ab3@1663> INCLUDE "internal_commands.ab3"
0003C9D4 <internal_commands.ab3@1664> INCLUDE "internal_commands.ab3"
0003C9D6 <internal_commands.ab3@1665> INCLUDE "internal_commands.ab3"
0003C9D8 <internal_commands.ab3@1666> INCLUDE "internal_commands.ab3"
0003C9DC <internal_commands.ab3@1667> INCLUDE "internal_commands.ab3"
0003C9DE <internal_commands.ab3@1668> INCLUDE "internal_commands.ab3"
0003C9E2 <internal_commands.ab3@1672> INCLUDE "internal_commands.ab3"
0003C9E4 <internal_commands.ab3@1673> INCLUDE "internal_commands.ab3"
0003C9E8 <internal_commands.ab3@1674> INCLUDE "internal_commands.ab3"
0003C9E9 <internal_commands.ab3@1675> INCLUDE "internal_commands.ab3"
0003C9EA <internal_commands.ab3@1676> INCLUDE "internal_commands.ab3"
0003C9EC <internal_commands.ab3@1678> INCLUDE "internal_commands.ab3"
0003C9F0 <internal_commands.ab3@1679> INCLUDE "internal_commands.ab3"
0003C9F2 <internal_commands.ab3@1680> INCLUDE "internal_commands.ab3"
0003C9F4 <internal_commands.ab3@1681> INCLUDE "internal_commands.ab3"
0003C9F8 <internal_commands.ab3@1682> INCLUDE "internal_commands.ab3"
0003C9FA <internal_commands.ab3@1683> INCLUDE "internal_commands.ab3"
0003C9FE <internal_commands.ab3@1687> INCLUDE "internal_commands.ab3"
0003CA00 <internal_commands.ab3@1688> INCLUDE "internal_commands.ab3"
0003CA03 <internal_commands.ab3@1689> INCLUDE "internal_commands.ab3"
0003CA04 <internal_commands.ab3@1690> INCLUDE "internal_commands.ab3"
0003CA06 <internal_commands.ab3@1693> INCLUDE "internal_commands.ab3"
0003CA0A <internal_commands.ab3@1694> INCLUDE "internal_commands.ab3"
0003CA0C <internal_commands.ab3@1695> INCLUDE "internal_commands.ab3"
0003CA0E <internal_commands.ab3@1696> INCLUDE "internal_commands.ab3"
0003CA12 <internal_commands.ab3@1697> INCLUDE "internal_commands.ab3"
0003CA14 <internal_commands.ab3@1698> INCLUDE "internal_commands.ab3"
0003CA18 <internal_commands.ab3@1702> INCLUDE "internal_commands.ab3"
0003CA1A <internal_commands.ab3@1703> INCLUDE "internal_commands.ab3"
0003CA1E <internal_commands.ab3@1704> INCLUDE "internal_commands.ab3"
0003CA1F <internal_commands.ab3@1705> INCLUDE "internal_commands.ab3"
0003CA20 <internal_commands.ab3@1706> INCLUDE "internal_commands.ab3"
0003CA22 <internal_commands.ab3@1708> INCLUDE "internal_commands.ab3"
0003CA26 <internal_commands.ab3@1709> INCLUDE "internal_commands.ab3"
0003CA28 <internal_commands.ab3@1710> INCLUDE "internal_commands.ab3"
0003CA2A <internal_commands.ab3@1711> INCLUDE "internal_commands.ab3"
0003CA2E <internal_commands.ab3@1712> INCLUDE "internal_commands.ab3"
0003CA30 <internal_commands.ab3@1713> INCLUDE "internal_commands.ab3"
0003CA34 <internal_commands.ab3@1717> INCLUDE "internal_commands.ab3"
0003CA36 <internal_commands.ab3@1718> INCLUDE "internal_commands.ab3"
0003CA3A <internal_commands.ab3@1719> INCLUDE "internal_commands.ab3"
0003CA3B <internal_commands.ab3@1720> INCLUDE "internal_commands.ab3"
0003CA3C <internal_commands.ab3@1721> INCLUDE "internal_commands.ab3"
0003CA3E <internal_commands.ab3@1723> INCLUDE "internal_commands.ab3"
0003CA42 <internal_commands.ab3@1724> INCLUDE "internal_commands.ab3"
0003CA44 <internal_commands.ab3@1725> INCLUDE "internal_commands.ab3"
0003CA46 <internal_commands.ab3@1726> INCLUDE "internal_commands.ab3"
0003CA4A <internal_commands.ab3@1727> INCLUDE "internal_commands.ab3"
0003CA4C <internal_commands.ab3@1728> INCLUDE "internal_commands.ab3"
0003CA50 <internal_commands.ab3@1732> INCLUDE "internal_commands.ab3"
0003CA52 <internal_commands.ab3@1733> INCLUDE "internal_commands.ab3"
0003CA58 <internal_commands.ab3@1734> INCLUDE "internal_commands.ab3"
0003CA59 <internal_commands.ab3@1735> INCLUDE "internal_commands.ab3"
0003CA5A <internal_commands.ab3@1736> INCLUDE "internal_commands.ab3"
0003CA5C <internal_commands.ab3@1738> INCLUDE "internal_commands.ab3"
0003CA60 <internal_commands.ab3@1739> INCLUDE "internal_commands.ab3"
0003CA62 <internal_commands.ab3@1740> INCLUDE "internal_commands.ab3"
0003CA64 <internal_commands.ab3@1741> INCLUDE "internal_commands.ab3"
0003CA68 <internal_commands.ab3@1742> INCLUDE "internal_commands.ab3"
0003CA6A <internal_commands.ab3@1743> INCLUDE "internal_commands.ab3"
0003CA6E <internal_commands.ab3@1747> INCLUDE "internal_commands.ab3"
0003CA70 <internal_commands.ab3@1748> INCLUDE "internal_commands.ab3"
0003CA74 <internal_commands.ab3@1749> INCLUDE "internal_commands.ab3"
0003CA75 <internal_commands.ab3@1750> INCLUDE "internal_commands.ab3"
0003CA76 <internal_commands.ab3@1751> INCLUDE "internal_commands.ab3"
0003CA78 <internal_commands.ab3@1753> INCLUDE "internal_commands.ab3"
0003CA7C <internal_commands.ab3@1754> INCLUDE "internal_commands.ab3"
0003CA7E <internal_commands.ab3@1755> INCLUDE "internal_commands.ab3"
0003CA80 <internal_commands.ab3@1756> INCLUDE "internal_commands.ab3"
0003CA84 <internal_commands.ab3@1757> INCLUDE "internal_commands.ab3"
0003CA86 <internal_commands.ab3@1758> INCLUDE "internal_commands.ab3"
0003CA8A <internal_commands.ab3@1762> INCLUDE "internal_commands.ab3"
0003CA8C <internal_commands.ab3@1763> INCLUDE "internal_commands.ab3"
0003CA90 <internal_commands.ab3@1764> INCLUDE "internal_commands.ab3"
0003CA91 <internal_commands.ab3@1765> INCLUDE "internal_commands.ab3"
0003CA92 <internal_commands.ab3@1766> INCLUDE "internal_commands.ab3"
0003CA94 <internal_commands.ab3@1768> INCLUDE "internal_commands.ab3"
0003CA98 <internal_commands.ab3@1769> INCLUDE "internal_commands.ab3"
0003CA9A <internal_commands.ab3@1770> INCLUDE "internal_commands.ab3"
0003CA9C <internal_commands.ab3@1771> INCLUDE "internal_commands.ab3"
0003CAA0 <internal_commands.ab3@1772> INCLUDE "internal_commands.ab3"
0003CAA2 <internal_commands.ab3@1773> INCLUDE "internal_commands.ab3"
0003CAA6 <internal_commands.ab3@1777> INCLUDE "internal_commands.ab3"
0003CAA8 <internal_commands.ab3@1778> INCLUDE "internal_commands.ab3"
0003CAAD <internal_commands.ab3@1779> INCLUDE "internal_commands.ab3"
0003CAAE <internal_commands.ab3@1780> INCLUDE "internal_commands.ab3"
0003CAB0 <internal_commands.ab3@1783> INCLUDE "internal_commands.ab3"
0003CAB4 <internal_commands.ab3@1784> INCLUDE "internal_commands.ab3"
0003CAB6 <internal_commands.ab3@1785> INCLUDE "internal_commands.ab3"
0003CAB8 <internal_commands.ab3@1786> INCLUDE "internal_commands.ab3"
0003CABC <internal_commands.ab3@1787> INCLUDE "internal_commands.ab3"
0003CABE <internal_commands.ab3@1788> INCLUDE "internal_commands.ab3"
0003CAC2 <internal_commands.ab3@1792> INCLUDE "internal_commands.ab3"
0003CAC4 <internal_commands.ab3@1793> INCLUDE "internal_commands.ab3"
0003CAC9 <internal_commands.ab3@1794> INCLUDE "internal_commands.ab3"
0003CACA <internal_commands.ab3@1795> INCLUDE "internal_commands.ab3"
0003CACC <internal_commands.ab3@1798> INCLUDE "internal_commands.ab3"
0003CAD0 <internal_commands.ab3@1799> INCLUDE "internal_commands.ab3"
0003CAD2 <internal_commands.ab3@1800> INCLUDE "internal_commands.ab3"
0003CAD4 <internal_commands.ab3@1801> INCLUDE "internal_commands.ab3"
0003CAD8 <internal_commands.ab3@1802> INCLUDE "internal_commands.ab3"
0003CADA <internal_commands.ab3@1803> INCLUDE "internal_commands.ab3"
0003CADE <internal_commands.ab3@1807> INCLUDE "internal_commands.ab3"
0003CAE0 <internal_commands.ab3@1808> INCLUDE "internal_commands.ab3"
0003CAE4 <internal_commands.ab3@1809> INCLUDE "internal_commands.ab3"
0003CAE5 <internal_commands.ab3@1810> INCLUDE "internal_commands.ab3"
0003CAE6 <internal_commands.ab3@1811> INCLUDE "internal_commands.ab3"
0003CAE8 <internal_commands.ab3@1813> INCLUDE "internal_commands.ab3"
0003CAEC <internal_commands.ab3@1814> INCLUDE "internal_commands.ab3"
0003CAEE <internal_commands.ab3@1815> INCLUDE "internal_commands.ab3"
0003CAF0 <internal_commands.ab3@1816> INCLUDE "internal_commands.ab3"
0003CAF4 <internal_commands.ab3@1817> INCLUDE "internal_commands.ab3"
0003CAF6 <internal_commands.ab3@1818> INCLUDE "internal_commands.ab3"
0003CAFA <internal_commands.ab3@1822> INCLUDE "internal_commands.ab3"
0003CAFC <internal_commands.ab3@1823> INCLUDE "internal_commands.ab3"
0003CB00 <internal_commands.ab3@1824> INCLUDE "internal_commands.ab3"
0003CB01 <internal_commands.ab3@1825> INCLUDE "internal_commands.ab3"
0003CB02 <internal_commands.ab3@1826> INCLUDE "internal_commands.ab3"
0003CB04 <internal_commands.ab3@1828> INCLUDE "internal_commands.ab3"
0003CB08 <internal_commands.ab3@1829> INCLUDE "internal_commands.ab3"
0003CB0A <internal_commands.ab3@1830> INCLUDE "internal_commands.ab3"
0003CB0C <internal_commands.ab3@1831> INCLUDE "internal_commands.ab3"
0003CB10 <internal_commands.ab3@1832> INCLUDE "internal_commands.ab3"
0003CB12 <internal_commands.ab3@1833> INCLUDE "internal_commands.ab3"
0003CB16 <internal_commands.ab3@1837> INCLUDE "internal_commands.ab3"
0003CB18 <internal_commands.ab3@1838> INCLUDE "internal_commands.ab3"
0003CB1C <internal_commands.ab3@1839> INCLUDE "internal_commands.ab3"
0003CB1D <internal_commands.ab3@1840> INCLUDE "internal_commands.ab3"
0003CB1E <internal_commands.ab3@1841> INCLUDE "internal_commands.ab3"
0003CB20 <internal_commands.ab3@1843> INCLUDE "internal_commands.ab3"
0003CB24 <internal_commands.ab3@1844> INCLUDE "internal_commands.ab3"
0003CB26 <internal_commands.ab3@1845> INCLUDE "internal_commands.ab3"
0003CB28 <internal_commands.ab3@1846> INCLUDE "internal_commands.ab3"
0003CB2C <internal_commands.ab3@1847> INCLUDE "internal_commands.ab3"
0003CB2E <internal_commands.ab3@1848> INCLUDE "internal_commands.ab3"
0003CB32 <internal_commands.ab3@1852> INCLUDE "internal_commands.ab3"
0003CB34 <internal_commands.ab3@1853> INCLUDE "internal_commands.ab3"
0003CB39 <internal_commands.ab3@1854> INCLUDE "internal_commands.ab3"
0003CB3A <internal_commands.ab3@1855> INCLUDE "internal_commands.ab3"
0003CB3C <internal_commands.ab3@1858> INCLUDE "internal_commands.ab3"
0003CB40 <internal_commands.ab3@1859> INCLUDE "internal_commands.ab3"
0003CB42 <internal_commands.ab3@1860> INCLUDE "internal_commands.ab3"
0003CB44 <internal_commands.ab3@1861> INCLUDE "internal_commands.ab3"
0003CB48 <internal_commands.ab3@1862> INCLUDE "internal_commands.ab3"
0003CB4A <internal_commands.ab3@1863> INCLUDE "internal_commands.ab3"
0003CB4E <internal_commands.ab3@1867> INCLUDE "internal_commands.ab3"
0003CB50 <internal_commands.ab3@1868> INCLUDE "internal_commands.ab3"
0003CB54 <internal_commands.ab3@1869> INCLUDE "internal_commands.ab3"
0003CB55 <internal_commands.ab3@1870> INCLUDE "internal_commands.ab3"
0003CB56 <internal_commands.ab3@1871> INCLUDE "internal_commands.ab3"
0003CB58 <internal_commands.ab3@1873> INCLUDE "internal_commands.ab3"
0003CB5C <internal_commands.ab3@1874> INCLUDE "internal_commands.ab3"
0003CB5E <internal_commands.ab3@1875> INCLUDE "internal_commands.ab3"
0003CB60 <internal_commands.ab3@1876> INCLUDE "internal_commands.ab3"
0003CB64 <internal_commands.ab3@1877> INCLUDE "internal_commands.ab3"
0003CB66 <internal_commands.ab3@1878> INCLUDE "internal_commands.ab3"
0003CB6A <internal_commands.ab3@1882> INCLUDE "internal_commands.ab3"
0003CB6C <internal_commands.ab3@1883> INCLUDE "internal_commands.ab3"
0003CB70 <internal_commands.ab3@1884> INCLUDE "internal_commands.ab3"
0003CB71 <internal_commands.ab3@1885> INCLUDE "internal_commands.ab3"
0003CB72 <internal_commands.ab3@1886> INCLUDE "internal_commands.ab3"
0003CB74 <internal_commands.ab3@1888> INCLUDE "internal_commands.ab3"
0003CB78 <internal_commands.ab3@1889> INCLUDE "internal_commands.ab3"
0003CB7A <internal_commands.ab3@1890> INCLUDE "internal_commands.ab3"
0003CB7C <internal_commands.ab3@1891> INCLUDE "internal_commands.ab3"
0003CB80 <internal_commands.ab3@1892> INCLUDE "internal_commands.ab3"
0003CB82 <internal_commands.ab3@1893> INCLUDE "internal_commands.ab3"
0003CB86 <internal_commands.ab3@1897> INCLUDE "internal_commands.ab3"
0003CB88 <internal_commands.ab3@1898> INCLUDE "internal_commands.ab3"
0003CB8C <internal_commands.ab3@1899> INCLUDE "internal_commands.ab3"
0003CB8D <internal_commands.ab3@1900> INCLUDE "internal_commands.ab3"
0003CB8E <internal_commands.ab3@1901> INCLUDE "internal_commands.ab3"
0003CB90 <internal_commands.ab3@1903> INCLUDE "internal_commands.ab3"
0003CB94 <internal_commands.ab3@1904> INCLUDE "internal_commands.ab3"
0003CB96 <internal_commands.ab3@1905> INCLUDE "internal_commands.ab3"
0003CB98 <internal_commands.ab3@1906> INCLUDE "internal_commands.ab3"
0003CB9C <internal_commands.ab3@1907> INCLUDE "internal_commands.ab3"
0003CB9E <internal_commands.ab3@1908> INCLUDE "internal_commands.ab3"
0003CBA2 <internal_commands.ab3@1912> INCLUDE "internal_commands.ab3"
0003CBA4 <internal_commands.ab3@1913> INCLUDE "internal_commands.ab3"
0003CBA8 <internal_commands.ab3@1914> INCLUDE "internal_commands.ab3"
0003CBA9 <internal_commands.ab3@1915> INCLUDE "internal_commands.ab3"
0003CBAA <internal_commands.ab3@1916> INCLUDE "internal_commands.ab3"
0003CBAC <internal_commands.ab3@1918> INCLUDE "internal_commands.ab3"
0003CBB0 <internal_commands.ab3@1919> INCLUDE "internal_commands.ab3"
0003CBB2 <internal_commands.ab3@1920> INCLUDE "internal_commands.ab3"
0003CBB4 <internal_commands.ab3@1921> INCLUDE "internal_commands.ab3"
0003CBB8 <internal_commands.ab3@1922> INCLUDE "internal_commands.ab3"
0003CBBA <internal_commands.ab3@1923> INCLUDE "internal_commands.ab3"
0003CBBE <internal_commands.ab3@1927> INCLUDE "internal_commands.ab3"
0003CBC0 <internal_commands.ab3@1928> INCLUDE "internal_commands.ab3"
0003CBC4 <internal_commands.ab3@1929> INCLUDE "internal_commands.ab3"
0003CBC5 <internal_commands.ab3@1930> INCLUDE "internal_commands.ab3"
0003CBC6 <internal_commands.ab3@1931> INCLUDE "internal_commands.ab3"
0003CBC8 <internal_commands.ab3@1933> INCLUDE "internal_commands.ab3"
0003CBCC <internal_commands.ab3@1934> INCLUDE "internal_commands.ab3"
0003CBCE <internal_commands.ab3@1935> INCLUDE "internal_commands.ab3"
0003CBD0 <internal_commands.ab3@1936> INCLUDE "internal_commands.ab3"
0003CBD4 <internal_commands.ab3@1937> INCLUDE "internal_commands.ab3"
0003CBD6 <internal_commands.ab3@1938> INCLUDE "internal_commands.ab3"
0003CBDA <internal_commands.ab3@1942> INCLUDE "internal_commands.ab3"
0003CBDC <internal_commands.ab3@1943> INCLUDE "internal_commands.ab3"
0003CBE0 <internal_commands.ab3@1944> INCLUDE "internal_commands.ab3"
0003CBE1 <internal_commands.ab3@1945> INCLUDE "internal_commands.ab3"
0003CBE2 <internal_commands.ab3@1946> INCLUDE "internal_commands.ab3"
0003CBE4 <internal_commands.ab3@1948> INCLUDE "internal_commands.ab3"
0003CBE8 <internal_commands.ab3@1949> INCLUDE "internal_commands.ab3"
0003CBEA <internal_commands.ab3@1950> INCLUDE "internal_commands.ab3"
0003CBEC <internal_commands.ab3@1951> INCLUDE "internal_commands.ab3"
0003CBF0 <internal_commands.ab3@1952> INCLUDE "internal_commands.ab3"
0003CBF2 <internal_commands.ab3@1953> INCLUDE "internal_commands.ab3"
0003CBF6 <internal_commands.ab3@1957> INCLUDE "internal_commands.ab3"
0003CBF8 <internal_commands.ab3@1958> INCLUDE "internal_commands.ab3"
0003CBFC <internal_commands.ab3@1959> INCLUDE "internal_commands.ab3"
0003CBFD <internal_commands.ab3@1960> INCLUDE "internal_commands.ab3"
0003CBFE <internal_commands.ab3@1961> INCLUDE "internal_commands.ab3"
0003CC00 <internal_commands.ab3@1963> INCLUDE "internal_commands.ab3"
0003CC04 <internal_commands.ab3@1964> INCLUDE "internal_commands.ab3"
0003CC06 <internal_commands.ab3@1965> INCLUDE "internal_commands.ab3"
0003CC08 <internal_commands.ab3@1966> INCLUDE "internal_commands.ab3"
0003CC0C <internal_commands.ab3@1967> INCLUDE "internal_commands.ab3"
0003CC0E <internal_commands.ab3@1968> INCLUDE "internal_commands.ab3"
0003CC12 <internal_commands.ab3@1972> INCLUDE "internal_commands.ab3"
0003CC14 <internal_commands.ab3@1973> INCLUDE "internal_commands.ab3"
0003CC18 <internal_commands.ab3@1974> INCLUDE "internal_commands.ab3"
0003CC19 <internal_commands.ab3@1975> INCLUDE "internal_commands.ab3"
0003CC1A <internal_commands.ab3@1976> INCLUDE "internal_commands.ab3"
0003CC1C <internal_commands.ab3@1978> INCLUDE "internal_commands.ab3"
0003CC20 <internal_commands.ab3@1979> INCLUDE "internal_commands.ab3"
0003CC22 <internal_commands.ab3@1980> INCLUDE "internal_commands.ab3"
0003CC24 <internal_commands.ab3@1981> INCLUDE "internal_commands.ab3"
0003CC28 <internal_commands.ab3@1982> INCLUDE "internal_commands.ab3"
0003CC2A <internal_commands.ab3@1983> INCLUDE "internal_commands.ab3"
0003CC2E <internal_commands.ab3@1987> INCLUDE "internal_commands.ab3"
0003CC30 <internal_commands.ab3@1988> INCLUDE "internal_commands.ab3"
0003CC34 <internal_commands.ab3@1989> INCLUDE "internal_commands.ab3"
0003CC35 <internal_commands.ab3@1990> INCLUDE "internal_commands.ab3"
0003CC36 <internal_commands.ab3@1991> INCLUDE "internal_commands.ab3"
0003CC38 <internal_commands.ab3@1993> INCLUDE "internal_commands.ab3"
0003CC3C <internal_commands.ab3@1994> INCLUDE "internal_commands.ab3"
0003CC3E <internal_commands.ab3@1995> INCLUDE "internal_commands.ab3"
0003CC40 <internal_commands.ab3@1996> INCLUDE "internal_commands.ab3"
0003CC44 <internal_commands.ab3@1997> INCLUDE "internal_commands.ab3"
0003CC46 <internal_commands.ab3@1998> INCLUDE "internal_commands.ab3"
0003CC4A <internal_commands.ab3@2002> INCLUDE "internal_commands.ab3"
0003CC4C <internal_commands.ab3@2003> INCLUDE "internal_commands.ab3"
0003CC50 <internal_commands.ab3@2004> INCLUDE "internal_commands.ab3"
0003CC51 <internal_commands.ab3@2005> INCLUDE "internal_commands.ab3"
0003CC52 <internal_commands.ab3@2006> INCLUDE "internal_commands.ab3"
0003CC54 <internal_commands.ab3@2008> INCLUDE "internal_commands.ab3"
0003CC58 <internal_commands.ab3@2009> INCLUDE "internal_commands.ab3"
0003CC5A <internal_commands.ab3@2010> INCLUDE "internal_commands.ab3"
0003CC5C <internal_commands.ab3@2011> INCLUDE "internal_commands.ab3"
0003CC60 <internal_commands.ab3@2012> INCLUDE "internal_commands.ab3"
0003CC62 <internal_commands.ab3@2013> INCLUDE "internal_commands.ab3"
0003CC66 <internal_commands.ab3@2017> INCLUDE "internal_commands.ab3"
0003CC68 <internal_commands.ab3@2018> INCLUDE "internal_commands.ab3"
0003CC6C <internal_commands.ab3@2019> INCLUDE "internal_commands.ab3"
0003CC6D <internal_commands.ab3@2020> INCLUDE "internal_commands.ab3"
0003CC6E <internal_commands.ab3@2021> INCLUDE "internal_commands.ab3"
0003CC70 <internal_commands.ab3@2023> INCLUDE "internal_commands.ab3"
0003CC74 <internal_commands.ab3@2024> INCLUDE "internal_commands.ab3"
0003CC76 <internal_commands.ab3@2025> INCLUDE "internal_commands.ab3"
0003CC78 <internal_commands.ab3@2026> INCLUDE "internal_commands.ab3"
0003CC7C <internal_commands.ab3@2027> INCLUDE "internal_commands.ab3"
0003CC7E <internal_commands.ab3@2028> INCLUDE "internal_commands.ab3"
0003CC82 <internal_commands.ab3@2032> INCLUDE "internal_commands.ab3"
0003CC84 <internal_commands.ab3@2033> INCLUDE "internal_commands.ab3"
0003CC88 <internal_commands.ab3@2034> INCLUDE "internal_commands.ab3"
0003CC89 <internal_commands.ab3@2035> INCLUDE "internal_commands.ab3"
0003CC8A <internal_commands.ab3@2036> INCLUDE "internal_commands.ab3"
0003CC8C <internal_commands.ab3@2038> INCLUDE "internal_commands.ab3"
0003CC90 <internal_commands.ab3@2039> INCLUDE "internal_commands.ab3"
0003CC92 <internal_commands.ab3@2040> INCLUDE "internal_commands.ab3"
0003CC94 <internal_commands.ab3@2041> INCLUDE "internal_commands.ab3"
0003CC98 <internal_commands.ab3@2042> INCLUDE "internal_commands.ab3"
0003CC9A <internal_commands.ab3@2043> INCLUDE "internal_commands.ab3"
0003CC9E <internal_commands.ab3@2047> INCLUDE "internal_commands.ab3"
0003CCA0 <internal_commands.ab3@2048> INCLUDE "internal_commands.ab3"
0003CCA4 <internal_commands.ab3@2049> INCLUDE "internal_commands.ab3"
0003CCA5 <internal_commands.ab3@2050> INCLUDE "internal_commands.ab3"
0003CCA6 <internal_commands.ab3@2051> INCLUDE "internal_commands.ab3"
0003CCA8 <internal_commands.ab3@2053> INCLUDE "internal_commands.ab3"
0003CCAC <internal_commands.ab3@2054> INCLUDE "internal_commands.ab3"
0003CCAE <internal_commands.ab3@2055> INCLUDE "internal_commands.ab3"
0003CCB0 <internal_commands.ab3@2056> INCLUDE "internal_commands.ab3"
0003CCB4 <internal_commands.ab3@2057> INCLUDE "internal_commands.ab3"
0003CCB6 <internal_commands.ab3@2058> INCLUDE "internal_commands.ab3"
0003CCBA <internal_commands.ab3@2062> INCLUDE "internal_commands.ab3"
0003CCBC <internal_commands.ab3@2063> INCLUDE "internal_commands.ab3"
0003CCC0 <internal_commands.ab3@2064> INCLUDE "internal_commands.ab3"
0003CCC1 <internal_commands.ab3@2065> INCLUDE "internal_commands.ab3"
0003CCC2 <internal_commands.ab3@2066> INCLUDE "internal_commands.ab3"
0003CCC4 <internal_commands.ab3@2068> INCLUDE "internal_commands.ab3"
0003CCC8 <internal_commands.ab3@2069> INCLUDE "internal_commands.ab3"
0003CCCA <internal_commands.ab3@2070> INCLUDE "internal_commands.ab3"
0003CCCC <internal_commands.ab3@2071> INCLUDE "internal_commands.ab3"
0003CCD0 <internal_commands.ab3@2072> INCLUDE "internal_commands.ab3"
0003CCD2 <internal_commands.ab3@2073> INCLUDE "internal_commands.ab3"
0003CCD6 <internal_commands.ab3@2077> INCLUDE "internal_commands.ab3"
0003CCD8 <internal_commands.ab3@2078> INCLUDE "internal_commands.ab3"
0003CCDB <internal_commands.ab3@2079> INCLUDE "internal_commands.ab3"
0003CCDC <internal_commands.ab3@2080> INCLUDE "internal_commands.ab3"
0003CCDE <internal_commands.ab3@2083> INCLUDE "internal_commands.ab3"
0003CCE2 <internal_commands.ab3@2084> INCLUDE "internal_commands.ab3"
0003CCE4 <internal_commands.ab3@2085> INCLUDE "internal_commands.ab3"
0003CCE6 <internal_commands.ab3@2086> INCLUDE "internal_commands.ab3"
0003CCEA <internal_commands.ab3@2087> INCLUDE "internal_commands.ab3"
0003CCEC <internal_commands.ab3@2088> INCLUDE "internal_commands.ab3"
0003CCF0 <internal_commands.ab3@2092> INCLUDE "internal_commands.ab3"
0003CCF2 <internal_commands.ab3@2093> INCLUDE "internal_commands.ab3"
0003CCF5 <internal_commands.ab3@2094> INCLUDE "internal_commands.ab3"
0003CCF6 <internal_commands.ab3@2095> INCLUDE "internal_commands.ab3"
0003CCF8 <internal_commands.ab3@2098> INCLUDE "internal_commands.ab3"
0003CCFC <internal_commands.ab3@2099> INCLUDE "internal_commands.ab3"
0003CCFE <internal_commands.ab3@2100> INCLUDE "internal_commands.ab3"
0003CD00 <internal_commands.ab3@2101> INCLUDE "internal_commands.ab3"
0003CD04 <internal_commands.ab3@2102> INCLUDE "internal_commands.ab3"
0003CD06 <internal_commands.ab3@2103> INCLUDE "internal_commands.ab3"
0003CD0A <internal_commands.ab3@2107> INCLUDE "internal_commands.ab3"
0003CD0C <internal_commands.ab3@2108> INCLUDE "internal_commands.ab3"
0003CD11 <internal_commands.ab3@2109> INCLUDE "internal_commands.ab3"
0003CD12 <internal_commands.ab3@2110> INCLUDE "internal_commands.ab3"
0003CD14 <internal_commands.ab3@2113> INCLUDE "internal_commands.ab3"
0003CD18 <internal_commands.ab3@2114> INCLUDE "internal_commands.ab3"
0003CD1A <internal_commands.ab3@2115> INCLUDE "internal_commands.ab3"
0003CD1C <internal_commands.ab3@2116> INCLUDE "internal_commands.ab3"
0003CD20 <internal_commands.ab3@2117> INCLUDE "internal_commands.ab3"
0003CD22 <internal_commands.ab3@2118> INCLUDE "internal_commands.ab3"
0003CD26 <internal_commands.ab3@2122> INCLUDE "internal_commands.ab3"
0003CD28 <internal_commands.ab3@2123> INCLUDE "internal_commands.ab3"
0003CD2C <internal_commands.ab3@2124> INCLUDE "internal_commands.ab3"
0003CD2D <internal_commands.ab3@2125> INCLUDE "internal_commands.ab3"
0003CD2E <internal_commands.ab3@2126> INCLUDE "internal_commands.ab3"
0003CD30 <internal_commands.ab3@2128> INCLUDE "internal_commands.ab3"
0003CD34 <internal_commands.ab3@2129> INCLUDE "internal_commands.ab3"
0003CD36 <internal_commands.ab3@2130> INCLUDE "internal_commands.ab3"
0003CD38 <internal_commands.ab3@2131> INCLUDE "internal_commands.ab3"
0003CD3C <internal_commands.ab3@2132> INCLUDE "internal_commands.ab3"
0003CD3E <internal_commands.ab3@2133> INCLUDE "internal_commands.ab3"
0003CD42 <internal_commands.ab3@2137> INCLUDE "internal_commands.ab3"
0003CD44 <internal_commands.ab3@2138> INCLUDE "internal_commands.ab3"
0003CD49 <internal_commands.ab3@2139> INCLUDE "internal_commands.ab3"
0003CD4A <internal_commands.ab3@2140> INCLUDE "internal_commands.ab3"
0003CD4C <internal_commands.ab3@2143> INCLUDE "internal_commands.ab3"
0003CD50 <internal_commands.ab3@2144> INCLUDE "internal_commands.ab3"
0003CD52 <internal_commands.ab3@2145> INCLUDE "internal_commands.ab3"
0003CD54 <internal_commands.ab3@2146> INCLUDE "internal_commands.ab3"
0003CD58 <internal_commands.ab3@2147> INCLUDE "internal_commands.ab3"
0003CD5A <internal_commands.ab3@2148> INCLUDE "internal_commands.ab3"
0003CD5E <internal_commands.ab3@2152> INCLUDE "internal_commands.ab3"
0003CD60 <internal_commands.ab3@2153> INCLUDE "internal_commands.ab3"
0003CD65 <internal_commands.ab3@2154> INCLUDE "internal_commands.ab3"
0003CD66 <internal_commands.ab3@2155> INCLUDE "internal_commands.ab3"
0003CD68 <internal_commands.ab3@2158> INCLUDE "internal_commands.ab3"
0003CD6C <internal_commands.ab3@2159> INCLUDE "internal_commands.ab3"
0003CD6E <internal_commands.ab3@2160> INCLUDE "internal_commands.ab3"
0003CD70 <internal_commands.ab3@2161> INCLUDE "internal_commands.ab3"
0003CD74 <internal_commands.ab3@2162> INCLUDE "internal_commands.ab3"
0003CD76 <internal_commands.ab3@2163> INCLUDE "internal_commands.ab3"
0003CD7A <internal_commands.ab3@2167> INCLUDE "internal_commands.ab3"
0003CD7C <internal_commands.ab3@2168> INCLUDE "internal_commands.ab3"
0003CD81 <internal_commands.ab3@2169> INCLUDE "internal_commands.ab3"
0003CD82 <internal_commands.ab3@2170> INCLUDE "internal_commands.ab3"
0003CD84 <internal_commands.ab3@2173> INCLUDE "internal_commands.ab3"
0003CD88 <internal_commands.ab3@2174> INCLUDE "internal_commands.ab3"
0003CD8A <internal_commands.ab3@2175> INCLUDE "internal_commands.ab3"
0003CD8C <internal_commands.ab3@2176> INCLUDE "internal_commands.ab3"
0003CD90 <internal_commands.ab3@2177> INCLUDE "internal_commands.ab3"
0003CD92 <internal_commands.ab3@2178> INCLUDE "internal_commands.ab3"
0003CD96 <internal_commands.ab3@2182> INCLUDE "internal_commands.ab3"
0003CD98 <internal_commands.ab3@2183> INCLUDE "internal_commands.ab3"
0003CD9D <internal_commands.ab3@2184> INCLUDE "internal_commands.ab3"
0003CD9E <internal_commands.ab3@2185> INCLUDE "internal_commands.ab3"
0003CDA0 <internal_commands.ab3@2188> INCLUDE "internal_commands.ab3"
0003CDA4 <internal_commands.ab3@2189> INCLUDE "internal_commands.ab3"
0003CDA6 <internal_commands.ab3@2190> INCLUDE "internal_commands.ab3"
0003CDA8 <internal_commands.ab3@2191> INCLUDE "internal_commands.ab3"
0003CDAC <internal_commands.ab3@2192> INCLUDE "internal_commands.ab3"
0003CDAE <internal_commands.ab3@2193> INCLUDE "internal_commands.ab3"
0003CDB2 <internal_commands.ab3@2197> INCLUDE "internal_commands.ab3"
0003CDB4 <internal_commands.ab3@2198> INCLUDE "internal_commands.ab3"
0003CDB9 <internal_commands.ab3@2199> INCLUDE "internal_commands.ab3"
0003CDBA <internal_commands.ab3@2200> INCLUDE "internal_commands.ab3"
0003CDBC <internal_commands.ab3@2203> INCLUDE "internal_commands.ab3"
0003CDC0 <internal_commands.ab3@2204> INCLUDE "internal_commands.ab3"
0003CDC2 <internal_commands.ab3@2205> INCLUDE "internal_commands.ab3"
0003CDC4 <internal_commands.ab3@2206> INCLUDE "internal_commands.ab3"
0003CDC8 <internal_commands.ab3@2207> INCLUDE "internal_commands.ab3"
0003CDCA <internal_commands.ab3@2208> INCLUDE "internal_commands.ab3"
0003CDCE <internal_commands.ab3@2212> INCLUDE "internal_commands.ab3"
0003CDD0 <internal_commands.ab3@2213> INCLUDE "internal_commands.ab3"
0003CDD4 <internal_commands.ab3@2214> INCLUDE "internal_commands.ab3"
0003CDD5 <internal_commands.ab3@2215> INCLUDE "internal_commands.ab3"
0003CDD6 <internal_commands.ab3@2216> INCLUDE "internal_commands.ab3"
0003CDD8 <internal_commands.ab3@2218> INCLUDE "internal_commands.ab3"
0003CDDC <internal_commands.ab3@2219> INCLUDE "internal_commands.ab3"
0003CDDE <internal_commands.ab3@2220> INCLUDE "internal_commands.ab3"
0003CDE0 <internal_commands.ab3@2221> INCLUDE "internal_commands.ab3"
0003CDE4 <internal_commands.ab3@2222> INCLUDE "internal_commands.ab3"
0003CDE6 <internal_commands.ab3@2223> INCLUDE "internal_commands.ab3"
0003CDEA <internal_commands.ab3@2227> INCLUDE "internal_commands.ab3"
0003CDEC <internal_commands.ab3@2228> INCLUDE "internal_commands.ab3"
0003CDF1 <internal_commands.ab3@2229> INCLUDE "internal_commands.ab3"
0003CDF2 <internal_commands.ab3@2230> INCLUDE "internal_commands.ab3"
0003CDF4 <internal_commands.ab3@2233> INCLUDE "internal_commands.ab3"
0003CDF8 <internal_commands.ab3@2234> INCLUDE "internal_commands.ab3"
0003CDFA <internal_commands.ab3@2235> INCLUDE "internal_commands.ab3"
0003CDFC <internal_commands.ab3@2236> INCLUDE "internal_commands.ab3"
0003CE00 <internal_commands.ab3@2237> INCLUDE "internal_commands.ab3"
0003CE02 <internal_commands.ab3@2238> INCLUDE "internal_commands.ab3"
0003CE06 <internal_commands.ab3@2242> INCLUDE "internal_commands.ab3"
0003CE08 <internal_commands.ab3@2243> INCLUDE "internal_commands.ab3"
0003CE0E <internal_commands.ab3@2244> INCLUDE "internal_commands.ab3"
0003CE0F <internal_commands.ab3@2245> INCLUDE "internal_commands.ab3"
0003CE10 <internal_commands.ab3@2246> INCLUDE "internal_commands.ab3"
0003CE12 <internal_commands.ab3@2248> INCLUDE "internal_commands.ab3"
0003CE16 <internal_commands.ab3@2249> INCLUDE "internal_commands.ab3"
0003CE18 <internal_commands.ab3@2250> INCLUDE "internal_commands.ab3"
0003CE1A <internal_commands.ab3@2251> INCLUDE "internal_commands.ab3"
0003CE1E <internal_commands.ab3@2252> INCLUDE "internal_commands.ab3"
0003CE20 <internal_commands.ab3@2253> INCLUDE "internal_commands.ab3"
0003CE24 <internal_commands.ab3@2257> INCLUDE "internal_commands.ab3"
0003CE26 <internal_commands.ab3@2258> INCLUDE "internal_commands.ab3"
0003CE2A <internal_commands.ab3@2259> INCLUDE "internal_commands.ab3"
0003CE2B <internal_commands.ab3@2260> INCLUDE "internal_commands.ab3"
0003CE2C <internal_commands.ab3@2261> INCLUDE "internal_commands.ab3"
0003CE2E <internal_commands.ab3@2263> INCLUDE "internal_commands.ab3"
0003CE32 <internal_commands.ab3@2264> INCLUDE "internal_commands.ab3"
0003CE34 <internal_commands.ab3@2265> INCLUDE "internal_commands.ab3"
0003CE36 <internal_commands.ab3@2266> INCLUDE "internal_commands.ab3"
0003CE3A <internal_commands.ab3@2267> INCLUDE "internal_commands.ab3"
0003CE3C <internal_commands.ab3@2268> INCLUDE "internal_commands.ab3"
0003CE40 <internal_commands.ab3@2272> INCLUDE "internal_commands.ab3"
0003CE42 <internal_commands.ab3@2273> INCLUDE "internal_commands.ab3"
0003CE47 <internal_commands.ab3@2274> INCLUDE "internal_commands.ab3"
0003CE48 <internal_commands.ab3@2275> INCLUDE "internal_commands.ab3"
0003CE4A <internal_commands.ab3@2278> INCLUDE "internal_commands.ab3"
0003CE4E <internal_commands.ab3@2279> INCLUDE "internal_commands.ab3"
0003CE50 <internal_commands.ab3@2280> INCLUDE "internal_commands.ab3"
0003CE52 <internal_commands.ab3@2281> INCLUDE "internal_commands.ab3"
0003CE56 <internal_commands.ab3@2282> INCLUDE "internal_commands.ab3"
0003CE58 <internal_commands.ab3@2283> INCLUDE "internal_commands.ab3"
0003CE5C <internal_commands.ab3@2288> INCLUDE "internal_commands.ab3"
0003CE5E <internal_commands.ab3@2289> INCLUDE "internal_commands.ab3"
0003CE65 <internal_commands.ab3@2290> INCLUDE "internal_commands.ab3"
0003CE66 <internal_commands.ab3@2291> INCLUDE "internal_commands.ab3"
0003CE68 <internal_commands.ab3@2310> INCLUDE "internal_commands.ab3"
0003CE6A <internal_commands.ab3@2311> INCLUDE "internal_commands.ab3"
0003CE6C <internal_commands.ab3@2315> INCLUDE "internal_commands.ab3"
0003CE6E <internal_commands.ab3@2316> INCLUDE "internal_commands.ab3"
0003CE70 <internal_commands.ab3@2320> INCLUDE "internal_commands.ab3"
0003CE72 <internal_commands.ab3@2321> INCLUDE "internal_commands.ab3"
0003CE74 <internal_commands.ab3@2325> INCLUDE "internal_commands.ab3"
0003CE76 <internal_commands.ab3@2326> INCLUDE "internal_commands.ab3"
0003CE78 <internal_commands.ab3@2332> INCLUDE "internal_commands.ab3"
0003CE7C <internal_commands.ab3@2333> INCLUDE "internal_commands.ab3"
0003CE7E <internal_commands.ab3@2334> INCLUDE "internal_commands.ab3"
0003CE80 <internal_commands.ab3@2335> INCLUDE "internal_commands.ab3"
0003CE82 <internal_commands.ab3@2336> INCLUDE "internal_commands.ab3"
0003CE84 <internal_commands.ab3@2337> INCLUDE "internal_commands.ab3"
0003CE88 <internal_commands.ab3@2338> INCLUDE "internal_commands.ab3"
0003CE8E <internal_commands.ab3@2341> INCLUDE "internal_commands.ab3"
0003CE92 <internal_commands.ab3@2342> INCLUDE "internal_commands.ab3"
0003CE94 <internal_commands.ab3@2343> INCLUDE "internal_commands.ab3"
0003CE96 <internal_commands.ab3@2344> INCLUDE "internal_commands.ab3"
0003CE98 <internal_commands.ab3@2345> INCLUDE "internal_commands.ab3"
0003CE9A <internal_commands.ab3@2346> INCLUDE "internal_commands.ab3"
0003CE9C <internal_commands.ab3@2347> INCLUDE "internal_commands.ab3"
0003CE9E <internal_commands.ab3@2354> INCLUDE "internal_commands.ab3"
0003CEA2 <internal_commands.ab3@2355> INCLUDE "internal_commands.ab3"
0003CEA6 <internal_commands.ab3@2356> INCLUDE "internal_commands.ab3"
0003CEAA <internal_commands.ab3@2357> INCLUDE "internal_commands.ab3"
0003CEAE <internal_commands.ab3@2358> INCLUDE "internal_commands.ab3"
0003CEB2 <internal_commands.ab3@2359> INCLUDE "internal_commands.ab3"
0003CEB4 <internal_commands.ab3@2362> INCLUDE "internal_commands.ab3"
0003CEB6 <internal_commands.ab3@2363> INCLUDE "internal_commands.ab3"
0003CEBA <internal_commands.ab3@2364> INCLUDE "internal_commands.ab3"
0003CEBE <internal_commands.ab3@2365> INCLUDE "internal_commands.ab3"
0003CEC2 <internal_commands.ab3@2366> INCLUDE "internal_commands.ab3"
0003CEC6 <internal_commands.ab3@2367> INCLUDE "internal_commands.ab3"
0003CEC8 <internal_commands.ab3@2370> INCLUDE "internal_commands.ab3"
0003CECA <internal_commands.ab3@2371> INCLUDE "internal_commands.ab3"
0003CECE <internal_commands.ab3@2372> INCLUDE "internal_commands.ab3"
0003CED2 <internal_commands.ab3@2373> INCLUDE "internal_commands.ab3"
0003CED6 <internal_commands.ab3@2374> INCLUDE "internal_commands.ab3"
0003CEDA <internal_commands.ab3@2375> INCLUDE "internal_commands.ab3"
0003CEDC <internal_commands.ab3@2376> INCLUDE "internal_commands.ab3"
0003CEDE <internal_commands.ab3@2379> INCLUDE "internal_commands.ab3"
0003CEE0 <internal_commands.ab3@2380> INCLUDE "internal_commands.ab3"
0003CEE4 <internal_commands.ab3@2381> INCLUDE "internal_commands.ab3"
0003CEE6 <internal_commands.ab3@2383> INCLUDE "internal_commands.ab3"
0003CEEA <internal_commands.ab3@2384> INCLUDE "internal_commands.ab3"
0003CEEC <internal_commands.ab3@2388> INCLUDE "internal_commands.ab3"
0003CEF0 <internal_commands.ab3@2389> INCLUDE "internal_commands.ab3"
0003CEF2 <internal_commands.ab3@2390> INCLUDE "internal_commands.ab3"
0003CEF6 <internal_commands.ab3@2391> INCLUDE "internal_commands.ab3"
0003CEFA <internal_commands.ab3@2392> INCLUDE "internal_commands.ab3"
0003CEFE <internal_commands.ab3@2393> INCLUDE "internal_commands.ab3"
0003CF02 <internal_commands.ab3@2397> INCLUDE "internal_commands.ab3"
0003CF06 <internal_commands.ab3@2398> INCLUDE "internal_commands.ab3"
0003CF0A <internal_commands.ab3@2400> INCLUDE "internal_commands.ab3"
0003CF0E <internal_commands.ab3@2401> INCLUDE "internal_commands.ab3"
0003CF12 <internal_commands.ab3@2402> INCLUDE "internal_commands.ab3"
0003CF16 <internal_commands.ab3@2403> INCLUDE "internal_commands.ab3"
0003CF1A <internal_commands.ab3@2404> INCLUDE "internal_commands.ab3"
0003CF1E <internal_commands.ab3@2405> INCLUDE "internal_commands.ab3"
0003CF22 <internal_commands.ab3@2406> INCLUDE "internal_commands.ab3"
0003CF26 <internal_commands.ab3@2407> INCLUDE "internal_commands.ab3"
0003CF2A <internal_commands.ab3@2409> INCLUDE "internal_commands.ab3"
0003CF2E <internal_commands.ab3@2412> INCLUDE "internal_commands.ab3"
0003CF32 <internal_commands.ab3@2413> INCLUDE "internal_commands.ab3"
0003CF36 <internal_commands.ab3@2415> INCLUDE "internal_commands.ab3"
0003CF3A <internal_commands.ab3@2416> INCLUDE "internal_commands.ab3"
0003CF3E <internal_commands.ab3@2417> INCLUDE "internal_commands.ab3"
0003CF42 <internal_commands.ab3@2418> INCLUDE "internal_commands.ab3"
0003CF46 <internal_commands.ab3@2419> INCLUDE "internal_commands.ab3"
0003CF4A <internal_commands.ab3@2420> INCLUDE "internal_commands.ab3"
0003CF4E <internal_commands.ab3@2421> INCLUDE "internal_commands.ab3"
0003CF52 <internal_commands.ab3@2422> INCLUDE "internal_commands.ab3"
0003CF56 <internal_commands.ab3@2424> INCLUDE "internal_commands.ab3"
0003CF5A <internal_commands.ab3@2427> INCLUDE "internal_commands.ab3"
0003CF5C <internal_commands.ab3@2428> INCLUDE "internal_commands.ab3"
0003CF60 <internal_commands.ab3@2429> INCLUDE "internal_commands.ab3"
0003CF64 <internal_commands.ab3@2430> INCLUDE "internal_commands.ab3"
0003CF68 <internal_commands.ab3@2431> INCLUDE "internal_commands.ab3"
0003CF6C <internal_commands.ab3@2432> INCLUDE "internal_commands.ab3"
0003CF70 <internal_commands.ab3@2433> INCLUDE "internal_commands.ab3"
0003CF74 <internal_commands.ab3@2434> INCLUDE "internal_commands.ab3"
0003CF78 <internal_commands.ab3@2437> INCLUDE "internal_commands.ab3"
0003CF7C <internal_commands.ab3@2438> INCLUDE "internal_commands.ab3"
0003CF80 <internal_commands.ab3@2439> INCLUDE "internal_commands.ab3"
0003CF82 <internal_commands.ab3@2440> INCLUDE "internal_commands.ab3"
0003CF84 <internal_commands.ab3@2443> INCLUDE "internal_commands.ab3"
0003CF86 <internal_commands.ab3@2444> INCLUDE "internal_commands.ab3"
0003CF88 <internal_commands.ab3@2445> INCLUDE "internal_commands.ab3"
0003CF8A <internal_commands.ab3@2446> INCLUDE "internal_commands.ab3"
0003CF8E <internal_commands.ab3@2447> INCLUDE "internal_commands.ab3"
0003CF92 <internal_commands.ab3@2450> INCLUDE "internal_commands.ab3"
0003CF96 <internal_commands.ab3@2451> INCLUDE "internal_commands.ab3"
0003CF9A <internal_commands.ab3@2452> INCLUDE "internal_commands.ab3"
0003CF9C <internal_commands.ab3@2453> INCLUDE "internal_commands.ab3"
0003CFA0 <internal_commands.ab3@2454> INCLUDE "internal_commands.ab3"
0003CFA4 <internal_commands.ab3@2458> INCLUDE "internal_commands.ab3"
0003CFA8 <internal_commands.ab3@2461> INCLUDE "internal_commands.ab3"
0003CFAC <internal_commands.ab3@2462> INCLUDE "internal_commands.ab3"
0003CFAE <internal_commands.ab3@2463> INCLUDE "internal_commands.ab3"
0003CFB0 <internal_commands.ab3@2464> INCLUDE "internal_commands.ab3"
0003CFB4 <internal_commands.ab3@2465> INCLUDE "internal_commands.ab3"
0003CFB8 <internal_commands.ab3@2468> INCLUDE "internal_commands.ab3"
0003CFBC <internal_commands.ab3@2469> INCLUDE "internal_commands.ab3"
0003CFC0 <internal_commands.ab3@2473> INCLUDE "internal_commands.ab3"
0003CFC4 <internal_commands.ab3@2476> INCLUDE "internal_commands.ab3"
0003CFC8 <internal_commands.ab3@2477> INCLUDE "internal_commands.ab3"
0003CFCA <internal_commands.ab3@2478> INCLUDE "internal_commands.ab3"
0003CFCC <internal_commands.ab3@2479> INCLUDE "internal_commands.ab3"
0003CFD0 <internal_commands.ab3@2480> INCLUDE "internal_commands.ab3"
0003CFD4 <internal_commands.ab3@2483> INCLUDE "internal_commands.ab3"
0003CFD8 <internal_commands.ab3@2484> INCLUDE "internal_commands.ab3"
0003CFDA <internal_commands.ab3@2488> INCLUDE "internal_commands.ab3"
0003CFDE <internal_commands.ab3@2489> INCLUDE "internal_commands.ab3"
0003CFE2 <internal_commands.ab3@2490> INCLUDE "internal_commands.ab3"
0003CFE4 <internal_commands.ab3@2491> INCLUDE "internal_commands.ab3"
0003CFE8 <internal_commands.ab3@2492> INCLUDE "internal_commands.ab3"
0003CFEC <internal_commands.ab3@2493> INCLUDE "internal_commands.ab3"
0003CFEE <internal_commands.ab3@2496> INCLUDE "internal_commands.ab3"
0003CFF2 <internal_commands.ab3@2497> INCLUDE "internal_commands.ab3"
0003CFF6 <internal_commands.ab3@2498> INCLUDE "internal_commands.ab3"
0003CFFA <internal_commands.ab3@2499> INCLUDE "internal_commands.ab3"
0003CFFE <internal_commands.ab3@2502> INCLUDE "internal_commands.ab3"
0003D002 <internal_commands.ab3@2503> INCLUDE "internal_commands.ab3"
0003D004 <internal_commands.ab3@2507> INCLUDE "internal_commands.ab3"
0003D008 <internal_commands.ab3@2508> INCLUDE "internal_commands.ab3"
0003D00A <internal_commands.ab3@2509> INCLUDE "internal_commands.ab3"
0003D00C <internal_commands.ab3@2510> INCLUDE "internal_commands.ab3"
0003D00E <internal_commands.ab3@2511> INCLUDE "internal_commands.ab3"
0003D012 <internal_commands.ab3@2512> INCLUDE "internal_commands.ab3"
0003D016 <internal_commands.ab3@2515> INCLUDE "internal_commands.ab3"
0003D01A <internal_commands.ab3@2516> INCLUDE "internal_commands.ab3"
0003D01E <internal_commands.ab3@2517> INCLUDE "internal_commands.ab3"
0003D022 <internal_commands.ab3@2518> INCLUDE "internal_commands.ab3"
0003D026 <internal_commands.ab3@2522> INCLUDE "internal_commands.ab3"
0003D02A <internal_commands.ab3@2523> INCLUDE "internal_commands.ab3"
0003D02E <internal_commands.ab3@2527> INCLUDE "internal_commands.ab3"
0003D032 <internal_commands.ab3@2528> INCLUDE "internal_commands.ab3"
0003D036 <internal_commands.ab3@2532> INCLUDE "internal_commands.ab3"
0003D03A <internal_commands.ab3@2533> INCLUDE "internal_commands.ab3"
0003D03E <internal_commands.ab3@2537> INCLUDE "internal_commands.ab3"
0003D040 <internal_commands.ab3@2540> INCLUDE "internal_commands.ab3"
0003D044 <internal_commands.ab3@2541> INCLUDE "internal_commands.ab3"
0003D048 <internal_commands.ab3@2542> INCLUDE "internal_commands.ab3"
0003D04A <internal_commands.ab3@2543> INCLUDE "internal_commands.ab3"
0003D04C <internal_commands.ab3@2544> INCLUDE "internal_commands.ab3"
0003D04E <internal_commands.ab3@2545> INCLUDE "internal_commands.ab3"
0003D052 <internal_commands.ab3@2546> INCLUDE "internal_commands.ab3"
0003D056 <internal_commands.ab3@2547> INCLUDE "internal_commands.ab3"
0003D058 <internal_commands.ab3@2548> INCLUDE "internal_commands.ab3"
0003D05C <internal_commands.ab3@2549> INCLUDE "internal_commands.ab3"
0003D05E <internal_commands.ab3@2550> INCLUDE "internal_commands.ab3"
0003D060 <internal_commands.ab3@2551> INCLUDE "internal_commands.ab3"
0003D062 <internal_commands.ab3@2552> INCLUDE "internal_commands.ab3"
0003D066 <internal_commands.ab3@2553> INCLUDE "internal_commands.ab3"
0003D06A <internal_commands.ab3@2554> INCLUDE "internal_commands.ab3"
0003D06C <internal_commands.ab3@2557> INCLUDE "internal_commands.ab3"
0003D06E <internal_commands.ab3@2558> INCLUDE "internal_commands.ab3"
0003D072 <internal_commands.ab3@2559> INCLUDE "internal_commands.ab3"
0003D076 <internal_commands.ab3@2560> INCLUDE "internal_commands.ab3"
0003D07A <internal_commands.ab3@2561> INCLUDE "internal_commands.ab3"
0003D07E <internal_commands.ab3@2562> INCLUDE "internal_commands.ab3"
0003D080 <internal_commands.ab3@2563> INCLUDE "internal_commands.ab3"
0003D084 <internal_commands.ab3@2564> INCLUDE "internal_commands.ab3"
0003D088 <internal_commands.ab3@2565> INCLUDE "internal_commands.ab3"
0003D08C <internal_commands.ab3@2566> INCLUDE "internal_commands.ab3"
0003D08E <internal_commands.ab3@2567> INCLUDE "internal_commands.ab3"
0003D090 <internal_commands.ab3@2568> INCLUDE "internal_commands.ab3"
0003D092 <internal_commands.ab3@2569> INCLUDE "internal_commands.ab3"
0003D094 <internal_commands.ab3@2572> INCLUDE "internal_commands.ab3"
0003D096 <internal_commands.ab3@2573> INCLUDE "internal_commands.ab3"
0003D098 <internal_commands.ab3@2574> INCLUDE "internal_commands.ab3"
0003D09C <internal_commands.ab3@2575> INCLUDE "internal_commands.ab3"
0003D0A0 <internal_commands.ab3@2576> INCLUDE "internal_commands.ab3"
0003D0A2 <internal_commands.ab3@2580> INCLUDE "internal_commands.ab3"
0003D0A6 <internal_commands.ab3@2581> INCLUDE "internal_commands.ab3"
0003D0A8 <internal_commands.ab3@2582> INCLUDE "internal_commands.ab3"
0003D0AC <internal_commands.ab3@2583> INCLUDE "internal_commands.ab3"
0003D0B0 <internal_commands.ab3@2584> INCLUDE "internal_commands.ab3"
0003D0B2 <internal_commands.ab3@2585> INCLUDE "internal_commands.ab3"
0003D0B4 <internal_commands.ab3@2588> INCLUDE "internal_commands.ab3"
0003D0B6 <internal_commands.ab3@2592> INCLUDE "internal_commands.ab3"
0003D0BA <internal_commands.ab3@2593> INCLUDE "internal_commands.ab3"
0003D0BC <internal_commands.ab3@2594> INCLUDE "internal_commands.ab3"
0003D0C0 <internal_commands.ab3@2595> INCLUDE "internal_commands.ab3"
0003D0C4 <internal_commands.ab3@2596> INCLUDE "internal_commands.ab3"
0003D0C8 <internal_commands.ab3@2597> INCLUDE "internal_commands.ab3"
0003D0CA <internal_commands.ab3@2600> INCLUDE "internal_commands.ab3"
0003D0CE <internal_commands.ab3@2604> INCLUDE "internal_commands.ab3"
0003D0D2 <internal_commands.ab3@2605> INCLUDE "internal_commands.ab3"
0003D0D4 <internal_commands.ab3@2606> INCLUDE "internal_commands.ab3"
0003D0D8 <internal_commands.ab3@2607> INCLUDE "internal_commands.ab3"
0003D0DC <internal_commands.ab3@2608> INCLUDE "internal_commands.ab3"
0003D0E0 <internal_commands.ab3@2611> INCLUDE "internal_commands.ab3"
0003D0E4 <internal_commands.ab3@2612> INCLUDE "internal_commands.ab3"
0003D0E8 <internal_commands.ab3@2613> INCLUDE "internal_commands.ab3"
0003D0EC <internal_commands.ab3@2614> INCLUDE "internal_commands.ab3"
0003D0F0 <internal_commands.ab3@2615> INCLUDE "internal_commands.ab3"
0003D0F4 <internal_commands.ab3@2624> INCLUDE "internal_commands.ab3"
0003D0F6 <internal_commands.ab3@2625> INCLUDE "internal_commands.ab3"
0003D0FB <internal_commands.ab3@2626> INCLUDE "internal_commands.ab3"
0003D0FC <internal_commands.ab3@2627> INCLUDE "internal_commands.ab3"
0003D100 <internal_commands.ab3@2631> INCLUDE "internal_commands.ab3"
0003D102 <internal_commands.ab3@2632> INCLUDE "internal_commands.ab3"
0003D109 <internal_commands.ab3@2633> INCLUDE "internal_commands.ab3"
0003D10A <internal_commands.ab3@2634> INCLUDE "internal_commands.ab3"
0003D10E <internal_commands.ab3@2638> INCLUDE "internal_commands.ab3"
0003D110 <internal_commands.ab3@2639> INCLUDE "internal_commands.ab3"
0003D117 <internal_commands.ab3@2640> INCLUDE "internal_commands.ab3"
0003D118 <internal_commands.ab3@2641> INCLUDE "internal_commands.ab3"
0003D11C <internal_commands.ab3@2651> INCLUDE "internal_commands.ab3"
0003D11E <internal_commands.ab3@2652> INCLUDE "internal_commands.ab3"
0003D126 <internal_commands.ab3@2653> INCLUDE "internal_commands.ab3"
0003D127 <internal_commands.ab3@2654> INCLUDE "internal_commands.ab3"
0003D128 <internal_commands.ab3@2655> INCLUDE "internal_commands.ab3"
0003D12C <internal_commands.ab3@2658> INCLUDE "internal_commands.ab3"
0003D12E <internal_commands.ab3@2659> INCLUDE "internal_commands.ab3"
0003D133 <internal_commands.ab3@2660> INCLUDE "internal_commands.ab3"
0003D147 <internal_commands.ab3@2661> INCLUDE "internal_commands.ab3"
0003D148 <internal_commands.ab3@2662> INCLUDE "internal_commands.ab3"
0003D14C <internal_commands.ab3@2665> INCLUDE "internal_commands.ab3"
0003D14E <internal_commands.ab3@2666> INCLUDE "internal_commands.ab3"
0003D152 <internal_commands.ab3@2667> INCLUDE "internal_commands.ab3"
0003D153 <internal_commands.ab3@2668> INCLUDE "internal_commands.ab3"
0003D154 <internal_commands.ab3@2669> INCLUDE "internal_commands.ab3"
0003D158 <internal_commands.ab3@2672> INCLUDE "internal_commands.ab3"
0003D15A <internal_commands.ab3@2673> INCLUDE "internal_commands.ab3"
0003D15D <internal_commands.ab3@2674> INCLUDE "internal_commands.ab3"
0003D15E <internal_commands.ab3@2675> INCLUDE "internal_commands.ab3"
0003D162 <internal_commands.ab3@2679> INCLUDE "internal_commands.ab3"
0003D164 <internal_commands.ab3@2680> INCLUDE "internal_commands.ab3"
0003D16B <internal_commands.ab3@2681> INCLUDE "internal_commands.ab3"
0003D16C <internal_commands.ab3@2682> INCLUDE "internal_commands.ab3"
0003D170 <internal_commands.ab3@2686> INCLUDE "internal_commands.ab3"
0003D172 <internal_commands.ab3@2687> INCLUDE "internal_commands.ab3"
0003D178 <internal_commands.ab3@2688> INCLUDE "internal_commands.ab3"
0003D185 <internal_commands.ab3@2689> INCLUDE "internal_commands.ab3"
0003D186 <internal_commands.ab3@2690> INCLUDE "internal_commands.ab3"
0003D18A <internal_commands.ab3@2693> INCLUDE "internal_commands.ab3"
0003D18C <internal_commands.ab3@2694> INCLUDE "internal_commands.ab3"
0003D193 <internal_commands.ab3@2695> INCLUDE "internal_commands.ab3"
0003D1AB <internal_commands.ab3@2696> INCLUDE "internal_commands.ab3"
0003D1AC <internal_commands.ab3@2697> INCLUDE "internal_commands.ab3"
0003D1B0 <internal_commands.ab3@2700> INCLUDE "internal_commands.ab3"
0003D1B2 <internal_commands.ab3@2701> INCLUDE "internal_commands.ab3"
0003D1B6 <internal_commands.ab3@2702> INCLUDE "internal_commands.ab3"
0003D1D9 <internal_commands.ab3@2703> INCLUDE "internal_commands.ab3"
0003D1DA <internal_commands.ab3@2704> INCLUDE "internal_commands.ab3"
0003D1DE <internal_commands.ab3@2707> INCLUDE "internal_commands.ab3"
0003D1E0 <internal_commands.ab3@2708> INCLUDE "internal_commands.ab3"
0003D1E7 <internal_commands.ab3@2709> INCLUDE "internal_commands.ab3"
0003D1F2 <internal_commands.ab3@2710> INCLUDE "internal_commands.ab3"
0003D1F6 <internal_commands.ab3@2714> INCLUDE "internal_commands.ab3"
0003D1F8 <internal_commands.ab3@2715> INCLUDE "internal_commands.ab3"
0003D1FE <internal_commands.ab3@2716> INCLUDE "internal_commands.ab3"
0003D1FF <internal_commands.ab3@2717> INCLUDE "internal_commands.ab3"
0003D200 <internal_commands.ab3@2718> INCLUDE "internal_commands.ab3"
0003D204 <internal_commands.ab3@2721> INCLUDE "internal_commands.ab3"
0003D206 <internal_commands.ab3@2722> INCLUDE "internal_commands.ab3"
0003D20B <internal_commands.ab3@2723> INCLUDE "internal_commands.ab3"
0003D20C <internal_commands.ab3@2724> INCLUDE "internal_commands.ab3"
0003D210 <internal_commands.ab3@2728> INCLUDE "internal_commands.ab3"
0003D212 <internal_commands.ab3@2729> INCLUDE "internal_commands.ab3"
0003D219 <internal_commands.ab3@2730> INCLUDE "internal_commands.ab3"
0003D22B <internal_commands.ab3@2731> INCLUDE "internal_commands.ab3"
0003D22C <internal_commands.ab3@2732> INCLUDE "internal_commands.ab3"
0003D230 <internal_commands.ab3@2735> INCLUDE "internal_commands.ab3"
0003D232 <internal_commands.ab3@2736> INCLUDE "internal_commands.ab3"
0003D23C <internal_commands.ab3@2737> INCLUDE "internal_commands.ab3"
0003D23D <internal_commands.ab3@2738> INCLUDE "internal_commands.ab3"
0003D23E <internal_commands.ab3@2739> INCLUDE "internal_commands.ab3"
0003D242 <internal_commands.ab3@2742> INCLUDE "internal_commands.ab3"
0003D244 <internal_commands.ab3@2743> INCLUDE "internal_commands.ab3"
0003D24C <internal_commands.ab3@2744> INCLUDE "internal_commands.ab3"
0003D259 <internal_commands.ab3@2745> INCLUDE "internal_commands.ab3"
0003D25A <internal_commands.ab3@2746> INCLUDE "internal_commands.ab3"
0003D25E <internal_commands.ab3@2749> INCLUDE "internal_commands.ab3"
0003D260 <internal_commands.ab3@2750> INCLUDE "internal_commands.ab3"
0003D263 <internal_commands.ab3@2751> INCLUDE "internal_commands.ab3"
0003D29E <internal_commands.ab3@2752> INCLUDE "internal_commands.ab3"
0003D2A2 <internal_commands.ab3@2756> INCLUDE "internal_commands.ab3"
0003D2A4 <internal_commands.ab3@2757> INCLUDE "internal_commands.ab3"
0003D2A8 <internal_commands.ab3@2758> INCLUDE "internal_commands.ab3"
0003D2A9 <internal_commands.ab3@2759> INCLUDE "internal_commands.ab3"
0003D2AA <internal_commands.ab3@2760> INCLUDE "internal_commands.ab3"
0003D2AE <internal_commands.ab3@2763> INCLUDE "internal_commands.ab3"
0003D2B0 <internal_commands.ab3@2764> INCLUDE "internal_commands.ab3"
0003D2B8 <internal_commands.ab3@2765> INCLUDE "internal_commands.ab3"
0003D2B9 <internal_commands.ab3@2766> INCLUDE "internal_commands.ab3"
0003D2BA <internal_commands.ab3@2767> INCLUDE "internal_commands.ab3"
0003D2BE <internal_commands.ab3@2770> INCLUDE "internal_commands.ab3"
0003D2C0 <internal_commands.ab3@2771> INCLUDE "internal_commands.ab3"
0003D2C8 <internal_commands.ab3@2772> INCLUDE "internal_commands.ab3"
0003D2D8 <internal_commands.ab3@2773> INCLUDE "internal_commands.ab3"
0003D2DC <internal_commands.ab3@2777> INCLUDE "internal_commands.ab3"
0003D2DE <internal_commands.ab3@2778> INCLUDE "internal_commands.ab3"
0003D2E7 <internal_commands.ab3@2779> INCLUDE "internal_commands.ab3"
0003D2EF <internal_commands.ab3@2780> INCLUDE "internal_commands.ab3"
0003D2F0 <internal_commands.ab3@2781> INCLUDE "internal_commands.ab3"
0003D2F4 <internal_commands.ab3@2784> INCLUDE "internal_commands.ab3"
0003D2F6 <internal_commands.ab3@2785> INCLUDE "internal_commands.ab3"
0003D2FE <internal_commands.ab3@2786> INCLUDE "internal_commands.ab3"
0003D307 <internal_commands.ab3@2787> INCLUDE "internal_commands.ab3"
0003D308 <internal_commands.ab3@2788> INCLUDE "internal_commands.ab3"
0003D30C <internal_commands.ab3@2791> INCLUDE "internal_commands.ab3"
0003D30E <internal_commands.ab3@2792> INCLUDE "internal_commands.ab3"
0003D316 <internal_commands.ab3@2793> INCLUDE "internal_commands.ab3"
0003D317 <internal_commands.ab3@2794> INCLUDE "internal_commands.ab3"
0003D318 <internal_commands.ab3@2795> INCLUDE "internal_commands.ab3"
0003D31C <internal_commands.ab3@2798> INCLUDE "internal_commands.ab3"
0003D31E <internal_commands.ab3@2799> INCLUDE "internal_commands.ab3"
0003D324 <internal_commands.ab3@2800> INCLUDE "internal_commands.ab3"
0003D325 <internal_commands.ab3@2801> INCLUDE "internal_commands.ab3"
0003D326 <internal_commands.ab3@2802> INCLUDE "internal_commands.ab3"
0003D32A <internal_commands.ab3@2805> INCLUDE "internal_commands.ab3"
0003D32C <internal_commands.ab3@2806> INCLUDE "internal_commands.ab3"
0003D333 <internal_commands.ab3@2807> INCLUDE "internal_commands.ab3"
0003D334 <internal_commands.ab3@2808> INCLUDE "internal_commands.ab3"
0003D338 <internal_commands.ab3@2812> INCLUDE "internal_commands.ab3"
0003D33A <internal_commands.ab3@2813> INCLUDE "internal_commands.ab3"
0003D341 <internal_commands.ab3@2814> INCLUDE "internal_commands.ab3"
0003D342 <internal_commands.ab3@2815> INCLUDE "internal_commands.ab3"
0003D346 <internal_commands.ab3@2819> INCLUDE "internal_commands.ab3"
0003D348 <internal_commands.ab3@2820> INCLUDE "internal_commands.ab3"
0003D34F <internal_commands.ab3@2821> INCLUDE "internal_commands.ab3"
0003D350 <internal_commands.ab3@2822> INCLUDE "internal_commands.ab3"
0003D354 <internal_commands.ab3@2826> INCLUDE "internal_commands.ab3"
0003D356 <internal_commands.ab3@2827> INCLUDE "internal_commands.ab3"
0003D35D <internal_commands.ab3@2828> INCLUDE "internal_commands.ab3"
0003D35E <internal_commands.ab3@2829> INCLUDE "internal_commands.ab3"
0003D362 <internal_commands.ab3@2833> INCLUDE "internal_commands.ab3"
0003D364 <internal_commands.ab3@2834> INCLUDE "internal_commands.ab3"
0003D369 <internal_commands.ab3@2835> INCLUDE "internal_commands.ab3"
0003D37F <internal_commands.ab3@2836> INCLUDE "internal_commands.ab3"
0003D380 <internal_commands.ab3@2837> INCLUDE "internal_commands.ab3"
0003D384 <internal_commands.ab3@2840> INCLUDE "internal_commands.ab3"
0003D386 <internal_commands.ab3@2841> INCLUDE "internal_commands.ab3"
0003D390 <internal_commands.ab3@2842> INCLUDE "internal_commands.ab3"
0003D391 <internal_commands.ab3@2843> INCLUDE "internal_commands.ab3"
0003D392 <internal_commands.ab3@2844> INCLUDE "internal_commands.ab3"
0003D396 <internal_commands.ab3@2847> INCLUDE "internal_commands.ab3"
0003D398 <internal_commands.ab3@2848> INCLUDE "internal_commands.ab3"
0003D3A3 <internal_commands.ab3@2849> INCLUDE "internal_commands.ab3"
0003D3A4 <internal_commands.ab3@2850> INCLUDE "internal_commands.ab3"
0003D3A8 <internal_commands.ab3@2854> INCLUDE "internal_commands.ab3"
0003D3AA <internal_commands.ab3@2855> INCLUDE "internal_commands.ab3"
0003D3B6 <internal_commands.ab3@2856> INCLUDE "internal_commands.ab3"
0003D3E3 <internal_commands.ab3@2857> INCLUDE "internal_commands.ab3"
0003D3E4 <internal_commands.ab3@2858> INCLUDE "internal_commands.ab3"
0003D3E8 <internal_commands.ab3@2861> INCLUDE "internal_commands.ab3"
0003D3EA <internal_commands.ab3@2862> INCLUDE "internal_commands.ab3"
0003D3F2 <internal_commands.ab3@2863> INCLUDE "internal_commands.ab3"
0003D429 <internal_commands.ab3@2864> INCLUDE "internal_commands.ab3"
0003D42A <internal_commands.ab3@2865> INCLUDE "internal_commands.ab3"
0003D42E <internal_commands.ab3@2868> INCLUDE "internal_commands.ab3"
0003D430 <internal_commands.ab3@2869> INCLUDE "internal_commands.ab3"
0003D438 <internal_commands.ab3@2870> INCLUDE "internal_commands.ab3"
0003D457 <internal_commands.ab3@2871> INCLUDE "internal_commands.ab3"
0003D458 <internal_commands.ab3@2872> INCLUDE "internal_commands.ab3"
0003D45C <internal_commands.ab3@2875> INCLUDE "internal_commands.ab3"
0003D45E <internal_commands.ab3@2876> INCLUDE "internal_commands.ab3"
0003D465 <internal_commands.ab3@2877> INCLUDE "internal_commands.ab3"
0003D49B <internal_commands.ab3@2878> INCLUDE "internal_commands.ab3"
0003D49C <internal_commands.ab3@2879> INCLUDE "internal_commands.ab3"
0003D4A0 <internal_commands.ab3@2882> INCLUDE "internal_commands.ab3"
0003D4A2 <internal_commands.ab3@2883> INCLUDE "internal_commands.ab3"
0003D4AB <internal_commands.ab3@2884> INCLUDE "internal_commands.ab3"
0003D4E0 <internal_commands.ab3@2885> INCLUDE "internal_commands.ab3"
0003D4E4 <internal_commands.ab3@2889> INCLUDE "internal_commands.ab3"
0003D4E6 <internal_commands.ab3@2890> INCLUDE "internal_commands.ab3"
0003D4F6 <internal_commands.ab3@2891> INCLUDE "internal_commands.ab3"
0003D52D <internal_commands.ab3@2892> INCLUDE "internal_commands.ab3"
0003D52E <internal_commands.ab3@2893> INCLUDE "internal_commands.ab3"
0003D52E <AmiBlitz3.ab3@30735> INCLUDE "internal_commands.ab3"
0003D532 <AmiBlitz3.ab3@30740>            Dc.l cif_lt                                     ;ciflt
0003D536 <AmiBlitz3.ab3@30741>            Dc.l cif_eq                                     ;cifeq
0003D53A <AmiBlitz3.ab3@30742>            Dc.l cif_gt                                     ;cifgt
0003D53E <AmiBlitz3.ab3@30743>            Ds.l 1                                          ;0
0003D542 <AmiBlitz3.ab3@30744>            Dc.l cif_le                                     ;cifle
0003D546 <AmiBlitz3.ab3@30745>            Dc.l cif_ne                                     ;cifne
0003D54A <AmiBlitz3.ab3@30746>            Dc.l cif_le                                     ;cifge
0003D54E <AmiBlitz3.ab3@30747>            Ds.l 1                                          ;0
0003D552 <AmiBlitz3.ab3@30748>            Dc.l cif_ge                                     ;cifge
0003D556 <AmiBlitz3.ab3@30749>            Dc.l cif_ne                                     ;cifne
0003D55A <AmiBlitz3.ab3@30750>            Dc.l cif_ge                                     ;cifge
0003D55E <AmiBlitz3.ab3@30751>            Ds.l 1                                          ;0
0003D562 <AmiBlitz3.ab3@30754>            Dc.l do_newtype                                 ;donewtype
0003D566 <AmiBlitz3.ab3@30755>            Dc.l do_end                                     ;doend
0003D56A <AmiBlitz3.ab3@30756>            Dc.l do_let                                     ;dolet
0003D56E <AmiBlitz3.ab3@30757>            Dc.l do_dim                                     ;dodim
0003D572 <AmiBlitz3.ab3@30758>            Dc.l do_goto                                    ;dogoto
0003D576 <AmiBlitz3.ab3@30759>            Dc.l do_gosub                                   ;dogosub
0003D57A <AmiBlitz3.ab3@30760>            Dc.l do_return                                  ;doreturn
0003D57E <AmiBlitz3.ab3@30761>            Dc.l do_statement                               ;dostate
0003D582 <AmiBlitz3.ab3@30762>            Dc.l do_function                                ;dofunc
0003D586 <AmiBlitz3.ab3@30763>            Dc.l do_mousewait                               ;domwait
0003D58A <AmiBlitz3.ab3@30764>            Dc.l do_if                                      ;doif
0003D58E <AmiBlitz3.ab3@30765>            Dc.l do_while                                   ;dowhile
0003D592 <AmiBlitz3.ab3@30766>            Dc.l do_Macro                                   ;domacro
0003D596 <AmiBlitz3.ab3@30767>            Dc.l do_select                                  ;doselect
0003D59A <AmiBlitz3.ab3@30768>            Dc.l do_case                                    ;docase
0003D59E <AmiBlitz3.ab3@30769>            Dc.l do_default                                 ;dodefault
0003D5A2 <AmiBlitz3.ab3@30770>            Dc.l do_AsmExit                                 ;doasmexit
0003D5A6 <AmiBlitz3.ab3@30771>            Dc.l do_xinclude                                ;doxinclude
0003D5AA <AmiBlitz3.ab3@30772>            Dc.l do_INCLUDE                                 ;doinclude
0003D5AE <AmiBlitz3.ab3@30773>            Dc.l do_syntax                                  ;syntaxerr
0003D5B2 <AmiBlitz3.ab3@30774>            Dc.l do_shared                                  ;doshared
0003D5B6 <AmiBlitz3.ab3@30775>            Dc.l do_for                                     ;dofor
0003D5BA <AmiBlitz3.ab3@30776>            Dc.l do_next                                    ;donext
0003D5BE <AmiBlitz3.ab3@30777>            Dc.l syntaxerr                                  ; To
0003D5C2 <AmiBlitz3.ab3@30778>            Dc.l syntaxerr                                  ; Step
0003D5C6 <AmiBlitz3.ab3@30779>            Dc.l do_data                                    ;dodata
0003D5CA <AmiBlitz3.ab3@30780>            Dc.l do_read                                    ;doread
0003D5CE <AmiBlitz3.ab3@30784>            Dc.l syntaxerr                                  ; CNIF
0003D5D2 <AmiBlitz3.ab3@30785>            Dc.l syntaxerr                                  ; CSIF
0003D5D6 <AmiBlitz3.ab3@30786>            Dc.l syntaxerr                                  ; CELSE
0003D5DA <AmiBlitz3.ab3@30787>            Dc.l syntaxerr                                  ; CEND
0003D5DE <AmiBlitz3.ab3@30788>            Dc.l do_cerr                                    ;docerr
0003D5E2 <AmiBlitz3.ab3@30789>            Dc.l do_then                                    ;dothen
0003D5E6 <AmiBlitz3.ab3@30790>            Dc.l do_else                                    ;doelse
0003D5EA <AmiBlitz3.ab3@30791>            Dc.l do_even4                                   ;doeven4
0003D5EE <AmiBlitz3.ab3@30792>            Dc.l do_even8                                   ;doeven8
0003D5F2 <AmiBlitz3.ab3@30794>            Dc.l do_dc                                      ;dodc
0003D5F6 <AmiBlitz3.ab3@30795>            Dc.l do_ds                                      ;dods
0003D5FA <AmiBlitz3.ab3@30796>            Dc.l do_even                                    ;doeven
0003D5FE <AmiBlitz3.ab3@30797>            Dc.l do_dcb                                     ;dodcb
0003D602 <AmiBlitz3.ab3@30798>            Dc.l do_setreg                                  ;dosetreg
0003D606 <AmiBlitz3.ab3@30799>            Dc.l do_IncBin                                  ;doincbin
0003D60A <AmiBlitz3.ab3@30800>            Dc.l do_free                                    ;dofree
0003D60E <AmiBlitz3.ab3@30801>            Dc.l do_use                                     ;douse
0003D612 <AmiBlitz3.ab3@30802>            Dc.l do_Stop                                    ;dostop
0003D616 <AmiBlitz3.ab3@30803>            Dc.l do_Cont                                    ;docont
0003D61A <AmiBlitz3.ab3@30804>            Dc.l syntaxerr                                  ;syntaxeer
0003D61E <AmiBlitz3.ab3@30805>            Dc.l do_SetInt                                  ;dosetint
0003D622 <AmiBlitz3.ab3@30806>            Dc.l do_ClrInt                                  ;doclrint
0003D626 <AmiBlitz3.ab3@30807>            Dc.l do_MaxLen                                  ;domaxlen
0003D62A <AmiBlitz3.ab3@30808>            Dc.l do_DEFTYPE                                 ;dodeftype
0003D62E <AmiBlitz3.ab3@30809>            Dc.l do_BLITZ                                   ;doblitz
0003D632 <AmiBlitz3.ab3@30810>            Dc.l do_AMIGA                                   ;doamiga
0003D636 <AmiBlitz3.ab3@30811>            Dc.l do_QAMIGA                                  ;doqamiga
0003D63A <AmiBlitz3.ab3@30812>            Dc.l do_VWait                                   ;dovwait
0003D63E <AmiBlitz3.ab3@30813>            Dc.l do_LibJsr                                  ;dolibjsr
0003D642 <AmiBlitz3.ab3@30814>            Dc.l do_TokeJsr                                 ;dotokejsr
0003D646 <AmiBlitz3.ab3@30815>            Dc.l do_BLibJsr                                 ;doblibjsr
0003D64A <AmiBlitz3.ab3@30816>            Dc.l _extb                                      ;syntaxerr
0003D64E <AmiBlitz3.ab3@30820>            Dc.l syntaxerr                                  ;syntaxerr      ;flash2 ; for list
0003D652 <AmiBlitz3.ab3@30821>            Dc.l do_SetErr                                  ;doseterr
0003D656 <AmiBlitz3.ab3@30822>            Dc.l do_ClrErr                                  ;doclrerr
0003D65A <AmiBlitz3.ab3@30823>            Dc.l syntaxerr                                  ;syntaxerr
0003D65E <AmiBlitz3.ab3@30824>            Dc.l do_ErrFail                                 ;doerrfail
0003D662 <AmiBlitz3.ab3@30825>            Dc.l syntaxerr
0003D666 <AmiBlitz3.ab3@30826>            Dc.l syntaxerr                                  ;mod
0003D66A <AmiBlitz3.ab3@30827>            Dc.l syntaxerr                                  ;Pi
0003D66E <AmiBlitz3.ab3@30828>            Dc.l do_Repeat                                  ;dorepeat
0003D672 <AmiBlitz3.ab3@30829>            Dc.l do_Until                                   ;dountil
0003D676 <AmiBlitz3.ab3@30830>            Dc.l do_PutReg                                  ;doputreg
0003D67A <AmiBlitz3.ab3@30831>            Dc.l do_Pop                                     ;dopop
0003D67E <AmiBlitz3.ab3@30832>            Dc.l do_INCDIR                                  ;doincdir
0003D682 <AmiBlitz3.ab3@30833>            Dc.l mydo_Endif2                                ;mydoendif2
0003D686 <AmiBlitz3.ab3@30834>            Dc.l do_Wend                                    ;dowend
0003D68A <AmiBlitz3.ab3@30835>            Dc.l do_SysJsr                                  ;dosysjsr
0003D68E <AmiBlitz3.ab3@30836>            Dc.l do_WBStartup                               ;dowbstartup
0003D692 <AmiBlitz3.ab3@30837>            Dc.l syntaxerr
0003D696 <AmiBlitz3.ab3@30838>            Dc.l do_Ongo                                    ;doongo
0003D69A <AmiBlitz3.ab3@30839>            Dc.l syntaxerr
0003D69E <AmiBlitz3.ab3@30840>            Dc.l do_Forever                                 ;doforever
0003D6A2 <AmiBlitz3.ab3@30841>            Dc.l do_Restore                                 ;dorestore
0003D6A6 <AmiBlitz3.ab3@30842>            Dc.l do_Exchange                                ;doexchange
0003D6AA <AmiBlitz3.ab3@30843>            Dc.l do_USEPATH                                 ;dousepath
0003D6AE <AmiBlitz3.ab3@30844>            Dc.l do_CloseEd                                 ;doclosed
0003D6B2 <AmiBlitz3.ab3@30845>            Dc.l do_NoCli                                   ;donocli
0003D6B6 <AmiBlitz3.ab3@30846>            Dc.l syntaxerr                                  ;syntaxerr
0003D6BA <AmiBlitz3.ab3@30847>            Dc.l syntaxerr                                  ;syntaxerr
0003D6BE <AmiBlitz3.ab3@30848>            Dc.l syntaxerr                                  ;syntaxerr
0003D6C2 <AmiBlitz3.ab3@30849>            Dc.l syntaxerr                                  ;syntaxerr
0003D6C6 <AmiBlitz3.ab3@30850>            Dc.l syntaxerr                                  ;syntaxerr
0003D6CA <AmiBlitz3.ab3@30851>            Dc.l do_runerrson                               ;dorunerrson
0003D6CE <AmiBlitz3.ab3@30852>            Dc.l do_runerrsoff                              ;dorunerrsoff
0003D6D2 <AmiBlitz3.ab3@30853>            Dc.l do_uselastpath
0003D6D6 <AmiBlitz3.ab3@30854>            Dc.l do_regload
0003D6DA <AmiBlitz3.ab3@30855>            Dc.l do_regsave
0003D6DE <AmiBlitz3.ab3@30856>            Dc.l do_Object
0003D6E2 <AmiBlitz3.ab3@30857>            Dc.l do_usepath2
0003D6E6 <AmiBlitz3.ab3@30858>            Dc.l do_LastRunErrsMode
0003D6EA <AmiBlitz3.ab3@30881> menu_items:Dc.l menu_compile_run                                ;menuadds oreg source
0003D6EE <AmiBlitz3.ab3@30882>            Dc.l menu_run
0003D6F2 <AmiBlitz3.ab3@30883>            Dc.l menu_createexecutable
0003D6F6 <AmiBlitz3.ab3@30884>            Dc.l menu_dummyfunc                                  ;was menu_compileroptions
0003D6FA <AmiBlitz3.ab3@30885>            Dc.l menu_createresidentfile
0003D6FE <AmiBlitz3.ab3@30886> 
0003D702 <AmiBlitz3.ab3@30887> 
0003D706 <AmiBlitz3.ab3@30888>            Dc.l menu_dummyfunc                                  ;was menu_calculator
0003D70A <AmiBlitz3.ab3@30889>            Dc.l menu_reloadlibs
0003D70E <AmiBlitz3.ab3@30890>            Dc.l menu_loaddebugmodule
0003D712 <AmiBlitz3.ab3@30891>            Dc.l menu_dummyfunc
0003D716 <AmiBlitz3.ab3@30892>            Dc.l menu_newcreate
0003D71A <AmiBlitz3.ab3@30893>            Dc.l menu_dummyfunc
0003D71E <AmiBlitz3.ab3@30894>            Dc.l menu_toggledebug
0003D722 <AmiBlitz3.ab3@30895>            Dc.l menu_dummyfunc
0003D726 <AmiBlitz3.ab3@30896>            Dc.l menu_dummyfunc
0003D728 <AmiBlitz3.ab3@30897> Even4
0003D752 <AmiBlitz3.ab3@30901>   !basic
0003D7B4 <AmiBlitz3.ab3@30902>   error{!TRANS{"Invalid AmiBlitz3 menu item called!"} }
0003D7D2 <AmiBlitz3.ab3@30903>   !asm
0003D7D4 <AmiBlitz3.ab3@30904> RTS
0003D7D5 <AmiBlitz3.ab3@30910> set_autorun:               Dc.b $00
0003D7DA <AmiBlitz3.ab3@30911> autorun:                   Dc.b $80,$01,$01,$00,$01
0003D7DB <AmiBlitz3.ab3@30913> set_interruptcheck:        Dc.b $00
0003D7E0 <AmiBlitz3.ab3@30914> interruptcheck             Dc.b $80,$01,$01,$00,$01
0003D7E1 <AmiBlitz3.ab3@30916> set_assemblercheck:        Ds.b 1
0003D7E6 <AmiBlitz3.ab3@30917> assemblercheck:            Dc.b $00,$01,$01,$00,$01
0003D7E7 <AmiBlitz3.ab3@30919> set_overflowcheck:         Ds.b 1
0003D7EC <AmiBlitz3.ab3@30920> overflowcheck:             Dc.b $00,$01,$01,$00,$01
0003D7F2 <AmiBlitz3.ab3@30922> default_obsolete:          Dc.b $00,$80,$01,$01,$00,$01
0003D7F8 <AmiBlitz3.ab3@30923> default_interruptcheck:    Dc.b $00,$80,$01,$01,$00,$01
0003D7FE <AmiBlitz3.ab3@30924> default_overflowcheck:     Dc.b $00,$80,$01,$01,$00,$01
0003D800 <AmiBlitz3.ab3@30925> Even4
0003D80C <AmiBlitz3.ab3@30928> tsthead:                   Dc.l $000003F3,$00000000,$00000001
0003D814 <AmiBlitz3.ab3@30929>                            Dc.l $00000000,$00000000
0003D81C <AmiBlitz3.ab3@30930> tstsize1:                  Dc.l $00000100,$000003E9
0003D820 <AmiBlitz3.ab3@30931> tstsize2:                  Dc.l $00000100
0003D824 <AmiBlitz3.ab3@30932> tstend:                    Dc.l $000003EC
0003D82C <AmiBlitz3.ab3@30933> tstsize3:                  Ds.l 2
0003D830 <AmiBlitz3.ab3@30934> tstdone:                   Dc.l $000003F2
0003D834 <AmiBlitz3.ab3@30937> edstruct:                  Dc.l tokens                     ;data for ted
0003D838 <AmiBlitz3.ab3@30941>                            Dc.l 0
0003D83C <AmiBlitz3.ab3@30943>                            Dc.l read_xtrafile              ;load .xtra routine
0003D840 <AmiBlitz3.ab3@30944>                            Dc.l write_xtrafile             ;save .xtra routine
0003D844 <AmiBlitz3.ab3@30945>                            Dc.l call_menuentry             ;Menu Routine
0003D848 <AmiBlitz3.ab3@30946>                            Ds.l 1                          ;cleanup (?)
0003D84C <AmiBlitz3.ab3@30947>                            Dc.b ":",34,".;"
0003D948 <AmiBlitz3.ab3@30950> 
0003DA28 <AmiBlitz3.ab3@30951>                            Ds.l 56
0003DA2A <AmiBlitz3.ab3@30956> lslimm:                    Dc.b $E1,$48                                             ;LSL.W   #8,D0
0003DA2E <AmiBlitz3.ab3@30959> use:                       Dc.b $26,$6D,$00,$00                                     ;MOVEA.L $0000(A5),A3
0003DA30 <AmiBlitz3.ab3@30960>                            Dc.b $D6,$C0                                             ;ADDA.W  D0,A3
0003DA34 <AmiBlitz3.ab3@30961>                            Dc.b $2B,$4B,$00,$00                                     ;MOVE.L  A3,$0000(A5)
0003DA3A <AmiBlitz3.ab3@30965> beginarr:                  Dc.b $20,$3C,$00,$00,$00,$00                             ;MOVE.L  #$00000000,D0
0003DA3C <AmiBlitz3.ab3@30969>                            Dc.b $C0,$C1                                             ;MULU.W  D1,D0
0003DA40 <AmiBlitz3.ab3@30972> putarr:                    Dc.b $2B,$40 :                            Dc.b $00,$00   ;MOVE.L  D0,$0000(A5)
0003DA44 <AmiBlitz3.ab3@30975> doarr:                     Dc.b $34,$3C,$00,$00                                     ;MOVE.W  #$0000,D2
0003DA48 <AmiBlitz3.ab3@30976>                            Dc.b $36,$3C,$00,$00                                     ;MOVE.W  #$0000,D3
0003DA4A <AmiBlitz3.ab3@30982>                            Dc.b $4A,$40                                             ;TST.W   D0
0003DA4C <AmiBlitz3.ab3@30986>                            Dc.b $4A,$80                                             ;TST.L   D0
0003DA4E <AmiBlitz3.ab3@30989> nops8:                     Dc.b $4E,$71                                             ;NOP
0003DA50 <AmiBlitz3.ab3@30990>                            Dc.b $4E,$71                                             ;NOP
0003DA52 <AmiBlitz3.ab3@30991>                            Dc.b $4E,$71                                             ;NOP
0003DA54 <AmiBlitz3.ab3@30992>                            Dc.b $4E,$71                                             ;NOP
0003DA56 <AmiBlitz3.ab3@30993> nops4:                     Dc.b $4E,$71                                             ;NOP
0003DA58 <AmiBlitz3.ab3@30995>                            Dc.b $4E,$71                                             ;NOP
0003DA5A <AmiBlitz3.ab3@30996>                            Dc.b $4E,$71                                             ;NOP
0003DA5C <AmiBlitz3.ab3@30997>                            Dc.b $4E,$71                                             ;NOP
0003DA60 <AmiBlitz3.ab3@31001> dataget:                   Dc.b $26,$6D :                            Dc.b $00,$00   ;MOVEA.L $0000(A5),A3
0003DA64 <AmiBlitz3.ab3@31004> dataput:                   Dc.b $2B,$4B :                            Dc.b $00,$00   ;MOVE.L  A3,$0000(A5)
0003DA66 <AmiBlitz3.ab3@31007> stlenget:                  Dc.b $2F,$1B                                             ;MOVE.L  (A3)+,-(A7)
0003DA68 <AmiBlitz3.ab3@31010> stalign:                   Dc.b $52,$4B                                             ;ADDQ.W  #1,A3
0003DA6A <AmiBlitz3.ab3@31011>                            Dc.b $C1,$8B                                             ;EXG D0,A3
0003DA6E <AmiBlitz3.ab3@31012>                            Dc.b $08,$80,$00,$00                                     ;BCLR    #0,D0
0003DA70 <AmiBlitz3.ab3@31013>                            Dc.b $C1,$8B                                             ;EXG D0,A3
0003DA72 <AmiBlitz3.ab3@31019> dataletb:                  Dc.b $52,$4B                                             ;ADDQ.W  #1,A3
0003DA76 <AmiBlitz3.ab3@31020>                            Dc.b $1B,$5B,$00,$00                                     ;MOVE.B  (A3)+,$0000(A5)
0003DA78 <AmiBlitz3.ab3@31025> dataletbl:                 Dc.b $52,$4B                                             ;ADDQ.W  #1,A3
0003DA7C <AmiBlitz3.ab3@31026>                            Dc.b $19,$5B,$00,$00                                     ;MOVE.B  (A3)+,$0000(A4)
0003DA7E <AmiBlitz3.ab3@31030> dataletb2:                 Dc.b $52,$4B                                             ;ADDQ.W  #1,A3
0003DA80 <AmiBlitz3.ab3@31031>                            Dc.b $14,$9B                                             ;MOVE.B  (A3)+,(A2)
0003DA84 <AmiBlitz3.ab3@31037> dataletw:                  Dc.b $3B,$5B,$00,$00                                     ;MOVE.W  (A3)+,$0000(A5)
0003DA86 <AmiBlitz3.ab3@31038>                            Dc.b $34,$9B                                             ;MOVE.W  (A3)+,(A2)
0003DA8A <AmiBlitz3.ab3@31039>                            Dc.b $39,$5B,$00,$00                                     ;MOVE.W  (A3)+,$0000(A4)
0003DA8E <AmiBlitz3.ab3@31043> dataletl:                  Dc.b $2B,$5B,$00,$00                                     ;MOVE.L  (A3)+,$0000(A5)
0003DA90 <AmiBlitz3.ab3@31044>                            Dc.b $24,$9B                                             ;MOVE.L  (A3)+,(A2)
0003DA94 <AmiBlitz3.ab3@31045>                            Dc.b $29,$5B,$00,$00                                     ;MOVE.L  (A3)+,$0000(A4)
0003DA96 <AmiBlitz3.ab3@31048> nextfixw:                  Dc.b $50,$4F                                             ;ADDQ.W  #8,A7
0003DA9A <AmiBlitz3.ab3@31051> nextfixw2:                 Dc.b $4F,$EF,$00,$0A                                     ;LEA $000A(A7),A7
0003DA9E <AmiBlitz3.ab3@31054> nextfixl:                  Dc.b $4F,$EF,$00,$0C                                     ;LEA $000C(A7),A7
0003DAA2 <AmiBlitz3.ab3@31057> nextfixl2:                 Dc.b $4F,$EF,$00,$0E                                     ;LEA $000E(A7),A7
0003DAA6 <AmiBlitz3.ab3@31061>                            Dc.b $24,$6F,$00,$04                                     ;MOVEA.L $0004(A7),A2
0003DAA8 <AmiBlitz3.ab3@31062>                            Dc.b $30,$17                                             ;MOVE.W  (A7),D0
0003DAAA <AmiBlitz3.ab3@31063>                            Dc.b $D1,$12                                             ;ADD.B   D0,(A2)
0003DAAE <AmiBlitz3.ab3@31068>                            Dc.b $24,$6F,$00,$04                                     ;MOVEA.L $0004(A7),A2
0003DAB0 <AmiBlitz3.ab3@31069>                            Dc.b $30,$17                                             ;MOVE.W  (A7),D0
0003DAB2 <AmiBlitz3.ab3@31070>                            Dc.b $D1,$52                                             ;ADD.W   D0,(A2)
0003DAB6 <AmiBlitz3.ab3@31075>                            Dc.b $24,$6F,$00,$08                                     ;MOVEA.L $0008(A7),A2
0003DAB8 <AmiBlitz3.ab3@31076>                            Dc.b $20,$17                                             ;MOVE.L  (A7),D0
0003DABA <AmiBlitz3.ab3@31077>                            Dc.b $D1,$92                                             ;ADD.L   D0,(A2)
0003DABE <AmiBlitz3.ab3@31082>                            Dc.b $24,$6F,$00,$08                                     ;MOVEA.L $0008(A7),A2
0003DAC0 <AmiBlitz3.ab3@31083>                            Dc.b $20,$12                                             ;MOVE.L  (A2),D0
0003DAC2 <AmiBlitz3.ab3@31084>                            Dc.b $22,$17                                             ;MOVE.L  (A7),D1
0003DAC6 <AmiBlitz3.ab3@31085>                            Dc.b $4E,$AE,$FF,$BE                                     ;JSR -$0042(A6)
0003DAC8 <AmiBlitz3.ab3@31086>                            Dc.b $24,$80                                             ;MOVE.L  D0,(A2)
0003DACC <AmiBlitz3.ab3@31091>                            Dc.b $24,$6F,$00,$04                                     ;MOVEA.L $0004(A7),A2
0003DACE <AmiBlitz3.ab3@31092>                            Dc.b $10,$12                                             ;MOVE.B  (A2),D0
0003DAD2 <AmiBlitz3.ab3@31093>                            Dc.b $32,$2F,$00,$02                                     ;MOVE.W  $0002(A7),D1
0003DAD4 <AmiBlitz3.ab3@31094>                            Dc.b $4A,$57                                             ;TST.W   (A7)
0003DAD8 <AmiBlitz3.ab3@31095>                            Dc.b $6A,$00,$00,$04                                     ;BPL.W   L000001         ;.skip org source
0003DADA <AmiBlitz3.ab3@31096>                            Dc.b $C1,$41                                             ;EXG D0,D1
0003DADC <AmiBlitz3.ab3@31099>                            Dc.b $B0,$01                                             ;CMP.B   D1,D0
0003DAE0 <AmiBlitz3.ab3@31104>                            Dc.b $24,$6F,$00,$04                                     ;MOVEA.L $0004(A7),A2
0003DAE2 <AmiBlitz3.ab3@31105>                            Dc.b $30,$12                                             ;MOVE.W  (A2),D0
0003DAE6 <AmiBlitz3.ab3@31106>                            Dc.b $32,$2F,$00,$02                                     ;MOVE.W  $0002(A7),D1
0003DAE8 <AmiBlitz3.ab3@31107>                            Dc.b $4A,$57                                             ;TST.W   (A7)
0003DAEC <AmiBlitz3.ab3@31108>                            Dc.b $6A,$00,$00,$04                                     ;BPL.W   L000002         ;.skip org source
0003DAEE <AmiBlitz3.ab3@31109>                            Dc.b $C1,$41                                             ;EXG D0,D1
0003DAF0 <AmiBlitz3.ab3@31112>                            Dc.b $B0,$41                                             ;CMP.W   D1,D0
0003DAF4 <AmiBlitz3.ab3@31117>                            Dc.b $24,$6F,$00,$08                                     ;MOVEA.L $0008(A7),A2
0003DAF6 <AmiBlitz3.ab3@31118>                            Dc.b $20,$12                                             ;MOVE.L  (A2),D0
0003DAFA <AmiBlitz3.ab3@31119>                            Dc.b $22,$2F,$00,$04                                     ;MOVE.L  $0004(A7),D1
0003DAFC <AmiBlitz3.ab3@31120>                            Dc.b $4A,$57                                             ;TST.W   (A7)
0003DB00 <AmiBlitz3.ab3@31121>                            Dc.b $6A,$00,$00,$04                                     ;BPL.W   L000003         ;.skip org source
0003DB02 <AmiBlitz3.ab3@31122>                            Dc.b $C1,$41                                             ;EXG D0,D1
0003DB04 <AmiBlitz3.ab3@31125>                            Dc.b $B0,$81                                             ;CMP.L   D1,D0
0003DB08 <AmiBlitz3.ab3@31130>                            Dc.b $24,$6F,$00,$08                                     ;MOVEA.L $0008(A7),A2
0003DB0A <AmiBlitz3.ab3@31131>                            Dc.b $20,$12                                             ;MOVE.L  (A2),D0
0003DB0E <AmiBlitz3.ab3@31132>                            Dc.b $22,$2F,$00,$04                                     ;MOVE.L  $0004(A7),D1
0003DB14 <AmiBlitz3.ab3@31133>                            Dc.b $08,$2F,$00,$07,$00,$03                             ;BTST    #7,$0003(A7)
0003DB18 <AmiBlitz3.ab3@31134>                            Dc.b $67,$00,$00,$04                                     ;BEQ.W   L000004
0003DB1A <AmiBlitz3.ab3@31135>                            Dc.b $C1,$41                                             ;EXG D0,D1
0003DB1E <AmiBlitz3.ab3@31142>                            Dc.b $4E,$AE,$FF,$D6                                     ;JSR -$002A(A6)
0003DB20 <AmiBlitz3.ab3@31146> swapd0:                    Dc.b $48,$40                                             ;SWAP    D0
0003DB22 <AmiBlitz3.ab3@31149> pushindex:                 Dc.b $2F,$0A                                             ;MOVE.L  A2,-(A7)
0003DB26 <AmiBlitz3.ab3@31152> leaamp:                    Dc.b $45,$ED :                            Dc.b $00,$00   ;LEA $0000(A5),A2
0003DB28 <AmiBlitz3.ab3@31153> leaamp2:                   Dc.b $20,$0A                                             ;MOVE.L  A2,D0
0003DB2C <AmiBlitz3.ab3@31156> leaampl:                   Dc.b $45,$EC :                            Dc.b $00,$00   ;LEA $0000(A4),A2
0003DB2E <AmiBlitz3.ab3@31159> stamp:                     Dc.b $20,$12                                             ;MOVE.L  (A2),D0
0003DB32 <AmiBlitz3.ab3@31162> stamp2:                    Dc.b $24,$6D :                            Dc.b $00,$00   ;MOVEA.L $0000(A5),A2
0003DB34 <AmiBlitz3.ab3@31166>                            Dc.b $58,$4F                                             ;ADDQ.W  #4,A7
0003DB36 <AmiBlitz3.ab3@31169> pushd0wd:                  Dc.b $3F,$00                                             ;MOVE.W  D0,-(A7)
0003DB38 <AmiBlitz3.ab3@31172> pushd0l:                   Dc.b $2F,$00                                             ;MOVE.L  D0,-(A7)
0003DB3C <AmiBlitz3.ab3@31175> movenumrep:                Dc.b $3E,$3C :                            Dc.b $00,$00   ;MOVE.W  #$0000,D7
0003DB40 <AmiBlitz3.ab3@31178> preplibst:                 Dc.b $45,$EF :                            Dc.b $00,$00   ;LEA $0000(A7),A2
0003DB44 <AmiBlitz3.ab3@31181> fixlibst:                  Dc.b $4F,$EF :                            Dc.b $00,$00   ;LEA $0000(A7),A7
0003DB46 <AmiBlitz3.ab3@31184> pushdn:                    Dc.b $2F,$00                                             ;MOVE.L  D0,-(A7)
0003DB48 <AmiBlitz3.ab3@31187> movea3a7:                  Dc.b $2F,$0B                                             ;MOVE.L  A3,-(A7)
0003DB4C <AmiBlitz3.ab3@31190> movestst2:                 Dc.b $20,$2F :                            Dc.b $00,$06   ;MOVE.L  $0006(A7),D0
0003DB52 <AmiBlitz3.ab3@31191>                            Dc.b $3F,$6F,$00,$04,$00,$08                             ;MOVE.W  $0004(A7),$0008(A7)
0003DB54 <AmiBlitz3.ab3@31192>                            Dc.b $2E,$9F                                             ;MOVE.L  (A7)+,(A7)
0003DB58 <AmiBlitz3.ab3@31196> movea7dn:                  Dc.b $20,$2F :                            Dc.b $00,$04   ;MOVE.L  $0004(A7),D0
0003DB5A <AmiBlitz3.ab3@31197>                            Dc.b $2E,$9F                                             ;MOVE.L  (A7)+,(A7)
0003DB5C <AmiBlitz3.ab3@31201> moved0a3:                  Dc.b $26,$40                                             ;MOVEA.L D0,A3
0003DB60 <AmiBlitz3.ab3@31204> movestdn:                  Dc.b $20,$2D :                            Dc.b $00,$00   ;MOVE.L  $0000(A5),D0
0003DB62 <AmiBlitz3.ab3@31208>                            Dc.b $20,$0B                                             ;MOVE.L  A3,D0
0003DB64 <AmiBlitz3.ab3@31212>                            Dc.b $2F,$00                                             ;MOVE.L  D0,-(A7)
0003DB66 <AmiBlitz3.ab3@31216>                            Dc.b $20,$1F                                             ;MOVE.L  (A7)+,D0
0003DB6A <AmiBlitz3.ab3@31219> moverts:                   Dc.b $2F,$57 :                            Dc.b $00,$00   ;MOVE.L  (A7),$0000(A7)
0003DB6E <AmiBlitz3.ab3@31222> fixstack:                  Dc.b $4F,$EF :                            Dc.b $00,$00   ;LEA $0000(A7),A7
0003DB70 <AmiBlitz3.ab3@31225> fixq:                      Dc.b $50,$4F                                             ;ADDQ.W  #8,A7
0003DB72 <AmiBlitz3.ab3@31228> fix1:                      Dc.b $2E,$9F                                             ;MOVE.L  (A7)+,(A7)
0003DB74 <AmiBlitz3.ab3@31231> movedna3:                  Dc.b $26,$40                                             ;MOVEA.L D0,A3
0003DB78 <AmiBlitz3.ab3@31234> least:                     Dc.b $45,$EC :                            Dc.b $00,$00   ;LEA $0000(A4),A2
0003DB7C <AmiBlitz3.ab3@31237> funcst:                    Dc.b $2F,$2C :                            Dc.b $00,$00   ;MOVE.L  $0000(A4),-(A7)
0003DB7E <AmiBlitz3.ab3@31240> addq4a2:                   Dc.b $58,$4A                                             ;ADDQ.W  #4,A2
0003DB80 <AmiBlitz3.ab3@31244>                            Dc.b $2F,$0B                                             ;MOVE.L  A3,-(A7)
0003DB84 <AmiBlitz3.ab3@31247>                            Dc.b $2B,$4B,$00,$00                                     ;MOVE.L  A3,$0000(A5)
0003DB86 <AmiBlitz3.ab3@31253>                            Dc.b $26,$5F                                             ;MOVEA.L (A7)+,A3
0003DB8A <AmiBlitz3.ab3@31256>                            Dc.b $2B,$4B,$00,$00                                     ;MOVE.L  A3,$0000(A5)
0003DB8C <AmiBlitz3.ab3@31262>                            Dc.b $CB,$4C                                             ;EXG A5,A4
0003DB90 <AmiBlitz3.ab3@31266> linksize:                  Dc.b $4E,$54 :                            Dc.b $00,$00   ;LINK    A4,#-$0000
0003DB92 <AmiBlitz3.ab3@31269> unlinka4:                  Dc.b $4E,$5C                                             ;UNLK    A4
0003DB94 <AmiBlitz3.ab3@31273>                            Dc.b $2F,$0A                                             ;MOVE.L  A2,-(A7)
0003DB96 <AmiBlitz3.ab3@31277>                            Dc.b $24,$5F                                             ;MOVEA.L (A7)+,A2
0003DB9C <AmiBlitz3.ab3@31280> gotocode:                  Dc.b $4E,$F9,$00,$00,$00,$00                             ;JMP $00000000
0003DBA2 <AmiBlitz3.ab3@31283> gosubcode:                 Dc.b $4E,$B9,$00,$00,$00,$00                             ;JSR $00000000
0003DBAA <AmiBlitz3.ab3@31287> mwait:                     Dc.b $08,$39,$00,$06,$00,$BF,$E0,$01                     ;BTST    #6,$00BFE001
0003DBAE <AmiBlitz3.ab3@31288>                            Dc.b $66,$00,$FF,$F6                                     ;BNE.W   L000005       ;mwait: org source
0003DBB0 <AmiBlitz3.ab3@31292> libreg:                    Dc.b $20,$00                                             ;MOVE.L  D0,D0
0003DBB4 <AmiBlitz3.ab3@31295> libbase:                   Dc.b $2C,$6D :                            Dc.b $00,$00   ;MOVEA.L $0000(A5),A6
0003DBB8 <AmiBlitz3.ab3@31298> libjsr:                    Dc.b $4E,$AE :                            Dc.b $00,$00   ;JSR $0000(A6)
0003DBBC <AmiBlitz3.ab3@31301> regtransd:                 Dc.b $20,$2D,$00,$00                                     ;MOVE.L  $0000(A5),D0
0003DBC0 <AmiBlitz3.ab3@31302> regtransa:                 Dc.b $20,$6D,$00,$00                                     ;MOVEA.L $0000(A5),A0
0003DBC4 <AmiBlitz3.ab3@31306>                            Dc.b $26,$7C,$00,$00                                     ;MOVEA.L #$00000000,A3
0003DBC8 <AmiBlitz3.ab3@31308>                            Dc.l $3F1B                                               ;MOVE.W  (A3)+,-(A7)
0003DBCA <AmiBlitz3.ab3@31311> movea2dn:                  Dc.b $20,$12                                             ;MOVE.L  (A2),D0
0003DBCE <AmiBlitz3.ab3@31314> moved3a5dn:                Dc.b $20,$2D,$00,$00                                     ;MOVE.L  $0000(A5),D0
0003DBD0 <AmiBlitz3.ab3@31317> stvarget2:                 Dc.b $70,$00                                             ;MOVEQ   #$00,D0
0003DBD2 <AmiBlitz3.ab3@31318>                            Dc.b $2F,$00                                             ;MOVE.L  D0,-(A7)
0003DBD4 <AmiBlitz3.ab3@31319>                            Dc.b $4A,$92                                             ;TST.L   (A2)
0003DBD8 <AmiBlitz3.ab3@31320> 
0003DBDA <AmiBlitz3.ab3@31321>                            Dc.b $20,$52                                             ;MOVEA.L (A2),A0
0003DBDC <AmiBlitz3.ab3@31322>                            Dc.b $59,$48                                             ;SUBQ.W  #4,A0
0003DBDE <AmiBlitz3.ab3@31323>                            Dc.b $2E,$98                                             ;MOVE.L  (A0)+,(A7)
0003DBE4 <AmiBlitz3.ab3@31325>                            Dc.b $4E,$B9,$00,$00,$00,$00                             ;JSR $00000000
0003DBE6 <AmiBlitz3.ab3@31330> addcode:                   Dc.b $20,$1F                                             ;MOVE.L  (A7)+,D0
0003DBE8 <AmiBlitz3.ab3@31331>                            Dc.b $D1,$97                                             ;ADD.L   D0,(A7)
0003DBEA <AmiBlitz3.ab3@31335> pushlen:                   Dc.b $2F,$18                                             ;MOVE.L  (A0)+,-(A7)
0003DBEE <AmiBlitz3.ab3@31338> leaa5d3a2:                 Dc.b $45,$ED :                            Dc.b $00,$00   ;LEA $0000(A5),A2
0003DBF0 <AmiBlitz3.ab3@31341> pusha2:                    Dc.b $2F,$0A                                             ;MOVE.L  A2,-(A7)
0003DBF2 <AmiBlitz3.ab3@31345>                            Dc.b $24,$57                                             ;MOVEA.L (A7),A2
0003DBF4 <AmiBlitz3.ab3@31348> pulla2:                    Dc.b $24,$5F                                             ;MOVEA.L (A7)+,A2
0003DBF8 <AmiBlitz3.ab3@31351> pulla2st:                  Dc.b $24,$6F,$00,$04                                     ;MOVEA.L $0004(A7),A2
0003DBFA <AmiBlitz3.ab3@31352>                            Dc.b $2E,$9F                                             ;MOVE.L  (A7)+,(A7)
0003DBFE <AmiBlitz3.ab3@31356> pusha3:                    Dc.b $2F,$2D :                            Dc.b $00,$00   ;MOVE.L  $0000(A5),-(A7)
0003DC02 <AmiBlitz3.ab3@31357> pusha32:                   Dc.b $2B,$4B :                            Dc.b $00,$00   ;MOVE.L  A3,$0000(A5)
0003DC06 <AmiBlitz3.ab3@31361> pulla3:                    Dc.b $2B,$5F :                            Dc.b $00,$00   ;MOVE.L  (A7)+,$0000(A5)
0003DC0A <AmiBlitz3.ab3@31365> geta3:                     Dc.b $26,$6D :                            Dc.b $00,$00   ;MOVEA.L $0000(A5),A3
0003DC10 <AmiBlitz3.ab3@31369> numtoa0:                   Dc.b $20,$7C,$00,$00,$00,$00                             ;MOVEA.L #$00000000,A0
0003DC16 <AmiBlitz3.ab3@31372> numtoa2:                   Dc.b $24,$7C,$00,$00,$00,$00                             ;MOVEA.L #$00000000,A2
0003DC1A <AmiBlitz3.ab3@31376> endarray:                  Dc.b $38,$3C :                            Dc.b $00,$00   ;MOVE.W  #$0000,D4
0003DC1E <AmiBlitz3.ab3@31380>                            Dc.b $34,$3C,$00,$00                                     ;MOVE.W  #$0000,D2
0003DC22 <AmiBlitz3.ab3@31381>                            Dc.b $36,$3C,$00,$00                                     ;MOVE.W  #$0000,D3
0003DC28 <AmiBlitz3.ab3@31386>                            Dc.b $20,$3C,$00,$00,$00,$04                             ;MOVE.L  #$00000004,D0
0003DC2C <AmiBlitz3.ab3@31391>                            Dc.b $2B,$40,$00,$00                                     ;MOVE.L  D0,$0000(A5)
0003DC2E <AmiBlitz3.ab3@31396>                            Dc.b $C0,$C1                                             ;MULU.W  D1,D0
0003DC32 <AmiBlitz3.ab3@31400>                            Dc.b $2B,$40,$00,$00                                     ;MOVE.L  D0,$0000(A5)
0003DC34 <AmiBlitz3.ab3@31404> movea0:                    Dc.b $24,$52                                             ;MOVEA.L (A2),A2
0003DC36 <AmiBlitz3.ab3@31407> adda0a0:                   Dc.b $D5,$CA                                             ;ADDA.L  A2,A2
0003DC38 <AmiBlitz3.ab3@31408>                            Dc.b $D5,$CA                                             ;ADDA.L  A2,A2
0003DC3C <AmiBlitz3.ab3@31412>                            Dc.b $2C,$78,$00,$04                                     ;MOVEA.L $0004,A6
0003DC40 <AmiBlitz3.ab3@31416> movea5a0:                  Dc.b $24,$6D :                            Dc.b $00,$00   ;MOVEA.L $0000(A5),A2
0003DC44 <AmiBlitz3.ab3@31419> movea0a0:                  Dc.b $24,$6A :                            Dc.b $00,$00   ;MOVEA.L $0000(A2),A2
0003DC46 <AmiBlitz3.ab3@31422> addqa0:                    Dc.b $52,$4A                                             ;ADDQ.W  #1,A2
0003DC4A <AmiBlitz3.ab3@31425> leaa0a0:                   Dc.b $45,$EA :                            Dc.b $00,$00   ;LEA $0000(A2),A2
0003DC4C <AmiBlitz3.ab3@31428> addrega2:                  Dc.b $D4,$C0                                             ;ADDA.W  D0,A2
0003DC55 <AmiBlitz3.ab3@31432>                            Dc.b "ram:test",0
0003DC56 <AmiBlitz3.ab3@31433> Even
0003DC5A <AmiBlitz3.ab3@31437>                            Dc.l  0                          ;was  Ds.w 3 org source
0003DC5C <AmiBlitz3.ab3@31439>                            Dc.w  0
0003DC60 <AmiBlitz3.ab3@31442> _mathffpbase:              Ds.l 1                           ;maths org source
0003DC62 <AmiBlitz3.ab3@31443> regnum:                    Ds.w 1                           ;regat org source       ;register being used!
0003DC64 <AmiBlitz3.ab3@31444> typelen:                   Ds.w 1
0003DC68 <AmiBlitz3.ab3@31445> prevtype:                  Ds.l 1
0003DC6C <AmiBlitz3.ab3@31446> lastsourcepos:             Ds.l 1                           ;prevloc org source
0003DC6E <AmiBlitz3.ab3@31447> lastchar:                  Ds.w 1
0003DC72 <AmiBlitz3.ab3@31448> thistype:                  Ds.l 1
0003DC76 <AmiBlitz3.ab3@31449> errstack:                  Ds.l 1
0003DC7A <AmiBlitz3.ab3@31450> errcont:                   Ds.l 1
0003DC7C <AmiBlitz3.ab3@31451> linemode:                  Ds.w 1                          ;0 if norm, 1 if newtype
0003DC7E <AmiBlitz3.ab3@31452> linesleft:                 Ds.w 1
0003DC82 <AmiBlitz3.ab3@31453> sourceline:                Ds.l 1                          ;thisitem org source
0003DC86 <AmiBlitz3.ab3@31454> varbase:                   Ds.l 1                          ;firstvar org source
0003DC8A <AmiBlitz3.ab3@31455> alllocals:                 Ds.l 1
0003DC8E <AmiBlitz3.ab3@31456> firstlocal:                Ds.l 1
0003DC92 <AmiBlitz3.ab3@31457> firstglob:                 Ds.l 1
0003DC94 <AmiBlitz3.ab3@31458> globalvarpointer:          Ds.w 1                          ;varoff org source
0003DC96 <AmiBlitz3.ab3@31459> locvaroff:                 Ds.w 1
0003DC9A <AmiBlitz3.ab3@31460> firstitem_:                 Ds.l 1
0003DC9C <AmiBlitz3.ab3@31461> numlines_org:              Ds.w 1                          ;numlines org source
0003DC9E <AmiBlitz3.ab3@31462> returncode_org:            Ds.w 1                          ;returncode org source
0003DCA2 <AmiBlitz3.ab3@31463> firstiff:                  Ds.l 1                          ;firstif org source
0003DCA6 <AmiBlitz3.ab3@31464> ptr_seg_ped:               Ds.l 1                          ;segadd org source
0003DEA6 <AmiBlitz3.ab3@31465> str_pedfile:               Ds.b #MAX_STRINGSIZE            ;segname org source
0003DEB6 <AmiBlitz3.ab3@31466> str_mathffpname:           Dc.b "mathffp.library",0 : Even ;mathsname org source
0003E0B6 <AmiBlitz3.ab3@31467> str_libfilename:           Ds.b #MAX_STRINGSIZE
0003E2B6 <AmiBlitz3.ab3@31468> str_path_userlibs:         Ds.b #MAX_STRINGSIZE
0003E4B6 <AmiBlitz3.ab3@31469> str_defaultdbug:           Ds.b #MAX_STRINGSIZE            ;debugname org source
0003E4BA <AmiBlitz3.ab3@31471> ptr_seg_debugger:          Ds.l 1                          ;dseg org source
0003E6BA <AmiBlitz3.ab3@31472> str_blitz3assign:          Ds.b #MAX_STRINGSIZE            ;dpath org source
0003E8BA <AmiBlitz3.ab3@31474> str_path_acidlibs:         Ds.b #MAX_STRINGSIZE            ;acidname org source
0003E8BE <AmiBlitz3.ab3@31475> size_acidlibs:             Ds.l 1                          ;acidlibs org source
0003EABE <AmiBlitz3.ab3@31476> str_path_deflibs:          Ds.b #MAX_STRINGSIZE            ;defname org source
0003EAC2 <AmiBlitz3.ab3@31477> size_deflibs:              Ds.l 1                          ;deflibs org source
0003ECC2 <AmiBlitz3.ab3@31478> str_tempfilename:          Ds.b #MAX_STRINGSIZE
0003EEC2 <AmiBlitz3.ab3@31480> str_temp_debugmodulename:  Ds.b #MAX_STRINGSIZE            ;dname org source
0003EEC6 <AmiBlitz3.ab3@31481> ptr_temp_debugmodule:      Ds.l 1                          ;dname2 org source
0003F0C6 <AmiBlitz3.ab3@31483> str_path_includes:         Ds.b #MAX_STRINGSIZE            ;acidname org source
0003F0CA <AmiBlitz3.ab3@31489>   Dc.b $E3,$10,$00,$01                                     ;icondata  
0003F0CE <AmiBlitz3.ab3@31490>   Dc.b $00,$00,$00,$00
0003F0D2 <AmiBlitz3.ab3@31491>   Dc.b $00,$19,$00,$11
0003F0D6 <AmiBlitz3.ab3@31492>   Dc.b $00,$2E,$00,$18
0003F0DA <AmiBlitz3.ab3@31493>   Dc.b $00,$04,$00,$03
0003F0DE <AmiBlitz3.ab3@31494>   Dc.b $00,$01,$00,$22
0003F0E2 <AmiBlitz3.ab3@31495>   Dc.b $73,$68,$00,$00
0003F0E6 <AmiBlitz3.ab3@31496>   Dc.b $00,$00,$00,$00
0003F0EA <AmiBlitz3.ab3@31497>   Dc.b $00,$00,$00,$00
0003F0EE <AmiBlitz3.ab3@31498>   Dc.b $00,$00,$00,$00
0003F0F2 <AmiBlitz3.ab3@31499>   Dc.b $00,$00,$00,$00
0003F0F6 <AmiBlitz3.ab3@31500>   Dc.b $00,$00,$00,$00
0003F0FA <AmiBlitz3.ab3@31501>   Dc.b $03,$22,$00,$21
0003F0FE <AmiBlitz3.ab3@31502>   Dc.b $3C,$28,$00,$22
0003F102 <AmiBlitz3.ab3@31503>   Dc.b $6E,$C0,$00,$00
0003F106 <AmiBlitz3.ab3@31504>   Dc.b $00,$12,$00,$00
0003F10A <AmiBlitz3.ab3@31505>   Dc.b $00,$0E,$00,$00
0003F10E <AmiBlitz3.ab3@31506>   Dc.b $00,$00,$00,$00
0003F112 <AmiBlitz3.ab3@31507>   Dc.b $00,$00,$00,$00
0003F116 <AmiBlitz3.ab3@31508>   Dc.b $00,$00,$00,$00
0003F11A <AmiBlitz3.ab3@31509>   Dc.b $00,$00,$00,$2E
0003F11E <AmiBlitz3.ab3@31510>   Dc.b $00,$17,$00,$02
0003F122 <AmiBlitz3.ab3@31511>   Dc.b $00,$01,$8E,$80
0003F126 <AmiBlitz3.ab3@31512>   Dc.b $03,$00,$00,$00
0003F12A <AmiBlitz3.ab3@31513>   Dc.b $00,$00,$FF,$FF
0003F12E <AmiBlitz3.ab3@31514>   Dc.b $FF,$FF,$FF,$FC
0003F132 <AmiBlitz3.ab3@31515>   Dc.b $80,$00,$00,$00
0003F136 <AmiBlitz3.ab3@31516>   Dc.b $00,$00,$80,$00
0003F13A <AmiBlitz3.ab3@31517>   Dc.b $00,$3F,$BB,$40
0003F13E <AmiBlitz3.ab3@31518>   Dc.b $80,$1F,$C0,$00
0003F142 <AmiBlitz3.ab3@31519>   Dc.b $00,$00,$80,$3F
0003F146 <AmiBlitz3.ab3@31520>   Dc.b $C0,$0F,$BB,$40
0003F14A <AmiBlitz3.ab3@31521>   Dc.b $80,$1F,$C0,$00
0003F14E <AmiBlitz3.ab3@31522>   Dc.b $00,$00,$8E,$00
0003F152 <AmiBlitz3.ab3@31523>   Dc.b $F8,$00,$00,$00
0003F156 <AmiBlitz3.ab3@31524>   Dc.b $8F,$01,$FF,$00
0003F15A <AmiBlitz3.ab3@31525>   Dc.b $3B,$40,$81,$E3
0003F15E <AmiBlitz3.ab3@31526>   Dc.b $F7,$C0,$00,$00
0003F162 <AmiBlitz3.ab3@31527>   Dc.b $80,$7F,$F8,$70
0003F166 <AmiBlitz3.ab3@31528>   Dc.b $3B,$40,$80,$0F
0003F16A <AmiBlitz3.ab3@31529>   Dc.b $7C,$E0,$00,$00
0003F16E <AmiBlitz3.ab3@31530>   Dc.b $80,$00,$FD,$80
0003F172 <AmiBlitz3.ab3@31531>   Dc.b $00,$00,$80,$01
0003F176 <AmiBlitz3.ab3@31532>   Dc.b $F6,$00,$FB,$40
0003F17A <AmiBlitz3.ab3@31533>   Dc.b $80,$03,$EF,$00
0003F17E <AmiBlitz3.ab3@31534>   Dc.b $00,$00,$80,$07
0003F182 <AmiBlitz3.ab3@31535>   Dc.b $87,$80,$3B,$40
0003F186 <AmiBlitz3.ab3@31536>   Dc.b $80,$0F,$01,$C0
0003F18A <AmiBlitz3.ab3@31537>   Dc.b $00,$00,$80,$03
0003F18E <AmiBlitz3.ab3@31538>   Dc.b $F0,$70,$1D,$40
0003F192 <AmiBlitz3.ab3@31539>   Dc.b $80,$00,$18,$1C
0003F196 <AmiBlitz3.ab3@31540>   Dc.b $00,$00,$80,$00
0003F19A <AmiBlitz3.ab3@31541>   Dc.b $10,$06,$03,$40
0003F19E <AmiBlitz3.ab3@31542>   Dc.b $80,$00,$20,$1F
0003F1A2 <AmiBlitz3.ab3@31543>   Dc.b $00,$00,$80,$00
0003F1A6 <AmiBlitz3.ab3@31544>   Dc.b $00,$00,$01,$40
0003F1AA <AmiBlitz3.ab3@31545>   Dc.b $80,$00,$00,$00
0003F1AE <AmiBlitz3.ab3@31546>   Dc.b $00,$00,$80,$00
0003F1B2 <AmiBlitz3.ab3@31547>   Dc.b $00,$00,$00,$00
0003F1B6 <AmiBlitz3.ab3@31548>   Dc.b $00,$00,$00,$00
0003F1BA <AmiBlitz3.ab3@31549>   Dc.b $00,$00,$00,$00
0003F1BE <AmiBlitz3.ab3@31550>   Dc.b $00,$00,$00,$04
0003F1C2 <AmiBlitz3.ab3@31551>   Dc.b $00,$3F,$FC,$01
0003F1C6 <AmiBlitz3.ab3@31552>   Dc.b $BB,$44,$00,$60
0003F1CA <AmiBlitz3.ab3@31553>   Dc.b $FE,$00,$00,$04
0003F1CE <AmiBlitz3.ab3@31554>   Dc.b $00,$CF,$FF,$01
0003F1D2 <AmiBlitz3.ab3@31555>   Dc.b $BB,$44,$1F,$EF
0003F1D6 <AmiBlitz3.ab3@31556>   Dc.b $FF,$00,$00,$04
0003F1DA <AmiBlitz3.ab3@31557>   Dc.b $33,$FF,$FF,$E0
0003F1DE <AmiBlitz3.ab3@31558>   Dc.b $00,$04,$37,$FE
0003F1E2 <AmiBlitz3.ab3@31559>   Dc.b $7F,$FC,$1B,$44
0003F1E6 <AmiBlitz3.ab3@31560>   Dc.b $0F,$9C,$FF,$FF
0003F1EA <AmiBlitz3.ab3@31561>   Dc.b $00,$04,$03,$E3
0003F1EE <AmiBlitz3.ab3@31562>   Dc.b $FF,$FF,$DB,$44
0003F1F2 <AmiBlitz3.ab3@31563>   Dc.b $00,$7F,$BF,$FF
0003F1F6 <AmiBlitz3.ab3@31564>   Dc.b $80,$04,$00,$0F
0003F1FA <AmiBlitz3.ab3@31565>   Dc.b $3F,$FE,$00,$04
0003F1FE <AmiBlitz3.ab3@31566>   Dc.b $00,$06,$7F,$F8
0003F202 <AmiBlitz3.ab3@31567>   Dc.b $1B,$44,$00,$0C
0003F206 <AmiBlitz3.ab3@31568>   Dc.b $F7,$FC,$00,$04
0003F20A <AmiBlitz3.ab3@31569>   Dc.b $00,$19,$F9,$FE
0003F20E <AmiBlitz3.ab3@31570>   Dc.b $1B,$44,$00,$33
0003F212 <AmiBlitz3.ab3@31571>   Dc.b $FE,$7F,$00,$04
0003F216 <AmiBlitz3.ab3@31572>   Dc.b $00,$0F,$FF,$BF
0003F21A <AmiBlitz3.ab3@31573>   Dc.b $CD,$44,$00,$03
0003F21E <AmiBlitz3.ab3@31574>   Dc.b $EF,$EF,$F0,$04
0003F222 <AmiBlitz3.ab3@31575>   Dc.b $00,$00,$7F,$DF
0003F226 <AmiBlitz3.ab3@31576>   Dc.b $FB,$44,$00,$00
0003F22A <AmiBlitz3.ab3@31577>   Dc.b $FF,$A7,$FC,$04
0003F22E <AmiBlitz3.ab3@31578>   Dc.b $00,$00,$7E,$3F
0003F232 <AmiBlitz3.ab3@31579>   Dc.b $FD,$44,$00,$00
0003F236 <AmiBlitz3.ab3@31580>   Dc.b $00,$00,$00,$04
0003F23A <AmiBlitz3.ab3@31581>   Dc.b $7F,$FF,$FF,$FF
0003F23E <AmiBlitz3.ab3@31582>   Dc.b $FF,$FC,$00,$00
0003F242 <AmiBlitz3.ab3@31583>   Dc.b $00,$01,$00,$00
0003F245 <AmiBlitz3.ab3@31584>   Dc.b $00,$00,$04
0003F24B <AmiBlitz3.ab3@31587> str_infoextention2:  Dc.b ".info",0                           ;infoname org source
0003F2A3 <AmiBlitz3.ab3@31588> errorlimit_text:     Dc.b "There are too much errors, compiling is stop now. Please fix errors first and try again",0
0003F2A4 <AmiBlitz3.ab3@31589> Even
0003F2A8 <AmiBlitz3.ab3@31591> sysdebug:            Dc.l $3F0
0003F2D2 <AmiBlitz3.ab3@31596>  !basic
0003F2E6 <AmiBlitz3.ab3@31597>  If OnePassCompiling = True
0003F304 <AmiBlitz3.ab3@31598>    maxmem.l = (AvailMem_ (#MEMF_PUBLIC) LSR 2)  ; 1/4 of the available free mem
0003F314 <AmiBlitz3.ab3@31599>    objectlength.l = Peek.l(?objlen)
0003F332 <AmiBlitz3.ab3@31600>    If Peek.b(?use_debugger) = 0
0003F358 <AmiBlitz3.ab3@31601>      If (objectlength < 3670056) AND (maxmem > 3670056)
0003F35E <AmiBlitz3.ab3@31602>        MOVE.l #3145727,d2     ; objectbuffersize
0003F364 <AmiBlitz3.ab3@31603>        MOVE.l  #262143,d3     ; libsbuffersize
0003F36A <AmiBlitz3.ab3@31604>        MOVE.l  #131071,d4     ; systembuffersize
0003F370 <AmiBlitz3.ab3@31605>        MOVE.l  #131071,d5     ; databuffersize
0003F376 <AmiBlitz3.ab3@31606>        JSR makeallox  ; added 40 buffer more
0003F3A0 <AmiBlitz3.ab3@31607>        !basic
0003F3A6 <AmiBlitz3.ab3@31608>      Else
0003F3CC <AmiBlitz3.ab3@31609>        If (objectlength < 1572904) AND (maxmem > 1572904)
0003F3EA <AmiBlitz3.ab3@31610>          !asm
0003F3F0 <AmiBlitz3.ab3@31611>          MOVE.l #1310719,d2     ; objectbuffersize
0003F3F6 <AmiBlitz3.ab3@31612>          MOVE.l  #131071,d3     ; libsbuffersize
0003F3FC <AmiBlitz3.ab3@31613>          MOVE.l   #65535,d4     ; systembuffersize
0003F402 <AmiBlitz3.ab3@31614>          MOVE.l   #65535,d5     ; databuffersize
0003F408 <AmiBlitz3.ab3@31615>          JSR makeallox ; added 40 buffer more
0003F432 <AmiBlitz3.ab3@31616>          !basic
0003F438 <AmiBlitz3.ab3@31619>    Else
0003F448 <AmiBlitz3.ab3@31620>      maxmem LSL 1 ; for debug test for 1/2 of the available mem
0003F46E <AmiBlitz3.ab3@31621>      If (objectlength < 12058664) AND (maxmem > 12058664)
0003F474 <AmiBlitz3.ab3@31622>        MOVE.l #5242879,d2     ; objectbuffersize
0003F47A <AmiBlitz3.ab3@31623>        MOVE.l  #262143,d3     ; libsbuffersize
0003F480 <AmiBlitz3.ab3@31624>        MOVE.l #6291455,d4     ; systembuffersize
0003F486 <AmiBlitz3.ab3@31625>        MOVE.l  #262143,d5     ; databuffersize
0003F48C <AmiBlitz3.ab3@31626>        JSR makeallox ; added 40 buffer more
0003F4B6 <AmiBlitz3.ab3@31627>        !basic
0003F4BC <AmiBlitz3.ab3@31628>      Else
0003F4E2 <AmiBlitz3.ab3@31629>        If (objectlength < 6094888) AND (maxmem > 6094888)
0003F500 <AmiBlitz3.ab3@31630>          !asm
0003F506 <AmiBlitz3.ab3@31631>          MOVE.l #2621439,d2     ; objectbuffersize
0003F50C <AmiBlitz3.ab3@31632>          MOVE.l  #262143,d3     ; libsbuffersize
0003F512 <AmiBlitz3.ab3@31633>          MOVE.l #3145727,d4     ; systembuffersize
0003F518 <AmiBlitz3.ab3@31634>          MOVE.l   #65535,d5     ; databuffersize
0003F51E <AmiBlitz3.ab3@31635>          JSR makeallox ; added 40 buffer more
0003F548 <AmiBlitz3.ab3@31636>          !basic
0003F566 <AmiBlitz3.ab3@31641>  !asm
0003F568 <AmiBlitz3.ab3@31642> RTS
0003F56C <AmiBlitz3.ab3@31646> exelock              Ds.l 1
0003F570 <AmiBlitz3.ab3@31650> includesourceline    Dc.l 0
0003F574 <AmiBlitz3.ab3@31651> linenum              Ds.l 1
0003F578 <AmiBlitz3.ab3@31652> globallinecount      Ds.l 1
0003F596 <AmiBlitz3.ab3@31653> myversion            Dc.b "\\__VER_MAJOR.\\__VER_MINOR (\\__DATE_GER__) Build \\__VER_PATCH.\\__VER_BUILD",0 : Even
0003F59A <AmiBlitz3.ab3@31654> calc_option          Dc.l 1
0003F59E <AmiBlitz3.ab3@31655> versioninformation   Dc.l $00
0003F5A2 <AmiBlitz3.ab3@31656> number_of_builds     Dc.l $00
0003F5A4 <AmiBlitz3.ab3@31657> leftsideflagmask     Ds.w 1    ;this contain the flag if pointer (1) or not
0003F5A6 <AmiBlitz3.ab3@31658> rightsideflagmask    Ds.w 1
0003F5A8 <AmiBlitz3.ab3@31660> BSS
0003F5AA <AmiBlitz3.ab3@31661> debugnest            Ds.w 1
0003F5AE <AmiBlitz3.ab3@31662> instringf            Ds.l 1
0003F5B2 <AmiBlitz3.ab3@31663> funcscanon           Ds.l 1
0003F5C6 <AmiBlitz3.ab3@31664> storedebugmode       Ds.b 20
0003F5CA <AmiBlitz3.ab3@31665> firsttimepref        Ds.l 1
0003F5CB <AmiBlitz3.ab3@31666> funcparloop          Ds.b 1                   ; is 1 when function calling parameter are compile
0003F5CC <AmiBlitz3.ab3@31667> blitzparloop         Ds.b 1                   ; is 1 when blitzlib calling parameters are compile
0003F5CE <AmiBlitz3.ab3@31668> nostringopt          Ds.w 1
0003F64E <AmiBlitz3.ab3@31669> path2:               Ds.l 32
0003F652 <AmiBlitz3.ab3@31670> typebase             Dc.l 0
0003F654 <AmiBlitz3.ab3@31671> doublepeek           Dc.w 0
0003F658 <AmiBlitz3.ab3@31672> lastoffset           Dc.l 0
0003F65A <AmiBlitz3.ab3@31673> firsttime            Dc.w 0
0003F65E <AmiBlitz3.ab3@31674> lastdestpointer      Dc.l 0
0003F662 <AmiBlitz3.ab3@31675> prevwritedat         Dc.l 0
0003F666 <AmiBlitz3.ab3@31676> lastsourceline       Dc.l 0
0003F66A <AmiBlitz3.ab3@31677> lastwritedat         Dc.l 0
0003F66C <AmiBlitz3.ab3@31678> makeexec             Dc.w 0
0003F66E <AmiBlitz3.ab3@31679> makeexec_remember    Dc.w 0
0003F672 <AmiBlitz3.ab3@31680> sharebase            Ds.l 1
0003F676 <AmiBlitz3.ab3@31681> tempa7               Ds.l 1
0003F678 <AmiBlitz3.ab3@31682> incnif               Ds.w 1
0003F67C <AmiBlitz3.ab3@31683> tempstore            Ds.l 1
0003F680 <AmiBlitz3.ab3@31684> result               Ds.l 1
0003F682 <AmiBlitz3.ab3@31685> automode             Ds.w 1
0003F684 <AmiBlitz3.ab3@31686> stackcorrect         Ds.w 1
0003F686 <AmiBlitz3.ab3@31687> formode              Ds.w 1
0003F68A <AmiBlitz3.ab3@31688> limitregs            Ds.l 1
0003F68C <AmiBlitz3.ab3@31689> onestep              Ds.w 1
0003F690 <AmiBlitz3.ab3@31690> reqmode              Ds.l 1
0003F730 <AmiBlitz3.ab3@31691> inctab               Ds.l 40
0003F732 <AmiBlitz3.ab3@31692> funcoptimize_deprecated  Ds.w 1 ; deprecated, see comByte_FuncOptimize ; Wanderer
0003F736 <AmiBlitz3.ab3@31693> includeline          Ds.l 1
0003F73A <AmiBlitz3.ab3@31694> morememadd           Ds.l 1
0003F73C <AmiBlitz3.ab3@31695> objectcount          Ds.w 1
0003F740 <AmiBlitz3.ab3@31696> savefuncspace        Ds.l 1
0003F744 <AmiBlitz3.ab3@31697> lasttrap1            Ds.l 1
0003F748 <AmiBlitz3.ab3@31698> currentfunccall      Ds.l 1
0003F749 <AmiBlitz3.ab3@31699> skipfunc             Ds.b 1
0003F74A <AmiBlitz3.ab3@31700> resdisable           Ds.b 1
0003F74B <AmiBlitz3.ab3@31701> skiptoggle           Ds.b 1
0003F74C <AmiBlitz3.ab3@31702> developobject        Ds.b 1
0003F74E <AmiBlitz3.ab3@31703> iniffcommand         Ds.w 1
0003F750 <AmiBlitz3.ab3@31704> startoffsetmore      Ds.w 1
0003F752 <AmiBlitz3.ab3@31705> olddebugmode         Ds.w 1
0003F756 <AmiBlitz3.ab3@31706> fpucodeglobal        Ds.l 1
0003F75A <AmiBlitz3.ab3@31707> fpucodelocal         Ds.l 1
0003F75E <AmiBlitz3.ab3@31708> maxregs              Ds.l 1
0003F762 <AmiBlitz3.ab3@31709> fpucode              Ds.l 1
0003F764 <AmiBlitz3.ab3@31710> firstmline           Ds.w 1
0003F7A4 <AmiBlitz3.ab3@31711> regtable             Ds.l 16
0003F7A6 <AmiBlitz3.ab3@31712> exdebug              Ds.w 1
0003F7A8 <AmiBlitz3.ab3@31713> a2offset2            Ds.w 1
0003F7AC <AmiBlitz3.ab3@31714> parnumtemp           Ds.l 1
0003F7AD <AmiBlitz3.ab3@31715> doimmediate          Ds.b 1
0003F7AE <AmiBlitz3.ab3@31716> notypecheck          Ds.b 1
0003F7B0 <AmiBlitz3.ab3@31717> vartype              Ds.w 1
0003F7B1 <AmiBlitz3.ab3@31718> peekaddrsize         Ds.b 1
0003F7B2 <AmiBlitz3.ab3@31719> declare2             Ds.b 1
0003F7B4 <AmiBlitz3.ab3@31720> parameternum         Ds.w 1
0003F7B8 <AmiBlitz3.ab3@31721> lasttoken            Ds.l 1
0003F7BA <AmiBlitz3.ab3@31722> newvariable          Ds.w 1
0003F7BB <AmiBlitz3.ab3@31723> declare              Ds.b 1
0003F7BC <AmiBlitz3.ab3@31724> typecheck            Ds.b 1
0003F7BD <AmiBlitz3.ab3@31725> nowdeclare           Ds.b 1
0003F7BE <AmiBlitz3.ab3@31726> dimkeep              Ds.b 1
0003F7BF <AmiBlitz3.ab3@31727> a4a5store            Ds.b 1
0003F7C0 <AmiBlitz3.ab3@31728> ___freetouse         Ds.b 1
0003F7C4 <AmiBlitz3.ab3@31729> firstiffstore        Ds.l 1
0003F7C8 <AmiBlitz3.ab3@31730> destpointer2         Ds.l 1
0003F7CC <AmiBlitz3.ab3@31731> stackaddr            Ds.l 1
0003F8D0 <AmiBlitz3.ab3@31732> allowtab             Ds.b 260
0003F9D0 <AmiBlitz3.ab3@31733> templine             Ds.b 256
0003F9D2 <AmiBlitz3.ab3@31734> thenmode             Ds.w 1
0003F9D4 <AmiBlitz3.ab3@31735> temp                 Ds.w 1
0003F9D6 <AmiBlitz3.ab3@31736> tempregnum           Ds.w 1
0003F9DA <AmiBlitz3.ab3@31738> numlines2            Ds.l 1
0003F9DE <AmiBlitz3.ab3@31739> numlines             Ds.l 1
0003F9E0 <AmiBlitz3.ab3@31740> exmac                Ds.w 1
0003F9E2 <AmiBlitz3.ab3@31741> returncode           Ds.w 1
0003F9E6 <AmiBlitz3.ab3@31742> fp0iff               Ds.l 1
0003F9EA <AmiBlitz3.ab3@31743> fp0addr              Ds.l 1
0003F9EC <AmiBlitz3.ab3@31744> fp0mode              Ds.w 1
0003F9EE <AmiBlitz3.ab3@31745> fp0var               Ds.w 1
0003F9F0 <AmiBlitz3.ab3@31746> fastfunc             Ds.w 1
0003F9F2 <AmiBlitz3.ab3@31747> retmode              Ds.w 1
0003F9F4 <AmiBlitz3.ab3@31748> parnum               Ds.w 1
0003F9F6 <AmiBlitz3.ab3@31749> regmask              Ds.w 1
0003F9F8 <AmiBlitz3.ab3@31750> regnumfunc           Ds.w 1
0003F9FA <AmiBlitz3.ab3@31751> libmode              Ds.w 1
0003F9FE <AmiBlitz3.ab3@31752> oldline              Ds.l 1
0003FA02 <AmiBlitz3.ab3@31753> sourceline3          Ds.l 1
0003FACA <AmiBlitz3.ab3@31754> debugstore           Ds.b 200
0003FACE <AmiBlitz3.ab3@31755> deststore            Ds.l 1
0003FAD2 <AmiBlitz3.ab3@31757> loada                Ds.l 1
0003FAD6 <AmiBlitz3.ab3@31759> currtype             Ds.l 1
0003FADA <AmiBlitz3.ab3@31760> arrayoffset          Ds.l 1
0003FADE <AmiBlitz3.ab3@31761> lastlabel            Ds.l 1
0003FAE2 <AmiBlitz3.ab3@31762> curtemplabel         Ds.l 1
0003FAE6 <AmiBlitz3.ab3@31763> sourceline2          Ds.l 1
0003FBE6 <AmiBlitz3.ab3@31764> chartab              Ds.b 256
0003FC5E <AmiBlitz3.ab3@31765> tempspace            Ds.b 120
000BFC6E <AmiBlitz3.ab3@31766> instrtab             Ds.l 65538*2
000C7C6E <AmiBlitz3.ab3@31768> labelhash            Ds.l 8192                             ;-bssstore clear every compile pass
000E7C72 <AmiBlitz3.ab3@31769> replacedat           Ds.w 65538
000EFC72 <AmiBlitz3.ab3@31770> variablehash         Ds.l 8192
000EFC76 <AmiBlitz3.ab3@31771> newinitaddr          Ds.l 1
000EFC7A <AmiBlitz3.ab3@31772> realbssend           Ds.l 1
000EFC7C <AmiBlitz3.ab3@31773> saved0               Ds.w 1
000EFCFC <AmiBlitz3.ab3@31774> lastpath             Ds.b 128
000EFD7C <AmiBlitz3.ab3@31775> lastpath2            Ds.b 128
000EFE44 <AmiBlitz3.ab3@31776> fpustackbase         Ds.w 100
000EFE48 <AmiBlitz3.ab3@31777> 
000EFE4A <AmiBlitz3.ab3@31778> isconstantvalue      Dc.w 0  ; contain a type (1-7) if a constant expression is used as a Parameter or on right side of =
000EFE4E <AmiBlitz3.ab3@31779> lastfunction         Dc.l 0  ; the address of the function in the Parameter or rght side of =
000EFE52 <AmiBlitz3.ab3@31780> leftsidetype         Dc.l 0  ;this contain the address of the type from the left side of the variable assign
000EFE56 <AmiBlitz3.ab3@31781> rightsidetype        Dc.l 0  ; same as above but right side
000EFE5A <AmiBlitz3.ab3@31784> trap15temp           Ds.l 1
000EFE5E <AmiBlitz3.ab3@31785> trap15temp2          Ds.l 1
000EFE62 <AmiBlitz3.ab3@31786> templibend           Ds.l 1
000EFE66 <AmiBlitz3.ab3@31787> tempdata1start       Ds.l 1
000EFE6A <AmiBlitz3.ab3@31788> stacktrack           Ds.l 1
000EFE6E <AmiBlitz3.ab3@31789> pad                  Ds.l 1
000EFF6E <AmiBlitz3.ab3@31790> includetemp          Ds.b 256
000F096E <AmiBlitz3.ab3@31791> includetemp2         Ds.b 256*10
000F0970 <AmiBlitz3.ab3@31792> funccall             Ds.w 1
000F0974 <AmiBlitz3.ab3@31795> ptr_resfile          Ds.l 1
000F0976 <AmiBlitz3.ab3@31796> CalculatorButtonBinFlag:    Ds.w 1
000F0978 <AmiBlitz3.ab3@31797> CalculatorButtonDecFlag:    Ds.w 1
000F097C <AmiBlitz3.ab3@31798> ped_startup_addr:    Ds.l 1
000F097D <AmiBlitz3.ab3@31799> start_without_libs:  Ds.b 1
000F097E <AmiBlitz3.ab3@31800> skip_bytes:          Ds.b 1
000F0982 <AmiBlitz3.ab3@31801> functionreturntype   Ds.l 1  ; a temp store of it.do not read this value
000F0986 <AmiBlitz3.ab3@31802> beforeparameterfetch Ds.l 1
000F098A <AmiBlitz3.ab3@31803> typetocast           Ds.l 1
000F098E <AmiBlitz3.ab3@31804> errorcounter         Ds.l 1
000F098F <AmiBlitz3.ab3@31805> iserror              Ds.b 1
000F0990 <AmiBlitz3.ab3@31806> MorphOS:             Ds.b 1 ; added to be able to select the cacheclear function 0=AOS, 1=MorphOS  tomsmart1
000F0994 <AmiBlitz3.ab3@31809> CLIMode:             Dc.l 0
000F0998 <AmiBlitz3.ab3@31810> XTRAEndPadBytes:     Dc.l 0                             ; 4 fill/pad/termination bytes for the xtra write function  tomsmart1
000F099C <AmiBlitz3.ab3@31811> maxerrorcount:       Ds.l 1                             ; added to make it changeable in CLI Mode tomsmart1
