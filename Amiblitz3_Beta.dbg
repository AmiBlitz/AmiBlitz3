00000008 <AmiBlitz3.ab2@0> 
00000014 <AmiBlitz3.ab2@43> optimize 5                               ; don't use FPU (opt. 4)
00000076 <AmiBlitz3.ab2@64> !initasm                                 ; some initial mumbo jumbo
000000A0 <AmiBlitz3.ab2@65> !basic
000000AC <AmiBlitz3.ab2@70> cli_verbose = -1
000000B2 <AmiBlitz3.ab2@71> CLIMode     = False
000000C8 <AmiBlitz3.ab2@72> MaxLen cli_tempstr.s = 1024
000000E4 <AmiBlitz3.ab2@73> GetCurrentDirName_ &cli_tempstr,1024  ; get the current dir to restore it on exit
0000010E <AmiBlitz3.ab2@74> cli_path.s = Peek.s(&cli_tempstr)
0000010E <library_offsets.ab3@1> XINCLUDE "/Shared/library_offsets.ab3"   ; needed includes
0000010E <AmiBlitz3.ab2@78> XINCLUDE "/Shared/library_offsets.ab3"   ; needed includes
0000010E <dos.include.bb2@1> XINCLUDE "dos.include.bb2"
0000010E <error.include.bb2@1> XINCLUDE "dos.include.bb2"
00000146 <error.include.bb2@62> XINCLUDE "dos.include.bb2"
0000016E <error.include.bb2@63> XINCLUDE "dos.include.bb2"
00000196 <error.include.bb2@64> XINCLUDE "dos.include.bb2"
000001BE <error.include.bb2@65> XINCLUDE "dos.include.bb2"
000001C4 <error.include.bb2@66> XINCLUDE "dos.include.bb2"
000001F8 <error.include.bb2@67> XINCLUDE "dos.include.bb2"
0000022C <error.include.bb2@68> XINCLUDE "dos.include.bb2"
00000260 <error.include.bb2@69> XINCLUDE "dos.include.bb2"
0000027C <error.include.bb2@73> XINCLUDE "dos.include.bb2"
00000296 <error.include.bb2@99> XINCLUDE "dos.include.bb2"
000002A2 <error.include.bb2@101> XINCLUDE "dos.include.bb2"
000002A6 <error.include.bb2@102> XINCLUDE "dos.include.bb2"
000002B4 <error.include.bb2@104> XINCLUDE "dos.include.bb2"
000002E6 <error.include.bb2@124> XINCLUDE "dos.include.bb2"
0000036A <error.include.bb2@126> XINCLUDE "dos.include.bb2"
00000384 <error.include.bb2@128> XINCLUDE "dos.include.bb2"
000003BC <error.include.bb2@129> XINCLUDE "dos.include.bb2"
0000041C <error.include.bb2@130> XINCLUDE "dos.include.bb2"
0000042A <error.include.bb2@132> XINCLUDE "dos.include.bb2"
00000438 <error.include.bb2@133> XINCLUDE "dos.include.bb2"
00000446 <error.include.bb2@134> XINCLUDE "dos.include.bb2"
00000454 <error.include.bb2@135> XINCLUDE "dos.include.bb2"
0000047C <error.include.bb2@136> XINCLUDE "dos.include.bb2"
0000048A <error.include.bb2@137> XINCLUDE "dos.include.bb2"
00000492 <error.include.bb2@138> XINCLUDE "dos.include.bb2"
000004C4 <error.include.bb2@140> XINCLUDE "dos.include.bb2"
000004DE <error.include.bb2@145> XINCLUDE "dos.include.bb2"
00000516 <error.include.bb2@146> XINCLUDE "dos.include.bb2"
0000051C <error.include.bb2@147> XINCLUDE "dos.include.bb2"
00000560 <error.include.bb2@148> XINCLUDE "dos.include.bb2"
000005A8 <error.include.bb2@149> XINCLUDE "dos.include.bb2"
000005B2 <error.include.bb2@153> XINCLUDE "dos.include.bb2"
000005CA <error.include.bb2@155> XINCLUDE "dos.include.bb2"
00000604 <error.include.bb2@194> XINCLUDE "dos.include.bb2"
0000060C <error.include.bb2@196> XINCLUDE "dos.include.bb2"
0000062E <error.include.bb2@198> XINCLUDE "dos.include.bb2"
0000068E <error.include.bb2@199> XINCLUDE "dos.include.bb2"
0000069C <error.include.bb2@201> XINCLUDE "dos.include.bb2"
000006AA <error.include.bb2@202> XINCLUDE "dos.include.bb2"
000006B8 <error.include.bb2@203> XINCLUDE "dos.include.bb2"
000006C6 <error.include.bb2@204> XINCLUDE "dos.include.bb2"
00000726 <error.include.bb2@205> XINCLUDE "dos.include.bb2"
00000734 <error.include.bb2@206> XINCLUDE "dos.include.bb2"
0000076A <error.include.bb2@209> XINCLUDE "dos.include.bb2"
00000774 <error.include.bb2@213> XINCLUDE "dos.include.bb2"
00000790 <error.include.bb2@214> XINCLUDE "dos.include.bb2"
00000790 <multilist.include.bb2@1> XINCLUDE "dos.include.bb2"
00000790 <strptr.include.bb2@1> XINCLUDE "dos.include.bb2"
00000790 <useful.include.bb2@1> XINCLUDE "dos.include.bb2"
000007BE <useful.include.bb2@220> XINCLUDE "dos.include.bb2"
000007C8 <useful.include.bb2@221> XINCLUDE "dos.include.bb2"
000007DC <useful.include.bb2@222> XINCLUDE "dos.include.bb2"
000007E4 <useful.include.bb2@223> XINCLUDE "dos.include.bb2"
0000080C <useful.include.bb2@224> XINCLUDE "dos.include.bb2"
00000832 <useful.include.bb2@225> XINCLUDE "dos.include.bb2"
00000852 <useful.include.bb2@228> XINCLUDE "dos.include.bb2"
00000860 <useful.include.bb2@229> XINCLUDE "dos.include.bb2"
00000886 <useful.include.bb2@230> XINCLUDE "dos.include.bb2"
0000088E <useful.include.bb2@233> XINCLUDE "dos.include.bb2"
00000896 <useful.include.bb2@234> XINCLUDE "dos.include.bb2"
0000089C <useful.include.bb2@235> XINCLUDE "dos.include.bb2"
000008B8 <useful.include.bb2@236> XINCLUDE "dos.include.bb2"
000008DC <useful.include.bb2@237> XINCLUDE "dos.include.bb2"
000008F0 <useful.include.bb2@238> XINCLUDE "dos.include.bb2"
000008F6 <useful.include.bb2@239> XINCLUDE "dos.include.bb2"
00000940 <useful.include.bb2@240> XINCLUDE "dos.include.bb2"
00000942 <useful.include.bb2@241> XINCLUDE "dos.include.bb2"
00000950 <useful.include.bb2@243> XINCLUDE "dos.include.bb2"
00000970 <useful.include.bb2@245> XINCLUDE "dos.include.bb2"
000009CE <useful.include.bb2@246> XINCLUDE "dos.include.bb2"
000009D4 <useful.include.bb2@247> XINCLUDE "dos.include.bb2"
000009E2 <useful.include.bb2@248> XINCLUDE "dos.include.bb2"
000009F6 <useful.include.bb2@249> XINCLUDE "dos.include.bb2"
00000A08 <useful.include.bb2@250> XINCLUDE "dos.include.bb2"
00000A16 <useful.include.bb2@251> XINCLUDE "dos.include.bb2"
00000A1C <useful.include.bb2@252> XINCLUDE "dos.include.bb2"
00000A28 <useful.include.bb2@253> XINCLUDE "dos.include.bb2"
00000A3C <useful.include.bb2@256> XINCLUDE "dos.include.bb2"
00000A50 <useful.include.bb2@257> XINCLUDE "dos.include.bb2"
00000A62 <useful.include.bb2@258> XINCLUDE "dos.include.bb2"
00000A70 <useful.include.bb2@259> XINCLUDE "dos.include.bb2"
00000A8E <useful.include.bb2@260> XINCLUDE "dos.include.bb2"
00000A94 <useful.include.bb2@261> XINCLUDE "dos.include.bb2"
00000AA8 <useful.include.bb2@265> XINCLUDE "dos.include.bb2"
00000AB2 <useful.include.bb2@266> XINCLUDE "dos.include.bb2"
00000ABA <useful.include.bb2@267> XINCLUDE "dos.include.bb2"
00000AD8 <useful.include.bb2@268> XINCLUDE "dos.include.bb2"
00000ADE <useful.include.bb2@269> XINCLUDE "dos.include.bb2"
00000B0A <useful.include.bb2@270> XINCLUDE "dos.include.bb2"
00000B10 <useful.include.bb2@272> XINCLUDE "dos.include.bb2"
00000B22 <useful.include.bb2@273> XINCLUDE "dos.include.bb2"
00000B3A <useful.include.bb2@274> XINCLUDE "dos.include.bb2"
00000B52 <useful.include.bb2@275> XINCLUDE "dos.include.bb2"
00000B70 <useful.include.bb2@276> XINCLUDE "dos.include.bb2"
00000B72 <useful.include.bb2@278> XINCLUDE "dos.include.bb2"
00000B80 <useful.include.bb2@279> XINCLUDE "dos.include.bb2"
00000BA6 <useful.include.bb2@280> XINCLUDE "dos.include.bb2"
00000C3A <useful.include.bb2@281> XINCLUDE "dos.include.bb2"
00000C48 <useful.include.bb2@283> XINCLUDE "dos.include.bb2"
00000C4E <useful.include.bb2@284> XINCLUDE "dos.include.bb2"
00000C78 <useful.include.bb2@285> XINCLUDE "dos.include.bb2"
00000C96 <useful.include.bb2@286> XINCLUDE "dos.include.bb2"
00000C96 <strptr.include.bb2@31> XINCLUDE "dos.include.bb2"
00000CC0 <strptr.include.bb2@33> XINCLUDE "dos.include.bb2"
00000CDA <strptr.include.bb2@84> XINCLUDE "dos.include.bb2"
00000CE4 <strptr.include.bb2@85> XINCLUDE "dos.include.bb2"
00000D34 <strptr.include.bb2@86> XINCLUDE "dos.include.bb2"
00000D38 <strptr.include.bb2@88> XINCLUDE "dos.include.bb2"
00000D66 <strptr.include.bb2@137> XINCLUDE "dos.include.bb2"
00000D70 <strptr.include.bb2@138> XINCLUDE "dos.include.bb2"
00000DC0 <strptr.include.bb2@139> XINCLUDE "dos.include.bb2"
00000DD4 <strptr.include.bb2@140> XINCLUDE "dos.include.bb2"
00000DE6 <strptr.include.bb2@141> XINCLUDE "dos.include.bb2"
00000E0E <strptr.include.bb2@142> XINCLUDE "dos.include.bb2"
00000E18 <strptr.include.bb2@143> XINCLUDE "dos.include.bb2"
00000E26 <strptr.include.bb2@144> XINCLUDE "dos.include.bb2"
00000E30 <strptr.include.bb2@145> XINCLUDE "dos.include.bb2"
00000E58 <strptr.include.bb2@146> XINCLUDE "dos.include.bb2"
00000E72 <strptr.include.bb2@147> XINCLUDE "dos.include.bb2"
00000E8A <strptr.include.bb2@151> XINCLUDE "dos.include.bb2"
00000EA4 <strptr.include.bb2@213> XINCLUDE "dos.include.bb2"
00000EAE <strptr.include.bb2@214> XINCLUDE "dos.include.bb2"
00000EBC <strptr.include.bb2@215> XINCLUDE "dos.include.bb2"
00000EEE <strptr.include.bb2@216> XINCLUDE "dos.include.bb2"
00000F0C <strptr.include.bb2@218> XINCLUDE "dos.include.bb2"
00000F16 <strptr.include.bb2@219> XINCLUDE "dos.include.bb2"
00000F2C <strptr.include.bb2@221> XINCLUDE "dos.include.bb2"
00000F36 <strptr.include.bb2@222> XINCLUDE "dos.include.bb2"
00000F46 <strptr.include.bb2@223> XINCLUDE "dos.include.bb2"
00000F4E <strptr.include.bb2@224> XINCLUDE "dos.include.bb2"
00000F50 <strptr.include.bb2@226> XINCLUDE "dos.include.bb2"
00000F7E <strptr.include.bb2@227> XINCLUDE "dos.include.bb2"
00000F7E <multilist.include.bb2@44> XINCLUDE "dos.include.bb2"
00000F94 <multilist.include.bb2@61> XINCLUDE "dos.include.bb2"
00000FAE <multilist.include.bb2@406> XINCLUDE "dos.include.bb2"
00000FB8 <multilist.include.bb2@407> XINCLUDE "dos.include.bb2"
00000FDA <multilist.include.bb2@408> XINCLUDE "dos.include.bb2"
00000FFE <multilist.include.bb2@409> XINCLUDE "dos.include.bb2"
00001010 <multilist.include.bb2@410> XINCLUDE "dos.include.bb2"
00001028 <multilist.include.bb2@411> XINCLUDE "dos.include.bb2"
0000103C <multilist.include.bb2@412> XINCLUDE "dos.include.bb2"
0000104E <multilist.include.bb2@415> XINCLUDE "dos.include.bb2"
0000105E <multilist.include.bb2@416> XINCLUDE "dos.include.bb2"
00001064 <multilist.include.bb2@417> XINCLUDE "dos.include.bb2"
00001074 <multilist.include.bb2@418> XINCLUDE "dos.include.bb2"
00001084 <multilist.include.bb2@419> XINCLUDE "dos.include.bb2"
0000109E <multilist.include.bb2@420> XINCLUDE "dos.include.bb2"
000010A2 <multilist.include.bb2@422> XINCLUDE "dos.include.bb2"
000010BC <multilist.include.bb2@585> XINCLUDE "dos.include.bb2"
000010EC <multilist.include.bb2@586> XINCLUDE "dos.include.bb2"
000010F6 <multilist.include.bb2@588> XINCLUDE "dos.include.bb2"
00001100 <multilist.include.bb2@589> XINCLUDE "dos.include.bb2"
00001122 <multilist.include.bb2@590> XINCLUDE "dos.include.bb2"
00001146 <multilist.include.bb2@591> XINCLUDE "dos.include.bb2"
00001158 <multilist.include.bb2@592> XINCLUDE "dos.include.bb2"
00001170 <multilist.include.bb2@593> XINCLUDE "dos.include.bb2"
00001184 <multilist.include.bb2@594> XINCLUDE "dos.include.bb2"
00001196 <multilist.include.bb2@597> XINCLUDE "dos.include.bb2"
000011A6 <multilist.include.bb2@598> XINCLUDE "dos.include.bb2"
000011AC <multilist.include.bb2@599> XINCLUDE "dos.include.bb2"
000011BC <multilist.include.bb2@600> XINCLUDE "dos.include.bb2"
000011CC <multilist.include.bb2@601> XINCLUDE "dos.include.bb2"
000011E6 <multilist.include.bb2@602> XINCLUDE "dos.include.bb2"
000011EC <multilist.include.bb2@603> XINCLUDE "dos.include.bb2"
000011F2 <multilist.include.bb2@604> XINCLUDE "dos.include.bb2"
000011F6 <multilist.include.bb2@605> XINCLUDE "dos.include.bb2"
00001210 <multilist.include.bb2@713> XINCLUDE "dos.include.bb2"
00001218 <multilist.include.bb2@714> XINCLUDE "dos.include.bb2"
00001222 <multilist.include.bb2@715> XINCLUDE "dos.include.bb2"
00001238 <multilist.include.bb2@716> XINCLUDE "dos.include.bb2"
0000124C <multilist.include.bb2@717> XINCLUDE "dos.include.bb2"
00001270 <multilist.include.bb2@718> XINCLUDE "dos.include.bb2"
0000127E <multilist.include.bb2@721> XINCLUDE "dos.include.bb2"
00001288 <multilist.include.bb2@722> XINCLUDE "dos.include.bb2"
0000128E <multilist.include.bb2@723> XINCLUDE "dos.include.bb2"
00001298 <multilist.include.bb2@724> XINCLUDE "dos.include.bb2"
0000129E <multilist.include.bb2@725> XINCLUDE "dos.include.bb2"
000012BC <multilist.include.bb2@742> XINCLUDE "dos.include.bb2"
000012C4 <multilist.include.bb2@743> XINCLUDE "dos.include.bb2"
000012CE <multilist.include.bb2@744> XINCLUDE "dos.include.bb2"
000012EC <multilist.include.bb2@745> XINCLUDE "dos.include.bb2"
00001302 <multilist.include.bb2@746> XINCLUDE "dos.include.bb2"
00001316 <multilist.include.bb2@747> XINCLUDE "dos.include.bb2"
0000134A <multilist.include.bb2@748> XINCLUDE "dos.include.bb2"
00001358 <multilist.include.bb2@751> XINCLUDE "dos.include.bb2"
00001362 <multilist.include.bb2@752> XINCLUDE "dos.include.bb2"
00001368 <multilist.include.bb2@753> XINCLUDE "dos.include.bb2"
00001372 <multilist.include.bb2@754> XINCLUDE "dos.include.bb2"
00001376 <multilist.include.bb2@756> XINCLUDE "dos.include.bb2"
0000137C <multilist.include.bb2@757> XINCLUDE "dos.include.bb2"
00001396 <multilist.include.bb2@795> XINCLUDE "dos.include.bb2"
000013A0 <multilist.include.bb2@796> XINCLUDE "dos.include.bb2"
000013AA <multilist.include.bb2@797> XINCLUDE "dos.include.bb2"
000013C0 <multilist.include.bb2@798> XINCLUDE "dos.include.bb2"
000013D0 <multilist.include.bb2@799> XINCLUDE "dos.include.bb2"
000013DA <multilist.include.bb2@801> XINCLUDE "dos.include.bb2"
000013E0 <multilist.include.bb2@802> XINCLUDE "dos.include.bb2"
000013E4 <multilist.include.bb2@803> XINCLUDE "dos.include.bb2"
00001406 <multilist.include.bb2@821> XINCLUDE "dos.include.bb2"
0000140E <multilist.include.bb2@822> XINCLUDE "dos.include.bb2"
00001428 <multilist.include.bb2@823> XINCLUDE "dos.include.bb2"
00001432 <multilist.include.bb2@824> XINCLUDE "dos.include.bb2"
00001448 <multilist.include.bb2@825> XINCLUDE "dos.include.bb2"
0000145C <multilist.include.bb2@826> XINCLUDE "dos.include.bb2"
000014B2 <multilist.include.bb2@827> XINCLUDE "dos.include.bb2"
000014EC <multilist.include.bb2@828> XINCLUDE "dos.include.bb2"
000014FE <multilist.include.bb2@829> XINCLUDE "dos.include.bb2"
00001520 <multilist.include.bb2@830> XINCLUDE "dos.include.bb2"
00001526 <multilist.include.bb2@831> XINCLUDE "dos.include.bb2"
0000157C <multilist.include.bb2@832> XINCLUDE "dos.include.bb2"
000015B6 <multilist.include.bb2@833> XINCLUDE "dos.include.bb2"
000015BC <multilist.include.bb2@835> XINCLUDE "dos.include.bb2"
000015F6 <multilist.include.bb2@836> XINCLUDE "dos.include.bb2"
00001630 <multilist.include.bb2@837> XINCLUDE "dos.include.bb2"
00001642 <multilist.include.bb2@839> XINCLUDE "dos.include.bb2"
0000164C <multilist.include.bb2@840> XINCLUDE "dos.include.bb2"
00001652 <multilist.include.bb2@841> XINCLUDE "dos.include.bb2"
0000165C <multilist.include.bb2@842> XINCLUDE "dos.include.bb2"
00001670 <multilist.include.bb2@843> XINCLUDE "dos.include.bb2"
000016B6 <multilist.include.bb2@870> XINCLUDE "dos.include.bb2"
000016BE <multilist.include.bb2@871> XINCLUDE "dos.include.bb2"
000016DC <multilist.include.bb2@872> XINCLUDE "dos.include.bb2"
00001708 <multilist.include.bb2@873> XINCLUDE "dos.include.bb2"
00001726 <multilist.include.bb2@874> XINCLUDE "dos.include.bb2"
00001740 <multilist.include.bb2@875> XINCLUDE "dos.include.bb2"
0000175A <multilist.include.bb2@876> XINCLUDE "dos.include.bb2"
000017DC <multilist.include.bb2@877> XINCLUDE "dos.include.bb2"
000017F0 <multilist.include.bb2@879> XINCLUDE "dos.include.bb2"
00001808 <multilist.include.bb2@880> XINCLUDE "dos.include.bb2"
0000180E <multilist.include.bb2@881> XINCLUDE "dos.include.bb2"
00001826 <multilist.include.bb2@882> XINCLUDE "dos.include.bb2"
0000183C <multilist.include.bb2@884> XINCLUDE "dos.include.bb2"
00001856 <multilist.include.bb2@886> XINCLUDE "dos.include.bb2"
0000186A <multilist.include.bb2@887> XINCLUDE "dos.include.bb2"
00001878 <multilist.include.bb2@888> XINCLUDE "dos.include.bb2"
000018CE <multilist.include.bb2@889> XINCLUDE "dos.include.bb2"
00001904 <multilist.include.bb2@890> XINCLUDE "dos.include.bb2"
00001934 <multilist.include.bb2@891> XINCLUDE "dos.include.bb2"
000019BC <multilist.include.bb2@893> XINCLUDE "dos.include.bb2"
000019C2 <multilist.include.bb2@894> XINCLUDE "dos.include.bb2"
000019D0 <multilist.include.bb2@895> XINCLUDE "dos.include.bb2"
00001A26 <multilist.include.bb2@896> XINCLUDE "dos.include.bb2"
00001A5C <multilist.include.bb2@897> XINCLUDE "dos.include.bb2"
00001A8C <multilist.include.bb2@898> XINCLUDE "dos.include.bb2"
00001A92 <multilist.include.bb2@901> XINCLUDE "dos.include.bb2"
00001AAC <multilist.include.bb2@902> XINCLUDE "dos.include.bb2"
00001ABA <multilist.include.bb2@903> XINCLUDE "dos.include.bb2"
00001AF4 <multilist.include.bb2@904> XINCLUDE "dos.include.bb2"
00001B2A <multilist.include.bb2@905> XINCLUDE "dos.include.bb2"
00001B5A <multilist.include.bb2@906> XINCLUDE "dos.include.bb2"
00001B68 <multilist.include.bb2@909> XINCLUDE "dos.include.bb2"
00001B72 <multilist.include.bb2@910> XINCLUDE "dos.include.bb2"
00001B78 <multilist.include.bb2@911> XINCLUDE "dos.include.bb2"
00001B82 <multilist.include.bb2@912> XINCLUDE "dos.include.bb2"
00001B96 <multilist.include.bb2@913> XINCLUDE "dos.include.bb2"
00001B96 <dos.include.bb2@57> XINCLUDE "dos.include.bb2"
00001BAC <dos.include.bb2@60> XINCLUDE "dos.include.bb2"
00001BB4 <dos.include.bb2@78> XINCLUDE "dos.include.bb2"
00001BBC <dos.include.bb2@79> XINCLUDE "dos.include.bb2"
00001BE4 <dos.include.bb2@80> XINCLUDE "dos.include.bb2"
00001BEC <dos.include.bb2@81> XINCLUDE "dos.include.bb2"
00001C14 <dos.include.bb2@82> XINCLUDE "dos.include.bb2"
00001C3C <dos.include.bb2@83> XINCLUDE "dos.include.bb2"
00001C64 <dos.include.bb2@84> XINCLUDE "dos.include.bb2"
00001C6C <dos.include.bb2@85> XINCLUDE "dos.include.bb2"
00001C74 <dos.include.bb2@86> XINCLUDE "dos.include.bb2"
00001C7C <dos.include.bb2@87> XINCLUDE "dos.include.bb2"
00001C84 <dos.include.bb2@88> XINCLUDE "dos.include.bb2"
00001C8C <dos.include.bb2@89> XINCLUDE "dos.include.bb2"
00001C94 <dos.include.bb2@90> XINCLUDE "dos.include.bb2"
00001C9C <dos.include.bb2@91> XINCLUDE "dos.include.bb2"
00001CA4 <dos.include.bb2@92> XINCLUDE "dos.include.bb2"
00001CAC <dos.include.bb2@93> XINCLUDE "dos.include.bb2"
00001CCC <dos.include.bb2@94> XINCLUDE "dos.include.bb2"
00001CD4 <dos.include.bb2@95> XINCLUDE "dos.include.bb2"
00001CDC <dos.include.bb2@96> XINCLUDE "dos.include.bb2"
00001D04 <dos.include.bb2@98> XINCLUDE "dos.include.bb2"
00001D1A <dos.include.bb2@129> XINCLUDE "dos.include.bb2"
00001D26 <dos.include.bb2@130> XINCLUDE "dos.include.bb2"
00001D2A <dos.include.bb2@131> XINCLUDE "dos.include.bb2"
00001D40 <dos.include.bb2@144> XINCLUDE "dos.include.bb2"
00001D5A <dos.include.bb2@145> XINCLUDE "dos.include.bb2"
00001D70 <dos.include.bb2@146> XINCLUDE "dos.include.bb2"
00001D9A <dos.include.bb2@147> XINCLUDE "dos.include.bb2"
00001DA4 <dos.include.bb2@148> XINCLUDE "dos.include.bb2"
00001DAA <dos.include.bb2@149> XINCLUDE "dos.include.bb2"
00001DC0 <dos.include.bb2@162> XINCLUDE "dos.include.bb2"
00001DDA <dos.include.bb2@163> XINCLUDE "dos.include.bb2"
00001DF0 <dos.include.bb2@164> XINCLUDE "dos.include.bb2"
00001E1A <dos.include.bb2@165> XINCLUDE "dos.include.bb2"
00001E24 <dos.include.bb2@166> XINCLUDE "dos.include.bb2"
00001E2A <dos.include.bb2@167> XINCLUDE "dos.include.bb2"
00001E54 <dos.include.bb2@183> XINCLUDE "dos.include.bb2"
00001E60 <dos.include.bb2@184> XINCLUDE "dos.include.bb2"
00001E80 <dos.include.bb2@185> XINCLUDE "dos.include.bb2"
00001E8A <dos.include.bb2@186> XINCLUDE "dos.include.bb2"
00001E9A <dos.include.bb2@187> XINCLUDE "dos.include.bb2"
00001EAA <dos.include.bb2@188> XINCLUDE "dos.include.bb2"
00001EB4 <dos.include.bb2@190> XINCLUDE "dos.include.bb2"
00001ECE <dos.include.bb2@191> XINCLUDE "dos.include.bb2"
00001EE4 <dos.include.bb2@429> XINCLUDE "dos.include.bb2"
00001EF6 <dos.include.bb2@431> XINCLUDE "dos.include.bb2"
00001F70 <dos.include.bb2@432> XINCLUDE "dos.include.bb2"
00001F9A <dos.include.bb2@433> XINCLUDE "dos.include.bb2"
00001FB2 <dos.include.bb2@434> XINCLUDE "dos.include.bb2"
00001FC8 <dos.include.bb2@460> XINCLUDE "dos.include.bb2"
00001FDA <dos.include.bb2@461> XINCLUDE "dos.include.bb2"
00001FDE <dos.include.bb2@462> XINCLUDE "dos.include.bb2"
00001FF4 <dos.include.bb2@478> XINCLUDE "dos.include.bb2"
00001FF6 <dos.include.bb2@479> XINCLUDE "dos.include.bb2"
00002030 <dos.include.bb2@540> XINCLUDE "dos.include.bb2"
00002064 <dos.include.bb2@542> XINCLUDE "dos.include.bb2"
0000208A <dos.include.bb2@543> XINCLUDE "dos.include.bb2"
000020AA <dos.include.bb2@544> XINCLUDE "dos.include.bb2"
000020CA <dos.include.bb2@545> XINCLUDE "dos.include.bb2"
000020F4 <dos.include.bb2@660> XINCLUDE "dos.include.bb2"
0000210A <dos.include.bb2@661> XINCLUDE "dos.include.bb2"
00002114 <dos.include.bb2@662> XINCLUDE "dos.include.bb2"
0000213C <dos.include.bb2@663> XINCLUDE "dos.include.bb2"
00002142 <dos.include.bb2@664> XINCLUDE "dos.include.bb2"
0000216A <dos.include.bb2@665> XINCLUDE "dos.include.bb2"
00002194 <dos.include.bb2@667> XINCLUDE "dos.include.bb2"
000021B2 <dos.include.bb2@668> XINCLUDE "dos.include.bb2"
000021DC <dos.include.bb2@691> XINCLUDE "dos.include.bb2"
0000224C <dos.include.bb2@692> XINCLUDE "dos.include.bb2"
00002276 <dos.include.bb2@693> XINCLUDE "dos.include.bb2"
00002294 <dos.include.bb2@694> XINCLUDE "dos.include.bb2"
000022BE <dos.include.bb2@729> XINCLUDE "dos.include.bb2"
000022DE <dos.include.bb2@730> XINCLUDE "dos.include.bb2"
0000230A <dos.include.bb2@731> XINCLUDE "dos.include.bb2"
00002314 <dos.include.bb2@732> XINCLUDE "dos.include.bb2"
0000232E <dos.include.bb2@733> XINCLUDE "dos.include.bb2"
00002358 <dos.include.bb2@880> XINCLUDE "dos.include.bb2"
00002406 <dos.include.bb2@881> XINCLUDE "dos.include.bb2"
0000241C <dos.include.bb2@882> XINCLUDE "dos.include.bb2"
00002426 <dos.include.bb2@883> XINCLUDE "dos.include.bb2"
0000244E <dos.include.bb2@884> XINCLUDE "dos.include.bb2"
00002458 <dos.include.bb2@885> XINCLUDE "dos.include.bb2"
0000245E <dos.include.bb2@886> XINCLUDE "dos.include.bb2"
00002464 <dos.include.bb2@887> XINCLUDE "dos.include.bb2"
0000246A <dos.include.bb2@888> XINCLUDE "dos.include.bb2"
0000247C <dos.include.bb2@890> XINCLUDE "dos.include.bb2"
00002486 <dos.include.bb2@892> XINCLUDE "dos.include.bb2"
000024A0 <dos.include.bb2@893> XINCLUDE "dos.include.bb2"
000024DE <dos.include.bb2@914> XINCLUDE "dos.include.bb2"
000024E6 <dos.include.bb2@915> XINCLUDE "dos.include.bb2"
00002594 <dos.include.bb2@916> XINCLUDE "dos.include.bb2"
000025A8 <dos.include.bb2@917> XINCLUDE "dos.include.bb2"
000025EA <dos.include.bb2@918> XINCLUDE "dos.include.bb2"
0000260A <dos.include.bb2@920> XINCLUDE "dos.include.bb2"
00002614 <dos.include.bb2@921> XINCLUDE "dos.include.bb2"
00002630 <dos.include.bb2@922> XINCLUDE "dos.include.bb2"
0000266A <dos.include.bb2@974> XINCLUDE "dos.include.bb2"
00002672 <dos.include.bb2@975> XINCLUDE "dos.include.bb2"
00002720 <dos.include.bb2@976> XINCLUDE "dos.include.bb2"
00002756 <dos.include.bb2@977> XINCLUDE "dos.include.bb2"
00002776 <dos.include.bb2@978> XINCLUDE "dos.include.bb2"
00002794 <dos.include.bb2@979> XINCLUDE "dos.include.bb2"
000027B8 <dos.include.bb2@980> XINCLUDE "dos.include.bb2"
000027C2 <dos.include.bb2@982> XINCLUDE "dos.include.bb2"
000027DE <dos.include.bb2@983> XINCLUDE "dos.include.bb2"
00002818 <dos.include.bb2@1000> XINCLUDE "dos.include.bb2"
000028C6 <dos.include.bb2@1001> XINCLUDE "dos.include.bb2"
000028FE <dos.include.bb2@1002> XINCLUDE "dos.include.bb2"
0000291E <dos.include.bb2@1003> XINCLUDE "dos.include.bb2"
00002924 <dos.include.bb2@1004> XINCLUDE "dos.include.bb2"
00002944 <dos.include.bb2@1005> XINCLUDE "dos.include.bb2"
0000294E <dos.include.bb2@1006> XINCLUDE "dos.include.bb2"
00002968 <dos.include.bb2@1007> XINCLUDE "dos.include.bb2"
00002980 <dos.include.bb2@1008> XINCLUDE "dos.include.bb2"
0000298A <dos.include.bb2@1011> XINCLUDE "dos.include.bb2"
000029A6 <dos.include.bb2@1012> XINCLUDE "dos.include.bb2"
000029D0 <dos.include.bb2@1147> XINCLUDE "dos.include.bb2"
000029DE <dos.include.bb2@1149> XINCLUDE "dos.include.bb2"
00002AA4 <dos.include.bb2@1150> XINCLUDE "dos.include.bb2"
00002ACE <dos.include.bb2@1151> XINCLUDE "dos.include.bb2"
00002AF6 <dos.include.bb2@1153> XINCLUDE "dos.include.bb2"
00002B20 <dos.include.bb2@1154> XINCLUDE "dos.include.bb2"
00002B4A <dos.include.bb2@1156> XINCLUDE "dos.include.bb2"
00002B68 <dos.include.bb2@1157> XINCLUDE "dos.include.bb2"
00002B92 <dos.include.bb2@1175> XINCLUDE "dos.include.bb2"
00002BFE <dos.include.bb2@1177> XINCLUDE "dos.include.bb2"
00002C26 <dos.include.bb2@1178> XINCLUDE "dos.include.bb2"
00002C34 <dos.include.bb2@1179> XINCLUDE "dos.include.bb2"
00002C68 <dos.include.bb2@1180> XINCLUDE "dos.include.bb2"
00002C76 <dos.include.bb2@1183> XINCLUDE "dos.include.bb2"
00002C98 <dos.include.bb2@1189> XINCLUDE "dos.include.bb2"
00002CA6 <dos.include.bb2@1193> XINCLUDE "dos.include.bb2"
00002CCA <dos.include.bb2@1194> XINCLUDE "dos.include.bb2"
00002CF4 <dos.include.bb2@1195> XINCLUDE "dos.include.bb2"
00002D1E <dos.include.bb2@1198> XINCLUDE "dos.include.bb2"
00002D3C <dos.include.bb2@1199> XINCLUDE "dos.include.bb2"
00002D66 <dos.include.bb2@1260> XINCLUDE "dos.include.bb2"
00002DBE <dos.include.bb2@1261> XINCLUDE "dos.include.bb2"
00002DE8 <dos.include.bb2@1262> XINCLUDE "dos.include.bb2"
00002E06 <dos.include.bb2@1263> XINCLUDE "dos.include.bb2"
00002E1C <dos.include.bb2@1337> XINCLUDE "dos.include.bb2"
00002E22 <dos.include.bb2@1339> XINCLUDE "dos.include.bb2"
00002E2C <dos.include.bb2@1340> XINCLUDE "dos.include.bb2"
00002E36 <dos.include.bb2@1341> XINCLUDE "dos.include.bb2"
00002E54 <dos.include.bb2@1344> XINCLUDE "dos.include.bb2"
00002E5A <dos.include.bb2@1345> XINCLUDE "dos.include.bb2"
00002E60 <dos.include.bb2@1346> XINCLUDE "dos.include.bb2"
00002E70 <dos.include.bb2@1348> XINCLUDE "dos.include.bb2"
00002E76 <dos.include.bb2@1349> XINCLUDE "dos.include.bb2"
00002E7E <dos.include.bb2@1350> XINCLUDE "dos.include.bb2"
00002EA6 <dos.include.bb2@1351> XINCLUDE "dos.include.bb2"
00002EB0 <dos.include.bb2@1352> XINCLUDE "dos.include.bb2"
00002EBA <dos.include.bb2@1354> XINCLUDE "dos.include.bb2"
00002ECE <dos.include.bb2@1355> XINCLUDE "dos.include.bb2"
00002EE4 <dos.include.bb2@1460> XINCLUDE "dos.include.bb2"
00002EEA <dos.include.bb2@1466> XINCLUDE "dos.include.bb2"
00002F0E <dos.include.bb2@1467> XINCLUDE "dos.include.bb2"
00002F32 <dos.include.bb2@1468> XINCLUDE "dos.include.bb2"
00002F56 <dos.include.bb2@1469> XINCLUDE "dos.include.bb2"
00002F5C <dos.include.bb2@1470> XINCLUDE "dos.include.bb2"
00002F88 <dos.include.bb2@1471> XINCLUDE "dos.include.bb2"
00002F8A <dos.include.bb2@1472> XINCLUDE "dos.include.bb2"
00002FB8 <dos.include.bb2@1473> XINCLUDE "dos.include.bb2"
00002FE2 <dos.include.bb2@1489> XINCLUDE "dos.include.bb2"
00003066 <dos.include.bb2@1492> XINCLUDE "dos.include.bb2"
0000312E <dos.include.bb2@1493> XINCLUDE "dos.include.bb2"
00003138 <dos.include.bb2@1495> XINCLUDE "dos.include.bb2"
00003182 <dos.include.bb2@1496> XINCLUDE "dos.include.bb2"
000031CE <dos.include.bb2@1498> XINCLUDE "dos.include.bb2"
00003206 <dos.include.bb2@1499> XINCLUDE "dos.include.bb2"
00003218 <dos.include.bb2@1500> XINCLUDE "dos.include.bb2"
0000322E <dos.include.bb2@1501> XINCLUDE "dos.include.bb2"
00003234 <dos.include.bb2@1502> XINCLUDE "dos.include.bb2"
0000324A <dos.include.bb2@1503> XINCLUDE "dos.include.bb2"
0000327E <dos.include.bb2@1505> XINCLUDE "dos.include.bb2"
00003284 <dos.include.bb2@1506> XINCLUDE "dos.include.bb2"
0000328E <dos.include.bb2@1508> XINCLUDE "dos.include.bb2"
000032A8 <dos.include.bb2@1509> XINCLUDE "dos.include.bb2"
000032F2 <dos.include.bb2@1539> XINCLUDE "dos.include.bb2"
00003328 <dos.include.bb2@1541> XINCLUDE "dos.include.bb2"
0000334C <dos.include.bb2@1542> XINCLUDE "dos.include.bb2"
00003356 <dos.include.bb2@1543> XINCLUDE "dos.include.bb2"
0000337E <dos.include.bb2@1544> XINCLUDE "dos.include.bb2"
000033C6 <dos.include.bb2@1547> XINCLUDE "dos.include.bb2"
0000349C <dos.include.bb2@1549> XINCLUDE "dos.include.bb2"
000034C6 <dos.include.bb2@1550> XINCLUDE "dos.include.bb2"
000034E6 <dos.include.bb2@1551> XINCLUDE "dos.include.bb2"
00003520 <dos.include.bb2@1570> XINCLUDE "dos.include.bb2"
00003526 <dos.include.bb2@1572> XINCLUDE "dos.include.bb2"
0000352C <dos.include.bb2@1573> XINCLUDE "dos.include.bb2"
00003534 <dos.include.bb2@1574> XINCLUDE "dos.include.bb2"
0000356A <dos.include.bb2@1575> XINCLUDE "dos.include.bb2"
00003578 <dos.include.bb2@1576> XINCLUDE "dos.include.bb2"
00003582 <dos.include.bb2@1577> XINCLUDE "dos.include.bb2"
000035AE <dos.include.bb2@1578> XINCLUDE "dos.include.bb2"
000035BC <dos.include.bb2@1579> XINCLUDE "dos.include.bb2"
000035C6 <dos.include.bb2@1580> XINCLUDE "dos.include.bb2"
000035F4 <dos.include.bb2@1582> XINCLUDE "dos.include.bb2"
00003672 <dos.include.bb2@1585> XINCLUDE "dos.include.bb2"
000036C4 <dos.include.bb2@1588> XINCLUDE "dos.include.bb2"
000036D6 <dos.include.bb2@1589> XINCLUDE "dos.include.bb2"
00003744 <dos.include.bb2@1590> XINCLUDE "dos.include.bb2"
0000374A <dos.include.bb2@1591> XINCLUDE "dos.include.bb2"
00003796 <dos.include.bb2@1592> XINCLUDE "dos.include.bb2"
00003864 <dos.include.bb2@1596> XINCLUDE "dos.include.bb2"
00003944 <dos.include.bb2@1597> XINCLUDE "dos.include.bb2"
000039B0 <dos.include.bb2@1599> XINCLUDE "dos.include.bb2"
000039B6 <dos.include.bb2@1600> XINCLUDE "dos.include.bb2"
000039D2 <dos.include.bb2@1601> XINCLUDE "dos.include.bb2"
000039E0 <dos.include.bb2@1604> XINCLUDE "dos.include.bb2"
000039E6 <dos.include.bb2@1605> XINCLUDE "dos.include.bb2"
000039F8 <dos.include.bb2@1608> XINCLUDE "dos.include.bb2"
00003A0E <dos.include.bb2@1609> XINCLUDE "dos.include.bb2"
00003A18 <dos.include.bb2@1610> XINCLUDE "dos.include.bb2"
00003A34 <dos.include.bb2@1611> XINCLUDE "dos.include.bb2"
00003A5E <dos.include.bb2@2187> XINCLUDE "dos.include.bb2"
00003A72 <dos.include.bb2@2188> XINCLUDE "dos.include.bb2"
00003AB0 <dos.include.bb2@2189> XINCLUDE "dos.include.bb2"
00003B96 <dos.include.bb2@2190> XINCLUDE "dos.include.bb2"
00003B9C <dos.include.bb2@2191> XINCLUDE "dos.include.bb2"
00003BEC <dos.include.bb2@2192> XINCLUDE "dos.include.bb2"
00003C16 <dos.include.bb2@2193> XINCLUDE "dos.include.bb2"
00003C34 <dos.include.bb2@2194> XINCLUDE "dos.include.bb2"
00003C5E <dos.include.bb2@2218> XINCLUDE "dos.include.bb2"
00003C72 <dos.include.bb2@2219> XINCLUDE "dos.include.bb2"
00003CB0 <dos.include.bb2@2220> XINCLUDE "dos.include.bb2"
00003D96 <dos.include.bb2@2221> XINCLUDE "dos.include.bb2"
00003D9C <dos.include.bb2@2222> XINCLUDE "dos.include.bb2"
00003E0E <dos.include.bb2@2223> XINCLUDE "dos.include.bb2"
00003E38 <dos.include.bb2@2224> XINCLUDE "dos.include.bb2"
00003E56 <dos.include.bb2@2225> XINCLUDE "dos.include.bb2"
00003E90 <dos.include.bb2@2251> XINCLUDE "dos.include.bb2"
00003EC8 <dos.include.bb2@2252> XINCLUDE "dos.include.bb2"
00003F20 <dos.include.bb2@2253> XINCLUDE "dos.include.bb2"
00003F84 <dos.include.bb2@2254> XINCLUDE "dos.include.bb2"
00003FAE <dos.include.bb2@2256> XINCLUDE "dos.include.bb2"
00003FCE <dos.include.bb2@2257> XINCLUDE "dos.include.bb2"
00003FF8 <dos.include.bb2@2274> XINCLUDE "dos.include.bb2"
00003FFE <dos.include.bb2@2275> XINCLUDE "dos.include.bb2"
00004014 <dos.include.bb2@2276> XINCLUDE "dos.include.bb2"
0000401E <dos.include.bb2@2277> XINCLUDE "dos.include.bb2"
00004024 <dos.include.bb2@2278> XINCLUDE "dos.include.bb2"
00004034 <dos.include.bb2@2279> XINCLUDE "dos.include.bb2"
0000403E <dos.include.bb2@2281> XINCLUDE "dos.include.bb2"
00004058 <dos.include.bb2@2282> XINCLUDE "dos.include.bb2"
00004086 <dos.include.bb2@2516> XINCLUDE "dos.include.bb2"
000040A8 <dos.include.bb2@2517> XINCLUDE "dos.include.bb2"
000040B0 <dos.include.bb2@2518> XINCLUDE "dos.include.bb2"
000040BE <dos.include.bb2@2519> XINCLUDE "dos.include.bb2"
000040D8 <dos.include.bb2@2521> XINCLUDE "dos.include.bb2"
00004106 <dos.include.bb2@2540> XINCLUDE "dos.include.bb2"
0000411A <dos.include.bb2@2541> XINCLUDE "dos.include.bb2"
0000414E <dos.include.bb2@2542> XINCLUDE "dos.include.bb2"
00004168 <dos.include.bb2@2544> XINCLUDE "dos.include.bb2"
00004170 <dos.include.bb2@2545> XINCLUDE "dos.include.bb2"
0000417E <dos.include.bb2@2546> XINCLUDE "dos.include.bb2"
00004198 <dos.include.bb2@2548> XINCLUDE "dos.include.bb2"
000041C2 <dos.include.bb2@2684> XINCLUDE "dos.include.bb2"
000041CE <dos.include.bb2@2686> XINCLUDE "dos.include.bb2"
000041EE <dos.include.bb2@2687> XINCLUDE "dos.include.bb2"
00004214 <dos.include.bb2@2688> XINCLUDE "dos.include.bb2"
00004240 <dos.include.bb2@2689> XINCLUDE "dos.include.bb2"
00004258 <dos.include.bb2@2690> XINCLUDE "dos.include.bb2"
00004266 <dos.include.bb2@2692> XINCLUDE "dos.include.bb2"
0000426C <dos.include.bb2@2693> XINCLUDE "dos.include.bb2"
00004278 <dos.include.bb2@2694> XINCLUDE "dos.include.bb2"
0000427E <dos.include.bb2@2696> XINCLUDE "dos.include.bb2"
0000428A <dos.include.bb2@2697> XINCLUDE "dos.include.bb2"
0000429A <dos.include.bb2@2699> XINCLUDE "dos.include.bb2"
000042A0 <dos.include.bb2@2700> XINCLUDE "dos.include.bb2"
000042AC <dos.include.bb2@2701> XINCLUDE "dos.include.bb2"
000042B6 <dos.include.bb2@2703> XINCLUDE "dos.include.bb2"
000042D0 <dos.include.bb2@2704> XINCLUDE "dos.include.bb2"
000042D0 <AmiBlitz3.ab2@79> XINCLUDE "dos.include.bb2"
000042DE <AmiBlitz3.ab2@81> If dos_FromCLI{}
000042E4 <AmiBlitz3.ab2@82>   CLIMode.l=True
000042F0 <AmiBlitz3.ab2@83>   error_SetFlags{#error_stdout}
000042F0 <common.ab3@1> XINCLUDE "/Shared/common.ab3"
00004318 <common.ab3@38> XINCLUDE "/Shared/common.ab3"
0000431E <common.ab3@250> XINCLUDE "/Shared/common.ab3"
00004320 <common.ab3@251> XINCLUDE "/Shared/common.ab3"
000044B0 <common.ab3@252> XINCLUDE "/Shared/common.ab3"
000044B4 <common.ab3@253> XINCLUDE "/Shared/common.ab3"
000044B8 <common.ab3@255> XINCLUDE "/Shared/common.ab3"
000044BC <common.ab3@256> XINCLUDE "/Shared/common.ab3"
000044C0 <common.ab3@258> XINCLUDE "/Shared/common.ab3"
000044C4 <common.ab3@259> XINCLUDE "/Shared/common.ab3"
000044C8 <common.ab3@260> XINCLUDE "/Shared/common.ab3"
000044CC <common.ab3@261> XINCLUDE "/Shared/common.ab3"
000044D0 <common.ab3@262> XINCLUDE "/Shared/common.ab3"
000044D4 <common.ab3@263> XINCLUDE "/Shared/common.ab3"
000044D8 <common.ab3@264> XINCLUDE "/Shared/common.ab3"
000044DC <common.ab3@265> XINCLUDE "/Shared/common.ab3"
000044E0 <common.ab3@266> XINCLUDE "/Shared/common.ab3"
000044E4 <common.ab3@268> XINCLUDE "/Shared/common.ab3"
000044E8 <common.ab3@270> XINCLUDE "/Shared/common.ab3"
000044EC <common.ab3@271> XINCLUDE "/Shared/common.ab3"
000044F0 <common.ab3@272> XINCLUDE "/Shared/common.ab3"
000044F4 <common.ab3@273> XINCLUDE "/Shared/common.ab3"
000044F8 <common.ab3@274> XINCLUDE "/Shared/common.ab3"
000044FC <common.ab3@275> XINCLUDE "/Shared/common.ab3"
00004500 <common.ab3@276> XINCLUDE "/Shared/common.ab3"
00004504 <common.ab3@277> XINCLUDE "/Shared/common.ab3"
00004508 <common.ab3@278> XINCLUDE "/Shared/common.ab3"
0000450C <common.ab3@279> XINCLUDE "/Shared/common.ab3"
00004514 <common.ab3@282> XINCLUDE "/Shared/common.ab3"
00004518 <common.ab3@283> XINCLUDE "/Shared/common.ab3"
0000451A <common.ab3@284> XINCLUDE "/Shared/common.ab3"
0000451E <common.ab3@285> XINCLUDE "/Shared/common.ab3"
00004520 <common.ab3@286> XINCLUDE "/Shared/common.ab3"
00004524 <common.ab3@287> XINCLUDE "/Shared/common.ab3"
00004528 <common.ab3@288> XINCLUDE "/Shared/common.ab3"
0000452C <common.ab3@289> XINCLUDE "/Shared/common.ab3"
00004530 <common.ab3@290> XINCLUDE "/Shared/common.ab3"
00004534 <common.ab3@291> XINCLUDE "/Shared/common.ab3"
0000453C <common.ab3@292> XINCLUDE "/Shared/common.ab3"
00004544 <common.ab3@293> XINCLUDE "/Shared/common.ab3"
00004548 <common.ab3@294> XINCLUDE "/Shared/common.ab3"
0000454C <common.ab3@295> XINCLUDE "/Shared/common.ab3"
00004550 <common.ab3@296> XINCLUDE "/Shared/common.ab3"
00004552 <common.ab3@298> XINCLUDE "/Shared/common.ab3"
00004612 <common.ab3@299> XINCLUDE "/Shared/common.ab3"
0000465A <common.ab3@300> XINCLUDE "/Shared/common.ab3"
0000465E <common.ab3@302> XINCLUDE "/Shared/common.ab3"
00004660 <common.ab3@303> XINCLUDE "/Shared/common.ab3"
00004664 <common.ab3@304> XINCLUDE "/Shared/common.ab3"
00004666 <common.ab3@305> XINCLUDE "/Shared/common.ab3"
00004668 <common.ab3@306> XINCLUDE "/Shared/common.ab3"
0000466A <common.ab3@307> XINCLUDE "/Shared/common.ab3"
0000466C <common.ab3@308> XINCLUDE "/Shared/common.ab3"
0000466E <common.ab3@310> XINCLUDE "/Shared/common.ab3"
00004670 <common.ab3@311> XINCLUDE "/Shared/common.ab3"
00004671 <common.ab3@313> XINCLUDE "/Shared/common.ab3"
00004672 <common.ab3@314> XINCLUDE "/Shared/common.ab3"
00004674 <common.ab3@315> XINCLUDE "/Shared/common.ab3"
00004676 <common.ab3@316> XINCLUDE "/Shared/common.ab3"
00004678 <common.ab3@318> XINCLUDE "/Shared/common.ab3"
0000467A <common.ab3@321> XINCLUDE "/Shared/common.ab3"
0000467C <common.ab3@323> XINCLUDE "/Shared/common.ab3"
0000467E <common.ab3@325> XINCLUDE "/Shared/common.ab3"
00004682 <common.ab3@327> XINCLUDE "/Shared/common.ab3"
00004684 <common.ab3@329> XINCLUDE "/Shared/common.ab3"
00004686 <common.ab3@330> XINCLUDE "/Shared/common.ab3"
00004688 <common.ab3@332> XINCLUDE "/Shared/common.ab3"
0000468C <common.ab3@334> XINCLUDE "/Shared/common.ab3"
0000468E <common.ab3@335> XINCLUDE "/Shared/common.ab3"
00004690 <common.ab3@336> XINCLUDE "/Shared/common.ab3"
00004694 <common.ab3@339> XINCLUDE "/Shared/common.ab3"
00004696 <common.ab3@340> XINCLUDE "/Shared/common.ab3"
00004698 <common.ab3@341> XINCLUDE "/Shared/common.ab3"
0000469A <common.ab3@342> XINCLUDE "/Shared/common.ab3"
0000469C <common.ab3@344> XINCLUDE "/Shared/common.ab3"
0000469E <common.ab3@345> XINCLUDE "/Shared/common.ab3"
000046A2 <common.ab3@347> XINCLUDE "/Shared/common.ab3"
000046A4 <common.ab3@348> XINCLUDE "/Shared/common.ab3"
000046A6 <common.ab3@349> XINCLUDE "/Shared/common.ab3"
000046A8 <common.ab3@353> XINCLUDE "/Shared/common.ab3"
000046AA <common.ab3@354> XINCLUDE "/Shared/common.ab3"
000046AE <common.ab3@355> XINCLUDE "/Shared/common.ab3"
000046B0 <common.ab3@361> XINCLUDE "/Shared/common.ab3"
000046B2 <common.ab3@363> XINCLUDE "/Shared/common.ab3"
000046B4 <common.ab3@365> XINCLUDE "/Shared/common.ab3"
000046B6 <common.ab3@366> XINCLUDE "/Shared/common.ab3"
000046B8 <common.ab3@367> XINCLUDE "/Shared/common.ab3"
000046BC <common.ab3@368> XINCLUDE "/Shared/common.ab3"
000046BE <common.ab3@369> XINCLUDE "/Shared/common.ab3"
000046C0 <common.ab3@370> XINCLUDE "/Shared/common.ab3"
000046C2 <common.ab3@371> XINCLUDE "/Shared/common.ab3"
000046C4 <common.ab3@372> XINCLUDE "/Shared/common.ab3"
000046C6 <common.ab3@374> XINCLUDE "/Shared/common.ab3"
000046C8 <common.ab3@376> XINCLUDE "/Shared/common.ab3"
000046CA <common.ab3@378> XINCLUDE "/Shared/common.ab3"
000046CE <common.ab3@379> XINCLUDE "/Shared/common.ab3"
000046D0 <common.ab3@380> XINCLUDE "/Shared/common.ab3"
000046FE <common.ab3@381> XINCLUDE "/Shared/common.ab3"
00004708 <common.ab3@382> XINCLUDE "/Shared/common.ab3"
0000470C <common.ab3@383> XINCLUDE "/Shared/common.ab3"
0000470E <common.ab3@385> XINCLUDE "/Shared/common.ab3"
00004710 <common.ab3@386> XINCLUDE "/Shared/common.ab3"
00004714 <common.ab3@387> XINCLUDE "/Shared/common.ab3"
00004718 <common.ab3@388> XINCLUDE "/Shared/common.ab3"
00004721 <common.ab3@389> XINCLUDE "/Shared/common.ab3"
00004724 <common.ab3@390> XINCLUDE "/Shared/common.ab3"
00004751 <common.ab3@391> XINCLUDE "/Shared/common.ab3"
00004791 <common.ab3@392> XINCLUDE "/Shared/common.ab3"
0000479D <common.ab3@393> XINCLUDE "/Shared/common.ab3"
000047ED <common.ab3@394> XINCLUDE "/Shared/common.ab3"
000047F9 <common.ab3@395> XINCLUDE "/Shared/common.ab3"
00004849 <common.ab3@396> XINCLUDE "/Shared/common.ab3"
00004945 <common.ab3@397> XINCLUDE "/Shared/common.ab3"
00004947 <common.ab3@398> XINCLUDE "/Shared/common.ab3"
00004A07 <common.ab3@399> XINCLUDE "/Shared/common.ab3"
00004A47 <common.ab3@400> XINCLUDE "/Shared/common.ab3"
00004A49 <common.ab3@401> XINCLUDE "/Shared/common.ab3"
00004A4A <common.ab3@402> XINCLUDE "/Shared/common.ab3"
00004A4E <common.ab3@405> XINCLUDE "/Shared/common.ab3"
00004A52 <common.ab3@407> XINCLUDE "/Shared/common.ab3"
00004A56 <common.ab3@408> XINCLUDE "/Shared/common.ab3"
00004A5A <common.ab3@409> XINCLUDE "/Shared/common.ab3"
00004A5E <common.ab3@411> XINCLUDE "/Shared/common.ab3"
00004A62 <common.ab3@413> XINCLUDE "/Shared/common.ab3"
00004A66 <common.ab3@414> XINCLUDE "/Shared/common.ab3"
00004A6A <common.ab3@415> XINCLUDE "/Shared/common.ab3"
00004A6E <common.ab3@416> XINCLUDE "/Shared/common.ab3"
00004A72 <common.ab3@417> XINCLUDE "/Shared/common.ab3"
00004A76 <common.ab3@418> XINCLUDE "/Shared/common.ab3"
00004A7A <common.ab3@419> XINCLUDE "/Shared/common.ab3"
00004A7E <common.ab3@420> XINCLUDE "/Shared/common.ab3"
00004A82 <common.ab3@422> XINCLUDE "/Shared/common.ab3"
00004A86 <common.ab3@424> XINCLUDE "/Shared/common.ab3"
00004A8A <common.ab3@426> XINCLUDE "/Shared/common.ab3"
00004A8E <common.ab3@428> XINCLUDE "/Shared/common.ab3"
00004A92 <common.ab3@429> XINCLUDE "/Shared/common.ab3"
00004A9C <common.ab3@430> XINCLUDE "/Shared/common.ab3"
00004AA0 <common.ab3@431> XINCLUDE "/Shared/common.ab3"
00004AA4 <common.ab3@434> XINCLUDE "/Shared/common.ab3"
00004AA6 <common.ab3@435> XINCLUDE "/Shared/common.ab3"
00004AA8 <common.ab3@436> XINCLUDE "/Shared/common.ab3"
00004AC6 <common.ab3@437> XINCLUDE "/Shared/common.ab3"
00004ACA <common.ab3@438> XINCLUDE "/Shared/common.ab3"
00004ACC <common.ab3@440> XINCLUDE "/Shared/common.ab3"
00004AD0 <common.ab3@441> XINCLUDE "/Shared/common.ab3"
00004B04 <common.ab3@442> XINCLUDE "/Shared/common.ab3"
00004B08 <common.ab3@443> XINCLUDE "/Shared/common.ab3"
00004B16 <common.ab3@445> XINCLUDE "/Shared/common.ab3"
00004B28 <common.ab3@446> XINCLUDE "/Shared/common.ab3"
00004B2A <common.ab3@447> XINCLUDE "/Shared/common.ab3"
00004B3E <common.ab3@448> XINCLUDE "/Shared/common.ab3"
00004B54 <common.ab3@449> XINCLUDE "/Shared/common.ab3"
00004B6A <common.ab3@450> XINCLUDE "/Shared/common.ab3"
00004B80 <common.ab3@451> XINCLUDE "/Shared/common.ab3"
00004B96 <common.ab3@452> XINCLUDE "/Shared/common.ab3"
00004B98 <common.ab3@453> XINCLUDE "/Shared/common.ab3"
00004B9A <common.ab3@454> XINCLUDE "/Shared/common.ab3"
00004B9E <common.ab3@456> XINCLUDE "/Shared/common.ab3"
00004BA2 <common.ab3@458> XINCLUDE "/Shared/common.ab3"
00004BA6 <common.ab3@460> XINCLUDE "/Shared/common.ab3"
00004BAA <common.ab3@461> XINCLUDE "/Shared/common.ab3"
00004BAE <common.ab3@462> XINCLUDE "/Shared/common.ab3"
00004BB2 <common.ab3@463> XINCLUDE "/Shared/common.ab3"
00004BB6 <common.ab3@464> XINCLUDE "/Shared/common.ab3"
00004BBA <common.ab3@465> XINCLUDE "/Shared/common.ab3"
00004BBE <common.ab3@466> XINCLUDE "/Shared/common.ab3"
00004BC2 <common.ab3@467> XINCLUDE "/Shared/common.ab3"
00004BC8 <common.ab3@468> XINCLUDE "/Shared/common.ab3"
00004BDA <common.ab3@469> XINCLUDE "/Shared/common.ab3"
00004BDC <common.ab3@473> XINCLUDE "/Shared/common.ab3"
00004BE0 <common.ab3@474> XINCLUDE "/Shared/common.ab3"
00004BE2 <common.ab3@475> XINCLUDE "/Shared/common.ab3"
00004BE6 <common.ab3@476> XINCLUDE "/Shared/common.ab3"
00004BE8 <common.ab3@477> XINCLUDE "/Shared/common.ab3"
00004BEC <common.ab3@478> XINCLUDE "/Shared/common.ab3"
00004BEE <common.ab3@479> XINCLUDE "/Shared/common.ab3"
00004BF2 <common.ab3@480> XINCLUDE "/Shared/common.ab3"
00004BF4 <common.ab3@481> XINCLUDE "/Shared/common.ab3"
00004BF8 <common.ab3@482> XINCLUDE "/Shared/common.ab3"
00004BFA <common.ab3@483> XINCLUDE "/Shared/common.ab3"
00004BFE <common.ab3@484> XINCLUDE "/Shared/common.ab3"
00004C00 <common.ab3@485> XINCLUDE "/Shared/common.ab3"
00004C04 <common.ab3@486> XINCLUDE "/Shared/common.ab3"
00004C06 <common.ab3@487> XINCLUDE "/Shared/common.ab3"
00004C0A <common.ab3@488> XINCLUDE "/Shared/common.ab3"
00004C0C <common.ab3@489> XINCLUDE "/Shared/common.ab3"
00004C10 <common.ab3@490> XINCLUDE "/Shared/common.ab3"
00004C12 <common.ab3@491> XINCLUDE "/Shared/common.ab3"
00004C16 <common.ab3@492> XINCLUDE "/Shared/common.ab3"
00004C18 <common.ab3@493> XINCLUDE "/Shared/common.ab3"
00004C1C <common.ab3@494> XINCLUDE "/Shared/common.ab3"
00004C1E <common.ab3@495> XINCLUDE "/Shared/common.ab3"
00004C22 <common.ab3@496> XINCLUDE "/Shared/common.ab3"
00004C24 <common.ab3@497> XINCLUDE "/Shared/common.ab3"
00004C28 <common.ab3@498> XINCLUDE "/Shared/common.ab3"
00004C2A <common.ab3@499> XINCLUDE "/Shared/common.ab3"
00004C2E <common.ab3@500> XINCLUDE "/Shared/common.ab3"
00004C30 <common.ab3@501> XINCLUDE "/Shared/common.ab3"
00004C44 <common.ab3@505> XINCLUDE "/Shared/common.ab3"
00004C58 <common.ab3@506> XINCLUDE "/Shared/common.ab3"
00004C6C <common.ab3@507> XINCLUDE "/Shared/common.ab3"
00004C6E <common.ab3@508> XINCLUDE "/Shared/common.ab3"
00004C72 <common.ab3@509> XINCLUDE "/Shared/common.ab3"
00004C76 <common.ab3@510> XINCLUDE "/Shared/common.ab3"
00004C7A <common.ab3@511> XINCLUDE "/Shared/common.ab3"
00004C7E <common.ab3@512> XINCLUDE "/Shared/common.ab3"
00004C82 <common.ab3@513> XINCLUDE "/Shared/common.ab3"
00004C86 <common.ab3@514> XINCLUDE "/Shared/common.ab3"
00004C8A <common.ab3@515> XINCLUDE "/Shared/common.ab3"
00004C8B <common.ab3@516> XINCLUDE "/Shared/common.ab3"
00004C8C <common.ab3@517> XINCLUDE "/Shared/common.ab3"
00004C8D <common.ab3@518> XINCLUDE "/Shared/common.ab3"
00004C90 <common.ab3@519> XINCLUDE "/Shared/common.ab3"
00004C94 <common.ab3@520> XINCLUDE "/Shared/common.ab3"
00004C98 <common.ab3@521> XINCLUDE "/Shared/common.ab3"
00004C9C <common.ab3@522> XINCLUDE "/Shared/common.ab3"
00004CA0 <common.ab3@523> XINCLUDE "/Shared/common.ab3"
00004CA4 <common.ab3@524> XINCLUDE "/Shared/common.ab3"
00004CA8 <common.ab3@525> XINCLUDE "/Shared/common.ab3"
00004CA9 <common.ab3@526> XINCLUDE "/Shared/common.ab3"
00004CAA <common.ab3@527> XINCLUDE "/Shared/common.ab3"
00004CAC <common.ab3@528> XINCLUDE "/Shared/common.ab3"
00004CB0 <common.ab3@529> XINCLUDE "/Shared/common.ab3"
00004CB4 <common.ab3@530> XINCLUDE "/Shared/common.ab3"
00004CB8 <common.ab3@531> XINCLUDE "/Shared/common.ab3"
00004CBC <common.ab3@533> XINCLUDE "/Shared/common.ab3"
00004CC0 <common.ab3@534> XINCLUDE "/Shared/common.ab3"
00004CC4 <common.ab3@535> XINCLUDE "/Shared/common.ab3"
00004CC8 <common.ab3@536> XINCLUDE "/Shared/common.ab3"
00004CCC <common.ab3@537> XINCLUDE "/Shared/common.ab3"
00004CD0 <common.ab3@538> XINCLUDE "/Shared/common.ab3"
00004CD4 <common.ab3@539> XINCLUDE "/Shared/common.ab3"
00004CD8 <common.ab3@540> XINCLUDE "/Shared/common.ab3"
00004CDC <common.ab3@544> XINCLUDE "/Shared/common.ab3"
00004CE0 <common.ab3@545> XINCLUDE "/Shared/common.ab3"
00004CE4 <common.ab3@546> XINCLUDE "/Shared/common.ab3"
00004CE6 <common.ab3@547> XINCLUDE "/Shared/common.ab3"
00004CE7 <common.ab3@548> XINCLUDE "/Shared/common.ab3"
00004CEB <common.ab3@549> XINCLUDE "/Shared/common.ab3"
00004CEF <common.ab3@550> XINCLUDE "/Shared/common.ab3"
00004CF3 <common.ab3@551> XINCLUDE "/Shared/common.ab3"
00004CF7 <common.ab3@552> XINCLUDE "/Shared/common.ab3"
00004CF8 <common.ab3@554> XINCLUDE "/Shared/common.ab3"
00004CFC <common.ab3@556> XINCLUDE "/Shared/common.ab3"
00004D00 <common.ab3@557> XINCLUDE "/Shared/common.ab3"
00004D04 <common.ab3@558> XINCLUDE "/Shared/common.ab3"
00004D08 <common.ab3@559> XINCLUDE "/Shared/common.ab3"
00004D0C <common.ab3@560> XINCLUDE "/Shared/common.ab3"
00004D0D <common.ab3@561> XINCLUDE "/Shared/common.ab3"
00004D0E <common.ab3@563> XINCLUDE "/Shared/common.ab3"
00004D12 <common.ab3@565> XINCLUDE "/Shared/common.ab3"
00004D16 <common.ab3@566> XINCLUDE "/Shared/common.ab3"
00004D18 <common.ab3@567> XINCLUDE "/Shared/common.ab3"
00004D1A <common.ab3@568> XINCLUDE "/Shared/common.ab3"
00004D1E <common.ab3@572> XINCLUDE "/Shared/common.ab3"
00004D22 <common.ab3@573> XINCLUDE "/Shared/common.ab3"
00004D26 <common.ab3@575> XINCLUDE "/Shared/common.ab3"
00004D2A <common.ab3@576> XINCLUDE "/Shared/common.ab3"
00004D2E <common.ab3@578> XINCLUDE "/Shared/common.ab3"
00004D32 <common.ab3@579> XINCLUDE "/Shared/common.ab3"
00004D36 <common.ab3@581> XINCLUDE "/Shared/common.ab3"
00004D3A <common.ab3@582> XINCLUDE "/Shared/common.ab3"
00004D3E <common.ab3@583> XINCLUDE "/Shared/common.ab3"
00004D42 <common.ab3@584> XINCLUDE "/Shared/common.ab3"
00004D46 <common.ab3@585> XINCLUDE "/Shared/common.ab3"
00004D4A <common.ab3@586> XINCLUDE "/Shared/common.ab3"
00004D4E <common.ab3@587> XINCLUDE "/Shared/common.ab3"
00004D52 <common.ab3@588> XINCLUDE "/Shared/common.ab3"
00004D56 <common.ab3@589> XINCLUDE "/Shared/common.ab3"
00004D5A <common.ab3@590> XINCLUDE "/Shared/common.ab3"
00004D5E <common.ab3@591> XINCLUDE "/Shared/common.ab3"
00004D62 <common.ab3@592> XINCLUDE "/Shared/common.ab3"
00004D66 <common.ab3@593> XINCLUDE "/Shared/common.ab3"
00004D6A <common.ab3@594> XINCLUDE "/Shared/common.ab3"
00004D6A <AmiBlitz3.ab2@86> XINCLUDE "/Shared/common.ab3"
00004D6A <preprocessor.include.ab3@1> XINCLUDE "/Shared/preprocessor.include.ab3"
00004D6A <hashmap.include.bb2@1> XINCLUDE "/Shared/preprocessor.include.ab3"
00004D88 <hashmap.include.bb2@34> XINCLUDE "/Shared/preprocessor.include.ab3"
00004D90 <hashmap.include.bb2@35> XINCLUDE "/Shared/preprocessor.include.ab3"
00004DBE <hashmap.include.bb2@36> XINCLUDE "/Shared/preprocessor.include.ab3"
00004DEE <hashmap.include.bb2@37> XINCLUDE "/Shared/preprocessor.include.ab3"
00004DFE <hashmap.include.bb2@38> XINCLUDE "/Shared/preprocessor.include.ab3"
00004E08 <hashmap.include.bb2@39> XINCLUDE "/Shared/preprocessor.include.ab3"
00004E0E <hashmap.include.bb2@40> XINCLUDE "/Shared/preprocessor.include.ab3"
00004E30 <hashmap.include.bb2@43> XINCLUDE "/Shared/preprocessor.include.ab3"
00004E4E <hashmap.include.bb2@44> XINCLUDE "/Shared/preprocessor.include.ab3"
00004E60 <hashmap.include.bb2@45> XINCLUDE "/Shared/preprocessor.include.ab3"
00004E88 <hashmap.include.bb2@46> XINCLUDE "/Shared/preprocessor.include.ab3"
00004E8E <hashmap.include.bb2@47> XINCLUDE "/Shared/preprocessor.include.ab3"
00004EA8 <hashmap.include.bb2@50> XINCLUDE "/Shared/preprocessor.include.ab3"
00004EC0 <hashmap.include.bb2@51> XINCLUDE "/Shared/preprocessor.include.ab3"
00004ED2 <hashmap.include.bb2@52> XINCLUDE "/Shared/preprocessor.include.ab3"
00004EE0 <hashmap.include.bb2@53> XINCLUDE "/Shared/preprocessor.include.ab3"
00004F14 <hashmap.include.bb2@54> XINCLUDE "/Shared/preprocessor.include.ab3"
00004F22 <hashmap.include.bb2@55> XINCLUDE "/Shared/preprocessor.include.ab3"
00004F2C <hashmap.include.bb2@56> XINCLUDE "/Shared/preprocessor.include.ab3"
00004F3E <hashmap.include.bb2@57> XINCLUDE "/Shared/preprocessor.include.ab3"
00004F78 <hashmap.include.bb2@58> XINCLUDE "/Shared/preprocessor.include.ab3"
00004F88 <hashmap.include.bb2@59> XINCLUDE "/Shared/preprocessor.include.ab3"
00004F8E <hashmap.include.bb2@61> XINCLUDE "/Shared/preprocessor.include.ab3"
00004F9E <hashmap.include.bb2@62> XINCLUDE "/Shared/preprocessor.include.ab3"
00004FAE <hashmap.include.bb2@64> XINCLUDE "/Shared/preprocessor.include.ab3"
00004FBC <hashmap.include.bb2@66> XINCLUDE "/Shared/preprocessor.include.ab3"
00004FCC <hashmap.include.bb2@67> XINCLUDE "/Shared/preprocessor.include.ab3"
00004FF0 <hashmap.include.bb2@68> XINCLUDE "/Shared/preprocessor.include.ab3"
00004FFC <hashmap.include.bb2@70> XINCLUDE "/Shared/preprocessor.include.ab3"
0000500A <hashmap.include.bb2@71> XINCLUDE "/Shared/preprocessor.include.ab3"
00005018 <hashmap.include.bb2@72> XINCLUDE "/Shared/preprocessor.include.ab3"
00005026 <hashmap.include.bb2@73> XINCLUDE "/Shared/preprocessor.include.ab3"
00005034 <hashmap.include.bb2@74> XINCLUDE "/Shared/preprocessor.include.ab3"
0000506A <hashmap.include.bb2@75> XINCLUDE "/Shared/preprocessor.include.ab3"
00005078 <hashmap.include.bb2@76> XINCLUDE "/Shared/preprocessor.include.ab3"
00005088 <hashmap.include.bb2@77> XINCLUDE "/Shared/preprocessor.include.ab3"
00005090 <hashmap.include.bb2@78> XINCLUDE "/Shared/preprocessor.include.ab3"
00005094 <hashmap.include.bb2@79> XINCLUDE "/Shared/preprocessor.include.ab3"
000050AE <hashmap.include.bb2@82> XINCLUDE "/Shared/preprocessor.include.ab3"
000050C8 <hashmap.include.bb2@83> XINCLUDE "/Shared/preprocessor.include.ab3"
000050E2 <hashmap.include.bb2@84> XINCLUDE "/Shared/preprocessor.include.ab3"
00005102 <hashmap.include.bb2@86> XINCLUDE "/Shared/preprocessor.include.ab3"
0000510C <hashmap.include.bb2@87> XINCLUDE "/Shared/preprocessor.include.ab3"
00005118 <hashmap.include.bb2@88> XINCLUDE "/Shared/preprocessor.include.ab3"
0000512C <hashmap.include.bb2@89> XINCLUDE "/Shared/preprocessor.include.ab3"
0000515E <hashmap.include.bb2@90> XINCLUDE "/Shared/preprocessor.include.ab3"
00005176 <hashmap.include.bb2@91> XINCLUDE "/Shared/preprocessor.include.ab3"
00005182 <hashmap.include.bb2@92> XINCLUDE "/Shared/preprocessor.include.ab3"
00005190 <hashmap.include.bb2@93> XINCLUDE "/Shared/preprocessor.include.ab3"
0000519E <hashmap.include.bb2@94> XINCLUDE "/Shared/preprocessor.include.ab3"
000051AC <hashmap.include.bb2@95> XINCLUDE "/Shared/preprocessor.include.ab3"
000051BA <hashmap.include.bb2@96> XINCLUDE "/Shared/preprocessor.include.ab3"
000051E4 <hashmap.include.bb2@97> XINCLUDE "/Shared/preprocessor.include.ab3"
000051EE <hashmap.include.bb2@99> XINCLUDE "/Shared/preprocessor.include.ab3"
000051F4 <hashmap.include.bb2@100> XINCLUDE "/Shared/preprocessor.include.ab3"
00005222 <hashmap.include.bb2@103> XINCLUDE "/Shared/preprocessor.include.ab3"
0000523A <hashmap.include.bb2@104> XINCLUDE "/Shared/preprocessor.include.ab3"
00005258 <hashmap.include.bb2@105> XINCLUDE "/Shared/preprocessor.include.ab3"
0000526C <hashmap.include.bb2@106> XINCLUDE "/Shared/preprocessor.include.ab3"
00005284 <hashmap.include.bb2@107> XINCLUDE "/Shared/preprocessor.include.ab3"
000052AC <hashmap.include.bb2@108> XINCLUDE "/Shared/preprocessor.include.ab3"
000052C4 <hashmap.include.bb2@109> XINCLUDE "/Shared/preprocessor.include.ab3"
000052D2 <hashmap.include.bb2@110> XINCLUDE "/Shared/preprocessor.include.ab3"
000052E0 <hashmap.include.bb2@111> XINCLUDE "/Shared/preprocessor.include.ab3"
000052EE <hashmap.include.bb2@112> XINCLUDE "/Shared/preprocessor.include.ab3"
00005302 <hashmap.include.bb2@113> XINCLUDE "/Shared/preprocessor.include.ab3"
00005356 <hashmap.include.bb2@114> XINCLUDE "/Shared/preprocessor.include.ab3"
00005380 <hashmap.include.bb2@115> XINCLUDE "/Shared/preprocessor.include.ab3"
000053C4 <hashmap.include.bb2@117> XINCLUDE "/Shared/preprocessor.include.ab3"
000053E4 <hashmap.include.bb2@118> XINCLUDE "/Shared/preprocessor.include.ab3"
000053F6 <hashmap.include.bb2@119> XINCLUDE "/Shared/preprocessor.include.ab3"
0000541A <hashmap.include.bb2@120> XINCLUDE "/Shared/preprocessor.include.ab3"
00005428 <hashmap.include.bb2@121> XINCLUDE "/Shared/preprocessor.include.ab3"
00005480 <hashmap.include.bb2@122> XINCLUDE "/Shared/preprocessor.include.ab3"
000054C6 <hashmap.include.bb2@123> XINCLUDE "/Shared/preprocessor.include.ab3"
000054CC <hashmap.include.bb2@124> XINCLUDE "/Shared/preprocessor.include.ab3"
000054D4 <hashmap.include.bb2@125> XINCLUDE "/Shared/preprocessor.include.ab3"
000054FC <hashmap.include.bb2@127> XINCLUDE "/Shared/preprocessor.include.ab3"
0000550E <hashmap.include.bb2@128> XINCLUDE "/Shared/preprocessor.include.ab3"
00005520 <hashmap.include.bb2@129> XINCLUDE "/Shared/preprocessor.include.ab3"
0000555A <hashmap.include.bb2@130> XINCLUDE "/Shared/preprocessor.include.ab3"
0000556A <hashmap.include.bb2@131> XINCLUDE "/Shared/preprocessor.include.ab3"
00005570 <hashmap.include.bb2@133> XINCLUDE "/Shared/preprocessor.include.ab3"
00005580 <hashmap.include.bb2@134> XINCLUDE "/Shared/preprocessor.include.ab3"
00005586 <hashmap.include.bb2@136> XINCLUDE "/Shared/preprocessor.include.ab3"
0000558C <hashmap.include.bb2@138> XINCLUDE "/Shared/preprocessor.include.ab3"
000055A4 <hashmap.include.bb2@139> XINCLUDE "/Shared/preprocessor.include.ab3"
000055E2 <hashmap.include.bb2@142> XINCLUDE "/Shared/preprocessor.include.ab3"
00005600 <hashmap.include.bb2@143> XINCLUDE "/Shared/preprocessor.include.ab3"
00005632 <hashmap.include.bb2@144> XINCLUDE "/Shared/preprocessor.include.ab3"
00005646 <hashmap.include.bb2@145> XINCLUDE "/Shared/preprocessor.include.ab3"
0000565A <hashmap.include.bb2@146> XINCLUDE "/Shared/preprocessor.include.ab3"
00005672 <hashmap.include.bb2@147> XINCLUDE "/Shared/preprocessor.include.ab3"
0000569A <hashmap.include.bb2@149> XINCLUDE "/Shared/preprocessor.include.ab3"
000056A4 <hashmap.include.bb2@153> XINCLUDE "/Shared/preprocessor.include.ab3"
000056B2 <hashmap.include.bb2@154> XINCLUDE "/Shared/preprocessor.include.ab3"
000056CA <hashmap.include.bb2@155> XINCLUDE "/Shared/preprocessor.include.ab3"
000056D0 <hashmap.include.bb2@159> XINCLUDE "/Shared/preprocessor.include.ab3"
000056D8 <hashmap.include.bb2@160> XINCLUDE "/Shared/preprocessor.include.ab3"
000056F8 <hashmap.include.bb2@163> XINCLUDE "/Shared/preprocessor.include.ab3"
0000571E <hashmap.include.bb2@164> XINCLUDE "/Shared/preprocessor.include.ab3"
00005728 <hashmap.include.bb2@165> XINCLUDE "/Shared/preprocessor.include.ab3"
00005736 <hashmap.include.bb2@166> XINCLUDE "/Shared/preprocessor.include.ab3"
00005740 <hashmap.include.bb2@168> XINCLUDE "/Shared/preprocessor.include.ab3"
0000576C <hashmap.include.bb2@169> XINCLUDE "/Shared/preprocessor.include.ab3"
00005780 <hashmap.include.bb2@170> XINCLUDE "/Shared/preprocessor.include.ab3"
00005786 <hashmap.include.bb2@171> XINCLUDE "/Shared/preprocessor.include.ab3"
00005794 <hashmap.include.bb2@172> XINCLUDE "/Shared/preprocessor.include.ab3"
000057CA <hashmap.include.bb2@175> XINCLUDE "/Shared/preprocessor.include.ab3"
00005818 <hashmap.include.bb2@176> XINCLUDE "/Shared/preprocessor.include.ab3"
00005840 <hashmap.include.bb2@178> XINCLUDE "/Shared/preprocessor.include.ab3"
0000585A <hashmap.include.bb2@179> XINCLUDE "/Shared/preprocessor.include.ab3"
0000586C <hashmap.include.bb2@180> XINCLUDE "/Shared/preprocessor.include.ab3"
00005876 <hashmap.include.bb2@182> XINCLUDE "/Shared/preprocessor.include.ab3"
00005892 <hashmap.include.bb2@183> XINCLUDE "/Shared/preprocessor.include.ab3"
000058B8 <hashmap.include.bb2@186> XINCLUDE "/Shared/preprocessor.include.ab3"
000058D6 <hashmap.include.bb2@187> XINCLUDE "/Shared/preprocessor.include.ab3"
000058FA <hashmap.include.bb2@188> XINCLUDE "/Shared/preprocessor.include.ab3"
00005914 <hashmap.include.bb2@189> XINCLUDE "/Shared/preprocessor.include.ab3"
0000593C <hashmap.include.bb2@190> XINCLUDE "/Shared/preprocessor.include.ab3"
0000595A <hashmap.include.bb2@191> XINCLUDE "/Shared/preprocessor.include.ab3"
00005976 <hashmap.include.bb2@192> XINCLUDE "/Shared/preprocessor.include.ab3"
00005984 <hashmap.include.bb2@193> XINCLUDE "/Shared/preprocessor.include.ab3"
00005998 <hashmap.include.bb2@194> XINCLUDE "/Shared/preprocessor.include.ab3"
000059BA <hashmap.include.bb2@195> XINCLUDE "/Shared/preprocessor.include.ab3"
000059DC <hashmap.include.bb2@196> XINCLUDE "/Shared/preprocessor.include.ab3"
000059EA <hashmap.include.bb2@197> XINCLUDE "/Shared/preprocessor.include.ab3"
00005A04 <hashmap.include.bb2@198> XINCLUDE "/Shared/preprocessor.include.ab3"
00005A34 <hashmap.include.bb2@199> XINCLUDE "/Shared/preprocessor.include.ab3"
00005A3A <hashmap.include.bb2@200> XINCLUDE "/Shared/preprocessor.include.ab3"
00005A68 <hashmap.include.bb2@201> XINCLUDE "/Shared/preprocessor.include.ab3"
00005AAA <hashmap.include.bb2@202> XINCLUDE "/Shared/preprocessor.include.ab3"
00005ABA <hashmap.include.bb2@203> XINCLUDE "/Shared/preprocessor.include.ab3"
00005AC4 <hashmap.include.bb2@204> XINCLUDE "/Shared/preprocessor.include.ab3"
00005AD4 <hashmap.include.bb2@205> XINCLUDE "/Shared/preprocessor.include.ab3"
00005ADA <hashmap.include.bb2@209> XINCLUDE "/Shared/preprocessor.include.ab3"
00005AE6 <hashmap.include.bb2@210> XINCLUDE "/Shared/preprocessor.include.ab3"
00005AEC <hashmap.include.bb2@211> XINCLUDE "/Shared/preprocessor.include.ab3"
00005B1A <hashmap.include.bb2@215> XINCLUDE "/Shared/preprocessor.include.ab3"
00005B4A <hashmap.include.bb2@216> XINCLUDE "/Shared/preprocessor.include.ab3"
00005B80 <hashmap.include.bb2@217> XINCLUDE "/Shared/preprocessor.include.ab3"
00005B94 <hashmap.include.bb2@218> XINCLUDE "/Shared/preprocessor.include.ab3"
00005BAC <hashmap.include.bb2@219> XINCLUDE "/Shared/preprocessor.include.ab3"
00005BD4 <hashmap.include.bb2@220> XINCLUDE "/Shared/preprocessor.include.ab3"
00005C04 <hashmap.include.bb2@221> XINCLUDE "/Shared/preprocessor.include.ab3"
00005C20 <hashmap.include.bb2@222> XINCLUDE "/Shared/preprocessor.include.ab3"
00005C2E <hashmap.include.bb2@223> XINCLUDE "/Shared/preprocessor.include.ab3"
00005C42 <hashmap.include.bb2@224> XINCLUDE "/Shared/preprocessor.include.ab3"
00005C96 <hashmap.include.bb2@225> XINCLUDE "/Shared/preprocessor.include.ab3"
00005CC0 <hashmap.include.bb2@226> XINCLUDE "/Shared/preprocessor.include.ab3"
00005D04 <hashmap.include.bb2@227> XINCLUDE "/Shared/preprocessor.include.ab3"
00005D2A <hashmap.include.bb2@228> XINCLUDE "/Shared/preprocessor.include.ab3"
00005D30 <hashmap.include.bb2@230> XINCLUDE "/Shared/preprocessor.include.ab3"
00005D4E <hashmap.include.bb2@231> XINCLUDE "/Shared/preprocessor.include.ab3"
00005D6C <hashmap.include.bb2@232> XINCLUDE "/Shared/preprocessor.include.ab3"
00005D8A <hashmap.include.bb2@266> XINCLUDE "/Shared/preprocessor.include.ab3"
00005D90 <hashmap.include.bb2@267> XINCLUDE "/Shared/preprocessor.include.ab3"
00005DB6 <hashmap.include.bb2@268> XINCLUDE "/Shared/preprocessor.include.ab3"
00005DE4 <hashmap.include.bb2@270> XINCLUDE "/Shared/preprocessor.include.ab3"
00005E0C <hashmap.include.bb2@271> XINCLUDE "/Shared/preprocessor.include.ab3"
00005E30 <hashmap.include.bb2@272> XINCLUDE "/Shared/preprocessor.include.ab3"
00005E86 <hashmap.include.bb2@275> XINCLUDE "/Shared/preprocessor.include.ab3"
00005ED8 <hashmap.include.bb2@276> XINCLUDE "/Shared/preprocessor.include.ab3"
00005F2E <hashmap.include.bb2@277> XINCLUDE "/Shared/preprocessor.include.ab3"
00005F3E <hashmap.include.bb2@280> XINCLUDE "/Shared/preprocessor.include.ab3"
00005F90 <hashmap.include.bb2@281> XINCLUDE "/Shared/preprocessor.include.ab3"
00005FB8 <hashmap.include.bb2@282> XINCLUDE "/Shared/preprocessor.include.ab3"
00005FDE <hashmap.include.bb2@283> XINCLUDE "/Shared/preprocessor.include.ab3"
00005FF8 <hashmap.include.bb2@284> XINCLUDE "/Shared/preprocessor.include.ab3"
00006000 <hashmap.include.bb2@285> XINCLUDE "/Shared/preprocessor.include.ab3"
00006028 <hashmap.include.bb2@286> XINCLUDE "/Shared/preprocessor.include.ab3"
00006056 <hashmap.include.bb2@289> XINCLUDE "/Shared/preprocessor.include.ab3"
0000607E <hashmap.include.bb2@290> XINCLUDE "/Shared/preprocessor.include.ab3"
00006086 <hashmap.include.bb2@291> XINCLUDE "/Shared/preprocessor.include.ab3"
000060AA <hashmap.include.bb2@292> XINCLUDE "/Shared/preprocessor.include.ab3"
000060DE <hashmap.include.bb2@294> XINCLUDE "/Shared/preprocessor.include.ab3"
000060FA <hashmap.include.bb2@295> XINCLUDE "/Shared/preprocessor.include.ab3"
00006104 <hashmap.include.bb2@296> XINCLUDE "/Shared/preprocessor.include.ab3"
00006118 <hashmap.include.bb2@297> XINCLUDE "/Shared/preprocessor.include.ab3"
00006138 <hashmap.include.bb2@298> XINCLUDE "/Shared/preprocessor.include.ab3"
00006154 <hashmap.include.bb2@299> XINCLUDE "/Shared/preprocessor.include.ab3"
00006162 <hashmap.include.bb2@300> XINCLUDE "/Shared/preprocessor.include.ab3"
00006170 <hashmap.include.bb2@301> XINCLUDE "/Shared/preprocessor.include.ab3"
00006176 <hashmap.include.bb2@302> XINCLUDE "/Shared/preprocessor.include.ab3"
0000618E <hashmap.include.bb2@303> XINCLUDE "/Shared/preprocessor.include.ab3"
0000619E <hashmap.include.bb2@305> XINCLUDE "/Shared/preprocessor.include.ab3"
000061CC <hashmap.include.bb2@306> XINCLUDE "/Shared/preprocessor.include.ab3"
00006228 <hashmap.include.bb2@307> XINCLUDE "/Shared/preprocessor.include.ab3"
000062A0 <hashmap.include.bb2@308> XINCLUDE "/Shared/preprocessor.include.ab3"
000062FC <hashmap.include.bb2@309> XINCLUDE "/Shared/preprocessor.include.ab3"
00006302 <hashmap.include.bb2@310> XINCLUDE "/Shared/preprocessor.include.ab3"
0000630C <hashmap.include.bb2@312> XINCLUDE "/Shared/preprocessor.include.ab3"
00006312 <hashmap.include.bb2@313> XINCLUDE "/Shared/preprocessor.include.ab3"
00006340 <hashmap.include.bb2@316> XINCLUDE "/Shared/preprocessor.include.ab3"
00006346 <hashmap.include.bb2@317> XINCLUDE "/Shared/preprocessor.include.ab3"
00006366 <hashmap.include.bb2@318> XINCLUDE "/Shared/preprocessor.include.ab3"
00006370 <hashmap.include.bb2@319> XINCLUDE "/Shared/preprocessor.include.ab3"
00006382 <hashmap.include.bb2@320> XINCLUDE "/Shared/preprocessor.include.ab3"
00006392 <hashmap.include.bb2@321> XINCLUDE "/Shared/preprocessor.include.ab3"
0000639C <hashmap.include.bb2@323> XINCLUDE "/Shared/preprocessor.include.ab3"
000063B6 <hashmap.include.bb2@324> XINCLUDE "/Shared/preprocessor.include.ab3"
000063D0 <hashmap.include.bb2@327> XINCLUDE "/Shared/preprocessor.include.ab3"
000063D8 <hashmap.include.bb2@328> XINCLUDE "/Shared/preprocessor.include.ab3"
000063DE <hashmap.include.bb2@329> XINCLUDE "/Shared/preprocessor.include.ab3"
000063E8 <hashmap.include.bb2@330> XINCLUDE "/Shared/preprocessor.include.ab3"
000063F0 <hashmap.include.bb2@331> XINCLUDE "/Shared/preprocessor.include.ab3"
00006418 <hashmap.include.bb2@332> XINCLUDE "/Shared/preprocessor.include.ab3"
0000641E <hashmap.include.bb2@333> XINCLUDE "/Shared/preprocessor.include.ab3"
00006432 <hashmap.include.bb2@334> XINCLUDE "/Shared/preprocessor.include.ab3"
0000646E <hashmap.include.bb2@336> XINCLUDE "/Shared/preprocessor.include.ab3"
00006494 <hashmap.include.bb2@337> XINCLUDE "/Shared/preprocessor.include.ab3"
000064A2 <hashmap.include.bb2@338> XINCLUDE "/Shared/preprocessor.include.ab3"
000064DE <hashmap.include.bb2@340> XINCLUDE "/Shared/preprocessor.include.ab3"
000064F2 <hashmap.include.bb2@341> XINCLUDE "/Shared/preprocessor.include.ab3"
0000652E <hashmap.include.bb2@343> XINCLUDE "/Shared/preprocessor.include.ab3"
00006544 <hashmap.include.bb2@344> XINCLUDE "/Shared/preprocessor.include.ab3"
00006558 <hashmap.include.bb2@346> XINCLUDE "/Shared/preprocessor.include.ab3"
00006562 <hashmap.include.bb2@347> XINCLUDE "/Shared/preprocessor.include.ab3"
00006586 <hashmap.include.bb2@348> XINCLUDE "/Shared/preprocessor.include.ab3"
000065BE <hashmap.include.bb2@349> XINCLUDE "/Shared/preprocessor.include.ab3"
000065C4 <hashmap.include.bb2@350> XINCLUDE "/Shared/preprocessor.include.ab3"
000065D0 <hashmap.include.bb2@351> XINCLUDE "/Shared/preprocessor.include.ab3"
000065E4 <hashmap.include.bb2@354> XINCLUDE "/Shared/preprocessor.include.ab3"
000065EE <hashmap.include.bb2@355> XINCLUDE "/Shared/preprocessor.include.ab3"
00006616 <hashmap.include.bb2@356> XINCLUDE "/Shared/preprocessor.include.ab3"
0000663E <hashmap.include.bb2@357> XINCLUDE "/Shared/preprocessor.include.ab3"
00006650 <hashmap.include.bb2@358> XINCLUDE "/Shared/preprocessor.include.ab3"
0000667C <hashmap.include.bb2@359> XINCLUDE "/Shared/preprocessor.include.ab3"
000066B0 <hashmap.include.bb2@360> XINCLUDE "/Shared/preprocessor.include.ab3"
000066DC <hashmap.include.bb2@361> XINCLUDE "/Shared/preprocessor.include.ab3"
00006728 <hashmap.include.bb2@362> XINCLUDE "/Shared/preprocessor.include.ab3"
00006738 <hashmap.include.bb2@364> XINCLUDE "/Shared/preprocessor.include.ab3"
0000673E <hashmap.include.bb2@366> XINCLUDE "/Shared/preprocessor.include.ab3"
0000674A <hashmap.include.bb2@367> XINCLUDE "/Shared/preprocessor.include.ab3"
00006778 <hashmap.include.bb2@370> XINCLUDE "/Shared/preprocessor.include.ab3"
0000677A <hashmap.include.bb2@372> XINCLUDE "/Shared/preprocessor.include.ab3"
00006780 <hashmap.include.bb2@373> XINCLUDE "/Shared/preprocessor.include.ab3"
0000678A <hashmap.include.bb2@374> XINCLUDE "/Shared/preprocessor.include.ab3"
000067B4 <hashmap.include.bb2@375> XINCLUDE "/Shared/preprocessor.include.ab3"
000067BE <hashmap.include.bb2@377> XINCLUDE "/Shared/preprocessor.include.ab3"
000067C4 <hashmap.include.bb2@378> XINCLUDE "/Shared/preprocessor.include.ab3"
000067EE <hashmap.include.bb2@381> XINCLUDE "/Shared/preprocessor.include.ab3"
000067F6 <hashmap.include.bb2@382> XINCLUDE "/Shared/preprocessor.include.ab3"
00006816 <hashmap.include.bb2@383> XINCLUDE "/Shared/preprocessor.include.ab3"
00006820 <hashmap.include.bb2@384> XINCLUDE "/Shared/preprocessor.include.ab3"
0000682E <hashmap.include.bb2@385> XINCLUDE "/Shared/preprocessor.include.ab3"
0000683E <hashmap.include.bb2@386> XINCLUDE "/Shared/preprocessor.include.ab3"
00006848 <hashmap.include.bb2@388> XINCLUDE "/Shared/preprocessor.include.ab3"
00006862 <hashmap.include.bb2@389> XINCLUDE "/Shared/preprocessor.include.ab3"
00006862 <preprocessor.include.ab3@11> XINCLUDE "/Shared/preprocessor.include.ab3"
0000687C <preprocessor.include.ab3@29> XINCLUDE "/Shared/preprocessor.include.ab3"
00006896 <preprocessor.include.ab3@30> XINCLUDE "/Shared/preprocessor.include.ab3"
000068B8 <preprocessor.include.ab3@31> XINCLUDE "/Shared/preprocessor.include.ab3"
000068EA <preprocessor.include.ab3@32> XINCLUDE "/Shared/preprocessor.include.ab3"
000068EE <preprocessor.include.ab3@33> XINCLUDE "/Shared/preprocessor.include.ab3"
00006908 <preprocessor.include.ab3@36> XINCLUDE "/Shared/preprocessor.include.ab3"
00006922 <preprocessor.include.ab3@37> XINCLUDE "/Shared/preprocessor.include.ab3"
0000692C <preprocessor.include.ab3@38> XINCLUDE "/Shared/preprocessor.include.ab3"
00006942 <preprocessor.include.ab3@39> XINCLUDE "/Shared/preprocessor.include.ab3"
00006946 <preprocessor.include.ab3@40> XINCLUDE "/Shared/preprocessor.include.ab3"
00006960 <preprocessor.include.ab3@43> XINCLUDE "/Shared/preprocessor.include.ab3"
0000697A <preprocessor.include.ab3@44> XINCLUDE "/Shared/preprocessor.include.ab3"
00006994 <preprocessor.include.ab3@45> XINCLUDE "/Shared/preprocessor.include.ab3"
000069B8 <preprocessor.include.ab3@46> XINCLUDE "/Shared/preprocessor.include.ab3"
000069BE <preprocessor.include.ab3@47> XINCLUDE "/Shared/preprocessor.include.ab3"
000069E8 <preprocessor.include.ab3@48> XINCLUDE "/Shared/preprocessor.include.ab3"
00006A02 <preprocessor.include.ab3@49> XINCLUDE "/Shared/preprocessor.include.ab3"
00006A12 <preprocessor.include.ab3@50> XINCLUDE "/Shared/preprocessor.include.ab3"
00006A1C <preprocessor.include.ab3@53> XINCLUDE "/Shared/preprocessor.include.ab3"
00006A2A <preprocessor.include.ab3@54> XINCLUDE "/Shared/preprocessor.include.ab3"
00006A4C <preprocessor.include.ab3@55> XINCLUDE "/Shared/preprocessor.include.ab3"
00006A80 <preprocessor.include.ab3@56> XINCLUDE "/Shared/preprocessor.include.ab3"
00006A9C <preprocessor.include.ab3@57> XINCLUDE "/Shared/preprocessor.include.ab3"
00006AA6 <preprocessor.include.ab3@58> XINCLUDE "/Shared/preprocessor.include.ab3"
00006AC2 <preprocessor.include.ab3@59> XINCLUDE "/Shared/preprocessor.include.ab3"
00006AD0 <preprocessor.include.ab3@60> XINCLUDE "/Shared/preprocessor.include.ab3"
00006AE4 <preprocessor.include.ab3@61> XINCLUDE "/Shared/preprocessor.include.ab3"
00006B06 <preprocessor.include.ab3@62> XINCLUDE "/Shared/preprocessor.include.ab3"
00006B28 <preprocessor.include.ab3@63> XINCLUDE "/Shared/preprocessor.include.ab3"
00006B46 <preprocessor.include.ab3@64> XINCLUDE "/Shared/preprocessor.include.ab3"
00006B74 <preprocessor.include.ab3@65> XINCLUDE "/Shared/preprocessor.include.ab3"
00006B7A <preprocessor.include.ab3@66> XINCLUDE "/Shared/preprocessor.include.ab3"
00006B8A <preprocessor.include.ab3@68> XINCLUDE "/Shared/preprocessor.include.ab3"
00006B8E <preprocessor.include.ab3@70> XINCLUDE "/Shared/preprocessor.include.ab3"
00006BA4 <preprocessor.include.ab3@73> XINCLUDE "/Shared/preprocessor.include.ab3"
00006BC4 <preprocessor.include.ab3@74> XINCLUDE "/Shared/preprocessor.include.ab3"
00006BCE <preprocessor.include.ab3@75> XINCLUDE "/Shared/preprocessor.include.ab3"
00006BF8 <preprocessor.include.ab3@76> XINCLUDE "/Shared/preprocessor.include.ab3"
00006C0E <preprocessor.include.ab3@77> XINCLUDE "/Shared/preprocessor.include.ab3"
00006C1E <preprocessor.include.ab3@78> XINCLUDE "/Shared/preprocessor.include.ab3"
00006C3A <preprocessor.include.ab3@80> XINCLUDE "/Shared/preprocessor.include.ab3"
00006C56 <preprocessor.include.ab3@81> XINCLUDE "/Shared/preprocessor.include.ab3"
00006C72 <preprocessor.include.ab3@82> XINCLUDE "/Shared/preprocessor.include.ab3"
00006C8E <preprocessor.include.ab3@83> XINCLUDE "/Shared/preprocessor.include.ab3"
00006CAA <preprocessor.include.ab3@84> XINCLUDE "/Shared/preprocessor.include.ab3"
00006CC6 <preprocessor.include.ab3@85> XINCLUDE "/Shared/preprocessor.include.ab3"
00006CE2 <preprocessor.include.ab3@86> XINCLUDE "/Shared/preprocessor.include.ab3"
00006CFE <preprocessor.include.ab3@87> XINCLUDE "/Shared/preprocessor.include.ab3"
00006D1A <preprocessor.include.ab3@88> XINCLUDE "/Shared/preprocessor.include.ab3"
00006D36 <preprocessor.include.ab3@89> XINCLUDE "/Shared/preprocessor.include.ab3"
00006D52 <preprocessor.include.ab3@90> XINCLUDE "/Shared/preprocessor.include.ab3"
00006D6E <preprocessor.include.ab3@91> XINCLUDE "/Shared/preprocessor.include.ab3"
00006D8A <preprocessor.include.ab3@92> XINCLUDE "/Shared/preprocessor.include.ab3"
00006DA6 <preprocessor.include.ab3@93> XINCLUDE "/Shared/preprocessor.include.ab3"
00006DC2 <preprocessor.include.ab3@94> XINCLUDE "/Shared/preprocessor.include.ab3"
00006DDE <preprocessor.include.ab3@95> XINCLUDE "/Shared/preprocessor.include.ab3"
00006DFA <preprocessor.include.ab3@96> XINCLUDE "/Shared/preprocessor.include.ab3"
00006E16 <preprocessor.include.ab3@97> XINCLUDE "/Shared/preprocessor.include.ab3"
00006E32 <preprocessor.include.ab3@98> XINCLUDE "/Shared/preprocessor.include.ab3"
00006E4E <preprocessor.include.ab3@99> XINCLUDE "/Shared/preprocessor.include.ab3"
00006E6A <preprocessor.include.ab3@100> XINCLUDE "/Shared/preprocessor.include.ab3"
00006E86 <preprocessor.include.ab3@101> XINCLUDE "/Shared/preprocessor.include.ab3"
00006EA2 <preprocessor.include.ab3@102> XINCLUDE "/Shared/preprocessor.include.ab3"
00006EBE <preprocessor.include.ab3@103> XINCLUDE "/Shared/preprocessor.include.ab3"
00006EDA <preprocessor.include.ab3@104> XINCLUDE "/Shared/preprocessor.include.ab3"
00006EF6 <preprocessor.include.ab3@105> XINCLUDE "/Shared/preprocessor.include.ab3"
00006F12 <preprocessor.include.ab3@106> XINCLUDE "/Shared/preprocessor.include.ab3"
00006F2E <preprocessor.include.ab3@107> XINCLUDE "/Shared/preprocessor.include.ab3"
00006F4A <preprocessor.include.ab3@108> XINCLUDE "/Shared/preprocessor.include.ab3"
00006F66 <preprocessor.include.ab3@109> XINCLUDE "/Shared/preprocessor.include.ab3"
00006F82 <preprocessor.include.ab3@110> XINCLUDE "/Shared/preprocessor.include.ab3"
00006F9E <preprocessor.include.ab3@111> XINCLUDE "/Shared/preprocessor.include.ab3"
00006FBA <preprocessor.include.ab3@112> XINCLUDE "/Shared/preprocessor.include.ab3"
00006FD6 <preprocessor.include.ab3@113> XINCLUDE "/Shared/preprocessor.include.ab3"
00006FF2 <preprocessor.include.ab3@114> XINCLUDE "/Shared/preprocessor.include.ab3"
0000700E <preprocessor.include.ab3@115> XINCLUDE "/Shared/preprocessor.include.ab3"
0000702A <preprocessor.include.ab3@116> XINCLUDE "/Shared/preprocessor.include.ab3"
00007046 <preprocessor.include.ab3@117> XINCLUDE "/Shared/preprocessor.include.ab3"
00007062 <preprocessor.include.ab3@118> XINCLUDE "/Shared/preprocessor.include.ab3"
0000707E <preprocessor.include.ab3@119> XINCLUDE "/Shared/preprocessor.include.ab3"
0000709A <preprocessor.include.ab3@120> XINCLUDE "/Shared/preprocessor.include.ab3"
000070B6 <preprocessor.include.ab3@121> XINCLUDE "/Shared/preprocessor.include.ab3"
000070D2 <preprocessor.include.ab3@122> XINCLUDE "/Shared/preprocessor.include.ab3"
000070EE <preprocessor.include.ab3@123> XINCLUDE "/Shared/preprocessor.include.ab3"
0000710A <preprocessor.include.ab3@124> XINCLUDE "/Shared/preprocessor.include.ab3"
00007126 <preprocessor.include.ab3@125> XINCLUDE "/Shared/preprocessor.include.ab3"
00007142 <preprocessor.include.ab3@126> XINCLUDE "/Shared/preprocessor.include.ab3"
0000715E <preprocessor.include.ab3@127> XINCLUDE "/Shared/preprocessor.include.ab3"
0000717A <preprocessor.include.ab3@128> XINCLUDE "/Shared/preprocessor.include.ab3"
00007196 <preprocessor.include.ab3@129> XINCLUDE "/Shared/preprocessor.include.ab3"
000071B2 <preprocessor.include.ab3@130> XINCLUDE "/Shared/preprocessor.include.ab3"
000071CE <preprocessor.include.ab3@131> XINCLUDE "/Shared/preprocessor.include.ab3"
000071EA <preprocessor.include.ab3@132> XINCLUDE "/Shared/preprocessor.include.ab3"
00007206 <preprocessor.include.ab3@133> XINCLUDE "/Shared/preprocessor.include.ab3"
00007222 <preprocessor.include.ab3@134> XINCLUDE "/Shared/preprocessor.include.ab3"
0000723E <preprocessor.include.ab3@135> XINCLUDE "/Shared/preprocessor.include.ab3"
0000725A <preprocessor.include.ab3@136> XINCLUDE "/Shared/preprocessor.include.ab3"
00007276 <preprocessor.include.ab3@137> XINCLUDE "/Shared/preprocessor.include.ab3"
00007292 <preprocessor.include.ab3@138> XINCLUDE "/Shared/preprocessor.include.ab3"
000072AE <preprocessor.include.ab3@139> XINCLUDE "/Shared/preprocessor.include.ab3"
000072CA <preprocessor.include.ab3@140> XINCLUDE "/Shared/preprocessor.include.ab3"
000072E6 <preprocessor.include.ab3@141> XINCLUDE "/Shared/preprocessor.include.ab3"
00007302 <preprocessor.include.ab3@142> XINCLUDE "/Shared/preprocessor.include.ab3"
0000731E <preprocessor.include.ab3@143> XINCLUDE "/Shared/preprocessor.include.ab3"
0000733A <preprocessor.include.ab3@144> XINCLUDE "/Shared/preprocessor.include.ab3"
00007356 <preprocessor.include.ab3@145> XINCLUDE "/Shared/preprocessor.include.ab3"
00007372 <preprocessor.include.ab3@146> XINCLUDE "/Shared/preprocessor.include.ab3"
0000738E <preprocessor.include.ab3@147> XINCLUDE "/Shared/preprocessor.include.ab3"
000073AA <preprocessor.include.ab3@148> XINCLUDE "/Shared/preprocessor.include.ab3"
000073C6 <preprocessor.include.ab3@149> XINCLUDE "/Shared/preprocessor.include.ab3"
000073E2 <preprocessor.include.ab3@150> XINCLUDE "/Shared/preprocessor.include.ab3"
000073FE <preprocessor.include.ab3@151> XINCLUDE "/Shared/preprocessor.include.ab3"
0000741A <preprocessor.include.ab3@152> XINCLUDE "/Shared/preprocessor.include.ab3"
00007436 <preprocessor.include.ab3@153> XINCLUDE "/Shared/preprocessor.include.ab3"
00007452 <preprocessor.include.ab3@154> XINCLUDE "/Shared/preprocessor.include.ab3"
0000746E <preprocessor.include.ab3@155> XINCLUDE "/Shared/preprocessor.include.ab3"
0000748A <preprocessor.include.ab3@156> XINCLUDE "/Shared/preprocessor.include.ab3"
000074A6 <preprocessor.include.ab3@157> XINCLUDE "/Shared/preprocessor.include.ab3"
000074C2 <preprocessor.include.ab3@158> XINCLUDE "/Shared/preprocessor.include.ab3"
000074DE <preprocessor.include.ab3@159> XINCLUDE "/Shared/preprocessor.include.ab3"
000074FA <preprocessor.include.ab3@160> XINCLUDE "/Shared/preprocessor.include.ab3"
00007516 <preprocessor.include.ab3@161> XINCLUDE "/Shared/preprocessor.include.ab3"
00007532 <preprocessor.include.ab3@162> XINCLUDE "/Shared/preprocessor.include.ab3"
0000754E <preprocessor.include.ab3@163> XINCLUDE "/Shared/preprocessor.include.ab3"
0000756A <preprocessor.include.ab3@164> XINCLUDE "/Shared/preprocessor.include.ab3"
00007586 <preprocessor.include.ab3@165> XINCLUDE "/Shared/preprocessor.include.ab3"
000075A2 <preprocessor.include.ab3@166> XINCLUDE "/Shared/preprocessor.include.ab3"
000075BE <preprocessor.include.ab3@167> XINCLUDE "/Shared/preprocessor.include.ab3"
000075DA <preprocessor.include.ab3@168> XINCLUDE "/Shared/preprocessor.include.ab3"
000075F6 <preprocessor.include.ab3@169> XINCLUDE "/Shared/preprocessor.include.ab3"
00007612 <preprocessor.include.ab3@170> XINCLUDE "/Shared/preprocessor.include.ab3"
0000762E <preprocessor.include.ab3@171> XINCLUDE "/Shared/preprocessor.include.ab3"
0000764A <preprocessor.include.ab3@172> XINCLUDE "/Shared/preprocessor.include.ab3"
00007666 <preprocessor.include.ab3@173> XINCLUDE "/Shared/preprocessor.include.ab3"
00007682 <preprocessor.include.ab3@174> XINCLUDE "/Shared/preprocessor.include.ab3"
0000769E <preprocessor.include.ab3@175> XINCLUDE "/Shared/preprocessor.include.ab3"
000076BA <preprocessor.include.ab3@176> XINCLUDE "/Shared/preprocessor.include.ab3"
000076D6 <preprocessor.include.ab3@177> XINCLUDE "/Shared/preprocessor.include.ab3"
000076F2 <preprocessor.include.ab3@178> XINCLUDE "/Shared/preprocessor.include.ab3"
0000770E <preprocessor.include.ab3@179> XINCLUDE "/Shared/preprocessor.include.ab3"
0000772A <preprocessor.include.ab3@180> XINCLUDE "/Shared/preprocessor.include.ab3"
00007746 <preprocessor.include.ab3@181> XINCLUDE "/Shared/preprocessor.include.ab3"
00007762 <preprocessor.include.ab3@182> XINCLUDE "/Shared/preprocessor.include.ab3"
0000777E <preprocessor.include.ab3@183> XINCLUDE "/Shared/preprocessor.include.ab3"
0000779A <preprocessor.include.ab3@184> XINCLUDE "/Shared/preprocessor.include.ab3"
000077B6 <preprocessor.include.ab3@185> XINCLUDE "/Shared/preprocessor.include.ab3"
000077D2 <preprocessor.include.ab3@186> XINCLUDE "/Shared/preprocessor.include.ab3"
000077EE <preprocessor.include.ab3@187> XINCLUDE "/Shared/preprocessor.include.ab3"
0000780A <preprocessor.include.ab3@188> XINCLUDE "/Shared/preprocessor.include.ab3"
00007826 <preprocessor.include.ab3@189> XINCLUDE "/Shared/preprocessor.include.ab3"
00007842 <preprocessor.include.ab3@190> XINCLUDE "/Shared/preprocessor.include.ab3"
0000785E <preprocessor.include.ab3@191> XINCLUDE "/Shared/preprocessor.include.ab3"
0000787A <preprocessor.include.ab3@192> XINCLUDE "/Shared/preprocessor.include.ab3"
00007896 <preprocessor.include.ab3@193> XINCLUDE "/Shared/preprocessor.include.ab3"
000078B2 <preprocessor.include.ab3@194> XINCLUDE "/Shared/preprocessor.include.ab3"
000078CE <preprocessor.include.ab3@195> XINCLUDE "/Shared/preprocessor.include.ab3"
000078EA <preprocessor.include.ab3@196> XINCLUDE "/Shared/preprocessor.include.ab3"
00007906 <preprocessor.include.ab3@197> XINCLUDE "/Shared/preprocessor.include.ab3"
00007922 <preprocessor.include.ab3@198> XINCLUDE "/Shared/preprocessor.include.ab3"
0000793E <preprocessor.include.ab3@199> XINCLUDE "/Shared/preprocessor.include.ab3"
0000795A <preprocessor.include.ab3@200> XINCLUDE "/Shared/preprocessor.include.ab3"
00007976 <preprocessor.include.ab3@201> XINCLUDE "/Shared/preprocessor.include.ab3"
00007992 <preprocessor.include.ab3@202> XINCLUDE "/Shared/preprocessor.include.ab3"
000079AE <preprocessor.include.ab3@203> XINCLUDE "/Shared/preprocessor.include.ab3"
000079CA <preprocessor.include.ab3@204> XINCLUDE "/Shared/preprocessor.include.ab3"
000079E6 <preprocessor.include.ab3@205> XINCLUDE "/Shared/preprocessor.include.ab3"
00007A02 <preprocessor.include.ab3@206> XINCLUDE "/Shared/preprocessor.include.ab3"
00007A1E <preprocessor.include.ab3@207> XINCLUDE "/Shared/preprocessor.include.ab3"
00007A26 <preprocessor.include.ab3@208> XINCLUDE "/Shared/preprocessor.include.ab3"
00007A30 <preprocessor.include.ab3@209> XINCLUDE "/Shared/preprocessor.include.ab3"
00007A3A <preprocessor.include.ab3@211> XINCLUDE "/Shared/preprocessor.include.ab3"
00007A40 <preprocessor.include.ab3@212> XINCLUDE "/Shared/preprocessor.include.ab3"
00007A6E <preprocessor.include.ab3@247> XINCLUDE "/Shared/preprocessor.include.ab3"
00007A8A <preprocessor.include.ab3@248> XINCLUDE "/Shared/preprocessor.include.ab3"
00007ABC <preprocessor.include.ab3@249> XINCLUDE "/Shared/preprocessor.include.ab3"
00007AC6 <preprocessor.include.ab3@250> XINCLUDE "/Shared/preprocessor.include.ab3"
00007AE8 <preprocessor.include.ab3@251> XINCLUDE "/Shared/preprocessor.include.ab3"
00007AF2 <preprocessor.include.ab3@252> XINCLUDE "/Shared/preprocessor.include.ab3"
00007AFC <preprocessor.include.ab3@253> XINCLUDE "/Shared/preprocessor.include.ab3"
00007B06 <preprocessor.include.ab3@255> XINCLUDE "/Shared/preprocessor.include.ab3"
00007B20 <preprocessor.include.ab3@256> XINCLUDE "/Shared/preprocessor.include.ab3"
00007B4E <preprocessor.include.ab3@259> XINCLUDE "/Shared/preprocessor.include.ab3"
00007B6A <preprocessor.include.ab3@260> XINCLUDE "/Shared/preprocessor.include.ab3"
00007B78 <preprocessor.include.ab3@261> XINCLUDE "/Shared/preprocessor.include.ab3"
00007BB2 <preprocessor.include.ab3@262> XINCLUDE "/Shared/preprocessor.include.ab3"
00007BBA <preprocessor.include.ab3@264> XINCLUDE "/Shared/preprocessor.include.ab3"
00007BD4 <preprocessor.include.ab3@265> XINCLUDE "/Shared/preprocessor.include.ab3"
00007BFA <preprocessor.include.ab3@272> XINCLUDE "/Shared/preprocessor.include.ab3"
00007C1C <preprocessor.include.ab3@273> XINCLUDE "/Shared/preprocessor.include.ab3"
00007C40 <preprocessor.include.ab3@274> XINCLUDE "/Shared/preprocessor.include.ab3"
00007C46 <preprocessor.include.ab3@275> XINCLUDE "/Shared/preprocessor.include.ab3"
00007C54 <preprocessor.include.ab3@276> XINCLUDE "/Shared/preprocessor.include.ab3"
00007C5A <preprocessor.include.ab3@277> XINCLUDE "/Shared/preprocessor.include.ab3"
00007C62 <preprocessor.include.ab3@278> XINCLUDE "/Shared/preprocessor.include.ab3"
00007C68 <preprocessor.include.ab3@279> XINCLUDE "/Shared/preprocessor.include.ab3"
00007C70 <preprocessor.include.ab3@280> XINCLUDE "/Shared/preprocessor.include.ab3"
00007C84 <preprocessor.include.ab3@282> XINCLUDE "/Shared/preprocessor.include.ab3"
00007CAA <preprocessor.include.ab3@283> XINCLUDE "/Shared/preprocessor.include.ab3"
00007CD2 <preprocessor.include.ab3@284> XINCLUDE "/Shared/preprocessor.include.ab3"
00007CDC <preprocessor.include.ab3@286> XINCLUDE "/Shared/preprocessor.include.ab3"
00007CF0 <preprocessor.include.ab3@287> XINCLUDE "/Shared/preprocessor.include.ab3"
00007D04 <preprocessor.include.ab3@288> XINCLUDE "/Shared/preprocessor.include.ab3"
00007D14 <preprocessor.include.ab3@289> XINCLUDE "/Shared/preprocessor.include.ab3"
00007D2E <preprocessor.include.ab3@290> XINCLUDE "/Shared/preprocessor.include.ab3"
00007D56 <preprocessor.include.ab3@291> XINCLUDE "/Shared/preprocessor.include.ab3"
00007D6A <preprocessor.include.ab3@292> XINCLUDE "/Shared/preprocessor.include.ab3"
00007D8C <preprocessor.include.ab3@293> XINCLUDE "/Shared/preprocessor.include.ab3"
00007D92 <preprocessor.include.ab3@294> XINCLUDE "/Shared/preprocessor.include.ab3"
00007D9A <preprocessor.include.ab3@295> XINCLUDE "/Shared/preprocessor.include.ab3"
00007DA0 <preprocessor.include.ab3@297> XINCLUDE "/Shared/preprocessor.include.ab3"
00007DC2 <preprocessor.include.ab3@298> XINCLUDE "/Shared/preprocessor.include.ab3"
00007DCC <preprocessor.include.ab3@300> XINCLUDE "/Shared/preprocessor.include.ab3"
00007DDA <preprocessor.include.ab3@301> XINCLUDE "/Shared/preprocessor.include.ab3"
00007DF8 <preprocessor.include.ab3@302> XINCLUDE "/Shared/preprocessor.include.ab3"
00007E06 <preprocessor.include.ab3@303> XINCLUDE "/Shared/preprocessor.include.ab3"
00007E0E <preprocessor.include.ab3@304> XINCLUDE "/Shared/preprocessor.include.ab3"
00007E14 <preprocessor.include.ab3@305> XINCLUDE "/Shared/preprocessor.include.ab3"
00007E28 <preprocessor.include.ab3@309> XINCLUDE "/Shared/preprocessor.include.ab3"
00007E32 <preprocessor.include.ab3@310> XINCLUDE "/Shared/preprocessor.include.ab3"
00007E40 <preprocessor.include.ab3@311> XINCLUDE "/Shared/preprocessor.include.ab3"
00007E5A <preprocessor.include.ab3@312> XINCLUDE "/Shared/preprocessor.include.ab3"
00007E60 <preprocessor.include.ab3@314> XINCLUDE "/Shared/preprocessor.include.ab3"
00007E68 <preprocessor.include.ab3@315> XINCLUDE "/Shared/preprocessor.include.ab3"
00007E6E <preprocessor.include.ab3@317> XINCLUDE "/Shared/preprocessor.include.ab3"
00007E82 <preprocessor.include.ab3@318> XINCLUDE "/Shared/preprocessor.include.ab3"
00007E8C <preprocessor.include.ab3@319> XINCLUDE "/Shared/preprocessor.include.ab3"
00007E94 <preprocessor.include.ab3@320> XINCLUDE "/Shared/preprocessor.include.ab3"
00007EA8 <preprocessor.include.ab3@321> XINCLUDE "/Shared/preprocessor.include.ab3"
00007EBC <preprocessor.include.ab3@326> XINCLUDE "/Shared/preprocessor.include.ab3"
00007ED0 <preprocessor.include.ab3@327> XINCLUDE "/Shared/preprocessor.include.ab3"
00007EEE <preprocessor.include.ab3@329> XINCLUDE "/Shared/preprocessor.include.ab3"
00007EFC <preprocessor.include.ab3@330> XINCLUDE "/Shared/preprocessor.include.ab3"
00007F0C <preprocessor.include.ab3@331> XINCLUDE "/Shared/preprocessor.include.ab3"
00007F34 <preprocessor.include.ab3@332> XINCLUDE "/Shared/preprocessor.include.ab3"
00007F56 <preprocessor.include.ab3@333> XINCLUDE "/Shared/preprocessor.include.ab3"
00007F6A <preprocessor.include.ab3@336> XINCLUDE "/Shared/preprocessor.include.ab3"
00007F88 <preprocessor.include.ab3@338> XINCLUDE "/Shared/preprocessor.include.ab3"
00007F96 <preprocessor.include.ab3@339> XINCLUDE "/Shared/preprocessor.include.ab3"
00007FBC <preprocessor.include.ab3@340> XINCLUDE "/Shared/preprocessor.include.ab3"
00007FE4 <preprocessor.include.ab3@341> XINCLUDE "/Shared/preprocessor.include.ab3"
00008006 <preprocessor.include.ab3@342> XINCLUDE "/Shared/preprocessor.include.ab3"
00008036 <preprocessor.include.ab3@345> XINCLUDE "/Shared/preprocessor.include.ab3"
00008064 <preprocessor.include.ab3@349> XINCLUDE "/Shared/preprocessor.include.ab3"
00008096 <preprocessor.include.ab3@350> XINCLUDE "/Shared/preprocessor.include.ab3"
000080A4 <preprocessor.include.ab3@352> XINCLUDE "/Shared/preprocessor.include.ab3"
000080AA <preprocessor.include.ab3@353> XINCLUDE "/Shared/preprocessor.include.ab3"
000080BA <preprocessor.include.ab3@356> XINCLUDE "/Shared/preprocessor.include.ab3"
000080C0 <preprocessor.include.ab3@357> XINCLUDE "/Shared/preprocessor.include.ab3"
000080E6 <preprocessor.include.ab3@360> XINCLUDE "/Shared/preprocessor.include.ab3"
00008108 <preprocessor.include.ab3@361> XINCLUDE "/Shared/preprocessor.include.ab3"
00008130 <preprocessor.include.ab3@362> XINCLUDE "/Shared/preprocessor.include.ab3"
00008150 <preprocessor.include.ab3@363> XINCLUDE "/Shared/preprocessor.include.ab3"
00008172 <preprocessor.include.ab3@364> XINCLUDE "/Shared/preprocessor.include.ab3"
00008178 <preprocessor.include.ab3@365> XINCLUDE "/Shared/preprocessor.include.ab3"
00008186 <preprocessor.include.ab3@366> XINCLUDE "/Shared/preprocessor.include.ab3"
00008194 <preprocessor.include.ab3@367> XINCLUDE "/Shared/preprocessor.include.ab3"
0000819A <preprocessor.include.ab3@368> XINCLUDE "/Shared/preprocessor.include.ab3"
000081A2 <preprocessor.include.ab3@369> XINCLUDE "/Shared/preprocessor.include.ab3"
000081C0 <preprocessor.include.ab3@370> XINCLUDE "/Shared/preprocessor.include.ab3"
000081D4 <preprocessor.include.ab3@371> XINCLUDE "/Shared/preprocessor.include.ab3"
000081E4 <preprocessor.include.ab3@372> XINCLUDE "/Shared/preprocessor.include.ab3"
000081FA <preprocessor.include.ab3@374> XINCLUDE "/Shared/preprocessor.include.ab3"
00008212 <preprocessor.include.ab3@376> XINCLUDE "/Shared/preprocessor.include.ab3"
0000822E <preprocessor.include.ab3@377> XINCLUDE "/Shared/preprocessor.include.ab3"
00008238 <preprocessor.include.ab3@378> XINCLUDE "/Shared/preprocessor.include.ab3"
00008254 <preprocessor.include.ab3@379> XINCLUDE "/Shared/preprocessor.include.ab3"
00008266 <preprocessor.include.ab3@380> XINCLUDE "/Shared/preprocessor.include.ab3"
00008294 <preprocessor.include.ab3@381> XINCLUDE "/Shared/preprocessor.include.ab3"
000082D0 <preprocessor.include.ab3@382> XINCLUDE "/Shared/preprocessor.include.ab3"
000082E0 <preprocessor.include.ab3@383> XINCLUDE "/Shared/preprocessor.include.ab3"
000082E6 <preprocessor.include.ab3@384> XINCLUDE "/Shared/preprocessor.include.ab3"
000082EC <preprocessor.include.ab3@387> XINCLUDE "/Shared/preprocessor.include.ab3"
00008304 <preprocessor.include.ab3@388> XINCLUDE "/Shared/preprocessor.include.ab3"
00008314 <preprocessor.include.ab3@389> XINCLUDE "/Shared/preprocessor.include.ab3"
0000839A <preprocessor.include.ab3@390> XINCLUDE "/Shared/preprocessor.include.ab3"
000083D4 <preprocessor.include.ab3@391> XINCLUDE "/Shared/preprocessor.include.ab3"
0000840A <preprocessor.include.ab3@392> XINCLUDE "/Shared/preprocessor.include.ab3"
0000841A <preprocessor.include.ab3@393> XINCLUDE "/Shared/preprocessor.include.ab3"
00008428 <preprocessor.include.ab3@395> XINCLUDE "/Shared/preprocessor.include.ab3"
0000842E <preprocessor.include.ab3@396> XINCLUDE "/Shared/preprocessor.include.ab3"
0000843E <preprocessor.include.ab3@397> XINCLUDE "/Shared/preprocessor.include.ab3"
00008468 <preprocessor.include.ab3@398> XINCLUDE "/Shared/preprocessor.include.ab3"
0000846E <preprocessor.include.ab3@399> XINCLUDE "/Shared/preprocessor.include.ab3"
0000849A <preprocessor.include.ab3@400> XINCLUDE "/Shared/preprocessor.include.ab3"
000084AA <preprocessor.include.ab3@403> XINCLUDE "/Shared/preprocessor.include.ab3"
000084BA <preprocessor.include.ab3@405> XINCLUDE "/Shared/preprocessor.include.ab3"
000084D8 <preprocessor.include.ab3@406> XINCLUDE "/Shared/preprocessor.include.ab3"
000084E6 <preprocessor.include.ab3@407> XINCLUDE "/Shared/preprocessor.include.ab3"
0000851C <preprocessor.include.ab3@408> XINCLUDE "/Shared/preprocessor.include.ab3"
00008540 <preprocessor.include.ab3@409> XINCLUDE "/Shared/preprocessor.include.ab3"
00008554 <preprocessor.include.ab3@412> XINCLUDE "/Shared/preprocessor.include.ab3"
00008564 <preprocessor.include.ab3@414> XINCLUDE "/Shared/preprocessor.include.ab3"
00008582 <preprocessor.include.ab3@415> XINCLUDE "/Shared/preprocessor.include.ab3"
00008590 <preprocessor.include.ab3@416> XINCLUDE "/Shared/preprocessor.include.ab3"
000085B4 <preprocessor.include.ab3@417> XINCLUDE "/Shared/preprocessor.include.ab3"
000085D8 <preprocessor.include.ab3@418> XINCLUDE "/Shared/preprocessor.include.ab3"
000085E6 <preprocessor.include.ab3@422> XINCLUDE "/Shared/preprocessor.include.ab3"
000085F4 <preprocessor.include.ab3@423> XINCLUDE "/Shared/preprocessor.include.ab3"
00008614 <preprocessor.include.ab3@424> XINCLUDE "/Shared/preprocessor.include.ab3"
00008622 <preprocessor.include.ab3@425> XINCLUDE "/Shared/preprocessor.include.ab3"
00008628 <preprocessor.include.ab3@426> XINCLUDE "/Shared/preprocessor.include.ab3"
0000862E <preprocessor.include.ab3@429> XINCLUDE "/Shared/preprocessor.include.ab3"
0000863C <preprocessor.include.ab3@431> XINCLUDE "/Shared/preprocessor.include.ab3"
0000864A <preprocessor.include.ab3@432> XINCLUDE "/Shared/preprocessor.include.ab3"
0000866A <preprocessor.include.ab3@433> XINCLUDE "/Shared/preprocessor.include.ab3"
00008678 <preprocessor.include.ab3@434> XINCLUDE "/Shared/preprocessor.include.ab3"
0000867E <preprocessor.include.ab3@435> XINCLUDE "/Shared/preprocessor.include.ab3"
0000868E <preprocessor.include.ab3@440> XINCLUDE "/Shared/preprocessor.include.ab3"
00008698 <preprocessor.include.ab3@442> XINCLUDE "/Shared/preprocessor.include.ab3"
000086AC <preprocessor.include.ab3@443> XINCLUDE "/Shared/preprocessor.include.ab3"
000086D2 <preprocessor.include.ab3@448> XINCLUDE "/Shared/preprocessor.include.ab3"
000086F4 <preprocessor.include.ab3@449> XINCLUDE "/Shared/preprocessor.include.ab3"
0000871C <preprocessor.include.ab3@450> XINCLUDE "/Shared/preprocessor.include.ab3"
00008722 <preprocessor.include.ab3@451> XINCLUDE "/Shared/preprocessor.include.ab3"
00008730 <preprocessor.include.ab3@452> XINCLUDE "/Shared/preprocessor.include.ab3"
00008736 <preprocessor.include.ab3@453> XINCLUDE "/Shared/preprocessor.include.ab3"
0000874A <preprocessor.include.ab3@454> XINCLUDE "/Shared/preprocessor.include.ab3"
0000875A <preprocessor.include.ab3@455> XINCLUDE "/Shared/preprocessor.include.ab3"
00008770 <preprocessor.include.ab3@457> XINCLUDE "/Shared/preprocessor.include.ab3"
00008788 <preprocessor.include.ab3@459> XINCLUDE "/Shared/preprocessor.include.ab3"
000087A4 <preprocessor.include.ab3@460> XINCLUDE "/Shared/preprocessor.include.ab3"
000087AE <preprocessor.include.ab3@461> XINCLUDE "/Shared/preprocessor.include.ab3"
000087CA <preprocessor.include.ab3@462> XINCLUDE "/Shared/preprocessor.include.ab3"
000087F8 <preprocessor.include.ab3@463> XINCLUDE "/Shared/preprocessor.include.ab3"
00008834 <preprocessor.include.ab3@464> XINCLUDE "/Shared/preprocessor.include.ab3"
00008844 <preprocessor.include.ab3@465> XINCLUDE "/Shared/preprocessor.include.ab3"
00008852 <preprocessor.include.ab3@467> XINCLUDE "/Shared/preprocessor.include.ab3"
00008858 <preprocessor.include.ab3@468> XINCLUDE "/Shared/preprocessor.include.ab3"
00008868 <preprocessor.include.ab3@469> XINCLUDE "/Shared/preprocessor.include.ab3"
00008892 <preprocessor.include.ab3@470> XINCLUDE "/Shared/preprocessor.include.ab3"
00008898 <preprocessor.include.ab3@471> XINCLUDE "/Shared/preprocessor.include.ab3"
000088C4 <preprocessor.include.ab3@472> XINCLUDE "/Shared/preprocessor.include.ab3"
000088D4 <preprocessor.include.ab3@474> XINCLUDE "/Shared/preprocessor.include.ab3"
000088E4 <preprocessor.include.ab3@476> XINCLUDE "/Shared/preprocessor.include.ab3"
00008902 <preprocessor.include.ab3@477> XINCLUDE "/Shared/preprocessor.include.ab3"
00008910 <preprocessor.include.ab3@478> XINCLUDE "/Shared/preprocessor.include.ab3"
00008946 <preprocessor.include.ab3@479> XINCLUDE "/Shared/preprocessor.include.ab3"
0000896A <preprocessor.include.ab3@480> XINCLUDE "/Shared/preprocessor.include.ab3"
0000897E <preprocessor.include.ab3@483> XINCLUDE "/Shared/preprocessor.include.ab3"
0000898E <preprocessor.include.ab3@485> XINCLUDE "/Shared/preprocessor.include.ab3"
000089AC <preprocessor.include.ab3@486> XINCLUDE "/Shared/preprocessor.include.ab3"
000089BA <preprocessor.include.ab3@487> XINCLUDE "/Shared/preprocessor.include.ab3"
000089DE <preprocessor.include.ab3@488> XINCLUDE "/Shared/preprocessor.include.ab3"
00008A02 <preprocessor.include.ab3@489> XINCLUDE "/Shared/preprocessor.include.ab3"
00008A08 <preprocessor.include.ab3@493> XINCLUDE "/Shared/preprocessor.include.ab3"
00008A18 <preprocessor.include.ab3@494> XINCLUDE "/Shared/preprocessor.include.ab3"
00008A1E <preprocessor.include.ab3@495> XINCLUDE "/Shared/preprocessor.include.ab3"
00008A40 <preprocessor.include.ab3@499> XINCLUDE "/Shared/preprocessor.include.ab3"
00008A48 <preprocessor.include.ab3@500> XINCLUDE "/Shared/preprocessor.include.ab3"
00008A7E <preprocessor.include.ab3@501> XINCLUDE "/Shared/preprocessor.include.ab3"
00008A9A <preprocessor.include.ab3@502> XINCLUDE "/Shared/preprocessor.include.ab3"
00008AA0 <preprocessor.include.ab3@503> XINCLUDE "/Shared/preprocessor.include.ab3"
00008AD6 <preprocessor.include.ab3@507> XINCLUDE "/Shared/preprocessor.include.ab3"
00008AF2 <preprocessor.include.ab3@508> XINCLUDE "/Shared/preprocessor.include.ab3"
00008B1A <preprocessor.include.ab3@509> XINCLUDE "/Shared/preprocessor.include.ab3"
00008B38 <preprocessor.include.ab3@510> XINCLUDE "/Shared/preprocessor.include.ab3"
00008B56 <preprocessor.include.ab3@511> XINCLUDE "/Shared/preprocessor.include.ab3"
00008B84 <preprocessor.include.ab3@512> XINCLUDE "/Shared/preprocessor.include.ab3"
00008BE6 <preprocessor.include.ab3@513> XINCLUDE "/Shared/preprocessor.include.ab3"
00008C00 <preprocessor.include.ab3@514> XINCLUDE "/Shared/preprocessor.include.ab3"
00008C1A <preprocessor.include.ab3@518> XINCLUDE "/Shared/preprocessor.include.ab3"
00008C24 <preprocessor.include.ab3@519> XINCLUDE "/Shared/preprocessor.include.ab3"
00008C62 <preprocessor.include.ab3@520> XINCLUDE "/Shared/preprocessor.include.ab3"
00008C66 <preprocessor.include.ab3@521> XINCLUDE "/Shared/preprocessor.include.ab3"
00008C70 <preprocessor.include.ab3@523> XINCLUDE "/Shared/preprocessor.include.ab3"
00008C9E <preprocessor.include.ab3@524> XINCLUDE "/Shared/preprocessor.include.ab3"
00008CBE <preprocessor.include.ab3@525> XINCLUDE "/Shared/preprocessor.include.ab3"
00008CD6 <preprocessor.include.ab3@526> XINCLUDE "/Shared/preprocessor.include.ab3"
00008D34 <preprocessor.include.ab3@527> XINCLUDE "/Shared/preprocessor.include.ab3"
00008D60 <preprocessor.include.ab3@528> XINCLUDE "/Shared/preprocessor.include.ab3"
00008D72 <preprocessor.include.ab3@529> XINCLUDE "/Shared/preprocessor.include.ab3"
00008D82 <preprocessor.include.ab3@530> XINCLUDE "/Shared/preprocessor.include.ab3"
00008D9A <preprocessor.include.ab3@531> XINCLUDE "/Shared/preprocessor.include.ab3"
00008DA0 <preprocessor.include.ab3@533> XINCLUDE "/Shared/preprocessor.include.ab3"
00008DDA <preprocessor.include.ab3@534> XINCLUDE "/Shared/preprocessor.include.ab3"
00008DE4 <preprocessor.include.ab3@536> XINCLUDE "/Shared/preprocessor.include.ab3"
00008DEA <preprocessor.include.ab3@537> XINCLUDE "/Shared/preprocessor.include.ab3"
00008DF4 <preprocessor.include.ab3@538> XINCLUDE "/Shared/preprocessor.include.ab3"
00008E06 <preprocessor.include.ab3@539> XINCLUDE "/Shared/preprocessor.include.ab3"
00008E06 <AmiBlitz3.ab2@87> XINCLUDE "/Shared/preprocessor.include.ab3"
00008E06 <logging.include.bb2@1> XINCLUDE "PE/logging.include.bb2"
00008E12 <logging.include.bb2@4> XINCLUDE "PE/logging.include.bb2"
00008E12 <PE_Tools.include.bb2@1> XINCLUDE "PE/logging.include.bb2"
00008E36 <PE_Tools.include.bb2@67> XINCLUDE "PE/logging.include.bb2"
00008E3E <PE_Tools.include.bb2@76> XINCLUDE "PE/logging.include.bb2"
00008E6E <PE_Tools.include.bb2@77> XINCLUDE "PE/logging.include.bb2"
00008E9C <PE_Tools.include.bb2@78> XINCLUDE "PE/logging.include.bb2"
00008F0C <PE_Tools.include.bb2@79> XINCLUDE "PE/logging.include.bb2"
00008F1A <PE_Tools.include.bb2@80> XINCLUDE "PE/logging.include.bb2"
00008F6A <PE_Tools.include.bb2@81> XINCLUDE "PE/logging.include.bb2"
00008F6A <logging.include.bb2@6> XINCLUDE "PE/logging.include.bb2"
00008F6A <file.include.bb2@1> XINCLUDE "PE/logging.include.bb2"
00008F6A <asl.include.bb2@1> XINCLUDE "PE/logging.include.bb2"
00008F8E <asl.include.bb2@93> XINCLUDE "PE/logging.include.bb2"
00008FB6 <asl.include.bb2@94> XINCLUDE "PE/logging.include.bb2"
00008FDA <asl.include.bb2@95> XINCLUDE "PE/logging.include.bb2"
00009008 <asl.include.bb2@294> XINCLUDE "PE/logging.include.bb2"
00009264 <asl.include.bb2@296> XINCLUDE "PE/logging.include.bb2"
00009296 <asl.include.bb2@298> XINCLUDE "PE/logging.include.bb2"
000092C4 <asl.include.bb2@300> XINCLUDE "PE/logging.include.bb2"
00009302 <asl.include.bb2@301> XINCLUDE "PE/logging.include.bb2"
00009330 <asl.include.bb2@302> XINCLUDE "PE/logging.include.bb2"
0000935E <asl.include.bb2@303> XINCLUDE "PE/logging.include.bb2"
0000938C <asl.include.bb2@304> XINCLUDE "PE/logging.include.bb2"
000093BA <asl.include.bb2@305> XINCLUDE "PE/logging.include.bb2"
000093E8 <asl.include.bb2@306> XINCLUDE "PE/logging.include.bb2"
00009416 <asl.include.bb2@307> XINCLUDE "PE/logging.include.bb2"
00009444 <asl.include.bb2@308> XINCLUDE "PE/logging.include.bb2"
00009472 <asl.include.bb2@309> XINCLUDE "PE/logging.include.bb2"
00009502 <asl.include.bb2@311> XINCLUDE "PE/logging.include.bb2"
00009592 <asl.include.bb2@312> XINCLUDE "PE/logging.include.bb2"
0000963A <asl.include.bb2@313> XINCLUDE "PE/logging.include.bb2"
00009688 <asl.include.bb2@314> XINCLUDE "PE/logging.include.bb2"
000096CA <asl.include.bb2@315> XINCLUDE "PE/logging.include.bb2"
000096CE <asl.include.bb2@316> XINCLUDE "PE/logging.include.bb2"
0000971C <asl.include.bb2@319> XINCLUDE "PE/logging.include.bb2"
0000975E <asl.include.bb2@320> XINCLUDE "PE/logging.include.bb2"
0000978A <asl.include.bb2@321> XINCLUDE "PE/logging.include.bb2"
0000978E <asl.include.bb2@322> XINCLUDE "PE/logging.include.bb2"
000097BA <asl.include.bb2@323> XINCLUDE "PE/logging.include.bb2"
000097E6 <asl.include.bb2@325> XINCLUDE "PE/logging.include.bb2"
00009810 <asl.include.bb2@327> XINCLUDE "PE/logging.include.bb2"
0000981A <asl.include.bb2@328> XINCLUDE "PE/logging.include.bb2"
00009838 <asl.include.bb2@329> XINCLUDE "PE/logging.include.bb2"
00009858 <asl.include.bb2@330> XINCLUDE "PE/logging.include.bb2"
00009886 <asl.include.bb2@331> XINCLUDE "PE/logging.include.bb2"
000098B4 <asl.include.bb2@332> XINCLUDE "PE/logging.include.bb2"
000098E2 <asl.include.bb2@333> XINCLUDE "PE/logging.include.bb2"
00009928 <asl.include.bb2@336> XINCLUDE "PE/logging.include.bb2"
0000996E <asl.include.bb2@337> XINCLUDE "PE/logging.include.bb2"
000099B4 <asl.include.bb2@338> XINCLUDE "PE/logging.include.bb2"
000099F0 <asl.include.bb2@340> XINCLUDE "PE/logging.include.bb2"
00009AEC <asl.include.bb2@341> XINCLUDE "PE/logging.include.bb2"
00009B0A <asl.include.bb2@343> XINCLUDE "PE/logging.include.bb2"
00009B14 <asl.include.bb2@345> XINCLUDE "PE/logging.include.bb2"
00009B3A <asl.include.bb2@346> XINCLUDE "PE/logging.include.bb2"
00009B50 <asl.include.bb2@348> XINCLUDE "PE/logging.include.bb2"
00009B8A <asl.include.bb2@349> XINCLUDE "PE/logging.include.bb2"
00009BC8 <asl.include.bb2@350> XINCLUDE "PE/logging.include.bb2"
00009BD8 <asl.include.bb2@351> XINCLUDE "PE/logging.include.bb2"
00009C2E <asl.include.bb2@352> XINCLUDE "PE/logging.include.bb2"
00009C66 <asl.include.bb2@353> XINCLUDE "PE/logging.include.bb2"
00009C76 <asl.include.bb2@355> XINCLUDE "PE/logging.include.bb2"
00009C7A <asl.include.bb2@356> XINCLUDE "PE/logging.include.bb2"
00009C8A <asl.include.bb2@357> XINCLUDE "PE/logging.include.bb2"
00009C94 <asl.include.bb2@358> XINCLUDE "PE/logging.include.bb2"
00009CCE <asl.include.bb2@359> XINCLUDE "PE/logging.include.bb2"
00009CD2 <asl.include.bb2@360> XINCLUDE "PE/logging.include.bb2"
00009D2A <asl.include.bb2@361> XINCLUDE "PE/logging.include.bb2"
00009D48 <asl.include.bb2@363> XINCLUDE "PE/logging.include.bb2"
00009D4E <asl.include.bb2@366> XINCLUDE "PE/logging.include.bb2"
00009D5E <asl.include.bb2@369> XINCLUDE "PE/logging.include.bb2"
00009D6E <asl.include.bb2@370> XINCLUDE "PE/logging.include.bb2"
00009D7E <asl.include.bb2@371> XINCLUDE "PE/logging.include.bb2"
00009D8E <asl.include.bb2@372> XINCLUDE "PE/logging.include.bb2"
00009D9E <asl.include.bb2@374> XINCLUDE "PE/logging.include.bb2"
00009DA8 <asl.include.bb2@376> XINCLUDE "PE/logging.include.bb2"
00009DBC <asl.include.bb2@377> XINCLUDE "PE/logging.include.bb2"
00009DD2 <asl.include.bb2@393> XINCLUDE "PE/logging.include.bb2"
00009DFA <asl.include.bb2@395> XINCLUDE "PE/logging.include.bb2"
00009E04 <asl.include.bb2@396> XINCLUDE "PE/logging.include.bb2"
00009E14 <asl.include.bb2@397> XINCLUDE "PE/logging.include.bb2"
00009E4E <asl.include.bb2@398> XINCLUDE "PE/logging.include.bb2"
00009E58 <asl.include.bb2@399> XINCLUDE "PE/logging.include.bb2"
00009E82 <asl.include.bb2@401> XINCLUDE "PE/logging.include.bb2"
00009E9A <asl.include.bb2@402> XINCLUDE "PE/logging.include.bb2"
00009EEC <asl.include.bb2@438> XINCLUDE "PE/logging.include.bb2"
00009F1E <asl.include.bb2@440> XINCLUDE "PE/logging.include.bb2"
00009FB8 <asl.include.bb2@441> XINCLUDE "PE/logging.include.bb2"
00009FFE <asl.include.bb2@442> XINCLUDE "PE/logging.include.bb2"
0000A098 <asl.include.bb2@443> XINCLUDE "PE/logging.include.bb2"
0000A0B2 <asl.include.bb2@444> XINCLUDE "PE/logging.include.bb2"
0000A0B2 <file.include.bb2@57> XINCLUDE "PE/logging.include.bb2"
0000A0C8 <file.include.bb2@66> XINCLUDE "PE/logging.include.bb2"
0000A0DE <file.include.bb2@67> XINCLUDE "PE/logging.include.bb2"
0000A0F4 <file.include.bb2@68> XINCLUDE "PE/logging.include.bb2"
0000A10A <file.include.bb2@70> XINCLUDE "PE/logging.include.bb2"
0000A116 <file.include.bb2@72> XINCLUDE "PE/logging.include.bb2"
0000A122 <file.include.bb2@73> XINCLUDE "PE/logging.include.bb2"
0000A12E <file.include.bb2@74> XINCLUDE "PE/logging.include.bb2"
0000A13A <file.include.bb2@75> XINCLUDE "PE/logging.include.bb2"
0000A162 <file.include.bb2@77> XINCLUDE "PE/logging.include.bb2"
0000A18A <file.include.bb2@78> XINCLUDE "PE/logging.include.bb2"
0000A1B2 <file.include.bb2@79> XINCLUDE "PE/logging.include.bb2"
0000A1D6 <file.include.bb2@109> XINCLUDE "PE/logging.include.bb2"
0000A1FA <file.include.bb2@110> XINCLUDE "PE/logging.include.bb2"
0000A214 <file.include.bb2@156> XINCLUDE "PE/logging.include.bb2"
0000A224 <file.include.bb2@157> XINCLUDE "PE/logging.include.bb2"
0000A226 <file.include.bb2@158> XINCLUDE "PE/logging.include.bb2"
0000A228 <file.include.bb2@159> XINCLUDE "PE/logging.include.bb2"
0000A22A <file.include.bb2@160> XINCLUDE "PE/logging.include.bb2"
0000A22C <file.include.bb2@161> XINCLUDE "PE/logging.include.bb2"
0000A22E <file.include.bb2@162> XINCLUDE "PE/logging.include.bb2"
0000A232 <file.include.bb2@163> XINCLUDE "PE/logging.include.bb2"
0000A236 <file.include.bb2@164> XINCLUDE "PE/logging.include.bb2"
0000A23A <file.include.bb2@165> XINCLUDE "PE/logging.include.bb2"
0000A23C <file.include.bb2@166> XINCLUDE "PE/logging.include.bb2"
0000A23E <file.include.bb2@167> XINCLUDE "PE/logging.include.bb2"
0000A240 <file.include.bb2@168> XINCLUDE "PE/logging.include.bb2"
0000A242 <file.include.bb2@169> XINCLUDE "PE/logging.include.bb2"
0000A244 <file.include.bb2@170> XINCLUDE "PE/logging.include.bb2"
0000A246 <file.include.bb2@171> XINCLUDE "PE/logging.include.bb2"
0000A248 <file.include.bb2@172> XINCLUDE "PE/logging.include.bb2"
0000A252 <file.include.bb2@173> XINCLUDE "PE/logging.include.bb2"
0000A258 <file.include.bb2@174> XINCLUDE "PE/logging.include.bb2"
0000A272 <file.include.bb2@215> XINCLUDE "PE/logging.include.bb2"
0000A290 <file.include.bb2@217> XINCLUDE "PE/logging.include.bb2"
0000A296 <file.include.bb2@218> XINCLUDE "PE/logging.include.bb2"
0000A2B0 <file.include.bb2@237> XINCLUDE "PE/logging.include.bb2"
0000A2CA <file.include.bb2@239> XINCLUDE "PE/logging.include.bb2"
0000A2F4 <file.include.bb2@240> XINCLUDE "PE/logging.include.bb2"
0000A314 <file.include.bb2@241> XINCLUDE "PE/logging.include.bb2"
0000A31E <file.include.bb2@242> XINCLUDE "PE/logging.include.bb2"
0000A34A <file.include.bb2@243> XINCLUDE "PE/logging.include.bb2"
0000A36C <file.include.bb2@244> XINCLUDE "PE/logging.include.bb2"
0000A386 <file.include.bb2@245> XINCLUDE "PE/logging.include.bb2"
0000A38A <file.include.bb2@248> XINCLUDE "PE/logging.include.bb2"
0000A3B8 <file.include.bb2@249> XINCLUDE "PE/logging.include.bb2"
0000A3D6 <file.include.bb2@251> XINCLUDE "PE/logging.include.bb2"
0000A3DC <file.include.bb2@252> XINCLUDE "PE/logging.include.bb2"
0000A3FA <file.include.bb2@271> XINCLUDE "PE/logging.include.bb2"
0000A400 <file.include.bb2@273> XINCLUDE "PE/logging.include.bb2"
0000A428 <file.include.bb2@274> XINCLUDE "PE/logging.include.bb2"
0000A446 <file.include.bb2@275> XINCLUDE "PE/logging.include.bb2"
0000A480 <file.include.bb2@276> XINCLUDE "PE/logging.include.bb2"
0000A49C <file.include.bb2@277> XINCLUDE "PE/logging.include.bb2"
0000A4A0 <file.include.bb2@278> XINCLUDE "PE/logging.include.bb2"
0000A4A6 <file.include.bb2@279> XINCLUDE "PE/logging.include.bb2"
0000A4AA <file.include.bb2@281> XINCLUDE "PE/logging.include.bb2"
0000A4B0 <file.include.bb2@282> XINCLUDE "PE/logging.include.bb2"
0000A4CA <file.include.bb2@283> XINCLUDE "PE/logging.include.bb2"
0000A514 <file.include.bb2@285> XINCLUDE "PE/logging.include.bb2"
0000A51A <file.include.bb2@286> XINCLUDE "PE/logging.include.bb2"
0000A548 <file.include.bb2@287> XINCLUDE "PE/logging.include.bb2"
0000A552 <file.include.bb2@288> XINCLUDE "PE/logging.include.bb2"
0000A56E <file.include.bb2@289> XINCLUDE "PE/logging.include.bb2"
0000A572 <file.include.bb2@291> XINCLUDE "PE/logging.include.bb2"
0000A5A0 <file.include.bb2@292> XINCLUDE "PE/logging.include.bb2"
0000A5AA <file.include.bb2@296> XINCLUDE "PE/logging.include.bb2"
0000A5B0 <file.include.bb2@297> XINCLUDE "PE/logging.include.bb2"
0000A5CE <file.include.bb2@316> XINCLUDE "PE/logging.include.bb2"
0000A5FC <file.include.bb2@318> XINCLUDE "PE/logging.include.bb2"
0000A602 <file.include.bb2@319> XINCLUDE "PE/logging.include.bb2"
0000A618 <file.include.bb2@335> XINCLUDE "PE/logging.include.bb2"
0000A622 <file.include.bb2@337> XINCLUDE "PE/logging.include.bb2"
0000A690 <file.include.bb2@338> XINCLUDE "PE/logging.include.bb2"
0000A6A0 <file.include.bb2@339> XINCLUDE "PE/logging.include.bb2"
0000A6A4 <file.include.bb2@340> XINCLUDE "PE/logging.include.bb2"
0000A6DE <file.include.bb2@341> XINCLUDE "PE/logging.include.bb2"
0000A6E8 <file.include.bb2@342> XINCLUDE "PE/logging.include.bb2"
0000A6EE <file.include.bb2@343> XINCLUDE "PE/logging.include.bb2"
0000A708 <file.include.bb2@397> XINCLUDE "PE/logging.include.bb2"
0000A71E <file.include.bb2@399> XINCLUDE "PE/logging.include.bb2"
0000A77A <file.include.bb2@400> XINCLUDE "PE/logging.include.bb2"
0000A7B4 <file.include.bb2@401> XINCLUDE "PE/logging.include.bb2"
0000A7EE <file.include.bb2@402> XINCLUDE "PE/logging.include.bb2"
0000A80C <file.include.bb2@403> XINCLUDE "PE/logging.include.bb2"
0000A82A <file.include.bb2@404> XINCLUDE "PE/logging.include.bb2"
0000A840 <file.include.bb2@405> XINCLUDE "PE/logging.include.bb2"
0000A85C <file.include.bb2@406> XINCLUDE "PE/logging.include.bb2"
0000A876 <file.include.bb2@407> XINCLUDE "PE/logging.include.bb2"
0000A8F2 <file.include.bb2@408> XINCLUDE "PE/logging.include.bb2"
0000A904 <file.include.bb2@410> XINCLUDE "PE/logging.include.bb2"
0000A91A <file.include.bb2@422> XINCLUDE "PE/logging.include.bb2"
0000A94E <file.include.bb2@424> XINCLUDE "PE/logging.include.bb2"
0000A958 <file.include.bb2@425> XINCLUDE "PE/logging.include.bb2"
0000A968 <file.include.bb2@426> XINCLUDE "PE/logging.include.bb2"
0000A96C <file.include.bb2@427> XINCLUDE "PE/logging.include.bb2"
0000A99A <file.include.bb2@428> XINCLUDE "PE/logging.include.bb2"
0000A9B4 <file.include.bb2@447> XINCLUDE "PE/logging.include.bb2"
0000A9CA <file.include.bb2@449> XINCLUDE "PE/logging.include.bb2"
0000A9E8 <file.include.bb2@450> XINCLUDE "PE/logging.include.bb2"
0000A9FE <file.include.bb2@451> XINCLUDE "PE/logging.include.bb2"
0000AA36 <file.include.bb2@452> XINCLUDE "PE/logging.include.bb2"
0000AA60 <file.include.bb2@453> XINCLUDE "PE/logging.include.bb2"
0000AA8A <file.include.bb2@456> XINCLUDE "PE/logging.include.bb2"
0000AAA2 <file.include.bb2@457> XINCLUDE "PE/logging.include.bb2"
0000AAB8 <file.include.bb2@525> XINCLUDE "PE/logging.include.bb2"
0000AB04 <file.include.bb2@527> XINCLUDE "PE/logging.include.bb2"
0000AB24 <file.include.bb2@528> XINCLUDE "PE/logging.include.bb2"
0000AB2C <file.include.bb2@529> XINCLUDE "PE/logging.include.bb2"
0000AB6A <file.include.bb2@568> XINCLUDE "PE/logging.include.bb2"
0000AB76 <file.include.bb2@570> XINCLUDE "PE/logging.include.bb2"
0000AB80 <file.include.bb2@571> XINCLUDE "PE/logging.include.bb2"
0000AB96 <file.include.bb2@572> XINCLUDE "PE/logging.include.bb2"
0000AB9C <file.include.bb2@573> XINCLUDE "PE/logging.include.bb2"
0000ABA8 <file.include.bb2@574> XINCLUDE "PE/logging.include.bb2"
0000ABD0 <file.include.bb2@575> XINCLUDE "PE/logging.include.bb2"
0000ABE0 <file.include.bb2@576> XINCLUDE "PE/logging.include.bb2"
0000AC08 <file.include.bb2@577> XINCLUDE "PE/logging.include.bb2"
0000AC18 <file.include.bb2@578> XINCLUDE "PE/logging.include.bb2"
0000AC40 <file.include.bb2@579> XINCLUDE "PE/logging.include.bb2"
0000AC50 <file.include.bb2@580> XINCLUDE "PE/logging.include.bb2"
0000AC78 <file.include.bb2@581> XINCLUDE "PE/logging.include.bb2"
0000AC7A <file.include.bb2@582> XINCLUDE "PE/logging.include.bb2"
0000ACA0 <file.include.bb2@584> XINCLUDE "PE/logging.include.bb2"
0000ACDC <file.include.bb2@586> XINCLUDE "PE/logging.include.bb2"
0000AD66 <file.include.bb2@587> XINCLUDE "PE/logging.include.bb2"
0000ADA0 <file.include.bb2@588> XINCLUDE "PE/logging.include.bb2"
0000ADD0 <file.include.bb2@589> XINCLUDE "PE/logging.include.bb2"
0000AE0C <file.include.bb2@593> XINCLUDE "PE/logging.include.bb2"
0000AE64 <file.include.bb2@594> XINCLUDE "PE/logging.include.bb2"
0000AEBC <file.include.bb2@595> XINCLUDE "PE/logging.include.bb2"
0000AF3C <file.include.bb2@597> XINCLUDE "PE/logging.include.bb2"
0000AF70 <file.include.bb2@598> XINCLUDE "PE/logging.include.bb2"
0000AFA4 <file.include.bb2@599> XINCLUDE "PE/logging.include.bb2"
0000AFAA <file.include.bb2@600> XINCLUDE "PE/logging.include.bb2"
0000AFB6 <file.include.bb2@601> XINCLUDE "PE/logging.include.bb2"
0000AFEA <file.include.bb2@602> XINCLUDE "PE/logging.include.bb2"
0000B01A <file.include.bb2@603> XINCLUDE "PE/logging.include.bb2"
0000B0D6 <file.include.bb2@604> XINCLUDE "PE/logging.include.bb2"
0000B156 <file.include.bb2@605> XINCLUDE "PE/logging.include.bb2"
0000B18A <file.include.bb2@606> XINCLUDE "PE/logging.include.bb2"
0000B1A8 <file.include.bb2@608> XINCLUDE "PE/logging.include.bb2"
0000B1B0 <file.include.bb2@609> XINCLUDE "PE/logging.include.bb2"
0000B1B4 <file.include.bb2@610> XINCLUDE "PE/logging.include.bb2"
0000B278 <file.include.bb2@611> XINCLUDE "PE/logging.include.bb2"
0000B288 <file.include.bb2@614> XINCLUDE "PE/logging.include.bb2"
0000B344 <file.include.bb2@615> XINCLUDE "PE/logging.include.bb2"
0000B3C4 <file.include.bb2@616> XINCLUDE "PE/logging.include.bb2"
0000B4A4 <file.include.bb2@617> XINCLUDE "PE/logging.include.bb2"
0000B4AE <file.include.bb2@618> XINCLUDE "PE/logging.include.bb2"
0000B4E2 <file.include.bb2@619> XINCLUDE "PE/logging.include.bb2"
0000B500 <file.include.bb2@620> XINCLUDE "PE/logging.include.bb2"
0000B508 <file.include.bb2@621> XINCLUDE "PE/logging.include.bb2"
0000B50C <file.include.bb2@622> XINCLUDE "PE/logging.include.bb2"
0000B5D0 <file.include.bb2@623> XINCLUDE "PE/logging.include.bb2"
0000B5E0 <file.include.bb2@627> XINCLUDE "PE/logging.include.bb2"
0000B614 <file.include.bb2@628> XINCLUDE "PE/logging.include.bb2"
0000B644 <file.include.bb2@629> XINCLUDE "PE/logging.include.bb2"
0000B700 <file.include.bb2@630> XINCLUDE "PE/logging.include.bb2"
0000B780 <file.include.bb2@631> XINCLUDE "PE/logging.include.bb2"
0000B7B4 <file.include.bb2@632> XINCLUDE "PE/logging.include.bb2"
0000B7D2 <file.include.bb2@635> XINCLUDE "PE/logging.include.bb2"
0000B7DA <file.include.bb2@636> XINCLUDE "PE/logging.include.bb2"
0000B7DE <file.include.bb2@637> XINCLUDE "PE/logging.include.bb2"
0000B8A2 <file.include.bb2@638> XINCLUDE "PE/logging.include.bb2"
0000B8B2 <file.include.bb2@641> XINCLUDE "PE/logging.include.bb2"
0000B96E <file.include.bb2@642> XINCLUDE "PE/logging.include.bb2"
0000B9EE <file.include.bb2@643> XINCLUDE "PE/logging.include.bb2"
0000BA22 <file.include.bb2@644> XINCLUDE "PE/logging.include.bb2"
0000BA40 <file.include.bb2@645> XINCLUDE "PE/logging.include.bb2"
0000BA48 <file.include.bb2@646> XINCLUDE "PE/logging.include.bb2"
0000BA4C <file.include.bb2@647> XINCLUDE "PE/logging.include.bb2"
0000BB10 <file.include.bb2@648> XINCLUDE "PE/logging.include.bb2"
0000BB14 <file.include.bb2@651> XINCLUDE "PE/logging.include.bb2"
0000BB42 <file.include.bb2@652> XINCLUDE "PE/logging.include.bb2"
0000BB44 <file.include.bb2@653> XINCLUDE "PE/logging.include.bb2"
0000BB48 <file.include.bb2@655> XINCLUDE "PE/logging.include.bb2"
0000BBD4 <file.include.bb2@656> XINCLUDE "PE/logging.include.bb2"
0000BBEA <file.include.bb2@659> XINCLUDE "PE/logging.include.bb2"
0000BC00 <file.include.bb2@660> XINCLUDE "PE/logging.include.bb2"
0000BC6A <file.include.bb2@661> XINCLUDE "PE/logging.include.bb2"
0000BCD4 <file.include.bb2@662> XINCLUDE "PE/logging.include.bb2"
0000BCF4 <file.include.bb2@663> XINCLUDE "PE/logging.include.bb2"
0000BD10 <file.include.bb2@664> XINCLUDE "PE/logging.include.bb2"
0000BD2E <file.include.bb2@665> XINCLUDE "PE/logging.include.bb2"
0000BD48 <file.include.bb2@666> XINCLUDE "PE/logging.include.bb2"
0000BD52 <file.include.bb2@668> XINCLUDE "PE/logging.include.bb2"
0000BD6E <file.include.bb2@669> XINCLUDE "PE/logging.include.bb2"
0000BD90 <file.include.bb2@805> XINCLUDE "PE/logging.include.bb2"
0000BD96 <file.include.bb2@807> XINCLUDE "PE/logging.include.bb2"
0000BDBE <file.include.bb2@808> XINCLUDE "PE/logging.include.bb2"
0000BDD8 <file.include.bb2@809> XINCLUDE "PE/logging.include.bb2"
0000BDEE <file.include.bb2@810> XINCLUDE "PE/logging.include.bb2"
0000BE4A <file.include.bb2@811> XINCLUDE "PE/logging.include.bb2"
0000BE82 <file.include.bb2@812> XINCLUDE "PE/logging.include.bb2"
0000BE86 <file.include.bb2@813> XINCLUDE "PE/logging.include.bb2"
0000BED2 <file.include.bb2@814> XINCLUDE "PE/logging.include.bb2"
0000BEEC <file.include.bb2@815> XINCLUDE "PE/logging.include.bb2"
0000BF00 <file.include.bb2@818> XINCLUDE "PE/logging.include.bb2"
0000BF06 <file.include.bb2@819> XINCLUDE "PE/logging.include.bb2"
0000BF0A <file.include.bb2@820> XINCLUDE "PE/logging.include.bb2"
0000BF20 <file.include.bb2@821> XINCLUDE "PE/logging.include.bb2"
0000C000 <file.include.bb2@822> XINCLUDE "PE/logging.include.bb2"
0000C004 <file.include.bb2@823> XINCLUDE "PE/logging.include.bb2"
0000C04A <file.include.bb2@824> XINCLUDE "PE/logging.include.bb2"
0000C056 <file.include.bb2@825> XINCLUDE "PE/logging.include.bb2"
0000C0C4 <file.include.bb2@826> XINCLUDE "PE/logging.include.bb2"
0000C0FE <file.include.bb2@827> XINCLUDE "PE/logging.include.bb2"
0000C14A <file.include.bb2@830> XINCLUDE "PE/logging.include.bb2"
0000C1B6 <file.include.bb2@831> XINCLUDE "PE/logging.include.bb2"
0000C1BA <file.include.bb2@832> XINCLUDE "PE/logging.include.bb2"
0000C1E8 <file.include.bb2@833> XINCLUDE "PE/logging.include.bb2"
0000C1EC <file.include.bb2@835> XINCLUDE "PE/logging.include.bb2"
0000C242 <file.include.bb2@836> XINCLUDE "PE/logging.include.bb2"
0000C24C <file.include.bb2@838> XINCLUDE "PE/logging.include.bb2"
0000C260 <file.include.bb2@839> XINCLUDE "PE/logging.include.bb2"
0000C27A <file.include.bb2@841> XINCLUDE "PE/logging.include.bb2"
0000C280 <file.include.bb2@843> XINCLUDE "PE/logging.include.bb2"
0000C2A8 <file.include.bb2@844> XINCLUDE "PE/logging.include.bb2"
0000C2C2 <file.include.bb2@845> XINCLUDE "PE/logging.include.bb2"
0000C31E <file.include.bb2@846> XINCLUDE "PE/logging.include.bb2"
0000C322 <file.include.bb2@849> XINCLUDE "PE/logging.include.bb2"
0000C344 <file.include.bb2@867> XINCLUDE "PE/logging.include.bb2"
0000C34A <file.include.bb2@869> XINCLUDE "PE/logging.include.bb2"
0000C364 <file.include.bb2@870> XINCLUDE "PE/logging.include.bb2"
0000C382 <file.include.bb2@871> XINCLUDE "PE/logging.include.bb2"
0000C3C4 <file.include.bb2@872> XINCLUDE "PE/logging.include.bb2"
0000C412 <file.include.bb2@873> XINCLUDE "PE/logging.include.bb2"
0000C448 <file.include.bb2@874> XINCLUDE "PE/logging.include.bb2"
0000C44E <file.include.bb2@875> XINCLUDE "PE/logging.include.bb2"
0000C452 <file.include.bb2@876> XINCLUDE "PE/logging.include.bb2"
0000C482 <file.include.bb2@877> XINCLUDE "PE/logging.include.bb2"
0000C488 <file.include.bb2@878> XINCLUDE "PE/logging.include.bb2"
0000C48C <file.include.bb2@880> XINCLUDE "PE/logging.include.bb2"
0000C4A2 <file.include.bb2@881> XINCLUDE "PE/logging.include.bb2"
0000C4FE <file.include.bb2@882> XINCLUDE "PE/logging.include.bb2"
0000C536 <file.include.bb2@883> XINCLUDE "PE/logging.include.bb2"
0000C53A <file.include.bb2@884> XINCLUDE "PE/logging.include.bb2"
0000C586 <file.include.bb2@885> XINCLUDE "PE/logging.include.bb2"
0000C5A0 <file.include.bb2@886> XINCLUDE "PE/logging.include.bb2"
0000C5B4 <file.include.bb2@888> XINCLUDE "PE/logging.include.bb2"
0000C5BA <file.include.bb2@889> XINCLUDE "PE/logging.include.bb2"
0000C5BE <file.include.bb2@890> XINCLUDE "PE/logging.include.bb2"
0000C5D4 <file.include.bb2@891> XINCLUDE "PE/logging.include.bb2"
0000C5DA <file.include.bb2@892> XINCLUDE "PE/logging.include.bb2"
0000C5DE <file.include.bb2@893> XINCLUDE "PE/logging.include.bb2"
0000C630 <file.include.bb2@894> XINCLUDE "PE/logging.include.bb2"
0000C67C <file.include.bb2@897> XINCLUDE "PE/logging.include.bb2"
0000C686 <file.include.bb2@900> XINCLUDE "PE/logging.include.bb2"
0000C68C <file.include.bb2@901> XINCLUDE "PE/logging.include.bb2"
0000C6A6 <file.include.bb2@955> XINCLUDE "PE/logging.include.bb2"
0000C6AC <file.include.bb2@957> XINCLUDE "PE/logging.include.bb2"
0000C6F8 <file.include.bb2@958> XINCLUDE "PE/logging.include.bb2"
0000C73A <file.include.bb2@959> XINCLUDE "PE/logging.include.bb2"
0000C744 <file.include.bb2@960> XINCLUDE "PE/logging.include.bb2"
0000C74A <file.include.bb2@961> XINCLUDE "PE/logging.include.bb2"
0000C770 <file.include.bb2@1108> XINCLUDE "PE/logging.include.bb2"
0000C776 <file.include.bb2@1110> XINCLUDE "PE/logging.include.bb2"
0000C79E <file.include.bb2@1111> XINCLUDE "PE/logging.include.bb2"
0000C802 <file.include.bb2@1112> XINCLUDE "PE/logging.include.bb2"
0000C81C <file.include.bb2@1113> XINCLUDE "PE/logging.include.bb2"
0000C826 <file.include.bb2@1114> XINCLUDE "PE/logging.include.bb2"
0000C840 <file.include.bb2@1115> XINCLUDE "PE/logging.include.bb2"
0000C84A <file.include.bb2@1116> XINCLUDE "PE/logging.include.bb2"
0000C862 <file.include.bb2@1117> XINCLUDE "PE/logging.include.bb2"
0000C892 <file.include.bb2@1118> XINCLUDE "PE/logging.include.bb2"
0000C8AE <file.include.bb2@1119> XINCLUDE "PE/logging.include.bb2"
0000C8BE <file.include.bb2@1120> XINCLUDE "PE/logging.include.bb2"
0000C8C2 <file.include.bb2@1123> XINCLUDE "PE/logging.include.bb2"
0000C8F0 <file.include.bb2@1124> XINCLUDE "PE/logging.include.bb2"
0000C8FA <file.include.bb2@1126> XINCLUDE "PE/logging.include.bb2"
0000C900 <file.include.bb2@1127> XINCLUDE "PE/logging.include.bb2"
0000C91E <file.include.bb2@1148> XINCLUDE "PE/logging.include.bb2"
0000C924 <file.include.bb2@1150> XINCLUDE "PE/logging.include.bb2"
0000C93A <file.include.bb2@1151> XINCLUDE "PE/logging.include.bb2"
0000C94A <file.include.bb2@1152> XINCLUDE "PE/logging.include.bb2"
0000C96E <file.include.bb2@1153> XINCLUDE "PE/logging.include.bb2"
0000C9A4 <file.include.bb2@1154> XINCLUDE "PE/logging.include.bb2"
0000C9BA <file.include.bb2@1155> XINCLUDE "PE/logging.include.bb2"
0000CA08 <file.include.bb2@1156> XINCLUDE "PE/logging.include.bb2"
0000CAE6 <file.include.bb2@1157> XINCLUDE "PE/logging.include.bb2"
0000CB04 <file.include.bb2@1158> XINCLUDE "PE/logging.include.bb2"
0000CB2E <file.include.bb2@1160> XINCLUDE "PE/logging.include.bb2"
0000CB4A <file.include.bb2@1161> XINCLUDE "PE/logging.include.bb2"
0000CB78 <file.include.bb2@1162> XINCLUDE "PE/logging.include.bb2"
0000CB82 <file.include.bb2@1163> XINCLUDE "PE/logging.include.bb2"
0000CBAE <file.include.bb2@1164> XINCLUDE "PE/logging.include.bb2"
0000CBC8 <file.include.bb2@1165> XINCLUDE "PE/logging.include.bb2"
0000CBE4 <file.include.bb2@1166> XINCLUDE "PE/logging.include.bb2"
0000CBE8 <file.include.bb2@1167> XINCLUDE "PE/logging.include.bb2"
0000CC16 <file.include.bb2@1168> XINCLUDE "PE/logging.include.bb2"
0000CC1A <file.include.bb2@1170> XINCLUDE "PE/logging.include.bb2"
0000CC20 <file.include.bb2@1171> XINCLUDE "PE/logging.include.bb2"
0000CC24 <file.include.bb2@1173> XINCLUDE "PE/logging.include.bb2"
0000CCB8 <file.include.bb2@1174> XINCLUDE "PE/logging.include.bb2"
0000CCBC <file.include.bb2@1176> XINCLUDE "PE/logging.include.bb2"
0000CD52 <file.include.bb2@1177> XINCLUDE "PE/logging.include.bb2"
0000CD56 <file.include.bb2@1179> XINCLUDE "PE/logging.include.bb2"
0000CD84 <file.include.bb2@1180> XINCLUDE "PE/logging.include.bb2"
0000CD8E <file.include.bb2@1182> XINCLUDE "PE/logging.include.bb2"
0000CD94 <file.include.bb2@1183> XINCLUDE "PE/logging.include.bb2"
0000CDAE <file.include.bb2@1245> XINCLUDE "PE/logging.include.bb2"
0000CDCC <file.include.bb2@1247> XINCLUDE "PE/logging.include.bb2"
0000CDD2 <file.include.bb2@1248> XINCLUDE "PE/logging.include.bb2"
0000CDEC <file.include.bb2@1398> XINCLUDE "PE/logging.include.bb2"
0000CE0A <file.include.bb2@1400> XINCLUDE "PE/logging.include.bb2"
0000CEC8 <file.include.bb2@1401> XINCLUDE "PE/logging.include.bb2"
0000CED0 <file.include.bb2@1402> XINCLUDE "PE/logging.include.bb2"
0000CED4 <file.include.bb2@1403> XINCLUDE "PE/logging.include.bb2"
0000CF04 <file.include.bb2@1404> XINCLUDE "PE/logging.include.bb2"
0000CF10 <file.include.bb2@1406> XINCLUDE "PE/logging.include.bb2"
0000CF16 <file.include.bb2@1407> XINCLUDE "PE/logging.include.bb2"
0000CF30 <file.include.bb2@1593> XINCLUDE "PE/logging.include.bb2"
0000CF3A <file.include.bb2@1594> XINCLUDE "PE/logging.include.bb2"
0000CF44 <file.include.bb2@1595> XINCLUDE "PE/logging.include.bb2"
0000CF5A <file.include.bb2@1596> XINCLUDE "PE/logging.include.bb2"
0000CF70 <file.include.bb2@1597> XINCLUDE "PE/logging.include.bb2"
0000CF80 <file.include.bb2@1598> XINCLUDE "PE/logging.include.bb2"
0000CF8C <file.include.bb2@1599> XINCLUDE "PE/logging.include.bb2"
0000CF90 <file.include.bb2@1600> XINCLUDE "PE/logging.include.bb2"
0000CF9A <file.include.bb2@1601> XINCLUDE "PE/logging.include.bb2"
0000CFDC <file.include.bb2@1602> XINCLUDE "PE/logging.include.bb2"
0000CFF2 <file.include.bb2@1603> XINCLUDE "PE/logging.include.bb2"
0000D016 <file.include.bb2@1604> XINCLUDE "PE/logging.include.bb2"
0000D02C <file.include.bb2@1605> XINCLUDE "PE/logging.include.bb2"
0000D038 <file.include.bb2@1606> XINCLUDE "PE/logging.include.bb2"
0000D03C <file.include.bb2@1607> XINCLUDE "PE/logging.include.bb2"
0000D04C <file.include.bb2@1608> XINCLUDE "PE/logging.include.bb2"
0000D06E <file.include.bb2@1613> XINCLUDE "PE/logging.include.bb2"
0000D084 <file.include.bb2@1616> XINCLUDE "PE/logging.include.bb2"
0000D0D0 <file.include.bb2@1617> XINCLUDE "PE/logging.include.bb2"
0000D0D4 <file.include.bb2@1619> XINCLUDE "PE/logging.include.bb2"
0000D0FE <file.include.bb2@1621> XINCLUDE "PE/logging.include.bb2"
0000D116 <file.include.bb2@1622> XINCLUDE "PE/logging.include.bb2"
0000D144 <file.include.bb2@1706> XINCLUDE "PE/logging.include.bb2"
0000D158 <file.include.bb2@1707> XINCLUDE "PE/logging.include.bb2"
0000D170 <file.include.bb2@1708> XINCLUDE "PE/logging.include.bb2"
0000D192 <file.include.bb2@1709> XINCLUDE "PE/logging.include.bb2"
0000D1AA <file.include.bb2@1710> XINCLUDE "PE/logging.include.bb2"
0000D1B4 <file.include.bb2@1711> XINCLUDE "PE/logging.include.bb2"
0000D1CE <file.include.bb2@1712> XINCLUDE "PE/logging.include.bb2"
0000D1F0 <file.include.bb2@1787> XINCLUDE "PE/logging.include.bb2"
0000D208 <file.include.bb2@1789> XINCLUDE "PE/logging.include.bb2"
0000D22A <file.include.bb2@1790> XINCLUDE "PE/logging.include.bb2"
0000D230 <file.include.bb2@1791> XINCLUDE "PE/logging.include.bb2"
0000D262 <file.include.bb2@1811> XINCLUDE "PE/logging.include.bb2"
0000D276 <file.include.bb2@1813> XINCLUDE "PE/logging.include.bb2"
0000D28E <file.include.bb2@1814> XINCLUDE "PE/logging.include.bb2"
0000D2A6 <file.include.bb2@1815> XINCLUDE "PE/logging.include.bb2"
0000D2C6 <file.include.bb2@1816> XINCLUDE "PE/logging.include.bb2"
0000D2F8 <file.include.bb2@1817> XINCLUDE "PE/logging.include.bb2"
0000D32A <file.include.bb2@1818> XINCLUDE "PE/logging.include.bb2"
0000D340 <file.include.bb2@1819> XINCLUDE "PE/logging.include.bb2"
0000D34A <file.include.bb2@1820> XINCLUDE "PE/logging.include.bb2"
0000D374 <file.include.bb2@1821> XINCLUDE "PE/logging.include.bb2"
0000D37E <file.include.bb2@1823> XINCLUDE "PE/logging.include.bb2"
0000D398 <file.include.bb2@1824> XINCLUDE "PE/logging.include.bb2"
0000D3B2 <file.include.bb2@1841> XINCLUDE "PE/logging.include.bb2"
0000D3D0 <file.include.bb2@1843> XINCLUDE "PE/logging.include.bb2"
0000D3F4 <file.include.bb2@1844> XINCLUDE "PE/logging.include.bb2"
0000D43E <file.include.bb2@1845> XINCLUDE "PE/logging.include.bb2"
0000D458 <file.include.bb2@1846> XINCLUDE "PE/logging.include.bb2"
0000D46A <file.include.bb2@1847> XINCLUDE "PE/logging.include.bb2"
0000D4A2 <file.include.bb2@1848> XINCLUDE "PE/logging.include.bb2"
0000D4B8 <file.include.bb2@1849> XINCLUDE "PE/logging.include.bb2"
0000D4C2 <file.include.bb2@1850> XINCLUDE "PE/logging.include.bb2"
0000D4EA <file.include.bb2@1851> XINCLUDE "PE/logging.include.bb2"
0000D4EE <file.include.bb2@1853> XINCLUDE "PE/logging.include.bb2"
0000D516 <file.include.bb2@1854> XINCLUDE "PE/logging.include.bb2"
0000D526 <file.include.bb2@1856> XINCLUDE "PE/logging.include.bb2"
0000D53A <file.include.bb2@1857> XINCLUDE "PE/logging.include.bb2"
0000D550 <file.include.bb2@1870> XINCLUDE "PE/logging.include.bb2"
0000D560 <file.include.bb2@1872> XINCLUDE "PE/logging.include.bb2"
0000D564 <file.include.bb2@1873> XINCLUDE "PE/logging.include.bb2"
0000D57A <file.include.bb2@1894> XINCLUDE "PE/logging.include.bb2"
0000D5A4 <file.include.bb2@1896> XINCLUDE "PE/logging.include.bb2"
0000D5AC <file.include.bb2@1897> XINCLUDE "PE/logging.include.bb2"
0000D5AC <logging.include.bb2@8> XINCLUDE "PE/logging.include.bb2"
0000D64A <logging.include.bb2@30> XINCLUDE "PE/logging.include.bb2"
0000D652 <logging.include.bb2@31> XINCLUDE "PE/logging.include.bb2"
0000D65A <logging.include.bb2@32> XINCLUDE "PE/logging.include.bb2"
0000D662 <logging.include.bb2@33> XINCLUDE "PE/logging.include.bb2"
0000D69C <logging.include.bb2@124> XINCLUDE "PE/logging.include.bb2"
0000D6CE <logging.include.bb2@126> XINCLUDE "PE/logging.include.bb2"
0000D6E2 <logging.include.bb2@127> XINCLUDE "PE/logging.include.bb2"
0000D714 <logging.include.bb2@128> XINCLUDE "PE/logging.include.bb2"
0000DA96 <logging.include.bb2@129> XINCLUDE "PE/logging.include.bb2"
0000DAA4 <logging.include.bb2@130> XINCLUDE "PE/logging.include.bb2"
0000DAA8 <logging.include.bb2@131> XINCLUDE "PE/logging.include.bb2"
0000DD4A <logging.include.bb2@132> XINCLUDE "PE/logging.include.bb2"
0000DD64 <logging.include.bb2@134> XINCLUDE "PE/logging.include.bb2"
0000DD9E <logging.include.bb2@137> XINCLUDE "PE/logging.include.bb2"
0000DDF0 <logging.include.bb2@138> XINCLUDE "PE/logging.include.bb2"
0000DE04 <logging.include.bb2@139> XINCLUDE "PE/logging.include.bb2"
0000DE5A <logging.include.bb2@140> XINCLUDE "PE/logging.include.bb2"
0000DE5E <logging.include.bb2@141> XINCLUDE "PE/logging.include.bb2"
0000DEDA <logging.include.bb2@142> XINCLUDE "PE/logging.include.bb2"
0000DF4E <logging.include.bb2@143> XINCLUDE "PE/logging.include.bb2"
0000DF68 <logging.include.bb2@145> XINCLUDE "PE/logging.include.bb2"
0000DF68 <AmiBlitz3.ab2@89> XINCLUDE "PE/logging.include.bb2"
0000DF74 <AmiBlitz3.ab2@90> optimize 5                               ; added because the include change the optimize and or syntax level  tomsmart1
0000DF74 <translation.include.bb2@1> XINCLUDE "translation.include.bb2"
0000DF74 <phrasebook.include.bb2@1> XINCLUDE "translation.include.bb2"
0000DF74 <prefixtree.include.bb2@1> XINCLUDE "translation.include.bb2"
0000DF74 <dynamicarray.include.bb2@1> XINCLUDE "translation.include.bb2"
0000DF9C <dynamicarray.include.bb2@42> XINCLUDE "translation.include.bb2"
0000DFB6 <dynamicarray.include.bb2@55> XINCLUDE "translation.include.bb2"
0000DFC0 <dynamicarray.include.bb2@56> XINCLUDE "translation.include.bb2"
0000DFD2 <dynamicarray.include.bb2@57> XINCLUDE "translation.include.bb2"
0000DFF6 <dynamicarray.include.bb2@58> XINCLUDE "translation.include.bb2"
0000E004 <dynamicarray.include.bb2@60> XINCLUDE "translation.include.bb2"
0000E010 <dynamicarray.include.bb2@61> XINCLUDE "translation.include.bb2"
0000E014 <dynamicarray.include.bb2@63> XINCLUDE "translation.include.bb2"
0000E032 <dynamicarray.include.bb2@99> XINCLUDE "translation.include.bb2"
0000E04C <dynamicarray.include.bb2@101> XINCLUDE "translation.include.bb2"
0000E06C <dynamicarray.include.bb2@102> XINCLUDE "translation.include.bb2"
0000E076 <dynamicarray.include.bb2@103> XINCLUDE "translation.include.bb2"
0000E084 <dynamicarray.include.bb2@104> XINCLUDE "translation.include.bb2"
0000E090 <dynamicarray.include.bb2@105> XINCLUDE "translation.include.bb2"
0000E09E <dynamicarray.include.bb2@106> XINCLUDE "translation.include.bb2"
0000E0AA <dynamicarray.include.bb2@107> XINCLUDE "translation.include.bb2"
0000E0B6 <dynamicarray.include.bb2@108> XINCLUDE "translation.include.bb2"
0000E0C8 <dynamicarray.include.bb2@109> XINCLUDE "translation.include.bb2"
0000E0D8 <dynamicarray.include.bb2@110> XINCLUDE "translation.include.bb2"
0000E0E2 <dynamicarray.include.bb2@113> XINCLUDE "translation.include.bb2"
0000E0E8 <dynamicarray.include.bb2@114> XINCLUDE "translation.include.bb2"
0000E102 <dynamicarray.include.bb2@425> XINCLUDE "translation.include.bb2"
0000E10C <dynamicarray.include.bb2@427> XINCLUDE "translation.include.bb2"
0000E116 <dynamicarray.include.bb2@428> XINCLUDE "translation.include.bb2"
0000E126 <dynamicarray.include.bb2@429> XINCLUDE "translation.include.bb2"
0000E130 <dynamicarray.include.bb2@430> XINCLUDE "translation.include.bb2"
0000E142 <dynamicarray.include.bb2@431> XINCLUDE "translation.include.bb2"
0000E158 <dynamicarray.include.bb2@432> XINCLUDE "translation.include.bb2"
0000E162 <dynamicarray.include.bb2@433> XINCLUDE "translation.include.bb2"
0000E168 <dynamicarray.include.bb2@435> XINCLUDE "translation.include.bb2"
0000E16C <dynamicarray.include.bb2@437> XINCLUDE "translation.include.bb2"
0000E182 <dynamicarray.include.bb2@531> XINCLUDE "translation.include.bb2"
0000E188 <dynamicarray.include.bb2@533> XINCLUDE "translation.include.bb2"
0000E192 <dynamicarray.include.bb2@535> XINCLUDE "translation.include.bb2"
0000E1C8 <dynamicarray.include.bb2@536> XINCLUDE "translation.include.bb2"
0000E1D2 <dynamicarray.include.bb2@537> XINCLUDE "translation.include.bb2"
0000E1D6 <dynamicarray.include.bb2@538> XINCLUDE "translation.include.bb2"
0000E204 <dynamicarray.include.bb2@539> XINCLUDE "translation.include.bb2"
0000E204 <prefixtree.include.bb2@35> XINCLUDE "translation.include.bb2"
0000E21E <prefixtree.include.bb2@100> XINCLUDE "translation.include.bb2"
0000E228 <prefixtree.include.bb2@101> XINCLUDE "translation.include.bb2"
0000E250 <prefixtree.include.bb2@102> XINCLUDE "translation.include.bb2"
0000E272 <prefixtree.include.bb2@103> XINCLUDE "translation.include.bb2"
0000E28E <prefixtree.include.bb2@104> XINCLUDE "translation.include.bb2"
0000E29E <prefixtree.include.bb2@105> XINCLUDE "translation.include.bb2"
0000E2A2 <prefixtree.include.bb2@107> XINCLUDE "translation.include.bb2"
0000E2BC <prefixtree.include.bb2@123> XINCLUDE "translation.include.bb2"
0000E2DC <prefixtree.include.bb2@124> XINCLUDE "translation.include.bb2"
0000E2E6 <prefixtree.include.bb2@125> XINCLUDE "translation.include.bb2"
0000E300 <prefixtree.include.bb2@126> XINCLUDE "translation.include.bb2"
0000E30E <prefixtree.include.bb2@127> XINCLUDE "translation.include.bb2"
0000E31C <prefixtree.include.bb2@128> XINCLUDE "translation.include.bb2"
0000E32A <prefixtree.include.bb2@129> XINCLUDE "translation.include.bb2"
0000E338 <prefixtree.include.bb2@130> XINCLUDE "translation.include.bb2"
0000E344 <prefixtree.include.bb2@131> XINCLUDE "translation.include.bb2"
0000E352 <prefixtree.include.bb2@132> XINCLUDE "translation.include.bb2"
0000E360 <prefixtree.include.bb2@133> XINCLUDE "translation.include.bb2"
0000E36E <prefixtree.include.bb2@134> XINCLUDE "translation.include.bb2"
0000E37C <prefixtree.include.bb2@135> XINCLUDE "translation.include.bb2"
0000E396 <prefixtree.include.bb2@136> XINCLUDE "translation.include.bb2"
0000E3A4 <prefixtree.include.bb2@137> XINCLUDE "translation.include.bb2"
0000E3B4 <prefixtree.include.bb2@138> XINCLUDE "translation.include.bb2"
0000E3C4 <prefixtree.include.bb2@139> XINCLUDE "translation.include.bb2"
0000E3D4 <prefixtree.include.bb2@140> XINCLUDE "translation.include.bb2"
0000E3E2 <prefixtree.include.bb2@141> XINCLUDE "translation.include.bb2"
0000E3EC <prefixtree.include.bb2@143> XINCLUDE "translation.include.bb2"
0000E3F2 <prefixtree.include.bb2@144> XINCLUDE "translation.include.bb2"
0000E410 <prefixtree.include.bb2@162> XINCLUDE "translation.include.bb2"
0000E416 <prefixtree.include.bb2@163> XINCLUDE "translation.include.bb2"
0000E420 <prefixtree.include.bb2@164> XINCLUDE "translation.include.bb2"
0000E440 <prefixtree.include.bb2@165> XINCLUDE "translation.include.bb2"
0000E46E <prefixtree.include.bb2@166> XINCLUDE "translation.include.bb2"
0000E48C <prefixtree.include.bb2@167> XINCLUDE "translation.include.bb2"
0000E496 <prefixtree.include.bb2@168> XINCLUDE "translation.include.bb2"
0000E4A8 <prefixtree.include.bb2@169> XINCLUDE "translation.include.bb2"
0000E4D4 <prefixtree.include.bb2@170> XINCLUDE "translation.include.bb2"
0000E4EA <prefixtree.include.bb2@171> XINCLUDE "translation.include.bb2"
0000E4F6 <prefixtree.include.bb2@173> XINCLUDE "translation.include.bb2"
0000E502 <prefixtree.include.bb2@174> XINCLUDE "translation.include.bb2"
0000E508 <prefixtree.include.bb2@175> XINCLUDE "translation.include.bb2"
0000E50E <prefixtree.include.bb2@176> XINCLUDE "translation.include.bb2"
0000E514 <prefixtree.include.bb2@177> XINCLUDE "translation.include.bb2"
0000E51A <prefixtree.include.bb2@179> XINCLUDE "translation.include.bb2"
0000E520 <prefixtree.include.bb2@180> XINCLUDE "translation.include.bb2"
0000E52A <prefixtree.include.bb2@183> XINCLUDE "translation.include.bb2"
0000E530 <prefixtree.include.bb2@184> XINCLUDE "translation.include.bb2"
0000E562 <prefixtree.include.bb2@204> XINCLUDE "translation.include.bb2"
0000E57C <prefixtree.include.bb2@205> XINCLUDE "translation.include.bb2"
0000E594 <prefixtree.include.bb2@206> XINCLUDE "translation.include.bb2"
0000E5A8 <prefixtree.include.bb2@207> XINCLUDE "translation.include.bb2"
0000E5F8 <prefixtree.include.bb2@208> XINCLUDE "translation.include.bb2"
0000E618 <prefixtree.include.bb2@210> XINCLUDE "translation.include.bb2"
0000E62C <prefixtree.include.bb2@211> XINCLUDE "translation.include.bb2"
0000E63A <prefixtree.include.bb2@212> XINCLUDE "translation.include.bb2"
0000E646 <prefixtree.include.bb2@213> XINCLUDE "translation.include.bb2"
0000E64E <prefixtree.include.bb2@214> XINCLUDE "translation.include.bb2"
0000E656 <prefixtree.include.bb2@215> XINCLUDE "translation.include.bb2"
0000E65E <prefixtree.include.bb2@216> XINCLUDE "translation.include.bb2"
0000E666 <prefixtree.include.bb2@217> XINCLUDE "translation.include.bb2"
0000E66C <prefixtree.include.bb2@218> XINCLUDE "translation.include.bb2"
0000E67A <prefixtree.include.bb2@219> XINCLUDE "translation.include.bb2"
0000E69C <prefixtree.include.bb2@221> XINCLUDE "translation.include.bb2"
0000E6C8 <prefixtree.include.bb2@222> XINCLUDE "translation.include.bb2"
0000E6DA <prefixtree.include.bb2@224> XINCLUDE "translation.include.bb2"
0000E6E0 <prefixtree.include.bb2@225> XINCLUDE "translation.include.bb2"
0000E708 <prefixtree.include.bb2@227> XINCLUDE "translation.include.bb2"
0000E72C <prefixtree.include.bb2@228> XINCLUDE "translation.include.bb2"
0000E754 <prefixtree.include.bb2@229> XINCLUDE "translation.include.bb2"
0000E788 <prefixtree.include.bb2@230> XINCLUDE "translation.include.bb2"
0000E798 <prefixtree.include.bb2@231> XINCLUDE "translation.include.bb2"
0000E7A2 <prefixtree.include.bb2@232> XINCLUDE "translation.include.bb2"
0000E7B0 <prefixtree.include.bb2@233> XINCLUDE "translation.include.bb2"
0000E7C4 <prefixtree.include.bb2@234> XINCLUDE "translation.include.bb2"
0000E7CA <prefixtree.include.bb2@235> XINCLUDE "translation.include.bb2"
0000E7EA <prefixtree.include.bb2@236> XINCLUDE "translation.include.bb2"
0000E7F0 <prefixtree.include.bb2@237> XINCLUDE "translation.include.bb2"
0000E7F8 <prefixtree.include.bb2@239> XINCLUDE "translation.include.bb2"
0000E832 <prefixtree.include.bb2@241> XINCLUDE "translation.include.bb2"
0000E858 <prefixtree.include.bb2@242> XINCLUDE "translation.include.bb2"
0000E870 <prefixtree.include.bb2@243> XINCLUDE "translation.include.bb2"
0000E8A4 <prefixtree.include.bb2@244> XINCLUDE "translation.include.bb2"
0000E8AC <prefixtree.include.bb2@245> XINCLUDE "translation.include.bb2"
0000E8BA <prefixtree.include.bb2@247> XINCLUDE "translation.include.bb2"
0000E8C0 <prefixtree.include.bb2@249> XINCLUDE "translation.include.bb2"
0000E8D8 <prefixtree.include.bb2@250> XINCLUDE "translation.include.bb2"
0000E8DE <prefixtree.include.bb2@251> XINCLUDE "translation.include.bb2"
0000E8E4 <prefixtree.include.bb2@252> XINCLUDE "translation.include.bb2"
0000E8FE <prefixtree.include.bb2@253> XINCLUDE "translation.include.bb2"
0000E904 <prefixtree.include.bb2@256> XINCLUDE "translation.include.bb2"
0000E90A <prefixtree.include.bb2@258> XINCLUDE "translation.include.bb2"
0000E910 <prefixtree.include.bb2@260> XINCLUDE "translation.include.bb2"
0000E91E <prefixtree.include.bb2@261> XINCLUDE "translation.include.bb2"
0000E92C <prefixtree.include.bb2@262> XINCLUDE "translation.include.bb2"
0000E966 <prefixtree.include.bb2@264> XINCLUDE "translation.include.bb2"
0000E98C <prefixtree.include.bb2@265> XINCLUDE "translation.include.bb2"
0000E9A4 <prefixtree.include.bb2@266> XINCLUDE "translation.include.bb2"
0000E9B0 <prefixtree.include.bb2@269> XINCLUDE "translation.include.bb2"
0000E9BC <prefixtree.include.bb2@270> XINCLUDE "translation.include.bb2"
0000E9C8 <prefixtree.include.bb2@271> XINCLUDE "translation.include.bb2"
0000E9D4 <prefixtree.include.bb2@272> XINCLUDE "translation.include.bb2"
0000E9E0 <prefixtree.include.bb2@273> XINCLUDE "translation.include.bb2"
0000E9EA <prefixtree.include.bb2@274> XINCLUDE "translation.include.bb2"
0000E9F2 <prefixtree.include.bb2@276> XINCLUDE "translation.include.bb2"
0000EA0C <prefixtree.include.bb2@277> XINCLUDE "translation.include.bb2"
0000EA4A <prefixtree.include.bb2@324> XINCLUDE "translation.include.bb2"
0000EA50 <prefixtree.include.bb2@325> XINCLUDE "translation.include.bb2"
0000EA90 <prefixtree.include.bb2@326> XINCLUDE "translation.include.bb2"
0000EAE6 <prefixtree.include.bb2@327> XINCLUDE "translation.include.bb2"
0000EB58 <prefixtree.include.bb2@328> XINCLUDE "translation.include.bb2"
0000EB64 <prefixtree.include.bb2@330> XINCLUDE "translation.include.bb2"
0000EB72 <prefixtree.include.bb2@331> XINCLUDE "translation.include.bb2"
0000EBB8 <prefixtree.include.bb2@332> XINCLUDE "translation.include.bb2"
0000EC02 <prefixtree.include.bb2@333> XINCLUDE "translation.include.bb2"
0000EC3A <prefixtree.include.bb2@334> XINCLUDE "translation.include.bb2"
0000EC8E <prefixtree.include.bb2@335> XINCLUDE "translation.include.bb2"
0000EC94 <prefixtree.include.bb2@336> XINCLUDE "translation.include.bb2"
0000EC9A <prefixtree.include.bb2@337> XINCLUDE "translation.include.bb2"
0000ECA8 <prefixtree.include.bb2@339> XINCLUDE "translation.include.bb2"
0000ECB0 <prefixtree.include.bb2@340> XINCLUDE "translation.include.bb2"
0000ECEA <prefixtree.include.bb2@342> XINCLUDE "translation.include.bb2"
0000ED10 <prefixtree.include.bb2@343> XINCLUDE "translation.include.bb2"
0000ED28 <prefixtree.include.bb2@344> XINCLUDE "translation.include.bb2"
0000ED5E <prefixtree.include.bb2@345> XINCLUDE "translation.include.bb2"
0000ED74 <prefixtree.include.bb2@346> XINCLUDE "translation.include.bb2"
0000ED82 <prefixtree.include.bb2@348> XINCLUDE "translation.include.bb2"
0000ED9A <prefixtree.include.bb2@349> XINCLUDE "translation.include.bb2"
0000EDD2 <prefixtree.include.bb2@350> XINCLUDE "translation.include.bb2"
0000EDF8 <prefixtree.include.bb2@351> XINCLUDE "translation.include.bb2"
0000EE40 <prefixtree.include.bb2@352> XINCLUDE "translation.include.bb2"
0000EE46 <prefixtree.include.bb2@353> XINCLUDE "translation.include.bb2"
0000EE60 <prefixtree.include.bb2@355> XINCLUDE "translation.include.bb2"
0000EE6C <prefixtree.include.bb2@356> XINCLUDE "translation.include.bb2"
0000EE72 <prefixtree.include.bb2@357> XINCLUDE "translation.include.bb2"
0000EE9E <prefixtree.include.bb2@358> XINCLUDE "translation.include.bb2"
0000EEB2 <prefixtree.include.bb2@363> XINCLUDE "translation.include.bb2"
0000EEC0 <prefixtree.include.bb2@365> XINCLUDE "translation.include.bb2"
0000EEC8 <prefixtree.include.bb2@366> XINCLUDE "translation.include.bb2"
0000EF02 <prefixtree.include.bb2@368> XINCLUDE "translation.include.bb2"
0000EF28 <prefixtree.include.bb2@369> XINCLUDE "translation.include.bb2"
0000EF40 <prefixtree.include.bb2@370> XINCLUDE "translation.include.bb2"
0000EF7A <prefixtree.include.bb2@371> XINCLUDE "translation.include.bb2"
0000EFA4 <prefixtree.include.bb2@372> XINCLUDE "translation.include.bb2"
0000EFBC <prefixtree.include.bb2@373> XINCLUDE "translation.include.bb2"
0000EFEC <prefixtree.include.bb2@374> XINCLUDE "translation.include.bb2"
0000F018 <prefixtree.include.bb2@375> XINCLUDE "translation.include.bb2"
0000F034 <prefixtree.include.bb2@376> XINCLUDE "translation.include.bb2"
0000F042 <prefixtree.include.bb2@378> XINCLUDE "translation.include.bb2"
0000F050 <prefixtree.include.bb2@379> XINCLUDE "translation.include.bb2"
0000F08E <prefixtree.include.bb2@380> XINCLUDE "translation.include.bb2"
0000F0CA <prefixtree.include.bb2@381> XINCLUDE "translation.include.bb2"
0000F136 <prefixtree.include.bb2@382> XINCLUDE "translation.include.bb2"
0000F164 <prefixtree.include.bb2@383> XINCLUDE "translation.include.bb2"
0000F192 <prefixtree.include.bb2@384> XINCLUDE "translation.include.bb2"
0000F1DA <prefixtree.include.bb2@385> XINCLUDE "translation.include.bb2"
0000F1F4 <prefixtree.include.bb2@388> XINCLUDE "translation.include.bb2"
0000F23C <prefixtree.include.bb2@389> XINCLUDE "translation.include.bb2"
0000F25A <prefixtree.include.bb2@390> XINCLUDE "translation.include.bb2"
0000F278 <prefixtree.include.bb2@391> XINCLUDE "translation.include.bb2"
0000F292 <prefixtree.include.bb2@394> XINCLUDE "translation.include.bb2"
0000F29E <prefixtree.include.bb2@395> XINCLUDE "translation.include.bb2"
0000F2A4 <prefixtree.include.bb2@396> XINCLUDE "translation.include.bb2"
0000F2D0 <prefixtree.include.bb2@397> XINCLUDE "translation.include.bb2"
0000F2E8 <prefixtree.include.bb2@399> XINCLUDE "translation.include.bb2"
0000F2EE <prefixtree.include.bb2@400> XINCLUDE "translation.include.bb2"
0000F302 <prefixtree.include.bb2@403> XINCLUDE "translation.include.bb2"
0000F310 <prefixtree.include.bb2@405> XINCLUDE "translation.include.bb2"
0000F31E <prefixtree.include.bb2@406> XINCLUDE "translation.include.bb2"
0000F32C <prefixtree.include.bb2@407> XINCLUDE "translation.include.bb2"
0000F334 <prefixtree.include.bb2@408> XINCLUDE "translation.include.bb2"
0000F358 <prefixtree.include.bb2@409> XINCLUDE "translation.include.bb2"
0000F380 <prefixtree.include.bb2@410> XINCLUDE "translation.include.bb2"
0000F3A8 <prefixtree.include.bb2@411> XINCLUDE "translation.include.bb2"
0000F414 <prefixtree.include.bb2@412> XINCLUDE "translation.include.bb2"
0000F424 <prefixtree.include.bb2@413> XINCLUDE "translation.include.bb2"
0000F450 <prefixtree.include.bb2@414> XINCLUDE "translation.include.bb2"
0000F4A6 <prefixtree.include.bb2@416> XINCLUDE "translation.include.bb2"
0000F4B4 <prefixtree.include.bb2@417> XINCLUDE "translation.include.bb2"
0000F4C2 <prefixtree.include.bb2@418> XINCLUDE "translation.include.bb2"
0000F4C8 <prefixtree.include.bb2@419> XINCLUDE "translation.include.bb2"
0000F510 <prefixtree.include.bb2@421> XINCLUDE "translation.include.bb2"
0000F554 <prefixtree.include.bb2@422> XINCLUDE "translation.include.bb2"
0000F5A4 <prefixtree.include.bb2@425> XINCLUDE "translation.include.bb2"
0000F5FA <prefixtree.include.bb2@426> XINCLUDE "translation.include.bb2"
0000F666 <prefixtree.include.bb2@427> XINCLUDE "translation.include.bb2"
0000F66E <prefixtree.include.bb2@431> XINCLUDE "translation.include.bb2"
0000F6A8 <prefixtree.include.bb2@433> XINCLUDE "translation.include.bb2"
0000F6CE <prefixtree.include.bb2@434> XINCLUDE "translation.include.bb2"
0000F6E6 <prefixtree.include.bb2@435> XINCLUDE "translation.include.bb2"
0000F720 <prefixtree.include.bb2@436> XINCLUDE "translation.include.bb2"
0000F74A <prefixtree.include.bb2@437> XINCLUDE "translation.include.bb2"
0000F762 <prefixtree.include.bb2@438> XINCLUDE "translation.include.bb2"
0000F786 <prefixtree.include.bb2@440> XINCLUDE "translation.include.bb2"
0000F7DA <prefixtree.include.bb2@441> XINCLUDE "translation.include.bb2"
0000F7E2 <prefixtree.include.bb2@442> XINCLUDE "translation.include.bb2"
0000F7E8 <prefixtree.include.bb2@443> XINCLUDE "translation.include.bb2"
0000F84A <prefixtree.include.bb2@444> XINCLUDE "translation.include.bb2"
0000F876 <prefixtree.include.bb2@445> XINCLUDE "translation.include.bb2"
0000F892 <prefixtree.include.bb2@448> XINCLUDE "translation.include.bb2"
0000F8A0 <prefixtree.include.bb2@450> XINCLUDE "translation.include.bb2"
0000F8AE <prefixtree.include.bb2@451> XINCLUDE "translation.include.bb2"
0000F8BC <prefixtree.include.bb2@453> XINCLUDE "translation.include.bb2"
0000F8CA <prefixtree.include.bb2@454> XINCLUDE "translation.include.bb2"
0000F90E <prefixtree.include.bb2@455> XINCLUDE "translation.include.bb2"
0000F97A <prefixtree.include.bb2@456> XINCLUDE "translation.include.bb2"
0000F9A8 <prefixtree.include.bb2@457> XINCLUDE "translation.include.bb2"
0000F9BC <prefixtree.include.bb2@458> XINCLUDE "translation.include.bb2"
0000F9EE <prefixtree.include.bb2@459> XINCLUDE "translation.include.bb2"
0000FA38 <prefixtree.include.bb2@460> XINCLUDE "translation.include.bb2"
0000FA48 <prefixtree.include.bb2@461> XINCLUDE "translation.include.bb2"
0000FA7C <prefixtree.include.bb2@462> XINCLUDE "translation.include.bb2"
0000FA9E <prefixtree.include.bb2@463> XINCLUDE "translation.include.bb2"
0000FAAE <prefixtree.include.bb2@464> XINCLUDE "translation.include.bb2"
0000FAB6 <prefixtree.include.bb2@467> XINCLUDE "translation.include.bb2"
0000FAFA <prefixtree.include.bb2@468> XINCLUDE "translation.include.bb2"
0000FB66 <prefixtree.include.bb2@469> XINCLUDE "translation.include.bb2"
0000FB94 <prefixtree.include.bb2@470> XINCLUDE "translation.include.bb2"
0000FBB8 <prefixtree.include.bb2@472> XINCLUDE "translation.include.bb2"
0000FBFC <prefixtree.include.bb2@473> XINCLUDE "translation.include.bb2"
0000FC68 <prefixtree.include.bb2@474> XINCLUDE "translation.include.bb2"
0000FC96 <prefixtree.include.bb2@475> XINCLUDE "translation.include.bb2"
0000FCC4 <prefixtree.include.bb2@476> XINCLUDE "translation.include.bb2"
0000FCCC <prefixtree.include.bb2@477> XINCLUDE "translation.include.bb2"
0000FCFA <prefixtree.include.bb2@478> XINCLUDE "translation.include.bb2"
0000FD6C <prefixtree.include.bb2@479> XINCLUDE "translation.include.bb2"
0000FD72 <prefixtree.include.bb2@480> XINCLUDE "translation.include.bb2"
0000FDA0 <prefixtree.include.bb2@481> XINCLUDE "translation.include.bb2"
0000FE12 <prefixtree.include.bb2@482> XINCLUDE "translation.include.bb2"
0000FE30 <prefixtree.include.bb2@485> XINCLUDE "translation.include.bb2"
0000FE54 <prefixtree.include.bb2@486> XINCLUDE "translation.include.bb2"
0000FE6C <prefixtree.include.bb2@487> XINCLUDE "translation.include.bb2"
0000FE72 <prefixtree.include.bb2@488> XINCLUDE "translation.include.bb2"
0000FE78 <prefixtree.include.bb2@491> XINCLUDE "translation.include.bb2"
0000FE7A <prefixtree.include.bb2@493> XINCLUDE "translation.include.bb2"
0000FE84 <prefixtree.include.bb2@496> XINCLUDE "translation.include.bb2"
0000FEB0 <prefixtree.include.bb2@497> XINCLUDE "translation.include.bb2"
0000FED2 <prefixtree.include.bb2@515> XINCLUDE "translation.include.bb2"
0000FEDA <prefixtree.include.bb2@516> XINCLUDE "translation.include.bb2"
0000FEE0 <prefixtree.include.bb2@517> XINCLUDE "translation.include.bb2"
0000FEEE <prefixtree.include.bb2@518> XINCLUDE "translation.include.bb2"
0000FF28 <prefixtree.include.bb2@520> XINCLUDE "translation.include.bb2"
0000FF4E <prefixtree.include.bb2@521> XINCLUDE "translation.include.bb2"
0000FF66 <prefixtree.include.bb2@522> XINCLUDE "translation.include.bb2"
0000FFA0 <prefixtree.include.bb2@523> XINCLUDE "translation.include.bb2"
0000FFCA <prefixtree.include.bb2@524> XINCLUDE "translation.include.bb2"
0000FFE2 <prefixtree.include.bb2@526> XINCLUDE "translation.include.bb2"
0000FFFA <prefixtree.include.bb2@527> XINCLUDE "translation.include.bb2"
00010032 <prefixtree.include.bb2@528> XINCLUDE "translation.include.bb2"
0001003A <prefixtree.include.bb2@530> XINCLUDE "translation.include.bb2"
00010074 <prefixtree.include.bb2@532> XINCLUDE "translation.include.bb2"
00010086 <prefixtree.include.bb2@534> XINCLUDE "translation.include.bb2"
000100AC <prefixtree.include.bb2@535> XINCLUDE "translation.include.bb2"
000100C2 <prefixtree.include.bb2@536> XINCLUDE "translation.include.bb2"
000100E8 <prefixtree.include.bb2@537> XINCLUDE "translation.include.bb2"
000100FC <prefixtree.include.bb2@538> XINCLUDE "translation.include.bb2"
00010114 <prefixtree.include.bb2@540> XINCLUDE "translation.include.bb2"
00010126 <prefixtree.include.bb2@541> XINCLUDE "translation.include.bb2"
00010130 <prefixtree.include.bb2@542> XINCLUDE "translation.include.bb2"
00010144 <prefixtree.include.bb2@543> XINCLUDE "translation.include.bb2"
0001015E <prefixtree.include.bb2@560> XINCLUDE "translation.include.bb2"
0001017C <prefixtree.include.bb2@561> XINCLUDE "translation.include.bb2"
0001018E <prefixtree.include.bb2@562> XINCLUDE "translation.include.bb2"
000101AC <prefixtree.include.bb2@563> XINCLUDE "translation.include.bb2"
000101CE <prefixtree.include.bb2@564> XINCLUDE "translation.include.bb2"
000101EA <prefixtree.include.bb2@565> XINCLUDE "translation.include.bb2"
0001020A <prefixtree.include.bb2@566> XINCLUDE "translation.include.bb2"
00010214 <prefixtree.include.bb2@567> XINCLUDE "translation.include.bb2"
0001021A <prefixtree.include.bb2@568> XINCLUDE "translation.include.bb2"
00010224 <prefixtree.include.bb2@569> XINCLUDE "translation.include.bb2"
00010230 <prefixtree.include.bb2@571> XINCLUDE "translation.include.bb2"
00010236 <prefixtree.include.bb2@572> XINCLUDE "translation.include.bb2"
00010264 <prefixtree.include.bb2@591> XINCLUDE "translation.include.bb2"
0001028C <prefixtree.include.bb2@592> XINCLUDE "translation.include.bb2"
000102CC <prefixtree.include.bb2@593> XINCLUDE "translation.include.bb2"
000102E4 <prefixtree.include.bb2@594> XINCLUDE "translation.include.bb2"
0001032A <prefixtree.include.bb2@595> XINCLUDE "translation.include.bb2"
00010354 <prefixtree.include.bb2@598> XINCLUDE "translation.include.bb2"
00010382 <prefixtree.include.bb2@599> XINCLUDE "translation.include.bb2"
0001039C <prefixtree.include.bb2@815> XINCLUDE "translation.include.bb2"
000103A4 <prefixtree.include.bb2@816> XINCLUDE "translation.include.bb2"
000103BC <prefixtree.include.bb2@817> XINCLUDE "translation.include.bb2"
000103C6 <prefixtree.include.bb2@818> XINCLUDE "translation.include.bb2"
000103D8 <prefixtree.include.bb2@819> XINCLUDE "translation.include.bb2"
00010410 <prefixtree.include.bb2@820> XINCLUDE "translation.include.bb2"
0001041E <prefixtree.include.bb2@821> XINCLUDE "translation.include.bb2"
0001042A <prefixtree.include.bb2@822> XINCLUDE "translation.include.bb2"
00010446 <prefixtree.include.bb2@823> XINCLUDE "translation.include.bb2"
00010468 <prefixtree.include.bb2@824> XINCLUDE "translation.include.bb2"
0001048A <prefixtree.include.bb2@825> XINCLUDE "translation.include.bb2"
000104AC <prefixtree.include.bb2@826> XINCLUDE "translation.include.bb2"
000104CE <prefixtree.include.bb2@827> XINCLUDE "translation.include.bb2"
000104EA <prefixtree.include.bb2@828> XINCLUDE "translation.include.bb2"
00010508 <prefixtree.include.bb2@829> XINCLUDE "translation.include.bb2"
0001051C <prefixtree.include.bb2@830> XINCLUDE "translation.include.bb2"
00010522 <prefixtree.include.bb2@832> XINCLUDE "translation.include.bb2"
00010524 <prefixtree.include.bb2@834> XINCLUDE "translation.include.bb2"
0001052A <prefixtree.include.bb2@835> XINCLUDE "translation.include.bb2"
00010534 <prefixtree.include.bb2@837> XINCLUDE "translation.include.bb2"
0001053A <prefixtree.include.bb2@838> XINCLUDE "translation.include.bb2"
00010558 <prefixtree.include.bb2@856> XINCLUDE "translation.include.bb2"
0001055E <prefixtree.include.bb2@857> XINCLUDE "translation.include.bb2"
00010582 <prefixtree.include.bb2@858> XINCLUDE "translation.include.bb2"
000105A0 <prefixtree.include.bb2@859> XINCLUDE "translation.include.bb2"
000105CE <prefixtree.include.bb2@860> XINCLUDE "translation.include.bb2"
000105FC <prefixtree.include.bb2@861> XINCLUDE "translation.include.bb2"
0001062A <prefixtree.include.bb2@862> XINCLUDE "translation.include.bb2"
00010658 <prefixtree.include.bb2@863> XINCLUDE "translation.include.bb2"
0001068C <prefixtree.include.bb2@864> XINCLUDE "translation.include.bb2"
0001069C <prefixtree.include.bb2@865> XINCLUDE "translation.include.bb2"
000106A6 <prefixtree.include.bb2@867> XINCLUDE "translation.include.bb2"
000106AC <prefixtree.include.bb2@868> XINCLUDE "translation.include.bb2"
000106AC <phrasebook.include.bb2@34> XINCLUDE "translation.include.bb2"
000106F6 <phrasebook.include.bb2@58> XINCLUDE "translation.include.bb2"
00010716 <phrasebook.include.bb2@59> XINCLUDE "translation.include.bb2"
00010720 <phrasebook.include.bb2@60> XINCLUDE "translation.include.bb2"
00010734 <phrasebook.include.bb2@61> XINCLUDE "translation.include.bb2"
0001077A <phrasebook.include.bb2@62> XINCLUDE "translation.include.bb2"
000107C0 <phrasebook.include.bb2@63> XINCLUDE "translation.include.bb2"
00010806 <phrasebook.include.bb2@64> XINCLUDE "translation.include.bb2"
00010810 <phrasebook.include.bb2@66> XINCLUDE "translation.include.bb2"
0001082C <phrasebook.include.bb2@67> XINCLUDE "translation.include.bb2"
00010856 <phrasebook.include.bb2@70> XINCLUDE "translation.include.bb2"
000108D4 <phrasebook.include.bb2@71> XINCLUDE "translation.include.bb2"
00010952 <phrasebook.include.bb2@72> XINCLUDE "translation.include.bb2"
000109D0 <phrasebook.include.bb2@73> XINCLUDE "translation.include.bb2"
00010A4E <phrasebook.include.bb2@74> XINCLUDE "translation.include.bb2"
00010ACC <phrasebook.include.bb2@75> XINCLUDE "translation.include.bb2"
00010B4A <phrasebook.include.bb2@76> XINCLUDE "translation.include.bb2"
00010BC8 <phrasebook.include.bb2@77> XINCLUDE "translation.include.bb2"
00010C46 <phrasebook.include.bb2@78> XINCLUDE "translation.include.bb2"
00010CC4 <phrasebook.include.bb2@79> XINCLUDE "translation.include.bb2"
00010D42 <phrasebook.include.bb2@80> XINCLUDE "translation.include.bb2"
00010DC6 <phrasebook.include.bb2@81> XINCLUDE "translation.include.bb2"
00010DF6 <phrasebook.include.bb2@82> XINCLUDE "translation.include.bb2"
00010E52 <phrasebook.include.bb2@84> XINCLUDE "translation.include.bb2"
00010E7E <phrasebook.include.bb2@85> XINCLUDE "translation.include.bb2"
00010F48 <phrasebook.include.bb2@86> XINCLUDE "translation.include.bb2"
00010F56 <phrasebook.include.bb2@88> XINCLUDE "translation.include.bb2"
00010F94 <phrasebook.include.bb2@89> XINCLUDE "translation.include.bb2"
00011018 <phrasebook.include.bb2@90> XINCLUDE "translation.include.bb2"
00011042 <phrasebook.include.bb2@91> XINCLUDE "translation.include.bb2"
00011060 <phrasebook.include.bb2@92> XINCLUDE "translation.include.bb2"
0001107A <phrasebook.include.bb2@106> XINCLUDE "translation.include.bb2"
00011084 <phrasebook.include.bb2@107> XINCLUDE "translation.include.bb2"
00011090 <phrasebook.include.bb2@108> XINCLUDE "translation.include.bb2"
000110A0 <phrasebook.include.bb2@109> XINCLUDE "translation.include.bb2"
000110B0 <phrasebook.include.bb2@110> XINCLUDE "translation.include.bb2"
000110C0 <phrasebook.include.bb2@111> XINCLUDE "translation.include.bb2"
000110D0 <phrasebook.include.bb2@112> XINCLUDE "translation.include.bb2"
000110D4 <phrasebook.include.bb2@114> XINCLUDE "translation.include.bb2"
00011112 <phrasebook.include.bb2@131> XINCLUDE "translation.include.bb2"
0001116A <phrasebook.include.bb2@132> XINCLUDE "translation.include.bb2"
000111C6 <phrasebook.include.bb2@133> XINCLUDE "translation.include.bb2"
00011250 <phrasebook.include.bb2@134> XINCLUDE "translation.include.bb2"
000112CE <phrasebook.include.bb2@135> XINCLUDE "translation.include.bb2"
000112E8 <phrasebook.include.bb2@137> XINCLUDE "translation.include.bb2"
00011316 <phrasebook.include.bb2@155> XINCLUDE "translation.include.bb2"
00011352 <phrasebook.include.bb2@156> XINCLUDE "translation.include.bb2"
00011420 <phrasebook.include.bb2@158> XINCLUDE "translation.include.bb2"
000114EE <phrasebook.include.bb2@159> XINCLUDE "translation.include.bb2"
0001153A <phrasebook.include.bb2@161> XINCLUDE "translation.include.bb2"
000115B8 <phrasebook.include.bb2@162> XINCLUDE "translation.include.bb2"
00011636 <phrasebook.include.bb2@163> XINCLUDE "translation.include.bb2"
00011694 <phrasebook.include.bb2@165> XINCLUDE "translation.include.bb2"
0001172A <phrasebook.include.bb2@166> XINCLUDE "translation.include.bb2"
00011762 <phrasebook.include.bb2@168> XINCLUDE "translation.include.bb2"
000117C0 <phrasebook.include.bb2@169> XINCLUDE "translation.include.bb2"
00011848 <phrasebook.include.bb2@170> XINCLUDE "translation.include.bb2"
00011850 <phrasebook.include.bb2@172> XINCLUDE "translation.include.bb2"
000118BA <phrasebook.include.bb2@174> XINCLUDE "translation.include.bb2"
00011926 <phrasebook.include.bb2@175> XINCLUDE "translation.include.bb2"
00011964 <phrasebook.include.bb2@176> XINCLUDE "translation.include.bb2"
000119EC <phrasebook.include.bb2@177> XINCLUDE "translation.include.bb2"
00011A18 <phrasebook.include.bb2@187> XINCLUDE "translation.include.bb2"
00011A74 <phrasebook.include.bb2@188> XINCLUDE "translation.include.bb2"
00011B3C <phrasebook.include.bb2@189> XINCLUDE "translation.include.bb2"
00011BA0 <phrasebook.include.bb2@190> XINCLUDE "translation.include.bb2"
00011BA6 <phrasebook.include.bb2@191> XINCLUDE "translation.include.bb2"
00011BDA <phrasebook.include.bb2@192> XINCLUDE "translation.include.bb2"
00011CA8 <phrasebook.include.bb2@196> XINCLUDE "translation.include.bb2"
00011D76 <phrasebook.include.bb2@197> XINCLUDE "translation.include.bb2"
00011DA0 <phrasebook.include.bb2@199> XINCLUDE "translation.include.bb2"
00011DBE <phrasebook.include.bb2@200> XINCLUDE "translation.include.bb2"
00011DEC <phrasebook.include.bb2@204> XINCLUDE "translation.include.bb2"
00011E28 <phrasebook.include.bb2@205> XINCLUDE "translation.include.bb2"
00011E98 <phrasebook.include.bb2@206> XINCLUDE "translation.include.bb2"
00011EA0 <phrasebook.include.bb2@207> XINCLUDE "translation.include.bb2"
00011EF2 <phrasebook.include.bb2@208> XINCLUDE "translation.include.bb2"
00011F1A <phrasebook.include.bb2@209> XINCLUDE "translation.include.bb2"
00011F32 <phrasebook.include.bb2@210> XINCLUDE "translation.include.bb2"
00011FE6 <phrasebook.include.bb2@211> XINCLUDE "translation.include.bb2"
00011FF4 <phrasebook.include.bb2@212> XINCLUDE "translation.include.bb2"
0001204A <phrasebook.include.bb2@213> XINCLUDE "translation.include.bb2"
000120A8 <phrasebook.include.bb2@214> XINCLUDE "translation.include.bb2"
000120AE <phrasebook.include.bb2@215> XINCLUDE "translation.include.bb2"
00012132 <phrasebook.include.bb2@216> XINCLUDE "translation.include.bb2"
000121B6 <phrasebook.include.bb2@217> XINCLUDE "translation.include.bb2"
0001223A <phrasebook.include.bb2@218> XINCLUDE "translation.include.bb2"
000122B8 <phrasebook.include.bb2@219> XINCLUDE "translation.include.bb2"
00012336 <phrasebook.include.bb2@220> XINCLUDE "translation.include.bb2"
000123B4 <phrasebook.include.bb2@221> XINCLUDE "translation.include.bb2"
00012432 <phrasebook.include.bb2@222> XINCLUDE "translation.include.bb2"
000124B0 <phrasebook.include.bb2@223> XINCLUDE "translation.include.bb2"
0001252E <phrasebook.include.bb2@224> XINCLUDE "translation.include.bb2"
000125AC <phrasebook.include.bb2@225> XINCLUDE "translation.include.bb2"
000125D6 <phrasebook.include.bb2@226> XINCLUDE "translation.include.bb2"
000125F4 <phrasebook.include.bb2@227> XINCLUDE "translation.include.bb2"
00012622 <phrasebook.include.bb2@245> XINCLUDE "translation.include.bb2"
00012666 <phrasebook.include.bb2@246> XINCLUDE "translation.include.bb2"
0001266C <phrasebook.include.bb2@247> XINCLUDE "translation.include.bb2"
00012686 <phrasebook.include.bb2@248> XINCLUDE "translation.include.bb2"
000126A2 <phrasebook.include.bb2@249> XINCLUDE "translation.include.bb2"
000126D6 <phrasebook.include.bb2@250> XINCLUDE "translation.include.bb2"
000126FA <phrasebook.include.bb2@251> XINCLUDE "translation.include.bb2"
00012722 <phrasebook.include.bb2@252> XINCLUDE "translation.include.bb2"
0001278E <phrasebook.include.bb2@253> XINCLUDE "translation.include.bb2"
000127EC <phrasebook.include.bb2@256> XINCLUDE "translation.include.bb2"
0001284A <phrasebook.include.bb2@257> XINCLUDE "translation.include.bb2"
00012896 <phrasebook.include.bb2@258> XINCLUDE "translation.include.bb2"
000128F0 <phrasebook.include.bb2@259> XINCLUDE "translation.include.bb2"
000128F6 <phrasebook.include.bb2@260> XINCLUDE "translation.include.bb2"
000128FC <phrasebook.include.bb2@262> XINCLUDE "translation.include.bb2"
00012906 <phrasebook.include.bb2@263> XINCLUDE "translation.include.bb2"
00012910 <phrasebook.include.bb2@264> XINCLUDE "translation.include.bb2"
0001292A <phrasebook.include.bb2@265> XINCLUDE "translation.include.bb2"
00012958 <phrasebook.include.bb2@282> XINCLUDE "translation.include.bb2"
0001295E <phrasebook.include.bb2@283> XINCLUDE "translation.include.bb2"
000129A2 <phrasebook.include.bb2@284> XINCLUDE "translation.include.bb2"
000129BC <phrasebook.include.bb2@285> XINCLUDE "translation.include.bb2"
000129CC <phrasebook.include.bb2@286> XINCLUDE "translation.include.bb2"
000129D6 <phrasebook.include.bb2@287> XINCLUDE "translation.include.bb2"
000129E2 <phrasebook.include.bb2@288> XINCLUDE "translation.include.bb2"
000129EC <phrasebook.include.bb2@289> XINCLUDE "translation.include.bb2"
00012A10 <phrasebook.include.bb2@292> XINCLUDE "translation.include.bb2"
00012A58 <phrasebook.include.bb2@293> XINCLUDE "translation.include.bb2"
00012AA0 <phrasebook.include.bb2@294> XINCLUDE "translation.include.bb2"
00012AE8 <phrasebook.include.bb2@295> XINCLUDE "translation.include.bb2"
00012AFE <phrasebook.include.bb2@296> XINCLUDE "translation.include.bb2"
00012B12 <phrasebook.include.bb2@297> XINCLUDE "translation.include.bb2"
00012B1C <phrasebook.include.bb2@299> XINCLUDE "translation.include.bb2"
00012B26 <phrasebook.include.bb2@300> XINCLUDE "translation.include.bb2"
00012B40 <phrasebook.include.bb2@301> XINCLUDE "translation.include.bb2"
00012B6A <phrasebook.include.bb2@317> XINCLUDE "translation.include.bb2"
00012BAE <phrasebook.include.bb2@318> XINCLUDE "translation.include.bb2"
00012BC8 <phrasebook.include.bb2@319> XINCLUDE "translation.include.bb2"
00012C26 <phrasebook.include.bb2@320> XINCLUDE "translation.include.bb2"
00012C40 <phrasebook.include.bb2@321> XINCLUDE "translation.include.bb2"
00012C58 <phrasebook.include.bb2@323> XINCLUDE "translation.include.bb2"
00012C62 <phrasebook.include.bb2@324> XINCLUDE "translation.include.bb2"
00012C7E <phrasebook.include.bb2@325> XINCLUDE "translation.include.bb2"
00012C8C <phrasebook.include.bb2@326> XINCLUDE "translation.include.bb2"
00012C98 <phrasebook.include.bb2@327> XINCLUDE "translation.include.bb2"
00012CE4 <phrasebook.include.bb2@328> XINCLUDE "translation.include.bb2"
00012D36 <phrasebook.include.bb2@329> XINCLUDE "translation.include.bb2"
00012D88 <phrasebook.include.bb2@330> XINCLUDE "translation.include.bb2"
00012D9C <phrasebook.include.bb2@331> XINCLUDE "translation.include.bb2"
00012DAC <phrasebook.include.bb2@332> XINCLUDE "translation.include.bb2"
00012DB2 <phrasebook.include.bb2@333> XINCLUDE "translation.include.bb2"
00012DB4 <phrasebook.include.bb2@335> XINCLUDE "translation.include.bb2"
00012DBA <phrasebook.include.bb2@336> XINCLUDE "translation.include.bb2"
00012DC4 <phrasebook.include.bb2@338> XINCLUDE "translation.include.bb2"
00012DCE <phrasebook.include.bb2@339> XINCLUDE "translation.include.bb2"
00012DE8 <phrasebook.include.bb2@340> XINCLUDE "translation.include.bb2"
00012E12 <phrasebook.include.bb2@379> XINCLUDE "translation.include.bb2"
00012E28 <phrasebook.include.bb2@380> XINCLUDE "translation.include.bb2"
00012E32 <phrasebook.include.bb2@381> XINCLUDE "translation.include.bb2"
00012EAA <phrasebook.include.bb2@382> XINCLUDE "translation.include.bb2"
00012EE6 <phrasebook.include.bb2@383> XINCLUDE "translation.include.bb2"
00012EF6 <phrasebook.include.bb2@384> XINCLUDE "translation.include.bb2"
00012F16 <phrasebook.include.bb2@385> XINCLUDE "translation.include.bb2"
00012F36 <phrasebook.include.bb2@386> XINCLUDE "translation.include.bb2"
00012F56 <phrasebook.include.bb2@387> XINCLUDE "translation.include.bb2"
00012F8C <phrasebook.include.bb2@388> XINCLUDE "translation.include.bb2"
00012FB4 <phrasebook.include.bb2@389> XINCLUDE "translation.include.bb2"
00012FEC <phrasebook.include.bb2@390> XINCLUDE "translation.include.bb2"
00013050 <phrasebook.include.bb2@391> XINCLUDE "translation.include.bb2"
00013070 <phrasebook.include.bb2@392> XINCLUDE "translation.include.bb2"
000130EC <phrasebook.include.bb2@393> XINCLUDE "translation.include.bb2"
00013124 <phrasebook.include.bb2@396> XINCLUDE "translation.include.bb2"
0001319A <phrasebook.include.bb2@397> XINCLUDE "translation.include.bb2"
000131BA <phrasebook.include.bb2@398> XINCLUDE "translation.include.bb2"
00013236 <phrasebook.include.bb2@399> XINCLUDE "translation.include.bb2"
0001326E <phrasebook.include.bb2@402> XINCLUDE "translation.include.bb2"
000132E4 <phrasebook.include.bb2@403> XINCLUDE "translation.include.bb2"
00013304 <phrasebook.include.bb2@404> XINCLUDE "translation.include.bb2"
00013380 <phrasebook.include.bb2@405> XINCLUDE "translation.include.bb2"
000133AC <phrasebook.include.bb2@408> XINCLUDE "translation.include.bb2"
000133B4 <phrasebook.include.bb2@409> XINCLUDE "translation.include.bb2"
000133FA <phrasebook.include.bb2@410> XINCLUDE "translation.include.bb2"
0001341A <phrasebook.include.bb2@411> XINCLUDE "translation.include.bb2"
00013424 <phrasebook.include.bb2@412> XINCLUDE "translation.include.bb2"
0001343C <phrasebook.include.bb2@413> XINCLUDE "translation.include.bb2"
0001344C <phrasebook.include.bb2@414> XINCLUDE "translation.include.bb2"
00013484 <phrasebook.include.bb2@415> XINCLUDE "translation.include.bb2"
000134B6 <phrasebook.include.bb2@416> XINCLUDE "translation.include.bb2"
000134C8 <phrasebook.include.bb2@419> XINCLUDE "translation.include.bb2"
0001354A <phrasebook.include.bb2@420> XINCLUDE "translation.include.bb2"
00013554 <phrasebook.include.bb2@421> XINCLUDE "translation.include.bb2"
00013586 <phrasebook.include.bb2@422> XINCLUDE "translation.include.bb2"
000135B8 <phrasebook.include.bb2@423> XINCLUDE "translation.include.bb2"
000135E4 <phrasebook.include.bb2@428> XINCLUDE "translation.include.bb2"
00013610 <phrasebook.include.bb2@429> XINCLUDE "translation.include.bb2"
00013632 <phrasebook.include.bb2@430> XINCLUDE "translation.include.bb2"
0001363C <phrasebook.include.bb2@432> XINCLUDE "translation.include.bb2"
00013656 <phrasebook.include.bb2@433> XINCLUDE "translation.include.bb2"
00013656 <translation.include.bb2@31> XINCLUDE "translation.include.bb2"
0001366C <translation.include.bb2@43> XINCLUDE "translation.include.bb2"
00013688 <translation.include.bb2@44> XINCLUDE "translation.include.bb2"
0001368A <translation.include.bb2@45> XINCLUDE "translation.include.bb2"
000136B8 <translation.include.bb2@46> XINCLUDE "translation.include.bb2"
000136B8 <AmiBlitz3.ab2@93> XINCLUDE "translation.include.bb2"
000136B8 <ted.include.ab3@1> XINCLUDE "/Shared/ted.include.ab3"
000136D2 <ted.include.ab3@161> XINCLUDE "/Shared/ted.include.ab3"
000136DC <ted.include.ab3@162> XINCLUDE "/Shared/ted.include.ab3"
000136FE <ted.include.ab3@163> XINCLUDE "/Shared/ted.include.ab3"
00013716 <ted.include.ab3@164> XINCLUDE "/Shared/ted.include.ab3"
00013730 <ted.include.ab3@166> XINCLUDE "/Shared/ted.include.ab3"
00013762 <ted.include.ab3@167> XINCLUDE "/Shared/ted.include.ab3"
0001376C <ted.include.ab3@168> XINCLUDE "/Shared/ted.include.ab3"
00013772 <ted.include.ab3@170> XINCLUDE "/Shared/ted.include.ab3"
00013784 <ted.include.ab3@171> XINCLUDE "/Shared/ted.include.ab3"
000137EC <ted.include.ab3@172> XINCLUDE "/Shared/ted.include.ab3"
000137F2 <ted.include.ab3@173> XINCLUDE "/Shared/ted.include.ab3"
00013820 <ted.include.ab3@174> XINCLUDE "/Shared/ted.include.ab3"
0001382A <ted.include.ab3@177> XINCLUDE "/Shared/ted.include.ab3"
00013830 <ted.include.ab3@178> XINCLUDE "/Shared/ted.include.ab3"
00013846 <ted.include.ab3@180> XINCLUDE "/Shared/ted.include.ab3"
00013850 <ted.include.ab3@181> XINCLUDE "/Shared/ted.include.ab3"
00013868 <ted.include.ab3@183> XINCLUDE "/Shared/ted.include.ab3"
0001386A <ted.include.ab3@185> XINCLUDE "/Shared/ted.include.ab3"
00013898 <ted.include.ab3@186> XINCLUDE "/Shared/ted.include.ab3"
000138B2 <ted.include.ab3@190> XINCLUDE "/Shared/ted.include.ab3"
000138C8 <ted.include.ab3@191> XINCLUDE "/Shared/ted.include.ab3"
000138FC <ted.include.ab3@192> XINCLUDE "/Shared/ted.include.ab3"
00013900 <ted.include.ab3@194> XINCLUDE "/Shared/ted.include.ab3"
0001391A <ted.include.ab3@196> XINCLUDE "/Shared/ted.include.ab3"
00013930 <ted.include.ab3@197> XINCLUDE "/Shared/ted.include.ab3"
00013964 <ted.include.ab3@198> XINCLUDE "/Shared/ted.include.ab3"
00013968 <ted.include.ab3@200> XINCLUDE "/Shared/ted.include.ab3"
00013982 <ted.include.ab3@216> XINCLUDE "/Shared/ted.include.ab3"
00013998 <ted.include.ab3@217> XINCLUDE "/Shared/ted.include.ab3"
000139CC <ted.include.ab3@218> XINCLUDE "/Shared/ted.include.ab3"
000139D0 <ted.include.ab3@220> XINCLUDE "/Shared/ted.include.ab3"
000139EA <ted.include.ab3@236> XINCLUDE "/Shared/ted.include.ab3"
00013A00 <ted.include.ab3@237> XINCLUDE "/Shared/ted.include.ab3"
00013A34 <ted.include.ab3@238> XINCLUDE "/Shared/ted.include.ab3"
00013A38 <ted.include.ab3@240> XINCLUDE "/Shared/ted.include.ab3"
00013A52 <ted.include.ab3@242> XINCLUDE "/Shared/ted.include.ab3"
00013A68 <ted.include.ab3@243> XINCLUDE "/Shared/ted.include.ab3"
00013A9C <ted.include.ab3@244> XINCLUDE "/Shared/ted.include.ab3"
00013AA0 <ted.include.ab3@246> XINCLUDE "/Shared/ted.include.ab3"
00013AA0 <AmiBlitz3.ab2@94> XINCLUDE "/Shared/ted.include.ab3"
00013AA0 <CLIModeSupport.ab3@1> XINCLUDE "CLIModeSupport.ab3"
00013AB6 <CLIModeSupport.ab3@4> XINCLUDE "CLIModeSupport.ab3"
00013ACC <CLIModeSupport.ab3@7> XINCLUDE "CLIModeSupport.ab3"
00013ADA <CLIModeSupport.ab3@8> XINCLUDE "CLIModeSupport.ab3"
00013AE8 <CLIModeSupport.ab3@9> XINCLUDE "CLIModeSupport.ab3"
00013AF2 <CLIModeSupport.ab3@11> XINCLUDE "CLIModeSupport.ab3"
00013B04 <CLIModeSupport.ab3@12> XINCLUDE "CLIModeSupport.ab3"
00013B16 <CLIModeSupport.ab3@13> XINCLUDE "CLIModeSupport.ab3"
00013B1C <CLIModeSupport.ab3@14> XINCLUDE "CLIModeSupport.ab3"
00013B4A <CLIModeSupport.ab3@15> XINCLUDE "CLIModeSupport.ab3"
00013B4E <CLIModeSupport.ab3@18> XINCLUDE "CLIModeSupport.ab3"
00013B64 <CLIModeSupport.ab3@21> XINCLUDE "CLIModeSupport.ab3"
00013B7A <CLIModeSupport.ab3@23> XINCLUDE "CLIModeSupport.ab3"
00013B86 <CLIModeSupport.ab3@24> XINCLUDE "CLIModeSupport.ab3"
00013B92 <CLIModeSupport.ab3@25> XINCLUDE "CLIModeSupport.ab3"
00013B9A <CLIModeSupport.ab3@26> XINCLUDE "CLIModeSupport.ab3"
00013BA2 <CLIModeSupport.ab3@27> XINCLUDE "CLIModeSupport.ab3"
00013BA6 <CLIModeSupport.ab3@28> XINCLUDE "CLIModeSupport.ab3"
00013BD0 <CLIModeSupport.ab3@47> XINCLUDE "CLIModeSupport.ab3"
00013BFC <CLIModeSupport.ab3@49> XINCLUDE "CLIModeSupport.ab3"
00013C0E <CLIModeSupport.ab3@50> XINCLUDE "CLIModeSupport.ab3"
00013C26 <CLIModeSupport.ab3@52> XINCLUDE "CLIModeSupport.ab3"
00013C3C <CLIModeSupport.ab3@56> XINCLUDE "CLIModeSupport.ab3"
00013C42 <CLIModeSupport.ab3@58> XINCLUDE "CLIModeSupport.ab3"
00013C78 <CLIModeSupport.ab3@61> XINCLUDE "CLIModeSupport.ab3"
00013CB0 <CLIModeSupport.ab3@62> XINCLUDE "CLIModeSupport.ab3"
00013CE8 <CLIModeSupport.ab3@63> XINCLUDE "CLIModeSupport.ab3"
00013D20 <CLIModeSupport.ab3@64> XINCLUDE "CLIModeSupport.ab3"
00013D58 <CLIModeSupport.ab3@65> XINCLUDE "CLIModeSupport.ab3"
00013D90 <CLIModeSupport.ab3@66> XINCLUDE "CLIModeSupport.ab3"
00013DC8 <CLIModeSupport.ab3@67> XINCLUDE "CLIModeSupport.ab3"
00013E00 <CLIModeSupport.ab3@68> XINCLUDE "CLIModeSupport.ab3"
00013E38 <CLIModeSupport.ab3@69> XINCLUDE "CLIModeSupport.ab3"
00013E70 <CLIModeSupport.ab3@70> XINCLUDE "CLIModeSupport.ab3"
00013EA8 <CLIModeSupport.ab3@71> XINCLUDE "CLIModeSupport.ab3"
00013EE0 <CLIModeSupport.ab3@72> XINCLUDE "CLIModeSupport.ab3"
00013F18 <CLIModeSupport.ab3@73> XINCLUDE "CLIModeSupport.ab3"
00013F22 <CLIModeSupport.ab3@74> XINCLUDE "CLIModeSupport.ab3"
00013F2C <CLIModeSupport.ab3@76> XINCLUDE "CLIModeSupport.ab3"
00013F36 <CLIModeSupport.ab3@77> XINCLUDE "CLIModeSupport.ab3"
00013F60 <CLIModeSupport.ab3@81> XINCLUDE "CLIModeSupport.ab3"
00013F6A <CLIModeSupport.ab3@82> XINCLUDE "CLIModeSupport.ab3"
00013F6E <CLIModeSupport.ab3@83> XINCLUDE "CLIModeSupport.ab3"
00013FA2 <CLIModeSupport.ab3@84> XINCLUDE "CLIModeSupport.ab3"
00013FA8 <CLIModeSupport.ab3@85> XINCLUDE "CLIModeSupport.ab3"
00013FD6 <CLIModeSupport.ab3@86> XINCLUDE "CLIModeSupport.ab3"
00013FDC <CLIModeSupport.ab3@87> XINCLUDE "CLIModeSupport.ab3"
00013FF2 <CLIModeSupport.ab3@90> XINCLUDE "CLIModeSupport.ab3"
00013FFC <CLIModeSupport.ab3@92> XINCLUDE "CLIModeSupport.ab3"
00014002 <CLIModeSupport.ab3@93> XINCLUDE "CLIModeSupport.ab3"
00014018 <CLIModeSupport.ab3@97> XINCLUDE "CLIModeSupport.ab3"
0001401E <CLIModeSupport.ab3@98> XINCLUDE "CLIModeSupport.ab3"
0001405C <CLIModeSupport.ab3@100> XINCLUDE "CLIModeSupport.ab3"
00014060 <CLIModeSupport.ab3@101> XINCLUDE "CLIModeSupport.ab3"
0001406A <CLIModeSupport.ab3@102> XINCLUDE "CLIModeSupport.ab3"
0001406C <CLIModeSupport.ab3@103> XINCLUDE "CLIModeSupport.ab3"
000140A0 <CLIModeSupport.ab3@104> XINCLUDE "CLIModeSupport.ab3"
000140B0 <CLIModeSupport.ab3@105> XINCLUDE "CLIModeSupport.ab3"
000140BA <CLIModeSupport.ab3@108> XINCLUDE "CLIModeSupport.ab3"
000140C0 <CLIModeSupport.ab3@109> XINCLUDE "CLIModeSupport.ab3"
000140D6 <CLIModeSupport.ab3@113> XINCLUDE "CLIModeSupport.ab3"
00014114 <CLIModeSupport.ab3@114> XINCLUDE "CLIModeSupport.ab3"
00014118 <CLIModeSupport.ab3@115> XINCLUDE "CLIModeSupport.ab3"
00014120 <CLIModeSupport.ab3@116> XINCLUDE "CLIModeSupport.ab3"
0001415E <CLIModeSupport.ab3@117> XINCLUDE "CLIModeSupport.ab3"
00014160 <CLIModeSupport.ab3@118> XINCLUDE "CLIModeSupport.ab3"
00014164 <CLIModeSupport.ab3@119> XINCLUDE "CLIModeSupport.ab3"
000141A2 <CLIModeSupport.ab3@121> XINCLUDE "CLIModeSupport.ab3"
000141A6 <CLIModeSupport.ab3@122> XINCLUDE "CLIModeSupport.ab3"
000141E4 <CLIModeSupport.ab3@124> XINCLUDE "CLIModeSupport.ab3"
000141E8 <CLIModeSupport.ab3@125> XINCLUDE "CLIModeSupport.ab3"
00014212 <CLIModeSupport.ab3@127> XINCLUDE "CLIModeSupport.ab3"
0001421C <CLIModeSupport.ab3@128> XINCLUDE "CLIModeSupport.ab3"
00014230 <CLIModeSupport.ab3@129> XINCLUDE "CLIModeSupport.ab3"
00014256 <CLIModeSupport.ab3@130> XINCLUDE "CLIModeSupport.ab3"
0001425C <CLIModeSupport.ab3@131> XINCLUDE "CLIModeSupport.ab3"
0001426A <CLIModeSupport.ab3@132> XINCLUDE "CLIModeSupport.ab3"
00014270 <CLIModeSupport.ab3@133> XINCLUDE "CLIModeSupport.ab3"
000142A8 <CLIModeSupport.ab3@135> XINCLUDE "CLIModeSupport.ab3"
000142AC <CLIModeSupport.ab3@138> XINCLUDE "CLIModeSupport.ab3"
000142D6 <CLIModeSupport.ab3@141> XINCLUDE "CLIModeSupport.ab3"
000142DC <CLIModeSupport.ab3@142> XINCLUDE "CLIModeSupport.ab3"
000142FC <CLIModeSupport.ab3@143> XINCLUDE "CLIModeSupport.ab3"
00014306 <CLIModeSupport.ab3@144> XINCLUDE "CLIModeSupport.ab3"
0001430A <CLIModeSupport.ab3@145> XINCLUDE "CLIModeSupport.ab3"
0001430C <CLIModeSupport.ab3@146> XINCLUDE "CLIModeSupport.ab3"
0001432A <CLIModeSupport.ab3@147> XINCLUDE "CLIModeSupport.ab3"
0001432C <CLIModeSupport.ab3@148> XINCLUDE "CLIModeSupport.ab3"
00014332 <CLIModeSupport.ab3@149> XINCLUDE "CLIModeSupport.ab3"
00014338 <CLIModeSupport.ab3@150> XINCLUDE "CLIModeSupport.ab3"
00014362 <CLIModeSupport.ab3@152> XINCLUDE "CLIModeSupport.ab3"
00014364 <CLIModeSupport.ab3@153> XINCLUDE "CLIModeSupport.ab3"
00014392 <CLIModeSupport.ab3@154> XINCLUDE "CLIModeSupport.ab3"
00014396 <CLIModeSupport.ab3@155> XINCLUDE "CLIModeSupport.ab3"
000143C4 <CLIModeSupport.ab3@156> XINCLUDE "CLIModeSupport.ab3"
000143C8 <CLIModeSupport.ab3@157> XINCLUDE "CLIModeSupport.ab3"
000143EE <CLIModeSupport.ab3@159> XINCLUDE "CLIModeSupport.ab3"
000143FE <CLIModeSupport.ab3@160> XINCLUDE "CLIModeSupport.ab3"
00014404 <CLIModeSupport.ab3@161> XINCLUDE "CLIModeSupport.ab3"
0001440A <CLIModeSupport.ab3@162> XINCLUDE "CLIModeSupport.ab3"
00014438 <CLIModeSupport.ab3@163> XINCLUDE "CLIModeSupport.ab3"
00014442 <CLIModeSupport.ab3@165> XINCLUDE "CLIModeSupport.ab3"
0001445C <CLIModeSupport.ab3@166> XINCLUDE "CLIModeSupport.ab3"
0001447A <CLIModeSupport.ab3@178> XINCLUDE "CLIModeSupport.ab3"
00014482 <CLIModeSupport.ab3@179> XINCLUDE "CLIModeSupport.ab3"
00014488 <CLIModeSupport.ab3@180> XINCLUDE "CLIModeSupport.ab3"
0001448E <CLIModeSupport.ab3@181> XINCLUDE "CLIModeSupport.ab3"
000144B0 <CLIModeSupport.ab3@182> XINCLUDE "CLIModeSupport.ab3"
000144C8 <CLIModeSupport.ab3@184> XINCLUDE "CLIModeSupport.ab3"
000144EE <CLIModeSupport.ab3@185> XINCLUDE "CLIModeSupport.ab3"
00014518 <CLIModeSupport.ab3@186> XINCLUDE "CLIModeSupport.ab3"
00014526 <CLIModeSupport.ab3@187> XINCLUDE "CLIModeSupport.ab3"
0001452C <CLIModeSupport.ab3@188> XINCLUDE "CLIModeSupport.ab3"
00014540 <CLIModeSupport.ab3@189> XINCLUDE "CLIModeSupport.ab3"
00014558 <CLIModeSupport.ab3@191> XINCLUDE "CLIModeSupport.ab3"
00014566 <CLIModeSupport.ab3@192> XINCLUDE "CLIModeSupport.ab3"
0001457A <CLIModeSupport.ab3@193> XINCLUDE "CLIModeSupport.ab3"
000145B0 <CLIModeSupport.ab3@194> XINCLUDE "CLIModeSupport.ab3"
000145BE <CLIModeSupport.ab3@195> XINCLUDE "CLIModeSupport.ab3"
000145EE <CLIModeSupport.ab3@196> XINCLUDE "CLIModeSupport.ab3"
000145FC <CLIModeSupport.ab3@197> XINCLUDE "CLIModeSupport.ab3"
00014602 <CLIModeSupport.ab3@198> XINCLUDE "CLIModeSupport.ab3"
00014610 <CLIModeSupport.ab3@199> XINCLUDE "CLIModeSupport.ab3"
00014616 <CLIModeSupport.ab3@200> XINCLUDE "CLIModeSupport.ab3"
0001461C <CLIModeSupport.ab3@202> XINCLUDE "CLIModeSupport.ab3"
0001462A <CLIModeSupport.ab3@203> XINCLUDE "CLIModeSupport.ab3"
0001462C <CLIModeSupport.ab3@204> XINCLUDE "CLIModeSupport.ab3"
00014632 <CLIModeSupport.ab3@206> XINCLUDE "CLIModeSupport.ab3"
00014648 <CLIModeSupport.ab3@208> XINCLUDE "CLIModeSupport.ab3"
00014652 <CLIModeSupport.ab3@209> XINCLUDE "CLIModeSupport.ab3"
00014658 <CLIModeSupport.ab3@210> XINCLUDE "CLIModeSupport.ab3"
00014682 <CLIModeSupport.ab3@214> XINCLUDE "CLIModeSupport.ab3"
000146C0 <CLIModeSupport.ab3@215> XINCLUDE "CLIModeSupport.ab3"
000146C4 <CLIModeSupport.ab3@216> XINCLUDE "CLIModeSupport.ab3"
00014702 <CLIModeSupport.ab3@217> XINCLUDE "CLIModeSupport.ab3"
00014706 <CLIModeSupport.ab3@218> XINCLUDE "CLIModeSupport.ab3"
00014744 <CLIModeSupport.ab3@219> XINCLUDE "CLIModeSupport.ab3"
00014748 <CLIModeSupport.ab3@220> XINCLUDE "CLIModeSupport.ab3"
00014750 <CLIModeSupport.ab3@222> XINCLUDE "CLIModeSupport.ab3"
00014758 <CLIModeSupport.ab3@223> XINCLUDE "CLIModeSupport.ab3"
0001479C <CLIModeSupport.ab3@225> XINCLUDE "CLIModeSupport.ab3"
000147AE <CLIModeSupport.ab3@226> XINCLUDE "CLIModeSupport.ab3"
000147BC <CLIModeSupport.ab3@227> XINCLUDE "CLIModeSupport.ab3"
000147F0 <CLIModeSupport.ab3@228> XINCLUDE "CLIModeSupport.ab3"
00014814 <CLIModeSupport.ab3@230> XINCLUDE "CLIModeSupport.ab3"
0001481E <CLIModeSupport.ab3@231> XINCLUDE "CLIModeSupport.ab3"
00014838 <CLIModeSupport.ab3@232> XINCLUDE "CLIModeSupport.ab3"
0001484C <CLIModeSupport.ab3@233> XINCLUDE "CLIModeSupport.ab3"
000148A4 <CLIModeSupport.ab3@234> XINCLUDE "CLIModeSupport.ab3"
00014944 <CLIModeSupport.ab3@235> XINCLUDE "CLIModeSupport.ab3"
0001494C <CLIModeSupport.ab3@236> XINCLUDE "CLIModeSupport.ab3"
00014984 <CLIModeSupport.ab3@237> XINCLUDE "CLIModeSupport.ab3"
0001498A <CLIModeSupport.ab3@238> XINCLUDE "CLIModeSupport.ab3"
0001499A <CLIModeSupport.ab3@239> XINCLUDE "CLIModeSupport.ab3"
000149C2 <CLIModeSupport.ab3@242> XINCLUDE "CLIModeSupport.ab3"
000149EA <CLIModeSupport.ab3@243> XINCLUDE "CLIModeSupport.ab3"
000149F2 <CLIModeSupport.ab3@244> XINCLUDE "CLIModeSupport.ab3"
000149F8 <CLIModeSupport.ab3@245> XINCLUDE "CLIModeSupport.ab3"
00014A00 <CLIModeSupport.ab3@246> XINCLUDE "CLIModeSupport.ab3"
00014A28 <CLIModeSupport.ab3@247> XINCLUDE "CLIModeSupport.ab3"
00014A30 <CLIModeSupport.ab3@248> XINCLUDE "CLIModeSupport.ab3"
00014A38 <CLIModeSupport.ab3@249> XINCLUDE "CLIModeSupport.ab3"
00014A3E <CLIModeSupport.ab3@250> XINCLUDE "CLIModeSupport.ab3"
00014A44 <CLIModeSupport.ab3@251> XINCLUDE "CLIModeSupport.ab3"
00014A4A <CLIModeSupport.ab3@252> XINCLUDE "CLIModeSupport.ab3"
00014A50 <CLIModeSupport.ab3@253> XINCLUDE "CLIModeSupport.ab3"
00014A56 <CLIModeSupport.ab3@254> XINCLUDE "CLIModeSupport.ab3"
00014A5C <CLIModeSupport.ab3@255> XINCLUDE "CLIModeSupport.ab3"
00014A62 <CLIModeSupport.ab3@256> XINCLUDE "CLIModeSupport.ab3"
00014A68 <CLIModeSupport.ab3@257> XINCLUDE "CLIModeSupport.ab3"
00014A70 <CLIModeSupport.ab3@258> XINCLUDE "CLIModeSupport.ab3"
00014A78 <CLIModeSupport.ab3@259> XINCLUDE "CLIModeSupport.ab3"
00014AA0 <CLIModeSupport.ab3@260> XINCLUDE "CLIModeSupport.ab3"
00014AA6 <CLIModeSupport.ab3@261> XINCLUDE "CLIModeSupport.ab3"
00014AAC <CLIModeSupport.ab3@262> XINCLUDE "CLIModeSupport.ab3"
00014AB4 <CLIModeSupport.ab3@263> XINCLUDE "CLIModeSupport.ab3"
00014AD4 <CLIModeSupport.ab3@267> XINCLUDE "CLIModeSupport.ab3"
00014AE4 <CLIModeSupport.ab3@269> XINCLUDE "CLIModeSupport.ab3"
00014AF4 <CLIModeSupport.ab3@270> XINCLUDE "CLIModeSupport.ab3"
00014B04 <CLIModeSupport.ab3@272> XINCLUDE "CLIModeSupport.ab3"
00014B14 <CLIModeSupport.ab3@273> XINCLUDE "CLIModeSupport.ab3"
00014B24 <CLIModeSupport.ab3@274> XINCLUDE "CLIModeSupport.ab3"
00014B34 <CLIModeSupport.ab3@275> XINCLUDE "CLIModeSupport.ab3"
00014B44 <CLIModeSupport.ab3@276> XINCLUDE "CLIModeSupport.ab3"
00014B54 <CLIModeSupport.ab3@277> XINCLUDE "CLIModeSupport.ab3"
00014B64 <CLIModeSupport.ab3@278> XINCLUDE "CLIModeSupport.ab3"
00014B74 <CLIModeSupport.ab3@279> XINCLUDE "CLIModeSupport.ab3"
00014B84 <CLIModeSupport.ab3@280> XINCLUDE "CLIModeSupport.ab3"
00014B94 <CLIModeSupport.ab3@281> XINCLUDE "CLIModeSupport.ab3"
00014BA4 <CLIModeSupport.ab3@282> XINCLUDE "CLIModeSupport.ab3"
00014BB4 <CLIModeSupport.ab3@283> XINCLUDE "CLIModeSupport.ab3"
00014BC4 <CLIModeSupport.ab3@284> XINCLUDE "CLIModeSupport.ab3"
00014BD4 <CLIModeSupport.ab3@285> XINCLUDE "CLIModeSupport.ab3"
00014BE6 <CLIModeSupport.ab3@287> XINCLUDE "CLIModeSupport.ab3"
00014BF8 <CLIModeSupport.ab3@288> XINCLUDE "CLIModeSupport.ab3"
00014C0A <CLIModeSupport.ab3@289> XINCLUDE "CLIModeSupport.ab3"
00014C1C <CLIModeSupport.ab3@290> XINCLUDE "CLIModeSupport.ab3"
00014C2E <CLIModeSupport.ab3@291> XINCLUDE "CLIModeSupport.ab3"
00014C40 <CLIModeSupport.ab3@292> XINCLUDE "CLIModeSupport.ab3"
00014C5E <CLIModeSupport.ab3@294> XINCLUDE "CLIModeSupport.ab3"
00014C64 <CLIModeSupport.ab3@295> XINCLUDE "CLIModeSupport.ab3"
00014C6A <CLIModeSupport.ab3@297> XINCLUDE "CLIModeSupport.ab3"
00014C94 <CLIModeSupport.ab3@298> XINCLUDE "CLIModeSupport.ab3"
00014CA6 <CLIModeSupport.ab3@299> XINCLUDE "CLIModeSupport.ab3"
00014CDA <CLIModeSupport.ab3@302> XINCLUDE "CLIModeSupport.ab3"
00014CF2 <CLIModeSupport.ab3@303> XINCLUDE "CLIModeSupport.ab3"
00014D3E <CLIModeSupport.ab3@304> XINCLUDE "CLIModeSupport.ab3"
00014D50 <CLIModeSupport.ab3@305> XINCLUDE "CLIModeSupport.ab3"
00014DA6 <CLIModeSupport.ab3@306> XINCLUDE "CLIModeSupport.ab3"
00014E18 <CLIModeSupport.ab3@307> XINCLUDE "CLIModeSupport.ab3"
00014E1E <CLIModeSupport.ab3@308> XINCLUDE "CLIModeSupport.ab3"
00014E52 <CLIModeSupport.ab3@309> XINCLUDE "CLIModeSupport.ab3"
00014E7A <CLIModeSupport.ab3@310> XINCLUDE "CLIModeSupport.ab3"
00014EA2 <CLIModeSupport.ab3@312> XINCLUDE "CLIModeSupport.ab3"
00014EDC <CLIModeSupport.ab3@313> XINCLUDE "CLIModeSupport.ab3"
00014EF4 <CLIModeSupport.ab3@314> XINCLUDE "CLIModeSupport.ab3"
00014F78 <CLIModeSupport.ab3@315> XINCLUDE "CLIModeSupport.ab3"
00014F92 <CLIModeSupport.ab3@316> XINCLUDE "CLIModeSupport.ab3"
00014FE0 <CLIModeSupport.ab3@317> XINCLUDE "CLIModeSupport.ab3"
00014FF0 <CLIModeSupport.ab3@319> XINCLUDE "CLIModeSupport.ab3"
00014FF8 <CLIModeSupport.ab3@321> XINCLUDE "CLIModeSupport.ab3"
0001500C <CLIModeSupport.ab3@322> XINCLUDE "CLIModeSupport.ab3"
00015052 <CLIModeSupport.ab3@323> XINCLUDE "CLIModeSupport.ab3"
00015058 <CLIModeSupport.ab3@324> XINCLUDE "CLIModeSupport.ab3"
000150A2 <CLIModeSupport.ab3@325> XINCLUDE "CLIModeSupport.ab3"
0001510C <CLIModeSupport.ab3@326> XINCLUDE "CLIModeSupport.ab3"
00015172 <CLIModeSupport.ab3@327> XINCLUDE "CLIModeSupport.ab3"
000151A6 <CLIModeSupport.ab3@328> XINCLUDE "CLIModeSupport.ab3"
000151D2 <CLIModeSupport.ab3@330> XINCLUDE "CLIModeSupport.ab3"
00015220 <CLIModeSupport.ab3@331> XINCLUDE "CLIModeSupport.ab3"
00015244 <CLIModeSupport.ab3@332> XINCLUDE "CLIModeSupport.ab3"
0001524A <CLIModeSupport.ab3@333> XINCLUDE "CLIModeSupport.ab3"
00015258 <CLIModeSupport.ab3@335> XINCLUDE "CLIModeSupport.ab3"
000152B6 <CLIModeSupport.ab3@337> XINCLUDE "CLIModeSupport.ab3"
00015314 <CLIModeSupport.ab3@338> XINCLUDE "CLIModeSupport.ab3"
0001533E <CLIModeSupport.ab3@339> XINCLUDE "CLIModeSupport.ab3"
00015348 <CLIModeSupport.ab3@340> XINCLUDE "CLIModeSupport.ab3"
00015350 <CLIModeSupport.ab3@341> XINCLUDE "CLIModeSupport.ab3"
0001538E <CLIModeSupport.ab3@342> XINCLUDE "CLIModeSupport.ab3"
000153DA <CLIModeSupport.ab3@343> XINCLUDE "CLIModeSupport.ab3"
000153EC <CLIModeSupport.ab3@344> XINCLUDE "CLIModeSupport.ab3"
00015442 <CLIModeSupport.ab3@345> XINCLUDE "CLIModeSupport.ab3"
000154BA <CLIModeSupport.ab3@346> XINCLUDE "CLIModeSupport.ab3"
000154C0 <CLIModeSupport.ab3@347> XINCLUDE "CLIModeSupport.ab3"
000154F4 <CLIModeSupport.ab3@348> XINCLUDE "CLIModeSupport.ab3"
0001551C <CLIModeSupport.ab3@349> XINCLUDE "CLIModeSupport.ab3"
00015552 <CLIModeSupport.ab3@352> XINCLUDE "CLIModeSupport.ab3"
00015560 <CLIModeSupport.ab3@353> XINCLUDE "CLIModeSupport.ab3"
0001556E <CLIModeSupport.ab3@354> XINCLUDE "CLIModeSupport.ab3"
000155D6 <CLIModeSupport.ab3@355> XINCLUDE "CLIModeSupport.ab3"
000155DC <CLIModeSupport.ab3@356> XINCLUDE "CLIModeSupport.ab3"
00015626 <CLIModeSupport.ab3@357> XINCLUDE "CLIModeSupport.ab3"
00015670 <CLIModeSupport.ab3@358> XINCLUDE "CLIModeSupport.ab3"
000156A0 <CLIModeSupport.ab3@359> XINCLUDE "CLIModeSupport.ab3"
000156CA <CLIModeSupport.ab3@360> XINCLUDE "CLIModeSupport.ab3"
0001571C <CLIModeSupport.ab3@361> XINCLUDE "CLIModeSupport.ab3"
00015772 <CLIModeSupport.ab3@362> XINCLUDE "CLIModeSupport.ab3"
000157C2 <CLIModeSupport.ab3@363> XINCLUDE "CLIModeSupport.ab3"
00015828 <CLIModeSupport.ab3@364> XINCLUDE "CLIModeSupport.ab3"
00015894 <CLIModeSupport.ab3@365> XINCLUDE "CLIModeSupport.ab3"
000158C0 <CLIModeSupport.ab3@366> XINCLUDE "CLIModeSupport.ab3"
000158F0 <CLIModeSupport.ab3@367> XINCLUDE "CLIModeSupport.ab3"
0001596C <CLIModeSupport.ab3@368> XINCLUDE "CLIModeSupport.ab3"
0001599C <CLIModeSupport.ab3@369> XINCLUDE "CLIModeSupport.ab3"
000159CC <CLIModeSupport.ab3@370> XINCLUDE "CLIModeSupport.ab3"
000159FC <CLIModeSupport.ab3@371> XINCLUDE "CLIModeSupport.ab3"
00015A2C <CLIModeSupport.ab3@372> XINCLUDE "CLIModeSupport.ab3"
00015A5C <CLIModeSupport.ab3@373> XINCLUDE "CLIModeSupport.ab3"
00015A8C <CLIModeSupport.ab3@374> XINCLUDE "CLIModeSupport.ab3"
00015ABC <CLIModeSupport.ab3@375> XINCLUDE "CLIModeSupport.ab3"
00015AEC <CLIModeSupport.ab3@376> XINCLUDE "CLIModeSupport.ab3"
00015B1C <CLIModeSupport.ab3@377> XINCLUDE "CLIModeSupport.ab3"
00015B4C <CLIModeSupport.ab3@378> XINCLUDE "CLIModeSupport.ab3"
00015BC8 <CLIModeSupport.ab3@379> XINCLUDE "CLIModeSupport.ab3"
00015BFA <CLIModeSupport.ab3@380> XINCLUDE "CLIModeSupport.ab3"
00015C2C <CLIModeSupport.ab3@381> XINCLUDE "CLIModeSupport.ab3"
00015C5C <CLIModeSupport.ab3@382> XINCLUDE "CLIModeSupport.ab3"
00015C62 <CLIModeSupport.ab3@383> XINCLUDE "CLIModeSupport.ab3"
00015CD6 <CLIModeSupport.ab3@384> XINCLUDE "CLIModeSupport.ab3"
00015D42 <CLIModeSupport.ab3@385> XINCLUDE "CLIModeSupport.ab3"
00015D54 <CLIModeSupport.ab3@386> XINCLUDE "CLIModeSupport.ab3"
00015D82 <CLIModeSupport.ab3@387> XINCLUDE "CLIModeSupport.ab3"
00015DAA <CLIModeSupport.ab3@388> XINCLUDE "CLIModeSupport.ab3"
00015DBE <CLIModeSupport.ab3@389> XINCLUDE "CLIModeSupport.ab3"
00015DE8 <CLIModeSupport.ab3@390> XINCLUDE "CLIModeSupport.ab3"
00015E2C <CLIModeSupport.ab3@391> XINCLUDE "CLIModeSupport.ab3"
00015E3C <CLIModeSupport.ab3@392> XINCLUDE "CLIModeSupport.ab3"
00015E4C <CLIModeSupport.ab3@393> XINCLUDE "CLIModeSupport.ab3"
00015E52 <CLIModeSupport.ab3@394> XINCLUDE "CLIModeSupport.ab3"
00015E62 <CLIModeSupport.ab3@396> XINCLUDE "CLIModeSupport.ab3"
00015E70 <CLIModeSupport.ab3@400> XINCLUDE "CLIModeSupport.ab3"
00015E7A <CLIModeSupport.ab3@403> XINCLUDE "CLIModeSupport.ab3"
00015EB2 <CLIModeSupport.ab3@406> XINCLUDE "CLIModeSupport.ab3"
00015EEA <CLIModeSupport.ab3@407> XINCLUDE "CLIModeSupport.ab3"
00015F22 <CLIModeSupport.ab3@408> XINCLUDE "CLIModeSupport.ab3"
00015F32 <CLIModeSupport.ab3@409> XINCLUDE "CLIModeSupport.ab3"
00015F9A <CLIModeSupport.ab3@410> XINCLUDE "CLIModeSupport.ab3"
00015FD2 <CLIModeSupport.ab3@411> XINCLUDE "CLIModeSupport.ab3"
00015FE2 <CLIModeSupport.ab3@412> XINCLUDE "CLIModeSupport.ab3"
00015FF2 <CLIModeSupport.ab3@413> XINCLUDE "CLIModeSupport.ab3"
0001605A <CLIModeSupport.ab3@414> XINCLUDE "CLIModeSupport.ab3"
000160C2 <CLIModeSupport.ab3@415> XINCLUDE "CLIModeSupport.ab3"
0001612A <CLIModeSupport.ab3@416> XINCLUDE "CLIModeSupport.ab3"
00016192 <CLIModeSupport.ab3@417> XINCLUDE "CLIModeSupport.ab3"
000161FA <CLIModeSupport.ab3@418> XINCLUDE "CLIModeSupport.ab3"
00016262 <CLIModeSupport.ab3@419> XINCLUDE "CLIModeSupport.ab3"
000162CA <CLIModeSupport.ab3@420> XINCLUDE "CLIModeSupport.ab3"
00016332 <CLIModeSupport.ab3@421> XINCLUDE "CLIModeSupport.ab3"
00016342 <CLIModeSupport.ab3@422> XINCLUDE "CLIModeSupport.ab3"
0001637A <CLIModeSupport.ab3@424> XINCLUDE "CLIModeSupport.ab3"
000163B4 <CLIModeSupport.ab3@425> XINCLUDE "CLIModeSupport.ab3"
000163EE <CLIModeSupport.ab3@426> XINCLUDE "CLIModeSupport.ab3"
00016426 <CLIModeSupport.ab3@427> XINCLUDE "CLIModeSupport.ab3"
0001644C <CLIModeSupport.ab3@430> XINCLUDE "CLIModeSupport.ab3"
00016454 <CLIModeSupport.ab3@433> XINCLUDE "CLIModeSupport.ab3"
0001645C <CLIModeSupport.ab3@435> XINCLUDE "CLIModeSupport.ab3"
00016464 <CLIModeSupport.ab3@436> XINCLUDE "CLIModeSupport.ab3"
0001646C <CLIModeSupport.ab3@438> XINCLUDE "CLIModeSupport.ab3"
00016480 <CLIModeSupport.ab3@439> XINCLUDE "CLIModeSupport.ab3"
000164AE <CLIModeSupport.ab3@440> XINCLUDE "CLIModeSupport.ab3"
000164C8 <CLIModeSupport.ab3@441> XINCLUDE "CLIModeSupport.ab3"
000164D6 <CLIModeSupport.ab3@442> XINCLUDE "CLIModeSupport.ab3"
00016542 <CLIModeSupport.ab3@443> XINCLUDE "CLIModeSupport.ab3"
00016568 <CLIModeSupport.ab3@444> XINCLUDE "CLIModeSupport.ab3"
00016584 <CLIModeSupport.ab3@445> XINCLUDE "CLIModeSupport.ab3"
0001658E <CLIModeSupport.ab3@446> XINCLUDE "CLIModeSupport.ab3"
00016598 <CLIModeSupport.ab3@447> XINCLUDE "CLIModeSupport.ab3"
000165A4 <CLIModeSupport.ab3@448> XINCLUDE "CLIModeSupport.ab3"
000165B2 <CLIModeSupport.ab3@449> XINCLUDE "CLIModeSupport.ab3"
000165BE <CLIModeSupport.ab3@450> XINCLUDE "CLIModeSupport.ab3"
000165FA <CLIModeSupport.ab3@451> XINCLUDE "CLIModeSupport.ab3"
00016614 <CLIModeSupport.ab3@452> XINCLUDE "CLIModeSupport.ab3"
00016622 <CLIModeSupport.ab3@453> XINCLUDE "CLIModeSupport.ab3"
00016642 <CLIModeSupport.ab3@454> XINCLUDE "CLIModeSupport.ab3"
00016650 <CLIModeSupport.ab3@455> XINCLUDE "CLIModeSupport.ab3"
0001665E <CLIModeSupport.ab3@456> XINCLUDE "CLIModeSupport.ab3"
00016664 <CLIModeSupport.ab3@458> XINCLUDE "CLIModeSupport.ab3"
00016674 <CLIModeSupport.ab3@459> XINCLUDE "CLIModeSupport.ab3"
00016678 <CLIModeSupport.ab3@461> XINCLUDE "CLIModeSupport.ab3"
000166AC <CLIModeSupport.ab3@462> XINCLUDE "CLIModeSupport.ab3"
000166E0 <CLIModeSupport.ab3@463> XINCLUDE "CLIModeSupport.ab3"
000166E4 <CLIModeSupport.ab3@464> XINCLUDE "CLIModeSupport.ab3"
00016718 <CLIModeSupport.ab3@465> XINCLUDE "CLIModeSupport.ab3"
0001671C <CLIModeSupport.ab3@466> XINCLUDE "CLIModeSupport.ab3"
00016750 <CLIModeSupport.ab3@467> XINCLUDE "CLIModeSupport.ab3"
00016756 <CLIModeSupport.ab3@468> XINCLUDE "CLIModeSupport.ab3"
0001678C <CLIModeSupport.ab3@470> XINCLUDE "CLIModeSupport.ab3"
000167C2 <CLIModeSupport.ab3@471> XINCLUDE "CLIModeSupport.ab3"
000167F8 <CLIModeSupport.ab3@472> XINCLUDE "CLIModeSupport.ab3"
00016830 <CLIModeSupport.ab3@473> XINCLUDE "CLIModeSupport.ab3"
00016868 <CLIModeSupport.ab3@474> XINCLUDE "CLIModeSupport.ab3"
00016908 <CLIModeSupport.ab3@476> XINCLUDE "CLIModeSupport.ab3"
00016948 <CLIModeSupport.ab3@477> XINCLUDE "CLIModeSupport.ab3"
00016980 <CLIModeSupport.ab3@480> XINCLUDE "CLIModeSupport.ab3"
0001699E <CLIModeSupport.ab3@481> XINCLUDE "CLIModeSupport.ab3"
000169A2 <CLIModeSupport.ab3@482> XINCLUDE "CLIModeSupport.ab3"
000169A8 <CLIModeSupport.ab3@483> XINCLUDE "CLIModeSupport.ab3"
000169AE <CLIModeSupport.ab3@484> XINCLUDE "CLIModeSupport.ab3"
000169B2 <CLIModeSupport.ab3@485> XINCLUDE "CLIModeSupport.ab3"
000169DC <CLIModeSupport.ab3@486> XINCLUDE "CLIModeSupport.ab3"
000169F0 <CLIModeSupport.ab3@490> XINCLUDE "CLIModeSupport.ab3"
00016A2E <CLIModeSupport.ab3@491> XINCLUDE "CLIModeSupport.ab3"
00016A62 <CLIModeSupport.ab3@492> XINCLUDE "CLIModeSupport.ab3"
00016A98 <CLIModeSupport.ab3@496> XINCLUDE "CLIModeSupport.ab3"
00016AF0 <CLIModeSupport.ab3@498> XINCLUDE "CLIModeSupport.ab3"
00016B1E <CLIModeSupport.ab3@499> XINCLUDE "CLIModeSupport.ab3"
00016B22 <CLIModeSupport.ab3@500> XINCLUDE "CLIModeSupport.ab3"
00016B58 <CLIModeSupport.ab3@501> XINCLUDE "CLIModeSupport.ab3"
00016B86 <CLIModeSupport.ab3@502> XINCLUDE "CLIModeSupport.ab3"
00016BB4 <CLIModeSupport.ab3@504> XINCLUDE "CLIModeSupport.ab3"
00016BB8 <CLIModeSupport.ab3@505> XINCLUDE "CLIModeSupport.ab3"
00016BEE <CLIModeSupport.ab3@506> XINCLUDE "CLIModeSupport.ab3"
00016C1C <CLIModeSupport.ab3@508> XINCLUDE "CLIModeSupport.ab3"
00016C20 <CLIModeSupport.ab3@509> XINCLUDE "CLIModeSupport.ab3"
00016C84 <CLIModeSupport.ab3@510> XINCLUDE "CLIModeSupport.ab3"
00016C8A <CLIModeSupport.ab3@513> XINCLUDE "CLIModeSupport.ab3"
00016CB8 <CLIModeSupport.ab3@514> XINCLUDE "CLIModeSupport.ab3"
00016CC2 <CLIModeSupport.ab3@517> XINCLUDE "CLIModeSupport.ab3"
00016CCC <CLIModeSupport.ab3@519> XINCLUDE "CLIModeSupport.ab3"
00016CE6 <CLIModeSupport.ab3@520> XINCLUDE "CLIModeSupport.ab3"
00016D10 <CLIModeSupport.ab3@523> XINCLUDE "CLIModeSupport.ab3"
00016D16 <CLIModeSupport.ab3@524> XINCLUDE "CLIModeSupport.ab3"
00016D36 <CLIModeSupport.ab3@525> XINCLUDE "CLIModeSupport.ab3"
00016D40 <CLIModeSupport.ab3@526> XINCLUDE "CLIModeSupport.ab3"
00016D44 <CLIModeSupport.ab3@527> XINCLUDE "CLIModeSupport.ab3"
00016D46 <CLIModeSupport.ab3@528> XINCLUDE "CLIModeSupport.ab3"
00016D64 <CLIModeSupport.ab3@529> XINCLUDE "CLIModeSupport.ab3"
00016D66 <CLIModeSupport.ab3@530> XINCLUDE "CLIModeSupport.ab3"
00016D6C <CLIModeSupport.ab3@531> XINCLUDE "CLIModeSupport.ab3"
00016D72 <CLIModeSupport.ab3@533> XINCLUDE "CLIModeSupport.ab3"
00016D9C <CLIModeSupport.ab3@534> XINCLUDE "CLIModeSupport.ab3"
00016D9E <CLIModeSupport.ab3@535> XINCLUDE "CLIModeSupport.ab3"
00016DCC <CLIModeSupport.ab3@536> XINCLUDE "CLIModeSupport.ab3"
00016DD0 <CLIModeSupport.ab3@537> XINCLUDE "CLIModeSupport.ab3"
00016DFE <CLIModeSupport.ab3@538> XINCLUDE "CLIModeSupport.ab3"
00016E02 <CLIModeSupport.ab3@539> XINCLUDE "CLIModeSupport.ab3"
00016E28 <CLIModeSupport.ab3@540> XINCLUDE "CLIModeSupport.ab3"
00016E38 <CLIModeSupport.ab3@541> XINCLUDE "CLIModeSupport.ab3"
00016E3E <CLIModeSupport.ab3@542> XINCLUDE "CLIModeSupport.ab3"
00016E44 <CLIModeSupport.ab3@543> XINCLUDE "CLIModeSupport.ab3"
00016E72 <CLIModeSupport.ab3@544> XINCLUDE "CLIModeSupport.ab3"
00016E7C <CLIModeSupport.ab3@546> XINCLUDE "CLIModeSupport.ab3"
00016E96 <CLIModeSupport.ab3@547> XINCLUDE "CLIModeSupport.ab3"
00016EB0 <CLIModeSupport.ab3@550> XINCLUDE "CLIModeSupport.ab3"
00016EDA <CLIModeSupport.ab3@551> XINCLUDE "CLIModeSupport.ab3"
00016F08 <CLIModeSupport.ab3@552> XINCLUDE "CLIModeSupport.ab3"
00016F12 <CLIModeSupport.ab3@554> XINCLUDE "CLIModeSupport.ab3"
00016F26 <CLIModeSupport.ab3@555> XINCLUDE "CLIModeSupport.ab3"
00016F62 <CLIModeSupport.ab3@556> XINCLUDE "CLIModeSupport.ab3"
00016F9E <CLIModeSupport.ab3@557> XINCLUDE "CLIModeSupport.ab3"
00016FDA <CLIModeSupport.ab3@558> XINCLUDE "CLIModeSupport.ab3"
00017016 <CLIModeSupport.ab3@559> XINCLUDE "CLIModeSupport.ab3"
00017052 <CLIModeSupport.ab3@560> XINCLUDE "CLIModeSupport.ab3"
00017058 <CLIModeSupport.ab3@561> XINCLUDE "CLIModeSupport.ab3"
00017086 <CLIModeSupport.ab3@562> XINCLUDE "CLIModeSupport.ab3"
00017088 <CLIModeSupport.ab3@566> XINCLUDE "CLIModeSupport.ab3"
000170A6 <CLIModeSupport.ab3@567> XINCLUDE "CLIModeSupport.ab3"
000170AC <CLIModeSupport.ab3@568> XINCLUDE "CLIModeSupport.ab3"
000170D6 <CLIModeSupport.ab3@569> XINCLUDE "CLIModeSupport.ab3"
000170D8 <CLIModeSupport.ab3@570> XINCLUDE "CLIModeSupport.ab3"
000170E2 <CLIModeSupport.ab3@572> XINCLUDE "CLIModeSupport.ab3"
000170E8 <CLIModeSupport.ab3@573> XINCLUDE "CLIModeSupport.ab3"
000170FA <CLIModeSupport.ab3@576> XINCLUDE "CLIModeSupport.ab3"
0001712C <CLIModeSupport.ab3@579> XINCLUDE "CLIModeSupport.ab3"
00017136 <CLIModeSupport.ab3@580> XINCLUDE "CLIModeSupport.ab3"
000171A0 <CLIModeSupport.ab3@581> XINCLUDE "CLIModeSupport.ab3"
0001720A <CLIModeSupport.ab3@582> XINCLUDE "CLIModeSupport.ab3"
00017274 <CLIModeSupport.ab3@584> XINCLUDE "CLIModeSupport.ab3"
000172DE <CLIModeSupport.ab3@585> XINCLUDE "CLIModeSupport.ab3"
00017348 <CLIModeSupport.ab3@586> XINCLUDE "CLIModeSupport.ab3"
000173B2 <CLIModeSupport.ab3@587> XINCLUDE "CLIModeSupport.ab3"
000173B8 <CLIModeSupport.ab3@588> XINCLUDE "CLIModeSupport.ab3"
00017422 <CLIModeSupport.ab3@589> XINCLUDE "CLIModeSupport.ab3"
0001748C <CLIModeSupport.ab3@590> XINCLUDE "CLIModeSupport.ab3"
00017496 <CLIModeSupport.ab3@593> XINCLUDE "CLIModeSupport.ab3"
00017500 <CLIModeSupport.ab3@594> XINCLUDE "CLIModeSupport.ab3"
00017508 <CLIModeSupport.ab3@599> XINCLUDE "CLIModeSupport.ab3"
00017536 <CLIModeSupport.ab3@601> XINCLUDE "CLIModeSupport.ab3"
0001753A <CLIModeSupport.ab3@602> XINCLUDE "CLIModeSupport.ab3"
00017562 <CLIModeSupport.ab3@603> XINCLUDE "CLIModeSupport.ab3"
00017568 <CLIModeSupport.ab3@606> XINCLUDE "CLIModeSupport.ab3"
0001756E <CLIModeSupport.ab3@609> XINCLUDE "CLIModeSupport.ab3"
00017574 <CLIModeSupport.ab3@610> XINCLUDE "CLIModeSupport.ab3"
0001757A <CLIModeSupport.ab3@611> XINCLUDE "CLIModeSupport.ab3"
00017580 <CLIModeSupport.ab3@612> XINCLUDE "CLIModeSupport.ab3"
0001758A <CLIModeSupport.ab3@613> XINCLUDE "CLIModeSupport.ab3"
00017594 <CLIModeSupport.ab3@614> XINCLUDE "CLIModeSupport.ab3"
000175C2 <CLIModeSupport.ab3@616> XINCLUDE "CLIModeSupport.ab3"
000175EE <CLIModeSupport.ab3@618> XINCLUDE "CLIModeSupport.ab3"
000175F6 <CLIModeSupport.ab3@619> XINCLUDE "CLIModeSupport.ab3"
0001762A <CLIModeSupport.ab3@621> XINCLUDE "CLIModeSupport.ab3"
0001763C <CLIModeSupport.ab3@622> XINCLUDE "CLIModeSupport.ab3"
000176A2 <CLIModeSupport.ab3@623> XINCLUDE "CLIModeSupport.ab3"
00017708 <CLIModeSupport.ab3@624> XINCLUDE "CLIModeSupport.ab3"
0001770E <CLIModeSupport.ab3@625> XINCLUDE "CLIModeSupport.ab3"
00017716 <CLIModeSupport.ab3@626> XINCLUDE "CLIModeSupport.ab3"
00017718 <CLIModeSupport.ab3@630> XINCLUDE "CLIModeSupport.ab3"
00017736 <CLIModeSupport.ab3@631> XINCLUDE "CLIModeSupport.ab3"
00017774 <CLIModeSupport.ab3@632> XINCLUDE "CLIModeSupport.ab3"
000177B2 <CLIModeSupport.ab3@633> XINCLUDE "CLIModeSupport.ab3"
000177B8 <CLIModeSupport.ab3@635> XINCLUDE "CLIModeSupport.ab3"
000177BE <CLIModeSupport.ab3@636> XINCLUDE "CLIModeSupport.ab3"
000177C4 <CLIModeSupport.ab3@637> XINCLUDE "CLIModeSupport.ab3"
000177CE <CLIModeSupport.ab3@640> XINCLUDE "CLIModeSupport.ab3"
000177D4 <CLIModeSupport.ab3@641> XINCLUDE "CLIModeSupport.ab3"
000177DA <CLIModeSupport.ab3@642> XINCLUDE "CLIModeSupport.ab3"
000177E0 <CLIModeSupport.ab3@643> XINCLUDE "CLIModeSupport.ab3"
000177E6 <CLIModeSupport.ab3@644> XINCLUDE "CLIModeSupport.ab3"
000177EA <CLIModeSupport.ab3@645> XINCLUDE "CLIModeSupport.ab3"
000177F4 <CLIModeSupport.ab3@646> XINCLUDE "CLIModeSupport.ab3"
000177F8 <CLIModeSupport.ab3@647> XINCLUDE "CLIModeSupport.ab3"
00017822 <CLIModeSupport.ab3@649> XINCLUDE "CLIModeSupport.ab3"
00017824 <CLIModeSupport.ab3@650> XINCLUDE "CLIModeSupport.ab3"
0001782A <CLIModeSupport.ab3@652> XINCLUDE "CLIModeSupport.ab3"
0001782E <CLIModeSupport.ab3@653> XINCLUDE "CLIModeSupport.ab3"
00017834 <CLIModeSupport.ab3@655> XINCLUDE "CLIModeSupport.ab3"
00017838 <CLIModeSupport.ab3@656> XINCLUDE "CLIModeSupport.ab3"
00017892 <CLIModeSupport.ab3@658> XINCLUDE "CLIModeSupport.ab3"
000178A4 <CLIModeSupport.ab3@660> XINCLUDE "CLIModeSupport.ab3"
000178D0 <CLIModeSupport.ab3@661> XINCLUDE "CLIModeSupport.ab3"
00017976 <CLIModeSupport.ab3@662> XINCLUDE "CLIModeSupport.ab3"
00017994 <CLIModeSupport.ab3@663> XINCLUDE "CLIModeSupport.ab3"
0001799A <CLIModeSupport.ab3@664> XINCLUDE "CLIModeSupport.ab3"
000179C4 <CLIModeSupport.ab3@665> XINCLUDE "CLIModeSupport.ab3"
000179CE <CLIModeSupport.ab3@666> XINCLUDE "CLIModeSupport.ab3"
00017A00 <CLIModeSupport.ab3@667> XINCLUDE "CLIModeSupport.ab3"
00017A1A <CLIModeSupport.ab3@668> XINCLUDE "CLIModeSupport.ab3"
00017A2E <CLIModeSupport.ab3@673> XINCLUDE "CLIModeSupport.ab3"
00017A38 <CLIModeSupport.ab3@675> XINCLUDE "CLIModeSupport.ab3"
00017A52 <CLIModeSupport.ab3@676> XINCLUDE "CLIModeSupport.ab3"
00017A7C <CLIModeSupport.ab3@680> XINCLUDE "CLIModeSupport.ab3"
00017AA0 <CLIModeSupport.ab3@681> XINCLUDE "CLIModeSupport.ab3"
00017ADE <CLIModeSupport.ab3@682> XINCLUDE "CLIModeSupport.ab3"
00017AE2 <CLIModeSupport.ab3@683> XINCLUDE "CLIModeSupport.ab3"
00017B20 <CLIModeSupport.ab3@685> XINCLUDE "CLIModeSupport.ab3"
00017B24 <CLIModeSupport.ab3@686> XINCLUDE "CLIModeSupport.ab3"
00017B62 <CLIModeSupport.ab3@689> XINCLUDE "CLIModeSupport.ab3"
00017BA0 <CLIModeSupport.ab3@690> XINCLUDE "CLIModeSupport.ab3"
00017BA2 <CLIModeSupport.ab3@691> XINCLUDE "CLIModeSupport.ab3"
00017BD6 <CLIModeSupport.ab3@692> XINCLUDE "CLIModeSupport.ab3"
00017BDC <CLIModeSupport.ab3@694> XINCLUDE "CLIModeSupport.ab3"
00017C20 <CLIModeSupport.ab3@695> XINCLUDE "CLIModeSupport.ab3"
00017C32 <CLIModeSupport.ab3@696> XINCLUDE "CLIModeSupport.ab3"
00017C3A <CLIModeSupport.ab3@698> XINCLUDE "CLIModeSupport.ab3"
00017C40 <CLIModeSupport.ab3@699> XINCLUDE "CLIModeSupport.ab3"
00017C4A <CLIModeSupport.ab3@701> XINCLUDE "CLIModeSupport.ab3"
00017C58 <CLIModeSupport.ab3@702> XINCLUDE "CLIModeSupport.ab3"
00017C5E <CLIModeSupport.ab3@703> XINCLUDE "CLIModeSupport.ab3"
00017C86 <CLIModeSupport.ab3@704> XINCLUDE "CLIModeSupport.ab3"
00017CA0 <CLIModeSupport.ab3@705> XINCLUDE "CLIModeSupport.ab3"
00017CAA <CLIModeSupport.ab3@706> XINCLUDE "CLIModeSupport.ab3"
00017CB0 <CLIModeSupport.ab3@707> XINCLUDE "CLIModeSupport.ab3"
00017CCE <CLIModeSupport.ab3@709> XINCLUDE "CLIModeSupport.ab3"
00017CD8 <CLIModeSupport.ab3@710> XINCLUDE "CLIModeSupport.ab3"
00017CDE <CLIModeSupport.ab3@711> XINCLUDE "CLIModeSupport.ab3"
00017CE4 <CLIModeSupport.ab3@712> XINCLUDE "CLIModeSupport.ab3"
00017CEE <CLIModeSupport.ab3@713> XINCLUDE "CLIModeSupport.ab3"
00017CFC <CLIModeSupport.ab3@714> XINCLUDE "CLIModeSupport.ab3"
00017D02 <CLIModeSupport.ab3@715> XINCLUDE "CLIModeSupport.ab3"
00017D12 <CLIModeSupport.ab3@717> XINCLUDE "CLIModeSupport.ab3"
00017D3E <CLIModeSupport.ab3@718> XINCLUDE "CLIModeSupport.ab3"
00017D54 <CLIModeSupport.ab3@719> XINCLUDE "CLIModeSupport.ab3"
00017D5E <CLIModeSupport.ab3@720> XINCLUDE "CLIModeSupport.ab3"
00017D64 <CLIModeSupport.ab3@721> XINCLUDE "CLIModeSupport.ab3"
00017DBC <CLIModeSupport.ab3@723> XINCLUDE "CLIModeSupport.ab3"
00017E2A <CLIModeSupport.ab3@725> XINCLUDE "CLIModeSupport.ab3"
00017E42 <CLIModeSupport.ab3@726> XINCLUDE "CLIModeSupport.ab3"
00017E48 <CLIModeSupport.ab3@727> XINCLUDE "CLIModeSupport.ab3"
00017E80 <CLIModeSupport.ab3@728> XINCLUDE "CLIModeSupport.ab3"
00017EAE <CLIModeSupport.ab3@730> XINCLUDE "CLIModeSupport.ab3"
00017ED8 <CLIModeSupport.ab3@731> XINCLUDE "CLIModeSupport.ab3"
00017EE2 <CLIModeSupport.ab3@733> XINCLUDE "CLIModeSupport.ab3"
00017F0A <CLIModeSupport.ab3@734> XINCLUDE "CLIModeSupport.ab3"
00017F34 <CLIModeSupport.ab3@735> XINCLUDE "CLIModeSupport.ab3"
00017FD6 <CLIModeSupport.ab3@736> XINCLUDE "CLIModeSupport.ab3"
00017FE4 <CLIModeSupport.ab3@737> XINCLUDE "CLIModeSupport.ab3"
00018034 <CLIModeSupport.ab3@738> XINCLUDE "CLIModeSupport.ab3"
00018044 <CLIModeSupport.ab3@739> XINCLUDE "CLIModeSupport.ab3"
0001810C <CLIModeSupport.ab3@740> XINCLUDE "CLIModeSupport.ab3"
00018140 <CLIModeSupport.ab3@742> XINCLUDE "CLIModeSupport.ab3"
00018174 <CLIModeSupport.ab3@743> XINCLUDE "CLIModeSupport.ab3"
000181A8 <CLIModeSupport.ab3@744> XINCLUDE "CLIModeSupport.ab3"
000181DC <CLIModeSupport.ab3@745> XINCLUDE "CLIModeSupport.ab3"
00018210 <CLIModeSupport.ab3@746> XINCLUDE "CLIModeSupport.ab3"
00018244 <CLIModeSupport.ab3@747> XINCLUDE "CLIModeSupport.ab3"
00018278 <CLIModeSupport.ab3@748> XINCLUDE "CLIModeSupport.ab3"
000182AC <CLIModeSupport.ab3@749> XINCLUDE "CLIModeSupport.ab3"
000182AE <CLIModeSupport.ab3@751> XINCLUDE "CLIModeSupport.ab3"
000182EC <CLIModeSupport.ab3@752> XINCLUDE "CLIModeSupport.ab3"
000182F0 <CLIModeSupport.ab3@753> XINCLUDE "CLIModeSupport.ab3"
0001832E <CLIModeSupport.ab3@756> XINCLUDE "CLIModeSupport.ab3"
0001836C <CLIModeSupport.ab3@757> XINCLUDE "CLIModeSupport.ab3"
0001836E <CLIModeSupport.ab3@758> XINCLUDE "CLIModeSupport.ab3"
00018374 <CLIModeSupport.ab3@759> XINCLUDE "CLIModeSupport.ab3"
00018378 <CLIModeSupport.ab3@760> XINCLUDE "CLIModeSupport.ab3"
0001837A <CLIModeSupport.ab3@762> XINCLUDE "CLIModeSupport.ab3"
000183B8 <CLIModeSupport.ab3@763> XINCLUDE "CLIModeSupport.ab3"
000183F6 <CLIModeSupport.ab3@764> XINCLUDE "CLIModeSupport.ab3"
000183F8 <CLIModeSupport.ab3@765> XINCLUDE "CLIModeSupport.ab3"
000183FA <CLIModeSupport.ab3@766> XINCLUDE "CLIModeSupport.ab3"
000183FC <CLIModeSupport.ab3@767> XINCLUDE "CLIModeSupport.ab3"
00018402 <CLIModeSupport.ab3@768> XINCLUDE "CLIModeSupport.ab3"
00018406 <CLIModeSupport.ab3@769> XINCLUDE "CLIModeSupport.ab3"
00018416 <CLIModeSupport.ab3@771> XINCLUDE "CLIModeSupport.ab3"
0001842E <CLIModeSupport.ab3@772> XINCLUDE "CLIModeSupport.ab3"
00018446 <CLIModeSupport.ab3@773> XINCLUDE "CLIModeSupport.ab3"
0001845E <CLIModeSupport.ab3@774> XINCLUDE "CLIModeSupport.ab3"
00018488 <CLIModeSupport.ab3@776> XINCLUDE "CLIModeSupport.ab3"
000184B2 <CLIModeSupport.ab3@777> XINCLUDE "CLIModeSupport.ab3"
000184E0 <CLIModeSupport.ab3@779> XINCLUDE "CLIModeSupport.ab3"
000184E4 <CLIModeSupport.ab3@780> XINCLUDE "CLIModeSupport.ab3"
0001850C <CLIModeSupport.ab3@781> XINCLUDE "CLIModeSupport.ab3"
0001850E <CLIModeSupport.ab3@782> XINCLUDE "CLIModeSupport.ab3"
0001854C <CLIModeSupport.ab3@783> XINCLUDE "CLIModeSupport.ab3"
00018550 <CLIModeSupport.ab3@784> XINCLUDE "CLIModeSupport.ab3"
0001858E <CLIModeSupport.ab3@785> XINCLUDE "CLIModeSupport.ab3"
00018592 <CLIModeSupport.ab3@786> XINCLUDE "CLIModeSupport.ab3"
000185D0 <CLIModeSupport.ab3@787> XINCLUDE "CLIModeSupport.ab3"
000185D4 <CLIModeSupport.ab3@788> XINCLUDE "CLIModeSupport.ab3"
000185FA <CLIModeSupport.ab3@790> XINCLUDE "CLIModeSupport.ab3"
00018620 <CLIModeSupport.ab3@791> XINCLUDE "CLIModeSupport.ab3"
00018646 <CLIModeSupport.ab3@792> XINCLUDE "CLIModeSupport.ab3"
0001866C <CLIModeSupport.ab3@793> XINCLUDE "CLIModeSupport.ab3"
00018692 <CLIModeSupport.ab3@794> XINCLUDE "CLIModeSupport.ab3"
000186E8 <CLIModeSupport.ab3@795> XINCLUDE "CLIModeSupport.ab3"
0001873E <CLIModeSupport.ab3@796> XINCLUDE "CLIModeSupport.ab3"
0001878C <CLIModeSupport.ab3@797> XINCLUDE "CLIModeSupport.ab3"
000187E2 <CLIModeSupport.ab3@798> XINCLUDE "CLIModeSupport.ab3"
00018808 <CLIModeSupport.ab3@799> XINCLUDE "CLIModeSupport.ab3"
0001882E <CLIModeSupport.ab3@800> XINCLUDE "CLIModeSupport.ab3"
00018854 <CLIModeSupport.ab3@801> XINCLUDE "CLIModeSupport.ab3"
000188AA <CLIModeSupport.ab3@802> XINCLUDE "CLIModeSupport.ab3"
000188F8 <CLIModeSupport.ab3@803> XINCLUDE "CLIModeSupport.ab3"
000189B2 <CLIModeSupport.ab3@804> XINCLUDE "CLIModeSupport.ab3"
00018A08 <CLIModeSupport.ab3@805> XINCLUDE "CLIModeSupport.ab3"
00018A2E <CLIModeSupport.ab3@806> XINCLUDE "CLIModeSupport.ab3"
00018A54 <CLIModeSupport.ab3@807> XINCLUDE "CLIModeSupport.ab3"
00018A7A <CLIModeSupport.ab3@808> XINCLUDE "CLIModeSupport.ab3"
00018AD0 <CLIModeSupport.ab3@809> XINCLUDE "CLIModeSupport.ab3"
00018B26 <CLIModeSupport.ab3@810> XINCLUDE "CLIModeSupport.ab3"
00018B74 <CLIModeSupport.ab3@811> XINCLUDE "CLIModeSupport.ab3"
00018BC2 <CLIModeSupport.ab3@812> XINCLUDE "CLIModeSupport.ab3"
00018C10 <CLIModeSupport.ab3@813> XINCLUDE "CLIModeSupport.ab3"
00018C5E <CLIModeSupport.ab3@814> XINCLUDE "CLIModeSupport.ab3"
00018CAC <CLIModeSupport.ab3@815> XINCLUDE "CLIModeSupport.ab3"
00018CFA <CLIModeSupport.ab3@816> XINCLUDE "CLIModeSupport.ab3"
00018D48 <CLIModeSupport.ab3@817> XINCLUDE "CLIModeSupport.ab3"
00018D6E <CLIModeSupport.ab3@818> XINCLUDE "CLIModeSupport.ab3"
00018D94 <CLIModeSupport.ab3@819> XINCLUDE "CLIModeSupport.ab3"
00018DBA <CLIModeSupport.ab3@820> XINCLUDE "CLIModeSupport.ab3"
00018E08 <CLIModeSupport.ab3@821> XINCLUDE "CLIModeSupport.ab3"
00018E56 <CLIModeSupport.ab3@822> XINCLUDE "CLIModeSupport.ab3"
00018EAC <CLIModeSupport.ab3@823> XINCLUDE "CLIModeSupport.ab3"
00018EFA <CLIModeSupport.ab3@824> XINCLUDE "CLIModeSupport.ab3"
00018F48 <CLIModeSupport.ab3@825> XINCLUDE "CLIModeSupport.ab3"
00018F96 <CLIModeSupport.ab3@826> XINCLUDE "CLIModeSupport.ab3"
00018FBC <CLIModeSupport.ab3@827> XINCLUDE "CLIModeSupport.ab3"
00018FE2 <CLIModeSupport.ab3@828> XINCLUDE "CLIModeSupport.ab3"
00019008 <CLIModeSupport.ab3@829> XINCLUDE "CLIModeSupport.ab3"
00019040 <CLIModeSupport.ab3@830> XINCLUDE "CLIModeSupport.ab3"
00019068 <CLIModeSupport.ab3@831> XINCLUDE "CLIModeSupport.ab3"
0001907C <CLIModeSupport.ab3@832> XINCLUDE "CLIModeSupport.ab3"
000190F0 <CLIModeSupport.ab3@833> XINCLUDE "CLIModeSupport.ab3"
00019136 <CLIModeSupport.ab3@834> XINCLUDE "CLIModeSupport.ab3"
000191E4 <CLIModeSupport.ab3@835> XINCLUDE "CLIModeSupport.ab3"
00019250 <CLIModeSupport.ab3@836> XINCLUDE "CLIModeSupport.ab3"
00019260 <CLIModeSupport.ab3@837> XINCLUDE "CLIModeSupport.ab3"
00019286 <CLIModeSupport.ab3@839> XINCLUDE "CLIModeSupport.ab3"
00019290 <CLIModeSupport.ab3@841> XINCLUDE "CLIModeSupport.ab3"
000192BA <CLIModeSupport.ab3@842> XINCLUDE "CLIModeSupport.ab3"
000192C0 <CLIModeSupport.ab3@843> XINCLUDE "CLIModeSupport.ab3"
000192D0 <CLIModeSupport.ab3@845> XINCLUDE "CLIModeSupport.ab3"
00019370 <CLIModeSupport.ab3@847> XINCLUDE "CLIModeSupport.ab3"
000193B0 <CLIModeSupport.ab3@848> XINCLUDE "CLIModeSupport.ab3"
000193B6 <CLIModeSupport.ab3@850> XINCLUDE "CLIModeSupport.ab3"
0001940C <CLIModeSupport.ab3@851> XINCLUDE "CLIModeSupport.ab3"
00019416 <CLIModeSupport.ab3@853> XINCLUDE "CLIModeSupport.ab3"
00019420 <CLIModeSupport.ab3@855> XINCLUDE "CLIModeSupport.ab3"
0001943A <CLIModeSupport.ab3@856> XINCLUDE "CLIModeSupport.ab3"
0001945C <CLIModeSupport.ab3@912> XINCLUDE "CLIModeSupport.ab3"
0001947E <CLIModeSupport.ab3@913> XINCLUDE "CLIModeSupport.ab3"
000194D8 <CLIModeSupport.ab3@914> XINCLUDE "CLIModeSupport.ab3"
000194FA <CLIModeSupport.ab3@915> XINCLUDE "CLIModeSupport.ab3"
00019554 <CLIModeSupport.ab3@916> XINCLUDE "CLIModeSupport.ab3"
00019596 <CLIModeSupport.ab3@917> XINCLUDE "CLIModeSupport.ab3"
0001959C <CLIModeSupport.ab3@919> XINCLUDE "CLIModeSupport.ab3"
000195AA <CLIModeSupport.ab3@920> XINCLUDE "CLIModeSupport.ab3"
000195B0 <CLIModeSupport.ab3@922> XINCLUDE "CLIModeSupport.ab3"
000195C4 <CLIModeSupport.ab3@923> XINCLUDE "CLIModeSupport.ab3"
000195CE <CLIModeSupport.ab3@924> XINCLUDE "CLIModeSupport.ab3"
00019648 <CLIModeSupport.ab3@925> XINCLUDE "CLIModeSupport.ab3"
00019652 <CLIModeSupport.ab3@926> XINCLUDE "CLIModeSupport.ab3"
00019658 <CLIModeSupport.ab3@927> XINCLUDE "CLIModeSupport.ab3"
0001966C <CLIModeSupport.ab3@930> XINCLUDE "CLIModeSupport.ab3"
00019676 <CLIModeSupport.ab3@931> XINCLUDE "CLIModeSupport.ab3"
000196F6 <CLIModeSupport.ab3@932> XINCLUDE "CLIModeSupport.ab3"
00019700 <CLIModeSupport.ab3@933> XINCLUDE "CLIModeSupport.ab3"
00019706 <CLIModeSupport.ab3@934> XINCLUDE "CLIModeSupport.ab3"
0001971A <CLIModeSupport.ab3@937> XINCLUDE "CLIModeSupport.ab3"
00019724 <CLIModeSupport.ab3@938> XINCLUDE "CLIModeSupport.ab3"
0001976C <CLIModeSupport.ab3@939> XINCLUDE "CLIModeSupport.ab3"
00019776 <CLIModeSupport.ab3@941> XINCLUDE "CLIModeSupport.ab3"
0001977C <CLIModeSupport.ab3@942> XINCLUDE "CLIModeSupport.ab3"
00019790 <CLIModeSupport.ab3@945> XINCLUDE "CLIModeSupport.ab3"
0001979A <CLIModeSupport.ab3@946> XINCLUDE "CLIModeSupport.ab3"
000197E2 <CLIModeSupport.ab3@947> XINCLUDE "CLIModeSupport.ab3"
000197EC <CLIModeSupport.ab3@948> XINCLUDE "CLIModeSupport.ab3"
000197F2 <CLIModeSupport.ab3@949> XINCLUDE "CLIModeSupport.ab3"
00019806 <CLIModeSupport.ab3@952> XINCLUDE "CLIModeSupport.ab3"
0001982C <CLIModeSupport.ab3@953> XINCLUDE "CLIModeSupport.ab3"
00019840 <CLIModeSupport.ab3@956> XINCLUDE "CLIModeSupport.ab3"
00019866 <CLIModeSupport.ab3@957> XINCLUDE "CLIModeSupport.ab3"
0001987A <CLIModeSupport.ab3@960> XINCLUDE "CLIModeSupport.ab3"
000198A0 <CLIModeSupport.ab3@961> XINCLUDE "CLIModeSupport.ab3"
000198B4 <CLIModeSupport.ab3@964> XINCLUDE "CLIModeSupport.ab3"
000198BE <CLIModeSupport.ab3@965> XINCLUDE "CLIModeSupport.ab3"
000198EC <CLIModeSupport.ab3@966> XINCLUDE "CLIModeSupport.ab3"
0001993C <CLIModeSupport.ab3@967> XINCLUDE "CLIModeSupport.ab3"
0001995C <CLIModeSupport.ab3@968> XINCLUDE "CLIModeSupport.ab3"
00019974 <CLIModeSupport.ab3@969> XINCLUDE "CLIModeSupport.ab3"
00019A58 <CLIModeSupport.ab3@970> XINCLUDE "CLIModeSupport.ab3"
00019A62 <CLIModeSupport.ab3@971> XINCLUDE "CLIModeSupport.ab3"
00019A68 <CLIModeSupport.ab3@972> XINCLUDE "CLIModeSupport.ab3"
00019A6A <CLIModeSupport.ab3@974> XINCLUDE "CLIModeSupport.ab3"
00019A7E <CLIModeSupport.ab3@975> XINCLUDE "CLIModeSupport.ab3"
00019AB0 <CLIModeSupport.ab3@978> XINCLUDE "CLIModeSupport.ab3"
00019AB6 <CLIModeSupport.ab3@979> XINCLUDE "CLIModeSupport.ab3"
00019AFA <CLIModeSupport.ab3@980> XINCLUDE "CLIModeSupport.ab3"
00019B0C <CLIModeSupport.ab3@981> XINCLUDE "CLIModeSupport.ab3"
00019B1E <CLIModeSupport.ab3@982> XINCLUDE "CLIModeSupport.ab3"
00019B28 <CLIModeSupport.ab3@983> XINCLUDE "CLIModeSupport.ab3"
00019B2E <CLIModeSupport.ab3@984> XINCLUDE "CLIModeSupport.ab3"
00019B38 <CLIModeSupport.ab3@986> XINCLUDE "CLIModeSupport.ab3"
00019B52 <CLIModeSupport.ab3@987> XINCLUDE "CLIModeSupport.ab3"
00019B52 <AmiBlitz3.ab2@95> XINCLUDE "CLIModeSupport.ab3"
00019BD2 <AmiBlitz3.ab2@100> dynassign.s = dos_GetToolString{"ASSIGN",default_assign$}       ; replaced hardcoded path  tomsmart1 2012 03 09
00019C0A <AmiBlitz3.ab2@101> If dynassign <> ""
00019C20 <AmiBlitz3.ab2@102>     *AssignSema.SignalSemaphore = FindSemaphore_(&dynassign)    ; does it already exist?
00019C2A <AmiBlitz3.ab2@103>     If *AssignSema
00019C3A <AmiBlitz3.ab2@104>       ObtainSemaphoreShared_ *AssignSema
00019C40 <AmiBlitz3.ab2@105>     Else                                                        ; no, create one...
00019C60 <AmiBlitz3.ab2@106>       *AssignSema = AllocVec_ (SizeOf.SignalSemaphore,#MEMF_PUBLIC|#MEMF_CLEAR)
00019C6A <AmiBlitz3.ab2@107>       If *AssignSema
00019C7A <AmiBlitz3.ab2@108>         InitSemaphore_ *AssignSema
00019CAE <AmiBlitz3.ab2@110>         *AssignSema\ss_Link\ln_Name = AllocVec_(FLen(dynassign)+1,#MEMF_PUBLIC|#MEMF_CLEAR)
00019CC0 <AmiBlitz3.ab2@111>         If *AssignSema\ss_Link\ln_Name
00019CFC <AmiBlitz3.ab2@112>           Poke.s  *AssignSema\ss_Link\ln_Name,dynassign
00019D08 <AmiBlitz3.ab2@114>         *AssignSema\ss_Link\ln_Pri  = 1
00019D14 <AmiBlitz3.ab2@115>         *AssignSema\ss_Link\ln_Type = #NT_SIGNALSEM
00019D24 <AmiBlitz3.ab2@117>         AddSemaphore_ *AssignSema
00019D34 <AmiBlitz3.ab2@118>         ObtainSemaphoreShared_ *AssignSema
00019D80 <AmiBlitz3.ab2@124>   mydir.s = dos_GetProgDir{"Sys:"}
00019DE0 <AmiBlitz3.ab2@125>   If dos_SetAssign{dynassign,mydir,False}
00019E74 <AmiBlitz3.ab2@126>     dos_AddAssign{"LIBS:",dos_AddPart{dynassign,"Libs"}}
00019EAC <AmiBlitz3.ab2@129>   Poke$ ?str_blitz3assign,dynassign
00019F2E <AmiBlitz3.ab2@130>   Poke$ ?str_defaultdbug,dos_AddPart{dynassign,"Debug/DefaultDBug"}
00019FB0 <AmiBlitz3.ab2@133>   Poke$ ?str_path_acidlibs,dos_AddPart{dynassign, "BlitzLibs/AcidLibs"}
0001A032 <AmiBlitz3.ab2@134>   Poke$ ?str_path_deflibs ,dos_AddPart{dynassign, "BlitzLibs/DefLibs" }
0001A0B4 <AmiBlitz3.ab2@135>   Poke$ ?str_path_userlibs,dos_AddPart{dynassign, "BlitzLibs/UserLibs"}
0001A136 <AmiBlitz3.ab2@136>   Poke$ ?str_path_includes,dos_AddPart{dynassign, "Sourcecodes/Includes"}
0001A1AA <AmiBlitz3.ab2@137>   my_systemdir$    = dos_AddPart{dynassign, "System"}
0001A21E <AmiBlitz3.ab2@138>   my_residentsdir$ = dos_AddPart{dynassign, "BlitzLibs/Residents"}
0001A292 <AmiBlitz3.ab2@139>   my_blitzlibsdir$ = dos_AddPart{dynassign, "BlitzLibs"}
0001A2C0 <AmiBlitz3.ab2@140>   dos_CreateDir{my_blitzlibsdir$}
0001A2E4 <AmiBlitz3.ab2@141>   dos_CreateDir{Peek$(?str_path_userlibs)}
0001A312 <AmiBlitz3.ab2@142>   dos_CreateDir{my_residentsdir$}
0001A340 <AmiBlitz3.ab2@143>   dos_CreateDir{my_systemdir$}
0001A40A <AmiBlitz3.ab2@149> pedfile$ = dos_GetToolString{"EDITOR",dos_AddPart{my_systemdir$,"PED"}}
0001A442 <AmiBlitz3.ab2@150> Poke.s ?str_pedfile,pedfile$
0001A480 <AmiBlitz3.ab2@152> If dos_GetToolState{"START_WITHOUT_LIBS"} = -1
0001A490 <AmiBlitz3.ab2@153>   Poke.b ?start_without_libs,1
0001A496 <AmiBlitz3.ab2@154> Else
0001A4A6 <AmiBlitz3.ab2@155>   Poke.b ?start_without_libs,0
0001A4CC <AmiBlitz3.ab2@158> !TRANS_INIT{"AmiBlitz3"}     ; init localization via translation.include
0001A4D8 <AmiBlitz3.ab2@162> dbg_fid.l = -1 ; no debug file id yet!
0001A4E2 <AmiBlitz3.ab2@164> If CLIMode
0001A4E8 <AmiBlitz3.ab2@167>   err.l      = False                                       ; indicate that an error has occured
0001A4EE <AmiBlitz3.ab2@168>   showhelp.l = False                                       ; show the CLI tool's help
0001A546 <AmiBlitz3.ab2@171>   cli_progpath.s     = dos_GetProgDir{default_assign$}     ; replaced hardcoded path  tomsmart1 2012 03 09
0001A56E <AmiBlitz3.ab2@172>   cli_sourcefile.s   = ""
0001A596 <AmiBlitz3.ab2@173>   cli_exefile.s      = ""
0001A5BE <AmiBlitz3.ab2@174>   cli_savefile.s     = ""
0001A5E6 <AmiBlitz3.ab2@175>   cli_dumpfile.s     = ""
0001A60E <AmiBlitz3.ab2@176>   cli_includepath.s  = ""
0001A636 <AmiBlitz3.ab2@177>   cli_blitzlibpath.s = ""
0001A63C <AmiBlitz3.ab2@178>   cli_debuginfo.l    = False
0001A642 <AmiBlitz3.ab2@179>   cli_run.l          = False
0001A64A <AmiBlitz3.ab2@180>   cli_dumpflags.l    = $FFFFFFFF
0001A672 <AmiBlitz3.ab2@181>   cli_info.s         = ""
0001A678 <AmiBlitz3.ab2@182>   cli_release.l      = False
0001A682 <AmiBlitz3.ab2@183>   cli_numargs.l      = dos_GetNumArgs{}
0001A688 <AmiBlitz3.ab2@184>   cli_gui.l          = False
0001A690 <AmiBlitz3.ab2@185>   cli_dumpform.l     = 1 ; 0 = bin, 1 = ASCII
0001A698 <AmiBlitz3.ab2@186>   cli_verbose.l      = 1
0001A6B0 <AmiBlitz3.ab2@187>   If cli_numargs=0 Then showhelp=True
0001A6E0 <AmiBlitz3.ab2@191>     arg.s = dos_GetNextArg{}                               ; get the next CLI argument
0001A72C <AmiBlitz3.ab2@192>     larg.s = LCase$(arg)                                   ; lower case the option string
0001A7F4 <AmiBlitz3.ab2@193>     If Left$(larg,1)="-" Then larg = Right$(larg,FLen(larg)-1)
0001A82A <AmiBlitz3.ab2@194>     Select larg
0001A876 <AmiBlitz3.ab2@195>       Case "s" : larg="source"
0001A8C8 <AmiBlitz3.ab2@196>       Case "e" : larg="exe"
0001A91A <AmiBlitz3.ab2@197>       Case "d" : larg="debug"
0001A96C <AmiBlitz3.ab2@198>       Case "r" : larg="release"
0001A9BE <AmiBlitz3.ab2@199>       Case "h" : larg="help"
0001AA10 <AmiBlitz3.ab2@200>       Case "v" : larg="verbose"
0001AA1E <AmiBlitz3.ab2@201>     End Select
0001AA54 <AmiBlitz3.ab2@203>     Select larg
0001AAA8 <AmiBlitz3.ab2@204>       Case "exe"      : cli_exefile     = dos_GetNextArg{}
0001AB02 <AmiBlitz3.ab2@205>       Case "source"   : cli_sourcefile  = dos_GetNextArg{}
0001AB5C <AmiBlitz3.ab2@206>       Case "save"     : cli_savefile    = dos_GetNextArg{}
0001AB8C <AmiBlitz3.ab2@207>       Case "debug"    : cli_debuginfo   = True
0001ABBC <AmiBlitz3.ab2@208>       Case "run"      : cli_run         = True
0001ABEC <AmiBlitz3.ab2@209>       Case "release"  : cli_release     = True
0001AC1C <AmiBlitz3.ab2@210>       Case "ped"      : cli_gui         = True
0001AC76 <AmiBlitz3.ab2@211>       Case "dform"    : cli_dumpform.l  = Vallong(dos_GetNextArg{})
0001ACE8 <AmiBlitz3.ab2@212>       Case "dump"     : cli_info        = LCase$(dos_GetNextArg{})
0001AD18 <AmiBlitz3.ab2@213>                         cli_dumpfile    = dos_GetNextArg{}
0001AD20 <AmiBlitz3.ab2@214>                         cli_dumpflags   = $0
0001AD80 <AmiBlitz3.ab2@215>                         If Instr(cli_info,"all"  ) Then cli_dumpflags | $FFFFFFFF
0001ADE0 <AmiBlitz3.ab2@216>                         If Instr(cli_info,"token") Then cli_dumpflags | #DUMPFLG_TOKENS
0001AE40 <AmiBlitz3.ab2@217>                         If Instr(cli_info,"label") Then cli_dumpflags | #DUMPFLG_LABELS
0001AEA0 <AmiBlitz3.ab2@218>                         If Instr(cli_info,"var"  ) Then cli_dumpflags | #DUMPFLG_VARS
0001AF00 <AmiBlitz3.ab2@219>                         If Instr(cli_info,"const") Then cli_dumpflags | #DUMPFLG_CONSTANTS
0001AF60 <AmiBlitz3.ab2@220>                         If Instr(cli_info,"func" ) Then cli_dumpflags | #DUMPFLG_FUNCTIONS
0001AFC0 <AmiBlitz3.ab2@221>                         If Instr(cli_info,"macro") Then cli_dumpflags | #DUMPFLG_MACROS
0001B020 <AmiBlitz3.ab2@222>                         If Instr(cli_info,"type" ) Then cli_dumpflags | #DUMPFLG_NEWTYPES
0001B080 <AmiBlitz3.ab2@223>                         If Instr(cli_info,"lib"  ) Then cli_dumpflags | #DUMPFLG_LIBS
0001B092 <AmiBlitz3.ab2@224>                         If cli_dumpflags = $0
0001B098 <AmiBlitz3.ab2@225>                          err=True
0001B12C <AmiBlitz3.ab2@226>                          NPrint "\\1b[1m*** ERROR: Invalid flags for dumpfile \\22",cli_info,"\\22 specified!\\1b[0m"
0001B186 <AmiBlitz3.ab2@228>       Case "verbose"  : cli_verbose     = Vallong(dos_GetNextArg{})
0001B1B6 <AmiBlitz3.ab2@229>       Case "h"        : showhelp        = True             ; show the help and quit
0001B1BC <AmiBlitz3.ab2@230>       Default
0001B1F4 <AmiBlitz3.ab2@231>         If arg><""
0001B288 <AmiBlitz3.ab2@232>           NPrint "\\1b[1m*** ERROR: Unknown option \\22",arg,"\\22 specified!\\1b[0m"
0001B28E <AmiBlitz3.ab2@233>           err = True
0001B29C <AmiBlitz3.ab2@235>     End Select
0001B2E8 <AmiBlitz3.ab2@236>   Until arg = "" OR err=True          ; until we processed all arguments
0001B30A <AmiBlitz3.ab2@239>   If err><False OR showhelp = True
0001B314 <AmiBlitz3.ab2@240>     If showhelp
0001B376 <AmiBlitz3.ab2@241>     NPrint "AmiBlitz ",Peek.s(?myversion)
0001B3AE <AmiBlitz3.ab2@242>     NPrint "\\nSyntax: AmiBlitz3 [options]"
0001B3E6 <AmiBlitz3.ab2@243>     NPrint "\\nOptions:"
0001B41E <AmiBlitz3.ab2@244>     NPrint "  -(s)ource <file>    : input source code filename (bb2, ab2 or ab3)"
0001B456 <AmiBlitz3.ab2@245>     NPrint "  -(e)xe <file>       : output executable filename"
0001B48E <AmiBlitz3.ab2@246>     NPrint "  -(d)ebug            : compile with debug info"
0001B4C6 <AmiBlitz3.ab2@247>     NPrint "  -(r)elease          : create release executable (size optimized)"
0001B4FE <AmiBlitz3.ab2@248>     NPrint "  -run                : run compiled program"
0001B536 <AmiBlitz3.ab2@249>     NPrint "  -dump <info> <file> : dump compiler internals to file"
0001B56E <AmiBlitz3.ab2@250>     NPrint "                        (info=all|token|label|var|func|const|macro|type|lib)"
0001B5A6 <AmiBlitz3.ab2@251>     NPrint "  -dform <n>          : format of compiler internals dump (0=bin, 1=ASCII; default=1)"
0001B5DE <AmiBlitz3.ab2@252>     NPrint "  -PED                : start AmiBlitz3 IDE (PED)"
0001B616 <AmiBlitz3.ab2@253>     NPrint "  -save <file>        : re-save source code (convert format, if needed)"
0001B64E <AmiBlitz3.ab2@254>     NPrint "  -(v)erbose <n>      : set verbose level (0, 1 or 2; default=1)"
0001B686 <AmiBlitz3.ab2@255>     NPrint "  -(h)elp             : show this help"
0001B6BE <AmiBlitz3.ab2@256>     NPrint "\\nExample:"
0001B6F6 <AmiBlitz3.ab2@257>     NPrint "  AmiBlitz3 -s \\22DH0:Sourcecodes/MyProgram.ab3\\22 -e RAM:MyProgram.exe"
0001B72E <AmiBlitz3.ab2@258>     NPrint "\\nNote: To start the AmiBlitz3 IDE, run from Workbench or with -PED option."
0001B734 <AmiBlitz3.ab2@261>     Goto abnormal_exit
0001B750 <AmiBlitz3.ab2@264>   If cli_gui        Then CLIMode = False : error_SetFlags{#error_requester}
0001B7B4 <AmiBlitz3.ab2@265>   If cli_sourcefile Then Poke.s ?str_tempfilename,cli_sourcefile
0001B7C4 <AmiBlitz3.ab2@268> Poke.l ?CLIMode,CLIMode
0001B7E8 <AmiBlitz3.ab2@299>   Dim incdim.s (#maxincludes)
0001B80C <AmiBlitz3.ab2@300>   Dim incline.l(#maxincludes)
0001B826 <AmiBlitz3.ab2@566> Function.s Get_Libinfo{addr_libnum.l}
0001B832 <AmiBlitz3.ab2@568>   lib_ab2.b = False : lib_os.b = False
0001B838 <AmiBlitz3.ab2@569>   addr_counter.l = addr_libnum
0001B840 <AmiBlitz3.ab2@570>   skip.l = 0
0001B852 <AmiBlitz3.ab2@571>   If addr_counter=0
0001B880 <AmiBlitz3.ab2@572>     error{"INTERNAL: \\__THIS_FUNCTION: Invalid pointer!"}
0001B89E <AmiBlitz3.ab2@573>     Function Return ""
0001B8AC <AmiBlitz3.ab2@578>     mem.l = Peek.l(addr_counter)
0001B8BA <AmiBlitz3.ab2@583>     addr_counter + 2
0001B8DA <AmiBlitz3.ab2@584>     If (mem = $0000ffff) Then lib_ab2= True : skip = 8
0001B8F4 <AmiBlitz3.ab2@585>     If (mem LSR 16) = $ffe2
0001B8FA <AmiBlitz3.ab2@587>       lib_os = True
0001B902 <AmiBlitz3.ab2@588>       skip = 10
0001B948 <AmiBlitz3.ab2@589>       If Peek$(addr_counter+skip) = "" Then skip + 4
0001B98C <AmiBlitz3.ab2@591>   Until (lib_ab2=True OR lib_os = True) OR (addr_counter>addr_libnum + $400)
0001B9A2 <AmiBlitz3.ab2@593>   If (addr_counter>addr_libnum + $400)
0001B9C0 <AmiBlitz3.ab2@595>     Function Return ""
0001B9C6 <AmiBlitz3.ab2@596>   Else
0001B9EA <AmiBlitz3.ab2@597>     Function Return Peek$(addr_counter + skip)
0001B9F4 <AmiBlitz3.ab2@599> End Function
0001BA12 <AmiBlitz3.ab2@639>   !asm
0001BA18 <AmiBlitz3.ab2@640>   MOVEA.l _execbase,A6
0001BA1C <AmiBlitz3.ab2@641>   MOVEM.l d0/a0,-(a7)
0001BA1E <AmiBlitz3.ab2@643>   MOVEQ #127,d0
0001BA24 <AmiBlitz3.ab2@644>   LEA chartab,a0
0001BA2A <AmiBlitz3.ab2@647>     MOVE.b #1,128(a0)
0001BA2C <AmiBlitz3.ab2@648>     CLR.b (a0)+
0001BA30 <AmiBlitz3.ab2@649>   DBF d0,'l12
0001BA36 <AmiBlitz3.ab2@651>   LEA chartab,a0
0001BA3A <AmiBlitz3.ab2@652>   MOVE.b #1,(a0)
0001BA40 <AmiBlitz3.ab2@653>   MOVE.b #1,","(a0)
0001BA46 <AmiBlitz3.ab2@654>   MOVE.b #1,";"(a0)
0001BA4C <AmiBlitz3.ab2@655>   MOVE.b #1,":"(a0)
0001BA52 <AmiBlitz3.ab2@656>   MOVE.b #1,"("(a0)
0001BA58 <AmiBlitz3.ab2@657>   MOVE.b #1,")"(a0)
0001BA5E <AmiBlitz3.ab2@658>   MOVE.b #1,"="(a0)
0001BA64 <AmiBlitz3.ab2@659>   MOVE.b #1,"+"(a0)
0001BA6A <AmiBlitz3.ab2@660>   MOVE.b #1,"-"(a0)
0001BA70 <AmiBlitz3.ab2@661>   MOVE.b #1,"*"(a0)
0001BA76 <AmiBlitz3.ab2@662>   MOVE.b #1,"/"(a0)
0001BA7C <AmiBlitz3.ab2@663>   MOVE.b #1,"$"(a0)
0001BA82 <AmiBlitz3.ab2@664>   MOVE.b #1,"%"(a0)
0001BA88 <AmiBlitz3.ab2@665>   MOVE.b #1,"."(a0)
0001BA8E <AmiBlitz3.ab2@666>   MOVE.b #1,"["(a0)
0001BA94 <AmiBlitz3.ab2@667>   MOVE.b #1,"]"(a0)
0001BA9A <AmiBlitz3.ab2@668>   MOVE.b #1,"{"(a0)
0001BAA0 <AmiBlitz3.ab2@669>   MOVE.b #1,"}"(a0)
0001BAA6 <AmiBlitz3.ab2@670>   MOVE.b #1,"\"(a0)
0001BAAC <AmiBlitz3.ab2@671>   MOVE.b #1,">"(a0)
0001BAB2 <AmiBlitz3.ab2@672>   MOVE.b #1,"<"(a0)
0001BAB8 <AmiBlitz3.ab2@673>   MOVE.b #1,"&"(a0)
0001BABE <AmiBlitz3.ab2@674>   MOVE.b #1,"|"(a0)
0001BAC4 <AmiBlitz3.ab2@675>   MOVE.b #1,"^"(a0)
0001BACA <AmiBlitz3.ab2@676>   MOVE.b #1,$7e(a0)
0001BAD0 <AmiBlitz3.ab2@677>   MOVE.w #$0101,1(a0)
0001BAD6 <AmiBlitz3.ab2@679>   LEA instrtab,a0
0001BADC <AmiBlitz3.ab2@680>   MOVE.l #labelhash-instrtab,d0
0001BADE <AmiBlitz3.ab2@681>   ASR.l #2,d0
0001BAE0 <AmiBlitz3.ab2@682>   SUBQ.l #1,d0
0001BAE2 <AmiBlitz3.ab2@685>    CLR.l (a0)+
0001BAE4 <AmiBlitz3.ab2@686>    SUBQ.l #1,d0
0001BAE8 <AmiBlitz3.ab2@687>   BNE 'l10
0001BAEE <AmiBlitz3.ab2@689>   LEA allowtab,a0
0001BAF4 <AmiBlitz3.ab2@690>   MOVE.l #255,d0
0001BAF6 <AmiBlitz3.ab2@693>     CLR.b (a0)+
0001BAFA <AmiBlitz3.ab2@694>   DBF d0,'la1
0001BB00 <AmiBlitz3.ab2@696>   LEA allowtab,a0
0001BB06 <AmiBlitz3.ab2@697>   MOVE.b #1,$7d(a0)
0001BB0C <AmiBlitz3.ab2@698>   MOVE.b #1,$7c(a0)
0001BB12 <AmiBlitz3.ab2@699>   MOVE.b #1,$44(a0)
0001BB18 <AmiBlitz3.ab2@700>   MOVE.b #1,$45(a0)
0001BB1E <AmiBlitz3.ab2@701>   MOVE.b #1,$b9(a0)
0001BB24 <AmiBlitz3.ab2@702>   MOVE.b #1,$89(a0)
0001BB2A <AmiBlitz3.ab2@703>   MOVE.b #1,$ce(a0)
0001BB30 <AmiBlitz3.ab2@704>   MOVE.b #1,$cf(a0)
0001BB36 <AmiBlitz3.ab2@705>   MOVE.b #1,$d0(a0)
0001BB3C <AmiBlitz3.ab2@706>   MOVE.b #1,$cd(a0)
0001BB3E <AmiBlitz3.ab2@707>   MOVEQ #0,d0
0001BB44 <AmiBlitz3.ab2@709>   MOVEA.l _execbase,a6
0001BB4A <AmiBlitz3.ab2@714>   MOVE.l #$10000,d0
0001BB50 <AmiBlitz3.ab2@715>   MOVE.l #80000,d1
0001BB52 <AmiBlitz3.ab2@716>   MOVE.l d1,d2
0001BB56 <AmiBlitz3.ab2@717>   JSR _CreatePool(a6)                                      ; alloc memory for own stuff
0001BB5C <AmiBlitz3.ab2@718>   MOVE.l d0,mempool
0001BB60 <AmiBlitz3.ab2@719>   MOVEM.l (a7)+,d0/a0
0001BB66 <AmiBlitz3.ab2@720>   TST.l mempool
0001BB6A <AmiBlitz3.ab2@721>   BEQ shutdown_compiler
0001BB6E <AmiBlitz3.ab2@723>   MOVEA.l $114(A6),A4                                      ; get adress of this.Task-Structure
0001BB74 <AmiBlitz3.ab2@724>   MOVE.l A4,ptr_ThisTask
0001BB78 <AmiBlitz3.ab2@726>   BSR.w open_doslibrary
0001BB7C <AmiBlitz3.ab2@727>   BEQ.w shutdown_compiler
0001BB82 <AmiBlitz3.ab2@729>   MOVE.l D2,stacksize
0001BB84 <AmiBlitz3.ab2@733>   MOVEQ.l #$00,D0
0001BB8A <AmiBlitz3.ab2@734>   LEA tokens,A0
0001BB8C <AmiBlitz3.ab2@737>     ADDQ.w #1,D0
0001BB8E <AmiBlitz3.ab2@738>     MOVE.l (A0),D1
0001BB92 <AmiBlitz3.ab2@739>     BEQ.w JL_0_2D1C
0001BB94 <AmiBlitz3.ab2@740>     MOVEA.l D1,A0
0001BB98 <AmiBlitz3.ab2@741> BRA.w JL_0_2D0E
0001BB9E <AmiBlitz3.ab2@744>   MOVE.l A0,end_of_tokenlist
0001BBA2 <AmiBlitz3.ab2@746>   BSR.w makeasmtable
0001BBAA <AmiBlitz3.ab2@747>   MOVE.w #$FFFF,returncode_org                             ;#-1,returncode
0001BBAE <AmiBlitz3.ab2@749>   BSR.w open_mathlibrary
0001BBB2 <AmiBlitz3.ab2@750>   BEQ.w freemem_and_quit4
0001BBB8 <AmiBlitz3.ab2@752>   MOVE.l constmaxpc,D0
0001BBBA <AmiBlitz3.ab2@753>   MOVEQ.l #$02,D1                                          ;chipmem            ;01 org source
0001BBC0 <AmiBlitz3.ab2@754>   MOVEA.l _execbase,A6
0001BBC4 <AmiBlitz3.ab2@755>   JSR _AllocMem(A6)                                        ;mem for branch routine
0001BBCA <AmiBlitz3.ab2@756>   MOVE.l D0,constpcat
0001BBCE <AmiBlitz3.ab2@757>   BEQ.w freemem_and_quit3
0001BBD4 <AmiBlitz3.ab2@758>   ADD.l constmaxpc,D0
0001BBDA <AmiBlitz3.ab2@759>   MOVE.l D0,constlibat
0001BBE0 <AmiBlitz3.ab2@761>   MOVE.l macrobuffer_size,D0
0001BBE6 <AmiBlitz3.ab2@762>   CMP.l #40000,d0
0001BBEA <AmiBlitz3.ab2@763>   BGE 'ok
0001BBF0 <AmiBlitz3.ab2@764>     MOVE.l #40000,d0
0001BBF6 <AmiBlitz3.ab2@765>     MOVE.l d0,macrobuffer_size
0001BBF8 <AmiBlitz3.ab2@768>   ADDQ.l #4,d0
0001BBFA <AmiBlitz3.ab2@769>   MOVEQ.l #$01,D1
0001BC00 <AmiBlitz3.ab2@770>   MOVEA.l _execbase,A6
0001BC04 <AmiBlitz3.ab2@771>   JSR _AllocMem(A6)                                        ;macro mem
0001BC06 <AmiBlitz3.ab2@772>   MOVE.l d0,a0
0001BC0C <AmiBlitz3.ab2@773>   MOVE.l macrobuffer_size,(a0)+
0001BC0E <AmiBlitz3.ab2@774>   MOVE.l a0,d0
0001BC14 <AmiBlitz3.ab2@775>   MOVE.l D0,ptr_macrobuffer_begin
0001BC18 <AmiBlitz3.ab2@776>   BEQ.w freemem_and_quit2
0001BC1E <AmiBlitz3.ab2@777>   ADD.l macrobuffer_size,D0
0001BC24 <AmiBlitz3.ab2@778>   MOVE.l D0,ptr_macrobuffer_end
0001BC2A <AmiBlitz3.ab2@780>   TST.l CLIMode
0001BC2E <AmiBlitz3.ab2@781>   BEQ load_ped
0001BC58 <AmiBlitz3.ab2@784>   !basic
0001BC62 <AmiBlitz3.ab2@785>   succ.l = InitEmulatedPED{}
0001BC66 <AmiBlitz3.ab2@786>   GetD0 succ
0001BC84 <AmiBlitz3.ab2@787>   !asm
0001BC86 <AmiBlitz3.ab2@788>   TST.l d0
0001BC8A <AmiBlitz3.ab2@789>   BEQ freemem_and_quit
0001BC90 <AmiBlitz3.ab2@790> JMP skip_ped
0001BC96 <AmiBlitz3.ab2@795>   MOVE.l #str_pedfile,D1                                   ; Load PED
0001BC9C <AmiBlitz3.ab2@796>   MOVEA.l _dosbase,A6
0001BCA0 <AmiBlitz3.ab2@797>   JSR _LoadSeg(A6)
0001BCA6 <AmiBlitz3.ab2@798>   MOVE.l D0,ptr_seg_ped
0001BCAA <AmiBlitz3.ab2@800>   BEQ.w cant_load_PED         ; was freemem_and_quit  added error massage  that we can't load it  tomsmart1  2012 03
0001BCAC <AmiBlitz3.ab2@804>   MOVEA.l D0,A2
0001BCAE <AmiBlitz3.ab2@805>   ADDA.l A2,A2
0001BCB0 <AmiBlitz3.ab2@806>   ADDA.l A2,A2
0001BCB6 <AmiBlitz3.ab2@808>   LEA teddata,a1                                           ;lea edstruct,A1
0001BCBC <AmiBlitz3.ab2@809>   MOVE.l #"TEDY",d1
0001BCC0 <AmiBlitz3.ab2@810>   JSR 4(A2)                                                ; Run PED
0001BCC6 <AmiBlitz3.ab2@812>   MOVE.l A0,ped_startup_addr                               ; PED returns address of routine "startup_code"
0001BCCC <AmiBlitz3.ab2@813>   MOVE.l A1,comdata                                        ; PED returns address of comdata-area in A1
0001BD0A <AmiBlitz3.ab2@815>   !ComData_GetW{comWord_PEDIsAvailable,D0}                 ; if PED_IsAvailable=0, quit AmiBlitz
0001BD0E <AmiBlitz3.ab2@816>   BEQ.w unload_ped
0001BD12 <AmiBlitz3.ab2@817> 
0001BD16 <AmiBlitz3.ab2@818>   BNE old_version_of_PED                                   ; no, than exit
0001BD54 <AmiBlitz3.ab2@824>   !ComData_GetL{comData_Magic,D0}
0001BD5A <AmiBlitz3.ab2@825>   CMP.l ##MagicIdentifier_Long,D0                          ;"~::~",D0    ; replace with a constants  tomsmart1 2012 03 09
0001BD5E <AmiBlitz3.ab2@826>   BNE unload_ped
0001BD96 <AmiBlitz3.ab2@829>   !ComData_SetL{comPtr_Trap15            ,#directTrap15 }
0001BDCE <AmiBlitz3.ab2@830>   !ComData_SetL{comPtr_DirectBuffer      ,#directbuffer}
0001BE06 <AmiBlitz3.ab2@831>   !ComData_SetL{comPtr_MacroBase         ,#macrobase}
0001BE3E <AmiBlitz3.ab2@832>   !ComData_SetL{comPtr_VarBase           ,#varbase }
0001BE76 <AmiBlitz3.ab2@833>   !ComData_SetL{comPtr_InstrBase         ,#instrtab}
0001BEAE <AmiBlitz3.ab2@834>   !ComData_SetL{comPtr_LibPointer        ,#libpointer}
0001BEE6 <AmiBlitz3.ab2@835>   !ComData_SetL{comPtr_CompilerVersion   ,#myversion }
0001BF1E <AmiBlitz3.ab2@836>   !ComData_SetL{comPtr_VersionInformation,#versioninformation}
0001BF56 <AmiBlitz3.ab2@837>   !ComData_SetL{comPtr_NumberOfBuilds    ,#number_of_builds}
0001BF8E <AmiBlitz3.ab2@838>   !ComData_SetL{comFunc_SaveSource       ,#ab3_SaveSource}
0001BFC6 <AmiBlitz3.ab2@839>   !ComData_SetL{comFunc_LoadSource       ,#ab3_LoadSource}
0001BFFE <AmiBlitz3.ab2@840>   !ComData_SetL{comFunc_ClearSource      ,#ab3_ClearSource}
0001C036 <AmiBlitz3.ab2@843>   !ComData_SetL{comFunc_CalculatExpression       ,#menu_calculator}
0001C06E <AmiBlitz3.ab2@844>   !ComData_SetL{comPtr_CalculatorExpressionString,#str_calcexpression}
0001C0A6 <AmiBlitz3.ab2@847>   !ComData_SetL{comFunc_BackupXtraData           ,#BackupXtraData}
0001C0DE <AmiBlitz3.ab2@848>   !ComData_SetL{comFunc_RestoreXtraData          ,#RestoreXtraData}
0001C116 <AmiBlitz3.ab2@850>   !ComData_SetL{comFunc_GetObjectEntry           ,#getobjectentry}
0001C14E <AmiBlitz3.ab2@851>   !ComData_SetL{comFunc_StoreMaxObjects          ,#storemaxobjects}
0001C186 <AmiBlitz3.ab2@853>   !ComData_SetL{comFunc_ReloadResidentsForPED    ,#ReloadResidentsForPED}
0001C1BE <AmiBlitz3.ab2@854>   !ComData_SetL{comFunc_FreeClearResidentsForPED ,#FreeClearResidentsForPED}    ; add tomsmart1 2012 06 09
0001C1F6 <AmiBlitz3.ab2@856>   !ComData_SetL{comPtr_Residents_Table           ,#residents_table}
0001C22E <AmiBlitz3.ab2@857>   !ComData_SetL{comPtr_Stringbuffer_Long         ,#stringbuffer}
0001C266 <AmiBlitz3.ab2@858>   !ComData_SetL{comPtr_Stacksize_Long            ,#stacksize}
0001C29E <AmiBlitz3.ab2@859>   !ComData_SetL{comPtr_Create_Iconfile_Byte      ,#create_iconfile}
0001C2D6 <AmiBlitz3.ab2@860>   !ComData_SetL{comPtr_Make_Smallestcode_Byte    ,#make_smallestcode}
0001C30E <AmiBlitz3.ab2@861>   !ComData_SetL{comPtr_Link_Debuginfo_Byte       ,#link_debuginfo}
0001C346 <AmiBlitz3.ab2@862>   !ComData_SetL{comPtr_Use_Debugger_Byte         ,#use_debugger}
0001C37E <AmiBlitz3.ab2@863>   !ComData_SetL{comPtr_Autorun_Byte              ,#autorun}
0001C3B6 <AmiBlitz3.ab2@864>   !ComData_SetL{comPtr_Interruptcheck_Byte       ,#interruptcheck}
0001C3EE <AmiBlitz3.ab2@865>   !ComData_SetL{comPtr_Assemblercheck_Byte       ,#assemblercheck}
0001C426 <AmiBlitz3.ab2@866>   !ComData_SetL{comPtr_Overflowcheck_Byte        ,#overflowcheck}
0001C45E <AmiBlitz3.ab2@867>   !ComData_SetL{comPtr_Number_of_Objects_Word    ,#number_of_objects}
0001C496 <AmiBlitz3.ab2@868>   !ComData_SetL{comPtr_MaxObjects_Value_Word     ,#maxobjects_value}
0001C4CE <AmiBlitz3.ab2@869>   !ComData_SetL{comPtr_MaxObject_Pos_Word        ,#maxobject_pos}
0001C4D4 <AmiBlitz3.ab2@873>   CLR.w returncode_org
0001C4FE <AmiBlitz3.ab2@875>   !basic
0001C508 <AmiBlitz3.ab2@876>   If CLIMode
0001C57A <AmiBlitz3.ab2@877>     If cli_verbose>=2 Then NPrint !TRANS{"Loading BlitzLibs."}
0001C598 <AmiBlitz3.ab2@879>   !asm
0001C59E <AmiBlitz3.ab2@883>   TST.b start_without_libs
0001C5A2 <AmiBlitz3.ab2@884>   BNE skip_loading_libs
0001C5A6 <AmiBlitz3.ab2@885>     BSR.w call_setpointerbusy
0001C5B0 <AmiBlitz3.ab2@886>     MOVE.l #$FFFFffff,linenumat
0001C5B4 <AmiBlitz3.ab2@887>     BSR.w get_libraries
0001C5BA <AmiBlitz3.ab2@888>     JSR init_libraries
0001C5BE <AmiBlitz3.ab2@889>     BSR.w init_buffers
0001C5C2 <AmiBlitz3.ab2@890>     BSR.w call_setpointernormal
0001C5C4 <AmiBlitz3.ab2@895>   MOVEQ.l #-$01,D0
0001C5CA <AmiBlitz3.ab2@896>   MOVEA.l _execbase,A6
0001C5CE <AmiBlitz3.ab2@897>   JSR _AllocSignal(A6)
0001C5D4 <AmiBlitz3.ab2@898>   MOVE.l D0,signalNum
0001C5D6 <AmiBlitz3.ab2@899>   MOVEQ.l #$00,D1
0001C5D8 <AmiBlitz3.ab2@900>   BSET D0,D1
0001C5DE <AmiBlitz3.ab2@901>   MOVE.l D1,signals
0001C5E4 <AmiBlitz3.ab2@905>   MOVE.l #str_defaultdbug,D1
0001C5E8 <AmiBlitz3.ab2@906>   MOVEA.l _dosbase(PC),A6
0001C5EC <AmiBlitz3.ab2@907>   JSR _LoadSeg(A6)
0001C5F2 <AmiBlitz3.ab2@908>   MOVE.l D0,ptr_seg_debugger
0001C5F4 <AmiBlitz3.ab2@909>   TST.l d0
0001C5F8 <AmiBlitz3.ab2@910>   BNE ok_12
0001C622 <AmiBlitz3.ab2@911>     !basic
0001C678 <AmiBlitz3.ab2@912>     error{!TRANS{"The Debugexecutor `Defaultdbug` was not found.\\nDebugging is not possible."}}
0001C696 <AmiBlitz3.ab2@913>     !asm
0001C69C <AmiBlitz3.ab2@916>   TST.l CLIMode
0001C6A0 <AmiBlitz3.ab2@917>   BEQ run_ped
0001C6CA <AmiBlitz3.ab2@923>   !basic
0001C6D0 <AmiBlitz3.ab2@924>   err.l = False
0001C6FC <AmiBlitz3.ab2@932>   If cli_sourcefile
0001C71C <AmiBlitz3.ab2@933>     lock.l = Lock_(&cli_sourcefile,#ACCESS_READ)
0001C726 <AmiBlitz3.ab2@934>     If lock
0001C74A <AmiBlitz3.ab2@935>       NameFromLock_ lock,&cli_tempstr,1024
0001C774 <AmiBlitz3.ab2@936>       cli_sourcefile.s = Peek.s(&cli_tempstr)
0001C784 <AmiBlitz3.ab2@937>       UnLock_ lock
0001C7B0 <AmiBlitz3.ab2@940>     If cli_exefile
0001C802 <AmiBlitz3.ab2@941>       SetCurrentDir{dos_PathPart{cli_sourcefile}}
0001C85A <AmiBlitz3.ab2@942>       path.s = dos_PathPart{cli_exefile}
0001C87A <AmiBlitz3.ab2@943>       lock.l = Lock_(&path,#ACCESS_READ)
0001C884 <AmiBlitz3.ab2@944>       If lock
0001C8A8 <AmiBlitz3.ab2@945>         NameFromLock_ lock,&cli_tempstr,1024
0001C8D2 <AmiBlitz3.ab2@946>         path.s = Peek.s(&cli_tempstr)
0001C980 <AmiBlitz3.ab2@947>         cli_exefile = dos_AddPart{path,dos_FilePart{cli_exefile}}
0001C990 <AmiBlitz3.ab2@948>         UnLock_ lock
0001C9DA <AmiBlitz3.ab2@959>   If cli_verbose>=2 Then NPrint "Initializing token hashmap."
0001CA4E <AmiBlitz3.ab2@960> 
0001CA58 <AmiBlitz3.ab2@961>   *PreProcessor.preprocessor = preproc_Create{}
0001CA68 <AmiBlitz3.ab2@962>   Poke.l ?comPtr_PreProcessor,*PreProcessor
0001CA9A <AmiBlitz3.ab2@963>   preproc_LoadTokens{*PreProcessor,TokenHashMapFile}
0001CAAE <AmiBlitz3.ab2@964>   If *PreProcessor\tokens=#NULL
0001CB28 <AmiBlitz3.ab2@965>     If cli_verbose>=1 Then NPrint "No hashmap found (\\22"+TokenHashMapFile+"\\22), will be created..."
0001CB32 <AmiBlitz3.ab2@966>     preproc_QueryTokens{*PreProcessor}
0001CB64 <AmiBlitz3.ab2@967>     preproc_SaveTokens{*PreProcessor,TokenHashMapFile}
0001CBB0 <AmiBlitz3.ab2@975>   If cli_sourcefile><"" AND err=False
0001CC56 <AmiBlitz3.ab2@976>     If cli_verbose>=2 Then NPrint "Loading sourcecode \\22",cli_sourcefile,"\\22."
0001CC88 <AmiBlitz3.ab2@977>     succ=LoadSource{cli_sourcefile}
0001CC92 <AmiBlitz3.ab2@978>     If succ
0001CCCA <AmiBlitz3.ab2@979> 
0001CD44 <AmiBlitz3.ab2@980>         If cli_verbose>=1 Then NPrint "Compiling "+cli_sourcefile+"..."
0001CD7E <AmiBlitz3.ab2@981>         comerr.l = CompileSource{cli_exefile,cli_debuginfo,cli_release}
0001CD88 <AmiBlitz3.ab2@983>         If comerr
0001CD8E <AmiBlitz3.ab2@985>         Else
0001CD94 <AmiBlitz3.ab2@989>     Else
0001CDE4 <AmiBlitz3.ab2@990>       If cli_verbose>=0 NPrint "\\1b[1m*** ERROR: Unable to read source file!\\1b[0m" : err=True
0001CE30 <AmiBlitz3.ab2@994>   If cli_savefile><"" AND err=False
0001CE98 <AmiBlitz3.ab2@995>     If cli_verbose>=2 Then NPrint "Saving Sourcefiles as "+cli_savefile
0001CEC6 <AmiBlitz3.ab2@996>     SaveSource{cli_savefile}
0001CF12 <AmiBlitz3.ab2@999>   If cli_dumpfile><"" AND err=False
0001CF5C <AmiBlitz3.ab2@1000>     If cli_verbose>=2 Then NPrint "Saving dumpfile."
0001CF92 <AmiBlitz3.ab2@1001>     DumpFile{cli_dumpfile,cli_dumpflags,cli_dumpform}
0001CF9C <AmiBlitz3.ab2@1004>   If cli_run
0001CFB0 <AmiBlitz3.ab2@1005>     If comerr=False
0001CFDC <AmiBlitz3.ab2@1006>       If cli_exefile
0001D056 <AmiBlitz3.ab2@1007>         If cli_verbose>=1 Then NPrint "Compiling "+cli_sourcefile+"..."
0001D084 <AmiBlitz3.ab2@1008>         comerr.l = CompileSource{"",cli_debuginfo,cli_release} ; re-compile for launch!
0001D0CE <AmiBlitz3.ab2@1010>       If cli_verbose>=1 Then NPrint "Running program..."
0001D0D8 <AmiBlitz3.ab2@1011> 
0001D0DA <AmiBlitz3.ab2@1013>         CLR.l d0
0001D118 <AmiBlitz3.ab2@1014>         !ComData_GetB{comByte_RunningFlag,D0}
0001D11C <AmiBlitz3.ab2@1015>         running.l = PutD0
0001D138 <AmiBlitz3.ab2@1016>         If running Then Delay_ 50
0001D14C <AmiBlitz3.ab2@1018>       Until running=False
0001D160 <AmiBlitz3.ab2@1019>       If Peek.l(?_runerror)
0001D1B0 <AmiBlitz3.ab2@1020>         If cli_verbose>=0 NPrint "\\1b[1m*** ERROR: Unable to run compiled program!\\1b[0m" : err=True
0001D1C2 <AmiBlitz3.ab2@1031>   preproc_Free{*PreProcessor} : *PreProcessor=#NULL
0001D20C <AmiBlitz3.ab2@1032>   If cli_verbose>=2 Then NPrint "Exit AmiBlitz3."
0001D212 <AmiBlitz3.ab2@1033>   DeinitEmulatedPED{}
0001D230 <AmiBlitz3.ab2@1035>   !asm
0001D236 <AmiBlitz3.ab2@1036> JMP terminate_ab3
0001D23C <AmiBlitz3.ab2@1041>   MOVEA.l ped_startup_addr,A1
0001D242 <AmiBlitz3.ab2@1042>   LEA str_tempfilename,A0
0001D244 <AmiBlitz3.ab2@1043>   JSR (A1)
0001D24A <AmiBlitz3.ab2@1050>   MOVE.l signalNum,D0
0001D250 <AmiBlitz3.ab2@1051>   MOVEA.l _execbase,A6
0001D254 <AmiBlitz3.ab2@1052>   JSR _FreeSignal(A6)
0001D25A <AmiBlitz3.ab2@1054>   MOVE.l ptr_seg_debugger,D1
0001D25E <AmiBlitz3.ab2@1055>   BEQ.b skip_unload_debugger
0001D262 <AmiBlitz3.ab2@1056>     MOVEA.l _dosbase(PC),A6
0001D266 <AmiBlitz3.ab2@1057>     JSR _UnLoadSeg(A6)
0001D26A <AmiBlitz3.ab2@1060>   BSR.w Aclearallvars
0001D26E <AmiBlitz3.ab2@1061>   BSR.w free_residents
0001D274 <AmiBlitz3.ab2@1062>   JSR free_blitzlibs
0001D27A <AmiBlitz3.ab2@1065>   MOVE.l ptr_seg_ped,D1
0001D27E <AmiBlitz3.ab2@1066>   BEQ freemem_and_quit
0001D282 <AmiBlitz3.ab2@1067>   MOVEA.l _dosbase(PC),A6
0001D286 <AmiBlitz3.ab2@1068>   JSR _UnLoadSeg(A6)
0001D28A <AmiBlitz3.ab2@1069>   BRA freemem_and_quit     ; added by tomsmart1 for Ped errormessage
0001D2B4 <AmiBlitz3.ab2@1072>   !basic
0001D36C <AmiBlitz3.ab2@1073> 
0001D38A <AmiBlitz3.ab2@1074>   !asm
0001D38E <AmiBlitz3.ab2@1075>   BRA freemem_and_quit
0001D3B8 <AmiBlitz3.ab2@1078>   !basic
0001D470 <AmiBlitz3.ab2@1079>   error{!TRANS{"Can't load the Editor:\n"} + pedfile$ + !TRANS{"\n must quit, sorry!"} }  ; show error message  tomsmart1
0001D48E <AmiBlitz3.ab2@1080>   !asm
0001D492 <AmiBlitz3.ab2@1084>   BSR.w freeallox
0001D498 <AmiBlitz3.ab2@1085>   MOVEA.l ptr_macrobuffer_begin,A1
0001D49A <AmiBlitz3.ab2@1086>   MOVE.l -(a1),D0
0001D49C <AmiBlitz3.ab2@1087>   ADDQ.l #4,d0
0001D4A2 <AmiBlitz3.ab2@1088>   MOVEA.l _execbase,A6
0001D4A6 <AmiBlitz3.ab2@1089>   JSR _FreeMem(A6)
0001D4AC <AmiBlitz3.ab2@1092>   MOVEA.l _dosbase,A1
0001D4B2 <AmiBlitz3.ab2@1093>   MOVEA.l _execbase,A6
0001D4B6 <AmiBlitz3.ab2@1094>   JSR _CloseLibrary(A6)
0001D4BC <AmiBlitz3.ab2@1096>   MOVEA.l constpcat,A1
0001D4C2 <AmiBlitz3.ab2@1097>   MOVE.l constmaxpc,D0
0001D4C8 <AmiBlitz3.ab2@1098>   MOVEA.l _execbase,A6
0001D4CC <AmiBlitz3.ab2@1099>   JSR _FreeMem(A6)
0001D4D2 <AmiBlitz3.ab2@1102>   MOVEA.l _mathffpbase,A1
0001D4D8 <AmiBlitz3.ab2@1103>   MOVEA.l _execbase,A6
0001D4DC <AmiBlitz3.ab2@1104>   JSR _CloseLibrary(A6)
0001D4E2 <AmiBlitz3.ab2@1114>     MOVEA.l _execbase,A6
0001D4E8 <AmiBlitz3.ab2@1115>     MOVE.l mempool,a0
0001D4EC <AmiBlitz3.ab2@1116>     JSR _DeletePool(a6)
0001D4F2 <AmiBlitz3.ab2@1117>     CLR.l pushat
0001D4F8 <AmiBlitz3.ab2@1124>   JSR free_unusedfunctions
0001D4FA <AmiBlitz3.ab2@1125>   MOVEQ #0,d0
0001D508 <AmiBlitz3.ab2@1128>   !exitasm
0001D540 <AmiBlitz3.ab2@1129>   If dynassign<>""
0001D54A <AmiBlitz3.ab2@1130>     If *AssignSema
0001D55A <AmiBlitz3.ab2@1131>       ReleaseSemaphore_ *AssignSema
0001D572 <AmiBlitz3.ab2@1132>       If (AttemptSemaphore_ (*AssignSema))                 ; we are the exclusive owner of the sema now!
0001D606 <AmiBlitz3.ab2@1133>         dos_RemAssign{"LIBS:",dos_AddPart{dynassign,"Libs"}}
0001D640 <AmiBlitz3.ab2@1134>         dos_RemAssign{dynassign}
0001D650 <AmiBlitz3.ab2@1135>         RemSemaphore_ *AssignSema
0001D660 <AmiBlitz3.ab2@1136>         ReleaseSemaphore_ *AssignSema
0001D696 <AmiBlitz3.ab2@1137>         If *AssignSema\ss_Link\ln_Name Then FreeVec_ *AssignSema\ss_Link\ln_Name : *AssignSema\ss_Link\ln_Name = #NULL
0001D6A6 <AmiBlitz3.ab2@1138>         FreeVec_ *AssignSema
0001D6AE <AmiBlitz3.ab2@1139>         *AssignSema = #NULL
0001D6DC <AmiBlitz3.ab2@1143>   SetCurrentDir{cli_path}
0001D6FE <AmiBlitz3.ab2@1144>   !coutclose
0001D704 <AmiBlitz3.ab2@1145> End
0001D710 <AmiBlitz3.ab2@1150> str_doslibrary:     Dc.b "dos.library",0 : Even
0001D714 <AmiBlitz3.ab2@1151> _dosbase:           Ds.l 1
0001D71A <AmiBlitz3.ab2@1155>   MOVEA.l _execbase,A6
0001D720 <AmiBlitz3.ab2@1156>   LEA str_doslibrary,A1
0001D724 <AmiBlitz3.ab2@1157>   JSR _OldOpenLibrary(A6)
0001D72A <AmiBlitz3.ab2@1158>   MOVE.l D0,_dosbase
0001D72C <AmiBlitz3.ab2@1159> RTS
0001D732 <AmiBlitz3.ab2@1163>   MOVEA.l #str_mathffpname,A1
0001D738 <AmiBlitz3.ab2@1164>   MOVEA.l _execbase,A6
0001D73C <AmiBlitz3.ab2@1165>   JSR _OldOpenLibrary(A6)
0001D742 <AmiBlitz3.ab2@1166>   MOVE.l D0,_mathffpbase
0001D744 <AmiBlitz3.ab2@1167> RTS
0001D776 <AmiBlitz3.ab2@1173>   !ComData_JMP{comFunc_SetNormalPointer}
0001D7A8 <AmiBlitz3.ab2@1181>   !ComData_JMP{comFunc_SetBusyPointer}
0001D7D2 <AmiBlitz3.ab2@1186>   !basic
0001D7D6 <AmiBlitz3.ab2@1187>   ab3save_filenameP.l = PutD0
0001D7E0 <AmiBlitz3.ab2@1188>   If ab3save_filenameP
0001D808 <AmiBlitz3.ab2@1189>     ab3save_filename.s = Peek.s(ab3save_filenameP)
0001D836 <AmiBlitz3.ab2@1191>     SaveSource{ab3save_filename}
0001D83C <AmiBlitz3.ab2@1192>   Else
0001D86A <AmiBlitz3.ab2@1193>     error{"INTERNAL ERROR: no filename passed in D0 to SaveSource{}!"}
0001D888 <AmiBlitz3.ab2@1195>   !asm
0001D88A <AmiBlitz3.ab2@1196>   RTS
0001D8B4 <AmiBlitz3.ab2@1199>   !basic
0001D8B8 <AmiBlitz3.ab2@1200>   ab3save_filenameP.l = PutD0
0001D8C2 <AmiBlitz3.ab2@1201>   If ab3save_filenameP
0001D8EA <AmiBlitz3.ab2@1202>     ab3save_filename.s = Peek.s(ab3save_filenameP)
0001D918 <AmiBlitz3.ab2@1203>     LoadSource{ab3save_filename}
0001D91E <AmiBlitz3.ab2@1204>   Else
0001D94C <AmiBlitz3.ab2@1205>     error{"INTERNAL ERROR: no filename passed in D0 to LoadSource{}!"}
0001D96A <AmiBlitz3.ab2@1207>   !asm
0001D96C <AmiBlitz3.ab2@1208>   RTS
0001D996 <AmiBlitz3.ab2@1211>   !basic
0001D99C <AmiBlitz3.ab2@1212>   ClearSource{}
0001D9BA <AmiBlitz3.ab2@1213>   !asm
0001D9BC <AmiBlitz3.ab2@1214>   RTS
0001D9E6 <AmiBlitz3.ab2@1217>   !basic
0001D9EC <AmiBlitz3.ab2@1218>   OpenConsoleFake{}
0001DA0A <AmiBlitz3.ab2@1219>   !asm
0001DA0C <AmiBlitz3.ab2@1220>   RTS
0001DA36 <AmiBlitz3.ab2@1224>   !basic
0001DA3C <AmiBlitz3.ab2@1225>   CloseConsoleFake{}
0001DA5A <AmiBlitz3.ab2@1226>   !asm
0001DA5C <AmiBlitz3.ab2@1227>   RTS
0001DA62 <AmiBlitz3.ab2@1231>   MOVE.w d6,menuitemdebug
0001DA8C <AmiBlitz3.ab2@1232>   !basic
0001DA9E <AmiBlitz3.ab2@1233>   menuitemx.l = Peek.w(?menuitemdebug)
0001DAC4 <AmiBlitz3.ab2@1234>   If menuitemx>16 OR  menuitemx<0
0001DB2C <AmiBlitz3.ab2@1235>     error{"Called invalid AB3 Menuitem #"+Str$(menuitemx)+"!"}
0001DB34 <AmiBlitz3.ab2@1236>     menuitemx=0
0001DB44 <AmiBlitz3.ab2@1238>   Poke.w ?menuitemdebug,menuitemx
0001DB62 <AmiBlitz3.ab2@1239>   !asm
0001DB68 <AmiBlitz3.ab2@1240>   MOVE.w menuitemdebug,d6
0001DB6E <AmiBlitz3.ab2@1243>   MOVE.l A5,firstitem_
0001DB74 <AmiBlitz3.ab2@1244>   MOVE.w D7,numlines_org
0001DB7A <AmiBlitz3.ab2@1245>   MOVE.l d7,numlines
0001DB7C <AmiBlitz3.ab2@1246>   LSL.w #2,D6
0001DB82 <AmiBlitz3.ab2@1247>   LEA menu_items,A0
0001DB86 <AmiBlitz3.ab2@1248>   MOVEA.l $0(A0,D6.W),A0
0001DB90 <AmiBlitz3.ab2@1249>   MOVE.l #$FFFFffff,linenumat
0001DB9A <AmiBlitz3.ab2@1250>   MOVE.l #$FFFFffff,compilelinecounter
0001DB9C <AmiBlitz3.ab2@1254>   JSR (A0)
0001DBA2 <AmiBlitz3.ab2@1255>   MOVE.l compilelinecounter,D0
0001DBA4 <AmiBlitz3.ab2@1256> RTS
0001DBA8 <AmiBlitz3.ab2@1258> menuitemdebug: Dc.l 0
0001DBAC <AmiBlitz3.ab2@1260> mempool                Dc.l 0
0001DBC2 <AmiBlitz3.ab2@1261> str_loaddebugmessage:  Dc.b "Debug module to load",0 : Even
0001DBC8 <AmiBlitz3.ab2@1262> dloaderr:             JSR handle_compileerror
0001DBE4 <AmiBlitz3.ab2@1263>                        Dc.b "Can't LoadSeg debug module!",0 : Even
0001DC22 <AmiBlitz3.ab2@1271>   !ComData_GetL{comFunc_ASLFileRequest,A3}
0001DC28 <AmiBlitz3.ab2@1272>   LEA str_loaddebugmessage,A2
0001DC2E <AmiBlitz3.ab2@1273>   LEA str_blitz3assign,A0
0001DC34 <AmiBlitz3.ab2@1274>   LEA str_temp_debugmodulename,A1
0001DC36 <AmiBlitz3.ab2@1277>   JSR (A3)
0001DC3A <AmiBlitz3.ab2@1279>   BEQ.w menu_loaddebugmodule_noload
0001DC40 <AmiBlitz3.ab2@1280>   MOVE.l D0,ptr_temp_debugmodule
0001DC44 <AmiBlitz3.ab2@1281>   BSR.w call_setpointerbusy
0001DC4A <AmiBlitz3.ab2@1282>   MOVE.l A7,errstack
0001DC54 <AmiBlitz3.ab2@1283>   MOVE.l #menu_loaddebugmodule_noload,errcont
0001DC5A <AmiBlitz3.ab2@1284>   MOVE.l ptr_temp_debugmodule,D1
0001DC5E <AmiBlitz3.ab2@1286>   MOVEA.l _dosbase(PC),A6
0001DC62 <AmiBlitz3.ab2@1287>   JSR _LoadSeg(A6)
0001DC64 <AmiBlitz3.ab2@1288>   MOVE.l D0,D7
0001DC68 <AmiBlitz3.ab2@1289>   BEQ.w dloaderr
0001DC6E <AmiBlitz3.ab2@1290>   MOVE.l ptr_seg_debugger,D1
0001DC72 <AmiBlitz3.ab2@1291>   BEQ.b menu_loaddebugmodule_ndseg
0001DC76 <AmiBlitz3.ab2@1292>   MOVEA.l _dosbase(PC),A6
0001DC7A <AmiBlitz3.ab2@1293>   JSR _UnLoadSeg(A6)
0001DC7E <AmiBlitz3.ab2@1294>   BSR.w call_setpointernormal
0001DC84 <AmiBlitz3.ab2@1297>   MOVE.l D7,ptr_seg_debugger
0001DC86 <AmiBlitz3.ab2@1300> RTS
0001DCA4 <AmiBlitz3.ab2@1303> str_request_exename:   Dc.b "Name of Executable to Create:",0 : Even                        ;xtext org source
0001DD64 <AmiBlitz3.ab2@1304> exepath:               Ds.l 48                             ;Ds.b #MAX_STRINGSIZE ; Ds.l 48  ;xpath  dcb.b 192,0 org source
0001DE24 <AmiBlitz3.ab2@1305> exefilename:           Ds.l 48                             ;Ds.b #MAX_STRINGSIZE ; Ds.l 48  ;xname  dcb.b 192,0 org source
0001DE28 <AmiBlitz3.ab2@1306> ptr_newexefilename:    Dc.l 0                                                               ;execname org
0001DE52 <AmiBlitz3.ab2@1310>   !basic
0001DE7C <AmiBlitz3.ab2@1311>   exepath.s = Peek.s(?exepath)
0001DEA6 <AmiBlitz3.ab2@1312>   exefile.s = Peek.s(?exefilename)
0001DF26 <AmiBlitz3.ab2@1313>   exefile.s = dos_AddPart{exepath,exefile}
0001DF5E <AmiBlitz3.ab2@1314>   Poke.s ?tempspace,exefile
0001DF7C <AmiBlitz3.ab2@1315>   !asm
0001DF82 <AmiBlitz3.ab2@1336>   LEA tempspace,a0
0001DF84 <AmiBlitz3.ab2@1337>   MOVE.l a0,d0
0001DF88 <AmiBlitz3.ab2@1338> BRA newcreate2
0001DFB2 <AmiBlitz3.ab2@1344>   !basic
0001DFDC <AmiBlitz3.ab2@1345>   request_exename.s = Peek.s(?str_request_exename )
0001E038 <AmiBlitz3.ab2@1346>   request_exename   = !TRANS{request_exename}
0001E03E <AmiBlitz3.ab2@1347>   GetD0 &request_exename
0001E05C <AmiBlitz3.ab2@1348>   !asm
0001E05E <AmiBlitz3.ab2@1349>   MOVE.l D0,A2
0001E09C <AmiBlitz3.ab2@1352>   !ComData_GetL{comFunc_ASLFileRequest,A3}
0001E0A2 <AmiBlitz3.ab2@1354>   LEA exepath,A0
0001E0A8 <AmiBlitz3.ab2@1355>   LEA exefilename,A1
0001E0AA <AmiBlitz3.ab2@1358>   JSR (A3)                                                 ;open ped filerequest
0001E0AE <AmiBlitz3.ab2@1359>   BEQ.w cancel_createexe
0001E0B8 <AmiBlitz3.ab2@1362>   ADD.l #1,number_of_builds
0001E0BE <AmiBlitz3.ab2@1365>   MOVE.l D0,ptr_newexefilename
0001E0C6 <AmiBlitz3.ab2@1366>   MOVE.w #-1,debugversion
0001E0CC <AmiBlitz3.ab2@1367>   MOVE.w set_make_smallestcode,-(A7)
0001E0D4 <AmiBlitz3.ab2@1371>     MOVE.w #1,makeexec
0001E0DA <AmiBlitz3.ab2@1372>     JSR ab3_OpenDebugFile
0001E0DE <AmiBlitz3.ab2@1373>     BSR.w startcompile
0001E0E4 <AmiBlitz3.ab2@1374>     JSR ab3_CloseDebugFile
0001E0EE <AmiBlitz3.ab2@1375>     CMP.l #"NORE",reqmode
0001E0F2 <AmiBlitz3.ab2@1376>   BEQ 'l1
0001E0F8 <AmiBlitz3.ab2@1378>   TST.w anyerrs
0001E0FC <AmiBlitz3.ab2@1379>   BNE.b menu_createexecutable__skip
0001E100 <AmiBlitz3.ab2@1380>   BSR.w savefile
0001E106 <AmiBlitz3.ab2@1383>   MOVE.w (A7)+,set_make_smallestcode
0001E108 <AmiBlitz3.ab2@1386> RTS
0001E110 <AmiBlitz3.ab2@1390>   MOVE.w #-1,flag_noPED
0001E112 <AmiBlitz3.ab2@1391> RTS
0001E11A <AmiBlitz3.ab2@1395>   MOVE.w #-1,flag_noCLI
0001E11C <AmiBlitz3.ab2@1396> RTS
0001E146 <AmiBlitz3.ab2@1399>   !basic
0001E16E <AmiBlitz3.ab2@1400>     If dbg_fid>=0 Then file_Close{dbg_fid} : dbg_fid = -1
0001E17E <AmiBlitz3.ab2@1401>     Poke.w ?word_WriteDebugFileNow,0
0001E19C <AmiBlitz3.ab2@1402>   !asm
0001E19E <AmiBlitz3.ab2@1403> RTS
0001E1C8 <AmiBlitz3.ab2@1406>   !basic
0001E1D8 <AmiBlitz3.ab2@1407>   Poke.w ?word_WriteDebugFileNow,0
0001E1EA <AmiBlitz3.ab2@1408>   If dbg_fid>=0
0001E200 <AmiBlitz3.ab2@1409>     file_Close{dbg_fid} : dbg_fid = -1
0001E212 <AmiBlitz3.ab2@1411>   If dbg_fid.l<0
0001E214 <AmiBlitz3.ab2@1412>     CLR.l d0
0001E252 <AmiBlitz3.ab2@1413>     !ComData_GetW{comWord_CreateDebugFile,D0}
0001E256 <AmiBlitz3.ab2@1414>     dbg_Create.l = PutD0
0001E260 <AmiBlitz3.ab2@1415>     If (dbg_Create) ; only when set!
0001E270 <AmiBlitz3.ab2@1416>       exefileP.l = Peek.l (?ptr_newexefilename)
0001E298 <AmiBlitz3.ab2@1417>       exefile.s = ""
0001E2CA <AmiBlitz3.ab2@1418>       If exefileP Then exefile.s = Peek.s(exefileP)
0001E302 <AmiBlitz3.ab2@1419>       If exefile><""
0001E358 <AmiBlitz3.ab2@1420>         dbg_fid = file_Open{exefile+".dbg",#file_forcewrite}
0001E36A <AmiBlitz3.ab2@1421>         If dbg_fid>=0
0001E37C <AmiBlitz3.ab2@1422>           Poke.w ?word_WriteDebugFileNow,-1
0001E388 <AmiBlitz3.ab2@1425>       oldhunkoffset.l = -1
0001E3B0 <AmiBlitz3.ab2@1426>       oldfile.s       = ""
0001E3CE <AmiBlitz3.ab2@1429>   !asm
0001E3D0 <AmiBlitz3.ab2@1430> RTS
0001E3D6 <AmiBlitz3.ab2@1433> TST.w word_WriteDebugFileNow
0001E3DA <AmiBlitz3.ab2@1434> BEQ 'skipdebugfile
0001E404 <AmiBlitz3.ab2@1435> !basic
0001E416 <AmiBlitz3.ab2@1436>   If dbg_fid>=0
0001E428 <AmiBlitz3.ab2@1437>     pass.l          = Peek.w(?pass)
0001E43A <AmiBlitz3.ab2@1438>     makesmallest.b  = Peek.b(?make_smallestcode)               ; get the status of make_smallestcode  tomsmart1
0001E45E <AmiBlitz3.ab2@1439> 
0001E464 <AmiBlitz3.ab2@1440>       oldhunkoffset.l = hunkoffset.l
0001E498 <AmiBlitz3.ab2@1441>       oldfile.s       = codefile.s
0001E4B4 <AmiBlitz3.ab2@1442>       If Peek.w (?ininclude)>0
0001E4C4 <AmiBlitz3.ab2@1443>         codeline.l = Peek.l(?includeline);-1
0001E534 <AmiBlitz3.ab2@1444>         codefile.s = dos_FilePart{incdim(Peek.w(?ininclude)-1)}
0001E53A <AmiBlitz3.ab2@1445>       Else
0001E568 <AmiBlitz3.ab2@1446>         !ComData_LEA{comStr_SourceName,A0}
0001E56A <AmiBlitz3.ab2@1447>         MOVE.l A0,D0
0001E56E <AmiBlitz3.ab2@1448>         sourceP.l = PutD0
0001E596 <AmiBlitz3.ab2@1449>         codefile.s = Peek.s(sourceP)
0001E5A6 <AmiBlitz3.ab2@1450>         codeline.l = Peek.l(?linenumat)
0001E5CE <AmiBlitz3.ab2@1452>       hunkoffset.l = Peek.l(?destpointer)-Peek.l(?destbufferstart)
0001E622 <AmiBlitz3.ab2@1453>       If oldhunkoffset><hunkoffset OR oldfile><codefile
0001E632 <AmiBlitz3.ab2@1460>         *sourceLine.SourceLine_t = Peek.l(?sourceline)
0001E63C <AmiBlitz3.ab2@1461>         If *sourceLine
0001E652 <AmiBlitz3.ab2@1462>           MaxLen detokenline.s = 65536
0001E694 <AmiBlitz3.ab2@1463>          !ComData_GetL{comPtr_PreProcessor,include_preprocessor}
0001E6A4 <AmiBlitz3.ab2@1464>          *tn.preprocessor = Peek.l(?include_preprocessor)
0001E6D0 <AmiBlitz3.ab2@1465>           written.l = preproc_Detokenize{*tn,&*sourceLine\Text,&detokenline,*sourceLine\CharLength}
0001E6FE <AmiBlitz3.ab2@1466>           If written>0 Then Poke.b &detokenline+written-1,0
0001E728 <AmiBlitz3.ab2@1467>           sourceLineText.s = Peek.s(&detokenline)
0001E72E <AmiBlitz3.ab2@1468>         Else
0001E756 <AmiBlitz3.ab2@1469>           sourceLineText = "NULL"
0001E81E <AmiBlitz3.ab2@1472>         file_WriteLine{dbg_fid,Hex$(hunkoffset)+" <"+codefile+"@"+Str$(codeline)+"> "+sourceLineText}
0001E83C <AmiBlitz3.ab2@1478> !asm
0001E83E <AmiBlitz3.ab2@1480> RTS
0001E840 <AmiBlitz3.ab2@1482> word_WriteDebugFileNow: Dc.w 0
0001E842 <AmiBlitz3.ab2@1484> flag_noPED:  Ds.w 1                                        ;closeed org source
0001E844 <AmiBlitz3.ab2@1485> flag_noCLI:  Ds.w 1                                        ;nocli org source
0001E848 <AmiBlitz3.ab2@1489>   MOVEM.l D0-D1/A0-A1/A6,-(A7)
0001E84E <AmiBlitz3.ab2@1490>   MOVEA.l _execbase,A6
0001E852 <AmiBlitz3.ab2@1491>   JSR _CacheClearU(A6)
0001E856 <AmiBlitz3.ab2@1492>   MOVEM.l (A7)+,D0-D1/A0-A1/A6
0001E858 <AmiBlitz3.ab2@1493> RTS
0001E85C <AmiBlitz3.ab2@1496>   MOVEM.l A2-A3,-(A7)
0001E862 <AmiBlitz3.ab2@1497>   CLR.b doublepeek
0001E868 <AmiBlitz3.ab2@1498>   MOVE.l A5,lastsourcepos
0001E86E <AmiBlitz3.ab2@1499>    JSR getchar
0001E872 <AmiBlitz3.ab2@1500>   CMP.w #$2E,D0
0001E876 <AmiBlitz3.ab2@1501>    BEQ.w JL_0_49B4b
0001E87C <AmiBlitz3.ab2@1502>   MOVEA.l defaulttype,A2
0001E880 <AmiBlitz3.ab2@1503>   CMP.w #$24,D0
0001E884 <AmiBlitz3.ab2@1504>    BNE.w JL_0_49CAb
0001E886 <AmiBlitz3.ab2@1505>   MOVEQ.l #$07,D1
0001E88A <AmiBlitz3.ab2@1506> BRA.w JL_0_49DEb
0001E890 <AmiBlitz3.ab2@1509>   JSR getparameter2
0001E894 <AmiBlitz3.ab2@1510>   BEQ.w syntaxerrb
0001E89A <AmiBlitz3.ab2@1511>   LEA newtypebase,A2
0001E8A0 <AmiBlitz3.ab2@1512>   JSR findtype
0001E8A4 <AmiBlitz3.ab2@1513>   BNE.w notypeerrb
0001E8AE <AmiBlitz3.ab2@1518>   MOVE.w oldqflag,instringon
0001E8B4 <AmiBlitz3.ab2@1519>   MOVEA.l lastsourcepos,A5
0001E8BA <AmiBlitz3.ab2@1521>   MOVE.l a2,functionreturntype
0001E8C2 <AmiBlitz3.ab2@1522>   CMPI.l #$100,$4(A2)
0001E8C6 <AmiBlitz3.ab2@1523>   BLE.w 'isvar
0001E8C8 <AmiBlitz3.ab2@1527>   MOVEQ #3,d1
0001E8CC <AmiBlitz3.ab2@1528>   BRA JL_0_49DEb
0001E8D0 <AmiBlitz3.ab2@1535>   MOVE.w $6(A2),D1
0001E8D6 <AmiBlitz3.ab2@1536>   CMP.w #8,8(a2)
0001E8DA <AmiBlitz3.ab2@1537>   BNE 'l1
0001E8E2 <AmiBlitz3.ab2@1538>   MOVE.b #1,doublepeek
0001E8E8 <AmiBlitz3.ab2@1541>   MOVE.w D1,convsize
0001E8EC <AmiBlitz3.ab2@1542>   MOVEM.l (A7)+,A2-A3
0001E8EE <AmiBlitz3.ab2@1543> RTS
0001E8F4 <AmiBlitz3.ab2@1545> notypeerrb JMP notypeerr
0001E8FA <AmiBlitz3.ab2@1546> illtypeerrb JMP illtypeerr
0001E900 <AmiBlitz3.ab2@1547> syntaxerrb JMP syntaxerr
0001E90A <AmiBlitz3.ab2@1592>   ADD.l #1,number_of_builds
0001E910 <AmiBlitz3.ab2@1594>   CLR.w debugversion
0001E916 <AmiBlitz3.ab2@1595>   CLR.w flag_noPED
0001E91C <AmiBlitz3.ab2@1596>   CLR.w flag_noCLI
0001E924 <AmiBlitz3.ab2@1599>     MOVE.w #0,makeexec                                     ;MOVE.w #$FFFF,debugversion
0001E928 <AmiBlitz3.ab2@1600>     BSR.w startcompile
0001E932 <AmiBlitz3.ab2@1601>     CMP.l #"NORE",reqmode
0001E936 <AmiBlitz3.ab2@1602>   BEQ 'l1
0001E93C <AmiBlitz3.ab2@1605>   TST.w anyerrs
0001E940 <AmiBlitz3.ab2@1606>    BNE.w JL_0_3482
0001E944 <AmiBlitz3.ab2@1608>   MOVE.w flag_noPED(PC),D1
0001E948 <AmiBlitz3.ab2@1609>    BEQ.w skip_closingGUI
0001E97A <AmiBlitz3.ab2@1614>   !ComData_JSR{comFunc_CloseGUI}
0001E97E <AmiBlitz3.ab2@1615> BRA.b runprogram
0001E982 <AmiBlitz3.ab2@1619>   BSR.w compilerequester
0001E988 <AmiBlitz3.ab2@1622>   MOVEA.l _dosbase,A6
0001E98E <AmiBlitz3.ab2@1623>   LEA exepath,a0
0001E990 <AmiBlitz3.ab2@1624>   MOVE.l a0,d1
0001E992 <AmiBlitz3.ab2@1625>   MOVEQ #-2,d2
0001E996 <AmiBlitz3.ab2@1626>   JSR _Lock(a6)                                            ;lock
0001E99C <AmiBlitz3.ab2@1627>   MOVE.l d0,exelock
0001E9A2 <AmiBlitz3.ab2@1628>   MOVE.l #0,d1
0001E9A6 <AmiBlitz3.ab2@1629>   JSR _CurrentDir(A6)
0001E9AC <AmiBlitz3.ab2@1630>   MOVE.l D0,lock_currentdir
0001E9AE <AmiBlitz3.ab2@1631>   MOVE.l D0,D1
0001E9B2 <AmiBlitz3.ab2@1632>   JSR _CurrentDir(A6)
0001E9B8 <AmiBlitz3.ab2@1633>   CLR.l ptr_exetask
0001E9BE <AmiBlitz3.ab2@1642>   MOVE.l #str_process_name,D1
0001E9C0 <AmiBlitz3.ab2@1643>   MOVEQ.l #$00,D2
0001E9C6 <AmiBlitz3.ab2@1644>   MOVE.l #proc_seglist,D3
0001E9C8 <AmiBlitz3.ab2@1645>   LSR.l #2,D3
0001E9CE <AmiBlitz3.ab2@1646>   MOVE.l stacksize,D4
0001E9D4 <AmiBlitz3.ab2@1647>   MOVEA.l _dosbase,A6
0001E9D8 <AmiBlitz3.ab2@1648>   JSR _CreateProc(A6)                                      ;runtask
0001E9DA <AmiBlitz3.ab2@1649>   TST.l D0
0001E9DE <AmiBlitz3.ab2@1650>    BEQ ErrorRunningProg
0001EA14 <AmiBlitz3.ab2@1652>   !ComData_SetB{comByte_RunningFlag,#1}   ; this should be done here, straigt after it is clear that
0001EA1A <AmiBlitz3.ab2@1654>   TST.w flag_noPED
0001EA1E <AmiBlitz3.ab2@1655>    BNE.b JL_0_344E
0001EA22 <AmiBlitz3.ab2@1656>   BSR.w close_compilewin
0001EA28 <AmiBlitz3.ab2@1659>   CLR.l firstlocal
0001EA2E <AmiBlitz3.ab2@1660>   CLR.l firstglob
0001EA32 <AmiBlitz3.ab2@1661>   MOVE.w flag_noPED(PC),D1
0001EA36 <AmiBlitz3.ab2@1662>   BEQ.w skip_openGUI
0001EA68 <AmiBlitz3.ab2@1666>   !ComData_JSR{comFunc_CreateGUI}
0001EA6A <AmiBlitz3.ab2@1675> RTS
0001EA74 <AmiBlitz3.ab2@1678> MOVE.l #1,_runerror
0001EA78 <AmiBlitz3.ab2@1679> BRA JL_0_344E
0001EA7C <AmiBlitz3.ab2@1681> _runerror: Dc.l 0
0001EA80 <AmiBlitz3.ab2@1682> lock_currentdir:    Ds.l 1                                          ;tasklock org source
0001EA84 <AmiBlitz3.ab2@1683> ptr_exetask:        Ds.l 1                                          ;panictask org source
0001EA88 <AmiBlitz3.ab2@1684> signalNum:          Ds.l 1                                          ;panicbit org source
0001EA8C <AmiBlitz3.ab2@1685> signals:            Ds.l 1                                          ;panicmask org source
0001EAA2 <AmiBlitz3.ab2@1687> str_process_name:   Dc.b "Blitz ][ Program Proc",0 : Even           ;procname org source
0001EAA7 <AmiBlitz3.ab2@1688>                     Ds.b 5                                          ;cnop 0,4 :dc.l 0   ;length org source
0001EAA8 <AmiBlitz3.ab2@1689> Even4
0001EAAC <AmiBlitz3.ab2@1691> ptr_ThisTask:       Ds.l 1                                          ;length
0001EAB0 <AmiBlitz3.ab2@1692> .proc_seglist:      Ds.l 1                                          ;procstart org source ;next
0001EAB6 <AmiBlitz3.ab2@1696>   MOVEA.l $4,A0
0001EABE <AmiBlitz3.ab2@1697>   MOVE.l  $114(A0),ptr_exetask
0001EAC4 <AmiBlitz3.ab2@1699>   MOVEA.l _dosbase,A6
0001EACA <AmiBlitz3.ab2@1700>   MOVE.l exelock,D1
0001EACE <AmiBlitz3.ab2@1701>   JSR _CurrentDir(A6)
0001EB04 <AmiBlitz3.ab2@1706>   !ComData_SetB{comByte_RunningFlag,#1}
0001EB08 <AmiBlitz3.ab2@1712>   MOVE.w flag_noCLI(PC),D1
0001EB0C <AmiBlitz3.ab2@1713>    BNE.b skip_openconsole
0001EB3E <AmiBlitz3.ab2@1717>   !ComData_JSR{comFunc_OpenConsole}
0001EB42 <AmiBlitz3.ab2@1720>   BSR.w calcvbr
0001EB48 <AmiBlitz3.ab2@1721>   MOVEA.l vbr,A0
0001EB4E <AmiBlitz3.ab2@1726>   CLR.w dirmode
0001EB54 <AmiBlitz3.ab2@1727>   CLR.l firstglob
0001EB5A <AmiBlitz3.ab2@1728>   CLR.l firstlocal
0001EB60 <AmiBlitz3.ab2@1730>   MOVE.l stacksize,D2
0001EB66 <AmiBlitz3.ab2@1731>   MOVE.l #$624C745A,D7                                      ;#'bLtZ',d7 org source ;force cli-type run
0001EB6C <AmiBlitz3.ab2@1732>   LEA str_cliarguments,A0                                   ;cli arguement
0001EB72 <AmiBlitz3.ab2@1733>   MOVEA.l destbufferstart,A1
0001EB76 <AmiBlitz3.ab2@1734>   BSR.w Aclearcache
0001EB78 <AmiBlitz3.ab2@1737>   JSR (A1)                                                 ; execute compiled code  ;Run the thing!
0001EB7E <AmiBlitz3.ab2@1739>   MOVEA.l vbr,A0
0001EB84 <AmiBlitz3.ab2@1741>   CLR.l firstglob
0001EB8A <AmiBlitz3.ab2@1742>   CLR.l firstlocal
0001EB90 <AmiBlitz3.ab2@1743>   MOVEA.l _dosbase,A6
0001EB96 <AmiBlitz3.ab2@1744>   MOVE.l exelock,d1
0001EB9A <AmiBlitz3.ab2@1745>   BEQ 'nolock
0001EB9E <AmiBlitz3.ab2@1746>   JSR _UnLock(a6)
0001EBD4 <AmiBlitz3.ab2@1751>   !ComData_SetB{comByte_RunningFlag,#0}
0001EBD8 <AmiBlitz3.ab2@1754>   MOVE.w flag_noCLI(PC),D1
0001EBDC <AmiBlitz3.ab2@1755>    BNE.b skip_closeconsole
0001EC0E <AmiBlitz3.ab2@1759>   !ComData_JSR{comFunc_CloseConsole}
0001EC16 <AmiBlitz3.ab2@1762>   MOVE.w #$0001,stopit
0001EC1A <AmiBlitz3.ab2@1763>   MOVE.l signals(PC),D0
0001EC20 <AmiBlitz3.ab2@1764>   MOVEA.l ptr_ThisTask,A1
0001EC26 <AmiBlitz3.ab2@1765>   MOVEA.l _execbase,A6
0001EC2A <AmiBlitz3.ab2@1766>   JSR _Signal(A6)
0001EC2C <AmiBlitz3.ab2@1767> RTS
0001EC32 <AmiBlitz3.ab2@1771>   MOVEA.l _execbase,A6
0001EC36 <AmiBlitz3.ab2@1772>   MOVE.w $128(A6),D0
0001EC38 <AmiBlitz3.ab2@1773>   MOVEQ.l #$00,D1
0001EC3C <AmiBlitz3.ab2@1774>   ANDI.w #$F,D0
0001EC40 <AmiBlitz3.ab2@1777>     BEQ.b calcvbr__skip
0001EC42 <AmiBlitz3.ab2@1778>     ADDQ.w #1,D1
0001EC44 <AmiBlitz3.ab2@1779>     LSR.w #1,D0
0001EC48 <AmiBlitz3.ab2@1780> BRA.b calcvbr_loop
0001EC4A <AmiBlitz3.ab2@1783>   MOVEQ.l #$00,D2
0001EC4E <AmiBlitz3.ab2@1784>   CMP.w #$2,D1
0001EC52 <AmiBlitz3.ab2@1785>    BCS.b calcvbr__skip2
0001EC58 <AmiBlitz3.ab2@1786>   MOVEA.l _execbase,A6
0001EC5C <AmiBlitz3.ab2@1787>   JSR _SuperState(A6)
0001EC60 <AmiBlitz3.ab2@1788>   Dc.l $4E7A2801                                           ;movec vbr,D2
0001EC64 <AmiBlitz3.ab2@1789>   JSR _UserState(A6)
0001EC6A <AmiBlitz3.ab2@1792>   MOVE.l D2,vbr
0001EC6C <AmiBlitz3.ab2@1793> RTS
0001EC72 <AmiBlitz3.ab2@1797>   LEA instrtab,a0
0001EC78 <AmiBlitz3.ab2@1798>   MOVE.l #labelhash-instrtab,d0
0001EC7A <AmiBlitz3.ab2@1799>   ASR.l #2,d0
0001EC7C <AmiBlitz3.ab2@1800>   SUBQ.l #1,d0
0001EC7E <AmiBlitz3.ab2@1803>   CLR.l (a0)+
0001EC80 <AmiBlitz3.ab2@1804>   SUBQ.l #1,d0
0001EC84 <AmiBlitz3.ab2@1805>   BNE 'l10
0001EC88 <AmiBlitz3.ab2@1806>   BSR.w call_setpointerbusy
0001EC8C <AmiBlitz3.ab2@1807>   BSR.w free_userlibs
0001EC90 <AmiBlitz3.ab2@1808>   BSR.w scan_for_userlibs
0001EC94 <AmiBlitz3.ab2@1809>   BSR.w JL_0_7082
0001EC98 <AmiBlitz3.ab2@1810> BRA.w call_setpointernormal
0001ECC2 <AmiBlitz3.ab2@1816>   !basic
0001ECFC <AmiBlitz3.ab2@1817>   Poke.l ?size_acidlibs, dos_GetFileSize{Peek$(?str_path_acidlibs)}
0001ED0C <AmiBlitz3.ab2@1819>   deflibNameP.l = Peek.l(?deflib)
0001ED16 <AmiBlitz3.ab2@1820>   If deflibNameP
0001ED48 <AmiBlitz3.ab2@1821>     If Peek.s(deflibNameP)<>""
0001ED92 <AmiBlitz3.ab2@1822>       Poke.l ?size_deflibs, dos_GetFileSize{Peek.s(Peek.l(?deflib))}
0001ED98 <AmiBlitz3.ab2@1823>     Else
0001EDD2 <AmiBlitz3.ab2@1824>       Poke.l ?size_deflibs, dos_GetFileSize{Peek.s(?str_path_deflibs)}
0001EDD8 <AmiBlitz3.ab2@1826>   Else
0001EE12 <AmiBlitz3.ab2@1827>     Poke.l ?size_deflibs, dos_GetFileSize{Peek.s(?str_path_deflibs)}
0001EE40 <AmiBlitz3.ab2@1828>     error{"INTERNAL: Invalid deflib name pointer!"}
0001EE5E <AmiBlitz3.ab2@1830>   !asm
0001EE64 <AmiBlitz3.ab2@1835>   MOVE.l #str_path_userlibs,D1
0001EE66 <AmiBlitz3.ab2@1836>   MOVEQ.l #-$02,D2
0001EE6C <AmiBlitz3.ab2@1837>   MOVEA.l _dosbase,A6
0001EE70 <AmiBlitz3.ab2@1838>   JSR _Lock(A6)
0001EE72 <AmiBlitz3.ab2@1839>   MOVE.l D0,D7
0001EE76 <AmiBlitz3.ab2@1840>    BEQ.w exit_get_libraries
0001EE78 <AmiBlitz3.ab2@1841>   MOVE.l D7,D1
0001EE7E <AmiBlitz3.ab2@1842>   MOVE.l #ptr_parameterstore,D2
0001EE82 <AmiBlitz3.ab2@1843>   JSR _Examine(A6)
0001EE84 <AmiBlitz3.ab2@1844>   TST.l D0
0001EE88 <AmiBlitz3.ab2@1845>   BEQ.w unlock_and_exit_get_libraries
0001EE8E <AmiBlitz3.ab2@1846>   MOVE.l fib_DirEntryType,D0
0001EE92 <AmiBlitz3.ab2@1847>   BMI.w unlock_and_exit_get_libraries
0001EE94 <AmiBlitz3.ab2@1852>     MOVE.l D7,D1
0001EE9A <AmiBlitz3.ab2@1853>     MOVE.l #ptr_parameterstore,D2
0001EEA0 <AmiBlitz3.ab2@1854>     MOVEA.l _dosbase,A6
0001EEA4 <AmiBlitz3.ab2@1855>     JSR _ExNext(A6)
0001EEA6 <AmiBlitz3.ab2@1856>     TST.l D0
0001EEAA <AmiBlitz3.ab2@1857>      BEQ.w exit_scan_libsdrawer                            ; kein weiteres File
0001EEB0 <AmiBlitz3.ab2@1859>     MOVE.l fib_DirEntryType,D0                             ; positive for directoies, negative for files
0001EEB4 <AmiBlitz3.ab2@1860>     BPL.w scan_libsdrawer                                  ; skip directories
0001EEBA <AmiBlitz3.ab2@1862>     LEA fib_FileName,A0                                    ; pruefen ob infofile
0001EEBE <AmiBlitz3.ab2@1863>     BSR.w check_for_infoextention
0001EEC2 <AmiBlitz3.ab2@1864>     BEQ.w scan_libsdrawer
0001EEC8 <AmiBlitz3.ab2@1866>     MOVEA.l _execbase,A6                                   ; allocate $26 = 38 bytes fuer listeneintrag
0001EECA <AmiBlitz3.ab2@1867>     MOVEQ.l #$26,D0
0001EECC <AmiBlitz3.ab2@1868>     MOVEQ.l #$01,D1
0001EED2 <AmiBlitz3.ab2@1869>     MOVE.l mempool,a0
0001EED6 <AmiBlitz3.ab2@1870>     JSR _AllocPooled(a6)
0001EEDC <AmiBlitz3.ab2@1872>     MOVEA.l _dosbase,A6
0001EEDE <AmiBlitz3.ab2@1873>     MOVE.l D0,D6                                           ; sichere speicheradresse in D6
0001EEE4 <AmiBlitz3.ab2@1876>     LEA ptr_userlibs_list,A0                               ; pruefe liste
0001EEE6 <AmiBlitz3.ab2@1879>     MOVE.l (A0),D5
0001EEEA <AmiBlitz3.ab2@1880>      BEQ.w JL_0_3722                                       ; kein pointer da? kann springe weiter
0001EEEC <AmiBlitz3.ab2@1881>     MOVEA.l D5,A2
0001EEEE <AmiBlitz3.ab2@1882>     ADDQ.w #6,A2                                           ; 6 bytes weiter gehen, um dateinamen zu speichern
0001EEF4 <AmiBlitz3.ab2@1885>     LEA fib_FileName,A1                                    ; vergleich, ob Dateiname schon in der liste ist
0001EEF6 <AmiBlitz3.ab2@1888>       MOVEQ.l #$00,D0
0001EEF8 <AmiBlitz3.ab2@1889>       MOVE.b (A1)+,D0
0001EEFC <AmiBlitz3.ab2@1890>        BEQ.w JL_0_3722                                     ; dateiname komplett, dann weiter
0001EEFE <AmiBlitz3.ab2@1891>       MOVEQ.l #$00,D1
0001EF00 <AmiBlitz3.ab2@1892>       MOVE.b (A2)+,D1
0001EF04 <AmiBlitz3.ab2@1893>        BEQ.w JL_0_371C
0001EF26 <AmiBlitz3.ab2@1894>       !compare1                                            ;bsr.w tstalpha
0001EF2A <AmiBlitz3.ab2@1895>       BNE.w JL_0_3702
0001EF2E <AmiBlitz3.ab2@1896>       ANDI.w #$DF,D0
0001EF30 <AmiBlitz3.ab2@1899>       EXG.l D0,D1
0001EF52 <AmiBlitz3.ab2@1900>       !compare1                                            ;bsr.w tstalpha
0001EF56 <AmiBlitz3.ab2@1901>       BNE.w JL_0_3710
0001EF5A <AmiBlitz3.ab2@1902>       ANDI.w #$DF,D0
0001EF5C <AmiBlitz3.ab2@1905>       EXG.l D0,D1
0001EF5E <AmiBlitz3.ab2@1906>       CMP.b D1,D0
0001EF62 <AmiBlitz3.ab2@1907>     BEQ.w JL_0_36E6
0001EF66 <AmiBlitz3.ab2@1908>     BCS.w JL_0_3722
0001EF68 <AmiBlitz3.ab2@1911>     MOVEA.l D5,A0
0001EF6C <AmiBlitz3.ab2@1912> BRA.w JL_0_36D6
0001EF6E <AmiBlitz3.ab2@1915>     MOVEA.l D6,A1                                          ; hier war die adresse des allokierten Speicers drin
0001EF70 <AmiBlitz3.ab2@1916>     MOVE.l (A0),(A1)
0001EF72 <AmiBlitz3.ab2@1917>     MOVE.l A1,(A0)
0001EF74 <AmiBlitz3.ab2@1918>     ADDQ.w #4,A1                                           ; pointer zum naechsten namen ueberspringen
0001EF78 <AmiBlitz3.ab2@1919>     MOVE.w #$FFFF,(A1)+                                    ; $FFFF schreiben
0001EF7E <AmiBlitz3.ab2@1920>     MOVEA.l #fib_FileName,A0                               ; dateinamen in die liste kopieren
0001EF80 <AmiBlitz3.ab2@1923>       MOVE.b (A0)+,(A1)+
0001EF84 <AmiBlitz3.ab2@1924>     BNE.w JL_0_3734
0001EF88 <AmiBlitz3.ab2@1925> BRA.w scan_libsdrawer
0001EF8A <AmiBlitz3.ab2@1928>   MOVE.l D7,D1
0001EF90 <AmiBlitz3.ab2@1929>   MOVEA.l _dosbase,A6
0001EF94 <AmiBlitz3.ab2@1930>   JSR _UnLock(A6)
0001EF96 <AmiBlitz3.ab2@1931>   MOVEQ.l #-$01,D0
0001EF98 <AmiBlitz3.ab2@1934> RTS
0001EF9A <AmiBlitz3.ab2@1937>   MOVE.l D7,D1
0001EFA0 <AmiBlitz3.ab2@1938>   MOVEA.l _dosbase,A6
0001EFA4 <AmiBlitz3.ab2@1939>   JSR _UnLock(A6)
0001EFA6 <AmiBlitz3.ab2@1940>   MOVEQ.l #$00,D0
0001EFA8 <AmiBlitz3.ab2@1941> RTS
0001EFAE <AmiBlitz3.ab2@1945>   MOVEA.l _execbase,A6
0001EFB4 <AmiBlitz3.ab2@1946>   MOVEA.l ptr_userlibs_list,A2
0001EFBA <AmiBlitz3.ab2@1947>   CLR.l ptr_userlibs_list
0001EFBE <AmiBlitz3.ab2@1950>     CMPA.w #$0,A2
0001EFC2 <AmiBlitz3.ab2@1951>     BEQ.w exit_free_userlib
0001EFC4 <AmiBlitz3.ab2@1952>       MOVEA.l A2,A1
0001EFC6 <AmiBlitz3.ab2@1953>       MOVEQ.l #$26,D0
0001EFC8 <AmiBlitz3.ab2@1954>       MOVEA.l (A2),A2
0001EFCE <AmiBlitz3.ab2@1955>       MOVE.l mempool,a0
0001EFD4 <AmiBlitz3.ab2@1956>       MOVEA.l _execbase,A6
0001EFD8 <AmiBlitz3.ab2@1957>       JSR _FreePooled(A6)
0001EFDC <AmiBlitz3.ab2@1958> BRA.w loop_free_userlib
0001EFDE <AmiBlitz3.ab2@1961> RTS
0001EFE0 <AmiBlitz3.ab2@1964> pass:  Dc.w 0                                             ; smallpass org source
0001EFE2 <AmiBlitz3.ab2@1965> compiler_job: Dc.w 0                                      ; added by thilo: what the compiler is doing at the moment
0001EFE8 <AmiBlitz3.ab2@1969>   MOVE.l A7,errstack                                      ;startcompile
0001EFEE <AmiBlitz3.ab2@1978>   CLR.l reqmode
0001EFF8 <AmiBlitz3.ab2@1980>   MOVE.l #Aclearallvars,errcont
0001F002 <AmiBlitz3.ab2@1981>   MOVE.l #concomstack,concomsp
0001F006 <AmiBlitz3.ab2@1988>   MOVE.w #1450,D0
0001F008 <AmiBlitz3.ab2@1989>   LSR.w #3,D0
0001F00A <AmiBlitz3.ab2@1990>   SUBQ.w #7,D0                                             ; 173
0001F010 <AmiBlitz3.ab2@1991>   MOVE.w D0,progressbar_width
0001F012 <AmiBlitz3.ab2@1992>   SWAP D0
0001F014 <AmiBlitz3.ab2@1993>   CLR.w D0
0001F01A <AmiBlitz3.ab2@1994>   MOVE.l numlines,d1
0001F01E <AmiBlitz3.ab2@1995>   DIVU.l d1,d0                                             ; progressbar_width / numlines
0001F020 <AmiBlitz3.ab2@1997>   TST.w D0
0001F024 <AmiBlitz3.ab2@1998>   BNE.w JL_0_37C0
0001F026 <AmiBlitz3.ab2@1999>   MOVEQ.l #-$01,D0
0001F02C <AmiBlitz3.ab2@2002>   MOVE.w D0,progress_per_line
0001F034 <AmiBlitz3.ab2@2010>   BTST #$7,use_debugger
0001F038 <AmiBlitz3.ab2@2012>   BNE 'debugon
0001F03E <AmiBlitz3.ab2@2013>   CLR.w debugmode
0001F042 <AmiBlitz3.ab2@2014> BRA.b 'debugoff
0001F048 <AmiBlitz3.ab2@2017>   SNE debugmode
0001F080 <AmiBlitz3.ab2@2025>   !ComData_SetB{comByte_DebugMode,debugmode}
0001F086 <AmiBlitz3.ab2@2028>   CLR.w dirmode                                            ;direct mode flag
0001F08C <AmiBlitz3.ab2@2029>   CLR.w ezerr                                              ;quiet error
0001F092 <AmiBlitz3.ab2@2030>   CLR.l currentfunction
0001F098 <AmiBlitz3.ab2@2031>   CLR.w connest
0001F09E <AmiBlitz3.ab2@2032>   CLR.w varmode
0001F0A4 <AmiBlitz3.ab2@2033>   CLR.w proceduremode
0001F0AA <AmiBlitz3.ab2@2034>   CLR.w ininclude
0001F0B0 <AmiBlitz3.ab2@2035>   CLR.w intstring
0001F0B6 <AmiBlitz3.ab2@2036>   CLR.w pass
0001F0BE <AmiBlitz3.ab2@2037>   MOVE.w #0,compiler_job
0001F0C4 <AmiBlitz3.ab2@2038>   CLR.l funcscanon
0001F0CA <AmiBlitz3.ab2@2046>   CLR.l funcscanon
0001F0CE <AmiBlitz3.ab2@2047>   BSR.w compileall
0001F0D4 <AmiBlitz3.ab2@2049>   MOVE.w dontwrite,d0
0001F0D8 <AmiBlitz3.ab2@2050>   CMP.w #1,d0
0001F0DC <AmiBlitz3.ab2@2051>   BNE 'l3
0001F0E2 <AmiBlitz3.ab2@2052>   TST.l errorcounter
0001F0E6 <AmiBlitz3.ab2@2053>   BNE 'l3
0001F0EC <AmiBlitz3.ab2@2054>   CLR.w dontwrite
0001F0F0 <AmiBlitz3.ab2@2055>   BSR compileall                                           ;if a function is not found
0001F0F6 <AmiBlitz3.ab2@2059>   TST.b funcoptimize
0001F0FC <AmiBlitz3.ab2@2061>   LEA firstproc,a0
0001F102 <AmiBlitz3.ab2@2062>   CLR.l savefuncspace
0001F104 <AmiBlitz3.ab2@2063>   MOVE.l (a0),d0
0001F106 <AmiBlitz3.ab2@2067>     MOVE.l d0,a0
0001F10A <AmiBlitz3.ab2@2068>     BEQ 'out
0001F10E <AmiBlitz3.ab2@2069>     TST.b isfunc(a0)
0001F112 <AmiBlitz3.ab2@2070>     BNE 'nex
0001F116 <AmiBlitz3.ab2@2071>     MOVEM.l d2/a6/a0,-(a7)
0001F118 <AmiBlitz3.ab2@2073>     MOVEQ #0,d0
0001F11C <AmiBlitz3.ab2@2074>     MOVE.b $21+#funcentry_extend-1(a0),d0
0001F120 <AmiBlitz3.ab2@2075>     SUB.w #$21+#funcentry_extend,d0
0001F124 <AmiBlitz3.ab2@2076>     ADD.w #16,d0
0001F12A <AmiBlitz3.ab2@2077>     MOVE.l #$10000,d1
0001F12C <AmiBlitz3.ab2@2078>     MOVE.l d0,d2
0001F132 <AmiBlitz3.ab2@2079>     MOVEA.l _execbase,A6
0001F136 <AmiBlitz3.ab2@2080>     JSR _AllocMem(a6)         ; thilo: not 100% sure about this!
0001F138 <AmiBlitz3.ab2@2081>     MOVE.l d0,a1
0001F13C <AmiBlitz3.ab2@2082>     MOVE.l d2,4(a1)
0001F142 <AmiBlitz3.ab2@2083>     MOVE.l unusedfunc,(a1)
0001F148 <AmiBlitz3.ab2@2084>     MOVE.l d0,unusedfunc
0001F14C <AmiBlitz3.ab2@2085>     MOVEM.l (a7)+,a6/a0/d2
0001F150 <AmiBlitz3.ab2@2086>     MOVE.l isfunc+1(a0),d0
0001F152 <AmiBlitz3.ab2@2087>     ADDQ.l #6,d0
0001F158 <AmiBlitz3.ab2@2088>     ADD.l d0,savefuncspace
0001F15C <AmiBlitz3.ab2@2091>     MOVE.l d0,8(a1)
0001F160 <AmiBlitz3.ab2@2092>     LEA 12(a1),a1
0001F162 <AmiBlitz3.ab2@2093>     MOVE.l a0,-(a7)
0001F166 <AmiBlitz3.ab2@2094>     LEA $21+#funcentry_extend(a0),a0
0001F168 <AmiBlitz3.ab2@2097>       MOVE.b (a0)+,(a1)+
0001F16C <AmiBlitz3.ab2@2098>     BNE 'l1
0001F16E <AmiBlitz3.ab2@2099>     MOVE.l (a7)+,a0
0001F170 <AmiBlitz3.ab2@2102>     MOVE.l (a0),d0
0001F174 <AmiBlitz3.ab2@2103> BRA 'lr1
0001F17C <AmiBlitz3.ab2@2106>   BTST #$7,make_smallestcode
0001F180 <AmiBlitz3.ab2@2107>   BEQ.b JL_0_3844                                           ;optimize for executable
0001F186 <AmiBlitz3.ab2@2108>   CLR.l morememadd
0001F18A <AmiBlitz3.ab2@2110>   BSR.w alloxadj
0001F18E <AmiBlitz3.ab2@2111>   BEQ.w JL_0_388A
0001F194 <AmiBlitz3.ab2@2112>   ADDQ.w #1,pass
0001F198 <AmiBlitz3.ab2@2113>   BSR.w compileall
0001F19E <AmiBlitz3.ab2@2116>   MOVE.w dontwrite,D1
0001F1A2 <AmiBlitz3.ab2@2117>   BEQ.w JL_0_38A2
0001F1A6 <AmiBlitz3.ab2@2136> BRA.w JL_0_3896
0001F1AE <AmiBlitz3.ab2@2147>   MOVE.w #$FFFF,anyerrs
0001F1B2 <AmiBlitz3.ab2@2148> BRA.w JL_0_38A2
0001F1B6 <AmiBlitz3.ab2@2151>   BSR.w alloxinc                                          ;increase all by 50%
0001F1BA <AmiBlitz3.ab2@2152>   BEQ.w Aclearallvars
0001F1BE <AmiBlitz3.ab2@2153> BRA.w JL_0_3824
0001F1C2 <AmiBlitz3.ab2@2165> BRA.w JL_0_38A6                                            ;???????
0001F1C8 <AmiBlitz3.ab2@2169>   JSR freereps
0001F1CE <AmiBlitz3.ab2@2170>   JSR freesels
0001F1D4 <AmiBlitz3.ab2@2171>   JSR AJL_0_6DF2
0001F1DA <AmiBlitz3.ab2@2172>   JSR freepends
0001F1E0 <AmiBlitz3.ab2@2173>   JSR freeifs
0001F1E6 <AmiBlitz3.ab2@2174>   JSR AJL_0_C188
0001F1EC <AmiBlitz3.ab2@2175>   JSR AJL_0_C15C
0001F1F2 <AmiBlitz3.ab2@2176>   JSR AJL_0_D9BC
0001F1F8 <AmiBlitz3.ab2@2179> JMP cleartemplabel
0001F1FC <AmiBlitz3.ab2@2182> mempool2:  Dc.l 0
0001F202 <AmiBlitz3.ab2@2186>   JSR Aclearcache
0001F20A <AmiBlitz3.ab2@2188>   BTST #$7,use_debugger
0001F20E <AmiBlitz3.ab2@2190>   BNE 'debugon
0001F214 <AmiBlitz3.ab2@2191>   CLR.w debugmode
0001F218 <AmiBlitz3.ab2@2192> BRA.b 'debugoff
0001F21E <AmiBlitz3.ab2@2195>   SNE debugmode
0001F256 <AmiBlitz3.ab2@2200>   !ComData_SetB{comByte_DebugMode,debugmode}
0001F25C <AmiBlitz3.ab2@2202>   LEA regtable,a0
0001F25E <AmiBlitz3.ab2@2203>   MOVEQ #10,d0
0001F260 <AmiBlitz3.ab2@2206>     CLR.l (a0)+
0001F264 <AmiBlitz3.ab2@2207>   DBF d0,'l1
0001F26A <AmiBlitz3.ab2@2209>   LEA includetemp2,a0
0001F26C <AmiBlitz3.ab2@2210>   CLR.b (a0)
0001F276 <AmiBlitz3.ab2@2211>   MOVE.l #7,maxregs
0001F27C <AmiBlitz3.ab2@2212>   CLR.w debugnest
0001F282 <AmiBlitz3.ab2@2213>   CLR.b funcparloop
0001F288 <AmiBlitz3.ab2@2214>   CLR.b nostringopt
0001F28E <AmiBlitz3.ab2@2215>   CLR.b firsttime
0001F294 <AmiBlitz3.ab2@2216>   CLR.l lastdestpointer
0001F29A <AmiBlitz3.ab2@2217>   CLR.l lastwritedat
0001F2A0 <AmiBlitz3.ab2@2218>   CLR.l prevwritedat
0001F2A6 <AmiBlitz3.ab2@2219>   CLR.l includeline
0001F2AC <AmiBlitz3.ab2@2220>   CLR.b incnif
0001F2B2 <AmiBlitz3.ab2@2221>   CLR.b formode
0001F2B8 <AmiBlitz3.ab2@2222>   CLR.b funccall
0001F2BE <AmiBlitz3.ab2@2223>   CLR.w objectcount
0001F2C4 <AmiBlitz3.ab2@2224>   CLR.b resdisable
0001F2CA <AmiBlitz3.ab2@2225>   CLR.b developobject
0001F2D0 <AmiBlitz3.ab2@2226>   CLR.b optistring
0001F2D6 <AmiBlitz3.ab2@2227>   CLR.b optistring2
0001F2DC <AmiBlitz3.ab2@2228>   CLR.b optiarray
0001F2E2 <AmiBlitz3.ab2@2229>   CLR.b quickadd
0001F2E8 <AmiBlitz3.ab2@2230>   CLR.w newmode
0001F2EE <AmiBlitz3.ab2@2231>   CLR.w mode
0001F2F4 <AmiBlitz3.ab2@2232>   CLR.w string1
0001F2FA <AmiBlitz3.ab2@2233>   CLR.b fastfunc
0001F300 <AmiBlitz3.ab2@2234>   CLR.w load_var_size
0001F306 <AmiBlitz3.ab2@2235>   CLR.w load_var_reg
0001F30C <AmiBlitz3.ab2@2236>   CLR.l load_var_addr
0001F312 <AmiBlitz3.ab2@2237>   CLR.w imm_size
0001F318 <AmiBlitz3.ab2@2238>   CLR.w imm_reg
0001F31E <AmiBlitz3.ab2@2239>   CLR.l imm_addr
0001F324 <AmiBlitz3.ab2@2240>   CLR.b _dcb
0001F32A <AmiBlitz3.ab2@2241>   CLR.l nohunkoffset
0001F330 <AmiBlitz3.ab2@2242>   CLR.b peekaddrsize
0001F336 <AmiBlitz3.ab2@2243>   CLR.b typecheck
0001F33C <AmiBlitz3.ab2@2244>   CLR.b declare2
0001F342 <AmiBlitz3.ab2@2245>   CLR.b declare
0001F348 <AmiBlitz3.ab2@2246>   CLR.l myoline                                          ;check
0001F34E <AmiBlitz3.ab2@2247>   CLR.l myline                                          ;check
0001F354 <AmiBlitz3.ab2@2248>   CLR.b newvariable
0001F35A <AmiBlitz3.ab2@2249>   CLR.b saved0
0001F360 <AmiBlitz3.ab2@2250>   CLR.l bsssize
0001F366 <AmiBlitz3.ab2@2251>   CLR.l chipsize
0001F36C <AmiBlitz3.ab2@2252>   CLR.b infunctioncode
0001F372 <AmiBlitz3.ab2@2253>   CLR.l errorcounter
0001F37C <AmiBlitz3.ab2@2254>   MOVE.l #-1,bssstart
0001F386 <AmiBlitz3.ab2@2255>   MOVE.l #-1,bssend
0001F390 <AmiBlitz3.ab2@2256>   MOVE.l #-1,chipstart
0001F39A <AmiBlitz3.ab2@2257>   MOVE.l #-1,chipend
0001F3A2 <AmiBlitz3.ab2@2258>   MOVE.w #0,bssmode
0001F3A8 <AmiBlitz3.ab2@2259>   CLR.w a2offset
0001F3AE <AmiBlitz3.ab2@2260>   CLR.w fast
0001F3B4 <AmiBlitz3.ab2@2261>   CLR.w fpu
0001F3BA <AmiBlitz3.ab2@2262>   CLR.b iee
0001F3C0 <AmiBlitz3.ab2@2263>   CLR.w newsyntax
0001F3C4 <AmiBlitz3.ab2@2264>   BSR.w JL_0_38A6
0001F3CA <AmiBlitz3.ab2@2265>   JSR AJL_0_7962
0001F3D0 <AmiBlitz3.ab2@2266>   JSR frallvars
0001F3D6 <AmiBlitz3.ab2@2267>   JSR fralltypes
0001F3DC <AmiBlitz3.ab2@2268>   JSR freemacs
0001F3E2 <AmiBlitz3.ab2@2269>   JSR clearfunctionlist
0001F3E8 <AmiBlitz3.ab2@2270>   TST.w pass
0001F3EE <AmiBlitz3.ab2@2272>   JSR clearlabels
0001F3F4 <AmiBlitz3.ab2@2273>   JSR clearhash
0001F3FA <AmiBlitz3.ab2@2276>   LEA devo,a0
0001F3FE <AmiBlitz3.ab2@2277>   MOVEM.l a0-a6/d0-d7,-(a7)
0001F404 <AmiBlitz3.ab2@2278>   LEA ptr_parameterstore,a1
0001F406 <AmiBlitz3.ab2@2281>     MOVE.b (a0)+,(a1)+
0001F40A <AmiBlitz3.ab2@2282>   BNE 'l1b
0001F40C <AmiBlitz3.ab2@2283>   MOVEQ #13,d2
0001F412 <AmiBlitz3.ab2@2284>   JSR findlabel2
0001F416 <AmiBlitz3.ab2@2285>   BNE 'd
0001F41A <AmiBlitz3.ab2@2286>   CLR.l 8(a2)
0001F41E <AmiBlitz3.ab2@2289>   MOVEM.l (a7)+,a0-a6/d0-d7
0001F448 <AmiBlitz3.ab2@2290>   !basic
0001F4BC <AmiBlitz3.ab2@2291>   dos_Delete{dos_AddPart{my_systemdir$,"ab_compileerror.txt"}}
0001F4DA <AmiBlitz3.ab2@2292>   !asm
0001F4E0 <AmiBlitz3.ab2@2293>   CLR.b returncode
0001F4E6 <AmiBlitz3.ab2@2294> JMP freeprocvs
0001F4EC <AmiBlitz3.ab2@2298>   MOVE.l #bssstore-labelhash,d0
0001F4EE <AmiBlitz3.ab2@2299>   ASR.l #2,d0
0001F4F4 <AmiBlitz3.ab2@2300>   LEA labelhash,a0
0001F4F6 <AmiBlitz3.ab2@2303>     CLR.l (a0)+
0001F4F8 <AmiBlitz3.ab2@2304>     SUBQ.l #1,d0
0001F4FC <AmiBlitz3.ab2@2305>   BNE.s 'l10
0001F502 <AmiBlitz3.ab2@2307>   LEA labelbase,a1
0001F504 <AmiBlitz3.ab2@2308>   MOVE.l (a1),d0
0001F508 <AmiBlitz3.ab2@2309>   BEQ 'l11
0001F50A <AmiBlitz3.ab2@2312>     MOVE.l d0,a1
0001F50E <AmiBlitz3.ab2@2313>     TST.l 4(a1)
0001F512 <AmiBlitz3.ab2@2314>     BEQ 'l29
0001F516 <AmiBlitz3.ab2@2315>     LEA $13(a1),a0
0001F518 <AmiBlitz3.ab2@2316>     MOVEQ #0,d0
0001F51A <AmiBlitz3.ab2@2317>     MOVEQ #0,d1
0001F51C <AmiBlitz3.ab2@2320>       MOVE.b (a0)+,d1
0001F520 <AmiBlitz3.ab2@2321>       BEQ 'l12
0001F526 <AmiBlitz3.ab2@2322>       !hashalgo
0001F52A <AmiBlitz3.ab2@2323> BRA 'l13
0001F530 <AmiBlitz3.ab2@2326>     LEA labelhash,a0
0001F536 <AmiBlitz3.ab2@2327>     AND.l #hashsize,d0
0001F538 <AmiBlitz3.ab2@2328>      ASL.l #2,d0
0001F53C <AmiBlitz3.ab2@2329>     MOVE.l 0(a0,d0),d1                                     ;*4
0001F540 <AmiBlitz3.ab2@2330>     MOVE.l d1,$c(a1)
0001F544 <AmiBlitz3.ab2@2331>     MOVE.l a1,0(a0,d0)
0001F546 <AmiBlitz3.ab2@2334>     MOVE.l (a1),d0
0001F54A <AmiBlitz3.ab2@2335>   BNE 'l21
0001F54C <AmiBlitz3.ab2@2338> RTS
0001F552 <AmiBlitz3.ab2@2342>   MOVEA.l lastrestype,A0
0001F554 <AmiBlitz3.ab2@2343>   MOVEA.l (A0),A2
0001F556 <AmiBlitz3.ab2@2344>   CLR.l (A0)
0001F55C <AmiBlitz3.ab2@2345> JMP freetypes
0001F562 <AmiBlitz3.ab2@2349>   MOVEA.l varbase,A3
0001F568 <AmiBlitz3.ab2@2350>   CLR.l varbase
0001F56C <AmiBlitz3.ab2@2353>   CMPA.w #$0,A3
0001F570 <AmiBlitz3.ab2@2354>   BEQ.w 'l20
0001F572 <AmiBlitz3.ab2@2355>   MOVEA.l A3,A1
0001F574 <AmiBlitz3.ab2@2356>   MOVEA.l (A3),A3
0001F576 <AmiBlitz3.ab2@2357>   MOVEQ.l #$00,D0
0001F57A <AmiBlitz3.ab2@2358>   MOVE.b $E+4(A1),D0
0001F580 <AmiBlitz3.ab2@2359>   MOVEA.l _execbase,A6
0001F586 <AmiBlitz3.ab2@2360>   MOVE.l mempool2,a0
0001F58A <AmiBlitz3.ab2@2361>   JSR _FreePooled(A6)
0001F58E <AmiBlitz3.ab2@2362> BRA.w 'l10
0001F590 <AmiBlitz3.ab2@2365> RTS
0001F596 <AmiBlitz3.ab2@2370>   LEA firstiff,A2
0001F598 <AmiBlitz3.ab2@2371>   MOVEQ.l #$0E,D2
0001F59E <AmiBlitz3.ab2@2372> JMP freeslist
0001F5A0 <AmiBlitz3.ab2@2378> progressbar_width:   Dc.w 100                              ;riteend org source ;right end of include strip
0001F5A2 <AmiBlitz3.ab2@2379> inmacro:             Ds.w 1                                ;macmask org source ;macro found
0001F5A8 <AmiBlitz3.ab2@2383>   CLR.w inmacro
0001F5AE <AmiBlitz3.ab2@2384>   ADDQ.l #1,globallinecount
0001F5B4 <AmiBlitz3.ab2@2385>   CLR.b nostringopt
0001F5B8 <AmiBlitz3.ab2@2386>   BSR.w JL_0_3CA4
0001F5BE <AmiBlitz3.ab2@2387>   CLR.w instringon
0001F5C4 <AmiBlitz3.ab2@2390>   TST.w ininclude
0001F5C8 <AmiBlitz3.ab2@2391>   BEQ.w JL_0_39B0
0001F5CE <AmiBlitz3.ab2@2392>   ADDQ.l #1,includeline
0001F5D4 <AmiBlitz3.ab2@2393>     JSR ab3_WriteDebugFile
0001F5DA <AmiBlitz3.ab2@2394>   JSR AJL_0_C09E
0001F5DE <AmiBlitz3.ab2@2395>   BEQ.w JL_0_39B0
0001F5E4 <AmiBlitz3.ab2@2396>   MOVE.w ininclude,D0
0001F5E8 <AmiBlitz3.ab2@2397>   CMP.w #$4,D0
0001F5EC <AmiBlitz3.ab2@2398>   BCC.w JL_0_39AC
0001F5EE <AmiBlitz3.ab2@2399>   ADD.w D0,D0
0001F5F4 <AmiBlitz3.ab2@2400>   LEA progress_per_line,A0
0001F5F8 <AmiBlitz3.ab2@2401>   MOVE.w $0(A0,D0.W),D2
0001F5FC <AmiBlitz3.ab2@2402>   CMP.w progressbar_width(PC),D2
0001F600 <AmiBlitz3.ab2@2403>   BCC.w JL_0_39AC
0001F604 <AmiBlitz3.ab2@2404>   ADDQ.w #1,$0(A0,D0.W)
0001F606 <AmiBlitz3.ab2@2405>   LSR.w #1,D0
0001F608 <AmiBlitz3.ab2@2406>   MOVE.l d0,d1
0001F60A <AmiBlitz3.ab2@2407>   EXT.l d1
0001F60C <AmiBlitz3.ab2@2408>   MOVE.l d2,d0
0001F60E <AmiBlitz3.ab2@2409>   EXT.l d0                                                 ;d0=x,d1=y
0001F614 <AmiBlitz3.ab2@2411>   JSR update_progressbar
0001F616 <AmiBlitz3.ab2@2414>   MOVEQ.l #-$01,D0
0001F618 <AmiBlitz3.ab2@2415> RTS
0001F61E <AmiBlitz3.ab2@2419>   MOVE.l titleat,D0
0001F620 <AmiBlitz3.ab2@2420>   MOVEQ.l #$00,D1
0001F626 <AmiBlitz3.ab2@2421>   MOVE.w progress_per_line,D1
0001F628 <AmiBlitz3.ab2@2422>   ADD.l D1,D0
0001F62A <AmiBlitz3.ab2@2423>   MOVE.l D0,D1
0001F62C <AmiBlitz3.ab2@2424>   SWAP D0
0001F632 <AmiBlitz3.ab2@2425>   CMP.w titleat,D0
0001F636 <AmiBlitz3.ab2@2426>    BEQ.w JL_0_39E4
0001F638 <AmiBlitz3.ab2@2429>   EXT.l d0
0001F63A <AmiBlitz3.ab2@2430>   MOVE.l d1,-(a7)
0001F642 <AmiBlitz3.ab2@2433>   MOVE.w #1,compiler_job                                    ; set to compiler job 1 (=build executable)
0001F648 <AmiBlitz3.ab2@2434>   JSR update_progressbar
0001F650 <AmiBlitz3.ab2@2435>   MOVE.w #0,compiler_job                                    ; set to compiler job 0 (=compile source)
0001F652 <AmiBlitz3.ab2@2439>   MOVE.l (a7)+,d1
0001F658 <AmiBlitz3.ab2@2442>   MOVE.l D1,titleat
0001F65E <AmiBlitz3.ab2@2443>   ADDQ.l #1,linenumat
0001F664 <AmiBlitz3.ab2@2444>   CLR.w linedone
0001F66A <AmiBlitz3.ab2@2445>   JSR ab3_WriteDebugFile  ; write to DebugFile every main source line
0001F670 <AmiBlitz3.ab2@2447>   SUBQ.l #1,numlines2
0001F674 <AmiBlitz3.ab2@2448>    BEQ.w JL_0_3A12
0001F67A <AmiBlitz3.ab2@2449>   MOVEA.l sourceline,A0
0001F67C <AmiBlitz3.ab2@2450>   MOVEA.l (A0),A0
0001F682 <AmiBlitz3.ab2@2451>   MOVE.l A0,sourceline
0001F686 <AmiBlitz3.ab2@2452>   LEA $9(A0),A5
0001F688 <AmiBlitz3.ab2@2455> RTS
0001F68A <AmiBlitz3.ab2@2459>   MOVE.w D0,-(A7)
0001F68C <AmiBlitz3.ab2@2460>   MOVEQ.l #$03,D0
0001F68E <AmiBlitz3.ab2@2463>     MOVE.w D1,D2
0001F692 <AmiBlitz3.ab2@2464>     ANDI.w #$F,D2
0001F696 <AmiBlitz3.ab2@2465>     ADDI.w #$30,D2
0001F69A <AmiBlitz3.ab2@2466>     CMP.w #$3A,D2
0001F69E <AmiBlitz3.ab2@2467>      BCS.w JL_0_3A2C
0001F6A0 <AmiBlitz3.ab2@2468>     ADDQ.w #7,D2
0001F6A4 <AmiBlitz3.ab2@2471>     MOVE.b D2,$0(A0,D0.W)
0001F6A6 <AmiBlitz3.ab2@2472>     LSR.w #4,D1
0001F6AA <AmiBlitz3.ab2@2473>   DBF D0,JL_0_3A18
0001F6AC <AmiBlitz3.ab2@2475>   MOVE.w (A7)+,D0
0001F6AE <AmiBlitz3.ab2@2476> RTS
0001F6B4 <AmiBlitz3.ab2@2486>   MOVE.w skipcode,D1
0001F6B8 <AmiBlitz3.ab2@2487>   BNE.w JL_0_3A46
0001F6BA <AmiBlitz3.ab2@2488> RTS
0001F6BC <AmiBlitz3.ab2@2491>   MOVE.l A5,-(A7)
0001F6BE <AmiBlitz3.ab2@2492>   MOVEQ.l #$3A,D1                                          ;':'
0001F6C0 <AmiBlitz3.ab2@2493>   MOVEQ.l #$21,D2                                          ;'!'
0001F6C2 <AmiBlitz3.ab2@2494>   MOVEQ.l #$3B,D3                                          ;';'
0001F6C4 <AmiBlitz3.ab2@2495>   MOVEQ.l #$22,D4                                          ;'"'
0001F6C6 <AmiBlitz3.ab2@2498>   MOVE.b (A5)+,D0
0001F6CA <AmiBlitz3.ab2@2499>    BEQ.w JL_0_3CA0
0001F6CE <AmiBlitz3.ab2@2500>    BPL.w JL_0_3A60
0001F6D0 <AmiBlitz3.ab2@2501>   MOVE.b (A5)+,D0
0001F6D4 <AmiBlitz3.ab2@2502> BRA.w JL_0_3A50
0001F6D6 <AmiBlitz3.ab2@2505>   CMP.b D4,D0
0001F6DA <AmiBlitz3.ab2@2506>    BNE.w JL_0_3A82
0001F6DC <AmiBlitz3.ab2@2509>   MOVE.b (A5)+,D0
0001F6E0 <AmiBlitz3.ab2@2510>    BEQ.w notqerr
0001F6E4 <AmiBlitz3.ab2@2516>   CMP.b #$22,D0
0001F6E8 <AmiBlitz3.ab2@2517>    BNE.w JL_0_3A66
0001F6EC <AmiBlitz3.ab2@2518> BRA.w JL_0_3A50
0001F6EE <AmiBlitz3.ab2@2521>   CMP.b D1,D0
0001F6F2 <AmiBlitz3.ab2@2522>    BEQ.w JL_0_3CA0
0001F6F4 <AmiBlitz3.ab2@2523>   CMP.b D3,D0
0001F6F8 <AmiBlitz3.ab2@2524>    BEQ.w JL_0_3CA0
0001F6FA <AmiBlitz3.ab2@2527>   CMP.b D2,D0
0001F6FE <AmiBlitz3.ab2@2528>    BNE.w JL_0_3A50
0001F706 <AmiBlitz3.ab2@2529>   MOVE.w #$FFFF,inmacro                                    ; no runtimecheck in macros
0001F708 <AmiBlitz3.ab2@2530>   MOVEA.l A5,A3
0001F70E <AmiBlitz3.ab2@2531>    JSR getparameter2
0001F712 <AmiBlitz3.ab2@2532>    BNE.w JL_0_3AAC
0001F718 <AmiBlitz3.ab2@2533> JMP syntaxerr
0001F722 <AmiBlitz3.ab2@2538>    MOVE.w oldqflag,instringon
0001F728 <AmiBlitz3.ab2@2539>   MOVEA.l lastsourcepos,A5
0001F72E <AmiBlitz3.ab2@2540>    JSR findmac                                             ;find macro
0001F732 <AmiBlitz3.ab2@2541>    BEQ.w JL_0_3ABE
0001F738 <AmiBlitz3.ab2@2542> JMP nomacerr
0001F73E <AmiBlitz3.ab2@2545>   TST.b debugmode
0001F742 <AmiBlitz3.ab2@2546>   BEQ 'sk1
0001F746 <AmiBlitz3.ab2@2547>   MOVE.w #$4e71,d1
0001F74C <AmiBlitz3.ab2@2548>   JSR writeword
0001F74E <AmiBlitz3.ab2@2549>   MOVE.l a5,-(a7)
0001F750 <AmiBlitz3.ab2@2550>   MOVE.l a3,a5
0001F752 <AmiBlitz3.ab2@2551>   SUBQ.l #1,a5
0001F75A <AmiBlitz3.ab2@2552>   MOVE.w #$0,inmacro
0001F75E <AmiBlitz3.ab2@2553>   BSR debugstuffa
0001F766 <AmiBlitz3.ab2@2554>   MOVE.w #$FFFF,inmacro
0001F768 <AmiBlitz3.ab2@2555>   MOVE.l (a7)+,a5
0001F76C <AmiBlitz3.ab2@2556>   MOVE.w #$4e71,d1
0001F772 <AmiBlitz3.ab2@2557>   JSR writeword
0001F774 <AmiBlitz3.ab2@2560>   MOVEA.l A5,A4
0001F778 <AmiBlitz3.ab2@2563>    CMP.b #" ",(a4)+
0001F77C <AmiBlitz3.ab2@2564>     BEQ 'l5a
0001F77E <AmiBlitz3.ab2@2565>      SUBQ.l#1,a4
0001F782 <AmiBlitz3.ab2@2566>      CMP.b #",",(a4)
0001F786 <AmiBlitz3.ab2@2567>     BEQ JL_0_3AEA
0001F788 <AmiBlitz3.ab2@2570>   MOVEQ.l #$00,D4
0001F78E <AmiBlitz3.ab2@2571>   TST.b newsyntax
0001F792 <AmiBlitz3.ab2@2572>   BEQ 'l10b
0001F796 <AmiBlitz3.ab2@2573>   MOVEM.l a0/d0,-(a7)
0001F79A <AmiBlitz3.ab2@2574>   MOVE.l 4(a2),a0
0001F79E <AmiBlitz3.ab2@2575>   MOVE.w 8(a2),d0
0001F7A2 <AmiBlitz3.ab2@2578>   CMP.b #"`",(a0)+
0001F7A6 <AmiBlitz3.ab2@2579>   BEQ 'x1
0001F7A8 <AmiBlitz3.ab2@2580>   SUBQ.w #1,d0
0001F7AC <AmiBlitz3.ab2@2581>   BNE 'x2
0001F7B0 <AmiBlitz3.ab2@2582> BRA 'x3
0001F7B4 <AmiBlitz3.ab2@2585>   MOVEM.l (a7)+,a0/d0
0001F7B8 <AmiBlitz3.ab2@2586> BRA 'l10
0001F7BC <AmiBlitz3.ab2@2589>   MOVEM.l (a7)+,a0/d0
0001F7C0 <AmiBlitz3.ab2@2590> BRA JL_0_3AEA
0001F7C4 <AmiBlitz3.ab2@2593>   CMPI.b #"{",(A4)
0001F7C8 <AmiBlitz3.ab2@2594>    BNE.w JL_0_3AEA
0001F7CA <AmiBlitz3.ab2@2598>   ADDQ.l #1,a4
0001F7CE <AmiBlitz3.ab2@2601>     CMP.b #" ",(a4)
0001F7D2 <AmiBlitz3.ab2@2602>     BEQ 'l5
0001F7D6 <AmiBlitz3.ab2@2603>     MOVEM.l a0/d0,-(a7)
0001F7DC <AmiBlitz3.ab2@2604>     CLR.b exmac
0001F7E2 <AmiBlitz3.ab2@2605>     LEA chartab,a0
0001F7E4 <AmiBlitz3.ab2@2606>     MOVEQ #0,d0
0001F7E6 <AmiBlitz3.ab2@2607>     MOVE.b (a4),d0
0001F7EA <AmiBlitz3.ab2@2608>     BMI 'm1
0001F7EE <AmiBlitz3.ab2@2609>     TST.b 0(a0,d0)
0001F7F2 <AmiBlitz3.ab2@2610>     BEQ 'm1
0001F7F8 <AmiBlitz3.ab2@2611>     TST.b newsyntax
0001F7FC <AmiBlitz3.ab2@2612>     BEQ 'ns1
0001F800 <AmiBlitz3.ab2@2613>     CMP.b #"#",d0
0001F804 <AmiBlitz3.ab2@2614>     BEQ 'm1
0001F808 <AmiBlitz3.ab2@2615>     CMP.b #"$",d0
0001F80C <AmiBlitz3.ab2@2616>     BEQ 'm1
0001F810 <AmiBlitz3.ab2@2617>     CMP.b #"-",d0
0001F814 <AmiBlitz3.ab2@2618>     BEQ 'm1
0001F818 <AmiBlitz3.ab2@2621>   CMP.b #",",d0
0001F81C <AmiBlitz3.ab2@2622>     BEQ 'm1
0001F820 <AmiBlitz3.ab2@2623>     CMP.b #"{",d0
0001F824 <AmiBlitz3.ab2@2624>     BNE 'm1b
0001F826 <AmiBlitz3.ab2@2625>     ADDQ.l #1,a4
0001F82A <AmiBlitz3.ab2@2626> BRA 'm1
0001F830 <AmiBlitz3.ab2@2629>   TST.b newsyntax
0001F834 <AmiBlitz3.ab2@2630>     BEQ 'm1
0001F83C <AmiBlitz3.ab2@2631>     MOVE.b #1,exmac
0001F840 <AmiBlitz3.ab2@2634>   MOVEM.l (a7)+,a0/d0
0001F846 <AmiBlitz3.ab2@2635>     TST.b exmac
0001F84A <AmiBlitz3.ab2@2636>     BNE JL_0_3AEA
0001F84C <AmiBlitz3.ab2@2643>   TST.b (a4)
0001F850 <AmiBlitz3.ab2@2644>   BEQ JL_0_3AEA
0001F856 <AmiBlitz3.ab2@2647>   MOVEA.l ptr_macrobuffer_begin,A0
0001F858 <AmiBlitz3.ab2@2650>   ADDQ.w #1,D4
0001F85A <AmiBlitz3.ab2@2651>   MOVE.l A4,(A0)
0001F85E <AmiBlitz3.ab2@2652>   CLR.w 4(a0)
0001F862 <AmiBlitz3.ab2@2653>    BSR.w JL_0_3CC6
0001F864 <AmiBlitz3.ab2@2655>   ADDQ.l #4,a0
0001F866 <AmiBlitz3.ab2@2659>   SUBQ.w #1,(a0)+
0001F86A <AmiBlitz3.ab2@2660>   CMP.b #$7D,D0
0001F86E <AmiBlitz3.ab2@2661>   BEQ 'l10
0001F870 <AmiBlitz3.ab2@2662>   TST.b d0
0001F874 <AmiBlitz3.ab2@2663>   BEQ 'l10
0001F878 <AmiBlitz3.ab2@2664> BRA JL_0_3AD0
0001F87E <AmiBlitz3.ab2@2668>   CLR.l sourceline3
0001F880 <AmiBlitz3.ab2@2669>   MOVEA.l A4,A5
0001F886 <AmiBlitz3.ab2@2672>   MOVE.w D4,numarg
0001F88C <AmiBlitz3.ab2@2679>   MOVE.l #$01,D1
0001F892 <AmiBlitz3.ab2@2680>   MOVEA.l _execbase,A6
0001F898 <AmiBlitz3.ab2@2681>   MOVE.l mempool,a0
0001F89E <AmiBlitz3.ab2@2682>   MOVE.l macrobuffer_size,D0
0001F8A4 <AmiBlitz3.ab2@2683>   CMP.l #40000,d0
0001F8A8 <AmiBlitz3.ab2@2684>   BGE 'l1m
0001F8AE <AmiBlitz3.ab2@2685>   MOVE.l #40000,d0
0001F8B4 <AmiBlitz3.ab2@2686>   MOVE.l d0,macrobuffer_size
0001F8B8 <AmiBlitz3.ab2@2689>   JSR _AllocPooled(a6)
0001F8C2 <AmiBlitz3.ab2@2691>   MOVE.l myline,myoline
0001F8C4 <AmiBlitz3.ab2@2694>   ADDQ.l #1,d0
0001F8CA <AmiBlitz3.ab2@2695>   MOVE.l D0,myline
0001F8CC <AmiBlitz3.ab2@2696>   MOVEA.l D0,A1
0001F8D2 <AmiBlitz3.ab2@2697>   MOVE.b #":",-1(a1)
0001F8D4 <AmiBlitz3.ab2@2698>   MOVEA.l A1,A6
0001F8DA <AmiBlitz3.ab2@2699>   ADDA.l macrobuffer_size,A6
0001F8DC <AmiBlitz3.ab2@2700>   MOVEA.l (A7)+,A0
0001F8DE <AmiBlitz3.ab2@2703>   CMPA.l A6,A1
0001F8E2 <AmiBlitz3.ab2@2704>    BCC.w mbovererr
0001F8E4 <AmiBlitz3.ab2@2705>   MOVE.b (A0)+,(a1)+
0001F8E6 <AmiBlitz3.ab2@2706>   CMPA.l A3,A0
0001F8EA <AmiBlitz3.ab2@2707>    BCS.w JL_0_3B1E
0001F8EC <AmiBlitz3.ab2@2708>   SUBQ.w #1,A1
0001F8F0 <AmiBlitz3.ab2@2709>   MOVE.w $8(A2),D1
0001F8F4 <AmiBlitz3.ab2@2710>    BEQ.w JL_0_3C70
0001F8FC <AmiBlitz3.ab2@2711>   MOVE.w $A(A2),macnum
0001F900 <AmiBlitz3.ab2@2712>   ADDQ.w #1,$A(A2)
0001F904 <AmiBlitz3.ab2@2713>   MOVEA.l $4(A2),A2
0001F906 <AmiBlitz3.ab2@2714>   SUBQ.w #1,D1
0001F90C <AmiBlitz3.ab2@2715>   CLR.b firstmline
0001F90E <AmiBlitz3.ab2@2718>     MOVEQ.l #$00,D0
0001F910 <AmiBlitz3.ab2@2719>     MOVE.b (A2)+,D0
0001F916 <AmiBlitz3.ab2@2720>     TST.b firstmline
0001F91A <AmiBlitz3.ab2@2721>     BNE 'c1
0001F91E <AmiBlitz3.ab2@2722>     CMP.b #$22,d0
0001F922 <AmiBlitz3.ab2@2723>     BNE 's1
0001F92A <AmiBlitz3.ab2@2724>     MOVE.b #1,firstmline
0001F92E <AmiBlitz3.ab2@2727>     CMP.b #":",d0
0001F932 <AmiBlitz3.ab2@2728>     BNE 'm1
0001F93A <AmiBlitz3.ab2@2729>     MOVE.b #1,firstmline
0001F93E <AmiBlitz3.ab2@2732>     CMP.b #";",d0
0001F942 <AmiBlitz3.ab2@2733>     BNE 'c1
0001F944 <AmiBlitz3.ab2@2736>     SUBQ.w #1,d1                                           ;filter out comment
0001F946 <AmiBlitz3.ab2@2737>     MOVE.b (a2)+,d0
0001F94C <AmiBlitz3.ab2@2738>     CMP.w #":@",-1(a2)
0001F950 <AmiBlitz3.ab2@2739>     BEQ 'c2
0001F952 <AmiBlitz3.ab2@2740>     TST.w d1
0001F956 <AmiBlitz3.ab2@2741>     BNE 'l1
0001F95A <AmiBlitz3.ab2@2742>   BRA JL_0_3C6C
0001F960 <AmiBlitz3.ab2@2745>     CMP.b #":",1(a2)
0001F964 <AmiBlitz3.ab2@2746>       BNE 'l1
0001F966 <AmiBlitz3.ab2@2747>       ADDQ #2,a2
0001F968 <AmiBlitz3.ab2@2748>       SUBQ #3,d1
0001F96A <AmiBlitz3.ab2@2749>       MOVE.b (a2)+,d0
0001F972 <AmiBlitz3.ab2@2750>       MOVE.b #1,firstmline
0001F976 <AmiBlitz3.ab2@2753>     CMP.b #"`",D0
0001F97A <AmiBlitz3.ab2@2754>      BNE.w JL_0_3C56
0001F97C <AmiBlitz3.ab2@2755>     SUBQ.w #1,D1
0001F97E <AmiBlitz3.ab2@2756>     MOVE.b (A2)+,D0
0001F982 <AmiBlitz3.ab2@2757>     CMP.w #$7B,D0
0001F986 <AmiBlitz3.ab2@2758>      BEQ.w JL_0_3BB6
0001F98A <AmiBlitz3.ab2@2759>     CMP.w #$40,D0
0001F98E <AmiBlitz3.ab2@2760>      BNE.w JL_0_3B82
0001F990 <AmiBlitz3.ab2@2761>     MOVEQ.l #$00,D2
0001F996 <AmiBlitz3.ab2@2762>     MOVE.w macnum,D2
0001F998 <AmiBlitz3.ab2@2763>     MOVEA.l A1,A0
0001F99A <AmiBlitz3.ab2@2764>     MOVE.w D1,-(A7)
0001F9A0 <AmiBlitz3.ab2@2765>      JSR makelong
0001F9A2 <AmiBlitz3.ab2@2766>     MOVEA.l A0,A1
0001F9A4 <AmiBlitz3.ab2@2767>     MOVE.w (A7)+,D1
0001F9A8 <AmiBlitz3.ab2@2768>   BRA.w JL_0_3C6C
0001F9AC <AmiBlitz3.ab2@2771>     ORI.w #$20,D0
0001F9B0 <AmiBlitz3.ab2@2772>     CMP.w #$7A,D0
0001F9B4 <AmiBlitz3.ab2@2773>      BCS.w JL_0_3B94
0001F9BA <AmiBlitz3.ab2@2774>   JMP ilconsterr
0001F9BE <AmiBlitz3.ab2@2777>     SUBI.w #$30,D0
0001F9C2 <AmiBlitz3.ab2@2778>     CMP.w #$A,D0
0001F9C6 <AmiBlitz3.ab2@2779>      BCS.w JL_0_3BF2
0001F9CA <AmiBlitz3.ab2@2780>     SUBI.w #$27,D0
0001F9CE <AmiBlitz3.ab2@2781>     CMP.w #$A,D0
0001F9D2 <AmiBlitz3.ab2@2782>      BCC.w JL_0_3BB2
0001F9D8 <AmiBlitz3.ab2@2783>   JMP ilconsterr
0001F9DC <AmiBlitz3.ab2@2786>   BRA.w JL_0_3BF2
0001F9DE <AmiBlitz3.ab2@2789>     MOVE.l A5,-(A7)
0001F9E2 <AmiBlitz3.ab2@2790>     MOVEM.l D1/A1-A2/A6,-(A7)
0001F9E4 <AmiBlitz3.ab2@2791>     MOVEA.l A2,A5
0001F9EA <AmiBlitz3.ab2@2792>      JSR AJL_0_BF6E
0001F9EE <AmiBlitz3.ab2@2793>     CMP.w #$7D,D0
0001F9F2 <AmiBlitz3.ab2@2794>      BEQ.w JL_0_3BD2
0001F9F8 <AmiBlitz3.ab2@2795>   JMP syntaxerr
0001F9FC <AmiBlitz3.ab2@2798>     MOVEM.l (A7)+,D1/A1-A2/A6
0001F9FE <AmiBlitz3.ab2@2799>     MOVE.l A5,D2
0001FA00 <AmiBlitz3.ab2@2800>     SUB.l A2,D2
0001FA02 <AmiBlitz3.ab2@2801>     SUB.w D2,D1
0001FA04 <AmiBlitz3.ab2@2802>     MOVEA.l A5,A2
0001FA0A <AmiBlitz3.ab2@2803>     CLR.w instringon
0001FA0C <AmiBlitz3.ab2@2804>     MOVEA.l (A7)+,A5
0001FA0E <AmiBlitz3.ab2@2805>     MOVE.l D3,D0
0001FA12 <AmiBlitz3.ab2@2806>     BPL.w JL_0_3BF2
0001FA18 <AmiBlitz3.ab2@2807>   JMP ilconsterr
0001FA1A <AmiBlitz3.ab2@2810>     SUBQ.w #1,D0
0001FA1E <AmiBlitz3.ab2@2811>      BPL.w JL_0_3C20
0001FA24 <AmiBlitz3.ab2@2815>     MOVE.w numarg,D0
0001FA28 <AmiBlitz3.ab2@2816>     DIVU #$A,D0
0001FA2C <AmiBlitz3.ab2@2817>     ADDI.w #$30,D0
0001FA2E <AmiBlitz3.ab2@2818>     CMPA.l A6,A1
0001FA32 <AmiBlitz3.ab2@2819>      BCC.w mbovererr
0001FA34 <AmiBlitz3.ab2@2820>     MOVE.b D0,(A1)+
0001FA36 <AmiBlitz3.ab2@2821>     SWAP D0
0001FA3A <AmiBlitz3.ab2@2822>     ADDI.w #$30,D0
0001FA3C <AmiBlitz3.ab2@2823>     CMPA.l A6,A1
0001FA40 <AmiBlitz3.ab2@2824>      BCC.w mbovererr
0001FA42 <AmiBlitz3.ab2@2825>     MOVE.b D0,(A1)+
0001FA46 <AmiBlitz3.ab2@2826>   BRA.w JL_0_3C6C
0001FA4C <AmiBlitz3.ab2@2832>     CMP.w numarg,D0
0001FA50 <AmiBlitz3.ab2@2833>      BCC.w JL_0_3C6C
0001FA52 <AmiBlitz3.ab2@2834>     LSL.w #1,D0
0001FA54 <AmiBlitz3.ab2@2835>     MOVE.w D0,D4
0001FA56 <AmiBlitz3.ab2@2836>     LSL.w #1,D0
0001FA58 <AmiBlitz3.ab2@2837>     ADD.w D4,D0
0001FA5E <AmiBlitz3.ab2@2838>     MOVEA.l ptr_macrobuffer_begin,A0
0001FA60 <AmiBlitz3.ab2@2839>     ADDA.w D0,A0
0001FA64 <AmiBlitz3.ab2@2840>     MOVE.w $4(A0),D4
0001FA68 <AmiBlitz3.ab2@2841>      BEQ.w JL_0_3C6C
0001FA6A <AmiBlitz3.ab2@2842>     MOVEA.l (A0),A0
0001FA6C <AmiBlitz3.ab2@2843>     SUBQ.w #1,D4
0001FA6E <AmiBlitz3.ab2@2846>       CMPA.l A6,A1
0001FA72 <AmiBlitz3.ab2@2847>        BCC.w mbovererr
0001FA76 <AmiBlitz3.ab2@2848>       CMP.w #"@@",(a0)
0001FA7A <AmiBlitz3.ab2@2849>        BNE 'l10
0001FA80 <AmiBlitz3.ab2@2850>       TST.w ininclude
0001FA84 <AmiBlitz3.ab2@2851>        BNE errorjoin
0001FA8A <AmiBlitz3.ab2@2854>       MOVE.l sourceline,a0
0001FA8C <AmiBlitz3.ab2@2855>       MOVE.l (a0),a0
0001FA92 <AmiBlitz3.ab2@2856>       CMP.l #0,a0
0001FA96 <AmiBlitz3.ab2@2857>       BNE 'l11
0001FA98 <AmiBlitz3.ab2@2858>       MOVEQ #0,d0
0001FA9E <AmiBlitz3.ab2@2859>       JSR error
0001FAA4 <AmiBlitz3.ab2@2862>       MOVE.l a0,sourceline
0001FAAA <AmiBlitz3.ab2@2863>       ADDQ.l #1,linenumat
0001FAAE <AmiBlitz3.ab2@2864>       LEA 9(a0),a0
0001FAB0 <AmiBlitz3.ab2@2865>       MOVE.l a0,-(a7)
0001FAB4 <AmiBlitz3.ab2@2868>       CMP.b #" ",(a0)+
0001FAB8 <AmiBlitz3.ab2@2869>        BEQ 'l110
0001FABE <AmiBlitz3.ab2@2870>       CMP.b #";",-1(a0)
0001FAC0 <AmiBlitz3.ab2@2871>       MOVE.l (a7)+,a0
0001FAC4 <AmiBlitz3.ab2@2872>        BEQ 'l111
0001FAC6 <AmiBlitz3.ab2@2873>       SUBQ.l #1,d4
0001FAC8 <AmiBlitz3.ab2@2876>       MOVE.b (A0)+,(A1)+
0001FACC <AmiBlitz3.ab2@2877>     DBF D4,JL_0_3C46
0001FAD0 <AmiBlitz3.ab2@2879>   BRA.w JL_0_3C6C
0001FAD2 <AmiBlitz3.ab2@2882>     CMPA.l A6,A1
0001FAD6 <AmiBlitz3.ab2@2883>      BCC.w mbovererr
0001FAD8 <AmiBlitz3.ab2@2884>     MOVE.b D0,(A1)+
0001FADC <AmiBlitz3.ab2@2885>      BPL.w JL_0_3C6C
0001FADE <AmiBlitz3.ab2@2886>     CMPA.l A6,A1
0001FAE2 <AmiBlitz3.ab2@2887>      BCC.w mbovererr
0001FAE4 <AmiBlitz3.ab2@2888>     MOVE.b (A2)+,(A1)+
0001FAE6 <AmiBlitz3.ab2@2889>     SUBQ.w #1,D1
0001FAEA <AmiBlitz3.ab2@2892>   DBF D1,JL_0_3B48
0001FAEC <AmiBlitz3.ab2@2902>   CMPA.l A6,A1
0001FAF0 <AmiBlitz3.ab2@2903>    BCC.w mbovererr
0001FAF2 <AmiBlitz3.ab2@2904>   MOVE.b (A5)+,(A1)+
0001FAF6 <AmiBlitz3.ab2@2905>    BNE.w JL_0_3C70
0001FAFC <AmiBlitz3.ab2@2906>   MOVEA.l myline,A5
0001FB02 <AmiBlitz3.ab2@2907>   MOVE.l myoline,D0
0001FB06 <AmiBlitz3.ab2@2908>    BEQ.w JL_0_3C9C
0001FB08 <AmiBlitz3.ab2@2909>   SUBQ.l #1,d0
0001FB0A <AmiBlitz3.ab2@2910>   MOVEA.l D0,A1
0001FB10 <AmiBlitz3.ab2@2911>   MOVE.l macrobuffer_size,D0
0001FB16 <AmiBlitz3.ab2@2912>   MOVEA.l _execbase,A6
0001FB1C <AmiBlitz3.ab2@2913>   MOVE.l mempool,a0
0001FB20 <AmiBlitz3.ab2@2914>   JSR _FreePooled(A6)
0001FB24 <AmiBlitz3.ab2@2917> BRA.w JL_0_3A46
0001FB26 <AmiBlitz3.ab2@2920>   MOVEA.l (A7)+,A5
0001FB28 <AmiBlitz3.ab2@2921> RTS
0001FB2E <AmiBlitz3.ab2@2925>   MOVE.l myline,D0
0001FB32 <AmiBlitz3.ab2@2926>   BEQ.w JL_0_3CC4
0001FB34 <AmiBlitz3.ab2@2927>   SUBQ.l #1,d0
0001FB3A <AmiBlitz3.ab2@2928>   CLR.l myline
0001FB3C <AmiBlitz3.ab2@2929>   MOVEA.l D0,A1
0001FB42 <AmiBlitz3.ab2@2930>   MOVE.l macrobuffer_size,D0
0001FB48 <AmiBlitz3.ab2@2931>   MOVEA.l _execbase,A6
0001FB4E <AmiBlitz3.ab2@2932>   MOVE.l mempool,a0
0001FB52 <AmiBlitz3.ab2@2933> JMP _FreePooled(A6)
0001FB54 <AmiBlitz3.ab2@2936> RTS
0001FB56 <AmiBlitz3.ab2@2940>   MOVEQ.l #$00,D2
0001FB5A <AmiBlitz3.ab2@2943>   ADDQ.w #1,4(a0)
0001FB5C <AmiBlitz3.ab2@2944>    MOVE.b (A4)+,D0
0001FB60 <AmiBlitz3.ab2@2946>    BEQ exit1
0001FB64 <AmiBlitz3.ab2@2947>    BPL.w JL_0_3CD8
0001FB68 <AmiBlitz3.ab2@2948>   ADDQ.w #1,4(a0)
0001FB6A <AmiBlitz3.ab2@2949>   ADDQ.w #1,A4
0001FB6E <AmiBlitz3.ab2@2950> BRA.w JL_0_3CC8
0001FB74 <AmiBlitz3.ab2@2953>    TST.w instringon
0001FB78 <AmiBlitz3.ab2@2954>    BNE 'lnom
0001FB7C <AmiBlitz3.ab2@2955>    CMP.b #";",d0
0001FB80 <AmiBlitz3.ab2@2956>    BEQ exit2
0001FB84 <AmiBlitz3.ab2@2957>    CMP.b #":",d0
0001FB88 <AmiBlitz3.ab2@2958>    BEQ exit2
0001FB8C <AmiBlitz3.ab2@2961>   CMP.b #$22,D0
0001FB90 <AmiBlitz3.ab2@2962>    BNE.w JL_0_3CEA
0001FB96 <AmiBlitz3.ab2@2963>   NOT.w instringon
0001FB9A <AmiBlitz3.ab2@2964> BRA.w JL_0_3CC8
0001FBA0 <AmiBlitz3.ab2@2968>   TST.w instringon
0001FBA4 <AmiBlitz3.ab2@2969>    BNE.w JL_0_3CC8
0001FBA8 <AmiBlitz3.ab2@2970>    CMP.b #"@",d0
0001FBAC <AmiBlitz3.ab2@2971>    BNE 'l10
0001FBB0 <AmiBlitz3.ab2@2972>    CMP.b #"@",(a4)
0001FBB4 <AmiBlitz3.ab2@2973>    BNE 'l10
0001FBBA <AmiBlitz3.ab2@2974>    TST.w ininclude
0001FBBE <AmiBlitz3.ab2@2975>    BNE errorjoin
0001FBC4 <AmiBlitz3.ab2@2976>    MOVE.l sourceline3,a4
0001FBCA <AmiBlitz3.ab2@2977>    CMP.l #0,a4
0001FBCE <AmiBlitz3.ab2@2978>    BNE 'l11
0001FBD4 <AmiBlitz3.ab2@2979>    MOVE.l sourceline,a4
0001FBD6 <AmiBlitz3.ab2@2982>   MOVE.l (a4),a4
0001FBDC <AmiBlitz3.ab2@2983>       CMP.l #0,a4
0001FBE0 <AmiBlitz3.ab2@2984>       BNE 'l12
0001FBE2 <AmiBlitz3.ab2@2985>       MOVEQ #0,d0
0001FBE8 <AmiBlitz3.ab2@2986>       JSR error
0001FBEE <AmiBlitz3.ab2@2989>    MOVE.l a4,sourceline3
0001FBF2 <AmiBlitz3.ab2@2990>    LEA 9(a4),a4
0001FBF4 <AmiBlitz3.ab2@2991>    MOVEQ #",",d0
0001FBF8 <AmiBlitz3.ab2@2994>   CMP.b #$2C,D0
0001FBFC <AmiBlitz3.ab2@2995>    BNE.w JL_0_3D06
0001FBFE <AmiBlitz3.ab2@2996>   TST.w D2
0001FC02 <AmiBlitz3.ab2@2997>    BEQ.w JL_0_3D30
0001FC06 <AmiBlitz3.ab2@2998> BRA.w JL_0_3CC8
0001FC0A <AmiBlitz3.ab2@3002>    CMP.b #$7B,D0                                           ;"{"
0001FC0E <AmiBlitz3.ab2@3003>    BEQ.w 'l10
0001FC12 <AmiBlitz3.ab2@3004>   CMP.b #$28,D0                                            ;"("
0001FC16 <AmiBlitz3.ab2@3007>    BNE.w JL_0_3D14
0001FC18 <AmiBlitz3.ab2@3008>   ADDQ.w #1,D2
0001FC1C <AmiBlitz3.ab2@3009> BRA.w JL_0_3CC8
0001FC20 <AmiBlitz3.ab2@3012>   CMP.b #$7D,D0                                           ;"}"
0001FC24 <AmiBlitz3.ab2@3013>    BNE.w JL_0_3D22
0001FC26 <AmiBlitz3.ab2@3014>  TST.w D2
0001FC2A <AmiBlitz3.ab2@3015>    BEQ.w JL_0_3D30
0001FC2E <AmiBlitz3.ab2@3019>    CMP.b #$7D,D0                                           ;"}"
0001FC32 <AmiBlitz3.ab2@3020>    BEQ.w 'l10
0001FC36 <AmiBlitz3.ab2@3021>   CMP.b #$29,D0                                            ;")"
0001FC3A <AmiBlitz3.ab2@3024>    BNE.w JL_0_3CC8
0001FC3C <AmiBlitz3.ab2@3025>   SUBQ.w #1,D2
0001FC40 <AmiBlitz3.ab2@3026> BRA.w JL_0_3CC8
0001FC42 <AmiBlitz3.ab2@3029> RTS
0001FC44 <AmiBlitz3.ab2@3033>       SUBQ.l #1,a4
0001FC4A <AmiBlitz3.ab2@3034>       CLR.l sourceline3
0001FC4C <AmiBlitz3.ab2@3035> RTS
0001FC4E <AmiBlitz3.ab2@3039>       MOVEQ #0,d0
0001FC50 <AmiBlitz3.ab2@3040>       SUBQ.l #1,a4
0001FC56 <AmiBlitz3.ab2@3041>       CLR.l sourceline3
0001FC58 <AmiBlitz3.ab2@3042> RTS
0001FC5C <AmiBlitz3.ab2@3046>   CMP.b #$7B,D0                                            ;"{"
0001FC60 <AmiBlitz3.ab2@3047>   BEQ.w JL_0_3D3E
0001FC64 <AmiBlitz3.ab2@3048>   CMP.b #$28,D0                                            ;"("
0001FC66 <AmiBlitz3.ab2@3051> RTS
0001FC6A <AmiBlitz3.ab2@3055>   CMP.b #$7D,D0                                            ;"}"
0001FC6E <AmiBlitz3.ab2@3056>   BEQ.w JL_0_3D4C
0001FC72 <AmiBlitz3.ab2@3057>   CMP.b #$29,D0                                            ;")"
0001FC74 <AmiBlitz3.ab2@3060> RTS
0001FC76 <AmiBlitz3.ab2@3064> stopit:     Ds.w 1
0001FC78 <AmiBlitz3.ab2@3065> clrreq:     Ds.w 1
0001FC7C <AmiBlitz3.ab2@3086>   MOVE.w clrreq(PC),D0
0001FC80 <AmiBlitz3.ab2@3087>    BEQ.w close_compilewin__skip
0001FCB2 <AmiBlitz3.ab2@3089> 
0001FCB8 <AmiBlitz3.ab2@3091>   LEA clrreq,a0
0001FCBA <AmiBlitz3.ab2@3092>   NOT.w (a0)                                               ;reass
0001FCC0 <AmiBlitz3.ab2@3093>   MOVEA.l ptr_ThisTask,A0
0001FCC4 <AmiBlitz3.ab2@3094>   CLR.l $1E(A0)
0001FCC8 <AmiBlitz3.ab2@3095>   CLR.l $2A(A0)
0001FCCA <AmiBlitz3.ab2@3098> RTS
0001FCCC <AmiBlitz3.ab2@3101> intsused:  Ds.w 1
0001FCD4 <AmiBlitz3.ab2@3105>   MOVE.w #-1,blitzoff
0001FCDA <AmiBlitz3.ab2@3106>   CLR.w intsused
0001FCE0 <AmiBlitz3.ab2@3107>   CLR.w anyerrs
0001FCE6 <AmiBlitz3.ab2@3108>   CLR.w blitzmode
0001FCEC <AmiBlitz3.ab2@3109>   CLR.w dontwrite                                              ;nomemleft
0001FCF2 <AmiBlitz3.ab2@3110>   CLR.w constmode
0001FCF8 <AmiBlitz3.ab2@3111>   CLR.w cmake
0001FCFE <AmiBlitz3.ab2@3112>   CLR.w cfetchmode
0001FD04 <AmiBlitz3.ab2@3113>   CLR.l intdata1
0001FD0A <AmiBlitz3.ab2@3114>   CLR.w fuckpos
0001FD10 <AmiBlitz3.ab2@3115>   CLR.w procnum
0001FD16 <AmiBlitz3.ab2@3116>   CLR.w procnum2
0001FD1C <AmiBlitz3.ab2@3117>   CLR.w dfetch
0001FD22 <AmiBlitz3.ab2@3118>   CLR.l titleat
0001FD28 <AmiBlitz3.ab2@3119>   CLR.b usedpath
0001FD2E <AmiBlitz3.ab2@3120>   CLR.b path2
0001FD34 <AmiBlitz3.ab2@3121>   CLR.w inerr
0001FD3A <AmiBlitz3.ab2@3122>   CLR.w intlevel
0001FD40 <AmiBlitz3.ab2@3123>   CLR.l cont_pc
0001FD46 <AmiBlitz3.ab2@3124>   CLR.l cont_pc2
0001FD4C <AmiBlitz3.ab2@3125>   CLR.l lastcontlink
0001FD56 <AmiBlitz3.ab2@3126>   MOVE.l destbufferstart,destpointer
0001FD60 <AmiBlitz3.ab2@3127>   MOVE.l destbufferstart,bigpc
0001FD6A <AmiBlitz3.ab2@3128>   MOVE.l destbufferend,libend
0001FD74 <AmiBlitz3.ab2@3129>   MOVE.l data1start,data1
0001FD7E <AmiBlitz3.ab2@3130>   MOVE.l data2at,data2
0001FD86 <AmiBlitz3.ab2@3131>   MOVE.w #-1,skipcode                                      ;#-1,comflag org source
0001FD8E <AmiBlitz3.ab2@3132>   MOVE.w #-1,linemode                                      ;#-1,linemode org soruce
0001FD94 <AmiBlitz3.ab2@3133>   CLR.w oldvcodelen
0001FD9A <AmiBlitz3.ab2@3134>   CLR.b lastgloballabel                                    ;lastbiglab org source
0001FD9C <AmiBlitz3.ab2@3135> RTS
0001FD9E <AmiBlitz3.ab2@3138> debugmode:  Ds.w 1                                         ;debugga org source ;debugger enabled?
0001FDA4 <AmiBlitz3.ab2@3142>   LEA  clrreq,a1
0001FDA8 <AmiBlitz3.ab2@3143>   MOVE.w #2000,(a1)
0001FDD2 <AmiBlitz3.ab2@3144>   !basic
0001FDE8 <AmiBlitz3.ab2@3145> 
0001FE38 <AmiBlitz3.ab2@3146>   comstatusstr   = !TRANS{"Initializing Compiler..."} ;default settings
0001FE40 <AmiBlitz3.ab2@3147>   calcpro.l      = 0
0001FE48 <AmiBlitz3.ab2@3148>   calcpro_old.l  = 0
0001FE54 <AmiBlitz3.ab2@3149>   typ_old.l      = -1
0001FE60 <AmiBlitz3.ab2@3150>   pass_old.l     = -1
0001FE66 <AmiBlitz3.ab2@3151>   update_comstatus_gui.b = True ; for the first
0001FEA0 <AmiBlitz3.ab2@3153>   GetD0 &comstatusstr : !ComData_SetL{comPtr_CompileStatusString,d0}  ; set pointer of status string for gui tomsmart1 2012 05 12
0001FEDA <AmiBlitz3.ab2@3154>   GetD0 &calcpro      : !ComData_SetL{comPtr_CompileCalcProLong ,d0}  ; set pointer of calcpro long for gui tomsmart1 2012 05 12
0001FEF8 <AmiBlitz3.ab2@3155>   !asm
0001FF2A <AmiBlitz3.ab2@3156> 
0001FF30 <AmiBlitz3.ab2@3158>   CLR.w stopit
0001FF32 <AmiBlitz3.ab2@3159> RTS
0001FF38 <AmiBlitz3.ab2@3163>   CLR.w storedebugmode
0001FF3E <AmiBlitz3.ab2@3164>   CLR.b iserror
0001FF42 <AmiBlitz3.ab2@3165>   BSR.w compilerequester
0001FF4C <AmiBlitz3.ab2@3167>   MOVE.l #0,globallinecount
0001FF52 <AmiBlitz3.ab2@3168>   JSR check_of_same_source
0001FF56 <AmiBlitz3.ab2@3169>   BSR.w call_setpointerbusy
0001FF5A <AmiBlitz3.ab2@3170>   BSR.w setcvars
0001FF62 <AmiBlitz3.ab2@3171>   MOVE.w #$8000,globalvarpointer
0001FF6C <AmiBlitz3.ab2@3172>   MOVE.l #newtype_quick,defaulttype
0001FF72 <AmiBlitz3.ab2@3173>   MOVE.l A7,passstack
0001FF7C <AmiBlitz3.ab2@3174>   MOVE.l #firstitem_,sourceline
0001FF86 <AmiBlitz3.ab2@3175>   MOVE.w numlines_org,linesleft
0001FF90 <AmiBlitz3.ab2@3176>   MOVE.l numlines,numlines2
0001FF96 <AmiBlitz3.ab2@3177>   ADDQ.w #1,linesleft
0001FF9C <AmiBlitz3.ab2@3178>   ADDQ.l #1,numlines2
0001FFA6 <AmiBlitz3.ab2@3179>   MOVE.l #-1,linenumat
0001FFAA <AmiBlitz3.ab2@3180>   BSR.w resetlibs
0001FFAE <AmiBlitz3.ab2@3181>   BSR.w Aclearallvars
0001FFB4 <AmiBlitz3.ab2@3182>   LEA progress_per_line+2,A0
0001FFB6 <AmiBlitz3.ab2@3183>   MOVEQ.l #$03,D0
0001FFB8 <AmiBlitz3.ab2@3186>     CLR.w (A0)+
0001FFBC <AmiBlitz3.ab2@3187>   DBF D0,JL_0_40EC
0001FFC2 <AmiBlitz3.ab2@3190>   LEA _include,a0
0001FFC6 <AmiBlitz3.ab2@3191>   MOVEM.l a0-a6/d0-d7,-(a7)
0001FFCC <AmiBlitz3.ab2@3192>   LEA ptr_parameterstore,a1
0001FFCE <AmiBlitz3.ab2@3195>     MOVE.b (a0)+,(a1)+
0001FFD2 <AmiBlitz3.ab2@3196>   BNE 'l1b
0001FFD4 <AmiBlitz3.ab2@3198>   MOVEQ #9,d2
0001FFDA <AmiBlitz3.ab2@3199>   JSR findlabel2
0001FFDE <AmiBlitz3.ab2@3200>   BNE 'd
0001FFE6 <AmiBlitz3.ab2@3201>   MOVE.l #0,8(a2)
0001FFEA <AmiBlitz3.ab2@3202>   MOVEM.l (a7)+,a0-a6/d0-d7
0001FFEE <AmiBlitz3.ab2@3203> BRA 'd2
0001FFF4 <AmiBlitz3.ab2@3206>   JSR addlabelhash
0001FFFC <AmiBlitz3.ab2@3207>   MOVE.l #$1,$4(A2)
00020004 <AmiBlitz3.ab2@3208>   MOVE.l #0,8(a2)
00020008 <AmiBlitz3.ab2@3209>   MOVEM.l (a7)+,a0-a6/d0-d7
0002000E <AmiBlitz3.ab2@3212>   LEA _debug,a0
00020012 <AmiBlitz3.ab2@3213>   MOVEM.l a0-a6/d0-d7,-(a7)
00020018 <AmiBlitz3.ab2@3214>   LEA ptr_parameterstore,a1
0002001A <AmiBlitz3.ab2@3217>     MOVE.b (a0)+,(a1)+
0002001E <AmiBlitz3.ab2@3218>   BNE 'l9b
00020020 <AmiBlitz3.ab2@3220>   MOVEQ #7,d2
00020026 <AmiBlitz3.ab2@3221>   JSR findlabel2
0002002A <AmiBlitz3.ab2@3222>   BNE 'd9
0002002E <AmiBlitz3.ab2@3223>   MOVE.b debugmode(PC),D0
00020030 <AmiBlitz3.ab2@3224>   EXT.w d0
00020032 <AmiBlitz3.ab2@3225>   EXT.l d0
00020036 <AmiBlitz3.ab2@3226>   MOVE.l d0,8(a2)
0002003A <AmiBlitz3.ab2@3227>   MOVEM.l (a7)+,a0-a6/d0-d7
0002003E <AmiBlitz3.ab2@3228> BRA 'd9b
00020044 <AmiBlitz3.ab2@3231>   JSR addlabelhash
0002004C <AmiBlitz3.ab2@3232>   MOVE.l #$1,$4(A2)
00020050 <AmiBlitz3.ab2@3233>   MOVE.b debugmode(PC),D0
00020052 <AmiBlitz3.ab2@3234>   EXT.w d0
00020054 <AmiBlitz3.ab2@3235>   EXT.l d0
00020058 <AmiBlitz3.ab2@3236>   MOVE.l d0,8(a2)
0002005C <AmiBlitz3.ab2@3237>   MOVEM.l (a7)+,a0-a6/d0-d7
00020062 <AmiBlitz3.ab2@3240>   MOVE.l #firstitem_,a0
00020064 <AmiBlitz3.ab2@3241>   MOVE.l (a0),a0
00020068 <AmiBlitz3.ab2@3242>   LEA 9(a0),a0
00020070 <AmiBlitz3.ab2@3243>   MOVE.w #0,exdebug
00020076 <AmiBlitz3.ab2@3244>   TST.b debugmode
0002007A <AmiBlitz3.ab2@3245>    BEQ 'l10
0002007C <AmiBlitz3.ab2@3248>   MOVE.b (a0)+,d0
00020080 <AmiBlitz3.ab2@3249>    BEQ 'l10
00020084 <AmiBlitz3.ab2@3250>   CMP.b #$20,d0
00020088 <AmiBlitz3.ab2@3251>    BEQ 'l2
0002008A <AmiBlitz3.ab2@3252>   SUBQ.l #1,a0
00020090 <AmiBlitz3.ab2@3253>   CMP.l #"DEBU",(a0)
00020094 <AmiBlitz3.ab2@3254>    BNE 'l10
0002009A <AmiBlitz3.ab2@3255>   CMP.b #"G",4(a0)
0002009E <AmiBlitz3.ab2@3256>    BNE 'l10
000200A6 <AmiBlitz3.ab2@3257>   MOVE.w #$0,debugversion
000200AE <AmiBlitz3.ab2@3258>   MOVE.b #1,exdebug
000200B4 <AmiBlitz3.ab2@3261>   LEA nops4,A0
000200BA <AmiBlitz3.ab2@3262>   LEA dataget,A1
000200C0 <AmiBlitz3.ab2@3263>   JSR pokecode2                                            ;write intro nops
000200C6 <AmiBlitz3.ab2@3264>   MOVE.l #$01010101,d1
000200CC <AmiBlitz3.ab2@3265>   JSR writedatalong                                        ;for the 4 tempregs
000200D2 <AmiBlitz3.ab2@3266>   JSR writedatalong
000200D8 <AmiBlitz3.ab2@3267>   JSR writedatalong
000200DE <AmiBlitz3.ab2@3268>   JSR writedatalong
000200E4 <AmiBlitz3.ab2@3269>   TST.b saved0
000200E8 <AmiBlitz3.ab2@3270>    BEQ 'l1
000200EE <AmiBlitz3.ab2@3271>   MOVE.l #$4e714e71,d1
000200F4 <AmiBlitz3.ab2@3272>   JSR writelong                                            ;add 2 nops
000200FA <AmiBlitz3.ab2@3273>   MOVE.l #$4e714e71,d1
00020100 <AmiBlitz3.ab2@3274>   JSR writelong                                            ;add 2 nops
00020106 <AmiBlitz3.ab2@3275>   MOVE.l #$4e714e71,d1
0002010C <AmiBlitz3.ab2@3276>   JSR writelong                                            ;add 2 nops
00020112 <AmiBlitz3.ab2@3277>    MOVE.l #$4e714e71,d1
00020118 <AmiBlitz3.ab2@3278>   JSR writelong                                            ;add 2 nops
0002011C <AmiBlitz3.ab2@3281>   MOVE.b debugmode(PC),D1
00020120 <AmiBlitz3.ab2@3282>    BEQ.b JL_0_4132
0002012A <AmiBlitz3.ab2@3283>   MOVE.b debugmode,storedebugmode
0002012E <AmiBlitz3.ab2@3284>   MOVE.w #$FFDC,D1
00020132 <AmiBlitz3.ab2@3285>    BSR.w uselib
00020138 <AmiBlitz3.ab2@3286>   TST.w debugversion                                       ;make a version for debugger
0002013C <AmiBlitz3.ab2@3287>    BNE.b JL_0_412A
00020140 <AmiBlitz3.ab2@3291>   MOVE.w #$FA3C,D1
00020144 <AmiBlitz3.ab2@3292>    BSR.w uselib
00020148 <AmiBlitz3.ab2@3293>   MOVE.w #$0001,D1
0002014C <AmiBlitz3.ab2@3294>    BSR.w uselib
00020150 <AmiBlitz3.ab2@3295> BRA.b JL_0_4132
00020154 <AmiBlitz3.ab2@3298>   MOVE.w #$FA32,D1
00020158 <AmiBlitz3.ab2@3299>   BSR.w uselib
0002015C <AmiBlitz3.ab2@3302>   BSR.w nextline
00020162 <AmiBlitz3.ab2@3303>   CLR.l linenum
00020168 <AmiBlitz3.ab2@3304>   CLR.l stacktrack
0002016E <AmiBlitz3.ab2@3307>   ADDQ.l #1,linenum
00020178 <AmiBlitz3.ab2@3308>   MOVE.l destpointer,destpointer2
0002017E <AmiBlitz3.ab2@3309>   MOVE.l a5,sourceline2
00020182 <AmiBlitz3.ab2@3310>   BSR.w compile_line                                        ;compile pass
00020186 <AmiBlitz3.ab2@3313>   BSR.w nextline
0002018A <AmiBlitz3.ab2@3314>    BNE.w JL_0_4136
0002018E <AmiBlitz3.ab2@3315>   BSR.w JUMP_do_runerrson
00020192 <AmiBlitz3.ab2@3316>   BSR.w pointchk
00020198 <AmiBlitz3.ab2@3317>   TST.b objectcount
0002019C <AmiBlitz3.ab2@3318>    BNE macenderr
000201A2 <AmiBlitz3.ab2@3319>   CLR.l linenumat
000201A6 <AmiBlitz3.ab2@3320>   BSR.w errchx2
000201B0 <AmiBlitz3.ab2@3321>   CMP.l #-1,bssend
000201B4 <AmiBlitz3.ab2@3322>    BNE 'l30
000201BE <AmiBlitz3.ab2@3323>   MOVE.l destpointer,bssend                                ;compile end
000201C4 <AmiBlitz3.ab2@3326>   MOVE.l destpointer,d0
000201CE <AmiBlitz3.ab2@3327>   CMP.l #-1,bssstart
000201D2 <AmiBlitz3.ab2@3328>   BNE 'lnf6
000201DC <AmiBlitz3.ab2@3329>   CMP.l #-1,chipstart
000201E0 <AmiBlitz3.ab2@3330>   BNE 'lnf6
000201E4 <AmiBlitz3.ab2@3331> BRA 'leven4
000201EA <AmiBlitz3.ab2@3334>   MOVE.l destpointer,d1
000201EC <AmiBlitz3.ab2@3335>   ADDQ.l #3,d1
000201F2 <AmiBlitz3.ab2@3336>   AND.l #$fffffffc,d1                                      ;bug ?
000201F8 <AmiBlitz3.ab2@3337>   MOVE.l d1,destpointer
00020202 <AmiBlitz3.ab2@3340>   MOVE.l destpointer,codeend
0002020C <AmiBlitz3.ab2@3341>   CMP.l #-1,chipend
00020210 <AmiBlitz3.ab2@3342>   BNE 'l31
0002021A <AmiBlitz3.ab2@3343>   MOVE.l destpointer,chipend
00020220 <AmiBlitz3.ab2@3346>   MOVE.l destpointer,d1
00020222 <AmiBlitz3.ab2@3347>   ADDQ.l #1,d1
00020228 <AmiBlitz3.ab2@3348>   AND.l #$fffffffe,d1                                     ;new evenexit
0002022E <AmiBlitz3.ab2@3349>   MOVE.l d1,destpointer
00020232 <AmiBlitz3.ab2@3350>   MOVE.b debugmode(PC),D1
00020236 <AmiBlitz3.ab2@3351>    BEQ.b JL_0_4180
0002023A <AmiBlitz3.ab2@3352>    BSR.w debugstuff
0002023E <AmiBlitz3.ab2@3353>   MOVE.w #$C300,D1
00020244 <AmiBlitz3.ab2@3354>    JSR Atokejsr
00020248 <AmiBlitz3.ab2@3355>    BSR.w debugstuff
0002024C <AmiBlitz3.ab2@3356>   MOVE.l eopcode(PC),D1
00020252 <AmiBlitz3.ab2@3357>    JSR writelong
00020256 <AmiBlitz3.ab2@3358>   MOVE.l lastcontlink(PC),D1
0002025A <AmiBlitz3.ab2@3359>    BEQ.b JL_0_4180
0002025C <AmiBlitz3.ab2@3360>   MOVEA.l D1,A0
00020260 <AmiBlitz3.ab2@3361>   CLR.w $6(A0)
0002026A <AmiBlitz3.ab2@3367>   MOVE.l destpointer,endop                                ;where end goes...
00020270 <AmiBlitz3.ab2@3369>   TST.w blitzmode
00020274 <AmiBlitz3.ab2@3370>   BEQ.w JL_0_4198
00020278 <AmiBlitz3.ab2@3371>   BSR.w do_AMIGA                                          ;back to amiga if in blitz!
0002027E <AmiBlitz3.ab2@3374>   TST.w intsused
00020282 <AmiBlitz3.ab2@3375>   BEQ.b JL_0_41AA
00020286 <AmiBlitz3.ab2@3376>   MOVE.w #$C105,D1                                        ;interupts off!
0002028C <AmiBlitz3.ab2@3377>   JSR tokejsr2
00020290 <AmiBlitz3.ab2@3380>   BSR.w calcstatic
00020296 <AmiBlitz3.ab2@3381>   MOVE.w D4,numstatic
0002029C <AmiBlitz3.ab2@3382>   MOVE.l D3,staticdata
000202A0 <AmiBlitz3.ab2@3383>    BSR.w calcmaxs
000202A6 <AmiBlitz3.ab2@3385>   TST.l tokeslist
000202AA <AmiBlitz3.ab2@3386>    BEQ.b JL_0_41F8
000202B0 <AmiBlitz3.ab2@3387>   MOVE.w gotocode,D1                                       ;jmp!
000202B6 <AmiBlitz3.ab2@3388>    JSR writeword
000202C0 <AmiBlitz3.ab2@3389>   MOVE.l destpointer,endjmpat
000202C4 <AmiBlitz3.ab2@3390>    BSR.w addoff
000202CA <AmiBlitz3.ab2@3391>    JSR writelong                                           
000202CE <AmiBlitz3.ab2@3393>    BSR.w JL_0_6C76                                         ;has to be done before finits!
000202D4 <AmiBlitz3.ab2@3397>   TST.w dontwrite
000202D8 <AmiBlitz3.ab2@3398>    BNE.b JL_0_41F8
000202DC <AmiBlitz3.ab2@3399>   MOVEA.l endjmpat(PC),A4
000202E2 <AmiBlitz3.ab2@3400>   MOVE.l destpointer,(A4)
000202E8 <AmiBlitz3.ab2@3403>   TST.b returncode
000202EC <AmiBlitz3.ab2@3404>   BEQ 'l2
000202F0 <AmiBlitz3.ab2@3405>   MOVE.w #$2e80,d1
000202F6 <AmiBlitz3.ab2@3406>   JSR writeword
000202FC <AmiBlitz3.ab2@3409>   JSR JL_0_B98A
00020302 <AmiBlitz3.ab2@3410>   TST.b returncode
00020306 <AmiBlitz3.ab2@3411>   BEQ 'l3
0002030A <AmiBlitz3.ab2@3412>   MOVE.w #$4e75,d1
00020310 <AmiBlitz3.ab2@3413>   JSR writeword
00020314 <AmiBlitz3.ab2@3414> BRA 'l1
0002031A <AmiBlitz3.ab2@3417>   MOVE.l #$70004E75,D1
00020320 <AmiBlitz3.ab2@3418>   JSR writelong                                            ;write moveq #0,d0:rts
00020326 <AmiBlitz3.ab2@3421>   JSR JL_0_B73E
0002032A <AmiBlitz3.ab2@3422>   BSR.w asmfixer
0002032E <AmiBlitz3.ab2@3423>   BSR.w close_compilewin
00020332 <AmiBlitz3.ab2@3424> BRA.w call_setpointernormal
00020338 <AmiBlitz3.ab2@3428> JMP do_runerrson
0002033A <AmiBlitz3.ab2@3432> eopcode:    Dc.b $70,$03                                   ;MOVEQ #$03,D0
0002033C <AmiBlitz3.ab2@3433>             Dc.b $4E,$40                                   ;TRAP  #00
00020340 <AmiBlitz3.ab2@3435> endjmpat:   Ds.l 1
00020346 <AmiBlitz3.ab2@3439>   MOVEA.l newtype_string,A2
0002034C <AmiBlitz3.ab2@3440>   MOVE.l #MaxByte,D0                                       ;move.l #$ff,d0 org source
00020350 <AmiBlitz3.ab2@3443>     CMPA.w #$0,A2
00020354 <AmiBlitz3.ab2@3444>      BEQ.w pointchk_done
00020358 <AmiBlitz3.ab2@3445>     CMP.l $4(A2),D0
0002035C <AmiBlitz3.ab2@3446>      BNE.w pointchk_next
00020364 <AmiBlitz3.ab2@3447>     MOVE.w $8(A2),linenumat+2                              ;type not found  ;move 8(a2),linenumat org source
00020368 <AmiBlitz3.ab2@3448> BRA.w notypeerr
0002036A <AmiBlitz3.ab2@3451>     MOVEA.l (A2),A2
0002036E <AmiBlitz3.ab2@3452> BRA.w pointchk_loop
00020370 <AmiBlitz3.ab2@3455> RTS
00020376 <AmiBlitz3.ab2@3459>   LEA labelbase,A2
00020378 <AmiBlitz3.ab2@3463>   MOVE.l (A2),D0                                           ;testlabels
0002037C <AmiBlitz3.ab2@3464>    BEQ.w errchx2_done
0002037E <AmiBlitz3.ab2@3465>   MOVEA.l D0,A2
00020382 <AmiBlitz3.ab2@3466>   MOVE.l $4(A2),D0
00020386 <AmiBlitz3.ab2@3467>   BTST #$0,D0
0002038A <AmiBlitz3.ab2@3468>    BNE.w errchx2_loop
0002038E <AmiBlitz3.ab2@3469>   MOVE.l $8(A2),D0
00020392 <AmiBlitz3.ab2@3470>    BNE.w errchx2_loop
0002039A <AmiBlitz3.ab2@3471>   MOVE.w $10(A2),linenumat+2
0002039C <AmiBlitz3.ab2@3472>   MOVEQ #0,d0
000203A0 <AmiBlitz3.ab2@3473>   MOVE.b $12(a2),d0
000203A8 <AmiBlitz3.ab2@3474>   MOVE.w 0(a2,d0),linenumat
000203AE <AmiBlitz3.ab2@3475> JMP nolaberr                                               ;label not found
000203B4 <AmiBlitz3.ab2@3478>   MOVE.l concomsp,D0
000203BA <AmiBlitz3.ab2@3479>   CMP.l #concomstack,D0
000203BE <AmiBlitz3.ab2@3480>    BNE.w chxerr4
000203C4 <AmiBlitz3.ab2@3481>   MOVE.w connest,D1
000203C8 <AmiBlitz3.ab2@3482>    BNE.w chxerr4
000203CA <AmiBlitz3.ab2@3485>   MOVE.l D1,-(A7)
000203D0 <AmiBlitz3.ab2@3486>   MOVE.l firstsel,D1
000203D4 <AmiBlitz3.ab2@3487>    BNE.w errchx_err1
000203DA <AmiBlitz3.ab2@3488>   MOVE.l firstrep,D1
000203DE <AmiBlitz3.ab2@3489>    BNE.w errchx_err2
000203E4 <AmiBlitz3.ab2@3490>   MOVE.w intstring,D1
000203E8 <AmiBlitz3.ab2@3491>    BNE.w errchx_err3
000203EC <AmiBlitz3.ab2@3492>   MOVE.l 4(a7),d1
000203F2 <AmiBlitz3.ab2@3493>   MOVE.w proceduremode,D1
000203F6 <AmiBlitz3.ab2@3494>    BNE.w errchx_err6
000203FC <AmiBlitz3.ab2@3495>   MOVE.l firstiff,d1
00020400 <AmiBlitz3.ab2@3496>    BNE errchx_err5
00020406 <AmiBlitz3.ab2@3497>   MOVE.l firstfor,D1
0002040A <AmiBlitz3.ab2@3498>    BNE.w errchx_err7
0002040C <AmiBlitz3.ab2@3499>   MOVE.l (A7)+,D1
0002040E <AmiBlitz3.ab2@3500> RTS
00020418 <AmiBlitz3.ab2@3504>   MOVE.l sellineat,linenumat
0002041E <AmiBlitz3.ab2@3505> JMP selerrz
00020428 <AmiBlitz3.ab2@3508>   MOVE.l replineat,linenumat
0002042E <AmiBlitz3.ab2@3509> JMP unterr3
00020438 <AmiBlitz3.ab2@3512>   MOVE.l intlineat,linenumat
0002043E <AmiBlitz3.ab2@3513> JMP interr2
00020448 <AmiBlitz3.ab2@3516>   MOVE.l iflineat,linenumat
0002044E <AmiBlitz3.ab2@3517> JMP noenderr
00020458 <AmiBlitz3.ab2@3520>   MOVE.l prolineat,linenumat
0002045E <AmiBlitz3.ab2@3521> JMP nopenderr
00020468 <AmiBlitz3.ab2@3524>   MOVE.l forlineat,linenumat
0002046E <AmiBlitz3.ab2@3525> JMP nonexterr
00020478 <AmiBlitz3.ab2@3528>   MOVE.l ciflineat,linenumat
0002047E <AmiBlitz3.ab2@3529> JMP nocenderr
00020488 <AmiBlitz3.ab2@3533>   MOVE.l data1,maxsat
0002048A <AmiBlitz3.ab2@3534>   MOVEQ.l #$00,D4
00020490 <AmiBlitz3.ab2@3535>   MOVEA.l libpointer,A2
00020494 <AmiBlitz3.ab2@3538>     CMPA.w #$0,A2
00020498 <AmiBlitz3.ab2@3539>      BEQ.w calcmaxs_done
0002049C <AmiBlitz3.ab2@3540>     TST.w $C(A2)
000204A0 <AmiBlitz3.ab2@3541>      BPL.w calcmaxs_next
000204A4 <AmiBlitz3.ab2@3542>     MOVE.l $12(A2),D0
000204A8 <AmiBlitz3.ab2@3543>     TST.w -$2(A2,D0.L)
000204AC <AmiBlitz3.ab2@3544>      BEQ.w calcmaxs_next
000204AE <AmiBlitz3.ab2@3545>     ADDQ.w #1,D4
000204B2 <AmiBlitz3.ab2@3546>     MOVE.w -$6(A2,D0.L),D1
000204B6 <AmiBlitz3.ab2@3547>     BSR.w pokedata1
000204B8 <AmiBlitz3.ab2@3548>     MOVEQ.l #$01,D1
000204BC <AmiBlitz3.ab2@3549>     MOVE.w -$2(A2,D0.L),D2
000204BE <AmiBlitz3.ab2@3550>     LSL.w D2,D1
000204C2 <AmiBlitz3.ab2@3551>     MULU -$4(A2,D0.L),D1                                   ;write objectspacesize
000204C6 <AmiBlitz3.ab2@3552>     BSR.w writedatalong
000204C8 <AmiBlitz3.ab2@3555>     MOVEA.l (A2),A2
000204CC <AmiBlitz3.ab2@3556> BRA.w calcmaxs_loop
000204D2 <AmiBlitz3.ab2@3559>   MOVE.w D4,maxsused
000204D6 <AmiBlitz3.ab2@3560>    BEQ.w calcmaxs_done2
000204DA <AmiBlitz3.ab2@3561>   MOVE.w #$FFFA,D1                                         ;;use memlib
000204DE <AmiBlitz3.ab2@3562> BRA.w uselib
000204E0 <AmiBlitz3.ab2@3565> RTS
000204E6 <AmiBlitz3.ab2@3569>    MOVE.l a7,stackaddr
000204EA <AmiBlitz3.ab2@3570>    BSR.w compile_term
000204EE <AmiBlitz3.ab2@3571>    BSR.w reget
000204F2 <AmiBlitz3.ab2@3572>    BNE.w illeolerr
000204F8 <AmiBlitz3.ab2@3573>    TST.w dontwrite
000204FC <AmiBlitz3.ab2@3574>    BNE 'l1
00020502 <AmiBlitz3.ab2@3575>    TST.l stacktrack
00020506 <AmiBlitz3.ab2@3576>    BNE errormsg_stack
0002050A <AmiBlitz3.ab2@3579>    CMP.w #-$7FDE,D0
0002050E <AmiBlitz3.ab2@3580>    BNE.w compile_line_notelse
00020514 <AmiBlitz3.ab2@3581>    JSR do_else2
00020518 <AmiBlitz3.ab2@3582> BRA.w compile_line
0002051A <AmiBlitz3.ab2@3585>   TST.w D0
0002051E <AmiBlitz3.ab2@3586>   BNE.w compile_line
00020524 <AmiBlitz3.ab2@3591>   MOVE.l firstiff,D0
00020528 <AmiBlitz3.ab2@3592>    BEQ.w compile_line_done
0002052A <AmiBlitz3.ab2@3593>   MOVEA.l D0,A0
0002052E <AmiBlitz3.ab2@3594>   MOVE.w $C(A0),D1
00020532 <AmiBlitz3.ab2@3595>    BPL.w compile_line_done
00020536 <AmiBlitz3.ab2@3599>   BCLR #$F,D1
0002053C <AmiBlitz3.ab2@3600>    JSR AJL_0_D7B8
00020542 <AmiBlitz3.ab2@3601>    JSR AJL_0_D81C
00020546 <AmiBlitz3.ab2@3602> BRA.w compile_line_unthen
00020548 <AmiBlitz3.ab2@3605> RTS
0002054E <AmiBlitz3.ab2@3609>   LEA lastgloballabel,A0
00020550 <AmiBlitz3.ab2@3610>   TST.b (A0)
00020554 <AmiBlitz3.ab2@3611>    BEQ.w nolocerr
0002055A <AmiBlitz3.ab2@3612>   LEA ptr_parameterstore,A1
0002055C <AmiBlitz3.ab2@3613>   MOVEQ.l #$00,D2
0002055E <AmiBlitz3.ab2@3616>   ADDQ.w #1,D2
00020560 <AmiBlitz3.ab2@3617>   MOVE.b (A0)+,(A1)+
00020564 <AmiBlitz3.ab2@3618>    BNE.w createlab_loop
0002056A <AmiBlitz3.ab2@3619>   MOVE.b #$27,-$1(A1)
0002056C <AmiBlitz3.ab2@3620>   MOVE.w D2,-(A7)
00020572 <AmiBlitz3.ab2@3621>    JSR makename4
00020574 <AmiBlitz3.ab2@3622>   CMP.w (A7)+,D2
00020578 <AmiBlitz3.ab2@3623>    BEQ.w syntaxerr
0002057A <AmiBlitz3.ab2@3624>    TST.w d0
0002057E <AmiBlitz3.ab2@3625>    BPL createlab_done
00020586 <AmiBlitz3.ab2@3626>    MOVE.w #$3a,lastchar
00020588 <AmiBlitz3.ab2@3627>    SUBQ.l #2,a5
0002058A <AmiBlitz3.ab2@3630> RTS
00020594 <AmiBlitz3.ab2@3634>   MOVE.l #forthstack,forthsp
0002059E <AmiBlitz3.ab2@3635>   MOVE.l #precstack,precsp
000205A0 <AmiBlitz3.ab2@3636> RTS
000205A2 <AmiBlitz3.ab2@3643>   MOVEQ.l #$00,D4
000205CC <AmiBlitz3.ab2@3646>   !basic
0002060E <AmiBlitz3.ab2@3647> 
0002061E <AmiBlitz3.ab2@3649>   If (c_abort = 1)           ; check if set
00020620 <AmiBlitz3.ab2@3650>     MOVEQ.l #-$01,d4
00020626 <AmiBlitz3.ab2@3651>     MOVE.w D4,stopit
00020644 <AmiBlitz3.ab2@3652>     !asm
00020648 <AmiBlitz3.ab2@3653>     BRA chkrealstop__skip
00020666 <AmiBlitz3.ab2@3655>   !asm
00020668 <AmiBlitz3.ab2@3656>   MOVEQ.l #$00,D6
0002066A <AmiBlitz3.ab2@3657>   MOVEQ.l #$00,D7                                          ; clr Z-Flag for beq.b in chkstop_chk
0002066C <AmiBlitz3.ab2@3661> RTS
00020670 <AmiBlitz3.ab2@3665>   MOVE.w stopit(PC),D0
00020674 <AmiBlitz3.ab2@3666>   BEQ chkstop__chk
0002067A <AmiBlitz3.ab2@3667>   SUBQ.w #1,stopit
0002067C <AmiBlitz3.ab2@3671> RTS
00020684 <AmiBlitz3.ab2@3674>   MOVE.w #2000,stopit
00020688 <AmiBlitz3.ab2@3675>   BSR.w chkrealstop
0002068C <AmiBlitz3.ab2@3676>   BEQ.b chkstop__rts
00020690 <AmiBlitz3.ab2@3678>   BSR.w close_compilewin
00020694 <AmiBlitz3.ab2@3679>   BSR.w call_setpointernormal
0002069A <AmiBlitz3.ab2@3681>   MOVEA.l errstack,A7
000206A0 <AmiBlitz3.ab2@3682>   MOVEA.l errcont,A0
000206A8 <AmiBlitz3.ab2@3683>   MOVE.w #-1,anyerrs
000206AA <AmiBlitz3.ab2@3684> JMP (A0)
000206AE <AmiBlitz3.ab2@3687> d_pc:           Ds.l 1
000206B2 <AmiBlitz3.ab2@3688> d_bigpc:        Ds.l 1
000206B4 <AmiBlitz3.ab2@3689> d_nomemleft:    Ds.w 1
000206B8 <AmiBlitz3.ab2@3690> cont_pc:        Ds.l 1
000206BC <AmiBlitz3.ab2@3691> cont_pc2:       Ds.l 1
000206C0 <AmiBlitz3.ab2@3692> lastcontlink:   Ds.l 1
000206C4 <AmiBlitz3.ab2@3696>   ORI.w #$4E40,D1
000206C8 <AmiBlitz3.ab2@3697> BRA.w JUMP_writeword
000206CE <AmiBlitz3.ab2@3701>   TST.b debugmode
000206D2 <AmiBlitz3.ab2@3702>   BEQ.w debugstuff__rts
000206D8 <AmiBlitz3.ab2@3709>   TST.w dirmode                                            ;or while in direct mode...
000206DC <AmiBlitz3.ab2@3710>    BNE debugstuff__rts
000206E6 <AmiBlitz3.ab2@3711>   MOVE.l destpointer,d_pc
000206F0 <AmiBlitz3.ab2@3712>   MOVE.l bigpc,d_bigpc
000206FA <AmiBlitz3.ab2@3713>   MOVE.w dontwrite,d_nomemleft
000206FE <AmiBlitz3.ab2@3714>   MOVEM.l D0-D1,-(A7)
00020700 <AmiBlitz3.ab2@3715>   MOVEQ.l #$01,D1
00020704 <AmiBlitz3.ab2@3716>    BSR.w writetrap                                         ;write the adress to sourceline
0002070A <AmiBlitz3.ab2@3720>    MOVE.l destpointer,D0
00020710 <AmiBlitz3.ab2@3721>   MOVE.l cont_pc,D1
00020716 <AmiBlitz3.ab2@3722>   MOVE.l D0,cont_pc
0002071C <AmiBlitz3.ab2@3723>   MOVE.l D1,cont_pc2
00020720 <AmiBlitz3.ab2@3724>    BEQ.b debugstuff__skip
00020726 <AmiBlitz3.ab2@3725>   TST.w dontwrite
0002072A <AmiBlitz3.ab2@3726>    BNE.b debugstuff__skip
0002072C <AmiBlitz3.ab2@3727>   MOVEA.l D1,A4
0002072E <AmiBlitz3.ab2@3728>   SUB.l A4,D0
00020732 <AmiBlitz3.ab2@3729>   MOVE.w D0,$6(A4)
00020738 <AmiBlitz3.ab2@3730>   MOVE.l A4,lastcontlink
0002073E <AmiBlitz3.ab2@3733>   TST.w ininclude
00020744 <AmiBlitz3.ab2@3735>   TST.w makeexec
00020748 <AmiBlitz3.ab2@3736>   BEQ 'l1
0002074E <AmiBlitz3.ab2@3737>   TST.w exdebug
00020752 <AmiBlitz3.ab2@3738>   BEQ 'noinc
00020756 <AmiBlitz3.ab2@3741>   MOVEM.l a0-a1/d2/d3,-(a7)                                ;write source for includes
0002075C <AmiBlitz3.ab2@3742>   MOVE.l data1,d1
00020762 <AmiBlitz3.ab2@3743>   TST.b firsttime
00020766 <AmiBlitz3.ab2@3744>   BNE 'nofirst
0002076E <AmiBlitz3.ab2@3745>   MOVE.b #1,firsttime
00020774 <AmiBlitz3.ab2@3746>   MOVE.l #"DuCk",d1                                        ; to found from debugger the code start
0002077A <AmiBlitz3.ab2@3747>   JSR writedatalong
00020780 <AmiBlitz3.ab2@3748>   MOVE.l #"AmiB",d1
00020786 <AmiBlitz3.ab2@3749>   JSR writedatalong
0002078C <AmiBlitz3.ab2@3750>   MOVE.l destbufferstart,d1
00020792 <AmiBlitz3.ab2@3751>   JSR writedatalong
00020798 <AmiBlitz3.ab2@3752>   TST.w dontwrite
0002079C <AmiBlitz3.ab2@3753>   BNE 'nohunk
000207A2 <AmiBlitz3.ab2@3754>   MOVE.l data1,d1
000207A4 <AmiBlitz3.ab2@3755>   SUBQ.l #4,d1
000207AA <AmiBlitz3.ab2@3756>   SUB.l destbufferstart,d1
000207AC <AmiBlitz3.ab2@3757>   MOVE.l d1,d2
000207B2 <AmiBlitz3.ab2@3758>   JSR addhunkoffset
000207B8 <AmiBlitz3.ab2@3761>   MOVE.l destpointer,d2
000207BE <AmiBlitz3.ab2@3762>   MOVE.l data1,d1
000207C4 <AmiBlitz3.ab2@3765>   MOVE.l destpointer,d2
000207C6 <AmiBlitz3.ab2@3766>   MOVE.l d1,d3
000207CC <AmiBlitz3.ab2@3767>   SUB.l destbufferstart,d1
000207D2 <AmiBlitz3.ab2@3768>   OR.l #$80000000,d1
000207D8 <AmiBlitz3.ab2@3769>   JSR writelong
000207DE <AmiBlitz3.ab2@3770>   TST.w inmacro
000207E2 <AmiBlitz3.ab2@3771>   BEQ 'sc1
000207E8 <AmiBlitz3.ab2@3772>   MOVE.l myline,a0
000207EC <AmiBlitz3.ab2@3774> BRA 'inc2
000207F2 <AmiBlitz3.ab2@3776>  'sc1  TST.w ininclude
000207F6 <AmiBlitz3.ab2@3777>   BEQ 'inc
000207FC <AmiBlitz3.ab2@3778>   MOVE.l includesourceline,a0
00020800 <AmiBlitz3.ab2@3779> BRA 'inc2
00020806 <AmiBlitz3.ab2@3782>   MOVE.l sourceline,a0
0002080A <AmiBlitz3.ab2@3783>   LEA 9(a0),a0
0002080C <AmiBlitz3.ab2@3786>   MOVE.l d1,d2
0002080E <AmiBlitz3.ab2@3787>   MOVE.l A5,D1
00020810 <AmiBlitz3.ab2@3788>   SUB.l a0,D1
00020816 <AmiBlitz3.ab2@3789>   ADD.l #9,d1
0002081A <AmiBlitz3.ab2@3790>   BSR.w JUMP_writeword
00020820 <AmiBlitz3.ab2@3791>   CMP.l #9,d1
00020824 <AmiBlitz3.ab2@3792>   BEQ 'pos1
0002082A <AmiBlitz3.ab2@3793>   TST.w dontwrite
0002082E <AmiBlitz3.ab2@3794>   BNE 'nopad
00020834 <AmiBlitz3.ab2@3795>   MOVE.l lastsourceline,d1
00020838 <AmiBlitz3.ab2@3796>   MOVE.l d1,-6(a4)
0002083C <AmiBlitz3.ab2@3797> BRA 'nopad
00020842 <AmiBlitz3.ab2@3800>   MOVE.l d2,lastsourceline
0002084C <AmiBlitz3.ab2@3801>    MOVE.l destpointer,lastdestpointer
0002084E <AmiBlitz3.ab2@3802>    MOVEQ #0,d1
00020854 <AmiBlitz3.ab2@3803>   MOVE.l data1,d2
0002085A <AmiBlitz3.ab2@3804>   SUB.l destbufferstart,d2
00020860 <AmiBlitz3.ab2@3805>   JSR writedatalong
00020866 <AmiBlitz3.ab2@3806>   TST.w dontwrite
0002086A <AmiBlitz3.ab2@3807>   BNE 'no2
00020870 <AmiBlitz3.ab2@3808>   JSR addhunkoffset
00020876 <AmiBlitz3.ab2@3811>   MOVE.l data1,d2
0002087C <AmiBlitz3.ab2@3812>   SUB.l destbufferstart,d2
00020882 <AmiBlitz3.ab2@3813>   JSR writedatalong
00020888 <AmiBlitz3.ab2@3814>   TST.w dontwrite
0002088C <AmiBlitz3.ab2@3815>   BNE 'no
00020892 <AmiBlitz3.ab2@3816>   JSR addhunkoffset
00020898 <AmiBlitz3.ab2@3817>   MOVE.l lastwritedat,a1
0002089E <AmiBlitz3.ab2@3818>   CMP.l #0,a1
000208A2 <AmiBlitz3.ab2@3819>   BEQ 'no
000208A4 <AmiBlitz3.ab2@3820>   MOVE.l d3,(a1)
000208AC <AmiBlitz3.ab2@3821>   MOVE.l prevwritedat,4(a1)
000208B6 <AmiBlitz3.ab2@3822>   MOVE.l lastwritedat,prevwritedat
000208BC <AmiBlitz3.ab2@3825>   MOVE.l d3,lastwritedat
000208BE <AmiBlitz3.ab2@3826>   MOVEQ #4,d1
000208C2 <AmiBlitz3.ab2@3827>   BSR pokedata1b
000208C4 <AmiBlitz3.ab2@3830>   MOVE.b (a0)+,d1
000208C8 <AmiBlitz3.ab2@3831>   BEQ 'done
000208CC <AmiBlitz3.ab2@3832>   BSR pokedata1b
000208D0 <AmiBlitz3.ab2@3833> BRA 'loop
000208D2 <AmiBlitz3.ab2@3836>   MOVEQ #0,d1
000208D6 <AmiBlitz3.ab2@3837>   BSR pokedata1b
000208DC <AmiBlitz3.ab2@3838>   MOVE.l data1,d1
000208E0 <AmiBlitz3.ab2@3839>   BTST #0,d1
000208E4 <AmiBlitz3.ab2@3840>   BEQ 'nopad
000208E6 <AmiBlitz3.ab2@3841>   MOVEQ #0,d1
000208EA <AmiBlitz3.ab2@3842>   BSR pokedata1b
000208EE <AmiBlitz3.ab2@3845>   MOVEM.l (a7)+,a0-a1/d2/d3
000208F2 <AmiBlitz3.ab2@3846> BRA 'noinc2
000208F8 <AmiBlitz3.ab2@3849>   MOVE.l sourceline,D1
000208FE <AmiBlitz3.ab2@3851>   JSR writelong
00020900 <AmiBlitz3.ab2@3852>   MOVE.l A5,D1
00020906 <AmiBlitz3.ab2@3853>   SUB.l sourceline,D1
0002090C <AmiBlitz3.ab2@3855>   JSR writeword
0002090E <AmiBlitz3.ab2@3858>   MOVEQ.l #$00,D1
00020914 <AmiBlitz3.ab2@3859>   JSR writeword                                            ; was: BSR.w writeword
00020918 <AmiBlitz3.ab2@3860>   MOVEM.l (A7)+,D0-D1
0002091A <AmiBlitz3.ab2@3863> RTS
00020920 <AmiBlitz3.ab2@3867>   TST.b debugmode                                          ;extern debug
00020924 <AmiBlitz3.ab2@3868>    BEQ.b undodebug__rts
0002092A <AmiBlitz3.ab2@3869>   TST.b dirmode
0002092E <AmiBlitz3.ab2@3870>   BNE undodebug__rts
00020938 <AmiBlitz3.ab2@3875>   MOVE.w d_nomemleft,dontwrite
00020942 <AmiBlitz3.ab2@3876>   MOVE.l d_bigpc,bigpc
0002094C <AmiBlitz3.ab2@3877>   MOVE.l d_pc,destpointer
00020956 <AmiBlitz3.ab2@3878>   MOVE.l cont_pc2,cont_pc
00020958 <AmiBlitz3.ab2@3881> RTS
00020962 <AmiBlitz3.ab2@3885>   MOVE.l #forthstack,forthsp
0002096C <AmiBlitz3.ab2@3886>   MOVE.l #precstack,precsp
00020972 <AmiBlitz3.ab2@3887>   CLR.w regnum
00020978 <AmiBlitz3.ab2@3888>   CLR.w nonew
0002097E <AmiBlitz3.ab2@3889>   CLR.w sbasegot
00020988 <AmiBlitz3.ab2@3890>   MOVE.w varcodelen,oldvcodelen
0002098E <AmiBlitz3.ab2@3891>   CLR.w varcodelen
00020996 <AmiBlitz3.ab2@3892>   MOVE.w #-1,lasta6
00020998 <AmiBlitz3.ab2@3893> RTS
0002099E <AmiBlitz3.ab2@3897>   TST.w linemode
000209A2 <AmiBlitz3.ab2@3898>   BMI.b smode__skip
000209A6 <AmiBlitz3.ab2@3899>   BSR.w undodebug
000209AC <AmiBlitz3.ab2@3900>   MOVE.w linemode,D1
000209AE <AmiBlitz3.ab2@3901>   ADDQ.w #4,A7
000209B0 <AmiBlitz3.ab2@3902>   LSL.w #2,D1
000209B6 <AmiBlitz3.ab2@3903>   LEA modetable,A0
000209BA <AmiBlitz3.ab2@3904>   MOVEA.l $0(A0,D1.W),A0
000209BE <AmiBlitz3.ab2@3905>   BSR.w reget
000209C0 <AmiBlitz3.ab2@3908> JMP (A0)                                                   ;jumptokenroutine
000209C2 <AmiBlitz3.ab2@3911> RTS
000209CA <AmiBlitz3.ab2@3916>   MOVE.w #0,leaa0a0+2
000209D0 <AmiBlitz3.ab2@3917>   CLR.b nowdeclare
000209D6 <AmiBlitz3.ab2@3918>   CLR.b notypecheck
000209DC <AmiBlitz3.ab2@3919>   CLR.l lasttoken
000209E2 <AmiBlitz3.ab2@3920>   CLR.b doimmediate
000209E8 <AmiBlitz3.ab2@3921>   CLR.w vartype
000209EE <AmiBlitz3.ab2@3922>   CLR.w regnumfunc
000209F4 <AmiBlitz3.ab2@3923>   CLR.b optistring
000209FA <AmiBlitz3.ab2@3924>   CLR.b iniffcommand
00020A00 <AmiBlitz3.ab2@3925>   CLR.w instringon  ; new
00020A06 <AmiBlitz3.ab2@3926>   CLR.b funccall
00020A0C <AmiBlitz3.ab2@3927>   CLR.l currentfunccall
00020A12 <AmiBlitz3.ab2@3928>   CLR.l leftsidetype
00020A18 <AmiBlitz3.ab2@3929>   CLR.l rightsidetype
00020A1E <AmiBlitz3.ab2@3930>   CLR.b peekaddrsize
00020A24 <AmiBlitz3.ab2@3931>   CLR.b blitzparloop
00020A2A <AmiBlitz3.ab2@3932>   CLR.b funcparloop
00020A30 <AmiBlitz3.ab2@3933>   TST.b debugmode
00020A34 <AmiBlitz3.ab2@3934>    BEQ 'fpu
00020A3E <AmiBlitz3.ab2@3940>   MOVE.b fpu,iee
00020A42 <AmiBlitz3.ab2@3941>   MOVE.w stopit(PC),D0
00020A46 <AmiBlitz3.ab2@3942>   BNE chkstop_chkb
00020A4A <AmiBlitz3.ab2@3943>   BSR.w chkstop                                          ; message here
00020A50 <AmiBlitz3.ab2@3946>   SUBQ.w #1,stopit
00020A54 <AmiBlitz3.ab2@3949>   BSR.w findmacro                                          ;macro
00020A5A <AmiBlitz3.ab2@4003>   TST.b debugmode
00020A5E <AmiBlitz3.ab2@4004>    BEQ.s 'l10
00020A64 <AmiBlitz3.ab2@4005>   TST.b exdebug
00020A68 <AmiBlitz3.ab2@4006>   BEQ 'l10a
00020A6A <AmiBlitz3.ab2@4007>   MOVE.w (a5),d0
00020A6E <AmiBlitz3.ab2@4008>   CMP.w #$8025,d0
00020A72 <AmiBlitz3.ab2@4009>    BEQ 'l10
00020A76 <AmiBlitz3.ab2@4012>   BSR.w debugstuffa                                         ;insert runtimecode debugcode
00020A7A <AmiBlitz3.ab2@4016>   BSR.w get1bytemain                                       ;gettokenmain
00020A7E <AmiBlitz3.ab2@4017>    BEQ.w undodebug
00020A82 <AmiBlitz3.ab2@4018>   CMP.w #$002b,d0                                            ;check for + cast sign
00020A86 <AmiBlitz3.ab2@4019>     BNE 'lb2
00020A8A <AmiBlitz3.ab2@4020>     BSR.w get1bytemain
00020A92 <AmiBlitz3.ab2@4021>     MOVE.b #1,notypecheck
00020A9C <AmiBlitz3.ab2@4029>   MOVE.l #forthstack,forthsp
00020AA6 <AmiBlitz3.ab2@4030>   MOVE.l #precstack,precsp
00020AAC <AmiBlitz3.ab2@4031>   CLR.w regnum
00020AB2 <AmiBlitz3.ab2@4032>   CLR.w nonew
00020AB8 <AmiBlitz3.ab2@4033>   CLR.w sbasegot
00020AC2 <AmiBlitz3.ab2@4034>   MOVE.w varcodelen,oldvcodelen
00020AC8 <AmiBlitz3.ab2@4036>   CLR.w varcodelen
00020AD0 <AmiBlitz3.ab2@4037>   MOVE.w #$FFFF,lasta6
00020AD4 <AmiBlitz3.ab2@4039>   BSR.w smode
00020AD6 <AmiBlitz3.ab2@4040>   TST.w D0
00020ADA <AmiBlitz3.ab2@4041>   BMI.w get_tokencode
00020ADE <AmiBlitz3.ab2@4042>   CMP.w #$2E,D0
00020AE2 <AmiBlitz3.ab2@4043>    BEQ.w JL_0_4644                                         ;shortlist
00020AE6 <AmiBlitz3.ab2@4044>   CMP.w #"#",D0
00020AEA <AmiBlitz3.ab2@4045>    BEQ.w JL_0_4718                                         ;constant found
00020AEE <AmiBlitz3.ab2@4046>   CMP.w #$27,D0
00020AF2 <AmiBlitz3.ab2@4047>    BEQ.w JL_0_4638                                         ;local label
00020AF8 <AmiBlitz3.ab2@4048>   MOVE.l A5,letstart
00020AFE <AmiBlitz3.ab2@4049>   JSR getparameter
00020B02 <AmiBlitz3.ab2@4050>   BSR.w reget
00020B06 <AmiBlitz3.ab2@4051>    BEQ.w JL_0_4658                                         ;label found
00020B0A <AmiBlitz3.ab2@4052>   CMP.w #$7B,D0
00020B0E <AmiBlitz3.ab2@4053>    BEQ.w JL_0_475C
00020B10 <AmiBlitz3.ab2@4054>   TST.w d0
00020B14 <AmiBlitz3.ab2@4055>    BPL 'll1
00020B1A <AmiBlitz3.ab2@4056>   TST.b newsyntax
00020B1E <AmiBlitz3.ab2@4057>    BEQ 'll1
00020B24 <AmiBlitz3.ab2@4058>   LEA allowtab,a0
00020B26 <AmiBlitz3.ab2@4059>   MOVEQ #0,d1
00020B28 <AmiBlitz3.ab2@4060>   MOVE.b d0,d1
00020B2C <AmiBlitz3.ab2@4061>   TST.b 0(a0,d1.w)
00020B30 <AmiBlitz3.ab2@4062>    BNE 'll1
00020B32 <AmiBlitz3.ab2@4063>   SUBQ.l #2,a5
00020B3A <AmiBlitz3.ab2@4064>   MOVE.w #":",lastchar                                     ;no doublepoint
00020B3E <AmiBlitz3.ab2@4065> BRA JL_0_4658
00020B46 <AmiBlitz3.ab2@4068>   CMP.l #"equ ",-1(a5)
00020B4A <AmiBlitz3.ab2@4069>    BEQ 'll4
00020B52 <AmiBlitz3.ab2@4070>   CMP.l #"EQU ",-1(a5)
00020B56 <AmiBlitz3.ab2@4071>    BNE 'll2
00020B58 <AmiBlitz3.ab2@4074>   ADDQ.l #2,a5
00020B5C <AmiBlitz3.ab2@4075>   BSR.w findlabel2
00020B60 <AmiBlitz3.ab2@4076>   BEQ.w 'lf1
00020B64 <AmiBlitz3.ab2@4077>   BSR.w addlabelhash
00020B6C <AmiBlitz3.ab2@4078>   MOVE.l #$1,$4(A2)
00020B74 <AmiBlitz3.ab2@4081>   CMPI.l #$1,$4(A2)
00020B78 <AmiBlitz3.ab2@4082>    BNE.w illconerr
00020B7C <AmiBlitz3.ab2@4083>   BSR get1bytemain
00020B7E <AmiBlitz3.ab2@4084>   MOVE.l A2,-(A7)
00020B80 <AmiBlitz3.ab2@4095>   SUBQ.l #1,a5
00020B82 <AmiBlitz3.ab2@4098>   SUBQ.l #1,a5
00020B88 <AmiBlitz3.ab2@4099>   JSR AJL_0_BF6E
00020B8A <AmiBlitz3.ab2@4100>   MOVEA.l (A7)+,A2
00020B8E <AmiBlitz3.ab2@4101>   MOVE.l D3,$8(A2)
00020B90 <AmiBlitz3.ab2@4102>   RTS
00020B94 <AmiBlitz3.ab2@4103>   BSR get1bytemain
00020B9C <AmiBlitz3.ab2@4106>   CMP.l #"SET ",-1(a5)
00020BA0 <AmiBlitz3.ab2@4107>   BNE 'll3
00020BA4 <AmiBlitz3.ab2@4108> BRA 'll4
00020BAA <AmiBlitz3.ab2@4111> JMP AJL_0_DEA6
00020BAE <AmiBlitz3.ab2@4114>   CMP.w #-$7FDE,D0
00020BB2 <AmiBlitz3.ab2@4115>   BEQ.w get_tokencode
00020BB6 <AmiBlitz3.ab2@4116> BRA.w undodebug
00020BBA <AmiBlitz3.ab2@4119>   BSR.w undodebug
00020BBE <AmiBlitz3.ab2@4120>   BSR.w createlab
00020BC2 <AmiBlitz3.ab2@4121> BRA.w JL_0_466E
00020BC6 <AmiBlitz3.ab2@4124>   BSR.w get1bytemain
00020BCA <AmiBlitz3.ab2@4125>    BEQ.w JL_0_462C
00020BCE <AmiBlitz3.ab2@4126>   CMP.w #"'",D0
00020BD2 <AmiBlitz3.ab2@4127>    BEQ.w JL_0_4638
00020BD6 <AmiBlitz3.ab2@4128>    BSR.w makename2
00020BD8 <AmiBlitz3.ab2@4129>    TST.w d0
00020BDC <AmiBlitz3.ab2@4130>    BPL 'll1
00020BDE <AmiBlitz3.ab2@4131>    SUBQ.l #2,a5
00020BE6 <AmiBlitz3.ab2@4132>    MOVE.w #":",lastchar
00020BEA <AmiBlitz3.ab2@4133> BRA JL_0_4658                                              ;????
00020BEE <AmiBlitz3.ab2@4137>   BSR.w undodebug
00020BF4 <AmiBlitz3.ab2@4138>   LEA ptr_parameterstore,A0
00020BFA <AmiBlitz3.ab2@4139>   LEA lastgloballabel,A1
00020BFC <AmiBlitz3.ab2@4142>   MOVE.b (A0)+,(A1)+
00020C00 <AmiBlitz3.ab2@4143>    BNE.w JL_0_4668
00020C04 <AmiBlitz3.ab2@4146>   BSR.w findlabel2
00020C08 <AmiBlitz3.ab2@4147>    BEQ.w JL_0_4698
00020C0C <AmiBlitz3.ab2@4148>    BSR.w addlabelhash
00020C10 <AmiBlitz3.ab2@4151>   CLR.l $4(A2)
00020C18 <AmiBlitz3.ab2@4152>   MOVE.l destpointer,$8(A2)
00020C20 <AmiBlitz3.ab2@4155>   MOVE.w procnum,$10(A2)
00020C22 <AmiBlitz3.ab2@4156> RTS
00020C26 <AmiBlitz3.ab2@4160>   MOVE.l $4(A2),D0
00020C2A <AmiBlitz3.ab2@4161>   BTST #$0,D0
00020C2E <AmiBlitz3.ab2@4162>    BNE.w illlaberr
00020C34 <AmiBlitz3.ab2@4163>   TST.w pass
00020C38 <AmiBlitz3.ab2@4165>   MOVE.l $8(A2),D0
00020C3C <AmiBlitz3.ab2@4166>    BNE.w duplaberr
00020C44 <AmiBlitz3.ab2@4167>   MOVE.w procnum,$10(A2)
00020C48 <AmiBlitz3.ab2@4168>   MOVEA.l $4(A2),A3
00020C4E <AmiBlitz3.ab2@4169>   MOVEA.l _execbase,A6
00020C52 <AmiBlitz3.ab2@4172>   CMPA.w #$0,A3
00020C56 <AmiBlitz3.ab2@4173>    BEQ.w JL_0_467A
00020C5A <AmiBlitz3.ab2@4174>     MOVE.l $4(A2),D1
00020C5E <AmiBlitz3.ab2@4175>     BTST #$0,D1
00020C62 <AmiBlitz3.ab2@4176>     BNE.w illlaberr
00020C66 <AmiBlitz3.ab2@4177>   MOVE.w $8(A3),D1
00020C6A <AmiBlitz3.ab2@4178>   CMP.w $10(A2),D1
00020C6E <AmiBlitz3.ab2@4179>    BEQ.w JL_0_46DC
00020C74 <AmiBlitz3.ab2@4180>    TST.b newsyntax
00020C78 <AmiBlitz3.ab2@4181>    BEQ 'l1
00020C7C <AmiBlitz3.ab2@4182> BRA.w JL_0_46DC                                            ;label context out of range fix
00020C84 <AmiBlitz3.ab2@4187>   MOVE.w $A(A3),linenumat+2                                ;move 10(a3),linenumat org source
00020C88 <AmiBlitz3.ab2@4188> BRA.w referr
00020C8E <AmiBlitz3.ab2@4191>   MOVE.w dontwrite,D1
00020C92 <AmiBlitz3.ab2@4192>    BNE.w JL_0_4706
00020C96 <AmiBlitz3.ab2@4193>   MOVEA.l $4(A3),A1
00020C9C <AmiBlitz3.ab2@4194>   BTST #$0,$7(A3)
00020CA0 <AmiBlitz3.ab2@4195>    BEQ.w JL_0_4700
00020CA2 <AmiBlitz3.ab2@4196>   SUBQ.w #1,A1
00020CA8 <AmiBlitz3.ab2@4197>   MOVE.l data2,(A1)
00020CAC <AmiBlitz3.ab2@4198> BRA.w JL_0_4706
00020CB2 <AmiBlitz3.ab2@4201>   MOVE.l destpointer,(A1)
00020CB4 <AmiBlitz3.ab2@4204>   MOVEA.l A3,A1
00020CB6 <AmiBlitz3.ab2@4205>   MOVEA.l (A3),A3
00020CBA <AmiBlitz3.ab2@4206>   MOVE.l A3,$4(A2)
00020CBC <AmiBlitz3.ab2@4207>   MOVEQ.l #$0C+2,D0
00020CC2 <AmiBlitz3.ab2@4208>   MOVE.l mempool,a0
00020CC8 <AmiBlitz3.ab2@4209>   MOVEA.l _execbase,A6
00020CCC <AmiBlitz3.ab2@4210>   JSR _FreePooled(A6)
00020CD0 <AmiBlitz3.ab2@4211> BRA.w JL_0_46BC
00020CDA <AmiBlitz3.ab2@4216>    MOVE.l #forthstack,forthsp
00020CE4 <AmiBlitz3.ab2@4217>   MOVE.l #precstack,precsp
00020CE8 <AmiBlitz3.ab2@4218>    BSR.w getparameter2
00020CEC <AmiBlitz3.ab2@4221>   BSR.w findlabel2
00020CF0 <AmiBlitz3.ab2@4222>    BEQ.w JL_0_4738
00020CF4 <AmiBlitz3.ab2@4223>    BSR.w addlabelhash
00020CFC <AmiBlitz3.ab2@4224>   MOVE.l #$1,$4(A2)
00020D00 <AmiBlitz3.ab2@4225> BRA.w JL_0_4744
00020D08 <AmiBlitz3.ab2@4228>   CMPI.l #$1,$4(A2)
00020D0C <AmiBlitz3.ab2@4229>    BNE.w illconerr
00020D10 <AmiBlitz3.ab2@4238>   CMP.w #$3D,D0
00020D14 <AmiBlitz3.ab2@4239>   BEQ.w JL_0_474E
00020D16 <AmiBlitz3.ab2@4240> RTS
00020D18 <AmiBlitz3.ab2@4244>   MOVE.l A2,-(A7)
00020D1E <AmiBlitz3.ab2@4245>   JSR AJL_0_BF6E
00020D20 <AmiBlitz3.ab2@4246>   MOVEA.l (A7)+,A2
00020D24 <AmiBlitz3.ab2@4247>   MOVE.l D3,$8(A2)                                         ;store constant
00020D2C <AmiBlitz3.ab2@4248>   CMP.w #$0a,lastchar
00020D30 <AmiBlitz3.ab2@4249>   BNE 'l1
00020D38 <AmiBlitz3.ab2@4250>   MOVE.w #":",lastchar                                     ;hack to read wizard include files
00020D3A <AmiBlitz3.ab2@4253> RTS
00020D3E <AmiBlitz3.ab2@4256>   BSR.w findproc                                           ;write statement call
00020D42 <AmiBlitz3.ab2@4257>   BEQ _state
00020D48 <AmiBlitz3.ab2@4258>   TST.l unusedfunc
00020D4C <AmiBlitz3.ab2@4259>   BEQ noprocerr
00020D52 <AmiBlitz3.ab2@4261>   JSR gotoendsource
00020D56 <AmiBlitz3.ab2@4264>   TST.b $5(A2)
00020D5C <AmiBlitz3.ab2@4266>   MOVE.l a2,currentfunccall
00020D64 <AmiBlitz3.ab2@4267>   MOVE.b #1,funccall
00020D6A <AmiBlitz3.ab2@4268>   MOVE.b #1,isfunc(a2)
00020D6E <AmiBlitz3.ab2@4269>   MOVE.l $E(A2),-(A7)
00020D70 <AmiBlitz3.ab2@4270>   MOVEQ.l #$00,D0
00020D74 <AmiBlitz3.ab2@4271>   MOVE.b $4(A2),D0
00020D7A <AmiBlitz3.ab2@4272>   MOVE.l d0,parnumtemp
00020D7E <AmiBlitz3.ab2@4273>   BEQ.w JL_0_4786
00020D82 <AmiBlitz3.ab2@4274>   TST.b $20(a2)                                            ;increase if morepar
00020D86 <AmiBlitz3.ab2@4275>   BNE 'no0par
00020D88 <AmiBlitz3.ab2@4276>   MOVE.l a5,a4
00020D8C <AmiBlitz3.ab2@4279>   CMP.b #$20,(a4)+
00020D90 <AmiBlitz3.ab2@4280>   BEQ 'l1
00020D96 <AmiBlitz3.ab2@4281>   CMP.b #"}",-1(a4)
00020D9A <AmiBlitz3.ab2@4282>   BNE  'no0par                                             ;statementcall pars
00020D9C <AmiBlitz3.ab2@4283>   MOVEQ #0,d0
00020DA0 <AmiBlitz3.ab2@4286>   LEA $16(A2),A1
00020DA2 <AmiBlitz3.ab2@4289>   MOVE.l d1,-(a7)
00020DA4 <AmiBlitz3.ab2@4290>   MOVE.b (a1),d2
00020DA6 <AmiBlitz3.ab2@4291>   MOVE.l d0,d1
00020DAA <AmiBlitz3.ab2@4292>   CMP.w #4,d2
00020DAE <AmiBlitz3.ab2@4293>   BNE 'l1b
00020DB4 <AmiBlitz3.ab2@4294>   ADD.l #$203c,d1
00020DBA <AmiBlitz3.ab2@4296>   JSR writeword
00020DC0 <AmiBlitz3.ab2@4297>   MOVE.l #$ffff0000,d1
00020DC6 <AmiBlitz3.ab2@4299>   JSR writelong
00020DCA <AmiBlitz3.ab2@4300> BRA 'l2b
00020DD0 <AmiBlitz3.ab2@4303>   TST.b fpu
00020DD4 <AmiBlitz3.ab2@4304>   BNE 'l1c
00020DD8 <AmiBlitz3.ab2@4305>   CMP.w #5,d2
00020DDC <AmiBlitz3.ab2@4306>   BNE 'l1c
00020DE2 <AmiBlitz3.ab2@4307>   ADD.l #$203c,d1
00020DE8 <AmiBlitz3.ab2@4309>   JSR writeword
00020DEE <AmiBlitz3.ab2@4310>   MOVE.l #$800000c1,d1
00020DF4 <AmiBlitz3.ab2@4312>   JSR writelong
00020DF8 <AmiBlitz3.ab2@4313> BRA 'l2b
00020DFE <AmiBlitz3.ab2@4316>   ADD.l #$70ff,d1
00020E04 <AmiBlitz3.ab2@4318>   JSR writeword
00020E0A <AmiBlitz3.ab2@4319>   MOVE.l #$f23c5000,d1
00020E0C <AmiBlitz3.ab2@4320>   MOVE.l d0,d2
00020E0E <AmiBlitz3.ab2@4321>   ASR.l #2,d2
00020E10 <AmiBlitz3.ab2@4322>   ADD.l d2,d1
00020E16 <AmiBlitz3.ab2@4324>   JSR writelong
00020E1A <AmiBlitz3.ab2@4325>   MOVE.w #$ffff,d1
00020E20 <AmiBlitz3.ab2@4327>   JSR writeword
00020E22 <AmiBlitz3.ab2@4330>   MOVE.l (a7)+,d1
00020E24 <AmiBlitz3.ab2@4331>   ADDQ.l #1,a1
00020E2A <AmiBlitz3.ab2@4332>   ADD.l #$0200,d0
00020E30 <AmiBlitz3.ab2@4333>   CMP.l #$0e00,d0
00020E34 <AmiBlitz3.ab2@4334>    BEQ syntaxerr
00020E36 <AmiBlitz3.ab2@4335>   TST.b (a1)
00020E3A <AmiBlitz3.ab2@4336>    BNE 'again
00020E3E <AmiBlitz3.ab2@4337> BRA JL_0_4786
00020E48 <AmiBlitz3.ab2@4340>   MOVE.w a2offset,a2offset2
00020E4C <AmiBlitz3.ab2@4341>   LEA $16(A2),A2
00020E52 <AmiBlitz3.ab2@4342>   MOVE.b funcparloop,-(a7)
00020E5A <AmiBlitz3.ab2@4343>   MOVE.b #1,funcparloop
00020E60 <AmiBlitz3.ab2@4344>   MOVE.b blitzparloop,-(a7)
00020E66 <AmiBlitz3.ab2@4345>   CLR.b blitzparloop
00020E6A <AmiBlitz3.ab2@4346>   BSR.w fetchpees2
00020E70 <AmiBlitz3.ab2@4347>   MOVE.b (a7)+,blitzparloop
00020E76 <AmiBlitz3.ab2@4348>   MOVE.b (a7)+,funcparloop
00020E7A <AmiBlitz3.ab2@4349> BRA.w JL_0_478A
00020E7E <AmiBlitz3.ab2@4352>   BSR.w get1bytemain
00020E82 <AmiBlitz3.ab2@4355>   CMP.w #$7D,D0
00020E86 <AmiBlitz3.ab2@4356>    BNE.w morepar_                                          ;syntax error morepar
00020E8C <AmiBlitz3.ab2@4357>    JSR chkstak
00020E8E <AmiBlitz3.ab2@4358>   MOVE.l (A7)+,D1
00020E94 <AmiBlitz3.ab2@4374>    JSR JL_0_AFCA
00020E9A <AmiBlitz3.ab2@4396>   CLR.b funccall
00020E9E <AmiBlitz3.ab2@4397> BRA.w get1bytemain
00020EA4 <AmiBlitz3.ab2@4401>   MOVE.l d0,lasttoken
00020EA8 <AmiBlitz3.ab2@4402>   CMP.w #$c09f,d0                                          ;hack to use getregd0 instead of getd0
00020EAC <AmiBlitz3.ab2@4403>   BNE 'l2
00020EB0 <AmiBlitz3.ab2@4404>    MOVE.w #$dd05,d0
00020EB4 <AmiBlitz3.ab2@4407>   CMP.w #$c0a0,d0                                          ;hack to use getregd0 instead of getd0
00020EB8 <AmiBlitz3.ab2@4408>   BNE 'l3
00020EBC <AmiBlitz3.ab2@4409>    MOVE.w #$dd06,d0
00020EC0 <AmiBlitz3.ab2@4412>   CMP.w #-$7FC4,D0
00020EC4 <AmiBlitz3.ab2@4413>   BCS.w JL_0_47C4
00020EC8 <AmiBlitz3.ab2@4414>     CMP.w #-$7F4D,D0
00020ECC <AmiBlitz3.ab2@4415>     BCC.w JL_0_47C4
00020ED4 <AmiBlitz3.ab2@4416>       BTST #$7,assemblercheck                              ;inline Assembler checking
00020ED8 <AmiBlitz3.ab2@4417>       BNE.b JL_0_47C0
00020EDE <AmiBlitz3.ab2@4418>         TST.b debugmode
00020EE2 <AmiBlitz3.ab2@4419>         BEQ.b 'l10
00020EEC <AmiBlitz3.ab2@4424>           MOVE.w d_nomemleft,dontwrite
00020EF6 <AmiBlitz3.ab2@4425>           MOVE.l d_bigpc,bigpc
00020F00 <AmiBlitz3.ab2@4426>           MOVE.l d_pc,destpointer
00020F0A <AmiBlitz3.ab2@4427>           MOVE.l cont_pc2,cont_pc
00020F0E <AmiBlitz3.ab2@4433> BRA.w JL_0_612C
00020F12 <AmiBlitz3.ab2@4436>   BCLR #$F,D0
00020F14 <AmiBlitz3.ab2@4437>   MOVE.w D0,D1
00020F18 <AmiBlitz3.ab2@4438>   ANDI.w #$7F00,D1
00020F1C <AmiBlitz3.ab2@4439>   BNE.w JL_0_4856
00020F20 <AmiBlitz3.ab2@4440>     CMP.w #$B3,D0                                          ;intern Instructions
00020F24 <AmiBlitz3.ab2@4441>     BCS.w JL_0_47F2
00020F28 <AmiBlitz3.ab2@4442>       SUBI.w #$77,D0
00020F2C <AmiBlitz3.ab2@4443>       CMP.w #$4B,D0
00020F30 <AmiBlitz3.ab2@4444>       BEQ.w JL_0_4830
00020F34 <AmiBlitz3.ab2@4445>         CMP.w #$46,D0
00020F38 <AmiBlitz3.ab2@4446>         BEQ.w JL_0_4830
00020F3C <AmiBlitz3.ab2@4447> BRA.w JL_0_4834                                            ; change tokennum
00020F40 <AmiBlitz3.ab2@4450>     CMP.w #$38,D0
00020F44 <AmiBlitz3.ab2@4451>      BEQ.w JL_0_4830
00020F48 <AmiBlitz3.ab2@4452>     CMP.w #$39,D0
00020F4C <AmiBlitz3.ab2@4453>      BEQ.w JL_0_4830
00020F50 <AmiBlitz3.ab2@4454>     CMP.w #$D,D0
00020F54 <AmiBlitz3.ab2@4455>      BEQ.w JL_0_4830
00020F58 <AmiBlitz3.ab2@4456>     CMP.w #$12,D0
00020F5C <AmiBlitz3.ab2@4457>      BEQ.w JL_0_4830
00020F60 <AmiBlitz3.ab2@4458>     CMP.w #$13,D0
00020F64 <AmiBlitz3.ab2@4459>      BEQ.w JL_0_4830
00020F68 <AmiBlitz3.ab2@4460>     CMP.w #$1A,D0
00020F6C <AmiBlitz3.ab2@4461>      BEQ.w JL_0_4830
00020F70 <AmiBlitz3.ab2@4462>     CMP.w #$2A,D0
00020F74 <AmiBlitz3.ab2@4463>      BHI.w JL_0_4834
00020F78 <AmiBlitz3.ab2@4464>     CMP.w #$23,D0
00020F7C <AmiBlitz3.ab2@4465>      BCS.b JL_0_4834
00020F80 <AmiBlitz3.ab2@4468>   BSR.w undodebug
00020F82 <AmiBlitz3.ab2@4471>   SUBQ.w #1,D0
00020F84 <AmiBlitz3.ab2@4472>   LSL.w #2,D0
00020F8A <AmiBlitz3.ab2@4479>   LEA instructionbase,A0
00020F8E <AmiBlitz3.ab2@4480>   MOVEA.l $0(A0,D0.W),A0
00020F90 <AmiBlitz3.ab2@4481>   MOVE.l A0,-(A7)
00020F94 <AmiBlitz3.ab2@4482> BRA.w get1bytemain
00020F96 <AmiBlitz3.ab2@4488>   MOVE.w D0,D1
00020F9A <AmiBlitz3.ab2@4489>    BSR.w searchinstr
00020FA0 <AmiBlitz3.ab2@4490>    TST.b newmode
00020FA4 <AmiBlitz3.ab2@4491>    BNE compile_term
00020FAA <AmiBlitz3.ab2@4492>   BTST #$2,$1(A3)                                          ;a3 = pointer to instr ;toke stuff in a3
00020FAE <AmiBlitz3.ab2@4493>    BNE.w stamigalib
00020FB4 <AmiBlitz3.ab2@4494>   BTST #$0,$1(A3)
00020FB8 <AmiBlitz3.ab2@4495>    BEQ.w needreturn_                                       ;syntax err need return   ;check it's a statement
00020FBC <AmiBlitz3.ab2@4496>    BSR.w JL_0_49EA                                         ;does it need a size specifier?
00020FC0 <AmiBlitz3.ab2@4497>    BSR.w JL_0_66F6
00020FC6 <AmiBlitz3.ab2@4503>   MOVE.w numreps,-(A7)
00020FCC <AmiBlitz3.ab2@4504>   MOVE.w userp,-(A7)
00020FD2 <AmiBlitz3.ab2@4505>   MOVE.w a2offset,-(A7)
00020FD4 <AmiBlitz3.ab2@4506>   MOVE.l A2,-(A7)                                          ;recurs.
00020FDE <AmiBlitz3.ab2@4507>   MOVE.w convsize,userp
00020FE2 <AmiBlitz3.ab2@4508>   LEA $6(A3),A1
00020FE4 <AmiBlitz3.ab2@4512>    MOVE.w (A1),D2
00020FE8 <AmiBlitz3.ab2@4513>    BMI.w SERR                                              ;statement syntax error
00020FEC <AmiBlitz3.ab2@4514>   ANDI.w #$FF,D2
00020FEE <AmiBlitz3.ab2@4515>   CMP.w D2,D1
00020FF2 <AmiBlitz3.ab2@4516>    BEQ.w JL_0_48E0
00020FF6 <AmiBlitz3.ab2@4517>    BCS.w JL_0_48CC
00020FF8 <AmiBlitz3.ab2@4518>   MOVE.b (A1),D3
00020FFC <AmiBlitz3.ab2@4519>   ANDI.w #$7,D3
00021000 <AmiBlitz3.ab2@4520>    BEQ.w JL_0_48CC
00021002 <AmiBlitz3.ab2@4521>   MOVE.w D2,D4
00021004 <AmiBlitz3.ab2@4522>   SUB.w D3,D4
00021006 <AmiBlitz3.ab2@4523>   MOVEQ.l #$00,D5
00021008 <AmiBlitz3.ab2@4524>   MOVE.w D1,D5
0002100A <AmiBlitz3.ab2@4525>   SUB.w D4,D5
0002100C <AmiBlitz3.ab2@4526>   DIVU D3,D5
0002100E <AmiBlitz3.ab2@4527>   SWAP D5
00021010 <AmiBlitz3.ab2@4528>   TST.w D5
00021014 <AmiBlitz3.ab2@4529>    BEQ.w JL_0_48E0
00021016 <AmiBlitz3.ab2@4532>   ADDQ.w #2,A1
00021018 <AmiBlitz3.ab2@4533>   ADDA.w D2,A1
0002101C <AmiBlitz3.ab2@4534>    BSR.w aligna1
00021020 <AmiBlitz3.ab2@4535>    BSR.w skiplibreg
00021024 <AmiBlitz3.ab2@4536>   LEA $C(A1),A1
00021028 <AmiBlitz3.ab2@4537> BRA.w JL_0_489A
0002102A <AmiBlitz3.ab2@4540>   MOVE.w (a3),d2
0002102E <AmiBlitz3.ab2@4541>   BTST #1,d2
00021032 <AmiBlitz3.ab2@4542>   BEQ statement_
00021036 <AmiBlitz3.ab2@4543>   CMP.w #1,d1
0002103A <AmiBlitz3.ab2@4544>   BEQ statement_
0002103E <AmiBlitz3.ab2@4547>   CMP.b #$20,(a5)+
00021042 <AmiBlitz3.ab2@4548>   BEQ 'l2
00021048 <AmiBlitz3.ab2@4549>   CMP.b #"(",-2(a5)
0002104C <AmiBlitz3.ab2@4550>   BNE 'l1
00021050 <AmiBlitz3.ab2@4551> BRA parameter_
00021054 <AmiBlitz3.ab2@4554> BRA inbrackets_
00021056 <AmiBlitz3.ab2@4557>   MOVE.b (A1),D2
00021058 <AmiBlitz3.ab2@4558>   LSL.w #8,D2
0002105A <AmiBlitz3.ab2@4559>   OR.w D2,D1
0002105C <AmiBlitz3.ab2@4560>   MOVE.l A1,-(A7)
00021062 <AmiBlitz3.ab2@4561>   CLR.w a2offset
00021064 <AmiBlitz3.ab2@4562>   TST.w D1
00021068 <AmiBlitz3.ab2@4563>    BEQ.w JL_0_4900
0002106C <AmiBlitz3.ab2@4564>   LEA $2(A1),A2
00021072 <AmiBlitz3.ab2@4566>   MOVE.l lasttoken,-(a7)
00021078 <AmiBlitz3.ab2@4567>   CLR.l lasttoken
0002107C <AmiBlitz3.ab2@4568>   BSR.w fetchlibps
00021082 <AmiBlitz3.ab2@4569>   MOVE.l (a7)+,lasttoken
00021086 <AmiBlitz3.ab2@4570> BRA.w JL_0_4904
0002108A <AmiBlitz3.ab2@4573>   BSR.w get1bytemain
0002108C <AmiBlitz3.ab2@4576>   MOVEA.l (A7)+,A1
0002108E <AmiBlitz3.ab2@4577>   MOVEA.l (A7)+,A2
00021094 <AmiBlitz3.ab2@4578>   MOVE.w a2offset,D1
00021098 <AmiBlitz3.ab2@4579>    BEQ.w JL_0_493A
0002109E <AmiBlitz3.ab2@4580>   MOVE.w D1,preplibst+2
000210A4 <AmiBlitz3.ab2@4581>   MOVE.l preplibst,D1
000210AA <AmiBlitz3.ab2@4582>    JSR writelong                                           ;write array offset stack correct
000210B4 <AmiBlitz3.ab2@4583>   MOVE.w numreps,movenumrep+2
000210B8 <AmiBlitz3.ab2@4584>    BEQ.w JL_0_493A
000210BE <AmiBlitz3.ab2@4585>   MOVE.l movenumrep,D1
000210C4 <AmiBlitz3.ab2@4586>    JSR writelong
000210CA <AmiBlitz3.ab2@4590>   JSR userjsr
000210D0 <AmiBlitz3.ab2@4593>   MOVE.w a2offset,D1
000210D4 <AmiBlitz3.ab2@4594>    BEQ.w JL_0_4974
000210D8 <AmiBlitz3.ab2@4595>   CMP.w #$8,D1
000210DC <AmiBlitz3.ab2@4596>    BHI.w JL_0_4964
000210E0 <AmiBlitz3.ab2@4597>   ANDI.w #$7,D1
000210E2 <AmiBlitz3.ab2@4598>   LSL.w #8,D1
000210E4 <AmiBlitz3.ab2@4599>   LSL.w #1,D1
000210E8 <AmiBlitz3.ab2@4600>   ORI.w #$504F,D1
000210EE <AmiBlitz3.ab2@4602>   JSR writeword
000210F2 <AmiBlitz3.ab2@4603> BRA.w JL_0_4974
000210F8 <AmiBlitz3.ab2@4606>   MOVE.w D1,fixlibst+2
000210FE <AmiBlitz3.ab2@4607>   MOVE.l fixlibst,D1
00021104 <AmiBlitz3.ab2@4608>   JSR writelong
0002110A <AmiBlitz3.ab2@4611>   MOVE.w (A7)+,a2offset
00021110 <AmiBlitz3.ab2@4612>   MOVE.w (A7)+,userp
00021116 <AmiBlitz3.ab2@4613>   MOVE.w (A7)+,numreps
0002111A <AmiBlitz3.ab2@4614> BRA.w reget
0002111E <AmiBlitz3.ab2@4618>   MOVEM.l A2-A3,-(A7)
00021124 <AmiBlitz3.ab2@4619>   CLR.b doublepeek
0002112A <AmiBlitz3.ab2@4620>   MOVE.l A5,lastsourcepos
0002112E <AmiBlitz3.ab2@4621>    BSR.w getchar
00021132 <AmiBlitz3.ab2@4622>   CMP.w #$2E,D0
00021136 <AmiBlitz3.ab2@4623>    BEQ.w JL_0_49B4
0002113C <AmiBlitz3.ab2@4624>   MOVEA.l defaulttype,A2
00021140 <AmiBlitz3.ab2@4625>   CMP.w #$24,D0
00021144 <AmiBlitz3.ab2@4626>    BNE.w JL_0_49CA
00021146 <AmiBlitz3.ab2@4627>   MOVEQ.l #$07,D1
0002114A <AmiBlitz3.ab2@4628> BRA.w JL_0_49DE
0002114E <AmiBlitz3.ab2@4631>   BSR.w getparameter2
00021152 <AmiBlitz3.ab2@4632>   BEQ.w syntaxerr
00021158 <AmiBlitz3.ab2@4633>   LEA newtypebase,A2
0002115C <AmiBlitz3.ab2@4634>   BSR.w findtype
00021160 <AmiBlitz3.ab2@4635>   BNE.w notypeerr
0002116A <AmiBlitz3.ab2@4639>   MOVE.w oldqflag,instringon
00021170 <AmiBlitz3.ab2@4640>   MOVEA.l lastsourcepos,A5
00021174 <AmiBlitz3.ab2@4645>   MOVE.w $6(A2),D1
0002117A <AmiBlitz3.ab2@4646>   CMP.w #8,8(a2)
0002117E <AmiBlitz3.ab2@4647>   BNE 'l1
00021186 <AmiBlitz3.ab2@4648>   MOVE.b #1,doublepeek
0002118C <AmiBlitz3.ab2@4652>   MOVE.w D1,convsize
00021190 <AmiBlitz3.ab2@4653>   MOVEM.l (A7)+,A2-A3
00021192 <AmiBlitz3.ab2@4654> RTS
00021198 <AmiBlitz3.ab2@4659>   BTST #$3,$1(A3)
0002119C <AmiBlitz3.ab2@4660>   BEQ.w JL_0_4A06
000211A0 <AmiBlitz3.ab2@4661>   BSR.w AJL_0_498A                                         ;read peek/poke size
000211A4 <AmiBlitz3.ab2@4663>   ORI.w #$7000,D1
000211AA <AmiBlitz3.ab2@4664>   JSR writeword
000211B0 <AmiBlitz3.ab2@4665>   ADDQ.w #1,regnum
000211B2 <AmiBlitz3.ab2@4668> RTS
000211B4 <AmiBlitz3.ab2@4674>             Dc.b $10,$12                                   ;MOVE.B  (A2),D0
000211B6 <AmiBlitz3.ab2@4675>             Dc.b $14,$91                                   ;MOVE.B  (A1),(A2)
000211B8 <AmiBlitz3.ab2@4676>             Dc.b $12,$80                                   ;MOVE.B  D0,(A1)
000211BA <AmiBlitz3.ab2@4680> swapw:      Dc.b $30,$12                                   ;MOVE.W  (A2),D0
000211BC <AmiBlitz3.ab2@4681>             Dc.b $34,$91                                   ;MOVE.W  (A1),(A2)
000211BE <AmiBlitz3.ab2@4682>             Dc.b $32,$80                                   ;MOVE.W  D0,(A1)
000211C0 <AmiBlitz3.ab2@4686> swapl:      Dc.b $20,$12                                   ;MOVE.L  (A2),D0
000211C2 <AmiBlitz3.ab2@4687>             Dc.b $24,$91                                   ;MOVE.L  (A1),(A2)
000211C4 <AmiBlitz3.ab2@4688>             Dc.b $22,$80                                   ;MOVE.L  D0,(A1)
000211C6 <AmiBlitz3.ab2@4692> pulla1:     Dc.b $22,$5F                                   ;MOVEA.L (A7)+,A1
000211C8 <AmiBlitz3.ab2@4695> srctype:    Ds.w 1
000211CC <AmiBlitz3.ab2@4700>   BSR.w excget
000211D0 <AmiBlitz3.ab2@4701>   CMP.w #$2C,D0
000211D4 <AmiBlitz3.ab2@4702>    BNE.w syntaxerr
000211DA <AmiBlitz3.ab2@4703>   MOVE.b D2,srctype
000211E0 <AmiBlitz3.ab2@4704>   MOVE.w pusha2,D1
000211E6 <AmiBlitz3.ab2@4705>   JSR writeword
000211EA <AmiBlitz3.ab2@4706>   BSR.w get1bytemain
000211EE <AmiBlitz3.ab2@4707>   BSR.w excget
000211F4 <AmiBlitz3.ab2@4708>   CMP.b srctype,D2
000211F8 <AmiBlitz3.ab2@4709>    BNE.w excerr2
000211FE <AmiBlitz3.ab2@4710>   MOVE.w pulla1,D1
00021204 <AmiBlitz3.ab2@4711>    JSR writeword
00021208 <AmiBlitz3.ab2@4712>   CMP.b #$2,D2
0002120C <AmiBlitz3.ab2@4713>    BCS.w JL_0_4B2A
00021210 <AmiBlitz3.ab2@4714>    BEQ.w JL_0_4B1E
00021214 <AmiBlitz3.ab2@4715>   LEA swapl(PC),A0
00021218 <AmiBlitz3.ab2@4716>   LEA swaplf(PC),A1
0002121E <AmiBlitz3.ab2@4717> JMP pokecode
00021222 <AmiBlitz3.ab2@4720>   LEA swapw(PC),A0
00021226 <AmiBlitz3.ab2@4721>   LEA swapwf(PC),A1
0002122C <AmiBlitz3.ab2@4722> JMP pokecode
00021230 <AmiBlitz3.ab2@4725>   LEA swapb(PC),A0
00021234 <AmiBlitz3.ab2@4726>   LEA swapbf(PC),A1
0002123A <AmiBlitz3.ab2@4727> JMP pokecode
00021240 <AmiBlitz3.ab2@4731>   JSR getparameter
00021244 <AmiBlitz3.ab2@4732>   BSR.w JL_0_8E3C
00021248 <AmiBlitz3.ab2@4733>   BSR.w calcvar
0002124C <AmiBlitz3.ab2@4734>   BTST #$E,D2
00021250 <AmiBlitz3.ab2@4735>    BEQ.w JL_0_4B4E
00021254 <AmiBlitz3.ab2@4736>   MOVE.b #$4,D2
00021256 <AmiBlitz3.ab2@4739>   TST.b D2
0002125A <AmiBlitz3.ab2@4740>    BEQ.w excerr
0002125E <AmiBlitz3.ab2@4741>   BTST #$F,D2
00021262 <AmiBlitz3.ab2@4742>    BNE.w JL_0_4B6A
00021268 <AmiBlitz3.ab2@4743>   MOVE.w leaamp,D1
0002126E <AmiBlitz3.ab2@4744>    JSR pokewda5s
00021270 <AmiBlitz3.ab2@4745>   MOVE.w D3,D1
00021276 <AmiBlitz3.ab2@4746> JMP writeword
00021278 <AmiBlitz3.ab2@4749> RTS
0002127E <AmiBlitz3.ab2@4755>   MOVE.l mempool,a0
00021284 <AmiBlitz3.ab2@4756>   MOVEA.l _execbase,A6
00021288 <AmiBlitz3.ab2@4757> JMP _AllocPooled(a6)
0002128C <AmiBlitz3.ab2@4764>   MOVE.w #$BF00,D1
00021292 <AmiBlitz3.ab2@4765> JMP Atokejsr
00021296 <AmiBlitz3.ab2@4769>   CMP.w #-$7FFA,D0
0002129A <AmiBlitz3.ab2@4770>    BEQ.w popreturn
0002129E <AmiBlitz3.ab2@4771>   CMP.w #-$7FEA,D0
000212A2 <AmiBlitz3.ab2@4772>    BEQ.w popnext2
000212A6 <AmiBlitz3.ab2@4773>   CMP.w #-$7FF2,D0
000212AA <AmiBlitz3.ab2@4774>    BEQ.w popselect2
000212AE <AmiBlitz3.ab2@4775>   CMP.w #-$7FF5,D0
000212B2 <AmiBlitz3.ab2@4776>    BEQ.w get1bytemain
000212B6 <AmiBlitz3.ab2@4777>   CMP.w #-$7FF4,D0
000212BA <AmiBlitz3.ab2@4778>    BEQ.w get1bytemain
000212BE <AmiBlitz3.ab2@4779>   CMP.w #-$7FEC,D0
000212C2 <AmiBlitz3.ab2@4780>    BEQ.w get1bytemain
000212C6 <AmiBlitz3.ab2@4781>   CMP.w #-$7F45,D0
000212CA <AmiBlitz3.ab2@4782>    BEQ.w get1bytemain
000212CE <AmiBlitz3.ab2@4783> BRA.w syntaxerr
000212D4 <AmiBlitz3.ab2@4786>   TST.b debugmode
000212D8 <AmiBlitz3.ab2@4787>    BEQ.w popreturn__norerr
000212DC <AmiBlitz3.ab2@4788>   LEA popreturn__rfix(PC),A0
000212E0 <AmiBlitz3.ab2@4789>   LEA popreturn__rfixf(PC),A1
000212E6 <AmiBlitz3.ab2@4790>    JSR pokecode
000212EA <AmiBlitz3.ab2@4791>   MOVE.w #$C305,D1
000212F0 <AmiBlitz3.ab2@4792>    JSR Atokejsr
000212F4 <AmiBlitz3.ab2@4793>   MOVE.w popreturn__rfix2(PC),D1
000212FA <AmiBlitz3.ab2@4795>    JSR writeword
000212FE <AmiBlitz3.ab2@4796> BRA.w get1bytemain
00021304 <AmiBlitz3.ab2@4800>   CMPI.w #$6753,$4(A7)                                     ;#"gS",4(A7)
00021308 <AmiBlitz3.ab2@4801>   BEQ.w popreturn__rfix2
0002130E <AmiBlitz3.ab2@4804>   JSR $20000                                               ;reass
00021310 <AmiBlitz3.ab2@4807>   ADDQ.w #6,A7
00021314 <AmiBlitz3.ab2@4811>   MOVE.w popreturn__sfix(PC),D1
0002131A <AmiBlitz3.ab2@4812>   JSR writeword
0002131E <AmiBlitz3.ab2@4813> BRA.w get1bytemain
00021320 <AmiBlitz3.ab2@4818>   Dc.b $58,$4F                                             ;ADDQ.W  #4,A7
00021326 <AmiBlitz3.ab2@4823>   MOVE.l firstfor,D0
0002132A <AmiBlitz3.ab2@4824>    BEQ.w noforerr
0002132C <AmiBlitz3.ab2@4825>   MOVEA.l D0,A2
00021330 <AmiBlitz3.ab2@4826>    BSR.w get1bytemain
00021334 <AmiBlitz3.ab2@4827>   BSR.w popnext
0002133A <AmiBlitz3.ab2@4830>   TST.b debugmode
0002133E <AmiBlitz3.ab2@4831>    BEQ.w popnext3__ner
00021344 <AmiBlitz3.ab2@4832>   MOVE.l nextfixw2,D1
0002134A <AmiBlitz3.ab2@4833>   CMPI.w #$3,$C(A2)
0002134E <AmiBlitz3.ab2@4834>    BCS.w writelong2
00021354 <AmiBlitz3.ab2@4835>   MOVE.l nextfixl2,D1
0002135A <AmiBlitz3.ab2@4836> writelong2 JMP  writelong
00021360 <AmiBlitz3.ab2@4839>   CMPI.w #$3,$C(A2)
00021364 <AmiBlitz3.ab2@4840>    BCS.w popnext3__skip2
0002136A <AmiBlitz3.ab2@4841>   MOVE.l nextfixl,D1
00021370 <AmiBlitz3.ab2@4842>   JMP writelong
00021376 <AmiBlitz3.ab2@4845>   MOVE.w nextfixw,D1
0002137C <AmiBlitz3.ab2@4846> JMP writeword
00021380 <AmiBlitz3.ab2@4850>   MOVE.w $C(A2),D0
00021386 <AmiBlitz3.ab2@4851>   TST.b debugmode
0002138A <AmiBlitz3.ab2@4852>    BEQ.w popnext__norunerr
0002138E <AmiBlitz3.ab2@4853>   MOVE.w #$C306,D1
00021392 <AmiBlitz3.ab2@4854>   CMP.w #$3,D0
00021396 <AmiBlitz3.ab2@4855>    BCS.w popnext__oktc
00021398 <AmiBlitz3.ab2@4856>   ADDQ.w #1,D1
0002139A <AmiBlitz3.ab2@4859>   MOVE.l A2,-(A7)
000213A0 <AmiBlitz3.ab2@4860>   JSR Atokejsr
000213A2 <AmiBlitz3.ab2@4861>   MOVEA.l (A7)+,A2
000213A4 <AmiBlitz3.ab2@4864> RTS
000213AA <AmiBlitz3.ab2@4868>   MOVE.l firstsel,D0
000213AE <AmiBlitz3.ab2@4869>    BEQ.w eselerr
000213B0 <AmiBlitz3.ab2@4870>   MOVEA.l D0,A2
000213B4 <AmiBlitz3.ab2@4871>    BSR.w get1bytemain
000213B8 <AmiBlitz3.ab2@4874>   MOVE.w $C(A2),D2
000213BE <AmiBlitz3.ab2@4875>   TST.b debugmode
000213C2 <AmiBlitz3.ab2@4876>    BEQ.w popselect__norerr
000213C6 <AmiBlitz3.ab2@4877>   MOVE.w #$C313,D1
000213CA <AmiBlitz3.ab2@4878>   CMP.w #$3,D2
000213CE <AmiBlitz3.ab2@4879>    BCS.w popselect__chkit
000213D0 <AmiBlitz3.ab2@4880>   ADDQ.w #1,D1
000213D6 <AmiBlitz3.ab2@4883>   JSR Atokejsr                                             ;make sure next thing on stack
000213D8 <AmiBlitz3.ab2@4887>   MOVEQ.l #$02,D1
000213DC <AmiBlitz3.ab2@4888>   CMP.w #$3,D2
000213E0 <AmiBlitz3.ab2@4889>    BCS.w popselect__doit
000213E2 <AmiBlitz3.ab2@4890>   MOVEQ.l #$04,D1
000213E6 <AmiBlitz3.ab2@4891>   CMP.w #$7,D2
000213EA <AmiBlitz3.ab2@4892>    BCS.w popselect__doit
000213F0 <AmiBlitz3.ab2@4893>   LEA endselstr,A0
000213F6 <AmiBlitz3.ab2@4894>   LEA endselstrf,A1
000213FC <AmiBlitz3.ab2@4895>   TST.b debugmode
00021400 <AmiBlitz3.ab2@4896>    BEQ.w popselect__norerr3
00021406 <AmiBlitz3.ab2@4897>   LEA endselstrf2,A1
0002140C <AmiBlitz3.ab2@4900>   JSR pokecode
00021410 <AmiBlitz3.ab2@4901>   MOVE.w #$C003,D1                                         ;global freemem
00021416 <AmiBlitz3.ab2@4902> JMP Atokejsr
0002141C <AmiBlitz3.ab2@4905>   TST.b debugmode
00021420 <AmiBlitz3.ab2@4906>    BEQ.w popselect__norerr2
00021422 <AmiBlitz3.ab2@4907>   ADDQ.w #2,D1                                             ;for the "sE"
00021424 <AmiBlitz3.ab2@4910>   LSL.w #8,D1
00021426 <AmiBlitz3.ab2@4911>   LSL.w #1,D1
0002142C <AmiBlitz3.ab2@4912>   OR.w endsel,D1
00021432 <AmiBlitz3.ab2@4913> JMP writeword
00021436 <AmiBlitz3.ab2@4916> firstrep:    Ds.l 1
0002143A <AmiBlitz3.ab2@4917> replineat:   Ds.l 1
00021440 <AmiBlitz3.ab2@4926>   CLR.l fp0addr
0002144A <AmiBlitz3.ab2@4927>   MOVE.l linenumat,replineat
0002144C <AmiBlitz3.ab2@4928>   MOVEQ.l #$08,D0
00021452 <AmiBlitz3.ab2@4929>   MOVEA.l _execbase,A6
00021458 <AmiBlitz3.ab2@4930>   MOVE.l mempool,a0
0002145C <AmiBlitz3.ab2@4931>   JSR _AllocPooled(a6)
0002145E <AmiBlitz3.ab2@4933>   MOVEA.l D0,A0
00021462 <AmiBlitz3.ab2@4934>   MOVE.l firstrep(PC),(A0)
00021468 <AmiBlitz3.ab2@4935>   MOVE.l A0,firstrep
00021470 <AmiBlitz3.ab2@4936>   MOVE.l destpointer,$4(A0)
00021472 <AmiBlitz3.ab2@4937> RTS
00021478 <AmiBlitz3.ab2@4940> str_temp:  Ds.w 3                                            ;infochk  ds.b 6 org source
0002147C <AmiBlitz3.ab2@4943>   LEA str_temp(PC),A1
0002147E <AmiBlitz3.ab2@4944>   CLR.w (A1)
00021482 <AmiBlitz3.ab2@4945>   CLR.l $2(A1)
00021484 <AmiBlitz3.ab2@4948>   MOVEQ.l #$04,D0
00021488 <AmiBlitz3.ab2@4951>     MOVE.b $1(A1),(A1)+
0002148C <AmiBlitz3.ab2@4952>   DBF D0,check_for_infoextention__loop
00021490 <AmiBlitz3.ab2@4957>   LEA str_temp(PC),A1
00021492 <AmiBlitz3.ab2@4958>   MOVE.b (A0),D0
00021496 <AmiBlitz3.ab2@4959>   ORI.b #$20,D0
0002149A <AmiBlitz3.ab2@4960>   MOVE.b D0,$5(A1)
0002149C <AmiBlitz3.ab2@4961>   TST.b (A0)+
000214A0 <AmiBlitz3.ab2@4962>    BNE.w check_for_infoextention__loop2
000214A4 <AmiBlitz3.ab2@4963>   CMPI.w #$2E69,(A1)+                                      ;".i"
000214A8 <AmiBlitz3.ab2@4964>    BNE.w check_for_infoextention__no
000214AE <AmiBlitz3.ab2@4965>   CMPI.l #$6E666F20,(A1)                                   ;"nfo "
000214B0 <AmiBlitz3.ab2@4968> RTS
000214B4 <AmiBlitz3.ab2@4972>   BPL.w gettokeps__evaltoke
000214B6 <AmiBlitz3.ab2@4973>   MOVE.w D0,D1
000214BA <AmiBlitz3.ab2@4974>   ANDI.w #$7F80,D1
000214BE <AmiBlitz3.ab2@4975>    BEQ.w tokeerr
000214C2 <AmiBlitz3.ab2@4976>   BCLR #$F,D0
000214C4 <AmiBlitz3.ab2@4977>   MOVE.w D0,D4                                             ;got toke number
000214C8 <AmiBlitz3.ab2@4978>   BSR.w get1bytemain
000214CC <AmiBlitz3.ab2@4979> BRA.w gettokeps__gotnum
000214D2 <AmiBlitz3.ab2@4982>   JSR JL_0_BF6A
000214D8 <AmiBlitz3.ab2@4983>   CMP.l #MaxWord,D3
000214DC <AmiBlitz3.ab2@4984>    BHI.w tokeerr
000214DE <AmiBlitz3.ab2@4985>   TST.w D6
000214E2 <AmiBlitz3.ab2@4986>    BNE.w tokeerr
000214E4 <AmiBlitz3.ab2@4987>   MOVE.w D3,D4
000214E6 <AmiBlitz3.ab2@4990>   MOVEQ.l #$00,D5
000214EA <AmiBlitz3.ab2@4991>   CMP.w #$2C,D0
000214EE <AmiBlitz3.ab2@4992>    BNE.w gettokeps__gotfrom
000214F0 <AmiBlitz3.ab2@4993>   MOVE.w D4,-(A7)
000214F6 <AmiBlitz3.ab2@4994>    JSR AJL_0_BF6E
000214FC <AmiBlitz3.ab2@4995>   CMP.l #MaxWord,D3
00021500 <AmiBlitz3.ab2@4996>    BHI.w tokeerr
00021502 <AmiBlitz3.ab2@4997>   TST.w D6
00021506 <AmiBlitz3.ab2@4998>    BNE.w tokeerr
00021508 <AmiBlitz3.ab2@4999>   MOVE.w D3,D5
0002150A <AmiBlitz3.ab2@5000>   MOVE.w (A7)+,D4
0002150C <AmiBlitz3.ab2@5003> RTS                                                        ;d4=toke, d5=form
0002150E <AmiBlitz3.ab2@5007>   TST.w D0
00021512 <AmiBlitz3.ab2@5008>    BSR.w gettokeps
00021516 <AmiBlitz3.ab2@5009>   MOVE.w #$4EB9,D1
0002151C <AmiBlitz3.ab2@5010>   JSR writeword
00021520 <AmiBlitz3.ab2@5011>   BSR.w addoff
00021522 <AmiBlitz3.ab2@5012>   MOVE.w D5,D1
00021526 <AmiBlitz3.ab2@5013>   ORI.w #$8000,D1                                          ;Toke of Amiga type.
00021528 <AmiBlitz3.ab2@5014>   SWAP D1
0002152A <AmiBlitz3.ab2@5015>   MOVE.w D4,D1
00021530 <AmiBlitz3.ab2@5016> JMP writelong
00021532 <AmiBlitz3.ab2@5020>   TST.w D0
00021536 <AmiBlitz3.ab2@5021>    BSR.w gettokeps
0002153A <AmiBlitz3.ab2@5022>   MOVE.w #$4EB9,D1
00021540 <AmiBlitz3.ab2@5023>   JSR writeword
00021544 <AmiBlitz3.ab2@5024>   BSR.w addoff
00021546 <AmiBlitz3.ab2@5025>   MOVE.w D5,D1
0002154A <AmiBlitz3.ab2@5026>   ORI.w #$C000,D1                                          ;Toke of Blitz type.
0002154C <AmiBlitz3.ab2@5027>   SWAP D1
0002154E <AmiBlitz3.ab2@5028>   MOVE.w D4,D1
00021554 <AmiBlitz3.ab2@5029>   JMP writelong
0002155A <AmiBlitz3.ab2@5033>   JSR JL_0_BF6A
00021560 <AmiBlitz3.ab2@5034>   CMP.l #$10000,D3
00021564 <AmiBlitz3.ab2@5035>    BCC.w tokeerr
00021566 <AmiBlitz3.ab2@5036>   MOVE.w D3,D1
0002156C <AmiBlitz3.ab2@5037> JMP Atokejsr
00021570 <AmiBlitz3.ab2@5041>   BSR.w gettokeps
00021574 <AmiBlitz3.ab2@5042>   MOVE.w #$4EB9,D1
0002157A <AmiBlitz3.ab2@5043>   JSR writeword
00021580 <AmiBlitz3.ab2@5044>   MOVE.l destpointer,D3
00021588 <AmiBlitz3.ab2@5045>   BTST #$7,blitzmode
0002158C <AmiBlitz3.ab2@5046>    BEQ.w do_TokeJsr__inamiga
00021590 <AmiBlitz3.ab2@5047>   BSET #$E,D5
00021594 <AmiBlitz3.ab2@5050>   BSR.w JL_0_6E86
00021598 <AmiBlitz3.ab2@5051>   BSR.w addoff
0002159E <AmiBlitz3.ab2@5052>   JMP writelong
000215A2 <AmiBlitz3.ab2@5056>   BEQ.w do_VWait__zero
000215A4 <AmiBlitz3.ab2@5057>   MOVEQ.l #$02,D2                                          ;get a word
000215AA <AmiBlitz3.ab2@5059>   JSR bakeval
000215AE <AmiBlitz3.ab2@5060>   MOVE.w fvwait(PC),D1
000215B2 <AmiBlitz3.ab2@5061> BRA.w do_VWait__vcont
000215B6 <AmiBlitz3.ab2@5064>   MOVE.w #$7000,D1                                         ;moveq #0,d0
000215BC <AmiBlitz3.ab2@5067>   JSR writeword
000215C0 <AmiBlitz3.ab2@5068>   MOVE.w #$C104,D1
000215C6 <AmiBlitz3.ab2@5069> JMP Atokejsr
000215C8 <AmiBlitz3.ab2@5073>   SUBQ.w #1,D0
000215CE <AmiBlitz3.ab2@5076>   Dc.w $3b7c,$ffff,0                                       ;move.w #$FFFF,$0(A5) ;noopt
000215D2 <AmiBlitz3.ab2@5079>   Dc.l $426d0001                                           ;clr.w $0(A5)
000215D6 <AmiBlitz3.ab2@5083>   MOVE.b debugmode(PC),D1
000215DA <AmiBlitz3.ab2@5084>   BEQ.b debugmode_codelabel__skip
000215DE <AmiBlitz3.ab2@5085>   MOVE.w #$D500,D1
000215E4 <AmiBlitz3.ab2@5086> JMP Atokejsr
000215E6 <AmiBlitz3.ab2@5089> RTS
000215EE <AmiBlitz3.ab2@5093>   BSET #$0,blitzmode
000215F6 <AmiBlitz3.ab2@5094>   BSET #$7,blitzmode
000215FA <AmiBlitz3.ab2@5095>   MOVE.w #$C200,D1
00021600 <AmiBlitz3.ab2@5096>   JSR Atokejsr
00021606 <AmiBlitz3.ab2@5097>   TST.b debugmode
0002160A <AmiBlitz3.ab2@5098>    BEQ.w do_BLITZ__done
0002160E <AmiBlitz3.ab2@5099>   MOVE.w cgoblitz(PC),D1
00021614 <AmiBlitz3.ab2@5100>   JSR writeword
00021616 <AmiBlitz3.ab2@5101>   MOVEQ.l #-$01,D1
0002161C <AmiBlitz3.ab2@5102>   JSR writeword
00021622 <AmiBlitz3.ab2@5103>   JSR getbbase
00021628 <AmiBlitz3.ab2@5104>   JSR writeword
0002162C <AmiBlitz3.ab2@5107> BRA.w debugmode_codelabel
00021630 <AmiBlitz3.ab2@5111>   MOVE.w #$C201,D1
00021634 <AmiBlitz3.ab2@5112> BRA.w do_AMIGA__toamode
00021638 <AmiBlitz3.ab2@5116>   MOVE.W  #$C202,D1
00021640 <AmiBlitz3.ab2@5119>   BSET #$0,blitzmode
00021648 <AmiBlitz3.ab2@5120>   BCLR #$7,blitzmode
0002164E <AmiBlitz3.ab2@5121>   JSR Atokejsr
00021654 <AmiBlitz3.ab2@5122>   TST.b debugmode
00021658 <AmiBlitz3.ab2@5123>    BEQ.w do_AMIGA__done
0002165C <AmiBlitz3.ab2@5124>   MOVE.w cgoamiga(PC),D1
00021662 <AmiBlitz3.ab2@5125>   JSR writeword
00021668 <AmiBlitz3.ab2@5126>   JSR getbbase
0002166E <AmiBlitz3.ab2@5127>   JSR writeword
00021672 <AmiBlitz3.ab2@5130> BRA.w debugmode_codelabel
00021676 <AmiBlitz3.ab2@5134>   MOVEM.l D2-D7/A2-A4,-(A7)
0002167A <AmiBlitz3.ab2@5137>   MOVEM.l (A7)+,D2-D7/A2-A4
00021680 <AmiBlitz3.ab2@5141>   JSR JL_0_BF6A
00021686 <AmiBlitz3.ab2@5142>   CMP.l #$E,D3
0002168A <AmiBlitz3.ab2@5143>    BCC.w interr4
0002168E <AmiBlitz3.ab2@5144>   MOVE.w #$7000,D1
00021690 <AmiBlitz3.ab2@5145>   OR.w D3,D1
00021696 <AmiBlitz3.ab2@5146>   JSR writeword
0002169A <AmiBlitz3.ab2@5147>   MOVE.w #$C101,D1
000216A0 <AmiBlitz3.ab2@5148> JMP Atokejsr                                               ;clear the interupt
000216A2 <AmiBlitz3.ab2@5151> inerr:       Ds.w 1                                        ;flag - in error trap mode
000216A6 <AmiBlitz3.ab2@5152> errjmp:      Ds.l 1                                        ;where err jump is
000216AA <AmiBlitz3.ab2@5153> errcode:     Ds.l 1
000216AE <AmiBlitz3.ab2@5157>   MOVE.W  #$D202,D1
000216B4 <AmiBlitz3.ab2@5158> JMP Atokejsr                                               ;BRA.W Atokejsr
000216B8 <AmiBlitz3.ab2@5162>   MOVE.w inerr(PC),D1
000216BC <AmiBlitz3.ab2@5163>    BEQ.w errerr3
000216C2 <AmiBlitz3.ab2@5164>   CLR.w inerr
000216C8 <AmiBlitz3.ab2@5165>   MOVE.w dontwrite,D1
000216CC <AmiBlitz3.ab2@5166>    BNE.w doendseterr__skip
000216D0 <AmiBlitz3.ab2@5167>   MOVEA.l errjmp(PC),A0
000216D6 <AmiBlitz3.ab2@5168>   MOVE.l destpointer,(A0)
000216DA <AmiBlitz3.ab2@5171> BRA.w get1bytemain
000216DE <AmiBlitz3.ab2@5175>   MOVE.w #$D205,D1
000216E4 <AmiBlitz3.ab2@5176> JMP Atokejsr
000216EA <AmiBlitz3.ab2@5180>   MOVE.w proceduremode,D1
000216EE <AmiBlitz3.ab2@5181>    BNE.w errerr1
000216F2 <AmiBlitz3.ab2@5182>   MOVE.w inerr(PC),D1
000216F6 <AmiBlitz3.ab2@5183>    BNE.w errerr2
000216FC <AmiBlitz3.ab2@5184>   LEA inerr,a0
000216FE <AmiBlitz3.ab2@5185>   NOT.w (a0)                                               ;reass
00021702 <AmiBlitz3.ab2@5186>   MOVE.w #$203C,D1                                         ;move.l #x,d0
00021708 <AmiBlitz3.ab2@5187>   JSR writeword
00021712 <AmiBlitz3.ab2@5188>   MOVE.l destpointer,errcode
00021716 <AmiBlitz3.ab2@5189>   BSR.w addoff
0002171A <AmiBlitz3.ab2@5190>   BSR.w writelong
0002171E <AmiBlitz3.ab2@5191>   MOVE.w #$D201,D1
00021724 <AmiBlitz3.ab2@5192>   JSR Atokejsr
00021728 <AmiBlitz3.ab2@5193>   MOVE.w #$4EF9,D1                                         ;JMP
0002172C <AmiBlitz3.ab2@5194>   BSR.w writeword
00021736 <AmiBlitz3.ab2@5195>   MOVE.l destpointer,errjmp
0002173A <AmiBlitz3.ab2@5196>   BSR.w addoff
0002173E <AmiBlitz3.ab2@5197>   BSR.w writelong
00021744 <AmiBlitz3.ab2@5198>   MOVE.w dontwrite,D1
00021748 <AmiBlitz3.ab2@5199>    BNE.w do_SetErr__skip
0002174C <AmiBlitz3.ab2@5200>   MOVEA.l errcode(PC),A0
00021752 <AmiBlitz3.ab2@5201>   MOVE.l destpointer,(A0)
00021754 <AmiBlitz3.ab2@5204> RTS
00021758 <AmiBlitz3.ab2@5207> intlineat:  Ds.l 1
0002175A <AmiBlitz3.ab2@5211>   MOVEQ.l #-$01,D1                                        ;type - need new string space
0002175E <AmiBlitz3.ab2@5212>   BSR.w errchx
00021764 <AmiBlitz3.ab2@5213>   MOVE.w D1,intstring
0002176E <AmiBlitz3.ab2@5214>   MOVE.l linenumat,intlineat
00021774 <AmiBlitz3.ab2@5215>   JSR JL_0_BF6A                                           ;get constant - int level
0002177A <AmiBlitz3.ab2@5216>   CMP.l #$E,D3
0002177E <AmiBlitz3.ab2@5217>    BCC.w interr4
00021784 <AmiBlitz3.ab2@5218>   ST intsused
0002178A <AmiBlitz3.ab2@5219>   MOVE.w D3,intlevel
0002178E <AmiBlitz3.ab2@5220>   MOVE.w #$7000,D1
00021790 <AmiBlitz3.ab2@5221>   OR.w D3,D1                                              
00021794 <AmiBlitz3.ab2@5222>   BSR.w writeword                                         ;moveq #x,d0
00021798 <AmiBlitz3.ab2@5223>   MOVE.w #$223C,D1                                        ;move.l #x,d1
0002179C <AmiBlitz3.ab2@5224>   BSR.w writeword
000217A0 <AmiBlitz3.ab2@5225>   BSR.w addoff
000217A6 <AmiBlitz3.ab2@5226>   MOVE.l destpointer,-(A7)
000217AA <AmiBlitz3.ab2@5227>   BSR.w writelong
000217AE <AmiBlitz3.ab2@5228>   MOVE.w #$C100,D1
000217B4 <AmiBlitz3.ab2@5229>   JSR Atokejsr
000217B8 <AmiBlitz3.ab2@5230>   MOVE.w #$4EF9,D1                                        ;jmp
000217BC <AmiBlitz3.ab2@5231>   BSR.w writeword
000217C0 <AmiBlitz3.ab2@5232>   BSR.w addoff
000217CA <AmiBlitz3.ab2@5233>   MOVE.l destpointer,intjmpat
000217CE <AmiBlitz3.ab2@5234>   BSR.w writelong
000217D0 <AmiBlitz3.ab2@5235>   MOVEA.l (A7)+,A0
000217D6 <AmiBlitz3.ab2@5236>   MOVE.w dontwrite,D1
000217DA <AmiBlitz3.ab2@5237>   BNE.w do_SetInt__dontpoke
000217E0 <AmiBlitz3.ab2@5238>   MOVE.l destpointer,(A0)
000217E4 <AmiBlitz3.ab2@5241>   MOVE.l intstart0(PC),D1
000217E8 <AmiBlitz3.ab2@5242>   BSR.w writelong
000217EE <AmiBlitz3.ab2@5243>   TST.b debugmode
000217F2 <AmiBlitz3.ab2@5244>    BEQ.w do_SetInt__norerr
000217F4 <AmiBlitz3.ab2@5248>   MOVEQ.l #$02,D1
000217F8 <AmiBlitz3.ab2@5249>   BSR.w writetrap
000217FC <AmiBlitz3.ab2@5250>   BSR.w addoff
00021806 <AmiBlitz3.ab2@5251>   MOVE.l destpointer,intcleanat
0002180A <AmiBlitz3.ab2@5252>   BSR.w writelong
00021810 <AmiBlitz3.ab2@5253>   MOVE.w intlevel,D1
00021814 <AmiBlitz3.ab2@5254>   BSR.w writeword
00021818 <AmiBlitz3.ab2@5255>   MOVE.w #$C30B,D1                                         ;disable stack checks
0002181E <AmiBlitz3.ab2@5256>   JSR Atokejsr
00021822 <AmiBlitz3.ab2@5259>   MOVE.w #$FED3,D1
00021826 <AmiBlitz3.ab2@5260>   BSR.w uselib
0002182A <AmiBlitz3.ab2@5261>   MOVE.w #$C102,D1
00021830 <AmiBlitz3.ab2@5262>   JSR Atokejsr
00021838 <AmiBlitz3.ab2@5263>   MOVE.w #-1,lasta6
00021842 <AmiBlitz3.ab2@5264>   MOVE.l linenumat,intline
00021844 <AmiBlitz3.ab2@5265> RTS
00021846 <AmiBlitz3.ab2@5269>             Ds.w 1                                         ;??looks like obsolved data??
0002184A <AmiBlitz3.ab2@5271> intdata1:   Ds.l 1                                         ;where in data1 a5 is being kept
0002184E <AmiBlitz3.ab2@5273> intjmpat:   Ds.l 1
00021852 <AmiBlitz3.ab2@5274> intline:    Ds.l 1
00021854 <AmiBlitz3.ab2@5275> intstring:  Ds.w 1                                         ;flag 0 = no setint
00021856 <AmiBlitz3.ab2@5278> intlevel:   Ds.w 1
0002185A <AmiBlitz3.ab2@5279> intcleanat: Ds.l 1
0002185E <AmiBlitz3.ab2@5280> ret15add:   Ds.l 1
00021860 <AmiBlitz3.ab2@5281> ret15cc:    Ds.w 1
00021868 <AmiBlitz3.ab2@5285>   ADDI.l #$12,$2(A7)
00021870 <AmiBlitz3.ab2@5286>   MOVE.l $2(A7),ret15add
00021876 <AmiBlitz3.ab2@5287>   MOVE.w (A7),ret15cc
0002187E <AmiBlitz3.ab2@5288>   MOVE.l #directdo,$2(A7)
00021880 <AmiBlitz3.ab2@5289> RTE
00021884 <AmiBlitz3.ab2@5298>   MOVE.l ret15add(PC),-(A7)
00021888 <AmiBlitz3.ab2@5299>   MOVE.w ret15cc(PC),-(A7)                                 ;15*4
0002188C <AmiBlitz3.ab2@5300>   MOVEM.l D0-D7/A0-A6,-(A7)
00021896 <AmiBlitz3.ab2@5301>   MOVE.l destbufferend,trap15temp                          ;store high buff addr
000218A0 <AmiBlitz3.ab2@5302>   MOVE.l destbufferstart,trap15temp2
000218AA <AmiBlitz3.ab2@5303>   MOVE.l libend,templibend
000218B4 <AmiBlitz3.ab2@5304>   MOVE.l data1start,tempdata1start
000218BA <AmiBlitz3.ab2@5305>   CLR.l hunkoffsetcounter
000218C0 <AmiBlitz3.ab2@5307>   MOVE.l directbuffer,a0
000218C6 <AmiBlitz3.ab2@5311>   MOVE.l a0,destbufferstart
000218CC <AmiBlitz3.ab2@5312>   ADD.l #3900,a0
000218D2 <AmiBlitz3.ab2@5313>   MOVE.l a0,destbufferend
000218D8 <AmiBlitz3.ab2@5314>   TST.b exdebug
000218DC <AmiBlitz3.ab2@5315>   BEQ 'l1
000218E2 <AmiBlitz3.ab2@5316>   MOVE.l a0,libend
000218E8 <AmiBlitz3.ab2@5317>   ADD.l #4000,a0
000218EE <AmiBlitz3.ab2@5318>   MOVE.l a0,data1start
000218F8 <AmiBlitz3.ab2@5321>   MOVE.l #dircont,errcont
000218FE <AmiBlitz3.ab2@5322>   MOVE.l A7,errstack
00021906 <AmiBlitz3.ab2@5323>   MOVE.w #$FFFF,dirmode
0002190A <AmiBlitz3.ab2@5325>     MOVEA.l ret15add(PC),A1
00021910 <AmiBlitz3.ab2@5326>     MOVE.w -(A1),blitzmode
00021912 <AmiBlitz3.ab2@5327>     CLR.l -(A1)
00021918 <AmiBlitz3.ab2@5328>     MOVE.l -(A1),firstglob
0002191E <AmiBlitz3.ab2@5329>     MOVE.l -(A1),firstlocal
00021924 <AmiBlitz3.ab2@5331>   CLR.w proceduremode
0002192A <AmiBlitz3.ab2@5332>   MOVE.l firstglob,D0
00021930 <AmiBlitz3.ab2@5333>   OR.l firstlocal,D0
00021934 <AmiBlitz3.ab2@5334>   BEQ.b directdo__skip
0002193A <AmiBlitz3.ab2@5335>   NOT.w proceduremode
0002193C <AmiBlitz3.ab2@5338>   MOVEA.l -(A1),A0                                         ;address of string
0002193E <AmiBlitz3.ab2@5342>   MOVE.l A0,-(A7)
0002197C <AmiBlitz3.ab2@5345>   !ComData_GetL{comFunc_DebugTrap,A1}
0002197E <AmiBlitz3.ab2@5348>   JSR (A1)                                                 ;tokenise line.....
00021980 <AmiBlitz3.ab2@5349>   MOVEA.l (A7)+,A5
0002198A <AmiBlitz3.ab2@5350>   MOVE.l directbuffer,destpointer
00021990 <AmiBlitz3.ab2@5351>   TST.b exdebug
00021994 <AmiBlitz3.ab2@5352>   BEQ 'noexdebug
00021996 <AmiBlitz3.ab2@5353>   MOVE.l a5,a0
0002199C <AmiBlitz3.ab2@5354>   MOVE.l #200,d0
000219A2 <AmiBlitz3.ab2@5357>     MOVE.b 0(a0,d0.l),8(a0,d0.l)
000219A6 <AmiBlitz3.ab2@5358>   DBF d0,'l1
000219AC <AmiBlitz3.ab2@5363>   MOVE.l destpointer,a0
000219B0 <AmiBlitz3.ab2@5364>   MOVE.w #$207c,(a0)+
000219B2 <AmiBlitz3.ab2@5365>   MOVE.l a5,d0
000219B8 <AmiBlitz3.ab2@5366>   ADD.l #$206,d0                                           ;constant from debuglib
000219BA <AmiBlitz3.ab2@5367>   MOVE.l d0,(a0)+
000219C0 <AmiBlitz3.ab2@5368>   MOVE.l a0,destpointer
000219C2 <AmiBlitz3.ab2@5369>   MOVE.l a5,a0
000219C6 <AmiBlitz3.ab2@5370>   MOVE.w #$8039,(a0)+                                      ;TokeJsr 164 (inputoutputlib) LSL 7+4
000219CC <AmiBlitz3.ab2@5371>   MOVE.l #"$520",(a0)+
000219D0 <AmiBlitz3.ab2@5372>   MOVE.w #"4:",(a0)+
000219D6 <AmiBlitz3.ab2@5375>   CLR.w dontwrite
000219DE <AmiBlitz3.ab2@5376>   MOVE.w #$FFFF,lasta6
000219E2 <AmiBlitz3.ab2@5377>   BSR.w compile_line                                        ;.....compile it
000219E8 <AmiBlitz3.ab2@5378>   TST.b exdebug
000219EC <AmiBlitz3.ab2@5379>   BEQ 'noexdebug2
000219F2 <AmiBlitz3.ab2@5380>   JSR JL_0_6C76
000219F8 <AmiBlitz3.ab2@5383>   CLR.w proceduremode
000219FC <AmiBlitz3.ab2@5384>   BSR.w errchx
00021A00 <AmiBlitz3.ab2@5385>   MOVE.w #$4EF9,D1
00021A04 <AmiBlitz3.ab2@5386>   BSR.w writeword                                          ;JMP
00021A08 <AmiBlitz3.ab2@5387>   MOVE.l ret15add(PC),D1
00021A0C <AmiBlitz3.ab2@5388>   BSR.w writelong                                          ;jmp to done
00021A12 <AmiBlitz3.ab2@5389>   MOVE.w dontwrite,D0
00021A16 <AmiBlitz3.ab2@5390>    BNE.w nodirmem
00021A1E <AmiBlitz3.ab2@5391>   MOVE.l directbuffer,$3E(A7)                              ;install code address
00021A24 <AmiBlitz3.ab2@5394>   CLR.w dirmode
00021A2A <AmiBlitz3.ab2@5395>   MOVE.w ret15cc(PC),$3C(A7)
00021A34 <AmiBlitz3.ab2@5396>   MOVE.l trap15temp,destbufferend
00021A3E <AmiBlitz3.ab2@5397>   MOVE.l trap15temp2,destbufferstart
00021A48 <AmiBlitz3.ab2@5398>   MOVE.l tempdata1start,data1start
00021A52 <AmiBlitz3.ab2@5399>   MOVE.l templibend,libend
00021A56 <AmiBlitz3.ab2@5400>   MOVEM.l (A7)+,D0-D7/A0-A6
00021A5A <AmiBlitz3.ab2@5401>   BSR.w Aclearcache                                        ;selden used
00021A5C <AmiBlitz3.ab2@5402> RTR
00021A60 <AmiBlitz3.ab2@5405>   MOVEA.l ret15add(PC),A0
00021A62 <AmiBlitz3.ab2@5406>   SUBQ.w #2,A0
00021A64 <AmiBlitz3.ab2@5407>   MOVE.l D0,-(A0)
00021A68 <AmiBlitz3.ab2@5408> BRA.w direxit
00021A6C <AmiBlitz3.ab2@5412>   MOVE.w $6(A3),D1
00021A70 <AmiBlitz3.ab2@5413>   BSR.w uselib                                             ;get lib for base address
00021A74 <AmiBlitz3.ab2@5414>   MOVE.w $A(A1),-(A7)                                      ;libbase reg
00021A76 <AmiBlitz3.ab2@5415>   ADDQ.w #8,A3
00021A78 <AmiBlitz3.ab2@5416>   MOVE.w (A3)+,-(A7)                                       ;get offset for lib
00021A7A <AmiBlitz3.ab2@5417>   MOVE.l A3,-(A7)
00021A7C <AmiBlitz3.ab2@5421>   MOVEQ.l #$00,D3
00021A82 <AmiBlitz3.ab2@5422>   JSR checka4a5
00021A84 <AmiBlitz3.ab2@5424>   MOVE.b (A3)+,D1
00021A88 <AmiBlitz3.ab2@5425>    BMI.w stamigalib__done
00021A8A <AmiBlitz3.ab2@5426>   MOVEQ.l #$03,D2
00021A8C <AmiBlitz3.ab2@5427>   ADDQ.w #1,D3
00021A90 <AmiBlitz3.ab2@5428>   MOVEM.l D3/A3,-(A7)
00021A96 <AmiBlitz3.ab2@5429>   MOVE.b funcparloop,-(a7)
00021A9E <AmiBlitz3.ab2@5430>   MOVE.b #0,funcparloop
00021AA4 <AmiBlitz3.ab2@5431>   MOVE.l leftsidetype,-(a7)
00021AAA <AmiBlitz3.ab2@5432>   MOVE.l rightsidetype,-(a7)
00021AB0 <AmiBlitz3.ab2@5433>   CLR.l leftsidetype
00021AB6 <AmiBlitz3.ab2@5434>   CLR.l rightsidetype
00021ABC <AmiBlitz3.ab2@5435>   MOVE.b blitzparloop,-(a7)
00021AC4 <AmiBlitz3.ab2@5436>   MOVE.b #1,blitzparloop                                 ;write the parameter to stack
00021ACA <AmiBlitz3.ab2@5437>   JSR peval
00021AD0 <AmiBlitz3.ab2@5438>   MOVE.b (a7)+,blitzparloop
00021AD6 <AmiBlitz3.ab2@5439>   MOVE.l (a7)+,rightsidetype
00021ADC <AmiBlitz3.ab2@5440>   MOVE.l (a7)+,leftsidetype
00021AE2 <AmiBlitz3.ab2@5441>   MOVE.b (a7)+,funcparloop
00021AE6 <AmiBlitz3.ab2@5442>   MOVEM.l (A7)+,D3/A3
00021AEA <AmiBlitz3.ab2@5443>   CMP.w #$2C,D0
00021AEE <AmiBlitz3.ab2@5444>    BEQ.w stamigalib__loop
00021AF0 <AmiBlitz3.ab2@5445>   TST.b (A3)
00021AF4 <AmiBlitz3.ab2@5446>    BPL.w syntaxerr
00021AF6 <AmiBlitz3.ab2@5449>   MOVEA.l (A7)+,A3
00021AF8 <AmiBlitz3.ab2@5450>   SUBQ.w #1,D3
00021AFC <AmiBlitz3.ab2@5451>    BPL.w stamigalib__toend
00021B00 <AmiBlitz3.ab2@5452>    BSR.w get1bytemain                                      ;no pars - get :
00021B04 <AmiBlitz3.ab2@5453> BRA.w stamigalib__nopars
00021B06 <AmiBlitz3.ab2@5456>   TST.b (A3)+                                              ;go to end of params
00021B0A <AmiBlitz3.ab2@5457>    BPL.w stamigalib__toend
00021B0C <AmiBlitz3.ab2@5458>   SUBQ.w #1,A3
00021B0E <AmiBlitz3.ab2@5461>    MOVEQ.l #$00,D1
00021B10 <AmiBlitz3.ab2@5462>    MOVE.b -(A3),D1
00021B14 <AmiBlitz3.ab2@5463>    BTST #$4,D1
00021B18 <AmiBlitz3.ab2@5464>     BNE.w stamigalib__addreg
00021B1A <AmiBlitz3.ab2@5465>    LSL.w #8,D1
00021B1C <AmiBlitz3.ab2@5466>    LSL.w #1,D1
00021B20 <AmiBlitz3.ab2@5467>    ORI.w #$201F,D1
00021B24 <AmiBlitz3.ab2@5468>  BRA.w stamigalib__gotit
00021B28 <AmiBlitz3.ab2@5471>    ANDI.w #$7,D1
00021B2A <AmiBlitz3.ab2@5472>    LSL.w #8,D1
00021B2C <AmiBlitz3.ab2@5473>    LSL.w #1,D1
00021B30 <AmiBlitz3.ab2@5474>    ORI.w #$205F,D1
00021B34 <AmiBlitz3.ab2@5477>     BSR.w writeword
00021B38 <AmiBlitz3.ab2@5478>   DBF D3,stamigalib__loop2
00021B3E <AmiBlitz3.ab2@5481>   MOVE.w (A7)+,libjsr+2
00021B44 <AmiBlitz3.ab2@5482>   MOVE.w (A7)+,libbase+2
00021B4A <AmiBlitz3.ab2@5483>   MOVE.l libbase,D1
00021B4E <AmiBlitz3.ab2@5484>    BSR.w writelong
00021B54 <AmiBlitz3.ab2@5485>   MOVE.l libjsr,D1
00021B5A <AmiBlitz3.ab2@5486>   JSR writelong
00021B60 <AmiBlitz3.ab2@5487>   JSR restorea4a5
00021B62 <AmiBlitz3.ab2@5488>   RTS
00021B68 <AmiBlitz3.ab2@5491>   MOVE.l data1,D4
00021B6E <AmiBlitz3.ab2@5492>   SUB.l data1start,D4
00021B74 <AmiBlitz3.ab2@5493>   ADD.l #10000,d4
00021B7A <AmiBlitz3.ab2@5494>   MOVE.l libend,D3
00021B80 <AmiBlitz3.ab2@5495>   SUB.l destbufferend,D3
00021B86 <AmiBlitz3.ab2@5496>   ADD.l #40000,d3
00021B8C <AmiBlitz3.ab2@5497>   MOVE.l bigpc,D2
00021B92 <AmiBlitz3.ab2@5498>   SUB.l destbufferstart,D2
00021B98 <AmiBlitz3.ab2@5499>   ADD.l #20000,d2
00021B9E <AmiBlitz3.ab2@5500>   MOVE.l databuffer,D5
00021BA4 <AmiBlitz3.ab2@5501>   ADD.l #10000,D5
00021BA8 <AmiBlitz3.ab2@5502> BRA newallox
00021BAE <AmiBlitz3.ab2@5506>   MOVE.l objectbuffer,D2
00021BB0 <AmiBlitz3.ab2@5507>   LSR.l #1,D2
00021BB6 <AmiBlitz3.ab2@5508>   ADD.l objectbuffer,D2
00021BBC <AmiBlitz3.ab2@5509>   MOVE.l libsbuffer,D3
00021BBE <AmiBlitz3.ab2@5510>   LSR.l #1,D3
00021BC4 <AmiBlitz3.ab2@5511>   ADD.l libsbuffer,D3
00021BCA <AmiBlitz3.ab2@5512>   MOVE.l systembuffer,D4
00021BCC <AmiBlitz3.ab2@5513>   LSR.l #1,D4
00021BD2 <AmiBlitz3.ab2@5514>   ADD.l systembuffer,D4
00021BD8 <AmiBlitz3.ab2@5515>   MOVE.l databuffer,D5
00021BDA <AmiBlitz3.ab2@5516>   LSR.l #1,D5
00021BE0 <AmiBlitz3.ab2@5517>   ADD.l databuffer,D5
00021BE4 <AmiBlitz3.ab2@5518> BRA.w newallox
00021BEA <AmiBlitz3.ab2@5522>   MOVE.l bigpc,D2
00021BF0 <AmiBlitz3.ab2@5523>   SUB.l destbufferstart,D2                                     ;size of object buffer
00021BF6 <AmiBlitz3.ab2@5524>   SUB.l savefuncspace,d2
00021BFC <AmiBlitz3.ab2@5526>   TST.w debugversion
00021C00 <AmiBlitz3.ab2@5527>    BNE.b alloxadj__skip
00021C06 <AmiBlitz3.ab2@5528>   ADDI.l #$800,D2
00021C0C <AmiBlitz3.ab2@5531>   MOVE.l libend,D3
00021C12 <AmiBlitz3.ab2@5532>   SUB.l destbufferend,D3
00021C18 <AmiBlitz3.ab2@5534>   MOVE.l data1,D4
00021C1E <AmiBlitz3.ab2@5535>   SUB.l data1start,D4
00021C24 <AmiBlitz3.ab2@5537>   MOVE.l data2,D5
00021C2A <AmiBlitz3.ab2@5538>   SUB.l data2at,D5
00021C30 <AmiBlitz3.ab2@5540>   CLR.l morememadd
00021C34 <AmiBlitz3.ab2@5543>   BSR.w makeallox
00021C38 <AmiBlitz3.ab2@5544>   BNE.w newallox__done
00021C3C <AmiBlitz3.ab2@5545> BRA.w init_buffers
00021C3E <AmiBlitz3.ab2@5548> RTS
00021C44 <AmiBlitz3.ab2@5552>   MOVEA.l _execbase,A6
00021C4A <AmiBlitz3.ab2@5553>   MOVE.l objlen,D0
00021C4E <AmiBlitz3.ab2@5554>   BEQ.w freeallox__skip
00021C54 <AmiBlitz3.ab2@5555>   CLR.l objlen
00021C5A <AmiBlitz3.ab2@5556>   MOVEA.l destbufferstart,A1
00021C60 <AmiBlitz3.ab2@5557>   MOVE.l mempool,a0
00021C64 <AmiBlitz3.ab2@5558> JMP _FreeVec(A6)
00021C66 <AmiBlitz3.ab2@5561> RTS
00021C6C <AmiBlitz3.ab2@5565>   MOVE.l objectbuffer,D2
00021C72 <AmiBlitz3.ab2@5566>   MOVE.l libsbuffer,D3
00021C78 <AmiBlitz3.ab2@5567>   MOVE.l systembuffer,D4
00021C7E <AmiBlitz3.ab2@5568>   MOVE.l databuffer,D5
00021C86 <AmiBlitz3.ab2@5571>   MOVE.w #$FFFF,anyerrs
00021C8A <AmiBlitz3.ab2@5572>   BSR.w freeallox
00021C8C <AmiBlitz3.ab2@5576>   ADDQ.l #1,D2
00021C90 <AmiBlitz3.ab2@5577>   BCLR #$0,D2
00021C92 <AmiBlitz3.ab2@5578>   ADDQ.l #1,D3
00021C96 <AmiBlitz3.ab2@5579>   BCLR #$0,D3
00021C98 <AmiBlitz3.ab2@5580>   ADDQ.l #1,D4
00021C9C <AmiBlitz3.ab2@5581>   BCLR #$0,D4
00021C9E <AmiBlitz3.ab2@5582>   TST.l d5
00021CA2 <AmiBlitz3.ab2@5583>   BNE 'l1
00021CA4 <AmiBlitz3.ab2@5586>   ADDQ.l #1,D5
00021CA8 <AmiBlitz3.ab2@5587>   BCLR #$0,D5
00021CAA <AmiBlitz3.ab2@5588>   MOVE.l D2,D0
00021CAC <AmiBlitz3.ab2@5589>   ADD.l D3,D0
00021CAE <AmiBlitz3.ab2@5590>   ADD.l D4,D0
00021CB0 <AmiBlitz3.ab2@5591>   ADD.l D5,D0
00021CB6 <AmiBlitz3.ab2@5592>   ADD.l #moremem,d0
00021CB8 <AmiBlitz3.ab2@5593>   MOVE.l D0,D6
00021CBE <AmiBlitz3.ab2@5594>   MOVE.l #MemfPublic_MemfClear,D1
00021CC4 <AmiBlitz3.ab2@5595>   MOVE.l mempool,a0
00021CCA <AmiBlitz3.ab2@5596>   MOVEA.l _execbase,A6
00021CCE <AmiBlitz3.ab2@5597>   JSR _AllocVec(a6)                                        ;alloc mem for objectbuffer
00021CD0 <AmiBlitz3.ab2@5599>   TST.l D0
00021CD4 <AmiBlitz3.ab2@5600>   BEQ.w exit_initbuffers
00021CDA <AmiBlitz3.ab2@5601>   MOVE.l D6,objlen
00021CE0 <AmiBlitz3.ab2@5602>   MOVE.l D2,objectbuffer
00021CE6 <AmiBlitz3.ab2@5603>   MOVE.l D3,libsbuffer
00021CEC <AmiBlitz3.ab2@5604>   MOVE.l D4,systembuffer
00021CF2 <AmiBlitz3.ab2@5605>   MOVE.l D5,databuffer
00021CF8 <AmiBlitz3.ab2@5606>   MOVE.l D0,destbufferstart
00021D2C <AmiBlitz3.ab2@5609>   !ComData_SetL{comPtr_DestBufferStart,D0}
00021D2E <AmiBlitz3.ab2@5610>   ADD.l D2,D0
00021D34 <AmiBlitz3.ab2@5611>   MOVE.l D0,destbufferend
00021D36 <AmiBlitz3.ab2@5612>   ADD.l D3,D0
00021D3C <AmiBlitz3.ab2@5613>   MOVE.l D0,data1start
00021D3E <AmiBlitz3.ab2@5614>   ADD.l D4,D0
00021D44 <AmiBlitz3.ab2@5615>   MOVE.l D0,data2at
00021D46 <AmiBlitz3.ab2@5616>   ADD.l D5,D0
00021D4C <AmiBlitz3.ab2@5617>   MOVE.l D0,allat
00021D4E <AmiBlitz3.ab2@5620> RTS
00021D52 <AmiBlitz3.ab2@5624>   Dc.b $00,$00,$00,$01                                     ;         1
00021D56 <AmiBlitz3.ab2@5625>   Dc.b $00,$00,$00,$0A                                     ;        10
00021D5A <AmiBlitz3.ab2@5626>   Dc.b $00,$00,$00,$64                                     ;       100
00021D5E <AmiBlitz3.ab2@5627>   Dc.b $00,$00,$03,$E8                                     ;      1000
00021D62 <AmiBlitz3.ab2@5628>   Dc.b $00,$00,$27,$10                                     ;     10000
00021D66 <AmiBlitz3.ab2@5629>   Dc.b $00,$01,$86,$A0                                     ;    100000
00021D6A <AmiBlitz3.ab2@5630>   Dc.b $00,$0F,$42,$40                                     ;   1000000
00021D6E <AmiBlitz3.ab2@5631>   Dc.b $00,$98,$96,$80                                     ;  10000000
00021D72 <AmiBlitz3.ab2@5632>   Dc.b $05,$F5,$E1,$00                                     ; 100000000
00021D76 <AmiBlitz3.ab2@5633>   Dc.b $3B,$9A,$CA,$00                                     ;1000000000
00021D78 <AmiBlitz3.ab2@5637>   MOVEQ.l #$00,D1                                          ;no zero printed
00021D7A <AmiBlitz3.ab2@5638>   MOVEQ.l #$24,D3                                          ; "$"
00021D7C <AmiBlitz3.ab2@5641>   MOVEQ.l #$30,D4                                          ; "0"
00021D80 <AmiBlitz3.ab2@5644>     CMP.l divisors(PC,D3.W),D2
00021D84 <AmiBlitz3.ab2@5645>     BCS.w makelong__skip
00021D88 <AmiBlitz3.ab2@5646>     SUB.l divisors(PC,D3.W),D2
00021D8A <AmiBlitz3.ab2@5647>     ADDQ.w #1,D4
00021D8E <AmiBlitz3.ab2@5648> BRA.w makelong__loop2
00021D92 <AmiBlitz3.ab2@5651>   CMP.b #"0",D4
00021D96 <AmiBlitz3.ab2@5652>   BNE.w makelong__doit
00021D98 <AmiBlitz3.ab2@5653>   TST.w D1
00021D9C <AmiBlitz3.ab2@5654>   BEQ.w makelong__skip2
00021D9E <AmiBlitz3.ab2@5657>   MOVE.b D4,(A0)+
00021DA0 <AmiBlitz3.ab2@5658>   MOVEQ.l #$01,D1
00021DA2 <AmiBlitz3.ab2@5661>   SUBQ.w #4,D3
00021DA6 <AmiBlitz3.ab2@5662>   BPL.w makelong__loop
00021DA8 <AmiBlitz3.ab2@5663>   TST.w D1
00021DAC <AmiBlitz3.ab2@5664>   BNE.w makelong__skip3
00021DB0 <AmiBlitz3.ab2@5665>   MOVE.b #"0",(A0)+
00021DB2 <AmiBlitz3.ab2@5668>   CLR.b (A0)
00021DB4 <AmiBlitz3.ab2@5669> RTS
00021DD4 <AmiBlitz3.ab2@5672> str_residentrequester:  Dc.b "Name of Resident File to Create",0 : Even        ;restext org source
00021E94 <AmiBlitz3.ab2@5673> str_residentpath:       Ds.l 48                                                ;respath org source
00021F54 <AmiBlitz3.ab2@5674> str_residentname:       Ds.l 48                                                ;resname org source
00021F5A <AmiBlitz3.ab2@5678>   MOVE.l macrobase,D0
00021F5E <AmiBlitz3.ab2@5679>    BNE.w create_residentfile
00021F64 <AmiBlitz3.ab2@5680>   MOVE.l newtype_string,D0
00021F68 <AmiBlitz3.ab2@5681>    BNE.w create_residentfile
00021F6E <AmiBlitz3.ab2@5682>   MOVEA.l labelbase,A2
00021F72 <AmiBlitz3.ab2@5685>     CMPA.w #$0,A2
00021F76 <AmiBlitz3.ab2@5686>      BEQ.w menu_createresidentfile__err
00021F7E <AmiBlitz3.ab2@5687>     CMPI.l #$1,$4(A2)
00021F82 <AmiBlitz3.ab2@5688>      BEQ.w create_residentfile
00021F84 <AmiBlitz3.ab2@5689>     MOVEA.l (A2),A2
00021F88 <AmiBlitz3.ab2@5690> BRA.w menu_createresidentfile__loop
00021FB2 <AmiBlitz3.ab2@5693>   !basic
00022008 <AmiBlitz3.ab2@5694> 
00022026 <AmiBlitz3.ab2@5695>   !asm
00022028 <AmiBlitz3.ab2@5696> RTS
00022066 <AmiBlitz3.ab2@5702>   !ComData_GetL{comFunc_ASLFileRequest,A3}
0002206C <AmiBlitz3.ab2@5703>   LEA str_residentrequester,A2
00022072 <AmiBlitz3.ab2@5704>   LEA str_residentpath,A0
00022078 <AmiBlitz3.ab2@5705>   LEA str_residentname,A1
000220A2 <AmiBlitz3.ab2@5706>   !basic
000220DA <AmiBlitz3.ab2@5707>     Poke$ ?str_residentpath,my_residentsdir$
00022106 <AmiBlitz3.ab2@5708>     Poke$ ?str_residentname,".res"
00022124 <AmiBlitz3.ab2@5709>   !asm
00022126 <AmiBlitz3.ab2@5712>   JSR (A3)
0002212A <AmiBlitz3.ab2@5714>   BEQ.w menu_createresidentfile__err
0002212C <AmiBlitz3.ab2@5717>   MOVE.l D0,D1
00022132 <AmiBlitz3.ab2@5718>   MOVE.l #HUNK_RELOC_8__MODE_NEWFILE,D2
00022136 <AmiBlitz3.ab2@5719>   MOVEA.l _dosbase(PC),A6
0002213A <AmiBlitz3.ab2@5720>   JSR _Open(A6)
0002213C <AmiBlitz3.ab2@5721>   MOVE.l D0,D7                                             ;handle
00022140 <AmiBlitz3.ab2@5722>   BEQ.w menu_createresidentfile__err
00022144 <AmiBlitz3.ab2@5723>   MOVEM.l d2-d7/a0-a6,-(a7)
0002214A <AmiBlitz3.ab2@5724>   LEA devo,a0
00022150 <AmiBlitz3.ab2@5725>   LEA ptr_parameterstore,a1
00022152 <AmiBlitz3.ab2@5728>     MOVE.b (a0)+,(a1)+
00022156 <AmiBlitz3.ab2@5729>   BNE 'l1
00022158 <AmiBlitz3.ab2@5730>   MOVEQ #13,d2
0002215E <AmiBlitz3.ab2@5731>   JSR findlabel2
00022162 <AmiBlitz3.ab2@5732>   BNE 'd
00022166 <AmiBlitz3.ab2@5733>   TST.l 8(a2)
0002216A <AmiBlitz3.ab2@5734>   BEQ 'd2
00022194 <AmiBlitz3.ab2@5735>   !basic
000221EA <AmiBlitz3.ab2@5736>     error{!TRANS{"Cannot create Resident with develope debug 1"}}
00022208 <AmiBlitz3.ab2@5737>   !asm
0002220C <AmiBlitz3.ab2@5738>   MOVEM.l (a7)+,d2-d7/a0-a6
00022210 <AmiBlitz3.ab2@5739>   MOVEA.l _dosbase(PC),A6
00022212 <AmiBlitz3.ab2@5740>   MOVE.l d7,d1
00022216 <AmiBlitz3.ab2@5741>   JSR _Close(a6)
0002221A <AmiBlitz3.ab2@5742> BRA menu_createresidentfile__err
0002221E <AmiBlitz3.ab2@5746>   MOVEM.l (a7)+,d2-d7/a0-a6
00022222 <AmiBlitz3.ab2@5747>   BSR.w call_setpointerbusy
00022226 <AmiBlitz3.ab2@5749>   BSR.w AJL_0_7962
00022228 <AmiBlitz3.ab2@5750>   MOVE.l D7,D1
0002222E <AmiBlitz3.ab2@5751>   MOVE.l #tsthead,D2                                       ;header
00022230 <AmiBlitz3.ab2@5752>   MOVEQ.l #$20,D3
00022234 <AmiBlitz3.ab2@5753>   MOVEA.l _dosbase(PC),A6
00022238 <AmiBlitz3.ab2@5754>   JSR _Write(A6)
0002223A <AmiBlitz3.ab2@5755>   MOVEQ.l #$00,D6                                          ;offset from start of file!
0002223E <AmiBlitz3.ab2@5756>   BSR.w restypes
00022242 <AmiBlitz3.ab2@5757>   BSR.w resmacs
00022246 <AmiBlitz3.ab2@5758>   BSR.w resconsts
00022248 <AmiBlitz3.ab2@5759>   MOVE.l D6,D3
0002224A <AmiBlitz3.ab2@5760>   ADDQ.l #3,D3
00022250 <AmiBlitz3.ab2@5761>   ANDI.l #$FFFFFFFC,D3                                    ;long word align
00022252 <AmiBlitz3.ab2@5762>   MOVE.l D3,-(A7)
00022254 <AmiBlitz3.ab2@5763>   SUB.l D6,D3
00022258 <AmiBlitz3.ab2@5764>   BEQ.w menu_createresidentfile__noalign
0002225E <AmiBlitz3.ab2@5765>   MOVE.l #writelist,D2
00022260 <AmiBlitz3.ab2@5766>   MOVE.l D7,D1
00022266 <AmiBlitz3.ab2@5767>   MOVEA.l _dosbase,A6
0002226A <AmiBlitz3.ab2@5768>   JSR _Write(A6)
00022274 <AmiBlitz3.ab2@5771>    MOVE.l hunkoffsetcounter,tstsize3
00022278 <AmiBlitz3.ab2@5772>    BEQ.w menu_createresidentfile__skip2a
0002227A <AmiBlitz3.ab2@5773>   MOVE.l D7,D1
00022280 <AmiBlitz3.ab2@5774>   MOVE.l #tstend,D2
00022282 <AmiBlitz3.ab2@5775>   MOVEQ.l #$0C,D3
00022288 <AmiBlitz3.ab2@5776>   MOVEA.l _dosbase,A6
0002228C <AmiBlitz3.ab2@5777>    JSR _Write(A6)
00022292 <AmiBlitz3.ab2@5781>   MOVEA.l hunkoffsetbase,A2
00022296 <AmiBlitz3.ab2@5784>   CMPA.w #$0,A2
0002229A <AmiBlitz3.ab2@5785>    BEQ.w menu_createresidentfile__skip2
0002229E <AmiBlitz3.ab2@5786>   LEA $4(A2),A1
000222A0 <AmiBlitz3.ab2@5787>   MOVE.l D7,D1
000222A2 <AmiBlitz3.ab2@5788>   MOVE.l A1,D2
000222A4 <AmiBlitz3.ab2@5789>   MOVEQ.l #$04,D3
000222AA <AmiBlitz3.ab2@5790>   MOVEA.l _dosbase,A6
000222AE <AmiBlitz3.ab2@5791>    JSR _Write(A6)
000222B0 <AmiBlitz3.ab2@5792>   MOVEA.l (A2),A2
000222B4 <AmiBlitz3.ab2@5793> BRA.w menu_createresidentfile__oloop
000222B6 <AmiBlitz3.ab2@5796>   MOVE.l D7,D1
000222BC <AmiBlitz3.ab2@5797>   MOVE.l #zero,D2
000222BE <AmiBlitz3.ab2@5798>   MOVEQ.l #$04,D3
000222C4 <AmiBlitz3.ab2@5799>   MOVEA.l _dosbase,A6
000222C8 <AmiBlitz3.ab2@5800>   JSR _Write(A6)
000222CA <AmiBlitz3.ab2@5803>   MOVE.l D7,D1
000222D0 <AmiBlitz3.ab2@5804>   MOVE.l #tstdone,D2
000222D2 <AmiBlitz3.ab2@5805>   MOVEQ.l #$04,D3
000222D8 <AmiBlitz3.ab2@5806>   MOVEA.l _dosbase,A6
000222DC <AmiBlitz3.ab2@5807>    JSR _Write(A6)
000222DE <AmiBlitz3.ab2@5808>   MOVE.l (A7)+,D0
000222E0 <AmiBlitz3.ab2@5809>   LSR.l #2,D0
000222E6 <AmiBlitz3.ab2@5810>   MOVE.l D0,temp1
000222E8 <AmiBlitz3.ab2@5811>   MOVE.l D7,D1
000222EA <AmiBlitz3.ab2@5812>   MOVEQ.l #$14,D2
000222EC <AmiBlitz3.ab2@5813>   MOVEQ.l #-$01,D3
000222F0 <AmiBlitz3.ab2@5814>   JSR _Seek(A6)
000222F2 <AmiBlitz3.ab2@5815>   MOVE.l D7,D1
000222F8 <AmiBlitz3.ab2@5816>   MOVE.l #temp1,D2
000222FA <AmiBlitz3.ab2@5817>   MOVEQ.l #$04,D3
000222FE <AmiBlitz3.ab2@5818>    JSR _Write(A6)
00022300 <AmiBlitz3.ab2@5819>   MOVE.l D7,D1
00022302 <AmiBlitz3.ab2@5820>   MOVEQ.l #$1C,D2
00022304 <AmiBlitz3.ab2@5821>   MOVEQ.l #-$01,D3
00022308 <AmiBlitz3.ab2@5822>    JSR _Seek(A6)
0002230A <AmiBlitz3.ab2@5823>   MOVE.l D7,D1
00022310 <AmiBlitz3.ab2@5824>   MOVE.l #temp1,D2
00022312 <AmiBlitz3.ab2@5825>   MOVEQ.l #$04,D3
00022316 <AmiBlitz3.ab2@5826>    JSR _Write(A6)
00022318 <AmiBlitz3.ab2@5827>   MOVE.l D7,D1
0002231C <AmiBlitz3.ab2@5828>    JSR _Close(A6)
00022320 <AmiBlitz3.ab2@5829> BRA.w call_setpointernormal
00022322 <AmiBlitz3.ab2@5833>   ADDQ.w #5,D1
00022324 <AmiBlitz3.ab2@5834>   ADDQ.b #8,D0
00022328 <AmiBlitz3.ab2@5837>     CMPA.w #$0,A2
0002232C <AmiBlitz3.ab2@5838>     BEQ.w writelist__done
00022330 <AmiBlitz3.ab2@5839>      BSR.w writeitem
00022332 <AmiBlitz3.ab2@5840>     MOVEA.l (A2),A2
00022336 <AmiBlitz3.ab2@5841> BRA.w writelist__loop
00022338 <AmiBlitz3.ab2@5844> RTS
0002233A <AmiBlitz3.ab2@5847>   MOVEQ.l #$00,D3
0002233E <AmiBlitz3.ab2@5848>   MOVE.b $0(A2,D5.W),D3
00022340 <AmiBlitz3.ab2@5849>   ADDQ.w #1,D3
00022344 <AmiBlitz3.ab2@5850>   BCLR #$0,D3                                              ;word align
00022346 <AmiBlitz3.ab2@5851>   MOVE.l (A2),-(A7)
0002234A <AmiBlitz3.ab2@5852>    BEQ.w writeitem__skip
0002234E <AmiBlitz3.ab2@5853>    BSR.w resoff
00022350 <AmiBlitz3.ab2@5854>   ADD.l D3,D6
00022352 <AmiBlitz3.ab2@5855>   MOVE.l D6,(A2)
00022354 <AmiBlitz3.ab2@5856>   SUB.l D3,D6
00022356 <AmiBlitz3.ab2@5859>    ADD.l D3,D6
00022358 <AmiBlitz3.ab2@5860>   MOVE.l A2,D2
0002235A <AmiBlitz3.ab2@5861>   MOVE.l D7,D1
00022360 <AmiBlitz3.ab2@5862>   MOVEA.l _dosbase,A6
00022364 <AmiBlitz3.ab2@5863>    JSR _Write(A6)
00022366 <AmiBlitz3.ab2@5864>   MOVE.l (A7)+,(A2)
00022368 <AmiBlitz3.ab2@5865> RTS
0002236A <AmiBlitz3.ab2@5868>   MOVE.l D6,D2
0002236E <AmiBlitz3.ab2@5869> BRA.w addhunkoffset
00022372 <AmiBlitz3.ab2@5873>     CMPA.w #$0,A2
00022376 <AmiBlitz3.ab2@5874>      BEQ.w writeoffs__done
0002237C <AmiBlitz3.ab2@5875>     MOVEA.l newtypebase,A1
0002237E <AmiBlitz3.ab2@5876>     MOVEQ.l #$00,D1
00022382 <AmiBlitz3.ab2@5879>       CMPA.w #$0,A1
00022386 <AmiBlitz3.ab2@5880>       BEQ.w writeoffs__found
0002238A <AmiBlitz3.ab2@5881>       CMPA.l $A(A2),A1
0002238E <AmiBlitz3.ab2@5882>        BEQ.w writeoffs__found
00022390 <AmiBlitz3.ab2@5883>       ADDQ.w #1,D1
00022392 <AmiBlitz3.ab2@5884>       MOVEA.l (A1),A1
00022396 <AmiBlitz3.ab2@5885> BRA.w writeoffs__loop2
0002239A <AmiBlitz3.ab2@5888>     MOVE.w $A(A2),-(A7)
0002239E <AmiBlitz3.ab2@5889>     MOVE.w D1,$A(A2)
000223A2 <AmiBlitz3.ab2@5890>      BSR.w writeitem
000223A6 <AmiBlitz3.ab2@5891>     MOVE.w (A7)+,$A(A2)
000223A8 <AmiBlitz3.ab2@5892>     MOVEA.l (A2),A2
000223AC <AmiBlitz3.ab2@5893> BRA.w writeoffs
000223AE <AmiBlitz3.ab2@5896> RTS
000223B0 <AmiBlitz3.ab2@5900>   MOVEQ.l #$00,D0
000223B4 <AmiBlitz3.ab2@5903>   CMPA.w #$0,A2
000223B8 <AmiBlitz3.ab2@5904>    BEQ.w countem__done
000223BA <AmiBlitz3.ab2@5905>   ADDQ.w #1,D0
000223BC <AmiBlitz3.ab2@5906>   MOVEA.l (A2),A2
000223C0 <AmiBlitz3.ab2@5907> BRA.w countem__loop
000223C6 <AmiBlitz3.ab2@5910>   MOVE.w D0,temp1
000223C8 <AmiBlitz3.ab2@5911>   MOVE.l D7,D1
000223CE <AmiBlitz3.ab2@5912>   MOVE.l #temp1,D2
000223D0 <AmiBlitz3.ab2@5913>   MOVEQ.l #$02,D3
000223D2 <AmiBlitz3.ab2@5914>   ADDQ.l #2,D6
000223D8 <AmiBlitz3.ab2@5915>   MOVEA.l _dosbase,A6
000223DC <AmiBlitz3.ab2@5916> JMP _Write(A6)
000223E2 <AmiBlitz3.ab2@5920>    TST.b resdisable
000223E6 <AmiBlitz3.ab2@5921>    BEQ resmacs__l1
000223EC <AmiBlitz3.ab2@5922>    MOVE.l currentmacroaddr,a3
000223F2 <AmiBlitz3.ab2@5923>    CMP.l #0,a3
000223F6 <AmiBlitz3.ab2@5924>    BEQ resmacs__l1
000223F8 <AmiBlitz3.ab2@5925>    MOVE.l (a3),a3
000223FC <AmiBlitz3.ab2@5926> BRA resmacs__l2
00022402 <AmiBlitz3.ab2@5929>   MOVEA.l macrobase,A3                                     ;??begin org code??
00022404 <AmiBlitz3.ab2@5932>   MOVEA.l A3,A2
00022408 <AmiBlitz3.ab2@5933>   BSR.w countem
0002240C <AmiBlitz3.ab2@5936>    CMPA.w #$0,A3
00022410 <AmiBlitz3.ab2@5937>    BEQ.w resmacs__done
00022412 <AmiBlitz3.ab2@5938>   MOVE.l D6,D5
00022414 <AmiBlitz3.ab2@5939>   MOVE.l (A3),-(A7)
00022418 <AmiBlitz3.ab2@5940>   MOVE.l $4(A3),-(A7)
0002241A <AmiBlitz3.ab2@5941>   MOVEQ.l #$00,D3
0002241E <AmiBlitz3.ab2@5942>   MOVE.b $C(A3),D3
00022420 <AmiBlitz3.ab2@5943>   ADDQ.w #1,D3
00022424 <AmiBlitz3.ab2@5944>   BCLR #$0,D3
00022426 <AmiBlitz3.ab2@5945>   ADD.l D3,D6                                              ;add len of struct
0002242A <AmiBlitz3.ab2@5946>   TST.w $8(A3)
0002242E <AmiBlitz3.ab2@5947>    BEQ.w resmacs__notext
00022432 <AmiBlitz3.ab2@5948>   MOVE.l D6,$4(A3)
00022434 <AmiBlitz3.ab2@5949>   MOVE.l D5,D2
00022436 <AmiBlitz3.ab2@5950>   ADDQ.l #4,D2
0002243A <AmiBlitz3.ab2@5951>    BSR.w addhunkoffset
0002243C <AmiBlitz3.ab2@5954>   MOVEQ.l #$00,D4
00022440 <AmiBlitz3.ab2@5955>   MOVE.w $8(A3),D4
00022442 <AmiBlitz3.ab2@5956>   ADDQ.w #1,D4
00022446 <AmiBlitz3.ab2@5957>   BCLR #$0,D4
00022448 <AmiBlitz3.ab2@5958>   ADD.l D4,D6
0002244A <AmiBlitz3.ab2@5959>   TST.l (A3)
0002244E <AmiBlitz3.ab2@5960>    BEQ.w resmacs__nomore
00022450 <AmiBlitz3.ab2@5961>   MOVE.l D6,(A3)
00022452 <AmiBlitz3.ab2@5962>   MOVE.l D5,D2
00022456 <AmiBlitz3.ab2@5963>    BSR.w addhunkoffset
00022458 <AmiBlitz3.ab2@5966>   MOVE.l A3,D2
0002245A <AmiBlitz3.ab2@5967>   MOVE.l D7,D1
00022460 <AmiBlitz3.ab2@5969>    MOVEA.l _dosbase,A6
00022464 <AmiBlitz3.ab2@5970>    JSR _Write(a6)
00022466 <AmiBlitz3.ab2@5971>   TST.l D4
0002246A <AmiBlitz3.ab2@5972>    BEQ.w resmacs__skip
0002246C <AmiBlitz3.ab2@5973>   MOVE.l (A7),D2
0002246E <AmiBlitz3.ab2@5974>   MOVE.l D4,D3
00022470 <AmiBlitz3.ab2@5975>   MOVE.l D7,D1
00022476 <AmiBlitz3.ab2@5977>     MOVEA.l _dosbase,A6
0002247A <AmiBlitz3.ab2@5978>    JSR _Write(A6)
0002247E <AmiBlitz3.ab2@5981>   MOVE.l (A7)+,$4(A3)
00022480 <AmiBlitz3.ab2@5982>   MOVE.l (A7)+,(A3)
00022482 <AmiBlitz3.ab2@5983>   MOVEA.l (A3),A3
00022486 <AmiBlitz3.ab2@5984> BRA.w resmacs__loop
00022488 <AmiBlitz3.ab2@5987> RTS
0002248E <AmiBlitz3.ab2@5991>   TST.b resdisable
00022492 <AmiBlitz3.ab2@5992>   BEQ restypes__l1
00022498 <AmiBlitz3.ab2@5993>   MOVE.l lastrestype,a3
0002249E <AmiBlitz3.ab2@5994>   CMP.l #0,a3
000224A2 <AmiBlitz3.ab2@5995>   BEQ restypes__l1
000224A4 <AmiBlitz3.ab2@5996>   MOVE.l (a3),a3
000224A8 <AmiBlitz3.ab2@5997> BRA restypes__l2
000224AE <AmiBlitz3.ab2@6000>   MOVEA.l newtype_string,A3
000224B0 <AmiBlitz3.ab2@6003>   MOVEA.l A3,A2
000224B4 <AmiBlitz3.ab2@6004>    BSR.w countem
000224B8 <AmiBlitz3.ab2@6007>    CMPA.w #$0,A3
000224BC <AmiBlitz3.ab2@6008>    BEQ.w restypes__done
000224BE <AmiBlitz3.ab2@6009>   MOVE.l D6,-(A7)
000224C2 <AmiBlitz3.ab2@6010>   MOVEA.l $4(A3),A2
000224C4 <AmiBlitz3.ab2@6011>   MOVEQ.l #$0E,D5
000224C8 <AmiBlitz3.ab2@6012>    BSR.w writeoffs
000224CA <AmiBlitz3.ab2@6013>   MOVE.l (A7)+,D0
000224CE <AmiBlitz3.ab2@6014>   MOVE.l $4(A3),-(A7)
000224D2 <AmiBlitz3.ab2@6015>   MOVE.l D0,$4(A3)
000224D4 <AmiBlitz3.ab2@6016>   MOVE.l D6,D2
000224D6 <AmiBlitz3.ab2@6017>   ADDQ.l #4,D2
000224DA <AmiBlitz3.ab2@6018>    BSR.w addhunkoffset
000224DC <AmiBlitz3.ab2@6019>   MOVEQ.l #$00,D3
000224E0 <AmiBlitz3.ab2@6020>   MOVE.b $A(A3),D3
000224E2 <AmiBlitz3.ab2@6021>   ADDQ.w #1,D3
000224E6 <AmiBlitz3.ab2@6022>   BCLR #$0,D3
000224E8 <AmiBlitz3.ab2@6023>   ADD.l D3,D6
000224EA <AmiBlitz3.ab2@6024>   MOVE.l A3,D2
000224EC <AmiBlitz3.ab2@6025>   MOVE.l D7,D1
000224F2 <AmiBlitz3.ab2@6027>     MOVEA.l _dosbase,A6
000224F6 <AmiBlitz3.ab2@6028>     JSR _Write(A6)
000224FA <AmiBlitz3.ab2@6029>   MOVE.l (A7)+,$4(A3)
000224FC <AmiBlitz3.ab2@6030>   MOVEA.l (A3),A3
00022500 <AmiBlitz3.ab2@6031> BRA.w restypes__loop
00022502 <AmiBlitz3.ab2@6034> RTS
00022508 <AmiBlitz3.ab2@6038>    TST.b resdisable
0002250C <AmiBlitz3.ab2@6039>    BEQ resconsts__l1
00022512 <AmiBlitz3.ab2@6040>    MOVE.l currentlabeladdr,a2
00022518 <AmiBlitz3.ab2@6041>    CMP.l #0,a2
0002251C <AmiBlitz3.ab2@6042>    BEQ resconsts__l1
0002251E <AmiBlitz3.ab2@6043>    MOVE.l (a2),a2
00022522 <AmiBlitz3.ab2@6044> BRA resconsts__l2
00022528 <AmiBlitz3.ab2@6047>    MOVEA.l labelbase,A2
0002252A <AmiBlitz3.ab2@6050>    MOVEQ.l #$00,D0
0002252E <AmiBlitz3.ab2@6053>    CMPA.w #$0,A2
00022532 <AmiBlitz3.ab2@6054>    BEQ.w resconsts__done
0002253A <AmiBlitz3.ab2@6055>   CMPI.l #$1,$4(A2)
0002253E <AmiBlitz3.ab2@6056>    BNE.w resconsts__next
00022540 <AmiBlitz3.ab2@6057>   ADDQ.w #1,D0
00022542 <AmiBlitz3.ab2@6060>   MOVEA.l (A2),A2
00022546 <AmiBlitz3.ab2@6061> BRA.w resconsts__loop
0002254C <AmiBlitz3.ab2@6064>   MOVE.w D0,temp1
0002254E <AmiBlitz3.ab2@6065>   MOVE.l D7,D1
00022554 <AmiBlitz3.ab2@6066>   MOVE.l #temp1,D2
00022556 <AmiBlitz3.ab2@6067>   MOVEQ.l #$02,D3
00022558 <AmiBlitz3.ab2@6068>   ADDQ.l #2,D6
0002255E <AmiBlitz3.ab2@6070>     MOVEA.l _dosbase,A6
00022562 <AmiBlitz3.ab2@6071>     JSR _Write(A6)
00022568 <AmiBlitz3.ab2@6072>    TST.b resdisable
0002256C <AmiBlitz3.ab2@6073>    BEQ resconsts__done_l1
00022572 <AmiBlitz3.ab2@6074>    MOVE.l currentlabeladdr,a2
00022578 <AmiBlitz3.ab2@6075>    CMP.l #0,a2
0002257C <AmiBlitz3.ab2@6076>    BEQ resconsts__done_l1
0002257E <AmiBlitz3.ab2@6077>    MOVE.l (a2),a2
00022582 <AmiBlitz3.ab2@6078> BRA resconsts__loop2
00022588 <AmiBlitz3.ab2@6081>    MOVEA.l labelbase,A2                                    ;write resident labels
0002258C <AmiBlitz3.ab2@6084>    CMPA.w #$0,A2
00022590 <AmiBlitz3.ab2@6085>    BEQ.w resconsts__done2
00022598 <AmiBlitz3.ab2@6086>   CMPI.l #$1,$4(A2)
0002259C <AmiBlitz3.ab2@6087>    BNE.w resconsts__next2
0002259E <AmiBlitz3.ab2@6088>    MOVEQ.l #$00,D3
000225A2 <AmiBlitz3.ab2@6089>   MOVE.b $12(A2),D3                                        ;length
000225A4 <AmiBlitz3.ab2@6090>   ADDQ.w #1,D3
000225A8 <AmiBlitz3.ab2@6091>   BCLR #$0,D3
000225AA <AmiBlitz3.ab2@6092>   MOVE.l D6,D2
000225AC <AmiBlitz3.ab2@6093>   ADD.l D3,D6
000225AE <AmiBlitz3.ab2@6096>   MOVE.l (A2),-(A7)
000225B0 <AmiBlitz3.ab2@6097>   TST.l (A2)
000225B4 <AmiBlitz3.ab2@6098>    BEQ.w resconsts__nonext
000225B6 <AmiBlitz3.ab2@6099>   MOVE.l D6,(A2)
000225BA <AmiBlitz3.ab2@6100>    BSR.w addhunkoffset
000225BC <AmiBlitz3.ab2@6103>   MOVE.l A2,D2
000225BE <AmiBlitz3.ab2@6104>   MOVE.l D7,D1
000225C4 <AmiBlitz3.ab2@6106>     MOVEA.l _dosbase,A6
000225C8 <AmiBlitz3.ab2@6107>     JSR _Write(A6)
000225CA <AmiBlitz3.ab2@6108>   MOVE.l (A7)+,(A2)
000225CC <AmiBlitz3.ab2@6111>   MOVEA.l (A2),A2
000225D0 <AmiBlitz3.ab2@6112> BRA.w resconsts__loop2
000225D2 <AmiBlitz3.ab2@6115> RTS
000225FC <AmiBlitz3.ab2@6119>    !basic
00022602 <AmiBlitz3.ab2@6120>     MOVE.l ptr_resfile,d0
00022612 <AmiBlitz3.ab2@6121>     resfileP.l = Peek.l(?ptr_resfile)
0002261C <AmiBlitz3.ab2@6122>     If resfileP
00022644 <AmiBlitz3.ab2@6123>       resfile$ = Peek.s(resfileP)
00022690 <AmiBlitz3.ab2@6124>       tests.b = Instr(resfile$,"/")
000226DC <AmiBlitz3.ab2@6125>       testc.b = Instr(resfile$,":")
000226FE <AmiBlitz3.ab2@6126>       If tests=0 AND testc=0
0002277E <AmiBlitz3.ab2@6127>         resfile$ = dos_AddPart{my_residentsdir$,resfile$}
00022790 <AmiBlitz3.ab2@6128>         Poke.l ?ptr_resfile,&resfile$
00022796 <AmiBlitz3.ab2@6130>     Else
000227C4 <AmiBlitz3.ab2@6131>       error{"INTERNAL: Invalid pointer in ptr_resfile!"}
000227E2 <AmiBlitz3.ab2@6133>    !asm
000227E4 <AmiBlitz3.ab2@6134> RTS
000227EA <AmiBlitz3.ab2@6138>   MOVE.l A7,errstack
000227F4 <AmiBlitz3.ab2@6140>   MOVE.l #next_resentry,errcont
000227FC <AmiBlitz3.ab2@6141>   MOVE.w #$FFFF,ezerr
00022800 <AmiBlitz3.ab2@6142>   BSR.w Aclearallvars
00022804 <AmiBlitz3.ab2@6143>   BSR.w free_residents
0002280A <AmiBlitz3.ab2@6145>   LEA residents_table,A5
0002280C <AmiBlitz3.ab2@6146>   MOVEQ.l #$07,D6
0002280E <AmiBlitz3.ab2@6149>     TST.b (A5)
00022812 <AmiBlitz3.ab2@6150>     BEQ.w next_resentry
00022818 <AmiBlitz3.ab2@6151>     MOVE.l A5,ptr_resfile
0002281C <AmiBlitz3.ab2@6152>     BSR check_residentpath
00022822 <AmiBlitz3.ab2@6153>     MOVE.l ptr_resfile,d1
00022828 <AmiBlitz3.ab2@6154>     MOVEA.l _dosbase,A6
0002282C <AmiBlitz3.ab2@6155>     JSR _LoadSeg(A6)
00022830 <AmiBlitz3.ab2@6156>     MOVE.l D0,$40(A5)
00022834 <AmiBlitz3.ab2@6157>     BNE.w reloadresident__yeah
00022838 <AmiBlitz3.ab2@6158>     BSR.w reserr
0002283A <AmiBlitz3.ab2@6161>     MOVEA.l D0,A3
0002283C <AmiBlitz3.ab2@6162>     ADDA.l A3,A3
0002283E <AmiBlitz3.ab2@6163>     ADDA.l A3,A3
00022840 <AmiBlitz3.ab2@6164>     ADDQ.w #4,A3                                           ;start of res
00022844 <AmiBlitz3.ab2@6165>     BSR.w JL_0_5A9E
00022848 <AmiBlitz3.ab2@6166>     BSR.w JL_0_5A62                                        ;add macros to list
0002284C <AmiBlitz3.ab2@6167>     BSR.w JL_0_5A32                                        ;read labels
00022850 <AmiBlitz3.ab2@6170>     LEA ResidentEntryStep(A5),A5       ;$44
00022854 <AmiBlitz3.ab2@6171>   DBF D6,reloadresident__loop
0002285E <AmiBlitz3.ab2@6176>   MOVE.l #free_residents,errcont
00022864 <AmiBlitz3.ab2@6178>   MOVEA.l newtype_string,A3
00022866 <AmiBlitz3.ab2@6179>   MOVEQ.l #$0B,D7
0002286A <AmiBlitz3.ab2@6180>   BSR.w checkclash
00022870 <AmiBlitz3.ab2@6182>   MOVEA.l macrobase,A3
00022872 <AmiBlitz3.ab2@6183>   MOVEQ.l #$d,D7
00022876 <AmiBlitz3.ab2@6184>   BSR.w checkclash
0002287C <AmiBlitz3.ab2@6186>   MOVEA.l firstconst,A3
0002287E <AmiBlitz3.ab2@6187>   MOVEQ.l #$19,D7
00022882 <AmiBlitz3.ab2@6188>   BSR.w checkclash
00022884 <AmiBlitz3.ab2@6191> RTS
00022886 <AmiBlitz3.ab2@6195>   MOVEA.l A3,A4
0002288A <AmiBlitz3.ab2@6198>     CMPA.w #$0,A4
0002288E <AmiBlitz3.ab2@6199>     BEQ.w checkclash__done
00022894 <AmiBlitz3.ab2@6201>     LEA ptr_parameterstore,A0
00022898 <AmiBlitz3.ab2@6202>     LEA $0(A4,D7.W),A1
0002289A <AmiBlitz3.ab2@6203>     MOVEQ.l #-$01,D2
0002289C <AmiBlitz3.ab2@6206>       ADDQ.w #1,D2
0002289E <AmiBlitz3.ab2@6207>       MOVE.b (A1)+,(A0)+
000228A2 <AmiBlitz3.ab2@6208>     BNE.w checkclash__loop2
000228A4 <AmiBlitz3.ab2@6209>     MOVEA.l A3,A2
000228A8 <AmiBlitz3.ab2@6212>     BSR.w findlab
000228AC <AmiBlitz3.ab2@6213>     BNE.w checkclash__next                                  ;not found
000228AE <AmiBlitz3.ab2@6214>     CMPA.l A2,A4
000228B2 <AmiBlitz3.ab2@6215>     BEQ.w checkclash__l1
000228B4 <AmiBlitz3.ab2@6216>     MOVE.l a1,a5
000228B8 <AmiBlitz3.ab2@6217> BRA clasherr
000228BC <AmiBlitz3.ab2@6220> BRA.w checkclash__more
000228BE <AmiBlitz3.ab2@6223>     MOVEA.l (A4),A4
000228C2 <AmiBlitz3.ab2@6224> BRA.w checkclash__loop
000228C4 <AmiBlitz3.ab2@6227> RTS
000228CA <AmiBlitz3.ab2@6231>   MOVEA.l _dosbase,A6
000228D0 <AmiBlitz3.ab2@6233>   LEA newtype_string,A0
000228D6 <AmiBlitz3.ab2@6234>   MOVE.l A0,lastrestype
000228D8 <AmiBlitz3.ab2@6235>   CLR.l (A0)
000228DE <AmiBlitz3.ab2@6237>   LEA macrobase,A0
000228E4 <AmiBlitz3.ab2@6238>   MOVE.l A0,currentmacroaddr
000228E6 <AmiBlitz3.ab2@6239>   CLR.l (A0)
000228EC <AmiBlitz3.ab2@6241>   LEA labelbase,A0
000228F2 <AmiBlitz3.ab2@6242>   MOVE.l A0,currentlabeladdr
000228F4 <AmiBlitz3.ab2@6243>   CLR.l (A0)
000228FA <AmiBlitz3.ab2@6244>   CLR.w rescnt
00022932 <AmiBlitz3.ab2@6248>   !ComData_SetB{comByte_DebugMode,debugmode}
00022938 <AmiBlitz3.ab2@6251>   LEA residents_table,A2
0002293A <AmiBlitz3.ab2@6252>   MOVEQ.l #$07,D2
0002293E <AmiBlitz3.ab2@6255>      MOVE.l $40(A2),D1
00022942 <AmiBlitz3.ab2@6256>      BEQ.w free_residents__next
00022946 <AmiBlitz3.ab2@6257>       CLR.l $40(A2)
0002294C <AmiBlitz3.ab2@6258>       MOVEA.l _dosbase,A6
00022950 <AmiBlitz3.ab2@6259>       JSR _UnLoadSeg(A6)
00022954 <AmiBlitz3.ab2@6262>      LEA ResidentEntryStep(A2),A2   ; $44
00022958 <AmiBlitz3.ab2@6263>    DBF D2,free_residents__loop
0002295A <AmiBlitz3.ab2@6265> RTS
0002295C <AmiBlitz3.ab2@6269>   MOVE.w (A3)+,D1
00022960 <AmiBlitz3.ab2@6270>   BEQ.w JL_0_5A60
00022966 <AmiBlitz3.ab2@6271>   MOVEA.l currentlabeladdr,A2
00022968 <AmiBlitz3.ab2@6272>   MOVE.l A3,(A2)
0002296A <AmiBlitz3.ab2@6273>   SUBQ.w #1,D1
0002296C <AmiBlitz3.ab2@6276>     MOVEA.l A3,A2
0002296E <AmiBlitz3.ab2@6277>     MOVEA.l (A3),A3
00022972 <AmiBlitz3.ab2@6278>   DBF D1,JL_0_5A42
00022974 <AmiBlitz3.ab2@6280>   CLR.l (a2)                                               ;bugfix for object
0002297A <AmiBlitz3.ab2@6281>   MOVE.l A2,currentlabeladdr
0002297C <AmiBlitz3.ab2@6282>   MOVEA.l A2,A3
0002297E <AmiBlitz3.ab2@6283>   MOVEQ.l #$00,D0
00022982 <AmiBlitz3.ab2@6284>   MOVE.b $12(A3),D0
00022984 <AmiBlitz3.ab2@6285>   ADDQ.w #1,D0
00022988 <AmiBlitz3.ab2@6286>   BCLR #$0,D0
0002298A <AmiBlitz3.ab2@6287>   ADDA.w D0,A3
0002298C <AmiBlitz3.ab2@6290> RTS
0002298E <AmiBlitz3.ab2@6294>   MOVE.w (A3)+,D1
00022992 <AmiBlitz3.ab2@6295>   BEQ.w JL_0_5A9C
00022998 <AmiBlitz3.ab2@6297>   MOVEA.l currentmacroaddr,A2
0002299A <AmiBlitz3.ab2@6298>   MOVE.l A3,(A2)
0002299C <AmiBlitz3.ab2@6299>   SUBQ.w #1,D1
0002299E <AmiBlitz3.ab2@6302>     MOVEA.l A3,A2
000229A0 <AmiBlitz3.ab2@6303>     MOVEA.l (A3),A3
000229A4 <AmiBlitz3.ab2@6304>   DBF D1,JL_0_5A72
000229AA <AmiBlitz3.ab2@6306>   MOVE.l A2,currentmacroaddr
000229AC <AmiBlitz3.ab2@6307>   MOVEA.l A2,A3
000229AE <AmiBlitz3.ab2@6308>   MOVEQ.l #$00,D0
000229B2 <AmiBlitz3.ab2@6309>   MOVE.b $C(A3),D0
000229B4 <AmiBlitz3.ab2@6310>   ADDQ.w #1,D0
000229B8 <AmiBlitz3.ab2@6311>   BCLR #$0,D0
000229BC <AmiBlitz3.ab2@6312>   MOVE.w $8(A3),D1
000229BE <AmiBlitz3.ab2@6313>   ADDQ.w #1,D1
000229C2 <AmiBlitz3.ab2@6314>   BCLR #$0,D1
000229C4 <AmiBlitz3.ab2@6315>   ADDA.w D0,A3
000229C6 <AmiBlitz3.ab2@6316>   ADDA.w D1,A3
000229C8 <AmiBlitz3.ab2@6319> RTS
000229CA <AmiBlitz3.ab2@6323>   MOVE.w (A3)+,D1
000229CE <AmiBlitz3.ab2@6324>   BEQ.w JL_0_5B38
000229D0 <AmiBlitz3.ab2@6325>   MOVE.w D1,-(A7)
000229D2 <AmiBlitz3.ab2@6326>   SUBQ.w #1,D1
000229D8 <AmiBlitz3.ab2@6327>   MOVEA.l lastrestype,A2
000229DA <AmiBlitz3.ab2@6328>   MOVE.l A2,-(A7)
000229DC <AmiBlitz3.ab2@6331>       MOVE.l (A3),D0
000229E0 <AmiBlitz3.ab2@6332>       BEQ.w JL_0_5ABC
000229E2 <AmiBlitz3.ab2@6333>       MOVEA.l D0,A3
000229E6 <AmiBlitz3.ab2@6334> BRA.w JL_0_5AB0
000229EA <AmiBlitz3.ab2@6337>       MOVE.b $E(A3),D0
000229EC <AmiBlitz3.ab2@6338>       ADDQ.w #1,D0
000229F0 <AmiBlitz3.ab2@6339>       BCLR #$0,D0
000229F2 <AmiBlitz3.ab2@6340>       ADDA.w D0,A3
000229F4 <AmiBlitz3.ab2@6341>       MOVE.l A3,(A2)
000229F6 <AmiBlitz3.ab2@6342>       MOVEA.l A3,A2
000229F8 <AmiBlitz3.ab2@6343>       MOVEQ.l #$00,D0
000229FC <AmiBlitz3.ab2@6344>       MOVE.b $A(A3),D0
000229FE <AmiBlitz3.ab2@6345>       ADDQ.w #1,D0
00022A02 <AmiBlitz3.ab2@6346>       BCLR #$0,D0
00022A04 <AmiBlitz3.ab2@6347>       ADDA.w D0,A3
00022A08 <AmiBlitz3.ab2@6348>   DBF D1,JL_0_5AB0
00022A0A <AmiBlitz3.ab2@6350>   MOVEA.l (A7)+,A0
00022A0C <AmiBlitz3.ab2@6351>   MOVEA.l (A0),A0
00022A10 <AmiBlitz3.ab2@6354>     CMPA.w #$0,A0
00022A14 <AmiBlitz3.ab2@6355>     BEQ.w JL_0_5B2A
00022A18 <AmiBlitz3.ab2@6356>     MOVEA.l $4(A0),A1
00022A1C <AmiBlitz3.ab2@6359>     CMPA.w #$0,A1
00022A20 <AmiBlitz3.ab2@6360>     BEQ.w JL_0_5B24
00022A24 <AmiBlitz3.ab2@6361>     MOVE.w $A(A1),D0
00022A2A <AmiBlitz3.ab2@6362>     MOVEA.l newtypebase,A4
00022A2E <AmiBlitz3.ab2@6363>     CMP.w #$7,D0
00022A32 <AmiBlitz3.ab2@6364>     BCS.w JL_0_5B0E
00022A38 <AmiBlitz3.ab2@6365>     SUB.w rescnt,D0
00022A3A <AmiBlitz3.ab2@6368>     SUBQ.w #1,D0
00022A3E <AmiBlitz3.ab2@6369>     BMI.w JL_0_5B1A
00022A40 <AmiBlitz3.ab2@6372>        MOVEA.l (A4),A4
00022A44 <AmiBlitz3.ab2@6373>   DBF D0,JL_0_5B14
00022A48 <AmiBlitz3.ab2@6376>     MOVE.l A4,$A(A1)
00022A4A <AmiBlitz3.ab2@6377>     MOVEA.l (A1),A1
00022A4E <AmiBlitz3.ab2@6378> BRA.w JL_0_5AEE
00022A50 <AmiBlitz3.ab2@6381>     MOVEA.l (A0),A0
00022A54 <AmiBlitz3.ab2@6382> BRA.w JL_0_5AE2
00022A56 <AmiBlitz3.ab2@6385>   MOVE.w (A7)+,D0
00022A5C <AmiBlitz3.ab2@6386>   ADD.w D0,rescnt
00022A62 <AmiBlitz3.ab2@6387>   MOVE.l A2,lastrestype
00022A64 <AmiBlitz3.ab2@6390> RTS
00022A6A <AmiBlitz3.ab2@6394>   LEA tokens,A0
00022A6E <AmiBlitz3.ab2@6395>   MOVE.w #$003A,D0                                         ; $003A : 58 dec
00022A70 <AmiBlitz3.ab2@6398>     MOVEA.l (A0),A0
00022A74 <AmiBlitz3.ab2@6399>   DBF D0,JL_0_5BD0
00022A7A <AmiBlitz3.ab2@6401>   MOVEA.l #asmpnts,A1                                      ;create tokentab
00022A7E <AmiBlitz3.ab2@6402>   MOVE.w #$0076,D0                                         ; $0076 : 118 dec
00022A82 <AmiBlitz3.ab2@6405>       LEA $6(A0),A2
00022A84 <AmiBlitz3.ab2@6408>         TST.b (A2)+
00022A88 <AmiBlitz3.ab2@6409>       BNE.w JL_0_5BE4
00022A8A <AmiBlitz3.ab2@6412>         TST.b (A2)+
00022A8E <AmiBlitz3.ab2@6413>       BNE.w JL_0_5BEA
00022A90 <AmiBlitz3.ab2@6415>       ADDQ.w #1,A2
00022A92 <AmiBlitz3.ab2@6416>       EXG.l D1,A2
00022A96 <AmiBlitz3.ab2@6417>       BCLR #$0,D1
00022A98 <AmiBlitz3.ab2@6418>       EXG.l D1,A2
00022A9A <AmiBlitz3.ab2@6419>       MOVE.l A2,(A1)+
00022A9C <AmiBlitz3.ab2@6420>       MOVEA.l (A0),A0
00022AA0 <AmiBlitz3.ab2@6421>   DBF D0,JL_0_5BE0
00022AA2 <AmiBlitz3.ab2@6422> RTS
00022AA6 <AmiBlitz3.ab2@6426>   BSR.w asmconst
00022AA8 <AmiBlitz3.ab2@6427>   MOVEQ.l #$0B,D5
00022AAA <AmiBlitz3.ab2@6428> RTS
00022AAC <AmiBlitz3.ab2@6431> unmove:  Ds.w 1
00022AB0 <AmiBlitz3.ab2@6435>   MOVE.w #$48E7,D1
00022AB4 <AmiBlitz3.ab2@6436>   BSR.w writeword                                          ;movem.l -(a7)
00022AB8 <AmiBlitz3.ab2@6437>   MOVE.w #$000F,D2
00022ABA <AmiBlitz3.ab2@6438>   SUB.w D4,D2
00022ABC <AmiBlitz3.ab2@6439>   MOVEQ.l #-$01,D1
00022ABE <AmiBlitz3.ab2@6440>   BCLR D2,D1
00022AC2 <AmiBlitz3.ab2@6441>   BSR.w writeword
00022AC4 <AmiBlitz3.ab2@6442>   MOVEQ.l #-$01,D1
00022AC6 <AmiBlitz3.ab2@6443>   BCLR D4,D1
00022ACC <AmiBlitz3.ab2@6444>   MOVE.w D1,unmove
00022ACE <AmiBlitz3.ab2@6445> RTS
00022AD2 <AmiBlitz3.ab2@6449>   MOVE.w #$4CDF,D1
00022AD6 <AmiBlitz3.ab2@6450>   BSR.w writeword
00022ADA <AmiBlitz3.ab2@6451>   MOVE.w unmove(PC),D1
00022ADE <AmiBlitz3.ab2@6452> BRA.w writeword
00022AE2 <AmiBlitz3.ab2@6465>   BSR.w JL_0_5D22
00022AE6 <AmiBlitz3.ab2@6466>   CMP.w #$2C,D0                                            ;#','
00022AEA <AmiBlitz3.ab2@6467>    BNE.w syntaxerr
00022AF0 <AmiBlitz3.ab2@6468>   MOVE.l #$48E7FFFE,D1                                     ;movem to stack
00022AF4 <AmiBlitz3.ab2@6469>    BSR.w writelong
00022AF6 <AmiBlitz3.ab2@6470>   MOVE.w D4,D1
00022AFA <AmiBlitz3.ab2@6471>   ORI.w #$2F00,D1
00022AFE <AmiBlitz3.ab2@6472>    BSR.w writeword
00022B02 <AmiBlitz3.ab2@6473>    BSR.w get1bytemain
00022B06 <AmiBlitz3.ab2@6474>    BSR.w getparameter
00022B0A <AmiBlitz3.ab2@6475>    BSR.w JL_0_8E3C
00022B0E <AmiBlitz3.ab2@6476>    BSR.w calcvar
00022B12 <AmiBlitz3.ab2@6477>    BTST #$E,D2
00022B16 <AmiBlitz3.ab2@6478>    BEQ.w JL_0_5C80
00022B1A <AmiBlitz3.ab2@6481>    MOVE.b #$3,D2
00022B1E <AmiBlitz3.ab2@6482> BRA.w JL_0_5C8E
00022B20 <AmiBlitz3.ab2@6485>   TST.b D2
00022B24 <AmiBlitz3.ab2@6486>    BEQ.w JL_0_5C78
00022B28 <AmiBlitz3.ab2@6487>   CMP.b #$7,D2
00022B2C <AmiBlitz3.ab2@6488>    BEQ.w JL_0_5C78
00022B30 <AmiBlitz3.ab2@6491>   BTST #$F,D2
00022B34 <AmiBlitz3.ab2@6492>    BNE.w JL_0_5CA4
00022B38 <AmiBlitz3.ab2@6493>   MOVE.w #$45ED,D1                                         ;lea x(a5),a2
00022B3C <AmiBlitz3.ab2@6494>    BSR.w writeword
00022B3E <AmiBlitz3.ab2@6495>   MOVE.w D3,D1
00022B42 <AmiBlitz3.ab2@6496>    BSR.w writeword
00022B46 <AmiBlitz3.ab2@6499>   MOVE.w #$201F,D1                                         ;move.l (a7)+,d0
00022B4A <AmiBlitz3.ab2@6500>    BSR.w writeword
00022B4E <AmiBlitz3.ab2@6501>   MOVE.w #$1480,D1
00022B52 <AmiBlitz3.ab2@6502>   CMP.b #$1,D2
00022B56 <AmiBlitz3.ab2@6503>    BEQ.w JL_0_5CC8
00022B5A <AmiBlitz3.ab2@6504>   EORI.w #$3000,D1
00022B5E <AmiBlitz3.ab2@6505>   CMP.b #$2,D2
00022B62 <AmiBlitz3.ab2@6506>    BNE.w JL_0_5CC8
00022B66 <AmiBlitz3.ab2@6507>   ORI.w #$1000,D1
00022B6A <AmiBlitz3.ab2@6510>   BSR.w writeword
00022B70 <AmiBlitz3.ab2@6511>   MOVE.l #$4CDF7FFF,D1
00022B74 <AmiBlitz3.ab2@6512> BRA.w writelong
00022B78 <AmiBlitz3.ab2@6516>   BSR.w JL_0_5D22
00022B7C <AmiBlitz3.ab2@6517>   CMP.w #$2C,D0
00022B80 <AmiBlitz3.ab2@6518>    BNE.w syntaxerr
00022B84 <AmiBlitz3.ab2@6519>    BSR.w regmovems
00022B86 <AmiBlitz3.ab2@6520>   MOVE.w D4,-(A7)
00022B88 <AmiBlitz3.ab2@6521>   MOVEQ.l #$03,D2
00022B8C <AmiBlitz3.ab2@6522>    BSR.w eval
00022B8E <AmiBlitz3.ab2@6523>   MOVE.w (A7)+,D1
00022B92 <AmiBlitz3.ab2@6524>    BEQ.w JL_0_5D1A
00022B96 <AmiBlitz3.ab2@6525>   CMP.w #$8,D1
00022B9A <AmiBlitz3.ab2@6526>    BCC.w JL_0_5D0C
00022B9C <AmiBlitz3.ab2@6527>   LSL.w #8,D1
00022B9E <AmiBlitz3.ab2@6528>   LSL.w #1,D1
00022BA2 <AmiBlitz3.ab2@6529>   ORI.w #$2000,D1
00022BA6 <AmiBlitz3.ab2@6530>    BSR.w writeword
00022BAA <AmiBlitz3.ab2@6531> BRA.w JL_0_5D1A
00022BAC <AmiBlitz3.ab2@6534>   SUBQ.w #8,D1
00022BAE <AmiBlitz3.ab2@6535>   LSL.w #8,D1
00022BB0 <AmiBlitz3.ab2@6536>   LSL.w #1,D1
00022BB4 <AmiBlitz3.ab2@6537>   ORI.w #$2040,D1
00022BB8 <AmiBlitz3.ab2@6538>   BSR.w writeword
00022BBC <AmiBlitz3.ab2@6541> BRA.w dounmove
00022BC0 <AmiBlitz3.ab2@6545>   BSR.w get1bytemain
00022BC4 <AmiBlitz3.ab2@6548>   ORI.w #$20,D0
00022BC8 <AmiBlitz3.ab2@6549>   CMP.w #$64,D0
00022BCC <AmiBlitz3.ab2@6550>    BEQ.w JL_0_5D4E
00022BD0 <AmiBlitz3.ab2@6551>   CMP.w #$61,D0
00022BD4 <AmiBlitz3.ab2@6552>    BNE.w syntaxerr
00022BD8 <AmiBlitz3.ab2@6553>    BSR.w JL_0_5D4E
00022BDA <AmiBlitz3.ab2@6554>   ADDQ.w #8,D4
00022BDC <AmiBlitz3.ab2@6555> RTS
00022C08 <AmiBlitz3.ab2@6559>   !fget                                                   ;bsr.w get1bytemain
00022C0C <AmiBlitz3.ab2@6561>   ORI.w #$20,D0
00022C10 <AmiBlitz3.ab2@6564>   CMP.w #$61,D0
00022C14 <AmiBlitz3.ab2@6565>   BNE.w syntaxerr
00022C40 <AmiBlitz3.ab2@6568>   !fget                                                    ;bsr.w get1bytemain
00022C44 <AmiBlitz3.ab2@6569>   SUBI.w #$30,D0
00022C48 <AmiBlitz3.ab2@6570>    BMI.w syntaxerr
00022C4C <AmiBlitz3.ab2@6571>   CMP.w #$7,D0
00022C50 <AmiBlitz3.ab2@6572>    BHI.w syntaxerr
00022C52 <AmiBlitz3.ab2@6573>   MOVE.w D0,D4
00022C7E <AmiBlitz3.ab2@6574>   !fget
00022C80 <AmiBlitz3.ab2@6575> RTS                                                        ;bra.w get1bytemain
00022C82 <AmiBlitz3.ab2@6579>   ADDQ.w #8,D4
00022C84 <AmiBlitz3.ab2@6582>   MOVEQ.l #$00,D5
00022C88 <AmiBlitz3.ab2@6583>   SUBI.w #$30,D4
00022C8C <AmiBlitz3.ab2@6586>   CMP.w #$2D,D0
00022C90 <AmiBlitz3.ab2@6587>    BEQ.w JL_0_5D9E
00022C94 <AmiBlitz3.ab2@6588>   CMP.w #$2F,D0
00022C98 <AmiBlitz3.ab2@6589>    BEQ.w JL_0_5D8C
00022C9C <AmiBlitz3.ab2@6590> BRA.w syntaxerr
00022C9E <AmiBlitz3.ab2@6593>   BSET D4,D5
00022CA0 <AmiBlitz3.ab2@6596>   MOVE.w D5,D4
00022CA2 <AmiBlitz3.ab2@6597>   MOVEQ.l #$0F,D5
00022CA4 <AmiBlitz3.ab2@6598> RTS
00022CA6 <AmiBlitz3.ab2@6601>   BSET D4,D5
00022CAA <AmiBlitz3.ab2@6602>   BSR.w JL_0_5D1E
00022CBC <AmiBlitz3.ab2@6603>   !compare3                                                ;bsr.w JL_0_5FC0
00022CC0 <AmiBlitz3.ab2@6604>   BNE.w JL_0_5D70
00022CC4 <AmiBlitz3.ab2@6605> BRA.w JL_0_5D84
00022CC6 <AmiBlitz3.ab2@6608>   MOVE.w D4,D1
00022CCA <AmiBlitz3.ab2@6609>    BSR.w JL_0_5D1E
00022CCC <AmiBlitz3.ab2@6610>   CMP.w D4,D1
00022CD0 <AmiBlitz3.ab2@6611>    BLS.w JL_0_5DAC
00022CD2 <AmiBlitz3.ab2@6612>   EXG.l D4,D1
00022CD4 <AmiBlitz3.ab2@6615>   BSET D1,D5
00022CD6 <AmiBlitz3.ab2@6616>   ADDQ.w #1,D1
00022CD8 <AmiBlitz3.ab2@6617>   CMP.w D4,D1
00022CDC <AmiBlitz3.ab2@6618>    BLS.w JL_0_5DAC
00022CEE <AmiBlitz3.ab2@6619>   !compare3                                                ;bsr.w JL_0_5FC0
00022CF2 <AmiBlitz3.ab2@6620>   BNE.w JL_0_5D70
00022CF6 <AmiBlitz3.ab2@6621> BRA.w JL_0_5D86
00022CF8 <AmiBlitz3.ab2@6624>   MOVEA.l A5,A4                                            ;bsr.w get1bytemain
00022D24 <AmiBlitz3.ab2@6625>    !fget
00022D28 <AmiBlitz3.ab2@6626>   CMP.w #$23,D0
00022D2C <AmiBlitz3.ab2@6627>    BEQ.w getimm
00022D30 <AmiBlitz3.ab2@6628>   CMP.w #$28,D0
00022D34 <AmiBlitz3.ab2@6629>    BEQ.w JL_0_5DFE
00022D38 <AmiBlitz3.ab2@6630>   CMP.w #$2D,D0
00022D3C <AmiBlitz3.ab2@6631>    BNE.w JL_0_5E20
00022D68 <AmiBlitz3.ab2@6632>    !fget                                                   ;bsr.w get1bytemain       -(
00022D6C <AmiBlitz3.ab2@6633>   CMP.w #$28,D0
00022D70 <AmiBlitz3.ab2@6634>    BNE.w JL_0_5F4E
00022D74 <AmiBlitz3.ab2@6635>    BSR.w JL_0_5D3E
00022D78 <AmiBlitz3.ab2@6636>   CMP.w #$29,D0
00022D7C <AmiBlitz3.ab2@6637>    BNE.w syntaxerr
00022D7E <AmiBlitz3.ab2@6638>   MOVEQ.l #$04,D5
00022DAA <AmiBlitz3.ab2@6639>   !fget                                                    ;bsr.w get1bytemain
00022DAC <AmiBlitz3.ab2@6640> RTS
00022DB0 <AmiBlitz3.ab2@6644>   BSR.w JL_0_5D3E
00022DB4 <AmiBlitz3.ab2@6645>   CMP.w #$29,D0
00022DB8 <AmiBlitz3.ab2@6646>    BNE.w syntaxerr
00022DE4 <AmiBlitz3.ab2@6647>   !fget                                                    ;bsr.w get1bytemain
00022DE8 <AmiBlitz3.ab2@6648>   CMP.w #$2B,D0
00022DEC <AmiBlitz3.ab2@6649>    BEQ.w JL_0_5E1A
00022DEE <AmiBlitz3.ab2@6650>   MOVEQ.l #$02,D5
00022DF0 <AmiBlitz3.ab2@6651> RTS
00022DF2 <AmiBlitz3.ab2@6655>   MOVEQ.l #$03,D5
00022E1E <AmiBlitz3.ab2@6656>   !fget                                                    ;bra.w get1bytemain
00022E20 <AmiBlitz3.ab2@6657> RTS
00022E24 <AmiBlitz3.ab2@6661>   ORI.w #$20,D0
00022E26 <AmiBlitz3.ab2@6662>   MOVE.w D0,D1                                            
00022E52 <AmiBlitz3.ab2@6663>    !fget                                                   ;bsr.w get1bytemain
00022E56 <AmiBlitz3.ab2@6664>   CMP.w #$64,D1
00022E5A <AmiBlitz3.ab2@6665>    BNE.w JL_0_5E6C
00022E5E <AmiBlitz3.ab2@6666>   CMP.w #$30,D0
00022E62 <AmiBlitz3.ab2@6667>    BCS.w JL_0_5EAE
00022E66 <AmiBlitz3.ab2@6668>   CMP.w #$37,D0
00022E6A <AmiBlitz3.ab2@6669>    BHI.w JL_0_5EAE
00022E6C <AmiBlitz3.ab2@6670>   MOVE.w D0,D4
00022E98 <AmiBlitz3.ab2@6671>    !fget                                                   ;bsr.w get1bytemain
00022EAA <AmiBlitz3.ab2@6672>    !compare3                                               ;bsr.w JL_0_5FC0
00022EAE <AmiBlitz3.ab2@6673>    BEQ.w JL_0_5E64
00022EB2 <AmiBlitz3.ab2@6674>   CMP.w #$2D,D0
00022EB6 <AmiBlitz3.ab2@6675>    BEQ.w JL_0_5D6A
00022EBA <AmiBlitz3.ab2@6676>   CMP.w #$2F,D0
00022EBE <AmiBlitz3.ab2@6677>    BEQ.w JL_0_5D6A
00022EC2 <AmiBlitz3.ab2@6678> BRA.w JL_0_5EB8
00022EC4 <AmiBlitz3.ab2@6681>   MOVEQ.l #$00,D5
00022EC8 <AmiBlitz3.ab2@6682>   SUBI.w #$30,D4
00022ECA <AmiBlitz3.ab2@6683> RTS
00022ECE <AmiBlitz3.ab2@6686>    CMP.w #$61,D1
00022ED2 <AmiBlitz3.ab2@6687>    BNE.w JL_0_5EAE
00022ED6 <AmiBlitz3.ab2@6688>   CMP.w #$30,D0
00022EDA <AmiBlitz3.ab2@6689>    BCS.w JL_0_5EAE
00022EDE <AmiBlitz3.ab2@6690>   CMP.w #$37,D0
00022EE2 <AmiBlitz3.ab2@6691>    BHI.w JL_0_5EAE
00022EE4 <AmiBlitz3.ab2@6692>   MOVE.w D0,D4
00022F10 <AmiBlitz3.ab2@6693>    !fget                                                   ;bsr.w get1bytemain
00022F22 <AmiBlitz3.ab2@6694>    !compare3                                               ;bsr.w JL_0_5FC0
00022F26 <AmiBlitz3.ab2@6695>    BEQ.w JL_0_5EA6
00022F2A <AmiBlitz3.ab2@6696>   CMP.w #$2D,D0
00022F2E <AmiBlitz3.ab2@6697>    BEQ.w JL_0_5D68                                         ;movem
00022F32 <AmiBlitz3.ab2@6698>   CMP.w #$2F,D0
00022F36 <AmiBlitz3.ab2@6699>    BEQ.w JL_0_5D68
00022F3A <AmiBlitz3.ab2@6700> BRA.w JL_0_5EB8
00022F3C <AmiBlitz3.ab2@6703>   MOVEQ.l #1,d5
00022F40 <AmiBlitz3.ab2@6704>   SUBI.w #$30,D4
00022F44 <AmiBlitz3.ab2@6706> BRA 'l10
00022F46 <AmiBlitz3.ab2@6707>   ADDQ.w #8,d4
00022F48 <AmiBlitz3.ab2@6708>   MOVEQ #0,d5
00022F4A <AmiBlitz3.ab2@6709>   BSET d4,d5
00022F4C <AmiBlitz3.ab2@6710>   MOVE.w d5,d4
00022F4E <AmiBlitz3.ab2@6711>   MOVEQ.l #$0f,D5                                          ;01
00022F50 <AmiBlitz3.ab2@6714> RTS
00022F54 <AmiBlitz3.ab2@6718>   ORI.w #$20,D0
00022F56 <AmiBlitz3.ab2@6719>   MOVE.w D0,D4
00022F82 <AmiBlitz3.ab2@6720>    !fget                                                   ;bsr.w get1bytemain
00022F94 <AmiBlitz3.ab2@6723>   !compare3                                                ;bsr.w JL_0_5FC0
00022F98 <AmiBlitz3.ab2@6724>    BNE.w JL_0_5EF2
00022F9C <AmiBlitz3.ab2@6725>   CMP.w #$73,D1
00022FA0 <AmiBlitz3.ab2@6726>    BNE.w JL_0_5EF2
00022FA4 <AmiBlitz3.ab2@6727>   CMP.w #$70,D4
00022FA8 <AmiBlitz3.ab2@6728>    BNE.w JL_0_5EDE
00022FBA <AmiBlitz3.ab2@6729>    !compare3                                               ;bsr.w JL_0_5FC0
00022FBE <AmiBlitz3.ab2@6730>    BNE.w JL_0_5F4E
00022FC0 <AmiBlitz3.ab2@6731>   MOVEQ.l #$07,D4
00022FC2 <AmiBlitz3.ab2@6732>   MOVEQ.l #$01,D5
00022FC4 <AmiBlitz3.ab2@6733> RTS
00022FC8 <AmiBlitz3.ab2@6737>   CMP.w #$72,D4
00022FCC <AmiBlitz3.ab2@6738>    BNE.w JL_0_5F4E
00022FDE <AmiBlitz3.ab2@6739>    !compare3                                               ;bsr.w JL_0_5FC0
00022FE2 <AmiBlitz3.ab2@6740>    BNE.w JL_0_5F4E
00022FE4 <AmiBlitz3.ab2@6741>   MOVEQ.l #$0D,D5
00022FE6 <AmiBlitz3.ab2@6742> RTS
00022FEA <AmiBlitz3.ab2@6746>   ORI.w #$20,D0
00022FEE <AmiBlitz3.ab2@6747>   CMP.w #$63,D1
00022FF2 <AmiBlitz3.ab2@6748>    BNE.w JL_0_5F22
00022FF6 <AmiBlitz3.ab2@6749>   CMP.w #$63,D4
00022FFA <AmiBlitz3.ab2@6750>    BNE.w JL_0_5F4E
00022FFE <AmiBlitz3.ab2@6751>   CMP.w #$72,D0
00023002 <AmiBlitz3.ab2@6752>    BNE.w JL_0_5F4E
00023006 <AmiBlitz3.ab2@6753>    BSR.w get1bytemain                                      ;??wy not !fget
0002300A <AmiBlitz3.ab2@6754>    BEQ.w JL_0_5F1E
0002300E <AmiBlitz3.ab2@6755>   CMP.w #$2C,D0
00023012 <AmiBlitz3.ab2@6756>    BNE.w JL_0_5F4E
00023014 <AmiBlitz3.ab2@6759>   MOVEQ.l #$0C,D5
00023016 <AmiBlitz3.ab2@6760> RTS
0002301A <AmiBlitz3.ab2@6764>   CMP.w #$75,D1
0002301E <AmiBlitz3.ab2@6765>    BNE.w JL_0_5F4E
00023022 <AmiBlitz3.ab2@6766>   CMP.w #$73,D4
00023026 <AmiBlitz3.ab2@6767>    BNE.w JL_0_5F4E
0002302A <AmiBlitz3.ab2@6768>   CMP.w #$70,D0
0002302E <AmiBlitz3.ab2@6769>    BNE.w JL_0_5F4E
00023032 <AmiBlitz3.ab2@6770>    BSR.w get1bytemain                                      ;??wy not !fget
00023036 <AmiBlitz3.ab2@6771>    BEQ.w JL_0_5F4A
0002303A <AmiBlitz3.ab2@6772>   CMP.w #$2C,D0
0002303E <AmiBlitz3.ab2@6773>    BNE.w JL_0_5F4E
00023040 <AmiBlitz3.ab2@6776>   MOVEQ.l #$0E,D5
00023042 <AmiBlitz3.ab2@6777> RTS
00023044 <AmiBlitz3.ab2@6781>   MOVEA.l A4,A5
00023048 <AmiBlitz3.ab2@6782>    BSR.w asmconst
0002305A <AmiBlitz3.ab2@6783>    !compare3                                               ;bsr.w JL_0_5FC0
0002305E <AmiBlitz3.ab2@6784>    BEQ.w JL_0_5FB8
00023062 <AmiBlitz3.ab2@6785>   CMP.w #$2E,D0
00023066 <AmiBlitz3.ab2@6786>    BEQ.w JL_0_5FA0
0002306A <AmiBlitz3.ab2@6787>   CMP.w #$28,D0
0002306E <AmiBlitz3.ab2@6788>    BNE.w syntaxerr
00023072 <AmiBlitz3.ab2@6789>    BSR.w get1bytemain                                      ;??wy not !fget
00023076 <AmiBlitz3.ab2@6790>   ORI.w #$20,D0
0002307A <AmiBlitz3.ab2@6791>   CMP.w #$70,D0
0002307E <AmiBlitz3.ab2@6792>    BNE.w JL_0_5F98
00023082 <AmiBlitz3.ab2@6793>    BSR.w get1bytemain                                      ;??wy not !fget
00023086 <AmiBlitz3.ab2@6794>   ORI.w #$20,D0
0002308A <AmiBlitz3.ab2@6795>   CMP.w #$63,D0
0002308E <AmiBlitz3.ab2@6796>    BNE.w syntaxerr
00023092 <AmiBlitz3.ab2@6797>    BSR.w get1bytemain                                      ;??wy not !fget
00023096 <AmiBlitz3.ab2@6798>    BSR.w JL_0_5FD4
00023098 <AmiBlitz3.ab2@6799>   ADDQ.w #4,D5
0002309A <AmiBlitz3.ab2@6800> RTS
0002309E <AmiBlitz3.ab2@6804>   BSR.w JL_0_5D46
000230A2 <AmiBlitz3.ab2@6805> BRA.w JL_0_5FD4
000230A6 <AmiBlitz3.ab2@6809>    BSR.w get1bytemain                                     ;??wy not !fget
000230AA <AmiBlitz3.ab2@6810>   ORI.w #$20,D0
000230AE <AmiBlitz3.ab2@6811>   CMP.w #$77,D0
000230B2 <AmiBlitz3.ab2@6812>    BEQ.w JL_0_5FBC
000230B6 <AmiBlitz3.ab2@6813>   CMP.w #$6C,D0
000230BA <AmiBlitz3.ab2@6814>    BNE.w syntaxerr
000230BC <AmiBlitz3.ab2@6817>   MOVEQ.l #$08,D5
000230BE <AmiBlitz3.ab2@6818> RTS
000230C0 <AmiBlitz3.ab2@6822>   MOVEQ.l #$07,D5
000230C2 <AmiBlitz3.ab2@6823> RTS
000230C4 <AmiBlitz3.ab2@6827>   TST.w D0
000230C8 <AmiBlitz3.ab2@6828>    BEQ.w JL_0_5FD2
000230CC <AmiBlitz3.ab2@6829>   CMP.w #$3A,D0
000230D0 <AmiBlitz3.ab2@6830>    BEQ.w JL_0_5FD2
000230D4 <AmiBlitz3.ab2@6831>   CMP.w #$2C,D0
000230D6 <AmiBlitz3.ab2@6834> RTS
000230DA <AmiBlitz3.ab2@6838>   CMP.w #$2C,D0
000230DE <AmiBlitz3.ab2@6839>    BNE.w JL_0_6054
000230E2 <AmiBlitz3.ab2@6840>    BSR.w get1bytemain                                      ;??wy not !fget
000230E6 <AmiBlitz3.ab2@6841>   ORI.w #$20,D0
000230E8 <AmiBlitz3.ab2@6842>   MOVEQ.l #$00,D1
000230EC <AmiBlitz3.ab2@6843>   CMP.w #$64,D0
000230F0 <AmiBlitz3.ab2@6844>    BEQ.w JL_0_5FFA
000230F4 <AmiBlitz3.ab2@6845>   CMP.w #$61,D0
000230F8 <AmiBlitz3.ab2@6846>    BNE.w syntaxerr
000230FC <AmiBlitz3.ab2@6847>   BSET #$F,D1
00023100 <AmiBlitz3.ab2@6850>    BSR.w get1bytemain                                      ;??wy not !fget
00023104 <AmiBlitz3.ab2@6851>   SUBI.w #$30,D0
00023108 <AmiBlitz3.ab2@6852>    BMI.w syntaxerr
0002310C <AmiBlitz3.ab2@6853>   CMP.w #$7,D0
00023110 <AmiBlitz3.ab2@6854>    BHI.w syntaxerr
00023112 <AmiBlitz3.ab2@6855>   LSL.w #8,D0
00023114 <AmiBlitz3.ab2@6856>   LSL.w #4,D0
00023116 <AmiBlitz3.ab2@6857>   OR.w D0,D1
0002311A <AmiBlitz3.ab2@6858>    BSR.w get1bytemain                                      ;??wy not !fget
0002311E <AmiBlitz3.ab2@6859>   CMP.w #$2E,D0
00023122 <AmiBlitz3.ab2@6860>    BNE.w JL_0_6040
00023126 <AmiBlitz3.ab2@6861>    BSR.w get1bytemain                                      ;??wy not !fget
0002312A <AmiBlitz3.ab2@6862>   ORI.w #$20,D0
0002312E <AmiBlitz3.ab2@6863>   CMP.w #$77,D0
00023132 <AmiBlitz3.ab2@6864>    BEQ.w JL_0_603C
00023136 <AmiBlitz3.ab2@6865>   CMP.w #$6C,D0
0002313A <AmiBlitz3.ab2@6866>    BNE.w syntaxerr
0002313E <AmiBlitz3.ab2@6867>   BSET #$B,D1
00023142 <AmiBlitz3.ab2@6870>    BSR.w get1bytemain                                      ;??wy not !fget
00023146 <AmiBlitz3.ab2@6873>    CMP.b #"*",d0                                           ;020 * Mode
0002314A <AmiBlitz3.ab2@6874>             BNE 'l1
0002314E <AmiBlitz3.ab2@6875>             BSR.w get1bytemain                             ;??wy not !fget
00023152 <AmiBlitz3.ab2@6876>             CMP.b #"2",d0
00023156 <AmiBlitz3.ab2@6877>             BNE 'l2
0002315A <AmiBlitz3.ab2@6878>             OR.w #$200,d1
0002315E <AmiBlitz3.ab2@6879> BRA 'l1b
00023162 <AmiBlitz3.ab2@6882>             CMP.b #"4",d0
00023166 <AmiBlitz3.ab2@6883>             BNE 'l3
0002316A <AmiBlitz3.ab2@6884>             OR.w #$400,d1
0002316E <AmiBlitz3.ab2@6885> BRA 'l1b
00023172 <AmiBlitz3.ab2@6888>             CMP.b #"8",d0
00023176 <AmiBlitz3.ab2@6889>             BNE syntaxerr
0002317A <AmiBlitz3.ab2@6890>             OR.w #$600,d1
0002317E <AmiBlitz3.ab2@6893>         BSR.w get1bytemain                                 ;??wy not !fget
00023182 <AmiBlitz3.ab2@6896>   CMP.w #$29,D0
00023186 <AmiBlitz3.ab2@6897>    BNE.w syntaxerr
0002318C <AmiBlitz3.ab2@6898>   MOVE.w D1,extraword
0002318E <AmiBlitz3.ab2@6899>   MOVEQ.l #$06,D5
00023192 <AmiBlitz3.ab2@6900> BRA.w get1bytemain                                         ;??wy not !fget
00023196 <AmiBlitz3.ab2@6904>   CMP.w #")",D0                                            ;")"
0002319A <AmiBlitz3.ab2@6905>    BNE.w errorbracketmiss                                  ; was syntax error
0002319C <AmiBlitz3.ab2@6906>   MOVEQ.l #$05,D5
000231A0 <AmiBlitz3.ab2@6907> BRA.w get1bytemain                                         ;??wy not !fget
000231A6 <AmiBlitz3.ab2@6914>   MOVEA.l asmbuff,A0
000231AC <AmiBlitz3.ab2@6915>   MOVE.w ininclude,D1
000231B2 <AmiBlitz3.ab2@6916>   OR.w inmacro,D1
000231B4 <AmiBlitz3.ab2@6917>   MOVE.w D1,(A0)+                                          ;flag!
000231B8 <AmiBlitz3.ab2@6918>    BNE.w copyconst
000231BA <AmiBlitz3.ab2@6919>   MOVE.l A5,-(A7)
000231BE <AmiBlitz3.ab2@6920>    BSR.w copyconst
000231C4 <AmiBlitz3.ab2@6921>   MOVEA.l asmbuff,A0
000231C8 <AmiBlitz3.ab2@6922>   CMP.w #$4,D1
000231CC <AmiBlitz3.ab2@6923>    BLS.w asmconst__leave
000231D2 <AmiBlitz3.ab2@6924>   TST.w lc
000231D6 <AmiBlitz3.ab2@6925>    BNE.w asmconst__leave
000231D8 <AmiBlitz3.ab2@6926>   ADDQ.w #2,A0
000231DA <AmiBlitz3.ab2@6927>   MOVE.l (A7)+,(A0)+
000231DC <AmiBlitz3.ab2@6928>   CLR.b (A0)
000231E4 <AmiBlitz3.ab2@6929>   MOVE.w #$0004,asmlen2                                    ;pointer + 0
000231E6 <AmiBlitz3.ab2@6930> RTS
000231E8 <AmiBlitz3.ab2@6934>   NOT.w (A0)
000231EA <AmiBlitz3.ab2@6935>   ADDQ.w #4,A7
000231EC <AmiBlitz3.ab2@6936> RTS
000231EE <AmiBlitz3.ab2@6939> lc:  Ds.w 1
000231F4 <AmiBlitz3.ab2@6943>   CLR.w lc
000231F6 <AmiBlitz3.ab2@6944>   MOVEQ.l #$00,D1
000231F8 <AmiBlitz3.ab2@6947>    ADDQ.w #1,D1                                            ;label name
00023224 <AmiBlitz3.ab2@6948>    !fget                                                   ;bsr.w get1bytemain
00023228 <AmiBlitz3.ab2@6949>    BEQ.w copyconst__done
0002322C <AmiBlitz3.ab2@6950>    CMP.w #$22,d0
00023230 <AmiBlitz3.ab2@6951>    BNE.s copyconst__loop_l10
00023236 <AmiBlitz3.ab2@6952>    NOT.w instringon
0002323A <AmiBlitz3.ab2@6955>    CMP.w #":",d0
0002323E <AmiBlitz3.ab2@6956>    BNE.s copyconst__loop_l11
00023244 <AmiBlitz3.ab2@6957>    TST.w instringon
00023248 <AmiBlitz3.ab2@6958>    BEQ copyconst__done
0002324A <AmiBlitz3.ab2@6961>   TST.w D0
0002324E <AmiBlitz3.ab2@6962>   BPL.w copyconst__notmi
00023250 <AmiBlitz3.ab2@6963>   MOVE.w D0,-(A7)
00023252 <AmiBlitz3.ab2@6964>   LSR.w #8,D0
00023254 <AmiBlitz3.ab2@6965>   MOVE.b D0,(A0)+
00023256 <AmiBlitz3.ab2@6966>   MOVE.w (A7)+,D0
00023258 <AmiBlitz3.ab2@6967>   MOVE.b D0,(A0)+
0002325A <AmiBlitz3.ab2@6968>   ADDQ.w #1,D1
0002325E <AmiBlitz3.ab2@6969> BRA.s copyconst__loop
00023264 <AmiBlitz3.ab2@6972>    TST.w instringon
00023268 <AmiBlitz3.ab2@6973>    BNE.w copyconst__putbyte
0002326E <AmiBlitz3.ab2@6974>    TST.b _dcb
00023272 <AmiBlitz3.ab2@6975>    BNE copyconst__notmi_l10
00023276 <AmiBlitz3.ab2@6976>    CMP.w #$28,D0
0002327A <AmiBlitz3.ab2@6977>    BEQ.w copyconst__done
0002327E <AmiBlitz3.ab2@6980>    CMP.w #$2C,D0
00023282 <AmiBlitz3.ab2@6981>    BEQ.w copyconst__done
00023286 <AmiBlitz3.ab2@6982>    CMP.b #"'",D0
0002328A <AmiBlitz3.ab2@6983>    BNE.w copyconst__putbyte
00023290 <AmiBlitz3.ab2@6984>    MOVE.w D0,lc                                     ;locallabels
00023292 <AmiBlitz3.ab2@6985>    MOVE.l A1,-(A7)
00023298 <AmiBlitz3.ab2@6986>    LEA lastgloballabel,A1
0002329A <AmiBlitz3.ab2@6987>    TST.b (A1)
0002329E <AmiBlitz3.ab2@6988>    BEQ.w nolocerr
000232A0 <AmiBlitz3.ab2@6991>   ADDQ.w #1,D1
000232A2 <AmiBlitz3.ab2@6992>   MOVE.b (A1)+,(A0)+
000232A6 <AmiBlitz3.ab2@6993>    BNE.w copyconst__cloop
000232A8 <AmiBlitz3.ab2@6994>   SUBQ.w #1,D1
000232AA <AmiBlitz3.ab2@6995>   SUBQ.w #1,A0
000232AC <AmiBlitz3.ab2@6996>   MOVEA.l (A7)+,A1
000232AE <AmiBlitz3.ab2@6999>   MOVE.b D0,(A0)+
000232B2 <AmiBlitz3.ab2@7000> BRA.w copyconst__loop
000232B4 <AmiBlitz3.ab2@7003>   CLR.b (A0)
000232BA <AmiBlitz3.ab2@7004>   MOVE.w D1,asmlen2
000232BC <AmiBlitz3.ab2@7005> RTS
000232C2 <AmiBlitz3.ab2@7010>   CMP.l #$80ad,d0
000232C6 <AmiBlitz3.ab2@7011>   BNE.s 'l12
000232CC <AmiBlitz3.ab2@7012> JMP bssseg
000232D2 <AmiBlitz3.ab2@7015>   CMP.l #$807f,d0
000232D6 <AmiBlitz3.ab2@7016>     BNE.s 'l13
000232DC <AmiBlitz3.ab2@7017> JMP chipseg
000232E2 <AmiBlitz3.ab2@7020>   ADDQ.l #1,destpointer                                    ;even
000232EA <AmiBlitz3.ab2@7021>   BCLR #$0,destpointer+3
000232EE <AmiBlitz3.ab2@7022>   SUBI.w #$803C,D0
000232F0 <AmiBlitz3.ab2@7023>   LSL.w #2,D0
000232F6 <AmiBlitz3.ab2@7024>   MOVEA.l #asmpnts,A0
000232FA <AmiBlitz3.ab2@7025>   MOVEA.l $0(A0,D0.W),A0                                   ;begin inline assembler
00023300 <AmiBlitz3.ab2@7026>   MOVE.w D0,temp1
00023302 <AmiBlitz3.ab2@7027>   MOVE.l A0,-(A7)
00023304 <AmiBlitz3.ab2@7028>   MOVEQ.l #$01,D1
00023330 <AmiBlitz3.ab2@7029>    !fget                                                   ;bsr.w get1bytemain
00023334 <AmiBlitz3.ab2@7030>   CMP.w #$2E,D0
00023338 <AmiBlitz3.ab2@7031>    BNE.w JL_0_6184
00023364 <AmiBlitz3.ab2@7032>   !fget                                                    ;bsr.w get1bytemain
00023368 <AmiBlitz3.ab2@7033>   ORI.w #$20,D0
0002336C <AmiBlitz3.ab2@7034>   CMP.w #$77,D0                                            ;long
00023370 <AmiBlitz3.ab2@7035>    BEQ.w JL_0_618A
00023374 <AmiBlitz3.ab2@7036>   CMP.w #$62,D0                                            ;byte
00023378 <AmiBlitz3.ab2@7037>    BEQ.w JL_0_617A
0002337C <AmiBlitz3.ab2@7038>   CMP.w #$6C,D0                                            ;word
00023380 <AmiBlitz3.ab2@7039>    BEQ.w JL_0_6196
00023384 <AmiBlitz3.ab2@7040>   CMP.w #"s",d0
00023388 <AmiBlitz3.ab2@7041>   BNE syntaxerr
0002338C <AmiBlitz3.ab2@7042> BRA.w JL_0_617A
0002338E <AmiBlitz3.ab2@7045>   MOVEQ.l #$00,D1
00023392 <AmiBlitz3.ab2@7046>   MOVE.w $8(A0),D0
00023396 <AmiBlitz3.ab2@7047> BRA.w JL_0_619E
00023398 <AmiBlitz3.ab2@7050>   MOVEQ.l #$04,D1
0002339C <AmiBlitz3.ab2@7051> BRA.w JL_0_61AE
0002339E <AmiBlitz3.ab2@7054>   MOVEQ.l #$04,D1
000233A2 <AmiBlitz3.ab2@7055>   MOVE.w $8(A0),D0
000233A4 <AmiBlitz3.ab2@7056>   LSR.w #4,D0
000233A8 <AmiBlitz3.ab2@7057> BRA.w JL_0_619E
000233AA <AmiBlitz3.ab2@7060>   MOVEQ.l #$08,D1
000233AE <AmiBlitz3.ab2@7061>   MOVE.w $8(A0),D0
000233B0 <AmiBlitz3.ab2@7062>   LSR.w #8,D0
000233B4 <AmiBlitz3.ab2@7065>    ANDI.w #$F,D0
000233B8 <AmiBlitz3.ab2@7066>   CMP.w #$F,D0
000233BC <AmiBlitz3.ab2@7067>    BNE.w 'cl60
000233C4 <AmiBlitz3.ab2@7070>    CMP.l #"MULS",-6(a0)
000233C8 <AmiBlitz3.ab2@7071>    BNE 'c20
000233CE <AmiBlitz3.ab2@7072>    MOVE.l #$4c000800,d1
000233D4 <AmiBlitz3.ab2@7073> JMP do32
000233DC <AmiBlitz3.ab2@7076>    CMP.l #"MULU",-6(a0)
000233E0 <AmiBlitz3.ab2@7077>    BNE 'c30
000233E6 <AmiBlitz3.ab2@7078>    MOVE.l #$4c000000,d1
000233EC <AmiBlitz3.ab2@7079> JMP do32
000233F4 <AmiBlitz3.ab2@7082>    CMP.l #"DIVS",-6(a0)
000233F8 <AmiBlitz3.ab2@7083>    BNE 'c40
000233FE <AmiBlitz3.ab2@7084>    MOVE.l #$4c400800,d1
00023404 <AmiBlitz3.ab2@7085> JMP do32
0002340C <AmiBlitz3.ab2@7088>    CMP.l #"DIVU",-6(a0)
00023410 <AmiBlitz3.ab2@7089>    BNE 'c50
00023416 <AmiBlitz3.ab2@7090>    MOVE.l #$4c400000,d1
0002341C <AmiBlitz3.ab2@7091> JMP do32
00023420 <AmiBlitz3.ab2@7094> BRA illsizeerr
0002344C <AmiBlitz3.ab2@7097>   !fget                                                    ;bsr.w get1bytemain
00023452 <AmiBlitz3.ab2@7100>   MOVE.w D1,asmsize
00023454 <AmiBlitz3.ab2@7101>   MOVEQ.l #-$01,D3
00023458 <AmiBlitz3.ab2@7102>    BSR.w reget
0002345C <AmiBlitz3.ab2@7103>    BEQ.w JL_0_6200
00023466 <AmiBlitz3.ab2@7104>   MOVE.l #ptr_parameterstore,asmbuff
00023470 <AmiBlitz3.ab2@7106>    MOVE.w oldqflag,instringon
00023476 <AmiBlitz3.ab2@7107>   MOVEA.l lastsourcepos,A5
0002347A <AmiBlitz3.ab2@7108>    BSR.w JL_0_5DC2
0002347C <AmiBlitz3.ab2@7109>   MOVE.l D4,D2                                             ;to src
0002347E <AmiBlitz3.ab2@7110>   MOVE.l D5,D3
00023488 <AmiBlitz3.ab2@7111>   MOVE.w asmlen2,asmlen
0002348A <AmiBlitz3.ab2@7112>   MOVEQ.l #-$01,D5
00023494 <AmiBlitz3.ab2@7113>   MOVE.w extraword,extraword2
00023498 <AmiBlitz3.ab2@7114>   CMP.w #$2C,D0                                            ;','
0002349C <AmiBlitz3.ab2@7115>    BNE.w JL_0_6200
000234A6 <AmiBlitz3.ab2@7116>   MOVE.l #namebuff2,asmbuff
000234AA <AmiBlitz3.ab2@7117>    BSR.w JL_0_5DC2                                         ;dest
000234AC <AmiBlitz3.ab2@7120>   MOVEA.l (A7)+,A0
000234B2 <AmiBlitz3.ab2@7121>   MOVEA.l destpointer,A1
000234B4 <AmiBlitz3.ab2@7122>   MOVEA.l A1,A4
000234B6 <AmiBlitz3.ab2@7123>   ADDQ.w #2,A1
000234B8 <AmiBlitz3.ab2@7124>   MOVE.w (A0),D1
000234BA <AmiBlitz3.ab2@7125>   TST.w D3
000234BE <AmiBlitz3.ab2@7126>    BMI.w JL_0_639E
000234C2 <AmiBlitz3.ab2@7127>   MOVE.w $E(A0),D0
000234C6 <AmiBlitz3.ab2@7128>    BPL.w JL_0_6264
000234CA <AmiBlitz3.ab2@7129>   BTST #$0,D0
000234CE <AmiBlitz3.ab2@7130>    BEQ.w JL_0_6240
000234D2 <AmiBlitz3.ab2@7131>   CMP.w #$1,D5
000234D6 <AmiBlitz3.ab2@7132>    BNE.w JL_0_6240
000234DA <AmiBlitz3.ab2@7133>   CMP.w #$E,D3
000234DE <AmiBlitz3.ab2@7134>    BEQ.w JL_0_6264
000234E4 <AmiBlitz3.ab2@7135>   MOVE.w temp1,D0
000234E6 <AmiBlitz3.ab2@7136>   ADDQ.w #4,D0
000234EA <AmiBlitz3.ab2@7137> BRA.w JL_0_6256
000234EE <AmiBlitz3.ab2@7140>   BTST #$1,D0
000234F2 <AmiBlitz3.ab2@7141>    BEQ.w JL_0_6264
000234F6 <AmiBlitz3.ab2@7142>   CMP.w #$B,D3
000234FA <AmiBlitz3.ab2@7143>    BNE.w JL_0_6264
00023500 <AmiBlitz3.ab2@7144>   MOVE.w temp1,D0
00023502 <AmiBlitz3.ab2@7147>   ADDQ.w #4,D0
00023508 <AmiBlitz3.ab2@7148>   MOVEA.l #asmpnts,A0
0002350C <AmiBlitz3.ab2@7149>   MOVEA.l $0(A0,D0.W),A0
0002350E <AmiBlitz3.ab2@7150>   MOVE.w (A0),D1
00023518 <AmiBlitz3.ab2@7153>   MOVE.l #ptr_parameterstore,buff1
00023522 <AmiBlitz3.ab2@7154>   MOVE.l #namebuff2,buff2
00023526 <AmiBlitz3.ab2@7155>   MOVE.l $A(A0),D0
0002352A <AmiBlitz3.ab2@7156>    BEQ.w JL_0_62DC
0002352C <AmiBlitz3.ab2@7157>   MOVEA.l D0,A3
00023532 <AmiBlitz3.ab2@7158>   MOVE.w asmsize,D6
00023534 <AmiBlitz3.ab2@7161>    JSR (A3)
00023538 <AmiBlitz3.ab2@7162>    BPL.w JL_0_629A
0002353C <AmiBlitz3.ab2@7163>   CMP.w #-$2,D0
00023540 <AmiBlitz3.ab2@7164>    BEQ.w illsizeerr
00023544 <AmiBlitz3.ab2@7165> BRA.w illeaerr
00023548 <AmiBlitz3.ab2@7168>   BEQ.w JL_0_62DC
0002354A <AmiBlitz3.ab2@7169>   EXG.l D2,D4
0002354C <AmiBlitz3.ab2@7170>   EXG.l D3,D5
00023552 <AmiBlitz3.ab2@7171>   MOVE.l extraword,D6
00023554 <AmiBlitz3.ab2@7172>   SWAP D6
0002355A <AmiBlitz3.ab2@7173>   MOVE.l D6,extraword
00023564 <AmiBlitz3.ab2@7174>   MOVE.l #namebuff2,buff1
0002356E <AmiBlitz3.ab2@7175>   MOVE.l #ptr_parameterstore,buff2
00023574 <AmiBlitz3.ab2@7176>   MOVE.w asmlen,D6
0002357A <AmiBlitz3.ab2@7177>   MOVE.w asmlen2,D7
00023580 <AmiBlitz3.ab2@7178>   MOVE.w D6,asmlen2
00023586 <AmiBlitz3.ab2@7179>   MOVE.w D7,asmlen
00023590 <AmiBlitz3.ab2@7182>   MOVE.l buff1,asmbuff
00023594 <AmiBlitz3.ab2@7183>   MOVE.w $E(A0),D0
00023598 <AmiBlitz3.ab2@7184>    BEQ.w JL_0_6348
0002359C <AmiBlitz3.ab2@7185>    BMI.w JL_0_6348
000235A0 <AmiBlitz3.ab2@7186>    CMP.w #$7000,d1
000235A4 <AmiBlitz3.ab2@7187>    BNE 'skip
000235A8 <AmiBlitz3.ab2@7188>    CMP.w #$b,d3
000235AC <AmiBlitz3.ab2@7189>    BNE illeaerr
000235B0 <AmiBlitz3.ab2@7192>    CMP.w #$1,D0
000235B4 <AmiBlitz3.ab2@7193>    BNE.w JL_0_630E
000235B8 <AmiBlitz3.ab2@7194>    CMP.w #$B,D3
000235BC <AmiBlitz3.ab2@7195>    BNE.w JL_0_6348
000235C0 <AmiBlitz3.ab2@7198>    BSR.w insasm
000235C2 <AmiBlitz3.ab2@7199>   MOVE.w D4,D2
000235C4 <AmiBlitz3.ab2@7200>   MOVE.w D5,D3
000235C8 <AmiBlitz3.ab2@7201> BRA.w JL_0_6364
000235CC <AmiBlitz3.ab2@7204>    CMP.w #$2,D0
000235D0 <AmiBlitz3.ab2@7205>    BNE.w JL_0_6324
000235D4 <AmiBlitz3.ab2@7206>   CMP.w #$8,D3
000235D8 <AmiBlitz3.ab2@7207>    BNE.w illeaerr
000235DA <AmiBlitz3.ab2@7208>   MOVEQ.l #$09,D3
000235DE <AmiBlitz3.ab2@7209> BRA.w JL_0_6348
000235E2 <AmiBlitz3.ab2@7212>    CMP.w #$3,D0
000235E6 <AmiBlitz3.ab2@7213>    BEQ.w JL_0_6302
000235EA <AmiBlitz3.ab2@7214>   CMP.w #$4,D0
000235EE <AmiBlitz3.ab2@7215>    BEQ.w JL_0_6302
000235F2 <AmiBlitz3.ab2@7216>   CMP.w #$5,D0
000235F6 <AmiBlitz3.ab2@7217>    BNE.w JL_0_6348
000235FA <AmiBlitz3.ab2@7218>   CMP.w #$8,D5
000235FE <AmiBlitz3.ab2@7219>    BNE.w illeaerr
00023600 <AmiBlitz3.ab2@7220>   OR.w D2,D1
00023602 <AmiBlitz3.ab2@7221>   MOVEQ.l #$09,D5
00023606 <AmiBlitz3.ab2@7224>   MOVE.w $2(A0),D6
0002360A <AmiBlitz3.ab2@7225>   MOVE.b $6(A0),D7
0002360E <AmiBlitz3.ab2@7226>   MOVEM.l D4-D5,-(A7)
00023614 <AmiBlitz3.ab2@7227>   MOVE.w extraword2,D4
00023618 <AmiBlitz3.ab2@7228>    BSR.w doea
0002361C <AmiBlitz3.ab2@7229>   MOVEM.l (A7)+,D2-D3
0002361E <AmiBlitz3.ab2@7230>   TST.w D3
00023622 <AmiBlitz3.ab2@7233>     BMI.w JL_0_6392
00023628 <AmiBlitz3.ab2@7234>   MOVE.w extraword,D4
0002362C <AmiBlitz3.ab2@7235>   MOVE.w $4(A0),D6
00023630 <AmiBlitz3.ab2@7236>   MOVE.b $7(A0),D7
0002363A <AmiBlitz3.ab2@7237>   MOVE.l buff2,asmbuff
00023644 <AmiBlitz3.ab2@7238>   MOVE.w asmlen2,asmlen
00023648 <AmiBlitz3.ab2@7239>    BSR.w doea
0002364C <AmiBlitz3.ab2@7240> BRA.w JL_0_63AA
00023650 <AmiBlitz3.ab2@7243>   MOVE.w $4(A0),D0
00023654 <AmiBlitz3.ab2@7244>    BNE.w illeaerr
00023658 <AmiBlitz3.ab2@7245> BRA.w JL_0_63AA
0002365C <AmiBlitz3.ab2@7249>   MOVE.w $2(A0),D0
00023660 <AmiBlitz3.ab2@7250>   OR.w $4(A0),D0
00023664 <AmiBlitz3.ab2@7251>    BNE.w illeaerr
00023668 <AmiBlitz3.ab2@7254>   MOVE.w $8(A0),D0
0002366C <AmiBlitz3.ab2@7255>   ANDI.w #$F000,D0
00023670 <AmiBlitz3.ab2@7256>   CMP.w #-$1000,D0
00023674 <AmiBlitz3.ab2@7257>    BEQ.w JL_0_63D2
00023676 <AmiBlitz3.ab2@7258>   LSR.w #8,D0
00023678 <AmiBlitz3.ab2@7259>   LSR.w #4,D0
0002367C <AmiBlitz3.ab2@7260>   MOVE.w $8(A0),D2
00023682 <AmiBlitz3.ab2@7261>   MOVE.w asmsize,D3
00023684 <AmiBlitz3.ab2@7262>   LSR.w D3,D2
00023688 <AmiBlitz3.ab2@7263>   ANDI.w #$F,D2
0002368A <AmiBlitz3.ab2@7264>   LSL.w D0,D2
0002368C <AmiBlitz3.ab2@7265>   OR.w D2,D1
00023692 <AmiBlitz3.ab2@7268>   CMPA.l destbufferend,A4
00023696 <AmiBlitz3.ab2@7269>    BCS.w JL_0_63E8
0002369E <AmiBlitz3.ab2@7271>   MOVE.w #$FFFF,dontwrite
000236A2 <AmiBlitz3.ab2@7272> BRA.w JL_0_63EA
000236A4 <AmiBlitz3.ab2@7275>   MOVE.w D1,(A4)
000236AA <AmiBlitz3.ab2@7278>   MOVE.l A1,destpointer
000236AC <AmiBlitz3.ab2@7279> RTS
000236B2 <AmiBlitz3.ab2@7283>   MOVE.l destpointer,-(A7)
000236B8 <AmiBlitz3.ab2@7284>   MOVE.l A1,destpointer
000236BC <AmiBlitz3.ab2@7285>    BSR.w addoff
000236C2 <AmiBlitz3.ab2@7286>   MOVEA.l destpointer,A1
000236C8 <AmiBlitz3.ab2@7287>   MOVE.l (A7)+,destpointer
000236CA <AmiBlitz3.ab2@7288> RTS
000236CE <AmiBlitz3.ab2@7292>   MOVEM.l d2-d6,-(a7)
000236D4 <AmiBlitz3.ab2@7293>   JSR stripspaces
000236D8 <AmiBlitz3.ab2@7294>   CMP.b #"d",(a5)+
000236DC <AmiBlitz3.ab2@7295>   BNE noreg
000236DE <AmiBlitz3.ab2@7296>   MOVE.b (a5)+,d0
000236E2 <AmiBlitz3.ab2@7297>   CMP.b #$30,d0
000236E6 <AmiBlitz3.ab2@7298>   BLT noreg
000236EA <AmiBlitz3.ab2@7299>   CMP.b #$37,d0
000236EE <AmiBlitz3.ab2@7300>   BGT noreg
000236F2 <AmiBlitz3.ab2@7301>   SUB.b #$30,d0
000236F4 <AmiBlitz3.ab2@7302>   MOVEQ #0,d3
000236F6 <AmiBlitz3.ab2@7303>   MOVE.b d0,d3                                             ;reg1
000236F8 <AmiBlitz3.ab2@7304>   ASL.l #8,d3
000236FA <AmiBlitz3.ab2@7305>   ASL.l #8,d3
00023700 <AmiBlitz3.ab2@7306>   JSR stripspaces
00023704 <AmiBlitz3.ab2@7307>   CMP.b #",",(a5)+
00023708 <AmiBlitz3.ab2@7308>   BNE noreg
0002370E <AmiBlitz3.ab2@7309>   JSR stripspaces
00023712 <AmiBlitz3.ab2@7310>   CMP.b #"d",(a5)+
00023716 <AmiBlitz3.ab2@7311>   BNE noreg
00023718 <AmiBlitz3.ab2@7312>   MOVE.b (a5)+,d0
0002371C <AmiBlitz3.ab2@7313>   CMP.b #$30,d0
00023720 <AmiBlitz3.ab2@7314>   BLT noreg
00023724 <AmiBlitz3.ab2@7315>   CMP.b #$37,d0
00023728 <AmiBlitz3.ab2@7316>   BGT noreg
0002372C <AmiBlitz3.ab2@7317>   SUB.b #$30,d0
0002372E <AmiBlitz3.ab2@7318>   MOVEQ #0,d4
00023730 <AmiBlitz3.ab2@7319>   MOVE.b d0,d4                                             ;reg2
00023732 <AmiBlitz3.ab2@7320>   ASL.l #8,d4
00023734 <AmiBlitz3.ab2@7321>   ASL.l #4,d4
00023736 <AmiBlitz3.ab2@7322>   OR.b d0,d1
00023738 <AmiBlitz3.ab2@7323>   OR.l d3,d1
0002373A <AmiBlitz3.ab2@7324>   OR.l d4,d1
00023740 <AmiBlitz3.ab2@7325>   JSR writelong
00023744 <AmiBlitz3.ab2@7326>   MOVEM.l (a7)+,d2-d6
00023748 <AmiBlitz3.ab2@7327>   MOVEM.l d1/a1-a3,-(a7)
0002374C <AmiBlitz3.ab2@7328> BRA exit
00023750 <AmiBlitz3.ab2@7332>   MOVEM.l (a7)+,d2-d6
00023756 <AmiBlitz3.ab2@7333>   LEA errtext,a0
00023758 <AmiBlitz3.ab2@7334>   MOVE.l a0,-(a7)
0002375E <AmiBlitz3.ab2@7335> JMP handle_compileerror
00023764 <AmiBlitz3.ab2@7344>   MOVE.w dontwrite,D1
00023768 <AmiBlitz3.ab2@7345>    BNE.w asmfixer__done
00023770 <AmiBlitz3.ab2@7346>   BTST #$7,make_smallestcode
00023774 <AmiBlitz3.ab2@7347>    BEQ.w asmfixer__go
00023778 <AmiBlitz3.ab2@7348>   MOVE.w pass(PC),D1
0002377C <AmiBlitz3.ab2@7349>    BEQ.w asmfixer__done
00023782 <AmiBlitz3.ab2@7352>   MOVEA.l templabel,A2                                     ;insert labels in Code
0002378A <AmiBlitz3.ab2@7353>   MOVE.b #1,curtemplabel
00023792 <AmiBlitz3.ab2@7354>   MOVE.w #$FFFF,constmode
00023798 <AmiBlitz3.ab2@7355>   CLR.w regnum
000237A2 <AmiBlitz3.ab2@7356>           MOVE.l #forthstack,forthsp
000237AC <AmiBlitz3.ab2@7357>           MOVE.l #precstack,precsp
000237B0 <AmiBlitz3.ab2@7358>    BSR.w prepstack
000237B2 <AmiBlitz3.ab2@7361>   MOVE.l A2,-(A7)
000237B6 <AmiBlitz3.ab2@7362>    BSR.w chkstop
000237B8 <AmiBlitz3.ab2@7363>   MOVEA.l (A7)+,A2
000237BC <AmiBlitz3.ab2@7364>   CMPA.w #$0,A2
000237C0 <AmiBlitz3.ab2@7365>    BEQ.w asmfixer__done2
000237C6 <AmiBlitz3.ab2@7366>    CLR.b iee
000237CC <AmiBlitz3.ab2@7367>   MOVE.l A2,asmbuff
000237D0 <AmiBlitz3.ab2@7368>   LEA $10(A2),A5
000237D4 <AmiBlitz3.ab2@7369>   TST.b $F(A2)
000237D8 <AmiBlitz3.ab2@7370>    BNE.w asmfixer__skipo
000237DA <AmiBlitz3.ab2@7371>   MOVEA.l (A5),A5                                          ;pointer to real text
000237E0 <AmiBlitz3.ab2@7374>    CLR.w asmtype
000237E4 <AmiBlitz3.ab2@7375>    CMP.b #".",(a5)
000237E8 <AmiBlitz3.ab2@7376>    BNE.s asmfixer__skipo_l10
000237EA <AmiBlitz3.ab2@7377>    MOVE.l a2,-(a7)
000237EC <AmiBlitz3.ab2@7378>    ADDQ.l #1,a5
000237F2 <AmiBlitz3.ab2@7379>    LEA newtypebase,a2
000237F6 <AmiBlitz3.ab2@7380>    BSR getparameter2
000237FA <AmiBlitz3.ab2@7381>    BEQ.w syntaxerr
000237FE <AmiBlitz3.ab2@7382>    BSR findtype
00023802 <AmiBlitz3.ab2@7383>    BNE.w notypeerr
00023806 <AmiBlitz3.ab2@7384>    LEA $4(a2),a2
0002380A <AmiBlitz3.ab2@7385>    BSR getparameter2
0002380E <AmiBlitz3.ab2@7386>    BEQ.w syntaxerr
00023812 <AmiBlitz3.ab2@7387>    BSR.w findvariable2
00023816 <AmiBlitz3.ab2@7388>    BNE.w notypeerr
0002381A <AmiBlitz3.ab2@7389>    MOVE.w $4(a2),d3
0002381C <AmiBlitz3.ab2@7390>    EXT.l d3
00023820 <AmiBlitz3.ab2@7391> BRA asmfixer__skipo_l30b
00023824 <AmiBlitz3.ab2@7394>   CMP.b #"\",(a5)
00023828 <AmiBlitz3.ab2@7395>     BNE asmfixer__skipo_l20
0002382A <AmiBlitz3.ab2@7396>     ADDQ.l #1,a5
0002382C <AmiBlitz3.ab2@7397>    MOVE.l a2,-(a7)
0002382E <AmiBlitz3.ab2@7398>    MOVE.l a5,a4
00023834 <AmiBlitz3.ab2@7399>    LEA usedpath,a5
00023838 <AmiBlitz3.ab2@7400>    CMP.b #"*",(a5)
0002383C <AmiBlitz3.ab2@7401>    BNE asmfixer__skipo_lm1
0002383E <AmiBlitz3.ab2@7402>    ADDQ.l #1,a5
00023842 <AmiBlitz3.ab2@7405>    BSR.w getparameter2
00023846 <AmiBlitz3.ab2@7406>    BEQ.w syntaxerr
0002384C <AmiBlitz3.ab2@7407>    LEA varbase,A2
00023854 <AmiBlitz3.ab2@7408>    MOVE.b #1,newvariable
00023858 <AmiBlitz3.ab2@7409>    BSR.w findvariable
0002385E <AmiBlitz3.ab2@7410>    CLR.b newvariable
00023864 <AmiBlitz3.ab2@7411>    CMP.l #-1,d0
00023868 <AmiBlitz3.ab2@7412>    BEQ.w notypeerr
0002386A <AmiBlitz3.ab2@7413>    MOVE.l a4,a5
0002386E <AmiBlitz3.ab2@7414>    MOVE.l $a(a2),a2
00023872 <AmiBlitz3.ab2@7415>    LEA $4(a2),a2
00023876 <AmiBlitz3.ab2@7416>    BSR getparameter2
0002387A <AmiBlitz3.ab2@7417>    BEQ.w syntaxerr
0002387E <AmiBlitz3.ab2@7418>    BSR.w findvariable2
00023882 <AmiBlitz3.ab2@7419>    BNE.w notypeerr
00023886 <AmiBlitz3.ab2@7420>   MOVE.w $4(A2),D3
00023888 <AmiBlitz3.ab2@7421>   EXT.l D3
0002388E <AmiBlitz3.ab2@7424>    CMP.b #"[",-1(a5)
00023892 <AmiBlitz3.ab2@7425>    BNE asmfixer__skipo_l30c
00023894 <AmiBlitz3.ab2@7426>    MOVEQ #0,d0
00023896 <AmiBlitz3.ab2@7427>    MOVE.b (a5)+,d0
00023898 <AmiBlitz3.ab2@7428>    MOVE.l d3,-(a7)
0002389A <AmiBlitz3.ab2@7429>    MOVEQ #0,d3
000238A0 <AmiBlitz3.ab2@7430>    JSR atoi
000238A2 <AmiBlitz3.ab2@7431>    MOVE.l (a7)+,d1
000238A6 <AmiBlitz3.ab2@7432>    MOVE.l $a(a2),a2
000238AA <AmiBlitz3.ab2@7433>    MOVE.w 8(a2),d0
000238AC <AmiBlitz3.ab2@7434>    MULS d0,d3
000238AE <AmiBlitz3.ab2@7435>    ADD.l d1,d3
000238B0 <AmiBlitz3.ab2@7438>   MOVE.l (a7)+,a2
000238B4 <AmiBlitz3.ab2@7439> BRA asmfixer__oko
000238BA <AmiBlitz3.ab2@7442>   CMP.w #$c,$8(a2)
000238BE <AmiBlitz3.ab2@7443>      BEQ asmfixer__skipo_lf1
000238C4 <AmiBlitz3.ab2@7444>      CMP.w #$d,$8(a2)
000238C8 <AmiBlitz3.ab2@7445>      BEQ asmfixer__skipo_lf1
000238CE <AmiBlitz3.ab2@7448>   JSR AJL_0_BF6E
000238D4 <AmiBlitz3.ab2@7451>   MOVEA.l asmbuff,A2
000238D8 <AmiBlitz3.ab2@7452>    BEQ.w asmfixer__oko
000238DC <AmiBlitz3.ab2@7453>   CMP.w #$28,D0
000238E0 <AmiBlitz3.ab2@7454>    BEQ.w asmfixer__oko
000238E4 <AmiBlitz3.ab2@7455>   CMP.w #$2C,D0
000238E8 <AmiBlitz3.ab2@7456>    BEQ.w asmfixer__oko
000238EC <AmiBlitz3.ab2@7457> BRA.w syntaxerr
000238F4 <AmiBlitz3.ab2@7460>   MOVE.b #1,iee
000238F8 <AmiBlitz3.ab2@7461> BRA asmfixer__skipo_lf2
000238FC <AmiBlitz3.ab2@7464>   MOVEA.l $4(A2),A1
00023900 <AmiBlitz3.ab2@7466>   MOVE.w $8(A2),D1                                         ;labelmode
00023904 <AmiBlitz3.ab2@7467>   CMP.w #$5,D1
00023908 <AmiBlitz3.ab2@7468>    BNE.w asmfixer__notdan
0002390C <AmiBlitz3.ab2@7471>    BSR.w chkword                                         ;word
0002390E <AmiBlitz3.ab2@7474>   MOVE.w D3,(A1)
00023912 <AmiBlitz3.ab2@7475> BRA.w asmfixer__next
00023916 <AmiBlitz3.ab2@7478>   CMP.w #$6,D1
0002391A <AmiBlitz3.ab2@7479>    BNE.w asmfixer__notdanxi
0002391E <AmiBlitz3.ab2@7482>    BSR.w chkbyte                                         ;byte
00023922 <AmiBlitz3.ab2@7485>   MOVE.b D3,$1(A1)
00023926 <AmiBlitz3.ab2@7486> BRA.w asmfixer__next
0002392A <AmiBlitz3.ab2@7489>    CMP.w #$11,D1                                           ;byte
0002392E <AmiBlitz3.ab2@7490>    BEQ.w asmfixer__isbyte2
00023932 <AmiBlitz3.ab2@7491>    CMP.w #$c,d1
00023936 <AmiBlitz3.ab2@7492>    BEQ asmfixer__single1
0002393A <AmiBlitz3.ab2@7493>    CMP.w #$d,d1
0002393E <AmiBlitz3.ab2@7494>    BEQ asmfixer__double1
00023942 <AmiBlitz3.ab2@7495>   CMP.w #$7,D1
00023946 <AmiBlitz3.ab2@7496>    BEQ.w asmfixer__word                                    ;word
0002394A <AmiBlitz3.ab2@7497>   CMP.w #$8,D1
0002394E <AmiBlitz3.ab2@7498>    BNE.w asmfixer__notabsl
00023954 <AmiBlitz3.ab2@7501>   MOVE.w asmtype,D1                                        ;long
00023958 <AmiBlitz3.ab2@7502>    BEQ.w asmfixer__notpcrel
0002395C <AmiBlitz3.ab2@7503>      BSR.w asmoff
0002395E <AmiBlitz3.ab2@7506>   MOVE.l D3,(A1)
00023962 <AmiBlitz3.ab2@7507> BRA.w asmfixer__next
00023968 <AmiBlitz3.ab2@7511>   fmove.s fp0,0(a1)
0002396C <AmiBlitz3.ab2@7512> BRA.w asmfixer__next
00023972 <AmiBlitz3.ab2@7516>   fmove.d fp0,0(a1)
00023976 <AmiBlitz3.ab2@7517> BRA.w asmfixer__next
0002397A <AmiBlitz3.ab2@7521>   CMP.w #$9,D1
0002397E <AmiBlitz3.ab2@7522>    BNE.w asmfixer__notdpc
00023980 <AmiBlitz3.ab2@7523>   SUB.l A1,D3                                              ;branchword
00023984 <AmiBlitz3.ab2@7524>    BSR.w chkword
00023986 <AmiBlitz3.ab2@7525>   MOVE.w D3,(A1)
0002398A <AmiBlitz3.ab2@7526> BRA.w asmfixer__next
0002398E <AmiBlitz3.ab2@7530>   CMP.w #$A,D1
00023992 <AmiBlitz3.ab2@7531>    BNE.w asmfixer__imm
00023994 <AmiBlitz3.ab2@7532>   SUB.l A1,D3                                              ;branchbyte
00023998 <AmiBlitz3.ab2@7533> BRA.w asmfixer__isbyte
0002399C <AmiBlitz3.ab2@7537>   CMP.w #$11,d1
000239A0 <AmiBlitz3.ab2@7538>   BLE asmfixer__imm_org
000239A2 <AmiBlitz3.ab2@7539>   MOVE.l a3,-(a7)
000239A8 <AmiBlitz3.ab2@7540>   LEA pluginbase,a3
000239AC <AmiBlitz3.ab2@7541>   MOVE.l 8(a2),a0
000239AE <AmiBlitz3.ab2@7542>   JSR (a0)                                                 ;hook
000239B0 <AmiBlitz3.ab2@7543>   MOVE.l (a7)+,a3
000239B4 <AmiBlitz3.ab2@7544> BRA asmfixer__next
000239B8 <AmiBlitz3.ab2@7547>   MOVE.w $A(A2),D0
000239BC <AmiBlitz3.ab2@7548>    BEQ.w asmfixer__noflag
000239C0 <AmiBlitz3.ab2@7549>   CMP.w #$1,D0
000239C4 <AmiBlitz3.ab2@7550>    BEQ.w asmfixer__tocount
000239C8 <AmiBlitz3.ab2@7551>   CMP.w #$3,D0
000239CC <AmiBlitz3.ab2@7552>    BEQ.w asmfixer__tomoveq
000239D0 <AmiBlitz3.ab2@7553>   CMP.w #$4,D0
000239D4 <AmiBlitz3.ab2@7554>    BEQ.w asmfixer__totrap
000239D8 <AmiBlitz3.ab2@7557>   CMP.w #$B,D1                                             ;long
000239DC <AmiBlitz3.ab2@7558>    BEQ.w asmfixer__isabsl
000239E0 <AmiBlitz3.ab2@7559> BRA asmfixer__word2                                              ;word
000239E6 <AmiBlitz3.ab2@7562>   CMP.l #$F,D3
000239EA <AmiBlitz3.ab2@7563>    BHI.w illtraperr
000239EC <AmiBlitz3.ab2@7564>   OR.b D3,-(A1)
000239F0 <AmiBlitz3.ab2@7565> BRA.w asmfixer__next
000239F6 <AmiBlitz3.ab2@7568>   CMP.l #$8,D3
000239FA <AmiBlitz3.ab2@7569>    BHI.w illimmerr
000239FC <AmiBlitz3.ab2@7570>   TST.l D3
00023A00 <AmiBlitz3.ab2@7571>    BEQ.w illimmerr
00023A04 <AmiBlitz3.ab2@7572>   ANDI.w #$7,D3
00023A06 <AmiBlitz3.ab2@7573>   LSL.w #8,D3
00023A08 <AmiBlitz3.ab2@7574>   LSL.w #1,D3
00023A0A <AmiBlitz3.ab2@7575>   OR.w D3,-(A1)
00023A0E <AmiBlitz3.ab2@7576> BRA.w asmfixer__next
00023A12 <AmiBlitz3.ab2@7579>    BSR.w chkbyte
00023A14 <AmiBlitz3.ab2@7580>   MOVE.b D3,-(A1)
00023A16 <AmiBlitz3.ab2@7583>   MOVEA.l (A2),A2
00023A1A <AmiBlitz3.ab2@7584> BRA.w asmfixer__loop
00023A20 <AmiBlitz3.ab2@7587>   CLR.w constmode
00023A26 <AmiBlitz3.ab2@7590>   CLR.b curtemplabel
00023A28 <AmiBlitz3.ab2@7591> RTS
00023A2A <AmiBlitz3.ab2@7600>   BTST D3,D6
00023A2E <AmiBlitz3.ab2@7601>    BEQ.w illeaerr
00023A32 <AmiBlitz3.ab2@7602>    BSR.w makemode
00023A36 <AmiBlitz3.ab2@7603>   CMP.w #$7,D3
00023A3A <AmiBlitz3.ab2@7604>    BCS.w doea__skip
00023A3C <AmiBlitz3.ab2@7605>   MOVE.w D3,D2
00023A3E <AmiBlitz3.ab2@7606>   SUBQ.w #7,D2
00023A42 <AmiBlitz3.ab2@7607>   CMP.w #$5,D2
00023A46 <AmiBlitz3.ab2@7608>    BCS.w doea__skip0
00023A48 <AmiBlitz3.ab2@7609>   MOVEQ.l #$04,D2
00023A4A <AmiBlitz3.ab2@7612>   MOVEQ.l #$07,D3
00023A4C <AmiBlitz3.ab2@7615>   MOVE.b D7,D0
00023A50 <AmiBlitz3.ab2@7616>   ANDI.w #$F,D0
00023A54 <AmiBlitz3.ab2@7617>   CMP.w #$F,D0
00023A58 <AmiBlitz3.ab2@7618>    BEQ.w doea__skip2
00023A5A <AmiBlitz3.ab2@7619>   LSL.w D0,D3
00023A5C <AmiBlitz3.ab2@7620>   OR.w D3,D1
00023A5E <AmiBlitz3.ab2@7623>   LSR.w #4,D7
00023A62 <AmiBlitz3.ab2@7624>   ANDI.w #$F,D7
00023A66 <AmiBlitz3.ab2@7625>   CMP.w #$F,D7
00023A6A <AmiBlitz3.ab2@7626>    BEQ.w doea__skip3
00023A6C <AmiBlitz3.ab2@7627>   LSL.w D7,D2
00023A6E <AmiBlitz3.ab2@7628>   OR.w D2,D1
00023A70 <AmiBlitz3.ab2@7631> RTS
00023A76 <AmiBlitz3.ab2@7635>   CMP.l #$7F,D3
00023A7A <AmiBlitz3.ab2@7636>    BGT.w illdiserr
00023A80 <AmiBlitz3.ab2@7637>   CMP.l #$FFFFFF80,D3                                      ;#-128,d3 org source
00023A84 <AmiBlitz3.ab2@7638>    BLT.w illdiserr
00023A86 <AmiBlitz3.ab2@7639> RTS
00023A8C <AmiBlitz3.ab2@7643>   CMP.l #$7fff,D3
00023A90 <AmiBlitz3.ab2@7644>    BGT.w illdiserr
00023A96 <AmiBlitz3.ab2@7645>   CMP.l #$FFFF8000,D3                                      ;#-32768,d3 org source
00023A9A <AmiBlitz3.ab2@7646>    BLT.w illdiserr
00023A9C <AmiBlitz3.ab2@7647> RTS
00023A9E <AmiBlitz3.ab2@7652>   MOVE.b (a5)+,d0
00023AA0 <AmiBlitz3.ab2@7653>   CMP.b d1,d0
00023AA4 <AmiBlitz3.ab2@7654>   BEQ 'll10
00023AA6 <AmiBlitz3.ab2@7655>   TST.b d0
00023AAA <AmiBlitz3.ab2@7656>   BNE 'll20
00023AAC <AmiBlitz3.ab2@7659>   SUBQ #1,a5
00023AAE <AmiBlitz3.ab2@7660> RTS
00023AB0 <AmiBlitz3.ab2@7665>   MOVE.b (a5)+,d0
00023AB4 <AmiBlitz3.ab2@7666>   CMP.b #",",d0
00023AB8 <AmiBlitz3.ab2@7667>   BEQ 'll10
00023ABC <AmiBlitz3.ab2@7668>   CMP.b #";",d0
00023AC0 <AmiBlitz3.ab2@7669>   BEQ 'll10
00023AC4 <AmiBlitz3.ab2@7670>  CMP.b #":",d0
00023AC8 <AmiBlitz3.ab2@7671>   BEQ 'll10
00023ACA <AmiBlitz3.ab2@7674>   TST.b d0
00023ACE <AmiBlitz3.ab2@7675>   BNE 'll20
00023AD0 <AmiBlitz3.ab2@7678>   SUBQ #1,a5
00023AD2 <AmiBlitz3.ab2@7679> RTS
00023AD4 <AmiBlitz3.ab2@7683>   ADD.l a2,d1
00023ADA <AmiBlitz3.ab2@7684>   LEA tempspace,a1
00023ADC <AmiBlitz3.ab2@7685>   MOVE.l d1,a0
00023ADE <AmiBlitz3.ab2@7688>   MOVE.b (a0)+,(a1)+
00023AE2 <AmiBlitz3.ab2@7689>   BNE.s 'l10
00023AE4 <AmiBlitz3.ab2@7690>   SUBQ.l #1,a0
00023AE6 <AmiBlitz3.ab2@7691>   SUBQ.l #1,a1
00023AE8 <AmiBlitz3.ab2@7694>   MOVE.b (a5)+,(a1)+
00023AEC <AmiBlitz3.ab2@7695>   BNE.s 'l20
00023AEE <AmiBlitz3.ab2@7696>   CLR.b (a1)
00023AF4 <AmiBlitz3.ab2@7697>   LEA tempspace,a5
00023AF6 <AmiBlitz3.ab2@7698> RTS
00023AFA <AmiBlitz3.ab2@7702>   MOVEM.l D1-D2/A0,-(A7)
00023AFC <AmiBlitz3.ab2@7703>   MOVE.l d0,d2
00023AFE <AmiBlitz3.ab2@7704>   MOVEQ #0,d1
00023B00 <AmiBlitz3.ab2@7705>   MOVE.l a5,a4
00023B02 <AmiBlitz3.ab2@7708>   ADDQ.l #1,d1
00023B04 <AmiBlitz3.ab2@7709>   MOVE.b (a5)+,d0
00023B08 <AmiBlitz3.ab2@7710>   CMP.b #",",d0
00023B0C <AmiBlitz3.ab2@7711>   BEQ 'll10
00023B10 <AmiBlitz3.ab2@7712>   CMP.b #";",d0
00023B14 <AmiBlitz3.ab2@7713>   BEQ 'll10
00023B18 <AmiBlitz3.ab2@7714>   CMP.b #":",d0
00023B1C <AmiBlitz3.ab2@7715>   BEQ 'll10
00023B20 <AmiBlitz3.ab2@7716>   CMP.b #"(",d0
00023B24 <AmiBlitz3.ab2@7717>   BEQ 'll10
00023B26 <AmiBlitz3.ab2@7718>   TST.b d0
00023B2A <AmiBlitz3.ab2@7719>   BNE 'll20
00023B2C <AmiBlitz3.ab2@7722>   SUBQ #1,a5
00023B30 <AmiBlitz3.ab2@7723>   CMP.b #"'",(a4)
00023B34 <AmiBlitz3.ab2@7724>   BEQ 'llocal
00023B3A <AmiBlitz3.ab2@7725>   TST.w inmacro
00023B3E <AmiBlitz3.ab2@7726>   BNE 'lmacro
00023B40 <AmiBlitz3.ab2@7727>   MOVEQ.l #$14+4,D0
00023B42 <AmiBlitz3.ab2@7728>   ADD.l d1,d0
00023B44 <AmiBlitz3.ab2@7729>   MOVE.l d1,-(a7)
00023B46 <AmiBlitz3.ab2@7730>   MOVEQ.l #$01,D1
00023B4C <AmiBlitz3.ab2@7731>   MOVEA.l _execbase,A6
00023B52 <AmiBlitz3.ab2@7732>   MOVE.l mempool2,a0
00023B56 <AmiBlitz3.ab2@7733>   JSR _AllocPooled(a6)
00023B58 <AmiBlitz3.ab2@7735>   MOVE.l (a7)+,d1
00023B5A <AmiBlitz3.ab2@7736>   TST.l d0
00023B5E <AmiBlitz3.ab2@7737>   BEQ nomemory
00023B60 <AmiBlitz3.ab2@7738>   MOVEA.l D0,A0
00023B68 <AmiBlitz3.ab2@7740>   MOVE.w linenumat+2,$A(A0)
00023B6E <AmiBlitz3.ab2@7742>   MOVE.l templabel,(A0)
00023B74 <AmiBlitz3.ab2@7743>   MOVE.l A0,templabel
00023B7C <AmiBlitz3.ab2@7744>   MOVE.l destpointer,$4(A0)
00023B80 <AmiBlitz3.ab2@7745>   MOVE.l d2,$8(A0)
00023B84 <AmiBlitz3.ab2@7746>   LEA $E(A0),A0
00023B88 <AmiBlitz3.ab2@7747>   MOVE.b #$14,(A0)+
00023B8A <AmiBlitz3.ab2@7748>   CLR.b (a0)+
00023B8C <AmiBlitz3.ab2@7750>   MOVE.l a0,d2
00023B8E <AmiBlitz3.ab2@7751>   ADDQ.l #4,d2
00023B90 <AmiBlitz3.ab2@7752>   MOVE.l d2,(a0)+
00023B92 <AmiBlitz3.ab2@7755>   MOVE.b (a4)+,(a0)+
00023B94 <AmiBlitz3.ab2@7756>   SUBQ.l #1,d1
00023B98 <AmiBlitz3.ab2@7757>   BNE 'lc1
00023B9A <AmiBlitz3.ab2@7758>   CLR.b (a0)+
00023BA0 <AmiBlitz3.ab2@7759>   MOVE.w linenumat,(a0)
00023BA4 <AmiBlitz3.ab2@7760>   MOVEM.l (A7)+,D1-D2/A0
00023BA6 <AmiBlitz3.ab2@7761> RTS
00023BA8 <AmiBlitz3.ab2@7764>   MOVEQ.l #$10+2,D0
00023BAA <AmiBlitz3.ab2@7765>   ADD.l d1,d0
00023BAE <AmiBlitz3.ab2@7766>   MOVEM.l a4/d3,-(a7)
00023BB0 <AmiBlitz3.ab2@7767>   MOVE.l d1,d3
00023BB2 <AmiBlitz3.ab2@7768>   MOVEQ.l #$01,D1
00023BB8 <AmiBlitz3.ab2@7769>   MOVEA.l _execbase,A6
00023BBE <AmiBlitz3.ab2@7770>   MOVE.l mempool2,a0
00023BC2 <AmiBlitz3.ab2@7771>   JSR _AllocPooled(a6)
00023BC4 <AmiBlitz3.ab2@7773>   TST.l d0
00023BC8 <AmiBlitz3.ab2@7774>   BEQ nomemory
00023BCA <AmiBlitz3.ab2@7775>   MOVEA.l D0,A0
00023BD2 <AmiBlitz3.ab2@7778>   MOVE.w linenumat+2,$C(A0)
00023BD8 <AmiBlitz3.ab2@7779>   MOVE.l templabel,(A0)
00023BDE <AmiBlitz3.ab2@7780>   MOVE.l A0,templabel
00023BE6 <AmiBlitz3.ab2@7781>   MOVE.l destpointer,$4(A0)
00023BEA <AmiBlitz3.ab2@7782>   MOVE.l d2,$8(A0)
00023BEE <AmiBlitz3.ab2@7783>   LEA $E(A0),A0
00023BF0 <AmiBlitz3.ab2@7784>   MOVE.b d3,(A0)+
00023BF6 <AmiBlitz3.ab2@7785>   ADD.b #$10,-1(a0)
00023BFA <AmiBlitz3.ab2@7786>   MOVE.b #$1,(a0)+
00023BFC <AmiBlitz3.ab2@7787>   SUBQ.w #1,d3
00023BFE <AmiBlitz3.ab2@7790>   MOVE.b (a4)+,(a0)+
00023C00 <AmiBlitz3.ab2@7791>   SUBQ.l #1,d3
00023C04 <AmiBlitz3.ab2@7792>   BNE.s 'lm2
00023C06 <AmiBlitz3.ab2@7793>   CLR.b (a0)+
00023C0C <AmiBlitz3.ab2@7794>   MOVE.w linenumat,(a0)
00023C10 <AmiBlitz3.ab2@7795>   MOVEM.l (a7)+,d3/a4
00023C14 <AmiBlitz3.ab2@7796>   MOVEM.l (A7)+,D1-D2/A0
00023C16 <AmiBlitz3.ab2@7797> RTS
00023C1C <AmiBlitz3.ab2@7800>   LEA lastgloballabel,a1
00023C1E <AmiBlitz3.ab2@7803>   ADDQ.l #1,d1
00023C20 <AmiBlitz3.ab2@7804>   TST.b (a1)+
00023C24 <AmiBlitz3.ab2@7805>   BNE.s 'll11
00023C26 <AmiBlitz3.ab2@7806>   MOVEQ.l #$10+2,D0
00023C28 <AmiBlitz3.ab2@7807>   ADD.l d1,d0
00023C2C <AmiBlitz3.ab2@7808>   MOVEM.l a4/d3,-(a7)
00023C2E <AmiBlitz3.ab2@7809>   MOVE.l d1,d3
00023C30 <AmiBlitz3.ab2@7810>   MOVEQ.l #$01,D1
00023C36 <AmiBlitz3.ab2@7811>   MOVEA.l _execbase,A6
00023C3C <AmiBlitz3.ab2@7812>   MOVE.l mempool2,a0
00023C40 <AmiBlitz3.ab2@7813>   JSR _AllocPooled(a6)
00023C42 <AmiBlitz3.ab2@7815>   TST.l d0
00023C46 <AmiBlitz3.ab2@7816>   BEQ nomemory
00023C48 <AmiBlitz3.ab2@7817>   MOVEA.l D0,A0
00023C50 <AmiBlitz3.ab2@7820>   MOVE.w linenumat+2,$C(A0)
00023C56 <AmiBlitz3.ab2@7821>   MOVE.l templabel,(A0)
00023C5C <AmiBlitz3.ab2@7822>   MOVE.l A0,templabel
00023C64 <AmiBlitz3.ab2@7823>   MOVE.l destpointer,$4(A0)
00023C68 <AmiBlitz3.ab2@7824>   MOVE.l d2,$8(A0)
00023C6C <AmiBlitz3.ab2@7825>   LEA $E(A0),A0
00023C6E <AmiBlitz3.ab2@7826>   MOVE.b d3,(A0)+
00023C74 <AmiBlitz3.ab2@7827>   ADD.b #$10,-1(a0)
00023C78 <AmiBlitz3.ab2@7828>   MOVE.b #$1,(a0)+
00023C7A <AmiBlitz3.ab2@7829>   SUBQ.w #1,d3
00023C80 <AmiBlitz3.ab2@7830>   LEA lastgloballabel,a1
00023C82 <AmiBlitz3.ab2@7833>   SUBQ.l #1,d3
00023C84 <AmiBlitz3.ab2@7834>   MOVE.b (a1)+,(a0)+
00023C88 <AmiBlitz3.ab2@7835>   BNE.s 'lm3
00023C8A <AmiBlitz3.ab2@7836>   SUBQ.l #1,a0
00023C8C <AmiBlitz3.ab2@7839>   MOVE.b (a4)+,(a0)+
00023C8E <AmiBlitz3.ab2@7840>   SUBQ.l #1,d3
00023C92 <AmiBlitz3.ab2@7841>   BNE.s 'lm1
00023C94 <AmiBlitz3.ab2@7842>   CLR.b (a0)+
00023C9A <AmiBlitz3.ab2@7843>   MOVE.w linenumat,(a0)
00023C9E <AmiBlitz3.ab2@7844>   MOVEM.l (a7)+,d3/a4
00023CA2 <AmiBlitz3.ab2@7845>   MOVEM.l (A7)+,D1-D2/A0
00023CA4 <AmiBlitz3.ab2@7846> RTS
00023CCE <AmiBlitz3.ab2@7850>   !basic
00023D24 <AmiBlitz3.ab2@7851>   error{!TRANS{"No memory available!!!\\nAB3 will terminate due to low memory!"}}
00023D36 <AmiBlitz3.ab2@7852>   loop Delay_ 1
00023D3C <AmiBlitz3.ab2@7853> Goto loop
00023D40 <AmiBlitz3.ab2@7857>   MOVEM.l D0-D2/A0,-(A7)
00023D44 <AmiBlitz3.ab2@7858>   MOVE.w $E(A0),-(A7)
00023D48 <AmiBlitz3.ab2@7859>    BPL.w insasm__ok
00023D4A <AmiBlitz3.ab2@7860>   CLR.w (A7)
00023D4C <AmiBlitz3.ab2@7863>   MOVE.l A1,-(A7)
00023D4E <AmiBlitz3.ab2@7864>   MOVEQ.l #$10+2,D0
00023D54 <AmiBlitz3.ab2@7865>   ADD.w asmlen,D0
00023D56 <AmiBlitz3.ab2@7866>   MOVE.w D0,D2
00023D58 <AmiBlitz3.ab2@7867>   MOVEQ.l #$01,D1
00023D5E <AmiBlitz3.ab2@7868>   MOVEA.l _execbase,A6
00023D64 <AmiBlitz3.ab2@7869>   MOVE.l mempool2,a0
00023D68 <AmiBlitz3.ab2@7870>   JSR _AllocPooled(a6)
00023D6A <AmiBlitz3.ab2@7872>   MOVEA.l D0,A0
00023D72 <AmiBlitz3.ab2@7875>   MOVE.w linenumat+2,$C(A0)
00023D78 <AmiBlitz3.ab2@7876>   MOVE.l templabel,(A0)
00023D7E <AmiBlitz3.ab2@7877>   MOVE.l A0,templabel
00023D82 <AmiBlitz3.ab2@7878>   MOVE.l (A7),$4(A0)
00023D86 <AmiBlitz3.ab2@7879>   MOVE.w d3,$8(A0)
00023D8C <AmiBlitz3.ab2@7880>   MOVE.w $4(A7),$A(A0)
00023D90 <AmiBlitz3.ab2@7881>   LEA $E(A0),A0
00023D92 <AmiBlitz3.ab2@7882>   MOVE.b D2,(A0)+                                           ;length
00023D98 <AmiBlitz3.ab2@7883>   MOVEA.l asmbuff,A1
00023D9A <AmiBlitz3.ab2@7884>   ADDQ.w #1,A1
00023D9C <AmiBlitz3.ab2@7885>   MOVE.b (A1)+,(A0)+                                        ;type - 0 = indirect,else direct
00023DA0 <AmiBlitz3.ab2@7886>    BNE.w insasm__loop
00023DA2 <AmiBlitz3.ab2@7887>   MOVE.l (A1)+,(A0)+
00023DA8 <AmiBlitz3.ab2@7888>   MOVE.w linenumat,(a0)
00023DAC <AmiBlitz3.ab2@7889> BRA.w insasm__loopdone
00023DAE <AmiBlitz3.ab2@7892>    MOVE.b (A1)+,(A0)+
00023DB2 <AmiBlitz3.ab2@7893>    BNE.w insasm__loop
00023DB8 <AmiBlitz3.ab2@7894>    MOVE.w linenumat,(a0)
00023DBA <AmiBlitz3.ab2@7897>   MOVEA.l (A7)+,A1
00023DBC <AmiBlitz3.ab2@7898>   ADDQ.w #2,A7
00023DC0 <AmiBlitz3.ab2@7899>   MOVEM.l (A7)+,D0-D2/A0
00023DC2 <AmiBlitz3.ab2@7900> RTS
00023DC6 <AmiBlitz3.ab2@7904>   CMP.w #$5,D3
00023DCA <AmiBlitz3.ab2@7905>    BCS.w makemode__done
00023DCE <AmiBlitz3.ab2@7906>   CMP.w #$B,D3
00023DD2 <AmiBlitz3.ab2@7907>    BHI.w makemode__done2
00023DD6 <AmiBlitz3.ab2@7908>    BEQ.w makemode__imm
00023DDA <AmiBlitz3.ab2@7909>    BSR.w insasm
00023DDE <AmiBlitz3.ab2@7910>   CMP.w #$5,D3
00023DE2 <AmiBlitz3.ab2@7911>    BEQ.w makemode__word
00023DE6 <AmiBlitz3.ab2@7912>   CMP.w #$6,D3
00023DEA <AmiBlitz3.ab2@7913>    BEQ.w makemode__dxi
00023DEE <AmiBlitz3.ab2@7914>   CMP.w #$7,D3
00023DF2 <AmiBlitz3.ab2@7915>    BEQ.w makemode__word
00023DF6 <AmiBlitz3.ab2@7916>   CMP.w #$8,D3
00023DFA <AmiBlitz3.ab2@7917>    BEQ.w makemode__long
00023DFE <AmiBlitz3.ab2@7918>   CMP.w #$9,D3
00023E02 <AmiBlitz3.ab2@7919>    BEQ.w makemode__word
00023E08 <AmiBlitz3.ab2@7923>   CMPA.l destbufferend,A1
00023E0C <AmiBlitz3.ab2@7924>    BCS.w makemode__ok7
00023E0E <AmiBlitz3.ab2@7925>   ADDQ.w #2,A1
00023E10 <AmiBlitz3.ab2@7926> RTS
00023E12 <AmiBlitz3.ab2@7929>   MOVE.w D4,(A1)+
00023E14 <AmiBlitz3.ab2@7930> RTS
00023E1C <AmiBlitz3.ab2@7933>   CMPI.w #$8,asmsize
00023E20 <AmiBlitz3.ab2@7934>    BCC.w makemode__immlong
00023E22 <AmiBlitz3.ab2@7935>   MOVEQ.l #$10,D3
00023E26 <AmiBlitz3.ab2@7936>    BSR.w insasm
00023E28 <AmiBlitz3.ab2@7937>   MOVEQ.l #$0B,D3
00023E2C <AmiBlitz3.ab2@7938> BRA.w makemode__word
00023E30 <AmiBlitz3.ab2@7941>   BSR.w insasm
00023E32 <AmiBlitz3.ab2@7944>   ADDQ.w #2,A1
00023E34 <AmiBlitz3.ab2@7947>   ADDQ.w #2,A1
00023E36 <AmiBlitz3.ab2@7948> RTS
00023E3A <AmiBlitz3.ab2@7951>   CMP.w #$F,D3
00023E3E <AmiBlitz3.ab2@7952>    BNE.w makemode__done
00023E44 <AmiBlitz3.ab2@7953>   CMPA.l destbufferend,A1
00023E48 <AmiBlitz3.ab2@7954>    BCS.w makemode__ok3
00023E4A <AmiBlitz3.ab2@7955>   ADDQ.w #2,A1
00023E4C <AmiBlitz3.ab2@7956>   ADDQ.w #4,A7
00023E4E <AmiBlitz3.ab2@7957> RTS
00023E50 <AmiBlitz3.ab2@7960>   MOVE.w D2,(A1)+
00023E52 <AmiBlitz3.ab2@7961>   ADDQ.w #4,A7
00023E54 <AmiBlitz3.ab2@7964> RTS
00023E58 <AmiBlitz3.ab2@7968>   BSR.w storeloc
00023E62 <AmiBlitz3.ab2@7969>   MOVE.l linenumat,oldline
00023E64 <AmiBlitz3.ab2@7970>   MOVEQ.l #$00,D1
00023E68 <AmiBlitz3.ab2@7971>    BSR.w get1bytemain
00023E6C <AmiBlitz3.ab2@7972>    BEQ.w JL_0_676E
00023E6E <AmiBlitz3.ab2@7973>   MOVEQ.l #$00,D3
00023E72 <AmiBlitz3.ab2@7974> BRA.w JL_0_6726
00023E76 <AmiBlitz3.ab2@7977>    BSR.w get1bytemain
00023E7A <AmiBlitz3.ab2@7978>    BNE.w JL_0_671C
00023E7C <AmiBlitz3.ab2@7981>   TST.w D3
00023E80 <AmiBlitz3.ab2@7982>    BNE.w brackets_                                         ;syntax error brackets
00023E84 <AmiBlitz3.ab2@7983> BRA.w JL_0_676C
00023E8A <AmiBlitz3.ab2@7986>    MOVE.w instringon,D4
00023E8E <AmiBlitz3.ab2@7988>      BEQ JL_0_6726
00023E90 <AmiBlitz3.ab2@7991>     MOVEQ #0,d0
00023E92 <AmiBlitz3.ab2@7992>      MOVE.b (a5)+,d0                                       ;fix "ue"
00023E98 <AmiBlitz3.ab2@7993>      MOVE.w d0,lastchar
00023E9C <AmiBlitz3.ab2@7994>      BEQ ready
00023EA0 <AmiBlitz3.ab2@7995>      CMP.b #$22,d0
00023EA4 <AmiBlitz3.ab2@7996>      BNE 'l1
00023EAA <AmiBlitz3.ab2@7997>      NOT.w instringon
00023EAE <AmiBlitz3.ab2@7998> BRA JL_0_670A
00023EB2 <AmiBlitz3.ab2@8001>            CMP.b #"@",d0                                   ;expand line @@ 1. for parameter
00023EB6 <AmiBlitz3.ab2@8002>            BNE 'l10
00023EBA <AmiBlitz3.ab2@8003>            CMP.b #"@",(a5)
00023EBE <AmiBlitz3.ab2@8004>            BNE 'l10
00023EC4 <AmiBlitz3.ab2@8007>            TST.w ininclude
00023EC8 <AmiBlitz3.ab2@8008>            BNE 'inc
00023ECE <AmiBlitz3.ab2@8009>            MOVE.l sourceline3,a5
00023ED4 <AmiBlitz3.ab2@8010>            CMP.l #0,a5
00023ED8 <AmiBlitz3.ab2@8011>            BNE 'l11t
00023EDE <AmiBlitz3.ab2@8012>            MOVEA.l sourceline,A5
00023EE0 <AmiBlitz3.ab2@8015>            MOVEA.l (A5),A5
00023EE6 <AmiBlitz3.ab2@8016>            CMP.l #0,a5
00023EEA <AmiBlitz3.ab2@8017>            BEQ JL_0_676C
00023EF0 <AmiBlitz3.ab2@8018>            MOVE.l a5,sourceline3
00023EF4 <AmiBlitz3.ab2@8019>            LEA $9(A5),A5
00023EF8 <AmiBlitz3.ab2@8020> BRA 'l11
00023EFA <AmiBlitz3.ab2@8023>            ADDQ.l #1,a5
00023EFC <AmiBlitz3.ab2@8024>            TST.b (a5)
00023F00 <AmiBlitz3.ab2@8025>            BNE 'inc
00023F02 <AmiBlitz3.ab2@8029>            ADDQ.l #1,a5
00023F04 <AmiBlitz3.ab2@8030>            TST.b (a5)
00023F08 <AmiBlitz3.ab2@8031>            BEQ illeolerr
00023F0A <AmiBlitz3.ab2@8032>            MOVE.l a5,-(a7)
00023F0E <AmiBlitz3.ab2@8035>       CMP.b #" ",(a5)+
00023F12 <AmiBlitz3.ab2@8036>       BEQ 'l110
00023F18 <AmiBlitz3.ab2@8037>        CMP.b #";",-1(a5)
00023F1A <AmiBlitz3.ab2@8038>        MOVE.l (a7)+,a5
00023F1E <AmiBlitz3.ab2@8039>        BEQ 'l111
00023F22 <AmiBlitz3.ab2@8040> BRA JL_0_670A
00023F26 <AmiBlitz3.ab2@8043>    CMP.w #$29,D0
00023F2A <AmiBlitz3.ab2@8044>    BNE.w JL_0_673A
00023F2C <AmiBlitz3.ab2@8045>   TST.w D3
00023F30 <AmiBlitz3.ab2@8046>    BEQ.w JL_0_676C
00023F32 <AmiBlitz3.ab2@8049>   SUBQ.w #1,D3
00023F36 <AmiBlitz3.ab2@8050> BRA.w JL_0_670A
00023F3A <AmiBlitz3.ab2@8053>    CMP.w #$7D,D0
00023F3E <AmiBlitz3.ab2@8054>    BEQ.w JL_0_6734
00023F42 <AmiBlitz3.ab2@8055>   CMP.w #$28,D0
00023F46 <AmiBlitz3.ab2@8056>    BNE.w JL_0_6750
00023F48 <AmiBlitz3.ab2@8059>    ADDQ.w #1,D3
00023F4C <AmiBlitz3.ab2@8060> BRA.w JL_0_670A
00023F50 <AmiBlitz3.ab2@8063>   CMP.w #$7B,D0
00023F54 <AmiBlitz3.ab2@8064>    BEQ.w JL_0_674A
00023F58 <AmiBlitz3.ab2@8065>   CMP.w #$2C,D0
00023F5C <AmiBlitz3.ab2@8066>    BNE.w JL_0_670A
00023F5E <AmiBlitz3.ab2@8067>   TST.w D3
00023F62 <AmiBlitz3.ab2@8068>    BNE.w JL_0_670A
00023F64 <AmiBlitz3.ab2@8069>   ADDQ.w #1,D1
00023F68 <AmiBlitz3.ab2@8070> BRA.w JL_0_670A
00023F6A <AmiBlitz3.ab2@8073>   ADDQ.w #1,D1
00023F70 <AmiBlitz3.ab2@8076>   CLR.l sourceline3
00023F7A <AmiBlitz3.ab2@8077>   MOVE.l oldline,linenumat
00023F7E <AmiBlitz3.ab2@8078> BRA.w resloc
00023F84 <AmiBlitz3.ab2@8082>    CLR.w numreps
00023F86 <AmiBlitz3.ab2@8083>   MOVE.w D1,D0
00023F8A <AmiBlitz3.ab2@8084>   ANDI.w #$FF00,D0
00023F8E <AmiBlitz3.ab2@8085>    BEQ.w fetchlibps__noreps
00023F90 <AmiBlitz3.ab2@8086>   LSR.w #8,D0
00023F92 <AmiBlitz3.ab2@8087>   LSR.w #4,D0
00023F96 <AmiBlitz3.ab2@8088>    BEQ.w fetchlibps__skip
00023F98 <AmiBlitz3.ab2@8089>   SUB.b D0,D1
00023FA2 <AmiBlitz3.ab2@8090>    MOVE.w regnum,regnumfunc
00023FA8 <AmiBlitz3.ab2@8091>    MOVE.b funcparloop,-(a7)
00023FB0 <AmiBlitz3.ab2@8092>    MOVE.b #0,funcparloop
00023FB6 <AmiBlitz3.ab2@8093>    MOVE.l leftsidetype,-(a7)
00023FBC <AmiBlitz3.ab2@8094>    MOVE.l rightsidetype,-(a7)
00023FC2 <AmiBlitz3.ab2@8095>    CLR.l leftsidetype
00023FC8 <AmiBlitz3.ab2@8096>    CLR.l rightsidetype
00023FCE <AmiBlitz3.ab2@8097>    MOVE.b blitzparloop,-(a7)
00023FD6 <AmiBlitz3.ab2@8098>    MOVE.b #1,blitzparloop
00023FDA <AmiBlitz3.ab2@8099>    BSR.w fetchpees2
00023FE0 <AmiBlitz3.ab2@8100>    MOVE.b (a7)+,blitzparloop
00023FE6 <AmiBlitz3.ab2@8101>    MOVE.l (a7)+,rightsidetype
00023FEC <AmiBlitz3.ab2@8102>    MOVE.l (a7)+,leftsidetype
00023FF2 <AmiBlitz3.ab2@8103>    MOVE.b (a7)+,funcparloop
00023FF6 <AmiBlitz3.ab2@8104>   CMP.w #$2C,D0
00023FFA <AmiBlitz3.ab2@8105>    BNE.w syntaxerr
00023FFC <AmiBlitz3.ab2@8108>   MOVE.w D1,D2
00023FFE <AmiBlitz3.ab2@8109>   LSR.w #8,D2
00024002 <AmiBlitz3.ab2@8110>   ANDI.w #$7,D2
00024004 <AmiBlitz3.ab2@8113>    CMP.b D2,D1
00024008 <AmiBlitz3.ab2@8114>    BCS.w fetchlibps__repsdone
0002400A <AmiBlitz3.ab2@8115>   SUB.b D2,D1
0002400E <AmiBlitz3.ab2@8116>   MOVEM.l D2/A2,-(A7)
00024010 <AmiBlitz3.ab2@8117>   MOVE.w D2,D0
00024016 <AmiBlitz3.ab2@8118>   MOVE.b funcparloop,-(a7)
0002401E <AmiBlitz3.ab2@8119>   MOVE.b #0,funcparloop
00024024 <AmiBlitz3.ab2@8120>   MOVE.l leftsidetype,-(a7)
0002402A <AmiBlitz3.ab2@8121>   MOVE.l rightsidetype,-(a7)
00024030 <AmiBlitz3.ab2@8122>   CLR.l leftsidetype
00024036 <AmiBlitz3.ab2@8123>   CLR.l rightsidetype
0002403C <AmiBlitz3.ab2@8124>   MOVE.b blitzparloop,-(a7)
00024044 <AmiBlitz3.ab2@8125>   MOVE.b #1,blitzparloop
00024048 <AmiBlitz3.ab2@8126>   BSR.w fetchpees4
0002404E <AmiBlitz3.ab2@8127>   MOVE.b (a7)+,blitzparloop
00024054 <AmiBlitz3.ab2@8128>   MOVE.l (a7)+,rightsidetype
0002405A <AmiBlitz3.ab2@8129>   MOVE.l (a7)+,leftsidetype
00024060 <AmiBlitz3.ab2@8130>   MOVE.b (a7)+,funcparloop
00024064 <AmiBlitz3.ab2@8131>   MOVEM.l (A7)+,D2/A2
0002406A <AmiBlitz3.ab2@8132>   ADDQ.w #1,numreps
0002406E <AmiBlitz3.ab2@8133> BRA.w fetchlibps__rloop
00024074 <AmiBlitz3.ab2@8136>    MOVE.w numreps,D3
00024078 <AmiBlitz3.ab2@8137>    BEQ.w syntaxerr
0002407A <AmiBlitz3.ab2@8138>   ADDA.w D2,A2
0002407E <AmiBlitz3.ab2@8139>   ANDI.w #$FF,D1
00024082 <AmiBlitz3.ab2@8140>    BEQ.w fetchlibps__done
00024086 <AmiBlitz3.ab2@8141>   CMP.w #$2C,D0
0002408A <AmiBlitz3.ab2@8142>    BNE.w syntaxerr
0002408C <AmiBlitz3.ab2@8145>    MOVE.w D1,D0
00024090 <AmiBlitz3.ab2@8146>    BNE.w fetchpees2b
00024092 <AmiBlitz3.ab2@8149> RTS
00024098 <AmiBlitz3.ab2@8152>   MOVE.b funcparloop,-(a7)
0002409E <AmiBlitz3.ab2@8153>   MOVE.l leftsidetype,-(a7)
000240A4 <AmiBlitz3.ab2@8154>   MOVE.l rightsidetype,-(a7)
000240AA <AmiBlitz3.ab2@8155>   CLR.l leftsidetype
000240B0 <AmiBlitz3.ab2@8156>   CLR.l rightsidetype
000240B8 <AmiBlitz3.ab2@8157>   MOVE.b #0,funcparloop
000240BE <AmiBlitz3.ab2@8158>   MOVE.b blitzparloop,-(a7)
000240C6 <AmiBlitz3.ab2@8159>   MOVE.b #1,blitzparloop
000240CA <AmiBlitz3.ab2@8160>   BSR.w fetchpees2
000240D0 <AmiBlitz3.ab2@8161>   MOVE.b (a7)+,blitzparloop
000240D6 <AmiBlitz3.ab2@8162>   MOVE.l (a7)+,rightsidetype
000240DC <AmiBlitz3.ab2@8163>   MOVE.l (a7)+,leftsidetype
000240E2 <AmiBlitz3.ab2@8164>   MOVE.b (a7)+,funcparloop
000240E4 <AmiBlitz3.ab2@8165> RTS
000240E8 <AmiBlitz3.ab2@8169> ptype:    Dc.b $3F,$3C,$00,$00                             ;MOVE.W  #$0000,-(A7)
000240EA <AmiBlitz3.ab2@8172> partostack:  Ds.w 1                                        ;pmode org source
000240EC <AmiBlitz3.ab2@8176>   MOVEQ.l #$01,D2
000240F0 <AmiBlitz3.ab2@8177> BRA.w fetchpees3
000240F2 <AmiBlitz3.ab2@8180>   MOVEQ.l #$00,D2
000240F6 <AmiBlitz3.ab2@8183>   ANDI.w #$F,D0
000240FC <AmiBlitz3.ab2@8191>   CLR.w parnum
000240FE <AmiBlitz3.ab2@8192>   MOVE.w D1,-(A7)
00024102 <AmiBlitz3.ab2@8193>   MOVE.w partostack(PC),-(A7)                              ;in case of recursion
00024108 <AmiBlitz3.ab2@8194>   MOVE.w D2,partostack
0002410A <AmiBlitz3.ab2@8195>   MOVE.w D0,-(A7)
0002410E <AmiBlitz3.ab2@8196>   CMP.w #"@@",(a5)                                         ;was l15
00024112 <AmiBlitz3.ab2@8197>   BNE fetchpees__loop
00024118 <AmiBlitz3.ab2@8198>   TST.w ininclude                                          ;merge macrolines
0002411C <AmiBlitz3.ab2@8199>   BNE errorjoin
00024122 <AmiBlitz3.ab2@8200>        MOVEA.l sourceline,A5
00024124 <AmiBlitz3.ab2@8203>            MOVEA.l (A5),A5
0002412A <AmiBlitz3.ab2@8204>            MOVE.l a5,sourceline
0002412E <AmiBlitz3.ab2@8205>            LEA $9(A5),A5
00024134 <AmiBlitz3.ab2@8206>            ADDQ.l #1,linenumat
00024136 <AmiBlitz3.ab2@8210>   MOVE.b (A2)+,D2                                          ;parameterloop   d2=vartype
0002413A <AmiBlitz3.ab2@8211>    BNE.w fetchpees__skip0
00024140 <AmiBlitz3.ab2@8212>   MOVE.w userp,D2                                          ;user selected type
00024142 <AmiBlitz3.ab2@8214>    MOVE.l A2,-(A7)
00024148 <AmiBlitz3.ab2@8215>    ADDQ.w #1,parnum
0002414E <AmiBlitz3.ab2@8216>    TST.b funccall
00024152 <AmiBlitz3.ab2@8217>    BEQ fetchpees__skip0_l1
0002415A <AmiBlitz3.ab2@8218>    CMP.w #6,parnum
0002415E <AmiBlitz3.ab2@8219>    BLE fetchpees__skip0_l1
00024162 <AmiBlitz3.ab2@8220>    CMP.w #7,d2
00024168 <AmiBlitz3.ab2@8226>    TST.b fpu
0002416C <AmiBlitz3.ab2@8227>    BEQ fetchpees__skip0_old
00024172 <AmiBlitz3.ab2@8228>    TST.w regnumfunc
00024176 <AmiBlitz3.ab2@8229>    BEQ fetchpees__skip0_old
0002417C <AmiBlitz3.ab2@8230>    CMP.w #$48e7,-4(a4)
00024180 <AmiBlitz3.ab2@8231>    BNE fetchpees__skip0_old
00024182 <AmiBlitz3.ab2@8232>    MOVEQ #0,d1
00024188 <AmiBlitz3.ab2@8233>    MOVE.w regnum,d1
0002418E <AmiBlitz3.ab2@8234>    CMP regnumfunc,d1                                       ;fpu reg function save
00024192 <AmiBlitz3.ab2@8235>    BGE fetchpees__skip0_old
00024194 <AmiBlitz3.ab2@8236>    ASL.w #7,d1
00024196 <AmiBlitz3.ab2@8237>    MOVE.l d0,-(a7)
0002419C <AmiBlitz3.ab2@8238>    MOVE.w regnumfunc,d0
000241A2 <AmiBlitz3.ab2@8239>    CLR.w regmask
000241A8 <AmiBlitz3.ab2@8241>    BSET d0,regmask
000241AA <AmiBlitz3.ab2@8242>    SUBQ #1,d0
000241AE <AmiBlitz3.ab2@8243>    BNE fetchpees__skip0_loop
000241B0 <AmiBlitz3.ab2@8244>     MOVEQ #0,d0
000241B6 <AmiBlitz3.ab2@8247>       BTST d0,regmask
000241BA <AmiBlitz3.ab2@8248>       BEQ fetchpees__skip0_noa7
000241BC <AmiBlitz3.ab2@8249>       MOVEQ #0,d1
000241BE <AmiBlitz3.ab2@8250>       MOVE.w d0,d1
000241C0 <AmiBlitz3.ab2@8251>       SUBQ.w #1,d1
000241C2 <AmiBlitz3.ab2@8252>       ASL #7,d1
000241C8 <AmiBlitz3.ab2@8253>       OR.l #$f2277400,d1                                   ;fmove.d
000241CC <AmiBlitz3.ab2@8255>       BSR writelong
000241D2 <AmiBlitz3.ab2@8257>       ADDQ.l #2,stacktrack
000241D8 <AmiBlitz3.ab2@8258>       MOVE.l stacktrack,d1
000241DE <AmiBlitz3.ab2@8259>       CMP.l #180,d1
000241E2 <AmiBlitz3.ab2@8260>       BGT conmemerr                                        ;formel too complex
000241E4 <AmiBlitz3.ab2@8261>       MOVE.l a0,-(a7)
000241EA <AmiBlitz3.ab2@8262>       LEA fpustackbase,a0
000241F2 <AmiBlitz3.ab2@8263>       MOVE.w regmask,0(a0,d1)
000241F4 <AmiBlitz3.ab2@8264>       MOVE.l (a7)+,a0
000241F6 <AmiBlitz3.ab2@8267>       ADDQ.w #1,d0
000241FC <AmiBlitz3.ab2@8268>       CMP.w regnumfunc,d0
00024200 <AmiBlitz3.ab2@8269>       BLE fetchpees__skip0_loop2
00024202 <AmiBlitz3.ab2@8272>       MOVE.l (a7)+,d0
00024208 <AmiBlitz3.ab2@8275>      MOVE.l currentfunccall,-(a7)
0002420E <AmiBlitz3.ab2@8276>      MOVE.w parnum,-(a7)
00024214 <AmiBlitz3.ab2@8277>      TST.l rightsidetype
00024218 <AmiBlitz3.ab2@8278>      BSR.w JL_0_6836
0002421E <AmiBlitz3.ab2@8279>      MOVE.w (a7)+,parnum
00024224 <AmiBlitz3.ab2@8281>    MOVE.l (a7)+,currentfunccall
0002422A <AmiBlitz3.ab2@8283>    TST.b typecheck                            ;typecheck for function call
0002422E <AmiBlitz3.ab2@8284>    BEQ 'notypecheck
00024234 <AmiBlitz3.ab2@8285>    TST.b notypecheck
00024238 <AmiBlitz3.ab2@8286>    BNE 'notypecheck
0002423E <AmiBlitz3.ab2@8287>    TST.b blitzparloop
00024242 <AmiBlitz3.ab2@8288>    BNE 'isblitzlibcall                                    ;no typecheck for blitzlibs currently
0002424C <AmiBlitz3.ab2@8289>    CMP.l #0,currentfunccall
00024250 <AmiBlitz3.ab2@8290>    BEQ 'isblitzlibcall
00024254 <AmiBlitz3.ab2@8291>    MOVEM.l a0/a1,-(a7)
0002425A <AmiBlitz3.ab2@8292>    MOVE.l currentfunccall,a0
00024260 <AmiBlitz3.ab2@8293>    MOVE.w parnum,d1
00024266 <AmiBlitz3.ab2@8294>    TST.b isconstantvalue
0002426A <AmiBlitz3.ab2@8295>    BEQ 'noconstant
00024274 <AmiBlitz3.ab2@8296>    CMP.l #0,lastconstantvalue
00024278 <AmiBlitz3.ab2@8297>    BEQ 'isnull
0002427C <AmiBlitz3.ab2@8299>    MOVE.l funcstruct_parametertype-4(a0,d1*4),a0
00024282 <AmiBlitz3.ab2@8300>    CMP.l #0,a0
00024286 <AmiBlitz3.ab2@8301>    BEQ 'notype
0002428E <AmiBlitz3.ab2@8302>    CMP.l #$100,4(a0)
00024292 <AmiBlitz3.ab2@8303>    BLE 'notype
00024298 <AmiBlitz3.ab2@8304>    MOVE.l lasttoken,d1
0002429C <AmiBlitz3.ab2@8305>    CMP.w #$b581,d1                   ; ok, when token for null
000242A0 <AmiBlitz3.ab2@8306>    BEQ 'isnull
000242A6 <AmiBlitz3.ab2@8307>    TST.l typetocast
000242AA <AmiBlitz3.ab2@8308>    BEQ 'nocast
000242B0 <AmiBlitz3.ab2@8309>    MOVE.l typetocast,a1
000242B4 <AmiBlitz3.ab2@8310>    BRA 'typecheck
000242BA <AmiBlitz3.ab2@8312>    MOVE.l rightsidetype,a1
000242C0 <AmiBlitz3.ab2@8313>    CMP.l #0,a1
000242C4 <AmiBlitz3.ab2@8314>    BEQ 'notype
000242CC <AmiBlitz3.ab2@8315> 'typecheck   CMP.l #$100,4(a1)
000242CE <AmiBlitz3.ab2@8317>    CMP.l a0,a1
000242D2 <AmiBlitz3.ab2@8318>    BEQ 'ok
000242DA <AmiBlitz3.ab2@8320>    CMP.l #$100,4(a1)                 ; is a type here
000242DE <AmiBlitz3.ab2@8321>    BLE 'error
000242E2 <AmiBlitz3.ab2@8322>    MOVE.l 4(a1),a1                   ; load the address of type.
000242E6 <AmiBlitz3.ab2@8323>    CMP.l $a(a1),a0                   ; check if the bigger type contain in first place same type as the function need
000242EA <AmiBlitz3.ab2@8324>    BEQ 'ok
000242F0 <AmiBlitz3.ab2@8325> 'error: JMP   error_convert_types    ; for syntax 4
000242F6 <AmiBlitz3.ab2@8329>    CLR.l typetocast
000242FA <AmiBlitz3.ab2@8330>    MOVEM.l (a7)+,a0/a1
00024300 <AmiBlitz3.ab2@8334>    CLR.l lastfunction
00024306 <AmiBlitz3.ab2@8335>    TST.b fpu
0002430A <AmiBlitz3.ab2@8336>    BEQ fetchpees__skip0_noprint
0002430C <AmiBlitz3.ab2@8337>   MOVE.l (a7),a2
0002430E <AmiBlitz3.ab2@8338>   ADDQ.l #1,a2
00024312 <AmiBlitz3.ab2@8339>    CMP.b #5,d2
00024316 <AmiBlitz3.ab2@8340>   BNE fetchpees__skip0_noprint
0002431C <AmiBlitz3.ab2@8341>   CMP.b #$5d,24(a2)
00024320 <AmiBlitz3.ab2@8342>   BNE fetchpees__skip0_noprint
00024326 <AmiBlitz3.ab2@8343>   CMP.b #$81,25(a2)
0002432A <AmiBlitz3.ab2@8344>   BLT fetchpees__skip0_noprint
00024330 <AmiBlitz3.ab2@8345>   CMP.b #$86,25(a2)
00024334 <AmiBlitz3.ab2@8346>   BEQ fetchpees__skip0_ok
0002433A <AmiBlitz3.ab2@8347>   CMP.b #$87,25(a2)
0002433E <AmiBlitz3.ab2@8348>   BEQ fetchpees__skip0_ok
00024344 <AmiBlitz3.ab2@8349>   CMP.b #$88,25(a2)
00024348 <AmiBlitz3.ab2@8350>   BEQ fetchpees__skip0_ok
0002434E <AmiBlitz3.ab2@8351>   CMP.b #$83,25(a2)
00024352 <AmiBlitz3.ab2@8352>   BGT fetchpees__skip0_noprint
00024358 <AmiBlitz3.ab2@8355>   MOVE.l destpointer,a4
0002435E <AmiBlitz3.ab2@8356>   CMP.w #$2f00,-2(a4)
00024362 <AmiBlitz3.ab2@8357>   BNE fetchpees__skip0_noprint
00024368 <AmiBlitz3.ab2@8358>   SUBQ.l #2,destpointer
0002436E <AmiBlitz3.ab2@8360>   MOVE.l #$f2277400,d1
00024372 <AmiBlitz3.ab2@8361>   BSR writelong                                            ;fmove.d fp0,-(a7)
00024378 <AmiBlitz3.ab2@8362>   ADDQ #4,a2offset
0002437E <AmiBlitz3.ab2@8380>   CLR.b optistring
00024380 <AmiBlitz3.ab2@8381>   MOVEA.l (A7)+,A2
00024384 <AmiBlitz3.ab2@8382>    CMP.w #"@",d0
00024388 <AmiBlitz3.ab2@8383>   BNE fetchpees__skip0_l10
0002438C <AmiBlitz3.ab2@8384>    CMP.b #"@",(a5)
00024390 <AmiBlitz3.ab2@8385>   BNE fetchpees__skip0_l10
00024396 <AmiBlitz3.ab2@8386>   TST.w ininclude
0002439A <AmiBlitz3.ab2@8387>   BNE errorjoin
000243A0 <AmiBlitz3.ab2@8388>   MOVEA.l sourceline,A5
000243A2 <AmiBlitz3.ab2@8389>            MOVEA.l (A5),A5
000243A8 <AmiBlitz3.ab2@8390>            MOVE.l a5,sourceline
000243AE <AmiBlitz3.ab2@8391>            ADDQ.l #1,linenumat
000243B2 <AmiBlitz3.ab2@8392>            LEA $9(A5),A5
000243B4 <AmiBlitz3.ab2@8393>            MOVEQ #0,d0
000243B8 <AmiBlitz3.ab2@8394>            BSR get1bytemain
000243BC <AmiBlitz3.ab2@8397>    CMP.b #32,(a5)+ ;for space after a ,
000243C0 <AmiBlitz3.ab2@8398>    BEQ fetchpees__skip0_l10:
000243C2 <AmiBlitz3.ab2@8399>    SUBQ.l #1,a5
000243C6 <AmiBlitz3.ab2@8401>    CMP.w #"@@",(a5)                                        ;if merge
000243CA <AmiBlitz3.ab2@8402>    BNE fetchpees__skip0_l15
000243CE <AmiBlitz3.ab2@8403>    MOVEM.l d0-d7/a0-a4/a6,-(a7)
000243D4 <AmiBlitz3.ab2@8404>    JSR mergeline
000243D8 <AmiBlitz3.ab2@8405>    MOVEM.l (a7)+,d0-d7/a0-a4/a6
000243DA <AmiBlitz3.ab2@8425>       SUBQ.w #1,(A7)
000243DE <AmiBlitz3.ab2@8426>    BEQ.w fetchpees__done
000243E2 <AmiBlitz3.ab2@8428>     CMP.w #$2C,D0
000243E6 <AmiBlitz3.ab2@8430>    BNE overloadfunc
000243EA <AmiBlitz3.ab2@8431> BRA.w fetchpees__loop
000243EC <AmiBlitz3.ab2@8434>   ADDQ.w #2,A7
000243F2 <AmiBlitz3.ab2@8435>   MOVE.w (A7)+,partostack
000243F4 <AmiBlitz3.ab2@8436>   MOVE.w (A7)+,D1
000243FA <AmiBlitz3.ab2@8437>   CLR.b isconstantvalue
00024404 <AmiBlitz3.ab2@8438>   MOVE.l currentfunccall,lastfunction
0002440A <AmiBlitz3.ab2@8439>   CLR.b funccall
00024410 <AmiBlitz3.ab2@8440>   CLR.l currentfunccall
00024412 <AmiBlitz3.ab2@8441> RTS
00024418 <AmiBlitz3.ab2@8445>   CLR.b funccall
0002441E <AmiBlitz3.ab2@8446>   MOVE.w regnum,d1
00024424 <AmiBlitz3.ab2@8447>   MOVE.l currentfunccall,a4
00024428 <AmiBlitz3.ab2@8448>   CMP.b $20(a4),d1                                         ;increase if more pars
0002442C <AmiBlitz3.ab2@8449>   BLT notparerr
0002442E <AmiBlitz3.ab2@8452>   MOVE.b (a2)+,d2
00024436 <AmiBlitz3.ab2@8453>   ADD.w #1,parnum
0002443C <AmiBlitz3.ab2@8454>   TST.b fpu
00024440 <AmiBlitz3.ab2@8455>   BEQ 'nofpu
00024444 <AmiBlitz3.ab2@8456>   CMP.b #5,d2
00024448 <AmiBlitz3.ab2@8457>   BNE 'nofpu
0002444A <AmiBlitz3.ab2@8458>   MOVEQ #0,d1
00024450 <AmiBlitz3.ab2@8459>   MOVE.w regnum,d1
00024458 <AmiBlitz3.ab2@8460>   CMP.w #6,regnum
0002445C <AmiBlitz3.ab2@8461>   BLT 'nostack2
00024460 <AmiBlitz3.ab2@8466>   MOVE.w #$2c3c,d1
00024464 <AmiBlitz3.ab2@8467>   BSR writeword
0002446A <AmiBlitz3.ab2@8468>   MOVE.l #$bf800000,d1
0002446E <AmiBlitz3.ab2@8469>   BSR writelong
00024472 <AmiBlitz3.ab2@8470>   MOVE.w #$c4ff,d1                                         ;savetemp+regnum
00024478 <AmiBlitz3.ab2@8471>   ADD.w parnum,d1
0002447E <AmiBlitz3.ab2@8472>   JSR Atokejsr
00024484 <AmiBlitz3.ab2@8473>   TST.w dontwrite
00024488 <AmiBlitz3.ab2@8474>   BNE 'l1
0002448E <AmiBlitz3.ab2@8475>   MOVE.l data1start,d1
00024494 <AmiBlitz3.ab2@8476>   MOVE.l destpointer,a4
00024498 <AmiBlitz3.ab2@8477>   ADD.l d1,-4(a4)
0002449E <AmiBlitz3.ab2@8478>   MOVE.l destpointer,d1
000244A0 <AmiBlitz3.ab2@8479>   SUBQ.l #4,d1
000244A6 <AmiBlitz3.ab2@8480>   SUB.l destbufferstart,d1
000244A8 <AmiBlitz3.ab2@8481>   MOVE.l d2,-(a7)
000244AA <AmiBlitz3.ab2@8482>   MOVE.l d1,d2
000244B0 <AmiBlitz3.ab2@8483>   JSR addhunkoffset
000244B2 <AmiBlitz3.ab2@8484>   MOVE.l (a7)+,d2
000244B6 <AmiBlitz3.ab2@8485> BRA 'l1
000244B8 <AmiBlitz3.ab2@8488>   ASL.l #7,d1
000244BE <AmiBlitz3.ab2@8489>   OR.l #$F23C5000,d1                                       ;fmove.w #-1,fpx
000244C2 <AmiBlitz3.ab2@8490>   BSR writelong
000244C4 <AmiBlitz3.ab2@8491>   MOVEQ #-1,d1                                             ;-1
000244C8 <AmiBlitz3.ab2@8492>   BSR writeword
000244CC <AmiBlitz3.ab2@8493> BRA 'l1
000244D2 <AmiBlitz3.ab2@8496>   MOVE.w regnum,d1
000244DA <AmiBlitz3.ab2@8497>   CMP.w #6,regnum
000244DE <AmiBlitz3.ab2@8498>   BLT 'nostack
000244E2 <AmiBlitz3.ab2@8503>   CMP.b #2,d2
000244E6 <AmiBlitz3.ab2@8504>   BGT 'nw
000244EA <AmiBlitz3.ab2@8505> BRA 'nos
000244EE <AmiBlitz3.ab2@8514>   CMP.w #7,d2
000244F2 <AmiBlitz3.ab2@8515>   BNE 'nos
000244F8 <AmiBlitz3.ab2@8516>   ADDQ #4,a2offset
000244FE <AmiBlitz3.ab2@8518>     MOVE.l #$48780000,d1
00024502 <AmiBlitz3.ab2@8519>     BSR writelong
00024508 <AmiBlitz3.ab2@8520>     ADDQ.w #4,a2offset
0002450C <AmiBlitz3.ab2@8521>     MOVE.w #$2f3c,d1
00024510 <AmiBlitz3.ab2@8522>     BSR writeword
00024516 <AmiBlitz3.ab2@8523>     MOVE.l #-1,d1
0002451A <AmiBlitz3.ab2@8524>     BSR writelong
0002451E <AmiBlitz3.ab2@8525>   BRA 'l1
00024522 <AmiBlitz3.ab2@8529>   CMP.b #4,d2
00024526 <AmiBlitz3.ab2@8530>       BNE 'noq
0002452A <AmiBlitz3.ab2@8531>       MOVE.w #$2c3c,d1
0002452E <AmiBlitz3.ab2@8532>       BSR writeword
00024534 <AmiBlitz3.ab2@8533>       MOVE.l #$ffff0000,d1
00024538 <AmiBlitz3.ab2@8534>       BSR writelong
0002453C <AmiBlitz3.ab2@8535> BRA 'noq2
00024540 <AmiBlitz3.ab2@8538>      CMP.b #5,d2
00024544 <AmiBlitz3.ab2@8539>      BNE 'nof
00024548 <AmiBlitz3.ab2@8540>       MOVE.w #$2c3c,d1
0002454C <AmiBlitz3.ab2@8541>       BSR writeword
00024552 <AmiBlitz3.ab2@8542>       MOVE.l #$800000c1,d1
00024556 <AmiBlitz3.ab2@8543>       BSR writelong
0002455A <AmiBlitz3.ab2@8544> BRA 'noq2
0002455E <AmiBlitz3.ab2@8547>   MOVE.w #$7cff,d1
00024562 <AmiBlitz3.ab2@8548>   BSR writeword
00024566 <AmiBlitz3.ab2@8551>   MOVE.w #$c4ff,d1                                         ;savetemp+regnum
0002456C <AmiBlitz3.ab2@8552>   ADD.w parnum,d1
00024572 <AmiBlitz3.ab2@8553>   JSR Atokejsr
00024578 <AmiBlitz3.ab2@8554>    TST.w dontwrite
0002457C <AmiBlitz3.ab2@8555>    BNE 'l1
00024582 <AmiBlitz3.ab2@8556>    MOVE.l data1start,d1
00024588 <AmiBlitz3.ab2@8557>    MOVE.l destpointer,a4
0002458C <AmiBlitz3.ab2@8558>    ADD.l d1,-4(a4)
00024592 <AmiBlitz3.ab2@8559>    MOVE.l destpointer,d1
00024594 <AmiBlitz3.ab2@8560>    SUBQ.l #4,d1
0002459A <AmiBlitz3.ab2@8561>    SUB.l destbufferstart,d1
0002459C <AmiBlitz3.ab2@8562>    MOVE.l d2,-(a7)
0002459E <AmiBlitz3.ab2@8563>    MOVE.l d1,d2
000245A4 <AmiBlitz3.ab2@8564>    JSR addhunkoffset
000245A6 <AmiBlitz3.ab2@8565>    MOVE.l (a7)+,d2
000245AA <AmiBlitz3.ab2@8566> BRA 'l1
000245AC <AmiBlitz3.ab2@8569>   ASL.l #8,d1
000245AE <AmiBlitz3.ab2@8570>   ASL.l #1,d1
000245B4 <AmiBlitz3.ab2@8571>   OR.l #$203c,d1                                           ;-1
000245B8 <AmiBlitz3.ab2@8572>   BSR writeword
000245BE <AmiBlitz3.ab2@8573>   MOVE.l #-1,d1
000245C2 <AmiBlitz3.ab2@8574>   CMP.b #4,d2
000245C6 <AmiBlitz3.ab2@8575>   BNE 'nq1
000245CC <AmiBlitz3.ab2@8576>   MOVE.l #$ffff0000,d1
000245D0 <AmiBlitz3.ab2@8579>   CMP.b #5,d2
000245D4 <AmiBlitz3.ab2@8580>   BNE 'nof2
000245DA <AmiBlitz3.ab2@8581>   TST.b fpu
000245DE <AmiBlitz3.ab2@8582>   BNE 'nof2
000245E4 <AmiBlitz3.ab2@8583>   MOVE.l #$800000c1,d1
000245E8 <AmiBlitz3.ab2@8586>    BSR writelong
000245EC <AmiBlitz3.ab2@8587>    CMP.b #7,d2
000245F0 <AmiBlitz3.ab2@8588>    BNE 'l1
000245F6 <AmiBlitz3.ab2@8590>      MOVE.l #$48780000,d1
000245FA <AmiBlitz3.ab2@8591>      BSR writelong
00024600 <AmiBlitz3.ab2@8593>    ADDQ.w #4,a2offset                                      ; bug fix for string parameters
00024606 <AmiBlitz3.ab2@8594>    MOVE.l #$594f,d1                                        ; subq #4,a7
0002460A <AmiBlitz3.ab2@8595>    BSR writeword
0002460C <AmiBlitz3.ab2@8598>    SUBQ.w #1,(A7)
00024610 <AmiBlitz3.ab2@8599>    BEQ.w fetchpees__done
00024616 <AmiBlitz3.ab2@8600>    ADDQ.w #1,regnum
0002461A <AmiBlitz3.ab2@8601> BRA 'ol2
0002461C <AmiBlitz3.ab2@8604>    MOVE.w D2,D1
00024620 <AmiBlitz3.ab2@8605>    ANDI.w #$40,D1
00024626 <AmiBlitz3.ab2@8606>    MOVE.b D1,partostack
00024628 <AmiBlitz3.ab2@8607>    TST.b D2
0002462C <AmiBlitz3.ab2@8608>     BMI.w handlevara
00024630 <AmiBlitz3.ab2@8609>    BTST #$5,D2
00024634 <AmiBlitz3.ab2@8610>     BNE.w handlearr
0002463A <AmiBlitz3.ab2@8611>     MOVE.w regnumstore,-(a7)
00024640 <AmiBlitz3.ab2@8612>     MOVE.w tempregnum,-(a7)
00024646 <AmiBlitz3.ab2@8613>     MOVE.w parnum,-(a7)
0002464A <AmiBlitz3.ab2@8614>     BSR.w getap                                        ;recursive entry
00024650 <AmiBlitz3.ab2@8615>     MOVE.w (a7)+,parnum
00024656 <AmiBlitz3.ab2@8616>     MOVE.w (a7)+,tempregnum
0002465C <AmiBlitz3.ab2@8617>     MOVE.w (a7)+,regnumstore
00024660 <AmiBlitz3.ab2@8620>     MOVE.w partostack(PC),D1
00024664 <AmiBlitz3.ab2@8621>     BEQ.w JL_0_6886
0002466A <AmiBlitz3.ab2@8624>    ADDQ.w #4,a2offset
00024670 <AmiBlitz3.ab2@8627>    MOVE.w pushdn,D1
00024676 <AmiBlitz3.ab2@8628>    OR.w regnum,D1
0002467A <AmiBlitz3.ab2@8629>    CMP.w #$3,D2
0002467E <AmiBlitz3.ab2@8630>     BCC.w JL_0_6880
00024684 <AmiBlitz3.ab2@8631>    SUBQ.w #2,a2offset
00024688 <AmiBlitz3.ab2@8632>    ORI.w #$1000,D1
0002468C <AmiBlitz3.ab2@8633>    BSR.w writeword
0002468E <AmiBlitz3.ab2@8634> RTS
00024692 <AmiBlitz3.ab2@8637>   CMP.b #7,d2
00024696 <AmiBlitz3.ab2@8638>    BNE 'l10
0002469E <AmiBlitz3.ab2@8639>    CMP.b #2,optistring
000246A4 <AmiBlitz3.ab2@8643>   TST.b iee
000246A8 <AmiBlitz3.ab2@8644>   BEQ 'old
000246AC <AmiBlitz3.ab2@8645>   CMP.b #5,d2
000246B0 <AmiBlitz3.ab2@8646>   BNE 'old
000246B4 <AmiBlitz3.ab2@8649>   BSR.w writeword                                          ;write val to stack
000246B6 <AmiBlitz3.ab2@8650> RTS
000246BC <AmiBlitz3.ab2@8653>   SUBQ.w #4,a2offset
000246BE <AmiBlitz3.ab2@8654> RTS
000246C4 <AmiBlitz3.ab2@8657>   ADDQ.w #1,regnum
000246C6 <AmiBlitz3.ab2@8658> RTS
000246C8 <AmiBlitz3.ab2@8662>   MOVEQ.l #$03,D2
000246CC <AmiBlitz3.ab2@8663> BRA.w JL_0_6854
000246D0 <AmiBlitz3.ab2@8667>   ANDI.w #$7,D2
000246D2 <AmiBlitz3.ab2@8668>   MOVE.w D2,-(A7)
000246D6 <AmiBlitz3.ab2@8669>    BSR.w JL_0_A916
000246DA <AmiBlitz3.ab2@8670>   CMP.b #$7,D2                                             ;ignore pnt to $
000246DE <AmiBlitz3.ab2@8671>    BEQ.w JL_0_68C0
000246E2 <AmiBlitz3.ab2@8672>   BTST #$E,D2
000246E6 <AmiBlitz3.ab2@8673>    BEQ.w JL_0_68B6
000246EA <AmiBlitz3.ab2@8674>   MOVE.b #$3,D2                                            ;pointer to long
000246EE <AmiBlitz3.ab2@8675> BRA.w JL_0_68C0
000246F0 <AmiBlitz3.ab2@8678>    TST.b D2
000246F4 <AmiBlitz3.ab2@8679>    BNE.w JL_0_68C0
000246F8 <AmiBlitz3.ab2@8680>   MOVE.b #$3,D2
000246FA <AmiBlitz3.ab2@8683>   MOVE.w (A7)+,D3
000246FC <AmiBlitz3.ab2@8684>   TST.b D3
00024700 <AmiBlitz3.ab2@8685>    BEQ.w JL_0_68D2
00024702 <AmiBlitz3.ab2@8686>   CMP.b D2,D3
00024706 <AmiBlitz3.ab2@8687>    BEQ.w putalp
0002470A <AmiBlitz3.ab2@8688> BRA.w mismatcherr
00024710 <AmiBlitz3.ab2@8691>   ADDQ.w #2,a2offset
00024714 <AmiBlitz3.ab2@8692>   MOVE.w ptype(PC),D1
00024718 <AmiBlitz3.ab2@8693>    BSR.w writeword
0002471A <AmiBlitz3.ab2@8694>   MOVEQ.l #$00,D1
0002471C <AmiBlitz3.ab2@8695>   MOVE.b D2,D1
00024720 <AmiBlitz3.ab2@8696>    BSR.w writeword
00024724 <AmiBlitz3.ab2@8697> BRA.w putalp
00024726 <AmiBlitz3.ab2@8700>    MOVE.w D2,-(A7)
0002472A <AmiBlitz3.ab2@8701>    BSR.w JL_0_694E
00024730 <AmiBlitz3.ab2@8702>   BTST #$4,$1(A7)
00024734 <AmiBlitz3.ab2@8703>    BEQ.w JL_0_6900
00024738 <AmiBlitz3.ab2@8704>    BSR.w JL_0_699A
0002473E <AmiBlitz3.ab2@8707>    BTST #$3,$1(A7)
00024742 <AmiBlitz3.ab2@8708>    BEQ.w JL_0_690E
00024746 <AmiBlitz3.ab2@8709>    BSR.w sendtype
00024748 <AmiBlitz3.ab2@8712>    MOVE.w (A7)+,D2
0002474C <AmiBlitz3.ab2@8713> BRA.w get1bytemain
00024752 <AmiBlitz3.ab2@8716>   MOVE.w regnum,D1
00024754 <AmiBlitz3.ab2@8717>   LSL.w #8,D1
00024756 <AmiBlitz3.ab2@8718>   LSL.w #1,D1
0002475A <AmiBlitz3.ab2@8719>   ORI.w #$7000,D1
00024760 <AmiBlitz3.ab2@8720>   BTST #$0,$7(A3)
00024764 <AmiBlitz3.ab2@8721>    BNE.w JL_0_6946                                         ;A Pointer
0002476C <AmiBlitz3.ab2@8722>   CMPI.l #$100,$4(A2)
00024770 <AmiBlitz3.ab2@8723>    BCC.w arrerr1                                           ;illegal type to send
00024774 <AmiBlitz3.ab2@8724>   MOVE.b $7(A2),D1
00024778 <AmiBlitz3.ab2@8727>   BSR.w writeword                                          ;moveq #type,d regat
0002477A <AmiBlitz3.ab2@8728>   MOVEQ.l #$02,D2                                          ;just a word.
0002477E <AmiBlitz3.ab2@8729> BRA.w JL_0_685C
00024782 <AmiBlitz3.ab2@8732>   MOVE.b #$3,D1
00024786 <AmiBlitz3.ab2@8733> BRA.w JL_0_693C
0002478A <AmiBlitz3.ab2@8737>    BSR.w get1bytemain                                      ;write array paramter code
0002478E <AmiBlitz3.ab2@8738>    BSR.w getparameter
00024796 <AmiBlitz3.ab2@8739>   BTST #$1,flagmask+1
0002479A <AmiBlitz3.ab2@8740>    BEQ.w syntaxerr
0002479E <AmiBlitz3.ab2@8741>    BSR.w JL_0_8E3C
000247A2 <AmiBlitz3.ab2@8742>    BSR.w get1bytemain
000247A6 <AmiBlitz3.ab2@8743>   CMP.w #$29,D0                                            ;we just want a() or whatever
000247AA <AmiBlitz3.ab2@8744>    BNE.w syntaxerr
000247B0 <AmiBlitz3.ab2@8745>   MOVE.w notshared,D1
000247B4 <AmiBlitz3.ab2@8746>    BNE.w noarrayerr
000247BA <AmiBlitz3.ab2@8747>   MOVE.w regnum,D1
000247BC <AmiBlitz3.ab2@8748>   LSL.w #8,D1
000247BE <AmiBlitz3.ab2@8749>   LSL.w #1,D1
000247C2 <AmiBlitz3.ab2@8750>   OR.w fbase(PC),D1
000247C8 <AmiBlitz3.ab2@8751>    TST.b varmode
000247CC <AmiBlitz3.ab2@8752>    BEQ 'l1
000247D0 <AmiBlitz3.ab2@8753>    BCLR #0,d1
000247D4 <AmiBlitz3.ab2@8756>    BSR.w writeword
000247D8 <AmiBlitz3.ab2@8757>   MOVE.w $4(A3),D1
000247DC <AmiBlitz3.ab2@8758>    BSR.w writeword
000247E0 <AmiBlitz3.ab2@8759> BRA.w putalp
000247E6 <AmiBlitz3.ab2@8763>   MOVE.w regnum,D1
000247E8 <AmiBlitz3.ab2@8764>   LSL.w #8,D1
000247EA <AmiBlitz3.ab2@8765>   LSL.w #1,D1
000247EE <AmiBlitz3.ab2@8766>   OR.w fbase(PC),D1
000247F4 <AmiBlitz3.ab2@8767>    TST.b varmode
000247F8 <AmiBlitz3.ab2@8768>    BEQ 'l1
000247FC <AmiBlitz3.ab2@8769>    BCLR #0,d1
00024800 <AmiBlitz3.ab2@8772>    BSR.w writeword
00024804 <AmiBlitz3.ab2@8773>   MOVE.w $8(A3),D1
00024806 <AmiBlitz3.ab2@8774>   LSL.w #2,D1
0002480C <AmiBlitz3.ab2@8775>   MOVE.w varmode,D2
00024810 <AmiBlitz3.ab2@8776>    BEQ.w JL_0_69BE
00024812 <AmiBlitz3.ab2@8777>   NEG.w D1
00024816 <AmiBlitz3.ab2@8780>    ADD.w $4(A3),D1
0002481A <AmiBlitz3.ab2@8781>    BSR.w writeword
00024820 <AmiBlitz3.ab2@8782>   MOVE.w regnum,D1
00024822 <AmiBlitz3.ab2@8783>   LSL.w #8,D1
00024824 <AmiBlitz3.ab2@8784>   LSL.w #1,D1
00024828 <AmiBlitz3.ab2@8785>   MOVE.w partostack(PC),D2
0002482C <AmiBlitz3.ab2@8786>    BNE.w JL_0_69F4
00024834 <AmiBlitz3.ab2@8787>   CMPI.w #$7,regnum
00024838 <AmiBlitz3.ab2@8788>    BCC.w JL_0_69F4
0002483C <AmiBlitz3.ab2@8789>   OR.w pushlast(PC),D1
00024842 <AmiBlitz3.ab2@8790>   MOVE.w regnum,D2
00024844 <AmiBlitz3.ab2@8791>   SUBQ.w #1,D2
00024846 <AmiBlitz3.ab2@8792>   OR.w D2,D1
0002484A <AmiBlitz3.ab2@8793> BRA.w JL_0_69F8
0002484E <AmiBlitz3.ab2@8796>   OR.w pushadd(PC),D1
00024852 <AmiBlitz3.ab2@8799>   BSR.w writeword
0002485A <AmiBlitz3.ab2@8800>   MOVE.b #$1,partostack
0002485E <AmiBlitz3.ab2@8801> BRA.w putalp
00024862 <AmiBlitz3.ab2@8805> fbase:       Dc.b $20,$2D,$00,$00                           ;MOVE.L  $0000(A5),D0
00024864 <AmiBlitz3.ab2@8806> pushadd:     Dc.b $D0,$97                                   ;ADD.L (A7),D0
00024866 <AmiBlitz3.ab2@8807> pushlast:    Dc.b $D0,$80                                   ;ADD.L D0,D0
0002486A <AmiBlitz3.ab2@8812>   ANDI.w #$7,D2                                            ;0-7 (unknown to string)
0002486E <AmiBlitz3.ab2@8813>    BEQ.w evalu2
00024872 <AmiBlitz3.ab2@8814> BRA.w eval
00024878 <AmiBlitz3.ab2@8818>   MOVEA.l libpointer,A1
0002487C <AmiBlitz3.ab2@8821>    CMPA.w #$0,A1
00024880 <AmiBlitz3.ab2@8822>    BEQ.w resetlibs__done
00024886 <AmiBlitz3.ab2@8823>   MOVE.w #-1,$A(A1)
0002488C <AmiBlitz3.ab2@8824>   BCLR #$7,$C(A1)
0002488E <AmiBlitz3.ab2@8825>   MOVEA.l (A1),A1
00024892 <AmiBlitz3.ab2@8826> BRA.w resetlibs__loop
00024894 <AmiBlitz3.ab2@8829> RTS
00024898 <AmiBlitz3.ab2@8833>   MOVE.w #$FFFE,D1
0002489C <AmiBlitz3.ab2@8836>    BSR.w JL_0_6F38
000248A2 <AmiBlitz3.ab2@8839>   TST.w cfetchmode
000248A6 <AmiBlitz3.ab2@8840>    BEQ.w uselib3__noconst
000248AC <AmiBlitz3.ab2@8841>   BTST #$6,$C(A1)
000248B0 <AmiBlitz3.ab2@8842>    BNE.w uselib3__constok
000248B4 <AmiBlitz3.ab2@8843> BRA.w badconerr                                            ;Can't use this Library!
000248B6 <AmiBlitz3.ab2@8846> RTS
000248BC <AmiBlitz3.ab2@8849>    BSET #$7,$C(A1)
000248C0 <AmiBlitz3.ab2@8850>    BNE.w JL_0_6C74                                         ;already done....
000248C6 <AmiBlitz3.ab2@8851>    CMPI.w #-1,$A(A1)
000248CA <AmiBlitz3.ab2@8852>    BNE.w JL_0_6C74                                         ;something already here
000248D0 <AmiBlitz3.ab2@8856>    TST.w dirmode
000248D4 <AmiBlitz3.ab2@8857>    BEQ.b JL_0_6A86
000248DA <AmiBlitz3.ab2@8858>    TST.b exdebug
000248DE <AmiBlitz3.ab2@8859>    BEQ 'l1
000248E2 <AmiBlitz3.ab2@8860> BRA.b JL_0_6A86
000248E8 <AmiBlitz3.ab2@8863>   BCLR #$7,$C(A1)
000248EC <AmiBlitz3.ab2@8864> BRA.w dirliberr
000248F2 <AmiBlitz3.ab2@8867>   MOVE.b debugmode,-(a7)
000248F6 <AmiBlitz3.ab2@8868>   MOVEM.l D1/A0/A2,-(A7)
000248FE <AmiBlitz3.ab2@8874>   BTST #$7,use_debugger
00024902 <AmiBlitz3.ab2@8875>   BNE 'debugon
00024904 <AmiBlitz3.ab2@8876>   CLR.w D1
00024908 <AmiBlitz3.ab2@8877> BRA.b 'debugoff
0002490A <AmiBlitz3.ab2@8880>   SNE D1
00024910 <AmiBlitz3.ab2@8883>   MOVE.b d1,debugmode
00024912 <AmiBlitz3.ab2@8887>   MOVEA.l A1,A0
00024916 <AmiBlitz3.ab2@8888>   ADDA.l $12(A1),A0
0002491A <AmiBlitz3.ab2@8889>   TST.w -$2(A0)
0002491E <AmiBlitz3.ab2@8890>    BEQ.w JL_0_6AD2
00024922 <AmiBlitz3.ab2@8891>   MOVEM.l A0-A1,-(A7)
00024926 <AmiBlitz3.ab2@8892>   MOVE.w #$FB4F,D1
0002492A <AmiBlitz3.ab2@8893>    BSR.w uselib
0002492E <AmiBlitz3.ab2@8894>   MOVEM.l (A7)+,A0-A1
00024934 <AmiBlitz3.ab2@8895>   ADDQ.w #1,globalvarpointer
0002493C <AmiBlitz3.ab2@8896>   BCLR #$0,globalvarpointer+1
00024944 <AmiBlitz3.ab2@8897>   MOVE.w globalvarpointer,-$6(A0)
0002494A <AmiBlitz3.ab2@8898>   ADDQ.w #4,globalvarpointer
0002494E <AmiBlitz3.ab2@8899>   TST.l -$E(A0)
00024952 <AmiBlitz3.ab2@8900>    BEQ.w JL_0_6AD2
00024958 <AmiBlitz3.ab2@8901>   ADDQ.w #4,globalvarpointer
00024960 <AmiBlitz3.ab2@8904>   MOVE.l libend,$28(A1)
00024962 <AmiBlitz3.ab2@8905>   MOVEA.l A1,A0
00024966 <AmiBlitz3.ab2@8906>   ADDA.l $12(A1),A0
00024968 <AmiBlitz3.ab2@8907>   MOVE.l A1,D1
0002496C <AmiBlitz3.ab2@8908>   ADD.l $6(A1),D1
00024970 <AmiBlitz3.ab2@8909>   TST.l $2C(A1)
00024974 <AmiBlitz3.ab2@8910>    BEQ.w JL_0_6AFE
0002497A <AmiBlitz3.ab2@8912>   TST.b debugmode
0002497E <AmiBlitz3.ab2@8913>    BNE.w JL_0_6AFE
00024980 <AmiBlitz3.ab2@8914>   MOVE.l A1,D1
00024984 <AmiBlitz3.ab2@8915>   ADD.l $2C(A1),D1
0002498A <AmiBlitz3.ab2@8918>   MOVEA.l libend,A2
00024990 <AmiBlitz3.ab2@8921>   CMPA.l data1start,A2
00024994 <AmiBlitz3.ab2@8922>    BCS.w JL_0_6B24
0002499C <AmiBlitz3.ab2@8923>   MOVE.w #$FFFF,dontwrite
0002499E <AmiBlitz3.ab2@8926>   ADDQ.w #2,A0
000249A0 <AmiBlitz3.ab2@8927>   ADDQ.w #2,A2
000249A2 <AmiBlitz3.ab2@8928>   CMPA.l D1,A0
000249A6 <AmiBlitz3.ab2@8929>    BCS.w JL_0_6B16
000249AA <AmiBlitz3.ab2@8930> BRA.w JL_0_6B2C
000249AC <AmiBlitz3.ab2@8933>   MOVE.w (A0)+,(A2)+                                       ;copylibcode
000249AE <AmiBlitz3.ab2@8934>   CMPA.l D1,A0
000249B2 <AmiBlitz3.ab2@8935>    BCS.w JL_0_6B04
000249B8 <AmiBlitz3.ab2@8938>   MOVE.l A2,libend
000249BC <AmiBlitz3.ab2@8939>   MOVE.l $20(A1),D1
000249C0 <AmiBlitz3.ab2@8940>    BEQ.w JL_0_6BB8
000249C4 <AmiBlitz3.ab2@8941>   MOVEM.l D0/D2-D3,-(A7)
000249C8 <AmiBlitz3.ab2@8942>   MOVEA.l $24(A1),A0
000249CA <AmiBlitz3.ab2@8943>   MOVEQ.l #$00,D3
000249CC <AmiBlitz3.ab2@8946>   MOVE.l (A0)+,D2
000249D0 <AmiBlitz3.ab2@8947>   TST.l $2C(A1)
000249D4 <AmiBlitz3.ab2@8948>    BEQ.w JL_0_6B60
000249DA <AmiBlitz3.ab2@8949>   TST.b debugmode
000249DE <AmiBlitz3.ab2@8950>    BNE.w JL_0_6B60
000249E2 <AmiBlitz3.ab2@8951>   CMP.l $2C(A1),D2
000249E6 <AmiBlitz3.ab2@8952>    BCC.w JL_0_6BA0
000249EA <AmiBlitz3.ab2@8955>   TST.w $0(A1,D2.L)
000249EE <AmiBlitz3.ab2@8956>    BPL.w JL_0_6B72
000249F0 <AmiBlitz3.ab2@8957>   TST.l D3
000249F4 <AmiBlitz3.ab2@8958>    BNE.w JL_0_6B72
000249F6 <AmiBlitz3.ab2@8959>   MOVE.l A0,D0
000249F8 <AmiBlitz3.ab2@8960>   MOVE.l D1,D3
000249FC <AmiBlitz3.ab2@8963>   SUB.l $12(A1),D2
00024A00 <AmiBlitz3.ab2@8964>    BMI.w JL_0_6BA0
00024A04 <AmiBlitz3.ab2@8965>   ADD.l $28(A1),D2
00024A06 <AmiBlitz3.ab2@8966>   MOVE.l D2,-(A7)
00024A0C <AmiBlitz3.ab2@8967>   SUB.l destbufferstart,D2
00024A10 <AmiBlitz3.ab2@8968>    BSR.w addhunkoffset
00024A12 <AmiBlitz3.ab2@8969>   MOVEA.l (A7)+,A2
00024A18 <AmiBlitz3.ab2@8970>   TST.w dontwrite
00024A1C <AmiBlitz3.ab2@8971>    BNE.w JL_0_6BA0
00024A20 <AmiBlitz3.ab2@8972>   MOVE.l $28(A1),D2
00024A24 <AmiBlitz3.ab2@8973>   SUB.l $12(A1),D2
00024A26 <AmiBlitz3.ab2@8974>   ADD.l D2,(A2)
00024A28 <AmiBlitz3.ab2@8977>    SUBQ.l #1,D1
00024A2C <AmiBlitz3.ab2@8978>    BNE.w JL_0_6B44
00024A2E <AmiBlitz3.ab2@8979>   MOVE.l D3,D2
00024A32 <AmiBlitz3.ab2@8980>    BEQ.w JL_0_6BB4
00024A34 <AmiBlitz3.ab2@8981>   MOVEA.l D0,A2
00024A36 <AmiBlitz3.ab2@8982>   SUBQ.w #4,A2
00024A3A <AmiBlitz3.ab2@8983>    BSR.w JL_0_6E34
00024A3E <AmiBlitz3.ab2@8986>    MOVEM.l (A7)+,D0/D2-D3
00024A42 <AmiBlitz3.ab2@8989>    MOVEM.l (A7)+,D1/A0/A2
00024A46 <AmiBlitz3.ab2@8990>   MOVEM.l D1-D2,-(A7)
00024A4A <AmiBlitz3.ab2@8991>   TST.w $1A(A1)
00024A4E <AmiBlitz3.ab2@8992>    BNE.w JL_0_6BD0
00024A52 <AmiBlitz3.ab2@8993>   CLR.w $A(A1)
00024A56 <AmiBlitz3.ab2@8994> BRA.w JL_0_6C5E
00024A5C <AmiBlitz3.ab2@8997>   ADDQ.w #1,globalvarpointer
00024A64 <AmiBlitz3.ab2@8998>   BCLR #$0,globalvarpointer+1
00024A6C <AmiBlitz3.ab2@8999>   MOVE.w globalvarpointer,$A(A1)
00024A70 <AmiBlitz3.ab2@9000>   CMP.w #-$12D,D1
00024A74 <AmiBlitz3.ab2@9001>    BNE.w JL_0_6C16
00024A7C <AmiBlitz3.ab2@9002>   MOVE.w $A(A1),movestdn+2
00024A84 <AmiBlitz3.ab2@9003>   MOVE.w $A(A1),pusha3+2
00024A8C <AmiBlitz3.ab2@9004>   MOVE.w $A(A1),pusha32+2
00024A94 <AmiBlitz3.ab2@9005>   MOVE.w $A(A1),pulla3+2
00024A9C <AmiBlitz3.ab2@9006>   MOVE.w $A(A1),geta3+2
00024AA0 <AmiBlitz3.ab2@9009>    CMP.w #-$3E9,D1
00024AA4 <AmiBlitz3.ab2@9010>    BNE.w JL_0_6C3E
00024AAC <AmiBlitz3.ab2@9011>   MOVE.w $A(A1),dataget+2
00024AB4 <AmiBlitz3.ab2@9012>   MOVE.w $A(A1),dataput+2
00024ABC <AmiBlitz3.ab2@9013>   MOVE.w $A(A1),rescode+6
00024AC4 <AmiBlitz3.ab2@9014>   MOVE.w $A(A1),rescode2+2
00024ACA <AmiBlitz3.ab2@9017>   ADDQ.w #2,globalvarpointer
00024ACE <AmiBlitz3.ab2@9018>   TST.w $1A(A1)
00024AD2 <AmiBlitz3.ab2@9019>    BMI.w JL_0_6C52
00024AD8 <AmiBlitz3.ab2@9020>   ADDQ.w #2,globalvarpointer
00024ADC <AmiBlitz3.ab2@9023>   MOVEM.l D1/A1,-(A7)
00024AE0 <AmiBlitz3.ab2@9024>   BSR.w uselib2
00024AE4 <AmiBlitz3.ab2@9025>   MOVEM.l (A7)+,D1/A1
00024AE6 <AmiBlitz3.ab2@9028>   MOVE.w D1,D2
00024AEA <AmiBlitz3.ab2@9029>   MOVE.l $16(A1),D1
00024AEE <AmiBlitz3.ab2@9030>    BSR.w uselib2_org
00024AF2 <AmiBlitz3.ab2@9031>   MOVE.l $1C(A1),D1
00024AF6 <AmiBlitz3.ab2@9032>    BSR.w uselib2_org
00024AFA <AmiBlitz3.ab2@9033>   MOVEM.l (A7)+,D1-D2
00024B00 <AmiBlitz3.ab2@9035>   MOVE.b (a7)+,debugmode
00024B02 <AmiBlitz3.ab2@9038> RTS
00024B04 <AmiBlitz3.ab2@9042>   MOVEQ.l #$00,D2
00024B0A <AmiBlitz3.ab2@9045>   MOVEA.l tokeslist,A2
00024B0C <AmiBlitz3.ab2@9046>   CMPA.l D2,A2
00024B10 <AmiBlitz3.ab2@9047>    BEQ.w JL_0_6CE0
00024B12 <AmiBlitz3.ab2@9048>   MOVE.l A2,-(A7)
00024B14 <AmiBlitz3.ab2@9051>   MOVEQ.l #$00,D3
00024B18 <AmiBlitz3.ab2@9054>   MOVEA.l $8(A2),A3
00024B1A <AmiBlitz3.ab2@9055>   CMPA.l D3,A3
00024B1E <AmiBlitz3.ab2@9056>    BEQ.w JL_0_6CD2
00024B20 <AmiBlitz3.ab2@9057>   MOVE.l A3,-(A7)
00024B24 <AmiBlitz3.ab2@9058>   MOVEM.l D2-D3/A2-A3,-(A7)
00024B28 <AmiBlitz3.ab2@9059>   MOVE.w $4(A2),D1
00024B2C <AmiBlitz3.ab2@9060>   MOVE.w $6(A2),D2
00024B30 <AmiBlitz3.ab2@9061>    BSR.w JL_0_6CE2
00024B34 <AmiBlitz3.ab2@9062>   MOVEM.l (A7)+,D2-D3/A2-A3
00024B3A <AmiBlitz3.ab2@9063>   MOVE.w dontwrite,D0
00024B3E <AmiBlitz3.ab2@9064>    BEQ.w JL_0_6CBE
00024B40 <AmiBlitz3.ab2@9067>   MOVEA.l (A3),A3
00024B42 <AmiBlitz3.ab2@9068>   CMPA.l D3,A3
00024B46 <AmiBlitz3.ab2@9069>    BNE.w JL_0_6CB2
00024B4A <AmiBlitz3.ab2@9070> BRA.w JL_0_6CCC
00024B4E <AmiBlitz3.ab2@9073>   MOVEA.l $4(A3),A0
00024B50 <AmiBlitz3.ab2@9074>   MOVE.l D7,(A0)
00024B52 <AmiBlitz3.ab2@9075>   MOVEA.l (A3),A3
00024B54 <AmiBlitz3.ab2@9076>   CMPA.l D3,A3
00024B58 <AmiBlitz3.ab2@9077>    BNE.w JL_0_6CBE
00024B5A <AmiBlitz3.ab2@9080>   MOVE.l (A7)+,D3
00024B5E <AmiBlitz3.ab2@9081> BRA.w JL_0_6C88
00024B60 <AmiBlitz3.ab2@9084>    MOVEA.l (A2),A2
00024B62 <AmiBlitz3.ab2@9085>   CMPA.l D2,A2
00024B66 <AmiBlitz3.ab2@9086>    BNE.w JL_0_6C86
00024B68 <AmiBlitz3.ab2@9087>   MOVE.l (A7)+,D2
00024B6C <AmiBlitz3.ab2@9088> BRA.w JL_0_6C78
00024B6E <AmiBlitz3.ab2@9091> RTS
00024B70 <AmiBlitz3.ab2@9095>   MOVE.w D2,-(A7)
00024B74 <AmiBlitz3.ab2@9096>    BSR.w searchinstr
00024B76 <AmiBlitz3.ab2@9097>   MOVE.w (A7)+,D2
00024B7E <AmiBlitz3.ab2@9098>   BCLR #$7,blitzmode
00024B82 <AmiBlitz3.ab2@9099>   BCLR #$E,D2
00024B86 <AmiBlitz3.ab2@9100>    BEQ.w JL_0_6D02
00024B8E <AmiBlitz3.ab2@9101>   BSET #$7,blitzmode
00024B90 <AmiBlitz3.ab2@9104>   TST.w (A3)
00024B94 <AmiBlitz3.ab2@9105>    BEQ.w JL_0_6DAC
00024B9A <AmiBlitz3.ab2@9106>   BTST #$2,$1(A3)
00024B9E <AmiBlitz3.ab2@9107>    BNE.w tokeerr
00024BA4 <AmiBlitz3.ab2@9108>   BTST #$3,$1(A3)
00024BA8 <AmiBlitz3.ab2@9109>    BNE.w tokeerr
00024BAC <AmiBlitz3.ab2@9110>   LEA $6(A3),A3
00024BAE <AmiBlitz3.ab2@9113>   MOVE.w (A3)+,D0
00024BB2 <AmiBlitz3.ab2@9114>    BMI.w tokeerr
00024BB6 <AmiBlitz3.ab2@9115>   ANDI.w #$FF,D0
00024BB8 <AmiBlitz3.ab2@9116>   ADDA.w D0,A3
00024BBA <AmiBlitz3.ab2@9117>   ADDQ.w #1,A3
00024BBC <AmiBlitz3.ab2@9118>   EXG.l D0,A3
00024BC0 <AmiBlitz3.ab2@9119>   BCLR #$0,D0
00024BC2 <AmiBlitz3.ab2@9120>   EXG.l D0,A3
00024BC4 <AmiBlitz3.ab2@9121>   SUBQ.w #1,D2
00024BC8 <AmiBlitz3.ab2@9122>    BPL.w JL_0_6D98
00024BCA <AmiBlitz3.ab2@9123>   TST.w (A3)
00024BCE <AmiBlitz3.ab2@9124>    BNE.w JL_0_6D76
00024BD2 <AmiBlitz3.ab2@9125>   MOVE.l $2(A3),D0
00024BD6 <AmiBlitz3.ab2@9126>   OR.l $A(A3),D0
00024BDA <AmiBlitz3.ab2@9127>    BNE.w JL_0_6D76
00024BE0 <AmiBlitz3.ab2@9128>   BTST #$0,$9(A3)
00024BE4 <AmiBlitz3.ab2@9129>    BNE.w JL_0_6D76
00024BE8 <AmiBlitz3.ab2@9130>   MOVE.l $6(A3),D7
00024BEC <AmiBlitz3.ab2@9131>   MOVE.w $0(A2,D7.L),D0
00024BF0 <AmiBlitz3.ab2@9132>   ANDI.w #$F000,D0
00024BF4 <AmiBlitz3.ab2@9133>   CMP.w #-$6000,D0
00024BF8 <AmiBlitz3.ab2@9134>    BEQ.w JL_0_6D76
00024BFC <AmiBlitz3.ab2@9137>   SUB.l $12(A2),D7
00024C00 <AmiBlitz3.ab2@9138>   ADD.l $28(A2),D7
00024C02 <AmiBlitz3.ab2@9139> RTS
00024C08 <AmiBlitz3.ab2@9143>   LEA cutejsr,A0
00024C0E <AmiBlitz3.ab2@9146>   MOVE.l destpointer,-(A7)
00024C16 <AmiBlitz3.ab2@9147>   MOVE.w #$FFFF,lasta6
00024C18 <AmiBlitz3.ab2@9150>    JSR (A0)
00024C1C <AmiBlitz3.ab2@9151>   MOVE.w #$4E75,D1
00024C20 <AmiBlitz3.ab2@9152>    BSR.w writeword
00024C22 <AmiBlitz3.ab2@9153>   MOVE.l (A7)+,D7
00024C24 <AmiBlitz3.ab2@9154> RTS
00024C26 <AmiBlitz3.ab2@9158>   TST.w (A3)+
00024C2A <AmiBlitz3.ab2@9159>    BEQ.w JL_0_6DA4
00024C2C <AmiBlitz3.ab2@9160>   ADDQ.w #2,A3
00024C30 <AmiBlitz3.ab2@9161> BRA.w JL_0_6D98
00024C34 <AmiBlitz3.ab2@9164>   LEA $C(A3),A3
00024C38 <AmiBlitz3.ab2@9165> BRA.w JL_0_6D20
00024C3A <AmiBlitz3.ab2@9169>   TST.w D2
00024C3E <AmiBlitz3.ab2@9170>    BNE.w tokeerr
00024C42 <AmiBlitz3.ab2@9171>   TST.w $6(A3)
00024C46 <AmiBlitz3.ab2@9172>    BNE.w JL_0_6DE4
00024C4A <AmiBlitz3.ab2@9173>   MOVE.l $8(A3),D0
00024C4E <AmiBlitz3.ab2@9174>   OR.l $10(A3),D0
00024C52 <AmiBlitz3.ab2@9175>    BNE.w JL_0_6DE4
00024C58 <AmiBlitz3.ab2@9176>   BTST #$0,$F(A3)
00024C5C <AmiBlitz3.ab2@9177>    BNE.w JL_0_6DE4
00024C60 <AmiBlitz3.ab2@9178>   MOVE.l $C(A3),D7
00024C64 <AmiBlitz3.ab2@9179>   MOVE.w $0(A2,D7.L),D0
00024C68 <AmiBlitz3.ab2@9180>   ANDI.w #$F000,D0
00024C6C <AmiBlitz3.ab2@9181>   CMP.w #-$6000,D0
00024C70 <AmiBlitz3.ab2@9182>    BNE.w JL_0_6D6C
00024C72 <AmiBlitz3.ab2@9185>   MOVE.l A3,D1
00024C74 <AmiBlitz3.ab2@9186>   SUB.l A2,D1
00024C7A <AmiBlitz3.ab2@9187>   LEA Amakelibsub,A0
00024C7E <AmiBlitz3.ab2@9188> BRA.w JL_0_6D7C
00024C84 <AmiBlitz3.ab2@9192>   MOVEA.l _execbase,A6
00024C8A <AmiBlitz3.ab2@9193>   MOVEA.l tokeslist,A2
00024C90 <AmiBlitz3.ab2@9194>   CLR.l tokeslist
00024C94 <AmiBlitz3.ab2@9197>     CMPA.w #$0,A2
00024C98 <AmiBlitz3.ab2@9198>      BEQ.w JL_0_6E32
00024C9C <AmiBlitz3.ab2@9199>     MOVEA.l $8(A2),A3
00024CA0 <AmiBlitz3.ab2@9202>       CMPA.w #$0,A3
00024CA4 <AmiBlitz3.ab2@9203>        BEQ.w JL_0_6E24
00024CA6 <AmiBlitz3.ab2@9204>       MOVEA.l A3,A1
00024CA8 <AmiBlitz3.ab2@9205>       MOVEA.l (A3),A3
00024CAA <AmiBlitz3.ab2@9206>       MOVEQ.l #$08,D0
00024CB0 <AmiBlitz3.ab2@9207>       MOVE.l mempool,a0
00024CB6 <AmiBlitz3.ab2@9208>       MOVEA.l _execbase,A6
00024CBA <AmiBlitz3.ab2@9209>       JSR _FreePooled(A6)
00024CBE <AmiBlitz3.ab2@9210> BRA.w JL_0_6E0E
00024CC0 <AmiBlitz3.ab2@9213>     MOVEA.l A2,A1
00024CC2 <AmiBlitz3.ab2@9214>     MOVEA.l (A2),A2
00024CC4 <AmiBlitz3.ab2@9215>     MOVEQ.l #$0C,D0
00024CCA <AmiBlitz3.ab2@9216>     MOVE.l mempool,a0
00024CD0 <AmiBlitz3.ab2@9217>     MOVEA.l _execbase,A6
00024CD4 <AmiBlitz3.ab2@9218>     JSR _FreePooled(A6)
00024CD8 <AmiBlitz3.ab2@9219> BRA.w JL_0_6E02
00024CDA <AmiBlitz3.ab2@9222> RTS
00024CDE <AmiBlitz3.ab2@9226>   MOVEM.l D3-D5/A1-A6,-(A7)
00024CE0 <AmiBlitz3.ab2@9227>   MOVEA.l A1,A4
00024CE2 <AmiBlitz3.ab2@9230>   MOVE.l (A2)+,D3
00024CE6 <AmiBlitz3.ab2@9231>   MOVE.w $0(A4,D3.L),D5
00024CEA <AmiBlitz3.ab2@9232>    BPL.w JL_0_6E7A
00024CEE <AmiBlitz3.ab2@9233>   TST.l $2C(A4)
00024CF2 <AmiBlitz3.ab2@9234>    BEQ.w JL_0_6E5E
00024CF8 <AmiBlitz3.ab2@9235>   TST.b debugmode
00024CFC <AmiBlitz3.ab2@9236>    BNE.w JL_0_6E5E
00024D00 <AmiBlitz3.ab2@9237>   CMP.l $2C(A4),D3
00024D04 <AmiBlitz3.ab2@9238>    BCC.w JL_0_6E7A
00024D08 <AmiBlitz3.ab2@9241>   BCLR #$F,D5
00024D0C <AmiBlitz3.ab2@9242>   MOVE.w $2(A4,D3.L),D4
00024D10 <AmiBlitz3.ab2@9243>   SUB.l $12(A4),D3
00024D14 <AmiBlitz3.ab2@9244>   ADD.l $28(A4),D3
00024D18 <AmiBlitz3.ab2@9245>   MOVEM.l D2/A2/A4,-(A7)
00024D1C <AmiBlitz3.ab2@9246>    BSR.w JL_0_6E86
00024D20 <AmiBlitz3.ab2@9247>   MOVEM.l (A7)+,D2/A2/A4
00024D22 <AmiBlitz3.ab2@9250>   SUBQ.l #1,D2
00024D26 <AmiBlitz3.ab2@9251>    BNE.w JL_0_6E3A
00024D2A <AmiBlitz3.ab2@9252>   MOVEM.l (A7)+,D3-D5/A1-A6
00024D2C <AmiBlitz3.ab2@9253> RTS
00024D32 <AmiBlitz3.ab2@9257>   LEA tokeslist,A3
00024D38 <AmiBlitz3.ab2@9258>   MOVEA.l _execbase,A6
00024D3A <AmiBlitz3.ab2@9261>   MOVE.l (A3),D0
00024D3E <AmiBlitz3.ab2@9262>    BEQ.w JL_0_6EAC
00024D40 <AmiBlitz3.ab2@9263>   MOVEA.l D0,A3
00024D44 <AmiBlitz3.ab2@9264>   CMP.w $4(A3),D4
00024D48 <AmiBlitz3.ab2@9265>    BNE.w JL_0_6E90
00024D4C <AmiBlitz3.ab2@9266>   CMP.w $6(A3),D5
00024D50 <AmiBlitz3.ab2@9267>    BNE.w JL_0_6E90
00024D54 <AmiBlitz3.ab2@9268> BRA.w JL_0_6ED0
00024D56 <AmiBlitz3.ab2@9271>   MOVEQ.l #$0C,D0
00024D58 <AmiBlitz3.ab2@9272>   MOVEQ.l #$01,D1
00024D5E <AmiBlitz3.ab2@9273>   MOVE.l mempool,a0
00024D62 <AmiBlitz3.ab2@9274>   JSR _AllocPooled(a6)
00024D64 <AmiBlitz3.ab2@9276>   MOVEA.l D0,A3
00024D6A <AmiBlitz3.ab2@9277>   MOVE.l tokeslist,(A3)
00024D70 <AmiBlitz3.ab2@9278>   MOVE.l A3,tokeslist
00024D74 <AmiBlitz3.ab2@9279>   MOVE.w D4,$4(A3)
00024D78 <AmiBlitz3.ab2@9280>   MOVE.w D5,$6(A3)
00024D7C <AmiBlitz3.ab2@9281>   CLR.l $8(A3)
00024D7E <AmiBlitz3.ab2@9284>   MOVEQ.l #$08,D0
00024D80 <AmiBlitz3.ab2@9285>   MOVEQ.l #$01,D1
00024D86 <AmiBlitz3.ab2@9286>   MOVE.l mempool,a0
00024D8A <AmiBlitz3.ab2@9287>   JSR _AllocPooled(a6)
00024D8C <AmiBlitz3.ab2@9289>   MOVEA.l D0,A0
00024D90 <AmiBlitz3.ab2@9290>   MOVE.l D3,$4(A0)
00024D94 <AmiBlitz3.ab2@9291>   MOVE.l $8(A3),(A0)
00024D98 <AmiBlitz3.ab2@9292>   MOVE.l A0,$8(A3)
00024D9A <AmiBlitz3.ab2@9293>   MOVE.w D4,D1
00024D9E <AmiBlitz3.ab2@9294> BRA.w searchinstr
00024DA2 <AmiBlitz3.ab2@9297> tokeslist: Ds.l 1
00024DA6 <AmiBlitz3.ab2@9310>   BEQ.w uselib2_org__skip
00024DA8 <AmiBlitz3.ab2@9311>   MOVE.l A1,-(A7)
00024DAA <AmiBlitz3.ab2@9312>   ADDA.l D1,A1
00024DAC <AmiBlitz3.ab2@9313>   ADDQ.w #6,A1
00024DAE <AmiBlitz3.ab2@9316>     MOVE.w (A1)+,D1
00024DB2 <AmiBlitz3.ab2@9317>     BEQ.w uselib2_org__done
00024DB4 <AmiBlitz3.ab2@9318>     CMP.w D2,D1
00024DB8 <AmiBlitz3.ab2@9319>     BEQ.w uselib2_org__skip2
00024DBA <AmiBlitz3.ab2@9320>     MOVE.l A1,-(A7)
00024DBE <AmiBlitz3.ab2@9321>     BSR.w uselib
00024DC0 <AmiBlitz3.ab2@9322>     MOVEA.l (A7)+,A1
00024DC2 <AmiBlitz3.ab2@9325>     ADDQ.w #2,A1
00024DC6 <AmiBlitz3.ab2@9326> BRA.w uselib2_org__loop
00024DC8 <AmiBlitz3.ab2@9329>   MOVEA.l (A7)+,A1
00024DCA <AmiBlitz3.ab2@9332> RTS
00024DD0 <AmiBlitz3.ab2@9336>   MOVEA.l libpointer,A1
00024DD4 <AmiBlitz3.ab2@9339>   CMPA.w #$0,A1
00024DD8 <AmiBlitz3.ab2@9340>    BEQ.b JL_0_6F36
00024DDC <AmiBlitz3.ab2@9341>   CMP.w $4(A1),D1
00024DE0 <AmiBlitz3.ab2@9342>    BEQ.w JL_0_6F34
00024DE2 <AmiBlitz3.ab2@9343>   MOVEA.l (A1),A1
00024DE6 <AmiBlitz3.ab2@9344> BRA.w JL_0_6F20
00024DE8 <AmiBlitz3.ab2@9347>   MOVEQ.l #-$01,D1
00024DEA <AmiBlitz3.ab2@9350> RTS
00024DEE <AmiBlitz3.ab2@9354>   MOVEM.l d0/a2,-(a7)
00024DF0 <AmiBlitz3.ab2@9355>   MOVEQ #0,d0
00024DF6 <AmiBlitz3.ab2@9356>   LEA instrtab+4,a2
00024DF8 <AmiBlitz3.ab2@9357>   MOVE.w d1,d0
00024DFA <AmiBlitz3.ab2@9358>   ASL.l #3,d0
00024DFE <AmiBlitz3.ab2@9359>   MOVE.l 0(a2,d0.l),a1                                     ;*8
00024E04 <AmiBlitz3.ab2@9360>   CMP.l #0,a1
00024E08 <AmiBlitz3.ab2@9361>   BNE JL_0_6F54b
00024E0E <AmiBlitz3.ab2@9363>   MOVEA.l libpointer,A1
00024E12 <AmiBlitz3.ab2@9366>     CMPA.w #$0,A1
00024E16 <AmiBlitz3.ab2@9367>     BEQ.w noliberr
00024E1A <AmiBlitz3.ab2@9368>     CMP.w $4(A1),D1
00024E1E <AmiBlitz3.ab2@9369>     BEQ.w JL_0_6F54
00024E20 <AmiBlitz3.ab2@9370>    MOVEA.l (A1),A1
00024E24 <AmiBlitz3.ab2@9371> BRA.w JL_0_6F3E
00024E28 <AmiBlitz3.ab2@9374>   MOVE.l a1,0(a2,d0.l)
00024E2C <AmiBlitz3.ab2@9377>   MOVEM.l (a7)+,d0/a2
00024E2E <AmiBlitz3.ab2@9378> RTS
00024E32 <AmiBlitz3.ab2@9381>   MOVEM.l d0-d1/a1,-(a7)
00024E34 <AmiBlitz3.ab2@9382>   MOVEQ #0,d0
00024E3A <AmiBlitz3.ab2@9383>   LEA instrtab,a1
00024E3C <AmiBlitz3.ab2@9384>   MOVE.w d1,d0
00024E3E <AmiBlitz3.ab2@9385>   ASL.l #3,d0
00024E42 <AmiBlitz3.ab2@9386>   MOVE.l 0(a1,d0.l),a3
00024E46 <AmiBlitz3.ab2@9387>   MOVE.l 4(a1,d0.l),a2
00024E4C <AmiBlitz3.ab2@9388>   CMP.l #0,a3
00024E50 <AmiBlitz3.ab2@9389>   BNE JL_0_6F92b
00024E56 <AmiBlitz3.ab2@9391>   MOVEA.l libpointer,A2
00024E5A <AmiBlitz3.ab2@9394>   CMPA.w #$0,A2
00024E5E <AmiBlitz3.ab2@9395>   BEQ.w notokerr
00024E62 <AmiBlitz3.ab2@9396>   CMP.w $E(A2),D1
00024E66 <AmiBlitz3.ab2@9397>   BCS.w JL_0_6FB8
00024E6A <AmiBlitz3.ab2@9398>   CMP.w $10(A2),D1
00024E6E <AmiBlitz3.ab2@9399>   BCC.w JL_0_6FB8
00024E72 <AmiBlitz3.ab2@9400>   LEA $30(A2),A3
00024E76 <AmiBlitz3.ab2@9401>   TST.w $4(A2)
00024E7A <AmiBlitz3.ab2@9402>   BPL.w JL_0_6FA6
00024E7E <AmiBlitz3.ab2@9405>     CMP.w $E(A2),D1
00024E82 <AmiBlitz3.ab2@9406>     BEQ.w JL_0_6F92
00024E84 <AmiBlitz3.ab2@9407>     SUBQ.w #1,D1
00024E88 <AmiBlitz3.ab2@9408>     MOVEA.l $2(A3),A3
00024E8C <AmiBlitz3.ab2@9409> BRA.w JL_0_6F80
00024E90 <AmiBlitz3.ab2@9412>   MOVE.l a3,0(a1,d0.l)
00024E94 <AmiBlitz3.ab2@9413>   MOVE.l a2,4(a1,d0.l)
00024E98 <AmiBlitz3.ab2@9416>   MOVEM.l (a7)+,d0-d1/a1
00024E9C <AmiBlitz3.ab2@9417>   MOVEM.l D1/A1-a3,-(A7)
00024EA0 <AmiBlitz3.ab2@9418>   CMP.w #1,(a3)
00024EA4 <AmiBlitz3.ab2@9419>   BNE.s ex10
00024EAC <AmiBlitz3.ab2@9420>   CMP.l #$12345678,$e(a3)
00024EB0 <AmiBlitz3.ab2@9421>   BNE.s ex10
00024EB6 <AmiBlitz3.ab2@9422>   CMP.w #$ffff,$16(a3)
00024EBA <AmiBlitz3.ab2@9423>   BNE.s ex10
00024EBE <AmiBlitz3.ab2@9424>   MOVE.l $12(a3),d1
00024EC2 <AmiBlitz3.ab2@9425>   BEQ.s ex10
00024EC8 <AmiBlitz3.ab2@9426>   LEA pluginbase,a3
00024ECC <AmiBlitz3.ab2@9428> JMP 0(a2,d1.l)                                             ;plugin
00024ED0 <AmiBlitz3.ab2@9431>   MOVEM.l (A7)+,D1/A1-a3
00024ED6 <AmiBlitz3.ab2@9432>   JSR stripspaces
00024ED8 <AmiBlitz3.ab2@9433>   MOVEQ #0,d0
00024EDA <AmiBlitz3.ab2@9434>   MOVE.b (a5)+,d0
00024EE0 <AmiBlitz3.ab2@9435>   MOVE.w d0,lastchar
00024EE2 <AmiBlitz3.ab2@9436>   ADDQ.l #4,a7
00024EE4 <AmiBlitz3.ab2@9437> RTS
00024EE6 <AmiBlitz3.ab2@9441>   MOVEA.l A2,A1
00024EEC <AmiBlitz3.ab2@9442>   CLR.b newmode
00024EF0 <AmiBlitz3.ab2@9443>   MOVE.w $4(A1),D1
00024EF4 <AmiBlitz3.ab2@9446>   BSR.w uselib3
00024EF8 <AmiBlitz3.ab2@9447>   MOVEM.l (A7)+,D1/A1-a3
00024EFA <AmiBlitz3.ab2@9448> RTS
00024F00 <AmiBlitz3.ab2@9451>   MOVE.w globalvarpointer,-(a7)
00024F08 <AmiBlitz3.ab2@9452>   MOVE.w #$8004,globalvarpointer
00024F0C <AmiBlitz3.ab2@9453>   BSR.w uselib3
00024F12 <AmiBlitz3.ab2@9454>   MOVE.w (a7)+,globalvarpointer
00024F16 <AmiBlitz3.ab2@9455>   MOVEM.l (A7)+,D1/A1-a3
00024F18 <AmiBlitz3.ab2@9456> RTS
00024F1C <AmiBlitz3.ab2@9459>     CMP.w $E(A2),D1
00024F20 <AmiBlitz3.ab2@9460>     BEQ.w JL_0_6F92
00024F22 <AmiBlitz3.ab2@9461>     SUBQ.w #1,D1
00024F26 <AmiBlitz3.ab2@9462>     MOVEA.l $2(A3),A3
00024F2A <AmiBlitz3.ab2@9463> BRA.w JL_0_6FA6
00024F2C <AmiBlitz3.ab2@9466>   MOVEA.l (A2),A2
00024F30 <AmiBlitz3.ab2@9467> BRA.w JL_0_6F5C
00024F36 <AmiBlitz3.ab2@9470> JMP writeword
00024F3A <AmiBlitz3.ab2@9473> ptr_acidlibs:   Ds.l 1                                     ;deflibsat org source
00024F3E <AmiBlitz3.ab2@9474> ptr_deflibs:    Ds.l 1                                     ;acidlibsat org source
00024F42 <AmiBlitz3.ab2@9475> ptr_userlibs:   Ds.l 1                                     ;blitzlibsat org source  ;;start of blitzlibs list!
00024F44 <AmiBlitz3.ab2@9481>   TST.l D0
00024F48 <AmiBlitz3.ab2@9482>   BEQ.w exit_loadlibsfile
00024F4A <AmiBlitz3.ab2@9483>     MOVE.l D0,D6                                           ;d6=len
00024F50 <AmiBlitz3.ab2@9484>     MOVEA.l _dosbase,A6
00024F56 <AmiBlitz3.ab2@9485>     MOVE.l #HUNK_RELOC_16__MODE_OLDFILE,D2
00024F5A <AmiBlitz3.ab2@9486>     JSR _Open(A6)
00024F5C <AmiBlitz3.ab2@9487>     MOVE.l D0,D7
00024F60 <AmiBlitz3.ab2@9488>     BEQ.w exit_loadlibsfile
00024F62 <AmiBlitz3.ab2@9489>       MOVE.l D6,D0
00024F64 <AmiBlitz3.ab2@9490>       MOVEQ.l #$01,D1
00024F6A <AmiBlitz3.ab2@9491>       MOVEA.l _execbase,A6
00024F70 <AmiBlitz3.ab2@9492>       MOVE.l mempool,a0
00024F74 <AmiBlitz3.ab2@9493>       JSR _AllocPooled(a6)
00024F76 <AmiBlitz3.ab2@9494>       MOVE.l D0,D5                                         ;start address
00024F78 <AmiBlitz3.ab2@9496>       MOVE.l D7,D1                                         ; handle
00024F7A <AmiBlitz3.ab2@9497>       MOVE.l D5,D2                                         ; buffer addr
00024F7C <AmiBlitz3.ab2@9498>       MOVE.l D6,D3                                         ; size
00024F82 <AmiBlitz3.ab2@9499>       MOVEA.l _dosbase,A6
00024F86 <AmiBlitz3.ab2@9500>       JSR _Read(A6)
00024F88 <AmiBlitz3.ab2@9501>       MOVE.l D7,D1
00024F8C <AmiBlitz3.ab2@9502>       JSR _Close(A6)
00024F8E <AmiBlitz3.ab2@9504>       MOVEA.l D5,A0                                        ; buffer addr
00024F90 <AmiBlitz3.ab2@9510>         MOVE.l (A0)+,D0                                    ; naechster Longwert nach DO
00024F94 <AmiBlitz3.ab2@9511>         BEQ.b JL_0_7044                                    ; wenn <> 0, dann
00024F98 <AmiBlitz3.ab2@9512>           LEA $20(A0),A1                                   ;   lade inhalt von D0+40bytes nach A1
00024F9A <AmiBlitz3.ab2@9513>           MOVE.l A1,(A3)                                   ;   kopiere Adresse in A1 zum libpointer
00024F9C <AmiBlitz3.ab2@9514>           MOVEA.l A1,A3                                    ;   kopiere A1 nach A3
00024F9E <AmiBlitz3.ab2@9515>           ADDA.l D0,A0                                     ;   addiere inhalt von D0 zu A0 hinzu
00024FA2 <AmiBlitz3.ab2@9516>           MOVE.l -$4(A1),D0                                ;   hole die 4bytes vor nach D0
00024FA4 <AmiBlitz3.ab2@9517>           ADD.l D0,D0                                      ;   verdoppele D0
00024FA6 <AmiBlitz3.ab2@9518>           ADD.l D0,D0                                      ;   verdoppele D0 nochmal
00024FAA <AmiBlitz3.ab2@9519>           MOVE.l D0,$6(A1)                                 ;   schreibe D0 6bytes nach A1
00024FAE <AmiBlitz3.ab2@9520>           CLR.l $20(A1)                                    ;   loesche D0+40bytes
00024FB2 <AmiBlitz3.ab2@9521>           LEA $C(A1,D0.L),A2                               ;   lade inhalt von (A1)+D0+$C nach A2
00024FB4 <AmiBlitz3.ab2@9522>           CMPA.l A0,A2
00024FB8 <AmiBlitz3.ab2@9523>           BCC.b JL_0_7010                                  ; wenn A0=>A2
00024FBE <AmiBlitz3.ab2@9524>             MOVE.l -$8(A2),$20(A1)                         ;
00024FC2 <AmiBlitz3.ab2@9525>             MOVE.l A2,$24(A1)                              ;
00024FC6 <AmiBlitz3.ab2@9526> BRA.w JL_0_7010
00024FC8 <AmiBlitz3.ab2@9529>       MOVE.l D5,D0
00024FCA <AmiBlitz3.ab2@9532> RTS
00024FF4 <AmiBlitz3.ab2@9536>   !basic
00025068 <AmiBlitz3.ab2@9537>    tempmapping$ = dos_AddPart{my_systemdir$,"token_mapping_userlibs.txt"}
0002509C <AmiBlitz3.ab2@9538>    dos_Delete{tempmapping$}
000250E0 <AmiBlitz3.ab2@9539>    fid.l = file_Open{tempmapping$,#file_forcewrite}
000250FE <AmiBlitz3.ab2@9540>   !asm
00025104 <AmiBlitz3.ab2@9542>   LEA libpointer,A3
0002510A <AmiBlitz3.ab2@9546>   MOVE.l size_deflibs,D0
00025110 <AmiBlitz3.ab2@9547>   MOVE.l deflib,d1
00025114 <AmiBlitz3.ab2@9548>   BEQ 'l1
00025118 <AmiBlitz3.ab2@9549> BRA 'l2
0002511E <AmiBlitz3.ab2@9552>   MOVE.l #str_path_deflibs,D1
00025122 <AmiBlitz3.ab2@9555>   BSR.w load_libsfile
00025128 <AmiBlitz3.ab2@9556>   MOVE.l D0,ptr_deflibs
0002512E <AmiBlitz3.ab2@9559>   MOVE.l size_acidlibs,D0
00025134 <AmiBlitz3.ab2@9560>   MOVE.l #str_path_acidlibs,D1
00025138 <AmiBlitz3.ab2@9561>   BSR.w load_libsfile
0002513E <AmiBlitz3.ab2@9562>   MOVE.l D0,ptr_acidlibs
00025140 <AmiBlitz3.ab2@9566>   CLR.l (A3)
00025146 <AmiBlitz3.ab2@9567>   MOVE.l A3,ptr_userlibs
0002514C <AmiBlitz3.ab2@9572>   LEA str_libfilename,A0
00025152 <AmiBlitz3.ab2@9573>   LEA str_path_userlibs,A1
00025154 <AmiBlitz3.ab2@9576>     MOVE.b (A1)+,(A0)+
00025158 <AmiBlitz3.ab2@9577>   BNE.b JL_0_708E
0002515A <AmiBlitz3.ab2@9579>   SUBQ.w #1,A0
0002515E <AmiBlitz3.ab2@9580>   MOVE.b #$2F,(A0)+
00025160 <AmiBlitz3.ab2@9583>   MOVE.l A0,-(A7)                                          ; -- store str_path_userlibs in A7
00025166 <AmiBlitz3.ab2@9585>   LEA ptr_userlibs_list,A2
0002516C <AmiBlitz3.ab2@9586>   MOVEA.l ptr_userlibs,A3
00025172 <AmiBlitz3.ab2@9587>   MOVEA.l _dosbase,A6
00025174 <AmiBlitz3.ab2@9592>       MOVE.l (A2),D0                                       ; addresse aus liste nach D0
00025178 <AmiBlitz3.ab2@9593>       BNE.b JL_0_70C6                                      ; wenn nix drin, processing ueberspringen
0002517A <AmiBlitz3.ab2@9595>       CLR.l (A3)
0002517C <AmiBlitz3.ab2@9596>       ADDQ.w #4,A7
000251A6 <AmiBlitz3.ab2@9597>       !basic
000251BA <AmiBlitz3.ab2@9598>       If fid<>-1
000251C4 <AmiBlitz3.ab2@9599>         file_Close{fid}
000251D0 <AmiBlitz3.ab2@9600>         fid = -1
000251EE <AmiBlitz3.ab2@9602>       !asm
000251F2 <AmiBlitz3.ab2@9603> BRA.w process_libraries
000251F4 <AmiBlitz3.ab2@9606>       MOVEA.l D0,A2                                        ; addresse zureuck nach A2
000251F8 <AmiBlitz3.ab2@9607>       TST.w $4(A2)                                         ; naechste addresse pruefen
000251FC <AmiBlitz3.ab2@9608>     BEQ.b JL_0_70BA
00025200 <AmiBlitz3.ab2@9610>     LEA $6(A2),A1
00025202 <AmiBlitz3.ab2@9611>     MOVEA.l (A7),A0
00025204 <AmiBlitz3.ab2@9614>       MOVE.b (A1)+,(A0)+
00025208 <AmiBlitz3.ab2@9615>     BNE.w JL_0_70D4
0002520A <AmiBlitz3.ab2@9619>     MOVE.l A0,-(A7)
00025210 <AmiBlitz3.ab2@9620>     MOVE.l #str_libfilename,D1
00025212 <AmiBlitz3.ab2@9621>     MOVEQ.l #-$02,D2
00025218 <AmiBlitz3.ab2@9622>     MOVEA.l _dosbase,A6
0002521C <AmiBlitz3.ab2@9623>      JSR _Lock(A6)
0002521E <AmiBlitz3.ab2@9624>     MOVE.l D0,D1
00025222 <AmiBlitz3.ab2@9625>      BEQ.w JL_0_7156
00025224 <AmiBlitz3.ab2@9626>     MOVEA.l (A7),A0
0002522A <AmiBlitz3.ab2@9627>     MOVE.b #$2F,-$1(A0)
0002522C <AmiBlitz3.ab2@9630>     MOVE.l D1,-(A7)
00025232 <AmiBlitz3.ab2@9631>     MOVE.l #ptr_parameterstore,D2
00025238 <AmiBlitz3.ab2@9632>     MOVEA.l _dosbase,A6
0002523C <AmiBlitz3.ab2@9633>     JSR _Examine(A6)
0002523E <AmiBlitz3.ab2@9634>     TST.l D0
00025242 <AmiBlitz3.ab2@9635>      BEQ.w JL_0_7150
00025248 <AmiBlitz3.ab2@9638>     LEA fib_FileName,A0
0002524C <AmiBlitz3.ab2@9639>     BSR.w check_for_infoextention
00025250 <AmiBlitz3.ab2@9640>     BEQ.w JL_0_7150
0002527A <AmiBlitz3.ab2@9643>     !basic
000252FE <AmiBlitz3.ab2@9644>       Poke$ ?str_libfilename,dos_AddPart{Peek$(?str_path_userlibs),Peek$(?fib_FileName)}
0002531C <AmiBlitz3.ab2@9645>     !asm
00025322 <AmiBlitz3.ab2@9646>     MOVE.l #str_libfilename,D1
00025326 <AmiBlitz3.ab2@9647>     BSR.w open_userlibfile
00025328 <AmiBlitz3.ab2@9650>     MOVE.l (A7)+,D1
0002532E <AmiBlitz3.ab2@9651>     MOVEA.l _dosbase,A6
00025332 <AmiBlitz3.ab2@9652>     JSR _UnLock(A6)
00025334 <AmiBlitz3.ab2@9655>     ADDQ.w #4,A7
00025338 <AmiBlitz3.ab2@9656> BRA.w JL_0_70BA
0002533E <AmiBlitz3.ab2@9659>   MOVE.l #HUNK_RELOC_16__MODE_OLDFILE,D2
00025344 <AmiBlitz3.ab2@9660>   MOVEA.l _dosbase,A6
00025348 <AmiBlitz3.ab2@9661>    JSR _Open(A6)
0002534A <AmiBlitz3.ab2@9662>   MOVE.l D0,D7
0002534E <AmiBlitz3.ab2@9663>    BEQ.w exit_userlibfile
00025350 <AmiBlitz3.ab2@9666>   MOVE.l D7,D1                                             ; filehandle
00025356 <AmiBlitz3.ab2@9667>   MOVE.l #optstuff,D2                                     ; buffer
0002535C <AmiBlitz3.ab2@9668>   MOVEA.l _dosbase,A6
0002535E <AmiBlitz3.ab2@9669>   MOVEQ.l #$20,D3                                          ; size
00025362 <AmiBlitz3.ab2@9670>   JSR _Read(A6)
00025368 <AmiBlitz3.ab2@9673>   MOVE.l optstuff+28,D6
0002536A <AmiBlitz3.ab2@9674>   LSL.l #2,D6
0002536C <AmiBlitz3.ab2@9675>   MOVE.l D6,D0
0002536E <AmiBlitz3.ab2@9676>   MOVEQ.l #$01,D1
00025374 <AmiBlitz3.ab2@9677>   MOVEA.l _execbase,A6
0002537A <AmiBlitz3.ab2@9678>   MOVE.l mempool,a0
0002537E <AmiBlitz3.ab2@9679>   JSR _AllocPooled(a6)
00025380 <AmiBlitz3.ab2@9680>   MOVEA.l D0,A5
00025386 <AmiBlitz3.ab2@9683>   MOVEA.l _dosbase,A6
00025388 <AmiBlitz3.ab2@9684>   MOVE.l D7,D1                                             ; filehandle
0002538A <AmiBlitz3.ab2@9685>   MOVE.l A5,D2                                             ; buffer
0002538C <AmiBlitz3.ab2@9686>   MOVE.l D6,D3                                             ; size
00025390 <AmiBlitz3.ab2@9687>    JSR _Read(A6)
00025392 <AmiBlitz3.ab2@9688>   MOVE.l A5,(A3)
00025394 <AmiBlitz3.ab2@9690>   MOVE.l A5,d0
00025396 <AmiBlitz3.ab2@9692>   MOVEA.l A5,A3
0002539A <AmiBlitz3.ab2@9693>   MOVE.l D6,$6(A5)
0002539E <AmiBlitz3.ab2@9694>   CLR.l $20(A5)
000253C8 <AmiBlitz3.ab2@9696>   !basic
000253D2 <AmiBlitz3.ab2@9698>   addr_libnum.l = PutD0 + 4
000253E6 <AmiBlitz3.ab2@9699>   If fid<>-1
00025486 <AmiBlitz3.ab2@9700>     currentlib$ = LSet$(Peek.s(?fib_FileName),30)+";"+LSet$(Get_Libinfo{addr_libnum},30) ;+";"+Str$(Peek.w(addr_libnum))
000254B8 <AmiBlitz3.ab2@9701>     file_WriteLine{fid,currentlib$}
000254D6 <AmiBlitz3.ab2@9703>   !asm
000254D8 <AmiBlitz3.ab2@9706>   MOVE.l D7,D1                                             ; filehandle
000254DE <AmiBlitz3.ab2@9707>   MOVE.l #optstuff,D2                                     ; buffer
000254E0 <AmiBlitz3.ab2@9708>   MOVEQ.l #$0C,D3                                          ; size
000254E6 <AmiBlitz3.ab2@9709>   MOVEA.l _dosbase,A6
000254EA <AmiBlitz3.ab2@9710>    JSR _Read(A6)
000254F0 <AmiBlitz3.ab2@9712>   CMP.l #$C,D0
000254F4 <AmiBlitz3.ab2@9713>    BCS.w close_and_exit_userlibfile
000254FA <AmiBlitz3.ab2@9716>   MOVE.l optstuff+4,D0
000254FE <AmiBlitz3.ab2@9717>   MOVE.l D0,$20(A5)
00025500 <AmiBlitz3.ab2@9718>   LSL.l #2,D0
00025502 <AmiBlitz3.ab2@9719>   MOVE.l D0,D5
00025504 <AmiBlitz3.ab2@9720>   MOVEQ.l #$01,D1
0002550A <AmiBlitz3.ab2@9721>   MOVEA.l _execbase,A6
00025510 <AmiBlitz3.ab2@9722>   MOVE.l mempool,a0
00025514 <AmiBlitz3.ab2@9723>   JSR _AllocPooled(a6)
0002551A <AmiBlitz3.ab2@9725>   MOVEA.l _dosbase,A6
0002551E <AmiBlitz3.ab2@9726>   MOVE.l D0,$24(A5)
00025520 <AmiBlitz3.ab2@9727>   MOVE.l D7,D1
00025522 <AmiBlitz3.ab2@9728>   MOVE.l D0,D2
00025524 <AmiBlitz3.ab2@9729>   MOVE.l D5,D3
00025528 <AmiBlitz3.ab2@9730>   JSR _Read(A6)
0002552A <AmiBlitz3.ab2@9733>   MOVE.l D7,D1
00025530 <AmiBlitz3.ab2@9734>   MOVEA.l _dosbase,A6
00025534 <AmiBlitz3.ab2@9735> JMP _Close(A6)
00025536 <AmiBlitz3.ab2@9738> RTS
0002553C <AmiBlitz3.ab2@9744>   CLR.w number_of_objects
00025542 <AmiBlitz3.ab2@9745>   MOVEA.l end_of_tokenlist,A3
00025548 <AmiBlitz3.ab2@9746>   MOVEA.l libpointer,A2
0002554C <AmiBlitz3.ab2@9749>     CMPA.w #$0,A2
00025550 <AmiBlitz3.ab2@9750>     BEQ.w JL_0_72D8                                        ; <-- abbruch mit RTS
00025554 <AmiBlitz3.ab2@9752>     MOVE.w $4(A2),D7                                       ; <-- get tokennumber
00025558 <AmiBlitz3.ab2@9753>     BMI.w JL_0_7226
0002555A <AmiBlitz3.ab2@9754>       LSL.w #7,D7
0002555C <AmiBlitz3.ab2@9755>       ADDQ.w #1,D7
00025560 <AmiBlitz3.ab2@9756>       MOVE.w D7,$E(A2)
00025564 <AmiBlitz3.ab2@9759>     LEA $30(A2),A1
0002556A <AmiBlitz3.ab2@9760>     LEA temp1,A4
0002556C <AmiBlitz3.ab2@9763>       MOVE.w (A1),D0
00025570 <AmiBlitz3.ab2@9764>       BMI.w JL_0_72AE
00025572 <AmiBlitz3.ab2@9765>       MOVE.l A1,(A4)
00025574 <AmiBlitz3.ab2@9766>       MOVEA.l A1,A4
00025576 <AmiBlitz3.ab2@9767>       ADDQ.w #2,A4
00025578 <AmiBlitz3.ab2@9768>       ADDQ.w #6,A1
0002557C <AmiBlitz3.ab2@9769>       CMP.w #$8,D0
00025580 <AmiBlitz3.ab2@9770>       BEQ.w JL_0_7290
00025584 <AmiBlitz3.ab2@9771>         ANDI.w #$F,D0
00025588 <AmiBlitz3.ab2@9772>         BNE.w JL_0_725C
0002558C <AmiBlitz3.ab2@9773>           BSR.w skiplibreg
00025590 <AmiBlitz3.ab2@9774>           LEA $C(A1),A1
00025592 <AmiBlitz3.ab2@9775>           ADDQ.w #1,D7
00025596 <AmiBlitz3.ab2@9776> BRA.w JL_0_7230
0002559A <AmiBlitz3.ab2@9779>     BTST #$2,D0
0002559E <AmiBlitz3.ab2@9780>     BEQ.w JL_0_7274
000255A0 <AmiBlitz3.ab2@9781>       ADDQ.w #4,A1
000255A2 <AmiBlitz3.ab2@9784>         TST.b (A1)+
000255A6 <AmiBlitz3.ab2@9785>       BPL.w JL_0_7266
000255AA <AmiBlitz3.ab2@9786>       BSR.w aligna1
000255AE <AmiBlitz3.ab2@9787> BRA.w JL_0_7290
000255B0 <AmiBlitz3.ab2@9790>       MOVE.w (A1)+,D0
000255B4 <AmiBlitz3.ab2@9791>       BMI.w JL_0_7290
000255B8 <AmiBlitz3.ab2@9792>       ANDI.w #$FF,D0
000255BA <AmiBlitz3.ab2@9793>       ADDA.w D0,A1
000255BE <AmiBlitz3.ab2@9794>       BSR.w aligna1
000255C2 <AmiBlitz3.ab2@9795>       BSR.w skiplibreg
000255C6 <AmiBlitz3.ab2@9796>       LEA $C(A1),A1
000255CA <AmiBlitz3.ab2@9797> BRA.w JL_0_7274
000255CC <AmiBlitz3.ab2@9800>     MOVE.l A1,(A3)
000255CE <AmiBlitz3.ab2@9801>     MOVEA.l A1,A3
000255D0 <AmiBlitz3.ab2@9802>     ADDQ.w #4,A1
000255D2 <AmiBlitz3.ab2@9803>     MOVE.w D7,(A1)+
000255D4 <AmiBlitz3.ab2@9806>       TST.b (A1)+
000255D8 <AmiBlitz3.ab2@9807>     BNE.w JL_0_7298
000255DA <AmiBlitz3.ab2@9810>       TST.b (A1)+
000255DE <AmiBlitz3.ab2@9811>     BNE.w JL_0_729E
000255E2 <AmiBlitz3.ab2@9813>     BSR.w aligna1
000255E4 <AmiBlitz3.ab2@9814>     ADDQ.w #1,D7
000255E8 <AmiBlitz3.ab2@9815> BRA.w JL_0_7230
000255EC <AmiBlitz3.ab2@9818>     TST.w $4(A2)
000255F0 <AmiBlitz3.ab2@9819>      BMI.w JL_0_72BA
000255F4 <AmiBlitz3.ab2@9820>     MOVE.w D7,$10(A2)
000255F6 <AmiBlitz3.ab2@9823>     ADDQ.w #2,A1
000255F8 <AmiBlitz3.ab2@9824>     TST.l (A1)+
000255FC <AmiBlitz3.ab2@9825>      BEQ.w JL_0_72CC
00025602 <AmiBlitz3.ab2@9826>     ADDQ.w #1,number_of_objects
00025606 <AmiBlitz3.ab2@9827>     LEA $16(A1),A1
00025608 <AmiBlitz3.ab2@9830>     SUBA.l A2,A1
0002560C <AmiBlitz3.ab2@9831>     MOVE.l A1,$12(A2)
0002560E <AmiBlitz3.ab2@9832>     MOVEA.l (A2),A2
00025612 <AmiBlitz3.ab2@9833> BRA.w JL_0_720E
00025614 <AmiBlitz3.ab2@9836>   CLR.l (A3)
0002561A <AmiBlitz3.ab2@9837>   MOVE.l A7,errstack
00025624 <AmiBlitz3.ab2@9838>   MOVE.l #AL_0_730E,errcont
0002562C <AmiBlitz3.ab2@9839>   MOVE.w #$FFFF,ezerr
00025630 <AmiBlitz3.ab2@9840>   MOVE.w #$FFFA,D1
00025634 <AmiBlitz3.ab2@9841>    BSR.w JL_0_6F38
0002563A <AmiBlitz3.ab2@9842>   MOVE.l A1,tempvm
0002563E <AmiBlitz3.ab2@9843>   MOVE.w #$FDA7,D1
00025642 <AmiBlitz3.ab2@9844>    BSR.w JL_0_6F38
00025648 <AmiBlitz3.ab2@9845>   MOVE.l A1,ffplib
0002564A <AmiBlitz3.ab2@9848> RTS
0002564E <AmiBlitz3.ab2@9851> ffplib:  Ds.l 1
00025650 <AmiBlitz3.ab2@9855>     TST.w (A1)+
00025654 <AmiBlitz3.ab2@9856>     BEQ.w JL_0_7320
00025656 <AmiBlitz3.ab2@9857>     ADDQ.w #2,A1
0002565A <AmiBlitz3.ab2@9858> BRA.w skiplibreg
0002565C <AmiBlitz3.ab2@9861> RTS
0002565E <AmiBlitz3.ab2@9865>   EXG.l A1,A0
00025662 <AmiBlitz3.ab2@9866>   BSR.w aligna1
00025664 <AmiBlitz3.ab2@9867>   EXG.l A1,A0
00025666 <AmiBlitz3.ab2@9868> RTS
00025668 <AmiBlitz3.ab2@9871>   EXG.l D0,A1
0002566A <AmiBlitz3.ab2@9872>   ADDQ.l #1,D0
0002566E <AmiBlitz3.ab2@9873>   BCLR #$0,D0
00025670 <AmiBlitz3.ab2@9874>   EXG.l D0,A1
00025672 <AmiBlitz3.ab2@9875> RTS
00025678 <AmiBlitz3.ab2@9879>   MOVEA.l _execbase,A6
0002567E <AmiBlitz3.ab2@9880>   MOVEA.l ptr_userlibs,A2
00025680 <AmiBlitz3.ab2@9881>   MOVE.l (A2),D0
00025682 <AmiBlitz3.ab2@9882>   CLR.l (A2)
00025684 <AmiBlitz3.ab2@9883>   MOVEA.l D0,A2
00025688 <AmiBlitz3.ab2@9886>     CMPA.w #$0,A2
0002568C <AmiBlitz3.ab2@9887>     BEQ.w free_userlib
00025690 <AmiBlitz3.ab2@9889>     MOVE.l $20(A2),D0
00025694 <AmiBlitz3.ab2@9890>     BEQ.b JL_0_7360
00025696 <AmiBlitz3.ab2@9891>       LSL.l #2,D0
0002569C <AmiBlitz3.ab2@9892>       MOVE.l mempool,a0
000256A0 <AmiBlitz3.ab2@9893>       MOVEA.l $24(A2),A1
000256A4 <AmiBlitz3.ab2@9894>       JSR _FreePooled(A6)
000256A6 <AmiBlitz3.ab2@9897>     MOVEA.l A2,A1
000256AA <AmiBlitz3.ab2@9898>     MOVE.l $6(A1),D0
000256B0 <AmiBlitz3.ab2@9899>     MOVE.l mempool,a0
000256B2 <AmiBlitz3.ab2@9900>     MOVEA.l (A2),A2
000256B8 <AmiBlitz3.ab2@9901>     MOVEA.l _execbase,A6
000256BC <AmiBlitz3.ab2@9902>     JSR _FreePooled(A6)
000256C0 <AmiBlitz3.ab2@9903> BRA.w JL_0_7348
000256C4 <AmiBlitz3.ab2@9907>   BSR.w free_userlibs
000256CA <AmiBlitz3.ab2@9908>   MOVEA.l _execbase,A6
000256D0 <AmiBlitz3.ab2@9909>   CLR.l libpointer
000256D6 <AmiBlitz3.ab2@9910>   MOVEA.l end_of_tokenlist,A0
000256D8 <AmiBlitz3.ab2@9911>   CLR.l (A0)
000256DE <AmiBlitz3.ab2@9913>   MOVE.l size_acidlibs,D0
000256E2 <AmiBlitz3.ab2@9914>   BEQ.b JL_0_73A2
000256E8 <AmiBlitz3.ab2@9915>     MOVE.l ptr_acidlibs,D1
000256EC <AmiBlitz3.ab2@9916>     BEQ.b JL_0_73A2
000256F2 <AmiBlitz3.ab2@9917>       CLR.l ptr_acidlibs
000256F4 <AmiBlitz3.ab2@9918>       MOVEA.l D1,A1
000256FA <AmiBlitz3.ab2@9919>       MOVE.l mempool,a0
00025700 <AmiBlitz3.ab2@9920>       MOVEA.l _execbase,A6
00025704 <AmiBlitz3.ab2@9921>       JSR _FreePooled(A6)                                 ; free acidlibs
0002570A <AmiBlitz3.ab2@9924>   MOVE.l size_deflibs,D0
0002570E <AmiBlitz3.ab2@9925>   BEQ.b JL_0_73BE
00025714 <AmiBlitz3.ab2@9926>     MOVE.l ptr_deflibs,D1
00025718 <AmiBlitz3.ab2@9927>     BEQ.b JL_0_73BE
0002571E <AmiBlitz3.ab2@9928>       CLR.l ptr_deflibs                                    ; d0: memorySize
00025720 <AmiBlitz3.ab2@9929>       MOVEA.l D1,A1                                        ; a1: memory
00025726 <AmiBlitz3.ab2@9930>       MOVE.l mempool,a0                                    ; a0: poolHeader
0002572C <AmiBlitz3.ab2@9931>       MOVEA.l _execbase,A6
00025730 <AmiBlitz3.ab2@9932>       JSR _FreePooled(A6)                                  ; free deflibs
00025732 <AmiBlitz3.ab2@9935> RTS
00025738 <AmiBlitz3.ab2@9939>   MOVEA.l currentmacroaddr,A0
0002573A <AmiBlitz3.ab2@9940>   MOVEA.l (A0),A2
0002573C <AmiBlitz3.ab2@9941>   CLR.l (A0)
00025742 <AmiBlitz3.ab2@9942>   MOVEA.l _execbase,A6
00025746 <AmiBlitz3.ab2@9945>     CMPA.w #$0,A2
0002574A <AmiBlitz3.ab2@9946>     BEQ.w JL_0_73FA
0002574C <AmiBlitz3.ab2@9947>     MOVEQ.l #$00,D0
00025750 <AmiBlitz3.ab2@9948>     MOVE.w $8(A2),D0
00025754 <AmiBlitz3.ab2@9949>     BEQ.w JL_0_73E8
00025758 <AmiBlitz3.ab2@9950>     MOVEA.l $4(A2),A1
0002575E <AmiBlitz3.ab2@9951>     MOVE.l mempool,a0
00025762 <AmiBlitz3.ab2@9952>     JSR _FreePooled(A6)
00025764 <AmiBlitz3.ab2@9955>     MOVEA.l A2,A1
00025766 <AmiBlitz3.ab2@9956>     MOVEA.l (A2),A2
00025768 <AmiBlitz3.ab2@9957>     MOVEQ.l #$00,D0
0002576C <AmiBlitz3.ab2@9958>     MOVE.b $C(A1),D0
00025772 <AmiBlitz3.ab2@9959>     MOVE.l mempool2,a0
00025776 <AmiBlitz3.ab2@9960>     JSR _FreePooled(A6)
0002577A <AmiBlitz3.ab2@9961> BRA.w JL_0_73CE
0002577C <AmiBlitz3.ab2@9964> RTS
00025782 <AmiBlitz3.ab2@9968>   MOVEA.l templabel,A2
00025788 <AmiBlitz3.ab2@9969>   CLR.l templabel
0002578A <AmiBlitz3.ab2@9970> RTS
00025790 <AmiBlitz3.ab2@9973>   MOVEA.l _execbase,A6                                     ;??looks like dead code?
00025794 <AmiBlitz3.ab2@9976>     CMPA.w #$0,A2
00025798 <AmiBlitz3.ab2@9977>     BEQ.w JL_0_7426
0002579A <AmiBlitz3.ab2@9978>     MOVEQ.l #$00,D0
0002579E <AmiBlitz3.ab2@9979>     MOVE.b $E(A2),D0                                       ;labeltemp
000257A0 <AmiBlitz3.ab2@9980>     MOVEA.l A2,A1
000257A2 <AmiBlitz3.ab2@9981>     MOVEA.l (A2),A2
000257A8 <AmiBlitz3.ab2@9982>     MOVE.l mempool2,a0
000257AC <AmiBlitz3.ab2@9984> BRA.w JL_0_740C
000257AE <AmiBlitz3.ab2@9987> RTS
000257B4 <AmiBlitz3.ab2@9991>   MOVEA.l data1,A4
000257BA <AmiBlitz3.ab2@9992>   CMPA.l data2at,A4
000257BE <AmiBlitz3.ab2@9993>   BCC.w JL_0_7442
000257C0 <AmiBlitz3.ab2@9994>     MOVE.b D1,(A4)+
000257C6 <AmiBlitz3.ab2@9995>     MOVE.l A4,data1
000257C8 <AmiBlitz3.ab2@9996> RTS
000257D0 <AmiBlitz3.ab2@9999>   MOVE.w #$FFFF,dontwrite                                  ;move #-1, org source
000257D6 <AmiBlitz3.ab2@10000>   ADDQ.l #1,data1
000257D8 <AmiBlitz3.ab2@10001> RTS
000257DA <AmiBlitz3.ab2@10005>   SWAP D1
000257DE <AmiBlitz3.ab2@10006>   BSR.w pokedata1
000257E0 <AmiBlitz3.ab2@10007>   SWAP D1
000257E6 <AmiBlitz3.ab2@10010>   MOVEA.l data1,A4
000257EC <AmiBlitz3.ab2@10011>   CMPA.l data2at,A4
000257F0 <AmiBlitz3.ab2@10012>    BCC.w JL_0_7474
000257F2 <AmiBlitz3.ab2@10013>   MOVE.w D1,(A4)+
000257F8 <AmiBlitz3.ab2@10014>   MOVE.l A4,data1
000257FA <AmiBlitz3.ab2@10015> RTS
00025802 <AmiBlitz3.ab2@10018>   MOVE.w #$FFFF,dontwrite
00025808 <AmiBlitz3.ab2@10019>   ADDQ.l #2,data1
0002580A <AmiBlitz3.ab2@10020> RTS
00025810 <AmiBlitz3.ab2@10024>   MOVE.l data1,D3                                      ;write local string/type allocs
00025812 <AmiBlitz3.ab2@10025>   MOVEQ.l #$00,D4
00025816 <AmiBlitz3.ab2@10028>   CMPA.w #$0,A2
0002581A <AmiBlitz3.ab2@10029>    BEQ.w JL_0_74CAc
0002581E <AmiBlitz3.ab2@10030>   TST.w $6(A2)
00025822 <AmiBlitz3.ab2@10031>    BNE.w JL_0_74C4c
00025826 <AmiBlitz3.ab2@10032>   MOVEA.l $A(A2),A3
0002582E <AmiBlitz3.ab2@10033>   CMPI.l #$100,$4(A3)
00025832 <AmiBlitz3.ab2@10034>    BCS.w JL_0_74C4c
00025836 <AmiBlitz3.ab2@10035>   MOVE.w $4(A2),D1
0002583A <AmiBlitz3.ab2@10036>    BSR.w pokedata1
0002583E <AmiBlitz3.ab2@10037>   MOVE.w $8(A3),D1
00025842 <AmiBlitz3.ab2@10038>    BSR.w pokedata1
00025844 <AmiBlitz3.ab2@10039>   ADDQ.w #1,D4
00025846 <AmiBlitz3.ab2@10042>    MOVEA.l (A2),A2
0002584A <AmiBlitz3.ab2@10043> BRA.w JL_0_7492c
0002584C <AmiBlitz3.ab2@10046>    TST.w D4
00025850 <AmiBlitz3.ab2@10047>    BEQ.w JL_0_74E0
00025854 <AmiBlitz3.ab2@10048>   MOVE.w #$FF37,D1
00025858 <AmiBlitz3.ab2@10049>    BSR.w uselib
0002585C <AmiBlitz3.ab2@10050>   MOVE.w #$FFFA,D1
00025860 <AmiBlitz3.ab2@10051> BRA.w uselib
00025866 <AmiBlitz3.ab2@10059>   MOVEA.l varbase,A2                                       ;add alloc mem for types/strings global
0002586C <AmiBlitz3.ab2@10062>   MOVE.l data1,D3
0002586E <AmiBlitz3.ab2@10063>   MOVEQ.l #$00,D4
00025874 <AmiBlitz3.ab2@10064>   TST.b iserror
00025878 <AmiBlitz3.ab2@10065>   BEQ JL_0_7492
0002587A <AmiBlitz3.ab2@10066>   RTS
0002587E <AmiBlitz3.ab2@10068>    CMPA.w #$0,A2
00025882 <AmiBlitz3.ab2@10069>    BEQ.w JL_0_74CA
00025886 <AmiBlitz3.ab2@10070>   TST.w $6(A2)
0002588A <AmiBlitz3.ab2@10071>    BNE.w JL_0_74C4
0002588E <AmiBlitz3.ab2@10072>   MOVEA.l $A(A2),A3
00025896 <AmiBlitz3.ab2@10073>   CMPI.l #$100,$4(A3)
0002589A <AmiBlitz3.ab2@10074>    BCS.w JL_0_74C4
0002589E <AmiBlitz3.ab2@10075>   MOVE.w $4(A2),D1
000258A2 <AmiBlitz3.ab2@10076>    BSR.w pokedata1
000258A6 <AmiBlitz3.ab2@10077>   MOVE.w $8(A3),D1
000258AA <AmiBlitz3.ab2@10078>    BSR.w pokedata1
000258AC <AmiBlitz3.ab2@10079>   ADDQ.w #1,D4
000258AE <AmiBlitz3.ab2@10082>   MOVEA.l (A2),A2
000258B2 <AmiBlitz3.ab2@10083> BRA.w JL_0_7492
000258B8 <AmiBlitz3.ab2@10087>   MOVEA.l sharebase,A2
000258BC <AmiBlitz3.ab2@10090>   CMPA.w #$0,A2
000258C0 <AmiBlitz3.ab2@10091>    BEQ.w JL_0_74CAb
000258C4 <AmiBlitz3.ab2@10093>   TST.w $6(A2)
000258C8 <AmiBlitz3.ab2@10094>    BNE.w JL_0_74C4b
000258CC <AmiBlitz3.ab2@10095>   MOVEA.l $A(A2),A3
000258D4 <AmiBlitz3.ab2@10096>   CMPI.l #$100,$4(A3)
000258D8 <AmiBlitz3.ab2@10097>    BCS.w JL_0_74C4b
000258DC <AmiBlitz3.ab2@10098>   MOVE.w $4(A2),D1
000258E0 <AmiBlitz3.ab2@10099>    BSR.w pokedata1
000258E4 <AmiBlitz3.ab2@10100>   MOVE.w $8(A3),D1
000258E8 <AmiBlitz3.ab2@10101>    BSR.w pokedata1
000258EA <AmiBlitz3.ab2@10102>   ADDQ.w #1,D4
000258EC <AmiBlitz3.ab2@10105>   MOVEA.l (A2),A2
000258F0 <AmiBlitz3.ab2@10106> BRA.w JL_0_7492b
000258F2 <AmiBlitz3.ab2@10109>    TST.w D4
000258F6 <AmiBlitz3.ab2@10110>    BEQ.w JL_0_74E0
000258FA <AmiBlitz3.ab2@10111>   MOVE.w #$FF37,D1
000258FE <AmiBlitz3.ab2@10112>    BSR.w uselib                                            ;use statics lib
00025902 <AmiBlitz3.ab2@10113>   MOVE.w #$FFFA,D1                                         ;use memlib
00025906 <AmiBlitz3.ab2@10114> BRA.w uselib
00025908 <AmiBlitz3.ab2@10117> RTS
0002590E <AmiBlitz3.ab2@10121>   MOVE.w numtoa2,D1
00025912 <AmiBlitz3.ab2@10122>    BSR.w writeword
00025916 <AmiBlitz3.ab2@10123>    BSR.w addoff
00025918 <AmiBlitz3.ab2@10124>   MOVE.l D3,D1
0002591C <AmiBlitz3.ab2@10125>    BSR.w writelong
0002591E <AmiBlitz3.ab2@10126>   SUBQ.w #1,D4
00025924 <AmiBlitz3.ab2@10127>   MOVE.w D4,endarray+2
0002592A <AmiBlitz3.ab2@10128>   MOVE.l endarray,D1
0002592E <AmiBlitz3.ab2@10129> BRA.w writelong
00025930 <AmiBlitz3.ab2@10133>   MOVE.l D3,-(A7)
00025936 <AmiBlitz3.ab2@10136>   MOVEA.l _dosbase,A6
0002593A <AmiBlitz3.ab2@10137>   JSR _Write(a6)
0002593C <AmiBlitz3.ab2@10139>   CMP.l (A7)+,D0
00025940 <AmiBlitz3.ab2@10140>    BNE.w JL_0_7516
00025942 <AmiBlitz3.ab2@10141> RTS
00025944 <AmiBlitz3.ab2@10144>   MOVE.l D7,D1
0002594A <AmiBlitz3.ab2@10146>   MOVEA.l _dosbase,A6
0002594E <AmiBlitz3.ab2@10147>   JSR _Close(a6)
00025954 <AmiBlitz3.ab2@10150> JMP error_create_exe
0002595A <AmiBlitz3.ab2@10159>   MOVE.l A7,errstack
0002595E <AmiBlitz3.ab2@10160>   MOVEM.l d2-d7/a2-a6,-(a7)
00025968 <AmiBlitz3.ab2@10161>   MOVE.l #AL_0_7790,errcont
0002596E <AmiBlitz3.ab2@10162>    JSR call_setpointerbusy
00025976 <AmiBlitz3.ab2@10163>   MOVE.w #$FFFF,anyerrs
00025980 <AmiBlitz3.ab2@10164>   CMP.l #-1,chipstart
00025984 <AmiBlitz3.ab2@10165>   BEQ 'l01
0002598A <AmiBlitz3.ab2@10166>   MOVE.l chipend,d1
0002598C <AmiBlitz3.ab2@10167>   ADDQ.l #3,d1
00025992 <AmiBlitz3.ab2@10168>   AND.l #$fffffffc,d1                                      ;bug
00025998 <AmiBlitz3.ab2@10169>   MOVE.l d1,chipend
0002599A <AmiBlitz3.ab2@10170>   MOVE.l d1,a1
000259A0 <AmiBlitz3.ab2@10171>   MOVE.l chipstart,a0
000259A2 <AmiBlitz3.ab2@10172>   MOVE.l a1,d1
000259A4 <AmiBlitz3.ab2@10173>   SUB.l a0,d1
000259AA <AmiBlitz3.ab2@10174>   MOVE.l d1,chipsize
000259B4 <AmiBlitz3.ab2@10177>   CMP.l #-1,bssstart
000259B8 <AmiBlitz3.ab2@10178>   BEQ 'l11
000259BE <AmiBlitz3.ab2@10179>   MOVE.l realbssend,a1
000259C4 <AmiBlitz3.ab2@10180>   MOVE.l bssstart,a0
000259C6 <AmiBlitz3.ab2@10181>   MOVE.l a1,d1
000259C8 <AmiBlitz3.ab2@10182>   SUB.l a0,d1
000259CE <AmiBlitz3.ab2@10183>   MOVE.l d1,bsssize
000259D2 <AmiBlitz3.ab2@10184>   BEQ 'l11
000259D4 <AmiBlitz3.ab2@10187>   TST.b (a0)+
000259D8 <AmiBlitz3.ab2@10188>   BEQ 'l31
000259DE <AmiBlitz3.ab2@10189>   TST.b debugmode
000259E2 <AmiBlitz3.ab2@10190>   BEQ 'l1
000259E8 <AmiBlitz3.ab2@10191>   TST.b exdebug
000259EC <AmiBlitz3.ab2@10192>   BNE 'l31
000259F2 <AmiBlitz3.ab2@10195>   MOVE.l #nodata,-(a7)
000259F8 <AmiBlitz3.ab2@10196> JMP handle_compileerror
000259FA <AmiBlitz3.ab2@10199>   CMP.l a0,a1
000259FE <AmiBlitz3.ab2@10200>   BGT 'l32
00025A04 <AmiBlitz3.ab2@10201>   MOVE.l bssend,d1
00025A06 <AmiBlitz3.ab2@10202>   ADDQ.l #3,d1
00025A0C <AmiBlitz3.ab2@10203>   AND.l #$fffffffc,d1                                      ;bug
00025A12 <AmiBlitz3.ab2@10204>   MOVE.l d1,bssend
00025A14 <AmiBlitz3.ab2@10205>   MOVE.l d1,a1
00025A1A <AmiBlitz3.ab2@10206>   MOVE.l bssstart,a0
00025A1C <AmiBlitz3.ab2@10207>   MOVE.l a1,d1
00025A1E <AmiBlitz3.ab2@10208>   SUB.l a0,d1
00025A24 <AmiBlitz3.ab2@10209>   MOVE.l d1,bsssize
00025A28 <AmiBlitz3.ab2@10212>   MOVEM.l d5-d7/d3,-(a7)
00025A2E <AmiBlitz3.ab2@10213>   MOVE.w dontwrite,D1
00025A32 <AmiBlitz3.ab2@10214>   BNE.w JL_0_757C
00025A38 <AmiBlitz3.ab2@10215>   MOVE.l chipsize,d5
00025A3E <AmiBlitz3.ab2@10216>   MOVE.l bsssize,d3
00025A44 <AmiBlitz3.ab2@10217>   MOVE.l chipstart,d7
00025A4A <AmiBlitz3.ab2@10218>   MOVE.l bssstart,d6
00025A50 <AmiBlitz3.ab2@10219>   MOVEA.l hunkoffsetbase,A2
00025A56 <AmiBlitz3.ab2@10220>   MOVEA.l destbufferstart,A1
00025A58 <AmiBlitz3.ab2@10221>   MOVE.l A1,D2
00025A5E <AmiBlitz3.ab2@10222>   ADD.l noinits,D2
00025A64 <AmiBlitz3.ab2@10223>   CLR.l hunkoffsetnum
00025A68 <AmiBlitz3.ab2@10226>   CMPA.w #$0,A2
00025A6C <AmiBlitz3.ab2@10227>    BEQ.w JL_0_757C
00025A70 <AmiBlitz3.ab2@10228>   MOVE.l $4(A2),D0
00025A74 <AmiBlitz3.ab2@10229>    LEA $0(a1,d0.l),a0
00025A76 <AmiBlitz3.ab2@10230>    MOVE.l (a0),d1
00025A78 <AmiBlitz3.ab2@10231>   TST.l d1
00025A7C <AmiBlitz3.ab2@10232>    BMI.w 'lm1
00025A84 <AmiBlitz3.ab2@10233>   MOVE.b #0,newhunk
00025A8E <AmiBlitz3.ab2@10234>   CMP.l #-1,chipstart
00025A92 <AmiBlitz3.ab2@10235>   BEQ 'l10
00025A98 <AmiBlitz3.ab2@10236>   CMP.l chipstart,d1
00025A9C <AmiBlitz3.ab2@10237>   BLT 'l10
00025AA4 <AmiBlitz3.ab2@10238>   MOVE.b #1,newhunk
00025AAA <AmiBlitz3.ab2@10239>   CMP.l chipend,d1
00025AAE <AmiBlitz3.ab2@10240>   BGE 'l110
00025AB0 <AmiBlitz3.ab2@10241>   SUB.l d7,(a0)
00025AB8 <AmiBlitz3.ab2@10242>   ADD.l #$80000000,4(a2)
00025ABC <AmiBlitz3.ab2@10243> BRA JL_0_7576
00025AC0 <AmiBlitz3.ab2@10246>   SUB.l d5,0(a0)
00025ACA <AmiBlitz3.ab2@10249>   CMP.l #-1,bssstart
00025ACE <AmiBlitz3.ab2@10250>     BEQ 'l11
00025AD4 <AmiBlitz3.ab2@10251>   CMP.l bssstart,d1
00025AD8 <AmiBlitz3.ab2@10252>   BLT 'l11
00025ADE <AmiBlitz3.ab2@10253>   CMP.l bssend,d1
00025AE2 <AmiBlitz3.ab2@10254>   BGE 'l111
00025AE8 <AmiBlitz3.ab2@10255>   TST.b newhunk
00025AEC <AmiBlitz3.ab2@10256>   BEQ 'ln1
00025AEE <AmiBlitz3.ab2@10257>   ADD.l d5,(a0)
00025AF0 <AmiBlitz3.ab2@10260>   SUB.l d6,(a0)
00025AF8 <AmiBlitz3.ab2@10261>   ADD.l #$40000000,4(a2)
00025AFC <AmiBlitz3.ab2@10262> BRA JL_0_7576
00025B00 <AmiBlitz3.ab2@10265>   SUB.l d3,0(a0)
00025B02 <AmiBlitz3.ab2@10268>   SUB.l D2,(A0)
00025B08 <AmiBlitz3.ab2@10271>   ADDQ.l #1,hunkoffsetnum
00025B0A <AmiBlitz3.ab2@10274>    MOVEA.l (A2),A2
00025B0E <AmiBlitz3.ab2@10275> BRA.w JL_0_755E
00025B12 <AmiBlitz3.ab2@10279>   MOVEM.l (a7)+,d5-d7/d3
00025B18 <AmiBlitz3.ab2@10280>   MOVE.l ptr_newexefilename,D1
00025B1E <AmiBlitz3.ab2@10281>   MOVE.l #HUNK_RELOC_8__MODE_NEWFILE,D2
00025B24 <AmiBlitz3.ab2@10282>   MOVEA.l _dosbase,A6
00025B28 <AmiBlitz3.ab2@10283>    JSR _Open(A6)
00025B2A <AmiBlitz3.ab2@10284>   MOVE.l D0,D7
00025B2E <AmiBlitz3.ab2@10285>    BEQ.w execerr
00025B34 <AmiBlitz3.ab2@10286>   MOVE.l objlen,D0
00025B3A <AmiBlitz3.ab2@10287>   SUB.l #moremem,d0
00025B40 <AmiBlitz3.ab2@10288>   SUB.l noinits,D0
00025B4A <AmiBlitz3.ab2@10289>   CMP.l #-1,bssstart
00025B4E <AmiBlitz3.ab2@10290>   BEQ 'l60
00025B54 <AmiBlitz3.ab2@10291>   SUB.l bsssize,d0
00025B5A <AmiBlitz3.ab2@10292>   SUB.l chipsize,d0
00025B5E <AmiBlitz3.ab2@10293> BRA.s 'l61
00025B68 <AmiBlitz3.ab2@10296>   CMP.l #-1,chipstart
00025B6C <AmiBlitz3.ab2@10297>   BEQ 'l61
00025B72 <AmiBlitz3.ab2@10298>   SUB.l bsssize,d0
00025B78 <AmiBlitz3.ab2@10299>   SUB.l chipsize,d0
00025B7A <AmiBlitz3.ab2@10302>   ADDQ.l #3,D0
00025B7C <AmiBlitz3.ab2@10303>   LSR.l #2,D0
00025B82 <AmiBlitz3.ab2@10304>   MOVE.l D0,tstsize1
00025B88 <AmiBlitz3.ab2@10305>   MOVE.l D0,tstsize2
00025B8A <AmiBlitz3.ab2@10306>   MOVE.l D7,D1
00025B90 <AmiBlitz3.ab2@10307>   MOVE.l #tsthead,D2                                      ;hunkbegin
00025B92 <AmiBlitz3.ab2@10308>   MOVEQ.l #$20,D3
00025B9C <AmiBlitz3.ab2@10309>   CMP.l #-1,bssstart
00025BA0 <AmiBlitz3.ab2@10310>   BEQ 'lb1
00025BAA <AmiBlitz3.ab2@10311>   CMP.l #-1,chipstart
00025BAE <AmiBlitz3.ab2@10312>   BEQ 'lb1
00025BB8 <AmiBlitz3.ab2@10313>   MOVE.l #1,bssnum
00025BC2 <AmiBlitz3.ab2@10314>   MOVE.l #2,chipnum
00025BC4 <AmiBlitz3.ab2@10315>   MOVEQ.l #$28,D3
00025BCA <AmiBlitz3.ab2@10316>   MOVE.l bsssize,d2
00025BCC <AmiBlitz3.ab2@10317>   ADDQ.l #3,d2
00025BCE <AmiBlitz3.ab2@10318>   ASR.l #2,d2
00025BD4 <AmiBlitz3.ab2@10319>   MOVE.l d2,hunkend+8
00025BDA <AmiBlitz3.ab2@10320>   MOVE.l d2,bsssize3
00025BE0 <AmiBlitz3.ab2@10321>   MOVE.l chipsize,d2
00025BE2 <AmiBlitz3.ab2@10322>   ADDQ.l #3,d2
00025BE4 <AmiBlitz3.ab2@10323>   ASR.l #2,d2
00025BEA <AmiBlitz3.ab2@10324>   MOVE.l d2,chipsize2
00025BF4 <AmiBlitz3.ab2@10325>   ADD.l #$40000000,chipsize2
00025BFA <AmiBlitz3.ab2@10326>   MOVE.l d2,hunkend2+8
00025C00 <AmiBlitz3.ab2@10327>   MOVE.l D0,tstsize1c
00025C06 <AmiBlitz3.ab2@10328>   MOVE.l D0,tstsize2c
00025C0C <AmiBlitz3.ab2@10329>   MOVE.l #hunkbegin2,d2
00025C10 <AmiBlitz3.ab2@10330> BRA 'l100
00025C1A <AmiBlitz3.ab2@10333>   CMP.l #-1,bssstart
00025C1E <AmiBlitz3.ab2@10334>   BEQ 'l10
00025C28 <AmiBlitz3.ab2@10335>   MOVE.l #1,bssnum
00025C2A <AmiBlitz3.ab2@10336>   MOVEQ.l #$24,D3
00025C30 <AmiBlitz3.ab2@10337>   MOVE.l bsssize,d2
00025C32 <AmiBlitz3.ab2@10338>   ADDQ.l #3,d2
00025C34 <AmiBlitz3.ab2@10339>   ASR.l #2,d2
00025C3A <AmiBlitz3.ab2@10340>   MOVE.l d2,hunkend+8
00025C40 <AmiBlitz3.ab2@10341>   MOVE.l d2,bsssize2
00025C46 <AmiBlitz3.ab2@10342>   MOVE.l D0,tstsize1b
00025C4C <AmiBlitz3.ab2@10343>   MOVE.l D0,tstsize2b
00025C52 <AmiBlitz3.ab2@10344>   MOVE.l #hunkbegin,d2
00025C5C <AmiBlitz3.ab2@10347>   CMP.l #-1,chipstart
00025C60 <AmiBlitz3.ab2@10348>   BEQ 'l100
00025C6A <AmiBlitz3.ab2@10349>   MOVE.l #1,chipnum
00025C6C <AmiBlitz3.ab2@10350>   MOVEQ.l #$24,D3
00025C72 <AmiBlitz3.ab2@10351>   MOVE.l chipsize,d2
00025C74 <AmiBlitz3.ab2@10352>   ADDQ.l #3,d2
00025C76 <AmiBlitz3.ab2@10353>   ASR.l #2,d2
00025C7C <AmiBlitz3.ab2@10354>   MOVE.l d2,hunkend2+8
00025C82 <AmiBlitz3.ab2@10355>   MOVE.l d2,bsssize2
00025C8C <AmiBlitz3.ab2@10356>   ADD.l #$40000000,bsssize2
00025C92 <AmiBlitz3.ab2@10357>   MOVE.l D0,tstsize1b
00025C98 <AmiBlitz3.ab2@10358>   MOVE.l D0,tstsize2b
00025C9E <AmiBlitz3.ab2@10359>   MOVE.l #hunkbegin,d2
00025CA2 <AmiBlitz3.ab2@10362>    BSR.w mywrite
00025CA8 <AmiBlitz3.ab2@10363>   MOVE.l destbufferstart,D2
00025CAE <AmiBlitz3.ab2@10364>   ADD.l noinits,D2
00025CB4 <AmiBlitz3.ab2@10365>   MOVE.l objlen,D3
00025CBA <AmiBlitz3.ab2@10366>   SUB.l #moremem,d3
00025CC0 <AmiBlitz3.ab2@10367>   SUB.l noinits,D3
00025CCA <AmiBlitz3.ab2@10368>   CMP.l #-1,bssstart
00025CCE <AmiBlitz3.ab2@10369>   BNE 'l40
00025CD8 <AmiBlitz3.ab2@10370>   CMP.l #-1,chipstart
00025CDC <AmiBlitz3.ab2@10371>   BNE 'l40
00025CE0 <AmiBlitz3.ab2@10372> BRA 'l41
00025CE6 <AmiBlitz3.ab2@10375>   MOVE.l codeend,d1
00025CE8 <AmiBlitz3.ab2@10376>     SUB.l d2,d1
00025CEA <AmiBlitz3.ab2@10377>     MOVE.l d1,d3
00025CF0 <AmiBlitz3.ab2@10378>   SUB.l bsssize,d3
00025CF6 <AmiBlitz3.ab2@10379>   SUB.l chipsize,d3
00025CF8 <AmiBlitz3.ab2@10380>   MOVE.l D7,D1
00025CFC <AmiBlitz3.ab2@10381>   BSR.w mywrite
00025D02 <AmiBlitz3.ab2@10382>   MOVE.l objlen,D3
00025D08 <AmiBlitz3.ab2@10383>   SUB.l #moremem,d3
00025D0E <AmiBlitz3.ab2@10384>   SUB.l noinits,D3
00025D10 <AmiBlitz3.ab2@10385>   MOVE.l d3,d1
00025D16 <AmiBlitz3.ab2@10386>   MOVE.l destbufferstart,D2
00025D1C <AmiBlitz3.ab2@10387>   ADD.l noinits,D2
00025D1E <AmiBlitz3.ab2@10388>   ADD.l d2,d1
00025D24 <AmiBlitz3.ab2@10389>   SUB.l codeend,d1
00025D26 <AmiBlitz3.ab2@10390>   MOVE.l d1,d3
00025D2C <AmiBlitz3.ab2@10391>   MOVE.l codeend,d2
00025D2E <AmiBlitz3.ab2@10394>   MOVE.l d2,d1
00025D30 <AmiBlitz3.ab2@10395>   ADD.l d3,d1
00025D32 <AmiBlitz3.ab2@10396>   ADDQ.l #3,D1
00025D38 <AmiBlitz3.ab2@10397>   ANDI.l #$FFFFFFFC,D1
00025D3A <AmiBlitz3.ab2@10398>   SUB.l d2,d1
00025D3C <AmiBlitz3.ab2@10399>   MOVE.l d1,d3
00025D3E <AmiBlitz3.ab2@10400>   MOVE.l D7,D1
00025D42 <AmiBlitz3.ab2@10401>    BSR.w mywrite
00025D4C <AmiBlitz3.ab2@10402>   MOVE.l hunkoffsetcounter,tstsize3
00025D50 <AmiBlitz3.ab2@10403>    BEQ.w JL_0_7646
00025D52 <AmiBlitz3.ab2@10404>   MOVE.l D7,D1
00025D58 <AmiBlitz3.ab2@10405>   MOVE.l #tstend,D2
00025D5A <AmiBlitz3.ab2@10406>   MOVEQ.l #$04,D3
00025D5E <AmiBlitz3.ab2@10407>    BSR.w mywrite
00025D64 <AmiBlitz3.ab2@10408>    MOVEA.l _execbase,A6
00025D6A <AmiBlitz3.ab2@10409>    MOVE.l hunkoffsetcounter,d0
00025D6C <AmiBlitz3.ab2@10410>    ASL.l #2,d0
00025D72 <AmiBlitz3.ab2@10411>    ADD.l #12,d0
00025D74 <AmiBlitz3.ab2@10412>    MOVEQ #0,d1
00025D78 <AmiBlitz3.ab2@10413>    JSR _AllocMem(a6)
00025D7A <AmiBlitz3.ab2@10414>    TST.l d0
00025D7E <AmiBlitz3.ab2@10415>    BEQ nomem
00025D84 <AmiBlitz3.ab2@10416>    MOVE.l noinits,D4
00025D86 <AmiBlitz3.ab2@10417>    MOVE.l d5,-(a7)
00025D88 <AmiBlitz3.ab2@10418>    MOVE.l d0,d5
00025D8A <AmiBlitz3.ab2@10419>    MOVE.l d0,a1
00025D90 <AmiBlitz3.ab2@10420>    MOVEA.l hunkoffsetbase,A2
00025D98 <AmiBlitz3.ab2@10421>    MOVE.b #0,newhunk
00025D9C <AmiBlitz3.ab2@10424>   CMPA.w #$0,A2
00025DA0 <AmiBlitz3.ab2@10425>    BEQ.w savehunk
00025DA6 <AmiBlitz3.ab2@10426>   MOVE.l destbufferstart,D2
00025DAC <AmiBlitz3.ab2@10427>   ADD.l noinits,D2
00025DB0 <AmiBlitz3.ab2@10428>   MOVE.l  $4(A2),d1
00025DB4 <AmiBlitz3.ab2@10429>   BTST #31,d1
00025DB8 <AmiBlitz3.ab2@10430>   BEQ 'lh1
00025DC0 <AmiBlitz3.ab2@10431>   MOVE.b #1,newhunk
00025DC4 <AmiBlitz3.ab2@10432> BRA 'lh3
00025DC8 <AmiBlitz3.ab2@10435>   BTST #30,d1
00025DCC <AmiBlitz3.ab2@10436>   BEQ 'lh2
00025DD4 <AmiBlitz3.ab2@10437>   MOVE.b #1,newhunk
00025DD8 <AmiBlitz3.ab2@10438> BRA 'lh3
00025DDA <AmiBlitz3.ab2@10441>   ADD.l d1,d2
00025DE0 <AmiBlitz3.ab2@10442>   CMP.l chipend,d2
00025DE4 <AmiBlitz3.ab2@10443>   BLT 'l100
00025DEA <AmiBlitz3.ab2@10444>   SUB.l chipsize,d1
00025DF0 <AmiBlitz3.ab2@10447>   CMP.l bssend,d2
00025DF4 <AmiBlitz3.ab2@10448>   BLT 'l101
00025DFA <AmiBlitz3.ab2@10449>   SUB.l bsssize,d1
00025DFC <AmiBlitz3.ab2@10452>   MOVE.l d1,(a1)
00025DFE <AmiBlitz3.ab2@10453>   SUB.l D4,(A1)+
00025E00 <AmiBlitz3.ab2@10456>   MOVEA.l (A2),A2
00025E04 <AmiBlitz3.ab2@10457> BRA.w menu_createresidentfile__oloopb
00025E06 <AmiBlitz3.ab2@10461>   MOVE.l D7,D1
00025E0C <AmiBlitz3.ab2@10462>   MOVEA.l _dosbase,A6
00025E16 <AmiBlitz3.ab2@10463>   MOVE.l hunkoffsetnum,tstsize3
00025E1A <AmiBlitz3.ab2@10464>   BEQ 'ln1
00025E20 <AmiBlitz3.ab2@10465>   MOVE.l #tstend+4,d2
00025E22 <AmiBlitz3.ab2@10466>     MOVEQ #8,d3
00025E26 <AmiBlitz3.ab2@10467>    JSR _Write(A6)
00025E28 <AmiBlitz3.ab2@10468>   MOVE.l d7,d1
00025E2E <AmiBlitz3.ab2@10469>   MOVE.l hunkoffsetnum,d3
00025E30 <AmiBlitz3.ab2@10470>   ASL.l #2,d3
00025E32 <AmiBlitz3.ab2@10471>   MOVE.l d5,D2
00025E36 <AmiBlitz3.ab2@10472>   JSR _Write(a6)
00025E3C <AmiBlitz3.ab2@10475>   TST.b newhunk
00025E40 <AmiBlitz3.ab2@10476>   BEQ 'l10
00025E46 <AmiBlitz3.ab2@10477>   MOVEA.l hunkoffsetbase,A2
00025E48 <AmiBlitz3.ab2@10478>   MOVE.l d5,a0
00025E4A <AmiBlitz3.ab2@10479>   ADDQ #8,a0
00025E52 <AmiBlitz3.ab2@10480>   MOVE.l bssnum,-4(a0)
00025E54 <AmiBlitz3.ab2@10481>   MOVEQ #0,d6
00025E58 <AmiBlitz3.ab2@10484>   CMPA.w #$0,A2
00025E5C <AmiBlitz3.ab2@10485>    BEQ.w 'lh3
00025E62 <AmiBlitz3.ab2@10486>   MOVE.l destbufferstart,D2
00025E68 <AmiBlitz3.ab2@10487>   ADD.l noinits,D2
00025E6C <AmiBlitz3.ab2@10488>   MOVE.l  $4(A2),d1
00025E70 <AmiBlitz3.ab2@10489>   BTST #30,d1
00025E74 <AmiBlitz3.ab2@10490>   BEQ 'lh1
00025E78 <AmiBlitz3.ab2@10491>   BCLR #30,d1
00025E7A <AmiBlitz3.ab2@10492>   MOVE.l d1,(a0)
00025E7C <AmiBlitz3.ab2@10493>   SUB.l D4,(A0)+
00025E7E <AmiBlitz3.ab2@10494>   ADDQ.l #1,d6
00025E80 <AmiBlitz3.ab2@10497>   MOVE.l (a2),a2
00025E84 <AmiBlitz3.ab2@10498> BRA 'lh2
00025E86 <AmiBlitz3.ab2@10501>   TST.l d6
00025E8A <AmiBlitz3.ab2@10502>     BEQ 'lh10
00025E8C <AmiBlitz3.ab2@10503>     MOVE.l d5,a0
00025E8E <AmiBlitz3.ab2@10504>     MOVE.l d6,(a0)
00025E90 <AmiBlitz3.ab2@10505>     MOVE.l d7,d1
00025E92 <AmiBlitz3.ab2@10506>     MOVE.l d5,d2
00025E94 <AmiBlitz3.ab2@10507>     MOVE.l d6,d3
00025E96 <AmiBlitz3.ab2@10508>     ASL.l #2,d3
00025E98 <AmiBlitz3.ab2@10509>     ADDQ.l #8,d3
00025E9C <AmiBlitz3.ab2@10510>     BSR.w mywrite
00025EA2 <AmiBlitz3.ab2@10513>   MOVEA.l hunkoffsetbase,A2
00025EA4 <AmiBlitz3.ab2@10514>   MOVE.l d5,a0
00025EA6 <AmiBlitz3.ab2@10515>   ADDQ #8,a0
00025EAE <AmiBlitz3.ab2@10516>   MOVE.l chipnum,-4(a0)
00025EB0 <AmiBlitz3.ab2@10517>   MOVEQ #0,d6
00025EB4 <AmiBlitz3.ab2@10520>   CMPA.w #$0,A2
00025EB8 <AmiBlitz3.ab2@10521>    BEQ.w 'lh30
00025EBE <AmiBlitz3.ab2@10522>   MOVE.l destbufferstart,D2
00025EC4 <AmiBlitz3.ab2@10523>   ADD.l noinits,D2
00025EC8 <AmiBlitz3.ab2@10524>   MOVE.l  $4(A2),d1
00025ECC <AmiBlitz3.ab2@10525>   BTST #31,d1
00025ED0 <AmiBlitz3.ab2@10526>   BEQ 'lh11
00025ED4 <AmiBlitz3.ab2@10527>   BCLR #31,d1
00025ED6 <AmiBlitz3.ab2@10528>   MOVE.l d1,(a0)
00025ED8 <AmiBlitz3.ab2@10529>   SUB.l D4,(A0)+
00025EDA <AmiBlitz3.ab2@10530>   ADDQ.l #1,d6
00025EDC <AmiBlitz3.ab2@10533>   MOVE.l (a2),a2
00025EE0 <AmiBlitz3.ab2@10534> BRA 'lh20
00025EE2 <AmiBlitz3.ab2@10537>   TST.l d6
00025EE6 <AmiBlitz3.ab2@10538>     BEQ 'l10
00025EE8 <AmiBlitz3.ab2@10539>     MOVE.l d5,a0
00025EEA <AmiBlitz3.ab2@10540>     MOVE.l d6,(a0)
00025EEC <AmiBlitz3.ab2@10541>     MOVE.l d7,d1
00025EEE <AmiBlitz3.ab2@10542>     MOVE.l d5,d2
00025EF0 <AmiBlitz3.ab2@10543>     MOVE.l d6,d3
00025EF2 <AmiBlitz3.ab2@10544>     ASL.l #2,d3
00025EF4 <AmiBlitz3.ab2@10545>     ADDQ.l #8,d3
00025EF8 <AmiBlitz3.ab2@10546>     BSR.w mywrite
00025EFE <AmiBlitz3.ab2@10550>    MOVEA.l _execbase,A6
00025F04 <AmiBlitz3.ab2@10551>    MOVE.l hunkoffsetcounter,d0
00025F06 <AmiBlitz3.ab2@10552>    ASL.l #2,d0
00025F0C <AmiBlitz3.ab2@10553>    ADD.l #12,d0
00025F0E <AmiBlitz3.ab2@10554>    MOVE.l d5,a1
00025F12 <AmiBlitz3.ab2@10555>    JSR _FreeMem(a6)
00025F18 <AmiBlitz3.ab2@10556>    MOVEA.l _dosbase,A6
00025F1A <AmiBlitz3.ab2@10557>    MOVE.l (a7)+,d5
00025F1E <AmiBlitz3.ab2@10558> BRA JL_0_7632
00025F24 <AmiBlitz3.ab2@10562>   MOVEA.l hunkoffsetbase,A2
00025F2A <AmiBlitz3.ab2@10563>   MOVE.l noinits,D4
00025F2E <AmiBlitz3.ab2@10566>   CMPA.w #$0,A2                                            ;write hunkoffsets
00025F32 <AmiBlitz3.ab2@10567>   BEQ.w JL_0_7632
00025F36 <AmiBlitz3.ab2@10568>   LEA $4(A2),A1
00025F38 <AmiBlitz3.ab2@10569>   SUB.l D4,(A1)
00025F3A <AmiBlitz3.ab2@10570>   MOVE.l D7,D1
00025F3C <AmiBlitz3.ab2@10571>   MOVE.l A1,D2
00025F3E <AmiBlitz3.ab2@10572>   MOVEQ.l #$04,D3
00025F42 <AmiBlitz3.ab2@10573>   BSR.w mywrite
00025F46 <AmiBlitz3.ab2@10574>   ADD.l D4,$4(A2)
00025F48 <AmiBlitz3.ab2@10575>   MOVEA.l (A2),A2
00025F4C <AmiBlitz3.ab2@10576> BRA.w JL_0_7610
00025F52 <AmiBlitz3.ab2@10579>   CLR.l tstsize3
00025F54 <AmiBlitz3.ab2@10580>   MOVE.l D7,D1
00025F5A <AmiBlitz3.ab2@10581>   MOVE.l #tstsize3,D2
00025F5C <AmiBlitz3.ab2@10582>   MOVEQ.l #$04,D3
00025F60 <AmiBlitz3.ab2@10583>    BSR.w mywrite
00025F68 <AmiBlitz3.ab2@10586>   BTST #$7,link_debuginfo
00025F6C <AmiBlitz3.ab2@10587>    BEQ.w JL_0_7706
00025F72 <AmiBlitz3.ab2@10588>   MOVE.l #sysdebug,D2                                      ;debughunks
00025F74 <AmiBlitz3.ab2@10589>   MOVEQ.l #$04,D3
00025F76 <AmiBlitz3.ab2@10590>   MOVE.l D7,D1
00025F7A <AmiBlitz3.ab2@10591>    BSR.w mywrite
00025F80 <AmiBlitz3.ab2@10592>   MOVEA.l labelbase,A2
00025F84 <AmiBlitz3.ab2@10595>   CMPA.w #$0,A2
00025F88 <AmiBlitz3.ab2@10596>    BEQ.w JL_0_76F8
00025F8E <AmiBlitz3.ab2@10597>   BTST #$0,$7(A2)
00025F92 <AmiBlitz3.ab2@10598>    BEQ.w JL_0_7682
00025F9A <AmiBlitz3.ab2@10599>   CMPI.l #$1,$4(A2)
00025F9E <AmiBlitz3.ab2@10601>   BRA.w JL_0_76F2                                            ;only addr labels
00025FA0 <AmiBlitz3.ab2@10603>   MOVEQ.l #$00,D4
00025FA4 <AmiBlitz3.ab2@10604>   MOVE.b $12(A2),D4
00025FA8 <AmiBlitz3.ab2@10605>   SUBI.w #$13,D4
00025FAA <AmiBlitz3.ab2@10606>   ADDQ.w #2,D4
00025FAE <AmiBlitz3.ab2@10607>   ANDI.w #$FFFC,D4
00025FB0 <AmiBlitz3.ab2@10608>   MOVE.l D4,D5
00025FB2 <AmiBlitz3.ab2@10609>   LSR.w #2,D5
00025FB8 <AmiBlitz3.ab2@10610>   MOVE.l D5,temp1
00025FBA <AmiBlitz3.ab2@10611>   LSL.w #2,D5
00025FC0 <AmiBlitz3.ab2@10612>   MOVE.l #temp1,a1
00025FC6 <AmiBlitz3.ab2@10614>   LEA debugstore,a0
00025FC8 <AmiBlitz3.ab2@10615>   MOVE.l (a1),(a0)+
00025FCA <AmiBlitz3.ab2@10616>   MOVEQ.l #$04,D3
00025FCE <AmiBlitz3.ab2@10619>   LEA $13(A2),A1
00025FD0 <AmiBlitz3.ab2@10620>   MOVE.l d4,d1
00025FD2 <AmiBlitz3.ab2@10621>   SUBQ.l #1,d1
00025FD4 <AmiBlitz3.ab2@10624>     MOVE.b (a1)+,d0
00025FD8 <AmiBlitz3.ab2@10625>     BEQ 'l21
00025FDC <AmiBlitz3.ab2@10626>     CMP.b #"'",d0                                            ; ' does reassembler/assembler not like, so replace
00025FE0 <AmiBlitz3.ab2@10627>     BNE 'ok
00025FE4 <AmiBlitz3.ab2@10628>     MOVE.b #"_",d0
00025FE6 <AmiBlitz3.ab2@10629> 'ok    MOVE.b d0,(a0)+                                      ; copy labeltext to debuginfo
00025FEA <AmiBlitz3.ab2@10630>   DBF d1,'l10
00025FEE <AmiBlitz3.ab2@10632> BRA 'l22
00025FF0 <AmiBlitz3.ab2@10635>       CLR.b (a0)+
00025FF4 <AmiBlitz3.ab2@10636>   DBF d1,'l21
00025FF6 <AmiBlitz3.ab2@10639>   ADD.l d4,d3
00025FF8 <AmiBlitz3.ab2@10644>   SUB.l D4,D5
00025FFC <AmiBlitz3.ab2@10645>    BEQ.w JL_0_76CE
00026002 <AmiBlitz3.ab2@10646>   MOVE.l #zero,a1
00026004 <AmiBlitz3.ab2@10648>   MOVE.l (a1),(a0)+
00026006 <AmiBlitz3.ab2@10650>   ADD.l d5,d3
0002600A <AmiBlitz3.ab2@10655>   MOVE.l $8(A2),D2
00026010 <AmiBlitz3.ab2@10656>   SUB.l destbufferstart,D2
00026016 <AmiBlitz3.ab2@10657>   SUB.l noinits,D2
0002601C <AmiBlitz3.ab2@10658>   MOVE.l D2,temp1
00026022 <AmiBlitz3.ab2@10659>   MOVE.l #temp1,a1
00026024 <AmiBlitz3.ab2@10661>   MOVE.l (a1),(a0)+
0002602A <AmiBlitz3.ab2@10662>   ADD.l #4,d3
00026030 <AmiBlitz3.ab2@10663>   LEA debugstore,a0
00026032 <AmiBlitz3.ab2@10664>   MOVE.l a0,d2
00026034 <AmiBlitz3.ab2@10666>   MOVE.l D7,D1
00026038 <AmiBlitz3.ab2@10667>   BSR.w mywrite
0002603A <AmiBlitz3.ab2@10670>   MOVEA.l (A2),A2
0002603E <AmiBlitz3.ab2@10671> BRA.w JL_0_7664
00026044 <AmiBlitz3.ab2@10675>   MOVE.l #zero,D2
00026046 <AmiBlitz3.ab2@10676>   MOVEQ.l #$04,D3
00026048 <AmiBlitz3.ab2@10677>   MOVE.l D7,D1
0002604C <AmiBlitz3.ab2@10678>   BSR.w mywrite
0002604E <AmiBlitz3.ab2@10681>   MOVE.l D7,D1
00026054 <AmiBlitz3.ab2@10682>   MOVE.l #tstdone,D2                                      ;hunkend
00026056 <AmiBlitz3.ab2@10683>   MOVEQ.l #$04,D3
00026060 <AmiBlitz3.ab2@10684>   CMPI.l #-1,bssstart
00026064 <AmiBlitz3.ab2@10685>   BEQ 'l10
00026066 <AmiBlitz3.ab2@10686>   MOVEQ #16,d3
0002606C <AmiBlitz3.ab2@10687>   MOVE.l #hunkend,d2
00026076 <AmiBlitz3.ab2@10688>   CMPI.l #-1,chipstart
0002607A <AmiBlitz3.ab2@10689>   BEQ 'l10
0002607C <AmiBlitz3.ab2@10690>   MOVE.l d7,d1
0002607E <AmiBlitz3.ab2@10691>   MOVEQ #12,d3
00026082 <AmiBlitz3.ab2@10692>   BSR.w mywrite
0002608C <AmiBlitz3.ab2@10695>   CMPI.l #-1,chipstart
00026090 <AmiBlitz3.ab2@10696>   BEQ 'l11
00026092 <AmiBlitz3.ab2@10697>   MOVEQ #12,d3
00026098 <AmiBlitz3.ab2@10698>   MOVE.l #hunkend2,d2
0002609A <AmiBlitz3.ab2@10699>   MOVE.l d7,d1
0002609E <AmiBlitz3.ab2@10700>   BSR.w mywrite
000260A0 <AmiBlitz3.ab2@10701>   MOVE.l d7,d1
000260A6 <AmiBlitz3.ab2@10702>   MOVE.l chipstart,d2
000260AC <AmiBlitz3.ab2@10703>   MOVE.l chipsize,d3
000260B0 <AmiBlitz3.ab2@10704>   BSR.w mywrite
000260B2 <AmiBlitz3.ab2@10705>   MOVEQ #4,d3
000260B8 <AmiBlitz3.ab2@10706>   MOVE.l #hunkend,d2
000260BA <AmiBlitz3.ab2@10707>   MOVE.l d7,d1
000260BE <AmiBlitz3.ab2@10710>   BSR.w mywrite
000260C0 <AmiBlitz3.ab2@10711>   MOVE.l D7,D1
000260C6 <AmiBlitz3.ab2@10712>   MOVEA.l _dosbase,A6
000260CA <AmiBlitz3.ab2@10713>   JSR _Close(A6)
000260D2 <AmiBlitz3.ab2@10718>   BTST #$7,create_iconfile
000260D6 <AmiBlitz3.ab2@10719>    BEQ.w skip_createicon
000260DC <AmiBlitz3.ab2@10721>   MOVEA.l ptr_newexefilename,A0
000260DE <AmiBlitz3.ab2@10724>     TST.b (A0)+
000260E2 <AmiBlitz3.ab2@10725>   BNE.w JL_0_772C
000260E4 <AmiBlitz3.ab2@10726>   SUBQ.w #1,A0
000260E6 <AmiBlitz3.ab2@10727>   MOVE.l A0,-(A7)
000260EC <AmiBlitz3.ab2@10728>   LEA str_infoextention2,A1
000260EE <AmiBlitz3.ab2@10731>     MOVE.b (A1)+,(A0)+
000260F2 <AmiBlitz3.ab2@10732>   BNE.w JL_0_773A
000260F8 <AmiBlitz3.ab2@10734>   MOVE.l ptr_newexefilename,D1
000260FA <AmiBlitz3.ab2@10735>   MOVEQ.l #-$02,D2
00026100 <AmiBlitz3.ab2@10736>   MOVEA.l _dosbase,A6
00026104 <AmiBlitz3.ab2@10737>   JSR _Lock(A6)
00026106 <AmiBlitz3.ab2@10738>   MOVE.l D0,D1
0002610A <AmiBlitz3.ab2@10739>   BEQ.w JL_0_775A                                          ;no icon exit so jump to create one  tomsmart1
0002610E <AmiBlitz3.ab2@10740>   JSR _UnLock(A6)                                          ;OH!! there is a Icon so we must Unlock it  tomsmart1
00026112 <AmiBlitz3.ab2@10741> BRA.w JL_0_7788                                            ;and skip writing a Icon  tomsmart1
00026118 <AmiBlitz3.ab2@10744>   MOVE.l ptr_newexefilename,D1
0002611E <AmiBlitz3.ab2@10745>   MOVE.l #HUNK_RELOC_8__MODE_NEWFILE,D2
00026124 <AmiBlitz3.ab2@10746>   MOVEA.l _dosbase,A6
00026128 <AmiBlitz3.ab2@10747>    JSR _Open(A6)
0002612A <AmiBlitz3.ab2@10748>   MOVE.l D0,D7
0002612E <AmiBlitz3.ab2@10749>    BEQ.w JL_0_7788
00026134 <AmiBlitz3.ab2@10750>   MOVE.l #icongfx_data,D2                                  ; icon graphics
0002613A <AmiBlitz3.ab2@10751>   MOVE.l #icongfx_data_end-icongfx_data,D3                 ; length of gfx-data
0002613C <AmiBlitz3.ab2@10752>   MOVE.l D7,D1
00026142 <AmiBlitz3.ab2@10753>   MOVEA.l _dosbase,A6
00026146 <AmiBlitz3.ab2@10754>   JSR _Write(A6)
00026148 <AmiBlitz3.ab2@10755>   MOVE.l D7,D1
0002614C <AmiBlitz3.ab2@10756>   JSR _Close(A6)
0002614E <AmiBlitz3.ab2@10759>   MOVEA.l (A7)+,A0
00026150 <AmiBlitz3.ab2@10760>   CLR.b (A0)
00026156 <AmiBlitz3.ab2@10765>   TST.b exdebug
0002615A <AmiBlitz3.ab2@10766>    BEQ JL_0_757Cb
00026160 <AmiBlitz3.ab2@10767>   MOVE.w dontwrite,D1
00026164 <AmiBlitz3.ab2@10768>   BNE.w JL_0_757Cb
0002616A <AmiBlitz3.ab2@10769>   MOVE.l chipsize,d5
00026170 <AmiBlitz3.ab2@10770>   MOVE.l bsssize,d3
00026176 <AmiBlitz3.ab2@10771>   MOVE.l chipstart,d7
0002617C <AmiBlitz3.ab2@10772>   MOVE.l bssstart,d6
00026182 <AmiBlitz3.ab2@10773>   MOVEA.l hunkoffsetbase,A2
00026188 <AmiBlitz3.ab2@10774>   MOVEA.l destbufferstart,A1
0002618A <AmiBlitz3.ab2@10775>   MOVE.l A1,D2
00026190 <AmiBlitz3.ab2@10776>   ADD.l noinits,D2
00026196 <AmiBlitz3.ab2@10777>   CLR.l hunkoffsetnum
0002619A <AmiBlitz3.ab2@10780>   CMPA.w #$0,A2
0002619E <AmiBlitz3.ab2@10781>    BEQ.w JL_0_757Cb
000261A2 <AmiBlitz3.ab2@10782>   MOVE.l $4(A2),D0
000261A6 <AmiBlitz3.ab2@10783>    LEA $0(a1,d0.l),a0
000261A8 <AmiBlitz3.ab2@10784>    MOVE.l (a0),d1
000261AA <AmiBlitz3.ab2@10785>   TST.l d1
000261AE <AmiBlitz3.ab2@10786>    BMI.w 'lm1
000261B6 <AmiBlitz3.ab2@10787>   MOVE.b #0,newhunk
000261C0 <AmiBlitz3.ab2@10788>   CMP.l #-1,chipstart
000261C4 <AmiBlitz3.ab2@10789>   BEQ 'l10
000261CA <AmiBlitz3.ab2@10790>   CMP.l chipstart,d1
000261CE <AmiBlitz3.ab2@10791>   BLT 'l10
000261D6 <AmiBlitz3.ab2@10792>   MOVE.b #1,newhunk
000261DC <AmiBlitz3.ab2@10793>   CMP.l chipend,d1
000261E0 <AmiBlitz3.ab2@10794>   BGE 'l110
000261E2 <AmiBlitz3.ab2@10795>   ADD.l d7,(a0)
000261EA <AmiBlitz3.ab2@10796>   ADD.l #$80000000,4(a2)
000261EE <AmiBlitz3.ab2@10797> BRA JL_0_7576b
000261F2 <AmiBlitz3.ab2@10800>   ADD.l d5,0(a0)
000261FC <AmiBlitz3.ab2@10803>   CMP.l #-1,bssstart
00026200 <AmiBlitz3.ab2@10804>     BEQ 'l11
00026206 <AmiBlitz3.ab2@10805>   CMP.l bssstart,d1
0002620A <AmiBlitz3.ab2@10806>   BLT 'l11
00026210 <AmiBlitz3.ab2@10807>   CMP.l bssend,d1
00026214 <AmiBlitz3.ab2@10808>   BGE 'l111
0002621A <AmiBlitz3.ab2@10809>   TST.b newhunk
0002621E <AmiBlitz3.ab2@10810>   BEQ 'ln1
00026220 <AmiBlitz3.ab2@10811>   ADD.l d5,(a0)
00026222 <AmiBlitz3.ab2@10814>   ADD.l d6,(a0)
0002622A <AmiBlitz3.ab2@10815>   ADD.l #$40000000,4(a2)
0002622E <AmiBlitz3.ab2@10816> BRA JL_0_7576b
00026232 <AmiBlitz3.ab2@10819>   ADD.l d3,0(a0)
00026234 <AmiBlitz3.ab2@10822>   ADD.l D2,(A0)                                            ;only normal code offsets restore
0002623A <AmiBlitz3.ab2@10825>   ADDQ.l #1,hunkoffsetnum
0002623C <AmiBlitz3.ab2@10828>   MOVEA.l (A2),A2
00026240 <AmiBlitz3.ab2@10829> BRA.w JL_0_755Eb
00026246 <AmiBlitz3.ab2@10832>   JSR call_setpointernormal
0002624A <AmiBlitz3.ab2@10833>   MOVEM.l (a7)+,d2-d7/a2-a6
0002624C <AmiBlitz3.ab2@10835> RTS
0002624E <AmiBlitz3.ab2@10839>   MOVE.l D2,-(A7)
00026254 <AmiBlitz3.ab2@10840>   MOVE.l destpointer,D2
0002625A <AmiBlitz3.ab2@10841>   SUB.l destbufferstart,D2
0002625E <AmiBlitz3.ab2@10842>   BSR.w addhunkoffset
00026260 <AmiBlitz3.ab2@10843>   MOVE.l (A7)+,D2
00026262 <AmiBlitz3.ab2@10844> RTS
00026266 <AmiBlitz3.ab2@10848>   MOVEM.l D0-D1/A0-A1/A6,-(A7)
0002626C <AmiBlitz3.ab2@10849>   TST.b nohunkoffset
00026270 <AmiBlitz3.ab2@10850>   BNE 'l10
00026272 <AmiBlitz3.ab2@10851>   MOVEQ.l #$8,D0
00026274 <AmiBlitz3.ab2@10852>   MOVEQ.l #$01,D1
0002627A <AmiBlitz3.ab2@10853>   MOVEA.l _execbase,A6
00026280 <AmiBlitz3.ab2@10854>   MOVE.l mempool2,a0
00026284 <AmiBlitz3.ab2@10855>   JSR _AllocPooled(a6)
0002628A <AmiBlitz3.ab2@10857>   ADDQ.l #1,hunkoffsetcounter
0002628C <AmiBlitz3.ab2@10858>   MOVEA.l D0,A0
00026292 <AmiBlitz3.ab2@10859>   MOVE.l hunkoffsetbase,(A0)
00026298 <AmiBlitz3.ab2@10860>   MOVE.l A0,hunkoffsetbase
0002629C <AmiBlitz3.ab2@10861>   MOVE.l D2,$4(A0)
000262A0 <AmiBlitz3.ab2@10864>   MOVEM.l (A7)+,D0-D1/A0-A1/A6
000262A2 <AmiBlitz3.ab2@10865> RTS
000262A8 <AmiBlitz3.ab2@10869>   CLR.l hunkoffsetbase
000262AE <AmiBlitz3.ab2@10870>   MOVEA.l _execbase,A6
000262B4 <AmiBlitz3.ab2@10871>   MOVEA.l hunkoffsetbase,A2
000262B8 <AmiBlitz3.ab2@10874>     CMPA.w #$0,A2
000262BC <AmiBlitz3.ab2@10875>      BEQ.w JL_0_7988
000262BE <AmiBlitz3.ab2@10876>     MOVEA.l A2,A1
000262C0 <AmiBlitz3.ab2@10877>     MOVEQ.l #$08,D0
000262C2 <AmiBlitz3.ab2@10878>     MOVEA.l (A2),A2
000262C8 <AmiBlitz3.ab2@10879>     MOVE.l mempool2,a0
000262CC <AmiBlitz3.ab2@10880>     JSR _FreePooled(A6)
000262D0 <AmiBlitz3.ab2@10881> BRA.w JL_0_7972
000262D6 <AmiBlitz3.ab2@10884>   CLR.l hunkoffsetcounter
000262D8 <AmiBlitz3.ab2@10885> RTS
000262F0 <AmiBlitz3.ab2@10888> cmakebuff:  Ds.l 6                                          ;dc.w 12 org source
000262F4 <AmiBlitz3.ab2@10889> cmakea5:    Ds.l 1
000262F6 <AmiBlitz3.ab2@10890> cmake:      Ds.w 1
00026376 <AmiBlitz3.ab2@10891> cmakebak:   Ds.l 32                                         ;ds.b 128 org source
0002637C <AmiBlitz3.ab2@10895>   MOVE.l A5,lastsourcepos
00026386 <AmiBlitz3.ab2@10896>   MOVE.w instringon,oldqflag
00026388 <AmiBlitz3.ab2@10900>   MOVEQ.l #$00,D0
0002638A <AmiBlitz3.ab2@10901>   MOVE.b (A5)+,D0
0002638E <AmiBlitz3.ab2@10902>    BEQ getcharb__donea
00026392 <AmiBlitz3.ab2@10903>   BPL getcharb__stuffa
00026394 <AmiBlitz3.ab2@10904>   LSL.l #8,D0
00026396 <AmiBlitz3.ab2@10905>   MOVE.b (A5)+,D0
00026398 <AmiBlitz3.ab2@10906>   MOVE.l a1,-(a7)
0002639E <AmiBlitz3.ab2@10907>   LEA replacedat,a1
000263A2 <AmiBlitz3.ab2@10908>   Dc.w $4a71,$0a00                                         ;TST.w 0(a1,d0.l*2)
000263A6 <AmiBlitz3.ab2@10909>   BEQ getchar__l10
000263AA <AmiBlitz3.ab2@10910>   Dc.w $3031,$0a00                                         ;MOVE.w 0(a1,d0.l*2),d0
000263AC <AmiBlitz3.ab2@10914>   MOVE.l (a7)+,a1
000263B0 <AmiBlitz3.ab2@10915> BRA getchar__weiter
000263B4 <AmiBlitz3.ab2@10918>   CMP.w #$22,D0
000263B8 <AmiBlitz3.ab2@10919>    BEQ.b swapquotea
000263BC <AmiBlitz3.ab2@10920>   CMP.w #$3B,D0
000263C0 <AmiBlitz3.ab2@10921>    BNE.b getcharb__donea
000263C6 <AmiBlitz3.ab2@10922>   TST.w instringon
000263CA <AmiBlitz3.ab2@10923>    BNE.b getcharb__donea
000263CC <AmiBlitz3.ab2@10926>   MOVE.b (A5)+,D0
000263D0 <AmiBlitz3.ab2@10927>              BEQ getchar__l1
000263D4 <AmiBlitz3.ab2@10928>              CMP.b #":",d0
000263D8 <AmiBlitz3.ab2@10929>              BNE getcharb__loopa                                ;:@
000263DC <AmiBlitz3.ab2@10930>              CMP.b #"@",(a5)
000263E0 <AmiBlitz3.ab2@10931>              BNE getcharb__loopa
000263E2 <AmiBlitz3.ab2@10932>              ADDQ #1,a5
000263E8 <AmiBlitz3.ab2@10935>   MOVE.w D0,lastchar
000263EC <AmiBlitz3.ab2@10938> BRA.s getchar__weiter
000263F2 <AmiBlitz3.ab2@10941>   NOT.w instringon
000263F8 <AmiBlitz3.ab2@10944>    MOVE.w D0,lastchar
000263FC <AmiBlitz3.ab2@10945>    BEQ.w getchar__done
00026400 <AmiBlitz3.ab2@10946>    BPL.w getchar__done2
00026404 <AmiBlitz3.ab2@10947>   CMP.w #-$7FE4,D0                                         ;cnif
00026408 <AmiBlitz3.ab2@10948>    BEQ.w getchar__cnif
0002640C <AmiBlitz3.ab2@10949>   CMP.w #-$7FE3,D0                                         ;csif
00026410 <AmiBlitz3.ab2@10950>    BEQ.w getchar__csif
00026414 <AmiBlitz3.ab2@10951>   CMP.w #-$7FE2,D0                                         ;celse
00026418 <AmiBlitz3.ab2@10952>    BEQ.w getchar__celse
0002641C <AmiBlitz3.ab2@10953>   CMP.w #-$7FE1,D0                                         ;cend
00026420 <AmiBlitz3.ab2@10954>    BEQ.w getchar__cend
00026426 <AmiBlitz3.ab2@10957>   TST.w skipcode
0002642A <AmiBlitz3.ab2@10958>    BEQ.w getchar
0002642E <AmiBlitz3.ab2@10959>   CMP.w #$7E,D0
00026432 <AmiBlitz3.ab2@10960>    BEQ.w getchar__cmake                                         ;tilde
00026436 <AmiBlitz3.ab2@10961>   CMP.w #$2,D0
0002643A <AmiBlitz3.ab2@10962>    BNE.w getchar__notunpath
00026440 <AmiBlitz3.ab2@10963>   MOVEA.l usedfrom,A5
00026446 <AmiBlitz3.ab2@10964>   CLR.l usedfrom
0002644A <AmiBlitz3.ab2@10965> BRA.w getchar
0002644E <AmiBlitz3.ab2@10968>   CMP.w #$1,D0
00026452 <AmiBlitz3.ab2@10969>    BNE.w getchar__done
00026456 <AmiBlitz3.ab2@10973>   MOVEA.l cmakea5(PC),A5
0002645A <AmiBlitz3.ab2@10974> BRA.w getchar
00026460 <AmiBlitz3.ab2@10977>   TST.w cmake
00026464 <AmiBlitz3.ab2@10978>    BNE.w getchar__done
00026468 <AmiBlitz3.ab2@10980>   MOVEM.l D0-D7/A0-A6,-(A7)
0002646E <AmiBlitz3.ab2@10981>   LEA cmake,a0                                         ;reass
00026470 <AmiBlitz3.ab2@10982>   NOT.w (a0)
00026474 <AmiBlitz3.ab2@10983>   LEA cmakebak(PC),A0
0002647A <AmiBlitz3.ab2@10984>   LEA ptr_parameterstore,A1
0002647C <AmiBlitz3.ab2@10985>   MOVEQ.l #$1F,D0
0002647E <AmiBlitz3.ab2@10988>     MOVE.l (A1)+,(A0)+
00026482 <AmiBlitz3.ab2@10989>   DBF D0,getchar__cmloop
00026488 <AmiBlitz3.ab2@10992>    JSR AJL_0_BF6E
0002648C <AmiBlitz3.ab2@10993>   CMP.w #$7E,D0
00026490 <AmiBlitz3.ab2@10994>    BNE.w syntaxerr
00026496 <AmiBlitz3.ab2@10995>   MOVE.l A5,cmakea5                                      ;tilde
0002649A <AmiBlitz3.ab2@10996>   LEA cmakebuff(PC),A0
0002649C <AmiBlitz3.ab2@10997>   MOVE.l D3,D2
000264A0 <AmiBlitz3.ab2@10998>   BSR.w makelong
000264A2 <AmiBlitz3.ab2@10999>   ADDQ.b #1,(A0)
000264A8 <AmiBlitz3.ab2@11000>   LEA cmake,a0
000264AA <AmiBlitz3.ab2@11001>   NOT.w (a0)                                               ;reass
000264AE <AmiBlitz3.ab2@11002>   LEA cmakebak(PC),A0
000264B4 <AmiBlitz3.ab2@11003>   LEA ptr_parameterstore,A1
000264B6 <AmiBlitz3.ab2@11004>   MOVEQ.l #$1F,D0
000264B8 <AmiBlitz3.ab2@11007>     MOVE.l (A0)+,(A1)+
000264BC <AmiBlitz3.ab2@11008>   DBF D0,getchar__cmloop2
000264C0 <AmiBlitz3.ab2@11010>   MOVEM.l (A7)+,D0-D7/A0-A6
000264C4 <AmiBlitz3.ab2@11011>   LEA cmakebuff(PC),A5
000264C8 <AmiBlitz3.ab2@11012> BRA.w getchar
000264CA <AmiBlitz3.ab2@11015> RTS
000264D4 <AmiBlitz3.ab2@11019>   MOVE.l linenumat,ciflineat                               ;csif
000264DA <AmiBlitz3.ab2@11020>   TST.w skipcode
000264DE <AmiBlitz3.ab2@11021>    BEQ.w getchar__incnest
000264E2 <AmiBlitz3.ab2@11022>    BSR.w get1bytemain
000264E4 <AmiBlitz3.ab2@11023>    MOVE.l a1,-(a7)
000264EA <AmiBlitz3.ab2@11024>    JSR JL_0_C492
000264EC <AmiBlitz3.ab2@11025>    MOVE.l (a7)+,a1
000264F0 <AmiBlitz3.ab2@11026> BRA.w getchar
000264FA <AmiBlitz3.ab2@11029>   MOVE.l linenumat,ciflineat                               ;cnif
00026500 <AmiBlitz3.ab2@11030>   TST.w skipcode
00026504 <AmiBlitz3.ab2@11031>    BEQ.w getchar__incnest
00026508 <AmiBlitz3.ab2@11032>    BSR.w get1bytemain
0002650C <AmiBlitz3.ab2@11033>    CMP.b #"@",d0
00026510 <AmiBlitz3.ab2@11034>    BNE getchar__cnif_ok2
00026514 <AmiBlitz3.ab2@11035>    BSR.w get1bytemain
0002651C <AmiBlitz3.ab2@11036>    MOVE.b #1,incnif
00026522 <AmiBlitz3.ab2@11037>    JSR findconstant2
00026526 <AmiBlitz3.ab2@11038>    BEQ getchar__cnif_ok2
0002652C <AmiBlitz3.ab2@11041>    MOVE.w fast,-(a7)
00026532 <AmiBlitz3.ab2@11042>    CLR.b fast
00026534 <AmiBlitz3.ab2@11043>    MOVE.l a1,-(a7)
0002653A <AmiBlitz3.ab2@11044>    JSR JL_0_C47E
00026540 <AmiBlitz3.ab2@11045>    CLR.b incnif
00026542 <AmiBlitz3.ab2@11046>    MOVE.l (a7)+,a1
00026548 <AmiBlitz3.ab2@11047>    MOVE.w (a7)+,fast
0002654C <AmiBlitz3.ab2@11048> BRA.w getchar
00026552 <AmiBlitz3.ab2@11051>   ADDQ.w #1,connest
00026556 <AmiBlitz3.ab2@11052> BRA.w getchar
0002655C <AmiBlitz3.ab2@11055>   MOVE.w connest,D0                                      ;celse
00026560 <AmiBlitz3.ab2@11056>    BNE.w getchar
00026566 <AmiBlitz3.ab2@11057>   NOT.w skipcode
0002656A <AmiBlitz3.ab2@11058> BRA.w getchar
00026570 <AmiBlitz3.ab2@11061>   SUBQ.w #1,connest                                      ;cend
00026574 <AmiBlitz3.ab2@11062>    BPL.w getchar
0002657A <AmiBlitz3.ab2@11063>   ADDQ.w #1,connest
00026580 <AmiBlitz3.ab2@11064>   MOVEA.l concomsp,A0
00026586 <AmiBlitz3.ab2@11065>   CMPA.l #concomstack,A0
0002658A <AmiBlitz3.ab2@11066>    BEQ.w nociferr
0002658C <AmiBlitz3.ab2@11067>   SUBQ.w #2,A0
00026592 <AmiBlitz3.ab2@11068>   MOVE.l A0,concomsp
00026598 <AmiBlitz3.ab2@11069>   MOVE.w (A0),skipcode
0002659C <AmiBlitz3.ab2@11070> BRA.w getchar
000265A0 <AmiBlitz3.ab2@11073> ciflineat:   Ds.l 1
000265A2 <AmiBlitz3.ab2@11081>   MOVEQ.l #$00,D0
000265A4 <AmiBlitz3.ab2@11082>   MOVE.b (A5)+,D0
000265A8 <AmiBlitz3.ab2@11083>    BEQ.b getcharb__done
000265AC <AmiBlitz3.ab2@11084>    BPL.b getcharb__stuff
000265AE <AmiBlitz3.ab2@11085>   LSL.w #8,D0
000265B0 <AmiBlitz3.ab2@11086>   MOVE.b (A5)+,D0
000265B2 <AmiBlitz3.ab2@11087> RTS
000265B6 <AmiBlitz3.ab2@11090>   CMP.w #$22,D0
000265BA <AmiBlitz3.ab2@11091>    BEQ.b swapquote
000265BE <AmiBlitz3.ab2@11092>   CMP.w #$3B,D0
000265C2 <AmiBlitz3.ab2@11093>    BNE.b getcharb__done
000265C8 <AmiBlitz3.ab2@11094>   TST.w instringon
000265CC <AmiBlitz3.ab2@11095>    BNE.b getcharb__done
000265CE <AmiBlitz3.ab2@11098>   MOVE.b (A5)+,D0
000265D2 <AmiBlitz3.ab2@11099>             BEQ getcharb__loop_l1
000265D6 <AmiBlitz3.ab2@11100>             CMP.b #":",d0
000265DA <AmiBlitz3.ab2@11101>             BNE getcharb__loop
000265DE <AmiBlitz3.ab2@11102>             CMP.b #"@",(a5)
000265E2 <AmiBlitz3.ab2@11103>             BNE getcharb__loop
000265E8 <AmiBlitz3.ab2@11106>   MOVE.w D0,lastchar
000265EA <AmiBlitz3.ab2@11109> RTS
000265F0 <AmiBlitz3.ab2@11112>   NOT.w instringon
000265F2 <AmiBlitz3.ab2@11113> RTS
000265F6 <AmiBlitz3.ab2@11117>   BSR.w getchar
000265FC <AmiBlitz3.ab2@11118>   TST.w instringon
00026600 <AmiBlitz3.ab2@11119>    BNE.w get1byte__skip
00026604 <AmiBlitz3.ab2@11120>   CMP.w #$20,D0
00026608 <AmiBlitz3.ab2@11121>    BEQ.w get1byte_
0002660A <AmiBlitz3.ab2@11124> RTS
00026624 <AmiBlitz3.ab2@11127> gs:        Ds.w 13                                         ;ds.b 26  org source
00026628 <AmiBlitz3.ab2@11128>            Dc.b $F6,$E4,$FC,$D6                            ;dc.b 228,246,252,196,214,220 org source
0002662A <AmiBlitz3.ab2@11129>            Dc.b $C4,$DC
0002662E <AmiBlitz3.ab2@11135>   BSR.w getchar
00026634 <AmiBlitz3.ab2@11136>   TST.w instringon
00026638 <AmiBlitz3.ab2@11137>    BNE.w gchar2
0002663C <AmiBlitz3.ab2@11138>   CMP.w #$20,D0
00026640 <AmiBlitz3.ab2@11139>    BEQ.w get1bytemain
00026642 <AmiBlitz3.ab2@11141>   TST.w D0
00026646 <AmiBlitz3.ab2@11144>   BEQ.b get1bytemain__zero
0002664C <AmiBlitz3.ab2@11145>   TST.w instringon
00026650 <AmiBlitz3.ab2@11146>    BEQ.b get1bytemain__noqoute
00026654 <AmiBlitz3.ab2@11147>   CMP.b #$20,D0
00026658 <AmiBlitz3.ab2@11148>    BCC.b get1bytemain__skip
0002665C <AmiBlitz3.ab2@11149>   MOVE.b gs(PC,D0.W),D0
0002665E <AmiBlitz3.ab2@11150> RTS
00026662 <AmiBlitz3.ab2@11153>   CMP.w #-$7FDE,D0                                         ;cmp #$8000+34,d0 org source  ;else
00026666 <AmiBlitz3.ab2@11154>    BEQ.b get1bytemain__zero
0002666A <AmiBlitz3.ab2@11155>   CMP.w #$3A,D0
0002666E <AmiBlitz3.ab2@11156>    BEQ.b get1bytemain__zero
00026670 <AmiBlitz3.ab2@11159>   TST.w D0
00026672 <AmiBlitz3.ab2@11162> RTS
00026678 <AmiBlitz3.ab2@11166>   MOVE.w lastchar,D0
0002667C <AmiBlitz3.ab2@11167> BRA.w gchar2
00026686 <AmiBlitz3.ab2@11171>   MOVE.w oldqflag,instringon
0002668C <AmiBlitz3.ab2@11172>   MOVEA.l lastsourcepos,A5
0002668E <AmiBlitz3.ab2@11173> RTS
00026694 <AmiBlitz3.ab2@11177>   MOVE.w D0,locchar
0002669A <AmiBlitz3.ab2@11178>   MOVE.l A5,locloc
0002669C <AmiBlitz3.ab2@11179> RTS
000266A2 <AmiBlitz3.ab2@11183>   MOVEA.l locloc,A5
000266A8 <AmiBlitz3.ab2@11184>   MOVE.w locchar,D0
000266AE <AmiBlitz3.ab2@11185>   MOVE.w D0,lastchar
000266B0 <AmiBlitz3.ab2@11186> RTS
000266B0 <internal_errormsg.ab2@1> XINCLUDE "internal_errormsg.ab2"
000266F8 <internal_errormsg.ab2@9> XINCLUDE "internal_errormsg.ab2"
0002674A <internal_errormsg.ab2@10> XINCLUDE "internal_errormsg.ab2"
00026788 <internal_errormsg.ab2@11> XINCLUDE "internal_errormsg.ab2"
000267C6 <internal_errormsg.ab2@12> XINCLUDE "internal_errormsg.ab2"
000267F0 <internal_errormsg.ab2@13> XINCLUDE "internal_errormsg.ab2"
00026820 <internal_errormsg.ab2@14> XINCLUDE "internal_errormsg.ab2"
0002686A <internal_errormsg.ab2@15> XINCLUDE "internal_errormsg.ab2"
000268F0 <internal_errormsg.ab2@16> XINCLUDE "internal_errormsg.ab2"
00026952 <internal_errormsg.ab2@17> XINCLUDE "internal_errormsg.ab2"
0002699A <internal_errormsg.ab2@18> XINCLUDE "internal_errormsg.ab2"
000269EC <internal_errormsg.ab2@19> XINCLUDE "internal_errormsg.ab2"
00026A36 <internal_errormsg.ab2@20> XINCLUDE "internal_errormsg.ab2"
00026A84 <internal_errormsg.ab2@21> XINCLUDE "internal_errormsg.ab2"
00026ABA <internal_errormsg.ab2@22> XINCLUDE "internal_errormsg.ab2"
00026AE8 <internal_errormsg.ab2@23> XINCLUDE "internal_errormsg.ab2"
00026B02 <internal_errormsg.ab2@24> XINCLUDE "internal_errormsg.ab2"
00026B20 <internal_errormsg.ab2@25> XINCLUDE "internal_errormsg.ab2"
00026B9E <internal_errormsg.ab2@26> XINCLUDE "internal_errormsg.ab2"
00026BC8 <internal_errormsg.ab2@27> XINCLUDE "internal_errormsg.ab2"
00026BEE <internal_errormsg.ab2@28> XINCLUDE "internal_errormsg.ab2"
00026C0E <internal_errormsg.ab2@29> XINCLUDE "internal_errormsg.ab2"
00026C2C <internal_errormsg.ab2@30> XINCLUDE "internal_errormsg.ab2"
00026C4C <internal_errormsg.ab2@31> XINCLUDE "internal_errormsg.ab2"
00026C74 <internal_errormsg.ab2@32> XINCLUDE "internal_errormsg.ab2"
00026C9E <internal_errormsg.ab2@33> XINCLUDE "internal_errormsg.ab2"
00026CA0 <internal_errormsg.ab2@36> XINCLUDE "internal_errormsg.ab2"
00026CBC <internal_errormsg.ab2@39> XINCLUDE "internal_errormsg.ab2"
00026CE2 <internal_errormsg.ab2@40> XINCLUDE "internal_errormsg.ab2"
00026CFA <internal_errormsg.ab2@41> XINCLUDE "internal_errormsg.ab2"
00026D58 <internal_errormsg.ab2@42> XINCLUDE "internal_errormsg.ab2"
00026D7A <internal_errormsg.ab2@43> XINCLUDE "internal_errormsg.ab2"
00026DA0 <internal_errormsg.ab2@44> XINCLUDE "internal_errormsg.ab2"
00026DC8 <internal_errormsg.ab2@45> XINCLUDE "internal_errormsg.ab2"
00026DE8 <internal_errormsg.ab2@46> XINCLUDE "internal_errormsg.ab2"
00026E0C <internal_errormsg.ab2@47> XINCLUDE "internal_errormsg.ab2"
00026E52 <internal_errormsg.ab2@48> XINCLUDE "internal_errormsg.ab2"
00026E76 <internal_errormsg.ab2@49> XINCLUDE "internal_errormsg.ab2"
00026E9A <internal_errormsg.ab2@50> XINCLUDE "internal_errormsg.ab2"
00026EBA <internal_errormsg.ab2@51> XINCLUDE "internal_errormsg.ab2"
00026EDE <internal_errormsg.ab2@52> XINCLUDE "internal_errormsg.ab2"
00026F00 <internal_errormsg.ab2@53> XINCLUDE "internal_errormsg.ab2"
00026F2C <internal_errormsg.ab2@54> XINCLUDE "internal_errormsg.ab2"
00026F52 <internal_errormsg.ab2@55> XINCLUDE "internal_errormsg.ab2"
00026F5C <internal_errormsg.ab2@58> XINCLUDE "internal_errormsg.ab2"
00026F82 <internal_errormsg.ab2@59> XINCLUDE "internal_errormsg.ab2"
00026FD4 <internal_errormsg.ab2@61> XINCLUDE "internal_errormsg.ab2"
0002703E <internal_errormsg.ab2@62> XINCLUDE "internal_errormsg.ab2"
0002709C <internal_errormsg.ab2@63> XINCLUDE "internal_errormsg.ab2"
0002710A <internal_errormsg.ab2@64> XINCLUDE "internal_errormsg.ab2"
00027146 <internal_errormsg.ab2@65> XINCLUDE "internal_errormsg.ab2"
00027164 <internal_errormsg.ab2@66> XINCLUDE "internal_errormsg.ab2"
0002718A <internal_errormsg.ab2@67> XINCLUDE "internal_errormsg.ab2"
000271BA <internal_errormsg.ab2@68> XINCLUDE "internal_errormsg.ab2"
000271DE <internal_errormsg.ab2@69> XINCLUDE "internal_errormsg.ab2"
0002720C <internal_errormsg.ab2@70> XINCLUDE "internal_errormsg.ab2"
00027230 <internal_errormsg.ab2@71> XINCLUDE "internal_errormsg.ab2"
00027246 <internal_errormsg.ab2@72> XINCLUDE "internal_errormsg.ab2"
0002725C <internal_errormsg.ab2@73> XINCLUDE "internal_errormsg.ab2"
00027262 <internal_errormsg.ab2@76> XINCLUDE "internal_errormsg.ab2"
0002726A <internal_errormsg.ab2@78> XINCLUDE "internal_errormsg.ab2"
0002726C <internal_errormsg.ab2@79> XINCLUDE "internal_errormsg.ab2"
00027270 <internal_errormsg.ab2@80> XINCLUDE "internal_errormsg.ab2"
00027278 <internal_errormsg.ab2@81> XINCLUDE "internal_errormsg.ab2"
0002727A <internal_errormsg.ab2@82> XINCLUDE "internal_errormsg.ab2"
000272B4 <internal_errormsg.ab2@84> XINCLUDE "internal_errormsg.ab2"
000272E0 <internal_errormsg.ab2@85> XINCLUDE "internal_errormsg.ab2"
00027310 <internal_errormsg.ab2@86> XINCLUDE "internal_errormsg.ab2"
00027348 <internal_errormsg.ab2@87> XINCLUDE "internal_errormsg.ab2"
000273A2 <internal_errormsg.ab2@88> XINCLUDE "internal_errormsg.ab2"
000273A4 <internal_errormsg.ab2@92> XINCLUDE "internal_errormsg.ab2"
000273A8 <internal_errormsg.ab2@93> XINCLUDE "internal_errormsg.ab2"
000273AC <internal_errormsg.ab2@94> XINCLUDE "internal_errormsg.ab2"
000273B0 <internal_errormsg.ab2@95> XINCLUDE "internal_errormsg.ab2"
000273B4 <internal_errormsg.ab2@96> XINCLUDE "internal_errormsg.ab2"
000273B8 <internal_errormsg.ab2@97> XINCLUDE "internal_errormsg.ab2"
000273BC <internal_errormsg.ab2@98> XINCLUDE "internal_errormsg.ab2"
000273C0 <internal_errormsg.ab2@99> XINCLUDE "internal_errormsg.ab2"
000273C4 <internal_errormsg.ab2@100> XINCLUDE "internal_errormsg.ab2"
000273C8 <internal_errormsg.ab2@101> XINCLUDE "internal_errormsg.ab2"
000273CC <internal_errormsg.ab2@102> XINCLUDE "internal_errormsg.ab2"
0002740A <internal_errormsg.ab2@103> XINCLUDE "internal_errormsg.ab2"
0002743C <internal_errormsg.ab2@105> XINCLUDE "internal_errormsg.ab2"
0002745A <internal_errormsg.ab2@106> XINCLUDE "internal_errormsg.ab2"
00027484 <internal_errormsg.ab2@107> XINCLUDE "internal_errormsg.ab2"
000274A0 <internal_errormsg.ab2@108> XINCLUDE "internal_errormsg.ab2"
000274BA <internal_errormsg.ab2@109> XINCLUDE "internal_errormsg.ab2"
000274D8 <internal_errormsg.ab2@110> XINCLUDE "internal_errormsg.ab2"
000274FC <internal_errormsg.ab2@111> XINCLUDE "internal_errormsg.ab2"
000274FE <internal_errormsg.ab2@114> XINCLUDE "internal_errormsg.ab2"
00027550 <internal_errormsg.ab2@115> XINCLUDE "internal_errormsg.ab2"
00027578 <internal_errormsg.ab2@117> XINCLUDE "internal_errormsg.ab2"
000275A0 <internal_errormsg.ab2@118> XINCLUDE "internal_errormsg.ab2"
000275BC <internal_errormsg.ab2@122> XINCLUDE "internal_errormsg.ab2"
000275DC <internal_errormsg.ab2@123> XINCLUDE "internal_errormsg.ab2"
000275F4 <internal_errormsg.ab2@124> XINCLUDE "internal_errormsg.ab2"
00027638 <internal_errormsg.ab2@125> XINCLUDE "internal_errormsg.ab2"
00027680 <internal_errormsg.ab2@126> XINCLUDE "internal_errormsg.ab2"
000276AA <internal_errormsg.ab2@127> XINCLUDE "internal_errormsg.ab2"
000276D4 <internal_errormsg.ab2@128> XINCLUDE "internal_errormsg.ab2"
000276EE <internal_errormsg.ab2@132> XINCLUDE "internal_errormsg.ab2"
00027718 <internal_errormsg.ab2@133> XINCLUDE "internal_errormsg.ab2"
0002776C <internal_errormsg.ab2@134> XINCLUDE "internal_errormsg.ab2"
000277B8 <internal_errormsg.ab2@135> XINCLUDE "internal_errormsg.ab2"
000277F0 <internal_errormsg.ab2@136> XINCLUDE "internal_errormsg.ab2"
000277F6 <internal_errormsg.ab2@139> XINCLUDE "internal_errormsg.ab2"
00027804 <internal_errormsg.ab2@141> XINCLUDE "internal_errormsg.ab2"
00027834 <internal_errormsg.ab2@144> XINCLUDE "internal_errormsg.ab2"
00027868 <internal_errormsg.ab2@145> XINCLUDE "internal_errormsg.ab2"
000278CE <internal_errormsg.ab2@146> XINCLUDE "internal_errormsg.ab2"
000278EC <internal_errormsg.ab2@147> XINCLUDE "internal_errormsg.ab2"
00027966 <internal_errormsg.ab2@148> XINCLUDE "internal_errormsg.ab2"
0002798E <internal_errormsg.ab2@149> XINCLUDE "internal_errormsg.ab2"
000279A4 <internal_errormsg.ab2@150> XINCLUDE "internal_errormsg.ab2"
000279B8 <internal_errormsg.ab2@151> XINCLUDE "internal_errormsg.ab2"
000279BA <internal_errormsg.ab2@154> XINCLUDE "internal_errormsg.ab2"
000279BB <internal_errormsg.ab2@155> XINCLUDE "internal_errormsg.ab2"
000279BC <internal_errormsg.ab2@156> XINCLUDE "internal_errormsg.ab2"
000279DC <internal_errormsg.ab2@158> XINCLUDE "internal_errormsg.ab2"
000279E2 <internal_errormsg.ab2@161> XINCLUDE "internal_errormsg.ab2"
000279F4 <internal_errormsg.ab2@163> XINCLUDE "internal_errormsg.ab2"
00027A28 <internal_errormsg.ab2@166> XINCLUDE "internal_errormsg.ab2"
00027A40 <internal_errormsg.ab2@167> XINCLUDE "internal_errormsg.ab2"
00027A5C <internal_errormsg.ab2@168> XINCLUDE "internal_errormsg.ab2"
00027A74 <internal_errormsg.ab2@169> XINCLUDE "internal_errormsg.ab2"
00027A94 <internal_errormsg.ab2@170> XINCLUDE "internal_errormsg.ab2"
00027AB4 <internal_errormsg.ab2@171> XINCLUDE "internal_errormsg.ab2"
00027ADA <internal_errormsg.ab2@172> XINCLUDE "internal_errormsg.ab2"
00027AF0 <internal_errormsg.ab2@173> XINCLUDE "internal_errormsg.ab2"
00027B0C <internal_errormsg.ab2@174> XINCLUDE "internal_errormsg.ab2"
00027B36 <internal_errormsg.ab2@175> XINCLUDE "internal_errormsg.ab2"
00027B4E <internal_errormsg.ab2@176> XINCLUDE "internal_errormsg.ab2"
00027B6A <internal_errormsg.ab2@177> XINCLUDE "internal_errormsg.ab2"
00027B8A <internal_errormsg.ab2@178> XINCLUDE "internal_errormsg.ab2"
00027BA2 <internal_errormsg.ab2@179> XINCLUDE "internal_errormsg.ab2"
00027BA6 <internal_errormsg.ab2@182> XINCLUDE "internal_errormsg.ab2"
00027BAC <internal_errormsg.ab2@183> XINCLUDE "internal_errormsg.ab2"
00027BB2 <internal_errormsg.ab2@184> XINCLUDE "internal_errormsg.ab2"
00027BC7 <internal_errormsg.ab2@185> XINCLUDE "internal_errormsg.ab2"
00027BCD <internal_errormsg.ab2@187> XINCLUDE "internal_errormsg.ab2"
00027BCE <internal_errormsg.ab2@188> XINCLUDE "internal_errormsg.ab2"
00027BD2 <internal_errormsg.ab2@191> XINCLUDE "internal_errormsg.ab2"
00027BD8 <internal_errormsg.ab2@192> XINCLUDE "internal_errormsg.ab2"
00027BDE <internal_errormsg.ab2@193> XINCLUDE "internal_errormsg.ab2"
00027BF1 <internal_errormsg.ab2@194> XINCLUDE "internal_errormsg.ab2"
00027BF7 <internal_errormsg.ab2@196> XINCLUDE "internal_errormsg.ab2"
00027BF8 <internal_errormsg.ab2@197> XINCLUDE "internal_errormsg.ab2"
00027C16 <internal_errormsg.ab2@199> XINCLUDE "internal_errormsg.ab2"
00027C2E <internal_errormsg.ab2@200> XINCLUDE "internal_errormsg.ab2"
00027C4A <internal_errormsg.ab2@201> XINCLUDE "internal_errormsg.ab2"
00027C74 <internal_errormsg.ab2@202> XINCLUDE "internal_errormsg.ab2"
00027C8E <internal_errormsg.ab2@203> XINCLUDE "internal_errormsg.ab2"
00027CAE <internal_errormsg.ab2@204> XINCLUDE "internal_errormsg.ab2"
00027CCC <internal_errormsg.ab2@205> XINCLUDE "internal_errormsg.ab2"
00027CFA <internal_errormsg.ab2@206> XINCLUDE "internal_errormsg.ab2"
00027D04 <internal_errormsg.ab2@209> XINCLUDE "internal_errormsg.ab2"
00027D36 <internal_errormsg.ab2@210> XINCLUDE "internal_errormsg.ab2"
00027D54 <internal_errormsg.ab2@212> XINCLUDE "internal_errormsg.ab2"
00027D72 <internal_errormsg.ab2@213> XINCLUDE "internal_errormsg.ab2"
00027D92 <internal_errormsg.ab2@214> XINCLUDE "internal_errormsg.ab2"
00027DB8 <internal_errormsg.ab2@215> XINCLUDE "internal_errormsg.ab2"
00027DDE <internal_errormsg.ab2@216> XINCLUDE "internal_errormsg.ab2"
00027E06 <internal_errormsg.ab2@217> XINCLUDE "internal_errormsg.ab2"
00027E24 <internal_errormsg.ab2@218> XINCLUDE "internal_errormsg.ab2"
00027E44 <internal_errormsg.ab2@219> XINCLUDE "internal_errormsg.ab2"
00027E5E <internal_errormsg.ab2@220> XINCLUDE "internal_errormsg.ab2"
00027E80 <internal_errormsg.ab2@221> XINCLUDE "internal_errormsg.ab2"
00027E9E <internal_errormsg.ab2@222> XINCLUDE "internal_errormsg.ab2"
00027EC0 <internal_errormsg.ab2@223> XINCLUDE "internal_errormsg.ab2"
00027EE4 <internal_errormsg.ab2@224> XINCLUDE "internal_errormsg.ab2"
00027EEA <internal_errormsg.ab2@227> XINCLUDE "internal_errormsg.ab2"
00027F06 <internal_errormsg.ab2@228> XINCLUDE "internal_errormsg.ab2"
00027F22 <internal_errormsg.ab2@230> XINCLUDE "internal_errormsg.ab2"
00027F40 <internal_errormsg.ab2@231> XINCLUDE "internal_errormsg.ab2"
00027F5E <internal_errormsg.ab2@232> XINCLUDE "internal_errormsg.ab2"
00027FAC <internal_errormsg.ab2@233> XINCLUDE "internal_errormsg.ab2"
00027FCA <internal_errormsg.ab2@234> XINCLUDE "internal_errormsg.ab2"
00027FE8 <internal_errormsg.ab2@235> XINCLUDE "internal_errormsg.ab2"
00028002 <internal_errormsg.ab2@236> XINCLUDE "internal_errormsg.ab2"
0002804E <internal_errormsg.ab2@237> XINCLUDE "internal_errormsg.ab2"
00028074 <internal_errormsg.ab2@238> XINCLUDE "internal_errormsg.ab2"
00028094 <internal_errormsg.ab2@239> XINCLUDE "internal_errormsg.ab2"
000280B6 <internal_errormsg.ab2@240> XINCLUDE "internal_errormsg.ab2"
000280D2 <internal_errormsg.ab2@241> XINCLUDE "internal_errormsg.ab2"
000280F8 <internal_errormsg.ab2@242> XINCLUDE "internal_errormsg.ab2"
00028114 <internal_errormsg.ab2@243> XINCLUDE "internal_errormsg.ab2"
00028132 <internal_errormsg.ab2@244> XINCLUDE "internal_errormsg.ab2"
0002815A <internal_errormsg.ab2@245> XINCLUDE "internal_errormsg.ab2"
00028176 <internal_errormsg.ab2@246> XINCLUDE "internal_errormsg.ab2"
00028186 <internal_errormsg.ab2@247> XINCLUDE "internal_errormsg.ab2"
000281A8 <internal_errormsg.ab2@248> XINCLUDE "internal_errormsg.ab2"
000281AC <internal_errormsg.ab2@251> XINCLUDE "internal_errormsg.ab2"
000281AE <internal_errormsg.ab2@254> XINCLUDE "internal_errormsg.ab2"
000281C8 <internal_errormsg.ab2@255> XINCLUDE "internal_errormsg.ab2"
000281EC <internal_errormsg.ab2@257> XINCLUDE "internal_errormsg.ab2"
0002820C <internal_errormsg.ab2@258> XINCLUDE "internal_errormsg.ab2"
0002823E <internal_errormsg.ab2@259> XINCLUDE "internal_errormsg.ab2"
0002829C <internal_errormsg.ab2@260> XINCLUDE "internal_errormsg.ab2"
000282D4 <internal_errormsg.ab2@261> XINCLUDE "internal_errormsg.ab2"
00028312 <internal_errormsg.ab2@262> XINCLUDE "internal_errormsg.ab2"
00028348 <internal_errormsg.ab2@263> XINCLUDE "internal_errormsg.ab2"
0002837A <internal_errormsg.ab2@264> XINCLUDE "internal_errormsg.ab2"
0002839E <internal_errormsg.ab2@265> XINCLUDE "internal_errormsg.ab2"
000283C2 <internal_errormsg.ab2@266> XINCLUDE "internal_errormsg.ab2"
0002840C <internal_errormsg.ab2@267> XINCLUDE "internal_errormsg.ab2"
00028434 <internal_errormsg.ab2@268> XINCLUDE "internal_errormsg.ab2"
0002847E <internal_errormsg.ab2@269> XINCLUDE "internal_errormsg.ab2"
000284BE <internal_errormsg.ab2@270> XINCLUDE "internal_errormsg.ab2"
000284BE <AmiBlitz3.ab2@11190> XINCLUDE "internal_errormsg.ab2"
000284C0 <AmiBlitz3.ab2@11194> ezerr:   Ds.w 1                                            ;for simple errors
000284C6 <AmiBlitz3.ab2@11200>    MOVE.l myline,d0
000284CA <AmiBlitz3.ab2@11201>   BNE handle_compileerror__l2
000284D0 <AmiBlitz3.ab2@11203>     MOVE.l a5,lastsourcepos
000284D2 <AmiBlitz3.ab2@11205>     SUBA.l a5,a5
000284D8 <AmiBlitz3.ab2@11207>   TST.l usedfrom
000284DC <AmiBlitz3.ab2@11208>   BEQ handle_compileerror__org
000284E2 <AmiBlitz3.ab2@11209>     MOVEA.l usedfrom,a5
000284E8 <AmiBlitz3.ab2@11212>   TST.w dirmode
000284EC <AmiBlitz3.ab2@11213>   BNE.b handle_compileerror__quiet
000284F2 <AmiBlitz3.ab2@11214>     JSR call_setpointernormal
000284F6 <AmiBlitz3.ab2@11215>     MOVE.w ezerr(PC),D0
000284FA <AmiBlitz3.ab2@11216>     BNE.w handle_compileerror__skip
00028500 <AmiBlitz3.ab2@11217>       MOVE.w cfetchmode,D0
00028504 <AmiBlitz3.ab2@11218>       BEQ.w handle_compileerror__skip2
0002850E <AmiBlitz3.ab2@11219>         MOVE.l oldlibat,destbufferend                      ;fix up lib thing.
00028514 <AmiBlitz3.ab2@11222>   MOVE.w constmode,D0
00028518 <AmiBlitz3.ab2@11223>   BEQ.b handle_compileerror__skip3
0002851C <AmiBlitz3.ab2@11224>     BSR.w asmerr2
00028522 <AmiBlitz3.ab2@11227>   MOVE.l firstlocal,D1
00028528 <AmiBlitz3.ab2@11228>   OR.l firstglob,D1
0002852C <AmiBlitz3.ab2@11229>   BEQ.b handle_compileerror__notproc                       ;?!?!?!
00028532 <AmiBlitz3.ab2@11230>     JSR JL_0_DB5C
0002853A <AmiBlitz3.ab2@11233>   MOVE.w #$FFFF,anyerrs                                    ;#-1,anyerrs org source
00028544 <AmiBlitz3.ab2@11234>   CMP.l #"NORE",reqmode                                    ;for used functions
00028548 <AmiBlitz3.ab2@11235>   BEQ handle_compileerror__notproc_l1
00028552 <AmiBlitz3.ab2@11236>     MOVE.l linenumat,compilelinecounter
00028558 <AmiBlitz3.ab2@11239>   JSR close_compilewin
0002855A <AmiBlitz3.ab2@11242>   MOVEA.l (A7)+,A0
00028564 <AmiBlitz3.ab2@11243>   CMP.l #maxerrorcount,errorcounter
00028568 <AmiBlitz3.ab2@11244>   BLT 'lesserror
0002856E <AmiBlitz3.ab2@11245>   LEA errorlimit_text,a0
00028574 <AmiBlitz3.ab2@11247>   ADDQ.l #1,errorcounter
0002857A <AmiBlitz3.ab2@11248>   JSR errorstringparse
00028584 <AmiBlitz3.ab2@11249>   CMP.l #"NORE",reqmode                                    ;for used functions
00028588 <AmiBlitz3.ab2@11250>   BEQ handle_compileerror__skip_Lxx2
0002858E <AmiBlitz3.ab2@11251>   TST.l CLIMode
00028592 <AmiBlitz3.ab2@11252>   BNE 'climode_output
00028598 <AmiBlitz3.ab2@11254>     JSR save_errorfile
0002859C <AmiBlitz3.ab2@11255>     BRA 'end_output
000285A2 <AmiBlitz3.ab2@11257>     JSR stdout_error
000285AC <AmiBlitz3.ab2@11259>      CMP.l #maxerrorcount,errorcounter
000285B0 <AmiBlitz3.ab2@11260>      BGT 'end_output
000285B6 <AmiBlitz3.ab2@11261>     MOVE.l lastsourcepos,a5
000285B8 <AmiBlitz3.ab2@11262> 'loop TST.b (a5)
000285BC <AmiBlitz3.ab2@11263>       BEQ 'ok2
000285BE <AmiBlitz3.ab2@11264>     MOVE.b (a5)+,d0                                  ; position to usefull source position to avoid following errors
000285C2 <AmiBlitz3.ab2@11265>     BEQ 'ok
000285C6 <AmiBlitz3.ab2@11266>     CMP.b #":",d0
000285CA <AmiBlitz3.ab2@11267>     BEQ 'ok
000285CE <AmiBlitz3.ab2@11268>     BRA 'loop
000285D0 <AmiBlitz3.ab2@11269> 'ok SUBQ.l #1,a5
000285D8 <AmiBlitz3.ab2@11270> 'ok2 MOVE.w #0,lastchar
000285E0 <AmiBlitz3.ab2@11271>     MOVE.b #1,iserror
000285E6 <AmiBlitz3.ab2@11272>     MOVE.l stackaddr,a7
000285E8 <AmiBlitz3.ab2@11273>     RTS
000285EA <AmiBlitz3.ab2@11279>   MOVE.l A0,-(a7)
00028628 <AmiBlitz3.ab2@11280>   !ComData_GetL{comFunc_ErrorRequest,A1}
0002862A <AmiBlitz3.ab2@11281>   MOVE.l (a7)+,A0
0002862E <AmiBlitz3.ab2@11283>   MOVEM.l d6/D7/A6,-(A7)
00028634 <AmiBlitz3.ab2@11284>   MOVE.l includeline,d7
0002863A <AmiBlitz3.ab2@11285>   MOVE.l #"INLN",a6
00028644 <AmiBlitz3.ab2@11286>   MOVE.l errstack,tempa7
00028646 <AmiBlitz3.ab2@11287>   JSR (A1)
0002864A <AmiBlitz3.ab2@11289>   MOVEM.l (A7)+,D7/d6/A6
00028650 <AmiBlitz3.ab2@11292>   MOVE.l tempa7,a7
00028656 <AmiBlitz3.ab2@11293>   MOVEA.l errcont,A0
00028658 <AmiBlitz3.ab2@11295> RTS
0002865E <AmiBlitz3.ab2@11298>   MOVEA.l errstack,A7
00028664 <AmiBlitz3.ab2@11299>   MOVEA.l errcont,A0
00028666 <AmiBlitz3.ab2@11301> RTS
00028668 <AmiBlitz3.ab2@11304>   MOVE.l (A7),D0
0002866E <AmiBlitz3.ab2@11305>   MOVEA.l errstack,A7
00028674 <AmiBlitz3.ab2@11306>   MOVEA.l errcont,A0
00028676 <AmiBlitz3.ab2@11307> JMP (A0)
0002867A <AmiBlitz3.ab2@11313>   CMP.w #$7A,D0                                            ;'z'
0002867E <AmiBlitz3.ab2@11314>    BHI.w tstalpha__no
00028682 <AmiBlitz3.ab2@11315>   CMP.w #$41,D0                                            ;'A'
00028686 <AmiBlitz3.ab2@11316>    BCS.w tstalpha__no
0002868A <AmiBlitz3.ab2@11317>   CMP.w #$61,D0                                            ;'a'
0002868E <AmiBlitz3.ab2@11318>    BCC.w tstalpha__yes
00028692 <AmiBlitz3.ab2@11319>   CMP.w #$5A,D0                                            ;'Z'
00028696 <AmiBlitz3.ab2@11320>    BHI.w tstalpha__no
00028698 <AmiBlitz3.ab2@11323>   CMP.w D0,D0
0002869A <AmiBlitz3.ab2@11326> RTS
0002869E <AmiBlitz3.ab2@11334>   CMP.w #$30,D0                                            ;'0'
000286A2 <AmiBlitz3.ab2@11335>    BCS.w tstnum__skip
000286A6 <AmiBlitz3.ab2@11336>   CMP.w #$39,D0                                            ;'9'
000286AA <AmiBlitz3.ab2@11337>    BHI.w tstnum__skip                                     
000286AC <AmiBlitz3.ab2@11338>   CMP.w D0,D0
000286AE <AmiBlitz3.ab2@11341> RTS
000286D0 <AmiBlitz3.ab2@11347>   !compare1                                                ;bsr.w tstalpha
000286D4 <AmiBlitz3.ab2@11348>    BEQ.w tstlab__skip
000286E6 <AmiBlitz3.ab2@11349>   !compare2                                                ;bsr.w tstnum2
000286EA <AmiBlitz3.ab2@11350>    BEQ.w tstlab__skip
000286EE <AmiBlitz3.ab2@11351>   CMP.w #$5F,D0                                            ;'_'
000286F2 <AmiBlitz3.ab2@11352>    BEQ.w tstlab__skip
000286F6 <AmiBlitz3.ab2@11353>   CMP.w #$27,D0                                            ;#loclabch,d0 org source
000286F8 <AmiBlitz3.ab2@11356> RTS
00028702 <AmiBlitz3.ab2@11361>   MOVE.w oldqflag,instringon
00028708 <AmiBlitz3.ab2@11362>   MOVEA.l lastsourcepos,A5
0002870E <AmiBlitz3.ab2@11365>   MOVE.l a5,beforeparameterfetch
00028714 <AmiBlitz3.ab2@11366>   LEA ptr_parameterstore,A1
00028716 <AmiBlitz3.ab2@11369>   MOVEQ.l #$00,D2
0002871C <AmiBlitz3.ab2@11372>   LEA chartab,a0
0002871E <AmiBlitz3.ab2@11373>   MOVEQ #0,d0
00028724 <AmiBlitz3.ab2@11374>   MOVE.l A5,lastsourcepos
0002872E <AmiBlitz3.ab2@11375>   MOVE.w instringon,oldqflag
00028730 <AmiBlitz3.ab2@11378>     MOVE.b (a5)+,d0
00028734 <AmiBlitz3.ab2@11379>   CMP.b #$20,d0                                            ;space deftype
00028738 <AmiBlitz3.ab2@11380>   BEQ makename4__retry
0002873E <AmiBlitz3.ab2@11382>   MOVE.w d0,lastchar
00028742 <AmiBlitz3.ab2@11383>   TST.b 0(a0,d0.w)
00028746 <AmiBlitz3.ab2@11384>   BNE makename__done
00028748 <AmiBlitz3.ab2@11393>   MOVE.b D0,(A1)+
0002874A <AmiBlitz3.ab2@11394>   ADDQ.l #1,D2
00028750 <AmiBlitz3.ab2@11395>   MOVE.l A5,lastsourcepos
00028752 <AmiBlitz3.ab2@11398>   MOVE.b (a5)+,d0
00028758 <AmiBlitz3.ab2@11399>   MOVE.b d0,lastchar+1
0002875C <AmiBlitz3.ab2@11400>   CMP.b #$20,d0
00028760 <AmiBlitz3.ab2@11401>   BEQ makename__loop_l20
00028764 <AmiBlitz3.ab2@11403>   TST.b 0(a0,d0)
00028768 <AmiBlitz3.ab2@11404>   BEQ makename__loop
0002876C <AmiBlitz3.ab2@11405>   CMP.b #2,d0
00028770 <AmiBlitz3.ab2@11406>   BNE makename__loop_lf1
00028776 <AmiBlitz3.ab2@11407>   MOVEA.l usedfrom,A5
0002877C <AmiBlitz3.ab2@11408>   CLR.l usedfrom
00028780 <AmiBlitz3.ab2@11409> BRA makename__loop_ln1
00028784 <AmiBlitz3.ab2@11412>   CMP.b #1,d0
00028788 <AmiBlitz3.ab2@11413>   BNE makename__loop_l20
0002878C <AmiBlitz3.ab2@11414>   MOVEA.l cmakea5(PC),A5
00028790 <AmiBlitz3.ab2@11415> BRA makename__loop_ln1
00028794 <AmiBlitz3.ab2@11418>   CMP.b #$7e,d0
00028798 <AmiBlitz3.ab2@11419>             BNE makename__loop_lt
0002879E <AmiBlitz3.ab2@11420>             TST.w cmake
000287A2 <AmiBlitz3.ab2@11421>             BNE.w makename__loop_a1
000287A4 <AmiBlitz3.ab2@11422>             SUBQ.l #1,a5
000287A8 <AmiBlitz3.ab2@11423>             BSR.w get1bytemain
000287AC <AmiBlitz3.ab2@11424> BRA makename__loop
000287B0 <AmiBlitz3.ab2@11428> BRA makename__loop_gpex
000287B4 <AmiBlitz3.ab2@11432>   BSR.w getchar
000287D6 <AmiBlitz3.ab2@11433>    !compare1                                               ;bsr.w tstalpha
000287DA <AmiBlitz3.ab2@11434>    BEQ.w makename__loop_getp1
000287EC <AmiBlitz3.ab2@11435>    !compare2                                               ;bsr.w tstnum
000287F0 <AmiBlitz3.ab2@11436>    BEQ.w makename__loop_getp1
000287F4 <AmiBlitz3.ab2@11437>   CMP.w #$5F,D0                                            ;'_'
000287F8 <AmiBlitz3.ab2@11438>    BEQ.w makename__loop_getp1
000287FC <AmiBlitz3.ab2@11439>   CMP.w #$27,D0                                            ;#loclabch,d0 org source
00028800 <AmiBlitz3.ab2@11443>       BNE makename__loop_gpex
00028804 <AmiBlitz3.ab2@11444>       CMP.b #$20,d0
00028808 <AmiBlitz3.ab2@11445>       BNE.w makename__loop
0002880A <AmiBlitz3.ab2@11448>      TST.b d0
0002880E <AmiBlitz3.ab2@11449>      BPL makename__loop_l10
00028810 <AmiBlitz3.ab2@11450>      SUBQ.l #1,a5
00028814 <AmiBlitz3.ab2@11451>      BSR get1byte_
00028818 <AmiBlitz3.ab2@11454>    CMP.w #$20,D0
0002881C <AmiBlitz3.ab2@11455>    BNE.w makename__done
0002881E <AmiBlitz3.ab2@11456>    MOVEQ #0,d0
00028824 <AmiBlitz3.ab2@11457>   MOVE.l a5,lastsourcepos
00028826 <AmiBlitz3.ab2@11460>   MOVE.b (a5)+,d0                                          ;neuneu
0002882A <AmiBlitz3.ab2@11461>   BPL makename__loop_l101:
0002882C <AmiBlitz3.ab2@11462>   ASL.w #8,d0
0002882E <AmiBlitz3.ab2@11463>   MOVE.b (a5)+,d0
00028834 <AmiBlitz3.ab2@11466>   TST.w instringon
00028838 <AmiBlitz3.ab2@11467>   BNE makename__loop_l102
0002883C <AmiBlitz3.ab2@11468>   CMP.b #$20,d0
00028840 <AmiBlitz3.ab2@11469>   BEQ makename__loop_l103
00028844 <AmiBlitz3.ab2@11470>   CMP.b #";",d0
00028848 <AmiBlitz3.ab2@11471>   BNE makename__loop_l102
0002884A <AmiBlitz3.ab2@11474>   MOVE.b (A5)+,D0
0002884E <AmiBlitz3.ab2@11475>              BEQ makename__loop_l1
00028852 <AmiBlitz3.ab2@11476>              CMP.b #":",d0
00028856 <AmiBlitz3.ab2@11477>              BNE makename__loop_lr                         ;:@
0002885A <AmiBlitz3.ab2@11478>              CMP.b #"@",(a5)
0002885E <AmiBlitz3.ab2@11479>              BNE makename__loop_lr
00028860 <AmiBlitz3.ab2@11480>              ADDQ #1,a5
00028866 <AmiBlitz3.ab2@11484>   MOVE.w d0,lastchar
0002886A <AmiBlitz3.ab2@11488>   CMP.b #";",d0
0002886E <AmiBlitz3.ab2@11489>   BEQ makename__done_l11
00028870 <AmiBlitz3.ab2@11490>   CLR.b (A1)
00028872 <AmiBlitz3.ab2@11492>   TST.w D2
00028874 <AmiBlitz3.ab2@11493> RTS
00028876 <AmiBlitz3.ab2@11496>   CLR.b (a1)
00028878 <AmiBlitz3.ab2@11497>   MOVEQ #0,d0
0002887E <AmiBlitz3.ab2@11498>   MOVE.w d0,lastchar
00028880 <AmiBlitz3.ab2@11500>   TST.w D2
00028882 <AmiBlitz3.ab2@11501> RTS
00028884 <AmiBlitz3.ab2@11507>   MOVE.l (A2),D0
00028888 <AmiBlitz3.ab2@11510>   BEQ.w findlast__here
0002888A <AmiBlitz3.ab2@11511>   MOVEA.l D0,A2
0002888E <AmiBlitz3.ab2@11512> BRA.w findlast__loop
00028892 <AmiBlitz3.ab2@11515> BRA.w reget
00028894 <AmiBlitz3.ab2@11521>   MOVE.l (A2),-(A7)
00028898 <AmiBlitz3.ab2@11522>   BSR.w addlabel
0002889A <AmiBlitz3.ab2@11523>   MOVE.l (A7)+,(A2)
0002889C <AmiBlitz3.ab2@11524> RTS
000288A2 <AmiBlitz3.ab2@11529>   CLR.l fp0addr
000288A8 <AmiBlitz3.ab2@11530>   TST.w dirmode
000288AC <AmiBlitz3.ab2@11531>    BNE.w illdirerr
000288AE <AmiBlitz3.ab2@11532>   MOVEQ.l #$00,D0
000288B0 <AmiBlitz3.ab2@11533>   MOVE.w D7,D0
000288B2 <AmiBlitz3.ab2@11534>   ADD.w D2,D0
000288B4 <AmiBlitz3.ab2@11535>   ADDQ.w #1,D0
000288B6 <AmiBlitz3.ab2@11536>   MOVE.w D0,D2
000288B8 <AmiBlitz3.ab2@11537>   ADDQ.l #2,d0
000288BA <AmiBlitz3.ab2@11538>   MOVEQ.l #$01,D1
000288C0 <AmiBlitz3.ab2@11539>   MOVEA.l _execbase,A6
000288C6 <AmiBlitz3.ab2@11540>   MOVE.l mempool2,a0
000288CA <AmiBlitz3.ab2@11541>   JSR _AllocPooled(a6)
000288D0 <AmiBlitz3.ab2@11543>   MOVE.l lastlabel,a2
000288D2 <AmiBlitz3.ab2@11544>   MOVE.l D0,(A2)
000288D4 <AmiBlitz3.ab2@11545>   MOVE.l d0,a0
000288D6 <AmiBlitz3.ab2@11546>   CLR.l (a0)
000288DC <AmiBlitz3.ab2@11547>   MOVE.l a0,lastlabel
000288DE <AmiBlitz3.ab2@11548>   MOVE.l d0,A2
000288E2 <AmiBlitz3.ab2@11549>   LEA -$1(A0,D7.W),A0
000288E4 <AmiBlitz3.ab2@11550>   MOVE.b D2,(A0)+
000288EA <AmiBlitz3.ab2@11551>   LEA ptr_parameterstore,A1
000288EC <AmiBlitz3.ab2@11552>   MOVEQ #0,d0
000288EE <AmiBlitz3.ab2@11553>   MOVEQ #0,d1
000288F0 <AmiBlitz3.ab2@11556>   MOVE.b (A1)+,d1
000288F4 <AmiBlitz3.ab2@11557>    BEQ 'l1
000288FA <AmiBlitz3.ab2@11558>    !hashalgo
000288FC <AmiBlitz3.ab2@11559>    MOVE.b d1,(A0)+
00028900 <AmiBlitz3.ab2@11560> BRA addlabel_loop2a
00028902 <AmiBlitz3.ab2@11563>    CLR.b (a0)+
00028908 <AmiBlitz3.ab2@11564>    LEA labelhash,a0
0002890E <AmiBlitz3.ab2@11565>    AND.l #hashsize,d0
00028910 <AmiBlitz3.ab2@11566>    ASL.l #2,d0
00028914 <AmiBlitz3.ab2@11567>    MOVE.l 0(a0,d0),d1
00028918 <AmiBlitz3.ab2@11568>    MOVE.l d1,$c(a2)
0002891C <AmiBlitz3.ab2@11569>    MOVE.l a2,0(a0,d0)
0002891E <AmiBlitz3.ab2@11570>    MOVEQ #0,d0
00028922 <AmiBlitz3.ab2@11571> BRA.w reget
00028928 <AmiBlitz3.ab2@11575>    TST.b newvariable
0002892C <AmiBlitz3.ab2@11576>    BNE addlabel
00028932 <AmiBlitz3.ab2@11579>   TST.w dirmode
00028936 <AmiBlitz3.ab2@11580>    BNE.w illdirerr
00028938 <AmiBlitz3.ab2@11581>   MOVEQ.l #$00,D0
0002893A <AmiBlitz3.ab2@11582>   MOVE.w D7,D0
0002893C <AmiBlitz3.ab2@11583>   ADD.w D2,D0
0002893E <AmiBlitz3.ab2@11584>   ADDQ.w #1,D0
00028940 <AmiBlitz3.ab2@11585>   MOVE.w D0,D2
00028942 <AmiBlitz3.ab2@11586>   MOVEQ.l #$01,D1
00028948 <AmiBlitz3.ab2@11587>   MOVEA.l _execbase,A6
0002894E <AmiBlitz3.ab2@11588>   MOVE.l mempool2,a0
00028952 <AmiBlitz3.ab2@11589>   JSR _AllocPooled(a6)
00028954 <AmiBlitz3.ab2@11590>   MOVEA.l D0,A0
0002895A <AmiBlitz3.ab2@11592>   LEA varbase,a2
0002895C <AmiBlitz3.ab2@11593>   MOVE.l (a2),(a0)
0002895E <AmiBlitz3.ab2@11594>   MOVE.l A0,(A2)
00028960 <AmiBlitz3.ab2@11595>   MOVEA.l A0,A2
00028964 <AmiBlitz3.ab2@11596>   LEA -$1(A0,D7.W),A0
00028966 <AmiBlitz3.ab2@11597>   MOVE.b D2,(A0)+
0002896C <AmiBlitz3.ab2@11598>   LEA ptr_parameterstore,A1
0002896E <AmiBlitz3.ab2@11599>   MOVEQ #0,d0
00028970 <AmiBlitz3.ab2@11600>   MOVEQ #0,d1
00028972 <AmiBlitz3.ab2@11603>   MOVE.b (A1)+,d1
00028976 <AmiBlitz3.ab2@11604>    BEQ 'l12
0002897C <AmiBlitz3.ab2@11605>    !hashalgo
0002897E <AmiBlitz3.ab2@11606>    MOVE.b d1,(A0)+
00028982 <AmiBlitz3.ab2@11607> BRA 'l11
00028984 <AmiBlitz3.ab2@11610>   CLR.b (a0)+
0002898A <AmiBlitz3.ab2@11611>   LEA variablehash,a0
00028990 <AmiBlitz3.ab2@11612>    AND.l #hashsize,d0
00028992 <AmiBlitz3.ab2@11613>    ASL.l #2,d0
00028996 <AmiBlitz3.ab2@11614>    MOVE.l 0(a0,d0),d1
0002899A <AmiBlitz3.ab2@11615>    MOVE.l d1,$e(a2)
0002899E <AmiBlitz3.ab2@11616>    MOVE.l a2,0(a0,d0)
000289A0 <AmiBlitz3.ab2@11617>    MOVEQ #0,d0
000289A4 <AmiBlitz3.ab2@11618> BRA.w reget
000289AA <AmiBlitz3.ab2@11622>   TST.w dirmode
000289AE <AmiBlitz3.ab2@11623>    BNE.w illdirerr
000289B0 <AmiBlitz3.ab2@11630>   MOVEQ.l #$00,D0
000289B2 <AmiBlitz3.ab2@11631>   MOVE.w D7,D0
000289B4 <AmiBlitz3.ab2@11632>   ADD.w D2,D0
000289B6 <AmiBlitz3.ab2@11633>   ADDQ.w #1,D0
000289B8 <AmiBlitz3.ab2@11634>   MOVE.w D0,D2
000289BA <AmiBlitz3.ab2@11635>   MOVEQ.l #$01,D1
000289C0 <AmiBlitz3.ab2@11636>   MOVEA.l _execbase,A6
000289C6 <AmiBlitz3.ab2@11637>   MOVE.l mempool2,a0
000289CA <AmiBlitz3.ab2@11638>   JSR _AllocPooled(a6)
000289CC <AmiBlitz3.ab2@11640>   MOVEA.l D0,A0
000289CE <AmiBlitz3.ab2@11641>   MOVE.l A0,(A2)
000289D0 <AmiBlitz3.ab2@11642>   CLR.l (a0)
000289D4 <AmiBlitz3.ab2@11643>   CLR.l 8(a0)                                              ;clear next
000289D6 <AmiBlitz3.ab2@11644>   MOVEA.l A0,A2
000289DA <AmiBlitz3.ab2@11645>   LEA -$1(A0,D7.W),A0
000289DC <AmiBlitz3.ab2@11646>   MOVE.b D2,(A0)+                                          ;put in struct length
000289E2 <AmiBlitz3.ab2@11647>   LEA ptr_parameterstore,A1
000289E4 <AmiBlitz3.ab2@11648>   MOVEQ #0,d0
000289E6 <AmiBlitz3.ab2@11649>   MOVEQ #0,d1
000289E8 <AmiBlitz3.ab2@11652>   MOVE.b (A1)+,d1
000289EA <AmiBlitz3.ab2@11655>   MOVE.b d1,(A0)+
000289EE <AmiBlitz3.ab2@11656>   BNE.w addlabel_loop2
000289F2 <AmiBlitz3.ab2@11657> BRA.w reget
000289F4 <AmiBlitz3.ab2@11661>   MOVEQ.l #$13,D7
000289FA <AmiBlitz3.ab2@11662>   LEA constantbase,A2
000289FE <AmiBlitz3.ab2@11663> BRA.w findlab
00028A00 <AmiBlitz3.ab2@11667>   MOVEQ.l #$05+8,D7                                        ;#5,d7 org source
00028A06 <AmiBlitz3.ab2@11668>   LEA xinclude_base,A2
00028A0A <AmiBlitz3.ab2@11669> BRA.w findlab
00028A0C <AmiBlitz3.ab2@11673>   MOVEQ.l #$09,D7
00028A12 <AmiBlitz3.ab2@11674>   LEA firstconst,A2
00028A16 <AmiBlitz3.ab2@11675> BRA.w findlab
00028A18 <AmiBlitz3.ab2@11679>   MOVEQ.l #$0d,D7                                          ;find macro
00028A1E <AmiBlitz3.ab2@11680>   LEA macrobase,A2
00028A22 <AmiBlitz3.ab2@11681> BRA.w findlab
00028A28 <AmiBlitz3.ab2@11685>   LEA labelhash,A2
00028A2A <AmiBlitz3.ab2@11686>   MOVEQ.l #$13,D7
00028A2C <AmiBlitz3.ab2@11687>   EXT.l d2
00028A32 <AmiBlitz3.ab2@11688>   LEA ptr_parameterstore,A0
00028A34 <AmiBlitz3.ab2@11689>   MOVEQ #0,d0
00028A36 <AmiBlitz3.ab2@11690>   MOVEQ #0,d1
00028A38 <AmiBlitz3.ab2@11693>     MOVE.b (a0)+,d1
00028A3C <AmiBlitz3.ab2@11694>     BEQ 'l15
00028A42 <AmiBlitz3.ab2@11695>     !hashalgo
00028A46 <AmiBlitz3.ab2@11696> BRA 'l20
00028A4C <AmiBlitz3.ab2@11699>   AND.l #hashsize,d0
00028A4E <AmiBlitz3.ab2@11700>   ASL.l #2,d0
00028A52 <AmiBlitz3.ab2@11701>   MOVE.l 0(a2,d0),d0
00028A56 <AmiBlitz3.ab2@11702> BRA 'l11
00028A5A <AmiBlitz3.ab2@11705>   MOVE.l $c(A2),D0                                         ;find label
00028A5E <AmiBlitz3.ab2@11708>   BEQ findlab__no
00028A60 <AmiBlitz3.ab2@11709>   MOVEA.l D0,A2
00028A62 <AmiBlitz3.ab2@11710>   MOVEQ.l #$00,D0
00028A66 <AmiBlitz3.ab2@11711>   MOVE.b -$1(A2,D7.l),D0
00028A6C <AmiBlitz3.ab2@11712>   LEA ptr_parameterstore,A0
00028A6E <AmiBlitz3.ab2@11713>   SUB.l D7,D0
00028A70 <AmiBlitz3.ab2@11714>   SUBQ.l #1,D0
00028A72 <AmiBlitz3.ab2@11715>   CMP.l D0,D2
00028A76 <AmiBlitz3.ab2@11716>    BNE.b 'l10
00028A7A <AmiBlitz3.ab2@11717>   LEA $0(A2,D7.W),A1
00028A7C <AmiBlitz3.ab2@11718>   SUBQ.l #1,D0
00028A7E <AmiBlitz3.ab2@11721>     MOVE.b (a1)+,d1
00028A80 <AmiBlitz3.ab2@11722>     CMP.b (a0)+,d1
00028A84 <AmiBlitz3.ab2@11724>     BNE.b 'l10
00028A88 <AmiBlitz3.ab2@11725>   DBF D0,'l201
00028A8C <AmiBlitz3.ab2@11727>   BSR.w reget
00028A8E <AmiBlitz3.ab2@11728>   CMP.w D0,D0
00028A90 <AmiBlitz3.ab2@11729> RTS
00028A92 <AmiBlitz3.ab2@11733>   MOVEQ.l #$0B,D7
00028A96 <AmiBlitz3.ab2@11734> BRA.w findlab
00028A9C <AmiBlitz3.ab2@11738>   LEA firstproc,A2
00028AA2 <AmiBlitz3.ab2@11739>   MOVE.l #$21+#funcentry_extend,D7
00028AA6 <AmiBlitz3.ab2@11740> BRA findlab
00028AAC <AmiBlitz3.ab2@11744>   LEA firstfor,A2
00028AAE <AmiBlitz3.ab2@11745>   MOVEQ.l #$11,D7
00028AB2 <AmiBlitz3.ab2@11746> BRA.w findlab
00028AB4 <AmiBlitz3.ab2@11750>   MOVEQ.l #$0F,D7
00028AB8 <AmiBlitz3.ab2@11751> BRA.w findlab
00028ABA <AmiBlitz3.ab2@11755>   MOVEQ.l #$0F+4,D7
00028AC0 <AmiBlitz3.ab2@11756>   TST.b newvariable
00028AC4 <AmiBlitz3.ab2@11757>    BNE.w findlab
00028ACA <AmiBlitz3.ab2@11758>   LEA variablehash,A2
00028AD0 <AmiBlitz3.ab2@11759>   LEA ptr_parameterstore,A0
00028AD2 <AmiBlitz3.ab2@11760>   MOVEQ #0,d0
00028AD4 <AmiBlitz3.ab2@11761>   MOVEQ #0,d1
00028AD6 <AmiBlitz3.ab2@11764>     MOVE.b (a0)+,d1
00028ADA <AmiBlitz3.ab2@11765>     BEQ 'l15
00028AE0 <AmiBlitz3.ab2@11766>     !hashalgo
00028AE4 <AmiBlitz3.ab2@11767> BRA 'l20
00028AEA <AmiBlitz3.ab2@11770>   AND.l #hashsize,d0
00028AEC <AmiBlitz3.ab2@11771>   ASL.l #2,d0
00028AF0 <AmiBlitz3.ab2@11772>   MOVE.l 0(a2,d0),d0
00028AF4 <AmiBlitz3.ab2@11773> BRA 'l11
00028AF8 <AmiBlitz3.ab2@11776>   MOVE.l $e(A2),D0                                         ;find label
00028AFC <AmiBlitz3.ab2@11779>   BEQ findlab__no
00028AFE <AmiBlitz3.ab2@11780>   MOVEA.l D0,A2
00028B00 <AmiBlitz3.ab2@11781>   MOVEQ.l #$00,D0
00028B04 <AmiBlitz3.ab2@11782>   MOVE.b -$1(A2,D7.W),D0
00028B0A <AmiBlitz3.ab2@11783>   LEA ptr_parameterstore,A0
00028B0C <AmiBlitz3.ab2@11784>   SUB.w D7,D0
00028B0E <AmiBlitz3.ab2@11785>   SUBQ.l #1,D0
00028B10 <AmiBlitz3.ab2@11786>   CMP.w D0,D2
00028B14 <AmiBlitz3.ab2@11787>    BNE.b 'l10
00028B18 <AmiBlitz3.ab2@11788>   LEA $0(A2,D7.W),A1
00028B1A <AmiBlitz3.ab2@11789>   SUBQ.l #1,D0
00028B1C <AmiBlitz3.ab2@11792>     MOVE.b (a1)+,d1
00028B1E <AmiBlitz3.ab2@11793>     CMP.b (a0)+,d1
00028B22 <AmiBlitz3.ab2@11795>     BNE.b 'l10
00028B26 <AmiBlitz3.ab2@11796>   DBF D0,'l201
00028B2A <AmiBlitz3.ab2@11798>   BSR.w reget
00028B2C <AmiBlitz3.ab2@11799>   CMP.w D0,D0
00028B2E <AmiBlitz3.ab2@11800> RTS
00028B30 <AmiBlitz3.ab2@11813>     MOVE.l (A2),D0                                         ;find label
00028B34 <AmiBlitz3.ab2@11814>      BEQ.b findlab__no
00028B36 <AmiBlitz3.ab2@11815>     MOVEA.l D0,A2
00028B38 <AmiBlitz3.ab2@11816>     MOVEQ.l #$00,D0
00028B3C <AmiBlitz3.ab2@11817>     MOVE.b -$1(A2,D7.W),D0
00028B3E <AmiBlitz3.ab2@11818>     SUB.l D7,D0
00028B40 <AmiBlitz3.ab2@11819>     SUBQ.l #1,D0
00028B42 <AmiBlitz3.ab2@11820>   CMP.w D0,D2
00028B46 <AmiBlitz3.ab2@11821>   BNE.b findlab__loop
00028B4A <AmiBlitz3.ab2@11823>   LEA $0(A2,D7.W),A1
00028B50 <AmiBlitz3.ab2@11824>   LEA ptr_parameterstore,A0
00028B52 <AmiBlitz3.ab2@11825>   SUBQ.l #1,D0
00028B54 <AmiBlitz3.ab2@11828>     MOVE.b (a1)+,d1
00028B56 <AmiBlitz3.ab2@11829>     CMP.b (a0)+,d1
00028B5A <AmiBlitz3.ab2@11831>     BNE.b findlab__loop
00028B5E <AmiBlitz3.ab2@11832>   DBF D0,findlab__loop2
00028B62 <AmiBlitz3.ab2@11834>   BSR.w reget
00028B64 <AmiBlitz3.ab2@11835>   CMP.w D0,D0
00028B66 <AmiBlitz3.ab2@11836> RTS
00028B6A <AmiBlitz3.ab2@11839>   BSR.w reget
00028B6C <AmiBlitz3.ab2@11840>   MOVEQ.l #-$01,D1
00028B6E <AmiBlitz3.ab2@11841> RTS
00028B74 <AmiBlitz3.ab2@11845>   MOVEA.l alllocals,A4
00028B7A <AmiBlitz3.ab2@11846>   CLR.l alllocals
00028B7E <AmiBlitz3.ab2@11850>     CMPA.w #$0,A4
00028B82 <AmiBlitz3.ab2@11851>      BEQ.b freeprocvs__done
00028B86 <AmiBlitz3.ab2@11852>     MOVEA.l $4(A4),A3
00028B8A <AmiBlitz3.ab2@11854>     MOVEA.l $8(A4),A3
00028B8C <AmiBlitz3.ab2@11856>     MOVEA.l A4,A1
00028B8E <AmiBlitz3.ab2@11857>     MOVEA.l (A4),A4
00028B90 <AmiBlitz3.ab2@11858>     MOVEQ.l #$0C,D0
00028B96 <AmiBlitz3.ab2@11859>     MOVEA.l _execbase,A6
00028B9C <AmiBlitz3.ab2@11860>     MOVE.l mempool,a0
00028BA0 <AmiBlitz3.ab2@11861>     JSR _FreePooled(A6)
00028BA4 <AmiBlitz3.ab2@11862> BRA.b freeprocvs__loop
00028BAA <AmiBlitz3.ab2@11865>   CLR.l firstglob                                          ;fix 2*aclearallvar called
00028BB0 <AmiBlitz3.ab2@11866>   CLR.l firstlocal
00028BB6 <AmiBlitz3.ab2@11867>   CLR.l sharebase
00028BBC <AmiBlitz3.ab2@11868>   TST.l mempool2
00028BC0 <AmiBlitz3.ab2@11869>   BEQ freeprocvs__done_l10
00028BC6 <AmiBlitz3.ab2@11871>   MOVEA.l _execbase,A6
00028BCC <AmiBlitz3.ab2@11872>   MOVE.l mempool2,a0
00028BD2 <AmiBlitz3.ab2@11873>   CLR.l mempool2
00028BD6 <AmiBlitz3.ab2@11874>   JSR _DeletePool(a6)
00028BDC <AmiBlitz3.ab2@11877>   MOVE.l _execbase,a6
00028BE2 <AmiBlitz3.ab2@11878>   MOVE.l #$10000,d0
00028BE8 <AmiBlitz3.ab2@11879>   MOVE.l #80000,d1
00028BEA <AmiBlitz3.ab2@11880>   MOVE.l d1,d2
00028BEE <AmiBlitz3.ab2@11881>   JSR _CreatePool(a6)
00028BF4 <AmiBlitz3.ab2@11882>   MOVE.l d0,mempool2
00028BF6 <AmiBlitz3.ab2@11883> RTS
00028BFA <AmiBlitz3.ab2@11887>   CMPA.w #$0,A3
00028BFE <AmiBlitz3.ab2@11888>    BEQ.w freevars__done
00028C00 <AmiBlitz3.ab2@11889>   MOVEA.l A3,A1
00028C02 <AmiBlitz3.ab2@11890>   MOVEA.l (A3),A3
00028C04 <AmiBlitz3.ab2@11891>   MOVEQ.l #$00,D0
00028C08 <AmiBlitz3.ab2@11892>   MOVE.b $E(A1),D0
00028C0E <AmiBlitz3.ab2@11893>   MOVEA.l _execbase,A6
00028C14 <AmiBlitz3.ab2@11894>   MOVE.l mempool2,a0
00028C18 <AmiBlitz3.ab2@11895>   JSR _FreePooled(A6)
00028C1C <AmiBlitz3.ab2@11896> BRA.w freevars
00028C20 <AmiBlitz3.ab2@11899>     CMPA.w #$0,A3
00028C24 <AmiBlitz3.ab2@11900>      BEQ.w freevars__done
00028C26 <AmiBlitz3.ab2@11901>     MOVEA.l A3,A1
00028C28 <AmiBlitz3.ab2@11902>     MOVEA.l (A3),A3
00028C2A <AmiBlitz3.ab2@11903>     MOVEQ.l #$00,D0
00028C2E <AmiBlitz3.ab2@11904>     MOVE.b $E+4(A1),D0
00028C34 <AmiBlitz3.ab2@11905>     MOVEA.l _execbase,A6
00028C3A <AmiBlitz3.ab2@11906>     MOVE.l mempool2,a0
00028C3E <AmiBlitz3.ab2@11907>     JSR _FreePooled(A6)
00028C42 <AmiBlitz3.ab2@11908> BRA.w freevarsb
00028C44 <AmiBlitz3.ab2@11911> RTS
00028C4A <AmiBlitz3.ab2@11915>   MOVEA.l currentlabeladdr,A0
00028C50 <AmiBlitz3.ab2@11916>   MOVE.l a0,lastlabel
00028C52 <AmiBlitz3.ab2@11917>   MOVEA.l (A0),A2
00028C54 <AmiBlitz3.ab2@11918>   CLR.l (A0)
00028C5A <AmiBlitz3.ab2@11919>   MOVEA.l _execbase,A6
00028C5E <AmiBlitz3.ab2@11922>   CMPA.w #$0,A2
00028C62 <AmiBlitz3.ab2@11923>    BEQ.w clearlabels__done
00028C66 <AmiBlitz3.ab2@11924>   MOVE.l $4(A2),D0
00028C6A <AmiBlitz3.ab2@11925>   BTST #$0,D0
00028C6E <AmiBlitz3.ab2@11926>    BNE.w clearlabels__skip
00028C70 <AmiBlitz3.ab2@11927>   MOVEA.l D0,A3
00028C74 <AmiBlitz3.ab2@11930>     CMPA.w #$0,A3
00028C78 <AmiBlitz3.ab2@11931>      BEQ.w clearlabels__skip
00028C7A <AmiBlitz3.ab2@11932>     MOVEA.l A3,A1
00028C7C <AmiBlitz3.ab2@11933>     MOVEA.l (A3),A3
00028C7E <AmiBlitz3.ab2@11934>     MOVEQ.l #$0C+2,D0                                      ;cancel fix
00028C84 <AmiBlitz3.ab2@11935>     MOVE.l mempool,a0
00028C88 <AmiBlitz3.ab2@11936>     JSR _FreePooled(A6)
00028C8C <AmiBlitz3.ab2@11937> BRA.w clearlabels__loop2
00028C8E <AmiBlitz3.ab2@11940>   MOVEQ.l #$00,D0
00028C92 <AmiBlitz3.ab2@11941>   MOVE.b $12(A2),D0
00028C94 <AmiBlitz3.ab2@11942>   MOVEA.l A2,A1
00028C96 <AmiBlitz3.ab2@11943>   MOVEA.l (A2),A2
00028C9C <AmiBlitz3.ab2@11944>   MOVE.l mempool2,a0
00028CA0 <AmiBlitz3.ab2@11946> BRA.w clearlabels__loop
00028CA2 <AmiBlitz3.ab2@11949> RTS
00028CA8 <AmiBlitz3.ab2@11953>   MOVEA.l firstpend,A3
00028CAE <AmiBlitz3.ab2@11954>   CLR.l firstpend
00028CB4 <AmiBlitz3.ab2@11955>   MOVEA.l _execbase,A6
00028CB8 <AmiBlitz3.ab2@11958>     CMPA.w #$0,A3
00028CBC <AmiBlitz3.ab2@11959>      BEQ.w freepends__done
00028CBE <AmiBlitz3.ab2@11960>     MOVEA.l A3,A1
00028CC0 <AmiBlitz3.ab2@11961>     MOVEQ.l #$08,D0
00028CC2 <AmiBlitz3.ab2@11962>     MOVEA.l (A3),A3
00028CC8 <AmiBlitz3.ab2@11963>     MOVE.l mempool,a0
00028CCC <AmiBlitz3.ab2@11964>     JSR _FreePooled(A6)
00028CD0 <AmiBlitz3.ab2@11965> BRA.w fpnd2
00028CD2 <AmiBlitz3.ab2@11968> RTS
00028CD8 <AmiBlitz3.ab2@11972>   MOVEA.l firstproc,A2
00028CDE <AmiBlitz3.ab2@11973>   CLR.l firstproc
00028CE4 <AmiBlitz3.ab2@11974>   MOVEA.l _execbase,A6
00028CE8 <AmiBlitz3.ab2@11977>     CMPA.w #$0,A2
00028CEC <AmiBlitz3.ab2@11978>      BEQ.w clearfunctionlist__done
00028CEE <AmiBlitz3.ab2@11979>     MOVEA.l A2,A1
00028CF0 <AmiBlitz3.ab2@11980>     MOVEA.l (A2),A2
00028CF2 <AmiBlitz3.ab2@11981>     MOVEQ.l #$00,D0
00028CF6 <AmiBlitz3.ab2@11982>     MOVE.b $20+#funcentry_extend(A1),D0
00028CFC <AmiBlitz3.ab2@11983>     MOVE.l mempool2,a0
00028D00 <AmiBlitz3.ab2@11984>     JSR _FreePooled(A6)
00028D04 <AmiBlitz3.ab2@11985> BRA.w clearfunctionlist__loop
00028D06 <AmiBlitz3.ab2@11988> RTS
00028D0A <AmiBlitz3.ab2@11992>   CMPA.w #$0,A2
00028D0E <AmiBlitz3.ab2@11993>    BEQ.w freetypes__done
00028D12 <AmiBlitz3.ab2@11994>   MOVEA.l $4(A2),A3
00028D16 <AmiBlitz3.ab2@11995>   CMPA.w #$FF,A3
00028D1A <AmiBlitz3.ab2@11996>    BEQ.w freetypes__noway
00028D1E <AmiBlitz3.ab2@12000>    BSR.w freevars
00028D20 <AmiBlitz3.ab2@12003>     MOVEA.l A2,A1
00028D22 <AmiBlitz3.ab2@12004>     MOVEA.l (A2),A2
00028D24 <AmiBlitz3.ab2@12005>     MOVEQ.l #$00,D0
00028D28 <AmiBlitz3.ab2@12006>     MOVE.b $A(A1),D0
00028D2E <AmiBlitz3.ab2@12007>     MOVEA.l _execbase,A6
00028D34 <AmiBlitz3.ab2@12008>     MOVE.l mempool2,a0
00028D38 <AmiBlitz3.ab2@12009>     JSR _FreePooled(A6)
00028D3C <AmiBlitz3.ab2@12010> BRA.w freetypes
00028D3E <AmiBlitz3.ab2@12013> RTS
00028D44 <AmiBlitz3.ab2@12017>   JSR uselib2
00028D4A <AmiBlitz3.ab2@12019>   CLR.w notshared
00028D50 <AmiBlitz3.ab2@12020>   CLR.w varmode
00028D56 <AmiBlitz3.ab2@12021>   MOVE.w proceduremode,D1
00028D5A <AmiBlitz3.ab2@12022>    BNE.w JL_0_8F4E
00028D60 <AmiBlitz3.ab2@12023>   LEA varbase,A2
00028D66 <AmiBlitz3.ab2@12024>   LEA ptr_parameterstore,a0
00028D6A <AmiBlitz3.ab2@12025>   CMP.b #$22,(a0)
00028D6E <AmiBlitz3.ab2@12026>   BNE JL_0_8E5E
00028D70 <AmiBlitz3.ab2@12027>   MOVEQ #0,d0
00028D76 <AmiBlitz3.ab2@12028> JMP error
00028D7A <AmiBlitz3.ab2@12031>   BSR.w findvariable
00028D7E <AmiBlitz3.ab2@12034>   BNE.w JL_0_8E7E
00028D84 <AmiBlitz3.ab2@12037>   MOVE.b flagmask+1,D1
00028D88 <AmiBlitz3.ab2@12038>   MOVE.b $7(A2),D3
00028D8A <AmiBlitz3.ab2@12039>   EOR.b D3,D1
00028D8E <AmiBlitz3.ab2@12040>   BNE 'l2
00028D96 <AmiBlitz3.ab2@12041>   CMP.b #2,nowdeclare
00028D9A <AmiBlitz3.ab2@12042>   BEQ errormsg_declaredtwice
00028D9E <AmiBlitz3.ab2@12043> BRA.w JL_0_8FA8
00028DA2 <AmiBlitz3.ab2@12046>   BSR.w findlab
00028DA6 <AmiBlitz3.ab2@12047>   BNE 'l1
00028DAE <AmiBlitz3.ab2@12048>   CMP.b #2,nowdeclare
00028DB2 <AmiBlitz3.ab2@12049>   BEQ errormsg_declaredtwice
00028DB4 <AmiBlitz3.ab2@12050>   CMP.w d0,d0
00028DB8 <AmiBlitz3.ab2@12053> BRA.w JL_0_8E62
00028DBA <AmiBlitz3.ab2@12056>    MOVE.l a2,-(a7)
00028DC0 <AmiBlitz3.ab2@12057>    LEA sharebase,a2
00028DC2 <AmiBlitz3.ab2@12058>    MOVEQ #$f+4,d7
00028DC6 <AmiBlitz3.ab2@12059>    BSR.w findlab
00028DCA <AmiBlitz3.ab2@12060>    BEQ 'l2x
00028DCC <AmiBlitz3.ab2@12061>    MOVE.l (a7)+,a2
00028DD0 <AmiBlitz3.ab2@12062> BRA 'cont
00028DD2 <AmiBlitz3.ab2@12065>   ADDQ.l #4,a7
00028DD8 <AmiBlitz3.ab2@12066>   CLR.w varmode
00028DDE <AmiBlitz3.ab2@12067>   MOVE.b flagmask+1,D1
00028DE2 <AmiBlitz3.ab2@12068>   MOVE.b $7(A2),D3
00028DE4 <AmiBlitz3.ab2@12069>   EOR.b D3,D1
00028DE8 <AmiBlitz3.ab2@12070>   BNE vardeclareerr
00028DEC <AmiBlitz3.ab2@12071> BRA JL_0_8FA8
00028DF2 <AmiBlitz3.ab2@12074>    MOVE.w nonew,D1
00028DF6 <AmiBlitz3.ab2@12075>    BNE.w nonewerr
00028DFC <AmiBlitz3.ab2@12076>    TST.b nowdeclare
00028E00 <AmiBlitz3.ab2@12077>    BNE 'l2
00028E06 <AmiBlitz3.ab2@12078>    TST.b declare2
00028E0A <AmiBlitz3.ab2@12079>    BEQ 'l1
00028E0E <AmiBlitz3.ab2@12080>    CMP.b #$2e,d0
00028E12 <AmiBlitz3.ab2@12081>    BEQ 'l2
00028E16 <AmiBlitz3.ab2@12082>    CMP.b #"$",d0
00028E1A <AmiBlitz3.ab2@12083>    BEQ 'l2
00028E1E <AmiBlitz3.ab2@12084> BRA vardeclareerr
00028E24 <AmiBlitz3.ab2@12087>   TST.b declare
00028E28 <AmiBlitz3.ab2@12088>    BNE vardeclareerr
00028E2C <AmiBlitz3.ab2@12091>   BSR.w addvariable
00028E32 <AmiBlitz3.ab2@12092>   NOT.w notshared
00028E34 <AmiBlitz3.ab2@12093>   MOVEA.l A2,A3
00028E3A <AmiBlitz3.ab2@12094>   MOVEA.l defaulttype,A2
00028E3E <AmiBlitz3.ab2@12095>   CMP.w #$2E,D0
00028E42 <AmiBlitz3.ab2@12096>    BEQ.w JL_0_8EB8
00028E46 <AmiBlitz3.ab2@12097>   CMP.w #$24,D0
00028E4A <AmiBlitz3.ab2@12098>    BNE.w JL_0_8ECA
00028E50 <AmiBlitz3.ab2@12099>   LEA newtype_string,A2
00028E54 <AmiBlitz3.ab2@12100>    BSR.w get1bytemain
00028E58 <AmiBlitz3.ab2@12101> BRA.w JL_0_8ECA
00028E5E <AmiBlitz3.ab2@12104> JMP JUMP_notypeerr
00028E62 <AmiBlitz3.ab2@12107>    BSR.w getparameter2
00028E68 <AmiBlitz3.ab2@12108>   LEA newtypebase,A2
00028E6C <AmiBlitz3.ab2@12109>    BSR.w findtype
00028E70 <AmiBlitz3.ab2@12110>    BNE.w notypeerr3
00028E76 <AmiBlitz3.ab2@12113>   CMPA.l #newtype_byte,A2
00028E7A <AmiBlitz3.ab2@12114>    BEQ.w JL_0_8EECb
00028E80 <AmiBlitz3.ab2@12115>   MOVE.w varmode,D1
00028E84 <AmiBlitz3.ab2@12116>    BNE.w JL_0_8EE4b
00028E8A <AmiBlitz3.ab2@12117>   ADDQ.w #1,globalvarpointer
00028E92 <AmiBlitz3.ab2@12120>   BCLR #$0,globalvarpointer+1
00028E96 <AmiBlitz3.ab2@12123>   MOVE.l A2,$A(A3)
00028E9E <AmiBlitz3.ab2@12124>   MOVE.w flagmask,$6(A3)                                  ;??????????
00028EA0 <AmiBlitz3.ab2@12126>   MOVEQ.l #$04,D1
00028EA8 <AmiBlitz3.ab2@12127>   BTST #$0,flagmask+1
00028EAC <AmiBlitz3.ab2@12128>    BNE.w JL_0_8F22b
00028EB4 <AmiBlitz3.ab2@12129>   BTST #$1,flagmask+1
00028EB8 <AmiBlitz3.ab2@12130>    BNE.w JL_0_8F22b
00028EC0 <AmiBlitz3.ab2@12131>   CMPI.l #$100,$4(A2)
00028EC4 <AmiBlitz3.ab2@12132>    BCC.w JL_0_8F22b
00028EC8 <AmiBlitz3.ab2@12133>   MOVE.w $8(A2),D1
00028ECE <AmiBlitz3.ab2@12136>   TST.w varmode
00028ED2 <AmiBlitz3.ab2@12137> BRA.w JL_0_8F3E
00028ED6 <AmiBlitz3.ab2@12146>   BSR.w getparameter2
00028EDC <AmiBlitz3.ab2@12147>   LEA newtypebase,A2
00028EE0 <AmiBlitz3.ab2@12148>    BSR.w findtype
00028EE4 <AmiBlitz3.ab2@12149>    BNE.w notypeerr
00028EEA <AmiBlitz3.ab2@12152>   CMPA.l #newtype_byte,A2
00028EEE <AmiBlitz3.ab2@12153>    BEQ.w JL_0_8EEC
00028EF4 <AmiBlitz3.ab2@12154>   MOVE.w varmode,D1
00028EF8 <AmiBlitz3.ab2@12155>    BNE.w JL_0_8EE4
00028EFE <AmiBlitz3.ab2@12156>   ADDQ.w #1,globalvarpointer
00028F06 <AmiBlitz3.ab2@12159>   BCLR #$0,globalvarpointer+1
00028F0A <AmiBlitz3.ab2@12162>   MOVE.l A2,$A(A3)
00028F12 <AmiBlitz3.ab2@12163>   MOVE.w flagmask,$6(A3)                                  ;??????????
00028F14 <AmiBlitz3.ab2@12164>   MOVEQ.l #$04,D1
00028F1C <AmiBlitz3.ab2@12165>   BTST #$0,flagmask+1
00028F20 <AmiBlitz3.ab2@12166>    BNE.w JL_0_8F22
00028F28 <AmiBlitz3.ab2@12167>   BTST #$1,flagmask+1
00028F2C <AmiBlitz3.ab2@12168>    BNE.w JL_0_8F22
00028F34 <AmiBlitz3.ab2@12169>   CMPI.l #$100,$4(A2)
00028F38 <AmiBlitz3.ab2@12170>    BCC.w JL_0_8F22
00028F3C <AmiBlitz3.ab2@12171>   MOVE.w $8(A2),D1
00028F42 <AmiBlitz3.ab2@12174>   TST.w varmode
00028F46 <AmiBlitz3.ab2@12175>    BEQ.w JL_0_8F3E
00028F48 <AmiBlitz3.ab2@12176>   NEG.w D1
00028F4E <AmiBlitz3.ab2@12177>   ADD.w D1,globalvarpointer
00028F56 <AmiBlitz3.ab2@12178>   MOVE.w globalvarpointer,$4(A3)
00028F58 <AmiBlitz3.ab2@12179> RTS
00028F60 <AmiBlitz3.ab2@12182>   MOVE.w globalvarpointer,$4(A3)
00028F66 <AmiBlitz3.ab2@12183>   ADD.w D1,globalvarpointer
00028F68 <AmiBlitz3.ab2@12184> RTS
00028F6E <AmiBlitz3.ab2@12188>   LEA firstglob,A2
00028F72 <AmiBlitz3.ab2@12189>    BSR.w findvariable2
00028F76 <AmiBlitz3.ab2@12192>   BNE.w JL_0_8F74
00028F7C <AmiBlitz3.ab2@12193>   MOVE.b flagmask+1,D1
00028F80 <AmiBlitz3.ab2@12194>   MOVE.b $7(A2),D3
00028F82 <AmiBlitz3.ab2@12195>   EOR.b D3,D1
00028F86 <AmiBlitz3.ab2@12196>    BEQ.w JL_0_8FA8
00028F8A <AmiBlitz3.ab2@12197>    BSR.w findlab
00028F8E <AmiBlitz3.ab2@12198> BRA.w JL_0_8F58
00028F96 <AmiBlitz3.ab2@12201>   MOVE.w #$FFFF,varmode
00028F9C <AmiBlitz3.ab2@12202>   MOVE.w globalvarpointer,-(A7)
00028FA6 <AmiBlitz3.ab2@12203>   MOVE.w locvaroff,globalvarpointer
00028FAC <AmiBlitz3.ab2@12204>   LEA firstlocal,A2
00028FB4 <AmiBlitz3.ab2@12205>   MOVE.b #1,newvariable
00028FB8 <AmiBlitz3.ab2@12206>    BSR.w JL_0_8E5E
00028FBE <AmiBlitz3.ab2@12207>   CLR.b newvariable
00028FC8 <AmiBlitz3.ab2@12208>   MOVE.w globalvarpointer,locvaroff
00028FCE <AmiBlitz3.ab2@12209>   MOVE.w (A7)+,globalvarpointer
00028FD0 <AmiBlitz3.ab2@12210> RTS
00028FD2 <AmiBlitz3.ab2@12213>   MOVEA.l A2,A3
00028FD6 <AmiBlitz3.ab2@12214>   CMP.w #$2E,D0
00028FDA <AmiBlitz3.ab2@12215>    BEQ.w JL_0_8FCE
00028FDE <AmiBlitz3.ab2@12216>   CMP.w #$24,D0
00028FE2 <AmiBlitz3.ab2@12217>    BNE.w JL_0_8FE8
00028FEA <AmiBlitz3.ab2@12218>   CMPI.l #newtype_string,$A(A3)
00028FEE <AmiBlitz3.ab2@12219>    BNE.w rongtypeerr
00028FF2 <AmiBlitz3.ab2@12220>    BSR.w get1bytemain
00028FF6 <AmiBlitz3.ab2@12221> BRA.w JL_0_8FE8
00028FFA <AmiBlitz3.ab2@12224>    BSR.w getparameter2
00029000 <AmiBlitz3.ab2@12225>   LEA newtypebase,A2
00029004 <AmiBlitz3.ab2@12226>    BSR.w findtype
00029008 <AmiBlitz3.ab2@12227>    BNE.w notypeerr
0002900C <AmiBlitz3.ab2@12228>   CMPA.l $A(A3),A2
00029010 <AmiBlitz3.ab2@12229>    BNE.w rongtypeerr
00029018 <AmiBlitz3.ab2@12231>   BTST #$0,flagmask+1
0002901C <AmiBlitz3.ab2@12232>    BEQ.w JL_0_8FFE
00029022 <AmiBlitz3.ab2@12233>   BTST #$0,$7(A3)
00029026 <AmiBlitz3.ab2@12234>    BEQ.w pointerr
0002902A <AmiBlitz3.ab2@12237>   MOVEA.l $A(A3),A2
0002902C <AmiBlitz3.ab2@12238> RTS
0002902E <AmiBlitz3.ab2@12242>    TST.l D3                                                ;newtype >32kb  .w to .l
00029032 <AmiBlitz3.ab2@12243>    BEQ.w JL_0_9042
0002903C <AmiBlitz3.ab2@12244>    MOVE.l destpointer,loada
00029040 <AmiBlitz3.ab2@12247> BRA JL_0_9032
00029044 <AmiBlitz3.ab2@12249>   CMP.w #$9,D3                                             ;_addq_arrays
00029048 <AmiBlitz3.ab2@12250>    BCC.w JL_0_9032
0002904E <AmiBlitz3.ab2@12251>   MOVE.w d3,arrayoffset
00029052 <AmiBlitz3.ab2@12252>   ANDI.w #$7,D3
00029054 <AmiBlitz3.ab2@12253>   LSL.w #8,D3
00029056 <AmiBlitz3.ab2@12254>   LSL.w #1,D3
0002905E <AmiBlitz3.ab2@12255>   ANDI.w #$F1FF,addqa0
00029064 <AmiBlitz3.ab2@12256>   OR.w D3,addqa0
0002906A <AmiBlitz3.ab2@12257>   MOVE.w addqa0,D1
0002906E <AmiBlitz3.ab2@12258> BRA.w writeword
00029074 <AmiBlitz3.ab2@12261>   CMP.l #$7fff,d3                                          ;>32kb newtypes
00029078 <AmiBlitz3.ab2@12262>   BGT longoffset
0002907E <AmiBlitz3.ab2@12263>   MOVE.w D3,leaa0a0+2
00029084 <AmiBlitz3.ab2@12264>   MOVE.w d3,arrayoffset
0002908A <AmiBlitz3.ab2@12265>   MOVE.l leaa0a0,D1
0002908E <AmiBlitz3.ab2@12266>   BSR.w writelong
00029090 <AmiBlitz3.ab2@12269> RTS
00029094 <AmiBlitz3.ab2@12272>    MOVE.w #$d5fc,d1
00029098 <AmiBlitz3.ab2@12273>    BSR writeword
0002909A <AmiBlitz3.ab2@12274>    MOVE.l d3,d1
0002909E <AmiBlitz3.ab2@12275>    BSR.w writelong
000290A0 <AmiBlitz3.ab2@12276> RTS
000290A4 <AmiBlitz3.ab2@12280>   Dc.w $b0ad,0000                                          ;cmp.l $0(A5),D0    ;nooptimize
000290A8 <AmiBlitz3.ab2@12283>    BCS.w arrchk3                                           
000290AE <AmiBlitz3.ab2@12284>    JSR $20000                                              ;jsr 0
000290B4 <AmiBlitz3.ab2@12290>   TST.b fast
000290B8 <AmiBlitz3.ab2@12291>   BEQ 'l1
000290BA <AmiBlitz3.ab2@12292>    MOVEQ #0,d1                                             ;faster arrays
000290C0 <AmiBlitz3.ab2@12293>    MOVE.w regnum,d2
000290C2 <AmiBlitz3.ab2@12294>    MOVE.w d2,d1
000290C4 <AmiBlitz3.ab2@12295>    LSL.w #8,d1
000290C6 <AmiBlitz3.ab2@12296>    LSL.w #4,d1
000290C8 <AmiBlitz3.ab2@12297>    ADD.w d2,d1
000290CE <AmiBlitz3.ab2@12298>    OR.l #$4c2d0000,d1
000290D4 <AmiBlitz3.ab2@12299>    TST.w varmode
000290D8 <AmiBlitz3.ab2@12300>    BEQ 'l1a
000290DC <AmiBlitz3.ab2@12301>    BCLR #16,d1
000290E0 <AmiBlitz3.ab2@12304>    BSR writelong
000290E4 <AmiBlitz3.ab2@12305>    MOVE.w $4(A7),D1
000290E8 <AmiBlitz3.ab2@12306>    BSR.w writeword
000290EE <AmiBlitz3.ab2@12307>    MOVE.w regnum,D1
000290F0 <AmiBlitz3.ab2@12308>   SUBQ.w #1,D1
000290F2 <AmiBlitz3.ab2@12309>   LSL.w #8,D1
000290F4 <AmiBlitz3.ab2@12310>   LSL.w #1,D1
000290F8 <AmiBlitz3.ab2@12311>   ORI.w #$D080,D1
000290FE <AmiBlitz3.ab2@12312>   OR.w regnum,D1
00029102 <AmiBlitz3.ab2@12313>    BSR.w writeword
00029104 <AmiBlitz3.ab2@12314> RTS
0002910A <AmiBlitz3.ab2@12317>   MOVE.w regnum,D2
0002910E <AmiBlitz3.ab2@12318>   MOVE.w arrmul1(PC),D1
00029110 <AmiBlitz3.ab2@12319>   OR.w D2,D1
00029112 <AmiBlitz3.ab2@12320>   SUBQ.w #1,D1
00029116 <AmiBlitz3.ab2@12321>    BSR.w writeword
0002911A <AmiBlitz3.ab2@12322>   MOVE.w arrmul2(PC),D1
0002911C <AmiBlitz3.ab2@12323>   OR.w D2,D1
0002911E <AmiBlitz3.ab2@12324>   MOVE.w D2,D3
00029120 <AmiBlitz3.ab2@12325>   SUBQ.w #1,D3
00029122 <AmiBlitz3.ab2@12326>   LSL.w #8,D3
00029124 <AmiBlitz3.ab2@12327>   LSL.w #1,D3
00029126 <AmiBlitz3.ab2@12328>   OR.w D3,D1
0002912A <AmiBlitz3.ab2@12329>    BSR.w writeword
0002912E <AmiBlitz3.ab2@12330>   MOVE.w arrmul3(PC),D1
00029130 <AmiBlitz3.ab2@12331>   MOVE.w D2,D3
00029132 <AmiBlitz3.ab2@12332>   LSL.w #8,D3
00029134 <AmiBlitz3.ab2@12333>   LSL.w #1,D3
00029136 <AmiBlitz3.ab2@12334>   OR.w D3,D1
0002913A <AmiBlitz3.ab2@12335>    BSR.w pokewda5s
0002913E <AmiBlitz3.ab2@12336>   MOVE.w $4(A7),D1
00029140 <AmiBlitz3.ab2@12337>   ADDQ.w #2,D1
00029144 <AmiBlitz3.ab2@12338>    BSR.w writeword
00029148 <AmiBlitz3.ab2@12339>   MOVE.w arrmul4(PC),D1
0002914A <AmiBlitz3.ab2@12340>   MOVE.w D2,D3
0002914C <AmiBlitz3.ab2@12341>   SUBQ.w #1,D3
0002914E <AmiBlitz3.ab2@12342>   LSL.w #8,D3
00029150 <AmiBlitz3.ab2@12343>   LSL.w #1,D3
00029152 <AmiBlitz3.ab2@12344>   OR.w D3,D1
00029156 <AmiBlitz3.ab2@12345>    BSR.w pokewda5s
0002915A <AmiBlitz3.ab2@12346>   MOVE.w $4(A7),D1
0002915E <AmiBlitz3.ab2@12347>    BSR.w writeword
00029162 <AmiBlitz3.ab2@12348>   MOVE.w arrmul5(PC),D1
00029164 <AmiBlitz3.ab2@12349>   OR.w D2,D1
00029166 <AmiBlitz3.ab2@12350>   SUBQ.w #1,D1
0002916A <AmiBlitz3.ab2@12351>    BSR.w writeword
0002916E <AmiBlitz3.ab2@12352>   MOVE.w arrmul6(PC),D1
00029170 <AmiBlitz3.ab2@12353>   OR.w D2,D1
00029172 <AmiBlitz3.ab2@12354>   SUBQ.w #1,D1
00029176 <AmiBlitz3.ab2@12355>    BSR.w writeword
0002917A <AmiBlitz3.ab2@12356>   MOVE.w arrmul7(PC),D1
0002917C <AmiBlitz3.ab2@12357>   OR.w D2,D1
0002917E <AmiBlitz3.ab2@12358>   SUBQ.w #1,D1
00029180 <AmiBlitz3.ab2@12359>   MOVE.w D2,D3
00029182 <AmiBlitz3.ab2@12360>   LSL.w #8,D3
00029184 <AmiBlitz3.ab2@12361>   LSL.w #1,D3
00029186 <AmiBlitz3.ab2@12362>   OR.w D3,D1
0002918A <AmiBlitz3.ab2@12363>    BSR.w writeword
0002918E <AmiBlitz3.ab2@12364>   MOVE.w arrmul8(PC),D1
00029190 <AmiBlitz3.ab2@12365>   MOVE.w D2,D3
00029192 <AmiBlitz3.ab2@12366>   SUBQ.w #1,D3
00029194 <AmiBlitz3.ab2@12367>   LSL.w #8,D3
00029196 <AmiBlitz3.ab2@12368>   LSL.w #1,D3
00029198 <AmiBlitz3.ab2@12369>   OR.w D3,D1
0002919C <AmiBlitz3.ab2@12370>    BSR.w writeword
000291A2 <AmiBlitz3.ab2@12371>   MOVE.w regnum,D1
000291A4 <AmiBlitz3.ab2@12372>   SUBQ.w #1,D1
000291A6 <AmiBlitz3.ab2@12373>   LSL.w #8,D1
000291A8 <AmiBlitz3.ab2@12374>   LSL.w #1,D1
000291AC <AmiBlitz3.ab2@12375>   ORI.w #$D080,D1
000291B2 <AmiBlitz3.ab2@12376>   OR.w regnum,D1
000291B6 <AmiBlitz3.ab2@12377> BRA.w writeword
000291B8 <AmiBlitz3.ab2@12385> arrmul1:   MOVE.l d0,-(a7)                                ;write array access
000291BA <AmiBlitz3.ab2@12386> arrmul2:   MOVE  d0,d0
000291BE <AmiBlitz3.ab2@12387> arrmul3:   MULU 0(a5),d0                                  ;mulu   x+2(a5),d1  ;lo*lo
000291C2 <AmiBlitz3.ab2@12388> arrmul4:   MULU 0(a5),d0                                  ;mulu   x(a5),d0    ;hi*lo
000291C4 <AmiBlitz3.ab2@12390> arrmul5:   SWAP d0
000291C6 <AmiBlitz3.ab2@12391> arrmul6:   CLR d0
000291C8 <AmiBlitz3.ab2@12392> arrmul7:   ADD.l d0,d0
000291CA <AmiBlitz3.ab2@12393> arrmul8:   MOVE.l (a7)+,d0
000291CE <AmiBlitz3.ab2@12398> listcode1:  Dc.b $24,$6D :              Dc.b $00,$00       ;MOVEA.L $0000(A5),A2      ;pointer to start of array data
000291D2 <AmiBlitz3.ab2@12399> listcode2:  Dc.b $24,$6A,$FF,$E0                           ;MOVEA.L -$0020(A2),A2     ;pointer to current
000291D4 <AmiBlitz3.ab2@12400> listarfix:  Dc.b $50,$4A                                   ;ADDQ.W  #8,A2
000291DA <AmiBlitz3.ab2@12418>   CLR.l lastoffset_org
000291E0 <AmiBlitz3.ab2@12419>   BTST #$1,$7(A3)
000291E4 <AmiBlitz3.ab2@12420>    BEQ.w calcvar__notarr
000291EA <AmiBlitz3.ab2@12421>   MOVE.w notshared,D1
000291EE <AmiBlitz3.ab2@12422>    BNE.w noarrerr
000291F2 <AmiBlitz3.ab2@12423>    BSR.w get1bytemain
000291F6 <AmiBlitz3.ab2@12424>   CMP.w #$29,D0
000291FA <AmiBlitz3.ab2@12425>    BNE.w calcvar__notalist
00029200 <AmiBlitz3.ab2@12426>   BTST #$0,$6(A3)
00029204 <AmiBlitz3.ab2@12427>    BEQ.w nolisterr
0002920C <AmiBlitz3.ab2@12428>   MOVE.w $4(A3),listcode1+2
00029210 <AmiBlitz3.ab2@12429>   MOVE.l listcode1(PC),D1
00029214 <AmiBlitz3.ab2@12430>    BSR.w pokela5s
00029218 <AmiBlitz3.ab2@12431>   MOVE.l listcode2(PC),D1
0002921C <AmiBlitz3.ab2@12432>    BSR.w writelong
00029222 <AmiBlitz3.ab2@12433>   TST.b debugmode
00029226 <AmiBlitz3.ab2@12434>    BEQ.w calcvar__nolrerr
00029228 <AmiBlitz3.ab2@12438>   MOVE.l A2,-(A7)
0002922C <AmiBlitz3.ab2@12439>   MOVE.w #$C315,D1
00029230 <AmiBlitz3.ab2@12440>    BSR.w Atokejsr
00029232 <AmiBlitz3.ab2@12441>   MOVEA.l (A7)+,A2
00029236 <AmiBlitz3.ab2@12444>    MOVE.w listarfix(PC),D1                                 ;addq #8,a2
0002923A <AmiBlitz3.ab2@12446>    BSR.w writeword
0002923E <AmiBlitz3.ab2@12447> BRA.w calcvar__normalar
00029240 <AmiBlitz3.ab2@12450> calcvar__listoff:   Ds.w 1
00029246 <AmiBlitz3.ab2@12454>   CLR.w calcvar__listoff
0002924C <AmiBlitz3.ab2@12455>   BTST #$0,$6(A3)
00029250 <AmiBlitz3.ab2@12456>    BEQ.w calcvar__knop
00029258 <AmiBlitz3.ab2@12457>   MOVE.w #$0008,calcvar__listoff                            ;adjust size of one element if list.
0002925C <AmiBlitz3.ab2@12460>   MOVEM.l A2-A3,-(A7)
00029262 <AmiBlitz3.ab2@12461>   MOVE.w varmode,-(A7)
00029266 <AmiBlitz3.ab2@12462>   MOVE.w $8(A3),-(A7)                                       ;number of dims
0002926A <AmiBlitz3.ab2@12463>   MOVE.w $4(A3),-(A7)                                       ;varoff
0002926C <AmiBlitz3.ab2@12464>   MOVE.l A2,-(A7)
00029272 <AmiBlitz3.ab2@12465>   MOVE.w flagmask,-(A7)
0002927C <AmiBlitz3.ab2@12467>   MOVE.w oldqflag,instringon
00029282 <AmiBlitz3.ab2@12468>   MOVEA.l lastsourcepos,A5
00029286 <AmiBlitz3.ab2@12469>    BSR.w arreval
0002928C <AmiBlitz3.ab2@12470>   MOVE.w (A7)+,flagmask
00029294 <AmiBlitz3.ab2@12471>   MOVE.w $8(A7),varmode
0002929A <AmiBlitz3.ab2@12472>   TST.b debugmode
0002929E <AmiBlitz3.ab2@12473>    BEQ.w calcvar__noszchk
000292A0 <AmiBlitz3.ab2@12477>   MOVEA.l (A7)+,A2
000292A2 <AmiBlitz3.ab2@12478>   MOVEQ.l #$04,D1
000292AA <AmiBlitz3.ab2@12479>   BTST #$0,flagmask+1                                      ;pointer?
000292AE <AmiBlitz3.ab2@12480>    BNE.b calcvar__domul                                          ;yes, then use 4 byte mul...
000292B2 <AmiBlitz3.ab2@12481>   MOVE.w $8(A2),D1
000292B6 <AmiBlitz3.ab2@12484>   ADD.w calcvar__listoff(PC),D1
000292BA <AmiBlitz3.ab2@12485>   BSR.w JL_0_B6DE
000292C0 <AmiBlitz3.ab2@12486>   ADDQ.w #1,regnum
000292C2 <AmiBlitz3.ab2@12489>   ADDQ.w #4,(A7)
000292C6 <AmiBlitz3.ab2@12490>   TST.w $4(A7)
000292CA <AmiBlitz3.ab2@12491>    BEQ.w calcvar__isglob
000292CC <AmiBlitz3.ab2@12492>   SUBQ.w #8,(A7)                                           ;range check local array
000292D2 <AmiBlitz3.ab2@12495>   TST.b debugmode
000292D6 <AmiBlitz3.ab2@12496>    BEQ.w calcvar__noer1
000292DC <AmiBlitz3.ab2@12497>   MOVE.w regnum,D1
000292DE <AmiBlitz3.ab2@12498>   SUBQ.w #1,D1
000292E0 <AmiBlitz3.ab2@12499>   LSL.w #8,D1
000292E2 <AmiBlitz3.ab2@12500>   LSL.w #1,D1
000292E6 <AmiBlitz3.ab2@12501>   OR.w zarrchk(PC),D1
000292EA <AmiBlitz3.ab2@12502>    BSR.w pokewda5s                                         ;cmp.l x(a5),D regat
000292EC <AmiBlitz3.ab2@12503>   MOVE.w (A7),D1
000292F0 <AmiBlitz3.ab2@12504>    BSR.w writeword
000292F4 <AmiBlitz3.ab2@12505>   MOVE.l arrchk2(PC),D1
000292F8 <AmiBlitz3.ab2@12506>    BSR.w writelong
000292FC <AmiBlitz3.ab2@12507>   MOVE.w #$C309,D1
00029300 <AmiBlitz3.ab2@12508>    BSR.w Atokejsr
00029304 <AmiBlitz3.ab2@12511>   SUBQ.w #1,$2(A7)
00029308 <AmiBlitz3.ab2@12512>    BEQ.w calcvar__ardone
0002930C <AmiBlitz3.ab2@12513>   CMP.w #$2C,D0
00029310 <AmiBlitz3.ab2@12514>    BNE.w syntaxerr
00029316 <AmiBlitz3.ab2@12515>    TST.b fast
0002931A <AmiBlitz3.ab2@12516>    BNE 'l1
0002931E <AmiBlitz3.ab2@12517>    BSR.w arrevalchk
00029322 <AmiBlitz3.ab2@12518> BRA 'l2
00029326 <AmiBlitz3.ab2@12521>   BSR arreval
0002932E <AmiBlitz3.ab2@12524>   MOVE.w $4(A7),varmode
00029332 <AmiBlitz3.ab2@12525>   BSR.w JL_0_9052
00029336 <AmiBlitz3.ab2@12526> BRA.w calcvar__arloop
0002933A <AmiBlitz3.ab2@12530>   CMP.w #$29,D0
0002933E <AmiBlitz3.ab2@12531>    BNE.w syntaxerr
00029344 <AmiBlitz3.ab2@12532>   SUBQ.w #1,regnum
00029346 <AmiBlitz3.ab2@12533>   ADDQ.w #6,A7
0002934A <AmiBlitz3.ab2@12534>   MOVEM.l (A7)+,A2-A3
00029352 <AmiBlitz3.ab2@12535>   MOVE.w $4(A3),movea5a0+2
00029358 <AmiBlitz3.ab2@12536>   MOVE.l movea5a0,D1
0002935C <AmiBlitz3.ab2@12537>    BSR.w pokela5s
00029362 <AmiBlitz3.ab2@12538>   MOVE.w regnum,D1
00029366 <AmiBlitz3.ab2@12539>   ORI.w #$D5C0,D1                                          ;add.l Dr,a2
0002936A <AmiBlitz3.ab2@12540>    BSR.w writeword
00029370 <AmiBlitz3.ab2@12541>   BTST #$0,$6(A3)
00029374 <AmiBlitz3.ab2@12542>    BEQ.w calcvar__normalar
00029378 <AmiBlitz3.ab2@12546>   MOVE.w listarfix(PC),D1
0002937C <AmiBlitz3.ab2@12547>    BSR.w writeword
00029380 <AmiBlitz3.ab2@12550>   BSR.w get1bytemain
00029386 <AmiBlitz3.ab2@12554>   BTST #$0,$7(A3)
0002938A <AmiBlitz3.ab2@12555>    BEQ.w calcvar__noppnt
0002938E <AmiBlitz3.ab2@12556>   CMP.w #$5C,D0
00029392 <AmiBlitz3.ab2@12557>    BNE.w calcvar__pmskip
00029396 <AmiBlitz3.ab2@12558>   MOVE.w calcvar__pfix(PC),D1
0002939A <AmiBlitz3.ab2@12559>    BSR.w writeword
0002939E <AmiBlitz3.ab2@12562>   MOVE.w #$8000,D2
000293A2 <AmiBlitz3.ab2@12563> BRA.w calcvar__loopml
000293A6 <AmiBlitz3.ab2@12566>   MOVE.w #$C000,D2
000293AA <AmiBlitz3.ab2@12567> BRA.w calcvar__loopml
000293AC <AmiBlitz3.ab2@12571> calcvar__pfix:   Dc.b $24,$52                                   ;MOVEA.L (A2),A2
000293B0 <AmiBlitz3.ab2@12576>   CMP.w #$28,D0
000293B4 <AmiBlitz3.ab2@12577>    BEQ.w noarrerr
000293BC <AmiBlitz3.ab2@12578>   CMPI.l #$100,$4(A2)
000293C0 <AmiBlitz3.ab2@12579>    BCS.w calcvar__simpvar
000293C6 <AmiBlitz3.ab2@12580>   BTST #$0,$7(A3)
000293CA <AmiBlitz3.ab2@12581>    BEQ.w calcvar__notap
000293CE <AmiBlitz3.ab2@12585>   CMP.w #$5C,D0
000293D2 <AmiBlitz3.ab2@12586>    BEQ.w calcvar__notap
000293D4 <AmiBlitz3.ab2@12587>   MOVEQ.l #$00,D2
000293D8 <AmiBlitz3.ab2@12588> BRA.w calcvar__simpvar2
000293DC <AmiBlitz3.ab2@12591>   MOVE.w #$8000,D2
000293E4 <AmiBlitz3.ab2@12592>   MOVE.w $4(A3),movea5a0+2
000293EA <AmiBlitz3.ab2@12593>   MOVE.l movea5a0,D1
000293EE <AmiBlitz3.ab2@12594>    BSR.w pokela5s                                         ;move.l x(a5),a2
000293F4 <AmiBlitz3.ab2@12596>    TST.b debugmode
000293F8 <AmiBlitz3.ab2@12597>    BEQ.w 'skip
000293FC <AmiBlitz3.ab2@12598>    MOVE.w #$c320,D1
00029402 <AmiBlitz3.ab2@12599>    JSR Atokejsr
00029404 <AmiBlitz3.ab2@12603>   MOVEQ.l #$00,D3
00029408 <AmiBlitz3.ab2@12606>   CMP.w #$5C,D0
0002940C <AmiBlitz3.ab2@12607>    BNE.w calcvar__done
00029414 <AmiBlitz3.ab2@12608>   CMPI.l #$100,$4(A2)
00029418 <AmiBlitz3.ab2@12609>    BCS.w rongtypeerr
0002941A <AmiBlitz3.ab2@12610>   MOVE.w D2,-(A7)
0002941E <AmiBlitz3.ab2@12611>    BSR.w getparameter2
00029422 <AmiBlitz3.ab2@12612>    BEQ.w syntaxerr
00029424 <AmiBlitz3.ab2@12613>   ADDQ.w #4,A2
00029428 <AmiBlitz3.ab2@12614>    BSR.w findvariable2
0002942C <AmiBlitz3.ab2@12615>    BNE.w noofferr
0002942E <AmiBlitz3.ab2@12616>   MOVE.w (A7)+,D2
00029430 <AmiBlitz3.ab2@12617>   MOVEA.l A2,A3                                             ;pointer to offset
00029434 <AmiBlitz3.ab2@12618>   MOVEA.l $A(A3),A2                                         ;pointer to type
00029436 <AmiBlitz3.ab2@12619>   MOVEQ #0,d1
0002943A <AmiBlitz3.ab2@12620>   MOVE.w 4(a3),d1
0002943C <AmiBlitz3.ab2@12621>   ADD.l d1,d3
00029442 <AmiBlitz3.ab2@12623>   MOVE.l A3,lastoffset_org
00029446 <AmiBlitz3.ab2@12624>   CMP.w #$5B,D0
0002944A <AmiBlitz3.ab2@12625>    BNE.w calcvar__realdone
00029450 <AmiBlitz3.ab2@12626>   BTST #$1,$7(A3)                                           ;a array [] in newtype is found
00029454 <AmiBlitz3.ab2@12627>    BEQ.w rongtypeerr
00029458 <AmiBlitz3.ab2@12628>    BSR.w JL_0_9004
0002945C <AmiBlitz3.ab2@12629>   MOVEM.l A2-A3,-(A7)
00029462 <AmiBlitz3.ab2@12630>   MOVE.w varmode,-(A7)
00029468 <AmiBlitz3.ab2@12631>   MOVE.l lastoffset_org,-(A7)
0002946E <AmiBlitz3.ab2@12632>   MOVE.w pusha2,D1
00029472 <AmiBlitz3.ab2@12633>    BSR.w writeword
00029474 <AmiBlitz3.ab2@12634>   MOVEQ.l #$03,D2                                          ;was 2 >32kb types
0002947E <AmiBlitz3.ab2@12635>   MOVE.l destpointer,deststore
00029484 <AmiBlitz3.ab2@12636>    MOVE.l rightsidetype,-(a7)
0002948A <AmiBlitz3.ab2@12637>    MOVE.l leftsidetype,-(a7)
00029490 <AmiBlitz3.ab2@12638>    CLR.l rightsidetype
00029496 <AmiBlitz3.ab2@12639>    CLR.l leftsidetype
0002949A <AmiBlitz3.ab2@12640>    BSR.w eval
000294A0 <AmiBlitz3.ab2@12641>    MOVE.l (a7)+,rightsidetype
000294A6 <AmiBlitz3.ab2@12642>    MOVE.l (a7)+,leftsidetype
000294AA <AmiBlitz3.ab2@12643>   CMP.w #$5D,D0
000294AE <AmiBlitz3.ab2@12644>    BNE.w syntaxerr
000294B4 <AmiBlitz3.ab2@12645>   TST.b fast                                               ;a2,-(a7) array
000294B8 <AmiBlitz3.ab2@12646>   BEQ calcvar__loop0_l10
000294BE <AmiBlitz3.ab2@12650>   MOVE.l destpointer,d1
000294C4 <AmiBlitz3.ab2@12651>   SUB.l deststore,d1
000294CA <AmiBlitz3.ab2@12652>   CMP.l #4,d1
000294CE <AmiBlitz3.ab2@12653>   BNE calcvar__loop0_l10
000294D4 <AmiBlitz3.ab2@12654>   MOVE.l destpointer,a4
000294DA <AmiBlitz3.ab2@12655>   MOVE.l -4(a4),-6(a4)
000294E0 <AmiBlitz3.ab2@12656>   SUBQ.l #2,destpointer
000294E6 <AmiBlitz3.ab2@12657>   CLR.l imm_addr
000294EC <AmiBlitz3.ab2@12658>   CLR.l load_var_addr
000294F0 <AmiBlitz3.ab2@12659> BRA calcvar__loop0_l20
000294F6 <AmiBlitz3.ab2@12662>   MOVE.w pulla2,D1
000294FA <AmiBlitz3.ab2@12663>    BSR.w writeword
00029500 <AmiBlitz3.ab2@12666>   MOVE.l (A7)+,lastoffset_org
00029506 <AmiBlitz3.ab2@12667>   MOVE.w (A7)+,varmode
0002950A <AmiBlitz3.ab2@12668>   MOVEM.l (A7)+,A2-A3
00029510 <AmiBlitz3.ab2@12674>   TST.w debugmode
00029514 <AmiBlitz3.ab2@12675>    BEQ.b calcvar__nobchk
00029518 <AmiBlitz3.ab2@12676>   MOVE.w $8(A3),D1
0002951C <AmiBlitz3.ab2@12677>    BEQ.b calcvar__nobchk                                   ;no [0] checks!
00029522 <AmiBlitz3.ab2@12681>   MOVE.w D1,brchkcode+2
00029528 <AmiBlitz3.ab2@12682>   MOVE.w regnum,D1
0002952A <AmiBlitz3.ab2@12683>   LSL.w #8,D1
0002952C <AmiBlitz3.ab2@12684>   LSL.w #1,D1
00029530 <AmiBlitz3.ab2@12685>   OR.w brchkcode0(PC),D1
00029536 <AmiBlitz3.ab2@12686>   MOVE.w D1,brchkcode
0002953A <AmiBlitz3.ab2@12687>   MOVE.l brchkcode(PC),D1
0002953E <AmiBlitz3.ab2@12688>    BSR.w writelong
00029542 <AmiBlitz3.ab2@12689>   MOVE.l brchkcode+4(PC),D1
00029546 <AmiBlitz3.ab2@12690>    BSR.w writelong
0002954A <AmiBlitz3.ab2@12691>   MOVE.w brchkcode+8(PC),D1
0002954E <AmiBlitz3.ab2@12692>    BSR.w writeword
00029550 <AmiBlitz3.ab2@12695>   MOVEQ.l #$04,D1
00029556 <AmiBlitz3.ab2@12696>   BTST #$0,$7(A3)
0002955A <AmiBlitz3.ab2@12697>    BNE.w calcvar__dothemul
0002955E <AmiBlitz3.ab2@12698>   MOVE.w $8(A2),D1
00029562 <AmiBlitz3.ab2@12701>   BSR.w JL_0_B6DE
00029568 <AmiBlitz3.ab2@12702>   MOVE.w addrega2,D1
0002956E <AmiBlitz3.ab2@12703>   OR.w regnum,D1
00029572 <AmiBlitz3.ab2@12704>    OR.w #$100,d1                                           ;>32kb types
00029576 <AmiBlitz3.ab2@12705>    BSR.w writeword
0002957A <AmiBlitz3.ab2@12706>    BSR.w get1bytemain
0002957C <AmiBlitz3.ab2@12707>   MOVEQ.l #$00,D3
00029580 <AmiBlitz3.ab2@12708>   MOVE.w #$8000,D2
00029586 <AmiBlitz3.ab2@12711>   BTST #$0,$7(A3)
0002958A <AmiBlitz3.ab2@12712>    BNE.w calcvar__pointer
0002958E <AmiBlitz3.ab2@12713> BRA.w calcvar__loop0
00029592 <AmiBlitz3.ab2@12717>  CMP.w #$5C,D0
00029596 <AmiBlitz3.ab2@12718>    BNE.w calcvar__done3
00029598 <AmiBlitz3.ab2@12719>   TST.w D3
0002959C <AmiBlitz3.ab2@12720>    BNE.w calcvar__pskip
000295A2 <AmiBlitz3.ab2@12721>   MOVE.w movea0,D1
000295A6 <AmiBlitz3.ab2@12722>    BSR.w writeword
000295AA <AmiBlitz3.ab2@12723> BRA.w calcvar__pmore
000295B0 <AmiBlitz3.ab2@12726>   MOVE.w D3,movea0a0+2
000295B6 <AmiBlitz3.ab2@12727>   MOVE.l movea0a0,D1
000295BA <AmiBlitz3.ab2@12728>    BSR.w writelong
000295C0 <AmiBlitz3.ab2@12731>   BTST #$2,$7(A3)
000295C4 <AmiBlitz3.ab2@12732>    BEQ.w calcvar__loopml
000295CA <AmiBlitz3.ab2@12733>   MOVE.l adda0a0,D1
000295CE <AmiBlitz3.ab2@12734>    BSR.w writelong
000295D2 <AmiBlitz3.ab2@12735> BRA.w calcvar__loopml
000295D6 <AmiBlitz3.ab2@12738>   BSET #$E,D2
000295DC <AmiBlitz3.ab2@12739>   BTST #$2,$7(A3)
000295E0 <AmiBlitz3.ab2@12740>    BNE.w calcvar__done
000295E4 <AmiBlitz3.ab2@12741>   BSET #$D,D2
000295EC <AmiBlitz3.ab2@12744>   CMPI.l #$100,$4(A2)
000295F0 <AmiBlitz3.ab2@12745>    BCC.w calcvar__done2
000295F4 <AmiBlitz3.ab2@12746>   MOVE.b $7(A2),D2
000295F8 <AmiBlitz3.ab2@12749> BRA.w JL_0_9004
000295FC <AmiBlitz3.ab2@12752>   MOVE.w $6(A2),D2
00029600 <AmiBlitz3.ab2@12755>   MOVE.w $4(A3),D3
00029606 <AmiBlitz3.ab2@12756>   BTST #$0,$7(A3)
0002960A <AmiBlitz3.ab2@12757>    BEQ.w calcvar__nopoint
0002960E <AmiBlitz3.ab2@12758>   BSET #$E,D2
00029610 <AmiBlitz3.ab2@12761> RTS
00029614 <AmiBlitz3.ab2@12765> brchkcode0:  Dc.b $B0,$7C,$00,$00                          ;CMP.W   #$0000,D0
00029618 <AmiBlitz3.ab2@12766> brchkcode:   Dc.b $B0,$7C :             Dc.b $00,$00       ;CMP.W   #$0000,D0
0002961A <AmiBlitz3.ab2@12767>              Dc.b $65,$04                                  ;BCS.B   brchkcode__ok
0002961C <AmiBlitz3.ab2@12768>              Dc.b $70,$02                                  ;MOVEQ   #$02,D0
0002961E <AmiBlitz3.ab2@12769>              Dc.b $4E,$40                                  ;TRAP    #00
00029624 <AmiBlitz3.ab2@12777>   TST.w varmode
00029628 <AmiBlitz3.ab2@12778>    BEQ.w writeword
0002962C <AmiBlitz3.ab2@12779>   BCLR #$0,D1
00029630 <AmiBlitz3.ab2@12780> BRA.w writeword
00029636 <AmiBlitz3.ab2@12783>   TST.w varmode
0002963A <AmiBlitz3.ab2@12784>    BEQ.w writeword
0002963E <AmiBlitz3.ab2@12785>   BCLR #$9,D1
00029642 <AmiBlitz3.ab2@12786> BRA.w writeword
00029648 <AmiBlitz3.ab2@12789>   TST.w proceduremode
0002964C <AmiBlitz3.ab2@12790>    BEQ.w writelong
00029650 <AmiBlitz3.ab2@12791>   BCLR #$19,D1
00029654 <AmiBlitz3.ab2@12792> BRA.w writelong
0002965A <AmiBlitz3.ab2@12795>   TST.w varmode
0002965E <AmiBlitz3.ab2@12796>   BEQ.w writelong
00029662 <AmiBlitz3.ab2@12797>   BCLR #$10,D1
00029668 <AmiBlitz3.ab2@12800>   ADDQ.l #1,destpointer
00029670 <AmiBlitz3.ab2@12801>   BCLR #$0,destpointer+3
00029676 <AmiBlitz3.ab2@12802>   MOVEA.l destpointer,A4
0002967C <AmiBlitz3.ab2@12803>   CMPA.l destbufferend,A4
00029680 <AmiBlitz3.ab2@12804>    BCC.w writeword__overa
00029682 <AmiBlitz3.ab2@12805>   MOVE.l D1,(A4)+
00029688 <AmiBlitz3.ab2@12808>   MOVE.l A4,destpointer
0002968C <AmiBlitz3.ab2@12809>   CMPA.l bigpc(PC),A4
00029690 <AmiBlitz3.ab2@12810>    BHI.w writeword__nbp
00029692 <AmiBlitz3.ab2@12811> RTS
0002969A <AmiBlitz3.ab2@12814>   MOVE.w #$FFFF,dontwrite                                  ;#-1 org source
000296A0 <AmiBlitz3.ab2@12815>   CLR.b fast
000296A6 <AmiBlitz3.ab2@12816>   CLR.b fpu
000296AC <AmiBlitz3.ab2@12817>   CLR.b iee
000296AE <AmiBlitz3.ab2@12818>   ADDQ.w #4,A4
000296B2 <AmiBlitz3.ab2@12819> BRA.w writeword__msa
000296B8 <AmiBlitz3.ab2@12825>   ADDQ.l #1,destpointer
000296C0 <AmiBlitz3.ab2@12826>   BCLR #$0,destpointer+3
000296C6 <AmiBlitz3.ab2@12827>   MOVEA.l destpointer,A4
000296CC <AmiBlitz3.ab2@12828>   CMPA.l destbufferend,A4
000296D0 <AmiBlitz3.ab2@12829>    BCC.w writeword__over
000296D2 <AmiBlitz3.ab2@12830>   MOVE.w D1,(A4)+
000296D8 <AmiBlitz3.ab2@12833>   MOVE.l A4,destpointer
000296DC <AmiBlitz3.ab2@12834>   CMPA.l bigpc(PC),A4
000296E0 <AmiBlitz3.ab2@12835>    BHI.w writeword__nbp
000296E2 <AmiBlitz3.ab2@12836> RTS
000296E8 <AmiBlitz3.ab2@12839>   ADDQ.l #1,destpointer
000296F0 <AmiBlitz3.ab2@12840>   BCLR #$0,destpointer+3
000296F6 <AmiBlitz3.ab2@12841>   MOVEA.l destpointer,A4
000296FC <AmiBlitz3.ab2@12842>   CMPA.l destbufferend,A4
00029700 <AmiBlitz3.ab2@12843>    BCC.w writeword__over
00029702 <AmiBlitz3.ab2@12844>   MOVE.w D1,(A4)+
00029708 <AmiBlitz3.ab2@12845>   MOVE.l A4,destpointer
0002970C <AmiBlitz3.ab2@12846>   CMPA.l bigpc(PC),A4
00029710 <AmiBlitz3.ab2@12847>    BHI.w writeword__nbp
00029712 <AmiBlitz3.ab2@12848> RTS
00029718 <AmiBlitz3.ab2@12851>   TST.w cfetchmode
0002971C <AmiBlitz3.ab2@12852>   BNE.w writeword__nbp2
00029722 <AmiBlitz3.ab2@12853>   MOVE.l A4,bigpc
00029724 <AmiBlitz3.ab2@12856> RTS
0002972C <AmiBlitz3.ab2@12859>   MOVE.w #$FFFF,dontwrite                                  ;#-1 org source
0002972E <AmiBlitz3.ab2@12860>   ADDQ.w #2,A4
00029734 <AmiBlitz3.ab2@12861>   CLR.b fast
0002973A <AmiBlitz3.ab2@12862>   CLR.b fpu
00029740 <AmiBlitz3.ab2@12863>   CLR.b iee
00029744 <AmiBlitz3.ab2@12864> BRA.w writeword__ms
0002974A <AmiBlitz3.ab2@12868>   MOVEA.l destpointer,A4
00029750 <AmiBlitz3.ab2@12869>   CMPA.l destbufferend,A4
00029754 <AmiBlitz3.ab2@12870>    BCC.w writebyte__over
00029756 <AmiBlitz3.ab2@12871>   MOVE.b D1,(A4)+
0002975C <AmiBlitz3.ab2@12874>   MOVE.l A4,destpointer
00029760 <AmiBlitz3.ab2@12875>   CMPA.l bigpc(PC),A4
00029764 <AmiBlitz3.ab2@12876>    BHI.w writebyte__nbp
00029766 <AmiBlitz3.ab2@12877> RTS
0002976C <AmiBlitz3.ab2@12880>   TST.w cfetchmode
00029770 <AmiBlitz3.ab2@12881>    BNE.w writebyte__nbp2
00029776 <AmiBlitz3.ab2@12882>   MOVE.l A4,bigpc
00029778 <AmiBlitz3.ab2@12885> RTS
00029780 <AmiBlitz3.ab2@12888>   MOVE.w #-1,dontwrite
00029782 <AmiBlitz3.ab2@12889>   ADDQ.w #1,A4
00029788 <AmiBlitz3.ab2@12890>   CLR.b fast
0002978E <AmiBlitz3.ab2@12891>   CLR.b fpu
00029794 <AmiBlitz3.ab2@12892>   CLR.b iee
00029798 <AmiBlitz3.ab2@12893> BRA.w writebyte__ms
0002979C <AmiBlitz3.ab2@12896> bigpc:   Ds.l 1
0002979E <AmiBlitz3.ab2@12900>   MOVE.w (A0)+,D1
000297A2 <AmiBlitz3.ab2@12901>   BSR.w writeword
000297A4 <AmiBlitz3.ab2@12904>     CMPA.l A1,A0
000297A8 <AmiBlitz3.ab2@12905>     BCC.w pokecode__done
000297AA <AmiBlitz3.ab2@12906>       MOVE.w (A0)+,D1
000297AE <AmiBlitz3.ab2@12907>       BSR.w writeword
000297B2 <AmiBlitz3.ab2@12908> BRA.w pokecode__loop
000297B4 <AmiBlitz3.ab2@12911> RTS
000297B6 <AmiBlitz3.ab2@12914>   MOVE.w (A0)+,D1
000297BA <AmiBlitz3.ab2@12915>   BSR.w writeword
000297BC <AmiBlitz3.ab2@12916>   CMPA.l A1,A0
000297C0 <AmiBlitz3.ab2@12917>   BCS.w pokecode2
000297C2 <AmiBlitz3.ab2@12918> RTS
000297C8 <AmiBlitz3.ab2@12924>   TST.b iniffcommand
000297CC <AmiBlitz3.ab2@12925>   BEQ 'l1
000297D0 <AmiBlitz3.ab2@12926>     MOVE.w #$4880,D1
000297D6 <AmiBlitz3.ab2@12927>     OR.w regnum,D1
000297DA <AmiBlitz3.ab2@12928>     BSR writeword
000297DC <AmiBlitz3.ab2@12931> RTS
000297E0 <AmiBlitz3.ab2@12934>   BSR.w convert_byte_to_word
000297E6 <AmiBlitz3.ab2@12937>   TST.b iee
000297EA <AmiBlitz3.ab2@12938>   BEQ 'old
000297EE <AmiBlitz3.ab2@12939>   CMP.b #5,d2
000297F2 <AmiBlitz3.ab2@12940>   BEQ wtof
000297F6 <AmiBlitz3.ab2@12943>   MOVE.w #$48C0,D1
000297FC <AmiBlitz3.ab2@12944>   OR.w regnum,D1
00029800 <AmiBlitz3.ab2@12945> BRA.w writeword
00029802 <AmiBlitz3.ab2@12948>   MOVEQ #0,d0
00029808 <AmiBlitz3.ab2@12949>   MOVE.w regnum,d0
0002980A <AmiBlitz3.ab2@12950>   ASL.l #7,d0
00029810 <AmiBlitz3.ab2@12951>   MOVE.l #$f2005000,d1
00029812 <AmiBlitz3.ab2@12952>   OR.l d0,d1
00029814 <AmiBlitz3.ab2@12953>   ASL.l #1,d0
00029816 <AmiBlitz3.ab2@12954>   ASL.l #8,d0
00029818 <AmiBlitz3.ab2@12955>   OR.l d0,d1
0002981C <AmiBlitz3.ab2@12956> BRA writelong
00029820 <AmiBlitz3.ab2@12960>   BSR.w convert_byte_to_word
00029824 <AmiBlitz3.ab2@12963>   MOVE.w #$4840,D1
0002982A <AmiBlitz3.ab2@12964>   OR.w regnum,D1
0002982E <AmiBlitz3.ab2@12965>    BSR.w writeword
00029832 <AmiBlitz3.ab2@12966>   MOVE.w #$4240,D1
00029838 <AmiBlitz3.ab2@12967>   OR.w regnum,D1
0002983C <AmiBlitz3.ab2@12968> BRA.w writeword
00029840 <AmiBlitz3.ab2@12972>   CMP.w #$ffdc,d1
00029844 <AmiBlitz3.ab2@12973>   BNE 'negfpu
00029846 <AmiBlitz3.ab2@12974>   MOVEQ #0,d0
0002984C <AmiBlitz3.ab2@12975>   MOVE.w regnum,d0
0002984E <AmiBlitz3.ab2@12976>   ASL.l #7,d0
00029854 <AmiBlitz3.ab2@12977>   MOVE.l #$f2004000,d1
00029856 <AmiBlitz3.ab2@12978>   OR.l d0,d1
00029858 <AmiBlitz3.ab2@12979>   ASL.l #1,d0
0002985A <AmiBlitz3.ab2@12980>   ASL.l #8,d0
0002985C <AmiBlitz3.ab2@12981>   OR.l d0,d1
00029860 <AmiBlitz3.ab2@12982> BRA writelong
00029862 <AmiBlitz3.ab2@12986>   MOVEQ #0,d1
00029868 <AmiBlitz3.ab2@12987>   MOVE.w regnum,d1                                         ;fpu neg
0002986A <AmiBlitz3.ab2@12988>   ASL.l #7,d1
00029870 <AmiBlitz3.ab2@12989>   OR.l #$f200001a,d1
00029872 <AmiBlitz3.ab2@12990>   MOVE.l d0,-(a7)
00029874 <AmiBlitz3.ab2@12991>   MOVEQ #0,d0
0002987A <AmiBlitz3.ab2@12992>   MOVE.w regnum,d0
0002987C <AmiBlitz3.ab2@12993>   ASL.l #8,d0
0002987E <AmiBlitz3.ab2@12994>   ASL.l #2,d0
00029880 <AmiBlitz3.ab2@12995>   OR.l d0,d1
00029882 <AmiBlitz3.ab2@12996>   MOVE.l (a7)+,d0
00029886 <AmiBlitz3.ab2@12997> BRA writelong
0002988C <AmiBlitz3.ab2@13000>    TST.b iee
00029890 <AmiBlitz3.ab2@13001>    BNE wtof
00029894 <AmiBlitz3.ab2@13002>    BSR.w convert_byte_to_long
00029898 <AmiBlitz3.ab2@13005>    MOVE.w #$FFDC,D1
0002989E <AmiBlitz3.ab2@13008>    TST.b iee
000298A2 <AmiBlitz3.ab2@13009>    BNE ltof
000298A8 <AmiBlitz3.ab2@13010>    MOVE.w D1,libjsr+2
000298AC <AmiBlitz3.ab2@13011>    BSR.w JL_0_AD40
000298AE <AmiBlitz3.ab2@13012>   MOVE.l D4,D1
000298B2 <AmiBlitz3.ab2@13013>    BSR.w JL_0_AD38
000298B6 <AmiBlitz3.ab2@13014>   MOVE.w #$C900,D1
000298BA <AmiBlitz3.ab2@13015>    BSR.w Atokejsr
000298BE <AmiBlitz3.ab2@13016>    BSR.w JL_0_A352
000298C4 <AmiBlitz3.ab2@13017>   MOVE.l libjsr,D1
000298C8 <AmiBlitz3.ab2@13018>    BSR.w writelong
000298CC <AmiBlitz3.ab2@13019>    BSR.w JL_0_A36E
000298CE <AmiBlitz3.ab2@13020>   MOVE.l D5,D1
000298D2 <AmiBlitz3.ab2@13021> BRA.w JL_0_AD38
000298D4 <AmiBlitz3.ab2@13024> RTS
000298D8 <AmiBlitz3.ab2@13027>   MOVE.w #$C317,D1
000298DE <AmiBlitz3.ab2@13028>   TST.b typecheck
000298E2 <AmiBlitz3.ab2@13029>   BEQ 'l1
000298E8 <AmiBlitz3.ab2@13030>    TST.b notypecheck
000298EC <AmiBlitz3.ab2@13031>    BNE 'l1
000298F2 <AmiBlitz3.ab2@13032>    TST.l lasttoken
000298F8 <AmiBlitz3.ab2@13039>   TST.b debugmode
000298FC <AmiBlitz3.ab2@13040>    BEQ.w JL_0_9696
00029904 <AmiBlitz3.ab2@13041>   BTST #$7,overflowcheck
00029908 <AmiBlitz3.ab2@13042>    BEQ.w JL_0_9696
0002990E <AmiBlitz3.ab2@13043>   TST.w cfetchmode
00029912 <AmiBlitz3.ab2@13044>    BNE.w JL_0_9696
00029918 <AmiBlitz3.ab2@13045>   TST.w regnum
0002991C <AmiBlitz3.ab2@13046>    BEQ.w JL_0_968A
0002991E <AmiBlitz3.ab2@13047>   MOVE.w D1,-(A7)
00029922 <AmiBlitz3.ab2@13048>   MOVE.w JL_0_9698(PC),D1
00029926 <AmiBlitz3.ab2@13049>    BSR.w writeword
0002992C <AmiBlitz3.ab2@13050>   MOVE.w regnum,D1
00029930 <AmiBlitz3.ab2@13051>   OR.w L_0_969C(PC),D1
00029934 <AmiBlitz3.ab2@13052>    BSR.w writeword
00029936 <AmiBlitz3.ab2@13053>   MOVE.w (A7)+,D1
0002993A <AmiBlitz3.ab2@13054>    BSR.w JL_0_968A
0002993E <AmiBlitz3.ab2@13055>   MOVE.w L_0_969A(PC),D1
00029942 <AmiBlitz3.ab2@13056> BRA.w writeword
00029946 <AmiBlitz3.ab2@13060>   MOVEM.l D0-D7/A0-A6,-(A7)
0002994A <AmiBlitz3.ab2@13061>    BSR.w Atokejsr
0002994E <AmiBlitz3.ab2@13062>   MOVEM.l (A7)+,D0-D7/A0-A6
00029950 <AmiBlitz3.ab2@13065> RTS
00029952 <AmiBlitz3.ab2@13068>   MOVE.l D0,-(A7)
00029954 <AmiBlitz3.ab2@13071>   MOVE.l (A7)+,D0
00029956 <AmiBlitz3.ab2@13074>   MOVE.l D0,D0
0002995A <AmiBlitz3.ab2@13077>   BSR.w convert_word_to_long
00029960 <AmiBlitz3.ab2@13078>   TST.b iee
00029964 <AmiBlitz3.ab2@13079>   BEQ 'old
00029968 <AmiBlitz3.ab2@13080>   CMP.b #5,d2
0002996C <AmiBlitz3.ab2@13081>   BNE 'old
0002996E <AmiBlitz3.ab2@13082> RTS
00029972 <AmiBlitz3.ab2@13085> BRA.w JL_0_9600
00029976 <AmiBlitz3.ab2@13089>   MOVE.w #$C316,D1
0002997C <AmiBlitz3.ab2@13090>   TST.b typecheck
00029980 <AmiBlitz3.ab2@13091>   BEQ 'l1
00029986 <AmiBlitz3.ab2@13092>   TST.b peekaddrsize
0002998A <AmiBlitz3.ab2@13093>   BNE 'l1
00029990 <AmiBlitz3.ab2@13094>   TST.b notypecheck
00029994 <AmiBlitz3.ab2@13095>   BNE 'l1
0002999A <AmiBlitz3.ab2@13096>   TST.l lasttoken
0002999E <AmiBlitz3.ab2@13102> BRA.w JL_0_963A
000299A2 <AmiBlitz3.ab2@13106>   MOVE.w #$C318,D1
000299A8 <AmiBlitz3.ab2@13107>   TST.b typecheck
000299AC <AmiBlitz3.ab2@13108>   BEQ 'l1
000299B2 <AmiBlitz3.ab2@13109>   TST.b peekaddrsize
000299B6 <AmiBlitz3.ab2@13110>   BNE 'l1
000299BC <AmiBlitz3.ab2@13111>   TST.b notypecheck
000299C0 <AmiBlitz3.ab2@13112>   BNE 'l1
000299C6 <AmiBlitz3.ab2@13113>   TST.l lasttoken
000299CA <AmiBlitz3.ab2@13119> BRA.w JL_0_963A
000299CE <AmiBlitz3.ab2@13123>   MOVE.w #$C318,D1
000299D4 <AmiBlitz3.ab2@13124>   TST.b typecheck
000299D8 <AmiBlitz3.ab2@13125>   BEQ 'l1
000299DE <AmiBlitz3.ab2@13126>   TST.b notypecheck
000299E2 <AmiBlitz3.ab2@13127>   BNE 'l1
000299E8 <AmiBlitz3.ab2@13128>   TST.l lasttoken
000299EC <AmiBlitz3.ab2@13134>   BSR.w JL_0_963A
000299F0 <AmiBlitz3.ab2@13135> BRA.w convert_word_to_quick
000299F4 <AmiBlitz3.ab2@13139> BRA.w JL_0_9600
000299F6 <AmiBlitz3.ab2@13143> RTS
000299FA <AmiBlitz3.ab2@13147>   MOVE.w #$C319,D1
00029A00 <AmiBlitz3.ab2@13148>   TST.b typecheck
00029A04 <AmiBlitz3.ab2@13149>   BEQ 'l1
00029A0A <AmiBlitz3.ab2@13150>   TST.b notypecheck
00029A0E <AmiBlitz3.ab2@13151>   BNE 'l1
00029A14 <AmiBlitz3.ab2@13152>   TST.l lasttoken
00029A18 <AmiBlitz3.ab2@13159>   BSR.w JL_0_963A
00029A1C <AmiBlitz3.ab2@13162>   MOVE.w #$4240,D1
00029A22 <AmiBlitz3.ab2@13163>   OR.w regnum,D1
00029A26 <AmiBlitz3.ab2@13164>   BSR.w writeword
00029A2A <AmiBlitz3.ab2@13165>   MOVE.w #$4840,D1
00029A30 <AmiBlitz3.ab2@13166>   OR.w regnum,D1
00029A34 <AmiBlitz3.ab2@13167> BRA.w writeword
00029A38 <AmiBlitz3.ab2@13171> BRA.w JL_0_96D0
00029A3C <AmiBlitz3.ab2@13175>   BSR.w JL_0_96D0
00029A40 <AmiBlitz3.ab2@13176> BRA.w convert_word_to_long
00029A42 <AmiBlitz3.ab2@13181>   MOVEQ #0,d0
00029A48 <AmiBlitz3.ab2@13182>   MOVE.w regnum,d0
00029A4A <AmiBlitz3.ab2@13183>   ASL.l #7,d0
00029A50 <AmiBlitz3.ab2@13184>   MOVE.l #$f2004000,d1
00029A52 <AmiBlitz3.ab2@13185>   OR.l d0,d1
00029A54 <AmiBlitz3.ab2@13186>   ASL.l #1,d0
00029A56 <AmiBlitz3.ab2@13187>   ASL.l #8,d0
00029A58 <AmiBlitz3.ab2@13188>   OR.l d0,d1
00029A5C <AmiBlitz3.ab2@13189>   BSR writelong
00029A62 <AmiBlitz3.ab2@13190>   MOVE.w regnum,d0
00029A64 <AmiBlitz3.ab2@13191>   ASL.l #7,d0
00029A6A <AmiBlitz3.ab2@13192>   MOVE.l #$f23c4423,d1                                     ;fmul.s #1/65536,fpreg
00029A6C <AmiBlitz3.ab2@13193>   OR.w d0,d1
00029A70 <AmiBlitz3.ab2@13194>   BSR writelong
00029A76 <AmiBlitz3.ab2@13195>   MOVE.l #$37800000,d1
00029A7A <AmiBlitz3.ab2@13196>   BSR writelong
00029A7C <AmiBlitz3.ab2@13197> RTS
00029A82 <AmiBlitz3.ab2@13201>   TST.b iee
00029A86 <AmiBlitz3.ab2@13202>   BNE qtof
00029A8A <AmiBlitz3.ab2@13203>   MOVE.w #$D300,D1
00029A8C <AmiBlitz3.ab2@13206>   MOVE.w D1,-(A7)
00029A90 <AmiBlitz3.ab2@13207>    BSR.w JL_0_AD40
00029A92 <AmiBlitz3.ab2@13208>   MOVE.l D4,D1
00029A96 <AmiBlitz3.ab2@13209>    BSR.w JL_0_AD38
00029A9A <AmiBlitz3.ab2@13210>    BSR.w JL_0_A352
00029A9C <AmiBlitz3.ab2@13211>   MOVE.w (A7)+,D1
00029AA0 <AmiBlitz3.ab2@13212>    BSR.w Atokejsr
00029AA4 <AmiBlitz3.ab2@13213>    BSR.w JL_0_A36E
00029AA6 <AmiBlitz3.ab2@13214>   MOVE.l D5,D1
00029AAA <AmiBlitz3.ab2@13215> BRA.w JL_0_AD38
00029AAC <AmiBlitz3.ab2@13219> RTS
00029AB2 <AmiBlitz3.ab2@13222>   TST.b typecheck
00029AB6 <AmiBlitz3.ab2@13223>   BEQ 'l1
00029ABC <AmiBlitz3.ab2@13224>   TST.b notypecheck
00029AC0 <AmiBlitz3.ab2@13225>   BNE 'l1
00029AC6 <AmiBlitz3.ab2@13226>   TST.l lasttoken
00029ACC <AmiBlitz3.ab2@13231>   TST.b iee
00029AD0 <AmiBlitz3.ab2@13232>   BNE ftol
00029AD4 <AmiBlitz3.ab2@13233>   MOVE.w #$C31A,D1
00029AD8 <AmiBlitz3.ab2@13234>   BSR.w JL_0_963A
00029ADC <AmiBlitz3.ab2@13235>   BSR.w JL_0_974A
00029AE0 <AmiBlitz3.ab2@13236> BRA.w convert_long_to_byte
00029AE2 <AmiBlitz3.ab2@13240> RTS
00029AE8 <AmiBlitz3.ab2@13243>   TST.b typecheck
00029AEC <AmiBlitz3.ab2@13244>   BEQ 'l1
00029AF2 <AmiBlitz3.ab2@13245>   TST.b notypecheck
00029AF6 <AmiBlitz3.ab2@13246>   BNE 'l1
00029AFC <AmiBlitz3.ab2@13247>   TST.l lasttoken
00029B02 <AmiBlitz3.ab2@13252>   TST.b iee
00029B06 <AmiBlitz3.ab2@13253>   BNE ftol
00029B0A <AmiBlitz3.ab2@13254>   MOVE.w #$C31B,D1
00029B0E <AmiBlitz3.ab2@13255>   BSR.w JL_0_963A
00029B12 <AmiBlitz3.ab2@13256>   BSR.w JL_0_974A
00029B16 <AmiBlitz3.ab2@13257> BRA.w convert_long_to_word
00029B18 <AmiBlitz3.ab2@13261> RTS
00029B1E <AmiBlitz3.ab2@13264>   TST.b iee
00029B22 <AmiBlitz3.ab2@13265>   BNE ftol
00029B26 <AmiBlitz3.ab2@13266>   MOVE.w #$C31C,D1
00029B2A <AmiBlitz3.ab2@13267>   BSR.w JL_0_963A
00029B2E <AmiBlitz3.ab2@13270>   MOVE.w #$FFE2,D1
00029B32 <AmiBlitz3.ab2@13271> BRA.w JL_0_9604
00029B34 <AmiBlitz3.ab2@13274>   MOVE.l d0,-(a7)
00029B36 <AmiBlitz3.ab2@13275>   MOVEQ #0,d0
00029B3C <AmiBlitz3.ab2@13276>   MOVE.w regnum,d0
00029B3E <AmiBlitz3.ab2@13277>   ASL.l #7,d0
00029B44 <AmiBlitz3.ab2@13278>   MOVE.l #$f2006000,d1
00029B46 <AmiBlitz3.ab2@13279>   OR.l d0,d1
00029B48 <AmiBlitz3.ab2@13280>   ASL.l #1,d0
00029B4A <AmiBlitz3.ab2@13281>   ASL.l #8,d0
00029B4C <AmiBlitz3.ab2@13282>   OR.l d0,d1
00029B4E <AmiBlitz3.ab2@13283>   MOVE.l (a7)+,d0
00029B52 <AmiBlitz3.ab2@13284> BRA writelong
00029B54 <AmiBlitz3.ab2@13288>   MOVE.l d0,-(a7)
00029B56 <AmiBlitz3.ab2@13289>   MOVEQ #0,d0
00029B5C <AmiBlitz3.ab2@13290>   MOVE.l #$f23c4023,d1
00029B62 <AmiBlitz3.ab2@13291>   MOVE.w regnum,d0
00029B64 <AmiBlitz3.ab2@13292>   ASL.l #7,d0
00029B66 <AmiBlitz3.ab2@13293>   OR.l d0,d1
00029B6A <AmiBlitz3.ab2@13294>   BSR writelong
00029B70 <AmiBlitz3.ab2@13295>   MOVE.l #$00010000,d1
00029B74 <AmiBlitz3.ab2@13296>   BSR writelong
00029B7A <AmiBlitz3.ab2@13297>   MOVE.w regnum,d0
00029B7C <AmiBlitz3.ab2@13298>   ASL.l #7,d0
00029B82 <AmiBlitz3.ab2@13299>   MOVE.l #$f2006000,d1
00029B84 <AmiBlitz3.ab2@13300>   OR.l d0,d1
00029B86 <AmiBlitz3.ab2@13301>   ASL.l #1,d0
00029B88 <AmiBlitz3.ab2@13302>   ASL.l #8,d0
00029B8A <AmiBlitz3.ab2@13303>   OR.l d0,d1
00029B8E <AmiBlitz3.ab2@13304>   BSR writelong
00029B90 <AmiBlitz3.ab2@13305>   MOVE.l (a7)+,d0
00029B92 <AmiBlitz3.ab2@13306> RTS
00029B94 <AmiBlitz3.ab2@13310> RTS
00029B9A <AmiBlitz3.ab2@13314>   TST.b iee
00029B9E <AmiBlitz3.ab2@13315>   BNE ftoq
00029BA2 <AmiBlitz3.ab2@13316>   MOVE.w #$C31B,D1
00029BA6 <AmiBlitz3.ab2@13317>   BSR.w JL_0_963A
00029BAA <AmiBlitz3.ab2@13318>   MOVE.w #$D301,D1
00029BAE <AmiBlitz3.ab2@13319> BRA.w JL_0_96FC
00029BB4 <AmiBlitz3.ab2@13325>    TST.b blitzparloop
00029BB8 <AmiBlitz3.ab2@13326>    BNE 'l1
00029BBE <AmiBlitz3.ab2@13327>    TST.b funcparloop
00029BC2 <AmiBlitz3.ab2@13328>    BNE 'l1
00029BC6 <AmiBlitz3.ab2@13329>    BRA error_convert_types
00029BCE <AmiBlitz3.ab2@13332>   CMP.b #2,optistring
00029BD2 <AmiBlitz3.ab2@13333>   BEQ JLrts
00029BD8 <AmiBlitz3.ab2@13334>   MOVE.w stol,D1
00029BDC <AmiBlitz3.ab2@13335>   BSR.w writeword
00029BE4 <AmiBlitz3.ab2@13336>   CMPI.w #$2,sbgot
00029BE8 <AmiBlitz3.ab2@13337>   BCS.w sbtolong
00029BEC <AmiBlitz3.ab2@13338>   MOVE.w ceos(PC),D1
00029BF0 <AmiBlitz3.ab2@13339>   BSR.w writeword
00029BF6 <AmiBlitz3.ab2@13342>   MOVE.w regnum,D1
00029BF8 <AmiBlitz3.ab2@13343>   LSL.w #8,D1
00029BFA <AmiBlitz3.ab2@13344>   LSL.w #1,D1
00029C02 <AmiBlitz3.ab2@13345>   CMPI.w #$2,sbgot
00029C06 <AmiBlitz3.ab2@13346>   BCS.w JL_0_98E8
00029C0C <AmiBlitz3.ab2@13347>   MOVE.w a2offset,D3
00029C12 <AmiBlitz3.ab2@13348>   SUB.w thisstuse,D3
00029C16 <AmiBlitz3.ab2@13349>   CMP.w #$6,D3
00029C1A <AmiBlitz3.ab2@13350>   BNE.w JL_0_98D4b
00029C20 <AmiBlitz3.ab2@13351>   OR.w movestst2,D1
00029C24 <AmiBlitz3.ab2@13352>   BSR.w writeword
00029C2A <AmiBlitz3.ab2@13353>   LEA movestst2+2,A0
00029C30 <AmiBlitz3.ab2@13354>   LEA movestst2f,A1
00029C34 <AmiBlitz3.ab2@13355> BRA.w pokecode2
00029C3A <AmiBlitz3.ab2@13359>   OR.w movea7dn,D1
00029C3E <AmiBlitz3.ab2@13360>   BSR.w writeword
00029C44 <AmiBlitz3.ab2@13361>   MOVE.l #0,D1
00029C48 <AmiBlitz3.ab2@13362> BRA.w writeword
00029C4E <AmiBlitz3.ab2@13366>   ADDQ.w #1,fuckpos
00029C52 <AmiBlitz3.ab2@13367>   BSR.w writeconvertcode
00029C58 <AmiBlitz3.ab2@13368>   SUBQ.w #1,fuckpos
00029C5A <AmiBlitz3.ab2@13370> RTS
00029C5C <AmiBlitz3.ab2@13374>   MOVE.w D3,D1
00029C60 <AmiBlitz3.ab2@13375>   CMP.w #7,d1
00029C64 <AmiBlitz3.ab2@13376>   BLE 'ok
00029C6A <AmiBlitz3.ab2@13377>   JMP errorinternalconvert
00029C6C <AmiBlitz3.ab2@13378> 'ok  SUBQ.w #1,D1
00029C70 <AmiBlitz3.ab2@13379>   MULU #$7,D1
00029C72 <AmiBlitz3.ab2@13380>   ADD.w D2,D1
00029C74 <AmiBlitz3.ab2@13381>   SUBQ.w #1,D1
00029C76 <AmiBlitz3.ab2@13382>   LSL.w #2,D1
00029C7C <AmiBlitz3.ab2@13383>   LEA convtable,A0
00029C80 <AmiBlitz3.ab2@13384>   MOVE.l $0(A0,D1.W),D1
00029C84 <AmiBlitz3.ab2@13385>   BEQ.w JL_0_97A2
00029C86 <AmiBlitz3.ab2@13386>     MOVEA.l D1,A0
00029C8A <AmiBlitz3.ab2@13387>     CMP.b #$ff,d3
00029C8E <AmiBlitz3.ab2@13388>     BEQ JL_0_97A2
00029C90 <AmiBlitz3.ab2@13389> JMP (A0)
00029C92 <AmiBlitz3.ab2@13392> RTS
00029C96 <AmiBlitz3.ab2@13395> usedfrom:  Ds.l 1
00029C9A <AmiBlitz3.ab2@13402>   CMP.w #"\",D0
00029C9E <AmiBlitz3.ab2@13403>   BNE.w JL_0_97C2
00029CA2 <AmiBlitz3.ab2@13404>     CMP.b #"\",(a5)
00029CA6 <AmiBlitz3.ab2@13405>     BNE 'first
00029CAC <AmiBlitz3.ab2@13406>       MOVE.l A5,usedfrom
00029CB2 <AmiBlitz3.ab2@13407>       LEA path2,A5
00029CB6 <AmiBlitz3.ab2@13408> BRA 'g1
00029CB8 <AmiBlitz3.ab2@13411>     SUBQ.w #1,A5
00029CBE <AmiBlitz3.ab2@13412>   MOVE.l A5,usedfrom
00029CC4 <AmiBlitz3.ab2@13413>   LEA usedpath,A5                                          ;read path
00029CC8 <AmiBlitz3.ab2@13416>   BSR.w get1bytemain
00029CCE <AmiBlitz3.ab2@13419>   CLR.w flagmask
00029CD2 <AmiBlitz3.ab2@13420>   CMP.w #$2A,D0
00029CD6 <AmiBlitz3.ab2@13421>    BNE.w JL_0_983A
00029CDE <AmiBlitz3.ab2@13422>   MOVE.w #$0001,flagmask
00029CE2 <AmiBlitz3.ab2@13424>    BSR.w getparameter2
00029CE6 <AmiBlitz3.ab2@13427>    BEQ.w syntaxerr
00029CEA <AmiBlitz3.ab2@13428>   CMP.w #$28,D0
00029CEE <AmiBlitz3.ab2@13429>    BEQ.w JL_0_9830
00029CF2 <AmiBlitz3.ab2@13430>   CMP.w #$2E,D0
00029CF6 <AmiBlitz3.ab2@13431>    BEQ.w JL_0_980C
00029CFA <AmiBlitz3.ab2@13432>   CMP.w #$24,D0
00029CFE <AmiBlitz3.ab2@13433>    BNE.w JL_0_9838
00029D06 <AmiBlitz3.ab2@13434>   ORI.w #$8,flagmask
00029D0A <AmiBlitz3.ab2@13435>    BSR.w storeloc
00029D0E <AmiBlitz3.ab2@13436>    BSR.w get1bytemain
00029D12 <AmiBlitz3.ab2@13437> BRA.w JL_0_9822
00029D16 <AmiBlitz3.ab2@13441>   BSR.w storeloc
00029D18 <AmiBlitz3.ab2@13442>   MOVE.w D2,-(A7)
00029D1E <AmiBlitz3.ab2@13443>   LEA namebuff2,A1
00029D22 <AmiBlitz3.ab2@13444>    BSR.w makename3
00029D26 <AmiBlitz3.ab2@13445>    BEQ.w syntaxerr
00029D28 <AmiBlitz3.ab2@13446>   MOVE.w (A7)+,D2
00029D2A <AmiBlitz3.ab2@13449>    MOVE.w D0,D1
00029D2E <AmiBlitz3.ab2@13450>    BSR.w resloc
00029D32 <AmiBlitz3.ab2@13451>    CMP.w #$28,D1
00029D36 <AmiBlitz3.ab2@13452>    BNE.w JL_0_9838
00029D3E <AmiBlitz3.ab2@13455>   ORI.w #$2,flagmask
00029D40 <AmiBlitz3.ab2@13458> RTS
00029D44 <AmiBlitz3.ab2@13462>   CMP.w #$40,D0
00029D48 <AmiBlitz3.ab2@13463>    BNE.w JL_0_984E
00029D50 <AmiBlitz3.ab2@13464>   MOVE.w #$0005,flagmask
00029D54 <AmiBlitz3.ab2@13465> BRA.w JL_0_97D8
00029D58 <AmiBlitz3.ab2@13469>   BSR.w makename2
00029D5C <AmiBlitz3.ab2@13470> BRA.w JL_0_97DC
00029D60 <AmiBlitz3.ab2@13474>   MOVE.w #$FED3,D1
00029D64 <AmiBlitz3.ab2@13475>    BSR.w uselib
00029D6A <AmiBlitz3.ab2@13476>   LEA pusha3,A0
00029D70 <AmiBlitz3.ab2@13477>   LEA pusha3f,A1
00029D74 <AmiBlitz3.ab2@13478> BRA.w pokecode
00029D78 <AmiBlitz3.ab2@13482>   MOVE.w #$FED3,D1
00029D7C <AmiBlitz3.ab2@13483>    BSR.w uselib
00029D82 <AmiBlitz3.ab2@13484>   LEA pulla3,A0
00029D88 <AmiBlitz3.ab2@13485>   LEA pulla3f,A1
00029D8C <AmiBlitz3.ab2@13486> BRA.w pokecode
00029D8E <AmiBlitz3.ab2@13490> ceos:   Dc.b $42,$1B                                       ;CLR.B   (A3)+             ;*!
00029D96 <AmiBlitz3.ab2@13495>     CMP.b #2,optistring
00029D9A <AmiBlitz3.ab2@13496>    BEQ 'l10
00029D9E <AmiBlitz3.ab2@13497>    MOVE.w ceos(PC),D1
00029DA2 <AmiBlitz3.ab2@13498>    BSR.w writeword                                         ;clr.b (a3)
00029DA8 <AmiBlitz3.ab2@13501>   MOVE.w regnum,D1
00029DAA <AmiBlitz3.ab2@13502>   LSL.w #8,D1
00029DAC <AmiBlitz3.ab2@13503>   LSL.w #1,D1
00029DB4 <AmiBlitz3.ab2@13504>   CMPI.w #$2,sbgot
00029DB8 <AmiBlitz3.ab2@13505>    BCS.w JL_0_98E8
00029DBE <AmiBlitz3.ab2@13506>   MOVE.w a2offset,D3                                       ;stackuse,d3 org source
00029DC4 <AmiBlitz3.ab2@13507>   SUB.w thisstuse,D3
00029DC8 <AmiBlitz3.ab2@13508>   CMP.w #$6,D3
00029DCC <AmiBlitz3.ab2@13509>    BNE.w JL_0_98D4
00029DD2 <AmiBlitz3.ab2@13510>   OR.w movestst2,D1
00029DD6 <AmiBlitz3.ab2@13511>    BSR.w writeword
00029DDC <AmiBlitz3.ab2@13512>   LEA movestst2+2,A0
00029DE2 <AmiBlitz3.ab2@13513>   LEA movestst2f,A1
00029DE6 <AmiBlitz3.ab2@13514> BRA.w pokecode2
00029DEC <AmiBlitz3.ab2@13518>    OR.w movea7dn,D1
00029DF0 <AmiBlitz3.ab2@13519>    BSR.w writeword
00029DF6 <AmiBlitz3.ab2@13520>   MOVE.l movea7dn+2,D1
00029DFA <AmiBlitz3.ab2@13532>   BSR writelong
00029E02 <AmiBlitz3.ab2@13535>    CMP.w #6,regnum
00029E06 <AmiBlitz3.ab2@13536>    BEQ 'l1
00029E0C <AmiBlitz3.ab2@13537>    TST.w stackpar
00029E10 <AmiBlitz3.ab2@13538>    BNE 'l1
00029E16 <AmiBlitz3.ab2@13539>    TST.b funcparloop
00029E1A <AmiBlitz3.ab2@13540>    BEQ 'l1
00029E20 <AmiBlitz3.ab2@13541>    MOVE.l #$48780000,d1
00029E24 <AmiBlitz3.ab2@13542>    BSR writelong
00029E26 <AmiBlitz3.ab2@13546> RTS
00029E28 <AmiBlitz3.ab2@13551>      MOVE.l d1,-(a7)
00029E30 <AmiBlitz3.ab2@13552>      CMP.w #6,regnum
00029E34 <AmiBlitz3.ab2@13553>      BEQ 'l1
00029E3A <AmiBlitz3.ab2@13554>      TST.w stackpar
00029E3E <AmiBlitz3.ab2@13555>      BNE 'l1
00029E44 <AmiBlitz3.ab2@13556>      TST.b funcparloop
00029E48 <AmiBlitz3.ab2@13557>      BEQ 'l1
00029E4E <AmiBlitz3.ab2@13558>      MOVE.l #$48780000,d1
00029E52 <AmiBlitz3.ab2@13559>      BSR writelong
00029E54 <AmiBlitz3.ab2@13562>      MOVE.l (a7)+,d1
00029E5A <AmiBlitz3.ab2@13564>    OR.w movestdn,D1
00029E5E <AmiBlitz3.ab2@13565>    BSR.w writeword
00029E62 <AmiBlitz3.ab2@13566>   MOVE.w #$FED3,D1
00029E66 <AmiBlitz3.ab2@13567>    BSR.w uselib
00029E6A <AmiBlitz3.ab2@13568>   MOVE.w $A(A1),D1
00029E6E <AmiBlitz3.ab2@13569> BRA.w writeword
00029E70 <AmiBlitz3.ab2@13572> unknown:    Ds.w 1
00029E76 <AmiBlitz3.ab2@13575> somecode:   Dc.b $0C,$80,$00,$01,$00,$00                   ;CMPI.L  #$00010000,D0
00029E7A <AmiBlitz3.ab2@13576> somecode2:  Dc.b $65,$00,$00,$08                           ;BCS.W   codeisok
00029E80 <AmiBlitz3.ab2@13577>             Dc.b $4E,$B9,$00,$00,$00,$00                   ;JSR $00000000
00029E86 <AmiBlitz3.ab2@13583>   TST.b debugmode
00029E8A <AmiBlitz3.ab2@13584>   BEQ.w sharreval
00029E8E <AmiBlitz3.ab2@13585>  BSR.w arreval
00029E92 <AmiBlitz3.ab2@13588>   MOVE.w somecode(PC),D1
00029E98 <AmiBlitz3.ab2@13589>   OR.w regnum,D1
00029E9C <AmiBlitz3.ab2@13590>    BSR.w writeword
00029E9E <AmiBlitz3.ab2@13591>   MOVEQ.l #$01,D1
00029EA0 <AmiBlitz3.ab2@13592>   SWAP D1
00029EA4 <AmiBlitz3.ab2@13593>    BSR.w writelong
00029EA8 <AmiBlitz3.ab2@13594>   MOVE.l somecode2(PC),D1
00029EAC <AmiBlitz3.ab2@13595>    BSR.w writelong
00029EB0 <AmiBlitz3.ab2@13596>   MOVE.w #$C309,D1
00029EB4 <AmiBlitz3.ab2@13597> BRA.w Atokejsr
00029EB6 <AmiBlitz3.ab2@13601>   MOVEQ.l #$02,D2
00029EB8 <AmiBlitz3.ab2@13602>   MOVEQ.l #$00,D1
00029EBA <AmiBlitz3.ab2@13603>   MOVEQ.l #$00,D3
00029EBE <AmiBlitz3.ab2@13604> BRA.w maineval2
00029EC0 <AmiBlitz3.ab2@13608>   MOVEQ.l #$03,D2
00029EC2 <AmiBlitz3.ab2@13609>   MOVEQ.l #$00,D1
00029EC4 <AmiBlitz3.ab2@13610>   MOVEQ.l #$00,D3
00029ECA <AmiBlitz3.ab2@13611>   MOVE.b notypecheck,-(a7)
00029ED2 <AmiBlitz3.ab2@13612>   MOVE.b #1,notypecheck                                    ;typecheck need switch off for array offset calculation code
00029ED8 <AmiBlitz3.ab2@13613>   JSR maineval2
00029EDE <AmiBlitz3.ab2@13614>   MOVE.b (a7)+,notypecheck                                 ;now its switch to old state
00029EE0 <AmiBlitz3.ab2@13615>   RTS
00029EEA <AmiBlitz3.ab2@13619>   MOVE.w oldqflag,instringon
00029EF0 <AmiBlitz3.ab2@13620>   MOVEA.l lastsourcepos,A5
00029EF2 <AmiBlitz3.ab2@13621>   MOVEQ.l #-$01,D1
00029EF4 <AmiBlitz3.ab2@13622>   MOVEQ.l #-$01,D3
00029EF8 <AmiBlitz3.ab2@13623> BRA.w peval
00029F02 <AmiBlitz3.ab2@13628>   MOVE.w oldqflag,instringon
00029F08 <AmiBlitz3.ab2@13629>   MOVEA.l lastsourcepos,A5
00029F0A <AmiBlitz3.ab2@13632>   MOVEQ.l #-$01,D1
00029F0C <AmiBlitz3.ab2@13633>   MOVEQ.l #$00,D3
00029F12 <AmiBlitz3.ab2@13634>   MOVE.l leftsidetype,-(a7)
00029F18 <AmiBlitz3.ab2@13635>   MOVE.l rightsidetype,-(a7)
00029F1E <AmiBlitz3.ab2@13636>   CLR.l leftsidetype
00029F24 <AmiBlitz3.ab2@13637>   CLR.l rightsidetype
00029F2A <AmiBlitz3.ab2@13638>   JSR maineval
00029F30 <AmiBlitz3.ab2@13639>   MOVE.l (a7)+,rightsidetype
00029F36 <AmiBlitz3.ab2@13640>   MOVE.l (a7)+,leftsidetype
00029F38 <AmiBlitz3.ab2@13641>   RTS
00029F42 <AmiBlitz3.ab2@13645>   MOVE.w oldqflag,instringon
00029F48 <AmiBlitz3.ab2@13646>   MOVEA.l lastsourcepos,A5
00029F4A <AmiBlitz3.ab2@13647>   MOVEQ.l #$00,D1
00029F4C <AmiBlitz3.ab2@13648>   MOVEQ.l #-$01,D3
00029F50 <AmiBlitz3.ab2@13649> BRA.w maineval
00029F52 <AmiBlitz3.ab2@13653>   MOVEQ.l #$01,D1
00029F54 <AmiBlitz3.ab2@13654>   MOVEQ.l #-$01,D3
00029F58 <AmiBlitz3.ab2@13655> BRA.w maineval
00029F62 <AmiBlitz3.ab2@13660>   MOVE.w oldqflag,instringon
00029F68 <AmiBlitz3.ab2@13661>   MOVEA.l lastsourcepos,A5
00029F6A <AmiBlitz3.ab2@13664>   MOVEQ.l #$00,D1                                        ;no push
00029F6C <AmiBlitz3.ab2@13665>   MOVEQ.l #$00,D3
00029F74 <AmiBlitz3.ab2@13686>    CMPI.w #$6,regnum
00029F78 <AmiBlitz3.ab2@13687>    BCS.w maineval2
00029F7A <AmiBlitz3.ab2@13688>    MOVEQ #0,d1
00029F80 <AmiBlitz3.ab2@13689>    MOVE.l destpointer,a4
00029F86 <AmiBlitz3.ab2@13691>    CMPA.l destbufferend,A4
00029F8A <AmiBlitz3.ab2@13692>    BCC.w maineval__l2
00029F90 <AmiBlitz3.ab2@13694>    CMP.w #$2f0a,-2(a4)                                    ;bug is a move.l a2,-(a7) before (show temp calc)?
00029F94 <AmiBlitz3.ab2@13696>    BNE maineval__l2
00029F98 <AmiBlitz3.ab2@13700> BRA maineval__l1
00029F9A <AmiBlitz3.ab2@13703>   MOVEQ.l #-$01,D1
00029FA2 <AmiBlitz3.ab2@13706>   MOVE.w #$0006,regnum                                     ;write a func par To stack
00029FA8 <AmiBlitz3.ab2@13709>   MOVE.w thisstuse,-(A7)
00029FB2 <AmiBlitz3.ab2@13710>   MOVE.w a2offset,thisstuse
00029FB8 <AmiBlitz3.ab2@13711>   MOVE.w stackpar,-(A7)
00029FBE <AmiBlitz3.ab2@13712>   MOVE.w D1,stackpar
00029FC4 <AmiBlitz3.ab2@13713>   MOVE.w sbgot,-(A7)
00029FCA <AmiBlitz3.ab2@13714>   CLR.w sbgot
00029FCE <AmiBlitz3.ab2@13715>   MOVE.w unknown(PC),-(A7)
00029FD4 <AmiBlitz3.ab2@13716>   MOVE.w D3,unknown
00029FD6 <AmiBlitz3.ab2@13717>   MOVE.w D2,-(a7)
00029FDC <AmiBlitz3.ab2@13718>   MOVE.w d2,mode
00029FE0 <AmiBlitz3.ab2@13719>    BSR.w eval3
00029FE2 <AmiBlitz3.ab2@13720>   MOVE.w (a7)+,d3
00029FE6 <AmiBlitz3.ab2@13721>    BEQ.w maineval__noconv
00029FEA <AmiBlitz3.ab2@13722>   MOVE.w unknown(PC),D1
00029FEE <AmiBlitz3.ab2@13723>    BNE.w maineval__noconv
00029FF0 <AmiBlitz3.ab2@13724>   EXG.l D2,D3
00029FF2 <AmiBlitz3.ab2@13725>    MOVE.l a2,-(a7)
00029FF8 <AmiBlitz3.ab2@13726>    TST.b curtemplabel
00029FFC <AmiBlitz3.ab2@13727>    BEQ maineval2__l10
0002A002 <AmiBlitz3.ab2@13728>    MOVE.l asmbuff,a2
0002A008 <AmiBlitz3.ab2@13729>    CMP.w #$c,$8(a2)
0002A00C <AmiBlitz3.ab2@13730>    BEQ maineval2__l20
0002A012 <AmiBlitz3.ab2@13731>    CMP.w #$d,$8(a2)
0002A016 <AmiBlitz3.ab2@13732>    BEQ maineval2__l20
0002A018 <AmiBlitz3.ab2@13735>   CMP.w d2,d3
0002A01C <AmiBlitz3.ab2@13736>   BEQ maineval2__l20
0002A020 <AmiBlitz3.ab2@13737>   BSR.w writeconvertcode
0002A026 <AmiBlitz3.ab2@13738>   CLR.b doimmediate
0002A028 <AmiBlitz3.ab2@13741>   MOVE.l (a7)+,a2
0002A02E <AmiBlitz3.ab2@13744>   MOVE.w (A7)+,unknown
0002A034 <AmiBlitz3.ab2@13745>   MOVE.w stackpar,D1
0002A038 <AmiBlitz3.ab2@13746>    BEQ.w maineval__skipme
0002A03C <AmiBlitz3.ab2@13747>    BMI.w maineval__skipme
0002A042 <AmiBlitz3.ab2@13751>   MOVE.w regnum,D1
0002A044 <AmiBlitz3.ab2@13752>   LSL.w #8,D1
0002A046 <AmiBlitz3.ab2@13753>   LSL.w #1,D1
0002A04A <AmiBlitz3.ab2@13754>   CMP.w #$7,D2
0002A04E <AmiBlitz3.ab2@13755>    BNE.w maineval__hi1
0002A056 <AmiBlitz3.ab2@13756>    CMP.b #2,optistring
0002A05A <AmiBlitz3.ab2@13757>    BEQ maineval__hi1a
0002A05C <AmiBlitz3.ab2@13758>   MOVE.w D1,-(A7)
0002A062 <AmiBlitz3.ab2@13759>   OR.w getstlen,D1
0002A066 <AmiBlitz3.ab2@13760>    BSR.w writeword
0002A068 <AmiBlitz3.ab2@13761>   MOVE.w (A7)+,D1
0002A06E <AmiBlitz3.ab2@13764>   ADDQ.w #2,a2offset                                        ;lib mode to stack
0002A072 <AmiBlitz3.ab2@13768>   MOVE.w #$3f3c,d1
0002A076 <AmiBlitz3.ab2@13769>    BSR.w writeword
0002A078 <AmiBlitz3.ab2@13773>   MOVE.w d2,d1
0002A07E <AmiBlitz3.ab2@13774>   MOVE.w d1,libmode
0002A082 <AmiBlitz3.ab2@13775>    BSR.w writeword
0002A086 <AmiBlitz3.ab2@13776>   CMP.w #$7,D2
0002A08A <AmiBlitz3.ab2@13777>    BNE.w maineval__skipme
0002A090 <AmiBlitz3.ab2@13778>   MOVE.w putstlen,D1
0002A096 <AmiBlitz3.ab2@13779>   OR.w regnum,D1
0002A09A <AmiBlitz3.ab2@13780>    BSR.w writeword
0002A09E <AmiBlitz3.ab2@13783>    CMP.w #$7,D2
0002A0A2 <AmiBlitz3.ab2@13784>    BNE.w maineval__notst
0002A0AA <AmiBlitz3.ab2@13795>    CMP.b #2,optistring
0002A0AE <AmiBlitz3.ab2@13796>    BEQ maineval__skipme_l10
0002A0B4 <AmiBlitz3.ab2@13797>    ADDQ.w #4,a2offset                                      ;a length on da stack.....
0002A0B8 <AmiBlitz3.ab2@13798>    BSR.w sbtolong
0002A0BC <AmiBlitz3.ab2@13799> BRA.w maineval__notst2
0002A0C4 <AmiBlitz3.ab2@13803>     CMP.w #6,regnum
0002A0C8 <AmiBlitz3.ab2@13804>     BEQ maineval__skipme_l10_l1
0002A0CE <AmiBlitz3.ab2@13805>     TST.b funcparloop
0002A0D2 <AmiBlitz3.ab2@13806>     BEQ maineval__skipme_l10_l1
0002A0D8 <AmiBlitz3.ab2@13807>     MOVE.l #$48780000,d1
0002A0DC <AmiBlitz3.ab2@13808>     BSR writelong
0002A0E0 <AmiBlitz3.ab2@13811> BRA.w maineval__notst2
0002A0E6 <AmiBlitz3.ab2@13814>   ADDQ.w #2,a2offset
0002A0EA <AmiBlitz3.ab2@13815> BRA maineval__skipme
0002A0F2 <AmiBlitz3.ab2@13818>   CMPI.w #$2,sbgot
0002A0F6 <AmiBlitz3.ab2@13819>    BCS.w maineval__notst2                                         ;correct stack
0002A0FA <AmiBlitz3.ab2@13820>   MOVE.w ststfix(PC),D1
0002A0FE <AmiBlitz3.ab2@13821>    BSR.w writeword
0002A104 <AmiBlitz3.ab2@13824>   MOVE.w (A7)+,sbgot
0002A10A <AmiBlitz3.ab2@13825>   MOVE.w stackpar,D1
0002A10E <AmiBlitz3.ab2@13826>    BPL.w maineval__skip
0002A112 <AmiBlitz3.ab2@13827>    CMP.b #7,d2
0002A116 <AmiBlitz3.ab2@13828>    BEQ maineval__notst2_l1
0002A11C <AmiBlitz3.ab2@13829>   TST.b funcparloop
0002A120 <AmiBlitz3.ab2@13830>   BEQ maineval__notst2_l1
0002A124 <AmiBlitz3.ab2@13831>   CMP.b #5,d2
0002A128 <AmiBlitz3.ab2@13832>   BNE maineval__notst2_skip
0002A12E <AmiBlitz3.ab2@13833>   TST.b fpu
0002A132 <AmiBlitz3.ab2@13834>   BEQ maineval__notst2_skip
0002A138 <AmiBlitz3.ab2@13835>   MOVE.l #$f2066700,d1                                     ;fmove.s fp6,d6
0002A13E <AmiBlitz3.ab2@13836>   JSR writelong
0002A142 <AmiBlitz3.ab2@13839>   MOVE.w #$c4ff,d1                                         ;savetemp+regnum
0002A148 <AmiBlitz3.ab2@13840>   ADD.w parnum,d1
0002A14E <AmiBlitz3.ab2@13841>   JSR Atokejsr
0002A154 <AmiBlitz3.ab2@13842>    TST.w dontwrite
0002A158 <AmiBlitz3.ab2@13843>    BNE maineval__notst2_l1
0002A15E <AmiBlitz3.ab2@13844>    MOVE.l data1start,d1
0002A164 <AmiBlitz3.ab2@13845>    MOVE.l destpointer,a4
0002A168 <AmiBlitz3.ab2@13846>    ADD.l d1,-4(a4)
0002A16E <AmiBlitz3.ab2@13847>    MOVE.l destpointer,d1
0002A170 <AmiBlitz3.ab2@13848>    SUBQ.l #4,d1
0002A176 <AmiBlitz3.ab2@13849>    SUB.l destbufferstart,d1
0002A178 <AmiBlitz3.ab2@13850>    MOVE.l d2,-(a7)
0002A17A <AmiBlitz3.ab2@13851>    MOVE.l d1,d2
0002A180 <AmiBlitz3.ab2@13852>    JSR addhunkoffset
0002A182 <AmiBlitz3.ab2@13853>    MOVE.l (a7)+,d2
0002A186 <AmiBlitz3.ab2@13854> BRA maineval__skip
0002A18C <AmiBlitz3.ab2@13857>   ADDQ.w #2,a2offset
0002A192 <AmiBlitz3.ab2@13858>   MOVE.w pushd0wd,D1
0002A196 <AmiBlitz3.ab2@13859>   CMP.w #$3,D2                                             ;write parameter to stack
0002A19A <AmiBlitz3.ab2@13860>    BCS.w maineval__ok
0002A1A0 <AmiBlitz3.ab2@13861>   ADDQ.w #2,a2offset
0002A1A6 <AmiBlitz3.ab2@13862>   TST.b fpu
0002A1AA <AmiBlitz3.ab2@13863>   BEQ maineval__notst2_nofpu
0002A1AE <AmiBlitz3.ab2@13864>   CMP.w #5,d2
0002A1B2 <AmiBlitz3.ab2@13865>   BNE maineval__notst2_nofpu
0002A1B4 <AmiBlitz3.ab2@13866>   MOVEQ #0,d1
0002A1BA <AmiBlitz3.ab2@13867>   MOVE.w regnum,d1
0002A1BC <AmiBlitz3.ab2@13868>   ASL.l #7,d1
0002A1C2 <AmiBlitz3.ab2@13869>   OR.l #$f2276400,d1
0002A1C6 <AmiBlitz3.ab2@13870>   BSR writelong
0002A1CA <AmiBlitz3.ab2@13871> BRA maineval__skip
0002A1D0 <AmiBlitz3.ab2@13874>   MOVE.w pushd0l,D1
0002A1D6 <AmiBlitz3.ab2@13877>    OR.w regnum,D1
0002A1DA <AmiBlitz3.ab2@13878>    BSR.w writeword                                         ;nat
0002A1E0 <AmiBlitz3.ab2@13881>   MOVE.w (A7)+,stackpar
0002A1E6 <AmiBlitz3.ab2@13882>   MOVE.w (A7)+,thisstuse
0002A1E8 <AmiBlitz3.ab2@13883> RTS
0002A1EA <AmiBlitz3.ab2@13886> thisstuse: Ds.w 1
0002A1EC <AmiBlitz3.ab2@13889> ststfix:   Dc.b $58,$4F                                    ;ADDQ.W  #4,A7
0002A1EE <AmiBlitz3.ab2@13890> pushut:    Dc.b $3F,$00                                    ;MOVE.W  D0,-(A7)
0002A1F2 <AmiBlitz3.ab2@13895>   BSR.w eval4
0002A1FC <AmiBlitz3.ab2@13896>   SUBI.l #$12,forthsp
0002A1FE <AmiBlitz3.ab2@13897> RTS
0002A200 <AmiBlitz3.ab2@13901>   MOVEQ.l #$01,D1
0002A204 <AmiBlitz3.ab2@13903>       MOVEA.l precsp(PC),A1
0002A206 <AmiBlitz3.ab2@13904>       MOVE.l A0,(A1)+
0002A208 <AmiBlitz3.ab2@13905>       MOVE.w D1,(A1)+
0002A20E <AmiBlitz3.ab2@13906>       MOVE.l A1,precsp
0002A212 <AmiBlitz3.ab2@13907>    BSR.w calcloop
0002A214 <AmiBlitz3.ab2@13908>   TST.w D1
0002A218 <AmiBlitz3.ab2@13909>    BNE.w syntaxerr
0002A21E <AmiBlitz3.ab2@13910>   SUBQ.l #6,precsp                                      ;pop the prec set up
0002A220 <AmiBlitz3.ab2@13911> RTS
0002A224 <AmiBlitz3.ab2@13916>   BSR.w JL_0_9C24
0002A228 <AmiBlitz3.ab2@13919>   MOVEA.l precsp(PC),A1
0002A22A <AmiBlitz3.ab2@13920>   CMP.w -(A1),D1
0002A22E <AmiBlitz3.ab2@13921>    BHI.w JL_0_9B0A
0002A230 <AmiBlitz3.ab2@13922> RTS
0002A234 <AmiBlitz3.ab2@13927>   MOVEA.l precsp(PC),A1
0002A236 <AmiBlitz3.ab2@13928>   MOVE.l A0,(A1)+
0002A238 <AmiBlitz3.ab2@13929>   MOVE.w D1,(A1)+
0002A23E <AmiBlitz3.ab2@13930>   MOVE.l A1,precsp
0002A240 <AmiBlitz3.ab2@13931>   MOVE.w D2,-(A7)
0002A246 <AmiBlitz3.ab2@13932>   ADDQ.w #1,regnum
0002A24A <AmiBlitz3.ab2@13933>    BSR.w calcloop               ;constant optimizer
0002A250 <AmiBlitz3.ab2@13934>   SUBQ.w #1,regnum
0002A252 <AmiBlitz3.ab2@13935>   MOVE.w (A7)+,D3
0002A256 <AmiBlitz3.ab2@13936>   MOVEM.l D1/A0,-(A7)
0002A25A <AmiBlitz3.ab2@13937>    BEQ.w JL_0_9B2E
0002A25E <AmiBlitz3.ab2@13938>    BSR.w JL_0_9770
0002A262 <AmiBlitz3.ab2@13941>   BSR.w popprec
0002A266 <AmiBlitz3.ab2@13942>   BSR.w writecode
0002A26A <AmiBlitz3.ab2@13943>   MOVEA.l forthsp(PC),A0
0002A26E <AmiBlitz3.ab2@13944>   MOVE.w -$2(A0),D1
0002A272 <AmiBlitz3.ab2@13945>   OR.w -$14(A0),D1
0002A276 <AmiBlitz3.ab2@13946>   MOVE.w D1,-$14(A0)
0002A27A <AmiBlitz3.ab2@13947>    BNE.w JL_0_9C0E
0002A280 <AmiBlitz3.ab2@13948>   MOVE.w dontwrite,D1
0002A284 <AmiBlitz3.ab2@13949>    BNE.w JL_0_9C0E
0002A288 <AmiBlitz3.ab2@13950>    MOVEA.l -$24(A0),A0
0002A3C4 <AmiBlitz3.ab2@13952>  !newcalc
0002A3C8 <AmiBlitz3.ab2@13953>    BEQ 'l10
0002A3CC <AmiBlitz3.ab2@13954>    MOVEA.l forthsp(PC),A0
0002A3D4 <AmiBlitz3.ab2@13955>    MOVE.w -$18(A0),lasta6
0002A3DC <AmiBlitz3.ab2@13956>    MOVE.l -$1C(A0),lasta6
0002A3E0 <AmiBlitz3.ab2@13957>    MOVEA.l -$24(A0),A0
0002A3E6 <AmiBlitz3.ab2@13958>    MOVE.l A0,destpointer
0002A3EC <AmiBlitz3.ab2@13959>    MOVEA.l _mathffpbase,A6
0002A3F2 <AmiBlitz3.ab2@13960>    MOVEA.l ffplib,A1
0002A3F6 <AmiBlitz3.ab2@13961> BRA cont1
0002A3FA <AmiBlitz3.ab2@13964>   MOVE.w #$2000,D1
0002A400 <AmiBlitz3.ab2@13965>   OR.w regnum,D1
0002A404 <AmiBlitz3.ab2@13966>    BSR.w writeword
0002A406 <AmiBlitz3.ab2@13967>     MOVEQ #0,d1
0002A40C <AmiBlitz3.ab2@13968>     MOVE.w regnum,D1
0002A40E <AmiBlitz3.ab2@13969>     ASL.l #8,d1
0002A410 <AmiBlitz3.ab2@13970>     ASL.l #2,d1
0002A416 <AmiBlitz3.ab2@13971>     OR.l #$f2000000,d1
0002A41A <AmiBlitz3.ab2@13972>     BSR writelong
0002A41E <AmiBlitz3.ab2@13973>   MOVE.w #$4E75,D1
0002A422 <AmiBlitz3.ab2@13974>    BSR.w writeword
0002A42A <AmiBlitz3.ab2@13975>   MOVE.w -$18(A0),lasta6
0002A432 <AmiBlitz3.ab2@13976>   MOVE.l -$1C(A0),lasta6
0002A436 <AmiBlitz3.ab2@13977>   MOVEA.l -$24(A0),A0
0002A43C <AmiBlitz3.ab2@13978>   MOVE.l A0,destpointer
0002A440 <AmiBlitz3.ab2@13979>   MOVEM.l D2/A5,-(A7)
0002A446 <AmiBlitz3.ab2@13980>   MOVEA.l _mathffpbase,A6
0002A44C <AmiBlitz3.ab2@13981>   MOVEA.l ffplib,A1
0002A450 <AmiBlitz3.ab2@13982>   MOVE.w $A(A1),D0
0002A456 <AmiBlitz3.ab2@13983>   LEA _mathffpbase,A5
0002A458 <AmiBlitz3.ab2@13984>   SUBA.w D0,A5
0002A45E <AmiBlitz3.ab2@13985>   JSR Aclearcache                                          ;neg +
0002A464 <AmiBlitz3.ab2@13986>   CLR.l load_var_addr
0002A46A <AmiBlitz3.ab2@13987>   CLR.l imm_addr
0002A470 <AmiBlitz3.ab2@13988>   TST.w dontwrite
0002A474 <AmiBlitz3.ab2@13989>   BNE '1
0002A476 <AmiBlitz3.ab2@13990>   JSR (A0)                                                 ;calc constant inline expression
0002A47A <AmiBlitz3.ab2@13993>   MOVEM.l (A7)+,D2/A5
0002A480 <AmiBlitz3.ab2@13996>   MOVE.b d2,isconstantvalue
0002A486 <AmiBlitz3.ab2@13997>   MOVE.l d0,lastconstantvalue
0002A48C <AmiBlitz3.ab2@13998>   MOVE.w regnum,D1
0002A48E <AmiBlitz3.ab2@13999>   LSL.w #8,D1
0002A490 <AmiBlitz3.ab2@14000>   LSL.w #1,D1
0002A494 <AmiBlitz3.ab2@14001>   ORI.w #$203C,D1
0002A498 <AmiBlitz3.ab2@14002>   CMP.w #$3,D2
0002A49C <AmiBlitz3.ab2@14003>    BCC.w JL_0_9BCE
0002A4A0 <AmiBlitz3.ab2@14004>   ORI.w #$1000,D1
0002A4A4 <AmiBlitz3.ab2@14005>    BSR.w writeword
0002A4A6 <AmiBlitz3.ab2@14006>   MOVE.w D0,D1
0002A4AA <AmiBlitz3.ab2@14007>    BSR.w writeword
0002A4AE <AmiBlitz3.ab2@14008> BRA.w JL_0_9BD8
0002A4B4 <AmiBlitz3.ab2@14012>   TST.b iee                                                ;fpu constant
0002A4B8 <AmiBlitz3.ab2@14013>   BEQ 'l10
0002A4BC <AmiBlitz3.ab2@14014>   CMP.b #5,d2
0002A4C0 <AmiBlitz3.ab2@14015>   BNE 'l10
0002A4C2 <AmiBlitz3.ab2@14016>   MOVEQ #0,d1
0002A4C8 <AmiBlitz3.ab2@14017>   MOVE.w regnum,D1
0002A4CA <AmiBlitz3.ab2@14018>   ASL.l #7,d1
0002A4D0 <AmiBlitz3.ab2@14019>   OR.l #$f23c5400,d1
0002A4D4 <AmiBlitz3.ab2@14020>   BSR writelong
0002A4D6 <AmiBlitz3.ab2@14021>   SUBQ.l #8,a7
0002A4DC <AmiBlitz3.ab2@14022>   fmove.d fp0,0(a7)
0002A4DE <AmiBlitz3.ab2@14023>   MOVE.l (a7)+,d1
0002A4E2 <AmiBlitz3.ab2@14024>   BSR writelong
0002A4E4 <AmiBlitz3.ab2@14025>   MOVE.l (a7)+,d1
0002A4E8 <AmiBlitz3.ab2@14026>   BSR writelong
0002A4EC <AmiBlitz3.ab2@14027> BRA JL_0_9BD8
0002A4F0 <AmiBlitz3.ab2@14030>   BSR.w writeword
0002A4F2 <AmiBlitz3.ab2@14031>   MOVE.l D0,D1
0002A4F6 <AmiBlitz3.ab2@14032>   BSR.w writelong
0002A4FA <AmiBlitz3.ab2@14035>   MOVEA.l forthsp(PC),A0
0002A4FE <AmiBlitz3.ab2@14036>   MOVEA.l -$20(A0),A3
0002A504 <AmiBlitz3.ab2@14037>   MOVEA.l hunkoffsetbase,A2
0002A50A <AmiBlitz3.ab2@14038>   MOVE.l A3,hunkoffsetbase
0002A510 <AmiBlitz3.ab2@14039>   MOVEA.l _execbase,A6
0002A512 <AmiBlitz3.ab2@14042>   CMPA.l A3,A2
0002A516 <AmiBlitz3.ab2@14043>   BEQ.w JL_0_9C0A
0002A51C <AmiBlitz3.ab2@14044>   SUBQ.l #1,hunkoffsetcounter
0002A51E <AmiBlitz3.ab2@14045>   MOVEA.l A2,A1
0002A520 <AmiBlitz3.ab2@14046>   MOVEA.l (A2),A2
0002A522 <AmiBlitz3.ab2@14047>   MOVEQ.l #$8,D0
0002A528 <AmiBlitz3.ab2@14048>   MOVE.l mempool2,a0
0002A52C <AmiBlitz3.ab2@14049>    JSR _FreePooled(A6)
0002A530 <AmiBlitz3.ab2@14050> BRA.w JL_0_9BF0
0002A534 <AmiBlitz3.ab2@14054>   MOVEA.l forthsp(PC),A0
0002A538 <AmiBlitz3.ab2@14057>   LEA -$12(A0),A0
0002A53E <AmiBlitz3.ab2@14058>   MOVE.l A0,forthsp
0002A542 <AmiBlitz3.ab2@14059>   MOVEM.l (A7)+,D1/A0
0002A546 <AmiBlitz3.ab2@14060>   BSR.w reget
0002A54A <AmiBlitz3.ab2@14061> BRA.w JL_0_9AFE
0002A54E <AmiBlitz3.ab2@14065>   BSR.w JL_0_A386
0002A550 <AmiBlitz3.ab2@14066>   TST.w d0
0002A554 <AmiBlitz3.ab2@14067>   BEQ JL_0_9C42
0002A558 <AmiBlitz3.ab2@14068>   CMP.b #",",d0
0002A55C <AmiBlitz3.ab2@14069>   BEQ JL_0_9C42
0002A560 <AmiBlitz3.ab2@14070>   CMP.b #"@",d0                                            ;expandline @@
0002A564 <AmiBlitz3.ab2@14071>   BEQ JL_0_9C42
0002A56A <AmiBlitz3.ab2@14072>   LEA operators,A0
0002A56C <AmiBlitz3.ab2@14075>    TST.w (A0)
0002A570 <AmiBlitz3.ab2@14076>    BEQ.w JL_0_9C42
0002A572 <AmiBlitz3.ab2@14077>   CMP.w (A0),D0
0002A576 <AmiBlitz3.ab2@14078>    BEQ.w JL_0_9C46a
0002A57A <AmiBlitz3.ab2@14079>   LEA $20(A0),A0
0002A57E <AmiBlitz3.ab2@14080> BRA.w JL_0_9C2E
0002A580 <AmiBlitz3.ab2@14084>   MOVEQ.l #$00,D1
0002A582 <AmiBlitz3.ab2@14085> RTS
0002A586 <AmiBlitz3.ab2@14089>   CMP.w #$3C,D0
0002A58A <AmiBlitz3.ab2@14090>    BNE.w JL_0_9C70
0002A58E <AmiBlitz3.ab2@14091>    BSR.w get1bytemain
0002A592 <AmiBlitz3.ab2@14092>   CMP.w #$3D,D0
0002A596 <AmiBlitz3.ab2@14093>    BNE.w JL_0_9C64
0002A59C <AmiBlitz3.ab2@14094>   LEA ople,A0
0002A5A0 <AmiBlitz3.ab2@14095> BRA.w JL_0_9CCA
0002A5A4 <AmiBlitz3.ab2@14099>   CMP.w #$3E,D0
0002A5A8 <AmiBlitz3.ab2@14100>    BNE.w JL_0_9C96
0002A5AC <AmiBlitz3.ab2@14101> BRA.w JL_0_9CC4
0002A5B0 <AmiBlitz3.ab2@14105>   CMP.w #$3E,D0
0002A5B4 <AmiBlitz3.ab2@14106>    BNE.w JL_0_9C9E
0002A5B8 <AmiBlitz3.ab2@14107>    BSR.w get1bytemain
0002A5BC <AmiBlitz3.ab2@14108>   CMP.w #$3D,D0
0002A5C0 <AmiBlitz3.ab2@14109>    BNE.w JL_0_9C8E
0002A5C6 <AmiBlitz3.ab2@14110>   LEA opge,A0
0002A5CA <AmiBlitz3.ab2@14111> BRA.w JL_0_9CCA
0002A5CE <AmiBlitz3.ab2@14115>   CMP.w #$3C,D0
0002A5D2 <AmiBlitz3.ab2@14116>    BEQ.w JL_0_9CC4
0002A5DC <AmiBlitz3.ab2@14120>     MOVE.w oldqflag,instringon
0002A5E2 <AmiBlitz3.ab2@14121>     MOVEA.l lastsourcepos,A5
0002A5E6 <AmiBlitz3.ab2@14122> BRA.w JL_0_9CCA
0002A5EA <AmiBlitz3.ab2@14126>   CMP.w #$3D,D0
0002A5EE <AmiBlitz3.ab2@14127>    BNE.w JL_0_9CCA
0002A5F2 <AmiBlitz3.ab2@14128>    BSR.w get1bytemain
0002A5F6 <AmiBlitz3.ab2@14129>   CMP.w #$3E,D0
0002A5FA <AmiBlitz3.ab2@14130>    BNE.w JL_0_9CBC
0002A600 <AmiBlitz3.ab2@14131>   LEA opge,A0
0002A604 <AmiBlitz3.ab2@14132> BRA.w JL_0_9CCA
0002A608 <AmiBlitz3.ab2@14136>   CMP.w #$3C,D0
0002A60C <AmiBlitz3.ab2@14137>   BNE.w JL_0_9C96
0002A612 <AmiBlitz3.ab2@14140>   LEA opne,A0
0002A616 <AmiBlitz3.ab2@14143>   MOVE.w $1E(A0),D1
0002A618 <AmiBlitz3.ab2@14144> RTS
0002A61A <AmiBlitz3.ab2@14151>   MOVE.w d2,d1
0002A61C <AmiBlitz3.ab2@14152>   SUBQ.w #1,D1
0002A620 <AmiBlitz3.ab2@14153>    BMI.w illoperr
0002A622 <AmiBlitz3.ab2@14154>   LSL.w #2,D1
0002A626 <AmiBlitz3.ab2@14155>   MOVE.l $2(A0,D1.W),D1
0002A62A <AmiBlitz3.ab2@14156>    BEQ.w illoperr
0002A62C <AmiBlitz3.ab2@14157>   MOVEA.l D1,A0
0002A62E <AmiBlitz3.ab2@14160> JMP (A0)
0002A632 <AmiBlitz3.ab2@14176>   MOVEA.l precsp(PC),A1
0002A638 <AmiBlitz3.ab2@14177>   CMPA.l #precstackf,A1
0002A63C <AmiBlitz3.ab2@14178>    BCC.w pserr
0002A63E <AmiBlitz3.ab2@14179>   MOVE.w -(A1),D1
0002A640 <AmiBlitz3.ab2@14180>   MOVEA.l -(A1),A0
0002A646 <AmiBlitz3.ab2@14181>   MOVE.l A1,precsp
0002A648 <AmiBlitz3.ab2@14182> RTS
0002A64C <AmiBlitz3.ab2@14185> precsp:      Dc.l precstack
0002A748 <AmiBlitz3.ab2@14186> precstack:   Ds.l 63                                       ;ds 6*32 org source   ;Lotsa Room?
0002A7CC <AmiBlitz3.ab2@14187>              Ds.l 33
0002A7CE <AmiBlitz3.ab2@14193> mseq:  SEQ D0
0002A7D0 <AmiBlitz3.ab2@14194> msne:    SNE D0
0002A7D2 <AmiBlitz3.ab2@14195> mslt:    SLT D0
0002A7D4 <AmiBlitz3.ab2@14196> msle:    SLE D0
0002A7D6 <AmiBlitz3.ab2@14197> msgt:    SGT D0
0002A7D8 <AmiBlitz3.ab2@14198> msge:    SGE D0
0002A7DA <AmiBlitz3.ab2@14200> cmp0:    CMP.b D0,D0
0002A7DC <AmiBlitz3.ab2@14201> cmp1:    CMP.w D0,D0
0002A7DE <AmiBlitz3.ab2@14202> cmp2:    CMP.l D0,D0
0002A7E2 <AmiBlitz3.ab2@14206>   MOVE.w cmp0(PC),D1
0002A7E6 <AmiBlitz3.ab2@14207> BRA.w doeqcmp2                                            ;writecompare
0002A7EA <AmiBlitz3.ab2@14211>   MOVE.w cmp0(PC),D1
0002A7EE <AmiBlitz3.ab2@14212> BRA.w donecmp2
0002A7F2 <AmiBlitz3.ab2@14216>   MOVE.w cmp0(PC),D1
0002A7F6 <AmiBlitz3.ab2@14217> BRA.w doltcmp2
0002A7FA <AmiBlitz3.ab2@14221>   MOVE.w cmp0(PC),D1
0002A7FE <AmiBlitz3.ab2@14222> BRA.w dolecmp2
0002A802 <AmiBlitz3.ab2@14226>   MOVE.w cmp0(PC),D1
0002A806 <AmiBlitz3.ab2@14227> BRA.w dogtcmp2
0002A80A <AmiBlitz3.ab2@14232>   MOVE.w cmp0(PC),D1
0002A80E <AmiBlitz3.ab2@14233> BRA.w dogecmp2
0002A812 <AmiBlitz3.ab2@14237>   MOVE.w cmp1(PC),D1
0002A816 <AmiBlitz3.ab2@14238> BRA.w doeqcmp2
0002A81A <AmiBlitz3.ab2@14242>   MOVE.w cmp1(PC),D1
0002A81E <AmiBlitz3.ab2@14243> BRA.w donecmp2
0002A822 <AmiBlitz3.ab2@14247>   MOVE.w cmp1(PC),D1
0002A826 <AmiBlitz3.ab2@14248> BRA.w doltcmp2
0002A82A <AmiBlitz3.ab2@14252>   MOVE.w cmp1(PC),D1
0002A82E <AmiBlitz3.ab2@14253> BRA.w dolecmp2
0002A832 <AmiBlitz3.ab2@14257>   MOVE.w cmp1(PC),D1
0002A836 <AmiBlitz3.ab2@14258> BRA.w dogtcmp2
0002A83A <AmiBlitz3.ab2@14263>   MOVE.w cmp1(PC),D1
0002A83E <AmiBlitz3.ab2@14264> BRA.w dogecmp2
0002A842 <AmiBlitz3.ab2@14268>   MOVE.w cmp2(PC),D1                                   ;writecomparelong
0002A846 <AmiBlitz3.ab2@14269> BRA doeqcmp2
0002A84A <AmiBlitz3.ab2@14272>   MOVE.w cmp2(PC),D1
0002A84E <AmiBlitz3.ab2@14273> BRA donecmp2
0002A852 <AmiBlitz3.ab2@14277>   MOVE.w cmp2(PC),D1
0002A856 <AmiBlitz3.ab2@14278> BRA.w doltcmp2
0002A85A <AmiBlitz3.ab2@14282>   MOVE.w cmp2(PC),D1
0002A85E <AmiBlitz3.ab2@14283> BRA.w dolecmp2
0002A862 <AmiBlitz3.ab2@14287>   MOVE.w cmp2(PC),D1
0002A866 <AmiBlitz3.ab2@14288> BRA.w dogtcmp2
0002A86A <AmiBlitz3.ab2@14292>   MOVE.w cmp2(PC),D1
0002A86E <AmiBlitz3.ab2@14293> BRA.w dogecmp2
0002A870 <AmiBlitz3.ab2@14296> cfregat:  Ds.w 1
0002A876 <AmiBlitz3.ab2@14300>   MOVE.w D1,libjsr+2
0002A87A <AmiBlitz3.ab2@14301>    BSR.w JL_0_AD40
0002A87C <AmiBlitz3.ab2@14302>   MOVE.l D4,D1
0002A880 <AmiBlitz3.ab2@14303>    BSR.w JL_0_AD38
0002A884 <AmiBlitz3.ab2@14304>   MOVE.w #$C900,D1
0002A888 <AmiBlitz3.ab2@14305>    BSR.w Atokejsr
0002A88C <AmiBlitz3.ab2@14306>    BSR.w JL_0_A352
0002A892 <AmiBlitz3.ab2@14307>   MOVE.l libjsr,D1
0002A896 <AmiBlitz3.ab2@14308>    BSR.w writelong
0002A8A0 <AmiBlitz3.ab2@14309>   MOVE.w regnum,cfregat
0002A8A6 <AmiBlitz3.ab2@14310>   CLR.w regnum
0002A8A8 <AmiBlitz3.ab2@14311> RTS
0002A8B2 <AmiBlitz3.ab2@14315>   MOVE.w cfregat,regnum
0002A8B6 <AmiBlitz3.ab2@14316>    BSR.w JL_0_A36E
0002A8B8 <AmiBlitz3.ab2@14317>   MOVE.l D5,D1
0002A8BC <AmiBlitz3.ab2@14318> BRA.w JL_0_AD38
0002A8BE <AmiBlitz3.ab2@14322>    MOVEQ.l #-$2A,D1
0002A8C4 <AmiBlitz3.ab2@14323>    TST.b fpu
0002A8C8 <AmiBlitz3.ab2@14324>    BEQ do_equal_float__nofpu
0002A8CA <AmiBlitz3.ab2@14325>    MOVEQ #0,d1
0002A8D0 <AmiBlitz3.ab2@14326>    MOVE.w regnum,d1
0002A8D2 <AmiBlitz3.ab2@14327>    MOVE.l d1,d2
0002A8D4 <AmiBlitz3.ab2@14328>    ASL.l #7,d1
0002A8D6 <AmiBlitz3.ab2@14329>    ADDQ  #1,d2
0002A8D8 <AmiBlitz3.ab2@14330>    ASL.l #8,d2
0002A8DA <AmiBlitz3.ab2@14331>    ASL.l #2,d2
0002A8DC <AmiBlitz3.ab2@14332>    OR.l d2,d1
0002A8E2 <AmiBlitz3.ab2@14333>    OR.l #$f2000038,d1
0002A8E8 <AmiBlitz3.ab2@14334>    JSR writelong
0002A8EC <AmiBlitz3.ab2@14335>    MOVE.w #$f240,d1
0002A8F2 <AmiBlitz3.ab2@14336>    OR.w regnum,d1
0002A8F6 <AmiBlitz3.ab2@14337>    BSR writeword
0002A8F8 <AmiBlitz3.ab2@14338>    MOVEQ.l #1,d2
0002A8FC <AmiBlitz3.ab2@14339>    MOVE.w #1,d1                                            ;fpu comp fseq
0002A900 <AmiBlitz3.ab2@14340>    BSR writeword
0002A902 <AmiBlitz3.ab2@14341> RTS
0002A906 <AmiBlitz3.ab2@14344>    BSR.w docflib
0002A90A <AmiBlitz3.ab2@14345>    BSR.w doeqcmp
0002A90E <AmiBlitz3.ab2@14346> BRA.w docflib2
0002A910 <AmiBlitz3.ab2@14350>   MOVEQ.l #-$2A,D1
0002A916 <AmiBlitz3.ab2@14351>   TST.b fpu
0002A91A <AmiBlitz3.ab2@14352>    BEQ do_not_equal_float__nofpu
0002A91C <AmiBlitz3.ab2@14353>    MOVEQ #0,d1
0002A922 <AmiBlitz3.ab2@14354>    MOVE.w regnum,d1
0002A924 <AmiBlitz3.ab2@14355>    MOVE.l d1,d2
0002A926 <AmiBlitz3.ab2@14356>    ASL.l #7,d1
0002A928 <AmiBlitz3.ab2@14357>    ADDQ  #1,d2
0002A92A <AmiBlitz3.ab2@14358>    ASL.l #8,d2
0002A92C <AmiBlitz3.ab2@14359>    ASL.l #2,d2
0002A92E <AmiBlitz3.ab2@14360>    OR.l d2,d1
0002A934 <AmiBlitz3.ab2@14361>    OR.l #$f2000038,d1
0002A93A <AmiBlitz3.ab2@14362>    JSR writelong
0002A93E <AmiBlitz3.ab2@14363>    MOVE.w #$f240,d1
0002A944 <AmiBlitz3.ab2@14364>    OR.w regnum,d1
0002A948 <AmiBlitz3.ab2@14365>    BSR writeword
0002A94E <AmiBlitz3.ab2@14366>    MOVE.l #1,d2
0002A952 <AmiBlitz3.ab2@14367>    MOVE.w #$e,d1                                           ;fpu comp fsne
0002A956 <AmiBlitz3.ab2@14368>    BSR writeword
0002A958 <AmiBlitz3.ab2@14369> RTS
0002A95C <AmiBlitz3.ab2@14372>    BSR.w docflib
0002A960 <AmiBlitz3.ab2@14373>    BSR.w donecmp
0002A964 <AmiBlitz3.ab2@14374> BRA.w docflib2
0002A966 <AmiBlitz3.ab2@14378>   MOVEQ.l #-$2A,D1
0002A96C <AmiBlitz3.ab2@14379>     TST.b fpu
0002A970 <AmiBlitz3.ab2@14380>    BEQ do_littler_float__nofpu
0002A972 <AmiBlitz3.ab2@14381>    MOVEQ #0,d1
0002A978 <AmiBlitz3.ab2@14382>    MOVE.w regnum,d1
0002A97A <AmiBlitz3.ab2@14383>    MOVE.l d1,d2
0002A97C <AmiBlitz3.ab2@14384>    ASL.l #7,d1
0002A97E <AmiBlitz3.ab2@14385>    ADDQ  #1,d2
0002A980 <AmiBlitz3.ab2@14386>    ASL.l #8,d2
0002A982 <AmiBlitz3.ab2@14387>    ASL.l #2,d2
0002A984 <AmiBlitz3.ab2@14388>    OR.l d2,d1
0002A98A <AmiBlitz3.ab2@14389>    OR.l #$f2000038,d1
0002A990 <AmiBlitz3.ab2@14390>    JSR writelong
0002A994 <AmiBlitz3.ab2@14391>    MOVE.w #$f240,d1
0002A99A <AmiBlitz3.ab2@14392>    OR.w regnum,d1
0002A99E <AmiBlitz3.ab2@14393>    BSR writeword
0002A9A4 <AmiBlitz3.ab2@14394>    MOVE.l #$1,d2
0002A9A8 <AmiBlitz3.ab2@14395>    MOVE.w #$14,d1                                          ;fpu comp fslt
0002A9AC <AmiBlitz3.ab2@14396>    BSR writeword
0002A9AE <AmiBlitz3.ab2@14397> RTS
0002A9B2 <AmiBlitz3.ab2@14400>    BSR.w docflib
0002A9B6 <AmiBlitz3.ab2@14401>    BSR.w doltcmp
0002A9BA <AmiBlitz3.ab2@14402> BRA.w docflib2
0002A9BC <AmiBlitz3.ab2@14406>   MOVEQ.l #-$2A,D1
0002A9C2 <AmiBlitz3.ab2@14407>   TST.b fpu
0002A9C6 <AmiBlitz3.ab2@14408>    BEQ do_littler_equal_float__nofpu
0002A9C8 <AmiBlitz3.ab2@14409>    MOVEQ #0,d1
0002A9CE <AmiBlitz3.ab2@14410>    MOVE.w regnum,d1
0002A9D0 <AmiBlitz3.ab2@14411>    MOVE.l d1,d2
0002A9D2 <AmiBlitz3.ab2@14412>    ASL.l #7,d1
0002A9D4 <AmiBlitz3.ab2@14413>    ADDQ  #1,d2
0002A9D6 <AmiBlitz3.ab2@14414>    ASL.l #8,d2
0002A9D8 <AmiBlitz3.ab2@14415>    ASL.l #2,d2
0002A9DA <AmiBlitz3.ab2@14416>    OR.l d2,d1
0002A9E0 <AmiBlitz3.ab2@14417>    OR.l #$f2000038,d1
0002A9E6 <AmiBlitz3.ab2@14418>    JSR writelong
0002A9EA <AmiBlitz3.ab2@14419>    MOVE.w #$f240,d1
0002A9F0 <AmiBlitz3.ab2@14420>    OR.w regnum,d1
0002A9F4 <AmiBlitz3.ab2@14421>    BSR writeword
0002A9FA <AmiBlitz3.ab2@14422>    MOVE.l #1,d2
0002A9FE <AmiBlitz3.ab2@14423>    MOVE.w #$15,d1                                          ;fpu comp fsle
0002AA02 <AmiBlitz3.ab2@14424>    BSR writeword
0002AA04 <AmiBlitz3.ab2@14425> RTS
0002AA08 <AmiBlitz3.ab2@14428>    BSR.w docflib
0002AA0C <AmiBlitz3.ab2@14429>    BSR.w dolecmp
0002AA10 <AmiBlitz3.ab2@14430> BRA.w docflib2
0002AA12 <AmiBlitz3.ab2@14434>   MOVEQ.l #-$2A,D1
0002AA18 <AmiBlitz3.ab2@14435>    TST.b fpu
0002AA1C <AmiBlitz3.ab2@14436>    BEQ do_greater_float__nofpu
0002AA1E <AmiBlitz3.ab2@14437>     MOVEQ #0,d1
0002AA24 <AmiBlitz3.ab2@14438>    MOVE.w regnum,d1
0002AA26 <AmiBlitz3.ab2@14439>    MOVE.l d1,d2
0002AA28 <AmiBlitz3.ab2@14440>    ASL.l #7,d1
0002AA2A <AmiBlitz3.ab2@14441>    ADDQ  #1,d2
0002AA2C <AmiBlitz3.ab2@14442>    ASL.l #8,d2
0002AA2E <AmiBlitz3.ab2@14443>    ASL.l #2,d2
0002AA30 <AmiBlitz3.ab2@14444>    OR.l d2,d1
0002AA36 <AmiBlitz3.ab2@14445>    OR.l #$f2000038,d1
0002AA3C <AmiBlitz3.ab2@14446>    JSR writelong
0002AA40 <AmiBlitz3.ab2@14447>    MOVE.w #$f240,d1
0002AA46 <AmiBlitz3.ab2@14448>    OR.w regnum,d1
0002AA4A <AmiBlitz3.ab2@14449>    BSR writeword
0002AA50 <AmiBlitz3.ab2@14450>    MOVE.l #1,d2
0002AA54 <AmiBlitz3.ab2@14451>    MOVE.w #$12,d1                                          ;fpu comp fsgt
0002AA58 <AmiBlitz3.ab2@14452>    BSR writeword
0002AA5A <AmiBlitz3.ab2@14453> RTS
0002AA5E <AmiBlitz3.ab2@14456>    BSR.w docflib
0002AA62 <AmiBlitz3.ab2@14457>    BSR.w dogtcmp
0002AA66 <AmiBlitz3.ab2@14458> BRA.w docflib2
0002AA68 <AmiBlitz3.ab2@14462>   MOVEQ.l #-$2A,D1
0002AA6E <AmiBlitz3.ab2@14463>  TST.b fpu
0002AA72 <AmiBlitz3.ab2@14464>    BEQ do_greater_equal_float__nofpu
0002AA74 <AmiBlitz3.ab2@14465>    MOVEQ #0,d1
0002AA7A <AmiBlitz3.ab2@14466>    MOVE.w regnum,d1
0002AA7C <AmiBlitz3.ab2@14467>    MOVE.l d1,d2
0002AA7E <AmiBlitz3.ab2@14468>    ASL.l #7,d1
0002AA80 <AmiBlitz3.ab2@14469>    ADDQ  #1,d2
0002AA82 <AmiBlitz3.ab2@14470>    ASL.l #8,d2
0002AA84 <AmiBlitz3.ab2@14471>    ASL.l #2,d2
0002AA86 <AmiBlitz3.ab2@14472>    OR.l d2,d1
0002AA8C <AmiBlitz3.ab2@14473>    OR.l #$f2000038,d1
0002AA92 <AmiBlitz3.ab2@14474>    JSR writelong
0002AA96 <AmiBlitz3.ab2@14475>    MOVE.w #$f240,d1
0002AA9C <AmiBlitz3.ab2@14476>    OR.w regnum,d1
0002AAA0 <AmiBlitz3.ab2@14477>    BSR writeword
0002AAA6 <AmiBlitz3.ab2@14478>    MOVE.l #1,d2
0002AAAA <AmiBlitz3.ab2@14479>    MOVE.w #$13,d1                                          ;fpu comp fsge
0002AAAE <AmiBlitz3.ab2@14480>    BSR writeword
0002AAB0 <AmiBlitz3.ab2@14481> RTS
0002AAB4 <AmiBlitz3.ab2@14484>    BSR.w docflib
0002AAB8 <AmiBlitz3.ab2@14485>    BSR.w dogecmp
0002AABC <AmiBlitz3.ab2@14486> BRA.w docflib2
0002AAC2 <AmiBlitz3.ab2@14491>   MOVE.l #$CE00,D1
0002AAC8 <AmiBlitz3.ab2@14492>    MOVE.l d1,lastinstruction
0002AACC <AmiBlitz3.ab2@14493>    BSR.w Atokejsr
0002AAD0 <AmiBlitz3.ab2@14494> BRA.w doeqcmp
0002AAD6 <AmiBlitz3.ab2@14498>   MOVE.l #$CE00,D1
0002AADC <AmiBlitz3.ab2@14499>    MOVE.l d1,lastinstruction
0002AAE0 <AmiBlitz3.ab2@14500>    BSR.w Atokejsr
0002AAE4 <AmiBlitz3.ab2@14501> BRA.w donecmp
0002AAEA <AmiBlitz3.ab2@14505>   MOVE.l #$CE00,D1
0002AAF0 <AmiBlitz3.ab2@14506>    MOVE.l d1,lastinstruction
0002AAF4 <AmiBlitz3.ab2@14507>    BSR.w Atokejsr
0002AAF8 <AmiBlitz3.ab2@14508> BRA.w doltcmp
0002AAFE <AmiBlitz3.ab2@14512>   MOVE.l #$CE00,D1
0002AB04 <AmiBlitz3.ab2@14513>    MOVE.l d1,lastinstruction
0002AB08 <AmiBlitz3.ab2@14514>    BSR.w Atokejsr
0002AB0C <AmiBlitz3.ab2@14515> BRA.w dolecmp
0002AB12 <AmiBlitz3.ab2@14519>   MOVE.l #$CE00,D1
0002AB18 <AmiBlitz3.ab2@14520>    MOVE.l d1,lastinstruction
0002AB1C <AmiBlitz3.ab2@14521>    BSR.w Atokejsr
0002AB20 <AmiBlitz3.ab2@14522> BRA.w dogtcmp
0002AB26 <AmiBlitz3.ab2@14526>   MOVE.l #$CE00,D1
0002AB2C <AmiBlitz3.ab2@14527>    MOVE.l d1,lastinstruction
0002AB30 <AmiBlitz3.ab2@14528>    BSR.w Atokejsr
0002AB34 <AmiBlitz3.ab2@14529> BRA.w dogecmp
0002AB3A <AmiBlitz3.ab2@14534>   TST.b fast                                               ;compare
0002AB3E <AmiBlitz3.ab2@14535>   BEQ cmpit__org
0002AB44 <AmiBlitz3.ab2@14539>   MOVE.l destpointer,a0
0002AB4A <AmiBlitz3.ab2@14540>   SUB.l imm_addr,a0
0002AB50 <AmiBlitz3.ab2@14541>   CMP.l #6,a0
0002AB54 <AmiBlitz3.ab2@14542>   BNE cmpit__l11
0002AB5A <AmiBlitz3.ab2@14543>   MOVE.l imm_addr,a0
0002AB62 <AmiBlitz3.ab2@14544>   CMP.w #$223c,imm_addr
0002AB66 <AmiBlitz3.ab2@14545>   BNE cmpit__org
0002AB6C <AmiBlitz3.ab2@14546>   ADD.w #$8e80,-6(a4)
0002AB72 <AmiBlitz3.ab2@14549>   CLR.l imm_addr
0002AB74 <AmiBlitz3.ab2@14550> RTS
0002AB7A <AmiBlitz3.ab2@14553>   CMP.l #4,a0
0002AB7E <AmiBlitz3.ab2@14554>   BNE cmpit__l10
0002AB82 <AmiBlitz3.ab2@14555>   CMP.b #2,d3
0002AB86 <AmiBlitz3.ab2@14556>   BNE cmpit__l11b
0002AB8C <AmiBlitz3.ab2@14557>   ADD.w #$7e40,-4(a4)
0002AB8E <AmiBlitz3.ab2@14558> RTS
0002AB94 <AmiBlitz3.ab2@14561>  ADD.w #$7e00,-4(a4)
0002AB96 <AmiBlitz3.ab2@14562> RTS
0002AB9C <AmiBlitz3.ab2@14565>    MOVE.l destpointer,a0
0002ABA2 <AmiBlitz3.ab2@14566>    SUB.l load_var_addr,a0
0002ABA6 <AmiBlitz3.ab2@14567>    CMP.w #4,a0
0002ABAA <AmiBlitz3.ab2@14568>    BNE cmpit__org
0002ABAE <AmiBlitz3.ab2@14569>    CMP.b #3,d3
0002ABB2 <AmiBlitz3.ab2@14570>    BCS cmpit__lv1
0002ABB8 <AmiBlitz3.ab2@14571>    CLR.l load_var_addr
0002ABBE <AmiBlitz3.ab2@14572>    ADD.w #$9080-$200,-4(a4)
0002ABC0 <AmiBlitz3.ab2@14573> RTS
0002ABC4 <AmiBlitz3.ab2@14576>   CMP.b #2,d3
0002ABC8 <AmiBlitz3.ab2@14577>    BNE cmpit__org
0002ABCE <AmiBlitz3.ab2@14578>    CLR.l load_var_addr
0002ABD4 <AmiBlitz3.ab2@14579>    ADD.w #$8040-$200,-4(a4)
0002ABD6 <AmiBlitz3.ab2@14580> RTS
0002ABDC <AmiBlitz3.ab2@14583>   MOVE.w regnum,D3
0002ABDE <AmiBlitz3.ab2@14584>   OR.w D3,D1
0002ABE0 <AmiBlitz3.ab2@14585>   LSL.w #8,D3
0002ABE2 <AmiBlitz3.ab2@14586>   LSL.w #1,D3
0002ABE4 <AmiBlitz3.ab2@14587>   OR.w D3,D1
0002ABE6 <AmiBlitz3.ab2@14588>   ADDQ.w #1,D1
0002ABEA <AmiBlitz3.ab2@14589> BRA.w writeword
0002ABEE <AmiBlitz3.ab2@14593>    BSR.w cmpit
0002ABF2 <AmiBlitz3.ab2@14596>    MOVE.w mseq(PC),D1
0002ABF6 <AmiBlitz3.ab2@14597> BRA.w cpoke
0002ABFA <AmiBlitz3.ab2@14601>   BSR.w cmpit
0002ABFE <AmiBlitz3.ab2@14604>   MOVE.w msne(PC),D1
0002AC02 <AmiBlitz3.ab2@14605> BRA.w cpoke
0002AC06 <AmiBlitz3.ab2@14609>   BSR.w cmpit
0002AC0A <AmiBlitz3.ab2@14612>    MOVE.w mslt(PC),D1
0002AC0E <AmiBlitz3.ab2@14613> BRA.w cpoke
0002AC12 <AmiBlitz3.ab2@14617>    BSR.w cmpit
0002AC16 <AmiBlitz3.ab2@14620>    MOVE.w msle(PC),D1
0002AC1A <AmiBlitz3.ab2@14621> BRA.w cpoke
0002AC1E <AmiBlitz3.ab2@14625>    BSR.w cmpit
0002AC22 <AmiBlitz3.ab2@14628>    MOVE.w msgt(PC),D1
0002AC26 <AmiBlitz3.ab2@14629> BRA.w cpoke
0002AC2A <AmiBlitz3.ab2@14633>   BSR.w cmpit
0002AC2E <AmiBlitz3.ab2@14636>    MOVE.w msge(PC),D1
0002AC34 <AmiBlitz3.ab2@14639>    OR.w regnum,D1
0002AC38 <AmiBlitz3.ab2@14640>    CMP.w #5,d2
0002AC3C <AmiBlitz3.ab2@14641>    BNE cpoke__nod0
0002AC40 <AmiBlitz3.ab2@14642>    CMP.w #5,d3
0002AC44 <AmiBlitz3.ab2@14643>    BNE cpoke__nod0
0002AC46 <AmiBlitz3.ab2@14644>    MOVE.l d1,-(a7)
0002AC4C <AmiBlitz3.ab2@14645>    MOVE.l #$44004a00,d1                                    ;68k neg.b:tst.b
0002AC50 <AmiBlitz3.ab2@14646>    BSR writelong
0002AC52 <AmiBlitz3.ab2@14647>    MOVE.l (a7)+,d1
0002AC56 <AmiBlitz3.ab2@14650>    BSR.w writeword                                         ;writeseq
0002AC58 <AmiBlitz3.ab2@14651>    MOVEQ.l #1,d2
0002AC5E <AmiBlitz3.ab2@14652>    MOVE.l lasttoken,d1
0002AC64 <AmiBlitz3.ab2@14653>     TST.b fast
0002AC68 <AmiBlitz3.ab2@14654>     BEQ.s cpoke__l11
0002AC6E <AmiBlitz3.ab2@14655>    CMP.l #$800b,d1
0002AC72 <AmiBlitz3.ab2@14656>    BEQ cpoke__l10
0002AC76 <AmiBlitz3.ab2@14659>   MOVE.w #$4880,D1                                         ;ext.w D regat
0002AC7C <AmiBlitz3.ab2@14660>   OR.w regnum,D1
0002AC80 <AmiBlitz3.ab2@14661>    BSR.w writeword                                         ;writeext.w
0002AC82 <AmiBlitz3.ab2@14662>   MOVEQ.l #$02,D2                                          ;type now WORD!
0002AC84 <AmiBlitz3.ab2@14665> RTS
0002AC88 <AmiBlitz3.ab2@14670>   MOVE.w #$D040,D1
0002AC8A <AmiBlitz3.ab2@14671>   MOVEQ.l #$02,D2                                          ;writeaddword   ;now a word
0002AC8E <AmiBlitz3.ab2@14672> BRA.w doplus2
0002AC92 <AmiBlitz3.ab2@14676>   MOVE.w #$D040,D1
0002AC94 <AmiBlitz3.ab2@14677>   MOVEQ.l #$03,D2                                          ;now a long
0002AC98 <AmiBlitz3.ab2@14678>    BSR.w doplus2
0002AC9C <AmiBlitz3.ab2@14679> BRA.w convert_word_to_long
0002ACA0 <AmiBlitz3.ab2@14683>   MOVE.w #$D080,D1                                         ;writeaddlong
0002ACA2 <AmiBlitz3.ab2@14686>   MOVE.w d1,a1
0002ACA8 <AmiBlitz3.ab2@14687>   TST.b fast
0002ACAC <AmiBlitz3.ab2@14688>   BEQ doplus2__l10
0002ACAE <AmiBlitz3.ab2@14692>   ASR.w #8,d1
0002ACB2 <AmiBlitz3.ab2@14693>   CMP.b #$90,d1
0002ACB6 <AmiBlitz3.ab2@14694>   BEQ doplus2__sub1
0002ACBA <AmiBlitz3.ab2@14695>   CMP.b #$d0,d1
0002ACBE <AmiBlitz3.ab2@14696>   BNE doplus2__l10
0002ACC2 <AmiBlitz3.ab2@14697>   CMP.b #3,d3
0002ACC6 <AmiBlitz3.ab2@14698>   BCS doplus2__lq10
0002ACCC <AmiBlitz3.ab2@14699>   TST.b quickadd
0002ACD2 <AmiBlitz3.ab2@14703>    MOVE.l destpointer,a0
0002ACD8 <AmiBlitz3.ab2@14704>    CLR.b quickadd
0002ACDE <AmiBlitz3.ab2@14705>    CLR.l load_var_addr
0002ACE4 <AmiBlitz3.ab2@14706>    SUB.l imm_addr,a0
0002ACE8 <AmiBlitz3.ab2@14707>    CMP.w #6,a0
0002ACEC <AmiBlitz3.ab2@14708>    BEQ doplus2__li10
0002ACF0 <AmiBlitz3.ab2@14709>    CMP.w #4,a0
0002ACF4 <AmiBlitz3.ab2@14710>    BNE.s doplus2__li1
0002ACFA <AmiBlitz3.ab2@14711>    CLR.l imm_addr
0002AD00 <AmiBlitz3.ab2@14712>    ADD.w #$a040-$200,-4(a4)
0002AD02 <AmiBlitz3.ab2@14713> RTS
0002AD04 <AmiBlitz3.ab2@14716>    MOVE.l a4,a0
0002AD0A <AmiBlitz3.ab2@14717>    SUB.l load_var_addr,a0
0002AD10 <AmiBlitz3.ab2@14718>    CMP.l #$a,a0
0002AD14 <AmiBlitz3.ab2@14719>    BNE doplus2__l10e
0002AD1A <AmiBlitz3.ab2@14720>    CLR.l load_var_addr
0002AD1E <AmiBlitz3.ab2@14721>    MOVE.w -$8(a4),d1
0002AD24 <AmiBlitz3.ab2@14722>    MOVE.l -$4(a4),-$8(a4)
0002AD28 <AmiBlitz3.ab2@14723>    MOVE.w d1,-$4(a4)
0002AD2E <AmiBlitz3.ab2@14724>    SUB.w #$1980,-$a(a4)
0002AD34 <AmiBlitz3.ab2@14725>    SUBQ.l #2,destpointer
0002AD36 <AmiBlitz3.ab2@14726> RTS
0002AD3C <AmiBlitz3.ab2@14729>   CLR.b quickadd
0002AD40 <AmiBlitz3.ab2@14730> BRA doplus2__l10
0002AD46 <AmiBlitz3.ab2@14733>    CLR.l imm_addr
0002AD4A <AmiBlitz3.ab2@14734>    TST.l -4(a4)                                            ;skip If ADD.l #0,dx
0002AD4E <AmiBlitz3.ab2@14735>    BNE doplus2__doit
0002AD54 <AmiBlitz3.ab2@14736>    SUBQ.l #6,destpointer
0002AD56 <AmiBlitz3.ab2@14737> RTS
0002AD5C <AmiBlitz3.ab2@14740>    ADD.w #$b080-$200,-6(a4)
0002AD5E <AmiBlitz3.ab2@14741> RTS
0002AD64 <AmiBlitz3.ab2@14744>    MOVE.l destpointer,a0
0002AD6A <AmiBlitz3.ab2@14745>    SUB.l load_var_addr,a0
0002AD6E <AmiBlitz3.ab2@14746>    CMP.w #4,a0
0002AD72 <AmiBlitz3.ab2@14747>    BNE doplus2__l10
0002AD76 <AmiBlitz3.ab2@14748>    CMP.b #3,d3
0002AD7A <AmiBlitz3.ab2@14749>    BNE doplus2__lv1
0002AD80 <AmiBlitz3.ab2@14750>    CLR.l load_var_addr
0002AD86 <AmiBlitz3.ab2@14751>    ADD.w #$b080-$200,-4(a4)
0002AD88 <AmiBlitz3.ab2@14752> RTS
0002AD8C <AmiBlitz3.ab2@14755>   CMP.b #2,d3
0002AD90 <AmiBlitz3.ab2@14756>   BNE doplus2__l10
0002AD96 <AmiBlitz3.ab2@14757>   CLR.l load_var_addr
0002AD9C <AmiBlitz3.ab2@14758>   ADD.w #$a040-$200,-4(a4)
0002AD9E <AmiBlitz3.ab2@14759> RTS
0002ADA4 <AmiBlitz3.ab2@14762>   MOVE.w regnum,D3
0002ADA6 <AmiBlitz3.ab2@14763>   MOVE.w a1,d1
0002ADA8 <AmiBlitz3.ab2@14764>   OR.w D3,D1
0002ADAA <AmiBlitz3.ab2@14765>   ADDQ.w #1,D1
0002ADAC <AmiBlitz3.ab2@14766>   LSL.w #8,D3
0002ADAE <AmiBlitz3.ab2@14767>   LSL.w #1,D3
0002ADB0 <AmiBlitz3.ab2@14768>   OR.w D3,D1
0002ADB4 <AmiBlitz3.ab2@14769> BRA.w writeword
0002ADB8 <AmiBlitz3.ab2@14772>    CMP.b #3,d3
0002ADBC <AmiBlitz3.ab2@14773>    BCS doplus2__sub1_lq10
0002ADC2 <AmiBlitz3.ab2@14774>    TST.b quickadd
0002ADC8 <AmiBlitz3.ab2@14778>    MOVE.l destpointer,a0
0002ADCE <AmiBlitz3.ab2@14779>    CLR.b quickadd
0002ADD4 <AmiBlitz3.ab2@14780>    CLR.l load_var_addr
0002ADDA <AmiBlitz3.ab2@14781>    SUB.l imm_addr,a0
0002ADDE <AmiBlitz3.ab2@14782>    CMP.w #6,a0
0002ADE2 <AmiBlitz3.ab2@14783>    BEQ doplus2__sub1_li10
0002ADE6 <AmiBlitz3.ab2@14784>    CMP.w #4,a0
0002ADEA <AmiBlitz3.ab2@14785>    BNE.s doplus2__sub1_li1
0002ADF0 <AmiBlitz3.ab2@14786>    CLR.l imm_addr
0002ADF6 <AmiBlitz3.ab2@14787>    ADD.w #$6040-$200,-4(a4)
0002ADF8 <AmiBlitz3.ab2@14788> RTS
0002ADFA <AmiBlitz3.ab2@14791>    MOVE.l a4,a0
0002AE00 <AmiBlitz3.ab2@14792>     SUB.l load_var_addr,a0
0002AE06 <AmiBlitz3.ab2@14793>     CMP.l #$a,a0
0002AE0A <AmiBlitz3.ab2@14794>     BNE doplus2__sub1_l10e
0002AE10 <AmiBlitz3.ab2@14795>    CLR.l load_var_addr
0002AE14 <AmiBlitz3.ab2@14796>    MOVE.w -$8(a4),d1
0002AE1A <AmiBlitz3.ab2@14797>    MOVE.l -$4(a4),-$8(a4)
0002AE1E <AmiBlitz3.ab2@14798>    MOVE.w d1,-$4(a4)
0002AE24 <AmiBlitz3.ab2@14799>    SUB.w #$1b80,-$a(a4)
0002AE2A <AmiBlitz3.ab2@14800>    SUBQ.l #2,destpointer
0002AE2C <AmiBlitz3.ab2@14801> RTS
0002AE32 <AmiBlitz3.ab2@14804>   CLR.b quickadd
0002AE36 <AmiBlitz3.ab2@14805> BRA doplus2__sub1_l10
0002AE3C <AmiBlitz3.ab2@14808>    CLR.l imm_addr
0002AE42 <AmiBlitz3.ab2@14809>    ADD.w #$7080-$200,-6(a4)
0002AE44 <AmiBlitz3.ab2@14810> RTS
0002AE4A <AmiBlitz3.ab2@14813>    MOVE.l destpointer,a0
0002AE50 <AmiBlitz3.ab2@14814>    SUB.l load_var_addr,a0
0002AE54 <AmiBlitz3.ab2@14815>    CMP.w #4,a0
0002AE58 <AmiBlitz3.ab2@14816>    BNE doplus2__sub1_l10
0002AE5C <AmiBlitz3.ab2@14817>    CMP.b #3,d3
0002AE60 <AmiBlitz3.ab2@14818>    BNE doplus2__sub1_lv1
0002AE66 <AmiBlitz3.ab2@14819>    CLR.l load_var_addr
0002AE6C <AmiBlitz3.ab2@14820>    ADD.w #$7080-$200,-4(a4)
0002AE6E <AmiBlitz3.ab2@14821> RTS
0002AE72 <AmiBlitz3.ab2@14824>    CMP.b #2,d3
0002AE76 <AmiBlitz3.ab2@14825>    BNE doplus2__sub1_l10
0002AE7C <AmiBlitz3.ab2@14826>    CLR.l load_var_addr
0002AE82 <AmiBlitz3.ab2@14827>    ADD.w #$6040-$200,-4(a4)
0002AE84 <AmiBlitz3.ab2@14828> RTS
0002AE8A <AmiBlitz3.ab2@14831>   MOVE.w regnum,D3
0002AE8C <AmiBlitz3.ab2@14832>   MOVE.w a1,d1
0002AE8E <AmiBlitz3.ab2@14833>   OR.w D3,D1
0002AE90 <AmiBlitz3.ab2@14834>   ADDQ.w #1,D1
0002AE92 <AmiBlitz3.ab2@14835>   LSL.w #8,D3
0002AE94 <AmiBlitz3.ab2@14836>   LSL.w #1,D3
0002AE96 <AmiBlitz3.ab2@14837>   OR.w D3,D1
0002AE9A <AmiBlitz3.ab2@14838> BRA.w writeword
0002AE9C <AmiBlitz3.ab2@14842>   MOVEQ #0,d0
0002AEA2 <AmiBlitz3.ab2@14843>   MOVE.w regnum,d0
0002AEA4 <AmiBlitz3.ab2@14844>   ADDQ #1,d0
0002AEA6 <AmiBlitz3.ab2@14845>   ASL.w #8,d0
0002AEA8 <AmiBlitz3.ab2@14846>   ASL.w #2,d0
0002AEAE <AmiBlitz3.ab2@14847>   MOVE.l #$f2000022,d1                                     ;fpu add
0002AEB0 <AmiBlitz3.ab2@14848>   OR.l d0,d1
0002AEB6 <AmiBlitz3.ab2@14849>   MOVE.w regnum,d0
0002AEB8 <AmiBlitz3.ab2@14850>   ASL.w #7,d0
0002AEBA <AmiBlitz3.ab2@14851>   OR.l d0,d1
0002AEBE <AmiBlitz3.ab2@14852> BRA.w writelong
0002AEC4 <AmiBlitz3.ab2@14858>   TST.b iee
0002AEC8 <AmiBlitz3.ab2@14859>   BNE do_plus_float__fadd1
0002AECC <AmiBlitz3.ab2@14860>   MOVE.w #$FFBE,D1                                         ;#-66,d1 org soruce ;floatadd
0002AED2 <AmiBlitz3.ab2@14863>    MOVE.w D1,libjsr+2
0002AED6 <AmiBlitz3.ab2@14864>    BSR.w JL_0_AD40
0002AED8 <AmiBlitz3.ab2@14865>   MOVE.l D4,D1
0002AEDC <AmiBlitz3.ab2@14866>    BSR.w JL_0_AD38
0002AEE0 <AmiBlitz3.ab2@14867>   MOVE.w #$C900,D1
0002AEE4 <AmiBlitz3.ab2@14868>    BSR.w Atokejsr
0002AEE8 <AmiBlitz3.ab2@14869>    BSR.w JL_0_A352
0002AEEE <AmiBlitz3.ab2@14870>   MOVE.l libjsr,D1
0002AEF2 <AmiBlitz3.ab2@14871>    BSR.w writelong
0002AEF6 <AmiBlitz3.ab2@14872>    BSR.w JL_0_A36E
0002AEF8 <AmiBlitz3.ab2@14873>   MOVE.l D5,D1
0002AEFC <AmiBlitz3.ab2@14874> BRA.w JL_0_AD38
0002AF02 <AmiBlitz3.ab2@14878>   MOVE.w regnum,D1
0002AF04 <AmiBlitz3.ab2@14879>   LSL.w #8,D1
0002AF06 <AmiBlitz3.ab2@14880>   LSL.w #1,D1
0002AF08 <AmiBlitz3.ab2@14881>   MOVE.w D1,-(A7)
0002AF0C <AmiBlitz3.ab2@14882>   CMP.w #3072,d1
0002AF10 <AmiBlitz3.ab2@14883>   BEQ 'l1
0002AF16 <AmiBlitz3.ab2@14884>   OR.w addcode,D1                                          ;move.l (a7)+,d0
0002AF1A <AmiBlitz3.ab2@14885> BRA 'l2
0002AF1E <AmiBlitz3.ab2@14888>    MOVE.w #$588f,d1                                        ;addq.l #4,a7
0002AF22 <AmiBlitz3.ab2@14891>    BSR.w writeword
0002AF24 <AmiBlitz3.ab2@14892>   MOVE.w (A7)+,D1
0002AF2A <AmiBlitz3.ab2@14893>   OR.w addcode+2,D1                                        ;native string add.l d0,(a7)
0002AF2E <AmiBlitz3.ab2@14894> BRA.w writeword
0002AF32 <AmiBlitz3.ab2@14900>   MOVE.w #$9040,D1
0002AF36 <AmiBlitz3.ab2@14901> BRA.w doplus2
0002AF3A <AmiBlitz3.ab2@14905>   MOVE.w #$9040,D1
0002AF3E <AmiBlitz3.ab2@14906> BRA.w doplus2
0002AF42 <AmiBlitz3.ab2@14910>   MOVE.w #$9080,D1
0002AF46 <AmiBlitz3.ab2@14911> BRA.w doplus2
0002AF4C <AmiBlitz3.ab2@14915>    TST.b iee
0002AF50 <AmiBlitz3.ab2@14916>     BNE do_minus_float__fs1
0002AF54 <AmiBlitz3.ab2@14917>   MOVE.w #$FFB8,D1                                         ;floatsub
0002AF58 <AmiBlitz3.ab2@14918> BRA.w doflib
0002AF5A <AmiBlitz3.ab2@14921>   MOVEQ #0,d0
0002AF60 <AmiBlitz3.ab2@14922>   MOVE.w regnum,d0
0002AF62 <AmiBlitz3.ab2@14923>   ADDQ #1,d0
0002AF64 <AmiBlitz3.ab2@14924>   ASL.w #8,d0
0002AF66 <AmiBlitz3.ab2@14925>   ASL.w #2,d0
0002AF6C <AmiBlitz3.ab2@14926>   MOVE.l #$f2000028,d1
0002AF6E <AmiBlitz3.ab2@14927>   OR.l d0,d1
0002AF74 <AmiBlitz3.ab2@14928>   MOVE.w regnum,d0
0002AF76 <AmiBlitz3.ab2@14929>   ASL.w #7,d0
0002AF78 <AmiBlitz3.ab2@14930>   OR.l d0,d1
0002AF7C <AmiBlitz3.ab2@14931> BRA.w writelong
0002AF80 <AmiBlitz3.ab2@14937>   MOVE.w #$C1C0,D1
0002AF82 <AmiBlitz3.ab2@14938>   MOVEQ.l #$02,D2                                          ;now a word
0002AF86 <AmiBlitz3.ab2@14939> BRA.w doplus2
0002AF8A <AmiBlitz3.ab2@14943>   MOVE.w #$C1C0,D1
0002AF8C <AmiBlitz3.ab2@14944>   MOVEQ.l #$03,D2                                          ;now a long.
0002AF90 <AmiBlitz3.ab2@14945> BRA.w doplus2
0002AF94 <AmiBlitz3.ab2@14949>   MOVE.w #$CA00,D1                                         ;quickmul
0002AF98 <AmiBlitz3.ab2@14950> BRA.w domylib
0002AF9E <AmiBlitz3.ab2@14954>   TST.b fast
0002AFA2 <AmiBlitz3.ab2@14955>   BNE.s 'l10
0002AFA6 <AmiBlitz3.ab2@14956>   MOVE.w #$CA01,D1                                         ;writelongmul
0002AFAA <AmiBlitz3.ab2@14957> BRA.w domylib
0002AFB0 <AmiBlitz3.ab2@14966>    MOVE.l destpointer,a0
0002AFB6 <AmiBlitz3.ab2@14967>    SUB.l imm_addr,a0
0002AFBA <AmiBlitz3.ab2@14968>    CMP.w #6,a0
0002AFBE <AmiBlitz3.ab2@14969>    BNE 'li1
0002AFC0 <AmiBlitz3.ab2@14970>    MOVEQ.l #2,d1
0002AFC2 <AmiBlitz3.ab2@14971>    MOVEQ #1,d3
0002AFC6 <AmiBlitz3.ab2@14974>   CMP.l -4(a4),d1
0002AFCA <AmiBlitz3.ab2@14975>    BEQ 'oklsl
0002AFCC <AmiBlitz3.ab2@14976>     LSL.l #1,d1
0002AFD2 <AmiBlitz3.ab2@14977>     ADD.l #1,d3
0002AFD8 <AmiBlitz3.ab2@14978>     CMP.l #9,d3
0002AFDC <AmiBlitz3.ab2@14979>     BNE 'ag
0002AFE0 <AmiBlitz3.ab2@14980>    MOVE.w -2(a4),d1
0002AFE4 <AmiBlitz3.ab2@14981>    BSR writeword
0002AFEA <AmiBlitz3.ab2@14982>    MOVE.w -6(a4),-4(a4)
0002AFF2 <AmiBlitz3.ab2@14983>    MOVE.l #$4c3c0800,-8(a4)
0002AFF8 <AmiBlitz3.ab2@14984>    MOVE.w regnum,D3
0002AFFC <AmiBlitz3.ab2@14985>    MULS #$1000,D3
0002B000 <AmiBlitz3.ab2@14986>    OR.w D3,-6(a4)
0002B006 <AmiBlitz3.ab2@14987>    CLR.l load_var_addr
0002B00C <AmiBlitz3.ab2@14988>    CLR.l imm_addr
0002B010 <AmiBlitz3.ab2@14989> BRA 'li3
0002B014 <AmiBlitz3.ab2@14992>    CMP.w #8,d3
0002B018 <AmiBlitz3.ab2@14993>    BEQ 'ok
0002B01A <AmiBlitz3.ab2@14994>    ASL.l #1,d3
0002B01C <AmiBlitz3.ab2@14995>    ASL.l #8,d3
0002B020 <AmiBlitz3.ab2@14996>    MOVE.w #$e188,d1
0002B022 <AmiBlitz3.ab2@14997>    OR.w d3,d1
0002B026 <AmiBlitz3.ab2@14998>    MOVE.w d1,-6(a4)
0002B02A <AmiBlitz3.ab2@14999> BRA 'okls
0002B030 <AmiBlitz3.ab2@15002>   MOVE.w #$e188,-6(a4)                                     ;lsl.l #,dx
0002B036 <AmiBlitz3.ab2@15005>   MOVE.w regnum,d3
0002B03A <AmiBlitz3.ab2@15006>    OR.b d3,-5(a4)
0002B040 <AmiBlitz3.ab2@15007>    SUBQ.l #4,destpointer
0002B046 <AmiBlitz3.ab2@15008>    CLR.l load_var_addr
0002B04C <AmiBlitz3.ab2@15009>    CLR.l imm_addr
0002B050 <AmiBlitz3.ab2@15010> BRA 'li3
0002B056 <AmiBlitz3.ab2@15013>    MOVE.l destpointer,a0
0002B05C <AmiBlitz3.ab2@15014>    SUB.l load_var_addr,a0
0002B060 <AmiBlitz3.ab2@15015>    CMP.w #4,a0
0002B064 <AmiBlitz3.ab2@15016>    BNE 'li2
0002B068 <AmiBlitz3.ab2@15017>    MOVE.w -2(a4),d1
0002B06C <AmiBlitz3.ab2@15018>    BSR writeword
0002B072 <AmiBlitz3.ab2@15019>    MOVE.b #$4c,-6(a4)
0002B078 <AmiBlitz3.ab2@15020>    MOVE.w #$0800,-4(a4)
0002B07E <AmiBlitz3.ab2@15021>    MOVE.w regnum,D3
0002B082 <AmiBlitz3.ab2@15022>    MULS #$1000,d3
0002B086 <AmiBlitz3.ab2@15023>    OR.w D3,-4(a4)
0002B08A <AmiBlitz3.ab2@15024> BRA 'li3
0002B090 <AmiBlitz3.ab2@15027>    MOVE.l #$4c010800,d1
0002B096 <AmiBlitz3.ab2@15028>    MOVE.w regnum,D3
0002B098 <AmiBlitz3.ab2@15029>    EXT.l d3
0002B09C <AmiBlitz3.ab2@15030>    MULS #$1000,d3
0002B09E <AmiBlitz3.ab2@15031>    OR.w D3,d1
0002B0A2 <AmiBlitz3.ab2@15032>    MULS #$10,d3
0002B0A4 <AmiBlitz3.ab2@15033>    ADD.l d3,d1
0002B0A8 <AmiBlitz3.ab2@15034>    BSR writelong
0002B0AA <AmiBlitz3.ab2@15039> RTS
0002B0AC <AmiBlitz3.ab2@15043>   MOVE.w D1,-(A7)
0002B0B0 <AmiBlitz3.ab2@15044>    BSR.w JL_0_AD40
0002B0B2 <AmiBlitz3.ab2@15045>   MOVE.l D4,D1
0002B0B6 <AmiBlitz3.ab2@15046>    BSR.w JL_0_AD38
0002B0BA <AmiBlitz3.ab2@15047>    BSR.w JL_0_A352
0002B0BC <AmiBlitz3.ab2@15048>   MOVEQ #0,d1
0002B0BE <AmiBlitz3.ab2@15049>   MOVE.w (A7)+,D1
0002B0C4 <AmiBlitz3.ab2@15050>   MOVE.l d1,lastinstruction
0002B0C8 <AmiBlitz3.ab2@15051>    BSR.w Atokejsr
0002B0CC <AmiBlitz3.ab2@15052>    BSR.w JL_0_A36E
0002B0CE <AmiBlitz3.ab2@15053>   MOVE.l D5,D1
0002B0D2 <AmiBlitz3.ab2@15054> BRA.w JL_0_AD38
0002B0D8 <AmiBlitz3.ab2@15058>    TST.b iee
0002B0DC <AmiBlitz3.ab2@15059>     BNE fm1
0002B0E0 <AmiBlitz3.ab2@15060>  MOVE.w #$FFB2,D1                                          ;floatmul
0002B0E4 <AmiBlitz3.ab2@15061> BRA.w doflib
0002B0E6 <AmiBlitz3.ab2@15064>   MOVEQ #0,d0
0002B0EC <AmiBlitz3.ab2@15065>  MOVE.w regnum,d0
0002B0EE <AmiBlitz3.ab2@15066>  ADDQ #1,d0
0002B0F0 <AmiBlitz3.ab2@15067>  ASL.w #8,d0
0002B0F2 <AmiBlitz3.ab2@15068>  ASL.w #2,d0
0002B0F8 <AmiBlitz3.ab2@15069>  MOVE.l #$f2000023,d1
0002B0FA <AmiBlitz3.ab2@15070>  OR.l d0,d1
0002B100 <AmiBlitz3.ab2@15071>  MOVE.w regnum,d0
0002B102 <AmiBlitz3.ab2@15072>  ASL.w #7,d0
0002B104 <AmiBlitz3.ab2@15073>  OR.l d0,d1
0002B108 <AmiBlitz3.ab2@15074> BRA.w writelong
0002B10A <AmiBlitz3.ab2@15078>   MOVE.w D2,-(A7)                                          ;dopow
0002B10C <AmiBlitz3.ab2@15079>   MOVE.w D2,D3
0002B10E <AmiBlitz3.ab2@15080>   MOVEQ.l #$05,D2
0002B112 <AmiBlitz3.ab2@15081>    BSR.w JL_0_9770
0002B118 <AmiBlitz3.ab2@15082>   ADDQ.w #1,regnum
0002B11A <AmiBlitz3.ab2@15083>   MOVE.w (A7)+,D3
0002B11C <AmiBlitz3.ab2@15084>   MOVEQ.l #$05,D2
0002B120 <AmiBlitz3.ab2@15085>    BSR.w writeconvertcode
0002B126 <AmiBlitz3.ab2@15086>   SUBQ.w #1,regnum
0002B12A <AmiBlitz3.ab2@15087>    BSR.w nocando
0002B130 <AmiBlitz3.ab2@15088>    TST.b fpu
0002B134 <AmiBlitz3.ab2@15089>    BEQ 'old
0002B136 <AmiBlitz3.ab2@15090>    MOVEQ #0,d1
0002B13C <AmiBlitz3.ab2@15091>    MOVE.w regnum,d1
0002B13E <AmiBlitz3.ab2@15092>   MOVE.l d1,d0
0002B140 <AmiBlitz3.ab2@15093>   ASL.w #7,d1
0002B142 <AmiBlitz3.ab2@15094>   ASL.w #8,d0
0002B144 <AmiBlitz3.ab2@15095>   ASL.w #2,d0
0002B146 <AmiBlitz3.ab2@15096>   OR.w d0,d1
0002B148 <AmiBlitz3.ab2@15097>   MOVE.l d1,-(a7)
0002B14E <AmiBlitz3.ab2@15099>    OR.l #$f2000016,d1                                       ;flog2.x fp0      ;fpu ^ pow
0002B152 <AmiBlitz3.ab2@15100>    BSR writelong
0002B158 <AmiBlitz3.ab2@15101>    MOVE.w regnum,d0
0002B15A <AmiBlitz3.ab2@15102>  ADDQ #1,d0
0002B15C <AmiBlitz3.ab2@15103>  ASL.w #8,d0
0002B15E <AmiBlitz3.ab2@15104>  ASL.w #2,d0
0002B164 <AmiBlitz3.ab2@15105>  MOVE.l #$f2000023,d1
0002B166 <AmiBlitz3.ab2@15106>  OR.l d0,d1
0002B16C <AmiBlitz3.ab2@15107>  MOVE.w regnum,d0
0002B16E <AmiBlitz3.ab2@15108>  ASL.w #7,d0
0002B170 <AmiBlitz3.ab2@15109>  OR.l d0,d1
0002B176 <AmiBlitz3.ab2@15110>    OR.l #$f2000023,d1                                      ;fmulx.x fp1,fp0
0002B17A <AmiBlitz3.ab2@15111>    BSR writelong
0002B17C <AmiBlitz3.ab2@15112>    MOVE.l (a7)+,d1
0002B182 <AmiBlitz3.ab2@15114>    OR.l #$f2000011,d1                                      ;ftwotox.x fp0
0002B186 <AmiBlitz3.ab2@15115>    BSR writelong
0002B188 <AmiBlitz3.ab2@15116> RTS
0002B18C <AmiBlitz3.ab2@15119>   MOVE.w #$6001,D1
0002B190 <AmiBlitz3.ab2@15120> BRA.w domylib
0002B194 <AmiBlitz3.ab2@15126>   MOVEA.l forthsp(PC),A0
0002B198 <AmiBlitz3.ab2@15127>   MOVE.w #$FFFF,-(A0)                                      ;#-1,-(a0) org source
0002B19A <AmiBlitz3.ab2@15128> RTS
0002B19E <AmiBlitz3.ab2@15134>   MOVE.w #$D400,D1
0002B1A2 <AmiBlitz3.ab2@15135> BRA.w domylib
0002B1A6 <AmiBlitz3.ab2@15139>   MOVE.w #$D401,D1
0002B1AA <AmiBlitz3.ab2@15140> BRA.w domylib
0002B1AE <AmiBlitz3.ab2@15144>    BSR.w nocando                                           ;modlib uses an alibjsr here!
0002B1B2 <AmiBlitz3.ab2@15145>   MOVE.w #$D402,D1
0002B1B6 <AmiBlitz3.ab2@15146> BRA.w domylib
0002B1BA <AmiBlitz3.ab2@15150>   MOVE.w #$D403,D1
0002B1BC <AmiBlitz3.ab2@15151>   MOVEQ.l #$02,D2                                          ;now a word.
0002B1C0 <AmiBlitz3.ab2@15152> BRA.w domylib
0002B1C4 <AmiBlitz3.ab2@15156>    BSR.w nocando                                           ;modlib lib uses an alibjsr!  ;domod float
0002B1CA <AmiBlitz3.ab2@15157>   TST.b fpu
0002B1CE <AmiBlitz3.ab2@15158>   BEQ 'old
0002B1D0 <AmiBlitz3.ab2@15159>   MOVEQ #0,d1
0002B1D6 <AmiBlitz3.ab2@15160>   MOVE.w regnum,d1                                         ;fpu mod
0002B1D8 <AmiBlitz3.ab2@15161>   MOVE.l d1,d0
0002B1DA <AmiBlitz3.ab2@15162>   ADDQ.l #1,d1
0002B1DC <AmiBlitz3.ab2@15163>   ASL.l #7,d0
0002B1DE <AmiBlitz3.ab2@15164>   ASL.l #8,d1
0002B1E0 <AmiBlitz3.ab2@15165>   ASL.l #2,d1
0002B1E2 <AmiBlitz3.ab2@15166>   OR.l d0,d1
0002B1E4 <AmiBlitz3.ab2@15167>   MOVE.l d0,-(a7)
0002B1EA <AmiBlitz3.ab2@15168>   OR.l #$f2000021,d1
0002B1EE <AmiBlitz3.ab2@15169>   BSR writelong
0002B1F0 <AmiBlitz3.ab2@15170>   MOVE.l (a7)+,d0
0002B1F2 <AmiBlitz3.ab2@15171>  RTS
0002B1F6 <AmiBlitz3.ab2@15174>   MOVE.w #$D404,D1
0002B1F8 <AmiBlitz3.ab2@15175>   MOVEQ.l #$03,D2                                          ;now a long
0002B1FC <AmiBlitz3.ab2@15176> BRA.w domylib
0002B200 <AmiBlitz3.ab2@15184>   MOVE.w #$48C0,D1
0002B206 <AmiBlitz3.ab2@15185>   OR.w regnum,D1
0002B20A <AmiBlitz3.ab2@15186>    BSR.w writeword
0002B20C <AmiBlitz3.ab2@15187>   ADDQ.w #1,D1
0002B210 <AmiBlitz3.ab2@15188>    BSR.w writeword
0002B214 <AmiBlitz3.ab2@15191>    MOVE.w #$48C0,D1
0002B21A <AmiBlitz3.ab2@15192>   OR.w regnum,D1
0002B21E <AmiBlitz3.ab2@15193>    BSR.w writeword
0002B222 <AmiBlitz3.ab2@15194>   MOVE.w #$81C0,D1
0002B226 <AmiBlitz3.ab2@15195> BRA.w doplus2
0002B22C <AmiBlitz3.ab2@15199>   TST.b fast
0002B230 <AmiBlitz3.ab2@15200>   BNE.s 'l10
0002B234 <AmiBlitz3.ab2@15201>   MOVE.w #$CB01,D1
0002B238 <AmiBlitz3.ab2@15202> BRA.w domylib
0002B23C <AmiBlitz3.ab2@15208>   BSR.w JL_0_AD40
0002B23E <AmiBlitz3.ab2@15209>   MOVE.l D4,D1
0002B242 <AmiBlitz3.ab2@15210>    BSR.w JL_0_AD38
0002B246 <AmiBlitz3.ab2@15211>    BSR.w JL_0_A352
0002B24C <AmiBlitz3.ab2@15225>    MOVE.l #$4c410800,d1
0002B250 <AmiBlitz3.ab2@15226>    BSR writelong
0002B254 <AmiBlitz3.ab2@15229>   MOVE.w #$4e71,d1
0002B258 <AmiBlitz3.ab2@15231>    BSR.w JL_0_A36E
0002B25A <AmiBlitz3.ab2@15232>   MOVE.l D5,D1
0002B25E <AmiBlitz3.ab2@15233> BRA.w JL_0_AD38
0002B262 <AmiBlitz3.ab2@15236>     CMP.w #8,d3
0002B266 <AmiBlitz3.ab2@15237>     BEQ 'ok
0002B268 <AmiBlitz3.ab2@15238>     ASL.l #1,d3
0002B26A <AmiBlitz3.ab2@15239>     ASL.l #8,d3
0002B26E <AmiBlitz3.ab2@15240>     MOVE.w #$e080,d1
0002B270 <AmiBlitz3.ab2@15241>     OR.w d3,d1
0002B274 <AmiBlitz3.ab2@15242> BRA 'oklsr2
0002B278 <AmiBlitz3.ab2@15245>   MOVE.w #$e080,d1                                         ;lsr.l #,dx
0002B27E <AmiBlitz3.ab2@15248>      SUBQ.l #6,destpointer
0002B282 <AmiBlitz3.ab2@15249>      BSR writeword
0002B284 <AmiBlitz3.ab2@15250>      MOVE.l (a7)+,d3
0002B286 <AmiBlitz3.ab2@15251>      MOVEQ #0,d1
0002B28C <AmiBlitz3.ab2@15252>      CLR.l load_var_addr
0002B292 <AmiBlitz3.ab2@15253>      CLR.l imm_addr
0002B296 <AmiBlitz3.ab2@15254> BRA JL_0_AD38
0002B29A <AmiBlitz3.ab2@15258>   MOVE.w #$CB00,D1                                         ;quickdiv
0002B29E <AmiBlitz3.ab2@15259> BRA.w domylib
0002B2A4 <AmiBlitz3.ab2@15263>    TST.b iee
0002B2A8 <AmiBlitz3.ab2@15264>    BNE fdiv1
0002B2AC <AmiBlitz3.ab2@15265>    MOVE.w #$FFAC,D1                                        ;floatdiv
0002B2B0 <AmiBlitz3.ab2@15266> BRA.w doflib
0002B2B2 <AmiBlitz3.ab2@15270>   MOVEQ #0,d0
0002B2B8 <AmiBlitz3.ab2@15271>   MOVE.w regnum,d0
0002B2BA <AmiBlitz3.ab2@15272>   ADDQ #1,d0
0002B2BC <AmiBlitz3.ab2@15273>   ASL.w #8,d0
0002B2BE <AmiBlitz3.ab2@15274>   ASL.w #2,d0
0002B2C4 <AmiBlitz3.ab2@15275>   MOVE.l #$f2000020,d1                                     ;fpu div
0002B2C6 <AmiBlitz3.ab2@15276>   OR.l d0,d1
0002B2CC <AmiBlitz3.ab2@15277>   MOVE.w regnum,d0
0002B2CE <AmiBlitz3.ab2@15278>   ASL.w #7,d0
0002B2D0 <AmiBlitz3.ab2@15279>   OR.l d0,d1
0002B2D4 <AmiBlitz3.ab2@15280> BRA.w writelong
0002B2D8 <AmiBlitz3.ab2@15284>   MOVE.w #$C000,D1
0002B2DC <AmiBlitz3.ab2@15285> BRA.w doplus2
0002B2E0 <AmiBlitz3.ab2@15289>   MOVE.w #$C040,D1
0002B2E4 <AmiBlitz3.ab2@15290> BRA.w doplus2
0002B2E8 <AmiBlitz3.ab2@15294>   MOVE.w #$C080,D1
0002B2EC <AmiBlitz3.ab2@15295> BRA.w doplus2
0002B2F0 <AmiBlitz3.ab2@15299>   MOVE.w #$8000,D1
0002B2F4 <AmiBlitz3.ab2@15300> BRA.w doplus2
0002B2F8 <AmiBlitz3.ab2@15304>   MOVE.w #$8040,D1
0002B2FC <AmiBlitz3.ab2@15305> BRA.w doplus2
0002B300 <AmiBlitz3.ab2@15309>   MOVE.w #$8080,D1
0002B304 <AmiBlitz3.ab2@15310> BRA.w doplus2
0002B308 <AmiBlitz3.ab2@15314>   MOVE.w #$B100,D1
0002B30E <AmiBlitz3.ab2@15317>    MOVE.w regnum,D3
0002B310 <AmiBlitz3.ab2@15318>   OR.w D3,D1
0002B312 <AmiBlitz3.ab2@15319>   ADDQ.w #1,D3
0002B314 <AmiBlitz3.ab2@15320>   LSL.w #8,D3
0002B316 <AmiBlitz3.ab2@15321>   LSL.w #1,D3
0002B318 <AmiBlitz3.ab2@15322>   OR.w D3,D1
0002B31C <AmiBlitz3.ab2@15323> BRA.w writeword
0002B320 <AmiBlitz3.ab2@15327>   MOVE.w #$B140,D1
0002B324 <AmiBlitz3.ab2@15328> BRA.w JL_0_A25C
0002B328 <AmiBlitz3.ab2@15332>   MOVE.w #$B180,D1
0002B32C <AmiBlitz3.ab2@15333> BRA.w JL_0_A25C
0002B330 <AmiBlitz3.ab2@15337>   MOVE.w #$E1A8,D1
0002B334 <AmiBlitz3.ab2@15338> BRA.w JL_0_A298
0002B338 <AmiBlitz3.ab2@15342>   MOVE.w #$E0A8,D1
0002B33C <AmiBlitz3.ab2@15343> BRA.w JL_0_A298
0002B340 <AmiBlitz3.ab2@15347>   MOVE.w #$E0A0,D1
0002B344 <AmiBlitz3.ab2@15348> BRA.w JL_0_A298
0002B346 <AmiBlitz3.ab2@15352>   MOVE.w D1,-(A7)
0002B34C <AmiBlitz3.ab2@15353>   ADDQ.w #1,regnum
0002B34E <AmiBlitz3.ab2@15354>   MOVE.w D2,-(A7)
0002B350 <AmiBlitz3.ab2@15355>   MOVE.w D2,D3
0002B352 <AmiBlitz3.ab2@15356>   MOVEQ.l #$02,D2
0002B356 <AmiBlitz3.ab2@15361>    BSR.w writeconvertcode
0002B358 <AmiBlitz3.ab2@15363>   MOVE.w (A7)+,D2
0002B35E <AmiBlitz3.ab2@15364>   SUBQ.w #1,regnum
0002B362 <AmiBlitz3.ab2@15365>   CMP.w #$4,D2
0002B366 <AmiBlitz3.ab2@15366>    BEQ.w JL_0_A2C2
0002B368 <AmiBlitz3.ab2@15367>   MOVE.w D2,D3
0002B36A <AmiBlitz3.ab2@15368>   MOVEQ.l #$03,D2
0002B36E <AmiBlitz3.ab2@15369>    BSR.w JL_0_9770
0002B370 <AmiBlitz3.ab2@15372>    MOVE.w (A7)+,D1
0002B376 <AmiBlitz3.ab2@15373>   MOVE.w regnum,D3
0002B378 <AmiBlitz3.ab2@15374>   OR.w D3,D1
0002B37A <AmiBlitz3.ab2@15375>   ADDQ.w #1,D3
0002B37C <AmiBlitz3.ab2@15376>   LSL.w #8,D3
0002B37E <AmiBlitz3.ab2@15377>   LSL.w #1,D3
0002B380 <AmiBlitz3.ab2@15378>   OR.w D3,D1
0002B384 <AmiBlitz3.ab2@15379> BRA.w writeword
0002B388 <AmiBlitz3.ab2@15383>   MOVE.w #$0100,D1
0002B38C <AmiBlitz3.ab2@15384>    BSR.w JL_0_A31C
0002B392 <AmiBlitz3.ab2@15385>   MOVE.w regnum,D1
0002B396 <AmiBlitz3.ab2@15386>   ORI.w #$56C0,D1
0002B39A <AmiBlitz3.ab2@15387>    BSR.w writeword
0002B3A0 <AmiBlitz3.ab2@15388>   MOVE.w regnum,D1
0002B3A4 <AmiBlitz3.ab2@15389>   ORI.w #$4880,D1
0002B3A8 <AmiBlitz3.ab2@15390>    BSR.w writeword
0002B3AA <AmiBlitz3.ab2@15391>   MOVEQ.l #$02,D2
0002B3AC <AmiBlitz3.ab2@15392> RTS
0002B3B0 <AmiBlitz3.ab2@15396>   MOVE.w #$01C0,D1
0002B3B4 <AmiBlitz3.ab2@15399>    BSR.w JL_0_A31C
0002B3B6 <AmiBlitz3.ab2@15400>   MOVEQ.l #$03,D2
0002B3B8 <AmiBlitz3.ab2@15401> RTS
0002B3BC <AmiBlitz3.ab2@15405>   MOVE.w #$0180,D1
0002B3C0 <AmiBlitz3.ab2@15406> BRA.w JL_0_A304
0002B3C4 <AmiBlitz3.ab2@15410>   MOVE.w #$0140,D1
0002B3C8 <AmiBlitz3.ab2@15411> BRA.w JL_0_A304
0002B3CA <AmiBlitz3.ab2@15415>   MOVE.w D1,-(A7)
0002B3CC <AmiBlitz3.ab2@15416>   MOVE.w D2,-(A7)
0002B3CE <AmiBlitz3.ab2@15417>   MOVE.w D2,D3
0002B3D0 <AmiBlitz3.ab2@15418>   MOVEQ.l #$03,D2
0002B3D4 <AmiBlitz3.ab2@15419>    BSR.w JL_0_9770
0002B3D6 <AmiBlitz3.ab2@15420>   MOVE.w (A7)+,D3
0002B3D8 <AmiBlitz3.ab2@15421>   MOVEQ.l #$01,D2
0002B3DE <AmiBlitz3.ab2@15422>   ADDQ.w #1,regnum
0002B3E2 <AmiBlitz3.ab2@15423>    BSR.w writeconvertcode
0002B3E8 <AmiBlitz3.ab2@15424>   SUBQ.w #1,regnum
0002B3EE <AmiBlitz3.ab2@15425>   MOVE.w regnum,D1
0002B3F0 <AmiBlitz3.ab2@15426>   MOVE.w D1,D2
0002B3F2 <AmiBlitz3.ab2@15427>   ADDQ.w #1,D2
0002B3F4 <AmiBlitz3.ab2@15428>   LSL.w #8,D2
0002B3F6 <AmiBlitz3.ab2@15429>   LSL.w #1,D2
0002B3F8 <AmiBlitz3.ab2@15430>   OR.w (A7)+,D1
0002B3FA <AmiBlitz3.ab2@15431>   OR.w D2,D1
0002B3FE <AmiBlitz3.ab2@15432> BRA.w writeword
0002B404 <AmiBlitz3.ab2@15436>   MOVE.w regnum,D1
0002B408 <AmiBlitz3.ab2@15437>    BEQ.w JL_0_A36C
0002B40C <AmiBlitz3.ab2@15438>   ORI.w #$2000,D1
0002B410 <AmiBlitz3.ab2@15439>    BSR.w writeword
0002B414 <AmiBlitz3.ab2@15440>   ADDI.w #$201,D1
0002B418 <AmiBlitz3.ab2@15441>    BSR.w writeword
0002B41A <AmiBlitz3.ab2@15444> RTS
0002B420 <AmiBlitz3.ab2@15448>   MOVE.w regnum,D1
0002B424 <AmiBlitz3.ab2@15449>    BEQ.w JL_0_A384
0002B426 <AmiBlitz3.ab2@15450>   LSL.w #8,D1
0002B428 <AmiBlitz3.ab2@15451>   LSL.w #1,D1
0002B42C <AmiBlitz3.ab2@15452>   ORI.w #$2000,D1
0002B430 <AmiBlitz3.ab2@15453>    BSR.w writeword
0002B432 <AmiBlitz3.ab2@15456> RTS
0002B438 <AmiBlitz3.ab2@15460>    CLR.b isconstantvalue
0002B43E <AmiBlitz3.ab2@15461>    CLR.l lastconstantvalue
0002B446 <AmiBlitz3.ab2@15462>    CMPI.w #$7,regnum
0002B44A <AmiBlitz3.ab2@15463>    BCS.w JL_0_A6B4
0002B450 <AmiBlitz3.ab2@15464>   MOVE.l #$f2277700,d1                                     ;fmove.d fp6,-(a7)
0002B454 <AmiBlitz3.ab2@15465>   BSR writelong
0002B458 <AmiBlitz3.ab2@15466>   MOVE.w #$2F06,D1                                         ;d6 to stack
0002B45C <AmiBlitz3.ab2@15468>   CMP.w #$3,D2
0002B460 <AmiBlitz3.ab2@15469>    BCS.w JL_0_A3A2
0002B464 <AmiBlitz3.ab2@15470>   MOVE.w #$2F06,D1
0002B468 <AmiBlitz3.ab2@15473>   BSR.w writeword
0002B46A <AmiBlitz3.ab2@15474>   MOVE.w D1,-(A7)
0002B470 <AmiBlitz3.ab2@15475>   SUBQ.w #1,regnum
0002B474 <AmiBlitz3.ab2@15476>    BSR.w JL_0_A6B4
0002B47A <AmiBlitz3.ab2@15477>   ADDQ.w #1,regnum
0002B480 <AmiBlitz3.ab2@15478>   MOVE.l #$f2001b80,d1
0002B484 <AmiBlitz3.ab2@15479>   BSR writelong
0002B488 <AmiBlitz3.ab2@15480>   MOVE.w #$3E06,D1
0002B48C <AmiBlitz3.ab2@15481>   CMP.w #$3,D2
0002B490 <AmiBlitz3.ab2@15482>    BCS.w JL_0_A3C8
0002B494 <AmiBlitz3.ab2@15483>   MOVE.w #$2E06,D1
0002B498 <AmiBlitz3.ab2@15486>   BSR.w writeword
0002B49A <AmiBlitz3.ab2@15487>   MOVE.w (A7)+,D1
0002B49E <AmiBlitz3.ab2@15488>   ANDI.w #$F000,D1
0002B4A2 <AmiBlitz3.ab2@15489>   ORI.w #$C1F,D1
0002B4A8 <AmiBlitz3.ab2@15490>   JSR writeword
0002B4AE <AmiBlitz3.ab2@15491>   MOVE.l #$f21f5700,d1                                     ;fmove.d (a7)+,fp6
0002B4B2 <AmiBlitz3.ab2@15492> BRA writelong
0002B4B6 <AmiBlitz3.ab2@15496>   BSR.w JL_0_A6B4
0002B4BA <AmiBlitz3.ab2@15497>   MOVE.w #$4440,D1
0002B4BE <AmiBlitz3.ab2@15498>   CMP.w #$3,D2
0002B4C2 <AmiBlitz3.ab2@15499>    BCS.w JL_0_A406
0002B4C6 <AmiBlitz3.ab2@15500>   MOVE.w #$4480,D1
0002B4CA <AmiBlitz3.ab2@15501>   CMP.w #$5,D2
0002B4CE <AmiBlitz3.ab2@15502>    BCS.w JL_0_A406
0002B4D2 <AmiBlitz3.ab2@15503>   CMP.w #$6,D2
0002B4D6 <AmiBlitz3.ab2@15504>    BCC.w illoperr
0002B4DA <AmiBlitz3.ab2@15505>   MOVE.w #$FFC4,D1
0002B4DE <AmiBlitz3.ab2@15506> BRA.w JL_0_9604
0002B4E4 <AmiBlitz3.ab2@15509>   OR.w regnum,D1                                           ;negate
0002B4EA <AmiBlitz3.ab2@15510>   CLR.l imm_addr
0002B4EE <AmiBlitz3.ab2@15511> BRA.w writeword
0002B4F2 <AmiBlitz3.ab2@15515>    BSR.w eval4
0002B4F6 <AmiBlitz3.ab2@15516>   CMP.w #")",D0
0002B4FA <AmiBlitz3.ab2@15517>    BEQ.w JL_0_A424
0002B4FE <AmiBlitz3.ab2@15518>   CMP.w #"}",D0
0002B502 <AmiBlitz3.ab2@15519>    BNE.w brackets_                                         ;syntax error brackets
0002B506 <AmiBlitz3.ab2@15522> BRA.w get1bytemain
0002B50A <AmiBlitz3.ab2@15526>    BSR.w eval4
0002B50E <AmiBlitz3.ab2@15527>   CMP.w #$5,D2
0002B512 <AmiBlitz3.ab2@15528>    BCC.w illoperr
0002B518 <AmiBlitz3.ab2@15529>   MOVE.w regnum,D1
0002B51C <AmiBlitz3.ab2@15530>   ORI.w #$4640,D1
0002B520 <AmiBlitz3.ab2@15531>   CMP.w #$3,D2
0002B524 <AmiBlitz3.ab2@15532>    BCS.w writeword
0002B528 <AmiBlitz3.ab2@15533>   EORI.w #$C0,D1
0002B52C <AmiBlitz3.ab2@15534> BRA.w writeword
0002B52E <AmiBlitz3.ab2@15538>   MOVEQ.l #$05,D2                                          ;fpu pi
0002B534 <AmiBlitz3.ab2@15539>    TST.b fpu
0002B538 <AmiBlitz3.ab2@15540>   BEQ 'old
0002B53E <AmiBlitz3.ab2@15541> JMP fpupi
0002B544 <AmiBlitz3.ab2@15544>   MOVE.w regnum,D1
0002B546 <AmiBlitz3.ab2@15545>   LSL.w #8,D1
0002B548 <AmiBlitz3.ab2@15546>   LSL.w #1,D1
0002B54C <AmiBlitz3.ab2@15547>   ORI.w #$203C,D1
0002B550 <AmiBlitz3.ab2@15548>    BSR.w writeword
0002B556 <AmiBlitz3.ab2@15549>   MOVE.l #$C90FDA42,D1
0002B55A <AmiBlitz3.ab2@15550>    BSR.w writelong
0002B55E <AmiBlitz3.ab2@15551> BRA.w get1bytemain
0002B65A <AmiBlitz3.ab2@15559> forthstack:  Ds.l 63                                       ;ds.b  18*32 org source
0002B756 <AmiBlitz3.ab2@15560>              Ds.l 63
0002B79E <AmiBlitz3.ab2@15561>              Ds.l 18
0002B7A2 <AmiBlitz3.ab2@15562> forthsp:     Dc.l forthstack
0002B7CE <AmiBlitz3.ab2@15567>    !fget
0002B7D2 <AmiBlitz3.ab2@15568>    CMP.b #$7e,d0
0002B7D6 <AmiBlitz3.ab2@15569>    BNE 'noc
0002B7D8 <AmiBlitz3.ab2@15570>    SUBQ.l #1,a5
0002B7DC <AmiBlitz3.ab2@15571>    BSR get1bytemain
0002B7E0 <AmiBlitz3.ab2@15574>    CMP.b #"#",d0
0002B7E4 <AmiBlitz3.ab2@15575>    BNE 'ld1
0002B7E8 <AmiBlitz3.ab2@15576>    CMP.b #$22,(a5)
0002B7EC <AmiBlitz3.ab2@15577>    BNE 'ld1
0002B7F2 <AmiBlitz3.ab2@15578>    JSR addimmi
0002B7F6 <AmiBlitz3.ab2@15581>    CMP.b #$22,d0
0002B7FA <AmiBlitz3.ab2@15582>    BNE 'l11
0002B800 <AmiBlitz3.ab2@15592>    NOT.w instringon
0002B802 <AmiBlitz3.ab2@15595>    TST.b d0
0002B806 <AmiBlitz3.ab2@15596>    BPL 'l10
0002B808 <AmiBlitz3.ab2@15597>    LSL.w #8,d0
0002B80A <AmiBlitz3.ab2@15598>    MOVE.b (a5)+,d0                      ; get blitz instruction with returnvalue
0002B810 <AmiBlitz3.ab2@15599>    MOVE.l d0,lasttoken
0002B816 <AmiBlitz3.ab2@15600>    MOVE.w d0,lastchar
0002B81C <AmiBlitz3.ab2@15601>    CLR.l rightsidetype                  ; blitzlibs do currently no type check
0002B820 <AmiBlitz3.ab2@15603>   CMP.w #"(",D0
0002B824 <AmiBlitz3.ab2@15604>    BEQ.w checkcast2
0002B828 <AmiBlitz3.ab2@15605> nocast CMP.w #"{",D0
0002B82C <AmiBlitz3.ab2@15606>    BEQ.w JL_0_A410
0002B830 <AmiBlitz3.ab2@15607>   CMP.w #$2D,D0
0002B834 <AmiBlitz3.ab2@15608>    BEQ.w JL_0_A3DA
0002B838 <AmiBlitz3.ab2@15609>   CMP.w #-$7F77,D0
0002B83C <AmiBlitz3.ab2@15610>    BEQ.w JL_0_A428
0002B840 <AmiBlitz3.ab2@15611>   MOVEA.l forthsp(PC),A1
0002B846 <AmiBlitz3.ab2@15612>   CMPA.l #forthsp,A1
0002B84A <AmiBlitz3.ab2@15613>    BCC.w conmemerr
0002B850 <AmiBlitz3.ab2@15614>   MOVE.l destpointer,(A1)+
0002B856 <AmiBlitz3.ab2@15615>   MOVE.l hunkoffsetbase,(A1)+
0002B85C <AmiBlitz3.ab2@15616>   MOVE.l lasta6,(A1)+
0002B862 <AmiBlitz3.ab2@15617>   MOVE.w lasta6,(A1)+
0002B864 <AmiBlitz3.ab2@15618>   CLR.w (A1)+
0002B866 <AmiBlitz3.ab2@15619>   CLR.w (A1)+
0002B86C <AmiBlitz3.ab2@15620>   MOVE.l A1,forthsp
0002B87E <AmiBlitz3.ab2@15622>    !compare2
0002B882 <AmiBlitz3.ab2@15623>    BEQ.w JL_0_B224
0002B886 <AmiBlitz3.ab2@15624>   CMP.w #".",D0
0002B88A <AmiBlitz3.ab2@15625>    BEQ.w JL_0_B21E
0002B88E <AmiBlitz3.ab2@15626>   CMP.w #"#",D0
0002B892 <AmiBlitz3.ab2@15627>    BEQ.w get_constant
0002B896 <AmiBlitz3.ab2@15628>   CMP.w #"$",D0
0002B89A <AmiBlitz3.ab2@15629>    BEQ.w get_hexconstant
0002B89E <AmiBlitz3.ab2@15630>   CMP.w #"%",D0
0002B8A2 <AmiBlitz3.ab2@15631>    BEQ.w JL_0_A8C0
0002B8A6 <AmiBlitz3.ab2@15632>   CMP.w #-$7FD1,D0
0002B8AA <AmiBlitz3.ab2@15633>    BEQ.w _SizeOf
0002B8AE <AmiBlitz3.ab2@15634>   CMP.w #-$7F46,D0
0002B8B2 <AmiBlitz3.ab2@15635>    BEQ.w JL_0_A44E
0002B8B6 <AmiBlitz3.ab2@15636>   CMP.w #-$7F3B,D0
0002B8BA <AmiBlitz3.ab2@15637>    BEQ.w JL_0_A83C
0002B8BE <AmiBlitz3.ab2@15638>   CMP.w #-$7F3A,D0
0002B8C2 <AmiBlitz3.ab2@15639>    BEQ.w JL_0_A846
0002B8C8 <AmiBlitz3.ab2@15640>   MOVE.w constmode,D1
0002B8CC <AmiBlitz3.ab2@15641>    BEQ.w JL_0_A776
0002B8EE <AmiBlitz3.ab2@15642>    !compare1                                               ;bsr.w tstalpha
0002B8F2 <AmiBlitz3.ab2@15643>    BEQ.w JL_0_AF22
0002B8F6 <AmiBlitz3.ab2@15644>   CMP.w #$5F,D0
0002B8FA <AmiBlitz3.ab2@15645>    BEQ.w JL_0_AF22
0002B8FE <AmiBlitz3.ab2@15646>   CMP.w #$22,D0
0002B902 <AmiBlitz3.ab2@15647>    BEQ.w JL_0_AF00
0002B906 <AmiBlitz3.ab2@15648> BRA.w syntaxerr
0002B90C <AmiBlitz3.ab2@15650> checkcast2 JMP checkcast
0002B912 <AmiBlitz3.ab2@15653>   MOVE.w cfetchmode,D1
0002B916 <AmiBlitz3.ab2@15654>   BEQ.w JL_0_A784
0002B91A <AmiBlitz3.ab2@15655> BRA.w badconerr
0002B920 <AmiBlitz3.ab2@15658> JMP syntaxerropt4
0002B922 <AmiBlitz3.ab2@15662>   NOT.w -(A1)
0002B944 <AmiBlitz3.ab2@15663>   !compare1                                                ;bsr.w tstalpha
0002B948 <AmiBlitz3.ab2@15664>    BEQ.w JL_0_AF4C
0002B94C <AmiBlitz3.ab2@15665>   CMP.w #$2A,D0
0002B950 <AmiBlitz3.ab2@15666>    BEQ.w JL_0_AF4C
0002B954 <AmiBlitz3.ab2@15667>   CMP.w #$5C,D0
0002B958 <AmiBlitz3.ab2@15668>    BEQ.w JL_0_AF4C
0002B95C <AmiBlitz3.ab2@15669>   CMP.w #$22,D0
0002B960 <AmiBlitz3.ab2@15670>    BEQ.w JL_0_ADC0
0002B964 <AmiBlitz3.ab2@15671>   BTST #$F,D0
0002B968 <AmiBlitz3.ab2@15672>    BNE.w JL_0_AAF2
0002B96C <AmiBlitz3.ab2@15673>   CMP.w #"&",D0
0002B970 <AmiBlitz3.ab2@15674>    BEQ.w getvaraddr                                          ;jump to & address of var code
0002B974 <AmiBlitz3.ab2@15675>   CMP.w #"?",D0
0002B978 <AmiBlitz3.ab2@15676>    BEQ.w JL_0_AED4
0002B97C <AmiBlitz3.ab2@15679>   CMP.b #"@",d0
0002B980 <AmiBlitz3.ab2@15680>    BNE syntaxerr
0002B986 <AmiBlitz3.ab2@15681>   TST.b newsyntax
0002B98A <AmiBlitz3.ab2@15682>    BEQ JUMP_syntaxerropt4
0002B990 <AmiBlitz3.ab2@15683>   MOVE.w regnum,D1
0002B992 <AmiBlitz3.ab2@15684>   LSL.w #8,D1
0002B994 <AmiBlitz3.ab2@15685>   LSL.w #1,D1
0002B998 <AmiBlitz3.ab2@15686>   ORI.w #$203C,D1
0002B99C <AmiBlitz3.ab2@15687>   BSR.w writeword
0002B9A0 <AmiBlitz3.ab2@15688>   CMP.b #$22,(a5)
0002B9A4 <AmiBlitz3.ab2@15689>    BNE syntaxerr
0002B9A6 <AmiBlitz3.ab2@15690>   ADDQ #1,a5
0002B9A8 <AmiBlitz3.ab2@15691>   MOVEQ #0,d0
0002B9AC <AmiBlitz3.ab2@15692>   CMP.b #1,d2
0002B9B0 <AmiBlitz3.ab2@15693>    BEQ 'l3b
0002B9B4 <AmiBlitz3.ab2@15694>   CMP.b #2,d2
0002B9B8 <AmiBlitz3.ab2@15695>    BEQ 'l2b
0002B9BC <AmiBlitz3.ab2@15696>   CMP.b #4,d2
0002B9C0 <AmiBlitz3.ab2@15697>    BEQ error_convert_types
0002B9C2 <AmiBlitz3.ab2@15698>   MOVE.b (a5)+,d0
0002B9C6 <AmiBlitz3.ab2@15699>   BEQ syntaxerr
0002B9CA <AmiBlitz3.ab2@15700>   CMP.b #$22,d0
0002B9CE <AmiBlitz3.ab2@15701>   BNE 'l1
0002B9D2 <AmiBlitz3.ab2@15702>     MOVE.b #0,d0
0002B9D6 <AmiBlitz3.ab2@15703> BRA 'do
0002B9D8 <AmiBlitz3.ab2@15706>   ASL.l #8,d0
0002B9DA <AmiBlitz3.ab2@15707>   MOVE.b (a5)+,d0
0002B9DE <AmiBlitz3.ab2@15708>   BEQ syntaxerr
0002B9E2 <AmiBlitz3.ab2@15709>   CMP.b #$22,d0
0002B9E6 <AmiBlitz3.ab2@15710>   BNE 'l2
0002B9EA <AmiBlitz3.ab2@15711>     MOVE.b #0,d0
0002B9EC <AmiBlitz3.ab2@15712>     ASR.l #8,d0
0002B9F0 <AmiBlitz3.ab2@15713> BRA 'do
0002B9F2 <AmiBlitz3.ab2@15716>   ASL.l #8,d0
0002B9F4 <AmiBlitz3.ab2@15719>   MOVE.b (a5)+,d0
0002B9F8 <AmiBlitz3.ab2@15720>    BEQ syntaxerr
0002B9FC <AmiBlitz3.ab2@15721>    CMP.b #$22,d0
0002BA00 <AmiBlitz3.ab2@15722>    BNE 'l3
0002BA04 <AmiBlitz3.ab2@15723>    MOVE.b #0,d0
0002BA06 <AmiBlitz3.ab2@15724>    ASR.l #8,d0
0002BA0A <AmiBlitz3.ab2@15725> BRA 'do
0002BA0C <AmiBlitz3.ab2@15728>   ASL.l #8,d0
0002BA0E <AmiBlitz3.ab2@15731>   MOVE.b (a5)+,d0
0002BA12 <AmiBlitz3.ab2@15732>    BEQ syntaxerr
0002BA16 <AmiBlitz3.ab2@15733>    CMP.b #$22,d0
0002BA1A <AmiBlitz3.ab2@15734>    BNE 'l4
0002BA1E <AmiBlitz3.ab2@15735>    MOVE.b #0,d0
0002BA20 <AmiBlitz3.ab2@15736>    ASR.l #8,d0
0002BA24 <AmiBlitz3.ab2@15737> BRA 'do
0002BA28 <AmiBlitz3.ab2@15740>    CMP.b #$22,(a5)+
0002BA2C <AmiBlitz3.ab2@15741>    BNE JUMP_error4char
0002BA2E <AmiBlitz3.ab2@15744>   MOVE.l d0,d1
0002BA32 <AmiBlitz3.ab2@15745>     BSR writelong
0002BA36 <AmiBlitz3.ab2@15746>     BSR get1bytemain
0002BA38 <AmiBlitz3.ab2@15747> RTS
0002BA3C <AmiBlitz3.ab2@15751>   BSR.w get1bytemain
0002BA40 <AmiBlitz3.ab2@15752>   CMP.w #$2E,D0
0002BA44 <AmiBlitz3.ab2@15753>    BEQ.b JL_0_A7F4
0002BA4E <AmiBlitz3.ab2@15755>   MOVE.w oldqflag,instringon
0002BA54 <AmiBlitz3.ab2@15756>   MOVEA.l lastsourcepos,A5
0002BA56 <AmiBlitz3.ab2@15757>   MOVE.w D2,-(A7)
0002BA5A <AmiBlitz3.ab2@15758>    BSR.w getparameter2
0002BA5E <AmiBlitz3.ab2@15759>    BEQ.w syntaxerr
0002BA64 <AmiBlitz3.ab2@15760>   LEA varbase,A2
0002BA68 <AmiBlitz3.ab2@15761>    BSR.w findvariable
0002BA6C <AmiBlitz3.ab2@15762>    BNE.w notypeerr
0002BA70 <AmiBlitz3.ab2@15763>   MOVE.w $4(A2),D3
0002BA72 <AmiBlitz3.ab2@15764>   EXT.l D3
0002BA74 <AmiBlitz3.ab2@15765>   MOVE.w (A7)+,D2
0002BA78 <AmiBlitz3.ab2@15766> BRA.w JL_0_B46E
0002BA7A <AmiBlitz3.ab2@15770>   MOVE.w D2,-(A7)
0002BA7E <AmiBlitz3.ab2@15771>    BSR.w getparameter2
0002BA82 <AmiBlitz3.ab2@15772>    BEQ.w syntaxerr
0002BA88 <AmiBlitz3.ab2@15773>   LEA newtypebase,A2
0002BA8C <AmiBlitz3.ab2@15774>    BSR.w findtype
0002BA90 <AmiBlitz3.ab2@15775>    BNE.w notypeerr
0002BA92 <AmiBlitz3.ab2@15776>   MOVEQ.l #$00,D3
0002BA96 <AmiBlitz3.ab2@15777>   CMP.w #$5C,D0
0002BA9A <AmiBlitz3.ab2@15778>    BNE.w JL_0_A832
0002BA9E <AmiBlitz3.ab2@15779>    BSR.w getparameter2
0002BAA2 <AmiBlitz3.ab2@15780>    BEQ.w syntaxerr
0002BAA6 <AmiBlitz3.ab2@15781>   LEA $4(A2),A2
0002BAAA <AmiBlitz3.ab2@15782>    BSR.w findvariable2
0002BAAE <AmiBlitz3.ab2@15783>    BNE.w noofferr
0002BAB2 <AmiBlitz3.ab2@15784>   MOVE.w $4(A2),D3
0002BAB6 <AmiBlitz3.ab2@15785> BRA.w JL_0_A836
0002BABA <AmiBlitz3.ab2@15789>   MOVE.w $8(A2),D3
0002BABC <AmiBlitz3.ab2@15792>   MOVE.w (A7)+,D2
0002BAC0 <AmiBlitz3.ab2@15793> BRA.w JL_0_B46E
0002BAC2 <AmiBlitz3.ab2@15797>   MOVEQ.l #-$01,D3
0002BAC6 <AmiBlitz3.ab2@15798>    BSR.w get1bytemain
0002BACA <AmiBlitz3.ab2@15799> BRA.w JL_0_B46E
0002BACC <AmiBlitz3.ab2@15803>   MOVEQ.l #$00,D3
0002BAD0 <AmiBlitz3.ab2@15804>    BSR.w get1bytemain
0002BAD4 <AmiBlitz3.ab2@15805> BRA.w JL_0_B46E
0002BAD8 <AmiBlitz3.ab2@15809>   CMP.w #$30,D0
0002BADC <AmiBlitz3.ab2@15810>    BCS.w JL_0_A876
0002BAE0 <AmiBlitz3.ab2@15811>   CMP.w #$39,D0
0002BAE4 <AmiBlitz3.ab2@15812>    BLS.w JL_0_A874
0002BAE8 <AmiBlitz3.ab2@15813>   ANDI.w #$FFDF,D0
0002BAEC <AmiBlitz3.ab2@15814>   CMP.w #$46,D0
0002BAF0 <AmiBlitz3.ab2@15815>    BHI.w JL_0_A876
0002BAF4 <AmiBlitz3.ab2@15816>   CMP.w #$41,D0
0002BAF8 <AmiBlitz3.ab2@15817>    BCS.w JL_0_A876
0002BAFA <AmiBlitz3.ab2@15820>    CMP.w D0,D0
0002BAFC <AmiBlitz3.ab2@15823> RTS
0002BB00 <AmiBlitz3.ab2@15827>   CMP.w #$31,D0
0002BB04 <AmiBlitz3.ab2@15828>    BEQ.w JL_0_A884
0002BB08 <AmiBlitz3.ab2@15829>   CMP.w #$30,D0
0002BB0A <AmiBlitz3.ab2@15832> RTS
0002BB0C <AmiBlitz3.ab2@15836>    MOVEQ #0,d0
0002BB0E <AmiBlitz3.ab2@15837>    MOVE.b (a5)+,d0
0002BB10 <AmiBlitz3.ab2@15838>    MOVE.b (a5)+,d0
0002BB14 <AmiBlitz3.ab2@15839>    BSR ishex
0002BB18 <AmiBlitz3.ab2@15840>    BNE syntaxerr
0002BB1C <AmiBlitz3.ab2@15841>    SUBI.w #$30,D0
0002BB20 <AmiBlitz3.ab2@15842>    CMP.w #$9,D0
0002BB24 <AmiBlitz3.ab2@15843>    BLS.w 'l1
0002BB26 <AmiBlitz3.ab2@15844>    SUBQ.w #7,D0
0002BB28 <AmiBlitz3.ab2@15847>    MOVE.l d0,d1
0002BB2A <AmiBlitz3.ab2@15848>    MOVE.b (a5)+,d0
0002BB2E <AmiBlitz3.ab2@15849>      BSR ishex
0002BB32 <AmiBlitz3.ab2@15850>     BNE syntaxerr
0002BB34 <AmiBlitz3.ab2@15851>     LSL.l #4,d1
0002BB38 <AmiBlitz3.ab2@15852>     SUBI.w #$30,D0
0002BB3C <AmiBlitz3.ab2@15853>    CMP.w #$9,D0
0002BB40 <AmiBlitz3.ab2@15854>    BLS.w 'l2
0002BB42 <AmiBlitz3.ab2@15855>    SUBQ.w #7,D0
0002BB44 <AmiBlitz3.ab2@15858>   ADD.l d1,d0
0002BB46 <AmiBlitz3.ab2@15859> RTS
0002BB4A <AmiBlitz3.ab2@15863>    BSR.w get1bytemain
0002BB4E <AmiBlitz3.ab2@15864>    BSR.w ishex
0002BB52 <AmiBlitz3.ab2@15865>    BNE.w syntaxerr
0002BB54 <AmiBlitz3.ab2@15866>   MOVEQ.l #$00,D3
0002BB58 <AmiBlitz3.ab2@15867>   CMP.w #5,d2
0002BB5C <AmiBlitz3.ab2@15868>   BNE JL_0_A894
0002BB62 <AmiBlitz3.ab2@15869>   CMP.l #newtype_double,a2
0002BB66 <AmiBlitz3.ab2@15870>   BEQ 'doit
0002BB6C <AmiBlitz3.ab2@15871>   CMP.l #newtype_float,a2
0002BB70 <AmiBlitz3.ab2@15872>   BNE JL_0_A894
0002BB78 <AmiBlitz3.ab2@15875>    fmove.s #0,fp0
0002BB7E <AmiBlitz3.ab2@15877>   TST.b fpu
0002BB82 <AmiBlitz3.ab2@15878>   BEQ JL_0_A894
0002BB88 <AmiBlitz3.ab2@15879>   fmove.w #16,fp1
0002BB8C <AmiBlitz3.ab2@15880>   fmul.x fp1,fp0
0002BB90 <AmiBlitz3.ab2@15881>   SUBI.w #$30,D0
0002BB94 <AmiBlitz3.ab2@15882>   CMP.w #$9,D0
0002BB98 <AmiBlitz3.ab2@15883>    BLS.w JL_0_A8AEa
0002BB9A <AmiBlitz3.ab2@15884>   SUBQ.w #7,D0
0002BB9E <AmiBlitz3.ab2@15887>    fmove.w d0,fp1
0002BBA2 <AmiBlitz3.ab2@15888>    fadd.x fp1,fp0
0002BBA6 <AmiBlitz3.ab2@15889>    BSR.w get1bytemain
0002BBAA <AmiBlitz3.ab2@15890>    BSR.w ishex
0002BBAE <AmiBlitz3.ab2@15891>    BEQ.w JL_0_A894a
0002BBB2 <AmiBlitz3.ab2@15892> BRA.w nofpregload
0002BBB8 <AmiBlitz3.ab2@15896>   CMP.l #$10000000,D3
0002BBBC <AmiBlitz3.ab2@15897>    BCC.w overerr
0002BBBE <AmiBlitz3.ab2@15898>   LSL.l #4,D3
0002BBC2 <AmiBlitz3.ab2@15899>   SUBI.w #$30,D0
0002BBC6 <AmiBlitz3.ab2@15900>   CMP.w #$9,D0
0002BBCA <AmiBlitz3.ab2@15901>    BLS.w JL_0_A8AE
0002BBCC <AmiBlitz3.ab2@15902>   SUBQ.w #7,D0
0002BBCE <AmiBlitz3.ab2@15905>   OR.w D0,D3
0002BBD2 <AmiBlitz3.ab2@15906>    BSR.w get1bytemain
0002BBD6 <AmiBlitz3.ab2@15907>    BSR.w ishex
0002BBDA <AmiBlitz3.ab2@15908>    BEQ.w JL_0_A894
0002BBDE <AmiBlitz3.ab2@15909> BRA.w JL_0_B46E
0002BBE2 <AmiBlitz3.ab2@15913>    BSR.w get1bytemain
0002BBE6 <AmiBlitz3.ab2@15914>    BSR.w JL_0_A878
0002BBEA <AmiBlitz3.ab2@15915>    BNE.w syntaxerr
0002BBEC <AmiBlitz3.ab2@15916>    MOVEQ.l #$00,D3
0002BBEE <AmiBlitz3.ab2@15919>    LSL.l #1,D3
0002BBF2 <AmiBlitz3.ab2@15920>    BCS.w overerr
0002BBF6 <AmiBlitz3.ab2@15921>   SUBI.w #$30,D0
0002BBF8 <AmiBlitz3.ab2@15922>   OR.w D0,D3
0002BBFC <AmiBlitz3.ab2@15923>    BSR.w get1bytemain
0002BC00 <AmiBlitz3.ab2@15924>    BSR.w JL_0_A878
0002BC04 <AmiBlitz3.ab2@15925>    BEQ.w JL_0_A8CE
0002BC08 <AmiBlitz3.ab2@15926> BRA.w JL_0_B46E
0002BC0A <AmiBlitz3.ab2@15930>    MOVE.w d2,-(A7)
0002BC12 <AmiBlitz3.ab2@15931>    MOVE.b #0,automode
0002BC16 <AmiBlitz3.ab2@15932>    CMP.b #"@",(a5)
0002BC1A <AmiBlitz3.ab2@15933>    BNE 'l1
0002BC1C <AmiBlitz3.ab2@15934>    ADDQ.l #1,a5
0002BC24 <AmiBlitz3.ab2@15935>    MOVE.b #1,automode
0002BC28 <AmiBlitz3.ab2@15936>    BSR getparameter2
0002BC2C <AmiBlitz3.ab2@15937>    BSR findlabel2
0002BC30 <AmiBlitz3.ab2@15938>    BNE 'addit
0002BC34 <AmiBlitz3.ab2@15939> BRA errormsg_autocount
0002BC38 <AmiBlitz3.ab2@15942>   BSR.w addlabelhash
0002BC40 <AmiBlitz3.ab2@15943>   MOVE.l #$1,$4(A2)
0002BC44 <AmiBlitz3.ab2@15944>   MOVEM.l a2/a5,-(a7)
0002BC4A <AmiBlitz3.ab2@15945>   MOVE.w lastchar,-(a7)
0002BC50 <AmiBlitz3.ab2@15946>   LEA autostorename,a5
0002BC54 <AmiBlitz3.ab2@15947>   BSR getparameter2
0002BC58 <AmiBlitz3.ab2@15948>   BSR findlabel2
0002BC5C <AmiBlitz3.ab2@15949>   BEQ 'found
0002BC60 <AmiBlitz3.ab2@15950>   BSR.w addlabelhash
0002BC68 <AmiBlitz3.ab2@15951>   MOVE.l #$1,$4(A2)
0002BC70 <AmiBlitz3.ab2@15952>   MOVE.l #0,8(a2)
0002BC72 <AmiBlitz3.ab2@15955>    MOVE.w (a7)+,d0
0002BC78 <AmiBlitz3.ab2@15956>    MOVE.w d0,lastchar
0002BC7C <AmiBlitz3.ab2@15957>   MOVE.l 8(a2),d3
0002BC84 <AmiBlitz3.ab2@15958>   ADD.l #1,8(a2)
0002BC88 <AmiBlitz3.ab2@15959>   MOVEM.l (a7)+,a2/a5
0002BC8C <AmiBlitz3.ab2@15960>   MOVE.l d3,8(a2)
0002BC90 <AmiBlitz3.ab2@15961>   MOVE.l $8(A2),D3
0002BC94 <AmiBlitz3.ab2@15962> BRA.l 'l3
0002BC98 <AmiBlitz3.ab2@15965>   BSR.w getparameter2
0002BC9E <AmiBlitz3.ab2@15966>     TST.b incnif
0002BCA2 <AmiBlitz3.ab2@15967>     BEQ 'lc1
0002BCA6 <AmiBlitz3.ab2@15968>     BSR.w findlabel2
0002BCAA <AmiBlitz3.ab2@15969>     BNE 'l5
0002BCAC <AmiBlitz3.ab2@15970>     MOVEQ #1,d3
0002BCAE <AmiBlitz3.ab2@15971>     MOVE.w (A7)+,D2
0002BCB2 <AmiBlitz3.ab2@15972> BRA JL_0_B46E
0002BCB4 <AmiBlitz3.ab2@15975>   MOVEQ #0,d3
0002BCB6 <AmiBlitz3.ab2@15976>     MOVE.w (A7)+,D2
0002BCBA <AmiBlitz3.ab2@15977> BRA JL_0_B46E
0002BCBE <AmiBlitz3.ab2@15980>    BSR.w findlabel2
0002BCC2 <AmiBlitz3.ab2@15981>    BNE.w cnferr
0002BCCA <AmiBlitz3.ab2@15984>    CMPI.l #$1,$4(A2)
0002BCCE <AmiBlitz3.ab2@15985>    BNE.w cnferr
0002BCD2 <AmiBlitz3.ab2@15987>    MOVE.l $8(A2),D3
0002BCD4 <AmiBlitz3.ab2@15988>    MOVE.w (A7)+,D2
0002BCD8 <AmiBlitz3.ab2@15989> BRA.w JL_0_B46E
0002BCDE <AmiBlitz3.ab2@15993>   CLR.w vartype
0002BCE6 <AmiBlitz3.ab2@15994>   MOVE.b #3,peekaddrsize
0002BCEA <AmiBlitz3.ab2@15995>   BSR.w JL_0_A916
0002BCF0 <AmiBlitz3.ab2@15996>   MOVE.l a2,rightsidetype
0002BCF2 <AmiBlitz3.ab2@15997>   MOVEQ.l #$03,D2
0002BCF4 <AmiBlitz3.ab2@15998> RTS
0002BCF8 <AmiBlitz3.ab2@16002>    BSR.w get1bytemain
0002BD0A <AmiBlitz3.ab2@16003>    !compare2
0002BD0E <AmiBlitz3.ab2@16004>    BEQ andop2
0002BD12 <AmiBlitz3.ab2@16005>    BSR.w getparameter
0002BD16 <AmiBlitz3.ab2@16006>    BSR.w JL_0_8E3C
0002BD1A <AmiBlitz3.ab2@16007>    BSR.w calcvar
0002BD1E <AmiBlitz3.ab2@16008>   CMP.b #$7,D2
0002BD22 <AmiBlitz3.ab2@16009>    BNE.w JL_0_A960
0002BD26 <AmiBlitz3.ab2@16010>   BTST #$F,D2
0002BD2A <AmiBlitz3.ab2@16011>    BNE.w JL_0_A94A
0002BD30 <AmiBlitz3.ab2@16012>   MOVE.w D3,stamp2+2
0002BD36 <AmiBlitz3.ab2@16013>   MOVE.l stamp2,D1
0002BD3A <AmiBlitz3.ab2@16014>    BSR.w pokela5s
0002BD3E <AmiBlitz3.ab2@16015> BRA.w JL_0_A978
0002BD44 <AmiBlitz3.ab2@16019>   MOVE.w regnum,D1
0002BD46 <AmiBlitz3.ab2@16020>   LSL.w #8,D1
0002BD48 <AmiBlitz3.ab2@16021>   LSL.w #1,D1
0002BD4E <AmiBlitz3.ab2@16022>   OR.w stamp,D1
0002BD52 <AmiBlitz3.ab2@16023>    BSR.w writeword
0002BD54 <AmiBlitz3.ab2@16024> RTS
0002BD58 <AmiBlitz3.ab2@16028>   BTST #$F,D2
0002BD5C <AmiBlitz3.ab2@16029>    BNE.w JL_0_A978
0002BD62 <AmiBlitz3.ab2@16030>   MOVE.w D3,leaamp+2
0002BD68 <AmiBlitz3.ab2@16031>   MOVE.l leaamp,D1
0002BD6C <AmiBlitz3.ab2@16032>    BSR.w pokela5s
0002BD72 <AmiBlitz3.ab2@16035>   MOVE.w regnum,D1
0002BD74 <AmiBlitz3.ab2@16036>   LSL.w #8,D1
0002BD76 <AmiBlitz3.ab2@16037>   LSL.w #1,D1
0002BD7C <AmiBlitz3.ab2@16038>   OR.w leaamp2,D1
0002BD80 <AmiBlitz3.ab2@16039> BRA.w writeword
0002BD84 <AmiBlitz3.ab2@16043>   MOVE.w #$D200,D1
0002BD88 <AmiBlitz3.ab2@16044>    BSR.w Atokejsr
0002BD8A <AmiBlitz3.ab2@16045>   MOVEQ.l #$03,D2
0002BD8C <AmiBlitz3.ab2@16046> RTS
0002BD90 <AmiBlitz3.ab2@16050> addrcode:  Dc.b $20,$6D,$00,$00                            ;MOVEA.L $0000(A5),A0
0002BD92 <AmiBlitz3.ab2@16051>            Dc.b $D0,$C0                                    ;ADDA.W  D0,A0
0002BD94 <AmiBlitz3.ab2@16052>            Dc.b $20,$08                                    ;MOVE.L  A0,D0
0002BD98 <AmiBlitz3.ab2@16058>    BSR.w get1bytemain
0002BD9A <AmiBlitz3.ab2@16059>   MOVE.w D0,D1
0002BD9E <AmiBlitz3.ab2@16060>    BPL.w syntaxerr
0002BDA0 <AmiBlitz3.ab2@16061>   MOVE.w D2,-(A7)
0002BDA4 <AmiBlitz3.ab2@16062>   BCLR #$F,D1
0002BDA8 <AmiBlitz3.ab2@16063>    BSR.w searchinstr
0002BDAC <AmiBlitz3.ab2@16064>   MOVE.l $12(A2),D0
0002BDB0 <AmiBlitz3.ab2@16065>   TST.w -$2(A2,D0.L)
0002BDB4 <AmiBlitz3.ab2@16066>    BEQ.w freeerr
0002BDB6 <AmiBlitz3.ab2@16067>   MOVE.w (A7)+,D2
0002BDB8 <AmiBlitz3.ab2@16068> RTS
0002BDBC <AmiBlitz3.ab2@16072>   MOVE.l $0(A5),D0
0002BDC0 <AmiBlitz3.ab2@16073>    BNE.b ucodeskip
0002BDC2 <AmiBlitz3.ab2@16074>   MOVEQ.l #-$01,D0
0002BDC6 <AmiBlitz3.ab2@16075> BRA.b usedcodef
0002BDCA <AmiBlitz3.ab2@16078>   SUB.l $0(A5),D0
0002BDCC <AmiBlitz3.ab2@16081>   LSR.w #8,D0
0002BDD0 <AmiBlitz3.ab2@16086>    MOVE.l $0(A5),D0
0002BDD4 <AmiBlitz3.ab2@16087>    BNE.b ucodeskip2
0002BDD6 <AmiBlitz3.ab2@16088>   MOVEQ.l #-$01,D0
0002BDDA <AmiBlitz3.ab2@16089> BRA.b usedcode2f
0002BDDE <AmiBlitz3.ab2@16092>   SUB.l $0(A5),D0                                          ;usedcode2
0002BDE0 <AmiBlitz3.ab2@16093>   LSR.w #8,D0
0002BDE2 <AmiBlitz3.ab2@16096>   LSR.w #8,D0
0002BDE4 <AmiBlitz3.ab2@16101>   MOVE.l D0,-(A7)
0002BDE6 <AmiBlitz3.ab2@16104>   MOVE.l (A7)+,D0
0002BDE8 <AmiBlitz3.ab2@16107>   MOVE.l D0,D0
0002BDEC <AmiBlitz3.ab2@16113>   BSR.w JL_0_A9A0
0002BDF0 <AmiBlitz3.ab2@16115>   MOVE.w -$2(A2,D0.L),D3
0002BDF4 <AmiBlitz3.ab2@16116>   CMP.w #$9,D3
0002BDF8 <AmiBlitz3.ab2@16117>    BCC.w doused__skip
0002BDFC <AmiBlitz3.ab2@16121>   LEA usedcode(PC),A0
0002BE00 <AmiBlitz3.ab2@16122>   LEA usedcodef(PC),A1
0002BE06 <AmiBlitz3.ab2@16124>   ANDI.w #$F1FF,$E+4(A0)                                   ;and #$f1ff,ucodediv-usedcode(a0) org source
0002BE0A <AmiBlitz3.ab2@16125>   ANDI.w #$7,D3
0002BE0C <AmiBlitz3.ab2@16126>   LSL.w #8,D3
0002BE0E <AmiBlitz3.ab2@16127>   LSL.w #1,D3
0002BE12 <AmiBlitz3.ab2@16128>   OR.w D3,$E+4(A0)                                         ;or  d3,ucodediv-usedcode(a0) org source
0002BE16 <AmiBlitz3.ab2@16129> BRA.w doused__skip2
0002BE1A <AmiBlitz3.ab2@16134>   LEA usedcode2(PC),A0
0002BE1E <AmiBlitz3.ab2@16135>   LEA usedcode2f(PC),A1
0002BE24 <AmiBlitz3.ab2@16137>   ANDI.w #$F1FF,$10+4(A0)                                  ;and #$f1ff,ucodediv2-usedcode2(a0) org source
0002BE26 <AmiBlitz3.ab2@16138>   SUBQ.w #8,D3
0002BE28 <AmiBlitz3.ab2@16139>   LSL.w #8,D3
0002BE2A <AmiBlitz3.ab2@16140>   LSL.w #1,D3
0002BE2E <AmiBlitz3.ab2@16141>   OR.w D3,$10+4(A0)                                        ;or  d3,ucodediv2-usedcode2(a0) org source
0002BE32 <AmiBlitz3.ab2@16144>   MOVE.w -$6(A2,D0.L),D3
0002BE36 <AmiBlitz3.ab2@16145>   MOVE.w D3,$C+4(A0)                                       ;move d3,ucodeskip-usedcode+2(a0) org source
0002BE38 <AmiBlitz3.ab2@16146>   ADDQ.w #4,D3
0002BE3C <AmiBlitz3.ab2@16147>   MOVE.w D3,$2(A0)
0002BE42 <AmiBlitz3.ab2@16148>   MOVE.w regnum,D1
0002BE46 <AmiBlitz3.ab2@16149>    BEQ.w doused__skip3
0002BE4A <AmiBlitz3.ab2@16150>   MOVE.w usedprep(PC),D1
0002BE4E <AmiBlitz3.ab2@16151>    BSR.w writeword
0002BE52 <AmiBlitz3.ab2@16154>   BSR.w pokecode
0002BE58 <AmiBlitz3.ab2@16155>   MOVE.w regnum,D1
0002BE5C <AmiBlitz3.ab2@16156>    BEQ.w doused__skip4
0002BE5E <AmiBlitz3.ab2@16157>   LSL.w #8,D1
0002BE60 <AmiBlitz3.ab2@16158>   LSL.w #1,D1
0002BE64 <AmiBlitz3.ab2@16159>   OR.w usedfix(PC),D1
0002BE68 <AmiBlitz3.ab2@16160>    BSR.w writeword
0002BE6C <AmiBlitz3.ab2@16161>   MOVE.w useddone(PC),D1
0002BE70 <AmiBlitz3.ab2@16162>    BSR.w writeword
0002BE72 <AmiBlitz3.ab2@16165>    MOVEQ.l #$02,D2
0002BE76 <AmiBlitz3.ab2@16166> BRA.w get1bytemain
0002BE7A <AmiBlitz3.ab2@16174>    BSR.w JL_0_A9A0
0002BE7C <AmiBlitz3.ab2@16176>   MOVEQ.l #$00,D3
0002BE80 <AmiBlitz3.ab2@16177>   MOVE.w -$4(A2,D0.L),D3
0002BE84 <AmiBlitz3.ab2@16178>    BSR.w get1bytemain
0002BE88 <AmiBlitz3.ab2@16179> BRA.w JL_0_B46E
0002BE8C <AmiBlitz3.ab2@16186>    BSR.w get1bytemain
0002BE8E <AmiBlitz3.ab2@16187>   MOVE.w D0,-(A7)
0002BE92 <AmiBlitz3.ab2@16188>    BSR.w get1bytemain
0002BE96 <AmiBlitz3.ab2@16189>   CMP.w #$28,D0
0002BE9A <AmiBlitz3.ab2@16190>    BNE.w syntaxerr
0002BE9C <AmiBlitz3.ab2@16191>   MOVE.w (A7)+,D0
0002BEA0 <AmiBlitz3.ab2@16192>    BSR.w JL_0_C340
0002BEA4 <AmiBlitz3.ab2@16193>    BSR.w reget
0002BEA8 <AmiBlitz3.ab2@16194>   CMP.w #$29,D0
0002BEAC <AmiBlitz3.ab2@16195>    BNE.w syntaxerr
0002BEB0 <AmiBlitz3.ab2@16199>   LEA addrcode(PC),A0
0002BEB4 <AmiBlitz3.ab2@16200>   LEA addrcodef(PC),A1
0002BEBA <AmiBlitz3.ab2@16201>   MOVE.w -$6(A2),$2(A0)
0002BEBE <AmiBlitz3.ab2@16202>   MOVE.w $4(A0),D1
0002BEC2 <AmiBlitz3.ab2@16203>   ANDI.w #$FFF8,D1
0002BEC8 <AmiBlitz3.ab2@16204>   OR.w regnum,D1
0002BECC <AmiBlitz3.ab2@16205>   MOVE.w D1,$4(A0)
0002BED0 <AmiBlitz3.ab2@16206>   MOVE.w $6(A0),D1
0002BED4 <AmiBlitz3.ab2@16207>   ANDI.w #$F1FF,D1
0002BEDA <AmiBlitz3.ab2@16208>   MOVE.w regnum,D0
0002BEDC <AmiBlitz3.ab2@16209>   LSL.w #8,D0
0002BEDE <AmiBlitz3.ab2@16210>   LSL.w #1,D0
0002BEE0 <AmiBlitz3.ab2@16211>   OR.w D0,D1
0002BEE4 <AmiBlitz3.ab2@16212>   MOVE.w D1,$6(A0)
0002BEE8 <AmiBlitz3.ab2@16213>    BSR.w pokecode
0002BEEA <AmiBlitz3.ab2@16214>   MOVEQ.l #$03,D2
0002BEEE <AmiBlitz3.ab2@16215> BRA.w get1bytemain
0002BEF2 <AmiBlitz3.ab2@16219>   CMP.w #-$7F4D,D0
0002BEF6 <AmiBlitz3.ab2@16220>    BHI.w JL_0_AAFE
0002BEFA <AmiBlitz3.ab2@16221> BRA.w syntaxerr
0002BEFE <AmiBlitz3.ab2@16228> .do_null   CMP.w #$b581,d0
0002BF02 <AmiBlitz3.ab2@16229>    BNE 'nonull
0002BF08 <AmiBlitz3.ab2@16230>    MOVE.l d0,lastinstruction
0002BF0C <AmiBlitz3.ab2@16231>    MOVE.w #$7000,d1                                            ;asm instr moveq #0,dx
0002BF12 <AmiBlitz3.ab2@16232>    MOVE.w regnum,d0
0002BF14 <AmiBlitz3.ab2@16233>    ASL.l #7,d0
0002BF16 <AmiBlitz3.ab2@16234>    ASL.l #2,d0
0002BF18 <AmiBlitz3.ab2@16235>    OR.l d0,d1
0002BF1C <AmiBlitz3.ab2@16236>    BSR writeword
0002BF22 <AmiBlitz3.ab2@16237>    JSR get1bytemain
0002BF24 <AmiBlitz3.ab2@16238>    RTS
0002BF28 <AmiBlitz3.ab2@16240> 'nonull CMP.w #$c982,d0
0002BF2C <AmiBlitz3.ab2@16241>        BNE nonew_
0002BF2E <AmiBlitz3.ab2@16243>   MOVE.l a5,-(a7)
0002BF34 <AmiBlitz3.ab2@16244>   MOVE.w lastchar,-(a7)
0002BF3A <AmiBlitz3.ab2@16245>   JSR get1bytemain
0002BF3E <AmiBlitz3.ab2@16246>   CMP.w #"(",d0                                             ; use oldcode
0002BF42 <AmiBlitz3.ab2@16247>   BNE 'newcode
0002BF48 <AmiBlitz3.ab2@16248>   JSR get1bytemain
0002BF4C <AmiBlitz3.ab2@16249>   CMP.w #")",d0
0002BF50 <AmiBlitz3.ab2@16250>   BEQ 'newcode
0002BF56 <AmiBlitz3.ab2@16251>   MOVE.w (a7)+,lastchar
0002BF58 <AmiBlitz3.ab2@16252>   MOVE.l (a7)+,a5
0002BF5E <AmiBlitz3.ab2@16253>   MOVE.w lastchar,d0
0002BF62 <AmiBlitz3.ab2@16254>   BRA nonew_
0002BF64 <AmiBlitz3.ab2@16255> 'newcode  MOVE.l a0,-(a7)
0002BF6A <AmiBlitz3.ab2@16256>   TST.b blitzparloop
0002BF6E <AmiBlitz3.ab2@16257>   BNE 'err
0002BF74 <AmiBlitz3.ab2@16258>   TST.b funcparloop
0002BF78 <AmiBlitz3.ab2@16259>   BNE 'err
0002BF7C <AmiBlitz3.ab2@16260>   BRA 'ok
0002BF82 <AmiBlitz3.ab2@16261> 'err JMP errornewnotincalls
0002BF88 <AmiBlitz3.ab2@16262> 'ok  MOVE.l #$203c0000,d1
0002BF8C <AmiBlitz3.ab2@16263>   BSR writelong                                            ; 68k asm move.l #$xx,d0
0002BF8E <AmiBlitz3.ab2@16264>   MOVEQ #0,d1
0002BF92 <AmiBlitz3.ab2@16265>   MOVE.w 8(a0),d1
0002BF96 <AmiBlitz3.ab2@16266>   BSR writeword
0002BF9A <AmiBlitz3.ab2@16267>   MOVE.w #$7200,d1                                         ; 68k asm "moveq #0,d1"
0002BF9E <AmiBlitz3.ab2@16268>   BSR writeword
0002BFA2 <AmiBlitz3.ab2@16269>   MOVE.w #$C002,D1                                         ;call function to alloc global mem
0002BFA6 <AmiBlitz3.ab2@16270>   BSR.w tokejsr2
0002BFA8 <AmiBlitz3.ab2@16271>   MOVE.l (a7)+,a0
0002BFAA <AmiBlitz3.ab2@16272>   ADDQ.l #6,a7                      ; a5 need not restore
0002BFAE <AmiBlitz3.ab2@16273>   CMP.w #")",d0
0002BFB2 <AmiBlitz3.ab2@16274>   BNE 'nobracket
0002BFB8 <AmiBlitz3.ab2@16275>   JSR get1bytemain
0002BFBA <AmiBlitz3.ab2@16276> 'nobracket  RTS
0002BFBE <AmiBlitz3.ab2@16278> nonew_  CMP.w #-$7F4A,D0
0002BFC2 <AmiBlitz3.ab2@16279>    BEQ.w JL_0_A98C
0002BFC6 <AmiBlitz3.ab2@16280>   CMP.w #-$7F48,D0
0002BFCA <AmiBlitz3.ab2@16281>    BEQ.w doaddr
0002BFCE <AmiBlitz3.ab2@16282>   CMP.w #-$7F3C,D0
0002BFD2 <AmiBlitz3.ab2@16283>    BEQ.w domaximum
0002BFD6 <AmiBlitz3.ab2@16284>   CMP.w #-$7F2F,D0
0002BFDA <AmiBlitz3.ab2@16285>    BEQ.w doused
0002BFDC <AmiBlitz3.ab2@16286>   MOVE.w D2,-(A7)
0002BFDE <AmiBlitz3.ab2@16287>   MOVE.w D0,D1
0002BFE2 <AmiBlitz3.ab2@16288>   BCLR #$F,D1
0002BFE6 <AmiBlitz3.ab2@16290>    BSR.w searchinstr
0002BFE8 <AmiBlitz3.ab2@16291>   MOVE.w (A3),D1
0002BFEC <AmiBlitz3.ab2@16292>   BTST #$1,D1
0002BFF0 <AmiBlitz3.ab2@16293>    BEQ.w noreturn_                                         ;syntax error noreturn
0002BFF4 <AmiBlitz3.ab2@16294>   BTST #$2,D1
0002BFF8 <AmiBlitz3.ab2@16295>    BNE.w JL_0_AC1A
0002BFFA <AmiBlitz3.ab2@16296>   LSR.w #8,D1
0002C000 <AmiBlitz3.ab2@16297>   BTST #$3,$1(A3)
0002C004 <AmiBlitz3.ab2@16298>    BEQ.w JL_0_AB4C
0002C00A <AmiBlitz3.ab2@16299>    JSR AJL_0_498A
0002C010 <AmiBlitz3.ab2@16302>    CLR.l rightsidetype
0002C012 <AmiBlitz3.ab2@16303>    MOVE.w D1,-(A7)                                         ;is library instruction
0002C016 <AmiBlitz3.ab2@16304>   CMP.w #$7,D1
0002C01A <AmiBlitz3.ab2@16305>    BNE.w JL_0_AB5E
0002C01C <AmiBlitz3.ab2@16306>   MOVE.l A2,-(A7)
0002C020 <AmiBlitz3.ab2@16307>    BSR.w makesbase
0002C022 <AmiBlitz3.ab2@16308>   MOVEA.l (A7)+,A2
0002C026 <AmiBlitz3.ab2@16311>     BSR.w JL_0_AFA2
0002C028 <AmiBlitz3.ab2@16312>   MOVE.w D3,-(A7)
0002C02C <AmiBlitz3.ab2@16313>    BSR.w get1bytemain
0002C02E <AmiBlitz3.ab2@16314>   MOVEQ.l #$00,D1
0002C032 <AmiBlitz3.ab2@16315>   CMP.w #$28,D0
0002C036 <AmiBlitz3.ab2@16316>    BNE.w JL_0_AB80
0002C03C <AmiBlitz3.ab2@16317>    JSR JL_0_66F6
0002C03E <AmiBlitz3.ab2@16318>   TST.w D1
0002C042 <AmiBlitz3.ab2@16319>    BEQ.w syntaxerr
0002C046 <AmiBlitz3.ab2@16320> BRA.w JL_0_AB84
0002C050 <AmiBlitz3.ab2@16325>   MOVE.w oldqflag,instringon
0002C056 <AmiBlitz3.ab2@16326>   MOVEA.l lastsourcepos,A5
0002C05C <AmiBlitz3.ab2@16329>    MOVE.w regnum,-(A7)
0002C066 <AmiBlitz3.ab2@16330>    MOVE.w regnum,regnumstore
0002C06C <AmiBlitz3.ab2@16331>    TST.b fpu
0002C070 <AmiBlitz3.ab2@16332>             BEQ 'nofloat
0002C076 <AmiBlitz3.ab2@16333>             CMP.w #$ffff,28(a3)
0002C07A <AmiBlitz3.ab2@16334>             BNE 'nofloat
0002C080 <AmiBlitz3.ab2@16335>             CMP.w #$3c01,34(a3)                            ;val do nofpu stuff
0002C084 <AmiBlitz3.ab2@16336>             BEQ 'nofloat
0002C08A <AmiBlitz3.ab2@16337>             CMP.w #$3c02,34(a3)                            ;int skip
0002C08E <AmiBlitz3.ab2@16338>             BEQ 'quick
0002C092 <AmiBlitz3.ab2@16339>             CMP.b #5,(a3)
0002C096 <AmiBlitz3.ab2@16340>             BNE 'nofloat
0002C09C <AmiBlitz3.ab2@16343>             CLR.l load_var_addr
0002C0A0 <AmiBlitz3.ab2@16344> BRA 'isfpu
0002C0A6 <AmiBlitz3.ab2@16347>    CLR.w regnum
0002C0A8 <AmiBlitz3.ab2@16350>    MOVE.w D1,-(A7)
0002C0AE <AmiBlitz3.ab2@16351>   BTST #$3,$1(A3)
0002C0B2 <AmiBlitz3.ab2@16352>    BEQ.w JL_0_ABB0
0002C0B6 <AmiBlitz3.ab2@16371>   MOVE.w $6(A7),D1
0002C0BC <AmiBlitz3.ab2@16372>   MOVE.w d1,peeksize
0002C0C0 <AmiBlitz3.ab2@16382>   ORI.w #$7000,D1
0002C0C4 <AmiBlitz3.ab2@16383>   BSR.w writeword                                          ;write peekmode
0002C0CA <AmiBlitz3.ab2@16386>   ADDQ.w #1,regnum
0002C0CC <AmiBlitz3.ab2@16387>   MOVE.w (A7),D1
0002C0D4 <AmiBlitz3.ab2@16390>   MOVE.w 2(a7),tempregnum
0002C0DA <AmiBlitz3.ab2@16391>   JSR JL_0_4878
0002C0DC <AmiBlitz3.ab2@16392>   TST.w (A7)+
0002C0E0 <AmiBlitz3.ab2@16393>   BEQ.w JL_0_ABC6
0002C0E4 <AmiBlitz3.ab2@16394>   CMP.w #")",D0                                             ; check if ) here for correct end of blitzlib function call
0002C0E8 <AmiBlitz3.ab2@16395>   BNE.w errorbracketmiss                                    ; was syntax error
0002C0EE <AmiBlitz3.ab2@16396>   CLR.l lasttoken
0002C0F2 <AmiBlitz3.ab2@16397>   BSR.w get1bytemain
0002C0F4 <AmiBlitz3.ab2@16400>    MOVE.w (A7)+,D1
0002C0FA <AmiBlitz3.ab2@16401>   MOVE.w D1,regnum
0002C0FE <AmiBlitz3.ab2@16402>    BEQ.w JL_0_ABDE
0002C104 <AmiBlitz3.ab2@16403>    CMP.w #$3c01,24(a2)                                     ;val skipped
0002C108 <AmiBlitz3.ab2@16404>    BNE 'noval
0002C10E <AmiBlitz3.ab2@16405>    TST.b fpu
0002C112 <AmiBlitz3.ab2@16406>    BEQ 'noval
0002C118 <AmiBlitz3.ab2@16407>    CLR.l load_var_addr
0002C11A <AmiBlitz3.ab2@16408>    MOVEQ #0,d1
0002C120 <AmiBlitz3.ab2@16409>    MOVE.w regnum,d1
0002C122 <AmiBlitz3.ab2@16410>    LSL.l #7,d1
0002C128 <AmiBlitz3.ab2@16411>    OR.l #$f2000000,d1
0002C12C <AmiBlitz3.ab2@16412>    BSR writelong
0002C130 <AmiBlitz3.ab2@16413> BRA JL_0_ABDE
0002C136 <AmiBlitz3.ab2@16417>    CMP.w #$3c02,24(a2)                                     ;int skipped
0002C13A <AmiBlitz3.ab2@16418>    BEQ 'quick
0002C13E <AmiBlitz3.ab2@16419>    CMP.b #5,d2
0002C142 <AmiBlitz3.ab2@16420>    BNE 'nofpu
0002C148 <AmiBlitz3.ab2@16421>    TST.b fpu
0002C14C <AmiBlitz3.ab2@16422>    BEQ 'nofpu
0002C152 <AmiBlitz3.ab2@16427>    CLR.l load_var_addr
0002C156 <AmiBlitz3.ab2@16428> BRA JL_0_ABDE
0002C158 <AmiBlitz3.ab2@16431>   LSL.w #8,D1
0002C15A <AmiBlitz3.ab2@16432>   LSL.w #1,D1
0002C15E <AmiBlitz3.ab2@16433>   ORI.w #$2000,D1
0002C162 <AmiBlitz3.ab2@16434>   BSR.w writeword                                          ;write move.l d0,dx
0002C168 <AmiBlitz3.ab2@16435>   TST.b fpu
0002C16C <AmiBlitz3.ab2@16436>   BEQ JL_0_ABDE
0002C16E <AmiBlitz3.ab2@16437>   MOVEQ #0,d1
0002C174 <AmiBlitz3.ab2@16438>   MOVE.w regnum,d1
0002C176 <AmiBlitz3.ab2@16439>   LSL.l #7,d1
0002C17C <AmiBlitz3.ab2@16440>   OR.l #$f2000000,d1
0002C17E <AmiBlitz3.ab2@16444>        MOVE.w (A7)+,D3
0002C182 <AmiBlitz3.ab2@16445>        BEQ.w JL_0_ABFC
0002C188 <AmiBlitz3.ab2@16446>        TST.b fpu
0002C18C <AmiBlitz3.ab2@16447>        BEQ 'nofpu
0002C18E <AmiBlitz3.ab2@16448>       MOVE.l d0,-(a7)
0002C190 <AmiBlitz3.ab2@16449>        MOVE.l a0,-(a7)
0002C196 <AmiBlitz3.ab2@16450>        MOVE.l stacktrack,d1
0002C19C <AmiBlitz3.ab2@16451>        LEA fpustackbase,a0
0002C1A4 <AmiBlitz3.ab2@16452>        MOVE.w 0(a0,d1),regmask
0002C1A6 <AmiBlitz3.ab2@16453>        MOVE.l (a7)+,a0
0002C1AA <AmiBlitz3.ab2@16454>       MOVE.w #8,d0
0002C1AE <AmiBlitz3.ab2@16457>       BEQ 'ready
0002C1B4 <AmiBlitz3.ab2@16458>       BTST d0,regmask
0002C1B8 <AmiBlitz3.ab2@16459>       BEQ 'noa7
0002C1BA <AmiBlitz3.ab2@16460>       MOVEQ #0,d1
0002C1BC <AmiBlitz3.ab2@16461>       MOVE.w d0,d1
0002C1BE <AmiBlitz3.ab2@16462>       SUBQ.w #1,d1
0002C1C0 <AmiBlitz3.ab2@16463>       ASL #7,d1
0002C1C6 <AmiBlitz3.ab2@16465>       OR.l #$f21f5400,d1                                   ;fmove.d (a7)+
0002C1CA <AmiBlitz3.ab2@16466>       BSR writelong
0002C1D0 <AmiBlitz3.ab2@16467>       SUBQ.l #2,stacktrack
0002C1D2 <AmiBlitz3.ab2@16470>       SUBQ.w #1,d0
0002C1D6 <AmiBlitz3.ab2@16471>       BNE 'loop
0002C1D8 <AmiBlitz3.ab2@16474>       MOVE.l (a7)+,d0
0002C1DE <AmiBlitz3.ab2@16475>       SUBQ.l #2,stacktrack                                 ;int track
0002C1E2 <AmiBlitz3.ab2@16478>    MOVE.w #$4CDF,D1
0002C1E6 <AmiBlitz3.ab2@16479>    BSR.w writeword                                         ;write movem.l (a7)+,
0002C1E8 <AmiBlitz3.ab2@16480>   MOVEQ.l #$00,D1
0002C1EA <AmiBlitz3.ab2@16481>   MOVEQ.l #$0F,D4
0002C1EC <AmiBlitz3.ab2@16484>     LSL.w #1,D3
0002C1EE <AmiBlitz3.ab2@16485>     ROXR.w #1,D1
0002C1F2 <AmiBlitz3.ab2@16486>   DBF D4,JL_0_ABF0
0002C1F6 <AmiBlitz3.ab2@16488>    BSR.w writeword
0002C1FC <AmiBlitz3.ab2@16489>    TST.b fast
0002C200 <AmiBlitz3.ab2@16490>    BEQ JL_0_ABFC
0002C206 <AmiBlitz3.ab2@16491>    TST.w regnum
0002C20A <AmiBlitz3.ab2@16492>    BEQ JL_0_ABFC
0002C210 <AmiBlitz3.ab2@16493>    CMP.w #$3c0e,$1c(a3)                                    ;true
0002C214 <AmiBlitz3.ab2@16494>    BNE 'l1
0002C21A <AmiBlitz3.ab2@16495>    MOVE.w regnum,d1
0002C21C <AmiBlitz3.ab2@16496>    ASL.l #8,d1
0002C21E <AmiBlitz3.ab2@16497>    ASL.l #1,d1
0002C222 <AmiBlitz3.ab2@16498>    OR.w #$70ff,d1
0002C22C <AmiBlitz3.ab2@16499>    SUB.l #12,destpointer
0002C230 <AmiBlitz3.ab2@16500>    BSR writeword
0002C236 <AmiBlitz3.ab2@16503>   CMP.w #$3c0f,$1c(a3)                                     ;false
0002C23A <AmiBlitz3.ab2@16504>    BNE 'l2
0002C240 <AmiBlitz3.ab2@16505>     MOVE.w regnum,d1
0002C242 <AmiBlitz3.ab2@16506>     ASL.l #8,d1
0002C244 <AmiBlitz3.ab2@16507>     ASL.l #1,d1
0002C248 <AmiBlitz3.ab2@16508>     OR.w #$7000,d1
0002C252 <AmiBlitz3.ab2@16509>     SUB.l #12,destpointer
0002C256 <AmiBlitz3.ab2@16510>     BSR writeword
0002C258 <AmiBlitz3.ab2@16514>    MOVE.w (A7)+,D2
0002C25C <AmiBlitz3.ab2@16515>   CMP.w #$7,D2                                             ;destination var type
0002C260 <AmiBlitz3.ab2@16516>    BNE.w JL_0_AC16
0002C266 <AmiBlitz3.ab2@16517>   MOVE.w putstlen,D1
0002C26C <AmiBlitz3.ab2@16518>   OR.w regnum,D1
0002C270 <AmiBlitz3.ab2@16519>    BSR.w writeword
0002C274 <AmiBlitz3.ab2@16522> BRA.w JL_0_AF66
0002C278 <AmiBlitz3.ab2@16527>   MOVE.w $6(A3),D1
0002C27C <AmiBlitz3.ab2@16528>    BSR.w uselib
0002C280 <AmiBlitz3.ab2@16529>    BSR.w JL_0_AD40
0002C282 <AmiBlitz3.ab2@16530>   MOVE.l D4,D1
0002C284 <AmiBlitz3.ab2@16531>   MOVE.l D5,-(A7)
0002C288 <AmiBlitz3.ab2@16532>    BSR.w JL_0_AD38
0002C28C <AmiBlitz3.ab2@16533>   MOVE.w $A(A1),-(A7)
0002C28E <AmiBlitz3.ab2@16534>   ADDQ.w #8,A3
0002C290 <AmiBlitz3.ab2@16535>   MOVE.w (A3)+,-(A7)
0002C292 <AmiBlitz3.ab2@16536>   MOVE.l A3,-(A7)
0002C296 <AmiBlitz3.ab2@16537>    BSR.w get1bytemain
0002C298 <AmiBlitz3.ab2@16538>   MOVE.w D0,-(A7)
0002C29A <AmiBlitz3.ab2@16539>   MOVEQ.l #$00,D3
0002C2A0 <AmiBlitz3.ab2@16540>   JSR checka4a5
0002C2A2 <AmiBlitz3.ab2@16542>   MOVE.b (A3)+,D1
0002C2A6 <AmiBlitz3.ab2@16543>    BMI.w JL_0_AC6A
0002C2A8 <AmiBlitz3.ab2@16544>   MOVEQ.l #$03,D2
0002C2AA <AmiBlitz3.ab2@16545>   ADDQ.w #1,D3
0002C2AE <AmiBlitz3.ab2@16546>   MOVEM.l D3/A3,-(A7)
0002C2B4 <AmiBlitz3.ab2@16547>   MOVE.b funcparloop,-(a7)
0002C2BA <AmiBlitz3.ab2@16548>   CLR.b funcparloop
0002C2C0 <AmiBlitz3.ab2@16549>   MOVE.b blitzparloop,-(a7)
0002C2C8 <AmiBlitz3.ab2@16550>   MOVE.b #1,blitzparloop
0002C2CE <AmiBlitz3.ab2@16551>   MOVE.l lasttoken,-(a7)
0002C2D4 <AmiBlitz3.ab2@16552>   MOVE.l leftsidetype,-(a7)
0002C2DA <AmiBlitz3.ab2@16553>   MOVE.l rightsidetype,-(a7)
0002C2DE <AmiBlitz3.ab2@16554>   BSR.w peval
0002C2E4 <AmiBlitz3.ab2@16555>   MOVE.l (a7)+,rightsidetype
0002C2EA <AmiBlitz3.ab2@16556>   MOVE.l (a7)+,leftsidetype
0002C2F0 <AmiBlitz3.ab2@16557>   MOVE.l (a7)+,lasttoken
0002C2F6 <AmiBlitz3.ab2@16558>   MOVE.b (a7)+,blitzparloop
0002C2FC <AmiBlitz3.ab2@16559>   MOVE.b (a7)+,funcparloop
0002C302 <AmiBlitz3.ab2@16560>   SUBQ.w #4,a2offset
0002C306 <AmiBlitz3.ab2@16561>   MOVEM.l (A7)+,D3/A3
0002C30A <AmiBlitz3.ab2@16562>   CMP.w #$2C,D0
0002C30E <AmiBlitz3.ab2@16563>    BEQ.w JL_0_AC40
0002C310 <AmiBlitz3.ab2@16564>   TST.b (A3)
0002C314 <AmiBlitz3.ab2@16565>    BPL.w syntaxerr
0002C316 <AmiBlitz3.ab2@16568>   MOVE.w (A7)+,D1
0002C31A <AmiBlitz3.ab2@16569>    BSR.w JL_0_AD04
0002C31C <AmiBlitz3.ab2@16570>   MOVEA.l (A7)+,A3
0002C31E <AmiBlitz3.ab2@16571>   SUBQ.w #1,D3
0002C322 <AmiBlitz3.ab2@16572>    BMI.w JL_0_ACBE
0002C324 <AmiBlitz3.ab2@16575>   TST.b (A3)+
0002C328 <AmiBlitz3.ab2@16576>    BPL.w JL_0_AC78
0002C32A <AmiBlitz3.ab2@16577>   SUBQ.w #1,A3
0002C32C <AmiBlitz3.ab2@16580>     MOVEQ.l #$00,D1
0002C32E <AmiBlitz3.ab2@16581>     MOVE.b -(A3),D1
0002C332 <AmiBlitz3.ab2@16582>     BTST #$4,D1
0002C336 <AmiBlitz3.ab2@16583>      BNE.w JL_0_ACAA
0002C33C <AmiBlitz3.ab2@16584>     CMP.w regnum,D1
0002C340 <AmiBlitz3.ab2@16585>      BCC.w JL_0_AC9E
0002C342 <AmiBlitz3.ab2@16586>     BSET D1,D5
0002C344 <AmiBlitz3.ab2@16587>     MOVEQ.l #$0F,D0
0002C346 <AmiBlitz3.ab2@16588>     SUB.w D1,D0
0002C348 <AmiBlitz3.ab2@16589>     BSET D0,D4
0002C34A <AmiBlitz3.ab2@16592>     LSL.w #8,D1
0002C34C <AmiBlitz3.ab2@16593>     LSL.w #1,D1
0002C350 <AmiBlitz3.ab2@16594>     ORI.w #$201F,D1
0002C354 <AmiBlitz3.ab2@16595>   BRA.w JL_0_ACB6
0002C358 <AmiBlitz3.ab2@16598>     ANDI.w #$7,D1
0002C35A <AmiBlitz3.ab2@16599>     LSL.w #8,D1
0002C35C <AmiBlitz3.ab2@16600>     LSL.w #1,D1
0002C360 <AmiBlitz3.ab2@16601>     ORI.w #$205F,D1
0002C364 <AmiBlitz3.ab2@16604>      BSR.w writeword
0002C368 <AmiBlitz3.ab2@16605>   DBF D3,JL_0_AC80
0002C36E <AmiBlitz3.ab2@16608>   MOVE.w (A7)+,libjsr+2
0002C374 <AmiBlitz3.ab2@16609>   MOVE.w (A7)+,libbase+2
0002C37A <AmiBlitz3.ab2@16610>   MOVE.l libbase,D1
0002C37E <AmiBlitz3.ab2@16611>    BSR.w writelong
0002C384 <AmiBlitz3.ab2@16612>   MOVE.l libjsr,D1
0002C388 <AmiBlitz3.ab2@16613>    BSR.w writelong
0002C38E <AmiBlitz3.ab2@16614>   MOVE.w regnum,D1
0002C392 <AmiBlitz3.ab2@16615>    BEQ.w JL_0_ACF4
0002C394 <AmiBlitz3.ab2@16616>   LSL.w #8,D1
0002C396 <AmiBlitz3.ab2@16617>   LSL.w #1,D1
0002C39A <AmiBlitz3.ab2@16618>   ORI.w #$2000,D1
0002C39E <AmiBlitz3.ab2@16619>    BSR.w writeword
0002C3A0 <AmiBlitz3.ab2@16622>   MOVE.l (A7)+,D1
0002C3A4 <AmiBlitz3.ab2@16623>    BSR.w JL_0_AD38
0002C3AA <AmiBlitz3.ab2@16624>    JSR restorea4a5
0002C3AC <AmiBlitz3.ab2@16625>   MOVEQ.l #$03,D2
0002C3B0 <AmiBlitz3.ab2@16626>    BSR.w reget
0002C3B4 <AmiBlitz3.ab2@16627> BRA.w JL_0_AF66
0002C3B6 <AmiBlitz3.ab2@16630>   TST.w D3
0002C3BA <AmiBlitz3.ab2@16631>    BEQ.w JL_0_AD1E
0002C3BE <AmiBlitz3.ab2@16632>   CMP.w #$28,D1
0002C3C2 <AmiBlitz3.ab2@16633>    BNE.w syntaxerr
0002C3C6 <AmiBlitz3.ab2@16634>   CMP.w #$29,D0
0002C3CA <AmiBlitz3.ab2@16635>    BNE.w syntaxerr
0002C3CE <AmiBlitz3.ab2@16636> BRA.w get1bytemain
0002C3D2 <AmiBlitz3.ab2@16639>   CMP.w #$28,D1
0002C3D6 <AmiBlitz3.ab2@16640>    BNE.w JL_0_AD36
0002C3DA <AmiBlitz3.ab2@16641>    BSR.w get1bytemain
0002C3DE <AmiBlitz3.ab2@16642>   CMP.w #$29,D0
0002C3E2 <AmiBlitz3.ab2@16643>    BNE.w syntaxerr
0002C3E6 <AmiBlitz3.ab2@16644> BRA.w get1bytemain
0002C3E8 <AmiBlitz3.ab2@16647> RTS
0002C3EA <AmiBlitz3.ab2@16650>   TST.w D1
0002C3EE <AmiBlitz3.ab2@16651>    BNE.w writelong
0002C3F0 <AmiBlitz3.ab2@16652> RTS
0002C3F4 <AmiBlitz3.ab2@16656>   MOVE.w #$48E7,D4
0002C3F6 <AmiBlitz3.ab2@16657>   SWAP D4
0002C3F8 <AmiBlitz3.ab2@16658>   CLR.w D4
0002C3FC <AmiBlitz3.ab2@16659>   MOVE.w #$4CDF,D5
0002C3FE <AmiBlitz3.ab2@16660>   SWAP D5
0002C400 <AmiBlitz3.ab2@16661>   CLR.w D5
0002C406 <AmiBlitz3.ab2@16662>   MOVE.w regnum,D1
0002C40A <AmiBlitz3.ab2@16663>    BEQ.w JL_0_AD74
0002C40E <AmiBlitz3.ab2@16664>   BSET #$F,D4
0002C412 <AmiBlitz3.ab2@16665>   BSET #$0,D5
0002C416 <AmiBlitz3.ab2@16666>   CMP.w #$2,D1
0002C41A <AmiBlitz3.ab2@16667>    BCS.w JL_0_AD72
0002C41E <AmiBlitz3.ab2@16670>   BSET #$E,D4
0002C422 <AmiBlitz3.ab2@16671>   BSET #$1,D5
0002C424 <AmiBlitz3.ab2@16674> RTS
0002C42A <AmiBlitz3.ab2@16677>   TST.w fuckpos
0002C42E <AmiBlitz3.ab2@16678>   BNE.w JL_0_AD6A
0002C430 <AmiBlitz3.ab2@16679> RTS
0002C432 <AmiBlitz3.ab2@16682> fuckpos:  Ds.w 1
0002C438 <AmiBlitz3.ab2@16686>   MOVE.w sbasegot,D1
0002C43C <AmiBlitz3.ab2@16687>    BEQ.w makesbase__skip
0002C440 <AmiBlitz3.ab2@16691>   MOVE.w sbgot(PC),D1
0002C444 <AmiBlitz3.ab2@16692>    BNE.w makesbase__skip2
0002C44C <AmiBlitz3.ab2@16696>   MOVE.w #$0002,sbgot
0002C452 <AmiBlitz3.ab2@16697>   MOVE.w movea3a7,D1
0002C456 <AmiBlitz3.ab2@16698> BRA.w writeword
0002C458 <AmiBlitz3.ab2@16701> RTS
0002C460 <AmiBlitz3.ab2@16706>   MOVE.w #$0001,sbgot                                      ;voodoo magic! - Will it work?
0002C466 <AmiBlitz3.ab2@16709>   MOVE.l #$C601,D1
0002C46E <AmiBlitz3.ab2@16710>   MOVE.w #-1,sbasegot
0002C474 <AmiBlitz3.ab2@16711>   MOVE.l d1,lastinstruction
0002C478 <AmiBlitz3.ab2@16712>   BSR.w Atokejsr
0002C47A <AmiBlitz3.ab2@16713> RTS
0002C484 <AmiBlitz3.ab2@16718>   MOVE.l data1,litdata1
0002C48A <AmiBlitz3.ab2@16719>   TST.b fast
0002C48E <AmiBlitz3.ab2@16720>   BEQ 'l50                                                 ;optistring  seem impossible to get work
0002C492 <AmiBlitz3.ab2@16724> BRA 'l50                                                   ;to deactivate
0002C498 <AmiBlitz3.ab2@16730>   TST.b optistring
0002C49C <AmiBlitz3.ab2@16731>   BNE.s 'l21
0002C4A2 <AmiBlitz3.ab2@16732>   CLR.b string1
0002C4AA <AmiBlitz3.ab2@16733>   MOVE.b #1,optistring
0002C4B0 <AmiBlitz3.ab2@16734>   TST.b nostringopt
0002C4B4 <AmiBlitz3.ab2@16735>   BNE 'l21
0002C4B6 <AmiBlitz3.ab2@16736>   MOVE.l a5,a4
0002C4B8 <AmiBlitz3.ab2@16737>   SUBQ.l #1,a4
0002C4BA <AmiBlitz3.ab2@16740>     TST.b (a4)
0002C4BE <AmiBlitz3.ab2@16741>     BMI 'l19a
0002C4C2 <AmiBlitz3.ab2@16742>     BEQ.s 'l20
0002C4C6 <AmiBlitz3.ab2@16743>     CMP.b #$22,(a4)
0002C4CA <AmiBlitz3.ab2@16744>     BEQ.s 'l19
0002C4D0 <AmiBlitz3.ab2@16747>     TST.w string1
0002C4D4 <AmiBlitz3.ab2@16748>     BNE 'l11
0002C4D8 <AmiBlitz3.ab2@16749>     CMP.b #":",(a4)
0002C4DC <AmiBlitz3.ab2@16750>     BEQ.s 'l20
0002C4E0 <AmiBlitz3.ab2@16751>     CMP.b #";",(a4)
0002C4E4 <AmiBlitz3.ab2@16752>     BEQ.s 'l20
0002C4E8 <AmiBlitz3.ab2@16753>     CMP.b #"+",(a4)
0002C4EC <AmiBlitz3.ab2@16754>     BEQ.s 'l21
0002C4F0 <AmiBlitz3.ab2@16755>     CMP.b #",",(a4)
0002C4F4 <AmiBlitz3.ab2@16756>     BEQ.s 'l20                                             ;was l21
0002C4F8 <AmiBlitz3.ab2@16757>     CMP.b #")",(a4)
0002C4FC <AmiBlitz3.ab2@16758>     BEQ.s 'l20                                             ;was l21
0002C4FE <AmiBlitz3.ab2@16761>     ADDQ.l #1,a4
0002C502 <AmiBlitz3.ab2@16762> BRA.s 'l10
0002C50A <AmiBlitz3.ab2@16765>   BCHG #0,string1
0002C50E <AmiBlitz3.ab2@16766> BRA 'l18
0002C510 <AmiBlitz3.ab2@16769>   ADDQ.l #1,a4
0002C512 <AmiBlitz3.ab2@16770>   TST.b (a4)
0002C516 <AmiBlitz3.ab2@16771>   BEQ 'l21
0002C51A <AmiBlitz3.ab2@16772> BRA 'l11
0002C51C <AmiBlitz3.ab2@16775>   MOVE.l a5,a4
0002C51E <AmiBlitz3.ab2@16776>   SUBQ.l #1,a4
0002C522 <AmiBlitz3.ab2@16779>   CMP.b #$20,-(a4)
0002C526 <AmiBlitz3.ab2@16780>   BEQ 'll1
0002C52A <AmiBlitz3.ab2@16781>   CMP.b #"+",(a4)
0002C52E <AmiBlitz3.ab2@16782>   BEQ 'l21
0002C536 <AmiBlitz3.ab2@16797>   MOVE.b #2,optistring
0002C53E <AmiBlitz3.ab2@16800>   CMP.b #2,optistring
0002C542 <AmiBlitz3.ab2@16801>   BEQ.s 'l100
0002C546 <AmiBlitz3.ab2@16804>   BSR.w makesbase
0002C54A <AmiBlitz3.ab2@16805>   BSR.w pokedata1                                          ;writestringsizespace
0002C54E <AmiBlitz3.ab2@16806>   BSR.w pokedata1
0002C550 <AmiBlitz3.ab2@16809>   MOVEQ.l #$00,D2
0002C556 <AmiBlitz3.ab2@16812>     MOVE.l a5,lastsourcepos
0002C558 <AmiBlitz3.ab2@16813>     MOVEQ #0,d0
0002C55A <AmiBlitz3.ab2@16814>     MOVE.b (a5)+,d0
0002C55C <AmiBlitz3.ab2@16815>     TST.w D0
0002C560 <AmiBlitz3.ab2@16816>      BEQ.w notqerr
0002C564 <AmiBlitz3.ab2@16817>     CMP.w #$22,D0                                          ; --- " ---
0002C568 <AmiBlitz3.ab2@16818>      BEQ.w JL_0_ADF6
0002C56C <AmiBlitz3.ab2@16819>     CMP.b #"\",d0
0002C570 <AmiBlitz3.ab2@16820>      BNE 'l1
0002C574 <AmiBlitz3.ab2@16821>     CMP.b #"\",(a5)
0002C578 <AmiBlitz3.ab2@16822>      BNE 'l1
0002C57E <AmiBlitz3.ab2@16823>     TST.b newsyntax
0002C582 <AmiBlitz3.ab2@16824>      BEQ 'l1
0002C588 <AmiBlitz3.ab2@16825>     CMP.w #"\\",1(a5)                                      ; new compiler constants
0002C58C <AmiBlitz3.ab2@16826>     BNE 'l2
0002C58E <AmiBlitz3.ab2@16827>     ADDQ #2,a5
0002C590 <AmiBlitz3.ab2@16830>     ADDQ.w #1,D2
0002C592 <AmiBlitz3.ab2@16831>     MOVE.w D0,D1
0002C596 <AmiBlitz3.ab2@16832>     BSR.w pokedata1b                                        ;writestring
0002C59A <AmiBlitz3.ab2@16833> BRA.w writestring
0002C5A0 <AmiBlitz3.ab2@16836>     JSR check_newconstants
0002C5A4 <AmiBlitz3.ab2@16837> BRA writestring
0002C5AA <AmiBlitz3.ab2@16840>   NOT instringon
0002C5B0 <AmiBlitz3.ab2@16841>   MOVE.w dontwrite,D1
0002C5B4 <AmiBlitz3.ab2@16842>   BNE.w JL_0_AE0A
0002C5BC <AmiBlitz3.ab2@16843>   CMP.b #2,optistring
0002C5C0 <AmiBlitz3.ab2@16844>   BEQ 'l10
0002C5C6 <AmiBlitz3.ab2@16845>     MOVEA.l litdata1,A0
0002C5C8 <AmiBlitz3.ab2@16846>     CLR.w (A0)+                                            ;writesize
0002C5CA <AmiBlitz3.ab2@16847>     MOVE.w D2,(A0)
0002C5CE <AmiBlitz3.ab2@16851>   BSR.w JL_0_AEA4                                          ;writestringconstantcode
0002C5D4 <AmiBlitz3.ab2@16852>   ADDQ.l #1,data1
0002C5DC <AmiBlitz3.ab2@16853>   BCLR #$0,data1+3
0002C5DE <AmiBlitz3.ab2@16854>   MOVEQ.l #$07,D2
0002C5E2 <AmiBlitz3.ab2@16855> BRA.w get1bytemain
0002C5E6 <AmiBlitz3.ab2@16859>   BSR.w makename2
0002C5EA <AmiBlitz3.ab2@16860>   BSR.w findlabel2
0002C5EE <AmiBlitz3.ab2@16861>   BEQ.w JL_0_AE4A
0002C5F2 <AmiBlitz3.ab2@16862>   BSR.w addlabelhash
0002C5F6 <AmiBlitz3.ab2@16863>   CLR.l $4(A2)
0002C5FA <AmiBlitz3.ab2@16864>   CLR.l $8(A2)
0002C602 <AmiBlitz3.ab2@16866>   MOVE.w linenumat+2,$10(A2)
0002C608 <AmiBlitz3.ab2@16867>   MOVE.w linenumat,d0
0002C60A <AmiBlitz3.ab2@16868>   MOVEQ #0,d1
0002C60E <AmiBlitz3.ab2@16869>   MOVE.b -1(a2,d7),d1
0002C612 <AmiBlitz3.ab2@16870>   MOVE.w d0,0(a2,d1)
0002C616 <AmiBlitz3.ab2@16871> BRA.w JL_0_AE52
0002C61A <AmiBlitz3.ab2@16874>   TST.l $8(A2)
0002C61E <AmiBlitz3.ab2@16875>   BNE.w JL_0_AE88
0002C624 <AmiBlitz3.ab2@16878>   MOVEA.l _execbase,A6
0002C626 <AmiBlitz3.ab2@16879>   MOVEQ.l #$0C+2,D0
0002C628 <AmiBlitz3.ab2@16880>   MOVEQ.l #$01,D1
0002C62E <AmiBlitz3.ab2@16881>   MOVE.l mempool,a0
0002C632 <AmiBlitz3.ab2@16882>   JSR _AllocPooled(a6)
0002C634 <AmiBlitz3.ab2@16884>   MOVEA.l D0,A0
0002C638 <AmiBlitz3.ab2@16885>   MOVE.l $4(A2),(A0)
0002C63C <AmiBlitz3.ab2@16886>   MOVE.l A0,$4(A2)
0002C644 <AmiBlitz3.ab2@16887>   MOVE.l destpointer,$4(A0)
0002C648 <AmiBlitz3.ab2@16888>   ADDQ.l #2,$4(A0)
0002C650 <AmiBlitz3.ab2@16889>   MOVE.w procnum,$8(A0)
0002C658 <AmiBlitz3.ab2@16890>   MOVE.w linenumat+2,$A(A0)
0002C660 <AmiBlitz3.ab2@16891>   MOVE.w linenumat,$c(a0)
0002C662 <AmiBlitz3.ab2@16892> RTS
0002C666 <AmiBlitz3.ab2@16895>   MOVE.l $4(A2),D1
0002C66A <AmiBlitz3.ab2@16896>   BTST #$0,D1
0002C66E <AmiBlitz3.ab2@16897>    BNE.w illlaberr
0002C674 <AmiBlitz3.ab2@16898>   MOVE.w procnum,D1
0002C678 <AmiBlitz3.ab2@16899>   CMP.w $10(A2),D1
0002C67C <AmiBlitz3.ab2@16900>    BNE.w referr
0002C67E <AmiBlitz3.ab2@16901> RTS
0002C680 <AmiBlitz3.ab2@16905>   MOVE.w D0,-(A7)
0002C688 <AmiBlitz3.ab2@16906>   CMP.b #2,optistring
0002C68C <AmiBlitz3.ab2@16907>   BEQ 'l10
0002C692 <AmiBlitz3.ab2@16910>   MOVE.w numtoa0,D1
0002C696 <AmiBlitz3.ab2@16911>    BSR.w writeword
0002C69A <AmiBlitz3.ab2@16912>    BSR.w addoff
0002C6A0 <AmiBlitz3.ab2@16913>   MOVE.l litdata1,D1
0002C6A4 <AmiBlitz3.ab2@16914>    BSR.w writelong
0002C6AA <AmiBlitz3.ab2@16915>   MOVE.w pushlen,D1
0002C6AE <AmiBlitz3.ab2@16916>    BSR.w writeword
0002C6B2 <AmiBlitz3.ab2@16917>   MOVE.w #$C600,D1
0002C6B6 <AmiBlitz3.ab2@16918>    BSR.w Atokejsr
0002C6B8 <AmiBlitz3.ab2@16919>   MOVE.w (A7)+,D0
0002C6BA <AmiBlitz3.ab2@16920> RTS
0002C6BC <AmiBlitz3.ab2@16923>   MOVEQ #0,d1
0002C6C0 <AmiBlitz3.ab2@16924>   BSR.w pokedata1b
0002C6C6 <AmiBlitz3.ab2@16925>   MOVE.l destpointer,a4
0002C6CA <AmiBlitz3.ab2@16926>   MOVE.w #$203c,d1
0002C6D0 <AmiBlitz3.ab2@16927>   TST.w mode
0002C6D4 <AmiBlitz3.ab2@16928>   BNE 'lm10
0002C6DA <AmiBlitz3.ab2@16929>    ADDQ.w #4,a2offset
0002C6DE <AmiBlitz3.ab2@16930>   MOVE.w #$2f3c,d1
0002C6E4 <AmiBlitz3.ab2@16933>   TST.w mode
0002C6E8 <AmiBlitz3.ab2@16934>   BEQ 'lm3
0002C6EE <AmiBlitz3.ab2@16935>   MOVE.w regnum,D0
0002C6F0 <AmiBlitz3.ab2@16936>   LSL.w #8,D0
0002C6F2 <AmiBlitz3.ab2@16937>   LSL.w #1,D0
0002C6F4 <AmiBlitz3.ab2@16938>   OR.w d0,d1
0002C6F8 <AmiBlitz3.ab2@16939>   BSR writeword
0002C6FC <AmiBlitz3.ab2@16940>   BSR.w addoff
0002C702 <AmiBlitz3.ab2@16941>   MOVE.l litdata1,D1
0002C706 <AmiBlitz3.ab2@16942>   BSR.w writelong
0002C70E <AmiBlitz3.ab2@16943>   CMP.w #3,mode
0002C712 <AmiBlitz3.ab2@16944>   BEQ 'l30
0002C718 <AmiBlitz3.ab2@16945>    ADDQ.w #4,a2offset
0002C71C <AmiBlitz3.ab2@16946>   MOVE.w #$4878,D1
0002C720 <AmiBlitz3.ab2@16947>   BSR.w writeword
0002C722 <AmiBlitz3.ab2@16948>   MOVE.l d2,d1
0002C726 <AmiBlitz3.ab2@16949>   BSR writeword
0002C728 <AmiBlitz3.ab2@16952>   MOVE.w (A7)+,D0
0002C72A <AmiBlitz3.ab2@16953> RTS
0002C730 <AmiBlitz3.ab2@16956>   MOVE.l #$3f3c0007,d1
0002C734 <AmiBlitz3.ab2@16957>   BSR writelong
0002C73A <AmiBlitz3.ab2@16958>   MOVE.w regnum,D1
0002C73C <AmiBlitz3.ab2@16959>   LSL.w #8,D1
0002C73E <AmiBlitz3.ab2@16960>   LSL.w #1,D1
0002C742 <AmiBlitz3.ab2@16961>   ORI.w #$2f3c,d1
0002C746 <AmiBlitz3.ab2@16962>   BSR writeword
0002C74C <AmiBlitz3.ab2@16963>    ADDQ.w #4,a2offset
0002C74E <AmiBlitz3.ab2@16964>   MOVE.l d2,d1
0002C752 <AmiBlitz3.ab2@16965>   BSR writelong
0002C756 <AmiBlitz3.ab2@16966>   MOVE.w #$2f3c,d1
0002C75A <AmiBlitz3.ab2@16967>   BSR writeword
0002C75E <AmiBlitz3.ab2@16968>   BSR.w addoff
0002C764 <AmiBlitz3.ab2@16969>   MOVE.l litdata1,D1
0002C768 <AmiBlitz3.ab2@16970>   BSR.w writelong
0002C76A <AmiBlitz3.ab2@16971>   MOVE.w (A7)+,D0
0002C76C <AmiBlitz3.ab2@16972> RTS
0002C770 <AmiBlitz3.ab2@16976>   BSR.w get1bytemain
0002C774 <AmiBlitz3.ab2@16977>    BSR.w JL_0_AE22
0002C77A <AmiBlitz3.ab2@16978>   MOVE.w regnum,D1
0002C77C <AmiBlitz3.ab2@16979>   LSL.w #8,D1
0002C77E <AmiBlitz3.ab2@16980>   LSL.w #1,D1
0002C782 <AmiBlitz3.ab2@16981>   ORI.w #$203C,D1
0002C786 <AmiBlitz3.ab2@16982>    BSR.w writeword
0002C78A <AmiBlitz3.ab2@16983>    BSR.w addoff
0002C78E <AmiBlitz3.ab2@16984>   MOVE.l $8(A2),D1
0002C792 <AmiBlitz3.ab2@16985>    BSR.w writelong
0002C794 <AmiBlitz3.ab2@16986>   MOVEQ.l #$03,D2
0002C79A <AmiBlitz3.ab2@16987>   CLR.b peekaddrsize
0002C79E <AmiBlitz3.ab2@16988> BRA.w reget
0002C7A0 <AmiBlitz3.ab2@16991>   MOVEQ.l #$00,D3
0002C7A4 <AmiBlitz3.ab2@16994>   BSR.w get1bytemain
0002C7A8 <AmiBlitz3.ab2@16995>    BEQ.w syntaxerr
0002C7AC <AmiBlitz3.ab2@16996>   CMP.w #$22,D0
0002C7B0 <AmiBlitz3.ab2@16997>    BEQ.w JL_0_AF1A
0002C7B2 <AmiBlitz3.ab2@16998>   LSL.l #8,D3
0002C7B4 <AmiBlitz3.ab2@16999>   MOVE.b D0,D3
0002C7B8 <AmiBlitz3.ab2@17000> BRA.w JL_0_AF02
0002C7BC <AmiBlitz3.ab2@17003>   BSR.w get1bytemain
0002C7C0 <AmiBlitz3.ab2@17004> BRA.w JL_0_B46E
0002C7C2 <AmiBlitz3.ab2@17007>   MOVE.w D2,-(A7)                                          ;basicvarsforasm
0002C7C6 <AmiBlitz3.ab2@17008>    BSR.w makename2
0002C7CA <AmiBlitz3.ab2@17009>    BSR.w findlabel2
0002C7CE <AmiBlitz3.ab2@17010>    BEQ.w 'l10
0002C7D4 <AmiBlitz3.ab2@17011>    LEA ptr_parameterstore,a0
0002C7DA <AmiBlitz3.ab2@17012>    CMP.b #"@",-1(a0,d2.w)
0002C7DE <AmiBlitz3.ab2@17013>    BNE cnferr
0002C7E2 <AmiBlitz3.ab2@17014>    CLR.b -1(a0,d2.w)
0002C7E4 <AmiBlitz3.ab2@17015>    SUBQ.l #1,d2
0002C7EA <AmiBlitz3.ab2@17016>    LEA varbase,a2
0002C7EE <AmiBlitz3.ab2@17017>    BSR findvariable
0002C7F2 <AmiBlitz3.ab2@17018>    BNE cnferr
0002C7F6 <AmiBlitz3.ab2@17019>    CMP.b #"\",d0
0002C7FA <AmiBlitz3.ab2@17020>    BNE 'l6
0002C800 <AmiBlitz3.ab2@17021>    ADDQ #1,lastsourcepos
0002C804 <AmiBlitz3.ab2@17022>    MOVE.l $a(a2),a2
0002C806 <AmiBlitz3.ab2@17023>    ADDQ.l #4,a2
0002C80A <AmiBlitz3.ab2@17024>    BSR.w makename2
0002C80E <AmiBlitz3.ab2@17025>    BSR findvariable2
0002C812 <AmiBlitz3.ab2@17026>    BNE cnferr
0002C816 <AmiBlitz3.ab2@17027> BRA.s 'l6                                                  ;???
0002C81A <AmiBlitz3.ab2@17030>    MOVE.w $4(a2),d3
0002C81C <AmiBlitz3.ab2@17031>    EXT.l d3
0002C820 <AmiBlitz3.ab2@17032> BRA JL_0_AF46
0002C824 <AmiBlitz3.ab2@17035>   MOVE.l $8(A2),D3
0002C82C <AmiBlitz3.ab2@17036>   CMPI.l #$1,$4(A2)
0002C830 <AmiBlitz3.ab2@17037>    BEQ.w JL_0_AF46
0002C836 <AmiBlitz3.ab2@17038>   NOT.w asmtype
0002C838 <AmiBlitz3.ab2@17041>   MOVE.w (A7)+,D2
0002C83C <AmiBlitz3.ab2@17042> BRA.w JL_0_B46E
0002C83E <AmiBlitz3.ab2@17046>   MOVE.w D2,-(A7)
0002C842 <AmiBlitz3.ab2@17047>    BSR.w getparameter
0002C846 <AmiBlitz3.ab2@17048>   CMP.w #"{",D0                                          ;test if var = function{}
0002C84A <AmiBlitz3.ab2@17049>    BEQ.w isfunction
0002C84E <AmiBlitz3.ab2@17050>    BSR.w JL_0_8E3C
0002C852 <AmiBlitz3.ab2@17052>    BSR.w calcvar                                         ;getvaroffset+type
0002C856 <AmiBlitz3.ab2@17053>    BSR.w JL_0_B150
0002C85C <AmiBlitz3.ab2@17054>    MOVE.l a2,rightsidetype
0002C862 <AmiBlitz3.ab2@17065>    TST.b typecheck
0002C866 <AmiBlitz3.ab2@17066>    BEQ JL_0_AF66
0002C870 <AmiBlitz3.ab2@17067>    CMP.l #$da01,lasttoken                                  ;poke
0002C874 <AmiBlitz3.ab2@17068>    BEQ 'l1
0002C87E <AmiBlitz3.ab2@17069>    CMP.l #$da02,lasttoken                                  ;peek
0002C882 <AmiBlitz3.ab2@17070>    BNE 'l2
0002C88A <AmiBlitz3.ab2@17073>    CMP.w #1,parnum                                         ; is not call when & is used in parameter
0002C88E <AmiBlitz3.ab2@17074>    BNE JL_0_AF66
0002C894 <AmiBlitz3.ab2@17075>    MOVE.b d2,peekaddrsize
0002C898 <AmiBlitz3.ab2@17076>    BRA JL_0_AF66
0002C89E <AmiBlitz3.ab2@17079>   CLR.b peekaddrsize
0002C8A2 <AmiBlitz3.ab2@17082>   CMP.w #$1,D2
0002C8A6 <AmiBlitz3.ab2@17083>    BNE.w JL_0_AF7C
0002C8AC <AmiBlitz3.ab2@17084>   MOVE.w regnum,D1
0002C8B0 <AmiBlitz3.ab2@17085>   ORI.w #$4880,D1
0002C8B4 <AmiBlitz3.ab2@17086>    BSR.w writeword
0002C8B6 <AmiBlitz3.ab2@17089>   MOVE.w (A7)+,D3
0002C8BA <AmiBlitz3.ab2@17090>    BEQ.w JL_0_AF9E
0002C8C0 <AmiBlitz3.ab2@17091>    MOVE.l lastinstructionaddr,a0
0002C8C4 <AmiBlitz3.ab2@17092>   CMP.w #$3,D3
0002C8C8 <AmiBlitz3.ab2@17093>    BNE.w JL_0_AF92
0002C8CC <AmiBlitz3.ab2@17094>   CMP.w #$4,D2
0002C8D0 <AmiBlitz3.ab2@17095>    BEQ.w JL_0_AF98
0002C8D2 <AmiBlitz3.ab2@17098>   CMP.w D2,D3
0002C8D6 <AmiBlitz3.ab2@17099>    BLS.w JL_0_AF9E
0002C8D8 <AmiBlitz3.ab2@17102>   EXG.l D2,D3
0002C8DA <AmiBlitz3.ab2@17103>   MOVE.l a0,-(a7)
0002C8E0 <AmiBlitz3.ab2@17104>   TST.b typecheck
0002C8E4 <AmiBlitz3.ab2@17105>   BEQ 'ok
0002C8EA <AmiBlitz3.ab2@17106>   TST.b notypecheck
0002C8EE <AmiBlitz3.ab2@17107>   BNE 'ok
0002C8F4 <AmiBlitz3.ab2@17108>   MOVE.l leftsidetype,a0
0002C8FE <AmiBlitz3.ab2@17109>   CMP.l #0,leftsidetype
0002C902 <AmiBlitz3.ab2@17110>   BEQ 'ok
0002C90A <AmiBlitz3.ab2@17111>   CMP.l #$100,4(a0)
0002C90E <AmiBlitz3.ab2@17112>   BLE 'ok
0002C912 <AmiBlitz3.ab2@17113>   CMP.b #3,d3
0002C916 <AmiBlitz3.ab2@17114>   BEQ 'ok
0002C91A <AmiBlitz3.ab2@17115>   CMP.b #7,d3
0002C91E <AmiBlitz3.ab2@17116>   BEQ 'ok
0002C924 <AmiBlitz3.ab2@17117>   JMP   error_convert_types      ;for all syntax only long and string allowed to assign to a type
0002C926 <AmiBlitz3.ab2@17119>   MOVE.l (a7)+,a0
0002C92A <AmiBlitz3.ab2@17120>   BSR.w writeconvertcode         ;called from var assign
0002C92E <AmiBlitz3.ab2@17123> BRA.w reget
0002C930 <AmiBlitz3.ab2@17126>   MOVEQ.l #$00,D3
0002C936 <AmiBlitz3.ab2@17127>   MOVE.w regnum,D1
0002C93A <AmiBlitz3.ab2@17128>    BEQ.w JL_0_AFC8
0002C93C <AmiBlitz3.ab2@17129>   SUBQ.w #1,D1
0002C93E <AmiBlitz3.ab2@17132>      LSR.l #1,D3
0002C942 <AmiBlitz3.ab2@17133>      BSET #$F,D3
0002C946 <AmiBlitz3.ab2@17134>   DBF D1,JL_0_AFB0b
0002C94C <AmiBlitz3.ab2@17136>    TST.b fpu
0002C950 <AmiBlitz3.ab2@17137>    BEQ 'l1
0002C956 <AmiBlitz3.ab2@17138>    ADDQ.l #2,stacktrack                                    ;intern command
0002C958 <AmiBlitz3.ab2@17139>     MOVE.l a0,-(a7)
0002C95E <AmiBlitz3.ab2@17140>     MOVE.l stacktrack,d1
0002C964 <AmiBlitz3.ab2@17141>     LEA fpustackbase,a0
0002C968 <AmiBlitz3.ab2@17142>     CLR.w 0(a0,d1)
0002C96E <AmiBlitz3.ab2@17143>     CLR.w regmask
0002C970 <AmiBlitz3.ab2@17144>     MOVE.l (a7)+,a0
0002C974 <AmiBlitz3.ab2@17147>   MOVE.w #$48E7,D1
0002C978 <AmiBlitz3.ab2@17148>    BSR.w writeword                                         ;write movem.l d0/d1,-(a7)
0002C97A <AmiBlitz3.ab2@17149>   MOVE.w D3,D1
0002C97E <AmiBlitz3.ab2@17150> BRA.w writeword
0002C980 <AmiBlitz3.ab2@17155>   MOVEQ.l #$00,D3
0002C986 <AmiBlitz3.ab2@17156>   MOVE.w regnum,D1
0002C98A <AmiBlitz3.ab2@17157>    BEQ.w JL_0_AFC8
0002C98C <AmiBlitz3.ab2@17158>   SUBQ.w #1,D1
0002C98E <AmiBlitz3.ab2@17161>     LSR.l #1,D3
0002C992 <AmiBlitz3.ab2@17162>     BSET #$F,D3
0002C996 <AmiBlitz3.ab2@17163>   DBF D1,JL_0_AFB0
0002C99C <AmiBlitz3.ab2@17165>    TST.b fpu
0002C9A0 <AmiBlitz3.ab2@17166>    BEQ 'l1
0002C9A6 <AmiBlitz3.ab2@17167>    ADDQ.l #2,stacktrack                                    ;intern command
0002C9A8 <AmiBlitz3.ab2@17168>     MOVE.l a0,-(a7)
0002C9AE <AmiBlitz3.ab2@17169>     MOVE.l stacktrack,d1
0002C9B4 <AmiBlitz3.ab2@17170>     LEA fpustackbase,a0
0002C9B8 <AmiBlitz3.ab2@17171>     CLR.w 0(a0,d1)
0002C9BC <AmiBlitz3.ab2@17172>    CMP.b #5,(a3)                                           ;result float ?
0002C9C0 <AmiBlitz3.ab2@17173>     BNE 'nofpu
0002C9CA <AmiBlitz3.ab2@17175>     MOVE.w regnum,regnumfunc
0002C9D0 <AmiBlitz3.ab2@17178>   CLR.w regmask
0002C9D2 <AmiBlitz3.ab2@17179>     MOVE.l (a7)+,a0
0002C9D6 <AmiBlitz3.ab2@17182>   MOVE.w #$48E7,D1
0002C9DA <AmiBlitz3.ab2@17183>    BSR.w writeword                                         ;write movem.l d0/d1,-(a7)
0002C9DC <AmiBlitz3.ab2@17184>   MOVE.w D3,D1
0002C9E0 <AmiBlitz3.ab2@17185> BRA.w writeword
0002C9E2 <AmiBlitz3.ab2@17188> RTS
0002C9E4 <AmiBlitz3.ab2@17192>   MOVE.l D1,-(A7)
0002C9E8 <AmiBlitz3.ab2@17193>   MOVE.w #$4EB9,D1
0002C9EC <AmiBlitz3.ab2@17194>    BSR.w writeword
0002C9F0 <AmiBlitz3.ab2@17195>    BSR.w addoff
0002C9F2 <AmiBlitz3.ab2@17196>   MOVE.l (A7)+,D1
0002C9F6 <AmiBlitz3.ab2@17197> BRA.w writelong
0002C9FA <AmiBlitz3.ab2@17201>    BSR.w findproc                                          ;write function call
0002C9FE <AmiBlitz3.ab2@17202>    BEQ 'l1
0002CA04 <AmiBlitz3.ab2@17203>    TST.l unusedfunc
0002CA08 <AmiBlitz3.ab2@17204>    BEQ noprocerr
0002CA0E <AmiBlitz3.ab2@17206>    JSR gotoendsource
0002CA16 <AmiBlitz3.ab2@17209>   MOVE.l funcstruct_returntype(a2),rightsidetype
0002CA1C <AmiBlitz3.ab2@17210>   TST.l typetocast
0002CA20 <AmiBlitz3.ab2@17211>   BEQ 'nocast
0002CA2A <AmiBlitz3.ab2@17212>   MOVE.l typetocast,rightsidetype
0002CA30 <AmiBlitz3.ab2@17213>   CLR.l typetocast
0002CA32 <AmiBlitz3.ab2@17214>   MOVE.l a1,-(a7)
0002CA38 <AmiBlitz3.ab2@17215>   MOVE.l rightsidetype,a1
0002CA3E <AmiBlitz3.ab2@17216>   CMP.l leftsidetype,a1
0002CA42 <AmiBlitz3.ab2@17217>   BEQ 'ok
0002CA48 <AmiBlitz3.ab2@17218>   JMP errorconvertreturntype2
0002CA4A <AmiBlitz3.ab2@17219> 'ok  MOVE.l (a7)+,a1
0002CA4C <AmiBlitz3.ab2@17221>   MOVEQ.l #$00,D1
0002CA50 <AmiBlitz3.ab2@17222>   MOVE.b $5(A2),D1
0002CA56 <AmiBlitz3.ab2@17223>   MOVE.b d1,retmode
0002CA5A <AmiBlitz3.ab2@17224>    BMI.w illprocerr
0002CA60 <AmiBlitz3.ab2@17225>    MOVE.b #1,isfunc(a2)
0002CA62 <AmiBlitz3.ab2@17226>   MOVE.w D1,-(A7)
0002CA64 <AmiBlitz3.ab2@17227>   MOVEQ.l #$00,D1
0002CA68 <AmiBlitz3.ab2@17228>   MOVE.b $4(A2),D1
0002CA6A <AmiBlitz3.ab2@17229>   LSR.w #4,D1
0002CA6E <AmiBlitz3.ab2@17230>    BEQ.w JL_0_B006
0002CA70 <AmiBlitz3.ab2@17231>   LSL.w #2,D1
0002CA76 <AmiBlitz3.ab2@17232>   SUB.w D1,a2offset
0002CA7A <AmiBlitz3.ab2@17235>   CMPI.w #$7,(A7)
0002CA7E <AmiBlitz3.ab2@17236>    BNE.b JL_0_B014
0002CA80 <AmiBlitz3.ab2@17237>   MOVE.l A2,-(A7)
0002CA84 <AmiBlitz3.ab2@17238>    BSR.w makesbase
0002CA86 <AmiBlitz3.ab2@17239>   MOVEA.l (A7)+,A2
0002CA8C <AmiBlitz3.ab2@17242>   MOVE.w sbasegot,-(A7)
0002CA90 <AmiBlitz3.ab2@17243>    BEQ.b JL_0_B020
0002CA94 <AmiBlitz3.ab2@17244>    BSR.w dopusha3
0002CA98 <AmiBlitz3.ab2@17247>   BSR.w JL_0_AFA2func
0002CA9A <AmiBlitz3.ab2@17248>   MOVE.w D3,-(A7)
0002CA9E <AmiBlitz3.ab2@17249>   MOVE.l $E(A2),D1
0002CAA2 <AmiBlitz3.ab2@17250>   TST.b $20(a2)                                            ;increase if morepar
0002CAA6 <AmiBlitz3.ab2@17251>   BNE 'no0par
0002CAA8 <AmiBlitz3.ab2@17252>   MOVE.l a5,a4
0002CAAC <AmiBlitz3.ab2@17255>   CMP.b #$20,(a4)+
0002CAB0 <AmiBlitz3.ab2@17256>   BEQ 'l1
0002CAB6 <AmiBlitz3.ab2@17257>   CMP.b #"}",-1(a4)
0002CABA <AmiBlitz3.ab2@17258>   BNE  'no0par
0002CABC <AmiBlitz3.ab2@17259>   MOVEQ #0,d0
0002CAC0 <AmiBlitz3.ab2@17262>   LEA $16(A2),A1
0002CAC2 <AmiBlitz3.ab2@17265>   MOVE.l d1,-(a7)
0002CAC4 <AmiBlitz3.ab2@17266>   MOVE.b (a1),d2
0002CAC6 <AmiBlitz3.ab2@17267>   MOVE.l d0,d1
0002CACA <AmiBlitz3.ab2@17268>   CMP.w #4,d2
0002CACE <AmiBlitz3.ab2@17269>   BNE 'l1b
0002CAD4 <AmiBlitz3.ab2@17270>   ADD.l #$203c,d1
0002CAD8 <AmiBlitz3.ab2@17271>   BSR writeword
0002CADE <AmiBlitz3.ab2@17272>   MOVE.l #$ffff0000,d1
0002CAE2 <AmiBlitz3.ab2@17273>   BSR writelong
0002CAE6 <AmiBlitz3.ab2@17274> BRA 'l2b
0002CAEC <AmiBlitz3.ab2@17277>    TST.b fpu
0002CAF0 <AmiBlitz3.ab2@17278>    BNE 'l1c
0002CAF4 <AmiBlitz3.ab2@17279>    CMP.w #5,d2
0002CAF8 <AmiBlitz3.ab2@17280>    BNE 'l1c
0002CAFE <AmiBlitz3.ab2@17281>    ADD.l #$203c,d1
0002CB02 <AmiBlitz3.ab2@17282>    BSR writeword
0002CB08 <AmiBlitz3.ab2@17283>    MOVE.l #$800000c1,d1
0002CB0C <AmiBlitz3.ab2@17284>    BSR writelong
0002CB10 <AmiBlitz3.ab2@17285> BRA 'l2b
0002CB16 <AmiBlitz3.ab2@17288>   ADD.l #$70ff,d1
0002CB1A <AmiBlitz3.ab2@17289>   BSR writeword
0002CB1E <AmiBlitz3.ab2@17290>   CMP.w #7,d2
0002CB22 <AmiBlitz3.ab2@17291>   BNE 'l1d
0002CB28 <AmiBlitz3.ab2@17292>   MOVE.l #$2f3c0000,d1      ; write code move.l #0,-(a7)
0002CB2C <AmiBlitz3.ab2@17293>   BSR writelong
0002CB2E <AmiBlitz3.ab2@17294>   MOVEQ #0,d1
0002CB32 <AmiBlitz3.ab2@17295>   BSR writeword
0002CB38 <AmiBlitz3.ab2@17296>   MOVE.l #$2f3c0000,d1      ; write code move.l #0,-(a7)
0002CB3C <AmiBlitz3.ab2@17297>   BSR writelong
0002CB3E <AmiBlitz3.ab2@17298>   MOVEQ #0,d1
0002CB42 <AmiBlitz3.ab2@17299>   BSR writeword
0002CB48 <AmiBlitz3.ab2@17301> 'l1d  MOVE.l #$f23c5000,d1
0002CB4A <AmiBlitz3.ab2@17302>   MOVE.l d0,d2
0002CB4C <AmiBlitz3.ab2@17303>   ASR.l #2,d2
0002CB4E <AmiBlitz3.ab2@17304>   ADD.l d2,d1
0002CB52 <AmiBlitz3.ab2@17305>   BSR writelong
0002CB56 <AmiBlitz3.ab2@17306>   MOVE.w #$ffff,d1
0002CB5A <AmiBlitz3.ab2@17307>   BSR writeword
0002CB5C <AmiBlitz3.ab2@17311>   MOVE.l (a7)+,d1
0002CB5E <AmiBlitz3.ab2@17312>      ADDQ.l #1,a1
0002CB64 <AmiBlitz3.ab2@17313>      ADD.l #$0200,d0
0002CB6A <AmiBlitz3.ab2@17314>      CMP.l #$0e00,d0
0002CB6E <AmiBlitz3.ab2@17315>      BEQ syntaxerr
0002CB70 <AmiBlitz3.ab2@17316>      TST.b (a1)
0002CB74 <AmiBlitz3.ab2@17317>      BNE 'again
0002CB78 <AmiBlitz3.ab2@17318> BRA 'p1
0002CB7C <AmiBlitz3.ab2@17321>   TST.b $4(A2)
0002CB80 <AmiBlitz3.ab2@17322>    BNE.w JL_0_B03E
0002CB84 <AmiBlitz3.ab2@17325>   BSR.w JL_0_AFCA
0002CB88 <AmiBlitz3.ab2@17326>    BSR.w get1bytemain
0002CB8C <AmiBlitz3.ab2@17327> BRA.w JL_0_B06C
0002CB92 <AmiBlitz3.ab2@17331>   MOVE.w regnum,-(A7)
0002CB9C <AmiBlitz3.ab2@17332>   MOVE.w regnum,regnumfunc
0002CB9E <AmiBlitz3.ab2@17335>   MOVE.l D1,-(A7)                                          ;write functioncall with pars
0002CBA6 <AmiBlitz3.ab2@17336>   MOVE.b #1,funccall
0002CBA8 <AmiBlitz3.ab2@17337>   MOVEQ.l #$00,D0
0002CBAC <AmiBlitz3.ab2@17338>   MOVE.b $4(A2),D0
0002CBB6 <AmiBlitz3.ab2@17339>   MOVE.w a2offset,a2offset2
0002CBBE <AmiBlitz3.ab2@17340>   MOVE.b 5(a2),retmode
0002CBC4 <AmiBlitz3.ab2@17341>   MOVE.l a2,currentfunccall
0002CBC8 <AmiBlitz3.ab2@17342>   LEA $16(A2),A2
0002CBCE <AmiBlitz3.ab2@17343>   CLR.w regnum
0002CBD4 <AmiBlitz3.ab2@17344>   CLR.w regmask
0002CBDA <AmiBlitz3.ab2@17345>   MOVE.b isconstantvalue,-(a7)
0002CBE0 <AmiBlitz3.ab2@17346>   MOVE.b funcparloop,-(a7)
0002CBE8 <AmiBlitz3.ab2@17347>   MOVE.b #1,funcparloop
0002CBEE <AmiBlitz3.ab2@17348>   MOVE.l rightsidetype,-(a7)
0002CBF4 <AmiBlitz3.ab2@17349>   MOVE.l leftsidetype,-(a7)                               ;store values To stack so it can work recursive
0002CBFA <AmiBlitz3.ab2@17350>   MOVE.b blitzparloop,-(a7)
0002CC00 <AmiBlitz3.ab2@17351>   CLR.b blitzparloop
0002CC06 <AmiBlitz3.ab2@17352>   JSR fetchpees2
0002CC0C <AmiBlitz3.ab2@17353>   MOVE.b (a7)+,blitzparloop
0002CC12 <AmiBlitz3.ab2@17354>   MOVE.l (a7)+,leftsidetype
0002CC18 <AmiBlitz3.ab2@17355>   MOVE.l (a7)+,rightsidetype
0002CC1E <AmiBlitz3.ab2@17356>   MOVE.b (a7)+,funcparloop
0002CC24 <AmiBlitz3.ab2@17357>   MOVE.b (a7)+,isconstantvalue
0002CC2A <AmiBlitz3.ab2@17358>   JSR chkstak
0002CC2C <AmiBlitz3.ab2@17359>   MOVE.l (A7)+,D1
0002CC30 <AmiBlitz3.ab2@17375>    BTST #0,d1
0002CC34 <AmiBlitz3.ab2@17376>    BNE intern1
0002CC38 <AmiBlitz3.ab2@17377>    BSR.w JL_0_AFCA
0002CC3E <AmiBlitz3.ab2@17399>   MOVE.w (A7)+,regnum
0002CC42 <AmiBlitz3.ab2@17402>   CMP.w #"}",D0
0002CC46 <AmiBlitz3.ab2@17403>    BNE.w errorbracketmiss2
0002CC48 <AmiBlitz3.ab2@17404>    MOVEQ #0,d1                                            ; end of function call pars
0002CC4E <AmiBlitz3.ab2@17405>   MOVE.w regnum,D1
0002CC52 <AmiBlitz3.ab2@17406>    BEQ.w JL_0_B08A
0002CC58 <AmiBlitz3.ab2@17407>    TST.b fpu
0002CC5C <AmiBlitz3.ab2@17408>    BEQ 'old
0002CC64 <AmiBlitz3.ab2@17409>    CMP.b #5,retmode
0002CC68 <AmiBlitz3.ab2@17410>    BNE 'old
0002CC6A <AmiBlitz3.ab2@17411>    ASL.l #7,d1
0002CC70 <AmiBlitz3.ab2@17412>    OR.l #$f2000000,d1
0002CC74 <AmiBlitz3.ab2@17413>    BSR writelong
0002CC78 <AmiBlitz3.ab2@17414> BRA JL_0_B08A
0002CC7A <AmiBlitz3.ab2@17416>  'old  LSL.w #8,D1
0002CC7C <AmiBlitz3.ab2@17417>   LSL.w #1,D1
0002CC80 <AmiBlitz3.ab2@17418>   ORI.w #$2000,D1
0002CC84 <AmiBlitz3.ab2@17419>    BSR.w writeword
0002CC86 <AmiBlitz3.ab2@17422>    MOVE.w (A7)+,D3
0002CC8A <AmiBlitz3.ab2@17423>    BEQ.w JL_0_B0A8
0002CC90 <AmiBlitz3.ab2@17424>    TST.b fpu
0002CC94 <AmiBlitz3.ab2@17425>    BEQ 'old
0002CC96 <AmiBlitz3.ab2@17426>    MOVE.l d0,-(a7)
0002CC9A <AmiBlitz3.ab2@17427>    MOVE.w #8,d0
0002CC9C <AmiBlitz3.ab2@17428>    MOVE.l a0,-(a7)
0002CCA2 <AmiBlitz3.ab2@17429>    MOVE.l stacktrack,d1
0002CCA8 <AmiBlitz3.ab2@17430>    LEA fpustackbase,a0
0002CCB0 <AmiBlitz3.ab2@17431>    MOVE.w 0(a0,d1),regmask
0002CCB2 <AmiBlitz3.ab2@17432>    MOVE.l (a7)+,a0
0002CCB6 <AmiBlitz3.ab2@17435>   BEQ 'ready
0002CCBC <AmiBlitz3.ab2@17436>    BTST d0,regmask
0002CCC0 <AmiBlitz3.ab2@17437>    BEQ 'noa7
0002CCC2 <AmiBlitz3.ab2@17438>    MOVEQ #0,d1
0002CCC4 <AmiBlitz3.ab2@17439>    MOVE.w d0,d1
0002CCC6 <AmiBlitz3.ab2@17440>    SUBQ.w #1,d1
0002CCC8 <AmiBlitz3.ab2@17441>    ASL #7,d1
0002CCCE <AmiBlitz3.ab2@17443>    OR.l #$f21f5400,d1                                      ;fmove.d (a7)+
0002CCD2 <AmiBlitz3.ab2@17444>    BSR writelong
0002CCD8 <AmiBlitz3.ab2@17445>    SUBQ.l #2,stacktrack
0002CCDA <AmiBlitz3.ab2@17448>    SUBQ.w #1,d0
0002CCDE <AmiBlitz3.ab2@17449>    BNE 'loop
0002CCE4 <AmiBlitz3.ab2@17452>   SUBQ.l #2,stacktrack                                     ;integer sub
0002CCE6 <AmiBlitz3.ab2@17453>   MOVE.l (a7)+,d0
0002CCEA <AmiBlitz3.ab2@17456>   MOVE.w #$4CDF,D1
0002CCEE <AmiBlitz3.ab2@17457>    BSR.w writeword
0002CCF0 <AmiBlitz3.ab2@17458>   MOVEQ.l #$00,D1
0002CCF2 <AmiBlitz3.ab2@17459>   MOVEQ.l #$0F,D4
0002CCF4 <AmiBlitz3.ab2@17462>     LSL.w #1,D3
0002CCF6 <AmiBlitz3.ab2@17463>     ROXR.w #1,D1
0002CCFA <AmiBlitz3.ab2@17464>   DBF D4,JL_0_B09C                                         ;movem.l (a7)+,dx
0002CCFE <AmiBlitz3.ab2@17466>     BSR.w writeword
0002CD04 <AmiBlitz3.ab2@17467>    CLR.w regnumfunc
0002CD06 <AmiBlitz3.ab2@17470>   MOVE.w (A7)+,D1
0002CD0A <AmiBlitz3.ab2@17471>    BEQ.b JL_0_B0D2
0002CD0E <AmiBlitz3.ab2@17472>   CMPI.w #$7,(A7)
0002CD12 <AmiBlitz3.ab2@17473>    BEQ.b JL_0_B0C4
0002CD18 <AmiBlitz3.ab2@17474>   LEA geta3,A0
0002CD1E <AmiBlitz3.ab2@17475>   LEA numtoa0,A1
0002CD22 <AmiBlitz3.ab2@17476>    BSR.w pokecode
0002CD26 <AmiBlitz3.ab2@17477> BRA.b JL_0_B0CE
0002CD2C <AmiBlitz3.ab2@17480>   MOVE.w deca3,D1
0002CD30 <AmiBlitz3.ab2@17481>    BSR.w writeword
0002CD34 <AmiBlitz3.ab2@17484>   BSR.w dopulla3                                           ;fix up string base
0002CD36 <AmiBlitz3.ab2@17487>   MOVE.w (A7)+,D2                                          ;what it returns!
0002CD3A <AmiBlitz3.ab2@17488>   CMP.w #$7,D2
0002CD3E <AmiBlitz3.ab2@17489>    BNE.w JL_0_B0EC
0002CD44 <AmiBlitz3.ab2@17490>   MOVE.w putstlen,D1
0002CD4A <AmiBlitz3.ab2@17491>   OR.w regnum,D1
0002CD4E <AmiBlitz3.ab2@17492>    BSR.w writeword
0002CD52 <AmiBlitz3.ab2@17495>   BSR.w get1bytemain
0002CD56 <AmiBlitz3.ab2@17496> BRA.w JL_0_AF66
0002CD58 <AmiBlitz3.ab2@17500> deca3:   Dc.b $53,$4B                                      ;SUBQ.W  #1,A3
0002CD60 <AmiBlitz3.ab2@17505>   CMP.b #2,optistring
0002CD64 <AmiBlitz3.ab2@17506>   BEQ fs2
0002CD68 <AmiBlitz3.ab2@17507>   BSR.w makesbase                                          ;writestringvariable
0002CD6C <AmiBlitz3.ab2@17508>   BTST #$F,D2
0002CD70 <AmiBlitz3.ab2@17509>    BNE.w JL_0_B112
0002CD76 <AmiBlitz3.ab2@17510>   MOVE.w D3,leaa5d3a2+2
0002CD7C <AmiBlitz3.ab2@17511>   MOVE.l leaa5d3a2,D1
0002CD80 <AmiBlitz3.ab2@17512>    BSR.w pokela5s
0002CD86 <AmiBlitz3.ab2@17515>   MOVE.w regnum,D1
0002CD88 <AmiBlitz3.ab2@17516>   LSL.w #8,D1
0002CD8A <AmiBlitz3.ab2@17517>   LSL.w #1,D1
0002CD8E <AmiBlitz3.ab2@17518>   ORI.w #$7000,D1
0002CD94 <AmiBlitz3.ab2@17519>   LEA stvarget2,A0
0002CD96 <AmiBlitz3.ab2@17520>   MOVE.w D1,(A0)
0002CD9C <AmiBlitz3.ab2@17521>   MOVE.w regnum,D1
0002CDA2 <AmiBlitz3.ab2@17522>   ANDI.w #$FFF8,$2(A0)
0002CDA6 <AmiBlitz3.ab2@17523>   OR.w D1,$2(A0)
0002CDAC <AmiBlitz3.ab2@17524>   LEA stvarget2f,A1
0002CDB0 <AmiBlitz3.ab2@17525>    BSR.w pokecode
0002CDB4 <AmiBlitz3.ab2@17526>   MOVE.w #$C600,D1
0002CDB8 <AmiBlitz3.ab2@17527>    BSR.w Atokejsr
0002CDBA <AmiBlitz3.ab2@17528>   MOVEQ.l #$07,D2
0002CDBE <AmiBlitz3.ab2@17529> BRA.w reget
0002CDC4 <AmiBlitz3.ab2@17532>      TST.w stackpar
0002CDC8 <AmiBlitz3.ab2@17533>      BMI 'l10
0002CDCE <AmiBlitz3.ab2@17534>      MOVE.l #$3f3c0007,d1
0002CDD4 <AmiBlitz3.ab2@17535>      ADDQ.w #2,a2offset
0002CDD8 <AmiBlitz3.ab2@17536>      BSR writelong
0002CDDC <AmiBlitz3.ab2@17539>   MOVE.w #$4878,d1
0002CDE2 <AmiBlitz3.ab2@17540>      CLR.w stackpar
0002CDE6 <AmiBlitz3.ab2@17541>      BSR writeword
0002CDEA <AmiBlitz3.ab2@17542>      MOVE.w #$0,d1
0002CDEE <AmiBlitz3.ab2@17543>      BSR writeword
0002CDF2 <AmiBlitz3.ab2@17544>      MOVE.w #$246d,d1
0002CDF6 <AmiBlitz3.ab2@17545>      BSR writeword
0002CDF8 <AmiBlitz3.ab2@17546>      MOVE.w d3,d1
0002CDFC <AmiBlitz3.ab2@17547>      BSR writeword
0002CE02 <AmiBlitz3.ab2@17548>      MOVE.l #$4a926704,d1
0002CE06 <AmiBlitz3.ab2@17549>      BSR writelong
0002CE0C <AmiBlitz3.ab2@17550>      MOVE.l #$2eaafffc,d1
0002CE10 <AmiBlitz3.ab2@17551>      BSR writelong
0002CE14 <AmiBlitz3.ab2@17552>      MOVE.w #$2f0a,d1
0002CE1A <AmiBlitz3.ab2@17553>      ADDQ.w #8,a2offset
0002CE1E <AmiBlitz3.ab2@17554>      BSR writeword
0002CE22 <AmiBlitz3.ab2@17555> BRA.w reget
0002CE26 <AmiBlitz3.ab2@17558>   CMP.b #$7,D2                                             ;load basic var
0002CE2A <AmiBlitz3.ab2@17559>    BEQ.w JL_0_B0F6
0002CE30 <AmiBlitz3.ab2@17561>    TST.b iee
0002CE34 <AmiBlitz3.ab2@17562>    BEQ 'noiee
0002CE38 <AmiBlitz3.ab2@17563>    CMP.b #5,d2
0002CE3C <AmiBlitz3.ab2@17564>    BNE 'noiee
0002CE3E <AmiBlitz3.ab2@17565>    MOVE.l d0,-(a7)                                         ;fpu load var
0002CE42 <AmiBlitz3.ab2@17566>    BTST #15,d2
0002CE46 <AmiBlitz3.ab2@17567>    BEQ 'var
0002CE4C <AmiBlitz3.ab2@17568>    CMP.l #$7fff,d3
0002CE50 <AmiBlitz3.ab2@17569>    BGT 'longoffset
0002CE56 <AmiBlitz3.ab2@17570>    MOVE.l #$f22a4400,d1                                    ;newtype     >32kb
0002CE58 <AmiBlitz3.ab2@17571>    TST.w d3                                                ;offset =0
0002CE5C <AmiBlitz3.ab2@17572>    BNE 'offset
0002CE62 <AmiBlitz3.ab2@17575>   MOVE.l #$f2124400,d1
0002CE64 <AmiBlitz3.ab2@17576>    MOVEQ #0,d3
0002CE68 <AmiBlitz3.ab2@17577> BRA 'glob
0002CE6E <AmiBlitz3.ab2@17580>   SUBQ.l #4,destpointer
0002CE72 <AmiBlitz3.ab2@17581> BRA 'glob
0002CE78 <AmiBlitz3.ab2@17584>   TST.b fast
0002CE7C <AmiBlitz3.ab2@17585>    BEQ 'nofastload
0002CE82 <AmiBlitz3.ab2@17586>    TST.w regnum
0002CE86 <AmiBlitz3.ab2@17587>    BNE 'nofastload
0002CE8C <AmiBlitz3.ab2@17588>    CMP.l fp0addr,a4
0002CE90 <AmiBlitz3.ab2@17589>    BNE 'nofastload
0002CE96 <AmiBlitz3.ab2@17590>    MOVE.l fp0iff,d1
0002CE9C <AmiBlitz3.ab2@17591>    CMP.l firstiff,d1
0002CEA0 <AmiBlitz3.ab2@17592>    BNE 'nofastload
0002CEA6 <AmiBlitz3.ab2@17593>    MOVE.w varmode,d1
0002CEAC <AmiBlitz3.ab2@17594>    CMP.w fp0mode,d1
0002CEB0 <AmiBlitz3.ab2@17595>    BNE 'nofastload
0002CEB6 <AmiBlitz3.ab2@17596>    CMP.w fp0var,d3
0002CEBA <AmiBlitz3.ab2@17597>    BNE 'nofastload
0002CEBE <AmiBlitz3.ab2@17598>    BCLR #16,d2
0002CEC0 <AmiBlitz3.ab2@17599>    MOVE.l (a7)+,d0
0002CEC2 <AmiBlitz3.ab2@17600> RTS
0002CEC4 <AmiBlitz3.ab2@17603>    MOVEQ #0,d0
0002CECA <AmiBlitz3.ab2@17604>    MOVE.w regnum,d0
0002CED0 <AmiBlitz3.ab2@17605>    CMP.l maxregs,d0
0002CED4 <AmiBlitz3.ab2@17606>    BLE 'ok
0002CEDA <AmiBlitz3.ab2@17607>    LEA cmplxerr,a0
0002CEDC <AmiBlitz3.ab2@17608>   MOVE.l a0,-(a7)
0002CEE2 <AmiBlitz3.ab2@17609> JMP handle_compileerror
0002CEE8 <AmiBlitz3.ab2@17612>    LEA regtable,a4
0002CEEA <AmiBlitz3.ab2@17613>    TST.l (a4)
0002CEEE <AmiBlitz3.ab2@17614>    BEQ 'noreg
0002CEF2 <AmiBlitz3.ab2@17615>    CMP.w 0+4(a4),d3
0002CEF6 <AmiBlitz3.ab2@17616>    BNE 'doreg1
0002CEFC <AmiBlitz3.ab2@17617>    MOVE.l #$f2001c00,d1
0002CF02 <AmiBlitz3.ab2@17618>    MOVE.w regnum,d0
0002CF04 <AmiBlitz3.ab2@17619>    ASL.w #7,d0
0002CF06 <AmiBlitz3.ab2@17620>    OR.w d0,d1
0002CF0A <AmiBlitz3.ab2@17621>    BSR writelong
0002CF0C <AmiBlitz3.ab2@17622>    MOVE.l (a7)+,d0
0002CF0E <AmiBlitz3.ab2@17623> RTS
0002CF12 <AmiBlitz3.ab2@17626>   CMP.w 8+4(a4),d3
0002CF16 <AmiBlitz3.ab2@17627>    BNE 'doreg2
0002CF1C <AmiBlitz3.ab2@17628>    MOVE.l #$f2001800,d1
0002CF22 <AmiBlitz3.ab2@17629>    MOVE.w regnum,d0
0002CF24 <AmiBlitz3.ab2@17630>    ASL.w #7,d0
0002CF26 <AmiBlitz3.ab2@17631>    OR.w d0,d1
0002CF2A <AmiBlitz3.ab2@17632>    BSR writelong
0002CF2C <AmiBlitz3.ab2@17633>    MOVE.l (a7)+,d0
0002CF2E <AmiBlitz3.ab2@17634> RTS
0002CF32 <AmiBlitz3.ab2@17637>   CMP.w 16+4(a4),d3
0002CF36 <AmiBlitz3.ab2@17638>    BNE 'doreg3
0002CF3C <AmiBlitz3.ab2@17639>    MOVE.l #$f2001400,d1
0002CF42 <AmiBlitz3.ab2@17640>    MOVE.w regnum,d0
0002CF44 <AmiBlitz3.ab2@17641>    ASL.w #7,d0
0002CF46 <AmiBlitz3.ab2@17642>    OR.w d0,d1
0002CF4A <AmiBlitz3.ab2@17643>    BSR  writelong
0002CF4C <AmiBlitz3.ab2@17644>    MOVE.l (a7)+,d0
0002CF4E <AmiBlitz3.ab2@17645> RTS
0002CF52 <AmiBlitz3.ab2@17648>   CMP.w 24+4(a4),d3
0002CF56 <AmiBlitz3.ab2@17649>    BNE 'doreg4
0002CF5C <AmiBlitz3.ab2@17650>    MOVE.l #$f2001000,d1
0002CF62 <AmiBlitz3.ab2@17651>    MOVE.w regnum,d0
0002CF64 <AmiBlitz3.ab2@17652>    ASL.w #7,d0
0002CF66 <AmiBlitz3.ab2@17653>    OR.w d0,d1
0002CF6A <AmiBlitz3.ab2@17654>    BSR writelong
0002CF6C <AmiBlitz3.ab2@17655>    MOVE.l (a7)+,d0
0002CF6E <AmiBlitz3.ab2@17656> RTS
0002CF72 <AmiBlitz3.ab2@17659>    CMP.w 32+4(a4),d3
0002CF76 <AmiBlitz3.ab2@17660>    BNE 'noreg
0002CF7C <AmiBlitz3.ab2@17661>    MOVE.l #$f2000c00,d1
0002CF82 <AmiBlitz3.ab2@17662>    MOVE.w regnum,d0
0002CF84 <AmiBlitz3.ab2@17663>    ASL.w #7,d0
0002CF86 <AmiBlitz3.ab2@17664>    OR.w d0,d1
0002CF8A <AmiBlitz3.ab2@17665>    BSR writelong
0002CF8C <AmiBlitz3.ab2@17666>    MOVE.l (a7)+,d0
0002CF8E <AmiBlitz3.ab2@17667> RTS
0002CF94 <AmiBlitz3.ab2@17670>    MOVE.l #$f22d4400,d1                                    ;var
0002CF9A <AmiBlitz3.ab2@17671>    TST.w varmode
0002CF9E <AmiBlitz3.ab2@17672>   BEQ 'glob
0002CFA2 <AmiBlitz3.ab2@17673>   BCLR #16,d1                                              ;local
0002CFA4 <AmiBlitz3.ab2@17676>    MOVEQ #0,d0
0002CFAA <AmiBlitz3.ab2@17677>    MOVE.w regnum,d0
0002CFAE <AmiBlitz3.ab2@17678>    CMP.w #7,d0
0002CFB2 <AmiBlitz3.ab2@17679>    BLE 'ok2
0002CFB8 <AmiBlitz3.ab2@17680>    LEA cmplxerr,a0
0002CFBA <AmiBlitz3.ab2@17681>   MOVE.l a0,-(a7)
0002CFC0 <AmiBlitz3.ab2@17682> JMP handle_compileerror
0002CFC2 <AmiBlitz3.ab2@17685>      ASL.w #7,d0
0002CFC4 <AmiBlitz3.ab2@17686>    OR.l d0,d1
0002CFCC <AmiBlitz3.ab2@17687>    CMP.l #doublecheck,8(a2)
0002CFD0 <AmiBlitz3.ab2@17688>    BNE 'dbl
0002CFD6 <AmiBlitz3.ab2@17689>    OR.l #$00001000,d1
0002CFDA <AmiBlitz3.ab2@17692>   BSR writelong
0002CFDC <AmiBlitz3.ab2@17693>    MOVE.l (a7)+,d0
0002CFE0 <AmiBlitz3.ab2@17694>    AND.w #$ff,d2
0002CFE2 <AmiBlitz3.ab2@17695>    MOVE.w d3,d1
0002CFE6 <AmiBlitz3.ab2@17696>    BEQ 'nooffs
0002CFEA <AmiBlitz3.ab2@17697> BRA writeword
0002CFEC <AmiBlitz3.ab2@17702> RTS
0002CFF2 <AmiBlitz3.ab2@17705>   MOVE.w regnum,D1
0002CFF8 <AmiBlitz3.ab2@17706>   MOVE.w d1,load_var_reg
0002CFFA <AmiBlitz3.ab2@17707>   LSL.w #8,D1
0002D004 <AmiBlitz3.ab2@17708>   MOVE.l destpointer,load_var_addr
0002D00A <AmiBlitz3.ab2@17709>   MOVE.w d2,load_var_size
0002D00C <AmiBlitz3.ab2@17710>   LSL.w #1,D1
0002D010 <AmiBlitz3.ab2@17711>   BTST #$E,D2
0002D014 <AmiBlitz3.ab2@17712>    BNE.w JL_0_B17A
0002D016 <AmiBlitz3.ab2@17713>   TST.b D2
0002D01A <AmiBlitz3.ab2@17714>    BNE.w JL_0_B17E
0002D01C <AmiBlitz3.ab2@17715>   MOVEQ.l #$03,D2
0002D020 <AmiBlitz3.ab2@17716>   ORI.w #$200A,D1
0002D024 <AmiBlitz3.ab2@17717> BRA.w writeword
0002D028 <AmiBlitz3.ab2@17720>   MOVE.b #$3,D2
0002D02C <AmiBlitz3.ab2@17723>   BTST #$F,D2
0002D030 <AmiBlitz3.ab2@17724>    BEQ.w JL_0_B19A                                         ;loadarray
0002D036 <AmiBlitz3.ab2@17725>    TST.b fast                                              ;lea->move xx(a2)
0002D03A <AmiBlitz3.ab2@17726>    BEQ 'la10
0002D040 <AmiBlitz3.ab2@17731>    CLR.l load_var_addr
0002D044 <AmiBlitz3.ab2@17732> BRA 'la10
0002D04C <AmiBlitz3.ab2@17734>    CMP.w #$2012,movea2dn                                  ;??Looks like dead code??
0002D050 <AmiBlitz3.ab2@17735>    BNE 'la10
0002D056 <AmiBlitz3.ab2@17736>    TST.b optiarray
0002D05A <AmiBlitz3.ab2@17737>    BNE 'la10
0002D060 <AmiBlitz3.ab2@17738>    MOVE.l destpointer,a4
0002D066 <AmiBlitz3.ab2@17739>    SUB.l loada,a4
0002D06A <AmiBlitz3.ab2@17740>    CMP.w #4,a4
0002D06E <AmiBlitz3.ab2@17741>    BEQ 'la100
0002D072 <AmiBlitz3.ab2@17742>    CMP.w #2,a4
0002D076 <AmiBlitz3.ab2@17743>    BNE 'la10
0002D07C <AmiBlitz3.ab2@17744>    MOVE.l destpointer,a4
0002D080 <AmiBlitz3.ab2@17745>    CMP.b #3,d2
0002D084 <AmiBlitz3.ab2@17746>    BCS 'la110
0002D08A <AmiBlitz3.ab2@17747>    MOVE.w #$202a,-2(a4)
0002D08E <AmiBlitz3.ab2@17748>    OR.w d1,-2(a4)
0002D094 <AmiBlitz3.ab2@17749>    MOVE.w arrayoffset,d1
0002D098 <AmiBlitz3.ab2@17750>    BSR writeword
0002D09C <AmiBlitz3.ab2@17751> BRA JL_0_B194
0002D0A0 <AmiBlitz3.ab2@17754>    CMP.b #2,d2
0002D0A4 <AmiBlitz3.ab2@17755>    BNE 'la120
0002D0AA <AmiBlitz3.ab2@17756>     MOVE.w #$302a,-2(a4)
0002D0AE <AmiBlitz3.ab2@17757>    OR.w d1,-2(a4)
0002D0B4 <AmiBlitz3.ab2@17759>    MOVE.w arrayoffset,d1
0002D0B8 <AmiBlitz3.ab2@17760>    BSR writeword
0002D0BC <AmiBlitz3.ab2@17761> BRA JL_0_B194
0002D0C0 <AmiBlitz3.ab2@17764>   CMP.b #1,d2
0002D0C4 <AmiBlitz3.ab2@17765>    BNE.s 'la10
0002D0CA <AmiBlitz3.ab2@17766>     MOVE.w #$102a,-2(a4)
0002D0CE <AmiBlitz3.ab2@17767>    OR.w d1,-2(a4)
0002D0D4 <AmiBlitz3.ab2@17768>    MOVE.w arrayoffset,d1
0002D0D8 <AmiBlitz3.ab2@17769>    BSR writeword
0002D0DC <AmiBlitz3.ab2@17770> BRA JL_0_B194
0002D0E2 <AmiBlitz3.ab2@17773>   MOVE.l destpointer,a4
0002D0E8 <AmiBlitz3.ab2@17774>    CMP.w #$45ea,-2(a4)
0002D0EC <AmiBlitz3.ab2@17775>    BNE 'la10
0002D0F0 <AmiBlitz3.ab2@17776>    CMP.b #3,d2
0002D0F4 <AmiBlitz3.ab2@17777>    BCS 'la11
0002D0FA <AmiBlitz3.ab2@17778>    MOVE.w #$202a,-4(a4)
0002D0FE <AmiBlitz3.ab2@17779>    OR.w d1,-4(a4)
0002D102 <AmiBlitz3.ab2@17780> BRA JL_0_B194
0002D106 <AmiBlitz3.ab2@17783>    CMP.b #2,d2
0002D10A <AmiBlitz3.ab2@17784>    BNE 'la12
0002D110 <AmiBlitz3.ab2@17785>     MOVE.w #$302a,-4(a4)
0002D114 <AmiBlitz3.ab2@17786>    OR.w d1,-4(a4)
0002D118 <AmiBlitz3.ab2@17787> BRA JL_0_B194
0002D11C <AmiBlitz3.ab2@17790>   CMP.b #1,d2
0002D120 <AmiBlitz3.ab2@17791>    BNE.s 'la10
0002D126 <AmiBlitz3.ab2@17792>     MOVE.w #$102a,-4(a4)
0002D12A <AmiBlitz3.ab2@17793>    OR.w d1,-4(a4)
0002D12E <AmiBlitz3.ab2@17794> BRA JL_0_B194
0002D134 <AmiBlitz3.ab2@17797>    OR.w movea2dn,D1
0002D138 <AmiBlitz3.ab2@17798>    BSR.w JL_0_B1B2
0002D13C <AmiBlitz3.ab2@17799>    BSR.w writeword
0002D140 <AmiBlitz3.ab2@17802>   ANDI.w #$FF,D2
0002D142 <AmiBlitz3.ab2@17803> RTS
0002D148 <AmiBlitz3.ab2@17807>    MOVE.l destpointer,a4
0002D150 <AmiBlitz3.ab2@17808>    MOVE.l #$f22a4400,-4(a4)
0002D156 <AmiBlitz3.ab2@17809>    MOVE.w arrayoffset,d1
0002D15A <AmiBlitz3.ab2@17810> BRA writeword
0002D160 <AmiBlitz3.ab2@17814>   OR.w moved3a5dn,D1                                        ;write move.l 0(a5),reg
0002D164 <AmiBlitz3.ab2@17815>    BSR.w JL_0_B1B2
0002D168 <AmiBlitz3.ab2@17816>    BSR.w pokewda5s
0002D16A <AmiBlitz3.ab2@17817>   MOVE.w D3,D1
0002D16E <AmiBlitz3.ab2@17818>    BSR.w writeword
0002D172 <AmiBlitz3.ab2@17819> BRA.w JL_0_B194
0002D176 <AmiBlitz3.ab2@17822>   BTST #$E,D2
0002D17A <AmiBlitz3.ab2@17823>    BNE.w JL_0_B1CA
0002D17E <AmiBlitz3.ab2@17824>   CMP.b #$1,D2
0002D182 <AmiBlitz3.ab2@17825>    BEQ.w JL_0_B1CC
0002D186 <AmiBlitz3.ab2@17826>   CMP.b #$2,D2
0002D18A <AmiBlitz3.ab2@17827>    BEQ.w JL_0_B1D2
0002D18C <AmiBlitz3.ab2@17830> RTS
0002D190 <AmiBlitz3.ab2@17833>   EORI.w #$3000,D1
0002D192 <AmiBlitz3.ab2@17834> RTS
0002D196 <AmiBlitz3.ab2@17837>   ORI.w #$1000,D1
0002D198 <AmiBlitz3.ab2@17838> RTS
0002D1A0 <AmiBlitz3.ab2@17842>   MOVE.w #$FFFF,dfetch
0002D1A4 <AmiBlitz3.ab2@17843>   BSR.w get1bytemain
0002D1A8 <AmiBlitz3.ab2@17844>   CMP.w #$2D,D0
0002D1AC <AmiBlitz3.ab2@17845>    BNE.w JL_0_B206
0002D1B0 <AmiBlitz3.ab2@17846>   BSR.w get1bytemain
0002D1B4 <AmiBlitz3.ab2@17847>   BSR.w JL_0_B206
0002D1B8 <AmiBlitz3.ab2@17848>   CMP.w #$5,D2
0002D1BC <AmiBlitz3.ab2@17849>    BCC.w JL_0_B200
0002D1BE <AmiBlitz3.ab2@17850>   NEG.l D0
0002D1C0 <AmiBlitz3.ab2@17851> RTS
0002D1C6 <AmiBlitz3.ab2@17854>   TST.b fpu
0002D1CA <AmiBlitz3.ab2@17855>   BEQ 'noneg
0002D1CE <AmiBlitz3.ab2@17856>   fneg.x fp0
0002D1D0 <AmiBlitz3.ab2@17857> RTS
0002D1D4 <AmiBlitz3.ab2@17860>   BCHG #$7,D0
0002D1D6 <AmiBlitz3.ab2@17861> RTS
0002D1DA <AmiBlitz3.ab2@17864>   CMP.w #$24,D0
0002D1DE <AmiBlitz3.ab2@17865>    BEQ.w get_hexconstant
0002D1E2 <AmiBlitz3.ab2@17866>   CMP.w #$25,D0
0002D1E6 <AmiBlitz3.ab2@17867>    BEQ.w JL_0_A8C0
0002D1EA <AmiBlitz3.ab2@17868>   CMP.w #$2E,D0
0002D1EE <AmiBlitz3.ab2@17869>    BNE.w JL_0_B224
0002D1F0 <AmiBlitz3.ab2@17872>   MOVEQ.l #$00,D3
0002D1F4 <AmiBlitz3.ab2@17873> BRA.w JL_0_B272
0002D1F6 <AmiBlitz3.ab2@17876>   MOVEQ.l #$00,D3                                          ;number
0002D1FA <AmiBlitz3.ab2@17877>    BSR.w atoi
0002D1FE <AmiBlitz3.ab2@17878>   CMP.w #$2E,D0
0002D202 <AmiBlitz3.ab2@17879>    BEQ.w JL_0_B268
0002D206 <AmiBlitz3.ab2@17880>   ORI.w #$20,D0
0002D20A <AmiBlitz3.ab2@17881>   CMP.w #$65,D0
0002D20E <AmiBlitz3.ab2@17882>    BNE.w JL_0_B46E
0002D214 <AmiBlitz3.ab2@17883>   CMP.l #$800000,D3
0002D218 <AmiBlitz3.ab2@17884>    BCC.w overerr
0002D21A <AmiBlitz3.ab2@17885>   MOVEQ.l #-$01,D6
0002D21E <AmiBlitz3.ab2@17886>   fmove.l d3,fp0
0002D220 <AmiBlitz3.ab2@17887>   MOVE.l D3,D0
0002D226 <AmiBlitz3.ab2@17888>   MOVEA.l _mathffpbase,A6
0002D22A <AmiBlitz3.ab2@17889>    JSR -$24(A6)
0002D22C <AmiBlitz3.ab2@17890>   MOVE.l D0,D3
0002D230 <AmiBlitz3.ab2@17891>    BSR.w JL_0_B2E6
0002D234 <AmiBlitz3.ab2@17892>    BSR.w reget
0002D238 <AmiBlitz3.ab2@17893>    BSR.w JL_0_B480
0002D23C <AmiBlitz3.ab2@17894> BRA.w JL_0_B3DC
0002D240 <AmiBlitz3.ab2@17897>   CMP.b #4,d2
0002D244 <AmiBlitz3.ab2@17898>   BEQ 'l4
0002D248 <AmiBlitz3.ab2@17899>   MOVE.b #5,d2                                             ;nprint 2/0.5 bugfix
0002D24E <AmiBlitz3.ab2@17902>    TST.b fpu
0002D252 <AmiBlitz3.ab2@17903>    BNE 'l1
0002D258 <AmiBlitz3.ab2@17904>    CMP.l #$800000,D3
0002D25C <AmiBlitz3.ab2@17905>    BCC.w overerr
0002D260 <AmiBlitz3.ab2@17906> BRA JL_0_B272
0002D266 <AmiBlitz3.ab2@17909>   CMP.l #$7fffffff,d3
0002D26A <AmiBlitz3.ab2@17910>     BCC.w overerr
0002D26C <AmiBlitz3.ab2@17913>   MOVEQ.l #-$01,D6
0002D26E <AmiBlitz3.ab2@17914>   MOVE.l D3,D0
0002D272 <AmiBlitz3.ab2@17915>   fmove.l d3,fp0
0002D278 <AmiBlitz3.ab2@17916>   MOVEA.l _mathffpbase,A6
0002D27C <AmiBlitz3.ab2@17917>    JSR -$24(A6)                                            ;integer to ffp
0002D27E <AmiBlitz3.ab2@17918>   MOVE.l D0,-(A7)
0002D282 <AmiBlitz3.ab2@17919>    BSR.w get1bytemain
0002D286 <AmiBlitz3.ab2@17920>    BSR.w tstnum
0002D28A <AmiBlitz3.ab2@17921>    BNE.w syntaxerr
0002D28C <AmiBlitz3.ab2@17922>   MOVEQ.l #$00,D3
0002D290 <AmiBlitz3.ab2@17923>    BSR.w atoi
0002D292 <AmiBlitz3.ab2@17924>   TST.l D3
0002D296 <AmiBlitz3.ab2@17925>    BEQ.w JL_0_B2E0
0002D29C <AmiBlitz3.ab2@17926>   TST.b fpu
0002D2A0 <AmiBlitz3.ab2@17927>   BNE 'l1
0002D2A6 <AmiBlitz3.ab2@17928>   CMP.l #$800000,D3
0002D2AA <AmiBlitz3.ab2@17929>    BCC.w overerr
0002D2AE <AmiBlitz3.ab2@17930> BRA 'l2
0002D2B4 <AmiBlitz3.ab2@17933>   CMP.l #$7fffffff,d3
0002D2B8 <AmiBlitz3.ab2@17934>   BCC overerr
0002D2BC <AmiBlitz3.ab2@17937>   fmove.l d5,fp1
0002D2BE <AmiBlitz3.ab2@17938>   MOVE.l D5,D0
0002D2C2 <AmiBlitz3.ab2@17939>    JSR -$24(A6)
0002D2C4 <AmiBlitz3.ab2@17940>   MOVE.l D0,D5
0002D2C8 <AmiBlitz3.ab2@17941>   fmove.l d3,fp2
0002D2CA <AmiBlitz3.ab2@17942>   MOVE.l D3,D0
0002D2CE <AmiBlitz3.ab2@17943>    JSR -$24(A6)
0002D2D2 <AmiBlitz3.ab2@17944>   fdiv.x fp1,fp2
0002D2D4 <AmiBlitz3.ab2@17945>   MOVE.l D5,D1
0002D2D8 <AmiBlitz3.ab2@17946>    JSR -$54(A6)
0002D2DC <AmiBlitz3.ab2@17947>   fadd.x fp2,fp0
0002D2DE <AmiBlitz3.ab2@17948>   MOVE.l (A7)+,D1
0002D2E2 <AmiBlitz3.ab2@17949>    JSR -$42(A6)
0002D2E4 <AmiBlitz3.ab2@17950>   MOVE.l D0,D3
0002D2E8 <AmiBlitz3.ab2@17951>    BSR.w reget
0002D2EC <AmiBlitz3.ab2@17952>   ORI.w #$20,D0
0002D2F0 <AmiBlitz3.ab2@17953>   CMP.w #$65,D0
0002D2F4 <AmiBlitz3.ab2@17954>    BNE.w JL_0_B2D4
0002D2F8 <AmiBlitz3.ab2@17955>    BSR.w JL_0_B2E6
0002D2FC <AmiBlitz3.ab2@17958>    BSR.w reget
0002D300 <AmiBlitz3.ab2@17959>    BSR.w JL_0_B480
0002D304 <AmiBlitz3.ab2@17960> BRA.w JL_0_B3DC
0002D306 <AmiBlitz3.ab2@17963>   MOVE.l (A7)+,D3
0002D30A <AmiBlitz3.ab2@17964> BRA.w JL_0_B2D4
0002D30E <AmiBlitz3.ab2@17967>   BSR.w get1bytemain
0002D312 <AmiBlitz3.ab2@17968>   CMP.w #$2B,D0
0002D316 <AmiBlitz3.ab2@17969>    BEQ.w JL_0_B30E
0002D31A <AmiBlitz3.ab2@17970>   CMP.w #$2D,D0
0002D31E <AmiBlitz3.ab2@17971>    BNE.w JL_0_B312
0002D322 <AmiBlitz3.ab2@17972>    BSR.w get1bytemain
0002D326 <AmiBlitz3.ab2@17973>    BSR.w getsign
0002D328 <AmiBlitz3.ab2@17974>   MOVE.l D3,D0
0002D32C <AmiBlitz3.ab2@17975>   fdiv.x fp1,fp0
0002D32E <AmiBlitz3.ab2@17976>   MOVE.l D4,D1
0002D332 <AmiBlitz3.ab2@17977>    JSR -$54(A6)
0002D334 <AmiBlitz3.ab2@17978>   MOVE.l D0,D3
0002D336 <AmiBlitz3.ab2@17979> RTS
0002D33A <AmiBlitz3.ab2@17982>   BSR.w get1bytemain
0002D33E <AmiBlitz3.ab2@17985>   BSR.w getsign
0002D342 <AmiBlitz3.ab2@17986>   fmul.x fp1,fp0
0002D344 <AmiBlitz3.ab2@17987>   MOVE.l D3,D0
0002D346 <AmiBlitz3.ab2@17988>   MOVE.l D4,D1
0002D34A <AmiBlitz3.ab2@17989>    JSR -$4E(A6)
0002D34C <AmiBlitz3.ab2@17990>   MOVE.l D0,D3
0002D34E <AmiBlitz3.ab2@17991> RTS
0002D352 <AmiBlitz3.ab2@17994>   BSR.w tstnum
0002D356 <AmiBlitz3.ab2@17995>    BNE.w syntaxerr
0002D358 <AmiBlitz3.ab2@17996>   MOVE.w D0,D4
0002D35C <AmiBlitz3.ab2@17997>   SUBI.w #$30,D4
0002D360 <AmiBlitz3.ab2@17998>    BSR.w get1bytemain
0002D364 <AmiBlitz3.ab2@17999>    BSR.w tstnum
0002D368 <AmiBlitz3.ab2@18000>    BNE.w getsign__skip
0002D36C <AmiBlitz3.ab2@18001>   MULU #$A,D4
0002D370 <AmiBlitz3.ab2@18002>   SUBI.w #$30,D0
0002D372 <AmiBlitz3.ab2@18003>   ADD.w D0,D4
0002D376 <AmiBlitz3.ab2@18004>    BSR.w get1bytemain
0002D37A <AmiBlitz3.ab2@18007>   CMP.w #$12,D4
0002D37E <AmiBlitz3.ab2@18008>    BHI.w overerr
0002D380 <AmiBlitz3.ab2@18009>   LSL.w #3,D4
0002D386 <AmiBlitz3.ab2@18010>   LEA fputab,a0
0002D388 <AmiBlitz3.ab2@18011>   ADD.l d4,a0
0002D38E <AmiBlitz3.ab2@18012>   fmove.d 0(a0),fp1
0002D390 <AmiBlitz3.ab2@18013>   LSR.w #1,d4
0002D394 <AmiBlitz3.ab2@18014>   MOVE.l facts(PC,D4.W),D4
0002D396 <AmiBlitz3.ab2@18015> RTS
0002D3DE <AmiBlitz3.ab2@18019>   Dc.d 1,10,100,1000,10000,100000,1000000,10000000,100000000  ;,1000000000,10000000000
0002D3E2 <AmiBlitz3.ab2@18024>   Dc.l $80000041
0002D3E6 <AmiBlitz3.ab2@18025>   Dc.l $A0000044
0002D3EA <AmiBlitz3.ab2@18026>   Dc.l $C8000047
0002D3EE <AmiBlitz3.ab2@18027>   Dc.l $FA00004A
0002D3F2 <AmiBlitz3.ab2@18028>   Dc.l $9C40004E
0002D3F6 <AmiBlitz3.ab2@18029>   Dc.l $C3500051
0002D3FA <AmiBlitz3.ab2@18030>   Dc.l $F4240054
0002D3FE <AmiBlitz3.ab2@18031>   Dc.l $98968058
0002D402 <AmiBlitz3.ab2@18032>   Dc.l $BEBC205B
0002D406 <AmiBlitz3.ab2@18033>   Dc.l $EE6B285E
0002D40A <AmiBlitz3.ab2@18034>   Dc.l $9502F962
0002D40E <AmiBlitz3.ab2@18035>   Dc.l $BA43B765
0002D412 <AmiBlitz3.ab2@18036>   Dc.l $E8D4A568
0002D416 <AmiBlitz3.ab2@18037>   Dc.l $9184E76C
0002D41A <AmiBlitz3.ab2@18038>   Dc.l $B5E6A96F
0002D41E <AmiBlitz3.ab2@18039>   Dc.l $E35F2972
0002D422 <AmiBlitz3.ab2@18040>   Dc.l $8E1BCA76
0002D426 <AmiBlitz3.ab2@18041>   Dc.l $B1A2BD79
0002D42A <AmiBlitz3.ab2@18042>   Dc.l $DE0B6C7C
0002D42C <AmiBlitz3.ab2@18046>   MOVEQ.l #$01,D5
0002D42E <AmiBlitz3.ab2@18049>   LSL.l #1,D5
0002D430 <AmiBlitz3.ab2@18050>   MOVE.l D5,D1
0002D432 <AmiBlitz3.ab2@18051>   LSL.l #2,D5
0002D434 <AmiBlitz3.ab2@18052>   ADD.l D1,D5                                              ;divisor for frac convert!
0002D436 <AmiBlitz3.ab2@18053>   LSL.l #1,D3
0002D43A <AmiBlitz3.ab2@18054>    BCS.w overerr
0002D43C <AmiBlitz3.ab2@18055>   MOVE.l D3,D1
0002D43E <AmiBlitz3.ab2@18056>   LSL.l #1,D3
0002D442 <AmiBlitz3.ab2@18057>    BCS.w overerr
0002D444 <AmiBlitz3.ab2@18058>   LSL.l #1,D3
0002D448 <AmiBlitz3.ab2@18059>    BCS.w overerr
0002D44A <AmiBlitz3.ab2@18060>   ADD.l D1,D3
0002D44E <AmiBlitz3.ab2@18061>   SUBI.w #$30,D0
0002D450 <AmiBlitz3.ab2@18062>   ADD.l D0,D3
0002D47C <AmiBlitz3.ab2@18063>    !fget                                                   ;bsr.w get1bytemain
0002D480 <AmiBlitz3.ab2@18064>    CMP.b #1,d0
0002D484 <AmiBlitz3.ab2@18065>    BNE 'cm1
0002D486 <AmiBlitz3.ab2@18066>    SUBQ.l #1,a5
0002D48A <AmiBlitz3.ab2@18067>    BSR get1bytemain                                        ;??wy not !fget
0002D48E <AmiBlitz3.ab2@18070>   CMP.b #$7e,d0
0002D492 <AmiBlitz3.ab2@18071>    BNE 'cm2
0002D494 <AmiBlitz3.ab2@18072>    SUBQ.l #1,a5
0002D498 <AmiBlitz3.ab2@18073>    BSR get1bytemain
0002D49A <AmiBlitz3.ab2@18076>   TST.b d0
0002D49E <AmiBlitz3.ab2@18077>    BPL 'l10
0002D4A0 <AmiBlitz3.ab2@18078>    LSL.w #8,d0
0002D4A2 <AmiBlitz3.ab2@18079>    MOVE.b (a5)+,d0
0002D4A8 <AmiBlitz3.ab2@18080>    MOVE.w d0,lastchar
0002D4BA <AmiBlitz3.ab2@18083>   !compare2                                                ;bsr.w tstnum ;cmake bug
0002D4BE <AmiBlitz3.ab2@18084>    BEQ.w atoi__loop
0002D4C0 <AmiBlitz3.ab2@18085> RTS
0002D4C2 <AmiBlitz3.ab2@18088> dfetch:  Ds.w 1                                            ;fetching data?
0002D4C6 <AmiBlitz3.ab2@18092>   MOVE.w dfetch(PC),D1
0002D4CA <AmiBlitz3.ab2@18093>    BEQ.w JL_0_B3EC
0002D4D0 <AmiBlitz3.ab2@18094>   CLR.w dfetch
0002D4D2 <AmiBlitz3.ab2@18095> RTS
0002D4D8 <AmiBlitz3.ab2@18098>   MOVE.b d2,isconstantvalue
0002D4DE <AmiBlitz3.ab2@18099>   MOVE.l d0,lastconstantvalue
0002D4E4 <AmiBlitz3.ab2@18100>   MOVE.w d2,imm_size
0002D4EE <AmiBlitz3.ab2@18101>   MOVE.w regnum,imm_reg
0002D4F8 <AmiBlitz3.ab2@18102>   MOVE.l destpointer,imm_addr                           ; long
0002D4FC <AmiBlitz3.ab2@18103>   CMP.w #$3,D2
0002D500 <AmiBlitz3.ab2@18104>   BEQ.w JL_0_B434
0002D504 <AmiBlitz3.ab2@18105>   CMP.w #$5,D2                                          ;float
0002D508 <AmiBlitz3.ab2@18106>   BEQ.w JL_0_B434
0002D50C <AmiBlitz3.ab2@18107>   CMP.w #$1,D2
0002D510 <AmiBlitz3.ab2@18108>   BEQ.w JL_0_B418
0002D514 <AmiBlitz3.ab2@18109>   CMP.w #$2,D2
0002D518 <AmiBlitz3.ab2@18110>   BEQ.w JL_0_B418
0002D51C <AmiBlitz3.ab2@18111>   CMP.w #$4,D2
0002D520 <AmiBlitz3.ab2@18112>   BEQ.w JL_0_B434
0002D524 <AmiBlitz3.ab2@18114> BRA.w mismatcherr
0002D52A <AmiBlitz3.ab2@18117>   MOVE.w regnum,D1
0002D52C <AmiBlitz3.ab2@18118>   LSL.w #8,D1
0002D52E <AmiBlitz3.ab2@18119>   LSL.w #1,D1
0002D532 <AmiBlitz3.ab2@18120>   ORI.w #$303C,D1
0002D536 <AmiBlitz3.ab2@18121>    BSR.w writeword
0002D538 <AmiBlitz3.ab2@18122>   MOVE.w D0,D1
0002D53C <AmiBlitz3.ab2@18123>    BSR.w writeword
0002D540 <AmiBlitz3.ab2@18124> BRA.w reget
0002D542 <AmiBlitz3.ab2@18127>   MOVEQ #0,d1
0002D548 <AmiBlitz3.ab2@18128>   MOVE.w regnum,D1
0002D54E <AmiBlitz3.ab2@18129>   TST.b fpu
0002D552 <AmiBlitz3.ab2@18130>   BEQ 'f1
0002D556 <AmiBlitz3.ab2@18131>   CMP.w #5,d2
0002D55A <AmiBlitz3.ab2@18132>   BEQ 'l10
0002D55E <AmiBlitz3.ab2@18133> BRA 'f2
0002D564 <AmiBlitz3.ab2@18136>   TST.b iee
0002D568 <AmiBlitz3.ab2@18137>   BNE 'l10
0002D56A <AmiBlitz3.ab2@18140>   LSL.w #8,D1
0002D56C <AmiBlitz3.ab2@18141>   LSL.w #1,D1
0002D570 <AmiBlitz3.ab2@18142>   ORI.w #$203C,D1
0002D574 <AmiBlitz3.ab2@18143>    BSR.w writeword
0002D576 <AmiBlitz3.ab2@18144>   MOVE.l D0,D1
0002D57A <AmiBlitz3.ab2@18145>    BSR.w writelong
0002D57E <AmiBlitz3.ab2@18146> BRA.w reget
0002D580 <AmiBlitz3.ab2@18149>   MOVEQ #5,d2
0002D582 <AmiBlitz3.ab2@18150>   ASL.l #7,d1
0002D584 <AmiBlitz3.ab2@18151>   SUBQ.l #8,a7
0002D58A <AmiBlitz3.ab2@18156>       OR.l #$f23c4400,d1                                   ;fmove.s
0002D590 <AmiBlitz3.ab2@18157>        fmove.s fp0,0(a7)
0002D594 <AmiBlitz3.ab2@18159>   BSR writelong
0002D596 <AmiBlitz3.ab2@18160>   MOVE.l (a7)+,d1
0002D59A <AmiBlitz3.ab2@18161>   BSR writelong
0002D59C <AmiBlitz3.ab2@18162>   MOVE.l (a7)+,d1
0002D5A0 <AmiBlitz3.ab2@18166> BRA.w reget
0002D5A2 <AmiBlitz3.ab2@18172>  MOVE.l D3,D0
0002D5A4 <AmiBlitz3.ab2@18173>   TST.w D6
0002D5A8 <AmiBlitz3.ab2@18174>    BEQ.w JL_0_B46C
0002D5AE <AmiBlitz3.ab2@18175>   MOVEA.l _mathffpbase,A6
0002D5B2 <AmiBlitz3.ab2@18176>    JSR -$1E(A6)
0002D5B6 <AmiBlitz3.ab2@18177>    BVC.w JL_0_B46C
0002D5B8 <AmiBlitz3.ab2@18178>   ADDQ.w #4,A7
0002D5BC <AmiBlitz3.ab2@18179> BRA.w JL_0_B5A0
0002D5BE <AmiBlitz3.ab2@18182> RTS
0002D5C0 <AmiBlitz3.ab2@18186>   MOVEQ.l #$00,D6
0002D5C4 <AmiBlitz3.ab2@18187>    fmove.l d3,fp0
0002D5C8 <AmiBlitz3.ab2@18190>   BSR.w JL_0_B480
0002D5CC <AmiBlitz3.ab2@18191> BRA.w JL_0_B3DC
0002D5CE <AmiBlitz3.ab2@18194>   MOVE.w D2,-(A7)
0002D5D2 <AmiBlitz3.ab2@18195>    BSR.w JL_0_BF6A
0002D5D4 <AmiBlitz3.ab2@18196>   MOVE.w (A7)+,D2
0002D5D6 <AmiBlitz3.ab2@18199>   TST.w D2
0002D5DA <AmiBlitz3.ab2@18200>    BNE.w JL_0_B498
0002D5DC <AmiBlitz3.ab2@18201>   TST.w D6
0002D5E0 <AmiBlitz3.ab2@18202>    BEQ.w JL_0_B492
0002D5E2 <AmiBlitz3.ab2@18203>   MOVEQ.l #$04,D2
0002D5E6 <AmiBlitz3.ab2@18204> BRA.w JL_0_B510
0002D5E8 <AmiBlitz3.ab2@18207>   MOVEQ.l #$02,D2
0002D5EC <AmiBlitz3.ab2@18208> BRA.w JL_0_B4C4
0002D5F0 <AmiBlitz3.ab2@18211>   CMP.w #$1,D2
0002D5F4 <AmiBlitz3.ab2@18212>    BEQ.w JL_0_B4C4
0002D5F8 <AmiBlitz3.ab2@18213>   CMP.w #$2,D2
0002D5FC <AmiBlitz3.ab2@18214>    BEQ.w JL_0_B4F8
0002D600 <AmiBlitz3.ab2@18215>   CMP.w #$3,D2
0002D604 <AmiBlitz3.ab2@18216>    BEQ.w JL_0_B57A
0002D608 <AmiBlitz3.ab2@18217>   CMP.w #$4,D2
0002D60C <AmiBlitz3.ab2@18218>    BEQ.w JL_0_B506
0002D610 <AmiBlitz3.ab2@18219>   CMP.w #$5,D2
0002D614 <AmiBlitz3.ab2@18220>    BEQ.w JL_0_B586
0002D618 <AmiBlitz3.ab2@18221> BRA.w mismatcherr
0002D61C <AmiBlitz3.ab2@18224>   BSR.w JL_0_B450                                          ;bugfix if a.b=$90 bug fix
0002D622 <AmiBlitz3.ab2@18225>   CMP.l #$7f,D0
0002D626 <AmiBlitz3.ab2@18226>    BGT.w JL_0_B4DC
0002D62C <AmiBlitz3.ab2@18227>   CMP.l #$FFFFFF80,D0
0002D630 <AmiBlitz3.ab2@18228>    BGE.w JL_0_B59E
0002D632 <AmiBlitz3.ab2@18231>   MOVEQ.l #$02,D2                                          ;was 2 before
0002D638 <AmiBlitz3.ab2@18232>   CMP.l #$7fff,D0
0002D63C <AmiBlitz3.ab2@18233>    BGT.w JL_0_B4F2
0002D642 <AmiBlitz3.ab2@18234>   CMP.l #$FFFF8000,D0
0002D646 <AmiBlitz3.ab2@18235>    BGE.w JL_0_B59E
0002D648 <AmiBlitz3.ab2@18238>   MOVEQ.l #$03,D2
0002D64C <AmiBlitz3.ab2@18239> BRA.w JL_0_B59E
0002D64E <AmiBlitz3.ab2@18265>   TST.w D6
0002D652 <AmiBlitz3.ab2@18266>    BNE.w JL_0_B510
0002D656 <AmiBlitz3.ab2@18267>    BSR.w JL_0_B450
0002D65A <AmiBlitz3.ab2@18268> BRA.w JL_0_B4DC
0002D65E <AmiBlitz3.ab2@18271>   BSR.w JL_0_B450
0002D660 <AmiBlitz3.ab2@18272>   TST.w D6
0002D664 <AmiBlitz3.ab2@18273>   BEQ.w JL_0_B560
0002D66A <AmiBlitz3.ab2@18276>   CMP.l #MaxWordSgnd,D0
0002D66E <AmiBlitz3.ab2@18277>    BGT.w JL_0_B5A0
0002D674 <AmiBlitz3.ab2@18278>   CMP.l #$FFFF8000,D0
0002D678 <AmiBlitz3.ab2@18279>    BLT.w JL_0_B5A0
0002D67A <AmiBlitz3.ab2@18280>   MOVE.w D0,-(A7)
0002D67E <AmiBlitz3.ab2@18281>    JSR -$24(A6)
0002D680 <AmiBlitz3.ab2@18282>   MOVE.l D0,D1
0002D682 <AmiBlitz3.ab2@18283>   MOVE.l D3,D0
0002D686 <AmiBlitz3.ab2@18284>    JSR -$48(A6)
0002D68C <AmiBlitz3.ab2@18285>   MOVE.l #$80000051,D1
0002D690 <AmiBlitz3.ab2@18286>    JSR -$4E(A6)
0002D694 <AmiBlitz3.ab2@18287>    JSR -$1E(A6)
0002D698 <AmiBlitz3.ab2@18288>    BEQ.w JL_0_B55A
0002D69E <AmiBlitz3.ab2@18289>   CMP.l #$10000,D0
0002D6A2 <AmiBlitz3.ab2@18290>    BCC.w JL_0_B55A
0002D6A4 <AmiBlitz3.ab2@18291>   MOVE.w D0,D1
0002D6A6 <AmiBlitz3.ab2@18292>   MOVE.w (A7)+,D0
0002D6A8 <AmiBlitz3.ab2@18293>   SWAP D0
0002D6AA <AmiBlitz3.ab2@18294>   MOVE.w D1,D0
0002D6AE <AmiBlitz3.ab2@18295> BRA.w JL_0_B59E
0002D6B0 <AmiBlitz3.ab2@18298>   ADDQ.w #2,A7
0002D6B4 <AmiBlitz3.ab2@18299> BRA.w JL_0_B5A0
0002D6BA <AmiBlitz3.ab2@18302>   CMP.l #MaxWordSgnd,D0
0002D6BE <AmiBlitz3.ab2@18303>    BGT.w JL_0_B4F2
0002D6C4 <AmiBlitz3.ab2@18304>   CMP.l #$FFFF8000,D0
0002D6C8 <AmiBlitz3.ab2@18305>    BLT.w JL_0_B4F2
0002D6CA <AmiBlitz3.ab2@18306>   SWAP D0
0002D6CE <AmiBlitz3.ab2@18307> BRA.w JL_0_B59E
0002D6D0 <AmiBlitz3.ab2@18310>   TST.w D6
0002D6D4 <AmiBlitz3.ab2@18311>   BNE.w JL_0_B5A0
0002D6D6 <AmiBlitz3.ab2@18312>   MOVE.l D3,D0
0002D6DA <AmiBlitz3.ab2@18313> BRA.w JL_0_B59E
0002D6DC <AmiBlitz3.ab2@18316>   TST.w D6
0002D6E0 <AmiBlitz3.ab2@18317>   BNE.w JL_0_B5A0
0002D6E2 <AmiBlitz3.ab2@18318>   MOVE.l D3,D0
0002D6E8 <AmiBlitz3.ab2@18319>   MOVEA.l _mathffpbase,A6
0002D6EC <AmiBlitz3.ab2@18320>   JSR -$24(A6)
0002D6EE <AmiBlitz3.ab2@18321>   MOVE.l D0,D3
0002D6F2 <AmiBlitz3.ab2@18322> BRA.w JL_0_B5A0
0002D6F4 <AmiBlitz3.ab2@18325> RTS
0002D6F6 <AmiBlitz3.ab2@18328>   MOVEQ.l #$05,D2
0002D6F8 <AmiBlitz3.ab2@18329>   MOVE.l D3,D0
0002D6FA <AmiBlitz3.ab2@18330> RTS
0002D6FE <AmiBlitz3.ab2@18334>             Ds.l 1                                         ;??Looks like unused data??
0002D702 <AmiBlitz3.ab2@18335> pushpc:     Ds.l 1
0002D706 <AmiBlitz3.ab2@18336> pushoff:    Ds.l 1
0002D70A <AmiBlitz3.ab2@18337> pushdooff:  Ds.l 1
0002D70C <AmiBlitz3.ab2@18338> pushclen:   Ds.w 1
0002D710 <AmiBlitz3.ab2@18339> pushat:     Ds.l 1
0002D71A <AmiBlitz3.ab2@18343>   MOVE.l destpointer,pushpc
0002D724 <AmiBlitz3.ab2@18344>   MOVE.l hunkoffsetbase,pushoff
0002D726 <AmiBlitz3.ab2@18345> RTS
0002D72A <AmiBlitz3.ab2@18349>   MOVEM.l D0-D1/A0-A1,-(A7)
0002D730 <AmiBlitz3.ab2@18350>   MOVE.l destpointer,D0
0002D734 <AmiBlitz3.ab2@18351>   MOVE.l pushpc(PC),D1
0002D73A <AmiBlitz3.ab2@18352>   MOVE.l D1,destpointer
0002D73C <AmiBlitz3.ab2@18353>   SUB.l D1,D0
0002D742 <AmiBlitz3.ab2@18354>   MOVE.w D0,pushclen
0002D746 <AmiBlitz3.ab2@18355>    BEQ.w JL_0_B636
0002D74C <AmiBlitz3.ab2@18356>   MOVE.w dontwrite,D1
0002D750 <AmiBlitz3.ab2@18357>    BNE.w JL_0_B636
0002D758 <AmiBlitz3.ab2@18358>    CMP.w #1000,pushclen
0002D75C <AmiBlitz3.ab2@18359>    BGE conmemerr
0002D762 <AmiBlitz3.ab2@18360>    MOVE.l pushat,d0
0002D766 <AmiBlitz3.ab2@18361>    BNE 'nomem
0002D76C <AmiBlitz3.ab2@18362>    MOVE.l #1024,d0
0002D76E <AmiBlitz3.ab2@18363>   MOVEQ.l #$01,D1
0002D774 <AmiBlitz3.ab2@18364>   MOVEA.l _execbase,A6
0002D77A <AmiBlitz3.ab2@18365>   MOVE.l mempool,a0
0002D77E <AmiBlitz3.ab2@18366>   JSR _AllocPooled(a6)
0002D784 <AmiBlitz3.ab2@18368>   MOVE.l D0,pushat
0002D786 <AmiBlitz3.ab2@18371>   MOVEA.l D0,A0
0002D78C <AmiBlitz3.ab2@18372>   MOVEA.l pushpc,A1
0002D792 <AmiBlitz3.ab2@18373>   MOVE.l A1,destpointer
0002D798 <AmiBlitz3.ab2@18374>   MOVE.w pushclen,D0
0002D79A <AmiBlitz3.ab2@18375>   LSR.w #1,D0
0002D79C <AmiBlitz3.ab2@18376>   SUBQ.w #1,D0
0002D79E <AmiBlitz3.ab2@18379>     MOVE.w (A1)+,(A0)+
0002D7A2 <AmiBlitz3.ab2@18380>   DBF D0,JL_0_B626
0002D7AC <AmiBlitz3.ab2@18382>    MOVE.l hunkoffsetbase,pushdooff
0002D7B0 <AmiBlitz3.ab2@18385>   MOVEM.l (A7)+,D0-D1/A0-A1
0002D7B2 <AmiBlitz3.ab2@18386> RTS
0002D7B6 <AmiBlitz3.ab2@18390>   MOVEM.l D0-D1/A0-A1,-(A7)
0002D7B8 <AmiBlitz3.ab2@18391>   MOVEQ.l #$00,D0
0002D7BE <AmiBlitz3.ab2@18392>   MOVE.w pushclen,D0
0002D7C2 <AmiBlitz3.ab2@18393>    BEQ.w JL_0_B6D8
0002D7C8 <AmiBlitz3.ab2@18394>   MOVE.l destpointer,D1
0002D7CE <AmiBlitz3.ab2@18395>   ADD.l D0,destpointer
0002D7D4 <AmiBlitz3.ab2@18396>   TST.w dontwrite
0002D7D8 <AmiBlitz3.ab2@18397>    BNE.w JL_0_B6D8
0002D7DA <AmiBlitz3.ab2@18398>   LSR.w #1,D0
0002D7DC <AmiBlitz3.ab2@18399>   SUBQ.w #1,D0
0002D7DE <AmiBlitz3.ab2@18400>   MOVEA.l D1,A1
0002D7E4 <AmiBlitz3.ab2@18401>   MOVEA.l pushat,A0
0002D7EA <AmiBlitz3.ab2@18404>     CMPA.l destbufferend,A1
0002D7EE <AmiBlitz3.ab2@18405>     BCS.w JL_0_B684
0002D7F6 <AmiBlitz3.ab2@18407>     MOVE.w #$FFFF,dontwrite
0002D7FA <AmiBlitz3.ab2@18408>   BRA.w JL_0_B6D8
0002D7FC <AmiBlitz3.ab2@18411>      MOVE.w (A0)+,(A1)+                                    ;copylibcode
0002D800 <AmiBlitz3.ab2@18412>   DBF D0,JL_0_B66E
0002D806 <AmiBlitz3.ab2@18414>   SUB.l pushpc,D1
0002D80A <AmiBlitz3.ab2@18415>   BEQ.w JL_0_B6C2
0002D810 <AmiBlitz3.ab2@18416>   MOVEA.l pushdooff,A0
0002D816 <AmiBlitz3.ab2@18419>   CMPA.l pushoff,A0
0002D81A <AmiBlitz3.ab2@18420>   BEQ.w JL_0_B6C2
0002D81E <AmiBlitz3.ab2@18421>   MOVEA.l $4(A0),A1
0002D824 <AmiBlitz3.ab2@18422>   ADDA.l destbufferstart,A1
0002D82A <AmiBlitz3.ab2@18423>   CMPA.l destbufferend,A1
0002D82E <AmiBlitz3.ab2@18424>   BCC.w JL_0_B6BC
0002D832 <AmiBlitz3.ab2@18425>   ADD.l D1,$4(A0)
0002D834 <AmiBlitz3.ab2@18428>   MOVEA.l (A0),A0
0002D838 <AmiBlitz3.ab2@18429> BRA.w JL_0_B69A
0002D83E <AmiBlitz3.ab2@18432>   MOVEA.l pushat,A1
0002D840 <AmiBlitz3.ab2@18433>   MOVEQ.l #$00,D0
0002D846 <AmiBlitz3.ab2@18434>   MOVE.w pushclen,D0
0002D84C <AmiBlitz3.ab2@18435>   MOVEA.l _execbase,A6
0002D852 <AmiBlitz3.ab2@18436>   MOVE.l mempool,a0
0002D856 <AmiBlitz3.ab2@18440>   MOVEM.l (A7)+,D0-D1/A0-A1
0002D858 <AmiBlitz3.ab2@18441> RTS
0002D85A <AmiBlitz3.ab2@18444>   MOVE.l D1,-(A7)                                          ;array mul
0002D85C <AmiBlitz3.ab2@18445>   MOVEQ.l #$00,D2
0002D85E <AmiBlitz3.ab2@18446>   MOVEQ.l #$0F,D3
0002D860 <AmiBlitz3.ab2@18449>     LSL.w #1,D1
0002D864 <AmiBlitz3.ab2@18450>     BCC.w JL_0_B6EE
0002D866 <AmiBlitz3.ab2@18451>     ADDQ.w #1,D2
0002D868 <AmiBlitz3.ab2@18452>     MOVE.w D3,D4
0002D86C <AmiBlitz3.ab2@18455>   DBF D3,JL_0_B6E4
0002D86E <AmiBlitz3.ab2@18457>   SUBQ.w #1,D2
0002D872 <AmiBlitz3.ab2@18458>    BNE.w JL_0_B726
0002D874 <AmiBlitz3.ab2@18459>   ADDQ.w #4,A7
0002D876 <AmiBlitz3.ab2@18460>   MOVE.w D4,D1
0002D87A <AmiBlitz3.ab2@18461>    BEQ.w JL_0_B724
0002D87E <AmiBlitz3.ab2@18462>   CMP.w #$8,D1
0002D882 <AmiBlitz3.ab2@18463>    BCS.w JL_0_B712
0002D886 <AmiBlitz3.ab2@18464>   SUBI.w #$8,D1
0002D88A <AmiBlitz3.ab2@18465>    BSR.w JL_0_B712
0002D88C <AmiBlitz3.ab2@18466>   MOVEQ.l #$00,D1
0002D88E <AmiBlitz3.ab2@18469>   LSL.w #8,D1
0002D890 <AmiBlitz3.ab2@18470>   LSL.w #1,D1
0002D894 <AmiBlitz3.ab2@18471>   ORI.w #$E188,D1
0002D89A <AmiBlitz3.ab2@18472>   OR.w regnum,D1
0002D89E <AmiBlitz3.ab2@18473> BRA.w writeword
0002D8A0 <AmiBlitz3.ab2@18476> RTS
0002D8A2 <AmiBlitz3.ab2@18479>   MOVEQ #0,d1
0002D8A8 <AmiBlitz3.ab2@18480>   MOVE.w regnum,D1
0002D8AA <AmiBlitz3.ab2@18481>   LSL.l #8,D1
0002D8AC <AmiBlitz3.ab2@18483>   LSL.l #4,d1
0002D8B2 <AmiBlitz3.ab2@18485>   OR.l #$4c3c0000,d1
0002D8B8 <AmiBlitz3.ab2@18486>   OR.w regnum,d1
0002D8BC <AmiBlitz3.ab2@18487>   BSR.w writelong
0002D8BE <AmiBlitz3.ab2@18488>   MOVE.l (A7)+,D1
0002D8C2 <AmiBlitz3.ab2@18490> BRA writelong
0002D8C8 <AmiBlitz3.ab2@18493>   MOVE.l destpointer,-(A7)
0002D8CA <AmiBlitz3.ab2@18494>   MOVEQ.l #-$01,D7
0002D8CE <AmiBlitz3.ab2@18497>     BSR.w findhilib
0002D8D2 <AmiBlitz3.ab2@18498>      BEQ.w JL_0_B8A4
0002D8D6 <AmiBlitz3.ab2@18499>     TST.w $C(A2)
0002D8DA <AmiBlitz3.ab2@18500>      BPL.w JL_0_B746
0002D8DE <AmiBlitz3.ab2@18502>     MOVE.l $16(A2),D1
0002D8E2 <AmiBlitz3.ab2@18503>     BEQ.w JL_0_B746
0002D8E6 <AmiBlitz3.ab2@18505>     MOVE.w $4(A2),D1                                       ; check state in D1 and do some things
0002D8EA <AmiBlitz3.ab2@18506>     CMP.w #-$2,D1
0002D8EE <AmiBlitz3.ab2@18507>      BNE.w JL_0_B772
0002D8F2 <AmiBlitz3.ab2@18508>     BSR.w makevsize
0002D8F6 <AmiBlitz3.ab2@18509> BRA.w JL_0_B7FE
0002D8FA <AmiBlitz3.ab2@18512>     CMP.w #-$5C4,D1
0002D8FE <AmiBlitz3.ab2@18513>      BNE.w JL_0_B790
0002D902 <AmiBlitz3.ab2@18514>     MOVE.w #$7000,D1
0002D90A <AmiBlitz3.ab2@18515>     BTST #$7,autorun
0002D90C <AmiBlitz3.ab2@18516>     SNE D1
0002D910 <AmiBlitz3.ab2@18517>     BSR.w writeword
0002D914 <AmiBlitz3.ab2@18518> BRA.w JL_0_B7FE
0002D918 <AmiBlitz3.ab2@18521>     CMP.w #-$12D,D1
0002D91C <AmiBlitz3.ab2@18522>      BNE.w JL_0_B7A0
0002D920 <AmiBlitz3.ab2@18523>     BSR.w makessize
0002D924 <AmiBlitz3.ab2@18524> BRA.w JL_0_B7FE
0002D928 <AmiBlitz3.ab2@18527>     CMP.w #-$1F5,D1
0002D92C <AmiBlitz3.ab2@18528>      BNE.w JL_0_B7C2
0002D930 <AmiBlitz3.ab2@18529>     MOVE.w #$203C,D1
0002D934 <AmiBlitz3.ab2@18530>     BSR.w writeword
0002D938 <AmiBlitz3.ab2@18531>     BSR.w addoff
0002D93E <AmiBlitz3.ab2@18532>     MOVE.l endop,D1
0002D942 <AmiBlitz3.ab2@18533>     BSR.w writelong
0002D946 <AmiBlitz3.ab2@18534> BRA.w JL_0_B7FE
0002D94A <AmiBlitz3.ab2@18537>     CMP.w #-$3E9,D1
0002D94E <AmiBlitz3.ab2@18538>      BNE.w JL_0_B7E4
0002D952 <AmiBlitz3.ab2@18539>     MOVE.w #$203C,D1
0002D956 <AmiBlitz3.ab2@18540>     BSR.w writeword
0002D95A <AmiBlitz3.ab2@18541>     BSR.w addoff
0002D960 <AmiBlitz3.ab2@18542>     MOVE.l data2at,D1
0002D964 <AmiBlitz3.ab2@18543>     BSR.w writelong
0002D968 <AmiBlitz3.ab2@18544> BRA.w JL_0_B7FE
0002D96C <AmiBlitz3.ab2@18547>     CMP.w #$1,D1
0002D970 <AmiBlitz3.ab2@18548>      BNE.w JL_0_B7FE
0002D974 <AmiBlitz3.ab2@18549>     MOVE.w #$203C,D1
0002D978 <AmiBlitz3.ab2@18550>     BSR.w writeword
0002D97E <AmiBlitz3.ab2@18551>     MOVE.l ptr_seg_debugger,D1
0002D982 <AmiBlitz3.ab2@18552>     BSR.w writelong
0002D986 <AmiBlitz3.ab2@18555>     MOVE.l $16(A2),D1
0002D98E <AmiBlitz3.ab2@18556>     MOVE.w #$FFFF,lasta6
0002D992 <AmiBlitz3.ab2@18557>     BSR.w Amakelibsub
0002D998 <AmiBlitz3.ab2@18558>     CMPI.w #$FFFE,$4(A2)
0002D99C <AmiBlitz3.ab2@18559>      BNE.w JL_0_B83A
0002D9A2 <AmiBlitz3.ab2@18560>     MOVE.l intdata1,D1
0002D9A6 <AmiBlitz3.ab2@18561>      BEQ.w JL_0_B83A
0002D9AC <AmiBlitz3.ab2@18562>     MOVE.w putidata1,D1
0002D9B0 <AmiBlitz3.ab2@18563>     BSR.w writeword
0002D9B4 <AmiBlitz3.ab2@18564>     BSR.w addoff
0002D9BA <AmiBlitz3.ab2@18565>     MOVE.l intdata1,D1
0002D9BE <AmiBlitz3.ab2@18566>     BSR.w writelong
0002D9C2 <AmiBlitz3.ab2@18569>     MOVE.w #$2B40,D1
0002D9C6 <AmiBlitz3.ab2@18570>     TST.w $1A(A2)
0002D9CA <AmiBlitz3.ab2@18571>      BEQ.w JL_0_B746
0002D9CE <AmiBlitz3.ab2@18572>      BPL.w JL_0_B84E
0002D9D2 <AmiBlitz3.ab2@18573>     MOVE.w #$3B40,D1
0002D9D6 <AmiBlitz3.ab2@18576>     BSR.w writeword
0002D9DA <AmiBlitz3.ab2@18577>     MOVE.w $A(A2),D1
0002D9DE <AmiBlitz3.ab2@18578>      BSR.w writeword
0002D9E4 <AmiBlitz3.ab2@18579>     CMPI.w #$FFFA,$4(A2)
0002D9E8 <AmiBlitz3.ab2@18580>      BNE.w JL_0_B746
0002D9EA <AmiBlitz3.ab2@18581>     MOVE.w D7,-(A7)
0002D9F0 <AmiBlitz3.ab2@18582>     MOVE.w numstatic,D4
0002D9F4 <AmiBlitz3.ab2@18583>      BEQ.w JL_0_B882
0002D9FA <AmiBlitz3.ab2@18584>     MOVE.l staticdata,D3
0002DA00 <AmiBlitz3.ab2@18585>      JSR datastart
0002DA04 <AmiBlitz3.ab2@18586>     MOVE.w #$C500,D1
0002DA08 <AmiBlitz3.ab2@18587>      BSR.w tokejsr2
0002DA0E <AmiBlitz3.ab2@18590>     MOVE.w maxsused,D4
0002DA12 <AmiBlitz3.ab2@18591>      BEQ.w JL_0_B89E
0002DA18 <AmiBlitz3.ab2@18592>     MOVE.l maxsat,D3
0002DA1E <AmiBlitz3.ab2@18593>      JSR datastart
0002DA22 <AmiBlitz3.ab2@18594>     MOVE.w #$CF00,D1
0002DA26 <AmiBlitz3.ab2@18595>      BSR.w tokejsr2
0002DA28 <AmiBlitz3.ab2@18598>     MOVE.w (A7)+,D7
0002DA2C <AmiBlitz3.ab2@18599> BRA.w JL_0_B746
0002DA32 <AmiBlitz3.ab2@18602>   MOVE.l destpointer,D1
0002DA34 <AmiBlitz3.ab2@18603>   CMP.l (A7),D1
0002DA38 <AmiBlitz3.ab2@18604>    BNE.w JL_0_B8BC
0002DA40 <AmiBlitz3.ab2@18605>   MOVE.w #$0008,noinits+2
0002DA44 <AmiBlitz3.ab2@18606> BRA.w JL_0_B8E6
0002DA4A <AmiBlitz3.ab2@18609>   CLR.w noinits+2
0002DA50 <AmiBlitz3.ab2@18610>   MOVE.w dontwrite,D1
0002DA54 <AmiBlitz3.ab2@18611>    BNE.w JL_0_B8DE
0002DA5A <AmiBlitz3.ab2@18612>   TST.l newinitaddr
0002DA5E <AmiBlitz3.ab2@18613>    BEQ 'l10
0002DA64 <AmiBlitz3.ab2@18614>   MOVE.l newinitaddr,D2
0002DA6A <AmiBlitz3.ab2@18615>   SUB.l destbufferstart,D2
0002DA6C <AmiBlitz3.ab2@18616>   ADDQ.l #2,d2
0002DA72 <AmiBlitz3.ab2@18617>   MOVEA.l newinitaddr,A0                                   ;write newinitcode
0002DA76 <AmiBlitz3.ab2@18619>   MOVE.w #$4EB9,(A0)+
0002DA78 <AmiBlitz3.ab2@18620>   MOVE.l (A7),(A0)+
0002DA7C <AmiBlitz3.ab2@18622> BRA 'l20
0002DA82 <AmiBlitz3.ab2@18625>   MOVEA.l destbufferstart,A0                               ;write initcode
0002DA88 <AmiBlitz3.ab2@18626>   TST.b saved0
0002DA8C <AmiBlitz3.ab2@18627>   BEQ 'l1
0002DA90 <AmiBlitz3.ab2@18628>   MOVE.w #$23c0,(a0)+
0002DA92 <AmiBlitz3.ab2@18629>   MOVE.l a0,a1
0002DA94 <AmiBlitz3.ab2@18630>   ADDQ.l #6,a1
0002DA96 <AmiBlitz3.ab2@18631>   MOVE.l a1,(a0)+
0002DA98 <AmiBlitz3.ab2@18632>   MOVEQ.l #$02,D2
0002DA9C <AmiBlitz3.ab2@18633>   BSR.w addhunkoffset
0002DAA0 <AmiBlitz3.ab2@18634>   MOVE.w #$6004,(a0)+
0002DAA6 <AmiBlitz3.ab2@18635>   MOVE.l #$4e714e71,(a0)+
0002DAAA <AmiBlitz3.ab2@18638>   MOVE.w #$4EB9,(A0)+
0002DAAC <AmiBlitz3.ab2@18639>   MOVE.l (A7),(A0)+
0002DAAE <AmiBlitz3.ab2@18640>   MOVEQ #2,d2
0002DAB4 <AmiBlitz3.ab2@18641>   TST.b saved0
0002DAB8 <AmiBlitz3.ab2@18642>   BEQ 'l20
0002DABA <AmiBlitz3.ab2@18643>   MOVEQ.l #14,D2
0002DABE <AmiBlitz3.ab2@18646>   BSR.w addhunkoffset
0002DAC2 <AmiBlitz3.ab2@18647>   MOVE.w #$2039,(a0)+
0002DAC4 <AmiBlitz3.ab2@18648>   MOVE.l a1,(a0)+
0002DAC6 <AmiBlitz3.ab2@18649>   MOVEQ.l #20,d2
0002DACA <AmiBlitz3.ab2@18652>   BSR.w addhunkoffset
0002DACE <AmiBlitz3.ab2@18655>   MOVE.w #$4E75,D1
0002DAD2 <AmiBlitz3.ab2@18656>   BSR.w writeword
0002DAD4 <AmiBlitz3.ab2@18659>   ADDQ.w #4,A7
0002DAD6 <AmiBlitz3.ab2@18660> RTS
0002DADA <AmiBlitz3.ab2@18665>   Dc.b $22,$2D,$00,$00                                     ;MOVE.L  $0000(A5),D1
0002DAE0 <AmiBlitz3.ab2@18667>   Dc.b $23,$CD,$00,$00,$00,$00                             ;MOVE.L  A5,$00000000
0002DAE6 <AmiBlitz3.ab2@18669>   Dc.b $24,$7C,$00,$00,$00,$00                             ;MOVEA.L #$00000000,A2
0002DAEC <AmiBlitz3.ab2@18674>   MOVE.l stringbuffer,D1
0002DAF0 <AmiBlitz3.ab2@18675> BRA.w makesize
0002DAF2 <AmiBlitz3.ab2@18678>   MOVEQ.l #$00,D1
0002DAF8 <AmiBlitz3.ab2@18679>   MOVE.w globalvarpointer,D1
0002DAFC <AmiBlitz3.ab2@18680>   SUBI.w #$8000,D1
0002DB00 <AmiBlitz3.ab2@18681>   BNE.w makesize
0002DB02 <AmiBlitz3.ab2@18682>     MOVEQ.l #$08,D1
0002DB04 <AmiBlitz3.ab2@18685>   MOVE.l D1,-(A7)
0002DB08 <AmiBlitz3.ab2@18686>   MOVE.w #$203C,D1
0002DB0C <AmiBlitz3.ab2@18687>   BSR.w writeword
0002DB0E <AmiBlitz3.ab2@18688>   MOVE.l (A7)+,D1
0002DB12 <AmiBlitz3.ab2@18689> BRA.w writelong
0002DB14 <AmiBlitz3.ab2@18697>   MOVEQ.l #$00,D1
0002DB1A <AmiBlitz3.ab2@18698>   MOVEA.l libpointer,A1
0002DB1E <AmiBlitz3.ab2@18701>     CMPA.w #$0,A1
0002DB22 <AmiBlitz3.ab2@18702>     BEQ.w findhilib__done
0002DB26 <AmiBlitz3.ab2@18703>       CMP.w $4(A1),D7
0002DB2A <AmiBlitz3.ab2@18704>       BLS.w findhilib__next
0002DB2E <AmiBlitz3.ab2@18705>         CMP.w $4(A1),D1
0002DB32 <AmiBlitz3.ab2@18706>         BCC.w findhilib__next
0002DB36 <AmiBlitz3.ab2@18707>           MOVE.w $4(A1),D1
0002DB38 <AmiBlitz3.ab2@18708>           MOVEA.l A1,A2
0002DB3A <AmiBlitz3.ab2@18711>     MOVEA.l (A1),A1
0002DB3E <AmiBlitz3.ab2@18712> BRA.w findhilib__loop
0002DB40 <AmiBlitz3.ab2@18715>   MOVE.w D1,D7
0002DB42 <AmiBlitz3.ab2@18716> RTS
0002DB44 <AmiBlitz3.ab2@18724>   MOVEQ.l #-$01,D1
0002DB4A <AmiBlitz3.ab2@18725>   MOVEA.l libpointer,A1
0002DB4E <AmiBlitz3.ab2@18728>     CMPA.w #$0,A1
0002DB52 <AmiBlitz3.ab2@18729>      BEQ.w findlolib__done
0002DB56 <AmiBlitz3.ab2@18730>     CMP.w $4(A1),D7
0002DB5A <AmiBlitz3.ab2@18731>      BCC.w findlolib__next
0002DB5E <AmiBlitz3.ab2@18732>     CMP.w $4(A1),D1
0002DB62 <AmiBlitz3.ab2@18733>      BLS.w findlolib__next
0002DB66 <AmiBlitz3.ab2@18734>     MOVE.w $4(A1),D1
0002DB68 <AmiBlitz3.ab2@18735>     MOVEA.l A1,A2
0002DB6A <AmiBlitz3.ab2@18738>     MOVEA.l (A1),A1
0002DB6E <AmiBlitz3.ab2@18739> BRA.w findlolib__loop
0002DB70 <AmiBlitz3.ab2@18742>   MOVE.w D1,D7
0002DB74 <AmiBlitz3.ab2@18743>   CMP.w #-$1,D1
0002DB76 <AmiBlitz3.ab2@18744> RTS
0002DB7C <AmiBlitz3.ab2@18748>   ADDQ.w #1,globalvarpointer
0002DB84 <AmiBlitz3.ab2@18749>   BCLR #$0,globalvarpointer+1
0002DB86 <AmiBlitz3.ab2@18750>   MOVEQ.l #$00,D7
0002DB8A <AmiBlitz3.ab2@18753>     BSR.w findlolib
0002DB8E <AmiBlitz3.ab2@18754>     BEQ.w JL_0_BA74
0002DB92 <AmiBlitz3.ab2@18755>     TST.w $C(A2)
0002DB96 <AmiBlitz3.ab2@18756>     BPL.w JL_0_B99A
0002DB98 <AmiBlitz3.ab2@18757>     MOVEA.l A2,A1
0002DB9C <AmiBlitz3.ab2@18758>     ADDA.l $12(A1),A1
0002DBA0 <AmiBlitz3.ab2@18759>     TST.w -$2(A1)
0002DBA4 <AmiBlitz3.ab2@18760>     BEQ.w JL_0_BA34
0002DBA8 <AmiBlitz3.ab2@18761>     MOVE.l -$A(A1),D1
0002DBAC <AmiBlitz3.ab2@18762>     LEA $6(A2,D1.L),A3
0002DBAE <AmiBlitz3.ab2@18765>       TST.w (A3)+
0002DBB2 <AmiBlitz3.ab2@18766>       BEQ.w JL_0_B9CC
0002DBB4 <AmiBlitz3.ab2@18767>         ADDQ.w #2,A3
0002DBB8 <AmiBlitz3.ab2@18768> BRA.w JL_0_B9C0
0002DBBC <AmiBlitz3.ab2@18771>     TST.l $4(A3)
0002DBC0 <AmiBlitz3.ab2@18772>     BEQ.w JL_0_BA34
0002DBC4 <AmiBlitz3.ab2@18773>       MOVE.w freemax(PC),D1
0002DBC8 <AmiBlitz3.ab2@18774>       BSR.w writeword
0002DBCC <AmiBlitz3.ab2@18775>       MOVE.w -$4(A1),D1
0002DBD0 <AmiBlitz3.ab2@18776>       BSR.w writeword
0002DBD6 <AmiBlitz3.ab2@18777>       MOVE.l free,D1
0002DBDA <AmiBlitz3.ab2@18778>       MOVE.w -$6(A1),D1
0002DBDE <AmiBlitz3.ab2@18779>       BSR.w writelong
0002DBE4 <AmiBlitz3.ab2@18780>       MOVE.l destpointer,-(A7)
0002DBE6 <AmiBlitz3.ab2@18781>       MOVEQ.l #$01,D1
0002DBEA <AmiBlitz3.ab2@18782>       MOVE.w -$2(A1),D2
0002DBEC <AmiBlitz3.ab2@18783>       LSL.w D2,D1
0002DBEE <AmiBlitz3.ab2@18784>       MOVE.w D1,-(A7)
0002DBF2 <AmiBlitz3.ab2@18785>       MOVE.l -$A(A1),D1
0002DBF6 <AmiBlitz3.ab2@18786>       BSR.w Amakelibsub
0002DBFA <AmiBlitz3.ab2@18787>       MOVE.w freemax3(PC),D1
0002DBFE <AmiBlitz3.ab2@18788>       BSR.w writeword
0002DC00 <AmiBlitz3.ab2@18789>       MOVE.w (A7)+,D1
0002DC04 <AmiBlitz3.ab2@18790>       BSR.w writeword
0002DC08 <AmiBlitz3.ab2@18791>       MOVE.l freemax2(PC),D1
0002DC0C <AmiBlitz3.ab2@18792>       BSR.w writelong
0002DC0E <AmiBlitz3.ab2@18793>       MOVE.l (A7)+,D1
0002DC14 <AmiBlitz3.ab2@18794>       SUB.l destpointer,D1
0002DC18 <AmiBlitz3.ab2@18795>       BSR.w writeword
0002DC1C <AmiBlitz3.ab2@18796>       MOVE.w freemax4(PC),D1
0002DC20 <AmiBlitz3.ab2@18797>       BSR.w writeword
0002DC24 <AmiBlitz3.ab2@18800>     MOVE.l $1C(A2),D1
0002DC28 <AmiBlitz3.ab2@18801>     BEQ.w JL_0_B99A
0002DC2C <AmiBlitz3.ab2@18803>     MOVE.w $4(A2),D1
0002DC30 <AmiBlitz3.ab2@18804>     CMP.w #-$2,D1
0002DC34 <AmiBlitz3.ab2@18805>     BNE.w JL_0_BA50
0002DC38 <AmiBlitz3.ab2@18806>       BSR.w makevsize
0002DC3C <AmiBlitz3.ab2@18807> BRA.w JL_0_BA60
0002DC40 <AmiBlitz3.ab2@18810>     CMP.w #-$12D,D1
0002DC44 <AmiBlitz3.ab2@18811>     BNE.w JL_0_BA60
0002DC48 <AmiBlitz3.ab2@18812>       BSR.w makessize
0002DC4C <AmiBlitz3.ab2@18813> BRA.w JL_0_BA60
0002DC50 <AmiBlitz3.ab2@18816>     MOVE.l $1C(A2),D1
0002DC58 <AmiBlitz3.ab2@18817>     MOVE.w #$FFFF,lasta6
0002DC5C <AmiBlitz3.ab2@18818>     BSR.w Amakelibsub
0002DC60 <AmiBlitz3.ab2@18819> BRA.w JL_0_B99A
0002DC62 <AmiBlitz3.ab2@18822> RTS
0002DC66 <AmiBlitz3.ab2@18826> freemax:   Dc.b $3F,$3C,$00,$00                            ;MOVE.W  #$0000,-(A7)
0002DC68 <AmiBlitz3.ab2@18828> freemax2:  Dc.b $53,$57                                    ;SUBQ.W  #1,(A7)
0002DC6C <AmiBlitz3.ab2@18829>            Dc.b $66,$00,$FF,$FC                            ;BNE.W freemax2
0002DC6E <AmiBlitz3.ab2@18830> freemax4:  Dc.b $54,$4F                                    ;ADDQ.W  #2,A7
0002DC72 <AmiBlitz3.ab2@18831> freemax3:  Dc.b $47,$EB,$00,$00                            ;LEA $0000(A3),A3
0002DC78 <AmiBlitz3.ab2@18836>   TST.b debugmode
0002DC7C <AmiBlitz3.ab2@18837>    BEQ.b chkstak__skip
0002DC82 <AmiBlitz3.ab2@18838>   TST.w debugversion
0002DC86 <AmiBlitz3.ab2@18839>    BNE.b chkstak__skip
0002DC8A <AmiBlitz3.ab2@18840>   MOVE.w #$C308,D1
0002DC8E <AmiBlitz3.ab2@18841> BRA.w Atokejsr
0002DC90 <AmiBlitz3.ab2@18844> RTS
0002DC98 <AmiBlitz3.ab2@18848>   MOVE.w #$FFFF,lasta6
0002DC9C <AmiBlitz3.ab2@18853>   MOVEM.l D0-d7/A0-a6,-(A7)
0002DCA4 <AmiBlitz3.ab2@18854>   MOVE.b #1,nostringopt
0002DCAA <AmiBlitz3.ab2@18855>   JSR searchinstr
0002DCAC <AmiBlitz3.ab2@18856>   MOVE.l A3,D1
0002DCAE <AmiBlitz3.ab2@18857>   SUB.l A2,D1
0002DCB2 <AmiBlitz3.ab2@18858>   BSR.w Amakelibsub
0002DCB6 <AmiBlitz3.ab2@18859>   MOVEM.l (A7)+,d0-d7/a0-a6
0002DCB8 <AmiBlitz3.ab2@18860> RTS
0002DCBE <AmiBlitz3.ab2@18867>   MOVE.l libisat,-(A7)                                   ;library write
0002DCC4 <AmiBlitz3.ab2@18868>   MOVE.l A2,libisat
0002DCC6 <AmiBlitz3.ab2@18870>   MOVEA.l A1,A2
0002DCC8 <AmiBlitz3.ab2@18871>   MOVE.w (A2)+,D1
0002DCCE <AmiBlitz3.ab2@18872>   MOVE.l a2,lastinstructionaddr
0002DCD2 <AmiBlitz3.ab2@18873>   ANDI.w #$FF,D1
0002DCD4 <AmiBlitz3.ab2@18874>   ADDA.w D1,A2
0002DCD6 <AmiBlitz3.ab2@18875>   EXG.l D0,A2
0002DCD8 <AmiBlitz3.ab2@18876>   ADDQ.l #1,D0
0002DCDC <AmiBlitz3.ab2@18877>   BCLR #$0,D0
0002DCDE <AmiBlitz3.ab2@18878>   EXG.l D0,A2
0002DCE2 <AmiBlitz3.ab2@18879> BRA.w JL_0_BB08
0002DCE8 <AmiBlitz3.ab2@18883>   MOVE.l libisat,-(A7)
0002DCEE <AmiBlitz3.ab2@18884>   MOVE.l A2,libisat
0002DCF0 <AmiBlitz3.ab2@18885>   MOVEA.l A3,A2
0002DCF4 <AmiBlitz3.ab2@18886> BRA.w JL_0_BB08
0002DCF6 <AmiBlitz3.ab2@18890>   MOVE.l a1,-(a7)
0002DCF8 <AmiBlitz3.ab2@18893>   MOVE.l d0,a0
0002DCFC <AmiBlitz3.ab2@18894>   MOVE.l $a(a0),d0
0002DCFE <AmiBlitz3.ab2@18895>   MOVE.l d0,a1
0002DD06 <AmiBlitz3.ab2@18896>   CMP.l #8,4(a1)
0002DD0A <AmiBlitz3.ab2@18897>   BLE 'norec
0002DD0C <AmiBlitz3.ab2@18898>   MOVE.l a0,-(a7)
0002DD12 <AmiBlitz3.ab2@18899>   MOVE.l typebase,-(a7)
0002DD14 <AmiBlitz3.ab2@18900>   MOVEQ #0,d0
0002DD18 <AmiBlitz3.ab2@18901>   MOVE.w 4(a0),d0
0002DD1E <AmiBlitz3.ab2@18902>   ADD.l d0,typebase
0002DD22 <AmiBlitz3.ab2@18903>   MOVE.l $4(a1),d0
0002DD26 <AmiBlitz3.ab2@18904>   BSR scantype
0002DD2C <AmiBlitz3.ab2@18905>   MOVE.l (a7)+,typebase
0002DD2E <AmiBlitz3.ab2@18906>   MOVE.l (a7)+,a0
0002DD34 <AmiBlitz3.ab2@18909>   CMP.l #newtype_string,d0
0002DD38 <AmiBlitz3.ab2@18910>   BNE 'nostring
0002DD3E <AmiBlitz3.ab2@18911>   ADDQ #2,a2offset
0002DD44 <AmiBlitz3.ab2@18912>   MOVE.l #$3f3c0000,d1
0002DD46 <AmiBlitz3.ab2@18913>   MOVEQ #0,d0
0002DD4A <AmiBlitz3.ab2@18914>   MOVE.w 4(a0),d0
0002DD50 <AmiBlitz3.ab2@18915>   ADD.l typebase,d0
0002DD52 <AmiBlitz3.ab2@18916>   MOVE.w d0,d1
0002DD56 <AmiBlitz3.ab2@18917>   BSR writelong
0002DD5C <AmiBlitz3.ab2@18918>   TST.b debugmode
0002DD60 <AmiBlitz3.ab2@18919>   BEQ 'l1a
0002DD62 <AmiBlitz3.ab2@18920>   MOVE.l d1,-(a7)
0002DD68 <AmiBlitz3.ab2@18921>   MOVE.l #$c308,d1
0002DD6E <AmiBlitz3.ab2@18922>   JSR Atokejsr
0002DD70 <AmiBlitz3.ab2@18923>   MOVE.l (a7)+,d1
0002DD74 <AmiBlitz3.ab2@18926>   TST.w 8(a0)
0002DD78 <AmiBlitz3.ab2@18927>   BEQ 'nostring
0002DD7C <AmiBlitz3.ab2@18928>   MOVEM.l d2/d3,-(a7)
0002DD7E <AmiBlitz3.ab2@18929>   MOVE.l d1,d2
0002DD80 <AmiBlitz3.ab2@18930>   MOVEQ #0,d3
0002DD84 <AmiBlitz3.ab2@18931>   MOVE.w 8(a0),d3
0002DD86 <AmiBlitz3.ab2@18932>   SUBQ.l #1,d3
0002DD8A <AmiBlitz3.ab2@18933>   BEQ 'nostring2
0002DD8C <AmiBlitz3.ab2@18936>   ADDQ.l #4,d2
0002DD8E <AmiBlitz3.ab2@18937>   MOVE.l d2,d1
0002DD92 <AmiBlitz3.ab2@18938>   BSR writelong
0002DD98 <AmiBlitz3.ab2@18939>   TST.b debugmode
0002DD9C <AmiBlitz3.ab2@18940>   BEQ 'l1
0002DDA2 <AmiBlitz3.ab2@18941>   MOVE.l #$c308,d1
0002DDA8 <AmiBlitz3.ab2@18942>   JSR Atokejsr
0002DDAE <AmiBlitz3.ab2@18945>   ADDQ #2,a2offset
0002DDB0 <AmiBlitz3.ab2@18946>   SUBQ.l #1,d3
0002DDB4 <AmiBlitz3.ab2@18947>   BNE 'loop
0002DDB8 <AmiBlitz3.ab2@18950>   MOVEM.l (a7)+,d2/d3
0002DDBA <AmiBlitz3.ab2@18953>   MOVE.l (a0),d0
0002DDBE <AmiBlitz3.ab2@18954>   BNE 'more
0002DDC0 <AmiBlitz3.ab2@18955>   MOVE.l (a7)+,a1
0002DDC2 <AmiBlitz3.ab2@18956> RTS
0002DDC6 <AmiBlitz3.ab2@18959> libisat:   Ds.l 1
0002DDCC <AmiBlitz3.ab2@18965>   MOVE.l libisat,-(A7)                                   
0002DDD2 <AmiBlitz3.ab2@18966>   MOVE.l A2,libisat
0002DDD6 <AmiBlitz3.ab2@18967>   LEA $6(A2,D1.L),A2
0002DDDE <AmiBlitz3.ab2@18971>   CMP.l #$3e19436c,$1c-8(a2)                               ;clear type
0002DDE2 <AmiBlitz3.ab2@18972>   BEQ 'dowritevar
0002DDEA <AmiBlitz3.ab2@18973>   CMP.l #$3e18436f,$1c-8(a2)                               ;copy type
0002DDEE <AmiBlitz3.ab2@18974>   BEQ 'dowritevar
0002DDF6 <AmiBlitz3.ab2@18975>   CMP.l #$3e175265,$1c(a2)
0002DDFA <AmiBlitz3.ab2@18976>   BEQ 'dowritevar
0002DE02 <AmiBlitz3.ab2@18977>   CMP.l #$3e165772,$1c(a2)
0002DE06 <AmiBlitz3.ab2@18978>   BNE 'nowritef
0002DE0A <AmiBlitz3.ab2@18981>   MOVEM.l a0-a2/d2,-(a7)
0002DE0C <AmiBlitz3.ab2@18982>   MOVEQ #0,d1
0002DE16 <AmiBlitz3.ab2@18983>   MOVE.l #0,typebase
0002DE1A <AmiBlitz3.ab2@18984>   MOVE.l $a(a3),a0
0002DE1E <AmiBlitz3.ab2@18985>   MOVE.l $4(a0),d0
0002DE24 <AmiBlitz3.ab2@18986>   CMP.l #8,d0
0002DE28 <AmiBlitz3.ab2@18987>   BLE 'notype
0002DE2C <AmiBlitz3.ab2@18988>   BSR scantype
0002DE32 <AmiBlitz3.ab2@18991>   MOVE.l #$3f3c0000,d1
0002DE38 <AmiBlitz3.ab2@18992>   MOVE.w a2offset,d1
0002DE3C <AmiBlitz3.ab2@18993>   BSR writelong
0002DE42 <AmiBlitz3.ab2@18994>   MOVE.l #$3f3c0000,d1
0002DE46 <AmiBlitz3.ab2@18995>   MOVE.l $a(a3),a0
0002DE4A <AmiBlitz3.ab2@18996>   MOVE.w 8(a0),d1
0002DE4E <AmiBlitz3.ab2@18997>   BSR writelong
0002DE54 <AmiBlitz3.ab2@18998>   MOVE.l #$3f3cab12,d1
0002DE58 <AmiBlitz3.ab2@18999>   BSR writelong
0002DE5E <AmiBlitz3.ab2@19000>   ADDQ.w #6,a2offset
0002DE62 <AmiBlitz3.ab2@19001>   MOVEM.l (a7)+,a0-a2/d2
0002DE68 <AmiBlitz3.ab2@19004>   TST.b fpu
0002DE6C <AmiBlitz3.ab2@19005>   BEQ 'nofpu2
0002DE74 <AmiBlitz3.ab2@19006>   CMP.l #$496e7400,$1a(a2)
0002DE78 <AmiBlitz3.ab2@19007>   BNE 'noint
0002DE7A <AmiBlitz3.ab2@19008>   MOVEQ #0,d1
0002DE80 <AmiBlitz3.ab2@19009>   SUBQ.l #8,destpointer                                    ;fpu int
0002DE86 <AmiBlitz3.ab2@19010>   CLR.w a2offset
0002DE8A <AmiBlitz3.ab2@19011>   CMP.b #2,d2
0002DE8E <AmiBlitz3.ab2@19012>   BGT 'noword
0002DE92 <AmiBlitz3.ab2@19013>   MOVE.w #$48c0,d1
0002DE98 <AmiBlitz3.ab2@19014>   OR.w regnumstore,d1
0002DE9C <AmiBlitz3.ab2@19015>   BSR writeword
0002DEA0 <AmiBlitz3.ab2@19016> BRA 'exit2
0002DEA4 <AmiBlitz3.ab2@19019>    CMP.b #3,d2
0002DEA8 <AmiBlitz3.ab2@19020>         BNE 'nolong
0002DEAC <AmiBlitz3.ab2@19021> BRA 'exit2
0002DEB0 <AmiBlitz3.ab2@19024>    CMP.b #4,d2
0002DEB4 <AmiBlitz3.ab2@19025>         BNE 'noquick
0002DEB8 <AmiBlitz3.ab2@19026>         MOVE.w #$e080,d1
0002DEBE <AmiBlitz3.ab2@19027>         OR.w regnumstore,d1
0002DEC2 <AmiBlitz3.ab2@19028>         BSR writeword
0002DEC6 <AmiBlitz3.ab2@19029>         MOVE.w #$e080,d1
0002DECC <AmiBlitz3.ab2@19030>         OR.w regnumstore,d1
0002DED0 <AmiBlitz3.ab2@19031>         BSR writeword
0002DED4 <AmiBlitz3.ab2@19032> BRA 'exit2
0002DED6 <AmiBlitz3.ab2@19035>         MOVEQ #0,d0
0002DED8 <AmiBlitz3.ab2@19036>         MOVEQ #0,d1
0002DEDE <AmiBlitz3.ab2@19037>         MOVE.w regnumstore,d0
0002DEE0 <AmiBlitz3.ab2@19038>         ASL.l #7,d0
0002DEE6 <AmiBlitz3.ab2@19039>         OR.l #$f23c4428,d1                                 ;fsub.s 0.5,fpx
0002DEE8 <AmiBlitz3.ab2@19040>         OR.l d0,d1
0002DEEE <AmiBlitz3.ab2@19042>         MOVE.l #$3f000000,d1
0002DEF0 <AmiBlitz3.ab2@19044>         MOVEQ #0,d0
0002DEF2 <AmiBlitz3.ab2@19045>         MOVEQ #0,d1
0002DEF8 <AmiBlitz3.ab2@19046>         MOVE.w regnumstore,d0
0002DEFA <AmiBlitz3.ab2@19047>         ASL.l #7,d0
0002DEFC <AmiBlitz3.ab2@19048>         MOVE.l d0,d1
0002DF02 <AmiBlitz3.ab2@19049>         OR.l #$f2000003,d1                                 ;fintrz fpx
0002DF04 <AmiBlitz3.ab2@19050>         ASL.l #3,d0
0002DF06 <AmiBlitz3.ab2@19051>         OR.l d0,d1
0002DF0A <AmiBlitz3.ab2@19052>         BSR writelong
0002DF0C <AmiBlitz3.ab2@19053>         MOVEQ #0,d0
0002DF12 <AmiBlitz3.ab2@19054>         MOVE.w regnumstore,d0
0002DF14 <AmiBlitz3.ab2@19055>         ASL.l #7,d0
0002DF1A <AmiBlitz3.ab2@19056>         MOVE.l #$f2006000,d1                               ;fmove.l fp0,d0
0002DF1C <AmiBlitz3.ab2@19057>         OR.l d0,d1
0002DF1E <AmiBlitz3.ab2@19058>         ASL.l #1,d0
0002DF20 <AmiBlitz3.ab2@19059>         ASL.l #8,d0
0002DF22 <AmiBlitz3.ab2@19060>         OR.l d0,d1
0002DF26 <AmiBlitz3.ab2@19061> BRA 'exit
0002DF2C <AmiBlitz3.ab2@19064>   CMP.w #$3c01,24(a2)
0002DF30 <AmiBlitz3.ab2@19065>   BNE 'noval
0002DF32 <AmiBlitz3.ab2@19066>   MOVE.l a2,-(a7)
0002DF36 <AmiBlitz3.ab2@19067>   BSR.w JL_0_BB14
0002DF38 <AmiBlitz3.ab2@19068>   MOVE.l (a7)+,a2
0002DF3C <AmiBlitz3.ab2@19069> BRA 'exit2
0002DF44 <AmiBlitz3.ab2@19086>   CMP.l #$41627300,$1a(a2)
0002DF48 <AmiBlitz3.ab2@19087>   BNE 'noabs
0002DF4A <AmiBlitz3.ab2@19088>   MOVEQ #0,d1
0002DF50 <AmiBlitz3.ab2@19089>   MOVE.w regnumstore,d1
0002DF52 <AmiBlitz3.ab2@19090>   MOVE.w d1,d0
0002DF54 <AmiBlitz3.ab2@19091>   ASL.w #7,d1
0002DF56 <AmiBlitz3.ab2@19092>   ASL.w #8,d0
0002DF58 <AmiBlitz3.ab2@19093>   ASL.w #2,d0
0002DF5A <AmiBlitz3.ab2@19094>   OR.w d0,d1
0002DF60 <AmiBlitz3.ab2@19095>   SUBQ.l #8,destpointer                                    ;fpu abs
0002DF64 <AmiBlitz3.ab2@19096>   MOVEM.l d3/d1,-(a7)
0002DF68 <AmiBlitz3.ab2@19097>   MOVE.w #5,d3
0002DF6A <AmiBlitz3.ab2@19098>   EXG d2,d3
0002DF70 <AmiBlitz3.ab2@19099>   MOVE.w regnum,-(a7)
0002DF7A <AmiBlitz3.ab2@19100>   MOVE.w regnumstore,regnum
0002DF7E <AmiBlitz3.ab2@19101>   BSR writeconvertcode
0002DF84 <AmiBlitz3.ab2@19102>   MOVE.w (a7)+,regnum
0002DF86 <AmiBlitz3.ab2@19103>   EXG d2,d3
0002DF8A <AmiBlitz3.ab2@19104>   MOVEM.l (a7)+,d3/d1
0002DF90 <AmiBlitz3.ab2@19105>   OR.l #$f2000018,d1
0002DF96 <AmiBlitz3.ab2@19106>   CLR.w a2offset
0002DF9A <AmiBlitz3.ab2@19107> BRA 'exit
0002DF9E <AmiBlitz3.ab2@19110>   CMP.b #5,d2
0002DFA2 <AmiBlitz3.ab2@19111>   BNE 'nofpu2
0002DFA6 <AmiBlitz3.ab2@19112>   MOVE.b 24(a2),d0
0002DFAA <AmiBlitz3.ab2@19113>   CMP.b #$60,d0                                            ;nolib $edxx
0002DFAE <AmiBlitz3.ab2@19114>   BNE 'nofpu
0002DFB0 <AmiBlitz3.ab2@19115>   MOVEQ #0,d1
0002DFB6 <AmiBlitz3.ab2@19116>   MOVE.w regnumstore,d1
0002DFB8 <AmiBlitz3.ab2@19117>   MOVE.w d1,d0
0002DFBA <AmiBlitz3.ab2@19118>   ASL.w #7,d1
0002DFBC <AmiBlitz3.ab2@19119>   ASL.w #8,d0
0002DFBE <AmiBlitz3.ab2@19120>   ASL.w #2,d0
0002DFC0 <AmiBlitz3.ab2@19121>   OR.w d0,d1
0002DFC4 <AmiBlitz3.ab2@19122>   MOVE.b 25(a2),d0
0002DFC8 <AmiBlitz3.ab2@19123>   CMP.b #5,d0
0002DFCC <AmiBlitz3.ab2@19124>   BNE 'nocos
0002DFD2 <AmiBlitz3.ab2@19125>   OR.l #$f200001d,d1                                       ;fpu cos
0002DFD6 <AmiBlitz3.ab2@19126> BRA 'exit
0002DFDA <AmiBlitz3.ab2@19129>   CMP.b #$c,d0
0002DFDE <AmiBlitz3.ab2@19130>   BNE 'nosqr
0002DFE4 <AmiBlitz3.ab2@19131>   OR.l #$f2000004,d1                                       ;fpu sqr
0002DFE8 <AmiBlitz3.ab2@19132> BRA 'exit
0002DFEC <AmiBlitz3.ab2@19135>   CMP.b #$d,d0
0002DFF0 <AmiBlitz3.ab2@19136>   BNE 'notan
0002DFF6 <AmiBlitz3.ab2@19137>   OR.l #$f200000f,d1                                       ;fpu tan
0002DFFA <AmiBlitz3.ab2@19138> BRA 'exit
0002DFFE <AmiBlitz3.ab2@19141>   CMP.b #$a,d0
0002E002 <AmiBlitz3.ab2@19142>   BNE 'nosin
0002E008 <AmiBlitz3.ab2@19143>   OR.l #$f200000e,d1                                       ;fpu sin
0002E00C <AmiBlitz3.ab2@19144> BRA 'exit
0002E010 <AmiBlitz3.ab2@19147>   CMP.b #$3,d0
0002E014 <AmiBlitz3.ab2@19148>   BNE 'noasin
0002E01A <AmiBlitz3.ab2@19149>   OR.l #$f200000c,d1                                       ;fpu asin
0002E01E <AmiBlitz3.ab2@19150> BRA 'exit
0002E022 <AmiBlitz3.ab2@19153>   CMP.b #$2,d0
0002E026 <AmiBlitz3.ab2@19154>   BNE 'noacos
0002E02C <AmiBlitz3.ab2@19155>   OR.l #$f200001c,d1                                       ;fpu acos
0002E030 <AmiBlitz3.ab2@19156> BRA 'exit
0002E034 <AmiBlitz3.ab2@19159>   CMP.b #$4,d0
0002E038 <AmiBlitz3.ab2@19160>   BNE 'noatan
0002E03E <AmiBlitz3.ab2@19161>   OR.l #$f200000a,d1                                       ;fpu atan
0002E042 <AmiBlitz3.ab2@19162> BRA 'exit
0002E046 <AmiBlitz3.ab2@19165>   CMP.b #$e,d0
0002E04A <AmiBlitz3.ab2@19166>   BNE 'nohtan
0002E050 <AmiBlitz3.ab2@19167>   OR.l #$f2000009,d1                                       ;fpu htan
0002E054 <AmiBlitz3.ab2@19168> BRA 'exit
0002E058 <AmiBlitz3.ab2@19171>   CMP.b #$6,d0
0002E05C <AmiBlitz3.ab2@19172>   BNE 'nohcos
0002E062 <AmiBlitz3.ab2@19173>   OR.l #$f2000019,d1                                       ;fpu hcos
0002E066 <AmiBlitz3.ab2@19174> BRA 'exit
0002E06A <AmiBlitz3.ab2@19177>   CMP.b #$b,d0
0002E06E <AmiBlitz3.ab2@19178>   BNE 'nohsin
0002E074 <AmiBlitz3.ab2@19179>   OR.l #$f2000002,d1                                       ;fpu hsin
0002E078 <AmiBlitz3.ab2@19180> BRA 'exit
0002E07C <AmiBlitz3.ab2@19183>   CMP.b #$9,d0
0002E080 <AmiBlitz3.ab2@19184>   BNE 'nolog
0002E086 <AmiBlitz3.ab2@19185>   OR.l #$f2000014,d1                                       ;fpu log
0002E08A <AmiBlitz3.ab2@19186> BRA 'exit
0002E08E <AmiBlitz3.ab2@19189>   CMP.b #$8,d0
0002E092 <AmiBlitz3.ab2@19190>   BNE 'nolog10
0002E098 <AmiBlitz3.ab2@19191>   OR.l #$f2000015,d1                                       ;fpu log10
0002E09C <AmiBlitz3.ab2@19192> BRA 'exit
0002E0A0 <AmiBlitz3.ab2@19195>   CMP.b #$7,d0
0002E0A4 <AmiBlitz3.ab2@19196>   BNE 'noexp
0002E0AA <AmiBlitz3.ab2@19197>   OR.l #$f2000010,d1                                       ;fpu exp
0002E0AE <AmiBlitz3.ab2@19198> BRA 'exit
0002E0B4 <AmiBlitz3.ab2@19201>   LEA fpuerr,a0
0002E0B6 <AmiBlitz3.ab2@19202>   MOVE.l a0,-(a7)
0002E0BC <AmiBlitz3.ab2@19203> JMP handle_compileerror
0002E0C0 <AmiBlitz3.ab2@19207>   CMP.b #$3c,d0
0002E0C4 <AmiBlitz3.ab2@19208>   BNE 'nofpu2
0002E0C6 <AmiBlitz3.ab2@19209>   MOVEQ #0,d1
0002E0CC <AmiBlitz3.ab2@19210>       MOVE.w regnumstore,d1
0002E0CE <AmiBlitz3.ab2@19211>       MOVE.w d1,d0
0002E0D0 <AmiBlitz3.ab2@19212>       ASL.w #7,d1
0002E0D2 <AmiBlitz3.ab2@19213>       ASL.w #8,d0
0002E0D4 <AmiBlitz3.ab2@19214>       ASL.w #2,d0
0002E0D6 <AmiBlitz3.ab2@19215>       OR.w d0,d1
0002E0DC <AmiBlitz3.ab2@19216>       CMP.b #$03,25(a2)
0002E0E0 <AmiBlitz3.ab2@19217>       BNE 'nosgn
0002E0E6 <AmiBlitz3.ab2@19220>       SUBQ.l #8,destpointer                                ;fpu sgn
0002E0EC <AmiBlitz3.ab2@19221>         OR.l #$f200003a,d1
0002E0F0 <AmiBlitz3.ab2@19222>         BSR writelong
0002E0F6 <AmiBlitz3.ab2@19223>         CLR.w a2offset
0002E0FC <AmiBlitz3.ab2@19224>          MOVE.l #$F28E0006,d1
0002E100 <AmiBlitz3.ab2@19225>          BSR writelong
0002E106 <AmiBlitz3.ab2@19226>   MOVE.l #$7000600a,d1
0002E10A <AmiBlitz3.ab2@19227>   BSR writelong
0002E110 <AmiBlitz3.ab2@19228>   MOVE.l #$70014840,d1
0002E114 <AmiBlitz3.ab2@19229>   BSR writelong
0002E11A <AmiBlitz3.ab2@19230>   MOVE.l #$F292,d1
0002E11E <AmiBlitz3.ab2@19231>   BSR writeword
0002E124 <AmiBlitz3.ab2@19232>   MOVE.l #$000470FF,d1
0002E128 <AmiBlitz3.ab2@19233> BRA 'exit
0002E130 <AmiBlitz3.ab2@19236>   CMP.l #"Frac",$1a(a2)
0002E134 <AmiBlitz3.ab2@19237>   BNE 'nofrac
0002E13A <AmiBlitz3.ab2@19238> JMP notwork
0002E13E <AmiBlitz3.ab2@19279> BRA 'exit
0002E142 <AmiBlitz3.ab2@19283>   BSR.w JL_0_BB14                                          ;write lib code
0002E148 <AmiBlitz3.ab2@19284>   MOVE.l (A7)+,libisat
0002E14A <AmiBlitz3.ab2@19285> RTS
0002E14E <AmiBlitz3.ab2@19288>   BSR writelong
0002E154 <AmiBlitz3.ab2@19291>   MOVE.l (A7)+,libisat
0002E156 <AmiBlitz3.ab2@19292> RTS
0002E15A <AmiBlitz3.ab2@19296>   BSR.w fetchregs
0002E160 <AmiBlitz3.ab2@19297>   TST.b debugmode
0002E164 <AmiBlitz3.ab2@19298>    BEQ.w JL_0_BB76
0002E166 <AmiBlitz3.ab2@19299>   MOVE.l (A2),D1
0002E16A <AmiBlitz3.ab2@19300>   OR.l $8(A2),D1
0002E16E <AmiBlitz3.ab2@19301>   BCLR #$0,D1
0002E170 <AmiBlitz3.ab2@19302>   TST.l D1
0002E174 <AmiBlitz3.ab2@19303>    BEQ.w JL_0_BB76
0002E176 <AmiBlitz3.ab2@19304>   MOVE.l (A2)+,D1
0002E17A <AmiBlitz3.ab2@19305>   BTST #$0,D1
0002E17E <AmiBlitz3.ab2@19306>    BEQ.w JL_0_BB60
0002E184 <AmiBlitz3.ab2@19307>   TST.w blitzmode
0002E188 <AmiBlitz3.ab2@19308>    BPL.w blitzerr
0002E18E <AmiBlitz3.ab2@19309>   TST.b debugmode
0002E192 <AmiBlitz3.ab2@19310>    BEQ.w JL_0_BB5C
0002E194 <AmiBlitz3.ab2@19311>   MOVE.l D1,-(A7)
0002E198 <AmiBlitz3.ab2@19312>   MOVE.w #$C311,D1
0002E19C <AmiBlitz3.ab2@19313>    BSR.w makebtst
0002E19E <AmiBlitz3.ab2@19314>   MOVE.l (A7)+,D1
0002E1A2 <AmiBlitz3.ab2@19317>   BCLR #$0,D1
0002E1A4 <AmiBlitz3.ab2@19320>   TST.l D1
0002E1A8 <AmiBlitz3.ab2@19321>    BSR.w JL_0_BBC6
0002E1AA <AmiBlitz3.ab2@19322>   MOVE.l (A2)+,D1
0002E1AE <AmiBlitz3.ab2@19323>    BSR.w JL_0_BB98
0002E1B0 <AmiBlitz3.ab2@19324>   MOVE.l (A2)+,D1
0002E1B4 <AmiBlitz3.ab2@19325>    BSR.w JL_0_BBC6
0002E1B8 <AmiBlitz3.ab2@19326> BRA.w JL_0_BB90
0002E1BE <AmiBlitz3.ab2@19329>   BTST #$0,$3(A2)
0002E1C2 <AmiBlitz3.ab2@19330>    BEQ.w JL_0_BB88
0002E1C6 <AmiBlitz3.ab2@19331>   MOVE.w blitzmode(PC),D1
0002E1CA <AmiBlitz3.ab2@19332>    BPL.w blitzerr
0002E1CE <AmiBlitz3.ab2@19335>   MOVE.l $4(A2),D1
0002E1D2 <AmiBlitz3.ab2@19336>    BSR.w JL_0_BB98
0002E1D8 <AmiBlitz3.ab2@19339>   MOVEA.l libisat,A2
0002E1DA <AmiBlitz3.ab2@19340> RTS
0002E1DE <AmiBlitz3.ab2@19343>   BTST #$0,D1
0002E1E2 <AmiBlitz3.ab2@19344>    BEQ.w JL_0_BBC4
0002E1E8 <AmiBlitz3.ab2@19345>   TST.w blitzmode
0002E1EC <AmiBlitz3.ab2@19346>    BMI.w amigaerr
0002E1F2 <AmiBlitz3.ab2@19347>   TST.b debugmode
0002E1F6 <AmiBlitz3.ab2@19348>    BEQ.w JL_0_BBC0
0002E1F8 <AmiBlitz3.ab2@19349>   MOVE.l D1,-(A7)
0002E1FC <AmiBlitz3.ab2@19350>   MOVE.w #$C312,D1
0002E200 <AmiBlitz3.ab2@19351>    BSR.w makebtst
0002E202 <AmiBlitz3.ab2@19352>   MOVE.l (A7)+,D1
0002E206 <AmiBlitz3.ab2@19355>   BCLR #$0,D1
0002E208 <AmiBlitz3.ab2@19358>   TST.l D1
0002E20C <AmiBlitz3.ab2@19361>    BEQ.w JL_0_BBD2
0002E20E <AmiBlitz3.ab2@19362>   MOVE.l A1,-(A7)
0002E212 <AmiBlitz3.ab2@19363>    BSR.w JL_0_BBD4
0002E214 <AmiBlitz3.ab2@19364>   MOVEA.l (A7)+,A1
0002E216 <AmiBlitz3.ab2@19367> RTS
0002E21C <AmiBlitz3.ab2@19370>   MOVEA.l libisat,A0
0002E222 <AmiBlitz3.ab2@19371>   TST.w cfetchmode
0002E226 <AmiBlitz3.ab2@19372>    BEQ.w JL_0_BBF6
0002E228 <AmiBlitz3.ab2@19373>   ADD.l A0,D1
0002E22A <AmiBlitz3.ab2@19374>   MOVE.l D1,-(A7)
0002E22E <AmiBlitz3.ab2@19375>   MOVE.w #$4EB9,D1
0002E232 <AmiBlitz3.ab2@19376>    BSR.w writeword
0002E234 <AmiBlitz3.ab2@19377>   MOVE.l (A7)+,D1
0002E238 <AmiBlitz3.ab2@19378> BRA.w writelong
0002E23C <AmiBlitz3.ab2@19381>   LEA $0(A0,D1.L),A1
0002E242 <AmiBlitz3.ab2@19382>   CLR.w inline
0002E246 <AmiBlitz3.ab2@19385>   CMPI.b #$A0,(A1)+
0002E24A <AmiBlitz3.ab2@19386>    BNE.w JL_0_BC68
0002E24C <AmiBlitz3.ab2@19387>   TST.b (A1)+
0002E250 <AmiBlitz3.ab2@19388>    BEQ.w JL_0_BC18
0002E256 <AmiBlitz3.ab2@19389>   CMPI.b #$1,-$1(A1)
0002E25A <AmiBlitz3.ab2@19390>    BEQ.w JL_0_BC24
0002E260 <AmiBlitz3.ab2@19393>   MOVE.w (A1)+,inline
0002E262 <AmiBlitz3.ab2@19394>   ADDQ.l #4,D1
0002E266 <AmiBlitz3.ab2@19395> BRA.w JL_0_BC00
0002E26C <AmiBlitz3.ab2@19398>   TST.w blitzmode
0002E270 <AmiBlitz3.ab2@19399>    BPL.w JL_0_BC4A
0002E276 <AmiBlitz3.ab2@19400>   TST.b debugmode
0002E27A <AmiBlitz3.ab2@19401>    BEQ.w JL_0_BC40
0002E27E <AmiBlitz3.ab2@19402>   MOVE.w #$C311,D1
0002E282 <AmiBlitz3.ab2@19403>    BSR.w makebtst
0002E284 <AmiBlitz3.ab2@19406>   MOVE.l (A1)+,D1
0002E288 <AmiBlitz3.ab2@19407>   LEA $0(A0,D1.L),A1
0002E28C <AmiBlitz3.ab2@19408> BRA.w JL_0_BC00
0002E292 <AmiBlitz3.ab2@19411>   TST.b debugmode
0002E296 <AmiBlitz3.ab2@19412>    BEQ.w JL_0_BC60
0002E298 <AmiBlitz3.ab2@19413>   MOVE.l D1,-(A7)
0002E29C <AmiBlitz3.ab2@19414>   MOVE.w #$C312,D1
0002E2A0 <AmiBlitz3.ab2@19415>    BSR.w makebtst
0002E2A2 <AmiBlitz3.ab2@19416>   MOVE.l (A7)+,D1
0002E2A4 <AmiBlitz3.ab2@19419>   ADDQ.w #4,A1
0002E2A6 <AmiBlitz3.ab2@19420>   ADDQ.l #6,D1
0002E2AA <AmiBlitz3.ab2@19421> BRA.w JL_0_BC00
0002E2B0 <AmiBlitz3.ab2@19424>   TST.w inline
0002E2B4 <AmiBlitz3.ab2@19425>    BEQ.w JL_0_BC7E
0002E2B6 <AmiBlitz3.ab2@19426>   SUBQ.w #1,A1
0002E2B8 <AmiBlitz3.ab2@19427>   MOVEA.l A1,A0
0002E2BC <AmiBlitz3.ab2@19428>   ADDA.w inline(PC),A1
0002E2C0 <AmiBlitz3.ab2@19429> BRA.w pokecode2
0002E2C4 <AmiBlitz3.ab2@19432>   MOVEM.l a0/D1,-(A7)
0002E2CA <AmiBlitz3.ab2@19433>   TST.w debugversion
0002E2CE <AmiBlitz3.ab2@19434>   BEQ 'l11
0002E2D6 <AmiBlitz3.ab2@19435>   BTST #$7,link_debuginfo
0002E2DA <AmiBlitz3.ab2@19436>   BEQ.w 'l11
0002E2E0 <AmiBlitz3.ab2@19437>   MOVE.l lastinstruction,d1
0002E2E4 <AmiBlitz3.ab2@19438>   BEQ 'l11
0002E2EA <AmiBlitz3.ab2@19439>   CLR.l lastinstruction
0002E2F0 <AmiBlitz3.ab2@19440>   CMP.l #$e000,d1
0002E2F4 <AmiBlitz3.ab2@19441>   BGE 'ln99
0002E2FA <AmiBlitz3.ab2@19442>   LEA notf,a0
0002E300 <AmiBlitz3.ab2@19443>   CMP.l #$c601,d1
0002E304 <AmiBlitz3.ab2@19444>   BNE 'ln1
0002E30A <AmiBlitz3.ab2@19445>   LEA strcpy,a0
0002E30E <AmiBlitz3.ab2@19446> BRA 'ln3
0002E314 <AmiBlitz3.ab2@19449>   CMP.l #$c700,d1
0002E318 <AmiBlitz3.ab2@19450>   BNE 'ln2
0002E31E <AmiBlitz3.ab2@19451>   LEA strvar,a0
0002E322 <AmiBlitz3.ab2@19452> BRA 'ln3
0002E328 <AmiBlitz3.ab2@19455>   CMP.l #$ce00,d1
0002E32C <AmiBlitz3.ab2@19456>   BNE 'ln4
0002E332 <AmiBlitz3.ab2@19457>   LEA strcmp,a0
0002E336 <AmiBlitz3.ab2@19458> BRA 'ln3
0002E33C <AmiBlitz3.ab2@19461>   CMP.l #$ca00,d1
0002E340 <AmiBlitz3.ab2@19462>   BNE 'ln5
0002E346 <AmiBlitz3.ab2@19463>   LEA qmul,a0
0002E34A <AmiBlitz3.ab2@19464> BRA 'ln3
0002E350 <AmiBlitz3.ab2@19467>   CMP.l #$d000,d1
0002E354 <AmiBlitz3.ab2@19468>      BNE 'ln6
0002E35A <AmiBlitz3.ab2@19469>      LEA _MaxLen,a0
0002E35E <AmiBlitz3.ab2@19470> BRA 'ln3
0002E364 <AmiBlitz3.ab2@19473>   CMP.l #$cb00,d1
0002E368 <AmiBlitz3.ab2@19474>   BNE 'ln3
0002E36E <AmiBlitz3.ab2@19475>   LEA qdiv,a0
0002E372 <AmiBlitz3.ab2@19476> BRA 'ln3
0002E374 <AmiBlitz3.ab2@19479>   MOVE.l d1,a0
0002E378 <AmiBlitz3.ab2@19480>   LEA $8(a0),a0
0002E37C <AmiBlitz3.ab2@19483>   CMP.w #$ffff,(a0)+
0002E380 <AmiBlitz3.ab2@19484>   BNE 'l1
0002E384 <AmiBlitz3.ab2@19485>   LEA 6(a0),a0
0002E388 <AmiBlitz3.ab2@19488>   MOVEM.l a1/a2/d7/d2,-(a7)
0002E38A <AmiBlitz3.ab2@19489>   MOVEQ #0,d2
0002E390 <AmiBlitz3.ab2@19490>   LEA ptr_parameterstore,a1
0002E392 <AmiBlitz3.ab2@19493>   ADDQ.l #1,d2
0002E394 <AmiBlitz3.ab2@19494>   MOVE.b (a0)+,d0
0002E398 <AmiBlitz3.ab2@19495> 
0002E39C <AmiBlitz3.ab2@19496>   BNE 'nodollar
0002E3A0 <AmiBlitz3.ab2@19497>   MOVE.b #"S",d0
0002E3A4 <AmiBlitz3.ab2@19499>   CMP.b #"?",d0
0002E3A8 <AmiBlitz3.ab2@19500>   BEQ 'nolabelwrite
0002E3AA <AmiBlitz3.ab2@19501>   MOVE.b d0,(a1)+
0002E3AE <AmiBlitz3.ab2@19502>   BNE 'l2
0002E3B4 <AmiBlitz3.ab2@19503>   MOVE.w #"__",-1(a1)
0002E3B6 <AmiBlitz3.ab2@19504>   ADDQ.l #2,d2
0002E3BA <AmiBlitz3.ab2@19505>   CLR.b 1(a1)
0002E3C0 <AmiBlitz3.ab2@19506>   JSR findlabel2
0002E3C4 <AmiBlitz3.ab2@19507>   BEQ 'l3
0002E3CA <AmiBlitz3.ab2@19508>   JSR addlabelhash
0002E3CE <AmiBlitz3.ab2@19511>   CLR.l 4(a2)
0002E3D2 <AmiBlitz3.ab2@19512>   MOVE.l $14(a7),a0
0002E3D6 <AmiBlitz3.ab2@19513>   MOVE.l $10(a7),d1
0002E3DA <AmiBlitz3.ab2@19514>   SUB.l $12(a0),d1
0002E3DE <AmiBlitz3.ab2@19515>   ADD.l $28(a0),d1
0002E3E2 <AmiBlitz3.ab2@19516>   MOVE.l d1,8(a2)
0002E3E6 <AmiBlitz3.ab2@19517> 'nolabelwrite MOVEM.l (a7)+,a1/a2/d7/d2
0002E3EC <AmiBlitz3.ab2@19520>   TST.b typecheck
0002E3F0 <AmiBlitz3.ab2@19521>   BEQ 'p1
0002E3F6 <AmiBlitz3.ab2@19522>   MOVE.l lasttoken,d1
0002E3FC <AmiBlitz3.ab2@19523>   CMP.l #$da01,d1                                          ;poke
0002E400 <AmiBlitz3.ab2@19524>   BEQ 'lp1
0002E406 <AmiBlitz3.ab2@19525>   CMP.l #$da02,d1                                          ;peek
0002E40A <AmiBlitz3.ab2@19526>   BNE 'p1
0002E410 <AmiBlitz3.ab2@19529>   TST.b peekaddrsize
0002E414 <AmiBlitz3.ab2@19530>   BEQ 'p1
0002E41C <AmiBlitz3.ab2@19531>   CMP.b #3,peekaddrsize
0002E420 <AmiBlitz3.ab2@19532>   BNE errormsg_onlylong
0002E426 <AmiBlitz3.ab2@19533>   CLR.b peekaddrsize
0002E42C <AmiBlitz3.ab2@19541>    TST.b fpu
0002E430 <AmiBlitz3.ab2@19542>   BNE 'optf
0002E436 <AmiBlitz3.ab2@19543>   TST.b fast
0002E43A <AmiBlitz3.ab2@19544>   BEQ JL11a2
0002E442 <AmiBlitz3.ab2@19551>   CMP.l #"Poke",20(a2)                                     ;poke
0002E446 <AmiBlitz3.ab2@19552>   BNE peekopt
0002E44A <AmiBlitz3.ab2@19553>   TST.b 24(a2)
0002E44E <AmiBlitz3.ab2@19554>   BNE peekopt
0002E452 <AmiBlitz3.ab2@19555>   CMP.b #3,d2
0002E456 <AmiBlitz3.ab2@19556>   BNE 'lw1
0002E45C <AmiBlitz3.ab2@19559>   MOVE.l #$21821990,d1
0002E460 <AmiBlitz3.ab2@19560> BRA.s 'lpx
0002E464 <AmiBlitz3.ab2@19563>   CMP.b #2,d2
0002E468 <AmiBlitz3.ab2@19564>   BNE 'lb1
0002E46E <AmiBlitz3.ab2@19565>   MOVE.l #$31821990,d1
0002E472 <AmiBlitz3.ab2@19566> BRA.s 'lpx
0002E476 <AmiBlitz3.ab2@19569>   CMP.b #1,d2
0002E47A <AmiBlitz3.ab2@19570>   BNE 'lp3
0002E480 <AmiBlitz3.ab2@19571>   MOVE.l #$11821990,d1
0002E484 <AmiBlitz3.ab2@19572> BRA.s 'lpx
0002E488 <AmiBlitz3.ab2@19575>   CMP.b #5,d2
0002E48C <AmiBlitz3.ab2@19576>     BNE JL11a2
0002E492 <AmiBlitz3.ab2@19577>     TST.b fpu
0002E496 <AmiBlitz3.ab2@19578>     BEQ 'll1
0002E49C <AmiBlitz3.ab2@19579>      MOVE.l destpointer,a4
0002E4A4 <AmiBlitz3.ab2@19580>     CMP.l #$f22d4500,-6(a4)
0002E4A8 <AmiBlitz3.ab2@19581>     BNE 'noglob
0002E4AE <AmiBlitz3.ab2@19582>     TST.b doublepeek
0002E4B2 <AmiBlitz3.ab2@19583>     BNE 'noglob
0002E4B8 <AmiBlitz3.ab2@19584>     MOVE.w -2(a4),-4(a4)
0002E4BE <AmiBlitz3.ab2@19585>     MOVE.w #$21ad,-6(a4)
0002E4C4 <AmiBlitz3.ab2@19586>     MOVE.w #$1990,-2(a4)
0002E4CC <AmiBlitz3.ab2@19587>     MOVE.w #9,peeksize
0002E4CE <AmiBlitz3.ab2@19588>     ADDQ #8,a7
0002E4D0 <AmiBlitz3.ab2@19589> RTS
0002E4D8 <AmiBlitz3.ab2@19592>     CMP.l #$f22c4500,-6(a4)
0002E4DC <AmiBlitz3.ab2@19593>     BNE 'nolocal
0002E4E2 <AmiBlitz3.ab2@19594>     MOVE.w -2(a4),-4(a4)
0002E4E8 <AmiBlitz3.ab2@19595>     TST.b doublepeek                                       ;dont move longfix on double floats
0002E4EC <AmiBlitz3.ab2@19596>     BNE 'nolocal
0002E4F2 <AmiBlitz3.ab2@19597>     MOVE.w #$21ac,-6(a4)
0002E4F8 <AmiBlitz3.ab2@19598>     MOVE.w #$1990,-2(a4)
0002E500 <AmiBlitz3.ab2@19599>     MOVE.w #9,peeksize
0002E502 <AmiBlitz3.ab2@19600>     ADDQ #8,a7
0002E504 <AmiBlitz3.ab2@19601> RTS
0002E508 <AmiBlitz3.ab2@19604>     MOVE.w #$f230,d1
0002E50C <AmiBlitz3.ab2@19605>     BSR writeword
0002E512 <AmiBlitz3.ab2@19606>   MOVE.l #$65001990,d1
0002E518 <AmiBlitz3.ab2@19607>   TST.b doublepeek
0002E51C <AmiBlitz3.ab2@19608>   BEQ 'lpx
0002E522 <AmiBlitz3.ab2@19609>   OR.l   #$10000000,d1
0002E524 <AmiBlitz3.ab2@19613>   ADDQ #8,a7
0002E52C <AmiBlitz3.ab2@19614>   MOVE.w #9,peeksize
0002E530 <AmiBlitz3.ab2@19615> BRA writelong
0002E538 <AmiBlitz3.ab2@19618>   CMP.l #"Peek",20(a2)
0002E53C <AmiBlitz3.ab2@19619>   BNE 'l10
0002E540 <AmiBlitz3.ab2@19620>   TST.b 24(a2)
0002E544 <AmiBlitz3.ab2@19621>   BNE 'l10
0002E54C <AmiBlitz3.ab2@19622>   CMP.w #7,peeksize
0002E550 <AmiBlitz3.ab2@19623>   BEQ 'l10
0002E558 <AmiBlitz3.ab2@19624>    CMP.w #3,peeksize
0002E55C <AmiBlitz3.ab2@19625>    BNE.s 'lw1
0002E562 <AmiBlitz3.ab2@19628>   MOVE.l #$20301990,d1
0002E566 <AmiBlitz3.ab2@19629> BRA exitjsr
0002E56E <AmiBlitz3.ab2@19632>   CMP.w #2,peeksize
0002E572 <AmiBlitz3.ab2@19633>    BNE.s 'lb1
0002E578 <AmiBlitz3.ab2@19634>    MOVE.l #$30301990,d1
0002E57C <AmiBlitz3.ab2@19635> BRA exitjsr
0002E584 <AmiBlitz3.ab2@19638>   CMP.w #1,peeksize
0002E588 <AmiBlitz3.ab2@19639>    BNE.s 'lf1
0002E58E <AmiBlitz3.ab2@19640>    MOVE.l #$10301990,d1
0002E592 <AmiBlitz3.ab2@19641> BRA exitjsr
0002E59A <AmiBlitz3.ab2@19644>   CMP.w #5,peeksize
0002E59E <AmiBlitz3.ab2@19645>    BNE 'l10
0002E5A4 <AmiBlitz3.ab2@19646>    TST.b fpu
0002E5A8 <AmiBlitz3.ab2@19647>    BEQ 'll1
0002E5AC <AmiBlitz3.ab2@19648>    MOVE.w #$f230,d1
0002E5B0 <AmiBlitz3.ab2@19649>    BSR writeword
0002E5B2 <AmiBlitz3.ab2@19650>    MOVEQ #0,d1
0002E5B8 <AmiBlitz3.ab2@19651>    MOVE.w tempregnum,d1
0002E5BA <AmiBlitz3.ab2@19652>    ASL.l #7,d1
0002E5BC <AmiBlitz3.ab2@19653>    ASL.l #8,d1
0002E5BE <AmiBlitz3.ab2@19654>    ASL.l #8,d1
0002E5C4 <AmiBlitz3.ab2@19655>    ADD.l #$44001990,d1
0002E5CA <AmiBlitz3.ab2@19656>     TST.b doublepeek
0002E5CE <AmiBlitz3.ab2@19657>     BEQ 'lpx2
0002E5D4 <AmiBlitz3.ab2@19658>     OR.l   #$10000000,d1
0002E5D8 <AmiBlitz3.ab2@19660> BRA exitjsr
0002E5DC <AmiBlitz3.ab2@19664>   MOVE.w #$4EB9,D1
0002E5E0 <AmiBlitz3.ab2@19665>    BSR.w writeword                                         ;writesysjsr
0002E5E4 <AmiBlitz3.ab2@19666>   MOVEM.l (A7)+,a0/D1
0002E5EA <AmiBlitz3.ab2@19667>    JSR addoff
0002E5EE <AmiBlitz3.ab2@19668>   SUB.l $12(A0),D1
0002E5F2 <AmiBlitz3.ab2@19669>   ADD.l $28(A0),D1
0002E5F6 <AmiBlitz3.ab2@19670> BRA.w writelong
0002E5F8 <AmiBlitz3.ab2@19675>   MOVE.w D1,-(A7)
0002E5FC <AmiBlitz3.ab2@19676>   MOVE.w tstmode(PC),D1
0002E600 <AmiBlitz3.ab2@19677>    BSR.w writeword
0002E604 <AmiBlitz3.ab2@19678>    BSR.w getbbase
0002E608 <AmiBlitz3.ab2@19679>    BSR.w writeword
0002E60A <AmiBlitz3.ab2@19680>   MOVE.w (A7)+,D1
0002E60E <AmiBlitz3.ab2@19681>   MOVEM.l D0/D3-D7/A0-A2/A4,-(A7)
0002E612 <AmiBlitz3.ab2@19682>    BSR.w Atokejsr
0002E616 <AmiBlitz3.ab2@19683>   MOVEM.l (A7)+,D0/D3-D7/A0-A2/A4
0002E618 <AmiBlitz3.ab2@19684> RTS
0002E61C <AmiBlitz3.ab2@19692>   MOVE.w blitzoff(PC),D1
0002E620 <AmiBlitz3.ab2@19693>   CMP.w #-$1,D1
0002E624 <AmiBlitz3.ab2@19694>    BNE.w getbbase__done
0002E62A <AmiBlitz3.ab2@19695>   ADDQ.w #1,globalvarpointer
0002E632 <AmiBlitz3.ab2@19696>   BCLR #$0,globalvarpointer+1
0002E638 <AmiBlitz3.ab2@19697>   MOVE.w globalvarpointer,D1
0002E63E <AmiBlitz3.ab2@19698>   MOVE.w D1,blitzoff
0002E644 <AmiBlitz3.ab2@19699>   ADDQ.w #2,globalvarpointer
0002E646 <AmiBlitz3.ab2@19702> RTS
0002E64A <AmiBlitz3.ab2@19706> tstmode:    Dc.b $4A,$6D,$00,$00                           ;TST.W $0000(A5)
0002E64C <AmiBlitz3.ab2@19709> inline:     Ds.w 1
0002E64E <AmiBlitz3.ab2@19710> blitzoff:   Dc.w $FFFF                                   ;-1 org source
0002E650 <AmiBlitz3.ab2@19711> blitzmode:  Ds.w 1                                       ;+=amiga, -=blitz
0002E652 <AmiBlitz3.ab2@19715>   MOVE.w (A2)+,D1
0002E656 <AmiBlitz3.ab2@19716>    BEQ.w fetchregs__done
0002E658 <AmiBlitz3.ab2@19717>   MOVE.w (A2)+,D2
0002E65C <AmiBlitz3.ab2@19718>    BSR.w toreg
0002E660 <AmiBlitz3.ab2@19719> BRA.w fetchregs
0002E662 <AmiBlitz3.ab2@19722> RTS
0002E666 <AmiBlitz3.ab2@19727>   CMP.w #-$100,D2
0002E66A <AmiBlitz3.ab2@19728>    BCC.w toreg__yeah
0002E66E <AmiBlitz3.ab2@19730>   BCLR #$F,D2
0002E672 <AmiBlitz3.ab2@19731>    BEQ.w toreg__nobm
0002E678 <AmiBlitz3.ab2@19733>   TST.w blitzmode
0002E67C <AmiBlitz3.ab2@19734>    BMI.w toreg__yeah
0002E67E <AmiBlitz3.ab2@19735> RTS
0002E682 <AmiBlitz3.ab2@19738>   BCLR #$E,D2
0002E686 <AmiBlitz3.ab2@19739>    BEQ.w toreg__yeah
0002E68C <AmiBlitz3.ab2@19741>   TST.w blitzmode
0002E690 <AmiBlitz3.ab2@19742>    BPL.w toreg__yeah
0002E692 <AmiBlitz3.ab2@19743> RTS
0002E698 <AmiBlitz3.ab2@19746>   JSR uselib
0002E69A <AmiBlitz3.ab2@19747>   TST.b D2
0002E69E <AmiBlitz3.ab2@19748>    BEQ.w toreg__norm
0002E6A2 <AmiBlitz3.ab2@19749>   CMP.b #$4,D2
0002E6A6 <AmiBlitz3.ab2@19750>    BNE.w toreg__suv
0002E6AA <AmiBlitz3.ab2@19751>   MOVE.w #$0004,-(A7)
0002E6B0 <AmiBlitz3.ab2@19752>   MOVE.l #$FFFFFFFA,-(A7)                                  ;#-6,-(a7) org source
0002E6B4 <AmiBlitz3.ab2@19753> BRA.w toreg__sendmd
0002E6B8 <AmiBlitz3.ab2@19756>   CMP.b #$3,D2
0002E6BC <AmiBlitz3.ab2@19757>    BNE.w toreg__notnmax
0002E6BE <AmiBlitz3.ab2@19758>   CLR.w -(A7)
0002E6C4 <AmiBlitz3.ab2@19759>   MOVE.l #$FFFFFFFC,-(A7)                                  ;#-4,-(a7) org source
0002E6C6 <AmiBlitz3.ab2@19765>   LSR.w #8,D2
0002E6CA <AmiBlitz3.ab2@19766>   MOVE.w #$303C,D1                                         ;move.w #x,dn
0002E6CE <AmiBlitz3.ab2@19767>   BTST #$7,D2
0002E6D2 <AmiBlitz3.ab2@19768>    BEQ.w toreg__skipad
0002E6D6 <AmiBlitz3.ab2@19769>   MOVE.w #$307C,D1                                         ;move.w #x,an
0002E6DA <AmiBlitz3.ab2@19770>   CMP.w #$16,D2
0002E6DE <AmiBlitz3.ab2@19771>    BNE.w toreg__skipad
0002E6E6 <AmiBlitz3.ab2@19772>   MOVE.w #$FFFF,lasta6                                     ;-1 org source
0002E6EA <AmiBlitz3.ab2@19775>   ANDI.w #$7,D2
0002E6EC <AmiBlitz3.ab2@19776>   LSL.w #8,D2
0002E6EE <AmiBlitz3.ab2@19777>   LSL.w #1,D2
0002E6F0 <AmiBlitz3.ab2@19778>   OR.w D2,D1
0002E6F4 <AmiBlitz3.ab2@19779>    BSR.w writeword
0002E6F8 <AmiBlitz3.ab2@19780>   MOVE.l $12(A1),D1
0002E6FA <AmiBlitz3.ab2@19781>   ADD.l (A7)+,D1
0002E6FE <AmiBlitz3.ab2@19782>   MOVE.w $0(A1,D1.L),D1
0002E700 <AmiBlitz3.ab2@19783>   ADD.w (A7)+,D1
0002E704 <AmiBlitz3.ab2@19784> BRA.w writeword
0002E706 <AmiBlitz3.ab2@19787>   MOVE.w D2,-(A7)
0002E708 <AmiBlitz3.ab2@19788>   LSR.w #8,D2
0002E70C <AmiBlitz3.ab2@19789>   CMP.w #$16,D2
0002E710 <AmiBlitz3.ab2@19790>    BNE.w toreg__isnta6
0002E718 <AmiBlitz3.ab2@19791>   MOVE.w #$FFFF,lasta6                                     ;-1 org source
0002E71C <AmiBlitz3.ab2@19794>   MOVE.l $12(A1),D1                                        ;objectspace
0002E720 <AmiBlitz3.ab2@19795>   MOVE.w -$6(A1,D1.L),-(A7)
0002E724 <AmiBlitz3.ab2@19796>    BSR.w makeregop
0002E728 <AmiBlitz3.ab2@19797>    BSR.w writeword
0002E72A <AmiBlitz3.ab2@19798>   MOVE.w (A7)+,D1
0002E72C <AmiBlitz3.ab2@19799>   MOVE.w (A7)+,D2
0002E72E <AmiBlitz3.ab2@19800>   TST.b D2
0002E732 <AmiBlitz3.ab2@19801>    BPL.w toreg__skippy1
0002E736 <AmiBlitz3.ab2@19806>    BSR.w writeword                                         ;move.l x(a5),dn
0002E738 <AmiBlitz3.ab2@19807>   MOVE.w D2,-(A7)                                          ;store reg used
0002E73C <AmiBlitz3.ab2@19809>   ADDA.l $12(A1),A1
0002E73E <AmiBlitz3.ab2@19810>   MOVE.b D2,D1
0002E742 <AmiBlitz3.ab2@19811>   ANDI.w #$7,D1
0002E748 <AmiBlitz3.ab2@19813>   TST.b debugmode
0002E74C <AmiBlitz3.ab2@19814>    BEQ.w toreg__norerr
0002E74E <AmiBlitz3.ab2@19816>   MOVE.w D1,-(A7)
0002E750 <AmiBlitz3.ab2@19817>   LSL.w #8,D1
0002E752 <AmiBlitz3.ab2@19818>   LSL.w #1,D1
0002E756 <AmiBlitz3.ab2@19819>   ORI.w #$B07C,D1                                          ;cmp #x,dn
0002E75A <AmiBlitz3.ab2@19820>    BSR.w writeword
0002E75E <AmiBlitz3.ab2@19821>   MOVE.w -$4(A1),D1
0002E762 <AmiBlitz3.ab2@19822>    BSR.w writeword
0002E766 <AmiBlitz3.ab2@19823>   MOVE.l maxchk(PC),D1                                  ;bcs
0002E76A <AmiBlitz3.ab2@19824>    BSR.w writelong
0002E76C <AmiBlitz3.ab2@19825>   MOVE.l A2,-(A7)
0002E770 <AmiBlitz3.ab2@19826>   MOVE.w #$C30A,D1
0002E774 <AmiBlitz3.ab2@19827>    BSR.w Atokejsr
0002E776 <AmiBlitz3.ab2@19828>   MOVEA.l (A7)+,A2
0002E778 <AmiBlitz3.ab2@19829>   MOVE.w (A7)+,D1
0002E77C <AmiBlitz3.ab2@19832>   MOVE.w -$2(A1),D2                                        ;shift amount
0002E780 <AmiBlitz3.ab2@19835>   CMP.w #$9,D2
0002E784 <AmiBlitz3.ab2@19836>    BCS.w toreg__simp
0002E788 <AmiBlitz3.ab2@19837>   MOVEM.w D1-D2,-(A7)
0002E78A <AmiBlitz3.ab2@19839>   MOVEQ.l #$00,D2                                          ;!!!!!
0002E78C <AmiBlitz3.ab2@19841>   LSL.w #8,D2
0002E78E <AmiBlitz3.ab2@19842>   LSL.w #1,D2
0002E790 <AmiBlitz3.ab2@19843>   OR.w D2,D1
0002E794 <AmiBlitz3.ab2@19844>   OR.w lsldn(PC),D1
0002E798 <AmiBlitz3.ab2@19845>    BSR.w writeword
0002E79C <AmiBlitz3.ab2@19846>   MOVEM.w (A7)+,D1-D2
0002E79E <AmiBlitz3.ab2@19847>   SUBQ.w #8,D2
0002E7A2 <AmiBlitz3.ab2@19848> BRA.w toreg__shloop
0002E7A4 <AmiBlitz3.ab2@19851>   MOVE.w D1,-(A7)
0002E7A8 <AmiBlitz3.ab2@19852>   OR.w #$48c0,d1
0002E7AC <AmiBlitz3.ab2@19853>   BSR writeword
0002E7AE <AmiBlitz3.ab2@19854>   MOVE.w (a7),d1
0002E7B0 <AmiBlitz3.ab2@19855>   TST.w D2
0002E7B4 <AmiBlitz3.ab2@19856>   BEQ.w toreg__simp2
0002E7B8 <AmiBlitz3.ab2@19858>   ANDI.w #$7,D2                                            ;?????
0002E7BA <AmiBlitz3.ab2@19860>   LSL.w #8,D2
0002E7BC <AmiBlitz3.ab2@19861>   LSL.w #1,D2
0002E7BE <AmiBlitz3.ab2@19862>   OR.w D2,D1
0002E7C2 <AmiBlitz3.ab2@19863>   OR.w lsldn(PC),D1
0002E7C6 <AmiBlitz3.ab2@19864>    BSR.w writeword
0002E7C8 <AmiBlitz3.ab2@19870>   MOVE.w (A7)+,D1
0002E7CC <AmiBlitz3.ab2@19871>   ANDI.w #$7,D1
0002E7D0 <AmiBlitz3.ab2@19872>   OR.w maxdo(PC),D1
0002E7D2 <AmiBlitz3.ab2@19873>   MOVE.w (A7)+,D2
0002E7D4 <AmiBlitz3.ab2@19874>   LSL.w #1,D2
0002E7D8 <AmiBlitz3.ab2@19875>   ANDI.w #$E00,D2
0002E7DA <AmiBlitz3.ab2@19876>   OR.w D2,D1
0002E7DE <AmiBlitz3.ab2@19877> BRA.w writeword
0002E7E2 <AmiBlitz3.ab2@19880>   CMP.b #$1,D2
0002E7E6 <AmiBlitz3.ab2@19881>    BEQ.w toreg__skippy
0002E7E8 <AmiBlitz3.ab2@19885>   ADDQ.w #4,D1
0002E7EE <AmiBlitz3.ab2@19887>   TST.b debugmode
0002E7F2 <AmiBlitz3.ab2@19888>    BEQ.w toreg__skippy
0002E7F6 <AmiBlitz3.ab2@19890>    BSR.w writeword
0002E7F8 <AmiBlitz3.ab2@19891>   SWAP D1
0002E7FC <AmiBlitz3.ab2@19892>   MOVE.w toreg__theretest(PC),D1
0002E7FE <AmiBlitz3.ab2@19893>   SWAP D1
0002E802 <AmiBlitz3.ab2@19894>    BSR.w writelong
0002E806 <AmiBlitz3.ab2@19895>   MOVE.l toreg__theretest+4(PC),D1
0002E80A <AmiBlitz3.ab2@19896>    BSR.w writelong
0002E80E <AmiBlitz3.ab2@19897>   MOVE.l toreg__theretest+8(PC),D1
0002E812 <AmiBlitz3.ab2@19898> BRA.w writelong
0002E816 <AmiBlitz3.ab2@19901> BRA.w writeword
0002E81A <AmiBlitz3.ab2@19906>             Dc.b $4A,$AD,$00,$00                           ;TST.L  $0000(A5)
0002E81E <AmiBlitz3.ab2@19907>             Dc.b $66,$00,$00,$06                           ;BNE.W  toreg__ttskip
0002E820 <AmiBlitz3.ab2@19908>             Dc.b $70,$01                                   ;MOVEQ  #$01,D0
0002E822 <AmiBlitz3.ab2@19909>             Dc.b $4E,$40                                   ;TRAP   #00
0002E824 <AmiBlitz3.ab2@19914>   LSR.w #8,D2
0002E828 <AmiBlitz3.ab2@19915>   CMP.b #$16,D2
0002E82C <AmiBlitz3.ab2@19916>    BNE.w toreg__nota6
0002E830 <AmiBlitz3.ab2@19917>   MOVE.w $A(A1),D1
0002E836 <AmiBlitz3.ab2@19918>   CMP.w lasta6,D1
0002E83A <AmiBlitz3.ab2@19919>    BEQ.w toreg__sk
0002E840 <AmiBlitz3.ab2@19920>   MOVE.w D1,lasta6
0002E844 <AmiBlitz3.ab2@19923>    BSR.w makeregop
0002E848 <AmiBlitz3.ab2@19924>   TST.w $1A(A1)
0002E84C <AmiBlitz3.ab2@19925>    BPL.w toreg__long
0002E850 <AmiBlitz3.ab2@19926>   CMP.w stackop(PC),D1
0002E854 <AmiBlitz3.ab2@19927>    BNE.w toreg__notst
0002E85A <AmiBlitz3.ab2@19928>   SUBQ.w #2,a2offset
0002E85E <AmiBlitz3.ab2@19931>    ORI.w #$1000,D1
0002E862 <AmiBlitz3.ab2@19934>    BSR.w writeword
0002E866 <AmiBlitz3.ab2@19935>   MOVE.w $A(A1),D1
0002E86A <AmiBlitz3.ab2@19936>    BSR.w writeword
0002E86C <AmiBlitz3.ab2@19939> RTS
0002E86E <AmiBlitz3.ab2@19943> lsldn:      Dc.b $E1,$88                 ;Dc.b $48 ;object long acsess    ;LSL.L   #8,D0
0002E872 <AmiBlitz3.ab2@19944> maxchk:     Dc.b $65,$00,$00,$08                                          ;BCS.W   maxchk__ok
0002E878 <AmiBlitz3.ab2@19945>             Dc.b $4E,$B9,$00,$00,$00,$00                                  ;JSR     $00000000
0002E87A <AmiBlitz3.ab2@19948> 
0002E87C <AmiBlitz3.ab2@19951>             Dc.b $00,$00
0002E880 <AmiBlitz3.ab2@19952> stackop:    Dc.b $2F,$2D,$00,$00                                          ;MOVE.L  $0000(A5),-(A7)
0002E884 <AmiBlitz3.ab2@19959>   CMP.b #$FF,D2
0002E888 <AmiBlitz3.ab2@19960>    BNE.w makeregop__notst
0002E88C <AmiBlitz3.ab2@19961>   MOVE.w stackop(PC),D1
0002E892 <AmiBlitz3.ab2@19962>   ADDQ.w #4,a2offset
0002E894 <AmiBlitz3.ab2@19963> RTS
0002E896 <AmiBlitz3.ab2@19966>   MOVE.l A3,-(A7)
0002E89C <AmiBlitz3.ab2@19967>   LEA regtransd,A3
0002E8A0 <AmiBlitz3.ab2@19968>   BTST #$4,D2
0002E8A4 <AmiBlitz3.ab2@19969>    BEQ.w makeregop__skip
0002E8AA <AmiBlitz3.ab2@19970>   LEA regtransa,A3
0002E8AE <AmiBlitz3.ab2@19973>   ANDI.w #$7,D2
0002E8B0 <AmiBlitz3.ab2@19974>   MOVE.w D2,D1
0002E8B2 <AmiBlitz3.ab2@19975>   LSL.w #8,D1
0002E8B4 <AmiBlitz3.ab2@19976>   LSL.w #1,D1
0002E8B6 <AmiBlitz3.ab2@19977>   OR.w (A3),D1
0002E8B8 <AmiBlitz3.ab2@19978>   MOVEA.l (A7)+,A3
0002E8BA <AmiBlitz3.ab2@19979> RTS
0002E8BE <AmiBlitz3.ab2@19985>   CMP.w #$3C,D0
0002E8C2 <AmiBlitz3.ab2@19986>    BCS.w ifchar__no
0002E8C6 <AmiBlitz3.ab2@19987>   CMP.w #$3E,D0
0002E8CA <AmiBlitz3.ab2@19988>    BHI.w ifchar__no
0002E8CE <AmiBlitz3.ab2@19989>   SUBI.w #$3C,D0
0002E8D0 <AmiBlitz3.ab2@19990>   CMP.w D0,D0
0002E8D2 <AmiBlitz3.ab2@19993> RTS
0002E8DC <AmiBlitz3.ab2@19998>   MOVE.w oldqflag,instringon
0002E8E2 <AmiBlitz3.ab2@19999>   MOVEA.l lastsourcepos,A5
0002E8E8 <AmiBlitz3.ab2@20004>   MOVE.w regnum,-(A7)
0002E8EE <AmiBlitz3.ab2@20005>   CLR.w regnum
0002E8F4 <AmiBlitz3.ab2@20006>   MOVE.l destpointer,-(A7)
0002E8FA <AmiBlitz3.ab2@20007>   MOVE.l destbufferend,-(A7)
0002E900 <AmiBlitz3.ab2@20008>   MOVE.w dontwrite,-(A7)
0002E906 <AmiBlitz3.ab2@20009>   MOVE.w lasta6,-(A7)
0002E90C <AmiBlitz3.ab2@20010>   MOVE.w cfetchmode,-(A7)
0002E910 <AmiBlitz3.ab2@20011>    BNE.w JL_0_BFB6
0002E91A <AmiBlitz3.ab2@20012>   MOVE.l destbufferend,oldlibat
0002E920 <AmiBlitz3.ab2@20013>   MOVEA.l constpcat,A0
0002E926 <AmiBlitz3.ab2@20014>   MOVE.l A0,destpointer
0002E92A <AmiBlitz3.ab2@20015> BRA.w JL_0_BFBC
0002E930 <AmiBlitz3.ab2@20018>   MOVEA.l destpointer,A0
0002E932 <AmiBlitz3.ab2@20021>   MOVE.l A0,-(A7)
0002E93C <AmiBlitz3.ab2@20022>   MOVE.l constlibat,destbufferend
0002E942 <AmiBlitz3.ab2@20023>   CLR.w dontwrite
0002E94A <AmiBlitz3.ab2@20025>   MOVE.w #$FFFF,lasta6
0002E952 <AmiBlitz3.ab2@20026>   MOVE.w #$FFFF,cfetchmode
0002E956 <AmiBlitz3.ab2@20028>     BSR.w arreval
0002E958 <AmiBlitz3.ab2@20029>    MOVE.l (a7),a0
0002EA94 <AmiBlitz3.ab2@20031>  !newcalc
0002EA98 <AmiBlitz3.ab2@20032>    BEQ 'l10
0002EA9A <AmiBlitz3.ab2@20033>    MOVE.l d0,d3
0002EA9C <AmiBlitz3.ab2@20034>    MOVEA.l (A7)+,A0
0002EAA0 <AmiBlitz3.ab2@20035> BRA bc1
0002EAA4 <AmiBlitz3.ab2@20038>    MOVE.w #$2600,D1
0002EAAA <AmiBlitz3.ab2@20039>   OR.w regnum,D1
0002EAAE <AmiBlitz3.ab2@20040>    BSR.w writeword
0002EAB2 <AmiBlitz3.ab2@20041>   MOVE.w #$4E75,D1
0002EAB6 <AmiBlitz3.ab2@20042>    BSR.w writeword
0002EABC <AmiBlitz3.ab2@20043>   MOVE.w dontwrite,D1
0002EAC0 <AmiBlitz3.ab2@20044>    BNE.w conmemerr
0002EAC2 <AmiBlitz3.ab2@20045>   MOVEA.l (A7)+,A0
0002EAC4 <AmiBlitz3.ab2@20046>   NOP
0002EACA <AmiBlitz3.ab2@20047>    JSR Aclearcache                                         ;simple expression
0002EACC <AmiBlitz3.ab2@20050>    JSR (A0)                                                ;writeresult
0002EAD2 <AmiBlitz3.ab2@20053>   MOVE.w (A7)+,cfetchmode
0002EAD8 <AmiBlitz3.ab2@20054>   MOVE.w (A7)+,lasta6
0002EADE <AmiBlitz3.ab2@20055>   MOVE.w (A7)+,dontwrite
0002EAE4 <AmiBlitz3.ab2@20056>   MOVE.l (A7)+,destbufferend
0002EAEA <AmiBlitz3.ab2@20057>   MOVE.l (A7)+,destpointer
0002EAF0 <AmiBlitz3.ab2@20058>   MOVE.w (A7)+,regnum
0002EAF6 <AmiBlitz3.ab2@20061> JMP reget
0002EAFA <AmiBlitz3.ab2@20064> oldlibat:   Ds.l 1
0002EB00 <AmiBlitz3.ab2@20068>   LEA incdir,A0
0002EB04 <AmiBlitz3.ab2@20071>   CMP.w #$22,D0
0002EB08 <AmiBlitz3.ab2@20072>    BEQ.w JL_0_C052
0002EB0A <AmiBlitz3.ab2@20073>   MOVE.b D0,(A0)+
0002EB0C <AmiBlitz3.ab2@20074>   TST.w D0
0002EB10 <AmiBlitz3.ab2@20075>    BEQ.w JL_0_C05A
0002EB14 <AmiBlitz3.ab2@20076>    BMI.w syntaxerr
0002EB1A <AmiBlitz3.ab2@20079>   JSR get1bytemain                                         ;_long
0002EB1E <AmiBlitz3.ab2@20080> BRA.w JL_0_C03E
0002EB20 <AmiBlitz3.ab2@20083> RTS
0002EB26 <AmiBlitz3.ab2@20087>   LEA ptr_parameterstore,A1                                ;getparameter
0002EB2C <AmiBlitz3.ab2@20088>   LEA incdir,A0
0002EB2E <AmiBlitz3.ab2@20089>   MOVEQ.l #-$01,D2
0002EB30 <AmiBlitz3.ab2@20092>     ADDQ.w #1,D2
0002EB32 <AmiBlitz3.ab2@20093>     MOVE.b (A0)+,(A1)+
0002EB36 <AmiBlitz3.ab2@20094>   BNE.w JL_0_C06A
0002EB38 <AmiBlitz3.ab2@20095>   SUBQ.w #1,A1
0002EB42 <AmiBlitz3.ab2@20097>   MOVE.w oldqflag,instringon
0002EB48 <AmiBlitz3.ab2@20098>   MOVEA.l lastsourcepos,A5
0002EB4E <AmiBlitz3.ab2@20102>   JSR get1bytemain
0002EB50 <AmiBlitz3.ab2@20103>   TST.w D0
0002EB54 <AmiBlitz3.ab2@20104>    BMI.w syntaxerr
0002EB58 <AmiBlitz3.ab2@20105>   CMP.b #$22,D0
0002EB5C <AmiBlitz3.ab2@20106>    BEQ.w JL_0_C078
0002EB5E <AmiBlitz3.ab2@20107>   MOVE.b D0,(A1)+
0002EB62 <AmiBlitz3.ab2@20108>    BEQ.w JL_0_C096
0002EB64 <AmiBlitz3.ab2@20109>   ADDQ.w #1,D2
0002EB68 <AmiBlitz3.ab2@20110> BRA.w JL_0_C078
0002EB6A <AmiBlitz3.ab2@20113>   TST.w D2
0002EB6E <AmiBlitz3.ab2@20114>    BEQ.w syntaxerr
0002EB70 <AmiBlitz3.ab2@20115> RTS
0002EB76 <AmiBlitz3.ab2@20119>   MOVEA.l constantbase,A2
0002EB7A <AmiBlitz3.ab2@20120>   MOVEA.l $E(A2),A5
0002EB80 <AmiBlitz3.ab2@20121>   MOVE.l a5,includesourceline
0002EB86 <AmiBlitz3.ab2@20122>   LEA inctab,a0
0002EB8C <AmiBlitz3.ab2@20123>   MOVE.w ininclude,d0
0002EB90 <AmiBlitz3.ab2@20124>   MOVE.l $0(a0,d0*4),d0
0002EB94 <AmiBlitz3.ab2@20125>   MOVEA.l $4(A2),A0
0002EB98 <AmiBlitz3.ab2@20127>   LEA $0(A0,D0.l),A0
0002EB9A <AmiBlitz3.ab2@20128>   MOVEA.l A5,A1
0002EB9C <AmiBlitz3.ab2@20131>     CMPA.l A0,A1
0002EBA0 <AmiBlitz3.ab2@20132>      BCC.w JL_0_C0C6
0002EBA2 <AmiBlitz3.ab2@20133>   TST.b (A1)+
0002EBA6 <AmiBlitz3.ab2@20134>   BNE.w JL_0_C0B6
0002EBAA <AmiBlitz3.ab2@20135> BRA.w JL_0_C112
0002EBAE <AmiBlitz3.ab2@20138>   MOVEA.l $4(A2),A1
0002EBB0 <AmiBlitz3.ab2@20141>   CMPA.l A0,A5
0002EBB4 <AmiBlitz3.ab2@20142>   BCC.w JL_0_C0D6
0002EBB6 <AmiBlitz3.ab2@20143>   MOVE.b (A5)+,(A1)+
0002EBBA <AmiBlitz3.ab2@20144> BRA.w JL_0_C0CA
0002EBBC <AmiBlitz3.ab2@20147>   MOVE.l A1,D0
0002EBC0 <AmiBlitz3.ab2@20148>   SUB.l $4(A2),D0
0002EBC6 <AmiBlitz3.ab2@20149>   LEA inctab,a0
0002EBC8 <AmiBlitz3.ab2@20150>   MOVEQ #0,d1
0002EBCE <AmiBlitz3.ab2@20151>   MOVE.w ininclude,d1
0002EBD2 <AmiBlitz3.ab2@20152>   MOVE.l d0,0(a0,d1*4)
0002EBD8 <AmiBlitz3.ab2@20154>   MOVEA.l _dosbase,A6
0002EBDC <AmiBlitz3.ab2@20155>   MOVE.l $8(A2),D1
0002EBDE <AmiBlitz3.ab2@20156>   MOVE.l A1,D2
0002EBE4 <AmiBlitz3.ab2@20157>   MOVE.l D2,include_base
0002EBEA <AmiBlitz3.ab2@20159>   MOVE.l #$10000000,d3                                     ;load whole file
0002EBEC <AmiBlitz3.ab2@20160>   SUB.l D0,D3
0002EBF0 <AmiBlitz3.ab2@20161>    JSR _Read(A6)
0002EBF2 <AmiBlitz3.ab2@20162>   TST.l D0
0002EBF6 <AmiBlitz3.ab2@20163>    BMI.w error_reading_file
0002EBFA <AmiBlitz3.ab2@20164>    BEQ.w JL_0_C120
0002EC00 <AmiBlitz3.ab2@20165>    MOVE.l D0,include_length
0002EC42 <AmiBlitz3.ab2@20166>    !ComData_GetL{comPtr_PreProcessor,include_preprocessor}
0002EC6C <AmiBlitz3.ab2@20167>    !basic
0002EC7C <AmiBlitz3.ab2@20168>    ilen.l  = Peek.l(?include_length)
0002EC8C <AmiBlitz3.ab2@20169>    ibase.l = Peek.l(?include_base)
0002EC9C <AmiBlitz3.ab2@20170>    ido.l   = Peek.l(?include_process)
0002ECAC <AmiBlitz3.ab2@20171>    *tn.preprocessor = Peek.l(?include_preprocessor)
0002ECB6 <AmiBlitz3.ab2@20172>    If ido
0002ECC8 <AmiBlitz3.ab2@20173>      ioffset.l = SkipXtraHeader{ibase,ilen}
0002ECEE <AmiBlitz3.ab2@20174>      nilen.l = preproc_Tokenize{*tn,ibase+ioffset,ibase,ilen-ioffset}
0002ED00 <AmiBlitz3.ab2@20175>      If nilen>0
0002ED10 <AmiBlitz3.ab2@20179>        Poke.l ?include_length,nilen
0002ED2E <AmiBlitz3.ab2@20182>    !asm
0002ED38 <AmiBlitz3.ab2@20183>    MOVE.l #0,include_process
0002ED3E <AmiBlitz3.ab2@20184>    MOVE.l include_length,D0
0002ED44 <AmiBlitz3.ab2@20185>    LEA inctab,a0
0002ED46 <AmiBlitz3.ab2@20186>    MOVEQ #0,d1
0002ED4C <AmiBlitz3.ab2@20187>    MOVE.w ininclude,d1
0002ED50 <AmiBlitz3.ab2@20188>    ADD.l d0,0(a0,d1*4)
0002ED54 <AmiBlitz3.ab2@20190>   MOVEA.l $4(A2),A5
0002ED58 <AmiBlitz3.ab2@20192>    MOVE.l 0(a0,d1*4),d0
0002ED5C <AmiBlitz3.ab2@20193>   CLR.b $0(A5,D0.l)
0002ED5E <AmiBlitz3.ab2@20196>   MOVEA.l A5,A0
0002ED60 <AmiBlitz3.ab2@20199>     TST.b (A0)+
0002ED64 <AmiBlitz3.ab2@20200>   BNE.w JL_0_C114
0002ED68 <AmiBlitz3.ab2@20201>   MOVE.l A0,$E(A2)
0002ED6A <AmiBlitz3.ab2@20202> RTS
0002ED6E <AmiBlitz3.ab2@20205> include_length:        Dc.l 0                              ; for tokenizer!
0002ED72 <AmiBlitz3.ab2@20206> include_base:          Dc.l 0
0002ED76 <AmiBlitz3.ab2@20207> include_process:       Dc.l 0
0002ED7A <AmiBlitz3.ab2@20208> include_preprocessor:  Dc.l 0
0002ED7E <AmiBlitz3.ab2@20212>   MOVE.l $8(A2),D1
0002ED84 <AmiBlitz3.ab2@20214>   MOVEA.l _dosbase,A6
0002ED88 <AmiBlitz3.ab2@20215>   JSR _Close(a6)
0002ED8E <AmiBlitz3.ab2@20216>   MOVEA.l _execbase,A6
0002ED92 <AmiBlitz3.ab2@20217>   MOVEA.l $4(A2),A1
0002ED98 <AmiBlitz3.ab2@20218>   MOVE.l #$400*8,D0                                        ;exit include
0002ED9C <AmiBlitz3.ab2@20220>   JSR _FreeVec(a6)
0002EDA2 <AmiBlitz3.ab2@20223>   MOVE.l (A2),constantbase
0002EDA4 <AmiBlitz3.ab2@20224>   MOVEA.l A2,A1
0002EDA6 <AmiBlitz3.ab2@20225>   MOVEQ.l #$00,D0
0002EDAA <AmiBlitz3.ab2@20226>   MOVE.b $12(A2),D0
0002EDB0 <AmiBlitz3.ab2@20227>   MOVEA.l _execbase,A6
0002EDB6 <AmiBlitz3.ab2@20228>   MOVE.l mempool2,a0
0002EDBA <AmiBlitz3.ab2@20229>   JSR _FreePooled(A6)
0002EDC0 <AmiBlitz3.ab2@20230>   JSR zero_includename
0002EDC6 <AmiBlitz3.ab2@20231>   SUBQ.w #1,ininclude
0002EDCA <AmiBlitz3.ab2@20232>   BNE.w AJL_0_C09E
0002EDD0 <AmiBlitz3.ab2@20235>   LEA _include,a0
0002EDD4 <AmiBlitz3.ab2@20236>   MOVEM.l a0-a6/d0-d7,-(a7)
0002EDDA <AmiBlitz3.ab2@20237>   LEA ptr_parameterstore,a1
0002EDDC <AmiBlitz3.ab2@20240>     MOVE.b (a0)+,(a1)+
0002EDE0 <AmiBlitz3.ab2@20241>   BNE 'l1b
0002EDE2 <AmiBlitz3.ab2@20242>   MOVEQ #9,d2
0002EDE8 <AmiBlitz3.ab2@20243>   JSR findlabel2
0002EDEC <AmiBlitz3.ab2@20244>   BNE 'd
0002EDF0 <AmiBlitz3.ab2@20245>   CLR.l 8(a2)
0002EDF4 <AmiBlitz3.ab2@20248>   MOVEM.l (a7)+,a0-a6/d0-d7
0002EDF6 <AmiBlitz3.ab2@20249> RTS
0002EDFC <AmiBlitz3.ab2@20253>   MOVE.l unusedfunc,d0
0002EE00 <AmiBlitz3.ab2@20254>   BEQ 'noclear
0002EE04 <AmiBlitz3.ab2@20255>   MOVEM.l d0-d2/a0-a1/a6,-(a7)
0002EE06 <AmiBlitz3.ab2@20258>     MOVE.l d0,a1
0002EE0A <AmiBlitz3.ab2@20259>     MOVE.l 4(a1),d0
0002EE0C <AmiBlitz3.ab2@20260>     MOVE.l (a1),d2
0002EE12 <AmiBlitz3.ab2@20261>     MOVE.l _execbase,a6
0002EE16 <AmiBlitz3.ab2@20262>     JSR _FreeMem(a6)
0002EE18 <AmiBlitz3.ab2@20263>     MOVE.l d2,d0
0002EE1C <AmiBlitz3.ab2@20264>   BNE 'f1
0002EE22 <AmiBlitz3.ab2@20265>   CLR.l unusedfunc
0002EE26 <AmiBlitz3.ab2@20266>   MOVEM.l (a7)+,a0-a1/a6/d0-d2
0002EE28 <AmiBlitz3.ab2@20269> RTS
0002EE2E <AmiBlitz3.ab2@20273>   MOVEA.l xinclude_base,A2
0002EE34 <AmiBlitz3.ab2@20274>   CLR.l xinclude_base
0002EE38 <AmiBlitz3.ab2@20277>     CMPA.w #$0,A2
0002EE3C <AmiBlitz3.ab2@20278>      BEQ.w JL_0_C186
0002EE3E <AmiBlitz3.ab2@20279>     MOVEQ.l #$00,D0
0002EE42 <AmiBlitz3.ab2@20280>     MOVE.b 4+8(A2),D0
0002EE44 <AmiBlitz3.ab2@20281>     MOVEA.l A2,A1
0002EE46 <AmiBlitz3.ab2@20282>     MOVEA.l (A2),A2
0002EE4C <AmiBlitz3.ab2@20283>     MOVEA.l _execbase,A6
0002EE52 <AmiBlitz3.ab2@20284>     MOVE.l mempool2,a0
0002EE56 <AmiBlitz3.ab2@20285>     JSR _FreePooled(A6)
0002EE5A <AmiBlitz3.ab2@20286> BRA.w JL_0_C168
0002EE5C <AmiBlitz3.ab2@20289> RTS
0002EE62 <AmiBlitz3.ab2@20293>   MOVEA.l constantbase,A2
0002EE68 <AmiBlitz3.ab2@20294>   CLR.l constantbase
0002EE6C <AmiBlitz3.ab2@20297>     CMPA.w #$0,A2
0002EE70 <AmiBlitz3.ab2@20298>      BEQ.w JL_0_C1DC
0002EE74 <AmiBlitz3.ab2@20299>     MOVE.l $8(A2),D1
0002EE78 <AmiBlitz3.ab2@20300>      BEQ.w JL_0_C1AE
0002EE7E <AmiBlitz3.ab2@20301>     MOVEA.l _dosbase,A6
0002EE82 <AmiBlitz3.ab2@20302>      JSR _Close(A6)
0002EE86 <AmiBlitz3.ab2@20305>     MOVE.l $4(A2),D0
0002EE8A <AmiBlitz3.ab2@20306>      BEQ.w JL_0_C1C6
0002EE8C <AmiBlitz3.ab2@20307>     MOVEA.l D0,A1
0002EE92 <AmiBlitz3.ab2@20308>     MOVE.l #$400*8,D0
0002EE98 <AmiBlitz3.ab2@20309>     MOVEA.l _execbase,A6
0002EE9E <AmiBlitz3.ab2@20310>     MOVE.l mempool,a0
0002EEA2 <AmiBlitz3.ab2@20311>     JSR _FreeVec(a6)
0002EEA4 <AmiBlitz3.ab2@20314>     MOVEQ.l #$00,D0
0002EEA8 <AmiBlitz3.ab2@20315>     MOVE.b $12(A2),D0
0002EEAA <AmiBlitz3.ab2@20316>     MOVEA.l A2,A1
0002EEAC <AmiBlitz3.ab2@20317>     MOVEA.l (A2),A2
0002EEB2 <AmiBlitz3.ab2@20318>     MOVEA.l _execbase,A6
0002EEB8 <AmiBlitz3.ab2@20319>     MOVE.l mempool2,a0
0002EEBC <AmiBlitz3.ab2@20320>     JSR _FreePooled(A6)
0002EEC0 <AmiBlitz3.ab2@20321> BRA.w JL_0_C194
0002EEC2 <AmiBlitz3.ab2@20324> RTS
0002EEC4 <AmiBlitz3.ab2@20328>   SWAP D0
0002EEC8 <AmiBlitz3.ab2@20329>    BSR.w JL_0_C1E6
0002EECA <AmiBlitz3.ab2@20330>   SWAP D0
0002EED0 <AmiBlitz3.ab2@20333>   MOVEA.l data2,A4
0002EED6 <AmiBlitz3.ab2@20334>   CMPA.l allat,A4
0002EEDA <AmiBlitz3.ab2@20335>    BCC.w JL_0_C200
0002EEDC <AmiBlitz3.ab2@20336>   MOVE.w D0,(A4)+
0002EEE2 <AmiBlitz3.ab2@20337>   MOVE.l A4,data2
0002EEE4 <AmiBlitz3.ab2@20338> RTS
0002EEEC <AmiBlitz3.ab2@20341>   MOVE.w #$FFFF,dontwrite
0002EEF2 <AmiBlitz3.ab2@20342>   ADDQ.l #2,data2
0002EEF4 <AmiBlitz3.ab2@20343> RTS
0002EEFA <AmiBlitz3.ab2@20347>   MOVEA.l data2,A4
0002EF00 <AmiBlitz3.ab2@20348>   CMPA.l allat,A4
0002EF04 <AmiBlitz3.ab2@20349>    BCC.w JL_0_C22A
0002EF06 <AmiBlitz3.ab2@20350>   MOVE.b D0,(A4)+
0002EF0C <AmiBlitz3.ab2@20351>   MOVE.l A4,data2
0002EF0E <AmiBlitz3.ab2@20352> RTS
0002EF16 <AmiBlitz3.ab2@20355>   MOVE.w #$FFFF,dontwrite
0002EF1C <AmiBlitz3.ab2@20356>   ADDQ.l #1,data2
0002EF1E <AmiBlitz3.ab2@20357> RTS
0002EF22 <AmiBlitz3.ab2@20361>   CMP.w #$22,D0
0002EF26 <AmiBlitz3.ab2@20362>    BNE.w syntaxerr
0002EF2C <AmiBlitz3.ab2@20366>   JSR get1bytemain
0002EF30 <AmiBlitz3.ab2@20367>   CMP.b #$22,D0
0002EF34 <AmiBlitz3.ab2@20368>    BEQ.w JL_0_C25A
0002EF36 <AmiBlitz3.ab2@20369>   TST.w D0
0002EF3A <AmiBlitz3.ab2@20370>    BEQ.w syntaxerr
0002EF3C <AmiBlitz3.ab2@20371>   MOVE.b D0,(A0)+
0002EF40 <AmiBlitz3.ab2@20372> BRA.w JL_0_C242
0002EF42 <AmiBlitz3.ab2@20375>   CLR.b (A0)
0002EF44 <AmiBlitz3.ab2@20376> RTS
0002EF46 <AmiBlitz3.ab2@20379>   TST.l D3
0002EF48 <AmiBlitz3.ab2@20380> RTS
0002EF4E <AmiBlitz3.ab2@20383>   LEA ptr_parameterstore,A0
0002EF54 <AmiBlitz3.ab2@20384>   LEA namebuff2,A1
0002EF56 <AmiBlitz3.ab2@20387>     MOVE.b (A0)+,D0
0002EF5A <AmiBlitz3.ab2@20388>     BEQ.w JL_0_C27C
0002EF5C <AmiBlitz3.ab2@20389>   CMP.b (A1)+,D0
0002EF60 <AmiBlitz3.ab2@20390>   BEQ.w JL_0_C26E
0002EF62 <AmiBlitz3.ab2@20391> RTS
0002EF64 <AmiBlitz3.ab2@20394>   TST.b (A1)
0002EF68 <AmiBlitz3.ab2@20395>   BNE.w JL_0_C284
0002EF6A <AmiBlitz3.ab2@20396> RTS
0002EF6E <AmiBlitz3.ab2@20399>   CMP.w #$1,D0
0002EF70 <AmiBlitz3.ab2@20400> RTS
0002EF74 <AmiBlitz3.ab2@20404>   CMP.w #$2E,D0                                            ;dodeftype
0002EF78 <AmiBlitz3.ab2@20405>    BNE.w syntaxerr
0002EF7C <AmiBlitz3.ab2@20406>   BSR.w getparameter2
0002EF82 <AmiBlitz3.ab2@20407>   LEA newtypebase,A2
0002EF86 <AmiBlitz3.ab2@20408>   BSR.w findtype
0002EF8A <AmiBlitz3.ab2@20409>    BNE.w notypeerr
0002EF90 <AmiBlitz3.ab2@20410>   TST.b declare
0002EF94 <AmiBlitz3.ab2@20411>    BNE 'l1
0002EF9A <AmiBlitz3.ab2@20412>   TST.b declare2
0002EF9E <AmiBlitz3.ab2@20413>    BEQ 'l2
0002EFA6 <AmiBlitz3.ab2@20416>   MOVE.b #2,nowdeclare
0002EFAC <AmiBlitz3.ab2@20420>   JSR reget
0002EFB0 <AmiBlitz3.ab2@20421>    BNE.w JL_0_C2B4
0002EFB6 <AmiBlitz3.ab2@20422>   MOVE.l A2,defaulttype
0002EFB8 <AmiBlitz3.ab2@20423> RTS
0002EFBE <AmiBlitz3.ab2@20426>   MOVE.l defaulttype,-(A7)
0002EFC4 <AmiBlitz3.ab2@20427>   MOVE.l A2,defaulttype
0002EFC8 <AmiBlitz3.ab2@20430>   BSR.w getparameter
0002EFCC <AmiBlitz3.ab2@20431>    BSR.w JL_0_8E3C
0002EFD0 <AmiBlitz3.ab2@20432>   CMP.w #$2C,D0
0002EFD4 <AmiBlitz3.ab2@20433>    BNE.w JL_0_C2D8
0002EFDA <AmiBlitz3.ab2@20434>    JSR get1bytemain                                        ; was BSR.w
0002EFDE <AmiBlitz3.ab2@20435> BRA.w JL_0_C2C0
0002EFE4 <AmiBlitz3.ab2@20438>   MOVE.l (A7)+,defaulttype
0002EFE6 <AmiBlitz3.ab2@20439> RTS
0002EFEA <AmiBlitz3.ab2@20443>   LEA $4(A5),A2                                            ;fehler function
0002EFEC <AmiBlitz3.ab2@20446>   MOVE.l A2,D0
0002EFF0 <AmiBlitz3.ab2@20449>   BSR.w getparameter
0002EFF4 <AmiBlitz3.ab2@20450>   BSR.w JL_0_8E3C
0002EFF8 <AmiBlitz3.ab2@20451>   BSR.w calcvar
0002EFFC <AmiBlitz3.ab2@20452>   CMP.b #$7,D2
0002F000 <AmiBlitz3.ab2@20453>    BNE.w mismatcherr
0002F004 <AmiBlitz3.ab2@20454>   MOVE.w varmode(PC),-(A7)
0002F008 <AmiBlitz3.ab2@20455>   CMP.w #$3D,D0
0002F00C <AmiBlitz3.ab2@20456>    BNE.w syntaxerr
0002F010 <AmiBlitz3.ab2@20457>   BTST #$F,D2
0002F014 <AmiBlitz3.ab2@20458>    BNE.w JL_0_C31C
0002F018 <AmiBlitz3.ab2@20459>   MOVE.w JL_0_C2E0(PC),D1
0002F01C <AmiBlitz3.ab2@20460>   BSR.w pokewda5s
0002F01E <AmiBlitz3.ab2@20461>   MOVE.w D3,D1
0002F022 <AmiBlitz3.ab2@20462>   BSR.w writeword
0002F026 <AmiBlitz3.ab2@20465>   MOVE.w L_0_C2E4(PC),D1
0002F02A <AmiBlitz3.ab2@20466>   BSR.w writeword
0002F030 <AmiBlitz3.ab2@20467>   ADDQ.w #1,regnum
0002F032 <AmiBlitz3.ab2@20468>   MOVEQ.l #$03,D2
0002F036 <AmiBlitz3.ab2@20469>   BSR.w eval
0002F03C <AmiBlitz3.ab2@20470>   MOVE.l #$D000,D1
0002F042 <AmiBlitz3.ab2@20471>   MOVE.l d1,lastinstruction
0002F044 <AmiBlitz3.ab2@20472>   TST.w (A7)+
0002F048 <AmiBlitz3.ab2@20473>    BEQ.w Atokejsr
0002F04A <AmiBlitz3.ab2@20474>   ADDQ.w #1,D1
0002F04E <AmiBlitz3.ab2@20475> BRA.w Atokejsr
0002F050 <AmiBlitz3.ab2@20479>   MOVE.w D0,D1
0002F054 <AmiBlitz3.ab2@20480>    BPL.w syntaxerr
0002F058 <AmiBlitz3.ab2@20481>   BCLR #$F,D1
0002F05E <AmiBlitz3.ab2@20482>    JSR searchinstr
0002F062 <AmiBlitz3.ab2@20483>   MOVE.l $12(A2),D0
0002F066 <AmiBlitz3.ab2@20484>   TST.w -$2(A2,D0.L)
0002F06A <AmiBlitz3.ab2@20485>    BEQ.w freeerr
0002F06C <AmiBlitz3.ab2@20486>   MOVEQ.l #$02,D2
0002F06E <AmiBlitz3.ab2@20487>   MOVE.l A2,-(A7)
0002F072 <AmiBlitz3.ab2@20488>    BSR.w eval
0002F074 <AmiBlitz3.ab2@20489>   MOVEA.l (A7)+,A2
0002F07A <AmiBlitz3.ab2@20490>   MOVE.l A2,mymaxlib
0002F07E <AmiBlitz3.ab2@20491>   ADDA.l $12(A2),A2
0002F084 <AmiBlitz3.ab2@20492>   TST.b debugmode
0002F088 <AmiBlitz3.ab2@20493>    BEQ.w JL_0_C3A8
0002F08E <AmiBlitz3.ab2@20494>   MOVE.w regnum,D1
0002F090 <AmiBlitz3.ab2@20495>   LSL.w #8,D1
0002F092 <AmiBlitz3.ab2@20496>   LSL.w #1,D1
0002F096 <AmiBlitz3.ab2@20497>   ORI.w #$B07C,D1
0002F09A <AmiBlitz3.ab2@20498>    BSR.w writeword
0002F09E <AmiBlitz3.ab2@20499>   MOVE.w -$4(A2),D1
0002F0A2 <AmiBlitz3.ab2@20500>    BSR.w writeword
0002F0A8 <AmiBlitz3.ab2@20501>   MOVE.l maxchk,D1
0002F0AC <AmiBlitz3.ab2@20502>    BSR.w writelong
0002F0AE <AmiBlitz3.ab2@20503>   MOVE.l A2,-(A7)
0002F0B2 <AmiBlitz3.ab2@20504>   MOVE.w #$C30A,D1
0002F0B6 <AmiBlitz3.ab2@20505>    BSR.w Atokejsr
0002F0B8 <AmiBlitz3.ab2@20506>   MOVEA.l (A7)+,A2
0002F0BC <AmiBlitz3.ab2@20509>   MOVE.w -$2(A2),D2
0002F0C2 <AmiBlitz3.ab2@20512>   MOVE.w regnum,D1
0002F0C8 <AmiBlitz3.ab2@20513>   OR.w lslimm,D1
0002F0CC <AmiBlitz3.ab2@20514>   CMP.w #$8,D2
0002F0D0 <AmiBlitz3.ab2@20515>    BCS.w JL_0_C3CE
0002F0D4 <AmiBlitz3.ab2@20516>    BSR.w writeword
0002F0D6 <AmiBlitz3.ab2@20517>   SUBQ.w #8,D2
0002F0DA <AmiBlitz3.ab2@20518>    BNE.w JL_0_C3AC
0002F0DE <AmiBlitz3.ab2@20519> BRA.w JL_0_C3DA
0002F0E0 <AmiBlitz3.ab2@20522>   MOVE.w D2,D0
0002F0E2 <AmiBlitz3.ab2@20523>   LSL.w #8,D0
0002F0E4 <AmiBlitz3.ab2@20524>   LSL.w #1,D0
0002F0E6 <AmiBlitz3.ab2@20525>   OR.w D0,D1
0002F0EA <AmiBlitz3.ab2@20526>   BSR.w writeword
0002F0EC <AmiBlitz3.ab2@20529> RTS
0002F0F0 <AmiBlitz3.ab2@20534>   Dc.b $26,$6D,$00,$00                                     ;MOVEA.L $0000(A5),A3
0002F0F2 <AmiBlitz3.ab2@20535>   Dc.b $D6,$C0                                             ;ADDA.W  D0,A3
0002F0F6 <AmiBlitz3.ab2@20539> mymaxlib:  Ds.l 1
0002F0FA <AmiBlitz3.ab2@20543>   BSR.w JL_0_C340
0002F0FE <AmiBlitz3.ab2@20544>   LEA free(PC),A0
0002F102 <AmiBlitz3.ab2@20545>   LEA freef(PC),A1
0002F108 <AmiBlitz3.ab2@20546>   MOVE.w -$6(A2),$2(A0)
0002F10C <AmiBlitz3.ab2@20547>   BSR.w pokecode
0002F110 <AmiBlitz3.ab2@20548>   MOVE.l -$A(A2),D1
0002F114 <AmiBlitz3.ab2@20551>   BEQ.w nosuperr
0002F118 <AmiBlitz3.ab2@20552>   MOVEA.l mymaxlib(PC),A2
0002F11C <AmiBlitz3.ab2@20553> BRA.w Amakelibsub
0002F120 <AmiBlitz3.ab2@20558>   BSR.w JL_0_C340
0002F126 <AmiBlitz3.ab2@20559>   LEA use,A0
0002F12C <AmiBlitz3.ab2@20560>   LEA usef,A1
0002F132 <AmiBlitz3.ab2@20561>   MOVE.w -$6(A2),$2(A0)
0002F138 <AmiBlitz3.ab2@20562>   MOVE.w -$6(A2),-$2(A1)
0002F13C <AmiBlitz3.ab2@20563>   ADDQ.w #4,-$2(A1)
0002F140 <AmiBlitz3.ab2@20564>   BSR.w pokecode
0002F144 <AmiBlitz3.ab2@20565>   MOVE.l -$E(A2),D1
0002F148 <AmiBlitz3.ab2@20566> BRA.w maxjsr
0002F14E <AmiBlitz3.ab2@20570>   JSR get1bytemain
0002F154 <AmiBlitz3.ab2@20574>   MOVE.l firstiff,D0
0002F158 <AmiBlitz3.ab2@20575>    BEQ.w noiferr
0002F15A <AmiBlitz3.ab2@20576>   MOVEA.l D0,A0
0002F160 <AmiBlitz3.ab2@20577>   CMPI.b #$1,$D(A0)
0002F164 <AmiBlitz3.ab2@20578>    BEQ.w illelseerr
0002F168 <AmiBlitz3.ab2@20579>   MOVE.w #$6000,D1
0002F16E <AmiBlitz3.ab2@20581>     TST.b fast
0002F172 <AmiBlitz3.ab2@20582>     BEQ 'l1
0002F178 <AmiBlitz3.ab2@20583>     OR.l #$ff,d1
0002F17C <AmiBlitz3.ab2@20584>     BSR writeword
0002F17E <AmiBlitz3.ab2@20588>   SWAP D1
0002F182 <AmiBlitz3.ab2@20589>   BSR.w writelong
0002F184 <AmiBlitz3.ab2@20590>   MOVEQ.l #$00,D1
0002F188 <AmiBlitz3.ab2@20591>   BSR.w AJL_0_D7B8
0002F190 <AmiBlitz3.ab2@20592>   MOVE.l destpointer,$8(A0)
0002F194 <AmiBlitz3.ab2@20593> BRA.w do_then
0002F19A <AmiBlitz3.ab2@20597>   LEA ptr_parameterstore,A0
0002F19C <AmiBlitz3.ab2@20598>   MOVE.l A0,-(A7)
0002F1A0 <AmiBlitz3.ab2@20599>   BSR.w JL_0_C23A
0002F1A4 <AmiBlitz3.ab2@20600> BRA.w handle_compileerror
0002F1A8 <AmiBlitz3.ab2@20604>   BSR.w JL_0_BF6A
0002F1AA <AmiBlitz3.ab2@20605>   MOVEQ.l #$05,D1
0002F1B4 <AmiBlitz3.ab2@20607>   MOVE.w oldqflag,instringon
0002F1BA <AmiBlitz3.ab2@20608>   MOVEA.l lastsourcepos,A5
0002F1C0 <AmiBlitz3.ab2@20609>   LEA AJL_0_C25E,A0
0002F1C4 <AmiBlitz3.ab2@20610> BRA.w JL_0_C4B4
0002F1CA <AmiBlitz3.ab2@20614>   LEA ptr_parameterstore,A0
0002F1CE <AmiBlitz3.ab2@20615>   BSR.w JL_0_C23A
0002F1D4 <AmiBlitz3.ab2@20616>   JSR get1bytemain
0002F1D8 <AmiBlitz3.ab2@20617>   BSR.w JL_0_CCA8
0002F1DE <AmiBlitz3.ab2@20618>   LEA namebuff2,A0
0002F1E2 <AmiBlitz3.ab2@20619>   BSR.w JL_0_C23A
0002F1E8 <AmiBlitz3.ab2@20620>   LEA AJL_0_C262,A0
0002F1EA <AmiBlitz3.ab2@20623>   LSL.w #2,D1
0002F1F0 <AmiBlitz3.ab2@20624>   LEA CIF_branches,A1
0002F1F4 <AmiBlitz3.ab2@20625>   MOVE.l $0(A1,D1.W),-(A7)
0002F1F6 <AmiBlitz3.ab2@20626>   MOVEQ.l #-$01,D1
0002F1F8 <AmiBlitz3.ab2@20629>   JSR (A0)
0002F1FA <AmiBlitz3.ab2@20630>   MOVEA.l (A7)+,A1
0002F1FC <AmiBlitz3.ab2@20633> JMP (A1)
0002F200 <AmiBlitz3.ab2@20637>   BEQ.w JL_0_C4F6
0002F204 <AmiBlitz3.ab2@20638> BRA.w JL_0_C4F4
0002F208 <AmiBlitz3.ab2@20642>   BNE.w JL_0_C4F6
0002F20C <AmiBlitz3.ab2@20643> BRA.w JL_0_C4F4
0002F210 <AmiBlitz3.ab2@20647>   BLT.w JL_0_C4F6
0002F214 <AmiBlitz3.ab2@20648> BRA.w JL_0_C4F4
0002F218 <AmiBlitz3.ab2@20652>   BLE.w JL_0_C4F6
0002F21C <AmiBlitz3.ab2@20653> BRA.w JL_0_C4F4
0002F220 <AmiBlitz3.ab2@20657>   BGT.w JL_0_C4F6
0002F224 <AmiBlitz3.ab2@20658> BRA.w JL_0_C4F4
0002F228 <AmiBlitz3.ab2@20662>   BGE.w JL_0_C4F6
0002F22A <AmiBlitz3.ab2@20665>   MOVEQ.l #$00,D1
0002F230 <AmiBlitz3.ab2@20668>   MOVEA.l concomsp,A0
0002F236 <AmiBlitz3.ab2@20669>   MOVE.w skipcode,(A0)+
0002F23C <AmiBlitz3.ab2@20670>   MOVE.l A0,concomsp
0002F242 <AmiBlitz3.ab2@20671>   MOVE.w D1,skipcode
0002F248 <AmiBlitz3.ab2@20672>   JSR get1bytemain
0002F24C <AmiBlitz3.ab2@20673>    BNE.w syntaxerr
0002F252 <AmiBlitz3.ab2@20674> JMP bakup
0002F25A <AmiBlitz3.ab2@20678> rescode:   Dc.b $2B,$7c,$00,$00,$00,$00 :   Ds.w 1         ;MOVE.L  #$00000000,$0000(A5)
0002F25E <AmiBlitz3.ab2@20679> rescode2:  Dc.b $2B,$40                 :   Ds.w 1         ;MOVE.L  D0,$0000(A5)
0002F262 <AmiBlitz3.ab2@20686>   MOVE.w #$FC17,D1
0002F268 <AmiBlitz3.ab2@20687>   JSR uselib
0002F26E <AmiBlitz3.ab2@20689>   JSR reget
0002F272 <AmiBlitz3.ab2@20690>    BEQ.w do_Restore__resbeg
0002F276 <AmiBlitz3.ab2@20691>   BSR.w JL_0_AE22                                          ;get label name!
0002F27A <AmiBlitz3.ab2@20692>   MOVE.w rescode(PC),D1
0002F27E <AmiBlitz3.ab2@20693>   BSR.w writeword
0002F284 <AmiBlitz3.ab2@20694>   JSR addoff                                               ;add offset
0002F288 <AmiBlitz3.ab2@20695>   MOVE.l $C(A2),D1
0002F28C <AmiBlitz3.ab2@20696>   BSR.w writelong
0002F290 <AmiBlitz3.ab2@20697>   MOVE.w rescode+6(PC),D1
0002F294 <AmiBlitz3.ab2@20698>   BSR.w writeword
0002F298 <AmiBlitz3.ab2@20699>   MOVE.l $4(A2),D1                                         ;is it outstanding?
0002F29C <AmiBlitz3.ab2@20700>   BEQ.w do_Restore__no
0002F29E <AmiBlitz3.ab2@20702>   MOVEA.l D1,A1
0002F2A2 <AmiBlitz3.ab2@20703>   ADDQ.l #1,$4(A1)                                         ;make odd - flag for data reference.
0002F2A4 <AmiBlitz3.ab2@20704> RTS
0002F2A6 <AmiBlitz3.ab2@20709> RTS
0002F2AA <AmiBlitz3.ab2@20712>   MOVE.w #$CD00,D1
0002F2B0 <AmiBlitz3.ab2@20713>   JSR Atokejsr
0002F2B4 <AmiBlitz3.ab2@20714>   MOVE.l rescode2(PC),D1
0002F2BA <AmiBlitz3.ab2@20715> JMP writelong
0002F2BE <AmiBlitz3.ab2@20719>   MOVE.w #$FC17,D1
0002F2C4 <AmiBlitz3.ab2@20720>   JSR uselib
0002F2CA <AmiBlitz3.ab2@20723>   MOVE.l dataget,D1
0002F2CE <AmiBlitz3.ab2@20724>   BSR.w writelong
0002F2D2 <AmiBlitz3.ab2@20725>   BSR.w getparameter
0002F2D6 <AmiBlitz3.ab2@20726>   BSR.w JL_0_8E3C
0002F2DA <AmiBlitz3.ab2@20727>   BSR.w calcvar
0002F2DE <AmiBlitz3.ab2@20728>   BTST #$E,D2
0002F2E2 <AmiBlitz3.ab2@20729>    BEQ.w JL_0_C5A6
0002F2E6 <AmiBlitz3.ab2@20730>   MOVE.b #$6,D2
0002F2E8 <AmiBlitz3.ab2@20733>   TST.b D2
0002F2EC <AmiBlitz3.ab2@20734>    BEQ.w noleterr
0002F2F2 <AmiBlitz3.ab2@20735>   TST.b debugmode
0002F2F6 <AmiBlitz3.ab2@20736>    BEQ.w JL_0_C5D0
0002F2FA <AmiBlitz3.ab2@20737>   MOVE.w #$7000,D1
0002F2FC <AmiBlitz3.ab2@20738>   MOVE.b D2,D1
0002F300 <AmiBlitz3.ab2@20739>   ANDI.b #$F,D1
0002F304 <AmiBlitz3.ab2@20740>   BSR.w writeword
0002F308 <AmiBlitz3.ab2@20741>   MOVE.w #$C310,D1
0002F30A <AmiBlitz3.ab2@20742>   MOVE.w D2,-(A7)
0002F30E <AmiBlitz3.ab2@20743>   BSR.w Atokejsr
0002F310 <AmiBlitz3.ab2@20744>   MOVE.w (A7)+,D2
0002F314 <AmiBlitz3.ab2@20747>   CMP.b #$7,D2
0002F318 <AmiBlitz3.ab2@20748>    BEQ.w JL_0_C684
0002F31C <AmiBlitz3.ab2@20749>   CMP.b #$1,D2
0002F320 <AmiBlitz3.ab2@20750>    BNE.w JL_0_C62A
0002F326 <AmiBlitz3.ab2@20751>   LEA dataletb2,A0
0002F32C <AmiBlitz3.ab2@20752>   LEA dataletb2f,A1
0002F330 <AmiBlitz3.ab2@20753>   BTST #$F,D2
0002F334 <AmiBlitz3.ab2@20754>    BEQ.w JL_0_C5FC
0002F338 <AmiBlitz3.ab2@20755>   BSR.w pokecode
0002F33C <AmiBlitz3.ab2@20756> BRA.w JL_0_C668
0002F342 <AmiBlitz3.ab2@20759>   LEA dataletb,A0
0002F348 <AmiBlitz3.ab2@20760>   LEA dataletbf,A1
0002F34E <AmiBlitz3.ab2@20761>   TST.w varmode
0002F352 <AmiBlitz3.ab2@20762>    BEQ.w JL_0_C61E
0002F358 <AmiBlitz3.ab2@20763>   LEA dataletbl,A0
0002F35E <AmiBlitz3.ab2@20764>   LEA dataletblf,A1
0002F362 <AmiBlitz3.ab2@20767>   MOVE.w D3,$4(A0)
0002F366 <AmiBlitz3.ab2@20768>   BSR.w pokecode
0002F36A <AmiBlitz3.ab2@20769> BRA.w JL_0_C668
0002F370 <AmiBlitz3.ab2@20772>   LEA dataletw,A0
0002F374 <AmiBlitz3.ab2@20773>   CMP.b #$3,D2
0002F378 <AmiBlitz3.ab2@20774>    BCS.w JL_0_C63E
0002F37E <AmiBlitz3.ab2@20775>   LEA dataletl,A0
0002F382 <AmiBlitz3.ab2@20778>   BTST #$F,D2
0002F386 <AmiBlitz3.ab2@20779>    BEQ.w JL_0_C652
0002F38A <AmiBlitz3.ab2@20780>   MOVE.w $4(A0),D1
0002F38E <AmiBlitz3.ab2@20781>    BSR.w writeword
0002F392 <AmiBlitz3.ab2@20782> BRA.w JL_0_C668
0002F398 <AmiBlitz3.ab2@20785>   TST.w varmode
0002F39C <AmiBlitz3.ab2@20786>    BEQ.w JL_0_C65E
0002F39E <AmiBlitz3.ab2@20787>   ADDQ.w #6,A0
0002F3A2 <AmiBlitz3.ab2@20790>   MOVE.w D3,$2(A0)
0002F3A4 <AmiBlitz3.ab2@20791>   MOVE.l (A0),D1
0002F3A8 <AmiBlitz3.ab2@20792>   BSR.w writelong
0002F3AE <AmiBlitz3.ab2@20795>   MOVE.l dataput,D1
0002F3B2 <AmiBlitz3.ab2@20796>    BSR.w writelong
0002F3B6 <AmiBlitz3.ab2@20797>   CMP.w #$2C,D0
0002F3BA <AmiBlitz3.ab2@20798>    BEQ.w JL_0_C67C
0002F3BC <AmiBlitz3.ab2@20799> RTS
0002F3C2 <AmiBlitz3.ab2@20802>   JSR get1bytemain
0002F3C6 <AmiBlitz3.ab2@20803> BRA.w JL_0_C584
0002F3CC <AmiBlitz3.ab2@20807>   MOVE.w stlenget,D1
0002F3D0 <AmiBlitz3.ab2@20808>    BSR.w writeword
0002F3D4 <AmiBlitz3.ab2@20809>   BTST #$F,D2
0002F3D8 <AmiBlitz3.ab2@20810>    BNE.w JL_0_C6C0
0002F3DE <AmiBlitz3.ab2@20811>   TST.w varmode
0002F3E2 <AmiBlitz3.ab2@20812>    BEQ.w JL_0_C6B0
0002F3E8 <AmiBlitz3.ab2@20813>   MOVE.w D3,leaampl+2
0002F3EE <AmiBlitz3.ab2@20814>   MOVE.l leaampl,D1
0002F3F2 <AmiBlitz3.ab2@20815> BRA.w JL_0_C6BC
0002F3F8 <AmiBlitz3.ab2@20818>   MOVE.w D3,leaamp+2
0002F3FE <AmiBlitz3.ab2@20819>   MOVE.l leaamp,D1
0002F402 <AmiBlitz3.ab2@20822>   BSR.w writelong
0002F406 <AmiBlitz3.ab2@20825>   MOVE.w #$C701,D1
0002F40C <AmiBlitz3.ab2@20826>   MOVE.w varmode,D2
0002F410 <AmiBlitz3.ab2@20827>    BEQ.w JL_0_C6D0
0002F412 <AmiBlitz3.ab2@20828>   SUBQ.w #1,D1
0002F416 <AmiBlitz3.ab2@20831>   BSR.w Atokejsr
0002F41E <AmiBlitz3.ab2@20832>   MOVE.w #$FFFF,lasta6
0002F424 <AmiBlitz3.ab2@20833>   LEA stalign,A0
0002F42A <AmiBlitz3.ab2@20834>   LEA stalignf,A1
0002F42E <AmiBlitz3.ab2@20835>   BSR.w pokecode
0002F432 <AmiBlitz3.ab2@20836> BRA.w JL_0_C668
0002F436 <AmiBlitz3.ab2@20840>   CMP.w #$2E,D0                                            ;definecode 'lb 'lw 'll
0002F43A <AmiBlitz3.ab2@20841>    BNE.w JL_0_C720
0002F440 <AmiBlitz3.ab2@20842>   JSR get1bytemain
0002F444 <AmiBlitz3.ab2@20843>   CMP.w #$77,D0
0002F448 <AmiBlitz3.ab2@20844>    BEQ.w JL_0_C71C
0002F44C <AmiBlitz3.ab2@20845>   CMP.w #$62,D0
0002F450 <AmiBlitz3.ab2@20846>    BEQ.w JL_0_C718
0002F454 <AmiBlitz3.ab2@20847>   CMP.w #"s",d0
0002F458 <AmiBlitz3.ab2@20848>   BEQ single3
0002F45C <AmiBlitz3.ab2@20849>   CMP.w #"d",d0
0002F460 <AmiBlitz3.ab2@20850>   BEQ double3
0002F464 <AmiBlitz3.ab2@20851>   CMP.w #$6C,D0
0002F468 <AmiBlitz3.ab2@20852>    BNE.w syntaxerr
0002F46A <AmiBlitz3.ab2@20853>   MOVEQ.l #$02,D1
0002F46C <AmiBlitz3.ab2@20854> RTS
0002F474 <AmiBlitz3.ab2@20858>   MOVE.b #1,iee
0002F476 <AmiBlitz3.ab2@20859>   MOVEQ.l #$3,d1
0002F478 <AmiBlitz3.ab2@20860> RTS
0002F480 <AmiBlitz3.ab2@20864>   MOVE.b #1,iee
0002F482 <AmiBlitz3.ab2@20865>   MOVEQ.l #$4,d1
0002F484 <AmiBlitz3.ab2@20866> RTS
0002F486 <AmiBlitz3.ab2@20870>   MOVEQ.l #$00,D1
0002F488 <AmiBlitz3.ab2@20871> RTS
0002F48A <AmiBlitz3.ab2@20875>   MOVEQ.l #$01,D1
0002F48C <AmiBlitz3.ab2@20876> RTS
0002F48E <AmiBlitz3.ab2@20880>   MOVEQ.l #$01,D1
0002F494 <AmiBlitz3.ab2@20881> JMP bakup
0002F498 <AmiBlitz3.ab2@20885>   BSR.w JL_0_C6F0
0002F49A <AmiBlitz3.ab2@20887>   MOVE.w D1,-(A7)
0002F49E <AmiBlitz3.ab2@20888>    BSR.w AJL_0_BF6E
0002F4A2 <AmiBlitz3.ab2@20889>   CMP.w #$2C,D0
0002F4A6 <AmiBlitz3.ab2@20890>    BNE.w syntaxerr
0002F4A8 <AmiBlitz3.ab2@20891>   MOVE.l D3,-(A7)
0002F4AC <AmiBlitz3.ab2@20892>    BSR.w AJL_0_BF6E
0002F4AE <AmiBlitz3.ab2@20893>   MOVE.l D3,D1
0002F4B0 <AmiBlitz3.ab2@20894>   MOVE.l (A7)+,D3
0002F4B2 <AmiBlitz3.ab2@20895>   MOVE.w (A7)+,D2
0002F4B6 <AmiBlitz3.ab2@20896>    BEQ.w JL_0_C774
0002F4BA <AmiBlitz3.ab2@20900>   CMP.w #$1,D2
0002F4BE <AmiBlitz3.ab2@20901>    BEQ.w JL_0_C768
0002F4C0 <AmiBlitz3.ab2@20904>   SWAP D1
0002F4C4 <AmiBlitz3.ab2@20905>    BSR.w writeword
0002F4C6 <AmiBlitz3.ab2@20906>   SWAP D1
0002F4CA <AmiBlitz3.ab2@20907>    BSR.w writeword
0002F4CC <AmiBlitz3.ab2@20908>   SUBQ.l #1,D3
0002F4D0 <AmiBlitz3.ab2@20909>    BNE.w JL_0_C754
0002F4D2 <AmiBlitz3.ab2@20910> RTS
0002F4D6 <AmiBlitz3.ab2@20913>    BSR.w writeword
0002F4D8 <AmiBlitz3.ab2@20914>   SUBQ.l #1,D3
0002F4DC <AmiBlitz3.ab2@20915>    BNE.w JL_0_C768
0002F4DE <AmiBlitz3.ab2@20916> RTS
0002F4E2 <AmiBlitz3.ab2@20919>    BSR.w writebyte
0002F4E4 <AmiBlitz3.ab2@20920>   SUBQ.l #1,D3
0002F4E8 <AmiBlitz3.ab2@20921>    BNE.w JL_0_C774
0002F4EA <AmiBlitz3.ab2@20922> RTS
0002F4EE <AmiBlitz3.ab2@20926>   BSR.w JL_0_C6F0                                          ;definestorage
0002F4F0 <AmiBlitz3.ab2@20927>   MOVE.w D1,-(A7)
0002F4F4 <AmiBlitz3.ab2@20928>   BSR.w AJL_0_BF6E
0002F4F6 <AmiBlitz3.ab2@20929>   MOVE.w (A7)+,D1
0002F4F8 <AmiBlitz3.ab2@20930>   LSL.l D1,D3
0002F4FA <AmiBlitz3.ab2@20931>   MOVE.l d3,d0
0002F4FE <AmiBlitz3.ab2@20932>   BEQ 'll5
0002F500 <AmiBlitz3.ab2@20933>   MOVEQ #0,d1
0002F506 <AmiBlitz3.ab2@20936>     JSR writebyte
0002F508 <AmiBlitz3.ab2@20937>     SUBQ.l #1,d3
0002F50C <AmiBlitz3.ab2@20938>   BNE.s 'll10
0002F50E <AmiBlitz3.ab2@20941> RTS
0002F510 <AmiBlitz3.ab2@20945>   MOVE.w D0,-(A7)
0002F516 <AmiBlitz3.ab2@20946>   LEA dummyasm,A0
0002F51C <AmiBlitz3.ab2@20947>   MOVEA.l destpointer,A1
0002F526 <AmiBlitz3.ab2@20948>   MOVE.w asmlen2,asmlen
0002F52C <AmiBlitz3.ab2@20949>   JSR insasm
0002F52E <AmiBlitz3.ab2@20950>   MOVE.w (A7)+,D0
0002F530 <AmiBlitz3.ab2@20951> RTS
0002F534 <AmiBlitz3.ab2@20955>   BSR.w JL_0_C6F0
0002F53E <AmiBlitz3.ab2@20957>   MOVE.l #ptr_parameterstore,asmbuff
0002F540 <AmiBlitz3.ab2@20958>   TST.w D1
0002F544 <AmiBlitz3.ab2@20959>    BEQ.w JL_0_C7EE
0002F548 <AmiBlitz3.ab2@20960>   CMP.w #$1,D1
0002F54C <AmiBlitz3.ab2@20961>    BEQ.w JL_0_C844
0002F550 <AmiBlitz3.ab2@20962>   CMP.w #$2,d1
0002F554 <AmiBlitz3.ab2@20963>    BEQ long
0002F558 <AmiBlitz3.ab2@20964>   CMP.w #$3,d1
0002F55C <AmiBlitz3.ab2@20965>    BEQ single
0002F55E <AmiBlitz3.ab2@20966>    MOVEQ.l #$0d,D3
0002F564 <AmiBlitz3.ab2@20972>    JSR asmconst
0002F568 <AmiBlitz3.ab2@20973>    BSR.w JL_0_C796
0002F56C <AmiBlitz3.ab2@20974>    BSR.w writelong
0002F570 <AmiBlitz3.ab2@20975>    BSR   writelong
0002F574 <AmiBlitz3.ab2@20976>   CMP.w #$2C,D0
0002F578 <AmiBlitz3.ab2@20977>    BEQ.w JL_0_C7D8b
0002F57A <AmiBlitz3.ab2@20978> RTS
0002F57C <AmiBlitz3.ab2@20982>   MOVEQ.l #$0B,D3
0002F584 <AmiBlitz3.ab2@20986>   MOVE.b #1,_dcb
0002F58A <AmiBlitz3.ab2@20989>   JSR asmconst
0002F590 <AmiBlitz3.ab2@20990>   CLR.b _dcb
0002F594 <AmiBlitz3.ab2@20991>   BSR.w JL_0_C796
0002F598 <AmiBlitz3.ab2@20992>   BSR writebyte
0002F59C <AmiBlitz3.ab2@20993>   BSR writebyte
0002F5A0 <AmiBlitz3.ab2@20994>   BSR writebyte                                            ;long
0002F5A4 <AmiBlitz3.ab2@20995>   BSR writebyte
0002F5A8 <AmiBlitz3.ab2@20996>   CMP.w #$2C,D0
0002F5AC <AmiBlitz3.ab2@20997>    BEQ.w JL_0_C7D8
0002F5AE <AmiBlitz3.ab2@20998> RTS
0002F5B0 <AmiBlitz3.ab2@21002>   MOVEQ.l #$0c,D3
0002F5B8 <AmiBlitz3.ab2@21006>   MOVE.b #1,_dcb
0002F5BE <AmiBlitz3.ab2@21009>   JSR asmconst
0002F5C4 <AmiBlitz3.ab2@21010>   CLR.b _dcb
0002F5C8 <AmiBlitz3.ab2@21011>   BSR.w JL_0_C796
0002F5CC <AmiBlitz3.ab2@21012>   BSR.w writebyte
0002F5D0 <AmiBlitz3.ab2@21013>   BSR.w writebyte
0002F5D4 <AmiBlitz3.ab2@21014>   BSR.w writebyte
0002F5D8 <AmiBlitz3.ab2@21015>   BSR.w writebyte
0002F5DC <AmiBlitz3.ab2@21016>   CMP.w #$2C,D0
0002F5E0 <AmiBlitz3.ab2@21017>    BEQ.w JL_0_C7D8a
0002F5E2 <AmiBlitz3.ab2@21018> RTS
0002F5E4 <AmiBlitz3.ab2@21023>   MOVEQ.l #$11,D3
0002F5EA <AmiBlitz3.ab2@21026>   JSR get1bytemain
0002F5EE <AmiBlitz3.ab2@21027>   CMP.w #$22,D0
0002F5F2 <AmiBlitz3.ab2@21028>    BNE.w JL_0_C81E
0002F5F4 <AmiBlitz3.ab2@21031>   MOVE.b (a5)+,d0                                          ;bsr.w get1bytemain ascii dc.b
0002F5F8 <AmiBlitz3.ab2@21032>    BEQ.w syntaxerr
0002F5FC <AmiBlitz3.ab2@21033>   CMP.w #$22,D0
0002F600 <AmiBlitz3.ab2@21034>    BEQ.w JL_0_C816
0002F604 <AmiBlitz3.ab2@21035>   CMP.b #"\",d0
0002F608 <AmiBlitz3.ab2@21036>    BNE 'n1
0002F60C <AmiBlitz3.ab2@21037>   CMP.b #"\",(a5)
0002F610 <AmiBlitz3.ab2@21038>    BEQ 'do1
0002F612 <AmiBlitz3.ab2@21041>   MOVE.w D0,D1
0002F616 <AmiBlitz3.ab2@21042>   BSR.w writebyte
0002F61A <AmiBlitz3.ab2@21043> BRA.w JL_0_C7FC
0002F622 <AmiBlitz3.ab2@21046>   CMP.l #"__DA",1(a5)
0002F626 <AmiBlitz3.ab2@21047>    BNE 'nodate1
0002F62E <AmiBlitz3.ab2@21048>   CMP.l #"TE__",5(a5)
0002F632 <AmiBlitz3.ab2@21049>    BEQ 'c1
0002F63A <AmiBlitz3.ab2@21050>   CMP.l #"TE_G",5(a5)
0002F63E <AmiBlitz3.ab2@21051>    BNE 'nodate1
0002F646 <AmiBlitz3.ab2@21052>   CMP.l #"ER__",9(a5)
0002F64A <AmiBlitz3.ab2@21053>    BNE 'nodate1
0002F650 <AmiBlitz3.ab2@21054>   JSR compiledatedc_ger
0002F654 <AmiBlitz3.ab2@21055> BRA 'n1
0002F65A <AmiBlitz3.ab2@21058>   JSR compiledatedc
0002F65E <AmiBlitz3.ab2@21059> BRA 'n1
0002F666 <AmiBlitz3.ab2@21062>   CMP.l #"__VE",1(a5)
0002F66A <AmiBlitz3.ab2@21063>    BNE 'n1
0002F670 <AmiBlitz3.ab2@21064>   CMP.w #"R_",5(a5)
0002F674 <AmiBlitz3.ab2@21065>    BNE 'n1
0002F67A <AmiBlitz3.ab2@21066>   JSR version_string_dc
0002F67E <AmiBlitz3.ab2@21067> BRA.w JL_0_C7FC
0002F684 <AmiBlitz3.ab2@21071>   CLR.w instringon
0002F68A <AmiBlitz3.ab2@21072>   JSR get1bytemain
0002F68E <AmiBlitz3.ab2@21073> BRA.w JL_0_C83A
0002F698 <AmiBlitz3.ab2@21078>    MOVE.w oldqflag,instringon
0002F69E <AmiBlitz3.ab2@21079>   MOVEA.l lastsourcepos,A5
0002F6A4 <AmiBlitz3.ab2@21080>    JSR asmconst
0002F6AA <AmiBlitz3.ab2@21081>   SUBQ.l #1,destpointer
0002F6AE <AmiBlitz3.ab2@21082>    BSR.w JL_0_C796
0002F6B4 <AmiBlitz3.ab2@21083>   ADDQ.l #1,destpointer
0002F6B8 <AmiBlitz3.ab2@21084>    BSR.w writebyte
0002F6BC <AmiBlitz3.ab2@21087>   CMP.w #$2C,D0
0002F6C0 <AmiBlitz3.ab2@21088>    BEQ.w JL_0_C7F0
0002F6C2 <AmiBlitz3.ab2@21089> RTS
0002F6C4 <AmiBlitz3.ab2@21093>   MOVEQ.l #$10,D3
0002F6CC <AmiBlitz3.ab2@21099>   MOVE.b #1,_dcb
0002F6D2 <AmiBlitz3.ab2@21100>   JSR asmconst
0002F6D8 <AmiBlitz3.ab2@21101>   CLR.b _dcb
0002F6DC <AmiBlitz3.ab2@21102>   BSR.w JL_0_C796
0002F6E0 <AmiBlitz3.ab2@21103>   BSR.w writebyte
0002F6E4 <AmiBlitz3.ab2@21104>   BSR.w writebyte
0002F6E8 <AmiBlitz3.ab2@21105>   CMP.w #$2C,D0
0002F6EC <AmiBlitz3.ab2@21106>    BEQ.w JL_0_C84A
0002F6EE <AmiBlitz3.ab2@21107> RTS
0002F6F4 <AmiBlitz3.ab2@21111>   ADDQ.l #3,destpointer
0002F6FC <AmiBlitz3.ab2@21112>   ANDI.w #$FFFC,destpointer+2
0002F6FE <AmiBlitz3.ab2@21113> RTS
0002F704 <AmiBlitz3.ab2@21117>   ADDQ.l #7,destpointer
0002F70C <AmiBlitz3.ab2@21118>   ANDI.w #$FFF8,destpointer+2
0002F70E <AmiBlitz3.ab2@21119> RTS
0002F714 <AmiBlitz3.ab2@21123>   ADDQ.l #1,destpointer                                    ;even
0002F71C <AmiBlitz3.ab2@21124>   BCLR #$0,destpointer+3
0002F71E <AmiBlitz3.ab2@21125> RTS
0002F720 <AmiBlitz3.ab2@21128> datasize: Ds.w 1
0002F726 <AmiBlitz3.ab2@21138>   TST.b debugmode
0002F72A <AmiBlitz3.ab2@21139>   BEQ.w pdt__skip
0002F72E <AmiBlitz3.ab2@21140>   MOVE.w #$4420,D0                                         ;'D '
0002F732 <AmiBlitz3.ab2@21141>   MOVE.b datasize+1(PC),D0
0002F736 <AmiBlitz3.ab2@21142> BRA.w JL_0_C1E6
0002F738 <AmiBlitz3.ab2@21145> RTS
0002F73C <AmiBlitz3.ab2@21149>   MOVE.w #$FC17,D1
0002F742 <AmiBlitz3.ab2@21150>    JSR uselib
0002F74C <AmiBlitz3.ab2@21152>    MOVE.w oldqflag,instringon
0002F752 <AmiBlitz3.ab2@21153>   MOVEA.l lastsourcepos,A5
0002F758 <AmiBlitz3.ab2@21154>    JSR AJL_0_498A
0002F75E <AmiBlitz3.ab2@21155>   MOVE.w D1,datasize
0002F762 <AmiBlitz3.ab2@21156>   CMP.w #$7,D1
0002F766 <AmiBlitz3.ab2@21157>    BEQ.w JL_0_C944
0002F768 <AmiBlitz3.ab2@21158>   MOVE.w D1,-(A7)
0002F76C <AmiBlitz3.ab2@21161>   BSR.w pdt
0002F76E <AmiBlitz3.ab2@21162>   MOVE.w (A7),D2
0002F772 <AmiBlitz3.ab2@21163>    BSR.w JL_0_B1D8
0002F774 <AmiBlitz3.ab2@21164>   CMP.w (A7),D2                                            ;datamode
0002F778 <AmiBlitz3.ab2@21165>    BEQ.w JL_0_C920
0002F77A <AmiBlitz3.ab2@21166>   MOVE.w D2,D1
0002F77C <AmiBlitz3.ab2@21167>   MOVE.w (A7),D2
0002F780 <AmiBlitz3.ab2@21168>   CMP.w #$2,D2
0002F784 <AmiBlitz3.ab2@21169>    BNE.w JL_0_C8FE
0002F788 <AmiBlitz3.ab2@21170>   CMP.w #$3,D1
0002F78C <AmiBlitz3.ab2@21171>    BNE.w baddaterr
0002F792 <AmiBlitz3.ab2@21172>   CMP.l #$10000,D3
0002F796 <AmiBlitz3.ab2@21173>    BCC.w baddaterr
0002F79A <AmiBlitz3.ab2@21174> BRA.w JL_0_C920
0002F79E <AmiBlitz3.ab2@21177>   CMP.w #$1,D2
0002F7A2 <AmiBlitz3.ab2@21178>    BNE.w JL_0_C91C
0002F7A6 <AmiBlitz3.ab2@21179>   CMP.w #$2,D1
0002F7AA <AmiBlitz3.ab2@21180>    BNE.w baddaterr
0002F7B0 <AmiBlitz3.ab2@21181>   CMP.l #$100,D3
0002F7B4 <AmiBlitz3.ab2@21182>    BCC.w baddaterr
0002F7B8 <AmiBlitz3.ab2@21183> BRA.w JL_0_C920
0002F7BC <AmiBlitz3.ab2@21186> BRA.w baddaterr
0002F7C0 <AmiBlitz3.ab2@21189>   CMP.w #$3,D2
0002F7C4 <AmiBlitz3.ab2@21190>   BCC.w JL_0_C930
0002F7C8 <AmiBlitz3.ab2@21191>   BSR.w JL_0_C1E6
0002F7CC <AmiBlitz3.ab2@21192> BRA.w JL_0_C934
0002F7D2 <AmiBlitz3.ab2@21195>   TST.b iee
0002F7D6 <AmiBlitz3.ab2@21196>   BEQ 'old
0002F7DA <AmiBlitz3.ab2@21197>   CMP.b #5,d2
0002F7DE <AmiBlitz3.ab2@21198>   BNE 'old
0002F7E2 <AmiBlitz3.ab2@21199>   Dc.l $f2006400                                           ;  fpu data write fmove.s fp0,d0
0002F7E6 <AmiBlitz3.ab2@21203>   BSR.w JL_0_C1DE                                          ;write data >3
0002F7EC <AmiBlitz3.ab2@21206>   JSR reget
0002F7F0 <AmiBlitz3.ab2@21207>   CMP.w #$2C,D0
0002F7F4 <AmiBlitz3.ab2@21208>    BEQ.w JL_0_C8CC
0002F7F6 <AmiBlitz3.ab2@21209>   ADDQ.w #2,A7
0002F7F8 <AmiBlitz3.ab2@21210> RTS
0002F7FC <AmiBlitz3.ab2@21213>    BSR.w pdt
0002F802 <AmiBlitz3.ab2@21214>   MOVE.l data2,-(A7)
0002F806 <AmiBlitz3.ab2@21215>    BSR.w JL_0_C1DE
0002F808 <AmiBlitz3.ab2@21216>   MOVEQ.l #$00,D1
0002F80E <AmiBlitz3.ab2@21217>    JSR get1bytemain
0002F812 <AmiBlitz3.ab2@21218>    BEQ.w JL_0_C9A6
0002F816 <AmiBlitz3.ab2@21219>   CMP.w #$22,D0
0002F81A <AmiBlitz3.ab2@21220>    BEQ.w JL_0_C988
0002F81E <AmiBlitz3.ab2@21221>   CMP.w #$2C,D0
0002F822 <AmiBlitz3.ab2@21222>    BEQ.w JL_0_C9A6
0002F826 <AmiBlitz3.ab2@21225>    BSR.w JL_0_C210
0002F828 <AmiBlitz3.ab2@21226>   ADDQ.w #1,D1
0002F82E <AmiBlitz3.ab2@21227>    JSR getchar
0002F830 <AmiBlitz3.ab2@21228>   TST.w D0
0002F834 <AmiBlitz3.ab2@21229>    BEQ.w JL_0_C9A6
0002F838 <AmiBlitz3.ab2@21230>   CMP.w #$2C,D0
0002F83C <AmiBlitz3.ab2@21231>    BEQ.w JL_0_C9A6
0002F840 <AmiBlitz3.ab2@21232> BRA.w JL_0_C96C
0002F842 <AmiBlitz3.ab2@21236>    MOVEQ #0,d0
0002F844 <AmiBlitz3.ab2@21237>    MOVE.b (a5)+,d0
0002F848 <AmiBlitz3.ab2@21238>    BEQ.w notqerr2
0002F84C <AmiBlitz3.ab2@21239>   CMP.w #$22,D0
0002F850 <AmiBlitz3.ab2@21240>    BEQ.w JL_0_C9A2
0002F854 <AmiBlitz3.ab2@21241>    BSR.w JL_0_C210
0002F856 <AmiBlitz3.ab2@21242>   ADDQ.w #1,D1
0002F85A <AmiBlitz3.ab2@21243> BRA.w JL_0_C988
0002F860 <AmiBlitz3.ab2@21244> notqerr2 JMP notqerr
0002F866 <AmiBlitz3.ab2@21246>   CLR.w instringon
0002F86C <AmiBlitz3.ab2@21247>   JSR get1bytemain
0002F86E <AmiBlitz3.ab2@21250>   MOVEA.l (A7)+,A0
0002F874 <AmiBlitz3.ab2@21251>   MOVE.w dontwrite,D2
0002F878 <AmiBlitz3.ab2@21252>    BNE.w JL_0_C9B4
0002F87A <AmiBlitz3.ab2@21253>   MOVE.l D1,(A0)
0002F880 <AmiBlitz3.ab2@21256>   ADDQ.l #1,data2
0002F888 <AmiBlitz3.ab2@21257>   BCLR #$0,data2+3
0002F88C <AmiBlitz3.ab2@21258>   CMP.w #$2C,D0
0002F890 <AmiBlitz3.ab2@21259>    BEQ.w JL_0_C944
0002F892 <AmiBlitz3.ab2@21260> RTS
0002F898 <AmiBlitz3.ab2@21264> JMP vardeclareerr
0002F89E <AmiBlitz3.ab2@21267>   MOVE.w proceduremode,D1                                  ;doshared
0002F8A2 <AmiBlitz3.ab2@21269>   BNE.w 'l1
0002F8A4 <AmiBlitz3.ab2@21270>   MOVE.w D1,-(A7)
0002F8AA <AmiBlitz3.ab2@21271>   CLR.w proceduremode
0002F8B0 <AmiBlitz3.ab2@21274>   LEA varbase,a2
0002F8B4 <AmiBlitz3.ab2@21275>   BSR.w getparameter
0002F8B6 <AmiBlitz3.ab2@21276>   MOVE.w d2,-(a7)
0002F8BC <AmiBlitz3.ab2@21277>    JSR findvariable
0002F8C0 <AmiBlitz3.ab2@21278>    BEQ 'checkdim
0002F8C6 <AmiBlitz3.ab2@21279>    LEA sharebase,a2
0002F8C8 <AmiBlitz3.ab2@21280>    MOVEQ #$f+4,d7
0002F8CC <AmiBlitz3.ab2@21281>    BSR.w findlab                                         ;find var
0002F8D0 <AmiBlitz3.ab2@21282>    BEQ.b dupsherr
0002F8D4 <AmiBlitz3.ab2@21283>    BSR addlabel
0002F8D8 <AmiBlitz3.ab2@21284>    CMP.b #".",d0
0002F8DC <AmiBlitz3.ab2@21285>    BNE JUMP_vardeclareerr
0002F8DE <AmiBlitz3.ab2@21286>    MOVE.l a2,a3
0002F8E4 <AmiBlitz3.ab2@21287>    JSR JL_0_8EB8b
0002F8E6 <AmiBlitz3.ab2@21318>   MOVE.w (a7)+,d2
0002F8EA <AmiBlitz3.ab2@21319>    CMP.b #",",d0
0002F8EE <AmiBlitz3.ab2@21320>    BNE 'ret
0002F8F4 <AmiBlitz3.ab2@21321>    JSR get1bytemain
0002F8F8 <AmiBlitz3.ab2@21322> BRA 'again2
0002F8FE <AmiBlitz3.ab2@21325>   MOVE.w (A7)+,proceduremode
0002F900 <AmiBlitz3.ab2@21326> RTS
0002F906 <AmiBlitz3.ab2@21333>    CMP.w #2,6(a2)
0002F90A <AmiBlitz3.ab2@21334>    BEQ 'do
0002F910 <AmiBlitz3.ab2@21335>    CMP.w #$102,6(a2)
0002F914 <AmiBlitz3.ab2@21336>    BEQ 'do
0002F91A <AmiBlitz3.ab2@21337> JMP errormsg_declaredtwice                                 ;was BRA 'errormsg_declaredtwice_
0002F920 <AmiBlitz3.ab2@21340>   LEA varbase,a0
0002F922 <AmiBlitz3.ab2@21343>   MOVE.l (A0),D0                                           ;find label
0002F926 <AmiBlitz3.ab2@21344>    BEQ.b 'z1
0002F928 <AmiBlitz3.ab2@21345>    CMP.l d0,a2
0002F92C <AmiBlitz3.ab2@21346>    BEQ 'z1
0002F92E <AmiBlitz3.ab2@21347>    MOVE.l d0,a0
0002F932 <AmiBlitz3.ab2@21348> BRA 'm1
0002F934 <AmiBlitz3.ab2@21351>   MOVE.l (a2),d1
0002F936 <AmiBlitz3.ab2@21352>     MOVE.l d1,(a0)
0002F938 <AmiBlitz3.ab2@21353>     CLR.l (a2)
0002F93E <AmiBlitz3.ab2@21354>     LEA sharebase,a0
0002F940 <AmiBlitz3.ab2@21355>     MOVE.l (a0),(a2)
0002F942 <AmiBlitz3.ab2@21356>     MOVE.l a2,(a0)
0002F948 <AmiBlitz3.ab2@21357>     JSR get1bytemain
0002F94E <AmiBlitz3.ab2@21358>     JSR get1bytemain
0002F952 <AmiBlitz3.ab2@21359> BRA 'domore
0002F95A <AmiBlitz3.ab2@21362>   MOVE.b #1,nowdeclare
0002F95C <AmiBlitz3.ab2@21363>   MOVE.w D1,-(A7)
0002F962 <AmiBlitz3.ab2@21364>   CLR.w proceduremode
0002F966 <AmiBlitz3.ab2@21367>    BSR.w getparameter
0002F968 <AmiBlitz3.ab2@21368>   MOVE.w D2,-(A7)
0002F96E <AmiBlitz3.ab2@21369>   LEA firstglob,A2
0002F972 <AmiBlitz3.ab2@21370>    BSR.w findvariable2
0002F976 <AmiBlitz3.ab2@21371>    BNE.b JL_0_CA06
0002F97C <AmiBlitz3.ab2@21374>   MOVE.b flagmask+1,D1
0002F980 <AmiBlitz3.ab2@21375>   MOVE.b $7(A2),D3
0002F982 <AmiBlitz3.ab2@21376>   EOR.b D3,D1
0002F986 <AmiBlitz3.ab2@21377>    BEQ.w dupsherr
0002F98A <AmiBlitz3.ab2@21378>    BSR.w findlab
0002F98E <AmiBlitz3.ab2@21379>    BEQ.b JL_0_C9F0
0002F992 <AmiBlitz3.ab2@21382>    BSR.w addlabel
0002F994 <AmiBlitz3.ab2@21383>   MOVE.w (A7)+,D2
0002F996 <AmiBlitz3.ab2@21384>   MOVE.l A2,-(A7)
0002F99A <AmiBlitz3.ab2@21385>    BSR.w JL_0_8E3C
0002F99C <AmiBlitz3.ab2@21386>   MOVEA.l (A7)+,A2
0002F99E <AmiBlitz3.ab2@21387>   MOVEQ.l #$04,D1
0002F9A0 <AmiBlitz3.ab2@21388>   ADDQ.w #4,A2
0002F9A2 <AmiBlitz3.ab2@21389>   ADDQ.w #4,A3
0002F9A4 <AmiBlitz3.ab2@21392>     MOVE.w (A3)+,(A2)+
0002F9A8 <AmiBlitz3.ab2@21393>   DBF D1,JL_0_CA1A
0002F9B0 <AmiBlitz3.ab2@21395>   BTST #$1,flagmask+1
0002F9B4 <AmiBlitz3.ab2@21396>    BEQ.w JL_0_CA3C
0002F9BA <AmiBlitz3.ab2@21397>    JSR get1bytemain
0002F9BE <AmiBlitz3.ab2@21398>   CMP.w #$29,D0
0002F9C2 <AmiBlitz3.ab2@21399>    BNE.w syntaxerrc
0002F9C8 <AmiBlitz3.ab2@21400>    JSR get1bytemain
0002F9CC <AmiBlitz3.ab2@21403>    CMP.w #$2C,D0
0002F9D0 <AmiBlitz3.ab2@21404>    BNE.w JL_0_CA4C
0002F9D6 <AmiBlitz3.ab2@21405>    JSR get1bytemain
0002F9DA <AmiBlitz3.ab2@21406> BRA.w JL_0_C9DE
0002F9E0 <AmiBlitz3.ab2@21409>   MOVE.w (A7)+,proceduremode
0002F9E2 <AmiBlitz3.ab2@21410> RTS
0002F9E8 <AmiBlitz3.ab2@21412> syntaxerrc JMP syntaxerr
0002F9EC <AmiBlitz3.ab2@21415>    BSR.w JL_0_C05C
0002F9F2 <AmiBlitz3.ab2@21416>    JSR check_incdir                                        ; ergebnis in d2
0002F9F8 <AmiBlitz3.ab2@21418>    LEA ptr_parameterstore,a1
0002F9FA <AmiBlitz3.ab2@21419>    MOVE.l d2,-(a7)
0002FA00 <AmiBlitz3.ab2@21420>    LEA includetemp,a0                                      ; filename in includetemp packen
0002FA02 <AmiBlitz3.ab2@21423>      MOVE.b (a1)+,(a0)+
0002FA06 <AmiBlitz3.ab2@21424>    BNE 'l4
0002FA0C <AmiBlitz3.ab2@21426>    LEA ptr_parameterstore,a1
0002FA0E <AmiBlitz3.ab2@21427>    MOVE.l a1,a0
0002FA10 <AmiBlitz3.ab2@21430>     TST.b (a0)+
0002FA14 <AmiBlitz3.ab2@21431>    BNE 'l1
0002FA16 <AmiBlitz3.ab2@21434>      MOVE.b -(a0),d0
0002FA1A <AmiBlitz3.ab2@21435>      CMP.b #":",d0
0002FA1E <AmiBlitz3.ab2@21436>       BEQ 'out
0002FA22 <AmiBlitz3.ab2@21437>      CMP.b #"/",d0
0002FA26 <AmiBlitz3.ab2@21438>       BEQ 'out
0002FA28 <AmiBlitz3.ab2@21439>      CMP.l a1,a0
0002FA2C <AmiBlitz3.ab2@21440>       BEQ 'out2
0002FA30 <AmiBlitz3.ab2@21441> BRA 'l2
0002FA32 <AmiBlitz3.ab2@21444>    ADDQ.l #1,a0                                            ; dateinamen vom pfad extrahiert
0002FA34 <AmiBlitz3.ab2@21447>    MOVEQ.l #-$01,D2
0002FA36 <AmiBlitz3.ab2@21450>      ADDQ.w #1,D2
0002FA38 <AmiBlitz3.ab2@21451>      MOVE.b (a0)+,(a1)+
0002FA3C <AmiBlitz3.ab2@21452>    BNE 'l3
0002FA3E <AmiBlitz3.ab2@21453>    CLR.b (a1)+
0002FA44 <AmiBlitz3.ab2@21455>    LEA ptr_parameterstore,a1
0002FA48 <AmiBlitz3.ab2@21456>    BSR.w findxinc                                         ;find include
0002FA4C <AmiBlitz3.ab2@21457>     BEQ.w 'outb
0002FA4E <AmiBlitz3.ab2@21459>    MOVE.w D2,-(A7)
0002FA52 <AmiBlitz3.ab2@21460>    BSR.w addlabel
0002FA54 <AmiBlitz3.ab2@21461>    MOVE.w (A7)+,D2
0002FA5A <AmiBlitz3.ab2@21463>    LEA ptr_parameterstore,a1
0002FA60 <AmiBlitz3.ab2@21464>    LEA includetemp,a0                                      ; namen in includetemp schreiben
0002FA62 <AmiBlitz3.ab2@21467>     MOVE.b (a0)+,(a1)+
0002FA66 <AmiBlitz3.ab2@21468>    BNE 'l4b
0002FA68 <AmiBlitz3.ab2@21470>    MOVE.l (a7)+,d2
0002FA6E <AmiBlitz3.ab2@21471>    LEA ptr_parameterstore,a1
0002FA72 <AmiBlitz3.ab2@21472> BRA.w JL_0_CB18
0002FA78 <AmiBlitz3.ab2@21475>    LEA ptr_parameterstore,a1
0002FA7E <AmiBlitz3.ab2@21476>    LEA includetemp,a0
0002FA80 <AmiBlitz3.ab2@21479>     MOVE.b (a0)+,(a1)+
0002FA84 <AmiBlitz3.ab2@21480>    BNE 'l4b2
0002FA86 <AmiBlitz3.ab2@21482>    MOVE.l (a7)+,d2
0002FA8C <AmiBlitz3.ab2@21483>    LEA ptr_parameterstore,a1
0002FA8E <AmiBlitz3.ab2@21486> RTS
0002FA92 <AmiBlitz3.ab2@21490>   BSR.w JL_0_C05C                                              ; test and get the parameter (includestring)
0002FA98 <AmiBlitz3.ab2@21492>   JSR check_IncBinDir                                          ; to fix the path problem in CLIMode  tomsmart1
0002FA9E <AmiBlitz3.ab2@21494>   MOVEA.l _dosbase,A6
0002FAA0 <AmiBlitz3.ab2@21495>   MOVE.l D0,D7                                                 ; store Lockpointer
0002FAA4 <AmiBlitz3.ab2@21496>    BEQ.w error_cant_open_include                               ; no pointer => errormessage
0002FAA6 <AmiBlitz3.ab2@21497>   MOVE.l D7,D1                                                 ; begin get the size of the file to include
0002FAAC <AmiBlitz3.ab2@21498>   MOVE.l ptr_macrobuffer_begin,D2
0002FAB0 <AmiBlitz3.ab2@21499>    JSR _Examine(A6)
0002FAB6 <AmiBlitz3.ab2@21500>   MOVEA.l ptr_macrobuffer_begin,A0
0002FABA <AmiBlitz3.ab2@21501>   MOVE.l $4(A0),D0
0002FABE <AmiBlitz3.ab2@21502>    BPL.w error_cant_open_include                               ; something went wrong => errormessage
0002FAC2 <AmiBlitz3.ab2@21503>   MOVE.l $7C(A0),D3                                            ; store the size of the file to include
0002FAC4 <AmiBlitz3.ab2@21504>   MOVE.l D7,D1                                                 ; begin unlock the file
0002FAC8 <AmiBlitz3.ab2@21505>    JSR _UnLock(A6)
0002FACE <AmiBlitz3.ab2@21507>   MOVE.l #ptr_parameterstore,D1                                ; begin Open and Load the file
0002FAD4 <AmiBlitz3.ab2@21508>   MOVE.l #HUNK_RELOC_16__MODE_OLDFILE,D2                       
0002FAD8 <AmiBlitz3.ab2@21509>    JSR _Open(A6)
0002FADA <AmiBlitz3.ab2@21510>   MOVE.l D0,D7
0002FADE <AmiBlitz3.ab2@21511>    BEQ.w error_cant_open_include
0002FAE4 <AmiBlitz3.ab2@21512>   MOVE.l destpointer,D0
0002FAE6 <AmiBlitz3.ab2@21513>   ADD.l D3,D0
0002FAEC <AmiBlitz3.ab2@21514>   CMP.l destbufferend,D0
0002FAF0 <AmiBlitz3.ab2@21515>    BHI.w JL_0_CAF6
0002FAF6 <AmiBlitz3.ab2@21516>   MOVE.l destpointer,D2
0002FAF8 <AmiBlitz3.ab2@21517>   MOVE.l D7,D1
0002FAFC <AmiBlitz3.ab2@21518>    JSR _Read(A6)
0002FB02 <AmiBlitz3.ab2@21519>   CMP.l #$FFFFFFFF,D0
0002FB06 <AmiBlitz3.ab2@21520>    BEQ.w error_reading_file
0002FB0C <AmiBlitz3.ab2@21521>   ADD.l D0,destpointer
0002FB10 <AmiBlitz3.ab2@21522> BRA.w JL_0_CB04
0002FB18 <AmiBlitz3.ab2@21525>   MOVE.w #$FFFF,dontwrite
0002FB1E <AmiBlitz3.ab2@21526>   MOVE.l D0,destpointer
0002FB20 <AmiBlitz3.ab2@21529>   MOVE.l D7,D1
0002FB24 <AmiBlitz3.ab2@21530> JMP _Close(A6)
0002FB2A <AmiBlitz3.ab2@21534> JMP illdirerr
0002FB30 <AmiBlitz3.ab2@21537>   TST.w dirmode                                            ;include  open
0002FB34 <AmiBlitz3.ab2@21538>    BNE.w JUMP_illdirerr
0002FB38 <AmiBlitz3.ab2@21539>   BSR.w JL_0_C05C
0002FB3E <AmiBlitz3.ab2@21540>   JSR check_incdir
0002FB42 <AmiBlitz3.ab2@21543>   BSR.w findconstant
0002FB46 <AmiBlitz3.ab2@21544>    BEQ.w alincerr
0002FB4C <AmiBlitz3.ab2@21546>   LEA constantbase,A2
0002FB50 <AmiBlitz3.ab2@21547>   BSR.w addhere2
0002FB54 <AmiBlitz3.ab2@21548>   CLR.w $C(A2)
0002FB58 <AmiBlitz3.ab2@21549>   CLR.l $4(A2)
0002FB5E <AmiBlitz3.ab2@21551>   MOVE.l #ptr_parameterstore,D1
0002FB60 <AmiBlitz3.ab2@21552>   MOVE.l d1,a0
0002FB66 <AmiBlitz3.ab2@21553>   LEA includetemp2,a1
0002FB68 <AmiBlitz3.ab2@21556>     MOVE.b (a0)+,(a1)+
0002FB6C <AmiBlitz3.ab2@21557>   BNE 'l1
0002FB72 <AmiBlitz3.ab2@21558>   JSR save_includename
0002FB7C <AmiBlitz3.ab2@21559>   MOVE.l #0,include_process
0002FB84 <AmiBlitz3.ab2@21561>   CMP.l #$62623200,-4(a0)                                  ;.bb2
0002FB88 <AmiBlitz3.ab2@21562>   BEQ 'ok
0002FB90 <AmiBlitz3.ab2@21563>   CMP.l #$61623300,-4(a0)                                  ;.ab3
0002FB94 <AmiBlitz3.ab2@21564>   BEQ 'ok_tokenize
0002FB9C <AmiBlitz3.ab2@21565>   CMP.l #$61623200,-4(a0)                                  ;.ab2
0002FBA0 <AmiBlitz3.ab2@21566>   BEQ 'ok_tokenize
0002FBA8 <AmiBlitz3.ab2@21567>   CMP.l #$2e626200,-4(a0)                                  ;.bb files
0002FBAC <AmiBlitz3.ab2@21568>   BEQ 'ok
0002FBB2 <AmiBlitz3.ab2@21569> JMP errortoken                                             ;can only include
0002FBBC <AmiBlitz3.ab2@21572>    MOVE.l #-1,include_process                              ; must tokenize the include
0002FBC2 <AmiBlitz3.ab2@21575>   MOVE.l #HUNK_RELOC_16__MODE_OLDFILE,D2
0002FBC8 <AmiBlitz3.ab2@21576>   MOVEA.l _dosbase,A6
0002FBCC <AmiBlitz3.ab2@21577>   JSR _Open(A6)
0002FBD0 <AmiBlitz3.ab2@21578>   MOVE.l D0,$8(A2)
0002FBD4 <AmiBlitz3.ab2@21579>   BEQ.w error_cant_open_include
0002FBDA <AmiBlitz3.ab2@21580>   CLR.l includeline
0002FBDE <AmiBlitz3.ab2@21581>   MOVE.l 8(a2),d1
0002FBE0 <AmiBlitz3.ab2@21582>   MOVE.l d3,-(a7)
0002FBE2 <AmiBlitz3.ab2@21583>   MOVEQ #0,d2
0002FBE4 <AmiBlitz3.ab2@21584>   MOVEQ #1,d3
0002FBE8 <AmiBlitz3.ab2@21585>   JSR _Seek(a6)                                            ; -66
0002FBEC <AmiBlitz3.ab2@21586>   MOVE.l 8(a2),d1
0002FBEE <AmiBlitz3.ab2@21587>   MOVEQ #0,d2
0002FBF0 <AmiBlitz3.ab2@21588>   MOVEQ #-1,d3
0002FBF4 <AmiBlitz3.ab2@21589>   JSR _Seek(a6)                                            ; -66
0002FBF6 <AmiBlitz3.ab2@21590>   MOVE.l (a7)+,d3
0002FBF8 <AmiBlitz3.ab2@21591>   ADDQ.l #4,d0
0002FBFE <AmiBlitz3.ab2@21593>   MOVE.l #$10000,D1
0002FC04 <AmiBlitz3.ab2@21594>   MOVEA.l _execbase,A6
0002FC08 <AmiBlitz3.ab2@21597>   JSR _AllocVec(a6)
0002FC0C <AmiBlitz3.ab2@21599>   MOVE.l D0,$4(A2)
0002FC10 <AmiBlitz3.ab2@21600>   MOVE.l D0,$E(A2)
0002FC12 <AmiBlitz3.ab2@21601>   MOVEA.l D0,A5
0002FC18 <AmiBlitz3.ab2@21608>   ADDQ.w #1,ininclude                                      ;enter include
0002FC1E <AmiBlitz3.ab2@21611>   LEA _include,a0
0002FC22 <AmiBlitz3.ab2@21612>   MOVEM.l a0-a6/d0-d7,-(a7)
0002FC28 <AmiBlitz3.ab2@21613>   LEA ptr_parameterstore,a1
0002FC2A <AmiBlitz3.ab2@21616>     MOVE.b (a0)+,(a1)+
0002FC2E <AmiBlitz3.ab2@21617>   BNE 'l1b
0002FC30 <AmiBlitz3.ab2@21619>   MOVEQ #9,d2
0002FC36 <AmiBlitz3.ab2@21620>   JSR findlabel2
0002FC3A <AmiBlitz3.ab2@21621>   BNE 'd
0002FC42 <AmiBlitz3.ab2@21622>   MOVE.l #1,8(a2)
0002FC46 <AmiBlitz3.ab2@21623>   MOVEM.l (a7)+,a0-a6/d0-d7
0002FC4A <AmiBlitz3.ab2@21624> BRA 'd2
0002FC50 <AmiBlitz3.ab2@21627>   JSR addlabelhash
0002FC58 <AmiBlitz3.ab2@21628>   MOVE.l #$1,$4(A2)
0002FC60 <AmiBlitz3.ab2@21629>   MOVE.l #1,8(a2)
0002FC64 <AmiBlitz3.ab2@21630>   MOVEM.l (a7)+,a0-a6/d0-d7
0002FC6A <AmiBlitz3.ab2@21633>   LEA inctab,a0
0002FC6C <AmiBlitz3.ab2@21634>   MOVEQ #0,d1
0002FC72 <AmiBlitz3.ab2@21635>   MOVE.w ininclude,d1
0002FC76 <AmiBlitz3.ab2@21636>   CLR.l $0(a0,d1*4)
0002FC7C <AmiBlitz3.ab2@21637>   MOVEA.l passstack,A7
0002FC82 <AmiBlitz3.ab2@21638> JMP AJL_0_413A
0002FC88 <AmiBlitz3.ab2@21640> JUMP_dupmacerr JMP dupmacerr
0002FC8A <AmiBlitz3.ab2@21642> coolnest:   Ds.w 1
0002FC8E <AmiBlitz3.ab2@21643> macline:    Ds.l 1
0002FC98 <AmiBlitz3.ab2@21647>   MOVE.l linenumat,macline
0002FC9C <AmiBlitz3.ab2@21648>    BSR.w makename2
0002FCA0 <AmiBlitz3.ab2@21649>    BEQ.w JUMP_syntaxerr
0002FCA6 <AmiBlitz3.ab2@21651>    CLR.b thenmode
0002FCB0 <AmiBlitz3.ab2@21653>    MOVE.w oldqflag,instringon
0002FCB6 <AmiBlitz3.ab2@21654>   MOVEA.l lastsourcepos,A5
0002FCBA <AmiBlitz3.ab2@21655>    BSR.w findmac
0002FCBE <AmiBlitz3.ab2@21656>    BEQ.w JUMP_dupmacerr
0002FCC2 <AmiBlitz3.ab2@21657>    BSR.w addlabel
0002FCC6 <AmiBlitz3.ab2@21658>   CLR.w $A(A2)
0002FCCC <AmiBlitz3.ab2@21659>   MOVEA.l ptr_macrobuffer_begin,A0
0002FCCE <AmiBlitz3.ab2@21660>   MOVEQ.l #$00,D2
0002FCD4 <AmiBlitz3.ab2@21661>   CLR.w coolnest
0002FCD6 <AmiBlitz3.ab2@21664>   MOVE.b (a5),d0
0002FCDA <AmiBlitz3.ab2@21665>      BEQ 'l3
0002FCDE <AmiBlitz3.ab2@21666>      CMP.b #" ",d0
0002FCE2 <AmiBlitz3.ab2@21667>       BNE 'l2                                              ;space macro
0002FCE4 <AmiBlitz3.ab2@21668>       ADDQ.l #1,a5
0002FCE8 <AmiBlitz3.ab2@21669> BRA 'l1
0002FCEC <AmiBlitz3.ab2@21672>    CMP.b #";",d0
0002FCF0 <AmiBlitz3.ab2@21673>       BNE 'l3
0002FCF2 <AmiBlitz3.ab2@21676>    MOVE.b (a5),d0
0002FCF6 <AmiBlitz3.ab2@21677>       BEQ 'l5
0002FCFA <AmiBlitz3.ab2@21678>       BSR.w JL_0_CC98                                      ;add comment
0002FCFC <AmiBlitz3.ab2@21679>       ADDQ.l #1,a5
0002FD00 <AmiBlitz3.ab2@21680> BRA 'l4
0002FD04 <AmiBlitz3.ab2@21683>    MOVE.b #":",d0
0002FD08 <AmiBlitz3.ab2@21684>       BSR.w JL_0_CC98
0002FD0C <AmiBlitz3.ab2@21685>       MOVE.b #"@",d0
0002FD10 <AmiBlitz3.ab2@21686>       BSR.w JL_0_CC98
0002FD18 <AmiBlitz3.ab2@21689>    MOVE.b #0,temp
0002FD20 <AmiBlitz3.ab2@21690>       MOVE.b #0,thenmode
0002FD26 <AmiBlitz3.ab2@21693>   JSR getcharb
0002FD28 <AmiBlitz3.ab2@21694>   TST.w D0
0002FD2C <AmiBlitz3.ab2@21695>    BNE.w JL_0_CBDE
0002FD30 <AmiBlitz3.ab2@21696>   MOVEM.l D2/A0/A2,-(A7)
0002FD36 <AmiBlitz3.ab2@21697>   CMP.w #"@@",-3(a5)
0002FD3A <AmiBlitz3.ab2@21698>   BNE 'l2a
0002FD40 <AmiBlitz3.ab2@21699>   JSR nextline
0002FD44 <AmiBlitz3.ab2@21700>   BEQ.w JUMP_macenderr
0002FD48 <AmiBlitz3.ab2@21701>   MOVEM.l (A7)+,D2/A0/A2
0002FD4C <AmiBlitz3.ab2@21702> BRA.w JL_0_CBB6
0002FD52 <AmiBlitz3.ab2@21705>    JSR nextline
0002FD56 <AmiBlitz3.ab2@21706>    BEQ.w JUMP_macenderr
0002FD5A <AmiBlitz3.ab2@21707>   MOVEM.l (A7)+,D2/A0/A2
0002FD5C <AmiBlitz3.ab2@21708>   TST.w D2
0002FD60 <AmiBlitz3.ab2@21709>    BEQ.w JL_0_CBB6
0002FD62 <AmiBlitz3.ab2@21712>   MOVE.b (a5),d0
0002FD66 <AmiBlitz3.ab2@21713>       CMP.b #" ",d0
0002FD6A <AmiBlitz3.ab2@21714>       BNE 'l1
0002FD6C <AmiBlitz3.ab2@21715>       ADDQ.w #1,a5
0002FD70 <AmiBlitz3.ab2@21716> BRA 'l2
0002FD76 <AmiBlitz3.ab2@21719>   TST.b thenmode
0002FD7A <AmiBlitz3.ab2@21720>      BEQ 'l3
0002FD7C <AmiBlitz3.ab2@21721>      MOVEQ #":",d0
0002FD80 <AmiBlitz3.ab2@21722>      BSR.w JL_0_CC98
0002FD84 <AmiBlitz3.ab2@21723>      MOVE.w #-$7FFE,D0                                     ;write end if
0002FD88 <AmiBlitz3.ab2@21724>      BSR macputw
0002FD8C <AmiBlitz3.ab2@21725>      MOVE.w #$800b,d0
0002FD90 <AmiBlitz3.ab2@21726>      BSR.w macputw
0002FD96 <AmiBlitz3.ab2@21727>      CLR.b thenmode
0002FD98 <AmiBlitz3.ab2@21730>    MOVEQ.l #$3A,D0
0002FDA0 <AmiBlitz3.ab2@21731>      MOVE.b #1,temp
0002FDA4 <AmiBlitz3.ab2@21733> BRA.w JL_0_CC2A
0002FDA8 <AmiBlitz3.ab2@21737>   BPL.w JL_0_CC2A
0002FDAC <AmiBlitz3.ab2@21738>   CMP.w #-$7FF3,D0                                         ;macro ?
0002FDB0 <AmiBlitz3.ab2@21739>    BNE.w JL_0_CBF4
0002FDB6 <AmiBlitz3.ab2@21740>   ADDQ.w #1,coolnest
0002FDBA <AmiBlitz3.ab2@21741> BRA.w JL_0_CC22
0002FDC0 <AmiBlitz3.ab2@21743> JUMP_macnesterr JMP macnesterr
0002FDC4 <AmiBlitz3.ab2@21746>   CMP.w #$80d7,d0                                          ;object ?
0002FDC8 <AmiBlitz3.ab2@21747>     BNE 'l1x
0002FDCE <AmiBlitz3.ab2@21748>     TST.b objectcount
0002FDD2 <AmiBlitz3.ab2@21749>     BNE JUMP_macnesterr
0002FDD6 <AmiBlitz3.ab2@21752>   CMP.w #$8021,d0
0002FDDA <AmiBlitz3.ab2@21753>     BNE 'nothen
0002FDE2 <AmiBlitz3.ab2@21754>     MOVE.b #1,thenmode
0002FDE8 <AmiBlitz3.ab2@21757>   TST.b thenmode
0002FDEC <AmiBlitz3.ab2@21758>         BEQ 'l1
0002FDF0 <AmiBlitz3.ab2@21759>    CMP.w #$8002,d0                                         ;end if
0002FDF4 <AmiBlitz3.ab2@21760>    BNE 'l1
0002FDF8 <AmiBlitz3.ab2@21761>    MOVEM.l d0/a5,-(a7)
0002FDFE <AmiBlitz3.ab2@21762>    JSR get1bytemain
0002FE00 <AmiBlitz3.ab2@21763>    MOVE.w d0,d1
0002FE04 <AmiBlitz3.ab2@21764>    MOVEM.l (a7)+,a5/d0
0002FE08 <AmiBlitz3.ab2@21765>    CMP.w #$800b,d1
0002FE0C <AmiBlitz3.ab2@21766>    BNE 'l1
0002FE12 <AmiBlitz3.ab2@21767>    CLR.b thenmode
0002FE16 <AmiBlitz3.ab2@21770>    CMP.w #-$7FFE,D0                                        ;end ?
0002FE1A <AmiBlitz3.ab2@21771>    BNE.w JL_0_CC22
0002FE1C <AmiBlitz3.ab2@21772>    MOVE.l a5,-(a7)
0002FE22 <AmiBlitz3.ab2@21773>    JSR get1bytemain
0002FE24 <AmiBlitz3.ab2@21774>    MOVE.l (a7)+,a5
0002FE26 <AmiBlitz3.ab2@21775>    TST.w d0
0002FE2A <AmiBlitz3.ab2@21776>    BEQ 'doend
0002FE2E <AmiBlitz3.ab2@21777>    CMP.w #":",d0
0002FE32 <AmiBlitz3.ab2@21778>    BEQ 'doend
0002FE36 <AmiBlitz3.ab2@21779>    CMP.w #";",d0
0002FE3A <AmiBlitz3.ab2@21780>    BEQ 'doend
0002FE3C <AmiBlitz3.ab2@21781>    MOVE.l a5,-(a7)
0002FE42 <AmiBlitz3.ab2@21782>    JSR get1bytemain
0002FE46 <AmiBlitz3.ab2@21783>    MOVE.l -1(a5),d0
0002FE48 <AmiBlitz3.ab2@21784>    MOVE.l (a7)+,a5
0002FE4E <AmiBlitz3.ab2@21785>    CMP.l #"noa7",d0
0002FE52 <AmiBlitz3.ab2@21786>    BEQ 'doend
0002FE56 <AmiBlitz3.ab2@21787> BRA 'morechar
0002FE5A <AmiBlitz3.ab2@21790>   MOVE.w #$8002,D0
0002FE5E <AmiBlitz3.ab2@21791>    BSR.w macputw
0002FE62 <AmiBlitz3.ab2@21792> BRA JL_0_CBB6
0002FE68 <AmiBlitz3.ab2@21795>   JSR get1bytemain
0002FE6C <AmiBlitz3.ab2@21796>    CMP.w #-$7FF3,D0                                        ;end macro
0002FE70 <AmiBlitz3.ab2@21797>    BEQ.w 'lo1
0002FE74 <AmiBlitz3.ab2@21798>   CMP.w #$80d7,d0                                          ;end object
0002FE78 <AmiBlitz3.ab2@21799>   BNE JL_0_CC12
0002FE7E <AmiBlitz3.ab2@21800>   SUBQ.b #1,objectcount
0002FE84 <AmiBlitz3.ab2@21801>   TST.b developobject
0002FE88 <AmiBlitz3.ab2@21802>   BEQ 'lo1
0002FE8C <AmiBlitz3.ab2@21803>   BSR skiprest
0002FE8E <AmiBlitz3.ab2@21804> RTS
0002FE94 <AmiBlitz3.ab2@21807>   SUBQ.w #1,coolnest
0002FE98 <AmiBlitz3.ab2@21808>    BMI.w JL_0_CC32
0002FE9A <AmiBlitz3.ab2@21811>   MOVE.w D0,-(A7)
0002FE9E <AmiBlitz3.ab2@21812>   MOVE.w #$8002,D0
0002FEA2 <AmiBlitz3.ab2@21813>    BSR.w macputw
0002FEA4 <AmiBlitz3.ab2@21814>   MOVE.w (A7)+,D0
0002FEA8 <AmiBlitz3.ab2@21815> BRA.w JL_0_CC22
0002FEAC <AmiBlitz3.ab2@21818>   BSR.w macputw
0002FEB0 <AmiBlitz3.ab2@21819> BRA.w JL_0_CBB6
0002FEB6 <AmiBlitz3.ab2@21821> JUMP_macenderr JMP macenderr
0002FEBC <AmiBlitz3.ab2@21824>     CMP.w #"@@",-1(a5)                                     ;merge lines
0002FEC0 <AmiBlitz3.ab2@21825>     BNE 'no
0002FEC4 <AmiBlitz3.ab2@21826>      MOVEM.l D2/A0/A2,-(A7)
0002FECA <AmiBlitz3.ab2@21827>    JSR nextline
0002FECE <AmiBlitz3.ab2@21828>    BEQ.w JUMP_macenderr
0002FED2 <AmiBlitz3.ab2@21829>   MOVEM.l (A7)+,D2/A0/A2
0002FED4 <AmiBlitz3.ab2@21830>     TST.w D2
0002FED8 <AmiBlitz3.ab2@21831>    BEQ.w JL_0_CBB6
0002FEDC <AmiBlitz3.ab2@21832> BRA JL_0_CBB6
0002FEE0 <AmiBlitz3.ab2@21836>   BSR.w JL_0_CC98
0002FEE4 <AmiBlitz3.ab2@21837> BRA.w JL_0_CBB6
0002FEE6 <AmiBlitz3.ab2@21840>   ADDQ.w #4,A7
0002FEE8 <AmiBlitz3.ab2@21841>   MOVE.l A0,D0
0002FEEE <AmiBlitz3.ab2@21842>   SUB.l ptr_macrobuffer_begin,D0
0002FEF2 <AmiBlitz3.ab2@21845>    BEQ.w JL_0_CC5E
0002FEF6 <AmiBlitz3.ab2@21846>   CMPI.b #":",-(A0)
0002FEFA <AmiBlitz3.ab2@21847>    BNE.w JL_0_CC5E
0002FEFE <AmiBlitz3.ab2@21848>   CMP.w #$1,D0
0002FF02 <AmiBlitz3.ab2@21849>    BEQ.w JL_0_CC58
0002FF06 <AmiBlitz3.ab2@21850>   TST.b -$1(A0)
0002FF0A <AmiBlitz3.ab2@21851>    BMI.w JL_0_CC5E
0002FF0C <AmiBlitz3.ab2@21854>   SUBQ.w #1,D0
0002FF10 <AmiBlitz3.ab2@21855> BRA.w JL_0_CC3C
0002FF14 <AmiBlitz3.ab2@21858>   MOVE.w D0,$8(A2)
0002FF18 <AmiBlitz3.ab2@21859>    BEQ.w JL_0_CC8E
0002FF1A <AmiBlitz3.ab2@21860>   MOVEQ.l #$01,D1
0002FF20 <AmiBlitz3.ab2@21861>   MOVEA.l _execbase,A6
0002FF26 <AmiBlitz3.ab2@21862>   MOVE.l mempool,a0
0002FF2A <AmiBlitz3.ab2@21863>   JSR _AllocPooled(a6)
0002FF2C <AmiBlitz3.ab2@21865>   MOVEA.l D0,A0
0002FF30 <AmiBlitz3.ab2@21866>   MOVE.l A0,$4(A2)
0002FF34 <AmiBlitz3.ab2@21867>   MOVE.w $8(A2),D1
0002FF38 <AmiBlitz3.ab2@21868>    BEQ.w JL_0_CC8E
0002FF3A <AmiBlitz3.ab2@21869>   SUBQ.w #1,D1
0002FF40 <AmiBlitz3.ab2@21870>   MOVEA.l ptr_macrobuffer_begin,A1
0002FF42 <AmiBlitz3.ab2@21873>     MOVE.b (A1)+,(A0)+
0002FF46 <AmiBlitz3.ab2@21874>   DBF D1,JL_0_CC88
0002FF4C <AmiBlitz3.ab2@21877> JMP get1bytemain
0002FF4E <AmiBlitz3.ab2@21881>   MOVE.w D0,D1
0002FF50 <AmiBlitz3.ab2@21882>   LSR.w #8,D1
0002FF52 <AmiBlitz3.ab2@21883>   MOVE.b D1,(A0)+
0002FF54 <AmiBlitz3.ab2@21886>   MOVEQ.l #-$01,D2
0002FF56 <AmiBlitz3.ab2@21887>   MOVE.b D0,(A0)+
0002FF5C <AmiBlitz3.ab2@21888>   CMPA.l ptr_macrobuffer_end,A0
0002FF60 <AmiBlitz3.ab2@21889>    BCC.w macbigerr2
0002FF62 <AmiBlitz3.ab2@21890> RTS
0002FF68 <AmiBlitz3.ab2@21891> macbigerr2 JMP macbigerr
0002FF6A <AmiBlitz3.ab2@21894>   MOVE.l d0,-(a7)
0002FF6C <AmiBlitz3.ab2@21895>   MOVEQ #0,d0
0002FF72 <AmiBlitz3.ab2@21896>   CLR.b skiptoggle
0002FF74 <AmiBlitz3.ab2@21899>     MOVE.b (a5),d0
0002FF78 <AmiBlitz3.ab2@21900>     BEQ 'l3
0002FF7C <AmiBlitz3.ab2@21901>     CMP.b #";",d0
0002FF80 <AmiBlitz3.ab2@21902>     BNE 'l2
0002FF88 <AmiBlitz3.ab2@21903>     MOVE.b #1,skiptoggle
0002FF8E <AmiBlitz3.ab2@21906>     TST.b skiptoggle
0002FF92 <AmiBlitz3.ab2@21907>     BNE 'l4
0002FF96 <AmiBlitz3.ab2@21908>     CMP.b #":",d0
0002FF9A <AmiBlitz3.ab2@21909>     BEQ 'l3
0002FF9C <AmiBlitz3.ab2@21912>     ADDQ #1,a5
0002FFA0 <AmiBlitz3.ab2@21913> BRA 'loop
0002FFA6 <AmiBlitz3.ab2@21916>   MOVE.w d0,lastchar
0002FFA8 <AmiBlitz3.ab2@21917>   MOVE.l (a7)+,d0
0002FFAA <AmiBlitz3.ab2@21918> RTS
0002FFAE <AmiBlitz3.ab2@21922>   BSR.w ifchar
0002FFB2 <AmiBlitz3.ab2@21923>    BNE.w JUMP_syntaxerr
0002FFB4 <AmiBlitz3.ab2@21924>   MOVE.w D0,D1
0002FFBA <AmiBlitz3.ab2@21925>   JSR get1bytemain
0002FFBE <AmiBlitz3.ab2@21926>   BSR.w ifchar
0002FFC2 <AmiBlitz3.ab2@21927>    BNE.w JL_0_CCDA
0002FFC4 <AmiBlitz3.ab2@21928>   ADDQ.w #1,D0
0002FFC6 <AmiBlitz3.ab2@21929>   MOVE.w D0,D2
0002FFC8 <AmiBlitz3.ab2@21930>   ADD.w D0,D0
0002FFCA <AmiBlitz3.ab2@21931>   ADD.w D2,D0
0002FFCC <AmiBlitz3.ab2@21932>   ADD.w D0,D1
0002FFCE <AmiBlitz3.ab2@21933>   MOVE.w D1,D0
0002FFD2 <AmiBlitz3.ab2@21934>   ANDI.w #$3,D0
0002FFD6 <AmiBlitz3.ab2@21935>   CMP.w #$3,D0
0002FFDA <AmiBlitz3.ab2@21936>    BEQ.w JUMP_syntaxerr
0002FFE0 <AmiBlitz3.ab2@21938>   JSR get1bytemain
0002FFE2 <AmiBlitz3.ab2@21941> RTS
0002FFE4 <AmiBlitz3.ab2@21947> thetst1:  TST.b D0
0002FFE6 <AmiBlitz3.ab2@21948> thetst2:  TST.w D0
0002FFE8 <AmiBlitz3.ab2@21949> thetst3:  TST.l D0
0002FFEA <AmiBlitz3.ab2@21950> thetst4:  TST.l (A7)+                                      ;Any Length?
0002FFEE <AmiBlitz3.ab2@21951> thetst5:  JSR _Reschedule(A6)
0002FFF2 <AmiBlitz3.ab2@21953> posbr:    BEQ.w posbr
0002FFF6 <AmiBlitz3.ab2@21954> negbr:    BNE.w negbr
0002FFF8 <AmiBlitz3.ab2@21958>   MOVEQ.l #-$01,D2
0002FFFC <AmiBlitz3.ab2@21959> BRA.w JL_0_D04C
00030002 <AmiBlitz3.ab2@21963>   CLR.l fp0addr
00030004 <AmiBlitz3.ab2@21964>   MOVEQ.l #$01,D1                                          ;while flag
00030006 <AmiBlitz3.ab2@21965>   MOVEQ.l #$00,D2                                          ;negate flag
0003000A <AmiBlitz3.ab2@21966> BRA.w JL_0_D04E
00030010 <AmiBlitz3.ab2@21970>   LEA firstrep,A2
00030012 <AmiBlitz3.ab2@21971>   MOVEQ.l #$08,D2
00030016 <AmiBlitz3.ab2@21972> BRA.w freeslist
0003001A <AmiBlitz3.ab2@21976>   LEA firstsel(PC),A2
0003001C <AmiBlitz3.ab2@21977>   MOVEQ.l #$0E,D2
0003001E <AmiBlitz3.ab2@21982>   MOVEQ.l #$00,D3
00030020 <AmiBlitz3.ab2@21990>   MOVE.l (A2),D0
00030022 <AmiBlitz3.ab2@21991>   CLR.l (A2)
00030024 <AmiBlitz3.ab2@21992>   MOVEA.l D0,A2
0003002A <AmiBlitz3.ab2@21993>   MOVEA.l _execbase,A6
0003002E <AmiBlitz3.ab2@21996>     CMPA.w #$0,A2
00030032 <AmiBlitz3.ab2@21997>      BEQ.w freelist__done
00030034 <AmiBlitz3.ab2@21998>     TST.w D3
00030038 <AmiBlitz3.ab2@21999>      BEQ.w freelist__skip
0003003C <AmiBlitz3.ab2@22000>     MOVEM.l D2-D3/A2,-(A7)
0003003E <AmiBlitz3.ab2@22001>     ADDA.w D3,A2
00030040 <AmiBlitz3.ab2@22002>     MOVE.l D4,D2
00030044 <AmiBlitz3.ab2@22003>     BSR.w freeslist
00030048 <AmiBlitz3.ab2@22004>     MOVEM.l (A7)+,D2-D3/A2
0003004A <AmiBlitz3.ab2@22007>     MOVEA.l A2,A1
0003004C <AmiBlitz3.ab2@22008>     MOVE.l D2,D0
0003004E <AmiBlitz3.ab2@22009>     MOVEA.l (A2),A2
00030054 <AmiBlitz3.ab2@22010>     MOVE.l mempool,a0
00030058 <AmiBlitz3.ab2@22011>     JSR _FreePooled(A6)
0003005C <AmiBlitz3.ab2@22012> BRA.w freelist__loop
0003005E <AmiBlitz3.ab2@22015> RTS
00030064 <AmiBlitz3.ab2@22018> JMP eselerr
00030068 <AmiBlitz3.ab2@22021> firstsel:  Ds.l 1
0003006C <AmiBlitz3.ab2@22024> selpushb:   Dc.b $02,$40,$00,$FF                           ;ANDI.W  #$00FF,D0
0003006E <AmiBlitz3.ab2@22027> selpushw:   MOVE.w D0,-(A7)
00030070 <AmiBlitz3.ab2@22029> selpushl:   MOVE.l D0,-(A7)
00030074 <AmiBlitz3.ab2@22031> selpushs:   LEA $4(A7),A2                                  ;(a7)=len of string!
00030078 <AmiBlitz3.ab2@22034> selcomb:    ANDI.w #$FF,D0
0003007A <AmiBlitz3.ab2@22035> selcomw:    CMP.w (A7),D0
0003007C <AmiBlitz3.ab2@22037> selcoml:    CMP.l (A7),D0
00030080 <AmiBlitz3.ab2@22039> selbne:     BNE.w selbne
00030082 <AmiBlitz3.ab2@22041> endsel:     ADDQ.w #8,A7
00030086 <AmiBlitz3.ab2@22047>   MOVE.l firstsel(PC),D0                                  
0003008A <AmiBlitz3.ab2@22048>    BEQ.w JUMP_eselerr
0003008C <AmiBlitz3.ab2@22049>   MOVEA.l D0,A2
00030090 <AmiBlitz3.ab2@22050>    BSR.w JL_0_CDFC
00030096 <AmiBlitz3.ab2@22053>   MOVEA.l _execbase,A6
0003009A <AmiBlitz3.ab2@22056>   MOVE.l $4(A2),D0
0003009E <AmiBlitz3.ab2@22057>    BEQ.w doendsel__done
000300A0 <AmiBlitz3.ab2@22058>   MOVEA.l D0,A3
000300A4 <AmiBlitz3.ab2@22059>   MOVEA.l $4(A3),A0
000300AA <AmiBlitz3.ab2@22060>   MOVE.l destpointer,D1
000300AC <AmiBlitz3.ab2@22061>   SUB.l A0,D1
000300B2 <AmiBlitz3.ab2@22063>     TST.b fast
000300B6 <AmiBlitz3.ab2@22064>     BEQ doendsel__loop_l1
000300BC <AmiBlitz3.ab2@22065>     MOVE.w dontwrite,D0
000300C0 <AmiBlitz3.ab2@22066>     BNE.w doendsel__skip
000300C2 <AmiBlitz3.ab2@22067>     ADDQ.l #2,d1
000300C6 <AmiBlitz3.ab2@22068>     MOVE.l d1,-2(a0)
000300CA <AmiBlitz3.ab2@22069>   BRA doendsel__skip
000300D0 <AmiBlitz3.ab2@22073>   TST.w dontwrite
000300D4 <AmiBlitz3.ab2@22074>      BNE.w doendsel__skip
000300DA <AmiBlitz3.ab2@22075>   CMP.l #MaxWordSgnd,D1
000300DE <AmiBlitz3.ab2@22076>    BHI.w JUMP_cbraerr
000300E0 <AmiBlitz3.ab2@22077>   MOVE.w D1,(A0)
000300E4 <AmiBlitz3.ab2@22080>   MOVE.l (A3),$4(A2)                                       ;next of me is new first
000300E6 <AmiBlitz3.ab2@22081>   MOVEA.l A3,A1
000300E8 <AmiBlitz3.ab2@22082>   MOVEQ.l #$08,D0
000300EE <AmiBlitz3.ab2@22083>   MOVE.l mempool,a0
000300F2 <AmiBlitz3.ab2@22084>    JSR _FreePooled(A6)
000300F6 <AmiBlitz3.ab2@22085> BRA.w doendsel__loop
000300FC <AmiBlitz3.ab2@22088>   JSR popselect                                            ;fix stack on select
00030100 <AmiBlitz3.ab2@22089>   MOVEA.l firstsel(PC),A1
00030106 <AmiBlitz3.ab2@22090>   MOVE.l (A1),firstsel
00030108 <AmiBlitz3.ab2@22091>   MOVEQ.l #$0E,D0
0003010E <AmiBlitz3.ab2@22092>   MOVEA.l _execbase,A6
00030114 <AmiBlitz3.ab2@22093>   MOVE.l mempool,a0
00030118 <AmiBlitz3.ab2@22094>   JSR _FreePooled(A6)
0003011E <AmiBlitz3.ab2@22095> JMP get1bytemain
00030120 <AmiBlitz3.ab2@22099>   MOVEA.l (A7)+,A1
00030122 <AmiBlitz3.ab2@22100>   SUBQ.w #8,A1
00030124 <AmiBlitz3.ab2@22101>   MOVEQ.l #$09,D0
00030126 <AmiBlitz3.ab2@22102>   ADD.l (A1),D0
00030128 <AmiBlitz3.ab2@22105>   ADDQ.w #2,A7                                             ;for runtime errs!
0003012C <AmiBlitz3.ab2@22110>   MOVE.l firstsel(PC),D0
00030130 <AmiBlitz3.ab2@22111>    BEQ.w JUMP_defaerr
00030132 <AmiBlitz3.ab2@22112>   MOVEA.l D0,A2
00030136 <AmiBlitz3.ab2@22113>   BSR.w JL_0_CE26
0003013A <AmiBlitz3.ab2@22114>   BSR.w JL_0_CDFC
0003013E <AmiBlitz3.ab2@22115>   CLR.l $8(A2)
00030142 <AmiBlitz3.ab2@22116>   MOVE.w $C(A2),D2
00030146 <AmiBlitz3.ab2@22117> BRA.w JL_0_CE5E
0003014C <AmiBlitz3.ab2@22120> JMP defaerr
00030150 <AmiBlitz3.ab2@22123>   MOVE.l $8(A2),D0
00030154 <AmiBlitz3.ab2@22124>    BEQ.w JL_0_CE24
00030156 <AmiBlitz3.ab2@22125>   MOVEA.l D0,A0
0003015C <AmiBlitz3.ab2@22126>   MOVE.l destpointer,D1
0003015E <AmiBlitz3.ab2@22127>   SUB.l A0,D1
00030164 <AmiBlitz3.ab2@22129>     TST.b fast
00030168 <AmiBlitz3.ab2@22130>     BEQ 'l1
0003016E <AmiBlitz3.ab2@22131>     TST.w dontwrite
00030172 <AmiBlitz3.ab2@22132>     BNE.w JL_0_CE24
00030174 <AmiBlitz3.ab2@22133>     ADDQ.l #2,d1
00030178 <AmiBlitz3.ab2@22134>     MOVE.l D1,-2(A0)
0003017C <AmiBlitz3.ab2@22135>   BRA JL_0_CE24
00030182 <AmiBlitz3.ab2@22139>   TST.w dontwrite
00030186 <AmiBlitz3.ab2@22140>      BNE.w JL_0_CE24
0003018C <AmiBlitz3.ab2@22141>    CMP.l #MaxWordSgnd,D1
00030190 <AmiBlitz3.ab2@22142>    BHI.w JUMP_cbraerr
00030192 <AmiBlitz3.ab2@22143>   MOVE.w D1,(A0)
00030194 <AmiBlitz3.ab2@22146> RTS
0003019A <AmiBlitz3.ab2@22149> JMP cbraerr
0003019E <AmiBlitz3.ab2@22153>   MOVE.l $8(A2),D0
000301A2 <AmiBlitz3.ab2@22154>    BEQ.w JL_0_CE5C
000301A4 <AmiBlitz3.ab2@22155>   MOVEA.l D0,A3
000301A8 <AmiBlitz3.ab2@22156>   MOVE.w #$6000,D1
000301AE <AmiBlitz3.ab2@22158>    TST.b fast
000301B2 <AmiBlitz3.ab2@22159>    BEQ 'l1
000301B8 <AmiBlitz3.ab2@22160>    OR.l #$ff,d1
000301BC <AmiBlitz3.ab2@22161>    BSR writeword
000301C0 <AmiBlitz3.ab2@22165>   BSR.w writeword
000301C2 <AmiBlitz3.ab2@22166>   MOVEQ.l #$08,D0
000301C4 <AmiBlitz3.ab2@22167>   MOVEQ.l #$01,D1
000301CA <AmiBlitz3.ab2@22168>   MOVEA.l _execbase,A6
000301D0 <AmiBlitz3.ab2@22169>   MOVE.l mempool,a0
000301D4 <AmiBlitz3.ab2@22170>   JSR _AllocPooled(a6)
000301D6 <AmiBlitz3.ab2@22172>   MOVEA.l D0,A0
000301DA <AmiBlitz3.ab2@22173>   MOVE.l $4(A2),(A0)
000301DE <AmiBlitz3.ab2@22174>   MOVE.l A0,$4(A2)
000301E6 <AmiBlitz3.ab2@22175>   MOVE.l destpointer,$4(A0)
000301EA <AmiBlitz3.ab2@22176> BRA.w writeword
000301EC <AmiBlitz3.ab2@22179> RTS
000301F2 <AmiBlitz3.ab2@22183>   TST.b debugmode
000301F6 <AmiBlitz3.ab2@22184>    BEQ.w JL_0_CE7A
000301FA <AmiBlitz3.ab2@22185>   MOVE.w #$C313,D1
000301FE <AmiBlitz3.ab2@22186>   CMP.w #$3,D2
00030202 <AmiBlitz3.ab2@22187>    BCS.w JL_0_CE76
00030204 <AmiBlitz3.ab2@22188>   ADDQ.w #1,D1
00030208 <AmiBlitz3.ab2@22191> BRA.w Atokejsr
0003020A <AmiBlitz3.ab2@22194> RTS
00030210 <AmiBlitz3.ab2@22198> JMP caseerr
00030214 <AmiBlitz3.ab2@22201>   MOVE.l firstsel(PC),D0
00030218 <AmiBlitz3.ab2@22202>    BEQ.w JUMP_caseerr
0003021A <AmiBlitz3.ab2@22203>   MOVEA.l D0,A2
0003021E <AmiBlitz3.ab2@22204>    BSR.w JL_0_CE26
00030222 <AmiBlitz3.ab2@22205>    BSR.w JL_0_CDFC
00030226 <AmiBlitz3.ab2@22206>   MOVE.w $C(A2),D2
00030228 <AmiBlitz3.ab2@22207>   MOVE.w D2,-(A7)
0003022C <AmiBlitz3.ab2@22208>    BSR.w JL_0_CE5E
0003022E <AmiBlitz3.ab2@22209>   MOVE.w (A7),D2
00030232 <AmiBlitz3.ab2@22210>    BSR.w bakeval
00030234 <AmiBlitz3.ab2@22211>   MOVE.w (A7)+,D2
00030238 <AmiBlitz3.ab2@22212>   LEA selcomb(PC),A0
0003023C <AmiBlitz3.ab2@22213>   LEA selcombf(PC),A1
00030240 <AmiBlitz3.ab2@22214>   CMP.w #$1,D2
00030244 <AmiBlitz3.ab2@22215>    BEQ.w JL_0_CED8
00030248 <AmiBlitz3.ab2@22216>   LEA selcomw(PC),A0
0003024C <AmiBlitz3.ab2@22217>   CMP.w #$2,D2
00030250 <AmiBlitz3.ab2@22218>    BEQ.w JL_0_CED8
00030254 <AmiBlitz3.ab2@22219>   LEA selcoml(PC),A0
00030258 <AmiBlitz3.ab2@22220>   LEA selcomlf(PC),A1
0003025C <AmiBlitz3.ab2@22221>   CMP.w #$7,D2
00030260 <AmiBlitz3.ab2@22222>    BCS.w JL_0_CED8
00030264 <AmiBlitz3.ab2@22224>   MOVE.w #$CE01,D1
00030268 <AmiBlitz3.ab2@22225>    BSR.w Atokejsr
0003026C <AmiBlitz3.ab2@22226> BRA.w JL_0_CEDC
00030270 <AmiBlitz3.ab2@22229>   BSR.w pokecode
00030274 <AmiBlitz3.ab2@22232>   MOVE.w selbne(PC),D1
0003027A <AmiBlitz3.ab2@22234>     TST.b fast
0003027E <AmiBlitz3.ab2@22235>     BEQ 'l1
00030284 <AmiBlitz3.ab2@22236>     ORI.l #$ff,d1
00030288 <AmiBlitz3.ab2@22237>     BSR writeword
0003028C <AmiBlitz3.ab2@22240>   BSR.w writeword
00030290 <AmiBlitz3.ab2@22241>   MOVEA.l firstsel(PC),A0
00030298 <AmiBlitz3.ab2@22242>   MOVE.l destpointer,$8(A0)
0003029C <AmiBlitz3.ab2@22243> BRA.w writeword
000302A0 <AmiBlitz3.ab2@22247> pcchk:      Dc.b $3F,$3C,$73,$45                           ;MOVE.W  #$7345,-(A7)   ;#"sE",-(a7) org source
000302A2 <AmiBlitz3.ab2@22248> clrst:      Dc.b $42,$A7                                   ;CLR.L   -(A7)
000302A6 <AmiBlitz3.ab2@22251> sellineat:  Ds.l 1
000302AC <AmiBlitz3.ab2@22257>   TST.b debugmode
000302B0 <AmiBlitz3.ab2@22258>    BEQ.w JL_0_CF0E
000302B4 <AmiBlitz3.ab2@22259>   MOVE.l pcchk(PC),D1                                      ;move #"sE",-(a7)
000302B8 <AmiBlitz3.ab2@22260>    BSR.w writelong
000302C2 <AmiBlitz3.ab2@22263>   MOVE.l linenumat,sellineat
000302CC <AmiBlitz3.ab2@22265>    MOVE.l destpointer,pushpc
000302D6 <AmiBlitz3.ab2@22266>   MOVE.l hunkoffsetbase,pushoff
000302D8 <AmiBlitz3.ab2@22267>   MOVEQ.l #$00,D2
000302DC <AmiBlitz3.ab2@22268>    BSR.w bakevalu                                          ;Evaluate
000302E0 <AmiBlitz3.ab2@22269>    BSR.w JL_0_B5D2
000302E4 <AmiBlitz3.ab2@22270>   CMP.w #$7,D2
000302E8 <AmiBlitz3.ab2@22271>    BNE.w JL_0_CF36
000302EC <AmiBlitz3.ab2@22272>   MOVE.w clrst(PC),D1
000302F0 <AmiBlitz3.ab2@22273>    BSR.w writeword
000302F4 <AmiBlitz3.ab2@22276>    BSR.w JL_0_B63C
000302F8 <AmiBlitz3.ab2@22277>   LEA selpushb(PC),A0
000302FC <AmiBlitz3.ab2@22278>   LEA selpushbf(PC),A1
00030300 <AmiBlitz3.ab2@22279>   CMP.w #$1,D2
00030304 <AmiBlitz3.ab2@22280>    BEQ.w JL_0_CF88
00030308 <AmiBlitz3.ab2@22281>   LEA selpushw(PC),A0
0003030C <AmiBlitz3.ab2@22282>   CMP.w #$2,D2
00030310 <AmiBlitz3.ab2@22283>    BEQ.w JL_0_CF88
00030314 <AmiBlitz3.ab2@22284>   LEA selpushl(PC),A0
00030318 <AmiBlitz3.ab2@22285>   LEA selpushlf(PC),A1
0003031C <AmiBlitz3.ab2@22286>   CMP.w #$7,D2
00030320 <AmiBlitz3.ab2@22287>    BCS.w JL_0_CF88
00030326 <AmiBlitz3.ab2@22289>   MOVE.w moved0a3,D1                                       ;d0 to a3!
0003032A <AmiBlitz3.ab2@22290>    BSR.w writeword
0003032E <AmiBlitz3.ab2@22291>   LEA selpushs(PC),A0
00030332 <AmiBlitz3.ab2@22292>   LEA selpushsf(PC),A1
00030336 <AmiBlitz3.ab2@22293>    BSR.w pokecode
0003033A <AmiBlitz3.ab2@22294>   MOVE.w #$C701,D1
0003033E <AmiBlitz3.ab2@22295>    BSR.w Atokejsr
00030342 <AmiBlitz3.ab2@22296> BRA.w JL_0_CF8C
00030346 <AmiBlitz3.ab2@22299>   BSR.w pokecode
00030348 <AmiBlitz3.ab2@22302>   MOVEQ.l #$0E,D0
0003034A <AmiBlitz3.ab2@22303>   MOVEQ.l #$01,D1
00030350 <AmiBlitz3.ab2@22304>   MOVEA.l _execbase,A6
00030356 <AmiBlitz3.ab2@22306>   MOVE.l mempool,a0
0003035A <AmiBlitz3.ab2@22307>   JSR _AllocPooled(a6)
0003035C <AmiBlitz3.ab2@22308>   MOVEA.l D0,A0
00030360 <AmiBlitz3.ab2@22309>   MOVE.l firstsel(PC),(A0)
00030366 <AmiBlitz3.ab2@22310>   MOVE.l A0,firstsel
0003036A <AmiBlitz3.ab2@22311>   CLR.l $4(A0)
0003036E <AmiBlitz3.ab2@22312>   CLR.l $8(A0)
00030372 <AmiBlitz3.ab2@22313>   MOVE.w D2,$C(A0)
00030374 <AmiBlitz3.ab2@22314> RTS
0003037A <AmiBlitz3.ab2@22318>   MOVE.l firstrep,D0
0003037E <AmiBlitz3.ab2@22319>    BEQ.w JUMP_unterr1
00030382 <AmiBlitz3.ab2@22320>   MOVE.w #$6000,D1
00030386 <AmiBlitz3.ab2@22321>   BSR.w writeword
00030388 <AmiBlitz3.ab2@22322>   MOVEA.l D0,A0
0003038C <AmiBlitz3.ab2@22323>   MOVE.l $4(A0),D1
00030392 <AmiBlitz3.ab2@22324>   SUB.l destpointer,D1
00030394 <AmiBlitz3.ab2@22325>   TST.w D1
00030398 <AmiBlitz3.ab2@22326>    BPL.w JUMP_unterr2
0003039C <AmiBlitz3.ab2@22327>   BSR.w writeword
000303A2 <AmiBlitz3.ab2@22328>   MOVEA.l _execbase,A6
000303A6 <AmiBlitz3.ab2@22329> BRA.w JL_0_D036
000303AC <AmiBlitz3.ab2@22332> JMP unterr2
000303B2 <AmiBlitz3.ab2@22335> JMP unterr1
000303B8 <AmiBlitz3.ab2@22339>   MOVE.l firstrep,D0
000303BC <AmiBlitz3.ab2@22340>    BEQ.w JUMP_unterr1
000303C0 <AmiBlitz3.ab2@22341>   BSR.w do_if
000303C6 <AmiBlitz3.ab2@22342>   JSR reget
000303CA <AmiBlitz3.ab2@22343>    BNE.w JUMP_syntaxerr
000303D0 <AmiBlitz3.ab2@22344>   MOVE.w dontwrite,D1
000303D4 <AmiBlitz3.ab2@22345>    BNE.w JL_0_D020
000303DA <AmiBlitz3.ab2@22346>   MOVEA.l firstrep,A0
000303E0 <AmiBlitz3.ab2@22347>   MOVEA.l destpointer,A1
000303E6 <AmiBlitz3.ab2@22349>     TST.b fast
000303EA <AmiBlitz3.ab2@22350>     BEQ 'l1
000303EC <AmiBlitz3.ab2@22351>     SUBQ.w #4,a1
000303F0 <AmiBlitz3.ab2@22352>     MOVE.l $4(A0),D2
000303F2 <AmiBlitz3.ab2@22353>     SUB.l A1,D2
000303F4 <AmiBlitz3.ab2@22354>     MOVE.l d2,(a1)
000303F8 <AmiBlitz3.ab2@22355>   BRA JL_0_D020
000303FA <AmiBlitz3.ab2@22359>   SUBQ.w #2,A1
000303FE <AmiBlitz3.ab2@22360>   MOVE.l $4(A0),D2
00030400 <AmiBlitz3.ab2@22361>   SUB.l A1,D2
00030402 <AmiBlitz3.ab2@22362>   TST.w D2
00030406 <AmiBlitz3.ab2@22363>    BPL.w JUMP_unterr2
00030408 <AmiBlitz3.ab2@22364>   MOVE.w D2,(A1)
0003040E <AmiBlitz3.ab2@22367>   MOVEA.l firstiff,A1
00030414 <AmiBlitz3.ab2@22368>   MOVE.l (A1),firstiff
00030416 <AmiBlitz3.ab2@22369>   MOVEQ.l #$0E,D0
0003041C <AmiBlitz3.ab2@22370>   MOVEA.l _execbase,A6
00030422 <AmiBlitz3.ab2@22371>   MOVE.l mempool,a0
00030426 <AmiBlitz3.ab2@22372>   JSR _FreePooled(A6)
0003042C <AmiBlitz3.ab2@22375>   MOVEA.l firstrep,A1
00030432 <AmiBlitz3.ab2@22376>   MOVE.l (A1),firstrep
00030434 <AmiBlitz3.ab2@22377>   MOVEQ.l #$08,D0
0003043A <AmiBlitz3.ab2@22378>   MOVE.l mempool,a0
0003043E <AmiBlitz3.ab2@22379> JMP _FreePooled(A6)
00030442 <AmiBlitz3.ab2@22382> iflineat:   Ds.l 1
00030444 <AmiBlitz3.ab2@22386>   MOVEQ.l #$00,D2
0003044A <AmiBlitz3.ab2@22387>   TST.b fast
0003044E <AmiBlitz3.ab2@22388>   BEQ 'l1
00030456 <AmiBlitz3.ab2@22389>   MOVE.b #1,nostringopt
0003045E <AmiBlitz3.ab2@22390>   MOVE.b #1,iniffcommand
00030460 <AmiBlitz3.ab2@22394>   MOVEQ.l #$00,D1
00030462 <AmiBlitz3.ab2@22397>   MOVE.w D1,-(A7)
00030468 <AmiBlitz3.ab2@22398>   MOVE.l destpointer,-(A7)
0003046A <AmiBlitz3.ab2@22399>   MOVE.w D2,-(A7)
00030474 <AmiBlitz3.ab2@22400>   MOVE.l linenumat,iflineat
00030476 <AmiBlitz3.ab2@22401>   MOVEQ.l #$00,D2
00030480 <AmiBlitz3.ab2@22402>   MOVE.b optistring,optistring2
00030488 <AmiBlitz3.ab2@22403>   MOVE.b #1,optistring
0003048C <AmiBlitz3.ab2@22404>   BSR.w bakevalu
00030496 <AmiBlitz3.ab2@22405>   MOVE.b optistring2,optistring
0003049A <AmiBlitz3.ab2@22406>   CMP.w #$5,D2
0003049E <AmiBlitz3.ab2@22407>    BEQ.w JL_0_D09C
000304A2 <AmiBlitz3.ab2@22408>   MOVE.w thetst1(PC),D1
000304A6 <AmiBlitz3.ab2@22409>   CMP.w #$1,D2
000304AA <AmiBlitz3.ab2@22410>    BEQ.w writebranchcode
000304AE <AmiBlitz3.ab2@22411>   MOVE.w thetst2(PC),D1
000304B2 <AmiBlitz3.ab2@22412>   CMP.w #$2,D2
000304B6 <AmiBlitz3.ab2@22413>    BEQ.w writebranchcode
000304BA <AmiBlitz3.ab2@22414>   MOVE.w thetst4(PC),D1
000304BE <AmiBlitz3.ab2@22415>   CMP.w #$7,D2
000304C2 <AmiBlitz3.ab2@22416>    BEQ.w writebranchcode
000304C6 <AmiBlitz3.ab2@22417>   MOVE.w thetst3(PC),D1
000304CA <AmiBlitz3.ab2@22418> BRA.w writebranchcode
000304D0 <AmiBlitz3.ab2@22421>   TST.b fpu
000304D4 <AmiBlitz3.ab2@22422>   BEQ 'dofpu
000304DA <AmiBlitz3.ab2@22423>   MOVE.l #$f200003a,d1
000304DE <AmiBlitz3.ab2@22424>   BSR writelong
000304E2 <AmiBlitz3.ab2@22425>   MOVE.w #$f2c1,d1
000304E6 <AmiBlitz3.ab2@22426>   BSR writeword
000304EA <AmiBlitz3.ab2@22427>   BSR writelong
000304EC <AmiBlitz3.ab2@22428>   ADDQ.l #2,a7
000304F0 <AmiBlitz3.ab2@22429> BRA.w br2
000304F4 <AmiBlitz3.ab2@22432>    MOVE.w #$C900,D1
000304F8 <AmiBlitz3.ab2@22433>    BSR.w Atokejsr
000304FC <AmiBlitz3.ab2@22434>   MOVE.l thetst5(PC),D1
00030500 <AmiBlitz3.ab2@22435>    BSR.w writelong
00030504 <AmiBlitz3.ab2@22436> BRA.w JL_0_D0B4
0003050A <AmiBlitz3.ab2@22440>          CLR.b iniffcommand
00030510 <AmiBlitz3.ab2@22441>          TST.b fast                                        ;branchcode
00030514 <AmiBlitz3.ab2@22442>          BEQ b6
0003051A <AmiBlitz3.ab2@22443>          TST.b fpu
0003051E <AmiBlitz3.ab2@22444>          BEQ 'nofpu
00030524 <AmiBlitz3.ab2@22448>           MOVE.l destpointer,a0
0003052A <AmiBlitz3.ab2@22449>          SUB.l load_var_addr,a0
00030530 <AmiBlitz3.ab2@22450>          CMP.l #4,a0
00030534 <AmiBlitz3.ab2@22451>          BEQ 'nofpu
0003053C <AmiBlitz3.ab2@22452>          CMP.l #$f2400014,-4(a4)                           ;<
00030540 <AmiBlitz3.ab2@22453>          BNE 'nolt
00030546 <AmiBlitz3.ab2@22454>          SUBQ.l #2,destpointer
0003054C <AmiBlitz3.ab2@22455>          MOVE.w #$f293,-4(a4)                              ;
00030550 <AmiBlitz3.ab2@22456> BRA 'brf
00030558 <AmiBlitz3.ab2@22459>   CMP.l #$f2400015,-4(a4)                                  ;<=
0003055C <AmiBlitz3.ab2@22460>          BNE 'nole
00030562 <AmiBlitz3.ab2@22461>          SUBQ.l #2,destpointer
00030568 <AmiBlitz3.ab2@22462>          MOVE.w #$f292,-4(a4)
0003056C <AmiBlitz3.ab2@22463> BRA 'brf
00030574 <AmiBlitz3.ab2@22466>   CMP.l #$f2400013,-4(a4)                                  ;=>
00030578 <AmiBlitz3.ab2@22467>          BNE 'noge
0003057E <AmiBlitz3.ab2@22468>          SUBQ.l #2,destpointer
00030584 <AmiBlitz3.ab2@22469>          MOVE.w #$f294,-4(a4)
00030588 <AmiBlitz3.ab2@22470> BRA 'brf
00030590 <AmiBlitz3.ab2@22473>   CMP.l #$f2400012,-4(a4)                                  ;>
00030594 <AmiBlitz3.ab2@22474>          BNE 'nogt
0003059A <AmiBlitz3.ab2@22475>          SUBQ.l #2,destpointer
000305A0 <AmiBlitz3.ab2@22476>          MOVE.w #$f295,-4(a4)
000305A4 <AmiBlitz3.ab2@22477> BRA 'brf
000305AC <AmiBlitz3.ab2@22480>   CMP.l #$f2400001,-4(a4)                                  ;=
000305B0 <AmiBlitz3.ab2@22481>          BNE 'noeq
000305B6 <AmiBlitz3.ab2@22482>          SUBQ.l #2,destpointer
000305BC <AmiBlitz3.ab2@22483>          MOVE.w #$f28e,-4(a4)
000305C0 <AmiBlitz3.ab2@22484> BRA 'brf
000305C8 <AmiBlitz3.ab2@22487>   CMP.l #$f240000e,-4(a4)                                  ;<>
000305CC <AmiBlitz3.ab2@22488>          BNE 'none
000305D2 <AmiBlitz3.ab2@22489>          SUBQ.l #2,destpointer
000305D8 <AmiBlitz3.ab2@22490>          MOVE.w #$f281,-4(a4)
000305DA <AmiBlitz3.ab2@22493>   ADDQ.l #2,a7
000305E0 <AmiBlitz3.ab2@22495>     TST.b fast
000305E4 <AmiBlitz3.ab2@22496>     BEQ 'l1
000305EA <AmiBlitz3.ab2@22497>     OR.b #$40,-3(a4)
000305EE <AmiBlitz3.ab2@22498>     BSR writeword
000305F2 <AmiBlitz3.ab2@22502>  BSR writeword
000305F6 <AmiBlitz3.ab2@22503> BRA.s br2
000305FC <AmiBlitz3.ab2@22507>   MOVE.l destpointer,a0
00030602 <AmiBlitz3.ab2@22508>          SUB.l load_var_addr,a0
00030608 <AmiBlitz3.ab2@22509>          CMP.l #4,a0
0003060C <AmiBlitz3.ab2@22510>          BEQ JL_0_D0B4
00030612 <AmiBlitz3.ab2@22511>          CMP.w #$4eb9,-6(a4)
00030616 <AmiBlitz3.ab2@22512>          BEQ b6
0003061C <AmiBlitz3.ab2@22513>          CMP.w #$5ec0,-2(a4)                               ;>
00030620 <AmiBlitz3.ab2@22514>      BNE.s 'lb1
00030626 <AmiBlitz3.ab2@22515>          MOVE.w #$6f00,-2(a4)                              ;ble
0003062A <AmiBlitz3.ab2@22516> BRA.s br
00030630 <AmiBlitz3.ab2@22519>  CMP.w #$5dc0,-2(a4)                                       ;<
00030634 <AmiBlitz3.ab2@22520>   BNE.s 'lb2
0003063A <AmiBlitz3.ab2@22521>          MOVE.w #$6c00,-2(a4)                              ;bge
0003063E <AmiBlitz3.ab2@22522> BRA.s br
00030644 <AmiBlitz3.ab2@22525>   CMP.w #$57c0,-2(a4)                                      ;=
00030648 <AmiBlitz3.ab2@22526>   BNE.s 'lb3
0003064E <AmiBlitz3.ab2@22527>          MOVE.w #$6600,-2(a4)                              ;bne
00030652 <AmiBlitz3.ab2@22528> BRA.s br
00030658 <AmiBlitz3.ab2@22531>   CMP.w #$56c0,-2(a4)                                      ;<>
0003065C <AmiBlitz3.ab2@22532>   BNE.s 'lb4
00030662 <AmiBlitz3.ab2@22533>          MOVE.w #$6700,-2(a4)                              ;beq
00030666 <AmiBlitz3.ab2@22534> BRA.s br
0003066C <AmiBlitz3.ab2@22537>   CMP.w #$5cc0,-2(a4)                                      ;>=
00030670 <AmiBlitz3.ab2@22538>   BNE.s 'lb5
00030676 <AmiBlitz3.ab2@22539>          MOVE.w #$6d00,-2(a4)                              ;blt
0003067A <AmiBlitz3.ab2@22540> BRA.s br
00030680 <AmiBlitz3.ab2@22543>   CMP.w #$5fc0,-2(a4)                                      ;<=
00030684 <AmiBlitz3.ab2@22544>         BNE.s b6
0003068A <AmiBlitz3.ab2@22545>          MOVE.w #$6e00,-2(a4)                              ;bgt
0003068C <AmiBlitz3.ab2@22548>   TST.w (a7)+
00030692 <AmiBlitz3.ab2@22550>         TST.b fast
00030696 <AmiBlitz3.ab2@22551>         BEQ 'l1
0003069C <AmiBlitz3.ab2@22552>         OR.b #$ff,-1(a4)                                   ;long branches
000306A0 <AmiBlitz3.ab2@22553>         BSR writeword
000306A4 <AmiBlitz3.ab2@22557>         BSR writeword
000306A8 <AmiBlitz3.ab2@22558> BRA.s br2
000306AC <AmiBlitz3.ab2@22561>   BSR.w writeword
000306B0 <AmiBlitz3.ab2@22564>   MOVE.l posbr(PC),D1
000306B2 <AmiBlitz3.ab2@22565>   TST.w (A7)+
000306B6 <AmiBlitz3.ab2@22566>    BEQ.w JL_0_D0C2
000306BA <AmiBlitz3.ab2@22567>   MOVE.l negbr(PC),D1
000306C0 <AmiBlitz3.ab2@22570>   TST.b fast
000306C4 <AmiBlitz3.ab2@22571>            BEQ 'l1
000306CA <AmiBlitz3.ab2@22572>            OR.l #$00ff0000,d1
000306CE <AmiBlitz3.ab2@22573>            BSR writelong
000306D2 <AmiBlitz3.ab2@22574>            BSR writeword
000306D6 <AmiBlitz3.ab2@22575> BRA br2
000306DA <AmiBlitz3.ab2@22578>   BSR.w writelong
000306DC <AmiBlitz3.ab2@22581>  MOVEQ.l #$0E,D0
000306DE <AmiBlitz3.ab2@22582>   MOVEQ.l #$01,D1
000306E4 <AmiBlitz3.ab2@22583>   MOVEA.l _execbase,A6
000306EA <AmiBlitz3.ab2@22585>   MOVE.l mempool,a0
000306EE <AmiBlitz3.ab2@22586>   JSR _AllocPooled(a6)
000306F0 <AmiBlitz3.ab2@22587>   MOVEA.l D0,A0
000306F6 <AmiBlitz3.ab2@22588>   MOVE.l firstiff,(A0)
000306FC <AmiBlitz3.ab2@22589>   MOVE.l A0,firstiff
00030700 <AmiBlitz3.ab2@22590>   MOVE.l (A7)+,$4(A0)
00030708 <AmiBlitz3.ab2@22591>   MOVE.l destpointer,$8(A0)
0003070C <AmiBlitz3.ab2@22592>   MOVE.w (A7)+,$C(A0)
00030712 <AmiBlitz3.ab2@22593>    JSR reget
00030716 <AmiBlitz3.ab2@22594>    BEQ.w JL_0_D10C
0003071C <AmiBlitz3.ab2@22595>   BSET #$7,$C(A0)
00030726 <AmiBlitz3.ab2@22599>   MOVE.w oldqflag,instringon
0003072C <AmiBlitz3.ab2@22600>   MOVEA.l lastsourcepos,A5
00030734 <AmiBlitz3.ab2@22601>   MOVE.w #$003A,lastchar
00030736 <AmiBlitz3.ab2@22604> RTS
0003073A <AmiBlitz3.ab2@22608>   CMP.w #$1,D0
0003073E <AmiBlitz3.ab2@22609>    BLT.w JL_0_D128
00030742 <AmiBlitz3.ab2@22610>   CMP.w #$0,D0
00030746 <AmiBlitz3.ab2@22611>    BGT.w JL_0_D128
00030748 <AmiBlitz3.ab2@22612>   ADD.w D0,D0
0003074A <AmiBlitz3.ab2@22613>   ADD.w D0,D0
0003074E <AmiBlitz3.ab2@22614>   MOVEA.l JL_0_D128(PC,D0.W),A0
00030750 <AmiBlitz3.ab2@22617> JMP (A0)
00030754 <AmiBlitz3.ab2@22620> BRA.w JL_0_D128
00030758 <AmiBlitz3.ab2@22624>   CMP.w #$1,D0
0003075C <AmiBlitz3.ab2@22625>    BLT.w JL_0_D146
00030760 <AmiBlitz3.ab2@22626>   CMP.w #$0,D0
00030764 <AmiBlitz3.ab2@22627>    BGT.w JL_0_D146
00030766 <AmiBlitz3.ab2@22628>   ADD.w D0,D0
00030768 <AmiBlitz3.ab2@22629>   ADD.w D0,D0
0003076C <AmiBlitz3.ab2@22630>   MOVEA.l JL_0_D146(PC,D0.W),A0
0003076E <AmiBlitz3.ab2@22633>   JSR (A0)
00030772 <AmiBlitz3.ab2@22636> BRA.w JL_0_D146
00030776 <AmiBlitz3.ab2@22640>   CMP.w #$1,D0
0003077A <AmiBlitz3.ab2@22641>    BLT.w JL_0_D168
0003077E <AmiBlitz3.ab2@22642>   CMP.w #$0,D0
00030782 <AmiBlitz3.ab2@22643>    BGT.w JL_0_D168
00030784 <AmiBlitz3.ab2@22644>   ADD.w D0,D0
00030786 <AmiBlitz3.ab2@22645>   ADD.w D0,D0
0003078A <AmiBlitz3.ab2@22646>   MOVEA.l JL_0_D168(PC,D0.W),A0
0003078E <AmiBlitz3.ab2@22649>   MOVE.w #$6753,-(A7)                                      ;#'gS' ;for runtime error checking!
00030790 <AmiBlitz3.ab2@22652>    JSR (A0)
00030794 <AmiBlitz3.ab2@22655> BRA.w JL_0_D168
00030796 <AmiBlitz3.ab2@22658> labcnt:   Ds.w 1
00030798 <AmiBlitz3.ab2@22665>   MOVEQ.l #$02,D2
0003079C <AmiBlitz3.ab2@22666>    BSR.w bakeval
000307A0 <AmiBlitz3.ab2@22667>   LEA JL_0_D10E(PC),A0
000307A4 <AmiBlitz3.ab2@22668>   LEA JL_0_D12C(PC),A1
000307A8 <AmiBlitz3.ab2@22669>   MOVE.w #$001A,D1
000307AC <AmiBlitz3.ab2@22670>   CMP.w #-$7FFB,D0
000307B0 <AmiBlitz3.ab2@22671>    BEQ.w JL_0_D1B6
000307B4 <AmiBlitz3.ab2@22672>   CMP.w #-$7FFA,D0
000307B8 <AmiBlitz3.ab2@22673>    BNE.w JUMP_syntaxerr
000307BC <AmiBlitz3.ab2@22674>   LEA JL_0_D12C(PC),A0
000307C0 <AmiBlitz3.ab2@22675>   LEA JL_0_D14A(PC),A1
000307C4 <AmiBlitz3.ab2@22676>   MOVE.w #$001A,D1
000307CA <AmiBlitz3.ab2@22677>   TST.b debugmode
000307CE <AmiBlitz3.ab2@22678>    BEQ.b JL_0_D1B6
000307D4 <AmiBlitz3.ab2@22679>    JSR chkstak
000307D8 <AmiBlitz3.ab2@22680>   LEA JL_0_D14A(PC),A0
000307DC <AmiBlitz3.ab2@22681>   LEA labcnt(PC),A1
000307E0 <AmiBlitz3.ab2@22682>   MOVE.w #$001E,D1
000307E2 <AmiBlitz3.ab2@22685>   MOVE.w D1,-(A7)
000307E8 <AmiBlitz3.ab2@22686>   MOVE.l destpointer,-(A7)                                 ;for when we know number of labels!
000307EC <AmiBlitz3.ab2@22687>    BSR.w pokecode
000307F2 <AmiBlitz3.ab2@22688>   CLR.w labcnt
000307F8 <AmiBlitz3.ab2@22693>    JSR get1bytemain
000307FE <AmiBlitz3.ab2@22694>   SUBQ.l #2,destpointer                                    ;for makealab!
00030802 <AmiBlitz3.ab2@22695>    BSR.w JL_0_AE22
00030808 <AmiBlitz3.ab2@22696>   ADDQ.l #2,destpointer
0003080E <AmiBlitz3.ab2@22697>    JSR addoff
00030812 <AmiBlitz3.ab2@22698>   MOVE.l $8(A2),D1
00030816 <AmiBlitz3.ab2@22699>    BSR.w writelong
0003081C <AmiBlitz3.ab2@22700>   ADDQ.w #1,labcnt
00030822 <AmiBlitz3.ab2@22701>    JSR reget
00030826 <AmiBlitz3.ab2@22702>   CMP.w #$2C,D0
0003082A <AmiBlitz3.ab2@22703>    BEQ.w JL_0_D1C8
0003082C <AmiBlitz3.ab2@22704>   MOVEA.l (A7)+,A0
0003082E <AmiBlitz3.ab2@22705>   MOVE.w (A7)+,D2
00030834 <AmiBlitz3.ab2@22706>   MOVE.w dontwrite,D1
00030838 <AmiBlitz3.ab2@22707>    BNE.w JL_0_D21A
0003083C <AmiBlitz3.ab2@22708>   MOVE.w labcnt(PC),D1
00030840 <AmiBlitz3.ab2@22709>   MOVE.w D1,$A(A0)
00030842 <AmiBlitz3.ab2@22710>   ADD.w D1,D1
00030844 <AmiBlitz3.ab2@22711>   ADD.w D1,D1
00030846 <AmiBlitz3.ab2@22712>   ADDQ.w #2,D1
0003084A <AmiBlitz3.ab2@22713>   MOVE.w D1,$2(A0,D2.W)
0003084C <AmiBlitz3.ab2@22716> RTS
00030852 <AmiBlitz3.ab2@22720>   TST.b debugmode
00030856 <AmiBlitz3.ab2@22721>    BEQ.w JL_0_D236
0003085C <AmiBlitz3.ab2@22722>    JSR chkstak
00030862 <AmiBlitz3.ab2@22723>   MOVE.l AL_0_D162,D1
00030866 <AmiBlitz3.ab2@22724>    BSR.w writelong
0003086C <AmiBlitz3.ab2@22726>   MOVE.w gosubcode,D1
00030870 <AmiBlitz3.ab2@22727> BRA.w JL_0_D246
00030876 <AmiBlitz3.ab2@22731>   MOVE.w gotocode,D1
00030878 <AmiBlitz3.ab2@22734>   MOVE.w D1,-(A7)
0003087C <AmiBlitz3.ab2@22735>    BSR.w JL_0_AE22
0003087E <AmiBlitz3.ab2@22736>   MOVE.w (A7)+,D1
00030882 <AmiBlitz3.ab2@22737>    BSR.w writeword
00030888 <AmiBlitz3.ab2@22738>    JSR addoff
0003088C <AmiBlitz3.ab2@22739>   MOVE.l $8(A2),D1
00030890 <AmiBlitz3.ab2@22740> BRA.w writelong
00030896 <AmiBlitz3.ab2@22744>   MOVE.w proceduremode,D1
0003089A <AmiBlitz3.ab2@22745>    BEQ.w JUMP_badpenderr
0003089E <AmiBlitz3.ab2@22746>   MOVE.w #$4EF9,D1
000308A2 <AmiBlitz3.ab2@22747>    BSR.w writeword
000308A8 <AmiBlitz3.ab2@22748>    JSR addoff
000308AE <AmiBlitz3.ab2@22749>   MOVEA.l _execbase,A6
000308B0 <AmiBlitz3.ab2@22750>   MOVEQ.l #$08,D0
000308B2 <AmiBlitz3.ab2@22751>   MOVEQ.l #$01,D1
000308B8 <AmiBlitz3.ab2@22753>   MOVE.l mempool,a0
000308BC <AmiBlitz3.ab2@22754>   JSR _AllocPooled(a6)
000308BE <AmiBlitz3.ab2@22755>   MOVEA.l D0,A0
000308C4 <AmiBlitz3.ab2@22756>   MOVE.l firstpend,(A0)
000308CA <AmiBlitz3.ab2@22757>   MOVE.l A0,firstpend
000308D2 <AmiBlitz3.ab2@22758>   MOVE.l destpointer,$4(A0)
000308D6 <AmiBlitz3.ab2@22759> BRA.w writelong
000308DA <AmiBlitz3.ab2@22763>   BSR.w do_AsmExit
000308E0 <AmiBlitz3.ab2@22764> JMP get1bytemain
000308E8 <AmiBlitz3.ab2@22768>   MOVE.b #1,nostringopt
000308EC <AmiBlitz3.ab2@22769>   MOVEM.l a0/a1/d1,-(a7)
000308F2 <AmiBlitz3.ab2@22770>   MOVEA.l currentfunction,A0
000308F8 <AmiBlitz3.ab2@22771>     CMP.l #0,a0
000308FC <AmiBlitz3.ab2@22772>     BNE 'l1
00030902 <AmiBlitz3.ab2@22773>     JMP errorasmexit
00030904 <AmiBlitz3.ab2@22774> 'l1 MOVEQ.l #$00,D2
00030908 <AmiBlitz3.ab2@22775>   MOVE.b $5(A0),D2
0003090C <AmiBlitz3.ab2@22776>   BSR.w eval
00030912 <AmiBlitz3.ab2@22778>   MOVEA.l currentfunction,A0
00030916 <AmiBlitz3.ab2@22779>   MOVE.l funcstruct_returntype(a0),a0
0003091C <AmiBlitz3.ab2@22780>   CMP.l #0,a0
00030920 <AmiBlitz3.ab2@22781>   BEQ 'isstatement
00030928 <AmiBlitz3.ab2@22782>   CMP.l #$100,4(a0)
0003092C <AmiBlitz3.ab2@22783>   BLT.w 'isvar
0003092E <AmiBlitz3.ab2@22784>   MOVE.l a2,a1
00030934 <AmiBlitz3.ab2@22785>   TST.l typetocast
00030938 <AmiBlitz3.ab2@22786>   BEQ 'nocast
0003093E <AmiBlitz3.ab2@22787>   MOVE.l typetocast,a1
00030940 <AmiBlitz3.ab2@22788> 'nocast  CMP.l a0,a1
00030944 <AmiBlitz3.ab2@22789>   BEQ 'ok
0003094A <AmiBlitz3.ab2@22790>   CLR.l typetocast
00030950 <AmiBlitz3.ab2@22791>   MOVE.l lasttoken,d1
00030954 <AmiBlitz3.ab2@22792>   CMP.w #$b581,d1                   ; ok, when token for null
00030958 <AmiBlitz3.ab2@22793>   BEQ 'isnull
0003095E <AmiBlitz3.ab2@22794> 'error  JMP errorconvertreturntype
00030962 <AmiBlitz3.ab2@22801>   MOVEM.l (a7)+,a0/a1/d1
00030966 <AmiBlitz3.ab2@22802> BRA.w do_AsmExit
0003096C <AmiBlitz3.ab2@22804> error_convert_types2 JMP error_convert_types
00030972 <AmiBlitz3.ab2@22817>   TST.b debugmode
00030976 <AmiBlitz3.ab2@22818>    BEQ.w JL_0_D2CA
0003097A <AmiBlitz3.ab2@22819>   MOVE.w #$C305,D1
0003097E <AmiBlitz3.ab2@22820> BRA.w Atokejsr
00030982 <AmiBlitz3.ab2@22823>   MOVE.w #$4E75,D1
00030986 <AmiBlitz3.ab2@22824> BRA.w writeword
0003098A <AmiBlitz3.ab2@22827> localslist:  Ds.l 1                                        ;all locals for procs.;??Looks like obsovled data??
0003098E <AmiBlitz3.ab2@22828> proclocals:  Ds.l 1                                        ;for debugga!
00030990 <AmiBlitz3.ab2@22829> procnum:     Ds.w 1
00030992 <AmiBlitz3.ab2@22830> procnum2:    Ds.w 1
00030996 <AmiBlitz3.ab2@22831> prolineat:   Ds.l 1
0003099C <AmiBlitz3.ab2@22835>    TST.w proceduremode
000309A0 <AmiBlitz3.ab2@22836>    BGT JUMP_sreterr
000309A4 <AmiBlitz3.ab2@22837>    CMP.w #-$7FF9,D0
000309A8 <AmiBlitz3.ab2@22838>    BEQ.w JL_0_D29C
000309AA <AmiBlitz3.ab2@22839>    MOVEQ.l #-$01,D1
000309AE <AmiBlitz3.ab2@22840> BRA.w do_function2
000309B4 <AmiBlitz3.ab2@22843> JMP sreterr
000309BA <AmiBlitz3.ab2@22847>   CLR.b skipfunc
000309C0 <AmiBlitz3.ab2@22848>   TST.l unusedfunc
000309C4 <AmiBlitz3.ab2@22849>   BEQ 'ex
000309C8 <AmiBlitz3.ab2@22850>   MOVEM.l d0-d7/a0-a6,-(a7)
000309CE <AmiBlitz3.ab2@22851>   MOVE.l unusedfunc,d1
000309D4 <AmiBlitz3.ab2@22852>   LEA ptr_parameterstore,a5
000309D6 <AmiBlitz3.ab2@22855>   MOVE.l d1,a0
000309DA <AmiBlitz3.ab2@22856>   LEA 12(a0),a2
000309DC <AmiBlitz3.ab2@22857>   MOVE.l a5,a1
000309DE <AmiBlitz3.ab2@22859>   CMPM.b (a1)+,(a2)+
000309E2 <AmiBlitz3.ab2@22860>   BNE 'neq
000309E4 <AmiBlitz3.ab2@22861>   TST.b (a2)
000309E8 <AmiBlitz3.ab2@22862>   BNE 'ch
000309EA <AmiBlitz3.ab2@22863>   TST.b (a1)
000309EE <AmiBlitz3.ab2@22864>   BNE 'neq
000309F6 <AmiBlitz3.ab2@22865>   MOVE.b #1,skipfunc
000309FA <AmiBlitz3.ab2@22866> BRA 'out
000309FC <AmiBlitz3.ab2@22869>   MOVE.l (a0),d1
00030A00 <AmiBlitz3.ab2@22870>   BNE 'ag
00030A04 <AmiBlitz3.ab2@22873>   MOVEM.l (a7)+,d0-d7/a0-a6
00030A06 <AmiBlitz3.ab2@22876> RTS
00030A0C <AmiBlitz3.ab2@22880> JMP dupprocerr
00030A12 <AmiBlitz3.ab2@22883> JMP illprocperr
00030A1A <AmiBlitz3.ab2@22890>   CMP.w #-1,proceduremode                                  ;was JUMP_sreterr_2
00030A1E <AmiBlitz3.ab2@22891>    BEQ JUMP_sreterr
00030A22 <AmiBlitz3.ab2@22892>   CMP.w #-$7FF9,D0
00030A26 <AmiBlitz3.ab2@22893>    BEQ.w do_function_return
00030A30 <AmiBlitz3.ab2@22896>   MOVE.w oldqflag,instringon
00030A36 <AmiBlitz3.ab2@22897>   MOVEA.l lastsourcepos,A5
00030A3C <AmiBlitz3.ab2@22898>   JSR getfunctionreturntype
00030A42 <AmiBlitz3.ab2@22899>   JSR get1bytemain
00030A48 <AmiBlitz3.ab2@22902>   TST.b declare
00030A4C <AmiBlitz3.ab2@22903>   BEQ 'l1
00030A54 <AmiBlitz3.ab2@22904>   MOVE.b #1,nowdeclare
00030A5A <AmiBlitz3.ab2@22907>   JSR errchx                                           ;writejumpoverfunction
00030A60 <AmiBlitz3.ab2@22910>   CLR.b fastfunc
00030A6A <AmiBlitz3.ab2@22911>   MOVE.l firstiff,firstiffstore
00030A72 <AmiBlitz3.ab2@22912>   CMP.l #"FAST",-1(a5)
00030A76 <AmiBlitz3.ab2@22913>   BNE 'nofast
00030A7C <AmiBlitz3.ab2@22914>   CMP.b #" ",3(a5)
00030A80 <AmiBlitz3.ab2@22915>   BNE 'nofast
00030A82 <AmiBlitz3.ab2@22916>   ADDQ.l #3,a5
00030A86 <AmiBlitz3.ab2@22919>     CMP.b #" ",(a5)
00030A8A <AmiBlitz3.ab2@22920>      BNE 'x1
00030A8C <AmiBlitz3.ab2@22921>     ADDQ #1,a5
00030A90 <AmiBlitz3.ab2@22922> BRA 'x2
00030A96 <AmiBlitz3.ab2@22925>   MOVE.l a5,lastsourcepos
00030A9E <AmiBlitz3.ab2@22926>   MOVE.b #1,fastfunc
00030AA6 <AmiBlitz3.ab2@22929>   CMP.l #"NOOP",-1(a5)                                     ;compile 3* so its deactivate
00030AAA <AmiBlitz3.ab2@22930> BRA 'noopt
00030AB0 <AmiBlitz3.ab2@22932>   CMP.w #"T ",3(a5)                                        ;??Looks like dead code??
00030AB4 <AmiBlitz3.ab2@22933>   BNE 'noopt
00030AB6 <AmiBlitz3.ab2@22934>   ADDQ.l #4,a5
00030ABA <AmiBlitz3.ab2@22937>     CMP.b #" ",(a5)
00030ABE <AmiBlitz3.ab2@22938>      BNE 'x1b
00030AC0 <AmiBlitz3.ab2@22939>     ADDQ #1,a5
00030AC4 <AmiBlitz3.ab2@22940> BRA 'x2b
00030ACA <AmiBlitz3.ab2@22943>   MOVE.l a5,lastsourcepos
00030AD0 <AmiBlitz3.ab2@22945>   JSR makename2
00030AD4 <AmiBlitz3.ab2@22946> BRA 'l1
00030ADA <AmiBlitz3.ab2@22950>   JSR makename2
00030AE0 <AmiBlitz3.ab2@22951>   JSR checkused
00030AE6 <AmiBlitz3.ab2@22952>   TST.b skipfunc
00030AEA <AmiBlitz3.ab2@22953>    BEQ 'l1
00030AF0 <AmiBlitz3.ab2@22954>   JSR skipme
00030AF6 <AmiBlitz3.ab2@22955>   CLR.b fastfunc
00030AF8 <AmiBlitz3.ab2@22956> RTS
00030B02 <AmiBlitz3.ab2@22959>   MOVE.l linenumat,prolineat
00030B08 <AmiBlitz3.ab2@22960>   ADDQ.w #1,procnum2
00030B10 <AmiBlitz3.ab2@22961>   MOVE.w procnum2(PC),procnum
00030B16 <AmiBlitz3.ab2@22962>   MOVE.w D1,proceduremode
00030B1C <AmiBlitz3.ab2@22963>   CLR.w locvaroff
00030B20 <AmiBlitz3.ab2@22964>   CMP.w #$7B,D0
00030B24 <AmiBlitz3.ab2@22965>    BNE.w JUMP_syntaxerr
00030B2C <AmiBlitz3.ab2@22966>    MOVE.b #1,infunctioncode
00030B32 <AmiBlitz3.ab2@22967>   MOVEA.l tempvm,A0
00030B3A <AmiBlitz3.ab2@22968>   MOVE.w $C(A0),memlibstat
00030B40 <AmiBlitz3.ab2@22969>   BCLR #$7,$C(A0)                                          ;Bit out of range
00030B44 <AmiBlitz3.ab2@22970>   MOVE.w #$4EF9,D1
00030B48 <AmiBlitz3.ab2@22971>    BSR.w writeword
00030B4E <AmiBlitz3.ab2@22972>    JSR addoff
00030B52 <AmiBlitz3.ab2@22973>    BSR.w writelong
00030B58 <AmiBlitz3.ab2@22974>    JSR findproc                                          ;findproc function
00030B5C <AmiBlitz3.ab2@22975>    BEQ.w JUMP_dupprocerr
00030B62 <AmiBlitz3.ab2@22976>    JSR addlabel
00030B68 <AmiBlitz3.ab2@22977>    MOVE.b #31,$20(a2)                                      ;increase if more pars
00030B6E <AmiBlitz3.ab2@22978>    MOVE.b #0,isfunc(a2)
00030B76 <AmiBlitz3.ab2@22979>    MOVE.l functionreturntype,funcstruct_returntype(a2)
00030B7E <AmiBlitz3.ab2@22980>   MOVE.l destpointer,$E(A2)
00030B84 <AmiBlitz3.ab2@22981>   MOVE.l A2,currentfunction
00030B8A <AmiBlitz3.ab2@22982>   LEA nops8,A0
00030B90 <AmiBlitz3.ab2@22983>   LEA dataget,A1
00030B94 <AmiBlitz3.ab2@22984>    BSR.w pokecode2
00030B9A <AmiBlitz3.ab2@22985>   TST.b debugmode
00030B9E <AmiBlitz3.ab2@22986>    BEQ.b JL_0_D3AA
00030BA0 <AmiBlitz3.ab2@22987>   MOVEQ.l #$04,D1
00030BA6 <AmiBlitz3.ab2@22988>    JSR writetrap
00030BB0 <AmiBlitz3.ab2@22989>   MOVE.l destpointer,proclocals
00030BB4 <AmiBlitz3.ab2@22990>    BSR.w writelong
00030BB8 <AmiBlitz3.ab2@22991>    BSR.w writelong
00030BBC <AmiBlitz3.ab2@22994>    LEA $16(A2),A4
00030BC4 <AmiBlitz3.ab2@22995>   MOVE.b proceduremode+1,$5(A2)
00030BC6 <AmiBlitz3.ab2@22996>   MOVEQ.l #$00,D6
00030BC8 <AmiBlitz3.ab2@22997>   MOVEQ.l #$00,D5
00030BCE <AmiBlitz3.ab2@22998>    JSR get1bytemain
00030BD2 <AmiBlitz3.ab2@22999>   CMP.w #$7D,D0
00030BD6 <AmiBlitz3.ab2@23000>    BEQ.w JL_0_D466
00030BDA <AmiBlitz3.ab2@23003>    CMP.b #"@",d0
00030BDE <AmiBlitz3.ab2@23004>    BNE 'l2
00030BE0 <AmiBlitz3.ab2@23005>    MOVE.l a0,-(a7)
00030BE6 <AmiBlitz3.ab2@23006>    MOVE.l currentfunction,a0
00030BEC <AmiBlitz3.ab2@23007>    CMP.b #31,$20(a0)                                       ;increase if morepars
00030BF0 <AmiBlitz3.ab2@23008>    BNE 'l1
00030BF4 <AmiBlitz3.ab2@23009>    MOVE.b d6,$20(a0)                                       ;increase if morepar
00030BFA <AmiBlitz3.ab2@23012>    JSR get1bytemain
00030BFC <AmiBlitz3.ab2@23013>    MOVE.l (a7)+,a0
00030C00 <AmiBlitz3.ab2@23016>    BSR.w getparameter
00030C04 <AmiBlitz3.ab2@23017>    BSR.w JL_0_8E3C
00030C0C <AmiBlitz3.ab2@23018>   CMPI.l #$7,$4(A2)
00030C10 <AmiBlitz3.ab2@23019>    BNE.w JL_0_D3F6
00030C16 <AmiBlitz3.ab2@23020>   LEA stbuff,A0
00030C18 <AmiBlitz3.ab2@23021>   MOVE.w D5,D1
00030C1A <AmiBlitz3.ab2@23022>   LSL.w #2,D1
00030C1E <AmiBlitz3.ab2@23023>   MOVE.w D6,$0(A0,D1.W)
00030C24 <AmiBlitz3.ab2@23024>   MOVE.w $4(A3),$2(A0,D1.W)
00030C26 <AmiBlitz3.ab2@23025>   ADDQ.w #1,D5
00030C28 <AmiBlitz3.ab2@23026>   MOVEQ.l #$07,D2
00030C2C <AmiBlitz3.ab2@23027> BRA.w JL_0_D442
00030C32 <AmiBlitz3.ab2@23030> JMP toovarerr
00030C36 <AmiBlitz3.ab2@23033>   MOVE.w #$2940,D1
00030C38 <AmiBlitz3.ab2@23034>   MOVEQ.l #$03,D2
00030C40 <AmiBlitz3.ab2@23035>   BTST #$0,flagmask+1
00030C44 <AmiBlitz3.ab2@23036>    BNE.w JL_0_D430
00030C4C <AmiBlitz3.ab2@23037>   CMPI.l #$100,$4(A2)
00030C50 <AmiBlitz3.ab2@23038>    BCC.w JUMP_illprocperr
00030C54 <AmiBlitz3.ab2@23039>   MOVE.w $6(A2),D2
00030C58 <AmiBlitz3.ab2@23040>   CMP.w #$2,D2
00030C5C <AmiBlitz3.ab2@23041>    BHI.w JL_0_D430
00030C60 <AmiBlitz3.ab2@23042>    BEQ.w JL_0_D42C
00030C64 <AmiBlitz3.ab2@23043>   EORI.w #$3000,D1
00030C68 <AmiBlitz3.ab2@23044> BRA.w JL_0_D430
00030C6E <AmiBlitz3.ab2@23047> JMP more6pard
00030C72 <AmiBlitz3.ab2@23050>   ORI.w #$1000,D1
00030C74 <AmiBlitz3.ab2@23053>   OR.w D6,D1
00030C7A <AmiBlitz3.ab2@23054>   TST.b fpu
00030C7E <AmiBlitz3.ab2@23055>   BEQ 'nofpu
00030C82 <AmiBlitz3.ab2@23056>   CMP.b #5,d2
00030C86 <AmiBlitz3.ab2@23057>   BNE 'nofpu
00030C8A <AmiBlitz3.ab2@23058>   CMP.w #6,d6
00030C8E <AmiBlitz3.ab2@23059>   BLT 'l10a
00030C94 <AmiBlitz3.ab2@23060>   CMP.l #newtype_double,a2
00030C98 <AmiBlitz3.ab2@23061>   BEQ JUMP_more6pard
00030C9C <AmiBlitz3.ab2@23062> BRA 'nofpu
00030CA2 <AmiBlitz3.ab2@23065>   MOVE.l #$f22c6400,d1
00030CA6 <AmiBlitz3.ab2@23066>   MOVEM.l d0/a4,-(a7)
00030CA8 <AmiBlitz3.ab2@23067>   MOVE.l d6,d0
00030CAA <AmiBlitz3.ab2@23068>   ASL.l #7,d0
00030CAC <AmiBlitz3.ab2@23069>   OR.w d0,d1
00030CB2 <AmiBlitz3.ab2@23070>   CMP.l #newtype_double,a2
00030CB6 <AmiBlitz3.ab2@23071>   BNE 'l1
00030CBC <AmiBlitz3.ab2@23072>   OR.l #$1000,d1
00030CC0 <AmiBlitz3.ab2@23075>   BSR writelong
00030CC4 <AmiBlitz3.ab2@23076>   MOVE.w 4(a3),d1
00030CC8 <AmiBlitz3.ab2@23077>   BSR writeword
00030CCC <AmiBlitz3.ab2@23078>   MOVEM.l (a7)+,a4/d0
00030CD0 <AmiBlitz3.ab2@23079> BRA JL_0_D442
00030CD2 <AmiBlitz3.ab2@23082>   MOVE.l A4,-(A7)
00030CD6 <AmiBlitz3.ab2@23083>    CMP.w #6,d6
00030CDA <AmiBlitz3.ab2@23084>    BLT 'l10
00030CDE <AmiBlitz3.ab2@23085>    MOVE.w #$c500-4,d1                                      ;savetemp+regnum
00030CE0 <AmiBlitz3.ab2@23086>    ADD.w d6,d1
00030CE6 <AmiBlitz3.ab2@23087>    JSR Atokejsr
00030CEC <AmiBlitz3.ab2@23088>    TST.w dontwrite
00030CF0 <AmiBlitz3.ab2@23089>    BNE 'l10
00030CF6 <AmiBlitz3.ab2@23090>    MOVE.l data1start,d1
00030CFC <AmiBlitz3.ab2@23091>    MOVE.l destpointer,a4
00030D00 <AmiBlitz3.ab2@23092>    ADD.l d1,-6(a4)
00030D06 <AmiBlitz3.ab2@23093>    MOVE.l destpointer,d1
00030D08 <AmiBlitz3.ab2@23094>    SUBQ.l #6,d1
00030D0E <AmiBlitz3.ab2@23095>    SUB.l destbufferstart,d1
00030D10 <AmiBlitz3.ab2@23097>    MOVE.l d2,-(a7)
00030D12 <AmiBlitz3.ab2@23098>    MOVE.l d1,d2
00030D18 <AmiBlitz3.ab2@23099>    JSR addhunkoffset                                       ;move.l $0,-x(a4)
00030D1A <AmiBlitz3.ab2@23100>    MOVE.l (a7)+,d2
00030D20 <AmiBlitz3.ab2@23101>    MOVE.l destpointer,a4
00030D24 <AmiBlitz3.ab2@23102>    CMP.w #2,d2
00030D28 <AmiBlitz3.ab2@23103>    BNE 'nw1
00030D2E <AmiBlitz3.ab2@23105>    MOVE.w #$3979,-8(a4)                                    ;move.w $0,-x(a4)
00030D36 <AmiBlitz3.ab2@23106>    ADD.l #2,-6(a4)
00030D3A <AmiBlitz3.ab2@23109>    CMP.w #1,d2
00030D3E <AmiBlitz3.ab2@23110>    BNE 'nb
00030D44 <AmiBlitz3.ab2@23111>    MOVE.w #$1979,-8(a4)                                    ;move.b $0,-x(a4)
00030D4C <AmiBlitz3.ab2@23112>    ADD.l #3,-6(a4)
00030D52 <AmiBlitz3.ab2@23115>    MOVE.w $4(a3),-2(a4)
00030D56 <AmiBlitz3.ab2@23116> BRA 'ne1
00030D5A <AmiBlitz3.ab2@23119>   BSR.w writeword                                          ;write storeparameter
00030D5E <AmiBlitz3.ab2@23122>   MOVE.w $4(A3),D1
00030D62 <AmiBlitz3.ab2@23123>    BSR.w writeword
00030D64 <AmiBlitz3.ab2@23126>   MOVEA.l (A7)+,A4
00030D6A <AmiBlitz3.ab2@23129>   CLR.l functionreturntype
00030D6C <AmiBlitz3.ab2@23130>   ADDQ.w #1,D6
00030D70 <AmiBlitz3.ab2@23131>   CMP.w #11,D6                                             ;max function parameters
00030D74 <AmiBlitz3.ab2@23132>    BCC.w JUMP_toovarerr
00030D7A <AmiBlitz3.ab2@23133>   MOVE.l currentfunction,a0
00030D7E <AmiBlitz3.ab2@23134>   MOVE.l a2,funcstruct_parametertype-4(a0,d6*4)                                    ;-4 because d6 is increment before
00030D80 <AmiBlitz3.ab2@23135>   MOVE.b D2,(A4)+
00030D84 <AmiBlitz3.ab2@23136>   CMP.w #$2C,D0
00030D88 <AmiBlitz3.ab2@23137>    BNE.w JL_0_D45E
00030D8E <AmiBlitz3.ab2@23138>    JSR get1bytemain
00030D92 <AmiBlitz3.ab2@23150> BRA.w JL_0_D3C6
00030D96 <AmiBlitz3.ab2@23153>   CMP.w #$7D,D0
00030D9A <AmiBlitz3.ab2@23154>    BNE.w JUMP_syntaxerr
00030DA0 <AmiBlitz3.ab2@23157>   MOVEA.l currentfunction,A2
00030DA2 <AmiBlitz3.ab2@23158>   LSL.w #4,D5
00030DA4 <AmiBlitz3.ab2@23159>   OR.w D5,D6
00030DA8 <AmiBlitz3.ab2@23160>   MOVE.b D6,$4(A2)
00030DAA <AmiBlitz3.ab2@23161>   LSR.w #4,D6
00030DAE <AmiBlitz3.ab2@23162>    BEQ.w JL_0_D4C4
00030DB4 <AmiBlitz3.ab2@23163>   LEA stbuff,A0
00030DB6 <AmiBlitz3.ab2@23164>   SUBQ.w #1,D6
00030DB8 <AmiBlitz3.ab2@23167>     MOVE.w D6,D1                                           ;function stringpars
00030DBA <AmiBlitz3.ab2@23168>     LSL.w #2,D1                                            ;stringsize was 2
00030DBC <AmiBlitz3.ab2@23170>       LSL.w #1,d1
00030DBE <AmiBlitz3.ab2@23171>       ADDQ.w #4,d1
00030DC0 <AmiBlitz3.ab2@23173>     ADDQ.w #8,D1
00030DC6 <AmiBlitz3.ab2@23174>     MOVE.w D1,funcst+2
00030DCC <AmiBlitz3.ab2@23175>     MOVE.l funcst,D1
00030DD0 <AmiBlitz3.ab2@23176>     BSR.w writelong
00030DD2 <AmiBlitz3.ab2@23177>     MOVE.w (A0)+,D1
00030DD6 <AmiBlitz3.ab2@23178>     CMP.b #5,d1
00030DDA <AmiBlitz3.ab2@23179>     BLE 's1
00030DDE <AmiBlitz3.ab2@23180>     MOVE.w #$266c,d1                                       ;native move.l 4(a4),a3
00030DE2 <AmiBlitz3.ab2@23181>     BSR writeinstruction
00030DE4 <AmiBlitz3.ab2@23182>     MOVE.w D6,D1                                           ;function stringpars
00030DE6 <AmiBlitz3.ab2@23183>     LSL.w #2,D1                                            ;stringsize was 2
00030DE8 <AmiBlitz3.ab2@23185>       LSL.w #1,d1
00030DEA <AmiBlitz3.ab2@23187>     ADDQ.w #8,D1
00030DEE <AmiBlitz3.ab2@23188>     BSR writeword
00030DF2 <AmiBlitz3.ab2@23189>   BRA 's2
00030DF8 <AmiBlitz3.ab2@23192>     OR.w movedna3,D1
00030DFC <AmiBlitz3.ab2@23193>      BSR.w writeword
00030E02 <AmiBlitz3.ab2@23196>     MOVE.w (A0)+,least+2
00030E08 <AmiBlitz3.ab2@23197>     MOVE.l least,D1
00030E0C <AmiBlitz3.ab2@23198>      BSR.w writelong
00030E0E <AmiBlitz3.ab2@23199>     MOVE.l A0,-(A7)
00030E12 <AmiBlitz3.ab2@23200>     MOVE.w #$C700,D1
00030E16 <AmiBlitz3.ab2@23201>      BSR.w Atokejsr
00030E18 <AmiBlitz3.ab2@23202>     MOVEA.l (A7)+,A0
00030E1C <AmiBlitz3.ab2@23203>   DBF D6,JL_0_D482
00030E22 <AmiBlitz3.ab2@23206> JMP get1bytemain
00030E28 <AmiBlitz3.ab2@23210>   MOVE.w dontwrite,D1
00030E2C <AmiBlitz3.ab2@23211>    BNE.w JL_0_D4F6
00030E32 <AmiBlitz3.ab2@23212>   MOVE.l destpointer,-(A7)
00030E38 <AmiBlitz3.ab2@23213>   MOVE.l A0,destpointer
00030E3E <AmiBlitz3.ab2@23214>   MOVE.l linksize,D1
00030E42 <AmiBlitz3.ab2@23215>    BSR.w writelong                                         ;writefunctions jumppos
00030E48 <AmiBlitz3.ab2@23216>    TST.b fastfunc
00030E4C <AmiBlitz3.ab2@23217>    BNE 'skip
00030E50 <AmiBlitz3.ab2@23218>   MOVE.w #$CC00,D1
00030E54 <AmiBlitz3.ab2@23219>    BSR.w tokejsr2                                          ;write clearvars
00030E5A <AmiBlitz3.ab2@23222>   MOVE.l (A7)+,destpointer
00030E5C <AmiBlitz3.ab2@23225> RTS
00030E62 <AmiBlitz3.ab2@23229>   MOVEA.l currentfunction,A2
00030E66 <AmiBlitz3.ab2@23230>   MOVEA.l $E(A2),A0
00030E6A <AmiBlitz3.ab2@23231>   MOVE.w $6(A2),D1
00030E6E <AmiBlitz3.ab2@23232>    BEQ.w JL_0_D538
00030E74 <AmiBlitz3.ab2@23233>   MOVE.w D1,linksize+2
00030E78 <AmiBlitz3.ab2@23234>   MOVE.w $8(A2),D1                                         ;check if function memalloc need
00030E7C <AmiBlitz3.ab2@23235>    BNE.w JL_0_D522
00030E7E <AmiBlitz3.ab2@23236>   ADDQ.w #6,A0
00030E82 <AmiBlitz3.ab2@23237>   MOVE.l A0,$E(A2)
00030E86 <AmiBlitz3.ab2@23238> BRA.w JL_0_D4C8
00030E88 <AmiBlitz3.ab2@23241>   MOVE.l A0,-(A7)
00030E8C <AmiBlitz3.ab2@23242>    BSR.w JL_0_D4C8
00030E8E <AmiBlitz3.ab2@23243>   MOVEA.l (A7)+,A0
00030E92 <AmiBlitz3.ab2@23244>   LEA $A(A0),A0
00030E98 <AmiBlitz3.ab2@23245>   MOVEA.l currentfunction,A2
00030E9C <AmiBlitz3.ab2@23246> BRA.w JL_0_D54A
00030EA0 <AmiBlitz3.ab2@23249>   MOVE.w $8(A2),D1
00030EA4 <AmiBlitz3.ab2@23250>    BNE.w JL_0_D54A
00030EA8 <AmiBlitz3.ab2@23251>   LEA $10(A0),A0
00030EAC <AmiBlitz3.ab2@23252>   MOVE.l A0,$E(A2)
00030EAE <AmiBlitz3.ab2@23253> RTS
00030EB4 <AmiBlitz3.ab2@23257> JMP errormsg_nofast
00030EBA <AmiBlitz3.ab2@23260>    MOVE.w dontwrite,D1                                     ;writeallocmem for functions (after releasemem called)
00030EBE <AmiBlitz3.ab2@23261>    BNE.w JL_0_D580
00030EC4 <AmiBlitz3.ab2@23262>    TST.b fastfunc
00030EC8 <AmiBlitz3.ab2@23263>    BNE JUMP_errormsg_nofast
00030ECE <AmiBlitz3.ab2@23264>   MOVE.l destpointer,-(A7)
00030ED4 <AmiBlitz3.ab2@23265>   MOVE.l A0,destpointer
00030ED8 <AmiBlitz3.ab2@23266>   MOVE.w #$4EB9,D1
00030EDC <AmiBlitz3.ab2@23267>    BSR.w writeword
00030EE2 <AmiBlitz3.ab2@23268>    JSR addoff
00030EE6 <AmiBlitz3.ab2@23269>    BSR.w writelong
00030EE8 <AmiBlitz3.ab2@23270>   MOVEA.l (A7)+,A0
00030EEE <AmiBlitz3.ab2@23271>   MOVEA.l destpointer,A1
00030EF0 <AmiBlitz3.ab2@23272>   MOVE.l A0,-(A1)
00030EF6 <AmiBlitz3.ab2@23273>   MOVE.l A0,destpointer
00030EFA <AmiBlitz3.ab2@23276>   MOVE.w $8(A2),D4
00030EFE <AmiBlitz3.ab2@23277>    BPL.w JL_0_D59E
00030F02 <AmiBlitz3.ab2@23278>   MOVE.w #$C004,D1
00030F06 <AmiBlitz3.ab2@23279>    BSR.w tokejsr2
00030F0C <AmiBlitz3.ab2@23280>   MOVEA.l currentfunction,A2
00030F10 <AmiBlitz3.ab2@23281>   MOVE.w $8(A2),D4
00030F14 <AmiBlitz3.ab2@23282>   ANDI.w #$7FFF,D4
00030F18 <AmiBlitz3.ab2@23285>    BEQ.w JL_0_D5E0
00030F1C <AmiBlitz3.ab2@23286>   MOVE.b $4(A2),D1
00030F20 <AmiBlitz3.ab2@23287>   ANDI.w #$F,D1
00030F22 <AmiBlitz3.ab2@23288>   MOVE.w D1,-(A7)
00030F26 <AmiBlitz3.ab2@23289>   CMP.w #$5,D1
00030F2A <AmiBlitz3.ab2@23290>    BCS.w JL_0_D5BC
00030F2E <AmiBlitz3.ab2@23291>   MOVE.w #$2F04,D1
00030F32 <AmiBlitz3.ab2@23292>    BSR.w writeword
00030F38 <AmiBlitz3.ab2@23295>   MOVE.l locdatast,D3
00030F3E <AmiBlitz3.ab2@23296>    JSR datastart
00030F42 <AmiBlitz3.ab2@23297>   MOVE.w #$C501,D1
00030F46 <AmiBlitz3.ab2@23298>    BSR.w tokejsr2
00030F48 <AmiBlitz3.ab2@23299>   MOVE.w (A7)+,D1
00030F4C <AmiBlitz3.ab2@23300>   CMP.w #$5,D1
00030F50 <AmiBlitz3.ab2@23301>    BCS.w JL_0_D5E0
00030F54 <AmiBlitz3.ab2@23302>   MOVE.w #$281F,D1
00030F58 <AmiBlitz3.ab2@23303>    BSR.w writeword
00030F5C <AmiBlitz3.ab2@23305>   MOVE.w #$4E75,D1
00030F60 <AmiBlitz3.ab2@23306> BRA.w writeword
00030F66 <AmiBlitz3.ab2@23310>   LEA mwait,A0
00030F6C <AmiBlitz3.ab2@23311>   LEA mwaitf,A1
00030F70 <AmiBlitz3.ab2@23312> BRA.w pokecode
00030F76 <AmiBlitz3.ab2@23316> JMP laberr
00030F7A <AmiBlitz3.ab2@23319>   CMP.w #$2E,D0
00030F7E <AmiBlitz3.ab2@23320>   BNE.w JUMP_syntaxerr
00030F84 <AmiBlitz3.ab2@23321>   JSR getparameter2
00030F88 <AmiBlitz3.ab2@23322>   BEQ.w JUMP_laberr
00030F8E <AmiBlitz3.ab2@23323>   LEA newtypebase,A2
00030F94 <AmiBlitz3.ab2@23324>   JSR findtype
00030F98 <AmiBlitz3.ab2@23325>   BNE.w JL_0_D626
00030FA0 <AmiBlitz3.ab2@23326>   CMPI.l #MaxByte,$4(A2)
00030FA4 <AmiBlitz3.ab2@23327>   BNE.w JUMP_typeerr
00030FA8 <AmiBlitz3.ab2@23328> BRA.w JL_0_D62A
00030FAE <AmiBlitz3.ab2@23331> JMP typeerr
00030FB4 <AmiBlitz3.ab2@23334>   JSR addlabel
00030FB8 <AmiBlitz3.ab2@23337>   CLR.l $4(A2)
00030FBE <AmiBlitz3.ab2@23338>   MOVE.l A2,thistype
00030FC4 <AmiBlitz3.ab2@23339>   CLR.l prevtype
00030FCA <AmiBlitz3.ab2@23340>   CLR.w typelen
00030FD0 <AmiBlitz3.ab2@23341>   CLR.w linemode
00030FD6 <AmiBlitz3.ab2@23342>   JSR reget
00030FDA <AmiBlitz3.ab2@23343>   BNE.w typemode
00030FDC <AmiBlitz3.ab2@23344> RTS
00030FE0 <AmiBlitz3.ab2@23347>   CMP.w #-$7FFE,D0
00030FE4 <AmiBlitz3.ab2@23348>   BEQ.w JL_0_D82E
00030FEE <AmiBlitz3.ab2@23350>   MOVE.w oldqflag,instringon
00030FF4 <AmiBlitz3.ab2@23351>   MOVEA.l lastsourcepos,A5
00030FF6 <AmiBlitz3.ab2@23352>   MOVEQ.l #$00,D6
00030FFA <AmiBlitz3.ab2@23353>   CMP.w #$2A,D0
00030FFE <AmiBlitz3.ab2@23354>   BNE.w JL_0_D670
00031000 <AmiBlitz3.ab2@23355>   MOVEQ.l #$01,D6
00031006 <AmiBlitz3.ab2@23356>   JSR get1bytemain
0003100A <AmiBlitz3.ab2@23357> BRA.w JL_0_D67E
0003100E <AmiBlitz3.ab2@23360>   CMP.w #$40,D0
00031012 <AmiBlitz3.ab2@23361>   BNE.w JL_0_D67E
00031014 <AmiBlitz3.ab2@23362>   MOVEQ.l #$05,D6
0003101A <AmiBlitz3.ab2@23363>   JSR get1bytemain
00031020 <AmiBlitz3.ab2@23366>   MOVE.w D6,flagmask
00031026 <AmiBlitz3.ab2@23367>   JSR getparameter2
0003102A <AmiBlitz3.ab2@23368>   BEQ.w JUMP_syntaxerr
00031030 <AmiBlitz3.ab2@23369>   MOVEA.l thistype,A2
00031032 <AmiBlitz3.ab2@23370>   ADDQ.w #4,A2
00031038 <AmiBlitz3.ab2@23371>   JSR findvariable2
0003103C <AmiBlitz3.ab2@23372>   BEQ.w JUMP_dupofferr
00031042 <AmiBlitz3.ab2@23373>   JSR addlabel
00031044 <AmiBlitz3.ab2@23374>   MOVE.l A2,-(A7)
00031048 <AmiBlitz3.ab2@23375>   CMP.w #$2E,D0
0003104C <AmiBlitz3.ab2@23376>    BEQ.w JL_0_D6CE
00031050 <AmiBlitz3.ab2@23377>   CMP.w #$24,D0
00031054 <AmiBlitz3.ab2@23378>    BNE.w JL_0_D6C0
0003105A <AmiBlitz3.ab2@23379>   MOVE.l #newtype_string,D2
00031060 <AmiBlitz3.ab2@23380>    JSR get1bytemain
00031064 <AmiBlitz3.ab2@23381> BRA.w JL_0_D710
0003106A <AmiBlitz3.ab2@23384> JMP dupofferr
00031070 <AmiBlitz3.ab2@23387>   MOVE.l prevtype,D2
00031074 <AmiBlitz3.ab2@23388>   BEQ.w JUMP_notypeerr
00031078 <AmiBlitz3.ab2@23389> BRA.w JL_0_D706
0003107E <AmiBlitz3.ab2@23392> JMP notypeerr
00031084 <AmiBlitz3.ab2@23395>   JSR getparameter2
00031088 <AmiBlitz3.ab2@23396>    BEQ.w JUMP_syntaxerr
0003108E <AmiBlitz3.ab2@23397>   LEA newtypebase,A2
00031094 <AmiBlitz3.ab2@23398>    JSR findtype
00031098 <AmiBlitz3.ab2@23399>    BEQ.w JL_0_D704
000310A0 <AmiBlitz3.ab2@23400>   BTST #$0,flagmask+1
000310A4 <AmiBlitz3.ab2@23401>    BEQ.w JUMP_notypeerr
000310AA <AmiBlitz3.ab2@23402>   JSR addlabel
000310B2 <AmiBlitz3.ab2@23405>   MOVE.w linenumat+2,$8(A2)
000310BA <AmiBlitz3.ab2@23406>   MOVE.l #MaxByte,$4(A2)
000310BC <AmiBlitz3.ab2@23409>   MOVE.l A2,D2
000310C2 <AmiBlitz3.ab2@23412>   CMP.l #newtype_byte,D2
000310C6 <AmiBlitz3.ab2@23413>    BEQ.w JL_0_D71E
000310CC <AmiBlitz3.ab2@23416>   ADDQ.w #1,typelen
000310D4 <AmiBlitz3.ab2@23417>   BCLR #$0,typelen+1
000310D6 <AmiBlitz3.ab2@23420>   MOVEQ.l #$00,D3
000310D8 <AmiBlitz3.ab2@23421>   MOVEA.l D2,A2
000310DE <AmiBlitz3.ab2@23422>   MOVE.l A2,prevtype
000310E2 <AmiBlitz3.ab2@23423>   MOVE.w $8(A2),D3
000310E4 <AmiBlitz3.ab2@23424>   MOVEA.l (A7)+,A2
000310E8 <AmiBlitz3.ab2@23425>   MOVE.l D2,$A(A2)
000310EA <AmiBlitz3.ab2@23426>   MOVEQ.l #$00,D4
000310F0 <AmiBlitz3.ab2@23427>   MOVE.w typelen,D4
000310F4 <AmiBlitz3.ab2@23428>   MOVE.w D4,$4(A2)
000310FC <AmiBlitz3.ab2@23429>   BTST #$0,flagmask+1
00031100 <AmiBlitz3.ab2@23430>    BEQ.w JL_0_D74C
00031102 <AmiBlitz3.ab2@23431>   MOVEQ.l #$04,D3
00031106 <AmiBlitz3.ab2@23434>   CMP.w #$5B,D0
0003110A <AmiBlitz3.ab2@23435>    BNE.w JL_0_D782
0003110E <AmiBlitz3.ab2@23436>   MOVEM.l D3-D4/A2,-(A7)
00031112 <AmiBlitz3.ab2@23437>    BSR.w AJL_0_BF6E
00031116 <AmiBlitz3.ab2@23438>   CMP.w #$5D,D0
0003111A <AmiBlitz3.ab2@23439>    BNE.w JUMP_syntaxerr
0003111C <AmiBlitz3.ab2@23440>   TST.w D6
00031120 <AmiBlitz3.ab2@23441>    BNE.w JUMP_fpconerr
00031122 <AmiBlitz3.ab2@23442>   MOVE.l D3,D1
00031126 <AmiBlitz3.ab2@23443>   MOVEM.l (A7)+,D3-D4/A2
0003112C <AmiBlitz3.ab2@23444>    JSR get1bytemain
00031130 <AmiBlitz3.ab2@23445>   MOVE.w D1,$8(A2)
00031134 <AmiBlitz3.ab2@23446>   MULU.l d1,d3                                             ;>32k fix was mulu.w
0003113C <AmiBlitz3.ab2@23447>   ORI.w #$2,flagmask
0003113E <AmiBlitz3.ab2@23450>   ADD.l D3,D4
00031144 <AmiBlitz3.ab2@23453>     CMP.l #65532,d4
00031148 <AmiBlitz3.ab2@23458>   BCC JUMP_toolongerr
00031150 <AmiBlitz3.ab2@23459>   MOVE.w flagmask,$6(A2)
00031156 <AmiBlitz3.ab2@23460>   MOVE.w D4,typelen
00031158 <AmiBlitz3.ab2@23461> RTS
0003115E <AmiBlitz3.ab2@23464> JMP badenderr
00031164 <AmiBlitz3.ab2@23467> JMP noiferr
0003116A <AmiBlitz3.ab2@23470> JMP toolongerr
00031170 <AmiBlitz3.ab2@23473> JMP fpconerr
00031176 <AmiBlitz3.ab2@23476>   MOVE.l firstiff,D0
0003117A <AmiBlitz3.ab2@23477>    BEQ.w JUMP_noiferr
0003117C <AmiBlitz3.ab2@23478>   MOVEA.l D0,A0
00031180 <AmiBlitz3.ab2@23479>   MOVE.w $C(A0),D0
00031184 <AmiBlitz3.ab2@23480>   ANDI.w #$FF,D0
00031186 <AmiBlitz3.ab2@23481>   CMP.w D0,D1
0003118A <AmiBlitz3.ab2@23482>    BNE.w JUMP_badenderr
0003118E <AmiBlitz3.ab2@23485>   CMP.w #$1,D1
00031192 <AmiBlitz3.ab2@23486>   BNE.w JL_0_D7D8
00031196 <AmiBlitz3.ab2@23487>   MOVE.w #$6000,D1
0003119C <AmiBlitz3.ab2@23490>     TST.b fast
000311A0 <AmiBlitz3.ab2@23491>     BEQ 'l1
000311A6 <AmiBlitz3.ab2@23492>     OR.l #$ff,d1
000311AA <AmiBlitz3.ab2@23496>   BSR.w writeword
000311B0 <AmiBlitz3.ab2@23497>   MOVEA.l destpointer,A1
000311B4 <AmiBlitz3.ab2@23498>   MOVE.l $4(A0),D1
000311B6 <AmiBlitz3.ab2@23499>   SUB.l A1,D1
000311BC <AmiBlitz3.ab2@23502>     TST.b fast
000311C0 <AmiBlitz3.ab2@23503>     BEQ 'l2
000311C4 <AmiBlitz3.ab2@23504>     BSR writelong
000311C8 <AmiBlitz3.ab2@23505>   BRA JL_0_D7D8
000311CC <AmiBlitz3.ab2@23509>   BSR.w writeword
000311D0 <AmiBlitz3.ab2@23512>   MOVEA.l $8(A0),A1                                        ;write if branch destination
000311D6 <AmiBlitz3.ab2@23513>   MOVE.l destpointer,D1
000311D8 <AmiBlitz3.ab2@23514>   SUB.l A1,D1
000311DE <AmiBlitz3.ab2@23517>     TST.b fast
000311E2 <AmiBlitz3.ab2@23518>     BEQ 'l1
000311E4 <AmiBlitz3.ab2@23519>     ADDQ.l #4,D1
000311EA <AmiBlitz3.ab2@23520>     MOVE.w dontwrite,D0
000311EE <AmiBlitz3.ab2@23521>     BNE.w JL_0_D7FE
000311F2 <AmiBlitz3.ab2@23522>     MOVE.l d1,-$4(a1)
000311F6 <AmiBlitz3.ab2@23523>   BRA JL_0_D7FE
000311F8 <AmiBlitz3.ab2@23527>   ADDQ.l #2,d1
000311FE <AmiBlitz3.ab2@23528>   TST.w dontwrite
00031202 <AmiBlitz3.ab2@23529>   BNE JL_0_D7FE
00031208 <AmiBlitz3.ab2@23530>   CMP.l #MinWordSgnd,D1
0003120C <AmiBlitz3.ab2@23531>   BCC.w JUMP_bigiferr
00031210 <AmiBlitz3.ab2@23532>   MOVE.w D1,-$2(A1)
00031212 <AmiBlitz3.ab2@23535> RTS
00031218 <AmiBlitz3.ab2@23538> JMP bigiferr
00031222 <AmiBlitz3.ab2@23543>   MOVE.w oldqflag,instringon
00031228 <AmiBlitz3.ab2@23544>   MOVEA.l lastsourcepos,A5
0003122A <AmiBlitz3.ab2@23547>   MOVEQ.l #$01,D1
0003122E <AmiBlitz3.ab2@23548> BRA.w JL_0_D810
00031238 <AmiBlitz3.ab2@23552>   MOVE.w oldqflag,instringon
0003123E <AmiBlitz3.ab2@23553>   MOVEA.l lastsourcepos,A5
00031240 <AmiBlitz3.ab2@23556>   MOVEQ.l #$00,D1
00031244 <AmiBlitz3.ab2@23559>   BSR.w JL_0_D79E
00031248 <AmiBlitz3.ab2@23560>   BSR.w AJL_0_D81C
0003124E <AmiBlitz3.ab2@23561> JMP get1bytemain
00031254 <AmiBlitz3.ab2@23564>   MOVE.l (A0),firstiff
00031256 <AmiBlitz3.ab2@23565>   MOVEA.l A0,A1
00031258 <AmiBlitz3.ab2@23566>   MOVEQ.l #$0E,D0
0003125E <AmiBlitz3.ab2@23567>   MOVEA.l _execbase,A6
00031264 <AmiBlitz3.ab2@23568>   MOVE.l mempool,a0
00031268 <AmiBlitz3.ab2@23569> JMP _FreePooled(A6)
0003126E <AmiBlitz3.ab2@23573>   JSR get1bytemain
00031272 <AmiBlitz3.ab2@23576>   BEQ.w JL_0_D980
0003127A <AmiBlitz3.ab2@23577>   CMP.l #"noa7",-1(a5)
0003127E <AmiBlitz3.ab2@23578>   BNE 'l1
00031284 <AmiBlitz3.ab2@23579>   JSR get1bytemain
0003128A <AmiBlitz3.ab2@23580>   JSR get1bytemain
00031290 <AmiBlitz3.ab2@23581>   JSR get1bytemain
00031298 <AmiBlitz3.ab2@23582>   MOVE.w #$3a,lastchar
0003129C <AmiBlitz3.ab2@23583> BRA JL_0_D980
000312A2 <AmiBlitz3.ab2@23586>   CMP.w #"d0",-1(a5)
000312A6 <AmiBlitz3.ab2@23587>   BNE 'l2
000312AE <AmiBlitz3.ab2@23588>   MOVE.b #1,returncode
000312B4 <AmiBlitz3.ab2@23589>   CLR.w lastchar
000312B8 <AmiBlitz3.ab2@23590> BRA JL_0_D980
000312BC <AmiBlitz3.ab2@23593>   CMP.w #$80d7,d0
000312C0 <AmiBlitz3.ab2@23594>   BNE JL_0_D836
000312C6 <AmiBlitz3.ab2@23595>   JSR skiprest
000312C8 <AmiBlitz3.ab2@23596> RTS
000312CC <AmiBlitz3.ab2@23599>   BSR.w JL_0_D844
000312D2 <AmiBlitz3.ab2@23600>   JSR reget
000312D6 <AmiBlitz3.ab2@23601>   BNE.w JL_0_D836
000312D8 <AmiBlitz3.ab2@23602> RTS
000312DC <AmiBlitz3.ab2@23605>   CMP.w #-$7FFF,D0
000312E0 <AmiBlitz3.ab2@23606>    BNE.w JL_0_D87E
000312E6 <AmiBlitz3.ab2@23607>   MOVE.w linemode,D1
000312EA <AmiBlitz3.ab2@23608>    BNE.w JUMP_modeerr
000312F0 <AmiBlitz3.ab2@23609>   ADDQ.w #1,typelen
000312F8 <AmiBlitz3.ab2@23610>   BCLR #$0,typelen+1
000312FE <AmiBlitz3.ab2@23611>   MOVEA.l thistype,A0
00031306 <AmiBlitz3.ab2@23612>   MOVE.w typelen,$8(A0)
0003130E <AmiBlitz3.ab2@23613>   MOVE.w #$FFFF,linemode
00031314 <AmiBlitz3.ab2@23614> JMP get1bytemain
0003131A <AmiBlitz3.ab2@23617> JMP modeerr
0003131E <AmiBlitz3.ab2@23620>   CMP.w #-$7FF5,D0
00031322 <AmiBlitz3.ab2@23621>    BEQ.w JL_0_D80E
00031326 <AmiBlitz3.ab2@23622>   CMP.w #-$7FF4,D0
0003132A <AmiBlitz3.ab2@23623>    BEQ.w JL_0_D804
0003132E <AmiBlitz3.ab2@23624>   CMP.w #-$7FF8,D0
00031332 <AmiBlitz3.ab2@23625>    BNE.w JL_0_D89A
00031336 <AmiBlitz3.ab2@23628> BRA.w JL_0_D9E8
0003133C <AmiBlitz3.ab2@23631> JMP interr3
00031340 <AmiBlitz3.ab2@23634>   CMP.w #-$7FF7,D0
00031344 <AmiBlitz3.ab2@23635>    BNE.w JL_0_D8C8
0003134A <AmiBlitz3.ab2@23636>    TST.b fpu
0003134E <AmiBlitz3.ab2@23637>    BEQ 'nof
00031354 <AmiBlitz3.ab2@23638>    MOVEA.l currentfunction,A0
0003135A <AmiBlitz3.ab2@23639>    CMP.l #0,a0
0003135E <AmiBlitz3.ab2@23640>    BEQ 'nof
00031364 <AmiBlitz3.ab2@23641>    CMP.b #5,$5(a0)
00031368 <AmiBlitz3.ab2@23642>     BNE 'nof
0003136E <AmiBlitz3.ab2@23643>    MOVE.l #$f23c5000,d1
00031372 <AmiBlitz3.ab2@23644>    BSR writelong
00031376 <AmiBlitz3.ab2@23645>    MOVE.w #0,d1
0003137A <AmiBlitz3.ab2@23646>    BSR writeword
0003137E <AmiBlitz3.ab2@23649>   MOVE.w #$7000,D1                                         ;end function moveq #0,d0
00031382 <AmiBlitz3.ab2@23650>    BSR.w writeword
00031388 <AmiBlitz3.ab2@23651>   MOVEA.l currentfunction,A0
0003138E <AmiBlitz3.ab2@23652>   CMP.l #0,a0
00031392 <AmiBlitz3.ab2@23653>   BEQ JL_0_D896
00031398 <AmiBlitz3.ab2@23654>   MOVE.l destpointer,d1
0003139C <AmiBlitz3.ab2@23655>   SUB.l $e(a0),d1
000313A0 <AmiBlitz3.ab2@23656>   MOVE.l d1,isfunc+1(a0)
000313A6 <AmiBlitz3.ab2@23657>   CMPI.b #$7,$5(A0)
000313AA <AmiBlitz3.ab2@23658>    BNE.w JL_0_D896
000313B0 <AmiBlitz3.ab2@23659>   MOVE.w putstlen,D1
000313B4 <AmiBlitz3.ab2@23660>    BSR.w writeword
000313B8 <AmiBlitz3.ab2@23661> BRA.w JL_0_D896
000313BE <AmiBlitz3.ab2@23664> JMP interr
000313C2 <AmiBlitz3.ab2@23667>  CMP.w #-$7FD0,D0
000313C6 <AmiBlitz3.ab2@23668>    BNE.w JL_0_D966
000313CC <AmiBlitz3.ab2@23669>   MOVE.w proceduremode,D1
000313D0 <AmiBlitz3.ab2@23670>    BNE.w JUMP_interr3
000313D6 <AmiBlitz3.ab2@23671>   TST.b debugmode
000313DA <AmiBlitz3.ab2@23672>    BEQ.w JL_0_D90A
000313DC <AmiBlitz3.ab2@23673>   MOVEQ.l #$03,D1
000313E2 <AmiBlitz3.ab2@23674>    JSR writetrap
000313E8 <AmiBlitz3.ab2@23675>   MOVE.w dontwrite,D1
000313EC <AmiBlitz3.ab2@23676>    BNE.w JL_0_D90A
000313F2 <AmiBlitz3.ab2@23677>   MOVEA.l intcleanat,A0
000313F8 <AmiBlitz3.ab2@23678>   MOVE.l destpointer,(A0)
000313FC <AmiBlitz3.ab2@23679>   MOVE.w #$C30C,D1
00031400 <AmiBlitz3.ab2@23680>    BSR.w Atokejsr
00031406 <AmiBlitz3.ab2@23683>   MOVE.w intstring,D1
0003140A <AmiBlitz3.ab2@23684>    BEQ.w JUMP_interr
0003140E <AmiBlitz3.ab2@23685>    BPL.w JL_0_D934
00031414 <AmiBlitz3.ab2@23686>   MOVE.w intlevel,D1
00031418 <AmiBlitz3.ab2@23687>   ORI.w #$7200,D1
0003141C <AmiBlitz3.ab2@23688>    BSR.w writeword
00031420 <AmiBlitz3.ab2@23689>   MOVE.w #$C103,D1
00031424 <AmiBlitz3.ab2@23690>    BSR.w Atokejsr
0003142A <AmiBlitz3.ab2@23691>   CLR.w intlevel
00031430 <AmiBlitz3.ab2@23694>  CLR.w intstring
00031436 <AmiBlitz3.ab2@23695>   MOVE.l intfin,D1
0003143A <AmiBlitz3.ab2@23696>    BSR.w writelong
00031440 <AmiBlitz3.ab2@23697>   MOVE.l #$70004E75,D1
00031444 <AmiBlitz3.ab2@23698>    BSR.w writelong
0003144A <AmiBlitz3.ab2@23699>   MOVE.w dontwrite,D1
0003144E <AmiBlitz3.ab2@23700>    BNE.w JL_0_D962
00031454 <AmiBlitz3.ab2@23701>   MOVEA.l intjmpat,A0
00031458 <AmiBlitz3.ab2@23702>   MOVE.l destpointer(PC),(A0)
0003145E <AmiBlitz3.ab2@23705> JMP get1bytemain
00031462 <AmiBlitz3.ab2@23709>   CMP.w #-$7FF2,D0
00031466 <AmiBlitz3.ab2@23710>    BEQ.w doendsel
0003146A <AmiBlitz3.ab2@23711>   CMP.w #-$7F4C,D0
0003146E <AmiBlitz3.ab2@23712>    BNE.w JL_0_D97C
00031474 <AmiBlitz3.ab2@23713> JMP doendseterr
0003147A <AmiBlitz3.ab2@23717> JMP syntaxerr
00031480 <AmiBlitz3.ab2@23721>   TST.w dirmode
00031484 <AmiBlitz3.ab2@23722>   BNE.w JUMP_baddirerr
00031488 <AmiBlitz3.ab2@23723>   MOVE.w #$C800,D1
0003148E <AmiBlitz3.ab2@23724>   JSR Atokejsr                                            ;end
00031496 <AmiBlitz3.ab2@23725>   CMP.l #"noa7",-4(a5)
0003149A <AmiBlitz3.ab2@23726>   BNE 'l10
000314A0 <AmiBlitz3.ab2@23727>   TST.w dontwrite
000314A4 <AmiBlitz3.ab2@23728>   BNE 'l10
000314AA <AmiBlitz3.ab2@23729>   MOVE.l destpointer,d1
000314AC <AmiBlitz3.ab2@23730>   SUBQ.l #4,d1
000314AE <AmiBlitz3.ab2@23731>   MOVE.l a0,-(a7)
000314B0 <AmiBlitz3.ab2@23732>   MOVE.l d1,a0
000314B2 <AmiBlitz3.ab2@23733>   MOVE.l (a0),a0
000314B8 <AmiBlitz3.ab2@23734>   MOVE.l #$60000002,(a0)+
000314BC <AmiBlitz3.ab2@23735>   MOVE.w #$588f,(a0)
000314BE <AmiBlitz3.ab2@23736>   MOVE.l (a7)+,a0
000314C0 <AmiBlitz3.ab2@23739> RTS
000314C6 <AmiBlitz3.ab2@23743>   TST.w dirmode                                            ;stop
000314CA <AmiBlitz3.ab2@23744>   BNE.w JUMP_baddirerr
000314CC <AmiBlitz3.ab2@23745>   MOVE.w d0,d1
000314D0 <AmiBlitz3.ab2@23746>   BEQ 'l10
000314D4 <AmiBlitz3.ab2@23747>   CMP.b #$3a,d0
000314D8 <AmiBlitz3.ab2@23748>   BEQ 'l10
000314DE <AmiBlitz3.ab2@23749>   JSR get1bytemain
000314E4 <AmiBlitz3.ab2@23752>   TST.b debugmode
000314E8 <AmiBlitz3.ab2@23753>   BEQ.w newstop
000314EC <AmiBlitz3.ab2@23754>   MOVE.w #$D501,D1
000314F0 <AmiBlitz3.ab2@23755> BRA.w Atokejsr
000314F2 <AmiBlitz3.ab2@23759>     RTS
000314F4 <AmiBlitz3.ab2@23761>   MOVE.w d1,d0
000314F8 <AmiBlitz3.ab2@23762>   BEQ 'l10
000314FC <AmiBlitz3.ab2@23763>   CMP.b #$3a,d0
00031500 <AmiBlitz3.ab2@23764>   BEQ 'l10
00031504 <AmiBlitz3.ab2@23765>   SUB.b #$30,d0
00031508 <AmiBlitz3.ab2@23766>   MOVE.w #$4e40,d1
0003150C <AmiBlitz3.ab2@23767> BRA 'l11
00031510 <AmiBlitz3.ab2@23770>   MOVE.w #$4e4a,d1
00031514 <AmiBlitz3.ab2@23771> BRA writeword
00031516 <AmiBlitz3.ab2@23774>   ADD.b d0,d1
0003151A <AmiBlitz3.ab2@23775> BRA writeword
00031520 <AmiBlitz3.ab2@23779> JMP badconterr
00031524 <AmiBlitz3.ab2@23782>   MOVE.w #$4E71,D1
00031528 <AmiBlitz3.ab2@23783> BRA.w writeword
0003152E <AmiBlitz3.ab2@23786>   MOVEA.l firstfor,A2
00031534 <AmiBlitz3.ab2@23787>   CLR.l firstfor
0003153A <AmiBlitz3.ab2@23788>   MOVEA.l _execbase,A6
0003153E <AmiBlitz3.ab2@23791>   CMPA.w #$0,A2
00031542 <AmiBlitz3.ab2@23792>   BEQ.w JL_0_D9E6
00031544 <AmiBlitz3.ab2@23793>   MOVEA.l A2,A1
00031546 <AmiBlitz3.ab2@23794>   MOVEA.l (A1),A2
00031548 <AmiBlitz3.ab2@23795>   MOVEQ.l #$00,D0
0003154E <AmiBlitz3.ab2@23796>   MOVE.l mempool2,a0
00031552 <AmiBlitz3.ab2@23797>   MOVE.b $10(A1),D0
00031556 <AmiBlitz3.ab2@23798>   JSR _FreePooled(A6)                                      ;freememfor_error
0003155A <AmiBlitz3.ab2@23799> BRA.w JL_0_D9CC
0003155C <AmiBlitz3.ab2@23802> RTS
00031562 <AmiBlitz3.ab2@23806> JMP badpenderr
00031568 <AmiBlitz3.ab2@23812>   MOVE.w proceduremode,D1
0003156C <AmiBlitz3.ab2@23813>    BEQ.w JUMP_badpenderr
00031572 <AmiBlitz3.ab2@23815>   MOVE.w dontwrite,D1
00031576 <AmiBlitz3.ab2@23816>    BNE.w JL_0_DA1A
0003157C <AmiBlitz3.ab2@23817>   MOVEA.l firstpend,A2
00031580 <AmiBlitz3.ab2@23820>   CMPA.w #$0,A2
00031584 <AmiBlitz3.ab2@23821>    BEQ.w JL_0_DA1A
00031588 <AmiBlitz3.ab2@23822>   MOVEA.l $4(A2),A0
0003158E <AmiBlitz3.ab2@23823>   MOVE.l destpointer,(A0)
00031590 <AmiBlitz3.ab2@23824>   MOVEA.l (A2),A2
00031594 <AmiBlitz3.ab2@23825> BRA.w JL_0_DA02
0003159A <AmiBlitz3.ab2@23828>   TST.b debugmode
0003159E <AmiBlitz3.ab2@23829>    BEQ.b JL_0_DA2A
000315A0 <AmiBlitz3.ab2@23830>   MOVEQ.l #$05,D1
000315A6 <AmiBlitz3.ab2@23831>   JSR writetrap
000315AC <AmiBlitz3.ab2@23834>   MOVEA.l firstlocal,A2                                    ;firstlocal
000315B2 <AmiBlitz3.ab2@23835>   JSR calcstatic2b                                           ;calcstatic
000315B8 <AmiBlitz3.ab2@23836>   MOVEA.l currentfunction,A0
000315BE <AmiBlitz3.ab2@23837>   MOVE.l destpointer,d1
000315C2 <AmiBlitz3.ab2@23838>   SUB.l $e(a0),d1
000315C6 <AmiBlitz3.ab2@23839>   MOVE.l d1,isfunc+1(a0)                                   ;store function size
000315CA <AmiBlitz3.ab2@23840>   MOVE.w D4,$8(A0)                                         ;set if memalloc need
000315D0 <AmiBlitz3.ab2@23841>   MOVE.l D3,locdatast
000315D6 <AmiBlitz3.ab2@23842>   MOVEA.l tempvm,A1
000315DC <AmiBlitz3.ab2@23843>  CLR.b infunctioncode
000315E2 <AmiBlitz3.ab2@23844>   MOVE.l firstiffstore,d1
000315E8 <AmiBlitz3.ab2@23845>   CMP.l firstiff,d1
000315EC <AmiBlitz3.ab2@23846>   BNE JUMP_noenderr
000315F0 <AmiBlitz3.ab2@23847>   TST.w $C(A1)                                             ;dim
000315F4 <AmiBlitz3.ab2@23848>    BPL.w JL_0_DA64
000315FA <AmiBlitz3.ab2@23849>  BSET #$7,$8(A0)
000315FE <AmiBlitz3.ab2@23850>   MOVE.w #$C005,D1
00031602 <AmiBlitz3.ab2@23851>    BSR.w tokejsr2                                          ;writefreememstatement
00031606 <AmiBlitz3.ab2@23852> BRA.w JL_0_DA6C
0003160C <AmiBlitz3.ab2@23855> JMP noenderr
00031614 <AmiBlitz3.ab2@23858>   MOVE.w memlibstat,$C(A1)
0003161A <AmiBlitz3.ab2@23861>   MOVEA.l currentfunction,A0
0003161E <AmiBlitz3.ab2@23862>   MOVE.l $E(A0),-(A7)
00031626 <AmiBlitz3.ab2@23863>   MOVE.w locvaroff,$6(A0)
0003162C <AmiBlitz3.ab2@23864>   BCLR #$1,$7(A0)
00031632 <AmiBlitz3.ab2@23865>   BCLR #$0,$7(A0)
00031638 <AmiBlitz3.ab2@23866>   CMPI.b #$7,$5(A0)
0003163C <AmiBlitz3.ab2@23867>    BNE.w JL_0_DA9E
00031642 <AmiBlitz3.ab2@23868>   MOVE.w getstlen,D1
00031646 <AmiBlitz3.ab2@23869>    BSR.w writeword
0003164A <AmiBlitz3.ab2@23872>   TST.w $6(A0)
0003164E <AmiBlitz3.ab2@23873>    BEQ.w JL_0_DAB8
00031652 <AmiBlitz3.ab2@23874>   MOVE.w #$FC7B,D1
00031658 <AmiBlitz3.ab2@23875>    JSR uselib
0003165E <AmiBlitz3.ab2@23876>   MOVE.w unlinka4,D1
00031662 <AmiBlitz3.ab2@23877>    BSR.w writeword
00031668 <AmiBlitz3.ab2@23880>   MOVEA.l currentfunction,A0
0003166A <AmiBlitz3.ab2@23881>   MOVEQ.l #$00,D1
0003166E <AmiBlitz3.ab2@23882>   MOVE.b $4(A0),D1
00031670 <AmiBlitz3.ab2@23883>   LSR.w #4,D1
00031674 <AmiBlitz3.ab2@23884>    BEQ.w JL_0_DB24
00031676 <AmiBlitz3.ab2@23886>      LSL.w #1,d1
0003167A <AmiBlitz3.ab2@23888>   CMP.w #$1,D1
0003167E <AmiBlitz3.ab2@23889>    BNE.w JL_0_DAE0
00031684 <AmiBlitz3.ab2@23890>   MOVE.w fix1,D1
00031688 <AmiBlitz3.ab2@23891>    BSR.w writeword
0003168C <AmiBlitz3.ab2@23892> BRA.w JL_0_DB24
0003168E <AmiBlitz3.ab2@23895>   LSL.w #2,D1
00031690 <AmiBlitz3.ab2@23896>   MOVE.w D1,-(A7)
00031696 <AmiBlitz3.ab2@23897>   MOVE.w D1,moverts+2
0003169C <AmiBlitz3.ab2@23898>   MOVE.l moverts,D1
000316A2 <AmiBlitz3.ab2@23899>    JSR writelong
000316A4 <AmiBlitz3.ab2@23900>   MOVE.w (A7)+,D1
000316A8 <AmiBlitz3.ab2@23901>   CMP.w #$8,D1
000316AC <AmiBlitz3.ab2@23902>    BHI.w JL_0_DB14
000316B0 <AmiBlitz3.ab2@23903>   ANDI.w #$7,D1
000316B2 <AmiBlitz3.ab2@23904>   LSL.w #8,D1
000316B4 <AmiBlitz3.ab2@23905>   LSL.w #1,D1
000316BA <AmiBlitz3.ab2@23906>   OR.w fixq,D1
000316C0 <AmiBlitz3.ab2@23907>    JSR writeword
000316C4 <AmiBlitz3.ab2@23908> BRA.w JL_0_DB24
000316CA <AmiBlitz3.ab2@23912>    MOVE.w D1,fixstack+2
000316D0 <AmiBlitz3.ab2@23913>   MOVE.l fixstack,D1
000316D6 <AmiBlitz3.ab2@23914>    JSR writelong
000316DA <AmiBlitz3.ab2@23917>    BSR.w JL_0_D2CA
000316DE <AmiBlitz3.ab2@23918>    BSR.w JL_0_D4F8
000316E0 <AmiBlitz3.ab2@23919>   MOVEA.l (A7)+,A0
000316E6 <AmiBlitz3.ab2@23920>   MOVE.w dontwrite,D1
000316EA <AmiBlitz3.ab2@23921>    BNE.w JL_0_DB3E
000316F0 <AmiBlitz3.ab2@23922>   MOVE.l destpointer,-(A0)
000316F6 <AmiBlitz3.ab2@23925>   CLR.w proceduremode
000316FC <AmiBlitz3.ab2@23926>   CLR.l currentfunction
00031702 <AmiBlitz3.ab2@23927>   CLR.w procnum
00031706 <AmiBlitz3.ab2@23928>    BSR.w JL_0_DB5C
0003170C <AmiBlitz3.ab2@23929>    JSR freepends
00031712 <AmiBlitz3.ab2@23930> JMP get1bytemain
00031714 <AmiBlitz3.ab2@23933>   MOVEQ.l #$0C,D0
00031716 <AmiBlitz3.ab2@23934>   MOVEQ.l #$01,D1
0003171C <AmiBlitz3.ab2@23935>   MOVEA.l _execbase,A6
00031722 <AmiBlitz3.ab2@23937>   MOVE.l mempool,a0
00031726 <AmiBlitz3.ab2@23938>   JSR _AllocPooled(a6)
00031728 <AmiBlitz3.ab2@23939>   MOVEA.l D0,A0
0003172E <AmiBlitz3.ab2@23940>   MOVE.l alllocals,(A0)
00031734 <AmiBlitz3.ab2@23941>   MOVE.l A0,alllocals
0003173A <AmiBlitz3.ab2@23942>   MOVE.l firstlocal,D0
00031740 <AmiBlitz3.ab2@23943>   CLR.l firstlocal
00031744 <AmiBlitz3.ab2@23944>   MOVE.l D0,$4(A0)
0003174A <AmiBlitz3.ab2@23945>   MOVE.l firstglob,D1
00031750 <AmiBlitz3.ab2@23946>   CLR.l firstglob
00031754 <AmiBlitz3.ab2@23947>   MOVE.l D1,$8(A0)
0003175A <AmiBlitz3.ab2@23948>   TST.b debugmode
0003175E <AmiBlitz3.ab2@23949>    BEQ.b JL_0_DBB0
00031764 <AmiBlitz3.ab2@23950>   TST.w dontwrite
00031768 <AmiBlitz3.ab2@23951>    BNE.b JL_0_DBB0
0003176C <AmiBlitz3.ab2@23952>   MOVEA.l proclocals(PC),A0
0003176E <AmiBlitz3.ab2@23953>   MOVE.l D0,(A0)+
00031770 <AmiBlitz3.ab2@23954>   MOVE.l D1,(A0)
00031772 <AmiBlitz3.ab2@23957> RTS
00031778 <AmiBlitz3.ab2@23960> JMP baddirerr
0003177E <AmiBlitz3.ab2@23964>   TST.w dirmode
00031782 <AmiBlitz3.ab2@23965>    BNE.w JUMP_baddirerr
00031788 <AmiBlitz3.ab2@23966>   MOVE.l firstfor,D1
0003178C <AmiBlitz3.ab2@23967>    BEQ.w JUMP_noforerr
00031792 <AmiBlitz3.ab2@23968>   JSR reget
00031796 <AmiBlitz3.ab2@23969>    BEQ.w JL_0_DC18
0003179A <AmiBlitz3.ab2@23972>   BSR.w getparameter
0003179E <AmiBlitz3.ab2@23973>   MOVEA.l firstfor(PC),A2
000317A0 <AmiBlitz3.ab2@23974>   MOVEQ.l #$00,D1
000317A4 <AmiBlitz3.ab2@23975>   MOVE.b $10(A2),D1
000317A8 <AmiBlitz3.ab2@23976>   SUBI.w #$12,D1
000317AA <AmiBlitz3.ab2@23977>   CMP.w D1,D2
000317AE <AmiBlitz3.ab2@23978>    BNE.w JUMP_noforerr
000317B2 <AmiBlitz3.ab2@23979>   LEA ptr_parameterstore(PC),A0
000317B6 <AmiBlitz3.ab2@23980>   LEA $11(A2),A1
000317B8 <AmiBlitz3.ab2@23981>   SUBQ.w #1,D2
000317BA <AmiBlitz3.ab2@23984>     CMPM.b (A0)+,(A1)+
000317BE <AmiBlitz3.ab2@23985>     BNE.w JUMP_noforerr
000317C2 <AmiBlitz3.ab2@23986>   DBF D2,JL_0_DBF0
000317C6 <AmiBlitz3.ab2@23988>    BSR.w JL_0_DC1A
000317CC <AmiBlitz3.ab2@23989>    JSR reget
000317D0 <AmiBlitz3.ab2@23990>    BEQ.w JL_0_DC16
000317D4 <AmiBlitz3.ab2@23991>   CMP.w #$2C,D0
000317D8 <AmiBlitz3.ab2@23992>    BNE.w JUMP_syntaxerr
000317DE <AmiBlitz3.ab2@23993>    JSR get1bytemain
000317E2 <AmiBlitz3.ab2@23994> BRA.w JL_0_DBCE
000317E8 <AmiBlitz3.ab2@23997> JMP noforerr
000317EA <AmiBlitz3.ab2@24000> RTS
000317EE <AmiBlitz3.ab2@24004>   MOVE.l 8(a7),a2
000317F2 <AmiBlitz3.ab2@24005>   Dc.l  $f2124400                                          ;fmove.s (a2),fp0
000317F6 <AmiBlitz3.ab2@24006>   Dc.l  $F2174422                                          ;fadd.s (a7),fp0
000317FA <AmiBlitz3.ab2@24007>   Dc.l  $F2126400                                          ;fmove.s fp0,(a2)
000317FC <AmiBlitz3.ab2@24011>   MOVEA.l D1,A2
00031802 <AmiBlitz3.ab2@24014>   JSR popnext                                           ;error checking for next.
00031806 <AmiBlitz3.ab2@24015>   MOVE.w $C(A2),D0
0003180C <AmiBlitz3.ab2@24016>   LEA nextb,A0
00031812 <AmiBlitz3.ab2@24017>   LEA nextbf,A1
00031816 <AmiBlitz3.ab2@24018>   CMP.w #$1,D0
0003181A <AmiBlitz3.ab2@24019>    BEQ.w JL_0_DC74
00031820 <AmiBlitz3.ab2@24020>   LEA nextw,A0
00031826 <AmiBlitz3.ab2@24021>   LEA nextwf,A1
0003182A <AmiBlitz3.ab2@24022>   CMP.w #$2,D0
0003182E <AmiBlitz3.ab2@24023>    BEQ.w JL_0_DC74
00031834 <AmiBlitz3.ab2@24024>   LEA nextl,A0
0003183A <AmiBlitz3.ab2@24025>   LEA nextlf,A1
0003183E <AmiBlitz3.ab2@24026>   CMP.w #$5,D0
00031842 <AmiBlitz3.ab2@24027>    BNE.w JL_0_DC74
00031848 <AmiBlitz3.ab2@24028>    TST.b fpu
0003184C <AmiBlitz3.ab2@24029>    BEQ 'old
00031852 <AmiBlitz3.ab2@24030>    LEA fpu2dats,a0                                         ;fpu next code
00031858 <AmiBlitz3.ab2@24031>    LEA fpu2date,a1
0003185C <AmiBlitz3.ab2@24032> BRA JL_0_DC74
00031860 <AmiBlitz3.ab2@24035>   MOVE.w #$C900,D1
00031864 <AmiBlitz3.ab2@24036>    BSR.w Atokejsr
0003186A <AmiBlitz3.ab2@24037>   LEA nextf,A0
00031870 <AmiBlitz3.ab2@24038>   LEA nextff,A1
00031876 <AmiBlitz3.ab2@24041>   JSR pokecode
0003187C <AmiBlitz3.ab2@24042>     TST.b fast                                             ;fast for next deactivate
00031880 <AmiBlitz3.ab2@24043> BRA 'l1
00031886 <AmiBlitz3.ab2@24045>     TST.b onestep
0003188A <AmiBlitz3.ab2@24046>     BEQ 'l1
00031890 <AmiBlitz3.ab2@24047>     CLR.b onestep
00031896 <AmiBlitz3.ab2@24048>     SUBQ.l #4,destpointer
0003189A <AmiBlitz3.ab2@24049>     MOVE.w #$5292,d1
000318A0 <AmiBlitz3.ab2@24050>     JSR writeword
000318A4 <AmiBlitz3.ab2@24053>   MOVE.l JL_0_DCF4(PC),D1
000318AA <AmiBlitz3.ab2@24054>    JSR writelong
000318B0 <AmiBlitz3.ab2@24055>   MOVEA.l firstfor,A2
000318B6 <AmiBlitz3.ab2@24056>   MOVE.l (A2),firstfor
000318BA <AmiBlitz3.ab2@24057>   MOVEA.l $8(A2),A0
000318C0 <AmiBlitz3.ab2@24058>   MOVEA.l destpointer,A1
000318C2 <AmiBlitz3.ab2@24059>   MOVE.l A1,D1
000318C4 <AmiBlitz3.ab2@24060>   SUB.l A0,D1
000318C6 <AmiBlitz3.ab2@24061>   ADDQ.l #2,D1
000318CC <AmiBlitz3.ab2@24062>   CMP.l #MinWordSgnd,D1
000318D0 <AmiBlitz3.ab2@24063>    BCC.w JUMP_bigforerr
000318D6 <AmiBlitz3.ab2@24064>   TST.w dontwrite
000318DA <AmiBlitz3.ab2@24065>    BNE.w JL_0_DCB4
000318DE <AmiBlitz3.ab2@24066>   MOVE.w D1,-$2(A0)
000318E0 <AmiBlitz3.ab2@24069>   MOVE.l A1,D1
000318E4 <AmiBlitz3.ab2@24070>   SUB.l $4(A2),D1
000318E6 <AmiBlitz3.ab2@24071>   SUBQ.l #6,D1
000318EC <AmiBlitz3.ab2@24072>   CMP.l #MinWordSgnd,D1
000318F0 <AmiBlitz3.ab2@24073>    BCC.w JUMP_bigforerr
000318F6 <AmiBlitz3.ab2@24074>   TST.w dontwrite
000318FA <AmiBlitz3.ab2@24075>    BNE.w JL_0_DCD6
000318FC <AmiBlitz3.ab2@24076>   NEG.w D1
00031900 <AmiBlitz3.ab2@24077>   MOVE.w D1,-$2(A1)
00031906 <AmiBlitz3.ab2@24080>   JSR popnext3
0003190C <AmiBlitz3.ab2@24081>   MOVEA.l _execbase,A6
0003190E <AmiBlitz3.ab2@24082>   MOVEA.l A2,A1
00031910 <AmiBlitz3.ab2@24083>   MOVEQ.l #$00,D0
00031914 <AmiBlitz3.ab2@24084>   MOVE.b $10(A1),D0
0003191A <AmiBlitz3.ab2@24085>   MOVE.l mempool2,a0
0003191E <AmiBlitz3.ab2@24086>   JSR _FreePooled(A6)
00031924 <AmiBlitz3.ab2@24087> JMP reget
0003192A <AmiBlitz3.ab2@24090> JMP notallowd
00031930 <AmiBlitz3.ab2@24093> JMP bigforerr
00031934 <AmiBlitz3.ab2@24100>   MOVE.w #$664F,-(A7)
00031938 <AmiBlitz3.ab2@24103> BRA.w JL_0_DCF4
0003193E <AmiBlitz3.ab2@24106> JMP error_dublicate_for
00031942 <AmiBlitz3.ab2@24109> forlineat:   Ds.l 1
00031944 <AmiBlitz3.ab2@24110> fortemp:     Ds.w 1
0003194A <AmiBlitz3.ab2@24117>   CLR.l fp0addr
00031950 <AmiBlitz3.ab2@24118>   TST.w dirmode
00031954 <AmiBlitz3.ab2@24119>    BNE.w JUMP_baddirerr
0003195E <AmiBlitz3.ab2@24120>   MOVE.l linenumat,forlineat
00031964 <AmiBlitz3.ab2@24124>   MOVE.l A5,letstart
00031968 <AmiBlitz3.ab2@24125>   BSR.w getparameter
0003196E <AmiBlitz3.ab2@24126>   MOVE.w D2,fortemp
00031974 <AmiBlitz3.ab2@24127>   JSR findfor
00031978 <AmiBlitz3.ab2@24128>    BEQ.w JUMP_error_dublicate_for
0003197E <AmiBlitz3.ab2@24129>   LEA firstfor,A2
00031984 <AmiBlitz3.ab2@24130>   JSR addhere2
00031986 <AmiBlitz3.ab2@24131>   MOVE.l A2,-(A7)
0003198C <AmiBlitz3.ab2@24132>   TST.b debugmode
00031990 <AmiBlitz3.ab2@24133>    BEQ.b JL_0_DD4C
00031996 <AmiBlitz3.ab2@24134>   JSR chkstak
0003199C <AmiBlitz3.ab2@24135>   MOVE.l AJL_0_DCF0,D1
000319A2 <AmiBlitz3.ab2@24136>   JSR  writelong
000319A6 <AmiBlitz3.ab2@24139>   MOVE.w fortemp(PC),D2
000319AE <AmiBlitz3.ab2@24140>   MOVE.b #1,formode
000319B2 <AmiBlitz3.ab2@24141>   BSR.w AJL_0_DEA6                                         ;for get 1. value
000319B8 <AmiBlitz3.ab2@24142>   CLR.b formode
000319BC <AmiBlitz3.ab2@24143>   CMP.w #-$7FE8,D0
000319C0 <AmiBlitz3.ab2@24144>    BNE.w JUMP_syntaxerr
000319C6 <AmiBlitz3.ab2@24145>   MOVE.w commode,D1
000319CA <AmiBlitz3.ab2@24146>    BNE.w JUMP_syntaxerr
000319CE <AmiBlitz3.ab2@24147>   CMP.b #$6,D2
000319D2 <AmiBlitz3.ab2@24148>    BCC.w JUMP_badforerr
000319D6 <AmiBlitz3.ab2@24149>   BTST #$F,D2
000319DA <AmiBlitz3.ab2@24150>    BNE.w JL_0_DD86
000319E0 <AmiBlitz3.ab2@24151>   MOVE.w leaamp,D1
000319E6 <AmiBlitz3.ab2@24152>   JSR pokewda5s
000319E8 <AmiBlitz3.ab2@24153>   MOVE.w D3,D1
000319EE <AmiBlitz3.ab2@24154>   JSR  writeword
000319F4 <AmiBlitz3.ab2@24157>   MOVE.w pushindex,D1
000319FA <AmiBlitz3.ab2@24158>   JSR  writeword
000319FE <AmiBlitz3.ab2@24159>   ANDI.w #$FF,D2
00031A00 <AmiBlitz3.ab2@24161>   MOVEA.l (A7),A1
00031A04 <AmiBlitz3.ab2@24162>   MOVE.w D2,$C(A1)
00031A06 <AmiBlitz3.ab2@24163>   MOVE.w D2,-(A7)
00031A0A <AmiBlitz3.ab2@24164>    BSR.w eval
00031A10 <AmiBlitz3.ab2@24165>    CLR.b onestep
00031A14 <AmiBlitz3.ab2@24166>    CMP.w #$8019,d0
00031A18 <AmiBlitz3.ab2@24167>    BEQ 'l1
00031A20 <AmiBlitz3.ab2@24168>    MOVE.b #1,onestep
00031A22 <AmiBlitz3.ab2@24171>   MOVE.w (A7),D2
00031A28 <AmiBlitz3.ab2@24172>   MOVE.w pushd0l,D1
00031A2C <AmiBlitz3.ab2@24173>   CMP.w #$3,D2
00031A30 <AmiBlitz3.ab2@24174>    BCC.w JL_0_DDB6
00031A36 <AmiBlitz3.ab2@24175>   MOVE.w pushd0wd,D1
00031A38 <AmiBlitz3.ab2@24178>    MOVE.w D1,-(A7)
00031A3E <AmiBlitz3.ab2@24179>    TST.b fpu
00031A42 <AmiBlitz3.ab2@24180>    BEQ 'old
00031A46 <AmiBlitz3.ab2@24181>    CMP.b #5,d2
00031A4A <AmiBlitz3.ab2@24182>    BNE 'old
00031A50 <AmiBlitz3.ab2@24183>    MOVE.l #$f2276400,d1
00031A56 <AmiBlitz3.ab2@24185>    JSR writelong
00031A5A <AmiBlitz3.ab2@24186> BRA 'weit
00031A60 <AmiBlitz3.ab2@24189>    JSR  writeword                                          ;fpu for end value
00031A64 <AmiBlitz3.ab2@24192>   CMP.w #-$7FE7,D0
00031A68 <AmiBlitz3.ab2@24193>    BNE.w JL_0_DDCC
00031A6C <AmiBlitz3.ab2@24194>    BSR.w eval
00031A72 <AmiBlitz3.ab2@24195>    TST.b fpu
00031A76 <AmiBlitz3.ab2@24196>    BEQ JL_0_DE0C
00031A7A <AmiBlitz3.ab2@24197>    CMP.b #5,d2
00031A7E <AmiBlitz3.ab2@24198>    BNE JL_0_DE0C
00031A84 <AmiBlitz3.ab2@24199>    MOVE.l #$f2276400,d1                                    ;write step <> 1
00031A8A <AmiBlitz3.ab2@24201>   JSR writelong
00031A8C <AmiBlitz3.ab2@24204>    MOVE.w (a7)+,d1
00031A90 <AmiBlitz3.ab2@24205> BRA fpur
00031A94 <AmiBlitz3.ab2@24208>   CMP.w #$4,D2
00031A98 <AmiBlitz3.ab2@24209>    BCC.w JL_0_DDE0
00031A9C <AmiBlitz3.ab2@24210>   MOVE.w #$7001,D1
00031AA2 <AmiBlitz3.ab2@24211>   JSR writeword
00031AA6 <AmiBlitz3.ab2@24212> BRA.w JL_0_DE0C
00031AAC <AmiBlitz3.ab2@24215> JMP badforerr
00031AB0 <AmiBlitz3.ab2@24218>   BNE.w JL_0_DDFA
00031AB4 <AmiBlitz3.ab2@24219>   MOVE.w #$7001,D1
00031ABA <AmiBlitz3.ab2@24220>   JSR writeword
00031AC0 <AmiBlitz3.ab2@24221>   MOVE.w swapd0,D1
00031AC6 <AmiBlitz3.ab2@24222>   JSR writeword
00031ACA <AmiBlitz3.ab2@24223> BRA.w JL_0_DE0C
00031AD0 <AmiBlitz3.ab2@24226>   TST.b fpu
00031AD4 <AmiBlitz3.ab2@24227>    BEQ 'old
00031AD8 <AmiBlitz3.ab2@24228>   CMP.b #5,d2
00031ADC <AmiBlitz3.ab2@24229>    BNE 'old
00031AE2 <AmiBlitz3.ab2@24230>   MOVE.l #$f23c5000,d1
00031AE8 <AmiBlitz3.ab2@24231>   JSR writelong
00031AEC <AmiBlitz3.ab2@24232>   MOVE.w #$1,d1
00031AF2 <AmiBlitz3.ab2@24233>   JSR writeword
00031AF8 <AmiBlitz3.ab2@24234>   MOVE.l #$f2276400,d1
00031AFE <AmiBlitz3.ab2@24235>   JSR writelong
00031B00 <AmiBlitz3.ab2@24236>   MOVE.w (a7)+,d1
00031B04 <AmiBlitz3.ab2@24237> BRA fpur
00031B08 <AmiBlitz3.ab2@24240>   MOVE.w #$203C,D1                                         ;write step 1
00031B0E <AmiBlitz3.ab2@24241>   JSR writeword
00031B14 <AmiBlitz3.ab2@24242>   MOVE.l #SA_BackFill,D1                                   ;#$80000041,d1 org source  ;ffp '1'
00031B1A <AmiBlitz3.ab2@24243>   JSR writelong
00031B1C <AmiBlitz3.ab2@24246>   MOVE.w (A7)+,D1
00031B22 <AmiBlitz3.ab2@24247>   JSR writeword                                            ;push step on stack
00031B24 <AmiBlitz3.ab2@24250>   MOVE.w (A7)+,D2
00031B26 <AmiBlitz3.ab2@24251>   MOVEA.l (A7),A1
00031B2E <AmiBlitz3.ab2@24252>   MOVE.l destpointer,$4(A1)
00031B34 <AmiBlitz3.ab2@24253>   LEA forcompb,A0
00031B3A <AmiBlitz3.ab2@24254>   LEA forcompbf,A1
00031B3E <AmiBlitz3.ab2@24255>   CMP.w #$1,D2
00031B42 <AmiBlitz3.ab2@24256>    BEQ.w JL_0_DE7E
00031B48 <AmiBlitz3.ab2@24257>   LEA forcompw,A0
00031B4E <AmiBlitz3.ab2@24258>   LEA forcompwf,A1
00031B52 <AmiBlitz3.ab2@24259>   CMP.w #$2,D2
00031B56 <AmiBlitz3.ab2@24260>    BEQ.w JL_0_DE7E
00031B5C <AmiBlitz3.ab2@24261>   LEA forcompl,A0
00031B62 <AmiBlitz3.ab2@24262>   LEA forcomplf,A1
00031B66 <AmiBlitz3.ab2@24263>   CMP.w #$5,D2
00031B6A <AmiBlitz3.ab2@24264>    BNE.w JL_0_DE7E
00031B70 <AmiBlitz3.ab2@24265>   TST.b fpu
00031B74 <AmiBlitz3.ab2@24266>    BEQ 'old
00031B7A <AmiBlitz3.ab2@24267>   LEA fpu_start,a0
00031B80 <AmiBlitz3.ab2@24268>   LEA fpu_end,a1
00031B86 <AmiBlitz3.ab2@24269>   JSR pokecode
00031B8A <AmiBlitz3.ab2@24270> BRA fpu3
00031B90 <AmiBlitz3.ab2@24273>   LEA forcompf,A0                                         ;
00031B96 <AmiBlitz3.ab2@24274>   LEA forcompff,A1
00031B9C <AmiBlitz3.ab2@24275>   JSR pokecode
00031BA0 <AmiBlitz3.ab2@24276>   MOVE.w #$C900,D1
00031BA4 <AmiBlitz3.ab2@24277>   BSR.w Atokejsr
00031BAA <AmiBlitz3.ab2@24278>   LEA forcompf2,A0
00031BB0 <AmiBlitz3.ab2@24279>   LEA forcompf2f,A1
00031BB6 <AmiBlitz3.ab2@24282>   JSR pokecode
00031BBC <AmiBlitz3.ab2@24283>   TST.b fast                                               ;fast for next
00031BC0 <AmiBlitz3.ab2@24284>    BEQ 's1
00031BC4 <AmiBlitz3.ab2@24285>   CMP.w #3,d2
00031BC8 <AmiBlitz3.ab2@24286>    BNE 's1
00031BCE <AmiBlitz3.ab2@24287>   TST.b onestep
00031BD2 <AmiBlitz3.ab2@24288>    BEQ 's1
00031BDC <AmiBlitz3.ab2@24289>   SUB.l #10,destpointer
00031BE0 <AmiBlitz3.ab2@24290>   MOVE.w #$b081,d1
00031BE6 <AmiBlitz3.ab2@24291>   JSR writeword
00031BEA <AmiBlitz3.ab2@24295>   MOVE.l thebgt(PC),D1
00031BF0 <AmiBlitz3.ab2@24296>   JSR writelong
00031BF2 <AmiBlitz3.ab2@24299>   MOVEA.l (A7)+,A1
00031BFA <AmiBlitz3.ab2@24300>   MOVE.l destpointer,$8(A1)
00031C00 <AmiBlitz3.ab2@24301> JMP reget
00031C04 <AmiBlitz3.ab2@24304>   MOVEA.l 8(a7),a2
00031C08 <AmiBlitz3.ab2@24305>   Dc.l $f2124400                                           ;fmove.s (a2),fp0
00031C0E <AmiBlitz3.ab2@24306>   fmove.s 4(a7),fp1
00031C12 <AmiBlitz3.ab2@24307>   BTST.b #7,(a7)
00031C16 <AmiBlitz3.ab2@24308>   BNE 'negi
00031C1A <AmiBlitz3.ab2@24309>   fcmp.x fp1,fp0
00031C1E <AmiBlitz3.ab2@24310> BRA 'negi2
00031C22 <AmiBlitz3.ab2@24313>   fcmp.x fp0,fp1
00031C26 <AmiBlitz3.ab2@24316>   Dc.l $f2920000                                           ;fbgt.w
00031C2A <AmiBlitz3.ab2@24320>   BGT.w thebgt
00031C30 <AmiBlitz3.ab2@24323>   MOVE.l A5,letstart
00031C34 <AmiBlitz3.ab2@24324>   BSR.w getparameter
00031C3E <AmiBlitz3.ab2@24330>   MOVE.l destpointer,pushpc
00031C48 <AmiBlitz3.ab2@24331>   MOVE.l hunkoffsetbase,pushoff
00031C4E <AmiBlitz3.ab2@24332>   CLR.l rightsidetype
00031C56 <AmiBlitz3.ab2@24333>   MOVE.w #$0001,regnum
00031C5C <AmiBlitz3.ab2@24334>   JSR JL_0_8E3C
00031C62 <AmiBlitz3.ab2@24335>   JSR calcvar
00031C68 <AmiBlitz3.ab2@24336>   TST.b formode
00031C6C <AmiBlitz3.ab2@24337>   BEQ 'lf1
00031C72 <AmiBlitz3.ab2@24338>   CMP.l #newtype_double,A2
00031C76 <AmiBlitz3.ab2@24339>   BEQ JUMP_notallowd
00031C7C <AmiBlitz3.ab2@24340>   MOVE.l a2,currtype
00031C82 <AmiBlitz3.ab2@24343>   CLR.w startoffsetmore
00031C86 <AmiBlitz3.ab2@24344>   CMP.w #$3d,d0
00031C8A <AmiBlitz3.ab2@24345>   BNE 'l1a
00031C8E <AmiBlitz3.ab2@24346>   BTST #15,d2
00031C92 <AmiBlitz3.ab2@24347>   BEQ 'l1a
00031C96 <AmiBlitz3.ab2@24348>   CMP.b #1,d2
00031C9A <AmiBlitz3.ab2@24349>   BNE 'l1a
00031CA4 <AmiBlitz3.ab2@24350>   MOVE.w leaa0a0+2,startoffsetmore
00031CAA <AmiBlitz3.ab2@24353>   CLR.w regnum
00031CAE <AmiBlitz3.ab2@24354>   BSR.w JL_0_B5D2
00031CB4 <AmiBlitz3.ab2@24355>   CLR.w commode
00031CBA <AmiBlitz3.ab2@24356>   CLR.w stackcorrect
00031CC0 <AmiBlitz3.ab2@24357>   CLR.w pcodd
00031CC6 <AmiBlitz3.ab2@24358>   MOVE.w startoffsetmore,d1
00031CCA <AmiBlitz3.ab2@24359>   BTST #0,d1
00031CCE <AmiBlitz3.ab2@24360>   BEQ 'l2a
00031CD6 <AmiBlitz3.ab2@24361>   MOVE.w #1,pcodd
00031CDA <AmiBlitz3.ab2@24364>   CMP.w #$3D,D0                                            ;=
00031CDE <AmiBlitz3.ab2@24365>   BEQ.w JL_0_DEE0
00031CE0 <AmiBlitz3.ab2@24368>   MOVE.b (a5)+,d1
00031CE4 <AmiBlitz3.ab2@24369>   BEQ 'l10
00031CE8 <AmiBlitz3.ab2@24370>   CMP.b #":",d1
00031CEC <AmiBlitz3.ab2@24371>   BEQ 'l10
00031CF0 <AmiBlitz3.ab2@24372>   CMP.b #";",d1
00031CF4 <AmiBlitz3.ab2@24373>   BEQ 'l10
00031CF8 <AmiBlitz3.ab2@24374>   CMP.b #"0",d1
00031CFC <AmiBlitz3.ab2@24375>   BLT 'l11
00031D00 <AmiBlitz3.ab2@24376>   CMP.b #"9",d1
00031D04 <AmiBlitz3.ab2@24377>   BGT 'l11
00031D08 <AmiBlitz3.ab2@24378> BRA.s 'l1
00031D10 <AmiBlitz3.ab2@24381>   MOVE.b #1,quickadd
00031D16 <AmiBlitz3.ab2@24384>   MOVEA.l letstart,A5
00031D18 <AmiBlitz3.ab2@24385>   SUBQ.w #1,A5
00031D1C <AmiBlitz3.ab2@24388>   CMP.b #$7,D2
00031D20 <AmiBlitz3.ab2@24389>    BNE.w JL_0_DF8A
00031D24 <AmiBlitz3.ab2@24395>   MOVEM.w D2-D3,-(A7)
00031D2A <AmiBlitz3.ab2@24396>   MOVE.l lastoffset_org,-(A7)
00031D30 <AmiBlitz3.ab2@24397>   MOVE.w varmode,-(A7)
00031D3A <AmiBlitz3.ab2@24399>    MOVE.l #forthstack,forthsp
00031D44 <AmiBlitz3.ab2@24400>    MOVE.l #precstack,precsp
00031D4A <AmiBlitz3.ab2@24401>    CLR.w regnum
00031D50 <AmiBlitz3.ab2@24402>    CLR.w nonew
00031D56 <AmiBlitz3.ab2@24403>    CLR.w sbasegot
00031D60 <AmiBlitz3.ab2@24404>    MOVE.w varcodelen,oldvcodelen
00031D66 <AmiBlitz3.ab2@24405>    CLR.w varcodelen
00031D6E <AmiBlitz3.ab2@24406>    MOVE.w #$FFFF,lasta6
00031D70 <AmiBlitz3.ab2@24409>   MOVEQ.l #$07,D2
00031D74 <AmiBlitz3.ab2@24410>    BSR.w eval
00031D7A <AmiBlitz3.ab2@24411>   MOVE.w (A7)+,varmode
00031D80 <AmiBlitz3.ab2@24412>   MOVE.l (A7)+,lastoffset_org
00031D86 <AmiBlitz3.ab2@24413>   MOVE.w moved0a3,D1
00031D8C <AmiBlitz3.ab2@24414>    JSR writeword
00031D92 <AmiBlitz3.ab2@24415>   MOVE.w commode,D1
00031D96 <AmiBlitz3.ab2@24416>    BEQ.w JL_0_DF38
00031D9C <AmiBlitz3.ab2@24417>   LEA pulla2st,A0
00031DA2 <AmiBlitz3.ab2@24418>   LEA pulla2stf,A1
00031DA8 <AmiBlitz3.ab2@24419>    JSR pokecode
00031DAC <AmiBlitz3.ab2@24420> BRA.w JL_0_DF3C
00031DB0 <AmiBlitz3.ab2@24423>   BSR.w JL_0_B63C
00031DB4 <AmiBlitz3.ab2@24426>   MOVEM.w (A7)+,D2-D3
00031DB8 <AmiBlitz3.ab2@24427>   BTST #$F,D2
00031DBC <AmiBlitz3.ab2@24428>   BNE.w JL_0_DF58
00031DC2 <AmiBlitz3.ab2@24429>     MOVE.w D3,leaa5d3a2+2
00031DC8 <AmiBlitz3.ab2@24430>     MOVE.l leaa5d3a2,D1
00031DCE <AmiBlitz3.ab2@24431>     JSR pokela5s
00031DD2 <AmiBlitz3.ab2@24434>   MOVE.w #$FE6F,D1
00031DD8 <AmiBlitz3.ab2@24435>   JSR uselib
00031DDE <AmiBlitz3.ab2@24436>   MOVE.l #$C700,D1
00031DE4 <AmiBlitz3.ab2@24437>   MOVE.l d1,lastinstruction
00031DEA <AmiBlitz3.ab2@24438>   MOVE.w varmode,D2
00031DEE <AmiBlitz3.ab2@24439>   BNE.w JL_0_DF70
00031DF0 <AmiBlitz3.ab2@24440>     ADDQ.w #1,D1
00031DF4 <AmiBlitz3.ab2@24443>   BSR.w Atokejsr
00031DF8 <AmiBlitz3.ab2@24444>   CMP.w #$2C,D0
00031DFC <AmiBlitz3.ab2@24445>   BNE.w JL_0_E0C6
00031E02 <AmiBlitz3.ab2@24447>   MOVE.w addq4a2,D1
00031E08 <AmiBlitz3.ab2@24448>   JSR writeword
00031E0C <AmiBlitz3.ab2@24449> BRA.w JL_0_E018
00031E12 <AmiBlitz3.ab2@24452> JMP error4char
00031E18 <AmiBlitz3.ab2@24455> JMP error_convert_types
00031E1C <AmiBlitz3.ab2@24459>    BTST #$E,D2
00031E20 <AmiBlitz3.ab2@24460>    BNE.w JL_0_DF9C
00031E22 <AmiBlitz3.ab2@24461>   TST.b D2
00031E26 <AmiBlitz3.ab2@24462>    BEQ.w JUMP_noleterr
00031E2C <AmiBlitz3.ab2@24463>    TST.b newsyntax
00031E30 <AmiBlitz3.ab2@24464>    BEQ JL_0_DFA0
00031E34 <AmiBlitz3.ab2@24467>    CMP.w #$4022,(a5)
00031E38 <AmiBlitz3.ab2@24468>    BNE JL_0_DFA0
00031E3E <AmiBlitz3.ab2@24469>    CMP.l #3,d2
00031E42 <AmiBlitz3.ab2@24470>    BNE  JUMP_error_convert_types
00031E44 <AmiBlitz3.ab2@24471>    ADDQ #2,a5
00031E46 <AmiBlitz3.ab2@24472>    MOVEQ #0,d0
00031E48 <AmiBlitz3.ab2@24473>    MOVE.b (a5)+,d0
00031E4C <AmiBlitz3.ab2@24474>    BEQ JL_0_DFA0
00031E50 <AmiBlitz3.ab2@24475>    CMP.b #$22,d0
00031E54 <AmiBlitz3.ab2@24476>    BNE 'l1
00031E58 <AmiBlitz3.ab2@24477>    MOVE.b #0,d0
00031E5C <AmiBlitz3.ab2@24478> BRA 'do
00031E5E <AmiBlitz3.ab2@24481>   ASL.l #8,d0
00031E60 <AmiBlitz3.ab2@24482>    MOVE.b (a5)+,d0
00031E64 <AmiBlitz3.ab2@24483>    BEQ JL_0_DFA0
00031E68 <AmiBlitz3.ab2@24484>    CMP.b #$22,d0
00031E6C <AmiBlitz3.ab2@24485>    BNE 'l2
00031E70 <AmiBlitz3.ab2@24486>    MOVE.b #0,d0
00031E72 <AmiBlitz3.ab2@24487>    ASR.l #8,d0
00031E76 <AmiBlitz3.ab2@24488> BRA 'do
00031E78 <AmiBlitz3.ab2@24491>   ASL.l #8,d0
00031E7A <AmiBlitz3.ab2@24492>     MOVE.b (a5)+,d0
00031E7E <AmiBlitz3.ab2@24493>    BEQ JL_0_DFA0
00031E82 <AmiBlitz3.ab2@24494>    CMP.b #$22,d0
00031E86 <AmiBlitz3.ab2@24495>    BNE 'l3
00031E8A <AmiBlitz3.ab2@24496>    MOVE.b #0,d0
00031E8C <AmiBlitz3.ab2@24497>    ASR.l #8,d0
00031E90 <AmiBlitz3.ab2@24498> BRA 'do
00031E92 <AmiBlitz3.ab2@24501>   ASL.l #8,d0
00031E94 <AmiBlitz3.ab2@24502>     MOVE.b (a5)+,d0
00031E98 <AmiBlitz3.ab2@24503>    BEQ JL_0_DFA0
00031E9C <AmiBlitz3.ab2@24504>    CMP.b #$22,d0
00031EA0 <AmiBlitz3.ab2@24505>    BNE 'l4
00031EA4 <AmiBlitz3.ab2@24506>    MOVE.b #0,d0
00031EA6 <AmiBlitz3.ab2@24507>    ASR.l #8,d0
00031EAA <AmiBlitz3.ab2@24508> BRA 'do
00031EAE <AmiBlitz3.ab2@24511>    CMP.b #$22,(a5)+
00031EB2 <AmiBlitz3.ab2@24512>    BNE JUMP_error4char
00031EB6 <AmiBlitz3.ab2@24515>   MOVE.w #$2b7c,d1
00031EBC <AmiBlitz3.ab2@24516>    TST.w varmode
00031EC0 <AmiBlitz3.ab2@24517>    BEQ 'g3
00031EC4 <AmiBlitz3.ab2@24518>    BCLR #9,d1
00031ECA <AmiBlitz3.ab2@24521>     JSR writeword
00031ECC <AmiBlitz3.ab2@24522>     MOVE.l d0,d1
00031ED2 <AmiBlitz3.ab2@24523>     JSR writelong
00031ED4 <AmiBlitz3.ab2@24524>     MOVE.w d3,d1
00031EDA <AmiBlitz3.ab2@24525>     JSR writeword
00031EE0 <AmiBlitz3.ab2@24526>     JSR get1bytemain
00031EE2 <AmiBlitz3.ab2@24527> RTS
00031EE8 <AmiBlitz3.ab2@24533> JMP noleterr
00031EEE <AmiBlitz3.ab2@24537>   MOVE.w d2,vartype
00031EF2 <AmiBlitz3.ab2@24538>   MOVE.b #$3,D2
00031EF6 <AmiBlitz3.ab2@24541>   CMP.b #5,d2
00031EFA <AmiBlitz3.ab2@24542>   BNE 'l1
00031F00 <AmiBlitz3.ab2@24543>   MOVE.l a2,currtype
00031F04 <AmiBlitz3.ab2@24547>   MOVEM.w D2-D3,-(A7)
00031F0A <AmiBlitz3.ab2@24548>   MOVE.w varmode,-(A7)
00031F10 <AmiBlitz3.ab2@24549>   MOVE.l a2,leftsidetype
00031F14 <AmiBlitz3.ab2@24550>   BTST #$f,d2
00031F18 <AmiBlitz3.ab2@24551>   BEQ 'nomultiassign
00031F1E <AmiBlitz3.ab2@24552>   CLR.l leftsidetype                        ;its multiassign to type entries so no typecheck need
00031F22 <AmiBlitz3.ab2@24553> 'nomultiassign  ANDI.w #$FF,D2
00031F28 <AmiBlitz3.ab2@24554>   MOVE.l lastoffset_org,-(A7)
00031F2C <AmiBlitz3.ab2@24555>   BSR.w eval                                ; calc right side of var assign
00031F30 <AmiBlitz3.ab2@24557>   MOVEM.l a0/a1,-(a7)
00031F36 <AmiBlitz3.ab2@24558>   MOVE.l leftsidetype,a0
00031F3C <AmiBlitz3.ab2@24559>   CMP.l #0,a0
00031F40 <AmiBlitz3.ab2@24560>   BEQ 'nocheck
00031F48 <AmiBlitz3.ab2@24561>   CMP.l #$100,4(a0)
00031F4C <AmiBlitz3.ab2@24562>   BLE 'nocheck
00031F52 <AmiBlitz3.ab2@24563>   TST.l typetocast
00031F56 <AmiBlitz3.ab2@24564>   BEQ 'nocast
00031F5C <AmiBlitz3.ab2@24565>   MOVE.l typetocast,a1
00031F60 <AmiBlitz3.ab2@24566>   BRA 'typecheck
00031F66 <AmiBlitz3.ab2@24567> 'nocast  TST.l rightsidetype
00031F6A <AmiBlitz3.ab2@24568>   BEQ 'nocheck
00031F70 <AmiBlitz3.ab2@24569>   MOVE.l rightsidetype,a1
00031F78 <AmiBlitz3.ab2@24570>   CMP.l #$100,4(a1)
00031F7C <AmiBlitz3.ab2@24571>   BGE 'typecheck
00031F84 <AmiBlitz3.ab2@24572>   CMP.l #$3,4(a1)
00031F88 <AmiBlitz3.ab2@24573>   BEQ 'ok                              ;long assign is allow with this codelines
00031F8C <AmiBlitz3.ab2@24574>   BRA 'error
00031F92 <AmiBlitz3.ab2@24576>   TST.b typecheck
00031F96 <AmiBlitz3.ab2@24577>   BEQ 'nocheck
00031F9C <AmiBlitz3.ab2@24578>   TST.b notypecheck
00031FA0 <AmiBlitz3.ab2@24579>   BNE 'ok
00031FA2 <AmiBlitz3.ab2@24580>   CMP.l a0,a1
00031FA6 <AmiBlitz3.ab2@24581>   BEQ 'ok
00031FAA <AmiBlitz3.ab2@24583>   MOVE.l 4(a1),a1                   ; load the address of 1. type.
00031FAE <AmiBlitz3.ab2@24584>   CMP.l $a(a1),a0                   ; check if the bigger type contain in first place same type as the function need
00031FB2 <AmiBlitz3.ab2@24585>   BEQ 'ok
00031FB8 <AmiBlitz3.ab2@24587>  JMP   error_convert_types     ;for syntax 4  = typecheck
00031FBE <AmiBlitz3.ab2@24590>    CLR.l typetocast
00031FC2 <AmiBlitz3.ab2@24591>    MOVEM.l (a7)+, a0/a1
00031FC8 <AmiBlitz3.ab2@24592>   MOVE.l (A7)+,lastoffset_org
00031FCE <AmiBlitz3.ab2@24593>   MOVE.w commode,D1
00031FD2 <AmiBlitz3.ab2@24594>    BNE.w JL_0_DFCC
00031FD6 <AmiBlitz3.ab2@24595>    BSR.w JL_0_B63C
00031FDC <AmiBlitz3.ab2@24598>   MOVE.w (A7)+,varmode
00031FE0 <AmiBlitz3.ab2@24599>   MOVEM.w (A7)+,D2-D3
00031FE4 <AmiBlitz3.ab2@24601>   MOVE.w #$2B40,D1
00031FEA <AmiBlitz3.ab2@24602>   MOVE.w varmode,D4
00031FEE <AmiBlitz3.ab2@24603>    BEQ.w JL_0_DFE8
00031FF2 <AmiBlitz3.ab2@24604>   BCLR #$9,D1
00031FF6 <AmiBlitz3.ab2@24607>   BTST #$F,D2
00031FFA <AmiBlitz3.ab2@24608>    BEQ.w JL_0_E090
00032000 <AmiBlitz3.ab2@24609>    TST.b stackcorrect
00032004 <AmiBlitz3.ab2@24610>    BNE 'st1
0003200A <AmiBlitz3.ab2@24611>   MOVE.w commode,D1
0003200E <AmiBlitz3.ab2@24612>    BEQ.w JL_0_E004
00032014 <AmiBlitz3.ab2@24615>   MOVE.w pulla2,D1
0003201A <AmiBlitz3.ab2@24616>    JSR writeword
0003201E <AmiBlitz3.ab2@24619>   MOVE.w #$2480,D1
00032022 <AmiBlitz3.ab2@24620>    MOVEM.l a0/d0,-(a7)
00032028 <AmiBlitz3.ab2@24621>    MOVEA.l lastoffset_org,A0
0003202A <AmiBlitz3.ab2@24622>    MOVE.l A0,D0
0003202E <AmiBlitz3.ab2@24623>    BEQ.w 'skip
00032030 <AmiBlitz3.ab2@24624>    MOVEA.l D0,A0
00032038 <AmiBlitz3.ab2@24625>    MOVE.l $A(A0),currtype
0003203C <AmiBlitz3.ab2@24628>   MOVEM.l (a7)+,a0/d0
00032040 <AmiBlitz3.ab2@24629>   CMP.w #$2C,D0
00032044 <AmiBlitz3.ab2@24630>    BNE.w JL_0_E090
00032048 <AmiBlitz3.ab2@24631>     MOVE.w #$24C0,D1
0003204C <AmiBlitz3.ab2@24632>    BSR.w JL_0_E090                                         ;write store
00032052 <AmiBlitz3.ab2@24635>    MOVE.l lastoffset_org,D0
0003205A <AmiBlitz3.ab2@24639>   MOVE.w #$FFFF,commode
00032060 <AmiBlitz3.ab2@24640>   CLR.w varcodelen
00032068 <AmiBlitz3.ab2@24641>   MOVE.b #1,optiarray
0003206E <AmiBlitz3.ab2@24642>   MOVE.w pusha2,D1
00032074 <AmiBlitz3.ab2@24643>    JSR writeword
0003207A <AmiBlitz3.ab2@24644>   TST.l lastoffset_org
0003207E <AmiBlitz3.ab2@24645>   BEQ dimmore
00032084 <AmiBlitz3.ab2@24646>   MOVEA.l lastoffset_org,A0
00032086 <AmiBlitz3.ab2@24647>   MOVE.l (A0),D0
0003208A <AmiBlitz3.ab2@24648>    BEQ.w JUMP_comerr
0003208C <AmiBlitz3.ab2@24649>   MOVEA.l D0,A0
00032092 <AmiBlitz3.ab2@24650>   MOVE.l A0,lastoffset_org
00032098 <AmiBlitz3.ab2@24651>   BTST #$1,$7(A0)
0003209C <AmiBlitz3.ab2@24652>    BNE.w JUMP_nocomerr
000320A0 <AmiBlitz3.ab2@24653>   MOVEA.l $A(A0),A1
000320A4 <AmiBlitz3.ab2@24654>   MOVE.l $4(A1),D2
000320AA <AmiBlitz3.ab2@24657>   BTST #$0,$7(A0)
000320AE <AmiBlitz3.ab2@24658>    BNE.w JL_0_E078
000320B4 <AmiBlitz3.ab2@24659>   CMP.l #$100,D2
000320B8 <AmiBlitz3.ab2@24660>    BCC.l JUMP_nocomerr
000320BC <AmiBlitz3.ab2@24661> BRA.w JL_0_E088                                     ; do do type\x= 10,20,30....
000320C2 <AmiBlitz3.ab2@24664>         CLR.b optiarray
000320C6 <AmiBlitz3.ab2@24665>         CMP.w #"@@",(a5)
000320CA <AmiBlitz3.ab2@24666>         BEQ 'n1
000320CE <AmiBlitz3.ab2@24667> BRA 'd1
000320D4 <AmiBlitz3.ab2@24670>   JSR nextline
000320D6 <AmiBlitz3.ab2@24671>         MOVE.l a5,-(a7)
000320D8 <AmiBlitz3.ab2@24674>   MOVE.b (a5)+,d0
000320DC <AmiBlitz3.ab2@24675>         CMP.b #$20,d0
000320E0 <AmiBlitz3.ab2@24676>         BEQ 'l2
000320E2 <AmiBlitz3.ab2@24677>         MOVE.l (a7)+,a5
000320E6 <AmiBlitz3.ab2@24678>         CMP.b #";",d0
000320EA <AmiBlitz3.ab2@24679>         BEQ 'n1
000320F0 <AmiBlitz3.ab2@24682>         TST.w debugmode
000320F4 <AmiBlitz3.ab2@24683>         BEQ JL_0_DEE0
000320F6 <AmiBlitz3.ab2@24684>         MOVE.l a0,-(a7)
000320FC <AmiBlitz3.ab2@24685>         MOVE.l pushat,a0
00032102 <AmiBlitz3.ab2@24686>         CMP.l #0,a0
00032106 <AmiBlitz3.ab2@24687>         BNE 'o1
0003210A <AmiBlitz3.ab2@24688> BRA 'skip
00032112 <AmiBlitz3.ab2@24691>         ADD.l #1,2(a0)
00032118 <AmiBlitz3.ab2@24694>   CLR.w commode
00032120 <AmiBlitz3.ab2@24695>         MOVE.b #1,stackcorrect
00032122 <AmiBlitz3.ab2@24696>         MOVE.l (a7)+,a0
00032128 <AmiBlitz3.ab2@24697> JMP JL_0_DEE0
0003212E <AmiBlitz3.ab2@24700> JMP nocomerr
00032134 <AmiBlitz3.ab2@24703>   CMP.l #$100,D2
00032138 <AmiBlitz3.ab2@24704>    BCS.w JL_0_E084
0003213A <AmiBlitz3.ab2@24705>   MOVEQ.l #$00,D2
0003213E <AmiBlitz3.ab2@24708>   BSET #$E,D2
00032142 <AmiBlitz3.ab2@24711>   BSET #$F,D2
00032146 <AmiBlitz3.ab2@24712> BRA.w JL_0_DEE0
0003214C <AmiBlitz3.ab2@24715>    MOVE.l destpointer,a4
00032154 <AmiBlitz3.ab2@24716>    MOVE.l #$f22a6400,-4(a4)
0003215A <AmiBlitz3.ab2@24717>    MOVE.w arrayoffset,d1
00032160 <AmiBlitz3.ab2@24718> JMP writeword
00032166 <AmiBlitz3.ab2@24721> JMP comerr
0003216C <AmiBlitz3.ab2@24724>    TST.b fpu
00032170 <AmiBlitz3.ab2@24725>    BEQ 'nofloat
00032174 <AmiBlitz3.ab2@24726>    CMP.b #5,d2
00032178 <AmiBlitz3.ab2@24727>    BNE 'nofloat
0003217E <AmiBlitz3.ab2@24728>    CLR.w fp0var
00032184 <AmiBlitz3.ab2@24729>    LEA regtable,a4
00032186 <AmiBlitz3.ab2@24730>    TST.l (a4)
0003218A <AmiBlitz3.ab2@24731>    BEQ 'noreg
0003218E <AmiBlitz3.ab2@24732>    BTST #15,d2                                             ;regvars
00032192 <AmiBlitz3.ab2@24733>    BNE 'noreg
00032196 <AmiBlitz3.ab2@24734>    CMP.w 0+4(a4),d3
0003219A <AmiBlitz3.ab2@24735>    BNE 'doreg1
000321A0 <AmiBlitz3.ab2@24736>    MOVE.l #$f2000380,d1
000321A6 <AmiBlitz3.ab2@24737>    MOVE.w regnum,d0
000321AA <AmiBlitz3.ab2@24738>    BNE 'noopt
000321B0 <AmiBlitz3.ab2@24744>    MOVE.l destpointer,a4
000321B8 <AmiBlitz3.ab2@24745>    CMP.l #$f2001c80,-8(a4)
000321BC <AmiBlitz3.ab2@24746>    BNE 'noopt
000321C4 <AmiBlitz3.ab2@24747>    CMP.l #$f2000422,-4(a4)
000321C8 <AmiBlitz3.ab2@24748>    BNE 'noopt
000321CE <AmiBlitz3.ab2@24749>    MOVE.l #$f20003a2,d1
000321D8 <AmiBlitz3.ab2@24750>    SUB.l #8,destpointer
000321DA <AmiBlitz3.ab2@24753>    ASL.w #7,d0
000321DC <AmiBlitz3.ab2@24754>    OR.w d0,d1
000321E2 <AmiBlitz3.ab2@24755>    JSR writelong
000321E4 <AmiBlitz3.ab2@24756> RTS
000321E8 <AmiBlitz3.ab2@24759>   CMP.w 8+4(a4),d3
000321EC <AmiBlitz3.ab2@24760>    BNE 'doreg2
000321F2 <AmiBlitz3.ab2@24761>    MOVE.l #$f2000300,d1
000321F8 <AmiBlitz3.ab2@24762>    MOVE.w regnum,d0
000321FA <AmiBlitz3.ab2@24763>    ASL.w #7,d0
000321FC <AmiBlitz3.ab2@24764>    OR.w d0,d1
00032202 <AmiBlitz3.ab2@24765>    JSR writelong
00032204 <AmiBlitz3.ab2@24766> RTS
00032208 <AmiBlitz3.ab2@24769>   CMP.w 16+4(a4),d3
0003220C <AmiBlitz3.ab2@24770>    BNE 'doreg3
00032212 <AmiBlitz3.ab2@24771>    MOVE.l #$f2000280,d1
00032218 <AmiBlitz3.ab2@24772>    MOVE.w regnum,d0
0003221A <AmiBlitz3.ab2@24773>    ASL.w #7,d0
0003221C <AmiBlitz3.ab2@24774>    OR.w d0,d1
00032222 <AmiBlitz3.ab2@24775>    JSR  writelong
00032224 <AmiBlitz3.ab2@24776>  RTS
00032228 <AmiBlitz3.ab2@24779>   CMP.w 24+4(a4),d3
0003222C <AmiBlitz3.ab2@24780>    BNE 'doreg4
00032232 <AmiBlitz3.ab2@24781>    MOVE.l #$f2000200,d1
00032238 <AmiBlitz3.ab2@24782>    MOVE.w regnum,d0
0003223A <AmiBlitz3.ab2@24783>    ASL.w #7,d0
0003223C <AmiBlitz3.ab2@24784>    OR.w d0,d1
00032242 <AmiBlitz3.ab2@24785>    JSR writelong
00032244 <AmiBlitz3.ab2@24786> RTS
00032248 <AmiBlitz3.ab2@24789>   CMP.w 32+4(a4),d3
0003224C <AmiBlitz3.ab2@24790>    BNE 'noreg
00032252 <AmiBlitz3.ab2@24791>    MOVE.l #$f2000180,d1
00032258 <AmiBlitz3.ab2@24792>    MOVE.w regnum,d0
0003225A <AmiBlitz3.ab2@24793>    ASL.w #7,d0
0003225C <AmiBlitz3.ab2@24794>    OR.w d0,d1
00032262 <AmiBlitz3.ab2@24795>    JSR writelong
00032264 <AmiBlitz3.ab2@24796> RTS
0003226A <AmiBlitz3.ab2@24799>    TST.w regnum
0003226E <AmiBlitz3.ab2@24800>    BNE 'nofp0
00032274 <AmiBlitz3.ab2@24801>    MOVE.l destpointer ,a4
0003227C <AmiBlitz3.ab2@24802>    CMP.l #$f2304400,-6(a4)
00032280 <AmiBlitz3.ab2@24803>    BNE 'do
00032286 <AmiBlitz3.ab2@24804>    CMP.w #$1990,-2(a4)
0003228A <AmiBlitz3.ab2@24805>    BNE 'do
0003228E <AmiBlitz3.ab2@24806>    BTST #15,d2                                             ;types ?
00032292 <AmiBlitz3.ab2@24807>    BNE 'do
00032298 <AmiBlitz3.ab2@24808>   MOVE.l #$2b701990,d1                                     ;var
0003229E <AmiBlitz3.ab2@24809>   TST.w varmode
000322A2 <AmiBlitz3.ab2@24810>   BEQ 'glob1
000322A6 <AmiBlitz3.ab2@24811>   BCLR #25,d1
000322AA <AmiBlitz3.ab2@24814>   MOVE.l d1,-6(a4)
000322AE <AmiBlitz3.ab2@24815>   MOVE.w d3,-2(a4)
000322B4 <AmiBlitz3.ab2@24816>   CLR.w fp0var
000322BC <AmiBlitz3.ab2@24817>   MOVE.w #$ffff,fp0mode
000322BE <AmiBlitz3.ab2@24818> RTS
000322C6 <AmiBlitz3.ab2@24821>    CMP.l #$f22d4400,-6(a4)                                 ;fmove.s (a5),fp0
000322CA <AmiBlitz3.ab2@24822>    BNE 'do3
000322D4 <AmiBlitz3.ab2@24823>    CMP.l #newtype_double,currtype
000322D8 <AmiBlitz3.ab2@24824>    BEQ 'do4
000322DC <AmiBlitz3.ab2@24827>   MOVE.w #$2b6d,d1
000322E2 <AmiBlitz3.ab2@24828>    TST.w varmode
000322E6 <AmiBlitz3.ab2@24829>    BEQ 'g2
000322EA <AmiBlitz3.ab2@24830>     BCLR #9,d1
000322EE <AmiBlitz3.ab2@24833>     CMP.w #$2b6d,d1
000322F2 <AmiBlitz3.ab2@24834>     BNE 'd1
000322F6 <AmiBlitz3.ab2@24835>     CMP.w -2(a4),d3
000322FA <AmiBlitz3.ab2@24836>     BNE 'd1
00032300 <AmiBlitz3.ab2@24837>     SUBQ.l #6,destpointer
00032304 <AmiBlitz3.ab2@24838> BRA 'd12
00032308 <AmiBlitz3.ab2@24841>     MOVE.w d1,-6(a4)                                       ;fmove.s to move.l mem,mem
0003230E <AmiBlitz3.ab2@24842>     MOVE.w -2(a4),-4(a4)
00032312 <AmiBlitz3.ab2@24843>     MOVE.w d3,-2(a4)
00032318 <AmiBlitz3.ab2@24846>   CLR.w fp0var
00032320 <AmiBlitz3.ab2@24847>     MOVE.w #$ffff,fp0mode
00032322 <AmiBlitz3.ab2@24848> RTS
0003232A <AmiBlitz3.ab2@24851>   CMP.l #$f22c4400,-6(a4)                                  ;fmove.s (a4)
0003232E <AmiBlitz3.ab2@24852>    BNE 'do4
00032332 <AmiBlitz3.ab2@24853>    MOVE.w #$2b6c,d1
00032338 <AmiBlitz3.ab2@24854>       TST.w varmode
0003233C <AmiBlitz3.ab2@24855>    BEQ 'g3
00032340 <AmiBlitz3.ab2@24856>    BCLR #9,d1
00032344 <AmiBlitz3.ab2@24859>   MOVE.w d1,-6(a4)
0003234A <AmiBlitz3.ab2@24860>     MOVE.w -2(a4),-4(a4)
0003234E <AmiBlitz3.ab2@24861>     MOVE.w d3,-2(a4)
00032354 <AmiBlitz3.ab2@24862>     CLR.w fp0var
0003235C <AmiBlitz3.ab2@24863>     MOVE.w #$ffff,fp0mode
0003235E <AmiBlitz3.ab2@24864> RTS
00032364 <AmiBlitz3.ab2@24867>   MOVE.w d3,fp0var
0003236E <AmiBlitz3.ab2@24868>    MOVE.w varmode,fp0mode
00032370 <AmiBlitz3.ab2@24869>    ADDQ.l #6,a4
00032376 <AmiBlitz3.ab2@24870>    MOVE.l a4,fp0addr
00032380 <AmiBlitz3.ab2@24871>    MOVE.l firstiff,fp0iff
00032384 <AmiBlitz3.ab2@24874>   MOVEM.l d0/d4,-(a7)
00032386 <AmiBlitz3.ab2@24875>    MOVEQ #0,d0
0003238C <AmiBlitz3.ab2@24876>     MOVE.w regnum,d0
0003238E <AmiBlitz3.ab2@24877>    ASL.w #7,d0                                             ;fpu store var
00032392 <AmiBlitz3.ab2@24878>   BTST #15,d2
00032396 <AmiBlitz3.ab2@24879>    BEQ 'var
00032398 <AmiBlitz3.ab2@24880>    MOVE.w d1,d4
0003239C <AmiBlitz3.ab2@24881>    CMP.w #$24c0,d4
000323A0 <AmiBlitz3.ab2@24882>    BNE 'nopl
000323A6 <AmiBlitz3.ab2@24883>    MOVE.l #$f21a6400,d1
000323A8 <AmiBlitz3.ab2@24884>    MOVEQ #0,d3
000323AC <AmiBlitz3.ab2@24885> BRA 'glob
000323B2 <AmiBlitz3.ab2@24889>   MOVE.l #$f2126400,d1
000323B4 <AmiBlitz3.ab2@24890>    TST.w d3                                                ;offset =0
000323B8 <AmiBlitz3.ab2@24891>    BNE 'offset
000323BE <AmiBlitz3.ab2@24892>    MOVE.l #$f2126400,d1
000323C0 <AmiBlitz3.ab2@24900>    MOVEQ #0,d3
000323C4 <AmiBlitz3.ab2@24901> BRA 'glob
000323CA <AmiBlitz3.ab2@24904>   MOVE.l #$f22d6400,d1                                     ;var
000323D0 <AmiBlitz3.ab2@24905>   TST.w varmode
000323D4 <AmiBlitz3.ab2@24906>   BEQ 'glob
000323D8 <AmiBlitz3.ab2@24907>   BCLR #16,d1
000323DA <AmiBlitz3.ab2@24908>  'glob OR.l d0,d1
000323E4 <AmiBlitz3.ab2@24911>   CMP.l #newtype_double,currtype
000323E8 <AmiBlitz3.ab2@24912>   BNE 'dbl1
000323EE <AmiBlitz3.ab2@24913>   OR.l #$00001000,d1
000323F4 <AmiBlitz3.ab2@24916>   JSR writelong
000323FA <AmiBlitz3.ab2@24917>   CLR.l currtype
000323FE <AmiBlitz3.ab2@24918>   MOVEM.l (a7)+,d0/d4
00032400 <AmiBlitz3.ab2@24919>   MOVE.l d3,d1
00032404 <AmiBlitz3.ab2@24920>   BEQ 'nooffs
0003240A <AmiBlitz3.ab2@24921> JMP writeword
0003240C <AmiBlitz3.ab2@24924> RTS
00032412 <AmiBlitz3.ab2@24938>     TST.b fast                                             ;write lea->xx(a2)
00032416 <AmiBlitz3.ab2@24939>    BEQ 'la10
0003241C <AmiBlitz3.ab2@24943>    TST.b quickadd
00032422 <AmiBlitz3.ab2@24945>      CLR.b quickadd
00032426 <AmiBlitz3.ab2@24946>    CMP.w #$2480,d1
0003242A <AmiBlitz3.ab2@24947>    BNE 'la10
00032430 <AmiBlitz3.ab2@24948>    TST.b optiarray
00032434 <AmiBlitz3.ab2@24949>    BNE 'la10
0003243A <AmiBlitz3.ab2@24950>    MOVE.l destpointer,a4
00032440 <AmiBlitz3.ab2@24951>    CMP.w #$45ea,-4(a4)
00032444 <AmiBlitz3.ab2@24952>    BNE 'la10
0003244C <AmiBlitz3.ab2@24953>    CMP.w #8,pushclen
00032450 <AmiBlitz3.ab2@24954>    BEQ 'la100
00032458 <AmiBlitz3.ab2@24955>    CMP.w #6,pushclen
0003245C <AmiBlitz3.ab2@24956>    BNE 'la10
00032460 <AmiBlitz3.ab2@24957>    CMP.b #3,d2
00032464 <AmiBlitz3.ab2@24958>    BCS 'la110
0003246A <AmiBlitz3.ab2@24960>    MOVE.w #$2540,-2(a4)
00032470 <AmiBlitz3.ab2@24961>    MOVE.w arrayoffset,d1
00032476 <AmiBlitz3.ab2@24962> JMP writeword
0003247C <AmiBlitz3.ab2@24965>    CLR.b quickadd
0003247E <AmiBlitz3.ab2@24966> RTS
00032482 <AmiBlitz3.ab2@24969>    CMP.b #2,d2
00032486 <AmiBlitz3.ab2@24970>    BNE 'la120
0003248C <AmiBlitz3.ab2@24971>     MOVE.w #$3540,-2(a4)
00032492 <AmiBlitz3.ab2@24972>    MOVE.w arrayoffset,d1
00032498 <AmiBlitz3.ab2@24973> JMP writeword
0003249C <AmiBlitz3.ab2@24976>   CMP.b #1,d2
000324A0 <AmiBlitz3.ab2@24977>    BNE.s 'la10
000324A6 <AmiBlitz3.ab2@24978>     MOVE.w #$1540,-2(a4)
000324AC <AmiBlitz3.ab2@24979>    MOVE.w arrayoffset,d1
000324B2 <AmiBlitz3.ab2@24980> JMP writeword
000324B6 <AmiBlitz3.ab2@24983>    CMP.b #3,d2
000324BA <AmiBlitz3.ab2@24984>    BCS 'la11
000324C0 <AmiBlitz3.ab2@24985>    MOVE.w #$2540,-4(a4)
000324C2 <AmiBlitz3.ab2@24986> RTS
000324C6 <AmiBlitz3.ab2@24989>    CMP.b #2,d2
000324CA <AmiBlitz3.ab2@24990>    BNE 'la12
000324D0 <AmiBlitz3.ab2@24991>     MOVE.w #$3540,-4(a4)
000324D2 <AmiBlitz3.ab2@24992> RTS
000324D6 <AmiBlitz3.ab2@24994>  'la12 CMP.b #1,d2
000324DA <AmiBlitz3.ab2@24995>    BNE.s 'la10
000324E0 <AmiBlitz3.ab2@24996>     MOVE.w #$1540,-4(a4)
000324E2 <AmiBlitz3.ab2@24997> RTS
000324E8 <AmiBlitz3.ab2@25000>   CLR.b optiarray
000324EC <AmiBlitz3.ab2@25001>    CMP.b #$1,D2
000324F0 <AmiBlitz3.ab2@25002>    BEQ.w JL_0_E0AC
000324F4 <AmiBlitz3.ab2@25003>    BSR.w varalign
000324F8 <AmiBlitz3.ab2@25004>    CMP.b #$3,D2
000324FC <AmiBlitz3.ab2@25005>    BCC.w writevarlong
00032502 <AmiBlitz3.ab2@25006>    TST.b fast                                              ;optiimmi
00032506 <AmiBlitz3.ab2@25007>    BEQ 'l10b
0003250C <AmiBlitz3.ab2@25012>    MOVE.l destpointer,a0
00032512 <AmiBlitz3.ab2@25013>    SUB.l imm_addr,a0
00032518 <AmiBlitz3.ab2@25014>    CMP.l #4,a0
0003251C <AmiBlitz3.ab2@25015>    BNE 'l10
00032522 <AmiBlitz3.ab2@25016>    CLR.l imm_addr
00032528 <AmiBlitz3.ab2@25017>    MOVE.l destpointer,a4
0003252C <AmiBlitz3.ab2@25018>    OR.w #$107c,d1
00032530 <AmiBlitz3.ab2@25019>    MOVE.w d1,-4(a4)
00032532 <AmiBlitz3.ab2@25020>     MOVE.w D3,D1
00032538 <AmiBlitz3.ab2@25021> JMP writeword
0003253E <AmiBlitz3.ab2@25024>   MOVE.l destpointer,a0
00032544 <AmiBlitz3.ab2@25025>   SUB.l load_var_addr,a0
0003254A <AmiBlitz3.ab2@25026>   CMP.l #4,a0
0003254E <AmiBlitz3.ab2@25027>   BNE 'l10b
00032554 <AmiBlitz3.ab2@25028>   CMP.w #$302d,-4(a4)                                      ;check 68k opcode
00032558 <AmiBlitz3.ab2@25029>   BNE 'l10b
0003255E <AmiBlitz3.ab2@25031>   CLR.l load_var_addr
00032564 <AmiBlitz3.ab2@25032>   MOVE.l destpointer,a4
00032568 <AmiBlitz3.ab2@25033>   OR.w #$102d,d1
0003256C <AmiBlitz3.ab2@25034>   MOVE.w d1,-4(a4)
0003256E <AmiBlitz3.ab2@25035>   MOVE.w d3,d1
00032574 <AmiBlitz3.ab2@25036> JMP writeword
00032578 <AmiBlitz3.ab2@25039>   ORI.w #$1000,D1                                          ;word
0003257C <AmiBlitz3.ab2@25040> BRA.w writestorevar
00032582 <AmiBlitz3.ab2@25044>    TST.b fast                                              ;optiimmi
00032586 <AmiBlitz3.ab2@25045>    BEQ 'l10b
0003258C <AmiBlitz3.ab2@25050>    MOVE.l destpointer,a0
00032592 <AmiBlitz3.ab2@25051>    SUB.l imm_addr,a0
00032598 <AmiBlitz3.ab2@25052>    CMP.l #4,a0
0003259C <AmiBlitz3.ab2@25053>    BNE 'l10
000325A2 <AmiBlitz3.ab2@25054>    CLR.l imm_addr
000325A8 <AmiBlitz3.ab2@25055>    MOVE.l destpointer,a4
000325AC <AmiBlitz3.ab2@25056>    OR.w #$7c,d1
000325B0 <AmiBlitz3.ab2@25057>    EORI #$3000,d1
000325B4 <AmiBlitz3.ab2@25058>    MOVE.w d1,-4(a4)
000325B6 <AmiBlitz3.ab2@25059>       MOVE.w D3,D1
000325BC <AmiBlitz3.ab2@25060> JMP writeword
000325C2 <AmiBlitz3.ab2@25063>   MOVE.l destpointer,a0
000325C8 <AmiBlitz3.ab2@25064>   SUB.l load_var_addr,a0
000325CE <AmiBlitz3.ab2@25065>   CMP.l #4,a0
000325D2 <AmiBlitz3.ab2@25066>   BNE 'l10b
000325D8 <AmiBlitz3.ab2@25067>   CLR.l load_var_addr
000325DE <AmiBlitz3.ab2@25068>   MOVE.l destpointer,a4
000325E4 <AmiBlitz3.ab2@25069>    CMP.w #$1b6d,-4(a4)
000325E8 <AmiBlitz3.ab2@25070>    BNE 'l10b
000325EC <AmiBlitz3.ab2@25071>    OR.w #$2d,d1
000325F0 <AmiBlitz3.ab2@25072>    EORI #$3000,d1
000325F4 <AmiBlitz3.ab2@25073>    MOVE.w d1,-4(a4)
000325F6 <AmiBlitz3.ab2@25074>   MOVE.w d3,d1
000325FC <AmiBlitz3.ab2@25075> JMP writeword
00032602 <AmiBlitz3.ab2@25078>   ADDQ.w #1,pcodd                                          ;byte
00032606 <AmiBlitz3.ab2@25079>   EORI.w #$3000,D1
0003260C <AmiBlitz3.ab2@25082>   JSR writeword
00032610 <AmiBlitz3.ab2@25083>   BTST #$7,D1
00032614 <AmiBlitz3.ab2@25084>    BNE JL_0_E0C6
00032616 <AmiBlitz3.ab2@25085>   MOVE.w D3,D1
0003261C <AmiBlitz3.ab2@25086> JMP writeword
00032622 <AmiBlitz3.ab2@25089>    TST.b fast                                              ;optiimmi
00032626 <AmiBlitz3.ab2@25090>    BEQ 'l10b
0003262C <AmiBlitz3.ab2@25094>    MOVE.l destpointer,a0
00032632 <AmiBlitz3.ab2@25095>    SUB.l imm_addr,a0
00032638 <AmiBlitz3.ab2@25096>    CMP.l #6,a0
0003263C <AmiBlitz3.ab2@25097>    BNE 'l10
00032642 <AmiBlitz3.ab2@25098>    CLR.l imm_addr
00032648 <AmiBlitz3.ab2@25099>    MOVE.l destpointer,a4
0003264C <AmiBlitz3.ab2@25100>    OR.w #$7c,d1
00032650 <AmiBlitz3.ab2@25101>    MOVE.w d1,-6(a4)
00032652 <AmiBlitz3.ab2@25102>     MOVE.w D3,D1
00032658 <AmiBlitz3.ab2@25103> JMP writeword
0003265E <AmiBlitz3.ab2@25106>   MOVE.l destpointer,a0
00032664 <AmiBlitz3.ab2@25107>   SUB.l load_var_addr,a0
0003266A <AmiBlitz3.ab2@25108>   CMP.l #4,a0
0003266E <AmiBlitz3.ab2@25109>   BNE 'l10b
00032674 <AmiBlitz3.ab2@25110>   CLR.l load_var_addr
0003267A <AmiBlitz3.ab2@25111>   MOVE.l destpointer,a4
00032680 <AmiBlitz3.ab2@25112>   CMP.w #$245f,-2(a4)
00032684 <AmiBlitz3.ab2@25113>   BEQ 'l10b
00032688 <AmiBlitz3.ab2@25114>   OR.w #$28,d1
0003268C <AmiBlitz3.ab2@25115>   OR.w d1,-4(a4)
00032692 <AmiBlitz3.ab2@25116>   CMP.w #$2b6d,-4(a4)
00032696 <AmiBlitz3.ab2@25117>   BNE 'd1
0003269A <AmiBlitz3.ab2@25118>   CMP.w -2(a4),d3
0003269E <AmiBlitz3.ab2@25119>   BNE 'd1
000326A4 <AmiBlitz3.ab2@25120>   SUBQ.l #4,destpointer
000326A6 <AmiBlitz3.ab2@25121> RTS
000326A8 <AmiBlitz3.ab2@25124>   MOVE.w d3,d1
000326AE <AmiBlitz3.ab2@25125> JMP writeword
000326B4 <AmiBlitz3.ab2@25128>   JSR writeword
000326B8 <AmiBlitz3.ab2@25129>   BTST #$7,D1
000326BC <AmiBlitz3.ab2@25130>    BNE.b JL_0_E0C6
000326BE <AmiBlitz3.ab2@25131>   MOVE.w D3,D1
000326C4 <AmiBlitz3.ab2@25132> JMP writeword
000326C6 <AmiBlitz3.ab2@25135> RTS
000326C8 <AmiBlitz3.ab2@25139>   MOVE.w D1,-(A7)
000326CC <AmiBlitz3.ab2@25140>   MOVE.w pcodd(PC),D1
000326CE <AmiBlitz3.ab2@25141>   LSR.w #1,D1
000326D2 <AmiBlitz3.ab2@25142>    BCC.b JL_0_E0E2
000326D8 <AmiBlitz3.ab2@25143>   CLR.w pcodd
000326DE <AmiBlitz3.ab2@25144>   MOVE.w add1a2,D1
000326E4 <AmiBlitz3.ab2@25145>    JSR writeword
000326E6 <AmiBlitz3.ab2@25148>   MOVE.w (A7)+,D1
000326E8 <AmiBlitz3.ab2@25149> RTS
000326EA <AmiBlitz3.ab2@25153> add1a2:     Dc.b $52,$4A                                   ;ADDQ.W  #1,A2
000326EC <AmiBlitz3.ab2@25156> pcodd:     Ds.w 1                                          ;add 1 to this for bytes
000326EE <AmiBlitz3.ab2@25157> listadd:   Ds.w 1                                          ;set to 8 if it's a list
000326F0 <AmiBlitz3.ab2@25158> listsize:  Ds.w 1
000326F6 <AmiBlitz3.ab2@25162>   ADDQ.w #1,regnum
000326FE <AmiBlitz3.ab2@25163>   MOVE.b #1,nowdeclare
00032704 <AmiBlitz3.ab2@25164>   CLR.b dimkeep
0003270C <AmiBlitz3.ab2@25165>    CMP.l #"KEEP",-1(a5)
00032710 <AmiBlitz3.ab2@25166>   BNE 'nokeep
00032716 <AmiBlitz3.ab2@25167>   CMP.b #" ",3(a5)
0003271A <AmiBlitz3.ab2@25168>   BNE 'nokeep
0003271C <AmiBlitz3.ab2@25169>   ADDQ.l #3,a5
00032720 <AmiBlitz3.ab2@25172>     CMP.b #" ",(a5)
00032724 <AmiBlitz3.ab2@25173>     BNE '1
00032726 <AmiBlitz3.ab2@25174>    ADDQ #1,a5
0003272A <AmiBlitz3.ab2@25175> BRA '2
00032730 <AmiBlitz3.ab2@25178>   MOVE.l a5,lastsourcepos
00032738 <AmiBlitz3.ab2@25179>   MOVE.b #1,dimkeep
0003273C <AmiBlitz3.ab2@25187>   MOVE.w #$FF9A,D1
00032742 <AmiBlitz3.ab2@25188>   JSR uselib
00032748 <AmiBlitz3.ab2@25191>   CLR.w listadd
0003274C <AmiBlitz3.ab2@25192>   CMP.w #-$7F4D,D0
00032750 <AmiBlitz3.ab2@25193>    BNE.w JL_0_E11E
00032758 <AmiBlitz3.ab2@25194>   MOVE.w #$0008,listadd
0003275C <AmiBlitz3.ab2@25195>   MOVE.w #$FFFA,D1
00032762 <AmiBlitz3.ab2@25196>    JSR uselib
00032768 <AmiBlitz3.ab2@25197>    JSR get1bytemain
0003276E <AmiBlitz3.ab2@25200>   CLR.w nonew
00032774 <AmiBlitz3.ab2@25201>    JSR getparameter
0003277C <AmiBlitz3.ab2@25202>   BTST #$1,flagmask+1
00032780 <AmiBlitz3.ab2@25203>    BEQ.w JUMP_syntaxerr
00032786 <AmiBlitz3.ab2@25204>    JSR JL_0_8E3C
0003278C <AmiBlitz3.ab2@25205>   MOVE.w notshared,D1
00032790 <AmiBlitz3.ab2@25206>    BNE.w JL_0_E198
00032798 <AmiBlitz3.ab2@25207>   MOVE.w $8(A3),temp1
0003279E <AmiBlitz3.ab2@25208>   MOVE.w proceduremode,D2
000327A2 <AmiBlitz3.ab2@25209>    BNE.w JL_0_E176
000327A8 <AmiBlitz3.ab2@25210>   MOVE.w globalvarpointer,-(A7)
000327B0 <AmiBlitz3.ab2@25211>   MOVE.w $4(A3),globalvarpointer
000327B6 <AmiBlitz3.ab2@25212>   ADDQ.w #4,globalvarpointer
000327BA <AmiBlitz3.ab2@25213>    BSR.w write_dim_code
000327C0 <AmiBlitz3.ab2@25214>   MOVE.w (A7)+,globalvarpointer
000327C4 <AmiBlitz3.ab2@25215> BRA.w JL_0_E1BA
000327CA <AmiBlitz3.ab2@25226>   MOVE.w globalvarpointer,-(A7)
000327D0 <AmiBlitz3.ab2@25227>             MOVE.w proceduremode,-(a7)
000327D6 <AmiBlitz3.ab2@25228>             CLR.w proceduremode
000327DE <AmiBlitz3.ab2@25229>   MOVE.w $4(A3),globalvarpointer
000327E4 <AmiBlitz3.ab2@25230>   ADDQ.w #4,globalvarpointer
000327E8 <AmiBlitz3.ab2@25231>    BSR.w write_dim_code
000327EE <AmiBlitz3.ab2@25232>    MOVE.w (a7)+,proceduremode
000327F4 <AmiBlitz3.ab2@25233>   MOVE.w (A7)+,globalvarpointer
000327F8 <AmiBlitz3.ab2@25234> BRA.w JL_0_E1BA
00032800 <AmiBlitz3.ab2@25237>   MOVE.w #$FFFF,temp1
00032804 <AmiBlitz3.ab2@25238>   MOVE.w listadd(PC),D1
00032808 <AmiBlitz3.ab2@25239>    BEQ.w JL_0_E1B6
00032810 <AmiBlitz3.ab2@25240>   MOVE.w #$4000,temp1
00032816 <AmiBlitz3.ab2@25241>   BSET #$0,$6(A3)
0003281C <AmiBlitz3.ab2@25244>         TST.w proceduremode
00032820 <AmiBlitz3.ab2@25245>        BNE 'l1
00032826 <AmiBlitz3.ab2@25246>        MOVE.w locvaroff,-(a7)
0003282A <AmiBlitz3.ab2@25249>   BSR.w write_dim_code
00032830 <AmiBlitz3.ab2@25250>         TST.w proceduremode
00032834 <AmiBlitz3.ab2@25251>         BNE JL_0_E1BA
0003283A <AmiBlitz3.ab2@25252>        MOVE.w (A7)+,locvaroff
00032840 <AmiBlitz3.ab2@25255>   JSR get1bytemain
00032844 <AmiBlitz3.ab2@25256>   CMP.w #$2C,D0
00032848 <AmiBlitz3.ab2@25257>    BNE.w JL_0_E1CE
0003284E <AmiBlitz3.ab2@25258>    JSR get1bytemain
00032852 <AmiBlitz3.ab2@25259> BRA.w JL_0_E0FC
00032854 <AmiBlitz3.ab2@25262> RTS
0003285C <AmiBlitz3.ab2@25265>   MOVE.w #$FFFF,nonew                                      ;#-1,nonew org source
00032862 <AmiBlitz3.ab2@25266>   MOVE.w beginarr,D1
00032868 <AmiBlitz3.ab2@25267>    JSR writeword
0003286A <AmiBlitz3.ab2@25268>   MOVEQ.l #$00,D1
00032870 <AmiBlitz3.ab2@25269>    JSR writeword
00032872 <AmiBlitz3.ab2@25270>   MOVEQ.l #$04,D1
0003287A <AmiBlitz3.ab2@25271>   BTST #$0,flagmask+1
0003287E <AmiBlitz3.ab2@25272>    BNE.w write_dim_code__pointer
00032882 <AmiBlitz3.ab2@25273>   MOVE.w $8(A2),D1
00032886 <AmiBlitz3.ab2@25276>   ADD.w listadd(PC),D1                                     ;size of one element.
0003288C <AmiBlitz3.ab2@25277>   MOVE.w D1,listsize
00032892 <AmiBlitz3.ab2@25278>    JSR writeword
00032898 <AmiBlitz3.ab2@25279>   CLR.w temp2                                              ;# dim's got
0003289A <AmiBlitz3.ab2@25280>   MOVE.l A3,-(A7)
000328A0 <AmiBlitz3.ab2@25283>   ADDQ.w #1,temp2
000328A2 <AmiBlitz3.ab2@25284>   MOVEQ.l #$03,D2                                          ;get word
000328A8 <AmiBlitz3.ab2@25285>   MOVE.w notshared,-(a7)
000328AE <AmiBlitz3.ab2@25286>    JSR eval
000328B4 <AmiBlitz3.ab2@25287>   MOVE.w (a7)+,notshared
000328BA <AmiBlitz3.ab2@25288>   TST.b debugmode
000328BE <AmiBlitz3.ab2@25289>    BEQ.w write_dim_code__norerr0
000328C2 <AmiBlitz3.ab2@25290>   MOVE.w #$C30F,D1
000328C6 <AmiBlitz3.ab2@25296>       MOVE.w #$5281,d1
000328CC <AmiBlitz3.ab2@25297>       JSR writeword
000328D2 <AmiBlitz3.ab2@25298>       MOVE.l #$4c010800,d1                                 ;dim >65536 fix
000328D8 <AmiBlitz3.ab2@25299>       JSR writelong
000328DE <AmiBlitz3.ab2@25300>   MOVE.w proceduremode,D2
000328E2 <AmiBlitz3.ab2@25301>    BEQ.w write_dim_code__global
000328E8 <AmiBlitz3.ab2@25302>   SUBQ.w #4,locvaroff
000328F2 <AmiBlitz3.ab2@25303>   MOVE.w locvaroff,putarr+2
000328F6 <AmiBlitz3.ab2@25304> BRA.w write_dim_code__doit
000328FC <AmiBlitz3.ab2@25307> JMP syntaxerr
00032906 <AmiBlitz3.ab2@25310>   MOVE.w globalvarpointer,putarr+2
0003290C <AmiBlitz3.ab2@25311>   ADDQ.w #4,globalvarpointer
00032912 <AmiBlitz3.ab2@25314>   TST.b dimkeep
00032916 <AmiBlitz3.ab2@25315>            BEQ write_dim_code__doit_l1
00032918 <AmiBlitz3.ab2@25316>       MOVEQ #0,d1
0003291E <AmiBlitz3.ab2@25317>       MOVE.w putarr+2,d1
00032924 <AmiBlitz3.ab2@25318>       OR.l  #$222d0000,d1
0003292A <AmiBlitz3.ab2@25319>       MOVE.w proceduremode,D2
0003292E <AmiBlitz3.ab2@25320>       BEQ write_dim_code__doit_l2
00032934 <AmiBlitz3.ab2@25321>       TST.w notshared
00032938 <AmiBlitz3.ab2@25322>       BEQ write_dim_code__doit_l2
0003293E <AmiBlitz3.ab2@25323>       SUB.l #$00010000,d1
00032944 <AmiBlitz3.ab2@25326>   JSR writelong
0003294A <AmiBlitz3.ab2@25329>   MOVE.l putarr,D1
00032950 <AmiBlitz3.ab2@25330>       TST.w notshared
00032954 <AmiBlitz3.ab2@25331>       BNE write_dim_code__doit_l1a
0003295A <AmiBlitz3.ab2@25332>       JSR writelong
0003295E <AmiBlitz3.ab2@25333> BRA write_dim_code__doit_l4
00032964 <AmiBlitz3.ab2@25336>   JSR pokela5d
00032968 <AmiBlitz3.ab2@25339>   CMP.w #$2C,D0
0003296C <AmiBlitz3.ab2@25340>    BEQ.w write_dim_code__loop
00032970 <AmiBlitz3.ab2@25341>   CMP.w #$29,D0
00032974 <AmiBlitz3.ab2@25342>    BNE.w JUMP_syntaxerr
00032976 <AmiBlitz3.ab2@25343>   MOVEA.l (A7)+,A3
0003297C <AmiBlitz3.ab2@25344>   MOVE.w temp1,D1
00032980 <AmiBlitz3.ab2@25345>    BMI.w write_dim_code__nocare
00032984 <AmiBlitz3.ab2@25349>   BTST #$E,D1
00032988 <AmiBlitz3.ab2@25350>    BEQ.w write_dim_code__notl
00032990 <AmiBlitz3.ab2@25351>   CMPI.w #$1,temp2
00032994 <AmiBlitz3.ab2@25352>    BNE.w JUMP_redimerr
00032998 <AmiBlitz3.ab2@25353> BRA.w write_dim_code__nocare
0003299E <AmiBlitz3.ab2@25356> JMP redimerr
000329A4 <AmiBlitz3.ab2@25359>   CMP.w temp2,D1
000329A8 <AmiBlitz3.ab2@25360>    BNE.w JUMP_redimerr                                      ;range too long
000329AE <AmiBlitz3.ab2@25363>   LEA globalvarpointer,A0
000329B4 <AmiBlitz3.ab2@25364>   MOVE.w proceduremode,D1
000329B8 <AmiBlitz3.ab2@25365>   BEQ.w write_dim_code__gskip
000329BE <AmiBlitz3.ab2@25366>   LEA locvaroff,A0
000329C4 <AmiBlitz3.ab2@25369>   MOVE.W  extraword,(A0)
000329C8 <AmiBlitz3.ab2@25370>   BRA.W   write_dim_code__care
000329D0 <AmiBlitz3.ab2@25373>   MOVE.w temp2,$8(A3)                                      ;set # dim's
000329D6 <AmiBlitz3.ab2@25376>   LEA doarr,A0
000329DC <AmiBlitz3.ab2@25377>   MOVE.w $4(A3),$2(A0)
000329E4 <AmiBlitz3.ab2@25378>   MOVE.w putarr+2,$6(A0)
000329E6 <AmiBlitz3.ab2@25379>   MOVE.l (A0)+,D1
000329EC <AmiBlitz3.ab2@25380>    JSR writelong
000329EE <AmiBlitz3.ab2@25381>   MOVE.l (A0),D1
000329F4 <AmiBlitz3.ab2@25382>    JSR writelong
000329FA <AmiBlitz3.ab2@25383>    TST.b dimkeep
000329FE <AmiBlitz3.ab2@25384>   BNE write_dim_code__care_l3
00032A02 <AmiBlitz3.ab2@25387>   MOVE.w #$C400,D1
00032A06 <AmiBlitz3.ab2@25388> BRA write_dim_code__care_l2
00032A0A <AmiBlitz3.ab2@25391>   MOVE.w #$C405,d1
00032A10 <AmiBlitz3.ab2@25394>   MOVE.w proceduremode,D2
00032A14 <AmiBlitz3.ab2@25395>    BEQ.w write_dim_code__isg
00032A1A <AmiBlitz3.ab2@25396>    TST.w notshared
00032A1E <AmiBlitz3.ab2@25397>    BEQ write_dim_code__isg
00032A20 <AmiBlitz3.ab2@25398>   ADDQ.w #1,D1
00032A24 <AmiBlitz3.ab2@25401>   MOVE.w listadd(PC),D2
00032A28 <AmiBlitz3.ab2@25402>    BEQ.w write_dim_code__isrg
00032A2A <AmiBlitz3.ab2@25403>   MOVE.w D1,-(A7)
00032A2E <AmiBlitz3.ab2@25404>   MOVE.w setles(PC),D1
00032A34 <AmiBlitz3.ab2@25405>    JSR writeword
00032A38 <AmiBlitz3.ab2@25406>   MOVE.w listsize(PC),D1
00032A3E <AmiBlitz3.ab2@25407>    JSR writeword
00032A40 <AmiBlitz3.ab2@25408>   MOVE.w (A7)+,D1
00032A42 <AmiBlitz3.ab2@25409>   ADDQ.w #3,D1
00032A46 <AmiBlitz3.ab2@25412> BRA.w Atokejsr
00032A4C <AmiBlitz3.ab2@25419>     MOVE.l #$f23c4400,d1
00032A52 <AmiBlitz3.ab2@25421>   MOVE.w regnum,d0
00032A54 <AmiBlitz3.ab2@25422>   ASL.w #7,d0
00032A56 <AmiBlitz3.ab2@25423>   OR.w d0,d1
00032A5C <AmiBlitz3.ab2@25424>   JSR writelong
00032A62 <AmiBlitz3.ab2@25430>     MOVE.l #$40490fd9,d1
00032A68 <AmiBlitz3.ab2@25432>   JSR writelong
00032A6E <AmiBlitz3.ab2@25433> JMP get1bytemain
00032A72 <AmiBlitz3.ab2@25437> setles:   Dc.b $38,$3C,$00,$00                             ;MOVE.W  #$0000,D4
00032A76 <AmiBlitz3.ab2@25444> vbr:                Ds.l 1
00032A78 <AmiBlitz3.ab2@25445> cfetchmode:         Ds.w 1                               ;1=fetching a constant
00032A7E <AmiBlitz3.ab2@25447> constlibs           Dc.w $FDA7,$FCDF,$FD43               ;64935,64735,64835  org source
00032A82 <AmiBlitz3.ab2@25451> constpcat:          Ds.l 1
00032A86 <AmiBlitz3.ab2@25452> constlibat:         Ds.l 1
00032A8A <AmiBlitz3.ab2@25453> constmaxpc:         Dc.l $400
00032A8E <AmiBlitz3.ab2@25455> stacksize:          Dc.l 32768                           ;stackfuck org source
00032A92 <AmiBlitz3.ab2@25456> currentlabeladdr:   Dc.l labelbase                       ;lastrescon org source
00032A96 <AmiBlitz3.ab2@25457> currentmacroaddr:   Dc.l macrobase                       ;lastresmac org source
00032A9A <AmiBlitz3.ab2@25458> lastrestype:        Dc.l newtype_string
00032A9C <AmiBlitz3.ab2@25459> rescnt:             Ds.w 1                               ;# resident
00032A9E <AmiBlitz3.ab2@25460> state_of_residents: Ds.w 1                               ;reschg org source ;flag for if res's have changed
00032AA2 <AmiBlitz3.ab2@25461> resat:              Dc.l residents_table                 ;??looks like not used anymore??
00032AA4 <AmiBlitz3.ab2@25462> linedone:           Ds.w 1
00032ABA <AmiBlitz3.ab2@25463> directbuffer:       Ds.w 11                              ;dirpcat  dc.w 0 org source
00032ABE <AmiBlitz3.ab2@25472>   Dc.l 0                                        ; bytetobyte
00032AC2 <AmiBlitz3.ab2@25473>   Dc.l convert_byte_to_word                     ; bytetoword
00032AC6 <AmiBlitz3.ab2@25474>   Dc.l convert_byte_to_long                     ; bytetolong
00032ACA <AmiBlitz3.ab2@25475>   Dc.l convert_byte_to_quick                    ; bytetoquick
00032ACE <AmiBlitz3.ab2@25476>   Dc.l convert_byte_to_float                    ; bytetofloat
00032AD2 <AmiBlitz3.ab2@25477>   Dc.l convert_byte_to_long                     ; bytetolong
00032AD6 <AmiBlitz3.ab2@25478>   Dc.l error_convert_types                      ; noconerr
00032ADA <AmiBlitz3.ab2@25481>   Dc.l convert_word_to_byte                     ; wordtobyte
00032ADE <AmiBlitz3.ab2@25482>   Dc.l 0                                        ; wordtoword
00032AE2 <AmiBlitz3.ab2@25483>   Dc.l convert_word_to_long                     ; wordtolong
00032AE6 <AmiBlitz3.ab2@25484>   Dc.l convert_word_to_quick                    ; wordtoquick
00032AEA <AmiBlitz3.ab2@25485>   Dc.l convert_word_to_float                    ; wordtofloat
00032AEE <AmiBlitz3.ab2@25486>   Dc.l convert_word_to_long                     ; wordtolong
00032AF2 <AmiBlitz3.ab2@25487>   Dc.l error_convert_types                      ; noconerr
00032AF6 <AmiBlitz3.ab2@25490>   Dc.l convert_long_to_byte                     ; longtobyte
00032AFA <AmiBlitz3.ab2@25491>   Dc.l convert_long_to_word                     ; longtoword
00032AFE <AmiBlitz3.ab2@25492>   Dc.l 0                                        ; longtolong
00032B02 <AmiBlitz3.ab2@25493>   Dc.l convert_long_to_quick                    ; longtoquick
00032B06 <AmiBlitz3.ab2@25494>   Dc.l convert_long_to_float                    ; longtofloat
00032B0A <AmiBlitz3.ab2@25495>   Dc.l 0                                        ; longtolong
00032B0E <AmiBlitz3.ab2@25496>   Dc.l error_convert_types                      ; noconerr
00032B12 <AmiBlitz3.ab2@25499>   Dc.l convert_quick_to_byte                    ; quicktobyte
00032B16 <AmiBlitz3.ab2@25500>   Dc.l convert_quick_to_word                    ; quicktoword
00032B1A <AmiBlitz3.ab2@25501>   Dc.l convert_quick_to_long                    ; quicktolong
00032B1E <AmiBlitz3.ab2@25502>   Dc.l 0                                        ; quicktoquick
00032B22 <AmiBlitz3.ab2@25503>   Dc.l convert_quick_to_float                   ; quicktofloat
00032B26 <AmiBlitz3.ab2@25504>   Dc.l convert_quick_to_long                    ; quicktolong
00032B2A <AmiBlitz3.ab2@25505>   Dc.l error_convert_types                      ; noconerr
00032B2E <AmiBlitz3.ab2@25508>   Dc.l convert_float_to_byte                    ; floattobyte
00032B32 <AmiBlitz3.ab2@25509>   Dc.l convert_float_to_word                    ; floattoword
00032B36 <AmiBlitz3.ab2@25510>   Dc.l convert_float_to_long                    ; floattolong
00032B3A <AmiBlitz3.ab2@25511>   Dc.l convert_float_to_quick                   ; floattoquick
00032B3E <AmiBlitz3.ab2@25512>   Dc.l 0                                        ; floattofloat
00032B42 <AmiBlitz3.ab2@25513>   Dc.l convert_float_to_long                    ; floattolong
00032B46 <AmiBlitz3.ab2@25514>   Dc.l error_convert_types                      ; noconerr
00032B4A <AmiBlitz3.ab2@25517>   Dc.l convert_long_to_byte                     ; longtobyte
00032B4E <AmiBlitz3.ab2@25518>   Dc.l convert_long_to_word                     ; longtoword
00032B52 <AmiBlitz3.ab2@25519>   Dc.l 0                                        ; longtolong
00032B56 <AmiBlitz3.ab2@25520>   Dc.l convert_long_to_quick                    ; longtoquick
00032B5A <AmiBlitz3.ab2@25521>   Dc.l convert_long_to_float                    ; longtofloat
00032B5E <AmiBlitz3.ab2@25522>   Dc.l 0                                        ; longtolong
00032B62 <AmiBlitz3.ab2@25523>   Dc.l error_convert_types                      ; noconerr
00032B66 <AmiBlitz3.ab2@25526>   Dc.l error_convert_types                      ; noconerr
00032B6A <AmiBlitz3.ab2@25527>   Dc.l error_convert_types                      ; noconerr
00032B6E <AmiBlitz3.ab2@25528>   Dc.l string_to_long                           ; stringtolong
00032B72 <AmiBlitz3.ab2@25529>   Dc.l error_convert_types                      ; noconerr
00032B76 <AmiBlitz3.ab2@25530>   Dc.l error_convert_types                      ; noconerr
00032B7A <AmiBlitz3.ab2@25531>   Dc.l string_to_long                           ; stringtolong
00032B7E <AmiBlitz3.ab2@25532>   Ds.l 1
00032B80 <AmiBlitz3.ab2@25538>   Dc.b $00,$2B                                  ;+ ; add
00032B84 <AmiBlitz3.ab2@25539>   Dc.l do_plus_byte                             ;doplusb
00032B88 <AmiBlitz3.ab2@25540>   Dc.l do_plus_word                             ;doplusw
00032B8C <AmiBlitz3.ab2@25541>   Dc.l do_plus_long                             ;doplusl
00032B90 <AmiBlitz3.ab2@25542>   Dc.l do_plus_long                             ;doplusl
00032B94 <AmiBlitz3.ab2@25543>   Dc.l do_plus_float                            ;doplusf
00032B98 <AmiBlitz3.ab2@25544>   Ds.l 1
00032B9C <AmiBlitz3.ab2@25545>   Dc.l add_strings                              ;addstrings
00032B9E <AmiBlitz3.ab2@25546>   Dc.b $0B,$B8
00032BA0 <AmiBlitz3.ab2@25548>   Dc.b $00,$2D                                  ;- ; sub
00032BA4 <AmiBlitz3.ab2@25549>   Dc.l do_minus_byte                            ;dominusb
00032BA8 <AmiBlitz3.ab2@25550>   Dc.l do_minus_word                            ;dominusw
00032BAC <AmiBlitz3.ab2@25551>   Dc.l do_minus_long                            ;dominusl
00032BB0 <AmiBlitz3.ab2@25552>   Dc.l do_minus_long                            ;dominusl
00032BB4 <AmiBlitz3.ab2@25553>   Dc.l do_minus_float                           ;dominusf
00032BBC <AmiBlitz3.ab2@25554>   Ds.l 2
00032BBE <AmiBlitz3.ab2@25555>   Dc.b $0B,$B8
00032BC0 <AmiBlitz3.ab2@25557>   Dc.b $00,$2A                                  ;* ; mul
00032BC4 <AmiBlitz3.ab2@25558>   Dc.l do_times_byte                            ;dotimesb
00032BC8 <AmiBlitz3.ab2@25559>   Dc.l do_times_word                            ;dotimesw
00032BCC <AmiBlitz3.ab2@25560>   Dc.l do_times_long                            ;dotimesl
00032BD0 <AmiBlitz3.ab2@25561>   Dc.l do_times_quick                           ;dotimesq
00032BD4 <AmiBlitz3.ab2@25562>   Dc.l do_times_float                           ;dotimesf
00032BDC <AmiBlitz3.ab2@25563>   Ds.l 2
00032BDE <AmiBlitz3.ab2@25564>   Dc.b $0F,$A0
00032BE0 <AmiBlitz3.ab2@25566>   Dc.b $00,$2F                                  ;/ ; div
00032BE4 <AmiBlitz3.ab2@25567>   Dc.l do_Div_byte                              ;dodivb
00032BE8 <AmiBlitz3.ab2@25568>   Dc.l do_Div_word                              ;dodivb
00032BEC <AmiBlitz3.ab2@25569>   Dc.l do_Div_long                              ;dodivl
00032BF0 <AmiBlitz3.ab2@25570>   Dc.l do_Div_quick                             ;dodivq
00032BF4 <AmiBlitz3.ab2@25571>   Dc.l do_Div_float                             ;dodivf
00032BFC <AmiBlitz3.ab2@25572>   Ds.l 2
00032BFE <AmiBlitz3.ab2@25573>   Dc.b $0F,$A0
00032C00 <AmiBlitz3.ab2@25575>   Dc.b $00,$26                                  ;& ; & int
00032C04 <AmiBlitz3.ab2@25576>   Dc.l do_AND_byte                              ;doandb
00032C08 <AmiBlitz3.ab2@25577>   Dc.l do_AND_word                              ;doandw
00032C0C <AmiBlitz3.ab2@25578>   Dc.l do_AND_long                              ;doandl
00032C10 <AmiBlitz3.ab2@25579>   Dc.l do_AND_long                              ;doandl
00032C1C <AmiBlitz3.ab2@25580>   Ds.l 3
00032C1E <AmiBlitz3.ab2@25581>   Dc.b $13,$88
00032C20 <AmiBlitz3.ab2@25583>   Dc.b $00,$7C                                  ;| ;or int ;
00032C24 <AmiBlitz3.ab2@25584>   Dc.l do_OR_byte                               ;doorb
00032C28 <AmiBlitz3.ab2@25585>   Dc.l do_OR_word                               ;doorw
00032C2C <AmiBlitz3.ab2@25586>   Dc.l do_OR_long                               ;doorl
00032C30 <AmiBlitz3.ab2@25587>   Dc.l do_OR_long                               ;doorl
00032C3C <AmiBlitz3.ab2@25588>   Ds.l 3
00032C3E <AmiBlitz3.ab2@25589>   Dc.b $13,$88
00032C40 <AmiBlitz3.ab2@25591>   Dc.b $80,$42                                  ; AND int  ;(opand-opabcd)/$1c+$8000+fnum
00032C44 <AmiBlitz3.ab2@25592>   Dc.l do_AND_byte                              ;doandb
00032C48 <AmiBlitz3.ab2@25593>   Dc.l do_AND_word                              ;doandw
00032C4C <AmiBlitz3.ab2@25594>   Dc.l do_AND_long                              ;doandl
00032C50 <AmiBlitz3.ab2@25595>   Dc.l do_AND_long                              ;doandl
00032C5C <AmiBlitz3.ab2@25596>   Ds.l 3
00032C5E <AmiBlitz3.ab2@25597>   Dc.b $03,$E8
00032C60 <AmiBlitz3.ab2@25599>   Dc.b $80,$8A                                  ; OR int   ;(opor-opabcd)/$1c+$8000+fnum
00032C64 <AmiBlitz3.ab2@25600>   Dc.l do_OR_byte                               ;doorb
00032C68 <AmiBlitz3.ab2@25601>   Dc.l do_OR_word                               ;doorw
00032C6C <AmiBlitz3.ab2@25602>   Dc.l do_OR_long                               ;doorl
00032C70 <AmiBlitz3.ab2@25603>   Dc.l do_OR_long                               ;doorl
00032C7C <AmiBlitz3.ab2@25604>   Ds.l 3
00032C7E <AmiBlitz3.ab2@25605>   Dc.b $03,$E8
00032C80 <AmiBlitz3.ab2@25607>   Dc.b $80,$73                                  ; EOR int  ;(opeor-opabcd)/$1c+$8000+fnum
00032C84 <AmiBlitz3.ab2@25608>   Dc.l do_EOR_byte                              ;doeorb
00032C88 <AmiBlitz3.ab2@25609>   Dc.l do_EOR_word                              ;doeorw
00032C8C <AmiBlitz3.ab2@25610>   Dc.l do_EOR_long                              ;doeorl
00032C90 <AmiBlitz3.ab2@25611>   Dc.l do_EOR_long                              ;doeorl
00032C9C <AmiBlitz3.ab2@25612>   Ds.l 3
00032C9E <AmiBlitz3.ab2@25613>   Dc.b $03,$E8
00032CA0 <AmiBlitz3.ab2@25615>   Dc.b $80,$7C                                  ; LSL int  ;(oplsl-opabcd)/$1c+$8000+fnum
00032CA4 <AmiBlitz3.ab2@25616>   Dc.l do_LSL                                   ;dolslb
00032CA8 <AmiBlitz3.ab2@25617>   Dc.l do_LSL                                   ;dolslw
00032CAC <AmiBlitz3.ab2@25618>   Dc.l do_LSL                                   ;dolsll
00032CB0 <AmiBlitz3.ab2@25619>   Dc.l do_LSL                                   ;dolsll
00032CBC <AmiBlitz3.ab2@25620>   Ds.l 3
00032CBE <AmiBlitz3.ab2@25621>   Dc.b $17,$70
00032CC0 <AmiBlitz3.ab2@25623>   Dc.b $80,$44                                  ; ASL int  ;(opasl-opabcd)/$1c+$8000+fnum
00032CC4 <AmiBlitz3.ab2@25624>   Dc.l do_LSL                                   ;dolslb
00032CC8 <AmiBlitz3.ab2@25625>   Dc.l do_LSL                                   ;dolslw
00032CCC <AmiBlitz3.ab2@25626>   Dc.l do_LSL                                   ;dolsll
00032CD0 <AmiBlitz3.ab2@25627>   Dc.l do_LSL                                   ;dolsll
00032CDC <AmiBlitz3.ab2@25628>   Ds.l 3
00032CDE <AmiBlitz3.ab2@25629>   Dc.b $17,$70
00032CE0 <AmiBlitz3.ab2@25631>   Dc.b $80,$7D                                  ; LSR int  ;(oplsr-opabcd)/$1c+$8000+fnum
00032CE4 <AmiBlitz3.ab2@25632>   Dc.l do_LSR                                   ;dolsrb
00032CE8 <AmiBlitz3.ab2@25633>   Dc.l do_LSR                                   ;dolsrw
00032CEC <AmiBlitz3.ab2@25634>   Dc.l do_LSR                                   ;dolsrl
00032CF0 <AmiBlitz3.ab2@25635>   Dc.l do_LSR                                   ;dolsrl
00032CFC <AmiBlitz3.ab2@25636>   Ds.l 3
00032CFE <AmiBlitz3.ab2@25637>   Dc.b $17,$70
00032D00 <AmiBlitz3.ab2@25639>   Dc.b $80,$45                                  ; ASR int  ;(opasr-opabcd)/$1c+$8000+fnum
00032D04 <AmiBlitz3.ab2@25640>   Dc.l do_ASR                                   ;doasrb
00032D08 <AmiBlitz3.ab2@25641>   Dc.l do_ASR                                   ;doasrw
00032D0C <AmiBlitz3.ab2@25642>   Dc.l do_ASR                                   ;doasrl
00032D10 <AmiBlitz3.ab2@25643>   Dc.l do_ASR                                   ;doasrl
00032D1C <AmiBlitz3.ab2@25644>   Ds.l 3
00032D1E <AmiBlitz3.ab2@25645>   Dc.b $17,$70
00032D20 <AmiBlitz3.ab2@25647>   Dc.b $80,$B9                                  ;mod       ;$8006+tnum
00032D24 <AmiBlitz3.ab2@25648>   Dc.l do_mod_byte                              ;domodb
00032D28 <AmiBlitz3.ab2@25649>   Dc.l do_mod_word                              ;domodw
00032D2C <AmiBlitz3.ab2@25650>   Dc.l do_mod_long                              ;domodl
00032D30 <AmiBlitz3.ab2@25651>   Dc.l do_mod_quick                             ;domodq
00032D34 <AmiBlitz3.ab2@25652>   Dc.l do_mod_float                             ;domodf
00032D3C <AmiBlitz3.ab2@25653>   Ds.l 2
00032D3E <AmiBlitz3.ab2@25654>   Dc.b $13,$88
00032D40 <AmiBlitz3.ab2@25657>   Dc.b $00,$5E                                  ;^
00032D44 <AmiBlitz3.ab2@25658>   Dc.l do_pow                                   ;dopow
00032D48 <AmiBlitz3.ab2@25659>   Dc.l do_pow                                   ;dopow
00032D4C <AmiBlitz3.ab2@25660>   Dc.l do_pow                                   ;dopow
00032D50 <AmiBlitz3.ab2@25661>   Dc.l do_pow                                   ;dopow
00032D54 <AmiBlitz3.ab2@25662>   Dc.l do_pow                                   ;dopow
00032D5C <AmiBlitz3.ab2@25663>   Ds.l 2
00032D5E <AmiBlitz3.ab2@25664>   Dc.b $1B,$58                                  ;7000
00032D60 <AmiBlitz3.ab2@25667>   Dc.b $00,$3D                                  ;=
00032D64 <AmiBlitz3.ab2@25668>   Dc.l do_equal_byte                            ;doeqb
00032D68 <AmiBlitz3.ab2@25669>   Dc.l do_equal_word                            ;doeqw
00032D6C <AmiBlitz3.ab2@25670>   Dc.l do_equal_long                            ;doeql
00032D70 <AmiBlitz3.ab2@25671>   Dc.l do_equal_long                            ;doeql
00032D74 <AmiBlitz3.ab2@25672>   Dc.l do_equal_float                           ;doeqf
00032D78 <AmiBlitz3.ab2@25673>   Dc.l do_equal_long                            ;doeql
00032D7C <AmiBlitz3.ab2@25674>   Dc.l do_equal_string                          ;doeqs
00032D7E <AmiBlitz3.ab2@25675>   Dc.b $07,$D0                                  ;2000
00032D80 <AmiBlitz3.ab2@25678>   Dc.b $3C,$3E                                  ;<>
00032D84 <AmiBlitz3.ab2@25679>   Dc.l do_not_equal_byte                        ;doneb
00032D88 <AmiBlitz3.ab2@25680>   Dc.l do_not_equal_word                        ;donew
00032D8C <AmiBlitz3.ab2@25681>   Dc.l do_not_equal_long                        ;donel
00032D90 <AmiBlitz3.ab2@25682>   Dc.l do_not_equal_long                        ;donel
00032D94 <AmiBlitz3.ab2@25683>   Dc.l do_not_equal_float                       ;donef
00032D98 <AmiBlitz3.ab2@25684>   Dc.l do_not_equal_long                        ;donel
00032D9C <AmiBlitz3.ab2@25685>   Dc.l do_not_equal_string                      ;dones
00032D9E <AmiBlitz3.ab2@25686>   Dc.b $07,$D0                                  ;2000
00032DA0 <AmiBlitz3.ab2@25689>   Dc.b $00,$3C                                  ;<
00032DA4 <AmiBlitz3.ab2@25690>   Dc.l do_littler_byte                          ;doltb
00032DA8 <AmiBlitz3.ab2@25691>   Dc.l do_littler_word                          ;doltw
00032DAC <AmiBlitz3.ab2@25692>   Dc.l do_littler_long                          ;doltl
00032DB0 <AmiBlitz3.ab2@25693>   Dc.l do_littler_long                          ;doltl
00032DB4 <AmiBlitz3.ab2@25694>   Dc.l do_littler_float                         ;doltf
00032DB8 <AmiBlitz3.ab2@25695>   Dc.l do_littler_long                          ;doltl
00032DBC <AmiBlitz3.ab2@25696>   Dc.l do_littler_string                        ;dolts
00032DBE <AmiBlitz3.ab2@25697>   Dc.b $07,$D0                                  ;2000
00032DC0 <AmiBlitz3.ab2@25700>   Dc.b $3C,$3D                                  ;<=
00032DC4 <AmiBlitz3.ab2@25701>   Dc.l do_littler_equal_byte                    ;doleb
00032DC8 <AmiBlitz3.ab2@25702>   Dc.l do_littler_equal_word                    ;doleb
00032DCC <AmiBlitz3.ab2@25703>   Dc.l do_littler_equal_long                    ;dolel
00032DD0 <AmiBlitz3.ab2@25704>   Dc.l do_littler_equal_long                    ;dolel
00032DD4 <AmiBlitz3.ab2@25705>   Dc.l do_littler_equal_float                   ;dolef
00032DD8 <AmiBlitz3.ab2@25706>   Dc.l do_littler_equal_long                    ;dolel
00032DDC <AmiBlitz3.ab2@25707>   Dc.l do_littler_equal_string                  ;doles
00032DDE <AmiBlitz3.ab2@25708>   Dc.b $07,$D0                                  ;2000
00032DE0 <AmiBlitz3.ab2@25711>   Dc.b $00,$3E                                  ;>
00032DE4 <AmiBlitz3.ab2@25712>   Dc.l do_greater_byte                          ;dogtb
00032DE8 <AmiBlitz3.ab2@25713>   Dc.l do_greater_word                          ;dogtw
00032DEC <AmiBlitz3.ab2@25714>   Dc.l do_greater_long                          ;dogtl
00032DF0 <AmiBlitz3.ab2@25715>   Dc.l do_greater_long                          ;dogtl
00032DF4 <AmiBlitz3.ab2@25716>   Dc.l do_greater_float                         ;dogtf
00032DF8 <AmiBlitz3.ab2@25717>   Dc.l do_greater_long                          ;dogtl
00032DFC <AmiBlitz3.ab2@25718>   Dc.l do_greater_string                        ;dogts
00032DFE <AmiBlitz3.ab2@25719>   Dc.b $07,$D0                                  ;2000
00032E00 <AmiBlitz3.ab2@25722>   Dc.b $3E,$3D                                  ;>=
00032E04 <AmiBlitz3.ab2@25723>   Dc.l do_greater_equal_byte                    ;dogeb
00032E08 <AmiBlitz3.ab2@25724>   Dc.l do_greater_equal_word                    ;dogew
00032E0C <AmiBlitz3.ab2@25725>   Dc.l do_greater_equal_long                    ;dogel
00032E10 <AmiBlitz3.ab2@25726>   Dc.l do_greater_equal_long                    ;dogel
00032E14 <AmiBlitz3.ab2@25727>   Dc.l do_greater_equal_float                   ;dogef
00032E18 <AmiBlitz3.ab2@25728>   Dc.l do_greater_equal_long                    ;dogel
00032E1C <AmiBlitz3.ab2@25729>   Dc.l do_greater_equal_string                  ;doges
00032E1E <AmiBlitz3.ab2@25730>   Dc.b $07,$D0                                  ;2000
00032E20 <AmiBlitz3.ab2@25732>   Dc.b $80,$CD                                  ;$8000+26+tnum
00032E24 <AmiBlitz3.ab2@25733>   Dc.l _BitTst
00032E28 <AmiBlitz3.ab2@25734>   Dc.l _BitTst
00032E2C <AmiBlitz3.ab2@25735>   Dc.l _BitTst
00032E30 <AmiBlitz3.ab2@25736>   Dc.l _BitTst
00032E3C <AmiBlitz3.ab2@25737>   Ds.l 3
00032E3E <AmiBlitz3.ab2@25738>   Dc.b $1F,$40                                  ;8000
00032E40 <AmiBlitz3.ab2@25740>   Dc.b $80,$CE                                  ;$8000+27+tnum
00032E44 <AmiBlitz3.ab2@25741>   Dc.l _BitSet
00032E48 <AmiBlitz3.ab2@25742>   Dc.l _BitSet
00032E4C <AmiBlitz3.ab2@25743>   Dc.l _BitSet
00032E50 <AmiBlitz3.ab2@25744>   Dc.l _BitSet
00032E5C <AmiBlitz3.ab2@25745>   Ds.l 3
00032E5E <AmiBlitz3.ab2@25746>   Dc.b $1F,$40                                  ;8000
00032E60 <AmiBlitz3.ab2@25748>   Dc.b $80,$CF                                  ;$8000+28+tnum
00032E64 <AmiBlitz3.ab2@25749>   Dc.l _BitClr
00032E68 <AmiBlitz3.ab2@25750>   Dc.l _BitClr
00032E6C <AmiBlitz3.ab2@25751>   Dc.l _BitClr
00032E70 <AmiBlitz3.ab2@25752>   Dc.l _BitClr
00032E7C <AmiBlitz3.ab2@25753>   Ds.l 3
00032E7E <AmiBlitz3.ab2@25754>   Dc.b $1F,$40                                  ;8000
00032E80 <AmiBlitz3.ab2@25756>   Dc.b $80,$D0                                  ;$8000+29+tnum
00032E84 <AmiBlitz3.ab2@25757>   Dc.l _BitChg
00032E88 <AmiBlitz3.ab2@25758>   Dc.l _BitChg
00032E8C <AmiBlitz3.ab2@25759>   Dc.l _BitChg
00032E90 <AmiBlitz3.ab2@25760>   Dc.l _BitChg
00032E9C <AmiBlitz3.ab2@25761>   Ds.l 3
00032E9E <AmiBlitz3.ab2@25762>   Dc.b $1F,$40                                  ;8000
00032EA0 <AmiBlitz3.ab2@25764>   Dc.b $00,$00
00032EA4 <AmiBlitz3.ab2@25769> modetable:   Dc.l typemode
00032EA8 <AmiBlitz3.ab2@25772> newtypebase: Dc.l newtype_byte
00032EB0 <AmiBlitz3.ab2@25775>   Dc.l newtype_word,$01                                    
00032EB2 <AmiBlitz3.ab2@25776>   Dc.w $0001
00032EB6 <AmiBlitz3.ab2@25777>   Dc.b 13,"b",0,0
00032EBE <AmiBlitz3.ab2@25780>   Dc.l newtype_long,$02
00032EC0 <AmiBlitz3.ab2@25781>   Dc.w $0002
00032EC4 <AmiBlitz3.ab2@25782>   Dc.b 13,"w",0,0
00032ECC <AmiBlitz3.ab2@25785>   Dc.l newtype_quick,$03                                   
00032ECE <AmiBlitz3.ab2@25786>   Dc.w $0004
00032ED2 <AmiBlitz3.ab2@25787>   Dc.b 13,"l",0,0
00032EDA <AmiBlitz3.ab2@25790>   Dc.l newtype_float,$04                                   
00032EDC <AmiBlitz3.ab2@25791>   Dc.w $0004
00032EE0 <AmiBlitz3.ab2@25792>   Dc.b 13,"q",0,0
00032EE8 <AmiBlitz3.ab2@25796>   Dc.l newtype_double,$05                                  ;make problems on old residents
00032EEA <AmiBlitz3.ab2@25797>   Dc.w $0004
00032EEE <AmiBlitz3.ab2@25798>   Dc.b 13,"f",0,0
00032EF6 <AmiBlitz3.ab2@25801>   Dc.l newtype_double,$06
00032EF8 <AmiBlitz3.ab2@25802>   Dc.w $0004
00032EFC <AmiBlitz3.ab2@25803>   Dc.b 13,"a",0,0
00032F04 <AmiBlitz3.ab2@25806>   Dc.l newtype_string,$05                                  ;?? has to by $06 becous is number 6 not 5
00032F06 <AmiBlitz3.ab2@25807>   Dc.w $0008
00032F0A <AmiBlitz3.ab2@25808>   Dc.b 13,"d",0,0
00032F12 <AmiBlitz3.ab2@25812>   Dc.l $0000000,$07                                        ;stringtype
00032F14 <AmiBlitz3.ab2@25813>   Dc.w $0004
00032F18 <AmiBlitz3.ab2@25814>   Dc.b 13,"s",0,0
00032F20 <AmiBlitz3.ab2@25817>   Dc.l $00,$00
00032F22 <AmiBlitz3.ab2@25818>   Dc.w $0000
00032F26 <AmiBlitz3.ab2@25819>   Dc.b $01,$00,$00,$00
00032F86 <AmiBlitz3.ab2@25822> incdir:               Ds.l 24                              ;dcb.b   96,0    org source
00032F88 <AmiBlitz3.ab2@25826> dirmode:              Ds.w 1                               ;shows if directmode is on
00032F8C <AmiBlitz3.ab2@25828>                       Ds.l 1                               ;int org source ;intuition!
00032F8E <AmiBlitz3.ab2@25829> maxobject_pos:        Ds.w 1                               ;maxat org source ;max at
00032F92 <AmiBlitz3.ab2@25830> maxsat:               Ds.l 1                               ;data1 info pos
00032F94 <AmiBlitz3.ab2@25831> number_of_objects:    Ds.w 1                               ;nummaxs org source ;number of maximums
00032F96 <AmiBlitz3.ab2@25833> maxsused:             Ds.w 1                               ;maximums used in prog
00032F98 <AmiBlitz3.ab2@25837> dark:                 Ds.w 1                               ;dark compile?
00032F9A <AmiBlitz3.ab2@25838> qlab:                 Ds.w 1                               ;quick lab allocate
00032F9E <AmiBlitz3.ab2@25839> defaulttype:          Dc.l newtype_quick                   ;dc.l quicktype org source
00032FA0 <AmiBlitz3.ab2@25844> anyerrs:              Dc.w -1                              ;Any Errors in compile ?
00032FA2 <AmiBlitz3.ab2@25845> debugversion:         Ds.w 1                               ;makeexec org source ;make an executable file!
00032FA6 <AmiBlitz3.ab2@25846> noinits:              Ds.l 1                               ;flag for if we have any init routines!
00032FAA <AmiBlitz3.ab2@25848> letstart:             Ds.l 1
00032FAC <AmiBlitz3.ab2@25849> dontwrite:            Ds.w 1                               ;nomemleft org source
0003302C <AmiBlitz3.ab2@25850> lastgloballabel:      Ds.l 32                              ;lastbiglab ds.b 128 org source
00033030 <AmiBlitz3.ab2@25852> locdatast:            Ds.l 1
00033034 <AmiBlitz3.ab2@25853> firstpend:            Ds.l 1
00033038 <AmiBlitz3.ab2@25857> data2at:              Ds.l 1
0003303C <AmiBlitz3.ab2@25858> data2:                Ds.l 1
00033040 <AmiBlitz3.ab2@25859> data1start:           Ds.l 1                               ;data1at org source
00033044 <AmiBlitz3.ab2@25860> data1:                Ds.l 1                               ;pc for initialized data!
00033048 <AmiBlitz3.ab2@25861> destbufferstart:      Ds.l 1                               ;pcat org source
0003304C <AmiBlitz3.ab2@25865> destbufferend:        Ds.l 1                               ;libat org source
00033050 <AmiBlitz3.ab2@25866> libend:               Ds.l 1                               ;lib org source
00033054 <AmiBlitz3.ab2@25867> allat:                Ds.l 1                               ;highest allocmemd location for code
0003305E <AmiBlitz3.ab2@25868> dummyasm:             Dc.w 0,0,0,0,0
00033062 <AmiBlitz3.ab2@25869>                       Dc.l 0
00033064 <AmiBlitz3.ab2@25870>                       Dc.w 0
00033068 <AmiBlitz3.ab2@25874> buff1:                Ds.l 1                               ;buffer for text get
0003306C <AmiBlitz3.ab2@25875> buff2:                Ds.l 1                               ;ditto for dest
0003306E <AmiBlitz3.ab2@25876> constmode:            Ds.w 1                               ;0 for norm, <>0 for assembler
00033070 <AmiBlitz3.ab2@25877> asmtype:              Ds.w 1                               ;0=contains no prog reference
00033072 <AmiBlitz3.ab2@25878> extraword:            Ds.w 1                               ;the extension word for assembler
00033074 <AmiBlitz3.ab2@25879> extraword2:           Ds.w 1                               ;ditto
00033076 <AmiBlitz3.ab2@25880> asmsize:              Ds.w 1
0003307A <AmiBlitz3.ab2@25881> asmbuff:              Ds.l 1
0003307C <AmiBlitz3.ab2@25882> asmlen:               Ds.w 1                               ;first (src) text len
0003307E <AmiBlitz3.ab2@25883> asmlen2:              Ds.w 1                               ;second (dest)
00033082 <AmiBlitz3.ab2@25884> templabel:            Ds.l 1                               ;linked list of expressions to resolve
00033084 <AmiBlitz3.ab2@25887> macnum:               Ds.w 1
00033088 <AmiBlitz3.ab2@25889>                       Dc.l 0                               ;address of next 0 in include fil
0003308C <AmiBlitz3.ab2@25890> titleat:              Ds.l 1                               ;5 longs for compile streaks
00033096 <AmiBlitz3.ab2@25891> progress_per_line:    Ds.w 5                               ;titleadd ds 5 org source ;5 adds for compile streaks
00033098 <AmiBlitz3.ab2@25892> connest:              Ds.w 1                               ;conditional nest level
0003309C <AmiBlitz3.ab2@25893> firstconst:           Ds.l 1                               ;first constant (#a)
0003309E <AmiBlitz3.ab2@25894> numarg:               Ds.w 1                               ;number of macro arguements
000330A2 <AmiBlitz3.ab2@25895> myoline:              Ds.l 1                               ;macro done yet?
000330A6 <AmiBlitz3.ab2@25896> myline:               Ds.l 1                               ;pointer to some memory to create
000330AA <AmiBlitz3.ab2@25899>                       Ds.l 1
000330EA <AmiBlitz3.ab2@25900> concomstack:          Ds.l 16                              ;32 deep conditional compilation
000330EE <AmiBlitz3.ab2@25901> concomsp:             Dc.l concomstack                     ;stack pointer
000330F0 <AmiBlitz3.ab2@25902> oldqflag:             Ds.w 1
000330F4 <AmiBlitz3.ab2@25905>                       Ds.l 1
000330F6 <AmiBlitz3.ab2@25907>                       Ds.w 1
000330FA <AmiBlitz3.ab2@25908> firstfor:             Ds.l 1                               ;first for
000330FC <AmiBlitz3.ab2@25909> stackpar:             Ds.w 1                               ;pushflag org source ;1 par to stack 0 normal
000330FE <AmiBlitz3.ab2@25910> sbgot:                Ds.w 1                               ;flag for string got 2
00033100 <AmiBlitz3.ab2@25911> convsize:             Ds.w 1                               ;usertype org source
00033102 <AmiBlitz3.ab2@25912> userp:                Ds.w 1
00033106 <AmiBlitz3.ab2@25917> ptr_userlibs_list:    Ds.l 1                               ;libslist org source
00033108 <AmiBlitz3.ab2@25918> a2offset:             Ds.w 1                               ;stackuse org source ;stack used when gathering lib parameters
0003310A <AmiBlitz3.ab2@25919> numreps:              Ds.w 1                               ;number of repeats in a repeatable
0003310E <AmiBlitz3.ab2@25921> locloc:               Ds.l 1
00033110 <AmiBlitz3.ab2@25922> locchar:              Ds.w 1
00033190 <AmiBlitz3.ab2@25923> stbuff:               Ds.l 32                              ;was 8    ;six string varoffs
00033192 <AmiBlitz3.ab2@25924> commode:              Ds.w 1                               ;in comma mode...
00033196 <AmiBlitz3.ab2@25925> lastoffset_org:       Ds.l 1                               ;lastoffset org source ;last offset in calcvar!
0003319A <AmiBlitz3.ab2@25926> linenumat:            Dc.l $FFFFFFFF                       ;linecounter ;dc -1 org source ;line being processed
0003319E <AmiBlitz3.ab2@25927> compilelinecounter:   Dc.l $FFFFFFFF                       ;menuret dc -1 org source ;menu return code
000331A0 <AmiBlitz3.ab2@25929>                       Ds.w 1                               ;opt reset offset
000332A0 <AmiBlitz3.ab2@25931>                       Ds.l 64                              ;Ds.b vcodelen org source ;code used to generate
000333A0 <AmiBlitz3.ab2@25933>                       Ds.l 64                              ;Ds.b vcodelen org source ;above for let.....
000333A2 <AmiBlitz3.ab2@25934> varcodelen:           Ds.w 1                               ;and length
000333A4 <AmiBlitz3.ab2@25936>                       Ds.w 1
000333AA <AmiBlitz3.ab2@25937> oldvcodelen:          Ds.w 3                               ;old varcodelen
000333AC <AmiBlitz3.ab2@25940> Even4
000333B0 <AmiBlitz3.ab2@25941> tempvm:               Ds.l 1                               ;memlib org source ;address of memory library
000333B2 <AmiBlitz3.ab2@25942> memlibstat:           Ds.w 1                               ;status of memory library during
000333B4 <AmiBlitz3.ab2@25945>                       Dc.w 0
000333B6 <AmiBlitz3.ab2@25947>                       Dc.w 0
000333B8 <AmiBlitz3.ab2@25949> varmode:              Ds.w 1                               ;0 a5 pointer to global
000333BC <AmiBlitz3.ab2@25951> currentfunction:      Ds.l 1                               ;thisproc org source
000333C0 <AmiBlitz3.ab2@25952> firstproc:            Ds.l 1                               ;firstproc org source ;this procedure being 'done'
000333C2 <AmiBlitz3.ab2@25953> 
000333C4 <AmiBlitz3.ab2@25955> skipcode:             Ds.w 1                               ;nocompile ;comflag org source ;0 if no compile
000333C8 <AmiBlitz3.ab2@25956> passstack:            Ds.l 1
000333CC <AmiBlitz3.ab2@25957> zero:                 Ds.l 1                               ;ZERO!
000333CE <AmiBlitz3.ab2@25958> ininclude:            Ds.w 1                               ;numincs org source ;number of include files
000333D2 <AmiBlitz3.ab2@25960> xinclude_base:        Ds.l 1                               ;firstxinc org source ;first exclusive include.
000333D6 <AmiBlitz3.ab2@25961> constantbase:         Ds.l 1                               ;firstinc org source ;first include
000333D8 <AmiBlitz3.ab2@25962> lasta6:               Dc.w $FFFF                           ;-1 org source
000333DA <AmiBlitz3.ab2@25963> instringon:           Ds.w 1                               ;quoteflag org source
000333DE <AmiBlitz3.ab2@25964> ptr_macrobuffer_begin:Ds.l 1                               ;macrobuff org source ;pointer to macro collection buffer ;begin
000333E2 <AmiBlitz3.ab2@25965> ptr_macrobuffer_end:  Ds.l 1                               ;macrobufff org source ;end of above ;end of
000333E6 <AmiBlitz3.ab2@25966> macrobase:            Ds.l 1                               ;firstmacro org source ;linked list of macro's ;macrolist
000333EA <AmiBlitz3.ab2@25967> endop:                Ds.l 1                               ;end of program pc - before finishups!
000333EE <AmiBlitz3.ab2@25968> labelbase:            Ds.l 1                               ;firstlabel org source ;first lib struct
000333F2 <AmiBlitz3.ab2@25969> end_of_tokenlist:     Ds.l 1                               ;lasttoken org source
000333F4 <AmiBlitz3.ab2@25970> numstatic:            Ds.w 1                               ;number of static structs
000333F8 <AmiBlitz3.ab2@25971> staticdata:           Ds.l 1                               ;data1 val for statics
000333FC <AmiBlitz3.ab2@25972> libpointer:           Ds.l 1                               ;firstlib org source ;first lib struct
000333FE <AmiBlitz3.ab2@25973> sbasegot:             Ds.w 1                               ;string base got?
00033402 <AmiBlitz3.ab2@25974> litdata1:             Ds.l 1
00033406 <AmiBlitz3.ab2@25978> objlen:               Ds.l 1
0003340A <AmiBlitz3.ab2@25979> hunkoffsetcounter:    Ds.l 1                               ;numoffs org source
0003340E <AmiBlitz3.ab2@25980> hunkoffsetbase:       Ds.l 1                               ;firstoff org source ;pointer to linked list
00033410 <AmiBlitz3.ab2@25982> flagmask:             Ds.w 1                               ;mask for flag of variable when
00033412 <AmiBlitz3.ab2@25984> notshared:            Ds.w 1                               ;added org source ;flag for seeing if variable was added!
00033414 <AmiBlitz3.ab2@25985> nonew:                Ds.w 1                               ;1 to inhibit new variable creation
00033418 <AmiBlitz3.ab2@25986> temp1:                Ds.l 1
0003341C <AmiBlitz3.ab2@25987> temp2:                Ds.l 1
00033420 <AmiBlitz3.ab2@25989> ptr_parameterstore:   Ds.l 1                               ;namebuff ds.b 128 org source
00033424 <AmiBlitz3.ab2@25990> fib_DirEntryType:     Ds.l 1                               ;namebuff+4 org source
00033498 <AmiBlitz3.ab2@25991> fib_FileName:         Ds.l 29                              ;namebuff+8 org source
0003349C <AmiBlitz3.ab2@25992> fib_Size:             Ds.l 1                               ;namebuff+124 org source
0003351C <AmiBlitz3.ab2@25994> namebuff2:            Ds.b 128
00033524 <AmiBlitz3.ab2@25995>                       Ds.b 8                               ;for fileinfoblock
00033564 <AmiBlitz3.ab2@25998> optstuff:             Ds.b 64                              ;temp opt make buffer
000335A2 <AmiBlitz3.ab2@26006>   !ComData_GetL{comFunc_OpenCompilerWindow,A1}
000335A8 <AmiBlitz3.ab2@26007>   MOVE.l #1000,D0
000335AA <AmiBlitz3.ab2@26008>   JSR (A1)
000335AC <AmiBlitz3.ab2@26009> RTS
000335AE <AmiBlitz3.ab2@26015>   Dc.b $00,$01                                             ; 1 byte schreiben ;one byte stuff...
000335B2 <AmiBlitz3.ab2@26016>   Dc.l xtra_versionnumber                                  ; vers org source
000335B6 <AmiBlitz3.ab2@26017>   Dc.l create_iconfile                                     ; create icon for executable
000335BA <AmiBlitz3.ab2@26018>   Ds.l 1
000335BC <AmiBlitz3.ab2@26020>   Dc.b $00,$02                                             ; 2 bytes schreiben  ;two byte stuff...
000335C0 <AmiBlitz3.ab2@26023>   Dc.l set_use_debugger
000335C4 <AmiBlitz3.ab2@26024>   Dc.l AL_0_11010                                          ;+obsolet: debugger
000335C8 <AmiBlitz3.ab2@26025>   Dc.l AL_0_1103C                                          ;+obsolet: long arrays
000335CC <AmiBlitz3.ab2@26026>   Dc.l AL_0_11068                                          ;+obsolet: expand macros
000335D0 <AmiBlitz3.ab2@26027>   Dc.l AL_0_11094                                          ;+obsolet: quoted macros
000335D4 <AmiBlitz3.ab2@26028>   Dc.l set_make_smallestcode
000335D8 <AmiBlitz3.ab2@26029>   Dc.l set_link_debuginfo
000335DC <AmiBlitz3.ab2@26030>   Dc.l set_autorun
000335E0 <AmiBlitz3.ab2@26031>   Dc.l set_interruptcheck
000335E4 <AmiBlitz3.ab2@26032>   Dc.l set_assemblercheck
000335E8 <AmiBlitz3.ab2@26034>   Dc.l set_overflowcheck
000335EC <AmiBlitz3.ab2@26035>   Dc.l default_obsolete                                    ;+obsolet: ohne inhalt
000335F0 <AmiBlitz3.ab2@26036>   Dc.l default_interruptcheck                              ;+obsolet: interruptcheck vorgabe
000335F4 <AmiBlitz3.ab2@26037>   Dc.l default_overflowcheck                               ;+obsolet: overflow vorgabe
000335F8 <AmiBlitz3.ab2@26040>   Ds.l 1
000335FA <AmiBlitz3.ab2@26042>   Dc.b $00,$04                                             ; 4 bytes schreiben..  ;four byte stuff...
000335FE <AmiBlitz3.ab2@26049>   Dc.l objectbuffer
00033602 <AmiBlitz3.ab2@26050>   Dc.l libsbuffer
00033606 <AmiBlitz3.ab2@26051>   Dc.l systembuffer
0003360A <AmiBlitz3.ab2@26052>   Dc.l databuffer
0003360E <AmiBlitz3.ab2@26053>   Dc.l macrobuffer_size
00033612 <AmiBlitz3.ab2@26054>   Dc.l stringbuffer
00033616 <AmiBlitz3.ab2@26057>   Ds.l 1
00033618 <AmiBlitz3.ab2@26061>   Dc.b $02,$20                                             ;dc 68*8; 544 bytes schreiben.
00033620 <AmiBlitz3.ab2@26062>   Dc.l residents_table,0
00033622 <AmiBlitz3.ab2@26066>   Dc.b $01,$80                                             ;dc 192*2; 384 bytes schreiben
0003362A <AmiBlitz3.ab2@26067>   Dc.l exepath,0                                           ; exepath und exefilename jeweils 192 bytes
0003362C <AmiBlitz3.ab2@26068>   Ds.w 1
00033728 <AmiBlitz3.ab2@26072>   Ds.l 63
00033824 <AmiBlitz3.ab2@26073>   Ds.l 63
00033920 <AmiBlitz3.ab2@26074>   Ds.l 63
00033A02 <AmiBlitz3.ab2@26075>   Ds.w 113
00033A04 <AmiBlitz3.ab2@26078> comsettings_message:  Ds.w 1                               ;allchg org source
00033A06 <AmiBlitz3.ab2@26079> xtra_versionnumber:   Ds.w 1                               ;vers org source
00033A0C <AmiBlitz3.ab2@26083>   CLR.b exefilename
00033A0E <AmiBlitz3.ab2@26084>   TST.l d0
00033A12 <AmiBlitz3.ab2@26085>   BNE read_xtrafile__l10
00033A14 <AmiBlitz3.ab2@26086> RTS
00033A1A <AmiBlitz3.ab2@26089>   JSR free_residents                                       ;jsr freeres2 org source
00033A20 <AmiBlitz3.ab2@26090> 
00033A26 <AmiBlitz3.ab2@26091>   LEA ptr_xtradata,A2
00033A28 <AmiBlitz3.ab2@26092>   MOVEQ.l #$00,D4
00033A2A <AmiBlitz3.ab2@26095>     MOVE.w (A2)+,D4                                        ; anzahl bytes zum lesen
00033A2E <AmiBlitz3.ab2@26096>     BEQ.b read_xtrafile__done
00033A30 <AmiBlitz3.ab2@26099>     MOVE.l (A2)+,D2
00033A34 <AmiBlitz3.ab2@26100>   BEQ.b read_xtrafile__loop
00033A36 <AmiBlitz3.ab2@26102>   MOVE.l D4,D3
00033A38 <AmiBlitz3.ab2@26103>   MOVE.l D7,D1
00033A3C <AmiBlitz3.ab2@26104>   JSR _Read(A6)                                            ; d1: file, d2: buffer, d3:length
00033A3E <AmiBlitz3.ab2@26105>   TST.l D0
00033A42 <AmiBlitz3.ab2@26106>   BNE.b read_xtrafile__loop2
00033A46 <AmiBlitz3.ab2@26107> BRA.w read_xtrafile__done2
00033A4C <AmiBlitz3.ab2@26110>   TST.b xtra_versionnumber
00033A50 <AmiBlitz3.ab2@26111>    BNE.b read_xtrafile__nover0
00033A58 <AmiBlitz3.ab2@26112>   MOVE.w #$0080,set_autorun                                ;auto run on
00033A62 <AmiBlitz3.ab2@26113>   MOVE.w default_interruptcheck,set_interruptcheck         ;interupt checking on
00033A68 <AmiBlitz3.ab2@26114>   CLR.w set_assemblercheck                                 ;assembler checking off
00033A72 <AmiBlitz3.ab2@26115>   MOVE.w default_overflowcheck,set_overflowcheck           ;overflow chex
00033A76 <AmiBlitz3.ab2@26116> BRA.b read_xtrafile__ver0
00033A78 <AmiBlitz3.ab2@26119>   MOVE.l D7,D1                                             ;load cli arg!
00033A7E <AmiBlitz3.ab2@26120>   MOVE.l #str_cliarguments,D2
00033A84 <AmiBlitz3.ab2@26121>   MOVE.l #116,D3                                           ; vorher 128 , jetzt 8 weniger fuer die Versionsdaten
00033A88 <AmiBlitz3.ab2@26122>   JSR _Read(A6)                                            ; d1: file, d2: buffer, d3:length
00033A8E <AmiBlitz3.ab2@26123>   MOVE.l #str_cliarguments,A0
00033A94 <AmiBlitz3.ab2@26124>   ADDA.l #115,A0
00033A9A <AmiBlitz3.ab2@26125>   MOVE.l #0,(a0) ; terminate it!
00033A9C <AmiBlitz3.ab2@26127>   MOVE.l D7,D1                                             ; I know, I know. Honitos started this horrible thing, see below...
00033AA2 <AmiBlitz3.ab2@26128>   MOVE.l #stacksize,D2
00033AA8 <AmiBlitz3.ab2@26129>   MOVE.l #4,D3
00033AAC <AmiBlitz3.ab2@26130>   JSR _Read(A6)
00033AB6 <AmiBlitz3.ab2@26131>   CMP.l ##MIN_STACKSIZE,stacksize
00033ABA <AmiBlitz3.ab2@26132>   BGE 'stackok
00033AC4 <AmiBlitz3.ab2@26133>   MOVE.l ##MIN_STACKSIZE,stacksize
00033AC6 <AmiBlitz3.ab2@26136>   MOVE.l D7,D1
00033ACC <AmiBlitz3.ab2@26137>   MOVE.l #versioninformation,D2
00033AD2 <AmiBlitz3.ab2@26138>   MOVE.l #4,D3
00033AD6 <AmiBlitz3.ab2@26139>   JSR _Read(A6)
00033AD8 <AmiBlitz3.ab2@26141>   MOVE.l D7,D1
00033ADE <AmiBlitz3.ab2@26142>   MOVE.l #number_of_builds,D2
00033AE4 <AmiBlitz3.ab2@26143>   MOVE.l #4,D3
00033AE8 <AmiBlitz3.ab2@26144>   JSR _Read(A6)
00033AEE <AmiBlitz3.ab2@26150>   MOVE.l A7,errstack
00033AF8 <AmiBlitz3.ab2@26151>   MOVE.l #read_xtrafile__done2,errcont
00033B00 <AmiBlitz3.ab2@26152>   MOVE.w #$FFFF,ezerr
00033B06 <AmiBlitz3.ab2@26155>     MOVE.l #temp1,D2                                   ;LOAD maxobjectsvalues
00033B08 <AmiBlitz3.ab2@26156>     MOVEQ.l #$04,D3
00033B0A <AmiBlitz3.ab2@26157>     MOVE.l D7,D1
00033B0E <AmiBlitz3.ab2@26158>     JSR _Read(A6)
00033B10 <AmiBlitz3.ab2@26159>     TST.l D0
00033B14 <AmiBlitz3.ab2@26160>     BEQ.b read_xtrafile__done2
00033B1A <AmiBlitz3.ab2@26161>     MOVE.w temp1,D1
00033B1C <AmiBlitz3.ab2@26162>     TST.w d1                                               ;new
00033B20 <AmiBlitz3.ab2@26163>     BEQ read_xtrafile__done2                                         ;new
00033B26 <AmiBlitz3.ab2@26164>      JSR AJL_0_6F1A
00033B2C <AmiBlitz3.ab2@26166>     CMP.l #0,a1
00033B30 <AmiBlitz3.ab2@26167>     BEQ read_xtrafile__dloop
00033B34 <AmiBlitz3.ab2@26168>     MOVE.l $12(A1),D0
00033B3C <AmiBlitz3.ab2@26169>     MOVE.w temp1+2,-$4(A1,D0.L)
00033B40 <AmiBlitz3.ab2@26170> BRA.b read_xtrafile__dloop
00033B44 <AmiBlitz3.ab2@26176>   LEA residents_table(PC),A0
00033B46 <AmiBlitz3.ab2@26177>   MOVEQ.l #$07,D0
00033B4A <AmiBlitz3.ab2@26180>     CLR.l $40(A0)
00033B4E <AmiBlitz3.ab2@26181>     LEA ResidentEntryStep(A0),A0   ; $44
00033B52 <AmiBlitz3.ab2@26182>   DBF D0,read_xtrafile__loop3
00033B56 <AmiBlitz3.ab2@26184>   MOVEM.l D7/A6,-(A7)
00033B5C <AmiBlitz3.ab2@26185>   JSR init_buffers
00033B62 <AmiBlitz3.ab2@26186>   JSR reloadresident
00033B66 <AmiBlitz3.ab2@26187>   MOVEM.l (A7)+,D7/A6
00033B68 <AmiBlitz3.ab2@26188> RTS
00033B70 <AmiBlitz3.ab2@26192>   MOVE.b #$1,xtra_versionnumber                            ;.xtra version number...
00033B76 <AmiBlitz3.ab2@26201>   LEA ptr_xtradata,A2
00033B78 <AmiBlitz3.ab2@26202>   MOVEQ.l #$00,D4
00033B7A <AmiBlitz3.ab2@26206>   MOVE.w (A2)+,D4                                          ; anzahl bytes zu schreiben
00033B7E <AmiBlitz3.ab2@26207>   BEQ.b write_xtrafile__done
00033B80 <AmiBlitz3.ab2@26210>    MOVE.l (A2)+,D2
00033B84 <AmiBlitz3.ab2@26211>    BEQ.b write_xtrafile__loop
00033B86 <AmiBlitz3.ab2@26213>    MOVE.l D4,D3
00033B88 <AmiBlitz3.ab2@26214>    MOVE.l D7,D1                                            ; schreiben der daten in ptr_xtradata
00033B8C <AmiBlitz3.ab2@26215>    JSR _Write(A6)                                          ; d1: file, d2: buffer, d3:length
00033B90 <AmiBlitz3.ab2@26216> BRA.b write_xtrafile__loop2
00033B92 <AmiBlitz3.ab2@26219>   MOVE.l D7,D1
00033B98 <AmiBlitz3.ab2@26220>   MOVE.l #str_cliarguments,D2
00033B9E <AmiBlitz3.ab2@26221>   MOVE.l #116,D3
00033BA2 <AmiBlitz3.ab2@26222>   JSR _Write(A6)                                           ; hier werden 116 bytes an cli_arguments geschrieben !!
00033BA4 <AmiBlitz3.ab2@26224>   MOVE.l D7,D1
00033BAA <AmiBlitz3.ab2@26225>   MOVE.l #stacksize,D2
00033BB0 <AmiBlitz3.ab2@26226>   MOVE.l #4,D3
00033BB4 <AmiBlitz3.ab2@26227>   JSR _Write(A6)
00033BB6 <AmiBlitz3.ab2@26229>   MOVE.l D7,D1
00033BBC <AmiBlitz3.ab2@26230>   MOVE.l #versioninformation,D2
00033BC2 <AmiBlitz3.ab2@26231>   MOVE.l #4,D3
00033BC6 <AmiBlitz3.ab2@26232>   JSR _Write(A6)
00033BC8 <AmiBlitz3.ab2@26234>   MOVE.l D7,D1
00033BCE <AmiBlitz3.ab2@26235>   MOVE.l #number_of_builds,D2
00033BD4 <AmiBlitz3.ab2@26236>   MOVE.l #4,D3
00033BD8 <AmiBlitz3.ab2@26237>   JSR _Write(A6)
00033BDE <AmiBlitz3.ab2@26243>   LEA libpointer,A2
00033BE0 <AmiBlitz3.ab2@26246>     MOVE.l (A2),D0
00033BE4 <AmiBlitz3.ab2@26247>     BEQ.w write_xtrafile__done2
00033BE6 <AmiBlitz3.ab2@26248>     MOVEA.l D0,A2
00033BEA <AmiBlitz3.ab2@26249>     MOVE.l $12(A2),D4
00033BEE <AmiBlitz3.ab2@26250>     TST.w -$2(A2,D4.L)
00033BF2 <AmiBlitz3.ab2@26251>     BEQ.w write_xtrafile__loop3
00033BF6 <AmiBlitz3.ab2@26253>     LEA $4(A2),A0
00033BF8 <AmiBlitz3.ab2@26254>     MOVE.l A0,D2
00033BFA <AmiBlitz3.ab2@26255>     MOVEQ.l #$02,D3
00033BFC <AmiBlitz3.ab2@26256>     MOVE.l D7,D1                                           ; schreiben der Libnum mit 2 bytes
00033C00 <AmiBlitz3.ab2@26257>     JSR _Write(A6)                                         ; d1: file, d2: buffer, d3:length
00033C04 <AmiBlitz3.ab2@26259>     LEA -$4(A2,D4.L),A0
00033C06 <AmiBlitz3.ab2@26260>     MOVE.l A0,D2
00033C08 <AmiBlitz3.ab2@26261>     MOVEQ.l #$02,D3
00033C0A <AmiBlitz3.ab2@26262>     MOVE.l D7,D1                                           ; schreiben der Max Objects mit 2 bytes
00033C0E <AmiBlitz3.ab2@26263>     JSR _Write(A6)                                         ; d1: file, d2: buffer, d3:length
00033C12 <AmiBlitz3.ab2@26264> BRA.w write_xtrafile__loop3
00033C18 <AmiBlitz3.ab2@26269>   LEA XTRAEndPadBytes,A2 ; get the start address off the 4 fill/pad/termination bytes
00033C1A <AmiBlitz3.ab2@26270>   MOVE.l A2,D2           ; move the address to d2
00033C20 <AmiBlitz3.ab2@26271>   MOVE.l #4,D3           ; we only need 4 bytes to save
00033C22 <AmiBlitz3.ab2@26272>   MOVE.l D7,D1           ; we set the file handle
00033C26 <AmiBlitz3.ab2@26273>   JSR _Write(A6)         ; and we write it.
00033C28 <AmiBlitz3.ab2@26275> RTS
00033C2E <AmiBlitz3.ab2@26280>   LEA optssave,A0                      ; backup address
00033C34 <AmiBlitz3.ab2@26281>   LEA ptr_xtradata,A1                  ; source address
00033C36 <AmiBlitz3.ab2@26284>   MOVE.w (A1)+,D0                                          ;length of data move
00033C3A <AmiBlitz3.ab2@26285>   BEQ.b 'backupdone
00033C3C <AmiBlitz3.ab2@26286>   SUBQ.w #1,D0
00033C3E <AmiBlitz3.ab2@26289>     MOVE.l (A1)+,D1
00033C42 <AmiBlitz3.ab2@26290>     BEQ.b 'backuploop
00033C44 <AmiBlitz3.ab2@26291>     MOVEA.l D1,A2
00033C46 <AmiBlitz3.ab2@26292>     MOVE.w D0,D1
00033C48 <AmiBlitz3.ab2@26295>       MOVE.b (A2)+,(A0)+
00033C4C <AmiBlitz3.ab2@26296>   DBF D1,'backuploop3
00033C50 <AmiBlitz3.ab2@26298> BRA.w 'backuploop2
00033C56 <AmiBlitz3.ab2@26302>   LEA bufferlist,A1
00033C58 <AmiBlitz3.ab2@26305>     MOVE.l (A1)+,D2
00033C5C <AmiBlitz3.ab2@26306>     BEQ.b 'loop4done
00033C5E <AmiBlitz3.ab2@26308>     MOVEA.l D2,A0
00033C60 <AmiBlitz3.ab2@26309>     MOVE.l (A0),D2
00033C62 <AmiBlitz3.ab2@26310>     ADDQ.w #8,A0
00033C68 <AmiBlitz3.ab2@26311>     JSR makelong
00033C6C <AmiBlitz3.ab2@26312> BRA.b 'loop4
00033C72 <AmiBlitz3.ab2@26315>   CLR.w state_of_residents                                 ;resident change
00033C78 <AmiBlitz3.ab2@26316>   CLR.w comsettings_message                                ;alloc change
00033C7E <AmiBlitz3.ab2@26317>   CLR.w maxobject_pos
00033C80 <AmiBlitz3.ab2@26318> RTS   ; new tomsmart1
00033C86 <AmiBlitz3.ab2@26322>   LEA optssave,A0
00033C8C <AmiBlitz3.ab2@26323>   LEA ptr_xtradata,A1
00033C8E <AmiBlitz3.ab2@26326>   MOVE.w (A1)+,D0
00033C92 <AmiBlitz3.ab2@26327>   BEQ.b 'restoredone
00033C94 <AmiBlitz3.ab2@26328>   SUBQ.w #1,D0
00033C96 <AmiBlitz3.ab2@26331>     MOVE.l (A1)+,D1
00033C9A <AmiBlitz3.ab2@26332>     BEQ.b 'restoreloop1
00033C9C <AmiBlitz3.ab2@26333>     MOVEA.l D1,A2
00033C9E <AmiBlitz3.ab2@26334>     MOVE.w D0,D1
00033CA0 <AmiBlitz3.ab2@26337>       MOVE.b (A0)+,(A2)+
00033CA4 <AmiBlitz3.ab2@26338>   DBF D1,'restoreloop3
00033CA8 <AmiBlitz3.ab2@26340> BRA.b 'restoreloop2
00033CAA <AmiBlitz3.ab2@26343> RTS
00033CB0 <AmiBlitz3.ab2@26347>   JSR free_residents                    ; first free the allready loaded residents
00033CB6 <AmiBlitz3.ab2@26348>   JSR Clear_Residents_table             ; second clear the complete resident table
00033CB8 <AmiBlitz3.ab2@26349> RTS
00033CC0 <AmiBlitz3.ab2@26353>   MOVE.w #$FFFF,state_of_residents
00033CC6 <AmiBlitz3.ab2@26354>   MOVE.w state_of_residents,D0
00033CCC <AmiBlitz3.ab2@26355>   JSR reloadresident
00033CCE <AmiBlitz3.ab2@26356> RTS
00033CD0 <AmiBlitz3.ab2@26361>   MOVE.l d0,a1
00033CD6 <AmiBlitz3.ab2@26362>   MOVEA.l libpointer,A2
00033CDA <AmiBlitz3.ab2@26365>     MOVE.l $12(A2),D0
00033CDE <AmiBlitz3.ab2@26366>     TST.w -$2(A2,D0.L)
00033CE2 <AmiBlitz3.ab2@26367>      BEQ.w JL_0_102AAa
00033CE4 <AmiBlitz3.ab2@26368>     SUBQ.w #1,D1
00033CE8 <AmiBlitz3.ab2@26369>      BPL.w JL_0_102AAa
00033CEC <AmiBlitz3.ab2@26370>     MOVEA.l -$1A(A2,D0.L),A3
00033CEE <AmiBlitz3.ab2@26371>     ADDA.l A2,A3
00033CF0 <AmiBlitz3.ab2@26374>       MOVE.b (A3)+,(A1)+
00033CF4 <AmiBlitz3.ab2@26375>     BNE.w JL_0_10294a
00033CF6 <AmiBlitz3.ab2@26377>     CLR.b -(A1)
00033CFA <AmiBlitz3.ab2@26378>     MOVE.w -$4(A2,D0.L),D0
00033D00 <AmiBlitz3.ab2@26379>     AND.l #$ffff,d0
00033D02 <AmiBlitz3.ab2@26380> RTS
00033D04 <AmiBlitz3.ab2@26383>     MOVEA.l (A2),A2
00033D08 <AmiBlitz3.ab2@26384> BRA.w JL_0_1027Ca
00033D18 <AmiBlitz3.ab2@26389> str_maxobjects_name:   Dc.b "              ",0 : Even
00033D28 <AmiBlitz3.ab2@26390> str_maxobjects_name2:  Dc.b "              ",0 : Even
00033D2C <AmiBlitz3.ab2@26391> objectbuffer:          Dc.l $00004000
00033D30 <AmiBlitz3.ab2@26392>                        Dc.l $00000000
00033D3C <AmiBlitz3.ab2@26393> str_objectbuffer:      Dc.b "16384",0,0,0,0,0,0,0      ; string max 12 columns
00033D40 <AmiBlitz3.ab2@26395> libsbuffer:            Dc.l $00008000
00033D44 <AmiBlitz3.ab2@26396>                        Dc.l $00000000
00033D50 <AmiBlitz3.ab2@26397> str_libsbuffer:        Dc.b "32768",0,0,0,0,0,0,0      ;was "16384"; string max 12 columns
00033D54 <AmiBlitz3.ab2@26399> systembuffer:          Dc.l $00001000                      ; systen buffer
00033D58 <AmiBlitz3.ab2@26400>                        Dc.l $00000000
00033D64 <AmiBlitz3.ab2@26401> str_systembuffer:      Dc.b "4096",0,0,0,0,0,0,0,0     ; string max 12 columns
00033D68 <AmiBlitz3.ab2@26403> databuffer:            Dc.l $00001000                      ; data buffer
00033D6C <AmiBlitz3.ab2@26404>                        Dc.l $00000000
00033D78 <AmiBlitz3.ab2@26405> str_databuffer:        Dc.b "4096",0,0,0,0,0,0,0,0     ; string max 12 columns
00033D7C <AmiBlitz3.ab2@26407> macrobuffer_size:      Dc.l $00002000                      ; macro buffer
00033D80 <AmiBlitz3.ab2@26408>                        Dc.l $00000000
00033D8C <AmiBlitz3.ab2@26409> str_macrobuffer:       Dc.b "8192",0,0,0,0,0,0,0,0     ; string max 12 columns
00033D90 <AmiBlitz3.ab2@26411> stringbuffer:          Dc.l $00002800                      ; string buffer
00033D94 <AmiBlitz3.ab2@26412>                        Dc.l $00000000
00033DA0 <AmiBlitz3.ab2@26413> str_stringbuffer:      Dc.b "10240",0,0,0,0,0,0,0      ; string max 12 columns
00033DA2 <AmiBlitz3.ab2@26415> maxobjects_value:      Dc.w $0064
00033DA6 <AmiBlitz3.ab2@26416>                        Dc.l $00000000
00033DB2 <AmiBlitz3.ab2@26417> str_maxobjects_value:  Dc.b "100",0,0,0,0,0,0,0,0,0    ; string max 12 columns
00033DB4 <AmiBlitz3.ab2@26419> maxobjects_value2:     Dc.w $0014
00033DB6 <AmiBlitz3.ab2@26420>                        Dc.w $0000
00033DC2 <AmiBlitz3.ab2@26422> str_maxobjects_value2: Dc.b "20",0,0,0,0,0,0,0,0,0,0   ; string max 12 columns
00033DC3 <AmiBlitz3.ab2@26426> set_create_iconfile:   Dc.b $00
00033DC6 <AmiBlitz3.ab2@26427> create_iconfile:       Dc.b $80,$01,$01                    ;create icon
00033DC8 <AmiBlitz3.ab2@26428>                        Dc.b $00,$01
00033DC9 <AmiBlitz3.ab2@26430> set_use_debugger:      Dc.b $00                            ; Flags.w
00033DCC <AmiBlitz3.ab2@26431> use_debugger:          Dc.b $80,$01,$01                    ; Activation.w
00033DCE <AmiBlitz3.ab2@26432>                        Dc.b $00,$01                        ; GadgetType.w
00033DD2 <AmiBlitz3.ab2@26433> AL_0_11010:            Dc.b $00,$80,$01,$01                ; flags, activation
00033DD6 <AmiBlitz3.ab2@26434> AL_0_1103C:            Dc.b $00,$80,$01,$01                ; flags, activation
00033DDA <AmiBlitz3.ab2@26435> AL_0_11068:            Dc.b $00,$80,$01,$01                ; flags, activation
00033DDC <AmiBlitz3.ab2@26436> AL_0_11094:            Ds.w 1
00033DDD <AmiBlitz3.ab2@26438> set_make_smallestcode: Ds.b 1
00033DE0 <AmiBlitz3.ab2@26439> make_smallestcode:     Dc.b $00,$01,$01                    ;make smallest
00033DE2 <AmiBlitz3.ab2@26440>                        Dc.b $00,$01
00033DE3 <AmiBlitz3.ab2@26441> set_link_debuginfo:    Ds.b 1
00033DE6 <AmiBlitz3.ab2@26442> link_debuginfo:        Dc.b $00,$01,$01                    ;create debuginfo
00033DE8 <AmiBlitz3.ab2@26443>                        Dc.b $00,$01
00034008 <AmiBlitz3.ab2@26448>   Ds.l 136         ;resident files STEP $44 piece 8
00034088 <AmiBlitz3.ab2@26453> str_calcexpression:        Ds.l 32
0003408C <AmiBlitz3.ab2@26454> destbufferend_backup_calc: Ds.l 1
00034096 <AmiBlitz3.ab2@26459>   MOVE.l destbufferend,destbufferend_backup_calc
0003409C <AmiBlitz3.ab2@26460>   MOVE.l A7,errstack
000340A6 <AmiBlitz3.ab2@26461>   MOVE.l #Calc_Error_Exit,errcont
000340D0 <AmiBlitz3.ab2@26468>   !basic         ; get the flage for the conversion form the editor
00034114 <AmiBlitz3.ab2@26469>   !ComData_GetW{comWord_CalculatorButtonBinFlag,D0} : MOVE.w d0,CalculatorButtonBinFlag
00034158 <AmiBlitz3.ab2@26470>   !ComData_GetW{comWord_CalculatorButtonDecFlag,D0} : MOVE.w d0,CalculatorButtonDecFlag
00034176 <AmiBlitz3.ab2@26471>   !asm
0003417C <AmiBlitz3.ab2@26473>   LEA str_calcexpression,A0
00034182 <AmiBlitz3.ab2@26481>   JSR setcvars
00034188 <AmiBlitz3.ab2@26482>   JSR setsvars
0003418E <AmiBlitz3.ab2@26483>   CLR.w connest
00034194 <AmiBlitz3.ab2@26484>   LEA str_calcexpression,A5
0003419A <AmiBlitz3.ab2@26485>   JSR AJL_0_BF6E
000341A0 <AmiBlitz3.ab2@26486>   LEA str_calcexpression,A0
000341A2 <AmiBlitz3.ab2@26487>   TST.l D3
000341A6 <AmiBlitz3.ab2@26488>    BPL.w JL_0_11AE8
000341AA <AmiBlitz3.ab2@26489>   MOVE.b #$2D,(A0)+
000341AC <AmiBlitz3.ab2@26490>   NEG.l D3
000341B4 <AmiBlitz3.ab2@26493>   CMPI.w #$80,CalculatorButtonDecFlag
000341B8 <AmiBlitz3.ab2@26494>    BEQ.w JL_0_11B74
000341BA <AmiBlitz3.ab2@26495>   MOVEQ.l #$00,D1
000341C2 <AmiBlitz3.ab2@26496>   CMPI.w #$80,CalculatorButtonBinFlag
000341C6 <AmiBlitz3.ab2@26497>    BNE.w JL_0_11B36
000341C8 <AmiBlitz3.ab2@26498>   MOVEQ.l #$1F,D0
000341CC <AmiBlitz3.ab2@26499>   MOVE.b #$25,(A0)+
000341CE <AmiBlitz3.ab2@26502>       LSL.l #1,D3
000341D2 <AmiBlitz3.ab2@26503>        BCC.w JL_0_11B18
000341D6 <AmiBlitz3.ab2@26504>       MOVE.b #"1",(A0)+
000341D8 <AmiBlitz3.ab2@26505>       MOVEQ.l #-$01,D1
000341DC <AmiBlitz3.ab2@26506>   BRA.w JL_0_11B22
000341DE <AmiBlitz3.ab2@26509>       TST.w D1
000341E2 <AmiBlitz3.ab2@26510>       BEQ.w JL_0_11B22
000341E6 <AmiBlitz3.ab2@26511>       MOVE.b #"0",(A0)+
000341EA <AmiBlitz3.ab2@26514>  DBF D0,JL_0_11B08
000341EC <AmiBlitz3.ab2@26517>   TST.w D1
000341F0 <AmiBlitz3.ab2@26518>   BNE.w JL_0_11B30
000341F4 <AmiBlitz3.ab2@26519>   MOVE.b #"0",(A0)+
000341F6 <AmiBlitz3.ab2@26522>   CLR.b (A0)
000341FA <AmiBlitz3.ab2@26523> BRA.w JL_0_11B7C
000341FC <AmiBlitz3.ab2@26526>   MOVEQ.l #$07,D0
00034200 <AmiBlitz3.ab2@26527>   MOVE.b #$24,(A0)+
00034202 <AmiBlitz3.ab2@26530>     MOVE.l D3,D2
00034204 <AmiBlitz3.ab2@26531>     SWAP D2
00034206 <AmiBlitz3.ab2@26532>     LSR.w #8,D2
00034208 <AmiBlitz3.ab2@26533>     LSR.w #4,D2
0003420C <AmiBlitz3.ab2@26534>     ADDI.w #$30,D2
00034210 <AmiBlitz3.ab2@26535>     CMP.w #$3A,D2
00034214 <AmiBlitz3.ab2@26536>      BCS.w JL_0_11B52
00034216 <AmiBlitz3.ab2@26537>     ADDQ.w #7,D2
0003421A <AmiBlitz3.ab2@26540>     CMP.w #$30,D2
0003421E <AmiBlitz3.ab2@26541>     BEQ.w JL_0_11B62
00034220 <AmiBlitz3.ab2@26542>     MOVE.b D2,(A0)+
00034222 <AmiBlitz3.ab2@26543>     MOVEQ.l #-$01,D1
00034226 <AmiBlitz3.ab2@26544>   BRA.w JL_0_11B6A
00034228 <AmiBlitz3.ab2@26547>     TST.w D1
0003422C <AmiBlitz3.ab2@26548>      BEQ.w JL_0_11B6A
0003422E <AmiBlitz3.ab2@26549>     MOVE.b D2,(A0)+
00034230 <AmiBlitz3.ab2@26552>     LSL.l #4,D3
00034234 <AmiBlitz3.ab2@26553>  DBF D0,JL_0_11B3C
00034238 <AmiBlitz3.ab2@26555> BRA.w JL_0_11B26
0003423A <AmiBlitz3.ab2@26558>   MOVE.l D3,D2
00034240 <AmiBlitz3.ab2@26559>   JSR makelong
0003424A <AmiBlitz3.ab2@26566>   MOVE.l destbufferend_backup_calc,destbufferend
0003424C <AmiBlitz3.ab2@26568> RTS                         ; added tomsmart 2012 03 07 vor Calculator in PED
0003434B <AmiBlitz3.ab2@26572> str_cliarguments: Ds.b 255   ; a command line can acutally be 255 characters long
0003434C <AmiBlitz3.ab2@26574> Even
0003438A <AmiBlitz3.ab2@26579>   !ComData_GetL{comFunc_OpenCompilerWindow,A1}
00034390 <AmiBlitz3.ab2@26580>   MOVE.l #1001,D0
00034396 <AmiBlitz3.ab2@26581>   MOVE.l #str_cliarguments,D1
00034398 <AmiBlitz3.ab2@26582>   JSR (A1)
0003439A <AmiBlitz3.ab2@26583> RTS
0003439C <AmiBlitz3.ab2@26588>     MOVE.b (a5)+,d0
000343A0 <AmiBlitz3.ab2@26589>     BEQ 'l2
000343A4 <AmiBlitz3.ab2@26590>     CMP.b #$80,d0
000343A8 <AmiBlitz3.ab2@26591>     BNE 'l1
000343AA <AmiBlitz3.ab2@26592>     MOVE.b (a5)+,d0
000343AE <AmiBlitz3.ab2@26593>     BEQ 'l2
000343B2 <AmiBlitz3.ab2@26594>     CMP.b #$02,d0
000343B6 <AmiBlitz3.ab2@26595>   BNE 'l1
000343BA <AmiBlitz3.ab2@26598>     CMP.b #$20,(a5)+
000343BE <AmiBlitz3.ab2@26599>   BEQ 'l3
000343C0 <AmiBlitz3.ab2@26600>   SUBQ.l #1,a5
000343C2 <AmiBlitz3.ab2@26601>   TST.b (a5)
000343C6 <AmiBlitz3.ab2@26602>   BEQ 'l2
000343CA <AmiBlitz3.ab2@26603>   CMP.w #$8008,(a5)
000343CE <AmiBlitz3.ab2@26604>   BEQ 'l4
000343D2 <AmiBlitz3.ab2@26605>   CMP.w #$8009,(a5)
000343D6 <AmiBlitz3.ab2@26606>   BEQ 'l4
000343DA <AmiBlitz3.ab2@26607> BRA 'l1
000343DC <AmiBlitz3.ab2@26610>   ADDQ.l #2,a5
000343E2 <AmiBlitz3.ab2@26611>   JSR skiprest
000343E4 <AmiBlitz3.ab2@26612> RTS
000343EA <AmiBlitz3.ab2@26615>   JSR nextline
000343EE <AmiBlitz3.ab2@26616>   BNE 'l1
000343F0 <AmiBlitz3.ab2@26617> RTS
0003441A <AmiBlitz3.ab2@26621>   !basic
00034424 <AmiBlitz3.ab2@26622>   DateFormat 1
00034432 <AmiBlitz3.ab2@26623>   i.l=SystemDate
00034458 <AmiBlitz3.ab2@26624>   a$=Date$ (i)
000344D6 <AmiBlitz3.ab2@26625>   a$=Replace$(a$,"/",".")
000344DC <AmiBlitz3.ab2@26626>   GetD0 &a$
000344DE <AmiBlitz3.ab2@26627>   MOVEQ #8,d2
000344E0 <AmiBlitz3.ab2@26628>   MOVE.l d0,a0
000344E2 <AmiBlitz3.ab2@26631>     MOVE.b (a0)+,d1
000344E8 <AmiBlitz3.ab2@26632>     JSR pokedata1b
000344EC <AmiBlitz3.ab2@26633>  DBF d2,'l1
000344EE <AmiBlitz3.ab2@26635>   MOVEQ #0,d0
000344F0 <AmiBlitz3.ab2@26636>   MOVE.b (a0)+,d0
0003450E <AmiBlitz3.ab2@26637>   !asm
00034514 <AmiBlitz3.ab2@26638>   ADD.l #9,d2
0003451A <AmiBlitz3.ab2@26639>   ADD.l #9,a5
0003451C <AmiBlitz3.ab2@26640> RTS
00034546 <AmiBlitz3.ab2@26644>   !basic
00034550 <AmiBlitz3.ab2@26645>   DateFormat 0
0003455E <AmiBlitz3.ab2@26646>   i.l=SystemDate
00034584 <AmiBlitz3.ab2@26647>   a$=Date$ (i)
00034602 <AmiBlitz3.ab2@26648>   a$=Replace$(a$,"/",".")
00034608 <AmiBlitz3.ab2@26649>   GetD0 &a$
0003460A <AmiBlitz3.ab2@26650>   MOVEQ #8,d2
0003460C <AmiBlitz3.ab2@26651>   MOVE.l d0,a0
0003460E <AmiBlitz3.ab2@26654>     MOVE.b (a0)+,d1
00034614 <AmiBlitz3.ab2@26655>     JSR pokedata1b
00034618 <AmiBlitz3.ab2@26656>  DBF d2,'l1
0003461A <AmiBlitz3.ab2@26658>   MOVEQ #0,d0
0003461C <AmiBlitz3.ab2@26659>   MOVE.b (a0)+,d0
0003463A <AmiBlitz3.ab2@26660>   !asm
00034640 <AmiBlitz3.ab2@26661>   ADD.l #9,d2
00034646 <AmiBlitz3.ab2@26662>   ADD.l #13,a5
00034648 <AmiBlitz3.ab2@26663> RTS
00034672 <AmiBlitz3.ab2@26667>   !basic
0003467C <AmiBlitz3.ab2@26668>   DateFormat 1
0003468A <AmiBlitz3.ab2@26669>   i.l = SystemDate
000346B0 <AmiBlitz3.ab2@26670>   a$ = Date$ (i)
0003472E <AmiBlitz3.ab2@26671>   a$ = Replace$(a$,"/",".")
00034734 <AmiBlitz3.ab2@26672>   GetD0 &a$
00034736 <AmiBlitz3.ab2@26673>   MOVEQ #8,d2
00034738 <AmiBlitz3.ab2@26674>   MOVE.l d0,a0
0003473A <AmiBlitz3.ab2@26677>     MOVE.b (a0)+,d1
00034740 <AmiBlitz3.ab2@26678>     JSR writebyte
00034744 <AmiBlitz3.ab2@26679>  DBF d2,'l1
00034746 <AmiBlitz3.ab2@26681>   MOVEQ #0,d0
00034748 <AmiBlitz3.ab2@26682>   MOVE.b (a0)+,d0
00034766 <AmiBlitz3.ab2@26683>   !asm
0003476C <AmiBlitz3.ab2@26684>   ADD.l #9,a5
0003476E <AmiBlitz3.ab2@26685> RTS
00034798 <AmiBlitz3.ab2@26689>   !basic
000347A2 <AmiBlitz3.ab2@26690>   DateFormat 0
000347B0 <AmiBlitz3.ab2@26691>   i.l=SystemDate
000347D6 <AmiBlitz3.ab2@26692>   a$=Date$ (i)
00034854 <AmiBlitz3.ab2@26693>   a$=Replace$(a$,"/",".")
0003485A <AmiBlitz3.ab2@26694>   GetD0 &a$
0003485C <AmiBlitz3.ab2@26695>   MOVEQ #8,d2
0003485E <AmiBlitz3.ab2@26696>   MOVE.l d0,a0
00034860 <AmiBlitz3.ab2@26699>     MOVE.b (a0)+,d1
00034866 <AmiBlitz3.ab2@26700>     JSR writebyte
0003486A <AmiBlitz3.ab2@26701>  DBF d2,'l1
0003486C <AmiBlitz3.ab2@26703>   MOVEQ #0,d0
0003486E <AmiBlitz3.ab2@26704>   MOVE.b (a0)+,d0
0003488C <AmiBlitz3.ab2@26705>   !asm
00034892 <AmiBlitz3.ab2@26706>   ADD.l #13,a5
00034894 <AmiBlitz3.ab2@26707> RTS
00034896 <AmiBlitz3.ab2@26711>   MOVE.l d2,-(a7)                                          ; D2 -> stack
00034898 <AmiBlitz3.ab2@26712>   MOVE.l a5,d0
000348C2 <AmiBlitz3.ab2@26713>   !basic
000348C6 <AmiBlitz3.ab2@26714>   _myD0.l = PutD0
000348D0 <AmiBlitz3.ab2@26715>   If _myD0
00034916 <AmiBlitz3.ab2@26716>     verstring$ = Left$(Peek.s(_myD0),9+3)
00034968 <AmiBlitz3.ab2@26717>     verstring$ = UnRight$(verstring$,3)                      ; Compilerkonstantenbeginn \__ entfernen
0003496E <AmiBlitz3.ab2@26718>   Else
0003499C <AmiBlitz3.ab2@26719>     error{"INTERNAL: Invalid pointer in version_string!"}
000349AC <AmiBlitz3.ab2@26724>   actual_version.l = Peek.l(?versioninformation)
000349BC <AmiBlitz3.ab2@26725>   actual_build.l   = Peek.l(?number_of_builds)
000349E0 <AmiBlitz3.ab2@26727>   Format "00"
00034A16 <AmiBlitz3.ab2@26728>   Select verstring$
00034A3A <AmiBlitz3.ab2@26730>     Case "VER_MAJOR"
00034A76 <AmiBlitz3.ab2@26731>      put_versionstr$ = Str$(actual_version LSR 24)
00034AA0 <AmiBlitz3.ab2@26733>     Case "VER_MINOR"
00034AE4 <AmiBlitz3.ab2@26734>      put_versionstr$ = Str$((actual_version LSL 8) LSR 24)
00034B0E <AmiBlitz3.ab2@26736>     Case "VER_PATCH"
00034B52 <AmiBlitz3.ab2@26737>      put_versionstr$ = Str$((actual_version LSL 16) LSR 24 )
00034B7C <AmiBlitz3.ab2@26739>     Case "VER_BUILD"
00034BA0 <AmiBlitz3.ab2@26740>      Format ""
00034BD4 <AmiBlitz3.ab2@26741>      put_versionstr$ = Str$(actual_build)
00034BDA <AmiBlitz3.ab2@26743>     Default
00034C02 <AmiBlitz3.ab2@26744>      put_versionstr$ = "{unknown compilerconstant}"
00034C10 <AmiBlitz3.ab2@26747>   End Select
00034C34 <AmiBlitz3.ab2@26748>   Format ""
00034C44 <AmiBlitz3.ab2@26750>   GetD0 FLen(put_versionstr$)                              ; laenge zielstring -> Stack
00034C46 <AmiBlitz3.ab2@26751>   MOVE.l d0,d2
00034C48 <AmiBlitz3.ab2@26752>   MOVE.l d2,-(a7)
00034C4C <AmiBlitz3.ab2@26753>   SUB #1,d2
00034C52 <AmiBlitz3.ab2@26755>   GetD0 &put_versionstr$                                   ; kopieren des neuen Strings in den Zielstring
00034C54 <AmiBlitz3.ab2@26756>   MOVE.l d0,a0
00034C56 <AmiBlitz3.ab2@26759>     MOVE.b (a0)+,d1
00034C5C <AmiBlitz3.ab2@26760>     JSR pokedata1b
00034C60 <AmiBlitz3.ab2@26761>  DBF d2,'l1
00034C62 <AmiBlitz3.ab2@26763>   MOVEQ #0,d0
00034C80 <AmiBlitz3.ab2@26764>   !asm
00034C82 <AmiBlitz3.ab2@26765>   MOVE.l (a7)+,d0                                          ; laenge Zielstring <- Stack
00034C84 <AmiBlitz3.ab2@26766>   MOVE.l (a7)+,d2                                          ; d2 <-Stack
00034C86 <AmiBlitz3.ab2@26767>   ADD.l d0,d2
00034C8C <AmiBlitz3.ab2@26768>   ADD.l #12,a5                                             ; string_ptr um konstante weitersetzen
00034C8E <AmiBlitz3.ab2@26769>   MOVEQ #0,d0
00034C90 <AmiBlitz3.ab2@26770> RTS
00034C92 <AmiBlitz3.ab2@26774>   MOVE.l a5,d0
00034CBC <AmiBlitz3.ab2@26775>   !basic
00034CC0 <AmiBlitz3.ab2@26776>   _myD0.l = PutD0
00034CCA <AmiBlitz3.ab2@26777>   If _myD0
00034D10 <AmiBlitz3.ab2@26778>     verstring$ = Left$(Peek.s(_myD0),9+3)
00034D62 <AmiBlitz3.ab2@26779>     verstring$ = UnRight$(verstring$,3)                      ; Compilerkonstantenbeginn \__ entfernen
00034D68 <AmiBlitz3.ab2@26780>   Else
00034D96 <AmiBlitz3.ab2@26781>     error{"INTERNAL: Invalid pointer in version_string_dc!"}
00034DA6 <AmiBlitz3.ab2@26786>   actual_version.l = Peek.l(?versioninformation)
00034DB6 <AmiBlitz3.ab2@26787>   actual_build.l   = Peek.l(?number_of_builds)
00034DDA <AmiBlitz3.ab2@26789>   Format ""
00034E10 <AmiBlitz3.ab2@26790>   Select verstring$
00034E34 <AmiBlitz3.ab2@26792>     Case "VER_MAJOR"
00034E70 <AmiBlitz3.ab2@26793>      put_versionstr$ = Str$(actual_version LSR 24)
00034E9A <AmiBlitz3.ab2@26795>     Case "VER_MINOR"
00034EDE <AmiBlitz3.ab2@26796>      put_versionstr$ = Str$((actual_version LSL 8) LSR 24)
00034F08 <AmiBlitz3.ab2@26798>     Case "VER_PATCH"
00034F4C <AmiBlitz3.ab2@26799>      put_versionstr$ = Str$((actual_version LSL 16) LSR 24 )
00034F76 <AmiBlitz3.ab2@26801>     Case "VER_BUILD"
00034F9A <AmiBlitz3.ab2@26802>      Format ""
00034FCE <AmiBlitz3.ab2@26803>      put_versionstr$ = Str$(actual_build)
00034FD4 <AmiBlitz3.ab2@26805>     Default
00034FFC <AmiBlitz3.ab2@26806>      put_versionstr$ = "{unknown compilerconstant}"
0003500A <AmiBlitz3.ab2@26808>   End Select
0003502E <AmiBlitz3.ab2@26809>   Format ""
00035044 <AmiBlitz3.ab2@26811>   GetD0 FLen(put_versionstr$)-1
00035046 <AmiBlitz3.ab2@26812>   MOVE.l d0,d2
0003504C <AmiBlitz3.ab2@26814>   GetD0 &put_versionstr$                                   ; kopieren des neuen Strings in den Zielstring
0003504E <AmiBlitz3.ab2@26815>   MOVE.l d0,a0
00035050 <AmiBlitz3.ab2@26818>     MOVE.b (a0)+,d1
00035056 <AmiBlitz3.ab2@26819>     JSR writebyte
0003505A <AmiBlitz3.ab2@26820>  DBF d2,'l1
0003505C <AmiBlitz3.ab2@26822>   MOVEQ #0,d0
0003505E <AmiBlitz3.ab2@26823>   MOVE.b -(a0),d0                                          ; letztes Zeichen in D0
0003507C <AmiBlitz3.ab2@26824>   !asm
00035082 <AmiBlitz3.ab2@26825>   ADD.l #12,a5                                             ; string_ptr um konstante weitersetzen
00035084 <AmiBlitz3.ab2@26826> RTS
00035086 <AmiBlitz3.ab2@26928>  MOVE.l a5,-(a7)
000350B2 <AmiBlitz3.ab2@26929>  !fget
000350B6 <AmiBlitz3.ab2@26930>  CMP.w #".",d0
000350BA <AmiBlitz3.ab2@26931>  BNE 'skip
000350BE <AmiBlitz3.ab2@26932>  MOVEM.l a2/d2,-(a7)
000350C4 <AmiBlitz3.ab2@26933>  LEA newtypebase,a2
000350CA <AmiBlitz3.ab2@26934>  JSR getparameter2
000350CE <AmiBlitz3.ab2@26935>  BEQ.w JUMP_syntaxerr
000350D4 <AmiBlitz3.ab2@26936>  JSR findtype
000350D8 <AmiBlitz3.ab2@26937>  BNE.w JUMP_notypeerr
000350DE <AmiBlitz3.ab2@26938>  MOVE.l a2,typetocast
000350E2 <AmiBlitz3.ab2@26939>  MOVEM.l (a7)+,a2/d2
000350E6 <AmiBlitz3.ab2@26940>  CMP.w #")",d0
000350EA <AmiBlitz3.ab2@26941>  BNE JUMP_errorbracketmiss
000350EC <AmiBlitz3.ab2@26942>  ADDQ.l #4,a7
00035118 <AmiBlitz3.ab2@26943>  !fget
0003511E <AmiBlitz3.ab2@26944>  JMP nocast
00035120 <AmiBlitz3.ab2@26946> 'skip MOVE.l (a7)+,a5
00035126 <AmiBlitz3.ab2@26947>  JMP JL_0_A410
0003512C <AmiBlitz3.ab2@26949> JUMP_errorbracketmiss JMP errorbracketmiss
00035156 <AmiBlitz3.ab2@26951> Function.l ab3_GetIncludeLock{filename.s}
00035176 <AmiBlitz3.ab2@26952>   incLock.l  = Lock_ (&filename,#ACCESS_READ)   ; try bla.blub
000351CE <AmiBlitz3.ab2@26953>   ex.s       = dos_GetExt{filename}
000351E2 <AmiBlitz3.ab2@26955>   If incLock = False
00035256 <AmiBlitz3.ab2@26956>     filename = dos_SetExt{filename,"ab3"}
00035276 <AmiBlitz3.ab2@26957>     incLock  = Lock_ (&filename,#ACCESS_READ)   ; try bla.ab3
0003528A <AmiBlitz3.ab2@26960>   If incLock = False
000352FE <AmiBlitz3.ab2@26961>     filename = dos_SetExt{filename,"ab2"}
0003531E <AmiBlitz3.ab2@26962>     incLock  = Lock_ (&filename,#ACCESS_READ)   ; try bla.ab2
00035332 <AmiBlitz3.ab2@26965>   If incLock = False
000353A6 <AmiBlitz3.ab2@26966>     filename = dos_SetExt{filename,"bb2"}
000353C6 <AmiBlitz3.ab2@26967>     incLock  = Lock_ (&filename,#ACCESS_READ)   ; try bla.bb2
000353DA <AmiBlitz3.ab2@26970>   If incLock = False
0003546C <AmiBlitz3.ab2@26971>     filename = dos_SetExt{filename,ex+".ab3"}
0003548C <AmiBlitz3.ab2@26972>     incLock  = Lock_ (&filename,#ACCESS_READ)   ; try bla.blub.ab3
000354A0 <AmiBlitz3.ab2@26975>   If incLock = False
00035514 <AmiBlitz3.ab2@26976>     filename = dos_SetExt{filename,"ab2"}
00035534 <AmiBlitz3.ab2@26977>     incLock  = Lock_ (&filename,#ACCESS_READ)   ; try bla.blub.ab2
00035548 <AmiBlitz3.ab2@26980>   If incLock = False
000355BC <AmiBlitz3.ab2@26981>     filename = dos_SetExt{filename,"bb2"}
000355DC <AmiBlitz3.ab2@26982>     incLock  = Lock_ (&filename,#ACCESS_READ)   ; try bla.blub.bb2
000355E6 <AmiBlitz3.ab2@26985>  Function Return incLock
00035600 <AmiBlitz3.ab2@26986> End Function
0003562A <AmiBlitz3.ab2@26990>   !basic
00035654 <AmiBlitz3.ab2@26991>   incString.s = Peek$(?ptr_parameterstore)
00035682 <AmiBlitz3.ab2@26993>   !ComData_LEA{comStr_CurrentDir,D0}                        ; get pointer to current Sourcefiledir
00035686 <AmiBlitz3.ab2@26994>   incDirP.l   = PutD0                                       ;    "
000356AE <AmiBlitz3.ab2@26995>   incDir_.s   = Peek.s(incDirP)                             ; get current Sourcefiledir
0003572E <AmiBlitz3.ab2@26996>   incFile.s   = dos_AddPart{incDir_,incString}              ; adding Sourcefiledir and Includestring
00035760 <AmiBlitz3.ab2@26997>   incLock.l   = ab3_GetIncludeLock{incFile}                 ; check if file exist
00035774 <AmiBlitz3.ab2@26999>   If incLock = False ; not found => check default Include Directory
00035784 <AmiBlitz3.ab2@27000>     incDirP.l = Peek.l(?incd)
0003578E <AmiBlitz3.ab2@27001>     If incDirP
000357B6 <AmiBlitz3.ab2@27002>       incDir_.s = Peek.s(incDirP)
000357BC <AmiBlitz3.ab2@27003>     Else
00035826 <AmiBlitz3.ab2@27004>       incDir_.s = dos_AddPart{Peek.s(?str_blitz3assign),"Sourcecodes/Includes"}
000358A6 <AmiBlitz3.ab2@27006>     incFile.s = dos_AddPart{incDir_,incString}
000358D8 <AmiBlitz3.ab2@27007>     incLock.l = ab3_GetIncludeLock{incFile}
000358EC <AmiBlitz3.ab2@27010>   If incLock = False ; not found => check relative to current source
00035904 <AmiBlitz3.ab2@27011>     incDepth.l = Peek.w(?ininclude)-1
0003592A <AmiBlitz3.ab2@27012>     If incDepth >= 0 AND incDepth < #maxincludes
0003598A <AmiBlitz3.ab2@27013>       incDir_.s = dos_PathPart{incdim (incDepth)} ;= Peek.s(?includetemp2)
00035A0A <AmiBlitz3.ab2@27014>       incFile.s = dos_AddPart{incDir_,incString}
00035A3C <AmiBlitz3.ab2@27015>       incLock.l = ab3_GetIncludeLock{incFile}
00035A50 <AmiBlitz3.ab2@27019>   If incLock = False ; still not found => check default Include Directory and name only
00035A60 <AmiBlitz3.ab2@27020>     incDirP.l = Peek.l(?incd)
00035A6A <AmiBlitz3.ab2@27021>     If incDirP
00035A92 <AmiBlitz3.ab2@27022>       incDir_.s = Peek.s(incDirP)
00035A98 <AmiBlitz3.ab2@27023>     Else
00035B02 <AmiBlitz3.ab2@27024>       incDir_.s = dos_AddPart{Peek.s(?str_blitz3assign),"Sourcecodes/Includes"}
00035BB0 <AmiBlitz3.ab2@27026>     incFile.s = dos_AddPart{incDir_,dos_FilePart{incString}}
00035BE2 <AmiBlitz3.ab2@27027>     incLock.l = ab3_GetIncludeLock{incFile}
00035BEC <AmiBlitz3.ab2@27030>   If incLock
00035C02 <AmiBlitz3.ab2@27031>     MaxLen incFile = 1024
00035C26 <AmiBlitz3.ab2@27032>     NameFromLock_ incLock,&incFile,1024
00035C50 <AmiBlitz3.ab2@27033>     incFile = Peek.s(&incFile)
00035C88 <AmiBlitz3.ab2@27034>     Poke$ ?ptr_parameterstore,incFile
00035C9C <AmiBlitz3.ab2@27035>     i = FLen(incFile)
00035CA8 <AmiBlitz3.ab2@27036>     GetReg d0,i
00035CAE <AmiBlitz3.ab2@27037>     MOVE.l d0,tempstore
00035CBE <AmiBlitz3.ab2@27038>     UnLock_ incLock
00035CDC <AmiBlitz3.ab2@27041>   !asm
00035CE2 <AmiBlitz3.ab2@27042>   TST.l tempstore
00035CE6 <AmiBlitz3.ab2@27043>    BEQ 'l1
00035CEC <AmiBlitz3.ab2@27044>   MOVE.l tempstore,d2
00035CEE <AmiBlitz3.ab2@27047> RTS
00035D18 <AmiBlitz3.ab2@27051>   !basic
00035D42 <AmiBlitz3.ab2@27052>   incString.s = Peek$(?ptr_parameterstore)                  ; get the string
00035D70 <AmiBlitz3.ab2@27053>   !ComData_LEA{comStr_CurrentDir,D0}                        ; get pointer to current Sourcefiledir
00035D74 <AmiBlitz3.ab2@27054>   incDirP.l   = PutD0                                       ;    "
00035D9C <AmiBlitz3.ab2@27055>   incDir_.s   = Peek.s(incDirP)                             ; get current Sourcefiledir
00035E1C <AmiBlitz3.ab2@27056>   incFile.s   = dos_AddPart{incDir_,incString}              ; adding Sourcefiledir and Includestring
00035E3C <AmiBlitz3.ab2@27057>   incLock.l   = Lock_(&incFile,#ACCESS_READ)                ; check if file exist
00035E50 <AmiBlitz3.ab2@27059>   If incLock = False                                        ; not found => try orignal string only to find
00035E70 <AmiBlitz3.ab2@27060>     incLock.l = Lock_(&incString,#ACCESS_READ)
00035E7A <AmiBlitz3.ab2@27063>   If incLock                                                ; found => store full path
00035E90 <AmiBlitz3.ab2@27064>     MaxLen incFile = 1024
00035EB4 <AmiBlitz3.ab2@27065>     NameFromLock_ incLock,&incFile,1024
00035EDE <AmiBlitz3.ab2@27066>     incFile = Peek.s(&incFile)
00035F16 <AmiBlitz3.ab2@27067>     Poke$ ?ptr_parameterstore,incFile
00035F22 <AmiBlitz3.ab2@27070> 
00035F40 <AmiBlitz3.ab2@27071>   !asm
00035F42 <AmiBlitz3.ab2@27072> RTS
00035F48 <AmiBlitz3.ab2@27083>   JSR Aclearallvars
00035F4E <AmiBlitz3.ab2@27084>   JSR free_unusedfunctions
00035F58 <AmiBlitz3.ab2@27099>   MOVE.l #"NORE",reqmode
00035F5E <AmiBlitz3.ab2@27100> JSR handle_compileerror
00035F60 <AmiBlitz3.ab2@27103>   MOVE.l d0,-(a7)
00035F62 <AmiBlitz3.ab2@27104>   MOVE.l a5,d0
00035F6C <AmiBlitz3.ab2@27105>   !basica7
00035F70 <AmiBlitz3.ab2@27106>   i.l = PutD0
00035F7A <AmiBlitz3.ab2@27107>   If i
00035FA2 <AmiBlitz3.ab2@27108>     a$ = Peek$(i)
00035FD4 <AmiBlitz3.ab2@27109>     b$ = Peeks$(i-7,7)
000360BA <AmiBlitz3.ab2@27110>     i = Request(!TRANS{"Do workaround ?"},b$ + a$,!TRANS{"Yes|No"})
000360C0 <AmiBlitz3.ab2@27111>     MOVE.l d0,result
000360C4 <AmiBlitz3.ab2@27113>   !asma7
000360C6 <AmiBlitz3.ab2@27114>   MOVE.l (a7)+,d0
000360C8 <AmiBlitz3.ab2@27115> RTS
000360F2 <AmiBlitz3.ab2@27119>   !basic
00036120 <AmiBlitz3.ab2@27120>   !ComData_LEA{comStr_CurrentDir,D0}
00036124 <AmiBlitz3.ab2@27121>   currentDirP.l = PutD0
00036152 <AmiBlitz3.ab2@27123>   !ComData_LEA{comStr_SourceName,D0}
00036156 <AmiBlitz3.ab2@27124>   fileNameP.l = PutD0
0003617E <AmiBlitz3.ab2@27126>   check_dirname$  = Peek$(currentDirP)
000361A6 <AmiBlitz3.ab2@27127>   check_filename$ = Peek$(fileNameP)
0003622C <AmiBlitz3.ab2@27128>   If (olddirname$<>check_dirname$) OR (oldfilename$<>check_filename$)
00036232 <AmiBlitz3.ab2@27129>     JSR free_unusedfunctions
0003627C <AmiBlitz3.ab2@27131>   olddirname$ = Peek$(check_dirname$)
000362C6 <AmiBlitz3.ab2@27132>   oldfilename$ = Peek$(check_filename$)
000362F0 <AmiBlitz3.ab2@27133>   For i = 0 To #maxincludes-1
00036304 <AmiBlitz3.ab2@27134>     incline(i) = 0
00036314 <AmiBlitz3.ab2@27135>   Next
00036332 <AmiBlitz3.ab2@27136>   !asm
00036334 <AmiBlitz3.ab2@27137> RTS
00036336 <AmiBlitz3.ab2@27141>   MOVEQ #0,d1
00036338 <AmiBlitz3.ab2@27144>   MOVE.b (a5)+,d0
0003633C <AmiBlitz3.ab2@27145>   BEQ 'er1
00036340 <AmiBlitz3.ab2@27146>   CMP.b #$20,d0
00036344 <AmiBlitz3.ab2@27147>   BEQ 'l1
00036346 <AmiBlitz3.ab2@27148>   ADDQ #1,d1
0003634A <AmiBlitz3.ab2@27149>   CMP.b #$22,d0
0003634E <AmiBlitz3.ab2@27150>   BNE 'l1
00036350 <AmiBlitz3.ab2@27151> RTS
00036356 <AmiBlitz3.ab2@27154> JMP syntaxerr
0003637A <AmiBlitz3.ab2@27165> erro1t   Dc.b "Only one BSS / Chip Segment allowed",0 : Even
00036398 <AmiBlitz3.ab2@27166> nodata   Dc.b "BSS Segment contains Data!!!!",0       : Even
0003639E <AmiBlitz3.ab2@27171>   TST.b exdebug
000363A2 <AmiBlitz3.ab2@27172>   BNE 'l10
000363A8 <AmiBlitz3.ab2@27173>   MOVE.l #$4e71,d1
000363AE <AmiBlitz3.ab2@27174>   JSR writeword
000363B4 <AmiBlitz3.ab2@27175>   MOVE.l destpointer,d0
000363B6 <AmiBlitz3.ab2@27176>   MOVE.l d0,d1
000363B8 <AmiBlitz3.ab2@27177>   ADDQ.l #3,d1
000363BE <AmiBlitz3.ab2@27178>   AND.l #$fffffffc,d1
000363C4 <AmiBlitz3.ab2@27179>   MOVE.l d1,destpointer
000363CA <AmiBlitz3.ab2@27180>   SUB.l destpointer,d0
000363CE <AmiBlitz3.ab2@27181>   BEQ 'lnf1
000363D8 <AmiBlitz3.ab2@27182>   CMP.l #-1,bssstart
000363DC <AmiBlitz3.ab2@27183>   BNE 'lnf1
000363E6 <AmiBlitz3.ab2@27184>   CMP.l #-1,chipstart
000363EA <AmiBlitz3.ab2@27185>   BNE 'lnf1
000363F0 <AmiBlitz3.ab2@27186>   MOVE.l destpointer,a4
000363F6 <AmiBlitz3.ab2@27187>   TST.w dontwrite
000363FA <AmiBlitz3.ab2@27188>   BNE 'lnf1
00036400 <AmiBlitz3.ab2@27189>   MOVE.w #$4e71,-2(a4)
0003640A <AmiBlitz3.ab2@27192>   CMP.l #-1,bssstart
0003640E <AmiBlitz3.ab2@27193>   BEQ 'l11
00036414 <AmiBlitz3.ab2@27194>   MOVE.l #erro1t,-(a7)
0003641A <AmiBlitz3.ab2@27195> JMP handle_compileerror
00036424 <AmiBlitz3.ab2@27198>   MOVE.l destpointer,bssstart
0003642C <AmiBlitz3.ab2@27199>   MOVE.b #1,bssmode
00036432 <AmiBlitz3.ab2@27202>   TST.b chipmode
00036436 <AmiBlitz3.ab2@27203>   BEQ 'l10
00036440 <AmiBlitz3.ab2@27204>   MOVE.l destpointer,chipend
00036446 <AmiBlitz3.ab2@27205>   CLR.b chipmode
0003644C <AmiBlitz3.ab2@27208>   JSR get1bytemain
0003644E <AmiBlitz3.ab2@27209> RTS
00036454 <AmiBlitz3.ab2@27213>    TST.b exdebug
00036458 <AmiBlitz3.ab2@27214>   BNE 'x1
0003645E <AmiBlitz3.ab2@27215>   MOVE.l destpointer,d0
00036464 <AmiBlitz3.ab2@27216>   MOVE.l d0,realbssend
0003646A <AmiBlitz3.ab2@27217>   MOVE.l #$4e71,d1
00036470 <AmiBlitz3.ab2@27218>   JSR writeword
00036476 <AmiBlitz3.ab2@27219>   MOVE.l destpointer,d0
00036478 <AmiBlitz3.ab2@27220>   MOVE.l d0,d1
0003647A <AmiBlitz3.ab2@27221>   ADDQ.l #3,d1
00036480 <AmiBlitz3.ab2@27222>   AND.l #$fffffffc,d1
00036486 <AmiBlitz3.ab2@27223>   MOVE.l d1,destpointer
0003648C <AmiBlitz3.ab2@27224>   SUB.l destpointer,d0
00036490 <AmiBlitz3.ab2@27225>   BEQ 'lnf1
00036496 <AmiBlitz3.ab2@27226>   MOVE.l destpointer,a4
000364A0 <AmiBlitz3.ab2@27227>   CMP.l #-1,bssstart
000364A4 <AmiBlitz3.ab2@27228>   BNE 'lnf1
000364AE <AmiBlitz3.ab2@27229>   CMP.l #-1,chipstart
000364B2 <AmiBlitz3.ab2@27230>   BNE 'lnf1
000364B8 <AmiBlitz3.ab2@27231>   TST.w dontwrite
000364BC <AmiBlitz3.ab2@27232>   BNE 'lnf1
000364C2 <AmiBlitz3.ab2@27233>   MOVE.w #$4e71,-2(a4)
000364C8 <AmiBlitz3.ab2@27236>   TST.b bssmode
000364CC <AmiBlitz3.ab2@27237>   BEQ 'l10
000364D6 <AmiBlitz3.ab2@27238>   MOVE.l destpointer,bssend
000364DC <AmiBlitz3.ab2@27239>   CLR.b bssmode
000364E6 <AmiBlitz3.ab2@27244>   CMP.l #-1,chipstart
000364EA <AmiBlitz3.ab2@27245>   BEQ 'l11
000364F0 <AmiBlitz3.ab2@27246>   MOVE.l #erro1t,-(a7)
000364F6 <AmiBlitz3.ab2@27247> JMP handle_compileerror
00036500 <AmiBlitz3.ab2@27250>   MOVE.l destpointer,chipstart
00036508 <AmiBlitz3.ab2@27251>   MOVE.b #1,chipmode
0003650E <AmiBlitz3.ab2@27254>   JSR get1bytemain
00036510 <AmiBlitz3.ab2@27255> RTS
0003653A <AmiBlitz3.ab2@27259>   !basic
0003654C <AmiBlitz3.ab2@27269>   i.l = Peek.w(?ininclude)
00036572 <AmiBlitz3.ab2@27270>   If i>=0 AND i<#maxincludes
000365A4 <AmiBlitz3.ab2@27271>     incdim (i) = Peek.s(?includetemp2)
000365BE <AmiBlitz3.ab2@27272>     incline(i) = Peek.l(?includeline)
000365C8 <AmiBlitz3.ab2@27274>     If CLIMode
00036676 <AmiBlitz3.ab2@27275>       If cli_verbose>=2 Then NPrint "  -> Compiling ",incdim(i),"..."
00036694 <AmiBlitz3.ab2@27279>   !asm
00036696 <AmiBlitz3.ab2@27280> RTS
000366C0 <AmiBlitz3.ab2@27284>   !basic
000366D2 <AmiBlitz3.ab2@27285>   i.l = Peek.w(?ininclude)
000366F8 <AmiBlitz3.ab2@27286>   If i>=0 AND i<#maxincludes
00036728 <AmiBlitz3.ab2@27287>     incdim (i) = ""
0003673C <AmiBlitz3.ab2@27288>     incline(i) = 0
00036774 <AmiBlitz3.ab2@27289>     If i>0 Then Poke.l (?includeline),incline(i-1)+1
00036792 <AmiBlitz3.ab2@27291>   !asm
00036794 <AmiBlitz3.ab2@27292> RTS
0003679A <AmiBlitz3.ab2@27296>   LEA replacedat,a0
0003679E <AmiBlitz3.ab2@27297>   Dc.w $3181,$0A00                                         ;MOVE.w d1,0(a0,d0.l*2)
000367A0 <AmiBlitz3.ab2@27298> RTS
000367A6 <AmiBlitz3.ab2@27302>   TST.b fpu
000367AA <AmiBlitz3.ab2@27303>   BEQ 'l1
000367B4 <AmiBlitz3.ab2@27306>   MOVE.l destpointer,newinitaddr
000367BA <AmiBlitz3.ab2@27307>   JSR writeword
000367C0 <AmiBlitz3.ab2@27308>   JSR writelong
000367C2 <AmiBlitz3.ab2@27309> RTS
000367C4 <AmiBlitz3.ab2@27314>   TST.b (a5)
000367C8 <AmiBlitz3.ab2@27315>    BEQ.s 'll20
000367CC <AmiBlitz3.ab2@27316>   CMP.b #$20,(a5)
000367D0 <AmiBlitz3.ab2@27317>    BNE.s 'll10
000367D2 <AmiBlitz3.ab2@27318>   ADDQ.l #1,a5
000367D6 <AmiBlitz3.ab2@27319> BRA.s 'll21
000367DA <AmiBlitz3.ab2@27322>   CMP.b #";",(a5)
000367DE <AmiBlitz3.ab2@27323>   BNE.s 'll20
000367E0 <AmiBlitz3.ab2@27326>   TST.b (a5)+
000367E4 <AmiBlitz3.ab2@27327>   BEQ.s 'll23
000367E8 <AmiBlitz3.ab2@27328> BRA.s 'll25
000367EA <AmiBlitz3.ab2@27331>   SUBQ.l #1,a5
000367EC <AmiBlitz3.ab2@27334> RTS
000367F0 <AmiBlitz3.ab2@27338>   MOVEM.l a2/d2,-(a7)
000367F2 <AmiBlitz3.ab2@27339>   MOVEQ #0,d2
000367F8 <AmiBlitz3.ab2@27340>   LEA ptr_parameterstore,a0
000367FE <AmiBlitz3.ab2@27341>   LEA chartab,a2
00036800 <AmiBlitz3.ab2@27344>   MOVE.b (a5),d0
00036804 <AmiBlitz3.ab2@27345>   TST.b 0(a2,d0)
00036808 <AmiBlitz3.ab2@27346>   BNE 'l10
0003680A <AmiBlitz3.ab2@27347>   ADDQ.l #1,a5
0003680C <AmiBlitz3.ab2@27348>   MOVE.b d0,(a0)+
0003680E <AmiBlitz3.ab2@27349>   ADDQ.l #1,d2
00036812 <AmiBlitz3.ab2@27350> BRA fc2
00036814 <AmiBlitz3.ab2@27353>   CLR.b (a0)+
0003681A <AmiBlitz3.ab2@27354>   JSR findlabel2
0003681C <AmiBlitz3.ab2@27355>   MOVE.l a2,a0
00036820 <AmiBlitz3.ab2@27356>   MOVEM.l (a7)+,a2/d2
00036822 <AmiBlitz3.ab2@27357> RTS
00036824 <AmiBlitz3.ab2@27361>   TST.l d0
00036828 <AmiBlitz3.ab2@27362>   BNE 'l10
0003682E <AmiBlitz3.ab2@27363>     MOVE.l #syntax_,-(a7)
00036834 <AmiBlitz3.ab2@27364> JMP handle_compileerror
0003683A <AmiBlitz3.ab2@27367>   CMP.l #1,d0
0003683E <AmiBlitz3.ab2@27368>   BNE 'l20
00036844 <AmiBlitz3.ab2@27369>     MOVE.l #overflow,-(a7)
0003684A <AmiBlitz3.ab2@27370> JMP handle_compileerror
0003684C <AmiBlitz3.ab2@27373>   ADD.l a2,d0
0003684E <AmiBlitz3.ab2@27374>   MOVE.l d0,-(a7)
00036854 <AmiBlitz3.ab2@27375> JMP handle_compileerror
0003685A <AmiBlitz3.ab2@27379>   JMP _return
00036860 <AmiBlitz3.ab2@27380>   JMP _return
00036866 <AmiBlitz3.ab2@27381>   JMP _return
0003686C <AmiBlitz3.ab2@27382>   JMP _return
00036872 <AmiBlitz3.ab2@27383>   JMP _return
00036878 <AmiBlitz3.ab2@27384>   JMP _return
0003687E <AmiBlitz3.ab2@27385>   JMP _return
00036884 <AmiBlitz3.ab2@27386>   JMP _return
0003688A <AmiBlitz3.ab2@27387>   JMP _return
00036890 <AmiBlitz3.ab2@27388>   JMP _return
00036896 <AmiBlitz3.ab2@27389>   JMP Atokejsr
0003689C <AmiBlitz3.ab2@27390>   JMP writeinit
000368A2 <AmiBlitz3.ab2@27391>   JMP macroexecute
000368A8 <AmiBlitz3.ab2@27392>   JMP findnext
000368AE <AmiBlitz3.ab2@27393>   JMP replacelib
000368B4 <AmiBlitz3.ab2@27394>   JMP findconstant2
000368BA <AmiBlitz3.ab2@27395>   JMP findchar                                             ;char in d1
000368C0 <AmiBlitz3.ab2@27396>   JMP stripspaces
000368C6 <AmiBlitz3.ab2@27397>   JMP calc                                                 ;d0 varmode
000368CC <AmiBlitz3.ab2@27398>   JMP error
000368D2 <AmiBlitz3.ab2@27399>   JMP writelong                                            ;d1 value
000368D8 <AmiBlitz3.ab2@27400>   JMP writeword                                            ;d1 value
000368DE <AmiBlitz3.ab2@27401>   JMP writebyte                                            ;d1 value
000368E4 <AmiBlitz3.ab2@27402> JMP exit
000368E8 <AmiBlitz3.ab2@27406>   destpointer:    Ds.l 1                                ;pc org source      ;Ds.w 1
000368EA <AmiBlitz3.ab2@27409>   fast            Dc.w 0
000368EC <AmiBlitz3.ab2@27410>   fpu             Dc.w 0
000368EE <AmiBlitz3.ab2@27411>   newsyntax       Dc.w 0
000368EF <AmiBlitz3.ab2@27413>   optistring      Dc.b 0
000368F0 <AmiBlitz3.ab2@27414>   optistring2     Dc.b 0
000368F1 <AmiBlitz3.ab2@27415>   optiarray       Dc.b 0
000368F2 <AmiBlitz3.ab2@27416>   quickadd        Dc.b 0
000368F4 <AmiBlitz3.ab2@27417>   newmode         Dc.w 0
000368F6 <AmiBlitz3.ab2@27418>   mode            Dc.w 0
000368F8 <AmiBlitz3.ab2@27419>   string1         Dc.w 0
000368FA <AmiBlitz3.ab2@27420>   load_var_size   Dc.w 0
000368FC <AmiBlitz3.ab2@27421>   load_var_reg    Dc.w 0
00036900 <AmiBlitz3.ab2@27422>   load_var_addr   Dc.l 0
00036902 <AmiBlitz3.ab2@27423>   imm_size        Dc.w 0
00036904 <AmiBlitz3.ab2@27424>   imm_reg         Dc.w 0
00036908 <AmiBlitz3.ab2@27425>   imm_addr        Dc.l 0
00036909 <AmiBlitz3.ab2@27426>   iee             Dc.b 0
0003690A <AmiBlitz3.ab2@27427>   _dcb            Dc.b 0
0003690E <AmiBlitz3.ab2@27428>   nohunkoffset    Dc.l 0
00036912 <AmiBlitz3.ab2@27431> teddata:        Dc.l tokens
00036916 <AmiBlitz3.ab2@27432>                 Dc.l 0 ;compilermenu_entries               ; NOT used anymore
0003691A <AmiBlitz3.ab2@27433>                 Dc.l read_xtrafile
0003691E <AmiBlitz3.ab2@27434>                 Dc.l write_xtrafile
00036922 <AmiBlitz3.ab2@27435>                 Dc.l call_menuentry                        ; compile AND RUN ?
00036926 <AmiBlitz3.ab2@27436>                 Dc.l 0
0003692A <AmiBlitz3.ab2@27437>                 Dc.b ":",34,".;"
0003692E <AmiBlitz3.ab2@27438>                 Dc.l "NEW1"
00036932 <AmiBlitz3.ab2@27439>                 Dc.l newtypebase
00036936 <AmiBlitz3.ab2@27440> realconstbase:  Dc.l labelbase
0003693A <AmiBlitz3.ab2@27441> deflib          Dc.l 0
0003693E <AmiBlitz3.ab2@27442> incd            Dc.l 0
00036942 <AmiBlitz3.ab2@27443>                 Dc.l 0
00036946 <AmiBlitz3.ab2@27444>                 Dc.l 0
0003694A <AmiBlitz3.ab2@27445>                 Dc.l 0
0003694C <AmiBlitz3.ab2@27446> _return         RTS
0003694D <AmiBlitz3.ab2@27447>                 Dc.b 0
00036D4D <AmiBlitz3.ab2@27448> chartab2        Ds.l 256
00036D51 <AmiBlitz3.ab2@27449> codeend         Dc.l 0
00036D55 <AmiBlitz3.ab2@27450> hunkoffsetnum   Dc.l 0
00036D59 <AmiBlitz3.ab2@27451> chipsize        Dc.l 0
00036D5D <AmiBlitz3.ab2@27452> bsssize         Dc.l 0
00036D61 <AmiBlitz3.ab2@27453> bssstart        Dc.l -1
00036D65 <AmiBlitz3.ab2@27454> bssend          Dc.l -1
00036D69 <AmiBlitz3.ab2@27455> chipstart       Dc.l -1
00036D6D <AmiBlitz3.ab2@27456> chipend         Dc.l -1
00036D6E <AmiBlitz3.ab2@27457> bssmode         Dc.b 0
00036D6F <AmiBlitz3.ab2@27458> chipmode        Dc.b 0
00036D70 <AmiBlitz3.ab2@27459> newhunk         Dc.b 0
00036D74 <AmiBlitz3.ab2@27460> bssnum          Dc.l 0
00036D78 <AmiBlitz3.ab2@27461> chipnum         Dc.l 0
00036D7C <AmiBlitz3.ab2@27462> lastinstruction Dc.l 0
00036D80 <AmiBlitz3.ab2@27463> lastinstructionaddr Dc.l 0
00036D94 <AmiBlitz3.ab2@27464> hunkbegin       Dc.l $03F3,$00,$02,$00,$01
00036D98 <AmiBlitz3.ab2@27465> tstsize1b:      Ds.l 1
00036D9C <AmiBlitz3.ab2@27466> bsssize2        Dc.l 1
00036DA0 <AmiBlitz3.ab2@27467>                 Dc.l $03E9
00036DA4 <AmiBlitz3.ab2@27468> tstsize2b:      Dc.l $100
00036DB8 <AmiBlitz3.ab2@27469> hunkbegin2      Dc.l $03F3,$00,$03,$00,$02
00036DBC <AmiBlitz3.ab2@27470> tstsize1c:      Ds.l 1
00036DC0 <AmiBlitz3.ab2@27471> bsssize3        Dc.l 1
00036DC4 <AmiBlitz3.ab2@27472> chipsize2       Dc.l 1
00036DC8 <AmiBlitz3.ab2@27473>                 Dc.l $3e9
00036DCC <AmiBlitz3.ab2@27474> tstsize2c       Dc.l 0
00036DDC <AmiBlitz3.ab2@27475> hunkend         Dc.l $3f2,$3eb,0,$3f2
00036DEC <AmiBlitz3.ab2@27476> hunkend2        Dc.l $3f2,$3ea,0,$3f2
00036DF3 <AmiBlitz3.ab2@27477> strcpy          Dc.b "strcpy",0
00036DFA <AmiBlitz3.ab2@27478> strcmp          Dc.b "strcmp",0
00036E01 <AmiBlitz3.ab2@27479> strvar          Dc.b "strvar",0
00036E06 <AmiBlitz3.ab2@27480> qmul            Dc.b "qmul",0
00036E0B <AmiBlitz3.ab2@27481> qdiv            Dc.b "qdiv",0
00036E12 <AmiBlitz3.ab2@27482> _MaxLen         Dc.b "maxlen",0
00036E17 <AmiBlitz3.ab2@27483> notf            Dc.b "????",0
00036E3A <AmiBlitz3.ab2@27485> errtext         Dc.b "only reg addressing Mode supported",0
00036E64 <AmiBlitz3.ab2@27486> fpuerr          Dc.b "Instruction not yet supported by 68K FPU ",0
00036EA6 <AmiBlitz3.ab2@27487> cmplxerr        Dc.b "Formula too complex for 68K FPU or too much regload register used",0 : Even
00036EA8 <AmiBlitz3.ab2@27488> peeksize        Dc.w 0
00036EAC <AmiBlitz3.ab2@27490> mainstart       Dc.l 0
00036EAD <AmiBlitz3.ab2@27492> infunctioncode  Dc.b 0
00036EAF <AmiBlitz3.ab2@27493> regnumstore     Dc.w 0
00036EDC <AmiBlitz3.ab2@27494>                 Dc.b "$VER: AmiBlitz3 \\__VER_MAJOR.\\__VER_MINOR (\\__DATE_GER__) Build \\__VER_PATCH.\\__VER_BUILD",0 : Even
00036EE4 <AmiBlitz3.ab2@27495> testcode        Dc.b "print i",0
00036F48 <AmiBlitz3.ab2@27496>                 Ds.b 100
00036F56 <AmiBlitz3.ab2@27497> devo            Dc.b "developobject",0 : Even
00036F68 <AmiBlitz3.ab2@27498> autostorename   Dc.b "__autoconstantnum",0
00036F72 <AmiBlitz3.ab2@27499> _include        Dc.b "__include",0
00036F7A <AmiBlitz3.ab2@27500> _debug          Dc.b "__debug",0
00036F7E <AmiBlitz3.ab2@27501> unusedfunc      Dc.l 0
00036F80 <AmiBlitz3.ab2@27505> MOVE.l a0,d0
00036FAA <AmiBlitz3.ab2@27506> !basic
00036FAE <AmiBlitz3.ab2@27507> *olderror.l= PutD0
00036FD6 <AmiBlitz3.ab2@27508> error$=Peek.s(*olderror)
0003701C <AmiBlitz3.ab2@27509> error$=error$+"\\nPossible wrong Code begin here: "
00037030 <AmiBlitz3.ab2@27510>         If Peek.l (?beforeparameterfetch)
00037046 <AmiBlitz3.ab2@27511>           MaxLen detokenline.s = 65536
00037088 <AmiBlitz3.ab2@27512>          !ComData_GetL{comPtr_PreProcessor,include_preprocessor}
00037098 <AmiBlitz3.ab2@27513>          *tn.preprocessor = Peek.l(?include_preprocessor)
000370C2 <AmiBlitz3.ab2@27514>           written.l = preproc_DetokenizeLine{*tn,Peek.l (?beforeparameterfetch),&detokenline}
000370EA <AmiBlitz3.ab2@27515>           If written>0 Then Poke.b &detokenline+written,0
00037114 <AmiBlitz3.ab2@27516>           sourceLineText.s = Peek.s(&detokenline)
0003711A <AmiBlitz3.ab2@27517>         Else
00037142 <AmiBlitz3.ab2@27518>           sourceLineText = "NULL"
00037194 <AmiBlitz3.ab2@27520> error$=error$+sourceLineText
0003719A <AmiBlitz3.ab2@27521> GetD0 &error$
000371B8 <AmiBlitz3.ab2@27522> !asm
000371BA <AmiBlitz3.ab2@27523> MOVE.l d0,a0
000371BC <AmiBlitz3.ab2@27524> RTS
000371BE <AmiBlitz3.ab2@27528>   MOVE.l a0,-(a7)
000371C0 <AmiBlitz3.ab2@27529>   MOVE.l a0,d0
000371C2 <AmiBlitz3.ab2@27530>   MOVE.l a5,a0                                             ;macro title
000371EC <AmiBlitz3.ab2@27531>   !basic
000371F0 <AmiBlitz3.ab2@27532>   i = PutD0
000371F2 <AmiBlitz3.ab2@27533>   MOVEQ #20,d0
000371F4 <AmiBlitz3.ab2@27536>     MOVE.b -(a0),d1
000371F8 <AmiBlitz3.ab2@27537>     BEQ 'l1
000371FC <AmiBlitz3.ab2@27538>     CMP.b #":",d1
00037200 <AmiBlitz3.ab2@27539>     BEQ 'l1
00037202 <AmiBlitz3.ab2@27540>     SUBQ.l #1,d0
00037206 <AmiBlitz3.ab2@27541>     BNE 'l2
00037208 <AmiBlitz3.ab2@27544>   ADDQ #1,a0
0003720A <AmiBlitz3.ab2@27545>   MOVE.l a0,d0
0003720E <AmiBlitz3.ab2@27546>   i2.l = PutD0
0003722A <AmiBlitz3.ab2@27547>   If Peek.w (?ininclude)>0
00037284 <AmiBlitz3.ab2@27548>     Poke.s (?includetemp2),incdim(Peek.w(?ininclude)-1)
00037294 <AmiBlitz3.ab2@27549>     errorline.l = Peek.l(?includeline);-1
000372BC <AmiBlitz3.ab2@27550>     Poke.l ?compilelinecounter,Peek.l(?includeline) - 1
000372E6 <AmiBlitz3.ab2@27551>     errorfile.s = Peek.s(?includetemp2)
000372EC <AmiBlitz3.ab2@27552>   Else
00037324 <AmiBlitz3.ab2@27553>     Poke.s (?includetemp2),Peek.s(?ptr_parameterstore)
0003733A <AmiBlitz3.ab2@27554>     errorline.l = Peek.l(?compilelinecounter) + 1
0003736E <AmiBlitz3.ab2@27555>     errorfile.s = cli_sourcefile
00037378 <AmiBlitz3.ab2@27558>   If i
0003741C <AmiBlitz3.ab2@27559>     errortext.s = !TRANS{Replace$(Peek.s(i),"\\0a","\n")}
00037422 <AmiBlitz3.ab2@27560>   Else
0003744A <AmiBlitz3.ab2@27561>     errortext.s = "???"
000375BC <AmiBlitz3.ab2@27564>   NPrint "\\1b[1m",!TRANS{"Compiler Error"}," <",errorfile,"@",errorline,">\\1b[0m ",errortext
000375DA <AmiBlitz3.ab2@27568>   !asm
000375DC <AmiBlitz3.ab2@27569>   MOVE.l (a7)+,a0
000375DE <AmiBlitz3.ab2@27570> RTS
000375E0 <AmiBlitz3.ab2@27574>   MOVE.l a0,-(a7)
000375E2 <AmiBlitz3.ab2@27575>   MOVE.l a0,d0
000375E4 <AmiBlitz3.ab2@27576>   MOVE.l a5,a0                                             ;macro title
0003760E <AmiBlitz3.ab2@27577>   !basic
00037612 <AmiBlitz3.ab2@27578>   i = PutD0
00037614 <AmiBlitz3.ab2@27579>   MOVEQ #20,d0
00037616 <AmiBlitz3.ab2@27582>     MOVE.b -(a0),d1
0003761A <AmiBlitz3.ab2@27583>     BEQ 'l1
0003761E <AmiBlitz3.ab2@27584>     CMP.b #":",d1
00037622 <AmiBlitz3.ab2@27585>     BEQ 'l1
00037624 <AmiBlitz3.ab2@27586>     SUBQ.l #1,d0
00037628 <AmiBlitz3.ab2@27587>     BNE 'l2
0003762A <AmiBlitz3.ab2@27590>   ADDQ #1,a0
0003762C <AmiBlitz3.ab2@27591>   MOVE.l a0,d0
00037630 <AmiBlitz3.ab2@27592>   i2.l = PutD0
000376B4 <AmiBlitz3.ab2@27593>   fid.l = file_Open{dos_AddPart{my_systemdir$,"ab_compileerror.txt"},#file_forcewrite}
000376C8 <AmiBlitz3.ab2@27594>   If fid <> -1
000376E4 <AmiBlitz3.ab2@27595>     If Peek.w (?ininclude)>0
0003773E <AmiBlitz3.ab2@27596>       Poke$(?includetemp2),incdim(Peek.w(?ininclude)-1)
00037744 <AmiBlitz3.ab2@27597>     Else
00037770 <AmiBlitz3.ab2@27598>       Poke$(?includetemp2),""
0003779A <AmiBlitz3.ab2@27600>     a$ = Peek$(?includetemp2)
0003780C <AmiBlitz3.ab2@27601>     x$ = Replace$(Peek$(i),"\\0a","\n")
0003783E <AmiBlitz3.ab2@27602>     file_WriteLine{fid,x$}
00037888 <AmiBlitz3.ab2@27603>     file_WriteLine{fid,Str$(Peek.l(?compilelinecounter) + 1)}
000378B4 <AmiBlitz3.ab2@27604>     If a$
000378E6 <AmiBlitz3.ab2@27605>       file_WriteLine{fid,a$}
00037930 <AmiBlitz3.ab2@27606>       file_WriteLine{fid,Str$(Peek.l(?includeline)-1)}
00037958 <AmiBlitz3.ab2@27607>       Poke.l ?compilelinecounter,Peek.l(?includeline) - 1
0003795E <AmiBlitz3.ab2@27608>     Else
00037984 <AmiBlitz3.ab2@27609>       file_WriteLine{fid,"none"}
000379B4 <AmiBlitz3.ab2@27611>     file_WriteLine{fid,Peek$(i2)}
00037A0A <AmiBlitz3.ab2@27612>     file_WriteLine{fid,Str$(Peek.l(?globallinecount))+" line(s) compiled"}
00037A54 <AmiBlitz3.ab2@27613>     file_WriteLine{fid,Hex$(Peek.w(?globalvarpointer))+" global var base"}
00037A5E <AmiBlitz3.ab2@27614>     file_Close{fid}
00037A7C <AmiBlitz3.ab2@27616>   !asm
00037A7E <AmiBlitz3.ab2@27617>   MOVE.l (a7)+,a0
00037A80 <AmiBlitz3.ab2@27618> RTS
00037AAA <AmiBlitz3.ab2@27622>   !basic
00037AAE <AmiBlitz3.ab2@27623>   progress.l     = PutD0
00037AC0 <AmiBlitz3.ab2@27624>   total.l        = Peek.w(?progressbar_width)
00037ADE <AmiBlitz3.ab2@27625>   calcpro        = (progress * 100) / total +1
00037AF0 <AmiBlitz3.ab2@27626>   pass.l         = Peek.w(?pass)
00037B02 <AmiBlitz3.ab2@27627>   typ.l          = Peek.w(?compiler_job)
00037B20 <AmiBlitz3.ab2@27630> If (pass><pass_old OR typ><typ_old)
00037B26 <AmiBlitz3.ab2@27631>     pass_old = pass
00037B2C <AmiBlitz3.ab2@27632>     typ_old  = typ
00037B32 <AmiBlitz3.ab2@27633>     update_comstatus_gui = True
00037B44 <AmiBlitz3.ab2@27634>     If typ=0
00037C24 <AmiBlitz3.ab2@27635>       comstatusstr = !TRANS{"Pass"}+" "+Str$(pass)+": "+!TRANS{"Compiling Sources..."}
00037C2C <AmiBlitz3.ab2@27636>       calcpro = 0  ; set gauge to 0
00037C3E <AmiBlitz3.ab2@27638>     If typ=1
00037D1E <AmiBlitz3.ab2@27639>       comstatusstr = !TRANS{"Pass"}+" "+Str$(pass)+": "+!TRANS{"Building Executable..."}
00037D26 <AmiBlitz3.ab2@27640>       calcpro = 0  ; set gauge to 0
00037D7C <AmiBlitz3.ab2@27642>     If cli_verbose>=2 Then NPrint comstatusstr
00037D8A <AmiBlitz3.ab2@27645>   If (calcpro >< calcpro_old)
00037DDE <AmiBlitz3.ab2@27646>     If cli_verbose>=3 Then NPrint calcpro,"% compiled..."
00037DE4 <AmiBlitz3.ab2@27647>     calcpro_old = calcpro
00037DEA <AmiBlitz3.ab2@27648>     update_comstatus_gui = True
00037E04 <AmiBlitz3.ab2@27651>   If update_comstatus_gui = True                                     ; check if a update of the gui nessecary
00037E22 <AmiBlitz3.ab2@27652>     !asm
00037E54 <AmiBlitz3.ab2@27653> 
00037E7E <AmiBlitz3.ab2@27654>     !basic
00037E84 <AmiBlitz3.ab2@27655>     update_comstatus_gui  = False ; because we update the gui
00037EA2 <AmiBlitz3.ab2@27657>   !asm
00037EA4 <AmiBlitz3.ab2@27658> RTS
00037EAA <AmiBlitz3.ab2@27663>   MOVE.w maxobject_pos,D5                                  ;max objects 1. visible
00037EB0 <AmiBlitz3.ab2@27664>   LEA maxobjects_value,A3                                  ;current value
00037EB6 <AmiBlitz3.ab2@27665>   MOVEA.l libpointer,A2
00037EBA <AmiBlitz3.ab2@27668>   CMPA.w #$0,A2
00037EBE <AmiBlitz3.ab2@27669>   BEQ.w menu4c__igotb
00037EC0 <AmiBlitz3.ab2@27670>   MOVEA.l A2,A1
00037EC4 <AmiBlitz3.ab2@27671>   ADDA.l $12(A1),A1
00037EC8 <AmiBlitz3.ab2@27672>   TST.w -$2(A1)
00037ECC <AmiBlitz3.ab2@27673>   BEQ.w JL_0_FFF6b
00037ECE <AmiBlitz3.ab2@27674>   SUBQ.w #1,D5
00037ED2 <AmiBlitz3.ab2@27675>   BMI.w JL_0_FFFCb
00037ED4 <AmiBlitz3.ab2@27678>   MOVEA.l (A2),A2
00037ED8 <AmiBlitz3.ab2@27679> BRA.w JL_0_FFDAb
00037EDC <AmiBlitz3.ab2@27682>   MOVE.w (A3),-$4(A1)
00037EDE <AmiBlitz3.ab2@27685> RTS
00037EE4 <AmiBlitz3.ab2@27689>   MOVE.w debugnest,d0
00037EEA <AmiBlitz3.ab2@27690>   LEA storedebugmode, a0
00037EF2 <AmiBlitz3.ab2@27691>   MOVE.b 0(a0,d0.w),debugmode
00037EF8 <AmiBlitz3.ab2@27692>   TST.w debugnest
00037EFC <AmiBlitz3.ab2@27693>   BEQ JUMP_unpairrunerrs
00037F02 <AmiBlitz3.ab2@27694>   SUBQ.w #1,debugnest
00037F04 <AmiBlitz3.ab2@27695> RTS
00037F0A <AmiBlitz3.ab2@27698> JMP runerrsoverflow
00037F10 <AmiBlitz3.ab2@27701> JMP unpairrunerrs
00037F18 <AmiBlitz3.ab2@27705>   BCHG #$7,use_debugger
00037F20 <AmiBlitz3.ab2@27707>   BTST #$7,use_debugger
00037F24 <AmiBlitz3.ab2@27708>   BNE 'debugon
00037F2A <AmiBlitz3.ab2@27709>   CLR.w debugmode
00037F2E <AmiBlitz3.ab2@27710> BRA.b 'debugoff
00037F34 <AmiBlitz3.ab2@27713>   SNE debugmode
00037F36 <AmiBlitz3.ab2@27716>   MOVE.l a0,-(a7)
00037F6E <AmiBlitz3.ab2@27719>   !ComData_SetB{comByte_DebugMode,debugmode}
00037F70 <AmiBlitz3.ab2@27724>   MOVE.l (a7)+,a0
00037F72 <AmiBlitz3.ab2@27725> RTS
00037F7A <AmiBlitz3.ab2@27730>   BTST #$7,use_debugger
00037F7E <AmiBlitz3.ab2@27731>   BNE 'debugon
00037F84 <AmiBlitz3.ab2@27732>   CLR.w debugmode
00037F88 <AmiBlitz3.ab2@27733> BRA.b 'debugoff
00037F8E <AmiBlitz3.ab2@27736>   SNE debugmode
00037F90 <AmiBlitz3.ab2@27739> RTS
00037F96 <AmiBlitz3.ab2@27743>   ADDQ.w #1,debugnest
00037F9C <AmiBlitz3.ab2@27744>   MOVE.w debugnest,d0
00037FA0 <AmiBlitz3.ab2@27745>   CMP.w #18,d0
00037FA4 <AmiBlitz3.ab2@27746>    BGE JUMP_runerrsoverflow
00037FAA <AmiBlitz3.ab2@27747>   LEA storedebugmode, a0
00037FB2 <AmiBlitz3.ab2@27748>   MOVE.b debugmode,0( a0,d0.w)
00037FB8 <AmiBlitz3.ab2@27751>   SF debugmode
00037FBA <AmiBlitz3.ab2@27752> RTS
0003803A <AmiBlitz3.ab2@27755> usedpath:  Ds.l 32
0003803E <AmiBlitz3.ab2@27759>   BEQ.w JUMP_syntaxerr
00038044 <AmiBlitz3.ab2@27760>   LEA lastpath,A0
00038048 <AmiBlitz3.ab2@27761>   MOVEM.l a0-a1/d0,-(a7)
0003804E <AmiBlitz3.ab2@27762>   LEA lastpath2,a1
00038050 <AmiBlitz3.ab2@27765>     MOVE.b (a0)+,(a1)+
00038054 <AmiBlitz3.ab2@27766>   BNE 'l2
00038058 <AmiBlitz3.ab2@27767>   MOVEM.l (a7)+,a0-a1/d0
0003805C <AmiBlitz3.ab2@27768>   LEA usedpath(PC),A0
00038060 <AmiBlitz3.ab2@27769>   MOVEM.l a0-a1/d0,-(a7)
00038066 <AmiBlitz3.ab2@27770>   LEA lastpath,a1
00038068 <AmiBlitz3.ab2@27773>     MOVE.b (a0)+,(a1)+
0003806C <AmiBlitz3.ab2@27774>   BNE 'l1
00038070 <AmiBlitz3.ab2@27775>   MOVEM.l (a7)+,a0-a1/d0
00038072 <AmiBlitz3.ab2@27778>   TST.w D0
00038076 <AmiBlitz3.ab2@27779>    BMI.w JUMP_syntaxerr
00038078 <AmiBlitz3.ab2@27780>   MOVE.b D0,(A0)+
0003807C <AmiBlitz3.ab2@27781>   BSR.w JUMP_get1bytemain
00038080 <AmiBlitz3.ab2@27782>    BNE.w JL_0_4AA8
00038084 <AmiBlitz3.ab2@27783>   MOVE.b #$2,(A0)
00038086 <AmiBlitz3.ab2@27784> RTS
0003808A <AmiBlitz3.ab2@27788>   BEQ.w JUMP_syntaxerr
00038090 <AmiBlitz3.ab2@27789>   LEA path2,A0
00038092 <AmiBlitz3.ab2@27799>   TST.w D0
00038096 <AmiBlitz3.ab2@27800>    BMI.w JUMP_syntaxerr
00038098 <AmiBlitz3.ab2@27801>   MOVE.b D0,(A0)+
0003809C <AmiBlitz3.ab2@27802>   BSR.w JUMP_get1bytemain
000380A0 <AmiBlitz3.ab2@27803>    BNE.w JL_0_4AA8b
000380A4 <AmiBlitz3.ab2@27804>   MOVE.b #$2,(A0)
000380A6 <AmiBlitz3.ab2@27805> RTS
000380AC <AmiBlitz3.ab2@27814> JMP errormsg_reg
000380B6 <AmiBlitz3.ab2@27818>   MOVE.l #$f22d6780,fpucodeglobal
000380C0 <AmiBlitz3.ab2@27819>   MOVE.l #$f22c6780,fpucodelocal
000380C6 <AmiBlitz3.ab2@27820>   LEA regtable,a0
000380D0 <AmiBlitz3.ab2@27821>   MOVE.l #7,maxregs
000380D2 <AmiBlitz3.ab2@27824>   MOVE.l (a0),d0
000380D6 <AmiBlitz3.ab2@27825>   BEQ 'e1
000380D8 <AmiBlitz3.ab2@27826>   CLR.l (a0)
000380DC <AmiBlitz3.ab2@27827>   MOVE.w 4(a0),d0
000380E6 <AmiBlitz3.ab2@27828>   MOVE.l fpucodeglobal,fpucode
000380EA <AmiBlitz3.ab2@27829>   TST.w 6(a0)
000380EE <AmiBlitz3.ab2@27830>   BEQ 'glob
000380F8 <AmiBlitz3.ab2@27831>   MOVE.l fpucodelocal,fpucode
000380FE <AmiBlitz3.ab2@27834>   MOVE.l fpucode,d1
00038104 <AmiBlitz3.ab2@27835>   JSR writelong
0003810E <AmiBlitz3.ab2@27836>   SUB.l #$80,fpucodelocal
00038118 <AmiBlitz3.ab2@27837>   SUB.l #$80,fpucodeglobal
0003811A <AmiBlitz3.ab2@27838>   MOVE.w d0,d1
00038120 <AmiBlitz3.ab2@27839>   JSR writeword
00038122 <AmiBlitz3.ab2@27840>   ADDQ #8,a0
00038126 <AmiBlitz3.ab2@27841> BRA 'again
00038128 <AmiBlitz3.ab2@27844> RTS
0003812E <AmiBlitz3.ab2@27851> JMP notypeerr
00038134 <AmiBlitz3.ab2@27854> JMP illtypeerr
0003813E <AmiBlitz3.ab2@27857>   MOVE.l #$f22d4780,fpucodeglobal
00038148 <AmiBlitz3.ab2@27858>   MOVE.l #$f22c4780,fpucodelocal
0003814E <AmiBlitz3.ab2@27859>   LEA regtable,a0
00038150 <AmiBlitz3.ab2@27860>   TST.l (a0)
00038154 <AmiBlitz3.ab2@27861>    BNE JUMP_errormsg_reg
00038156 <AmiBlitz3.ab2@27862>   MOVE.l d7,-(a7)
00038158 <AmiBlitz3.ab2@27863>   SUBQ.l #1,a5
0003815E <AmiBlitz3.ab2@27866>   JSR getparameter2
00038162 <AmiBlitz3.ab2@27867>   BEQ.w 'nopar
00038168 <AmiBlitz3.ab2@27868>   MOVE.w d0,lastchar
0003816E <AmiBlitz3.ab2@27869>   JSR findvariable
00038172 <AmiBlitz3.ab2@27870>   BNE 'islocal
0003817C <AmiBlitz3.ab2@27871>   MOVE.l fpucodeglobal,fpucode
00038186 <AmiBlitz3.ab2@27872>   MOVE.l #3,maxregs
00038188 <AmiBlitz3.ab2@27873>   MOVEQ #0,d7
00038190 <AmiBlitz3.ab2@27876>   CMP.l #newtype_float,$a(a2)                              ;is float type
00038194 <AmiBlitz3.ab2@27877>    BEQ 'doit
0003819C <AmiBlitz3.ab2@27878>   CMP.l #newtype_double,$a(a2)
000381A0 <AmiBlitz3.ab2@27879>    BNE JUMP_illtypeerr
000381A6 <AmiBlitz3.ab2@27882>   LEA regtable,a0
000381A8 <AmiBlitz3.ab2@27883>   MOVEQ #0,d0
000381AA <AmiBlitz3.ab2@27886>   TST.l (a0)
000381AE <AmiBlitz3.ab2@27887>    BEQ 'store
000381B0 <AmiBlitz3.ab2@27888>   ADDQ.l #4,d0
000381B2 <AmiBlitz3.ab2@27889>   ADDQ.l #8,a0
000381B8 <AmiBlitz3.ab2@27890>   CMP.l #16,d0
000381BC <AmiBlitz3.ab2@27891>    BCS 'loop
000381C6 <AmiBlitz3.ab2@27892>   MOVE.l #2,maxregs
000381CC <AmiBlitz3.ab2@27893>   CMP.l #20,d0
000381D0 <AmiBlitz3.ab2@27894>    BCS 'loop
000381DA <AmiBlitz3.ab2@27895>   MOVE.l #1,maxregs
000381E0 <AmiBlitz3.ab2@27896>   CMP.l #24,d0
000381E4 <AmiBlitz3.ab2@27897>    BCS 'loop
000381EA <AmiBlitz3.ab2@27898> JMP toovarerr
000381F0 <AmiBlitz3.ab2@27901>   TST.b fpu
000381F4 <AmiBlitz3.ab2@27902>    BEQ 'nofpu
000381F6 <AmiBlitz3.ab2@27903>   MOVE.l a2,(a0)
000381FC <AmiBlitz3.ab2@27904>   MOVE.w 4(a2),4(a0)
00038200 <AmiBlitz3.ab2@27905>   MOVE.w d7,6(a0)
00038206 <AmiBlitz3.ab2@27906>   MOVE.l fpucode,d1
00038210 <AmiBlitz3.ab2@27907>   SUB.l #$80,fpucodeglobal
0003821A <AmiBlitz3.ab2@27908>   SUB.l #$80,fpucodelocal
00038220 <AmiBlitz3.ab2@27909>   JSR writelong
00038224 <AmiBlitz3.ab2@27910>   MOVE.w 4(a2),d1
0003822A <AmiBlitz3.ab2@27911>   JSR writeword
00038230 <AmiBlitz3.ab2@27914>   MOVE.w lastchar,d0
00038234 <AmiBlitz3.ab2@27915>   CMP.w #":",d0
00038238 <AmiBlitz3.ab2@27916>    BEQ 'nopar
0003823A <AmiBlitz3.ab2@27917>   TST.w d0
0003823E <AmiBlitz3.ab2@27918>    BEQ 'nopar
00038242 <AmiBlitz3.ab2@27919>   CMP.w #",",d0
00038246 <AmiBlitz3.ab2@27920>   BNE JUMP_syntaxerr
0003824A <AmiBlitz3.ab2@27921> BRA 'l2
0003824C <AmiBlitz3.ab2@27924>    MOVE.l (a7)+,d7
0003824E <AmiBlitz3.ab2@27925> RTS
00038250 <AmiBlitz3.ab2@27928>   MOVEQ #1,d7
00038258 <AmiBlitz3.ab2@27929>   MOVE.b #1,newvariable
0003825E <AmiBlitz3.ab2@27930>   LEA firstlocal,a2
00038264 <AmiBlitz3.ab2@27931>   JSR findvariable
0003826A <AmiBlitz3.ab2@27932>   CLR.b newvariable
00038270 <AmiBlitz3.ab2@27933>   CMP.l #-1,d0
00038274 <AmiBlitz3.ab2@27934>   BEQ.w JUMP_notypeerr2
0003827E <AmiBlitz3.ab2@27935>   MOVE.l fpucodelocal,fpucode
00038282 <AmiBlitz3.ab2@27936> BRA 'go
00038286 <AmiBlitz3.ab2@27939>   CMP.b #".",d0
0003828A <AmiBlitz3.ab2@27940>    BNE 'l1
0003828E <AmiBlitz3.ab2@27941>   BSR JUMP_get1bytemain
00038292 <AmiBlitz3.ab2@27942>   BSR JUMP_get1bytemain
00038296 <AmiBlitz3.ab2@27945>   ORI .b #$20,d0
0003829A <AmiBlitz3.ab2@27946>   CMP.b #"d",d0
0003829E <AmiBlitz3.ab2@27947>    BNE JUMP_illeaerr
000382A2 <AmiBlitz3.ab2@27948>   BSR JUMP_get1bytemain
000382A6 <AmiBlitz3.ab2@27949>   SUB.b #$30,d0
000382AA <AmiBlitz3.ab2@27950>   CMP.b #$7,d0
000382AE <AmiBlitz3.ab2@27951>    BGT JUMP_syntaxerr
000382B2 <AmiBlitz3.ab2@27952>   MOVE.w #$49c0,d1
000382B4 <AmiBlitz3.ab2@27953>   ADD.b d0,d1
000382BA <AmiBlitz3.ab2@27954>   JSR writeword
000382BE <AmiBlitz3.ab2@27955>   BSR JUMP_get1bytemain
000382C0 <AmiBlitz3.ab2@27956> RTS
000382C6 <AmiBlitz3.ab2@27960>   LEA lastpath,a0
000382CA <AmiBlitz3.ab2@27961>   LEA usedpath(PC),A1
000382CC <AmiBlitz3.ab2@27964>     MOVE.b (a0)+,(a1)+
000382D0 <AmiBlitz3.ab2@27965>   BNE 'l1
000382D6 <AmiBlitz3.ab2@27967>   LEA lastpath2,a0
000382DC <AmiBlitz3.ab2@27968>   LEA lastpath,A1
000382DE <AmiBlitz3.ab2@27971>     MOVE.b (a0)+,(a1)+
000382E2 <AmiBlitz3.ab2@27972>   BNE 'l2
000382E4 <AmiBlitz3.ab2@27973> RTS
000382EA <AmiBlitz3.ab2@27977>   TST.b objectcount
000382EE <AmiBlitz3.ab2@27978>   BEQ 'l2a
000382F4 <AmiBlitz3.ab2@27979> JMP macnesterr
000382FA <AmiBlitz3.ab2@27982>   LEA devo,a0
00038300 <AmiBlitz3.ab2@27983>   ADDQ.b #1,objectcount
00038304 <AmiBlitz3.ab2@27984>   MOVEM.l a1/d2,-(a7)
0003830A <AmiBlitz3.ab2@27985>   LEA ptr_parameterstore,a1
0003830C <AmiBlitz3.ab2@27988>     MOVE.b (a0)+,(a1)+
00038310 <AmiBlitz3.ab2@27989>   BNE 'l1
00038312 <AmiBlitz3.ab2@27991>   MOVEQ #13,d2
00038318 <AmiBlitz3.ab2@27992>   JSR findlabel2
0003831C <AmiBlitz3.ab2@27993>   BNE 'd
00038320 <AmiBlitz3.ab2@27994>   TST.l 8(a2)
00038324 <AmiBlitz3.ab2@27995>   BEQ 'd
0003832A <AmiBlitz3.ab2@27996>   SUBQ.b #1,objectcount
0003832E <AmiBlitz3.ab2@27997>   MOVEM.l (a7)+,a1/d2
00038334 <AmiBlitz3.ab2@27998>   JSR skiprest
0003833C <AmiBlitz3.ab2@27999>   MOVE.b #1,developobject
0003833E <AmiBlitz3.ab2@28000> RTS
00038342 <AmiBlitz3.ab2@28003>   MOVEM.l (a7)+,a1/d2
0003834A <AmiBlitz3.ab2@28004>   MOVE.b #1,resdisable
00038350 <AmiBlitz3.ab2@28007>   CLR.b developobject
00038356 <AmiBlitz3.ab2@28008> JMP do_Macro
0003835C <AmiBlitz3.ab2@28012> JMP illeaerr
00038362 <AmiBlitz3.ab2@28016>   CLR.b typecheck
00038368 <AmiBlitz3.ab2@28017>   CLR.b declare
0003836E <AmiBlitz3.ab2@28018>   CLR.b declare2
00038372 <AmiBlitz3.ab2@28019>   SUB.b #$30,d0
00038376 <AmiBlitz3.ab2@28020>   BTST #0,d0
0003837A <AmiBlitz3.ab2@28021>   BEQ 'l1
00038382 <AmiBlitz3.ab2@28022>   MOVE.b #1,declare
00038386 <AmiBlitz3.ab2@28025>   BTST #1,d0
0003838A <AmiBlitz3.ab2@28026>   BEQ 'l2
00038392 <AmiBlitz3.ab2@28027>   MOVE.b #1,declare2
00038396 <AmiBlitz3.ab2@28030>   BTST #2,d0
0003839A <AmiBlitz3.ab2@28031>   BEQ 'l3
000383A2 <AmiBlitz3.ab2@28032>   MOVE.b #1,typecheck
000383A6 <AmiBlitz3.ab2@28034>   BSR.w JUMP_get1bytemain
000383A8 <AmiBlitz3.ab2@28035> RTS
000383AE <AmiBlitz3.ab2@28038> JMP get1bytemain
000383D8 <AmiBlitz3.ab2@28042>   !basic
000383F8 <AmiBlitz3.ab2@28044>   FillMem ?residents_table,?residents_table_end-?residents_table,0
00038416 <AmiBlitz3.ab2@28045>   !asm
00038418 <AmiBlitz3.ab2@28046> Return
0003841A <AmiBlitz3.ab2@28051>   MOVE.l d2,-(a7)                                          ; D2 -> stack
0003841C <AmiBlitz3.ab2@28052>   ADDQ #1,a5
0003841E <AmiBlitz3.ab2@28053>   MOVE.l a5,-(a7)
00038448 <AmiBlitz3.ab2@28054>   !basic
0003844E <AmiBlitz3.ab2@28055>   MOVE.l (a7)+,d0 : _myD0.l = PutD0
00038458 <AmiBlitz3.ab2@28056>   If _myD0
00038498 <AmiBlitz3.ab2@28057>     newconst$ = UCase$(Peek.s(_myD0))
0003849E <AmiBlitz3.ab2@28058>   Else
000384CC <AmiBlitz3.ab2@28059>     error{"INTERNAL: invalid pointer in check_newconstants!"}
000384F4 <AmiBlitz3.ab2@28060>     nwconst$="xxx"
0003851C <AmiBlitz3.ab2@28062>   condata$ =""
0003852C <AmiBlitz3.ab2@28063>   Poke.b ?skip_bytes,0
00038588 <AmiBlitz3.ab2@28064>   If Left$(newconst$,2) = "__"
000385E2 <AmiBlitz3.ab2@28065>     Select Mid$(newconst$,3,4)
00038606 <AmiBlitz3.ab2@28067>      Case "DATE"
00038660 <AmiBlitz3.ab2@28068>       Select Mid$(newconst$,3,6)
0003869E <AmiBlitz3.ab2@28069>       Case "DATE__" : DateFormat 1 : Poke.b ?skip_bytes,8
000386E2 <AmiBlitz3.ab2@28070>       Case "DATE_G" : DateFormat 0 : Poke.b ?skip_bytes,12
000386F0 <AmiBlitz3.ab2@28071>       End Select
000386FE <AmiBlitz3.ab2@28072>       i.l=SystemDate
00038724 <AmiBlitz3.ab2@28073>       condata$ = Date$ (i)
000387A2 <AmiBlitz3.ab2@28074>       condata$ = Replace$(condata$,"/",".")
000387CC <AmiBlitz3.ab2@28076>      Case "VER_"
000387DC <AmiBlitz3.ab2@28079>       actual_version.l = Peek.l(?versioninformation)
000387EC <AmiBlitz3.ab2@28080>       actual_build.l   = Peek.l(?number_of_builds)
00038810 <AmiBlitz3.ab2@28082>       Format ""
0003886A <AmiBlitz3.ab2@28083>       Select Mid$(newconst$,3,9)
0003888E <AmiBlitz3.ab2@28085>        Case "VER_MAJOR"
000388CA <AmiBlitz3.ab2@28086>         condata$ = Str$(actual_version LSR 24)
000388F4 <AmiBlitz3.ab2@28088>        Case "VER_MINOR"
00038938 <AmiBlitz3.ab2@28089>         condata$ = Str$((actual_version LSL 8) LSR 24)
00038962 <AmiBlitz3.ab2@28091>        Case "VER_PATCH"
000389A6 <AmiBlitz3.ab2@28092>         condata$ = Str$((actual_version LSL 16) LSR 24 )
000389D0 <AmiBlitz3.ab2@28094>        Case "VER_BUILD"
000389F4 <AmiBlitz3.ab2@28095>         Format ""
00038A28 <AmiBlitz3.ab2@28096>         condata$ = Str$(actual_build)
00038A2E <AmiBlitz3.ab2@28098>        Default
00038A56 <AmiBlitz3.ab2@28099>         condata$ = "{unknown compiler constant}"
00038A64 <AmiBlitz3.ab2@28101>       End Select
00038A88 <AmiBlitz3.ab2@28102>       Format ""
00038A98 <AmiBlitz3.ab2@28103>       Poke.b ?skip_bytes,11
00038AC2 <AmiBlitz3.ab2@28105>      Case "THIS"
00038B1C <AmiBlitz3.ab2@28106>       Select Mid$(newconst$,3,9)
00038B40 <AmiBlitz3.ab2@28108>        Case "THIS_FUNC"
00038B50 <AmiBlitz3.ab2@28109>         Poke.b ?skip_bytes,15
00038B70 <AmiBlitz3.ab2@28110>         If Peek.l(?currentfunction)<>0
00038BBC <AmiBlitz3.ab2@28111>           condata$ = Peek.s(Peek.l(?currentfunction) + 32 + #funcentry_extend + 1)
00038BC2 <AmiBlitz3.ab2@28112>         Else
00038BEA <AmiBlitz3.ab2@28113>           condata$ = "GLOBAL"
00038C14 <AmiBlitz3.ab2@28116>        Case "THIS_INCL"
00038C24 <AmiBlitz3.ab2@28117>         Poke.b ?skip_bytes,14
00038C44 <AmiBlitz3.ab2@28118>         If Peek.l(?includetemp2)<>0
00038C92 <AmiBlitz3.ab2@28119>           condata$ = dos_FilePart{Peek$(?includetemp2)}
00038CBC <AmiBlitz3.ab2@28122>        Case "THIS_POIN"
00038CCC <AmiBlitz3.ab2@28123>         Poke.b ?skip_bytes,14
00038CEC <AmiBlitz3.ab2@28124>         If Peek.l(?currentfunction)<>0
00038D1A <AmiBlitz3.ab2@28125>           condata$ = Hex$(Peek.l(?currentfunction))
00038D28 <AmiBlitz3.ab2@28128>       End Select
00038D52 <AmiBlitz3.ab2@28130>      Case "CODE"
00038D62 <AmiBlitz3.ab2@28131>       Poke.b ?skip_bytes,10
00038DC4 <AmiBlitz3.ab2@28132>       If Mid$(newconst$,3,8) = "CODELINE"
00038E00 <AmiBlitz3.ab2@28133>         condata$ = Str$(Peek.l(?globallinecount))
00038E0E <AmiBlitz3.ab2@28136>     End Select
00038E14 <AmiBlitz3.ab2@28138>   Else
00038E68 <AmiBlitz3.ab2@28139>     Select Left$(newconst$,1)
00038E8C <AmiBlitz3.ab2@28141>      Case "R"
00038E9C <AmiBlitz3.ab2@28142>       Poke.b ?skip_bytes,3
00038F14 <AmiBlitz3.ab2@28143>       For i = 1 To Vallong(Mid$(newconst$,2,2))
00038F94 <AmiBlitz3.ab2@28144>         condata$ = condata$ + Mid$(newconst$,4,1)
00038FA4 <AmiBlitz3.ab2@28145>       Next
00038FCE <AmiBlitz3.ab2@28147>      Case "N"
00038FDE <AmiBlitz3.ab2@28148>       Poke.b ?skip_bytes,1
00039002 <AmiBlitz3.ab2@28149>       condata$ = Chr$(10)
00039008 <AmiBlitz3.ab2@28151>      Default
0003901A <AmiBlitz3.ab2@28152>       char1.b = Peek.b(&newconst$)
00039032 <AmiBlitz3.ab2@28153>       char2.b = Peek.b(&newconst$+1)
0003903E <AmiBlitz3.ab2@28154>       nibble1.l = -1
0003904A <AmiBlitz3.ab2@28155>       nibble2.l = -1
00039088 <AmiBlitz3.ab2@28157>       If (char1>=@"0" AND char1<=@"9") Then nibble1 = char1-@"0"
000390C6 <AmiBlitz3.ab2@28158>       If (char2>=@"0" AND char2<=@"9") Then nibble2 = char2-@"0"
0003910A <AmiBlitz3.ab2@28160>       If (char1>=@"a" AND char1<=@"f") Then nibble1 = char1-@"a" + 10
0003914E <AmiBlitz3.ab2@28161>       If (char2>=@"a" AND char2<=@"f") Then nibble2 = char2-@"a" + 10
00039192 <AmiBlitz3.ab2@28163>       If (char1>=@"A" AND char1<=@"F") Then nibble1 = char1-@"A" + 10
000391D6 <AmiBlitz3.ab2@28164>       If (char2>=@"A" AND char2<=@"F") Then nibble2 = char2-@"A" + 10
000391FC <AmiBlitz3.ab2@28166>       If nibble1>=0 AND nibble2>=0
00039212 <AmiBlitz3.ab2@28167>         newchar.l = (nibble1 LSL 4) + (nibble2)
00039236 <AmiBlitz3.ab2@28168>         condata$ = Chr$(newchar)
00039246 <AmiBlitz3.ab2@28169>         Poke.b ?skip_bytes,2
00039254 <AmiBlitz3.ab2@28172>     End Select
000392B4 <AmiBlitz3.ab2@28174>   If condata$ = "" AND Peek.b(?skip_bytes)=0
000393DA <AmiBlitz3.ab2@28175>     !cout{"detected unknown const: " + newconst$}
0003940E <AmiBlitz3.ab2@28176>     condata$ = newconst$
00039424 <AmiBlitz3.ab2@28179>   GetD0 FLen(condata$)-1                                    ; laenge zielstring -> Stack
00039426 <AmiBlitz3.ab2@28180>   MOVE.l d0,d2
00039428 <AmiBlitz3.ab2@28181>   MOVE.l d2,-(a7)
0003942E <AmiBlitz3.ab2@28183>   GetD0 &condata$                                          ; kopieren des neuen Strings in den Zielstring
00039430 <AmiBlitz3.ab2@28184>   MOVE.l d0,a0
00039432 <AmiBlitz3.ab2@28187>     MOVE.b (a0)+,d1
00039438 <AmiBlitz3.ab2@28188>     JSR pokedata1b
0003943C <AmiBlitz3.ab2@28189>  DBF d2,'l1
0003945A <AmiBlitz3.ab2@28191>   !asm
0003945C <AmiBlitz3.ab2@28192>   MOVE.l (a7)+,d0                                          ; laenge Zielstring <- Stack
0003945E <AmiBlitz3.ab2@28193>   MOVE.l (a7)+,d2                                          ; d2 <-Stack
00039460 <AmiBlitz3.ab2@28194>   ADD.l d0,d2                                              ; eingefuegte chars zu D2 dazu
00039466 <AmiBlitz3.ab2@28195>   ADD.l #1,d2
0003946C <AmiBlitz3.ab2@28197>   MOVE.l #0,d0                                             ; a5 um konstantennamen weiterschieben
00039472 <AmiBlitz3.ab2@28198>   MOVE.b skip_bytes,D0
00039474 <AmiBlitz3.ab2@28199>   ADD.l D0,a5
00039476 <AmiBlitz3.ab2@28200> RTS
0003947A <AmiBlitz3.ab2@28275> MOVEM.l a3/d1,-(a7)
00039480 <AmiBlitz3.ab2@28277> CLR.b a4a5store
00039482 <AmiBlitz3.ab2@28278> 'continue: MOVE.b (a3)+,d1
00039486 <AmiBlitz3.ab2@28279> CMP.b #$15,d1
0003948A <AmiBlitz3.ab2@28280> BEQ 'find
0003948E <AmiBlitz3.ab2@28281> CMP.b #$14,d1
00039492 <AmiBlitz3.ab2@28282> BEQ 'find
00039496 <AmiBlitz3.ab2@28283> CMP.b #$ff,d1
0003949A <AmiBlitz3.ab2@28284> BNE 'continue
0003949E <AmiBlitz3.ab2@28285> BRA 'notfind
000394A4 <AmiBlitz3.ab2@28287> MOVE.l #$48e7000c,d1                  ; write 68k movem.l a4/a5,-(a7)
000394AA <AmiBlitz3.ab2@28288> JSR writelong
000394B2 <AmiBlitz3.ab2@28289> MOVE.b #1,a4a5store
000394B6 <AmiBlitz3.ab2@28290> 'notfind: MOVEM.l (a7)+,a3/d1
000394B8 <AmiBlitz3.ab2@28291> RTS
000394BE <AmiBlitz3.ab2@28294> TST.b a4a5store
000394C2 <AmiBlitz3.ab2@28295> BEQ 'no
000394C8 <AmiBlitz3.ab2@28296> MOVE.l #$4cdf3000,d1                  ; write 68k movem.l (a7)+,a4/a5
000394CE <AmiBlitz3.ab2@28297> JSR writelong
000394D4 <AmiBlitz3.ab2@28298> CLR.b a4a5store
000394D6 <AmiBlitz3.ab2@28299> 'no RTS
000394D6 <internal_commands.ab2@1> INCLUDE "internal_commands.ab2"
000394DA <internal_commands.ab2@13> INCLUDE "internal_commands.ab2"
000394DC <internal_commands.ab2@15> INCLUDE "internal_commands.ab2"
000394E4 <internal_commands.ab2@16> INCLUDE "internal_commands.ab2"
000394F0 <internal_commands.ab2@17> INCLUDE "internal_commands.ab2"
000394F4 <internal_commands.ab2@21> INCLUDE "internal_commands.ab2"
000394F6 <internal_commands.ab2@22> INCLUDE "internal_commands.ab2"
000394FA <internal_commands.ab2@23> INCLUDE "internal_commands.ab2"
00039543 <internal_commands.ab2@24> INCLUDE "internal_commands.ab2"
00039544 <internal_commands.ab2@25> INCLUDE "internal_commands.ab2"
00039548 <internal_commands.ab2@28> INCLUDE "internal_commands.ab2"
0003954A <internal_commands.ab2@29> INCLUDE "internal_commands.ab2"
0003954E <internal_commands.ab2@30> INCLUDE "internal_commands.ab2"
0003956A <internal_commands.ab2@31> INCLUDE "internal_commands.ab2"
0003956E <internal_commands.ab2@35> INCLUDE "internal_commands.ab2"
00039570 <internal_commands.ab2@36> INCLUDE "internal_commands.ab2"
00039574 <internal_commands.ab2@37> INCLUDE "internal_commands.ab2"
000395D1 <internal_commands.ab2@38> INCLUDE "internal_commands.ab2"
000395D2 <internal_commands.ab2@39> INCLUDE "internal_commands.ab2"
000395D6 <internal_commands.ab2@42> INCLUDE "internal_commands.ab2"
000395D8 <internal_commands.ab2@43> INCLUDE "internal_commands.ab2"
000395DD <internal_commands.ab2@44> INCLUDE "internal_commands.ab2"
000395ED <internal_commands.ab2@45> INCLUDE "internal_commands.ab2"
000395EE <internal_commands.ab2@46> INCLUDE "internal_commands.ab2"
000395F2 <internal_commands.ab2@49> INCLUDE "internal_commands.ab2"
000395F4 <internal_commands.ab2@50> INCLUDE "internal_commands.ab2"
000395FA <internal_commands.ab2@51> INCLUDE "internal_commands.ab2"
0003960A <internal_commands.ab2@52> INCLUDE "internal_commands.ab2"
0003960E <internal_commands.ab2@56> INCLUDE "internal_commands.ab2"
00039610 <internal_commands.ab2@57> INCLUDE "internal_commands.ab2"
00039617 <internal_commands.ab2@58> INCLUDE "internal_commands.ab2"
00039618 <internal_commands.ab2@59> INCLUDE "internal_commands.ab2"
0003961C <internal_commands.ab2@63> INCLUDE "internal_commands.ab2"
0003961E <internal_commands.ab2@64> INCLUDE "internal_commands.ab2"
00039628 <internal_commands.ab2@65> INCLUDE "internal_commands.ab2"
0003965B <internal_commands.ab2@66> INCLUDE "internal_commands.ab2"
0003965C <internal_commands.ab2@67> INCLUDE "internal_commands.ab2"
00039660 <internal_commands.ab2@70> INCLUDE "internal_commands.ab2"
00039662 <internal_commands.ab2@71> INCLUDE "internal_commands.ab2"
0003966B <internal_commands.ab2@72> INCLUDE "internal_commands.ab2"
000396A6 <internal_commands.ab2@73> INCLUDE "internal_commands.ab2"
000396AA <internal_commands.ab2@77> INCLUDE "internal_commands.ab2"
000396AC <internal_commands.ab2@78> INCLUDE "internal_commands.ab2"
000396B6 <internal_commands.ab2@79> INCLUDE "internal_commands.ab2"
000396B7 <internal_commands.ab2@80> INCLUDE "internal_commands.ab2"
000396B8 <internal_commands.ab2@81> INCLUDE "internal_commands.ab2"
000396BC <internal_commands.ab2@84> INCLUDE "internal_commands.ab2"
000396BE <internal_commands.ab2@85> INCLUDE "internal_commands.ab2"
000396C1 <internal_commands.ab2@86> INCLUDE "internal_commands.ab2"
000396D8 <internal_commands.ab2@87> INCLUDE "internal_commands.ab2"
000396DC <internal_commands.ab2@91> INCLUDE "internal_commands.ab2"
000396DE <internal_commands.ab2@92> INCLUDE "internal_commands.ab2"
000396E4 <internal_commands.ab2@93> INCLUDE "internal_commands.ab2"
000396F1 <internal_commands.ab2@94> INCLUDE "internal_commands.ab2"
000396F2 <internal_commands.ab2@95> INCLUDE "internal_commands.ab2"
000396F6 <internal_commands.ab2@98> INCLUDE "internal_commands.ab2"
000396F8 <internal_commands.ab2@99> INCLUDE "internal_commands.ab2"
000396FE <internal_commands.ab2@100> INCLUDE "internal_commands.ab2"
0003970A <internal_commands.ab2@101> INCLUDE "internal_commands.ab2"
0003970E <internal_commands.ab2@105> INCLUDE "internal_commands.ab2"
00039710 <internal_commands.ab2@106> INCLUDE "internal_commands.ab2"
00039717 <internal_commands.ab2@107> INCLUDE "internal_commands.ab2"
00039724 <internal_commands.ab2@108> INCLUDE "internal_commands.ab2"
00039728 <internal_commands.ab2@112> INCLUDE "internal_commands.ab2"
0003972A <internal_commands.ab2@113> INCLUDE "internal_commands.ab2"
0003972F <internal_commands.ab2@114> INCLUDE "internal_commands.ab2"
0003973C <internal_commands.ab2@115> INCLUDE "internal_commands.ab2"
00039740 <internal_commands.ab2@119> INCLUDE "internal_commands.ab2"
00039742 <internal_commands.ab2@120> INCLUDE "internal_commands.ab2"
0003974A <internal_commands.ab2@121> INCLUDE "internal_commands.ab2"
0003974B <internal_commands.ab2@122> INCLUDE "internal_commands.ab2"
0003974C <internal_commands.ab2@123> INCLUDE "internal_commands.ab2"
00039750 <internal_commands.ab2@126> INCLUDE "internal_commands.ab2"
00039752 <internal_commands.ab2@127> INCLUDE "internal_commands.ab2"
0003975A <internal_commands.ab2@128> INCLUDE "internal_commands.ab2"
0003975B <internal_commands.ab2@129> INCLUDE "internal_commands.ab2"
0003975C <internal_commands.ab2@130> INCLUDE "internal_commands.ab2"
00039760 <internal_commands.ab2@133> INCLUDE "internal_commands.ab2"
00039762 <internal_commands.ab2@134> INCLUDE "internal_commands.ab2"
0003976B <internal_commands.ab2@135> INCLUDE "internal_commands.ab2"
00039776 <internal_commands.ab2@136> INCLUDE "internal_commands.ab2"
0003977A <internal_commands.ab2@140> INCLUDE "internal_commands.ab2"
0003977C <internal_commands.ab2@141> INCLUDE "internal_commands.ab2"
00039784 <internal_commands.ab2@142> INCLUDE "internal_commands.ab2"
0003978F <internal_commands.ab2@143> INCLUDE "internal_commands.ab2"
00039790 <internal_commands.ab2@144> INCLUDE "internal_commands.ab2"
00039794 <internal_commands.ab2@147> INCLUDE "internal_commands.ab2"
00039796 <internal_commands.ab2@148> INCLUDE "internal_commands.ab2"
0003979D <internal_commands.ab2@149> INCLUDE "internal_commands.ab2"
000397FF <internal_commands.ab2@150> INCLUDE "internal_commands.ab2"
00039800 <internal_commands.ab2@151> INCLUDE "internal_commands.ab2"
00039804 <internal_commands.ab2@154> INCLUDE "internal_commands.ab2"
00039806 <internal_commands.ab2@155> INCLUDE "internal_commands.ab2"
0003980D <internal_commands.ab2@156> INCLUDE "internal_commands.ab2"
0003981C <internal_commands.ab2@157> INCLUDE "internal_commands.ab2"
00039820 <internal_commands.ab2@161> INCLUDE "internal_commands.ab2"
00039822 <internal_commands.ab2@162> INCLUDE "internal_commands.ab2"
00039826 <internal_commands.ab2@163> INCLUDE "internal_commands.ab2"
0003985C <internal_commands.ab2@164> INCLUDE "internal_commands.ab2"
00039860 <internal_commands.ab2@168> INCLUDE "internal_commands.ab2"
00039862 <internal_commands.ab2@169> INCLUDE "internal_commands.ab2"
00039867 <internal_commands.ab2@170> INCLUDE "internal_commands.ab2"
00039876 <internal_commands.ab2@171> INCLUDE "internal_commands.ab2"
0003987A <internal_commands.ab2@175> INCLUDE "internal_commands.ab2"
0003987C <internal_commands.ab2@176> INCLUDE "internal_commands.ab2"
0003987F <internal_commands.ab2@177> INCLUDE "internal_commands.ab2"
000398A0 <internal_commands.ab2@178> INCLUDE "internal_commands.ab2"
000398A4 <internal_commands.ab2@182> INCLUDE "internal_commands.ab2"
000398A6 <internal_commands.ab2@183> INCLUDE "internal_commands.ab2"
000398AB <internal_commands.ab2@184> INCLUDE "internal_commands.ab2"
000398B7 <internal_commands.ab2@185> INCLUDE "internal_commands.ab2"
000398B8 <internal_commands.ab2@186> INCLUDE "internal_commands.ab2"
000398BC <internal_commands.ab2@189> INCLUDE "internal_commands.ab2"
000398BE <internal_commands.ab2@190> INCLUDE "internal_commands.ab2"
000398C3 <internal_commands.ab2@191> INCLUDE "internal_commands.ab2"
000398DA <internal_commands.ab2@192> INCLUDE "internal_commands.ab2"
000398DE <internal_commands.ab2@196> INCLUDE "internal_commands.ab2"
000398E0 <internal_commands.ab2@197> INCLUDE "internal_commands.ab2"
000398E5 <internal_commands.ab2@198> INCLUDE "internal_commands.ab2"
000398F4 <internal_commands.ab2@199> INCLUDE "internal_commands.ab2"
000398F8 <internal_commands.ab2@203> INCLUDE "internal_commands.ab2"
000398FA <internal_commands.ab2@204> INCLUDE "internal_commands.ab2"
000398FF <internal_commands.ab2@205> INCLUDE "internal_commands.ab2"
0003991E <internal_commands.ab2@206> INCLUDE "internal_commands.ab2"
00039922 <internal_commands.ab2@210> INCLUDE "internal_commands.ab2"
00039924 <internal_commands.ab2@211> INCLUDE "internal_commands.ab2"
00039929 <internal_commands.ab2@212> INCLUDE "internal_commands.ab2"
00039948 <internal_commands.ab2@213> INCLUDE "internal_commands.ab2"
0003994C <internal_commands.ab2@217> INCLUDE "internal_commands.ab2"
0003994E <internal_commands.ab2@218> INCLUDE "internal_commands.ab2"
00039954 <internal_commands.ab2@219> INCLUDE "internal_commands.ab2"
00039955 <internal_commands.ab2@220> INCLUDE "internal_commands.ab2"
00039956 <internal_commands.ab2@221> INCLUDE "internal_commands.ab2"
0003995A <internal_commands.ab2@224> INCLUDE "internal_commands.ab2"
0003995C <internal_commands.ab2@225> INCLUDE "internal_commands.ab2"
00039961 <internal_commands.ab2@226> INCLUDE "internal_commands.ab2"
00039962 <internal_commands.ab2@227> INCLUDE "internal_commands.ab2"
00039966 <internal_commands.ab2@231> INCLUDE "internal_commands.ab2"
00039968 <internal_commands.ab2@232> INCLUDE "internal_commands.ab2"
0003996D <internal_commands.ab2@233> INCLUDE "internal_commands.ab2"
0003997A <internal_commands.ab2@234> INCLUDE "internal_commands.ab2"
0003997E <internal_commands.ab2@238> INCLUDE "internal_commands.ab2"
00039980 <internal_commands.ab2@239> INCLUDE "internal_commands.ab2"
00039985 <internal_commands.ab2@240> INCLUDE "internal_commands.ab2"
00039994 <internal_commands.ab2@241> INCLUDE "internal_commands.ab2"
00039998 <internal_commands.ab2@245> INCLUDE "internal_commands.ab2"
0003999A <internal_commands.ab2@246> INCLUDE "internal_commands.ab2"
0003999F <internal_commands.ab2@247> INCLUDE "internal_commands.ab2"
000399AE <internal_commands.ab2@248> INCLUDE "internal_commands.ab2"
000399B2 <internal_commands.ab2@252> INCLUDE "internal_commands.ab2"
000399B4 <internal_commands.ab2@253> INCLUDE "internal_commands.ab2"
000399BA <internal_commands.ab2@254> INCLUDE "internal_commands.ab2"
000399D7 <internal_commands.ab2@255> INCLUDE "internal_commands.ab2"
000399D8 <internal_commands.ab2@256> INCLUDE "internal_commands.ab2"
000399DC <internal_commands.ab2@259> INCLUDE "internal_commands.ab2"
000399DE <internal_commands.ab2@260> INCLUDE "internal_commands.ab2"
000399E4 <internal_commands.ab2@261> INCLUDE "internal_commands.ab2"
00039A01 <internal_commands.ab2@262> INCLUDE "internal_commands.ab2"
00039A02 <internal_commands.ab2@263> INCLUDE "internal_commands.ab2"
00039A06 <internal_commands.ab2@266> INCLUDE "internal_commands.ab2"
00039A08 <internal_commands.ab2@267> INCLUDE "internal_commands.ab2"
00039A0B <internal_commands.ab2@268> INCLUDE "internal_commands.ab2"
00039A22 <internal_commands.ab2@269> INCLUDE "internal_commands.ab2"
00039A26 <internal_commands.ab2@273> INCLUDE "internal_commands.ab2"
00039A28 <internal_commands.ab2@274> INCLUDE "internal_commands.ab2"
00039A2B <internal_commands.ab2@275> INCLUDE "internal_commands.ab2"
00039A3A <internal_commands.ab2@276> INCLUDE "internal_commands.ab2"
00039A3E <internal_commands.ab2@280> INCLUDE "internal_commands.ab2"
00039A40 <internal_commands.ab2@281> INCLUDE "internal_commands.ab2"
00039A45 <internal_commands.ab2@282> INCLUDE "internal_commands.ab2"
00039A46 <internal_commands.ab2@283> INCLUDE "internal_commands.ab2"
00039A4A <internal_commands.ab2@287> INCLUDE "internal_commands.ab2"
00039A4C <internal_commands.ab2@288> INCLUDE "internal_commands.ab2"
00039A50 <internal_commands.ab2@289> INCLUDE "internal_commands.ab2"
00039A65 <internal_commands.ab2@290> INCLUDE "internal_commands.ab2"
00039A66 <internal_commands.ab2@291> INCLUDE "internal_commands.ab2"
00039A6A <internal_commands.ab2@294> INCLUDE "internal_commands.ab2"
00039A6C <internal_commands.ab2@295> INCLUDE "internal_commands.ab2"
00039A73 <internal_commands.ab2@296> INCLUDE "internal_commands.ab2"
00039A8C <internal_commands.ab2@297> INCLUDE "internal_commands.ab2"
00039A90 <internal_commands.ab2@301> INCLUDE "internal_commands.ab2"
00039A92 <internal_commands.ab2@302> INCLUDE "internal_commands.ab2"
00039A99 <internal_commands.ab2@303> INCLUDE "internal_commands.ab2"
00039AA4 <internal_commands.ab2@304> INCLUDE "internal_commands.ab2"
00039AA8 <internal_commands.ab2@308> INCLUDE "internal_commands.ab2"
00039AAA <internal_commands.ab2@309> INCLUDE "internal_commands.ab2"
00039AAF <internal_commands.ab2@310> INCLUDE "internal_commands.ab2"
00039AC6 <internal_commands.ab2@311> INCLUDE "internal_commands.ab2"
00039ACA <internal_commands.ab2@315> INCLUDE "internal_commands.ab2"
00039ACC <internal_commands.ab2@316> INCLUDE "internal_commands.ab2"
00039AD0 <internal_commands.ab2@317> INCLUDE "internal_commands.ab2"
00039AE7 <internal_commands.ab2@318> INCLUDE "internal_commands.ab2"
00039AE8 <internal_commands.ab2@319> INCLUDE "internal_commands.ab2"
00039AEC <internal_commands.ab2@322> INCLUDE "internal_commands.ab2"
00039AEE <internal_commands.ab2@323> INCLUDE "internal_commands.ab2"
00039AF3 <internal_commands.ab2@324> INCLUDE "internal_commands.ab2"
00039AF4 <internal_commands.ab2@325> INCLUDE "internal_commands.ab2"
00039AF8 <internal_commands.ab2@329> INCLUDE "internal_commands.ab2"
00039AFA <internal_commands.ab2@330> INCLUDE "internal_commands.ab2"
00039AFF <internal_commands.ab2@331> INCLUDE "internal_commands.ab2"
00039B03 <internal_commands.ab2@332> INCLUDE "internal_commands.ab2"
00039B04 <internal_commands.ab2@333> INCLUDE "internal_commands.ab2"
00039B08 <internal_commands.ab2@336> INCLUDE "internal_commands.ab2"
00039B0A <internal_commands.ab2@337> INCLUDE "internal_commands.ab2"
00039B11 <internal_commands.ab2@338> INCLUDE "internal_commands.ab2"
00039B29 <internal_commands.ab2@339> INCLUDE "internal_commands.ab2"
00039B2A <internal_commands.ab2@340> INCLUDE "internal_commands.ab2"
00039B2E <internal_commands.ab2@343> INCLUDE "internal_commands.ab2"
00039B30 <internal_commands.ab2@344> INCLUDE "internal_commands.ab2"
00039B37 <internal_commands.ab2@345> INCLUDE "internal_commands.ab2"
00039B3C <internal_commands.ab2@346> INCLUDE "internal_commands.ab2"
00039B40 <internal_commands.ab2@350> INCLUDE "internal_commands.ab2"
00039B42 <internal_commands.ab2@351> INCLUDE "internal_commands.ab2"
00039B49 <internal_commands.ab2@352> INCLUDE "internal_commands.ab2"
00039B4E <internal_commands.ab2@353> INCLUDE "internal_commands.ab2"
00039B52 <internal_commands.ab2@357> INCLUDE "internal_commands.ab2"
00039B54 <internal_commands.ab2@358> INCLUDE "internal_commands.ab2"
00039B5B <internal_commands.ab2@359> INCLUDE "internal_commands.ab2"
00039B76 <internal_commands.ab2@360> INCLUDE "internal_commands.ab2"
00039B7A <internal_commands.ab2@364> INCLUDE "internal_commands.ab2"
00039B7C <internal_commands.ab2@365> INCLUDE "internal_commands.ab2"
00039B84 <internal_commands.ab2@366> INCLUDE "internal_commands.ab2"
00039B9D <internal_commands.ab2@367> INCLUDE "internal_commands.ab2"
00039B9E <internal_commands.ab2@368> INCLUDE "internal_commands.ab2"
00039BA2 <internal_commands.ab2@371> INCLUDE "internal_commands.ab2"
00039BA4 <internal_commands.ab2@372> INCLUDE "internal_commands.ab2"
00039BAA <internal_commands.ab2@373> INCLUDE "internal_commands.ab2"
00039BAB <internal_commands.ab2@374> INCLUDE "internal_commands.ab2"
00039BAC <internal_commands.ab2@375> INCLUDE "internal_commands.ab2"
00039BB0 <internal_commands.ab2@378> INCLUDE "internal_commands.ab2"
00039BB2 <internal_commands.ab2@379> INCLUDE "internal_commands.ab2"
00039BB8 <internal_commands.ab2@380> INCLUDE "internal_commands.ab2"
00039BB9 <internal_commands.ab2@381> INCLUDE "internal_commands.ab2"
00039BBA <internal_commands.ab2@382> INCLUDE "internal_commands.ab2"
00039BBE <internal_commands.ab2@385> INCLUDE "internal_commands.ab2"
00039BC0 <internal_commands.ab2@386> INCLUDE "internal_commands.ab2"
00039BC7 <internal_commands.ab2@387> INCLUDE "internal_commands.ab2"
00039BC8 <internal_commands.ab2@388> INCLUDE "internal_commands.ab2"
00039BCC <internal_commands.ab2@392> INCLUDE "internal_commands.ab2"
00039BCE <internal_commands.ab2@393> INCLUDE "internal_commands.ab2"
00039BD4 <internal_commands.ab2@394> INCLUDE "internal_commands.ab2"
00039BDD <internal_commands.ab2@395> INCLUDE "internal_commands.ab2"
00039BDE <internal_commands.ab2@396> INCLUDE "internal_commands.ab2"
00039BE2 <internal_commands.ab2@399> INCLUDE "internal_commands.ab2"
00039BE4 <internal_commands.ab2@400> INCLUDE "internal_commands.ab2"
00039BEC <internal_commands.ab2@401> INCLUDE "internal_commands.ab2"
00039BF9 <internal_commands.ab2@402> INCLUDE "internal_commands.ab2"
00039BFA <internal_commands.ab2@403> INCLUDE "internal_commands.ab2"
00039BFE <internal_commands.ab2@406> INCLUDE "internal_commands.ab2"
00039C00 <internal_commands.ab2@407> INCLUDE "internal_commands.ab2"
00039C08 <internal_commands.ab2@408> INCLUDE "internal_commands.ab2"
00039C15 <internal_commands.ab2@409> INCLUDE "internal_commands.ab2"
00039C16 <internal_commands.ab2@410> INCLUDE "internal_commands.ab2"
00039C1A <internal_commands.ab2@413> INCLUDE "internal_commands.ab2"
00039C1C <internal_commands.ab2@414> INCLUDE "internal_commands.ab2"
00039C24 <internal_commands.ab2@415> INCLUDE "internal_commands.ab2"
00039C31 <internal_commands.ab2@416> INCLUDE "internal_commands.ab2"
00039C32 <internal_commands.ab2@417> INCLUDE "internal_commands.ab2"
00039C36 <internal_commands.ab2@420> INCLUDE "internal_commands.ab2"
00039C38 <internal_commands.ab2@421> INCLUDE "internal_commands.ab2"
00039C3D <internal_commands.ab2@422> INCLUDE "internal_commands.ab2"
00039C3E <internal_commands.ab2@423> INCLUDE "internal_commands.ab2"
00039C42 <internal_commands.ab2@437> INCLUDE "internal_commands.ab2"
00039C44 <internal_commands.ab2@438> INCLUDE "internal_commands.ab2"
00039C49 <internal_commands.ab2@439> INCLUDE "internal_commands.ab2"
00039C4A <internal_commands.ab2@440> INCLUDE "internal_commands.ab2"
00039C4C <internal_commands.ab2@443> INCLUDE "internal_commands.ab2"
00039C50 <internal_commands.ab2@444> INCLUDE "internal_commands.ab2"
00039C52 <internal_commands.ab2@445> INCLUDE "internal_commands.ab2"
00039C54 <internal_commands.ab2@446> INCLUDE "internal_commands.ab2"
00039C58 <internal_commands.ab2@447> INCLUDE "internal_commands.ab2"
00039C5A <internal_commands.ab2@448> INCLUDE "internal_commands.ab2"
00039C5E <internal_commands.ab2@452> INCLUDE "internal_commands.ab2"
00039C60 <internal_commands.ab2@453> INCLUDE "internal_commands.ab2"
00039C64 <internal_commands.ab2@454> INCLUDE "internal_commands.ab2"
00039C65 <internal_commands.ab2@455> INCLUDE "internal_commands.ab2"
00039C66 <internal_commands.ab2@456> INCLUDE "internal_commands.ab2"
00039C68 <internal_commands.ab2@458> INCLUDE "internal_commands.ab2"
00039C6C <internal_commands.ab2@459> INCLUDE "internal_commands.ab2"
00039C6E <internal_commands.ab2@460> INCLUDE "internal_commands.ab2"
00039C70 <internal_commands.ab2@461> INCLUDE "internal_commands.ab2"
00039C74 <internal_commands.ab2@462> INCLUDE "internal_commands.ab2"
00039C76 <internal_commands.ab2@463> INCLUDE "internal_commands.ab2"
00039C7A <internal_commands.ab2@467> INCLUDE "internal_commands.ab2"
00039C7C <internal_commands.ab2@468> INCLUDE "internal_commands.ab2"
00039C81 <internal_commands.ab2@469> INCLUDE "internal_commands.ab2"
00039C82 <internal_commands.ab2@470> INCLUDE "internal_commands.ab2"
00039C84 <internal_commands.ab2@473> INCLUDE "internal_commands.ab2"
00039C88 <internal_commands.ab2@474> INCLUDE "internal_commands.ab2"
00039C8A <internal_commands.ab2@475> INCLUDE "internal_commands.ab2"
00039C8C <internal_commands.ab2@476> INCLUDE "internal_commands.ab2"
00039C90 <internal_commands.ab2@477> INCLUDE "internal_commands.ab2"
00039C92 <internal_commands.ab2@478> INCLUDE "internal_commands.ab2"
00039C96 <internal_commands.ab2@482> INCLUDE "internal_commands.ab2"
00039C98 <internal_commands.ab2@483> INCLUDE "internal_commands.ab2"
00039C9D <internal_commands.ab2@484> INCLUDE "internal_commands.ab2"
00039C9E <internal_commands.ab2@485> INCLUDE "internal_commands.ab2"
00039CA0 <internal_commands.ab2@488> INCLUDE "internal_commands.ab2"
00039CA4 <internal_commands.ab2@489> INCLUDE "internal_commands.ab2"
00039CA6 <internal_commands.ab2@490> INCLUDE "internal_commands.ab2"
00039CA8 <internal_commands.ab2@491> INCLUDE "internal_commands.ab2"
00039CAC <internal_commands.ab2@492> INCLUDE "internal_commands.ab2"
00039CAE <internal_commands.ab2@493> INCLUDE "internal_commands.ab2"
00039CB2 <internal_commands.ab2@497> INCLUDE "internal_commands.ab2"
00039CB4 <internal_commands.ab2@498> INCLUDE "internal_commands.ab2"
00039CB9 <internal_commands.ab2@499> INCLUDE "internal_commands.ab2"
00039CBA <internal_commands.ab2@500> INCLUDE "internal_commands.ab2"
00039CBC <internal_commands.ab2@503> INCLUDE "internal_commands.ab2"
00039CC0 <internal_commands.ab2@504> INCLUDE "internal_commands.ab2"
00039CC2 <internal_commands.ab2@505> INCLUDE "internal_commands.ab2"
00039CC4 <internal_commands.ab2@506> INCLUDE "internal_commands.ab2"
00039CC8 <internal_commands.ab2@507> INCLUDE "internal_commands.ab2"
00039CCA <internal_commands.ab2@508> INCLUDE "internal_commands.ab2"
00039CCE <internal_commands.ab2@512> INCLUDE "internal_commands.ab2"
00039CD0 <internal_commands.ab2@513> INCLUDE "internal_commands.ab2"
00039CD5 <internal_commands.ab2@514> INCLUDE "internal_commands.ab2"
00039CD6 <internal_commands.ab2@515> INCLUDE "internal_commands.ab2"
00039CD8 <internal_commands.ab2@518> INCLUDE "internal_commands.ab2"
00039CDC <internal_commands.ab2@519> INCLUDE "internal_commands.ab2"
00039CDE <internal_commands.ab2@520> INCLUDE "internal_commands.ab2"
00039CE0 <internal_commands.ab2@521> INCLUDE "internal_commands.ab2"
00039CE4 <internal_commands.ab2@522> INCLUDE "internal_commands.ab2"
00039CE6 <internal_commands.ab2@523> INCLUDE "internal_commands.ab2"
00039CEA <internal_commands.ab2@527> INCLUDE "internal_commands.ab2"
00039CEC <internal_commands.ab2@528> INCLUDE "internal_commands.ab2"
00039CF0 <internal_commands.ab2@529> INCLUDE "internal_commands.ab2"
00039CF1 <internal_commands.ab2@530> INCLUDE "internal_commands.ab2"
00039CF2 <internal_commands.ab2@531> INCLUDE "internal_commands.ab2"
00039CF4 <internal_commands.ab2@533> INCLUDE "internal_commands.ab2"
00039CF8 <internal_commands.ab2@534> INCLUDE "internal_commands.ab2"
00039CFA <internal_commands.ab2@535> INCLUDE "internal_commands.ab2"
00039CFC <internal_commands.ab2@536> INCLUDE "internal_commands.ab2"
00039D00 <internal_commands.ab2@537> INCLUDE "internal_commands.ab2"
00039D02 <internal_commands.ab2@538> INCLUDE "internal_commands.ab2"
00039D06 <internal_commands.ab2@542> INCLUDE "internal_commands.ab2"
00039D08 <internal_commands.ab2@543> INCLUDE "internal_commands.ab2"
00039D0D <internal_commands.ab2@544> INCLUDE "internal_commands.ab2"
00039D0E <internal_commands.ab2@545> INCLUDE "internal_commands.ab2"
00039D10 <internal_commands.ab2@548> INCLUDE "internal_commands.ab2"
00039D14 <internal_commands.ab2@549> INCLUDE "internal_commands.ab2"
00039D16 <internal_commands.ab2@550> INCLUDE "internal_commands.ab2"
00039D18 <internal_commands.ab2@551> INCLUDE "internal_commands.ab2"
00039D1C <internal_commands.ab2@552> INCLUDE "internal_commands.ab2"
00039D1E <internal_commands.ab2@553> INCLUDE "internal_commands.ab2"
00039D22 <internal_commands.ab2@557> INCLUDE "internal_commands.ab2"
00039D24 <internal_commands.ab2@558> INCLUDE "internal_commands.ab2"
00039D28 <internal_commands.ab2@559> INCLUDE "internal_commands.ab2"
00039D29 <internal_commands.ab2@560> INCLUDE "internal_commands.ab2"
00039D2A <internal_commands.ab2@561> INCLUDE "internal_commands.ab2"
00039D2C <internal_commands.ab2@563> INCLUDE "internal_commands.ab2"
00039D30 <internal_commands.ab2@564> INCLUDE "internal_commands.ab2"
00039D32 <internal_commands.ab2@565> INCLUDE "internal_commands.ab2"
00039D34 <internal_commands.ab2@566> INCLUDE "internal_commands.ab2"
00039D38 <internal_commands.ab2@567> INCLUDE "internal_commands.ab2"
00039D3A <internal_commands.ab2@568> INCLUDE "internal_commands.ab2"
00039D3E <internal_commands.ab2@572> INCLUDE "internal_commands.ab2"
00039D40 <internal_commands.ab2@573> INCLUDE "internal_commands.ab2"
00039D44 <internal_commands.ab2@574> INCLUDE "internal_commands.ab2"
00039D45 <internal_commands.ab2@575> INCLUDE "internal_commands.ab2"
00039D46 <internal_commands.ab2@576> INCLUDE "internal_commands.ab2"
00039D48 <internal_commands.ab2@578> INCLUDE "internal_commands.ab2"
00039D4C <internal_commands.ab2@579> INCLUDE "internal_commands.ab2"
00039D4E <internal_commands.ab2@580> INCLUDE "internal_commands.ab2"
00039D50 <internal_commands.ab2@581> INCLUDE "internal_commands.ab2"
00039D54 <internal_commands.ab2@582> INCLUDE "internal_commands.ab2"
00039D56 <internal_commands.ab2@583> INCLUDE "internal_commands.ab2"
00039D5A <internal_commands.ab2@587> INCLUDE "internal_commands.ab2"
00039D5C <internal_commands.ab2@588> INCLUDE "internal_commands.ab2"
00039D60 <internal_commands.ab2@589> INCLUDE "internal_commands.ab2"
00039D61 <internal_commands.ab2@590> INCLUDE "internal_commands.ab2"
00039D62 <internal_commands.ab2@591> INCLUDE "internal_commands.ab2"
00039D64 <internal_commands.ab2@593> INCLUDE "internal_commands.ab2"
00039D68 <internal_commands.ab2@594> INCLUDE "internal_commands.ab2"
00039D6A <internal_commands.ab2@595> INCLUDE "internal_commands.ab2"
00039D6C <internal_commands.ab2@596> INCLUDE "internal_commands.ab2"
00039D70 <internal_commands.ab2@597> INCLUDE "internal_commands.ab2"
00039D72 <internal_commands.ab2@598> INCLUDE "internal_commands.ab2"
00039D76 <internal_commands.ab2@602> INCLUDE "internal_commands.ab2"
00039D78 <internal_commands.ab2@603> INCLUDE "internal_commands.ab2"
00039D7C <internal_commands.ab2@604> INCLUDE "internal_commands.ab2"
00039D7D <internal_commands.ab2@605> INCLUDE "internal_commands.ab2"
00039D7E <internal_commands.ab2@606> INCLUDE "internal_commands.ab2"
00039D80 <internal_commands.ab2@608> INCLUDE "internal_commands.ab2"
00039D84 <internal_commands.ab2@609> INCLUDE "internal_commands.ab2"
00039D86 <internal_commands.ab2@610> INCLUDE "internal_commands.ab2"
00039D88 <internal_commands.ab2@611> INCLUDE "internal_commands.ab2"
00039D8C <internal_commands.ab2@612> INCLUDE "internal_commands.ab2"
00039D8E <internal_commands.ab2@613> INCLUDE "internal_commands.ab2"
00039D92 <internal_commands.ab2@617> INCLUDE "internal_commands.ab2"
00039D94 <internal_commands.ab2@618> INCLUDE "internal_commands.ab2"
00039D98 <internal_commands.ab2@619> INCLUDE "internal_commands.ab2"
00039D99 <internal_commands.ab2@620> INCLUDE "internal_commands.ab2"
00039D9A <internal_commands.ab2@621> INCLUDE "internal_commands.ab2"
00039D9C <internal_commands.ab2@623> INCLUDE "internal_commands.ab2"
00039DA0 <internal_commands.ab2@624> INCLUDE "internal_commands.ab2"
00039DA2 <internal_commands.ab2@625> INCLUDE "internal_commands.ab2"
00039DA4 <internal_commands.ab2@626> INCLUDE "internal_commands.ab2"
00039DA8 <internal_commands.ab2@627> INCLUDE "internal_commands.ab2"
00039DAA <internal_commands.ab2@628> INCLUDE "internal_commands.ab2"
00039DAE <internal_commands.ab2@632> INCLUDE "internal_commands.ab2"
00039DB0 <internal_commands.ab2@633> INCLUDE "internal_commands.ab2"
00039DB4 <internal_commands.ab2@634> INCLUDE "internal_commands.ab2"
00039DB5 <internal_commands.ab2@635> INCLUDE "internal_commands.ab2"
00039DB6 <internal_commands.ab2@636> INCLUDE "internal_commands.ab2"
00039DB8 <internal_commands.ab2@638> INCLUDE "internal_commands.ab2"
00039DBC <internal_commands.ab2@639> INCLUDE "internal_commands.ab2"
00039DBE <internal_commands.ab2@640> INCLUDE "internal_commands.ab2"
00039DC0 <internal_commands.ab2@641> INCLUDE "internal_commands.ab2"
00039DC4 <internal_commands.ab2@642> INCLUDE "internal_commands.ab2"
00039DC6 <internal_commands.ab2@643> INCLUDE "internal_commands.ab2"
00039DCA <internal_commands.ab2@647> INCLUDE "internal_commands.ab2"
00039DCC <internal_commands.ab2@648> INCLUDE "internal_commands.ab2"
00039DD0 <internal_commands.ab2@649> INCLUDE "internal_commands.ab2"
00039DD1 <internal_commands.ab2@650> INCLUDE "internal_commands.ab2"
00039DD2 <internal_commands.ab2@651> INCLUDE "internal_commands.ab2"
00039DD4 <internal_commands.ab2@653> INCLUDE "internal_commands.ab2"
00039DD8 <internal_commands.ab2@654> INCLUDE "internal_commands.ab2"
00039DDA <internal_commands.ab2@655> INCLUDE "internal_commands.ab2"
00039DDC <internal_commands.ab2@656> INCLUDE "internal_commands.ab2"
00039DE0 <internal_commands.ab2@657> INCLUDE "internal_commands.ab2"
00039DE2 <internal_commands.ab2@658> INCLUDE "internal_commands.ab2"
00039DE6 <internal_commands.ab2@662> INCLUDE "internal_commands.ab2"
00039DE8 <internal_commands.ab2@663> INCLUDE "internal_commands.ab2"
00039DEC <internal_commands.ab2@664> INCLUDE "internal_commands.ab2"
00039DED <internal_commands.ab2@665> INCLUDE "internal_commands.ab2"
00039DEE <internal_commands.ab2@666> INCLUDE "internal_commands.ab2"
00039DF0 <internal_commands.ab2@668> INCLUDE "internal_commands.ab2"
00039DF4 <internal_commands.ab2@669> INCLUDE "internal_commands.ab2"
00039DF6 <internal_commands.ab2@670> INCLUDE "internal_commands.ab2"
00039DF8 <internal_commands.ab2@671> INCLUDE "internal_commands.ab2"
00039DFC <internal_commands.ab2@672> INCLUDE "internal_commands.ab2"
00039DFE <internal_commands.ab2@673> INCLUDE "internal_commands.ab2"
00039E02 <internal_commands.ab2@677> INCLUDE "internal_commands.ab2"
00039E04 <internal_commands.ab2@678> INCLUDE "internal_commands.ab2"
00039E08 <internal_commands.ab2@679> INCLUDE "internal_commands.ab2"
00039E09 <internal_commands.ab2@680> INCLUDE "internal_commands.ab2"
00039E0A <internal_commands.ab2@681> INCLUDE "internal_commands.ab2"
00039E0C <internal_commands.ab2@683> INCLUDE "internal_commands.ab2"
00039E10 <internal_commands.ab2@684> INCLUDE "internal_commands.ab2"
00039E12 <internal_commands.ab2@685> INCLUDE "internal_commands.ab2"
00039E14 <internal_commands.ab2@686> INCLUDE "internal_commands.ab2"
00039E18 <internal_commands.ab2@687> INCLUDE "internal_commands.ab2"
00039E1A <internal_commands.ab2@688> INCLUDE "internal_commands.ab2"
00039E1E <internal_commands.ab2@692> INCLUDE "internal_commands.ab2"
00039E20 <internal_commands.ab2@693> INCLUDE "internal_commands.ab2"
00039E24 <internal_commands.ab2@694> INCLUDE "internal_commands.ab2"
00039E25 <internal_commands.ab2@695> INCLUDE "internal_commands.ab2"
00039E26 <internal_commands.ab2@696> INCLUDE "internal_commands.ab2"
00039E28 <internal_commands.ab2@698> INCLUDE "internal_commands.ab2"
00039E2C <internal_commands.ab2@699> INCLUDE "internal_commands.ab2"
00039E2E <internal_commands.ab2@700> INCLUDE "internal_commands.ab2"
00039E30 <internal_commands.ab2@701> INCLUDE "internal_commands.ab2"
00039E34 <internal_commands.ab2@702> INCLUDE "internal_commands.ab2"
00039E36 <internal_commands.ab2@703> INCLUDE "internal_commands.ab2"
00039E3A <internal_commands.ab2@707> INCLUDE "internal_commands.ab2"
00039E3C <internal_commands.ab2@708> INCLUDE "internal_commands.ab2"
00039E40 <internal_commands.ab2@709> INCLUDE "internal_commands.ab2"
00039E41 <internal_commands.ab2@710> INCLUDE "internal_commands.ab2"
00039E42 <internal_commands.ab2@711> INCLUDE "internal_commands.ab2"
00039E44 <internal_commands.ab2@713> INCLUDE "internal_commands.ab2"
00039E48 <internal_commands.ab2@714> INCLUDE "internal_commands.ab2"
00039E4A <internal_commands.ab2@715> INCLUDE "internal_commands.ab2"
00039E4C <internal_commands.ab2@716> INCLUDE "internal_commands.ab2"
00039E50 <internal_commands.ab2@717> INCLUDE "internal_commands.ab2"
00039E52 <internal_commands.ab2@718> INCLUDE "internal_commands.ab2"
00039E56 <internal_commands.ab2@722> INCLUDE "internal_commands.ab2"
00039E58 <internal_commands.ab2@723> INCLUDE "internal_commands.ab2"
00039E5C <internal_commands.ab2@724> INCLUDE "internal_commands.ab2"
00039E5D <internal_commands.ab2@725> INCLUDE "internal_commands.ab2"
00039E5E <internal_commands.ab2@726> INCLUDE "internal_commands.ab2"
00039E60 <internal_commands.ab2@728> INCLUDE "internal_commands.ab2"
00039E64 <internal_commands.ab2@729> INCLUDE "internal_commands.ab2"
00039E66 <internal_commands.ab2@730> INCLUDE "internal_commands.ab2"
00039E68 <internal_commands.ab2@731> INCLUDE "internal_commands.ab2"
00039E6C <internal_commands.ab2@732> INCLUDE "internal_commands.ab2"
00039E6E <internal_commands.ab2@733> INCLUDE "internal_commands.ab2"
00039E72 <internal_commands.ab2@737> INCLUDE "internal_commands.ab2"
00039E74 <internal_commands.ab2@738> INCLUDE "internal_commands.ab2"
00039E78 <internal_commands.ab2@739> INCLUDE "internal_commands.ab2"
00039E79 <internal_commands.ab2@740> INCLUDE "internal_commands.ab2"
00039E7A <internal_commands.ab2@741> INCLUDE "internal_commands.ab2"
00039E7C <internal_commands.ab2@743> INCLUDE "internal_commands.ab2"
00039E80 <internal_commands.ab2@744> INCLUDE "internal_commands.ab2"
00039E82 <internal_commands.ab2@745> INCLUDE "internal_commands.ab2"
00039E84 <internal_commands.ab2@746> INCLUDE "internal_commands.ab2"
00039E88 <internal_commands.ab2@747> INCLUDE "internal_commands.ab2"
00039E8A <internal_commands.ab2@748> INCLUDE "internal_commands.ab2"
00039E8E <internal_commands.ab2@752> INCLUDE "internal_commands.ab2"
00039E90 <internal_commands.ab2@753> INCLUDE "internal_commands.ab2"
00039E94 <internal_commands.ab2@754> INCLUDE "internal_commands.ab2"
00039E95 <internal_commands.ab2@755> INCLUDE "internal_commands.ab2"
00039E96 <internal_commands.ab2@756> INCLUDE "internal_commands.ab2"
00039E98 <internal_commands.ab2@758> INCLUDE "internal_commands.ab2"
00039E9C <internal_commands.ab2@759> INCLUDE "internal_commands.ab2"
00039E9E <internal_commands.ab2@760> INCLUDE "internal_commands.ab2"
00039EA0 <internal_commands.ab2@761> INCLUDE "internal_commands.ab2"
00039EA4 <internal_commands.ab2@762> INCLUDE "internal_commands.ab2"
00039EA6 <internal_commands.ab2@763> INCLUDE "internal_commands.ab2"
00039EAA <internal_commands.ab2@767> INCLUDE "internal_commands.ab2"
00039EAC <internal_commands.ab2@768> INCLUDE "internal_commands.ab2"
00039EB0 <internal_commands.ab2@769> INCLUDE "internal_commands.ab2"
00039EB1 <internal_commands.ab2@770> INCLUDE "internal_commands.ab2"
00039EB2 <internal_commands.ab2@771> INCLUDE "internal_commands.ab2"
00039EB4 <internal_commands.ab2@773> INCLUDE "internal_commands.ab2"
00039EB8 <internal_commands.ab2@774> INCLUDE "internal_commands.ab2"
00039EBA <internal_commands.ab2@775> INCLUDE "internal_commands.ab2"
00039EBC <internal_commands.ab2@776> INCLUDE "internal_commands.ab2"
00039EC0 <internal_commands.ab2@777> INCLUDE "internal_commands.ab2"
00039EC2 <internal_commands.ab2@778> INCLUDE "internal_commands.ab2"
00039EC6 <internal_commands.ab2@782> INCLUDE "internal_commands.ab2"
00039EC8 <internal_commands.ab2@783> INCLUDE "internal_commands.ab2"
00039ECC <internal_commands.ab2@784> INCLUDE "internal_commands.ab2"
00039ECD <internal_commands.ab2@785> INCLUDE "internal_commands.ab2"
00039ECE <internal_commands.ab2@786> INCLUDE "internal_commands.ab2"
00039ED0 <internal_commands.ab2@788> INCLUDE "internal_commands.ab2"
00039ED4 <internal_commands.ab2@789> INCLUDE "internal_commands.ab2"
00039ED6 <internal_commands.ab2@790> INCLUDE "internal_commands.ab2"
00039ED8 <internal_commands.ab2@791> INCLUDE "internal_commands.ab2"
00039EDC <internal_commands.ab2@792> INCLUDE "internal_commands.ab2"
00039EDE <internal_commands.ab2@793> INCLUDE "internal_commands.ab2"
00039EE2 <internal_commands.ab2@797> INCLUDE "internal_commands.ab2"
00039EE4 <internal_commands.ab2@798> INCLUDE "internal_commands.ab2"
00039EE9 <internal_commands.ab2@799> INCLUDE "internal_commands.ab2"
00039EEA <internal_commands.ab2@800> INCLUDE "internal_commands.ab2"
00039EEC <internal_commands.ab2@803> INCLUDE "internal_commands.ab2"
00039EF0 <internal_commands.ab2@804> INCLUDE "internal_commands.ab2"
00039EF2 <internal_commands.ab2@805> INCLUDE "internal_commands.ab2"
00039EF4 <internal_commands.ab2@806> INCLUDE "internal_commands.ab2"
00039EF8 <internal_commands.ab2@807> INCLUDE "internal_commands.ab2"
00039EFA <internal_commands.ab2@808> INCLUDE "internal_commands.ab2"
00039EFE <internal_commands.ab2@812> INCLUDE "internal_commands.ab2"
00039F00 <internal_commands.ab2@813> INCLUDE "internal_commands.ab2"
00039F05 <internal_commands.ab2@814> INCLUDE "internal_commands.ab2"
00039F06 <internal_commands.ab2@815> INCLUDE "internal_commands.ab2"
00039F08 <internal_commands.ab2@818> INCLUDE "internal_commands.ab2"
00039F0C <internal_commands.ab2@819> INCLUDE "internal_commands.ab2"
00039F0E <internal_commands.ab2@820> INCLUDE "internal_commands.ab2"
00039F10 <internal_commands.ab2@821> INCLUDE "internal_commands.ab2"
00039F14 <internal_commands.ab2@822> INCLUDE "internal_commands.ab2"
00039F16 <internal_commands.ab2@823> INCLUDE "internal_commands.ab2"
00039F1A <internal_commands.ab2@827> INCLUDE "internal_commands.ab2"
00039F1C <internal_commands.ab2@828> INCLUDE "internal_commands.ab2"
00039F21 <internal_commands.ab2@829> INCLUDE "internal_commands.ab2"
00039F22 <internal_commands.ab2@830> INCLUDE "internal_commands.ab2"
00039F24 <internal_commands.ab2@833> INCLUDE "internal_commands.ab2"
00039F28 <internal_commands.ab2@834> INCLUDE "internal_commands.ab2"
00039F2A <internal_commands.ab2@835> INCLUDE "internal_commands.ab2"
00039F2C <internal_commands.ab2@836> INCLUDE "internal_commands.ab2"
00039F30 <internal_commands.ab2@837> INCLUDE "internal_commands.ab2"
00039F32 <internal_commands.ab2@838> INCLUDE "internal_commands.ab2"
00039F36 <internal_commands.ab2@842> INCLUDE "internal_commands.ab2"
00039F38 <internal_commands.ab2@843> INCLUDE "internal_commands.ab2"
00039F3D <internal_commands.ab2@844> INCLUDE "internal_commands.ab2"
00039F3E <internal_commands.ab2@845> INCLUDE "internal_commands.ab2"
00039F40 <internal_commands.ab2@848> INCLUDE "internal_commands.ab2"
00039F44 <internal_commands.ab2@849> INCLUDE "internal_commands.ab2"
00039F46 <internal_commands.ab2@850> INCLUDE "internal_commands.ab2"
00039F48 <internal_commands.ab2@851> INCLUDE "internal_commands.ab2"
00039F4C <internal_commands.ab2@852> INCLUDE "internal_commands.ab2"
00039F4E <internal_commands.ab2@853> INCLUDE "internal_commands.ab2"
00039F52 <internal_commands.ab2@857> INCLUDE "internal_commands.ab2"
00039F54 <internal_commands.ab2@858> INCLUDE "internal_commands.ab2"
00039F58 <internal_commands.ab2@859> INCLUDE "internal_commands.ab2"
00039F59 <internal_commands.ab2@860> INCLUDE "internal_commands.ab2"
00039F5A <internal_commands.ab2@861> INCLUDE "internal_commands.ab2"
00039F5C <internal_commands.ab2@863> INCLUDE "internal_commands.ab2"
00039F60 <internal_commands.ab2@864> INCLUDE "internal_commands.ab2"
00039F62 <internal_commands.ab2@865> INCLUDE "internal_commands.ab2"
00039F64 <internal_commands.ab2@866> INCLUDE "internal_commands.ab2"
00039F68 <internal_commands.ab2@867> INCLUDE "internal_commands.ab2"
00039F6A <internal_commands.ab2@868> INCLUDE "internal_commands.ab2"
00039F6E <internal_commands.ab2@872> INCLUDE "internal_commands.ab2"
00039F70 <internal_commands.ab2@873> INCLUDE "internal_commands.ab2"
00039F74 <internal_commands.ab2@874> INCLUDE "internal_commands.ab2"
00039F75 <internal_commands.ab2@875> INCLUDE "internal_commands.ab2"
00039F76 <internal_commands.ab2@876> INCLUDE "internal_commands.ab2"
00039F78 <internal_commands.ab2@878> INCLUDE "internal_commands.ab2"
00039F7C <internal_commands.ab2@879> INCLUDE "internal_commands.ab2"
00039F7E <internal_commands.ab2@880> INCLUDE "internal_commands.ab2"
00039F80 <internal_commands.ab2@881> INCLUDE "internal_commands.ab2"
00039F84 <internal_commands.ab2@882> INCLUDE "internal_commands.ab2"
00039F86 <internal_commands.ab2@883> INCLUDE "internal_commands.ab2"
00039F8A <internal_commands.ab2@887> INCLUDE "internal_commands.ab2"
00039F8C <internal_commands.ab2@888> INCLUDE "internal_commands.ab2"
00039F90 <internal_commands.ab2@889> INCLUDE "internal_commands.ab2"
00039F91 <internal_commands.ab2@890> INCLUDE "internal_commands.ab2"
00039F92 <internal_commands.ab2@891> INCLUDE "internal_commands.ab2"
00039F94 <internal_commands.ab2@893> INCLUDE "internal_commands.ab2"
00039F98 <internal_commands.ab2@894> INCLUDE "internal_commands.ab2"
00039F9A <internal_commands.ab2@895> INCLUDE "internal_commands.ab2"
00039F9C <internal_commands.ab2@896> INCLUDE "internal_commands.ab2"
00039FA0 <internal_commands.ab2@897> INCLUDE "internal_commands.ab2"
00039FA2 <internal_commands.ab2@898> INCLUDE "internal_commands.ab2"
00039FA6 <internal_commands.ab2@902> INCLUDE "internal_commands.ab2"
00039FA8 <internal_commands.ab2@903> INCLUDE "internal_commands.ab2"
00039FAC <internal_commands.ab2@904> INCLUDE "internal_commands.ab2"
00039FAD <internal_commands.ab2@905> INCLUDE "internal_commands.ab2"
00039FAE <internal_commands.ab2@906> INCLUDE "internal_commands.ab2"
00039FB0 <internal_commands.ab2@908> INCLUDE "internal_commands.ab2"
00039FB4 <internal_commands.ab2@909> INCLUDE "internal_commands.ab2"
00039FB6 <internal_commands.ab2@910> INCLUDE "internal_commands.ab2"
00039FB8 <internal_commands.ab2@911> INCLUDE "internal_commands.ab2"
00039FBC <internal_commands.ab2@912> INCLUDE "internal_commands.ab2"
00039FBE <internal_commands.ab2@913> INCLUDE "internal_commands.ab2"
00039FC2 <internal_commands.ab2@917> INCLUDE "internal_commands.ab2"
00039FC4 <internal_commands.ab2@918> INCLUDE "internal_commands.ab2"
00039FC8 <internal_commands.ab2@919> INCLUDE "internal_commands.ab2"
00039FC9 <internal_commands.ab2@920> INCLUDE "internal_commands.ab2"
00039FCA <internal_commands.ab2@921> INCLUDE "internal_commands.ab2"
00039FCC <internal_commands.ab2@923> INCLUDE "internal_commands.ab2"
00039FD0 <internal_commands.ab2@924> INCLUDE "internal_commands.ab2"
00039FD2 <internal_commands.ab2@925> INCLUDE "internal_commands.ab2"
00039FD4 <internal_commands.ab2@926> INCLUDE "internal_commands.ab2"
00039FD8 <internal_commands.ab2@927> INCLUDE "internal_commands.ab2"
00039FDA <internal_commands.ab2@928> INCLUDE "internal_commands.ab2"
00039FDE <internal_commands.ab2@932> INCLUDE "internal_commands.ab2"
00039FE0 <internal_commands.ab2@933> INCLUDE "internal_commands.ab2"
00039FE5 <internal_commands.ab2@934> INCLUDE "internal_commands.ab2"
00039FE6 <internal_commands.ab2@935> INCLUDE "internal_commands.ab2"
00039FE8 <internal_commands.ab2@938> INCLUDE "internal_commands.ab2"
00039FEC <internal_commands.ab2@939> INCLUDE "internal_commands.ab2"
00039FEE <internal_commands.ab2@940> INCLUDE "internal_commands.ab2"
00039FF0 <internal_commands.ab2@941> INCLUDE "internal_commands.ab2"
00039FF4 <internal_commands.ab2@942> INCLUDE "internal_commands.ab2"
00039FF6 <internal_commands.ab2@943> INCLUDE "internal_commands.ab2"
00039FFA <internal_commands.ab2@947> INCLUDE "internal_commands.ab2"
00039FFC <internal_commands.ab2@948> INCLUDE "internal_commands.ab2"
0003A001 <internal_commands.ab2@949> INCLUDE "internal_commands.ab2"
0003A002 <internal_commands.ab2@950> INCLUDE "internal_commands.ab2"
0003A004 <internal_commands.ab2@953> INCLUDE "internal_commands.ab2"
0003A008 <internal_commands.ab2@954> INCLUDE "internal_commands.ab2"
0003A00A <internal_commands.ab2@955> INCLUDE "internal_commands.ab2"
0003A00C <internal_commands.ab2@956> INCLUDE "internal_commands.ab2"
0003A010 <internal_commands.ab2@957> INCLUDE "internal_commands.ab2"
0003A012 <internal_commands.ab2@958> INCLUDE "internal_commands.ab2"
0003A016 <internal_commands.ab2@962> INCLUDE "internal_commands.ab2"
0003A018 <internal_commands.ab2@963> INCLUDE "internal_commands.ab2"
0003A01D <internal_commands.ab2@964> INCLUDE "internal_commands.ab2"
0003A01E <internal_commands.ab2@965> INCLUDE "internal_commands.ab2"
0003A020 <internal_commands.ab2@968> INCLUDE "internal_commands.ab2"
0003A024 <internal_commands.ab2@969> INCLUDE "internal_commands.ab2"
0003A026 <internal_commands.ab2@970> INCLUDE "internal_commands.ab2"
0003A028 <internal_commands.ab2@971> INCLUDE "internal_commands.ab2"
0003A02C <internal_commands.ab2@972> INCLUDE "internal_commands.ab2"
0003A02E <internal_commands.ab2@973> INCLUDE "internal_commands.ab2"
0003A032 <internal_commands.ab2@977> INCLUDE "internal_commands.ab2"
0003A034 <internal_commands.ab2@978> INCLUDE "internal_commands.ab2"
0003A039 <internal_commands.ab2@979> INCLUDE "internal_commands.ab2"
0003A03A <internal_commands.ab2@980> INCLUDE "internal_commands.ab2"
0003A03C <internal_commands.ab2@983> INCLUDE "internal_commands.ab2"
0003A040 <internal_commands.ab2@984> INCLUDE "internal_commands.ab2"
0003A042 <internal_commands.ab2@985> INCLUDE "internal_commands.ab2"
0003A044 <internal_commands.ab2@986> INCLUDE "internal_commands.ab2"
0003A048 <internal_commands.ab2@987> INCLUDE "internal_commands.ab2"
0003A04A <internal_commands.ab2@988> INCLUDE "internal_commands.ab2"
0003A04E <internal_commands.ab2@992> INCLUDE "internal_commands.ab2"
0003A050 <internal_commands.ab2@993> INCLUDE "internal_commands.ab2"
0003A055 <internal_commands.ab2@994> INCLUDE "internal_commands.ab2"
0003A056 <internal_commands.ab2@995> INCLUDE "internal_commands.ab2"
0003A058 <internal_commands.ab2@998> INCLUDE "internal_commands.ab2"
0003A05C <internal_commands.ab2@999> INCLUDE "internal_commands.ab2"
0003A05E <internal_commands.ab2@1000> INCLUDE "internal_commands.ab2"
0003A060 <internal_commands.ab2@1001> INCLUDE "internal_commands.ab2"
0003A064 <internal_commands.ab2@1002> INCLUDE "internal_commands.ab2"
0003A066 <internal_commands.ab2@1003> INCLUDE "internal_commands.ab2"
0003A06A <internal_commands.ab2@1007> INCLUDE "internal_commands.ab2"
0003A06C <internal_commands.ab2@1008> INCLUDE "internal_commands.ab2"
0003A071 <internal_commands.ab2@1009> INCLUDE "internal_commands.ab2"
0003A072 <internal_commands.ab2@1010> INCLUDE "internal_commands.ab2"
0003A074 <internal_commands.ab2@1013> INCLUDE "internal_commands.ab2"
0003A078 <internal_commands.ab2@1014> INCLUDE "internal_commands.ab2"
0003A07A <internal_commands.ab2@1015> INCLUDE "internal_commands.ab2"
0003A07C <internal_commands.ab2@1016> INCLUDE "internal_commands.ab2"
0003A080 <internal_commands.ab2@1017> INCLUDE "internal_commands.ab2"
0003A082 <internal_commands.ab2@1018> INCLUDE "internal_commands.ab2"
0003A086 <internal_commands.ab2@1022> INCLUDE "internal_commands.ab2"
0003A088 <internal_commands.ab2@1023> INCLUDE "internal_commands.ab2"
0003A08D <internal_commands.ab2@1024> INCLUDE "internal_commands.ab2"
0003A08E <internal_commands.ab2@1025> INCLUDE "internal_commands.ab2"
0003A090 <internal_commands.ab2@1028> INCLUDE "internal_commands.ab2"
0003A094 <internal_commands.ab2@1029> INCLUDE "internal_commands.ab2"
0003A096 <internal_commands.ab2@1030> INCLUDE "internal_commands.ab2"
0003A098 <internal_commands.ab2@1031> INCLUDE "internal_commands.ab2"
0003A09C <internal_commands.ab2@1032> INCLUDE "internal_commands.ab2"
0003A09E <internal_commands.ab2@1033> INCLUDE "internal_commands.ab2"
0003A0A2 <internal_commands.ab2@1037> INCLUDE "internal_commands.ab2"
0003A0A4 <internal_commands.ab2@1038> INCLUDE "internal_commands.ab2"
0003A0A9 <internal_commands.ab2@1039> INCLUDE "internal_commands.ab2"
0003A0AA <internal_commands.ab2@1040> INCLUDE "internal_commands.ab2"
0003A0AC <internal_commands.ab2@1043> INCLUDE "internal_commands.ab2"
0003A0B0 <internal_commands.ab2@1044> INCLUDE "internal_commands.ab2"
0003A0B2 <internal_commands.ab2@1045> INCLUDE "internal_commands.ab2"
0003A0B4 <internal_commands.ab2@1046> INCLUDE "internal_commands.ab2"
0003A0B8 <internal_commands.ab2@1047> INCLUDE "internal_commands.ab2"
0003A0BA <internal_commands.ab2@1048> INCLUDE "internal_commands.ab2"
0003A0BE <internal_commands.ab2@1052> INCLUDE "internal_commands.ab2"
0003A0C0 <internal_commands.ab2@1053> INCLUDE "internal_commands.ab2"
0003A0C5 <internal_commands.ab2@1054> INCLUDE "internal_commands.ab2"
0003A0C6 <internal_commands.ab2@1055> INCLUDE "internal_commands.ab2"
0003A0C8 <internal_commands.ab2@1058> INCLUDE "internal_commands.ab2"
0003A0CC <internal_commands.ab2@1059> INCLUDE "internal_commands.ab2"
0003A0CE <internal_commands.ab2@1060> INCLUDE "internal_commands.ab2"
0003A0D0 <internal_commands.ab2@1061> INCLUDE "internal_commands.ab2"
0003A0D4 <internal_commands.ab2@1062> INCLUDE "internal_commands.ab2"
0003A0D6 <internal_commands.ab2@1063> INCLUDE "internal_commands.ab2"
0003A0DA <internal_commands.ab2@1067> INCLUDE "internal_commands.ab2"
0003A0DC <internal_commands.ab2@1068> INCLUDE "internal_commands.ab2"
0003A0E1 <internal_commands.ab2@1069> INCLUDE "internal_commands.ab2"
0003A0E2 <internal_commands.ab2@1070> INCLUDE "internal_commands.ab2"
0003A0E4 <internal_commands.ab2@1073> INCLUDE "internal_commands.ab2"
0003A0E8 <internal_commands.ab2@1074> INCLUDE "internal_commands.ab2"
0003A0EA <internal_commands.ab2@1075> INCLUDE "internal_commands.ab2"
0003A0EC <internal_commands.ab2@1076> INCLUDE "internal_commands.ab2"
0003A0F0 <internal_commands.ab2@1077> INCLUDE "internal_commands.ab2"
0003A0F2 <internal_commands.ab2@1078> INCLUDE "internal_commands.ab2"
0003A0F6 <internal_commands.ab2@1082> INCLUDE "internal_commands.ab2"
0003A0F8 <internal_commands.ab2@1083> INCLUDE "internal_commands.ab2"
0003A0FD <internal_commands.ab2@1084> INCLUDE "internal_commands.ab2"
0003A0FE <internal_commands.ab2@1085> INCLUDE "internal_commands.ab2"
0003A100 <internal_commands.ab2@1088> INCLUDE "internal_commands.ab2"
0003A104 <internal_commands.ab2@1089> INCLUDE "internal_commands.ab2"
0003A106 <internal_commands.ab2@1090> INCLUDE "internal_commands.ab2"
0003A108 <internal_commands.ab2@1091> INCLUDE "internal_commands.ab2"
0003A10C <internal_commands.ab2@1092> INCLUDE "internal_commands.ab2"
0003A10E <internal_commands.ab2@1093> INCLUDE "internal_commands.ab2"
0003A112 <internal_commands.ab2@1097> INCLUDE "internal_commands.ab2"
0003A114 <internal_commands.ab2@1098> INCLUDE "internal_commands.ab2"
0003A119 <internal_commands.ab2@1099> INCLUDE "internal_commands.ab2"
0003A11A <internal_commands.ab2@1100> INCLUDE "internal_commands.ab2"
0003A11C <internal_commands.ab2@1103> INCLUDE "internal_commands.ab2"
0003A120 <internal_commands.ab2@1104> INCLUDE "internal_commands.ab2"
0003A122 <internal_commands.ab2@1105> INCLUDE "internal_commands.ab2"
0003A124 <internal_commands.ab2@1106> INCLUDE "internal_commands.ab2"
0003A128 <internal_commands.ab2@1107> INCLUDE "internal_commands.ab2"
0003A12A <internal_commands.ab2@1108> INCLUDE "internal_commands.ab2"
0003A12E <internal_commands.ab2@1112> INCLUDE "internal_commands.ab2"
0003A130 <internal_commands.ab2@1113> INCLUDE "internal_commands.ab2"
0003A135 <internal_commands.ab2@1114> INCLUDE "internal_commands.ab2"
0003A136 <internal_commands.ab2@1115> INCLUDE "internal_commands.ab2"
0003A138 <internal_commands.ab2@1118> INCLUDE "internal_commands.ab2"
0003A13C <internal_commands.ab2@1119> INCLUDE "internal_commands.ab2"
0003A13E <internal_commands.ab2@1120> INCLUDE "internal_commands.ab2"
0003A140 <internal_commands.ab2@1121> INCLUDE "internal_commands.ab2"
0003A144 <internal_commands.ab2@1122> INCLUDE "internal_commands.ab2"
0003A146 <internal_commands.ab2@1123> INCLUDE "internal_commands.ab2"
0003A14A <internal_commands.ab2@1127> INCLUDE "internal_commands.ab2"
0003A14C <internal_commands.ab2@1128> INCLUDE "internal_commands.ab2"
0003A151 <internal_commands.ab2@1129> INCLUDE "internal_commands.ab2"
0003A152 <internal_commands.ab2@1130> INCLUDE "internal_commands.ab2"
0003A154 <internal_commands.ab2@1133> INCLUDE "internal_commands.ab2"
0003A158 <internal_commands.ab2@1134> INCLUDE "internal_commands.ab2"
0003A15A <internal_commands.ab2@1135> INCLUDE "internal_commands.ab2"
0003A15C <internal_commands.ab2@1136> INCLUDE "internal_commands.ab2"
0003A160 <internal_commands.ab2@1137> INCLUDE "internal_commands.ab2"
0003A162 <internal_commands.ab2@1138> INCLUDE "internal_commands.ab2"
0003A166 <internal_commands.ab2@1142> INCLUDE "internal_commands.ab2"
0003A168 <internal_commands.ab2@1143> INCLUDE "internal_commands.ab2"
0003A16D <internal_commands.ab2@1144> INCLUDE "internal_commands.ab2"
0003A16E <internal_commands.ab2@1145> INCLUDE "internal_commands.ab2"
0003A170 <internal_commands.ab2@1148> INCLUDE "internal_commands.ab2"
0003A174 <internal_commands.ab2@1149> INCLUDE "internal_commands.ab2"
0003A176 <internal_commands.ab2@1150> INCLUDE "internal_commands.ab2"
0003A178 <internal_commands.ab2@1151> INCLUDE "internal_commands.ab2"
0003A17C <internal_commands.ab2@1152> INCLUDE "internal_commands.ab2"
0003A17E <internal_commands.ab2@1153> INCLUDE "internal_commands.ab2"
0003A182 <internal_commands.ab2@1157> INCLUDE "internal_commands.ab2"
0003A184 <internal_commands.ab2@1158> INCLUDE "internal_commands.ab2"
0003A189 <internal_commands.ab2@1159> INCLUDE "internal_commands.ab2"
0003A18A <internal_commands.ab2@1160> INCLUDE "internal_commands.ab2"
0003A18C <internal_commands.ab2@1163> INCLUDE "internal_commands.ab2"
0003A190 <internal_commands.ab2@1164> INCLUDE "internal_commands.ab2"
0003A192 <internal_commands.ab2@1165> INCLUDE "internal_commands.ab2"
0003A194 <internal_commands.ab2@1166> INCLUDE "internal_commands.ab2"
0003A198 <internal_commands.ab2@1167> INCLUDE "internal_commands.ab2"
0003A19A <internal_commands.ab2@1168> INCLUDE "internal_commands.ab2"
0003A19E <internal_commands.ab2@1172> INCLUDE "internal_commands.ab2"
0003A1A0 <internal_commands.ab2@1173> INCLUDE "internal_commands.ab2"
0003A1A5 <internal_commands.ab2@1174> INCLUDE "internal_commands.ab2"
0003A1A6 <internal_commands.ab2@1175> INCLUDE "internal_commands.ab2"
0003A1A8 <internal_commands.ab2@1178> INCLUDE "internal_commands.ab2"
0003A1AC <internal_commands.ab2@1179> INCLUDE "internal_commands.ab2"
0003A1AE <internal_commands.ab2@1180> INCLUDE "internal_commands.ab2"
0003A1B0 <internal_commands.ab2@1181> INCLUDE "internal_commands.ab2"
0003A1B4 <internal_commands.ab2@1182> INCLUDE "internal_commands.ab2"
0003A1B6 <internal_commands.ab2@1183> INCLUDE "internal_commands.ab2"
0003A1BA <internal_commands.ab2@1186> INCLUDE "internal_commands.ab2"
0003A1BC <internal_commands.ab2@1187> INCLUDE "internal_commands.ab2"
0003A1C0 <internal_commands.ab2@1188> INCLUDE "internal_commands.ab2"
0003A1C1 <internal_commands.ab2@1189> INCLUDE "internal_commands.ab2"
0003A1C2 <internal_commands.ab2@1190> INCLUDE "internal_commands.ab2"
0003A1C4 <internal_commands.ab2@1192> INCLUDE "internal_commands.ab2"
0003A1C8 <internal_commands.ab2@1193> INCLUDE "internal_commands.ab2"
0003A1CA <internal_commands.ab2@1194> INCLUDE "internal_commands.ab2"
0003A1CC <internal_commands.ab2@1195> INCLUDE "internal_commands.ab2"
0003A1D0 <internal_commands.ab2@1196> INCLUDE "internal_commands.ab2"
0003A1D2 <internal_commands.ab2@1197> INCLUDE "internal_commands.ab2"
0003A1D6 <internal_commands.ab2@1201> INCLUDE "internal_commands.ab2"
0003A1D8 <internal_commands.ab2@1202> INCLUDE "internal_commands.ab2"
0003A1DD <internal_commands.ab2@1203> INCLUDE "internal_commands.ab2"
0003A1DE <internal_commands.ab2@1204> INCLUDE "internal_commands.ab2"
0003A1E0 <internal_commands.ab2@1207> INCLUDE "internal_commands.ab2"
0003A1E4 <internal_commands.ab2@1208> INCLUDE "internal_commands.ab2"
0003A1E6 <internal_commands.ab2@1209> INCLUDE "internal_commands.ab2"
0003A1E8 <internal_commands.ab2@1210> INCLUDE "internal_commands.ab2"
0003A1EC <internal_commands.ab2@1211> INCLUDE "internal_commands.ab2"
0003A1EE <internal_commands.ab2@1212> INCLUDE "internal_commands.ab2"
0003A1F2 <internal_commands.ab2@1216> INCLUDE "internal_commands.ab2"
0003A1F4 <internal_commands.ab2@1217> INCLUDE "internal_commands.ab2"
0003A1F8 <internal_commands.ab2@1218> INCLUDE "internal_commands.ab2"
0003A1F9 <internal_commands.ab2@1219> INCLUDE "internal_commands.ab2"
0003A1FA <internal_commands.ab2@1220> INCLUDE "internal_commands.ab2"
0003A1FC <internal_commands.ab2@1222> INCLUDE "internal_commands.ab2"
0003A200 <internal_commands.ab2@1223> INCLUDE "internal_commands.ab2"
0003A202 <internal_commands.ab2@1224> INCLUDE "internal_commands.ab2"
0003A204 <internal_commands.ab2@1225> INCLUDE "internal_commands.ab2"
0003A208 <internal_commands.ab2@1226> INCLUDE "internal_commands.ab2"
0003A20A <internal_commands.ab2@1227> INCLUDE "internal_commands.ab2"
0003A20E <internal_commands.ab2@1231> INCLUDE "internal_commands.ab2"
0003A210 <internal_commands.ab2@1232> INCLUDE "internal_commands.ab2"
0003A215 <internal_commands.ab2@1233> INCLUDE "internal_commands.ab2"
0003A216 <internal_commands.ab2@1234> INCLUDE "internal_commands.ab2"
0003A218 <internal_commands.ab2@1237> INCLUDE "internal_commands.ab2"
0003A21C <internal_commands.ab2@1238> INCLUDE "internal_commands.ab2"
0003A21E <internal_commands.ab2@1239> INCLUDE "internal_commands.ab2"
0003A220 <internal_commands.ab2@1240> INCLUDE "internal_commands.ab2"
0003A224 <internal_commands.ab2@1241> INCLUDE "internal_commands.ab2"
0003A226 <internal_commands.ab2@1242> INCLUDE "internal_commands.ab2"
0003A22A <internal_commands.ab2@1246> INCLUDE "internal_commands.ab2"
0003A22C <internal_commands.ab2@1247> INCLUDE "internal_commands.ab2"
0003A231 <internal_commands.ab2@1248> INCLUDE "internal_commands.ab2"
0003A232 <internal_commands.ab2@1249> INCLUDE "internal_commands.ab2"
0003A234 <internal_commands.ab2@1252> INCLUDE "internal_commands.ab2"
0003A238 <internal_commands.ab2@1253> INCLUDE "internal_commands.ab2"
0003A23A <internal_commands.ab2@1254> INCLUDE "internal_commands.ab2"
0003A23C <internal_commands.ab2@1255> INCLUDE "internal_commands.ab2"
0003A240 <internal_commands.ab2@1256> INCLUDE "internal_commands.ab2"
0003A242 <internal_commands.ab2@1257> INCLUDE "internal_commands.ab2"
0003A246 <internal_commands.ab2@1261> INCLUDE "internal_commands.ab2"
0003A248 <internal_commands.ab2@1262> INCLUDE "internal_commands.ab2"
0003A24C <internal_commands.ab2@1263> INCLUDE "internal_commands.ab2"
0003A24D <internal_commands.ab2@1264> INCLUDE "internal_commands.ab2"
0003A24E <internal_commands.ab2@1265> INCLUDE "internal_commands.ab2"
0003A250 <internal_commands.ab2@1267> INCLUDE "internal_commands.ab2"
0003A254 <internal_commands.ab2@1268> INCLUDE "internal_commands.ab2"
0003A256 <internal_commands.ab2@1269> INCLUDE "internal_commands.ab2"
0003A258 <internal_commands.ab2@1270> INCLUDE "internal_commands.ab2"
0003A25C <internal_commands.ab2@1271> INCLUDE "internal_commands.ab2"
0003A25E <internal_commands.ab2@1272> INCLUDE "internal_commands.ab2"
0003A262 <internal_commands.ab2@1276> INCLUDE "internal_commands.ab2"
0003A264 <internal_commands.ab2@1277> INCLUDE "internal_commands.ab2"
0003A269 <internal_commands.ab2@1278> INCLUDE "internal_commands.ab2"
0003A26A <internal_commands.ab2@1279> INCLUDE "internal_commands.ab2"
0003A26C <internal_commands.ab2@1282> INCLUDE "internal_commands.ab2"
0003A270 <internal_commands.ab2@1283> INCLUDE "internal_commands.ab2"
0003A272 <internal_commands.ab2@1284> INCLUDE "internal_commands.ab2"
0003A274 <internal_commands.ab2@1285> INCLUDE "internal_commands.ab2"
0003A278 <internal_commands.ab2@1286> INCLUDE "internal_commands.ab2"
0003A27A <internal_commands.ab2@1287> INCLUDE "internal_commands.ab2"
0003A27E <internal_commands.ab2@1291> INCLUDE "internal_commands.ab2"
0003A280 <internal_commands.ab2@1292> INCLUDE "internal_commands.ab2"
0003A284 <internal_commands.ab2@1293> INCLUDE "internal_commands.ab2"
0003A285 <internal_commands.ab2@1294> INCLUDE "internal_commands.ab2"
0003A286 <internal_commands.ab2@1295> INCLUDE "internal_commands.ab2"
0003A288 <internal_commands.ab2@1297> INCLUDE "internal_commands.ab2"
0003A28C <internal_commands.ab2@1298> INCLUDE "internal_commands.ab2"
0003A28E <internal_commands.ab2@1299> INCLUDE "internal_commands.ab2"
0003A290 <internal_commands.ab2@1300> INCLUDE "internal_commands.ab2"
0003A294 <internal_commands.ab2@1301> INCLUDE "internal_commands.ab2"
0003A296 <internal_commands.ab2@1302> INCLUDE "internal_commands.ab2"
0003A29A <internal_commands.ab2@1306> INCLUDE "internal_commands.ab2"
0003A29C <internal_commands.ab2@1307> INCLUDE "internal_commands.ab2"
0003A2A0 <internal_commands.ab2@1308> INCLUDE "internal_commands.ab2"
0003A2A1 <internal_commands.ab2@1309> INCLUDE "internal_commands.ab2"
0003A2A2 <internal_commands.ab2@1310> INCLUDE "internal_commands.ab2"
0003A2A4 <internal_commands.ab2@1312> INCLUDE "internal_commands.ab2"
0003A2A8 <internal_commands.ab2@1313> INCLUDE "internal_commands.ab2"
0003A2AA <internal_commands.ab2@1314> INCLUDE "internal_commands.ab2"
0003A2AC <internal_commands.ab2@1315> INCLUDE "internal_commands.ab2"
0003A2B0 <internal_commands.ab2@1316> INCLUDE "internal_commands.ab2"
0003A2B2 <internal_commands.ab2@1317> INCLUDE "internal_commands.ab2"
0003A2B6 <internal_commands.ab2@1321> INCLUDE "internal_commands.ab2"
0003A2B8 <internal_commands.ab2@1322> INCLUDE "internal_commands.ab2"
0003A2C0 <internal_commands.ab2@1323> INCLUDE "internal_commands.ab2"
0003A2C1 <internal_commands.ab2@1324> INCLUDE "internal_commands.ab2"
0003A2C2 <internal_commands.ab2@1325> INCLUDE "internal_commands.ab2"
0003A2C4 <internal_commands.ab2@1327> INCLUDE "internal_commands.ab2"
0003A2C8 <internal_commands.ab2@1328> INCLUDE "internal_commands.ab2"
0003A2CA <internal_commands.ab2@1329> INCLUDE "internal_commands.ab2"
0003A2CC <internal_commands.ab2@1330> INCLUDE "internal_commands.ab2"
0003A2D0 <internal_commands.ab2@1331> INCLUDE "internal_commands.ab2"
0003A2D2 <internal_commands.ab2@1332> INCLUDE "internal_commands.ab2"
0003A2D6 <internal_commands.ab2@1336> INCLUDE "internal_commands.ab2"
0003A2D8 <internal_commands.ab2@1337> INCLUDE "internal_commands.ab2"
0003A2DC <internal_commands.ab2@1338> INCLUDE "internal_commands.ab2"
0003A2DD <internal_commands.ab2@1339> INCLUDE "internal_commands.ab2"
0003A2DE <internal_commands.ab2@1340> INCLUDE "internal_commands.ab2"
0003A2E0 <internal_commands.ab2@1342> INCLUDE "internal_commands.ab2"
0003A2E4 <internal_commands.ab2@1343> INCLUDE "internal_commands.ab2"
0003A2E6 <internal_commands.ab2@1344> INCLUDE "internal_commands.ab2"
0003A2E8 <internal_commands.ab2@1345> INCLUDE "internal_commands.ab2"
0003A2EC <internal_commands.ab2@1346> INCLUDE "internal_commands.ab2"
0003A2EE <internal_commands.ab2@1347> INCLUDE "internal_commands.ab2"
0003A2F2 <internal_commands.ab2@1351> INCLUDE "internal_commands.ab2"
0003A2F4 <internal_commands.ab2@1352> INCLUDE "internal_commands.ab2"
0003A2F8 <internal_commands.ab2@1353> INCLUDE "internal_commands.ab2"
0003A2F9 <internal_commands.ab2@1354> INCLUDE "internal_commands.ab2"
0003A2FA <internal_commands.ab2@1355> INCLUDE "internal_commands.ab2"
0003A2FC <internal_commands.ab2@1357> INCLUDE "internal_commands.ab2"
0003A300 <internal_commands.ab2@1358> INCLUDE "internal_commands.ab2"
0003A302 <internal_commands.ab2@1359> INCLUDE "internal_commands.ab2"
0003A304 <internal_commands.ab2@1360> INCLUDE "internal_commands.ab2"
0003A308 <internal_commands.ab2@1361> INCLUDE "internal_commands.ab2"
0003A30A <internal_commands.ab2@1362> INCLUDE "internal_commands.ab2"
0003A30E <internal_commands.ab2@1366> INCLUDE "internal_commands.ab2"
0003A310 <internal_commands.ab2@1367> INCLUDE "internal_commands.ab2"
0003A314 <internal_commands.ab2@1368> INCLUDE "internal_commands.ab2"
0003A315 <internal_commands.ab2@1369> INCLUDE "internal_commands.ab2"
0003A316 <internal_commands.ab2@1370> INCLUDE "internal_commands.ab2"
0003A318 <internal_commands.ab2@1372> INCLUDE "internal_commands.ab2"
0003A31C <internal_commands.ab2@1373> INCLUDE "internal_commands.ab2"
0003A31E <internal_commands.ab2@1374> INCLUDE "internal_commands.ab2"
0003A320 <internal_commands.ab2@1375> INCLUDE "internal_commands.ab2"
0003A324 <internal_commands.ab2@1376> INCLUDE "internal_commands.ab2"
0003A326 <internal_commands.ab2@1377> INCLUDE "internal_commands.ab2"
0003A32A <internal_commands.ab2@1381> INCLUDE "internal_commands.ab2"
0003A32C <internal_commands.ab2@1382> INCLUDE "internal_commands.ab2"
0003A331 <internal_commands.ab2@1383> INCLUDE "internal_commands.ab2"
0003A332 <internal_commands.ab2@1384> INCLUDE "internal_commands.ab2"
0003A334 <internal_commands.ab2@1387> INCLUDE "internal_commands.ab2"
0003A338 <internal_commands.ab2@1388> INCLUDE "internal_commands.ab2"
0003A33A <internal_commands.ab2@1389> INCLUDE "internal_commands.ab2"
0003A33C <internal_commands.ab2@1390> INCLUDE "internal_commands.ab2"
0003A340 <internal_commands.ab2@1391> INCLUDE "internal_commands.ab2"
0003A342 <internal_commands.ab2@1392> INCLUDE "internal_commands.ab2"
0003A346 <internal_commands.ab2@1396> INCLUDE "internal_commands.ab2"
0003A348 <internal_commands.ab2@1397> INCLUDE "internal_commands.ab2"
0003A34C <internal_commands.ab2@1398> INCLUDE "internal_commands.ab2"
0003A34D <internal_commands.ab2@1399> INCLUDE "internal_commands.ab2"
0003A34E <internal_commands.ab2@1400> INCLUDE "internal_commands.ab2"
0003A350 <internal_commands.ab2@1402> INCLUDE "internal_commands.ab2"
0003A354 <internal_commands.ab2@1403> INCLUDE "internal_commands.ab2"
0003A356 <internal_commands.ab2@1404> INCLUDE "internal_commands.ab2"
0003A358 <internal_commands.ab2@1405> INCLUDE "internal_commands.ab2"
0003A35C <internal_commands.ab2@1406> INCLUDE "internal_commands.ab2"
0003A35E <internal_commands.ab2@1407> INCLUDE "internal_commands.ab2"
0003A362 <internal_commands.ab2@1411> INCLUDE "internal_commands.ab2"
0003A364 <internal_commands.ab2@1412> INCLUDE "internal_commands.ab2"
0003A368 <internal_commands.ab2@1413> INCLUDE "internal_commands.ab2"
0003A369 <internal_commands.ab2@1414> INCLUDE "internal_commands.ab2"
0003A36A <internal_commands.ab2@1415> INCLUDE "internal_commands.ab2"
0003A36C <internal_commands.ab2@1417> INCLUDE "internal_commands.ab2"
0003A370 <internal_commands.ab2@1418> INCLUDE "internal_commands.ab2"
0003A372 <internal_commands.ab2@1419> INCLUDE "internal_commands.ab2"
0003A374 <internal_commands.ab2@1420> INCLUDE "internal_commands.ab2"
0003A378 <internal_commands.ab2@1421> INCLUDE "internal_commands.ab2"
0003A37A <internal_commands.ab2@1422> INCLUDE "internal_commands.ab2"
0003A37E <internal_commands.ab2@1426> INCLUDE "internal_commands.ab2"
0003A380 <internal_commands.ab2@1427> INCLUDE "internal_commands.ab2"
0003A385 <internal_commands.ab2@1428> INCLUDE "internal_commands.ab2"
0003A386 <internal_commands.ab2@1429> INCLUDE "internal_commands.ab2"
0003A388 <internal_commands.ab2@1432> INCLUDE "internal_commands.ab2"
0003A38C <internal_commands.ab2@1433> INCLUDE "internal_commands.ab2"
0003A38E <internal_commands.ab2@1434> INCLUDE "internal_commands.ab2"
0003A390 <internal_commands.ab2@1435> INCLUDE "internal_commands.ab2"
0003A394 <internal_commands.ab2@1436> INCLUDE "internal_commands.ab2"
0003A396 <internal_commands.ab2@1437> INCLUDE "internal_commands.ab2"
0003A39A <internal_commands.ab2@1441> INCLUDE "internal_commands.ab2"
0003A39C <internal_commands.ab2@1442> INCLUDE "internal_commands.ab2"
0003A3A1 <internal_commands.ab2@1443> INCLUDE "internal_commands.ab2"
0003A3A2 <internal_commands.ab2@1444> INCLUDE "internal_commands.ab2"
0003A3A4 <internal_commands.ab2@1447> INCLUDE "internal_commands.ab2"
0003A3A8 <internal_commands.ab2@1448> INCLUDE "internal_commands.ab2"
0003A3AA <internal_commands.ab2@1449> INCLUDE "internal_commands.ab2"
0003A3AC <internal_commands.ab2@1450> INCLUDE "internal_commands.ab2"
0003A3B0 <internal_commands.ab2@1451> INCLUDE "internal_commands.ab2"
0003A3B2 <internal_commands.ab2@1452> INCLUDE "internal_commands.ab2"
0003A3B6 <internal_commands.ab2@1457> INCLUDE "internal_commands.ab2"
0003A3B8 <internal_commands.ab2@1458> INCLUDE "internal_commands.ab2"
0003A3BE <internal_commands.ab2@1459> INCLUDE "internal_commands.ab2"
0003A3BF <internal_commands.ab2@1460> INCLUDE "internal_commands.ab2"
0003A3C0 <internal_commands.ab2@1461> INCLUDE "internal_commands.ab2"
0003A3C2 <internal_commands.ab2@1463> INCLUDE "internal_commands.ab2"
0003A3C6 <internal_commands.ab2@1464> INCLUDE "internal_commands.ab2"
0003A3C8 <internal_commands.ab2@1465> INCLUDE "internal_commands.ab2"
0003A3CA <internal_commands.ab2@1466> INCLUDE "internal_commands.ab2"
0003A3CE <internal_commands.ab2@1467> INCLUDE "internal_commands.ab2"
0003A3D0 <internal_commands.ab2@1468> INCLUDE "internal_commands.ab2"
0003A3D4 <internal_commands.ab2@1472> INCLUDE "internal_commands.ab2"
0003A3D6 <internal_commands.ab2@1473> INCLUDE "internal_commands.ab2"
0003A3DC <internal_commands.ab2@1474> INCLUDE "internal_commands.ab2"
0003A3DD <internal_commands.ab2@1475> INCLUDE "internal_commands.ab2"
0003A3DE <internal_commands.ab2@1476> INCLUDE "internal_commands.ab2"
0003A3E0 <internal_commands.ab2@1478> INCLUDE "internal_commands.ab2"
0003A3E4 <internal_commands.ab2@1479> INCLUDE "internal_commands.ab2"
0003A3E6 <internal_commands.ab2@1480> INCLUDE "internal_commands.ab2"
0003A3E8 <internal_commands.ab2@1481> INCLUDE "internal_commands.ab2"
0003A3EC <internal_commands.ab2@1482> INCLUDE "internal_commands.ab2"
0003A3EE <internal_commands.ab2@1483> INCLUDE "internal_commands.ab2"
0003A3F2 <internal_commands.ab2@1487> INCLUDE "internal_commands.ab2"
0003A3F4 <internal_commands.ab2@1488> INCLUDE "internal_commands.ab2"
0003A3FA <internal_commands.ab2@1489> INCLUDE "internal_commands.ab2"
0003A3FB <internal_commands.ab2@1490> INCLUDE "internal_commands.ab2"
0003A3FC <internal_commands.ab2@1491> INCLUDE "internal_commands.ab2"
0003A3FE <internal_commands.ab2@1493> INCLUDE "internal_commands.ab2"
0003A402 <internal_commands.ab2@1494> INCLUDE "internal_commands.ab2"
0003A404 <internal_commands.ab2@1495> INCLUDE "internal_commands.ab2"
0003A406 <internal_commands.ab2@1496> INCLUDE "internal_commands.ab2"
0003A40A <internal_commands.ab2@1497> INCLUDE "internal_commands.ab2"
0003A40C <internal_commands.ab2@1498> INCLUDE "internal_commands.ab2"
0003A410 <internal_commands.ab2@1502> INCLUDE "internal_commands.ab2"
0003A412 <internal_commands.ab2@1503> INCLUDE "internal_commands.ab2"
0003A417 <internal_commands.ab2@1504> INCLUDE "internal_commands.ab2"
0003A418 <internal_commands.ab2@1505> INCLUDE "internal_commands.ab2"
0003A41A <internal_commands.ab2@1508> INCLUDE "internal_commands.ab2"
0003A41E <internal_commands.ab2@1509> INCLUDE "internal_commands.ab2"
0003A420 <internal_commands.ab2@1510> INCLUDE "internal_commands.ab2"
0003A422 <internal_commands.ab2@1511> INCLUDE "internal_commands.ab2"
0003A426 <internal_commands.ab2@1512> INCLUDE "internal_commands.ab2"
0003A428 <internal_commands.ab2@1513> INCLUDE "internal_commands.ab2"
0003A42C <internal_commands.ab2@1517> INCLUDE "internal_commands.ab2"
0003A42E <internal_commands.ab2@1518> INCLUDE "internal_commands.ab2"
0003A433 <internal_commands.ab2@1519> INCLUDE "internal_commands.ab2"
0003A434 <internal_commands.ab2@1520> INCLUDE "internal_commands.ab2"
0003A436 <internal_commands.ab2@1523> INCLUDE "internal_commands.ab2"
0003A43A <internal_commands.ab2@1524> INCLUDE "internal_commands.ab2"
0003A43C <internal_commands.ab2@1525> INCLUDE "internal_commands.ab2"
0003A43E <internal_commands.ab2@1526> INCLUDE "internal_commands.ab2"
0003A442 <internal_commands.ab2@1527> INCLUDE "internal_commands.ab2"
0003A444 <internal_commands.ab2@1528> INCLUDE "internal_commands.ab2"
0003A448 <internal_commands.ab2@1532> INCLUDE "internal_commands.ab2"
0003A44A <internal_commands.ab2@1533> INCLUDE "internal_commands.ab2"
0003A44F <internal_commands.ab2@1534> INCLUDE "internal_commands.ab2"
0003A450 <internal_commands.ab2@1535> INCLUDE "internal_commands.ab2"
0003A452 <internal_commands.ab2@1538> INCLUDE "internal_commands.ab2"
0003A456 <internal_commands.ab2@1539> INCLUDE "internal_commands.ab2"
0003A458 <internal_commands.ab2@1540> INCLUDE "internal_commands.ab2"
0003A45A <internal_commands.ab2@1541> INCLUDE "internal_commands.ab2"
0003A45E <internal_commands.ab2@1542> INCLUDE "internal_commands.ab2"
0003A460 <internal_commands.ab2@1543> INCLUDE "internal_commands.ab2"
0003A464 <internal_commands.ab2@1547> INCLUDE "internal_commands.ab2"
0003A466 <internal_commands.ab2@1548> INCLUDE "internal_commands.ab2"
0003A46A <internal_commands.ab2@1549> INCLUDE "internal_commands.ab2"
0003A46B <internal_commands.ab2@1550> INCLUDE "internal_commands.ab2"
0003A46C <internal_commands.ab2@1551> INCLUDE "internal_commands.ab2"
0003A46E <internal_commands.ab2@1553> INCLUDE "internal_commands.ab2"
0003A472 <internal_commands.ab2@1554> INCLUDE "internal_commands.ab2"
0003A474 <internal_commands.ab2@1555> INCLUDE "internal_commands.ab2"
0003A476 <internal_commands.ab2@1556> INCLUDE "internal_commands.ab2"
0003A47A <internal_commands.ab2@1557> INCLUDE "internal_commands.ab2"
0003A47C <internal_commands.ab2@1558> INCLUDE "internal_commands.ab2"
0003A480 <internal_commands.ab2@1562> INCLUDE "internal_commands.ab2"
0003A482 <internal_commands.ab2@1563> INCLUDE "internal_commands.ab2"
0003A487 <internal_commands.ab2@1564> INCLUDE "internal_commands.ab2"
0003A488 <internal_commands.ab2@1565> INCLUDE "internal_commands.ab2"
0003A48A <internal_commands.ab2@1568> INCLUDE "internal_commands.ab2"
0003A48E <internal_commands.ab2@1569> INCLUDE "internal_commands.ab2"
0003A490 <internal_commands.ab2@1570> INCLUDE "internal_commands.ab2"
0003A492 <internal_commands.ab2@1571> INCLUDE "internal_commands.ab2"
0003A496 <internal_commands.ab2@1572> INCLUDE "internal_commands.ab2"
0003A498 <internal_commands.ab2@1573> INCLUDE "internal_commands.ab2"
0003A49C <internal_commands.ab2@1577> INCLUDE "internal_commands.ab2"
0003A49E <internal_commands.ab2@1578> INCLUDE "internal_commands.ab2"
0003A4A2 <internal_commands.ab2@1579> INCLUDE "internal_commands.ab2"
0003A4A3 <internal_commands.ab2@1580> INCLUDE "internal_commands.ab2"
0003A4A4 <internal_commands.ab2@1581> INCLUDE "internal_commands.ab2"
0003A4A6 <internal_commands.ab2@1583> INCLUDE "internal_commands.ab2"
0003A4AA <internal_commands.ab2@1584> INCLUDE "internal_commands.ab2"
0003A4AC <internal_commands.ab2@1585> INCLUDE "internal_commands.ab2"
0003A4AE <internal_commands.ab2@1586> INCLUDE "internal_commands.ab2"
0003A4B2 <internal_commands.ab2@1587> INCLUDE "internal_commands.ab2"
0003A4B4 <internal_commands.ab2@1588> INCLUDE "internal_commands.ab2"
0003A4B8 <internal_commands.ab2@1592> INCLUDE "internal_commands.ab2"
0003A4BA <internal_commands.ab2@1593> INCLUDE "internal_commands.ab2"
0003A4BE <internal_commands.ab2@1594> INCLUDE "internal_commands.ab2"
0003A4BF <internal_commands.ab2@1595> INCLUDE "internal_commands.ab2"
0003A4C0 <internal_commands.ab2@1596> INCLUDE "internal_commands.ab2"
0003A4C2 <internal_commands.ab2@1598> INCLUDE "internal_commands.ab2"
0003A4C6 <internal_commands.ab2@1599> INCLUDE "internal_commands.ab2"
0003A4C8 <internal_commands.ab2@1600> INCLUDE "internal_commands.ab2"
0003A4CA <internal_commands.ab2@1601> INCLUDE "internal_commands.ab2"
0003A4CE <internal_commands.ab2@1602> INCLUDE "internal_commands.ab2"
0003A4D0 <internal_commands.ab2@1603> INCLUDE "internal_commands.ab2"
0003A4D4 <internal_commands.ab2@1607> INCLUDE "internal_commands.ab2"
0003A4D6 <internal_commands.ab2@1608> INCLUDE "internal_commands.ab2"
0003A4D9 <internal_commands.ab2@1609> INCLUDE "internal_commands.ab2"
0003A4DA <internal_commands.ab2@1610> INCLUDE "internal_commands.ab2"
0003A4DC <internal_commands.ab2@1613> INCLUDE "internal_commands.ab2"
0003A4E0 <internal_commands.ab2@1614> INCLUDE "internal_commands.ab2"
0003A4E2 <internal_commands.ab2@1615> INCLUDE "internal_commands.ab2"
0003A4E4 <internal_commands.ab2@1616> INCLUDE "internal_commands.ab2"
0003A4E8 <internal_commands.ab2@1617> INCLUDE "internal_commands.ab2"
0003A4EA <internal_commands.ab2@1618> INCLUDE "internal_commands.ab2"
0003A4EE <internal_commands.ab2@1622> INCLUDE "internal_commands.ab2"
0003A4F0 <internal_commands.ab2@1623> INCLUDE "internal_commands.ab2"
0003A4F4 <internal_commands.ab2@1624> INCLUDE "internal_commands.ab2"
0003A4F5 <internal_commands.ab2@1625> INCLUDE "internal_commands.ab2"
0003A4F6 <internal_commands.ab2@1626> INCLUDE "internal_commands.ab2"
0003A4F8 <internal_commands.ab2@1628> INCLUDE "internal_commands.ab2"
0003A4FC <internal_commands.ab2@1629> INCLUDE "internal_commands.ab2"
0003A4FE <internal_commands.ab2@1630> INCLUDE "internal_commands.ab2"
0003A500 <internal_commands.ab2@1631> INCLUDE "internal_commands.ab2"
0003A504 <internal_commands.ab2@1632> INCLUDE "internal_commands.ab2"
0003A506 <internal_commands.ab2@1633> INCLUDE "internal_commands.ab2"
0003A50A <internal_commands.ab2@1637> INCLUDE "internal_commands.ab2"
0003A50C <internal_commands.ab2@1638> INCLUDE "internal_commands.ab2"
0003A510 <internal_commands.ab2@1639> INCLUDE "internal_commands.ab2"
0003A511 <internal_commands.ab2@1640> INCLUDE "internal_commands.ab2"
0003A512 <internal_commands.ab2@1641> INCLUDE "internal_commands.ab2"
0003A514 <internal_commands.ab2@1643> INCLUDE "internal_commands.ab2"
0003A518 <internal_commands.ab2@1644> INCLUDE "internal_commands.ab2"
0003A51A <internal_commands.ab2@1645> INCLUDE "internal_commands.ab2"
0003A51C <internal_commands.ab2@1646> INCLUDE "internal_commands.ab2"
0003A520 <internal_commands.ab2@1647> INCLUDE "internal_commands.ab2"
0003A522 <internal_commands.ab2@1648> INCLUDE "internal_commands.ab2"
0003A526 <internal_commands.ab2@1652> INCLUDE "internal_commands.ab2"
0003A528 <internal_commands.ab2@1653> INCLUDE "internal_commands.ab2"
0003A52E <internal_commands.ab2@1654> INCLUDE "internal_commands.ab2"
0003A52F <internal_commands.ab2@1655> INCLUDE "internal_commands.ab2"
0003A530 <internal_commands.ab2@1656> INCLUDE "internal_commands.ab2"
0003A532 <internal_commands.ab2@1658> INCLUDE "internal_commands.ab2"
0003A536 <internal_commands.ab2@1659> INCLUDE "internal_commands.ab2"
0003A538 <internal_commands.ab2@1660> INCLUDE "internal_commands.ab2"
0003A53A <internal_commands.ab2@1661> INCLUDE "internal_commands.ab2"
0003A53E <internal_commands.ab2@1662> INCLUDE "internal_commands.ab2"
0003A540 <internal_commands.ab2@1663> INCLUDE "internal_commands.ab2"
0003A544 <internal_commands.ab2@1667> INCLUDE "internal_commands.ab2"
0003A546 <internal_commands.ab2@1668> INCLUDE "internal_commands.ab2"
0003A54A <internal_commands.ab2@1669> INCLUDE "internal_commands.ab2"
0003A54B <internal_commands.ab2@1670> INCLUDE "internal_commands.ab2"
0003A54C <internal_commands.ab2@1671> INCLUDE "internal_commands.ab2"
0003A54E <internal_commands.ab2@1673> INCLUDE "internal_commands.ab2"
0003A552 <internal_commands.ab2@1674> INCLUDE "internal_commands.ab2"
0003A554 <internal_commands.ab2@1675> INCLUDE "internal_commands.ab2"
0003A556 <internal_commands.ab2@1676> INCLUDE "internal_commands.ab2"
0003A55A <internal_commands.ab2@1677> INCLUDE "internal_commands.ab2"
0003A55C <internal_commands.ab2@1678> INCLUDE "internal_commands.ab2"
0003A560 <internal_commands.ab2@1682> INCLUDE "internal_commands.ab2"
0003A562 <internal_commands.ab2@1683> INCLUDE "internal_commands.ab2"
0003A566 <internal_commands.ab2@1684> INCLUDE "internal_commands.ab2"
0003A567 <internal_commands.ab2@1685> INCLUDE "internal_commands.ab2"
0003A568 <internal_commands.ab2@1686> INCLUDE "internal_commands.ab2"
0003A56A <internal_commands.ab2@1688> INCLUDE "internal_commands.ab2"
0003A56E <internal_commands.ab2@1689> INCLUDE "internal_commands.ab2"
0003A570 <internal_commands.ab2@1690> INCLUDE "internal_commands.ab2"
0003A572 <internal_commands.ab2@1691> INCLUDE "internal_commands.ab2"
0003A576 <internal_commands.ab2@1692> INCLUDE "internal_commands.ab2"
0003A578 <internal_commands.ab2@1693> INCLUDE "internal_commands.ab2"
0003A57C <internal_commands.ab2@1697> INCLUDE "internal_commands.ab2"
0003A57E <internal_commands.ab2@1698> INCLUDE "internal_commands.ab2"
0003A583 <internal_commands.ab2@1699> INCLUDE "internal_commands.ab2"
0003A584 <internal_commands.ab2@1700> INCLUDE "internal_commands.ab2"
0003A586 <internal_commands.ab2@1703> INCLUDE "internal_commands.ab2"
0003A58A <internal_commands.ab2@1704> INCLUDE "internal_commands.ab2"
0003A58C <internal_commands.ab2@1705> INCLUDE "internal_commands.ab2"
0003A58E <internal_commands.ab2@1706> INCLUDE "internal_commands.ab2"
0003A592 <internal_commands.ab2@1707> INCLUDE "internal_commands.ab2"
0003A594 <internal_commands.ab2@1708> INCLUDE "internal_commands.ab2"
0003A598 <internal_commands.ab2@1712> INCLUDE "internal_commands.ab2"
0003A59A <internal_commands.ab2@1713> INCLUDE "internal_commands.ab2"
0003A59F <internal_commands.ab2@1714> INCLUDE "internal_commands.ab2"
0003A5A0 <internal_commands.ab2@1715> INCLUDE "internal_commands.ab2"
0003A5A2 <internal_commands.ab2@1718> INCLUDE "internal_commands.ab2"
0003A5A6 <internal_commands.ab2@1719> INCLUDE "internal_commands.ab2"
0003A5A8 <internal_commands.ab2@1720> INCLUDE "internal_commands.ab2"
0003A5AA <internal_commands.ab2@1721> INCLUDE "internal_commands.ab2"
0003A5AE <internal_commands.ab2@1722> INCLUDE "internal_commands.ab2"
0003A5B0 <internal_commands.ab2@1723> INCLUDE "internal_commands.ab2"
0003A5B4 <internal_commands.ab2@1727> INCLUDE "internal_commands.ab2"
0003A5B6 <internal_commands.ab2@1728> INCLUDE "internal_commands.ab2"
0003A5BA <internal_commands.ab2@1729> INCLUDE "internal_commands.ab2"
0003A5BB <internal_commands.ab2@1730> INCLUDE "internal_commands.ab2"
0003A5BC <internal_commands.ab2@1731> INCLUDE "internal_commands.ab2"
0003A5BE <internal_commands.ab2@1733> INCLUDE "internal_commands.ab2"
0003A5C2 <internal_commands.ab2@1734> INCLUDE "internal_commands.ab2"
0003A5C4 <internal_commands.ab2@1735> INCLUDE "internal_commands.ab2"
0003A5C6 <internal_commands.ab2@1736> INCLUDE "internal_commands.ab2"
0003A5CA <internal_commands.ab2@1737> INCLUDE "internal_commands.ab2"
0003A5CC <internal_commands.ab2@1738> INCLUDE "internal_commands.ab2"
0003A5D0 <internal_commands.ab2@1742> INCLUDE "internal_commands.ab2"
0003A5D2 <internal_commands.ab2@1743> INCLUDE "internal_commands.ab2"
0003A5D6 <internal_commands.ab2@1744> INCLUDE "internal_commands.ab2"
0003A5D7 <internal_commands.ab2@1745> INCLUDE "internal_commands.ab2"
0003A5D8 <internal_commands.ab2@1746> INCLUDE "internal_commands.ab2"
0003A5DA <internal_commands.ab2@1748> INCLUDE "internal_commands.ab2"
0003A5DE <internal_commands.ab2@1749> INCLUDE "internal_commands.ab2"
0003A5E0 <internal_commands.ab2@1750> INCLUDE "internal_commands.ab2"
0003A5E2 <internal_commands.ab2@1751> INCLUDE "internal_commands.ab2"
0003A5E6 <internal_commands.ab2@1752> INCLUDE "internal_commands.ab2"
0003A5E8 <internal_commands.ab2@1753> INCLUDE "internal_commands.ab2"
0003A5EC <internal_commands.ab2@1757> INCLUDE "internal_commands.ab2"
0003A5EE <internal_commands.ab2@1758> INCLUDE "internal_commands.ab2"
0003A5F2 <internal_commands.ab2@1759> INCLUDE "internal_commands.ab2"
0003A5F3 <internal_commands.ab2@1760> INCLUDE "internal_commands.ab2"
0003A5F4 <internal_commands.ab2@1761> INCLUDE "internal_commands.ab2"
0003A5F6 <internal_commands.ab2@1763> INCLUDE "internal_commands.ab2"
0003A5FA <internal_commands.ab2@1764> INCLUDE "internal_commands.ab2"
0003A5FC <internal_commands.ab2@1765> INCLUDE "internal_commands.ab2"
0003A5FE <internal_commands.ab2@1766> INCLUDE "internal_commands.ab2"
0003A602 <internal_commands.ab2@1767> INCLUDE "internal_commands.ab2"
0003A604 <internal_commands.ab2@1768> INCLUDE "internal_commands.ab2"
0003A608 <internal_commands.ab2@1772> INCLUDE "internal_commands.ab2"
0003A60A <internal_commands.ab2@1773> INCLUDE "internal_commands.ab2"
0003A60F <internal_commands.ab2@1774> INCLUDE "internal_commands.ab2"
0003A610 <internal_commands.ab2@1775> INCLUDE "internal_commands.ab2"
0003A612 <internal_commands.ab2@1778> INCLUDE "internal_commands.ab2"
0003A616 <internal_commands.ab2@1779> INCLUDE "internal_commands.ab2"
0003A618 <internal_commands.ab2@1780> INCLUDE "internal_commands.ab2"
0003A61A <internal_commands.ab2@1781> INCLUDE "internal_commands.ab2"
0003A61E <internal_commands.ab2@1782> INCLUDE "internal_commands.ab2"
0003A620 <internal_commands.ab2@1783> INCLUDE "internal_commands.ab2"
0003A624 <internal_commands.ab2@1787> INCLUDE "internal_commands.ab2"
0003A626 <internal_commands.ab2@1788> INCLUDE "internal_commands.ab2"
0003A62A <internal_commands.ab2@1789> INCLUDE "internal_commands.ab2"
0003A62B <internal_commands.ab2@1790> INCLUDE "internal_commands.ab2"
0003A62C <internal_commands.ab2@1791> INCLUDE "internal_commands.ab2"
0003A62E <internal_commands.ab2@1793> INCLUDE "internal_commands.ab2"
0003A632 <internal_commands.ab2@1794> INCLUDE "internal_commands.ab2"
0003A634 <internal_commands.ab2@1795> INCLUDE "internal_commands.ab2"
0003A636 <internal_commands.ab2@1796> INCLUDE "internal_commands.ab2"
0003A63A <internal_commands.ab2@1797> INCLUDE "internal_commands.ab2"
0003A63C <internal_commands.ab2@1798> INCLUDE "internal_commands.ab2"
0003A640 <internal_commands.ab2@1802> INCLUDE "internal_commands.ab2"
0003A642 <internal_commands.ab2@1803> INCLUDE "internal_commands.ab2"
0003A646 <internal_commands.ab2@1804> INCLUDE "internal_commands.ab2"
0003A647 <internal_commands.ab2@1805> INCLUDE "internal_commands.ab2"
0003A648 <internal_commands.ab2@1806> INCLUDE "internal_commands.ab2"
0003A64A <internal_commands.ab2@1808> INCLUDE "internal_commands.ab2"
0003A64E <internal_commands.ab2@1809> INCLUDE "internal_commands.ab2"
0003A650 <internal_commands.ab2@1810> INCLUDE "internal_commands.ab2"
0003A652 <internal_commands.ab2@1811> INCLUDE "internal_commands.ab2"
0003A656 <internal_commands.ab2@1812> INCLUDE "internal_commands.ab2"
0003A658 <internal_commands.ab2@1813> INCLUDE "internal_commands.ab2"
0003A65C <internal_commands.ab2@1817> INCLUDE "internal_commands.ab2"
0003A65E <internal_commands.ab2@1818> INCLUDE "internal_commands.ab2"
0003A662 <internal_commands.ab2@1819> INCLUDE "internal_commands.ab2"
0003A663 <internal_commands.ab2@1820> INCLUDE "internal_commands.ab2"
0003A664 <internal_commands.ab2@1821> INCLUDE "internal_commands.ab2"
0003A666 <internal_commands.ab2@1823> INCLUDE "internal_commands.ab2"
0003A66A <internal_commands.ab2@1824> INCLUDE "internal_commands.ab2"
0003A66C <internal_commands.ab2@1825> INCLUDE "internal_commands.ab2"
0003A66E <internal_commands.ab2@1826> INCLUDE "internal_commands.ab2"
0003A672 <internal_commands.ab2@1827> INCLUDE "internal_commands.ab2"
0003A674 <internal_commands.ab2@1828> INCLUDE "internal_commands.ab2"
0003A678 <internal_commands.ab2@1832> INCLUDE "internal_commands.ab2"
0003A67A <internal_commands.ab2@1833> INCLUDE "internal_commands.ab2"
0003A67E <internal_commands.ab2@1834> INCLUDE "internal_commands.ab2"
0003A67F <internal_commands.ab2@1835> INCLUDE "internal_commands.ab2"
0003A680 <internal_commands.ab2@1836> INCLUDE "internal_commands.ab2"
0003A682 <internal_commands.ab2@1838> INCLUDE "internal_commands.ab2"
0003A686 <internal_commands.ab2@1839> INCLUDE "internal_commands.ab2"
0003A688 <internal_commands.ab2@1840> INCLUDE "internal_commands.ab2"
0003A68A <internal_commands.ab2@1841> INCLUDE "internal_commands.ab2"
0003A68E <internal_commands.ab2@1842> INCLUDE "internal_commands.ab2"
0003A690 <internal_commands.ab2@1843> INCLUDE "internal_commands.ab2"
0003A694 <internal_commands.ab2@1847> INCLUDE "internal_commands.ab2"
0003A696 <internal_commands.ab2@1848> INCLUDE "internal_commands.ab2"
0003A69A <internal_commands.ab2@1849> INCLUDE "internal_commands.ab2"
0003A69B <internal_commands.ab2@1850> INCLUDE "internal_commands.ab2"
0003A69C <internal_commands.ab2@1851> INCLUDE "internal_commands.ab2"
0003A69E <internal_commands.ab2@1853> INCLUDE "internal_commands.ab2"
0003A6A2 <internal_commands.ab2@1854> INCLUDE "internal_commands.ab2"
0003A6A4 <internal_commands.ab2@1855> INCLUDE "internal_commands.ab2"
0003A6A6 <internal_commands.ab2@1856> INCLUDE "internal_commands.ab2"
0003A6AA <internal_commands.ab2@1857> INCLUDE "internal_commands.ab2"
0003A6AC <internal_commands.ab2@1858> INCLUDE "internal_commands.ab2"
0003A6B0 <internal_commands.ab2@1862> INCLUDE "internal_commands.ab2"
0003A6B2 <internal_commands.ab2@1863> INCLUDE "internal_commands.ab2"
0003A6B6 <internal_commands.ab2@1864> INCLUDE "internal_commands.ab2"
0003A6B7 <internal_commands.ab2@1865> INCLUDE "internal_commands.ab2"
0003A6B8 <internal_commands.ab2@1866> INCLUDE "internal_commands.ab2"
0003A6BA <internal_commands.ab2@1868> INCLUDE "internal_commands.ab2"
0003A6BE <internal_commands.ab2@1869> INCLUDE "internal_commands.ab2"
0003A6C0 <internal_commands.ab2@1870> INCLUDE "internal_commands.ab2"
0003A6C2 <internal_commands.ab2@1871> INCLUDE "internal_commands.ab2"
0003A6C6 <internal_commands.ab2@1872> INCLUDE "internal_commands.ab2"
0003A6C8 <internal_commands.ab2@1873> INCLUDE "internal_commands.ab2"
0003A6CC <internal_commands.ab2@1877> INCLUDE "internal_commands.ab2"
0003A6CE <internal_commands.ab2@1878> INCLUDE "internal_commands.ab2"
0003A6D2 <internal_commands.ab2@1879> INCLUDE "internal_commands.ab2"
0003A6D3 <internal_commands.ab2@1880> INCLUDE "internal_commands.ab2"
0003A6D4 <internal_commands.ab2@1881> INCLUDE "internal_commands.ab2"
0003A6D6 <internal_commands.ab2@1883> INCLUDE "internal_commands.ab2"
0003A6DA <internal_commands.ab2@1884> INCLUDE "internal_commands.ab2"
0003A6DC <internal_commands.ab2@1885> INCLUDE "internal_commands.ab2"
0003A6DE <internal_commands.ab2@1886> INCLUDE "internal_commands.ab2"
0003A6E2 <internal_commands.ab2@1887> INCLUDE "internal_commands.ab2"
0003A6E4 <internal_commands.ab2@1888> INCLUDE "internal_commands.ab2"
0003A6E8 <internal_commands.ab2@1892> INCLUDE "internal_commands.ab2"
0003A6EA <internal_commands.ab2@1893> INCLUDE "internal_commands.ab2"
0003A6EE <internal_commands.ab2@1894> INCLUDE "internal_commands.ab2"
0003A6EF <internal_commands.ab2@1895> INCLUDE "internal_commands.ab2"
0003A6F0 <internal_commands.ab2@1896> INCLUDE "internal_commands.ab2"
0003A6F2 <internal_commands.ab2@1898> INCLUDE "internal_commands.ab2"
0003A6F6 <internal_commands.ab2@1899> INCLUDE "internal_commands.ab2"
0003A6F8 <internal_commands.ab2@1900> INCLUDE "internal_commands.ab2"
0003A6FA <internal_commands.ab2@1901> INCLUDE "internal_commands.ab2"
0003A6FE <internal_commands.ab2@1902> INCLUDE "internal_commands.ab2"
0003A700 <internal_commands.ab2@1903> INCLUDE "internal_commands.ab2"
0003A704 <internal_commands.ab2@1907> INCLUDE "internal_commands.ab2"
0003A706 <internal_commands.ab2@1908> INCLUDE "internal_commands.ab2"
0003A70A <internal_commands.ab2@1909> INCLUDE "internal_commands.ab2"
0003A70B <internal_commands.ab2@1910> INCLUDE "internal_commands.ab2"
0003A70C <internal_commands.ab2@1911> INCLUDE "internal_commands.ab2"
0003A70E <internal_commands.ab2@1913> INCLUDE "internal_commands.ab2"
0003A712 <internal_commands.ab2@1914> INCLUDE "internal_commands.ab2"
0003A714 <internal_commands.ab2@1915> INCLUDE "internal_commands.ab2"
0003A716 <internal_commands.ab2@1916> INCLUDE "internal_commands.ab2"
0003A71A <internal_commands.ab2@1917> INCLUDE "internal_commands.ab2"
0003A71C <internal_commands.ab2@1918> INCLUDE "internal_commands.ab2"
0003A720 <internal_commands.ab2@1922> INCLUDE "internal_commands.ab2"
0003A722 <internal_commands.ab2@1923> INCLUDE "internal_commands.ab2"
0003A726 <internal_commands.ab2@1924> INCLUDE "internal_commands.ab2"
0003A727 <internal_commands.ab2@1925> INCLUDE "internal_commands.ab2"
0003A728 <internal_commands.ab2@1926> INCLUDE "internal_commands.ab2"
0003A72A <internal_commands.ab2@1928> INCLUDE "internal_commands.ab2"
0003A72E <internal_commands.ab2@1929> INCLUDE "internal_commands.ab2"
0003A730 <internal_commands.ab2@1930> INCLUDE "internal_commands.ab2"
0003A732 <internal_commands.ab2@1931> INCLUDE "internal_commands.ab2"
0003A736 <internal_commands.ab2@1932> INCLUDE "internal_commands.ab2"
0003A738 <internal_commands.ab2@1933> INCLUDE "internal_commands.ab2"
0003A73C <internal_commands.ab2@1937> INCLUDE "internal_commands.ab2"
0003A73E <internal_commands.ab2@1938> INCLUDE "internal_commands.ab2"
0003A742 <internal_commands.ab2@1939> INCLUDE "internal_commands.ab2"
0003A743 <internal_commands.ab2@1940> INCLUDE "internal_commands.ab2"
0003A744 <internal_commands.ab2@1941> INCLUDE "internal_commands.ab2"
0003A746 <internal_commands.ab2@1943> INCLUDE "internal_commands.ab2"
0003A74A <internal_commands.ab2@1944> INCLUDE "internal_commands.ab2"
0003A74C <internal_commands.ab2@1945> INCLUDE "internal_commands.ab2"
0003A74E <internal_commands.ab2@1946> INCLUDE "internal_commands.ab2"
0003A752 <internal_commands.ab2@1947> INCLUDE "internal_commands.ab2"
0003A754 <internal_commands.ab2@1948> INCLUDE "internal_commands.ab2"
0003A758 <internal_commands.ab2@1952> INCLUDE "internal_commands.ab2"
0003A75A <internal_commands.ab2@1953> INCLUDE "internal_commands.ab2"
0003A75E <internal_commands.ab2@1954> INCLUDE "internal_commands.ab2"
0003A75F <internal_commands.ab2@1955> INCLUDE "internal_commands.ab2"
0003A760 <internal_commands.ab2@1956> INCLUDE "internal_commands.ab2"
0003A762 <internal_commands.ab2@1958> INCLUDE "internal_commands.ab2"
0003A766 <internal_commands.ab2@1959> INCLUDE "internal_commands.ab2"
0003A768 <internal_commands.ab2@1960> INCLUDE "internal_commands.ab2"
0003A76A <internal_commands.ab2@1961> INCLUDE "internal_commands.ab2"
0003A76E <internal_commands.ab2@1962> INCLUDE "internal_commands.ab2"
0003A770 <internal_commands.ab2@1963> INCLUDE "internal_commands.ab2"
0003A774 <internal_commands.ab2@1967> INCLUDE "internal_commands.ab2"
0003A776 <internal_commands.ab2@1968> INCLUDE "internal_commands.ab2"
0003A77A <internal_commands.ab2@1969> INCLUDE "internal_commands.ab2"
0003A77B <internal_commands.ab2@1970> INCLUDE "internal_commands.ab2"
0003A77C <internal_commands.ab2@1971> INCLUDE "internal_commands.ab2"
0003A77E <internal_commands.ab2@1973> INCLUDE "internal_commands.ab2"
0003A782 <internal_commands.ab2@1974> INCLUDE "internal_commands.ab2"
0003A784 <internal_commands.ab2@1975> INCLUDE "internal_commands.ab2"
0003A786 <internal_commands.ab2@1976> INCLUDE "internal_commands.ab2"
0003A78A <internal_commands.ab2@1977> INCLUDE "internal_commands.ab2"
0003A78C <internal_commands.ab2@1978> INCLUDE "internal_commands.ab2"
0003A790 <internal_commands.ab2@1982> INCLUDE "internal_commands.ab2"
0003A792 <internal_commands.ab2@1983> INCLUDE "internal_commands.ab2"
0003A796 <internal_commands.ab2@1984> INCLUDE "internal_commands.ab2"
0003A797 <internal_commands.ab2@1985> INCLUDE "internal_commands.ab2"
0003A798 <internal_commands.ab2@1986> INCLUDE "internal_commands.ab2"
0003A79A <internal_commands.ab2@1988> INCLUDE "internal_commands.ab2"
0003A79E <internal_commands.ab2@1989> INCLUDE "internal_commands.ab2"
0003A7A0 <internal_commands.ab2@1990> INCLUDE "internal_commands.ab2"
0003A7A2 <internal_commands.ab2@1991> INCLUDE "internal_commands.ab2"
0003A7A6 <internal_commands.ab2@1992> INCLUDE "internal_commands.ab2"
0003A7A8 <internal_commands.ab2@1993> INCLUDE "internal_commands.ab2"
0003A7AC <internal_commands.ab2@1997> INCLUDE "internal_commands.ab2"
0003A7AE <internal_commands.ab2@1998> INCLUDE "internal_commands.ab2"
0003A7B1 <internal_commands.ab2@1999> INCLUDE "internal_commands.ab2"
0003A7B2 <internal_commands.ab2@2000> INCLUDE "internal_commands.ab2"
0003A7B4 <internal_commands.ab2@2003> INCLUDE "internal_commands.ab2"
0003A7B8 <internal_commands.ab2@2004> INCLUDE "internal_commands.ab2"
0003A7BA <internal_commands.ab2@2005> INCLUDE "internal_commands.ab2"
0003A7BC <internal_commands.ab2@2006> INCLUDE "internal_commands.ab2"
0003A7C0 <internal_commands.ab2@2007> INCLUDE "internal_commands.ab2"
0003A7C2 <internal_commands.ab2@2008> INCLUDE "internal_commands.ab2"
0003A7C6 <internal_commands.ab2@2012> INCLUDE "internal_commands.ab2"
0003A7C8 <internal_commands.ab2@2013> INCLUDE "internal_commands.ab2"
0003A7CB <internal_commands.ab2@2014> INCLUDE "internal_commands.ab2"
0003A7CC <internal_commands.ab2@2015> INCLUDE "internal_commands.ab2"
0003A7CE <internal_commands.ab2@2018> INCLUDE "internal_commands.ab2"
0003A7D2 <internal_commands.ab2@2019> INCLUDE "internal_commands.ab2"
0003A7D4 <internal_commands.ab2@2020> INCLUDE "internal_commands.ab2"
0003A7D6 <internal_commands.ab2@2021> INCLUDE "internal_commands.ab2"
0003A7DA <internal_commands.ab2@2022> INCLUDE "internal_commands.ab2"
0003A7DC <internal_commands.ab2@2023> INCLUDE "internal_commands.ab2"
0003A7E0 <internal_commands.ab2@2027> INCLUDE "internal_commands.ab2"
0003A7E2 <internal_commands.ab2@2028> INCLUDE "internal_commands.ab2"
0003A7E7 <internal_commands.ab2@2029> INCLUDE "internal_commands.ab2"
0003A7E8 <internal_commands.ab2@2030> INCLUDE "internal_commands.ab2"
0003A7EA <internal_commands.ab2@2033> INCLUDE "internal_commands.ab2"
0003A7EE <internal_commands.ab2@2034> INCLUDE "internal_commands.ab2"
0003A7F0 <internal_commands.ab2@2035> INCLUDE "internal_commands.ab2"
0003A7F2 <internal_commands.ab2@2036> INCLUDE "internal_commands.ab2"
0003A7F6 <internal_commands.ab2@2037> INCLUDE "internal_commands.ab2"
0003A7F8 <internal_commands.ab2@2038> INCLUDE "internal_commands.ab2"
0003A7FC <internal_commands.ab2@2042> INCLUDE "internal_commands.ab2"
0003A7FE <internal_commands.ab2@2043> INCLUDE "internal_commands.ab2"
0003A802 <internal_commands.ab2@2044> INCLUDE "internal_commands.ab2"
0003A803 <internal_commands.ab2@2045> INCLUDE "internal_commands.ab2"
0003A804 <internal_commands.ab2@2046> INCLUDE "internal_commands.ab2"
0003A806 <internal_commands.ab2@2048> INCLUDE "internal_commands.ab2"
0003A80A <internal_commands.ab2@2049> INCLUDE "internal_commands.ab2"
0003A80C <internal_commands.ab2@2050> INCLUDE "internal_commands.ab2"
0003A80E <internal_commands.ab2@2051> INCLUDE "internal_commands.ab2"
0003A812 <internal_commands.ab2@2052> INCLUDE "internal_commands.ab2"
0003A814 <internal_commands.ab2@2053> INCLUDE "internal_commands.ab2"
0003A818 <internal_commands.ab2@2057> INCLUDE "internal_commands.ab2"
0003A81A <internal_commands.ab2@2058> INCLUDE "internal_commands.ab2"
0003A81F <internal_commands.ab2@2059> INCLUDE "internal_commands.ab2"
0003A820 <internal_commands.ab2@2060> INCLUDE "internal_commands.ab2"
0003A822 <internal_commands.ab2@2063> INCLUDE "internal_commands.ab2"
0003A826 <internal_commands.ab2@2064> INCLUDE "internal_commands.ab2"
0003A828 <internal_commands.ab2@2065> INCLUDE "internal_commands.ab2"
0003A82A <internal_commands.ab2@2066> INCLUDE "internal_commands.ab2"
0003A82E <internal_commands.ab2@2067> INCLUDE "internal_commands.ab2"
0003A830 <internal_commands.ab2@2068> INCLUDE "internal_commands.ab2"
0003A834 <internal_commands.ab2@2072> INCLUDE "internal_commands.ab2"
0003A836 <internal_commands.ab2@2073> INCLUDE "internal_commands.ab2"
0003A83B <internal_commands.ab2@2074> INCLUDE "internal_commands.ab2"
0003A83C <internal_commands.ab2@2075> INCLUDE "internal_commands.ab2"
0003A83E <internal_commands.ab2@2078> INCLUDE "internal_commands.ab2"
0003A842 <internal_commands.ab2@2079> INCLUDE "internal_commands.ab2"
0003A844 <internal_commands.ab2@2080> INCLUDE "internal_commands.ab2"
0003A846 <internal_commands.ab2@2081> INCLUDE "internal_commands.ab2"
0003A84A <internal_commands.ab2@2082> INCLUDE "internal_commands.ab2"
0003A84C <internal_commands.ab2@2083> INCLUDE "internal_commands.ab2"
0003A850 <internal_commands.ab2@2087> INCLUDE "internal_commands.ab2"
0003A852 <internal_commands.ab2@2088> INCLUDE "internal_commands.ab2"
0003A857 <internal_commands.ab2@2089> INCLUDE "internal_commands.ab2"
0003A858 <internal_commands.ab2@2090> INCLUDE "internal_commands.ab2"
0003A85A <internal_commands.ab2@2093> INCLUDE "internal_commands.ab2"
0003A85E <internal_commands.ab2@2094> INCLUDE "internal_commands.ab2"
0003A860 <internal_commands.ab2@2095> INCLUDE "internal_commands.ab2"
0003A862 <internal_commands.ab2@2096> INCLUDE "internal_commands.ab2"
0003A866 <internal_commands.ab2@2097> INCLUDE "internal_commands.ab2"
0003A868 <internal_commands.ab2@2098> INCLUDE "internal_commands.ab2"
0003A86C <internal_commands.ab2@2102> INCLUDE "internal_commands.ab2"
0003A86E <internal_commands.ab2@2103> INCLUDE "internal_commands.ab2"
0003A873 <internal_commands.ab2@2104> INCLUDE "internal_commands.ab2"
0003A874 <internal_commands.ab2@2105> INCLUDE "internal_commands.ab2"
0003A876 <internal_commands.ab2@2108> INCLUDE "internal_commands.ab2"
0003A87A <internal_commands.ab2@2109> INCLUDE "internal_commands.ab2"
0003A87C <internal_commands.ab2@2110> INCLUDE "internal_commands.ab2"
0003A87E <internal_commands.ab2@2111> INCLUDE "internal_commands.ab2"
0003A882 <internal_commands.ab2@2112> INCLUDE "internal_commands.ab2"
0003A884 <internal_commands.ab2@2113> INCLUDE "internal_commands.ab2"
0003A888 <internal_commands.ab2@2117> INCLUDE "internal_commands.ab2"
0003A88A <internal_commands.ab2@2118> INCLUDE "internal_commands.ab2"
0003A88F <internal_commands.ab2@2119> INCLUDE "internal_commands.ab2"
0003A890 <internal_commands.ab2@2120> INCLUDE "internal_commands.ab2"
0003A892 <internal_commands.ab2@2123> INCLUDE "internal_commands.ab2"
0003A896 <internal_commands.ab2@2124> INCLUDE "internal_commands.ab2"
0003A898 <internal_commands.ab2@2125> INCLUDE "internal_commands.ab2"
0003A89A <internal_commands.ab2@2126> INCLUDE "internal_commands.ab2"
0003A89E <internal_commands.ab2@2127> INCLUDE "internal_commands.ab2"
0003A8A0 <internal_commands.ab2@2128> INCLUDE "internal_commands.ab2"
0003A8A4 <internal_commands.ab2@2132> INCLUDE "internal_commands.ab2"
0003A8A6 <internal_commands.ab2@2133> INCLUDE "internal_commands.ab2"
0003A8AA <internal_commands.ab2@2134> INCLUDE "internal_commands.ab2"
0003A8AB <internal_commands.ab2@2135> INCLUDE "internal_commands.ab2"
0003A8AC <internal_commands.ab2@2136> INCLUDE "internal_commands.ab2"
0003A8AE <internal_commands.ab2@2138> INCLUDE "internal_commands.ab2"
0003A8B2 <internal_commands.ab2@2139> INCLUDE "internal_commands.ab2"
0003A8B4 <internal_commands.ab2@2140> INCLUDE "internal_commands.ab2"
0003A8B6 <internal_commands.ab2@2141> INCLUDE "internal_commands.ab2"
0003A8BA <internal_commands.ab2@2142> INCLUDE "internal_commands.ab2"
0003A8BC <internal_commands.ab2@2143> INCLUDE "internal_commands.ab2"
0003A8C0 <internal_commands.ab2@2147> INCLUDE "internal_commands.ab2"
0003A8C2 <internal_commands.ab2@2148> INCLUDE "internal_commands.ab2"
0003A8C7 <internal_commands.ab2@2149> INCLUDE "internal_commands.ab2"
0003A8C8 <internal_commands.ab2@2150> INCLUDE "internal_commands.ab2"
0003A8CA <internal_commands.ab2@2153> INCLUDE "internal_commands.ab2"
0003A8CE <internal_commands.ab2@2154> INCLUDE "internal_commands.ab2"
0003A8D0 <internal_commands.ab2@2155> INCLUDE "internal_commands.ab2"
0003A8D2 <internal_commands.ab2@2156> INCLUDE "internal_commands.ab2"
0003A8D6 <internal_commands.ab2@2157> INCLUDE "internal_commands.ab2"
0003A8D8 <internal_commands.ab2@2158> INCLUDE "internal_commands.ab2"
0003A8DC <internal_commands.ab2@2162> INCLUDE "internal_commands.ab2"
0003A8DE <internal_commands.ab2@2163> INCLUDE "internal_commands.ab2"
0003A8E4 <internal_commands.ab2@2164> INCLUDE "internal_commands.ab2"
0003A8E5 <internal_commands.ab2@2165> INCLUDE "internal_commands.ab2"
0003A8E6 <internal_commands.ab2@2166> INCLUDE "internal_commands.ab2"
0003A8E8 <internal_commands.ab2@2168> INCLUDE "internal_commands.ab2"
0003A8EC <internal_commands.ab2@2169> INCLUDE "internal_commands.ab2"
0003A8EE <internal_commands.ab2@2170> INCLUDE "internal_commands.ab2"
0003A8F0 <internal_commands.ab2@2171> INCLUDE "internal_commands.ab2"
0003A8F4 <internal_commands.ab2@2172> INCLUDE "internal_commands.ab2"
0003A8F6 <internal_commands.ab2@2173> INCLUDE "internal_commands.ab2"
0003A8FA <internal_commands.ab2@2177> INCLUDE "internal_commands.ab2"
0003A8FC <internal_commands.ab2@2178> INCLUDE "internal_commands.ab2"
0003A900 <internal_commands.ab2@2179> INCLUDE "internal_commands.ab2"
0003A901 <internal_commands.ab2@2180> INCLUDE "internal_commands.ab2"
0003A902 <internal_commands.ab2@2181> INCLUDE "internal_commands.ab2"
0003A904 <internal_commands.ab2@2183> INCLUDE "internal_commands.ab2"
0003A908 <internal_commands.ab2@2184> INCLUDE "internal_commands.ab2"
0003A90A <internal_commands.ab2@2185> INCLUDE "internal_commands.ab2"
0003A90C <internal_commands.ab2@2186> INCLUDE "internal_commands.ab2"
0003A910 <internal_commands.ab2@2187> INCLUDE "internal_commands.ab2"
0003A912 <internal_commands.ab2@2188> INCLUDE "internal_commands.ab2"
0003A916 <internal_commands.ab2@2192> INCLUDE "internal_commands.ab2"
0003A918 <internal_commands.ab2@2193> INCLUDE "internal_commands.ab2"
0003A91D <internal_commands.ab2@2194> INCLUDE "internal_commands.ab2"
0003A91E <internal_commands.ab2@2195> INCLUDE "internal_commands.ab2"
0003A920 <internal_commands.ab2@2198> INCLUDE "internal_commands.ab2"
0003A924 <internal_commands.ab2@2199> INCLUDE "internal_commands.ab2"
0003A926 <internal_commands.ab2@2200> INCLUDE "internal_commands.ab2"
0003A928 <internal_commands.ab2@2201> INCLUDE "internal_commands.ab2"
0003A92C <internal_commands.ab2@2202> INCLUDE "internal_commands.ab2"
0003A92E <internal_commands.ab2@2203> INCLUDE "internal_commands.ab2"
0003A932 <internal_commands.ab2@2208> INCLUDE "internal_commands.ab2"
0003A934 <internal_commands.ab2@2209> INCLUDE "internal_commands.ab2"
0003A93B <internal_commands.ab2@2210> INCLUDE "internal_commands.ab2"
0003A93C <internal_commands.ab2@2211> INCLUDE "internal_commands.ab2"
0003A93E <internal_commands.ab2@2230> INCLUDE "internal_commands.ab2"
0003A940 <internal_commands.ab2@2231> INCLUDE "internal_commands.ab2"
0003A942 <internal_commands.ab2@2235> INCLUDE "internal_commands.ab2"
0003A944 <internal_commands.ab2@2236> INCLUDE "internal_commands.ab2"
0003A946 <internal_commands.ab2@2240> INCLUDE "internal_commands.ab2"
0003A948 <internal_commands.ab2@2241> INCLUDE "internal_commands.ab2"
0003A94A <internal_commands.ab2@2245> INCLUDE "internal_commands.ab2"
0003A94C <internal_commands.ab2@2246> INCLUDE "internal_commands.ab2"
0003A94E <internal_commands.ab2@2251> INCLUDE "internal_commands.ab2"
0003A952 <internal_commands.ab2@2252> INCLUDE "internal_commands.ab2"
0003A954 <internal_commands.ab2@2253> INCLUDE "internal_commands.ab2"
0003A956 <internal_commands.ab2@2254> INCLUDE "internal_commands.ab2"
0003A958 <internal_commands.ab2@2255> INCLUDE "internal_commands.ab2"
0003A95A <internal_commands.ab2@2256> INCLUDE "internal_commands.ab2"
0003A95E <internal_commands.ab2@2257> INCLUDE "internal_commands.ab2"
0003A964 <internal_commands.ab2@2260> INCLUDE "internal_commands.ab2"
0003A968 <internal_commands.ab2@2261> INCLUDE "internal_commands.ab2"
0003A96A <internal_commands.ab2@2262> INCLUDE "internal_commands.ab2"
0003A96C <internal_commands.ab2@2263> INCLUDE "internal_commands.ab2"
0003A96E <internal_commands.ab2@2264> INCLUDE "internal_commands.ab2"
0003A970 <internal_commands.ab2@2265> INCLUDE "internal_commands.ab2"
0003A972 <internal_commands.ab2@2266> INCLUDE "internal_commands.ab2"
0003A974 <internal_commands.ab2@2273> INCLUDE "internal_commands.ab2"
0003A978 <internal_commands.ab2@2274> INCLUDE "internal_commands.ab2"
0003A97C <internal_commands.ab2@2275> INCLUDE "internal_commands.ab2"
0003A980 <internal_commands.ab2@2276> INCLUDE "internal_commands.ab2"
0003A984 <internal_commands.ab2@2277> INCLUDE "internal_commands.ab2"
0003A988 <internal_commands.ab2@2278> INCLUDE "internal_commands.ab2"
0003A98A <internal_commands.ab2@2281> INCLUDE "internal_commands.ab2"
0003A98C <internal_commands.ab2@2282> INCLUDE "internal_commands.ab2"
0003A990 <internal_commands.ab2@2283> INCLUDE "internal_commands.ab2"
0003A994 <internal_commands.ab2@2284> INCLUDE "internal_commands.ab2"
0003A998 <internal_commands.ab2@2285> INCLUDE "internal_commands.ab2"
0003A99C <internal_commands.ab2@2286> INCLUDE "internal_commands.ab2"
0003A99E <internal_commands.ab2@2289> INCLUDE "internal_commands.ab2"
0003A9A0 <internal_commands.ab2@2290> INCLUDE "internal_commands.ab2"
0003A9A4 <internal_commands.ab2@2291> INCLUDE "internal_commands.ab2"
0003A9A8 <internal_commands.ab2@2292> INCLUDE "internal_commands.ab2"
0003A9AC <internal_commands.ab2@2293> INCLUDE "internal_commands.ab2"
0003A9B0 <internal_commands.ab2@2294> INCLUDE "internal_commands.ab2"
0003A9B2 <internal_commands.ab2@2295> INCLUDE "internal_commands.ab2"
0003A9B4 <internal_commands.ab2@2298> INCLUDE "internal_commands.ab2"
0003A9B6 <internal_commands.ab2@2299> INCLUDE "internal_commands.ab2"
0003A9BA <internal_commands.ab2@2300> INCLUDE "internal_commands.ab2"
0003A9BC <internal_commands.ab2@2302> INCLUDE "internal_commands.ab2"
0003A9C0 <internal_commands.ab2@2303> INCLUDE "internal_commands.ab2"
0003A9C2 <internal_commands.ab2@2307> INCLUDE "internal_commands.ab2"
0003A9C6 <internal_commands.ab2@2308> INCLUDE "internal_commands.ab2"
0003A9C8 <internal_commands.ab2@2309> INCLUDE "internal_commands.ab2"
0003A9CC <internal_commands.ab2@2310> INCLUDE "internal_commands.ab2"
0003A9D0 <internal_commands.ab2@2311> INCLUDE "internal_commands.ab2"
0003A9D4 <internal_commands.ab2@2312> INCLUDE "internal_commands.ab2"
0003A9D8 <internal_commands.ab2@2316> INCLUDE "internal_commands.ab2"
0003A9DC <internal_commands.ab2@2317> INCLUDE "internal_commands.ab2"
0003A9E0 <internal_commands.ab2@2319> INCLUDE "internal_commands.ab2"
0003A9E4 <internal_commands.ab2@2320> INCLUDE "internal_commands.ab2"
0003A9E8 <internal_commands.ab2@2321> INCLUDE "internal_commands.ab2"
0003A9EC <internal_commands.ab2@2322> INCLUDE "internal_commands.ab2"
0003A9F0 <internal_commands.ab2@2323> INCLUDE "internal_commands.ab2"
0003A9F4 <internal_commands.ab2@2324> INCLUDE "internal_commands.ab2"
0003A9F8 <internal_commands.ab2@2325> INCLUDE "internal_commands.ab2"
0003A9FC <internal_commands.ab2@2326> INCLUDE "internal_commands.ab2"
0003AA00 <internal_commands.ab2@2328> INCLUDE "internal_commands.ab2"
0003AA04 <internal_commands.ab2@2331> INCLUDE "internal_commands.ab2"
0003AA08 <internal_commands.ab2@2332> INCLUDE "internal_commands.ab2"
0003AA0C <internal_commands.ab2@2334> INCLUDE "internal_commands.ab2"
0003AA10 <internal_commands.ab2@2335> INCLUDE "internal_commands.ab2"
0003AA14 <internal_commands.ab2@2336> INCLUDE "internal_commands.ab2"
0003AA18 <internal_commands.ab2@2337> INCLUDE "internal_commands.ab2"
0003AA1C <internal_commands.ab2@2338> INCLUDE "internal_commands.ab2"
0003AA20 <internal_commands.ab2@2339> INCLUDE "internal_commands.ab2"
0003AA24 <internal_commands.ab2@2340> INCLUDE "internal_commands.ab2"
0003AA28 <internal_commands.ab2@2341> INCLUDE "internal_commands.ab2"
0003AA2C <internal_commands.ab2@2343> INCLUDE "internal_commands.ab2"
0003AA30 <internal_commands.ab2@2346> INCLUDE "internal_commands.ab2"
0003AA32 <internal_commands.ab2@2347> INCLUDE "internal_commands.ab2"
0003AA36 <internal_commands.ab2@2348> INCLUDE "internal_commands.ab2"
0003AA3A <internal_commands.ab2@2349> INCLUDE "internal_commands.ab2"
0003AA3E <internal_commands.ab2@2350> INCLUDE "internal_commands.ab2"
0003AA42 <internal_commands.ab2@2351> INCLUDE "internal_commands.ab2"
0003AA46 <internal_commands.ab2@2352> INCLUDE "internal_commands.ab2"
0003AA4A <internal_commands.ab2@2353> INCLUDE "internal_commands.ab2"
0003AA4E <internal_commands.ab2@2356> INCLUDE "internal_commands.ab2"
0003AA52 <internal_commands.ab2@2357> INCLUDE "internal_commands.ab2"
0003AA56 <internal_commands.ab2@2358> INCLUDE "internal_commands.ab2"
0003AA58 <internal_commands.ab2@2359> INCLUDE "internal_commands.ab2"
0003AA5A <internal_commands.ab2@2362> INCLUDE "internal_commands.ab2"
0003AA5C <internal_commands.ab2@2363> INCLUDE "internal_commands.ab2"
0003AA5E <internal_commands.ab2@2364> INCLUDE "internal_commands.ab2"
0003AA60 <internal_commands.ab2@2365> INCLUDE "internal_commands.ab2"
0003AA64 <internal_commands.ab2@2366> INCLUDE "internal_commands.ab2"
0003AA68 <internal_commands.ab2@2369> INCLUDE "internal_commands.ab2"
0003AA6C <internal_commands.ab2@2370> INCLUDE "internal_commands.ab2"
0003AA70 <internal_commands.ab2@2371> INCLUDE "internal_commands.ab2"
0003AA72 <internal_commands.ab2@2372> INCLUDE "internal_commands.ab2"
0003AA76 <internal_commands.ab2@2373> INCLUDE "internal_commands.ab2"
0003AA7A <internal_commands.ab2@2376> INCLUDE "internal_commands.ab2"
0003AA7E <internal_commands.ab2@2379> INCLUDE "internal_commands.ab2"
0003AA82 <internal_commands.ab2@2380> INCLUDE "internal_commands.ab2"
0003AA84 <internal_commands.ab2@2381> INCLUDE "internal_commands.ab2"
0003AA86 <internal_commands.ab2@2382> INCLUDE "internal_commands.ab2"
0003AA8A <internal_commands.ab2@2383> INCLUDE "internal_commands.ab2"
0003AA8E <internal_commands.ab2@2386> INCLUDE "internal_commands.ab2"
0003AA92 <internal_commands.ab2@2387> INCLUDE "internal_commands.ab2"
0003AA96 <internal_commands.ab2@2390> INCLUDE "internal_commands.ab2"
0003AA9A <internal_commands.ab2@2393> INCLUDE "internal_commands.ab2"
0003AA9E <internal_commands.ab2@2394> INCLUDE "internal_commands.ab2"
0003AAA0 <internal_commands.ab2@2395> INCLUDE "internal_commands.ab2"
0003AAA2 <internal_commands.ab2@2396> INCLUDE "internal_commands.ab2"
0003AAA6 <internal_commands.ab2@2397> INCLUDE "internal_commands.ab2"
0003AAAA <internal_commands.ab2@2400> INCLUDE "internal_commands.ab2"
0003AAAE <internal_commands.ab2@2401> INCLUDE "internal_commands.ab2"
0003AAB0 <internal_commands.ab2@2405> INCLUDE "internal_commands.ab2"
0003AAB4 <internal_commands.ab2@2406> INCLUDE "internal_commands.ab2"
0003AAB8 <internal_commands.ab2@2407> INCLUDE "internal_commands.ab2"
0003AABA <internal_commands.ab2@2408> INCLUDE "internal_commands.ab2"
0003AABE <internal_commands.ab2@2409> INCLUDE "internal_commands.ab2"
0003AAC2 <internal_commands.ab2@2410> INCLUDE "internal_commands.ab2"
0003AAC4 <internal_commands.ab2@2413> INCLUDE "internal_commands.ab2"
0003AAC8 <internal_commands.ab2@2414> INCLUDE "internal_commands.ab2"
0003AACC <internal_commands.ab2@2415> INCLUDE "internal_commands.ab2"
0003AAD0 <internal_commands.ab2@2416> INCLUDE "internal_commands.ab2"
0003AAD4 <internal_commands.ab2@2419> INCLUDE "internal_commands.ab2"
0003AAD8 <internal_commands.ab2@2420> INCLUDE "internal_commands.ab2"
0003AADA <internal_commands.ab2@2424> INCLUDE "internal_commands.ab2"
0003AADE <internal_commands.ab2@2425> INCLUDE "internal_commands.ab2"
0003AAE0 <internal_commands.ab2@2426> INCLUDE "internal_commands.ab2"
0003AAE2 <internal_commands.ab2@2427> INCLUDE "internal_commands.ab2"
0003AAE4 <internal_commands.ab2@2428> INCLUDE "internal_commands.ab2"
0003AAE8 <internal_commands.ab2@2429> INCLUDE "internal_commands.ab2"
0003AAEC <internal_commands.ab2@2432> INCLUDE "internal_commands.ab2"
0003AAF0 <internal_commands.ab2@2433> INCLUDE "internal_commands.ab2"
0003AAF4 <internal_commands.ab2@2434> INCLUDE "internal_commands.ab2"
0003AAF8 <internal_commands.ab2@2435> INCLUDE "internal_commands.ab2"
0003AAFC <internal_commands.ab2@2439> INCLUDE "internal_commands.ab2"
0003AB00 <internal_commands.ab2@2440> INCLUDE "internal_commands.ab2"
0003AB04 <internal_commands.ab2@2444> INCLUDE "internal_commands.ab2"
0003AB08 <internal_commands.ab2@2445> INCLUDE "internal_commands.ab2"
0003AB0C <internal_commands.ab2@2449> INCLUDE "internal_commands.ab2"
0003AB10 <internal_commands.ab2@2450> INCLUDE "internal_commands.ab2"
0003AB14 <internal_commands.ab2@2454> INCLUDE "internal_commands.ab2"
0003AB16 <internal_commands.ab2@2456> INCLUDE "internal_commands.ab2"
0003AB1A <internal_commands.ab2@2457> INCLUDE "internal_commands.ab2"
0003AB1E <internal_commands.ab2@2458> INCLUDE "internal_commands.ab2"
0003AB20 <internal_commands.ab2@2459> INCLUDE "internal_commands.ab2"
0003AB22 <internal_commands.ab2@2460> INCLUDE "internal_commands.ab2"
0003AB24 <internal_commands.ab2@2461> INCLUDE "internal_commands.ab2"
0003AB28 <internal_commands.ab2@2462> INCLUDE "internal_commands.ab2"
0003AB2C <internal_commands.ab2@2463> INCLUDE "internal_commands.ab2"
0003AB2E <internal_commands.ab2@2464> INCLUDE "internal_commands.ab2"
0003AB32 <internal_commands.ab2@2465> INCLUDE "internal_commands.ab2"
0003AB34 <internal_commands.ab2@2466> INCLUDE "internal_commands.ab2"
0003AB36 <internal_commands.ab2@2467> INCLUDE "internal_commands.ab2"
0003AB38 <internal_commands.ab2@2468> INCLUDE "internal_commands.ab2"
0003AB3C <internal_commands.ab2@2469> INCLUDE "internal_commands.ab2"
0003AB40 <internal_commands.ab2@2470> INCLUDE "internal_commands.ab2"
0003AB42 <internal_commands.ab2@2473> INCLUDE "internal_commands.ab2"
0003AB44 <internal_commands.ab2@2474> INCLUDE "internal_commands.ab2"
0003AB48 <internal_commands.ab2@2475> INCLUDE "internal_commands.ab2"
0003AB4C <internal_commands.ab2@2476> INCLUDE "internal_commands.ab2"
0003AB50 <internal_commands.ab2@2477> INCLUDE "internal_commands.ab2"
0003AB54 <internal_commands.ab2@2478> INCLUDE "internal_commands.ab2"
0003AB56 <internal_commands.ab2@2479> INCLUDE "internal_commands.ab2"
0003AB5A <internal_commands.ab2@2480> INCLUDE "internal_commands.ab2"
0003AB5E <internal_commands.ab2@2481> INCLUDE "internal_commands.ab2"
0003AB62 <internal_commands.ab2@2482> INCLUDE "internal_commands.ab2"
0003AB64 <internal_commands.ab2@2483> INCLUDE "internal_commands.ab2"
0003AB66 <internal_commands.ab2@2484> INCLUDE "internal_commands.ab2"
0003AB68 <internal_commands.ab2@2485> INCLUDE "internal_commands.ab2"
0003AB6A <internal_commands.ab2@2488> INCLUDE "internal_commands.ab2"
0003AB6C <internal_commands.ab2@2489> INCLUDE "internal_commands.ab2"
0003AB6E <internal_commands.ab2@2490> INCLUDE "internal_commands.ab2"
0003AB72 <internal_commands.ab2@2491> INCLUDE "internal_commands.ab2"
0003AB76 <internal_commands.ab2@2492> INCLUDE "internal_commands.ab2"
0003AB78 <internal_commands.ab2@2496> INCLUDE "internal_commands.ab2"
0003AB7C <internal_commands.ab2@2497> INCLUDE "internal_commands.ab2"
0003AB7E <internal_commands.ab2@2498> INCLUDE "internal_commands.ab2"
0003AB82 <internal_commands.ab2@2499> INCLUDE "internal_commands.ab2"
0003AB86 <internal_commands.ab2@2500> INCLUDE "internal_commands.ab2"
0003AB88 <internal_commands.ab2@2501> INCLUDE "internal_commands.ab2"
0003AB8A <internal_commands.ab2@2504> INCLUDE "internal_commands.ab2"
0003AB8C <internal_commands.ab2@2508> INCLUDE "internal_commands.ab2"
0003AB90 <internal_commands.ab2@2509> INCLUDE "internal_commands.ab2"
0003AB92 <internal_commands.ab2@2510> INCLUDE "internal_commands.ab2"
0003AB96 <internal_commands.ab2@2511> INCLUDE "internal_commands.ab2"
0003AB9A <internal_commands.ab2@2512> INCLUDE "internal_commands.ab2"
0003AB9E <internal_commands.ab2@2513> INCLUDE "internal_commands.ab2"
0003ABA0 <internal_commands.ab2@2516> INCLUDE "internal_commands.ab2"
0003ABA4 <internal_commands.ab2@2520> INCLUDE "internal_commands.ab2"
0003ABA8 <internal_commands.ab2@2521> INCLUDE "internal_commands.ab2"
0003ABAA <internal_commands.ab2@2522> INCLUDE "internal_commands.ab2"
0003ABAE <internal_commands.ab2@2523> INCLUDE "internal_commands.ab2"
0003ABB2 <internal_commands.ab2@2524> INCLUDE "internal_commands.ab2"
0003ABB6 <internal_commands.ab2@2527> INCLUDE "internal_commands.ab2"
0003ABBA <internal_commands.ab2@2528> INCLUDE "internal_commands.ab2"
0003ABBE <internal_commands.ab2@2529> INCLUDE "internal_commands.ab2"
0003ABC2 <internal_commands.ab2@2530> INCLUDE "internal_commands.ab2"
0003ABC6 <internal_commands.ab2@2531> INCLUDE "internal_commands.ab2"
0003ABCA <internal_commands.ab2@2538> INCLUDE "internal_commands.ab2"
0003ABCC <internal_commands.ab2@2539> INCLUDE "internal_commands.ab2"
0003ABD1 <internal_commands.ab2@2540> INCLUDE "internal_commands.ab2"
0003ABD2 <internal_commands.ab2@2541> INCLUDE "internal_commands.ab2"
0003ABD6 <internal_commands.ab2@2545> INCLUDE "internal_commands.ab2"
0003ABD8 <internal_commands.ab2@2546> INCLUDE "internal_commands.ab2"
0003ABDF <internal_commands.ab2@2547> INCLUDE "internal_commands.ab2"
0003ABE0 <internal_commands.ab2@2548> INCLUDE "internal_commands.ab2"
0003ABE4 <internal_commands.ab2@2552> INCLUDE "internal_commands.ab2"
0003ABE6 <internal_commands.ab2@2553> INCLUDE "internal_commands.ab2"
0003ABED <internal_commands.ab2@2554> INCLUDE "internal_commands.ab2"
0003ABEE <internal_commands.ab2@2555> INCLUDE "internal_commands.ab2"
0003ABF2 <internal_commands.ab2@2559> INCLUDE "internal_commands.ab2"
0003ABF4 <internal_commands.ab2@2560> INCLUDE "internal_commands.ab2"
0003ABFC <internal_commands.ab2@2561> INCLUDE "internal_commands.ab2"
0003ABFD <internal_commands.ab2@2562> INCLUDE "internal_commands.ab2"
0003ABFE <internal_commands.ab2@2563> INCLUDE "internal_commands.ab2"
0003AC02 <internal_commands.ab2@2566> INCLUDE "internal_commands.ab2"
0003AC04 <internal_commands.ab2@2567> INCLUDE "internal_commands.ab2"
0003AC09 <internal_commands.ab2@2568> INCLUDE "internal_commands.ab2"
0003AC1D <internal_commands.ab2@2569> INCLUDE "internal_commands.ab2"
0003AC1E <internal_commands.ab2@2570> INCLUDE "internal_commands.ab2"
0003AC22 <internal_commands.ab2@2573> INCLUDE "internal_commands.ab2"
0003AC24 <internal_commands.ab2@2574> INCLUDE "internal_commands.ab2"
0003AC28 <internal_commands.ab2@2575> INCLUDE "internal_commands.ab2"
0003AC29 <internal_commands.ab2@2576> INCLUDE "internal_commands.ab2"
0003AC2A <internal_commands.ab2@2577> INCLUDE "internal_commands.ab2"
0003AC2E <internal_commands.ab2@2580> INCLUDE "internal_commands.ab2"
0003AC30 <internal_commands.ab2@2581> INCLUDE "internal_commands.ab2"
0003AC33 <internal_commands.ab2@2582> INCLUDE "internal_commands.ab2"
0003AC34 <internal_commands.ab2@2583> INCLUDE "internal_commands.ab2"
0003AC38 <internal_commands.ab2@2587> INCLUDE "internal_commands.ab2"
0003AC3A <internal_commands.ab2@2588> INCLUDE "internal_commands.ab2"
0003AC41 <internal_commands.ab2@2589> INCLUDE "internal_commands.ab2"
0003AC42 <internal_commands.ab2@2590> INCLUDE "internal_commands.ab2"
0003AC46 <internal_commands.ab2@2594> INCLUDE "internal_commands.ab2"
0003AC48 <internal_commands.ab2@2595> INCLUDE "internal_commands.ab2"
0003AC4E <internal_commands.ab2@2596> INCLUDE "internal_commands.ab2"
0003AC5B <internal_commands.ab2@2597> INCLUDE "internal_commands.ab2"
0003AC5C <internal_commands.ab2@2598> INCLUDE "internal_commands.ab2"
0003AC60 <internal_commands.ab2@2601> INCLUDE "internal_commands.ab2"
0003AC62 <internal_commands.ab2@2602> INCLUDE "internal_commands.ab2"
0003AC69 <internal_commands.ab2@2603> INCLUDE "internal_commands.ab2"
0003AC81 <internal_commands.ab2@2604> INCLUDE "internal_commands.ab2"
0003AC82 <internal_commands.ab2@2605> INCLUDE "internal_commands.ab2"
0003AC86 <internal_commands.ab2@2608> INCLUDE "internal_commands.ab2"
0003AC88 <internal_commands.ab2@2609> INCLUDE "internal_commands.ab2"
0003AC8C <internal_commands.ab2@2610> INCLUDE "internal_commands.ab2"
0003ACAF <internal_commands.ab2@2611> INCLUDE "internal_commands.ab2"
0003ACB0 <internal_commands.ab2@2612> INCLUDE "internal_commands.ab2"
0003ACB4 <internal_commands.ab2@2615> INCLUDE "internal_commands.ab2"
0003ACB6 <internal_commands.ab2@2616> INCLUDE "internal_commands.ab2"
0003ACBD <internal_commands.ab2@2617> INCLUDE "internal_commands.ab2"
0003ACC8 <internal_commands.ab2@2618> INCLUDE "internal_commands.ab2"
0003ACCC <internal_commands.ab2@2622> INCLUDE "internal_commands.ab2"
0003ACCE <internal_commands.ab2@2623> INCLUDE "internal_commands.ab2"
0003ACD4 <internal_commands.ab2@2624> INCLUDE "internal_commands.ab2"
0003ACD5 <internal_commands.ab2@2625> INCLUDE "internal_commands.ab2"
0003ACD6 <internal_commands.ab2@2626> INCLUDE "internal_commands.ab2"
0003ACDA <internal_commands.ab2@2629> INCLUDE "internal_commands.ab2"
0003ACDC <internal_commands.ab2@2630> INCLUDE "internal_commands.ab2"
0003ACE1 <internal_commands.ab2@2631> INCLUDE "internal_commands.ab2"
0003ACE2 <internal_commands.ab2@2632> INCLUDE "internal_commands.ab2"
0003ACE6 <internal_commands.ab2@2636> INCLUDE "internal_commands.ab2"
0003ACE8 <internal_commands.ab2@2637> INCLUDE "internal_commands.ab2"
0003ACEF <internal_commands.ab2@2638> INCLUDE "internal_commands.ab2"
0003AD01 <internal_commands.ab2@2639> INCLUDE "internal_commands.ab2"
0003AD02 <internal_commands.ab2@2640> INCLUDE "internal_commands.ab2"
0003AD06 <internal_commands.ab2@2643> INCLUDE "internal_commands.ab2"
0003AD08 <internal_commands.ab2@2644> INCLUDE "internal_commands.ab2"
0003AD12 <internal_commands.ab2@2645> INCLUDE "internal_commands.ab2"
0003AD13 <internal_commands.ab2@2646> INCLUDE "internal_commands.ab2"
0003AD14 <internal_commands.ab2@2647> INCLUDE "internal_commands.ab2"
0003AD18 <internal_commands.ab2@2650> INCLUDE "internal_commands.ab2"
0003AD1A <internal_commands.ab2@2651> INCLUDE "internal_commands.ab2"
0003AD22 <internal_commands.ab2@2652> INCLUDE "internal_commands.ab2"
0003AD2F <internal_commands.ab2@2653> INCLUDE "internal_commands.ab2"
0003AD30 <internal_commands.ab2@2654> INCLUDE "internal_commands.ab2"
0003AD34 <internal_commands.ab2@2657> INCLUDE "internal_commands.ab2"
0003AD36 <internal_commands.ab2@2658> INCLUDE "internal_commands.ab2"
0003AD39 <internal_commands.ab2@2659> INCLUDE "internal_commands.ab2"
0003AD74 <internal_commands.ab2@2660> INCLUDE "internal_commands.ab2"
0003AD78 <internal_commands.ab2@2664> INCLUDE "internal_commands.ab2"
0003AD7A <internal_commands.ab2@2665> INCLUDE "internal_commands.ab2"
0003AD7E <internal_commands.ab2@2666> INCLUDE "internal_commands.ab2"
0003AD7F <internal_commands.ab2@2667> INCLUDE "internal_commands.ab2"
0003AD80 <internal_commands.ab2@2668> INCLUDE "internal_commands.ab2"
0003AD84 <internal_commands.ab2@2671> INCLUDE "internal_commands.ab2"
0003AD86 <internal_commands.ab2@2672> INCLUDE "internal_commands.ab2"
0003AD8E <internal_commands.ab2@2673> INCLUDE "internal_commands.ab2"
0003AD8F <internal_commands.ab2@2674> INCLUDE "internal_commands.ab2"
0003AD90 <internal_commands.ab2@2675> INCLUDE "internal_commands.ab2"
0003AD94 <internal_commands.ab2@2678> INCLUDE "internal_commands.ab2"
0003AD96 <internal_commands.ab2@2679> INCLUDE "internal_commands.ab2"
0003AD9E <internal_commands.ab2@2680> INCLUDE "internal_commands.ab2"
0003ADAE <internal_commands.ab2@2681> INCLUDE "internal_commands.ab2"
0003ADB2 <internal_commands.ab2@2685> INCLUDE "internal_commands.ab2"
0003ADB4 <internal_commands.ab2@2686> INCLUDE "internal_commands.ab2"
0003ADBD <internal_commands.ab2@2687> INCLUDE "internal_commands.ab2"
0003ADC5 <internal_commands.ab2@2688> INCLUDE "internal_commands.ab2"
0003ADC6 <internal_commands.ab2@2689> INCLUDE "internal_commands.ab2"
0003ADCA <internal_commands.ab2@2692> INCLUDE "internal_commands.ab2"
0003ADCC <internal_commands.ab2@2693> INCLUDE "internal_commands.ab2"
0003ADD4 <internal_commands.ab2@2694> INCLUDE "internal_commands.ab2"
0003ADDD <internal_commands.ab2@2695> INCLUDE "internal_commands.ab2"
0003ADDE <internal_commands.ab2@2696> INCLUDE "internal_commands.ab2"
0003ADE2 <internal_commands.ab2@2699> INCLUDE "internal_commands.ab2"
0003ADE4 <internal_commands.ab2@2700> INCLUDE "internal_commands.ab2"
0003ADEC <internal_commands.ab2@2701> INCLUDE "internal_commands.ab2"
0003ADED <internal_commands.ab2@2702> INCLUDE "internal_commands.ab2"
0003ADEE <internal_commands.ab2@2703> INCLUDE "internal_commands.ab2"
0003ADF2 <internal_commands.ab2@2706> INCLUDE "internal_commands.ab2"
0003ADF4 <internal_commands.ab2@2707> INCLUDE "internal_commands.ab2"
0003ADFA <internal_commands.ab2@2708> INCLUDE "internal_commands.ab2"
0003ADFB <internal_commands.ab2@2709> INCLUDE "internal_commands.ab2"
0003ADFC <internal_commands.ab2@2710> INCLUDE "internal_commands.ab2"
0003AE00 <internal_commands.ab2@2713> INCLUDE "internal_commands.ab2"
0003AE02 <internal_commands.ab2@2714> INCLUDE "internal_commands.ab2"
0003AE09 <internal_commands.ab2@2715> INCLUDE "internal_commands.ab2"
0003AE0A <internal_commands.ab2@2716> INCLUDE "internal_commands.ab2"
0003AE0E <internal_commands.ab2@2720> INCLUDE "internal_commands.ab2"
0003AE10 <internal_commands.ab2@2721> INCLUDE "internal_commands.ab2"
0003AE17 <internal_commands.ab2@2722> INCLUDE "internal_commands.ab2"
0003AE18 <internal_commands.ab2@2723> INCLUDE "internal_commands.ab2"
0003AE1C <internal_commands.ab2@2727> INCLUDE "internal_commands.ab2"
0003AE1E <internal_commands.ab2@2728> INCLUDE "internal_commands.ab2"
0003AE25 <internal_commands.ab2@2729> INCLUDE "internal_commands.ab2"
0003AE26 <internal_commands.ab2@2730> INCLUDE "internal_commands.ab2"
0003AE2A <internal_commands.ab2@2734> INCLUDE "internal_commands.ab2"
0003AE2C <internal_commands.ab2@2735> INCLUDE "internal_commands.ab2"
0003AE33 <internal_commands.ab2@2736> INCLUDE "internal_commands.ab2"
0003AE34 <internal_commands.ab2@2737> INCLUDE "internal_commands.ab2"
0003AE38 <internal_commands.ab2@2741> INCLUDE "internal_commands.ab2"
0003AE3A <internal_commands.ab2@2742> INCLUDE "internal_commands.ab2"
0003AE3F <internal_commands.ab2@2743> INCLUDE "internal_commands.ab2"
0003AE55 <internal_commands.ab2@2744> INCLUDE "internal_commands.ab2"
0003AE56 <internal_commands.ab2@2745> INCLUDE "internal_commands.ab2"
0003AE5A <internal_commands.ab2@2748> INCLUDE "internal_commands.ab2"
0003AE5C <internal_commands.ab2@2749> INCLUDE "internal_commands.ab2"
0003AE66 <internal_commands.ab2@2750> INCLUDE "internal_commands.ab2"
0003AE67 <internal_commands.ab2@2751> INCLUDE "internal_commands.ab2"
0003AE68 <internal_commands.ab2@2752> INCLUDE "internal_commands.ab2"
0003AE6C <internal_commands.ab2@2755> INCLUDE "internal_commands.ab2"
0003AE6E <internal_commands.ab2@2756> INCLUDE "internal_commands.ab2"
0003AE79 <internal_commands.ab2@2757> INCLUDE "internal_commands.ab2"
0003AE7A <internal_commands.ab2@2758> INCLUDE "internal_commands.ab2"
0003AE7E <internal_commands.ab2@2762> INCLUDE "internal_commands.ab2"
0003AE80 <internal_commands.ab2@2763> INCLUDE "internal_commands.ab2"
0003AE8C <internal_commands.ab2@2764> INCLUDE "internal_commands.ab2"
0003AEB9 <internal_commands.ab2@2765> INCLUDE "internal_commands.ab2"
0003AEBA <internal_commands.ab2@2766> INCLUDE "internal_commands.ab2"
0003AEBE <internal_commands.ab2@2769> INCLUDE "internal_commands.ab2"
0003AEC0 <internal_commands.ab2@2770> INCLUDE "internal_commands.ab2"
0003AEC8 <internal_commands.ab2@2771> INCLUDE "internal_commands.ab2"
0003AEFF <internal_commands.ab2@2772> INCLUDE "internal_commands.ab2"
0003AF00 <internal_commands.ab2@2773> INCLUDE "internal_commands.ab2"
0003AF04 <internal_commands.ab2@2776> INCLUDE "internal_commands.ab2"
0003AF06 <internal_commands.ab2@2777> INCLUDE "internal_commands.ab2"
0003AF0E <internal_commands.ab2@2778> INCLUDE "internal_commands.ab2"
0003AF2D <internal_commands.ab2@2779> INCLUDE "internal_commands.ab2"
0003AF2E <internal_commands.ab2@2780> INCLUDE "internal_commands.ab2"
0003AF32 <internal_commands.ab2@2783> INCLUDE "internal_commands.ab2"
0003AF34 <internal_commands.ab2@2784> INCLUDE "internal_commands.ab2"
0003AF3B <internal_commands.ab2@2785> INCLUDE "internal_commands.ab2"
0003AF71 <internal_commands.ab2@2786> INCLUDE "internal_commands.ab2"
0003AF72 <internal_commands.ab2@2787> INCLUDE "internal_commands.ab2"
0003AF76 <internal_commands.ab2@2790> INCLUDE "internal_commands.ab2"
0003AF78 <internal_commands.ab2@2791> INCLUDE "internal_commands.ab2"
0003AF81 <internal_commands.ab2@2792> INCLUDE "internal_commands.ab2"
0003AFB6 <internal_commands.ab2@2793> INCLUDE "internal_commands.ab2"
0003AFBA <internal_commands.ab2@2797> INCLUDE "internal_commands.ab2"
0003AFBC <internal_commands.ab2@2798> INCLUDE "internal_commands.ab2"
0003AFCC <internal_commands.ab2@2799> INCLUDE "internal_commands.ab2"
0003B003 <internal_commands.ab2@2800> INCLUDE "internal_commands.ab2"
0003B004 <internal_commands.ab2@2801> INCLUDE "internal_commands.ab2"
0003B004 <AmiBlitz3.ab2@28303> INCLUDE "internal_commands.ab2"
0003B008 <AmiBlitz3.ab2@28308>            Dc.l cif_lt                                     ;ciflt
0003B00C <AmiBlitz3.ab2@28309>            Dc.l cif_eq                                     ;cifeq
0003B010 <AmiBlitz3.ab2@28310>            Dc.l cif_gt                                     ;cifgt
0003B014 <AmiBlitz3.ab2@28311>            Ds.l 1                                          ;0
0003B018 <AmiBlitz3.ab2@28312>            Dc.l cif_le                                     ;cifle
0003B01C <AmiBlitz3.ab2@28313>            Dc.l cif_ne                                     ;cifne
0003B020 <AmiBlitz3.ab2@28314>            Dc.l cif_le                                     ;cifge
0003B024 <AmiBlitz3.ab2@28315>            Ds.l 1                                          ;0
0003B028 <AmiBlitz3.ab2@28316>            Dc.l cif_ge                                     ;cifge
0003B02C <AmiBlitz3.ab2@28317>            Dc.l cif_ne                                     ;cifne
0003B030 <AmiBlitz3.ab2@28318>            Dc.l cif_ge                                     ;cifge
0003B034 <AmiBlitz3.ab2@28319>            Ds.l 1                                          ;0
0003B038 <AmiBlitz3.ab2@28322>            Dc.l do_newtype                                 ;donewtype
0003B03C <AmiBlitz3.ab2@28323>            Dc.l do_end                                     ;doend
0003B040 <AmiBlitz3.ab2@28324>            Dc.l do_let                                     ;dolet
0003B044 <AmiBlitz3.ab2@28325>            Dc.l do_dim                                     ;dodim
0003B048 <AmiBlitz3.ab2@28326>            Dc.l do_goto                                    ;dogoto
0003B04C <AmiBlitz3.ab2@28327>            Dc.l do_gosub                                   ;dogosub
0003B050 <AmiBlitz3.ab2@28328>            Dc.l do_return                                  ;doreturn
0003B054 <AmiBlitz3.ab2@28329>            Dc.l do_statement                               ;dostatement
0003B058 <AmiBlitz3.ab2@28330>            Dc.l do_function                                ;dofunc
0003B05C <AmiBlitz3.ab2@28331>            Dc.l do_mousewait                               ;domwait
0003B060 <AmiBlitz3.ab2@28332>            Dc.l do_if                                      ;doif
0003B064 <AmiBlitz3.ab2@28333>            Dc.l do_while                                   ;dowhile
0003B068 <AmiBlitz3.ab2@28334>            Dc.l do_Macro                                   ;domacro
0003B06C <AmiBlitz3.ab2@28335>            Dc.l do_select                                  ;doselect
0003B070 <AmiBlitz3.ab2@28336>            Dc.l do_case                                    ;docase
0003B074 <AmiBlitz3.ab2@28337>            Dc.l do_default                                 ;dodefault
0003B078 <AmiBlitz3.ab2@28338>            Dc.l do_AsmExit                                 ;doasmexit
0003B07C <AmiBlitz3.ab2@28339>            Dc.l do_xinclude                                ;doxinclude
0003B080 <AmiBlitz3.ab2@28340>            Dc.l do_INCLUDE                                 ;doinclude
0003B084 <AmiBlitz3.ab2@28341>            Dc.l do_syntax                                  ;syntaxerr
0003B088 <AmiBlitz3.ab2@28342>            Dc.l do_shared                                  ;doshared
0003B08C <AmiBlitz3.ab2@28343>            Dc.l do_for                                     ;dofor
0003B090 <AmiBlitz3.ab2@28344>            Dc.l do_next                                    ;donext
0003B094 <AmiBlitz3.ab2@28345>            Dc.l syntaxerr                                  ; To
0003B098 <AmiBlitz3.ab2@28346>            Dc.l syntaxerr                                  ; Step
0003B09C <AmiBlitz3.ab2@28347>            Dc.l do_data                                    ;dodata
0003B0A0 <AmiBlitz3.ab2@28348>            Dc.l do_read                                    ;doread
0003B0A4 <AmiBlitz3.ab2@28352>            Dc.l syntaxerr                                  ; CNIF
0003B0A8 <AmiBlitz3.ab2@28353>            Dc.l syntaxerr                                  ; CSIF
0003B0AC <AmiBlitz3.ab2@28354>            Dc.l syntaxerr                                  ; CELSE
0003B0B0 <AmiBlitz3.ab2@28355>            Dc.l syntaxerr                                  ; CEND
0003B0B4 <AmiBlitz3.ab2@28356>            Dc.l do_cerr                                    ;docerr
0003B0B8 <AmiBlitz3.ab2@28357>            Dc.l do_then                                    ;dothen
0003B0BC <AmiBlitz3.ab2@28358>            Dc.l do_else                                    ;doelse
0003B0C0 <AmiBlitz3.ab2@28359>            Dc.l do_even4                                   ;doeven4
0003B0C4 <AmiBlitz3.ab2@28360>            Dc.l do_even8                                   ;doeven8
0003B0C8 <AmiBlitz3.ab2@28362>            Dc.l do_dc                                      ;dodc
0003B0CC <AmiBlitz3.ab2@28363>            Dc.l do_ds                                      ;dods
0003B0D0 <AmiBlitz3.ab2@28364>            Dc.l do_even                                    ;doeven
0003B0D4 <AmiBlitz3.ab2@28365>            Dc.l do_dcb                                     ;dodcb
0003B0D8 <AmiBlitz3.ab2@28366>            Dc.l do_setreg                                  ;dosetreg
0003B0DC <AmiBlitz3.ab2@28367>            Dc.l do_IncBin                                  ;doincbin
0003B0E0 <AmiBlitz3.ab2@28368>            Dc.l do_free                                    ;dofree
0003B0E4 <AmiBlitz3.ab2@28369>            Dc.l do_use                                     ;douse
0003B0E8 <AmiBlitz3.ab2@28370>            Dc.l do_Stop                                    ;dostop
0003B0EC <AmiBlitz3.ab2@28371>            Dc.l do_Cont                                    ;docont
0003B0F0 <AmiBlitz3.ab2@28372>            Dc.l syntaxerr                                  ;syntaxeer
0003B0F4 <AmiBlitz3.ab2@28373>            Dc.l do_SetInt                                  ;dosetint
0003B0F8 <AmiBlitz3.ab2@28374>            Dc.l do_ClrInt                                  ;doclrint
0003B0FC <AmiBlitz3.ab2@28375>            Dc.l do_MaxLen                                  ;domaxlen
0003B100 <AmiBlitz3.ab2@28376>            Dc.l do_DEFTYPE                                 ;dodeftype
0003B104 <AmiBlitz3.ab2@28377>            Dc.l do_BLITZ                                   ;doblitz
0003B108 <AmiBlitz3.ab2@28378>            Dc.l do_AMIGA                                   ;doamiga
0003B10C <AmiBlitz3.ab2@28379>            Dc.l do_QAMIGA                                  ;doqamiga
0003B110 <AmiBlitz3.ab2@28380>            Dc.l do_VWait                                   ;dovwait
0003B114 <AmiBlitz3.ab2@28381>            Dc.l do_LibJsr                                  ;dolibjsr
0003B118 <AmiBlitz3.ab2@28382>            Dc.l do_TokeJsr                                 ;dotokejsr
0003B11C <AmiBlitz3.ab2@28383>            Dc.l do_BLibJsr                                 ;doblibjsr
0003B120 <AmiBlitz3.ab2@28384>            Dc.l _extb                                      ;syntaxerr
0003B124 <AmiBlitz3.ab2@28388>            Dc.l syntaxerr                                  ;syntaxerr      ;flash2 ; for list
0003B128 <AmiBlitz3.ab2@28389>            Dc.l do_SetErr                                  ;doseterr
0003B12C <AmiBlitz3.ab2@28390>            Dc.l do_ClrErr                                  ;doclrerr
0003B130 <AmiBlitz3.ab2@28391>            Dc.l syntaxerr                                  ;syntaxerr
0003B134 <AmiBlitz3.ab2@28392>            Dc.l do_ErrFail                                 ;doerrfail
0003B138 <AmiBlitz3.ab2@28393>            Dc.l syntaxerr
0003B13C <AmiBlitz3.ab2@28394>            Dc.l syntaxerr                                  ;mod
0003B140 <AmiBlitz3.ab2@28395>            Dc.l syntaxerr                                  ;Pi
0003B144 <AmiBlitz3.ab2@28396>            Dc.l do_Repeat                                  ;dorepeat
0003B148 <AmiBlitz3.ab2@28397>            Dc.l do_Until                                   ;dountil
0003B14C <AmiBlitz3.ab2@28398>            Dc.l do_PutReg                                  ;doputreg
0003B150 <AmiBlitz3.ab2@28399>            Dc.l do_Pop                                     ;dopop
0003B154 <AmiBlitz3.ab2@28400>            Dc.l do_INCDIR                                  ;doincdir
0003B158 <AmiBlitz3.ab2@28401>            Dc.l mydo_Endif2                                ;mydoendif2
0003B15C <AmiBlitz3.ab2@28402>            Dc.l do_Wend                                    ;dowend
0003B160 <AmiBlitz3.ab2@28403>            Dc.l do_SysJsr                                  ;dosysjsr
0003B164 <AmiBlitz3.ab2@28404>            Dc.l do_WBStartup                               ;dowbstartup
0003B168 <AmiBlitz3.ab2@28405>            Dc.l syntaxerr
0003B16C <AmiBlitz3.ab2@28406>            Dc.l do_Ongo                                    ;doongo
0003B170 <AmiBlitz3.ab2@28407>            Dc.l syntaxerr
0003B174 <AmiBlitz3.ab2@28408>            Dc.l do_Forever                                 ;doforever
0003B178 <AmiBlitz3.ab2@28409>            Dc.l do_Restore                                 ;dorestore
0003B17C <AmiBlitz3.ab2@28410>            Dc.l do_Exchange                                ;doexchange
0003B180 <AmiBlitz3.ab2@28411>            Dc.l do_USEPATH                                 ;dousepath
0003B184 <AmiBlitz3.ab2@28412>            Dc.l do_CloseEd                                 ;doclosed
0003B188 <AmiBlitz3.ab2@28413>            Dc.l do_NoCli                                   ;donocli
0003B18C <AmiBlitz3.ab2@28414>            Dc.l syntaxerr                                  ;syntaxerr
0003B190 <AmiBlitz3.ab2@28415>            Dc.l syntaxerr                                  ;syntaxerr
0003B194 <AmiBlitz3.ab2@28416>            Dc.l syntaxerr                                  ;syntaxerr
0003B198 <AmiBlitz3.ab2@28417>            Dc.l syntaxerr                                  ;syntaxerr
0003B19C <AmiBlitz3.ab2@28418>            Dc.l syntaxerr                                  ;syntaxerr
0003B1A0 <AmiBlitz3.ab2@28419>            Dc.l do_runerrson                               ;dorunerrson
0003B1A4 <AmiBlitz3.ab2@28420>            Dc.l do_runerrsoff                              ;dorunerrsoff
0003B1A8 <AmiBlitz3.ab2@28421>            Dc.l do_uselastpath
0003B1AC <AmiBlitz3.ab2@28422>            Dc.l do_regload
0003B1B0 <AmiBlitz3.ab2@28423>            Dc.l do_regsave
0003B1B4 <AmiBlitz3.ab2@28424>            Dc.l do_Object
0003B1B8 <AmiBlitz3.ab2@28425>            Dc.l do_usepath2
0003B1BC <AmiBlitz3.ab2@28426>            Dc.l do_LastRunErrsMode
0003B1C0 <AmiBlitz3.ab2@28449> menu_items:Dc.l menu_compile_run                                ;menuadds oreg source
0003B1C4 <AmiBlitz3.ab2@28450>            Dc.l menu_run
0003B1C8 <AmiBlitz3.ab2@28451>            Dc.l menu_createexecutable
0003B1CC <AmiBlitz3.ab2@28452>            Dc.l menu_dummyfunc          ;was menu_compileroptions
0003B1D0 <AmiBlitz3.ab2@28453>            Dc.l menu_createresidentfile
0003B1D4 <AmiBlitz3.ab2@28454>            Dc.l menu_viewnewtypes
0003B1D8 <AmiBlitz3.ab2@28455>            Dc.l menu_simcliarguments
0003B1DC <AmiBlitz3.ab2@28456>            Dc.l menu_dummyfunc          ;was menu_calculator
0003B1E0 <AmiBlitz3.ab2@28457>            Dc.l menu_reloadlibs
0003B1E4 <AmiBlitz3.ab2@28458>            Dc.l menu_loaddebugmodule
0003B1E8 <AmiBlitz3.ab2@28459>            Dc.l menu_dummyfunc
0003B1EC <AmiBlitz3.ab2@28460>            Dc.l menu_newcreate
0003B1F0 <AmiBlitz3.ab2@28461>            Dc.l menu_dummyfunc
0003B1F4 <AmiBlitz3.ab2@28462>            Dc.l toggledebug
0003B1F8 <AmiBlitz3.ab2@28463>            Dc.l menu_dummyfunc
0003B1FC <AmiBlitz3.ab2@28464>            Dc.l menu_dummyfunc
0003B226 <AmiBlitz3.ab2@28469>   !basic
0003B27C <AmiBlitz3.ab2@28470>   error{!TRANS{"Inavlid amiblitz3 menu item called!"} }
0003B29A <AmiBlitz3.ab2@28471>   !asm
0003B29C <AmiBlitz3.ab2@28472> RTS
0003B29D <AmiBlitz3.ab2@28478> set_autorun:               Dc.b $00
0003B2A2 <AmiBlitz3.ab2@28479> autorun:                   Dc.b $80,$01,$01,$00,$01
0003B2A3 <AmiBlitz3.ab2@28481> set_interruptcheck:        Dc.b $00
0003B2A8 <AmiBlitz3.ab2@28482> interruptcheck             Dc.b $80,$01,$01,$00,$01
0003B2A9 <AmiBlitz3.ab2@28484> set_assemblercheck:        Ds.b 1
0003B2AE <AmiBlitz3.ab2@28485> assemblercheck:            Dc.b $00,$01,$01,$00,$01
0003B2AF <AmiBlitz3.ab2@28487> set_overflowcheck:         Ds.b 1
0003B2B4 <AmiBlitz3.ab2@28488> overflowcheck:             Dc.b $00,$01,$01,$00,$01
0003B2BA <AmiBlitz3.ab2@28490> default_obsolete:          Dc.b $00,$80,$01,$01,$00,$01
0003B2C0 <AmiBlitz3.ab2@28491> default_interruptcheck:    Dc.b $00,$80,$01,$01,$00,$01
0003B2C6 <AmiBlitz3.ab2@28492> default_overflowcheck:     Dc.b $00,$80,$01,$01,$00,$01
0003B2C8 <AmiBlitz3.ab2@28493> Even4
0003B2D4 <AmiBlitz3.ab2@28496> tsthead:                   Dc.l $000003F3,$00000000,$00000001
0003B2DC <AmiBlitz3.ab2@28497>                            Dc.l $00000000,$00000000
0003B2E4 <AmiBlitz3.ab2@28498> tstsize1:                  Dc.l $00000100,$000003E9
0003B2E8 <AmiBlitz3.ab2@28499> tstsize2:                  Dc.l $00000100
0003B2EC <AmiBlitz3.ab2@28500> tstend:                    Dc.l $000003EC
0003B2F4 <AmiBlitz3.ab2@28501> tstsize3:                  Ds.l 2
0003B2F8 <AmiBlitz3.ab2@28502> tstdone:                   Dc.l $000003F2
0003B2FC <AmiBlitz3.ab2@28505> edstruct:                  Dc.l tokens                     ;data for ted
0003B300 <AmiBlitz3.ab2@28509>                            Dc.l 0
0003B304 <AmiBlitz3.ab2@28511>                            Dc.l read_xtrafile              ;load .xtra routine
0003B308 <AmiBlitz3.ab2@28512>                            Dc.l write_xtrafile             ;save .xtra routine
0003B30C <AmiBlitz3.ab2@28513>                            Dc.l call_menuentry             ;Menu Routine
0003B310 <AmiBlitz3.ab2@28514>                            Ds.l 1                          ;cleanup (?)
0003B314 <AmiBlitz3.ab2@28515>                            Dc.b ":",34,".;"
0003B410 <AmiBlitz3.ab2@28518> 
0003B4F0 <AmiBlitz3.ab2@28519>                            Ds.l 56
0003B4F2 <AmiBlitz3.ab2@28524> lslimm:                    Dc.b $E1,$48                                             ;LSL.W   #8,D0
0003B4F6 <AmiBlitz3.ab2@28527> use:                       Dc.b $26,$6D,$00,$00                                     ;MOVEA.L $0000(A5),A3
0003B4F8 <AmiBlitz3.ab2@28528>                            Dc.b $D6,$C0                                             ;ADDA.W  D0,A3
0003B4FC <AmiBlitz3.ab2@28529>                            Dc.b $2B,$4B,$00,$00                                     ;MOVE.L  A3,$0000(A5)
0003B502 <AmiBlitz3.ab2@28533> beginarr:                  Dc.b $20,$3C,$00,$00,$00,$00                             ;MOVE.L  #$00000000,D0
0003B504 <AmiBlitz3.ab2@28537>                            Dc.b $C0,$C1                                             ;MULU.W  D1,D0
0003B508 <AmiBlitz3.ab2@28540> putarr:                    Dc.b $2B,$40 :                            Dc.b $00,$00   ;MOVE.L  D0,$0000(A5)
0003B50C <AmiBlitz3.ab2@28543> doarr:                     Dc.b $34,$3C,$00,$00                                     ;MOVE.W  #$0000,D2
0003B510 <AmiBlitz3.ab2@28544>                            Dc.b $36,$3C,$00,$00                                     ;MOVE.W  #$0000,D3
0003B512 <AmiBlitz3.ab2@28550>                            Dc.b $4A,$40                                             ;TST.W   D0
0003B514 <AmiBlitz3.ab2@28554>                            Dc.b $4A,$80                                             ;TST.L   D0
0003B516 <AmiBlitz3.ab2@28557> nops8:                     Dc.b $4E,$71                                             ;NOP
0003B518 <AmiBlitz3.ab2@28558>                            Dc.b $4E,$71                                             ;NOP
0003B51A <AmiBlitz3.ab2@28559>                            Dc.b $4E,$71                                             ;NOP
0003B51C <AmiBlitz3.ab2@28560>                            Dc.b $4E,$71                                             ;NOP
0003B51E <AmiBlitz3.ab2@28561> nops4:                     Dc.b $4E,$71                                             ;NOP
0003B520 <AmiBlitz3.ab2@28563>                            Dc.b $4E,$71                                             ;NOP
0003B522 <AmiBlitz3.ab2@28564>                            Dc.b $4E,$71                                             ;NOP
0003B524 <AmiBlitz3.ab2@28565>                            Dc.b $4E,$71                                             ;NOP
0003B528 <AmiBlitz3.ab2@28569> dataget:                   Dc.b $26,$6D :                            Dc.b $00,$00   ;MOVEA.L $0000(A5),A3
0003B52C <AmiBlitz3.ab2@28572> dataput:                   Dc.b $2B,$4B :                            Dc.b $00,$00   ;MOVE.L  A3,$0000(A5)
0003B52E <AmiBlitz3.ab2@28575> stlenget:                  Dc.b $2F,$1B                                             ;MOVE.L  (A3)+,-(A7)
0003B530 <AmiBlitz3.ab2@28578> stalign:                   Dc.b $52,$4B                                             ;ADDQ.W  #1,A3
0003B532 <AmiBlitz3.ab2@28579>                            Dc.b $C1,$8B                                             ;EXG D0,A3
0003B536 <AmiBlitz3.ab2@28580>                            Dc.b $08,$80,$00,$00                                     ;BCLR    #0,D0
0003B538 <AmiBlitz3.ab2@28581>                            Dc.b $C1,$8B                                             ;EXG D0,A3
0003B53A <AmiBlitz3.ab2@28587> dataletb:                  Dc.b $52,$4B                                             ;ADDQ.W  #1,A3
0003B53E <AmiBlitz3.ab2@28588>                            Dc.b $1B,$5B,$00,$00                                     ;MOVE.B  (A3)+,$0000(A5)
0003B540 <AmiBlitz3.ab2@28593> dataletbl:                 Dc.b $52,$4B                                             ;ADDQ.W  #1,A3
0003B544 <AmiBlitz3.ab2@28594>                            Dc.b $19,$5B,$00,$00                                     ;MOVE.B  (A3)+,$0000(A4)
0003B546 <AmiBlitz3.ab2@28598> dataletb2:                 Dc.b $52,$4B                                             ;ADDQ.W  #1,A3
0003B548 <AmiBlitz3.ab2@28599>                            Dc.b $14,$9B                                             ;MOVE.B  (A3)+,(A2)
0003B54C <AmiBlitz3.ab2@28605> dataletw:                  Dc.b $3B,$5B,$00,$00                                     ;MOVE.W  (A3)+,$0000(A5)
0003B54E <AmiBlitz3.ab2@28606>                            Dc.b $34,$9B                                             ;MOVE.W  (A3)+,(A2)
0003B552 <AmiBlitz3.ab2@28607>                            Dc.b $39,$5B,$00,$00                                     ;MOVE.W  (A3)+,$0000(A4)
0003B556 <AmiBlitz3.ab2@28611> dataletl:                  Dc.b $2B,$5B,$00,$00                                     ;MOVE.L  (A3)+,$0000(A5)
0003B558 <AmiBlitz3.ab2@28612>                            Dc.b $24,$9B                                             ;MOVE.L  (A3)+,(A2)
0003B55C <AmiBlitz3.ab2@28613>                            Dc.b $29,$5B,$00,$00                                     ;MOVE.L  (A3)+,$0000(A4)
0003B55E <AmiBlitz3.ab2@28616> nextfixw:                  Dc.b $50,$4F                                             ;ADDQ.W  #8,A7
0003B562 <AmiBlitz3.ab2@28619> nextfixw2:                 Dc.b $4F,$EF,$00,$0A                                     ;LEA $000A(A7),A7
0003B566 <AmiBlitz3.ab2@28622> nextfixl:                  Dc.b $4F,$EF,$00,$0C                                     ;LEA $000C(A7),A7
0003B56A <AmiBlitz3.ab2@28625> nextfixl2:                 Dc.b $4F,$EF,$00,$0E                                     ;LEA $000E(A7),A7
0003B56E <AmiBlitz3.ab2@28629>                            Dc.b $24,$6F,$00,$04                                     ;MOVEA.L $0004(A7),A2
0003B570 <AmiBlitz3.ab2@28630>                            Dc.b $30,$17                                             ;MOVE.W  (A7),D0
0003B572 <AmiBlitz3.ab2@28631>                            Dc.b $D1,$12                                             ;ADD.B   D0,(A2)
0003B576 <AmiBlitz3.ab2@28636>                            Dc.b $24,$6F,$00,$04                                     ;MOVEA.L $0004(A7),A2
0003B578 <AmiBlitz3.ab2@28637>                            Dc.b $30,$17                                             ;MOVE.W  (A7),D0
0003B57A <AmiBlitz3.ab2@28638>                            Dc.b $D1,$52                                             ;ADD.W   D0,(A2)
0003B57E <AmiBlitz3.ab2@28643>                            Dc.b $24,$6F,$00,$08                                     ;MOVEA.L $0008(A7),A2
0003B580 <AmiBlitz3.ab2@28644>                            Dc.b $20,$17                                             ;MOVE.L  (A7),D0
0003B582 <AmiBlitz3.ab2@28645>                            Dc.b $D1,$92                                             ;ADD.L   D0,(A2)
0003B586 <AmiBlitz3.ab2@28650>                            Dc.b $24,$6F,$00,$08                                     ;MOVEA.L $0008(A7),A2
0003B588 <AmiBlitz3.ab2@28651>                            Dc.b $20,$12                                             ;MOVE.L  (A2),D0
0003B58A <AmiBlitz3.ab2@28652>                            Dc.b $22,$17                                             ;MOVE.L  (A7),D1
0003B58E <AmiBlitz3.ab2@28653>                            Dc.b $4E,$AE,$FF,$BE                                     ;JSR -$0042(A6)
0003B590 <AmiBlitz3.ab2@28654>                            Dc.b $24,$80                                             ;MOVE.L  D0,(A2)
0003B594 <AmiBlitz3.ab2@28659>                            Dc.b $24,$6F,$00,$04                                     ;MOVEA.L $0004(A7),A2
0003B596 <AmiBlitz3.ab2@28660>                            Dc.b $10,$12                                             ;MOVE.B  (A2),D0
0003B59A <AmiBlitz3.ab2@28661>                            Dc.b $32,$2F,$00,$02                                     ;MOVE.W  $0002(A7),D1
0003B59C <AmiBlitz3.ab2@28662>                            Dc.b $4A,$57                                             ;TST.W   (A7)
0003B5A0 <AmiBlitz3.ab2@28663>                            Dc.b $6A,$00,$00,$04                                     ;BPL.W   L000001         ;.skip org source
0003B5A2 <AmiBlitz3.ab2@28664>                            Dc.b $C1,$41                                             ;EXG D0,D1
0003B5A4 <AmiBlitz3.ab2@28667>                            Dc.b $B0,$01                                             ;CMP.B   D1,D0
0003B5A8 <AmiBlitz3.ab2@28672>                            Dc.b $24,$6F,$00,$04                                     ;MOVEA.L $0004(A7),A2
0003B5AA <AmiBlitz3.ab2@28673>                            Dc.b $30,$12                                             ;MOVE.W  (A2),D0
0003B5AE <AmiBlitz3.ab2@28674>                            Dc.b $32,$2F,$00,$02                                     ;MOVE.W  $0002(A7),D1
0003B5B0 <AmiBlitz3.ab2@28675>                            Dc.b $4A,$57                                             ;TST.W   (A7)
0003B5B4 <AmiBlitz3.ab2@28676>                            Dc.b $6A,$00,$00,$04                                     ;BPL.W   L000002         ;.skip org source
0003B5B6 <AmiBlitz3.ab2@28677>                            Dc.b $C1,$41                                             ;EXG D0,D1
0003B5B8 <AmiBlitz3.ab2@28680>                            Dc.b $B0,$41                                             ;CMP.W   D1,D0
0003B5BC <AmiBlitz3.ab2@28685>                            Dc.b $24,$6F,$00,$08                                     ;MOVEA.L $0008(A7),A2
0003B5BE <AmiBlitz3.ab2@28686>                            Dc.b $20,$12                                             ;MOVE.L  (A2),D0
0003B5C2 <AmiBlitz3.ab2@28687>                            Dc.b $22,$2F,$00,$04                                     ;MOVE.L  $0004(A7),D1
0003B5C4 <AmiBlitz3.ab2@28688>                            Dc.b $4A,$57                                             ;TST.W   (A7)
0003B5C8 <AmiBlitz3.ab2@28689>                            Dc.b $6A,$00,$00,$04                                     ;BPL.W   L000003         ;.skip org source
0003B5CA <AmiBlitz3.ab2@28690>                            Dc.b $C1,$41                                             ;EXG D0,D1
0003B5CC <AmiBlitz3.ab2@28693>                            Dc.b $B0,$81                                             ;CMP.L   D1,D0
0003B5D0 <AmiBlitz3.ab2@28698>                            Dc.b $24,$6F,$00,$08                                     ;MOVEA.L $0008(A7),A2
0003B5D2 <AmiBlitz3.ab2@28699>                            Dc.b $20,$12                                             ;MOVE.L  (A2),D0
0003B5D6 <AmiBlitz3.ab2@28700>                            Dc.b $22,$2F,$00,$04                                     ;MOVE.L  $0004(A7),D1
0003B5DC <AmiBlitz3.ab2@28701>                            Dc.b $08,$2F,$00,$07,$00,$03                             ;BTST    #7,$0003(A7)
0003B5E0 <AmiBlitz3.ab2@28702>                            Dc.b $67,$00,$00,$04                                     ;BEQ.W   L000004
0003B5E2 <AmiBlitz3.ab2@28703>                            Dc.b $C1,$41                                             ;EXG D0,D1
0003B5E6 <AmiBlitz3.ab2@28710>                            Dc.b $4E,$AE,$FF,$D6                                     ;JSR -$002A(A6)
0003B5E8 <AmiBlitz3.ab2@28714> swapd0:                    Dc.b $48,$40                                             ;SWAP    D0
0003B5EA <AmiBlitz3.ab2@28717> pushindex:                 Dc.b $2F,$0A                                             ;MOVE.L  A2,-(A7)
0003B5EE <AmiBlitz3.ab2@28720> leaamp:                    Dc.b $45,$ED :                            Dc.b $00,$00   ;LEA $0000(A5),A2
0003B5F0 <AmiBlitz3.ab2@28721> leaamp2:                   Dc.b $20,$0A                                             ;MOVE.L  A2,D0
0003B5F4 <AmiBlitz3.ab2@28724> leaampl:                   Dc.b $45,$EC :                            Dc.b $00,$00   ;LEA $0000(A4),A2
0003B5F6 <AmiBlitz3.ab2@28727> stamp:                     Dc.b $20,$12                                             ;MOVE.L  (A2),D0
0003B5FA <AmiBlitz3.ab2@28730> stamp2:                    Dc.b $24,$6D :                            Dc.b $00,$00   ;MOVEA.L $0000(A5),A2
0003B5FC <AmiBlitz3.ab2@28734>                            Dc.b $58,$4F                                             ;ADDQ.W  #4,A7
0003B5FE <AmiBlitz3.ab2@28737> pushd0wd:                  Dc.b $3F,$00                                             ;MOVE.W  D0,-(A7)
0003B600 <AmiBlitz3.ab2@28740> pushd0l:                   Dc.b $2F,$00                                             ;MOVE.L  D0,-(A7)
0003B604 <AmiBlitz3.ab2@28743> movenumrep:                Dc.b $3E,$3C :                            Dc.b $00,$00   ;MOVE.W  #$0000,D7
0003B608 <AmiBlitz3.ab2@28746> preplibst:                 Dc.b $45,$EF :                            Dc.b $00,$00   ;LEA $0000(A7),A2
0003B60C <AmiBlitz3.ab2@28749> fixlibst:                  Dc.b $4F,$EF :                            Dc.b $00,$00   ;LEA $0000(A7),A7
0003B60E <AmiBlitz3.ab2@28752> pushdn:                    Dc.b $2F,$00                                             ;MOVE.L  D0,-(A7)
0003B610 <AmiBlitz3.ab2@28755> movea3a7:                  Dc.b $2F,$0B                                             ;MOVE.L  A3,-(A7)
0003B614 <AmiBlitz3.ab2@28758> movestst2:                 Dc.b $20,$2F :                            Dc.b $00,$06   ;MOVE.L  $0006(A7),D0
0003B61A <AmiBlitz3.ab2@28759>                            Dc.b $3F,$6F,$00,$04,$00,$08                             ;MOVE.W  $0004(A7),$0008(A7)
0003B61C <AmiBlitz3.ab2@28760>                            Dc.b $2E,$9F                                             ;MOVE.L  (A7)+,(A7)
0003B620 <AmiBlitz3.ab2@28764> movea7dn:                  Dc.b $20,$2F :                            Dc.b $00,$04   ;MOVE.L  $0004(A7),D0
0003B622 <AmiBlitz3.ab2@28765>                            Dc.b $2E,$9F                                             ;MOVE.L  (A7)+,(A7)
0003B624 <AmiBlitz3.ab2@28769> moved0a3:                  Dc.b $26,$40                                             ;MOVEA.L D0,A3
0003B628 <AmiBlitz3.ab2@28772> movestdn:                  Dc.b $20,$2D :                            Dc.b $00,$00   ;MOVE.L  $0000(A5),D0
0003B62A <AmiBlitz3.ab2@28776>                            Dc.b $20,$0B                                             ;MOVE.L  A3,D0
0003B62C <AmiBlitz3.ab2@28780>                            Dc.b $2F,$00                                             ;MOVE.L  D0,-(A7)
0003B62E <AmiBlitz3.ab2@28784>                            Dc.b $20,$1F                                             ;MOVE.L  (A7)+,D0
0003B632 <AmiBlitz3.ab2@28787> moverts:                   Dc.b $2F,$57 :                            Dc.b $00,$00   ;MOVE.L  (A7),$0000(A7)
0003B636 <AmiBlitz3.ab2@28790> fixstack:                  Dc.b $4F,$EF :                            Dc.b $00,$00   ;LEA $0000(A7),A7
0003B638 <AmiBlitz3.ab2@28793> fixq:                      Dc.b $50,$4F                                             ;ADDQ.W  #8,A7
0003B63A <AmiBlitz3.ab2@28796> fix1:                      Dc.b $2E,$9F                                             ;MOVE.L  (A7)+,(A7)
0003B63C <AmiBlitz3.ab2@28799> movedna3:                  Dc.b $26,$40                                             ;MOVEA.L D0,A3
0003B640 <AmiBlitz3.ab2@28802> least:                     Dc.b $45,$EC :                            Dc.b $00,$00   ;LEA $0000(A4),A2
0003B644 <AmiBlitz3.ab2@28805> funcst:                    Dc.b $2F,$2C :                            Dc.b $00,$00   ;MOVE.L  $0000(A4),-(A7)
0003B646 <AmiBlitz3.ab2@28808> addq4a2:                   Dc.b $58,$4A                                             ;ADDQ.W  #4,A2
0003B648 <AmiBlitz3.ab2@28812>                            Dc.b $2F,$0B                                             ;MOVE.L  A3,-(A7)
0003B64C <AmiBlitz3.ab2@28815>                            Dc.b $2B,$4B,$00,$00                                     ;MOVE.L  A3,$0000(A5)
0003B64E <AmiBlitz3.ab2@28821>                            Dc.b $26,$5F                                             ;MOVEA.L (A7)+,A3
0003B652 <AmiBlitz3.ab2@28824>                            Dc.b $2B,$4B,$00,$00                                     ;MOVE.L  A3,$0000(A5)
0003B654 <AmiBlitz3.ab2@28830>                            Dc.b $CB,$4C                                             ;EXG A5,A4
0003B658 <AmiBlitz3.ab2@28834> linksize:                  Dc.b $4E,$54 :                            Dc.b $00,$00   ;LINK    A4,#-$0000
0003B65A <AmiBlitz3.ab2@28837> unlinka4:                  Dc.b $4E,$5C                                             ;UNLK    A4
0003B65C <AmiBlitz3.ab2@28841>                            Dc.b $2F,$0A                                             ;MOVE.L  A2,-(A7)
0003B65E <AmiBlitz3.ab2@28845>                            Dc.b $24,$5F                                             ;MOVEA.L (A7)+,A2
0003B664 <AmiBlitz3.ab2@28848> gotocode:                  Dc.b $4E,$F9,$00,$00,$00,$00                             ;JMP $00000000
0003B66A <AmiBlitz3.ab2@28851> gosubcode:                 Dc.b $4E,$B9,$00,$00,$00,$00                             ;JSR $00000000
0003B672 <AmiBlitz3.ab2@28855> mwait:                     Dc.b $08,$39,$00,$06,$00,$BF,$E0,$01                     ;BTST    #6,$00BFE001
0003B676 <AmiBlitz3.ab2@28856>                            Dc.b $66,$00,$FF,$F6                                     ;BNE.W   L000005       ;mwait: org source
0003B678 <AmiBlitz3.ab2@28860> libreg:                    Dc.b $20,$00                                             ;MOVE.L  D0,D0
0003B67C <AmiBlitz3.ab2@28863> libbase:                   Dc.b $2C,$6D :                            Dc.b $00,$00   ;MOVEA.L $0000(A5),A6
0003B680 <AmiBlitz3.ab2@28866> libjsr:                    Dc.b $4E,$AE :                            Dc.b $00,$00   ;JSR $0000(A6)
0003B684 <AmiBlitz3.ab2@28869> regtransd:                 Dc.b $20,$2D,$00,$00                                     ;MOVE.L  $0000(A5),D0
0003B688 <AmiBlitz3.ab2@28870> regtransa:                 Dc.b $20,$6D,$00,$00                                     ;MOVEA.L $0000(A5),A0
0003B68C <AmiBlitz3.ab2@28874>                            Dc.b $26,$7C,$00,$00                                     ;MOVEA.L #$00000000,A3
0003B690 <AmiBlitz3.ab2@28876>                            Dc.l $3F1B                                               ;MOVE.W  (A3)+,-(A7)
0003B692 <AmiBlitz3.ab2@28879> movea2dn:                  Dc.b $20,$12                                             ;MOVE.L  (A2),D0
0003B696 <AmiBlitz3.ab2@28882> moved3a5dn:                Dc.b $20,$2D,$00,$00                                     ;MOVE.L  $0000(A5),D0
0003B698 <AmiBlitz3.ab2@28885> stvarget2:                 Dc.b $70,$00                                             ;MOVEQ   #$00,D0
0003B69A <AmiBlitz3.ab2@28886>                            Dc.b $2F,$00                                             ;MOVE.L  D0,-(A7)
0003B69C <AmiBlitz3.ab2@28887>                            Dc.b $4A,$92                                             ;TST.L   (A2)
0003B6A0 <AmiBlitz3.ab2@28888> 
0003B6A2 <AmiBlitz3.ab2@28889>                            Dc.b $20,$52                                             ;MOVEA.L (A2),A0
0003B6A4 <AmiBlitz3.ab2@28890>                            Dc.b $59,$48                                             ;SUBQ.W  #4,A0
0003B6A6 <AmiBlitz3.ab2@28891>                            Dc.b $2E,$98                                             ;MOVE.L  (A0)+,(A7)
0003B6AC <AmiBlitz3.ab2@28893>                            Dc.b $4E,$B9,$00,$00,$00,$00                             ;JSR $00000000
0003B6AE <AmiBlitz3.ab2@28898> addcode:                   Dc.b $20,$1F                                             ;MOVE.L  (A7)+,D0
0003B6B0 <AmiBlitz3.ab2@28899>                            Dc.b $D1,$97                                             ;ADD.L   D0,(A7)
0003B6B2 <AmiBlitz3.ab2@28903> pushlen:                   Dc.b $2F,$18                                             ;MOVE.L  (A0)+,-(A7)
0003B6B6 <AmiBlitz3.ab2@28906> leaa5d3a2:                 Dc.b $45,$ED :                            Dc.b $00,$00   ;LEA $0000(A5),A2
0003B6B8 <AmiBlitz3.ab2@28909> pusha2:                    Dc.b $2F,$0A                                             ;MOVE.L  A2,-(A7)
0003B6BA <AmiBlitz3.ab2@28913>                            Dc.b $24,$57                                             ;MOVEA.L (A7),A2
0003B6BC <AmiBlitz3.ab2@28916> pulla2:                    Dc.b $24,$5F                                             ;MOVEA.L (A7)+,A2
0003B6C0 <AmiBlitz3.ab2@28919> pulla2st:                  Dc.b $24,$6F,$00,$04                                     ;MOVEA.L $0004(A7),A2
0003B6C2 <AmiBlitz3.ab2@28920>                            Dc.b $2E,$9F                                             ;MOVE.L  (A7)+,(A7)
0003B6C6 <AmiBlitz3.ab2@28924> pusha3:                    Dc.b $2F,$2D :                            Dc.b $00,$00   ;MOVE.L  $0000(A5),-(A7)
0003B6CA <AmiBlitz3.ab2@28925> pusha32:                   Dc.b $2B,$4B :                            Dc.b $00,$00   ;MOVE.L  A3,$0000(A5)
0003B6CE <AmiBlitz3.ab2@28929> pulla3:                    Dc.b $2B,$5F :                            Dc.b $00,$00   ;MOVE.L  (A7)+,$0000(A5)
0003B6D2 <AmiBlitz3.ab2@28933> geta3:                     Dc.b $26,$6D :                            Dc.b $00,$00   ;MOVEA.L $0000(A5),A3
0003B6D8 <AmiBlitz3.ab2@28937> numtoa0:                   Dc.b $20,$7C,$00,$00,$00,$00                             ;MOVEA.L #$00000000,A0
0003B6DE <AmiBlitz3.ab2@28940> numtoa2:                   Dc.b $24,$7C,$00,$00,$00,$00                             ;MOVEA.L #$00000000,A2
0003B6E2 <AmiBlitz3.ab2@28944> endarray:                  Dc.b $38,$3C :                            Dc.b $00,$00   ;MOVE.W  #$0000,D4
0003B6E6 <AmiBlitz3.ab2@28948>                            Dc.b $34,$3C,$00,$00                                     ;MOVE.W  #$0000,D2
0003B6EA <AmiBlitz3.ab2@28949>                            Dc.b $36,$3C,$00,$00                                     ;MOVE.W  #$0000,D3
0003B6F0 <AmiBlitz3.ab2@28954>                            Dc.b $20,$3C,$00,$00,$00,$04                             ;MOVE.L  #$00000004,D0
0003B6F4 <AmiBlitz3.ab2@28959>                            Dc.b $2B,$40,$00,$00                                     ;MOVE.L  D0,$0000(A5)
0003B6F6 <AmiBlitz3.ab2@28964>                            Dc.b $C0,$C1                                             ;MULU.W  D1,D0
0003B6FA <AmiBlitz3.ab2@28968>                            Dc.b $2B,$40,$00,$00                                     ;MOVE.L  D0,$0000(A5)
0003B6FC <AmiBlitz3.ab2@28972> movea0:                    Dc.b $24,$52                                             ;MOVEA.L (A2),A2
0003B6FE <AmiBlitz3.ab2@28975> adda0a0:                   Dc.b $D5,$CA                                             ;ADDA.L  A2,A2
0003B700 <AmiBlitz3.ab2@28976>                            Dc.b $D5,$CA                                             ;ADDA.L  A2,A2
0003B704 <AmiBlitz3.ab2@28980>                            Dc.b $2C,$78,$00,$04                                     ;MOVEA.L $0004,A6
0003B708 <AmiBlitz3.ab2@28984> movea5a0:                  Dc.b $24,$6D :                            Dc.b $00,$00   ;MOVEA.L $0000(A5),A2
0003B70C <AmiBlitz3.ab2@28987> movea0a0:                  Dc.b $24,$6A :                            Dc.b $00,$00   ;MOVEA.L $0000(A2),A2
0003B70E <AmiBlitz3.ab2@28990> addqa0:                    Dc.b $52,$4A                                             ;ADDQ.W  #1,A2
0003B712 <AmiBlitz3.ab2@28993> leaa0a0:                   Dc.b $45,$EA :                            Dc.b $00,$00   ;LEA $0000(A2),A2
0003B714 <AmiBlitz3.ab2@28996> addrega2:                  Dc.b $D4,$C0                                             ;ADDA.W  D0,A2
0003B71D <AmiBlitz3.ab2@29000>                            Dc.b "ram:test",0
0003B71E <AmiBlitz3.ab2@29001> Even
0003B722 <AmiBlitz3.ab2@29005>                            Dc.l  0                          ;was  Ds.w 3 org source
0003B724 <AmiBlitz3.ab2@29007>                            Dc.w  0
0003B728 <AmiBlitz3.ab2@29010> _mathffpbase:              Ds.l 1                           ;maths org source
0003B72A <AmiBlitz3.ab2@29011> regnum:                    Ds.w 1                           ;regat org source       ;register being used!
0003B72C <AmiBlitz3.ab2@29012> typelen:                   Ds.w 1
0003B730 <AmiBlitz3.ab2@29013> prevtype:                  Ds.l 1
0003B734 <AmiBlitz3.ab2@29014> lastsourcepos:             Ds.l 1                           ;prevloc org source
0003B736 <AmiBlitz3.ab2@29015> lastchar:                  Ds.w 1
0003B73A <AmiBlitz3.ab2@29016> thistype:                  Ds.l 1
0003B73E <AmiBlitz3.ab2@29017> errstack:                  Ds.l 1
0003B742 <AmiBlitz3.ab2@29018> errcont:                   Ds.l 1
0003B744 <AmiBlitz3.ab2@29019> linemode:                  Ds.w 1                          ;0 if norm, 1 if newtype
0003B746 <AmiBlitz3.ab2@29020> linesleft:                 Ds.w 1
0003B74A <AmiBlitz3.ab2@29021> sourceline:                Ds.l 1                          ;thisitem org source
0003B74E <AmiBlitz3.ab2@29022> varbase:                   Ds.l 1                          ;firstvar org source
0003B752 <AmiBlitz3.ab2@29023> alllocals:                 Ds.l 1
0003B756 <AmiBlitz3.ab2@29024> firstlocal:                Ds.l 1
0003B75A <AmiBlitz3.ab2@29025> firstglob:                 Ds.l 1
0003B75C <AmiBlitz3.ab2@29026> globalvarpointer:          Ds.w 1                          ;varoff org source
0003B75E <AmiBlitz3.ab2@29027> locvaroff:                 Ds.w 1
0003B762 <AmiBlitz3.ab2@29028> firstitem_:                 Ds.l 1
0003B764 <AmiBlitz3.ab2@29029> numlines_org:              Ds.w 1                          ;numlines org source
0003B766 <AmiBlitz3.ab2@29030> returncode_org:            Ds.w 1                          ;returncode org source
0003B76A <AmiBlitz3.ab2@29031> firstiff:                  Ds.l 1                          ;firstif org source
0003B76E <AmiBlitz3.ab2@29032> ptr_seg_ped:               Ds.l 1                          ;segadd org source
0003B96E <AmiBlitz3.ab2@29033> str_pedfile:               Ds.b #MAX_STRINGSIZE            ;segname org source
0003B97E <AmiBlitz3.ab2@29034> str_mathffpname:           Dc.b "mathffp.library",0 : Even ;mathsname org source
0003BB7E <AmiBlitz3.ab2@29035> str_libfilename:           Ds.b #MAX_STRINGSIZE
0003BD7E <AmiBlitz3.ab2@29036> str_path_userlibs:         Ds.b #MAX_STRINGSIZE
0003BF7E <AmiBlitz3.ab2@29037> str_defaultdbug:           Ds.b #MAX_STRINGSIZE            ;debugname org source
0003BF82 <AmiBlitz3.ab2@29039> ptr_seg_debugger:          Ds.l 1                          ;dseg org source
0003C182 <AmiBlitz3.ab2@29040> str_blitz3assign:          Ds.b #MAX_STRINGSIZE            ;dpath org source
0003C382 <AmiBlitz3.ab2@29042> str_path_acidlibs:         Ds.b #MAX_STRINGSIZE            ;acidname org source
0003C386 <AmiBlitz3.ab2@29043> size_acidlibs:             Ds.l 1                          ;acidlibs org source
0003C586 <AmiBlitz3.ab2@29044> str_path_deflibs:          Ds.b #MAX_STRINGSIZE            ;defname org source
0003C58A <AmiBlitz3.ab2@29045> size_deflibs:              Ds.l 1                          ;deflibs org source
0003C78A <AmiBlitz3.ab2@29046> str_tempfilename:          Ds.b #MAX_STRINGSIZE
0003C98A <AmiBlitz3.ab2@29048> str_temp_debugmodulename:  Ds.b #MAX_STRINGSIZE            ;dname org source
0003C98E <AmiBlitz3.ab2@29049> ptr_temp_debugmodule:      Ds.l 1                          ;dname2 org source
0003CB8E <AmiBlitz3.ab2@29051> str_path_includes:         Ds.b #MAX_STRINGSIZE            ;acidname org source
0003CB92 <AmiBlitz3.ab2@29057>   Dc.b $E3,$10,$00,$01                                     ;icondata  
0003CB96 <AmiBlitz3.ab2@29058>   Dc.b $00,$00,$00,$00
0003CB9A <AmiBlitz3.ab2@29059>   Dc.b $00,$19,$00,$11
0003CB9E <AmiBlitz3.ab2@29060>   Dc.b $00,$2E,$00,$18
0003CBA2 <AmiBlitz3.ab2@29061>   Dc.b $00,$04,$00,$03
0003CBA6 <AmiBlitz3.ab2@29062>   Dc.b $00,$01,$00,$22
0003CBAA <AmiBlitz3.ab2@29063>   Dc.b $73,$68,$00,$00
0003CBAE <AmiBlitz3.ab2@29064>   Dc.b $00,$00,$00,$00
0003CBB2 <AmiBlitz3.ab2@29065>   Dc.b $00,$00,$00,$00
0003CBB6 <AmiBlitz3.ab2@29066>   Dc.b $00,$00,$00,$00
0003CBBA <AmiBlitz3.ab2@29067>   Dc.b $00,$00,$00,$00
0003CBBE <AmiBlitz3.ab2@29068>   Dc.b $00,$00,$00,$00
0003CBC2 <AmiBlitz3.ab2@29069>   Dc.b $03,$22,$00,$21
0003CBC6 <AmiBlitz3.ab2@29070>   Dc.b $3C,$28,$00,$22
0003CBCA <AmiBlitz3.ab2@29071>   Dc.b $6E,$C0,$00,$00
0003CBCE <AmiBlitz3.ab2@29072>   Dc.b $00,$12,$00,$00
0003CBD2 <AmiBlitz3.ab2@29073>   Dc.b $00,$0E,$00,$00
0003CBD6 <AmiBlitz3.ab2@29074>   Dc.b $00,$00,$00,$00
0003CBDA <AmiBlitz3.ab2@29075>   Dc.b $00,$00,$00,$00
0003CBDE <AmiBlitz3.ab2@29076>   Dc.b $00,$00,$00,$00
0003CBE2 <AmiBlitz3.ab2@29077>   Dc.b $00,$00,$00,$2E
0003CBE6 <AmiBlitz3.ab2@29078>   Dc.b $00,$17,$00,$02
0003CBEA <AmiBlitz3.ab2@29079>   Dc.b $00,$01,$8E,$80
0003CBEE <AmiBlitz3.ab2@29080>   Dc.b $03,$00,$00,$00
0003CBF2 <AmiBlitz3.ab2@29081>   Dc.b $00,$00,$FF,$FF
0003CBF6 <AmiBlitz3.ab2@29082>   Dc.b $FF,$FF,$FF,$FC
0003CBFA <AmiBlitz3.ab2@29083>   Dc.b $80,$00,$00,$00
0003CBFE <AmiBlitz3.ab2@29084>   Dc.b $00,$00,$80,$00
0003CC02 <AmiBlitz3.ab2@29085>   Dc.b $00,$3F,$BB,$40
0003CC06 <AmiBlitz3.ab2@29086>   Dc.b $80,$1F,$C0,$00
0003CC0A <AmiBlitz3.ab2@29087>   Dc.b $00,$00,$80,$3F
0003CC0E <AmiBlitz3.ab2@29088>   Dc.b $C0,$0F,$BB,$40
0003CC12 <AmiBlitz3.ab2@29089>   Dc.b $80,$1F,$C0,$00
0003CC16 <AmiBlitz3.ab2@29090>   Dc.b $00,$00,$8E,$00
0003CC1A <AmiBlitz3.ab2@29091>   Dc.b $F8,$00,$00,$00
0003CC1E <AmiBlitz3.ab2@29092>   Dc.b $8F,$01,$FF,$00
0003CC22 <AmiBlitz3.ab2@29093>   Dc.b $3B,$40,$81,$E3
0003CC26 <AmiBlitz3.ab2@29094>   Dc.b $F7,$C0,$00,$00
0003CC2A <AmiBlitz3.ab2@29095>   Dc.b $80,$7F,$F8,$70
0003CC2E <AmiBlitz3.ab2@29096>   Dc.b $3B,$40,$80,$0F
0003CC32 <AmiBlitz3.ab2@29097>   Dc.b $7C,$E0,$00,$00
0003CC36 <AmiBlitz3.ab2@29098>   Dc.b $80,$00,$FD,$80
0003CC3A <AmiBlitz3.ab2@29099>   Dc.b $00,$00,$80,$01
0003CC3E <AmiBlitz3.ab2@29100>   Dc.b $F6,$00,$FB,$40
0003CC42 <AmiBlitz3.ab2@29101>   Dc.b $80,$03,$EF,$00
0003CC46 <AmiBlitz3.ab2@29102>   Dc.b $00,$00,$80,$07
0003CC4A <AmiBlitz3.ab2@29103>   Dc.b $87,$80,$3B,$40
0003CC4E <AmiBlitz3.ab2@29104>   Dc.b $80,$0F,$01,$C0
0003CC52 <AmiBlitz3.ab2@29105>   Dc.b $00,$00,$80,$03
0003CC56 <AmiBlitz3.ab2@29106>   Dc.b $F0,$70,$1D,$40
0003CC5A <AmiBlitz3.ab2@29107>   Dc.b $80,$00,$18,$1C
0003CC5E <AmiBlitz3.ab2@29108>   Dc.b $00,$00,$80,$00
0003CC62 <AmiBlitz3.ab2@29109>   Dc.b $10,$06,$03,$40
0003CC66 <AmiBlitz3.ab2@29110>   Dc.b $80,$00,$20,$1F
0003CC6A <AmiBlitz3.ab2@29111>   Dc.b $00,$00,$80,$00
0003CC6E <AmiBlitz3.ab2@29112>   Dc.b $00,$00,$01,$40
0003CC72 <AmiBlitz3.ab2@29113>   Dc.b $80,$00,$00,$00
0003CC76 <AmiBlitz3.ab2@29114>   Dc.b $00,$00,$80,$00
0003CC7A <AmiBlitz3.ab2@29115>   Dc.b $00,$00,$00,$00
0003CC7E <AmiBlitz3.ab2@29116>   Dc.b $00,$00,$00,$00
0003CC82 <AmiBlitz3.ab2@29117>   Dc.b $00,$00,$00,$00
0003CC86 <AmiBlitz3.ab2@29118>   Dc.b $00,$00,$00,$04
0003CC8A <AmiBlitz3.ab2@29119>   Dc.b $00,$3F,$FC,$01
0003CC8E <AmiBlitz3.ab2@29120>   Dc.b $BB,$44,$00,$60
0003CC92 <AmiBlitz3.ab2@29121>   Dc.b $FE,$00,$00,$04
0003CC96 <AmiBlitz3.ab2@29122>   Dc.b $00,$CF,$FF,$01
0003CC9A <AmiBlitz3.ab2@29123>   Dc.b $BB,$44,$1F,$EF
0003CC9E <AmiBlitz3.ab2@29124>   Dc.b $FF,$00,$00,$04
0003CCA2 <AmiBlitz3.ab2@29125>   Dc.b $33,$FF,$FF,$E0
0003CCA6 <AmiBlitz3.ab2@29126>   Dc.b $00,$04,$37,$FE
0003CCAA <AmiBlitz3.ab2@29127>   Dc.b $7F,$FC,$1B,$44
0003CCAE <AmiBlitz3.ab2@29128>   Dc.b $0F,$9C,$FF,$FF
0003CCB2 <AmiBlitz3.ab2@29129>   Dc.b $00,$04,$03,$E3
0003CCB6 <AmiBlitz3.ab2@29130>   Dc.b $FF,$FF,$DB,$44
0003CCBA <AmiBlitz3.ab2@29131>   Dc.b $00,$7F,$BF,$FF
0003CCBE <AmiBlitz3.ab2@29132>   Dc.b $80,$04,$00,$0F
0003CCC2 <AmiBlitz3.ab2@29133>   Dc.b $3F,$FE,$00,$04
0003CCC6 <AmiBlitz3.ab2@29134>   Dc.b $00,$06,$7F,$F8
0003CCCA <AmiBlitz3.ab2@29135>   Dc.b $1B,$44,$00,$0C
0003CCCE <AmiBlitz3.ab2@29136>   Dc.b $F7,$FC,$00,$04
0003CCD2 <AmiBlitz3.ab2@29137>   Dc.b $00,$19,$F9,$FE
0003CCD6 <AmiBlitz3.ab2@29138>   Dc.b $1B,$44,$00,$33
0003CCDA <AmiBlitz3.ab2@29139>   Dc.b $FE,$7F,$00,$04
0003CCDE <AmiBlitz3.ab2@29140>   Dc.b $00,$0F,$FF,$BF
0003CCE2 <AmiBlitz3.ab2@29141>   Dc.b $CD,$44,$00,$03
0003CCE6 <AmiBlitz3.ab2@29142>   Dc.b $EF,$EF,$F0,$04
0003CCEA <AmiBlitz3.ab2@29143>   Dc.b $00,$00,$7F,$DF
0003CCEE <AmiBlitz3.ab2@29144>   Dc.b $FB,$44,$00,$00
0003CCF2 <AmiBlitz3.ab2@29145>   Dc.b $FF,$A7,$FC,$04
0003CCF6 <AmiBlitz3.ab2@29146>   Dc.b $00,$00,$7E,$3F
0003CCFA <AmiBlitz3.ab2@29147>   Dc.b $FD,$44,$00,$00
0003CCFE <AmiBlitz3.ab2@29148>   Dc.b $00,$00,$00,$04
0003CD02 <AmiBlitz3.ab2@29149>   Dc.b $7F,$FF,$FF,$FF
0003CD06 <AmiBlitz3.ab2@29150>   Dc.b $FF,$FC,$00,$00
0003CD0A <AmiBlitz3.ab2@29151>   Dc.b $00,$01,$00,$00
0003CD0D <AmiBlitz3.ab2@29152>   Dc.b $00,$00,$04
0003CD13 <AmiBlitz3.ab2@29155> str_infoextention2:  Dc.b ".info",0                           ;infoname org source
0003CD6B <AmiBlitz3.ab2@29156> errorlimit_text:     Dc.b "There are too much errors, compiling is stop now. Please fix errors first and try again",0
0003CD6C <AmiBlitz3.ab2@29157> Even
0003CD70 <AmiBlitz3.ab2@29159> sysdebug:            Dc.l $3F0
0003CD74 <AmiBlitz3.ab2@29163> exelock              Ds.l 1
0003CD78 <AmiBlitz3.ab2@29167> includesourceline    Dc.l 0
0003CD7C <AmiBlitz3.ab2@29168> linenum              Ds.l 1
0003CD80 <AmiBlitz3.ab2@29169> globallinecount      Ds.l 1
0003CD9C <AmiBlitz3.ab2@29170> myversion            Dc.b "\\__VER_MAJOR.\\__VER_MINOR (\\__DATE_GER__) Build \\__VER_PATCH.\\__VER_BUILD",0 : Even
0003CDA0 <AmiBlitz3.ab2@29171> calc_option          Dc.l 1
0003CDA4 <AmiBlitz3.ab2@29172> versioninformation   Dc.l $00
0003CDA8 <AmiBlitz3.ab2@29173> number_of_builds     Dc.l $00
0003CDAC <AmiBlitz3.ab2@29176> BSS
0003CDAE <AmiBlitz3.ab2@29177> debugnest            Ds.w 1
0003CDB2 <AmiBlitz3.ab2@29178> instringf            Ds.l 1
0003CDB6 <AmiBlitz3.ab2@29179> funcscanon           Ds.l 1
0003CDCA <AmiBlitz3.ab2@29180> storedebugmode       Ds.b 20
0003CDCE <AmiBlitz3.ab2@29181> firsttimepref        Ds.l 1
0003CDCF <AmiBlitz3.ab2@29182> funcparloop          Ds.b 1                   ; is 1 when function calling parameter are compile
0003CDD0 <AmiBlitz3.ab2@29183> blitzparloop         Ds.b 1                   ; is 1 when blitzlib calling parameters are compile
0003CDD2 <AmiBlitz3.ab2@29184> nostringopt          Ds.w 1
0003CE52 <AmiBlitz3.ab2@29185> path2:               Ds.l 32
0003CE56 <AmiBlitz3.ab2@29186> typebase             Dc.l 0
0003CE58 <AmiBlitz3.ab2@29187> doublepeek           Dc.w 0
0003CE5C <AmiBlitz3.ab2@29188> lastoffset           Dc.l 0
0003CE5E <AmiBlitz3.ab2@29189> firsttime            Dc.w 0
0003CE62 <AmiBlitz3.ab2@29190> lastdestpointer      Dc.l 0
0003CE66 <AmiBlitz3.ab2@29191> prevwritedat         Dc.l 0
0003CE6A <AmiBlitz3.ab2@29192> lastsourceline       Dc.l 0
0003CE6E <AmiBlitz3.ab2@29193> lastwritedat         Dc.l 0
0003CE70 <AmiBlitz3.ab2@29194> makeexec             Dc.w 0
0003CE72 <AmiBlitz3.ab2@29195> makeexec_remember    Dc.w 0
0003CE76 <AmiBlitz3.ab2@29196> sharebase            Ds.l 1
0003CE7A <AmiBlitz3.ab2@29197> tempa7               Ds.l 1
0003CE7C <AmiBlitz3.ab2@29198> incnif               Ds.w 1
0003CE80 <AmiBlitz3.ab2@29199> tempstore            Ds.l 1
0003CE84 <AmiBlitz3.ab2@29200> result               Ds.l 1
0003CE86 <AmiBlitz3.ab2@29201> automode             Ds.w 1
0003CE88 <AmiBlitz3.ab2@29202> stackcorrect         Ds.w 1
0003CE8A <AmiBlitz3.ab2@29203> formode              Ds.w 1
0003CE8E <AmiBlitz3.ab2@29204> limitregs            Ds.l 1
0003CE90 <AmiBlitz3.ab2@29205> onestep              Ds.w 1
0003CE94 <AmiBlitz3.ab2@29206> reqmode              Ds.l 1
0003CF34 <AmiBlitz3.ab2@29207> inctab               Ds.l 40
0003CF36 <AmiBlitz3.ab2@29208> funcoptimize         Ds.w 1
0003CF3A <AmiBlitz3.ab2@29209> includeline          Ds.l 1
0003CF3E <AmiBlitz3.ab2@29210> morememadd           Ds.l 1
0003CF40 <AmiBlitz3.ab2@29211> objectcount          Ds.w 1
0003CF44 <AmiBlitz3.ab2@29212> savefuncspace        Ds.l 1
0003CF48 <AmiBlitz3.ab2@29213> lasttrap1            Ds.l 1
0003CF4C <AmiBlitz3.ab2@29214> currentfunccall      Ds.l 1
0003CF4D <AmiBlitz3.ab2@29215> skipfunc             Ds.b 1
0003CF4E <AmiBlitz3.ab2@29216> resdisable           Ds.b 1
0003CF4F <AmiBlitz3.ab2@29217> skiptoggle           Ds.b 1
0003CF50 <AmiBlitz3.ab2@29218> developobject        Ds.b 1
0003CF52 <AmiBlitz3.ab2@29219> iniffcommand         Ds.w 1
0003CF54 <AmiBlitz3.ab2@29220> startoffsetmore      Ds.w 1
0003CF56 <AmiBlitz3.ab2@29221> olddebugmode         Ds.w 1
0003CF5A <AmiBlitz3.ab2@29222> fpucodeglobal        Ds.l 1
0003CF5E <AmiBlitz3.ab2@29223> fpucodelocal         Ds.l 1
0003CF62 <AmiBlitz3.ab2@29224> maxregs              Ds.l 1
0003CF66 <AmiBlitz3.ab2@29225> fpucode              Ds.l 1
0003CF68 <AmiBlitz3.ab2@29226> firstmline           Ds.w 1
0003CFA8 <AmiBlitz3.ab2@29227> regtable             Ds.l 16
0003CFAA <AmiBlitz3.ab2@29228> exdebug              Ds.w 1
0003CFAC <AmiBlitz3.ab2@29229> a2offset2            Ds.w 1
0003CFB0 <AmiBlitz3.ab2@29230> parnumtemp           Ds.l 1
0003CFB1 <AmiBlitz3.ab2@29231> doimmediate          Ds.b 1
0003CFB2 <AmiBlitz3.ab2@29232> notypecheck          Ds.b 1
0003CFB4 <AmiBlitz3.ab2@29233> vartype              Ds.w 1
0003CFB5 <AmiBlitz3.ab2@29234> peekaddrsize         Ds.b 1
0003CFB6 <AmiBlitz3.ab2@29235> declare2             Ds.b 1
0003CFB8 <AmiBlitz3.ab2@29236> parameternum         Ds.w 1
0003CFBC <AmiBlitz3.ab2@29237> lasttoken            Ds.l 1
0003CFBE <AmiBlitz3.ab2@29238> newvariable          Ds.w 1
0003CFBF <AmiBlitz3.ab2@29239> declare              Ds.b 1
0003CFC0 <AmiBlitz3.ab2@29240> typecheck            Ds.b 1
0003CFC1 <AmiBlitz3.ab2@29241> nowdeclare           Ds.b 1
0003CFC2 <AmiBlitz3.ab2@29242> dimkeep              Ds.b 1
0003CFC3 <AmiBlitz3.ab2@29243> a4a5store            Ds.b 1
0003CFC4 <AmiBlitz3.ab2@29244> ___freetouse         Ds.b 1
0003CFC8 <AmiBlitz3.ab2@29245> firstiffstore        Ds.l 1
0003CFCC <AmiBlitz3.ab2@29246> destpointer2         Ds.l 1
0003CFD0 <AmiBlitz3.ab2@29247> stackaddr            Ds.l 1
0003D0D4 <AmiBlitz3.ab2@29248> allowtab             Ds.b 260
0003D1D4 <AmiBlitz3.ab2@29249> templine             Ds.b 256
0003D1D6 <AmiBlitz3.ab2@29250> thenmode             Ds.w 1
0003D1D8 <AmiBlitz3.ab2@29251> temp                 Ds.w 1
0003D1DA <AmiBlitz3.ab2@29252> tempregnum           Ds.w 1
0003D1DE <AmiBlitz3.ab2@29254> numlines2            Ds.l 1
0003D1E2 <AmiBlitz3.ab2@29255> numlines             Ds.l 1
0003D1E4 <AmiBlitz3.ab2@29256> exmac                Ds.w 1
0003D1E6 <AmiBlitz3.ab2@29257> returncode           Ds.w 1
0003D1EA <AmiBlitz3.ab2@29258> fp0iff               Ds.l 1
0003D1EE <AmiBlitz3.ab2@29259> fp0addr              Ds.l 1
0003D1F0 <AmiBlitz3.ab2@29260> fp0mode              Ds.w 1
0003D1F2 <AmiBlitz3.ab2@29261> fp0var               Ds.w 1
0003D1F4 <AmiBlitz3.ab2@29262> fastfunc             Ds.w 1
0003D1F6 <AmiBlitz3.ab2@29263> retmode              Ds.w 1
0003D1F8 <AmiBlitz3.ab2@29264> parnum               Ds.w 1
0003D1FA <AmiBlitz3.ab2@29265> regmask              Ds.w 1
0003D1FC <AmiBlitz3.ab2@29266> regnumfunc           Ds.w 1
0003D1FE <AmiBlitz3.ab2@29267> libmode              Ds.w 1
0003D202 <AmiBlitz3.ab2@29268> oldline              Ds.l 1
0003D206 <AmiBlitz3.ab2@29269> sourceline3          Ds.l 1
0003D2CE <AmiBlitz3.ab2@29270> debugstore           Ds.b 200
0003D2D2 <AmiBlitz3.ab2@29271> deststore            Ds.l 1
0003D2D6 <AmiBlitz3.ab2@29273> loada                Ds.l 1
0003D2DA <AmiBlitz3.ab2@29275> currtype             Ds.l 1
0003D2DE <AmiBlitz3.ab2@29276> arrayoffset          Ds.l 1
0003D2E2 <AmiBlitz3.ab2@29277> lastlabel            Ds.l 1
0003D2E6 <AmiBlitz3.ab2@29278> curtemplabel         Ds.l 1
0003D2EA <AmiBlitz3.ab2@29279> sourceline2          Ds.l 1
0003D3EA <AmiBlitz3.ab2@29280> chartab              Ds.b 256
0003D462 <AmiBlitz3.ab2@29281> tempspace            Ds.b 120
000BD472 <AmiBlitz3.ab2@29282> instrtab             Ds.l 65538*2
000C5472 <AmiBlitz3.ab2@29284> labelhash            Ds.l 8192                             ;-bssstore clear every compile pass
000E5476 <AmiBlitz3.ab2@29285> replacedat           Ds.w 65538
000ED476 <AmiBlitz3.ab2@29286> variablehash         Ds.l 8192
000ED47A <AmiBlitz3.ab2@29287> newinitaddr          Ds.l 1
000ED47E <AmiBlitz3.ab2@29288> realbssend           Ds.l 1
000ED480 <AmiBlitz3.ab2@29289> saved0               Ds.w 1
000ED500 <AmiBlitz3.ab2@29290> lastpath             Ds.b 128
000ED580 <AmiBlitz3.ab2@29291> lastpath2            Ds.b 128
000ED648 <AmiBlitz3.ab2@29292> fpustackbase         Ds.w 100
000ED64C <AmiBlitz3.ab2@29293> 
000ED64E <AmiBlitz3.ab2@29294> isconstantvalue      Dc.w 0  ; contain a type (1-7) if a constant expression is used as a Parameter or on right side of =
000ED652 <AmiBlitz3.ab2@29295> lastfunction         Dc.l 0  ; the address of the function in the Parameter or rght side of =
000ED656 <AmiBlitz3.ab2@29296> leftsidetype         Dc.l 0  ;this contain the address of the type from the left side of the variable assign
000ED65A <AmiBlitz3.ab2@29297> rightsidetype        Dc.l 0  ; same as above but right side
000ED65E <AmiBlitz3.ab2@29300> trap15temp           Ds.l 1
000ED662 <AmiBlitz3.ab2@29301> trap15temp2          Ds.l 1
000ED666 <AmiBlitz3.ab2@29302> templibend           Ds.l 1
000ED66A <AmiBlitz3.ab2@29303> tempdata1start       Ds.l 1
000ED66E <AmiBlitz3.ab2@29304> stacktrack           Ds.l 1
000ED672 <AmiBlitz3.ab2@29305> pad                  Ds.l 1
000ED772 <AmiBlitz3.ab2@29306> includetemp          Ds.b 256
000EE172 <AmiBlitz3.ab2@29307> includetemp2         Ds.b 256*10
000EE174 <AmiBlitz3.ab2@29308> funccall             Ds.w 1
000EE178 <AmiBlitz3.ab2@29311> ptr_resfile          Ds.l 1
000EE17A <AmiBlitz3.ab2@29312> CalculatorButtonBinFlag:    Ds.w 1
000EE17C <AmiBlitz3.ab2@29313> CalculatorButtonDecFlag:    Ds.w 1
000EE180 <AmiBlitz3.ab2@29314> ped_startup_addr:    Ds.l 1
000EE181 <AmiBlitz3.ab2@29315> start_without_libs:  Ds.b 1
000EE182 <AmiBlitz3.ab2@29316> skip_bytes:          Ds.b 1
000EE186 <AmiBlitz3.ab2@29317> functionreturntype   Ds.l 1  ; a temp store of it.do not read this value
000EE18A <AmiBlitz3.ab2@29318> beforeparameterfetch Ds.l 1
000EE18E <AmiBlitz3.ab2@29319> typetocast           Ds.l 1
000EE192 <AmiBlitz3.ab2@29320> errorcounter         Ds.l 1
000EE193 <AmiBlitz3.ab2@29321> iserror              Ds.b 1
000EE194 <AmiBlitz3.ab2@29322> Even
000EE198 <AmiBlitz3.ab2@29324> CLIMode:             Dc.l 0
000EE19C <AmiBlitz3.ab2@29325> XTRAEndPadBytes:     Dc.l 0                             ; 4 fill/pad/termination bytes for the xtra write function  tomsmart1
