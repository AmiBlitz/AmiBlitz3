00000008 <AmiBlitz3.ab2@0> 
00000014 <AmiBlitz3.ab2@43> optimize 5                               ; don't use FPU (opt. 4)
00000076 <AmiBlitz3.ab2@64> !initasm                                 ; some initial mumbo jumbo
000000A0 <AmiBlitz3.ab2@65> !basic
000000AC <AmiBlitz3.ab2@70> cli_verbose = -1
000000B2 <AmiBlitz3.ab2@71> CLIMode     = False
000000C8 <AmiBlitz3.ab2@72> MaxLen cli_tempstr.s = 1024
000000E4 <AmiBlitz3.ab2@73> GetCurrentDirName_ &cli_tempstr,1024  ; get the current dir to restore it on exit
0000010E <AmiBlitz3.ab2@74> cli_path.s = Peek.s(&cli_tempstr)
0000010E <library_offsets.ab3@1> XINCLUDE "/Shared/library_offsets.ab3"   ; needed includes
0000010E <AmiBlitz3.ab2@78> XINCLUDE "/Shared/library_offsets.ab3"   ; needed includes
0000010E <dos.include.bb2@1> XINCLUDE "dos.include.bb2"
0000010E <error.include.bb2@1> XINCLUDE "dos.include.bb2"
00000146 <error.include.bb2@62> XINCLUDE "dos.include.bb2"
0000016E <error.include.bb2@63> XINCLUDE "dos.include.bb2"
00000196 <error.include.bb2@64> XINCLUDE "dos.include.bb2"
000001BE <error.include.bb2@65> XINCLUDE "dos.include.bb2"
000001C4 <error.include.bb2@66> XINCLUDE "dos.include.bb2"
000001F8 <error.include.bb2@67> XINCLUDE "dos.include.bb2"
0000022C <error.include.bb2@68> XINCLUDE "dos.include.bb2"
00000260 <error.include.bb2@69> XINCLUDE "dos.include.bb2"
0000027C <error.include.bb2@73> XINCLUDE "dos.include.bb2"
00000296 <error.include.bb2@99> XINCLUDE "dos.include.bb2"
000002A2 <error.include.bb2@101> XINCLUDE "dos.include.bb2"
000002A6 <error.include.bb2@102> XINCLUDE "dos.include.bb2"
000002B4 <error.include.bb2@104> XINCLUDE "dos.include.bb2"
000002E6 <error.include.bb2@124> XINCLUDE "dos.include.bb2"
0000036A <error.include.bb2@126> XINCLUDE "dos.include.bb2"
00000384 <error.include.bb2@128> XINCLUDE "dos.include.bb2"
000003BC <error.include.bb2@129> XINCLUDE "dos.include.bb2"
0000041C <error.include.bb2@130> XINCLUDE "dos.include.bb2"
0000042A <error.include.bb2@132> XINCLUDE "dos.include.bb2"
00000438 <error.include.bb2@133> XINCLUDE "dos.include.bb2"
00000446 <error.include.bb2@134> XINCLUDE "dos.include.bb2"
00000454 <error.include.bb2@135> XINCLUDE "dos.include.bb2"
0000047C <error.include.bb2@136> XINCLUDE "dos.include.bb2"
0000048A <error.include.bb2@137> XINCLUDE "dos.include.bb2"
00000492 <error.include.bb2@138> XINCLUDE "dos.include.bb2"
000004C4 <error.include.bb2@140> XINCLUDE "dos.include.bb2"
000004DE <error.include.bb2@145> XINCLUDE "dos.include.bb2"
00000516 <error.include.bb2@146> XINCLUDE "dos.include.bb2"
0000051C <error.include.bb2@147> XINCLUDE "dos.include.bb2"
00000560 <error.include.bb2@148> XINCLUDE "dos.include.bb2"
000005A8 <error.include.bb2@149> XINCLUDE "dos.include.bb2"
000005B2 <error.include.bb2@153> XINCLUDE "dos.include.bb2"
000005CA <error.include.bb2@155> XINCLUDE "dos.include.bb2"
00000604 <error.include.bb2@194> XINCLUDE "dos.include.bb2"
0000060C <error.include.bb2@196> XINCLUDE "dos.include.bb2"
0000062E <error.include.bb2@198> XINCLUDE "dos.include.bb2"
0000068E <error.include.bb2@199> XINCLUDE "dos.include.bb2"
0000069C <error.include.bb2@201> XINCLUDE "dos.include.bb2"
000006AA <error.include.bb2@202> XINCLUDE "dos.include.bb2"
000006B8 <error.include.bb2@203> XINCLUDE "dos.include.bb2"
000006C6 <error.include.bb2@204> XINCLUDE "dos.include.bb2"
00000726 <error.include.bb2@205> XINCLUDE "dos.include.bb2"
00000734 <error.include.bb2@206> XINCLUDE "dos.include.bb2"
0000076A <error.include.bb2@209> XINCLUDE "dos.include.bb2"
00000774 <error.include.bb2@213> XINCLUDE "dos.include.bb2"
00000790 <error.include.bb2@214> XINCLUDE "dos.include.bb2"
00000790 <multilist.include.bb2@1> XINCLUDE "dos.include.bb2"
00000790 <strptr.include.bb2@1> XINCLUDE "dos.include.bb2"
00000790 <useful.include.bb2@1> XINCLUDE "dos.include.bb2"
000007BE <useful.include.bb2@220> XINCLUDE "dos.include.bb2"
000007C8 <useful.include.bb2@221> XINCLUDE "dos.include.bb2"
000007DC <useful.include.bb2@222> XINCLUDE "dos.include.bb2"
000007E4 <useful.include.bb2@223> XINCLUDE "dos.include.bb2"
0000080C <useful.include.bb2@224> XINCLUDE "dos.include.bb2"
00000832 <useful.include.bb2@225> XINCLUDE "dos.include.bb2"
00000852 <useful.include.bb2@228> XINCLUDE "dos.include.bb2"
00000860 <useful.include.bb2@229> XINCLUDE "dos.include.bb2"
00000886 <useful.include.bb2@230> XINCLUDE "dos.include.bb2"
0000088E <useful.include.bb2@233> XINCLUDE "dos.include.bb2"
00000896 <useful.include.bb2@234> XINCLUDE "dos.include.bb2"
0000089C <useful.include.bb2@235> XINCLUDE "dos.include.bb2"
000008B8 <useful.include.bb2@236> XINCLUDE "dos.include.bb2"
000008DC <useful.include.bb2@237> XINCLUDE "dos.include.bb2"
000008F0 <useful.include.bb2@238> XINCLUDE "dos.include.bb2"
000008F6 <useful.include.bb2@239> XINCLUDE "dos.include.bb2"
00000940 <useful.include.bb2@240> XINCLUDE "dos.include.bb2"
00000942 <useful.include.bb2@241> XINCLUDE "dos.include.bb2"
00000950 <useful.include.bb2@243> XINCLUDE "dos.include.bb2"
00000970 <useful.include.bb2@245> XINCLUDE "dos.include.bb2"
000009CE <useful.include.bb2@246> XINCLUDE "dos.include.bb2"
000009D4 <useful.include.bb2@247> XINCLUDE "dos.include.bb2"
000009E2 <useful.include.bb2@248> XINCLUDE "dos.include.bb2"
000009F6 <useful.include.bb2@249> XINCLUDE "dos.include.bb2"
00000A08 <useful.include.bb2@250> XINCLUDE "dos.include.bb2"
00000A16 <useful.include.bb2@251> XINCLUDE "dos.include.bb2"
00000A1C <useful.include.bb2@252> XINCLUDE "dos.include.bb2"
00000A28 <useful.include.bb2@253> XINCLUDE "dos.include.bb2"
00000A3C <useful.include.bb2@256> XINCLUDE "dos.include.bb2"
00000A50 <useful.include.bb2@257> XINCLUDE "dos.include.bb2"
00000A62 <useful.include.bb2@258> XINCLUDE "dos.include.bb2"
00000A70 <useful.include.bb2@259> XINCLUDE "dos.include.bb2"
00000A8E <useful.include.bb2@260> XINCLUDE "dos.include.bb2"
00000A94 <useful.include.bb2@261> XINCLUDE "dos.include.bb2"
00000AA8 <useful.include.bb2@265> XINCLUDE "dos.include.bb2"
00000AB2 <useful.include.bb2@266> XINCLUDE "dos.include.bb2"
00000ABA <useful.include.bb2@267> XINCLUDE "dos.include.bb2"
00000AD8 <useful.include.bb2@268> XINCLUDE "dos.include.bb2"
00000ADE <useful.include.bb2@269> XINCLUDE "dos.include.bb2"
00000B0A <useful.include.bb2@270> XINCLUDE "dos.include.bb2"
00000B10 <useful.include.bb2@272> XINCLUDE "dos.include.bb2"
00000B22 <useful.include.bb2@273> XINCLUDE "dos.include.bb2"
00000B3A <useful.include.bb2@274> XINCLUDE "dos.include.bb2"
00000B52 <useful.include.bb2@275> XINCLUDE "dos.include.bb2"
00000B70 <useful.include.bb2@276> XINCLUDE "dos.include.bb2"
00000B72 <useful.include.bb2@278> XINCLUDE "dos.include.bb2"
00000B80 <useful.include.bb2@279> XINCLUDE "dos.include.bb2"
00000BA6 <useful.include.bb2@280> XINCLUDE "dos.include.bb2"
00000C3A <useful.include.bb2@281> XINCLUDE "dos.include.bb2"
00000C48 <useful.include.bb2@283> XINCLUDE "dos.include.bb2"
00000C4E <useful.include.bb2@284> XINCLUDE "dos.include.bb2"
00000C78 <useful.include.bb2@285> XINCLUDE "dos.include.bb2"
00000C96 <useful.include.bb2@286> XINCLUDE "dos.include.bb2"
00000C96 <strptr.include.bb2@31> XINCLUDE "dos.include.bb2"
00000CC0 <strptr.include.bb2@33> XINCLUDE "dos.include.bb2"
00000CDA <strptr.include.bb2@84> XINCLUDE "dos.include.bb2"
00000CE4 <strptr.include.bb2@85> XINCLUDE "dos.include.bb2"
00000D34 <strptr.include.bb2@86> XINCLUDE "dos.include.bb2"
00000D38 <strptr.include.bb2@88> XINCLUDE "dos.include.bb2"
00000D66 <strptr.include.bb2@137> XINCLUDE "dos.include.bb2"
00000D70 <strptr.include.bb2@138> XINCLUDE "dos.include.bb2"
00000DC0 <strptr.include.bb2@139> XINCLUDE "dos.include.bb2"
00000DD4 <strptr.include.bb2@140> XINCLUDE "dos.include.bb2"
00000DE6 <strptr.include.bb2@141> XINCLUDE "dos.include.bb2"
00000E0E <strptr.include.bb2@142> XINCLUDE "dos.include.bb2"
00000E18 <strptr.include.bb2@143> XINCLUDE "dos.include.bb2"
00000E26 <strptr.include.bb2@144> XINCLUDE "dos.include.bb2"
00000E30 <strptr.include.bb2@145> XINCLUDE "dos.include.bb2"
00000E58 <strptr.include.bb2@146> XINCLUDE "dos.include.bb2"
00000E72 <strptr.include.bb2@147> XINCLUDE "dos.include.bb2"
00000E8A <strptr.include.bb2@151> XINCLUDE "dos.include.bb2"
00000EA4 <strptr.include.bb2@213> XINCLUDE "dos.include.bb2"
00000EAE <strptr.include.bb2@214> XINCLUDE "dos.include.bb2"
00000EBC <strptr.include.bb2@215> XINCLUDE "dos.include.bb2"
00000EEE <strptr.include.bb2@216> XINCLUDE "dos.include.bb2"
00000F0C <strptr.include.bb2@218> XINCLUDE "dos.include.bb2"
00000F16 <strptr.include.bb2@219> XINCLUDE "dos.include.bb2"
00000F2C <strptr.include.bb2@221> XINCLUDE "dos.include.bb2"
00000F36 <strptr.include.bb2@222> XINCLUDE "dos.include.bb2"
00000F46 <strptr.include.bb2@223> XINCLUDE "dos.include.bb2"
00000F4E <strptr.include.bb2@224> XINCLUDE "dos.include.bb2"
00000F50 <strptr.include.bb2@226> XINCLUDE "dos.include.bb2"
00000F7E <strptr.include.bb2@227> XINCLUDE "dos.include.bb2"
00000F7E <multilist.include.bb2@44> XINCLUDE "dos.include.bb2"
00000F94 <multilist.include.bb2@61> XINCLUDE "dos.include.bb2"
00000FAE <multilist.include.bb2@406> XINCLUDE "dos.include.bb2"
00000FB8 <multilist.include.bb2@407> XINCLUDE "dos.include.bb2"
00000FDA <multilist.include.bb2@408> XINCLUDE "dos.include.bb2"
00000FFE <multilist.include.bb2@409> XINCLUDE "dos.include.bb2"
00001010 <multilist.include.bb2@410> XINCLUDE "dos.include.bb2"
00001028 <multilist.include.bb2@411> XINCLUDE "dos.include.bb2"
0000103C <multilist.include.bb2@412> XINCLUDE "dos.include.bb2"
0000104E <multilist.include.bb2@415> XINCLUDE "dos.include.bb2"
0000105E <multilist.include.bb2@416> XINCLUDE "dos.include.bb2"
00001064 <multilist.include.bb2@417> XINCLUDE "dos.include.bb2"
00001074 <multilist.include.bb2@418> XINCLUDE "dos.include.bb2"
00001084 <multilist.include.bb2@419> XINCLUDE "dos.include.bb2"
0000109E <multilist.include.bb2@420> XINCLUDE "dos.include.bb2"
000010A2 <multilist.include.bb2@422> XINCLUDE "dos.include.bb2"
000010BC <multilist.include.bb2@585> XINCLUDE "dos.include.bb2"
000010EC <multilist.include.bb2@586> XINCLUDE "dos.include.bb2"
000010F6 <multilist.include.bb2@588> XINCLUDE "dos.include.bb2"
00001100 <multilist.include.bb2@589> XINCLUDE "dos.include.bb2"
00001122 <multilist.include.bb2@590> XINCLUDE "dos.include.bb2"
00001146 <multilist.include.bb2@591> XINCLUDE "dos.include.bb2"
00001158 <multilist.include.bb2@592> XINCLUDE "dos.include.bb2"
00001170 <multilist.include.bb2@593> XINCLUDE "dos.include.bb2"
00001184 <multilist.include.bb2@594> XINCLUDE "dos.include.bb2"
00001196 <multilist.include.bb2@597> XINCLUDE "dos.include.bb2"
000011A6 <multilist.include.bb2@598> XINCLUDE "dos.include.bb2"
000011AC <multilist.include.bb2@599> XINCLUDE "dos.include.bb2"
000011BC <multilist.include.bb2@600> XINCLUDE "dos.include.bb2"
000011CC <multilist.include.bb2@601> XINCLUDE "dos.include.bb2"
000011E6 <multilist.include.bb2@602> XINCLUDE "dos.include.bb2"
000011EC <multilist.include.bb2@603> XINCLUDE "dos.include.bb2"
000011F2 <multilist.include.bb2@604> XINCLUDE "dos.include.bb2"
000011F6 <multilist.include.bb2@605> XINCLUDE "dos.include.bb2"
00001210 <multilist.include.bb2@713> XINCLUDE "dos.include.bb2"
00001218 <multilist.include.bb2@714> XINCLUDE "dos.include.bb2"
00001222 <multilist.include.bb2@715> XINCLUDE "dos.include.bb2"
00001238 <multilist.include.bb2@716> XINCLUDE "dos.include.bb2"
0000124C <multilist.include.bb2@717> XINCLUDE "dos.include.bb2"
00001270 <multilist.include.bb2@718> XINCLUDE "dos.include.bb2"
0000127E <multilist.include.bb2@721> XINCLUDE "dos.include.bb2"
00001288 <multilist.include.bb2@722> XINCLUDE "dos.include.bb2"
0000128E <multilist.include.bb2@723> XINCLUDE "dos.include.bb2"
00001298 <multilist.include.bb2@724> XINCLUDE "dos.include.bb2"
0000129E <multilist.include.bb2@725> XINCLUDE "dos.include.bb2"
000012BC <multilist.include.bb2@742> XINCLUDE "dos.include.bb2"
000012C4 <multilist.include.bb2@743> XINCLUDE "dos.include.bb2"
000012CE <multilist.include.bb2@744> XINCLUDE "dos.include.bb2"
000012EC <multilist.include.bb2@745> XINCLUDE "dos.include.bb2"
00001302 <multilist.include.bb2@746> XINCLUDE "dos.include.bb2"
00001316 <multilist.include.bb2@747> XINCLUDE "dos.include.bb2"
0000134A <multilist.include.bb2@748> XINCLUDE "dos.include.bb2"
00001358 <multilist.include.bb2@751> XINCLUDE "dos.include.bb2"
00001362 <multilist.include.bb2@752> XINCLUDE "dos.include.bb2"
00001368 <multilist.include.bb2@753> XINCLUDE "dos.include.bb2"
00001372 <multilist.include.bb2@754> XINCLUDE "dos.include.bb2"
00001376 <multilist.include.bb2@756> XINCLUDE "dos.include.bb2"
0000137C <multilist.include.bb2@757> XINCLUDE "dos.include.bb2"
00001396 <multilist.include.bb2@795> XINCLUDE "dos.include.bb2"
000013A0 <multilist.include.bb2@796> XINCLUDE "dos.include.bb2"
000013AA <multilist.include.bb2@797> XINCLUDE "dos.include.bb2"
000013C0 <multilist.include.bb2@798> XINCLUDE "dos.include.bb2"
000013D0 <multilist.include.bb2@799> XINCLUDE "dos.include.bb2"
000013DA <multilist.include.bb2@801> XINCLUDE "dos.include.bb2"
000013E0 <multilist.include.bb2@802> XINCLUDE "dos.include.bb2"
000013E4 <multilist.include.bb2@803> XINCLUDE "dos.include.bb2"
00001406 <multilist.include.bb2@821> XINCLUDE "dos.include.bb2"
0000140E <multilist.include.bb2@822> XINCLUDE "dos.include.bb2"
00001428 <multilist.include.bb2@823> XINCLUDE "dos.include.bb2"
00001432 <multilist.include.bb2@824> XINCLUDE "dos.include.bb2"
00001448 <multilist.include.bb2@825> XINCLUDE "dos.include.bb2"
0000145C <multilist.include.bb2@826> XINCLUDE "dos.include.bb2"
000014B2 <multilist.include.bb2@827> XINCLUDE "dos.include.bb2"
000014EC <multilist.include.bb2@828> XINCLUDE "dos.include.bb2"
000014FE <multilist.include.bb2@829> XINCLUDE "dos.include.bb2"
00001520 <multilist.include.bb2@830> XINCLUDE "dos.include.bb2"
00001526 <multilist.include.bb2@831> XINCLUDE "dos.include.bb2"
0000157C <multilist.include.bb2@832> XINCLUDE "dos.include.bb2"
000015B6 <multilist.include.bb2@833> XINCLUDE "dos.include.bb2"
000015BC <multilist.include.bb2@835> XINCLUDE "dos.include.bb2"
000015F6 <multilist.include.bb2@836> XINCLUDE "dos.include.bb2"
00001630 <multilist.include.bb2@837> XINCLUDE "dos.include.bb2"
00001642 <multilist.include.bb2@839> XINCLUDE "dos.include.bb2"
0000164C <multilist.include.bb2@840> XINCLUDE "dos.include.bb2"
00001652 <multilist.include.bb2@841> XINCLUDE "dos.include.bb2"
0000165C <multilist.include.bb2@842> XINCLUDE "dos.include.bb2"
00001670 <multilist.include.bb2@843> XINCLUDE "dos.include.bb2"
000016B6 <multilist.include.bb2@870> XINCLUDE "dos.include.bb2"
000016BE <multilist.include.bb2@871> XINCLUDE "dos.include.bb2"
000016DC <multilist.include.bb2@872> XINCLUDE "dos.include.bb2"
00001708 <multilist.include.bb2@873> XINCLUDE "dos.include.bb2"
00001726 <multilist.include.bb2@874> XINCLUDE "dos.include.bb2"
00001740 <multilist.include.bb2@875> XINCLUDE "dos.include.bb2"
0000175A <multilist.include.bb2@876> XINCLUDE "dos.include.bb2"
000017DC <multilist.include.bb2@877> XINCLUDE "dos.include.bb2"
000017F0 <multilist.include.bb2@879> XINCLUDE "dos.include.bb2"
00001808 <multilist.include.bb2@880> XINCLUDE "dos.include.bb2"
0000180E <multilist.include.bb2@881> XINCLUDE "dos.include.bb2"
00001826 <multilist.include.bb2@882> XINCLUDE "dos.include.bb2"
0000183C <multilist.include.bb2@884> XINCLUDE "dos.include.bb2"
00001856 <multilist.include.bb2@886> XINCLUDE "dos.include.bb2"
0000186A <multilist.include.bb2@887> XINCLUDE "dos.include.bb2"
00001878 <multilist.include.bb2@888> XINCLUDE "dos.include.bb2"
000018CE <multilist.include.bb2@889> XINCLUDE "dos.include.bb2"
00001904 <multilist.include.bb2@890> XINCLUDE "dos.include.bb2"
00001934 <multilist.include.bb2@891> XINCLUDE "dos.include.bb2"
000019BC <multilist.include.bb2@893> XINCLUDE "dos.include.bb2"
000019C2 <multilist.include.bb2@894> XINCLUDE "dos.include.bb2"
000019D0 <multilist.include.bb2@895> XINCLUDE "dos.include.bb2"
00001A26 <multilist.include.bb2@896> XINCLUDE "dos.include.bb2"
00001A5C <multilist.include.bb2@897> XINCLUDE "dos.include.bb2"
00001A8C <multilist.include.bb2@898> XINCLUDE "dos.include.bb2"
00001A92 <multilist.include.bb2@901> XINCLUDE "dos.include.bb2"
00001AAC <multilist.include.bb2@902> XINCLUDE "dos.include.bb2"
00001ABA <multilist.include.bb2@903> XINCLUDE "dos.include.bb2"
00001AF4 <multilist.include.bb2@904> XINCLUDE "dos.include.bb2"
00001B2A <multilist.include.bb2@905> XINCLUDE "dos.include.bb2"
00001B5A <multilist.include.bb2@906> XINCLUDE "dos.include.bb2"
00001B68 <multilist.include.bb2@909> XINCLUDE "dos.include.bb2"
00001B72 <multilist.include.bb2@910> XINCLUDE "dos.include.bb2"
00001B78 <multilist.include.bb2@911> XINCLUDE "dos.include.bb2"
00001B82 <multilist.include.bb2@912> XINCLUDE "dos.include.bb2"
00001B96 <multilist.include.bb2@913> XINCLUDE "dos.include.bb2"
00001B96 <dos.include.bb2@57> XINCLUDE "dos.include.bb2"
00001BAC <dos.include.bb2@60> XINCLUDE "dos.include.bb2"
00001BB4 <dos.include.bb2@78> XINCLUDE "dos.include.bb2"
00001BBC <dos.include.bb2@79> XINCLUDE "dos.include.bb2"
00001BE4 <dos.include.bb2@80> XINCLUDE "dos.include.bb2"
00001BEC <dos.include.bb2@81> XINCLUDE "dos.include.bb2"
00001C14 <dos.include.bb2@82> XINCLUDE "dos.include.bb2"
00001C3C <dos.include.bb2@83> XINCLUDE "dos.include.bb2"
00001C64 <dos.include.bb2@84> XINCLUDE "dos.include.bb2"
00001C6C <dos.include.bb2@85> XINCLUDE "dos.include.bb2"
00001C74 <dos.include.bb2@86> XINCLUDE "dos.include.bb2"
00001C7C <dos.include.bb2@87> XINCLUDE "dos.include.bb2"
00001C84 <dos.include.bb2@88> XINCLUDE "dos.include.bb2"
00001C8C <dos.include.bb2@89> XINCLUDE "dos.include.bb2"
00001C94 <dos.include.bb2@90> XINCLUDE "dos.include.bb2"
00001C9C <dos.include.bb2@91> XINCLUDE "dos.include.bb2"
00001CA4 <dos.include.bb2@92> XINCLUDE "dos.include.bb2"
00001CAC <dos.include.bb2@93> XINCLUDE "dos.include.bb2"
00001CCC <dos.include.bb2@94> XINCLUDE "dos.include.bb2"
00001CD4 <dos.include.bb2@95> XINCLUDE "dos.include.bb2"
00001CDC <dos.include.bb2@96> XINCLUDE "dos.include.bb2"
00001D04 <dos.include.bb2@98> XINCLUDE "dos.include.bb2"
00001D1A <dos.include.bb2@129> XINCLUDE "dos.include.bb2"
00001D26 <dos.include.bb2@130> XINCLUDE "dos.include.bb2"
00001D2A <dos.include.bb2@131> XINCLUDE "dos.include.bb2"
00001D40 <dos.include.bb2@144> XINCLUDE "dos.include.bb2"
00001D5A <dos.include.bb2@145> XINCLUDE "dos.include.bb2"
00001D70 <dos.include.bb2@146> XINCLUDE "dos.include.bb2"
00001D9A <dos.include.bb2@147> XINCLUDE "dos.include.bb2"
00001DA4 <dos.include.bb2@148> XINCLUDE "dos.include.bb2"
00001DAA <dos.include.bb2@149> XINCLUDE "dos.include.bb2"
00001DC0 <dos.include.bb2@162> XINCLUDE "dos.include.bb2"
00001DDA <dos.include.bb2@163> XINCLUDE "dos.include.bb2"
00001DF0 <dos.include.bb2@164> XINCLUDE "dos.include.bb2"
00001E1A <dos.include.bb2@165> XINCLUDE "dos.include.bb2"
00001E24 <dos.include.bb2@166> XINCLUDE "dos.include.bb2"
00001E2A <dos.include.bb2@167> XINCLUDE "dos.include.bb2"
00001E54 <dos.include.bb2@183> XINCLUDE "dos.include.bb2"
00001E60 <dos.include.bb2@184> XINCLUDE "dos.include.bb2"
00001E80 <dos.include.bb2@185> XINCLUDE "dos.include.bb2"
00001E8A <dos.include.bb2@186> XINCLUDE "dos.include.bb2"
00001E9A <dos.include.bb2@187> XINCLUDE "dos.include.bb2"
00001EAA <dos.include.bb2@188> XINCLUDE "dos.include.bb2"
00001EB4 <dos.include.bb2@190> XINCLUDE "dos.include.bb2"
00001ECE <dos.include.bb2@191> XINCLUDE "dos.include.bb2"
00001EE4 <dos.include.bb2@429> XINCLUDE "dos.include.bb2"
00001EF6 <dos.include.bb2@431> XINCLUDE "dos.include.bb2"
00001F70 <dos.include.bb2@432> XINCLUDE "dos.include.bb2"
00001F9A <dos.include.bb2@433> XINCLUDE "dos.include.bb2"
00001FB2 <dos.include.bb2@434> XINCLUDE "dos.include.bb2"
00001FC8 <dos.include.bb2@460> XINCLUDE "dos.include.bb2"
00001FDA <dos.include.bb2@461> XINCLUDE "dos.include.bb2"
00001FDE <dos.include.bb2@462> XINCLUDE "dos.include.bb2"
00001FF4 <dos.include.bb2@478> XINCLUDE "dos.include.bb2"
00001FF6 <dos.include.bb2@479> XINCLUDE "dos.include.bb2"
00002030 <dos.include.bb2@540> XINCLUDE "dos.include.bb2"
00002064 <dos.include.bb2@542> XINCLUDE "dos.include.bb2"
0000208A <dos.include.bb2@543> XINCLUDE "dos.include.bb2"
000020AA <dos.include.bb2@544> XINCLUDE "dos.include.bb2"
000020CA <dos.include.bb2@545> XINCLUDE "dos.include.bb2"
000020F4 <dos.include.bb2@660> XINCLUDE "dos.include.bb2"
0000210A <dos.include.bb2@661> XINCLUDE "dos.include.bb2"
00002114 <dos.include.bb2@662> XINCLUDE "dos.include.bb2"
0000213C <dos.include.bb2@663> XINCLUDE "dos.include.bb2"
00002142 <dos.include.bb2@664> XINCLUDE "dos.include.bb2"
0000216A <dos.include.bb2@665> XINCLUDE "dos.include.bb2"
00002194 <dos.include.bb2@667> XINCLUDE "dos.include.bb2"
000021B2 <dos.include.bb2@668> XINCLUDE "dos.include.bb2"
000021DC <dos.include.bb2@691> XINCLUDE "dos.include.bb2"
0000224C <dos.include.bb2@692> XINCLUDE "dos.include.bb2"
00002276 <dos.include.bb2@693> XINCLUDE "dos.include.bb2"
00002294 <dos.include.bb2@694> XINCLUDE "dos.include.bb2"
000022BE <dos.include.bb2@729> XINCLUDE "dos.include.bb2"
000022DE <dos.include.bb2@730> XINCLUDE "dos.include.bb2"
0000230A <dos.include.bb2@731> XINCLUDE "dos.include.bb2"
00002314 <dos.include.bb2@732> XINCLUDE "dos.include.bb2"
0000232E <dos.include.bb2@733> XINCLUDE "dos.include.bb2"
00002358 <dos.include.bb2@880> XINCLUDE "dos.include.bb2"
00002406 <dos.include.bb2@881> XINCLUDE "dos.include.bb2"
0000241C <dos.include.bb2@882> XINCLUDE "dos.include.bb2"
00002426 <dos.include.bb2@883> XINCLUDE "dos.include.bb2"
0000244E <dos.include.bb2@884> XINCLUDE "dos.include.bb2"
00002458 <dos.include.bb2@885> XINCLUDE "dos.include.bb2"
0000245E <dos.include.bb2@886> XINCLUDE "dos.include.bb2"
00002464 <dos.include.bb2@887> XINCLUDE "dos.include.bb2"
0000246A <dos.include.bb2@888> XINCLUDE "dos.include.bb2"
0000247C <dos.include.bb2@890> XINCLUDE "dos.include.bb2"
00002486 <dos.include.bb2@892> XINCLUDE "dos.include.bb2"
000024A0 <dos.include.bb2@893> XINCLUDE "dos.include.bb2"
000024DE <dos.include.bb2@914> XINCLUDE "dos.include.bb2"
000024E6 <dos.include.bb2@915> XINCLUDE "dos.include.bb2"
00002594 <dos.include.bb2@916> XINCLUDE "dos.include.bb2"
000025A8 <dos.include.bb2@917> XINCLUDE "dos.include.bb2"
000025EA <dos.include.bb2@918> XINCLUDE "dos.include.bb2"
0000260A <dos.include.bb2@920> XINCLUDE "dos.include.bb2"
00002614 <dos.include.bb2@921> XINCLUDE "dos.include.bb2"
00002630 <dos.include.bb2@922> XINCLUDE "dos.include.bb2"
0000266A <dos.include.bb2@974> XINCLUDE "dos.include.bb2"
00002672 <dos.include.bb2@975> XINCLUDE "dos.include.bb2"
00002720 <dos.include.bb2@976> XINCLUDE "dos.include.bb2"
00002756 <dos.include.bb2@977> XINCLUDE "dos.include.bb2"
00002776 <dos.include.bb2@978> XINCLUDE "dos.include.bb2"
00002794 <dos.include.bb2@979> XINCLUDE "dos.include.bb2"
000027B8 <dos.include.bb2@980> XINCLUDE "dos.include.bb2"
000027C2 <dos.include.bb2@982> XINCLUDE "dos.include.bb2"
000027DE <dos.include.bb2@983> XINCLUDE "dos.include.bb2"
00002818 <dos.include.bb2@1000> XINCLUDE "dos.include.bb2"
000028C6 <dos.include.bb2@1001> XINCLUDE "dos.include.bb2"
000028FE <dos.include.bb2@1002> XINCLUDE "dos.include.bb2"
0000291E <dos.include.bb2@1003> XINCLUDE "dos.include.bb2"
00002924 <dos.include.bb2@1004> XINCLUDE "dos.include.bb2"
00002944 <dos.include.bb2@1005> XINCLUDE "dos.include.bb2"
0000294E <dos.include.bb2@1006> XINCLUDE "dos.include.bb2"
00002968 <dos.include.bb2@1007> XINCLUDE "dos.include.bb2"
00002980 <dos.include.bb2@1008> XINCLUDE "dos.include.bb2"
0000298A <dos.include.bb2@1011> XINCLUDE "dos.include.bb2"
000029A6 <dos.include.bb2@1012> XINCLUDE "dos.include.bb2"
000029D0 <dos.include.bb2@1147> XINCLUDE "dos.include.bb2"
000029DE <dos.include.bb2@1149> XINCLUDE "dos.include.bb2"
00002AA4 <dos.include.bb2@1150> XINCLUDE "dos.include.bb2"
00002ACE <dos.include.bb2@1151> XINCLUDE "dos.include.bb2"
00002AF6 <dos.include.bb2@1153> XINCLUDE "dos.include.bb2"
00002B20 <dos.include.bb2@1154> XINCLUDE "dos.include.bb2"
00002B4A <dos.include.bb2@1156> XINCLUDE "dos.include.bb2"
00002B68 <dos.include.bb2@1157> XINCLUDE "dos.include.bb2"
00002B92 <dos.include.bb2@1175> XINCLUDE "dos.include.bb2"
00002BFE <dos.include.bb2@1177> XINCLUDE "dos.include.bb2"
00002C26 <dos.include.bb2@1178> XINCLUDE "dos.include.bb2"
00002C34 <dos.include.bb2@1179> XINCLUDE "dos.include.bb2"
00002C68 <dos.include.bb2@1180> XINCLUDE "dos.include.bb2"
00002C76 <dos.include.bb2@1183> XINCLUDE "dos.include.bb2"
00002C98 <dos.include.bb2@1189> XINCLUDE "dos.include.bb2"
00002CA6 <dos.include.bb2@1193> XINCLUDE "dos.include.bb2"
00002CCA <dos.include.bb2@1194> XINCLUDE "dos.include.bb2"
00002CF4 <dos.include.bb2@1195> XINCLUDE "dos.include.bb2"
00002D1E <dos.include.bb2@1198> XINCLUDE "dos.include.bb2"
00002D3C <dos.include.bb2@1199> XINCLUDE "dos.include.bb2"
00002D66 <dos.include.bb2@1260> XINCLUDE "dos.include.bb2"
00002DBE <dos.include.bb2@1261> XINCLUDE "dos.include.bb2"
00002DE8 <dos.include.bb2@1262> XINCLUDE "dos.include.bb2"
00002E06 <dos.include.bb2@1263> XINCLUDE "dos.include.bb2"
00002E1C <dos.include.bb2@1337> XINCLUDE "dos.include.bb2"
00002E22 <dos.include.bb2@1339> XINCLUDE "dos.include.bb2"
00002E2C <dos.include.bb2@1340> XINCLUDE "dos.include.bb2"
00002E36 <dos.include.bb2@1341> XINCLUDE "dos.include.bb2"
00002E54 <dos.include.bb2@1344> XINCLUDE "dos.include.bb2"
00002E5A <dos.include.bb2@1345> XINCLUDE "dos.include.bb2"
00002E60 <dos.include.bb2@1346> XINCLUDE "dos.include.bb2"
00002E70 <dos.include.bb2@1348> XINCLUDE "dos.include.bb2"
00002E76 <dos.include.bb2@1349> XINCLUDE "dos.include.bb2"
00002E7E <dos.include.bb2@1350> XINCLUDE "dos.include.bb2"
00002EA6 <dos.include.bb2@1351> XINCLUDE "dos.include.bb2"
00002EB0 <dos.include.bb2@1352> XINCLUDE "dos.include.bb2"
00002EBA <dos.include.bb2@1354> XINCLUDE "dos.include.bb2"
00002ECE <dos.include.bb2@1355> XINCLUDE "dos.include.bb2"
00002EE4 <dos.include.bb2@1460> XINCLUDE "dos.include.bb2"
00002EEA <dos.include.bb2@1466> XINCLUDE "dos.include.bb2"
00002F0E <dos.include.bb2@1467> XINCLUDE "dos.include.bb2"
00002F32 <dos.include.bb2@1468> XINCLUDE "dos.include.bb2"
00002F56 <dos.include.bb2@1469> XINCLUDE "dos.include.bb2"
00002F5C <dos.include.bb2@1470> XINCLUDE "dos.include.bb2"
00002F88 <dos.include.bb2@1471> XINCLUDE "dos.include.bb2"
00002F8A <dos.include.bb2@1472> XINCLUDE "dos.include.bb2"
00002FB8 <dos.include.bb2@1473> XINCLUDE "dos.include.bb2"
00002FE2 <dos.include.bb2@1489> XINCLUDE "dos.include.bb2"
00003066 <dos.include.bb2@1492> XINCLUDE "dos.include.bb2"
0000312E <dos.include.bb2@1493> XINCLUDE "dos.include.bb2"
00003138 <dos.include.bb2@1495> XINCLUDE "dos.include.bb2"
00003182 <dos.include.bb2@1496> XINCLUDE "dos.include.bb2"
000031CE <dos.include.bb2@1498> XINCLUDE "dos.include.bb2"
00003206 <dos.include.bb2@1499> XINCLUDE "dos.include.bb2"
00003218 <dos.include.bb2@1500> XINCLUDE "dos.include.bb2"
0000322E <dos.include.bb2@1501> XINCLUDE "dos.include.bb2"
00003234 <dos.include.bb2@1502> XINCLUDE "dos.include.bb2"
0000324A <dos.include.bb2@1503> XINCLUDE "dos.include.bb2"
0000327E <dos.include.bb2@1505> XINCLUDE "dos.include.bb2"
00003284 <dos.include.bb2@1506> XINCLUDE "dos.include.bb2"
0000328E <dos.include.bb2@1508> XINCLUDE "dos.include.bb2"
000032A8 <dos.include.bb2@1509> XINCLUDE "dos.include.bb2"
000032F2 <dos.include.bb2@1539> XINCLUDE "dos.include.bb2"
00003328 <dos.include.bb2@1541> XINCLUDE "dos.include.bb2"
0000334C <dos.include.bb2@1542> XINCLUDE "dos.include.bb2"
00003356 <dos.include.bb2@1543> XINCLUDE "dos.include.bb2"
0000337E <dos.include.bb2@1544> XINCLUDE "dos.include.bb2"
000033C6 <dos.include.bb2@1547> XINCLUDE "dos.include.bb2"
0000349C <dos.include.bb2@1549> XINCLUDE "dos.include.bb2"
000034C6 <dos.include.bb2@1550> XINCLUDE "dos.include.bb2"
000034E6 <dos.include.bb2@1551> XINCLUDE "dos.include.bb2"
00003520 <dos.include.bb2@1570> XINCLUDE "dos.include.bb2"
00003526 <dos.include.bb2@1572> XINCLUDE "dos.include.bb2"
0000352C <dos.include.bb2@1573> XINCLUDE "dos.include.bb2"
00003534 <dos.include.bb2@1574> XINCLUDE "dos.include.bb2"
0000356A <dos.include.bb2@1575> XINCLUDE "dos.include.bb2"
00003578 <dos.include.bb2@1576> XINCLUDE "dos.include.bb2"
00003582 <dos.include.bb2@1577> XINCLUDE "dos.include.bb2"
000035AE <dos.include.bb2@1578> XINCLUDE "dos.include.bb2"
000035BC <dos.include.bb2@1579> XINCLUDE "dos.include.bb2"
000035C6 <dos.include.bb2@1580> XINCLUDE "dos.include.bb2"
000035F4 <dos.include.bb2@1582> XINCLUDE "dos.include.bb2"
00003672 <dos.include.bb2@1585> XINCLUDE "dos.include.bb2"
000036C4 <dos.include.bb2@1588> XINCLUDE "dos.include.bb2"
000036D6 <dos.include.bb2@1589> XINCLUDE "dos.include.bb2"
00003744 <dos.include.bb2@1590> XINCLUDE "dos.include.bb2"
0000374A <dos.include.bb2@1591> XINCLUDE "dos.include.bb2"
00003796 <dos.include.bb2@1592> XINCLUDE "dos.include.bb2"
00003864 <dos.include.bb2@1596> XINCLUDE "dos.include.bb2"
00003944 <dos.include.bb2@1597> XINCLUDE "dos.include.bb2"
000039B0 <dos.include.bb2@1599> XINCLUDE "dos.include.bb2"
000039B6 <dos.include.bb2@1600> XINCLUDE "dos.include.bb2"
000039D2 <dos.include.bb2@1601> XINCLUDE "dos.include.bb2"
000039E0 <dos.include.bb2@1604> XINCLUDE "dos.include.bb2"
000039E6 <dos.include.bb2@1605> XINCLUDE "dos.include.bb2"
000039F8 <dos.include.bb2@1608> XINCLUDE "dos.include.bb2"
00003A0E <dos.include.bb2@1609> XINCLUDE "dos.include.bb2"
00003A18 <dos.include.bb2@1610> XINCLUDE "dos.include.bb2"
00003A34 <dos.include.bb2@1611> XINCLUDE "dos.include.bb2"
00003A5E <dos.include.bb2@2187> XINCLUDE "dos.include.bb2"
00003A72 <dos.include.bb2@2188> XINCLUDE "dos.include.bb2"
00003AB0 <dos.include.bb2@2189> XINCLUDE "dos.include.bb2"
00003B96 <dos.include.bb2@2190> XINCLUDE "dos.include.bb2"
00003B9C <dos.include.bb2@2191> XINCLUDE "dos.include.bb2"
00003BEC <dos.include.bb2@2192> XINCLUDE "dos.include.bb2"
00003C16 <dos.include.bb2@2193> XINCLUDE "dos.include.bb2"
00003C34 <dos.include.bb2@2194> XINCLUDE "dos.include.bb2"
00003C5E <dos.include.bb2@2218> XINCLUDE "dos.include.bb2"
00003C72 <dos.include.bb2@2219> XINCLUDE "dos.include.bb2"
00003CB0 <dos.include.bb2@2220> XINCLUDE "dos.include.bb2"
00003D96 <dos.include.bb2@2221> XINCLUDE "dos.include.bb2"
00003D9C <dos.include.bb2@2222> XINCLUDE "dos.include.bb2"
00003E0E <dos.include.bb2@2223> XINCLUDE "dos.include.bb2"
00003E38 <dos.include.bb2@2224> XINCLUDE "dos.include.bb2"
00003E56 <dos.include.bb2@2225> XINCLUDE "dos.include.bb2"
00003E90 <dos.include.bb2@2251> XINCLUDE "dos.include.bb2"
00003EC8 <dos.include.bb2@2252> XINCLUDE "dos.include.bb2"
00003F20 <dos.include.bb2@2253> XINCLUDE "dos.include.bb2"
00003F84 <dos.include.bb2@2254> XINCLUDE "dos.include.bb2"
00003FAE <dos.include.bb2@2256> XINCLUDE "dos.include.bb2"
00003FCE <dos.include.bb2@2257> XINCLUDE "dos.include.bb2"
00003FF8 <dos.include.bb2@2274> XINCLUDE "dos.include.bb2"
00003FFE <dos.include.bb2@2275> XINCLUDE "dos.include.bb2"
00004014 <dos.include.bb2@2276> XINCLUDE "dos.include.bb2"
0000401E <dos.include.bb2@2277> XINCLUDE "dos.include.bb2"
00004024 <dos.include.bb2@2278> XINCLUDE "dos.include.bb2"
00004034 <dos.include.bb2@2279> XINCLUDE "dos.include.bb2"
0000403E <dos.include.bb2@2281> XINCLUDE "dos.include.bb2"
00004058 <dos.include.bb2@2282> XINCLUDE "dos.include.bb2"
00004086 <dos.include.bb2@2516> XINCLUDE "dos.include.bb2"
000040A8 <dos.include.bb2@2517> XINCLUDE "dos.include.bb2"
000040B0 <dos.include.bb2@2518> XINCLUDE "dos.include.bb2"
000040BE <dos.include.bb2@2519> XINCLUDE "dos.include.bb2"
000040D8 <dos.include.bb2@2521> XINCLUDE "dos.include.bb2"
00004106 <dos.include.bb2@2540> XINCLUDE "dos.include.bb2"
0000411A <dos.include.bb2@2541> XINCLUDE "dos.include.bb2"
0000414E <dos.include.bb2@2542> XINCLUDE "dos.include.bb2"
00004168 <dos.include.bb2@2544> XINCLUDE "dos.include.bb2"
00004170 <dos.include.bb2@2545> XINCLUDE "dos.include.bb2"
0000417E <dos.include.bb2@2546> XINCLUDE "dos.include.bb2"
00004198 <dos.include.bb2@2548> XINCLUDE "dos.include.bb2"
000041C2 <dos.include.bb2@2684> XINCLUDE "dos.include.bb2"
000041CE <dos.include.bb2@2686> XINCLUDE "dos.include.bb2"
000041EE <dos.include.bb2@2687> XINCLUDE "dos.include.bb2"
00004214 <dos.include.bb2@2688> XINCLUDE "dos.include.bb2"
00004240 <dos.include.bb2@2689> XINCLUDE "dos.include.bb2"
00004258 <dos.include.bb2@2690> XINCLUDE "dos.include.bb2"
00004266 <dos.include.bb2@2692> XINCLUDE "dos.include.bb2"
0000426C <dos.include.bb2@2693> XINCLUDE "dos.include.bb2"
00004278 <dos.include.bb2@2694> XINCLUDE "dos.include.bb2"
0000427E <dos.include.bb2@2696> XINCLUDE "dos.include.bb2"
0000428A <dos.include.bb2@2697> XINCLUDE "dos.include.bb2"
0000429A <dos.include.bb2@2699> XINCLUDE "dos.include.bb2"
000042A0 <dos.include.bb2@2700> XINCLUDE "dos.include.bb2"
000042AC <dos.include.bb2@2701> XINCLUDE "dos.include.bb2"
000042B6 <dos.include.bb2@2703> XINCLUDE "dos.include.bb2"
000042D0 <dos.include.bb2@2704> XINCLUDE "dos.include.bb2"
000042D0 <AmiBlitz3.ab2@79> XINCLUDE "dos.include.bb2"
000042DE <AmiBlitz3.ab2@81> If dos_FromCLI{}
000042E4 <AmiBlitz3.ab2@82>   CLIMode.l=True
000042F0 <AmiBlitz3.ab2@83>   error_SetFlags{#error_stdout}
000042F0 <common.ab3@1> XINCLUDE "/Shared/common.ab3"
00004318 <common.ab3@38> XINCLUDE "/Shared/common.ab3"
0000431E <common.ab3@250> XINCLUDE "/Shared/common.ab3"
00004320 <common.ab3@251> XINCLUDE "/Shared/common.ab3"
000044B0 <common.ab3@252> XINCLUDE "/Shared/common.ab3"
000044B4 <common.ab3@253> XINCLUDE "/Shared/common.ab3"
000044B8 <common.ab3@255> XINCLUDE "/Shared/common.ab3"
000044BC <common.ab3@256> XINCLUDE "/Shared/common.ab3"
000044C0 <common.ab3@258> XINCLUDE "/Shared/common.ab3"
000044C4 <common.ab3@259> XINCLUDE "/Shared/common.ab3"
000044C8 <common.ab3@260> XINCLUDE "/Shared/common.ab3"
000044CC <common.ab3@261> XINCLUDE "/Shared/common.ab3"
000044D0 <common.ab3@262> XINCLUDE "/Shared/common.ab3"
000044D4 <common.ab3@263> XINCLUDE "/Shared/common.ab3"
000044D8 <common.ab3@264> XINCLUDE "/Shared/common.ab3"
000044DC <common.ab3@265> XINCLUDE "/Shared/common.ab3"
000044E0 <common.ab3@266> XINCLUDE "/Shared/common.ab3"
000044E4 <common.ab3@268> XINCLUDE "/Shared/common.ab3"
000044E8 <common.ab3@270> XINCLUDE "/Shared/common.ab3"
000044EC <common.ab3@271> XINCLUDE "/Shared/common.ab3"
000044F0 <common.ab3@272> XINCLUDE "/Shared/common.ab3"
000044F4 <common.ab3@273> XINCLUDE "/Shared/common.ab3"
000044F8 <common.ab3@274> XINCLUDE "/Shared/common.ab3"
000044FC <common.ab3@275> XINCLUDE "/Shared/common.ab3"
00004500 <common.ab3@276> XINCLUDE "/Shared/common.ab3"
00004504 <common.ab3@277> XINCLUDE "/Shared/common.ab3"
00004508 <common.ab3@278> XINCLUDE "/Shared/common.ab3"
0000450C <common.ab3@279> XINCLUDE "/Shared/common.ab3"
00004514 <common.ab3@282> XINCLUDE "/Shared/common.ab3"
00004518 <common.ab3@283> XINCLUDE "/Shared/common.ab3"
0000451A <common.ab3@284> XINCLUDE "/Shared/common.ab3"
0000451E <common.ab3@285> XINCLUDE "/Shared/common.ab3"
00004520 <common.ab3@286> XINCLUDE "/Shared/common.ab3"
00004524 <common.ab3@287> XINCLUDE "/Shared/common.ab3"
00004528 <common.ab3@288> XINCLUDE "/Shared/common.ab3"
0000452C <common.ab3@289> XINCLUDE "/Shared/common.ab3"
00004530 <common.ab3@290> XINCLUDE "/Shared/common.ab3"
00004534 <common.ab3@291> XINCLUDE "/Shared/common.ab3"
0000453C <common.ab3@292> XINCLUDE "/Shared/common.ab3"
00004544 <common.ab3@293> XINCLUDE "/Shared/common.ab3"
00004548 <common.ab3@294> XINCLUDE "/Shared/common.ab3"
0000454C <common.ab3@295> XINCLUDE "/Shared/common.ab3"
00004550 <common.ab3@296> XINCLUDE "/Shared/common.ab3"
00004552 <common.ab3@298> XINCLUDE "/Shared/common.ab3"
00004612 <common.ab3@299> XINCLUDE "/Shared/common.ab3"
0000465A <common.ab3@300> XINCLUDE "/Shared/common.ab3"
0000465E <common.ab3@302> XINCLUDE "/Shared/common.ab3"
00004660 <common.ab3@303> XINCLUDE "/Shared/common.ab3"
00004664 <common.ab3@304> XINCLUDE "/Shared/common.ab3"
00004666 <common.ab3@305> XINCLUDE "/Shared/common.ab3"
00004668 <common.ab3@306> XINCLUDE "/Shared/common.ab3"
0000466A <common.ab3@307> XINCLUDE "/Shared/common.ab3"
0000466C <common.ab3@308> XINCLUDE "/Shared/common.ab3"
0000466E <common.ab3@310> XINCLUDE "/Shared/common.ab3"
00004670 <common.ab3@311> XINCLUDE "/Shared/common.ab3"
00004671 <common.ab3@313> XINCLUDE "/Shared/common.ab3"
00004672 <common.ab3@314> XINCLUDE "/Shared/common.ab3"
00004674 <common.ab3@315> XINCLUDE "/Shared/common.ab3"
00004676 <common.ab3@316> XINCLUDE "/Shared/common.ab3"
00004678 <common.ab3@318> XINCLUDE "/Shared/common.ab3"
0000467A <common.ab3@321> XINCLUDE "/Shared/common.ab3"
0000467C <common.ab3@323> XINCLUDE "/Shared/common.ab3"
0000467E <common.ab3@325> XINCLUDE "/Shared/common.ab3"
00004682 <common.ab3@327> XINCLUDE "/Shared/common.ab3"
00004684 <common.ab3@329> XINCLUDE "/Shared/common.ab3"
00004686 <common.ab3@330> XINCLUDE "/Shared/common.ab3"
00004688 <common.ab3@332> XINCLUDE "/Shared/common.ab3"
0000468C <common.ab3@334> XINCLUDE "/Shared/common.ab3"
0000468E <common.ab3@335> XINCLUDE "/Shared/common.ab3"
00004690 <common.ab3@336> XINCLUDE "/Shared/common.ab3"
00004694 <common.ab3@339> XINCLUDE "/Shared/common.ab3"
00004696 <common.ab3@340> XINCLUDE "/Shared/common.ab3"
00004698 <common.ab3@341> XINCLUDE "/Shared/common.ab3"
0000469A <common.ab3@342> XINCLUDE "/Shared/common.ab3"
0000469C <common.ab3@344> XINCLUDE "/Shared/common.ab3"
0000469E <common.ab3@345> XINCLUDE "/Shared/common.ab3"
000046A2 <common.ab3@347> XINCLUDE "/Shared/common.ab3"
000046A4 <common.ab3@348> XINCLUDE "/Shared/common.ab3"
000046A6 <common.ab3@349> XINCLUDE "/Shared/common.ab3"
000046A8 <common.ab3@353> XINCLUDE "/Shared/common.ab3"
000046AA <common.ab3@354> XINCLUDE "/Shared/common.ab3"
000046AE <common.ab3@355> XINCLUDE "/Shared/common.ab3"
000046B0 <common.ab3@361> XINCLUDE "/Shared/common.ab3"
000046B2 <common.ab3@363> XINCLUDE "/Shared/common.ab3"
000046B4 <common.ab3@365> XINCLUDE "/Shared/common.ab3"
000046B6 <common.ab3@366> XINCLUDE "/Shared/common.ab3"
000046B8 <common.ab3@367> XINCLUDE "/Shared/common.ab3"
000046BC <common.ab3@368> XINCLUDE "/Shared/common.ab3"
000046BE <common.ab3@369> XINCLUDE "/Shared/common.ab3"
000046C0 <common.ab3@370> XINCLUDE "/Shared/common.ab3"
000046C2 <common.ab3@371> XINCLUDE "/Shared/common.ab3"
000046C4 <common.ab3@372> XINCLUDE "/Shared/common.ab3"
000046C6 <common.ab3@374> XINCLUDE "/Shared/common.ab3"
000046C8 <common.ab3@376> XINCLUDE "/Shared/common.ab3"
000046CA <common.ab3@378> XINCLUDE "/Shared/common.ab3"
000046CE <common.ab3@379> XINCLUDE "/Shared/common.ab3"
000046D0 <common.ab3@380> XINCLUDE "/Shared/common.ab3"
000046FE <common.ab3@381> XINCLUDE "/Shared/common.ab3"
00004708 <common.ab3@382> XINCLUDE "/Shared/common.ab3"
0000470C <common.ab3@383> XINCLUDE "/Shared/common.ab3"
0000470E <common.ab3@385> XINCLUDE "/Shared/common.ab3"
00004710 <common.ab3@386> XINCLUDE "/Shared/common.ab3"
00004714 <common.ab3@387> XINCLUDE "/Shared/common.ab3"
00004718 <common.ab3@388> XINCLUDE "/Shared/common.ab3"
00004721 <common.ab3@389> XINCLUDE "/Shared/common.ab3"
00004724 <common.ab3@390> XINCLUDE "/Shared/common.ab3"
00004751 <common.ab3@391> XINCLUDE "/Shared/common.ab3"
00004791 <common.ab3@392> XINCLUDE "/Shared/common.ab3"
0000479D <common.ab3@393> XINCLUDE "/Shared/common.ab3"
000047ED <common.ab3@394> XINCLUDE "/Shared/common.ab3"
000047F9 <common.ab3@395> XINCLUDE "/Shared/common.ab3"
00004849 <common.ab3@396> XINCLUDE "/Shared/common.ab3"
00004945 <common.ab3@397> XINCLUDE "/Shared/common.ab3"
00004947 <common.ab3@398> XINCLUDE "/Shared/common.ab3"
00004A07 <common.ab3@399> XINCLUDE "/Shared/common.ab3"
00004A47 <common.ab3@400> XINCLUDE "/Shared/common.ab3"
00004A49 <common.ab3@401> XINCLUDE "/Shared/common.ab3"
00004A4A <common.ab3@402> XINCLUDE "/Shared/common.ab3"
00004A4E <common.ab3@405> XINCLUDE "/Shared/common.ab3"
00004A52 <common.ab3@407> XINCLUDE "/Shared/common.ab3"
00004A56 <common.ab3@408> XINCLUDE "/Shared/common.ab3"
00004A5A <common.ab3@409> XINCLUDE "/Shared/common.ab3"
00004A5E <common.ab3@411> XINCLUDE "/Shared/common.ab3"
00004A62 <common.ab3@413> XINCLUDE "/Shared/common.ab3"
00004A66 <common.ab3@414> XINCLUDE "/Shared/common.ab3"
00004A6A <common.ab3@415> XINCLUDE "/Shared/common.ab3"
00004A6E <common.ab3@416> XINCLUDE "/Shared/common.ab3"
00004A72 <common.ab3@417> XINCLUDE "/Shared/common.ab3"
00004A76 <common.ab3@418> XINCLUDE "/Shared/common.ab3"
00004A7A <common.ab3@419> XINCLUDE "/Shared/common.ab3"
00004A7E <common.ab3@420> XINCLUDE "/Shared/common.ab3"
00004A82 <common.ab3@422> XINCLUDE "/Shared/common.ab3"
00004A86 <common.ab3@424> XINCLUDE "/Shared/common.ab3"
00004A8A <common.ab3@426> XINCLUDE "/Shared/common.ab3"
00004A8E <common.ab3@428> XINCLUDE "/Shared/common.ab3"
00004A92 <common.ab3@429> XINCLUDE "/Shared/common.ab3"
00004A9C <common.ab3@430> XINCLUDE "/Shared/common.ab3"
00004AA0 <common.ab3@431> XINCLUDE "/Shared/common.ab3"
00004AA4 <common.ab3@434> XINCLUDE "/Shared/common.ab3"
00004AA6 <common.ab3@435> XINCLUDE "/Shared/common.ab3"
00004AA8 <common.ab3@436> XINCLUDE "/Shared/common.ab3"
00004AC6 <common.ab3@437> XINCLUDE "/Shared/common.ab3"
00004ACA <common.ab3@438> XINCLUDE "/Shared/common.ab3"
00004ACC <common.ab3@440> XINCLUDE "/Shared/common.ab3"
00004AD0 <common.ab3@441> XINCLUDE "/Shared/common.ab3"
00004B04 <common.ab3@442> XINCLUDE "/Shared/common.ab3"
00004B08 <common.ab3@443> XINCLUDE "/Shared/common.ab3"
00004B16 <common.ab3@445> XINCLUDE "/Shared/common.ab3"
00004B28 <common.ab3@446> XINCLUDE "/Shared/common.ab3"
00004B2A <common.ab3@447> XINCLUDE "/Shared/common.ab3"
00004B3E <common.ab3@448> XINCLUDE "/Shared/common.ab3"
00004B54 <common.ab3@449> XINCLUDE "/Shared/common.ab3"
00004B6A <common.ab3@450> XINCLUDE "/Shared/common.ab3"
00004B80 <common.ab3@451> XINCLUDE "/Shared/common.ab3"
00004B96 <common.ab3@452> XINCLUDE "/Shared/common.ab3"
00004B98 <common.ab3@453> XINCLUDE "/Shared/common.ab3"
00004B9A <common.ab3@454> XINCLUDE "/Shared/common.ab3"
00004B9E <common.ab3@456> XINCLUDE "/Shared/common.ab3"
00004BA2 <common.ab3@458> XINCLUDE "/Shared/common.ab3"
00004BA6 <common.ab3@460> XINCLUDE "/Shared/common.ab3"
00004BAA <common.ab3@461> XINCLUDE "/Shared/common.ab3"
00004BAE <common.ab3@462> XINCLUDE "/Shared/common.ab3"
00004BB2 <common.ab3@463> XINCLUDE "/Shared/common.ab3"
00004BB6 <common.ab3@464> XINCLUDE "/Shared/common.ab3"
00004BBA <common.ab3@465> XINCLUDE "/Shared/common.ab3"
00004BBE <common.ab3@466> XINCLUDE "/Shared/common.ab3"
00004BC2 <common.ab3@467> XINCLUDE "/Shared/common.ab3"
00004BC8 <common.ab3@468> XINCLUDE "/Shared/common.ab3"
00004BDA <common.ab3@469> XINCLUDE "/Shared/common.ab3"
00004BDC <common.ab3@473> XINCLUDE "/Shared/common.ab3"
00004BE0 <common.ab3@474> XINCLUDE "/Shared/common.ab3"
00004BE2 <common.ab3@475> XINCLUDE "/Shared/common.ab3"
00004BE6 <common.ab3@476> XINCLUDE "/Shared/common.ab3"
00004BE8 <common.ab3@477> XINCLUDE "/Shared/common.ab3"
00004BEC <common.ab3@478> XINCLUDE "/Shared/common.ab3"
00004BEE <common.ab3@479> XINCLUDE "/Shared/common.ab3"
00004BF2 <common.ab3@480> XINCLUDE "/Shared/common.ab3"
00004BF4 <common.ab3@481> XINCLUDE "/Shared/common.ab3"
00004BF8 <common.ab3@482> XINCLUDE "/Shared/common.ab3"
00004BFA <common.ab3@483> XINCLUDE "/Shared/common.ab3"
00004BFE <common.ab3@484> XINCLUDE "/Shared/common.ab3"
00004C00 <common.ab3@485> XINCLUDE "/Shared/common.ab3"
00004C04 <common.ab3@486> XINCLUDE "/Shared/common.ab3"
00004C06 <common.ab3@487> XINCLUDE "/Shared/common.ab3"
00004C0A <common.ab3@488> XINCLUDE "/Shared/common.ab3"
00004C0C <common.ab3@489> XINCLUDE "/Shared/common.ab3"
00004C10 <common.ab3@490> XINCLUDE "/Shared/common.ab3"
00004C12 <common.ab3@491> XINCLUDE "/Shared/common.ab3"
00004C16 <common.ab3@492> XINCLUDE "/Shared/common.ab3"
00004C18 <common.ab3@493> XINCLUDE "/Shared/common.ab3"
00004C1C <common.ab3@494> XINCLUDE "/Shared/common.ab3"
00004C1E <common.ab3@495> XINCLUDE "/Shared/common.ab3"
00004C22 <common.ab3@496> XINCLUDE "/Shared/common.ab3"
00004C24 <common.ab3@497> XINCLUDE "/Shared/common.ab3"
00004C28 <common.ab3@498> XINCLUDE "/Shared/common.ab3"
00004C2A <common.ab3@499> XINCLUDE "/Shared/common.ab3"
00004C2E <common.ab3@500> XINCLUDE "/Shared/common.ab3"
00004C30 <common.ab3@501> XINCLUDE "/Shared/common.ab3"
00004C44 <common.ab3@505> XINCLUDE "/Shared/common.ab3"
00004C58 <common.ab3@506> XINCLUDE "/Shared/common.ab3"
00004C6C <common.ab3@507> XINCLUDE "/Shared/common.ab3"
00004C6E <common.ab3@508> XINCLUDE "/Shared/common.ab3"
00004C72 <common.ab3@509> XINCLUDE "/Shared/common.ab3"
00004C76 <common.ab3@510> XINCLUDE "/Shared/common.ab3"
00004C7A <common.ab3@511> XINCLUDE "/Shared/common.ab3"
00004C7E <common.ab3@512> XINCLUDE "/Shared/common.ab3"
00004C82 <common.ab3@513> XINCLUDE "/Shared/common.ab3"
00004C86 <common.ab3@514> XINCLUDE "/Shared/common.ab3"
00004C8A <common.ab3@515> XINCLUDE "/Shared/common.ab3"
00004C8B <common.ab3@516> XINCLUDE "/Shared/common.ab3"
00004C8C <common.ab3@517> XINCLUDE "/Shared/common.ab3"
00004C8D <common.ab3@518> XINCLUDE "/Shared/common.ab3"
00004C90 <common.ab3@519> XINCLUDE "/Shared/common.ab3"
00004C94 <common.ab3@520> XINCLUDE "/Shared/common.ab3"
00004C98 <common.ab3@521> XINCLUDE "/Shared/common.ab3"
00004C9C <common.ab3@522> XINCLUDE "/Shared/common.ab3"
00004CA0 <common.ab3@523> XINCLUDE "/Shared/common.ab3"
00004CA4 <common.ab3@524> XINCLUDE "/Shared/common.ab3"
00004CA8 <common.ab3@525> XINCLUDE "/Shared/common.ab3"
00004CA9 <common.ab3@526> XINCLUDE "/Shared/common.ab3"
00004CAA <common.ab3@527> XINCLUDE "/Shared/common.ab3"
00004CAC <common.ab3@528> XINCLUDE "/Shared/common.ab3"
00004CB0 <common.ab3@529> XINCLUDE "/Shared/common.ab3"
00004CB4 <common.ab3@530> XINCLUDE "/Shared/common.ab3"
00004CB8 <common.ab3@531> XINCLUDE "/Shared/common.ab3"
00004CBC <common.ab3@533> XINCLUDE "/Shared/common.ab3"
00004CC0 <common.ab3@534> XINCLUDE "/Shared/common.ab3"
00004CC4 <common.ab3@535> XINCLUDE "/Shared/common.ab3"
00004CC8 <common.ab3@536> XINCLUDE "/Shared/common.ab3"
00004CCC <common.ab3@537> XINCLUDE "/Shared/common.ab3"
00004CD0 <common.ab3@538> XINCLUDE "/Shared/common.ab3"
00004CD4 <common.ab3@539> XINCLUDE "/Shared/common.ab3"
00004CD8 <common.ab3@540> XINCLUDE "/Shared/common.ab3"
00004CDC <common.ab3@544> XINCLUDE "/Shared/common.ab3"
00004CE0 <common.ab3@545> XINCLUDE "/Shared/common.ab3"
00004CE4 <common.ab3@546> XINCLUDE "/Shared/common.ab3"
00004CE6 <common.ab3@547> XINCLUDE "/Shared/common.ab3"
00004CE7 <common.ab3@548> XINCLUDE "/Shared/common.ab3"
00004CEB <common.ab3@549> XINCLUDE "/Shared/common.ab3"
00004CEF <common.ab3@550> XINCLUDE "/Shared/common.ab3"
00004CF3 <common.ab3@551> XINCLUDE "/Shared/common.ab3"
00004CF7 <common.ab3@552> XINCLUDE "/Shared/common.ab3"
00004CF8 <common.ab3@554> XINCLUDE "/Shared/common.ab3"
00004CFC <common.ab3@556> XINCLUDE "/Shared/common.ab3"
00004D00 <common.ab3@557> XINCLUDE "/Shared/common.ab3"
00004D04 <common.ab3@558> XINCLUDE "/Shared/common.ab3"
00004D08 <common.ab3@559> XINCLUDE "/Shared/common.ab3"
00004D0C <common.ab3@560> XINCLUDE "/Shared/common.ab3"
00004D0D <common.ab3@561> XINCLUDE "/Shared/common.ab3"
00004D0E <common.ab3@563> XINCLUDE "/Shared/common.ab3"
00004D12 <common.ab3@565> XINCLUDE "/Shared/common.ab3"
00004D16 <common.ab3@566> XINCLUDE "/Shared/common.ab3"
00004D18 <common.ab3@567> XINCLUDE "/Shared/common.ab3"
00004D1A <common.ab3@568> XINCLUDE "/Shared/common.ab3"
00004D1E <common.ab3@572> XINCLUDE "/Shared/common.ab3"
00004D22 <common.ab3@573> XINCLUDE "/Shared/common.ab3"
00004D26 <common.ab3@575> XINCLUDE "/Shared/common.ab3"
00004D2A <common.ab3@576> XINCLUDE "/Shared/common.ab3"
00004D2E <common.ab3@578> XINCLUDE "/Shared/common.ab3"
00004D32 <common.ab3@579> XINCLUDE "/Shared/common.ab3"
00004D36 <common.ab3@581> XINCLUDE "/Shared/common.ab3"
00004D3A <common.ab3@582> XINCLUDE "/Shared/common.ab3"
00004D3E <common.ab3@583> XINCLUDE "/Shared/common.ab3"
00004D42 <common.ab3@584> XINCLUDE "/Shared/common.ab3"
00004D46 <common.ab3@585> XINCLUDE "/Shared/common.ab3"
00004D4A <common.ab3@586> XINCLUDE "/Shared/common.ab3"
00004D4E <common.ab3@587> XINCLUDE "/Shared/common.ab3"
00004D52 <common.ab3@588> XINCLUDE "/Shared/common.ab3"
00004D56 <common.ab3@589> XINCLUDE "/Shared/common.ab3"
00004D5A <common.ab3@590> XINCLUDE "/Shared/common.ab3"
00004D5E <common.ab3@591> XINCLUDE "/Shared/common.ab3"
00004D62 <common.ab3@592> XINCLUDE "/Shared/common.ab3"
00004D66 <common.ab3@593> XINCLUDE "/Shared/common.ab3"
00004D6A <common.ab3@594> XINCLUDE "/Shared/common.ab3"
00004D6A <AmiBlitz3.ab2@86> XINCLUDE "/Shared/common.ab3"
00004D6A <preprocessor.include.ab3@1> XINCLUDE "/Shared/preprocessor.include.ab3"
00004D6A <hashmap.include.bb2@1> XINCLUDE "/Shared/preprocessor.include.ab3"
00004D88 <hashmap.include.bb2@34> XINCLUDE "/Shared/preprocessor.include.ab3"
00004D90 <hashmap.include.bb2@35> XINCLUDE "/Shared/preprocessor.include.ab3"
00004DBE <hashmap.include.bb2@36> XINCLUDE "/Shared/preprocessor.include.ab3"
00004DEE <hashmap.include.bb2@37> XINCLUDE "/Shared/preprocessor.include.ab3"
00004DFE <hashmap.include.bb2@38> XINCLUDE "/Shared/preprocessor.include.ab3"
00004E08 <hashmap.include.bb2@39> XINCLUDE "/Shared/preprocessor.include.ab3"
00004E0E <hashmap.include.bb2@40> XINCLUDE "/Shared/preprocessor.include.ab3"
00004E30 <hashmap.include.bb2@43> XINCLUDE "/Shared/preprocessor.include.ab3"
00004E4E <hashmap.include.bb2@44> XINCLUDE "/Shared/preprocessor.include.ab3"
00004E60 <hashmap.include.bb2@45> XINCLUDE "/Shared/preprocessor.include.ab3"
00004E88 <hashmap.include.bb2@46> XINCLUDE "/Shared/preprocessor.include.ab3"
00004E8E <hashmap.include.bb2@47> XINCLUDE "/Shared/preprocessor.include.ab3"
00004EA8 <hashmap.include.bb2@50> XINCLUDE "/Shared/preprocessor.include.ab3"
00004EC0 <hashmap.include.bb2@51> XINCLUDE "/Shared/preprocessor.include.ab3"
00004ED2 <hashmap.include.bb2@52> XINCLUDE "/Shared/preprocessor.include.ab3"
00004EE0 <hashmap.include.bb2@53> XINCLUDE "/Shared/preprocessor.include.ab3"
00004F14 <hashmap.include.bb2@54> XINCLUDE "/Shared/preprocessor.include.ab3"
00004F22 <hashmap.include.bb2@55> XINCLUDE "/Shared/preprocessor.include.ab3"
00004F2C <hashmap.include.bb2@56> XINCLUDE "/Shared/preprocessor.include.ab3"
00004F3E <hashmap.include.bb2@57> XINCLUDE "/Shared/preprocessor.include.ab3"
00004F78 <hashmap.include.bb2@58> XINCLUDE "/Shared/preprocessor.include.ab3"
00004F88 <hashmap.include.bb2@59> XINCLUDE "/Shared/preprocessor.include.ab3"
00004F8E <hashmap.include.bb2@61> XINCLUDE "/Shared/preprocessor.include.ab3"
00004F9E <hashmap.include.bb2@62> XINCLUDE "/Shared/preprocessor.include.ab3"
00004FAE <hashmap.include.bb2@64> XINCLUDE "/Shared/preprocessor.include.ab3"
00004FBC <hashmap.include.bb2@66> XINCLUDE "/Shared/preprocessor.include.ab3"
00004FCC <hashmap.include.bb2@67> XINCLUDE "/Shared/preprocessor.include.ab3"
00004FF0 <hashmap.include.bb2@68> XINCLUDE "/Shared/preprocessor.include.ab3"
00004FFC <hashmap.include.bb2@70> XINCLUDE "/Shared/preprocessor.include.ab3"
0000500A <hashmap.include.bb2@71> XINCLUDE "/Shared/preprocessor.include.ab3"
00005018 <hashmap.include.bb2@72> XINCLUDE "/Shared/preprocessor.include.ab3"
00005026 <hashmap.include.bb2@73> XINCLUDE "/Shared/preprocessor.include.ab3"
00005034 <hashmap.include.bb2@74> XINCLUDE "/Shared/preprocessor.include.ab3"
0000506A <hashmap.include.bb2@75> XINCLUDE "/Shared/preprocessor.include.ab3"
00005078 <hashmap.include.bb2@76> XINCLUDE "/Shared/preprocessor.include.ab3"
00005088 <hashmap.include.bb2@77> XINCLUDE "/Shared/preprocessor.include.ab3"
00005090 <hashmap.include.bb2@78> XINCLUDE "/Shared/preprocessor.include.ab3"
00005094 <hashmap.include.bb2@79> XINCLUDE "/Shared/preprocessor.include.ab3"
000050AE <hashmap.include.bb2@82> XINCLUDE "/Shared/preprocessor.include.ab3"
000050C8 <hashmap.include.bb2@83> XINCLUDE "/Shared/preprocessor.include.ab3"
000050E2 <hashmap.include.bb2@84> XINCLUDE "/Shared/preprocessor.include.ab3"
00005102 <hashmap.include.bb2@86> XINCLUDE "/Shared/preprocessor.include.ab3"
0000510C <hashmap.include.bb2@87> XINCLUDE "/Shared/preprocessor.include.ab3"
00005118 <hashmap.include.bb2@88> XINCLUDE "/Shared/preprocessor.include.ab3"
0000512C <hashmap.include.bb2@89> XINCLUDE "/Shared/preprocessor.include.ab3"
0000515E <hashmap.include.bb2@90> XINCLUDE "/Shared/preprocessor.include.ab3"
00005176 <hashmap.include.bb2@91> XINCLUDE "/Shared/preprocessor.include.ab3"
00005182 <hashmap.include.bb2@92> XINCLUDE "/Shared/preprocessor.include.ab3"
00005190 <hashmap.include.bb2@93> XINCLUDE "/Shared/preprocessor.include.ab3"
0000519E <hashmap.include.bb2@94> XINCLUDE "/Shared/preprocessor.include.ab3"
000051AC <hashmap.include.bb2@95> XINCLUDE "/Shared/preprocessor.include.ab3"
000051BA <hashmap.include.bb2@96> XINCLUDE "/Shared/preprocessor.include.ab3"
000051E4 <hashmap.include.bb2@97> XINCLUDE "/Shared/preprocessor.include.ab3"
000051EE <hashmap.include.bb2@99> XINCLUDE "/Shared/preprocessor.include.ab3"
000051F4 <hashmap.include.bb2@100> XINCLUDE "/Shared/preprocessor.include.ab3"
00005222 <hashmap.include.bb2@103> XINCLUDE "/Shared/preprocessor.include.ab3"
0000523A <hashmap.include.bb2@104> XINCLUDE "/Shared/preprocessor.include.ab3"
00005258 <hashmap.include.bb2@105> XINCLUDE "/Shared/preprocessor.include.ab3"
0000526C <hashmap.include.bb2@106> XINCLUDE "/Shared/preprocessor.include.ab3"
00005284 <hashmap.include.bb2@107> XINCLUDE "/Shared/preprocessor.include.ab3"
000052AC <hashmap.include.bb2@108> XINCLUDE "/Shared/preprocessor.include.ab3"
000052C4 <hashmap.include.bb2@109> XINCLUDE "/Shared/preprocessor.include.ab3"
000052D2 <hashmap.include.bb2@110> XINCLUDE "/Shared/preprocessor.include.ab3"
000052E0 <hashmap.include.bb2@111> XINCLUDE "/Shared/preprocessor.include.ab3"
000052EE <hashmap.include.bb2@112> XINCLUDE "/Shared/preprocessor.include.ab3"
00005302 <hashmap.include.bb2@113> XINCLUDE "/Shared/preprocessor.include.ab3"
00005356 <hashmap.include.bb2@114> XINCLUDE "/Shared/preprocessor.include.ab3"
00005380 <hashmap.include.bb2@115> XINCLUDE "/Shared/preprocessor.include.ab3"
000053C4 <hashmap.include.bb2@117> XINCLUDE "/Shared/preprocessor.include.ab3"
000053E4 <hashmap.include.bb2@118> XINCLUDE "/Shared/preprocessor.include.ab3"
000053F6 <hashmap.include.bb2@119> XINCLUDE "/Shared/preprocessor.include.ab3"
0000541A <hashmap.include.bb2@120> XINCLUDE "/Shared/preprocessor.include.ab3"
00005428 <hashmap.include.bb2@121> XINCLUDE "/Shared/preprocessor.include.ab3"
00005480 <hashmap.include.bb2@122> XINCLUDE "/Shared/preprocessor.include.ab3"
000054C6 <hashmap.include.bb2@123> XINCLUDE "/Shared/preprocessor.include.ab3"
000054CC <hashmap.include.bb2@124> XINCLUDE "/Shared/preprocessor.include.ab3"
000054D4 <hashmap.include.bb2@125> XINCLUDE "/Shared/preprocessor.include.ab3"
000054FC <hashmap.include.bb2@127> XINCLUDE "/Shared/preprocessor.include.ab3"
0000550E <hashmap.include.bb2@128> XINCLUDE "/Shared/preprocessor.include.ab3"
00005520 <hashmap.include.bb2@129> XINCLUDE "/Shared/preprocessor.include.ab3"
0000555A <hashmap.include.bb2@130> XINCLUDE "/Shared/preprocessor.include.ab3"
0000556A <hashmap.include.bb2@131> XINCLUDE "/Shared/preprocessor.include.ab3"
00005570 <hashmap.include.bb2@133> XINCLUDE "/Shared/preprocessor.include.ab3"
00005580 <hashmap.include.bb2@134> XINCLUDE "/Shared/preprocessor.include.ab3"
00005586 <hashmap.include.bb2@136> XINCLUDE "/Shared/preprocessor.include.ab3"
0000558C <hashmap.include.bb2@138> XINCLUDE "/Shared/preprocessor.include.ab3"
000055A4 <hashmap.include.bb2@139> XINCLUDE "/Shared/preprocessor.include.ab3"
000055E2 <hashmap.include.bb2@142> XINCLUDE "/Shared/preprocessor.include.ab3"
00005600 <hashmap.include.bb2@143> XINCLUDE "/Shared/preprocessor.include.ab3"
00005632 <hashmap.include.bb2@144> XINCLUDE "/Shared/preprocessor.include.ab3"
00005646 <hashmap.include.bb2@145> XINCLUDE "/Shared/preprocessor.include.ab3"
0000565A <hashmap.include.bb2@146> XINCLUDE "/Shared/preprocessor.include.ab3"
00005672 <hashmap.include.bb2@147> XINCLUDE "/Shared/preprocessor.include.ab3"
0000569A <hashmap.include.bb2@149> XINCLUDE "/Shared/preprocessor.include.ab3"
000056A4 <hashmap.include.bb2@153> XINCLUDE "/Shared/preprocessor.include.ab3"
000056B2 <hashmap.include.bb2@154> XINCLUDE "/Shared/preprocessor.include.ab3"
000056CA <hashmap.include.bb2@155> XINCLUDE "/Shared/preprocessor.include.ab3"
000056D0 <hashmap.include.bb2@159> XINCLUDE "/Shared/preprocessor.include.ab3"
000056D8 <hashmap.include.bb2@160> XINCLUDE "/Shared/preprocessor.include.ab3"
000056F8 <hashmap.include.bb2@163> XINCLUDE "/Shared/preprocessor.include.ab3"
0000571E <hashmap.include.bb2@164> XINCLUDE "/Shared/preprocessor.include.ab3"
00005728 <hashmap.include.bb2@165> XINCLUDE "/Shared/preprocessor.include.ab3"
00005736 <hashmap.include.bb2@166> XINCLUDE "/Shared/preprocessor.include.ab3"
00005740 <hashmap.include.bb2@168> XINCLUDE "/Shared/preprocessor.include.ab3"
0000576C <hashmap.include.bb2@169> XINCLUDE "/Shared/preprocessor.include.ab3"
00005780 <hashmap.include.bb2@170> XINCLUDE "/Shared/preprocessor.include.ab3"
00005786 <hashmap.include.bb2@171> XINCLUDE "/Shared/preprocessor.include.ab3"
00005794 <hashmap.include.bb2@172> XINCLUDE "/Shared/preprocessor.include.ab3"
000057CA <hashmap.include.bb2@175> XINCLUDE "/Shared/preprocessor.include.ab3"
00005818 <hashmap.include.bb2@176> XINCLUDE "/Shared/preprocessor.include.ab3"
00005840 <hashmap.include.bb2@178> XINCLUDE "/Shared/preprocessor.include.ab3"
0000585A <hashmap.include.bb2@179> XINCLUDE "/Shared/preprocessor.include.ab3"
0000586C <hashmap.include.bb2@180> XINCLUDE "/Shared/preprocessor.include.ab3"
00005876 <hashmap.include.bb2@182> XINCLUDE "/Shared/preprocessor.include.ab3"
00005892 <hashmap.include.bb2@183> XINCLUDE "/Shared/preprocessor.include.ab3"
000058B8 <hashmap.include.bb2@186> XINCLUDE "/Shared/preprocessor.include.ab3"
000058D6 <hashmap.include.bb2@187> XINCLUDE "/Shared/preprocessor.include.ab3"
000058FA <hashmap.include.bb2@188> XINCLUDE "/Shared/preprocessor.include.ab3"
00005914 <hashmap.include.bb2@189> XINCLUDE "/Shared/preprocessor.include.ab3"
0000593C <hashmap.include.bb2@190> XINCLUDE "/Shared/preprocessor.include.ab3"
0000595A <hashmap.include.bb2@191> XINCLUDE "/Shared/preprocessor.include.ab3"
00005976 <hashmap.include.bb2@192> XINCLUDE "/Shared/preprocessor.include.ab3"
00005984 <hashmap.include.bb2@193> XINCLUDE "/Shared/preprocessor.include.ab3"
00005998 <hashmap.include.bb2@194> XINCLUDE "/Shared/preprocessor.include.ab3"
000059BA <hashmap.include.bb2@195> XINCLUDE "/Shared/preprocessor.include.ab3"
000059DC <hashmap.include.bb2@196> XINCLUDE "/Shared/preprocessor.include.ab3"
000059EA <hashmap.include.bb2@197> XINCLUDE "/Shared/preprocessor.include.ab3"
00005A04 <hashmap.include.bb2@198> XINCLUDE "/Shared/preprocessor.include.ab3"
00005A34 <hashmap.include.bb2@199> XINCLUDE "/Shared/preprocessor.include.ab3"
00005A3A <hashmap.include.bb2@200> XINCLUDE "/Shared/preprocessor.include.ab3"
00005A68 <hashmap.include.bb2@201> XINCLUDE "/Shared/preprocessor.include.ab3"
00005AAA <hashmap.include.bb2@202> XINCLUDE "/Shared/preprocessor.include.ab3"
00005ABA <hashmap.include.bb2@203> XINCLUDE "/Shared/preprocessor.include.ab3"
00005AC4 <hashmap.include.bb2@204> XINCLUDE "/Shared/preprocessor.include.ab3"
00005AD4 <hashmap.include.bb2@205> XINCLUDE "/Shared/preprocessor.include.ab3"
00005ADA <hashmap.include.bb2@209> XINCLUDE "/Shared/preprocessor.include.ab3"
00005AE6 <hashmap.include.bb2@210> XINCLUDE "/Shared/preprocessor.include.ab3"
00005AEC <hashmap.include.bb2@211> XINCLUDE "/Shared/preprocessor.include.ab3"
00005B1A <hashmap.include.bb2@215> XINCLUDE "/Shared/preprocessor.include.ab3"
00005B4A <hashmap.include.bb2@216> XINCLUDE "/Shared/preprocessor.include.ab3"
00005B80 <hashmap.include.bb2@217> XINCLUDE "/Shared/preprocessor.include.ab3"
00005B94 <hashmap.include.bb2@218> XINCLUDE "/Shared/preprocessor.include.ab3"
00005BAC <hashmap.include.bb2@219> XINCLUDE "/Shared/preprocessor.include.ab3"
00005BD4 <hashmap.include.bb2@220> XINCLUDE "/Shared/preprocessor.include.ab3"
00005C04 <hashmap.include.bb2@221> XINCLUDE "/Shared/preprocessor.include.ab3"
00005C20 <hashmap.include.bb2@222> XINCLUDE "/Shared/preprocessor.include.ab3"
00005C2E <hashmap.include.bb2@223> XINCLUDE "/Shared/preprocessor.include.ab3"
00005C42 <hashmap.include.bb2@224> XINCLUDE "/Shared/preprocessor.include.ab3"
00005C96 <hashmap.include.bb2@225> XINCLUDE "/Shared/preprocessor.include.ab3"
00005CC0 <hashmap.include.bb2@226> XINCLUDE "/Shared/preprocessor.include.ab3"
00005D04 <hashmap.include.bb2@227> XINCLUDE "/Shared/preprocessor.include.ab3"
00005D2A <hashmap.include.bb2@228> XINCLUDE "/Shared/preprocessor.include.ab3"
00005D30 <hashmap.include.bb2@230> XINCLUDE "/Shared/preprocessor.include.ab3"
00005D4E <hashmap.include.bb2@231> XINCLUDE "/Shared/preprocessor.include.ab3"
00005D6C <hashmap.include.bb2@232> XINCLUDE "/Shared/preprocessor.include.ab3"
00005D8A <hashmap.include.bb2@266> XINCLUDE "/Shared/preprocessor.include.ab3"
00005D90 <hashmap.include.bb2@267> XINCLUDE "/Shared/preprocessor.include.ab3"
00005DB6 <hashmap.include.bb2@268> XINCLUDE "/Shared/preprocessor.include.ab3"
00005DE4 <hashmap.include.bb2@270> XINCLUDE "/Shared/preprocessor.include.ab3"
00005E0C <hashmap.include.bb2@271> XINCLUDE "/Shared/preprocessor.include.ab3"
00005E30 <hashmap.include.bb2@272> XINCLUDE "/Shared/preprocessor.include.ab3"
00005E86 <hashmap.include.bb2@275> XINCLUDE "/Shared/preprocessor.include.ab3"
00005ED8 <hashmap.include.bb2@276> XINCLUDE "/Shared/preprocessor.include.ab3"
00005F2E <hashmap.include.bb2@277> XINCLUDE "/Shared/preprocessor.include.ab3"
00005F3E <hashmap.include.bb2@280> XINCLUDE "/Shared/preprocessor.include.ab3"
00005F90 <hashmap.include.bb2@281> XINCLUDE "/Shared/preprocessor.include.ab3"
00005FB8 <hashmap.include.bb2@282> XINCLUDE "/Shared/preprocessor.include.ab3"
00005FDE <hashmap.include.bb2@283> XINCLUDE "/Shared/preprocessor.include.ab3"
00005FF8 <hashmap.include.bb2@284> XINCLUDE "/Shared/preprocessor.include.ab3"
00006000 <hashmap.include.bb2@285> XINCLUDE "/Shared/preprocessor.include.ab3"
00006028 <hashmap.include.bb2@286> XINCLUDE "/Shared/preprocessor.include.ab3"
00006056 <hashmap.include.bb2@289> XINCLUDE "/Shared/preprocessor.include.ab3"
0000607E <hashmap.include.bb2@290> XINCLUDE "/Shared/preprocessor.include.ab3"
00006086 <hashmap.include.bb2@291> XINCLUDE "/Shared/preprocessor.include.ab3"
000060AA <hashmap.include.bb2@292> XINCLUDE "/Shared/preprocessor.include.ab3"
000060DE <hashmap.include.bb2@294> XINCLUDE "/Shared/preprocessor.include.ab3"
000060FA <hashmap.include.bb2@295> XINCLUDE "/Shared/preprocessor.include.ab3"
00006104 <hashmap.include.bb2@296> XINCLUDE "/Shared/preprocessor.include.ab3"
00006118 <hashmap.include.bb2@297> XINCLUDE "/Shared/preprocessor.include.ab3"
00006138 <hashmap.include.bb2@298> XINCLUDE "/Shared/preprocessor.include.ab3"
00006154 <hashmap.include.bb2@299> XINCLUDE "/Shared/preprocessor.include.ab3"
00006162 <hashmap.include.bb2@300> XINCLUDE "/Shared/preprocessor.include.ab3"
00006170 <hashmap.include.bb2@301> XINCLUDE "/Shared/preprocessor.include.ab3"
00006176 <hashmap.include.bb2@302> XINCLUDE "/Shared/preprocessor.include.ab3"
0000618E <hashmap.include.bb2@303> XINCLUDE "/Shared/preprocessor.include.ab3"
0000619E <hashmap.include.bb2@305> XINCLUDE "/Shared/preprocessor.include.ab3"
000061CC <hashmap.include.bb2@306> XINCLUDE "/Shared/preprocessor.include.ab3"
00006228 <hashmap.include.bb2@307> XINCLUDE "/Shared/preprocessor.include.ab3"
000062A0 <hashmap.include.bb2@308> XINCLUDE "/Shared/preprocessor.include.ab3"
000062FC <hashmap.include.bb2@309> XINCLUDE "/Shared/preprocessor.include.ab3"
00006302 <hashmap.include.bb2@310> XINCLUDE "/Shared/preprocessor.include.ab3"
0000630C <hashmap.include.bb2@312> XINCLUDE "/Shared/preprocessor.include.ab3"
00006312 <hashmap.include.bb2@313> XINCLUDE "/Shared/preprocessor.include.ab3"
00006340 <hashmap.include.bb2@316> XINCLUDE "/Shared/preprocessor.include.ab3"
00006346 <hashmap.include.bb2@317> XINCLUDE "/Shared/preprocessor.include.ab3"
00006366 <hashmap.include.bb2@318> XINCLUDE "/Shared/preprocessor.include.ab3"
00006370 <hashmap.include.bb2@319> XINCLUDE "/Shared/preprocessor.include.ab3"
00006382 <hashmap.include.bb2@320> XINCLUDE "/Shared/preprocessor.include.ab3"
00006392 <hashmap.include.bb2@321> XINCLUDE "/Shared/preprocessor.include.ab3"
0000639C <hashmap.include.bb2@323> XINCLUDE "/Shared/preprocessor.include.ab3"
000063B6 <hashmap.include.bb2@324> XINCLUDE "/Shared/preprocessor.include.ab3"
000063D0 <hashmap.include.bb2@327> XINCLUDE "/Shared/preprocessor.include.ab3"
000063D8 <hashmap.include.bb2@328> XINCLUDE "/Shared/preprocessor.include.ab3"
000063DE <hashmap.include.bb2@329> XINCLUDE "/Shared/preprocessor.include.ab3"
000063E8 <hashmap.include.bb2@330> XINCLUDE "/Shared/preprocessor.include.ab3"
000063F0 <hashmap.include.bb2@331> XINCLUDE "/Shared/preprocessor.include.ab3"
00006418 <hashmap.include.bb2@332> XINCLUDE "/Shared/preprocessor.include.ab3"
0000641E <hashmap.include.bb2@333> XINCLUDE "/Shared/preprocessor.include.ab3"
00006432 <hashmap.include.bb2@334> XINCLUDE "/Shared/preprocessor.include.ab3"
0000646E <hashmap.include.bb2@336> XINCLUDE "/Shared/preprocessor.include.ab3"
00006494 <hashmap.include.bb2@337> XINCLUDE "/Shared/preprocessor.include.ab3"
000064A2 <hashmap.include.bb2@338> XINCLUDE "/Shared/preprocessor.include.ab3"
000064DE <hashmap.include.bb2@340> XINCLUDE "/Shared/preprocessor.include.ab3"
000064F2 <hashmap.include.bb2@341> XINCLUDE "/Shared/preprocessor.include.ab3"
0000652E <hashmap.include.bb2@343> XINCLUDE "/Shared/preprocessor.include.ab3"
00006544 <hashmap.include.bb2@344> XINCLUDE "/Shared/preprocessor.include.ab3"
00006558 <hashmap.include.bb2@346> XINCLUDE "/Shared/preprocessor.include.ab3"
00006562 <hashmap.include.bb2@347> XINCLUDE "/Shared/preprocessor.include.ab3"
00006586 <hashmap.include.bb2@348> XINCLUDE "/Shared/preprocessor.include.ab3"
000065BE <hashmap.include.bb2@349> XINCLUDE "/Shared/preprocessor.include.ab3"
000065C4 <hashmap.include.bb2@350> XINCLUDE "/Shared/preprocessor.include.ab3"
000065D0 <hashmap.include.bb2@351> XINCLUDE "/Shared/preprocessor.include.ab3"
000065E4 <hashmap.include.bb2@354> XINCLUDE "/Shared/preprocessor.include.ab3"
000065EE <hashmap.include.bb2@355> XINCLUDE "/Shared/preprocessor.include.ab3"
00006616 <hashmap.include.bb2@356> XINCLUDE "/Shared/preprocessor.include.ab3"
0000663E <hashmap.include.bb2@357> XINCLUDE "/Shared/preprocessor.include.ab3"
00006650 <hashmap.include.bb2@358> XINCLUDE "/Shared/preprocessor.include.ab3"
0000667C <hashmap.include.bb2@359> XINCLUDE "/Shared/preprocessor.include.ab3"
000066B0 <hashmap.include.bb2@360> XINCLUDE "/Shared/preprocessor.include.ab3"
000066DC <hashmap.include.bb2@361> XINCLUDE "/Shared/preprocessor.include.ab3"
00006728 <hashmap.include.bb2@362> XINCLUDE "/Shared/preprocessor.include.ab3"
00006738 <hashmap.include.bb2@364> XINCLUDE "/Shared/preprocessor.include.ab3"
0000673E <hashmap.include.bb2@366> XINCLUDE "/Shared/preprocessor.include.ab3"
0000674A <hashmap.include.bb2@367> XINCLUDE "/Shared/preprocessor.include.ab3"
00006778 <hashmap.include.bb2@370> XINCLUDE "/Shared/preprocessor.include.ab3"
0000677A <hashmap.include.bb2@372> XINCLUDE "/Shared/preprocessor.include.ab3"
00006780 <hashmap.include.bb2@373> XINCLUDE "/Shared/preprocessor.include.ab3"
0000678A <hashmap.include.bb2@374> XINCLUDE "/Shared/preprocessor.include.ab3"
000067B4 <hashmap.include.bb2@375> XINCLUDE "/Shared/preprocessor.include.ab3"
000067BE <hashmap.include.bb2@377> XINCLUDE "/Shared/preprocessor.include.ab3"
000067C4 <hashmap.include.bb2@378> XINCLUDE "/Shared/preprocessor.include.ab3"
000067EE <hashmap.include.bb2@381> XINCLUDE "/Shared/preprocessor.include.ab3"
000067F6 <hashmap.include.bb2@382> XINCLUDE "/Shared/preprocessor.include.ab3"
00006816 <hashmap.include.bb2@383> XINCLUDE "/Shared/preprocessor.include.ab3"
00006820 <hashmap.include.bb2@384> XINCLUDE "/Shared/preprocessor.include.ab3"
0000682E <hashmap.include.bb2@385> XINCLUDE "/Shared/preprocessor.include.ab3"
0000683E <hashmap.include.bb2@386> XINCLUDE "/Shared/preprocessor.include.ab3"
00006848 <hashmap.include.bb2@388> XINCLUDE "/Shared/preprocessor.include.ab3"
00006862 <hashmap.include.bb2@389> XINCLUDE "/Shared/preprocessor.include.ab3"
00006862 <preprocessor.include.ab3@11> XINCLUDE "/Shared/preprocessor.include.ab3"
0000687C <preprocessor.include.ab3@29> XINCLUDE "/Shared/preprocessor.include.ab3"
00006896 <preprocessor.include.ab3@30> XINCLUDE "/Shared/preprocessor.include.ab3"
000068B8 <preprocessor.include.ab3@31> XINCLUDE "/Shared/preprocessor.include.ab3"
000068EA <preprocessor.include.ab3@32> XINCLUDE "/Shared/preprocessor.include.ab3"
000068EE <preprocessor.include.ab3@33> XINCLUDE "/Shared/preprocessor.include.ab3"
00006908 <preprocessor.include.ab3@36> XINCLUDE "/Shared/preprocessor.include.ab3"
00006922 <preprocessor.include.ab3@37> XINCLUDE "/Shared/preprocessor.include.ab3"
0000692C <preprocessor.include.ab3@38> XINCLUDE "/Shared/preprocessor.include.ab3"
00006942 <preprocessor.include.ab3@39> XINCLUDE "/Shared/preprocessor.include.ab3"
00006946 <preprocessor.include.ab3@40> XINCLUDE "/Shared/preprocessor.include.ab3"
00006960 <preprocessor.include.ab3@43> XINCLUDE "/Shared/preprocessor.include.ab3"
0000697A <preprocessor.include.ab3@44> XINCLUDE "/Shared/preprocessor.include.ab3"
00006994 <preprocessor.include.ab3@45> XINCLUDE "/Shared/preprocessor.include.ab3"
000069B8 <preprocessor.include.ab3@46> XINCLUDE "/Shared/preprocessor.include.ab3"
000069BE <preprocessor.include.ab3@47> XINCLUDE "/Shared/preprocessor.include.ab3"
000069E8 <preprocessor.include.ab3@48> XINCLUDE "/Shared/preprocessor.include.ab3"
00006A02 <preprocessor.include.ab3@49> XINCLUDE "/Shared/preprocessor.include.ab3"
00006A12 <preprocessor.include.ab3@50> XINCLUDE "/Shared/preprocessor.include.ab3"
00006A1C <preprocessor.include.ab3@53> XINCLUDE "/Shared/preprocessor.include.ab3"
00006A2A <preprocessor.include.ab3@54> XINCLUDE "/Shared/preprocessor.include.ab3"
00006A4C <preprocessor.include.ab3@55> XINCLUDE "/Shared/preprocessor.include.ab3"
00006A80 <preprocessor.include.ab3@56> XINCLUDE "/Shared/preprocessor.include.ab3"
00006A9C <preprocessor.include.ab3@57> XINCLUDE "/Shared/preprocessor.include.ab3"
00006AA6 <preprocessor.include.ab3@58> XINCLUDE "/Shared/preprocessor.include.ab3"
00006AC2 <preprocessor.include.ab3@59> XINCLUDE "/Shared/preprocessor.include.ab3"
00006AD0 <preprocessor.include.ab3@60> XINCLUDE "/Shared/preprocessor.include.ab3"
00006AE4 <preprocessor.include.ab3@61> XINCLUDE "/Shared/preprocessor.include.ab3"
00006B06 <preprocessor.include.ab3@62> XINCLUDE "/Shared/preprocessor.include.ab3"
00006B28 <preprocessor.include.ab3@63> XINCLUDE "/Shared/preprocessor.include.ab3"
00006B46 <preprocessor.include.ab3@64> XINCLUDE "/Shared/preprocessor.include.ab3"
00006B74 <preprocessor.include.ab3@65> XINCLUDE "/Shared/preprocessor.include.ab3"
00006B7A <preprocessor.include.ab3@66> XINCLUDE "/Shared/preprocessor.include.ab3"
00006B8A <preprocessor.include.ab3@68> XINCLUDE "/Shared/preprocessor.include.ab3"
00006B8E <preprocessor.include.ab3@70> XINCLUDE "/Shared/preprocessor.include.ab3"
00006BA4 <preprocessor.include.ab3@73> XINCLUDE "/Shared/preprocessor.include.ab3"
00006BC4 <preprocessor.include.ab3@74> XINCLUDE "/Shared/preprocessor.include.ab3"
00006BCE <preprocessor.include.ab3@75> XINCLUDE "/Shared/preprocessor.include.ab3"
00006BF8 <preprocessor.include.ab3@76> XINCLUDE "/Shared/preprocessor.include.ab3"
00006C0E <preprocessor.include.ab3@77> XINCLUDE "/Shared/preprocessor.include.ab3"
00006C1E <preprocessor.include.ab3@78> XINCLUDE "/Shared/preprocessor.include.ab3"
00006C3A <preprocessor.include.ab3@80> XINCLUDE "/Shared/preprocessor.include.ab3"
00006C56 <preprocessor.include.ab3@81> XINCLUDE "/Shared/preprocessor.include.ab3"
00006C72 <preprocessor.include.ab3@82> XINCLUDE "/Shared/preprocessor.include.ab3"
00006C8E <preprocessor.include.ab3@83> XINCLUDE "/Shared/preprocessor.include.ab3"
00006CAA <preprocessor.include.ab3@84> XINCLUDE "/Shared/preprocessor.include.ab3"
00006CC6 <preprocessor.include.ab3@85> XINCLUDE "/Shared/preprocessor.include.ab3"
00006CE2 <preprocessor.include.ab3@86> XINCLUDE "/Shared/preprocessor.include.ab3"
00006CFE <preprocessor.include.ab3@87> XINCLUDE "/Shared/preprocessor.include.ab3"
00006D1A <preprocessor.include.ab3@88> XINCLUDE "/Shared/preprocessor.include.ab3"
00006D36 <preprocessor.include.ab3@89> XINCLUDE "/Shared/preprocessor.include.ab3"
00006D52 <preprocessor.include.ab3@90> XINCLUDE "/Shared/preprocessor.include.ab3"
00006D6E <preprocessor.include.ab3@91> XINCLUDE "/Shared/preprocessor.include.ab3"
00006D8A <preprocessor.include.ab3@92> XINCLUDE "/Shared/preprocessor.include.ab3"
00006DA6 <preprocessor.include.ab3@93> XINCLUDE "/Shared/preprocessor.include.ab3"
00006DC2 <preprocessor.include.ab3@94> XINCLUDE "/Shared/preprocessor.include.ab3"
00006DDE <preprocessor.include.ab3@95> XINCLUDE "/Shared/preprocessor.include.ab3"
00006DFA <preprocessor.include.ab3@96> XINCLUDE "/Shared/preprocessor.include.ab3"
00006E16 <preprocessor.include.ab3@97> XINCLUDE "/Shared/preprocessor.include.ab3"
00006E32 <preprocessor.include.ab3@98> XINCLUDE "/Shared/preprocessor.include.ab3"
00006E4E <preprocessor.include.ab3@99> XINCLUDE "/Shared/preprocessor.include.ab3"
00006E6A <preprocessor.include.ab3@100> XINCLUDE "/Shared/preprocessor.include.ab3"
00006E86 <preprocessor.include.ab3@101> XINCLUDE "/Shared/preprocessor.include.ab3"
00006EA2 <preprocessor.include.ab3@102> XINCLUDE "/Shared/preprocessor.include.ab3"
00006EBE <preprocessor.include.ab3@103> XINCLUDE "/Shared/preprocessor.include.ab3"
00006EDA <preprocessor.include.ab3@104> XINCLUDE "/Shared/preprocessor.include.ab3"
00006EF6 <preprocessor.include.ab3@105> XINCLUDE "/Shared/preprocessor.include.ab3"
00006F12 <preprocessor.include.ab3@106> XINCLUDE "/Shared/preprocessor.include.ab3"
00006F2E <preprocessor.include.ab3@107> XINCLUDE "/Shared/preprocessor.include.ab3"
00006F4A <preprocessor.include.ab3@108> XINCLUDE "/Shared/preprocessor.include.ab3"
00006F66 <preprocessor.include.ab3@109> XINCLUDE "/Shared/preprocessor.include.ab3"
00006F82 <preprocessor.include.ab3@110> XINCLUDE "/Shared/preprocessor.include.ab3"
00006F9E <preprocessor.include.ab3@111> XINCLUDE "/Shared/preprocessor.include.ab3"
00006FBA <preprocessor.include.ab3@112> XINCLUDE "/Shared/preprocessor.include.ab3"
00006FD6 <preprocessor.include.ab3@113> XINCLUDE "/Shared/preprocessor.include.ab3"
00006FF2 <preprocessor.include.ab3@114> XINCLUDE "/Shared/preprocessor.include.ab3"
0000700E <preprocessor.include.ab3@115> XINCLUDE "/Shared/preprocessor.include.ab3"
0000702A <preprocessor.include.ab3@116> XINCLUDE "/Shared/preprocessor.include.ab3"
00007046 <preprocessor.include.ab3@117> XINCLUDE "/Shared/preprocessor.include.ab3"
00007062 <preprocessor.include.ab3@118> XINCLUDE "/Shared/preprocessor.include.ab3"
0000707E <preprocessor.include.ab3@119> XINCLUDE "/Shared/preprocessor.include.ab3"
0000709A <preprocessor.include.ab3@120> XINCLUDE "/Shared/preprocessor.include.ab3"
000070B6 <preprocessor.include.ab3@121> XINCLUDE "/Shared/preprocessor.include.ab3"
000070D2 <preprocessor.include.ab3@122> XINCLUDE "/Shared/preprocessor.include.ab3"
000070EE <preprocessor.include.ab3@123> XINCLUDE "/Shared/preprocessor.include.ab3"
0000710A <preprocessor.include.ab3@124> XINCLUDE "/Shared/preprocessor.include.ab3"
00007126 <preprocessor.include.ab3@125> XINCLUDE "/Shared/preprocessor.include.ab3"
00007142 <preprocessor.include.ab3@126> XINCLUDE "/Shared/preprocessor.include.ab3"
0000715E <preprocessor.include.ab3@127> XINCLUDE "/Shared/preprocessor.include.ab3"
0000717A <preprocessor.include.ab3@128> XINCLUDE "/Shared/preprocessor.include.ab3"
00007196 <preprocessor.include.ab3@129> XINCLUDE "/Shared/preprocessor.include.ab3"
000071B2 <preprocessor.include.ab3@130> XINCLUDE "/Shared/preprocessor.include.ab3"
000071CE <preprocessor.include.ab3@131> XINCLUDE "/Shared/preprocessor.include.ab3"
000071EA <preprocessor.include.ab3@132> XINCLUDE "/Shared/preprocessor.include.ab3"
00007206 <preprocessor.include.ab3@133> XINCLUDE "/Shared/preprocessor.include.ab3"
00007222 <preprocessor.include.ab3@134> XINCLUDE "/Shared/preprocessor.include.ab3"
0000723E <preprocessor.include.ab3@135> XINCLUDE "/Shared/preprocessor.include.ab3"
0000725A <preprocessor.include.ab3@136> XINCLUDE "/Shared/preprocessor.include.ab3"
00007276 <preprocessor.include.ab3@137> XINCLUDE "/Shared/preprocessor.include.ab3"
00007292 <preprocessor.include.ab3@138> XINCLUDE "/Shared/preprocessor.include.ab3"
000072AE <preprocessor.include.ab3@139> XINCLUDE "/Shared/preprocessor.include.ab3"
000072CA <preprocessor.include.ab3@140> XINCLUDE "/Shared/preprocessor.include.ab3"
000072E6 <preprocessor.include.ab3@141> XINCLUDE "/Shared/preprocessor.include.ab3"
00007302 <preprocessor.include.ab3@142> XINCLUDE "/Shared/preprocessor.include.ab3"
0000731E <preprocessor.include.ab3@143> XINCLUDE "/Shared/preprocessor.include.ab3"
0000733A <preprocessor.include.ab3@144> XINCLUDE "/Shared/preprocessor.include.ab3"
00007356 <preprocessor.include.ab3@145> XINCLUDE "/Shared/preprocessor.include.ab3"
00007372 <preprocessor.include.ab3@146> XINCLUDE "/Shared/preprocessor.include.ab3"
0000738E <preprocessor.include.ab3@147> XINCLUDE "/Shared/preprocessor.include.ab3"
000073AA <preprocessor.include.ab3@148> XINCLUDE "/Shared/preprocessor.include.ab3"
000073C6 <preprocessor.include.ab3@149> XINCLUDE "/Shared/preprocessor.include.ab3"
000073E2 <preprocessor.include.ab3@150> XINCLUDE "/Shared/preprocessor.include.ab3"
000073FE <preprocessor.include.ab3@151> XINCLUDE "/Shared/preprocessor.include.ab3"
0000741A <preprocessor.include.ab3@152> XINCLUDE "/Shared/preprocessor.include.ab3"
00007436 <preprocessor.include.ab3@153> XINCLUDE "/Shared/preprocessor.include.ab3"
00007452 <preprocessor.include.ab3@154> XINCLUDE "/Shared/preprocessor.include.ab3"
0000746E <preprocessor.include.ab3@155> XINCLUDE "/Shared/preprocessor.include.ab3"
0000748A <preprocessor.include.ab3@156> XINCLUDE "/Shared/preprocessor.include.ab3"
000074A6 <preprocessor.include.ab3@157> XINCLUDE "/Shared/preprocessor.include.ab3"
000074C2 <preprocessor.include.ab3@158> XINCLUDE "/Shared/preprocessor.include.ab3"
000074DE <preprocessor.include.ab3@159> XINCLUDE "/Shared/preprocessor.include.ab3"
000074FA <preprocessor.include.ab3@160> XINCLUDE "/Shared/preprocessor.include.ab3"
00007516 <preprocessor.include.ab3@161> XINCLUDE "/Shared/preprocessor.include.ab3"
00007532 <preprocessor.include.ab3@162> XINCLUDE "/Shared/preprocessor.include.ab3"
0000754E <preprocessor.include.ab3@163> XINCLUDE "/Shared/preprocessor.include.ab3"
0000756A <preprocessor.include.ab3@164> XINCLUDE "/Shared/preprocessor.include.ab3"
00007586 <preprocessor.include.ab3@165> XINCLUDE "/Shared/preprocessor.include.ab3"
000075A2 <preprocessor.include.ab3@166> XINCLUDE "/Shared/preprocessor.include.ab3"
000075BE <preprocessor.include.ab3@167> XINCLUDE "/Shared/preprocessor.include.ab3"
000075DA <preprocessor.include.ab3@168> XINCLUDE "/Shared/preprocessor.include.ab3"
000075F6 <preprocessor.include.ab3@169> XINCLUDE "/Shared/preprocessor.include.ab3"
00007612 <preprocessor.include.ab3@170> XINCLUDE "/Shared/preprocessor.include.ab3"
0000762E <preprocessor.include.ab3@171> XINCLUDE "/Shared/preprocessor.include.ab3"
0000764A <preprocessor.include.ab3@172> XINCLUDE "/Shared/preprocessor.include.ab3"
00007666 <preprocessor.include.ab3@173> XINCLUDE "/Shared/preprocessor.include.ab3"
00007682 <preprocessor.include.ab3@174> XINCLUDE "/Shared/preprocessor.include.ab3"
0000769E <preprocessor.include.ab3@175> XINCLUDE "/Shared/preprocessor.include.ab3"
000076BA <preprocessor.include.ab3@176> XINCLUDE "/Shared/preprocessor.include.ab3"
000076D6 <preprocessor.include.ab3@177> XINCLUDE "/Shared/preprocessor.include.ab3"
000076F2 <preprocessor.include.ab3@178> XINCLUDE "/Shared/preprocessor.include.ab3"
0000770E <preprocessor.include.ab3@179> XINCLUDE "/Shared/preprocessor.include.ab3"
0000772A <preprocessor.include.ab3@180> XINCLUDE "/Shared/preprocessor.include.ab3"
00007746 <preprocessor.include.ab3@181> XINCLUDE "/Shared/preprocessor.include.ab3"
00007762 <preprocessor.include.ab3@182> XINCLUDE "/Shared/preprocessor.include.ab3"
0000777E <preprocessor.include.ab3@183> XINCLUDE "/Shared/preprocessor.include.ab3"
0000779A <preprocessor.include.ab3@184> XINCLUDE "/Shared/preprocessor.include.ab3"
000077B6 <preprocessor.include.ab3@185> XINCLUDE "/Shared/preprocessor.include.ab3"
000077D2 <preprocessor.include.ab3@186> XINCLUDE "/Shared/preprocessor.include.ab3"
000077EE <preprocessor.include.ab3@187> XINCLUDE "/Shared/preprocessor.include.ab3"
0000780A <preprocessor.include.ab3@188> XINCLUDE "/Shared/preprocessor.include.ab3"
00007826 <preprocessor.include.ab3@189> XINCLUDE "/Shared/preprocessor.include.ab3"
00007842 <preprocessor.include.ab3@190> XINCLUDE "/Shared/preprocessor.include.ab3"
0000785E <preprocessor.include.ab3@191> XINCLUDE "/Shared/preprocessor.include.ab3"
0000787A <preprocessor.include.ab3@192> XINCLUDE "/Shared/preprocessor.include.ab3"
00007896 <preprocessor.include.ab3@193> XINCLUDE "/Shared/preprocessor.include.ab3"
000078B2 <preprocessor.include.ab3@194> XINCLUDE "/Shared/preprocessor.include.ab3"
000078CE <preprocessor.include.ab3@195> XINCLUDE "/Shared/preprocessor.include.ab3"
000078EA <preprocessor.include.ab3@196> XINCLUDE "/Shared/preprocessor.include.ab3"
00007906 <preprocessor.include.ab3@197> XINCLUDE "/Shared/preprocessor.include.ab3"
00007922 <preprocessor.include.ab3@198> XINCLUDE "/Shared/preprocessor.include.ab3"
0000793E <preprocessor.include.ab3@199> XINCLUDE "/Shared/preprocessor.include.ab3"
0000795A <preprocessor.include.ab3@200> XINCLUDE "/Shared/preprocessor.include.ab3"
00007976 <preprocessor.include.ab3@201> XINCLUDE "/Shared/preprocessor.include.ab3"
00007992 <preprocessor.include.ab3@202> XINCLUDE "/Shared/preprocessor.include.ab3"
000079AE <preprocessor.include.ab3@203> XINCLUDE "/Shared/preprocessor.include.ab3"
000079CA <preprocessor.include.ab3@204> XINCLUDE "/Shared/preprocessor.include.ab3"
000079E6 <preprocessor.include.ab3@205> XINCLUDE "/Shared/preprocessor.include.ab3"
00007A02 <preprocessor.include.ab3@206> XINCLUDE "/Shared/preprocessor.include.ab3"
00007A1E <preprocessor.include.ab3@207> XINCLUDE "/Shared/preprocessor.include.ab3"
00007A26 <preprocessor.include.ab3@208> XINCLUDE "/Shared/preprocessor.include.ab3"
00007A30 <preprocessor.include.ab3@209> XINCLUDE "/Shared/preprocessor.include.ab3"
00007A3A <preprocessor.include.ab3@211> XINCLUDE "/Shared/preprocessor.include.ab3"
00007A40 <preprocessor.include.ab3@212> XINCLUDE "/Shared/preprocessor.include.ab3"
00007A6E <preprocessor.include.ab3@247> XINCLUDE "/Shared/preprocessor.include.ab3"
00007A8A <preprocessor.include.ab3@248> XINCLUDE "/Shared/preprocessor.include.ab3"
00007ABC <preprocessor.include.ab3@249> XINCLUDE "/Shared/preprocessor.include.ab3"
00007AC6 <preprocessor.include.ab3@250> XINCLUDE "/Shared/preprocessor.include.ab3"
00007AE8 <preprocessor.include.ab3@251> XINCLUDE "/Shared/preprocessor.include.ab3"
00007AF2 <preprocessor.include.ab3@252> XINCLUDE "/Shared/preprocessor.include.ab3"
00007AFC <preprocessor.include.ab3@253> XINCLUDE "/Shared/preprocessor.include.ab3"
00007B06 <preprocessor.include.ab3@255> XINCLUDE "/Shared/preprocessor.include.ab3"
00007B20 <preprocessor.include.ab3@256> XINCLUDE "/Shared/preprocessor.include.ab3"
00007B4E <preprocessor.include.ab3@259> XINCLUDE "/Shared/preprocessor.include.ab3"
00007B6A <preprocessor.include.ab3@260> XINCLUDE "/Shared/preprocessor.include.ab3"
00007B78 <preprocessor.include.ab3@261> XINCLUDE "/Shared/preprocessor.include.ab3"
00007BB2 <preprocessor.include.ab3@262> XINCLUDE "/Shared/preprocessor.include.ab3"
00007BBA <preprocessor.include.ab3@264> XINCLUDE "/Shared/preprocessor.include.ab3"
00007BD4 <preprocessor.include.ab3@265> XINCLUDE "/Shared/preprocessor.include.ab3"
00007BFA <preprocessor.include.ab3@272> XINCLUDE "/Shared/preprocessor.include.ab3"
00007C1C <preprocessor.include.ab3@273> XINCLUDE "/Shared/preprocessor.include.ab3"
00007C40 <preprocessor.include.ab3@274> XINCLUDE "/Shared/preprocessor.include.ab3"
00007C46 <preprocessor.include.ab3@275> XINCLUDE "/Shared/preprocessor.include.ab3"
00007C54 <preprocessor.include.ab3@276> XINCLUDE "/Shared/preprocessor.include.ab3"
00007C5A <preprocessor.include.ab3@277> XINCLUDE "/Shared/preprocessor.include.ab3"
00007C62 <preprocessor.include.ab3@278> XINCLUDE "/Shared/preprocessor.include.ab3"
00007C68 <preprocessor.include.ab3@279> XINCLUDE "/Shared/preprocessor.include.ab3"
00007C70 <preprocessor.include.ab3@280> XINCLUDE "/Shared/preprocessor.include.ab3"
00007C84 <preprocessor.include.ab3@282> XINCLUDE "/Shared/preprocessor.include.ab3"
00007CAA <preprocessor.include.ab3@283> XINCLUDE "/Shared/preprocessor.include.ab3"
00007CD2 <preprocessor.include.ab3@284> XINCLUDE "/Shared/preprocessor.include.ab3"
00007CDC <preprocessor.include.ab3@286> XINCLUDE "/Shared/preprocessor.include.ab3"
00007CF0 <preprocessor.include.ab3@287> XINCLUDE "/Shared/preprocessor.include.ab3"
00007D04 <preprocessor.include.ab3@288> XINCLUDE "/Shared/preprocessor.include.ab3"
00007D14 <preprocessor.include.ab3@289> XINCLUDE "/Shared/preprocessor.include.ab3"
00007D2E <preprocessor.include.ab3@290> XINCLUDE "/Shared/preprocessor.include.ab3"
00007D56 <preprocessor.include.ab3@291> XINCLUDE "/Shared/preprocessor.include.ab3"
00007D6A <preprocessor.include.ab3@292> XINCLUDE "/Shared/preprocessor.include.ab3"
00007D8C <preprocessor.include.ab3@293> XINCLUDE "/Shared/preprocessor.include.ab3"
00007D92 <preprocessor.include.ab3@294> XINCLUDE "/Shared/preprocessor.include.ab3"
00007D9A <preprocessor.include.ab3@295> XINCLUDE "/Shared/preprocessor.include.ab3"
00007DA0 <preprocessor.include.ab3@297> XINCLUDE "/Shared/preprocessor.include.ab3"
00007DC2 <preprocessor.include.ab3@298> XINCLUDE "/Shared/preprocessor.include.ab3"
00007DCC <preprocessor.include.ab3@300> XINCLUDE "/Shared/preprocessor.include.ab3"
00007DDA <preprocessor.include.ab3@301> XINCLUDE "/Shared/preprocessor.include.ab3"
00007DF8 <preprocessor.include.ab3@302> XINCLUDE "/Shared/preprocessor.include.ab3"
00007E06 <preprocessor.include.ab3@303> XINCLUDE "/Shared/preprocessor.include.ab3"
00007E0E <preprocessor.include.ab3@304> XINCLUDE "/Shared/preprocessor.include.ab3"
00007E14 <preprocessor.include.ab3@305> XINCLUDE "/Shared/preprocessor.include.ab3"
00007E28 <preprocessor.include.ab3@309> XINCLUDE "/Shared/preprocessor.include.ab3"
00007E32 <preprocessor.include.ab3@310> XINCLUDE "/Shared/preprocessor.include.ab3"
00007E40 <preprocessor.include.ab3@311> XINCLUDE "/Shared/preprocessor.include.ab3"
00007E5A <preprocessor.include.ab3@312> XINCLUDE "/Shared/preprocessor.include.ab3"
00007E60 <preprocessor.include.ab3@314> XINCLUDE "/Shared/preprocessor.include.ab3"
00007E68 <preprocessor.include.ab3@315> XINCLUDE "/Shared/preprocessor.include.ab3"
00007E6E <preprocessor.include.ab3@317> XINCLUDE "/Shared/preprocessor.include.ab3"
00007E82 <preprocessor.include.ab3@318> XINCLUDE "/Shared/preprocessor.include.ab3"
00007E8C <preprocessor.include.ab3@319> XINCLUDE "/Shared/preprocessor.include.ab3"
00007E94 <preprocessor.include.ab3@320> XINCLUDE "/Shared/preprocessor.include.ab3"
00007EA8 <preprocessor.include.ab3@321> XINCLUDE "/Shared/preprocessor.include.ab3"
00007EBC <preprocessor.include.ab3@326> XINCLUDE "/Shared/preprocessor.include.ab3"
00007ED0 <preprocessor.include.ab3@327> XINCLUDE "/Shared/preprocessor.include.ab3"
00007EEE <preprocessor.include.ab3@329> XINCLUDE "/Shared/preprocessor.include.ab3"
00007EFC <preprocessor.include.ab3@330> XINCLUDE "/Shared/preprocessor.include.ab3"
00007F0C <preprocessor.include.ab3@331> XINCLUDE "/Shared/preprocessor.include.ab3"
00007F34 <preprocessor.include.ab3@332> XINCLUDE "/Shared/preprocessor.include.ab3"
00007F56 <preprocessor.include.ab3@333> XINCLUDE "/Shared/preprocessor.include.ab3"
00007F6A <preprocessor.include.ab3@336> XINCLUDE "/Shared/preprocessor.include.ab3"
00007F88 <preprocessor.include.ab3@338> XINCLUDE "/Shared/preprocessor.include.ab3"
00007F96 <preprocessor.include.ab3@339> XINCLUDE "/Shared/preprocessor.include.ab3"
00007FBC <preprocessor.include.ab3@340> XINCLUDE "/Shared/preprocessor.include.ab3"
00007FE4 <preprocessor.include.ab3@341> XINCLUDE "/Shared/preprocessor.include.ab3"
00008006 <preprocessor.include.ab3@342> XINCLUDE "/Shared/preprocessor.include.ab3"
00008036 <preprocessor.include.ab3@345> XINCLUDE "/Shared/preprocessor.include.ab3"
00008064 <preprocessor.include.ab3@349> XINCLUDE "/Shared/preprocessor.include.ab3"
00008096 <preprocessor.include.ab3@350> XINCLUDE "/Shared/preprocessor.include.ab3"
000080A4 <preprocessor.include.ab3@352> XINCLUDE "/Shared/preprocessor.include.ab3"
000080AA <preprocessor.include.ab3@353> XINCLUDE "/Shared/preprocessor.include.ab3"
000080BA <preprocessor.include.ab3@356> XINCLUDE "/Shared/preprocessor.include.ab3"
000080C0 <preprocessor.include.ab3@357> XINCLUDE "/Shared/preprocessor.include.ab3"
000080E6 <preprocessor.include.ab3@360> XINCLUDE "/Shared/preprocessor.include.ab3"
00008108 <preprocessor.include.ab3@361> XINCLUDE "/Shared/preprocessor.include.ab3"
00008130 <preprocessor.include.ab3@362> XINCLUDE "/Shared/preprocessor.include.ab3"
00008150 <preprocessor.include.ab3@363> XINCLUDE "/Shared/preprocessor.include.ab3"
00008172 <preprocessor.include.ab3@364> XINCLUDE "/Shared/preprocessor.include.ab3"
00008178 <preprocessor.include.ab3@365> XINCLUDE "/Shared/preprocessor.include.ab3"
00008186 <preprocessor.include.ab3@366> XINCLUDE "/Shared/preprocessor.include.ab3"
00008194 <preprocessor.include.ab3@367> XINCLUDE "/Shared/preprocessor.include.ab3"
0000819A <preprocessor.include.ab3@368> XINCLUDE "/Shared/preprocessor.include.ab3"
000081A2 <preprocessor.include.ab3@369> XINCLUDE "/Shared/preprocessor.include.ab3"
000081C0 <preprocessor.include.ab3@370> XINCLUDE "/Shared/preprocessor.include.ab3"
000081D4 <preprocessor.include.ab3@371> XINCLUDE "/Shared/preprocessor.include.ab3"
000081E4 <preprocessor.include.ab3@372> XINCLUDE "/Shared/preprocessor.include.ab3"
000081FA <preprocessor.include.ab3@374> XINCLUDE "/Shared/preprocessor.include.ab3"
00008212 <preprocessor.include.ab3@376> XINCLUDE "/Shared/preprocessor.include.ab3"
0000822E <preprocessor.include.ab3@377> XINCLUDE "/Shared/preprocessor.include.ab3"
00008238 <preprocessor.include.ab3@378> XINCLUDE "/Shared/preprocessor.include.ab3"
00008254 <preprocessor.include.ab3@379> XINCLUDE "/Shared/preprocessor.include.ab3"
00008266 <preprocessor.include.ab3@380> XINCLUDE "/Shared/preprocessor.include.ab3"
00008294 <preprocessor.include.ab3@381> XINCLUDE "/Shared/preprocessor.include.ab3"
000082D0 <preprocessor.include.ab3@382> XINCLUDE "/Shared/preprocessor.include.ab3"
000082E0 <preprocessor.include.ab3@383> XINCLUDE "/Shared/preprocessor.include.ab3"
000082E6 <preprocessor.include.ab3@384> XINCLUDE "/Shared/preprocessor.include.ab3"
000082EC <preprocessor.include.ab3@387> XINCLUDE "/Shared/preprocessor.include.ab3"
00008304 <preprocessor.include.ab3@388> XINCLUDE "/Shared/preprocessor.include.ab3"
00008314 <preprocessor.include.ab3@389> XINCLUDE "/Shared/preprocessor.include.ab3"
0000839A <preprocessor.include.ab3@390> XINCLUDE "/Shared/preprocessor.include.ab3"
000083D4 <preprocessor.include.ab3@391> XINCLUDE "/Shared/preprocessor.include.ab3"
0000840A <preprocessor.include.ab3@392> XINCLUDE "/Shared/preprocessor.include.ab3"
0000841A <preprocessor.include.ab3@393> XINCLUDE "/Shared/preprocessor.include.ab3"
00008428 <preprocessor.include.ab3@395> XINCLUDE "/Shared/preprocessor.include.ab3"
0000842E <preprocessor.include.ab3@396> XINCLUDE "/Shared/preprocessor.include.ab3"
0000843E <preprocessor.include.ab3@397> XINCLUDE "/Shared/preprocessor.include.ab3"
00008468 <preprocessor.include.ab3@398> XINCLUDE "/Shared/preprocessor.include.ab3"
0000846E <preprocessor.include.ab3@399> XINCLUDE "/Shared/preprocessor.include.ab3"
0000849A <preprocessor.include.ab3@400> XINCLUDE "/Shared/preprocessor.include.ab3"
000084AA <preprocessor.include.ab3@403> XINCLUDE "/Shared/preprocessor.include.ab3"
000084BA <preprocessor.include.ab3@405> XINCLUDE "/Shared/preprocessor.include.ab3"
000084D8 <preprocessor.include.ab3@406> XINCLUDE "/Shared/preprocessor.include.ab3"
000084E6 <preprocessor.include.ab3@407> XINCLUDE "/Shared/preprocessor.include.ab3"
0000851C <preprocessor.include.ab3@408> XINCLUDE "/Shared/preprocessor.include.ab3"
00008540 <preprocessor.include.ab3@409> XINCLUDE "/Shared/preprocessor.include.ab3"
00008554 <preprocessor.include.ab3@412> XINCLUDE "/Shared/preprocessor.include.ab3"
00008564 <preprocessor.include.ab3@414> XINCLUDE "/Shared/preprocessor.include.ab3"
00008582 <preprocessor.include.ab3@415> XINCLUDE "/Shared/preprocessor.include.ab3"
00008590 <preprocessor.include.ab3@416> XINCLUDE "/Shared/preprocessor.include.ab3"
000085B4 <preprocessor.include.ab3@417> XINCLUDE "/Shared/preprocessor.include.ab3"
000085D8 <preprocessor.include.ab3@418> XINCLUDE "/Shared/preprocessor.include.ab3"
000085E6 <preprocessor.include.ab3@422> XINCLUDE "/Shared/preprocessor.include.ab3"
000085F4 <preprocessor.include.ab3@423> XINCLUDE "/Shared/preprocessor.include.ab3"
00008614 <preprocessor.include.ab3@424> XINCLUDE "/Shared/preprocessor.include.ab3"
00008622 <preprocessor.include.ab3@425> XINCLUDE "/Shared/preprocessor.include.ab3"
00008628 <preprocessor.include.ab3@426> XINCLUDE "/Shared/preprocessor.include.ab3"
0000862E <preprocessor.include.ab3@429> XINCLUDE "/Shared/preprocessor.include.ab3"
0000863C <preprocessor.include.ab3@431> XINCLUDE "/Shared/preprocessor.include.ab3"
0000864A <preprocessor.include.ab3@432> XINCLUDE "/Shared/preprocessor.include.ab3"
0000866A <preprocessor.include.ab3@433> XINCLUDE "/Shared/preprocessor.include.ab3"
00008678 <preprocessor.include.ab3@434> XINCLUDE "/Shared/preprocessor.include.ab3"
0000867E <preprocessor.include.ab3@435> XINCLUDE "/Shared/preprocessor.include.ab3"
0000868E <preprocessor.include.ab3@440> XINCLUDE "/Shared/preprocessor.include.ab3"
00008698 <preprocessor.include.ab3@442> XINCLUDE "/Shared/preprocessor.include.ab3"
000086AC <preprocessor.include.ab3@443> XINCLUDE "/Shared/preprocessor.include.ab3"
000086D2 <preprocessor.include.ab3@448> XINCLUDE "/Shared/preprocessor.include.ab3"
000086F4 <preprocessor.include.ab3@449> XINCLUDE "/Shared/preprocessor.include.ab3"
0000871C <preprocessor.include.ab3@450> XINCLUDE "/Shared/preprocessor.include.ab3"
00008722 <preprocessor.include.ab3@451> XINCLUDE "/Shared/preprocessor.include.ab3"
00008730 <preprocessor.include.ab3@452> XINCLUDE "/Shared/preprocessor.include.ab3"
00008736 <preprocessor.include.ab3@453> XINCLUDE "/Shared/preprocessor.include.ab3"
0000874A <preprocessor.include.ab3@454> XINCLUDE "/Shared/preprocessor.include.ab3"
0000875A <preprocessor.include.ab3@455> XINCLUDE "/Shared/preprocessor.include.ab3"
00008770 <preprocessor.include.ab3@457> XINCLUDE "/Shared/preprocessor.include.ab3"
00008788 <preprocessor.include.ab3@459> XINCLUDE "/Shared/preprocessor.include.ab3"
000087A4 <preprocessor.include.ab3@460> XINCLUDE "/Shared/preprocessor.include.ab3"
000087AE <preprocessor.include.ab3@461> XINCLUDE "/Shared/preprocessor.include.ab3"
000087CA <preprocessor.include.ab3@462> XINCLUDE "/Shared/preprocessor.include.ab3"
000087F8 <preprocessor.include.ab3@463> XINCLUDE "/Shared/preprocessor.include.ab3"
00008834 <preprocessor.include.ab3@464> XINCLUDE "/Shared/preprocessor.include.ab3"
00008844 <preprocessor.include.ab3@465> XINCLUDE "/Shared/preprocessor.include.ab3"
00008852 <preprocessor.include.ab3@467> XINCLUDE "/Shared/preprocessor.include.ab3"
00008858 <preprocessor.include.ab3@468> XINCLUDE "/Shared/preprocessor.include.ab3"
00008868 <preprocessor.include.ab3@469> XINCLUDE "/Shared/preprocessor.include.ab3"
00008892 <preprocessor.include.ab3@470> XINCLUDE "/Shared/preprocessor.include.ab3"
00008898 <preprocessor.include.ab3@471> XINCLUDE "/Shared/preprocessor.include.ab3"
000088C4 <preprocessor.include.ab3@472> XINCLUDE "/Shared/preprocessor.include.ab3"
000088D4 <preprocessor.include.ab3@474> XINCLUDE "/Shared/preprocessor.include.ab3"
000088E4 <preprocessor.include.ab3@476> XINCLUDE "/Shared/preprocessor.include.ab3"
00008902 <preprocessor.include.ab3@477> XINCLUDE "/Shared/preprocessor.include.ab3"
00008910 <preprocessor.include.ab3@478> XINCLUDE "/Shared/preprocessor.include.ab3"
00008946 <preprocessor.include.ab3@479> XINCLUDE "/Shared/preprocessor.include.ab3"
0000896A <preprocessor.include.ab3@480> XINCLUDE "/Shared/preprocessor.include.ab3"
0000897E <preprocessor.include.ab3@483> XINCLUDE "/Shared/preprocessor.include.ab3"
0000898E <preprocessor.include.ab3@485> XINCLUDE "/Shared/preprocessor.include.ab3"
000089AC <preprocessor.include.ab3@486> XINCLUDE "/Shared/preprocessor.include.ab3"
000089BA <preprocessor.include.ab3@487> XINCLUDE "/Shared/preprocessor.include.ab3"
000089DE <preprocessor.include.ab3@488> XINCLUDE "/Shared/preprocessor.include.ab3"
00008A02 <preprocessor.include.ab3@489> XINCLUDE "/Shared/preprocessor.include.ab3"
00008A08 <preprocessor.include.ab3@493> XINCLUDE "/Shared/preprocessor.include.ab3"
00008A18 <preprocessor.include.ab3@494> XINCLUDE "/Shared/preprocessor.include.ab3"
00008A1E <preprocessor.include.ab3@495> XINCLUDE "/Shared/preprocessor.include.ab3"
00008A40 <preprocessor.include.ab3@499> XINCLUDE "/Shared/preprocessor.include.ab3"
00008A48 <preprocessor.include.ab3@500> XINCLUDE "/Shared/preprocessor.include.ab3"
00008A7E <preprocessor.include.ab3@501> XINCLUDE "/Shared/preprocessor.include.ab3"
00008A9A <preprocessor.include.ab3@502> XINCLUDE "/Shared/preprocessor.include.ab3"
00008AA0 <preprocessor.include.ab3@503> XINCLUDE "/Shared/preprocessor.include.ab3"
00008AD6 <preprocessor.include.ab3@507> XINCLUDE "/Shared/preprocessor.include.ab3"
00008AF2 <preprocessor.include.ab3@508> XINCLUDE "/Shared/preprocessor.include.ab3"
00008B1A <preprocessor.include.ab3@509> XINCLUDE "/Shared/preprocessor.include.ab3"
00008B38 <preprocessor.include.ab3@510> XINCLUDE "/Shared/preprocessor.include.ab3"
00008B56 <preprocessor.include.ab3@511> XINCLUDE "/Shared/preprocessor.include.ab3"
00008B84 <preprocessor.include.ab3@512> XINCLUDE "/Shared/preprocessor.include.ab3"
00008BE6 <preprocessor.include.ab3@513> XINCLUDE "/Shared/preprocessor.include.ab3"
00008C00 <preprocessor.include.ab3@514> XINCLUDE "/Shared/preprocessor.include.ab3"
00008C1A <preprocessor.include.ab3@518> XINCLUDE "/Shared/preprocessor.include.ab3"
00008C24 <preprocessor.include.ab3@519> XINCLUDE "/Shared/preprocessor.include.ab3"
00008C62 <preprocessor.include.ab3@520> XINCLUDE "/Shared/preprocessor.include.ab3"
00008C66 <preprocessor.include.ab3@521> XINCLUDE "/Shared/preprocessor.include.ab3"
00008C70 <preprocessor.include.ab3@523> XINCLUDE "/Shared/preprocessor.include.ab3"
00008C9E <preprocessor.include.ab3@524> XINCLUDE "/Shared/preprocessor.include.ab3"
00008CBE <preprocessor.include.ab3@525> XINCLUDE "/Shared/preprocessor.include.ab3"
00008CD6 <preprocessor.include.ab3@526> XINCLUDE "/Shared/preprocessor.include.ab3"
00008D34 <preprocessor.include.ab3@527> XINCLUDE "/Shared/preprocessor.include.ab3"
00008D60 <preprocessor.include.ab3@528> XINCLUDE "/Shared/preprocessor.include.ab3"
00008D72 <preprocessor.include.ab3@529> XINCLUDE "/Shared/preprocessor.include.ab3"
00008D82 <preprocessor.include.ab3@530> XINCLUDE "/Shared/preprocessor.include.ab3"
00008D9A <preprocessor.include.ab3@531> XINCLUDE "/Shared/preprocessor.include.ab3"
00008DA0 <preprocessor.include.ab3@533> XINCLUDE "/Shared/preprocessor.include.ab3"
00008DDA <preprocessor.include.ab3@534> XINCLUDE "/Shared/preprocessor.include.ab3"
00008DE4 <preprocessor.include.ab3@536> XINCLUDE "/Shared/preprocessor.include.ab3"
00008DEA <preprocessor.include.ab3@537> XINCLUDE "/Shared/preprocessor.include.ab3"
00008DF4 <preprocessor.include.ab3@538> XINCLUDE "/Shared/preprocessor.include.ab3"
00008E06 <preprocessor.include.ab3@539> XINCLUDE "/Shared/preprocessor.include.ab3"
00008E06 <AmiBlitz3.ab2@87> XINCLUDE "/Shared/preprocessor.include.ab3"
00008E06 <logging.include.bb2@1> XINCLUDE "PE/logging.include.bb2"
00008E12 <logging.include.bb2@4> XINCLUDE "PE/logging.include.bb2"
00008E12 <PE_Tools.include.bb2@1> XINCLUDE "PE/logging.include.bb2"
00008E36 <PE_Tools.include.bb2@67> XINCLUDE "PE/logging.include.bb2"
00008E3E <PE_Tools.include.bb2@76> XINCLUDE "PE/logging.include.bb2"
00008E6E <PE_Tools.include.bb2@77> XINCLUDE "PE/logging.include.bb2"
00008E9C <PE_Tools.include.bb2@78> XINCLUDE "PE/logging.include.bb2"
00008F0C <PE_Tools.include.bb2@79> XINCLUDE "PE/logging.include.bb2"
00008F1A <PE_Tools.include.bb2@80> XINCLUDE "PE/logging.include.bb2"
00008F6A <PE_Tools.include.bb2@81> XINCLUDE "PE/logging.include.bb2"
00008F6A <logging.include.bb2@6> XINCLUDE "PE/logging.include.bb2"
00008F6A <file.include.bb2@1> XINCLUDE "PE/logging.include.bb2"
00008F6A <asl.include.bb2@1> XINCLUDE "PE/logging.include.bb2"
00008F8E <asl.include.bb2@93> XINCLUDE "PE/logging.include.bb2"
00008FB6 <asl.include.bb2@94> XINCLUDE "PE/logging.include.bb2"
00008FDA <asl.include.bb2@95> XINCLUDE "PE/logging.include.bb2"
00009008 <asl.include.bb2@294> XINCLUDE "PE/logging.include.bb2"
00009264 <asl.include.bb2@296> XINCLUDE "PE/logging.include.bb2"
00009296 <asl.include.bb2@298> XINCLUDE "PE/logging.include.bb2"
000092C4 <asl.include.bb2@300> XINCLUDE "PE/logging.include.bb2"
00009302 <asl.include.bb2@301> XINCLUDE "PE/logging.include.bb2"
00009330 <asl.include.bb2@302> XINCLUDE "PE/logging.include.bb2"
0000935E <asl.include.bb2@303> XINCLUDE "PE/logging.include.bb2"
0000938C <asl.include.bb2@304> XINCLUDE "PE/logging.include.bb2"
000093BA <asl.include.bb2@305> XINCLUDE "PE/logging.include.bb2"
000093E8 <asl.include.bb2@306> XINCLUDE "PE/logging.include.bb2"
00009416 <asl.include.bb2@307> XINCLUDE "PE/logging.include.bb2"
00009444 <asl.include.bb2@308> XINCLUDE "PE/logging.include.bb2"
00009472 <asl.include.bb2@309> XINCLUDE "PE/logging.include.bb2"
00009502 <asl.include.bb2@311> XINCLUDE "PE/logging.include.bb2"
00009592 <asl.include.bb2@312> XINCLUDE "PE/logging.include.bb2"
0000963A <asl.include.bb2@313> XINCLUDE "PE/logging.include.bb2"
00009688 <asl.include.bb2@314> XINCLUDE "PE/logging.include.bb2"
000096CA <asl.include.bb2@315> XINCLUDE "PE/logging.include.bb2"
000096CE <asl.include.bb2@316> XINCLUDE "PE/logging.include.bb2"
0000971C <asl.include.bb2@319> XINCLUDE "PE/logging.include.bb2"
0000975E <asl.include.bb2@320> XINCLUDE "PE/logging.include.bb2"
0000978A <asl.include.bb2@321> XINCLUDE "PE/logging.include.bb2"
0000978E <asl.include.bb2@322> XINCLUDE "PE/logging.include.bb2"
000097BA <asl.include.bb2@323> XINCLUDE "PE/logging.include.bb2"
000097E6 <asl.include.bb2@325> XINCLUDE "PE/logging.include.bb2"
00009810 <asl.include.bb2@327> XINCLUDE "PE/logging.include.bb2"
0000981A <asl.include.bb2@328> XINCLUDE "PE/logging.include.bb2"
00009838 <asl.include.bb2@329> XINCLUDE "PE/logging.include.bb2"
00009858 <asl.include.bb2@330> XINCLUDE "PE/logging.include.bb2"
00009886 <asl.include.bb2@331> XINCLUDE "PE/logging.include.bb2"
000098B4 <asl.include.bb2@332> XINCLUDE "PE/logging.include.bb2"
000098E2 <asl.include.bb2@333> XINCLUDE "PE/logging.include.bb2"
00009928 <asl.include.bb2@336> XINCLUDE "PE/logging.include.bb2"
0000996E <asl.include.bb2@337> XINCLUDE "PE/logging.include.bb2"
000099B4 <asl.include.bb2@338> XINCLUDE "PE/logging.include.bb2"
000099F0 <asl.include.bb2@340> XINCLUDE "PE/logging.include.bb2"
00009AEC <asl.include.bb2@341> XINCLUDE "PE/logging.include.bb2"
00009B0A <asl.include.bb2@343> XINCLUDE "PE/logging.include.bb2"
00009B14 <asl.include.bb2@345> XINCLUDE "PE/logging.include.bb2"
00009B3A <asl.include.bb2@346> XINCLUDE "PE/logging.include.bb2"
00009B50 <asl.include.bb2@348> XINCLUDE "PE/logging.include.bb2"
00009B8A <asl.include.bb2@349> XINCLUDE "PE/logging.include.bb2"
00009BC8 <asl.include.bb2@350> XINCLUDE "PE/logging.include.bb2"
00009BD8 <asl.include.bb2@351> XINCLUDE "PE/logging.include.bb2"
00009C2E <asl.include.bb2@352> XINCLUDE "PE/logging.include.bb2"
00009C66 <asl.include.bb2@353> XINCLUDE "PE/logging.include.bb2"
00009C76 <asl.include.bb2@355> XINCLUDE "PE/logging.include.bb2"
00009C7A <asl.include.bb2@356> XINCLUDE "PE/logging.include.bb2"
00009C8A <asl.include.bb2@357> XINCLUDE "PE/logging.include.bb2"
00009C94 <asl.include.bb2@358> XINCLUDE "PE/logging.include.bb2"
00009CCE <asl.include.bb2@359> XINCLUDE "PE/logging.include.bb2"
00009CD2 <asl.include.bb2@360> XINCLUDE "PE/logging.include.bb2"
00009D2A <asl.include.bb2@361> XINCLUDE "PE/logging.include.bb2"
00009D48 <asl.include.bb2@363> XINCLUDE "PE/logging.include.bb2"
00009D4E <asl.include.bb2@366> XINCLUDE "PE/logging.include.bb2"
00009D5E <asl.include.bb2@369> XINCLUDE "PE/logging.include.bb2"
00009D6E <asl.include.bb2@370> XINCLUDE "PE/logging.include.bb2"
00009D7E <asl.include.bb2@371> XINCLUDE "PE/logging.include.bb2"
00009D8E <asl.include.bb2@372> XINCLUDE "PE/logging.include.bb2"
00009D9E <asl.include.bb2@374> XINCLUDE "PE/logging.include.bb2"
00009DA8 <asl.include.bb2@376> XINCLUDE "PE/logging.include.bb2"
00009DBC <asl.include.bb2@377> XINCLUDE "PE/logging.include.bb2"
00009DD2 <asl.include.bb2@393> XINCLUDE "PE/logging.include.bb2"
00009DFA <asl.include.bb2@395> XINCLUDE "PE/logging.include.bb2"
00009E04 <asl.include.bb2@396> XINCLUDE "PE/logging.include.bb2"
00009E14 <asl.include.bb2@397> XINCLUDE "PE/logging.include.bb2"
00009E4E <asl.include.bb2@398> XINCLUDE "PE/logging.include.bb2"
00009E58 <asl.include.bb2@399> XINCLUDE "PE/logging.include.bb2"
00009E82 <asl.include.bb2@401> XINCLUDE "PE/logging.include.bb2"
00009E9A <asl.include.bb2@402> XINCLUDE "PE/logging.include.bb2"
00009EEC <asl.include.bb2@438> XINCLUDE "PE/logging.include.bb2"
00009F1E <asl.include.bb2@440> XINCLUDE "PE/logging.include.bb2"
00009FB8 <asl.include.bb2@441> XINCLUDE "PE/logging.include.bb2"
00009FFE <asl.include.bb2@442> XINCLUDE "PE/logging.include.bb2"
0000A098 <asl.include.bb2@443> XINCLUDE "PE/logging.include.bb2"
0000A0B2 <asl.include.bb2@444> XINCLUDE "PE/logging.include.bb2"
0000A0B2 <file.include.bb2@57> XINCLUDE "PE/logging.include.bb2"
0000A0C8 <file.include.bb2@66> XINCLUDE "PE/logging.include.bb2"
0000A0DE <file.include.bb2@67> XINCLUDE "PE/logging.include.bb2"
0000A0F4 <file.include.bb2@68> XINCLUDE "PE/logging.include.bb2"
0000A10A <file.include.bb2@70> XINCLUDE "PE/logging.include.bb2"
0000A116 <file.include.bb2@72> XINCLUDE "PE/logging.include.bb2"
0000A122 <file.include.bb2@73> XINCLUDE "PE/logging.include.bb2"
0000A12E <file.include.bb2@74> XINCLUDE "PE/logging.include.bb2"
0000A13A <file.include.bb2@75> XINCLUDE "PE/logging.include.bb2"
0000A162 <file.include.bb2@77> XINCLUDE "PE/logging.include.bb2"
0000A18A <file.include.bb2@78> XINCLUDE "PE/logging.include.bb2"
0000A1B2 <file.include.bb2@79> XINCLUDE "PE/logging.include.bb2"
0000A1D6 <file.include.bb2@109> XINCLUDE "PE/logging.include.bb2"
0000A1FA <file.include.bb2@110> XINCLUDE "PE/logging.include.bb2"
0000A214 <file.include.bb2@156> XINCLUDE "PE/logging.include.bb2"
0000A224 <file.include.bb2@157> XINCLUDE "PE/logging.include.bb2"
0000A226 <file.include.bb2@158> XINCLUDE "PE/logging.include.bb2"
0000A228 <file.include.bb2@159> XINCLUDE "PE/logging.include.bb2"
0000A22A <file.include.bb2@160> XINCLUDE "PE/logging.include.bb2"
0000A22C <file.include.bb2@161> XINCLUDE "PE/logging.include.bb2"
0000A22E <file.include.bb2@162> XINCLUDE "PE/logging.include.bb2"
0000A232 <file.include.bb2@163> XINCLUDE "PE/logging.include.bb2"
0000A236 <file.include.bb2@164> XINCLUDE "PE/logging.include.bb2"
0000A23A <file.include.bb2@165> XINCLUDE "PE/logging.include.bb2"
0000A23C <file.include.bb2@166> XINCLUDE "PE/logging.include.bb2"
0000A23E <file.include.bb2@167> XINCLUDE "PE/logging.include.bb2"
0000A240 <file.include.bb2@168> XINCLUDE "PE/logging.include.bb2"
0000A242 <file.include.bb2@169> XINCLUDE "PE/logging.include.bb2"
0000A244 <file.include.bb2@170> XINCLUDE "PE/logging.include.bb2"
0000A246 <file.include.bb2@171> XINCLUDE "PE/logging.include.bb2"
0000A248 <file.include.bb2@172> XINCLUDE "PE/logging.include.bb2"
0000A252 <file.include.bb2@173> XINCLUDE "PE/logging.include.bb2"
0000A258 <file.include.bb2@174> XINCLUDE "PE/logging.include.bb2"
0000A272 <file.include.bb2@215> XINCLUDE "PE/logging.include.bb2"
0000A290 <file.include.bb2@217> XINCLUDE "PE/logging.include.bb2"
0000A296 <file.include.bb2@218> XINCLUDE "PE/logging.include.bb2"
0000A2B0 <file.include.bb2@237> XINCLUDE "PE/logging.include.bb2"
0000A2CA <file.include.bb2@239> XINCLUDE "PE/logging.include.bb2"
0000A2F4 <file.include.bb2@240> XINCLUDE "PE/logging.include.bb2"
0000A314 <file.include.bb2@241> XINCLUDE "PE/logging.include.bb2"
0000A31E <file.include.bb2@242> XINCLUDE "PE/logging.include.bb2"
0000A34A <file.include.bb2@243> XINCLUDE "PE/logging.include.bb2"
0000A36C <file.include.bb2@244> XINCLUDE "PE/logging.include.bb2"
0000A386 <file.include.bb2@245> XINCLUDE "PE/logging.include.bb2"
0000A38A <file.include.bb2@248> XINCLUDE "PE/logging.include.bb2"
0000A3B8 <file.include.bb2@249> XINCLUDE "PE/logging.include.bb2"
0000A3D6 <file.include.bb2@251> XINCLUDE "PE/logging.include.bb2"
0000A3DC <file.include.bb2@252> XINCLUDE "PE/logging.include.bb2"
0000A3FA <file.include.bb2@271> XINCLUDE "PE/logging.include.bb2"
0000A400 <file.include.bb2@273> XINCLUDE "PE/logging.include.bb2"
0000A428 <file.include.bb2@274> XINCLUDE "PE/logging.include.bb2"
0000A446 <file.include.bb2@275> XINCLUDE "PE/logging.include.bb2"
0000A480 <file.include.bb2@276> XINCLUDE "PE/logging.include.bb2"
0000A49C <file.include.bb2@277> XINCLUDE "PE/logging.include.bb2"
0000A4A0 <file.include.bb2@278> XINCLUDE "PE/logging.include.bb2"
0000A4A6 <file.include.bb2@279> XINCLUDE "PE/logging.include.bb2"
0000A4AA <file.include.bb2@281> XINCLUDE "PE/logging.include.bb2"
0000A4B0 <file.include.bb2@282> XINCLUDE "PE/logging.include.bb2"
0000A4CA <file.include.bb2@283> XINCLUDE "PE/logging.include.bb2"
0000A514 <file.include.bb2@285> XINCLUDE "PE/logging.include.bb2"
0000A51A <file.include.bb2@286> XINCLUDE "PE/logging.include.bb2"
0000A548 <file.include.bb2@287> XINCLUDE "PE/logging.include.bb2"
0000A552 <file.include.bb2@288> XINCLUDE "PE/logging.include.bb2"
0000A56E <file.include.bb2@289> XINCLUDE "PE/logging.include.bb2"
0000A572 <file.include.bb2@291> XINCLUDE "PE/logging.include.bb2"
0000A5A0 <file.include.bb2@292> XINCLUDE "PE/logging.include.bb2"
0000A5AA <file.include.bb2@296> XINCLUDE "PE/logging.include.bb2"
0000A5B0 <file.include.bb2@297> XINCLUDE "PE/logging.include.bb2"
0000A5CE <file.include.bb2@316> XINCLUDE "PE/logging.include.bb2"
0000A5FC <file.include.bb2@318> XINCLUDE "PE/logging.include.bb2"
0000A602 <file.include.bb2@319> XINCLUDE "PE/logging.include.bb2"
0000A618 <file.include.bb2@335> XINCLUDE "PE/logging.include.bb2"
0000A622 <file.include.bb2@337> XINCLUDE "PE/logging.include.bb2"
0000A690 <file.include.bb2@338> XINCLUDE "PE/logging.include.bb2"
0000A6A0 <file.include.bb2@339> XINCLUDE "PE/logging.include.bb2"
0000A6A4 <file.include.bb2@340> XINCLUDE "PE/logging.include.bb2"
0000A6DE <file.include.bb2@341> XINCLUDE "PE/logging.include.bb2"
0000A6E8 <file.include.bb2@342> XINCLUDE "PE/logging.include.bb2"
0000A6EE <file.include.bb2@343> XINCLUDE "PE/logging.include.bb2"
0000A708 <file.include.bb2@397> XINCLUDE "PE/logging.include.bb2"
0000A71E <file.include.bb2@399> XINCLUDE "PE/logging.include.bb2"
0000A77A <file.include.bb2@400> XINCLUDE "PE/logging.include.bb2"
0000A7B4 <file.include.bb2@401> XINCLUDE "PE/logging.include.bb2"
0000A7EE <file.include.bb2@402> XINCLUDE "PE/logging.include.bb2"
0000A80C <file.include.bb2@403> XINCLUDE "PE/logging.include.bb2"
0000A82A <file.include.bb2@404> XINCLUDE "PE/logging.include.bb2"
0000A840 <file.include.bb2@405> XINCLUDE "PE/logging.include.bb2"
0000A85C <file.include.bb2@406> XINCLUDE "PE/logging.include.bb2"
0000A876 <file.include.bb2@407> XINCLUDE "PE/logging.include.bb2"
0000A8F2 <file.include.bb2@408> XINCLUDE "PE/logging.include.bb2"
0000A904 <file.include.bb2@410> XINCLUDE "PE/logging.include.bb2"
0000A91A <file.include.bb2@422> XINCLUDE "PE/logging.include.bb2"
0000A94E <file.include.bb2@424> XINCLUDE "PE/logging.include.bb2"
0000A958 <file.include.bb2@425> XINCLUDE "PE/logging.include.bb2"
0000A968 <file.include.bb2@426> XINCLUDE "PE/logging.include.bb2"
0000A96C <file.include.bb2@427> XINCLUDE "PE/logging.include.bb2"
0000A99A <file.include.bb2@428> XINCLUDE "PE/logging.include.bb2"
0000A9B4 <file.include.bb2@447> XINCLUDE "PE/logging.include.bb2"
0000A9CA <file.include.bb2@449> XINCLUDE "PE/logging.include.bb2"
0000A9E8 <file.include.bb2@450> XINCLUDE "PE/logging.include.bb2"
0000A9FE <file.include.bb2@451> XINCLUDE "PE/logging.include.bb2"
0000AA36 <file.include.bb2@452> XINCLUDE "PE/logging.include.bb2"
0000AA60 <file.include.bb2@453> XINCLUDE "PE/logging.include.bb2"
0000AA8A <file.include.bb2@456> XINCLUDE "PE/logging.include.bb2"
0000AAA2 <file.include.bb2@457> XINCLUDE "PE/logging.include.bb2"
0000AAB8 <file.include.bb2@525> XINCLUDE "PE/logging.include.bb2"
0000AB04 <file.include.bb2@527> XINCLUDE "PE/logging.include.bb2"
0000AB24 <file.include.bb2@528> XINCLUDE "PE/logging.include.bb2"
0000AB2C <file.include.bb2@529> XINCLUDE "PE/logging.include.bb2"
0000AB6A <file.include.bb2@568> XINCLUDE "PE/logging.include.bb2"
0000AB76 <file.include.bb2@570> XINCLUDE "PE/logging.include.bb2"
0000AB80 <file.include.bb2@571> XINCLUDE "PE/logging.include.bb2"
0000AB96 <file.include.bb2@572> XINCLUDE "PE/logging.include.bb2"
0000AB9C <file.include.bb2@573> XINCLUDE "PE/logging.include.bb2"
0000ABA8 <file.include.bb2@574> XINCLUDE "PE/logging.include.bb2"
0000ABD0 <file.include.bb2@575> XINCLUDE "PE/logging.include.bb2"
0000ABE0 <file.include.bb2@576> XINCLUDE "PE/logging.include.bb2"
0000AC08 <file.include.bb2@577> XINCLUDE "PE/logging.include.bb2"
0000AC18 <file.include.bb2@578> XINCLUDE "PE/logging.include.bb2"
0000AC40 <file.include.bb2@579> XINCLUDE "PE/logging.include.bb2"
0000AC50 <file.include.bb2@580> XINCLUDE "PE/logging.include.bb2"
0000AC78 <file.include.bb2@581> XINCLUDE "PE/logging.include.bb2"
0000AC7A <file.include.bb2@582> XINCLUDE "PE/logging.include.bb2"
0000ACA0 <file.include.bb2@584> XINCLUDE "PE/logging.include.bb2"
0000ACDC <file.include.bb2@586> XINCLUDE "PE/logging.include.bb2"
0000AD66 <file.include.bb2@587> XINCLUDE "PE/logging.include.bb2"
0000ADA0 <file.include.bb2@588> XINCLUDE "PE/logging.include.bb2"
0000ADD0 <file.include.bb2@589> XINCLUDE "PE/logging.include.bb2"
0000AE0C <file.include.bb2@593> XINCLUDE "PE/logging.include.bb2"
0000AE64 <file.include.bb2@594> XINCLUDE "PE/logging.include.bb2"
0000AEBC <file.include.bb2@595> XINCLUDE "PE/logging.include.bb2"
0000AF3C <file.include.bb2@597> XINCLUDE "PE/logging.include.bb2"
0000AF70 <file.include.bb2@598> XINCLUDE "PE/logging.include.bb2"
0000AFA4 <file.include.bb2@599> XINCLUDE "PE/logging.include.bb2"
0000AFAA <file.include.bb2@600> XINCLUDE "PE/logging.include.bb2"
0000AFB6 <file.include.bb2@601> XINCLUDE "PE/logging.include.bb2"
0000AFEA <file.include.bb2@602> XINCLUDE "PE/logging.include.bb2"
0000B01A <file.include.bb2@603> XINCLUDE "PE/logging.include.bb2"
0000B0D6 <file.include.bb2@604> XINCLUDE "PE/logging.include.bb2"
0000B156 <file.include.bb2@605> XINCLUDE "PE/logging.include.bb2"
0000B18A <file.include.bb2@606> XINCLUDE "PE/logging.include.bb2"
0000B1A8 <file.include.bb2@608> XINCLUDE "PE/logging.include.bb2"
0000B1B0 <file.include.bb2@609> XINCLUDE "PE/logging.include.bb2"
0000B1B4 <file.include.bb2@610> XINCLUDE "PE/logging.include.bb2"
0000B278 <file.include.bb2@611> XINCLUDE "PE/logging.include.bb2"
0000B288 <file.include.bb2@614> XINCLUDE "PE/logging.include.bb2"
0000B344 <file.include.bb2@615> XINCLUDE "PE/logging.include.bb2"
0000B3C4 <file.include.bb2@616> XINCLUDE "PE/logging.include.bb2"
0000B4A4 <file.include.bb2@617> XINCLUDE "PE/logging.include.bb2"
0000B4AE <file.include.bb2@618> XINCLUDE "PE/logging.include.bb2"
0000B4E2 <file.include.bb2@619> XINCLUDE "PE/logging.include.bb2"
0000B500 <file.include.bb2@620> XINCLUDE "PE/logging.include.bb2"
0000B508 <file.include.bb2@621> XINCLUDE "PE/logging.include.bb2"
0000B50C <file.include.bb2@622> XINCLUDE "PE/logging.include.bb2"
0000B5D0 <file.include.bb2@623> XINCLUDE "PE/logging.include.bb2"
0000B5E0 <file.include.bb2@627> XINCLUDE "PE/logging.include.bb2"
0000B614 <file.include.bb2@628> XINCLUDE "PE/logging.include.bb2"
0000B644 <file.include.bb2@629> XINCLUDE "PE/logging.include.bb2"
0000B700 <file.include.bb2@630> XINCLUDE "PE/logging.include.bb2"
0000B780 <file.include.bb2@631> XINCLUDE "PE/logging.include.bb2"
0000B7B4 <file.include.bb2@632> XINCLUDE "PE/logging.include.bb2"
0000B7D2 <file.include.bb2@635> XINCLUDE "PE/logging.include.bb2"
0000B7DA <file.include.bb2@636> XINCLUDE "PE/logging.include.bb2"
0000B7DE <file.include.bb2@637> XINCLUDE "PE/logging.include.bb2"
0000B8A2 <file.include.bb2@638> XINCLUDE "PE/logging.include.bb2"
0000B8B2 <file.include.bb2@641> XINCLUDE "PE/logging.include.bb2"
0000B96E <file.include.bb2@642> XINCLUDE "PE/logging.include.bb2"
0000B9EE <file.include.bb2@643> XINCLUDE "PE/logging.include.bb2"
0000BA22 <file.include.bb2@644> XINCLUDE "PE/logging.include.bb2"
0000BA40 <file.include.bb2@645> XINCLUDE "PE/logging.include.bb2"
0000BA48 <file.include.bb2@646> XINCLUDE "PE/logging.include.bb2"
0000BA4C <file.include.bb2@647> XINCLUDE "PE/logging.include.bb2"
0000BB10 <file.include.bb2@648> XINCLUDE "PE/logging.include.bb2"
0000BB14 <file.include.bb2@651> XINCLUDE "PE/logging.include.bb2"
0000BB42 <file.include.bb2@652> XINCLUDE "PE/logging.include.bb2"
0000BB44 <file.include.bb2@653> XINCLUDE "PE/logging.include.bb2"
0000BB48 <file.include.bb2@655> XINCLUDE "PE/logging.include.bb2"
0000BBD4 <file.include.bb2@656> XINCLUDE "PE/logging.include.bb2"
0000BBEA <file.include.bb2@659> XINCLUDE "PE/logging.include.bb2"
0000BC00 <file.include.bb2@660> XINCLUDE "PE/logging.include.bb2"
0000BC6A <file.include.bb2@661> XINCLUDE "PE/logging.include.bb2"
0000BCD4 <file.include.bb2@662> XINCLUDE "PE/logging.include.bb2"
0000BCF4 <file.include.bb2@663> XINCLUDE "PE/logging.include.bb2"
0000BD10 <file.include.bb2@664> XINCLUDE "PE/logging.include.bb2"
0000BD2E <file.include.bb2@665> XINCLUDE "PE/logging.include.bb2"
0000BD48 <file.include.bb2@666> XINCLUDE "PE/logging.include.bb2"
0000BD52 <file.include.bb2@668> XINCLUDE "PE/logging.include.bb2"
0000BD6E <file.include.bb2@669> XINCLUDE "PE/logging.include.bb2"
0000BD90 <file.include.bb2@805> XINCLUDE "PE/logging.include.bb2"
0000BD96 <file.include.bb2@807> XINCLUDE "PE/logging.include.bb2"
0000BDBE <file.include.bb2@808> XINCLUDE "PE/logging.include.bb2"
0000BDD8 <file.include.bb2@809> XINCLUDE "PE/logging.include.bb2"
0000BDEE <file.include.bb2@810> XINCLUDE "PE/logging.include.bb2"
0000BE4A <file.include.bb2@811> XINCLUDE "PE/logging.include.bb2"
0000BE82 <file.include.bb2@812> XINCLUDE "PE/logging.include.bb2"
0000BE86 <file.include.bb2@813> XINCLUDE "PE/logging.include.bb2"
0000BED2 <file.include.bb2@814> XINCLUDE "PE/logging.include.bb2"
0000BEEC <file.include.bb2@815> XINCLUDE "PE/logging.include.bb2"
0000BF00 <file.include.bb2@818> XINCLUDE "PE/logging.include.bb2"
0000BF06 <file.include.bb2@819> XINCLUDE "PE/logging.include.bb2"
0000BF0A <file.include.bb2@820> XINCLUDE "PE/logging.include.bb2"
0000BF20 <file.include.bb2@821> XINCLUDE "PE/logging.include.bb2"
0000C000 <file.include.bb2@822> XINCLUDE "PE/logging.include.bb2"
0000C004 <file.include.bb2@823> XINCLUDE "PE/logging.include.bb2"
0000C04A <file.include.bb2@824> XINCLUDE "PE/logging.include.bb2"
0000C056 <file.include.bb2@825> XINCLUDE "PE/logging.include.bb2"
0000C0C4 <file.include.bb2@826> XINCLUDE "PE/logging.include.bb2"
0000C0FE <file.include.bb2@827> XINCLUDE "PE/logging.include.bb2"
0000C14A <file.include.bb2@830> XINCLUDE "PE/logging.include.bb2"
0000C1B6 <file.include.bb2@831> XINCLUDE "PE/logging.include.bb2"
0000C1BA <file.include.bb2@832> XINCLUDE "PE/logging.include.bb2"
0000C1E8 <file.include.bb2@833> XINCLUDE "PE/logging.include.bb2"
0000C1EC <file.include.bb2@835> XINCLUDE "PE/logging.include.bb2"
0000C242 <file.include.bb2@836> XINCLUDE "PE/logging.include.bb2"
0000C24C <file.include.bb2@838> XINCLUDE "PE/logging.include.bb2"
0000C260 <file.include.bb2@839> XINCLUDE "PE/logging.include.bb2"
0000C27A <file.include.bb2@841> XINCLUDE "PE/logging.include.bb2"
0000C280 <file.include.bb2@843> XINCLUDE "PE/logging.include.bb2"
0000C2A8 <file.include.bb2@844> XINCLUDE "PE/logging.include.bb2"
0000C2C2 <file.include.bb2@845> XINCLUDE "PE/logging.include.bb2"
0000C31E <file.include.bb2@846> XINCLUDE "PE/logging.include.bb2"
0000C322 <file.include.bb2@849> XINCLUDE "PE/logging.include.bb2"
0000C344 <file.include.bb2@867> XINCLUDE "PE/logging.include.bb2"
0000C34A <file.include.bb2@869> XINCLUDE "PE/logging.include.bb2"
0000C364 <file.include.bb2@870> XINCLUDE "PE/logging.include.bb2"
0000C382 <file.include.bb2@871> XINCLUDE "PE/logging.include.bb2"
0000C3C4 <file.include.bb2@872> XINCLUDE "PE/logging.include.bb2"
0000C412 <file.include.bb2@873> XINCLUDE "PE/logging.include.bb2"
0000C448 <file.include.bb2@874> XINCLUDE "PE/logging.include.bb2"
0000C44E <file.include.bb2@875> XINCLUDE "PE/logging.include.bb2"
0000C452 <file.include.bb2@876> XINCLUDE "PE/logging.include.bb2"
0000C482 <file.include.bb2@877> XINCLUDE "PE/logging.include.bb2"
0000C488 <file.include.bb2@878> XINCLUDE "PE/logging.include.bb2"
0000C48C <file.include.bb2@880> XINCLUDE "PE/logging.include.bb2"
0000C4A2 <file.include.bb2@881> XINCLUDE "PE/logging.include.bb2"
0000C4FE <file.include.bb2@882> XINCLUDE "PE/logging.include.bb2"
0000C536 <file.include.bb2@883> XINCLUDE "PE/logging.include.bb2"
0000C53A <file.include.bb2@884> XINCLUDE "PE/logging.include.bb2"
0000C586 <file.include.bb2@885> XINCLUDE "PE/logging.include.bb2"
0000C5A0 <file.include.bb2@886> XINCLUDE "PE/logging.include.bb2"
0000C5B4 <file.include.bb2@888> XINCLUDE "PE/logging.include.bb2"
0000C5BA <file.include.bb2@889> XINCLUDE "PE/logging.include.bb2"
0000C5BE <file.include.bb2@890> XINCLUDE "PE/logging.include.bb2"
0000C5D4 <file.include.bb2@891> XINCLUDE "PE/logging.include.bb2"
0000C5DA <file.include.bb2@892> XINCLUDE "PE/logging.include.bb2"
0000C5DE <file.include.bb2@893> XINCLUDE "PE/logging.include.bb2"
0000C630 <file.include.bb2@894> XINCLUDE "PE/logging.include.bb2"
0000C67C <file.include.bb2@897> XINCLUDE "PE/logging.include.bb2"
0000C686 <file.include.bb2@900> XINCLUDE "PE/logging.include.bb2"
0000C68C <file.include.bb2@901> XINCLUDE "PE/logging.include.bb2"
0000C6A6 <file.include.bb2@955> XINCLUDE "PE/logging.include.bb2"
0000C6AC <file.include.bb2@957> XINCLUDE "PE/logging.include.bb2"
0000C6F8 <file.include.bb2@958> XINCLUDE "PE/logging.include.bb2"
0000C73A <file.include.bb2@959> XINCLUDE "PE/logging.include.bb2"
0000C744 <file.include.bb2@960> XINCLUDE "PE/logging.include.bb2"
0000C74A <file.include.bb2@961> XINCLUDE "PE/logging.include.bb2"
0000C770 <file.include.bb2@1108> XINCLUDE "PE/logging.include.bb2"
0000C776 <file.include.bb2@1110> XINCLUDE "PE/logging.include.bb2"
0000C79E <file.include.bb2@1111> XINCLUDE "PE/logging.include.bb2"
0000C802 <file.include.bb2@1112> XINCLUDE "PE/logging.include.bb2"
0000C81C <file.include.bb2@1113> XINCLUDE "PE/logging.include.bb2"
0000C826 <file.include.bb2@1114> XINCLUDE "PE/logging.include.bb2"
0000C840 <file.include.bb2@1115> XINCLUDE "PE/logging.include.bb2"
0000C84A <file.include.bb2@1116> XINCLUDE "PE/logging.include.bb2"
0000C862 <file.include.bb2@1117> XINCLUDE "PE/logging.include.bb2"
0000C892 <file.include.bb2@1118> XINCLUDE "PE/logging.include.bb2"
0000C8AE <file.include.bb2@1119> XINCLUDE "PE/logging.include.bb2"
0000C8BE <file.include.bb2@1120> XINCLUDE "PE/logging.include.bb2"
0000C8C2 <file.include.bb2@1123> XINCLUDE "PE/logging.include.bb2"
0000C8F0 <file.include.bb2@1124> XINCLUDE "PE/logging.include.bb2"
0000C8FA <file.include.bb2@1126> XINCLUDE "PE/logging.include.bb2"
0000C900 <file.include.bb2@1127> XINCLUDE "PE/logging.include.bb2"
0000C91E <file.include.bb2@1148> XINCLUDE "PE/logging.include.bb2"
0000C924 <file.include.bb2@1150> XINCLUDE "PE/logging.include.bb2"
0000C93A <file.include.bb2@1151> XINCLUDE "PE/logging.include.bb2"
0000C94A <file.include.bb2@1152> XINCLUDE "PE/logging.include.bb2"
0000C96E <file.include.bb2@1153> XINCLUDE "PE/logging.include.bb2"
0000C9A4 <file.include.bb2@1154> XINCLUDE "PE/logging.include.bb2"
0000C9BA <file.include.bb2@1155> XINCLUDE "PE/logging.include.bb2"
0000CA08 <file.include.bb2@1156> XINCLUDE "PE/logging.include.bb2"
0000CAE6 <file.include.bb2@1157> XINCLUDE "PE/logging.include.bb2"
0000CB04 <file.include.bb2@1158> XINCLUDE "PE/logging.include.bb2"
0000CB2E <file.include.bb2@1160> XINCLUDE "PE/logging.include.bb2"
0000CB4A <file.include.bb2@1161> XINCLUDE "PE/logging.include.bb2"
0000CB78 <file.include.bb2@1162> XINCLUDE "PE/logging.include.bb2"
0000CB82 <file.include.bb2@1163> XINCLUDE "PE/logging.include.bb2"
0000CBAE <file.include.bb2@1164> XINCLUDE "PE/logging.include.bb2"
0000CBC8 <file.include.bb2@1165> XINCLUDE "PE/logging.include.bb2"
0000CBE4 <file.include.bb2@1166> XINCLUDE "PE/logging.include.bb2"
0000CBE8 <file.include.bb2@1167> XINCLUDE "PE/logging.include.bb2"
0000CC16 <file.include.bb2@1168> XINCLUDE "PE/logging.include.bb2"
0000CC1A <file.include.bb2@1170> XINCLUDE "PE/logging.include.bb2"
0000CC20 <file.include.bb2@1171> XINCLUDE "PE/logging.include.bb2"
0000CC24 <file.include.bb2@1173> XINCLUDE "PE/logging.include.bb2"
0000CCB8 <file.include.bb2@1174> XINCLUDE "PE/logging.include.bb2"
0000CCBC <file.include.bb2@1176> XINCLUDE "PE/logging.include.bb2"
0000CD52 <file.include.bb2@1177> XINCLUDE "PE/logging.include.bb2"
0000CD56 <file.include.bb2@1179> XINCLUDE "PE/logging.include.bb2"
0000CD84 <file.include.bb2@1180> XINCLUDE "PE/logging.include.bb2"
0000CD8E <file.include.bb2@1182> XINCLUDE "PE/logging.include.bb2"
0000CD94 <file.include.bb2@1183> XINCLUDE "PE/logging.include.bb2"
0000CDAE <file.include.bb2@1245> XINCLUDE "PE/logging.include.bb2"
0000CDCC <file.include.bb2@1247> XINCLUDE "PE/logging.include.bb2"
0000CDD2 <file.include.bb2@1248> XINCLUDE "PE/logging.include.bb2"
0000CDEC <file.include.bb2@1398> XINCLUDE "PE/logging.include.bb2"
0000CE0A <file.include.bb2@1400> XINCLUDE "PE/logging.include.bb2"
0000CEC8 <file.include.bb2@1401> XINCLUDE "PE/logging.include.bb2"
0000CED0 <file.include.bb2@1402> XINCLUDE "PE/logging.include.bb2"
0000CED4 <file.include.bb2@1403> XINCLUDE "PE/logging.include.bb2"
0000CF04 <file.include.bb2@1404> XINCLUDE "PE/logging.include.bb2"
0000CF10 <file.include.bb2@1406> XINCLUDE "PE/logging.include.bb2"
0000CF16 <file.include.bb2@1407> XINCLUDE "PE/logging.include.bb2"
0000CF30 <file.include.bb2@1593> XINCLUDE "PE/logging.include.bb2"
0000CF3A <file.include.bb2@1594> XINCLUDE "PE/logging.include.bb2"
0000CF44 <file.include.bb2@1595> XINCLUDE "PE/logging.include.bb2"
0000CF5A <file.include.bb2@1596> XINCLUDE "PE/logging.include.bb2"
0000CF70 <file.include.bb2@1597> XINCLUDE "PE/logging.include.bb2"
0000CF80 <file.include.bb2@1598> XINCLUDE "PE/logging.include.bb2"
0000CF8C <file.include.bb2@1599> XINCLUDE "PE/logging.include.bb2"
0000CF90 <file.include.bb2@1600> XINCLUDE "PE/logging.include.bb2"
0000CF9A <file.include.bb2@1601> XINCLUDE "PE/logging.include.bb2"
0000CFDC <file.include.bb2@1602> XINCLUDE "PE/logging.include.bb2"
0000CFF2 <file.include.bb2@1603> XINCLUDE "PE/logging.include.bb2"
0000D016 <file.include.bb2@1604> XINCLUDE "PE/logging.include.bb2"
0000D02C <file.include.bb2@1605> XINCLUDE "PE/logging.include.bb2"
0000D038 <file.include.bb2@1606> XINCLUDE "PE/logging.include.bb2"
0000D03C <file.include.bb2@1607> XINCLUDE "PE/logging.include.bb2"
0000D04C <file.include.bb2@1608> XINCLUDE "PE/logging.include.bb2"
0000D06E <file.include.bb2@1613> XINCLUDE "PE/logging.include.bb2"
0000D084 <file.include.bb2@1616> XINCLUDE "PE/logging.include.bb2"
0000D0D0 <file.include.bb2@1617> XINCLUDE "PE/logging.include.bb2"
0000D0D4 <file.include.bb2@1619> XINCLUDE "PE/logging.include.bb2"
0000D0FE <file.include.bb2@1621> XINCLUDE "PE/logging.include.bb2"
0000D116 <file.include.bb2@1622> XINCLUDE "PE/logging.include.bb2"
0000D144 <file.include.bb2@1706> XINCLUDE "PE/logging.include.bb2"
0000D158 <file.include.bb2@1707> XINCLUDE "PE/logging.include.bb2"
0000D170 <file.include.bb2@1708> XINCLUDE "PE/logging.include.bb2"
0000D192 <file.include.bb2@1709> XINCLUDE "PE/logging.include.bb2"
0000D1AA <file.include.bb2@1710> XINCLUDE "PE/logging.include.bb2"
0000D1B4 <file.include.bb2@1711> XINCLUDE "PE/logging.include.bb2"
0000D1CE <file.include.bb2@1712> XINCLUDE "PE/logging.include.bb2"
0000D1F0 <file.include.bb2@1787> XINCLUDE "PE/logging.include.bb2"
0000D208 <file.include.bb2@1789> XINCLUDE "PE/logging.include.bb2"
0000D22A <file.include.bb2@1790> XINCLUDE "PE/logging.include.bb2"
0000D230 <file.include.bb2@1791> XINCLUDE "PE/logging.include.bb2"
0000D262 <file.include.bb2@1811> XINCLUDE "PE/logging.include.bb2"
0000D276 <file.include.bb2@1813> XINCLUDE "PE/logging.include.bb2"
0000D28E <file.include.bb2@1814> XINCLUDE "PE/logging.include.bb2"
0000D2A6 <file.include.bb2@1815> XINCLUDE "PE/logging.include.bb2"
0000D2C6 <file.include.bb2@1816> XINCLUDE "PE/logging.include.bb2"
0000D2F8 <file.include.bb2@1817> XINCLUDE "PE/logging.include.bb2"
0000D32A <file.include.bb2@1818> XINCLUDE "PE/logging.include.bb2"
0000D340 <file.include.bb2@1819> XINCLUDE "PE/logging.include.bb2"
0000D34A <file.include.bb2@1820> XINCLUDE "PE/logging.include.bb2"
0000D374 <file.include.bb2@1821> XINCLUDE "PE/logging.include.bb2"
0000D37E <file.include.bb2@1823> XINCLUDE "PE/logging.include.bb2"
0000D398 <file.include.bb2@1824> XINCLUDE "PE/logging.include.bb2"
0000D3B2 <file.include.bb2@1841> XINCLUDE "PE/logging.include.bb2"
0000D3D0 <file.include.bb2@1843> XINCLUDE "PE/logging.include.bb2"
0000D3F4 <file.include.bb2@1844> XINCLUDE "PE/logging.include.bb2"
0000D43E <file.include.bb2@1845> XINCLUDE "PE/logging.include.bb2"
0000D458 <file.include.bb2@1846> XINCLUDE "PE/logging.include.bb2"
0000D46A <file.include.bb2@1847> XINCLUDE "PE/logging.include.bb2"
0000D4A2 <file.include.bb2@1848> XINCLUDE "PE/logging.include.bb2"
0000D4B8 <file.include.bb2@1849> XINCLUDE "PE/logging.include.bb2"
0000D4C2 <file.include.bb2@1850> XINCLUDE "PE/logging.include.bb2"
0000D4EA <file.include.bb2@1851> XINCLUDE "PE/logging.include.bb2"
0000D4EE <file.include.bb2@1853> XINCLUDE "PE/logging.include.bb2"
0000D516 <file.include.bb2@1854> XINCLUDE "PE/logging.include.bb2"
0000D526 <file.include.bb2@1856> XINCLUDE "PE/logging.include.bb2"
0000D53A <file.include.bb2@1857> XINCLUDE "PE/logging.include.bb2"
0000D550 <file.include.bb2@1870> XINCLUDE "PE/logging.include.bb2"
0000D560 <file.include.bb2@1872> XINCLUDE "PE/logging.include.bb2"
0000D564 <file.include.bb2@1873> XINCLUDE "PE/logging.include.bb2"
0000D57A <file.include.bb2@1894> XINCLUDE "PE/logging.include.bb2"
0000D5A4 <file.include.bb2@1896> XINCLUDE "PE/logging.include.bb2"
0000D5AC <file.include.bb2@1897> XINCLUDE "PE/logging.include.bb2"
0000D5AC <logging.include.bb2@8> XINCLUDE "PE/logging.include.bb2"
0000D64A <logging.include.bb2@30> XINCLUDE "PE/logging.include.bb2"
0000D652 <logging.include.bb2@31> XINCLUDE "PE/logging.include.bb2"
0000D65A <logging.include.bb2@32> XINCLUDE "PE/logging.include.bb2"
0000D662 <logging.include.bb2@33> XINCLUDE "PE/logging.include.bb2"
0000D69C <logging.include.bb2@124> XINCLUDE "PE/logging.include.bb2"
0000D6CE <logging.include.bb2@126> XINCLUDE "PE/logging.include.bb2"
0000D6E2 <logging.include.bb2@127> XINCLUDE "PE/logging.include.bb2"
0000D714 <logging.include.bb2@128> XINCLUDE "PE/logging.include.bb2"
0000DA96 <logging.include.bb2@129> XINCLUDE "PE/logging.include.bb2"
0000DAA4 <logging.include.bb2@130> XINCLUDE "PE/logging.include.bb2"
0000DAA8 <logging.include.bb2@131> XINCLUDE "PE/logging.include.bb2"
0000DD4A <logging.include.bb2@132> XINCLUDE "PE/logging.include.bb2"
0000DD64 <logging.include.bb2@134> XINCLUDE "PE/logging.include.bb2"
0000DD9E <logging.include.bb2@137> XINCLUDE "PE/logging.include.bb2"
0000DDF0 <logging.include.bb2@138> XINCLUDE "PE/logging.include.bb2"
0000DE04 <logging.include.bb2@139> XINCLUDE "PE/logging.include.bb2"
0000DE5A <logging.include.bb2@140> XINCLUDE "PE/logging.include.bb2"
0000DE5E <logging.include.bb2@141> XINCLUDE "PE/logging.include.bb2"
0000DEDA <logging.include.bb2@142> XINCLUDE "PE/logging.include.bb2"
0000DF4E <logging.include.bb2@143> XINCLUDE "PE/logging.include.bb2"
0000DF68 <logging.include.bb2@145> XINCLUDE "PE/logging.include.bb2"
0000DF68 <AmiBlitz3.ab2@89> XINCLUDE "PE/logging.include.bb2"
0000DF74 <AmiBlitz3.ab2@90> optimize 5                               ; added because the include change the optimize and or syntax level  tomsmart1
0000DF74 <translation.include.bb2@1> XINCLUDE "translation.include.bb2"
0000DF74 <phrasebook.include.bb2@1> XINCLUDE "translation.include.bb2"
0000DF74 <prefixtree.include.bb2@1> XINCLUDE "translation.include.bb2"
0000DF74 <dynamicarray.include.bb2@1> XINCLUDE "translation.include.bb2"
0000DF9C <dynamicarray.include.bb2@42> XINCLUDE "translation.include.bb2"
0000DFB6 <dynamicarray.include.bb2@55> XINCLUDE "translation.include.bb2"
0000DFC0 <dynamicarray.include.bb2@56> XINCLUDE "translation.include.bb2"
0000DFD2 <dynamicarray.include.bb2@57> XINCLUDE "translation.include.bb2"
0000DFF6 <dynamicarray.include.bb2@58> XINCLUDE "translation.include.bb2"
0000E004 <dynamicarray.include.bb2@60> XINCLUDE "translation.include.bb2"
0000E010 <dynamicarray.include.bb2@61> XINCLUDE "translation.include.bb2"
0000E014 <dynamicarray.include.bb2@63> XINCLUDE "translation.include.bb2"
0000E032 <dynamicarray.include.bb2@99> XINCLUDE "translation.include.bb2"
0000E04C <dynamicarray.include.bb2@101> XINCLUDE "translation.include.bb2"
0000E06C <dynamicarray.include.bb2@102> XINCLUDE "translation.include.bb2"
0000E076 <dynamicarray.include.bb2@103> XINCLUDE "translation.include.bb2"
0000E084 <dynamicarray.include.bb2@104> XINCLUDE "translation.include.bb2"
0000E090 <dynamicarray.include.bb2@105> XINCLUDE "translation.include.bb2"
0000E09E <dynamicarray.include.bb2@106> XINCLUDE "translation.include.bb2"
0000E0AA <dynamicarray.include.bb2@107> XINCLUDE "translation.include.bb2"
0000E0B6 <dynamicarray.include.bb2@108> XINCLUDE "translation.include.bb2"
0000E0C8 <dynamicarray.include.bb2@109> XINCLUDE "translation.include.bb2"
0000E0D8 <dynamicarray.include.bb2@110> XINCLUDE "translation.include.bb2"
0000E0E2 <dynamicarray.include.bb2@113> XINCLUDE "translation.include.bb2"
0000E0E8 <dynamicarray.include.bb2@114> XINCLUDE "translation.include.bb2"
0000E102 <dynamicarray.include.bb2@425> XINCLUDE "translation.include.bb2"
0000E10C <dynamicarray.include.bb2@427> XINCLUDE "translation.include.bb2"
0000E116 <dynamicarray.include.bb2@428> XINCLUDE "translation.include.bb2"
0000E126 <dynamicarray.include.bb2@429> XINCLUDE "translation.include.bb2"
0000E130 <dynamicarray.include.bb2@430> XINCLUDE "translation.include.bb2"
0000E142 <dynamicarray.include.bb2@431> XINCLUDE "translation.include.bb2"
0000E158 <dynamicarray.include.bb2@432> XINCLUDE "translation.include.bb2"
0000E162 <dynamicarray.include.bb2@433> XINCLUDE "translation.include.bb2"
0000E168 <dynamicarray.include.bb2@435> XINCLUDE "translation.include.bb2"
0000E16C <dynamicarray.include.bb2@437> XINCLUDE "translation.include.bb2"
0000E182 <dynamicarray.include.bb2@531> XINCLUDE "translation.include.bb2"
0000E188 <dynamicarray.include.bb2@533> XINCLUDE "translation.include.bb2"
0000E192 <dynamicarray.include.bb2@535> XINCLUDE "translation.include.bb2"
0000E1C8 <dynamicarray.include.bb2@536> XINCLUDE "translation.include.bb2"
0000E1D2 <dynamicarray.include.bb2@537> XINCLUDE "translation.include.bb2"
0000E1D6 <dynamicarray.include.bb2@538> XINCLUDE "translation.include.bb2"
0000E204 <dynamicarray.include.bb2@539> XINCLUDE "translation.include.bb2"
0000E204 <prefixtree.include.bb2@35> XINCLUDE "translation.include.bb2"
0000E21E <prefixtree.include.bb2@100> XINCLUDE "translation.include.bb2"
0000E228 <prefixtree.include.bb2@101> XINCLUDE "translation.include.bb2"
0000E250 <prefixtree.include.bb2@102> XINCLUDE "translation.include.bb2"
0000E272 <prefixtree.include.bb2@103> XINCLUDE "translation.include.bb2"
0000E28E <prefixtree.include.bb2@104> XINCLUDE "translation.include.bb2"
0000E29E <prefixtree.include.bb2@105> XINCLUDE "translation.include.bb2"
0000E2A2 <prefixtree.include.bb2@107> XINCLUDE "translation.include.bb2"
0000E2BC <prefixtree.include.bb2@123> XINCLUDE "translation.include.bb2"
0000E2DC <prefixtree.include.bb2@124> XINCLUDE "translation.include.bb2"
0000E2E6 <prefixtree.include.bb2@125> XINCLUDE "translation.include.bb2"
0000E300 <prefixtree.include.bb2@126> XINCLUDE "translation.include.bb2"
0000E30E <prefixtree.include.bb2@127> XINCLUDE "translation.include.bb2"
0000E31C <prefixtree.include.bb2@128> XINCLUDE "translation.include.bb2"
0000E32A <prefixtree.include.bb2@129> XINCLUDE "translation.include.bb2"
0000E338 <prefixtree.include.bb2@130> XINCLUDE "translation.include.bb2"
0000E344 <prefixtree.include.bb2@131> XINCLUDE "translation.include.bb2"
0000E352 <prefixtree.include.bb2@132> XINCLUDE "translation.include.bb2"
0000E360 <prefixtree.include.bb2@133> XINCLUDE "translation.include.bb2"
0000E36E <prefixtree.include.bb2@134> XINCLUDE "translation.include.bb2"
0000E37C <prefixtree.include.bb2@135> XINCLUDE "translation.include.bb2"
0000E396 <prefixtree.include.bb2@136> XINCLUDE "translation.include.bb2"
0000E3A4 <prefixtree.include.bb2@137> XINCLUDE "translation.include.bb2"
0000E3B4 <prefixtree.include.bb2@138> XINCLUDE "translation.include.bb2"
0000E3C4 <prefixtree.include.bb2@139> XINCLUDE "translation.include.bb2"
0000E3D4 <prefixtree.include.bb2@140> XINCLUDE "translation.include.bb2"
0000E3E2 <prefixtree.include.bb2@141> XINCLUDE "translation.include.bb2"
0000E3EC <prefixtree.include.bb2@143> XINCLUDE "translation.include.bb2"
0000E3F2 <prefixtree.include.bb2@144> XINCLUDE "translation.include.bb2"
0000E410 <prefixtree.include.bb2@162> XINCLUDE "translation.include.bb2"
0000E416 <prefixtree.include.bb2@163> XINCLUDE "translation.include.bb2"
0000E420 <prefixtree.include.bb2@164> XINCLUDE "translation.include.bb2"
0000E440 <prefixtree.include.bb2@165> XINCLUDE "translation.include.bb2"
0000E46E <prefixtree.include.bb2@166> XINCLUDE "translation.include.bb2"
0000E48C <prefixtree.include.bb2@167> XINCLUDE "translation.include.bb2"
0000E496 <prefixtree.include.bb2@168> XINCLUDE "translation.include.bb2"
0000E4A8 <prefixtree.include.bb2@169> XINCLUDE "translation.include.bb2"
0000E4D4 <prefixtree.include.bb2@170> XINCLUDE "translation.include.bb2"
0000E4EA <prefixtree.include.bb2@171> XINCLUDE "translation.include.bb2"
0000E4F6 <prefixtree.include.bb2@173> XINCLUDE "translation.include.bb2"
0000E502 <prefixtree.include.bb2@174> XINCLUDE "translation.include.bb2"
0000E508 <prefixtree.include.bb2@175> XINCLUDE "translation.include.bb2"
0000E50E <prefixtree.include.bb2@176> XINCLUDE "translation.include.bb2"
0000E514 <prefixtree.include.bb2@177> XINCLUDE "translation.include.bb2"
0000E51A <prefixtree.include.bb2@179> XINCLUDE "translation.include.bb2"
0000E520 <prefixtree.include.bb2@180> XINCLUDE "translation.include.bb2"
0000E52A <prefixtree.include.bb2@183> XINCLUDE "translation.include.bb2"
0000E530 <prefixtree.include.bb2@184> XINCLUDE "translation.include.bb2"
0000E562 <prefixtree.include.bb2@204> XINCLUDE "translation.include.bb2"
0000E57C <prefixtree.include.bb2@205> XINCLUDE "translation.include.bb2"
0000E594 <prefixtree.include.bb2@206> XINCLUDE "translation.include.bb2"
0000E5A8 <prefixtree.include.bb2@207> XINCLUDE "translation.include.bb2"
0000E5F8 <prefixtree.include.bb2@208> XINCLUDE "translation.include.bb2"
0000E618 <prefixtree.include.bb2@210> XINCLUDE "translation.include.bb2"
0000E62C <prefixtree.include.bb2@211> XINCLUDE "translation.include.bb2"
0000E63A <prefixtree.include.bb2@212> XINCLUDE "translation.include.bb2"
0000E646 <prefixtree.include.bb2@213> XINCLUDE "translation.include.bb2"
0000E64E <prefixtree.include.bb2@214> XINCLUDE "translation.include.bb2"
0000E656 <prefixtree.include.bb2@215> XINCLUDE "translation.include.bb2"
0000E65E <prefixtree.include.bb2@216> XINCLUDE "translation.include.bb2"
0000E666 <prefixtree.include.bb2@217> XINCLUDE "translation.include.bb2"
0000E66C <prefixtree.include.bb2@218> XINCLUDE "translation.include.bb2"
0000E67A <prefixtree.include.bb2@219> XINCLUDE "translation.include.bb2"
0000E69C <prefixtree.include.bb2@221> XINCLUDE "translation.include.bb2"
0000E6C8 <prefixtree.include.bb2@222> XINCLUDE "translation.include.bb2"
0000E6DA <prefixtree.include.bb2@224> XINCLUDE "translation.include.bb2"
0000E6E0 <prefixtree.include.bb2@225> XINCLUDE "translation.include.bb2"
0000E708 <prefixtree.include.bb2@227> XINCLUDE "translation.include.bb2"
0000E72C <prefixtree.include.bb2@228> XINCLUDE "translation.include.bb2"
0000E754 <prefixtree.include.bb2@229> XINCLUDE "translation.include.bb2"
0000E788 <prefixtree.include.bb2@230> XINCLUDE "translation.include.bb2"
0000E798 <prefixtree.include.bb2@231> XINCLUDE "translation.include.bb2"
0000E7A2 <prefixtree.include.bb2@232> XINCLUDE "translation.include.bb2"
0000E7B0 <prefixtree.include.bb2@233> XINCLUDE "translation.include.bb2"
0000E7C4 <prefixtree.include.bb2@234> XINCLUDE "translation.include.bb2"
0000E7CA <prefixtree.include.bb2@235> XINCLUDE "translation.include.bb2"
0000E7EA <prefixtree.include.bb2@236> XINCLUDE "translation.include.bb2"
0000E7F0 <prefixtree.include.bb2@237> XINCLUDE "translation.include.bb2"
0000E7F8 <prefixtree.include.bb2@239> XINCLUDE "translation.include.bb2"
0000E832 <prefixtree.include.bb2@241> XINCLUDE "translation.include.bb2"
0000E858 <prefixtree.include.bb2@242> XINCLUDE "translation.include.bb2"
0000E870 <prefixtree.include.bb2@243> XINCLUDE "translation.include.bb2"
0000E8A4 <prefixtree.include.bb2@244> XINCLUDE "translation.include.bb2"
0000E8AC <prefixtree.include.bb2@245> XINCLUDE "translation.include.bb2"
0000E8BA <prefixtree.include.bb2@247> XINCLUDE "translation.include.bb2"
0000E8C0 <prefixtree.include.bb2@249> XINCLUDE "translation.include.bb2"
0000E8D8 <prefixtree.include.bb2@250> XINCLUDE "translation.include.bb2"
0000E8DE <prefixtree.include.bb2@251> XINCLUDE "translation.include.bb2"
0000E8E4 <prefixtree.include.bb2@252> XINCLUDE "translation.include.bb2"
0000E8FE <prefixtree.include.bb2@253> XINCLUDE "translation.include.bb2"
0000E904 <prefixtree.include.bb2@256> XINCLUDE "translation.include.bb2"
0000E90A <prefixtree.include.bb2@258> XINCLUDE "translation.include.bb2"
0000E910 <prefixtree.include.bb2@260> XINCLUDE "translation.include.bb2"
0000E91E <prefixtree.include.bb2@261> XINCLUDE "translation.include.bb2"
0000E92C <prefixtree.include.bb2@262> XINCLUDE "translation.include.bb2"
0000E966 <prefixtree.include.bb2@264> XINCLUDE "translation.include.bb2"
0000E98C <prefixtree.include.bb2@265> XINCLUDE "translation.include.bb2"
0000E9A4 <prefixtree.include.bb2@266> XINCLUDE "translation.include.bb2"
0000E9B0 <prefixtree.include.bb2@269> XINCLUDE "translation.include.bb2"
0000E9BC <prefixtree.include.bb2@270> XINCLUDE "translation.include.bb2"
0000E9C8 <prefixtree.include.bb2@271> XINCLUDE "translation.include.bb2"
0000E9D4 <prefixtree.include.bb2@272> XINCLUDE "translation.include.bb2"
0000E9E0 <prefixtree.include.bb2@273> XINCLUDE "translation.include.bb2"
0000E9EA <prefixtree.include.bb2@274> XINCLUDE "translation.include.bb2"
0000E9F2 <prefixtree.include.bb2@276> XINCLUDE "translation.include.bb2"
0000EA0C <prefixtree.include.bb2@277> XINCLUDE "translation.include.bb2"
0000EA4A <prefixtree.include.bb2@324> XINCLUDE "translation.include.bb2"
0000EA50 <prefixtree.include.bb2@325> XINCLUDE "translation.include.bb2"
0000EA90 <prefixtree.include.bb2@326> XINCLUDE "translation.include.bb2"
0000EAE6 <prefixtree.include.bb2@327> XINCLUDE "translation.include.bb2"
0000EB58 <prefixtree.include.bb2@328> XINCLUDE "translation.include.bb2"
0000EB64 <prefixtree.include.bb2@330> XINCLUDE "translation.include.bb2"
0000EB72 <prefixtree.include.bb2@331> XINCLUDE "translation.include.bb2"
0000EBB8 <prefixtree.include.bb2@332> XINCLUDE "translation.include.bb2"
0000EC02 <prefixtree.include.bb2@333> XINCLUDE "translation.include.bb2"
0000EC3A <prefixtree.include.bb2@334> XINCLUDE "translation.include.bb2"
0000EC8E <prefixtree.include.bb2@335> XINCLUDE "translation.include.bb2"
0000EC94 <prefixtree.include.bb2@336> XINCLUDE "translation.include.bb2"
0000EC9A <prefixtree.include.bb2@337> XINCLUDE "translation.include.bb2"
0000ECA8 <prefixtree.include.bb2@339> XINCLUDE "translation.include.bb2"
0000ECB0 <prefixtree.include.bb2@340> XINCLUDE "translation.include.bb2"
0000ECEA <prefixtree.include.bb2@342> XINCLUDE "translation.include.bb2"
0000ED10 <prefixtree.include.bb2@343> XINCLUDE "translation.include.bb2"
0000ED28 <prefixtree.include.bb2@344> XINCLUDE "translation.include.bb2"
0000ED5E <prefixtree.include.bb2@345> XINCLUDE "translation.include.bb2"
0000ED74 <prefixtree.include.bb2@346> XINCLUDE "translation.include.bb2"
0000ED82 <prefixtree.include.bb2@348> XINCLUDE "translation.include.bb2"
0000ED9A <prefixtree.include.bb2@349> XINCLUDE "translation.include.bb2"
0000EDD2 <prefixtree.include.bb2@350> XINCLUDE "translation.include.bb2"
0000EDF8 <prefixtree.include.bb2@351> XINCLUDE "translation.include.bb2"
0000EE40 <prefixtree.include.bb2@352> XINCLUDE "translation.include.bb2"
0000EE46 <prefixtree.include.bb2@353> XINCLUDE "translation.include.bb2"
0000EE60 <prefixtree.include.bb2@355> XINCLUDE "translation.include.bb2"
0000EE6C <prefixtree.include.bb2@356> XINCLUDE "translation.include.bb2"
0000EE72 <prefixtree.include.bb2@357> XINCLUDE "translation.include.bb2"
0000EE9E <prefixtree.include.bb2@358> XINCLUDE "translation.include.bb2"
0000EEB2 <prefixtree.include.bb2@363> XINCLUDE "translation.include.bb2"
0000EEC0 <prefixtree.include.bb2@365> XINCLUDE "translation.include.bb2"
0000EEC8 <prefixtree.include.bb2@366> XINCLUDE "translation.include.bb2"
0000EF02 <prefixtree.include.bb2@368> XINCLUDE "translation.include.bb2"
0000EF28 <prefixtree.include.bb2@369> XINCLUDE "translation.include.bb2"
0000EF40 <prefixtree.include.bb2@370> XINCLUDE "translation.include.bb2"
0000EF7A <prefixtree.include.bb2@371> XINCLUDE "translation.include.bb2"
0000EFA4 <prefixtree.include.bb2@372> XINCLUDE "translation.include.bb2"
0000EFBC <prefixtree.include.bb2@373> XINCLUDE "translation.include.bb2"
0000EFEC <prefixtree.include.bb2@374> XINCLUDE "translation.include.bb2"
0000F018 <prefixtree.include.bb2@375> XINCLUDE "translation.include.bb2"
0000F034 <prefixtree.include.bb2@376> XINCLUDE "translation.include.bb2"
0000F042 <prefixtree.include.bb2@378> XINCLUDE "translation.include.bb2"
0000F050 <prefixtree.include.bb2@379> XINCLUDE "translation.include.bb2"
0000F08E <prefixtree.include.bb2@380> XINCLUDE "translation.include.bb2"
0000F0CA <prefixtree.include.bb2@381> XINCLUDE "translation.include.bb2"
0000F136 <prefixtree.include.bb2@382> XINCLUDE "translation.include.bb2"
0000F164 <prefixtree.include.bb2@383> XINCLUDE "translation.include.bb2"
0000F192 <prefixtree.include.bb2@384> XINCLUDE "translation.include.bb2"
0000F1DA <prefixtree.include.bb2@385> XINCLUDE "translation.include.bb2"
0000F1F4 <prefixtree.include.bb2@388> XINCLUDE "translation.include.bb2"
0000F23C <prefixtree.include.bb2@389> XINCLUDE "translation.include.bb2"
0000F25A <prefixtree.include.bb2@390> XINCLUDE "translation.include.bb2"
0000F278 <prefixtree.include.bb2@391> XINCLUDE "translation.include.bb2"
0000F292 <prefixtree.include.bb2@394> XINCLUDE "translation.include.bb2"
0000F29E <prefixtree.include.bb2@395> XINCLUDE "translation.include.bb2"
0000F2A4 <prefixtree.include.bb2@396> XINCLUDE "translation.include.bb2"
0000F2D0 <prefixtree.include.bb2@397> XINCLUDE "translation.include.bb2"
0000F2E8 <prefixtree.include.bb2@399> XINCLUDE "translation.include.bb2"
0000F2EE <prefixtree.include.bb2@400> XINCLUDE "translation.include.bb2"
0000F302 <prefixtree.include.bb2@403> XINCLUDE "translation.include.bb2"
0000F310 <prefixtree.include.bb2@405> XINCLUDE "translation.include.bb2"
0000F31E <prefixtree.include.bb2@406> XINCLUDE "translation.include.bb2"
0000F32C <prefixtree.include.bb2@407> XINCLUDE "translation.include.bb2"
0000F334 <prefixtree.include.bb2@408> XINCLUDE "translation.include.bb2"
0000F358 <prefixtree.include.bb2@409> XINCLUDE "translation.include.bb2"
0000F380 <prefixtree.include.bb2@410> XINCLUDE "translation.include.bb2"
0000F3A8 <prefixtree.include.bb2@411> XINCLUDE "translation.include.bb2"
0000F414 <prefixtree.include.bb2@412> XINCLUDE "translation.include.bb2"
0000F424 <prefixtree.include.bb2@413> XINCLUDE "translation.include.bb2"
0000F450 <prefixtree.include.bb2@414> XINCLUDE "translation.include.bb2"
0000F4A6 <prefixtree.include.bb2@416> XINCLUDE "translation.include.bb2"
0000F4B4 <prefixtree.include.bb2@417> XINCLUDE "translation.include.bb2"
0000F4C2 <prefixtree.include.bb2@418> XINCLUDE "translation.include.bb2"
0000F4C8 <prefixtree.include.bb2@419> XINCLUDE "translation.include.bb2"
0000F510 <prefixtree.include.bb2@421> XINCLUDE "translation.include.bb2"
0000F554 <prefixtree.include.bb2@422> XINCLUDE "translation.include.bb2"
0000F5A4 <prefixtree.include.bb2@425> XINCLUDE "translation.include.bb2"
0000F5FA <prefixtree.include.bb2@426> XINCLUDE "translation.include.bb2"
0000F666 <prefixtree.include.bb2@427> XINCLUDE "translation.include.bb2"
0000F66E <prefixtree.include.bb2@431> XINCLUDE "translation.include.bb2"
0000F6A8 <prefixtree.include.bb2@433> XINCLUDE "translation.include.bb2"
0000F6CE <prefixtree.include.bb2@434> XINCLUDE "translation.include.bb2"
0000F6E6 <prefixtree.include.bb2@435> XINCLUDE "translation.include.bb2"
0000F720 <prefixtree.include.bb2@436> XINCLUDE "translation.include.bb2"
0000F74A <prefixtree.include.bb2@437> XINCLUDE "translation.include.bb2"
0000F762 <prefixtree.include.bb2@438> XINCLUDE "translation.include.bb2"
0000F786 <prefixtree.include.bb2@440> XINCLUDE "translation.include.bb2"
0000F7DA <prefixtree.include.bb2@441> XINCLUDE "translation.include.bb2"
0000F7E2 <prefixtree.include.bb2@442> XINCLUDE "translation.include.bb2"
0000F7E8 <prefixtree.include.bb2@443> XINCLUDE "translation.include.bb2"
0000F84A <prefixtree.include.bb2@444> XINCLUDE "translation.include.bb2"
0000F876 <prefixtree.include.bb2@445> XINCLUDE "translation.include.bb2"
0000F892 <prefixtree.include.bb2@448> XINCLUDE "translation.include.bb2"
0000F8A0 <prefixtree.include.bb2@450> XINCLUDE "translation.include.bb2"
0000F8AE <prefixtree.include.bb2@451> XINCLUDE "translation.include.bb2"
0000F8BC <prefixtree.include.bb2@453> XINCLUDE "translation.include.bb2"
0000F8CA <prefixtree.include.bb2@454> XINCLUDE "translation.include.bb2"
0000F90E <prefixtree.include.bb2@455> XINCLUDE "translation.include.bb2"
0000F97A <prefixtree.include.bb2@456> XINCLUDE "translation.include.bb2"
0000F9A8 <prefixtree.include.bb2@457> XINCLUDE "translation.include.bb2"
0000F9BC <prefixtree.include.bb2@458> XINCLUDE "translation.include.bb2"
0000F9EE <prefixtree.include.bb2@459> XINCLUDE "translation.include.bb2"
0000FA38 <prefixtree.include.bb2@460> XINCLUDE "translation.include.bb2"
0000FA48 <prefixtree.include.bb2@461> XINCLUDE "translation.include.bb2"
0000FA7C <prefixtree.include.bb2@462> XINCLUDE "translation.include.bb2"
0000FA9E <prefixtree.include.bb2@463> XINCLUDE "translation.include.bb2"
0000FAAE <prefixtree.include.bb2@464> XINCLUDE "translation.include.bb2"
0000FAB6 <prefixtree.include.bb2@467> XINCLUDE "translation.include.bb2"
0000FAFA <prefixtree.include.bb2@468> XINCLUDE "translation.include.bb2"
0000FB66 <prefixtree.include.bb2@469> XINCLUDE "translation.include.bb2"
0000FB94 <prefixtree.include.bb2@470> XINCLUDE "translation.include.bb2"
0000FBB8 <prefixtree.include.bb2@472> XINCLUDE "translation.include.bb2"
0000FBFC <prefixtree.include.bb2@473> XINCLUDE "translation.include.bb2"
0000FC68 <prefixtree.include.bb2@474> XINCLUDE "translation.include.bb2"
0000FC96 <prefixtree.include.bb2@475> XINCLUDE "translation.include.bb2"
0000FCC4 <prefixtree.include.bb2@476> XINCLUDE "translation.include.bb2"
0000FCCC <prefixtree.include.bb2@477> XINCLUDE "translation.include.bb2"
0000FCFA <prefixtree.include.bb2@478> XINCLUDE "translation.include.bb2"
0000FD6C <prefixtree.include.bb2@479> XINCLUDE "translation.include.bb2"
0000FD72 <prefixtree.include.bb2@480> XINCLUDE "translation.include.bb2"
0000FDA0 <prefixtree.include.bb2@481> XINCLUDE "translation.include.bb2"
0000FE12 <prefixtree.include.bb2@482> XINCLUDE "translation.include.bb2"
0000FE30 <prefixtree.include.bb2@485> XINCLUDE "translation.include.bb2"
0000FE54 <prefixtree.include.bb2@486> XINCLUDE "translation.include.bb2"
0000FE6C <prefixtree.include.bb2@487> XINCLUDE "translation.include.bb2"
0000FE72 <prefixtree.include.bb2@488> XINCLUDE "translation.include.bb2"
0000FE78 <prefixtree.include.bb2@491> XINCLUDE "translation.include.bb2"
0000FE7A <prefixtree.include.bb2@493> XINCLUDE "translation.include.bb2"
0000FE84 <prefixtree.include.bb2@496> XINCLUDE "translation.include.bb2"
0000FEB0 <prefixtree.include.bb2@497> XINCLUDE "translation.include.bb2"
0000FED2 <prefixtree.include.bb2@515> XINCLUDE "translation.include.bb2"
0000FEDA <prefixtree.include.bb2@516> XINCLUDE "translation.include.bb2"
0000FEE0 <prefixtree.include.bb2@517> XINCLUDE "translation.include.bb2"
0000FEEE <prefixtree.include.bb2@518> XINCLUDE "translation.include.bb2"
0000FF28 <prefixtree.include.bb2@520> XINCLUDE "translation.include.bb2"
0000FF4E <prefixtree.include.bb2@521> XINCLUDE "translation.include.bb2"
0000FF66 <prefixtree.include.bb2@522> XINCLUDE "translation.include.bb2"
0000FFA0 <prefixtree.include.bb2@523> XINCLUDE "translation.include.bb2"
0000FFCA <prefixtree.include.bb2@524> XINCLUDE "translation.include.bb2"
0000FFE2 <prefixtree.include.bb2@526> XINCLUDE "translation.include.bb2"
0000FFFA <prefixtree.include.bb2@527> XINCLUDE "translation.include.bb2"
00010032 <prefixtree.include.bb2@528> XINCLUDE "translation.include.bb2"
0001003A <prefixtree.include.bb2@530> XINCLUDE "translation.include.bb2"
00010074 <prefixtree.include.bb2@532> XINCLUDE "translation.include.bb2"
00010086 <prefixtree.include.bb2@534> XINCLUDE "translation.include.bb2"
000100AC <prefixtree.include.bb2@535> XINCLUDE "translation.include.bb2"
000100C2 <prefixtree.include.bb2@536> XINCLUDE "translation.include.bb2"
000100E8 <prefixtree.include.bb2@537> XINCLUDE "translation.include.bb2"
000100FC <prefixtree.include.bb2@538> XINCLUDE "translation.include.bb2"
00010114 <prefixtree.include.bb2@540> XINCLUDE "translation.include.bb2"
00010126 <prefixtree.include.bb2@541> XINCLUDE "translation.include.bb2"
00010130 <prefixtree.include.bb2@542> XINCLUDE "translation.include.bb2"
00010144 <prefixtree.include.bb2@543> XINCLUDE "translation.include.bb2"
0001015E <prefixtree.include.bb2@560> XINCLUDE "translation.include.bb2"
0001017C <prefixtree.include.bb2@561> XINCLUDE "translation.include.bb2"
0001018E <prefixtree.include.bb2@562> XINCLUDE "translation.include.bb2"
000101AC <prefixtree.include.bb2@563> XINCLUDE "translation.include.bb2"
000101CE <prefixtree.include.bb2@564> XINCLUDE "translation.include.bb2"
000101EA <prefixtree.include.bb2@565> XINCLUDE "translation.include.bb2"
0001020A <prefixtree.include.bb2@566> XINCLUDE "translation.include.bb2"
00010214 <prefixtree.include.bb2@567> XINCLUDE "translation.include.bb2"
0001021A <prefixtree.include.bb2@568> XINCLUDE "translation.include.bb2"
00010224 <prefixtree.include.bb2@569> XINCLUDE "translation.include.bb2"
00010230 <prefixtree.include.bb2@571> XINCLUDE "translation.include.bb2"
00010236 <prefixtree.include.bb2@572> XINCLUDE "translation.include.bb2"
00010264 <prefixtree.include.bb2@591> XINCLUDE "translation.include.bb2"
0001028C <prefixtree.include.bb2@592> XINCLUDE "translation.include.bb2"
000102CC <prefixtree.include.bb2@593> XINCLUDE "translation.include.bb2"
000102E4 <prefixtree.include.bb2@594> XINCLUDE "translation.include.bb2"
0001032A <prefixtree.include.bb2@595> XINCLUDE "translation.include.bb2"
00010354 <prefixtree.include.bb2@598> XINCLUDE "translation.include.bb2"
00010382 <prefixtree.include.bb2@599> XINCLUDE "translation.include.bb2"
0001039C <prefixtree.include.bb2@815> XINCLUDE "translation.include.bb2"
000103A4 <prefixtree.include.bb2@816> XINCLUDE "translation.include.bb2"
000103BC <prefixtree.include.bb2@817> XINCLUDE "translation.include.bb2"
000103C6 <prefixtree.include.bb2@818> XINCLUDE "translation.include.bb2"
000103D8 <prefixtree.include.bb2@819> XINCLUDE "translation.include.bb2"
00010410 <prefixtree.include.bb2@820> XINCLUDE "translation.include.bb2"
0001041E <prefixtree.include.bb2@821> XINCLUDE "translation.include.bb2"
0001042A <prefixtree.include.bb2@822> XINCLUDE "translation.include.bb2"
00010446 <prefixtree.include.bb2@823> XINCLUDE "translation.include.bb2"
00010468 <prefixtree.include.bb2@824> XINCLUDE "translation.include.bb2"
0001048A <prefixtree.include.bb2@825> XINCLUDE "translation.include.bb2"
000104AC <prefixtree.include.bb2@826> XINCLUDE "translation.include.bb2"
000104CE <prefixtree.include.bb2@827> XINCLUDE "translation.include.bb2"
000104EA <prefixtree.include.bb2@828> XINCLUDE "translation.include.bb2"
00010508 <prefixtree.include.bb2@829> XINCLUDE "translation.include.bb2"
0001051C <prefixtree.include.bb2@830> XINCLUDE "translation.include.bb2"
00010522 <prefixtree.include.bb2@832> XINCLUDE "translation.include.bb2"
00010524 <prefixtree.include.bb2@834> XINCLUDE "translation.include.bb2"
0001052A <prefixtree.include.bb2@835> XINCLUDE "translation.include.bb2"
00010534 <prefixtree.include.bb2@837> XINCLUDE "translation.include.bb2"
0001053A <prefixtree.include.bb2@838> XINCLUDE "translation.include.bb2"
00010558 <prefixtree.include.bb2@856> XINCLUDE "translation.include.bb2"
0001055E <prefixtree.include.bb2@857> XINCLUDE "translation.include.bb2"
00010582 <prefixtree.include.bb2@858> XINCLUDE "translation.include.bb2"
000105A0 <prefixtree.include.bb2@859> XINCLUDE "translation.include.bb2"
000105CE <prefixtree.include.bb2@860> XINCLUDE "translation.include.bb2"
000105FC <prefixtree.include.bb2@861> XINCLUDE "translation.include.bb2"
0001062A <prefixtree.include.bb2@862> XINCLUDE "translation.include.bb2"
00010658 <prefixtree.include.bb2@863> XINCLUDE "translation.include.bb2"
0001068C <prefixtree.include.bb2@864> XINCLUDE "translation.include.bb2"
0001069C <prefixtree.include.bb2@865> XINCLUDE "translation.include.bb2"
000106A6 <prefixtree.include.bb2@867> XINCLUDE "translation.include.bb2"
000106AC <prefixtree.include.bb2@868> XINCLUDE "translation.include.bb2"
000106AC <phrasebook.include.bb2@34> XINCLUDE "translation.include.bb2"
000106F6 <phrasebook.include.bb2@58> XINCLUDE "translation.include.bb2"
00010716 <phrasebook.include.bb2@59> XINCLUDE "translation.include.bb2"
00010720 <phrasebook.include.bb2@60> XINCLUDE "translation.include.bb2"
00010734 <phrasebook.include.bb2@61> XINCLUDE "translation.include.bb2"
0001077A <phrasebook.include.bb2@62> XINCLUDE "translation.include.bb2"
000107C0 <phrasebook.include.bb2@63> XINCLUDE "translation.include.bb2"
00010806 <phrasebook.include.bb2@64> XINCLUDE "translation.include.bb2"
00010810 <phrasebook.include.bb2@66> XINCLUDE "translation.include.bb2"
0001082C <phrasebook.include.bb2@67> XINCLUDE "translation.include.bb2"
00010856 <phrasebook.include.bb2@70> XINCLUDE "translation.include.bb2"
000108D4 <phrasebook.include.bb2@71> XINCLUDE "translation.include.bb2"
00010952 <phrasebook.include.bb2@72> XINCLUDE "translation.include.bb2"
000109D0 <phrasebook.include.bb2@73> XINCLUDE "translation.include.bb2"
00010A4E <phrasebook.include.bb2@74> XINCLUDE "translation.include.bb2"
00010ACC <phrasebook.include.bb2@75> XINCLUDE "translation.include.bb2"
00010B4A <phrasebook.include.bb2@76> XINCLUDE "translation.include.bb2"
00010BC8 <phrasebook.include.bb2@77> XINCLUDE "translation.include.bb2"
00010C46 <phrasebook.include.bb2@78> XINCLUDE "translation.include.bb2"
00010CC4 <phrasebook.include.bb2@79> XINCLUDE "translation.include.bb2"
00010D42 <phrasebook.include.bb2@80> XINCLUDE "translation.include.bb2"
00010DC6 <phrasebook.include.bb2@81> XINCLUDE "translation.include.bb2"
00010DF6 <phrasebook.include.bb2@82> XINCLUDE "translation.include.bb2"
00010E52 <phrasebook.include.bb2@84> XINCLUDE "translation.include.bb2"
00010E7E <phrasebook.include.bb2@85> XINCLUDE "translation.include.bb2"
00010F48 <phrasebook.include.bb2@86> XINCLUDE "translation.include.bb2"
00010F56 <phrasebook.include.bb2@88> XINCLUDE "translation.include.bb2"
00010F94 <phrasebook.include.bb2@89> XINCLUDE "translation.include.bb2"
00011018 <phrasebook.include.bb2@90> XINCLUDE "translation.include.bb2"
00011042 <phrasebook.include.bb2@91> XINCLUDE "translation.include.bb2"
00011060 <phrasebook.include.bb2@92> XINCLUDE "translation.include.bb2"
0001107A <phrasebook.include.bb2@106> XINCLUDE "translation.include.bb2"
00011084 <phrasebook.include.bb2@107> XINCLUDE "translation.include.bb2"
00011090 <phrasebook.include.bb2@108> XINCLUDE "translation.include.bb2"
000110A0 <phrasebook.include.bb2@109> XINCLUDE "translation.include.bb2"
000110B0 <phrasebook.include.bb2@110> XINCLUDE "translation.include.bb2"
000110C0 <phrasebook.include.bb2@111> XINCLUDE "translation.include.bb2"
000110D0 <phrasebook.include.bb2@112> XINCLUDE "translation.include.bb2"
000110D4 <phrasebook.include.bb2@114> XINCLUDE "translation.include.bb2"
00011112 <phrasebook.include.bb2@131> XINCLUDE "translation.include.bb2"
0001116A <phrasebook.include.bb2@132> XINCLUDE "translation.include.bb2"
000111C6 <phrasebook.include.bb2@133> XINCLUDE "translation.include.bb2"
00011250 <phrasebook.include.bb2@134> XINCLUDE "translation.include.bb2"
000112CE <phrasebook.include.bb2@135> XINCLUDE "translation.include.bb2"
000112E8 <phrasebook.include.bb2@137> XINCLUDE "translation.include.bb2"
00011316 <phrasebook.include.bb2@155> XINCLUDE "translation.include.bb2"
00011352 <phrasebook.include.bb2@156> XINCLUDE "translation.include.bb2"
00011420 <phrasebook.include.bb2@158> XINCLUDE "translation.include.bb2"
000114EE <phrasebook.include.bb2@159> XINCLUDE "translation.include.bb2"
0001153A <phrasebook.include.bb2@161> XINCLUDE "translation.include.bb2"
000115B8 <phrasebook.include.bb2@162> XINCLUDE "translation.include.bb2"
00011636 <phrasebook.include.bb2@163> XINCLUDE "translation.include.bb2"
00011694 <phrasebook.include.bb2@165> XINCLUDE "translation.include.bb2"
0001172A <phrasebook.include.bb2@166> XINCLUDE "translation.include.bb2"
00011762 <phrasebook.include.bb2@168> XINCLUDE "translation.include.bb2"
000117C0 <phrasebook.include.bb2@169> XINCLUDE "translation.include.bb2"
00011848 <phrasebook.include.bb2@170> XINCLUDE "translation.include.bb2"
00011850 <phrasebook.include.bb2@172> XINCLUDE "translation.include.bb2"
000118BA <phrasebook.include.bb2@174> XINCLUDE "translation.include.bb2"
00011926 <phrasebook.include.bb2@175> XINCLUDE "translation.include.bb2"
00011964 <phrasebook.include.bb2@176> XINCLUDE "translation.include.bb2"
000119EC <phrasebook.include.bb2@177> XINCLUDE "translation.include.bb2"
00011A18 <phrasebook.include.bb2@187> XINCLUDE "translation.include.bb2"
00011A74 <phrasebook.include.bb2@188> XINCLUDE "translation.include.bb2"
00011B3C <phrasebook.include.bb2@189> XINCLUDE "translation.include.bb2"
00011BA0 <phrasebook.include.bb2@190> XINCLUDE "translation.include.bb2"
00011BA6 <phrasebook.include.bb2@191> XINCLUDE "translation.include.bb2"
00011BDA <phrasebook.include.bb2@192> XINCLUDE "translation.include.bb2"
00011CA8 <phrasebook.include.bb2@196> XINCLUDE "translation.include.bb2"
00011D76 <phrasebook.include.bb2@197> XINCLUDE "translation.include.bb2"
00011DA0 <phrasebook.include.bb2@199> XINCLUDE "translation.include.bb2"
00011DBE <phrasebook.include.bb2@200> XINCLUDE "translation.include.bb2"
00011DEC <phrasebook.include.bb2@204> XINCLUDE "translation.include.bb2"
00011E28 <phrasebook.include.bb2@205> XINCLUDE "translation.include.bb2"
00011E98 <phrasebook.include.bb2@206> XINCLUDE "translation.include.bb2"
00011EA0 <phrasebook.include.bb2@207> XINCLUDE "translation.include.bb2"
00011EF2 <phrasebook.include.bb2@208> XINCLUDE "translation.include.bb2"
00011F1A <phrasebook.include.bb2@209> XINCLUDE "translation.include.bb2"
00011F32 <phrasebook.include.bb2@210> XINCLUDE "translation.include.bb2"
00011FE6 <phrasebook.include.bb2@211> XINCLUDE "translation.include.bb2"
00011FF4 <phrasebook.include.bb2@212> XINCLUDE "translation.include.bb2"
0001204A <phrasebook.include.bb2@213> XINCLUDE "translation.include.bb2"
000120A8 <phrasebook.include.bb2@214> XINCLUDE "translation.include.bb2"
000120AE <phrasebook.include.bb2@215> XINCLUDE "translation.include.bb2"
00012132 <phrasebook.include.bb2@216> XINCLUDE "translation.include.bb2"
000121B6 <phrasebook.include.bb2@217> XINCLUDE "translation.include.bb2"
0001223A <phrasebook.include.bb2@218> XINCLUDE "translation.include.bb2"
000122B8 <phrasebook.include.bb2@219> XINCLUDE "translation.include.bb2"
00012336 <phrasebook.include.bb2@220> XINCLUDE "translation.include.bb2"
000123B4 <phrasebook.include.bb2@221> XINCLUDE "translation.include.bb2"
00012432 <phrasebook.include.bb2@222> XINCLUDE "translation.include.bb2"
000124B0 <phrasebook.include.bb2@223> XINCLUDE "translation.include.bb2"
0001252E <phrasebook.include.bb2@224> XINCLUDE "translation.include.bb2"
000125AC <phrasebook.include.bb2@225> XINCLUDE "translation.include.bb2"
000125D6 <phrasebook.include.bb2@226> XINCLUDE "translation.include.bb2"
000125F4 <phrasebook.include.bb2@227> XINCLUDE "translation.include.bb2"
00012622 <phrasebook.include.bb2@245> XINCLUDE "translation.include.bb2"
00012666 <phrasebook.include.bb2@246> XINCLUDE "translation.include.bb2"
0001266C <phrasebook.include.bb2@247> XINCLUDE "translation.include.bb2"
00012686 <phrasebook.include.bb2@248> XINCLUDE "translation.include.bb2"
000126A2 <phrasebook.include.bb2@249> XINCLUDE "translation.include.bb2"
000126D6 <phrasebook.include.bb2@250> XINCLUDE "translation.include.bb2"
000126FA <phrasebook.include.bb2@251> XINCLUDE "translation.include.bb2"
00012722 <phrasebook.include.bb2@252> XINCLUDE "translation.include.bb2"
0001278E <phrasebook.include.bb2@253> XINCLUDE "translation.include.bb2"
000127EC <phrasebook.include.bb2@256> XINCLUDE "translation.include.bb2"
0001284A <phrasebook.include.bb2@257> XINCLUDE "translation.include.bb2"
00012896 <phrasebook.include.bb2@258> XINCLUDE "translation.include.bb2"
000128F0 <phrasebook.include.bb2@259> XINCLUDE "translation.include.bb2"
000128F6 <phrasebook.include.bb2@260> XINCLUDE "translation.include.bb2"
000128FC <phrasebook.include.bb2@262> XINCLUDE "translation.include.bb2"
00012906 <phrasebook.include.bb2@263> XINCLUDE "translation.include.bb2"
00012910 <phrasebook.include.bb2@264> XINCLUDE "translation.include.bb2"
0001292A <phrasebook.include.bb2@265> XINCLUDE "translation.include.bb2"
00012958 <phrasebook.include.bb2@282> XINCLUDE "translation.include.bb2"
0001295E <phrasebook.include.bb2@283> XINCLUDE "translation.include.bb2"
000129A2 <phrasebook.include.bb2@284> XINCLUDE "translation.include.bb2"
000129BC <phrasebook.include.bb2@285> XINCLUDE "translation.include.bb2"
000129CC <phrasebook.include.bb2@286> XINCLUDE "translation.include.bb2"
000129D6 <phrasebook.include.bb2@287> XINCLUDE "translation.include.bb2"
000129E2 <phrasebook.include.bb2@288> XINCLUDE "translation.include.bb2"
000129EC <phrasebook.include.bb2@289> XINCLUDE "translation.include.bb2"
00012A10 <phrasebook.include.bb2@292> XINCLUDE "translation.include.bb2"
00012A58 <phrasebook.include.bb2@293> XINCLUDE "translation.include.bb2"
00012AA0 <phrasebook.include.bb2@294> XINCLUDE "translation.include.bb2"
00012AE8 <phrasebook.include.bb2@295> XINCLUDE "translation.include.bb2"
00012AFE <phrasebook.include.bb2@296> XINCLUDE "translation.include.bb2"
00012B12 <phrasebook.include.bb2@297> XINCLUDE "translation.include.bb2"
00012B1C <phrasebook.include.bb2@299> XINCLUDE "translation.include.bb2"
00012B26 <phrasebook.include.bb2@300> XINCLUDE "translation.include.bb2"
00012B40 <phrasebook.include.bb2@301> XINCLUDE "translation.include.bb2"
00012B6A <phrasebook.include.bb2@317> XINCLUDE "translation.include.bb2"
00012BAE <phrasebook.include.bb2@318> XINCLUDE "translation.include.bb2"
00012BC8 <phrasebook.include.bb2@319> XINCLUDE "translation.include.bb2"
00012C26 <phrasebook.include.bb2@320> XINCLUDE "translation.include.bb2"
00012C40 <phrasebook.include.bb2@321> XINCLUDE "translation.include.bb2"
00012C58 <phrasebook.include.bb2@323> XINCLUDE "translation.include.bb2"
00012C62 <phrasebook.include.bb2@324> XINCLUDE "translation.include.bb2"
00012C7E <phrasebook.include.bb2@325> XINCLUDE "translation.include.bb2"
00012C8C <phrasebook.include.bb2@326> XINCLUDE "translation.include.bb2"
00012C98 <phrasebook.include.bb2@327> XINCLUDE "translation.include.bb2"
00012CE4 <phrasebook.include.bb2@328> XINCLUDE "translation.include.bb2"
00012D36 <phrasebook.include.bb2@329> XINCLUDE "translation.include.bb2"
00012D88 <phrasebook.include.bb2@330> XINCLUDE "translation.include.bb2"
00012D9C <phrasebook.include.bb2@331> XINCLUDE "translation.include.bb2"
00012DAC <phrasebook.include.bb2@332> XINCLUDE "translation.include.bb2"
00012DB2 <phrasebook.include.bb2@333> XINCLUDE "translation.include.bb2"
00012DB4 <phrasebook.include.bb2@335> XINCLUDE "translation.include.bb2"
00012DBA <phrasebook.include.bb2@336> XINCLUDE "translation.include.bb2"
00012DC4 <phrasebook.include.bb2@338> XINCLUDE "translation.include.bb2"
00012DCE <phrasebook.include.bb2@339> XINCLUDE "translation.include.bb2"
00012DE8 <phrasebook.include.bb2@340> XINCLUDE "translation.include.bb2"
00012E12 <phrasebook.include.bb2@379> XINCLUDE "translation.include.bb2"
00012E28 <phrasebook.include.bb2@380> XINCLUDE "translation.include.bb2"
00012E32 <phrasebook.include.bb2@381> XINCLUDE "translation.include.bb2"
00012EAA <phrasebook.include.bb2@382> XINCLUDE "translation.include.bb2"
00012EE6 <phrasebook.include.bb2@383> XINCLUDE "translation.include.bb2"
00012EF6 <phrasebook.include.bb2@384> XINCLUDE "translation.include.bb2"
00012F16 <phrasebook.include.bb2@385> XINCLUDE "translation.include.bb2"
00012F36 <phrasebook.include.bb2@386> XINCLUDE "translation.include.bb2"
00012F56 <phrasebook.include.bb2@387> XINCLUDE "translation.include.bb2"
00012F8C <phrasebook.include.bb2@388> XINCLUDE "translation.include.bb2"
00012FB4 <phrasebook.include.bb2@389> XINCLUDE "translation.include.bb2"
00012FEC <phrasebook.include.bb2@390> XINCLUDE "translation.include.bb2"
00013050 <phrasebook.include.bb2@391> XINCLUDE "translation.include.bb2"
00013070 <phrasebook.include.bb2@392> XINCLUDE "translation.include.bb2"
000130EC <phrasebook.include.bb2@393> XINCLUDE "translation.include.bb2"
00013124 <phrasebook.include.bb2@396> XINCLUDE "translation.include.bb2"
0001319A <phrasebook.include.bb2@397> XINCLUDE "translation.include.bb2"
000131BA <phrasebook.include.bb2@398> XINCLUDE "translation.include.bb2"
00013236 <phrasebook.include.bb2@399> XINCLUDE "translation.include.bb2"
0001326E <phrasebook.include.bb2@402> XINCLUDE "translation.include.bb2"
000132E4 <phrasebook.include.bb2@403> XINCLUDE "translation.include.bb2"
00013304 <phrasebook.include.bb2@404> XINCLUDE "translation.include.bb2"
00013380 <phrasebook.include.bb2@405> XINCLUDE "translation.include.bb2"
000133AC <phrasebook.include.bb2@408> XINCLUDE "translation.include.bb2"
000133B4 <phrasebook.include.bb2@409> XINCLUDE "translation.include.bb2"
000133FA <phrasebook.include.bb2@410> XINCLUDE "translation.include.bb2"
0001341A <phrasebook.include.bb2@411> XINCLUDE "translation.include.bb2"
00013424 <phrasebook.include.bb2@412> XINCLUDE "translation.include.bb2"
0001343C <phrasebook.include.bb2@413> XINCLUDE "translation.include.bb2"
0001344C <phrasebook.include.bb2@414> XINCLUDE "translation.include.bb2"
00013484 <phrasebook.include.bb2@415> XINCLUDE "translation.include.bb2"
000134B6 <phrasebook.include.bb2@416> XINCLUDE "translation.include.bb2"
000134C8 <phrasebook.include.bb2@419> XINCLUDE "translation.include.bb2"
0001354A <phrasebook.include.bb2@420> XINCLUDE "translation.include.bb2"
00013554 <phrasebook.include.bb2@421> XINCLUDE "translation.include.bb2"
00013586 <phrasebook.include.bb2@422> XINCLUDE "translation.include.bb2"
000135B8 <phrasebook.include.bb2@423> XINCLUDE "translation.include.bb2"
000135E4 <phrasebook.include.bb2@428> XINCLUDE "translation.include.bb2"
00013610 <phrasebook.include.bb2@429> XINCLUDE "translation.include.bb2"
00013632 <phrasebook.include.bb2@430> XINCLUDE "translation.include.bb2"
0001363C <phrasebook.include.bb2@432> XINCLUDE "translation.include.bb2"
00013656 <phrasebook.include.bb2@433> XINCLUDE "translation.include.bb2"
00013656 <translation.include.bb2@31> XINCLUDE "translation.include.bb2"
0001366C <translation.include.bb2@43> XINCLUDE "translation.include.bb2"
00013688 <translation.include.bb2@44> XINCLUDE "translation.include.bb2"
0001368A <translation.include.bb2@45> XINCLUDE "translation.include.bb2"
000136B8 <translation.include.bb2@46> XINCLUDE "translation.include.bb2"
000136B8 <AmiBlitz3.ab2@93> XINCLUDE "translation.include.bb2"
000136B8 <ted.include.ab3@1> XINCLUDE "/Shared/ted.include.ab3"
000136D2 <ted.include.ab3@161> XINCLUDE "/Shared/ted.include.ab3"
000136DC <ted.include.ab3@162> XINCLUDE "/Shared/ted.include.ab3"
000136FE <ted.include.ab3@163> XINCLUDE "/Shared/ted.include.ab3"
00013716 <ted.include.ab3@164> XINCLUDE "/Shared/ted.include.ab3"
00013730 <ted.include.ab3@166> XINCLUDE "/Shared/ted.include.ab3"
00013762 <ted.include.ab3@167> XINCLUDE "/Shared/ted.include.ab3"
0001376C <ted.include.ab3@168> XINCLUDE "/Shared/ted.include.ab3"
00013772 <ted.include.ab3@170> XINCLUDE "/Shared/ted.include.ab3"
00013784 <ted.include.ab3@171> XINCLUDE "/Shared/ted.include.ab3"
000137EC <ted.include.ab3@172> XINCLUDE "/Shared/ted.include.ab3"
000137F2 <ted.include.ab3@173> XINCLUDE "/Shared/ted.include.ab3"
00013820 <ted.include.ab3@174> XINCLUDE "/Shared/ted.include.ab3"
0001382A <ted.include.ab3@177> XINCLUDE "/Shared/ted.include.ab3"
00013830 <ted.include.ab3@178> XINCLUDE "/Shared/ted.include.ab3"
00013846 <ted.include.ab3@180> XINCLUDE "/Shared/ted.include.ab3"
00013850 <ted.include.ab3@181> XINCLUDE "/Shared/ted.include.ab3"
00013868 <ted.include.ab3@183> XINCLUDE "/Shared/ted.include.ab3"
0001386A <ted.include.ab3@185> XINCLUDE "/Shared/ted.include.ab3"
00013898 <ted.include.ab3@186> XINCLUDE "/Shared/ted.include.ab3"
000138B2 <ted.include.ab3@190> XINCLUDE "/Shared/ted.include.ab3"
000138C8 <ted.include.ab3@191> XINCLUDE "/Shared/ted.include.ab3"
000138FC <ted.include.ab3@192> XINCLUDE "/Shared/ted.include.ab3"
00013900 <ted.include.ab3@194> XINCLUDE "/Shared/ted.include.ab3"
0001391A <ted.include.ab3@196> XINCLUDE "/Shared/ted.include.ab3"
00013930 <ted.include.ab3@197> XINCLUDE "/Shared/ted.include.ab3"
00013964 <ted.include.ab3@198> XINCLUDE "/Shared/ted.include.ab3"
00013968 <ted.include.ab3@200> XINCLUDE "/Shared/ted.include.ab3"
00013982 <ted.include.ab3@216> XINCLUDE "/Shared/ted.include.ab3"
00013998 <ted.include.ab3@217> XINCLUDE "/Shared/ted.include.ab3"
000139CC <ted.include.ab3@218> XINCLUDE "/Shared/ted.include.ab3"
000139D0 <ted.include.ab3@220> XINCLUDE "/Shared/ted.include.ab3"
000139EA <ted.include.ab3@236> XINCLUDE "/Shared/ted.include.ab3"
00013A00 <ted.include.ab3@237> XINCLUDE "/Shared/ted.include.ab3"
00013A34 <ted.include.ab3@238> XINCLUDE "/Shared/ted.include.ab3"
00013A38 <ted.include.ab3@240> XINCLUDE "/Shared/ted.include.ab3"
00013A52 <ted.include.ab3@242> XINCLUDE "/Shared/ted.include.ab3"
00013A68 <ted.include.ab3@243> XINCLUDE "/Shared/ted.include.ab3"
00013A9C <ted.include.ab3@244> XINCLUDE "/Shared/ted.include.ab3"
00013AA0 <ted.include.ab3@246> XINCLUDE "/Shared/ted.include.ab3"
00013AA0 <AmiBlitz3.ab2@94> XINCLUDE "/Shared/ted.include.ab3"
00013AA0 <CLIModeSupport.ab3@1> XINCLUDE "CLIModeSupport.ab3"
00013AB6 <CLIModeSupport.ab3@4> XINCLUDE "CLIModeSupport.ab3"
00013ACC <CLIModeSupport.ab3@7> XINCLUDE "CLIModeSupport.ab3"
00013ADA <CLIModeSupport.ab3@8> XINCLUDE "CLIModeSupport.ab3"
00013AE8 <CLIModeSupport.ab3@9> XINCLUDE "CLIModeSupport.ab3"
00013AF2 <CLIModeSupport.ab3@11> XINCLUDE "CLIModeSupport.ab3"
00013B04 <CLIModeSupport.ab3@12> XINCLUDE "CLIModeSupport.ab3"
00013B16 <CLIModeSupport.ab3@13> XINCLUDE "CLIModeSupport.ab3"
00013B1C <CLIModeSupport.ab3@14> XINCLUDE "CLIModeSupport.ab3"
00013B4A <CLIModeSupport.ab3@15> XINCLUDE "CLIModeSupport.ab3"
00013B4E <CLIModeSupport.ab3@18> XINCLUDE "CLIModeSupport.ab3"
00013B64 <CLIModeSupport.ab3@21> XINCLUDE "CLIModeSupport.ab3"
00013B7A <CLIModeSupport.ab3@23> XINCLUDE "CLIModeSupport.ab3"
00013B86 <CLIModeSupport.ab3@24> XINCLUDE "CLIModeSupport.ab3"
00013B92 <CLIModeSupport.ab3@25> XINCLUDE "CLIModeSupport.ab3"
00013B9A <CLIModeSupport.ab3@26> XINCLUDE "CLIModeSupport.ab3"
00013BA2 <CLIModeSupport.ab3@27> XINCLUDE "CLIModeSupport.ab3"
00013BA6 <CLIModeSupport.ab3@28> XINCLUDE "CLIModeSupport.ab3"
00013BD0 <CLIModeSupport.ab3@47> XINCLUDE "CLIModeSupport.ab3"
00013BFC <CLIModeSupport.ab3@49> XINCLUDE "CLIModeSupport.ab3"
00013C0E <CLIModeSupport.ab3@50> XINCLUDE "CLIModeSupport.ab3"
00013C26 <CLIModeSupport.ab3@52> XINCLUDE "CLIModeSupport.ab3"
00013C3C <CLIModeSupport.ab3@56> XINCLUDE "CLIModeSupport.ab3"
00013C42 <CLIModeSupport.ab3@58> XINCLUDE "CLIModeSupport.ab3"
00013C78 <CLIModeSupport.ab3@61> XINCLUDE "CLIModeSupport.ab3"
00013CB0 <CLIModeSupport.ab3@62> XINCLUDE "CLIModeSupport.ab3"
00013CE8 <CLIModeSupport.ab3@63> XINCLUDE "CLIModeSupport.ab3"
00013D20 <CLIModeSupport.ab3@64> XINCLUDE "CLIModeSupport.ab3"
00013D58 <CLIModeSupport.ab3@65> XINCLUDE "CLIModeSupport.ab3"
00013D90 <CLIModeSupport.ab3@66> XINCLUDE "CLIModeSupport.ab3"
00013DC8 <CLIModeSupport.ab3@67> XINCLUDE "CLIModeSupport.ab3"
00013E00 <CLIModeSupport.ab3@68> XINCLUDE "CLIModeSupport.ab3"
00013E38 <CLIModeSupport.ab3@69> XINCLUDE "CLIModeSupport.ab3"
00013E70 <CLIModeSupport.ab3@70> XINCLUDE "CLIModeSupport.ab3"
00013EA8 <CLIModeSupport.ab3@71> XINCLUDE "CLIModeSupport.ab3"
00013EE0 <CLIModeSupport.ab3@72> XINCLUDE "CLIModeSupport.ab3"
00013F18 <CLIModeSupport.ab3@73> XINCLUDE "CLIModeSupport.ab3"
00013F22 <CLIModeSupport.ab3@74> XINCLUDE "CLIModeSupport.ab3"
00013F2C <CLIModeSupport.ab3@76> XINCLUDE "CLIModeSupport.ab3"
00013F36 <CLIModeSupport.ab3@77> XINCLUDE "CLIModeSupport.ab3"
00013F60 <CLIModeSupport.ab3@81> XINCLUDE "CLIModeSupport.ab3"
00013F6A <CLIModeSupport.ab3@82> XINCLUDE "CLIModeSupport.ab3"
00013F6E <CLIModeSupport.ab3@83> XINCLUDE "CLIModeSupport.ab3"
00013FA2 <CLIModeSupport.ab3@84> XINCLUDE "CLIModeSupport.ab3"
00013FA8 <CLIModeSupport.ab3@85> XINCLUDE "CLIModeSupport.ab3"
00013FD6 <CLIModeSupport.ab3@86> XINCLUDE "CLIModeSupport.ab3"
00013FDC <CLIModeSupport.ab3@87> XINCLUDE "CLIModeSupport.ab3"
00013FF2 <CLIModeSupport.ab3@90> XINCLUDE "CLIModeSupport.ab3"
00013FFC <CLIModeSupport.ab3@92> XINCLUDE "CLIModeSupport.ab3"
00014002 <CLIModeSupport.ab3@93> XINCLUDE "CLIModeSupport.ab3"
00014018 <CLIModeSupport.ab3@97> XINCLUDE "CLIModeSupport.ab3"
0001401E <CLIModeSupport.ab3@98> XINCLUDE "CLIModeSupport.ab3"
0001405C <CLIModeSupport.ab3@100> XINCLUDE "CLIModeSupport.ab3"
00014060 <CLIModeSupport.ab3@101> XINCLUDE "CLIModeSupport.ab3"
0001406A <CLIModeSupport.ab3@102> XINCLUDE "CLIModeSupport.ab3"
0001406C <CLIModeSupport.ab3@103> XINCLUDE "CLIModeSupport.ab3"
000140A0 <CLIModeSupport.ab3@104> XINCLUDE "CLIModeSupport.ab3"
000140B0 <CLIModeSupport.ab3@105> XINCLUDE "CLIModeSupport.ab3"
000140BA <CLIModeSupport.ab3@108> XINCLUDE "CLIModeSupport.ab3"
000140C0 <CLIModeSupport.ab3@109> XINCLUDE "CLIModeSupport.ab3"
000140D6 <CLIModeSupport.ab3@113> XINCLUDE "CLIModeSupport.ab3"
00014114 <CLIModeSupport.ab3@114> XINCLUDE "CLIModeSupport.ab3"
00014118 <CLIModeSupport.ab3@115> XINCLUDE "CLIModeSupport.ab3"
00014120 <CLIModeSupport.ab3@116> XINCLUDE "CLIModeSupport.ab3"
0001415E <CLIModeSupport.ab3@117> XINCLUDE "CLIModeSupport.ab3"
00014160 <CLIModeSupport.ab3@118> XINCLUDE "CLIModeSupport.ab3"
00014164 <CLIModeSupport.ab3@119> XINCLUDE "CLIModeSupport.ab3"
000141A2 <CLIModeSupport.ab3@121> XINCLUDE "CLIModeSupport.ab3"
000141A6 <CLIModeSupport.ab3@122> XINCLUDE "CLIModeSupport.ab3"
000141E4 <CLIModeSupport.ab3@124> XINCLUDE "CLIModeSupport.ab3"
000141E8 <CLIModeSupport.ab3@125> XINCLUDE "CLIModeSupport.ab3"
00014212 <CLIModeSupport.ab3@127> XINCLUDE "CLIModeSupport.ab3"
0001421C <CLIModeSupport.ab3@128> XINCLUDE "CLIModeSupport.ab3"
00014230 <CLIModeSupport.ab3@129> XINCLUDE "CLIModeSupport.ab3"
00014256 <CLIModeSupport.ab3@130> XINCLUDE "CLIModeSupport.ab3"
0001425C <CLIModeSupport.ab3@131> XINCLUDE "CLIModeSupport.ab3"
0001426A <CLIModeSupport.ab3@132> XINCLUDE "CLIModeSupport.ab3"
00014270 <CLIModeSupport.ab3@133> XINCLUDE "CLIModeSupport.ab3"
000142A8 <CLIModeSupport.ab3@135> XINCLUDE "CLIModeSupport.ab3"
000142AC <CLIModeSupport.ab3@138> XINCLUDE "CLIModeSupport.ab3"
000142D6 <CLIModeSupport.ab3@141> XINCLUDE "CLIModeSupport.ab3"
000142DC <CLIModeSupport.ab3@142> XINCLUDE "CLIModeSupport.ab3"
000142FC <CLIModeSupport.ab3@143> XINCLUDE "CLIModeSupport.ab3"
00014306 <CLIModeSupport.ab3@144> XINCLUDE "CLIModeSupport.ab3"
0001430A <CLIModeSupport.ab3@145> XINCLUDE "CLIModeSupport.ab3"
0001430C <CLIModeSupport.ab3@146> XINCLUDE "CLIModeSupport.ab3"
0001432A <CLIModeSupport.ab3@147> XINCLUDE "CLIModeSupport.ab3"
0001432C <CLIModeSupport.ab3@148> XINCLUDE "CLIModeSupport.ab3"
00014332 <CLIModeSupport.ab3@149> XINCLUDE "CLIModeSupport.ab3"
00014338 <CLIModeSupport.ab3@150> XINCLUDE "CLIModeSupport.ab3"
00014362 <CLIModeSupport.ab3@152> XINCLUDE "CLIModeSupport.ab3"
00014364 <CLIModeSupport.ab3@153> XINCLUDE "CLIModeSupport.ab3"
00014392 <CLIModeSupport.ab3@154> XINCLUDE "CLIModeSupport.ab3"
00014396 <CLIModeSupport.ab3@155> XINCLUDE "CLIModeSupport.ab3"
000143C4 <CLIModeSupport.ab3@156> XINCLUDE "CLIModeSupport.ab3"
000143C8 <CLIModeSupport.ab3@157> XINCLUDE "CLIModeSupport.ab3"
000143EE <CLIModeSupport.ab3@159> XINCLUDE "CLIModeSupport.ab3"
000143FE <CLIModeSupport.ab3@160> XINCLUDE "CLIModeSupport.ab3"
00014404 <CLIModeSupport.ab3@161> XINCLUDE "CLIModeSupport.ab3"
0001440A <CLIModeSupport.ab3@162> XINCLUDE "CLIModeSupport.ab3"
00014438 <CLIModeSupport.ab3@163> XINCLUDE "CLIModeSupport.ab3"
00014442 <CLIModeSupport.ab3@165> XINCLUDE "CLIModeSupport.ab3"
0001445C <CLIModeSupport.ab3@166> XINCLUDE "CLIModeSupport.ab3"
0001447A <CLIModeSupport.ab3@178> XINCLUDE "CLIModeSupport.ab3"
00014482 <CLIModeSupport.ab3@179> XINCLUDE "CLIModeSupport.ab3"
00014488 <CLIModeSupport.ab3@180> XINCLUDE "CLIModeSupport.ab3"
0001448E <CLIModeSupport.ab3@181> XINCLUDE "CLIModeSupport.ab3"
000144B0 <CLIModeSupport.ab3@182> XINCLUDE "CLIModeSupport.ab3"
000144C8 <CLIModeSupport.ab3@184> XINCLUDE "CLIModeSupport.ab3"
000144EE <CLIModeSupport.ab3@185> XINCLUDE "CLIModeSupport.ab3"
00014518 <CLIModeSupport.ab3@186> XINCLUDE "CLIModeSupport.ab3"
00014526 <CLIModeSupport.ab3@187> XINCLUDE "CLIModeSupport.ab3"
0001452C <CLIModeSupport.ab3@188> XINCLUDE "CLIModeSupport.ab3"
00014540 <CLIModeSupport.ab3@189> XINCLUDE "CLIModeSupport.ab3"
00014558 <CLIModeSupport.ab3@191> XINCLUDE "CLIModeSupport.ab3"
00014566 <CLIModeSupport.ab3@192> XINCLUDE "CLIModeSupport.ab3"
0001457A <CLIModeSupport.ab3@193> XINCLUDE "CLIModeSupport.ab3"
000145B0 <CLIModeSupport.ab3@194> XINCLUDE "CLIModeSupport.ab3"
000145BE <CLIModeSupport.ab3@195> XINCLUDE "CLIModeSupport.ab3"
000145EE <CLIModeSupport.ab3@196> XINCLUDE "CLIModeSupport.ab3"
000145FC <CLIModeSupport.ab3@197> XINCLUDE "CLIModeSupport.ab3"
00014602 <CLIModeSupport.ab3@198> XINCLUDE "CLIModeSupport.ab3"
00014610 <CLIModeSupport.ab3@199> XINCLUDE "CLIModeSupport.ab3"
00014616 <CLIModeSupport.ab3@200> XINCLUDE "CLIModeSupport.ab3"
0001461C <CLIModeSupport.ab3@202> XINCLUDE "CLIModeSupport.ab3"
0001462A <CLIModeSupport.ab3@203> XINCLUDE "CLIModeSupport.ab3"
0001462C <CLIModeSupport.ab3@204> XINCLUDE "CLIModeSupport.ab3"
00014632 <CLIModeSupport.ab3@206> XINCLUDE "CLIModeSupport.ab3"
00014648 <CLIModeSupport.ab3@208> XINCLUDE "CLIModeSupport.ab3"
00014652 <CLIModeSupport.ab3@209> XINCLUDE "CLIModeSupport.ab3"
00014658 <CLIModeSupport.ab3@210> XINCLUDE "CLIModeSupport.ab3"
00014682 <CLIModeSupport.ab3@214> XINCLUDE "CLIModeSupport.ab3"
000146C0 <CLIModeSupport.ab3@215> XINCLUDE "CLIModeSupport.ab3"
000146C4 <CLIModeSupport.ab3@216> XINCLUDE "CLIModeSupport.ab3"
00014702 <CLIModeSupport.ab3@217> XINCLUDE "CLIModeSupport.ab3"
00014706 <CLIModeSupport.ab3@218> XINCLUDE "CLIModeSupport.ab3"
00014744 <CLIModeSupport.ab3@219> XINCLUDE "CLIModeSupport.ab3"
00014748 <CLIModeSupport.ab3@220> XINCLUDE "CLIModeSupport.ab3"
00014750 <CLIModeSupport.ab3@222> XINCLUDE "CLIModeSupport.ab3"
00014758 <CLIModeSupport.ab3@223> XINCLUDE "CLIModeSupport.ab3"
0001479C <CLIModeSupport.ab3@225> XINCLUDE "CLIModeSupport.ab3"
000147AE <CLIModeSupport.ab3@226> XINCLUDE "CLIModeSupport.ab3"
000147BC <CLIModeSupport.ab3@227> XINCLUDE "CLIModeSupport.ab3"
000147F0 <CLIModeSupport.ab3@228> XINCLUDE "CLIModeSupport.ab3"
00014814 <CLIModeSupport.ab3@230> XINCLUDE "CLIModeSupport.ab3"
0001481E <CLIModeSupport.ab3@231> XINCLUDE "CLIModeSupport.ab3"
00014838 <CLIModeSupport.ab3@232> XINCLUDE "CLIModeSupport.ab3"
0001484C <CLIModeSupport.ab3@233> XINCLUDE "CLIModeSupport.ab3"
000148A4 <CLIModeSupport.ab3@234> XINCLUDE "CLIModeSupport.ab3"
00014944 <CLIModeSupport.ab3@235> XINCLUDE "CLIModeSupport.ab3"
0001494C <CLIModeSupport.ab3@236> XINCLUDE "CLIModeSupport.ab3"
00014984 <CLIModeSupport.ab3@237> XINCLUDE "CLIModeSupport.ab3"
0001498A <CLIModeSupport.ab3@238> XINCLUDE "CLIModeSupport.ab3"
0001499A <CLIModeSupport.ab3@239> XINCLUDE "CLIModeSupport.ab3"
000149C2 <CLIModeSupport.ab3@242> XINCLUDE "CLIModeSupport.ab3"
000149EA <CLIModeSupport.ab3@243> XINCLUDE "CLIModeSupport.ab3"
000149F2 <CLIModeSupport.ab3@244> XINCLUDE "CLIModeSupport.ab3"
000149F8 <CLIModeSupport.ab3@245> XINCLUDE "CLIModeSupport.ab3"
00014A00 <CLIModeSupport.ab3@246> XINCLUDE "CLIModeSupport.ab3"
00014A28 <CLIModeSupport.ab3@247> XINCLUDE "CLIModeSupport.ab3"
00014A30 <CLIModeSupport.ab3@248> XINCLUDE "CLIModeSupport.ab3"
00014A38 <CLIModeSupport.ab3@249> XINCLUDE "CLIModeSupport.ab3"
00014A3E <CLIModeSupport.ab3@250> XINCLUDE "CLIModeSupport.ab3"
00014A44 <CLIModeSupport.ab3@251> XINCLUDE "CLIModeSupport.ab3"
00014A4A <CLIModeSupport.ab3@252> XINCLUDE "CLIModeSupport.ab3"
00014A50 <CLIModeSupport.ab3@253> XINCLUDE "CLIModeSupport.ab3"
00014A56 <CLIModeSupport.ab3@254> XINCLUDE "CLIModeSupport.ab3"
00014A5C <CLIModeSupport.ab3@255> XINCLUDE "CLIModeSupport.ab3"
00014A62 <CLIModeSupport.ab3@256> XINCLUDE "CLIModeSupport.ab3"
00014A68 <CLIModeSupport.ab3@257> XINCLUDE "CLIModeSupport.ab3"
00014A70 <CLIModeSupport.ab3@258> XINCLUDE "CLIModeSupport.ab3"
00014A78 <CLIModeSupport.ab3@259> XINCLUDE "CLIModeSupport.ab3"
00014AA0 <CLIModeSupport.ab3@260> XINCLUDE "CLIModeSupport.ab3"
00014AA6 <CLIModeSupport.ab3@261> XINCLUDE "CLIModeSupport.ab3"
00014AAC <CLIModeSupport.ab3@262> XINCLUDE "CLIModeSupport.ab3"
00014AB4 <CLIModeSupport.ab3@263> XINCLUDE "CLIModeSupport.ab3"
00014AD4 <CLIModeSupport.ab3@267> XINCLUDE "CLIModeSupport.ab3"
00014AE4 <CLIModeSupport.ab3@269> XINCLUDE "CLIModeSupport.ab3"
00014AF4 <CLIModeSupport.ab3@270> XINCLUDE "CLIModeSupport.ab3"
00014B04 <CLIModeSupport.ab3@272> XINCLUDE "CLIModeSupport.ab3"
00014B14 <CLIModeSupport.ab3@273> XINCLUDE "CLIModeSupport.ab3"
00014B24 <CLIModeSupport.ab3@274> XINCLUDE "CLIModeSupport.ab3"
00014B34 <CLIModeSupport.ab3@275> XINCLUDE "CLIModeSupport.ab3"
00014B44 <CLIModeSupport.ab3@276> XINCLUDE "CLIModeSupport.ab3"
00014B54 <CLIModeSupport.ab3@277> XINCLUDE "CLIModeSupport.ab3"
00014B64 <CLIModeSupport.ab3@278> XINCLUDE "CLIModeSupport.ab3"
00014B74 <CLIModeSupport.ab3@279> XINCLUDE "CLIModeSupport.ab3"
00014B84 <CLIModeSupport.ab3@280> XINCLUDE "CLIModeSupport.ab3"
00014B94 <CLIModeSupport.ab3@281> XINCLUDE "CLIModeSupport.ab3"
00014BA4 <CLIModeSupport.ab3@282> XINCLUDE "CLIModeSupport.ab3"
00014BB4 <CLIModeSupport.ab3@283> XINCLUDE "CLIModeSupport.ab3"
00014BC4 <CLIModeSupport.ab3@284> XINCLUDE "CLIModeSupport.ab3"
00014BD4 <CLIModeSupport.ab3@285> XINCLUDE "CLIModeSupport.ab3"
00014BE6 <CLIModeSupport.ab3@287> XINCLUDE "CLIModeSupport.ab3"
00014BF8 <CLIModeSupport.ab3@288> XINCLUDE "CLIModeSupport.ab3"
00014C0A <CLIModeSupport.ab3@289> XINCLUDE "CLIModeSupport.ab3"
00014C1C <CLIModeSupport.ab3@290> XINCLUDE "CLIModeSupport.ab3"
00014C2E <CLIModeSupport.ab3@291> XINCLUDE "CLIModeSupport.ab3"
00014C40 <CLIModeSupport.ab3@292> XINCLUDE "CLIModeSupport.ab3"
00014C5E <CLIModeSupport.ab3@294> XINCLUDE "CLIModeSupport.ab3"
00014C64 <CLIModeSupport.ab3@295> XINCLUDE "CLIModeSupport.ab3"
00014C6A <CLIModeSupport.ab3@297> XINCLUDE "CLIModeSupport.ab3"
00014C94 <CLIModeSupport.ab3@298> XINCLUDE "CLIModeSupport.ab3"
00014CA6 <CLIModeSupport.ab3@299> XINCLUDE "CLIModeSupport.ab3"
00014CDA <CLIModeSupport.ab3@302> XINCLUDE "CLIModeSupport.ab3"
00014CF2 <CLIModeSupport.ab3@303> XINCLUDE "CLIModeSupport.ab3"
00014D3E <CLIModeSupport.ab3@304> XINCLUDE "CLIModeSupport.ab3"
00014D50 <CLIModeSupport.ab3@305> XINCLUDE "CLIModeSupport.ab3"
00014DA6 <CLIModeSupport.ab3@306> XINCLUDE "CLIModeSupport.ab3"
00014E18 <CLIModeSupport.ab3@307> XINCLUDE "CLIModeSupport.ab3"
00014E1E <CLIModeSupport.ab3@308> XINCLUDE "CLIModeSupport.ab3"
00014E52 <CLIModeSupport.ab3@309> XINCLUDE "CLIModeSupport.ab3"
00014E7A <CLIModeSupport.ab3@310> XINCLUDE "CLIModeSupport.ab3"
00014EA2 <CLIModeSupport.ab3@312> XINCLUDE "CLIModeSupport.ab3"
00014EDC <CLIModeSupport.ab3@313> XINCLUDE "CLIModeSupport.ab3"
00014EF4 <CLIModeSupport.ab3@314> XINCLUDE "CLIModeSupport.ab3"
00014F78 <CLIModeSupport.ab3@315> XINCLUDE "CLIModeSupport.ab3"
00014F92 <CLIModeSupport.ab3@316> XINCLUDE "CLIModeSupport.ab3"
00014FE0 <CLIModeSupport.ab3@317> XINCLUDE "CLIModeSupport.ab3"
00014FF0 <CLIModeSupport.ab3@319> XINCLUDE "CLIModeSupport.ab3"
00014FF8 <CLIModeSupport.ab3@321> XINCLUDE "CLIModeSupport.ab3"
0001500C <CLIModeSupport.ab3@322> XINCLUDE "CLIModeSupport.ab3"
00015052 <CLIModeSupport.ab3@323> XINCLUDE "CLIModeSupport.ab3"
00015058 <CLIModeSupport.ab3@324> XINCLUDE "CLIModeSupport.ab3"
000150A2 <CLIModeSupport.ab3@325> XINCLUDE "CLIModeSupport.ab3"
0001510C <CLIModeSupport.ab3@326> XINCLUDE "CLIModeSupport.ab3"
00015172 <CLIModeSupport.ab3@327> XINCLUDE "CLIModeSupport.ab3"
000151A6 <CLIModeSupport.ab3@328> XINCLUDE "CLIModeSupport.ab3"
000151D2 <CLIModeSupport.ab3@330> XINCLUDE "CLIModeSupport.ab3"
00015220 <CLIModeSupport.ab3@331> XINCLUDE "CLIModeSupport.ab3"
00015244 <CLIModeSupport.ab3@332> XINCLUDE "CLIModeSupport.ab3"
0001524A <CLIModeSupport.ab3@333> XINCLUDE "CLIModeSupport.ab3"
00015258 <CLIModeSupport.ab3@335> XINCLUDE "CLIModeSupport.ab3"
000152B6 <CLIModeSupport.ab3@337> XINCLUDE "CLIModeSupport.ab3"
00015314 <CLIModeSupport.ab3@338> XINCLUDE "CLIModeSupport.ab3"
0001533E <CLIModeSupport.ab3@339> XINCLUDE "CLIModeSupport.ab3"
00015348 <CLIModeSupport.ab3@340> XINCLUDE "CLIModeSupport.ab3"
00015350 <CLIModeSupport.ab3@341> XINCLUDE "CLIModeSupport.ab3"
0001538E <CLIModeSupport.ab3@342> XINCLUDE "CLIModeSupport.ab3"
000153DA <CLIModeSupport.ab3@343> XINCLUDE "CLIModeSupport.ab3"
000153EC <CLIModeSupport.ab3@344> XINCLUDE "CLIModeSupport.ab3"
00015442 <CLIModeSupport.ab3@345> XINCLUDE "CLIModeSupport.ab3"
000154BA <CLIModeSupport.ab3@346> XINCLUDE "CLIModeSupport.ab3"
000154C0 <CLIModeSupport.ab3@347> XINCLUDE "CLIModeSupport.ab3"
000154F4 <CLIModeSupport.ab3@348> XINCLUDE "CLIModeSupport.ab3"
0001551C <CLIModeSupport.ab3@349> XINCLUDE "CLIModeSupport.ab3"
00015552 <CLIModeSupport.ab3@352> XINCLUDE "CLIModeSupport.ab3"
00015560 <CLIModeSupport.ab3@353> XINCLUDE "CLIModeSupport.ab3"
0001556E <CLIModeSupport.ab3@354> XINCLUDE "CLIModeSupport.ab3"
000155D6 <CLIModeSupport.ab3@355> XINCLUDE "CLIModeSupport.ab3"
000155DC <CLIModeSupport.ab3@356> XINCLUDE "CLIModeSupport.ab3"
00015626 <CLIModeSupport.ab3@357> XINCLUDE "CLIModeSupport.ab3"
00015670 <CLIModeSupport.ab3@358> XINCLUDE "CLIModeSupport.ab3"
000156A0 <CLIModeSupport.ab3@359> XINCLUDE "CLIModeSupport.ab3"
000156CA <CLIModeSupport.ab3@360> XINCLUDE "CLIModeSupport.ab3"
0001571C <CLIModeSupport.ab3@361> XINCLUDE "CLIModeSupport.ab3"
00015772 <CLIModeSupport.ab3@362> XINCLUDE "CLIModeSupport.ab3"
000157C2 <CLIModeSupport.ab3@363> XINCLUDE "CLIModeSupport.ab3"
00015828 <CLIModeSupport.ab3@364> XINCLUDE "CLIModeSupport.ab3"
00015894 <CLIModeSupport.ab3@365> XINCLUDE "CLIModeSupport.ab3"
000158C0 <CLIModeSupport.ab3@366> XINCLUDE "CLIModeSupport.ab3"
000158F0 <CLIModeSupport.ab3@367> XINCLUDE "CLIModeSupport.ab3"
0001596C <CLIModeSupport.ab3@368> XINCLUDE "CLIModeSupport.ab3"
0001599C <CLIModeSupport.ab3@369> XINCLUDE "CLIModeSupport.ab3"
000159CC <CLIModeSupport.ab3@370> XINCLUDE "CLIModeSupport.ab3"
000159FC <CLIModeSupport.ab3@371> XINCLUDE "CLIModeSupport.ab3"
00015A2C <CLIModeSupport.ab3@372> XINCLUDE "CLIModeSupport.ab3"
00015A5C <CLIModeSupport.ab3@373> XINCLUDE "CLIModeSupport.ab3"
00015A8C <CLIModeSupport.ab3@374> XINCLUDE "CLIModeSupport.ab3"
00015ABC <CLIModeSupport.ab3@375> XINCLUDE "CLIModeSupport.ab3"
00015AEC <CLIModeSupport.ab3@376> XINCLUDE "CLIModeSupport.ab3"
00015B1C <CLIModeSupport.ab3@377> XINCLUDE "CLIModeSupport.ab3"
00015B4C <CLIModeSupport.ab3@378> XINCLUDE "CLIModeSupport.ab3"
00015BC8 <CLIModeSupport.ab3@379> XINCLUDE "CLIModeSupport.ab3"
00015BFA <CLIModeSupport.ab3@380> XINCLUDE "CLIModeSupport.ab3"
00015C2C <CLIModeSupport.ab3@381> XINCLUDE "CLIModeSupport.ab3"
00015C5C <CLIModeSupport.ab3@382> XINCLUDE "CLIModeSupport.ab3"
00015C62 <CLIModeSupport.ab3@383> XINCLUDE "CLIModeSupport.ab3"
00015CD6 <CLIModeSupport.ab3@384> XINCLUDE "CLIModeSupport.ab3"
00015D42 <CLIModeSupport.ab3@385> XINCLUDE "CLIModeSupport.ab3"
00015D54 <CLIModeSupport.ab3@386> XINCLUDE "CLIModeSupport.ab3"
00015D82 <CLIModeSupport.ab3@387> XINCLUDE "CLIModeSupport.ab3"
00015DAA <CLIModeSupport.ab3@388> XINCLUDE "CLIModeSupport.ab3"
00015DBE <CLIModeSupport.ab3@389> XINCLUDE "CLIModeSupport.ab3"
00015DE8 <CLIModeSupport.ab3@390> XINCLUDE "CLIModeSupport.ab3"
00015E2C <CLIModeSupport.ab3@391> XINCLUDE "CLIModeSupport.ab3"
00015E3C <CLIModeSupport.ab3@392> XINCLUDE "CLIModeSupport.ab3"
00015E4C <CLIModeSupport.ab3@393> XINCLUDE "CLIModeSupport.ab3"
00015E52 <CLIModeSupport.ab3@394> XINCLUDE "CLIModeSupport.ab3"
00015E62 <CLIModeSupport.ab3@396> XINCLUDE "CLIModeSupport.ab3"
00015E70 <CLIModeSupport.ab3@400> XINCLUDE "CLIModeSupport.ab3"
00015E7A <CLIModeSupport.ab3@403> XINCLUDE "CLIModeSupport.ab3"
00015EB2 <CLIModeSupport.ab3@406> XINCLUDE "CLIModeSupport.ab3"
00015EEA <CLIModeSupport.ab3@407> XINCLUDE "CLIModeSupport.ab3"
00015F22 <CLIModeSupport.ab3@408> XINCLUDE "CLIModeSupport.ab3"
00015F32 <CLIModeSupport.ab3@409> XINCLUDE "CLIModeSupport.ab3"
00015F9A <CLIModeSupport.ab3@410> XINCLUDE "CLIModeSupport.ab3"
00015FD2 <CLIModeSupport.ab3@411> XINCLUDE "CLIModeSupport.ab3"
00015FE2 <CLIModeSupport.ab3@412> XINCLUDE "CLIModeSupport.ab3"
00015FF2 <CLIModeSupport.ab3@413> XINCLUDE "CLIModeSupport.ab3"
0001605A <CLIModeSupport.ab3@414> XINCLUDE "CLIModeSupport.ab3"
000160C2 <CLIModeSupport.ab3@415> XINCLUDE "CLIModeSupport.ab3"
0001612A <CLIModeSupport.ab3@416> XINCLUDE "CLIModeSupport.ab3"
00016192 <CLIModeSupport.ab3@417> XINCLUDE "CLIModeSupport.ab3"
000161FA <CLIModeSupport.ab3@418> XINCLUDE "CLIModeSupport.ab3"
00016262 <CLIModeSupport.ab3@419> XINCLUDE "CLIModeSupport.ab3"
000162CA <CLIModeSupport.ab3@420> XINCLUDE "CLIModeSupport.ab3"
00016332 <CLIModeSupport.ab3@421> XINCLUDE "CLIModeSupport.ab3"
00016342 <CLIModeSupport.ab3@422> XINCLUDE "CLIModeSupport.ab3"
0001637A <CLIModeSupport.ab3@424> XINCLUDE "CLIModeSupport.ab3"
000163B4 <CLIModeSupport.ab3@425> XINCLUDE "CLIModeSupport.ab3"
000163EE <CLIModeSupport.ab3@426> XINCLUDE "CLIModeSupport.ab3"
00016426 <CLIModeSupport.ab3@427> XINCLUDE "CLIModeSupport.ab3"
0001644C <CLIModeSupport.ab3@430> XINCLUDE "CLIModeSupport.ab3"
00016454 <CLIModeSupport.ab3@433> XINCLUDE "CLIModeSupport.ab3"
0001645C <CLIModeSupport.ab3@435> XINCLUDE "CLIModeSupport.ab3"
00016464 <CLIModeSupport.ab3@436> XINCLUDE "CLIModeSupport.ab3"
0001646C <CLIModeSupport.ab3@438> XINCLUDE "CLIModeSupport.ab3"
00016480 <CLIModeSupport.ab3@439> XINCLUDE "CLIModeSupport.ab3"
000164AE <CLIModeSupport.ab3@440> XINCLUDE "CLIModeSupport.ab3"
000164C8 <CLIModeSupport.ab3@441> XINCLUDE "CLIModeSupport.ab3"
000164D6 <CLIModeSupport.ab3@442> XINCLUDE "CLIModeSupport.ab3"
00016542 <CLIModeSupport.ab3@443> XINCLUDE "CLIModeSupport.ab3"
00016568 <CLIModeSupport.ab3@444> XINCLUDE "CLIModeSupport.ab3"
00016584 <CLIModeSupport.ab3@445> XINCLUDE "CLIModeSupport.ab3"
0001658E <CLIModeSupport.ab3@446> XINCLUDE "CLIModeSupport.ab3"
00016598 <CLIModeSupport.ab3@447> XINCLUDE "CLIModeSupport.ab3"
000165A4 <CLIModeSupport.ab3@448> XINCLUDE "CLIModeSupport.ab3"
000165B2 <CLIModeSupport.ab3@449> XINCLUDE "CLIModeSupport.ab3"
000165BE <CLIModeSupport.ab3@450> XINCLUDE "CLIModeSupport.ab3"
000165FA <CLIModeSupport.ab3@451> XINCLUDE "CLIModeSupport.ab3"
00016614 <CLIModeSupport.ab3@452> XINCLUDE "CLIModeSupport.ab3"
00016622 <CLIModeSupport.ab3@453> XINCLUDE "CLIModeSupport.ab3"
00016642 <CLIModeSupport.ab3@454> XINCLUDE "CLIModeSupport.ab3"
00016650 <CLIModeSupport.ab3@455> XINCLUDE "CLIModeSupport.ab3"
0001665E <CLIModeSupport.ab3@456> XINCLUDE "CLIModeSupport.ab3"
00016664 <CLIModeSupport.ab3@458> XINCLUDE "CLIModeSupport.ab3"
00016674 <CLIModeSupport.ab3@459> XINCLUDE "CLIModeSupport.ab3"
00016678 <CLIModeSupport.ab3@461> XINCLUDE "CLIModeSupport.ab3"
000166AC <CLIModeSupport.ab3@462> XINCLUDE "CLIModeSupport.ab3"
000166E0 <CLIModeSupport.ab3@463> XINCLUDE "CLIModeSupport.ab3"
000166E4 <CLIModeSupport.ab3@464> XINCLUDE "CLIModeSupport.ab3"
00016718 <CLIModeSupport.ab3@465> XINCLUDE "CLIModeSupport.ab3"
0001671C <CLIModeSupport.ab3@466> XINCLUDE "CLIModeSupport.ab3"
00016750 <CLIModeSupport.ab3@467> XINCLUDE "CLIModeSupport.ab3"
00016756 <CLIModeSupport.ab3@468> XINCLUDE "CLIModeSupport.ab3"
0001678C <CLIModeSupport.ab3@470> XINCLUDE "CLIModeSupport.ab3"
000167C2 <CLIModeSupport.ab3@471> XINCLUDE "CLIModeSupport.ab3"
000167F8 <CLIModeSupport.ab3@472> XINCLUDE "CLIModeSupport.ab3"
00016830 <CLIModeSupport.ab3@473> XINCLUDE "CLIModeSupport.ab3"
00016868 <CLIModeSupport.ab3@474> XINCLUDE "CLIModeSupport.ab3"
00016908 <CLIModeSupport.ab3@476> XINCLUDE "CLIModeSupport.ab3"
00016948 <CLIModeSupport.ab3@477> XINCLUDE "CLIModeSupport.ab3"
00016980 <CLIModeSupport.ab3@480> XINCLUDE "CLIModeSupport.ab3"
0001699E <CLIModeSupport.ab3@481> XINCLUDE "CLIModeSupport.ab3"
000169A2 <CLIModeSupport.ab3@482> XINCLUDE "CLIModeSupport.ab3"
000169A8 <CLIModeSupport.ab3@483> XINCLUDE "CLIModeSupport.ab3"
000169AE <CLIModeSupport.ab3@484> XINCLUDE "CLIModeSupport.ab3"
000169B2 <CLIModeSupport.ab3@485> XINCLUDE "CLIModeSupport.ab3"
000169DC <CLIModeSupport.ab3@486> XINCLUDE "CLIModeSupport.ab3"
000169F0 <CLIModeSupport.ab3@490> XINCLUDE "CLIModeSupport.ab3"
00016A2E <CLIModeSupport.ab3@491> XINCLUDE "CLIModeSupport.ab3"
00016A62 <CLIModeSupport.ab3@492> XINCLUDE "CLIModeSupport.ab3"
00016A98 <CLIModeSupport.ab3@496> XINCLUDE "CLIModeSupport.ab3"
00016AF0 <CLIModeSupport.ab3@498> XINCLUDE "CLIModeSupport.ab3"
00016B1E <CLIModeSupport.ab3@499> XINCLUDE "CLIModeSupport.ab3"
00016B22 <CLIModeSupport.ab3@500> XINCLUDE "CLIModeSupport.ab3"
00016B58 <CLIModeSupport.ab3@501> XINCLUDE "CLIModeSupport.ab3"
00016B86 <CLIModeSupport.ab3@502> XINCLUDE "CLIModeSupport.ab3"
00016BB4 <CLIModeSupport.ab3@504> XINCLUDE "CLIModeSupport.ab3"
00016BB8 <CLIModeSupport.ab3@505> XINCLUDE "CLIModeSupport.ab3"
00016BEE <CLIModeSupport.ab3@506> XINCLUDE "CLIModeSupport.ab3"
00016C1C <CLIModeSupport.ab3@508> XINCLUDE "CLIModeSupport.ab3"
00016C20 <CLIModeSupport.ab3@509> XINCLUDE "CLIModeSupport.ab3"
00016C84 <CLIModeSupport.ab3@510> XINCLUDE "CLIModeSupport.ab3"
00016C8A <CLIModeSupport.ab3@513> XINCLUDE "CLIModeSupport.ab3"
00016CB8 <CLIModeSupport.ab3@514> XINCLUDE "CLIModeSupport.ab3"
00016CC2 <CLIModeSupport.ab3@517> XINCLUDE "CLIModeSupport.ab3"
00016CCC <CLIModeSupport.ab3@519> XINCLUDE "CLIModeSupport.ab3"
00016CE6 <CLIModeSupport.ab3@520> XINCLUDE "CLIModeSupport.ab3"
00016D10 <CLIModeSupport.ab3@523> XINCLUDE "CLIModeSupport.ab3"
00016D16 <CLIModeSupport.ab3@524> XINCLUDE "CLIModeSupport.ab3"
00016D36 <CLIModeSupport.ab3@525> XINCLUDE "CLIModeSupport.ab3"
00016D40 <CLIModeSupport.ab3@526> XINCLUDE "CLIModeSupport.ab3"
00016D44 <CLIModeSupport.ab3@527> XINCLUDE "CLIModeSupport.ab3"
00016D46 <CLIModeSupport.ab3@528> XINCLUDE "CLIModeSupport.ab3"
00016D64 <CLIModeSupport.ab3@529> XINCLUDE "CLIModeSupport.ab3"
00016D66 <CLIModeSupport.ab3@530> XINCLUDE "CLIModeSupport.ab3"
00016D6C <CLIModeSupport.ab3@531> XINCLUDE "CLIModeSupport.ab3"
00016D72 <CLIModeSupport.ab3@533> XINCLUDE "CLIModeSupport.ab3"
00016D9C <CLIModeSupport.ab3@534> XINCLUDE "CLIModeSupport.ab3"
00016D9E <CLIModeSupport.ab3@535> XINCLUDE "CLIModeSupport.ab3"
00016DCC <CLIModeSupport.ab3@536> XINCLUDE "CLIModeSupport.ab3"
00016DD0 <CLIModeSupport.ab3@537> XINCLUDE "CLIModeSupport.ab3"
00016DFE <CLIModeSupport.ab3@538> XINCLUDE "CLIModeSupport.ab3"
00016E02 <CLIModeSupport.ab3@539> XINCLUDE "CLIModeSupport.ab3"
00016E28 <CLIModeSupport.ab3@540> XINCLUDE "CLIModeSupport.ab3"
00016E38 <CLIModeSupport.ab3@541> XINCLUDE "CLIModeSupport.ab3"
00016E3E <CLIModeSupport.ab3@542> XINCLUDE "CLIModeSupport.ab3"
00016E44 <CLIModeSupport.ab3@543> XINCLUDE "CLIModeSupport.ab3"
00016E72 <CLIModeSupport.ab3@544> XINCLUDE "CLIModeSupport.ab3"
00016E7C <CLIModeSupport.ab3@546> XINCLUDE "CLIModeSupport.ab3"
00016E96 <CLIModeSupport.ab3@547> XINCLUDE "CLIModeSupport.ab3"
00016EB0 <CLIModeSupport.ab3@550> XINCLUDE "CLIModeSupport.ab3"
00016EDA <CLIModeSupport.ab3@551> XINCLUDE "CLIModeSupport.ab3"
00016F08 <CLIModeSupport.ab3@552> XINCLUDE "CLIModeSupport.ab3"
00016F12 <CLIModeSupport.ab3@554> XINCLUDE "CLIModeSupport.ab3"
00016F26 <CLIModeSupport.ab3@555> XINCLUDE "CLIModeSupport.ab3"
00016F62 <CLIModeSupport.ab3@556> XINCLUDE "CLIModeSupport.ab3"
00016F9E <CLIModeSupport.ab3@557> XINCLUDE "CLIModeSupport.ab3"
00016FDA <CLIModeSupport.ab3@558> XINCLUDE "CLIModeSupport.ab3"
00017016 <CLIModeSupport.ab3@559> XINCLUDE "CLIModeSupport.ab3"
00017052 <CLIModeSupport.ab3@560> XINCLUDE "CLIModeSupport.ab3"
00017058 <CLIModeSupport.ab3@561> XINCLUDE "CLIModeSupport.ab3"
00017086 <CLIModeSupport.ab3@562> XINCLUDE "CLIModeSupport.ab3"
00017088 <CLIModeSupport.ab3@566> XINCLUDE "CLIModeSupport.ab3"
000170A6 <CLIModeSupport.ab3@567> XINCLUDE "CLIModeSupport.ab3"
000170AC <CLIModeSupport.ab3@568> XINCLUDE "CLIModeSupport.ab3"
000170D6 <CLIModeSupport.ab3@569> XINCLUDE "CLIModeSupport.ab3"
000170D8 <CLIModeSupport.ab3@570> XINCLUDE "CLIModeSupport.ab3"
000170E2 <CLIModeSupport.ab3@572> XINCLUDE "CLIModeSupport.ab3"
000170E8 <CLIModeSupport.ab3@573> XINCLUDE "CLIModeSupport.ab3"
000170FA <CLIModeSupport.ab3@576> XINCLUDE "CLIModeSupport.ab3"
0001712C <CLIModeSupport.ab3@579> XINCLUDE "CLIModeSupport.ab3"
00017136 <CLIModeSupport.ab3@580> XINCLUDE "CLIModeSupport.ab3"
000171A0 <CLIModeSupport.ab3@581> XINCLUDE "CLIModeSupport.ab3"
0001720A <CLIModeSupport.ab3@582> XINCLUDE "CLIModeSupport.ab3"
00017274 <CLIModeSupport.ab3@584> XINCLUDE "CLIModeSupport.ab3"
000172DE <CLIModeSupport.ab3@585> XINCLUDE "CLIModeSupport.ab3"
00017348 <CLIModeSupport.ab3@586> XINCLUDE "CLIModeSupport.ab3"
000173B2 <CLIModeSupport.ab3@587> XINCLUDE "CLIModeSupport.ab3"
000173B8 <CLIModeSupport.ab3@588> XINCLUDE "CLIModeSupport.ab3"
00017422 <CLIModeSupport.ab3@589> XINCLUDE "CLIModeSupport.ab3"
0001748C <CLIModeSupport.ab3@590> XINCLUDE "CLIModeSupport.ab3"
00017496 <CLIModeSupport.ab3@593> XINCLUDE "CLIModeSupport.ab3"
00017500 <CLIModeSupport.ab3@594> XINCLUDE "CLIModeSupport.ab3"
00017508 <CLIModeSupport.ab3@599> XINCLUDE "CLIModeSupport.ab3"
00017536 <CLIModeSupport.ab3@601> XINCLUDE "CLIModeSupport.ab3"
0001753A <CLIModeSupport.ab3@602> XINCLUDE "CLIModeSupport.ab3"
00017562 <CLIModeSupport.ab3@603> XINCLUDE "CLIModeSupport.ab3"
00017568 <CLIModeSupport.ab3@606> XINCLUDE "CLIModeSupport.ab3"
0001756E <CLIModeSupport.ab3@609> XINCLUDE "CLIModeSupport.ab3"
00017574 <CLIModeSupport.ab3@610> XINCLUDE "CLIModeSupport.ab3"
0001757A <CLIModeSupport.ab3@611> XINCLUDE "CLIModeSupport.ab3"
00017580 <CLIModeSupport.ab3@612> XINCLUDE "CLIModeSupport.ab3"
0001758A <CLIModeSupport.ab3@613> XINCLUDE "CLIModeSupport.ab3"
00017594 <CLIModeSupport.ab3@614> XINCLUDE "CLIModeSupport.ab3"
000175C2 <CLIModeSupport.ab3@616> XINCLUDE "CLIModeSupport.ab3"
000175EE <CLIModeSupport.ab3@618> XINCLUDE "CLIModeSupport.ab3"
000175F6 <CLIModeSupport.ab3@619> XINCLUDE "CLIModeSupport.ab3"
0001762A <CLIModeSupport.ab3@621> XINCLUDE "CLIModeSupport.ab3"
0001763C <CLIModeSupport.ab3@622> XINCLUDE "CLIModeSupport.ab3"
000176A2 <CLIModeSupport.ab3@623> XINCLUDE "CLIModeSupport.ab3"
00017708 <CLIModeSupport.ab3@624> XINCLUDE "CLIModeSupport.ab3"
0001770E <CLIModeSupport.ab3@625> XINCLUDE "CLIModeSupport.ab3"
00017716 <CLIModeSupport.ab3@626> XINCLUDE "CLIModeSupport.ab3"
00017718 <CLIModeSupport.ab3@630> XINCLUDE "CLIModeSupport.ab3"
00017736 <CLIModeSupport.ab3@631> XINCLUDE "CLIModeSupport.ab3"
00017774 <CLIModeSupport.ab3@632> XINCLUDE "CLIModeSupport.ab3"
000177B2 <CLIModeSupport.ab3@633> XINCLUDE "CLIModeSupport.ab3"
000177B8 <CLIModeSupport.ab3@635> XINCLUDE "CLIModeSupport.ab3"
000177BE <CLIModeSupport.ab3@636> XINCLUDE "CLIModeSupport.ab3"
000177C4 <CLIModeSupport.ab3@637> XINCLUDE "CLIModeSupport.ab3"
000177CE <CLIModeSupport.ab3@640> XINCLUDE "CLIModeSupport.ab3"
000177D4 <CLIModeSupport.ab3@641> XINCLUDE "CLIModeSupport.ab3"
000177DA <CLIModeSupport.ab3@642> XINCLUDE "CLIModeSupport.ab3"
000177E0 <CLIModeSupport.ab3@643> XINCLUDE "CLIModeSupport.ab3"
000177EA <CLIModeSupport.ab3@644> XINCLUDE "CLIModeSupport.ab3"
000177EE <CLIModeSupport.ab3@645> XINCLUDE "CLIModeSupport.ab3"
00017818 <CLIModeSupport.ab3@647> XINCLUDE "CLIModeSupport.ab3"
0001781A <CLIModeSupport.ab3@648> XINCLUDE "CLIModeSupport.ab3"
00017820 <CLIModeSupport.ab3@650> XINCLUDE "CLIModeSupport.ab3"
00017824 <CLIModeSupport.ab3@651> XINCLUDE "CLIModeSupport.ab3"
0001782A <CLIModeSupport.ab3@653> XINCLUDE "CLIModeSupport.ab3"
0001782E <CLIModeSupport.ab3@654> XINCLUDE "CLIModeSupport.ab3"
00017888 <CLIModeSupport.ab3@656> XINCLUDE "CLIModeSupport.ab3"
0001789A <CLIModeSupport.ab3@658> XINCLUDE "CLIModeSupport.ab3"
000178C6 <CLIModeSupport.ab3@659> XINCLUDE "CLIModeSupport.ab3"
0001796C <CLIModeSupport.ab3@660> XINCLUDE "CLIModeSupport.ab3"
0001798A <CLIModeSupport.ab3@661> XINCLUDE "CLIModeSupport.ab3"
00017990 <CLIModeSupport.ab3@662> XINCLUDE "CLIModeSupport.ab3"
000179BA <CLIModeSupport.ab3@663> XINCLUDE "CLIModeSupport.ab3"
000179C4 <CLIModeSupport.ab3@664> XINCLUDE "CLIModeSupport.ab3"
000179F6 <CLIModeSupport.ab3@665> XINCLUDE "CLIModeSupport.ab3"
00017A10 <CLIModeSupport.ab3@666> XINCLUDE "CLIModeSupport.ab3"
00017A24 <CLIModeSupport.ab3@671> XINCLUDE "CLIModeSupport.ab3"
00017A2E <CLIModeSupport.ab3@673> XINCLUDE "CLIModeSupport.ab3"
00017A48 <CLIModeSupport.ab3@674> XINCLUDE "CLIModeSupport.ab3"
00017A72 <CLIModeSupport.ab3@678> XINCLUDE "CLIModeSupport.ab3"
00017A96 <CLIModeSupport.ab3@679> XINCLUDE "CLIModeSupport.ab3"
00017AD4 <CLIModeSupport.ab3@680> XINCLUDE "CLIModeSupport.ab3"
00017AD8 <CLIModeSupport.ab3@681> XINCLUDE "CLIModeSupport.ab3"
00017B16 <CLIModeSupport.ab3@683> XINCLUDE "CLIModeSupport.ab3"
00017B1A <CLIModeSupport.ab3@684> XINCLUDE "CLIModeSupport.ab3"
00017B58 <CLIModeSupport.ab3@687> XINCLUDE "CLIModeSupport.ab3"
00017B96 <CLIModeSupport.ab3@688> XINCLUDE "CLIModeSupport.ab3"
00017B98 <CLIModeSupport.ab3@689> XINCLUDE "CLIModeSupport.ab3"
00017BCC <CLIModeSupport.ab3@690> XINCLUDE "CLIModeSupport.ab3"
00017BD2 <CLIModeSupport.ab3@692> XINCLUDE "CLIModeSupport.ab3"
00017C16 <CLIModeSupport.ab3@693> XINCLUDE "CLIModeSupport.ab3"
00017C28 <CLIModeSupport.ab3@694> XINCLUDE "CLIModeSupport.ab3"
00017C30 <CLIModeSupport.ab3@696> XINCLUDE "CLIModeSupport.ab3"
00017C36 <CLIModeSupport.ab3@697> XINCLUDE "CLIModeSupport.ab3"
00017C40 <CLIModeSupport.ab3@699> XINCLUDE "CLIModeSupport.ab3"
00017C4E <CLIModeSupport.ab3@700> XINCLUDE "CLIModeSupport.ab3"
00017C54 <CLIModeSupport.ab3@701> XINCLUDE "CLIModeSupport.ab3"
00017C7C <CLIModeSupport.ab3@702> XINCLUDE "CLIModeSupport.ab3"
00017C96 <CLIModeSupport.ab3@703> XINCLUDE "CLIModeSupport.ab3"
00017CA0 <CLIModeSupport.ab3@704> XINCLUDE "CLIModeSupport.ab3"
00017CA6 <CLIModeSupport.ab3@705> XINCLUDE "CLIModeSupport.ab3"
00017CC4 <CLIModeSupport.ab3@707> XINCLUDE "CLIModeSupport.ab3"
00017CCE <CLIModeSupport.ab3@708> XINCLUDE "CLIModeSupport.ab3"
00017CD4 <CLIModeSupport.ab3@709> XINCLUDE "CLIModeSupport.ab3"
00017CDA <CLIModeSupport.ab3@710> XINCLUDE "CLIModeSupport.ab3"
00017CE4 <CLIModeSupport.ab3@711> XINCLUDE "CLIModeSupport.ab3"
00017CF2 <CLIModeSupport.ab3@712> XINCLUDE "CLIModeSupport.ab3"
00017CF8 <CLIModeSupport.ab3@713> XINCLUDE "CLIModeSupport.ab3"
00017D08 <CLIModeSupport.ab3@715> XINCLUDE "CLIModeSupport.ab3"
00017D34 <CLIModeSupport.ab3@716> XINCLUDE "CLIModeSupport.ab3"
00017D4A <CLIModeSupport.ab3@717> XINCLUDE "CLIModeSupport.ab3"
00017D54 <CLIModeSupport.ab3@718> XINCLUDE "CLIModeSupport.ab3"
00017D5A <CLIModeSupport.ab3@719> XINCLUDE "CLIModeSupport.ab3"
00017DB2 <CLIModeSupport.ab3@721> XINCLUDE "CLIModeSupport.ab3"
00017E20 <CLIModeSupport.ab3@723> XINCLUDE "CLIModeSupport.ab3"
00017E38 <CLIModeSupport.ab3@724> XINCLUDE "CLIModeSupport.ab3"
00017E3E <CLIModeSupport.ab3@725> XINCLUDE "CLIModeSupport.ab3"
00017E76 <CLIModeSupport.ab3@726> XINCLUDE "CLIModeSupport.ab3"
00017EA4 <CLIModeSupport.ab3@728> XINCLUDE "CLIModeSupport.ab3"
00017ECE <CLIModeSupport.ab3@729> XINCLUDE "CLIModeSupport.ab3"
00017ED8 <CLIModeSupport.ab3@731> XINCLUDE "CLIModeSupport.ab3"
00017F00 <CLIModeSupport.ab3@732> XINCLUDE "CLIModeSupport.ab3"
00017F2A <CLIModeSupport.ab3@733> XINCLUDE "CLIModeSupport.ab3"
00017FCC <CLIModeSupport.ab3@734> XINCLUDE "CLIModeSupport.ab3"
00017FDA <CLIModeSupport.ab3@735> XINCLUDE "CLIModeSupport.ab3"
0001802A <CLIModeSupport.ab3@736> XINCLUDE "CLIModeSupport.ab3"
0001803A <CLIModeSupport.ab3@737> XINCLUDE "CLIModeSupport.ab3"
00018102 <CLIModeSupport.ab3@738> XINCLUDE "CLIModeSupport.ab3"
00018136 <CLIModeSupport.ab3@740> XINCLUDE "CLIModeSupport.ab3"
0001816A <CLIModeSupport.ab3@741> XINCLUDE "CLIModeSupport.ab3"
0001819E <CLIModeSupport.ab3@742> XINCLUDE "CLIModeSupport.ab3"
000181D2 <CLIModeSupport.ab3@743> XINCLUDE "CLIModeSupport.ab3"
00018206 <CLIModeSupport.ab3@744> XINCLUDE "CLIModeSupport.ab3"
0001823A <CLIModeSupport.ab3@745> XINCLUDE "CLIModeSupport.ab3"
0001826E <CLIModeSupport.ab3@746> XINCLUDE "CLIModeSupport.ab3"
000182A2 <CLIModeSupport.ab3@747> XINCLUDE "CLIModeSupport.ab3"
000182A4 <CLIModeSupport.ab3@749> XINCLUDE "CLIModeSupport.ab3"
000182E2 <CLIModeSupport.ab3@750> XINCLUDE "CLIModeSupport.ab3"
000182E6 <CLIModeSupport.ab3@751> XINCLUDE "CLIModeSupport.ab3"
00018324 <CLIModeSupport.ab3@754> XINCLUDE "CLIModeSupport.ab3"
00018362 <CLIModeSupport.ab3@755> XINCLUDE "CLIModeSupport.ab3"
00018364 <CLIModeSupport.ab3@756> XINCLUDE "CLIModeSupport.ab3"
0001836A <CLIModeSupport.ab3@757> XINCLUDE "CLIModeSupport.ab3"
0001836E <CLIModeSupport.ab3@758> XINCLUDE "CLIModeSupport.ab3"
00018370 <CLIModeSupport.ab3@760> XINCLUDE "CLIModeSupport.ab3"
000183AE <CLIModeSupport.ab3@761> XINCLUDE "CLIModeSupport.ab3"
000183EC <CLIModeSupport.ab3@762> XINCLUDE "CLIModeSupport.ab3"
000183EE <CLIModeSupport.ab3@763> XINCLUDE "CLIModeSupport.ab3"
000183F0 <CLIModeSupport.ab3@764> XINCLUDE "CLIModeSupport.ab3"
000183F2 <CLIModeSupport.ab3@765> XINCLUDE "CLIModeSupport.ab3"
000183F8 <CLIModeSupport.ab3@766> XINCLUDE "CLIModeSupport.ab3"
000183FC <CLIModeSupport.ab3@767> XINCLUDE "CLIModeSupport.ab3"
0001840C <CLIModeSupport.ab3@769> XINCLUDE "CLIModeSupport.ab3"
00018424 <CLIModeSupport.ab3@770> XINCLUDE "CLIModeSupport.ab3"
0001843C <CLIModeSupport.ab3@771> XINCLUDE "CLIModeSupport.ab3"
00018454 <CLIModeSupport.ab3@772> XINCLUDE "CLIModeSupport.ab3"
0001847E <CLIModeSupport.ab3@774> XINCLUDE "CLIModeSupport.ab3"
000184A8 <CLIModeSupport.ab3@775> XINCLUDE "CLIModeSupport.ab3"
000184D6 <CLIModeSupport.ab3@777> XINCLUDE "CLIModeSupport.ab3"
000184DA <CLIModeSupport.ab3@778> XINCLUDE "CLIModeSupport.ab3"
00018502 <CLIModeSupport.ab3@779> XINCLUDE "CLIModeSupport.ab3"
00018504 <CLIModeSupport.ab3@780> XINCLUDE "CLIModeSupport.ab3"
00018542 <CLIModeSupport.ab3@781> XINCLUDE "CLIModeSupport.ab3"
00018546 <CLIModeSupport.ab3@782> XINCLUDE "CLIModeSupport.ab3"
00018584 <CLIModeSupport.ab3@783> XINCLUDE "CLIModeSupport.ab3"
00018588 <CLIModeSupport.ab3@784> XINCLUDE "CLIModeSupport.ab3"
000185C6 <CLIModeSupport.ab3@785> XINCLUDE "CLIModeSupport.ab3"
000185CA <CLIModeSupport.ab3@786> XINCLUDE "CLIModeSupport.ab3"
000185F0 <CLIModeSupport.ab3@788> XINCLUDE "CLIModeSupport.ab3"
00018616 <CLIModeSupport.ab3@789> XINCLUDE "CLIModeSupport.ab3"
0001863C <CLIModeSupport.ab3@790> XINCLUDE "CLIModeSupport.ab3"
00018662 <CLIModeSupport.ab3@791> XINCLUDE "CLIModeSupport.ab3"
00018688 <CLIModeSupport.ab3@792> XINCLUDE "CLIModeSupport.ab3"
000186DE <CLIModeSupport.ab3@793> XINCLUDE "CLIModeSupport.ab3"
00018734 <CLIModeSupport.ab3@794> XINCLUDE "CLIModeSupport.ab3"
00018782 <CLIModeSupport.ab3@795> XINCLUDE "CLIModeSupport.ab3"
000187D8 <CLIModeSupport.ab3@796> XINCLUDE "CLIModeSupport.ab3"
000187FE <CLIModeSupport.ab3@797> XINCLUDE "CLIModeSupport.ab3"
00018824 <CLIModeSupport.ab3@798> XINCLUDE "CLIModeSupport.ab3"
0001884A <CLIModeSupport.ab3@799> XINCLUDE "CLIModeSupport.ab3"
000188A0 <CLIModeSupport.ab3@800> XINCLUDE "CLIModeSupport.ab3"
000188EE <CLIModeSupport.ab3@801> XINCLUDE "CLIModeSupport.ab3"
000189A8 <CLIModeSupport.ab3@802> XINCLUDE "CLIModeSupport.ab3"
000189FE <CLIModeSupport.ab3@803> XINCLUDE "CLIModeSupport.ab3"
00018A24 <CLIModeSupport.ab3@804> XINCLUDE "CLIModeSupport.ab3"
00018A4A <CLIModeSupport.ab3@805> XINCLUDE "CLIModeSupport.ab3"
00018A70 <CLIModeSupport.ab3@806> XINCLUDE "CLIModeSupport.ab3"
00018AC6 <CLIModeSupport.ab3@807> XINCLUDE "CLIModeSupport.ab3"
00018B1C <CLIModeSupport.ab3@808> XINCLUDE "CLIModeSupport.ab3"
00018B6A <CLIModeSupport.ab3@809> XINCLUDE "CLIModeSupport.ab3"
00018BB8 <CLIModeSupport.ab3@810> XINCLUDE "CLIModeSupport.ab3"
00018C06 <CLIModeSupport.ab3@811> XINCLUDE "CLIModeSupport.ab3"
00018C54 <CLIModeSupport.ab3@812> XINCLUDE "CLIModeSupport.ab3"
00018CA2 <CLIModeSupport.ab3@813> XINCLUDE "CLIModeSupport.ab3"
00018CF0 <CLIModeSupport.ab3@814> XINCLUDE "CLIModeSupport.ab3"
00018D3E <CLIModeSupport.ab3@815> XINCLUDE "CLIModeSupport.ab3"
00018D64 <CLIModeSupport.ab3@816> XINCLUDE "CLIModeSupport.ab3"
00018D8A <CLIModeSupport.ab3@817> XINCLUDE "CLIModeSupport.ab3"
00018DB0 <CLIModeSupport.ab3@818> XINCLUDE "CLIModeSupport.ab3"
00018DFE <CLIModeSupport.ab3@819> XINCLUDE "CLIModeSupport.ab3"
00018E4C <CLIModeSupport.ab3@820> XINCLUDE "CLIModeSupport.ab3"
00018EA2 <CLIModeSupport.ab3@821> XINCLUDE "CLIModeSupport.ab3"
00018EF0 <CLIModeSupport.ab3@822> XINCLUDE "CLIModeSupport.ab3"
00018F3E <CLIModeSupport.ab3@823> XINCLUDE "CLIModeSupport.ab3"
00018F8C <CLIModeSupport.ab3@824> XINCLUDE "CLIModeSupport.ab3"
00018FB2 <CLIModeSupport.ab3@825> XINCLUDE "CLIModeSupport.ab3"
00018FD8 <CLIModeSupport.ab3@826> XINCLUDE "CLIModeSupport.ab3"
00018FFE <CLIModeSupport.ab3@827> XINCLUDE "CLIModeSupport.ab3"
00019036 <CLIModeSupport.ab3@828> XINCLUDE "CLIModeSupport.ab3"
0001905E <CLIModeSupport.ab3@829> XINCLUDE "CLIModeSupport.ab3"
00019072 <CLIModeSupport.ab3@830> XINCLUDE "CLIModeSupport.ab3"
000190E6 <CLIModeSupport.ab3@831> XINCLUDE "CLIModeSupport.ab3"
0001912C <CLIModeSupport.ab3@832> XINCLUDE "CLIModeSupport.ab3"
000191DA <CLIModeSupport.ab3@833> XINCLUDE "CLIModeSupport.ab3"
00019246 <CLIModeSupport.ab3@834> XINCLUDE "CLIModeSupport.ab3"
00019256 <CLIModeSupport.ab3@835> XINCLUDE "CLIModeSupport.ab3"
0001927C <CLIModeSupport.ab3@837> XINCLUDE "CLIModeSupport.ab3"
00019286 <CLIModeSupport.ab3@839> XINCLUDE "CLIModeSupport.ab3"
000192B0 <CLIModeSupport.ab3@840> XINCLUDE "CLIModeSupport.ab3"
000192B6 <CLIModeSupport.ab3@841> XINCLUDE "CLIModeSupport.ab3"
000192C6 <CLIModeSupport.ab3@843> XINCLUDE "CLIModeSupport.ab3"
00019366 <CLIModeSupport.ab3@845> XINCLUDE "CLIModeSupport.ab3"
000193A6 <CLIModeSupport.ab3@846> XINCLUDE "CLIModeSupport.ab3"
000193AC <CLIModeSupport.ab3@848> XINCLUDE "CLIModeSupport.ab3"
00019402 <CLIModeSupport.ab3@849> XINCLUDE "CLIModeSupport.ab3"
0001940C <CLIModeSupport.ab3@851> XINCLUDE "CLIModeSupport.ab3"
00019416 <CLIModeSupport.ab3@853> XINCLUDE "CLIModeSupport.ab3"
00019430 <CLIModeSupport.ab3@854> XINCLUDE "CLIModeSupport.ab3"
00019452 <CLIModeSupport.ab3@910> XINCLUDE "CLIModeSupport.ab3"
00019474 <CLIModeSupport.ab3@911> XINCLUDE "CLIModeSupport.ab3"
000194CE <CLIModeSupport.ab3@912> XINCLUDE "CLIModeSupport.ab3"
000194F0 <CLIModeSupport.ab3@913> XINCLUDE "CLIModeSupport.ab3"
0001954A <CLIModeSupport.ab3@914> XINCLUDE "CLIModeSupport.ab3"
0001958C <CLIModeSupport.ab3@915> XINCLUDE "CLIModeSupport.ab3"
00019592 <CLIModeSupport.ab3@917> XINCLUDE "CLIModeSupport.ab3"
000195A0 <CLIModeSupport.ab3@918> XINCLUDE "CLIModeSupport.ab3"
000195A6 <CLIModeSupport.ab3@920> XINCLUDE "CLIModeSupport.ab3"
000195BA <CLIModeSupport.ab3@921> XINCLUDE "CLIModeSupport.ab3"
000195C4 <CLIModeSupport.ab3@922> XINCLUDE "CLIModeSupport.ab3"
0001963E <CLIModeSupport.ab3@923> XINCLUDE "CLIModeSupport.ab3"
00019648 <CLIModeSupport.ab3@924> XINCLUDE "CLIModeSupport.ab3"
0001964E <CLIModeSupport.ab3@925> XINCLUDE "CLIModeSupport.ab3"
00019662 <CLIModeSupport.ab3@928> XINCLUDE "CLIModeSupport.ab3"
0001966C <CLIModeSupport.ab3@929> XINCLUDE "CLIModeSupport.ab3"
000196EC <CLIModeSupport.ab3@930> XINCLUDE "CLIModeSupport.ab3"
000196F6 <CLIModeSupport.ab3@931> XINCLUDE "CLIModeSupport.ab3"
000196FC <CLIModeSupport.ab3@932> XINCLUDE "CLIModeSupport.ab3"
00019710 <CLIModeSupport.ab3@935> XINCLUDE "CLIModeSupport.ab3"
0001971A <CLIModeSupport.ab3@936> XINCLUDE "CLIModeSupport.ab3"
00019762 <CLIModeSupport.ab3@937> XINCLUDE "CLIModeSupport.ab3"
0001976C <CLIModeSupport.ab3@939> XINCLUDE "CLIModeSupport.ab3"
00019772 <CLIModeSupport.ab3@940> XINCLUDE "CLIModeSupport.ab3"
00019786 <CLIModeSupport.ab3@943> XINCLUDE "CLIModeSupport.ab3"
00019790 <CLIModeSupport.ab3@944> XINCLUDE "CLIModeSupport.ab3"
000197D8 <CLIModeSupport.ab3@945> XINCLUDE "CLIModeSupport.ab3"
000197E2 <CLIModeSupport.ab3@946> XINCLUDE "CLIModeSupport.ab3"
000197E8 <CLIModeSupport.ab3@947> XINCLUDE "CLIModeSupport.ab3"
000197FC <CLIModeSupport.ab3@950> XINCLUDE "CLIModeSupport.ab3"
00019822 <CLIModeSupport.ab3@951> XINCLUDE "CLIModeSupport.ab3"
00019836 <CLIModeSupport.ab3@954> XINCLUDE "CLIModeSupport.ab3"
0001985C <CLIModeSupport.ab3@955> XINCLUDE "CLIModeSupport.ab3"
00019870 <CLIModeSupport.ab3@958> XINCLUDE "CLIModeSupport.ab3"
00019896 <CLIModeSupport.ab3@959> XINCLUDE "CLIModeSupport.ab3"
000198AA <CLIModeSupport.ab3@962> XINCLUDE "CLIModeSupport.ab3"
000198B4 <CLIModeSupport.ab3@963> XINCLUDE "CLIModeSupport.ab3"
000198E2 <CLIModeSupport.ab3@964> XINCLUDE "CLIModeSupport.ab3"
00019932 <CLIModeSupport.ab3@965> XINCLUDE "CLIModeSupport.ab3"
00019952 <CLIModeSupport.ab3@966> XINCLUDE "CLIModeSupport.ab3"
0001996A <CLIModeSupport.ab3@967> XINCLUDE "CLIModeSupport.ab3"
00019A4E <CLIModeSupport.ab3@968> XINCLUDE "CLIModeSupport.ab3"
00019A58 <CLIModeSupport.ab3@969> XINCLUDE "CLIModeSupport.ab3"
00019A5E <CLIModeSupport.ab3@970> XINCLUDE "CLIModeSupport.ab3"
00019A60 <CLIModeSupport.ab3@972> XINCLUDE "CLIModeSupport.ab3"
00019A74 <CLIModeSupport.ab3@973> XINCLUDE "CLIModeSupport.ab3"
00019AA6 <CLIModeSupport.ab3@976> XINCLUDE "CLIModeSupport.ab3"
00019AAC <CLIModeSupport.ab3@977> XINCLUDE "CLIModeSupport.ab3"
00019AF0 <CLIModeSupport.ab3@978> XINCLUDE "CLIModeSupport.ab3"
00019B02 <CLIModeSupport.ab3@979> XINCLUDE "CLIModeSupport.ab3"
00019B14 <CLIModeSupport.ab3@980> XINCLUDE "CLIModeSupport.ab3"
00019B1E <CLIModeSupport.ab3@981> XINCLUDE "CLIModeSupport.ab3"
00019B24 <CLIModeSupport.ab3@982> XINCLUDE "CLIModeSupport.ab3"
00019B2E <CLIModeSupport.ab3@984> XINCLUDE "CLIModeSupport.ab3"
00019B48 <CLIModeSupport.ab3@985> XINCLUDE "CLIModeSupport.ab3"
00019B48 <AmiBlitz3.ab2@95> XINCLUDE "CLIModeSupport.ab3"
00019BC8 <AmiBlitz3.ab2@100> dynassign.s = dos_GetToolString{"ASSIGN",default_assign$}       ; replaced hardcoded path  tomsmart1 2012 03 09
00019C00 <AmiBlitz3.ab2@101> If dynassign <> ""
00019C16 <AmiBlitz3.ab2@102>     *AssignSema.SignalSemaphore = FindSemaphore_(&dynassign)    ; does it already exist?
00019C20 <AmiBlitz3.ab2@103>     If *AssignSema
00019C30 <AmiBlitz3.ab2@104>       ObtainSemaphoreShared_ *AssignSema
00019C36 <AmiBlitz3.ab2@105>     Else                                                        ; no, create one...
00019C56 <AmiBlitz3.ab2@106>       *AssignSema = AllocVec_ (SizeOf.SignalSemaphore,#MEMF_PUBLIC|#MEMF_CLEAR)
00019C60 <AmiBlitz3.ab2@107>       If *AssignSema
00019C70 <AmiBlitz3.ab2@108>         InitSemaphore_ *AssignSema
00019CA4 <AmiBlitz3.ab2@110>         *AssignSema\ss_Link\ln_Name = AllocVec_(FLen(dynassign)+1,#MEMF_PUBLIC|#MEMF_CLEAR)
00019CB6 <AmiBlitz3.ab2@111>         If *AssignSema\ss_Link\ln_Name
00019CF2 <AmiBlitz3.ab2@112>           Poke.s  *AssignSema\ss_Link\ln_Name,dynassign
00019CFE <AmiBlitz3.ab2@114>         *AssignSema\ss_Link\ln_Pri  = 1
00019D0A <AmiBlitz3.ab2@115>         *AssignSema\ss_Link\ln_Type = #NT_SIGNALSEM
00019D1A <AmiBlitz3.ab2@117>         AddSemaphore_ *AssignSema
00019D2A <AmiBlitz3.ab2@118>         ObtainSemaphoreShared_ *AssignSema
00019D76 <AmiBlitz3.ab2@124>   mydir.s = dos_GetProgDir{"Sys:"}
00019DD6 <AmiBlitz3.ab2@125>   If dos_SetAssign{dynassign,mydir,False}
00019E6A <AmiBlitz3.ab2@126>     dos_AddAssign{"LIBS:",dos_AddPart{dynassign,"Libs"}}
00019EA2 <AmiBlitz3.ab2@129>   Poke$ ?str_blitz3assign,dynassign
00019F24 <AmiBlitz3.ab2@130>   Poke$ ?str_defaultdbug,dos_AddPart{dynassign,"Debug/DefaultDBug"}
00019FA6 <AmiBlitz3.ab2@133>   Poke$ ?str_path_acidlibs,dos_AddPart{dynassign, "BlitzLibs/AcidLibs"}
0001A028 <AmiBlitz3.ab2@134>   Poke$ ?str_path_deflibs ,dos_AddPart{dynassign, "BlitzLibs/DefLibs" }
0001A0AA <AmiBlitz3.ab2@135>   Poke$ ?str_path_userlibs,dos_AddPart{dynassign, "BlitzLibs/UserLibs"}
0001A12C <AmiBlitz3.ab2@136>   Poke$ ?str_path_includes,dos_AddPart{dynassign, "Sourcecodes/Includes"}
0001A1A0 <AmiBlitz3.ab2@137>   my_systemdir$    = dos_AddPart{dynassign, "System"}
0001A214 <AmiBlitz3.ab2@138>   my_residentsdir$ = dos_AddPart{dynassign, "BlitzLibs/Residents"}
0001A288 <AmiBlitz3.ab2@139>   my_blitzlibsdir$ = dos_AddPart{dynassign, "BlitzLibs"}
0001A2B6 <AmiBlitz3.ab2@140>   dos_CreateDir{my_blitzlibsdir$}
0001A2DA <AmiBlitz3.ab2@141>   dos_CreateDir{Peek$(?str_path_userlibs)}
0001A308 <AmiBlitz3.ab2@142>   dos_CreateDir{my_residentsdir$}
0001A336 <AmiBlitz3.ab2@143>   dos_CreateDir{my_systemdir$}
0001A400 <AmiBlitz3.ab2@149> pedfile$ = dos_GetToolString{"EDITOR",dos_AddPart{my_systemdir$,"PED"}}
0001A438 <AmiBlitz3.ab2@150> Poke.s ?str_pedfile,pedfile$
0001A476 <AmiBlitz3.ab2@152> If dos_GetToolState{"START_WITHOUT_LIBS"} = -1
0001A486 <AmiBlitz3.ab2@153>   Poke.b ?start_without_libs,1
0001A48C <AmiBlitz3.ab2@154> Else
0001A49C <AmiBlitz3.ab2@155>   Poke.b ?start_without_libs,0
0001A4C2 <AmiBlitz3.ab2@158> !TRANS_INIT{"AmiBlitz3"}     ; init localization via translation.include
0001A4CE <AmiBlitz3.ab2@162> dbg_fid.l = -1 ; no debug file id yet!
0001A4D8 <AmiBlitz3.ab2@164> If CLIMode
0001A4DE <AmiBlitz3.ab2@167>   err.l      = False                                       ; indicate that an error has occured
0001A4E4 <AmiBlitz3.ab2@168>   showhelp.l = False                                       ; show the CLI tool's help
0001A53C <AmiBlitz3.ab2@171>   cli_progpath.s     = dos_GetProgDir{default_assign$}     ; replaced hardcoded path  tomsmart1 2012 03 09
0001A564 <AmiBlitz3.ab2@172>   cli_sourcefile.s   = ""
0001A58C <AmiBlitz3.ab2@173>   cli_exefile.s      = ""
0001A5B4 <AmiBlitz3.ab2@174>   cli_savefile.s     = ""
0001A5DC <AmiBlitz3.ab2@175>   cli_dumpfile.s     = ""
0001A604 <AmiBlitz3.ab2@176>   cli_includepath.s  = ""
0001A62C <AmiBlitz3.ab2@177>   cli_blitzlibpath.s = ""
0001A632 <AmiBlitz3.ab2@178>   cli_debuginfo.l    = False
0001A638 <AmiBlitz3.ab2@179>   cli_run.l          = False
0001A640 <AmiBlitz3.ab2@180>   cli_dumpflags.l    = $FFFFFFFF
0001A668 <AmiBlitz3.ab2@181>   cli_info.s         = ""
0001A66E <AmiBlitz3.ab2@182>   cli_release.l      = False
0001A678 <AmiBlitz3.ab2@183>   cli_numargs.l      = dos_GetNumArgs{}
0001A67E <AmiBlitz3.ab2@184>   cli_gui.l          = False
0001A686 <AmiBlitz3.ab2@185>   cli_dumpform.l     = 1 ; 0 = bin, 1 = ASCII
0001A68E <AmiBlitz3.ab2@186>   cli_verbose.l      = 1
0001A6A6 <AmiBlitz3.ab2@187>   If cli_numargs=0 Then showhelp=True
0001A6D6 <AmiBlitz3.ab2@191>     arg.s = dos_GetNextArg{}                               ; get the next CLI argument
0001A722 <AmiBlitz3.ab2@192>     larg.s = LCase$(arg)                                   ; lower case the option string
0001A7EA <AmiBlitz3.ab2@193>     If Left$(larg,1)="-" Then larg = Right$(larg,FLen(larg)-1)
0001A820 <AmiBlitz3.ab2@194>     Select larg
0001A86C <AmiBlitz3.ab2@195>       Case "s" : larg="source"
0001A8BE <AmiBlitz3.ab2@196>       Case "e" : larg="exe"
0001A910 <AmiBlitz3.ab2@197>       Case "d" : larg="debug"
0001A962 <AmiBlitz3.ab2@198>       Case "r" : larg="release"
0001A9B4 <AmiBlitz3.ab2@199>       Case "h" : larg="help"
0001AA06 <AmiBlitz3.ab2@200>       Case "v" : larg="verbose"
0001AA14 <AmiBlitz3.ab2@201>     End Select
0001AA4A <AmiBlitz3.ab2@203>     Select larg
0001AA9E <AmiBlitz3.ab2@204>       Case "exe"      : cli_exefile     = dos_GetNextArg{}
0001AAF8 <AmiBlitz3.ab2@205>       Case "source"   : cli_sourcefile  = dos_GetNextArg{}
0001AB52 <AmiBlitz3.ab2@206>       Case "save"     : cli_savefile    = dos_GetNextArg{}
0001AB82 <AmiBlitz3.ab2@207>       Case "debug"    : cli_debuginfo   = True
0001ABB2 <AmiBlitz3.ab2@208>       Case "run"      : cli_run         = True
0001ABE2 <AmiBlitz3.ab2@209>       Case "release"  : cli_release     = True
0001AC12 <AmiBlitz3.ab2@210>       Case "ped"      : cli_gui         = True
0001AC6C <AmiBlitz3.ab2@211>       Case "dform"    : cli_dumpform.l  = Vallong(dos_GetNextArg{})
0001ACDE <AmiBlitz3.ab2@212>       Case "dump"     : cli_info        = LCase$(dos_GetNextArg{})
0001AD0E <AmiBlitz3.ab2@213>                         cli_dumpfile    = dos_GetNextArg{}
0001AD16 <AmiBlitz3.ab2@214>                         cli_dumpflags   = $0
0001AD76 <AmiBlitz3.ab2@215>                         If Instr(cli_info,"all"  ) Then cli_dumpflags | $FFFFFFFF
0001ADD6 <AmiBlitz3.ab2@216>                         If Instr(cli_info,"token") Then cli_dumpflags | #DUMPFLG_TOKENS
0001AE36 <AmiBlitz3.ab2@217>                         If Instr(cli_info,"label") Then cli_dumpflags | #DUMPFLG_LABELS
0001AE96 <AmiBlitz3.ab2@218>                         If Instr(cli_info,"var"  ) Then cli_dumpflags | #DUMPFLG_VARS
0001AEF6 <AmiBlitz3.ab2@219>                         If Instr(cli_info,"const") Then cli_dumpflags | #DUMPFLG_CONSTANTS
0001AF56 <AmiBlitz3.ab2@220>                         If Instr(cli_info,"func" ) Then cli_dumpflags | #DUMPFLG_FUNCTIONS
0001AFB6 <AmiBlitz3.ab2@221>                         If Instr(cli_info,"macro") Then cli_dumpflags | #DUMPFLG_MACROS
0001B016 <AmiBlitz3.ab2@222>                         If Instr(cli_info,"type" ) Then cli_dumpflags | #DUMPFLG_NEWTYPES
0001B076 <AmiBlitz3.ab2@223>                         If Instr(cli_info,"lib"  ) Then cli_dumpflags | #DUMPFLG_LIBS
0001B088 <AmiBlitz3.ab2@224>                         If cli_dumpflags = $0
0001B08E <AmiBlitz3.ab2@225>                          err=True
0001B122 <AmiBlitz3.ab2@226>                          NPrint "\\1b[1m*** ERROR: Invalid flags for dumpfile \\22",cli_info,"\\22 specified!\\1b[0m"
0001B17C <AmiBlitz3.ab2@228>       Case "verbose"  : cli_verbose     = Vallong(dos_GetNextArg{})
0001B1AC <AmiBlitz3.ab2@229>       Case "h"        : showhelp        = True             ; show the help and quit
0001B1B2 <AmiBlitz3.ab2@230>       Default
0001B1EA <AmiBlitz3.ab2@231>         If arg><""
0001B27E <AmiBlitz3.ab2@232>           NPrint "\\1b[1m*** ERROR: Unknown option \\22",arg,"\\22 specified!\\1b[0m"
0001B284 <AmiBlitz3.ab2@233>           err = True
0001B292 <AmiBlitz3.ab2@235>     End Select
0001B2DE <AmiBlitz3.ab2@236>   Until arg = "" OR err=True          ; until we processed all arguments
0001B300 <AmiBlitz3.ab2@239>   If err><False OR showhelp = True
0001B30A <AmiBlitz3.ab2@240>     If showhelp
0001B36C <AmiBlitz3.ab2@241>     NPrint "AmiBlitz ",Peek.s(?myversion)
0001B3A4 <AmiBlitz3.ab2@242>     NPrint "\\nSyntax: AmiBlitz3 [options]"
0001B3DC <AmiBlitz3.ab2@243>     NPrint "\\nOptions:"
0001B414 <AmiBlitz3.ab2@244>     NPrint "  -(s)ource <file>    : input source code filename (bb2, ab2 or ab3)"
0001B44C <AmiBlitz3.ab2@245>     NPrint "  -(e)xe <file>       : output executable filename"
0001B484 <AmiBlitz3.ab2@246>     NPrint "  -(d)ebug            : compile with debug info"
0001B4BC <AmiBlitz3.ab2@247>     NPrint "  -(r)elease          : create release executable (size optimized)"
0001B4F4 <AmiBlitz3.ab2@248>     NPrint "  -run                : run compiled program"
0001B52C <AmiBlitz3.ab2@249>     NPrint "  -dump <info> <file> : dump compiler internals to file"
0001B564 <AmiBlitz3.ab2@250>     NPrint "                        (info=all|token|label|var|func|const|macro|type|lib)"
0001B59C <AmiBlitz3.ab2@251>     NPrint "  -dform <n>          : format of compiler internals dump (0=bin, 1=ASCII; default=1)"
0001B5D4 <AmiBlitz3.ab2@252>     NPrint "  -PED                : start AmiBlitz3 IDE (PED)"
0001B60C <AmiBlitz3.ab2@253>     NPrint "  -save <file>        : re-save source code (convert format, if needed)"
0001B644 <AmiBlitz3.ab2@254>     NPrint "  -(v)erbose <n>      : set verbose level (0, 1 or 2; default=1)"
0001B67C <AmiBlitz3.ab2@255>     NPrint "  -(h)elp             : show this help"
0001B6B4 <AmiBlitz3.ab2@256>     NPrint "\\nExample:"
0001B6EC <AmiBlitz3.ab2@257>     NPrint "  AmiBlitz3 -s \\22DH0:Sourcecodes/MyProgram.ab3\\22 -e RAM:MyProgram.exe"
0001B724 <AmiBlitz3.ab2@258>     NPrint "\\nNote: To start the AmiBlitz3 IDE, run from Workbench or with -PED option."
0001B72A <AmiBlitz3.ab2@261>     Goto abnormal_exit
0001B746 <AmiBlitz3.ab2@264>   If cli_gui        Then CLIMode = False : error_SetFlags{#error_requester}
0001B7AA <AmiBlitz3.ab2@265>   If cli_sourcefile Then Poke.s ?str_tempfilename,cli_sourcefile
0001B7BA <AmiBlitz3.ab2@268> Poke.l ?CLIMode,CLIMode
0001B7DE <AmiBlitz3.ab2@298>   Dim incdim.s (#maxincludes)
0001B802 <AmiBlitz3.ab2@299>   Dim incline.l(#maxincludes)
0001B81C <AmiBlitz3.ab2@565> Function.s Get_Libinfo{addr_libnum.l}
0001B828 <AmiBlitz3.ab2@567>   lib_ab2.b = False : lib_os.b = False
0001B82E <AmiBlitz3.ab2@568>   addr_counter.l = addr_libnum
0001B836 <AmiBlitz3.ab2@569>   skip.l = 0
0001B848 <AmiBlitz3.ab2@570>   If addr_counter=0
0001B876 <AmiBlitz3.ab2@571>     error{"INTERNAL: \\__THIS_FUNCTION: Invalid pointer!"}
0001B894 <AmiBlitz3.ab2@572>     Function Return ""
0001B8A2 <AmiBlitz3.ab2@577>     mem.l = Peek.l(addr_counter)
0001B8B0 <AmiBlitz3.ab2@582>     addr_counter + 2
0001B8D0 <AmiBlitz3.ab2@583>     If (mem = $0000ffff) Then lib_ab2= True : skip = 8
0001B8EA <AmiBlitz3.ab2@584>     If (mem LSR 16) = $ffe2
0001B8F0 <AmiBlitz3.ab2@586>       lib_os = True
0001B8F8 <AmiBlitz3.ab2@587>       skip = 10
0001B93E <AmiBlitz3.ab2@588>       If Peek$(addr_counter+skip) = "" Then skip + 4
0001B982 <AmiBlitz3.ab2@590>   Until (lib_ab2=True OR lib_os = True) OR (addr_counter>addr_libnum + $400)
0001B998 <AmiBlitz3.ab2@592>   If (addr_counter>addr_libnum + $400)
0001B9B6 <AmiBlitz3.ab2@594>     Function Return ""
0001B9BC <AmiBlitz3.ab2@595>   Else
0001B9E0 <AmiBlitz3.ab2@596>     Function Return Peek$(addr_counter + skip)
0001B9EA <AmiBlitz3.ab2@598> End Function
0001BA08 <AmiBlitz3.ab2@638>   !asm
0001BA0E <AmiBlitz3.ab2@639>   MOVEA.l _execbase,A6
0001BA12 <AmiBlitz3.ab2@640>   MOVEM.l d0/a0,-(a7)
0001BA14 <AmiBlitz3.ab2@642>   MOVEQ #127,d0
0001BA1A <AmiBlitz3.ab2@643>   LEA chartab,a0
0001BA20 <AmiBlitz3.ab2@646>     MOVE.b #1,128(a0)
0001BA22 <AmiBlitz3.ab2@647>     CLR.b (a0)+
0001BA26 <AmiBlitz3.ab2@648>   DBF d0,'l12
0001BA2C <AmiBlitz3.ab2@650>   LEA chartab,a0
0001BA30 <AmiBlitz3.ab2@651>   MOVE.b #1,(a0)
0001BA36 <AmiBlitz3.ab2@652>   MOVE.b #1,","(a0)
0001BA3C <AmiBlitz3.ab2@653>   MOVE.b #1,";"(a0)
0001BA42 <AmiBlitz3.ab2@654>   MOVE.b #1,":"(a0)
0001BA48 <AmiBlitz3.ab2@655>   MOVE.b #1,"("(a0)
0001BA4E <AmiBlitz3.ab2@656>   MOVE.b #1,")"(a0)
0001BA54 <AmiBlitz3.ab2@657>   MOVE.b #1,"="(a0)
0001BA5A <AmiBlitz3.ab2@658>   MOVE.b #1,"+"(a0)
0001BA60 <AmiBlitz3.ab2@659>   MOVE.b #1,"-"(a0)
0001BA66 <AmiBlitz3.ab2@660>   MOVE.b #1,"*"(a0)
0001BA6C <AmiBlitz3.ab2@661>   MOVE.b #1,"/"(a0)
0001BA72 <AmiBlitz3.ab2@662>   MOVE.b #1,"$"(a0)
0001BA78 <AmiBlitz3.ab2@663>   MOVE.b #1,"%"(a0)
0001BA7E <AmiBlitz3.ab2@664>   MOVE.b #1,"."(a0)
0001BA84 <AmiBlitz3.ab2@665>   MOVE.b #1,"["(a0)
0001BA8A <AmiBlitz3.ab2@666>   MOVE.b #1,"]"(a0)
0001BA90 <AmiBlitz3.ab2@667>   MOVE.b #1,"{"(a0)
0001BA96 <AmiBlitz3.ab2@668>   MOVE.b #1,"}"(a0)
0001BA9C <AmiBlitz3.ab2@669>   MOVE.b #1,"\"(a0)
0001BAA2 <AmiBlitz3.ab2@670>   MOVE.b #1,">"(a0)
0001BAA8 <AmiBlitz3.ab2@671>   MOVE.b #1,"<"(a0)
0001BAAE <AmiBlitz3.ab2@672>   MOVE.b #1,"&"(a0)
0001BAB4 <AmiBlitz3.ab2@673>   MOVE.b #1,"|"(a0)
0001BABA <AmiBlitz3.ab2@674>   MOVE.b #1,"^"(a0)
0001BAC0 <AmiBlitz3.ab2@675>   MOVE.b #1,$7e(a0)
0001BAC6 <AmiBlitz3.ab2@676>   MOVE.w #$0101,1(a0)
0001BACC <AmiBlitz3.ab2@678>   LEA instrtab,a0
0001BAD2 <AmiBlitz3.ab2@679>   MOVE.l #labelhash-instrtab,d0
0001BAD4 <AmiBlitz3.ab2@680>   ASR.l #2,d0
0001BAD6 <AmiBlitz3.ab2@681>   SUBQ.l #1,d0
0001BAD8 <AmiBlitz3.ab2@684>    CLR.l (a0)+
0001BADA <AmiBlitz3.ab2@685>    SUBQ.l #1,d0
0001BADE <AmiBlitz3.ab2@686>   BNE 'l10
0001BAE4 <AmiBlitz3.ab2@688>   LEA allowtab,a0
0001BAEA <AmiBlitz3.ab2@689>   MOVE.l #255,d0
0001BAEC <AmiBlitz3.ab2@692>     CLR.b (a0)+
0001BAF0 <AmiBlitz3.ab2@693>   DBF d0,'la1
0001BAF6 <AmiBlitz3.ab2@695>   LEA allowtab,a0
0001BAFC <AmiBlitz3.ab2@696>   MOVE.b #1,$7d(a0)
0001BB02 <AmiBlitz3.ab2@697>   MOVE.b #1,$7c(a0)
0001BB08 <AmiBlitz3.ab2@698>   MOVE.b #1,$44(a0)
0001BB0E <AmiBlitz3.ab2@699>   MOVE.b #1,$45(a0)
0001BB14 <AmiBlitz3.ab2@700>   MOVE.b #1,$b9(a0)
0001BB1A <AmiBlitz3.ab2@701>   MOVE.b #1,$89(a0)
0001BB20 <AmiBlitz3.ab2@702>   MOVE.b #1,$ce(a0)
0001BB26 <AmiBlitz3.ab2@703>   MOVE.b #1,$cf(a0)
0001BB2C <AmiBlitz3.ab2@704>   MOVE.b #1,$d0(a0)
0001BB32 <AmiBlitz3.ab2@705>   MOVE.b #1,$cd(a0)
0001BB34 <AmiBlitz3.ab2@706>   MOVEQ #0,d0
0001BB3A <AmiBlitz3.ab2@708>   MOVEA.l _execbase,a6
0001BB40 <AmiBlitz3.ab2@713>   MOVE.l #$10000,d0
0001BB46 <AmiBlitz3.ab2@714>   MOVE.l #80000,d1
0001BB48 <AmiBlitz3.ab2@715>   MOVE.l d1,d2
0001BB4C <AmiBlitz3.ab2@716>   JSR _CreatePool(a6)                                      ; alloc memory for own stuff
0001BB52 <AmiBlitz3.ab2@717>   MOVE.l d0,mempool
0001BB56 <AmiBlitz3.ab2@718>   MOVEM.l (a7)+,d0/a0
0001BB5C <AmiBlitz3.ab2@719>   TST.l mempool
0001BB60 <AmiBlitz3.ab2@720>   BEQ shutdown_compiler
0001BB64 <AmiBlitz3.ab2@722>   MOVEA.l $114(A6),A4                                      ; get adress of this.Task-Structure
0001BB6A <AmiBlitz3.ab2@723>   MOVE.l A4,ptr_ThisTask
0001BB6E <AmiBlitz3.ab2@725>   BSR.w open_doslibrary
0001BB72 <AmiBlitz3.ab2@726>   BEQ.w shutdown_compiler
0001BB78 <AmiBlitz3.ab2@728>   MOVE.l D2,stacksize
0001BB7A <AmiBlitz3.ab2@732>   MOVEQ.l #$00,D0
0001BB80 <AmiBlitz3.ab2@733>   LEA tokens,A0
0001BB82 <AmiBlitz3.ab2@736>     ADDQ.w #1,D0
0001BB84 <AmiBlitz3.ab2@737>     MOVE.l (A0),D1
0001BB88 <AmiBlitz3.ab2@738>     BEQ.w JL_0_2D1C
0001BB8A <AmiBlitz3.ab2@739>     MOVEA.l D1,A0
0001BB8E <AmiBlitz3.ab2@740> BRA.w JL_0_2D0E
0001BB94 <AmiBlitz3.ab2@743>   MOVE.l A0,end_of_tokenlist
0001BB98 <AmiBlitz3.ab2@745>   BSR.w makeasmtable
0001BBA0 <AmiBlitz3.ab2@746>   MOVE.w #$FFFF,returncode_org                             ;#-1,returncode
0001BBA4 <AmiBlitz3.ab2@748>   BSR.w open_mathlibrary
0001BBA8 <AmiBlitz3.ab2@749>   BEQ.w freemem_and_quit4
0001BBAE <AmiBlitz3.ab2@751>   MOVE.l constmaxpc,D0
0001BBB0 <AmiBlitz3.ab2@752>   MOVEQ.l #$02,D1                                          ;chipmem            ;01 org source
0001BBB6 <AmiBlitz3.ab2@753>   MOVEA.l _execbase,A6
0001BBBA <AmiBlitz3.ab2@754>   JSR _AllocMem(A6)                                        ;mem for branch routine
0001BBC0 <AmiBlitz3.ab2@755>   MOVE.l D0,constpcat
0001BBC4 <AmiBlitz3.ab2@756>   BEQ.w freemem_and_quit3
0001BBCA <AmiBlitz3.ab2@757>   ADD.l constmaxpc,D0
0001BBD0 <AmiBlitz3.ab2@758>   MOVE.l D0,constlibat
0001BBD6 <AmiBlitz3.ab2@760>   MOVE.l macrobuffer_size,D0
0001BBDC <AmiBlitz3.ab2@761>   CMP.l #40000,d0
0001BBE0 <AmiBlitz3.ab2@762>   BGE 'ok
0001BBE6 <AmiBlitz3.ab2@763>     MOVE.l #40000,d0
0001BBEC <AmiBlitz3.ab2@764>     MOVE.l d0,macrobuffer_size
0001BBEE <AmiBlitz3.ab2@767>   ADDQ.l #4,d0
0001BBF0 <AmiBlitz3.ab2@768>   MOVEQ.l #$01,D1
0001BBF6 <AmiBlitz3.ab2@769>   MOVEA.l _execbase,A6
0001BBFA <AmiBlitz3.ab2@770>   JSR _AllocMem(A6)                                        ;macro mem
0001BBFC <AmiBlitz3.ab2@771>   MOVE.l d0,a0
0001BC02 <AmiBlitz3.ab2@772>   MOVE.l macrobuffer_size,(a0)+
0001BC04 <AmiBlitz3.ab2@773>   MOVE.l a0,d0
0001BC0A <AmiBlitz3.ab2@774>   MOVE.l D0,ptr_macrobuffer_begin
0001BC0E <AmiBlitz3.ab2@775>   BEQ.w freemem_and_quit2
0001BC14 <AmiBlitz3.ab2@776>   ADD.l macrobuffer_size,D0
0001BC1A <AmiBlitz3.ab2@777>   MOVE.l D0,ptr_macrobuffer_end
0001BC20 <AmiBlitz3.ab2@779>   TST.l CLIMode
0001BC24 <AmiBlitz3.ab2@780>   BEQ load_ped
0001BC4E <AmiBlitz3.ab2@783>   !basic
0001BC58 <AmiBlitz3.ab2@784>   succ.l = InitEmulatedPED{}
0001BC5C <AmiBlitz3.ab2@785>   GetD0 succ
0001BC7A <AmiBlitz3.ab2@786>   !asm
0001BC7C <AmiBlitz3.ab2@787>   TST.l d0
0001BC80 <AmiBlitz3.ab2@788>   BEQ freemem_and_quit
0001BC86 <AmiBlitz3.ab2@789> JMP skip_ped
0001BC8C <AmiBlitz3.ab2@794>   MOVE.l #str_pedfile,D1                                   ; Load PED
0001BC92 <AmiBlitz3.ab2@795>   MOVEA.l _dosbase,A6
0001BC96 <AmiBlitz3.ab2@796>   JSR _LoadSeg(A6)
0001BC9C <AmiBlitz3.ab2@797>   MOVE.l D0,ptr_seg_ped
0001BCA0 <AmiBlitz3.ab2@799>   BEQ.w cant_load_PED         ; was freemem_and_quit  added error massage  that we can't load it  tomsmart1  2012 03
0001BCA2 <AmiBlitz3.ab2@803>   MOVEA.l D0,A2
0001BCA4 <AmiBlitz3.ab2@804>   ADDA.l A2,A2
0001BCA6 <AmiBlitz3.ab2@805>   ADDA.l A2,A2
0001BCAC <AmiBlitz3.ab2@807>   LEA teddata,a1                                           ;lea edstruct,A1
0001BCB2 <AmiBlitz3.ab2@808>   MOVE.l #"TEDY",d1
0001BCB6 <AmiBlitz3.ab2@809>   JSR 4(A2)                                                ; Run PED
0001BCBC <AmiBlitz3.ab2@811>   MOVE.l A0,ped_startup_addr                               ; PED returns address of routine "startup_code"
0001BCC2 <AmiBlitz3.ab2@812>   MOVE.l A1,comdata                                        ; PED returns address of comdata-area in A1
0001BD00 <AmiBlitz3.ab2@814>   !ComData_GetW{comWord_PEDIsAvailable,D0}                 ; if PED_IsAvailable=0, quit AmiBlitz
0001BD04 <AmiBlitz3.ab2@815>   BEQ.w unload_ped
0001BD08 <AmiBlitz3.ab2@816> 
0001BD0C <AmiBlitz3.ab2@817>   BNE old_version_of_PED                                   ; no, than exit
0001BD4A <AmiBlitz3.ab2@823>   !ComData_GetL{comData_Magic,D0}
0001BD50 <AmiBlitz3.ab2@824>   CMP.l ##MagicIdentifier_Long,D0                          ;"~::~",D0    ; replace with a constants  tomsmart1 2012 03 09
0001BD54 <AmiBlitz3.ab2@825>   BNE unload_ped
0001BD8C <AmiBlitz3.ab2@828>   !ComData_SetL{comPtr_Trap15            ,#directTrap15 }
0001BDC4 <AmiBlitz3.ab2@829>   !ComData_SetL{comPtr_DirectBuffer      ,#directbuffer}
0001BDFC <AmiBlitz3.ab2@830>   !ComData_SetL{comPtr_MacroBase         ,#macrobase}
0001BE34 <AmiBlitz3.ab2@831>   !ComData_SetL{comPtr_VarBase           ,#varbase }
0001BE6C <AmiBlitz3.ab2@832>   !ComData_SetL{comPtr_InstrBase         ,#instrtab}
0001BEA4 <AmiBlitz3.ab2@833>   !ComData_SetL{comPtr_LibPointer        ,#libpointer}
0001BEDC <AmiBlitz3.ab2@834>   !ComData_SetL{comPtr_CompilerVersion   ,#myversion }
0001BF14 <AmiBlitz3.ab2@835>   !ComData_SetL{comPtr_VersionInformation,#versioninformation}
0001BF4C <AmiBlitz3.ab2@836>   !ComData_SetL{comPtr_NumberOfBuilds    ,#number_of_builds}
0001BF84 <AmiBlitz3.ab2@837>   !ComData_SetL{comFunc_SaveSource       ,#ab3_SaveSource}
0001BFBC <AmiBlitz3.ab2@838>   !ComData_SetL{comFunc_LoadSource       ,#ab3_LoadSource}
0001BFF4 <AmiBlitz3.ab2@839>   !ComData_SetL{comFunc_ClearSource      ,#ab3_ClearSource}
0001C02C <AmiBlitz3.ab2@842>   !ComData_SetL{comFunc_CalculatExpression       ,#menu_calculator}
0001C064 <AmiBlitz3.ab2@843>   !ComData_SetL{comPtr_CalculatorExpressionString,#str_calcexpression}
0001C09C <AmiBlitz3.ab2@846>   !ComData_SetL{comFunc_BackupXtraData           ,#BackupXtraData}
0001C0D4 <AmiBlitz3.ab2@847>   !ComData_SetL{comFunc_RestoreXtraData          ,#RestoreXtraData}
0001C10C <AmiBlitz3.ab2@849>   !ComData_SetL{comFunc_GetObjectEntry           ,#getobjectentry}
0001C144 <AmiBlitz3.ab2@850>   !ComData_SetL{comFunc_StoreMaxObjects          ,#storemaxobjects}
0001C17C <AmiBlitz3.ab2@852>   !ComData_SetL{comFunc_ReloadResidentsForPED    ,#ReloadResidentsForPED}
0001C1B4 <AmiBlitz3.ab2@853>   !ComData_SetL{comFunc_FreeClearResidentsForPED ,#FreeClearResidentsForPED}    ; add tomsmart1 2012 06 09
0001C1EC <AmiBlitz3.ab2@855>   !ComData_SetL{comPtr_Residents_Table           ,#residents_table}
0001C224 <AmiBlitz3.ab2@856>   !ComData_SetL{comPtr_Stringbuffer_Long         ,#stringbuffer}
0001C25C <AmiBlitz3.ab2@857>   !ComData_SetL{comPtr_Stacksize_Long            ,#stacksize}
0001C294 <AmiBlitz3.ab2@858>   !ComData_SetL{comPtr_Create_Iconfile_Byte      ,#create_iconfile}
0001C2CC <AmiBlitz3.ab2@859>   !ComData_SetL{comPtr_Make_Smallestcode_Byte    ,#make_smallestcode}
0001C304 <AmiBlitz3.ab2@860>   !ComData_SetL{comPtr_Link_Debuginfo_Byte       ,#link_debuginfo}
0001C33C <AmiBlitz3.ab2@861>   !ComData_SetL{comPtr_Use_Debugger_Byte         ,#use_debugger}
0001C374 <AmiBlitz3.ab2@862>   !ComData_SetL{comPtr_Autorun_Byte              ,#autorun}
0001C3AC <AmiBlitz3.ab2@863>   !ComData_SetL{comPtr_Interruptcheck_Byte       ,#interruptcheck}
0001C3E4 <AmiBlitz3.ab2@864>   !ComData_SetL{comPtr_Assemblercheck_Byte       ,#assemblercheck}
0001C41C <AmiBlitz3.ab2@865>   !ComData_SetL{comPtr_Overflowcheck_Byte        ,#overflowcheck}
0001C454 <AmiBlitz3.ab2@866>   !ComData_SetL{comPtr_Number_of_Objects_Word    ,#number_of_objects}
0001C48C <AmiBlitz3.ab2@867>   !ComData_SetL{comPtr_MaxObjects_Value_Word     ,#maxobjects_value}
0001C4C4 <AmiBlitz3.ab2@868>   !ComData_SetL{comPtr_MaxObject_Pos_Word        ,#maxobject_pos}
0001C4CA <AmiBlitz3.ab2@872>   CLR.w returncode_org
0001C4F4 <AmiBlitz3.ab2@874>   !basic
0001C4FE <AmiBlitz3.ab2@875>   If CLIMode
0001C570 <AmiBlitz3.ab2@876>     If cli_verbose>=2 Then NPrint !TRANS{"Loading BlitzLibs."}
0001C58E <AmiBlitz3.ab2@878>   !asm
0001C594 <AmiBlitz3.ab2@882>   TST.b start_without_libs
0001C598 <AmiBlitz3.ab2@883>   BNE skip_loading_libs
0001C59C <AmiBlitz3.ab2@884>     BSR.w call_setpointerbusy
0001C5A6 <AmiBlitz3.ab2@885>     MOVE.l #$FFFFffff,linenumat
0001C5AA <AmiBlitz3.ab2@886>     BSR.w get_libraries
0001C5B0 <AmiBlitz3.ab2@887>     JSR init_libraries
0001C5B4 <AmiBlitz3.ab2@888>     BSR.w init_buffers
0001C5B8 <AmiBlitz3.ab2@889>     BSR.w call_setpointernormal
0001C5BA <AmiBlitz3.ab2@894>   MOVEQ.l #-$01,D0
0001C5C0 <AmiBlitz3.ab2@895>   MOVEA.l _execbase,A6
0001C5C4 <AmiBlitz3.ab2@896>   JSR _AllocSignal(A6)
0001C5CA <AmiBlitz3.ab2@897>   MOVE.l D0,signalNum
0001C5CC <AmiBlitz3.ab2@898>   MOVEQ.l #$00,D1
0001C5CE <AmiBlitz3.ab2@899>   BSET D0,D1
0001C5D4 <AmiBlitz3.ab2@900>   MOVE.l D1,signals
0001C5DA <AmiBlitz3.ab2@904>   MOVE.l #str_defaultdbug,D1
0001C5DE <AmiBlitz3.ab2@905>   MOVEA.l _dosbase(PC),A6
0001C5E2 <AmiBlitz3.ab2@906>   JSR _LoadSeg(A6)
0001C5E8 <AmiBlitz3.ab2@907>   MOVE.l D0,ptr_seg_debugger
0001C5EA <AmiBlitz3.ab2@908>   TST.l d0
0001C5EE <AmiBlitz3.ab2@909>   BNE ok_12
0001C618 <AmiBlitz3.ab2@910>     !basic
0001C66E <AmiBlitz3.ab2@911>     error{!TRANS{"The Debugexecutor `Defaultdbug` was not found.\\nDebugging is not possible."}}
0001C68C <AmiBlitz3.ab2@912>     !asm
0001C692 <AmiBlitz3.ab2@915>   TST.l CLIMode
0001C696 <AmiBlitz3.ab2@916>   BEQ run_ped
0001C6C0 <AmiBlitz3.ab2@922>   !basic
0001C6C6 <AmiBlitz3.ab2@923>   err.l = False
0001C6F2 <AmiBlitz3.ab2@931>   If cli_sourcefile
0001C712 <AmiBlitz3.ab2@932>     lock.l = Lock_(&cli_sourcefile,#ACCESS_READ)
0001C71C <AmiBlitz3.ab2@933>     If lock
0001C740 <AmiBlitz3.ab2@934>       NameFromLock_ lock,&cli_tempstr,1024
0001C76A <AmiBlitz3.ab2@935>       cli_sourcefile.s = Peek.s(&cli_tempstr)
0001C77A <AmiBlitz3.ab2@936>       UnLock_ lock
0001C7A6 <AmiBlitz3.ab2@939>     If cli_exefile
0001C7F8 <AmiBlitz3.ab2@940>       SetCurrentDir{dos_PathPart{cli_sourcefile}}
0001C850 <AmiBlitz3.ab2@941>       path.s = dos_PathPart{cli_exefile}
0001C870 <AmiBlitz3.ab2@942>       lock.l = Lock_(&path,#ACCESS_READ)
0001C87A <AmiBlitz3.ab2@943>       If lock
0001C89E <AmiBlitz3.ab2@944>         NameFromLock_ lock,&cli_tempstr,1024
0001C8C8 <AmiBlitz3.ab2@945>         path.s = Peek.s(&cli_tempstr)
0001C976 <AmiBlitz3.ab2@946>         cli_exefile = dos_AddPart{path,dos_FilePart{cli_exefile}}
0001C986 <AmiBlitz3.ab2@947>         UnLock_ lock
0001C9D0 <AmiBlitz3.ab2@958>   If cli_verbose>=2 Then NPrint "Initializing token hashmap."
0001CA44 <AmiBlitz3.ab2@959> 
0001CA4E <AmiBlitz3.ab2@960>   *PreProcessor.preprocessor = preproc_Create{}
0001CA5E <AmiBlitz3.ab2@961>   Poke.l ?comPtr_PreProcessor,*PreProcessor
0001CA90 <AmiBlitz3.ab2@962>   preproc_LoadTokens{*PreProcessor,TokenHashMapFile}
0001CAA4 <AmiBlitz3.ab2@963>   If *PreProcessor\tokens=#NULL
0001CB1E <AmiBlitz3.ab2@964>     If cli_verbose>=1 Then NPrint "No hashmap found (\\22"+TokenHashMapFile+"\\22), will be created..."
0001CB28 <AmiBlitz3.ab2@965>     preproc_QueryTokens{*PreProcessor}
0001CB5A <AmiBlitz3.ab2@966>     preproc_SaveTokens{*PreProcessor,TokenHashMapFile}
0001CBA6 <AmiBlitz3.ab2@974>   If cli_sourcefile><"" AND err=False
0001CC4C <AmiBlitz3.ab2@975>     If cli_verbose>=2 Then NPrint "Loading sourcecode \\22",cli_sourcefile,"\\22."
0001CC7E <AmiBlitz3.ab2@976>     succ=LoadSource{cli_sourcefile}
0001CC88 <AmiBlitz3.ab2@977>     If succ
0001CCC0 <AmiBlitz3.ab2@978> 
0001CD3A <AmiBlitz3.ab2@979>         If cli_verbose>=1 Then NPrint "Compiling "+cli_sourcefile+"..."
0001CD74 <AmiBlitz3.ab2@980>         comerr.l = CompileSource{cli_exefile,cli_debuginfo,cli_release}
0001CD7E <AmiBlitz3.ab2@982>         If comerr
0001CD84 <AmiBlitz3.ab2@984>         Else
0001CD8A <AmiBlitz3.ab2@988>     Else
0001CDDA <AmiBlitz3.ab2@989>       If cli_verbose>=0 NPrint "\\1b[1m*** ERROR: Unable to read source file!\\1b[0m" : err=True
0001CE26 <AmiBlitz3.ab2@993>   If cli_savefile><"" AND err=False
0001CE8E <AmiBlitz3.ab2@994>     If cli_verbose>=2 Then NPrint "Saving Sourcefiles as "+cli_savefile
0001CEBC <AmiBlitz3.ab2@995>     SaveSource{cli_savefile}
0001CF08 <AmiBlitz3.ab2@998>   If cli_dumpfile><"" AND err=False
0001CF52 <AmiBlitz3.ab2@999>     If cli_verbose>=2 Then NPrint "Saving dumpfile."
0001CF88 <AmiBlitz3.ab2@1000>     DumpFile{cli_dumpfile,cli_dumpflags,cli_dumpform}
0001CF92 <AmiBlitz3.ab2@1003>   If cli_run
0001CFA6 <AmiBlitz3.ab2@1004>     If comerr=False
0001CFD2 <AmiBlitz3.ab2@1005>       If cli_exefile
0001D04C <AmiBlitz3.ab2@1006>         If cli_verbose>=1 Then NPrint "Compiling "+cli_sourcefile+"..."
0001D07A <AmiBlitz3.ab2@1007>         comerr.l = CompileSource{"",cli_debuginfo,cli_release} ; re-compile for launch!
0001D0C4 <AmiBlitz3.ab2@1009>       If cli_verbose>=1 Then NPrint "Running program..."
0001D0CE <AmiBlitz3.ab2@1010> 
0001D0D0 <AmiBlitz3.ab2@1012>         CLR.l d0
0001D10E <AmiBlitz3.ab2@1013>         !ComData_GetB{comByte_RunningFlag,D0}
0001D112 <AmiBlitz3.ab2@1014>         running.l = PutD0
0001D12E <AmiBlitz3.ab2@1015>         If running Then Delay_ 50
0001D142 <AmiBlitz3.ab2@1017>       Until running=False
0001D156 <AmiBlitz3.ab2@1018>       If Peek.l(?_runerror)
0001D1A6 <AmiBlitz3.ab2@1019>         If cli_verbose>=0 NPrint "\\1b[1m*** ERROR: Unable to run compiled program!\\1b[0m" : err=True
0001D1B8 <AmiBlitz3.ab2@1030>   preproc_Free{*PreProcessor} : *PreProcessor=#NULL
0001D202 <AmiBlitz3.ab2@1031>   If cli_verbose>=2 Then NPrint "Exit AmiBlitz3."
0001D208 <AmiBlitz3.ab2@1032>   DeinitEmulatedPED{}
0001D226 <AmiBlitz3.ab2@1034>   !asm
0001D22C <AmiBlitz3.ab2@1035> JMP terminate_ab3
0001D232 <AmiBlitz3.ab2@1040>   MOVEA.l ped_startup_addr,A1
0001D238 <AmiBlitz3.ab2@1041>   LEA str_tempfilename,A0
0001D23A <AmiBlitz3.ab2@1042>   JSR (A1)
0001D240 <AmiBlitz3.ab2@1049>   MOVE.l signalNum,D0
0001D246 <AmiBlitz3.ab2@1050>   MOVEA.l _execbase,A6
0001D24A <AmiBlitz3.ab2@1051>   JSR _FreeSignal(A6)
0001D250 <AmiBlitz3.ab2@1053>   MOVE.l ptr_seg_debugger,D1
0001D254 <AmiBlitz3.ab2@1054>   BEQ.b skip_unload_debugger
0001D258 <AmiBlitz3.ab2@1055>     MOVEA.l _dosbase(PC),A6
0001D25C <AmiBlitz3.ab2@1056>     JSR _UnLoadSeg(A6)
0001D260 <AmiBlitz3.ab2@1059>   BSR.w Aclearallvars
0001D264 <AmiBlitz3.ab2@1060>   BSR.w free_residents
0001D26A <AmiBlitz3.ab2@1061>   JSR free_blitzlibs
0001D270 <AmiBlitz3.ab2@1064>   MOVE.l ptr_seg_ped,D1
0001D274 <AmiBlitz3.ab2@1065>   BEQ freemem_and_quit
0001D278 <AmiBlitz3.ab2@1066>   MOVEA.l _dosbase(PC),A6
0001D27C <AmiBlitz3.ab2@1067>   JSR _UnLoadSeg(A6)
0001D280 <AmiBlitz3.ab2@1068>   BRA freemem_and_quit     ; added by tomsmart1 for Ped errormessage
0001D2AA <AmiBlitz3.ab2@1071>   !basic
0001D362 <AmiBlitz3.ab2@1072> 
0001D380 <AmiBlitz3.ab2@1073>   !asm
0001D384 <AmiBlitz3.ab2@1074>   BRA freemem_and_quit
0001D3AE <AmiBlitz3.ab2@1077>   !basic
0001D466 <AmiBlitz3.ab2@1078>   error{!TRANS{"Can't load the Editor:\n"} + pedfile$ + !TRANS{"\n must quit, sorry!"} }  ; show error message  tomsmart1
0001D484 <AmiBlitz3.ab2@1079>   !asm
0001D488 <AmiBlitz3.ab2@1083>   BSR.w freeallox
0001D48E <AmiBlitz3.ab2@1084>   MOVEA.l ptr_macrobuffer_begin,A1
0001D490 <AmiBlitz3.ab2@1085>   MOVE.l -(a1),D0
0001D492 <AmiBlitz3.ab2@1086>   ADDQ.l #4,d0
0001D498 <AmiBlitz3.ab2@1087>   MOVEA.l _execbase,A6
0001D49C <AmiBlitz3.ab2@1088>   JSR _FreeMem(A6)
0001D4A2 <AmiBlitz3.ab2@1091>   MOVEA.l _dosbase,A1
0001D4A8 <AmiBlitz3.ab2@1092>   MOVEA.l _execbase,A6
0001D4AC <AmiBlitz3.ab2@1093>   JSR _CloseLibrary(A6)
0001D4B2 <AmiBlitz3.ab2@1095>   MOVEA.l constpcat,A1
0001D4B8 <AmiBlitz3.ab2@1096>   MOVE.l constmaxpc,D0
0001D4BE <AmiBlitz3.ab2@1097>   MOVEA.l _execbase,A6
0001D4C2 <AmiBlitz3.ab2@1098>   JSR _FreeMem(A6)
0001D4C8 <AmiBlitz3.ab2@1101>   MOVEA.l _mathffpbase,A1
0001D4CE <AmiBlitz3.ab2@1102>   MOVEA.l _execbase,A6
0001D4D2 <AmiBlitz3.ab2@1103>   JSR _CloseLibrary(A6)
0001D4D8 <AmiBlitz3.ab2@1113>     MOVEA.l _execbase,A6
0001D4DE <AmiBlitz3.ab2@1114>     MOVE.l mempool,a0
0001D4E2 <AmiBlitz3.ab2@1115>     JSR _DeletePool(a6)
0001D4E8 <AmiBlitz3.ab2@1116>     CLR.l pushat
0001D4EE <AmiBlitz3.ab2@1123>   JSR free_unusedfunctions
0001D4F0 <AmiBlitz3.ab2@1124>   MOVEQ #0,d0
0001D4FE <AmiBlitz3.ab2@1127>   !exitasm
0001D536 <AmiBlitz3.ab2@1128>   If dynassign<>""
0001D540 <AmiBlitz3.ab2@1129>     If *AssignSema
0001D550 <AmiBlitz3.ab2@1130>       ReleaseSemaphore_ *AssignSema
0001D568 <AmiBlitz3.ab2@1131>       If (AttemptSemaphore_ (*AssignSema))                 ; we are the exclusive owner of the sema now!
0001D5FC <AmiBlitz3.ab2@1132>         dos_RemAssign{"LIBS:",dos_AddPart{dynassign,"Libs"}}
0001D636 <AmiBlitz3.ab2@1133>         dos_RemAssign{dynassign}
0001D646 <AmiBlitz3.ab2@1134>         RemSemaphore_ *AssignSema
0001D656 <AmiBlitz3.ab2@1135>         ReleaseSemaphore_ *AssignSema
0001D68C <AmiBlitz3.ab2@1136>         If *AssignSema\ss_Link\ln_Name Then FreeVec_ *AssignSema\ss_Link\ln_Name : *AssignSema\ss_Link\ln_Name = #NULL
0001D69C <AmiBlitz3.ab2@1137>         FreeVec_ *AssignSema
0001D6A4 <AmiBlitz3.ab2@1138>         *AssignSema = #NULL
0001D6D2 <AmiBlitz3.ab2@1142>   SetCurrentDir{cli_path}
0001D6F4 <AmiBlitz3.ab2@1143>   !coutclose
0001D6FA <AmiBlitz3.ab2@1144> End
0001D706 <AmiBlitz3.ab2@1149> str_doslibrary:     Dc.b "dos.library",0 : Even
0001D70A <AmiBlitz3.ab2@1150> _dosbase:           Ds.l 1
0001D710 <AmiBlitz3.ab2@1154>   MOVEA.l _execbase,A6
0001D716 <AmiBlitz3.ab2@1155>   LEA str_doslibrary,A1
0001D71A <AmiBlitz3.ab2@1156>   JSR _OldOpenLibrary(A6)
0001D720 <AmiBlitz3.ab2@1157>   MOVE.l D0,_dosbase
0001D722 <AmiBlitz3.ab2@1158> RTS
0001D728 <AmiBlitz3.ab2@1162>   MOVEA.l #str_mathffpname,A1
0001D72E <AmiBlitz3.ab2@1163>   MOVEA.l _execbase,A6
0001D732 <AmiBlitz3.ab2@1164>   JSR _OldOpenLibrary(A6)
0001D738 <AmiBlitz3.ab2@1165>   MOVE.l D0,_mathffpbase
0001D73A <AmiBlitz3.ab2@1166> RTS
0001D76C <AmiBlitz3.ab2@1172>   !ComData_JMP{comFunc_SetNormalPointer}
0001D79E <AmiBlitz3.ab2@1180>   !ComData_JMP{comFunc_SetBusyPointer}
0001D7C8 <AmiBlitz3.ab2@1185>   !basic
0001D7CC <AmiBlitz3.ab2@1186>   ab3save_filenameP.l = PutD0
0001D7D6 <AmiBlitz3.ab2@1187>   If ab3save_filenameP
0001D7FE <AmiBlitz3.ab2@1188>     ab3save_filename.s = Peek.s(ab3save_filenameP)
0001D82C <AmiBlitz3.ab2@1190>     SaveSource{ab3save_filename}
0001D832 <AmiBlitz3.ab2@1191>   Else
0001D860 <AmiBlitz3.ab2@1192>     error{"INTERNAL ERROR: no filename passed in D0 to SaveSource{}!"}
0001D87E <AmiBlitz3.ab2@1194>   !asm
0001D880 <AmiBlitz3.ab2@1195>   RTS
0001D8AA <AmiBlitz3.ab2@1198>   !basic
0001D8AE <AmiBlitz3.ab2@1199>   ab3save_filenameP.l = PutD0
0001D8B8 <AmiBlitz3.ab2@1200>   If ab3save_filenameP
0001D8E0 <AmiBlitz3.ab2@1201>     ab3save_filename.s = Peek.s(ab3save_filenameP)
0001D90E <AmiBlitz3.ab2@1202>     LoadSource{ab3save_filename}
0001D914 <AmiBlitz3.ab2@1203>   Else
0001D942 <AmiBlitz3.ab2@1204>     error{"INTERNAL ERROR: no filename passed in D0 to LoadSource{}!"}
0001D960 <AmiBlitz3.ab2@1206>   !asm
0001D962 <AmiBlitz3.ab2@1207>   RTS
0001D98C <AmiBlitz3.ab2@1210>   !basic
0001D992 <AmiBlitz3.ab2@1211>   ClearSource{}
0001D9B0 <AmiBlitz3.ab2@1212>   !asm
0001D9B2 <AmiBlitz3.ab2@1213>   RTS
0001D9DC <AmiBlitz3.ab2@1216>   !basic
0001D9E2 <AmiBlitz3.ab2@1217>   OpenConsoleFake{}
0001DA00 <AmiBlitz3.ab2@1218>   !asm
0001DA02 <AmiBlitz3.ab2@1219>   RTS
0001DA2C <AmiBlitz3.ab2@1223>   !basic
0001DA32 <AmiBlitz3.ab2@1224>   CloseConsoleFake{}
0001DA50 <AmiBlitz3.ab2@1225>   !asm
0001DA52 <AmiBlitz3.ab2@1226>   RTS
0001DA58 <AmiBlitz3.ab2@1230>   MOVE.w d6,menuitemdebug
0001DA82 <AmiBlitz3.ab2@1231>   !basic
0001DA94 <AmiBlitz3.ab2@1232>   menuitemx.l = Peek.w(?menuitemdebug)
0001DABA <AmiBlitz3.ab2@1233>   If menuitemx>16 OR  menuitemx<0
0001DB22 <AmiBlitz3.ab2@1234>     error{"Called invalid AB3 Menuitem #"+Str$(menuitemx)+"!"}
0001DB2A <AmiBlitz3.ab2@1235>     menuitemx=0
0001DB3A <AmiBlitz3.ab2@1237>   Poke.w ?menuitemdebug,menuitemx
0001DB58 <AmiBlitz3.ab2@1238>   !asm
0001DB5E <AmiBlitz3.ab2@1239>   MOVE.w menuitemdebug,d6
0001DB64 <AmiBlitz3.ab2@1242>   MOVE.l A5,firstitem_
0001DB6A <AmiBlitz3.ab2@1243>   MOVE.w D7,numlines_org
0001DB70 <AmiBlitz3.ab2@1244>   MOVE.l d7,numlines
0001DB72 <AmiBlitz3.ab2@1245>   LSL.w #2,D6
0001DB78 <AmiBlitz3.ab2@1246>   LEA menu_items,A0
0001DB7C <AmiBlitz3.ab2@1247>   MOVEA.l $0(A0,D6.W),A0
0001DB86 <AmiBlitz3.ab2@1248>   MOVE.l #$FFFFffff,linenumat
0001DB90 <AmiBlitz3.ab2@1249>   MOVE.l #$FFFFffff,compilelinecounter
0001DB92 <AmiBlitz3.ab2@1253>   JSR (A0)
0001DB98 <AmiBlitz3.ab2@1254>   MOVE.l compilelinecounter,D0
0001DB9A <AmiBlitz3.ab2@1255> RTS
0001DB9E <AmiBlitz3.ab2@1257> menuitemdebug: Dc.l 0
0001DBA2 <AmiBlitz3.ab2@1259> mempool                Dc.l 0
0001DBB8 <AmiBlitz3.ab2@1260> str_loaddebugmessage:  Dc.b "Debug module to load",0 : Even
0001DBBE <AmiBlitz3.ab2@1261> dloaderr:             JSR handle_compileerror
0001DBDA <AmiBlitz3.ab2@1262>                        Dc.b "Can't LoadSeg debug module!",0 : Even
0001DC18 <AmiBlitz3.ab2@1270>   !ComData_GetL{comFunc_ASLFileRequest,A3}
0001DC1E <AmiBlitz3.ab2@1271>   LEA str_loaddebugmessage,A2
0001DC24 <AmiBlitz3.ab2@1272>   LEA str_blitz3assign,A0
0001DC2A <AmiBlitz3.ab2@1273>   LEA str_temp_debugmodulename,A1
0001DC2C <AmiBlitz3.ab2@1276>   JSR (A3)
0001DC30 <AmiBlitz3.ab2@1278>   BEQ.w menu_loaddebugmodule_noload
0001DC36 <AmiBlitz3.ab2@1279>   MOVE.l D0,ptr_temp_debugmodule
0001DC3A <AmiBlitz3.ab2@1280>   BSR.w call_setpointerbusy
0001DC40 <AmiBlitz3.ab2@1281>   MOVE.l A7,errstack
0001DC4A <AmiBlitz3.ab2@1282>   MOVE.l #menu_loaddebugmodule_noload,errcont
0001DC50 <AmiBlitz3.ab2@1283>   MOVE.l ptr_temp_debugmodule,D1
0001DC54 <AmiBlitz3.ab2@1285>   MOVEA.l _dosbase(PC),A6
0001DC58 <AmiBlitz3.ab2@1286>   JSR _LoadSeg(A6)
0001DC5A <AmiBlitz3.ab2@1287>   MOVE.l D0,D7
0001DC5E <AmiBlitz3.ab2@1288>   BEQ.w dloaderr
0001DC64 <AmiBlitz3.ab2@1289>   MOVE.l ptr_seg_debugger,D1
0001DC68 <AmiBlitz3.ab2@1290>   BEQ.b menu_loaddebugmodule_ndseg
0001DC6C <AmiBlitz3.ab2@1291>   MOVEA.l _dosbase(PC),A6
0001DC70 <AmiBlitz3.ab2@1292>   JSR _UnLoadSeg(A6)
0001DC74 <AmiBlitz3.ab2@1293>   BSR.w call_setpointernormal
0001DC7A <AmiBlitz3.ab2@1296>   MOVE.l D7,ptr_seg_debugger
0001DC7C <AmiBlitz3.ab2@1299> RTS
0001DC9A <AmiBlitz3.ab2@1302> str_request_exename:   Dc.b "Name of Executable to Create:",0 : Even                        ;xtext org source
0001DD5A <AmiBlitz3.ab2@1303> exepath:               Ds.l 48                             ;Ds.b #MAX_STRINGSIZE ; Ds.l 48  ;xpath  dcb.b 192,0 org source
0001DE1A <AmiBlitz3.ab2@1304> exefilename:           Ds.l 48                             ;Ds.b #MAX_STRINGSIZE ; Ds.l 48  ;xname  dcb.b 192,0 org source
0001DE1E <AmiBlitz3.ab2@1305> ptr_newexefilename:    Dc.l 0                                                               ;execname org
0001DE48 <AmiBlitz3.ab2@1309>   !basic
0001DE72 <AmiBlitz3.ab2@1310>   exepath.s = Peek.s(?exepath)
0001DE9C <AmiBlitz3.ab2@1311>   exefile.s = Peek.s(?exefilename)
0001DF1C <AmiBlitz3.ab2@1312>   exefile.s = dos_AddPart{exepath,exefile}
0001DF54 <AmiBlitz3.ab2@1313>   Poke.s ?tempspace,exefile
0001DF72 <AmiBlitz3.ab2@1314>   !asm
0001DF78 <AmiBlitz3.ab2@1335>   LEA tempspace,a0
0001DF7A <AmiBlitz3.ab2@1336>   MOVE.l a0,d0
0001DF7E <AmiBlitz3.ab2@1337> BRA newcreate2
0001DFA8 <AmiBlitz3.ab2@1343>   !basic
0001DFD2 <AmiBlitz3.ab2@1344>   request_exename.s = Peek.s(?str_request_exename )
0001E02E <AmiBlitz3.ab2@1345>   request_exename   = !TRANS{request_exename}
0001E034 <AmiBlitz3.ab2@1346>   GetD0 &request_exename
0001E052 <AmiBlitz3.ab2@1347>   !asm
0001E054 <AmiBlitz3.ab2@1348>   MOVE.l D0,A2
0001E092 <AmiBlitz3.ab2@1351>   !ComData_GetL{comFunc_ASLFileRequest,A3}
0001E098 <AmiBlitz3.ab2@1353>   LEA exepath,A0
0001E09E <AmiBlitz3.ab2@1354>   LEA exefilename,A1
0001E0A0 <AmiBlitz3.ab2@1357>   JSR (A3)                                                 ;open ped filerequest
0001E0A4 <AmiBlitz3.ab2@1358>   BEQ.w cancel_createexe
0001E0AE <AmiBlitz3.ab2@1361>   ADD.l #1,number_of_builds
0001E0B4 <AmiBlitz3.ab2@1364>   MOVE.l D0,ptr_newexefilename
0001E0BC <AmiBlitz3.ab2@1365>   MOVE.w #-1,debugversion
0001E0C2 <AmiBlitz3.ab2@1366>   MOVE.w set_make_smallestcode,-(A7)
0001E0CA <AmiBlitz3.ab2@1370>     MOVE.w #1,makeexec
0001E0D0 <AmiBlitz3.ab2@1371>     JSR ab3_OpenDebugFile
0001E0D4 <AmiBlitz3.ab2@1372>     BSR.w startcompile
0001E0DA <AmiBlitz3.ab2@1373>     JSR ab3_CloseDebugFile
0001E0E4 <AmiBlitz3.ab2@1374>     CMP.l #"NORE",reqmode
0001E0E8 <AmiBlitz3.ab2@1375>   BEQ 'l1
0001E0EE <AmiBlitz3.ab2@1377>   TST.w anyerrs
0001E0F2 <AmiBlitz3.ab2@1378>   BNE.b menu_createexecutable__skip
0001E0F6 <AmiBlitz3.ab2@1379>   BSR.w savefile
0001E0FC <AmiBlitz3.ab2@1382>   MOVE.w (A7)+,set_make_smallestcode
0001E0FE <AmiBlitz3.ab2@1385> RTS
0001E106 <AmiBlitz3.ab2@1389>   MOVE.w #-1,flag_noPED
0001E108 <AmiBlitz3.ab2@1390> RTS
0001E110 <AmiBlitz3.ab2@1394>   MOVE.w #-1,flag_noCLI
0001E112 <AmiBlitz3.ab2@1395> RTS
0001E13C <AmiBlitz3.ab2@1398>   !basic
0001E164 <AmiBlitz3.ab2@1399>     If dbg_fid>=0 Then file_Close{dbg_fid} : dbg_fid = -1
0001E174 <AmiBlitz3.ab2@1400>     Poke.w ?word_WriteDebugFileNow,0
0001E192 <AmiBlitz3.ab2@1401>   !asm
0001E194 <AmiBlitz3.ab2@1402> RTS
0001E1BE <AmiBlitz3.ab2@1405>   !basic
0001E1CE <AmiBlitz3.ab2@1406>   Poke.w ?word_WriteDebugFileNow,0
0001E1E0 <AmiBlitz3.ab2@1407>   If dbg_fid>=0
0001E1F6 <AmiBlitz3.ab2@1408>     file_Close{dbg_fid} : dbg_fid = -1
0001E208 <AmiBlitz3.ab2@1410>   If dbg_fid.l<0
0001E20A <AmiBlitz3.ab2@1411>     CLR.l d0
0001E248 <AmiBlitz3.ab2@1412>     !ComData_GetW{comWord_CreateDebugFile,D0}
0001E24C <AmiBlitz3.ab2@1413>     dbg_Create.l = PutD0
0001E256 <AmiBlitz3.ab2@1414>     If (dbg_Create) ; only when set!
0001E266 <AmiBlitz3.ab2@1415>       exefileP.l = Peek.l (?ptr_newexefilename)
0001E28E <AmiBlitz3.ab2@1416>       exefile.s = ""
0001E2C0 <AmiBlitz3.ab2@1417>       If exefileP Then exefile.s = Peek.s(exefileP)
0001E2F8 <AmiBlitz3.ab2@1418>       If exefile><""
0001E34E <AmiBlitz3.ab2@1419>         dbg_fid = file_Open{exefile+".dbg",#file_forcewrite}
0001E360 <AmiBlitz3.ab2@1420>         If dbg_fid>=0
0001E372 <AmiBlitz3.ab2@1421>           Poke.w ?word_WriteDebugFileNow,-1
0001E37E <AmiBlitz3.ab2@1424>       oldhunkoffset.l = -1
0001E3A6 <AmiBlitz3.ab2@1425>       oldfile.s       = ""
0001E3C4 <AmiBlitz3.ab2@1428>   !asm
0001E3C6 <AmiBlitz3.ab2@1429> RTS
0001E3CC <AmiBlitz3.ab2@1432> TST.w word_WriteDebugFileNow
0001E3D0 <AmiBlitz3.ab2@1433> BEQ 'skipdebugfile
0001E3FA <AmiBlitz3.ab2@1434> !basic
0001E40C <AmiBlitz3.ab2@1435>   If dbg_fid>=0
0001E41E <AmiBlitz3.ab2@1436>     pass.l          = Peek.w(?pass)
0001E430 <AmiBlitz3.ab2@1437>     makesmallest.b  = Peek.b(?make_smallestcode)               ; get the status of make_smallestcode  tomsmart1
0001E454 <AmiBlitz3.ab2@1438> 
0001E45A <AmiBlitz3.ab2@1439>       oldhunkoffset.l = hunkoffset.l
0001E48E <AmiBlitz3.ab2@1440>       oldfile.s       = codefile.s
0001E4AA <AmiBlitz3.ab2@1441>       If Peek.w (?ininclude)>0
0001E4BA <AmiBlitz3.ab2@1442>         codeline.l = Peek.l(?includeline);-1
0001E52A <AmiBlitz3.ab2@1443>         codefile.s = dos_FilePart{incdim(Peek.w(?ininclude)-1)}
0001E530 <AmiBlitz3.ab2@1444>       Else
0001E55E <AmiBlitz3.ab2@1445>         !ComData_LEA{comStr_SourceName,A0}
0001E560 <AmiBlitz3.ab2@1446>         MOVE.l A0,D0
0001E564 <AmiBlitz3.ab2@1447>         sourceP.l = PutD0
0001E58C <AmiBlitz3.ab2@1448>         codefile.s = Peek.s(sourceP)
0001E59C <AmiBlitz3.ab2@1449>         codeline.l = Peek.l(?linenumat)
0001E5C4 <AmiBlitz3.ab2@1451>       hunkoffset.l = Peek.l(?destpointer)-Peek.l(?destbufferstart)
0001E618 <AmiBlitz3.ab2@1452>       If oldhunkoffset><hunkoffset OR oldfile><codefile
0001E628 <AmiBlitz3.ab2@1459>         *sourceLine.SourceLine_t = Peek.l(?sourceline)
0001E632 <AmiBlitz3.ab2@1460>         If *sourceLine
0001E648 <AmiBlitz3.ab2@1461>           MaxLen detokenline.s = 65536
0001E68A <AmiBlitz3.ab2@1462>          !ComData_GetL{comPtr_PreProcessor,include_preprocessor}
0001E69A <AmiBlitz3.ab2@1463>          *tn.preprocessor = Peek.l(?include_preprocessor)
0001E6C6 <AmiBlitz3.ab2@1464>           written.l = preproc_Detokenize{*tn,&*sourceLine\Text,&detokenline,*sourceLine\CharLength}
0001E6F4 <AmiBlitz3.ab2@1465>           If written>0 Then Poke.b &detokenline+written-1,0
0001E71E <AmiBlitz3.ab2@1466>           sourceLineText.s = Peek.s(&detokenline)
0001E724 <AmiBlitz3.ab2@1467>         Else
0001E74C <AmiBlitz3.ab2@1468>           sourceLineText = "NULL"
0001E814 <AmiBlitz3.ab2@1471>         file_WriteLine{dbg_fid,Hex$(hunkoffset)+" <"+codefile+"@"+Str$(codeline)+"> "+sourceLineText}
0001E832 <AmiBlitz3.ab2@1477> !asm
0001E834 <AmiBlitz3.ab2@1479> RTS
0001E836 <AmiBlitz3.ab2@1481> word_WriteDebugFileNow: Dc.w 0
0001E838 <AmiBlitz3.ab2@1483> flag_noPED:  Ds.w 1                                        ;closeed org source
0001E83A <AmiBlitz3.ab2@1484> flag_noCLI:  Ds.w 1                                        ;nocli org source
0001E83E <AmiBlitz3.ab2@1488>   MOVEM.l D0-D1/A0-A1/A6,-(A7)
0001E844 <AmiBlitz3.ab2@1489>   MOVEA.l _execbase,A6
0001E848 <AmiBlitz3.ab2@1490>   JSR _CacheClearU(A6)
0001E84C <AmiBlitz3.ab2@1491>   MOVEM.l (A7)+,D0-D1/A0-A1/A6
0001E84E <AmiBlitz3.ab2@1492> RTS
0001E852 <AmiBlitz3.ab2@1495>   MOVEM.l A2-A3,-(A7)
0001E858 <AmiBlitz3.ab2@1496>   CLR.b doublepeek
0001E85E <AmiBlitz3.ab2@1497>   MOVE.l A5,lastsourcepos
0001E864 <AmiBlitz3.ab2@1498>    JSR getchar
0001E868 <AmiBlitz3.ab2@1499>   CMP.w #$2E,D0
0001E86C <AmiBlitz3.ab2@1500>    BEQ.w JL_0_49B4b
0001E872 <AmiBlitz3.ab2@1501>   MOVEA.l defaulttype,A2
0001E876 <AmiBlitz3.ab2@1502>   CMP.w #$24,D0
0001E87A <AmiBlitz3.ab2@1503>    BNE.w JL_0_49CAb
0001E87C <AmiBlitz3.ab2@1504>   MOVEQ.l #$07,D1
0001E880 <AmiBlitz3.ab2@1505> BRA.w JL_0_49DEb
0001E886 <AmiBlitz3.ab2@1508>   JSR getparameter2
0001E88A <AmiBlitz3.ab2@1509>   BEQ.w syntaxerrb
0001E890 <AmiBlitz3.ab2@1510>   LEA newtypebase,A2
0001E896 <AmiBlitz3.ab2@1511>   JSR findtype
0001E89A <AmiBlitz3.ab2@1512>   BNE.w notypeerrb
0001E8A4 <AmiBlitz3.ab2@1517>   MOVE.w oldqflag,instringon
0001E8AA <AmiBlitz3.ab2@1518>   MOVEA.l lastsourcepos,A5
0001E8B0 <AmiBlitz3.ab2@1520>   MOVE.l a2,functionreturntype
0001E8B8 <AmiBlitz3.ab2@1521>   CMPI.l #$100,$4(A2)
0001E8BC <AmiBlitz3.ab2@1522>   BLE.w 'isvar
0001E8BE <AmiBlitz3.ab2@1526>   MOVEQ #3,d1
0001E8C2 <AmiBlitz3.ab2@1527>   BRA JL_0_49DEb
0001E8C6 <AmiBlitz3.ab2@1534>   MOVE.w $6(A2),D1
0001E8CC <AmiBlitz3.ab2@1535>   CMP.w #8,8(a2)
0001E8D0 <AmiBlitz3.ab2@1536>   BNE 'l1
0001E8D8 <AmiBlitz3.ab2@1537>   MOVE.b #1,doublepeek
0001E8DE <AmiBlitz3.ab2@1540>   MOVE.w D1,convsize
0001E8E2 <AmiBlitz3.ab2@1541>   MOVEM.l (A7)+,A2-A3
0001E8E4 <AmiBlitz3.ab2@1542> RTS
0001E8EA <AmiBlitz3.ab2@1544> notypeerrb JMP notypeerr
0001E8F0 <AmiBlitz3.ab2@1545> illtypeerrb JMP illtypeerr
0001E8F6 <AmiBlitz3.ab2@1546> syntaxerrb JMP syntaxerr
0001E900 <AmiBlitz3.ab2@1591>   ADD.l #1,number_of_builds
0001E906 <AmiBlitz3.ab2@1593>   CLR.w debugversion
0001E90C <AmiBlitz3.ab2@1594>   CLR.w flag_noPED
0001E912 <AmiBlitz3.ab2@1595>   CLR.w flag_noCLI
0001E91A <AmiBlitz3.ab2@1598>     MOVE.w #0,makeexec                                     ;MOVE.w #$FFFF,debugversion
0001E91E <AmiBlitz3.ab2@1599>     BSR.w startcompile
0001E928 <AmiBlitz3.ab2@1600>     CMP.l #"NORE",reqmode
0001E92C <AmiBlitz3.ab2@1601>   BEQ 'l1
0001E932 <AmiBlitz3.ab2@1604>   TST.w anyerrs
0001E936 <AmiBlitz3.ab2@1605>    BNE.w JL_0_3482
0001E93A <AmiBlitz3.ab2@1607>   MOVE.w flag_noPED(PC),D1
0001E93E <AmiBlitz3.ab2@1608>    BEQ.w skip_closingGUI
0001E970 <AmiBlitz3.ab2@1613>   !ComData_JSR{comFunc_CloseGUI}
0001E974 <AmiBlitz3.ab2@1614> BRA.b runprogram
0001E978 <AmiBlitz3.ab2@1618>   BSR.w compilerequester
0001E97E <AmiBlitz3.ab2@1621>   MOVEA.l _dosbase,A6
0001E984 <AmiBlitz3.ab2@1622>   LEA exepath,a0
0001E986 <AmiBlitz3.ab2@1623>   MOVE.l a0,d1
0001E988 <AmiBlitz3.ab2@1624>   MOVEQ #-2,d2
0001E98C <AmiBlitz3.ab2@1625>   JSR _Lock(a6)                                            ;lock
0001E992 <AmiBlitz3.ab2@1626>   MOVE.l d0,exelock
0001E998 <AmiBlitz3.ab2@1627>   MOVE.l #0,d1
0001E99C <AmiBlitz3.ab2@1628>   JSR _CurrentDir(A6)
0001E9A2 <AmiBlitz3.ab2@1629>   MOVE.l D0,lock_currentdir
0001E9A4 <AmiBlitz3.ab2@1630>   MOVE.l D0,D1
0001E9A8 <AmiBlitz3.ab2@1631>   JSR _CurrentDir(A6)
0001E9AE <AmiBlitz3.ab2@1632>   CLR.l ptr_exetask
0001E9B4 <AmiBlitz3.ab2@1641>   MOVE.l #str_process_name,D1
0001E9B6 <AmiBlitz3.ab2@1642>   MOVEQ.l #$00,D2
0001E9BC <AmiBlitz3.ab2@1643>   MOVE.l #proc_seglist,D3
0001E9BE <AmiBlitz3.ab2@1644>   LSR.l #2,D3
0001E9C4 <AmiBlitz3.ab2@1645>   MOVE.l stacksize,D4
0001E9CA <AmiBlitz3.ab2@1646>   MOVEA.l _dosbase,A6
0001E9CE <AmiBlitz3.ab2@1647>   JSR _CreateProc(A6)                                      ;runtask
0001E9D0 <AmiBlitz3.ab2@1648>   TST.l D0
0001E9D4 <AmiBlitz3.ab2@1649>    BEQ ErrorRunningProg
0001EA0A <AmiBlitz3.ab2@1651>   !ComData_SetB{comByte_RunningFlag,#1}   ; this should be done here, straigt after it is clear that
0001EA10 <AmiBlitz3.ab2@1653>   TST.w flag_noPED
0001EA14 <AmiBlitz3.ab2@1654>    BNE.b JL_0_344E
0001EA18 <AmiBlitz3.ab2@1655>   BSR.w close_compilewin
0001EA1E <AmiBlitz3.ab2@1658>   CLR.l firstlocal
0001EA24 <AmiBlitz3.ab2@1659>   CLR.l firstglob
0001EA28 <AmiBlitz3.ab2@1660>   MOVE.w flag_noPED(PC),D1
0001EA2C <AmiBlitz3.ab2@1661>   BEQ.w skip_openGUI
0001EA5E <AmiBlitz3.ab2@1665>   !ComData_JSR{comFunc_CreateGUI}
0001EA60 <AmiBlitz3.ab2@1674> RTS
0001EA6A <AmiBlitz3.ab2@1677> MOVE.l #1,_runerror
0001EA6E <AmiBlitz3.ab2@1678> BRA JL_0_344E
0001EA72 <AmiBlitz3.ab2@1680> _runerror: Dc.l 0
0001EA76 <AmiBlitz3.ab2@1681> lock_currentdir:    Ds.l 1                                          ;tasklock org source
0001EA7A <AmiBlitz3.ab2@1682> ptr_exetask:        Ds.l 1                                          ;panictask org source
0001EA7E <AmiBlitz3.ab2@1683> signalNum:          Ds.l 1                                          ;panicbit org source
0001EA82 <AmiBlitz3.ab2@1684> signals:            Ds.l 1                                          ;panicmask org source
0001EA98 <AmiBlitz3.ab2@1686> str_process_name:   Dc.b "Blitz ][ Program Proc",0 : Even           ;procname org source
0001EA9D <AmiBlitz3.ab2@1687>                     Ds.b 5                                          ;cnop 0,4 :dc.l 0   ;length org source
0001EAA0 <AmiBlitz3.ab2@1688> Even4
0001EAA4 <AmiBlitz3.ab2@1690> ptr_ThisTask:       Ds.l 1                                          ;length
0001EAA8 <AmiBlitz3.ab2@1691> .proc_seglist:      Ds.l 1                                          ;procstart org source ;next
0001EAAE <AmiBlitz3.ab2@1695>   MOVEA.l $4,A0
0001EAB6 <AmiBlitz3.ab2@1696>   MOVE.l  $114(A0),ptr_exetask
0001EABC <AmiBlitz3.ab2@1698>   MOVEA.l _dosbase,A6
0001EAC2 <AmiBlitz3.ab2@1699>   MOVE.l exelock,D1
0001EAC6 <AmiBlitz3.ab2@1700>   JSR _CurrentDir(A6)
0001EAFC <AmiBlitz3.ab2@1705>   !ComData_SetB{comByte_RunningFlag,#1}
0001EB00 <AmiBlitz3.ab2@1711>   MOVE.w flag_noCLI(PC),D1
0001EB04 <AmiBlitz3.ab2@1712>    BNE.b skip_openconsole
0001EB36 <AmiBlitz3.ab2@1716>   !ComData_JSR{comFunc_OpenConsole}
0001EB3A <AmiBlitz3.ab2@1719>   BSR.w calcvbr
0001EB40 <AmiBlitz3.ab2@1720>   MOVEA.l vbr,A0
0001EB46 <AmiBlitz3.ab2@1725>   CLR.w dirmode
0001EB4C <AmiBlitz3.ab2@1726>   CLR.l firstglob
0001EB52 <AmiBlitz3.ab2@1727>   CLR.l firstlocal
0001EB58 <AmiBlitz3.ab2@1729>   MOVE.l stacksize,D2
0001EB5E <AmiBlitz3.ab2@1730>   MOVE.l #$624C745A,D7                                      ;#'bLtZ',d7 org source ;force cli-type run
0001EB64 <AmiBlitz3.ab2@1731>   LEA str_cliarguments,A0                                   ;cli arguement
0001EB6A <AmiBlitz3.ab2@1732>   MOVEA.l destbufferstart,A1
0001EB6E <AmiBlitz3.ab2@1733>   BSR.w Aclearcache
0001EB70 <AmiBlitz3.ab2@1736>   JSR (A1)                                                 ; execute compiled code  ;Run the thing!
0001EB76 <AmiBlitz3.ab2@1738>   MOVEA.l vbr,A0
0001EB7C <AmiBlitz3.ab2@1740>   CLR.l firstglob
0001EB82 <AmiBlitz3.ab2@1741>   CLR.l firstlocal
0001EB88 <AmiBlitz3.ab2@1742>   MOVEA.l _dosbase,A6
0001EB8E <AmiBlitz3.ab2@1743>   MOVE.l exelock,d1
0001EB92 <AmiBlitz3.ab2@1744>   BEQ 'nolock
0001EB96 <AmiBlitz3.ab2@1745>   JSR _UnLock(a6)
0001EBCC <AmiBlitz3.ab2@1750>   !ComData_SetB{comByte_RunningFlag,#0}
0001EBD0 <AmiBlitz3.ab2@1753>   MOVE.w flag_noCLI(PC),D1
0001EBD4 <AmiBlitz3.ab2@1754>    BNE.b skip_closeconsole
0001EC06 <AmiBlitz3.ab2@1758>   !ComData_JSR{comFunc_CloseConsole}
0001EC0E <AmiBlitz3.ab2@1761>   MOVE.w #$0001,stopit
0001EC12 <AmiBlitz3.ab2@1762>   MOVE.l signals(PC),D0
0001EC18 <AmiBlitz3.ab2@1763>   MOVEA.l ptr_ThisTask,A1
0001EC1E <AmiBlitz3.ab2@1764>   MOVEA.l _execbase,A6
0001EC22 <AmiBlitz3.ab2@1765>   JSR _Signal(A6)
0001EC24 <AmiBlitz3.ab2@1766> RTS
0001EC2A <AmiBlitz3.ab2@1770>   MOVEA.l _execbase,A6
0001EC2E <AmiBlitz3.ab2@1771>   MOVE.w $128(A6),D0
0001EC30 <AmiBlitz3.ab2@1772>   MOVEQ.l #$00,D1
0001EC34 <AmiBlitz3.ab2@1773>   ANDI.w #$F,D0
0001EC38 <AmiBlitz3.ab2@1776>     BEQ.b calcvbr__skip
0001EC3A <AmiBlitz3.ab2@1777>     ADDQ.w #1,D1
0001EC3C <AmiBlitz3.ab2@1778>     LSR.w #1,D0
0001EC40 <AmiBlitz3.ab2@1779> BRA.b calcvbr_loop
0001EC42 <AmiBlitz3.ab2@1782>   MOVEQ.l #$00,D2
0001EC46 <AmiBlitz3.ab2@1783>   CMP.w #$2,D1
0001EC4A <AmiBlitz3.ab2@1784>    BCS.b calcvbr__skip2
0001EC50 <AmiBlitz3.ab2@1785>   MOVEA.l _execbase,A6
0001EC54 <AmiBlitz3.ab2@1786>   JSR _SuperState(A6)
0001EC58 <AmiBlitz3.ab2@1787>   Dc.l $4E7A2801                                           ;movec vbr,D2
0001EC5C <AmiBlitz3.ab2@1788>   JSR _UserState(A6)
0001EC62 <AmiBlitz3.ab2@1791>   MOVE.l D2,vbr
0001EC64 <AmiBlitz3.ab2@1792> RTS
0001EC6A <AmiBlitz3.ab2@1796>   LEA instrtab,a0
0001EC70 <AmiBlitz3.ab2@1797>   MOVE.l #labelhash-instrtab,d0
0001EC72 <AmiBlitz3.ab2@1798>   ASR.l #2,d0
0001EC74 <AmiBlitz3.ab2@1799>   SUBQ.l #1,d0
0001EC76 <AmiBlitz3.ab2@1802>   CLR.l (a0)+
0001EC78 <AmiBlitz3.ab2@1803>   SUBQ.l #1,d0
0001EC7C <AmiBlitz3.ab2@1804>   BNE 'l10
0001EC80 <AmiBlitz3.ab2@1805>   BSR.w call_setpointerbusy
0001EC84 <AmiBlitz3.ab2@1806>   BSR.w free_userlibs
0001EC88 <AmiBlitz3.ab2@1807>   BSR.w scan_for_userlibs
0001EC8C <AmiBlitz3.ab2@1808>   BSR.w JL_0_7082
0001EC90 <AmiBlitz3.ab2@1809> BRA.w call_setpointernormal
0001ECBA <AmiBlitz3.ab2@1815>   !basic
0001ECF4 <AmiBlitz3.ab2@1816>   Poke.l ?size_acidlibs, dos_GetFileSize{Peek$(?str_path_acidlibs)}
0001ED04 <AmiBlitz3.ab2@1818>   deflibNameP.l = Peek.l(?deflib)
0001ED0E <AmiBlitz3.ab2@1819>   If deflibNameP
0001ED40 <AmiBlitz3.ab2@1820>     If Peek.s(deflibNameP)<>""
0001ED8A <AmiBlitz3.ab2@1821>       Poke.l ?size_deflibs, dos_GetFileSize{Peek.s(Peek.l(?deflib))}
0001ED90 <AmiBlitz3.ab2@1822>     Else
0001EDCA <AmiBlitz3.ab2@1823>       Poke.l ?size_deflibs, dos_GetFileSize{Peek.s(?str_path_deflibs)}
0001EDD0 <AmiBlitz3.ab2@1825>   Else
0001EE0A <AmiBlitz3.ab2@1826>     Poke.l ?size_deflibs, dos_GetFileSize{Peek.s(?str_path_deflibs)}
0001EE38 <AmiBlitz3.ab2@1827>     error{"INTERNAL: Invalid deflib name pointer!"}
0001EE56 <AmiBlitz3.ab2@1829>   !asm
0001EE5C <AmiBlitz3.ab2@1834>   MOVE.l #str_path_userlibs,D1
0001EE5E <AmiBlitz3.ab2@1835>   MOVEQ.l #-$02,D2
0001EE64 <AmiBlitz3.ab2@1836>   MOVEA.l _dosbase,A6
0001EE68 <AmiBlitz3.ab2@1837>   JSR _Lock(A6)
0001EE6A <AmiBlitz3.ab2@1838>   MOVE.l D0,D7
0001EE6E <AmiBlitz3.ab2@1839>    BEQ.w exit_get_libraries
0001EE70 <AmiBlitz3.ab2@1840>   MOVE.l D7,D1
0001EE76 <AmiBlitz3.ab2@1841>   MOVE.l #ptr_parameterstore,D2
0001EE7A <AmiBlitz3.ab2@1842>   JSR _Examine(A6)
0001EE7C <AmiBlitz3.ab2@1843>   TST.l D0
0001EE80 <AmiBlitz3.ab2@1844>   BEQ.w unlock_and_exit_get_libraries
0001EE86 <AmiBlitz3.ab2@1845>   MOVE.l fib_DirEntryType,D0
0001EE8A <AmiBlitz3.ab2@1846>   BMI.w unlock_and_exit_get_libraries
0001EE8C <AmiBlitz3.ab2@1851>     MOVE.l D7,D1
0001EE92 <AmiBlitz3.ab2@1852>     MOVE.l #ptr_parameterstore,D2
0001EE98 <AmiBlitz3.ab2@1853>     MOVEA.l _dosbase,A6
0001EE9C <AmiBlitz3.ab2@1854>     JSR _ExNext(A6)
0001EE9E <AmiBlitz3.ab2@1855>     TST.l D0
0001EEA2 <AmiBlitz3.ab2@1856>      BEQ.w exit_scan_libsdrawer                            ; kein weiteres File
0001EEA8 <AmiBlitz3.ab2@1858>     MOVE.l fib_DirEntryType,D0                             ; positive for directoies, negative for files
0001EEAC <AmiBlitz3.ab2@1859>     BPL.w scan_libsdrawer                                  ; skip directories
0001EEB2 <AmiBlitz3.ab2@1861>     LEA fib_FileName,A0                                    ; pruefen ob infofile
0001EEB6 <AmiBlitz3.ab2@1862>     BSR.w check_for_infoextention
0001EEBA <AmiBlitz3.ab2@1863>     BEQ.w scan_libsdrawer
0001EEC0 <AmiBlitz3.ab2@1865>     MOVEA.l _execbase,A6                                   ; allocate $26 = 38 bytes fuer listeneintrag
0001EEC2 <AmiBlitz3.ab2@1866>     MOVEQ.l #$26,D0
0001EEC4 <AmiBlitz3.ab2@1867>     MOVEQ.l #$01,D1
0001EECA <AmiBlitz3.ab2@1868>     MOVE.l mempool,a0
0001EECE <AmiBlitz3.ab2@1869>     JSR _AllocPooled(a6)
0001EED4 <AmiBlitz3.ab2@1871>     MOVEA.l _dosbase,A6
0001EED6 <AmiBlitz3.ab2@1872>     MOVE.l D0,D6                                           ; sichere speicheradresse in D6
0001EEDC <AmiBlitz3.ab2@1875>     LEA ptr_userlibs_list,A0                               ; pruefe liste
0001EEDE <AmiBlitz3.ab2@1878>     MOVE.l (A0),D5
0001EEE2 <AmiBlitz3.ab2@1879>      BEQ.w JL_0_3722                                       ; kein pointer da? kann springe weiter
0001EEE4 <AmiBlitz3.ab2@1880>     MOVEA.l D5,A2
0001EEE6 <AmiBlitz3.ab2@1881>     ADDQ.w #6,A2                                           ; 6 bytes weiter gehen, um dateinamen zu speichern
0001EEEC <AmiBlitz3.ab2@1884>     LEA fib_FileName,A1                                    ; vergleich, ob Dateiname schon in der liste ist
0001EEEE <AmiBlitz3.ab2@1887>       MOVEQ.l #$00,D0
0001EEF0 <AmiBlitz3.ab2@1888>       MOVE.b (A1)+,D0
0001EEF4 <AmiBlitz3.ab2@1889>        BEQ.w JL_0_3722                                     ; dateiname komplett, dann weiter
0001EEF6 <AmiBlitz3.ab2@1890>       MOVEQ.l #$00,D1
0001EEF8 <AmiBlitz3.ab2@1891>       MOVE.b (A2)+,D1
0001EEFC <AmiBlitz3.ab2@1892>        BEQ.w JL_0_371C
0001EF1E <AmiBlitz3.ab2@1893>       !compare1                                            ;bsr.w tstalpha
0001EF22 <AmiBlitz3.ab2@1894>       BNE.w JL_0_3702
0001EF26 <AmiBlitz3.ab2@1895>       ANDI.w #$DF,D0
0001EF28 <AmiBlitz3.ab2@1898>       EXG.l D0,D1
0001EF4A <AmiBlitz3.ab2@1899>       !compare1                                            ;bsr.w tstalpha
0001EF4E <AmiBlitz3.ab2@1900>       BNE.w JL_0_3710
0001EF52 <AmiBlitz3.ab2@1901>       ANDI.w #$DF,D0
0001EF54 <AmiBlitz3.ab2@1904>       EXG.l D0,D1
0001EF56 <AmiBlitz3.ab2@1905>       CMP.b D1,D0
0001EF5A <AmiBlitz3.ab2@1906>     BEQ.w JL_0_36E6
0001EF5E <AmiBlitz3.ab2@1907>     BCS.w JL_0_3722
0001EF60 <AmiBlitz3.ab2@1910>     MOVEA.l D5,A0
0001EF64 <AmiBlitz3.ab2@1911> BRA.w JL_0_36D6
0001EF66 <AmiBlitz3.ab2@1914>     MOVEA.l D6,A1                                          ; hier war die adresse des allokierten Speicers drin
0001EF68 <AmiBlitz3.ab2@1915>     MOVE.l (A0),(A1)
0001EF6A <AmiBlitz3.ab2@1916>     MOVE.l A1,(A0)
0001EF6C <AmiBlitz3.ab2@1917>     ADDQ.w #4,A1                                           ; pointer zum naechsten namen ueberspringen
0001EF70 <AmiBlitz3.ab2@1918>     MOVE.w #$FFFF,(A1)+                                    ; $FFFF schreiben
0001EF76 <AmiBlitz3.ab2@1919>     MOVEA.l #fib_FileName,A0                               ; dateinamen in die liste kopieren
0001EF78 <AmiBlitz3.ab2@1922>       MOVE.b (A0)+,(A1)+
0001EF7C <AmiBlitz3.ab2@1923>     BNE.w JL_0_3734
0001EF80 <AmiBlitz3.ab2@1924> BRA.w scan_libsdrawer
0001EF82 <AmiBlitz3.ab2@1927>   MOVE.l D7,D1
0001EF88 <AmiBlitz3.ab2@1928>   MOVEA.l _dosbase,A6
0001EF8C <AmiBlitz3.ab2@1929>   JSR _UnLock(A6)
0001EF8E <AmiBlitz3.ab2@1930>   MOVEQ.l #-$01,D0
0001EF90 <AmiBlitz3.ab2@1933> RTS
0001EF92 <AmiBlitz3.ab2@1936>   MOVE.l D7,D1
0001EF98 <AmiBlitz3.ab2@1937>   MOVEA.l _dosbase,A6
0001EF9C <AmiBlitz3.ab2@1938>   JSR _UnLock(A6)
0001EF9E <AmiBlitz3.ab2@1939>   MOVEQ.l #$00,D0
0001EFA0 <AmiBlitz3.ab2@1940> RTS
0001EFA6 <AmiBlitz3.ab2@1944>   MOVEA.l _execbase,A6
0001EFAC <AmiBlitz3.ab2@1945>   MOVEA.l ptr_userlibs_list,A2
0001EFB2 <AmiBlitz3.ab2@1946>   CLR.l ptr_userlibs_list
0001EFB6 <AmiBlitz3.ab2@1949>     CMPA.w #$0,A2
0001EFBA <AmiBlitz3.ab2@1950>     BEQ.w exit_free_userlib
0001EFBC <AmiBlitz3.ab2@1951>       MOVEA.l A2,A1
0001EFBE <AmiBlitz3.ab2@1952>       MOVEQ.l #$26,D0
0001EFC0 <AmiBlitz3.ab2@1953>       MOVEA.l (A2),A2
0001EFC6 <AmiBlitz3.ab2@1954>       MOVE.l mempool,a0
0001EFCC <AmiBlitz3.ab2@1955>       MOVEA.l _execbase,A6
0001EFD0 <AmiBlitz3.ab2@1956>       JSR _FreePooled(A6)
0001EFD4 <AmiBlitz3.ab2@1957> BRA.w loop_free_userlib
0001EFD6 <AmiBlitz3.ab2@1960> RTS
0001EFD8 <AmiBlitz3.ab2@1963> pass:  Dc.w 0                                             ; smallpass org source
0001EFDA <AmiBlitz3.ab2@1964> compiler_job: Dc.w 0                                      ; added by thilo: what the compiler is doing at the moment
0001EFE0 <AmiBlitz3.ab2@1968>   MOVE.l A7,errstack                                      ;startcompile
0001EFE6 <AmiBlitz3.ab2@1977>   CLR.l reqmode
0001EFF0 <AmiBlitz3.ab2@1979>   MOVE.l #Aclearallvars,errcont
0001EFFA <AmiBlitz3.ab2@1980>   MOVE.l #concomstack,concomsp
0001EFFE <AmiBlitz3.ab2@1987>   MOVE.w #1450,D0
0001F000 <AmiBlitz3.ab2@1988>   LSR.w #3,D0
0001F002 <AmiBlitz3.ab2@1989>   SUBQ.w #7,D0                                             ; 173
0001F008 <AmiBlitz3.ab2@1990>   MOVE.w D0,progressbar_width
0001F00A <AmiBlitz3.ab2@1991>   SWAP D0
0001F00C <AmiBlitz3.ab2@1992>   CLR.w D0
0001F012 <AmiBlitz3.ab2@1993>   MOVE.l numlines,d1
0001F016 <AmiBlitz3.ab2@1994>   DIVU.l d1,d0                                             ; progressbar_width / numlines
0001F018 <AmiBlitz3.ab2@1996>   TST.w D0
0001F01C <AmiBlitz3.ab2@1997>   BNE.w JL_0_37C0
0001F01E <AmiBlitz3.ab2@1998>   MOVEQ.l #-$01,D0
0001F024 <AmiBlitz3.ab2@2001>   MOVE.w D0,progress_per_line
0001F02C <AmiBlitz3.ab2@2009>   BTST #$7,use_debugger
0001F030 <AmiBlitz3.ab2@2011>   BNE 'debugon
0001F036 <AmiBlitz3.ab2@2012>   CLR.w debugmode
0001F03A <AmiBlitz3.ab2@2013> BRA.b 'debugoff
0001F040 <AmiBlitz3.ab2@2016>   SNE debugmode
0001F078 <AmiBlitz3.ab2@2024>   !ComData_SetB{comByte_DebugMode,debugmode}
0001F07E <AmiBlitz3.ab2@2027>   CLR.w dirmode                                            ;direct mode flag
0001F084 <AmiBlitz3.ab2@2028>   CLR.w ezerr                                              ;quiet error
0001F08A <AmiBlitz3.ab2@2029>   CLR.l currentfunction
0001F090 <AmiBlitz3.ab2@2030>   CLR.w connest
0001F096 <AmiBlitz3.ab2@2031>   CLR.w varmode
0001F09C <AmiBlitz3.ab2@2032>   CLR.w proceduremode
0001F0A2 <AmiBlitz3.ab2@2033>   CLR.w ininclude
0001F0A8 <AmiBlitz3.ab2@2034>   CLR.w intstring
0001F0AE <AmiBlitz3.ab2@2035>   CLR.w pass
0001F0B6 <AmiBlitz3.ab2@2036>   MOVE.w #0,compiler_job
0001F0BC <AmiBlitz3.ab2@2037>   CLR.l funcscanon
0001F0C2 <AmiBlitz3.ab2@2045>   CLR.l funcscanon
0001F0C6 <AmiBlitz3.ab2@2046>   BSR.w compileall
0001F0CC <AmiBlitz3.ab2@2048>   MOVE.w dontwrite,d0
0001F0D0 <AmiBlitz3.ab2@2049>   CMP.w #1,d0
0001F0D4 <AmiBlitz3.ab2@2050>   BNE 'l3
0001F0DA <AmiBlitz3.ab2@2051>   CLR.w dontwrite
0001F0DE <AmiBlitz3.ab2@2052>   BSR compileall                                           ;if a function is not found
0001F0E4 <AmiBlitz3.ab2@2056>   TST.b funcoptimize
0001F0EA <AmiBlitz3.ab2@2058>   LEA firstproc,a0
0001F0F0 <AmiBlitz3.ab2@2059>   CLR.l savefuncspace
0001F0F2 <AmiBlitz3.ab2@2060>   MOVE.l (a0),d0
0001F0F4 <AmiBlitz3.ab2@2064>     MOVE.l d0,a0
0001F0F8 <AmiBlitz3.ab2@2065>     BEQ 'out
0001F0FC <AmiBlitz3.ab2@2066>     TST.b isfunc(a0)
0001F100 <AmiBlitz3.ab2@2067>     BNE 'nex
0001F104 <AmiBlitz3.ab2@2068>     MOVEM.l d2/a6/a0,-(a7)
0001F106 <AmiBlitz3.ab2@2070>     MOVEQ #0,d0
0001F10A <AmiBlitz3.ab2@2071>     MOVE.b $21+#funcentry_extend-1(a0),d0
0001F10E <AmiBlitz3.ab2@2072>     SUB.w #$21+#funcentry_extend,d0
0001F112 <AmiBlitz3.ab2@2073>     ADD.w #16,d0
0001F118 <AmiBlitz3.ab2@2074>     MOVE.l #$10000,d1
0001F11A <AmiBlitz3.ab2@2075>     MOVE.l d0,d2
0001F120 <AmiBlitz3.ab2@2076>     MOVEA.l _execbase,A6
0001F124 <AmiBlitz3.ab2@2077>     JSR _AllocMem(a6)         ; thilo: not 100% sure about this!
0001F126 <AmiBlitz3.ab2@2078>     MOVE.l d0,a1
0001F12A <AmiBlitz3.ab2@2079>     MOVE.l d2,4(a1)
0001F130 <AmiBlitz3.ab2@2080>     MOVE.l unusedfunc,(a1)
0001F136 <AmiBlitz3.ab2@2081>     MOVE.l d0,unusedfunc
0001F13A <AmiBlitz3.ab2@2082>     MOVEM.l (a7)+,a6/a0/d2
0001F13E <AmiBlitz3.ab2@2083>     MOVE.l isfunc+1(a0),d0
0001F140 <AmiBlitz3.ab2@2084>     ADDQ.l #6,d0
0001F146 <AmiBlitz3.ab2@2085>     ADD.l d0,savefuncspace
0001F14A <AmiBlitz3.ab2@2088>     MOVE.l d0,8(a1)
0001F14E <AmiBlitz3.ab2@2089>     LEA 12(a1),a1
0001F150 <AmiBlitz3.ab2@2090>     MOVE.l a0,-(a7)
0001F154 <AmiBlitz3.ab2@2091>     LEA $21+#funcentry_extend(a0),a0
0001F156 <AmiBlitz3.ab2@2094>       MOVE.b (a0)+,(a1)+
0001F15A <AmiBlitz3.ab2@2095>     BNE 'l1
0001F15C <AmiBlitz3.ab2@2096>     MOVE.l (a7)+,a0
0001F15E <AmiBlitz3.ab2@2099>     MOVE.l (a0),d0
0001F162 <AmiBlitz3.ab2@2100> BRA 'lr1
0001F16A <AmiBlitz3.ab2@2103>   BTST #$7,make_smallestcode
0001F16E <AmiBlitz3.ab2@2104>   BEQ.b JL_0_3844                                           ;optimize for executable
0001F174 <AmiBlitz3.ab2@2105>   CLR.l morememadd
0001F178 <AmiBlitz3.ab2@2107>   BSR.w alloxadj
0001F17C <AmiBlitz3.ab2@2108>   BEQ.w JL_0_388A
0001F182 <AmiBlitz3.ab2@2109>   ADDQ.w #1,pass
0001F186 <AmiBlitz3.ab2@2110>   BSR.w compileall
0001F18C <AmiBlitz3.ab2@2113>   MOVE.w dontwrite,D1
0001F190 <AmiBlitz3.ab2@2114>   BEQ.w JL_0_38A2
0001F194 <AmiBlitz3.ab2@2133> BRA.w JL_0_3896
0001F19C <AmiBlitz3.ab2@2144>   MOVE.w #$FFFF,anyerrs
0001F1A0 <AmiBlitz3.ab2@2145> BRA.w JL_0_38A2
0001F1A4 <AmiBlitz3.ab2@2148>   BSR.w alloxinc                                          ;increase all by 50%
0001F1A8 <AmiBlitz3.ab2@2149>   BEQ.w Aclearallvars
0001F1AC <AmiBlitz3.ab2@2150> BRA.w JL_0_3824
0001F1B0 <AmiBlitz3.ab2@2162> BRA.w JL_0_38A6                                            ;???????
0001F1B6 <AmiBlitz3.ab2@2166>   JSR freereps
0001F1BC <AmiBlitz3.ab2@2167>   JSR freesels
0001F1C2 <AmiBlitz3.ab2@2168>   JSR AJL_0_6DF2
0001F1C8 <AmiBlitz3.ab2@2169>   JSR freepends
0001F1CE <AmiBlitz3.ab2@2170>   JSR freeifs
0001F1D4 <AmiBlitz3.ab2@2171>   JSR AJL_0_C188
0001F1DA <AmiBlitz3.ab2@2172>   JSR AJL_0_C15C
0001F1E0 <AmiBlitz3.ab2@2173>   JSR AJL_0_D9BC
0001F1E6 <AmiBlitz3.ab2@2176> JMP cleartemplabel
0001F1EA <AmiBlitz3.ab2@2179> mempool2:  Dc.l 0
0001F1F0 <AmiBlitz3.ab2@2183>   JSR Aclearcache
0001F1F8 <AmiBlitz3.ab2@2185>   BTST #$7,use_debugger
0001F1FC <AmiBlitz3.ab2@2187>   BNE 'debugon
0001F202 <AmiBlitz3.ab2@2188>   CLR.w debugmode
0001F206 <AmiBlitz3.ab2@2189> BRA.b 'debugoff
0001F20C <AmiBlitz3.ab2@2192>   SNE debugmode
0001F244 <AmiBlitz3.ab2@2197>   !ComData_SetB{comByte_DebugMode,debugmode}
0001F24A <AmiBlitz3.ab2@2199>   LEA regtable,a0
0001F24C <AmiBlitz3.ab2@2200>   MOVEQ #10,d0
0001F24E <AmiBlitz3.ab2@2203>     CLR.l (a0)+
0001F252 <AmiBlitz3.ab2@2204>   DBF d0,'l1
0001F258 <AmiBlitz3.ab2@2206>   LEA includetemp2,a0
0001F25A <AmiBlitz3.ab2@2207>   CLR.b (a0)
0001F264 <AmiBlitz3.ab2@2208>   MOVE.l #7,maxregs
0001F26A <AmiBlitz3.ab2@2209>   CLR.w debugnest
0001F270 <AmiBlitz3.ab2@2210>   CLR.b funcparloop
0001F276 <AmiBlitz3.ab2@2211>   CLR.b nostringopt
0001F27C <AmiBlitz3.ab2@2212>   CLR.b firsttime
0001F282 <AmiBlitz3.ab2@2213>   CLR.l lastdestpointer
0001F288 <AmiBlitz3.ab2@2214>   CLR.l lastwritedat
0001F28E <AmiBlitz3.ab2@2215>   CLR.l prevwritedat
0001F294 <AmiBlitz3.ab2@2216>   CLR.l includeline
0001F29A <AmiBlitz3.ab2@2217>   CLR.b incnif
0001F2A0 <AmiBlitz3.ab2@2218>   CLR.b formode
0001F2A6 <AmiBlitz3.ab2@2219>   CLR.b funccall
0001F2AC <AmiBlitz3.ab2@2220>   CLR.w objectcount
0001F2B2 <AmiBlitz3.ab2@2221>   CLR.b resdisable
0001F2B8 <AmiBlitz3.ab2@2222>   CLR.b developobject
0001F2BE <AmiBlitz3.ab2@2223>   CLR.b optistring
0001F2C4 <AmiBlitz3.ab2@2224>   CLR.b optistring2
0001F2CA <AmiBlitz3.ab2@2225>   CLR.b optiarray
0001F2D0 <AmiBlitz3.ab2@2226>   CLR.b quickadd
0001F2D6 <AmiBlitz3.ab2@2227>   CLR.w newmode
0001F2DC <AmiBlitz3.ab2@2228>   CLR.w mode
0001F2E2 <AmiBlitz3.ab2@2229>   CLR.w string1
0001F2E8 <AmiBlitz3.ab2@2230>   CLR.b fastfunc
0001F2EE <AmiBlitz3.ab2@2231>   CLR.w load_var_size
0001F2F4 <AmiBlitz3.ab2@2232>   CLR.w load_var_reg
0001F2FA <AmiBlitz3.ab2@2233>   CLR.l load_var_addr
0001F300 <AmiBlitz3.ab2@2234>   CLR.w imm_size
0001F306 <AmiBlitz3.ab2@2235>   CLR.w imm_reg
0001F30C <AmiBlitz3.ab2@2236>   CLR.l imm_addr
0001F312 <AmiBlitz3.ab2@2237>   CLR.b _dcb
0001F318 <AmiBlitz3.ab2@2238>   CLR.l nohunkoffset
0001F31E <AmiBlitz3.ab2@2239>   CLR.b peekaddrsize
0001F324 <AmiBlitz3.ab2@2240>   CLR.b typecheck
0001F32A <AmiBlitz3.ab2@2241>   CLR.b declare2
0001F330 <AmiBlitz3.ab2@2242>   CLR.b declare
0001F336 <AmiBlitz3.ab2@2243>   CLR.l myoline                                          ;check
0001F33C <AmiBlitz3.ab2@2244>   CLR.l myline                                          ;check
0001F342 <AmiBlitz3.ab2@2245>   CLR.b newvariable
0001F348 <AmiBlitz3.ab2@2246>   CLR.b saved0
0001F34E <AmiBlitz3.ab2@2247>   CLR.l bsssize
0001F354 <AmiBlitz3.ab2@2248>   CLR.l chipsize
0001F35A <AmiBlitz3.ab2@2249>   CLR.b infunctioncode
0001F364 <AmiBlitz3.ab2@2250>   MOVE.l #-1,bssstart
0001F36E <AmiBlitz3.ab2@2251>   MOVE.l #-1,bssend
0001F378 <AmiBlitz3.ab2@2252>   MOVE.l #-1,chipstart
0001F382 <AmiBlitz3.ab2@2253>   MOVE.l #-1,chipend
0001F38A <AmiBlitz3.ab2@2254>   MOVE.w #0,bssmode
0001F390 <AmiBlitz3.ab2@2255>   CLR.w a2offset
0001F396 <AmiBlitz3.ab2@2256>   CLR.w fast
0001F39C <AmiBlitz3.ab2@2257>   CLR.w fpu
0001F3A2 <AmiBlitz3.ab2@2258>   CLR.b iee
0001F3A8 <AmiBlitz3.ab2@2259>   CLR.w newsyntax
0001F3AC <AmiBlitz3.ab2@2260>   BSR.w JL_0_38A6
0001F3B2 <AmiBlitz3.ab2@2261>   JSR AJL_0_7962
0001F3B8 <AmiBlitz3.ab2@2262>   JSR frallvars
0001F3BE <AmiBlitz3.ab2@2263>   JSR fralltypes
0001F3C4 <AmiBlitz3.ab2@2264>   JSR freemacs
0001F3CA <AmiBlitz3.ab2@2265>   JSR clearfunctionlist
0001F3D0 <AmiBlitz3.ab2@2266>   TST.w pass
0001F3D6 <AmiBlitz3.ab2@2268>   JSR clearlabels
0001F3DC <AmiBlitz3.ab2@2269>   JSR clearhash
0001F3E2 <AmiBlitz3.ab2@2272>   LEA devo,a0
0001F3E6 <AmiBlitz3.ab2@2273>   MOVEM.l a0-a6/d0-d7,-(a7)
0001F3EC <AmiBlitz3.ab2@2274>   LEA ptr_parameterstore,a1
0001F3EE <AmiBlitz3.ab2@2277>     MOVE.b (a0)+,(a1)+
0001F3F2 <AmiBlitz3.ab2@2278>   BNE 'l1b
0001F3F4 <AmiBlitz3.ab2@2279>   MOVEQ #13,d2
0001F3FA <AmiBlitz3.ab2@2280>   JSR findlabel2
0001F3FE <AmiBlitz3.ab2@2281>   BNE 'd
0001F402 <AmiBlitz3.ab2@2282>   CLR.l 8(a2)
0001F406 <AmiBlitz3.ab2@2285>   MOVEM.l (a7)+,a0-a6/d0-d7
0001F430 <AmiBlitz3.ab2@2286>   !basic
0001F4A4 <AmiBlitz3.ab2@2287>   dos_Delete{dos_AddPart{my_systemdir$,"ab_compileerror.txt"}}
0001F4C2 <AmiBlitz3.ab2@2288>   !asm
0001F4C8 <AmiBlitz3.ab2@2289>   CLR.b returncode
0001F4CE <AmiBlitz3.ab2@2290> JMP freeprocvs
0001F4D4 <AmiBlitz3.ab2@2294>   MOVE.l #bssstore-labelhash,d0
0001F4D6 <AmiBlitz3.ab2@2295>   ASR.l #2,d0
0001F4DC <AmiBlitz3.ab2@2296>   LEA labelhash,a0
0001F4DE <AmiBlitz3.ab2@2299>     CLR.l (a0)+
0001F4E0 <AmiBlitz3.ab2@2300>     SUBQ.l #1,d0
0001F4E4 <AmiBlitz3.ab2@2301>   BNE.s 'l10
0001F4EA <AmiBlitz3.ab2@2303>   LEA labelbase,a1
0001F4EC <AmiBlitz3.ab2@2304>   MOVE.l (a1),d0
0001F4F0 <AmiBlitz3.ab2@2305>   BEQ 'l11
0001F4F2 <AmiBlitz3.ab2@2308>     MOVE.l d0,a1
0001F4F6 <AmiBlitz3.ab2@2309>     TST.l 4(a1)
0001F4FA <AmiBlitz3.ab2@2310>     BEQ 'l29
0001F4FE <AmiBlitz3.ab2@2311>     LEA $13(a1),a0
0001F500 <AmiBlitz3.ab2@2312>     MOVEQ #0,d0
0001F502 <AmiBlitz3.ab2@2313>     MOVEQ #0,d1
0001F504 <AmiBlitz3.ab2@2316>       MOVE.b (a0)+,d1
0001F508 <AmiBlitz3.ab2@2317>       BEQ 'l12
0001F50E <AmiBlitz3.ab2@2318>       !hashalgo
0001F512 <AmiBlitz3.ab2@2319> BRA 'l13
0001F518 <AmiBlitz3.ab2@2322>     LEA labelhash,a0
0001F51E <AmiBlitz3.ab2@2323>     AND.l #hashsize,d0
0001F520 <AmiBlitz3.ab2@2324>      ASL.l #2,d0
0001F524 <AmiBlitz3.ab2@2325>     MOVE.l 0(a0,d0),d1                                     ;*4
0001F528 <AmiBlitz3.ab2@2326>     MOVE.l d1,$c(a1)
0001F52C <AmiBlitz3.ab2@2327>     MOVE.l a1,0(a0,d0)
0001F52E <AmiBlitz3.ab2@2330>     MOVE.l (a1),d0
0001F532 <AmiBlitz3.ab2@2331>   BNE 'l21
0001F534 <AmiBlitz3.ab2@2334> RTS
0001F53A <AmiBlitz3.ab2@2338>   MOVEA.l lastrestype,A0
0001F53C <AmiBlitz3.ab2@2339>   MOVEA.l (A0),A2
0001F53E <AmiBlitz3.ab2@2340>   CLR.l (A0)
0001F544 <AmiBlitz3.ab2@2341> JMP freetypes
0001F54A <AmiBlitz3.ab2@2345>   MOVEA.l varbase,A3
0001F550 <AmiBlitz3.ab2@2346>   CLR.l varbase
0001F554 <AmiBlitz3.ab2@2349>   CMPA.w #$0,A3
0001F558 <AmiBlitz3.ab2@2350>   BEQ.w 'l20
0001F55A <AmiBlitz3.ab2@2351>   MOVEA.l A3,A1
0001F55C <AmiBlitz3.ab2@2352>   MOVEA.l (A3),A3
0001F55E <AmiBlitz3.ab2@2353>   MOVEQ.l #$00,D0
0001F562 <AmiBlitz3.ab2@2354>   MOVE.b $E+4(A1),D0
0001F568 <AmiBlitz3.ab2@2355>   MOVEA.l _execbase,A6
0001F56E <AmiBlitz3.ab2@2356>   MOVE.l mempool2,a0
0001F572 <AmiBlitz3.ab2@2357>   JSR _FreePooled(A6)
0001F576 <AmiBlitz3.ab2@2358> BRA.w 'l10
0001F578 <AmiBlitz3.ab2@2361> RTS
0001F57E <AmiBlitz3.ab2@2366>   LEA firstiff,A2
0001F580 <AmiBlitz3.ab2@2367>   MOVEQ.l #$0E,D2
0001F586 <AmiBlitz3.ab2@2368> JMP freeslist
0001F588 <AmiBlitz3.ab2@2374> progressbar_width:   Dc.w 100                              ;riteend org source ;right end of include strip
0001F58A <AmiBlitz3.ab2@2375> inmacro:             Ds.w 1                                ;macmask org source ;macro found
0001F590 <AmiBlitz3.ab2@2379>   CLR.w inmacro
0001F596 <AmiBlitz3.ab2@2380>   ADDQ.l #1,globallinecount
0001F59C <AmiBlitz3.ab2@2381>   CLR.b nostringopt
0001F5A0 <AmiBlitz3.ab2@2382>   BSR.w JL_0_3CA4
0001F5A6 <AmiBlitz3.ab2@2383>   CLR.w instringon
0001F5AC <AmiBlitz3.ab2@2386>   TST.w ininclude
0001F5B0 <AmiBlitz3.ab2@2387>   BEQ.w JL_0_39B0
0001F5B6 <AmiBlitz3.ab2@2388>   ADDQ.l #1,includeline
0001F5BC <AmiBlitz3.ab2@2389>     JSR ab3_WriteDebugFile
0001F5C2 <AmiBlitz3.ab2@2390>   JSR AJL_0_C09E
0001F5C6 <AmiBlitz3.ab2@2391>   BEQ.w JL_0_39B0
0001F5CC <AmiBlitz3.ab2@2392>   MOVE.w ininclude,D0
0001F5D0 <AmiBlitz3.ab2@2393>   CMP.w #$4,D0
0001F5D4 <AmiBlitz3.ab2@2394>   BCC.w JL_0_39AC
0001F5D6 <AmiBlitz3.ab2@2395>   ADD.w D0,D0
0001F5DC <AmiBlitz3.ab2@2396>   LEA progress_per_line,A0
0001F5E0 <AmiBlitz3.ab2@2397>   MOVE.w $0(A0,D0.W),D2
0001F5E4 <AmiBlitz3.ab2@2398>   CMP.w progressbar_width(PC),D2
0001F5E8 <AmiBlitz3.ab2@2399>   BCC.w JL_0_39AC
0001F5EC <AmiBlitz3.ab2@2400>   ADDQ.w #1,$0(A0,D0.W)
0001F5EE <AmiBlitz3.ab2@2401>   LSR.w #1,D0
0001F5F0 <AmiBlitz3.ab2@2402>   MOVE.l d0,d1
0001F5F2 <AmiBlitz3.ab2@2403>   EXT.l d1
0001F5F4 <AmiBlitz3.ab2@2404>   MOVE.l d2,d0
0001F5F6 <AmiBlitz3.ab2@2405>   EXT.l d0                                                 ;d0=x,d1=y
0001F5FC <AmiBlitz3.ab2@2407>   JSR update_progressbar
0001F5FE <AmiBlitz3.ab2@2410>   MOVEQ.l #-$01,D0
0001F600 <AmiBlitz3.ab2@2411> RTS
0001F606 <AmiBlitz3.ab2@2415>   MOVE.l titleat,D0
0001F608 <AmiBlitz3.ab2@2416>   MOVEQ.l #$00,D1
0001F60E <AmiBlitz3.ab2@2417>   MOVE.w progress_per_line,D1
0001F610 <AmiBlitz3.ab2@2418>   ADD.l D1,D0
0001F612 <AmiBlitz3.ab2@2419>   MOVE.l D0,D1
0001F614 <AmiBlitz3.ab2@2420>   SWAP D0
0001F61A <AmiBlitz3.ab2@2421>   CMP.w titleat,D0
0001F61E <AmiBlitz3.ab2@2422>    BEQ.w JL_0_39E4
0001F620 <AmiBlitz3.ab2@2425>   EXT.l d0
0001F622 <AmiBlitz3.ab2@2426>   MOVE.l d1,-(a7)
0001F62A <AmiBlitz3.ab2@2429>   MOVE.w #1,compiler_job                                    ; set to compiler job 1 (=build executable)
0001F630 <AmiBlitz3.ab2@2430>   JSR update_progressbar
0001F638 <AmiBlitz3.ab2@2431>   MOVE.w #0,compiler_job                                    ; set to compiler job 0 (=compile source)
0001F63A <AmiBlitz3.ab2@2435>   MOVE.l (a7)+,d1
0001F640 <AmiBlitz3.ab2@2438>   MOVE.l D1,titleat
0001F646 <AmiBlitz3.ab2@2439>   ADDQ.l #1,linenumat
0001F64C <AmiBlitz3.ab2@2440>   CLR.w linedone
0001F652 <AmiBlitz3.ab2@2441>   JSR ab3_WriteDebugFile  ; write to DebugFile every main source line
0001F658 <AmiBlitz3.ab2@2443>   SUBQ.l #1,numlines2
0001F65C <AmiBlitz3.ab2@2444>    BEQ.w JL_0_3A12
0001F662 <AmiBlitz3.ab2@2445>   MOVEA.l sourceline,A0
0001F664 <AmiBlitz3.ab2@2446>   MOVEA.l (A0),A0
0001F66A <AmiBlitz3.ab2@2447>   MOVE.l A0,sourceline
0001F66E <AmiBlitz3.ab2@2448>   LEA $9(A0),A5
0001F670 <AmiBlitz3.ab2@2451> RTS
0001F672 <AmiBlitz3.ab2@2455>   MOVE.w D0,-(A7)
0001F674 <AmiBlitz3.ab2@2456>   MOVEQ.l #$03,D0
0001F676 <AmiBlitz3.ab2@2459>     MOVE.w D1,D2
0001F67A <AmiBlitz3.ab2@2460>     ANDI.w #$F,D2
0001F67E <AmiBlitz3.ab2@2461>     ADDI.w #$30,D2
0001F682 <AmiBlitz3.ab2@2462>     CMP.w #$3A,D2
0001F686 <AmiBlitz3.ab2@2463>      BCS.w JL_0_3A2C
0001F688 <AmiBlitz3.ab2@2464>     ADDQ.w #7,D2
0001F68C <AmiBlitz3.ab2@2467>     MOVE.b D2,$0(A0,D0.W)
0001F68E <AmiBlitz3.ab2@2468>     LSR.w #4,D1
0001F692 <AmiBlitz3.ab2@2469>   DBF D0,JL_0_3A18
0001F694 <AmiBlitz3.ab2@2471>   MOVE.w (A7)+,D0
0001F696 <AmiBlitz3.ab2@2472> RTS
0001F69C <AmiBlitz3.ab2@2482>   MOVE.w skipcode,D1
0001F6A0 <AmiBlitz3.ab2@2483>   BNE.w JL_0_3A46
0001F6A2 <AmiBlitz3.ab2@2484> RTS
0001F6A4 <AmiBlitz3.ab2@2487>   MOVE.l A5,-(A7)
0001F6A6 <AmiBlitz3.ab2@2488>   MOVEQ.l #$3A,D1                                          ;':'
0001F6A8 <AmiBlitz3.ab2@2489>   MOVEQ.l #$21,D2                                          ;'!'
0001F6AA <AmiBlitz3.ab2@2490>   MOVEQ.l #$3B,D3                                          ;';'
0001F6AC <AmiBlitz3.ab2@2491>   MOVEQ.l #$22,D4                                          ;'"'
0001F6AE <AmiBlitz3.ab2@2494>   MOVE.b (A5)+,D0
0001F6B2 <AmiBlitz3.ab2@2495>    BEQ.w JL_0_3CA0
0001F6B6 <AmiBlitz3.ab2@2496>    BPL.w JL_0_3A60
0001F6B8 <AmiBlitz3.ab2@2497>   MOVE.b (A5)+,D0
0001F6BC <AmiBlitz3.ab2@2498> BRA.w JL_0_3A50
0001F6BE <AmiBlitz3.ab2@2501>   CMP.b D4,D0
0001F6C2 <AmiBlitz3.ab2@2502>    BNE.w JL_0_3A82
0001F6C4 <AmiBlitz3.ab2@2505>   MOVE.b (A5)+,D0
0001F6C8 <AmiBlitz3.ab2@2506>    BEQ.w notqerr
0001F6CC <AmiBlitz3.ab2@2512>   CMP.b #$22,D0
0001F6D0 <AmiBlitz3.ab2@2513>    BNE.w JL_0_3A66
0001F6D4 <AmiBlitz3.ab2@2514> BRA.w JL_0_3A50
0001F6D6 <AmiBlitz3.ab2@2517>   CMP.b D1,D0
0001F6DA <AmiBlitz3.ab2@2518>    BEQ.w JL_0_3CA0
0001F6DC <AmiBlitz3.ab2@2519>   CMP.b D3,D0
0001F6E0 <AmiBlitz3.ab2@2520>    BEQ.w JL_0_3CA0
0001F6E2 <AmiBlitz3.ab2@2523>   CMP.b D2,D0
0001F6E6 <AmiBlitz3.ab2@2524>    BNE.w JL_0_3A50
0001F6EE <AmiBlitz3.ab2@2525>   MOVE.w #$FFFF,inmacro                                    ; no runtimecheck in macros
0001F6F0 <AmiBlitz3.ab2@2526>   MOVEA.l A5,A3
0001F6F6 <AmiBlitz3.ab2@2527>    JSR getparameter2
0001F6FA <AmiBlitz3.ab2@2528>    BNE.w JL_0_3AAC
0001F700 <AmiBlitz3.ab2@2529> JMP syntaxerr
0001F70A <AmiBlitz3.ab2@2534>    MOVE.w oldqflag,instringon
0001F710 <AmiBlitz3.ab2@2535>   MOVEA.l lastsourcepos,A5
0001F716 <AmiBlitz3.ab2@2536>    JSR findmac                                             ;find macro
0001F71A <AmiBlitz3.ab2@2537>    BEQ.w JL_0_3ABE
0001F720 <AmiBlitz3.ab2@2538> JMP nomacerr
0001F726 <AmiBlitz3.ab2@2541>   TST.b debugmode
0001F72A <AmiBlitz3.ab2@2542>   BEQ 'sk1
0001F72E <AmiBlitz3.ab2@2543>   MOVE.w #$4e71,d1
0001F734 <AmiBlitz3.ab2@2544>   JSR writeword
0001F736 <AmiBlitz3.ab2@2545>   MOVE.l a5,-(a7)
0001F738 <AmiBlitz3.ab2@2546>   MOVE.l a3,a5
0001F73A <AmiBlitz3.ab2@2547>   SUBQ.l #1,a5
0001F742 <AmiBlitz3.ab2@2548>   MOVE.w #$0,inmacro
0001F746 <AmiBlitz3.ab2@2549>   BSR debugstuffa
0001F74E <AmiBlitz3.ab2@2550>   MOVE.w #$FFFF,inmacro
0001F750 <AmiBlitz3.ab2@2551>   MOVE.l (a7)+,a5
0001F754 <AmiBlitz3.ab2@2552>   MOVE.w #$4e71,d1
0001F75A <AmiBlitz3.ab2@2553>   JSR writeword
0001F75C <AmiBlitz3.ab2@2556>   MOVEA.l A5,A4
0001F760 <AmiBlitz3.ab2@2559>    CMP.b #" ",(a4)+
0001F764 <AmiBlitz3.ab2@2560>     BEQ 'l5a
0001F766 <AmiBlitz3.ab2@2561>      SUBQ.l#1,a4
0001F76A <AmiBlitz3.ab2@2562>      CMP.b #",",(a4)
0001F76E <AmiBlitz3.ab2@2563>     BEQ JL_0_3AEA
0001F770 <AmiBlitz3.ab2@2566>   MOVEQ.l #$00,D4
0001F776 <AmiBlitz3.ab2@2567>   TST.b newsyntax
0001F77A <AmiBlitz3.ab2@2568>   BEQ 'l10b
0001F77E <AmiBlitz3.ab2@2569>   MOVEM.l a0/d0,-(a7)
0001F782 <AmiBlitz3.ab2@2570>   MOVE.l 4(a2),a0
0001F786 <AmiBlitz3.ab2@2571>   MOVE.w 8(a2),d0
0001F78A <AmiBlitz3.ab2@2574>   CMP.b #"`",(a0)+
0001F78E <AmiBlitz3.ab2@2575>   BEQ 'x1
0001F790 <AmiBlitz3.ab2@2576>   SUBQ.w #1,d0
0001F794 <AmiBlitz3.ab2@2577>   BNE 'x2
0001F798 <AmiBlitz3.ab2@2578> BRA 'x3
0001F79C <AmiBlitz3.ab2@2581>   MOVEM.l (a7)+,a0/d0
0001F7A0 <AmiBlitz3.ab2@2582> BRA 'l10
0001F7A4 <AmiBlitz3.ab2@2585>   MOVEM.l (a7)+,a0/d0
0001F7A8 <AmiBlitz3.ab2@2586> BRA JL_0_3AEA
0001F7AC <AmiBlitz3.ab2@2589>   CMPI.b #"{",(A4)
0001F7B0 <AmiBlitz3.ab2@2590>    BNE.w JL_0_3AEA
0001F7B2 <AmiBlitz3.ab2@2594>   ADDQ.l #1,a4
0001F7B6 <AmiBlitz3.ab2@2597>     CMP.b #" ",(a4)
0001F7BA <AmiBlitz3.ab2@2598>     BEQ 'l5
0001F7BE <AmiBlitz3.ab2@2599>     MOVEM.l a0/d0,-(a7)
0001F7C4 <AmiBlitz3.ab2@2600>     CLR.b exmac
0001F7CA <AmiBlitz3.ab2@2601>     LEA chartab,a0
0001F7CC <AmiBlitz3.ab2@2602>     MOVEQ #0,d0
0001F7CE <AmiBlitz3.ab2@2603>     MOVE.b (a4),d0
0001F7D2 <AmiBlitz3.ab2@2604>     BMI 'm1
0001F7D6 <AmiBlitz3.ab2@2605>     TST.b 0(a0,d0)
0001F7DA <AmiBlitz3.ab2@2606>     BEQ 'm1
0001F7E0 <AmiBlitz3.ab2@2607>     TST.b newsyntax
0001F7E4 <AmiBlitz3.ab2@2608>     BEQ 'ns1
0001F7E8 <AmiBlitz3.ab2@2609>     CMP.b #"#",d0
0001F7EC <AmiBlitz3.ab2@2610>     BEQ 'm1
0001F7F0 <AmiBlitz3.ab2@2611>     CMP.b #"$",d0
0001F7F4 <AmiBlitz3.ab2@2612>     BEQ 'm1
0001F7F8 <AmiBlitz3.ab2@2613>     CMP.b #"-",d0
0001F7FC <AmiBlitz3.ab2@2614>     BEQ 'm1
0001F800 <AmiBlitz3.ab2@2617>   CMP.b #",",d0
0001F804 <AmiBlitz3.ab2@2618>     BEQ 'm1
0001F808 <AmiBlitz3.ab2@2619>     CMP.b #"{",d0
0001F80C <AmiBlitz3.ab2@2620>     BNE 'm1b
0001F80E <AmiBlitz3.ab2@2621>     ADDQ.l #1,a4
0001F812 <AmiBlitz3.ab2@2622> BRA 'm1
0001F818 <AmiBlitz3.ab2@2625>   TST.b newsyntax
0001F81C <AmiBlitz3.ab2@2626>     BEQ 'm1
0001F824 <AmiBlitz3.ab2@2627>     MOVE.b #1,exmac
0001F828 <AmiBlitz3.ab2@2630>   MOVEM.l (a7)+,a0/d0
0001F82E <AmiBlitz3.ab2@2631>     TST.b exmac
0001F832 <AmiBlitz3.ab2@2632>     BNE JL_0_3AEA
0001F834 <AmiBlitz3.ab2@2639>   TST.b (a4)
0001F838 <AmiBlitz3.ab2@2640>   BEQ JL_0_3AEA
0001F83E <AmiBlitz3.ab2@2643>   MOVEA.l ptr_macrobuffer_begin,A0
0001F840 <AmiBlitz3.ab2@2646>   ADDQ.w #1,D4
0001F842 <AmiBlitz3.ab2@2647>   MOVE.l A4,(A0)
0001F846 <AmiBlitz3.ab2@2648>   CLR.w 4(a0)
0001F84A <AmiBlitz3.ab2@2649>    BSR.w JL_0_3CC6
0001F84C <AmiBlitz3.ab2@2651>   ADDQ.l #4,a0
0001F84E <AmiBlitz3.ab2@2655>   SUBQ.w #1,(a0)+
0001F852 <AmiBlitz3.ab2@2656>   CMP.b #$7D,D0
0001F856 <AmiBlitz3.ab2@2657>   BEQ 'l10
0001F858 <AmiBlitz3.ab2@2658>   TST.b d0
0001F85C <AmiBlitz3.ab2@2659>   BEQ 'l10
0001F860 <AmiBlitz3.ab2@2660> BRA JL_0_3AD0
0001F866 <AmiBlitz3.ab2@2664>   CLR.l sourceline3
0001F868 <AmiBlitz3.ab2@2665>   MOVEA.l A4,A5
0001F86E <AmiBlitz3.ab2@2668>   MOVE.w D4,numarg
0001F874 <AmiBlitz3.ab2@2675>   MOVE.l #$01,D1
0001F87A <AmiBlitz3.ab2@2676>   MOVEA.l _execbase,A6
0001F880 <AmiBlitz3.ab2@2677>   MOVE.l mempool,a0
0001F886 <AmiBlitz3.ab2@2678>   MOVE.l macrobuffer_size,D0
0001F88C <AmiBlitz3.ab2@2679>   CMP.l #40000,d0
0001F890 <AmiBlitz3.ab2@2680>   BGE 'l1m
0001F896 <AmiBlitz3.ab2@2681>   MOVE.l #40000,d0
0001F89C <AmiBlitz3.ab2@2682>   MOVE.l d0,macrobuffer_size
0001F8A0 <AmiBlitz3.ab2@2685>   JSR _AllocPooled(a6)
0001F8AA <AmiBlitz3.ab2@2687>   MOVE.l myline,myoline
0001F8AC <AmiBlitz3.ab2@2690>   ADDQ.l #1,d0
0001F8B2 <AmiBlitz3.ab2@2691>   MOVE.l D0,myline
0001F8B4 <AmiBlitz3.ab2@2692>   MOVEA.l D0,A1
0001F8BA <AmiBlitz3.ab2@2693>   MOVE.b #":",-1(a1)
0001F8BC <AmiBlitz3.ab2@2694>   MOVEA.l A1,A6
0001F8C2 <AmiBlitz3.ab2@2695>   ADDA.l macrobuffer_size,A6
0001F8C4 <AmiBlitz3.ab2@2696>   MOVEA.l (A7)+,A0
0001F8C6 <AmiBlitz3.ab2@2699>   CMPA.l A6,A1
0001F8CA <AmiBlitz3.ab2@2700>    BCC.w mbovererr
0001F8CC <AmiBlitz3.ab2@2701>   MOVE.b (A0)+,(a1)+
0001F8CE <AmiBlitz3.ab2@2702>   CMPA.l A3,A0
0001F8D2 <AmiBlitz3.ab2@2703>    BCS.w JL_0_3B1E
0001F8D4 <AmiBlitz3.ab2@2704>   SUBQ.w #1,A1
0001F8D8 <AmiBlitz3.ab2@2705>   MOVE.w $8(A2),D1
0001F8DC <AmiBlitz3.ab2@2706>    BEQ.w JL_0_3C70
0001F8E4 <AmiBlitz3.ab2@2707>   MOVE.w $A(A2),macnum
0001F8E8 <AmiBlitz3.ab2@2708>   ADDQ.w #1,$A(A2)
0001F8EC <AmiBlitz3.ab2@2709>   MOVEA.l $4(A2),A2
0001F8EE <AmiBlitz3.ab2@2710>   SUBQ.w #1,D1
0001F8F4 <AmiBlitz3.ab2@2711>   CLR.b firstmline
0001F8F6 <AmiBlitz3.ab2@2714>     MOVEQ.l #$00,D0
0001F8F8 <AmiBlitz3.ab2@2715>     MOVE.b (A2)+,D0
0001F8FE <AmiBlitz3.ab2@2716>     TST.b firstmline
0001F902 <AmiBlitz3.ab2@2717>     BNE 'c1
0001F906 <AmiBlitz3.ab2@2718>     CMP.b #$22,d0
0001F90A <AmiBlitz3.ab2@2719>     BNE 's1
0001F912 <AmiBlitz3.ab2@2720>     MOVE.b #1,firstmline
0001F916 <AmiBlitz3.ab2@2723>     CMP.b #":",d0
0001F91A <AmiBlitz3.ab2@2724>     BNE 'm1
0001F922 <AmiBlitz3.ab2@2725>     MOVE.b #1,firstmline
0001F926 <AmiBlitz3.ab2@2728>     CMP.b #";",d0
0001F92A <AmiBlitz3.ab2@2729>     BNE 'c1
0001F92C <AmiBlitz3.ab2@2732>     SUBQ.w #1,d1                                           ;filter out comment
0001F92E <AmiBlitz3.ab2@2733>     MOVE.b (a2)+,d0
0001F934 <AmiBlitz3.ab2@2734>     CMP.w #":@",-1(a2)
0001F938 <AmiBlitz3.ab2@2735>     BEQ 'c2
0001F93A <AmiBlitz3.ab2@2736>     TST.w d1
0001F93E <AmiBlitz3.ab2@2737>     BNE 'l1
0001F942 <AmiBlitz3.ab2@2738>   BRA JL_0_3C6C
0001F948 <AmiBlitz3.ab2@2741>     CMP.b #":",1(a2)
0001F94C <AmiBlitz3.ab2@2742>       BNE 'l1
0001F94E <AmiBlitz3.ab2@2743>       ADDQ #2,a2
0001F950 <AmiBlitz3.ab2@2744>       SUBQ #3,d1
0001F952 <AmiBlitz3.ab2@2745>       MOVE.b (a2)+,d0
0001F95A <AmiBlitz3.ab2@2746>       MOVE.b #1,firstmline
0001F95E <AmiBlitz3.ab2@2749>     CMP.b #"`",D0
0001F962 <AmiBlitz3.ab2@2750>      BNE.w JL_0_3C56
0001F964 <AmiBlitz3.ab2@2751>     SUBQ.w #1,D1
0001F966 <AmiBlitz3.ab2@2752>     MOVE.b (A2)+,D0
0001F96A <AmiBlitz3.ab2@2753>     CMP.w #$7B,D0
0001F96E <AmiBlitz3.ab2@2754>      BEQ.w JL_0_3BB6
0001F972 <AmiBlitz3.ab2@2755>     CMP.w #$40,D0
0001F976 <AmiBlitz3.ab2@2756>      BNE.w JL_0_3B82
0001F978 <AmiBlitz3.ab2@2757>     MOVEQ.l #$00,D2
0001F97E <AmiBlitz3.ab2@2758>     MOVE.w macnum,D2
0001F980 <AmiBlitz3.ab2@2759>     MOVEA.l A1,A0
0001F982 <AmiBlitz3.ab2@2760>     MOVE.w D1,-(A7)
0001F988 <AmiBlitz3.ab2@2761>      JSR makelong
0001F98A <AmiBlitz3.ab2@2762>     MOVEA.l A0,A1
0001F98C <AmiBlitz3.ab2@2763>     MOVE.w (A7)+,D1
0001F990 <AmiBlitz3.ab2@2764>   BRA.w JL_0_3C6C
0001F994 <AmiBlitz3.ab2@2767>     ORI.w #$20,D0
0001F998 <AmiBlitz3.ab2@2768>     CMP.w #$7A,D0
0001F99C <AmiBlitz3.ab2@2769>      BCS.w JL_0_3B94
0001F9A2 <AmiBlitz3.ab2@2770>   JMP ilconsterr
0001F9A6 <AmiBlitz3.ab2@2773>     SUBI.w #$30,D0
0001F9AA <AmiBlitz3.ab2@2774>     CMP.w #$A,D0
0001F9AE <AmiBlitz3.ab2@2775>      BCS.w JL_0_3BF2
0001F9B2 <AmiBlitz3.ab2@2776>     SUBI.w #$27,D0
0001F9B6 <AmiBlitz3.ab2@2777>     CMP.w #$A,D0
0001F9BA <AmiBlitz3.ab2@2778>      BCC.w JL_0_3BB2
0001F9C0 <AmiBlitz3.ab2@2779>   JMP ilconsterr
0001F9C4 <AmiBlitz3.ab2@2782>   BRA.w JL_0_3BF2
0001F9C6 <AmiBlitz3.ab2@2785>     MOVE.l A5,-(A7)
0001F9CA <AmiBlitz3.ab2@2786>     MOVEM.l D1/A1-A2/A6,-(A7)
0001F9CC <AmiBlitz3.ab2@2787>     MOVEA.l A2,A5
0001F9D2 <AmiBlitz3.ab2@2788>      JSR AJL_0_BF6E
0001F9D6 <AmiBlitz3.ab2@2789>     CMP.w #$7D,D0
0001F9DA <AmiBlitz3.ab2@2790>      BEQ.w JL_0_3BD2
0001F9E0 <AmiBlitz3.ab2@2791>   JMP syntaxerr
0001F9E4 <AmiBlitz3.ab2@2794>     MOVEM.l (A7)+,D1/A1-A2/A6
0001F9E6 <AmiBlitz3.ab2@2795>     MOVE.l A5,D2
0001F9E8 <AmiBlitz3.ab2@2796>     SUB.l A2,D2
0001F9EA <AmiBlitz3.ab2@2797>     SUB.w D2,D1
0001F9EC <AmiBlitz3.ab2@2798>     MOVEA.l A5,A2
0001F9F2 <AmiBlitz3.ab2@2799>     CLR.w instringon
0001F9F4 <AmiBlitz3.ab2@2800>     MOVEA.l (A7)+,A5
0001F9F6 <AmiBlitz3.ab2@2801>     MOVE.l D3,D0
0001F9FA <AmiBlitz3.ab2@2802>     BPL.w JL_0_3BF2
0001FA00 <AmiBlitz3.ab2@2803>   JMP ilconsterr
0001FA02 <AmiBlitz3.ab2@2806>     SUBQ.w #1,D0
0001FA06 <AmiBlitz3.ab2@2807>      BPL.w JL_0_3C20
0001FA0C <AmiBlitz3.ab2@2811>     MOVE.w numarg,D0
0001FA10 <AmiBlitz3.ab2@2812>     DIVU #$A,D0
0001FA14 <AmiBlitz3.ab2@2813>     ADDI.w #$30,D0
0001FA16 <AmiBlitz3.ab2@2814>     CMPA.l A6,A1
0001FA1A <AmiBlitz3.ab2@2815>      BCC.w mbovererr
0001FA1C <AmiBlitz3.ab2@2816>     MOVE.b D0,(A1)+
0001FA1E <AmiBlitz3.ab2@2817>     SWAP D0
0001FA22 <AmiBlitz3.ab2@2818>     ADDI.w #$30,D0
0001FA24 <AmiBlitz3.ab2@2819>     CMPA.l A6,A1
0001FA28 <AmiBlitz3.ab2@2820>      BCC.w mbovererr
0001FA2A <AmiBlitz3.ab2@2821>     MOVE.b D0,(A1)+
0001FA2E <AmiBlitz3.ab2@2822>   BRA.w JL_0_3C6C
0001FA34 <AmiBlitz3.ab2@2828>     CMP.w numarg,D0
0001FA38 <AmiBlitz3.ab2@2829>      BCC.w JL_0_3C6C
0001FA3A <AmiBlitz3.ab2@2830>     LSL.w #1,D0
0001FA3C <AmiBlitz3.ab2@2831>     MOVE.w D0,D4
0001FA3E <AmiBlitz3.ab2@2832>     LSL.w #1,D0
0001FA40 <AmiBlitz3.ab2@2833>     ADD.w D4,D0
0001FA46 <AmiBlitz3.ab2@2834>     MOVEA.l ptr_macrobuffer_begin,A0
0001FA48 <AmiBlitz3.ab2@2835>     ADDA.w D0,A0
0001FA4C <AmiBlitz3.ab2@2836>     MOVE.w $4(A0),D4
0001FA50 <AmiBlitz3.ab2@2837>      BEQ.w JL_0_3C6C
0001FA52 <AmiBlitz3.ab2@2838>     MOVEA.l (A0),A0
0001FA54 <AmiBlitz3.ab2@2839>     SUBQ.w #1,D4
0001FA56 <AmiBlitz3.ab2@2842>       CMPA.l A6,A1
0001FA5A <AmiBlitz3.ab2@2843>        BCC.w mbovererr
0001FA5E <AmiBlitz3.ab2@2844>       CMP.w #"@@",(a0)
0001FA62 <AmiBlitz3.ab2@2845>        BNE 'l10
0001FA68 <AmiBlitz3.ab2@2846>       TST.w ininclude
0001FA6C <AmiBlitz3.ab2@2847>        BNE errorjoin
0001FA72 <AmiBlitz3.ab2@2850>       MOVE.l sourceline,a0
0001FA74 <AmiBlitz3.ab2@2851>       MOVE.l (a0),a0
0001FA7A <AmiBlitz3.ab2@2852>       CMP.l #0,a0
0001FA7E <AmiBlitz3.ab2@2853>       BNE 'l11
0001FA80 <AmiBlitz3.ab2@2854>       MOVEQ #0,d0
0001FA86 <AmiBlitz3.ab2@2855>       JSR error
0001FA8C <AmiBlitz3.ab2@2858>       MOVE.l a0,sourceline
0001FA92 <AmiBlitz3.ab2@2859>       ADDQ.l #1,linenumat
0001FA96 <AmiBlitz3.ab2@2860>       LEA 9(a0),a0
0001FA98 <AmiBlitz3.ab2@2861>       MOVE.l a0,-(a7)
0001FA9C <AmiBlitz3.ab2@2864>       CMP.b #" ",(a0)+
0001FAA0 <AmiBlitz3.ab2@2865>        BEQ 'l110
0001FAA6 <AmiBlitz3.ab2@2866>       CMP.b #";",-1(a0)
0001FAA8 <AmiBlitz3.ab2@2867>       MOVE.l (a7)+,a0
0001FAAC <AmiBlitz3.ab2@2868>        BEQ 'l111
0001FAAE <AmiBlitz3.ab2@2869>       SUBQ.l #1,d4
0001FAB0 <AmiBlitz3.ab2@2872>       MOVE.b (A0)+,(A1)+
0001FAB4 <AmiBlitz3.ab2@2873>     DBF D4,JL_0_3C46
0001FAB8 <AmiBlitz3.ab2@2875>   BRA.w JL_0_3C6C
0001FABA <AmiBlitz3.ab2@2878>     CMPA.l A6,A1
0001FABE <AmiBlitz3.ab2@2879>      BCC.w mbovererr
0001FAC0 <AmiBlitz3.ab2@2880>     MOVE.b D0,(A1)+
0001FAC4 <AmiBlitz3.ab2@2881>      BPL.w JL_0_3C6C
0001FAC6 <AmiBlitz3.ab2@2882>     CMPA.l A6,A1
0001FACA <AmiBlitz3.ab2@2883>      BCC.w mbovererr
0001FACC <AmiBlitz3.ab2@2884>     MOVE.b (A2)+,(A1)+
0001FACE <AmiBlitz3.ab2@2885>     SUBQ.w #1,D1
0001FAD2 <AmiBlitz3.ab2@2888>   DBF D1,JL_0_3B48
0001FAD4 <AmiBlitz3.ab2@2898>   CMPA.l A6,A1
0001FAD8 <AmiBlitz3.ab2@2899>    BCC.w mbovererr
0001FADA <AmiBlitz3.ab2@2900>   MOVE.b (A5)+,(A1)+
0001FADE <AmiBlitz3.ab2@2901>    BNE.w JL_0_3C70
0001FAE4 <AmiBlitz3.ab2@2902>   MOVEA.l myline,A5
0001FAEA <AmiBlitz3.ab2@2903>   MOVE.l myoline,D0
0001FAEE <AmiBlitz3.ab2@2904>    BEQ.w JL_0_3C9C
0001FAF0 <AmiBlitz3.ab2@2905>   SUBQ.l #1,d0
0001FAF2 <AmiBlitz3.ab2@2906>   MOVEA.l D0,A1
0001FAF8 <AmiBlitz3.ab2@2907>   MOVE.l macrobuffer_size,D0
0001FAFE <AmiBlitz3.ab2@2908>   MOVEA.l _execbase,A6
0001FB04 <AmiBlitz3.ab2@2909>   MOVE.l mempool,a0
0001FB08 <AmiBlitz3.ab2@2910>   JSR _FreePooled(A6)
0001FB0C <AmiBlitz3.ab2@2913> BRA.w JL_0_3A46
0001FB0E <AmiBlitz3.ab2@2916>   MOVEA.l (A7)+,A5
0001FB10 <AmiBlitz3.ab2@2917> RTS
0001FB16 <AmiBlitz3.ab2@2921>   MOVE.l myline,D0
0001FB1A <AmiBlitz3.ab2@2922>   BEQ.w JL_0_3CC4
0001FB1C <AmiBlitz3.ab2@2923>   SUBQ.l #1,d0
0001FB22 <AmiBlitz3.ab2@2924>   CLR.l myline
0001FB24 <AmiBlitz3.ab2@2925>   MOVEA.l D0,A1
0001FB2A <AmiBlitz3.ab2@2926>   MOVE.l macrobuffer_size,D0
0001FB30 <AmiBlitz3.ab2@2927>   MOVEA.l _execbase,A6
0001FB36 <AmiBlitz3.ab2@2928>   MOVE.l mempool,a0
0001FB3A <AmiBlitz3.ab2@2929> JMP _FreePooled(A6)
0001FB3C <AmiBlitz3.ab2@2932> RTS
0001FB3E <AmiBlitz3.ab2@2936>   MOVEQ.l #$00,D2
0001FB42 <AmiBlitz3.ab2@2939>   ADDQ.w #1,4(a0)
0001FB44 <AmiBlitz3.ab2@2940>    MOVE.b (A4)+,D0
0001FB48 <AmiBlitz3.ab2@2942>    BEQ exit1
0001FB4C <AmiBlitz3.ab2@2943>    BPL.w JL_0_3CD8
0001FB50 <AmiBlitz3.ab2@2944>   ADDQ.w #1,4(a0)
0001FB52 <AmiBlitz3.ab2@2945>   ADDQ.w #1,A4
0001FB56 <AmiBlitz3.ab2@2946> BRA.w JL_0_3CC8
0001FB5C <AmiBlitz3.ab2@2949>    TST.w instringon
0001FB60 <AmiBlitz3.ab2@2950>    BNE 'lnom
0001FB64 <AmiBlitz3.ab2@2951>    CMP.b #";",d0
0001FB68 <AmiBlitz3.ab2@2952>    BEQ exit2
0001FB6C <AmiBlitz3.ab2@2953>    CMP.b #":",d0
0001FB70 <AmiBlitz3.ab2@2954>    BEQ exit2
0001FB74 <AmiBlitz3.ab2@2957>   CMP.b #$22,D0
0001FB78 <AmiBlitz3.ab2@2958>    BNE.w JL_0_3CEA
0001FB7E <AmiBlitz3.ab2@2959>   NOT.w instringon
0001FB82 <AmiBlitz3.ab2@2960> BRA.w JL_0_3CC8
0001FB88 <AmiBlitz3.ab2@2964>   TST.w instringon
0001FB8C <AmiBlitz3.ab2@2965>    BNE.w JL_0_3CC8
0001FB90 <AmiBlitz3.ab2@2966>    CMP.b #"@",d0
0001FB94 <AmiBlitz3.ab2@2967>    BNE 'l10
0001FB98 <AmiBlitz3.ab2@2968>    CMP.b #"@",(a4)
0001FB9C <AmiBlitz3.ab2@2969>    BNE 'l10
0001FBA2 <AmiBlitz3.ab2@2970>    TST.w ininclude
0001FBA6 <AmiBlitz3.ab2@2971>    BNE errorjoin
0001FBAC <AmiBlitz3.ab2@2972>    MOVE.l sourceline3,a4
0001FBB2 <AmiBlitz3.ab2@2973>    CMP.l #0,a4
0001FBB6 <AmiBlitz3.ab2@2974>    BNE 'l11
0001FBBC <AmiBlitz3.ab2@2975>    MOVE.l sourceline,a4
0001FBBE <AmiBlitz3.ab2@2978>   MOVE.l (a4),a4
0001FBC4 <AmiBlitz3.ab2@2979>       CMP.l #0,a4
0001FBC8 <AmiBlitz3.ab2@2980>       BNE 'l12
0001FBCA <AmiBlitz3.ab2@2981>       MOVEQ #0,d0
0001FBD0 <AmiBlitz3.ab2@2982>       JSR error
0001FBD6 <AmiBlitz3.ab2@2985>    MOVE.l a4,sourceline3
0001FBDA <AmiBlitz3.ab2@2986>    LEA 9(a4),a4
0001FBDC <AmiBlitz3.ab2@2987>    MOVEQ #",",d0
0001FBE0 <AmiBlitz3.ab2@2990>   CMP.b #$2C,D0
0001FBE4 <AmiBlitz3.ab2@2991>    BNE.w JL_0_3D06
0001FBE6 <AmiBlitz3.ab2@2992>   TST.w D2
0001FBEA <AmiBlitz3.ab2@2993>    BEQ.w JL_0_3D30
0001FBEE <AmiBlitz3.ab2@2994> BRA.w JL_0_3CC8
0001FBF2 <AmiBlitz3.ab2@2998>    CMP.b #$7B,D0                                           ;"{"
0001FBF6 <AmiBlitz3.ab2@2999>    BEQ.w 'l10
0001FBFA <AmiBlitz3.ab2@3000>   CMP.b #$28,D0                                            ;"("
0001FBFE <AmiBlitz3.ab2@3003>    BNE.w JL_0_3D14
0001FC00 <AmiBlitz3.ab2@3004>   ADDQ.w #1,D2
0001FC04 <AmiBlitz3.ab2@3005> BRA.w JL_0_3CC8
0001FC08 <AmiBlitz3.ab2@3008>   CMP.b #$7D,D0                                           ;"}"
0001FC0C <AmiBlitz3.ab2@3009>    BNE.w JL_0_3D22
0001FC0E <AmiBlitz3.ab2@3010>  TST.w D2
0001FC12 <AmiBlitz3.ab2@3011>    BEQ.w JL_0_3D30
0001FC16 <AmiBlitz3.ab2@3015>    CMP.b #$7D,D0                                           ;"}"
0001FC1A <AmiBlitz3.ab2@3016>    BEQ.w 'l10
0001FC1E <AmiBlitz3.ab2@3017>   CMP.b #$29,D0                                            ;")"
0001FC22 <AmiBlitz3.ab2@3020>    BNE.w JL_0_3CC8
0001FC24 <AmiBlitz3.ab2@3021>   SUBQ.w #1,D2
0001FC28 <AmiBlitz3.ab2@3022> BRA.w JL_0_3CC8
0001FC2A <AmiBlitz3.ab2@3025> RTS
0001FC2C <AmiBlitz3.ab2@3029>       SUBQ.l #1,a4
0001FC32 <AmiBlitz3.ab2@3030>       CLR.l sourceline3
0001FC34 <AmiBlitz3.ab2@3031> RTS
0001FC36 <AmiBlitz3.ab2@3035>       MOVEQ #0,d0
0001FC38 <AmiBlitz3.ab2@3036>       SUBQ.l #1,a4
0001FC3E <AmiBlitz3.ab2@3037>       CLR.l sourceline3
0001FC40 <AmiBlitz3.ab2@3038> RTS
0001FC44 <AmiBlitz3.ab2@3042>   CMP.b #$7B,D0                                            ;"{"
0001FC48 <AmiBlitz3.ab2@3043>   BEQ.w JL_0_3D3E
0001FC4C <AmiBlitz3.ab2@3044>   CMP.b #$28,D0                                            ;"("
0001FC4E <AmiBlitz3.ab2@3047> RTS
0001FC52 <AmiBlitz3.ab2@3051>   CMP.b #$7D,D0                                            ;"}"
0001FC56 <AmiBlitz3.ab2@3052>   BEQ.w JL_0_3D4C
0001FC5A <AmiBlitz3.ab2@3053>   CMP.b #$29,D0                                            ;")"
0001FC5C <AmiBlitz3.ab2@3056> RTS
0001FC5E <AmiBlitz3.ab2@3060> stopit:     Ds.w 1
0001FC60 <AmiBlitz3.ab2@3061> clrreq:     Ds.w 1
0001FC64 <AmiBlitz3.ab2@3082>   MOVE.w clrreq(PC),D0
0001FC68 <AmiBlitz3.ab2@3083>    BEQ.w close_compilewin__skip
0001FC9A <AmiBlitz3.ab2@3085> 
0001FCA0 <AmiBlitz3.ab2@3087>   LEA clrreq,a0
0001FCA2 <AmiBlitz3.ab2@3088>   NOT.w (a0)                                               ;reass
0001FCA8 <AmiBlitz3.ab2@3089>   MOVEA.l ptr_ThisTask,A0
0001FCAC <AmiBlitz3.ab2@3090>   CLR.l $1E(A0)
0001FCB0 <AmiBlitz3.ab2@3091>   CLR.l $2A(A0)
0001FCB2 <AmiBlitz3.ab2@3094> RTS
0001FCB4 <AmiBlitz3.ab2@3097> intsused:  Ds.w 1
0001FCBC <AmiBlitz3.ab2@3101>   MOVE.w #-1,blitzoff
0001FCC2 <AmiBlitz3.ab2@3102>   CLR.w intsused
0001FCC8 <AmiBlitz3.ab2@3103>   CLR.w anyerrs
0001FCCE <AmiBlitz3.ab2@3104>   CLR.w blitzmode
0001FCD4 <AmiBlitz3.ab2@3105>   CLR.w dontwrite                                              ;nomemleft
0001FCDA <AmiBlitz3.ab2@3106>   CLR.w constmode
0001FCE0 <AmiBlitz3.ab2@3107>   CLR.w cmake
0001FCE6 <AmiBlitz3.ab2@3108>   CLR.w cfetchmode
0001FCEC <AmiBlitz3.ab2@3109>   CLR.l intdata1
0001FCF2 <AmiBlitz3.ab2@3110>   CLR.w fuckpos
0001FCF8 <AmiBlitz3.ab2@3111>   CLR.w procnum
0001FCFE <AmiBlitz3.ab2@3112>   CLR.w procnum2
0001FD04 <AmiBlitz3.ab2@3113>   CLR.w dfetch
0001FD0A <AmiBlitz3.ab2@3114>   CLR.l titleat
0001FD10 <AmiBlitz3.ab2@3115>   CLR.b usedpath
0001FD16 <AmiBlitz3.ab2@3116>   CLR.b path2
0001FD1C <AmiBlitz3.ab2@3117>   CLR.w inerr
0001FD22 <AmiBlitz3.ab2@3118>   CLR.w intlevel
0001FD28 <AmiBlitz3.ab2@3119>   CLR.l cont_pc
0001FD2E <AmiBlitz3.ab2@3120>   CLR.l cont_pc2
0001FD34 <AmiBlitz3.ab2@3121>   CLR.l lastcontlink
0001FD3E <AmiBlitz3.ab2@3122>   MOVE.l destbufferstart,destpointer
0001FD48 <AmiBlitz3.ab2@3123>   MOVE.l destbufferstart,bigpc
0001FD52 <AmiBlitz3.ab2@3124>   MOVE.l destbufferend,libend
0001FD5C <AmiBlitz3.ab2@3125>   MOVE.l data1start,data1
0001FD66 <AmiBlitz3.ab2@3126>   MOVE.l data2at,data2
0001FD6E <AmiBlitz3.ab2@3127>   MOVE.w #-1,skipcode                                      ;#-1,comflag org source
0001FD76 <AmiBlitz3.ab2@3128>   MOVE.w #-1,linemode                                      ;#-1,linemode org soruce
0001FD7C <AmiBlitz3.ab2@3129>   CLR.w oldvcodelen
0001FD82 <AmiBlitz3.ab2@3130>   CLR.b lastgloballabel                                    ;lastbiglab org source
0001FD84 <AmiBlitz3.ab2@3131> RTS
0001FD86 <AmiBlitz3.ab2@3134> debugmode:  Ds.w 1                                         ;debugga org source ;debugger enabled?
0001FD8C <AmiBlitz3.ab2@3138>   LEA  clrreq,a1
0001FD90 <AmiBlitz3.ab2@3139>   MOVE.w #2000,(a1)
0001FDBA <AmiBlitz3.ab2@3140>   !basic
0001FDD0 <AmiBlitz3.ab2@3141> 
0001FE20 <AmiBlitz3.ab2@3142>   comstatusstr   = !TRANS{"Initializing Compiler..."} ;default settings
0001FE28 <AmiBlitz3.ab2@3143>   calcpro.l      = 0
0001FE30 <AmiBlitz3.ab2@3144>   calcpro_old.l  = 0
0001FE3C <AmiBlitz3.ab2@3145>   typ_old.l      = -1
0001FE48 <AmiBlitz3.ab2@3146>   pass_old.l     = -1
0001FE4E <AmiBlitz3.ab2@3147>   update_comstatus_gui.b = True ; for the first
0001FE88 <AmiBlitz3.ab2@3149>   GetD0 &comstatusstr : !ComData_SetL{comPtr_CompileStatusString,d0}  ; set pointer of status string for gui tomsmart1 2012 05 12
0001FEC2 <AmiBlitz3.ab2@3150>   GetD0 &calcpro      : !ComData_SetL{comPtr_CompileCalcProLong ,d0}  ; set pointer of calcpro long for gui tomsmart1 2012 05 12
0001FEE0 <AmiBlitz3.ab2@3151>   !asm
0001FF12 <AmiBlitz3.ab2@3152> 
0001FF18 <AmiBlitz3.ab2@3154>   CLR.w stopit
0001FF1A <AmiBlitz3.ab2@3155> RTS
0001FF20 <AmiBlitz3.ab2@3159>   CLR.w storedebugmode
0001FF26 <AmiBlitz3.ab2@3160>   CLR.b iserror
0001FF2A <AmiBlitz3.ab2@3161>   BSR.w compilerequester
0001FF34 <AmiBlitz3.ab2@3163>   MOVE.l #0,globallinecount
0001FF3A <AmiBlitz3.ab2@3164>   JSR check_of_same_source
0001FF3E <AmiBlitz3.ab2@3165>   BSR.w call_setpointerbusy
0001FF42 <AmiBlitz3.ab2@3166>   BSR.w setcvars
0001FF4A <AmiBlitz3.ab2@3167>   MOVE.w #$8000,globalvarpointer
0001FF54 <AmiBlitz3.ab2@3168>   MOVE.l #newtype_quick,defaulttype
0001FF5A <AmiBlitz3.ab2@3169>   MOVE.l A7,passstack
0001FF64 <AmiBlitz3.ab2@3170>   MOVE.l #firstitem_,sourceline
0001FF6E <AmiBlitz3.ab2@3171>   MOVE.w numlines_org,linesleft
0001FF78 <AmiBlitz3.ab2@3172>   MOVE.l numlines,numlines2
0001FF7E <AmiBlitz3.ab2@3173>   ADDQ.w #1,linesleft
0001FF84 <AmiBlitz3.ab2@3174>   ADDQ.l #1,numlines2
0001FF8E <AmiBlitz3.ab2@3175>   MOVE.l #-1,linenumat
0001FF92 <AmiBlitz3.ab2@3176>   BSR.w resetlibs
0001FF96 <AmiBlitz3.ab2@3177>   BSR.w Aclearallvars
0001FF9C <AmiBlitz3.ab2@3178>   LEA progress_per_line+2,A0
0001FF9E <AmiBlitz3.ab2@3179>   MOVEQ.l #$03,D0
0001FFA0 <AmiBlitz3.ab2@3182>     CLR.w (A0)+
0001FFA4 <AmiBlitz3.ab2@3183>   DBF D0,JL_0_40EC
0001FFAA <AmiBlitz3.ab2@3186>   LEA _include,a0
0001FFAE <AmiBlitz3.ab2@3187>   MOVEM.l a0-a6/d0-d7,-(a7)
0001FFB4 <AmiBlitz3.ab2@3188>   LEA ptr_parameterstore,a1
0001FFB6 <AmiBlitz3.ab2@3191>     MOVE.b (a0)+,(a1)+
0001FFBA <AmiBlitz3.ab2@3192>   BNE 'l1b
0001FFBC <AmiBlitz3.ab2@3194>   MOVEQ #9,d2
0001FFC2 <AmiBlitz3.ab2@3195>   JSR findlabel2
0001FFC6 <AmiBlitz3.ab2@3196>   BNE 'd
0001FFCE <AmiBlitz3.ab2@3197>   MOVE.l #0,8(a2)
0001FFD2 <AmiBlitz3.ab2@3198>   MOVEM.l (a7)+,a0-a6/d0-d7
0001FFD6 <AmiBlitz3.ab2@3199> BRA 'd2
0001FFDC <AmiBlitz3.ab2@3202>   JSR addlabelhash
0001FFE4 <AmiBlitz3.ab2@3203>   MOVE.l #$1,$4(A2)
0001FFEC <AmiBlitz3.ab2@3204>   MOVE.l #0,8(a2)
0001FFF0 <AmiBlitz3.ab2@3205>   MOVEM.l (a7)+,a0-a6/d0-d7
0001FFF6 <AmiBlitz3.ab2@3208>   LEA _debug,a0
0001FFFA <AmiBlitz3.ab2@3209>   MOVEM.l a0-a6/d0-d7,-(a7)
00020000 <AmiBlitz3.ab2@3210>   LEA ptr_parameterstore,a1
00020002 <AmiBlitz3.ab2@3213>     MOVE.b (a0)+,(a1)+
00020006 <AmiBlitz3.ab2@3214>   BNE 'l9b
00020008 <AmiBlitz3.ab2@3216>   MOVEQ #7,d2
0002000E <AmiBlitz3.ab2@3217>   JSR findlabel2
00020012 <AmiBlitz3.ab2@3218>   BNE 'd9
00020016 <AmiBlitz3.ab2@3219>   MOVE.b debugmode(PC),D0
00020018 <AmiBlitz3.ab2@3220>   EXT.w d0
0002001A <AmiBlitz3.ab2@3221>   EXT.l d0
0002001E <AmiBlitz3.ab2@3222>   MOVE.l d0,8(a2)
00020022 <AmiBlitz3.ab2@3223>   MOVEM.l (a7)+,a0-a6/d0-d7
00020026 <AmiBlitz3.ab2@3224> BRA 'd9b
0002002C <AmiBlitz3.ab2@3227>   JSR addlabelhash
00020034 <AmiBlitz3.ab2@3228>   MOVE.l #$1,$4(A2)
00020038 <AmiBlitz3.ab2@3229>   MOVE.b debugmode(PC),D0
0002003A <AmiBlitz3.ab2@3230>   EXT.w d0
0002003C <AmiBlitz3.ab2@3231>   EXT.l d0
00020040 <AmiBlitz3.ab2@3232>   MOVE.l d0,8(a2)
00020044 <AmiBlitz3.ab2@3233>   MOVEM.l (a7)+,a0-a6/d0-d7
0002004A <AmiBlitz3.ab2@3236>   MOVE.l #firstitem_,a0
0002004C <AmiBlitz3.ab2@3237>   MOVE.l (a0),a0
00020050 <AmiBlitz3.ab2@3238>   LEA 9(a0),a0
00020058 <AmiBlitz3.ab2@3239>   MOVE.w #0,exdebug
0002005E <AmiBlitz3.ab2@3240>   TST.b debugmode
00020062 <AmiBlitz3.ab2@3241>    BEQ 'l10
00020064 <AmiBlitz3.ab2@3244>   MOVE.b (a0)+,d0
00020068 <AmiBlitz3.ab2@3245>    BEQ 'l10
0002006C <AmiBlitz3.ab2@3246>   CMP.b #$20,d0
00020070 <AmiBlitz3.ab2@3247>    BEQ 'l2
00020072 <AmiBlitz3.ab2@3248>   SUBQ.l #1,a0
00020078 <AmiBlitz3.ab2@3249>   CMP.l #"DEBU",(a0)
0002007C <AmiBlitz3.ab2@3250>    BNE 'l10
00020082 <AmiBlitz3.ab2@3251>   CMP.b #"G",4(a0)
00020086 <AmiBlitz3.ab2@3252>    BNE 'l10
0002008E <AmiBlitz3.ab2@3253>   MOVE.w #$0,debugversion
00020096 <AmiBlitz3.ab2@3254>   MOVE.b #1,exdebug
0002009C <AmiBlitz3.ab2@3257>   LEA nops4,A0
000200A2 <AmiBlitz3.ab2@3258>   LEA dataget,A1
000200A8 <AmiBlitz3.ab2@3259>   JSR pokecode2                                            ;write intro nops
000200AE <AmiBlitz3.ab2@3260>   MOVE.l #$01010101,d1
000200B4 <AmiBlitz3.ab2@3261>   JSR writedatalong                                        ;for the 4 tempregs
000200BA <AmiBlitz3.ab2@3262>   JSR writedatalong
000200C0 <AmiBlitz3.ab2@3263>   JSR writedatalong
000200C6 <AmiBlitz3.ab2@3264>   JSR writedatalong
000200CC <AmiBlitz3.ab2@3265>   TST.b saved0
000200D0 <AmiBlitz3.ab2@3266>    BEQ 'l1
000200D6 <AmiBlitz3.ab2@3267>   MOVE.l #$4e714e71,d1
000200DC <AmiBlitz3.ab2@3268>   JSR writelong                                            ;add 2 nops
000200E2 <AmiBlitz3.ab2@3269>   MOVE.l #$4e714e71,d1
000200E8 <AmiBlitz3.ab2@3270>   JSR writelong                                            ;add 2 nops
000200EE <AmiBlitz3.ab2@3271>   MOVE.l #$4e714e71,d1
000200F4 <AmiBlitz3.ab2@3272>   JSR writelong                                            ;add 2 nops
000200FA <AmiBlitz3.ab2@3273>    MOVE.l #$4e714e71,d1
00020100 <AmiBlitz3.ab2@3274>   JSR writelong                                            ;add 2 nops
00020104 <AmiBlitz3.ab2@3277>   MOVE.b debugmode(PC),D1
00020108 <AmiBlitz3.ab2@3278>    BEQ.b JL_0_4132
00020112 <AmiBlitz3.ab2@3279>   MOVE.b debugmode,storedebugmode
00020116 <AmiBlitz3.ab2@3280>   MOVE.w #$FFDC,D1
0002011A <AmiBlitz3.ab2@3281>    BSR.w uselib
00020120 <AmiBlitz3.ab2@3282>   TST.w debugversion                                       ;make a version for debugger
00020124 <AmiBlitz3.ab2@3283>    BNE.b JL_0_412A
00020128 <AmiBlitz3.ab2@3287>   MOVE.w #$FA3C,D1
0002012C <AmiBlitz3.ab2@3288>    BSR.w uselib
00020130 <AmiBlitz3.ab2@3289>   MOVE.w #$0001,D1
00020134 <AmiBlitz3.ab2@3290>    BSR.w uselib
00020138 <AmiBlitz3.ab2@3291> BRA.b JL_0_4132
0002013C <AmiBlitz3.ab2@3294>   MOVE.w #$FA32,D1
00020140 <AmiBlitz3.ab2@3295>   BSR.w uselib
00020144 <AmiBlitz3.ab2@3298>   BSR.w nextline
0002014A <AmiBlitz3.ab2@3299>   CLR.l linenum
00020150 <AmiBlitz3.ab2@3300>   CLR.l stacktrack
00020156 <AmiBlitz3.ab2@3303>   ADDQ.l #1,linenum
00020160 <AmiBlitz3.ab2@3304>   MOVE.l destpointer,destpointer2
00020166 <AmiBlitz3.ab2@3305>   MOVE.l a5,sourceline2
0002016A <AmiBlitz3.ab2@3306>   BSR.w compile_line                                        ;compile pass
0002016E <AmiBlitz3.ab2@3309>   BSR.w nextline
00020172 <AmiBlitz3.ab2@3310>    BNE.w JL_0_4136
00020176 <AmiBlitz3.ab2@3311>   BSR.w JUMP_do_runerrson
0002017A <AmiBlitz3.ab2@3312>   BSR.w pointchk
00020180 <AmiBlitz3.ab2@3313>   TST.b objectcount
00020184 <AmiBlitz3.ab2@3314>    BNE macenderr
0002018A <AmiBlitz3.ab2@3315>   CLR.l linenumat
0002018E <AmiBlitz3.ab2@3316>   BSR.w errchx2
00020198 <AmiBlitz3.ab2@3317>   CMP.l #-1,bssend
0002019C <AmiBlitz3.ab2@3318>    BNE 'l30
000201A6 <AmiBlitz3.ab2@3319>   MOVE.l destpointer,bssend                                ;compile end
000201AC <AmiBlitz3.ab2@3322>   MOVE.l destpointer,d0
000201B6 <AmiBlitz3.ab2@3323>   CMP.l #-1,bssstart
000201BA <AmiBlitz3.ab2@3324>   BNE 'lnf6
000201C4 <AmiBlitz3.ab2@3325>   CMP.l #-1,chipstart
000201C8 <AmiBlitz3.ab2@3326>   BNE 'lnf6
000201CC <AmiBlitz3.ab2@3327> BRA 'leven4
000201D2 <AmiBlitz3.ab2@3330>   MOVE.l destpointer,d1
000201D4 <AmiBlitz3.ab2@3331>   ADDQ.l #3,d1
000201DA <AmiBlitz3.ab2@3332>   AND.l #$fffffffc,d1                                      ;bug ?
000201E0 <AmiBlitz3.ab2@3333>   MOVE.l d1,destpointer
000201EA <AmiBlitz3.ab2@3336>   MOVE.l destpointer,codeend
000201F4 <AmiBlitz3.ab2@3337>   CMP.l #-1,chipend
000201F8 <AmiBlitz3.ab2@3338>   BNE 'l31
00020202 <AmiBlitz3.ab2@3339>   MOVE.l destpointer,chipend
00020208 <AmiBlitz3.ab2@3342>   MOVE.l destpointer,d1
0002020A <AmiBlitz3.ab2@3343>   ADDQ.l #1,d1
00020210 <AmiBlitz3.ab2@3344>   AND.l #$fffffffe,d1                                     ;new evenexit
00020216 <AmiBlitz3.ab2@3345>   MOVE.l d1,destpointer
0002021A <AmiBlitz3.ab2@3346>   MOVE.b debugmode(PC),D1
0002021E <AmiBlitz3.ab2@3347>    BEQ.b JL_0_4180
00020222 <AmiBlitz3.ab2@3348>    BSR.w debugstuff
00020226 <AmiBlitz3.ab2@3349>   MOVE.w #$C300,D1
0002022C <AmiBlitz3.ab2@3350>    JSR Atokejsr
00020230 <AmiBlitz3.ab2@3351>    BSR.w debugstuff
00020234 <AmiBlitz3.ab2@3352>   MOVE.l eopcode(PC),D1
0002023A <AmiBlitz3.ab2@3353>    JSR writelong
0002023E <AmiBlitz3.ab2@3354>   MOVE.l lastcontlink(PC),D1
00020242 <AmiBlitz3.ab2@3355>    BEQ.b JL_0_4180
00020244 <AmiBlitz3.ab2@3356>   MOVEA.l D1,A0
00020248 <AmiBlitz3.ab2@3357>   CLR.w $6(A0)
00020252 <AmiBlitz3.ab2@3363>   MOVE.l destpointer,endop                                ;where end goes...
00020258 <AmiBlitz3.ab2@3365>   TST.w blitzmode
0002025C <AmiBlitz3.ab2@3366>   BEQ.w JL_0_4198
00020260 <AmiBlitz3.ab2@3367>   BSR.w do_AMIGA                                          ;back to amiga if in blitz!
00020266 <AmiBlitz3.ab2@3370>   TST.w intsused
0002026A <AmiBlitz3.ab2@3371>   BEQ.b JL_0_41AA
0002026E <AmiBlitz3.ab2@3372>   MOVE.w #$C105,D1                                        ;interupts off!
00020274 <AmiBlitz3.ab2@3373>   JSR tokejsr2
00020278 <AmiBlitz3.ab2@3376>   BSR.w calcstatic
0002027E <AmiBlitz3.ab2@3377>   MOVE.w D4,numstatic
00020284 <AmiBlitz3.ab2@3378>   MOVE.l D3,staticdata
00020288 <AmiBlitz3.ab2@3379>    BSR.w calcmaxs
0002028E <AmiBlitz3.ab2@3381>   TST.l tokeslist
00020292 <AmiBlitz3.ab2@3382>    BEQ.b JL_0_41F8
00020298 <AmiBlitz3.ab2@3383>   MOVE.w gotocode,D1                                       ;jmp!
0002029E <AmiBlitz3.ab2@3384>    JSR writeword
000202A8 <AmiBlitz3.ab2@3385>   MOVE.l destpointer,endjmpat
000202AC <AmiBlitz3.ab2@3386>    BSR.w addoff
000202B2 <AmiBlitz3.ab2@3387>    JSR writelong                                           
000202B6 <AmiBlitz3.ab2@3389>    BSR.w JL_0_6C76                                         ;has to be done before finits!
000202BC <AmiBlitz3.ab2@3393>   TST.w dontwrite
000202C0 <AmiBlitz3.ab2@3394>    BNE.b JL_0_41F8
000202C4 <AmiBlitz3.ab2@3395>   MOVEA.l endjmpat(PC),A4
000202CA <AmiBlitz3.ab2@3396>   MOVE.l destpointer,(A4)
000202D0 <AmiBlitz3.ab2@3399>   TST.b returncode
000202D4 <AmiBlitz3.ab2@3400>   BEQ 'l2
000202D8 <AmiBlitz3.ab2@3401>   MOVE.w #$2e80,d1
000202DE <AmiBlitz3.ab2@3402>   JSR writeword
000202E4 <AmiBlitz3.ab2@3405>   JSR JL_0_B98A
000202EA <AmiBlitz3.ab2@3406>   TST.b returncode
000202EE <AmiBlitz3.ab2@3407>   BEQ 'l3
000202F2 <AmiBlitz3.ab2@3408>   MOVE.w #$4e75,d1
000202F8 <AmiBlitz3.ab2@3409>   JSR writeword
000202FC <AmiBlitz3.ab2@3410> BRA 'l1
00020302 <AmiBlitz3.ab2@3413>   MOVE.l #$70004E75,D1
00020308 <AmiBlitz3.ab2@3414>   JSR writelong                                            ;write moveq #0,d0:rts
0002030E <AmiBlitz3.ab2@3417>   JSR JL_0_B73E
00020312 <AmiBlitz3.ab2@3418>   BSR.w asmfixer
00020316 <AmiBlitz3.ab2@3419>   BSR.w close_compilewin
0002031A <AmiBlitz3.ab2@3420> BRA.w call_setpointernormal
00020320 <AmiBlitz3.ab2@3424> JMP do_runerrson
00020322 <AmiBlitz3.ab2@3428> eopcode:    Dc.b $70,$03                                   ;MOVEQ #$03,D0
00020324 <AmiBlitz3.ab2@3429>             Dc.b $4E,$40                                   ;TRAP  #00
00020328 <AmiBlitz3.ab2@3431> endjmpat:   Ds.l 1
0002032E <AmiBlitz3.ab2@3435>   MOVEA.l newtype_string,A2
00020334 <AmiBlitz3.ab2@3436>   MOVE.l #MaxByte,D0                                       ;move.l #$ff,d0 org source
00020338 <AmiBlitz3.ab2@3439>     CMPA.w #$0,A2
0002033C <AmiBlitz3.ab2@3440>      BEQ.w pointchk_done
00020340 <AmiBlitz3.ab2@3441>     CMP.l $4(A2),D0
00020344 <AmiBlitz3.ab2@3442>      BNE.w pointchk_next
0002034C <AmiBlitz3.ab2@3443>     MOVE.w $8(A2),linenumat+2                              ;type not found  ;move 8(a2),linenumat org source
00020350 <AmiBlitz3.ab2@3444> BRA.w notypeerr
00020352 <AmiBlitz3.ab2@3447>     MOVEA.l (A2),A2
00020356 <AmiBlitz3.ab2@3448> BRA.w pointchk_loop
00020358 <AmiBlitz3.ab2@3451> RTS
0002035E <AmiBlitz3.ab2@3455>   LEA labelbase,A2
00020360 <AmiBlitz3.ab2@3459>   MOVE.l (A2),D0                                           ;testlabels
00020364 <AmiBlitz3.ab2@3460>    BEQ.w errchx2_done
00020366 <AmiBlitz3.ab2@3461>   MOVEA.l D0,A2
0002036A <AmiBlitz3.ab2@3462>   MOVE.l $4(A2),D0
0002036E <AmiBlitz3.ab2@3463>   BTST #$0,D0
00020372 <AmiBlitz3.ab2@3464>    BNE.w errchx2_loop
00020376 <AmiBlitz3.ab2@3465>   MOVE.l $8(A2),D0
0002037A <AmiBlitz3.ab2@3466>    BNE.w errchx2_loop
00020382 <AmiBlitz3.ab2@3467>   MOVE.w $10(A2),linenumat+2
00020384 <AmiBlitz3.ab2@3468>   MOVEQ #0,d0
00020388 <AmiBlitz3.ab2@3469>   MOVE.b $12(a2),d0
00020390 <AmiBlitz3.ab2@3470>   MOVE.w 0(a2,d0),linenumat
00020396 <AmiBlitz3.ab2@3471> JMP nolaberr                                               ;label not found
0002039C <AmiBlitz3.ab2@3474>   MOVE.l concomsp,D0
000203A2 <AmiBlitz3.ab2@3475>   CMP.l #concomstack,D0
000203A6 <AmiBlitz3.ab2@3476>    BNE.w chxerr4
000203AC <AmiBlitz3.ab2@3477>   MOVE.w connest,D1
000203B0 <AmiBlitz3.ab2@3478>    BNE.w chxerr4
000203B2 <AmiBlitz3.ab2@3481>   MOVE.l D1,-(A7)
000203B8 <AmiBlitz3.ab2@3482>   MOVE.l firstsel,D1
000203BC <AmiBlitz3.ab2@3483>    BNE.w errchx_err1
000203C2 <AmiBlitz3.ab2@3484>   MOVE.l firstrep,D1
000203C6 <AmiBlitz3.ab2@3485>    BNE.w errchx_err2
000203CC <AmiBlitz3.ab2@3486>   MOVE.w intstring,D1
000203D0 <AmiBlitz3.ab2@3487>    BNE.w errchx_err3
000203D4 <AmiBlitz3.ab2@3488>   MOVE.l 4(a7),d1
000203DA <AmiBlitz3.ab2@3489>   MOVE.w proceduremode,D1
000203DE <AmiBlitz3.ab2@3490>    BNE.w errchx_err6
000203E4 <AmiBlitz3.ab2@3491>   MOVE.l firstiff,d1
000203E8 <AmiBlitz3.ab2@3492>    BNE errchx_err5
000203EE <AmiBlitz3.ab2@3493>   MOVE.l firstfor,D1
000203F2 <AmiBlitz3.ab2@3494>    BNE.w errchx_err7
000203F4 <AmiBlitz3.ab2@3495>   MOVE.l (A7)+,D1
000203F6 <AmiBlitz3.ab2@3496> RTS
00020400 <AmiBlitz3.ab2@3500>   MOVE.l sellineat,linenumat
00020406 <AmiBlitz3.ab2@3501> JMP selerrz
00020410 <AmiBlitz3.ab2@3504>   MOVE.l replineat,linenumat
00020416 <AmiBlitz3.ab2@3505> JMP unterr3
00020420 <AmiBlitz3.ab2@3508>   MOVE.l intlineat,linenumat
00020426 <AmiBlitz3.ab2@3509> JMP interr2
00020430 <AmiBlitz3.ab2@3512>   MOVE.l iflineat,linenumat
00020436 <AmiBlitz3.ab2@3513> JMP noenderr
00020440 <AmiBlitz3.ab2@3516>   MOVE.l prolineat,linenumat
00020446 <AmiBlitz3.ab2@3517> JMP nopenderr
00020450 <AmiBlitz3.ab2@3520>   MOVE.l forlineat,linenumat
00020456 <AmiBlitz3.ab2@3521> JMP nonexterr
00020460 <AmiBlitz3.ab2@3524>   MOVE.l ciflineat,linenumat
00020466 <AmiBlitz3.ab2@3525> JMP nocenderr
00020470 <AmiBlitz3.ab2@3529>   MOVE.l data1,maxsat
00020472 <AmiBlitz3.ab2@3530>   MOVEQ.l #$00,D4
00020478 <AmiBlitz3.ab2@3531>   MOVEA.l libpointer,A2
0002047C <AmiBlitz3.ab2@3534>     CMPA.w #$0,A2
00020480 <AmiBlitz3.ab2@3535>      BEQ.w calcmaxs_done
00020484 <AmiBlitz3.ab2@3536>     TST.w $C(A2)
00020488 <AmiBlitz3.ab2@3537>      BPL.w calcmaxs_next
0002048C <AmiBlitz3.ab2@3538>     MOVE.l $12(A2),D0
00020490 <AmiBlitz3.ab2@3539>     TST.w -$2(A2,D0.L)
00020494 <AmiBlitz3.ab2@3540>      BEQ.w calcmaxs_next
00020496 <AmiBlitz3.ab2@3541>     ADDQ.w #1,D4
0002049A <AmiBlitz3.ab2@3542>     MOVE.w -$6(A2,D0.L),D1
0002049E <AmiBlitz3.ab2@3543>     BSR.w pokedata1
000204A0 <AmiBlitz3.ab2@3544>     MOVEQ.l #$01,D1
000204A4 <AmiBlitz3.ab2@3545>     MOVE.w -$2(A2,D0.L),D2
000204A6 <AmiBlitz3.ab2@3546>     LSL.w D2,D1
000204AA <AmiBlitz3.ab2@3547>     MULU -$4(A2,D0.L),D1                                   ;write objectspacesize
000204AE <AmiBlitz3.ab2@3548>     BSR.w writedatalong
000204B0 <AmiBlitz3.ab2@3551>     MOVEA.l (A2),A2
000204B4 <AmiBlitz3.ab2@3552> BRA.w calcmaxs_loop
000204BA <AmiBlitz3.ab2@3555>   MOVE.w D4,maxsused
000204BE <AmiBlitz3.ab2@3556>    BEQ.w calcmaxs_done2
000204C2 <AmiBlitz3.ab2@3557>   MOVE.w #$FFFA,D1                                         ;;use memlib
000204C6 <AmiBlitz3.ab2@3558> BRA.w uselib
000204C8 <AmiBlitz3.ab2@3561> RTS
000204CE <AmiBlitz3.ab2@3565>    MOVE.l a7,stackaddr
000204D2 <AmiBlitz3.ab2@3566>    BSR.w compile_term
000204D6 <AmiBlitz3.ab2@3567>    BSR.w reget
000204DA <AmiBlitz3.ab2@3568>    BNE.w illeolerr
000204E0 <AmiBlitz3.ab2@3569>    TST.w dontwrite
000204E4 <AmiBlitz3.ab2@3570>    BNE 'l1
000204EA <AmiBlitz3.ab2@3571>    TST.l stacktrack
000204EE <AmiBlitz3.ab2@3572>    BNE errormsg_stack
000204F2 <AmiBlitz3.ab2@3575>    CMP.w #-$7FDE,D0
000204F6 <AmiBlitz3.ab2@3576>    BNE.w compile_line_notelse
000204FC <AmiBlitz3.ab2@3577>    JSR do_else2
00020500 <AmiBlitz3.ab2@3578> BRA.w compile_line
00020502 <AmiBlitz3.ab2@3581>   TST.w D0
00020506 <AmiBlitz3.ab2@3582>   BNE.w compile_line
0002050C <AmiBlitz3.ab2@3587>   MOVE.l firstiff,D0
00020510 <AmiBlitz3.ab2@3588>    BEQ.w compile_line_done
00020512 <AmiBlitz3.ab2@3589>   MOVEA.l D0,A0
00020516 <AmiBlitz3.ab2@3590>   MOVE.w $C(A0),D1
0002051A <AmiBlitz3.ab2@3591>    BPL.w compile_line_done
0002051E <AmiBlitz3.ab2@3595>   BCLR #$F,D1
00020524 <AmiBlitz3.ab2@3596>    JSR AJL_0_D7B8
0002052A <AmiBlitz3.ab2@3597>    JSR AJL_0_D81C
0002052E <AmiBlitz3.ab2@3598> BRA.w compile_line_unthen
00020530 <AmiBlitz3.ab2@3601> RTS
00020536 <AmiBlitz3.ab2@3605>   LEA lastgloballabel,A0
00020538 <AmiBlitz3.ab2@3606>   TST.b (A0)
0002053C <AmiBlitz3.ab2@3607>    BEQ.w nolocerr
00020542 <AmiBlitz3.ab2@3608>   LEA ptr_parameterstore,A1
00020544 <AmiBlitz3.ab2@3609>   MOVEQ.l #$00,D2
00020546 <AmiBlitz3.ab2@3612>   ADDQ.w #1,D2
00020548 <AmiBlitz3.ab2@3613>   MOVE.b (A0)+,(A1)+
0002054C <AmiBlitz3.ab2@3614>    BNE.w createlab_loop
00020552 <AmiBlitz3.ab2@3615>   MOVE.b #$27,-$1(A1)
00020554 <AmiBlitz3.ab2@3616>   MOVE.w D2,-(A7)
0002055A <AmiBlitz3.ab2@3617>    JSR makename4
0002055C <AmiBlitz3.ab2@3618>   CMP.w (A7)+,D2
00020560 <AmiBlitz3.ab2@3619>    BEQ.w syntaxerr
00020562 <AmiBlitz3.ab2@3620>    TST.w d0
00020566 <AmiBlitz3.ab2@3621>    BPL createlab_done
0002056E <AmiBlitz3.ab2@3622>    MOVE.w #$3a,lastchar
00020570 <AmiBlitz3.ab2@3623>    SUBQ.l #2,a5
00020572 <AmiBlitz3.ab2@3626> RTS
0002057C <AmiBlitz3.ab2@3630>   MOVE.l #forthstack,forthsp
00020586 <AmiBlitz3.ab2@3631>   MOVE.l #precstack,precsp
00020588 <AmiBlitz3.ab2@3632> RTS
0002058A <AmiBlitz3.ab2@3639>   MOVEQ.l #$00,D4
000205B4 <AmiBlitz3.ab2@3642>   !basic
000205F6 <AmiBlitz3.ab2@3643> 
00020606 <AmiBlitz3.ab2@3645>   If (c_abort = 1)           ; check if set
00020608 <AmiBlitz3.ab2@3646>     MOVEQ.l #-$01,d4
0002060E <AmiBlitz3.ab2@3647>     MOVE.w D4,stopit
0002062C <AmiBlitz3.ab2@3648>     !asm
00020630 <AmiBlitz3.ab2@3649>     BRA chkrealstop__skip
0002064E <AmiBlitz3.ab2@3651>   !asm
00020650 <AmiBlitz3.ab2@3652>   MOVEQ.l #$00,D6
00020652 <AmiBlitz3.ab2@3653>   MOVEQ.l #$00,D7                                          ; clr Z-Flag for beq.b in chkstop_chk
00020654 <AmiBlitz3.ab2@3657> RTS
00020658 <AmiBlitz3.ab2@3661>   MOVE.w stopit(PC),D0
0002065C <AmiBlitz3.ab2@3662>   BEQ chkstop__chk
00020662 <AmiBlitz3.ab2@3663>   SUBQ.w #1,stopit
00020664 <AmiBlitz3.ab2@3667> RTS
0002066C <AmiBlitz3.ab2@3670>   MOVE.w #2000,stopit
00020670 <AmiBlitz3.ab2@3671>   BSR.w chkrealstop
00020674 <AmiBlitz3.ab2@3672>   BEQ.b chkstop__rts
00020678 <AmiBlitz3.ab2@3674>   BSR.w close_compilewin
0002067C <AmiBlitz3.ab2@3675>   BSR.w call_setpointernormal
00020682 <AmiBlitz3.ab2@3677>   MOVEA.l errstack,A7
00020688 <AmiBlitz3.ab2@3678>   MOVEA.l errcont,A0
00020690 <AmiBlitz3.ab2@3679>   MOVE.w #-1,anyerrs
00020692 <AmiBlitz3.ab2@3680> JMP (A0)
00020696 <AmiBlitz3.ab2@3683> d_pc:           Ds.l 1
0002069A <AmiBlitz3.ab2@3684> d_bigpc:        Ds.l 1
0002069C <AmiBlitz3.ab2@3685> d_nomemleft:    Ds.w 1
000206A0 <AmiBlitz3.ab2@3686> cont_pc:        Ds.l 1
000206A4 <AmiBlitz3.ab2@3687> cont_pc2:       Ds.l 1
000206A8 <AmiBlitz3.ab2@3688> lastcontlink:   Ds.l 1
000206AC <AmiBlitz3.ab2@3692>   ORI.w #$4E40,D1
000206B0 <AmiBlitz3.ab2@3693> BRA.w JUMP_writeword
000206B6 <AmiBlitz3.ab2@3697>   TST.b debugmode
000206BA <AmiBlitz3.ab2@3698>   BEQ.w debugstuff__rts
000206C0 <AmiBlitz3.ab2@3705>   TST.w dirmode                                            ;or while in direct mode...
000206C4 <AmiBlitz3.ab2@3706>    BNE debugstuff__rts
000206CE <AmiBlitz3.ab2@3707>   MOVE.l destpointer,d_pc
000206D8 <AmiBlitz3.ab2@3708>   MOVE.l bigpc,d_bigpc
000206E2 <AmiBlitz3.ab2@3709>   MOVE.w dontwrite,d_nomemleft
000206E6 <AmiBlitz3.ab2@3710>   MOVEM.l D0-D1,-(A7)
000206E8 <AmiBlitz3.ab2@3711>   MOVEQ.l #$01,D1
000206EC <AmiBlitz3.ab2@3712>    BSR.w writetrap                                         ;write the adress to sourceline
000206F2 <AmiBlitz3.ab2@3716>    MOVE.l destpointer,D0
000206F8 <AmiBlitz3.ab2@3717>   MOVE.l cont_pc,D1
000206FE <AmiBlitz3.ab2@3718>   MOVE.l D0,cont_pc
00020704 <AmiBlitz3.ab2@3719>   MOVE.l D1,cont_pc2
00020708 <AmiBlitz3.ab2@3720>    BEQ.b debugstuff__skip
0002070E <AmiBlitz3.ab2@3721>   TST.w dontwrite
00020712 <AmiBlitz3.ab2@3722>    BNE.b debugstuff__skip
00020714 <AmiBlitz3.ab2@3723>   MOVEA.l D1,A4
00020716 <AmiBlitz3.ab2@3724>   SUB.l A4,D0
0002071A <AmiBlitz3.ab2@3725>   MOVE.w D0,$6(A4)
00020720 <AmiBlitz3.ab2@3726>   MOVE.l A4,lastcontlink
00020726 <AmiBlitz3.ab2@3729>   TST.w ininclude
0002072C <AmiBlitz3.ab2@3731>   TST.w makeexec
00020730 <AmiBlitz3.ab2@3732>   BEQ 'l1
00020736 <AmiBlitz3.ab2@3733>   TST.w exdebug
0002073A <AmiBlitz3.ab2@3734>   BEQ 'noinc
0002073E <AmiBlitz3.ab2@3737>   MOVEM.l a0-a1/d2/d3,-(a7)                                ;write source for includes
00020744 <AmiBlitz3.ab2@3738>   MOVE.l data1,d1
0002074A <AmiBlitz3.ab2@3739>   TST.b firsttime
0002074E <AmiBlitz3.ab2@3740>   BNE 'nofirst
00020756 <AmiBlitz3.ab2@3741>   MOVE.b #1,firsttime
0002075C <AmiBlitz3.ab2@3742>   MOVE.l #"DuCk",d1                                        ; to found from debugger the code start
00020762 <AmiBlitz3.ab2@3743>   JSR writedatalong
00020768 <AmiBlitz3.ab2@3744>   MOVE.l #"AmiB",d1
0002076E <AmiBlitz3.ab2@3745>   JSR writedatalong
00020774 <AmiBlitz3.ab2@3746>   MOVE.l destbufferstart,d1
0002077A <AmiBlitz3.ab2@3747>   JSR writedatalong
00020780 <AmiBlitz3.ab2@3748>   TST.w dontwrite
00020784 <AmiBlitz3.ab2@3749>   BNE 'nohunk
0002078A <AmiBlitz3.ab2@3750>   MOVE.l data1,d1
0002078C <AmiBlitz3.ab2@3751>   SUBQ.l #4,d1
00020792 <AmiBlitz3.ab2@3752>   SUB.l destbufferstart,d1
00020794 <AmiBlitz3.ab2@3753>   MOVE.l d1,d2
0002079A <AmiBlitz3.ab2@3754>   JSR addhunkoffset
000207A0 <AmiBlitz3.ab2@3757>   MOVE.l destpointer,d2
000207A6 <AmiBlitz3.ab2@3758>   MOVE.l data1,d1
000207AC <AmiBlitz3.ab2@3761>   MOVE.l destpointer,d2
000207AE <AmiBlitz3.ab2@3762>   MOVE.l d1,d3
000207B4 <AmiBlitz3.ab2@3763>   SUB.l destbufferstart,d1
000207BA <AmiBlitz3.ab2@3764>   OR.l #$80000000,d1
000207C0 <AmiBlitz3.ab2@3765>   JSR writelong
000207C6 <AmiBlitz3.ab2@3766>   TST.w inmacro
000207CA <AmiBlitz3.ab2@3767>   BEQ 'sc1
000207D0 <AmiBlitz3.ab2@3768>   MOVE.l myline,a0
000207D4 <AmiBlitz3.ab2@3770> BRA 'inc2
000207DA <AmiBlitz3.ab2@3772>  'sc1  TST.w ininclude
000207DE <AmiBlitz3.ab2@3773>   BEQ 'inc
000207E4 <AmiBlitz3.ab2@3774>   MOVE.l includesourceline,a0
000207E8 <AmiBlitz3.ab2@3775> BRA 'inc2
000207EE <AmiBlitz3.ab2@3778>   MOVE.l sourceline,a0
000207F2 <AmiBlitz3.ab2@3779>   LEA 9(a0),a0
000207F4 <AmiBlitz3.ab2@3782>   MOVE.l d1,d2
000207F6 <AmiBlitz3.ab2@3783>   MOVE.l A5,D1
000207F8 <AmiBlitz3.ab2@3784>   SUB.l a0,D1
000207FE <AmiBlitz3.ab2@3785>   ADD.l #9,d1
00020802 <AmiBlitz3.ab2@3786>   BSR.w JUMP_writeword
00020808 <AmiBlitz3.ab2@3787>   CMP.l #9,d1
0002080C <AmiBlitz3.ab2@3788>   BEQ 'pos1
00020812 <AmiBlitz3.ab2@3789>   TST.w dontwrite
00020816 <AmiBlitz3.ab2@3790>   BNE 'nopad
0002081C <AmiBlitz3.ab2@3791>   MOVE.l lastsourceline,d1
00020820 <AmiBlitz3.ab2@3792>   MOVE.l d1,-6(a4)
00020824 <AmiBlitz3.ab2@3793> BRA 'nopad
0002082A <AmiBlitz3.ab2@3796>   MOVE.l d2,lastsourceline
00020834 <AmiBlitz3.ab2@3797>    MOVE.l destpointer,lastdestpointer
00020836 <AmiBlitz3.ab2@3798>    MOVEQ #0,d1
0002083C <AmiBlitz3.ab2@3799>   MOVE.l data1,d2
00020842 <AmiBlitz3.ab2@3800>   SUB.l destbufferstart,d2
00020848 <AmiBlitz3.ab2@3801>   JSR writedatalong
0002084E <AmiBlitz3.ab2@3802>   TST.w dontwrite
00020852 <AmiBlitz3.ab2@3803>   BNE 'no2
00020858 <AmiBlitz3.ab2@3804>   JSR addhunkoffset
0002085E <AmiBlitz3.ab2@3807>   MOVE.l data1,d2
00020864 <AmiBlitz3.ab2@3808>   SUB.l destbufferstart,d2
0002086A <AmiBlitz3.ab2@3809>   JSR writedatalong
00020870 <AmiBlitz3.ab2@3810>   TST.w dontwrite
00020874 <AmiBlitz3.ab2@3811>   BNE 'no
0002087A <AmiBlitz3.ab2@3812>   JSR addhunkoffset
00020880 <AmiBlitz3.ab2@3813>   MOVE.l lastwritedat,a1
00020886 <AmiBlitz3.ab2@3814>   CMP.l #0,a1
0002088A <AmiBlitz3.ab2@3815>   BEQ 'no
0002088C <AmiBlitz3.ab2@3816>   MOVE.l d3,(a1)
00020894 <AmiBlitz3.ab2@3817>   MOVE.l prevwritedat,4(a1)
0002089E <AmiBlitz3.ab2@3818>   MOVE.l lastwritedat,prevwritedat
000208A4 <AmiBlitz3.ab2@3821>   MOVE.l d3,lastwritedat
000208A6 <AmiBlitz3.ab2@3822>   MOVEQ #4,d1
000208AA <AmiBlitz3.ab2@3823>   BSR pokedata1b
000208AC <AmiBlitz3.ab2@3826>   MOVE.b (a0)+,d1
000208B0 <AmiBlitz3.ab2@3827>   BEQ 'done
000208B4 <AmiBlitz3.ab2@3828>   BSR pokedata1b
000208B8 <AmiBlitz3.ab2@3829> BRA 'loop
000208BA <AmiBlitz3.ab2@3832>   MOVEQ #0,d1
000208BE <AmiBlitz3.ab2@3833>   BSR pokedata1b
000208C4 <AmiBlitz3.ab2@3834>   MOVE.l data1,d1
000208C8 <AmiBlitz3.ab2@3835>   BTST #0,d1
000208CC <AmiBlitz3.ab2@3836>   BEQ 'nopad
000208CE <AmiBlitz3.ab2@3837>   MOVEQ #0,d1
000208D2 <AmiBlitz3.ab2@3838>   BSR pokedata1b
000208D6 <AmiBlitz3.ab2@3841>   MOVEM.l (a7)+,a0-a1/d2/d3
000208DA <AmiBlitz3.ab2@3842> BRA 'noinc2
000208E0 <AmiBlitz3.ab2@3845>   MOVE.l sourceline,D1
000208E6 <AmiBlitz3.ab2@3847>   JSR writelong
000208E8 <AmiBlitz3.ab2@3848>   MOVE.l A5,D1
000208EE <AmiBlitz3.ab2@3849>   SUB.l sourceline,D1
000208F4 <AmiBlitz3.ab2@3851>   JSR writeword
000208F6 <AmiBlitz3.ab2@3854>   MOVEQ.l #$00,D1
000208FC <AmiBlitz3.ab2@3855>   JSR writeword                                            ; was: BSR.w writeword
00020900 <AmiBlitz3.ab2@3856>   MOVEM.l (A7)+,D0-D1
00020902 <AmiBlitz3.ab2@3859> RTS
00020908 <AmiBlitz3.ab2@3863>   TST.b debugmode                                          ;extern debug
0002090C <AmiBlitz3.ab2@3864>    BEQ.b undodebug__rts
00020912 <AmiBlitz3.ab2@3865>   TST.b dirmode
00020916 <AmiBlitz3.ab2@3866>   BNE undodebug__rts
00020920 <AmiBlitz3.ab2@3871>   MOVE.w d_nomemleft,dontwrite
0002092A <AmiBlitz3.ab2@3872>   MOVE.l d_bigpc,bigpc
00020934 <AmiBlitz3.ab2@3873>   MOVE.l d_pc,destpointer
0002093E <AmiBlitz3.ab2@3874>   MOVE.l cont_pc2,cont_pc
00020940 <AmiBlitz3.ab2@3877> RTS
0002094A <AmiBlitz3.ab2@3881>   MOVE.l #forthstack,forthsp
00020954 <AmiBlitz3.ab2@3882>   MOVE.l #precstack,precsp
0002095A <AmiBlitz3.ab2@3883>   CLR.w regnum
00020960 <AmiBlitz3.ab2@3884>   CLR.w nonew
00020966 <AmiBlitz3.ab2@3885>   CLR.w sbasegot
00020970 <AmiBlitz3.ab2@3886>   MOVE.w varcodelen,oldvcodelen
00020976 <AmiBlitz3.ab2@3887>   CLR.w varcodelen
0002097E <AmiBlitz3.ab2@3888>   MOVE.w #-1,lasta6
00020980 <AmiBlitz3.ab2@3889> RTS
00020986 <AmiBlitz3.ab2@3893>   TST.w linemode
0002098A <AmiBlitz3.ab2@3894>   BMI.b smode__skip
0002098E <AmiBlitz3.ab2@3895>   BSR.w undodebug
00020994 <AmiBlitz3.ab2@3896>   MOVE.w linemode,D1
00020996 <AmiBlitz3.ab2@3897>   ADDQ.w #4,A7
00020998 <AmiBlitz3.ab2@3898>   LSL.w #2,D1
0002099E <AmiBlitz3.ab2@3899>   LEA modetable,A0
000209A2 <AmiBlitz3.ab2@3900>   MOVEA.l $0(A0,D1.W),A0
000209A6 <AmiBlitz3.ab2@3901>   BSR.w reget
000209A8 <AmiBlitz3.ab2@3904> JMP (A0)                                                   ;jumptokenroutine
000209AA <AmiBlitz3.ab2@3907> RTS
000209B2 <AmiBlitz3.ab2@3912>   MOVE.w #0,leaa0a0+2
000209B8 <AmiBlitz3.ab2@3913>   CLR.b nowdeclare
000209BE <AmiBlitz3.ab2@3914>   CLR.b notypecheck
000209C4 <AmiBlitz3.ab2@3915>   CLR.l lasttoken
000209CA <AmiBlitz3.ab2@3916>   CLR.b doimmediate
000209D0 <AmiBlitz3.ab2@3917>   CLR.w vartype
000209D6 <AmiBlitz3.ab2@3918>   CLR.w regnumfunc
000209DC <AmiBlitz3.ab2@3919>   CLR.b optistring
000209E2 <AmiBlitz3.ab2@3920>   CLR.b iniffcommand
000209E8 <AmiBlitz3.ab2@3921>   CLR.w instringon  ; new
000209EE <AmiBlitz3.ab2@3922>   CLR.b funccall
000209F4 <AmiBlitz3.ab2@3923>   CLR.l currentfunccall
000209FA <AmiBlitz3.ab2@3924>   CLR.l leftsidetype
00020A00 <AmiBlitz3.ab2@3925>   CLR.l rightsidetype
00020A06 <AmiBlitz3.ab2@3926>   CLR.b peekaddrsize
00020A0C <AmiBlitz3.ab2@3927>   CLR.b blitzparloop
00020A12 <AmiBlitz3.ab2@3928>   CLR.b funcparloop
00020A18 <AmiBlitz3.ab2@3929>   TST.b debugmode
00020A1C <AmiBlitz3.ab2@3930>    BEQ 'fpu
00020A26 <AmiBlitz3.ab2@3936>   MOVE.b fpu,iee
00020A2A <AmiBlitz3.ab2@3937>   MOVE.w stopit(PC),D0
00020A2E <AmiBlitz3.ab2@3938>   BNE chkstop_chkb
00020A32 <AmiBlitz3.ab2@3939>   BSR.w chkstop                                          ; message here
00020A38 <AmiBlitz3.ab2@3942>   SUBQ.w #1,stopit
00020A3C <AmiBlitz3.ab2@3945>   BSR.w findmacro                                          ;macro
00020A42 <AmiBlitz3.ab2@3999>   TST.b debugmode
00020A46 <AmiBlitz3.ab2@4000>    BEQ.s 'l10
00020A4C <AmiBlitz3.ab2@4001>   TST.b exdebug
00020A50 <AmiBlitz3.ab2@4002>   BEQ 'l10a
00020A52 <AmiBlitz3.ab2@4003>   MOVE.w (a5),d0
00020A56 <AmiBlitz3.ab2@4004>   CMP.w #$8025,d0
00020A5A <AmiBlitz3.ab2@4005>    BEQ 'l10
00020A5E <AmiBlitz3.ab2@4008>   BSR.w debugstuffa                                         ;insert runtimecode debugcode
00020A62 <AmiBlitz3.ab2@4012>   BSR.w get1bytemain                                       ;gettokenmain
00020A66 <AmiBlitz3.ab2@4013>    BEQ.w undodebug
00020A6A <AmiBlitz3.ab2@4014>   CMP.w #$002b,d0                                            ;check for + cast sign
00020A6E <AmiBlitz3.ab2@4015>     BNE 'lb2
00020A72 <AmiBlitz3.ab2@4016>     BSR.w get1bytemain
00020A7A <AmiBlitz3.ab2@4017>     MOVE.b #1,notypecheck
00020A84 <AmiBlitz3.ab2@4025>   MOVE.l #forthstack,forthsp
00020A8E <AmiBlitz3.ab2@4026>   MOVE.l #precstack,precsp
00020A94 <AmiBlitz3.ab2@4027>   CLR.w regnum
00020A9A <AmiBlitz3.ab2@4028>   CLR.w nonew
00020AA0 <AmiBlitz3.ab2@4029>   CLR.w sbasegot
00020AAA <AmiBlitz3.ab2@4030>   MOVE.w varcodelen,oldvcodelen
00020AB0 <AmiBlitz3.ab2@4032>   CLR.w varcodelen
00020AB8 <AmiBlitz3.ab2@4033>   MOVE.w #$FFFF,lasta6
00020ABC <AmiBlitz3.ab2@4035>   BSR.w smode
00020ABE <AmiBlitz3.ab2@4036>   TST.w D0
00020AC2 <AmiBlitz3.ab2@4037>   BMI.w get_tokencode
00020AC6 <AmiBlitz3.ab2@4038>   CMP.w #$2E,D0
00020ACA <AmiBlitz3.ab2@4039>    BEQ.w JL_0_4644                                         ;shortlist
00020ACE <AmiBlitz3.ab2@4040>   CMP.w #"#",D0
00020AD2 <AmiBlitz3.ab2@4041>    BEQ.w JL_0_4718                                         ;constant found
00020AD6 <AmiBlitz3.ab2@4042>   CMP.w #$27,D0
00020ADA <AmiBlitz3.ab2@4043>    BEQ.w JL_0_4638                                         ;local label
00020AE0 <AmiBlitz3.ab2@4044>   MOVE.l A5,letstart
00020AE6 <AmiBlitz3.ab2@4045>   JSR getparameter
00020AEA <AmiBlitz3.ab2@4046>   BSR.w reget
00020AEE <AmiBlitz3.ab2@4047>    BEQ.w JL_0_4658                                         ;label found
00020AF2 <AmiBlitz3.ab2@4048>   CMP.w #$7B,D0
00020AF6 <AmiBlitz3.ab2@4049>    BEQ.w JL_0_475C
00020AF8 <AmiBlitz3.ab2@4050>   TST.w d0
00020AFC <AmiBlitz3.ab2@4051>    BPL 'll1
00020B02 <AmiBlitz3.ab2@4052>   TST.b newsyntax
00020B06 <AmiBlitz3.ab2@4053>    BEQ 'll1
00020B0C <AmiBlitz3.ab2@4054>   LEA allowtab,a0
00020B0E <AmiBlitz3.ab2@4055>   MOVEQ #0,d1
00020B10 <AmiBlitz3.ab2@4056>   MOVE.b d0,d1
00020B14 <AmiBlitz3.ab2@4057>   TST.b 0(a0,d1.w)
00020B18 <AmiBlitz3.ab2@4058>    BNE 'll1
00020B1A <AmiBlitz3.ab2@4059>   SUBQ.l #2,a5
00020B22 <AmiBlitz3.ab2@4060>   MOVE.w #":",lastchar                                     ;no doublepoint
00020B26 <AmiBlitz3.ab2@4061> BRA JL_0_4658
00020B2E <AmiBlitz3.ab2@4064>   CMP.l #"equ ",-1(a5)
00020B32 <AmiBlitz3.ab2@4065>    BEQ 'll4
00020B3A <AmiBlitz3.ab2@4066>   CMP.l #"EQU ",-1(a5)
00020B3E <AmiBlitz3.ab2@4067>    BNE 'll2
00020B40 <AmiBlitz3.ab2@4070>   ADDQ.l #2,a5
00020B44 <AmiBlitz3.ab2@4071>   BSR.w findlabel2
00020B48 <AmiBlitz3.ab2@4072>   BEQ.w 'lf1
00020B4C <AmiBlitz3.ab2@4073>   BSR.w addlabelhash
00020B54 <AmiBlitz3.ab2@4074>   MOVE.l #$1,$4(A2)
00020B5C <AmiBlitz3.ab2@4077>   CMPI.l #$1,$4(A2)
00020B60 <AmiBlitz3.ab2@4078>    BNE.w illconerr
00020B64 <AmiBlitz3.ab2@4079>   BSR get1bytemain
00020B66 <AmiBlitz3.ab2@4080>   MOVE.l A2,-(A7)
00020B68 <AmiBlitz3.ab2@4091>   SUBQ.l #1,a5
00020B6A <AmiBlitz3.ab2@4094>   SUBQ.l #1,a5
00020B70 <AmiBlitz3.ab2@4095>   JSR AJL_0_BF6E
00020B72 <AmiBlitz3.ab2@4096>   MOVEA.l (A7)+,A2
00020B76 <AmiBlitz3.ab2@4097>   MOVE.l D3,$8(A2)
00020B78 <AmiBlitz3.ab2@4098>   RTS
00020B7C <AmiBlitz3.ab2@4099>   BSR get1bytemain
00020B84 <AmiBlitz3.ab2@4102>   CMP.l #"SET ",-1(a5)
00020B88 <AmiBlitz3.ab2@4103>   BNE 'll3
00020B8C <AmiBlitz3.ab2@4104> BRA 'll4
00020B92 <AmiBlitz3.ab2@4107> JMP AJL_0_DEA6
00020B96 <AmiBlitz3.ab2@4110>   CMP.w #-$7FDE,D0
00020B9A <AmiBlitz3.ab2@4111>   BEQ.w get_tokencode
00020B9E <AmiBlitz3.ab2@4112> BRA.w undodebug
00020BA2 <AmiBlitz3.ab2@4115>   BSR.w undodebug
00020BA6 <AmiBlitz3.ab2@4116>   BSR.w createlab
00020BAA <AmiBlitz3.ab2@4117> BRA.w JL_0_466E
00020BAE <AmiBlitz3.ab2@4120>   BSR.w get1bytemain
00020BB2 <AmiBlitz3.ab2@4121>    BEQ.w JL_0_462C
00020BB6 <AmiBlitz3.ab2@4122>   CMP.w #"'",D0
00020BBA <AmiBlitz3.ab2@4123>    BEQ.w JL_0_4638
00020BBE <AmiBlitz3.ab2@4124>    BSR.w makename2
00020BC0 <AmiBlitz3.ab2@4125>    TST.w d0
00020BC4 <AmiBlitz3.ab2@4126>    BPL 'll1
00020BC6 <AmiBlitz3.ab2@4127>    SUBQ.l #2,a5
00020BCE <AmiBlitz3.ab2@4128>    MOVE.w #":",lastchar
00020BD2 <AmiBlitz3.ab2@4129> BRA JL_0_4658                                              ;????
00020BD6 <AmiBlitz3.ab2@4133>   BSR.w undodebug
00020BDC <AmiBlitz3.ab2@4134>   LEA ptr_parameterstore,A0
00020BE2 <AmiBlitz3.ab2@4135>   LEA lastgloballabel,A1
00020BE4 <AmiBlitz3.ab2@4138>   MOVE.b (A0)+,(A1)+
00020BE8 <AmiBlitz3.ab2@4139>    BNE.w JL_0_4668
00020BEC <AmiBlitz3.ab2@4142>   BSR.w findlabel2
00020BF0 <AmiBlitz3.ab2@4143>    BEQ.w JL_0_4698
00020BF4 <AmiBlitz3.ab2@4144>    BSR.w addlabelhash
00020BF8 <AmiBlitz3.ab2@4147>   CLR.l $4(A2)
00020C00 <AmiBlitz3.ab2@4148>   MOVE.l destpointer,$8(A2)
00020C08 <AmiBlitz3.ab2@4151>   MOVE.w procnum,$10(A2)
00020C0A <AmiBlitz3.ab2@4152> RTS
00020C0E <AmiBlitz3.ab2@4156>   MOVE.l $4(A2),D0
00020C12 <AmiBlitz3.ab2@4157>   BTST #$0,D0
00020C16 <AmiBlitz3.ab2@4158>    BNE.w illlaberr
00020C1C <AmiBlitz3.ab2@4159>   TST.w pass
00020C20 <AmiBlitz3.ab2@4161>   MOVE.l $8(A2),D0
00020C24 <AmiBlitz3.ab2@4162>    BNE.w duplaberr
00020C2C <AmiBlitz3.ab2@4163>   MOVE.w procnum,$10(A2)
00020C30 <AmiBlitz3.ab2@4164>   MOVEA.l $4(A2),A3
00020C36 <AmiBlitz3.ab2@4165>   MOVEA.l _execbase,A6
00020C3A <AmiBlitz3.ab2@4168>   CMPA.w #$0,A3
00020C3E <AmiBlitz3.ab2@4169>    BEQ.w JL_0_467A
00020C42 <AmiBlitz3.ab2@4170>     MOVE.l $4(A2),D1
00020C46 <AmiBlitz3.ab2@4171>     BTST #$0,D1
00020C4A <AmiBlitz3.ab2@4172>     BNE.w illlaberr
00020C4E <AmiBlitz3.ab2@4173>   MOVE.w $8(A3),D1
00020C52 <AmiBlitz3.ab2@4174>   CMP.w $10(A2),D1
00020C56 <AmiBlitz3.ab2@4175>    BEQ.w JL_0_46DC
00020C5C <AmiBlitz3.ab2@4176>    TST.b newsyntax
00020C60 <AmiBlitz3.ab2@4177>    BEQ 'l1
00020C64 <AmiBlitz3.ab2@4178> BRA.w JL_0_46DC                                            ;label context out of range fix
00020C6C <AmiBlitz3.ab2@4183>   MOVE.w $A(A3),linenumat+2                                ;move 10(a3),linenumat org source
00020C70 <AmiBlitz3.ab2@4184> BRA.w referr
00020C76 <AmiBlitz3.ab2@4187>   MOVE.w dontwrite,D1
00020C7A <AmiBlitz3.ab2@4188>    BNE.w JL_0_4706
00020C7E <AmiBlitz3.ab2@4189>   MOVEA.l $4(A3),A1
00020C84 <AmiBlitz3.ab2@4190>   BTST #$0,$7(A3)
00020C88 <AmiBlitz3.ab2@4191>    BEQ.w JL_0_4700
00020C8A <AmiBlitz3.ab2@4192>   SUBQ.w #1,A1
00020C90 <AmiBlitz3.ab2@4193>   MOVE.l data2,(A1)
00020C94 <AmiBlitz3.ab2@4194> BRA.w JL_0_4706
00020C9A <AmiBlitz3.ab2@4197>   MOVE.l destpointer,(A1)
00020C9C <AmiBlitz3.ab2@4200>   MOVEA.l A3,A1
00020C9E <AmiBlitz3.ab2@4201>   MOVEA.l (A3),A3
00020CA2 <AmiBlitz3.ab2@4202>   MOVE.l A3,$4(A2)
00020CA4 <AmiBlitz3.ab2@4203>   MOVEQ.l #$0C+2,D0
00020CAA <AmiBlitz3.ab2@4204>   MOVE.l mempool,a0
00020CB0 <AmiBlitz3.ab2@4205>   MOVEA.l _execbase,A6
00020CB4 <AmiBlitz3.ab2@4206>   JSR _FreePooled(A6)
00020CB8 <AmiBlitz3.ab2@4207> BRA.w JL_0_46BC
00020CC2 <AmiBlitz3.ab2@4212>    MOVE.l #forthstack,forthsp
00020CCC <AmiBlitz3.ab2@4213>   MOVE.l #precstack,precsp
00020CD0 <AmiBlitz3.ab2@4214>    BSR.w getparameter2
00020CD4 <AmiBlitz3.ab2@4217>   BSR.w findlabel2
00020CD8 <AmiBlitz3.ab2@4218>    BEQ.w JL_0_4738
00020CDC <AmiBlitz3.ab2@4219>    BSR.w addlabelhash
00020CE4 <AmiBlitz3.ab2@4220>   MOVE.l #$1,$4(A2)
00020CE8 <AmiBlitz3.ab2@4221> BRA.w JL_0_4744
00020CF0 <AmiBlitz3.ab2@4224>   CMPI.l #$1,$4(A2)
00020CF4 <AmiBlitz3.ab2@4225>    BNE.w illconerr
00020CF8 <AmiBlitz3.ab2@4234>   CMP.w #$3D,D0
00020CFC <AmiBlitz3.ab2@4235>   BEQ.w JL_0_474E
00020CFE <AmiBlitz3.ab2@4236> RTS
00020D00 <AmiBlitz3.ab2@4240>   MOVE.l A2,-(A7)
00020D06 <AmiBlitz3.ab2@4241>   JSR AJL_0_BF6E
00020D08 <AmiBlitz3.ab2@4242>   MOVEA.l (A7)+,A2
00020D0C <AmiBlitz3.ab2@4243>   MOVE.l D3,$8(A2)                                         ;store constant
00020D14 <AmiBlitz3.ab2@4244>   CMP.w #$0a,lastchar
00020D18 <AmiBlitz3.ab2@4245>   BNE 'l1
00020D20 <AmiBlitz3.ab2@4246>   MOVE.w #":",lastchar                                     ;hack to read wizard include files
00020D22 <AmiBlitz3.ab2@4249> RTS
00020D26 <AmiBlitz3.ab2@4252>   BSR.w findproc                                           ;write statement call
00020D2A <AmiBlitz3.ab2@4253>   BEQ _state
00020D30 <AmiBlitz3.ab2@4254>   TST.l unusedfunc
00020D34 <AmiBlitz3.ab2@4255>   BEQ noprocerr
00020D3A <AmiBlitz3.ab2@4257>   JSR gotoendsource
00020D3E <AmiBlitz3.ab2@4260>   TST.b $5(A2)
00020D44 <AmiBlitz3.ab2@4262>   MOVE.l a2,currentfunccall
00020D4C <AmiBlitz3.ab2@4263>   MOVE.b #1,funccall
00020D52 <AmiBlitz3.ab2@4264>   MOVE.b #1,isfunc(a2)
00020D56 <AmiBlitz3.ab2@4265>   MOVE.l $E(A2),-(A7)
00020D58 <AmiBlitz3.ab2@4266>   MOVEQ.l #$00,D0
00020D5C <AmiBlitz3.ab2@4267>   MOVE.b $4(A2),D0
00020D62 <AmiBlitz3.ab2@4268>   MOVE.l d0,parnumtemp
00020D66 <AmiBlitz3.ab2@4269>   BEQ.w JL_0_4786
00020D6A <AmiBlitz3.ab2@4270>   TST.b $20(a2)                                            ;increase if morepar
00020D6E <AmiBlitz3.ab2@4271>   BNE 'no0par
00020D70 <AmiBlitz3.ab2@4272>   MOVE.l a5,a4
00020D74 <AmiBlitz3.ab2@4275>   CMP.b #$20,(a4)+
00020D78 <AmiBlitz3.ab2@4276>   BEQ 'l1
00020D7E <AmiBlitz3.ab2@4277>   CMP.b #"}",-1(a4)
00020D82 <AmiBlitz3.ab2@4278>   BNE  'no0par                                             ;statementcall pars
00020D84 <AmiBlitz3.ab2@4279>   MOVEQ #0,d0
00020D88 <AmiBlitz3.ab2@4282>   LEA $16(A2),A1
00020D8A <AmiBlitz3.ab2@4285>   MOVE.l d1,-(a7)
00020D8C <AmiBlitz3.ab2@4286>   MOVE.b (a1),d2
00020D8E <AmiBlitz3.ab2@4287>   MOVE.l d0,d1
00020D92 <AmiBlitz3.ab2@4288>   CMP.w #4,d2
00020D96 <AmiBlitz3.ab2@4289>   BNE 'l1b
00020D9C <AmiBlitz3.ab2@4290>   ADD.l #$203c,d1
00020DA2 <AmiBlitz3.ab2@4292>   JSR writeword
00020DA8 <AmiBlitz3.ab2@4293>   MOVE.l #$ffff0000,d1
00020DAE <AmiBlitz3.ab2@4295>   JSR writelong
00020DB2 <AmiBlitz3.ab2@4296> BRA 'l2b
00020DB8 <AmiBlitz3.ab2@4299>   TST.b fpu
00020DBC <AmiBlitz3.ab2@4300>   BNE 'l1c
00020DC0 <AmiBlitz3.ab2@4301>   CMP.w #5,d2
00020DC4 <AmiBlitz3.ab2@4302>   BNE 'l1c
00020DCA <AmiBlitz3.ab2@4303>   ADD.l #$203c,d1
00020DD0 <AmiBlitz3.ab2@4305>   JSR writeword
00020DD6 <AmiBlitz3.ab2@4306>   MOVE.l #$800000c1,d1
00020DDC <AmiBlitz3.ab2@4308>   JSR writelong
00020DE0 <AmiBlitz3.ab2@4309> BRA 'l2b
00020DE6 <AmiBlitz3.ab2@4312>   ADD.l #$70ff,d1
00020DEC <AmiBlitz3.ab2@4314>   JSR writeword
00020DF2 <AmiBlitz3.ab2@4315>   MOVE.l #$f23c5000,d1
00020DF4 <AmiBlitz3.ab2@4316>   MOVE.l d0,d2
00020DF6 <AmiBlitz3.ab2@4317>   ASR.l #2,d2
00020DF8 <AmiBlitz3.ab2@4318>   ADD.l d2,d1
00020DFE <AmiBlitz3.ab2@4320>   JSR writelong
00020E02 <AmiBlitz3.ab2@4321>   MOVE.w #$ffff,d1
00020E08 <AmiBlitz3.ab2@4323>   JSR writeword
00020E0A <AmiBlitz3.ab2@4326>   MOVE.l (a7)+,d1
00020E0C <AmiBlitz3.ab2@4327>   ADDQ.l #1,a1
00020E12 <AmiBlitz3.ab2@4328>   ADD.l #$0200,d0
00020E18 <AmiBlitz3.ab2@4329>   CMP.l #$0e00,d0
00020E1C <AmiBlitz3.ab2@4330>    BEQ syntaxerr
00020E1E <AmiBlitz3.ab2@4331>   TST.b (a1)
00020E22 <AmiBlitz3.ab2@4332>    BNE 'again
00020E26 <AmiBlitz3.ab2@4333> BRA JL_0_4786
00020E30 <AmiBlitz3.ab2@4336>   MOVE.w a2offset,a2offset2
00020E34 <AmiBlitz3.ab2@4337>   LEA $16(A2),A2
00020E3A <AmiBlitz3.ab2@4338>   MOVE.b funcparloop,-(a7)
00020E42 <AmiBlitz3.ab2@4339>   MOVE.b #1,funcparloop
00020E48 <AmiBlitz3.ab2@4340>   MOVE.b blitzparloop,-(a7)
00020E4E <AmiBlitz3.ab2@4341>   CLR.b blitzparloop
00020E52 <AmiBlitz3.ab2@4342>   BSR.w fetchpees2
00020E58 <AmiBlitz3.ab2@4343>   MOVE.b (a7)+,blitzparloop
00020E5E <AmiBlitz3.ab2@4344>   MOVE.b (a7)+,funcparloop
00020E62 <AmiBlitz3.ab2@4345> BRA.w JL_0_478A
00020E66 <AmiBlitz3.ab2@4348>   BSR.w get1bytemain
00020E6A <AmiBlitz3.ab2@4351>   CMP.w #$7D,D0
00020E6E <AmiBlitz3.ab2@4352>    BNE.w morepar_                                          ;syntax error morepar
00020E74 <AmiBlitz3.ab2@4353>    JSR chkstak
00020E76 <AmiBlitz3.ab2@4354>   MOVE.l (A7)+,D1
00020E7C <AmiBlitz3.ab2@4370>    JSR JL_0_AFCA
00020E82 <AmiBlitz3.ab2@4392>   CLR.b funccall
00020E86 <AmiBlitz3.ab2@4393> BRA.w get1bytemain
00020E8C <AmiBlitz3.ab2@4397>   MOVE.l d0,lasttoken
00020E90 <AmiBlitz3.ab2@4398>   CMP.w #$c09f,d0                                          ;hack to use getregd0 instead of getd0
00020E94 <AmiBlitz3.ab2@4399>   BNE 'l2
00020E98 <AmiBlitz3.ab2@4400>    MOVE.w #$dd05,d0
00020E9C <AmiBlitz3.ab2@4403>   CMP.w #$c0a0,d0                                          ;hack to use getregd0 instead of getd0
00020EA0 <AmiBlitz3.ab2@4404>   BNE 'l3
00020EA4 <AmiBlitz3.ab2@4405>    MOVE.w #$dd06,d0
00020EA8 <AmiBlitz3.ab2@4408>   CMP.w #-$7FC4,D0
00020EAC <AmiBlitz3.ab2@4409>   BCS.w JL_0_47C4
00020EB0 <AmiBlitz3.ab2@4410>     CMP.w #-$7F4D,D0
00020EB4 <AmiBlitz3.ab2@4411>     BCC.w JL_0_47C4
00020EBC <AmiBlitz3.ab2@4412>       BTST #$7,assemblercheck                              ;inline Assembler checking
00020EC0 <AmiBlitz3.ab2@4413>       BNE.b JL_0_47C0
00020EC6 <AmiBlitz3.ab2@4414>         TST.b debugmode
00020ECA <AmiBlitz3.ab2@4415>         BEQ.b 'l10
00020ED4 <AmiBlitz3.ab2@4420>           MOVE.w d_nomemleft,dontwrite
00020EDE <AmiBlitz3.ab2@4421>           MOVE.l d_bigpc,bigpc
00020EE8 <AmiBlitz3.ab2@4422>           MOVE.l d_pc,destpointer
00020EF2 <AmiBlitz3.ab2@4423>           MOVE.l cont_pc2,cont_pc
00020EF6 <AmiBlitz3.ab2@4429> BRA.w JL_0_612C
00020EFA <AmiBlitz3.ab2@4432>   BCLR #$F,D0
00020EFC <AmiBlitz3.ab2@4433>   MOVE.w D0,D1
00020F00 <AmiBlitz3.ab2@4434>   ANDI.w #$7F00,D1
00020F04 <AmiBlitz3.ab2@4435>   BNE.w JL_0_4856
00020F08 <AmiBlitz3.ab2@4436>     CMP.w #$B3,D0                                          ;intern Instructions
00020F0C <AmiBlitz3.ab2@4437>     BCS.w JL_0_47F2
00020F10 <AmiBlitz3.ab2@4438>       SUBI.w #$77,D0
00020F14 <AmiBlitz3.ab2@4439>       CMP.w #$4B,D0
00020F18 <AmiBlitz3.ab2@4440>       BEQ.w JL_0_4830
00020F1C <AmiBlitz3.ab2@4441>         CMP.w #$46,D0
00020F20 <AmiBlitz3.ab2@4442>         BEQ.w JL_0_4830
00020F24 <AmiBlitz3.ab2@4443> BRA.w JL_0_4834                                            ; change tokennum
00020F28 <AmiBlitz3.ab2@4446>     CMP.w #$38,D0
00020F2C <AmiBlitz3.ab2@4447>      BEQ.w JL_0_4830
00020F30 <AmiBlitz3.ab2@4448>     CMP.w #$39,D0
00020F34 <AmiBlitz3.ab2@4449>      BEQ.w JL_0_4830
00020F38 <AmiBlitz3.ab2@4450>     CMP.w #$D,D0
00020F3C <AmiBlitz3.ab2@4451>      BEQ.w JL_0_4830
00020F40 <AmiBlitz3.ab2@4452>     CMP.w #$12,D0
00020F44 <AmiBlitz3.ab2@4453>      BEQ.w JL_0_4830
00020F48 <AmiBlitz3.ab2@4454>     CMP.w #$13,D0
00020F4C <AmiBlitz3.ab2@4455>      BEQ.w JL_0_4830
00020F50 <AmiBlitz3.ab2@4456>     CMP.w #$1A,D0
00020F54 <AmiBlitz3.ab2@4457>      BEQ.w JL_0_4830
00020F58 <AmiBlitz3.ab2@4458>     CMP.w #$2A,D0
00020F5C <AmiBlitz3.ab2@4459>      BHI.w JL_0_4834
00020F60 <AmiBlitz3.ab2@4460>     CMP.w #$23,D0
00020F64 <AmiBlitz3.ab2@4461>      BCS.b JL_0_4834
00020F68 <AmiBlitz3.ab2@4464>   BSR.w undodebug
00020F6A <AmiBlitz3.ab2@4467>   SUBQ.w #1,D0
00020F6C <AmiBlitz3.ab2@4468>   LSL.w #2,D0
00020F72 <AmiBlitz3.ab2@4475>   LEA instructionbase,A0
00020F76 <AmiBlitz3.ab2@4476>   MOVEA.l $0(A0,D0.W),A0
00020F78 <AmiBlitz3.ab2@4477>   MOVE.l A0,-(A7)
00020F7C <AmiBlitz3.ab2@4478> BRA.w get1bytemain
00020F7E <AmiBlitz3.ab2@4484>   MOVE.w D0,D1
00020F82 <AmiBlitz3.ab2@4485>    BSR.w searchinstr
00020F88 <AmiBlitz3.ab2@4486>    TST.b newmode
00020F8C <AmiBlitz3.ab2@4487>    BNE compile_term
00020F92 <AmiBlitz3.ab2@4488>   BTST #$2,$1(A3)                                          ;a3 = pointer to instr ;toke stuff in a3
00020F96 <AmiBlitz3.ab2@4489>    BNE.w stamigalib
00020F9C <AmiBlitz3.ab2@4490>   BTST #$0,$1(A3)
00020FA0 <AmiBlitz3.ab2@4491>    BEQ.w needreturn_                                       ;syntax err need return   ;check it's a statement
00020FA4 <AmiBlitz3.ab2@4492>    BSR.w JL_0_49EA                                         ;does it need a size specifier?
00020FA8 <AmiBlitz3.ab2@4493>    BSR.w JL_0_66F6
00020FAE <AmiBlitz3.ab2@4499>   MOVE.w numreps,-(A7)
00020FB4 <AmiBlitz3.ab2@4500>   MOVE.w userp,-(A7)
00020FBA <AmiBlitz3.ab2@4501>   MOVE.w a2offset,-(A7)
00020FBC <AmiBlitz3.ab2@4502>   MOVE.l A2,-(A7)                                          ;recurs.
00020FC6 <AmiBlitz3.ab2@4503>   MOVE.w convsize,userp
00020FCA <AmiBlitz3.ab2@4504>   LEA $6(A3),A1
00020FCC <AmiBlitz3.ab2@4508>    MOVE.w (A1),D2
00020FD0 <AmiBlitz3.ab2@4509>    BMI.w SERR                                              ;statement syntax error
00020FD4 <AmiBlitz3.ab2@4510>   ANDI.w #$FF,D2
00020FD6 <AmiBlitz3.ab2@4511>   CMP.w D2,D1
00020FDA <AmiBlitz3.ab2@4512>    BEQ.w JL_0_48E0
00020FDE <AmiBlitz3.ab2@4513>    BCS.w JL_0_48CC
00020FE0 <AmiBlitz3.ab2@4514>   MOVE.b (A1),D3
00020FE4 <AmiBlitz3.ab2@4515>   ANDI.w #$7,D3
00020FE8 <AmiBlitz3.ab2@4516>    BEQ.w JL_0_48CC
00020FEA <AmiBlitz3.ab2@4517>   MOVE.w D2,D4
00020FEC <AmiBlitz3.ab2@4518>   SUB.w D3,D4
00020FEE <AmiBlitz3.ab2@4519>   MOVEQ.l #$00,D5
00020FF0 <AmiBlitz3.ab2@4520>   MOVE.w D1,D5
00020FF2 <AmiBlitz3.ab2@4521>   SUB.w D4,D5
00020FF4 <AmiBlitz3.ab2@4522>   DIVU D3,D5
00020FF6 <AmiBlitz3.ab2@4523>   SWAP D5
00020FF8 <AmiBlitz3.ab2@4524>   TST.w D5
00020FFC <AmiBlitz3.ab2@4525>    BEQ.w JL_0_48E0
00020FFE <AmiBlitz3.ab2@4528>   ADDQ.w #2,A1
00021000 <AmiBlitz3.ab2@4529>   ADDA.w D2,A1
00021004 <AmiBlitz3.ab2@4530>    BSR.w aligna1
00021008 <AmiBlitz3.ab2@4531>    BSR.w skiplibreg
0002100C <AmiBlitz3.ab2@4532>   LEA $C(A1),A1
00021010 <AmiBlitz3.ab2@4533> BRA.w JL_0_489A
00021012 <AmiBlitz3.ab2@4536>   MOVE.w (a3),d2
00021016 <AmiBlitz3.ab2@4537>   BTST #1,d2
0002101A <AmiBlitz3.ab2@4538>   BEQ statement_
0002101E <AmiBlitz3.ab2@4539>   CMP.w #1,d1
00021022 <AmiBlitz3.ab2@4540>   BEQ statement_
00021026 <AmiBlitz3.ab2@4543>   CMP.b #$20,(a5)+
0002102A <AmiBlitz3.ab2@4544>   BEQ 'l2
00021030 <AmiBlitz3.ab2@4545>   CMP.b #"(",-2(a5)
00021034 <AmiBlitz3.ab2@4546>   BNE 'l1
00021038 <AmiBlitz3.ab2@4547> BRA parameter_
0002103C <AmiBlitz3.ab2@4550> BRA inbrackets_
0002103E <AmiBlitz3.ab2@4553>   MOVE.b (A1),D2
00021040 <AmiBlitz3.ab2@4554>   LSL.w #8,D2
00021042 <AmiBlitz3.ab2@4555>   OR.w D2,D1
00021044 <AmiBlitz3.ab2@4556>   MOVE.l A1,-(A7)
0002104A <AmiBlitz3.ab2@4557>   CLR.w a2offset
0002104C <AmiBlitz3.ab2@4558>   TST.w D1
00021050 <AmiBlitz3.ab2@4559>    BEQ.w JL_0_4900
00021054 <AmiBlitz3.ab2@4560>   LEA $2(A1),A2
0002105A <AmiBlitz3.ab2@4562>   MOVE.l lasttoken,-(a7)
00021060 <AmiBlitz3.ab2@4563>   CLR.l lasttoken
00021064 <AmiBlitz3.ab2@4564>   BSR.w fetchlibps
0002106A <AmiBlitz3.ab2@4565>   MOVE.l (a7)+,lasttoken
0002106E <AmiBlitz3.ab2@4566> BRA.w JL_0_4904
00021072 <AmiBlitz3.ab2@4569>   BSR.w get1bytemain
00021074 <AmiBlitz3.ab2@4572>   MOVEA.l (A7)+,A1
00021076 <AmiBlitz3.ab2@4573>   MOVEA.l (A7)+,A2
0002107C <AmiBlitz3.ab2@4574>   MOVE.w a2offset,D1
00021080 <AmiBlitz3.ab2@4575>    BEQ.w JL_0_493A
00021086 <AmiBlitz3.ab2@4576>   MOVE.w D1,preplibst+2
0002108C <AmiBlitz3.ab2@4577>   MOVE.l preplibst,D1
00021092 <AmiBlitz3.ab2@4578>    JSR writelong                                           ;write array offset stack correct
0002109C <AmiBlitz3.ab2@4579>   MOVE.w numreps,movenumrep+2
000210A0 <AmiBlitz3.ab2@4580>    BEQ.w JL_0_493A
000210A6 <AmiBlitz3.ab2@4581>   MOVE.l movenumrep,D1
000210AC <AmiBlitz3.ab2@4582>    JSR writelong
000210B2 <AmiBlitz3.ab2@4586>   JSR userjsr
000210B8 <AmiBlitz3.ab2@4589>   MOVE.w a2offset,D1
000210BC <AmiBlitz3.ab2@4590>    BEQ.w JL_0_4974
000210C0 <AmiBlitz3.ab2@4591>   CMP.w #$8,D1
000210C4 <AmiBlitz3.ab2@4592>    BHI.w JL_0_4964
000210C8 <AmiBlitz3.ab2@4593>   ANDI.w #$7,D1
000210CA <AmiBlitz3.ab2@4594>   LSL.w #8,D1
000210CC <AmiBlitz3.ab2@4595>   LSL.w #1,D1
000210D0 <AmiBlitz3.ab2@4596>   ORI.w #$504F,D1
000210D6 <AmiBlitz3.ab2@4598>   JSR writeword
000210DA <AmiBlitz3.ab2@4599> BRA.w JL_0_4974
000210E0 <AmiBlitz3.ab2@4602>   MOVE.w D1,fixlibst+2
000210E6 <AmiBlitz3.ab2@4603>   MOVE.l fixlibst,D1
000210EC <AmiBlitz3.ab2@4604>   JSR writelong
000210F2 <AmiBlitz3.ab2@4607>   MOVE.w (A7)+,a2offset
000210F8 <AmiBlitz3.ab2@4608>   MOVE.w (A7)+,userp
000210FE <AmiBlitz3.ab2@4609>   MOVE.w (A7)+,numreps
00021102 <AmiBlitz3.ab2@4610> BRA.w reget
00021106 <AmiBlitz3.ab2@4614>   MOVEM.l A2-A3,-(A7)
0002110C <AmiBlitz3.ab2@4615>   CLR.b doublepeek
00021112 <AmiBlitz3.ab2@4616>   MOVE.l A5,lastsourcepos
00021116 <AmiBlitz3.ab2@4617>    BSR.w getchar
0002111A <AmiBlitz3.ab2@4618>   CMP.w #$2E,D0
0002111E <AmiBlitz3.ab2@4619>    BEQ.w JL_0_49B4
00021124 <AmiBlitz3.ab2@4620>   MOVEA.l defaulttype,A2
00021128 <AmiBlitz3.ab2@4621>   CMP.w #$24,D0
0002112C <AmiBlitz3.ab2@4622>    BNE.w JL_0_49CA
0002112E <AmiBlitz3.ab2@4623>   MOVEQ.l #$07,D1
00021132 <AmiBlitz3.ab2@4624> BRA.w JL_0_49DE
00021136 <AmiBlitz3.ab2@4627>   BSR.w getparameter2
0002113A <AmiBlitz3.ab2@4628>   BEQ.w syntaxerr
00021140 <AmiBlitz3.ab2@4629>   LEA newtypebase,A2
00021144 <AmiBlitz3.ab2@4630>   BSR.w findtype
00021148 <AmiBlitz3.ab2@4631>   BNE.w notypeerr
00021152 <AmiBlitz3.ab2@4635>   MOVE.w oldqflag,instringon
00021158 <AmiBlitz3.ab2@4636>   MOVEA.l lastsourcepos,A5
0002115C <AmiBlitz3.ab2@4641>   MOVE.w $6(A2),D1
00021162 <AmiBlitz3.ab2@4642>   CMP.w #8,8(a2)
00021166 <AmiBlitz3.ab2@4643>   BNE 'l1
0002116E <AmiBlitz3.ab2@4644>   MOVE.b #1,doublepeek
00021174 <AmiBlitz3.ab2@4648>   MOVE.w D1,convsize
00021178 <AmiBlitz3.ab2@4649>   MOVEM.l (A7)+,A2-A3
0002117A <AmiBlitz3.ab2@4650> RTS
00021180 <AmiBlitz3.ab2@4655>   BTST #$3,$1(A3)
00021184 <AmiBlitz3.ab2@4656>   BEQ.w JL_0_4A06
00021188 <AmiBlitz3.ab2@4657>   BSR.w AJL_0_498A                                         ;read peek/poke size
0002118C <AmiBlitz3.ab2@4659>   ORI.w #$7000,D1
00021192 <AmiBlitz3.ab2@4660>   JSR writeword
00021198 <AmiBlitz3.ab2@4661>   ADDQ.w #1,regnum
0002119A <AmiBlitz3.ab2@4664> RTS
0002119C <AmiBlitz3.ab2@4670>             Dc.b $10,$12                                   ;MOVE.B  (A2),D0
0002119E <AmiBlitz3.ab2@4671>             Dc.b $14,$91                                   ;MOVE.B  (A1),(A2)
000211A0 <AmiBlitz3.ab2@4672>             Dc.b $12,$80                                   ;MOVE.B  D0,(A1)
000211A2 <AmiBlitz3.ab2@4676> swapw:      Dc.b $30,$12                                   ;MOVE.W  (A2),D0
000211A4 <AmiBlitz3.ab2@4677>             Dc.b $34,$91                                   ;MOVE.W  (A1),(A2)
000211A6 <AmiBlitz3.ab2@4678>             Dc.b $32,$80                                   ;MOVE.W  D0,(A1)
000211A8 <AmiBlitz3.ab2@4682> swapl:      Dc.b $20,$12                                   ;MOVE.L  (A2),D0
000211AA <AmiBlitz3.ab2@4683>             Dc.b $24,$91                                   ;MOVE.L  (A1),(A2)
000211AC <AmiBlitz3.ab2@4684>             Dc.b $22,$80                                   ;MOVE.L  D0,(A1)
000211AE <AmiBlitz3.ab2@4688> pulla1:     Dc.b $22,$5F                                   ;MOVEA.L (A7)+,A1
000211B0 <AmiBlitz3.ab2@4691> srctype:    Ds.w 1
000211B4 <AmiBlitz3.ab2@4696>   BSR.w excget
000211B8 <AmiBlitz3.ab2@4697>   CMP.w #$2C,D0
000211BC <AmiBlitz3.ab2@4698>    BNE.w syntaxerr
000211C2 <AmiBlitz3.ab2@4699>   MOVE.b D2,srctype
000211C8 <AmiBlitz3.ab2@4700>   MOVE.w pusha2,D1
000211CE <AmiBlitz3.ab2@4701>   JSR writeword
000211D2 <AmiBlitz3.ab2@4702>   BSR.w get1bytemain
000211D6 <AmiBlitz3.ab2@4703>   BSR.w excget
000211DC <AmiBlitz3.ab2@4704>   CMP.b srctype,D2
000211E0 <AmiBlitz3.ab2@4705>    BNE.w excerr2
000211E6 <AmiBlitz3.ab2@4706>   MOVE.w pulla1,D1
000211EC <AmiBlitz3.ab2@4707>    JSR writeword
000211F0 <AmiBlitz3.ab2@4708>   CMP.b #$2,D2
000211F4 <AmiBlitz3.ab2@4709>    BCS.w JL_0_4B2A
000211F8 <AmiBlitz3.ab2@4710>    BEQ.w JL_0_4B1E
000211FC <AmiBlitz3.ab2@4711>   LEA swapl(PC),A0
00021200 <AmiBlitz3.ab2@4712>   LEA swaplf(PC),A1
00021206 <AmiBlitz3.ab2@4713> JMP pokecode
0002120A <AmiBlitz3.ab2@4716>   LEA swapw(PC),A0
0002120E <AmiBlitz3.ab2@4717>   LEA swapwf(PC),A1
00021214 <AmiBlitz3.ab2@4718> JMP pokecode
00021218 <AmiBlitz3.ab2@4721>   LEA swapb(PC),A0
0002121C <AmiBlitz3.ab2@4722>   LEA swapbf(PC),A1
00021222 <AmiBlitz3.ab2@4723> JMP pokecode
00021228 <AmiBlitz3.ab2@4727>   JSR getparameter
0002122C <AmiBlitz3.ab2@4728>   BSR.w JL_0_8E3C
00021230 <AmiBlitz3.ab2@4729>   BSR.w calcvar
00021234 <AmiBlitz3.ab2@4730>   BTST #$E,D2
00021238 <AmiBlitz3.ab2@4731>    BEQ.w JL_0_4B4E
0002123C <AmiBlitz3.ab2@4732>   MOVE.b #$4,D2
0002123E <AmiBlitz3.ab2@4735>   TST.b D2
00021242 <AmiBlitz3.ab2@4736>    BEQ.w excerr
00021246 <AmiBlitz3.ab2@4737>   BTST #$F,D2
0002124A <AmiBlitz3.ab2@4738>    BNE.w JL_0_4B6A
00021250 <AmiBlitz3.ab2@4739>   MOVE.w leaamp,D1
00021256 <AmiBlitz3.ab2@4740>    JSR pokewda5s
00021258 <AmiBlitz3.ab2@4741>   MOVE.w D3,D1
0002125E <AmiBlitz3.ab2@4742> JMP writeword
00021260 <AmiBlitz3.ab2@4745> RTS
00021266 <AmiBlitz3.ab2@4751>   MOVE.l mempool,a0
0002126C <AmiBlitz3.ab2@4752>   MOVEA.l _execbase,A6
00021270 <AmiBlitz3.ab2@4753> JMP _AllocPooled(a6)
00021274 <AmiBlitz3.ab2@4760>   MOVE.w #$BF00,D1
0002127A <AmiBlitz3.ab2@4761> JMP Atokejsr
0002127E <AmiBlitz3.ab2@4765>   CMP.w #-$7FFA,D0
00021282 <AmiBlitz3.ab2@4766>    BEQ.w popreturn
00021286 <AmiBlitz3.ab2@4767>   CMP.w #-$7FEA,D0
0002128A <AmiBlitz3.ab2@4768>    BEQ.w popnext2
0002128E <AmiBlitz3.ab2@4769>   CMP.w #-$7FF2,D0
00021292 <AmiBlitz3.ab2@4770>    BEQ.w popselect2
00021296 <AmiBlitz3.ab2@4771>   CMP.w #-$7FF5,D0
0002129A <AmiBlitz3.ab2@4772>    BEQ.w get1bytemain
0002129E <AmiBlitz3.ab2@4773>   CMP.w #-$7FF4,D0
000212A2 <AmiBlitz3.ab2@4774>    BEQ.w get1bytemain
000212A6 <AmiBlitz3.ab2@4775>   CMP.w #-$7FEC,D0
000212AA <AmiBlitz3.ab2@4776>    BEQ.w get1bytemain
000212AE <AmiBlitz3.ab2@4777>   CMP.w #-$7F45,D0
000212B2 <AmiBlitz3.ab2@4778>    BEQ.w get1bytemain
000212B6 <AmiBlitz3.ab2@4779> BRA.w syntaxerr
000212BC <AmiBlitz3.ab2@4782>   TST.b debugmode
000212C0 <AmiBlitz3.ab2@4783>    BEQ.w popreturn__norerr
000212C4 <AmiBlitz3.ab2@4784>   LEA popreturn__rfix(PC),A0
000212C8 <AmiBlitz3.ab2@4785>   LEA popreturn__rfixf(PC),A1
000212CE <AmiBlitz3.ab2@4786>    JSR pokecode
000212D2 <AmiBlitz3.ab2@4787>   MOVE.w #$C305,D1
000212D8 <AmiBlitz3.ab2@4788>    JSR Atokejsr
000212DC <AmiBlitz3.ab2@4789>   MOVE.w popreturn__rfix2(PC),D1
000212E2 <AmiBlitz3.ab2@4791>    JSR writeword
000212E6 <AmiBlitz3.ab2@4792> BRA.w get1bytemain
000212EC <AmiBlitz3.ab2@4796>   CMPI.w #$6753,$4(A7)                                     ;#"gS",4(A7)
000212F0 <AmiBlitz3.ab2@4797>   BEQ.w popreturn__rfix2
000212F6 <AmiBlitz3.ab2@4800>   JSR $20000                                               ;reass
000212F8 <AmiBlitz3.ab2@4803>   ADDQ.w #6,A7
000212FC <AmiBlitz3.ab2@4807>   MOVE.w popreturn__sfix(PC),D1
00021302 <AmiBlitz3.ab2@4808>   JSR writeword
00021306 <AmiBlitz3.ab2@4809> BRA.w get1bytemain
00021308 <AmiBlitz3.ab2@4814>   Dc.b $58,$4F                                             ;ADDQ.W  #4,A7
0002130E <AmiBlitz3.ab2@4819>   MOVE.l firstfor,D0
00021312 <AmiBlitz3.ab2@4820>    BEQ.w noforerr
00021314 <AmiBlitz3.ab2@4821>   MOVEA.l D0,A2
00021318 <AmiBlitz3.ab2@4822>    BSR.w get1bytemain
0002131C <AmiBlitz3.ab2@4823>   BSR.w popnext
00021322 <AmiBlitz3.ab2@4826>   TST.b debugmode
00021326 <AmiBlitz3.ab2@4827>    BEQ.w popnext3__ner
0002132C <AmiBlitz3.ab2@4828>   MOVE.l nextfixw2,D1
00021332 <AmiBlitz3.ab2@4829>   CMPI.w #$3,$C(A2)
00021336 <AmiBlitz3.ab2@4830>    BCS.w writelong2
0002133C <AmiBlitz3.ab2@4831>   MOVE.l nextfixl2,D1
00021342 <AmiBlitz3.ab2@4832> writelong2 JMP  writelong
00021348 <AmiBlitz3.ab2@4835>   CMPI.w #$3,$C(A2)
0002134C <AmiBlitz3.ab2@4836>    BCS.w popnext3__skip2
00021352 <AmiBlitz3.ab2@4837>   MOVE.l nextfixl,D1
00021358 <AmiBlitz3.ab2@4838>   JMP writelong
0002135E <AmiBlitz3.ab2@4841>   MOVE.w nextfixw,D1
00021364 <AmiBlitz3.ab2@4842> JMP writeword
00021368 <AmiBlitz3.ab2@4846>   MOVE.w $C(A2),D0
0002136E <AmiBlitz3.ab2@4847>   TST.b debugmode
00021372 <AmiBlitz3.ab2@4848>    BEQ.w popnext__norunerr
00021376 <AmiBlitz3.ab2@4849>   MOVE.w #$C306,D1
0002137A <AmiBlitz3.ab2@4850>   CMP.w #$3,D0
0002137E <AmiBlitz3.ab2@4851>    BCS.w popnext__oktc
00021380 <AmiBlitz3.ab2@4852>   ADDQ.w #1,D1
00021382 <AmiBlitz3.ab2@4855>   MOVE.l A2,-(A7)
00021388 <AmiBlitz3.ab2@4856>   JSR Atokejsr
0002138A <AmiBlitz3.ab2@4857>   MOVEA.l (A7)+,A2
0002138C <AmiBlitz3.ab2@4860> RTS
00021392 <AmiBlitz3.ab2@4864>   MOVE.l firstsel,D0
00021396 <AmiBlitz3.ab2@4865>    BEQ.w eselerr
00021398 <AmiBlitz3.ab2@4866>   MOVEA.l D0,A2
0002139C <AmiBlitz3.ab2@4867>    BSR.w get1bytemain
000213A0 <AmiBlitz3.ab2@4870>   MOVE.w $C(A2),D2
000213A6 <AmiBlitz3.ab2@4871>   TST.b debugmode
000213AA <AmiBlitz3.ab2@4872>    BEQ.w popselect__norerr
000213AE <AmiBlitz3.ab2@4873>   MOVE.w #$C313,D1
000213B2 <AmiBlitz3.ab2@4874>   CMP.w #$3,D2
000213B6 <AmiBlitz3.ab2@4875>    BCS.w popselect__chkit
000213B8 <AmiBlitz3.ab2@4876>   ADDQ.w #1,D1
000213BE <AmiBlitz3.ab2@4879>   JSR Atokejsr                                             ;make sure next thing on stack
000213C0 <AmiBlitz3.ab2@4883>   MOVEQ.l #$02,D1
000213C4 <AmiBlitz3.ab2@4884>   CMP.w #$3,D2
000213C8 <AmiBlitz3.ab2@4885>    BCS.w popselect__doit
000213CA <AmiBlitz3.ab2@4886>   MOVEQ.l #$04,D1
000213CE <AmiBlitz3.ab2@4887>   CMP.w #$7,D2
000213D2 <AmiBlitz3.ab2@4888>    BCS.w popselect__doit
000213D8 <AmiBlitz3.ab2@4889>   LEA endselstr,A0
000213DE <AmiBlitz3.ab2@4890>   LEA endselstrf,A1
000213E4 <AmiBlitz3.ab2@4891>   TST.b debugmode
000213E8 <AmiBlitz3.ab2@4892>    BEQ.w popselect__norerr3
000213EE <AmiBlitz3.ab2@4893>   LEA endselstrf2,A1
000213F4 <AmiBlitz3.ab2@4896>   JSR pokecode
000213F8 <AmiBlitz3.ab2@4897>   MOVE.w #$C003,D1                                         ;global freemem
000213FE <AmiBlitz3.ab2@4898> JMP Atokejsr
00021404 <AmiBlitz3.ab2@4901>   TST.b debugmode
00021408 <AmiBlitz3.ab2@4902>    BEQ.w popselect__norerr2
0002140A <AmiBlitz3.ab2@4903>   ADDQ.w #2,D1                                             ;for the "sE"
0002140C <AmiBlitz3.ab2@4906>   LSL.w #8,D1
0002140E <AmiBlitz3.ab2@4907>   LSL.w #1,D1
00021414 <AmiBlitz3.ab2@4908>   OR.w endsel,D1
0002141A <AmiBlitz3.ab2@4909> JMP writeword
0002141E <AmiBlitz3.ab2@4912> firstrep:    Ds.l 1
00021422 <AmiBlitz3.ab2@4913> replineat:   Ds.l 1
00021428 <AmiBlitz3.ab2@4922>   CLR.l fp0addr
00021432 <AmiBlitz3.ab2@4923>   MOVE.l linenumat,replineat
00021434 <AmiBlitz3.ab2@4924>   MOVEQ.l #$08,D0
0002143A <AmiBlitz3.ab2@4925>   MOVEA.l _execbase,A6
00021440 <AmiBlitz3.ab2@4926>   MOVE.l mempool,a0
00021444 <AmiBlitz3.ab2@4927>   JSR _AllocPooled(a6)
00021446 <AmiBlitz3.ab2@4929>   MOVEA.l D0,A0
0002144A <AmiBlitz3.ab2@4930>   MOVE.l firstrep(PC),(A0)
00021450 <AmiBlitz3.ab2@4931>   MOVE.l A0,firstrep
00021458 <AmiBlitz3.ab2@4932>   MOVE.l destpointer,$4(A0)
0002145A <AmiBlitz3.ab2@4933> RTS
00021460 <AmiBlitz3.ab2@4936> str_temp:  Ds.w 3                                            ;infochk  ds.b 6 org source
00021464 <AmiBlitz3.ab2@4939>   LEA str_temp(PC),A1
00021466 <AmiBlitz3.ab2@4940>   CLR.w (A1)
0002146A <AmiBlitz3.ab2@4941>   CLR.l $2(A1)
0002146C <AmiBlitz3.ab2@4944>   MOVEQ.l #$04,D0
00021470 <AmiBlitz3.ab2@4947>     MOVE.b $1(A1),(A1)+
00021474 <AmiBlitz3.ab2@4948>   DBF D0,check_for_infoextention__loop
00021478 <AmiBlitz3.ab2@4953>   LEA str_temp(PC),A1
0002147A <AmiBlitz3.ab2@4954>   MOVE.b (A0),D0
0002147E <AmiBlitz3.ab2@4955>   ORI.b #$20,D0
00021482 <AmiBlitz3.ab2@4956>   MOVE.b D0,$5(A1)
00021484 <AmiBlitz3.ab2@4957>   TST.b (A0)+
00021488 <AmiBlitz3.ab2@4958>    BNE.w check_for_infoextention__loop2
0002148C <AmiBlitz3.ab2@4959>   CMPI.w #$2E69,(A1)+                                      ;".i"
00021490 <AmiBlitz3.ab2@4960>    BNE.w check_for_infoextention__no
00021496 <AmiBlitz3.ab2@4961>   CMPI.l #$6E666F20,(A1)                                   ;"nfo "
00021498 <AmiBlitz3.ab2@4964> RTS
0002149C <AmiBlitz3.ab2@4968>   BPL.w gettokeps__evaltoke
0002149E <AmiBlitz3.ab2@4969>   MOVE.w D0,D1
000214A2 <AmiBlitz3.ab2@4970>   ANDI.w #$7F80,D1
000214A6 <AmiBlitz3.ab2@4971>    BEQ.w tokeerr
000214AA <AmiBlitz3.ab2@4972>   BCLR #$F,D0
000214AC <AmiBlitz3.ab2@4973>   MOVE.w D0,D4                                             ;got toke number
000214B0 <AmiBlitz3.ab2@4974>   BSR.w get1bytemain
000214B4 <AmiBlitz3.ab2@4975> BRA.w gettokeps__gotnum
000214BA <AmiBlitz3.ab2@4978>   JSR JL_0_BF6A
000214C0 <AmiBlitz3.ab2@4979>   CMP.l #MaxWord,D3
000214C4 <AmiBlitz3.ab2@4980>    BHI.w tokeerr
000214C6 <AmiBlitz3.ab2@4981>   TST.w D6
000214CA <AmiBlitz3.ab2@4982>    BNE.w tokeerr
000214CC <AmiBlitz3.ab2@4983>   MOVE.w D3,D4
000214CE <AmiBlitz3.ab2@4986>   MOVEQ.l #$00,D5
000214D2 <AmiBlitz3.ab2@4987>   CMP.w #$2C,D0
000214D6 <AmiBlitz3.ab2@4988>    BNE.w gettokeps__gotfrom
000214D8 <AmiBlitz3.ab2@4989>   MOVE.w D4,-(A7)
000214DE <AmiBlitz3.ab2@4990>    JSR AJL_0_BF6E
000214E4 <AmiBlitz3.ab2@4991>   CMP.l #MaxWord,D3
000214E8 <AmiBlitz3.ab2@4992>    BHI.w tokeerr
000214EA <AmiBlitz3.ab2@4993>   TST.w D6
000214EE <AmiBlitz3.ab2@4994>    BNE.w tokeerr
000214F0 <AmiBlitz3.ab2@4995>   MOVE.w D3,D5
000214F2 <AmiBlitz3.ab2@4996>   MOVE.w (A7)+,D4
000214F4 <AmiBlitz3.ab2@4999> RTS                                                        ;d4=toke, d5=form
000214F6 <AmiBlitz3.ab2@5003>   TST.w D0
000214FA <AmiBlitz3.ab2@5004>    BSR.w gettokeps
000214FE <AmiBlitz3.ab2@5005>   MOVE.w #$4EB9,D1
00021504 <AmiBlitz3.ab2@5006>   JSR writeword
00021508 <AmiBlitz3.ab2@5007>   BSR.w addoff
0002150A <AmiBlitz3.ab2@5008>   MOVE.w D5,D1
0002150E <AmiBlitz3.ab2@5009>   ORI.w #$8000,D1                                          ;Toke of Amiga type.
00021510 <AmiBlitz3.ab2@5010>   SWAP D1
00021512 <AmiBlitz3.ab2@5011>   MOVE.w D4,D1
00021518 <AmiBlitz3.ab2@5012> JMP writelong
0002151A <AmiBlitz3.ab2@5016>   TST.w D0
0002151E <AmiBlitz3.ab2@5017>    BSR.w gettokeps
00021522 <AmiBlitz3.ab2@5018>   MOVE.w #$4EB9,D1
00021528 <AmiBlitz3.ab2@5019>   JSR writeword
0002152C <AmiBlitz3.ab2@5020>   BSR.w addoff
0002152E <AmiBlitz3.ab2@5021>   MOVE.w D5,D1
00021532 <AmiBlitz3.ab2@5022>   ORI.w #$C000,D1                                          ;Toke of Blitz type.
00021534 <AmiBlitz3.ab2@5023>   SWAP D1
00021536 <AmiBlitz3.ab2@5024>   MOVE.w D4,D1
0002153C <AmiBlitz3.ab2@5025>   JMP writelong
00021542 <AmiBlitz3.ab2@5029>   JSR JL_0_BF6A
00021548 <AmiBlitz3.ab2@5030>   CMP.l #$10000,D3
0002154C <AmiBlitz3.ab2@5031>    BCC.w tokeerr
0002154E <AmiBlitz3.ab2@5032>   MOVE.w D3,D1
00021554 <AmiBlitz3.ab2@5033> JMP Atokejsr
00021558 <AmiBlitz3.ab2@5037>   BSR.w gettokeps
0002155C <AmiBlitz3.ab2@5038>   MOVE.w #$4EB9,D1
00021562 <AmiBlitz3.ab2@5039>   JSR writeword
00021568 <AmiBlitz3.ab2@5040>   MOVE.l destpointer,D3
00021570 <AmiBlitz3.ab2@5041>   BTST #$7,blitzmode
00021574 <AmiBlitz3.ab2@5042>    BEQ.w do_TokeJsr__inamiga
00021578 <AmiBlitz3.ab2@5043>   BSET #$E,D5
0002157C <AmiBlitz3.ab2@5046>   BSR.w JL_0_6E86
00021580 <AmiBlitz3.ab2@5047>   BSR.w addoff
00021586 <AmiBlitz3.ab2@5048>   JMP writelong
0002158A <AmiBlitz3.ab2@5052>   BEQ.w do_VWait__zero
0002158C <AmiBlitz3.ab2@5053>   MOVEQ.l #$02,D2                                          ;get a word
00021592 <AmiBlitz3.ab2@5055>   JSR bakeval
00021596 <AmiBlitz3.ab2@5056>   MOVE.w fvwait(PC),D1
0002159A <AmiBlitz3.ab2@5057> BRA.w do_VWait__vcont
0002159E <AmiBlitz3.ab2@5060>   MOVE.w #$7000,D1                                         ;moveq #0,d0
000215A4 <AmiBlitz3.ab2@5063>   JSR writeword
000215A8 <AmiBlitz3.ab2@5064>   MOVE.w #$C104,D1
000215AE <AmiBlitz3.ab2@5065> JMP Atokejsr
000215B0 <AmiBlitz3.ab2@5069>   SUBQ.w #1,D0
000215B6 <AmiBlitz3.ab2@5072>   Dc.w $3b7c,$ffff,0                                       ;move.w #$FFFF,$0(A5) ;noopt
000215BA <AmiBlitz3.ab2@5075>   Dc.l $426d0001                                           ;clr.w $0(A5)
000215BE <AmiBlitz3.ab2@5079>   MOVE.b debugmode(PC),D1
000215C2 <AmiBlitz3.ab2@5080>   BEQ.b debugmode_codelabel__skip
000215C6 <AmiBlitz3.ab2@5081>   MOVE.w #$D500,D1
000215CC <AmiBlitz3.ab2@5082> JMP Atokejsr
000215CE <AmiBlitz3.ab2@5085> RTS
000215D6 <AmiBlitz3.ab2@5089>   BSET #$0,blitzmode
000215DE <AmiBlitz3.ab2@5090>   BSET #$7,blitzmode
000215E2 <AmiBlitz3.ab2@5091>   MOVE.w #$C200,D1
000215E8 <AmiBlitz3.ab2@5092>   JSR Atokejsr
000215EE <AmiBlitz3.ab2@5093>   TST.b debugmode
000215F2 <AmiBlitz3.ab2@5094>    BEQ.w do_BLITZ__done
000215F6 <AmiBlitz3.ab2@5095>   MOVE.w cgoblitz(PC),D1
000215FC <AmiBlitz3.ab2@5096>   JSR writeword
000215FE <AmiBlitz3.ab2@5097>   MOVEQ.l #-$01,D1
00021604 <AmiBlitz3.ab2@5098>   JSR writeword
0002160A <AmiBlitz3.ab2@5099>   JSR getbbase
00021610 <AmiBlitz3.ab2@5100>   JSR writeword
00021614 <AmiBlitz3.ab2@5103> BRA.w debugmode_codelabel
00021618 <AmiBlitz3.ab2@5107>   MOVE.w #$C201,D1
0002161C <AmiBlitz3.ab2@5108> BRA.w do_AMIGA__toamode
00021620 <AmiBlitz3.ab2@5112>   MOVE.W  #$C202,D1
00021628 <AmiBlitz3.ab2@5115>   BSET #$0,blitzmode
00021630 <AmiBlitz3.ab2@5116>   BCLR #$7,blitzmode
00021636 <AmiBlitz3.ab2@5117>   JSR Atokejsr
0002163C <AmiBlitz3.ab2@5118>   TST.b debugmode
00021640 <AmiBlitz3.ab2@5119>    BEQ.w do_AMIGA__done
00021644 <AmiBlitz3.ab2@5120>   MOVE.w cgoamiga(PC),D1
0002164A <AmiBlitz3.ab2@5121>   JSR writeword
00021650 <AmiBlitz3.ab2@5122>   JSR getbbase
00021656 <AmiBlitz3.ab2@5123>   JSR writeword
0002165A <AmiBlitz3.ab2@5126> BRA.w debugmode_codelabel
0002165E <AmiBlitz3.ab2@5130>   MOVEM.l D2-D7/A2-A4,-(A7)
00021662 <AmiBlitz3.ab2@5133>   MOVEM.l (A7)+,D2-D7/A2-A4
00021668 <AmiBlitz3.ab2@5137>   JSR JL_0_BF6A
0002166E <AmiBlitz3.ab2@5138>   CMP.l #$E,D3
00021672 <AmiBlitz3.ab2@5139>    BCC.w interr4
00021676 <AmiBlitz3.ab2@5140>   MOVE.w #$7000,D1
00021678 <AmiBlitz3.ab2@5141>   OR.w D3,D1
0002167E <AmiBlitz3.ab2@5142>   JSR writeword
00021682 <AmiBlitz3.ab2@5143>   MOVE.w #$C101,D1
00021688 <AmiBlitz3.ab2@5144> JMP Atokejsr                                               ;clear the interupt
0002168A <AmiBlitz3.ab2@5147> inerr:       Ds.w 1                                        ;flag - in error trap mode
0002168E <AmiBlitz3.ab2@5148> errjmp:      Ds.l 1                                        ;where err jump is
00021692 <AmiBlitz3.ab2@5149> errcode:     Ds.l 1
00021696 <AmiBlitz3.ab2@5153>   MOVE.W  #$D202,D1
0002169C <AmiBlitz3.ab2@5154> JMP Atokejsr                                               ;BRA.W Atokejsr
000216A0 <AmiBlitz3.ab2@5158>   MOVE.w inerr(PC),D1
000216A4 <AmiBlitz3.ab2@5159>    BEQ.w errerr3
000216AA <AmiBlitz3.ab2@5160>   CLR.w inerr
000216B0 <AmiBlitz3.ab2@5161>   MOVE.w dontwrite,D1
000216B4 <AmiBlitz3.ab2@5162>    BNE.w doendseterr__skip
000216B8 <AmiBlitz3.ab2@5163>   MOVEA.l errjmp(PC),A0
000216BE <AmiBlitz3.ab2@5164>   MOVE.l destpointer,(A0)
000216C2 <AmiBlitz3.ab2@5167> BRA.w get1bytemain
000216C6 <AmiBlitz3.ab2@5171>   MOVE.w #$D205,D1
000216CC <AmiBlitz3.ab2@5172> JMP Atokejsr
000216D2 <AmiBlitz3.ab2@5176>   MOVE.w proceduremode,D1
000216D6 <AmiBlitz3.ab2@5177>    BNE.w errerr1
000216DA <AmiBlitz3.ab2@5178>   MOVE.w inerr(PC),D1
000216DE <AmiBlitz3.ab2@5179>    BNE.w errerr2
000216E4 <AmiBlitz3.ab2@5180>   LEA inerr,a0
000216E6 <AmiBlitz3.ab2@5181>   NOT.w (a0)                                               ;reass
000216EA <AmiBlitz3.ab2@5182>   MOVE.w #$203C,D1                                         ;move.l #x,d0
000216F0 <AmiBlitz3.ab2@5183>   JSR writeword
000216FA <AmiBlitz3.ab2@5184>   MOVE.l destpointer,errcode
000216FE <AmiBlitz3.ab2@5185>   BSR.w addoff
00021702 <AmiBlitz3.ab2@5186>   BSR.w writelong
00021706 <AmiBlitz3.ab2@5187>   MOVE.w #$D201,D1
0002170C <AmiBlitz3.ab2@5188>   JSR Atokejsr
00021710 <AmiBlitz3.ab2@5189>   MOVE.w #$4EF9,D1                                         ;JMP
00021714 <AmiBlitz3.ab2@5190>   BSR.w writeword
0002171E <AmiBlitz3.ab2@5191>   MOVE.l destpointer,errjmp
00021722 <AmiBlitz3.ab2@5192>   BSR.w addoff
00021726 <AmiBlitz3.ab2@5193>   BSR.w writelong
0002172C <AmiBlitz3.ab2@5194>   MOVE.w dontwrite,D1
00021730 <AmiBlitz3.ab2@5195>    BNE.w do_SetErr__skip
00021734 <AmiBlitz3.ab2@5196>   MOVEA.l errcode(PC),A0
0002173A <AmiBlitz3.ab2@5197>   MOVE.l destpointer,(A0)
0002173C <AmiBlitz3.ab2@5200> RTS
00021740 <AmiBlitz3.ab2@5203> intlineat:  Ds.l 1
00021742 <AmiBlitz3.ab2@5207>   MOVEQ.l #-$01,D1                                        ;type - need new string space
00021746 <AmiBlitz3.ab2@5208>   BSR.w errchx
0002174C <AmiBlitz3.ab2@5209>   MOVE.w D1,intstring
00021756 <AmiBlitz3.ab2@5210>   MOVE.l linenumat,intlineat
0002175C <AmiBlitz3.ab2@5211>   JSR JL_0_BF6A                                           ;get constant - int level
00021762 <AmiBlitz3.ab2@5212>   CMP.l #$E,D3
00021766 <AmiBlitz3.ab2@5213>    BCC.w interr4
0002176C <AmiBlitz3.ab2@5214>   ST intsused
00021772 <AmiBlitz3.ab2@5215>   MOVE.w D3,intlevel
00021776 <AmiBlitz3.ab2@5216>   MOVE.w #$7000,D1
00021778 <AmiBlitz3.ab2@5217>   OR.w D3,D1                                              
0002177C <AmiBlitz3.ab2@5218>   BSR.w writeword                                         ;moveq #x,d0
00021780 <AmiBlitz3.ab2@5219>   MOVE.w #$223C,D1                                        ;move.l #x,d1
00021784 <AmiBlitz3.ab2@5220>   BSR.w writeword
00021788 <AmiBlitz3.ab2@5221>   BSR.w addoff
0002178E <AmiBlitz3.ab2@5222>   MOVE.l destpointer,-(A7)
00021792 <AmiBlitz3.ab2@5223>   BSR.w writelong
00021796 <AmiBlitz3.ab2@5224>   MOVE.w #$C100,D1
0002179C <AmiBlitz3.ab2@5225>   JSR Atokejsr
000217A0 <AmiBlitz3.ab2@5226>   MOVE.w #$4EF9,D1                                        ;jmp
000217A4 <AmiBlitz3.ab2@5227>   BSR.w writeword
000217A8 <AmiBlitz3.ab2@5228>   BSR.w addoff
000217B2 <AmiBlitz3.ab2@5229>   MOVE.l destpointer,intjmpat
000217B6 <AmiBlitz3.ab2@5230>   BSR.w writelong
000217B8 <AmiBlitz3.ab2@5231>   MOVEA.l (A7)+,A0
000217BE <AmiBlitz3.ab2@5232>   MOVE.w dontwrite,D1
000217C2 <AmiBlitz3.ab2@5233>   BNE.w do_SetInt__dontpoke
000217C8 <AmiBlitz3.ab2@5234>   MOVE.l destpointer,(A0)
000217CC <AmiBlitz3.ab2@5237>   MOVE.l intstart0(PC),D1
000217D0 <AmiBlitz3.ab2@5238>   BSR.w writelong
000217D6 <AmiBlitz3.ab2@5239>   TST.b debugmode
000217DA <AmiBlitz3.ab2@5240>    BEQ.w do_SetInt__norerr
000217DC <AmiBlitz3.ab2@5244>   MOVEQ.l #$02,D1
000217E0 <AmiBlitz3.ab2@5245>   BSR.w writetrap
000217E4 <AmiBlitz3.ab2@5246>   BSR.w addoff
000217EE <AmiBlitz3.ab2@5247>   MOVE.l destpointer,intcleanat
000217F2 <AmiBlitz3.ab2@5248>   BSR.w writelong
000217F8 <AmiBlitz3.ab2@5249>   MOVE.w intlevel,D1
000217FC <AmiBlitz3.ab2@5250>   BSR.w writeword
00021800 <AmiBlitz3.ab2@5251>   MOVE.w #$C30B,D1                                         ;disable stack checks
00021806 <AmiBlitz3.ab2@5252>   JSR Atokejsr
0002180A <AmiBlitz3.ab2@5255>   MOVE.w #$FED3,D1
0002180E <AmiBlitz3.ab2@5256>   BSR.w uselib
00021812 <AmiBlitz3.ab2@5257>   MOVE.w #$C102,D1
00021818 <AmiBlitz3.ab2@5258>   JSR Atokejsr
00021820 <AmiBlitz3.ab2@5259>   MOVE.w #-1,lasta6
0002182A <AmiBlitz3.ab2@5260>   MOVE.l linenumat,intline
0002182C <AmiBlitz3.ab2@5261> RTS
0002182E <AmiBlitz3.ab2@5265>             Ds.w 1                                         ;??looks like obsolved data??
00021832 <AmiBlitz3.ab2@5267> intdata1:   Ds.l 1                                         ;where in data1 a5 is being kept
00021836 <AmiBlitz3.ab2@5269> intjmpat:   Ds.l 1
0002183A <AmiBlitz3.ab2@5270> intline:    Ds.l 1
0002183C <AmiBlitz3.ab2@5271> intstring:  Ds.w 1                                         ;flag 0 = no setint
0002183E <AmiBlitz3.ab2@5274> intlevel:   Ds.w 1
00021842 <AmiBlitz3.ab2@5275> intcleanat: Ds.l 1
00021846 <AmiBlitz3.ab2@5276> ret15add:   Ds.l 1
00021848 <AmiBlitz3.ab2@5277> ret15cc:    Ds.w 1
00021850 <AmiBlitz3.ab2@5281>   ADDI.l #$12,$2(A7)
00021858 <AmiBlitz3.ab2@5282>   MOVE.l $2(A7),ret15add
0002185E <AmiBlitz3.ab2@5283>   MOVE.w (A7),ret15cc
00021866 <AmiBlitz3.ab2@5284>   MOVE.l #directdo,$2(A7)
00021868 <AmiBlitz3.ab2@5285> RTE
0002186C <AmiBlitz3.ab2@5294>   MOVE.l ret15add(PC),-(A7)
00021870 <AmiBlitz3.ab2@5295>   MOVE.w ret15cc(PC),-(A7)                                 ;15*4
00021874 <AmiBlitz3.ab2@5296>   MOVEM.l D0-D7/A0-A6,-(A7)
0002187E <AmiBlitz3.ab2@5297>   MOVE.l destbufferend,trap15temp                          ;store high buff addr
00021888 <AmiBlitz3.ab2@5298>   MOVE.l destbufferstart,trap15temp2
00021892 <AmiBlitz3.ab2@5299>   MOVE.l libend,templibend
0002189C <AmiBlitz3.ab2@5300>   MOVE.l data1start,tempdata1start
000218A2 <AmiBlitz3.ab2@5301>   CLR.l hunkoffsetcounter
000218A8 <AmiBlitz3.ab2@5303>   MOVE.l directbuffer,a0
000218AE <AmiBlitz3.ab2@5307>   MOVE.l a0,destbufferstart
000218B4 <AmiBlitz3.ab2@5308>   ADD.l #3900,a0
000218BA <AmiBlitz3.ab2@5309>   MOVE.l a0,destbufferend
000218C0 <AmiBlitz3.ab2@5310>   TST.b exdebug
000218C4 <AmiBlitz3.ab2@5311>   BEQ 'l1
000218CA <AmiBlitz3.ab2@5312>   MOVE.l a0,libend
000218D0 <AmiBlitz3.ab2@5313>   ADD.l #4000,a0
000218D6 <AmiBlitz3.ab2@5314>   MOVE.l a0,data1start
000218E0 <AmiBlitz3.ab2@5317>   MOVE.l #dircont,errcont
000218E6 <AmiBlitz3.ab2@5318>   MOVE.l A7,errstack
000218EE <AmiBlitz3.ab2@5319>   MOVE.w #$FFFF,dirmode
000218F2 <AmiBlitz3.ab2@5321>     MOVEA.l ret15add(PC),A1
000218F8 <AmiBlitz3.ab2@5322>     MOVE.w -(A1),blitzmode
000218FA <AmiBlitz3.ab2@5323>     CLR.l -(A1)
00021900 <AmiBlitz3.ab2@5324>     MOVE.l -(A1),firstglob
00021906 <AmiBlitz3.ab2@5325>     MOVE.l -(A1),firstlocal
0002190C <AmiBlitz3.ab2@5327>   CLR.w proceduremode
00021912 <AmiBlitz3.ab2@5328>   MOVE.l firstglob,D0
00021918 <AmiBlitz3.ab2@5329>   OR.l firstlocal,D0
0002191C <AmiBlitz3.ab2@5330>   BEQ.b directdo__skip
00021922 <AmiBlitz3.ab2@5331>   NOT.w proceduremode
00021924 <AmiBlitz3.ab2@5334>   MOVEA.l -(A1),A0                                         ;address of string
00021926 <AmiBlitz3.ab2@5338>   MOVE.l A0,-(A7)
00021964 <AmiBlitz3.ab2@5341>   !ComData_GetL{comFunc_DebugTrap,A1}
00021966 <AmiBlitz3.ab2@5344>   JSR (A1)                                                 ;tokenise line.....
00021968 <AmiBlitz3.ab2@5345>   MOVEA.l (A7)+,A5
00021972 <AmiBlitz3.ab2@5346>   MOVE.l directbuffer,destpointer
00021978 <AmiBlitz3.ab2@5347>   TST.b exdebug
0002197C <AmiBlitz3.ab2@5348>   BEQ 'noexdebug
0002197E <AmiBlitz3.ab2@5349>   MOVE.l a5,a0
00021984 <AmiBlitz3.ab2@5350>   MOVE.l #200,d0
0002198A <AmiBlitz3.ab2@5353>     MOVE.b 0(a0,d0.l),8(a0,d0.l)
0002198E <AmiBlitz3.ab2@5354>   DBF d0,'l1
00021994 <AmiBlitz3.ab2@5359>   MOVE.l destpointer,a0
00021998 <AmiBlitz3.ab2@5360>   MOVE.w #$207c,(a0)+
0002199A <AmiBlitz3.ab2@5361>   MOVE.l a5,d0
000219A0 <AmiBlitz3.ab2@5362>   ADD.l #$206,d0                                           ;constant from debuglib
000219A2 <AmiBlitz3.ab2@5363>   MOVE.l d0,(a0)+
000219A8 <AmiBlitz3.ab2@5364>   MOVE.l a0,destpointer
000219AA <AmiBlitz3.ab2@5365>   MOVE.l a5,a0
000219AE <AmiBlitz3.ab2@5366>   MOVE.w #$8039,(a0)+                                      ;TokeJsr 164 (inputoutputlib) LSL 7+4
000219B4 <AmiBlitz3.ab2@5367>   MOVE.l #"$520",(a0)+
000219B8 <AmiBlitz3.ab2@5368>   MOVE.w #"4:",(a0)+
000219BE <AmiBlitz3.ab2@5371>   CLR.w dontwrite
000219C6 <AmiBlitz3.ab2@5372>   MOVE.w #$FFFF,lasta6
000219CA <AmiBlitz3.ab2@5373>   BSR.w compile_line                                        ;.....compile it
000219D0 <AmiBlitz3.ab2@5374>   TST.b exdebug
000219D4 <AmiBlitz3.ab2@5375>   BEQ 'noexdebug2
000219DA <AmiBlitz3.ab2@5376>   JSR JL_0_6C76
000219E0 <AmiBlitz3.ab2@5379>   CLR.w proceduremode
000219E4 <AmiBlitz3.ab2@5380>   BSR.w errchx
000219E8 <AmiBlitz3.ab2@5381>   MOVE.w #$4EF9,D1
000219EC <AmiBlitz3.ab2@5382>   BSR.w writeword                                          ;JMP
000219F0 <AmiBlitz3.ab2@5383>   MOVE.l ret15add(PC),D1
000219F4 <AmiBlitz3.ab2@5384>   BSR.w writelong                                          ;jmp to done
000219FA <AmiBlitz3.ab2@5385>   MOVE.w dontwrite,D0
000219FE <AmiBlitz3.ab2@5386>    BNE.w nodirmem
00021A06 <AmiBlitz3.ab2@5387>   MOVE.l directbuffer,$3E(A7)                              ;install code address
00021A0C <AmiBlitz3.ab2@5390>   CLR.w dirmode
00021A12 <AmiBlitz3.ab2@5391>   MOVE.w ret15cc(PC),$3C(A7)
00021A1C <AmiBlitz3.ab2@5392>   MOVE.l trap15temp,destbufferend
00021A26 <AmiBlitz3.ab2@5393>   MOVE.l trap15temp2,destbufferstart
00021A30 <AmiBlitz3.ab2@5394>   MOVE.l tempdata1start,data1start
00021A3A <AmiBlitz3.ab2@5395>   MOVE.l templibend,libend
00021A3E <AmiBlitz3.ab2@5396>   MOVEM.l (A7)+,D0-D7/A0-A6
00021A42 <AmiBlitz3.ab2@5397>   BSR.w Aclearcache                                        ;selden used
00021A44 <AmiBlitz3.ab2@5398> RTR
00021A48 <AmiBlitz3.ab2@5401>   MOVEA.l ret15add(PC),A0
00021A4A <AmiBlitz3.ab2@5402>   SUBQ.w #2,A0
00021A4C <AmiBlitz3.ab2@5403>   MOVE.l D0,-(A0)
00021A50 <AmiBlitz3.ab2@5404> BRA.w direxit
00021A54 <AmiBlitz3.ab2@5408>   MOVE.w $6(A3),D1
00021A58 <AmiBlitz3.ab2@5409>   BSR.w uselib                                             ;get lib for base address
00021A5C <AmiBlitz3.ab2@5410>   MOVE.w $A(A1),-(A7)                                      ;libbase reg
00021A5E <AmiBlitz3.ab2@5411>   ADDQ.w #8,A3
00021A60 <AmiBlitz3.ab2@5412>   MOVE.w (A3)+,-(A7)                                       ;get offset for lib
00021A62 <AmiBlitz3.ab2@5413>   MOVE.l A3,-(A7)
00021A64 <AmiBlitz3.ab2@5417>   MOVEQ.l #$00,D3
00021A6A <AmiBlitz3.ab2@5418>   JSR checka4a5
00021A6C <AmiBlitz3.ab2@5420>   MOVE.b (A3)+,D1
00021A70 <AmiBlitz3.ab2@5421>    BMI.w stamigalib__done
00021A72 <AmiBlitz3.ab2@5422>   MOVEQ.l #$03,D2
00021A74 <AmiBlitz3.ab2@5423>   ADDQ.w #1,D3
00021A78 <AmiBlitz3.ab2@5424>   MOVEM.l D3/A3,-(A7)
00021A7E <AmiBlitz3.ab2@5425>   MOVE.b funcparloop,-(a7)
00021A86 <AmiBlitz3.ab2@5426>   MOVE.b #0,funcparloop
00021A8C <AmiBlitz3.ab2@5427>   MOVE.l leftsidetype,-(a7)
00021A92 <AmiBlitz3.ab2@5428>   MOVE.l rightsidetype,-(a7)
00021A98 <AmiBlitz3.ab2@5429>   CLR.l leftsidetype
00021A9E <AmiBlitz3.ab2@5430>   CLR.l rightsidetype
00021AA4 <AmiBlitz3.ab2@5431>   MOVE.b blitzparloop,-(a7)
00021AAC <AmiBlitz3.ab2@5432>   MOVE.b #1,blitzparloop                                 ;write the parameter to stack
00021AB2 <AmiBlitz3.ab2@5433>   JSR peval
00021AB8 <AmiBlitz3.ab2@5434>   MOVE.b (a7)+,blitzparloop
00021ABE <AmiBlitz3.ab2@5435>   MOVE.l (a7)+,rightsidetype
00021AC4 <AmiBlitz3.ab2@5436>   MOVE.l (a7)+,leftsidetype
00021ACA <AmiBlitz3.ab2@5437>   MOVE.b (a7)+,funcparloop
00021ACE <AmiBlitz3.ab2@5438>   MOVEM.l (A7)+,D3/A3
00021AD2 <AmiBlitz3.ab2@5439>   CMP.w #$2C,D0
00021AD6 <AmiBlitz3.ab2@5440>    BEQ.w stamigalib__loop
00021AD8 <AmiBlitz3.ab2@5441>   TST.b (A3)
00021ADC <AmiBlitz3.ab2@5442>    BPL.w syntaxerr
00021ADE <AmiBlitz3.ab2@5445>   MOVEA.l (A7)+,A3
00021AE0 <AmiBlitz3.ab2@5446>   SUBQ.w #1,D3
00021AE4 <AmiBlitz3.ab2@5447>    BPL.w stamigalib__toend
00021AE8 <AmiBlitz3.ab2@5448>    BSR.w get1bytemain                                      ;no pars - get :
00021AEC <AmiBlitz3.ab2@5449> BRA.w stamigalib__nopars
00021AEE <AmiBlitz3.ab2@5452>   TST.b (A3)+                                              ;go to end of params
00021AF2 <AmiBlitz3.ab2@5453>    BPL.w stamigalib__toend
00021AF4 <AmiBlitz3.ab2@5454>   SUBQ.w #1,A3
00021AF6 <AmiBlitz3.ab2@5457>    MOVEQ.l #$00,D1
00021AF8 <AmiBlitz3.ab2@5458>    MOVE.b -(A3),D1
00021AFC <AmiBlitz3.ab2@5459>    BTST #$4,D1
00021B00 <AmiBlitz3.ab2@5460>     BNE.w stamigalib__addreg
00021B02 <AmiBlitz3.ab2@5461>    LSL.w #8,D1
00021B04 <AmiBlitz3.ab2@5462>    LSL.w #1,D1
00021B08 <AmiBlitz3.ab2@5463>    ORI.w #$201F,D1
00021B0C <AmiBlitz3.ab2@5464>  BRA.w stamigalib__gotit
00021B10 <AmiBlitz3.ab2@5467>    ANDI.w #$7,D1
00021B12 <AmiBlitz3.ab2@5468>    LSL.w #8,D1
00021B14 <AmiBlitz3.ab2@5469>    LSL.w #1,D1
00021B18 <AmiBlitz3.ab2@5470>    ORI.w #$205F,D1
00021B1C <AmiBlitz3.ab2@5473>     BSR.w writeword
00021B20 <AmiBlitz3.ab2@5474>   DBF D3,stamigalib__loop2
00021B26 <AmiBlitz3.ab2@5477>   MOVE.w (A7)+,libjsr+2
00021B2C <AmiBlitz3.ab2@5478>   MOVE.w (A7)+,libbase+2
00021B32 <AmiBlitz3.ab2@5479>   MOVE.l libbase,D1
00021B36 <AmiBlitz3.ab2@5480>    BSR.w writelong
00021B3C <AmiBlitz3.ab2@5481>   MOVE.l libjsr,D1
00021B42 <AmiBlitz3.ab2@5482>   JSR writelong
00021B48 <AmiBlitz3.ab2@5483>   JSR restorea4a5
00021B4A <AmiBlitz3.ab2@5484>   RTS
00021B50 <AmiBlitz3.ab2@5487>   MOVE.l data1,D4
00021B56 <AmiBlitz3.ab2@5488>   SUB.l data1start,D4
00021B5C <AmiBlitz3.ab2@5489>   ADD.l #10000,d4
00021B62 <AmiBlitz3.ab2@5490>   MOVE.l libend,D3
00021B68 <AmiBlitz3.ab2@5491>   SUB.l destbufferend,D3
00021B6E <AmiBlitz3.ab2@5492>   ADD.l #40000,d3
00021B74 <AmiBlitz3.ab2@5493>   MOVE.l bigpc,D2
00021B7A <AmiBlitz3.ab2@5494>   SUB.l destbufferstart,D2
00021B80 <AmiBlitz3.ab2@5495>   ADD.l #20000,d2
00021B86 <AmiBlitz3.ab2@5496>   MOVE.l databuffer,D5
00021B8C <AmiBlitz3.ab2@5497>   ADD.l #10000,D5
00021B90 <AmiBlitz3.ab2@5498> BRA newallox
00021B96 <AmiBlitz3.ab2@5502>   MOVE.l objectbuffer,D2
00021B98 <AmiBlitz3.ab2@5503>   LSR.l #1,D2
00021B9E <AmiBlitz3.ab2@5504>   ADD.l objectbuffer,D2
00021BA4 <AmiBlitz3.ab2@5505>   MOVE.l libsbuffer,D3
00021BA6 <AmiBlitz3.ab2@5506>   LSR.l #1,D3
00021BAC <AmiBlitz3.ab2@5507>   ADD.l libsbuffer,D3
00021BB2 <AmiBlitz3.ab2@5508>   MOVE.l systembuffer,D4
00021BB4 <AmiBlitz3.ab2@5509>   LSR.l #1,D4
00021BBA <AmiBlitz3.ab2@5510>   ADD.l systembuffer,D4
00021BC0 <AmiBlitz3.ab2@5511>   MOVE.l databuffer,D5
00021BC2 <AmiBlitz3.ab2@5512>   LSR.l #1,D5
00021BC8 <AmiBlitz3.ab2@5513>   ADD.l databuffer,D5
00021BCC <AmiBlitz3.ab2@5514> BRA.w newallox
00021BD2 <AmiBlitz3.ab2@5518>   MOVE.l bigpc,D2
00021BD8 <AmiBlitz3.ab2@5519>   SUB.l destbufferstart,D2                                     ;size of object buffer
00021BDE <AmiBlitz3.ab2@5520>   SUB.l savefuncspace,d2
00021BE4 <AmiBlitz3.ab2@5522>   TST.w debugversion
00021BE8 <AmiBlitz3.ab2@5523>    BNE.b alloxadj__skip
00021BEE <AmiBlitz3.ab2@5524>   ADDI.l #$800,D2
00021BF4 <AmiBlitz3.ab2@5527>   MOVE.l libend,D3
00021BFA <AmiBlitz3.ab2@5528>   SUB.l destbufferend,D3
00021C00 <AmiBlitz3.ab2@5530>   MOVE.l data1,D4
00021C06 <AmiBlitz3.ab2@5531>   SUB.l data1start,D4
00021C0C <AmiBlitz3.ab2@5533>   MOVE.l data2,D5
00021C12 <AmiBlitz3.ab2@5534>   SUB.l data2at,D5
00021C18 <AmiBlitz3.ab2@5536>   CLR.l morememadd
00021C1C <AmiBlitz3.ab2@5539>   BSR.w makeallox
00021C20 <AmiBlitz3.ab2@5540>   BNE.w newallox__done
00021C24 <AmiBlitz3.ab2@5541> BRA.w init_buffers
00021C26 <AmiBlitz3.ab2@5544> RTS
00021C2C <AmiBlitz3.ab2@5548>   MOVEA.l _execbase,A6
00021C32 <AmiBlitz3.ab2@5549>   MOVE.l objlen,D0
00021C36 <AmiBlitz3.ab2@5550>   BEQ.w freeallox__skip
00021C3C <AmiBlitz3.ab2@5551>   CLR.l objlen
00021C42 <AmiBlitz3.ab2@5552>   MOVEA.l destbufferstart,A1
00021C48 <AmiBlitz3.ab2@5553>   MOVE.l mempool,a0
00021C4C <AmiBlitz3.ab2@5554> JMP _FreeVec(A6)
00021C4E <AmiBlitz3.ab2@5557> RTS
00021C54 <AmiBlitz3.ab2@5561>   MOVE.l objectbuffer,D2
00021C5A <AmiBlitz3.ab2@5562>   MOVE.l libsbuffer,D3
00021C60 <AmiBlitz3.ab2@5563>   MOVE.l systembuffer,D4
00021C66 <AmiBlitz3.ab2@5564>   MOVE.l databuffer,D5
00021C6E <AmiBlitz3.ab2@5567>   MOVE.w #$FFFF,anyerrs
00021C72 <AmiBlitz3.ab2@5568>   BSR.w freeallox
00021C74 <AmiBlitz3.ab2@5572>   ADDQ.l #1,D2
00021C78 <AmiBlitz3.ab2@5573>   BCLR #$0,D2
00021C7A <AmiBlitz3.ab2@5574>   ADDQ.l #1,D3
00021C7E <AmiBlitz3.ab2@5575>   BCLR #$0,D3
00021C80 <AmiBlitz3.ab2@5576>   ADDQ.l #1,D4
00021C84 <AmiBlitz3.ab2@5577>   BCLR #$0,D4
00021C86 <AmiBlitz3.ab2@5578>   TST.l d5
00021C8A <AmiBlitz3.ab2@5579>   BNE 'l1
00021C8C <AmiBlitz3.ab2@5582>   ADDQ.l #1,D5
00021C90 <AmiBlitz3.ab2@5583>   BCLR #$0,D5
00021C92 <AmiBlitz3.ab2@5584>   MOVE.l D2,D0
00021C94 <AmiBlitz3.ab2@5585>   ADD.l D3,D0
00021C96 <AmiBlitz3.ab2@5586>   ADD.l D4,D0
00021C98 <AmiBlitz3.ab2@5587>   ADD.l D5,D0
00021C9E <AmiBlitz3.ab2@5588>   ADD.l #moremem,d0
00021CA0 <AmiBlitz3.ab2@5589>   MOVE.l D0,D6
00021CA6 <AmiBlitz3.ab2@5590>   MOVE.l #MemfPublic_MemfClear,D1
00021CAC <AmiBlitz3.ab2@5591>   MOVE.l mempool,a0
00021CB2 <AmiBlitz3.ab2@5592>   MOVEA.l _execbase,A6
00021CB6 <AmiBlitz3.ab2@5593>   JSR _AllocVec(a6)                                        ;alloc mem for objectbuffer
00021CB8 <AmiBlitz3.ab2@5595>   TST.l D0
00021CBC <AmiBlitz3.ab2@5596>   BEQ.w exit_initbuffers
00021CC2 <AmiBlitz3.ab2@5597>   MOVE.l D6,objlen
00021CC8 <AmiBlitz3.ab2@5598>   MOVE.l D2,objectbuffer
00021CCE <AmiBlitz3.ab2@5599>   MOVE.l D3,libsbuffer
00021CD4 <AmiBlitz3.ab2@5600>   MOVE.l D4,systembuffer
00021CDA <AmiBlitz3.ab2@5601>   MOVE.l D5,databuffer
00021CE0 <AmiBlitz3.ab2@5602>   MOVE.l D0,destbufferstart
00021D14 <AmiBlitz3.ab2@5605>   !ComData_SetL{comPtr_DestBufferStart,D0}
00021D16 <AmiBlitz3.ab2@5606>   ADD.l D2,D0
00021D1C <AmiBlitz3.ab2@5607>   MOVE.l D0,destbufferend
00021D1E <AmiBlitz3.ab2@5608>   ADD.l D3,D0
00021D24 <AmiBlitz3.ab2@5609>   MOVE.l D0,data1start
00021D26 <AmiBlitz3.ab2@5610>   ADD.l D4,D0
00021D2C <AmiBlitz3.ab2@5611>   MOVE.l D0,data2at
00021D2E <AmiBlitz3.ab2@5612>   ADD.l D5,D0
00021D34 <AmiBlitz3.ab2@5613>   MOVE.l D0,allat
00021D36 <AmiBlitz3.ab2@5616> RTS
00021D3A <AmiBlitz3.ab2@5620>   Dc.b $00,$00,$00,$01                                     ;         1
00021D3E <AmiBlitz3.ab2@5621>   Dc.b $00,$00,$00,$0A                                     ;        10
00021D42 <AmiBlitz3.ab2@5622>   Dc.b $00,$00,$00,$64                                     ;       100
00021D46 <AmiBlitz3.ab2@5623>   Dc.b $00,$00,$03,$E8                                     ;      1000
00021D4A <AmiBlitz3.ab2@5624>   Dc.b $00,$00,$27,$10                                     ;     10000
00021D4E <AmiBlitz3.ab2@5625>   Dc.b $00,$01,$86,$A0                                     ;    100000
00021D52 <AmiBlitz3.ab2@5626>   Dc.b $00,$0F,$42,$40                                     ;   1000000
00021D56 <AmiBlitz3.ab2@5627>   Dc.b $00,$98,$96,$80                                     ;  10000000
00021D5A <AmiBlitz3.ab2@5628>   Dc.b $05,$F5,$E1,$00                                     ; 100000000
00021D5E <AmiBlitz3.ab2@5629>   Dc.b $3B,$9A,$CA,$00                                     ;1000000000
00021D60 <AmiBlitz3.ab2@5633>   MOVEQ.l #$00,D1                                          ;no zero printed
00021D62 <AmiBlitz3.ab2@5634>   MOVEQ.l #$24,D3                                          ; "$"
00021D64 <AmiBlitz3.ab2@5637>   MOVEQ.l #$30,D4                                          ; "0"
00021D68 <AmiBlitz3.ab2@5640>     CMP.l divisors(PC,D3.W),D2
00021D6C <AmiBlitz3.ab2@5641>     BCS.w makelong__skip
00021D70 <AmiBlitz3.ab2@5642>     SUB.l divisors(PC,D3.W),D2
00021D72 <AmiBlitz3.ab2@5643>     ADDQ.w #1,D4
00021D76 <AmiBlitz3.ab2@5644> BRA.w makelong__loop2
00021D7A <AmiBlitz3.ab2@5647>   CMP.b #"0",D4
00021D7E <AmiBlitz3.ab2@5648>   BNE.w makelong__doit
00021D80 <AmiBlitz3.ab2@5649>   TST.w D1
00021D84 <AmiBlitz3.ab2@5650>   BEQ.w makelong__skip2
00021D86 <AmiBlitz3.ab2@5653>   MOVE.b D4,(A0)+
00021D88 <AmiBlitz3.ab2@5654>   MOVEQ.l #$01,D1
00021D8A <AmiBlitz3.ab2@5657>   SUBQ.w #4,D3
00021D8E <AmiBlitz3.ab2@5658>   BPL.w makelong__loop
00021D90 <AmiBlitz3.ab2@5659>   TST.w D1
00021D94 <AmiBlitz3.ab2@5660>   BNE.w makelong__skip3
00021D98 <AmiBlitz3.ab2@5661>   MOVE.b #"0",(A0)+
00021D9A <AmiBlitz3.ab2@5664>   CLR.b (A0)
00021D9C <AmiBlitz3.ab2@5665> RTS
00021DBC <AmiBlitz3.ab2@5668> str_residentrequester:  Dc.b "Name of Resident File to Create",0 : Even        ;restext org source
00021E7C <AmiBlitz3.ab2@5669> str_residentpath:       Ds.l 48                                                ;respath org source
00021F3C <AmiBlitz3.ab2@5670> str_residentname:       Ds.l 48                                                ;resname org source
00021F42 <AmiBlitz3.ab2@5674>   MOVE.l macrobase,D0
00021F46 <AmiBlitz3.ab2@5675>    BNE.w create_residentfile
00021F4C <AmiBlitz3.ab2@5676>   MOVE.l newtype_string,D0
00021F50 <AmiBlitz3.ab2@5677>    BNE.w create_residentfile
00021F56 <AmiBlitz3.ab2@5678>   MOVEA.l labelbase,A2
00021F5A <AmiBlitz3.ab2@5681>     CMPA.w #$0,A2
00021F5E <AmiBlitz3.ab2@5682>      BEQ.w menu_createresidentfile__err
00021F66 <AmiBlitz3.ab2@5683>     CMPI.l #$1,$4(A2)
00021F6A <AmiBlitz3.ab2@5684>      BEQ.w create_residentfile
00021F6C <AmiBlitz3.ab2@5685>     MOVEA.l (A2),A2
00021F70 <AmiBlitz3.ab2@5686> BRA.w menu_createresidentfile__loop
00021F9A <AmiBlitz3.ab2@5689>   !basic
00021FF0 <AmiBlitz3.ab2@5690> 
0002200E <AmiBlitz3.ab2@5691>   !asm
00022010 <AmiBlitz3.ab2@5692> RTS
0002204E <AmiBlitz3.ab2@5698>   !ComData_GetL{comFunc_ASLFileRequest,A3}
00022054 <AmiBlitz3.ab2@5699>   LEA str_residentrequester,A2
0002205A <AmiBlitz3.ab2@5700>   LEA str_residentpath,A0
00022060 <AmiBlitz3.ab2@5701>   LEA str_residentname,A1
0002208A <AmiBlitz3.ab2@5702>   !basic
000220C2 <AmiBlitz3.ab2@5703>     Poke$ ?str_residentpath,my_residentsdir$
000220EE <AmiBlitz3.ab2@5704>     Poke$ ?str_residentname,".res"
0002210C <AmiBlitz3.ab2@5705>   !asm
0002210E <AmiBlitz3.ab2@5708>   JSR (A3)
00022112 <AmiBlitz3.ab2@5710>   BEQ.w menu_createresidentfile__err
00022114 <AmiBlitz3.ab2@5713>   MOVE.l D0,D1
0002211A <AmiBlitz3.ab2@5714>   MOVE.l #HUNK_RELOC_8__MODE_NEWFILE,D2
0002211E <AmiBlitz3.ab2@5715>   MOVEA.l _dosbase(PC),A6
00022122 <AmiBlitz3.ab2@5716>   JSR _Open(A6)
00022124 <AmiBlitz3.ab2@5717>   MOVE.l D0,D7                                             ;handle
00022128 <AmiBlitz3.ab2@5718>   BEQ.w menu_createresidentfile__err
0002212C <AmiBlitz3.ab2@5719>   MOVEM.l d2-d7/a0-a6,-(a7)
00022132 <AmiBlitz3.ab2@5720>   LEA devo,a0
00022138 <AmiBlitz3.ab2@5721>   LEA ptr_parameterstore,a1
0002213A <AmiBlitz3.ab2@5724>     MOVE.b (a0)+,(a1)+
0002213E <AmiBlitz3.ab2@5725>   BNE 'l1
00022140 <AmiBlitz3.ab2@5726>   MOVEQ #13,d2
00022146 <AmiBlitz3.ab2@5727>   JSR findlabel2
0002214A <AmiBlitz3.ab2@5728>   BNE 'd
0002214E <AmiBlitz3.ab2@5729>   TST.l 8(a2)
00022152 <AmiBlitz3.ab2@5730>   BEQ 'd2
0002217C <AmiBlitz3.ab2@5731>   !basic
000221D2 <AmiBlitz3.ab2@5732>     error{!TRANS{"Cannot create Resident with develope debug 1"}}
000221F0 <AmiBlitz3.ab2@5733>   !asm
000221F4 <AmiBlitz3.ab2@5734>   MOVEM.l (a7)+,d2-d7/a0-a6
000221F8 <AmiBlitz3.ab2@5735>   MOVEA.l _dosbase(PC),A6
000221FA <AmiBlitz3.ab2@5736>   MOVE.l d7,d1
000221FE <AmiBlitz3.ab2@5737>   JSR _Close(a6)
00022202 <AmiBlitz3.ab2@5738> BRA menu_createresidentfile__err
00022206 <AmiBlitz3.ab2@5742>   MOVEM.l (a7)+,d2-d7/a0-a6
0002220A <AmiBlitz3.ab2@5743>   BSR.w call_setpointerbusy
0002220E <AmiBlitz3.ab2@5745>   BSR.w AJL_0_7962
00022210 <AmiBlitz3.ab2@5746>   MOVE.l D7,D1
00022216 <AmiBlitz3.ab2@5747>   MOVE.l #tsthead,D2                                       ;header
00022218 <AmiBlitz3.ab2@5748>   MOVEQ.l #$20,D3
0002221C <AmiBlitz3.ab2@5749>   MOVEA.l _dosbase(PC),A6
00022220 <AmiBlitz3.ab2@5750>   JSR _Write(A6)
00022222 <AmiBlitz3.ab2@5751>   MOVEQ.l #$00,D6                                          ;offset from start of file!
00022226 <AmiBlitz3.ab2@5752>   BSR.w restypes
0002222A <AmiBlitz3.ab2@5753>   BSR.w resmacs
0002222E <AmiBlitz3.ab2@5754>   BSR.w resconsts
00022230 <AmiBlitz3.ab2@5755>   MOVE.l D6,D3
00022232 <AmiBlitz3.ab2@5756>   ADDQ.l #3,D3
00022238 <AmiBlitz3.ab2@5757>   ANDI.l #$FFFFFFFC,D3                                    ;long word align
0002223A <AmiBlitz3.ab2@5758>   MOVE.l D3,-(A7)
0002223C <AmiBlitz3.ab2@5759>   SUB.l D6,D3
00022240 <AmiBlitz3.ab2@5760>   BEQ.w menu_createresidentfile__noalign
00022246 <AmiBlitz3.ab2@5761>   MOVE.l #writelist,D2
00022248 <AmiBlitz3.ab2@5762>   MOVE.l D7,D1
0002224E <AmiBlitz3.ab2@5763>   MOVEA.l _dosbase,A6
00022252 <AmiBlitz3.ab2@5764>   JSR _Write(A6)
0002225C <AmiBlitz3.ab2@5767>    MOVE.l hunkoffsetcounter,tstsize3
00022260 <AmiBlitz3.ab2@5768>    BEQ.w menu_createresidentfile__skip2a
00022262 <AmiBlitz3.ab2@5769>   MOVE.l D7,D1
00022268 <AmiBlitz3.ab2@5770>   MOVE.l #tstend,D2
0002226A <AmiBlitz3.ab2@5771>   MOVEQ.l #$0C,D3
00022270 <AmiBlitz3.ab2@5772>   MOVEA.l _dosbase,A6
00022274 <AmiBlitz3.ab2@5773>    JSR _Write(A6)
0002227A <AmiBlitz3.ab2@5777>   MOVEA.l hunkoffsetbase,A2
0002227E <AmiBlitz3.ab2@5780>   CMPA.w #$0,A2
00022282 <AmiBlitz3.ab2@5781>    BEQ.w menu_createresidentfile__skip2
00022286 <AmiBlitz3.ab2@5782>   LEA $4(A2),A1
00022288 <AmiBlitz3.ab2@5783>   MOVE.l D7,D1
0002228A <AmiBlitz3.ab2@5784>   MOVE.l A1,D2
0002228C <AmiBlitz3.ab2@5785>   MOVEQ.l #$04,D3
00022292 <AmiBlitz3.ab2@5786>   MOVEA.l _dosbase,A6
00022296 <AmiBlitz3.ab2@5787>    JSR _Write(A6)
00022298 <AmiBlitz3.ab2@5788>   MOVEA.l (A2),A2
0002229C <AmiBlitz3.ab2@5789> BRA.w menu_createresidentfile__oloop
0002229E <AmiBlitz3.ab2@5792>   MOVE.l D7,D1
000222A4 <AmiBlitz3.ab2@5793>   MOVE.l #zero,D2
000222A6 <AmiBlitz3.ab2@5794>   MOVEQ.l #$04,D3
000222AC <AmiBlitz3.ab2@5795>   MOVEA.l _dosbase,A6
000222B0 <AmiBlitz3.ab2@5796>   JSR _Write(A6)
000222B2 <AmiBlitz3.ab2@5799>   MOVE.l D7,D1
000222B8 <AmiBlitz3.ab2@5800>   MOVE.l #tstdone,D2
000222BA <AmiBlitz3.ab2@5801>   MOVEQ.l #$04,D3
000222C0 <AmiBlitz3.ab2@5802>   MOVEA.l _dosbase,A6
000222C4 <AmiBlitz3.ab2@5803>    JSR _Write(A6)
000222C6 <AmiBlitz3.ab2@5804>   MOVE.l (A7)+,D0
000222C8 <AmiBlitz3.ab2@5805>   LSR.l #2,D0
000222CE <AmiBlitz3.ab2@5806>   MOVE.l D0,temp1
000222D0 <AmiBlitz3.ab2@5807>   MOVE.l D7,D1
000222D2 <AmiBlitz3.ab2@5808>   MOVEQ.l #$14,D2
000222D4 <AmiBlitz3.ab2@5809>   MOVEQ.l #-$01,D3
000222D8 <AmiBlitz3.ab2@5810>   JSR _Seek(A6)
000222DA <AmiBlitz3.ab2@5811>   MOVE.l D7,D1
000222E0 <AmiBlitz3.ab2@5812>   MOVE.l #temp1,D2
000222E2 <AmiBlitz3.ab2@5813>   MOVEQ.l #$04,D3
000222E6 <AmiBlitz3.ab2@5814>    JSR _Write(A6)
000222E8 <AmiBlitz3.ab2@5815>   MOVE.l D7,D1
000222EA <AmiBlitz3.ab2@5816>   MOVEQ.l #$1C,D2
000222EC <AmiBlitz3.ab2@5817>   MOVEQ.l #-$01,D3
000222F0 <AmiBlitz3.ab2@5818>    JSR _Seek(A6)
000222F2 <AmiBlitz3.ab2@5819>   MOVE.l D7,D1
000222F8 <AmiBlitz3.ab2@5820>   MOVE.l #temp1,D2
000222FA <AmiBlitz3.ab2@5821>   MOVEQ.l #$04,D3
000222FE <AmiBlitz3.ab2@5822>    JSR _Write(A6)
00022300 <AmiBlitz3.ab2@5823>   MOVE.l D7,D1
00022304 <AmiBlitz3.ab2@5824>    JSR _Close(A6)
00022308 <AmiBlitz3.ab2@5825> BRA.w call_setpointernormal
0002230A <AmiBlitz3.ab2@5829>   ADDQ.w #5,D1
0002230C <AmiBlitz3.ab2@5830>   ADDQ.b #8,D0
00022310 <AmiBlitz3.ab2@5833>     CMPA.w #$0,A2
00022314 <AmiBlitz3.ab2@5834>     BEQ.w writelist__done
00022318 <AmiBlitz3.ab2@5835>      BSR.w writeitem
0002231A <AmiBlitz3.ab2@5836>     MOVEA.l (A2),A2
0002231E <AmiBlitz3.ab2@5837> BRA.w writelist__loop
00022320 <AmiBlitz3.ab2@5840> RTS
00022322 <AmiBlitz3.ab2@5843>   MOVEQ.l #$00,D3
00022326 <AmiBlitz3.ab2@5844>   MOVE.b $0(A2,D5.W),D3
00022328 <AmiBlitz3.ab2@5845>   ADDQ.w #1,D3
0002232C <AmiBlitz3.ab2@5846>   BCLR #$0,D3                                              ;word align
0002232E <AmiBlitz3.ab2@5847>   MOVE.l (A2),-(A7)
00022332 <AmiBlitz3.ab2@5848>    BEQ.w writeitem__skip
00022336 <AmiBlitz3.ab2@5849>    BSR.w resoff
00022338 <AmiBlitz3.ab2@5850>   ADD.l D3,D6
0002233A <AmiBlitz3.ab2@5851>   MOVE.l D6,(A2)
0002233C <AmiBlitz3.ab2@5852>   SUB.l D3,D6
0002233E <AmiBlitz3.ab2@5855>    ADD.l D3,D6
00022340 <AmiBlitz3.ab2@5856>   MOVE.l A2,D2
00022342 <AmiBlitz3.ab2@5857>   MOVE.l D7,D1
00022348 <AmiBlitz3.ab2@5858>   MOVEA.l _dosbase,A6
0002234C <AmiBlitz3.ab2@5859>    JSR _Write(A6)
0002234E <AmiBlitz3.ab2@5860>   MOVE.l (A7)+,(A2)
00022350 <AmiBlitz3.ab2@5861> RTS
00022352 <AmiBlitz3.ab2@5864>   MOVE.l D6,D2
00022356 <AmiBlitz3.ab2@5865> BRA.w addhunkoffset
0002235A <AmiBlitz3.ab2@5869>     CMPA.w #$0,A2
0002235E <AmiBlitz3.ab2@5870>      BEQ.w writeoffs__done
00022364 <AmiBlitz3.ab2@5871>     MOVEA.l newtypebase,A1
00022366 <AmiBlitz3.ab2@5872>     MOVEQ.l #$00,D1
0002236A <AmiBlitz3.ab2@5875>       CMPA.w #$0,A1
0002236E <AmiBlitz3.ab2@5876>       BEQ.w writeoffs__found
00022372 <AmiBlitz3.ab2@5877>       CMPA.l $A(A2),A1
00022376 <AmiBlitz3.ab2@5878>        BEQ.w writeoffs__found
00022378 <AmiBlitz3.ab2@5879>       ADDQ.w #1,D1
0002237A <AmiBlitz3.ab2@5880>       MOVEA.l (A1),A1
0002237E <AmiBlitz3.ab2@5881> BRA.w writeoffs__loop2
00022382 <AmiBlitz3.ab2@5884>     MOVE.w $A(A2),-(A7)
00022386 <AmiBlitz3.ab2@5885>     MOVE.w D1,$A(A2)
0002238A <AmiBlitz3.ab2@5886>      BSR.w writeitem
0002238E <AmiBlitz3.ab2@5887>     MOVE.w (A7)+,$A(A2)
00022390 <AmiBlitz3.ab2@5888>     MOVEA.l (A2),A2
00022394 <AmiBlitz3.ab2@5889> BRA.w writeoffs
00022396 <AmiBlitz3.ab2@5892> RTS
00022398 <AmiBlitz3.ab2@5896>   MOVEQ.l #$00,D0
0002239C <AmiBlitz3.ab2@5899>   CMPA.w #$0,A2
000223A0 <AmiBlitz3.ab2@5900>    BEQ.w countem__done
000223A2 <AmiBlitz3.ab2@5901>   ADDQ.w #1,D0
000223A4 <AmiBlitz3.ab2@5902>   MOVEA.l (A2),A2
000223A8 <AmiBlitz3.ab2@5903> BRA.w countem__loop
000223AE <AmiBlitz3.ab2@5906>   MOVE.w D0,temp1
000223B0 <AmiBlitz3.ab2@5907>   MOVE.l D7,D1
000223B6 <AmiBlitz3.ab2@5908>   MOVE.l #temp1,D2
000223B8 <AmiBlitz3.ab2@5909>   MOVEQ.l #$02,D3
000223BA <AmiBlitz3.ab2@5910>   ADDQ.l #2,D6
000223C0 <AmiBlitz3.ab2@5911>   MOVEA.l _dosbase,A6
000223C4 <AmiBlitz3.ab2@5912> JMP _Write(A6)
000223CA <AmiBlitz3.ab2@5916>    TST.b resdisable
000223CE <AmiBlitz3.ab2@5917>    BEQ resmacs__l1
000223D4 <AmiBlitz3.ab2@5918>    MOVE.l currentmacroaddr,a3
000223DA <AmiBlitz3.ab2@5919>    CMP.l #0,a3
000223DE <AmiBlitz3.ab2@5920>    BEQ resmacs__l1
000223E0 <AmiBlitz3.ab2@5921>    MOVE.l (a3),a3
000223E4 <AmiBlitz3.ab2@5922> BRA resmacs__l2
000223EA <AmiBlitz3.ab2@5925>   MOVEA.l macrobase,A3                                     ;??begin org code??
000223EC <AmiBlitz3.ab2@5928>   MOVEA.l A3,A2
000223F0 <AmiBlitz3.ab2@5929>   BSR.w countem
000223F4 <AmiBlitz3.ab2@5932>    CMPA.w #$0,A3
000223F8 <AmiBlitz3.ab2@5933>    BEQ.w resmacs__done
000223FA <AmiBlitz3.ab2@5934>   MOVE.l D6,D5
000223FC <AmiBlitz3.ab2@5935>   MOVE.l (A3),-(A7)
00022400 <AmiBlitz3.ab2@5936>   MOVE.l $4(A3),-(A7)
00022402 <AmiBlitz3.ab2@5937>   MOVEQ.l #$00,D3
00022406 <AmiBlitz3.ab2@5938>   MOVE.b $C(A3),D3
00022408 <AmiBlitz3.ab2@5939>   ADDQ.w #1,D3
0002240C <AmiBlitz3.ab2@5940>   BCLR #$0,D3
0002240E <AmiBlitz3.ab2@5941>   ADD.l D3,D6                                              ;add len of struct
00022412 <AmiBlitz3.ab2@5942>   TST.w $8(A3)
00022416 <AmiBlitz3.ab2@5943>    BEQ.w resmacs__notext
0002241A <AmiBlitz3.ab2@5944>   MOVE.l D6,$4(A3)
0002241C <AmiBlitz3.ab2@5945>   MOVE.l D5,D2
0002241E <AmiBlitz3.ab2@5946>   ADDQ.l #4,D2
00022422 <AmiBlitz3.ab2@5947>    BSR.w addhunkoffset
00022424 <AmiBlitz3.ab2@5950>   MOVEQ.l #$00,D4
00022428 <AmiBlitz3.ab2@5951>   MOVE.w $8(A3),D4
0002242A <AmiBlitz3.ab2@5952>   ADDQ.w #1,D4
0002242E <AmiBlitz3.ab2@5953>   BCLR #$0,D4
00022430 <AmiBlitz3.ab2@5954>   ADD.l D4,D6
00022432 <AmiBlitz3.ab2@5955>   TST.l (A3)
00022436 <AmiBlitz3.ab2@5956>    BEQ.w resmacs__nomore
00022438 <AmiBlitz3.ab2@5957>   MOVE.l D6,(A3)
0002243A <AmiBlitz3.ab2@5958>   MOVE.l D5,D2
0002243E <AmiBlitz3.ab2@5959>    BSR.w addhunkoffset
00022440 <AmiBlitz3.ab2@5962>   MOVE.l A3,D2
00022442 <AmiBlitz3.ab2@5963>   MOVE.l D7,D1
00022448 <AmiBlitz3.ab2@5965>    MOVEA.l _dosbase,A6
0002244C <AmiBlitz3.ab2@5966>    JSR _Write(a6)
0002244E <AmiBlitz3.ab2@5967>   TST.l D4
00022452 <AmiBlitz3.ab2@5968>    BEQ.w resmacs__skip
00022454 <AmiBlitz3.ab2@5969>   MOVE.l (A7),D2
00022456 <AmiBlitz3.ab2@5970>   MOVE.l D4,D3
00022458 <AmiBlitz3.ab2@5971>   MOVE.l D7,D1
0002245E <AmiBlitz3.ab2@5973>     MOVEA.l _dosbase,A6
00022462 <AmiBlitz3.ab2@5974>    JSR _Write(A6)
00022466 <AmiBlitz3.ab2@5977>   MOVE.l (A7)+,$4(A3)
00022468 <AmiBlitz3.ab2@5978>   MOVE.l (A7)+,(A3)
0002246A <AmiBlitz3.ab2@5979>   MOVEA.l (A3),A3
0002246E <AmiBlitz3.ab2@5980> BRA.w resmacs__loop
00022470 <AmiBlitz3.ab2@5983> RTS
00022476 <AmiBlitz3.ab2@5987>   TST.b resdisable
0002247A <AmiBlitz3.ab2@5988>   BEQ restypes__l1
00022480 <AmiBlitz3.ab2@5989>   MOVE.l lastrestype,a3
00022486 <AmiBlitz3.ab2@5990>   CMP.l #0,a3
0002248A <AmiBlitz3.ab2@5991>   BEQ restypes__l1
0002248C <AmiBlitz3.ab2@5992>   MOVE.l (a3),a3
00022490 <AmiBlitz3.ab2@5993> BRA restypes__l2
00022496 <AmiBlitz3.ab2@5996>   MOVEA.l newtype_string,A3
00022498 <AmiBlitz3.ab2@5999>   MOVEA.l A3,A2
0002249C <AmiBlitz3.ab2@6000>    BSR.w countem
000224A0 <AmiBlitz3.ab2@6003>    CMPA.w #$0,A3
000224A4 <AmiBlitz3.ab2@6004>    BEQ.w restypes__done
000224A6 <AmiBlitz3.ab2@6005>   MOVE.l D6,-(A7)
000224AA <AmiBlitz3.ab2@6006>   MOVEA.l $4(A3),A2
000224AC <AmiBlitz3.ab2@6007>   MOVEQ.l #$0E,D5
000224B0 <AmiBlitz3.ab2@6008>    BSR.w writeoffs
000224B2 <AmiBlitz3.ab2@6009>   MOVE.l (A7)+,D0
000224B6 <AmiBlitz3.ab2@6010>   MOVE.l $4(A3),-(A7)
000224BA <AmiBlitz3.ab2@6011>   MOVE.l D0,$4(A3)
000224BC <AmiBlitz3.ab2@6012>   MOVE.l D6,D2
000224BE <AmiBlitz3.ab2@6013>   ADDQ.l #4,D2
000224C2 <AmiBlitz3.ab2@6014>    BSR.w addhunkoffset
000224C4 <AmiBlitz3.ab2@6015>   MOVEQ.l #$00,D3
000224C8 <AmiBlitz3.ab2@6016>   MOVE.b $A(A3),D3
000224CA <AmiBlitz3.ab2@6017>   ADDQ.w #1,D3
000224CE <AmiBlitz3.ab2@6018>   BCLR #$0,D3
000224D0 <AmiBlitz3.ab2@6019>   ADD.l D3,D6
000224D2 <AmiBlitz3.ab2@6020>   MOVE.l A3,D2
000224D4 <AmiBlitz3.ab2@6021>   MOVE.l D7,D1
000224DA <AmiBlitz3.ab2@6023>     MOVEA.l _dosbase,A6
000224DE <AmiBlitz3.ab2@6024>     JSR _Write(A6)
000224E2 <AmiBlitz3.ab2@6025>   MOVE.l (A7)+,$4(A3)
000224E4 <AmiBlitz3.ab2@6026>   MOVEA.l (A3),A3
000224E8 <AmiBlitz3.ab2@6027> BRA.w restypes__loop
000224EA <AmiBlitz3.ab2@6030> RTS
000224F0 <AmiBlitz3.ab2@6034>    TST.b resdisable
000224F4 <AmiBlitz3.ab2@6035>    BEQ resconsts__l1
000224FA <AmiBlitz3.ab2@6036>    MOVE.l currentlabeladdr,a2
00022500 <AmiBlitz3.ab2@6037>    CMP.l #0,a2
00022504 <AmiBlitz3.ab2@6038>    BEQ resconsts__l1
00022506 <AmiBlitz3.ab2@6039>    MOVE.l (a2),a2
0002250A <AmiBlitz3.ab2@6040> BRA resconsts__l2
00022510 <AmiBlitz3.ab2@6043>    MOVEA.l labelbase,A2
00022512 <AmiBlitz3.ab2@6046>    MOVEQ.l #$00,D0
00022516 <AmiBlitz3.ab2@6049>    CMPA.w #$0,A2
0002251A <AmiBlitz3.ab2@6050>    BEQ.w resconsts__done
00022522 <AmiBlitz3.ab2@6051>   CMPI.l #$1,$4(A2)
00022526 <AmiBlitz3.ab2@6052>    BNE.w resconsts__next
00022528 <AmiBlitz3.ab2@6053>   ADDQ.w #1,D0
0002252A <AmiBlitz3.ab2@6056>   MOVEA.l (A2),A2
0002252E <AmiBlitz3.ab2@6057> BRA.w resconsts__loop
00022534 <AmiBlitz3.ab2@6060>   MOVE.w D0,temp1
00022536 <AmiBlitz3.ab2@6061>   MOVE.l D7,D1
0002253C <AmiBlitz3.ab2@6062>   MOVE.l #temp1,D2
0002253E <AmiBlitz3.ab2@6063>   MOVEQ.l #$02,D3
00022540 <AmiBlitz3.ab2@6064>   ADDQ.l #2,D6
00022546 <AmiBlitz3.ab2@6066>     MOVEA.l _dosbase,A6
0002254A <AmiBlitz3.ab2@6067>     JSR _Write(A6)
00022550 <AmiBlitz3.ab2@6068>    TST.b resdisable
00022554 <AmiBlitz3.ab2@6069>    BEQ resconsts__done_l1
0002255A <AmiBlitz3.ab2@6070>    MOVE.l currentlabeladdr,a2
00022560 <AmiBlitz3.ab2@6071>    CMP.l #0,a2
00022564 <AmiBlitz3.ab2@6072>    BEQ resconsts__done_l1
00022566 <AmiBlitz3.ab2@6073>    MOVE.l (a2),a2
0002256A <AmiBlitz3.ab2@6074> BRA resconsts__loop2
00022570 <AmiBlitz3.ab2@6077>    MOVEA.l labelbase,A2                                    ;write resident labels
00022574 <AmiBlitz3.ab2@6080>    CMPA.w #$0,A2
00022578 <AmiBlitz3.ab2@6081>    BEQ.w resconsts__done2
00022580 <AmiBlitz3.ab2@6082>   CMPI.l #$1,$4(A2)
00022584 <AmiBlitz3.ab2@6083>    BNE.w resconsts__next2
00022586 <AmiBlitz3.ab2@6084>    MOVEQ.l #$00,D3
0002258A <AmiBlitz3.ab2@6085>   MOVE.b $12(A2),D3                                        ;length
0002258C <AmiBlitz3.ab2@6086>   ADDQ.w #1,D3
00022590 <AmiBlitz3.ab2@6087>   BCLR #$0,D3
00022592 <AmiBlitz3.ab2@6088>   MOVE.l D6,D2
00022594 <AmiBlitz3.ab2@6089>   ADD.l D3,D6
00022596 <AmiBlitz3.ab2@6092>   MOVE.l (A2),-(A7)
00022598 <AmiBlitz3.ab2@6093>   TST.l (A2)
0002259C <AmiBlitz3.ab2@6094>    BEQ.w resconsts__nonext
0002259E <AmiBlitz3.ab2@6095>   MOVE.l D6,(A2)
000225A2 <AmiBlitz3.ab2@6096>    BSR.w addhunkoffset
000225A4 <AmiBlitz3.ab2@6099>   MOVE.l A2,D2
000225A6 <AmiBlitz3.ab2@6100>   MOVE.l D7,D1
000225AC <AmiBlitz3.ab2@6102>     MOVEA.l _dosbase,A6
000225B0 <AmiBlitz3.ab2@6103>     JSR _Write(A6)
000225B2 <AmiBlitz3.ab2@6104>   MOVE.l (A7)+,(A2)
000225B4 <AmiBlitz3.ab2@6107>   MOVEA.l (A2),A2
000225B8 <AmiBlitz3.ab2@6108> BRA.w resconsts__loop2
000225BA <AmiBlitz3.ab2@6111> RTS
000225E4 <AmiBlitz3.ab2@6115>    !basic
000225EA <AmiBlitz3.ab2@6116>     MOVE.l ptr_resfile,d0
000225FA <AmiBlitz3.ab2@6117>     resfileP.l = Peek.l(?ptr_resfile)
00022604 <AmiBlitz3.ab2@6118>     If resfileP
0002262C <AmiBlitz3.ab2@6119>       resfile$ = Peek.s(resfileP)
00022678 <AmiBlitz3.ab2@6120>       tests.b = Instr(resfile$,"/")
000226C4 <AmiBlitz3.ab2@6121>       testc.b = Instr(resfile$,":")
000226E6 <AmiBlitz3.ab2@6122>       If tests=0 AND testc=0
00022766 <AmiBlitz3.ab2@6123>         resfile$ = dos_AddPart{my_residentsdir$,resfile$}
00022778 <AmiBlitz3.ab2@6124>         Poke.l ?ptr_resfile,&resfile$
0002277E <AmiBlitz3.ab2@6126>     Else
000227AC <AmiBlitz3.ab2@6127>       error{"INTERNAL: Invalid pointer in ptr_resfile!"}
000227CA <AmiBlitz3.ab2@6129>    !asm
000227CC <AmiBlitz3.ab2@6130> RTS
000227D2 <AmiBlitz3.ab2@6134>   MOVE.l A7,errstack
000227DC <AmiBlitz3.ab2@6136>   MOVE.l #next_resentry,errcont
000227E4 <AmiBlitz3.ab2@6137>   MOVE.w #$FFFF,ezerr
000227E8 <AmiBlitz3.ab2@6138>   BSR.w Aclearallvars
000227EC <AmiBlitz3.ab2@6139>   BSR.w free_residents
000227F2 <AmiBlitz3.ab2@6141>   LEA residents_table,A5
000227F4 <AmiBlitz3.ab2@6142>   MOVEQ.l #$07,D6
000227F6 <AmiBlitz3.ab2@6145>     TST.b (A5)
000227FA <AmiBlitz3.ab2@6146>     BEQ.w next_resentry
00022800 <AmiBlitz3.ab2@6147>     MOVE.l A5,ptr_resfile
00022804 <AmiBlitz3.ab2@6148>     BSR check_residentpath
0002280A <AmiBlitz3.ab2@6149>     MOVE.l ptr_resfile,d1
00022810 <AmiBlitz3.ab2@6150>     MOVEA.l _dosbase,A6
00022814 <AmiBlitz3.ab2@6151>     JSR _LoadSeg(A6)
00022818 <AmiBlitz3.ab2@6152>     MOVE.l D0,$40(A5)
0002281C <AmiBlitz3.ab2@6153>     BNE.w reloadresident__yeah
00022820 <AmiBlitz3.ab2@6154>     BSR.w reserr
00022822 <AmiBlitz3.ab2@6157>     MOVEA.l D0,A3
00022824 <AmiBlitz3.ab2@6158>     ADDA.l A3,A3
00022826 <AmiBlitz3.ab2@6159>     ADDA.l A3,A3
00022828 <AmiBlitz3.ab2@6160>     ADDQ.w #4,A3                                           ;start of res
0002282C <AmiBlitz3.ab2@6161>     BSR.w JL_0_5A9E
00022830 <AmiBlitz3.ab2@6162>     BSR.w JL_0_5A62                                        ;add macros to list
00022834 <AmiBlitz3.ab2@6163>     BSR.w JL_0_5A32                                        ;read labels
00022838 <AmiBlitz3.ab2@6166>     LEA ResidentEntryStep(A5),A5       ;$44
0002283C <AmiBlitz3.ab2@6167>   DBF D6,reloadresident__loop
00022846 <AmiBlitz3.ab2@6172>   MOVE.l #free_residents,errcont
0002284C <AmiBlitz3.ab2@6174>   MOVEA.l newtype_string,A3
0002284E <AmiBlitz3.ab2@6175>   MOVEQ.l #$0B,D7
00022852 <AmiBlitz3.ab2@6176>   BSR.w checkclash
00022858 <AmiBlitz3.ab2@6178>   MOVEA.l macrobase,A3
0002285A <AmiBlitz3.ab2@6179>   MOVEQ.l #$d,D7
0002285E <AmiBlitz3.ab2@6180>   BSR.w checkclash
00022864 <AmiBlitz3.ab2@6182>   MOVEA.l firstconst,A3
00022866 <AmiBlitz3.ab2@6183>   MOVEQ.l #$19,D7
0002286A <AmiBlitz3.ab2@6184>   BSR.w checkclash
0002286C <AmiBlitz3.ab2@6187> RTS
0002286E <AmiBlitz3.ab2@6191>   MOVEA.l A3,A4
00022872 <AmiBlitz3.ab2@6194>     CMPA.w #$0,A4
00022876 <AmiBlitz3.ab2@6195>     BEQ.w checkclash__done
0002287C <AmiBlitz3.ab2@6197>     LEA ptr_parameterstore,A0
00022880 <AmiBlitz3.ab2@6198>     LEA $0(A4,D7.W),A1
00022882 <AmiBlitz3.ab2@6199>     MOVEQ.l #-$01,D2
00022884 <AmiBlitz3.ab2@6202>       ADDQ.w #1,D2
00022886 <AmiBlitz3.ab2@6203>       MOVE.b (A1)+,(A0)+
0002288A <AmiBlitz3.ab2@6204>     BNE.w checkclash__loop2
0002288C <AmiBlitz3.ab2@6205>     MOVEA.l A3,A2
00022890 <AmiBlitz3.ab2@6208>     BSR.w findlab
00022894 <AmiBlitz3.ab2@6209>     BNE.w checkclash__next                                  ;not found
00022896 <AmiBlitz3.ab2@6210>     CMPA.l A2,A4
0002289A <AmiBlitz3.ab2@6211>     BEQ.w checkclash__l1
0002289C <AmiBlitz3.ab2@6212>     MOVE.l a1,a5
000228A0 <AmiBlitz3.ab2@6213> BRA clasherr
000228A4 <AmiBlitz3.ab2@6216> BRA.w checkclash__more
000228A6 <AmiBlitz3.ab2@6219>     MOVEA.l (A4),A4
000228AA <AmiBlitz3.ab2@6220> BRA.w checkclash__loop
000228AC <AmiBlitz3.ab2@6223> RTS
000228B2 <AmiBlitz3.ab2@6227>   MOVEA.l _dosbase,A6
000228B8 <AmiBlitz3.ab2@6229>   LEA newtype_string,A0
000228BE <AmiBlitz3.ab2@6230>   MOVE.l A0,lastrestype
000228C0 <AmiBlitz3.ab2@6231>   CLR.l (A0)
000228C6 <AmiBlitz3.ab2@6233>   LEA macrobase,A0
000228CC <AmiBlitz3.ab2@6234>   MOVE.l A0,currentmacroaddr
000228CE <AmiBlitz3.ab2@6235>   CLR.l (A0)
000228D4 <AmiBlitz3.ab2@6237>   LEA labelbase,A0
000228DA <AmiBlitz3.ab2@6238>   MOVE.l A0,currentlabeladdr
000228DC <AmiBlitz3.ab2@6239>   CLR.l (A0)
000228E2 <AmiBlitz3.ab2@6240>   CLR.w rescnt
0002291A <AmiBlitz3.ab2@6244>   !ComData_SetB{comByte_DebugMode,debugmode}
00022920 <AmiBlitz3.ab2@6247>   LEA residents_table,A2
00022922 <AmiBlitz3.ab2@6248>   MOVEQ.l #$07,D2
00022926 <AmiBlitz3.ab2@6251>      MOVE.l $40(A2),D1
0002292A <AmiBlitz3.ab2@6252>      BEQ.w free_residents__next
0002292E <AmiBlitz3.ab2@6253>       CLR.l $40(A2)
00022934 <AmiBlitz3.ab2@6254>       MOVEA.l _dosbase,A6
00022938 <AmiBlitz3.ab2@6255>       JSR _UnLoadSeg(A6)
0002293C <AmiBlitz3.ab2@6258>      LEA ResidentEntryStep(A2),A2   ; $44
00022940 <AmiBlitz3.ab2@6259>    DBF D2,free_residents__loop
00022942 <AmiBlitz3.ab2@6261> RTS
00022944 <AmiBlitz3.ab2@6265>   MOVE.w (A3)+,D1
00022948 <AmiBlitz3.ab2@6266>   BEQ.w JL_0_5A60
0002294E <AmiBlitz3.ab2@6267>   MOVEA.l currentlabeladdr,A2
00022950 <AmiBlitz3.ab2@6268>   MOVE.l A3,(A2)
00022952 <AmiBlitz3.ab2@6269>   SUBQ.w #1,D1
00022954 <AmiBlitz3.ab2@6272>     MOVEA.l A3,A2
00022956 <AmiBlitz3.ab2@6273>     MOVEA.l (A3),A3
0002295A <AmiBlitz3.ab2@6274>   DBF D1,JL_0_5A42
0002295C <AmiBlitz3.ab2@6276>   CLR.l (a2)                                               ;bugfix for object
00022962 <AmiBlitz3.ab2@6277>   MOVE.l A2,currentlabeladdr
00022964 <AmiBlitz3.ab2@6278>   MOVEA.l A2,A3
00022966 <AmiBlitz3.ab2@6279>   MOVEQ.l #$00,D0
0002296A <AmiBlitz3.ab2@6280>   MOVE.b $12(A3),D0
0002296C <AmiBlitz3.ab2@6281>   ADDQ.w #1,D0
00022970 <AmiBlitz3.ab2@6282>   BCLR #$0,D0
00022972 <AmiBlitz3.ab2@6283>   ADDA.w D0,A3
00022974 <AmiBlitz3.ab2@6286> RTS
00022976 <AmiBlitz3.ab2@6290>   MOVE.w (A3)+,D1
0002297A <AmiBlitz3.ab2@6291>   BEQ.w JL_0_5A9C
00022980 <AmiBlitz3.ab2@6293>   MOVEA.l currentmacroaddr,A2
00022982 <AmiBlitz3.ab2@6294>   MOVE.l A3,(A2)
00022984 <AmiBlitz3.ab2@6295>   SUBQ.w #1,D1
00022986 <AmiBlitz3.ab2@6298>     MOVEA.l A3,A2
00022988 <AmiBlitz3.ab2@6299>     MOVEA.l (A3),A3
0002298C <AmiBlitz3.ab2@6300>   DBF D1,JL_0_5A72
00022992 <AmiBlitz3.ab2@6302>   MOVE.l A2,currentmacroaddr
00022994 <AmiBlitz3.ab2@6303>   MOVEA.l A2,A3
00022996 <AmiBlitz3.ab2@6304>   MOVEQ.l #$00,D0
0002299A <AmiBlitz3.ab2@6305>   MOVE.b $C(A3),D0
0002299C <AmiBlitz3.ab2@6306>   ADDQ.w #1,D0
000229A0 <AmiBlitz3.ab2@6307>   BCLR #$0,D0
000229A4 <AmiBlitz3.ab2@6308>   MOVE.w $8(A3),D1
000229A6 <AmiBlitz3.ab2@6309>   ADDQ.w #1,D1
000229AA <AmiBlitz3.ab2@6310>   BCLR #$0,D1
000229AC <AmiBlitz3.ab2@6311>   ADDA.w D0,A3
000229AE <AmiBlitz3.ab2@6312>   ADDA.w D1,A3
000229B0 <AmiBlitz3.ab2@6315> RTS
000229B2 <AmiBlitz3.ab2@6319>   MOVE.w (A3)+,D1
000229B6 <AmiBlitz3.ab2@6320>   BEQ.w JL_0_5B38
000229B8 <AmiBlitz3.ab2@6321>   MOVE.w D1,-(A7)
000229BA <AmiBlitz3.ab2@6322>   SUBQ.w #1,D1
000229C0 <AmiBlitz3.ab2@6323>   MOVEA.l lastrestype,A2
000229C2 <AmiBlitz3.ab2@6324>   MOVE.l A2,-(A7)
000229C4 <AmiBlitz3.ab2@6327>       MOVE.l (A3),D0
000229C8 <AmiBlitz3.ab2@6328>       BEQ.w JL_0_5ABC
000229CA <AmiBlitz3.ab2@6329>       MOVEA.l D0,A3
000229CE <AmiBlitz3.ab2@6330> BRA.w JL_0_5AB0
000229D2 <AmiBlitz3.ab2@6333>       MOVE.b $E(A3),D0
000229D4 <AmiBlitz3.ab2@6334>       ADDQ.w #1,D0
000229D8 <AmiBlitz3.ab2@6335>       BCLR #$0,D0
000229DA <AmiBlitz3.ab2@6336>       ADDA.w D0,A3
000229DC <AmiBlitz3.ab2@6337>       MOVE.l A3,(A2)
000229DE <AmiBlitz3.ab2@6338>       MOVEA.l A3,A2
000229E0 <AmiBlitz3.ab2@6339>       MOVEQ.l #$00,D0
000229E4 <AmiBlitz3.ab2@6340>       MOVE.b $A(A3),D0
000229E6 <AmiBlitz3.ab2@6341>       ADDQ.w #1,D0
000229EA <AmiBlitz3.ab2@6342>       BCLR #$0,D0
000229EC <AmiBlitz3.ab2@6343>       ADDA.w D0,A3
000229F0 <AmiBlitz3.ab2@6344>   DBF D1,JL_0_5AB0
000229F2 <AmiBlitz3.ab2@6346>   MOVEA.l (A7)+,A0
000229F4 <AmiBlitz3.ab2@6347>   MOVEA.l (A0),A0
000229F8 <AmiBlitz3.ab2@6350>     CMPA.w #$0,A0
000229FC <AmiBlitz3.ab2@6351>     BEQ.w JL_0_5B2A
00022A00 <AmiBlitz3.ab2@6352>     MOVEA.l $4(A0),A1
00022A04 <AmiBlitz3.ab2@6355>     CMPA.w #$0,A1
00022A08 <AmiBlitz3.ab2@6356>     BEQ.w JL_0_5B24
00022A0C <AmiBlitz3.ab2@6357>     MOVE.w $A(A1),D0
00022A12 <AmiBlitz3.ab2@6358>     MOVEA.l newtypebase,A4
00022A16 <AmiBlitz3.ab2@6359>     CMP.w #$7,D0
00022A1A <AmiBlitz3.ab2@6360>     BCS.w JL_0_5B0E
00022A20 <AmiBlitz3.ab2@6361>     SUB.w rescnt,D0
00022A22 <AmiBlitz3.ab2@6364>     SUBQ.w #1,D0
00022A26 <AmiBlitz3.ab2@6365>     BMI.w JL_0_5B1A
00022A28 <AmiBlitz3.ab2@6368>        MOVEA.l (A4),A4
00022A2C <AmiBlitz3.ab2@6369>   DBF D0,JL_0_5B14
00022A30 <AmiBlitz3.ab2@6372>     MOVE.l A4,$A(A1)
00022A32 <AmiBlitz3.ab2@6373>     MOVEA.l (A1),A1
00022A36 <AmiBlitz3.ab2@6374> BRA.w JL_0_5AEE
00022A38 <AmiBlitz3.ab2@6377>     MOVEA.l (A0),A0
00022A3C <AmiBlitz3.ab2@6378> BRA.w JL_0_5AE2
00022A3E <AmiBlitz3.ab2@6381>   MOVE.w (A7)+,D0
00022A44 <AmiBlitz3.ab2@6382>   ADD.w D0,rescnt
00022A4A <AmiBlitz3.ab2@6383>   MOVE.l A2,lastrestype
00022A4C <AmiBlitz3.ab2@6386> RTS
00022A52 <AmiBlitz3.ab2@6390>   LEA tokens,A0
00022A56 <AmiBlitz3.ab2@6391>   MOVE.w #$003A,D0                                         ; $003A : 58 dec
00022A58 <AmiBlitz3.ab2@6394>     MOVEA.l (A0),A0
00022A5C <AmiBlitz3.ab2@6395>   DBF D0,JL_0_5BD0
00022A62 <AmiBlitz3.ab2@6397>   MOVEA.l #asmpnts,A1                                      ;create tokentab
00022A66 <AmiBlitz3.ab2@6398>   MOVE.w #$0076,D0                                         ; $0076 : 118 dec
00022A6A <AmiBlitz3.ab2@6401>       LEA $6(A0),A2
00022A6C <AmiBlitz3.ab2@6404>         TST.b (A2)+
00022A70 <AmiBlitz3.ab2@6405>       BNE.w JL_0_5BE4
00022A72 <AmiBlitz3.ab2@6408>         TST.b (A2)+
00022A76 <AmiBlitz3.ab2@6409>       BNE.w JL_0_5BEA
00022A78 <AmiBlitz3.ab2@6411>       ADDQ.w #1,A2
00022A7A <AmiBlitz3.ab2@6412>       EXG.l D1,A2
00022A7E <AmiBlitz3.ab2@6413>       BCLR #$0,D1
00022A80 <AmiBlitz3.ab2@6414>       EXG.l D1,A2
00022A82 <AmiBlitz3.ab2@6415>       MOVE.l A2,(A1)+
00022A84 <AmiBlitz3.ab2@6416>       MOVEA.l (A0),A0
00022A88 <AmiBlitz3.ab2@6417>   DBF D0,JL_0_5BE0
00022A8A <AmiBlitz3.ab2@6418> RTS
00022A8E <AmiBlitz3.ab2@6422>   BSR.w asmconst
00022A90 <AmiBlitz3.ab2@6423>   MOVEQ.l #$0B,D5
00022A92 <AmiBlitz3.ab2@6424> RTS
00022A94 <AmiBlitz3.ab2@6427> unmove:  Ds.w 1
00022A98 <AmiBlitz3.ab2@6431>   MOVE.w #$48E7,D1
00022A9C <AmiBlitz3.ab2@6432>   BSR.w writeword                                          ;movem.l -(a7)
00022AA0 <AmiBlitz3.ab2@6433>   MOVE.w #$000F,D2
00022AA2 <AmiBlitz3.ab2@6434>   SUB.w D4,D2
00022AA4 <AmiBlitz3.ab2@6435>   MOVEQ.l #-$01,D1
00022AA6 <AmiBlitz3.ab2@6436>   BCLR D2,D1
00022AAA <AmiBlitz3.ab2@6437>   BSR.w writeword
00022AAC <AmiBlitz3.ab2@6438>   MOVEQ.l #-$01,D1
00022AAE <AmiBlitz3.ab2@6439>   BCLR D4,D1
00022AB4 <AmiBlitz3.ab2@6440>   MOVE.w D1,unmove
00022AB6 <AmiBlitz3.ab2@6441> RTS
00022ABA <AmiBlitz3.ab2@6445>   MOVE.w #$4CDF,D1
00022ABE <AmiBlitz3.ab2@6446>   BSR.w writeword
00022AC2 <AmiBlitz3.ab2@6447>   MOVE.w unmove(PC),D1
00022AC6 <AmiBlitz3.ab2@6448> BRA.w writeword
00022ACA <AmiBlitz3.ab2@6461>   BSR.w JL_0_5D22
00022ACE <AmiBlitz3.ab2@6462>   CMP.w #$2C,D0                                            ;#','
00022AD2 <AmiBlitz3.ab2@6463>    BNE.w syntaxerr
00022AD8 <AmiBlitz3.ab2@6464>   MOVE.l #$48E7FFFE,D1                                     ;movem to stack
00022ADC <AmiBlitz3.ab2@6465>    BSR.w writelong
00022ADE <AmiBlitz3.ab2@6466>   MOVE.w D4,D1
00022AE2 <AmiBlitz3.ab2@6467>   ORI.w #$2F00,D1
00022AE6 <AmiBlitz3.ab2@6468>    BSR.w writeword
00022AEA <AmiBlitz3.ab2@6469>    BSR.w get1bytemain
00022AEE <AmiBlitz3.ab2@6470>    BSR.w getparameter
00022AF2 <AmiBlitz3.ab2@6471>    BSR.w JL_0_8E3C
00022AF6 <AmiBlitz3.ab2@6472>    BSR.w calcvar
00022AFA <AmiBlitz3.ab2@6473>    BTST #$E,D2
00022AFE <AmiBlitz3.ab2@6474>    BEQ.w JL_0_5C80
00022B02 <AmiBlitz3.ab2@6477>    MOVE.b #$3,D2
00022B06 <AmiBlitz3.ab2@6478> BRA.w JL_0_5C8E
00022B08 <AmiBlitz3.ab2@6481>   TST.b D2
00022B0C <AmiBlitz3.ab2@6482>    BEQ.w JL_0_5C78
00022B10 <AmiBlitz3.ab2@6483>   CMP.b #$7,D2
00022B14 <AmiBlitz3.ab2@6484>    BEQ.w JL_0_5C78
00022B18 <AmiBlitz3.ab2@6487>   BTST #$F,D2
00022B1C <AmiBlitz3.ab2@6488>    BNE.w JL_0_5CA4
00022B20 <AmiBlitz3.ab2@6489>   MOVE.w #$45ED,D1                                         ;lea x(a5),a2
00022B24 <AmiBlitz3.ab2@6490>    BSR.w writeword
00022B26 <AmiBlitz3.ab2@6491>   MOVE.w D3,D1
00022B2A <AmiBlitz3.ab2@6492>    BSR.w writeword
00022B2E <AmiBlitz3.ab2@6495>   MOVE.w #$201F,D1                                         ;move.l (a7)+,d0
00022B32 <AmiBlitz3.ab2@6496>    BSR.w writeword
00022B36 <AmiBlitz3.ab2@6497>   MOVE.w #$1480,D1
00022B3A <AmiBlitz3.ab2@6498>   CMP.b #$1,D2
00022B3E <AmiBlitz3.ab2@6499>    BEQ.w JL_0_5CC8
00022B42 <AmiBlitz3.ab2@6500>   EORI.w #$3000,D1
00022B46 <AmiBlitz3.ab2@6501>   CMP.b #$2,D2
00022B4A <AmiBlitz3.ab2@6502>    BNE.w JL_0_5CC8
00022B4E <AmiBlitz3.ab2@6503>   ORI.w #$1000,D1
00022B52 <AmiBlitz3.ab2@6506>   BSR.w writeword
00022B58 <AmiBlitz3.ab2@6507>   MOVE.l #$4CDF7FFF,D1
00022B5C <AmiBlitz3.ab2@6508> BRA.w writelong
00022B60 <AmiBlitz3.ab2@6512>   BSR.w JL_0_5D22
00022B64 <AmiBlitz3.ab2@6513>   CMP.w #$2C,D0
00022B68 <AmiBlitz3.ab2@6514>    BNE.w syntaxerr
00022B6C <AmiBlitz3.ab2@6515>    BSR.w regmovems
00022B6E <AmiBlitz3.ab2@6516>   MOVE.w D4,-(A7)
00022B70 <AmiBlitz3.ab2@6517>   MOVEQ.l #$03,D2
00022B74 <AmiBlitz3.ab2@6518>    BSR.w eval
00022B76 <AmiBlitz3.ab2@6519>   MOVE.w (A7)+,D1
00022B7A <AmiBlitz3.ab2@6520>    BEQ.w JL_0_5D1A
00022B7E <AmiBlitz3.ab2@6521>   CMP.w #$8,D1
00022B82 <AmiBlitz3.ab2@6522>    BCC.w JL_0_5D0C
00022B84 <AmiBlitz3.ab2@6523>   LSL.w #8,D1
00022B86 <AmiBlitz3.ab2@6524>   LSL.w #1,D1
00022B8A <AmiBlitz3.ab2@6525>   ORI.w #$2000,D1
00022B8E <AmiBlitz3.ab2@6526>    BSR.w writeword
00022B92 <AmiBlitz3.ab2@6527> BRA.w JL_0_5D1A
00022B94 <AmiBlitz3.ab2@6530>   SUBQ.w #8,D1
00022B96 <AmiBlitz3.ab2@6531>   LSL.w #8,D1
00022B98 <AmiBlitz3.ab2@6532>   LSL.w #1,D1
00022B9C <AmiBlitz3.ab2@6533>   ORI.w #$2040,D1
00022BA0 <AmiBlitz3.ab2@6534>   BSR.w writeword
00022BA4 <AmiBlitz3.ab2@6537> BRA.w dounmove
00022BA8 <AmiBlitz3.ab2@6541>   BSR.w get1bytemain
00022BAC <AmiBlitz3.ab2@6544>   ORI.w #$20,D0
00022BB0 <AmiBlitz3.ab2@6545>   CMP.w #$64,D0
00022BB4 <AmiBlitz3.ab2@6546>    BEQ.w JL_0_5D4E
00022BB8 <AmiBlitz3.ab2@6547>   CMP.w #$61,D0
00022BBC <AmiBlitz3.ab2@6548>    BNE.w syntaxerr
00022BC0 <AmiBlitz3.ab2@6549>    BSR.w JL_0_5D4E
00022BC2 <AmiBlitz3.ab2@6550>   ADDQ.w #8,D4
00022BC4 <AmiBlitz3.ab2@6551> RTS
00022BF0 <AmiBlitz3.ab2@6555>   !fget                                                   ;bsr.w get1bytemain
00022BF4 <AmiBlitz3.ab2@6557>   ORI.w #$20,D0
00022BF8 <AmiBlitz3.ab2@6560>   CMP.w #$61,D0
00022BFC <AmiBlitz3.ab2@6561>   BNE.w syntaxerr
00022C28 <AmiBlitz3.ab2@6564>   !fget                                                    ;bsr.w get1bytemain
00022C2C <AmiBlitz3.ab2@6565>   SUBI.w #$30,D0
00022C30 <AmiBlitz3.ab2@6566>    BMI.w syntaxerr
00022C34 <AmiBlitz3.ab2@6567>   CMP.w #$7,D0
00022C38 <AmiBlitz3.ab2@6568>    BHI.w syntaxerr
00022C3A <AmiBlitz3.ab2@6569>   MOVE.w D0,D4
00022C66 <AmiBlitz3.ab2@6570>   !fget
00022C68 <AmiBlitz3.ab2@6571> RTS                                                        ;bra.w get1bytemain
00022C6A <AmiBlitz3.ab2@6575>   ADDQ.w #8,D4
00022C6C <AmiBlitz3.ab2@6578>   MOVEQ.l #$00,D5
00022C70 <AmiBlitz3.ab2@6579>   SUBI.w #$30,D4
00022C74 <AmiBlitz3.ab2@6582>   CMP.w #$2D,D0
00022C78 <AmiBlitz3.ab2@6583>    BEQ.w JL_0_5D9E
00022C7C <AmiBlitz3.ab2@6584>   CMP.w #$2F,D0
00022C80 <AmiBlitz3.ab2@6585>    BEQ.w JL_0_5D8C
00022C84 <AmiBlitz3.ab2@6586> BRA.w syntaxerr
00022C86 <AmiBlitz3.ab2@6589>   BSET D4,D5
00022C88 <AmiBlitz3.ab2@6592>   MOVE.w D5,D4
00022C8A <AmiBlitz3.ab2@6593>   MOVEQ.l #$0F,D5
00022C8C <AmiBlitz3.ab2@6594> RTS
00022C8E <AmiBlitz3.ab2@6597>   BSET D4,D5
00022C92 <AmiBlitz3.ab2@6598>   BSR.w JL_0_5D1E
00022CA4 <AmiBlitz3.ab2@6599>   !compare3                                                ;bsr.w JL_0_5FC0
00022CA8 <AmiBlitz3.ab2@6600>   BNE.w JL_0_5D70
00022CAC <AmiBlitz3.ab2@6601> BRA.w JL_0_5D84
00022CAE <AmiBlitz3.ab2@6604>   MOVE.w D4,D1
00022CB2 <AmiBlitz3.ab2@6605>    BSR.w JL_0_5D1E
00022CB4 <AmiBlitz3.ab2@6606>   CMP.w D4,D1
00022CB8 <AmiBlitz3.ab2@6607>    BLS.w JL_0_5DAC
00022CBA <AmiBlitz3.ab2@6608>   EXG.l D4,D1
00022CBC <AmiBlitz3.ab2@6611>   BSET D1,D5
00022CBE <AmiBlitz3.ab2@6612>   ADDQ.w #1,D1
00022CC0 <AmiBlitz3.ab2@6613>   CMP.w D4,D1
00022CC4 <AmiBlitz3.ab2@6614>    BLS.w JL_0_5DAC
00022CD6 <AmiBlitz3.ab2@6615>   !compare3                                                ;bsr.w JL_0_5FC0
00022CDA <AmiBlitz3.ab2@6616>   BNE.w JL_0_5D70
00022CDE <AmiBlitz3.ab2@6617> BRA.w JL_0_5D86
00022CE0 <AmiBlitz3.ab2@6620>   MOVEA.l A5,A4                                            ;bsr.w get1bytemain
00022D0C <AmiBlitz3.ab2@6621>    !fget
00022D10 <AmiBlitz3.ab2@6622>   CMP.w #$23,D0
00022D14 <AmiBlitz3.ab2@6623>    BEQ.w getimm
00022D18 <AmiBlitz3.ab2@6624>   CMP.w #$28,D0
00022D1C <AmiBlitz3.ab2@6625>    BEQ.w JL_0_5DFE
00022D20 <AmiBlitz3.ab2@6626>   CMP.w #$2D,D0
00022D24 <AmiBlitz3.ab2@6627>    BNE.w JL_0_5E20
00022D50 <AmiBlitz3.ab2@6628>    !fget                                                   ;bsr.w get1bytemain       -(
00022D54 <AmiBlitz3.ab2@6629>   CMP.w #$28,D0
00022D58 <AmiBlitz3.ab2@6630>    BNE.w JL_0_5F4E
00022D5C <AmiBlitz3.ab2@6631>    BSR.w JL_0_5D3E
00022D60 <AmiBlitz3.ab2@6632>   CMP.w #$29,D0
00022D64 <AmiBlitz3.ab2@6633>    BNE.w syntaxerr
00022D66 <AmiBlitz3.ab2@6634>   MOVEQ.l #$04,D5
00022D92 <AmiBlitz3.ab2@6635>   !fget                                                    ;bsr.w get1bytemain
00022D94 <AmiBlitz3.ab2@6636> RTS
00022D98 <AmiBlitz3.ab2@6640>   BSR.w JL_0_5D3E
00022D9C <AmiBlitz3.ab2@6641>   CMP.w #$29,D0
00022DA0 <AmiBlitz3.ab2@6642>    BNE.w syntaxerr
00022DCC <AmiBlitz3.ab2@6643>   !fget                                                    ;bsr.w get1bytemain
00022DD0 <AmiBlitz3.ab2@6644>   CMP.w #$2B,D0
00022DD4 <AmiBlitz3.ab2@6645>    BEQ.w JL_0_5E1A
00022DD6 <AmiBlitz3.ab2@6646>   MOVEQ.l #$02,D5
00022DD8 <AmiBlitz3.ab2@6647> RTS
00022DDA <AmiBlitz3.ab2@6651>   MOVEQ.l #$03,D5
00022E06 <AmiBlitz3.ab2@6652>   !fget                                                    ;bra.w get1bytemain
00022E08 <AmiBlitz3.ab2@6653> RTS
00022E0C <AmiBlitz3.ab2@6657>   ORI.w #$20,D0
00022E0E <AmiBlitz3.ab2@6658>   MOVE.w D0,D1                                            
00022E3A <AmiBlitz3.ab2@6659>    !fget                                                   ;bsr.w get1bytemain
00022E3E <AmiBlitz3.ab2@6660>   CMP.w #$64,D1
00022E42 <AmiBlitz3.ab2@6661>    BNE.w JL_0_5E6C
00022E46 <AmiBlitz3.ab2@6662>   CMP.w #$30,D0
00022E4A <AmiBlitz3.ab2@6663>    BCS.w JL_0_5EAE
00022E4E <AmiBlitz3.ab2@6664>   CMP.w #$37,D0
00022E52 <AmiBlitz3.ab2@6665>    BHI.w JL_0_5EAE
00022E54 <AmiBlitz3.ab2@6666>   MOVE.w D0,D4
00022E80 <AmiBlitz3.ab2@6667>    !fget                                                   ;bsr.w get1bytemain
00022E92 <AmiBlitz3.ab2@6668>    !compare3                                               ;bsr.w JL_0_5FC0
00022E96 <AmiBlitz3.ab2@6669>    BEQ.w JL_0_5E64
00022E9A <AmiBlitz3.ab2@6670>   CMP.w #$2D,D0
00022E9E <AmiBlitz3.ab2@6671>    BEQ.w JL_0_5D6A
00022EA2 <AmiBlitz3.ab2@6672>   CMP.w #$2F,D0
00022EA6 <AmiBlitz3.ab2@6673>    BEQ.w JL_0_5D6A
00022EAA <AmiBlitz3.ab2@6674> BRA.w JL_0_5EB8
00022EAC <AmiBlitz3.ab2@6677>   MOVEQ.l #$00,D5
00022EB0 <AmiBlitz3.ab2@6678>   SUBI.w #$30,D4
00022EB2 <AmiBlitz3.ab2@6679> RTS
00022EB6 <AmiBlitz3.ab2@6682>    CMP.w #$61,D1
00022EBA <AmiBlitz3.ab2@6683>    BNE.w JL_0_5EAE
00022EBE <AmiBlitz3.ab2@6684>   CMP.w #$30,D0
00022EC2 <AmiBlitz3.ab2@6685>    BCS.w JL_0_5EAE
00022EC6 <AmiBlitz3.ab2@6686>   CMP.w #$37,D0
00022ECA <AmiBlitz3.ab2@6687>    BHI.w JL_0_5EAE
00022ECC <AmiBlitz3.ab2@6688>   MOVE.w D0,D4
00022EF8 <AmiBlitz3.ab2@6689>    !fget                                                   ;bsr.w get1bytemain
00022F0A <AmiBlitz3.ab2@6690>    !compare3                                               ;bsr.w JL_0_5FC0
00022F0E <AmiBlitz3.ab2@6691>    BEQ.w JL_0_5EA6
00022F12 <AmiBlitz3.ab2@6692>   CMP.w #$2D,D0
00022F16 <AmiBlitz3.ab2@6693>    BEQ.w JL_0_5D68                                         ;movem
00022F1A <AmiBlitz3.ab2@6694>   CMP.w #$2F,D0
00022F1E <AmiBlitz3.ab2@6695>    BEQ.w JL_0_5D68
00022F22 <AmiBlitz3.ab2@6696> BRA.w JL_0_5EB8
00022F24 <AmiBlitz3.ab2@6699>   MOVEQ.l #1,d5
00022F28 <AmiBlitz3.ab2@6700>   SUBI.w #$30,D4
00022F2C <AmiBlitz3.ab2@6702> BRA 'l10
00022F2E <AmiBlitz3.ab2@6703>   ADDQ.w #8,d4
00022F30 <AmiBlitz3.ab2@6704>   MOVEQ #0,d5
00022F32 <AmiBlitz3.ab2@6705>   BSET d4,d5
00022F34 <AmiBlitz3.ab2@6706>   MOVE.w d5,d4
00022F36 <AmiBlitz3.ab2@6707>   MOVEQ.l #$0f,D5                                          ;01
00022F38 <AmiBlitz3.ab2@6710> RTS
00022F3C <AmiBlitz3.ab2@6714>   ORI.w #$20,D0
00022F3E <AmiBlitz3.ab2@6715>   MOVE.w D0,D4
00022F6A <AmiBlitz3.ab2@6716>    !fget                                                   ;bsr.w get1bytemain
00022F7C <AmiBlitz3.ab2@6719>   !compare3                                                ;bsr.w JL_0_5FC0
00022F80 <AmiBlitz3.ab2@6720>    BNE.w JL_0_5EF2
00022F84 <AmiBlitz3.ab2@6721>   CMP.w #$73,D1
00022F88 <AmiBlitz3.ab2@6722>    BNE.w JL_0_5EF2
00022F8C <AmiBlitz3.ab2@6723>   CMP.w #$70,D4
00022F90 <AmiBlitz3.ab2@6724>    BNE.w JL_0_5EDE
00022FA2 <AmiBlitz3.ab2@6725>    !compare3                                               ;bsr.w JL_0_5FC0
00022FA6 <AmiBlitz3.ab2@6726>    BNE.w JL_0_5F4E
00022FA8 <AmiBlitz3.ab2@6727>   MOVEQ.l #$07,D4
00022FAA <AmiBlitz3.ab2@6728>   MOVEQ.l #$01,D5
00022FAC <AmiBlitz3.ab2@6729> RTS
00022FB0 <AmiBlitz3.ab2@6733>   CMP.w #$72,D4
00022FB4 <AmiBlitz3.ab2@6734>    BNE.w JL_0_5F4E
00022FC6 <AmiBlitz3.ab2@6735>    !compare3                                               ;bsr.w JL_0_5FC0
00022FCA <AmiBlitz3.ab2@6736>    BNE.w JL_0_5F4E
00022FCC <AmiBlitz3.ab2@6737>   MOVEQ.l #$0D,D5
00022FCE <AmiBlitz3.ab2@6738> RTS
00022FD2 <AmiBlitz3.ab2@6742>   ORI.w #$20,D0
00022FD6 <AmiBlitz3.ab2@6743>   CMP.w #$63,D1
00022FDA <AmiBlitz3.ab2@6744>    BNE.w JL_0_5F22
00022FDE <AmiBlitz3.ab2@6745>   CMP.w #$63,D4
00022FE2 <AmiBlitz3.ab2@6746>    BNE.w JL_0_5F4E
00022FE6 <AmiBlitz3.ab2@6747>   CMP.w #$72,D0
00022FEA <AmiBlitz3.ab2@6748>    BNE.w JL_0_5F4E
00022FEE <AmiBlitz3.ab2@6749>    BSR.w get1bytemain                                      ;??wy not !fget
00022FF2 <AmiBlitz3.ab2@6750>    BEQ.w JL_0_5F1E
00022FF6 <AmiBlitz3.ab2@6751>   CMP.w #$2C,D0
00022FFA <AmiBlitz3.ab2@6752>    BNE.w JL_0_5F4E
00022FFC <AmiBlitz3.ab2@6755>   MOVEQ.l #$0C,D5
00022FFE <AmiBlitz3.ab2@6756> RTS
00023002 <AmiBlitz3.ab2@6760>   CMP.w #$75,D1
00023006 <AmiBlitz3.ab2@6761>    BNE.w JL_0_5F4E
0002300A <AmiBlitz3.ab2@6762>   CMP.w #$73,D4
0002300E <AmiBlitz3.ab2@6763>    BNE.w JL_0_5F4E
00023012 <AmiBlitz3.ab2@6764>   CMP.w #$70,D0
00023016 <AmiBlitz3.ab2@6765>    BNE.w JL_0_5F4E
0002301A <AmiBlitz3.ab2@6766>    BSR.w get1bytemain                                      ;??wy not !fget
0002301E <AmiBlitz3.ab2@6767>    BEQ.w JL_0_5F4A
00023022 <AmiBlitz3.ab2@6768>   CMP.w #$2C,D0
00023026 <AmiBlitz3.ab2@6769>    BNE.w JL_0_5F4E
00023028 <AmiBlitz3.ab2@6772>   MOVEQ.l #$0E,D5
0002302A <AmiBlitz3.ab2@6773> RTS
0002302C <AmiBlitz3.ab2@6777>   MOVEA.l A4,A5
00023030 <AmiBlitz3.ab2@6778>    BSR.w asmconst
00023042 <AmiBlitz3.ab2@6779>    !compare3                                               ;bsr.w JL_0_5FC0
00023046 <AmiBlitz3.ab2@6780>    BEQ.w JL_0_5FB8
0002304A <AmiBlitz3.ab2@6781>   CMP.w #$2E,D0
0002304E <AmiBlitz3.ab2@6782>    BEQ.w JL_0_5FA0
00023052 <AmiBlitz3.ab2@6783>   CMP.w #$28,D0
00023056 <AmiBlitz3.ab2@6784>    BNE.w syntaxerr
0002305A <AmiBlitz3.ab2@6785>    BSR.w get1bytemain                                      ;??wy not !fget
0002305E <AmiBlitz3.ab2@6786>   ORI.w #$20,D0
00023062 <AmiBlitz3.ab2@6787>   CMP.w #$70,D0
00023066 <AmiBlitz3.ab2@6788>    BNE.w JL_0_5F98
0002306A <AmiBlitz3.ab2@6789>    BSR.w get1bytemain                                      ;??wy not !fget
0002306E <AmiBlitz3.ab2@6790>   ORI.w #$20,D0
00023072 <AmiBlitz3.ab2@6791>   CMP.w #$63,D0
00023076 <AmiBlitz3.ab2@6792>    BNE.w syntaxerr
0002307A <AmiBlitz3.ab2@6793>    BSR.w get1bytemain                                      ;??wy not !fget
0002307E <AmiBlitz3.ab2@6794>    BSR.w JL_0_5FD4
00023080 <AmiBlitz3.ab2@6795>   ADDQ.w #4,D5
00023082 <AmiBlitz3.ab2@6796> RTS
00023086 <AmiBlitz3.ab2@6800>   BSR.w JL_0_5D46
0002308A <AmiBlitz3.ab2@6801> BRA.w JL_0_5FD4
0002308E <AmiBlitz3.ab2@6805>    BSR.w get1bytemain                                     ;??wy not !fget
00023092 <AmiBlitz3.ab2@6806>   ORI.w #$20,D0
00023096 <AmiBlitz3.ab2@6807>   CMP.w #$77,D0
0002309A <AmiBlitz3.ab2@6808>    BEQ.w JL_0_5FBC
0002309E <AmiBlitz3.ab2@6809>   CMP.w #$6C,D0
000230A2 <AmiBlitz3.ab2@6810>    BNE.w syntaxerr
000230A4 <AmiBlitz3.ab2@6813>   MOVEQ.l #$08,D5
000230A6 <AmiBlitz3.ab2@6814> RTS
000230A8 <AmiBlitz3.ab2@6818>   MOVEQ.l #$07,D5
000230AA <AmiBlitz3.ab2@6819> RTS
000230AC <AmiBlitz3.ab2@6823>   TST.w D0
000230B0 <AmiBlitz3.ab2@6824>    BEQ.w JL_0_5FD2
000230B4 <AmiBlitz3.ab2@6825>   CMP.w #$3A,D0
000230B8 <AmiBlitz3.ab2@6826>    BEQ.w JL_0_5FD2
000230BC <AmiBlitz3.ab2@6827>   CMP.w #$2C,D0
000230BE <AmiBlitz3.ab2@6830> RTS
000230C2 <AmiBlitz3.ab2@6834>   CMP.w #$2C,D0
000230C6 <AmiBlitz3.ab2@6835>    BNE.w JL_0_6054
000230CA <AmiBlitz3.ab2@6836>    BSR.w get1bytemain                                      ;??wy not !fget
000230CE <AmiBlitz3.ab2@6837>   ORI.w #$20,D0
000230D0 <AmiBlitz3.ab2@6838>   MOVEQ.l #$00,D1
000230D4 <AmiBlitz3.ab2@6839>   CMP.w #$64,D0
000230D8 <AmiBlitz3.ab2@6840>    BEQ.w JL_0_5FFA
000230DC <AmiBlitz3.ab2@6841>   CMP.w #$61,D0
000230E0 <AmiBlitz3.ab2@6842>    BNE.w syntaxerr
000230E4 <AmiBlitz3.ab2@6843>   BSET #$F,D1
000230E8 <AmiBlitz3.ab2@6846>    BSR.w get1bytemain                                      ;??wy not !fget
000230EC <AmiBlitz3.ab2@6847>   SUBI.w #$30,D0
000230F0 <AmiBlitz3.ab2@6848>    BMI.w syntaxerr
000230F4 <AmiBlitz3.ab2@6849>   CMP.w #$7,D0
000230F8 <AmiBlitz3.ab2@6850>    BHI.w syntaxerr
000230FA <AmiBlitz3.ab2@6851>   LSL.w #8,D0
000230FC <AmiBlitz3.ab2@6852>   LSL.w #4,D0
000230FE <AmiBlitz3.ab2@6853>   OR.w D0,D1
00023102 <AmiBlitz3.ab2@6854>    BSR.w get1bytemain                                      ;??wy not !fget
00023106 <AmiBlitz3.ab2@6855>   CMP.w #$2E,D0
0002310A <AmiBlitz3.ab2@6856>    BNE.w JL_0_6040
0002310E <AmiBlitz3.ab2@6857>    BSR.w get1bytemain                                      ;??wy not !fget
00023112 <AmiBlitz3.ab2@6858>   ORI.w #$20,D0
00023116 <AmiBlitz3.ab2@6859>   CMP.w #$77,D0
0002311A <AmiBlitz3.ab2@6860>    BEQ.w JL_0_603C
0002311E <AmiBlitz3.ab2@6861>   CMP.w #$6C,D0
00023122 <AmiBlitz3.ab2@6862>    BNE.w syntaxerr
00023126 <AmiBlitz3.ab2@6863>   BSET #$B,D1
0002312A <AmiBlitz3.ab2@6866>    BSR.w get1bytemain                                      ;??wy not !fget
0002312E <AmiBlitz3.ab2@6869>    CMP.b #"*",d0                                           ;020 * Mode
00023132 <AmiBlitz3.ab2@6870>             BNE 'l1
00023136 <AmiBlitz3.ab2@6871>             BSR.w get1bytemain                             ;??wy not !fget
0002313A <AmiBlitz3.ab2@6872>             CMP.b #"2",d0
0002313E <AmiBlitz3.ab2@6873>             BNE 'l2
00023142 <AmiBlitz3.ab2@6874>             OR.w #$200,d1
00023146 <AmiBlitz3.ab2@6875> BRA 'l1b
0002314A <AmiBlitz3.ab2@6878>             CMP.b #"4",d0
0002314E <AmiBlitz3.ab2@6879>             BNE 'l3
00023152 <AmiBlitz3.ab2@6880>             OR.w #$400,d1
00023156 <AmiBlitz3.ab2@6881> BRA 'l1b
0002315A <AmiBlitz3.ab2@6884>             CMP.b #"8",d0
0002315E <AmiBlitz3.ab2@6885>             BNE syntaxerr
00023162 <AmiBlitz3.ab2@6886>             OR.w #$600,d1
00023166 <AmiBlitz3.ab2@6889>         BSR.w get1bytemain                                 ;??wy not !fget
0002316A <AmiBlitz3.ab2@6892>   CMP.w #$29,D0
0002316E <AmiBlitz3.ab2@6893>    BNE.w syntaxerr
00023174 <AmiBlitz3.ab2@6894>   MOVE.w D1,extraword
00023176 <AmiBlitz3.ab2@6895>   MOVEQ.l #$06,D5
0002317A <AmiBlitz3.ab2@6896> BRA.w get1bytemain                                         ;??wy not !fget
0002317E <AmiBlitz3.ab2@6900>   CMP.w #")",D0                                            ;")"
00023182 <AmiBlitz3.ab2@6901>    BNE.w errorbracketmiss                                  ; was syntax error
00023184 <AmiBlitz3.ab2@6902>   MOVEQ.l #$05,D5
00023188 <AmiBlitz3.ab2@6903> BRA.w get1bytemain                                         ;??wy not !fget
0002318E <AmiBlitz3.ab2@6910>   MOVEA.l asmbuff,A0
00023194 <AmiBlitz3.ab2@6911>   MOVE.w ininclude,D1
0002319A <AmiBlitz3.ab2@6912>   OR.w inmacro,D1
0002319C <AmiBlitz3.ab2@6913>   MOVE.w D1,(A0)+                                          ;flag!
000231A0 <AmiBlitz3.ab2@6914>    BNE.w copyconst
000231A2 <AmiBlitz3.ab2@6915>   MOVE.l A5,-(A7)
000231A6 <AmiBlitz3.ab2@6916>    BSR.w copyconst
000231AC <AmiBlitz3.ab2@6917>   MOVEA.l asmbuff,A0
000231B0 <AmiBlitz3.ab2@6918>   CMP.w #$4,D1
000231B4 <AmiBlitz3.ab2@6919>    BLS.w asmconst__leave
000231BA <AmiBlitz3.ab2@6920>   TST.w lc
000231BE <AmiBlitz3.ab2@6921>    BNE.w asmconst__leave
000231C0 <AmiBlitz3.ab2@6922>   ADDQ.w #2,A0
000231C2 <AmiBlitz3.ab2@6923>   MOVE.l (A7)+,(A0)+
000231C4 <AmiBlitz3.ab2@6924>   CLR.b (A0)
000231CC <AmiBlitz3.ab2@6925>   MOVE.w #$0004,asmlen2                                    ;pointer + 0
000231CE <AmiBlitz3.ab2@6926> RTS
000231D0 <AmiBlitz3.ab2@6930>   NOT.w (A0)
000231D2 <AmiBlitz3.ab2@6931>   ADDQ.w #4,A7
000231D4 <AmiBlitz3.ab2@6932> RTS
000231D6 <AmiBlitz3.ab2@6935> lc:  Ds.w 1
000231DC <AmiBlitz3.ab2@6939>   CLR.w lc
000231DE <AmiBlitz3.ab2@6940>   MOVEQ.l #$00,D1
000231E0 <AmiBlitz3.ab2@6943>    ADDQ.w #1,D1                                            ;label name
0002320C <AmiBlitz3.ab2@6944>    !fget                                                   ;bsr.w get1bytemain
00023210 <AmiBlitz3.ab2@6945>    BEQ.w copyconst__done
00023214 <AmiBlitz3.ab2@6946>    CMP.w #$22,d0
00023218 <AmiBlitz3.ab2@6947>    BNE.s copyconst__loop_l10
0002321E <AmiBlitz3.ab2@6948>    NOT.w instringon
00023222 <AmiBlitz3.ab2@6951>    CMP.w #":",d0
00023226 <AmiBlitz3.ab2@6952>    BNE.s copyconst__loop_l11
0002322C <AmiBlitz3.ab2@6953>    TST.w instringon
00023230 <AmiBlitz3.ab2@6954>    BEQ copyconst__done
00023232 <AmiBlitz3.ab2@6957>   TST.w D0
00023236 <AmiBlitz3.ab2@6958>   BPL.w copyconst__notmi
00023238 <AmiBlitz3.ab2@6959>   MOVE.w D0,-(A7)
0002323A <AmiBlitz3.ab2@6960>   LSR.w #8,D0
0002323C <AmiBlitz3.ab2@6961>   MOVE.b D0,(A0)+
0002323E <AmiBlitz3.ab2@6962>   MOVE.w (A7)+,D0
00023240 <AmiBlitz3.ab2@6963>   MOVE.b D0,(A0)+
00023242 <AmiBlitz3.ab2@6964>   ADDQ.w #1,D1
00023246 <AmiBlitz3.ab2@6965> BRA.s copyconst__loop
0002324C <AmiBlitz3.ab2@6968>    TST.w instringon
00023250 <AmiBlitz3.ab2@6969>    BNE.w copyconst__putbyte
00023256 <AmiBlitz3.ab2@6970>    TST.b _dcb
0002325A <AmiBlitz3.ab2@6971>    BNE copyconst__notmi_l10
0002325E <AmiBlitz3.ab2@6972>    CMP.w #$28,D0
00023262 <AmiBlitz3.ab2@6973>    BEQ.w copyconst__done
00023266 <AmiBlitz3.ab2@6976>    CMP.w #$2C,D0
0002326A <AmiBlitz3.ab2@6977>    BEQ.w copyconst__done
0002326E <AmiBlitz3.ab2@6978>    CMP.b #"'",D0
00023272 <AmiBlitz3.ab2@6979>    BNE.w copyconst__putbyte
00023278 <AmiBlitz3.ab2@6980>    MOVE.w D0,lc                                     ;locallabels
0002327A <AmiBlitz3.ab2@6981>    MOVE.l A1,-(A7)
00023280 <AmiBlitz3.ab2@6982>    LEA lastgloballabel,A1
00023282 <AmiBlitz3.ab2@6983>    TST.b (A1)
00023286 <AmiBlitz3.ab2@6984>    BEQ.w nolocerr
00023288 <AmiBlitz3.ab2@6987>   ADDQ.w #1,D1
0002328A <AmiBlitz3.ab2@6988>   MOVE.b (A1)+,(A0)+
0002328E <AmiBlitz3.ab2@6989>    BNE.w copyconst__cloop
00023290 <AmiBlitz3.ab2@6990>   SUBQ.w #1,D1
00023292 <AmiBlitz3.ab2@6991>   SUBQ.w #1,A0
00023294 <AmiBlitz3.ab2@6992>   MOVEA.l (A7)+,A1
00023296 <AmiBlitz3.ab2@6995>   MOVE.b D0,(A0)+
0002329A <AmiBlitz3.ab2@6996> BRA.w copyconst__loop
0002329C <AmiBlitz3.ab2@6999>   CLR.b (A0)
000232A2 <AmiBlitz3.ab2@7000>   MOVE.w D1,asmlen2
000232A4 <AmiBlitz3.ab2@7001> RTS
000232AA <AmiBlitz3.ab2@7006>   CMP.l #$80ad,d0
000232AE <AmiBlitz3.ab2@7007>   BNE.s 'l12
000232B4 <AmiBlitz3.ab2@7008> JMP bssseg
000232BA <AmiBlitz3.ab2@7011>   CMP.l #$807f,d0
000232BE <AmiBlitz3.ab2@7012>     BNE.s 'l13
000232C4 <AmiBlitz3.ab2@7013> JMP chipseg
000232CA <AmiBlitz3.ab2@7016>   ADDQ.l #1,destpointer                                    ;even
000232D2 <AmiBlitz3.ab2@7017>   BCLR #$0,destpointer+3
000232D6 <AmiBlitz3.ab2@7018>   SUBI.w #$803C,D0
000232D8 <AmiBlitz3.ab2@7019>   LSL.w #2,D0
000232DE <AmiBlitz3.ab2@7020>   MOVEA.l #asmpnts,A0
000232E2 <AmiBlitz3.ab2@7021>   MOVEA.l $0(A0,D0.W),A0                                   ;begin inline assembler
000232E8 <AmiBlitz3.ab2@7022>   MOVE.w D0,temp1
000232EA <AmiBlitz3.ab2@7023>   MOVE.l A0,-(A7)
000232EC <AmiBlitz3.ab2@7024>   MOVEQ.l #$01,D1
00023318 <AmiBlitz3.ab2@7025>    !fget                                                   ;bsr.w get1bytemain
0002331C <AmiBlitz3.ab2@7026>   CMP.w #$2E,D0
00023320 <AmiBlitz3.ab2@7027>    BNE.w JL_0_6184
0002334C <AmiBlitz3.ab2@7028>   !fget                                                    ;bsr.w get1bytemain
00023350 <AmiBlitz3.ab2@7029>   ORI.w #$20,D0
00023354 <AmiBlitz3.ab2@7030>   CMP.w #$77,D0                                            ;long
00023358 <AmiBlitz3.ab2@7031>    BEQ.w JL_0_618A
0002335C <AmiBlitz3.ab2@7032>   CMP.w #$62,D0                                            ;byte
00023360 <AmiBlitz3.ab2@7033>    BEQ.w JL_0_617A
00023364 <AmiBlitz3.ab2@7034>   CMP.w #$6C,D0                                            ;word
00023368 <AmiBlitz3.ab2@7035>    BEQ.w JL_0_6196
0002336C <AmiBlitz3.ab2@7036>   CMP.w #"s",d0
00023370 <AmiBlitz3.ab2@7037>   BNE syntaxerr
00023374 <AmiBlitz3.ab2@7038> BRA.w JL_0_617A
00023376 <AmiBlitz3.ab2@7041>   MOVEQ.l #$00,D1
0002337A <AmiBlitz3.ab2@7042>   MOVE.w $8(A0),D0
0002337E <AmiBlitz3.ab2@7043> BRA.w JL_0_619E
00023380 <AmiBlitz3.ab2@7046>   MOVEQ.l #$04,D1
00023384 <AmiBlitz3.ab2@7047> BRA.w JL_0_61AE
00023386 <AmiBlitz3.ab2@7050>   MOVEQ.l #$04,D1
0002338A <AmiBlitz3.ab2@7051>   MOVE.w $8(A0),D0
0002338C <AmiBlitz3.ab2@7052>   LSR.w #4,D0
00023390 <AmiBlitz3.ab2@7053> BRA.w JL_0_619E
00023392 <AmiBlitz3.ab2@7056>   MOVEQ.l #$08,D1
00023396 <AmiBlitz3.ab2@7057>   MOVE.w $8(A0),D0
00023398 <AmiBlitz3.ab2@7058>   LSR.w #8,D0
0002339C <AmiBlitz3.ab2@7061>    ANDI.w #$F,D0
000233A0 <AmiBlitz3.ab2@7062>   CMP.w #$F,D0
000233A4 <AmiBlitz3.ab2@7063>    BNE.w 'cl60
000233AC <AmiBlitz3.ab2@7066>    CMP.l #"MULS",-6(a0)
000233B0 <AmiBlitz3.ab2@7067>    BNE 'c20
000233B6 <AmiBlitz3.ab2@7068>    MOVE.l #$4c000800,d1
000233BC <AmiBlitz3.ab2@7069> JMP do32
000233C4 <AmiBlitz3.ab2@7072>    CMP.l #"MULU",-6(a0)
000233C8 <AmiBlitz3.ab2@7073>    BNE 'c30
000233CE <AmiBlitz3.ab2@7074>    MOVE.l #$4c000000,d1
000233D4 <AmiBlitz3.ab2@7075> JMP do32
000233DC <AmiBlitz3.ab2@7078>    CMP.l #"DIVS",-6(a0)
000233E0 <AmiBlitz3.ab2@7079>    BNE 'c40
000233E6 <AmiBlitz3.ab2@7080>    MOVE.l #$4c400800,d1
000233EC <AmiBlitz3.ab2@7081> JMP do32
000233F4 <AmiBlitz3.ab2@7084>    CMP.l #"DIVU",-6(a0)
000233F8 <AmiBlitz3.ab2@7085>    BNE 'c50
000233FE <AmiBlitz3.ab2@7086>    MOVE.l #$4c400000,d1
00023404 <AmiBlitz3.ab2@7087> JMP do32
00023408 <AmiBlitz3.ab2@7090> BRA illsizeerr
00023434 <AmiBlitz3.ab2@7093>   !fget                                                    ;bsr.w get1bytemain
0002343A <AmiBlitz3.ab2@7096>   MOVE.w D1,asmsize
0002343C <AmiBlitz3.ab2@7097>   MOVEQ.l #-$01,D3
00023440 <AmiBlitz3.ab2@7098>    BSR.w reget
00023444 <AmiBlitz3.ab2@7099>    BEQ.w JL_0_6200
0002344E <AmiBlitz3.ab2@7100>   MOVE.l #ptr_parameterstore,asmbuff
00023458 <AmiBlitz3.ab2@7102>    MOVE.w oldqflag,instringon
0002345E <AmiBlitz3.ab2@7103>   MOVEA.l lastsourcepos,A5
00023462 <AmiBlitz3.ab2@7104>    BSR.w JL_0_5DC2
00023464 <AmiBlitz3.ab2@7105>   MOVE.l D4,D2                                             ;to src
00023466 <AmiBlitz3.ab2@7106>   MOVE.l D5,D3
00023470 <AmiBlitz3.ab2@7107>   MOVE.w asmlen2,asmlen
00023472 <AmiBlitz3.ab2@7108>   MOVEQ.l #-$01,D5
0002347C <AmiBlitz3.ab2@7109>   MOVE.w extraword,extraword2
00023480 <AmiBlitz3.ab2@7110>   CMP.w #$2C,D0                                            ;','
00023484 <AmiBlitz3.ab2@7111>    BNE.w JL_0_6200
0002348E <AmiBlitz3.ab2@7112>   MOVE.l #namebuff2,asmbuff
00023492 <AmiBlitz3.ab2@7113>    BSR.w JL_0_5DC2                                         ;dest
00023494 <AmiBlitz3.ab2@7116>   MOVEA.l (A7)+,A0
0002349A <AmiBlitz3.ab2@7117>   MOVEA.l destpointer,A1
0002349C <AmiBlitz3.ab2@7118>   MOVEA.l A1,A4
0002349E <AmiBlitz3.ab2@7119>   ADDQ.w #2,A1
000234A0 <AmiBlitz3.ab2@7120>   MOVE.w (A0),D1
000234A2 <AmiBlitz3.ab2@7121>   TST.w D3
000234A6 <AmiBlitz3.ab2@7122>    BMI.w JL_0_639E
000234AA <AmiBlitz3.ab2@7123>   MOVE.w $E(A0),D0
000234AE <AmiBlitz3.ab2@7124>    BPL.w JL_0_6264
000234B2 <AmiBlitz3.ab2@7125>   BTST #$0,D0
000234B6 <AmiBlitz3.ab2@7126>    BEQ.w JL_0_6240
000234BA <AmiBlitz3.ab2@7127>   CMP.w #$1,D5
000234BE <AmiBlitz3.ab2@7128>    BNE.w JL_0_6240
000234C2 <AmiBlitz3.ab2@7129>   CMP.w #$E,D3
000234C6 <AmiBlitz3.ab2@7130>    BEQ.w JL_0_6264
000234CC <AmiBlitz3.ab2@7131>   MOVE.w temp1,D0
000234CE <AmiBlitz3.ab2@7132>   ADDQ.w #4,D0
000234D2 <AmiBlitz3.ab2@7133> BRA.w JL_0_6256
000234D6 <AmiBlitz3.ab2@7136>   BTST #$1,D0
000234DA <AmiBlitz3.ab2@7137>    BEQ.w JL_0_6264
000234DE <AmiBlitz3.ab2@7138>   CMP.w #$B,D3
000234E2 <AmiBlitz3.ab2@7139>    BNE.w JL_0_6264
000234E8 <AmiBlitz3.ab2@7140>   MOVE.w temp1,D0
000234EA <AmiBlitz3.ab2@7143>   ADDQ.w #4,D0
000234F0 <AmiBlitz3.ab2@7144>   MOVEA.l #asmpnts,A0
000234F4 <AmiBlitz3.ab2@7145>   MOVEA.l $0(A0,D0.W),A0
000234F6 <AmiBlitz3.ab2@7146>   MOVE.w (A0),D1
00023500 <AmiBlitz3.ab2@7149>   MOVE.l #ptr_parameterstore,buff1
0002350A <AmiBlitz3.ab2@7150>   MOVE.l #namebuff2,buff2
0002350E <AmiBlitz3.ab2@7151>   MOVE.l $A(A0),D0
00023512 <AmiBlitz3.ab2@7152>    BEQ.w JL_0_62DC
00023514 <AmiBlitz3.ab2@7153>   MOVEA.l D0,A3
0002351A <AmiBlitz3.ab2@7154>   MOVE.w asmsize,D6
0002351C <AmiBlitz3.ab2@7157>    JSR (A3)
00023520 <AmiBlitz3.ab2@7158>    BPL.w JL_0_629A
00023524 <AmiBlitz3.ab2@7159>   CMP.w #-$2,D0
00023528 <AmiBlitz3.ab2@7160>    BEQ.w illsizeerr
0002352C <AmiBlitz3.ab2@7161> BRA.w illeaerr
00023530 <AmiBlitz3.ab2@7164>   BEQ.w JL_0_62DC
00023532 <AmiBlitz3.ab2@7165>   EXG.l D2,D4
00023534 <AmiBlitz3.ab2@7166>   EXG.l D3,D5
0002353A <AmiBlitz3.ab2@7167>   MOVE.l extraword,D6
0002353C <AmiBlitz3.ab2@7168>   SWAP D6
00023542 <AmiBlitz3.ab2@7169>   MOVE.l D6,extraword
0002354C <AmiBlitz3.ab2@7170>   MOVE.l #namebuff2,buff1
00023556 <AmiBlitz3.ab2@7171>   MOVE.l #ptr_parameterstore,buff2
0002355C <AmiBlitz3.ab2@7172>   MOVE.w asmlen,D6
00023562 <AmiBlitz3.ab2@7173>   MOVE.w asmlen2,D7
00023568 <AmiBlitz3.ab2@7174>   MOVE.w D6,asmlen2
0002356E <AmiBlitz3.ab2@7175>   MOVE.w D7,asmlen
00023578 <AmiBlitz3.ab2@7178>   MOVE.l buff1,asmbuff
0002357C <AmiBlitz3.ab2@7179>   MOVE.w $E(A0),D0
00023580 <AmiBlitz3.ab2@7180>    BEQ.w JL_0_6348
00023584 <AmiBlitz3.ab2@7181>    BMI.w JL_0_6348
00023588 <AmiBlitz3.ab2@7182>    CMP.w #$7000,d1
0002358C <AmiBlitz3.ab2@7183>    BNE 'skip
00023590 <AmiBlitz3.ab2@7184>    CMP.w #$b,d3
00023594 <AmiBlitz3.ab2@7185>    BNE illeaerr
00023598 <AmiBlitz3.ab2@7188>    CMP.w #$1,D0
0002359C <AmiBlitz3.ab2@7189>    BNE.w JL_0_630E
000235A0 <AmiBlitz3.ab2@7190>    CMP.w #$B,D3
000235A4 <AmiBlitz3.ab2@7191>    BNE.w JL_0_6348
000235A8 <AmiBlitz3.ab2@7194>    BSR.w insasm
000235AA <AmiBlitz3.ab2@7195>   MOVE.w D4,D2
000235AC <AmiBlitz3.ab2@7196>   MOVE.w D5,D3
000235B0 <AmiBlitz3.ab2@7197> BRA.w JL_0_6364
000235B4 <AmiBlitz3.ab2@7200>    CMP.w #$2,D0
000235B8 <AmiBlitz3.ab2@7201>    BNE.w JL_0_6324
000235BC <AmiBlitz3.ab2@7202>   CMP.w #$8,D3
000235C0 <AmiBlitz3.ab2@7203>    BNE.w illeaerr
000235C2 <AmiBlitz3.ab2@7204>   MOVEQ.l #$09,D3
000235C6 <AmiBlitz3.ab2@7205> BRA.w JL_0_6348
000235CA <AmiBlitz3.ab2@7208>    CMP.w #$3,D0
000235CE <AmiBlitz3.ab2@7209>    BEQ.w JL_0_6302
000235D2 <AmiBlitz3.ab2@7210>   CMP.w #$4,D0
000235D6 <AmiBlitz3.ab2@7211>    BEQ.w JL_0_6302
000235DA <AmiBlitz3.ab2@7212>   CMP.w #$5,D0
000235DE <AmiBlitz3.ab2@7213>    BNE.w JL_0_6348
000235E2 <AmiBlitz3.ab2@7214>   CMP.w #$8,D5
000235E6 <AmiBlitz3.ab2@7215>    BNE.w illeaerr
000235E8 <AmiBlitz3.ab2@7216>   OR.w D2,D1
000235EA <AmiBlitz3.ab2@7217>   MOVEQ.l #$09,D5
000235EE <AmiBlitz3.ab2@7220>   MOVE.w $2(A0),D6
000235F2 <AmiBlitz3.ab2@7221>   MOVE.b $6(A0),D7
000235F6 <AmiBlitz3.ab2@7222>   MOVEM.l D4-D5,-(A7)
000235FC <AmiBlitz3.ab2@7223>   MOVE.w extraword2,D4
00023600 <AmiBlitz3.ab2@7224>    BSR.w doea
00023604 <AmiBlitz3.ab2@7225>   MOVEM.l (A7)+,D2-D3
00023606 <AmiBlitz3.ab2@7226>   TST.w D3
0002360A <AmiBlitz3.ab2@7229>     BMI.w JL_0_6392
00023610 <AmiBlitz3.ab2@7230>   MOVE.w extraword,D4
00023614 <AmiBlitz3.ab2@7231>   MOVE.w $4(A0),D6
00023618 <AmiBlitz3.ab2@7232>   MOVE.b $7(A0),D7
00023622 <AmiBlitz3.ab2@7233>   MOVE.l buff2,asmbuff
0002362C <AmiBlitz3.ab2@7234>   MOVE.w asmlen2,asmlen
00023630 <AmiBlitz3.ab2@7235>    BSR.w doea
00023634 <AmiBlitz3.ab2@7236> BRA.w JL_0_63AA
00023638 <AmiBlitz3.ab2@7239>   MOVE.w $4(A0),D0
0002363C <AmiBlitz3.ab2@7240>    BNE.w illeaerr
00023640 <AmiBlitz3.ab2@7241> BRA.w JL_0_63AA
00023644 <AmiBlitz3.ab2@7245>   MOVE.w $2(A0),D0
00023648 <AmiBlitz3.ab2@7246>   OR.w $4(A0),D0
0002364C <AmiBlitz3.ab2@7247>    BNE.w illeaerr
00023650 <AmiBlitz3.ab2@7250>   MOVE.w $8(A0),D0
00023654 <AmiBlitz3.ab2@7251>   ANDI.w #$F000,D0
00023658 <AmiBlitz3.ab2@7252>   CMP.w #-$1000,D0
0002365C <AmiBlitz3.ab2@7253>    BEQ.w JL_0_63D2
0002365E <AmiBlitz3.ab2@7254>   LSR.w #8,D0
00023660 <AmiBlitz3.ab2@7255>   LSR.w #4,D0
00023664 <AmiBlitz3.ab2@7256>   MOVE.w $8(A0),D2
0002366A <AmiBlitz3.ab2@7257>   MOVE.w asmsize,D3
0002366C <AmiBlitz3.ab2@7258>   LSR.w D3,D2
00023670 <AmiBlitz3.ab2@7259>   ANDI.w #$F,D2
00023672 <AmiBlitz3.ab2@7260>   LSL.w D0,D2
00023674 <AmiBlitz3.ab2@7261>   OR.w D2,D1
0002367A <AmiBlitz3.ab2@7264>   CMPA.l destbufferend,A4
0002367E <AmiBlitz3.ab2@7265>    BCS.w JL_0_63E8
00023686 <AmiBlitz3.ab2@7267>   MOVE.w #$FFFF,dontwrite
0002368A <AmiBlitz3.ab2@7268> BRA.w JL_0_63EA
0002368C <AmiBlitz3.ab2@7271>   MOVE.w D1,(A4)
00023692 <AmiBlitz3.ab2@7274>   MOVE.l A1,destpointer
00023694 <AmiBlitz3.ab2@7275> RTS
0002369A <AmiBlitz3.ab2@7279>   MOVE.l destpointer,-(A7)
000236A0 <AmiBlitz3.ab2@7280>   MOVE.l A1,destpointer
000236A4 <AmiBlitz3.ab2@7281>    BSR.w addoff
000236AA <AmiBlitz3.ab2@7282>   MOVEA.l destpointer,A1
000236B0 <AmiBlitz3.ab2@7283>   MOVE.l (A7)+,destpointer
000236B2 <AmiBlitz3.ab2@7284> RTS
000236B6 <AmiBlitz3.ab2@7288>   MOVEM.l d2-d6,-(a7)
000236BC <AmiBlitz3.ab2@7289>   JSR stripspaces
000236C0 <AmiBlitz3.ab2@7290>   CMP.b #"d",(a5)+
000236C4 <AmiBlitz3.ab2@7291>   BNE noreg
000236C6 <AmiBlitz3.ab2@7292>   MOVE.b (a5)+,d0
000236CA <AmiBlitz3.ab2@7293>   CMP.b #$30,d0
000236CE <AmiBlitz3.ab2@7294>   BLT noreg
000236D2 <AmiBlitz3.ab2@7295>   CMP.b #$37,d0
000236D6 <AmiBlitz3.ab2@7296>   BGT noreg
000236DA <AmiBlitz3.ab2@7297>   SUB.b #$30,d0
000236DC <AmiBlitz3.ab2@7298>   MOVEQ #0,d3
000236DE <AmiBlitz3.ab2@7299>   MOVE.b d0,d3                                             ;reg1
000236E0 <AmiBlitz3.ab2@7300>   ASL.l #8,d3
000236E2 <AmiBlitz3.ab2@7301>   ASL.l #8,d3
000236E8 <AmiBlitz3.ab2@7302>   JSR stripspaces
000236EC <AmiBlitz3.ab2@7303>   CMP.b #",",(a5)+
000236F0 <AmiBlitz3.ab2@7304>   BNE noreg
000236F6 <AmiBlitz3.ab2@7305>   JSR stripspaces
000236FA <AmiBlitz3.ab2@7306>   CMP.b #"d",(a5)+
000236FE <AmiBlitz3.ab2@7307>   BNE noreg
00023700 <AmiBlitz3.ab2@7308>   MOVE.b (a5)+,d0
00023704 <AmiBlitz3.ab2@7309>   CMP.b #$30,d0
00023708 <AmiBlitz3.ab2@7310>   BLT noreg
0002370C <AmiBlitz3.ab2@7311>   CMP.b #$37,d0
00023710 <AmiBlitz3.ab2@7312>   BGT noreg
00023714 <AmiBlitz3.ab2@7313>   SUB.b #$30,d0
00023716 <AmiBlitz3.ab2@7314>   MOVEQ #0,d4
00023718 <AmiBlitz3.ab2@7315>   MOVE.b d0,d4                                             ;reg2
0002371A <AmiBlitz3.ab2@7316>   ASL.l #8,d4
0002371C <AmiBlitz3.ab2@7317>   ASL.l #4,d4
0002371E <AmiBlitz3.ab2@7318>   OR.b d0,d1
00023720 <AmiBlitz3.ab2@7319>   OR.l d3,d1
00023722 <AmiBlitz3.ab2@7320>   OR.l d4,d1
00023728 <AmiBlitz3.ab2@7321>   JSR writelong
0002372C <AmiBlitz3.ab2@7322>   MOVEM.l (a7)+,d2-d6
00023730 <AmiBlitz3.ab2@7323>   MOVEM.l d1/a1-a3,-(a7)
00023734 <AmiBlitz3.ab2@7324> BRA exit
00023738 <AmiBlitz3.ab2@7328>   MOVEM.l (a7)+,d2-d6
0002373E <AmiBlitz3.ab2@7329>   LEA errtext,a0
00023740 <AmiBlitz3.ab2@7330>   MOVE.l a0,-(a7)
00023746 <AmiBlitz3.ab2@7331> JMP handle_compileerror
0002374C <AmiBlitz3.ab2@7340>   MOVE.w dontwrite,D1
00023750 <AmiBlitz3.ab2@7341>    BNE.w asmfixer__done
00023758 <AmiBlitz3.ab2@7342>   BTST #$7,make_smallestcode
0002375C <AmiBlitz3.ab2@7343>    BEQ.w asmfixer__go
00023760 <AmiBlitz3.ab2@7344>   MOVE.w pass(PC),D1
00023764 <AmiBlitz3.ab2@7345>    BEQ.w asmfixer__done
0002376A <AmiBlitz3.ab2@7348>   MOVEA.l templabel,A2                                     ;insert labels in Code
00023772 <AmiBlitz3.ab2@7349>   MOVE.b #1,curtemplabel
0002377A <AmiBlitz3.ab2@7350>   MOVE.w #$FFFF,constmode
00023780 <AmiBlitz3.ab2@7351>   CLR.w regnum
0002378A <AmiBlitz3.ab2@7352>           MOVE.l #forthstack,forthsp
00023794 <AmiBlitz3.ab2@7353>           MOVE.l #precstack,precsp
00023798 <AmiBlitz3.ab2@7354>    BSR.w prepstack
0002379A <AmiBlitz3.ab2@7357>   MOVE.l A2,-(A7)
0002379E <AmiBlitz3.ab2@7358>    BSR.w chkstop
000237A0 <AmiBlitz3.ab2@7359>   MOVEA.l (A7)+,A2
000237A4 <AmiBlitz3.ab2@7360>   CMPA.w #$0,A2
000237A8 <AmiBlitz3.ab2@7361>    BEQ.w asmfixer__done2
000237AE <AmiBlitz3.ab2@7362>    CLR.b iee
000237B4 <AmiBlitz3.ab2@7363>   MOVE.l A2,asmbuff
000237B8 <AmiBlitz3.ab2@7364>   LEA $10(A2),A5
000237BC <AmiBlitz3.ab2@7365>   TST.b $F(A2)
000237C0 <AmiBlitz3.ab2@7366>    BNE.w asmfixer__skipo
000237C2 <AmiBlitz3.ab2@7367>   MOVEA.l (A5),A5                                          ;pointer to real text
000237C8 <AmiBlitz3.ab2@7370>    CLR.w asmtype
000237CC <AmiBlitz3.ab2@7371>    CMP.b #".",(a5)
000237D0 <AmiBlitz3.ab2@7372>    BNE.s asmfixer__skipo_l10
000237D2 <AmiBlitz3.ab2@7373>    MOVE.l a2,-(a7)
000237D4 <AmiBlitz3.ab2@7374>    ADDQ.l #1,a5
000237DA <AmiBlitz3.ab2@7375>    LEA newtypebase,a2
000237DE <AmiBlitz3.ab2@7376>    BSR getparameter2
000237E2 <AmiBlitz3.ab2@7377>    BEQ.w syntaxerr
000237E6 <AmiBlitz3.ab2@7378>    BSR findtype
000237EA <AmiBlitz3.ab2@7379>    BNE.w notypeerr
000237EE <AmiBlitz3.ab2@7380>    LEA $4(a2),a2
000237F2 <AmiBlitz3.ab2@7381>    BSR getparameter2
000237F6 <AmiBlitz3.ab2@7382>    BEQ.w syntaxerr
000237FA <AmiBlitz3.ab2@7383>    BSR.w findvariable2
000237FE <AmiBlitz3.ab2@7384>    BNE.w notypeerr
00023802 <AmiBlitz3.ab2@7385>    MOVE.w $4(a2),d3
00023804 <AmiBlitz3.ab2@7386>    EXT.l d3
00023808 <AmiBlitz3.ab2@7387> BRA asmfixer__skipo_l30b
0002380C <AmiBlitz3.ab2@7390>   CMP.b #"\",(a5)
00023810 <AmiBlitz3.ab2@7391>     BNE asmfixer__skipo_l20
00023812 <AmiBlitz3.ab2@7392>     ADDQ.l #1,a5
00023814 <AmiBlitz3.ab2@7393>    MOVE.l a2,-(a7)
00023816 <AmiBlitz3.ab2@7394>    MOVE.l a5,a4
0002381C <AmiBlitz3.ab2@7395>    LEA usedpath,a5
00023820 <AmiBlitz3.ab2@7396>    CMP.b #"*",(a5)
00023824 <AmiBlitz3.ab2@7397>    BNE asmfixer__skipo_lm1
00023826 <AmiBlitz3.ab2@7398>    ADDQ.l #1,a5
0002382A <AmiBlitz3.ab2@7401>    BSR.w getparameter2
0002382E <AmiBlitz3.ab2@7402>    BEQ.w syntaxerr
00023834 <AmiBlitz3.ab2@7403>    LEA varbase,A2
0002383C <AmiBlitz3.ab2@7404>    MOVE.b #1,newvariable
00023840 <AmiBlitz3.ab2@7405>    BSR.w findvariable
00023846 <AmiBlitz3.ab2@7406>    CLR.b newvariable
0002384C <AmiBlitz3.ab2@7407>    CMP.l #-1,d0
00023850 <AmiBlitz3.ab2@7408>    BEQ.w notypeerr
00023852 <AmiBlitz3.ab2@7409>    MOVE.l a4,a5
00023856 <AmiBlitz3.ab2@7410>    MOVE.l $a(a2),a2
0002385A <AmiBlitz3.ab2@7411>    LEA $4(a2),a2
0002385E <AmiBlitz3.ab2@7412>    BSR getparameter2
00023862 <AmiBlitz3.ab2@7413>    BEQ.w syntaxerr
00023866 <AmiBlitz3.ab2@7414>    BSR.w findvariable2
0002386A <AmiBlitz3.ab2@7415>    BNE.w notypeerr
0002386E <AmiBlitz3.ab2@7416>   MOVE.w $4(A2),D3
00023870 <AmiBlitz3.ab2@7417>   EXT.l D3
00023876 <AmiBlitz3.ab2@7420>    CMP.b #"[",-1(a5)
0002387A <AmiBlitz3.ab2@7421>    BNE asmfixer__skipo_l30c
0002387C <AmiBlitz3.ab2@7422>    MOVEQ #0,d0
0002387E <AmiBlitz3.ab2@7423>    MOVE.b (a5)+,d0
00023880 <AmiBlitz3.ab2@7424>    MOVE.l d3,-(a7)
00023882 <AmiBlitz3.ab2@7425>    MOVEQ #0,d3
00023888 <AmiBlitz3.ab2@7426>    JSR atoi
0002388A <AmiBlitz3.ab2@7427>    MOVE.l (a7)+,d1
0002388E <AmiBlitz3.ab2@7428>    MOVE.l $a(a2),a2
00023892 <AmiBlitz3.ab2@7429>    MOVE.w 8(a2),d0
00023894 <AmiBlitz3.ab2@7430>    MULS d0,d3
00023896 <AmiBlitz3.ab2@7431>    ADD.l d1,d3
00023898 <AmiBlitz3.ab2@7434>   MOVE.l (a7)+,a2
0002389C <AmiBlitz3.ab2@7435> BRA asmfixer__oko
000238A2 <AmiBlitz3.ab2@7438>   CMP.w #$c,$8(a2)
000238A6 <AmiBlitz3.ab2@7439>      BEQ asmfixer__skipo_lf1
000238AC <AmiBlitz3.ab2@7440>      CMP.w #$d,$8(a2)
000238B0 <AmiBlitz3.ab2@7441>      BEQ asmfixer__skipo_lf1
000238B6 <AmiBlitz3.ab2@7444>   JSR AJL_0_BF6E
000238BC <AmiBlitz3.ab2@7447>   MOVEA.l asmbuff,A2
000238C0 <AmiBlitz3.ab2@7448>    BEQ.w asmfixer__oko
000238C4 <AmiBlitz3.ab2@7449>   CMP.w #$28,D0
000238C8 <AmiBlitz3.ab2@7450>    BEQ.w asmfixer__oko
000238CC <AmiBlitz3.ab2@7451>   CMP.w #$2C,D0
000238D0 <AmiBlitz3.ab2@7452>    BEQ.w asmfixer__oko
000238D4 <AmiBlitz3.ab2@7453> BRA.w syntaxerr
000238DC <AmiBlitz3.ab2@7456>   MOVE.b #1,iee
000238E0 <AmiBlitz3.ab2@7457> BRA asmfixer__skipo_lf2
000238E4 <AmiBlitz3.ab2@7460>   MOVEA.l $4(A2),A1
000238E8 <AmiBlitz3.ab2@7462>   MOVE.w $8(A2),D1                                         ;labelmode
000238EC <AmiBlitz3.ab2@7463>   CMP.w #$5,D1
000238F0 <AmiBlitz3.ab2@7464>    BNE.w asmfixer__notdan
000238F4 <AmiBlitz3.ab2@7467>    BSR.w chkword                                         ;word
000238F6 <AmiBlitz3.ab2@7470>   MOVE.w D3,(A1)
000238FA <AmiBlitz3.ab2@7471> BRA.w asmfixer__next
000238FE <AmiBlitz3.ab2@7474>   CMP.w #$6,D1
00023902 <AmiBlitz3.ab2@7475>    BNE.w asmfixer__notdanxi
00023906 <AmiBlitz3.ab2@7478>    BSR.w chkbyte                                         ;byte
0002390A <AmiBlitz3.ab2@7481>   MOVE.b D3,$1(A1)
0002390E <AmiBlitz3.ab2@7482> BRA.w asmfixer__next
00023912 <AmiBlitz3.ab2@7485>    CMP.w #$11,D1                                           ;byte
00023916 <AmiBlitz3.ab2@7486>    BEQ.w asmfixer__isbyte2
0002391A <AmiBlitz3.ab2@7487>    CMP.w #$c,d1
0002391E <AmiBlitz3.ab2@7488>    BEQ asmfixer__single1
00023922 <AmiBlitz3.ab2@7489>    CMP.w #$d,d1
00023926 <AmiBlitz3.ab2@7490>    BEQ asmfixer__double1
0002392A <AmiBlitz3.ab2@7491>   CMP.w #$7,D1
0002392E <AmiBlitz3.ab2@7492>    BEQ.w asmfixer__word                                    ;word
00023932 <AmiBlitz3.ab2@7493>   CMP.w #$8,D1
00023936 <AmiBlitz3.ab2@7494>    BNE.w asmfixer__notabsl
0002393C <AmiBlitz3.ab2@7497>   MOVE.w asmtype,D1                                        ;long
00023940 <AmiBlitz3.ab2@7498>    BEQ.w asmfixer__notpcrel
00023944 <AmiBlitz3.ab2@7499>      BSR.w asmoff
00023946 <AmiBlitz3.ab2@7502>   MOVE.l D3,(A1)
0002394A <AmiBlitz3.ab2@7503> BRA.w asmfixer__next
00023950 <AmiBlitz3.ab2@7507>   fmove.s fp0,0(a1)
00023954 <AmiBlitz3.ab2@7508> BRA.w asmfixer__next
0002395A <AmiBlitz3.ab2@7512>   fmove.d fp0,0(a1)
0002395E <AmiBlitz3.ab2@7513> BRA.w asmfixer__next
00023962 <AmiBlitz3.ab2@7517>   CMP.w #$9,D1
00023966 <AmiBlitz3.ab2@7518>    BNE.w asmfixer__notdpc
00023968 <AmiBlitz3.ab2@7519>   SUB.l A1,D3                                              ;branchword
0002396C <AmiBlitz3.ab2@7520>    BSR.w chkword
0002396E <AmiBlitz3.ab2@7521>   MOVE.w D3,(A1)
00023972 <AmiBlitz3.ab2@7522> BRA.w asmfixer__next
00023976 <AmiBlitz3.ab2@7526>   CMP.w #$A,D1
0002397A <AmiBlitz3.ab2@7527>    BNE.w asmfixer__imm
0002397C <AmiBlitz3.ab2@7528>   SUB.l A1,D3                                              ;branchbyte
00023980 <AmiBlitz3.ab2@7529> BRA.w asmfixer__isbyte
00023984 <AmiBlitz3.ab2@7533>   CMP.w #$11,d1
00023988 <AmiBlitz3.ab2@7534>   BLE asmfixer__imm_org
0002398A <AmiBlitz3.ab2@7535>   MOVE.l a3,-(a7)
00023990 <AmiBlitz3.ab2@7536>   LEA pluginbase,a3
00023994 <AmiBlitz3.ab2@7537>   MOVE.l 8(a2),a0
00023996 <AmiBlitz3.ab2@7538>   JSR (a0)                                                 ;hook
00023998 <AmiBlitz3.ab2@7539>   MOVE.l (a7)+,a3
0002399C <AmiBlitz3.ab2@7540> BRA asmfixer__next
000239A0 <AmiBlitz3.ab2@7543>   MOVE.w $A(A2),D0
000239A4 <AmiBlitz3.ab2@7544>    BEQ.w asmfixer__noflag
000239A8 <AmiBlitz3.ab2@7545>   CMP.w #$1,D0
000239AC <AmiBlitz3.ab2@7546>    BEQ.w asmfixer__tocount
000239B0 <AmiBlitz3.ab2@7547>   CMP.w #$3,D0
000239B4 <AmiBlitz3.ab2@7548>    BEQ.w asmfixer__tomoveq
000239B8 <AmiBlitz3.ab2@7549>   CMP.w #$4,D0
000239BC <AmiBlitz3.ab2@7550>    BEQ.w asmfixer__totrap
000239C0 <AmiBlitz3.ab2@7553>   CMP.w #$B,D1                                             ;long
000239C4 <AmiBlitz3.ab2@7554>    BEQ.w asmfixer__isabsl
000239C8 <AmiBlitz3.ab2@7555> BRA asmfixer__word2                                              ;word
000239CE <AmiBlitz3.ab2@7558>   CMP.l #$F,D3
000239D2 <AmiBlitz3.ab2@7559>    BHI.w illtraperr
000239D4 <AmiBlitz3.ab2@7560>   OR.b D3,-(A1)
000239D8 <AmiBlitz3.ab2@7561> BRA.w asmfixer__next
000239DE <AmiBlitz3.ab2@7564>   CMP.l #$8,D3
000239E2 <AmiBlitz3.ab2@7565>    BHI.w illimmerr
000239E4 <AmiBlitz3.ab2@7566>   TST.l D3
000239E8 <AmiBlitz3.ab2@7567>    BEQ.w illimmerr
000239EC <AmiBlitz3.ab2@7568>   ANDI.w #$7,D3
000239EE <AmiBlitz3.ab2@7569>   LSL.w #8,D3
000239F0 <AmiBlitz3.ab2@7570>   LSL.w #1,D3
000239F2 <AmiBlitz3.ab2@7571>   OR.w D3,-(A1)
000239F6 <AmiBlitz3.ab2@7572> BRA.w asmfixer__next
000239FA <AmiBlitz3.ab2@7575>    BSR.w chkbyte
000239FC <AmiBlitz3.ab2@7576>   MOVE.b D3,-(A1)
000239FE <AmiBlitz3.ab2@7579>   MOVEA.l (A2),A2
00023A02 <AmiBlitz3.ab2@7580> BRA.w asmfixer__loop
00023A08 <AmiBlitz3.ab2@7583>   CLR.w constmode
00023A0E <AmiBlitz3.ab2@7586>   CLR.b curtemplabel
00023A10 <AmiBlitz3.ab2@7587> RTS
00023A12 <AmiBlitz3.ab2@7596>   BTST D3,D6
00023A16 <AmiBlitz3.ab2@7597>    BEQ.w illeaerr
00023A1A <AmiBlitz3.ab2@7598>    BSR.w makemode
00023A1E <AmiBlitz3.ab2@7599>   CMP.w #$7,D3
00023A22 <AmiBlitz3.ab2@7600>    BCS.w doea__skip
00023A24 <AmiBlitz3.ab2@7601>   MOVE.w D3,D2
00023A26 <AmiBlitz3.ab2@7602>   SUBQ.w #7,D2
00023A2A <AmiBlitz3.ab2@7603>   CMP.w #$5,D2
00023A2E <AmiBlitz3.ab2@7604>    BCS.w doea__skip0
00023A30 <AmiBlitz3.ab2@7605>   MOVEQ.l #$04,D2
00023A32 <AmiBlitz3.ab2@7608>   MOVEQ.l #$07,D3
00023A34 <AmiBlitz3.ab2@7611>   MOVE.b D7,D0
00023A38 <AmiBlitz3.ab2@7612>   ANDI.w #$F,D0
00023A3C <AmiBlitz3.ab2@7613>   CMP.w #$F,D0
00023A40 <AmiBlitz3.ab2@7614>    BEQ.w doea__skip2
00023A42 <AmiBlitz3.ab2@7615>   LSL.w D0,D3
00023A44 <AmiBlitz3.ab2@7616>   OR.w D3,D1
00023A46 <AmiBlitz3.ab2@7619>   LSR.w #4,D7
00023A4A <AmiBlitz3.ab2@7620>   ANDI.w #$F,D7
00023A4E <AmiBlitz3.ab2@7621>   CMP.w #$F,D7
00023A52 <AmiBlitz3.ab2@7622>    BEQ.w doea__skip3
00023A54 <AmiBlitz3.ab2@7623>   LSL.w D7,D2
00023A56 <AmiBlitz3.ab2@7624>   OR.w D2,D1
00023A58 <AmiBlitz3.ab2@7627> RTS
00023A5E <AmiBlitz3.ab2@7631>   CMP.l #$7F,D3
00023A62 <AmiBlitz3.ab2@7632>    BGT.w illdiserr
00023A68 <AmiBlitz3.ab2@7633>   CMP.l #$FFFFFF80,D3                                      ;#-128,d3 org source
00023A6C <AmiBlitz3.ab2@7634>    BLT.w illdiserr
00023A6E <AmiBlitz3.ab2@7635> RTS
00023A74 <AmiBlitz3.ab2@7639>   CMP.l #$7fff,D3
00023A78 <AmiBlitz3.ab2@7640>    BGT.w illdiserr
00023A7E <AmiBlitz3.ab2@7641>   CMP.l #$FFFF8000,D3                                      ;#-32768,d3 org source
00023A82 <AmiBlitz3.ab2@7642>    BLT.w illdiserr
00023A84 <AmiBlitz3.ab2@7643> RTS
00023A86 <AmiBlitz3.ab2@7648>   MOVE.b (a5)+,d0
00023A88 <AmiBlitz3.ab2@7649>   CMP.b d1,d0
00023A8C <AmiBlitz3.ab2@7650>   BEQ 'll10
00023A8E <AmiBlitz3.ab2@7651>   TST.b d0
00023A92 <AmiBlitz3.ab2@7652>   BNE 'll20
00023A94 <AmiBlitz3.ab2@7655>   SUBQ #1,a5
00023A96 <AmiBlitz3.ab2@7656> RTS
00023A98 <AmiBlitz3.ab2@7661>   MOVE.b (a5)+,d0
00023A9C <AmiBlitz3.ab2@7662>   CMP.b #",",d0
00023AA0 <AmiBlitz3.ab2@7663>   BEQ 'll10
00023AA4 <AmiBlitz3.ab2@7664>   CMP.b #";",d0
00023AA8 <AmiBlitz3.ab2@7665>   BEQ 'll10
00023AAC <AmiBlitz3.ab2@7666>  CMP.b #":",d0
00023AB0 <AmiBlitz3.ab2@7667>   BEQ 'll10
00023AB2 <AmiBlitz3.ab2@7670>   TST.b d0
00023AB6 <AmiBlitz3.ab2@7671>   BNE 'll20
00023AB8 <AmiBlitz3.ab2@7674>   SUBQ #1,a5
00023ABA <AmiBlitz3.ab2@7675> RTS
00023ABC <AmiBlitz3.ab2@7679>   ADD.l a2,d1
00023AC2 <AmiBlitz3.ab2@7680>   LEA tempspace,a1
00023AC4 <AmiBlitz3.ab2@7681>   MOVE.l d1,a0
00023AC6 <AmiBlitz3.ab2@7684>   MOVE.b (a0)+,(a1)+
00023ACA <AmiBlitz3.ab2@7685>   BNE.s 'l10
00023ACC <AmiBlitz3.ab2@7686>   SUBQ.l #1,a0
00023ACE <AmiBlitz3.ab2@7687>   SUBQ.l #1,a1
00023AD0 <AmiBlitz3.ab2@7690>   MOVE.b (a5)+,(a1)+
00023AD4 <AmiBlitz3.ab2@7691>   BNE.s 'l20
00023AD6 <AmiBlitz3.ab2@7692>   CLR.b (a1)
00023ADC <AmiBlitz3.ab2@7693>   LEA tempspace,a5
00023ADE <AmiBlitz3.ab2@7694> RTS
00023AE2 <AmiBlitz3.ab2@7698>   MOVEM.l D1-D2/A0,-(A7)
00023AE4 <AmiBlitz3.ab2@7699>   MOVE.l d0,d2
00023AE6 <AmiBlitz3.ab2@7700>   MOVEQ #0,d1
00023AE8 <AmiBlitz3.ab2@7701>   MOVE.l a5,a4
00023AEA <AmiBlitz3.ab2@7704>   ADDQ.l #1,d1
00023AEC <AmiBlitz3.ab2@7705>   MOVE.b (a5)+,d0
00023AF0 <AmiBlitz3.ab2@7706>   CMP.b #",",d0
00023AF4 <AmiBlitz3.ab2@7707>   BEQ 'll10
00023AF8 <AmiBlitz3.ab2@7708>   CMP.b #";",d0
00023AFC <AmiBlitz3.ab2@7709>   BEQ 'll10
00023B00 <AmiBlitz3.ab2@7710>   CMP.b #":",d0
00023B04 <AmiBlitz3.ab2@7711>   BEQ 'll10
00023B08 <AmiBlitz3.ab2@7712>   CMP.b #"(",d0
00023B0C <AmiBlitz3.ab2@7713>   BEQ 'll10
00023B0E <AmiBlitz3.ab2@7714>   TST.b d0
00023B12 <AmiBlitz3.ab2@7715>   BNE 'll20
00023B14 <AmiBlitz3.ab2@7718>   SUBQ #1,a5
00023B18 <AmiBlitz3.ab2@7719>   CMP.b #"'",(a4)
00023B1C <AmiBlitz3.ab2@7720>   BEQ 'llocal
00023B22 <AmiBlitz3.ab2@7721>   TST.w inmacro
00023B26 <AmiBlitz3.ab2@7722>   BNE 'lmacro
00023B28 <AmiBlitz3.ab2@7723>   MOVEQ.l #$14+4,D0
00023B2A <AmiBlitz3.ab2@7724>   ADD.l d1,d0
00023B2C <AmiBlitz3.ab2@7725>   MOVE.l d1,-(a7)
00023B2E <AmiBlitz3.ab2@7726>   MOVEQ.l #$01,D1
00023B34 <AmiBlitz3.ab2@7727>   MOVEA.l _execbase,A6
00023B3A <AmiBlitz3.ab2@7728>   MOVE.l mempool2,a0
00023B3E <AmiBlitz3.ab2@7729>   JSR _AllocPooled(a6)
00023B40 <AmiBlitz3.ab2@7731>   MOVE.l (a7)+,d1
00023B42 <AmiBlitz3.ab2@7732>   TST.l d0
00023B46 <AmiBlitz3.ab2@7733>   BEQ nomemory
00023B48 <AmiBlitz3.ab2@7734>   MOVEA.l D0,A0
00023B50 <AmiBlitz3.ab2@7736>   MOVE.w linenumat+2,$A(A0)
00023B56 <AmiBlitz3.ab2@7738>   MOVE.l templabel,(A0)
00023B5C <AmiBlitz3.ab2@7739>   MOVE.l A0,templabel
00023B64 <AmiBlitz3.ab2@7740>   MOVE.l destpointer,$4(A0)
00023B68 <AmiBlitz3.ab2@7741>   MOVE.l d2,$8(A0)
00023B6C <AmiBlitz3.ab2@7742>   LEA $E(A0),A0
00023B70 <AmiBlitz3.ab2@7743>   MOVE.b #$14,(A0)+
00023B72 <AmiBlitz3.ab2@7744>   CLR.b (a0)+
00023B74 <AmiBlitz3.ab2@7746>   MOVE.l a0,d2
00023B76 <AmiBlitz3.ab2@7747>   ADDQ.l #4,d2
00023B78 <AmiBlitz3.ab2@7748>   MOVE.l d2,(a0)+
00023B7A <AmiBlitz3.ab2@7751>   MOVE.b (a4)+,(a0)+
00023B7C <AmiBlitz3.ab2@7752>   SUBQ.l #1,d1
00023B80 <AmiBlitz3.ab2@7753>   BNE 'lc1
00023B82 <AmiBlitz3.ab2@7754>   CLR.b (a0)+
00023B88 <AmiBlitz3.ab2@7755>   MOVE.w linenumat,(a0)
00023B8C <AmiBlitz3.ab2@7756>   MOVEM.l (A7)+,D1-D2/A0
00023B8E <AmiBlitz3.ab2@7757> RTS
00023B90 <AmiBlitz3.ab2@7760>   MOVEQ.l #$10+2,D0
00023B92 <AmiBlitz3.ab2@7761>   ADD.l d1,d0
00023B96 <AmiBlitz3.ab2@7762>   MOVEM.l a4/d3,-(a7)
00023B98 <AmiBlitz3.ab2@7763>   MOVE.l d1,d3
00023B9A <AmiBlitz3.ab2@7764>   MOVEQ.l #$01,D1
00023BA0 <AmiBlitz3.ab2@7765>   MOVEA.l _execbase,A6
00023BA6 <AmiBlitz3.ab2@7766>   MOVE.l mempool2,a0
00023BAA <AmiBlitz3.ab2@7767>   JSR _AllocPooled(a6)
00023BAC <AmiBlitz3.ab2@7769>   TST.l d0
00023BB0 <AmiBlitz3.ab2@7770>   BEQ nomemory
00023BB2 <AmiBlitz3.ab2@7771>   MOVEA.l D0,A0
00023BBA <AmiBlitz3.ab2@7774>   MOVE.w linenumat+2,$C(A0)
00023BC0 <AmiBlitz3.ab2@7775>   MOVE.l templabel,(A0)
00023BC6 <AmiBlitz3.ab2@7776>   MOVE.l A0,templabel
00023BCE <AmiBlitz3.ab2@7777>   MOVE.l destpointer,$4(A0)
00023BD2 <AmiBlitz3.ab2@7778>   MOVE.l d2,$8(A0)
00023BD6 <AmiBlitz3.ab2@7779>   LEA $E(A0),A0
00023BD8 <AmiBlitz3.ab2@7780>   MOVE.b d3,(A0)+
00023BDE <AmiBlitz3.ab2@7781>   ADD.b #$10,-1(a0)
00023BE2 <AmiBlitz3.ab2@7782>   MOVE.b #$1,(a0)+
00023BE4 <AmiBlitz3.ab2@7783>   SUBQ.w #1,d3
00023BE6 <AmiBlitz3.ab2@7786>   MOVE.b (a4)+,(a0)+
00023BE8 <AmiBlitz3.ab2@7787>   SUBQ.l #1,d3
00023BEC <AmiBlitz3.ab2@7788>   BNE.s 'lm2
00023BEE <AmiBlitz3.ab2@7789>   CLR.b (a0)+
00023BF4 <AmiBlitz3.ab2@7790>   MOVE.w linenumat,(a0)
00023BF8 <AmiBlitz3.ab2@7791>   MOVEM.l (a7)+,d3/a4
00023BFC <AmiBlitz3.ab2@7792>   MOVEM.l (A7)+,D1-D2/A0
00023BFE <AmiBlitz3.ab2@7793> RTS
00023C04 <AmiBlitz3.ab2@7796>   LEA lastgloballabel,a1
00023C06 <AmiBlitz3.ab2@7799>   ADDQ.l #1,d1
00023C08 <AmiBlitz3.ab2@7800>   TST.b (a1)+
00023C0C <AmiBlitz3.ab2@7801>   BNE.s 'll11
00023C0E <AmiBlitz3.ab2@7802>   MOVEQ.l #$10+2,D0
00023C10 <AmiBlitz3.ab2@7803>   ADD.l d1,d0
00023C14 <AmiBlitz3.ab2@7804>   MOVEM.l a4/d3,-(a7)
00023C16 <AmiBlitz3.ab2@7805>   MOVE.l d1,d3
00023C18 <AmiBlitz3.ab2@7806>   MOVEQ.l #$01,D1
00023C1E <AmiBlitz3.ab2@7807>   MOVEA.l _execbase,A6
00023C24 <AmiBlitz3.ab2@7808>   MOVE.l mempool2,a0
00023C28 <AmiBlitz3.ab2@7809>   JSR _AllocPooled(a6)
00023C2A <AmiBlitz3.ab2@7811>   TST.l d0
00023C2E <AmiBlitz3.ab2@7812>   BEQ nomemory
00023C30 <AmiBlitz3.ab2@7813>   MOVEA.l D0,A0
00023C38 <AmiBlitz3.ab2@7816>   MOVE.w linenumat+2,$C(A0)
00023C3E <AmiBlitz3.ab2@7817>   MOVE.l templabel,(A0)
00023C44 <AmiBlitz3.ab2@7818>   MOVE.l A0,templabel
00023C4C <AmiBlitz3.ab2@7819>   MOVE.l destpointer,$4(A0)
00023C50 <AmiBlitz3.ab2@7820>   MOVE.l d2,$8(A0)
00023C54 <AmiBlitz3.ab2@7821>   LEA $E(A0),A0
00023C56 <AmiBlitz3.ab2@7822>   MOVE.b d3,(A0)+
00023C5C <AmiBlitz3.ab2@7823>   ADD.b #$10,-1(a0)
00023C60 <AmiBlitz3.ab2@7824>   MOVE.b #$1,(a0)+
00023C62 <AmiBlitz3.ab2@7825>   SUBQ.w #1,d3
00023C68 <AmiBlitz3.ab2@7826>   LEA lastgloballabel,a1
00023C6A <AmiBlitz3.ab2@7829>   SUBQ.l #1,d3
00023C6C <AmiBlitz3.ab2@7830>   MOVE.b (a1)+,(a0)+
00023C70 <AmiBlitz3.ab2@7831>   BNE.s 'lm3
00023C72 <AmiBlitz3.ab2@7832>   SUBQ.l #1,a0
00023C74 <AmiBlitz3.ab2@7835>   MOVE.b (a4)+,(a0)+
00023C76 <AmiBlitz3.ab2@7836>   SUBQ.l #1,d3
00023C7A <AmiBlitz3.ab2@7837>   BNE.s 'lm1
00023C7C <AmiBlitz3.ab2@7838>   CLR.b (a0)+
00023C82 <AmiBlitz3.ab2@7839>   MOVE.w linenumat,(a0)
00023C86 <AmiBlitz3.ab2@7840>   MOVEM.l (a7)+,d3/a4
00023C8A <AmiBlitz3.ab2@7841>   MOVEM.l (A7)+,D1-D2/A0
00023C8C <AmiBlitz3.ab2@7842> RTS
00023CB6 <AmiBlitz3.ab2@7846>   !basic
00023D0C <AmiBlitz3.ab2@7847>   error{!TRANS{"No memory available!!!\\nAB3 will terminate due to low memory!"}}
00023D1E <AmiBlitz3.ab2@7848>   loop Delay_ 1
00023D24 <AmiBlitz3.ab2@7849> Goto loop
00023D28 <AmiBlitz3.ab2@7853>   MOVEM.l D0-D2/A0,-(A7)
00023D2C <AmiBlitz3.ab2@7854>   MOVE.w $E(A0),-(A7)
00023D30 <AmiBlitz3.ab2@7855>    BPL.w insasm__ok
00023D32 <AmiBlitz3.ab2@7856>   CLR.w (A7)
00023D34 <AmiBlitz3.ab2@7859>   MOVE.l A1,-(A7)
00023D36 <AmiBlitz3.ab2@7860>   MOVEQ.l #$10+2,D0
00023D3C <AmiBlitz3.ab2@7861>   ADD.w asmlen,D0
00023D3E <AmiBlitz3.ab2@7862>   MOVE.w D0,D2
00023D40 <AmiBlitz3.ab2@7863>   MOVEQ.l #$01,D1
00023D46 <AmiBlitz3.ab2@7864>   MOVEA.l _execbase,A6
00023D4C <AmiBlitz3.ab2@7865>   MOVE.l mempool2,a0
00023D50 <AmiBlitz3.ab2@7866>   JSR _AllocPooled(a6)
00023D52 <AmiBlitz3.ab2@7868>   MOVEA.l D0,A0
00023D5A <AmiBlitz3.ab2@7871>   MOVE.w linenumat+2,$C(A0)
00023D60 <AmiBlitz3.ab2@7872>   MOVE.l templabel,(A0)
00023D66 <AmiBlitz3.ab2@7873>   MOVE.l A0,templabel
00023D6A <AmiBlitz3.ab2@7874>   MOVE.l (A7),$4(A0)
00023D6E <AmiBlitz3.ab2@7875>   MOVE.w d3,$8(A0)
00023D74 <AmiBlitz3.ab2@7876>   MOVE.w $4(A7),$A(A0)
00023D78 <AmiBlitz3.ab2@7877>   LEA $E(A0),A0
00023D7A <AmiBlitz3.ab2@7878>   MOVE.b D2,(A0)+                                           ;length
00023D80 <AmiBlitz3.ab2@7879>   MOVEA.l asmbuff,A1
00023D82 <AmiBlitz3.ab2@7880>   ADDQ.w #1,A1
00023D84 <AmiBlitz3.ab2@7881>   MOVE.b (A1)+,(A0)+                                        ;type - 0 = indirect,else direct
00023D88 <AmiBlitz3.ab2@7882>    BNE.w insasm__loop
00023D8A <AmiBlitz3.ab2@7883>   MOVE.l (A1)+,(A0)+
00023D90 <AmiBlitz3.ab2@7884>   MOVE.w linenumat,(a0)
00023D94 <AmiBlitz3.ab2@7885> BRA.w insasm__loopdone
00023D96 <AmiBlitz3.ab2@7888>    MOVE.b (A1)+,(A0)+
00023D9A <AmiBlitz3.ab2@7889>    BNE.w insasm__loop
00023DA0 <AmiBlitz3.ab2@7890>    MOVE.w linenumat,(a0)
00023DA2 <AmiBlitz3.ab2@7893>   MOVEA.l (A7)+,A1
00023DA4 <AmiBlitz3.ab2@7894>   ADDQ.w #2,A7
00023DA8 <AmiBlitz3.ab2@7895>   MOVEM.l (A7)+,D0-D2/A0
00023DAA <AmiBlitz3.ab2@7896> RTS
00023DAE <AmiBlitz3.ab2@7900>   CMP.w #$5,D3
00023DB2 <AmiBlitz3.ab2@7901>    BCS.w makemode__done
00023DB6 <AmiBlitz3.ab2@7902>   CMP.w #$B,D3
00023DBA <AmiBlitz3.ab2@7903>    BHI.w makemode__done2
00023DBE <AmiBlitz3.ab2@7904>    BEQ.w makemode__imm
00023DC2 <AmiBlitz3.ab2@7905>    BSR.w insasm
00023DC6 <AmiBlitz3.ab2@7906>   CMP.w #$5,D3
00023DCA <AmiBlitz3.ab2@7907>    BEQ.w makemode__word
00023DCE <AmiBlitz3.ab2@7908>   CMP.w #$6,D3
00023DD2 <AmiBlitz3.ab2@7909>    BEQ.w makemode__dxi
00023DD6 <AmiBlitz3.ab2@7910>   CMP.w #$7,D3
00023DDA <AmiBlitz3.ab2@7911>    BEQ.w makemode__word
00023DDE <AmiBlitz3.ab2@7912>   CMP.w #$8,D3
00023DE2 <AmiBlitz3.ab2@7913>    BEQ.w makemode__long
00023DE6 <AmiBlitz3.ab2@7914>   CMP.w #$9,D3
00023DEA <AmiBlitz3.ab2@7915>    BEQ.w makemode__word
00023DF0 <AmiBlitz3.ab2@7919>   CMPA.l destbufferend,A1
00023DF4 <AmiBlitz3.ab2@7920>    BCS.w makemode__ok7
00023DF6 <AmiBlitz3.ab2@7921>   ADDQ.w #2,A1
00023DF8 <AmiBlitz3.ab2@7922> RTS
00023DFA <AmiBlitz3.ab2@7925>   MOVE.w D4,(A1)+
00023DFC <AmiBlitz3.ab2@7926> RTS
00023E04 <AmiBlitz3.ab2@7929>   CMPI.w #$8,asmsize
00023E08 <AmiBlitz3.ab2@7930>    BCC.w makemode__immlong
00023E0A <AmiBlitz3.ab2@7931>   MOVEQ.l #$10,D3
00023E0E <AmiBlitz3.ab2@7932>    BSR.w insasm
00023E10 <AmiBlitz3.ab2@7933>   MOVEQ.l #$0B,D3
00023E14 <AmiBlitz3.ab2@7934> BRA.w makemode__word
00023E18 <AmiBlitz3.ab2@7937>   BSR.w insasm
00023E1A <AmiBlitz3.ab2@7940>   ADDQ.w #2,A1
00023E1C <AmiBlitz3.ab2@7943>   ADDQ.w #2,A1
00023E1E <AmiBlitz3.ab2@7944> RTS
00023E22 <AmiBlitz3.ab2@7947>   CMP.w #$F,D3
00023E26 <AmiBlitz3.ab2@7948>    BNE.w makemode__done
00023E2C <AmiBlitz3.ab2@7949>   CMPA.l destbufferend,A1
00023E30 <AmiBlitz3.ab2@7950>    BCS.w makemode__ok3
00023E32 <AmiBlitz3.ab2@7951>   ADDQ.w #2,A1
00023E34 <AmiBlitz3.ab2@7952>   ADDQ.w #4,A7
00023E36 <AmiBlitz3.ab2@7953> RTS
00023E38 <AmiBlitz3.ab2@7956>   MOVE.w D2,(A1)+
00023E3A <AmiBlitz3.ab2@7957>   ADDQ.w #4,A7
00023E3C <AmiBlitz3.ab2@7960> RTS
00023E40 <AmiBlitz3.ab2@7964>   BSR.w storeloc
00023E4A <AmiBlitz3.ab2@7965>   MOVE.l linenumat,oldline
00023E4C <AmiBlitz3.ab2@7966>   MOVEQ.l #$00,D1
00023E50 <AmiBlitz3.ab2@7967>    BSR.w get1bytemain
00023E54 <AmiBlitz3.ab2@7968>    BEQ.w JL_0_676E
00023E56 <AmiBlitz3.ab2@7969>   MOVEQ.l #$00,D3
00023E5A <AmiBlitz3.ab2@7970> BRA.w JL_0_6726
00023E5E <AmiBlitz3.ab2@7973>    BSR.w get1bytemain
00023E62 <AmiBlitz3.ab2@7974>    BNE.w JL_0_671C
00023E64 <AmiBlitz3.ab2@7977>   TST.w D3
00023E68 <AmiBlitz3.ab2@7978>    BNE.w brackets_                                         ;syntax error brackets
00023E6C <AmiBlitz3.ab2@7979> BRA.w JL_0_676C
00023E72 <AmiBlitz3.ab2@7982>    MOVE.w instringon,D4
00023E76 <AmiBlitz3.ab2@7984>      BEQ JL_0_6726
00023E78 <AmiBlitz3.ab2@7987>     MOVEQ #0,d0
00023E7A <AmiBlitz3.ab2@7988>      MOVE.b (a5)+,d0                                       ;fix "ue"
00023E80 <AmiBlitz3.ab2@7989>      MOVE.w d0,lastchar
00023E84 <AmiBlitz3.ab2@7990>      BEQ ready
00023E88 <AmiBlitz3.ab2@7991>      CMP.b #$22,d0
00023E8C <AmiBlitz3.ab2@7992>      BNE 'l1
00023E92 <AmiBlitz3.ab2@7993>      NOT.w instringon
00023E96 <AmiBlitz3.ab2@7994> BRA JL_0_670A
00023E9A <AmiBlitz3.ab2@7997>            CMP.b #"@",d0                                   ;expand line @@ 1. for parameter
00023E9E <AmiBlitz3.ab2@7998>            BNE 'l10
00023EA2 <AmiBlitz3.ab2@7999>            CMP.b #"@",(a5)
00023EA6 <AmiBlitz3.ab2@8000>            BNE 'l10
00023EAC <AmiBlitz3.ab2@8003>            TST.w ininclude
00023EB0 <AmiBlitz3.ab2@8004>            BNE 'inc
00023EB6 <AmiBlitz3.ab2@8005>            MOVE.l sourceline3,a5
00023EBC <AmiBlitz3.ab2@8006>            CMP.l #0,a5
00023EC0 <AmiBlitz3.ab2@8007>            BNE 'l11t
00023EC6 <AmiBlitz3.ab2@8008>            MOVEA.l sourceline,A5
00023EC8 <AmiBlitz3.ab2@8011>            MOVEA.l (A5),A5
00023ECE <AmiBlitz3.ab2@8012>            CMP.l #0,a5
00023ED2 <AmiBlitz3.ab2@8013>            BEQ JL_0_676C
00023ED8 <AmiBlitz3.ab2@8014>            MOVE.l a5,sourceline3
00023EDC <AmiBlitz3.ab2@8015>            LEA $9(A5),A5
00023EE0 <AmiBlitz3.ab2@8016> BRA 'l11
00023EE2 <AmiBlitz3.ab2@8019>            ADDQ.l #1,a5
00023EE4 <AmiBlitz3.ab2@8020>            TST.b (a5)
00023EE8 <AmiBlitz3.ab2@8021>            BNE 'inc
00023EEA <AmiBlitz3.ab2@8025>            ADDQ.l #1,a5
00023EEC <AmiBlitz3.ab2@8026>            TST.b (a5)
00023EF0 <AmiBlitz3.ab2@8027>            BEQ illeolerr
00023EF2 <AmiBlitz3.ab2@8028>            MOVE.l a5,-(a7)
00023EF6 <AmiBlitz3.ab2@8031>       CMP.b #" ",(a5)+
00023EFA <AmiBlitz3.ab2@8032>       BEQ 'l110
00023F00 <AmiBlitz3.ab2@8033>        CMP.b #";",-1(a5)
00023F02 <AmiBlitz3.ab2@8034>        MOVE.l (a7)+,a5
00023F06 <AmiBlitz3.ab2@8035>        BEQ 'l111
00023F0A <AmiBlitz3.ab2@8036> BRA JL_0_670A
00023F0E <AmiBlitz3.ab2@8039>    CMP.w #$29,D0
00023F12 <AmiBlitz3.ab2@8040>    BNE.w JL_0_673A
00023F14 <AmiBlitz3.ab2@8041>   TST.w D3
00023F18 <AmiBlitz3.ab2@8042>    BEQ.w JL_0_676C
00023F1A <AmiBlitz3.ab2@8045>   SUBQ.w #1,D3
00023F1E <AmiBlitz3.ab2@8046> BRA.w JL_0_670A
00023F22 <AmiBlitz3.ab2@8049>    CMP.w #$7D,D0
00023F26 <AmiBlitz3.ab2@8050>    BEQ.w JL_0_6734
00023F2A <AmiBlitz3.ab2@8051>   CMP.w #$28,D0
00023F2E <AmiBlitz3.ab2@8052>    BNE.w JL_0_6750
00023F30 <AmiBlitz3.ab2@8055>    ADDQ.w #1,D3
00023F34 <AmiBlitz3.ab2@8056> BRA.w JL_0_670A
00023F38 <AmiBlitz3.ab2@8059>   CMP.w #$7B,D0
00023F3C <AmiBlitz3.ab2@8060>    BEQ.w JL_0_674A
00023F40 <AmiBlitz3.ab2@8061>   CMP.w #$2C,D0
00023F44 <AmiBlitz3.ab2@8062>    BNE.w JL_0_670A
00023F46 <AmiBlitz3.ab2@8063>   TST.w D3
00023F4A <AmiBlitz3.ab2@8064>    BNE.w JL_0_670A
00023F4C <AmiBlitz3.ab2@8065>   ADDQ.w #1,D1
00023F50 <AmiBlitz3.ab2@8066> BRA.w JL_0_670A
00023F52 <AmiBlitz3.ab2@8069>   ADDQ.w #1,D1
00023F58 <AmiBlitz3.ab2@8072>   CLR.l sourceline3
00023F62 <AmiBlitz3.ab2@8073>   MOVE.l oldline,linenumat
00023F66 <AmiBlitz3.ab2@8074> BRA.w resloc
00023F6C <AmiBlitz3.ab2@8078>    CLR.w numreps
00023F6E <AmiBlitz3.ab2@8079>   MOVE.w D1,D0
00023F72 <AmiBlitz3.ab2@8080>   ANDI.w #$FF00,D0
00023F76 <AmiBlitz3.ab2@8081>    BEQ.w fetchlibps__noreps
00023F78 <AmiBlitz3.ab2@8082>   LSR.w #8,D0
00023F7A <AmiBlitz3.ab2@8083>   LSR.w #4,D0
00023F7E <AmiBlitz3.ab2@8084>    BEQ.w fetchlibps__skip
00023F80 <AmiBlitz3.ab2@8085>   SUB.b D0,D1
00023F8A <AmiBlitz3.ab2@8086>    MOVE.w regnum,regnumfunc
00023F90 <AmiBlitz3.ab2@8087>    MOVE.b funcparloop,-(a7)
00023F98 <AmiBlitz3.ab2@8088>    MOVE.b #0,funcparloop
00023F9E <AmiBlitz3.ab2@8089>    MOVE.l leftsidetype,-(a7)
00023FA4 <AmiBlitz3.ab2@8090>    MOVE.l rightsidetype,-(a7)
00023FAA <AmiBlitz3.ab2@8091>    CLR.l leftsidetype
00023FB0 <AmiBlitz3.ab2@8092>    CLR.l rightsidetype
00023FB6 <AmiBlitz3.ab2@8093>    MOVE.b blitzparloop,-(a7)
00023FBE <AmiBlitz3.ab2@8094>    MOVE.b #1,blitzparloop
00023FC2 <AmiBlitz3.ab2@8095>    BSR.w fetchpees2
00023FC8 <AmiBlitz3.ab2@8096>    MOVE.b (a7)+,blitzparloop
00023FCE <AmiBlitz3.ab2@8097>    MOVE.l (a7)+,rightsidetype
00023FD4 <AmiBlitz3.ab2@8098>    MOVE.l (a7)+,leftsidetype
00023FDA <AmiBlitz3.ab2@8099>    MOVE.b (a7)+,funcparloop
00023FDE <AmiBlitz3.ab2@8100>   CMP.w #$2C,D0
00023FE2 <AmiBlitz3.ab2@8101>    BNE.w syntaxerr
00023FE4 <AmiBlitz3.ab2@8104>   MOVE.w D1,D2
00023FE6 <AmiBlitz3.ab2@8105>   LSR.w #8,D2
00023FEA <AmiBlitz3.ab2@8106>   ANDI.w #$7,D2
00023FEC <AmiBlitz3.ab2@8109>    CMP.b D2,D1
00023FF0 <AmiBlitz3.ab2@8110>    BCS.w fetchlibps__repsdone
00023FF2 <AmiBlitz3.ab2@8111>   SUB.b D2,D1
00023FF6 <AmiBlitz3.ab2@8112>   MOVEM.l D2/A2,-(A7)
00023FF8 <AmiBlitz3.ab2@8113>   MOVE.w D2,D0
00023FFE <AmiBlitz3.ab2@8114>   MOVE.b funcparloop,-(a7)
00024006 <AmiBlitz3.ab2@8115>   MOVE.b #0,funcparloop
0002400C <AmiBlitz3.ab2@8116>   MOVE.l leftsidetype,-(a7)
00024012 <AmiBlitz3.ab2@8117>   MOVE.l rightsidetype,-(a7)
00024018 <AmiBlitz3.ab2@8118>   CLR.l leftsidetype
0002401E <AmiBlitz3.ab2@8119>   CLR.l rightsidetype
00024024 <AmiBlitz3.ab2@8120>   MOVE.b blitzparloop,-(a7)
0002402C <AmiBlitz3.ab2@8121>   MOVE.b #1,blitzparloop
00024030 <AmiBlitz3.ab2@8122>   BSR.w fetchpees4
00024036 <AmiBlitz3.ab2@8123>   MOVE.b (a7)+,blitzparloop
0002403C <AmiBlitz3.ab2@8124>   MOVE.l (a7)+,rightsidetype
00024042 <AmiBlitz3.ab2@8125>   MOVE.l (a7)+,leftsidetype
00024048 <AmiBlitz3.ab2@8126>   MOVE.b (a7)+,funcparloop
0002404C <AmiBlitz3.ab2@8127>   MOVEM.l (A7)+,D2/A2
00024052 <AmiBlitz3.ab2@8128>   ADDQ.w #1,numreps
00024056 <AmiBlitz3.ab2@8129> BRA.w fetchlibps__rloop
0002405C <AmiBlitz3.ab2@8132>    MOVE.w numreps,D3
00024060 <AmiBlitz3.ab2@8133>    BEQ.w syntaxerr
00024062 <AmiBlitz3.ab2@8134>   ADDA.w D2,A2
00024066 <AmiBlitz3.ab2@8135>   ANDI.w #$FF,D1
0002406A <AmiBlitz3.ab2@8136>    BEQ.w fetchlibps__done
0002406E <AmiBlitz3.ab2@8137>   CMP.w #$2C,D0
00024072 <AmiBlitz3.ab2@8138>    BNE.w syntaxerr
00024074 <AmiBlitz3.ab2@8141>    MOVE.w D1,D0
00024078 <AmiBlitz3.ab2@8142>    BNE.w fetchpees2b
0002407A <AmiBlitz3.ab2@8145> RTS
00024080 <AmiBlitz3.ab2@8148>   MOVE.b funcparloop,-(a7)
00024086 <AmiBlitz3.ab2@8149>   MOVE.l leftsidetype,-(a7)
0002408C <AmiBlitz3.ab2@8150>   MOVE.l rightsidetype,-(a7)
00024092 <AmiBlitz3.ab2@8151>   CLR.l leftsidetype
00024098 <AmiBlitz3.ab2@8152>   CLR.l rightsidetype
000240A0 <AmiBlitz3.ab2@8153>   MOVE.b #0,funcparloop
000240A6 <AmiBlitz3.ab2@8154>   MOVE.b blitzparloop,-(a7)
000240AE <AmiBlitz3.ab2@8155>   MOVE.b #1,blitzparloop
000240B2 <AmiBlitz3.ab2@8156>   BSR.w fetchpees2
000240B8 <AmiBlitz3.ab2@8157>   MOVE.b (a7)+,blitzparloop
000240BE <AmiBlitz3.ab2@8158>   MOVE.l (a7)+,rightsidetype
000240C4 <AmiBlitz3.ab2@8159>   MOVE.l (a7)+,leftsidetype
000240CA <AmiBlitz3.ab2@8160>   MOVE.b (a7)+,funcparloop
000240CC <AmiBlitz3.ab2@8161> RTS
000240D0 <AmiBlitz3.ab2@8165> ptype:    Dc.b $3F,$3C,$00,$00                             ;MOVE.W  #$0000,-(A7)
000240D2 <AmiBlitz3.ab2@8168> partostack:  Ds.w 1                                        ;pmode org source
000240D4 <AmiBlitz3.ab2@8172>   MOVEQ.l #$01,D2
000240D8 <AmiBlitz3.ab2@8173> BRA.w fetchpees3
000240DA <AmiBlitz3.ab2@8176>   MOVEQ.l #$00,D2
000240DE <AmiBlitz3.ab2@8179>   ANDI.w #$F,D0
000240E4 <AmiBlitz3.ab2@8187>   CLR.w parnum
000240E6 <AmiBlitz3.ab2@8188>   MOVE.w D1,-(A7)
000240EA <AmiBlitz3.ab2@8189>   MOVE.w partostack(PC),-(A7)                              ;in case of recursion
000240F0 <AmiBlitz3.ab2@8190>   MOVE.w D2,partostack
000240F2 <AmiBlitz3.ab2@8191>   MOVE.w D0,-(A7)
000240F6 <AmiBlitz3.ab2@8192>   CMP.w #"@@",(a5)                                         ;was l15
000240FA <AmiBlitz3.ab2@8193>   BNE fetchpees__loop
00024100 <AmiBlitz3.ab2@8194>   TST.w ininclude                                          ;merge macrolines
00024104 <AmiBlitz3.ab2@8195>   BNE errorjoin
0002410A <AmiBlitz3.ab2@8196>        MOVEA.l sourceline,A5
0002410C <AmiBlitz3.ab2@8199>            MOVEA.l (A5),A5
00024112 <AmiBlitz3.ab2@8200>            MOVE.l a5,sourceline
00024116 <AmiBlitz3.ab2@8201>            LEA $9(A5),A5
0002411C <AmiBlitz3.ab2@8202>            ADDQ.l #1,linenumat
0002411E <AmiBlitz3.ab2@8206>   MOVE.b (A2)+,D2                                          ;parameterloop   d2=vartype
00024122 <AmiBlitz3.ab2@8207>    BNE.w fetchpees__skip0
00024128 <AmiBlitz3.ab2@8208>   MOVE.w userp,D2                                          ;user selected type
0002412A <AmiBlitz3.ab2@8210>    MOVE.l A2,-(A7)
00024130 <AmiBlitz3.ab2@8211>    ADDQ.w #1,parnum
00024136 <AmiBlitz3.ab2@8212>    TST.b funccall
0002413A <AmiBlitz3.ab2@8213>    BEQ fetchpees__skip0_l1
00024142 <AmiBlitz3.ab2@8214>    CMP.w #6,parnum
00024146 <AmiBlitz3.ab2@8215>    BLE fetchpees__skip0_l1
0002414A <AmiBlitz3.ab2@8216>    CMP.w #7,d2
00024150 <AmiBlitz3.ab2@8222>    TST.b fpu
00024154 <AmiBlitz3.ab2@8223>    BEQ fetchpees__skip0_old
0002415A <AmiBlitz3.ab2@8224>    TST.w regnumfunc
0002415E <AmiBlitz3.ab2@8225>    BEQ fetchpees__skip0_old
00024164 <AmiBlitz3.ab2@8226>    CMP.w #$48e7,-4(a4)
00024168 <AmiBlitz3.ab2@8227>    BNE fetchpees__skip0_old
0002416A <AmiBlitz3.ab2@8228>    MOVEQ #0,d1
00024170 <AmiBlitz3.ab2@8229>    MOVE.w regnum,d1
00024176 <AmiBlitz3.ab2@8230>    CMP regnumfunc,d1                                       ;fpu reg function save
0002417A <AmiBlitz3.ab2@8231>    BGE fetchpees__skip0_old
0002417C <AmiBlitz3.ab2@8232>    ASL.w #7,d1
0002417E <AmiBlitz3.ab2@8233>    MOVE.l d0,-(a7)
00024184 <AmiBlitz3.ab2@8234>    MOVE.w regnumfunc,d0
0002418A <AmiBlitz3.ab2@8235>    CLR.w regmask
00024190 <AmiBlitz3.ab2@8237>    BSET d0,regmask
00024192 <AmiBlitz3.ab2@8238>    SUBQ #1,d0
00024196 <AmiBlitz3.ab2@8239>    BNE fetchpees__skip0_loop
00024198 <AmiBlitz3.ab2@8240>     MOVEQ #0,d0
0002419E <AmiBlitz3.ab2@8243>       BTST d0,regmask
000241A2 <AmiBlitz3.ab2@8244>       BEQ fetchpees__skip0_noa7
000241A4 <AmiBlitz3.ab2@8245>       MOVEQ #0,d1
000241A6 <AmiBlitz3.ab2@8246>       MOVE.w d0,d1
000241A8 <AmiBlitz3.ab2@8247>       SUBQ.w #1,d1
000241AA <AmiBlitz3.ab2@8248>       ASL #7,d1
000241B0 <AmiBlitz3.ab2@8249>       OR.l #$f2277400,d1                                   ;fmove.d
000241B4 <AmiBlitz3.ab2@8251>       BSR writelong
000241BA <AmiBlitz3.ab2@8253>       ADDQ.l #2,stacktrack
000241C0 <AmiBlitz3.ab2@8254>       MOVE.l stacktrack,d1
000241C6 <AmiBlitz3.ab2@8255>       CMP.l #180,d1
000241CA <AmiBlitz3.ab2@8256>       BGT conmemerr                                        ;formel too complex
000241CC <AmiBlitz3.ab2@8257>       MOVE.l a0,-(a7)
000241D2 <AmiBlitz3.ab2@8258>       LEA fpustackbase,a0
000241DA <AmiBlitz3.ab2@8259>       MOVE.w regmask,0(a0,d1)
000241DC <AmiBlitz3.ab2@8260>       MOVE.l (a7)+,a0
000241DE <AmiBlitz3.ab2@8263>       ADDQ.w #1,d0
000241E4 <AmiBlitz3.ab2@8264>       CMP.w regnumfunc,d0
000241E8 <AmiBlitz3.ab2@8265>       BLE fetchpees__skip0_loop2
000241EA <AmiBlitz3.ab2@8268>       MOVE.l (a7)+,d0
000241F0 <AmiBlitz3.ab2@8271>      MOVE.l currentfunccall,-(a7)
000241F6 <AmiBlitz3.ab2@8272>      MOVE.w parnum,-(a7)
000241FC <AmiBlitz3.ab2@8273>      TST.l rightsidetype
00024200 <AmiBlitz3.ab2@8274>      BSR.w JL_0_6836
00024206 <AmiBlitz3.ab2@8275>      MOVE.w (a7)+,parnum
0002420C <AmiBlitz3.ab2@8277>    MOVE.l (a7)+,currentfunccall
00024212 <AmiBlitz3.ab2@8279>    TST.b typecheck                            ;typecheck for function call
00024216 <AmiBlitz3.ab2@8280>    BEQ 'notypecheck
0002421C <AmiBlitz3.ab2@8281>    TST.b notypecheck
00024220 <AmiBlitz3.ab2@8282>    BNE 'notypecheck
00024226 <AmiBlitz3.ab2@8283>    TST.b blitzparloop
0002422A <AmiBlitz3.ab2@8284>    BNE 'isblitzlibcall                                    ;no typecheck for blitzlibs currently
00024234 <AmiBlitz3.ab2@8285>    CMP.l #0,currentfunccall
00024238 <AmiBlitz3.ab2@8286>    BEQ 'isblitzlibcall
0002423C <AmiBlitz3.ab2@8287>    MOVEM.l a0/a1,-(a7)
00024242 <AmiBlitz3.ab2@8288>    MOVE.l currentfunccall,a0
00024248 <AmiBlitz3.ab2@8289>    MOVE.w parnum,d1
0002424E <AmiBlitz3.ab2@8290>    TST.b isconstantvalue
00024252 <AmiBlitz3.ab2@8291>    BEQ 'noconstant
0002425C <AmiBlitz3.ab2@8292>    CMP.l #0,lastconstantvalue
00024260 <AmiBlitz3.ab2@8293>    BEQ 'isnull
00024264 <AmiBlitz3.ab2@8295>    MOVE.l funcstruct_parametertype-4(a0,d1*4),a0
0002426A <AmiBlitz3.ab2@8296>    CMP.l #0,a0
0002426E <AmiBlitz3.ab2@8297>    BEQ 'notype
00024276 <AmiBlitz3.ab2@8298>    CMP.l #$100,4(a0)
0002427A <AmiBlitz3.ab2@8299>    BLE 'notype
00024280 <AmiBlitz3.ab2@8300>    MOVE.l lasttoken,d1
00024284 <AmiBlitz3.ab2@8301>    CMP.w #$b581,d1                   ; ok, when token for null
00024288 <AmiBlitz3.ab2@8302>    BEQ 'isnull
0002428E <AmiBlitz3.ab2@8303>    TST.l typetocast
00024292 <AmiBlitz3.ab2@8304>    BEQ 'nocast
00024298 <AmiBlitz3.ab2@8305>    MOVE.l typetocast,a1
0002429C <AmiBlitz3.ab2@8306>    BRA 'typecheck
000242A2 <AmiBlitz3.ab2@8308>    MOVE.l rightsidetype,a1
000242A8 <AmiBlitz3.ab2@8309>    CMP.l #0,a1
000242AC <AmiBlitz3.ab2@8310>    BEQ 'notype
000242B4 <AmiBlitz3.ab2@8311> 'typecheck   CMP.l #$100,4(a1)
000242B6 <AmiBlitz3.ab2@8313>    CMP.l a0,a1
000242BA <AmiBlitz3.ab2@8314>    BEQ 'ok
000242C2 <AmiBlitz3.ab2@8316>    CMP.l #$100,4(a1)                 ; is a type here
000242C6 <AmiBlitz3.ab2@8317>    BLE 'error
000242CA <AmiBlitz3.ab2@8318>    MOVE.l 4(a1),a1                   ; load the address of type.
000242CE <AmiBlitz3.ab2@8319>    CMP.l $a(a1),a0                   ; check if the bigger type contain in first place same type as the function need
000242D2 <AmiBlitz3.ab2@8320>    BEQ 'ok
000242D8 <AmiBlitz3.ab2@8321> 'error: JMP   error_convert_types    ; for syntax 4
000242DE <AmiBlitz3.ab2@8325>    CLR.l typetocast
000242E2 <AmiBlitz3.ab2@8326>    MOVEM.l (a7)+,a0/a1
000242E8 <AmiBlitz3.ab2@8330>    CLR.l lastfunction
000242EE <AmiBlitz3.ab2@8331>    TST.b fpu
000242F2 <AmiBlitz3.ab2@8332>    BEQ fetchpees__skip0_noprint
000242F4 <AmiBlitz3.ab2@8333>   MOVE.l (a7),a2
000242F6 <AmiBlitz3.ab2@8334>   ADDQ.l #1,a2
000242FA <AmiBlitz3.ab2@8335>    CMP.b #5,d2
000242FE <AmiBlitz3.ab2@8336>   BNE fetchpees__skip0_noprint
00024304 <AmiBlitz3.ab2@8337>   CMP.b #$5d,24(a2)
00024308 <AmiBlitz3.ab2@8338>   BNE fetchpees__skip0_noprint
0002430E <AmiBlitz3.ab2@8339>   CMP.b #$81,25(a2)
00024312 <AmiBlitz3.ab2@8340>   BLT fetchpees__skip0_noprint
00024318 <AmiBlitz3.ab2@8341>   CMP.b #$86,25(a2)
0002431C <AmiBlitz3.ab2@8342>   BEQ fetchpees__skip0_ok
00024322 <AmiBlitz3.ab2@8343>   CMP.b #$87,25(a2)
00024326 <AmiBlitz3.ab2@8344>   BEQ fetchpees__skip0_ok
0002432C <AmiBlitz3.ab2@8345>   CMP.b #$88,25(a2)
00024330 <AmiBlitz3.ab2@8346>   BEQ fetchpees__skip0_ok
00024336 <AmiBlitz3.ab2@8347>   CMP.b #$83,25(a2)
0002433A <AmiBlitz3.ab2@8348>   BGT fetchpees__skip0_noprint
00024340 <AmiBlitz3.ab2@8351>   MOVE.l destpointer,a4
00024346 <AmiBlitz3.ab2@8352>   CMP.w #$2f00,-2(a4)
0002434A <AmiBlitz3.ab2@8353>   BNE fetchpees__skip0_noprint
00024350 <AmiBlitz3.ab2@8354>   SUBQ.l #2,destpointer
00024356 <AmiBlitz3.ab2@8356>   MOVE.l #$f2277400,d1
0002435A <AmiBlitz3.ab2@8357>   BSR writelong                                            ;fmove.d fp0,-(a7)
00024360 <AmiBlitz3.ab2@8358>   ADDQ #4,a2offset
00024366 <AmiBlitz3.ab2@8376>   CLR.b optistring
00024368 <AmiBlitz3.ab2@8377>   MOVEA.l (A7)+,A2
0002436C <AmiBlitz3.ab2@8378>    CMP.w #"@",d0
00024370 <AmiBlitz3.ab2@8379>   BNE fetchpees__skip0_l10
00024374 <AmiBlitz3.ab2@8380>    CMP.b #"@",(a5)
00024378 <AmiBlitz3.ab2@8381>   BNE fetchpees__skip0_l10
0002437E <AmiBlitz3.ab2@8382>   TST.w ininclude
00024382 <AmiBlitz3.ab2@8383>   BNE errorjoin
00024388 <AmiBlitz3.ab2@8384>   MOVEA.l sourceline,A5
0002438A <AmiBlitz3.ab2@8385>            MOVEA.l (A5),A5
00024390 <AmiBlitz3.ab2@8386>            MOVE.l a5,sourceline
00024396 <AmiBlitz3.ab2@8387>            ADDQ.l #1,linenumat
0002439A <AmiBlitz3.ab2@8388>            LEA $9(A5),A5
0002439C <AmiBlitz3.ab2@8389>            MOVEQ #0,d0
000243A0 <AmiBlitz3.ab2@8390>            BSR get1bytemain
000243A4 <AmiBlitz3.ab2@8393>    CMP.b #32,(a5)+ ;for space after a ,
000243A8 <AmiBlitz3.ab2@8394>    BEQ fetchpees__skip0_l10:
000243AA <AmiBlitz3.ab2@8395>    SUBQ.l #1,a5
000243AE <AmiBlitz3.ab2@8397>    CMP.w #"@@",(a5)                                        ;if merge
000243B2 <AmiBlitz3.ab2@8398>    BNE fetchpees__skip0_l15
000243B6 <AmiBlitz3.ab2@8399>    MOVEM.l d0-d7/a0-a4/a6,-(a7)
000243BC <AmiBlitz3.ab2@8400>    JSR mergeline
000243C0 <AmiBlitz3.ab2@8401>    MOVEM.l (a7)+,d0-d7/a0-a4/a6
000243C2 <AmiBlitz3.ab2@8421>       SUBQ.w #1,(A7)
000243C6 <AmiBlitz3.ab2@8422>    BEQ.w fetchpees__done
000243CA <AmiBlitz3.ab2@8424>     CMP.w #$2C,D0
000243CE <AmiBlitz3.ab2@8426>    BNE overloadfunc
000243D2 <AmiBlitz3.ab2@8427> BRA.w fetchpees__loop
000243D4 <AmiBlitz3.ab2@8430>   ADDQ.w #2,A7
000243DA <AmiBlitz3.ab2@8431>   MOVE.w (A7)+,partostack
000243DC <AmiBlitz3.ab2@8432>   MOVE.w (A7)+,D1
000243E2 <AmiBlitz3.ab2@8433>   CLR.b isconstantvalue
000243EC <AmiBlitz3.ab2@8434>   MOVE.l currentfunccall,lastfunction
000243F2 <AmiBlitz3.ab2@8435>   CLR.b funccall
000243F8 <AmiBlitz3.ab2@8436>   CLR.l currentfunccall
000243FA <AmiBlitz3.ab2@8437> RTS
00024400 <AmiBlitz3.ab2@8441>   CLR.b funccall
00024406 <AmiBlitz3.ab2@8442>   MOVE.w regnum,d1
0002440C <AmiBlitz3.ab2@8443>   MOVE.l currentfunccall,a4
00024410 <AmiBlitz3.ab2@8444>   CMP.b $20(a4),d1                                         ;increase if more pars
00024414 <AmiBlitz3.ab2@8445>   BLT notparerr
00024416 <AmiBlitz3.ab2@8448>   MOVE.b (a2)+,d2
0002441E <AmiBlitz3.ab2@8449>   ADD.w #1,parnum
00024424 <AmiBlitz3.ab2@8450>   TST.b fpu
00024428 <AmiBlitz3.ab2@8451>   BEQ 'nofpu
0002442C <AmiBlitz3.ab2@8452>   CMP.b #5,d2
00024430 <AmiBlitz3.ab2@8453>   BNE 'nofpu
00024432 <AmiBlitz3.ab2@8454>   MOVEQ #0,d1
00024438 <AmiBlitz3.ab2@8455>   MOVE.w regnum,d1
00024440 <AmiBlitz3.ab2@8456>   CMP.w #6,regnum
00024444 <AmiBlitz3.ab2@8457>   BLT 'nostack2
00024448 <AmiBlitz3.ab2@8462>   MOVE.w #$2c3c,d1
0002444C <AmiBlitz3.ab2@8463>   BSR writeword
00024452 <AmiBlitz3.ab2@8464>   MOVE.l #$bf800000,d1
00024456 <AmiBlitz3.ab2@8465>   BSR writelong
0002445A <AmiBlitz3.ab2@8466>   MOVE.w #$c4ff,d1                                         ;savetemp+regnum
00024460 <AmiBlitz3.ab2@8467>   ADD.w parnum,d1
00024466 <AmiBlitz3.ab2@8468>   JSR Atokejsr
0002446C <AmiBlitz3.ab2@8469>   TST.w dontwrite
00024470 <AmiBlitz3.ab2@8470>   BNE 'l1
00024476 <AmiBlitz3.ab2@8471>   MOVE.l data1start,d1
0002447C <AmiBlitz3.ab2@8472>   MOVE.l destpointer,a4
00024480 <AmiBlitz3.ab2@8473>   ADD.l d1,-4(a4)
00024486 <AmiBlitz3.ab2@8474>   MOVE.l destpointer,d1
00024488 <AmiBlitz3.ab2@8475>   SUBQ.l #4,d1
0002448E <AmiBlitz3.ab2@8476>   SUB.l destbufferstart,d1
00024490 <AmiBlitz3.ab2@8477>   MOVE.l d2,-(a7)
00024492 <AmiBlitz3.ab2@8478>   MOVE.l d1,d2
00024498 <AmiBlitz3.ab2@8479>   JSR addhunkoffset
0002449A <AmiBlitz3.ab2@8480>   MOVE.l (a7)+,d2
0002449E <AmiBlitz3.ab2@8481> BRA 'l1
000244A0 <AmiBlitz3.ab2@8484>   ASL.l #7,d1
000244A6 <AmiBlitz3.ab2@8485>   OR.l #$F23C5000,d1                                       ;fmove.w #-1,fpx
000244AA <AmiBlitz3.ab2@8486>   BSR writelong
000244AC <AmiBlitz3.ab2@8487>   MOVEQ #-1,d1                                             ;-1
000244B0 <AmiBlitz3.ab2@8488>   BSR writeword
000244B4 <AmiBlitz3.ab2@8489> BRA 'l1
000244BA <AmiBlitz3.ab2@8492>   MOVE.w regnum,d1
000244C2 <AmiBlitz3.ab2@8493>   CMP.w #6,regnum
000244C6 <AmiBlitz3.ab2@8494>   BLT 'nostack
000244CA <AmiBlitz3.ab2@8499>   CMP.b #2,d2
000244CE <AmiBlitz3.ab2@8500>   BGT 'nw
000244D2 <AmiBlitz3.ab2@8501> BRA 'nos
000244D6 <AmiBlitz3.ab2@8510>   CMP.w #7,d2
000244DA <AmiBlitz3.ab2@8511>   BNE 'nos
000244E0 <AmiBlitz3.ab2@8512>   ADDQ #4,a2offset
000244E6 <AmiBlitz3.ab2@8514>     MOVE.l #$48780000,d1
000244EA <AmiBlitz3.ab2@8515>     BSR writelong
000244F0 <AmiBlitz3.ab2@8516>     ADDQ.w #4,a2offset
000244F4 <AmiBlitz3.ab2@8517>     MOVE.w #$2f3c,d1
000244F8 <AmiBlitz3.ab2@8518>     BSR writeword
000244FE <AmiBlitz3.ab2@8519>     MOVE.l #-1,d1
00024502 <AmiBlitz3.ab2@8520>     BSR writelong
00024506 <AmiBlitz3.ab2@8521>   BRA 'l1
0002450A <AmiBlitz3.ab2@8525>   CMP.b #4,d2
0002450E <AmiBlitz3.ab2@8526>       BNE 'noq
00024512 <AmiBlitz3.ab2@8527>       MOVE.w #$2c3c,d1
00024516 <AmiBlitz3.ab2@8528>       BSR writeword
0002451C <AmiBlitz3.ab2@8529>       MOVE.l #$ffff0000,d1
00024520 <AmiBlitz3.ab2@8530>       BSR writelong
00024524 <AmiBlitz3.ab2@8531> BRA 'noq2
00024528 <AmiBlitz3.ab2@8534>      CMP.b #5,d2
0002452C <AmiBlitz3.ab2@8535>      BNE 'nof
00024530 <AmiBlitz3.ab2@8536>       MOVE.w #$2c3c,d1
00024534 <AmiBlitz3.ab2@8537>       BSR writeword
0002453A <AmiBlitz3.ab2@8538>       MOVE.l #$800000c1,d1
0002453E <AmiBlitz3.ab2@8539>       BSR writelong
00024542 <AmiBlitz3.ab2@8540> BRA 'noq2
00024546 <AmiBlitz3.ab2@8543>   MOVE.w #$7cff,d1
0002454A <AmiBlitz3.ab2@8544>   BSR writeword
0002454E <AmiBlitz3.ab2@8547>   MOVE.w #$c4ff,d1                                         ;savetemp+regnum
00024554 <AmiBlitz3.ab2@8548>   ADD.w parnum,d1
0002455A <AmiBlitz3.ab2@8549>   JSR Atokejsr
00024560 <AmiBlitz3.ab2@8550>    TST.w dontwrite
00024564 <AmiBlitz3.ab2@8551>    BNE 'l1
0002456A <AmiBlitz3.ab2@8552>    MOVE.l data1start,d1
00024570 <AmiBlitz3.ab2@8553>    MOVE.l destpointer,a4
00024574 <AmiBlitz3.ab2@8554>    ADD.l d1,-4(a4)
0002457A <AmiBlitz3.ab2@8555>    MOVE.l destpointer,d1
0002457C <AmiBlitz3.ab2@8556>    SUBQ.l #4,d1
00024582 <AmiBlitz3.ab2@8557>    SUB.l destbufferstart,d1
00024584 <AmiBlitz3.ab2@8558>    MOVE.l d2,-(a7)
00024586 <AmiBlitz3.ab2@8559>    MOVE.l d1,d2
0002458C <AmiBlitz3.ab2@8560>    JSR addhunkoffset
0002458E <AmiBlitz3.ab2@8561>    MOVE.l (a7)+,d2
00024592 <AmiBlitz3.ab2@8562> BRA 'l1
00024594 <AmiBlitz3.ab2@8565>   ASL.l #8,d1
00024596 <AmiBlitz3.ab2@8566>   ASL.l #1,d1
0002459C <AmiBlitz3.ab2@8567>   OR.l #$203c,d1                                           ;-1
000245A0 <AmiBlitz3.ab2@8568>   BSR writeword
000245A6 <AmiBlitz3.ab2@8569>   MOVE.l #-1,d1
000245AA <AmiBlitz3.ab2@8570>   CMP.b #4,d2
000245AE <AmiBlitz3.ab2@8571>   BNE 'nq1
000245B4 <AmiBlitz3.ab2@8572>   MOVE.l #$ffff0000,d1
000245B8 <AmiBlitz3.ab2@8575>   CMP.b #5,d2
000245BC <AmiBlitz3.ab2@8576>   BNE 'nof2
000245C2 <AmiBlitz3.ab2@8577>   TST.b fpu
000245C6 <AmiBlitz3.ab2@8578>   BNE 'nof2
000245CC <AmiBlitz3.ab2@8579>   MOVE.l #$800000c1,d1
000245D0 <AmiBlitz3.ab2@8582>    BSR writelong
000245D4 <AmiBlitz3.ab2@8583>    CMP.b #7,d2
000245D8 <AmiBlitz3.ab2@8584>    BNE 'l1
000245DE <AmiBlitz3.ab2@8586>      MOVE.l #$48780000,d1
000245E2 <AmiBlitz3.ab2@8587>      BSR writelong
000245E8 <AmiBlitz3.ab2@8589>    ADDQ.w #4,a2offset                                      ; bug fix for string parameters
000245EE <AmiBlitz3.ab2@8590>    MOVE.l #$594f,d1                                        ; subq #4,a7
000245F2 <AmiBlitz3.ab2@8591>    BSR writeword
000245F4 <AmiBlitz3.ab2@8594>    SUBQ.w #1,(A7)
000245F8 <AmiBlitz3.ab2@8595>    BEQ.w fetchpees__done
000245FE <AmiBlitz3.ab2@8596>    ADDQ.w #1,regnum
00024602 <AmiBlitz3.ab2@8597> BRA 'ol2
00024604 <AmiBlitz3.ab2@8600>    MOVE.w D2,D1
00024608 <AmiBlitz3.ab2@8601>    ANDI.w #$40,D1
0002460E <AmiBlitz3.ab2@8602>    MOVE.b D1,partostack
00024610 <AmiBlitz3.ab2@8603>    TST.b D2
00024614 <AmiBlitz3.ab2@8604>     BMI.w handlevara
00024618 <AmiBlitz3.ab2@8605>    BTST #$5,D2
0002461C <AmiBlitz3.ab2@8606>     BNE.w handlearr
00024622 <AmiBlitz3.ab2@8607>     MOVE.w regnumstore,-(a7)
00024628 <AmiBlitz3.ab2@8608>     MOVE.w tempregnum,-(a7)
0002462E <AmiBlitz3.ab2@8609>     MOVE.w parnum,-(a7)
00024632 <AmiBlitz3.ab2@8610>     BSR.w getap                                        ;recursive entry
00024638 <AmiBlitz3.ab2@8611>     MOVE.w (a7)+,parnum
0002463E <AmiBlitz3.ab2@8612>     MOVE.w (a7)+,tempregnum
00024644 <AmiBlitz3.ab2@8613>     MOVE.w (a7)+,regnumstore
00024648 <AmiBlitz3.ab2@8616>     MOVE.w partostack(PC),D1
0002464C <AmiBlitz3.ab2@8617>     BEQ.w JL_0_6886
00024652 <AmiBlitz3.ab2@8620>    ADDQ.w #4,a2offset
00024658 <AmiBlitz3.ab2@8623>    MOVE.w pushdn,D1
0002465E <AmiBlitz3.ab2@8624>    OR.w regnum,D1
00024662 <AmiBlitz3.ab2@8625>    CMP.w #$3,D2
00024666 <AmiBlitz3.ab2@8626>     BCC.w JL_0_6880
0002466C <AmiBlitz3.ab2@8627>    SUBQ.w #2,a2offset
00024670 <AmiBlitz3.ab2@8628>    ORI.w #$1000,D1
00024674 <AmiBlitz3.ab2@8629>    BSR.w writeword
00024676 <AmiBlitz3.ab2@8630> RTS
0002467A <AmiBlitz3.ab2@8633>   CMP.b #7,d2
0002467E <AmiBlitz3.ab2@8634>    BNE 'l10
00024686 <AmiBlitz3.ab2@8635>    CMP.b #2,optistring
0002468C <AmiBlitz3.ab2@8639>   TST.b iee
00024690 <AmiBlitz3.ab2@8640>   BEQ 'old
00024694 <AmiBlitz3.ab2@8641>   CMP.b #5,d2
00024698 <AmiBlitz3.ab2@8642>   BNE 'old
0002469C <AmiBlitz3.ab2@8645>   BSR.w writeword                                          ;write val to stack
0002469E <AmiBlitz3.ab2@8646> RTS
000246A4 <AmiBlitz3.ab2@8649>   SUBQ.w #4,a2offset
000246A6 <AmiBlitz3.ab2@8650> RTS
000246AC <AmiBlitz3.ab2@8653>   ADDQ.w #1,regnum
000246AE <AmiBlitz3.ab2@8654> RTS
000246B0 <AmiBlitz3.ab2@8658>   MOVEQ.l #$03,D2
000246B4 <AmiBlitz3.ab2@8659> BRA.w JL_0_6854
000246B8 <AmiBlitz3.ab2@8663>   ANDI.w #$7,D2
000246BA <AmiBlitz3.ab2@8664>   MOVE.w D2,-(A7)
000246BE <AmiBlitz3.ab2@8665>    BSR.w JL_0_A916
000246C2 <AmiBlitz3.ab2@8666>   CMP.b #$7,D2                                             ;ignore pnt to $
000246C6 <AmiBlitz3.ab2@8667>    BEQ.w JL_0_68C0
000246CA <AmiBlitz3.ab2@8668>   BTST #$E,D2
000246CE <AmiBlitz3.ab2@8669>    BEQ.w JL_0_68B6
000246D2 <AmiBlitz3.ab2@8670>   MOVE.b #$3,D2                                            ;pointer to long
000246D6 <AmiBlitz3.ab2@8671> BRA.w JL_0_68C0
000246D8 <AmiBlitz3.ab2@8674>    TST.b D2
000246DC <AmiBlitz3.ab2@8675>    BNE.w JL_0_68C0
000246E0 <AmiBlitz3.ab2@8676>   MOVE.b #$3,D2
000246E2 <AmiBlitz3.ab2@8679>   MOVE.w (A7)+,D3
000246E4 <AmiBlitz3.ab2@8680>   TST.b D3
000246E8 <AmiBlitz3.ab2@8681>    BEQ.w JL_0_68D2
000246EA <AmiBlitz3.ab2@8682>   CMP.b D2,D3
000246EE <AmiBlitz3.ab2@8683>    BEQ.w putalp
000246F2 <AmiBlitz3.ab2@8684> BRA.w mismatcherr
000246F8 <AmiBlitz3.ab2@8687>   ADDQ.w #2,a2offset
000246FC <AmiBlitz3.ab2@8688>   MOVE.w ptype(PC),D1
00024700 <AmiBlitz3.ab2@8689>    BSR.w writeword
00024702 <AmiBlitz3.ab2@8690>   MOVEQ.l #$00,D1
00024704 <AmiBlitz3.ab2@8691>   MOVE.b D2,D1
00024708 <AmiBlitz3.ab2@8692>    BSR.w writeword
0002470C <AmiBlitz3.ab2@8693> BRA.w putalp
0002470E <AmiBlitz3.ab2@8696>    MOVE.w D2,-(A7)
00024712 <AmiBlitz3.ab2@8697>    BSR.w JL_0_694E
00024718 <AmiBlitz3.ab2@8698>   BTST #$4,$1(A7)
0002471C <AmiBlitz3.ab2@8699>    BEQ.w JL_0_6900
00024720 <AmiBlitz3.ab2@8700>    BSR.w JL_0_699A
00024726 <AmiBlitz3.ab2@8703>    BTST #$3,$1(A7)
0002472A <AmiBlitz3.ab2@8704>    BEQ.w JL_0_690E
0002472E <AmiBlitz3.ab2@8705>    BSR.w sendtype
00024730 <AmiBlitz3.ab2@8708>    MOVE.w (A7)+,D2
00024734 <AmiBlitz3.ab2@8709> BRA.w get1bytemain
0002473A <AmiBlitz3.ab2@8712>   MOVE.w regnum,D1
0002473C <AmiBlitz3.ab2@8713>   LSL.w #8,D1
0002473E <AmiBlitz3.ab2@8714>   LSL.w #1,D1
00024742 <AmiBlitz3.ab2@8715>   ORI.w #$7000,D1
00024748 <AmiBlitz3.ab2@8716>   BTST #$0,$7(A3)
0002474C <AmiBlitz3.ab2@8717>    BNE.w JL_0_6946                                         ;A Pointer
00024754 <AmiBlitz3.ab2@8718>   CMPI.l #$100,$4(A2)
00024758 <AmiBlitz3.ab2@8719>    BCC.w arrerr1                                           ;illegal type to send
0002475C <AmiBlitz3.ab2@8720>   MOVE.b $7(A2),D1
00024760 <AmiBlitz3.ab2@8723>   BSR.w writeword                                          ;moveq #type,d regat
00024762 <AmiBlitz3.ab2@8724>   MOVEQ.l #$02,D2                                          ;just a word.
00024766 <AmiBlitz3.ab2@8725> BRA.w JL_0_685C
0002476A <AmiBlitz3.ab2@8728>   MOVE.b #$3,D1
0002476E <AmiBlitz3.ab2@8729> BRA.w JL_0_693C
00024772 <AmiBlitz3.ab2@8733>    BSR.w get1bytemain                                      ;write array paramter code
00024776 <AmiBlitz3.ab2@8734>    BSR.w getparameter
0002477E <AmiBlitz3.ab2@8735>   BTST #$1,flagmask+1
00024782 <AmiBlitz3.ab2@8736>    BEQ.w syntaxerr
00024786 <AmiBlitz3.ab2@8737>    BSR.w JL_0_8E3C
0002478A <AmiBlitz3.ab2@8738>    BSR.w get1bytemain
0002478E <AmiBlitz3.ab2@8739>   CMP.w #$29,D0                                            ;we just want a() or whatever
00024792 <AmiBlitz3.ab2@8740>    BNE.w syntaxerr
00024798 <AmiBlitz3.ab2@8741>   MOVE.w notshared,D1
0002479C <AmiBlitz3.ab2@8742>    BNE.w noarrayerr
000247A2 <AmiBlitz3.ab2@8743>   MOVE.w regnum,D1
000247A4 <AmiBlitz3.ab2@8744>   LSL.w #8,D1
000247A6 <AmiBlitz3.ab2@8745>   LSL.w #1,D1
000247AA <AmiBlitz3.ab2@8746>   OR.w fbase(PC),D1
000247B0 <AmiBlitz3.ab2@8747>    TST.b varmode
000247B4 <AmiBlitz3.ab2@8748>    BEQ 'l1
000247B8 <AmiBlitz3.ab2@8749>    BCLR #0,d1
000247BC <AmiBlitz3.ab2@8752>    BSR.w writeword
000247C0 <AmiBlitz3.ab2@8753>   MOVE.w $4(A3),D1
000247C4 <AmiBlitz3.ab2@8754>    BSR.w writeword
000247C8 <AmiBlitz3.ab2@8755> BRA.w putalp
000247CE <AmiBlitz3.ab2@8759>   MOVE.w regnum,D1
000247D0 <AmiBlitz3.ab2@8760>   LSL.w #8,D1
000247D2 <AmiBlitz3.ab2@8761>   LSL.w #1,D1
000247D6 <AmiBlitz3.ab2@8762>   OR.w fbase(PC),D1
000247DC <AmiBlitz3.ab2@8763>    TST.b varmode
000247E0 <AmiBlitz3.ab2@8764>    BEQ 'l1
000247E4 <AmiBlitz3.ab2@8765>    BCLR #0,d1
000247E8 <AmiBlitz3.ab2@8768>    BSR.w writeword
000247EC <AmiBlitz3.ab2@8769>   MOVE.w $8(A3),D1
000247EE <AmiBlitz3.ab2@8770>   LSL.w #2,D1
000247F4 <AmiBlitz3.ab2@8771>   MOVE.w varmode,D2
000247F8 <AmiBlitz3.ab2@8772>    BEQ.w JL_0_69BE
000247FA <AmiBlitz3.ab2@8773>   NEG.w D1
000247FE <AmiBlitz3.ab2@8776>    ADD.w $4(A3),D1
00024802 <AmiBlitz3.ab2@8777>    BSR.w writeword
00024808 <AmiBlitz3.ab2@8778>   MOVE.w regnum,D1
0002480A <AmiBlitz3.ab2@8779>   LSL.w #8,D1
0002480C <AmiBlitz3.ab2@8780>   LSL.w #1,D1
00024810 <AmiBlitz3.ab2@8781>   MOVE.w partostack(PC),D2
00024814 <AmiBlitz3.ab2@8782>    BNE.w JL_0_69F4
0002481C <AmiBlitz3.ab2@8783>   CMPI.w #$7,regnum
00024820 <AmiBlitz3.ab2@8784>    BCC.w JL_0_69F4
00024824 <AmiBlitz3.ab2@8785>   OR.w pushlast(PC),D1
0002482A <AmiBlitz3.ab2@8786>   MOVE.w regnum,D2
0002482C <AmiBlitz3.ab2@8787>   SUBQ.w #1,D2
0002482E <AmiBlitz3.ab2@8788>   OR.w D2,D1
00024832 <AmiBlitz3.ab2@8789> BRA.w JL_0_69F8
00024836 <AmiBlitz3.ab2@8792>   OR.w pushadd(PC),D1
0002483A <AmiBlitz3.ab2@8795>   BSR.w writeword
00024842 <AmiBlitz3.ab2@8796>   MOVE.b #$1,partostack
00024846 <AmiBlitz3.ab2@8797> BRA.w putalp
0002484A <AmiBlitz3.ab2@8801> fbase:       Dc.b $20,$2D,$00,$00                           ;MOVE.L  $0000(A5),D0
0002484C <AmiBlitz3.ab2@8802> pushadd:     Dc.b $D0,$97                                   ;ADD.L (A7),D0
0002484E <AmiBlitz3.ab2@8803> pushlast:    Dc.b $D0,$80                                   ;ADD.L D0,D0
00024852 <AmiBlitz3.ab2@8808>   ANDI.w #$7,D2                                            ;0-7 (unknown to string)
00024856 <AmiBlitz3.ab2@8809>    BEQ.w evalu2
0002485A <AmiBlitz3.ab2@8810> BRA.w eval
00024860 <AmiBlitz3.ab2@8814>   MOVEA.l libpointer,A1
00024864 <AmiBlitz3.ab2@8817>    CMPA.w #$0,A1
00024868 <AmiBlitz3.ab2@8818>    BEQ.w resetlibs__done
0002486E <AmiBlitz3.ab2@8819>   MOVE.w #-1,$A(A1)
00024874 <AmiBlitz3.ab2@8820>   BCLR #$7,$C(A1)
00024876 <AmiBlitz3.ab2@8821>   MOVEA.l (A1),A1
0002487A <AmiBlitz3.ab2@8822> BRA.w resetlibs__loop
0002487C <AmiBlitz3.ab2@8825> RTS
00024880 <AmiBlitz3.ab2@8829>   MOVE.w #$FFFE,D1
00024884 <AmiBlitz3.ab2@8832>    BSR.w JL_0_6F38
0002488A <AmiBlitz3.ab2@8835>   TST.w cfetchmode
0002488E <AmiBlitz3.ab2@8836>    BEQ.w uselib3__noconst
00024894 <AmiBlitz3.ab2@8837>   BTST #$6,$C(A1)
00024898 <AmiBlitz3.ab2@8838>    BNE.w uselib3__constok
0002489C <AmiBlitz3.ab2@8839> BRA.w badconerr                                            ;Can't use this Library!
0002489E <AmiBlitz3.ab2@8842> RTS
000248A4 <AmiBlitz3.ab2@8845>    BSET #$7,$C(A1)
000248A8 <AmiBlitz3.ab2@8846>    BNE.w JL_0_6C74                                         ;already done....
000248AE <AmiBlitz3.ab2@8847>    CMPI.w #-1,$A(A1)
000248B2 <AmiBlitz3.ab2@8848>    BNE.w JL_0_6C74                                         ;something already here
000248B8 <AmiBlitz3.ab2@8852>    TST.w dirmode
000248BC <AmiBlitz3.ab2@8853>    BEQ.b JL_0_6A86
000248C2 <AmiBlitz3.ab2@8854>    TST.b exdebug
000248C6 <AmiBlitz3.ab2@8855>    BEQ 'l1
000248CA <AmiBlitz3.ab2@8856> BRA.b JL_0_6A86
000248D0 <AmiBlitz3.ab2@8859>   BCLR #$7,$C(A1)
000248D4 <AmiBlitz3.ab2@8860> BRA.w dirliberr
000248DA <AmiBlitz3.ab2@8863>   MOVE.b debugmode,-(a7)
000248DE <AmiBlitz3.ab2@8864>   MOVEM.l D1/A0/A2,-(A7)
000248E6 <AmiBlitz3.ab2@8870>   BTST #$7,use_debugger
000248EA <AmiBlitz3.ab2@8871>   BNE 'debugon
000248EC <AmiBlitz3.ab2@8872>   CLR.w D1
000248F0 <AmiBlitz3.ab2@8873> BRA.b 'debugoff
000248F2 <AmiBlitz3.ab2@8876>   SNE D1
000248F8 <AmiBlitz3.ab2@8879>   MOVE.b d1,debugmode
000248FA <AmiBlitz3.ab2@8883>   MOVEA.l A1,A0
000248FE <AmiBlitz3.ab2@8884>   ADDA.l $12(A1),A0
00024902 <AmiBlitz3.ab2@8885>   TST.w -$2(A0)
00024906 <AmiBlitz3.ab2@8886>    BEQ.w JL_0_6AD2
0002490A <AmiBlitz3.ab2@8887>   MOVEM.l A0-A1,-(A7)
0002490E <AmiBlitz3.ab2@8888>   MOVE.w #$FB4F,D1
00024912 <AmiBlitz3.ab2@8889>    BSR.w uselib
00024916 <AmiBlitz3.ab2@8890>   MOVEM.l (A7)+,A0-A1
0002491C <AmiBlitz3.ab2@8891>   ADDQ.w #1,globalvarpointer
00024924 <AmiBlitz3.ab2@8892>   BCLR #$0,globalvarpointer+1
0002492C <AmiBlitz3.ab2@8893>   MOVE.w globalvarpointer,-$6(A0)
00024932 <AmiBlitz3.ab2@8894>   ADDQ.w #4,globalvarpointer
00024936 <AmiBlitz3.ab2@8895>   TST.l -$E(A0)
0002493A <AmiBlitz3.ab2@8896>    BEQ.w JL_0_6AD2
00024940 <AmiBlitz3.ab2@8897>   ADDQ.w #4,globalvarpointer
00024948 <AmiBlitz3.ab2@8900>   MOVE.l libend,$28(A1)
0002494A <AmiBlitz3.ab2@8901>   MOVEA.l A1,A0
0002494E <AmiBlitz3.ab2@8902>   ADDA.l $12(A1),A0
00024950 <AmiBlitz3.ab2@8903>   MOVE.l A1,D1
00024954 <AmiBlitz3.ab2@8904>   ADD.l $6(A1),D1
00024958 <AmiBlitz3.ab2@8905>   TST.l $2C(A1)
0002495C <AmiBlitz3.ab2@8906>    BEQ.w JL_0_6AFE
00024962 <AmiBlitz3.ab2@8908>   TST.b debugmode
00024966 <AmiBlitz3.ab2@8909>    BNE.w JL_0_6AFE
00024968 <AmiBlitz3.ab2@8910>   MOVE.l A1,D1
0002496C <AmiBlitz3.ab2@8911>   ADD.l $2C(A1),D1
00024972 <AmiBlitz3.ab2@8914>   MOVEA.l libend,A2
00024978 <AmiBlitz3.ab2@8917>   CMPA.l data1start,A2
0002497C <AmiBlitz3.ab2@8918>    BCS.w JL_0_6B24
00024984 <AmiBlitz3.ab2@8919>   MOVE.w #$FFFF,dontwrite
00024986 <AmiBlitz3.ab2@8922>   ADDQ.w #2,A0
00024988 <AmiBlitz3.ab2@8923>   ADDQ.w #2,A2
0002498A <AmiBlitz3.ab2@8924>   CMPA.l D1,A0
0002498E <AmiBlitz3.ab2@8925>    BCS.w JL_0_6B16
00024992 <AmiBlitz3.ab2@8926> BRA.w JL_0_6B2C
00024994 <AmiBlitz3.ab2@8929>   MOVE.w (A0)+,(A2)+                                       ;copylibcode
00024996 <AmiBlitz3.ab2@8930>   CMPA.l D1,A0
0002499A <AmiBlitz3.ab2@8931>    BCS.w JL_0_6B04
000249A0 <AmiBlitz3.ab2@8934>   MOVE.l A2,libend
000249A4 <AmiBlitz3.ab2@8935>   MOVE.l $20(A1),D1
000249A8 <AmiBlitz3.ab2@8936>    BEQ.w JL_0_6BB8
000249AC <AmiBlitz3.ab2@8937>   MOVEM.l D0/D2-D3,-(A7)
000249B0 <AmiBlitz3.ab2@8938>   MOVEA.l $24(A1),A0
000249B2 <AmiBlitz3.ab2@8939>   MOVEQ.l #$00,D3
000249B4 <AmiBlitz3.ab2@8942>   MOVE.l (A0)+,D2
000249B8 <AmiBlitz3.ab2@8943>   TST.l $2C(A1)
000249BC <AmiBlitz3.ab2@8944>    BEQ.w JL_0_6B60
000249C2 <AmiBlitz3.ab2@8945>   TST.b debugmode
000249C6 <AmiBlitz3.ab2@8946>    BNE.w JL_0_6B60
000249CA <AmiBlitz3.ab2@8947>   CMP.l $2C(A1),D2
000249CE <AmiBlitz3.ab2@8948>    BCC.w JL_0_6BA0
000249D2 <AmiBlitz3.ab2@8951>   TST.w $0(A1,D2.L)
000249D6 <AmiBlitz3.ab2@8952>    BPL.w JL_0_6B72
000249D8 <AmiBlitz3.ab2@8953>   TST.l D3
000249DC <AmiBlitz3.ab2@8954>    BNE.w JL_0_6B72
000249DE <AmiBlitz3.ab2@8955>   MOVE.l A0,D0
000249E0 <AmiBlitz3.ab2@8956>   MOVE.l D1,D3
000249E4 <AmiBlitz3.ab2@8959>   SUB.l $12(A1),D2
000249E8 <AmiBlitz3.ab2@8960>    BMI.w JL_0_6BA0
000249EC <AmiBlitz3.ab2@8961>   ADD.l $28(A1),D2
000249EE <AmiBlitz3.ab2@8962>   MOVE.l D2,-(A7)
000249F4 <AmiBlitz3.ab2@8963>   SUB.l destbufferstart,D2
000249F8 <AmiBlitz3.ab2@8964>    BSR.w addhunkoffset
000249FA <AmiBlitz3.ab2@8965>   MOVEA.l (A7)+,A2
00024A00 <AmiBlitz3.ab2@8966>   TST.w dontwrite
00024A04 <AmiBlitz3.ab2@8967>    BNE.w JL_0_6BA0
00024A08 <AmiBlitz3.ab2@8968>   MOVE.l $28(A1),D2
00024A0C <AmiBlitz3.ab2@8969>   SUB.l $12(A1),D2
00024A0E <AmiBlitz3.ab2@8970>   ADD.l D2,(A2)
00024A10 <AmiBlitz3.ab2@8973>    SUBQ.l #1,D1
00024A14 <AmiBlitz3.ab2@8974>    BNE.w JL_0_6B44
00024A16 <AmiBlitz3.ab2@8975>   MOVE.l D3,D2
00024A1A <AmiBlitz3.ab2@8976>    BEQ.w JL_0_6BB4
00024A1C <AmiBlitz3.ab2@8977>   MOVEA.l D0,A2
00024A1E <AmiBlitz3.ab2@8978>   SUBQ.w #4,A2
00024A22 <AmiBlitz3.ab2@8979>    BSR.w JL_0_6E34
00024A26 <AmiBlitz3.ab2@8982>    MOVEM.l (A7)+,D0/D2-D3
00024A2A <AmiBlitz3.ab2@8985>    MOVEM.l (A7)+,D1/A0/A2
00024A2E <AmiBlitz3.ab2@8986>   MOVEM.l D1-D2,-(A7)
00024A32 <AmiBlitz3.ab2@8987>   TST.w $1A(A1)
00024A36 <AmiBlitz3.ab2@8988>    BNE.w JL_0_6BD0
00024A3A <AmiBlitz3.ab2@8989>   CLR.w $A(A1)
00024A3E <AmiBlitz3.ab2@8990> BRA.w JL_0_6C5E
00024A44 <AmiBlitz3.ab2@8993>   ADDQ.w #1,globalvarpointer
00024A4C <AmiBlitz3.ab2@8994>   BCLR #$0,globalvarpointer+1
00024A54 <AmiBlitz3.ab2@8995>   MOVE.w globalvarpointer,$A(A1)
00024A58 <AmiBlitz3.ab2@8996>   CMP.w #-$12D,D1
00024A5C <AmiBlitz3.ab2@8997>    BNE.w JL_0_6C16
00024A64 <AmiBlitz3.ab2@8998>   MOVE.w $A(A1),movestdn+2
00024A6C <AmiBlitz3.ab2@8999>   MOVE.w $A(A1),pusha3+2
00024A74 <AmiBlitz3.ab2@9000>   MOVE.w $A(A1),pusha32+2
00024A7C <AmiBlitz3.ab2@9001>   MOVE.w $A(A1),pulla3+2
00024A84 <AmiBlitz3.ab2@9002>   MOVE.w $A(A1),geta3+2
00024A88 <AmiBlitz3.ab2@9005>    CMP.w #-$3E9,D1
00024A8C <AmiBlitz3.ab2@9006>    BNE.w JL_0_6C3E
00024A94 <AmiBlitz3.ab2@9007>   MOVE.w $A(A1),dataget+2
00024A9C <AmiBlitz3.ab2@9008>   MOVE.w $A(A1),dataput+2
00024AA4 <AmiBlitz3.ab2@9009>   MOVE.w $A(A1),rescode+6
00024AAC <AmiBlitz3.ab2@9010>   MOVE.w $A(A1),rescode2+2
00024AB2 <AmiBlitz3.ab2@9013>   ADDQ.w #2,globalvarpointer
00024AB6 <AmiBlitz3.ab2@9014>   TST.w $1A(A1)
00024ABA <AmiBlitz3.ab2@9015>    BMI.w JL_0_6C52
00024AC0 <AmiBlitz3.ab2@9016>   ADDQ.w #2,globalvarpointer
00024AC4 <AmiBlitz3.ab2@9019>   MOVEM.l D1/A1,-(A7)
00024AC8 <AmiBlitz3.ab2@9020>   BSR.w uselib2
00024ACC <AmiBlitz3.ab2@9021>   MOVEM.l (A7)+,D1/A1
00024ACE <AmiBlitz3.ab2@9024>   MOVE.w D1,D2
00024AD2 <AmiBlitz3.ab2@9025>   MOVE.l $16(A1),D1
00024AD6 <AmiBlitz3.ab2@9026>    BSR.w uselib2_org
00024ADA <AmiBlitz3.ab2@9027>   MOVE.l $1C(A1),D1
00024ADE <AmiBlitz3.ab2@9028>    BSR.w uselib2_org
00024AE2 <AmiBlitz3.ab2@9029>   MOVEM.l (A7)+,D1-D2
00024AE8 <AmiBlitz3.ab2@9031>   MOVE.b (a7)+,debugmode
00024AEA <AmiBlitz3.ab2@9034> RTS
00024AEC <AmiBlitz3.ab2@9038>   MOVEQ.l #$00,D2
00024AF2 <AmiBlitz3.ab2@9041>   MOVEA.l tokeslist,A2
00024AF4 <AmiBlitz3.ab2@9042>   CMPA.l D2,A2
00024AF8 <AmiBlitz3.ab2@9043>    BEQ.w JL_0_6CE0
00024AFA <AmiBlitz3.ab2@9044>   MOVE.l A2,-(A7)
00024AFC <AmiBlitz3.ab2@9047>   MOVEQ.l #$00,D3
00024B00 <AmiBlitz3.ab2@9050>   MOVEA.l $8(A2),A3
00024B02 <AmiBlitz3.ab2@9051>   CMPA.l D3,A3
00024B06 <AmiBlitz3.ab2@9052>    BEQ.w JL_0_6CD2
00024B08 <AmiBlitz3.ab2@9053>   MOVE.l A3,-(A7)
00024B0C <AmiBlitz3.ab2@9054>   MOVEM.l D2-D3/A2-A3,-(A7)
00024B10 <AmiBlitz3.ab2@9055>   MOVE.w $4(A2),D1
00024B14 <AmiBlitz3.ab2@9056>   MOVE.w $6(A2),D2
00024B18 <AmiBlitz3.ab2@9057>    BSR.w JL_0_6CE2
00024B1C <AmiBlitz3.ab2@9058>   MOVEM.l (A7)+,D2-D3/A2-A3
00024B22 <AmiBlitz3.ab2@9059>   MOVE.w dontwrite,D0
00024B26 <AmiBlitz3.ab2@9060>    BEQ.w JL_0_6CBE
00024B28 <AmiBlitz3.ab2@9063>   MOVEA.l (A3),A3
00024B2A <AmiBlitz3.ab2@9064>   CMPA.l D3,A3
00024B2E <AmiBlitz3.ab2@9065>    BNE.w JL_0_6CB2
00024B32 <AmiBlitz3.ab2@9066> BRA.w JL_0_6CCC
00024B36 <AmiBlitz3.ab2@9069>   MOVEA.l $4(A3),A0
00024B38 <AmiBlitz3.ab2@9070>   MOVE.l D7,(A0)
00024B3A <AmiBlitz3.ab2@9071>   MOVEA.l (A3),A3
00024B3C <AmiBlitz3.ab2@9072>   CMPA.l D3,A3
00024B40 <AmiBlitz3.ab2@9073>    BNE.w JL_0_6CBE
00024B42 <AmiBlitz3.ab2@9076>   MOVE.l (A7)+,D3
00024B46 <AmiBlitz3.ab2@9077> BRA.w JL_0_6C88
00024B48 <AmiBlitz3.ab2@9080>    MOVEA.l (A2),A2
00024B4A <AmiBlitz3.ab2@9081>   CMPA.l D2,A2
00024B4E <AmiBlitz3.ab2@9082>    BNE.w JL_0_6C86
00024B50 <AmiBlitz3.ab2@9083>   MOVE.l (A7)+,D2
00024B54 <AmiBlitz3.ab2@9084> BRA.w JL_0_6C78
00024B56 <AmiBlitz3.ab2@9087> RTS
00024B58 <AmiBlitz3.ab2@9091>   MOVE.w D2,-(A7)
00024B5C <AmiBlitz3.ab2@9092>    BSR.w searchinstr
00024B5E <AmiBlitz3.ab2@9093>   MOVE.w (A7)+,D2
00024B66 <AmiBlitz3.ab2@9094>   BCLR #$7,blitzmode
00024B6A <AmiBlitz3.ab2@9095>   BCLR #$E,D2
00024B6E <AmiBlitz3.ab2@9096>    BEQ.w JL_0_6D02
00024B76 <AmiBlitz3.ab2@9097>   BSET #$7,blitzmode
00024B78 <AmiBlitz3.ab2@9100>   TST.w (A3)
00024B7C <AmiBlitz3.ab2@9101>    BEQ.w JL_0_6DAC
00024B82 <AmiBlitz3.ab2@9102>   BTST #$2,$1(A3)
00024B86 <AmiBlitz3.ab2@9103>    BNE.w tokeerr
00024B8C <AmiBlitz3.ab2@9104>   BTST #$3,$1(A3)
00024B90 <AmiBlitz3.ab2@9105>    BNE.w tokeerr
00024B94 <AmiBlitz3.ab2@9106>   LEA $6(A3),A3
00024B96 <AmiBlitz3.ab2@9109>   MOVE.w (A3)+,D0
00024B9A <AmiBlitz3.ab2@9110>    BMI.w tokeerr
00024B9E <AmiBlitz3.ab2@9111>   ANDI.w #$FF,D0
00024BA0 <AmiBlitz3.ab2@9112>   ADDA.w D0,A3
00024BA2 <AmiBlitz3.ab2@9113>   ADDQ.w #1,A3
00024BA4 <AmiBlitz3.ab2@9114>   EXG.l D0,A3
00024BA8 <AmiBlitz3.ab2@9115>   BCLR #$0,D0
00024BAA <AmiBlitz3.ab2@9116>   EXG.l D0,A3
00024BAC <AmiBlitz3.ab2@9117>   SUBQ.w #1,D2
00024BB0 <AmiBlitz3.ab2@9118>    BPL.w JL_0_6D98
00024BB2 <AmiBlitz3.ab2@9119>   TST.w (A3)
00024BB6 <AmiBlitz3.ab2@9120>    BNE.w JL_0_6D76
00024BBA <AmiBlitz3.ab2@9121>   MOVE.l $2(A3),D0
00024BBE <AmiBlitz3.ab2@9122>   OR.l $A(A3),D0
00024BC2 <AmiBlitz3.ab2@9123>    BNE.w JL_0_6D76
00024BC8 <AmiBlitz3.ab2@9124>   BTST #$0,$9(A3)
00024BCC <AmiBlitz3.ab2@9125>    BNE.w JL_0_6D76
00024BD0 <AmiBlitz3.ab2@9126>   MOVE.l $6(A3),D7
00024BD4 <AmiBlitz3.ab2@9127>   MOVE.w $0(A2,D7.L),D0
00024BD8 <AmiBlitz3.ab2@9128>   ANDI.w #$F000,D0
00024BDC <AmiBlitz3.ab2@9129>   CMP.w #-$6000,D0
00024BE0 <AmiBlitz3.ab2@9130>    BEQ.w JL_0_6D76
00024BE4 <AmiBlitz3.ab2@9133>   SUB.l $12(A2),D7
00024BE8 <AmiBlitz3.ab2@9134>   ADD.l $28(A2),D7
00024BEA <AmiBlitz3.ab2@9135> RTS
00024BF0 <AmiBlitz3.ab2@9139>   LEA cutejsr,A0
00024BF6 <AmiBlitz3.ab2@9142>   MOVE.l destpointer,-(A7)
00024BFE <AmiBlitz3.ab2@9143>   MOVE.w #$FFFF,lasta6
00024C00 <AmiBlitz3.ab2@9146>    JSR (A0)
00024C04 <AmiBlitz3.ab2@9147>   MOVE.w #$4E75,D1
00024C08 <AmiBlitz3.ab2@9148>    BSR.w writeword
00024C0A <AmiBlitz3.ab2@9149>   MOVE.l (A7)+,D7
00024C0C <AmiBlitz3.ab2@9150> RTS
00024C0E <AmiBlitz3.ab2@9154>   TST.w (A3)+
00024C12 <AmiBlitz3.ab2@9155>    BEQ.w JL_0_6DA4
00024C14 <AmiBlitz3.ab2@9156>   ADDQ.w #2,A3
00024C18 <AmiBlitz3.ab2@9157> BRA.w JL_0_6D98
00024C1C <AmiBlitz3.ab2@9160>   LEA $C(A3),A3
00024C20 <AmiBlitz3.ab2@9161> BRA.w JL_0_6D20
00024C22 <AmiBlitz3.ab2@9165>   TST.w D2
00024C26 <AmiBlitz3.ab2@9166>    BNE.w tokeerr
00024C2A <AmiBlitz3.ab2@9167>   TST.w $6(A3)
00024C2E <AmiBlitz3.ab2@9168>    BNE.w JL_0_6DE4
00024C32 <AmiBlitz3.ab2@9169>   MOVE.l $8(A3),D0
00024C36 <AmiBlitz3.ab2@9170>   OR.l $10(A3),D0
00024C3A <AmiBlitz3.ab2@9171>    BNE.w JL_0_6DE4
00024C40 <AmiBlitz3.ab2@9172>   BTST #$0,$F(A3)
00024C44 <AmiBlitz3.ab2@9173>    BNE.w JL_0_6DE4
00024C48 <AmiBlitz3.ab2@9174>   MOVE.l $C(A3),D7
00024C4C <AmiBlitz3.ab2@9175>   MOVE.w $0(A2,D7.L),D0
00024C50 <AmiBlitz3.ab2@9176>   ANDI.w #$F000,D0
00024C54 <AmiBlitz3.ab2@9177>   CMP.w #-$6000,D0
00024C58 <AmiBlitz3.ab2@9178>    BNE.w JL_0_6D6C
00024C5A <AmiBlitz3.ab2@9181>   MOVE.l A3,D1
00024C5C <AmiBlitz3.ab2@9182>   SUB.l A2,D1
00024C62 <AmiBlitz3.ab2@9183>   LEA Amakelibsub,A0
00024C66 <AmiBlitz3.ab2@9184> BRA.w JL_0_6D7C
00024C6C <AmiBlitz3.ab2@9188>   MOVEA.l _execbase,A6
00024C72 <AmiBlitz3.ab2@9189>   MOVEA.l tokeslist,A2
00024C78 <AmiBlitz3.ab2@9190>   CLR.l tokeslist
00024C7C <AmiBlitz3.ab2@9193>     CMPA.w #$0,A2
00024C80 <AmiBlitz3.ab2@9194>      BEQ.w JL_0_6E32
00024C84 <AmiBlitz3.ab2@9195>     MOVEA.l $8(A2),A3
00024C88 <AmiBlitz3.ab2@9198>       CMPA.w #$0,A3
00024C8C <AmiBlitz3.ab2@9199>        BEQ.w JL_0_6E24
00024C8E <AmiBlitz3.ab2@9200>       MOVEA.l A3,A1
00024C90 <AmiBlitz3.ab2@9201>       MOVEA.l (A3),A3
00024C92 <AmiBlitz3.ab2@9202>       MOVEQ.l #$08,D0
00024C98 <AmiBlitz3.ab2@9203>       MOVE.l mempool,a0
00024C9E <AmiBlitz3.ab2@9204>       MOVEA.l _execbase,A6
00024CA2 <AmiBlitz3.ab2@9205>       JSR _FreePooled(A6)
00024CA6 <AmiBlitz3.ab2@9206> BRA.w JL_0_6E0E
00024CA8 <AmiBlitz3.ab2@9209>     MOVEA.l A2,A1
00024CAA <AmiBlitz3.ab2@9210>     MOVEA.l (A2),A2
00024CAC <AmiBlitz3.ab2@9211>     MOVEQ.l #$0C,D0
00024CB2 <AmiBlitz3.ab2@9212>     MOVE.l mempool,a0
00024CB8 <AmiBlitz3.ab2@9213>     MOVEA.l _execbase,A6
00024CBC <AmiBlitz3.ab2@9214>     JSR _FreePooled(A6)
00024CC0 <AmiBlitz3.ab2@9215> BRA.w JL_0_6E02
00024CC2 <AmiBlitz3.ab2@9218> RTS
00024CC6 <AmiBlitz3.ab2@9222>   MOVEM.l D3-D5/A1-A6,-(A7)
00024CC8 <AmiBlitz3.ab2@9223>   MOVEA.l A1,A4
00024CCA <AmiBlitz3.ab2@9226>   MOVE.l (A2)+,D3
00024CCE <AmiBlitz3.ab2@9227>   MOVE.w $0(A4,D3.L),D5
00024CD2 <AmiBlitz3.ab2@9228>    BPL.w JL_0_6E7A
00024CD6 <AmiBlitz3.ab2@9229>   TST.l $2C(A4)
00024CDA <AmiBlitz3.ab2@9230>    BEQ.w JL_0_6E5E
00024CE0 <AmiBlitz3.ab2@9231>   TST.b debugmode
00024CE4 <AmiBlitz3.ab2@9232>    BNE.w JL_0_6E5E
00024CE8 <AmiBlitz3.ab2@9233>   CMP.l $2C(A4),D3
00024CEC <AmiBlitz3.ab2@9234>    BCC.w JL_0_6E7A
00024CF0 <AmiBlitz3.ab2@9237>   BCLR #$F,D5
00024CF4 <AmiBlitz3.ab2@9238>   MOVE.w $2(A4,D3.L),D4
00024CF8 <AmiBlitz3.ab2@9239>   SUB.l $12(A4),D3
00024CFC <AmiBlitz3.ab2@9240>   ADD.l $28(A4),D3
00024D00 <AmiBlitz3.ab2@9241>   MOVEM.l D2/A2/A4,-(A7)
00024D04 <AmiBlitz3.ab2@9242>    BSR.w JL_0_6E86
00024D08 <AmiBlitz3.ab2@9243>   MOVEM.l (A7)+,D2/A2/A4
00024D0A <AmiBlitz3.ab2@9246>   SUBQ.l #1,D2
00024D0E <AmiBlitz3.ab2@9247>    BNE.w JL_0_6E3A
00024D12 <AmiBlitz3.ab2@9248>   MOVEM.l (A7)+,D3-D5/A1-A6
00024D14 <AmiBlitz3.ab2@9249> RTS
00024D1A <AmiBlitz3.ab2@9253>   LEA tokeslist,A3
00024D20 <AmiBlitz3.ab2@9254>   MOVEA.l _execbase,A6
00024D22 <AmiBlitz3.ab2@9257>   MOVE.l (A3),D0
00024D26 <AmiBlitz3.ab2@9258>    BEQ.w JL_0_6EAC
00024D28 <AmiBlitz3.ab2@9259>   MOVEA.l D0,A3
00024D2C <AmiBlitz3.ab2@9260>   CMP.w $4(A3),D4
00024D30 <AmiBlitz3.ab2@9261>    BNE.w JL_0_6E90
00024D34 <AmiBlitz3.ab2@9262>   CMP.w $6(A3),D5
00024D38 <AmiBlitz3.ab2@9263>    BNE.w JL_0_6E90
00024D3C <AmiBlitz3.ab2@9264> BRA.w JL_0_6ED0
00024D3E <AmiBlitz3.ab2@9267>   MOVEQ.l #$0C,D0
00024D40 <AmiBlitz3.ab2@9268>   MOVEQ.l #$01,D1
00024D46 <AmiBlitz3.ab2@9269>   MOVE.l mempool,a0
00024D4A <AmiBlitz3.ab2@9270>   JSR _AllocPooled(a6)
00024D4C <AmiBlitz3.ab2@9272>   MOVEA.l D0,A3
00024D52 <AmiBlitz3.ab2@9273>   MOVE.l tokeslist,(A3)
00024D58 <AmiBlitz3.ab2@9274>   MOVE.l A3,tokeslist
00024D5C <AmiBlitz3.ab2@9275>   MOVE.w D4,$4(A3)
00024D60 <AmiBlitz3.ab2@9276>   MOVE.w D5,$6(A3)
00024D64 <AmiBlitz3.ab2@9277>   CLR.l $8(A3)
00024D66 <AmiBlitz3.ab2@9280>   MOVEQ.l #$08,D0
00024D68 <AmiBlitz3.ab2@9281>   MOVEQ.l #$01,D1
00024D6E <AmiBlitz3.ab2@9282>   MOVE.l mempool,a0
00024D72 <AmiBlitz3.ab2@9283>   JSR _AllocPooled(a6)
00024D74 <AmiBlitz3.ab2@9285>   MOVEA.l D0,A0
00024D78 <AmiBlitz3.ab2@9286>   MOVE.l D3,$4(A0)
00024D7C <AmiBlitz3.ab2@9287>   MOVE.l $8(A3),(A0)
00024D80 <AmiBlitz3.ab2@9288>   MOVE.l A0,$8(A3)
00024D82 <AmiBlitz3.ab2@9289>   MOVE.w D4,D1
00024D86 <AmiBlitz3.ab2@9290> BRA.w searchinstr
00024D8A <AmiBlitz3.ab2@9293> tokeslist: Ds.l 1
00024D8E <AmiBlitz3.ab2@9306>   BEQ.w uselib2_org__skip
00024D90 <AmiBlitz3.ab2@9307>   MOVE.l A1,-(A7)
00024D92 <AmiBlitz3.ab2@9308>   ADDA.l D1,A1
00024D94 <AmiBlitz3.ab2@9309>   ADDQ.w #6,A1
00024D96 <AmiBlitz3.ab2@9312>     MOVE.w (A1)+,D1
00024D9A <AmiBlitz3.ab2@9313>     BEQ.w uselib2_org__done
00024D9C <AmiBlitz3.ab2@9314>     CMP.w D2,D1
00024DA0 <AmiBlitz3.ab2@9315>     BEQ.w uselib2_org__skip2
00024DA2 <AmiBlitz3.ab2@9316>     MOVE.l A1,-(A7)
00024DA6 <AmiBlitz3.ab2@9317>     BSR.w uselib
00024DA8 <AmiBlitz3.ab2@9318>     MOVEA.l (A7)+,A1
00024DAA <AmiBlitz3.ab2@9321>     ADDQ.w #2,A1
00024DAE <AmiBlitz3.ab2@9322> BRA.w uselib2_org__loop
00024DB0 <AmiBlitz3.ab2@9325>   MOVEA.l (A7)+,A1
00024DB2 <AmiBlitz3.ab2@9328> RTS
00024DB8 <AmiBlitz3.ab2@9332>   MOVEA.l libpointer,A1
00024DBC <AmiBlitz3.ab2@9335>   CMPA.w #$0,A1
00024DC0 <AmiBlitz3.ab2@9336>    BEQ.b JL_0_6F36
00024DC4 <AmiBlitz3.ab2@9337>   CMP.w $4(A1),D1
00024DC8 <AmiBlitz3.ab2@9338>    BEQ.w JL_0_6F34
00024DCA <AmiBlitz3.ab2@9339>   MOVEA.l (A1),A1
00024DCE <AmiBlitz3.ab2@9340> BRA.w JL_0_6F20
00024DD0 <AmiBlitz3.ab2@9343>   MOVEQ.l #-$01,D1
00024DD2 <AmiBlitz3.ab2@9346> RTS
00024DD6 <AmiBlitz3.ab2@9350>   MOVEM.l d0/a2,-(a7)
00024DD8 <AmiBlitz3.ab2@9351>   MOVEQ #0,d0
00024DDE <AmiBlitz3.ab2@9352>   LEA instrtab+4,a2
00024DE0 <AmiBlitz3.ab2@9353>   MOVE.w d1,d0
00024DE2 <AmiBlitz3.ab2@9354>   ASL.l #3,d0
00024DE6 <AmiBlitz3.ab2@9355>   MOVE.l 0(a2,d0.l),a1                                     ;*8
00024DEC <AmiBlitz3.ab2@9356>   CMP.l #0,a1
00024DF0 <AmiBlitz3.ab2@9357>   BNE JL_0_6F54b
00024DF6 <AmiBlitz3.ab2@9359>   MOVEA.l libpointer,A1
00024DFA <AmiBlitz3.ab2@9362>     CMPA.w #$0,A1
00024DFE <AmiBlitz3.ab2@9363>     BEQ.w noliberr
00024E02 <AmiBlitz3.ab2@9364>     CMP.w $4(A1),D1
00024E06 <AmiBlitz3.ab2@9365>     BEQ.w JL_0_6F54
00024E08 <AmiBlitz3.ab2@9366>    MOVEA.l (A1),A1
00024E0C <AmiBlitz3.ab2@9367> BRA.w JL_0_6F3E
00024E10 <AmiBlitz3.ab2@9370>   MOVE.l a1,0(a2,d0.l)
00024E14 <AmiBlitz3.ab2@9373>   MOVEM.l (a7)+,d0/a2
00024E16 <AmiBlitz3.ab2@9374> RTS
00024E1A <AmiBlitz3.ab2@9377>   MOVEM.l d0-d1/a1,-(a7)
00024E1C <AmiBlitz3.ab2@9378>   MOVEQ #0,d0
00024E22 <AmiBlitz3.ab2@9379>   LEA instrtab,a1
00024E24 <AmiBlitz3.ab2@9380>   MOVE.w d1,d0
00024E26 <AmiBlitz3.ab2@9381>   ASL.l #3,d0
00024E2A <AmiBlitz3.ab2@9382>   MOVE.l 0(a1,d0.l),a3
00024E2E <AmiBlitz3.ab2@9383>   MOVE.l 4(a1,d0.l),a2
00024E34 <AmiBlitz3.ab2@9384>   CMP.l #0,a3
00024E38 <AmiBlitz3.ab2@9385>   BNE JL_0_6F92b
00024E3E <AmiBlitz3.ab2@9387>   MOVEA.l libpointer,A2
00024E42 <AmiBlitz3.ab2@9390>   CMPA.w #$0,A2
00024E46 <AmiBlitz3.ab2@9391>   BEQ.w notokerr
00024E4A <AmiBlitz3.ab2@9392>   CMP.w $E(A2),D1
00024E4E <AmiBlitz3.ab2@9393>   BCS.w JL_0_6FB8
00024E52 <AmiBlitz3.ab2@9394>   CMP.w $10(A2),D1
00024E56 <AmiBlitz3.ab2@9395>   BCC.w JL_0_6FB8
00024E5A <AmiBlitz3.ab2@9396>   LEA $30(A2),A3
00024E5E <AmiBlitz3.ab2@9397>   TST.w $4(A2)
00024E62 <AmiBlitz3.ab2@9398>   BPL.w JL_0_6FA6
00024E66 <AmiBlitz3.ab2@9401>     CMP.w $E(A2),D1
00024E6A <AmiBlitz3.ab2@9402>     BEQ.w JL_0_6F92
00024E6C <AmiBlitz3.ab2@9403>     SUBQ.w #1,D1
00024E70 <AmiBlitz3.ab2@9404>     MOVEA.l $2(A3),A3
00024E74 <AmiBlitz3.ab2@9405> BRA.w JL_0_6F80
00024E78 <AmiBlitz3.ab2@9408>   MOVE.l a3,0(a1,d0.l)
00024E7C <AmiBlitz3.ab2@9409>   MOVE.l a2,4(a1,d0.l)
00024E80 <AmiBlitz3.ab2@9412>   MOVEM.l (a7)+,d0-d1/a1
00024E84 <AmiBlitz3.ab2@9413>   MOVEM.l D1/A1-a3,-(A7)
00024E88 <AmiBlitz3.ab2@9414>   CMP.w #1,(a3)
00024E8C <AmiBlitz3.ab2@9415>   BNE.s ex10
00024E94 <AmiBlitz3.ab2@9416>   CMP.l #$12345678,$e(a3)
00024E98 <AmiBlitz3.ab2@9417>   BNE.s ex10
00024E9E <AmiBlitz3.ab2@9418>   CMP.w #$ffff,$16(a3)
00024EA2 <AmiBlitz3.ab2@9419>   BNE.s ex10
00024EA6 <AmiBlitz3.ab2@9420>   MOVE.l $12(a3),d1
00024EAA <AmiBlitz3.ab2@9421>   BEQ.s ex10
00024EB0 <AmiBlitz3.ab2@9422>   LEA pluginbase,a3
00024EB4 <AmiBlitz3.ab2@9424> JMP 0(a2,d1.l)                                             ;plugin
00024EB8 <AmiBlitz3.ab2@9427>   MOVEM.l (A7)+,D1/A1-a3
00024EBE <AmiBlitz3.ab2@9428>   JSR stripspaces
00024EC0 <AmiBlitz3.ab2@9429>   MOVEQ #0,d0
00024EC2 <AmiBlitz3.ab2@9430>   MOVE.b (a5)+,d0
00024EC8 <AmiBlitz3.ab2@9431>   MOVE.w d0,lastchar
00024ECA <AmiBlitz3.ab2@9432>   ADDQ.l #4,a7
00024ECC <AmiBlitz3.ab2@9433> RTS
00024ECE <AmiBlitz3.ab2@9437>   MOVEA.l A2,A1
00024ED4 <AmiBlitz3.ab2@9438>   CLR.b newmode
00024ED8 <AmiBlitz3.ab2@9439>   MOVE.w $4(A1),D1
00024EDC <AmiBlitz3.ab2@9442>   BSR.w uselib3
00024EE0 <AmiBlitz3.ab2@9443>   MOVEM.l (A7)+,D1/A1-a3
00024EE2 <AmiBlitz3.ab2@9444> RTS
00024EE8 <AmiBlitz3.ab2@9447>   MOVE.w globalvarpointer,-(a7)
00024EF0 <AmiBlitz3.ab2@9448>   MOVE.w #$8004,globalvarpointer
00024EF4 <AmiBlitz3.ab2@9449>   BSR.w uselib3
00024EFA <AmiBlitz3.ab2@9450>   MOVE.w (a7)+,globalvarpointer
00024EFE <AmiBlitz3.ab2@9451>   MOVEM.l (A7)+,D1/A1-a3
00024F00 <AmiBlitz3.ab2@9452> RTS
00024F04 <AmiBlitz3.ab2@9455>     CMP.w $E(A2),D1
00024F08 <AmiBlitz3.ab2@9456>     BEQ.w JL_0_6F92
00024F0A <AmiBlitz3.ab2@9457>     SUBQ.w #1,D1
00024F0E <AmiBlitz3.ab2@9458>     MOVEA.l $2(A3),A3
00024F12 <AmiBlitz3.ab2@9459> BRA.w JL_0_6FA6
00024F14 <AmiBlitz3.ab2@9462>   MOVEA.l (A2),A2
00024F18 <AmiBlitz3.ab2@9463> BRA.w JL_0_6F5C
00024F1E <AmiBlitz3.ab2@9466> JMP writeword
00024F22 <AmiBlitz3.ab2@9469> ptr_acidlibs:   Ds.l 1                                     ;deflibsat org source
00024F26 <AmiBlitz3.ab2@9470> ptr_deflibs:    Ds.l 1                                     ;acidlibsat org source
00024F2A <AmiBlitz3.ab2@9471> ptr_userlibs:   Ds.l 1                                     ;blitzlibsat org source  ;;start of blitzlibs list!
00024F2C <AmiBlitz3.ab2@9477>   TST.l D0
00024F30 <AmiBlitz3.ab2@9478>   BEQ.w exit_loadlibsfile
00024F32 <AmiBlitz3.ab2@9479>     MOVE.l D0,D6                                           ;d6=len
00024F38 <AmiBlitz3.ab2@9480>     MOVEA.l _dosbase,A6
00024F3E <AmiBlitz3.ab2@9481>     MOVE.l #HUNK_RELOC_16__MODE_OLDFILE,D2
00024F42 <AmiBlitz3.ab2@9482>     JSR _Open(A6)
00024F44 <AmiBlitz3.ab2@9483>     MOVE.l D0,D7
00024F48 <AmiBlitz3.ab2@9484>     BEQ.w exit_loadlibsfile
00024F4A <AmiBlitz3.ab2@9485>       MOVE.l D6,D0
00024F4C <AmiBlitz3.ab2@9486>       MOVEQ.l #$01,D1
00024F52 <AmiBlitz3.ab2@9487>       MOVEA.l _execbase,A6
00024F58 <AmiBlitz3.ab2@9488>       MOVE.l mempool,a0
00024F5C <AmiBlitz3.ab2@9489>       JSR _AllocPooled(a6)
00024F5E <AmiBlitz3.ab2@9490>       MOVE.l D0,D5                                         ;start address
00024F60 <AmiBlitz3.ab2@9492>       MOVE.l D7,D1                                         ; handle
00024F62 <AmiBlitz3.ab2@9493>       MOVE.l D5,D2                                         ; buffer addr
00024F64 <AmiBlitz3.ab2@9494>       MOVE.l D6,D3                                         ; size
00024F6A <AmiBlitz3.ab2@9495>       MOVEA.l _dosbase,A6
00024F6E <AmiBlitz3.ab2@9496>       JSR _Read(A6)
00024F70 <AmiBlitz3.ab2@9497>       MOVE.l D7,D1
00024F74 <AmiBlitz3.ab2@9498>       JSR _Close(A6)
00024F76 <AmiBlitz3.ab2@9500>       MOVEA.l D5,A0                                        ; buffer addr
00024F78 <AmiBlitz3.ab2@9506>         MOVE.l (A0)+,D0                                    ; naechster Longwert nach DO
00024F7C <AmiBlitz3.ab2@9507>         BEQ.b JL_0_7044                                    ; wenn <> 0, dann
00024F80 <AmiBlitz3.ab2@9508>           LEA $20(A0),A1                                   ;   lade inhalt von D0+40bytes nach A1
00024F82 <AmiBlitz3.ab2@9509>           MOVE.l A1,(A3)                                   ;   kopiere Adresse in A1 zum libpointer
00024F84 <AmiBlitz3.ab2@9510>           MOVEA.l A1,A3                                    ;   kopiere A1 nach A3
00024F86 <AmiBlitz3.ab2@9511>           ADDA.l D0,A0                                     ;   addiere inhalt von D0 zu A0 hinzu
00024F8A <AmiBlitz3.ab2@9512>           MOVE.l -$4(A1),D0                                ;   hole die 4bytes vor nach D0
00024F8C <AmiBlitz3.ab2@9513>           ADD.l D0,D0                                      ;   verdoppele D0
00024F8E <AmiBlitz3.ab2@9514>           ADD.l D0,D0                                      ;   verdoppele D0 nochmal
00024F92 <AmiBlitz3.ab2@9515>           MOVE.l D0,$6(A1)                                 ;   schreibe D0 6bytes nach A1
00024F96 <AmiBlitz3.ab2@9516>           CLR.l $20(A1)                                    ;   loesche D0+40bytes
00024F9A <AmiBlitz3.ab2@9517>           LEA $C(A1,D0.L),A2                               ;   lade inhalt von (A1)+D0+$C nach A2
00024F9C <AmiBlitz3.ab2@9518>           CMPA.l A0,A2
00024FA0 <AmiBlitz3.ab2@9519>           BCC.b JL_0_7010                                  ; wenn A0=>A2
00024FA6 <AmiBlitz3.ab2@9520>             MOVE.l -$8(A2),$20(A1)                         ;
00024FAA <AmiBlitz3.ab2@9521>             MOVE.l A2,$24(A1)                              ;
00024FAE <AmiBlitz3.ab2@9522> BRA.w JL_0_7010
00024FB0 <AmiBlitz3.ab2@9525>       MOVE.l D5,D0
00024FB2 <AmiBlitz3.ab2@9528> RTS
00024FDC <AmiBlitz3.ab2@9532>   !basic
00025050 <AmiBlitz3.ab2@9533>    tempmapping$ = dos_AddPart{my_systemdir$,"token_mapping_userlibs.txt"}
00025084 <AmiBlitz3.ab2@9534>    dos_Delete{tempmapping$}
000250C8 <AmiBlitz3.ab2@9535>    fid.l = file_Open{tempmapping$,#file_forcewrite}
000250E6 <AmiBlitz3.ab2@9536>   !asm
000250EC <AmiBlitz3.ab2@9538>   LEA libpointer,A3
000250F2 <AmiBlitz3.ab2@9542>   MOVE.l size_deflibs,D0
000250F8 <AmiBlitz3.ab2@9543>   MOVE.l deflib,d1
000250FC <AmiBlitz3.ab2@9544>   BEQ 'l1
00025100 <AmiBlitz3.ab2@9545> BRA 'l2
00025106 <AmiBlitz3.ab2@9548>   MOVE.l #str_path_deflibs,D1
0002510A <AmiBlitz3.ab2@9551>   BSR.w load_libsfile
00025110 <AmiBlitz3.ab2@9552>   MOVE.l D0,ptr_deflibs
00025116 <AmiBlitz3.ab2@9555>   MOVE.l size_acidlibs,D0
0002511C <AmiBlitz3.ab2@9556>   MOVE.l #str_path_acidlibs,D1
00025120 <AmiBlitz3.ab2@9557>   BSR.w load_libsfile
00025126 <AmiBlitz3.ab2@9558>   MOVE.l D0,ptr_acidlibs
00025128 <AmiBlitz3.ab2@9562>   CLR.l (A3)
0002512E <AmiBlitz3.ab2@9563>   MOVE.l A3,ptr_userlibs
00025134 <AmiBlitz3.ab2@9568>   LEA str_libfilename,A0
0002513A <AmiBlitz3.ab2@9569>   LEA str_path_userlibs,A1
0002513C <AmiBlitz3.ab2@9572>     MOVE.b (A1)+,(A0)+
00025140 <AmiBlitz3.ab2@9573>   BNE.b JL_0_708E
00025142 <AmiBlitz3.ab2@9575>   SUBQ.w #1,A0
00025146 <AmiBlitz3.ab2@9576>   MOVE.b #$2F,(A0)+
00025148 <AmiBlitz3.ab2@9579>   MOVE.l A0,-(A7)                                          ; -- store str_path_userlibs in A7
0002514E <AmiBlitz3.ab2@9581>   LEA ptr_userlibs_list,A2
00025154 <AmiBlitz3.ab2@9582>   MOVEA.l ptr_userlibs,A3
0002515A <AmiBlitz3.ab2@9583>   MOVEA.l _dosbase,A6
0002515C <AmiBlitz3.ab2@9588>       MOVE.l (A2),D0                                       ; addresse aus liste nach D0
00025160 <AmiBlitz3.ab2@9589>       BNE.b JL_0_70C6                                      ; wenn nix drin, processing ueberspringen
00025162 <AmiBlitz3.ab2@9591>       CLR.l (A3)
00025164 <AmiBlitz3.ab2@9592>       ADDQ.w #4,A7
0002518E <AmiBlitz3.ab2@9593>       !basic
000251A2 <AmiBlitz3.ab2@9594>       If fid<>-1
000251AC <AmiBlitz3.ab2@9595>         file_Close{fid}
000251B8 <AmiBlitz3.ab2@9596>         fid = -1
000251D6 <AmiBlitz3.ab2@9598>       !asm
000251DA <AmiBlitz3.ab2@9599> BRA.w process_libraries
000251DC <AmiBlitz3.ab2@9602>       MOVEA.l D0,A2                                        ; addresse zureuck nach A2
000251E0 <AmiBlitz3.ab2@9603>       TST.w $4(A2)                                         ; naechste addresse pruefen
000251E4 <AmiBlitz3.ab2@9604>     BEQ.b JL_0_70BA
000251E8 <AmiBlitz3.ab2@9606>     LEA $6(A2),A1
000251EA <AmiBlitz3.ab2@9607>     MOVEA.l (A7),A0
000251EC <AmiBlitz3.ab2@9610>       MOVE.b (A1)+,(A0)+
000251F0 <AmiBlitz3.ab2@9611>     BNE.w JL_0_70D4
000251F2 <AmiBlitz3.ab2@9615>     MOVE.l A0,-(A7)
000251F8 <AmiBlitz3.ab2@9616>     MOVE.l #str_libfilename,D1
000251FA <AmiBlitz3.ab2@9617>     MOVEQ.l #-$02,D2
00025200 <AmiBlitz3.ab2@9618>     MOVEA.l _dosbase,A6
00025204 <AmiBlitz3.ab2@9619>      JSR _Lock(A6)
00025206 <AmiBlitz3.ab2@9620>     MOVE.l D0,D1
0002520A <AmiBlitz3.ab2@9621>      BEQ.w JL_0_7156
0002520C <AmiBlitz3.ab2@9622>     MOVEA.l (A7),A0
00025212 <AmiBlitz3.ab2@9623>     MOVE.b #$2F,-$1(A0)
00025214 <AmiBlitz3.ab2@9626>     MOVE.l D1,-(A7)
0002521A <AmiBlitz3.ab2@9627>     MOVE.l #ptr_parameterstore,D2
00025220 <AmiBlitz3.ab2@9628>     MOVEA.l _dosbase,A6
00025224 <AmiBlitz3.ab2@9629>     JSR _Examine(A6)
00025226 <AmiBlitz3.ab2@9630>     TST.l D0
0002522A <AmiBlitz3.ab2@9631>      BEQ.w JL_0_7150
00025230 <AmiBlitz3.ab2@9634>     LEA fib_FileName,A0
00025234 <AmiBlitz3.ab2@9635>     BSR.w check_for_infoextention
00025238 <AmiBlitz3.ab2@9636>     BEQ.w JL_0_7150
00025262 <AmiBlitz3.ab2@9639>     !basic
000252E6 <AmiBlitz3.ab2@9640>       Poke$ ?str_libfilename,dos_AddPart{Peek$(?str_path_userlibs),Peek$(?fib_FileName)}
00025304 <AmiBlitz3.ab2@9641>     !asm
0002530A <AmiBlitz3.ab2@9642>     MOVE.l #str_libfilename,D1
0002530E <AmiBlitz3.ab2@9643>     BSR.w open_userlibfile
00025310 <AmiBlitz3.ab2@9646>     MOVE.l (A7)+,D1
00025316 <AmiBlitz3.ab2@9647>     MOVEA.l _dosbase,A6
0002531A <AmiBlitz3.ab2@9648>     JSR _UnLock(A6)
0002531C <AmiBlitz3.ab2@9651>     ADDQ.w #4,A7
00025320 <AmiBlitz3.ab2@9652> BRA.w JL_0_70BA
00025326 <AmiBlitz3.ab2@9655>   MOVE.l #HUNK_RELOC_16__MODE_OLDFILE,D2
0002532C <AmiBlitz3.ab2@9656>   MOVEA.l _dosbase,A6
00025330 <AmiBlitz3.ab2@9657>    JSR _Open(A6)
00025332 <AmiBlitz3.ab2@9658>   MOVE.l D0,D7
00025336 <AmiBlitz3.ab2@9659>    BEQ.w exit_userlibfile
00025338 <AmiBlitz3.ab2@9662>   MOVE.l D7,D1                                             ; filehandle
0002533E <AmiBlitz3.ab2@9663>   MOVE.l #optstuff,D2                                     ; buffer
00025344 <AmiBlitz3.ab2@9664>   MOVEA.l _dosbase,A6
00025346 <AmiBlitz3.ab2@9665>   MOVEQ.l #$20,D3                                          ; size
0002534A <AmiBlitz3.ab2@9666>   JSR _Read(A6)
00025350 <AmiBlitz3.ab2@9669>   MOVE.l optstuff+28,D6
00025352 <AmiBlitz3.ab2@9670>   LSL.l #2,D6
00025354 <AmiBlitz3.ab2@9671>   MOVE.l D6,D0
00025356 <AmiBlitz3.ab2@9672>   MOVEQ.l #$01,D1
0002535C <AmiBlitz3.ab2@9673>   MOVEA.l _execbase,A6
00025362 <AmiBlitz3.ab2@9674>   MOVE.l mempool,a0
00025366 <AmiBlitz3.ab2@9675>   JSR _AllocPooled(a6)
00025368 <AmiBlitz3.ab2@9676>   MOVEA.l D0,A5
0002536E <AmiBlitz3.ab2@9679>   MOVEA.l _dosbase,A6
00025370 <AmiBlitz3.ab2@9680>   MOVE.l D7,D1                                             ; filehandle
00025372 <AmiBlitz3.ab2@9681>   MOVE.l A5,D2                                             ; buffer
00025374 <AmiBlitz3.ab2@9682>   MOVE.l D6,D3                                             ; size
00025378 <AmiBlitz3.ab2@9683>    JSR _Read(A6)
0002537A <AmiBlitz3.ab2@9684>   MOVE.l A5,(A3)
0002537C <AmiBlitz3.ab2@9686>   MOVE.l A5,d0
0002537E <AmiBlitz3.ab2@9688>   MOVEA.l A5,A3
00025382 <AmiBlitz3.ab2@9689>   MOVE.l D6,$6(A5)
00025386 <AmiBlitz3.ab2@9690>   CLR.l $20(A5)
000253B0 <AmiBlitz3.ab2@9692>   !basic
000253BA <AmiBlitz3.ab2@9694>   addr_libnum.l = PutD0 + 4
000253CE <AmiBlitz3.ab2@9695>   If fid<>-1
0002546E <AmiBlitz3.ab2@9696>     currentlib$ = LSet$(Peek.s(?fib_FileName),30)+";"+LSet$(Get_Libinfo{addr_libnum},30) ;+";"+Str$(Peek.w(addr_libnum))
000254A0 <AmiBlitz3.ab2@9697>     file_WriteLine{fid,currentlib$}
000254BE <AmiBlitz3.ab2@9699>   !asm
000254C0 <AmiBlitz3.ab2@9702>   MOVE.l D7,D1                                             ; filehandle
000254C6 <AmiBlitz3.ab2@9703>   MOVE.l #optstuff,D2                                     ; buffer
000254C8 <AmiBlitz3.ab2@9704>   MOVEQ.l #$0C,D3                                          ; size
000254CE <AmiBlitz3.ab2@9705>   MOVEA.l _dosbase,A6
000254D2 <AmiBlitz3.ab2@9706>    JSR _Read(A6)
000254D8 <AmiBlitz3.ab2@9708>   CMP.l #$C,D0
000254DC <AmiBlitz3.ab2@9709>    BCS.w close_and_exit_userlibfile
000254E2 <AmiBlitz3.ab2@9712>   MOVE.l optstuff+4,D0
000254E6 <AmiBlitz3.ab2@9713>   MOVE.l D0,$20(A5)
000254E8 <AmiBlitz3.ab2@9714>   LSL.l #2,D0
000254EA <AmiBlitz3.ab2@9715>   MOVE.l D0,D5
000254EC <AmiBlitz3.ab2@9716>   MOVEQ.l #$01,D1
000254F2 <AmiBlitz3.ab2@9717>   MOVEA.l _execbase,A6
000254F8 <AmiBlitz3.ab2@9718>   MOVE.l mempool,a0
000254FC <AmiBlitz3.ab2@9719>   JSR _AllocPooled(a6)
00025502 <AmiBlitz3.ab2@9721>   MOVEA.l _dosbase,A6
00025506 <AmiBlitz3.ab2@9722>   MOVE.l D0,$24(A5)
00025508 <AmiBlitz3.ab2@9723>   MOVE.l D7,D1
0002550A <AmiBlitz3.ab2@9724>   MOVE.l D0,D2
0002550C <AmiBlitz3.ab2@9725>   MOVE.l D5,D3
00025510 <AmiBlitz3.ab2@9726>   JSR _Read(A6)
00025512 <AmiBlitz3.ab2@9729>   MOVE.l D7,D1
00025518 <AmiBlitz3.ab2@9730>   MOVEA.l _dosbase,A6
0002551C <AmiBlitz3.ab2@9731> JMP _Close(A6)
0002551E <AmiBlitz3.ab2@9734> RTS
00025524 <AmiBlitz3.ab2@9740>   CLR.w number_of_objects
0002552A <AmiBlitz3.ab2@9741>   MOVEA.l end_of_tokenlist,A3
00025530 <AmiBlitz3.ab2@9742>   MOVEA.l libpointer,A2
00025534 <AmiBlitz3.ab2@9745>     CMPA.w #$0,A2
00025538 <AmiBlitz3.ab2@9746>     BEQ.w JL_0_72D8                                        ; <-- abbruch mit RTS
0002553C <AmiBlitz3.ab2@9748>     MOVE.w $4(A2),D7                                       ; <-- get tokennumber
00025540 <AmiBlitz3.ab2@9749>     BMI.w JL_0_7226
00025542 <AmiBlitz3.ab2@9750>       LSL.w #7,D7
00025544 <AmiBlitz3.ab2@9751>       ADDQ.w #1,D7
00025548 <AmiBlitz3.ab2@9752>       MOVE.w D7,$E(A2)
0002554C <AmiBlitz3.ab2@9755>     LEA $30(A2),A1
00025552 <AmiBlitz3.ab2@9756>     LEA temp1,A4
00025554 <AmiBlitz3.ab2@9759>       MOVE.w (A1),D0
00025558 <AmiBlitz3.ab2@9760>       BMI.w JL_0_72AE
0002555A <AmiBlitz3.ab2@9761>       MOVE.l A1,(A4)
0002555C <AmiBlitz3.ab2@9762>       MOVEA.l A1,A4
0002555E <AmiBlitz3.ab2@9763>       ADDQ.w #2,A4
00025560 <AmiBlitz3.ab2@9764>       ADDQ.w #6,A1
00025564 <AmiBlitz3.ab2@9765>       CMP.w #$8,D0
00025568 <AmiBlitz3.ab2@9766>       BEQ.w JL_0_7290
0002556C <AmiBlitz3.ab2@9767>         ANDI.w #$F,D0
00025570 <AmiBlitz3.ab2@9768>         BNE.w JL_0_725C
00025574 <AmiBlitz3.ab2@9769>           BSR.w skiplibreg
00025578 <AmiBlitz3.ab2@9770>           LEA $C(A1),A1
0002557A <AmiBlitz3.ab2@9771>           ADDQ.w #1,D7
0002557E <AmiBlitz3.ab2@9772> BRA.w JL_0_7230
00025582 <AmiBlitz3.ab2@9775>     BTST #$2,D0
00025586 <AmiBlitz3.ab2@9776>     BEQ.w JL_0_7274
00025588 <AmiBlitz3.ab2@9777>       ADDQ.w #4,A1
0002558A <AmiBlitz3.ab2@9780>         TST.b (A1)+
0002558E <AmiBlitz3.ab2@9781>       BPL.w JL_0_7266
00025592 <AmiBlitz3.ab2@9782>       BSR.w aligna1
00025596 <AmiBlitz3.ab2@9783> BRA.w JL_0_7290
00025598 <AmiBlitz3.ab2@9786>       MOVE.w (A1)+,D0
0002559C <AmiBlitz3.ab2@9787>       BMI.w JL_0_7290
000255A0 <AmiBlitz3.ab2@9788>       ANDI.w #$FF,D0
000255A2 <AmiBlitz3.ab2@9789>       ADDA.w D0,A1
000255A6 <AmiBlitz3.ab2@9790>       BSR.w aligna1
000255AA <AmiBlitz3.ab2@9791>       BSR.w skiplibreg
000255AE <AmiBlitz3.ab2@9792>       LEA $C(A1),A1
000255B2 <AmiBlitz3.ab2@9793> BRA.w JL_0_7274
000255B4 <AmiBlitz3.ab2@9796>     MOVE.l A1,(A3)
000255B6 <AmiBlitz3.ab2@9797>     MOVEA.l A1,A3
000255B8 <AmiBlitz3.ab2@9798>     ADDQ.w #4,A1
000255BA <AmiBlitz3.ab2@9799>     MOVE.w D7,(A1)+
000255BC <AmiBlitz3.ab2@9802>       TST.b (A1)+
000255C0 <AmiBlitz3.ab2@9803>     BNE.w JL_0_7298
000255C2 <AmiBlitz3.ab2@9806>       TST.b (A1)+
000255C6 <AmiBlitz3.ab2@9807>     BNE.w JL_0_729E
000255CA <AmiBlitz3.ab2@9809>     BSR.w aligna1
000255CC <AmiBlitz3.ab2@9810>     ADDQ.w #1,D7
000255D0 <AmiBlitz3.ab2@9811> BRA.w JL_0_7230
000255D4 <AmiBlitz3.ab2@9814>     TST.w $4(A2)
000255D8 <AmiBlitz3.ab2@9815>      BMI.w JL_0_72BA
000255DC <AmiBlitz3.ab2@9816>     MOVE.w D7,$10(A2)
000255DE <AmiBlitz3.ab2@9819>     ADDQ.w #2,A1
000255E0 <AmiBlitz3.ab2@9820>     TST.l (A1)+
000255E4 <AmiBlitz3.ab2@9821>      BEQ.w JL_0_72CC
000255EA <AmiBlitz3.ab2@9822>     ADDQ.w #1,number_of_objects
000255EE <AmiBlitz3.ab2@9823>     LEA $16(A1),A1
000255F0 <AmiBlitz3.ab2@9826>     SUBA.l A2,A1
000255F4 <AmiBlitz3.ab2@9827>     MOVE.l A1,$12(A2)
000255F6 <AmiBlitz3.ab2@9828>     MOVEA.l (A2),A2
000255FA <AmiBlitz3.ab2@9829> BRA.w JL_0_720E
000255FC <AmiBlitz3.ab2@9832>   CLR.l (A3)
00025602 <AmiBlitz3.ab2@9833>   MOVE.l A7,errstack
0002560C <AmiBlitz3.ab2@9834>   MOVE.l #AL_0_730E,errcont
00025614 <AmiBlitz3.ab2@9835>   MOVE.w #$FFFF,ezerr
00025618 <AmiBlitz3.ab2@9836>   MOVE.w #$FFFA,D1
0002561C <AmiBlitz3.ab2@9837>    BSR.w JL_0_6F38
00025622 <AmiBlitz3.ab2@9838>   MOVE.l A1,tempvm
00025626 <AmiBlitz3.ab2@9839>   MOVE.w #$FDA7,D1
0002562A <AmiBlitz3.ab2@9840>    BSR.w JL_0_6F38
00025630 <AmiBlitz3.ab2@9841>   MOVE.l A1,ffplib
00025632 <AmiBlitz3.ab2@9844> RTS
00025636 <AmiBlitz3.ab2@9847> ffplib:  Ds.l 1
00025638 <AmiBlitz3.ab2@9851>     TST.w (A1)+
0002563C <AmiBlitz3.ab2@9852>     BEQ.w JL_0_7320
0002563E <AmiBlitz3.ab2@9853>     ADDQ.w #2,A1
00025642 <AmiBlitz3.ab2@9854> BRA.w skiplibreg
00025644 <AmiBlitz3.ab2@9857> RTS
00025646 <AmiBlitz3.ab2@9861>   EXG.l A1,A0
0002564A <AmiBlitz3.ab2@9862>   BSR.w aligna1
0002564C <AmiBlitz3.ab2@9863>   EXG.l A1,A0
0002564E <AmiBlitz3.ab2@9864> RTS
00025650 <AmiBlitz3.ab2@9867>   EXG.l D0,A1
00025652 <AmiBlitz3.ab2@9868>   ADDQ.l #1,D0
00025656 <AmiBlitz3.ab2@9869>   BCLR #$0,D0
00025658 <AmiBlitz3.ab2@9870>   EXG.l D0,A1
0002565A <AmiBlitz3.ab2@9871> RTS
00025660 <AmiBlitz3.ab2@9875>   MOVEA.l _execbase,A6
00025666 <AmiBlitz3.ab2@9876>   MOVEA.l ptr_userlibs,A2
00025668 <AmiBlitz3.ab2@9877>   MOVE.l (A2),D0
0002566A <AmiBlitz3.ab2@9878>   CLR.l (A2)
0002566C <AmiBlitz3.ab2@9879>   MOVEA.l D0,A2
00025670 <AmiBlitz3.ab2@9882>     CMPA.w #$0,A2
00025674 <AmiBlitz3.ab2@9883>     BEQ.w free_userlib
00025678 <AmiBlitz3.ab2@9885>     MOVE.l $20(A2),D0
0002567C <AmiBlitz3.ab2@9886>     BEQ.b JL_0_7360
0002567E <AmiBlitz3.ab2@9887>       LSL.l #2,D0
00025684 <AmiBlitz3.ab2@9888>       MOVE.l mempool,a0
00025688 <AmiBlitz3.ab2@9889>       MOVEA.l $24(A2),A1
0002568C <AmiBlitz3.ab2@9890>       JSR _FreePooled(A6)
0002568E <AmiBlitz3.ab2@9893>     MOVEA.l A2,A1
00025692 <AmiBlitz3.ab2@9894>     MOVE.l $6(A1),D0
00025698 <AmiBlitz3.ab2@9895>     MOVE.l mempool,a0
0002569A <AmiBlitz3.ab2@9896>     MOVEA.l (A2),A2
000256A0 <AmiBlitz3.ab2@9897>     MOVEA.l _execbase,A6
000256A4 <AmiBlitz3.ab2@9898>     JSR _FreePooled(A6)
000256A8 <AmiBlitz3.ab2@9899> BRA.w JL_0_7348
000256AC <AmiBlitz3.ab2@9903>   BSR.w free_userlibs
000256B2 <AmiBlitz3.ab2@9904>   MOVEA.l _execbase,A6
000256B8 <AmiBlitz3.ab2@9905>   CLR.l libpointer
000256BE <AmiBlitz3.ab2@9906>   MOVEA.l end_of_tokenlist,A0
000256C0 <AmiBlitz3.ab2@9907>   CLR.l (A0)
000256C6 <AmiBlitz3.ab2@9909>   MOVE.l size_acidlibs,D0
000256CA <AmiBlitz3.ab2@9910>   BEQ.b JL_0_73A2
000256D0 <AmiBlitz3.ab2@9911>     MOVE.l ptr_acidlibs,D1
000256D4 <AmiBlitz3.ab2@9912>     BEQ.b JL_0_73A2
000256DA <AmiBlitz3.ab2@9913>       CLR.l ptr_acidlibs
000256DC <AmiBlitz3.ab2@9914>       MOVEA.l D1,A1
000256E2 <AmiBlitz3.ab2@9915>       MOVE.l mempool,a0
000256E8 <AmiBlitz3.ab2@9916>       MOVEA.l _execbase,A6
000256EC <AmiBlitz3.ab2@9917>       JSR _FreePooled(A6)                                 ; free acidlibs
000256F2 <AmiBlitz3.ab2@9920>   MOVE.l size_deflibs,D0
000256F6 <AmiBlitz3.ab2@9921>   BEQ.b JL_0_73BE
000256FC <AmiBlitz3.ab2@9922>     MOVE.l ptr_deflibs,D1
00025700 <AmiBlitz3.ab2@9923>     BEQ.b JL_0_73BE
00025706 <AmiBlitz3.ab2@9924>       CLR.l ptr_deflibs                                    ; d0: memorySize
00025708 <AmiBlitz3.ab2@9925>       MOVEA.l D1,A1                                        ; a1: memory
0002570E <AmiBlitz3.ab2@9926>       MOVE.l mempool,a0                                    ; a0: poolHeader
00025714 <AmiBlitz3.ab2@9927>       MOVEA.l _execbase,A6
00025718 <AmiBlitz3.ab2@9928>       JSR _FreePooled(A6)                                  ; free deflibs
0002571A <AmiBlitz3.ab2@9931> RTS
00025720 <AmiBlitz3.ab2@9935>   MOVEA.l currentmacroaddr,A0
00025722 <AmiBlitz3.ab2@9936>   MOVEA.l (A0),A2
00025724 <AmiBlitz3.ab2@9937>   CLR.l (A0)
0002572A <AmiBlitz3.ab2@9938>   MOVEA.l _execbase,A6
0002572E <AmiBlitz3.ab2@9941>     CMPA.w #$0,A2
00025732 <AmiBlitz3.ab2@9942>     BEQ.w JL_0_73FA
00025734 <AmiBlitz3.ab2@9943>     MOVEQ.l #$00,D0
00025738 <AmiBlitz3.ab2@9944>     MOVE.w $8(A2),D0
0002573C <AmiBlitz3.ab2@9945>     BEQ.w JL_0_73E8
00025740 <AmiBlitz3.ab2@9946>     MOVEA.l $4(A2),A1
00025746 <AmiBlitz3.ab2@9947>     MOVE.l mempool,a0
0002574A <AmiBlitz3.ab2@9948>     JSR _FreePooled(A6)
0002574C <AmiBlitz3.ab2@9951>     MOVEA.l A2,A1
0002574E <AmiBlitz3.ab2@9952>     MOVEA.l (A2),A2
00025750 <AmiBlitz3.ab2@9953>     MOVEQ.l #$00,D0
00025754 <AmiBlitz3.ab2@9954>     MOVE.b $C(A1),D0
0002575A <AmiBlitz3.ab2@9955>     MOVE.l mempool2,a0
0002575E <AmiBlitz3.ab2@9956>     JSR _FreePooled(A6)
00025762 <AmiBlitz3.ab2@9957> BRA.w JL_0_73CE
00025764 <AmiBlitz3.ab2@9960> RTS
0002576A <AmiBlitz3.ab2@9964>   MOVEA.l templabel,A2
00025770 <AmiBlitz3.ab2@9965>   CLR.l templabel
00025772 <AmiBlitz3.ab2@9966> RTS
00025778 <AmiBlitz3.ab2@9969>   MOVEA.l _execbase,A6                                     ;??looks like dead code?
0002577C <AmiBlitz3.ab2@9972>     CMPA.w #$0,A2
00025780 <AmiBlitz3.ab2@9973>     BEQ.w JL_0_7426
00025782 <AmiBlitz3.ab2@9974>     MOVEQ.l #$00,D0
00025786 <AmiBlitz3.ab2@9975>     MOVE.b $E(A2),D0                                       ;labeltemp
00025788 <AmiBlitz3.ab2@9976>     MOVEA.l A2,A1
0002578A <AmiBlitz3.ab2@9977>     MOVEA.l (A2),A2
00025790 <AmiBlitz3.ab2@9978>     MOVE.l mempool2,a0
00025794 <AmiBlitz3.ab2@9980> BRA.w JL_0_740C
00025796 <AmiBlitz3.ab2@9983> RTS
0002579C <AmiBlitz3.ab2@9987>   MOVEA.l data1,A4
000257A2 <AmiBlitz3.ab2@9988>   CMPA.l data2at,A4
000257A6 <AmiBlitz3.ab2@9989>   BCC.w JL_0_7442
000257A8 <AmiBlitz3.ab2@9990>     MOVE.b D1,(A4)+
000257AE <AmiBlitz3.ab2@9991>     MOVE.l A4,data1
000257B0 <AmiBlitz3.ab2@9992> RTS
000257B8 <AmiBlitz3.ab2@9995>   MOVE.w #$FFFF,dontwrite                                  ;move #-1, org source
000257BE <AmiBlitz3.ab2@9996>   ADDQ.l #1,data1
000257C0 <AmiBlitz3.ab2@9997> RTS
000257C2 <AmiBlitz3.ab2@10001>   SWAP D1
000257C6 <AmiBlitz3.ab2@10002>   BSR.w pokedata1
000257C8 <AmiBlitz3.ab2@10003>   SWAP D1
000257CE <AmiBlitz3.ab2@10006>   MOVEA.l data1,A4
000257D4 <AmiBlitz3.ab2@10007>   CMPA.l data2at,A4
000257D8 <AmiBlitz3.ab2@10008>    BCC.w JL_0_7474
000257DA <AmiBlitz3.ab2@10009>   MOVE.w D1,(A4)+
000257E0 <AmiBlitz3.ab2@10010>   MOVE.l A4,data1
000257E2 <AmiBlitz3.ab2@10011> RTS
000257EA <AmiBlitz3.ab2@10014>   MOVE.w #$FFFF,dontwrite
000257F0 <AmiBlitz3.ab2@10015>   ADDQ.l #2,data1
000257F2 <AmiBlitz3.ab2@10016> RTS
000257F8 <AmiBlitz3.ab2@10020>   MOVE.l data1,D3                                      ;write local string/type allocs
000257FA <AmiBlitz3.ab2@10021>   MOVEQ.l #$00,D4
000257FE <AmiBlitz3.ab2@10024>   CMPA.w #$0,A2
00025802 <AmiBlitz3.ab2@10025>    BEQ.w JL_0_74CAc
00025806 <AmiBlitz3.ab2@10026>   TST.w $6(A2)
0002580A <AmiBlitz3.ab2@10027>    BNE.w JL_0_74C4c
0002580E <AmiBlitz3.ab2@10028>   MOVEA.l $A(A2),A3
00025816 <AmiBlitz3.ab2@10029>   CMPI.l #$100,$4(A3)
0002581A <AmiBlitz3.ab2@10030>    BCS.w JL_0_74C4c
0002581E <AmiBlitz3.ab2@10031>   MOVE.w $4(A2),D1
00025822 <AmiBlitz3.ab2@10032>    BSR.w pokedata1
00025826 <AmiBlitz3.ab2@10033>   MOVE.w $8(A3),D1
0002582A <AmiBlitz3.ab2@10034>    BSR.w pokedata1
0002582C <AmiBlitz3.ab2@10035>   ADDQ.w #1,D4
0002582E <AmiBlitz3.ab2@10038>    MOVEA.l (A2),A2
00025832 <AmiBlitz3.ab2@10039> BRA.w JL_0_7492c
00025834 <AmiBlitz3.ab2@10042>    TST.w D4
00025838 <AmiBlitz3.ab2@10043>    BEQ.w JL_0_74E0
0002583C <AmiBlitz3.ab2@10044>   MOVE.w #$FF37,D1
00025840 <AmiBlitz3.ab2@10045>    BSR.w uselib
00025844 <AmiBlitz3.ab2@10046>   MOVE.w #$FFFA,D1
00025848 <AmiBlitz3.ab2@10047> BRA.w uselib
0002584E <AmiBlitz3.ab2@10055>   MOVEA.l varbase,A2                                       ;add alloc mem for types/strings global
00025854 <AmiBlitz3.ab2@10058>   MOVE.l data1,D3
00025856 <AmiBlitz3.ab2@10059>   MOVEQ.l #$00,D4
0002585C <AmiBlitz3.ab2@10060>   TST.b iserror
00025860 <AmiBlitz3.ab2@10061>   BEQ JL_0_7492
00025862 <AmiBlitz3.ab2@10062>   RTS
00025866 <AmiBlitz3.ab2@10064>    CMPA.w #$0,A2
0002586A <AmiBlitz3.ab2@10065>    BEQ.w JL_0_74CA
0002586E <AmiBlitz3.ab2@10066>   TST.w $6(A2)
00025872 <AmiBlitz3.ab2@10067>    BNE.w JL_0_74C4
00025876 <AmiBlitz3.ab2@10068>   MOVEA.l $A(A2),A3
0002587E <AmiBlitz3.ab2@10069>   CMPI.l #$100,$4(A3)
00025882 <AmiBlitz3.ab2@10070>    BCS.w JL_0_74C4
00025886 <AmiBlitz3.ab2@10071>   MOVE.w $4(A2),D1
0002588A <AmiBlitz3.ab2@10072>    BSR.w pokedata1
0002588E <AmiBlitz3.ab2@10073>   MOVE.w $8(A3),D1
00025892 <AmiBlitz3.ab2@10074>    BSR.w pokedata1
00025894 <AmiBlitz3.ab2@10075>   ADDQ.w #1,D4
00025896 <AmiBlitz3.ab2@10078>   MOVEA.l (A2),A2
0002589A <AmiBlitz3.ab2@10079> BRA.w JL_0_7492
000258A0 <AmiBlitz3.ab2@10083>   MOVEA.l sharebase,A2
000258A4 <AmiBlitz3.ab2@10086>   CMPA.w #$0,A2
000258A8 <AmiBlitz3.ab2@10087>    BEQ.w JL_0_74CAb
000258AC <AmiBlitz3.ab2@10089>   TST.w $6(A2)
000258B0 <AmiBlitz3.ab2@10090>    BNE.w JL_0_74C4b
000258B4 <AmiBlitz3.ab2@10091>   MOVEA.l $A(A2),A3
000258BC <AmiBlitz3.ab2@10092>   CMPI.l #$100,$4(A3)
000258C0 <AmiBlitz3.ab2@10093>    BCS.w JL_0_74C4b
000258C4 <AmiBlitz3.ab2@10094>   MOVE.w $4(A2),D1
000258C8 <AmiBlitz3.ab2@10095>    BSR.w pokedata1
000258CC <AmiBlitz3.ab2@10096>   MOVE.w $8(A3),D1
000258D0 <AmiBlitz3.ab2@10097>    BSR.w pokedata1
000258D2 <AmiBlitz3.ab2@10098>   ADDQ.w #1,D4
000258D4 <AmiBlitz3.ab2@10101>   MOVEA.l (A2),A2
000258D8 <AmiBlitz3.ab2@10102> BRA.w JL_0_7492b
000258DA <AmiBlitz3.ab2@10105>    TST.w D4
000258DE <AmiBlitz3.ab2@10106>    BEQ.w JL_0_74E0
000258E2 <AmiBlitz3.ab2@10107>   MOVE.w #$FF37,D1
000258E6 <AmiBlitz3.ab2@10108>    BSR.w uselib                                            ;use statics lib
000258EA <AmiBlitz3.ab2@10109>   MOVE.w #$FFFA,D1                                         ;use memlib
000258EE <AmiBlitz3.ab2@10110> BRA.w uselib
000258F0 <AmiBlitz3.ab2@10113> RTS
000258F6 <AmiBlitz3.ab2@10117>   MOVE.w numtoa2,D1
000258FA <AmiBlitz3.ab2@10118>    BSR.w writeword
000258FE <AmiBlitz3.ab2@10119>    BSR.w addoff
00025900 <AmiBlitz3.ab2@10120>   MOVE.l D3,D1
00025904 <AmiBlitz3.ab2@10121>    BSR.w writelong
00025906 <AmiBlitz3.ab2@10122>   SUBQ.w #1,D4
0002590C <AmiBlitz3.ab2@10123>   MOVE.w D4,endarray+2
00025912 <AmiBlitz3.ab2@10124>   MOVE.l endarray,D1
00025916 <AmiBlitz3.ab2@10125> BRA.w writelong
00025918 <AmiBlitz3.ab2@10129>   MOVE.l D3,-(A7)
0002591E <AmiBlitz3.ab2@10132>   MOVEA.l _dosbase,A6
00025922 <AmiBlitz3.ab2@10133>   JSR _Write(a6)
00025924 <AmiBlitz3.ab2@10135>   CMP.l (A7)+,D0
00025928 <AmiBlitz3.ab2@10136>    BNE.w JL_0_7516
0002592A <AmiBlitz3.ab2@10137> RTS
0002592C <AmiBlitz3.ab2@10140>   MOVE.l D7,D1
00025932 <AmiBlitz3.ab2@10142>   MOVEA.l _dosbase,A6
00025936 <AmiBlitz3.ab2@10143>   JSR _Close(a6)
0002593C <AmiBlitz3.ab2@10146> JMP error_create_exe
00025942 <AmiBlitz3.ab2@10155>   MOVE.l A7,errstack
00025946 <AmiBlitz3.ab2@10156>   MOVEM.l d2-d7/a2-a6,-(a7)
00025950 <AmiBlitz3.ab2@10157>   MOVE.l #AL_0_7790,errcont
00025956 <AmiBlitz3.ab2@10158>    JSR call_setpointerbusy
0002595E <AmiBlitz3.ab2@10159>   MOVE.w #$FFFF,anyerrs
00025968 <AmiBlitz3.ab2@10160>   CMP.l #-1,chipstart
0002596C <AmiBlitz3.ab2@10161>   BEQ 'l01
00025972 <AmiBlitz3.ab2@10162>   MOVE.l chipend,d1
00025974 <AmiBlitz3.ab2@10163>   ADDQ.l #3,d1
0002597A <AmiBlitz3.ab2@10164>   AND.l #$fffffffc,d1                                      ;bug
00025980 <AmiBlitz3.ab2@10165>   MOVE.l d1,chipend
00025982 <AmiBlitz3.ab2@10166>   MOVE.l d1,a1
00025988 <AmiBlitz3.ab2@10167>   MOVE.l chipstart,a0
0002598A <AmiBlitz3.ab2@10168>   MOVE.l a1,d1
0002598C <AmiBlitz3.ab2@10169>   SUB.l a0,d1
00025992 <AmiBlitz3.ab2@10170>   MOVE.l d1,chipsize
0002599C <AmiBlitz3.ab2@10173>   CMP.l #-1,bssstart
000259A0 <AmiBlitz3.ab2@10174>   BEQ 'l11
000259A6 <AmiBlitz3.ab2@10175>   MOVE.l realbssend,a1
000259AC <AmiBlitz3.ab2@10176>   MOVE.l bssstart,a0
000259AE <AmiBlitz3.ab2@10177>   MOVE.l a1,d1
000259B0 <AmiBlitz3.ab2@10178>   SUB.l a0,d1
000259B6 <AmiBlitz3.ab2@10179>   MOVE.l d1,bsssize
000259BA <AmiBlitz3.ab2@10180>   BEQ 'l11
000259BC <AmiBlitz3.ab2@10183>   TST.b (a0)+
000259C0 <AmiBlitz3.ab2@10184>   BEQ 'l31
000259C6 <AmiBlitz3.ab2@10185>   TST.b debugmode
000259CA <AmiBlitz3.ab2@10186>   BEQ 'l1
000259D0 <AmiBlitz3.ab2@10187>   TST.b exdebug
000259D4 <AmiBlitz3.ab2@10188>   BNE 'l31
000259DA <AmiBlitz3.ab2@10191>   MOVE.l #nodata,-(a7)
000259E0 <AmiBlitz3.ab2@10192> JMP handle_compileerror
000259E2 <AmiBlitz3.ab2@10195>   CMP.l a0,a1
000259E6 <AmiBlitz3.ab2@10196>   BGT 'l32
000259EC <AmiBlitz3.ab2@10197>   MOVE.l bssend,d1
000259EE <AmiBlitz3.ab2@10198>   ADDQ.l #3,d1
000259F4 <AmiBlitz3.ab2@10199>   AND.l #$fffffffc,d1                                      ;bug
000259FA <AmiBlitz3.ab2@10200>   MOVE.l d1,bssend
000259FC <AmiBlitz3.ab2@10201>   MOVE.l d1,a1
00025A02 <AmiBlitz3.ab2@10202>   MOVE.l bssstart,a0
00025A04 <AmiBlitz3.ab2@10203>   MOVE.l a1,d1
00025A06 <AmiBlitz3.ab2@10204>   SUB.l a0,d1
00025A0C <AmiBlitz3.ab2@10205>   MOVE.l d1,bsssize
00025A10 <AmiBlitz3.ab2@10208>   MOVEM.l d5-d7/d3,-(a7)
00025A16 <AmiBlitz3.ab2@10209>   MOVE.w dontwrite,D1
00025A1A <AmiBlitz3.ab2@10210>   BNE.w JL_0_757C
00025A20 <AmiBlitz3.ab2@10211>   MOVE.l chipsize,d5
00025A26 <AmiBlitz3.ab2@10212>   MOVE.l bsssize,d3
00025A2C <AmiBlitz3.ab2@10213>   MOVE.l chipstart,d7
00025A32 <AmiBlitz3.ab2@10214>   MOVE.l bssstart,d6
00025A38 <AmiBlitz3.ab2@10215>   MOVEA.l hunkoffsetbase,A2
00025A3E <AmiBlitz3.ab2@10216>   MOVEA.l destbufferstart,A1
00025A40 <AmiBlitz3.ab2@10217>   MOVE.l A1,D2
00025A46 <AmiBlitz3.ab2@10218>   ADD.l noinits,D2
00025A4C <AmiBlitz3.ab2@10219>   CLR.l hunkoffsetnum
00025A50 <AmiBlitz3.ab2@10222>   CMPA.w #$0,A2
00025A54 <AmiBlitz3.ab2@10223>    BEQ.w JL_0_757C
00025A58 <AmiBlitz3.ab2@10224>   MOVE.l $4(A2),D0
00025A5C <AmiBlitz3.ab2@10225>    LEA $0(a1,d0.l),a0
00025A5E <AmiBlitz3.ab2@10226>    MOVE.l (a0),d1
00025A60 <AmiBlitz3.ab2@10227>   TST.l d1
00025A64 <AmiBlitz3.ab2@10228>    BMI.w 'lm1
00025A6C <AmiBlitz3.ab2@10229>   MOVE.b #0,newhunk
00025A76 <AmiBlitz3.ab2@10230>   CMP.l #-1,chipstart
00025A7A <AmiBlitz3.ab2@10231>   BEQ 'l10
00025A80 <AmiBlitz3.ab2@10232>   CMP.l chipstart,d1
00025A84 <AmiBlitz3.ab2@10233>   BLT 'l10
00025A8C <AmiBlitz3.ab2@10234>   MOVE.b #1,newhunk
00025A92 <AmiBlitz3.ab2@10235>   CMP.l chipend,d1
00025A96 <AmiBlitz3.ab2@10236>   BGE 'l110
00025A98 <AmiBlitz3.ab2@10237>   SUB.l d7,(a0)
00025AA0 <AmiBlitz3.ab2@10238>   ADD.l #$80000000,4(a2)
00025AA4 <AmiBlitz3.ab2@10239> BRA JL_0_7576
00025AA8 <AmiBlitz3.ab2@10242>   SUB.l d5,0(a0)
00025AB2 <AmiBlitz3.ab2@10245>   CMP.l #-1,bssstart
00025AB6 <AmiBlitz3.ab2@10246>     BEQ 'l11
00025ABC <AmiBlitz3.ab2@10247>   CMP.l bssstart,d1
00025AC0 <AmiBlitz3.ab2@10248>   BLT 'l11
00025AC6 <AmiBlitz3.ab2@10249>   CMP.l bssend,d1
00025ACA <AmiBlitz3.ab2@10250>   BGE 'l111
00025AD0 <AmiBlitz3.ab2@10251>   TST.b newhunk
00025AD4 <AmiBlitz3.ab2@10252>   BEQ 'ln1
00025AD6 <AmiBlitz3.ab2@10253>   ADD.l d5,(a0)
00025AD8 <AmiBlitz3.ab2@10256>   SUB.l d6,(a0)
00025AE0 <AmiBlitz3.ab2@10257>   ADD.l #$40000000,4(a2)
00025AE4 <AmiBlitz3.ab2@10258> BRA JL_0_7576
00025AE8 <AmiBlitz3.ab2@10261>   SUB.l d3,0(a0)
00025AEA <AmiBlitz3.ab2@10264>   SUB.l D2,(A0)
00025AF0 <AmiBlitz3.ab2@10267>   ADDQ.l #1,hunkoffsetnum
00025AF2 <AmiBlitz3.ab2@10270>    MOVEA.l (A2),A2
00025AF6 <AmiBlitz3.ab2@10271> BRA.w JL_0_755E
00025AFA <AmiBlitz3.ab2@10275>   MOVEM.l (a7)+,d5-d7/d3
00025B00 <AmiBlitz3.ab2@10276>   MOVE.l ptr_newexefilename,D1
00025B06 <AmiBlitz3.ab2@10277>   MOVE.l #HUNK_RELOC_8__MODE_NEWFILE,D2
00025B0C <AmiBlitz3.ab2@10278>   MOVEA.l _dosbase,A6
00025B10 <AmiBlitz3.ab2@10279>    JSR _Open(A6)
00025B12 <AmiBlitz3.ab2@10280>   MOVE.l D0,D7
00025B16 <AmiBlitz3.ab2@10281>    BEQ.w execerr
00025B1C <AmiBlitz3.ab2@10282>   MOVE.l objlen,D0
00025B22 <AmiBlitz3.ab2@10283>   SUB.l #moremem,d0
00025B28 <AmiBlitz3.ab2@10284>   SUB.l noinits,D0
00025B32 <AmiBlitz3.ab2@10285>   CMP.l #-1,bssstart
00025B36 <AmiBlitz3.ab2@10286>   BEQ 'l60
00025B3C <AmiBlitz3.ab2@10287>   SUB.l bsssize,d0
00025B42 <AmiBlitz3.ab2@10288>   SUB.l chipsize,d0
00025B46 <AmiBlitz3.ab2@10289> BRA.s 'l61
00025B50 <AmiBlitz3.ab2@10292>   CMP.l #-1,chipstart
00025B54 <AmiBlitz3.ab2@10293>   BEQ 'l61
00025B5A <AmiBlitz3.ab2@10294>   SUB.l bsssize,d0
00025B60 <AmiBlitz3.ab2@10295>   SUB.l chipsize,d0
00025B62 <AmiBlitz3.ab2@10298>   ADDQ.l #3,D0
00025B64 <AmiBlitz3.ab2@10299>   LSR.l #2,D0
00025B6A <AmiBlitz3.ab2@10300>   MOVE.l D0,tstsize1
00025B70 <AmiBlitz3.ab2@10301>   MOVE.l D0,tstsize2
00025B72 <AmiBlitz3.ab2@10302>   MOVE.l D7,D1
00025B78 <AmiBlitz3.ab2@10303>   MOVE.l #tsthead,D2                                      ;hunkbegin
00025B7A <AmiBlitz3.ab2@10304>   MOVEQ.l #$20,D3
00025B84 <AmiBlitz3.ab2@10305>   CMP.l #-1,bssstart
00025B88 <AmiBlitz3.ab2@10306>   BEQ 'lb1
00025B92 <AmiBlitz3.ab2@10307>   CMP.l #-1,chipstart
00025B96 <AmiBlitz3.ab2@10308>   BEQ 'lb1
00025BA0 <AmiBlitz3.ab2@10309>   MOVE.l #1,bssnum
00025BAA <AmiBlitz3.ab2@10310>   MOVE.l #2,chipnum
00025BAC <AmiBlitz3.ab2@10311>   MOVEQ.l #$28,D3
00025BB2 <AmiBlitz3.ab2@10312>   MOVE.l bsssize,d2
00025BB4 <AmiBlitz3.ab2@10313>   ADDQ.l #3,d2
00025BB6 <AmiBlitz3.ab2@10314>   ASR.l #2,d2
00025BBC <AmiBlitz3.ab2@10315>   MOVE.l d2,hunkend+8
00025BC2 <AmiBlitz3.ab2@10316>   MOVE.l d2,bsssize3
00025BC8 <AmiBlitz3.ab2@10317>   MOVE.l chipsize,d2
00025BCA <AmiBlitz3.ab2@10318>   ADDQ.l #3,d2
00025BCC <AmiBlitz3.ab2@10319>   ASR.l #2,d2
00025BD2 <AmiBlitz3.ab2@10320>   MOVE.l d2,chipsize2
00025BDC <AmiBlitz3.ab2@10321>   ADD.l #$40000000,chipsize2
00025BE2 <AmiBlitz3.ab2@10322>   MOVE.l d2,hunkend2+8
00025BE8 <AmiBlitz3.ab2@10323>   MOVE.l D0,tstsize1c
00025BEE <AmiBlitz3.ab2@10324>   MOVE.l D0,tstsize2c
00025BF4 <AmiBlitz3.ab2@10325>   MOVE.l #hunkbegin2,d2
00025BF8 <AmiBlitz3.ab2@10326> BRA 'l100
00025C02 <AmiBlitz3.ab2@10329>   CMP.l #-1,bssstart
00025C06 <AmiBlitz3.ab2@10330>   BEQ 'l10
00025C10 <AmiBlitz3.ab2@10331>   MOVE.l #1,bssnum
00025C12 <AmiBlitz3.ab2@10332>   MOVEQ.l #$24,D3
00025C18 <AmiBlitz3.ab2@10333>   MOVE.l bsssize,d2
00025C1A <AmiBlitz3.ab2@10334>   ADDQ.l #3,d2
00025C1C <AmiBlitz3.ab2@10335>   ASR.l #2,d2
00025C22 <AmiBlitz3.ab2@10336>   MOVE.l d2,hunkend+8
00025C28 <AmiBlitz3.ab2@10337>   MOVE.l d2,bsssize2
00025C2E <AmiBlitz3.ab2@10338>   MOVE.l D0,tstsize1b
00025C34 <AmiBlitz3.ab2@10339>   MOVE.l D0,tstsize2b
00025C3A <AmiBlitz3.ab2@10340>   MOVE.l #hunkbegin,d2
00025C44 <AmiBlitz3.ab2@10343>   CMP.l #-1,chipstart
00025C48 <AmiBlitz3.ab2@10344>   BEQ 'l100
00025C52 <AmiBlitz3.ab2@10345>   MOVE.l #1,chipnum
00025C54 <AmiBlitz3.ab2@10346>   MOVEQ.l #$24,D3
00025C5A <AmiBlitz3.ab2@10347>   MOVE.l chipsize,d2
00025C5C <AmiBlitz3.ab2@10348>   ADDQ.l #3,d2
00025C5E <AmiBlitz3.ab2@10349>   ASR.l #2,d2
00025C64 <AmiBlitz3.ab2@10350>   MOVE.l d2,hunkend2+8
00025C6A <AmiBlitz3.ab2@10351>   MOVE.l d2,bsssize2
00025C74 <AmiBlitz3.ab2@10352>   ADD.l #$40000000,bsssize2
00025C7A <AmiBlitz3.ab2@10353>   MOVE.l D0,tstsize1b
00025C80 <AmiBlitz3.ab2@10354>   MOVE.l D0,tstsize2b
00025C86 <AmiBlitz3.ab2@10355>   MOVE.l #hunkbegin,d2
00025C8A <AmiBlitz3.ab2@10358>    BSR.w mywrite
00025C90 <AmiBlitz3.ab2@10359>   MOVE.l destbufferstart,D2
00025C96 <AmiBlitz3.ab2@10360>   ADD.l noinits,D2
00025C9C <AmiBlitz3.ab2@10361>   MOVE.l objlen,D3
00025CA2 <AmiBlitz3.ab2@10362>   SUB.l #moremem,d3
00025CA8 <AmiBlitz3.ab2@10363>   SUB.l noinits,D3
00025CB2 <AmiBlitz3.ab2@10364>   CMP.l #-1,bssstart
00025CB6 <AmiBlitz3.ab2@10365>   BNE 'l40
00025CC0 <AmiBlitz3.ab2@10366>   CMP.l #-1,chipstart
00025CC4 <AmiBlitz3.ab2@10367>   BNE 'l40
00025CC8 <AmiBlitz3.ab2@10368> BRA 'l41
00025CCE <AmiBlitz3.ab2@10371>   MOVE.l codeend,d1
00025CD0 <AmiBlitz3.ab2@10372>     SUB.l d2,d1
00025CD2 <AmiBlitz3.ab2@10373>     MOVE.l d1,d3
00025CD8 <AmiBlitz3.ab2@10374>   SUB.l bsssize,d3
00025CDE <AmiBlitz3.ab2@10375>   SUB.l chipsize,d3
00025CE0 <AmiBlitz3.ab2@10376>   MOVE.l D7,D1
00025CE4 <AmiBlitz3.ab2@10377>   BSR.w mywrite
00025CEA <AmiBlitz3.ab2@10378>   MOVE.l objlen,D3
00025CF0 <AmiBlitz3.ab2@10379>   SUB.l #moremem,d3
00025CF6 <AmiBlitz3.ab2@10380>   SUB.l noinits,D3
00025CF8 <AmiBlitz3.ab2@10381>   MOVE.l d3,d1
00025CFE <AmiBlitz3.ab2@10382>   MOVE.l destbufferstart,D2
00025D04 <AmiBlitz3.ab2@10383>   ADD.l noinits,D2
00025D06 <AmiBlitz3.ab2@10384>   ADD.l d2,d1
00025D0C <AmiBlitz3.ab2@10385>   SUB.l codeend,d1
00025D0E <AmiBlitz3.ab2@10386>   MOVE.l d1,d3
00025D14 <AmiBlitz3.ab2@10387>   MOVE.l codeend,d2
00025D16 <AmiBlitz3.ab2@10390>   MOVE.l d2,d1
00025D18 <AmiBlitz3.ab2@10391>   ADD.l d3,d1
00025D1A <AmiBlitz3.ab2@10392>   ADDQ.l #3,D1
00025D20 <AmiBlitz3.ab2@10393>   ANDI.l #$FFFFFFFC,D1
00025D22 <AmiBlitz3.ab2@10394>   SUB.l d2,d1
00025D24 <AmiBlitz3.ab2@10395>   MOVE.l d1,d3
00025D26 <AmiBlitz3.ab2@10396>   MOVE.l D7,D1
00025D2A <AmiBlitz3.ab2@10397>    BSR.w mywrite
00025D34 <AmiBlitz3.ab2@10398>   MOVE.l hunkoffsetcounter,tstsize3
00025D38 <AmiBlitz3.ab2@10399>    BEQ.w JL_0_7646
00025D3A <AmiBlitz3.ab2@10400>   MOVE.l D7,D1
00025D40 <AmiBlitz3.ab2@10401>   MOVE.l #tstend,D2
00025D42 <AmiBlitz3.ab2@10402>   MOVEQ.l #$04,D3
00025D46 <AmiBlitz3.ab2@10403>    BSR.w mywrite
00025D4C <AmiBlitz3.ab2@10404>    MOVEA.l _execbase,A6
00025D52 <AmiBlitz3.ab2@10405>    MOVE.l hunkoffsetcounter,d0
00025D54 <AmiBlitz3.ab2@10406>    ASL.l #2,d0
00025D5A <AmiBlitz3.ab2@10407>    ADD.l #12,d0
00025D5C <AmiBlitz3.ab2@10408>    MOVEQ #0,d1
00025D60 <AmiBlitz3.ab2@10409>    JSR _AllocMem(a6)
00025D62 <AmiBlitz3.ab2@10410>    TST.l d0
00025D66 <AmiBlitz3.ab2@10411>    BEQ nomem
00025D6C <AmiBlitz3.ab2@10412>    MOVE.l noinits,D4
00025D6E <AmiBlitz3.ab2@10413>    MOVE.l d5,-(a7)
00025D70 <AmiBlitz3.ab2@10414>    MOVE.l d0,d5
00025D72 <AmiBlitz3.ab2@10415>    MOVE.l d0,a1
00025D78 <AmiBlitz3.ab2@10416>    MOVEA.l hunkoffsetbase,A2
00025D80 <AmiBlitz3.ab2@10417>    MOVE.b #0,newhunk
00025D84 <AmiBlitz3.ab2@10420>   CMPA.w #$0,A2
00025D88 <AmiBlitz3.ab2@10421>    BEQ.w savehunk
00025D8E <AmiBlitz3.ab2@10422>   MOVE.l destbufferstart,D2
00025D94 <AmiBlitz3.ab2@10423>   ADD.l noinits,D2
00025D98 <AmiBlitz3.ab2@10424>   MOVE.l  $4(A2),d1
00025D9C <AmiBlitz3.ab2@10425>   BTST #31,d1
00025DA0 <AmiBlitz3.ab2@10426>   BEQ 'lh1
00025DA8 <AmiBlitz3.ab2@10427>   MOVE.b #1,newhunk
00025DAC <AmiBlitz3.ab2@10428> BRA 'lh3
00025DB0 <AmiBlitz3.ab2@10431>   BTST #30,d1
00025DB4 <AmiBlitz3.ab2@10432>   BEQ 'lh2
00025DBC <AmiBlitz3.ab2@10433>   MOVE.b #1,newhunk
00025DC0 <AmiBlitz3.ab2@10434> BRA 'lh3
00025DC2 <AmiBlitz3.ab2@10437>   ADD.l d1,d2
00025DC8 <AmiBlitz3.ab2@10438>   CMP.l chipend,d2
00025DCC <AmiBlitz3.ab2@10439>   BLT 'l100
00025DD2 <AmiBlitz3.ab2@10440>   SUB.l chipsize,d1
00025DD8 <AmiBlitz3.ab2@10443>   CMP.l bssend,d2
00025DDC <AmiBlitz3.ab2@10444>   BLT 'l101
00025DE2 <AmiBlitz3.ab2@10445>   SUB.l bsssize,d1
00025DE4 <AmiBlitz3.ab2@10448>   MOVE.l d1,(a1)
00025DE6 <AmiBlitz3.ab2@10449>   SUB.l D4,(A1)+
00025DE8 <AmiBlitz3.ab2@10452>   MOVEA.l (A2),A2
00025DEC <AmiBlitz3.ab2@10453> BRA.w menu_createresidentfile__oloopb
00025DEE <AmiBlitz3.ab2@10457>   MOVE.l D7,D1
00025DF4 <AmiBlitz3.ab2@10458>   MOVEA.l _dosbase,A6
00025DFE <AmiBlitz3.ab2@10459>   MOVE.l hunkoffsetnum,tstsize3
00025E02 <AmiBlitz3.ab2@10460>   BEQ 'ln1
00025E08 <AmiBlitz3.ab2@10461>   MOVE.l #tstend+4,d2
00025E0A <AmiBlitz3.ab2@10462>     MOVEQ #8,d3
00025E0E <AmiBlitz3.ab2@10463>    JSR _Write(A6)
00025E10 <AmiBlitz3.ab2@10464>   MOVE.l d7,d1
00025E16 <AmiBlitz3.ab2@10465>   MOVE.l hunkoffsetnum,d3
00025E18 <AmiBlitz3.ab2@10466>   ASL.l #2,d3
00025E1A <AmiBlitz3.ab2@10467>   MOVE.l d5,D2
00025E1E <AmiBlitz3.ab2@10468>   JSR _Write(a6)
00025E24 <AmiBlitz3.ab2@10471>   TST.b newhunk
00025E28 <AmiBlitz3.ab2@10472>   BEQ 'l10
00025E2E <AmiBlitz3.ab2@10473>   MOVEA.l hunkoffsetbase,A2
00025E30 <AmiBlitz3.ab2@10474>   MOVE.l d5,a0
00025E32 <AmiBlitz3.ab2@10475>   ADDQ #8,a0
00025E3A <AmiBlitz3.ab2@10476>   MOVE.l bssnum,-4(a0)
00025E3C <AmiBlitz3.ab2@10477>   MOVEQ #0,d6
00025E40 <AmiBlitz3.ab2@10480>   CMPA.w #$0,A2
00025E44 <AmiBlitz3.ab2@10481>    BEQ.w 'lh3
00025E4A <AmiBlitz3.ab2@10482>   MOVE.l destbufferstart,D2
00025E50 <AmiBlitz3.ab2@10483>   ADD.l noinits,D2
00025E54 <AmiBlitz3.ab2@10484>   MOVE.l  $4(A2),d1
00025E58 <AmiBlitz3.ab2@10485>   BTST #30,d1
00025E5C <AmiBlitz3.ab2@10486>   BEQ 'lh1
00025E60 <AmiBlitz3.ab2@10487>   BCLR #30,d1
00025E62 <AmiBlitz3.ab2@10488>   MOVE.l d1,(a0)
00025E64 <AmiBlitz3.ab2@10489>   SUB.l D4,(A0)+
00025E66 <AmiBlitz3.ab2@10490>   ADDQ.l #1,d6
00025E68 <AmiBlitz3.ab2@10493>   MOVE.l (a2),a2
00025E6C <AmiBlitz3.ab2@10494> BRA 'lh2
00025E6E <AmiBlitz3.ab2@10497>   TST.l d6
00025E72 <AmiBlitz3.ab2@10498>     BEQ 'lh10
00025E74 <AmiBlitz3.ab2@10499>     MOVE.l d5,a0
00025E76 <AmiBlitz3.ab2@10500>     MOVE.l d6,(a0)
00025E78 <AmiBlitz3.ab2@10501>     MOVE.l d7,d1
00025E7A <AmiBlitz3.ab2@10502>     MOVE.l d5,d2
00025E7C <AmiBlitz3.ab2@10503>     MOVE.l d6,d3
00025E7E <AmiBlitz3.ab2@10504>     ASL.l #2,d3
00025E80 <AmiBlitz3.ab2@10505>     ADDQ.l #8,d3
00025E84 <AmiBlitz3.ab2@10506>     BSR.w mywrite
00025E8A <AmiBlitz3.ab2@10509>   MOVEA.l hunkoffsetbase,A2
00025E8C <AmiBlitz3.ab2@10510>   MOVE.l d5,a0
00025E8E <AmiBlitz3.ab2@10511>   ADDQ #8,a0
00025E96 <AmiBlitz3.ab2@10512>   MOVE.l chipnum,-4(a0)
00025E98 <AmiBlitz3.ab2@10513>   MOVEQ #0,d6
00025E9C <AmiBlitz3.ab2@10516>   CMPA.w #$0,A2
00025EA0 <AmiBlitz3.ab2@10517>    BEQ.w 'lh30
00025EA6 <AmiBlitz3.ab2@10518>   MOVE.l destbufferstart,D2
00025EAC <AmiBlitz3.ab2@10519>   ADD.l noinits,D2
00025EB0 <AmiBlitz3.ab2@10520>   MOVE.l  $4(A2),d1
00025EB4 <AmiBlitz3.ab2@10521>   BTST #31,d1
00025EB8 <AmiBlitz3.ab2@10522>   BEQ 'lh11
00025EBC <AmiBlitz3.ab2@10523>   BCLR #31,d1
00025EBE <AmiBlitz3.ab2@10524>   MOVE.l d1,(a0)
00025EC0 <AmiBlitz3.ab2@10525>   SUB.l D4,(A0)+
00025EC2 <AmiBlitz3.ab2@10526>   ADDQ.l #1,d6
00025EC4 <AmiBlitz3.ab2@10529>   MOVE.l (a2),a2
00025EC8 <AmiBlitz3.ab2@10530> BRA 'lh20
00025ECA <AmiBlitz3.ab2@10533>   TST.l d6
00025ECE <AmiBlitz3.ab2@10534>     BEQ 'l10
00025ED0 <AmiBlitz3.ab2@10535>     MOVE.l d5,a0
00025ED2 <AmiBlitz3.ab2@10536>     MOVE.l d6,(a0)
00025ED4 <AmiBlitz3.ab2@10537>     MOVE.l d7,d1
00025ED6 <AmiBlitz3.ab2@10538>     MOVE.l d5,d2
00025ED8 <AmiBlitz3.ab2@10539>     MOVE.l d6,d3
00025EDA <AmiBlitz3.ab2@10540>     ASL.l #2,d3
00025EDC <AmiBlitz3.ab2@10541>     ADDQ.l #8,d3
00025EE0 <AmiBlitz3.ab2@10542>     BSR.w mywrite
00025EE6 <AmiBlitz3.ab2@10546>    MOVEA.l _execbase,A6
00025EEC <AmiBlitz3.ab2@10547>    MOVE.l hunkoffsetcounter,d0
00025EEE <AmiBlitz3.ab2@10548>    ASL.l #2,d0
00025EF4 <AmiBlitz3.ab2@10549>    ADD.l #12,d0
00025EF6 <AmiBlitz3.ab2@10550>    MOVE.l d5,a1
00025EFA <AmiBlitz3.ab2@10551>    JSR _FreeMem(a6)
00025F00 <AmiBlitz3.ab2@10552>    MOVEA.l _dosbase,A6
00025F02 <AmiBlitz3.ab2@10553>    MOVE.l (a7)+,d5
00025F06 <AmiBlitz3.ab2@10554> BRA JL_0_7632
00025F0C <AmiBlitz3.ab2@10558>   MOVEA.l hunkoffsetbase,A2
00025F12 <AmiBlitz3.ab2@10559>   MOVE.l noinits,D4
00025F16 <AmiBlitz3.ab2@10562>   CMPA.w #$0,A2                                            ;write hunkoffsets
00025F1A <AmiBlitz3.ab2@10563>   BEQ.w JL_0_7632
00025F1E <AmiBlitz3.ab2@10564>   LEA $4(A2),A1
00025F20 <AmiBlitz3.ab2@10565>   SUB.l D4,(A1)
00025F22 <AmiBlitz3.ab2@10566>   MOVE.l D7,D1
00025F24 <AmiBlitz3.ab2@10567>   MOVE.l A1,D2
00025F26 <AmiBlitz3.ab2@10568>   MOVEQ.l #$04,D3
00025F2A <AmiBlitz3.ab2@10569>   BSR.w mywrite
00025F2E <AmiBlitz3.ab2@10570>   ADD.l D4,$4(A2)
00025F30 <AmiBlitz3.ab2@10571>   MOVEA.l (A2),A2
00025F34 <AmiBlitz3.ab2@10572> BRA.w JL_0_7610
00025F3A <AmiBlitz3.ab2@10575>   CLR.l tstsize3
00025F3C <AmiBlitz3.ab2@10576>   MOVE.l D7,D1
00025F42 <AmiBlitz3.ab2@10577>   MOVE.l #tstsize3,D2
00025F44 <AmiBlitz3.ab2@10578>   MOVEQ.l #$04,D3
00025F48 <AmiBlitz3.ab2@10579>    BSR.w mywrite
00025F50 <AmiBlitz3.ab2@10582>   BTST #$7,link_debuginfo
00025F54 <AmiBlitz3.ab2@10583>    BEQ.w JL_0_7706
00025F5A <AmiBlitz3.ab2@10584>   MOVE.l #sysdebug,D2                                      ;debughunks
00025F5C <AmiBlitz3.ab2@10585>   MOVEQ.l #$04,D3
00025F5E <AmiBlitz3.ab2@10586>   MOVE.l D7,D1
00025F62 <AmiBlitz3.ab2@10587>    BSR.w mywrite
00025F68 <AmiBlitz3.ab2@10588>   MOVEA.l labelbase,A2
00025F6C <AmiBlitz3.ab2@10591>   CMPA.w #$0,A2
00025F70 <AmiBlitz3.ab2@10592>    BEQ.w JL_0_76F8
00025F76 <AmiBlitz3.ab2@10593>   BTST #$0,$7(A2)
00025F7A <AmiBlitz3.ab2@10594>    BEQ.w JL_0_7682
00025F82 <AmiBlitz3.ab2@10595>   CMPI.l #$1,$4(A2)
00025F86 <AmiBlitz3.ab2@10597>   BRA.w JL_0_76F2                                            ;only addr labels
00025F88 <AmiBlitz3.ab2@10599>   MOVEQ.l #$00,D4
00025F8C <AmiBlitz3.ab2@10600>   MOVE.b $12(A2),D4
00025F90 <AmiBlitz3.ab2@10601>   SUBI.w #$13,D4
00025F92 <AmiBlitz3.ab2@10602>   ADDQ.w #2,D4
00025F96 <AmiBlitz3.ab2@10603>   ANDI.w #$FFFC,D4
00025F98 <AmiBlitz3.ab2@10604>   MOVE.l D4,D5
00025F9A <AmiBlitz3.ab2@10605>   LSR.w #2,D5
00025FA0 <AmiBlitz3.ab2@10606>   MOVE.l D5,temp1
00025FA2 <AmiBlitz3.ab2@10607>   LSL.w #2,D5
00025FA8 <AmiBlitz3.ab2@10608>   MOVE.l #temp1,a1
00025FAE <AmiBlitz3.ab2@10610>   LEA debugstore,a0
00025FB0 <AmiBlitz3.ab2@10611>   MOVE.l (a1),(a0)+
00025FB2 <AmiBlitz3.ab2@10612>   MOVEQ.l #$04,D3
00025FB6 <AmiBlitz3.ab2@10615>   LEA $13(A2),A1
00025FB8 <AmiBlitz3.ab2@10616>   MOVE.l d4,d1
00025FBA <AmiBlitz3.ab2@10617>   SUBQ.l #1,d1
00025FBC <AmiBlitz3.ab2@10620>     MOVE.b (a1)+,d0
00025FC0 <AmiBlitz3.ab2@10621>     BEQ 'l21
00025FC4 <AmiBlitz3.ab2@10622>     CMP.b #"'",d0                                            ; ' does reassembler/assembler not like, so replace
00025FC8 <AmiBlitz3.ab2@10623>     BNE 'ok
00025FCC <AmiBlitz3.ab2@10624>     MOVE.b #"_",d0
00025FCE <AmiBlitz3.ab2@10625> 'ok    MOVE.b d0,(a0)+                                      ; copy labeltext to debuginfo
00025FD2 <AmiBlitz3.ab2@10626>   DBF d1,'l10
00025FD6 <AmiBlitz3.ab2@10628> BRA 'l22
00025FD8 <AmiBlitz3.ab2@10631>       CLR.b (a0)+
00025FDC <AmiBlitz3.ab2@10632>   DBF d1,'l21
00025FDE <AmiBlitz3.ab2@10635>   ADD.l d4,d3
00025FE0 <AmiBlitz3.ab2@10640>   SUB.l D4,D5
00025FE4 <AmiBlitz3.ab2@10641>    BEQ.w JL_0_76CE
00025FEA <AmiBlitz3.ab2@10642>   MOVE.l #zero,a1
00025FEC <AmiBlitz3.ab2@10644>   MOVE.l (a1),(a0)+
00025FEE <AmiBlitz3.ab2@10646>   ADD.l d5,d3
00025FF2 <AmiBlitz3.ab2@10651>   MOVE.l $8(A2),D2
00025FF8 <AmiBlitz3.ab2@10652>   SUB.l destbufferstart,D2
00025FFE <AmiBlitz3.ab2@10653>   SUB.l noinits,D2
00026004 <AmiBlitz3.ab2@10654>   MOVE.l D2,temp1
0002600A <AmiBlitz3.ab2@10655>   MOVE.l #temp1,a1
0002600C <AmiBlitz3.ab2@10657>   MOVE.l (a1),(a0)+
00026012 <AmiBlitz3.ab2@10658>   ADD.l #4,d3
00026018 <AmiBlitz3.ab2@10659>   LEA debugstore,a0
0002601A <AmiBlitz3.ab2@10660>   MOVE.l a0,d2
0002601C <AmiBlitz3.ab2@10662>   MOVE.l D7,D1
00026020 <AmiBlitz3.ab2@10663>   BSR.w mywrite
00026022 <AmiBlitz3.ab2@10666>   MOVEA.l (A2),A2
00026026 <AmiBlitz3.ab2@10667> BRA.w JL_0_7664
0002602C <AmiBlitz3.ab2@10671>   MOVE.l #zero,D2
0002602E <AmiBlitz3.ab2@10672>   MOVEQ.l #$04,D3
00026030 <AmiBlitz3.ab2@10673>   MOVE.l D7,D1
00026034 <AmiBlitz3.ab2@10674>   BSR.w mywrite
00026036 <AmiBlitz3.ab2@10677>   MOVE.l D7,D1
0002603C <AmiBlitz3.ab2@10678>   MOVE.l #tstdone,D2                                      ;hunkend
0002603E <AmiBlitz3.ab2@10679>   MOVEQ.l #$04,D3
00026048 <AmiBlitz3.ab2@10680>   CMPI.l #-1,bssstart
0002604C <AmiBlitz3.ab2@10681>   BEQ 'l10
0002604E <AmiBlitz3.ab2@10682>   MOVEQ #16,d3
00026054 <AmiBlitz3.ab2@10683>   MOVE.l #hunkend,d2
0002605E <AmiBlitz3.ab2@10684>   CMPI.l #-1,chipstart
00026062 <AmiBlitz3.ab2@10685>   BEQ 'l10
00026064 <AmiBlitz3.ab2@10686>   MOVE.l d7,d1
00026066 <AmiBlitz3.ab2@10687>   MOVEQ #12,d3
0002606A <AmiBlitz3.ab2@10688>   BSR.w mywrite
00026074 <AmiBlitz3.ab2@10691>   CMPI.l #-1,chipstart
00026078 <AmiBlitz3.ab2@10692>   BEQ 'l11
0002607A <AmiBlitz3.ab2@10693>   MOVEQ #12,d3
00026080 <AmiBlitz3.ab2@10694>   MOVE.l #hunkend2,d2
00026082 <AmiBlitz3.ab2@10695>   MOVE.l d7,d1
00026086 <AmiBlitz3.ab2@10696>   BSR.w mywrite
00026088 <AmiBlitz3.ab2@10697>   MOVE.l d7,d1
0002608E <AmiBlitz3.ab2@10698>   MOVE.l chipstart,d2
00026094 <AmiBlitz3.ab2@10699>   MOVE.l chipsize,d3
00026098 <AmiBlitz3.ab2@10700>   BSR.w mywrite
0002609A <AmiBlitz3.ab2@10701>   MOVEQ #4,d3
000260A0 <AmiBlitz3.ab2@10702>   MOVE.l #hunkend,d2
000260A2 <AmiBlitz3.ab2@10703>   MOVE.l d7,d1
000260A6 <AmiBlitz3.ab2@10706>   BSR.w mywrite
000260A8 <AmiBlitz3.ab2@10707>   MOVE.l D7,D1
000260AE <AmiBlitz3.ab2@10708>   MOVEA.l _dosbase,A6
000260B2 <AmiBlitz3.ab2@10709>   JSR _Close(A6)
000260BA <AmiBlitz3.ab2@10714>   BTST #$7,create_iconfile
000260BE <AmiBlitz3.ab2@10715>    BEQ.w skip_createicon
000260C4 <AmiBlitz3.ab2@10717>   MOVEA.l ptr_newexefilename,A0
000260C6 <AmiBlitz3.ab2@10720>     TST.b (A0)+
000260CA <AmiBlitz3.ab2@10721>   BNE.w JL_0_772C
000260CC <AmiBlitz3.ab2@10722>   SUBQ.w #1,A0
000260CE <AmiBlitz3.ab2@10723>   MOVE.l A0,-(A7)
000260D4 <AmiBlitz3.ab2@10724>   LEA str_infoextention2,A1
000260D6 <AmiBlitz3.ab2@10727>     MOVE.b (A1)+,(A0)+
000260DA <AmiBlitz3.ab2@10728>   BNE.w JL_0_773A
000260E0 <AmiBlitz3.ab2@10730>   MOVE.l ptr_newexefilename,D1
000260E2 <AmiBlitz3.ab2@10731>   MOVEQ.l #-$02,D2
000260E8 <AmiBlitz3.ab2@10732>   MOVEA.l _dosbase,A6
000260EC <AmiBlitz3.ab2@10733>   JSR _Lock(A6)
000260EE <AmiBlitz3.ab2@10734>   MOVE.l D0,D1
000260F2 <AmiBlitz3.ab2@10735>   BEQ.w JL_0_775A                                          ;no icon exit so jump to create one  tomsmart1
000260F6 <AmiBlitz3.ab2@10736>   JSR _UnLock(A6)                                          ;OH!! there is a Icon so we must Unlock it  tomsmart1
000260FA <AmiBlitz3.ab2@10737> BRA.w JL_0_7788                                            ;and skip writing a Icon  tomsmart1
00026100 <AmiBlitz3.ab2@10740>   MOVE.l ptr_newexefilename,D1
00026106 <AmiBlitz3.ab2@10741>   MOVE.l #HUNK_RELOC_8__MODE_NEWFILE,D2
0002610C <AmiBlitz3.ab2@10742>   MOVEA.l _dosbase,A6
00026110 <AmiBlitz3.ab2@10743>    JSR _Open(A6)
00026112 <AmiBlitz3.ab2@10744>   MOVE.l D0,D7
00026116 <AmiBlitz3.ab2@10745>    BEQ.w JL_0_7788
0002611C <AmiBlitz3.ab2@10746>   MOVE.l #icongfx_data,D2                                  ; icon graphics
00026122 <AmiBlitz3.ab2@10747>   MOVE.l #icongfx_data_end-icongfx_data,D3                 ; length of gfx-data
00026124 <AmiBlitz3.ab2@10748>   MOVE.l D7,D1
0002612A <AmiBlitz3.ab2@10749>   MOVEA.l _dosbase,A6
0002612E <AmiBlitz3.ab2@10750>   JSR _Write(A6)
00026130 <AmiBlitz3.ab2@10751>   MOVE.l D7,D1
00026134 <AmiBlitz3.ab2@10752>   JSR _Close(A6)
00026136 <AmiBlitz3.ab2@10755>   MOVEA.l (A7)+,A0
00026138 <AmiBlitz3.ab2@10756>   CLR.b (A0)
0002613E <AmiBlitz3.ab2@10761>   TST.b exdebug
00026142 <AmiBlitz3.ab2@10762>    BEQ JL_0_757Cb
00026148 <AmiBlitz3.ab2@10763>   MOVE.w dontwrite,D1
0002614C <AmiBlitz3.ab2@10764>   BNE.w JL_0_757Cb
00026152 <AmiBlitz3.ab2@10765>   MOVE.l chipsize,d5
00026158 <AmiBlitz3.ab2@10766>   MOVE.l bsssize,d3
0002615E <AmiBlitz3.ab2@10767>   MOVE.l chipstart,d7
00026164 <AmiBlitz3.ab2@10768>   MOVE.l bssstart,d6
0002616A <AmiBlitz3.ab2@10769>   MOVEA.l hunkoffsetbase,A2
00026170 <AmiBlitz3.ab2@10770>   MOVEA.l destbufferstart,A1
00026172 <AmiBlitz3.ab2@10771>   MOVE.l A1,D2
00026178 <AmiBlitz3.ab2@10772>   ADD.l noinits,D2
0002617E <AmiBlitz3.ab2@10773>   CLR.l hunkoffsetnum
00026182 <AmiBlitz3.ab2@10776>   CMPA.w #$0,A2
00026186 <AmiBlitz3.ab2@10777>    BEQ.w JL_0_757Cb
0002618A <AmiBlitz3.ab2@10778>   MOVE.l $4(A2),D0
0002618E <AmiBlitz3.ab2@10779>    LEA $0(a1,d0.l),a0
00026190 <AmiBlitz3.ab2@10780>    MOVE.l (a0),d1
00026192 <AmiBlitz3.ab2@10781>   TST.l d1
00026196 <AmiBlitz3.ab2@10782>    BMI.w 'lm1
0002619E <AmiBlitz3.ab2@10783>   MOVE.b #0,newhunk
000261A8 <AmiBlitz3.ab2@10784>   CMP.l #-1,chipstart
000261AC <AmiBlitz3.ab2@10785>   BEQ 'l10
000261B2 <AmiBlitz3.ab2@10786>   CMP.l chipstart,d1
000261B6 <AmiBlitz3.ab2@10787>   BLT 'l10
000261BE <AmiBlitz3.ab2@10788>   MOVE.b #1,newhunk
000261C4 <AmiBlitz3.ab2@10789>   CMP.l chipend,d1
000261C8 <AmiBlitz3.ab2@10790>   BGE 'l110
000261CA <AmiBlitz3.ab2@10791>   ADD.l d7,(a0)
000261D2 <AmiBlitz3.ab2@10792>   ADD.l #$80000000,4(a2)
000261D6 <AmiBlitz3.ab2@10793> BRA JL_0_7576b
000261DA <AmiBlitz3.ab2@10796>   ADD.l d5,0(a0)
000261E4 <AmiBlitz3.ab2@10799>   CMP.l #-1,bssstart
000261E8 <AmiBlitz3.ab2@10800>     BEQ 'l11
000261EE <AmiBlitz3.ab2@10801>   CMP.l bssstart,d1
000261F2 <AmiBlitz3.ab2@10802>   BLT 'l11
000261F8 <AmiBlitz3.ab2@10803>   CMP.l bssend,d1
000261FC <AmiBlitz3.ab2@10804>   BGE 'l111
00026202 <AmiBlitz3.ab2@10805>   TST.b newhunk
00026206 <AmiBlitz3.ab2@10806>   BEQ 'ln1
00026208 <AmiBlitz3.ab2@10807>   ADD.l d5,(a0)
0002620A <AmiBlitz3.ab2@10810>   ADD.l d6,(a0)
00026212 <AmiBlitz3.ab2@10811>   ADD.l #$40000000,4(a2)
00026216 <AmiBlitz3.ab2@10812> BRA JL_0_7576b
0002621A <AmiBlitz3.ab2@10815>   ADD.l d3,0(a0)
0002621C <AmiBlitz3.ab2@10818>   ADD.l D2,(A0)                                            ;only normal code offsets restore
00026222 <AmiBlitz3.ab2@10821>   ADDQ.l #1,hunkoffsetnum
00026224 <AmiBlitz3.ab2@10824>   MOVEA.l (A2),A2
00026228 <AmiBlitz3.ab2@10825> BRA.w JL_0_755Eb
0002622E <AmiBlitz3.ab2@10828>   JSR call_setpointernormal
00026232 <AmiBlitz3.ab2@10829>   MOVEM.l (a7)+,d2-d7/a2-a6
00026234 <AmiBlitz3.ab2@10831> RTS
00026236 <AmiBlitz3.ab2@10835>   MOVE.l D2,-(A7)
0002623C <AmiBlitz3.ab2@10836>   MOVE.l destpointer,D2
00026242 <AmiBlitz3.ab2@10837>   SUB.l destbufferstart,D2
00026246 <AmiBlitz3.ab2@10838>   BSR.w addhunkoffset
00026248 <AmiBlitz3.ab2@10839>   MOVE.l (A7)+,D2
0002624A <AmiBlitz3.ab2@10840> RTS
0002624E <AmiBlitz3.ab2@10844>   MOVEM.l D0-D1/A0-A1/A6,-(A7)
00026254 <AmiBlitz3.ab2@10845>   TST.b nohunkoffset
00026258 <AmiBlitz3.ab2@10846>   BNE 'l10
0002625A <AmiBlitz3.ab2@10847>   MOVEQ.l #$8,D0
0002625C <AmiBlitz3.ab2@10848>   MOVEQ.l #$01,D1
00026262 <AmiBlitz3.ab2@10849>   MOVEA.l _execbase,A6
00026268 <AmiBlitz3.ab2@10850>   MOVE.l mempool2,a0
0002626C <AmiBlitz3.ab2@10851>   JSR _AllocPooled(a6)
00026272 <AmiBlitz3.ab2@10853>   ADDQ.l #1,hunkoffsetcounter
00026274 <AmiBlitz3.ab2@10854>   MOVEA.l D0,A0
0002627A <AmiBlitz3.ab2@10855>   MOVE.l hunkoffsetbase,(A0)
00026280 <AmiBlitz3.ab2@10856>   MOVE.l A0,hunkoffsetbase
00026284 <AmiBlitz3.ab2@10857>   MOVE.l D2,$4(A0)
00026288 <AmiBlitz3.ab2@10860>   MOVEM.l (A7)+,D0-D1/A0-A1/A6
0002628A <AmiBlitz3.ab2@10861> RTS
00026290 <AmiBlitz3.ab2@10865>   CLR.l hunkoffsetbase
00026296 <AmiBlitz3.ab2@10866>   MOVEA.l _execbase,A6
0002629C <AmiBlitz3.ab2@10867>   MOVEA.l hunkoffsetbase,A2
000262A0 <AmiBlitz3.ab2@10870>     CMPA.w #$0,A2
000262A4 <AmiBlitz3.ab2@10871>      BEQ.w JL_0_7988
000262A6 <AmiBlitz3.ab2@10872>     MOVEA.l A2,A1
000262A8 <AmiBlitz3.ab2@10873>     MOVEQ.l #$08,D0
000262AA <AmiBlitz3.ab2@10874>     MOVEA.l (A2),A2
000262B0 <AmiBlitz3.ab2@10875>     MOVE.l mempool2,a0
000262B4 <AmiBlitz3.ab2@10876>     JSR _FreePooled(A6)
000262B8 <AmiBlitz3.ab2@10877> BRA.w JL_0_7972
000262BE <AmiBlitz3.ab2@10880>   CLR.l hunkoffsetcounter
000262C0 <AmiBlitz3.ab2@10881> RTS
000262D8 <AmiBlitz3.ab2@10884> cmakebuff:  Ds.l 6                                          ;dc.w 12 org source
000262DC <AmiBlitz3.ab2@10885> cmakea5:    Ds.l 1
000262DE <AmiBlitz3.ab2@10886> cmake:      Ds.w 1
0002635E <AmiBlitz3.ab2@10887> cmakebak:   Ds.l 32                                         ;ds.b 128 org source
00026364 <AmiBlitz3.ab2@10891>   MOVE.l A5,lastsourcepos
0002636E <AmiBlitz3.ab2@10892>   MOVE.w instringon,oldqflag
00026370 <AmiBlitz3.ab2@10896>   MOVEQ.l #$00,D0
00026372 <AmiBlitz3.ab2@10897>   MOVE.b (A5)+,D0
00026376 <AmiBlitz3.ab2@10898>    BEQ getcharb__donea
0002637A <AmiBlitz3.ab2@10899>   BPL getcharb__stuffa
0002637C <AmiBlitz3.ab2@10900>   LSL.l #8,D0
0002637E <AmiBlitz3.ab2@10901>   MOVE.b (A5)+,D0
00026380 <AmiBlitz3.ab2@10902>   MOVE.l a1,-(a7)
00026386 <AmiBlitz3.ab2@10903>   LEA replacedat,a1
0002638A <AmiBlitz3.ab2@10904>   Dc.w $4a71,$0a00                                         ;TST.w 0(a1,d0.l*2)
0002638E <AmiBlitz3.ab2@10905>   BEQ getchar__l10
00026392 <AmiBlitz3.ab2@10906>   Dc.w $3031,$0a00                                         ;MOVE.w 0(a1,d0.l*2),d0
00026394 <AmiBlitz3.ab2@10910>   MOVE.l (a7)+,a1
00026398 <AmiBlitz3.ab2@10911> BRA getchar__weiter
0002639C <AmiBlitz3.ab2@10914>   CMP.w #$22,D0
000263A0 <AmiBlitz3.ab2@10915>    BEQ.b swapquotea
000263A4 <AmiBlitz3.ab2@10916>   CMP.w #$3B,D0
000263A8 <AmiBlitz3.ab2@10917>    BNE.b getcharb__donea
000263AE <AmiBlitz3.ab2@10918>   TST.w instringon
000263B2 <AmiBlitz3.ab2@10919>    BNE.b getcharb__donea
000263B4 <AmiBlitz3.ab2@10922>   MOVE.b (A5)+,D0
000263B8 <AmiBlitz3.ab2@10923>              BEQ getchar__l1
000263BC <AmiBlitz3.ab2@10924>              CMP.b #":",d0
000263C0 <AmiBlitz3.ab2@10925>              BNE getcharb__loopa                                ;:@
000263C4 <AmiBlitz3.ab2@10926>              CMP.b #"@",(a5)
000263C8 <AmiBlitz3.ab2@10927>              BNE getcharb__loopa
000263CA <AmiBlitz3.ab2@10928>              ADDQ #1,a5
000263D0 <AmiBlitz3.ab2@10931>   MOVE.w D0,lastchar
000263D4 <AmiBlitz3.ab2@10934> BRA.s getchar__weiter
000263DA <AmiBlitz3.ab2@10937>   NOT.w instringon
000263E0 <AmiBlitz3.ab2@10940>    MOVE.w D0,lastchar
000263E4 <AmiBlitz3.ab2@10941>    BEQ.w getchar__done
000263E8 <AmiBlitz3.ab2@10942>    BPL.w getchar__done2
000263EC <AmiBlitz3.ab2@10943>   CMP.w #-$7FE4,D0                                         ;cnif
000263F0 <AmiBlitz3.ab2@10944>    BEQ.w getchar__cnif
000263F4 <AmiBlitz3.ab2@10945>   CMP.w #-$7FE3,D0                                         ;csif
000263F8 <AmiBlitz3.ab2@10946>    BEQ.w getchar__csif
000263FC <AmiBlitz3.ab2@10947>   CMP.w #-$7FE2,D0                                         ;celse
00026400 <AmiBlitz3.ab2@10948>    BEQ.w getchar__celse
00026404 <AmiBlitz3.ab2@10949>   CMP.w #-$7FE1,D0                                         ;cend
00026408 <AmiBlitz3.ab2@10950>    BEQ.w getchar__cend
0002640E <AmiBlitz3.ab2@10953>   TST.w skipcode
00026412 <AmiBlitz3.ab2@10954>    BEQ.w getchar
00026416 <AmiBlitz3.ab2@10955>   CMP.w #$7E,D0
0002641A <AmiBlitz3.ab2@10956>    BEQ.w getchar__cmake                                         ;tilde
0002641E <AmiBlitz3.ab2@10957>   CMP.w #$2,D0
00026422 <AmiBlitz3.ab2@10958>    BNE.w getchar__notunpath
00026428 <AmiBlitz3.ab2@10959>   MOVEA.l usedfrom,A5
0002642E <AmiBlitz3.ab2@10960>   CLR.l usedfrom
00026432 <AmiBlitz3.ab2@10961> BRA.w getchar
00026436 <AmiBlitz3.ab2@10964>   CMP.w #$1,D0
0002643A <AmiBlitz3.ab2@10965>    BNE.w getchar__done
0002643E <AmiBlitz3.ab2@10969>   MOVEA.l cmakea5(PC),A5
00026442 <AmiBlitz3.ab2@10970> BRA.w getchar
00026448 <AmiBlitz3.ab2@10973>   TST.w cmake
0002644C <AmiBlitz3.ab2@10974>    BNE.w getchar__done
00026450 <AmiBlitz3.ab2@10976>   MOVEM.l D0-D7/A0-A6,-(A7)
00026456 <AmiBlitz3.ab2@10977>   LEA cmake,a0                                         ;reass
00026458 <AmiBlitz3.ab2@10978>   NOT.w (a0)
0002645C <AmiBlitz3.ab2@10979>   LEA cmakebak(PC),A0
00026462 <AmiBlitz3.ab2@10980>   LEA ptr_parameterstore,A1
00026464 <AmiBlitz3.ab2@10981>   MOVEQ.l #$1F,D0
00026466 <AmiBlitz3.ab2@10984>     MOVE.l (A1)+,(A0)+
0002646A <AmiBlitz3.ab2@10985>   DBF D0,getchar__cmloop
00026470 <AmiBlitz3.ab2@10988>    JSR AJL_0_BF6E
00026474 <AmiBlitz3.ab2@10989>   CMP.w #$7E,D0
00026478 <AmiBlitz3.ab2@10990>    BNE.w syntaxerr
0002647E <AmiBlitz3.ab2@10991>   MOVE.l A5,cmakea5                                      ;tilde
00026482 <AmiBlitz3.ab2@10992>   LEA cmakebuff(PC),A0
00026484 <AmiBlitz3.ab2@10993>   MOVE.l D3,D2
00026488 <AmiBlitz3.ab2@10994>   BSR.w makelong
0002648A <AmiBlitz3.ab2@10995>   ADDQ.b #1,(A0)
00026490 <AmiBlitz3.ab2@10996>   LEA cmake,a0
00026492 <AmiBlitz3.ab2@10997>   NOT.w (a0)                                               ;reass
00026496 <AmiBlitz3.ab2@10998>   LEA cmakebak(PC),A0
0002649C <AmiBlitz3.ab2@10999>   LEA ptr_parameterstore,A1
0002649E <AmiBlitz3.ab2@11000>   MOVEQ.l #$1F,D0
000264A0 <AmiBlitz3.ab2@11003>     MOVE.l (A0)+,(A1)+
000264A4 <AmiBlitz3.ab2@11004>   DBF D0,getchar__cmloop2
000264A8 <AmiBlitz3.ab2@11006>   MOVEM.l (A7)+,D0-D7/A0-A6
000264AC <AmiBlitz3.ab2@11007>   LEA cmakebuff(PC),A5
000264B0 <AmiBlitz3.ab2@11008> BRA.w getchar
000264B2 <AmiBlitz3.ab2@11011> RTS
000264BC <AmiBlitz3.ab2@11015>   MOVE.l linenumat,ciflineat                               ;csif
000264C2 <AmiBlitz3.ab2@11016>   TST.w skipcode
000264C6 <AmiBlitz3.ab2@11017>    BEQ.w getchar__incnest
000264CA <AmiBlitz3.ab2@11018>    BSR.w get1bytemain
000264CC <AmiBlitz3.ab2@11019>    MOVE.l a1,-(a7)
000264D2 <AmiBlitz3.ab2@11020>    JSR JL_0_C492
000264D4 <AmiBlitz3.ab2@11021>    MOVE.l (a7)+,a1
000264D8 <AmiBlitz3.ab2@11022> BRA.w getchar
000264E2 <AmiBlitz3.ab2@11025>   MOVE.l linenumat,ciflineat                               ;cnif
000264E8 <AmiBlitz3.ab2@11026>   TST.w skipcode
000264EC <AmiBlitz3.ab2@11027>    BEQ.w getchar__incnest
000264F0 <AmiBlitz3.ab2@11028>    BSR.w get1bytemain
000264F4 <AmiBlitz3.ab2@11029>    CMP.b #"@",d0
000264F8 <AmiBlitz3.ab2@11030>    BNE getchar__cnif_ok2
000264FC <AmiBlitz3.ab2@11031>    BSR.w get1bytemain
00026504 <AmiBlitz3.ab2@11032>    MOVE.b #1,incnif
0002650A <AmiBlitz3.ab2@11033>    JSR findconstant2
0002650E <AmiBlitz3.ab2@11034>    BEQ getchar__cnif_ok2
00026514 <AmiBlitz3.ab2@11037>    MOVE.w fast,-(a7)
0002651A <AmiBlitz3.ab2@11038>    CLR.b fast
0002651C <AmiBlitz3.ab2@11039>    MOVE.l a1,-(a7)
00026522 <AmiBlitz3.ab2@11040>    JSR JL_0_C47E
00026528 <AmiBlitz3.ab2@11041>    CLR.b incnif
0002652A <AmiBlitz3.ab2@11042>    MOVE.l (a7)+,a1
00026530 <AmiBlitz3.ab2@11043>    MOVE.w (a7)+,fast
00026534 <AmiBlitz3.ab2@11044> BRA.w getchar
0002653A <AmiBlitz3.ab2@11047>   ADDQ.w #1,connest
0002653E <AmiBlitz3.ab2@11048> BRA.w getchar
00026544 <AmiBlitz3.ab2@11051>   MOVE.w connest,D0                                      ;celse
00026548 <AmiBlitz3.ab2@11052>    BNE.w getchar
0002654E <AmiBlitz3.ab2@11053>   NOT.w skipcode
00026552 <AmiBlitz3.ab2@11054> BRA.w getchar
00026558 <AmiBlitz3.ab2@11057>   SUBQ.w #1,connest                                      ;cend
0002655C <AmiBlitz3.ab2@11058>    BPL.w getchar
00026562 <AmiBlitz3.ab2@11059>   ADDQ.w #1,connest
00026568 <AmiBlitz3.ab2@11060>   MOVEA.l concomsp,A0
0002656E <AmiBlitz3.ab2@11061>   CMPA.l #concomstack,A0
00026572 <AmiBlitz3.ab2@11062>    BEQ.w nociferr
00026574 <AmiBlitz3.ab2@11063>   SUBQ.w #2,A0
0002657A <AmiBlitz3.ab2@11064>   MOVE.l A0,concomsp
00026580 <AmiBlitz3.ab2@11065>   MOVE.w (A0),skipcode
00026584 <AmiBlitz3.ab2@11066> BRA.w getchar
00026588 <AmiBlitz3.ab2@11069> ciflineat:   Ds.l 1
0002658A <AmiBlitz3.ab2@11077>   MOVEQ.l #$00,D0
0002658C <AmiBlitz3.ab2@11078>   MOVE.b (A5)+,D0
00026590 <AmiBlitz3.ab2@11079>    BEQ.b getcharb__done
00026594 <AmiBlitz3.ab2@11080>    BPL.b getcharb__stuff
00026596 <AmiBlitz3.ab2@11081>   LSL.w #8,D0
00026598 <AmiBlitz3.ab2@11082>   MOVE.b (A5)+,D0
0002659A <AmiBlitz3.ab2@11083> RTS
0002659E <AmiBlitz3.ab2@11086>   CMP.w #$22,D0
000265A2 <AmiBlitz3.ab2@11087>    BEQ.b swapquote
000265A6 <AmiBlitz3.ab2@11088>   CMP.w #$3B,D0
000265AA <AmiBlitz3.ab2@11089>    BNE.b getcharb__done
000265B0 <AmiBlitz3.ab2@11090>   TST.w instringon
000265B4 <AmiBlitz3.ab2@11091>    BNE.b getcharb__done
000265B6 <AmiBlitz3.ab2@11094>   MOVE.b (A5)+,D0
000265BA <AmiBlitz3.ab2@11095>             BEQ getcharb__loop_l1
000265BE <AmiBlitz3.ab2@11096>             CMP.b #":",d0
000265C2 <AmiBlitz3.ab2@11097>             BNE getcharb__loop
000265C6 <AmiBlitz3.ab2@11098>             CMP.b #"@",(a5)
000265CA <AmiBlitz3.ab2@11099>             BNE getcharb__loop
000265D0 <AmiBlitz3.ab2@11102>   MOVE.w D0,lastchar
000265D2 <AmiBlitz3.ab2@11105> RTS
000265D8 <AmiBlitz3.ab2@11108>   NOT.w instringon
000265DA <AmiBlitz3.ab2@11109> RTS
000265DE <AmiBlitz3.ab2@11113>   BSR.w getchar
000265E4 <AmiBlitz3.ab2@11114>   TST.w instringon
000265E8 <AmiBlitz3.ab2@11115>    BNE.w get1byte__skip
000265EC <AmiBlitz3.ab2@11116>   CMP.w #$20,D0
000265F0 <AmiBlitz3.ab2@11117>    BEQ.w get1byte_
000265F2 <AmiBlitz3.ab2@11120> RTS
0002660C <AmiBlitz3.ab2@11123> gs:        Ds.w 13                                         ;ds.b 26  org source
00026610 <AmiBlitz3.ab2@11124>            Dc.b $F6,$E4,$FC,$D6                            ;dc.b 228,246,252,196,214,220 org source
00026612 <AmiBlitz3.ab2@11125>            Dc.b $C4,$DC
00026616 <AmiBlitz3.ab2@11131>   BSR.w getchar
0002661C <AmiBlitz3.ab2@11132>   TST.w instringon
00026620 <AmiBlitz3.ab2@11133>    BNE.w gchar2
00026624 <AmiBlitz3.ab2@11134>   CMP.w #$20,D0
00026628 <AmiBlitz3.ab2@11135>    BEQ.w get1bytemain
0002662A <AmiBlitz3.ab2@11137>   TST.w D0
0002662E <AmiBlitz3.ab2@11140>   BEQ.b get1bytemain__zero
00026634 <AmiBlitz3.ab2@11141>   TST.w instringon
00026638 <AmiBlitz3.ab2@11142>    BEQ.b get1bytemain__noqoute
0002663C <AmiBlitz3.ab2@11143>   CMP.b #$20,D0
00026640 <AmiBlitz3.ab2@11144>    BCC.b get1bytemain__skip
00026644 <AmiBlitz3.ab2@11145>   MOVE.b gs(PC,D0.W),D0
00026646 <AmiBlitz3.ab2@11146> RTS
0002664A <AmiBlitz3.ab2@11149>   CMP.w #-$7FDE,D0                                         ;cmp #$8000+34,d0 org source  ;else
0002664E <AmiBlitz3.ab2@11150>    BEQ.b get1bytemain__zero
00026652 <AmiBlitz3.ab2@11151>   CMP.w #$3A,D0
00026656 <AmiBlitz3.ab2@11152>    BEQ.b get1bytemain__zero
00026658 <AmiBlitz3.ab2@11155>   TST.w D0
0002665A <AmiBlitz3.ab2@11158> RTS
00026660 <AmiBlitz3.ab2@11162>   MOVE.w lastchar,D0
00026664 <AmiBlitz3.ab2@11163> BRA.w gchar2
0002666E <AmiBlitz3.ab2@11167>   MOVE.w oldqflag,instringon
00026674 <AmiBlitz3.ab2@11168>   MOVEA.l lastsourcepos,A5
00026676 <AmiBlitz3.ab2@11169> RTS
0002667C <AmiBlitz3.ab2@11173>   MOVE.w D0,locchar
00026682 <AmiBlitz3.ab2@11174>   MOVE.l A5,locloc
00026684 <AmiBlitz3.ab2@11175> RTS
0002668A <AmiBlitz3.ab2@11179>   MOVEA.l locloc,A5
00026690 <AmiBlitz3.ab2@11180>   MOVE.w locchar,D0
00026696 <AmiBlitz3.ab2@11181>   MOVE.w D0,lastchar
00026698 <AmiBlitz3.ab2@11182> RTS
00026698 <internal_errormsg.ab2@1> XINCLUDE "internal_errormsg.ab2"
000266E0 <internal_errormsg.ab2@9> XINCLUDE "internal_errormsg.ab2"
00026732 <internal_errormsg.ab2@10> XINCLUDE "internal_errormsg.ab2"
00026770 <internal_errormsg.ab2@11> XINCLUDE "internal_errormsg.ab2"
000267AE <internal_errormsg.ab2@12> XINCLUDE "internal_errormsg.ab2"
000267D8 <internal_errormsg.ab2@13> XINCLUDE "internal_errormsg.ab2"
00026808 <internal_errormsg.ab2@14> XINCLUDE "internal_errormsg.ab2"
00026852 <internal_errormsg.ab2@15> XINCLUDE "internal_errormsg.ab2"
000268D8 <internal_errormsg.ab2@16> XINCLUDE "internal_errormsg.ab2"
0002693A <internal_errormsg.ab2@17> XINCLUDE "internal_errormsg.ab2"
00026982 <internal_errormsg.ab2@18> XINCLUDE "internal_errormsg.ab2"
000269D4 <internal_errormsg.ab2@19> XINCLUDE "internal_errormsg.ab2"
00026A1E <internal_errormsg.ab2@20> XINCLUDE "internal_errormsg.ab2"
00026A6C <internal_errormsg.ab2@21> XINCLUDE "internal_errormsg.ab2"
00026AA2 <internal_errormsg.ab2@22> XINCLUDE "internal_errormsg.ab2"
00026AD0 <internal_errormsg.ab2@23> XINCLUDE "internal_errormsg.ab2"
00026AEA <internal_errormsg.ab2@24> XINCLUDE "internal_errormsg.ab2"
00026B08 <internal_errormsg.ab2@25> XINCLUDE "internal_errormsg.ab2"
00026B86 <internal_errormsg.ab2@26> XINCLUDE "internal_errormsg.ab2"
00026BB0 <internal_errormsg.ab2@27> XINCLUDE "internal_errormsg.ab2"
00026BD6 <internal_errormsg.ab2@28> XINCLUDE "internal_errormsg.ab2"
00026BF6 <internal_errormsg.ab2@29> XINCLUDE "internal_errormsg.ab2"
00026C14 <internal_errormsg.ab2@30> XINCLUDE "internal_errormsg.ab2"
00026C34 <internal_errormsg.ab2@31> XINCLUDE "internal_errormsg.ab2"
00026C5C <internal_errormsg.ab2@32> XINCLUDE "internal_errormsg.ab2"
00026C86 <internal_errormsg.ab2@33> XINCLUDE "internal_errormsg.ab2"
00026C88 <internal_errormsg.ab2@36> XINCLUDE "internal_errormsg.ab2"
00026CA4 <internal_errormsg.ab2@39> XINCLUDE "internal_errormsg.ab2"
00026CCA <internal_errormsg.ab2@40> XINCLUDE "internal_errormsg.ab2"
00026CE2 <internal_errormsg.ab2@41> XINCLUDE "internal_errormsg.ab2"
00026D40 <internal_errormsg.ab2@42> XINCLUDE "internal_errormsg.ab2"
00026D62 <internal_errormsg.ab2@43> XINCLUDE "internal_errormsg.ab2"
00026D88 <internal_errormsg.ab2@44> XINCLUDE "internal_errormsg.ab2"
00026DB0 <internal_errormsg.ab2@45> XINCLUDE "internal_errormsg.ab2"
00026DD0 <internal_errormsg.ab2@46> XINCLUDE "internal_errormsg.ab2"
00026DF4 <internal_errormsg.ab2@47> XINCLUDE "internal_errormsg.ab2"
00026E3A <internal_errormsg.ab2@48> XINCLUDE "internal_errormsg.ab2"
00026E5E <internal_errormsg.ab2@49> XINCLUDE "internal_errormsg.ab2"
00026E82 <internal_errormsg.ab2@50> XINCLUDE "internal_errormsg.ab2"
00026EA2 <internal_errormsg.ab2@51> XINCLUDE "internal_errormsg.ab2"
00026EC6 <internal_errormsg.ab2@52> XINCLUDE "internal_errormsg.ab2"
00026EE8 <internal_errormsg.ab2@53> XINCLUDE "internal_errormsg.ab2"
00026F14 <internal_errormsg.ab2@54> XINCLUDE "internal_errormsg.ab2"
00026F3A <internal_errormsg.ab2@55> XINCLUDE "internal_errormsg.ab2"
00026F44 <internal_errormsg.ab2@58> XINCLUDE "internal_errormsg.ab2"
00026F6A <internal_errormsg.ab2@59> XINCLUDE "internal_errormsg.ab2"
00026FBC <internal_errormsg.ab2@61> XINCLUDE "internal_errormsg.ab2"
00027026 <internal_errormsg.ab2@62> XINCLUDE "internal_errormsg.ab2"
00027084 <internal_errormsg.ab2@63> XINCLUDE "internal_errormsg.ab2"
000270F2 <internal_errormsg.ab2@64> XINCLUDE "internal_errormsg.ab2"
0002712E <internal_errormsg.ab2@65> XINCLUDE "internal_errormsg.ab2"
0002714C <internal_errormsg.ab2@66> XINCLUDE "internal_errormsg.ab2"
00027172 <internal_errormsg.ab2@67> XINCLUDE "internal_errormsg.ab2"
000271A2 <internal_errormsg.ab2@68> XINCLUDE "internal_errormsg.ab2"
000271C6 <internal_errormsg.ab2@69> XINCLUDE "internal_errormsg.ab2"
000271F4 <internal_errormsg.ab2@70> XINCLUDE "internal_errormsg.ab2"
00027218 <internal_errormsg.ab2@71> XINCLUDE "internal_errormsg.ab2"
0002722E <internal_errormsg.ab2@72> XINCLUDE "internal_errormsg.ab2"
00027244 <internal_errormsg.ab2@73> XINCLUDE "internal_errormsg.ab2"
0002724A <internal_errormsg.ab2@76> XINCLUDE "internal_errormsg.ab2"
00027252 <internal_errormsg.ab2@78> XINCLUDE "internal_errormsg.ab2"
00027254 <internal_errormsg.ab2@79> XINCLUDE "internal_errormsg.ab2"
00027258 <internal_errormsg.ab2@80> XINCLUDE "internal_errormsg.ab2"
00027260 <internal_errormsg.ab2@81> XINCLUDE "internal_errormsg.ab2"
00027262 <internal_errormsg.ab2@82> XINCLUDE "internal_errormsg.ab2"
0002729C <internal_errormsg.ab2@84> XINCLUDE "internal_errormsg.ab2"
000272C8 <internal_errormsg.ab2@85> XINCLUDE "internal_errormsg.ab2"
000272F8 <internal_errormsg.ab2@86> XINCLUDE "internal_errormsg.ab2"
00027330 <internal_errormsg.ab2@87> XINCLUDE "internal_errormsg.ab2"
0002738A <internal_errormsg.ab2@88> XINCLUDE "internal_errormsg.ab2"
0002738C <internal_errormsg.ab2@92> XINCLUDE "internal_errormsg.ab2"
00027390 <internal_errormsg.ab2@93> XINCLUDE "internal_errormsg.ab2"
00027394 <internal_errormsg.ab2@94> XINCLUDE "internal_errormsg.ab2"
00027398 <internal_errormsg.ab2@95> XINCLUDE "internal_errormsg.ab2"
0002739C <internal_errormsg.ab2@96> XINCLUDE "internal_errormsg.ab2"
000273A0 <internal_errormsg.ab2@97> XINCLUDE "internal_errormsg.ab2"
000273A4 <internal_errormsg.ab2@98> XINCLUDE "internal_errormsg.ab2"
000273A8 <internal_errormsg.ab2@99> XINCLUDE "internal_errormsg.ab2"
000273AC <internal_errormsg.ab2@100> XINCLUDE "internal_errormsg.ab2"
000273B0 <internal_errormsg.ab2@101> XINCLUDE "internal_errormsg.ab2"
000273B4 <internal_errormsg.ab2@102> XINCLUDE "internal_errormsg.ab2"
000273F2 <internal_errormsg.ab2@103> XINCLUDE "internal_errormsg.ab2"
00027424 <internal_errormsg.ab2@105> XINCLUDE "internal_errormsg.ab2"
00027442 <internal_errormsg.ab2@106> XINCLUDE "internal_errormsg.ab2"
0002746C <internal_errormsg.ab2@107> XINCLUDE "internal_errormsg.ab2"
00027488 <internal_errormsg.ab2@108> XINCLUDE "internal_errormsg.ab2"
000274A2 <internal_errormsg.ab2@109> XINCLUDE "internal_errormsg.ab2"
000274C0 <internal_errormsg.ab2@110> XINCLUDE "internal_errormsg.ab2"
000274E4 <internal_errormsg.ab2@111> XINCLUDE "internal_errormsg.ab2"
000274E6 <internal_errormsg.ab2@114> XINCLUDE "internal_errormsg.ab2"
00027538 <internal_errormsg.ab2@115> XINCLUDE "internal_errormsg.ab2"
00027560 <internal_errormsg.ab2@117> XINCLUDE "internal_errormsg.ab2"
00027588 <internal_errormsg.ab2@118> XINCLUDE "internal_errormsg.ab2"
000275A4 <internal_errormsg.ab2@122> XINCLUDE "internal_errormsg.ab2"
000275C4 <internal_errormsg.ab2@123> XINCLUDE "internal_errormsg.ab2"
000275DC <internal_errormsg.ab2@124> XINCLUDE "internal_errormsg.ab2"
00027620 <internal_errormsg.ab2@125> XINCLUDE "internal_errormsg.ab2"
00027668 <internal_errormsg.ab2@126> XINCLUDE "internal_errormsg.ab2"
00027692 <internal_errormsg.ab2@127> XINCLUDE "internal_errormsg.ab2"
000276BC <internal_errormsg.ab2@128> XINCLUDE "internal_errormsg.ab2"
000276D6 <internal_errormsg.ab2@132> XINCLUDE "internal_errormsg.ab2"
00027700 <internal_errormsg.ab2@133> XINCLUDE "internal_errormsg.ab2"
00027754 <internal_errormsg.ab2@134> XINCLUDE "internal_errormsg.ab2"
000277A0 <internal_errormsg.ab2@135> XINCLUDE "internal_errormsg.ab2"
000277D8 <internal_errormsg.ab2@136> XINCLUDE "internal_errormsg.ab2"
000277DE <internal_errormsg.ab2@139> XINCLUDE "internal_errormsg.ab2"
000277EC <internal_errormsg.ab2@141> XINCLUDE "internal_errormsg.ab2"
0002781C <internal_errormsg.ab2@144> XINCLUDE "internal_errormsg.ab2"
00027850 <internal_errormsg.ab2@145> XINCLUDE "internal_errormsg.ab2"
000278B6 <internal_errormsg.ab2@146> XINCLUDE "internal_errormsg.ab2"
000278D4 <internal_errormsg.ab2@147> XINCLUDE "internal_errormsg.ab2"
0002794E <internal_errormsg.ab2@148> XINCLUDE "internal_errormsg.ab2"
00027976 <internal_errormsg.ab2@149> XINCLUDE "internal_errormsg.ab2"
0002798C <internal_errormsg.ab2@150> XINCLUDE "internal_errormsg.ab2"
000279A0 <internal_errormsg.ab2@151> XINCLUDE "internal_errormsg.ab2"
000279A2 <internal_errormsg.ab2@154> XINCLUDE "internal_errormsg.ab2"
000279A3 <internal_errormsg.ab2@155> XINCLUDE "internal_errormsg.ab2"
000279A4 <internal_errormsg.ab2@156> XINCLUDE "internal_errormsg.ab2"
000279C4 <internal_errormsg.ab2@158> XINCLUDE "internal_errormsg.ab2"
000279CA <internal_errormsg.ab2@161> XINCLUDE "internal_errormsg.ab2"
000279DC <internal_errormsg.ab2@163> XINCLUDE "internal_errormsg.ab2"
00027A10 <internal_errormsg.ab2@166> XINCLUDE "internal_errormsg.ab2"
00027A28 <internal_errormsg.ab2@167> XINCLUDE "internal_errormsg.ab2"
00027A44 <internal_errormsg.ab2@168> XINCLUDE "internal_errormsg.ab2"
00027A5C <internal_errormsg.ab2@169> XINCLUDE "internal_errormsg.ab2"
00027A7C <internal_errormsg.ab2@170> XINCLUDE "internal_errormsg.ab2"
00027A9C <internal_errormsg.ab2@171> XINCLUDE "internal_errormsg.ab2"
00027AC2 <internal_errormsg.ab2@172> XINCLUDE "internal_errormsg.ab2"
00027AD8 <internal_errormsg.ab2@173> XINCLUDE "internal_errormsg.ab2"
00027AF4 <internal_errormsg.ab2@174> XINCLUDE "internal_errormsg.ab2"
00027B1E <internal_errormsg.ab2@175> XINCLUDE "internal_errormsg.ab2"
00027B36 <internal_errormsg.ab2@176> XINCLUDE "internal_errormsg.ab2"
00027B52 <internal_errormsg.ab2@177> XINCLUDE "internal_errormsg.ab2"
00027B72 <internal_errormsg.ab2@178> XINCLUDE "internal_errormsg.ab2"
00027B8A <internal_errormsg.ab2@179> XINCLUDE "internal_errormsg.ab2"
00027B8E <internal_errormsg.ab2@182> XINCLUDE "internal_errormsg.ab2"
00027B94 <internal_errormsg.ab2@183> XINCLUDE "internal_errormsg.ab2"
00027B9A <internal_errormsg.ab2@184> XINCLUDE "internal_errormsg.ab2"
00027BAF <internal_errormsg.ab2@185> XINCLUDE "internal_errormsg.ab2"
00027BB5 <internal_errormsg.ab2@187> XINCLUDE "internal_errormsg.ab2"
00027BB6 <internal_errormsg.ab2@188> XINCLUDE "internal_errormsg.ab2"
00027BBA <internal_errormsg.ab2@191> XINCLUDE "internal_errormsg.ab2"
00027BC0 <internal_errormsg.ab2@192> XINCLUDE "internal_errormsg.ab2"
00027BC6 <internal_errormsg.ab2@193> XINCLUDE "internal_errormsg.ab2"
00027BD9 <internal_errormsg.ab2@194> XINCLUDE "internal_errormsg.ab2"
00027BDF <internal_errormsg.ab2@196> XINCLUDE "internal_errormsg.ab2"
00027BE0 <internal_errormsg.ab2@197> XINCLUDE "internal_errormsg.ab2"
00027BFE <internal_errormsg.ab2@199> XINCLUDE "internal_errormsg.ab2"
00027C16 <internal_errormsg.ab2@200> XINCLUDE "internal_errormsg.ab2"
00027C32 <internal_errormsg.ab2@201> XINCLUDE "internal_errormsg.ab2"
00027C5C <internal_errormsg.ab2@202> XINCLUDE "internal_errormsg.ab2"
00027C76 <internal_errormsg.ab2@203> XINCLUDE "internal_errormsg.ab2"
00027C96 <internal_errormsg.ab2@204> XINCLUDE "internal_errormsg.ab2"
00027CB4 <internal_errormsg.ab2@205> XINCLUDE "internal_errormsg.ab2"
00027CE2 <internal_errormsg.ab2@206> XINCLUDE "internal_errormsg.ab2"
00027CEC <internal_errormsg.ab2@209> XINCLUDE "internal_errormsg.ab2"
00027D1E <internal_errormsg.ab2@210> XINCLUDE "internal_errormsg.ab2"
00027D3C <internal_errormsg.ab2@212> XINCLUDE "internal_errormsg.ab2"
00027D5A <internal_errormsg.ab2@213> XINCLUDE "internal_errormsg.ab2"
00027D7A <internal_errormsg.ab2@214> XINCLUDE "internal_errormsg.ab2"
00027DA0 <internal_errormsg.ab2@215> XINCLUDE "internal_errormsg.ab2"
00027DC6 <internal_errormsg.ab2@216> XINCLUDE "internal_errormsg.ab2"
00027DEE <internal_errormsg.ab2@217> XINCLUDE "internal_errormsg.ab2"
00027E0C <internal_errormsg.ab2@218> XINCLUDE "internal_errormsg.ab2"
00027E2C <internal_errormsg.ab2@219> XINCLUDE "internal_errormsg.ab2"
00027E46 <internal_errormsg.ab2@220> XINCLUDE "internal_errormsg.ab2"
00027E68 <internal_errormsg.ab2@221> XINCLUDE "internal_errormsg.ab2"
00027E86 <internal_errormsg.ab2@222> XINCLUDE "internal_errormsg.ab2"
00027EA8 <internal_errormsg.ab2@223> XINCLUDE "internal_errormsg.ab2"
00027ECC <internal_errormsg.ab2@224> XINCLUDE "internal_errormsg.ab2"
00027ED2 <internal_errormsg.ab2@227> XINCLUDE "internal_errormsg.ab2"
00027EEE <internal_errormsg.ab2@228> XINCLUDE "internal_errormsg.ab2"
00027F0A <internal_errormsg.ab2@230> XINCLUDE "internal_errormsg.ab2"
00027F28 <internal_errormsg.ab2@231> XINCLUDE "internal_errormsg.ab2"
00027F46 <internal_errormsg.ab2@232> XINCLUDE "internal_errormsg.ab2"
00027F94 <internal_errormsg.ab2@233> XINCLUDE "internal_errormsg.ab2"
00027FB2 <internal_errormsg.ab2@234> XINCLUDE "internal_errormsg.ab2"
00027FD0 <internal_errormsg.ab2@235> XINCLUDE "internal_errormsg.ab2"
00027FEA <internal_errormsg.ab2@236> XINCLUDE "internal_errormsg.ab2"
00028036 <internal_errormsg.ab2@237> XINCLUDE "internal_errormsg.ab2"
0002805C <internal_errormsg.ab2@238> XINCLUDE "internal_errormsg.ab2"
0002807C <internal_errormsg.ab2@239> XINCLUDE "internal_errormsg.ab2"
0002809E <internal_errormsg.ab2@240> XINCLUDE "internal_errormsg.ab2"
000280BA <internal_errormsg.ab2@241> XINCLUDE "internal_errormsg.ab2"
000280E0 <internal_errormsg.ab2@242> XINCLUDE "internal_errormsg.ab2"
000280FC <internal_errormsg.ab2@243> XINCLUDE "internal_errormsg.ab2"
0002811A <internal_errormsg.ab2@244> XINCLUDE "internal_errormsg.ab2"
00028142 <internal_errormsg.ab2@245> XINCLUDE "internal_errormsg.ab2"
0002815E <internal_errormsg.ab2@246> XINCLUDE "internal_errormsg.ab2"
0002816E <internal_errormsg.ab2@247> XINCLUDE "internal_errormsg.ab2"
00028190 <internal_errormsg.ab2@248> XINCLUDE "internal_errormsg.ab2"
00028194 <internal_errormsg.ab2@251> XINCLUDE "internal_errormsg.ab2"
00028196 <internal_errormsg.ab2@254> XINCLUDE "internal_errormsg.ab2"
000281B0 <internal_errormsg.ab2@255> XINCLUDE "internal_errormsg.ab2"
000281D4 <internal_errormsg.ab2@257> XINCLUDE "internal_errormsg.ab2"
000281F4 <internal_errormsg.ab2@258> XINCLUDE "internal_errormsg.ab2"
00028226 <internal_errormsg.ab2@259> XINCLUDE "internal_errormsg.ab2"
00028284 <internal_errormsg.ab2@260> XINCLUDE "internal_errormsg.ab2"
000282BC <internal_errormsg.ab2@261> XINCLUDE "internal_errormsg.ab2"
000282FA <internal_errormsg.ab2@262> XINCLUDE "internal_errormsg.ab2"
00028330 <internal_errormsg.ab2@263> XINCLUDE "internal_errormsg.ab2"
00028362 <internal_errormsg.ab2@264> XINCLUDE "internal_errormsg.ab2"
00028386 <internal_errormsg.ab2@265> XINCLUDE "internal_errormsg.ab2"
000283AA <internal_errormsg.ab2@266> XINCLUDE "internal_errormsg.ab2"
000283F4 <internal_errormsg.ab2@267> XINCLUDE "internal_errormsg.ab2"
0002841C <internal_errormsg.ab2@268> XINCLUDE "internal_errormsg.ab2"
00028466 <internal_errormsg.ab2@269> XINCLUDE "internal_errormsg.ab2"
000284A6 <internal_errormsg.ab2@270> XINCLUDE "internal_errormsg.ab2"
000284A6 <AmiBlitz3.ab2@11186> XINCLUDE "internal_errormsg.ab2"
000284A8 <AmiBlitz3.ab2@11190> ezerr:   Ds.w 1                                            ;for simple errors
000284AE <AmiBlitz3.ab2@11196>    MOVE.l myline,d0
000284B2 <AmiBlitz3.ab2@11197>   BNE handle_compileerror__l2
000284B8 <AmiBlitz3.ab2@11199>     MOVE.l a5,lastsourcepos
000284BA <AmiBlitz3.ab2@11201>     SUBA.l a5,a5
000284C0 <AmiBlitz3.ab2@11203>   TST.l usedfrom
000284C4 <AmiBlitz3.ab2@11204>   BEQ handle_compileerror__org
000284CA <AmiBlitz3.ab2@11205>     MOVEA.l usedfrom,a5
000284D0 <AmiBlitz3.ab2@11208>   TST.w dirmode
000284D4 <AmiBlitz3.ab2@11209>   BNE.b handle_compileerror__quiet
000284DA <AmiBlitz3.ab2@11210>     JSR call_setpointernormal
000284DE <AmiBlitz3.ab2@11211>     MOVE.w ezerr(PC),D0
000284E2 <AmiBlitz3.ab2@11212>     BNE.w handle_compileerror__skip
000284E8 <AmiBlitz3.ab2@11213>       MOVE.w cfetchmode,D0
000284EC <AmiBlitz3.ab2@11214>       BEQ.w handle_compileerror__skip2
000284F6 <AmiBlitz3.ab2@11215>         MOVE.l oldlibat,destbufferend                      ;fix up lib thing.
000284FC <AmiBlitz3.ab2@11218>   MOVE.w constmode,D0
00028500 <AmiBlitz3.ab2@11219>   BEQ.b handle_compileerror__skip3
00028504 <AmiBlitz3.ab2@11220>     BSR.w asmerr2
0002850A <AmiBlitz3.ab2@11223>   MOVE.l firstlocal,D1
00028510 <AmiBlitz3.ab2@11224>   OR.l firstglob,D1
00028514 <AmiBlitz3.ab2@11225>   BEQ.b handle_compileerror__notproc                       ;?!?!?!
0002851A <AmiBlitz3.ab2@11226>     JSR JL_0_DB5C
00028522 <AmiBlitz3.ab2@11229>   MOVE.w #$FFFF,anyerrs                                    ;#-1,anyerrs org source
0002852C <AmiBlitz3.ab2@11230>   CMP.l #"NORE",reqmode                                    ;for used functions
00028530 <AmiBlitz3.ab2@11231>   BEQ handle_compileerror__notproc_l1
0002853A <AmiBlitz3.ab2@11232>     MOVE.l linenumat,compilelinecounter
00028540 <AmiBlitz3.ab2@11235>   JSR close_compilewin
00028542 <AmiBlitz3.ab2@11238>   MOVEA.l (A7)+,A0
00028548 <AmiBlitz3.ab2@11239>   JSR errorstringparse
00028552 <AmiBlitz3.ab2@11240>   CMP.l #"NORE",reqmode                                    ;for used functions
00028556 <AmiBlitz3.ab2@11241>   BEQ handle_compileerror__skip_Lxx2
0002855C <AmiBlitz3.ab2@11242>   TST.l CLIMode
00028560 <AmiBlitz3.ab2@11243>   BNE 'climode_output
00028566 <AmiBlitz3.ab2@11245>     JSR save_errorfile
0002856A <AmiBlitz3.ab2@11246>     BRA 'end_output
00028570 <AmiBlitz3.ab2@11248>     JSR stdout_error
00028576 <AmiBlitz3.ab2@11250>     MOVE.l lastsourcepos,a5
00028578 <AmiBlitz3.ab2@11251> 'loop TST.b (a5)
0002857C <AmiBlitz3.ab2@11252>       BEQ 'ok2
0002857E <AmiBlitz3.ab2@11253>     MOVE.b (a5)+,d0                                  ; position to usefull source position to avoid following errors
00028582 <AmiBlitz3.ab2@11254>     BEQ 'ok
00028586 <AmiBlitz3.ab2@11255>     CMP.b #":",d0
0002858A <AmiBlitz3.ab2@11256>     BEQ 'ok
0002858E <AmiBlitz3.ab2@11257>     BRA 'loop
00028590 <AmiBlitz3.ab2@11258> 'ok SUBQ.l #1,a5
00028598 <AmiBlitz3.ab2@11259> 'ok2 MOVE.w #0,lastchar
000285A0 <AmiBlitz3.ab2@11260>     MOVE.b #1,iserror
000285A6 <AmiBlitz3.ab2@11261>     MOVE.l stackaddr,a7
000285A8 <AmiBlitz3.ab2@11262>     RTS
000285AA <AmiBlitz3.ab2@11268>   MOVE.l A0,-(a7)
000285E8 <AmiBlitz3.ab2@11269>   !ComData_GetL{comFunc_ErrorRequest,A1}
000285EA <AmiBlitz3.ab2@11270>   MOVE.l (a7)+,A0
000285EE <AmiBlitz3.ab2@11272>   MOVEM.l d6/D7/A6,-(A7)
000285F4 <AmiBlitz3.ab2@11273>   MOVE.l includeline,d7
000285FA <AmiBlitz3.ab2@11274>   MOVE.l #"INLN",a6
00028604 <AmiBlitz3.ab2@11275>   MOVE.l errstack,tempa7
00028606 <AmiBlitz3.ab2@11276>   JSR (A1)
0002860A <AmiBlitz3.ab2@11278>   MOVEM.l (A7)+,D7/d6/A6
00028610 <AmiBlitz3.ab2@11281>   MOVE.l tempa7,a7
00028616 <AmiBlitz3.ab2@11282>   MOVEA.l errcont,A0
00028618 <AmiBlitz3.ab2@11284> RTS
0002861E <AmiBlitz3.ab2@11287>   MOVEA.l errstack,A7
00028624 <AmiBlitz3.ab2@11288>   MOVEA.l errcont,A0
00028626 <AmiBlitz3.ab2@11290> RTS
00028628 <AmiBlitz3.ab2@11293>   MOVE.l (A7),D0
0002862E <AmiBlitz3.ab2@11294>   MOVEA.l errstack,A7
00028634 <AmiBlitz3.ab2@11295>   MOVEA.l errcont,A0
00028636 <AmiBlitz3.ab2@11296> JMP (A0)
0002863A <AmiBlitz3.ab2@11302>   CMP.w #$7A,D0                                            ;'z'
0002863E <AmiBlitz3.ab2@11303>    BHI.w tstalpha__no
00028642 <AmiBlitz3.ab2@11304>   CMP.w #$41,D0                                            ;'A'
00028646 <AmiBlitz3.ab2@11305>    BCS.w tstalpha__no
0002864A <AmiBlitz3.ab2@11306>   CMP.w #$61,D0                                            ;'a'
0002864E <AmiBlitz3.ab2@11307>    BCC.w tstalpha__yes
00028652 <AmiBlitz3.ab2@11308>   CMP.w #$5A,D0                                            ;'Z'
00028656 <AmiBlitz3.ab2@11309>    BHI.w tstalpha__no
00028658 <AmiBlitz3.ab2@11312>   CMP.w D0,D0
0002865A <AmiBlitz3.ab2@11315> RTS
0002865E <AmiBlitz3.ab2@11323>   CMP.w #$30,D0                                            ;'0'
00028662 <AmiBlitz3.ab2@11324>    BCS.w tstnum__skip
00028666 <AmiBlitz3.ab2@11325>   CMP.w #$39,D0                                            ;'9'
0002866A <AmiBlitz3.ab2@11326>    BHI.w tstnum__skip                                     
0002866C <AmiBlitz3.ab2@11327>   CMP.w D0,D0
0002866E <AmiBlitz3.ab2@11330> RTS
00028690 <AmiBlitz3.ab2@11336>   !compare1                                                ;bsr.w tstalpha
00028694 <AmiBlitz3.ab2@11337>    BEQ.w tstlab__skip
000286A6 <AmiBlitz3.ab2@11338>   !compare2                                                ;bsr.w tstnum2
000286AA <AmiBlitz3.ab2@11339>    BEQ.w tstlab__skip
000286AE <AmiBlitz3.ab2@11340>   CMP.w #$5F,D0                                            ;'_'
000286B2 <AmiBlitz3.ab2@11341>    BEQ.w tstlab__skip
000286B6 <AmiBlitz3.ab2@11342>   CMP.w #$27,D0                                            ;#loclabch,d0 org source
000286B8 <AmiBlitz3.ab2@11345> RTS
000286C2 <AmiBlitz3.ab2@11350>   MOVE.w oldqflag,instringon
000286C8 <AmiBlitz3.ab2@11351>   MOVEA.l lastsourcepos,A5
000286CE <AmiBlitz3.ab2@11354>   MOVE.l a5,beforeparameterfetch
000286D4 <AmiBlitz3.ab2@11355>   LEA ptr_parameterstore,A1
000286D6 <AmiBlitz3.ab2@11358>   MOVEQ.l #$00,D2
000286DC <AmiBlitz3.ab2@11361>   LEA chartab,a0
000286DE <AmiBlitz3.ab2@11362>   MOVEQ #0,d0
000286E4 <AmiBlitz3.ab2@11363>   MOVE.l A5,lastsourcepos
000286EE <AmiBlitz3.ab2@11364>   MOVE.w instringon,oldqflag
000286F0 <AmiBlitz3.ab2@11367>     MOVE.b (a5)+,d0
000286F4 <AmiBlitz3.ab2@11368>   CMP.b #$20,d0                                            ;space deftype
000286F8 <AmiBlitz3.ab2@11369>   BEQ makename4__retry
000286FE <AmiBlitz3.ab2@11371>   MOVE.w d0,lastchar
00028702 <AmiBlitz3.ab2@11372>   TST.b 0(a0,d0.w)
00028706 <AmiBlitz3.ab2@11373>   BNE makename__done
00028708 <AmiBlitz3.ab2@11382>   MOVE.b D0,(A1)+
0002870A <AmiBlitz3.ab2@11383>   ADDQ.l #1,D2
00028710 <AmiBlitz3.ab2@11384>   MOVE.l A5,lastsourcepos
00028712 <AmiBlitz3.ab2@11387>   MOVE.b (a5)+,d0
00028718 <AmiBlitz3.ab2@11388>   MOVE.b d0,lastchar+1
0002871C <AmiBlitz3.ab2@11389>   CMP.b #$20,d0
00028720 <AmiBlitz3.ab2@11390>   BEQ makename__loop_l20
00028724 <AmiBlitz3.ab2@11392>   TST.b 0(a0,d0)
00028728 <AmiBlitz3.ab2@11393>   BEQ makename__loop
0002872C <AmiBlitz3.ab2@11394>   CMP.b #2,d0
00028730 <AmiBlitz3.ab2@11395>   BNE makename__loop_lf1
00028736 <AmiBlitz3.ab2@11396>   MOVEA.l usedfrom,A5
0002873C <AmiBlitz3.ab2@11397>   CLR.l usedfrom
00028740 <AmiBlitz3.ab2@11398> BRA makename__loop_ln1
00028744 <AmiBlitz3.ab2@11401>   CMP.b #1,d0
00028748 <AmiBlitz3.ab2@11402>   BNE makename__loop_l20
0002874C <AmiBlitz3.ab2@11403>   MOVEA.l cmakea5(PC),A5
00028750 <AmiBlitz3.ab2@11404> BRA makename__loop_ln1
00028754 <AmiBlitz3.ab2@11407>   CMP.b #$7e,d0
00028758 <AmiBlitz3.ab2@11408>             BNE makename__loop_lt
0002875E <AmiBlitz3.ab2@11409>             TST.w cmake
00028762 <AmiBlitz3.ab2@11410>             BNE.w makename__loop_a1
00028764 <AmiBlitz3.ab2@11411>             SUBQ.l #1,a5
00028768 <AmiBlitz3.ab2@11412>             BSR.w get1bytemain
0002876C <AmiBlitz3.ab2@11413> BRA makename__loop
00028770 <AmiBlitz3.ab2@11417> BRA makename__loop_gpex
00028774 <AmiBlitz3.ab2@11421>   BSR.w getchar
00028796 <AmiBlitz3.ab2@11422>    !compare1                                               ;bsr.w tstalpha
0002879A <AmiBlitz3.ab2@11423>    BEQ.w makename__loop_getp1
000287AC <AmiBlitz3.ab2@11424>    !compare2                                               ;bsr.w tstnum
000287B0 <AmiBlitz3.ab2@11425>    BEQ.w makename__loop_getp1
000287B4 <AmiBlitz3.ab2@11426>   CMP.w #$5F,D0                                            ;'_'
000287B8 <AmiBlitz3.ab2@11427>    BEQ.w makename__loop_getp1
000287BC <AmiBlitz3.ab2@11428>   CMP.w #$27,D0                                            ;#loclabch,d0 org source
000287C0 <AmiBlitz3.ab2@11432>       BNE makename__loop_gpex
000287C4 <AmiBlitz3.ab2@11433>       CMP.b #$20,d0
000287C8 <AmiBlitz3.ab2@11434>       BNE.w makename__loop
000287CA <AmiBlitz3.ab2@11437>      TST.b d0
000287CE <AmiBlitz3.ab2@11438>      BPL makename__loop_l10
000287D0 <AmiBlitz3.ab2@11439>      SUBQ.l #1,a5
000287D4 <AmiBlitz3.ab2@11440>      BSR get1byte_
000287D8 <AmiBlitz3.ab2@11443>    CMP.w #$20,D0
000287DC <AmiBlitz3.ab2@11444>    BNE.w makename__done
000287DE <AmiBlitz3.ab2@11445>    MOVEQ #0,d0
000287E4 <AmiBlitz3.ab2@11446>   MOVE.l a5,lastsourcepos
000287E6 <AmiBlitz3.ab2@11449>   MOVE.b (a5)+,d0                                          ;neuneu
000287EA <AmiBlitz3.ab2@11450>   BPL makename__loop_l101:
000287EC <AmiBlitz3.ab2@11451>   ASL.w #8,d0
000287EE <AmiBlitz3.ab2@11452>   MOVE.b (a5)+,d0
000287F4 <AmiBlitz3.ab2@11455>   TST.w instringon
000287F8 <AmiBlitz3.ab2@11456>   BNE makename__loop_l102
000287FC <AmiBlitz3.ab2@11457>   CMP.b #$20,d0
00028800 <AmiBlitz3.ab2@11458>   BEQ makename__loop_l103
00028804 <AmiBlitz3.ab2@11459>   CMP.b #";",d0
00028808 <AmiBlitz3.ab2@11460>   BNE makename__loop_l102
0002880A <AmiBlitz3.ab2@11463>   MOVE.b (A5)+,D0
0002880E <AmiBlitz3.ab2@11464>              BEQ makename__loop_l1
00028812 <AmiBlitz3.ab2@11465>              CMP.b #":",d0
00028816 <AmiBlitz3.ab2@11466>              BNE makename__loop_lr                         ;:@
0002881A <AmiBlitz3.ab2@11467>              CMP.b #"@",(a5)
0002881E <AmiBlitz3.ab2@11468>              BNE makename__loop_lr
00028820 <AmiBlitz3.ab2@11469>              ADDQ #1,a5
00028826 <AmiBlitz3.ab2@11473>   MOVE.w d0,lastchar
0002882A <AmiBlitz3.ab2@11477>   CMP.b #";",d0
0002882E <AmiBlitz3.ab2@11478>   BEQ makename__done_l11
00028830 <AmiBlitz3.ab2@11479>   CLR.b (A1)
00028832 <AmiBlitz3.ab2@11481>   TST.w D2
00028834 <AmiBlitz3.ab2@11482> RTS
00028836 <AmiBlitz3.ab2@11485>   CLR.b (a1)
00028838 <AmiBlitz3.ab2@11486>   MOVEQ #0,d0
0002883E <AmiBlitz3.ab2@11487>   MOVE.w d0,lastchar
00028840 <AmiBlitz3.ab2@11489>   TST.w D2
00028842 <AmiBlitz3.ab2@11490> RTS
00028844 <AmiBlitz3.ab2@11496>   MOVE.l (A2),D0
00028848 <AmiBlitz3.ab2@11499>   BEQ.w findlast__here
0002884A <AmiBlitz3.ab2@11500>   MOVEA.l D0,A2
0002884E <AmiBlitz3.ab2@11501> BRA.w findlast__loop
00028852 <AmiBlitz3.ab2@11504> BRA.w reget
00028854 <AmiBlitz3.ab2@11510>   MOVE.l (A2),-(A7)
00028858 <AmiBlitz3.ab2@11511>   BSR.w addlabel
0002885A <AmiBlitz3.ab2@11512>   MOVE.l (A7)+,(A2)
0002885C <AmiBlitz3.ab2@11513> RTS
00028862 <AmiBlitz3.ab2@11518>   CLR.l fp0addr
00028868 <AmiBlitz3.ab2@11519>   TST.w dirmode
0002886C <AmiBlitz3.ab2@11520>    BNE.w illdirerr
0002886E <AmiBlitz3.ab2@11521>   MOVEQ.l #$00,D0
00028870 <AmiBlitz3.ab2@11522>   MOVE.w D7,D0
00028872 <AmiBlitz3.ab2@11523>   ADD.w D2,D0
00028874 <AmiBlitz3.ab2@11524>   ADDQ.w #1,D0
00028876 <AmiBlitz3.ab2@11525>   MOVE.w D0,D2
00028878 <AmiBlitz3.ab2@11526>   ADDQ.l #2,d0
0002887A <AmiBlitz3.ab2@11527>   MOVEQ.l #$01,D1
00028880 <AmiBlitz3.ab2@11528>   MOVEA.l _execbase,A6
00028886 <AmiBlitz3.ab2@11529>   MOVE.l mempool2,a0
0002888A <AmiBlitz3.ab2@11530>   JSR _AllocPooled(a6)
00028890 <AmiBlitz3.ab2@11532>   MOVE.l lastlabel,a2
00028892 <AmiBlitz3.ab2@11533>   MOVE.l D0,(A2)
00028894 <AmiBlitz3.ab2@11534>   MOVE.l d0,a0
00028896 <AmiBlitz3.ab2@11535>   CLR.l (a0)
0002889C <AmiBlitz3.ab2@11536>   MOVE.l a0,lastlabel
0002889E <AmiBlitz3.ab2@11537>   MOVE.l d0,A2
000288A2 <AmiBlitz3.ab2@11538>   LEA -$1(A0,D7.W),A0
000288A4 <AmiBlitz3.ab2@11539>   MOVE.b D2,(A0)+
000288AA <AmiBlitz3.ab2@11540>   LEA ptr_parameterstore,A1
000288AC <AmiBlitz3.ab2@11541>   MOVEQ #0,d0
000288AE <AmiBlitz3.ab2@11542>   MOVEQ #0,d1
000288B0 <AmiBlitz3.ab2@11545>   MOVE.b (A1)+,d1
000288B4 <AmiBlitz3.ab2@11546>    BEQ 'l1
000288BA <AmiBlitz3.ab2@11547>    !hashalgo
000288BC <AmiBlitz3.ab2@11548>    MOVE.b d1,(A0)+
000288C0 <AmiBlitz3.ab2@11549> BRA addlabel_loop2a
000288C2 <AmiBlitz3.ab2@11552>    CLR.b (a0)+
000288C8 <AmiBlitz3.ab2@11553>    LEA labelhash,a0
000288CE <AmiBlitz3.ab2@11554>    AND.l #hashsize,d0
000288D0 <AmiBlitz3.ab2@11555>    ASL.l #2,d0
000288D4 <AmiBlitz3.ab2@11556>    MOVE.l 0(a0,d0),d1
000288D8 <AmiBlitz3.ab2@11557>    MOVE.l d1,$c(a2)
000288DC <AmiBlitz3.ab2@11558>    MOVE.l a2,0(a0,d0)
000288DE <AmiBlitz3.ab2@11559>    MOVEQ #0,d0
000288E2 <AmiBlitz3.ab2@11560> BRA.w reget
000288E8 <AmiBlitz3.ab2@11564>    TST.b newvariable
000288EC <AmiBlitz3.ab2@11565>    BNE addlabel
000288F2 <AmiBlitz3.ab2@11568>   TST.w dirmode
000288F6 <AmiBlitz3.ab2@11569>    BNE.w illdirerr
000288F8 <AmiBlitz3.ab2@11570>   MOVEQ.l #$00,D0
000288FA <AmiBlitz3.ab2@11571>   MOVE.w D7,D0
000288FC <AmiBlitz3.ab2@11572>   ADD.w D2,D0
000288FE <AmiBlitz3.ab2@11573>   ADDQ.w #1,D0
00028900 <AmiBlitz3.ab2@11574>   MOVE.w D0,D2
00028902 <AmiBlitz3.ab2@11575>   MOVEQ.l #$01,D1
00028908 <AmiBlitz3.ab2@11576>   MOVEA.l _execbase,A6
0002890E <AmiBlitz3.ab2@11577>   MOVE.l mempool2,a0
00028912 <AmiBlitz3.ab2@11578>   JSR _AllocPooled(a6)
00028914 <AmiBlitz3.ab2@11579>   MOVEA.l D0,A0
0002891A <AmiBlitz3.ab2@11581>   LEA varbase,a2
0002891C <AmiBlitz3.ab2@11582>   MOVE.l (a2),(a0)
0002891E <AmiBlitz3.ab2@11583>   MOVE.l A0,(A2)
00028920 <AmiBlitz3.ab2@11584>   MOVEA.l A0,A2
00028924 <AmiBlitz3.ab2@11585>   LEA -$1(A0,D7.W),A0
00028926 <AmiBlitz3.ab2@11586>   MOVE.b D2,(A0)+
0002892C <AmiBlitz3.ab2@11587>   LEA ptr_parameterstore,A1
0002892E <AmiBlitz3.ab2@11588>   MOVEQ #0,d0
00028930 <AmiBlitz3.ab2@11589>   MOVEQ #0,d1
00028932 <AmiBlitz3.ab2@11592>   MOVE.b (A1)+,d1
00028936 <AmiBlitz3.ab2@11593>    BEQ 'l12
0002893C <AmiBlitz3.ab2@11594>    !hashalgo
0002893E <AmiBlitz3.ab2@11595>    MOVE.b d1,(A0)+
00028942 <AmiBlitz3.ab2@11596> BRA 'l11
00028944 <AmiBlitz3.ab2@11599>   CLR.b (a0)+
0002894A <AmiBlitz3.ab2@11600>   LEA variablehash,a0
00028950 <AmiBlitz3.ab2@11601>    AND.l #hashsize,d0
00028952 <AmiBlitz3.ab2@11602>    ASL.l #2,d0
00028956 <AmiBlitz3.ab2@11603>    MOVE.l 0(a0,d0),d1
0002895A <AmiBlitz3.ab2@11604>    MOVE.l d1,$e(a2)
0002895E <AmiBlitz3.ab2@11605>    MOVE.l a2,0(a0,d0)
00028960 <AmiBlitz3.ab2@11606>    MOVEQ #0,d0
00028964 <AmiBlitz3.ab2@11607> BRA.w reget
0002896A <AmiBlitz3.ab2@11611>   TST.w dirmode
0002896E <AmiBlitz3.ab2@11612>    BNE.w illdirerr
00028970 <AmiBlitz3.ab2@11619>   MOVEQ.l #$00,D0
00028972 <AmiBlitz3.ab2@11620>   MOVE.w D7,D0
00028974 <AmiBlitz3.ab2@11621>   ADD.w D2,D0
00028976 <AmiBlitz3.ab2@11622>   ADDQ.w #1,D0
00028978 <AmiBlitz3.ab2@11623>   MOVE.w D0,D2
0002897A <AmiBlitz3.ab2@11624>   MOVEQ.l #$01,D1
00028980 <AmiBlitz3.ab2@11625>   MOVEA.l _execbase,A6
00028986 <AmiBlitz3.ab2@11626>   MOVE.l mempool2,a0
0002898A <AmiBlitz3.ab2@11627>   JSR _AllocPooled(a6)
0002898C <AmiBlitz3.ab2@11629>   MOVEA.l D0,A0
0002898E <AmiBlitz3.ab2@11630>   MOVE.l A0,(A2)
00028990 <AmiBlitz3.ab2@11631>   CLR.l (a0)
00028994 <AmiBlitz3.ab2@11632>   CLR.l 8(a0)                                              ;clear next
00028996 <AmiBlitz3.ab2@11633>   MOVEA.l A0,A2
0002899A <AmiBlitz3.ab2@11634>   LEA -$1(A0,D7.W),A0
0002899C <AmiBlitz3.ab2@11635>   MOVE.b D2,(A0)+                                          ;put in struct length
000289A2 <AmiBlitz3.ab2@11636>   LEA ptr_parameterstore,A1
000289A4 <AmiBlitz3.ab2@11637>   MOVEQ #0,d0
000289A6 <AmiBlitz3.ab2@11638>   MOVEQ #0,d1
000289A8 <AmiBlitz3.ab2@11641>   MOVE.b (A1)+,d1
000289AA <AmiBlitz3.ab2@11644>   MOVE.b d1,(A0)+
000289AE <AmiBlitz3.ab2@11645>   BNE.w addlabel_loop2
000289B2 <AmiBlitz3.ab2@11646> BRA.w reget
000289B4 <AmiBlitz3.ab2@11650>   MOVEQ.l #$13,D7
000289BA <AmiBlitz3.ab2@11651>   LEA constantbase,A2
000289BE <AmiBlitz3.ab2@11652> BRA.w findlab
000289C0 <AmiBlitz3.ab2@11656>   MOVEQ.l #$05+8,D7                                        ;#5,d7 org source
000289C6 <AmiBlitz3.ab2@11657>   LEA xinclude_base,A2
000289CA <AmiBlitz3.ab2@11658> BRA.w findlab
000289CC <AmiBlitz3.ab2@11662>   MOVEQ.l #$09,D7
000289D2 <AmiBlitz3.ab2@11663>   LEA firstconst,A2
000289D6 <AmiBlitz3.ab2@11664> BRA.w findlab
000289D8 <AmiBlitz3.ab2@11668>   MOVEQ.l #$0d,D7                                          ;find macro
000289DE <AmiBlitz3.ab2@11669>   LEA macrobase,A2
000289E2 <AmiBlitz3.ab2@11670> BRA.w findlab
000289E8 <AmiBlitz3.ab2@11674>   LEA labelhash,A2
000289EA <AmiBlitz3.ab2@11675>   MOVEQ.l #$13,D7
000289EC <AmiBlitz3.ab2@11676>   EXT.l d2
000289F2 <AmiBlitz3.ab2@11677>   LEA ptr_parameterstore,A0
000289F4 <AmiBlitz3.ab2@11678>   MOVEQ #0,d0
000289F6 <AmiBlitz3.ab2@11679>   MOVEQ #0,d1
000289F8 <AmiBlitz3.ab2@11682>     MOVE.b (a0)+,d1
000289FC <AmiBlitz3.ab2@11683>     BEQ 'l15
00028A02 <AmiBlitz3.ab2@11684>     !hashalgo
00028A06 <AmiBlitz3.ab2@11685> BRA 'l20
00028A0C <AmiBlitz3.ab2@11688>   AND.l #hashsize,d0
00028A0E <AmiBlitz3.ab2@11689>   ASL.l #2,d0
00028A12 <AmiBlitz3.ab2@11690>   MOVE.l 0(a2,d0),d0
00028A16 <AmiBlitz3.ab2@11691> BRA 'l11
00028A1A <AmiBlitz3.ab2@11694>   MOVE.l $c(A2),D0                                         ;find label
00028A1E <AmiBlitz3.ab2@11697>   BEQ findlab__no
00028A20 <AmiBlitz3.ab2@11698>   MOVEA.l D0,A2
00028A22 <AmiBlitz3.ab2@11699>   MOVEQ.l #$00,D0
00028A26 <AmiBlitz3.ab2@11700>   MOVE.b -$1(A2,D7.l),D0
00028A2C <AmiBlitz3.ab2@11701>   LEA ptr_parameterstore,A0
00028A2E <AmiBlitz3.ab2@11702>   SUB.l D7,D0
00028A30 <AmiBlitz3.ab2@11703>   SUBQ.l #1,D0
00028A32 <AmiBlitz3.ab2@11704>   CMP.l D0,D2
00028A36 <AmiBlitz3.ab2@11705>    BNE.b 'l10
00028A3A <AmiBlitz3.ab2@11706>   LEA $0(A2,D7.W),A1
00028A3C <AmiBlitz3.ab2@11707>   SUBQ.l #1,D0
00028A3E <AmiBlitz3.ab2@11710>     MOVE.b (a1)+,d1
00028A40 <AmiBlitz3.ab2@11711>     CMP.b (a0)+,d1
00028A44 <AmiBlitz3.ab2@11713>     BNE.b 'l10
00028A48 <AmiBlitz3.ab2@11714>   DBF D0,'l201
00028A4C <AmiBlitz3.ab2@11716>   BSR.w reget
00028A4E <AmiBlitz3.ab2@11717>   CMP.w D0,D0
00028A50 <AmiBlitz3.ab2@11718> RTS
00028A52 <AmiBlitz3.ab2@11722>   MOVEQ.l #$0B,D7
00028A56 <AmiBlitz3.ab2@11723> BRA.w findlab
00028A5C <AmiBlitz3.ab2@11727>   LEA firstproc,A2
00028A62 <AmiBlitz3.ab2@11728>   MOVE.l #$21+#funcentry_extend,D7
00028A66 <AmiBlitz3.ab2@11729> BRA findlab
00028A6C <AmiBlitz3.ab2@11733>   LEA firstfor,A2
00028A6E <AmiBlitz3.ab2@11734>   MOVEQ.l #$11,D7
00028A72 <AmiBlitz3.ab2@11735> BRA.w findlab
00028A74 <AmiBlitz3.ab2@11739>   MOVEQ.l #$0F,D7
00028A78 <AmiBlitz3.ab2@11740> BRA.w findlab
00028A7A <AmiBlitz3.ab2@11744>   MOVEQ.l #$0F+4,D7
00028A80 <AmiBlitz3.ab2@11745>   TST.b newvariable
00028A84 <AmiBlitz3.ab2@11746>    BNE.w findlab
00028A8A <AmiBlitz3.ab2@11747>   LEA variablehash,A2
00028A90 <AmiBlitz3.ab2@11748>   LEA ptr_parameterstore,A0
00028A92 <AmiBlitz3.ab2@11749>   MOVEQ #0,d0
00028A94 <AmiBlitz3.ab2@11750>   MOVEQ #0,d1
00028A96 <AmiBlitz3.ab2@11753>     MOVE.b (a0)+,d1
00028A9A <AmiBlitz3.ab2@11754>     BEQ 'l15
00028AA0 <AmiBlitz3.ab2@11755>     !hashalgo
00028AA4 <AmiBlitz3.ab2@11756> BRA 'l20
00028AAA <AmiBlitz3.ab2@11759>   AND.l #hashsize,d0
00028AAC <AmiBlitz3.ab2@11760>   ASL.l #2,d0
00028AB0 <AmiBlitz3.ab2@11761>   MOVE.l 0(a2,d0),d0
00028AB4 <AmiBlitz3.ab2@11762> BRA 'l11
00028AB8 <AmiBlitz3.ab2@11765>   MOVE.l $e(A2),D0                                         ;find label
00028ABC <AmiBlitz3.ab2@11768>   BEQ findlab__no
00028ABE <AmiBlitz3.ab2@11769>   MOVEA.l D0,A2
00028AC0 <AmiBlitz3.ab2@11770>   MOVEQ.l #$00,D0
00028AC4 <AmiBlitz3.ab2@11771>   MOVE.b -$1(A2,D7.W),D0
00028ACA <AmiBlitz3.ab2@11772>   LEA ptr_parameterstore,A0
00028ACC <AmiBlitz3.ab2@11773>   SUB.w D7,D0
00028ACE <AmiBlitz3.ab2@11774>   SUBQ.l #1,D0
00028AD0 <AmiBlitz3.ab2@11775>   CMP.w D0,D2
00028AD4 <AmiBlitz3.ab2@11776>    BNE.b 'l10
00028AD8 <AmiBlitz3.ab2@11777>   LEA $0(A2,D7.W),A1
00028ADA <AmiBlitz3.ab2@11778>   SUBQ.l #1,D0
00028ADC <AmiBlitz3.ab2@11781>     MOVE.b (a1)+,d1
00028ADE <AmiBlitz3.ab2@11782>     CMP.b (a0)+,d1
00028AE2 <AmiBlitz3.ab2@11784>     BNE.b 'l10
00028AE6 <AmiBlitz3.ab2@11785>   DBF D0,'l201
00028AEA <AmiBlitz3.ab2@11787>   BSR.w reget
00028AEC <AmiBlitz3.ab2@11788>   CMP.w D0,D0
00028AEE <AmiBlitz3.ab2@11789> RTS
00028AF0 <AmiBlitz3.ab2@11802>     MOVE.l (A2),D0                                         ;find label
00028AF4 <AmiBlitz3.ab2@11803>      BEQ.b findlab__no
00028AF6 <AmiBlitz3.ab2@11804>     MOVEA.l D0,A2
00028AF8 <AmiBlitz3.ab2@11805>     MOVEQ.l #$00,D0
00028AFC <AmiBlitz3.ab2@11806>     MOVE.b -$1(A2,D7.W),D0
00028AFE <AmiBlitz3.ab2@11807>     SUB.l D7,D0
00028B00 <AmiBlitz3.ab2@11808>     SUBQ.l #1,D0
00028B02 <AmiBlitz3.ab2@11809>   CMP.w D0,D2
00028B06 <AmiBlitz3.ab2@11810>   BNE.b findlab__loop
00028B0A <AmiBlitz3.ab2@11812>   LEA $0(A2,D7.W),A1
00028B10 <AmiBlitz3.ab2@11813>   LEA ptr_parameterstore,A0
00028B12 <AmiBlitz3.ab2@11814>   SUBQ.l #1,D0
00028B14 <AmiBlitz3.ab2@11817>     MOVE.b (a1)+,d1
00028B16 <AmiBlitz3.ab2@11818>     CMP.b (a0)+,d1
00028B1A <AmiBlitz3.ab2@11820>     BNE.b findlab__loop
00028B1E <AmiBlitz3.ab2@11821>   DBF D0,findlab__loop2
00028B22 <AmiBlitz3.ab2@11823>   BSR.w reget
00028B24 <AmiBlitz3.ab2@11824>   CMP.w D0,D0
00028B26 <AmiBlitz3.ab2@11825> RTS
00028B2A <AmiBlitz3.ab2@11828>   BSR.w reget
00028B2C <AmiBlitz3.ab2@11829>   MOVEQ.l #-$01,D1
00028B2E <AmiBlitz3.ab2@11830> RTS
00028B34 <AmiBlitz3.ab2@11834>   MOVEA.l alllocals,A4
00028B3A <AmiBlitz3.ab2@11835>   CLR.l alllocals
00028B3E <AmiBlitz3.ab2@11839>     CMPA.w #$0,A4
00028B42 <AmiBlitz3.ab2@11840>      BEQ.b freeprocvs__done
00028B46 <AmiBlitz3.ab2@11841>     MOVEA.l $4(A4),A3
00028B4A <AmiBlitz3.ab2@11843>     MOVEA.l $8(A4),A3
00028B4C <AmiBlitz3.ab2@11845>     MOVEA.l A4,A1
00028B4E <AmiBlitz3.ab2@11846>     MOVEA.l (A4),A4
00028B50 <AmiBlitz3.ab2@11847>     MOVEQ.l #$0C,D0
00028B56 <AmiBlitz3.ab2@11848>     MOVEA.l _execbase,A6
00028B5C <AmiBlitz3.ab2@11849>     MOVE.l mempool,a0
00028B60 <AmiBlitz3.ab2@11850>     JSR _FreePooled(A6)
00028B64 <AmiBlitz3.ab2@11851> BRA.b freeprocvs__loop
00028B6A <AmiBlitz3.ab2@11854>   CLR.l firstglob                                          ;fix 2*aclearallvar called
00028B70 <AmiBlitz3.ab2@11855>   CLR.l firstlocal
00028B76 <AmiBlitz3.ab2@11856>   CLR.l sharebase
00028B7C <AmiBlitz3.ab2@11857>   TST.l mempool2
00028B80 <AmiBlitz3.ab2@11858>   BEQ freeprocvs__done_l10
00028B86 <AmiBlitz3.ab2@11860>   MOVEA.l _execbase,A6
00028B8C <AmiBlitz3.ab2@11861>   MOVE.l mempool2,a0
00028B92 <AmiBlitz3.ab2@11862>   CLR.l mempool2
00028B96 <AmiBlitz3.ab2@11863>   JSR _DeletePool(a6)
00028B9C <AmiBlitz3.ab2@11866>   MOVE.l _execbase,a6
00028BA2 <AmiBlitz3.ab2@11867>   MOVE.l #$10000,d0
00028BA8 <AmiBlitz3.ab2@11868>   MOVE.l #80000,d1
00028BAA <AmiBlitz3.ab2@11869>   MOVE.l d1,d2
00028BAE <AmiBlitz3.ab2@11870>   JSR _CreatePool(a6)
00028BB4 <AmiBlitz3.ab2@11871>   MOVE.l d0,mempool2
00028BB6 <AmiBlitz3.ab2@11872> RTS
00028BBA <AmiBlitz3.ab2@11876>   CMPA.w #$0,A3
00028BBE <AmiBlitz3.ab2@11877>    BEQ.w freevars__done
00028BC0 <AmiBlitz3.ab2@11878>   MOVEA.l A3,A1
00028BC2 <AmiBlitz3.ab2@11879>   MOVEA.l (A3),A3
00028BC4 <AmiBlitz3.ab2@11880>   MOVEQ.l #$00,D0
00028BC8 <AmiBlitz3.ab2@11881>   MOVE.b $E(A1),D0
00028BCE <AmiBlitz3.ab2@11882>   MOVEA.l _execbase,A6
00028BD4 <AmiBlitz3.ab2@11883>   MOVE.l mempool2,a0
00028BD8 <AmiBlitz3.ab2@11884>   JSR _FreePooled(A6)
00028BDC <AmiBlitz3.ab2@11885> BRA.w freevars
00028BE0 <AmiBlitz3.ab2@11888>     CMPA.w #$0,A3
00028BE4 <AmiBlitz3.ab2@11889>      BEQ.w freevars__done
00028BE6 <AmiBlitz3.ab2@11890>     MOVEA.l A3,A1
00028BE8 <AmiBlitz3.ab2@11891>     MOVEA.l (A3),A3
00028BEA <AmiBlitz3.ab2@11892>     MOVEQ.l #$00,D0
00028BEE <AmiBlitz3.ab2@11893>     MOVE.b $E+4(A1),D0
00028BF4 <AmiBlitz3.ab2@11894>     MOVEA.l _execbase,A6
00028BFA <AmiBlitz3.ab2@11895>     MOVE.l mempool2,a0
00028BFE <AmiBlitz3.ab2@11896>     JSR _FreePooled(A6)
00028C02 <AmiBlitz3.ab2@11897> BRA.w freevarsb
00028C04 <AmiBlitz3.ab2@11900> RTS
00028C0A <AmiBlitz3.ab2@11904>   MOVEA.l currentlabeladdr,A0
00028C10 <AmiBlitz3.ab2@11905>   MOVE.l a0,lastlabel
00028C12 <AmiBlitz3.ab2@11906>   MOVEA.l (A0),A2
00028C14 <AmiBlitz3.ab2@11907>   CLR.l (A0)
00028C1A <AmiBlitz3.ab2@11908>   MOVEA.l _execbase,A6
00028C1E <AmiBlitz3.ab2@11911>   CMPA.w #$0,A2
00028C22 <AmiBlitz3.ab2@11912>    BEQ.w clearlabels__done
00028C26 <AmiBlitz3.ab2@11913>   MOVE.l $4(A2),D0
00028C2A <AmiBlitz3.ab2@11914>   BTST #$0,D0
00028C2E <AmiBlitz3.ab2@11915>    BNE.w clearlabels__skip
00028C30 <AmiBlitz3.ab2@11916>   MOVEA.l D0,A3
00028C34 <AmiBlitz3.ab2@11919>     CMPA.w #$0,A3
00028C38 <AmiBlitz3.ab2@11920>      BEQ.w clearlabels__skip
00028C3A <AmiBlitz3.ab2@11921>     MOVEA.l A3,A1
00028C3C <AmiBlitz3.ab2@11922>     MOVEA.l (A3),A3
00028C3E <AmiBlitz3.ab2@11923>     MOVEQ.l #$0C+2,D0                                      ;cancel fix
00028C44 <AmiBlitz3.ab2@11924>     MOVE.l mempool,a0
00028C48 <AmiBlitz3.ab2@11925>     JSR _FreePooled(A6)
00028C4C <AmiBlitz3.ab2@11926> BRA.w clearlabels__loop2
00028C4E <AmiBlitz3.ab2@11929>   MOVEQ.l #$00,D0
00028C52 <AmiBlitz3.ab2@11930>   MOVE.b $12(A2),D0
00028C54 <AmiBlitz3.ab2@11931>   MOVEA.l A2,A1
00028C56 <AmiBlitz3.ab2@11932>   MOVEA.l (A2),A2
00028C5C <AmiBlitz3.ab2@11933>   MOVE.l mempool2,a0
00028C60 <AmiBlitz3.ab2@11935> BRA.w clearlabels__loop
00028C62 <AmiBlitz3.ab2@11938> RTS
00028C68 <AmiBlitz3.ab2@11942>   MOVEA.l firstpend,A3
00028C6E <AmiBlitz3.ab2@11943>   CLR.l firstpend
00028C74 <AmiBlitz3.ab2@11944>   MOVEA.l _execbase,A6
00028C78 <AmiBlitz3.ab2@11947>     CMPA.w #$0,A3
00028C7C <AmiBlitz3.ab2@11948>      BEQ.w freepends__done
00028C7E <AmiBlitz3.ab2@11949>     MOVEA.l A3,A1
00028C80 <AmiBlitz3.ab2@11950>     MOVEQ.l #$08,D0
00028C82 <AmiBlitz3.ab2@11951>     MOVEA.l (A3),A3
00028C88 <AmiBlitz3.ab2@11952>     MOVE.l mempool,a0
00028C8C <AmiBlitz3.ab2@11953>     JSR _FreePooled(A6)
00028C90 <AmiBlitz3.ab2@11954> BRA.w fpnd2
00028C92 <AmiBlitz3.ab2@11957> RTS
00028C98 <AmiBlitz3.ab2@11961>   MOVEA.l firstproc,A2
00028C9E <AmiBlitz3.ab2@11962>   CLR.l firstproc
00028CA4 <AmiBlitz3.ab2@11963>   MOVEA.l _execbase,A6
00028CA8 <AmiBlitz3.ab2@11966>     CMPA.w #$0,A2
00028CAC <AmiBlitz3.ab2@11967>      BEQ.w clearfunctionlist__done
00028CAE <AmiBlitz3.ab2@11968>     MOVEA.l A2,A1
00028CB0 <AmiBlitz3.ab2@11969>     MOVEA.l (A2),A2
00028CB2 <AmiBlitz3.ab2@11970>     MOVEQ.l #$00,D0
00028CB6 <AmiBlitz3.ab2@11971>     MOVE.b $20+#funcentry_extend(A1),D0
00028CBC <AmiBlitz3.ab2@11972>     MOVE.l mempool2,a0
00028CC0 <AmiBlitz3.ab2@11973>     JSR _FreePooled(A6)
00028CC4 <AmiBlitz3.ab2@11974> BRA.w clearfunctionlist__loop
00028CC6 <AmiBlitz3.ab2@11977> RTS
00028CCA <AmiBlitz3.ab2@11981>   CMPA.w #$0,A2
00028CCE <AmiBlitz3.ab2@11982>    BEQ.w freetypes__done
00028CD2 <AmiBlitz3.ab2@11983>   MOVEA.l $4(A2),A3
00028CD6 <AmiBlitz3.ab2@11984>   CMPA.w #$FF,A3
00028CDA <AmiBlitz3.ab2@11985>    BEQ.w freetypes__noway
00028CDE <AmiBlitz3.ab2@11989>    BSR.w freevars
00028CE0 <AmiBlitz3.ab2@11992>     MOVEA.l A2,A1
00028CE2 <AmiBlitz3.ab2@11993>     MOVEA.l (A2),A2
00028CE4 <AmiBlitz3.ab2@11994>     MOVEQ.l #$00,D0
00028CE8 <AmiBlitz3.ab2@11995>     MOVE.b $A(A1),D0
00028CEE <AmiBlitz3.ab2@11996>     MOVEA.l _execbase,A6
00028CF4 <AmiBlitz3.ab2@11997>     MOVE.l mempool2,a0
00028CF8 <AmiBlitz3.ab2@11998>     JSR _FreePooled(A6)
00028CFC <AmiBlitz3.ab2@11999> BRA.w freetypes
00028CFE <AmiBlitz3.ab2@12002> RTS
00028D04 <AmiBlitz3.ab2@12006>   JSR uselib2
00028D0A <AmiBlitz3.ab2@12008>   CLR.w notshared
00028D10 <AmiBlitz3.ab2@12009>   CLR.w varmode
00028D16 <AmiBlitz3.ab2@12010>   MOVE.w proceduremode,D1
00028D1A <AmiBlitz3.ab2@12011>    BNE.w JL_0_8F4E
00028D20 <AmiBlitz3.ab2@12012>   LEA varbase,A2
00028D26 <AmiBlitz3.ab2@12013>   LEA ptr_parameterstore,a0
00028D2A <AmiBlitz3.ab2@12014>   CMP.b #$22,(a0)
00028D2E <AmiBlitz3.ab2@12015>   BNE JL_0_8E5E
00028D30 <AmiBlitz3.ab2@12016>   MOVEQ #0,d0
00028D36 <AmiBlitz3.ab2@12017> JMP error
00028D3A <AmiBlitz3.ab2@12020>   BSR.w findvariable
00028D3E <AmiBlitz3.ab2@12023>   BNE.w JL_0_8E7E
00028D44 <AmiBlitz3.ab2@12026>   MOVE.b flagmask+1,D1
00028D48 <AmiBlitz3.ab2@12027>   MOVE.b $7(A2),D3
00028D4A <AmiBlitz3.ab2@12028>   EOR.b D3,D1
00028D4E <AmiBlitz3.ab2@12029>   BNE 'l2
00028D56 <AmiBlitz3.ab2@12030>   CMP.b #2,nowdeclare
00028D5A <AmiBlitz3.ab2@12031>   BEQ errormsg_declaredtwice
00028D5E <AmiBlitz3.ab2@12032> BRA.w JL_0_8FA8
00028D62 <AmiBlitz3.ab2@12035>   BSR.w findlab
00028D66 <AmiBlitz3.ab2@12036>   BNE 'l1
00028D6E <AmiBlitz3.ab2@12037>   CMP.b #2,nowdeclare
00028D72 <AmiBlitz3.ab2@12038>   BEQ errormsg_declaredtwice
00028D74 <AmiBlitz3.ab2@12039>   CMP.w d0,d0
00028D78 <AmiBlitz3.ab2@12042> BRA.w JL_0_8E62
00028D7A <AmiBlitz3.ab2@12045>    MOVE.l a2,-(a7)
00028D80 <AmiBlitz3.ab2@12046>    LEA sharebase,a2
00028D82 <AmiBlitz3.ab2@12047>    MOVEQ #$f+4,d7
00028D86 <AmiBlitz3.ab2@12048>    BSR.w findlab
00028D8A <AmiBlitz3.ab2@12049>    BEQ 'l2x
00028D8C <AmiBlitz3.ab2@12050>    MOVE.l (a7)+,a2
00028D90 <AmiBlitz3.ab2@12051> BRA 'cont
00028D92 <AmiBlitz3.ab2@12054>   ADDQ.l #4,a7
00028D98 <AmiBlitz3.ab2@12055>   CLR.w varmode
00028D9E <AmiBlitz3.ab2@12056>   MOVE.b flagmask+1,D1
00028DA2 <AmiBlitz3.ab2@12057>   MOVE.b $7(A2),D3
00028DA4 <AmiBlitz3.ab2@12058>   EOR.b D3,D1
00028DA8 <AmiBlitz3.ab2@12059>   BNE vardeclareerr
00028DAC <AmiBlitz3.ab2@12060> BRA JL_0_8FA8
00028DB2 <AmiBlitz3.ab2@12063>    MOVE.w nonew,D1
00028DB6 <AmiBlitz3.ab2@12064>    BNE.w nonewerr
00028DBC <AmiBlitz3.ab2@12065>    TST.b nowdeclare
00028DC0 <AmiBlitz3.ab2@12066>    BNE 'l2
00028DC6 <AmiBlitz3.ab2@12067>    TST.b declare2
00028DCA <AmiBlitz3.ab2@12068>    BEQ 'l1
00028DCE <AmiBlitz3.ab2@12069>    CMP.b #$2e,d0
00028DD2 <AmiBlitz3.ab2@12070>    BEQ 'l2
00028DD6 <AmiBlitz3.ab2@12071>    CMP.b #"$",d0
00028DDA <AmiBlitz3.ab2@12072>    BEQ 'l2
00028DDE <AmiBlitz3.ab2@12073> BRA vardeclareerr
00028DE4 <AmiBlitz3.ab2@12076>   TST.b declare
00028DE8 <AmiBlitz3.ab2@12077>    BNE vardeclareerr
00028DEC <AmiBlitz3.ab2@12080>   BSR.w addvariable
00028DF2 <AmiBlitz3.ab2@12081>   NOT.w notshared
00028DF4 <AmiBlitz3.ab2@12082>   MOVEA.l A2,A3
00028DFA <AmiBlitz3.ab2@12083>   MOVEA.l defaulttype,A2
00028DFE <AmiBlitz3.ab2@12084>   CMP.w #$2E,D0
00028E02 <AmiBlitz3.ab2@12085>    BEQ.w JL_0_8EB8
00028E06 <AmiBlitz3.ab2@12086>   CMP.w #$24,D0
00028E0A <AmiBlitz3.ab2@12087>    BNE.w JL_0_8ECA
00028E10 <AmiBlitz3.ab2@12088>   LEA newtype_string,A2
00028E14 <AmiBlitz3.ab2@12089>    BSR.w get1bytemain
00028E18 <AmiBlitz3.ab2@12090> BRA.w JL_0_8ECA
00028E1E <AmiBlitz3.ab2@12093> JMP JUMP_notypeerr
00028E22 <AmiBlitz3.ab2@12096>    BSR.w getparameter2
00028E28 <AmiBlitz3.ab2@12097>   LEA newtypebase,A2
00028E2C <AmiBlitz3.ab2@12098>    BSR.w findtype
00028E30 <AmiBlitz3.ab2@12099>    BNE.w notypeerr3
00028E36 <AmiBlitz3.ab2@12102>   CMPA.l #newtype_byte,A2
00028E3A <AmiBlitz3.ab2@12103>    BEQ.w JL_0_8EECb
00028E40 <AmiBlitz3.ab2@12104>   MOVE.w varmode,D1
00028E44 <AmiBlitz3.ab2@12105>    BNE.w JL_0_8EE4b
00028E4A <AmiBlitz3.ab2@12106>   ADDQ.w #1,globalvarpointer
00028E52 <AmiBlitz3.ab2@12109>   BCLR #$0,globalvarpointer+1
00028E56 <AmiBlitz3.ab2@12112>   MOVE.l A2,$A(A3)
00028E5E <AmiBlitz3.ab2@12113>   MOVE.w flagmask,$6(A3)                                  ;??????????
00028E60 <AmiBlitz3.ab2@12115>   MOVEQ.l #$04,D1
00028E68 <AmiBlitz3.ab2@12116>   BTST #$0,flagmask+1
00028E6C <AmiBlitz3.ab2@12117>    BNE.w JL_0_8F22b
00028E74 <AmiBlitz3.ab2@12118>   BTST #$1,flagmask+1
00028E78 <AmiBlitz3.ab2@12119>    BNE.w JL_0_8F22b
00028E80 <AmiBlitz3.ab2@12120>   CMPI.l #$100,$4(A2)
00028E84 <AmiBlitz3.ab2@12121>    BCC.w JL_0_8F22b
00028E88 <AmiBlitz3.ab2@12122>   MOVE.w $8(A2),D1
00028E8E <AmiBlitz3.ab2@12125>   TST.w varmode
00028E92 <AmiBlitz3.ab2@12126> BRA.w JL_0_8F3E
00028E96 <AmiBlitz3.ab2@12135>   BSR.w getparameter2
00028E9C <AmiBlitz3.ab2@12136>   LEA newtypebase,A2
00028EA0 <AmiBlitz3.ab2@12137>    BSR.w findtype
00028EA4 <AmiBlitz3.ab2@12138>    BNE.w notypeerr
00028EAA <AmiBlitz3.ab2@12141>   CMPA.l #newtype_byte,A2
00028EAE <AmiBlitz3.ab2@12142>    BEQ.w JL_0_8EEC
00028EB4 <AmiBlitz3.ab2@12143>   MOVE.w varmode,D1
00028EB8 <AmiBlitz3.ab2@12144>    BNE.w JL_0_8EE4
00028EBE <AmiBlitz3.ab2@12145>   ADDQ.w #1,globalvarpointer
00028EC6 <AmiBlitz3.ab2@12148>   BCLR #$0,globalvarpointer+1
00028ECA <AmiBlitz3.ab2@12151>   MOVE.l A2,$A(A3)
00028ED2 <AmiBlitz3.ab2@12152>   MOVE.w flagmask,$6(A3)                                  ;??????????
00028ED4 <AmiBlitz3.ab2@12153>   MOVEQ.l #$04,D1
00028EDC <AmiBlitz3.ab2@12154>   BTST #$0,flagmask+1
00028EE0 <AmiBlitz3.ab2@12155>    BNE.w JL_0_8F22
00028EE8 <AmiBlitz3.ab2@12156>   BTST #$1,flagmask+1
00028EEC <AmiBlitz3.ab2@12157>    BNE.w JL_0_8F22
00028EF4 <AmiBlitz3.ab2@12158>   CMPI.l #$100,$4(A2)
00028EF8 <AmiBlitz3.ab2@12159>    BCC.w JL_0_8F22
00028EFC <AmiBlitz3.ab2@12160>   MOVE.w $8(A2),D1
00028F02 <AmiBlitz3.ab2@12163>   TST.w varmode
00028F06 <AmiBlitz3.ab2@12164>    BEQ.w JL_0_8F3E
00028F08 <AmiBlitz3.ab2@12165>   NEG.w D1
00028F0E <AmiBlitz3.ab2@12166>   ADD.w D1,globalvarpointer
00028F16 <AmiBlitz3.ab2@12167>   MOVE.w globalvarpointer,$4(A3)
00028F18 <AmiBlitz3.ab2@12168> RTS
00028F20 <AmiBlitz3.ab2@12171>   MOVE.w globalvarpointer,$4(A3)
00028F26 <AmiBlitz3.ab2@12172>   ADD.w D1,globalvarpointer
00028F28 <AmiBlitz3.ab2@12173> RTS
00028F2E <AmiBlitz3.ab2@12177>   LEA firstglob,A2
00028F32 <AmiBlitz3.ab2@12178>    BSR.w findvariable2
00028F36 <AmiBlitz3.ab2@12181>   BNE.w JL_0_8F74
00028F3C <AmiBlitz3.ab2@12182>   MOVE.b flagmask+1,D1
00028F40 <AmiBlitz3.ab2@12183>   MOVE.b $7(A2),D3
00028F42 <AmiBlitz3.ab2@12184>   EOR.b D3,D1
00028F46 <AmiBlitz3.ab2@12185>    BEQ.w JL_0_8FA8
00028F4A <AmiBlitz3.ab2@12186>    BSR.w findlab
00028F4E <AmiBlitz3.ab2@12187> BRA.w JL_0_8F58
00028F56 <AmiBlitz3.ab2@12190>   MOVE.w #$FFFF,varmode
00028F5C <AmiBlitz3.ab2@12191>   MOVE.w globalvarpointer,-(A7)
00028F66 <AmiBlitz3.ab2@12192>   MOVE.w locvaroff,globalvarpointer
00028F6C <AmiBlitz3.ab2@12193>   LEA firstlocal,A2
00028F74 <AmiBlitz3.ab2@12194>   MOVE.b #1,newvariable
00028F78 <AmiBlitz3.ab2@12195>    BSR.w JL_0_8E5E
00028F7E <AmiBlitz3.ab2@12196>   CLR.b newvariable
00028F88 <AmiBlitz3.ab2@12197>   MOVE.w globalvarpointer,locvaroff
00028F8E <AmiBlitz3.ab2@12198>   MOVE.w (A7)+,globalvarpointer
00028F90 <AmiBlitz3.ab2@12199> RTS
00028F92 <AmiBlitz3.ab2@12202>   MOVEA.l A2,A3
00028F96 <AmiBlitz3.ab2@12203>   CMP.w #$2E,D0
00028F9A <AmiBlitz3.ab2@12204>    BEQ.w JL_0_8FCE
00028F9E <AmiBlitz3.ab2@12205>   CMP.w #$24,D0
00028FA2 <AmiBlitz3.ab2@12206>    BNE.w JL_0_8FE8
00028FAA <AmiBlitz3.ab2@12207>   CMPI.l #newtype_string,$A(A3)
00028FAE <AmiBlitz3.ab2@12208>    BNE.w rongtypeerr
00028FB2 <AmiBlitz3.ab2@12209>    BSR.w get1bytemain
00028FB6 <AmiBlitz3.ab2@12210> BRA.w JL_0_8FE8
00028FBA <AmiBlitz3.ab2@12213>    BSR.w getparameter2
00028FC0 <AmiBlitz3.ab2@12214>   LEA newtypebase,A2
00028FC4 <AmiBlitz3.ab2@12215>    BSR.w findtype
00028FC8 <AmiBlitz3.ab2@12216>    BNE.w notypeerr
00028FCC <AmiBlitz3.ab2@12217>   CMPA.l $A(A3),A2
00028FD0 <AmiBlitz3.ab2@12218>    BNE.w rongtypeerr
00028FD8 <AmiBlitz3.ab2@12220>   BTST #$0,flagmask+1
00028FDC <AmiBlitz3.ab2@12221>    BEQ.w JL_0_8FFE
00028FE2 <AmiBlitz3.ab2@12222>   BTST #$0,$7(A3)
00028FE6 <AmiBlitz3.ab2@12223>    BEQ.w pointerr
00028FEA <AmiBlitz3.ab2@12226>   MOVEA.l $A(A3),A2
00028FEC <AmiBlitz3.ab2@12227> RTS
00028FEE <AmiBlitz3.ab2@12231>    TST.l D3                                                ;newtype >32kb  .w to .l
00028FF2 <AmiBlitz3.ab2@12232>    BEQ.w JL_0_9042
00028FFC <AmiBlitz3.ab2@12233>    MOVE.l destpointer,loada
00029000 <AmiBlitz3.ab2@12236> BRA JL_0_9032
00029004 <AmiBlitz3.ab2@12238>   CMP.w #$9,D3                                             ;_addq_arrays
00029008 <AmiBlitz3.ab2@12239>    BCC.w JL_0_9032
0002900E <AmiBlitz3.ab2@12240>   MOVE.w d3,arrayoffset
00029012 <AmiBlitz3.ab2@12241>   ANDI.w #$7,D3
00029014 <AmiBlitz3.ab2@12242>   LSL.w #8,D3
00029016 <AmiBlitz3.ab2@12243>   LSL.w #1,D3
0002901E <AmiBlitz3.ab2@12244>   ANDI.w #$F1FF,addqa0
00029024 <AmiBlitz3.ab2@12245>   OR.w D3,addqa0
0002902A <AmiBlitz3.ab2@12246>   MOVE.w addqa0,D1
0002902E <AmiBlitz3.ab2@12247> BRA.w writeword
00029034 <AmiBlitz3.ab2@12250>   CMP.l #$7fff,d3                                          ;>32kb newtypes
00029038 <AmiBlitz3.ab2@12251>   BGT longoffset
0002903E <AmiBlitz3.ab2@12252>   MOVE.w D3,leaa0a0+2
00029044 <AmiBlitz3.ab2@12253>   MOVE.w d3,arrayoffset
0002904A <AmiBlitz3.ab2@12254>   MOVE.l leaa0a0,D1
0002904E <AmiBlitz3.ab2@12255>   BSR.w writelong
00029050 <AmiBlitz3.ab2@12258> RTS
00029054 <AmiBlitz3.ab2@12261>    MOVE.w #$d5fc,d1
00029058 <AmiBlitz3.ab2@12262>    BSR writeword
0002905A <AmiBlitz3.ab2@12263>    MOVE.l d3,d1
0002905E <AmiBlitz3.ab2@12264>    BSR.w writelong
00029060 <AmiBlitz3.ab2@12265> RTS
00029064 <AmiBlitz3.ab2@12269>   Dc.w $b0ad,0000                                          ;cmp.l $0(A5),D0    ;nooptimize
00029068 <AmiBlitz3.ab2@12272>    BCS.w arrchk3                                           
0002906E <AmiBlitz3.ab2@12273>    JSR $20000                                              ;jsr 0
00029074 <AmiBlitz3.ab2@12279>   TST.b fast
00029078 <AmiBlitz3.ab2@12280>   BEQ 'l1
0002907A <AmiBlitz3.ab2@12281>    MOVEQ #0,d1                                             ;faster arrays
00029080 <AmiBlitz3.ab2@12282>    MOVE.w regnum,d2
00029082 <AmiBlitz3.ab2@12283>    MOVE.w d2,d1
00029084 <AmiBlitz3.ab2@12284>    LSL.w #8,d1
00029086 <AmiBlitz3.ab2@12285>    LSL.w #4,d1
00029088 <AmiBlitz3.ab2@12286>    ADD.w d2,d1
0002908E <AmiBlitz3.ab2@12287>    OR.l #$4c2d0000,d1
00029094 <AmiBlitz3.ab2@12288>    TST.w varmode
00029098 <AmiBlitz3.ab2@12289>    BEQ 'l1a
0002909C <AmiBlitz3.ab2@12290>    BCLR #16,d1
000290A0 <AmiBlitz3.ab2@12293>    BSR writelong
000290A4 <AmiBlitz3.ab2@12294>    MOVE.w $4(A7),D1
000290A8 <AmiBlitz3.ab2@12295>    BSR.w writeword
000290AE <AmiBlitz3.ab2@12296>    MOVE.w regnum,D1
000290B0 <AmiBlitz3.ab2@12297>   SUBQ.w #1,D1
000290B2 <AmiBlitz3.ab2@12298>   LSL.w #8,D1
000290B4 <AmiBlitz3.ab2@12299>   LSL.w #1,D1
000290B8 <AmiBlitz3.ab2@12300>   ORI.w #$D080,D1
000290BE <AmiBlitz3.ab2@12301>   OR.w regnum,D1
000290C2 <AmiBlitz3.ab2@12302>    BSR.w writeword
000290C4 <AmiBlitz3.ab2@12303> RTS
000290CA <AmiBlitz3.ab2@12306>   MOVE.w regnum,D2
000290CE <AmiBlitz3.ab2@12307>   MOVE.w arrmul1(PC),D1
000290D0 <AmiBlitz3.ab2@12308>   OR.w D2,D1
000290D2 <AmiBlitz3.ab2@12309>   SUBQ.w #1,D1
000290D6 <AmiBlitz3.ab2@12310>    BSR.w writeword
000290DA <AmiBlitz3.ab2@12311>   MOVE.w arrmul2(PC),D1
000290DC <AmiBlitz3.ab2@12312>   OR.w D2,D1
000290DE <AmiBlitz3.ab2@12313>   MOVE.w D2,D3
000290E0 <AmiBlitz3.ab2@12314>   SUBQ.w #1,D3
000290E2 <AmiBlitz3.ab2@12315>   LSL.w #8,D3
000290E4 <AmiBlitz3.ab2@12316>   LSL.w #1,D3
000290E6 <AmiBlitz3.ab2@12317>   OR.w D3,D1
000290EA <AmiBlitz3.ab2@12318>    BSR.w writeword
000290EE <AmiBlitz3.ab2@12319>   MOVE.w arrmul3(PC),D1
000290F0 <AmiBlitz3.ab2@12320>   MOVE.w D2,D3
000290F2 <AmiBlitz3.ab2@12321>   LSL.w #8,D3
000290F4 <AmiBlitz3.ab2@12322>   LSL.w #1,D3
000290F6 <AmiBlitz3.ab2@12323>   OR.w D3,D1
000290FA <AmiBlitz3.ab2@12324>    BSR.w pokewda5s
000290FE <AmiBlitz3.ab2@12325>   MOVE.w $4(A7),D1
00029100 <AmiBlitz3.ab2@12326>   ADDQ.w #2,D1
00029104 <AmiBlitz3.ab2@12327>    BSR.w writeword
00029108 <AmiBlitz3.ab2@12328>   MOVE.w arrmul4(PC),D1
0002910A <AmiBlitz3.ab2@12329>   MOVE.w D2,D3
0002910C <AmiBlitz3.ab2@12330>   SUBQ.w #1,D3
0002910E <AmiBlitz3.ab2@12331>   LSL.w #8,D3
00029110 <AmiBlitz3.ab2@12332>   LSL.w #1,D3
00029112 <AmiBlitz3.ab2@12333>   OR.w D3,D1
00029116 <AmiBlitz3.ab2@12334>    BSR.w pokewda5s
0002911A <AmiBlitz3.ab2@12335>   MOVE.w $4(A7),D1
0002911E <AmiBlitz3.ab2@12336>    BSR.w writeword
00029122 <AmiBlitz3.ab2@12337>   MOVE.w arrmul5(PC),D1
00029124 <AmiBlitz3.ab2@12338>   OR.w D2,D1
00029126 <AmiBlitz3.ab2@12339>   SUBQ.w #1,D1
0002912A <AmiBlitz3.ab2@12340>    BSR.w writeword
0002912E <AmiBlitz3.ab2@12341>   MOVE.w arrmul6(PC),D1
00029130 <AmiBlitz3.ab2@12342>   OR.w D2,D1
00029132 <AmiBlitz3.ab2@12343>   SUBQ.w #1,D1
00029136 <AmiBlitz3.ab2@12344>    BSR.w writeword
0002913A <AmiBlitz3.ab2@12345>   MOVE.w arrmul7(PC),D1
0002913C <AmiBlitz3.ab2@12346>   OR.w D2,D1
0002913E <AmiBlitz3.ab2@12347>   SUBQ.w #1,D1
00029140 <AmiBlitz3.ab2@12348>   MOVE.w D2,D3
00029142 <AmiBlitz3.ab2@12349>   LSL.w #8,D3
00029144 <AmiBlitz3.ab2@12350>   LSL.w #1,D3
00029146 <AmiBlitz3.ab2@12351>   OR.w D3,D1
0002914A <AmiBlitz3.ab2@12352>    BSR.w writeword
0002914E <AmiBlitz3.ab2@12353>   MOVE.w arrmul8(PC),D1
00029150 <AmiBlitz3.ab2@12354>   MOVE.w D2,D3
00029152 <AmiBlitz3.ab2@12355>   SUBQ.w #1,D3
00029154 <AmiBlitz3.ab2@12356>   LSL.w #8,D3
00029156 <AmiBlitz3.ab2@12357>   LSL.w #1,D3
00029158 <AmiBlitz3.ab2@12358>   OR.w D3,D1
0002915C <AmiBlitz3.ab2@12359>    BSR.w writeword
00029162 <AmiBlitz3.ab2@12360>   MOVE.w regnum,D1
00029164 <AmiBlitz3.ab2@12361>   SUBQ.w #1,D1
00029166 <AmiBlitz3.ab2@12362>   LSL.w #8,D1
00029168 <AmiBlitz3.ab2@12363>   LSL.w #1,D1
0002916C <AmiBlitz3.ab2@12364>   ORI.w #$D080,D1
00029172 <AmiBlitz3.ab2@12365>   OR.w regnum,D1
00029176 <AmiBlitz3.ab2@12366> BRA.w writeword
00029178 <AmiBlitz3.ab2@12374> arrmul1:   MOVE.l d0,-(a7)                                ;write array access
0002917A <AmiBlitz3.ab2@12375> arrmul2:   MOVE  d0,d0
0002917E <AmiBlitz3.ab2@12376> arrmul3:   MULU 0(a5),d0                                  ;mulu   x+2(a5),d1  ;lo*lo
00029182 <AmiBlitz3.ab2@12377> arrmul4:   MULU 0(a5),d0                                  ;mulu   x(a5),d0    ;hi*lo
00029184 <AmiBlitz3.ab2@12379> arrmul5:   SWAP d0
00029186 <AmiBlitz3.ab2@12380> arrmul6:   CLR d0
00029188 <AmiBlitz3.ab2@12381> arrmul7:   ADD.l d0,d0
0002918A <AmiBlitz3.ab2@12382> arrmul8:   MOVE.l (a7)+,d0
0002918E <AmiBlitz3.ab2@12387> listcode1:  Dc.b $24,$6D :              Dc.b $00,$00       ;MOVEA.L $0000(A5),A2      ;pointer to start of array data
00029192 <AmiBlitz3.ab2@12388> listcode2:  Dc.b $24,$6A,$FF,$E0                           ;MOVEA.L -$0020(A2),A2     ;pointer to current
00029194 <AmiBlitz3.ab2@12389> listarfix:  Dc.b $50,$4A                                   ;ADDQ.W  #8,A2
0002919A <AmiBlitz3.ab2@12407>   CLR.l lastoffset_org
000291A0 <AmiBlitz3.ab2@12408>   BTST #$1,$7(A3)
000291A4 <AmiBlitz3.ab2@12409>    BEQ.w calcvar__notarr
000291AA <AmiBlitz3.ab2@12410>   MOVE.w notshared,D1
000291AE <AmiBlitz3.ab2@12411>    BNE.w noarrerr
000291B2 <AmiBlitz3.ab2@12412>    BSR.w get1bytemain
000291B6 <AmiBlitz3.ab2@12413>   CMP.w #$29,D0
000291BA <AmiBlitz3.ab2@12414>    BNE.w calcvar__notalist
000291C0 <AmiBlitz3.ab2@12415>   BTST #$0,$6(A3)
000291C4 <AmiBlitz3.ab2@12416>    BEQ.w nolisterr
000291CC <AmiBlitz3.ab2@12417>   MOVE.w $4(A3),listcode1+2
000291D0 <AmiBlitz3.ab2@12418>   MOVE.l listcode1(PC),D1
000291D4 <AmiBlitz3.ab2@12419>    BSR.w pokela5s
000291D8 <AmiBlitz3.ab2@12420>   MOVE.l listcode2(PC),D1
000291DC <AmiBlitz3.ab2@12421>    BSR.w writelong
000291E2 <AmiBlitz3.ab2@12422>   TST.b debugmode
000291E6 <AmiBlitz3.ab2@12423>    BEQ.w calcvar__nolrerr
000291E8 <AmiBlitz3.ab2@12427>   MOVE.l A2,-(A7)
000291EC <AmiBlitz3.ab2@12428>   MOVE.w #$C315,D1
000291F0 <AmiBlitz3.ab2@12429>    BSR.w Atokejsr
000291F2 <AmiBlitz3.ab2@12430>   MOVEA.l (A7)+,A2
000291F6 <AmiBlitz3.ab2@12433>    MOVE.w listarfix(PC),D1                                 ;addq #8,a2
000291FA <AmiBlitz3.ab2@12435>    BSR.w writeword
000291FE <AmiBlitz3.ab2@12436> BRA.w calcvar__normalar
00029200 <AmiBlitz3.ab2@12439> calcvar__listoff:   Ds.w 1
00029206 <AmiBlitz3.ab2@12443>   CLR.w calcvar__listoff
0002920C <AmiBlitz3.ab2@12444>   BTST #$0,$6(A3)
00029210 <AmiBlitz3.ab2@12445>    BEQ.w calcvar__knop
00029218 <AmiBlitz3.ab2@12446>   MOVE.w #$0008,calcvar__listoff                            ;adjust size of one element if list.
0002921C <AmiBlitz3.ab2@12449>   MOVEM.l A2-A3,-(A7)
00029222 <AmiBlitz3.ab2@12450>   MOVE.w varmode,-(A7)
00029226 <AmiBlitz3.ab2@12451>   MOVE.w $8(A3),-(A7)                                       ;number of dims
0002922A <AmiBlitz3.ab2@12452>   MOVE.w $4(A3),-(A7)                                       ;varoff
0002922C <AmiBlitz3.ab2@12453>   MOVE.l A2,-(A7)
00029232 <AmiBlitz3.ab2@12454>   MOVE.w flagmask,-(A7)
0002923C <AmiBlitz3.ab2@12456>   MOVE.w oldqflag,instringon
00029242 <AmiBlitz3.ab2@12457>   MOVEA.l lastsourcepos,A5
00029246 <AmiBlitz3.ab2@12458>    BSR.w arreval
0002924C <AmiBlitz3.ab2@12459>   MOVE.w (A7)+,flagmask
00029254 <AmiBlitz3.ab2@12460>   MOVE.w $8(A7),varmode
0002925A <AmiBlitz3.ab2@12461>   TST.b debugmode
0002925E <AmiBlitz3.ab2@12462>    BEQ.w calcvar__noszchk
00029260 <AmiBlitz3.ab2@12466>   MOVEA.l (A7)+,A2
00029262 <AmiBlitz3.ab2@12467>   MOVEQ.l #$04,D1
0002926A <AmiBlitz3.ab2@12468>   BTST #$0,flagmask+1                                      ;pointer?
0002926E <AmiBlitz3.ab2@12469>    BNE.b calcvar__domul                                          ;yes, then use 4 byte mul...
00029272 <AmiBlitz3.ab2@12470>   MOVE.w $8(A2),D1
00029276 <AmiBlitz3.ab2@12473>   ADD.w calcvar__listoff(PC),D1
0002927A <AmiBlitz3.ab2@12474>   BSR.w JL_0_B6DE
00029280 <AmiBlitz3.ab2@12475>   ADDQ.w #1,regnum
00029282 <AmiBlitz3.ab2@12478>   ADDQ.w #4,(A7)
00029286 <AmiBlitz3.ab2@12479>   TST.w $4(A7)
0002928A <AmiBlitz3.ab2@12480>    BEQ.w calcvar__isglob
0002928C <AmiBlitz3.ab2@12481>   SUBQ.w #8,(A7)                                           ;range check local array
00029292 <AmiBlitz3.ab2@12484>   TST.b debugmode
00029296 <AmiBlitz3.ab2@12485>    BEQ.w calcvar__noer1
0002929C <AmiBlitz3.ab2@12486>   MOVE.w regnum,D1
0002929E <AmiBlitz3.ab2@12487>   SUBQ.w #1,D1
000292A0 <AmiBlitz3.ab2@12488>   LSL.w #8,D1
000292A2 <AmiBlitz3.ab2@12489>   LSL.w #1,D1
000292A6 <AmiBlitz3.ab2@12490>   OR.w zarrchk(PC),D1
000292AA <AmiBlitz3.ab2@12491>    BSR.w pokewda5s                                         ;cmp.l x(a5),D regat
000292AC <AmiBlitz3.ab2@12492>   MOVE.w (A7),D1
000292B0 <AmiBlitz3.ab2@12493>    BSR.w writeword
000292B4 <AmiBlitz3.ab2@12494>   MOVE.l arrchk2(PC),D1
000292B8 <AmiBlitz3.ab2@12495>    BSR.w writelong
000292BC <AmiBlitz3.ab2@12496>   MOVE.w #$C309,D1
000292C0 <AmiBlitz3.ab2@12497>    BSR.w Atokejsr
000292C4 <AmiBlitz3.ab2@12500>   SUBQ.w #1,$2(A7)
000292C8 <AmiBlitz3.ab2@12501>    BEQ.w calcvar__ardone
000292CC <AmiBlitz3.ab2@12502>   CMP.w #$2C,D0
000292D0 <AmiBlitz3.ab2@12503>    BNE.w syntaxerr
000292D6 <AmiBlitz3.ab2@12504>    TST.b fast
000292DA <AmiBlitz3.ab2@12505>    BNE 'l1
000292DE <AmiBlitz3.ab2@12506>    BSR.w arrevalchk
000292E2 <AmiBlitz3.ab2@12507> BRA 'l2
000292E6 <AmiBlitz3.ab2@12510>   BSR arreval
000292EE <AmiBlitz3.ab2@12513>   MOVE.w $4(A7),varmode
000292F2 <AmiBlitz3.ab2@12514>   BSR.w JL_0_9052
000292F6 <AmiBlitz3.ab2@12515> BRA.w calcvar__arloop
000292FA <AmiBlitz3.ab2@12519>   CMP.w #$29,D0
000292FE <AmiBlitz3.ab2@12520>    BNE.w syntaxerr
00029304 <AmiBlitz3.ab2@12521>   SUBQ.w #1,regnum
00029306 <AmiBlitz3.ab2@12522>   ADDQ.w #6,A7
0002930A <AmiBlitz3.ab2@12523>   MOVEM.l (A7)+,A2-A3
00029312 <AmiBlitz3.ab2@12524>   MOVE.w $4(A3),movea5a0+2
00029318 <AmiBlitz3.ab2@12525>   MOVE.l movea5a0,D1
0002931C <AmiBlitz3.ab2@12526>    BSR.w pokela5s
00029322 <AmiBlitz3.ab2@12527>   MOVE.w regnum,D1
00029326 <AmiBlitz3.ab2@12528>   ORI.w #$D5C0,D1                                          ;add.l Dr,a2
0002932A <AmiBlitz3.ab2@12529>    BSR.w writeword
00029330 <AmiBlitz3.ab2@12530>   BTST #$0,$6(A3)
00029334 <AmiBlitz3.ab2@12531>    BEQ.w calcvar__normalar
00029338 <AmiBlitz3.ab2@12535>   MOVE.w listarfix(PC),D1
0002933C <AmiBlitz3.ab2@12536>    BSR.w writeword
00029340 <AmiBlitz3.ab2@12539>   BSR.w get1bytemain
00029346 <AmiBlitz3.ab2@12543>   BTST #$0,$7(A3)
0002934A <AmiBlitz3.ab2@12544>    BEQ.w calcvar__noppnt
0002934E <AmiBlitz3.ab2@12545>   CMP.w #$5C,D0
00029352 <AmiBlitz3.ab2@12546>    BNE.w calcvar__pmskip
00029356 <AmiBlitz3.ab2@12547>   MOVE.w calcvar__pfix(PC),D1
0002935A <AmiBlitz3.ab2@12548>    BSR.w writeword
0002935E <AmiBlitz3.ab2@12551>   MOVE.w #$8000,D2
00029362 <AmiBlitz3.ab2@12552> BRA.w calcvar__loopml
00029366 <AmiBlitz3.ab2@12555>   MOVE.w #$C000,D2
0002936A <AmiBlitz3.ab2@12556> BRA.w calcvar__loopml
0002936C <AmiBlitz3.ab2@12560> calcvar__pfix:   Dc.b $24,$52                                   ;MOVEA.L (A2),A2
00029370 <AmiBlitz3.ab2@12565>   CMP.w #$28,D0
00029374 <AmiBlitz3.ab2@12566>    BEQ.w noarrerr
0002937C <AmiBlitz3.ab2@12567>   CMPI.l #$100,$4(A2)
00029380 <AmiBlitz3.ab2@12568>    BCS.w calcvar__simpvar
00029386 <AmiBlitz3.ab2@12569>   BTST #$0,$7(A3)
0002938A <AmiBlitz3.ab2@12570>    BEQ.w calcvar__notap
0002938E <AmiBlitz3.ab2@12574>   CMP.w #$5C,D0
00029392 <AmiBlitz3.ab2@12575>    BEQ.w calcvar__notap
00029394 <AmiBlitz3.ab2@12576>   MOVEQ.l #$00,D2
00029398 <AmiBlitz3.ab2@12577> BRA.w calcvar__simpvar2
0002939C <AmiBlitz3.ab2@12580>   MOVE.w #$8000,D2
000293A4 <AmiBlitz3.ab2@12581>   MOVE.w $4(A3),movea5a0+2
000293AA <AmiBlitz3.ab2@12582>   MOVE.l movea5a0,D1
000293AE <AmiBlitz3.ab2@12583>    BSR.w pokela5s                                         ;move.l x(a5),a2
000293B4 <AmiBlitz3.ab2@12585>    TST.b debugmode
000293B8 <AmiBlitz3.ab2@12586>    BEQ.w 'skip
000293BC <AmiBlitz3.ab2@12587>    MOVE.w #$c320,D1
000293C2 <AmiBlitz3.ab2@12588>    JSR Atokejsr
000293C4 <AmiBlitz3.ab2@12592>   MOVEQ.l #$00,D3
000293C8 <AmiBlitz3.ab2@12595>   CMP.w #$5C,D0
000293CC <AmiBlitz3.ab2@12596>    BNE.w calcvar__done
000293D4 <AmiBlitz3.ab2@12597>   CMPI.l #$100,$4(A2)
000293D8 <AmiBlitz3.ab2@12598>    BCS.w rongtypeerr
000293DA <AmiBlitz3.ab2@12599>   MOVE.w D2,-(A7)
000293DE <AmiBlitz3.ab2@12600>    BSR.w getparameter2
000293E2 <AmiBlitz3.ab2@12601>    BEQ.w syntaxerr
000293E4 <AmiBlitz3.ab2@12602>   ADDQ.w #4,A2
000293E8 <AmiBlitz3.ab2@12603>    BSR.w findvariable2
000293EC <AmiBlitz3.ab2@12604>    BNE.w noofferr
000293EE <AmiBlitz3.ab2@12605>   MOVE.w (A7)+,D2
000293F0 <AmiBlitz3.ab2@12606>   MOVEA.l A2,A3                                             ;pointer to offset
000293F4 <AmiBlitz3.ab2@12607>   MOVEA.l $A(A3),A2                                         ;pointer to type
000293F6 <AmiBlitz3.ab2@12608>   MOVEQ #0,d1
000293FA <AmiBlitz3.ab2@12609>   MOVE.w 4(a3),d1
000293FC <AmiBlitz3.ab2@12610>   ADD.l d1,d3
00029402 <AmiBlitz3.ab2@12612>   MOVE.l A3,lastoffset_org
00029406 <AmiBlitz3.ab2@12613>   CMP.w #$5B,D0
0002940A <AmiBlitz3.ab2@12614>    BNE.w calcvar__realdone
00029410 <AmiBlitz3.ab2@12615>   BTST #$1,$7(A3)                                           ;a array [] in newtype is found
00029414 <AmiBlitz3.ab2@12616>    BEQ.w rongtypeerr
00029418 <AmiBlitz3.ab2@12617>    BSR.w JL_0_9004
0002941C <AmiBlitz3.ab2@12618>   MOVEM.l A2-A3,-(A7)
00029422 <AmiBlitz3.ab2@12619>   MOVE.w varmode,-(A7)
00029428 <AmiBlitz3.ab2@12620>   MOVE.l lastoffset_org,-(A7)
0002942E <AmiBlitz3.ab2@12621>   MOVE.w pusha2,D1
00029432 <AmiBlitz3.ab2@12622>    BSR.w writeword
00029434 <AmiBlitz3.ab2@12623>   MOVEQ.l #$03,D2                                          ;was 2 >32kb types
0002943E <AmiBlitz3.ab2@12624>   MOVE.l destpointer,deststore
00029444 <AmiBlitz3.ab2@12625>    MOVE.l rightsidetype,-(a7)
0002944A <AmiBlitz3.ab2@12626>    MOVE.l leftsidetype,-(a7)
00029450 <AmiBlitz3.ab2@12627>    CLR.l rightsidetype
00029456 <AmiBlitz3.ab2@12628>    CLR.l leftsidetype
0002945A <AmiBlitz3.ab2@12629>    BSR.w eval
00029460 <AmiBlitz3.ab2@12630>    MOVE.l (a7)+,rightsidetype
00029466 <AmiBlitz3.ab2@12631>    MOVE.l (a7)+,leftsidetype
0002946A <AmiBlitz3.ab2@12632>   CMP.w #$5D,D0
0002946E <AmiBlitz3.ab2@12633>    BNE.w syntaxerr
00029474 <AmiBlitz3.ab2@12634>   TST.b fast                                               ;a2,-(a7) array
00029478 <AmiBlitz3.ab2@12635>   BEQ calcvar__loop0_l10
0002947E <AmiBlitz3.ab2@12639>   MOVE.l destpointer,d1
00029484 <AmiBlitz3.ab2@12640>   SUB.l deststore,d1
0002948A <AmiBlitz3.ab2@12641>   CMP.l #4,d1
0002948E <AmiBlitz3.ab2@12642>   BNE calcvar__loop0_l10
00029494 <AmiBlitz3.ab2@12643>   MOVE.l destpointer,a4
0002949A <AmiBlitz3.ab2@12644>   MOVE.l -4(a4),-6(a4)
000294A0 <AmiBlitz3.ab2@12645>   SUBQ.l #2,destpointer
000294A6 <AmiBlitz3.ab2@12646>   CLR.l imm_addr
000294AC <AmiBlitz3.ab2@12647>   CLR.l load_var_addr
000294B0 <AmiBlitz3.ab2@12648> BRA calcvar__loop0_l20
000294B6 <AmiBlitz3.ab2@12651>   MOVE.w pulla2,D1
000294BA <AmiBlitz3.ab2@12652>    BSR.w writeword
000294C0 <AmiBlitz3.ab2@12655>   MOVE.l (A7)+,lastoffset_org
000294C6 <AmiBlitz3.ab2@12656>   MOVE.w (A7)+,varmode
000294CA <AmiBlitz3.ab2@12657>   MOVEM.l (A7)+,A2-A3
000294D0 <AmiBlitz3.ab2@12663>   TST.w debugmode
000294D4 <AmiBlitz3.ab2@12664>    BEQ.b calcvar__nobchk
000294D8 <AmiBlitz3.ab2@12665>   MOVE.w $8(A3),D1
000294DC <AmiBlitz3.ab2@12666>    BEQ.b calcvar__nobchk                                   ;no [0] checks!
000294E2 <AmiBlitz3.ab2@12670>   MOVE.w D1,brchkcode+2
000294E8 <AmiBlitz3.ab2@12671>   MOVE.w regnum,D1
000294EA <AmiBlitz3.ab2@12672>   LSL.w #8,D1
000294EC <AmiBlitz3.ab2@12673>   LSL.w #1,D1
000294F0 <AmiBlitz3.ab2@12674>   OR.w brchkcode0(PC),D1
000294F6 <AmiBlitz3.ab2@12675>   MOVE.w D1,brchkcode
000294FA <AmiBlitz3.ab2@12676>   MOVE.l brchkcode(PC),D1
000294FE <AmiBlitz3.ab2@12677>    BSR.w writelong
00029502 <AmiBlitz3.ab2@12678>   MOVE.l brchkcode+4(PC),D1
00029506 <AmiBlitz3.ab2@12679>    BSR.w writelong
0002950A <AmiBlitz3.ab2@12680>   MOVE.w brchkcode+8(PC),D1
0002950E <AmiBlitz3.ab2@12681>    BSR.w writeword
00029510 <AmiBlitz3.ab2@12684>   MOVEQ.l #$04,D1
00029516 <AmiBlitz3.ab2@12685>   BTST #$0,$7(A3)
0002951A <AmiBlitz3.ab2@12686>    BNE.w calcvar__dothemul
0002951E <AmiBlitz3.ab2@12687>   MOVE.w $8(A2),D1
00029522 <AmiBlitz3.ab2@12690>   BSR.w JL_0_B6DE
00029528 <AmiBlitz3.ab2@12691>   MOVE.w addrega2,D1
0002952E <AmiBlitz3.ab2@12692>   OR.w regnum,D1
00029532 <AmiBlitz3.ab2@12693>    OR.w #$100,d1                                           ;>32kb types
00029536 <AmiBlitz3.ab2@12694>    BSR.w writeword
0002953A <AmiBlitz3.ab2@12695>    BSR.w get1bytemain
0002953C <AmiBlitz3.ab2@12696>   MOVEQ.l #$00,D3
00029540 <AmiBlitz3.ab2@12697>   MOVE.w #$8000,D2
00029546 <AmiBlitz3.ab2@12700>   BTST #$0,$7(A3)
0002954A <AmiBlitz3.ab2@12701>    BNE.w calcvar__pointer
0002954E <AmiBlitz3.ab2@12702> BRA.w calcvar__loop0
00029552 <AmiBlitz3.ab2@12706>  CMP.w #$5C,D0
00029556 <AmiBlitz3.ab2@12707>    BNE.w calcvar__done3
00029558 <AmiBlitz3.ab2@12708>   TST.w D3
0002955C <AmiBlitz3.ab2@12709>    BNE.w calcvar__pskip
00029562 <AmiBlitz3.ab2@12710>   MOVE.w movea0,D1
00029566 <AmiBlitz3.ab2@12711>    BSR.w writeword
0002956A <AmiBlitz3.ab2@12712> BRA.w calcvar__pmore
00029570 <AmiBlitz3.ab2@12715>   MOVE.w D3,movea0a0+2
00029576 <AmiBlitz3.ab2@12716>   MOVE.l movea0a0,D1
0002957A <AmiBlitz3.ab2@12717>    BSR.w writelong
00029580 <AmiBlitz3.ab2@12720>   BTST #$2,$7(A3)
00029584 <AmiBlitz3.ab2@12721>    BEQ.w calcvar__loopml
0002958A <AmiBlitz3.ab2@12722>   MOVE.l adda0a0,D1
0002958E <AmiBlitz3.ab2@12723>    BSR.w writelong
00029592 <AmiBlitz3.ab2@12724> BRA.w calcvar__loopml
00029596 <AmiBlitz3.ab2@12727>   BSET #$E,D2
0002959C <AmiBlitz3.ab2@12728>   BTST #$2,$7(A3)
000295A0 <AmiBlitz3.ab2@12729>    BNE.w calcvar__done
000295A4 <AmiBlitz3.ab2@12730>   BSET #$D,D2
000295AC <AmiBlitz3.ab2@12733>   CMPI.l #$100,$4(A2)
000295B0 <AmiBlitz3.ab2@12734>    BCC.w calcvar__done2
000295B4 <AmiBlitz3.ab2@12735>   MOVE.b $7(A2),D2
000295B8 <AmiBlitz3.ab2@12738> BRA.w JL_0_9004
000295BC <AmiBlitz3.ab2@12741>   MOVE.w $6(A2),D2
000295C0 <AmiBlitz3.ab2@12744>   MOVE.w $4(A3),D3
000295C6 <AmiBlitz3.ab2@12745>   BTST #$0,$7(A3)
000295CA <AmiBlitz3.ab2@12746>    BEQ.w calcvar__nopoint
000295CE <AmiBlitz3.ab2@12747>   BSET #$E,D2
000295D0 <AmiBlitz3.ab2@12750> RTS
000295D4 <AmiBlitz3.ab2@12754> brchkcode0:  Dc.b $B0,$7C,$00,$00                          ;CMP.W   #$0000,D0
000295D8 <AmiBlitz3.ab2@12755> brchkcode:   Dc.b $B0,$7C :             Dc.b $00,$00       ;CMP.W   #$0000,D0
000295DA <AmiBlitz3.ab2@12756>              Dc.b $65,$04                                  ;BCS.B   brchkcode__ok
000295DC <AmiBlitz3.ab2@12757>              Dc.b $70,$02                                  ;MOVEQ   #$02,D0
000295DE <AmiBlitz3.ab2@12758>              Dc.b $4E,$40                                  ;TRAP    #00
000295E4 <AmiBlitz3.ab2@12766>   TST.w varmode
000295E8 <AmiBlitz3.ab2@12767>    BEQ.w writeword
000295EC <AmiBlitz3.ab2@12768>   BCLR #$0,D1
000295F0 <AmiBlitz3.ab2@12769> BRA.w writeword
000295F6 <AmiBlitz3.ab2@12772>   TST.w varmode
000295FA <AmiBlitz3.ab2@12773>    BEQ.w writeword
000295FE <AmiBlitz3.ab2@12774>   BCLR #$9,D1
00029602 <AmiBlitz3.ab2@12775> BRA.w writeword
00029608 <AmiBlitz3.ab2@12778>   TST.w proceduremode
0002960C <AmiBlitz3.ab2@12779>    BEQ.w writelong
00029610 <AmiBlitz3.ab2@12780>   BCLR #$19,D1
00029614 <AmiBlitz3.ab2@12781> BRA.w writelong
0002961A <AmiBlitz3.ab2@12784>   TST.w varmode
0002961E <AmiBlitz3.ab2@12785>   BEQ.w writelong
00029622 <AmiBlitz3.ab2@12786>   BCLR #$10,D1
00029628 <AmiBlitz3.ab2@12789>   ADDQ.l #1,destpointer
00029630 <AmiBlitz3.ab2@12790>   BCLR #$0,destpointer+3
00029636 <AmiBlitz3.ab2@12791>   MOVEA.l destpointer,A4
0002963C <AmiBlitz3.ab2@12792>   CMPA.l destbufferend,A4
00029640 <AmiBlitz3.ab2@12793>    BCC.w writeword__overa
00029642 <AmiBlitz3.ab2@12794>   MOVE.l D1,(A4)+
00029648 <AmiBlitz3.ab2@12797>   MOVE.l A4,destpointer
0002964C <AmiBlitz3.ab2@12798>   CMPA.l bigpc(PC),A4
00029650 <AmiBlitz3.ab2@12799>    BHI.w writeword__nbp
00029652 <AmiBlitz3.ab2@12800> RTS
0002965A <AmiBlitz3.ab2@12803>   MOVE.w #$FFFF,dontwrite                                  ;#-1 org source
00029660 <AmiBlitz3.ab2@12804>   CLR.b fast
00029666 <AmiBlitz3.ab2@12805>   CLR.b fpu
0002966C <AmiBlitz3.ab2@12806>   CLR.b iee
0002966E <AmiBlitz3.ab2@12807>   ADDQ.w #4,A4
00029672 <AmiBlitz3.ab2@12808> BRA.w writeword__msa
00029678 <AmiBlitz3.ab2@12814>   ADDQ.l #1,destpointer
00029680 <AmiBlitz3.ab2@12815>   BCLR #$0,destpointer+3
00029686 <AmiBlitz3.ab2@12816>   MOVEA.l destpointer,A4
0002968C <AmiBlitz3.ab2@12817>   CMPA.l destbufferend,A4
00029690 <AmiBlitz3.ab2@12818>    BCC.w writeword__over
00029692 <AmiBlitz3.ab2@12819>   MOVE.w D1,(A4)+
00029698 <AmiBlitz3.ab2@12822>   MOVE.l A4,destpointer
0002969C <AmiBlitz3.ab2@12823>   CMPA.l bigpc(PC),A4
000296A0 <AmiBlitz3.ab2@12824>    BHI.w writeword__nbp
000296A2 <AmiBlitz3.ab2@12825> RTS
000296A8 <AmiBlitz3.ab2@12828>   ADDQ.l #1,destpointer
000296B0 <AmiBlitz3.ab2@12829>   BCLR #$0,destpointer+3
000296B6 <AmiBlitz3.ab2@12830>   MOVEA.l destpointer,A4
000296BC <AmiBlitz3.ab2@12831>   CMPA.l destbufferend,A4
000296C0 <AmiBlitz3.ab2@12832>    BCC.w writeword__over
000296C2 <AmiBlitz3.ab2@12833>   MOVE.w D1,(A4)+
000296C8 <AmiBlitz3.ab2@12834>   MOVE.l A4,destpointer
000296CC <AmiBlitz3.ab2@12835>   CMPA.l bigpc(PC),A4
000296D0 <AmiBlitz3.ab2@12836>    BHI.w writeword__nbp
000296D2 <AmiBlitz3.ab2@12837> RTS
000296D8 <AmiBlitz3.ab2@12840>   TST.w cfetchmode
000296DC <AmiBlitz3.ab2@12841>   BNE.w writeword__nbp2
000296E2 <AmiBlitz3.ab2@12842>   MOVE.l A4,bigpc
000296E4 <AmiBlitz3.ab2@12845> RTS
000296EC <AmiBlitz3.ab2@12848>   MOVE.w #$FFFF,dontwrite                                  ;#-1 org source
000296EE <AmiBlitz3.ab2@12849>   ADDQ.w #2,A4
000296F4 <AmiBlitz3.ab2@12850>   CLR.b fast
000296FA <AmiBlitz3.ab2@12851>   CLR.b fpu
00029700 <AmiBlitz3.ab2@12852>   CLR.b iee
00029704 <AmiBlitz3.ab2@12853> BRA.w writeword__ms
0002970A <AmiBlitz3.ab2@12857>   MOVEA.l destpointer,A4
00029710 <AmiBlitz3.ab2@12858>   CMPA.l destbufferend,A4
00029714 <AmiBlitz3.ab2@12859>    BCC.w writebyte__over
00029716 <AmiBlitz3.ab2@12860>   MOVE.b D1,(A4)+
0002971C <AmiBlitz3.ab2@12863>   MOVE.l A4,destpointer
00029720 <AmiBlitz3.ab2@12864>   CMPA.l bigpc(PC),A4
00029724 <AmiBlitz3.ab2@12865>    BHI.w writebyte__nbp
00029726 <AmiBlitz3.ab2@12866> RTS
0002972C <AmiBlitz3.ab2@12869>   TST.w cfetchmode
00029730 <AmiBlitz3.ab2@12870>    BNE.w writebyte__nbp2
00029736 <AmiBlitz3.ab2@12871>   MOVE.l A4,bigpc
00029738 <AmiBlitz3.ab2@12874> RTS
00029740 <AmiBlitz3.ab2@12877>   MOVE.w #-1,dontwrite
00029742 <AmiBlitz3.ab2@12878>   ADDQ.w #1,A4
00029748 <AmiBlitz3.ab2@12879>   CLR.b fast
0002974E <AmiBlitz3.ab2@12880>   CLR.b fpu
00029754 <AmiBlitz3.ab2@12881>   CLR.b iee
00029758 <AmiBlitz3.ab2@12882> BRA.w writebyte__ms
0002975C <AmiBlitz3.ab2@12885> bigpc:   Ds.l 1
0002975E <AmiBlitz3.ab2@12889>   MOVE.w (A0)+,D1
00029762 <AmiBlitz3.ab2@12890>   BSR.w writeword
00029764 <AmiBlitz3.ab2@12893>     CMPA.l A1,A0
00029768 <AmiBlitz3.ab2@12894>     BCC.w pokecode__done
0002976A <AmiBlitz3.ab2@12895>       MOVE.w (A0)+,D1
0002976E <AmiBlitz3.ab2@12896>       BSR.w writeword
00029772 <AmiBlitz3.ab2@12897> BRA.w pokecode__loop
00029774 <AmiBlitz3.ab2@12900> RTS
00029776 <AmiBlitz3.ab2@12903>   MOVE.w (A0)+,D1
0002977A <AmiBlitz3.ab2@12904>   BSR.w writeword
0002977C <AmiBlitz3.ab2@12905>   CMPA.l A1,A0
00029780 <AmiBlitz3.ab2@12906>   BCS.w pokecode2
00029782 <AmiBlitz3.ab2@12907> RTS
00029788 <AmiBlitz3.ab2@12913>   TST.b iniffcommand
0002978C <AmiBlitz3.ab2@12914>   BEQ 'l1
00029790 <AmiBlitz3.ab2@12915>     MOVE.w #$4880,D1
00029796 <AmiBlitz3.ab2@12916>     OR.w regnum,D1
0002979A <AmiBlitz3.ab2@12917>     BSR writeword
0002979C <AmiBlitz3.ab2@12920> RTS
000297A0 <AmiBlitz3.ab2@12923>   BSR.w convert_byte_to_word
000297A6 <AmiBlitz3.ab2@12926>   TST.b iee
000297AA <AmiBlitz3.ab2@12927>   BEQ 'old
000297AE <AmiBlitz3.ab2@12928>   CMP.b #5,d2
000297B2 <AmiBlitz3.ab2@12929>   BEQ wtof
000297B6 <AmiBlitz3.ab2@12932>   MOVE.w #$48C0,D1
000297BC <AmiBlitz3.ab2@12933>   OR.w regnum,D1
000297C0 <AmiBlitz3.ab2@12934> BRA.w writeword
000297C2 <AmiBlitz3.ab2@12937>   MOVEQ #0,d0
000297C8 <AmiBlitz3.ab2@12938>   MOVE.w regnum,d0
000297CA <AmiBlitz3.ab2@12939>   ASL.l #7,d0
000297D0 <AmiBlitz3.ab2@12940>   MOVE.l #$f2005000,d1
000297D2 <AmiBlitz3.ab2@12941>   OR.l d0,d1
000297D4 <AmiBlitz3.ab2@12942>   ASL.l #1,d0
000297D6 <AmiBlitz3.ab2@12943>   ASL.l #8,d0
000297D8 <AmiBlitz3.ab2@12944>   OR.l d0,d1
000297DC <AmiBlitz3.ab2@12945> BRA writelong
000297E0 <AmiBlitz3.ab2@12949>   BSR.w convert_byte_to_word
000297E4 <AmiBlitz3.ab2@12952>   MOVE.w #$4840,D1
000297EA <AmiBlitz3.ab2@12953>   OR.w regnum,D1
000297EE <AmiBlitz3.ab2@12954>    BSR.w writeword
000297F2 <AmiBlitz3.ab2@12955>   MOVE.w #$4240,D1
000297F8 <AmiBlitz3.ab2@12956>   OR.w regnum,D1
000297FC <AmiBlitz3.ab2@12957> BRA.w writeword
00029800 <AmiBlitz3.ab2@12961>   CMP.w #$ffdc,d1
00029804 <AmiBlitz3.ab2@12962>   BNE 'negfpu
00029806 <AmiBlitz3.ab2@12963>   MOVEQ #0,d0
0002980C <AmiBlitz3.ab2@12964>   MOVE.w regnum,d0
0002980E <AmiBlitz3.ab2@12965>   ASL.l #7,d0
00029814 <AmiBlitz3.ab2@12966>   MOVE.l #$f2004000,d1
00029816 <AmiBlitz3.ab2@12967>   OR.l d0,d1
00029818 <AmiBlitz3.ab2@12968>   ASL.l #1,d0
0002981A <AmiBlitz3.ab2@12969>   ASL.l #8,d0
0002981C <AmiBlitz3.ab2@12970>   OR.l d0,d1
00029820 <AmiBlitz3.ab2@12971> BRA writelong
00029822 <AmiBlitz3.ab2@12975>   MOVEQ #0,d1
00029828 <AmiBlitz3.ab2@12976>   MOVE.w regnum,d1                                         ;fpu neg
0002982A <AmiBlitz3.ab2@12977>   ASL.l #7,d1
00029830 <AmiBlitz3.ab2@12978>   OR.l #$f200001a,d1
00029832 <AmiBlitz3.ab2@12979>   MOVE.l d0,-(a7)
00029834 <AmiBlitz3.ab2@12980>   MOVEQ #0,d0
0002983A <AmiBlitz3.ab2@12981>   MOVE.w regnum,d0
0002983C <AmiBlitz3.ab2@12982>   ASL.l #8,d0
0002983E <AmiBlitz3.ab2@12983>   ASL.l #2,d0
00029840 <AmiBlitz3.ab2@12984>   OR.l d0,d1
00029842 <AmiBlitz3.ab2@12985>   MOVE.l (a7)+,d0
00029846 <AmiBlitz3.ab2@12986> BRA writelong
0002984C <AmiBlitz3.ab2@12989>    TST.b iee
00029850 <AmiBlitz3.ab2@12990>    BNE wtof
00029854 <AmiBlitz3.ab2@12991>    BSR.w convert_byte_to_long
00029858 <AmiBlitz3.ab2@12994>    MOVE.w #$FFDC,D1
0002985E <AmiBlitz3.ab2@12997>    TST.b iee
00029862 <AmiBlitz3.ab2@12998>    BNE ltof
00029868 <AmiBlitz3.ab2@12999>    MOVE.w D1,libjsr+2
0002986C <AmiBlitz3.ab2@13000>    BSR.w JL_0_AD40
0002986E <AmiBlitz3.ab2@13001>   MOVE.l D4,D1
00029872 <AmiBlitz3.ab2@13002>    BSR.w JL_0_AD38
00029876 <AmiBlitz3.ab2@13003>   MOVE.w #$C900,D1
0002987A <AmiBlitz3.ab2@13004>    BSR.w Atokejsr
0002987E <AmiBlitz3.ab2@13005>    BSR.w JL_0_A352
00029884 <AmiBlitz3.ab2@13006>   MOVE.l libjsr,D1
00029888 <AmiBlitz3.ab2@13007>    BSR.w writelong
0002988C <AmiBlitz3.ab2@13008>    BSR.w JL_0_A36E
0002988E <AmiBlitz3.ab2@13009>   MOVE.l D5,D1
00029892 <AmiBlitz3.ab2@13010> BRA.w JL_0_AD38
00029894 <AmiBlitz3.ab2@13013> RTS
00029898 <AmiBlitz3.ab2@13016>   MOVE.w #$C317,D1
0002989E <AmiBlitz3.ab2@13017>   TST.b typecheck
000298A2 <AmiBlitz3.ab2@13018>   BEQ 'l1
000298A8 <AmiBlitz3.ab2@13019>    TST.b notypecheck
000298AC <AmiBlitz3.ab2@13020>    BNE 'l1
000298B2 <AmiBlitz3.ab2@13021>    TST.l lasttoken
000298B8 <AmiBlitz3.ab2@13028>   TST.b debugmode
000298BC <AmiBlitz3.ab2@13029>    BEQ.w JL_0_9696
000298C4 <AmiBlitz3.ab2@13030>   BTST #$7,overflowcheck
000298C8 <AmiBlitz3.ab2@13031>    BEQ.w JL_0_9696
000298CE <AmiBlitz3.ab2@13032>   TST.w cfetchmode
000298D2 <AmiBlitz3.ab2@13033>    BNE.w JL_0_9696
000298D8 <AmiBlitz3.ab2@13034>   TST.w regnum
000298DC <AmiBlitz3.ab2@13035>    BEQ.w JL_0_968A
000298DE <AmiBlitz3.ab2@13036>   MOVE.w D1,-(A7)
000298E2 <AmiBlitz3.ab2@13037>   MOVE.w JL_0_9698(PC),D1
000298E6 <AmiBlitz3.ab2@13038>    BSR.w writeword
000298EC <AmiBlitz3.ab2@13039>   MOVE.w regnum,D1
000298F0 <AmiBlitz3.ab2@13040>   OR.w L_0_969C(PC),D1
000298F4 <AmiBlitz3.ab2@13041>    BSR.w writeword
000298F6 <AmiBlitz3.ab2@13042>   MOVE.w (A7)+,D1
000298FA <AmiBlitz3.ab2@13043>    BSR.w JL_0_968A
000298FE <AmiBlitz3.ab2@13044>   MOVE.w L_0_969A(PC),D1
00029902 <AmiBlitz3.ab2@13045> BRA.w writeword
00029906 <AmiBlitz3.ab2@13049>   MOVEM.l D0-D7/A0-A6,-(A7)
0002990A <AmiBlitz3.ab2@13050>    BSR.w Atokejsr
0002990E <AmiBlitz3.ab2@13051>   MOVEM.l (A7)+,D0-D7/A0-A6
00029910 <AmiBlitz3.ab2@13054> RTS
00029912 <AmiBlitz3.ab2@13057>   MOVE.l D0,-(A7)
00029914 <AmiBlitz3.ab2@13060>   MOVE.l (A7)+,D0
00029916 <AmiBlitz3.ab2@13063>   MOVE.l D0,D0
0002991A <AmiBlitz3.ab2@13066>   BSR.w convert_word_to_long
00029920 <AmiBlitz3.ab2@13067>   TST.b iee
00029924 <AmiBlitz3.ab2@13068>   BEQ 'old
00029928 <AmiBlitz3.ab2@13069>   CMP.b #5,d2
0002992C <AmiBlitz3.ab2@13070>   BNE 'old
0002992E <AmiBlitz3.ab2@13071> RTS
00029932 <AmiBlitz3.ab2@13074> BRA.w JL_0_9600
00029936 <AmiBlitz3.ab2@13078>   MOVE.w #$C316,D1
0002993C <AmiBlitz3.ab2@13079>   TST.b typecheck
00029940 <AmiBlitz3.ab2@13080>   BEQ 'l1
00029946 <AmiBlitz3.ab2@13081>   TST.b peekaddrsize
0002994A <AmiBlitz3.ab2@13082>   BNE 'l1
00029950 <AmiBlitz3.ab2@13083>   TST.b notypecheck
00029954 <AmiBlitz3.ab2@13084>   BNE 'l1
0002995A <AmiBlitz3.ab2@13085>   TST.l lasttoken
0002995E <AmiBlitz3.ab2@13091> BRA.w JL_0_963A
00029962 <AmiBlitz3.ab2@13095>   MOVE.w #$C318,D1
00029968 <AmiBlitz3.ab2@13096>   TST.b typecheck
0002996C <AmiBlitz3.ab2@13097>   BEQ 'l1
00029972 <AmiBlitz3.ab2@13098>   TST.b peekaddrsize
00029976 <AmiBlitz3.ab2@13099>   BNE 'l1
0002997C <AmiBlitz3.ab2@13100>   TST.b notypecheck
00029980 <AmiBlitz3.ab2@13101>   BNE 'l1
00029986 <AmiBlitz3.ab2@13102>   TST.l lasttoken
0002998A <AmiBlitz3.ab2@13108> BRA.w JL_0_963A
0002998E <AmiBlitz3.ab2@13112>   MOVE.w #$C318,D1
00029994 <AmiBlitz3.ab2@13113>   TST.b typecheck
00029998 <AmiBlitz3.ab2@13114>   BEQ 'l1
0002999E <AmiBlitz3.ab2@13115>   TST.b notypecheck
000299A2 <AmiBlitz3.ab2@13116>   BNE 'l1
000299A8 <AmiBlitz3.ab2@13117>   TST.l lasttoken
000299AC <AmiBlitz3.ab2@13123>   BSR.w JL_0_963A
000299B0 <AmiBlitz3.ab2@13124> BRA.w convert_word_to_quick
000299B4 <AmiBlitz3.ab2@13128> BRA.w JL_0_9600
000299B6 <AmiBlitz3.ab2@13132> RTS
000299BA <AmiBlitz3.ab2@13136>   MOVE.w #$C319,D1
000299C0 <AmiBlitz3.ab2@13137>   TST.b typecheck
000299C4 <AmiBlitz3.ab2@13138>   BEQ 'l1
000299CA <AmiBlitz3.ab2@13139>   TST.b notypecheck
000299CE <AmiBlitz3.ab2@13140>   BNE 'l1
000299D4 <AmiBlitz3.ab2@13141>   TST.l lasttoken
000299D8 <AmiBlitz3.ab2@13148>   BSR.w JL_0_963A
000299DC <AmiBlitz3.ab2@13151>   MOVE.w #$4240,D1
000299E2 <AmiBlitz3.ab2@13152>   OR.w regnum,D1
000299E6 <AmiBlitz3.ab2@13153>   BSR.w writeword
000299EA <AmiBlitz3.ab2@13154>   MOVE.w #$4840,D1
000299F0 <AmiBlitz3.ab2@13155>   OR.w regnum,D1
000299F4 <AmiBlitz3.ab2@13156> BRA.w writeword
000299F8 <AmiBlitz3.ab2@13160> BRA.w JL_0_96D0
000299FC <AmiBlitz3.ab2@13164>   BSR.w JL_0_96D0
00029A00 <AmiBlitz3.ab2@13165> BRA.w convert_word_to_long
00029A02 <AmiBlitz3.ab2@13170>   MOVEQ #0,d0
00029A08 <AmiBlitz3.ab2@13171>   MOVE.w regnum,d0
00029A0A <AmiBlitz3.ab2@13172>   ASL.l #7,d0
00029A10 <AmiBlitz3.ab2@13173>   MOVE.l #$f2004000,d1
00029A12 <AmiBlitz3.ab2@13174>   OR.l d0,d1
00029A14 <AmiBlitz3.ab2@13175>   ASL.l #1,d0
00029A16 <AmiBlitz3.ab2@13176>   ASL.l #8,d0
00029A18 <AmiBlitz3.ab2@13177>   OR.l d0,d1
00029A1C <AmiBlitz3.ab2@13178>   BSR writelong
00029A22 <AmiBlitz3.ab2@13179>   MOVE.w regnum,d0
00029A24 <AmiBlitz3.ab2@13180>   ASL.l #7,d0
00029A2A <AmiBlitz3.ab2@13181>   MOVE.l #$f23c4423,d1                                     ;fmul.s #1/65536,fpreg
00029A2C <AmiBlitz3.ab2@13182>   OR.w d0,d1
00029A30 <AmiBlitz3.ab2@13183>   BSR writelong
00029A36 <AmiBlitz3.ab2@13184>   MOVE.l #$37800000,d1
00029A3A <AmiBlitz3.ab2@13185>   BSR writelong
00029A3C <AmiBlitz3.ab2@13186> RTS
00029A42 <AmiBlitz3.ab2@13190>   TST.b iee
00029A46 <AmiBlitz3.ab2@13191>   BNE qtof
00029A4A <AmiBlitz3.ab2@13192>   MOVE.w #$D300,D1
00029A4C <AmiBlitz3.ab2@13195>   MOVE.w D1,-(A7)
00029A50 <AmiBlitz3.ab2@13196>    BSR.w JL_0_AD40
00029A52 <AmiBlitz3.ab2@13197>   MOVE.l D4,D1
00029A56 <AmiBlitz3.ab2@13198>    BSR.w JL_0_AD38
00029A5A <AmiBlitz3.ab2@13199>    BSR.w JL_0_A352
00029A5C <AmiBlitz3.ab2@13200>   MOVE.w (A7)+,D1
00029A60 <AmiBlitz3.ab2@13201>    BSR.w Atokejsr
00029A64 <AmiBlitz3.ab2@13202>    BSR.w JL_0_A36E
00029A66 <AmiBlitz3.ab2@13203>   MOVE.l D5,D1
00029A6A <AmiBlitz3.ab2@13204> BRA.w JL_0_AD38
00029A6C <AmiBlitz3.ab2@13208> RTS
00029A72 <AmiBlitz3.ab2@13211>   TST.b typecheck
00029A76 <AmiBlitz3.ab2@13212>   BEQ 'l1
00029A7C <AmiBlitz3.ab2@13213>   TST.b notypecheck
00029A80 <AmiBlitz3.ab2@13214>   BNE 'l1
00029A86 <AmiBlitz3.ab2@13215>   TST.l lasttoken
00029A8C <AmiBlitz3.ab2@13220>   TST.b iee
00029A90 <AmiBlitz3.ab2@13221>   BNE ftol
00029A94 <AmiBlitz3.ab2@13222>   MOVE.w #$C31A,D1
00029A98 <AmiBlitz3.ab2@13223>   BSR.w JL_0_963A
00029A9C <AmiBlitz3.ab2@13224>   BSR.w JL_0_974A
00029AA0 <AmiBlitz3.ab2@13225> BRA.w convert_long_to_byte
00029AA2 <AmiBlitz3.ab2@13229> RTS
00029AA8 <AmiBlitz3.ab2@13232>   TST.b typecheck
00029AAC <AmiBlitz3.ab2@13233>   BEQ 'l1
00029AB2 <AmiBlitz3.ab2@13234>   TST.b notypecheck
00029AB6 <AmiBlitz3.ab2@13235>   BNE 'l1
00029ABC <AmiBlitz3.ab2@13236>   TST.l lasttoken
00029AC2 <AmiBlitz3.ab2@13241>   TST.b iee
00029AC6 <AmiBlitz3.ab2@13242>   BNE ftol
00029ACA <AmiBlitz3.ab2@13243>   MOVE.w #$C31B,D1
00029ACE <AmiBlitz3.ab2@13244>   BSR.w JL_0_963A
00029AD2 <AmiBlitz3.ab2@13245>   BSR.w JL_0_974A
00029AD6 <AmiBlitz3.ab2@13246> BRA.w convert_long_to_word
00029AD8 <AmiBlitz3.ab2@13250> RTS
00029ADE <AmiBlitz3.ab2@13253>   TST.b iee
00029AE2 <AmiBlitz3.ab2@13254>   BNE ftol
00029AE6 <AmiBlitz3.ab2@13255>   MOVE.w #$C31C,D1
00029AEA <AmiBlitz3.ab2@13256>   BSR.w JL_0_963A
00029AEE <AmiBlitz3.ab2@13259>   MOVE.w #$FFE2,D1
00029AF2 <AmiBlitz3.ab2@13260> BRA.w JL_0_9604
00029AF4 <AmiBlitz3.ab2@13263>   MOVE.l d0,-(a7)
00029AF6 <AmiBlitz3.ab2@13264>   MOVEQ #0,d0
00029AFC <AmiBlitz3.ab2@13265>   MOVE.w regnum,d0
00029AFE <AmiBlitz3.ab2@13266>   ASL.l #7,d0
00029B04 <AmiBlitz3.ab2@13267>   MOVE.l #$f2006000,d1
00029B06 <AmiBlitz3.ab2@13268>   OR.l d0,d1
00029B08 <AmiBlitz3.ab2@13269>   ASL.l #1,d0
00029B0A <AmiBlitz3.ab2@13270>   ASL.l #8,d0
00029B0C <AmiBlitz3.ab2@13271>   OR.l d0,d1
00029B0E <AmiBlitz3.ab2@13272>   MOVE.l (a7)+,d0
00029B12 <AmiBlitz3.ab2@13273> BRA writelong
00029B14 <AmiBlitz3.ab2@13277>   MOVE.l d0,-(a7)
00029B16 <AmiBlitz3.ab2@13278>   MOVEQ #0,d0
00029B1C <AmiBlitz3.ab2@13279>   MOVE.l #$f23c4023,d1
00029B22 <AmiBlitz3.ab2@13280>   MOVE.w regnum,d0
00029B24 <AmiBlitz3.ab2@13281>   ASL.l #7,d0
00029B26 <AmiBlitz3.ab2@13282>   OR.l d0,d1
00029B2A <AmiBlitz3.ab2@13283>   BSR writelong
00029B30 <AmiBlitz3.ab2@13284>   MOVE.l #$00010000,d1
00029B34 <AmiBlitz3.ab2@13285>   BSR writelong
00029B3A <AmiBlitz3.ab2@13286>   MOVE.w regnum,d0
00029B3C <AmiBlitz3.ab2@13287>   ASL.l #7,d0
00029B42 <AmiBlitz3.ab2@13288>   MOVE.l #$f2006000,d1
00029B44 <AmiBlitz3.ab2@13289>   OR.l d0,d1
00029B46 <AmiBlitz3.ab2@13290>   ASL.l #1,d0
00029B48 <AmiBlitz3.ab2@13291>   ASL.l #8,d0
00029B4A <AmiBlitz3.ab2@13292>   OR.l d0,d1
00029B4E <AmiBlitz3.ab2@13293>   BSR writelong
00029B50 <AmiBlitz3.ab2@13294>   MOVE.l (a7)+,d0
00029B52 <AmiBlitz3.ab2@13295> RTS
00029B54 <AmiBlitz3.ab2@13299> RTS
00029B5A <AmiBlitz3.ab2@13303>   TST.b iee
00029B5E <AmiBlitz3.ab2@13304>   BNE ftoq
00029B62 <AmiBlitz3.ab2@13305>   MOVE.w #$C31B,D1
00029B66 <AmiBlitz3.ab2@13306>   BSR.w JL_0_963A
00029B6A <AmiBlitz3.ab2@13307>   MOVE.w #$D301,D1
00029B6E <AmiBlitz3.ab2@13308> BRA.w JL_0_96FC
00029B74 <AmiBlitz3.ab2@13314>    TST.b blitzparloop
00029B78 <AmiBlitz3.ab2@13315>    BNE 'l1
00029B7E <AmiBlitz3.ab2@13316>    TST.b funcparloop
00029B82 <AmiBlitz3.ab2@13317>    BNE 'l1
00029B86 <AmiBlitz3.ab2@13318>    BRA error_convert_types
00029B8E <AmiBlitz3.ab2@13321>   CMP.b #2,optistring
00029B92 <AmiBlitz3.ab2@13322>   BEQ JLrts
00029B98 <AmiBlitz3.ab2@13323>   MOVE.w stol,D1
00029B9C <AmiBlitz3.ab2@13324>   BSR.w writeword
00029BA4 <AmiBlitz3.ab2@13325>   CMPI.w #$2,sbgot
00029BA8 <AmiBlitz3.ab2@13326>   BCS.w sbtolong
00029BAC <AmiBlitz3.ab2@13327>   MOVE.w ceos(PC),D1
00029BB0 <AmiBlitz3.ab2@13328>   BSR.w writeword
00029BB6 <AmiBlitz3.ab2@13331>   MOVE.w regnum,D1
00029BB8 <AmiBlitz3.ab2@13332>   LSL.w #8,D1
00029BBA <AmiBlitz3.ab2@13333>   LSL.w #1,D1
00029BC2 <AmiBlitz3.ab2@13334>   CMPI.w #$2,sbgot
00029BC6 <AmiBlitz3.ab2@13335>   BCS.w JL_0_98E8
00029BCC <AmiBlitz3.ab2@13336>   MOVE.w a2offset,D3
00029BD2 <AmiBlitz3.ab2@13337>   SUB.w thisstuse,D3
00029BD6 <AmiBlitz3.ab2@13338>   CMP.w #$6,D3
00029BDA <AmiBlitz3.ab2@13339>   BNE.w JL_0_98D4b
00029BE0 <AmiBlitz3.ab2@13340>   OR.w movestst2,D1
00029BE4 <AmiBlitz3.ab2@13341>   BSR.w writeword
00029BEA <AmiBlitz3.ab2@13342>   LEA movestst2+2,A0
00029BF0 <AmiBlitz3.ab2@13343>   LEA movestst2f,A1
00029BF4 <AmiBlitz3.ab2@13344> BRA.w pokecode2
00029BFA <AmiBlitz3.ab2@13348>   OR.w movea7dn,D1
00029BFE <AmiBlitz3.ab2@13349>   BSR.w writeword
00029C04 <AmiBlitz3.ab2@13350>   MOVE.l #0,D1
00029C08 <AmiBlitz3.ab2@13351> BRA.w writeword
00029C0E <AmiBlitz3.ab2@13355>   ADDQ.w #1,fuckpos
00029C12 <AmiBlitz3.ab2@13356>   BSR.w writeconvertcode
00029C18 <AmiBlitz3.ab2@13357>   SUBQ.w #1,fuckpos
00029C1A <AmiBlitz3.ab2@13359> RTS
00029C1C <AmiBlitz3.ab2@13363>   MOVE.w D3,D1
00029C20 <AmiBlitz3.ab2@13364>   CMP.w #7,d1
00029C24 <AmiBlitz3.ab2@13365>   BLE 'ok
00029C2A <AmiBlitz3.ab2@13366>   JMP errorinternalconvert
00029C2C <AmiBlitz3.ab2@13367> 'ok  SUBQ.w #1,D1
00029C30 <AmiBlitz3.ab2@13368>   MULU #$7,D1
00029C32 <AmiBlitz3.ab2@13369>   ADD.w D2,D1
00029C34 <AmiBlitz3.ab2@13370>   SUBQ.w #1,D1
00029C36 <AmiBlitz3.ab2@13371>   LSL.w #2,D1
00029C3C <AmiBlitz3.ab2@13372>   LEA convtable,A0
00029C40 <AmiBlitz3.ab2@13373>   MOVE.l $0(A0,D1.W),D1
00029C44 <AmiBlitz3.ab2@13374>   BEQ.w JL_0_97A2
00029C46 <AmiBlitz3.ab2@13375>     MOVEA.l D1,A0
00029C4A <AmiBlitz3.ab2@13376>     CMP.b #$ff,d3
00029C4E <AmiBlitz3.ab2@13377>     BEQ JL_0_97A2
00029C50 <AmiBlitz3.ab2@13378> JMP (A0)
00029C52 <AmiBlitz3.ab2@13381> RTS
00029C56 <AmiBlitz3.ab2@13384> usedfrom:  Ds.l 1
00029C5A <AmiBlitz3.ab2@13391>   CMP.w #"\",D0
00029C5E <AmiBlitz3.ab2@13392>   BNE.w JL_0_97C2
00029C62 <AmiBlitz3.ab2@13393>     CMP.b #"\",(a5)
00029C66 <AmiBlitz3.ab2@13394>     BNE 'first
00029C6C <AmiBlitz3.ab2@13395>       MOVE.l A5,usedfrom
00029C72 <AmiBlitz3.ab2@13396>       LEA path2,A5
00029C76 <AmiBlitz3.ab2@13397> BRA 'g1
00029C78 <AmiBlitz3.ab2@13400>     SUBQ.w #1,A5
00029C7E <AmiBlitz3.ab2@13401>   MOVE.l A5,usedfrom
00029C84 <AmiBlitz3.ab2@13402>   LEA usedpath,A5                                          ;read path
00029C88 <AmiBlitz3.ab2@13405>   BSR.w get1bytemain
00029C8E <AmiBlitz3.ab2@13408>   CLR.w flagmask
00029C92 <AmiBlitz3.ab2@13409>   CMP.w #$2A,D0
00029C96 <AmiBlitz3.ab2@13410>    BNE.w JL_0_983A
00029C9E <AmiBlitz3.ab2@13411>   MOVE.w #$0001,flagmask
00029CA2 <AmiBlitz3.ab2@13413>    BSR.w getparameter2
00029CA6 <AmiBlitz3.ab2@13416>    BEQ.w syntaxerr
00029CAA <AmiBlitz3.ab2@13417>   CMP.w #$28,D0
00029CAE <AmiBlitz3.ab2@13418>    BEQ.w JL_0_9830
00029CB2 <AmiBlitz3.ab2@13419>   CMP.w #$2E,D0
00029CB6 <AmiBlitz3.ab2@13420>    BEQ.w JL_0_980C
00029CBA <AmiBlitz3.ab2@13421>   CMP.w #$24,D0
00029CBE <AmiBlitz3.ab2@13422>    BNE.w JL_0_9838
00029CC6 <AmiBlitz3.ab2@13423>   ORI.w #$8,flagmask
00029CCA <AmiBlitz3.ab2@13424>    BSR.w storeloc
00029CCE <AmiBlitz3.ab2@13425>    BSR.w get1bytemain
00029CD2 <AmiBlitz3.ab2@13426> BRA.w JL_0_9822
00029CD6 <AmiBlitz3.ab2@13430>   BSR.w storeloc
00029CD8 <AmiBlitz3.ab2@13431>   MOVE.w D2,-(A7)
00029CDE <AmiBlitz3.ab2@13432>   LEA namebuff2,A1
00029CE2 <AmiBlitz3.ab2@13433>    BSR.w makename3
00029CE6 <AmiBlitz3.ab2@13434>    BEQ.w syntaxerr
00029CE8 <AmiBlitz3.ab2@13435>   MOVE.w (A7)+,D2
00029CEA <AmiBlitz3.ab2@13438>    MOVE.w D0,D1
00029CEE <AmiBlitz3.ab2@13439>    BSR.w resloc
00029CF2 <AmiBlitz3.ab2@13440>    CMP.w #$28,D1
00029CF6 <AmiBlitz3.ab2@13441>    BNE.w JL_0_9838
00029CFE <AmiBlitz3.ab2@13444>   ORI.w #$2,flagmask
00029D00 <AmiBlitz3.ab2@13447> RTS
00029D04 <AmiBlitz3.ab2@13451>   CMP.w #$40,D0
00029D08 <AmiBlitz3.ab2@13452>    BNE.w JL_0_984E
00029D10 <AmiBlitz3.ab2@13453>   MOVE.w #$0005,flagmask
00029D14 <AmiBlitz3.ab2@13454> BRA.w JL_0_97D8
00029D18 <AmiBlitz3.ab2@13458>   BSR.w makename2
00029D1C <AmiBlitz3.ab2@13459> BRA.w JL_0_97DC
00029D20 <AmiBlitz3.ab2@13463>   MOVE.w #$FED3,D1
00029D24 <AmiBlitz3.ab2@13464>    BSR.w uselib
00029D2A <AmiBlitz3.ab2@13465>   LEA pusha3,A0
00029D30 <AmiBlitz3.ab2@13466>   LEA pusha3f,A1
00029D34 <AmiBlitz3.ab2@13467> BRA.w pokecode
00029D38 <AmiBlitz3.ab2@13471>   MOVE.w #$FED3,D1
00029D3C <AmiBlitz3.ab2@13472>    BSR.w uselib
00029D42 <AmiBlitz3.ab2@13473>   LEA pulla3,A0
00029D48 <AmiBlitz3.ab2@13474>   LEA pulla3f,A1
00029D4C <AmiBlitz3.ab2@13475> BRA.w pokecode
00029D4E <AmiBlitz3.ab2@13479> ceos:   Dc.b $42,$1B                                       ;CLR.B   (A3)+             ;*!
00029D56 <AmiBlitz3.ab2@13484>     CMP.b #2,optistring
00029D5A <AmiBlitz3.ab2@13485>    BEQ 'l10
00029D5E <AmiBlitz3.ab2@13486>    MOVE.w ceos(PC),D1
00029D62 <AmiBlitz3.ab2@13487>    BSR.w writeword                                         ;clr.b (a3)
00029D68 <AmiBlitz3.ab2@13490>   MOVE.w regnum,D1
00029D6A <AmiBlitz3.ab2@13491>   LSL.w #8,D1
00029D6C <AmiBlitz3.ab2@13492>   LSL.w #1,D1
00029D74 <AmiBlitz3.ab2@13493>   CMPI.w #$2,sbgot
00029D78 <AmiBlitz3.ab2@13494>    BCS.w JL_0_98E8
00029D7E <AmiBlitz3.ab2@13495>   MOVE.w a2offset,D3                                       ;stackuse,d3 org source
00029D84 <AmiBlitz3.ab2@13496>   SUB.w thisstuse,D3
00029D88 <AmiBlitz3.ab2@13497>   CMP.w #$6,D3
00029D8C <AmiBlitz3.ab2@13498>    BNE.w JL_0_98D4
00029D92 <AmiBlitz3.ab2@13499>   OR.w movestst2,D1
00029D96 <AmiBlitz3.ab2@13500>    BSR.w writeword
00029D9C <AmiBlitz3.ab2@13501>   LEA movestst2+2,A0
00029DA2 <AmiBlitz3.ab2@13502>   LEA movestst2f,A1
00029DA6 <AmiBlitz3.ab2@13503> BRA.w pokecode2
00029DAC <AmiBlitz3.ab2@13507>    OR.w movea7dn,D1
00029DB0 <AmiBlitz3.ab2@13508>    BSR.w writeword
00029DB6 <AmiBlitz3.ab2@13509>   MOVE.l movea7dn+2,D1
00029DBA <AmiBlitz3.ab2@13521>   BSR writelong
00029DC2 <AmiBlitz3.ab2@13524>    CMP.w #6,regnum
00029DC6 <AmiBlitz3.ab2@13525>    BEQ 'l1
00029DCC <AmiBlitz3.ab2@13526>    TST.w stackpar
00029DD0 <AmiBlitz3.ab2@13527>    BNE 'l1
00029DD6 <AmiBlitz3.ab2@13528>    TST.b funcparloop
00029DDA <AmiBlitz3.ab2@13529>    BEQ 'l1
00029DE0 <AmiBlitz3.ab2@13530>    MOVE.l #$48780000,d1
00029DE4 <AmiBlitz3.ab2@13531>    BSR writelong
00029DE6 <AmiBlitz3.ab2@13535> RTS
00029DE8 <AmiBlitz3.ab2@13540>      MOVE.l d1,-(a7)
00029DF0 <AmiBlitz3.ab2@13541>      CMP.w #6,regnum
00029DF4 <AmiBlitz3.ab2@13542>      BEQ 'l1
00029DFA <AmiBlitz3.ab2@13543>      TST.w stackpar
00029DFE <AmiBlitz3.ab2@13544>      BNE 'l1
00029E04 <AmiBlitz3.ab2@13545>      TST.b funcparloop
00029E08 <AmiBlitz3.ab2@13546>      BEQ 'l1
00029E0E <AmiBlitz3.ab2@13547>      MOVE.l #$48780000,d1
00029E12 <AmiBlitz3.ab2@13548>      BSR writelong
00029E14 <AmiBlitz3.ab2@13551>      MOVE.l (a7)+,d1
00029E1A <AmiBlitz3.ab2@13553>    OR.w movestdn,D1
00029E1E <AmiBlitz3.ab2@13554>    BSR.w writeword
00029E22 <AmiBlitz3.ab2@13555>   MOVE.w #$FED3,D1
00029E26 <AmiBlitz3.ab2@13556>    BSR.w uselib
00029E2A <AmiBlitz3.ab2@13557>   MOVE.w $A(A1),D1
00029E2E <AmiBlitz3.ab2@13558> BRA.w writeword
00029E30 <AmiBlitz3.ab2@13561> unknown:    Ds.w 1
00029E36 <AmiBlitz3.ab2@13564> somecode:   Dc.b $0C,$80,$00,$01,$00,$00                   ;CMPI.L  #$00010000,D0
00029E3A <AmiBlitz3.ab2@13565> somecode2:  Dc.b $65,$00,$00,$08                           ;BCS.W   codeisok
00029E40 <AmiBlitz3.ab2@13566>             Dc.b $4E,$B9,$00,$00,$00,$00                   ;JSR $00000000
00029E46 <AmiBlitz3.ab2@13572>   TST.b debugmode
00029E4A <AmiBlitz3.ab2@13573>   BEQ.w sharreval
00029E4E <AmiBlitz3.ab2@13574>  BSR.w arreval
00029E52 <AmiBlitz3.ab2@13577>   MOVE.w somecode(PC),D1
00029E58 <AmiBlitz3.ab2@13578>   OR.w regnum,D1
00029E5C <AmiBlitz3.ab2@13579>    BSR.w writeword
00029E5E <AmiBlitz3.ab2@13580>   MOVEQ.l #$01,D1
00029E60 <AmiBlitz3.ab2@13581>   SWAP D1
00029E64 <AmiBlitz3.ab2@13582>    BSR.w writelong
00029E68 <AmiBlitz3.ab2@13583>   MOVE.l somecode2(PC),D1
00029E6C <AmiBlitz3.ab2@13584>    BSR.w writelong
00029E70 <AmiBlitz3.ab2@13585>   MOVE.w #$C309,D1
00029E74 <AmiBlitz3.ab2@13586> BRA.w Atokejsr
00029E76 <AmiBlitz3.ab2@13590>   MOVEQ.l #$02,D2
00029E78 <AmiBlitz3.ab2@13591>   MOVEQ.l #$00,D1
00029E7A <AmiBlitz3.ab2@13592>   MOVEQ.l #$00,D3
00029E7E <AmiBlitz3.ab2@13593> BRA.w maineval2
00029E80 <AmiBlitz3.ab2@13597>   MOVEQ.l #$03,D2
00029E82 <AmiBlitz3.ab2@13598>   MOVEQ.l #$00,D1
00029E84 <AmiBlitz3.ab2@13599>   MOVEQ.l #$00,D3
00029E8A <AmiBlitz3.ab2@13600>   MOVE.b notypecheck,-(a7)
00029E92 <AmiBlitz3.ab2@13601>   MOVE.b #1,notypecheck                                    ;typecheck need switch off for array offset calculation code
00029E98 <AmiBlitz3.ab2@13602>   JSR maineval2
00029E9E <AmiBlitz3.ab2@13603>   MOVE.b (a7)+,notypecheck                                 ;now its switch to old state
00029EA0 <AmiBlitz3.ab2@13604>   RTS
00029EAA <AmiBlitz3.ab2@13608>   MOVE.w oldqflag,instringon
00029EB0 <AmiBlitz3.ab2@13609>   MOVEA.l lastsourcepos,A5
00029EB2 <AmiBlitz3.ab2@13610>   MOVEQ.l #-$01,D1
00029EB4 <AmiBlitz3.ab2@13611>   MOVEQ.l #-$01,D3
00029EB8 <AmiBlitz3.ab2@13612> BRA.w peval
00029EC2 <AmiBlitz3.ab2@13617>   MOVE.w oldqflag,instringon
00029EC8 <AmiBlitz3.ab2@13618>   MOVEA.l lastsourcepos,A5
00029ECA <AmiBlitz3.ab2@13621>   MOVEQ.l #-$01,D1
00029ECC <AmiBlitz3.ab2@13622>   MOVEQ.l #$00,D3
00029ED2 <AmiBlitz3.ab2@13623>   MOVE.l leftsidetype,-(a7)
00029ED8 <AmiBlitz3.ab2@13624>   MOVE.l rightsidetype,-(a7)
00029EDE <AmiBlitz3.ab2@13625>   CLR.l leftsidetype
00029EE4 <AmiBlitz3.ab2@13626>   CLR.l rightsidetype
00029EEA <AmiBlitz3.ab2@13627>   JSR maineval
00029EF0 <AmiBlitz3.ab2@13628>   MOVE.l (a7)+,rightsidetype
00029EF6 <AmiBlitz3.ab2@13629>   MOVE.l (a7)+,leftsidetype
00029EF8 <AmiBlitz3.ab2@13630>   RTS
00029F02 <AmiBlitz3.ab2@13634>   MOVE.w oldqflag,instringon
00029F08 <AmiBlitz3.ab2@13635>   MOVEA.l lastsourcepos,A5
00029F0A <AmiBlitz3.ab2@13636>   MOVEQ.l #$00,D1
00029F0C <AmiBlitz3.ab2@13637>   MOVEQ.l #-$01,D3
00029F10 <AmiBlitz3.ab2@13638> BRA.w maineval
00029F12 <AmiBlitz3.ab2@13642>   MOVEQ.l #$01,D1
00029F14 <AmiBlitz3.ab2@13643>   MOVEQ.l #-$01,D3
00029F18 <AmiBlitz3.ab2@13644> BRA.w maineval
00029F22 <AmiBlitz3.ab2@13649>   MOVE.w oldqflag,instringon
00029F28 <AmiBlitz3.ab2@13650>   MOVEA.l lastsourcepos,A5
00029F2A <AmiBlitz3.ab2@13653>   MOVEQ.l #$00,D1                                        ;no push
00029F2C <AmiBlitz3.ab2@13654>   MOVEQ.l #$00,D3
00029F34 <AmiBlitz3.ab2@13675>    CMPI.w #$6,regnum
00029F38 <AmiBlitz3.ab2@13676>    BCS.w maineval2
00029F3A <AmiBlitz3.ab2@13677>    MOVEQ #0,d1
00029F40 <AmiBlitz3.ab2@13678>    MOVE.l destpointer,a4
00029F46 <AmiBlitz3.ab2@13680>    CMPA.l destbufferend,A4
00029F4A <AmiBlitz3.ab2@13681>    BCC.w maineval__l2
00029F50 <AmiBlitz3.ab2@13683>    CMP.w #$2f0a,-2(a4)                                    ;bug is a move.l a2,-(a7) before (show temp calc)?
00029F54 <AmiBlitz3.ab2@13685>    BNE maineval__l2
00029F58 <AmiBlitz3.ab2@13689> BRA maineval__l1
00029F5A <AmiBlitz3.ab2@13692>   MOVEQ.l #-$01,D1
00029F62 <AmiBlitz3.ab2@13695>   MOVE.w #$0006,regnum                                     ;write a func par To stack
00029F68 <AmiBlitz3.ab2@13698>   MOVE.w thisstuse,-(A7)
00029F72 <AmiBlitz3.ab2@13699>   MOVE.w a2offset,thisstuse
00029F78 <AmiBlitz3.ab2@13700>   MOVE.w stackpar,-(A7)
00029F7E <AmiBlitz3.ab2@13701>   MOVE.w D1,stackpar
00029F84 <AmiBlitz3.ab2@13702>   MOVE.w sbgot,-(A7)
00029F8A <AmiBlitz3.ab2@13703>   CLR.w sbgot
00029F8E <AmiBlitz3.ab2@13704>   MOVE.w unknown(PC),-(A7)
00029F94 <AmiBlitz3.ab2@13705>   MOVE.w D3,unknown
00029F96 <AmiBlitz3.ab2@13706>   MOVE.w D2,-(a7)
00029F9C <AmiBlitz3.ab2@13707>   MOVE.w d2,mode
00029FA0 <AmiBlitz3.ab2@13708>    BSR.w eval3
00029FA2 <AmiBlitz3.ab2@13709>   MOVE.w (a7)+,d3
00029FA6 <AmiBlitz3.ab2@13710>    BEQ.w maineval__noconv
00029FAA <AmiBlitz3.ab2@13711>   MOVE.w unknown(PC),D1
00029FAE <AmiBlitz3.ab2@13712>    BNE.w maineval__noconv
00029FB0 <AmiBlitz3.ab2@13713>   EXG.l D2,D3
00029FB2 <AmiBlitz3.ab2@13714>    MOVE.l a2,-(a7)
00029FB8 <AmiBlitz3.ab2@13715>    TST.b curtemplabel
00029FBC <AmiBlitz3.ab2@13716>    BEQ maineval2__l10
00029FC2 <AmiBlitz3.ab2@13717>    MOVE.l asmbuff,a2
00029FC8 <AmiBlitz3.ab2@13718>    CMP.w #$c,$8(a2)
00029FCC <AmiBlitz3.ab2@13719>    BEQ maineval2__l20
00029FD2 <AmiBlitz3.ab2@13720>    CMP.w #$d,$8(a2)
00029FD6 <AmiBlitz3.ab2@13721>    BEQ maineval2__l20
00029FD8 <AmiBlitz3.ab2@13724>   CMP.w d2,d3
00029FDC <AmiBlitz3.ab2@13725>   BEQ maineval2__l20
00029FE0 <AmiBlitz3.ab2@13726>   BSR.w writeconvertcode
00029FE6 <AmiBlitz3.ab2@13727>   CLR.b doimmediate
00029FE8 <AmiBlitz3.ab2@13730>   MOVE.l (a7)+,a2
00029FEE <AmiBlitz3.ab2@13733>   MOVE.w (A7)+,unknown
00029FF4 <AmiBlitz3.ab2@13734>   MOVE.w stackpar,D1
00029FF8 <AmiBlitz3.ab2@13735>    BEQ.w maineval__skipme
00029FFC <AmiBlitz3.ab2@13736>    BMI.w maineval__skipme
0002A002 <AmiBlitz3.ab2@13740>   MOVE.w regnum,D1
0002A004 <AmiBlitz3.ab2@13741>   LSL.w #8,D1
0002A006 <AmiBlitz3.ab2@13742>   LSL.w #1,D1
0002A00A <AmiBlitz3.ab2@13743>   CMP.w #$7,D2
0002A00E <AmiBlitz3.ab2@13744>    BNE.w maineval__hi1
0002A016 <AmiBlitz3.ab2@13745>    CMP.b #2,optistring
0002A01A <AmiBlitz3.ab2@13746>    BEQ maineval__hi1a
0002A01C <AmiBlitz3.ab2@13747>   MOVE.w D1,-(A7)
0002A022 <AmiBlitz3.ab2@13748>   OR.w getstlen,D1
0002A026 <AmiBlitz3.ab2@13749>    BSR.w writeword
0002A028 <AmiBlitz3.ab2@13750>   MOVE.w (A7)+,D1
0002A02E <AmiBlitz3.ab2@13753>   ADDQ.w #2,a2offset                                        ;lib mode to stack
0002A032 <AmiBlitz3.ab2@13757>   MOVE.w #$3f3c,d1
0002A036 <AmiBlitz3.ab2@13758>    BSR.w writeword
0002A038 <AmiBlitz3.ab2@13762>   MOVE.w d2,d1
0002A03E <AmiBlitz3.ab2@13763>   MOVE.w d1,libmode
0002A042 <AmiBlitz3.ab2@13764>    BSR.w writeword
0002A046 <AmiBlitz3.ab2@13765>   CMP.w #$7,D2
0002A04A <AmiBlitz3.ab2@13766>    BNE.w maineval__skipme
0002A050 <AmiBlitz3.ab2@13767>   MOVE.w putstlen,D1
0002A056 <AmiBlitz3.ab2@13768>   OR.w regnum,D1
0002A05A <AmiBlitz3.ab2@13769>    BSR.w writeword
0002A05E <AmiBlitz3.ab2@13772>    CMP.w #$7,D2
0002A062 <AmiBlitz3.ab2@13773>    BNE.w maineval__notst
0002A06A <AmiBlitz3.ab2@13784>    CMP.b #2,optistring
0002A06E <AmiBlitz3.ab2@13785>    BEQ maineval__skipme_l10
0002A074 <AmiBlitz3.ab2@13786>    ADDQ.w #4,a2offset                                      ;a length on da stack.....
0002A078 <AmiBlitz3.ab2@13787>    BSR.w sbtolong
0002A07C <AmiBlitz3.ab2@13788> BRA.w maineval__notst2
0002A084 <AmiBlitz3.ab2@13792>     CMP.w #6,regnum
0002A088 <AmiBlitz3.ab2@13793>     BEQ maineval__skipme_l10_l1
0002A08E <AmiBlitz3.ab2@13794>     TST.b funcparloop
0002A092 <AmiBlitz3.ab2@13795>     BEQ maineval__skipme_l10_l1
0002A098 <AmiBlitz3.ab2@13796>     MOVE.l #$48780000,d1
0002A09C <AmiBlitz3.ab2@13797>     BSR writelong
0002A0A0 <AmiBlitz3.ab2@13800> BRA.w maineval__notst2
0002A0A6 <AmiBlitz3.ab2@13803>   ADDQ.w #2,a2offset
0002A0AA <AmiBlitz3.ab2@13804> BRA maineval__skipme
0002A0B2 <AmiBlitz3.ab2@13807>   CMPI.w #$2,sbgot
0002A0B6 <AmiBlitz3.ab2@13808>    BCS.w maineval__notst2                                         ;correct stack
0002A0BA <AmiBlitz3.ab2@13809>   MOVE.w ststfix(PC),D1
0002A0BE <AmiBlitz3.ab2@13810>    BSR.w writeword
0002A0C4 <AmiBlitz3.ab2@13813>   MOVE.w (A7)+,sbgot
0002A0CA <AmiBlitz3.ab2@13814>   MOVE.w stackpar,D1
0002A0CE <AmiBlitz3.ab2@13815>    BPL.w maineval__skip
0002A0D2 <AmiBlitz3.ab2@13816>    CMP.b #7,d2
0002A0D6 <AmiBlitz3.ab2@13817>    BEQ maineval__notst2_l1
0002A0DC <AmiBlitz3.ab2@13818>   TST.b funcparloop
0002A0E0 <AmiBlitz3.ab2@13819>   BEQ maineval__notst2_l1
0002A0E4 <AmiBlitz3.ab2@13820>   CMP.b #5,d2
0002A0E8 <AmiBlitz3.ab2@13821>   BNE maineval__notst2_skip
0002A0EE <AmiBlitz3.ab2@13822>   TST.b fpu
0002A0F2 <AmiBlitz3.ab2@13823>   BEQ maineval__notst2_skip
0002A0F8 <AmiBlitz3.ab2@13824>   MOVE.l #$f2066700,d1                                     ;fmove.s fp6,d6
0002A0FE <AmiBlitz3.ab2@13825>   JSR writelong
0002A102 <AmiBlitz3.ab2@13828>   MOVE.w #$c4ff,d1                                         ;savetemp+regnum
0002A108 <AmiBlitz3.ab2@13829>   ADD.w parnum,d1
0002A10E <AmiBlitz3.ab2@13830>   JSR Atokejsr
0002A114 <AmiBlitz3.ab2@13831>    TST.w dontwrite
0002A118 <AmiBlitz3.ab2@13832>    BNE maineval__notst2_l1
0002A11E <AmiBlitz3.ab2@13833>    MOVE.l data1start,d1
0002A124 <AmiBlitz3.ab2@13834>    MOVE.l destpointer,a4
0002A128 <AmiBlitz3.ab2@13835>    ADD.l d1,-4(a4)
0002A12E <AmiBlitz3.ab2@13836>    MOVE.l destpointer,d1
0002A130 <AmiBlitz3.ab2@13837>    SUBQ.l #4,d1
0002A136 <AmiBlitz3.ab2@13838>    SUB.l destbufferstart,d1
0002A138 <AmiBlitz3.ab2@13839>    MOVE.l d2,-(a7)
0002A13A <AmiBlitz3.ab2@13840>    MOVE.l d1,d2
0002A140 <AmiBlitz3.ab2@13841>    JSR addhunkoffset
0002A142 <AmiBlitz3.ab2@13842>    MOVE.l (a7)+,d2
0002A146 <AmiBlitz3.ab2@13843> BRA maineval__skip
0002A14C <AmiBlitz3.ab2@13846>   ADDQ.w #2,a2offset
0002A152 <AmiBlitz3.ab2@13847>   MOVE.w pushd0wd,D1
0002A156 <AmiBlitz3.ab2@13848>   CMP.w #$3,D2                                             ;write parameter to stack
0002A15A <AmiBlitz3.ab2@13849>    BCS.w maineval__ok
0002A160 <AmiBlitz3.ab2@13850>   ADDQ.w #2,a2offset
0002A166 <AmiBlitz3.ab2@13851>   TST.b fpu
0002A16A <AmiBlitz3.ab2@13852>   BEQ maineval__notst2_nofpu
0002A16E <AmiBlitz3.ab2@13853>   CMP.w #5,d2
0002A172 <AmiBlitz3.ab2@13854>   BNE maineval__notst2_nofpu
0002A174 <AmiBlitz3.ab2@13855>   MOVEQ #0,d1
0002A17A <AmiBlitz3.ab2@13856>   MOVE.w regnum,d1
0002A17C <AmiBlitz3.ab2@13857>   ASL.l #7,d1
0002A182 <AmiBlitz3.ab2@13858>   OR.l #$f2276400,d1
0002A186 <AmiBlitz3.ab2@13859>   BSR writelong
0002A18A <AmiBlitz3.ab2@13860> BRA maineval__skip
0002A190 <AmiBlitz3.ab2@13863>   MOVE.w pushd0l,D1
0002A196 <AmiBlitz3.ab2@13866>    OR.w regnum,D1
0002A19A <AmiBlitz3.ab2@13867>    BSR.w writeword                                         ;nat
0002A1A0 <AmiBlitz3.ab2@13870>   MOVE.w (A7)+,stackpar
0002A1A6 <AmiBlitz3.ab2@13871>   MOVE.w (A7)+,thisstuse
0002A1A8 <AmiBlitz3.ab2@13872> RTS
0002A1AA <AmiBlitz3.ab2@13875> thisstuse: Ds.w 1
0002A1AC <AmiBlitz3.ab2@13878> ststfix:   Dc.b $58,$4F                                    ;ADDQ.W  #4,A7
0002A1AE <AmiBlitz3.ab2@13879> pushut:    Dc.b $3F,$00                                    ;MOVE.W  D0,-(A7)
0002A1B2 <AmiBlitz3.ab2@13884>   BSR.w eval4
0002A1BC <AmiBlitz3.ab2@13885>   SUBI.l #$12,forthsp
0002A1BE <AmiBlitz3.ab2@13886> RTS
0002A1C0 <AmiBlitz3.ab2@13890>   MOVEQ.l #$01,D1
0002A1C4 <AmiBlitz3.ab2@13892>       MOVEA.l precsp(PC),A1
0002A1C6 <AmiBlitz3.ab2@13893>       MOVE.l A0,(A1)+
0002A1C8 <AmiBlitz3.ab2@13894>       MOVE.w D1,(A1)+
0002A1CE <AmiBlitz3.ab2@13895>       MOVE.l A1,precsp
0002A1D2 <AmiBlitz3.ab2@13896>    BSR.w calcloop
0002A1D4 <AmiBlitz3.ab2@13897>   TST.w D1
0002A1D8 <AmiBlitz3.ab2@13898>    BNE.w syntaxerr
0002A1DE <AmiBlitz3.ab2@13899>   SUBQ.l #6,precsp                                      ;pop the prec set up
0002A1E0 <AmiBlitz3.ab2@13900> RTS
0002A1E4 <AmiBlitz3.ab2@13905>   BSR.w JL_0_9C24
0002A1E8 <AmiBlitz3.ab2@13908>   MOVEA.l precsp(PC),A1
0002A1EA <AmiBlitz3.ab2@13909>   CMP.w -(A1),D1
0002A1EE <AmiBlitz3.ab2@13910>    BHI.w JL_0_9B0A
0002A1F0 <AmiBlitz3.ab2@13911> RTS
0002A1F4 <AmiBlitz3.ab2@13916>   MOVEA.l precsp(PC),A1
0002A1F6 <AmiBlitz3.ab2@13917>   MOVE.l A0,(A1)+
0002A1F8 <AmiBlitz3.ab2@13918>   MOVE.w D1,(A1)+
0002A1FE <AmiBlitz3.ab2@13919>   MOVE.l A1,precsp
0002A200 <AmiBlitz3.ab2@13920>   MOVE.w D2,-(A7)
0002A206 <AmiBlitz3.ab2@13921>   ADDQ.w #1,regnum
0002A20A <AmiBlitz3.ab2@13922>    BSR.w calcloop               ;constant optimizer
0002A210 <AmiBlitz3.ab2@13923>   SUBQ.w #1,regnum
0002A212 <AmiBlitz3.ab2@13924>   MOVE.w (A7)+,D3
0002A216 <AmiBlitz3.ab2@13925>   MOVEM.l D1/A0,-(A7)
0002A21A <AmiBlitz3.ab2@13926>    BEQ.w JL_0_9B2E
0002A21E <AmiBlitz3.ab2@13927>    BSR.w JL_0_9770
0002A222 <AmiBlitz3.ab2@13930>   BSR.w popprec
0002A226 <AmiBlitz3.ab2@13931>   BSR.w writecode
0002A22A <AmiBlitz3.ab2@13932>   MOVEA.l forthsp(PC),A0
0002A22E <AmiBlitz3.ab2@13933>   MOVE.w -$2(A0),D1
0002A232 <AmiBlitz3.ab2@13934>   OR.w -$14(A0),D1
0002A236 <AmiBlitz3.ab2@13935>   MOVE.w D1,-$14(A0)
0002A23A <AmiBlitz3.ab2@13936>    BNE.w JL_0_9C0E
0002A240 <AmiBlitz3.ab2@13937>   MOVE.w dontwrite,D1
0002A244 <AmiBlitz3.ab2@13938>    BNE.w JL_0_9C0E
0002A248 <AmiBlitz3.ab2@13939>    MOVEA.l -$24(A0),A0
0002A384 <AmiBlitz3.ab2@13941>  !newcalc
0002A388 <AmiBlitz3.ab2@13942>    BEQ 'l10
0002A38C <AmiBlitz3.ab2@13943>    MOVEA.l forthsp(PC),A0
0002A394 <AmiBlitz3.ab2@13944>    MOVE.w -$18(A0),lasta6
0002A39C <AmiBlitz3.ab2@13945>    MOVE.l -$1C(A0),lasta6
0002A3A0 <AmiBlitz3.ab2@13946>    MOVEA.l -$24(A0),A0
0002A3A6 <AmiBlitz3.ab2@13947>    MOVE.l A0,destpointer
0002A3AC <AmiBlitz3.ab2@13948>    MOVEA.l _mathffpbase,A6
0002A3B2 <AmiBlitz3.ab2@13949>    MOVEA.l ffplib,A1
0002A3B6 <AmiBlitz3.ab2@13950> BRA cont1
0002A3BA <AmiBlitz3.ab2@13953>   MOVE.w #$2000,D1
0002A3C0 <AmiBlitz3.ab2@13954>   OR.w regnum,D1
0002A3C4 <AmiBlitz3.ab2@13955>    BSR.w writeword
0002A3C6 <AmiBlitz3.ab2@13956>     MOVEQ #0,d1
0002A3CC <AmiBlitz3.ab2@13957>     MOVE.w regnum,D1
0002A3CE <AmiBlitz3.ab2@13958>     ASL.l #8,d1
0002A3D0 <AmiBlitz3.ab2@13959>     ASL.l #2,d1
0002A3D6 <AmiBlitz3.ab2@13960>     OR.l #$f2000000,d1
0002A3DA <AmiBlitz3.ab2@13961>     BSR writelong
0002A3DE <AmiBlitz3.ab2@13962>   MOVE.w #$4E75,D1
0002A3E2 <AmiBlitz3.ab2@13963>    BSR.w writeword
0002A3EA <AmiBlitz3.ab2@13964>   MOVE.w -$18(A0),lasta6
0002A3F2 <AmiBlitz3.ab2@13965>   MOVE.l -$1C(A0),lasta6
0002A3F6 <AmiBlitz3.ab2@13966>   MOVEA.l -$24(A0),A0
0002A3FC <AmiBlitz3.ab2@13967>   MOVE.l A0,destpointer
0002A400 <AmiBlitz3.ab2@13968>   MOVEM.l D2/A5,-(A7)
0002A406 <AmiBlitz3.ab2@13969>   MOVEA.l _mathffpbase,A6
0002A40C <AmiBlitz3.ab2@13970>   MOVEA.l ffplib,A1
0002A410 <AmiBlitz3.ab2@13971>   MOVE.w $A(A1),D0
0002A416 <AmiBlitz3.ab2@13972>   LEA _mathffpbase,A5
0002A418 <AmiBlitz3.ab2@13973>   SUBA.w D0,A5
0002A41E <AmiBlitz3.ab2@13974>   JSR Aclearcache                                          ;neg +
0002A424 <AmiBlitz3.ab2@13975>   CLR.l load_var_addr
0002A42A <AmiBlitz3.ab2@13976>   CLR.l imm_addr
0002A430 <AmiBlitz3.ab2@13977>   TST.w dontwrite
0002A434 <AmiBlitz3.ab2@13978>   BNE '1
0002A436 <AmiBlitz3.ab2@13979>   JSR (A0)                                                 ;calc constant inline expression
0002A43A <AmiBlitz3.ab2@13982>   MOVEM.l (A7)+,D2/A5
0002A440 <AmiBlitz3.ab2@13985>   MOVE.b d2,isconstantvalue
0002A446 <AmiBlitz3.ab2@13986>   MOVE.l d0,lastconstantvalue
0002A44C <AmiBlitz3.ab2@13987>   MOVE.w regnum,D1
0002A44E <AmiBlitz3.ab2@13988>   LSL.w #8,D1
0002A450 <AmiBlitz3.ab2@13989>   LSL.w #1,D1
0002A454 <AmiBlitz3.ab2@13990>   ORI.w #$203C,D1
0002A458 <AmiBlitz3.ab2@13991>   CMP.w #$3,D2
0002A45C <AmiBlitz3.ab2@13992>    BCC.w JL_0_9BCE
0002A460 <AmiBlitz3.ab2@13993>   ORI.w #$1000,D1
0002A464 <AmiBlitz3.ab2@13994>    BSR.w writeword
0002A466 <AmiBlitz3.ab2@13995>   MOVE.w D0,D1
0002A46A <AmiBlitz3.ab2@13996>    BSR.w writeword
0002A46E <AmiBlitz3.ab2@13997> BRA.w JL_0_9BD8
0002A474 <AmiBlitz3.ab2@14001>   TST.b iee                                                ;fpu constant
0002A478 <AmiBlitz3.ab2@14002>   BEQ 'l10
0002A47C <AmiBlitz3.ab2@14003>   CMP.b #5,d2
0002A480 <AmiBlitz3.ab2@14004>   BNE 'l10
0002A482 <AmiBlitz3.ab2@14005>   MOVEQ #0,d1
0002A488 <AmiBlitz3.ab2@14006>   MOVE.w regnum,D1
0002A48A <AmiBlitz3.ab2@14007>   ASL.l #7,d1
0002A490 <AmiBlitz3.ab2@14008>   OR.l #$f23c5400,d1
0002A494 <AmiBlitz3.ab2@14009>   BSR writelong
0002A496 <AmiBlitz3.ab2@14010>   SUBQ.l #8,a7
0002A49C <AmiBlitz3.ab2@14011>   fmove.d fp0,0(a7)
0002A49E <AmiBlitz3.ab2@14012>   MOVE.l (a7)+,d1
0002A4A2 <AmiBlitz3.ab2@14013>   BSR writelong
0002A4A4 <AmiBlitz3.ab2@14014>   MOVE.l (a7)+,d1
0002A4A8 <AmiBlitz3.ab2@14015>   BSR writelong
0002A4AC <AmiBlitz3.ab2@14016> BRA JL_0_9BD8
0002A4B0 <AmiBlitz3.ab2@14019>   BSR.w writeword
0002A4B2 <AmiBlitz3.ab2@14020>   MOVE.l D0,D1
0002A4B6 <AmiBlitz3.ab2@14021>   BSR.w writelong
0002A4BA <AmiBlitz3.ab2@14024>   MOVEA.l forthsp(PC),A0
0002A4BE <AmiBlitz3.ab2@14025>   MOVEA.l -$20(A0),A3
0002A4C4 <AmiBlitz3.ab2@14026>   MOVEA.l hunkoffsetbase,A2
0002A4CA <AmiBlitz3.ab2@14027>   MOVE.l A3,hunkoffsetbase
0002A4D0 <AmiBlitz3.ab2@14028>   MOVEA.l _execbase,A6
0002A4D2 <AmiBlitz3.ab2@14031>   CMPA.l A3,A2
0002A4D6 <AmiBlitz3.ab2@14032>   BEQ.w JL_0_9C0A
0002A4DC <AmiBlitz3.ab2@14033>   SUBQ.l #1,hunkoffsetcounter
0002A4DE <AmiBlitz3.ab2@14034>   MOVEA.l A2,A1
0002A4E0 <AmiBlitz3.ab2@14035>   MOVEA.l (A2),A2
0002A4E2 <AmiBlitz3.ab2@14036>   MOVEQ.l #$8,D0
0002A4E8 <AmiBlitz3.ab2@14037>   MOVE.l mempool2,a0
0002A4EC <AmiBlitz3.ab2@14038>    JSR _FreePooled(A6)
0002A4F0 <AmiBlitz3.ab2@14039> BRA.w JL_0_9BF0
0002A4F4 <AmiBlitz3.ab2@14043>   MOVEA.l forthsp(PC),A0
0002A4F8 <AmiBlitz3.ab2@14046>   LEA -$12(A0),A0
0002A4FE <AmiBlitz3.ab2@14047>   MOVE.l A0,forthsp
0002A502 <AmiBlitz3.ab2@14048>   MOVEM.l (A7)+,D1/A0
0002A506 <AmiBlitz3.ab2@14049>   BSR.w reget
0002A50A <AmiBlitz3.ab2@14050> BRA.w JL_0_9AFE
0002A50E <AmiBlitz3.ab2@14054>   BSR.w JL_0_A386
0002A510 <AmiBlitz3.ab2@14055>   TST.w d0
0002A514 <AmiBlitz3.ab2@14056>   BEQ JL_0_9C42
0002A518 <AmiBlitz3.ab2@14057>   CMP.b #",",d0
0002A51C <AmiBlitz3.ab2@14058>   BEQ JL_0_9C42
0002A520 <AmiBlitz3.ab2@14059>   CMP.b #"@",d0                                            ;expandline @@
0002A524 <AmiBlitz3.ab2@14060>   BEQ JL_0_9C42
0002A52A <AmiBlitz3.ab2@14061>   LEA operators,A0
0002A52C <AmiBlitz3.ab2@14064>    TST.w (A0)
0002A530 <AmiBlitz3.ab2@14065>    BEQ.w JL_0_9C42
0002A532 <AmiBlitz3.ab2@14066>   CMP.w (A0),D0
0002A536 <AmiBlitz3.ab2@14067>    BEQ.w JL_0_9C46a
0002A53A <AmiBlitz3.ab2@14068>   LEA $20(A0),A0
0002A53E <AmiBlitz3.ab2@14069> BRA.w JL_0_9C2E
0002A540 <AmiBlitz3.ab2@14073>   MOVEQ.l #$00,D1
0002A542 <AmiBlitz3.ab2@14074> RTS
0002A546 <AmiBlitz3.ab2@14078>   CMP.w #$3C,D0
0002A54A <AmiBlitz3.ab2@14079>    BNE.w JL_0_9C70
0002A54E <AmiBlitz3.ab2@14080>    BSR.w get1bytemain
0002A552 <AmiBlitz3.ab2@14081>   CMP.w #$3D,D0
0002A556 <AmiBlitz3.ab2@14082>    BNE.w JL_0_9C64
0002A55C <AmiBlitz3.ab2@14083>   LEA ople,A0
0002A560 <AmiBlitz3.ab2@14084> BRA.w JL_0_9CCA
0002A564 <AmiBlitz3.ab2@14088>   CMP.w #$3E,D0
0002A568 <AmiBlitz3.ab2@14089>    BNE.w JL_0_9C96
0002A56C <AmiBlitz3.ab2@14090> BRA.w JL_0_9CC4
0002A570 <AmiBlitz3.ab2@14094>   CMP.w #$3E,D0
0002A574 <AmiBlitz3.ab2@14095>    BNE.w JL_0_9C9E
0002A578 <AmiBlitz3.ab2@14096>    BSR.w get1bytemain
0002A57C <AmiBlitz3.ab2@14097>   CMP.w #$3D,D0
0002A580 <AmiBlitz3.ab2@14098>    BNE.w JL_0_9C8E
0002A586 <AmiBlitz3.ab2@14099>   LEA opge,A0
0002A58A <AmiBlitz3.ab2@14100> BRA.w JL_0_9CCA
0002A58E <AmiBlitz3.ab2@14104>   CMP.w #$3C,D0
0002A592 <AmiBlitz3.ab2@14105>    BEQ.w JL_0_9CC4
0002A59C <AmiBlitz3.ab2@14109>     MOVE.w oldqflag,instringon
0002A5A2 <AmiBlitz3.ab2@14110>     MOVEA.l lastsourcepos,A5
0002A5A6 <AmiBlitz3.ab2@14111> BRA.w JL_0_9CCA
0002A5AA <AmiBlitz3.ab2@14115>   CMP.w #$3D,D0
0002A5AE <AmiBlitz3.ab2@14116>    BNE.w JL_0_9CCA
0002A5B2 <AmiBlitz3.ab2@14117>    BSR.w get1bytemain
0002A5B6 <AmiBlitz3.ab2@14118>   CMP.w #$3E,D0
0002A5BA <AmiBlitz3.ab2@14119>    BNE.w JL_0_9CBC
0002A5C0 <AmiBlitz3.ab2@14120>   LEA opge,A0
0002A5C4 <AmiBlitz3.ab2@14121> BRA.w JL_0_9CCA
0002A5C8 <AmiBlitz3.ab2@14125>   CMP.w #$3C,D0
0002A5CC <AmiBlitz3.ab2@14126>   BNE.w JL_0_9C96
0002A5D2 <AmiBlitz3.ab2@14129>   LEA opne,A0
0002A5D6 <AmiBlitz3.ab2@14132>   MOVE.w $1E(A0),D1
0002A5D8 <AmiBlitz3.ab2@14133> RTS
0002A5DA <AmiBlitz3.ab2@14140>   MOVE.w d2,d1
0002A5DC <AmiBlitz3.ab2@14141>   SUBQ.w #1,D1
0002A5E0 <AmiBlitz3.ab2@14142>    BMI.w illoperr
0002A5E2 <AmiBlitz3.ab2@14143>   LSL.w #2,D1
0002A5E6 <AmiBlitz3.ab2@14144>   MOVE.l $2(A0,D1.W),D1
0002A5EA <AmiBlitz3.ab2@14145>    BEQ.w illoperr
0002A5EC <AmiBlitz3.ab2@14146>   MOVEA.l D1,A0
0002A5EE <AmiBlitz3.ab2@14149> JMP (A0)
0002A5F2 <AmiBlitz3.ab2@14165>   MOVEA.l precsp(PC),A1
0002A5F8 <AmiBlitz3.ab2@14166>   CMPA.l #precstackf,A1
0002A5FC <AmiBlitz3.ab2@14167>    BCC.w pserr
0002A5FE <AmiBlitz3.ab2@14168>   MOVE.w -(A1),D1
0002A600 <AmiBlitz3.ab2@14169>   MOVEA.l -(A1),A0
0002A606 <AmiBlitz3.ab2@14170>   MOVE.l A1,precsp
0002A608 <AmiBlitz3.ab2@14171> RTS
0002A60C <AmiBlitz3.ab2@14174> precsp:      Dc.l precstack
0002A708 <AmiBlitz3.ab2@14175> precstack:   Ds.l 63                                       ;ds 6*32 org source   ;Lotsa Room?
0002A78C <AmiBlitz3.ab2@14176>              Ds.l 33
0002A78E <AmiBlitz3.ab2@14182> mseq:  SEQ D0
0002A790 <AmiBlitz3.ab2@14183> msne:    SNE D0
0002A792 <AmiBlitz3.ab2@14184> mslt:    SLT D0
0002A794 <AmiBlitz3.ab2@14185> msle:    SLE D0
0002A796 <AmiBlitz3.ab2@14186> msgt:    SGT D0
0002A798 <AmiBlitz3.ab2@14187> msge:    SGE D0
0002A79A <AmiBlitz3.ab2@14189> cmp0:    CMP.b D0,D0
0002A79C <AmiBlitz3.ab2@14190> cmp1:    CMP.w D0,D0
0002A79E <AmiBlitz3.ab2@14191> cmp2:    CMP.l D0,D0
0002A7A2 <AmiBlitz3.ab2@14195>   MOVE.w cmp0(PC),D1
0002A7A6 <AmiBlitz3.ab2@14196> BRA.w doeqcmp2                                            ;writecompare
0002A7AA <AmiBlitz3.ab2@14200>   MOVE.w cmp0(PC),D1
0002A7AE <AmiBlitz3.ab2@14201> BRA.w donecmp2
0002A7B2 <AmiBlitz3.ab2@14205>   MOVE.w cmp0(PC),D1
0002A7B6 <AmiBlitz3.ab2@14206> BRA.w doltcmp2
0002A7BA <AmiBlitz3.ab2@14210>   MOVE.w cmp0(PC),D1
0002A7BE <AmiBlitz3.ab2@14211> BRA.w dolecmp2
0002A7C2 <AmiBlitz3.ab2@14215>   MOVE.w cmp0(PC),D1
0002A7C6 <AmiBlitz3.ab2@14216> BRA.w dogtcmp2
0002A7CA <AmiBlitz3.ab2@14221>   MOVE.w cmp0(PC),D1
0002A7CE <AmiBlitz3.ab2@14222> BRA.w dogecmp2
0002A7D2 <AmiBlitz3.ab2@14226>   MOVE.w cmp1(PC),D1
0002A7D6 <AmiBlitz3.ab2@14227> BRA.w doeqcmp2
0002A7DA <AmiBlitz3.ab2@14231>   MOVE.w cmp1(PC),D1
0002A7DE <AmiBlitz3.ab2@14232> BRA.w donecmp2
0002A7E2 <AmiBlitz3.ab2@14236>   MOVE.w cmp1(PC),D1
0002A7E6 <AmiBlitz3.ab2@14237> BRA.w doltcmp2
0002A7EA <AmiBlitz3.ab2@14241>   MOVE.w cmp1(PC),D1
0002A7EE <AmiBlitz3.ab2@14242> BRA.w dolecmp2
0002A7F2 <AmiBlitz3.ab2@14246>   MOVE.w cmp1(PC),D1
0002A7F6 <AmiBlitz3.ab2@14247> BRA.w dogtcmp2
0002A7FA <AmiBlitz3.ab2@14252>   MOVE.w cmp1(PC),D1
0002A7FE <AmiBlitz3.ab2@14253> BRA.w dogecmp2
0002A802 <AmiBlitz3.ab2@14257>   MOVE.w cmp2(PC),D1                                   ;writecomparelong
0002A806 <AmiBlitz3.ab2@14258> BRA doeqcmp2
0002A80A <AmiBlitz3.ab2@14261>   MOVE.w cmp2(PC),D1
0002A80E <AmiBlitz3.ab2@14262> BRA donecmp2
0002A812 <AmiBlitz3.ab2@14266>   MOVE.w cmp2(PC),D1
0002A816 <AmiBlitz3.ab2@14267> BRA.w doltcmp2
0002A81A <AmiBlitz3.ab2@14271>   MOVE.w cmp2(PC),D1
0002A81E <AmiBlitz3.ab2@14272> BRA.w dolecmp2
0002A822 <AmiBlitz3.ab2@14276>   MOVE.w cmp2(PC),D1
0002A826 <AmiBlitz3.ab2@14277> BRA.w dogtcmp2
0002A82A <AmiBlitz3.ab2@14281>   MOVE.w cmp2(PC),D1
0002A82E <AmiBlitz3.ab2@14282> BRA.w dogecmp2
0002A830 <AmiBlitz3.ab2@14285> cfregat:  Ds.w 1
0002A836 <AmiBlitz3.ab2@14289>   MOVE.w D1,libjsr+2
0002A83A <AmiBlitz3.ab2@14290>    BSR.w JL_0_AD40
0002A83C <AmiBlitz3.ab2@14291>   MOVE.l D4,D1
0002A840 <AmiBlitz3.ab2@14292>    BSR.w JL_0_AD38
0002A844 <AmiBlitz3.ab2@14293>   MOVE.w #$C900,D1
0002A848 <AmiBlitz3.ab2@14294>    BSR.w Atokejsr
0002A84C <AmiBlitz3.ab2@14295>    BSR.w JL_0_A352
0002A852 <AmiBlitz3.ab2@14296>   MOVE.l libjsr,D1
0002A856 <AmiBlitz3.ab2@14297>    BSR.w writelong
0002A860 <AmiBlitz3.ab2@14298>   MOVE.w regnum,cfregat
0002A866 <AmiBlitz3.ab2@14299>   CLR.w regnum
0002A868 <AmiBlitz3.ab2@14300> RTS
0002A872 <AmiBlitz3.ab2@14304>   MOVE.w cfregat,regnum
0002A876 <AmiBlitz3.ab2@14305>    BSR.w JL_0_A36E
0002A878 <AmiBlitz3.ab2@14306>   MOVE.l D5,D1
0002A87C <AmiBlitz3.ab2@14307> BRA.w JL_0_AD38
0002A87E <AmiBlitz3.ab2@14311>    MOVEQ.l #-$2A,D1
0002A884 <AmiBlitz3.ab2@14312>    TST.b fpu
0002A888 <AmiBlitz3.ab2@14313>    BEQ do_equal_float__nofpu
0002A88A <AmiBlitz3.ab2@14314>    MOVEQ #0,d1
0002A890 <AmiBlitz3.ab2@14315>    MOVE.w regnum,d1
0002A892 <AmiBlitz3.ab2@14316>    MOVE.l d1,d2
0002A894 <AmiBlitz3.ab2@14317>    ASL.l #7,d1
0002A896 <AmiBlitz3.ab2@14318>    ADDQ  #1,d2
0002A898 <AmiBlitz3.ab2@14319>    ASL.l #8,d2
0002A89A <AmiBlitz3.ab2@14320>    ASL.l #2,d2
0002A89C <AmiBlitz3.ab2@14321>    OR.l d2,d1
0002A8A2 <AmiBlitz3.ab2@14322>    OR.l #$f2000038,d1
0002A8A8 <AmiBlitz3.ab2@14323>    JSR writelong
0002A8AC <AmiBlitz3.ab2@14324>    MOVE.w #$f240,d1
0002A8B2 <AmiBlitz3.ab2@14325>    OR.w regnum,d1
0002A8B6 <AmiBlitz3.ab2@14326>    BSR writeword
0002A8B8 <AmiBlitz3.ab2@14327>    MOVEQ.l #1,d2
0002A8BC <AmiBlitz3.ab2@14328>    MOVE.w #1,d1                                            ;fpu comp fseq
0002A8C0 <AmiBlitz3.ab2@14329>    BSR writeword
0002A8C2 <AmiBlitz3.ab2@14330> RTS
0002A8C6 <AmiBlitz3.ab2@14333>    BSR.w docflib
0002A8CA <AmiBlitz3.ab2@14334>    BSR.w doeqcmp
0002A8CE <AmiBlitz3.ab2@14335> BRA.w docflib2
0002A8D0 <AmiBlitz3.ab2@14339>   MOVEQ.l #-$2A,D1
0002A8D6 <AmiBlitz3.ab2@14340>   TST.b fpu
0002A8DA <AmiBlitz3.ab2@14341>    BEQ do_not_equal_float__nofpu
0002A8DC <AmiBlitz3.ab2@14342>    MOVEQ #0,d1
0002A8E2 <AmiBlitz3.ab2@14343>    MOVE.w regnum,d1
0002A8E4 <AmiBlitz3.ab2@14344>    MOVE.l d1,d2
0002A8E6 <AmiBlitz3.ab2@14345>    ASL.l #7,d1
0002A8E8 <AmiBlitz3.ab2@14346>    ADDQ  #1,d2
0002A8EA <AmiBlitz3.ab2@14347>    ASL.l #8,d2
0002A8EC <AmiBlitz3.ab2@14348>    ASL.l #2,d2
0002A8EE <AmiBlitz3.ab2@14349>    OR.l d2,d1
0002A8F4 <AmiBlitz3.ab2@14350>    OR.l #$f2000038,d1
0002A8FA <AmiBlitz3.ab2@14351>    JSR writelong
0002A8FE <AmiBlitz3.ab2@14352>    MOVE.w #$f240,d1
0002A904 <AmiBlitz3.ab2@14353>    OR.w regnum,d1
0002A908 <AmiBlitz3.ab2@14354>    BSR writeword
0002A90E <AmiBlitz3.ab2@14355>    MOVE.l #1,d2
0002A912 <AmiBlitz3.ab2@14356>    MOVE.w #$e,d1                                           ;fpu comp fsne
0002A916 <AmiBlitz3.ab2@14357>    BSR writeword
0002A918 <AmiBlitz3.ab2@14358> RTS
0002A91C <AmiBlitz3.ab2@14361>    BSR.w docflib
0002A920 <AmiBlitz3.ab2@14362>    BSR.w donecmp
0002A924 <AmiBlitz3.ab2@14363> BRA.w docflib2
0002A926 <AmiBlitz3.ab2@14367>   MOVEQ.l #-$2A,D1
0002A92C <AmiBlitz3.ab2@14368>     TST.b fpu
0002A930 <AmiBlitz3.ab2@14369>    BEQ do_littler_float__nofpu
0002A932 <AmiBlitz3.ab2@14370>    MOVEQ #0,d1
0002A938 <AmiBlitz3.ab2@14371>    MOVE.w regnum,d1
0002A93A <AmiBlitz3.ab2@14372>    MOVE.l d1,d2
0002A93C <AmiBlitz3.ab2@14373>    ASL.l #7,d1
0002A93E <AmiBlitz3.ab2@14374>    ADDQ  #1,d2
0002A940 <AmiBlitz3.ab2@14375>    ASL.l #8,d2
0002A942 <AmiBlitz3.ab2@14376>    ASL.l #2,d2
0002A944 <AmiBlitz3.ab2@14377>    OR.l d2,d1
0002A94A <AmiBlitz3.ab2@14378>    OR.l #$f2000038,d1
0002A950 <AmiBlitz3.ab2@14379>    JSR writelong
0002A954 <AmiBlitz3.ab2@14380>    MOVE.w #$f240,d1
0002A95A <AmiBlitz3.ab2@14381>    OR.w regnum,d1
0002A95E <AmiBlitz3.ab2@14382>    BSR writeword
0002A964 <AmiBlitz3.ab2@14383>    MOVE.l #$1,d2
0002A968 <AmiBlitz3.ab2@14384>    MOVE.w #$14,d1                                          ;fpu comp fslt
0002A96C <AmiBlitz3.ab2@14385>    BSR writeword
0002A96E <AmiBlitz3.ab2@14386> RTS
0002A972 <AmiBlitz3.ab2@14389>    BSR.w docflib
0002A976 <AmiBlitz3.ab2@14390>    BSR.w doltcmp
0002A97A <AmiBlitz3.ab2@14391> BRA.w docflib2
0002A97C <AmiBlitz3.ab2@14395>   MOVEQ.l #-$2A,D1
0002A982 <AmiBlitz3.ab2@14396>   TST.b fpu
0002A986 <AmiBlitz3.ab2@14397>    BEQ do_littler_equal_float__nofpu
0002A988 <AmiBlitz3.ab2@14398>    MOVEQ #0,d1
0002A98E <AmiBlitz3.ab2@14399>    MOVE.w regnum,d1
0002A990 <AmiBlitz3.ab2@14400>    MOVE.l d1,d2
0002A992 <AmiBlitz3.ab2@14401>    ASL.l #7,d1
0002A994 <AmiBlitz3.ab2@14402>    ADDQ  #1,d2
0002A996 <AmiBlitz3.ab2@14403>    ASL.l #8,d2
0002A998 <AmiBlitz3.ab2@14404>    ASL.l #2,d2
0002A99A <AmiBlitz3.ab2@14405>    OR.l d2,d1
0002A9A0 <AmiBlitz3.ab2@14406>    OR.l #$f2000038,d1
0002A9A6 <AmiBlitz3.ab2@14407>    JSR writelong
0002A9AA <AmiBlitz3.ab2@14408>    MOVE.w #$f240,d1
0002A9B0 <AmiBlitz3.ab2@14409>    OR.w regnum,d1
0002A9B4 <AmiBlitz3.ab2@14410>    BSR writeword
0002A9BA <AmiBlitz3.ab2@14411>    MOVE.l #1,d2
0002A9BE <AmiBlitz3.ab2@14412>    MOVE.w #$15,d1                                          ;fpu comp fsle
0002A9C2 <AmiBlitz3.ab2@14413>    BSR writeword
0002A9C4 <AmiBlitz3.ab2@14414> RTS
0002A9C8 <AmiBlitz3.ab2@14417>    BSR.w docflib
0002A9CC <AmiBlitz3.ab2@14418>    BSR.w dolecmp
0002A9D0 <AmiBlitz3.ab2@14419> BRA.w docflib2
0002A9D2 <AmiBlitz3.ab2@14423>   MOVEQ.l #-$2A,D1
0002A9D8 <AmiBlitz3.ab2@14424>    TST.b fpu
0002A9DC <AmiBlitz3.ab2@14425>    BEQ do_greater_float__nofpu
0002A9DE <AmiBlitz3.ab2@14426>     MOVEQ #0,d1
0002A9E4 <AmiBlitz3.ab2@14427>    MOVE.w regnum,d1
0002A9E6 <AmiBlitz3.ab2@14428>    MOVE.l d1,d2
0002A9E8 <AmiBlitz3.ab2@14429>    ASL.l #7,d1
0002A9EA <AmiBlitz3.ab2@14430>    ADDQ  #1,d2
0002A9EC <AmiBlitz3.ab2@14431>    ASL.l #8,d2
0002A9EE <AmiBlitz3.ab2@14432>    ASL.l #2,d2
0002A9F0 <AmiBlitz3.ab2@14433>    OR.l d2,d1
0002A9F6 <AmiBlitz3.ab2@14434>    OR.l #$f2000038,d1
0002A9FC <AmiBlitz3.ab2@14435>    JSR writelong
0002AA00 <AmiBlitz3.ab2@14436>    MOVE.w #$f240,d1
0002AA06 <AmiBlitz3.ab2@14437>    OR.w regnum,d1
0002AA0A <AmiBlitz3.ab2@14438>    BSR writeword
0002AA10 <AmiBlitz3.ab2@14439>    MOVE.l #1,d2
0002AA14 <AmiBlitz3.ab2@14440>    MOVE.w #$12,d1                                          ;fpu comp fsgt
0002AA18 <AmiBlitz3.ab2@14441>    BSR writeword
0002AA1A <AmiBlitz3.ab2@14442> RTS
0002AA1E <AmiBlitz3.ab2@14445>    BSR.w docflib
0002AA22 <AmiBlitz3.ab2@14446>    BSR.w dogtcmp
0002AA26 <AmiBlitz3.ab2@14447> BRA.w docflib2
0002AA28 <AmiBlitz3.ab2@14451>   MOVEQ.l #-$2A,D1
0002AA2E <AmiBlitz3.ab2@14452>  TST.b fpu
0002AA32 <AmiBlitz3.ab2@14453>    BEQ do_greater_equal_float__nofpu
0002AA34 <AmiBlitz3.ab2@14454>    MOVEQ #0,d1
0002AA3A <AmiBlitz3.ab2@14455>    MOVE.w regnum,d1
0002AA3C <AmiBlitz3.ab2@14456>    MOVE.l d1,d2
0002AA3E <AmiBlitz3.ab2@14457>    ASL.l #7,d1
0002AA40 <AmiBlitz3.ab2@14458>    ADDQ  #1,d2
0002AA42 <AmiBlitz3.ab2@14459>    ASL.l #8,d2
0002AA44 <AmiBlitz3.ab2@14460>    ASL.l #2,d2
0002AA46 <AmiBlitz3.ab2@14461>    OR.l d2,d1
0002AA4C <AmiBlitz3.ab2@14462>    OR.l #$f2000038,d1
0002AA52 <AmiBlitz3.ab2@14463>    JSR writelong
0002AA56 <AmiBlitz3.ab2@14464>    MOVE.w #$f240,d1
0002AA5C <AmiBlitz3.ab2@14465>    OR.w regnum,d1
0002AA60 <AmiBlitz3.ab2@14466>    BSR writeword
0002AA66 <AmiBlitz3.ab2@14467>    MOVE.l #1,d2
0002AA6A <AmiBlitz3.ab2@14468>    MOVE.w #$13,d1                                          ;fpu comp fsge
0002AA6E <AmiBlitz3.ab2@14469>    BSR writeword
0002AA70 <AmiBlitz3.ab2@14470> RTS
0002AA74 <AmiBlitz3.ab2@14473>    BSR.w docflib
0002AA78 <AmiBlitz3.ab2@14474>    BSR.w dogecmp
0002AA7C <AmiBlitz3.ab2@14475> BRA.w docflib2
0002AA82 <AmiBlitz3.ab2@14480>   MOVE.l #$CE00,D1
0002AA88 <AmiBlitz3.ab2@14481>    MOVE.l d1,lastinstruction
0002AA8C <AmiBlitz3.ab2@14482>    BSR.w Atokejsr
0002AA90 <AmiBlitz3.ab2@14483> BRA.w doeqcmp
0002AA96 <AmiBlitz3.ab2@14487>   MOVE.l #$CE00,D1
0002AA9C <AmiBlitz3.ab2@14488>    MOVE.l d1,lastinstruction
0002AAA0 <AmiBlitz3.ab2@14489>    BSR.w Atokejsr
0002AAA4 <AmiBlitz3.ab2@14490> BRA.w donecmp
0002AAAA <AmiBlitz3.ab2@14494>   MOVE.l #$CE00,D1
0002AAB0 <AmiBlitz3.ab2@14495>    MOVE.l d1,lastinstruction
0002AAB4 <AmiBlitz3.ab2@14496>    BSR.w Atokejsr
0002AAB8 <AmiBlitz3.ab2@14497> BRA.w doltcmp
0002AABE <AmiBlitz3.ab2@14501>   MOVE.l #$CE00,D1
0002AAC4 <AmiBlitz3.ab2@14502>    MOVE.l d1,lastinstruction
0002AAC8 <AmiBlitz3.ab2@14503>    BSR.w Atokejsr
0002AACC <AmiBlitz3.ab2@14504> BRA.w dolecmp
0002AAD2 <AmiBlitz3.ab2@14508>   MOVE.l #$CE00,D1
0002AAD8 <AmiBlitz3.ab2@14509>    MOVE.l d1,lastinstruction
0002AADC <AmiBlitz3.ab2@14510>    BSR.w Atokejsr
0002AAE0 <AmiBlitz3.ab2@14511> BRA.w dogtcmp
0002AAE6 <AmiBlitz3.ab2@14515>   MOVE.l #$CE00,D1
0002AAEC <AmiBlitz3.ab2@14516>    MOVE.l d1,lastinstruction
0002AAF0 <AmiBlitz3.ab2@14517>    BSR.w Atokejsr
0002AAF4 <AmiBlitz3.ab2@14518> BRA.w dogecmp
0002AAFA <AmiBlitz3.ab2@14523>   TST.b fast                                               ;compare
0002AAFE <AmiBlitz3.ab2@14524>   BEQ cmpit__org
0002AB04 <AmiBlitz3.ab2@14528>   MOVE.l destpointer,a0
0002AB0A <AmiBlitz3.ab2@14529>   SUB.l imm_addr,a0
0002AB10 <AmiBlitz3.ab2@14530>   CMP.l #6,a0
0002AB14 <AmiBlitz3.ab2@14531>   BNE cmpit__l11
0002AB1A <AmiBlitz3.ab2@14532>   MOVE.l imm_addr,a0
0002AB22 <AmiBlitz3.ab2@14533>   CMP.w #$223c,imm_addr
0002AB26 <AmiBlitz3.ab2@14534>   BNE cmpit__org
0002AB2C <AmiBlitz3.ab2@14535>   ADD.w #$8e80,-6(a4)
0002AB32 <AmiBlitz3.ab2@14538>   CLR.l imm_addr
0002AB34 <AmiBlitz3.ab2@14539> RTS
0002AB3A <AmiBlitz3.ab2@14542>   CMP.l #4,a0
0002AB3E <AmiBlitz3.ab2@14543>   BNE cmpit__l10
0002AB42 <AmiBlitz3.ab2@14544>   CMP.b #2,d3
0002AB46 <AmiBlitz3.ab2@14545>   BNE cmpit__l11b
0002AB4C <AmiBlitz3.ab2@14546>   ADD.w #$7e40,-4(a4)
0002AB4E <AmiBlitz3.ab2@14547> RTS
0002AB54 <AmiBlitz3.ab2@14550>  ADD.w #$7e00,-4(a4)
0002AB56 <AmiBlitz3.ab2@14551> RTS
0002AB5C <AmiBlitz3.ab2@14554>    MOVE.l destpointer,a0
0002AB62 <AmiBlitz3.ab2@14555>    SUB.l load_var_addr,a0
0002AB66 <AmiBlitz3.ab2@14556>    CMP.w #4,a0
0002AB6A <AmiBlitz3.ab2@14557>    BNE cmpit__org
0002AB6E <AmiBlitz3.ab2@14558>    CMP.b #3,d3
0002AB72 <AmiBlitz3.ab2@14559>    BCS cmpit__lv1
0002AB78 <AmiBlitz3.ab2@14560>    CLR.l load_var_addr
0002AB7E <AmiBlitz3.ab2@14561>    ADD.w #$9080-$200,-4(a4)
0002AB80 <AmiBlitz3.ab2@14562> RTS
0002AB84 <AmiBlitz3.ab2@14565>   CMP.b #2,d3
0002AB88 <AmiBlitz3.ab2@14566>    BNE cmpit__org
0002AB8E <AmiBlitz3.ab2@14567>    CLR.l load_var_addr
0002AB94 <AmiBlitz3.ab2@14568>    ADD.w #$8040-$200,-4(a4)
0002AB96 <AmiBlitz3.ab2@14569> RTS
0002AB9C <AmiBlitz3.ab2@14572>   MOVE.w regnum,D3
0002AB9E <AmiBlitz3.ab2@14573>   OR.w D3,D1
0002ABA0 <AmiBlitz3.ab2@14574>   LSL.w #8,D3
0002ABA2 <AmiBlitz3.ab2@14575>   LSL.w #1,D3
0002ABA4 <AmiBlitz3.ab2@14576>   OR.w D3,D1
0002ABA6 <AmiBlitz3.ab2@14577>   ADDQ.w #1,D1
0002ABAA <AmiBlitz3.ab2@14578> BRA.w writeword
0002ABAE <AmiBlitz3.ab2@14582>    BSR.w cmpit
0002ABB2 <AmiBlitz3.ab2@14585>    MOVE.w mseq(PC),D1
0002ABB6 <AmiBlitz3.ab2@14586> BRA.w cpoke
0002ABBA <AmiBlitz3.ab2@14590>   BSR.w cmpit
0002ABBE <AmiBlitz3.ab2@14593>   MOVE.w msne(PC),D1
0002ABC2 <AmiBlitz3.ab2@14594> BRA.w cpoke
0002ABC6 <AmiBlitz3.ab2@14598>   BSR.w cmpit
0002ABCA <AmiBlitz3.ab2@14601>    MOVE.w mslt(PC),D1
0002ABCE <AmiBlitz3.ab2@14602> BRA.w cpoke
0002ABD2 <AmiBlitz3.ab2@14606>    BSR.w cmpit
0002ABD6 <AmiBlitz3.ab2@14609>    MOVE.w msle(PC),D1
0002ABDA <AmiBlitz3.ab2@14610> BRA.w cpoke
0002ABDE <AmiBlitz3.ab2@14614>    BSR.w cmpit
0002ABE2 <AmiBlitz3.ab2@14617>    MOVE.w msgt(PC),D1
0002ABE6 <AmiBlitz3.ab2@14618> BRA.w cpoke
0002ABEA <AmiBlitz3.ab2@14622>   BSR.w cmpit
0002ABEE <AmiBlitz3.ab2@14625>    MOVE.w msge(PC),D1
0002ABF4 <AmiBlitz3.ab2@14628>    OR.w regnum,D1
0002ABF8 <AmiBlitz3.ab2@14629>    CMP.w #5,d2
0002ABFC <AmiBlitz3.ab2@14630>    BNE cpoke__nod0
0002AC00 <AmiBlitz3.ab2@14631>    CMP.w #5,d3
0002AC04 <AmiBlitz3.ab2@14632>    BNE cpoke__nod0
0002AC06 <AmiBlitz3.ab2@14633>    MOVE.l d1,-(a7)
0002AC0C <AmiBlitz3.ab2@14634>    MOVE.l #$44004a00,d1                                    ;68k neg.b:tst.b
0002AC10 <AmiBlitz3.ab2@14635>    BSR writelong
0002AC12 <AmiBlitz3.ab2@14636>    MOVE.l (a7)+,d1
0002AC16 <AmiBlitz3.ab2@14639>    BSR.w writeword                                         ;writeseq
0002AC18 <AmiBlitz3.ab2@14640>    MOVEQ.l #1,d2
0002AC1E <AmiBlitz3.ab2@14641>    MOVE.l lasttoken,d1
0002AC24 <AmiBlitz3.ab2@14642>     TST.b fast
0002AC28 <AmiBlitz3.ab2@14643>     BEQ.s cpoke__l11
0002AC2E <AmiBlitz3.ab2@14644>    CMP.l #$800b,d1
0002AC32 <AmiBlitz3.ab2@14645>    BEQ cpoke__l10
0002AC36 <AmiBlitz3.ab2@14648>   MOVE.w #$4880,D1                                         ;ext.w D regat
0002AC3C <AmiBlitz3.ab2@14649>   OR.w regnum,D1
0002AC40 <AmiBlitz3.ab2@14650>    BSR.w writeword                                         ;writeext.w
0002AC42 <AmiBlitz3.ab2@14651>   MOVEQ.l #$02,D2                                          ;type now WORD!
0002AC44 <AmiBlitz3.ab2@14654> RTS
0002AC48 <AmiBlitz3.ab2@14659>   MOVE.w #$D040,D1
0002AC4A <AmiBlitz3.ab2@14660>   MOVEQ.l #$02,D2                                          ;writeaddword   ;now a word
0002AC4E <AmiBlitz3.ab2@14661> BRA.w doplus2
0002AC52 <AmiBlitz3.ab2@14665>   MOVE.w #$D040,D1
0002AC54 <AmiBlitz3.ab2@14666>   MOVEQ.l #$03,D2                                          ;now a long
0002AC58 <AmiBlitz3.ab2@14667>    BSR.w doplus2
0002AC5C <AmiBlitz3.ab2@14668> BRA.w convert_word_to_long
0002AC60 <AmiBlitz3.ab2@14672>   MOVE.w #$D080,D1                                         ;writeaddlong
0002AC62 <AmiBlitz3.ab2@14675>   MOVE.w d1,a1
0002AC68 <AmiBlitz3.ab2@14676>   TST.b fast
0002AC6C <AmiBlitz3.ab2@14677>   BEQ doplus2__l10
0002AC6E <AmiBlitz3.ab2@14681>   ASR.w #8,d1
0002AC72 <AmiBlitz3.ab2@14682>   CMP.b #$90,d1
0002AC76 <AmiBlitz3.ab2@14683>   BEQ doplus2__sub1
0002AC7A <AmiBlitz3.ab2@14684>   CMP.b #$d0,d1
0002AC7E <AmiBlitz3.ab2@14685>   BNE doplus2__l10
0002AC82 <AmiBlitz3.ab2@14686>   CMP.b #3,d3
0002AC86 <AmiBlitz3.ab2@14687>   BCS doplus2__lq10
0002AC8C <AmiBlitz3.ab2@14688>   TST.b quickadd
0002AC92 <AmiBlitz3.ab2@14692>    MOVE.l destpointer,a0
0002AC98 <AmiBlitz3.ab2@14693>    CLR.b quickadd
0002AC9E <AmiBlitz3.ab2@14694>    CLR.l load_var_addr
0002ACA4 <AmiBlitz3.ab2@14695>    SUB.l imm_addr,a0
0002ACA8 <AmiBlitz3.ab2@14696>    CMP.w #6,a0
0002ACAC <AmiBlitz3.ab2@14697>    BEQ doplus2__li10
0002ACB0 <AmiBlitz3.ab2@14698>    CMP.w #4,a0
0002ACB4 <AmiBlitz3.ab2@14699>    BNE.s doplus2__li1
0002ACBA <AmiBlitz3.ab2@14700>    CLR.l imm_addr
0002ACC0 <AmiBlitz3.ab2@14701>    ADD.w #$a040-$200,-4(a4)
0002ACC2 <AmiBlitz3.ab2@14702> RTS
0002ACC4 <AmiBlitz3.ab2@14705>    MOVE.l a4,a0
0002ACCA <AmiBlitz3.ab2@14706>    SUB.l load_var_addr,a0
0002ACD0 <AmiBlitz3.ab2@14707>    CMP.l #$a,a0
0002ACD4 <AmiBlitz3.ab2@14708>    BNE doplus2__l10e
0002ACDA <AmiBlitz3.ab2@14709>    CLR.l load_var_addr
0002ACDE <AmiBlitz3.ab2@14710>    MOVE.w -$8(a4),d1
0002ACE4 <AmiBlitz3.ab2@14711>    MOVE.l -$4(a4),-$8(a4)
0002ACE8 <AmiBlitz3.ab2@14712>    MOVE.w d1,-$4(a4)
0002ACEE <AmiBlitz3.ab2@14713>    SUB.w #$1980,-$a(a4)
0002ACF4 <AmiBlitz3.ab2@14714>    SUBQ.l #2,destpointer
0002ACF6 <AmiBlitz3.ab2@14715> RTS
0002ACFC <AmiBlitz3.ab2@14718>   CLR.b quickadd
0002AD00 <AmiBlitz3.ab2@14719> BRA doplus2__l10
0002AD06 <AmiBlitz3.ab2@14722>    CLR.l imm_addr
0002AD0A <AmiBlitz3.ab2@14723>    TST.l -4(a4)                                            ;skip If ADD.l #0,dx
0002AD0E <AmiBlitz3.ab2@14724>    BNE doplus2__doit
0002AD14 <AmiBlitz3.ab2@14725>    SUBQ.l #6,destpointer
0002AD16 <AmiBlitz3.ab2@14726> RTS
0002AD1C <AmiBlitz3.ab2@14729>    ADD.w #$b080-$200,-6(a4)
0002AD1E <AmiBlitz3.ab2@14730> RTS
0002AD24 <AmiBlitz3.ab2@14733>    MOVE.l destpointer,a0
0002AD2A <AmiBlitz3.ab2@14734>    SUB.l load_var_addr,a0
0002AD2E <AmiBlitz3.ab2@14735>    CMP.w #4,a0
0002AD32 <AmiBlitz3.ab2@14736>    BNE doplus2__l10
0002AD36 <AmiBlitz3.ab2@14737>    CMP.b #3,d3
0002AD3A <AmiBlitz3.ab2@14738>    BNE doplus2__lv1
0002AD40 <AmiBlitz3.ab2@14739>    CLR.l load_var_addr
0002AD46 <AmiBlitz3.ab2@14740>    ADD.w #$b080-$200,-4(a4)
0002AD48 <AmiBlitz3.ab2@14741> RTS
0002AD4C <AmiBlitz3.ab2@14744>   CMP.b #2,d3
0002AD50 <AmiBlitz3.ab2@14745>   BNE doplus2__l10
0002AD56 <AmiBlitz3.ab2@14746>   CLR.l load_var_addr
0002AD5C <AmiBlitz3.ab2@14747>   ADD.w #$a040-$200,-4(a4)
0002AD5E <AmiBlitz3.ab2@14748> RTS
0002AD64 <AmiBlitz3.ab2@14751>   MOVE.w regnum,D3
0002AD66 <AmiBlitz3.ab2@14752>   MOVE.w a1,d1
0002AD68 <AmiBlitz3.ab2@14753>   OR.w D3,D1
0002AD6A <AmiBlitz3.ab2@14754>   ADDQ.w #1,D1
0002AD6C <AmiBlitz3.ab2@14755>   LSL.w #8,D3
0002AD6E <AmiBlitz3.ab2@14756>   LSL.w #1,D3
0002AD70 <AmiBlitz3.ab2@14757>   OR.w D3,D1
0002AD74 <AmiBlitz3.ab2@14758> BRA.w writeword
0002AD78 <AmiBlitz3.ab2@14761>    CMP.b #3,d3
0002AD7C <AmiBlitz3.ab2@14762>    BCS doplus2__sub1_lq10
0002AD82 <AmiBlitz3.ab2@14763>    TST.b quickadd
0002AD88 <AmiBlitz3.ab2@14767>    MOVE.l destpointer,a0
0002AD8E <AmiBlitz3.ab2@14768>    CLR.b quickadd
0002AD94 <AmiBlitz3.ab2@14769>    CLR.l load_var_addr
0002AD9A <AmiBlitz3.ab2@14770>    SUB.l imm_addr,a0
0002AD9E <AmiBlitz3.ab2@14771>    CMP.w #6,a0
0002ADA2 <AmiBlitz3.ab2@14772>    BEQ doplus2__sub1_li10
0002ADA6 <AmiBlitz3.ab2@14773>    CMP.w #4,a0
0002ADAA <AmiBlitz3.ab2@14774>    BNE.s doplus2__sub1_li1
0002ADB0 <AmiBlitz3.ab2@14775>    CLR.l imm_addr
0002ADB6 <AmiBlitz3.ab2@14776>    ADD.w #$6040-$200,-4(a4)
0002ADB8 <AmiBlitz3.ab2@14777> RTS
0002ADBA <AmiBlitz3.ab2@14780>    MOVE.l a4,a0
0002ADC0 <AmiBlitz3.ab2@14781>     SUB.l load_var_addr,a0
0002ADC6 <AmiBlitz3.ab2@14782>     CMP.l #$a,a0
0002ADCA <AmiBlitz3.ab2@14783>     BNE doplus2__sub1_l10e
0002ADD0 <AmiBlitz3.ab2@14784>    CLR.l load_var_addr
0002ADD4 <AmiBlitz3.ab2@14785>    MOVE.w -$8(a4),d1
0002ADDA <AmiBlitz3.ab2@14786>    MOVE.l -$4(a4),-$8(a4)
0002ADDE <AmiBlitz3.ab2@14787>    MOVE.w d1,-$4(a4)
0002ADE4 <AmiBlitz3.ab2@14788>    SUB.w #$1b80,-$a(a4)
0002ADEA <AmiBlitz3.ab2@14789>    SUBQ.l #2,destpointer
0002ADEC <AmiBlitz3.ab2@14790> RTS
0002ADF2 <AmiBlitz3.ab2@14793>   CLR.b quickadd
0002ADF6 <AmiBlitz3.ab2@14794> BRA doplus2__sub1_l10
0002ADFC <AmiBlitz3.ab2@14797>    CLR.l imm_addr
0002AE02 <AmiBlitz3.ab2@14798>    ADD.w #$7080-$200,-6(a4)
0002AE04 <AmiBlitz3.ab2@14799> RTS
0002AE0A <AmiBlitz3.ab2@14802>    MOVE.l destpointer,a0
0002AE10 <AmiBlitz3.ab2@14803>    SUB.l load_var_addr,a0
0002AE14 <AmiBlitz3.ab2@14804>    CMP.w #4,a0
0002AE18 <AmiBlitz3.ab2@14805>    BNE doplus2__sub1_l10
0002AE1C <AmiBlitz3.ab2@14806>    CMP.b #3,d3
0002AE20 <AmiBlitz3.ab2@14807>    BNE doplus2__sub1_lv1
0002AE26 <AmiBlitz3.ab2@14808>    CLR.l load_var_addr
0002AE2C <AmiBlitz3.ab2@14809>    ADD.w #$7080-$200,-4(a4)
0002AE2E <AmiBlitz3.ab2@14810> RTS
0002AE32 <AmiBlitz3.ab2@14813>    CMP.b #2,d3
0002AE36 <AmiBlitz3.ab2@14814>    BNE doplus2__sub1_l10
0002AE3C <AmiBlitz3.ab2@14815>    CLR.l load_var_addr
0002AE42 <AmiBlitz3.ab2@14816>    ADD.w #$6040-$200,-4(a4)
0002AE44 <AmiBlitz3.ab2@14817> RTS
0002AE4A <AmiBlitz3.ab2@14820>   MOVE.w regnum,D3
0002AE4C <AmiBlitz3.ab2@14821>   MOVE.w a1,d1
0002AE4E <AmiBlitz3.ab2@14822>   OR.w D3,D1
0002AE50 <AmiBlitz3.ab2@14823>   ADDQ.w #1,D1
0002AE52 <AmiBlitz3.ab2@14824>   LSL.w #8,D3
0002AE54 <AmiBlitz3.ab2@14825>   LSL.w #1,D3
0002AE56 <AmiBlitz3.ab2@14826>   OR.w D3,D1
0002AE5A <AmiBlitz3.ab2@14827> BRA.w writeword
0002AE5C <AmiBlitz3.ab2@14831>   MOVEQ #0,d0
0002AE62 <AmiBlitz3.ab2@14832>   MOVE.w regnum,d0
0002AE64 <AmiBlitz3.ab2@14833>   ADDQ #1,d0
0002AE66 <AmiBlitz3.ab2@14834>   ASL.w #8,d0
0002AE68 <AmiBlitz3.ab2@14835>   ASL.w #2,d0
0002AE6E <AmiBlitz3.ab2@14836>   MOVE.l #$f2000022,d1                                     ;fpu add
0002AE70 <AmiBlitz3.ab2@14837>   OR.l d0,d1
0002AE76 <AmiBlitz3.ab2@14838>   MOVE.w regnum,d0
0002AE78 <AmiBlitz3.ab2@14839>   ASL.w #7,d0
0002AE7A <AmiBlitz3.ab2@14840>   OR.l d0,d1
0002AE7E <AmiBlitz3.ab2@14841> BRA.w writelong
0002AE84 <AmiBlitz3.ab2@14847>   TST.b iee
0002AE88 <AmiBlitz3.ab2@14848>   BNE do_plus_float__fadd1
0002AE8C <AmiBlitz3.ab2@14849>   MOVE.w #$FFBE,D1                                         ;#-66,d1 org soruce ;floatadd
0002AE92 <AmiBlitz3.ab2@14852>    MOVE.w D1,libjsr+2
0002AE96 <AmiBlitz3.ab2@14853>    BSR.w JL_0_AD40
0002AE98 <AmiBlitz3.ab2@14854>   MOVE.l D4,D1
0002AE9C <AmiBlitz3.ab2@14855>    BSR.w JL_0_AD38
0002AEA0 <AmiBlitz3.ab2@14856>   MOVE.w #$C900,D1
0002AEA4 <AmiBlitz3.ab2@14857>    BSR.w Atokejsr
0002AEA8 <AmiBlitz3.ab2@14858>    BSR.w JL_0_A352
0002AEAE <AmiBlitz3.ab2@14859>   MOVE.l libjsr,D1
0002AEB2 <AmiBlitz3.ab2@14860>    BSR.w writelong
0002AEB6 <AmiBlitz3.ab2@14861>    BSR.w JL_0_A36E
0002AEB8 <AmiBlitz3.ab2@14862>   MOVE.l D5,D1
0002AEBC <AmiBlitz3.ab2@14863> BRA.w JL_0_AD38
0002AEC2 <AmiBlitz3.ab2@14867>   MOVE.w regnum,D1
0002AEC4 <AmiBlitz3.ab2@14868>   LSL.w #8,D1
0002AEC6 <AmiBlitz3.ab2@14869>   LSL.w #1,D1
0002AEC8 <AmiBlitz3.ab2@14870>   MOVE.w D1,-(A7)
0002AECC <AmiBlitz3.ab2@14871>   CMP.w #3072,d1
0002AED0 <AmiBlitz3.ab2@14872>   BEQ 'l1
0002AED6 <AmiBlitz3.ab2@14873>   OR.w addcode,D1                                          ;move.l (a7)+,d0
0002AEDA <AmiBlitz3.ab2@14874> BRA 'l2
0002AEDE <AmiBlitz3.ab2@14877>    MOVE.w #$588f,d1                                        ;addq.l #4,a7
0002AEE2 <AmiBlitz3.ab2@14880>    BSR.w writeword
0002AEE4 <AmiBlitz3.ab2@14881>   MOVE.w (A7)+,D1
0002AEEA <AmiBlitz3.ab2@14882>   OR.w addcode+2,D1                                        ;native string add.l d0,(a7)
0002AEEE <AmiBlitz3.ab2@14883> BRA.w writeword
0002AEF2 <AmiBlitz3.ab2@14889>   MOVE.w #$9040,D1
0002AEF6 <AmiBlitz3.ab2@14890> BRA.w doplus2
0002AEFA <AmiBlitz3.ab2@14894>   MOVE.w #$9040,D1
0002AEFE <AmiBlitz3.ab2@14895> BRA.w doplus2
0002AF02 <AmiBlitz3.ab2@14899>   MOVE.w #$9080,D1
0002AF06 <AmiBlitz3.ab2@14900> BRA.w doplus2
0002AF0C <AmiBlitz3.ab2@14904>    TST.b iee
0002AF10 <AmiBlitz3.ab2@14905>     BNE do_minus_float__fs1
0002AF14 <AmiBlitz3.ab2@14906>   MOVE.w #$FFB8,D1                                         ;floatsub
0002AF18 <AmiBlitz3.ab2@14907> BRA.w doflib
0002AF1A <AmiBlitz3.ab2@14910>   MOVEQ #0,d0
0002AF20 <AmiBlitz3.ab2@14911>   MOVE.w regnum,d0
0002AF22 <AmiBlitz3.ab2@14912>   ADDQ #1,d0
0002AF24 <AmiBlitz3.ab2@14913>   ASL.w #8,d0
0002AF26 <AmiBlitz3.ab2@14914>   ASL.w #2,d0
0002AF2C <AmiBlitz3.ab2@14915>   MOVE.l #$f2000028,d1
0002AF2E <AmiBlitz3.ab2@14916>   OR.l d0,d1
0002AF34 <AmiBlitz3.ab2@14917>   MOVE.w regnum,d0
0002AF36 <AmiBlitz3.ab2@14918>   ASL.w #7,d0
0002AF38 <AmiBlitz3.ab2@14919>   OR.l d0,d1
0002AF3C <AmiBlitz3.ab2@14920> BRA.w writelong
0002AF40 <AmiBlitz3.ab2@14926>   MOVE.w #$C1C0,D1
0002AF42 <AmiBlitz3.ab2@14927>   MOVEQ.l #$02,D2                                          ;now a word
0002AF46 <AmiBlitz3.ab2@14928> BRA.w doplus2
0002AF4A <AmiBlitz3.ab2@14932>   MOVE.w #$C1C0,D1
0002AF4C <AmiBlitz3.ab2@14933>   MOVEQ.l #$03,D2                                          ;now a long.
0002AF50 <AmiBlitz3.ab2@14934> BRA.w doplus2
0002AF54 <AmiBlitz3.ab2@14938>   MOVE.w #$CA00,D1                                         ;quickmul
0002AF58 <AmiBlitz3.ab2@14939> BRA.w domylib
0002AF5E <AmiBlitz3.ab2@14943>   TST.b fast
0002AF62 <AmiBlitz3.ab2@14944>   BNE.s 'l10
0002AF66 <AmiBlitz3.ab2@14945>   MOVE.w #$CA01,D1                                         ;writelongmul
0002AF6A <AmiBlitz3.ab2@14946> BRA.w domylib
0002AF70 <AmiBlitz3.ab2@14955>    MOVE.l destpointer,a0
0002AF76 <AmiBlitz3.ab2@14956>    SUB.l imm_addr,a0
0002AF7A <AmiBlitz3.ab2@14957>    CMP.w #6,a0
0002AF7E <AmiBlitz3.ab2@14958>    BNE 'li1
0002AF80 <AmiBlitz3.ab2@14959>    MOVEQ.l #2,d1
0002AF82 <AmiBlitz3.ab2@14960>    MOVEQ #1,d3
0002AF86 <AmiBlitz3.ab2@14963>   CMP.l -4(a4),d1
0002AF8A <AmiBlitz3.ab2@14964>    BEQ 'oklsl
0002AF8C <AmiBlitz3.ab2@14965>     LSL.l #1,d1
0002AF92 <AmiBlitz3.ab2@14966>     ADD.l #1,d3
0002AF98 <AmiBlitz3.ab2@14967>     CMP.l #9,d3
0002AF9C <AmiBlitz3.ab2@14968>     BNE 'ag
0002AFA0 <AmiBlitz3.ab2@14969>    MOVE.w -2(a4),d1
0002AFA4 <AmiBlitz3.ab2@14970>    BSR writeword
0002AFAA <AmiBlitz3.ab2@14971>    MOVE.w -6(a4),-4(a4)
0002AFB2 <AmiBlitz3.ab2@14972>    MOVE.l #$4c3c0800,-8(a4)
0002AFB8 <AmiBlitz3.ab2@14973>    MOVE.w regnum,D3
0002AFBC <AmiBlitz3.ab2@14974>    MULS #$1000,D3
0002AFC0 <AmiBlitz3.ab2@14975>    OR.w D3,-6(a4)
0002AFC6 <AmiBlitz3.ab2@14976>    CLR.l load_var_addr
0002AFCC <AmiBlitz3.ab2@14977>    CLR.l imm_addr
0002AFD0 <AmiBlitz3.ab2@14978> BRA 'li3
0002AFD4 <AmiBlitz3.ab2@14981>    CMP.w #8,d3
0002AFD8 <AmiBlitz3.ab2@14982>    BEQ 'ok
0002AFDA <AmiBlitz3.ab2@14983>    ASL.l #1,d3
0002AFDC <AmiBlitz3.ab2@14984>    ASL.l #8,d3
0002AFE0 <AmiBlitz3.ab2@14985>    MOVE.w #$e188,d1
0002AFE2 <AmiBlitz3.ab2@14986>    OR.w d3,d1
0002AFE6 <AmiBlitz3.ab2@14987>    MOVE.w d1,-6(a4)
0002AFEA <AmiBlitz3.ab2@14988> BRA 'okls
0002AFF0 <AmiBlitz3.ab2@14991>   MOVE.w #$e188,-6(a4)                                     ;lsl.l #,dx
0002AFF6 <AmiBlitz3.ab2@14994>   MOVE.w regnum,d3
0002AFFA <AmiBlitz3.ab2@14995>    OR.b d3,-5(a4)
0002B000 <AmiBlitz3.ab2@14996>    SUBQ.l #4,destpointer
0002B006 <AmiBlitz3.ab2@14997>    CLR.l load_var_addr
0002B00C <AmiBlitz3.ab2@14998>    CLR.l imm_addr
0002B010 <AmiBlitz3.ab2@14999> BRA 'li3
0002B016 <AmiBlitz3.ab2@15002>    MOVE.l destpointer,a0
0002B01C <AmiBlitz3.ab2@15003>    SUB.l load_var_addr,a0
0002B020 <AmiBlitz3.ab2@15004>    CMP.w #4,a0
0002B024 <AmiBlitz3.ab2@15005>    BNE 'li2
0002B028 <AmiBlitz3.ab2@15006>    MOVE.w -2(a4),d1
0002B02C <AmiBlitz3.ab2@15007>    BSR writeword
0002B032 <AmiBlitz3.ab2@15008>    MOVE.b #$4c,-6(a4)
0002B038 <AmiBlitz3.ab2@15009>    MOVE.w #$0800,-4(a4)
0002B03E <AmiBlitz3.ab2@15010>    MOVE.w regnum,D3
0002B042 <AmiBlitz3.ab2@15011>    MULS #$1000,d3
0002B046 <AmiBlitz3.ab2@15012>    OR.w D3,-4(a4)
0002B04A <AmiBlitz3.ab2@15013> BRA 'li3
0002B050 <AmiBlitz3.ab2@15016>    MOVE.l #$4c010800,d1
0002B056 <AmiBlitz3.ab2@15017>    MOVE.w regnum,D3
0002B058 <AmiBlitz3.ab2@15018>    EXT.l d3
0002B05C <AmiBlitz3.ab2@15019>    MULS #$1000,d3
0002B05E <AmiBlitz3.ab2@15020>    OR.w D3,d1
0002B062 <AmiBlitz3.ab2@15021>    MULS #$10,d3
0002B064 <AmiBlitz3.ab2@15022>    ADD.l d3,d1
0002B068 <AmiBlitz3.ab2@15023>    BSR writelong
0002B06A <AmiBlitz3.ab2@15028> RTS
0002B06C <AmiBlitz3.ab2@15032>   MOVE.w D1,-(A7)
0002B070 <AmiBlitz3.ab2@15033>    BSR.w JL_0_AD40
0002B072 <AmiBlitz3.ab2@15034>   MOVE.l D4,D1
0002B076 <AmiBlitz3.ab2@15035>    BSR.w JL_0_AD38
0002B07A <AmiBlitz3.ab2@15036>    BSR.w JL_0_A352
0002B07C <AmiBlitz3.ab2@15037>   MOVEQ #0,d1
0002B07E <AmiBlitz3.ab2@15038>   MOVE.w (A7)+,D1
0002B084 <AmiBlitz3.ab2@15039>   MOVE.l d1,lastinstruction
0002B088 <AmiBlitz3.ab2@15040>    BSR.w Atokejsr
0002B08C <AmiBlitz3.ab2@15041>    BSR.w JL_0_A36E
0002B08E <AmiBlitz3.ab2@15042>   MOVE.l D5,D1
0002B092 <AmiBlitz3.ab2@15043> BRA.w JL_0_AD38
0002B098 <AmiBlitz3.ab2@15047>    TST.b iee
0002B09C <AmiBlitz3.ab2@15048>     BNE fm1
0002B0A0 <AmiBlitz3.ab2@15049>  MOVE.w #$FFB2,D1                                          ;floatmul
0002B0A4 <AmiBlitz3.ab2@15050> BRA.w doflib
0002B0A6 <AmiBlitz3.ab2@15053>   MOVEQ #0,d0
0002B0AC <AmiBlitz3.ab2@15054>  MOVE.w regnum,d0
0002B0AE <AmiBlitz3.ab2@15055>  ADDQ #1,d0
0002B0B0 <AmiBlitz3.ab2@15056>  ASL.w #8,d0
0002B0B2 <AmiBlitz3.ab2@15057>  ASL.w #2,d0
0002B0B8 <AmiBlitz3.ab2@15058>  MOVE.l #$f2000023,d1
0002B0BA <AmiBlitz3.ab2@15059>  OR.l d0,d1
0002B0C0 <AmiBlitz3.ab2@15060>  MOVE.w regnum,d0
0002B0C2 <AmiBlitz3.ab2@15061>  ASL.w #7,d0
0002B0C4 <AmiBlitz3.ab2@15062>  OR.l d0,d1
0002B0C8 <AmiBlitz3.ab2@15063> BRA.w writelong
0002B0CA <AmiBlitz3.ab2@15067>   MOVE.w D2,-(A7)                                          ;dopow
0002B0CC <AmiBlitz3.ab2@15068>   MOVE.w D2,D3
0002B0CE <AmiBlitz3.ab2@15069>   MOVEQ.l #$05,D2
0002B0D2 <AmiBlitz3.ab2@15070>    BSR.w JL_0_9770
0002B0D8 <AmiBlitz3.ab2@15071>   ADDQ.w #1,regnum
0002B0DA <AmiBlitz3.ab2@15072>   MOVE.w (A7)+,D3
0002B0DC <AmiBlitz3.ab2@15073>   MOVEQ.l #$05,D2
0002B0E0 <AmiBlitz3.ab2@15074>    BSR.w writeconvertcode
0002B0E6 <AmiBlitz3.ab2@15075>   SUBQ.w #1,regnum
0002B0EA <AmiBlitz3.ab2@15076>    BSR.w nocando
0002B0F0 <AmiBlitz3.ab2@15077>    TST.b fpu
0002B0F4 <AmiBlitz3.ab2@15078>    BEQ 'old
0002B0F6 <AmiBlitz3.ab2@15079>    MOVEQ #0,d1
0002B0FC <AmiBlitz3.ab2@15080>    MOVE.w regnum,d1
0002B0FE <AmiBlitz3.ab2@15081>   MOVE.l d1,d0
0002B100 <AmiBlitz3.ab2@15082>   ASL.w #7,d1
0002B102 <AmiBlitz3.ab2@15083>   ASL.w #8,d0
0002B104 <AmiBlitz3.ab2@15084>   ASL.w #2,d0
0002B106 <AmiBlitz3.ab2@15085>   OR.w d0,d1
0002B108 <AmiBlitz3.ab2@15086>   MOVE.l d1,-(a7)
0002B10E <AmiBlitz3.ab2@15088>    OR.l #$f2000016,d1                                       ;flog2.x fp0      ;fpu ^ pow
0002B112 <AmiBlitz3.ab2@15089>    BSR writelong
0002B118 <AmiBlitz3.ab2@15090>    MOVE.w regnum,d0
0002B11A <AmiBlitz3.ab2@15091>  ADDQ #1,d0
0002B11C <AmiBlitz3.ab2@15092>  ASL.w #8,d0
0002B11E <AmiBlitz3.ab2@15093>  ASL.w #2,d0
0002B124 <AmiBlitz3.ab2@15094>  MOVE.l #$f2000023,d1
0002B126 <AmiBlitz3.ab2@15095>  OR.l d0,d1
0002B12C <AmiBlitz3.ab2@15096>  MOVE.w regnum,d0
0002B12E <AmiBlitz3.ab2@15097>  ASL.w #7,d0
0002B130 <AmiBlitz3.ab2@15098>  OR.l d0,d1
0002B136 <AmiBlitz3.ab2@15099>    OR.l #$f2000023,d1                                      ;fmulx.x fp1,fp0
0002B13A <AmiBlitz3.ab2@15100>    BSR writelong
0002B13C <AmiBlitz3.ab2@15101>    MOVE.l (a7)+,d1
0002B142 <AmiBlitz3.ab2@15103>    OR.l #$f2000011,d1                                      ;ftwotox.x fp0
0002B146 <AmiBlitz3.ab2@15104>    BSR writelong
0002B148 <AmiBlitz3.ab2@15105> RTS
0002B14C <AmiBlitz3.ab2@15108>   MOVE.w #$6001,D1
0002B150 <AmiBlitz3.ab2@15109> BRA.w domylib
0002B154 <AmiBlitz3.ab2@15115>   MOVEA.l forthsp(PC),A0
0002B158 <AmiBlitz3.ab2@15116>   MOVE.w #$FFFF,-(A0)                                      ;#-1,-(a0) org source
0002B15A <AmiBlitz3.ab2@15117> RTS
0002B15E <AmiBlitz3.ab2@15123>   MOVE.w #$D400,D1
0002B162 <AmiBlitz3.ab2@15124> BRA.w domylib
0002B166 <AmiBlitz3.ab2@15128>   MOVE.w #$D401,D1
0002B16A <AmiBlitz3.ab2@15129> BRA.w domylib
0002B16E <AmiBlitz3.ab2@15133>    BSR.w nocando                                           ;modlib uses an alibjsr here!
0002B172 <AmiBlitz3.ab2@15134>   MOVE.w #$D402,D1
0002B176 <AmiBlitz3.ab2@15135> BRA.w domylib
0002B17A <AmiBlitz3.ab2@15139>   MOVE.w #$D403,D1
0002B17C <AmiBlitz3.ab2@15140>   MOVEQ.l #$02,D2                                          ;now a word.
0002B180 <AmiBlitz3.ab2@15141> BRA.w domylib
0002B184 <AmiBlitz3.ab2@15145>    BSR.w nocando                                           ;modlib lib uses an alibjsr!  ;domod float
0002B18A <AmiBlitz3.ab2@15146>   TST.b fpu
0002B18E <AmiBlitz3.ab2@15147>   BEQ 'old
0002B190 <AmiBlitz3.ab2@15148>   MOVEQ #0,d1
0002B196 <AmiBlitz3.ab2@15149>   MOVE.w regnum,d1                                         ;fpu mod
0002B198 <AmiBlitz3.ab2@15150>   MOVE.l d1,d0
0002B19A <AmiBlitz3.ab2@15151>   ADDQ.l #1,d1
0002B19C <AmiBlitz3.ab2@15152>   ASL.l #7,d0
0002B19E <AmiBlitz3.ab2@15153>   ASL.l #8,d1
0002B1A0 <AmiBlitz3.ab2@15154>   ASL.l #2,d1
0002B1A2 <AmiBlitz3.ab2@15155>   OR.l d0,d1
0002B1A4 <AmiBlitz3.ab2@15156>   MOVE.l d0,-(a7)
0002B1AA <AmiBlitz3.ab2@15157>   OR.l #$f2000021,d1
0002B1AE <AmiBlitz3.ab2@15158>   BSR writelong
0002B1B0 <AmiBlitz3.ab2@15159>   MOVE.l (a7)+,d0
0002B1B2 <AmiBlitz3.ab2@15160>  RTS
0002B1B6 <AmiBlitz3.ab2@15163>   MOVE.w #$D404,D1
0002B1B8 <AmiBlitz3.ab2@15164>   MOVEQ.l #$03,D2                                          ;now a long
0002B1BC <AmiBlitz3.ab2@15165> BRA.w domylib
0002B1C0 <AmiBlitz3.ab2@15173>   MOVE.w #$48C0,D1
0002B1C6 <AmiBlitz3.ab2@15174>   OR.w regnum,D1
0002B1CA <AmiBlitz3.ab2@15175>    BSR.w writeword
0002B1CC <AmiBlitz3.ab2@15176>   ADDQ.w #1,D1
0002B1D0 <AmiBlitz3.ab2@15177>    BSR.w writeword
0002B1D4 <AmiBlitz3.ab2@15180>    MOVE.w #$48C0,D1
0002B1DA <AmiBlitz3.ab2@15181>   OR.w regnum,D1
0002B1DE <AmiBlitz3.ab2@15182>    BSR.w writeword
0002B1E2 <AmiBlitz3.ab2@15183>   MOVE.w #$81C0,D1
0002B1E6 <AmiBlitz3.ab2@15184> BRA.w doplus2
0002B1EC <AmiBlitz3.ab2@15188>   TST.b fast
0002B1F0 <AmiBlitz3.ab2@15189>   BNE.s 'l10
0002B1F4 <AmiBlitz3.ab2@15190>   MOVE.w #$CB01,D1
0002B1F8 <AmiBlitz3.ab2@15191> BRA.w domylib
0002B1FC <AmiBlitz3.ab2@15197>   BSR.w JL_0_AD40
0002B1FE <AmiBlitz3.ab2@15198>   MOVE.l D4,D1
0002B202 <AmiBlitz3.ab2@15199>    BSR.w JL_0_AD38
0002B206 <AmiBlitz3.ab2@15200>    BSR.w JL_0_A352
0002B20C <AmiBlitz3.ab2@15214>    MOVE.l #$4c410800,d1
0002B210 <AmiBlitz3.ab2@15215>    BSR writelong
0002B214 <AmiBlitz3.ab2@15218>   MOVE.w #$4e71,d1
0002B218 <AmiBlitz3.ab2@15220>    BSR.w JL_0_A36E
0002B21A <AmiBlitz3.ab2@15221>   MOVE.l D5,D1
0002B21E <AmiBlitz3.ab2@15222> BRA.w JL_0_AD38
0002B222 <AmiBlitz3.ab2@15225>     CMP.w #8,d3
0002B226 <AmiBlitz3.ab2@15226>     BEQ 'ok
0002B228 <AmiBlitz3.ab2@15227>     ASL.l #1,d3
0002B22A <AmiBlitz3.ab2@15228>     ASL.l #8,d3
0002B22E <AmiBlitz3.ab2@15229>     MOVE.w #$e080,d1
0002B230 <AmiBlitz3.ab2@15230>     OR.w d3,d1
0002B234 <AmiBlitz3.ab2@15231> BRA 'oklsr2
0002B238 <AmiBlitz3.ab2@15234>   MOVE.w #$e080,d1                                         ;lsr.l #,dx
0002B23E <AmiBlitz3.ab2@15237>      SUBQ.l #6,destpointer
0002B242 <AmiBlitz3.ab2@15238>      BSR writeword
0002B244 <AmiBlitz3.ab2@15239>      MOVE.l (a7)+,d3
0002B246 <AmiBlitz3.ab2@15240>      MOVEQ #0,d1
0002B24C <AmiBlitz3.ab2@15241>      CLR.l load_var_addr
0002B252 <AmiBlitz3.ab2@15242>      CLR.l imm_addr
0002B256 <AmiBlitz3.ab2@15243> BRA JL_0_AD38
0002B25A <AmiBlitz3.ab2@15247>   MOVE.w #$CB00,D1                                         ;quickdiv
0002B25E <AmiBlitz3.ab2@15248> BRA.w domylib
0002B264 <AmiBlitz3.ab2@15252>    TST.b iee
0002B268 <AmiBlitz3.ab2@15253>    BNE fdiv1
0002B26C <AmiBlitz3.ab2@15254>    MOVE.w #$FFAC,D1                                        ;floatdiv
0002B270 <AmiBlitz3.ab2@15255> BRA.w doflib
0002B272 <AmiBlitz3.ab2@15259>   MOVEQ #0,d0
0002B278 <AmiBlitz3.ab2@15260>   MOVE.w regnum,d0
0002B27A <AmiBlitz3.ab2@15261>   ADDQ #1,d0
0002B27C <AmiBlitz3.ab2@15262>   ASL.w #8,d0
0002B27E <AmiBlitz3.ab2@15263>   ASL.w #2,d0
0002B284 <AmiBlitz3.ab2@15264>   MOVE.l #$f2000020,d1                                     ;fpu div
0002B286 <AmiBlitz3.ab2@15265>   OR.l d0,d1
0002B28C <AmiBlitz3.ab2@15266>   MOVE.w regnum,d0
0002B28E <AmiBlitz3.ab2@15267>   ASL.w #7,d0
0002B290 <AmiBlitz3.ab2@15268>   OR.l d0,d1
0002B294 <AmiBlitz3.ab2@15269> BRA.w writelong
0002B298 <AmiBlitz3.ab2@15273>   MOVE.w #$C000,D1
0002B29C <AmiBlitz3.ab2@15274> BRA.w doplus2
0002B2A0 <AmiBlitz3.ab2@15278>   MOVE.w #$C040,D1
0002B2A4 <AmiBlitz3.ab2@15279> BRA.w doplus2
0002B2A8 <AmiBlitz3.ab2@15283>   MOVE.w #$C080,D1
0002B2AC <AmiBlitz3.ab2@15284> BRA.w doplus2
0002B2B0 <AmiBlitz3.ab2@15288>   MOVE.w #$8000,D1
0002B2B4 <AmiBlitz3.ab2@15289> BRA.w doplus2
0002B2B8 <AmiBlitz3.ab2@15293>   MOVE.w #$8040,D1
0002B2BC <AmiBlitz3.ab2@15294> BRA.w doplus2
0002B2C0 <AmiBlitz3.ab2@15298>   MOVE.w #$8080,D1
0002B2C4 <AmiBlitz3.ab2@15299> BRA.w doplus2
0002B2C8 <AmiBlitz3.ab2@15303>   MOVE.w #$B100,D1
0002B2CE <AmiBlitz3.ab2@15306>    MOVE.w regnum,D3
0002B2D0 <AmiBlitz3.ab2@15307>   OR.w D3,D1
0002B2D2 <AmiBlitz3.ab2@15308>   ADDQ.w #1,D3
0002B2D4 <AmiBlitz3.ab2@15309>   LSL.w #8,D3
0002B2D6 <AmiBlitz3.ab2@15310>   LSL.w #1,D3
0002B2D8 <AmiBlitz3.ab2@15311>   OR.w D3,D1
0002B2DC <AmiBlitz3.ab2@15312> BRA.w writeword
0002B2E0 <AmiBlitz3.ab2@15316>   MOVE.w #$B140,D1
0002B2E4 <AmiBlitz3.ab2@15317> BRA.w JL_0_A25C
0002B2E8 <AmiBlitz3.ab2@15321>   MOVE.w #$B180,D1
0002B2EC <AmiBlitz3.ab2@15322> BRA.w JL_0_A25C
0002B2F0 <AmiBlitz3.ab2@15326>   MOVE.w #$E1A8,D1
0002B2F4 <AmiBlitz3.ab2@15327> BRA.w JL_0_A298
0002B2F8 <AmiBlitz3.ab2@15331>   MOVE.w #$E0A8,D1
0002B2FC <AmiBlitz3.ab2@15332> BRA.w JL_0_A298
0002B300 <AmiBlitz3.ab2@15336>   MOVE.w #$E0A0,D1
0002B304 <AmiBlitz3.ab2@15337> BRA.w JL_0_A298
0002B306 <AmiBlitz3.ab2@15341>   MOVE.w D1,-(A7)
0002B30C <AmiBlitz3.ab2@15342>   ADDQ.w #1,regnum
0002B30E <AmiBlitz3.ab2@15343>   MOVE.w D2,-(A7)
0002B310 <AmiBlitz3.ab2@15344>   MOVE.w D2,D3
0002B312 <AmiBlitz3.ab2@15345>   MOVEQ.l #$02,D2
0002B316 <AmiBlitz3.ab2@15350>    BSR.w writeconvertcode
0002B318 <AmiBlitz3.ab2@15352>   MOVE.w (A7)+,D2
0002B31E <AmiBlitz3.ab2@15353>   SUBQ.w #1,regnum
0002B322 <AmiBlitz3.ab2@15354>   CMP.w #$4,D2
0002B326 <AmiBlitz3.ab2@15355>    BEQ.w JL_0_A2C2
0002B328 <AmiBlitz3.ab2@15356>   MOVE.w D2,D3
0002B32A <AmiBlitz3.ab2@15357>   MOVEQ.l #$03,D2
0002B32E <AmiBlitz3.ab2@15358>    BSR.w JL_0_9770
0002B330 <AmiBlitz3.ab2@15361>    MOVE.w (A7)+,D1
0002B336 <AmiBlitz3.ab2@15362>   MOVE.w regnum,D3
0002B338 <AmiBlitz3.ab2@15363>   OR.w D3,D1
0002B33A <AmiBlitz3.ab2@15364>   ADDQ.w #1,D3
0002B33C <AmiBlitz3.ab2@15365>   LSL.w #8,D3
0002B33E <AmiBlitz3.ab2@15366>   LSL.w #1,D3
0002B340 <AmiBlitz3.ab2@15367>   OR.w D3,D1
0002B344 <AmiBlitz3.ab2@15368> BRA.w writeword
0002B348 <AmiBlitz3.ab2@15372>   MOVE.w #$0100,D1
0002B34C <AmiBlitz3.ab2@15373>    BSR.w JL_0_A31C
0002B352 <AmiBlitz3.ab2@15374>   MOVE.w regnum,D1
0002B356 <AmiBlitz3.ab2@15375>   ORI.w #$56C0,D1
0002B35A <AmiBlitz3.ab2@15376>    BSR.w writeword
0002B360 <AmiBlitz3.ab2@15377>   MOVE.w regnum,D1
0002B364 <AmiBlitz3.ab2@15378>   ORI.w #$4880,D1
0002B368 <AmiBlitz3.ab2@15379>    BSR.w writeword
0002B36A <AmiBlitz3.ab2@15380>   MOVEQ.l #$02,D2
0002B36C <AmiBlitz3.ab2@15381> RTS
0002B370 <AmiBlitz3.ab2@15385>   MOVE.w #$01C0,D1
0002B374 <AmiBlitz3.ab2@15388>    BSR.w JL_0_A31C
0002B376 <AmiBlitz3.ab2@15389>   MOVEQ.l #$03,D2
0002B378 <AmiBlitz3.ab2@15390> RTS
0002B37C <AmiBlitz3.ab2@15394>   MOVE.w #$0180,D1
0002B380 <AmiBlitz3.ab2@15395> BRA.w JL_0_A304
0002B384 <AmiBlitz3.ab2@15399>   MOVE.w #$0140,D1
0002B388 <AmiBlitz3.ab2@15400> BRA.w JL_0_A304
0002B38A <AmiBlitz3.ab2@15404>   MOVE.w D1,-(A7)
0002B38C <AmiBlitz3.ab2@15405>   MOVE.w D2,-(A7)
0002B38E <AmiBlitz3.ab2@15406>   MOVE.w D2,D3
0002B390 <AmiBlitz3.ab2@15407>   MOVEQ.l #$03,D2
0002B394 <AmiBlitz3.ab2@15408>    BSR.w JL_0_9770
0002B396 <AmiBlitz3.ab2@15409>   MOVE.w (A7)+,D3
0002B398 <AmiBlitz3.ab2@15410>   MOVEQ.l #$01,D2
0002B39E <AmiBlitz3.ab2@15411>   ADDQ.w #1,regnum
0002B3A2 <AmiBlitz3.ab2@15412>    BSR.w writeconvertcode
0002B3A8 <AmiBlitz3.ab2@15413>   SUBQ.w #1,regnum
0002B3AE <AmiBlitz3.ab2@15414>   MOVE.w regnum,D1
0002B3B0 <AmiBlitz3.ab2@15415>   MOVE.w D1,D2
0002B3B2 <AmiBlitz3.ab2@15416>   ADDQ.w #1,D2
0002B3B4 <AmiBlitz3.ab2@15417>   LSL.w #8,D2
0002B3B6 <AmiBlitz3.ab2@15418>   LSL.w #1,D2
0002B3B8 <AmiBlitz3.ab2@15419>   OR.w (A7)+,D1
0002B3BA <AmiBlitz3.ab2@15420>   OR.w D2,D1
0002B3BE <AmiBlitz3.ab2@15421> BRA.w writeword
0002B3C4 <AmiBlitz3.ab2@15425>   MOVE.w regnum,D1
0002B3C8 <AmiBlitz3.ab2@15426>    BEQ.w JL_0_A36C
0002B3CC <AmiBlitz3.ab2@15427>   ORI.w #$2000,D1
0002B3D0 <AmiBlitz3.ab2@15428>    BSR.w writeword
0002B3D4 <AmiBlitz3.ab2@15429>   ADDI.w #$201,D1
0002B3D8 <AmiBlitz3.ab2@15430>    BSR.w writeword
0002B3DA <AmiBlitz3.ab2@15433> RTS
0002B3E0 <AmiBlitz3.ab2@15437>   MOVE.w regnum,D1
0002B3E4 <AmiBlitz3.ab2@15438>    BEQ.w JL_0_A384
0002B3E6 <AmiBlitz3.ab2@15439>   LSL.w #8,D1
0002B3E8 <AmiBlitz3.ab2@15440>   LSL.w #1,D1
0002B3EC <AmiBlitz3.ab2@15441>   ORI.w #$2000,D1
0002B3F0 <AmiBlitz3.ab2@15442>    BSR.w writeword
0002B3F2 <AmiBlitz3.ab2@15445> RTS
0002B3F8 <AmiBlitz3.ab2@15449>    CLR.b isconstantvalue
0002B3FE <AmiBlitz3.ab2@15450>    CLR.l lastconstantvalue
0002B406 <AmiBlitz3.ab2@15451>    CMPI.w #$7,regnum
0002B40A <AmiBlitz3.ab2@15452>    BCS.w JL_0_A6B4
0002B410 <AmiBlitz3.ab2@15453>   MOVE.l #$f2277700,d1                                     ;fmove.d fp6,-(a7)
0002B414 <AmiBlitz3.ab2@15454>   BSR writelong
0002B418 <AmiBlitz3.ab2@15455>   MOVE.w #$2F06,D1                                         ;d6 to stack
0002B41C <AmiBlitz3.ab2@15457>   CMP.w #$3,D2
0002B420 <AmiBlitz3.ab2@15458>    BCS.w JL_0_A3A2
0002B424 <AmiBlitz3.ab2@15459>   MOVE.w #$2F06,D1
0002B428 <AmiBlitz3.ab2@15462>   BSR.w writeword
0002B42A <AmiBlitz3.ab2@15463>   MOVE.w D1,-(A7)
0002B430 <AmiBlitz3.ab2@15464>   SUBQ.w #1,regnum
0002B434 <AmiBlitz3.ab2@15465>    BSR.w JL_0_A6B4
0002B43A <AmiBlitz3.ab2@15466>   ADDQ.w #1,regnum
0002B440 <AmiBlitz3.ab2@15467>   MOVE.l #$f2001b80,d1
0002B444 <AmiBlitz3.ab2@15468>   BSR writelong
0002B448 <AmiBlitz3.ab2@15469>   MOVE.w #$3E06,D1
0002B44C <AmiBlitz3.ab2@15470>   CMP.w #$3,D2
0002B450 <AmiBlitz3.ab2@15471>    BCS.w JL_0_A3C8
0002B454 <AmiBlitz3.ab2@15472>   MOVE.w #$2E06,D1
0002B458 <AmiBlitz3.ab2@15475>   BSR.w writeword
0002B45A <AmiBlitz3.ab2@15476>   MOVE.w (A7)+,D1
0002B45E <AmiBlitz3.ab2@15477>   ANDI.w #$F000,D1
0002B462 <AmiBlitz3.ab2@15478>   ORI.w #$C1F,D1
0002B468 <AmiBlitz3.ab2@15479>   JSR writeword
0002B46E <AmiBlitz3.ab2@15480>   MOVE.l #$f21f5700,d1                                     ;fmove.d (a7)+,fp6
0002B472 <AmiBlitz3.ab2@15481> BRA writelong
0002B476 <AmiBlitz3.ab2@15485>   BSR.w JL_0_A6B4
0002B47A <AmiBlitz3.ab2@15486>   MOVE.w #$4440,D1
0002B47E <AmiBlitz3.ab2@15487>   CMP.w #$3,D2
0002B482 <AmiBlitz3.ab2@15488>    BCS.w JL_0_A406
0002B486 <AmiBlitz3.ab2@15489>   MOVE.w #$4480,D1
0002B48A <AmiBlitz3.ab2@15490>   CMP.w #$5,D2
0002B48E <AmiBlitz3.ab2@15491>    BCS.w JL_0_A406
0002B492 <AmiBlitz3.ab2@15492>   CMP.w #$6,D2
0002B496 <AmiBlitz3.ab2@15493>    BCC.w illoperr
0002B49A <AmiBlitz3.ab2@15494>   MOVE.w #$FFC4,D1
0002B49E <AmiBlitz3.ab2@15495> BRA.w JL_0_9604
0002B4A4 <AmiBlitz3.ab2@15498>   OR.w regnum,D1                                           ;negate
0002B4AA <AmiBlitz3.ab2@15499>   CLR.l imm_addr
0002B4AE <AmiBlitz3.ab2@15500> BRA.w writeword
0002B4B2 <AmiBlitz3.ab2@15504>    BSR.w eval4
0002B4B6 <AmiBlitz3.ab2@15505>   CMP.w #")",D0
0002B4BA <AmiBlitz3.ab2@15506>    BEQ.w JL_0_A424
0002B4BE <AmiBlitz3.ab2@15507>   CMP.w #"}",D0
0002B4C2 <AmiBlitz3.ab2@15508>    BNE.w brackets_                                         ;syntax error brackets
0002B4C6 <AmiBlitz3.ab2@15511> BRA.w get1bytemain
0002B4CA <AmiBlitz3.ab2@15515>    BSR.w eval4
0002B4CE <AmiBlitz3.ab2@15516>   CMP.w #$5,D2
0002B4D2 <AmiBlitz3.ab2@15517>    BCC.w illoperr
0002B4D8 <AmiBlitz3.ab2@15518>   MOVE.w regnum,D1
0002B4DC <AmiBlitz3.ab2@15519>   ORI.w #$4640,D1
0002B4E0 <AmiBlitz3.ab2@15520>   CMP.w #$3,D2
0002B4E4 <AmiBlitz3.ab2@15521>    BCS.w writeword
0002B4E8 <AmiBlitz3.ab2@15522>   EORI.w #$C0,D1
0002B4EC <AmiBlitz3.ab2@15523> BRA.w writeword
0002B4EE <AmiBlitz3.ab2@15527>   MOVEQ.l #$05,D2                                          ;fpu pi
0002B4F4 <AmiBlitz3.ab2@15528>    TST.b fpu
0002B4F8 <AmiBlitz3.ab2@15529>   BEQ 'old
0002B4FE <AmiBlitz3.ab2@15530> JMP fpupi
0002B504 <AmiBlitz3.ab2@15533>   MOVE.w regnum,D1
0002B506 <AmiBlitz3.ab2@15534>   LSL.w #8,D1
0002B508 <AmiBlitz3.ab2@15535>   LSL.w #1,D1
0002B50C <AmiBlitz3.ab2@15536>   ORI.w #$203C,D1
0002B510 <AmiBlitz3.ab2@15537>    BSR.w writeword
0002B516 <AmiBlitz3.ab2@15538>   MOVE.l #$C90FDA42,D1
0002B51A <AmiBlitz3.ab2@15539>    BSR.w writelong
0002B51E <AmiBlitz3.ab2@15540> BRA.w get1bytemain
0002B61A <AmiBlitz3.ab2@15548> forthstack:  Ds.l 63                                       ;ds.b  18*32 org source
0002B716 <AmiBlitz3.ab2@15549>              Ds.l 63
0002B75E <AmiBlitz3.ab2@15550>              Ds.l 18
0002B762 <AmiBlitz3.ab2@15551> forthsp:     Dc.l forthstack
0002B78E <AmiBlitz3.ab2@15556>    !fget
0002B792 <AmiBlitz3.ab2@15557>    CMP.b #$7e,d0
0002B796 <AmiBlitz3.ab2@15558>    BNE 'noc
0002B798 <AmiBlitz3.ab2@15559>    SUBQ.l #1,a5
0002B79C <AmiBlitz3.ab2@15560>    BSR get1bytemain
0002B7A0 <AmiBlitz3.ab2@15563>    CMP.b #"#",d0
0002B7A4 <AmiBlitz3.ab2@15564>    BNE 'ld1
0002B7A8 <AmiBlitz3.ab2@15565>    CMP.b #$22,(a5)
0002B7AC <AmiBlitz3.ab2@15566>    BNE 'ld1
0002B7B2 <AmiBlitz3.ab2@15567>    JSR addimmi
0002B7B6 <AmiBlitz3.ab2@15570>    CMP.b #$22,d0
0002B7BA <AmiBlitz3.ab2@15571>    BNE 'l11
0002B7C0 <AmiBlitz3.ab2@15581>    NOT.w instringon
0002B7C2 <AmiBlitz3.ab2@15584>    TST.b d0
0002B7C6 <AmiBlitz3.ab2@15585>    BPL 'l10
0002B7C8 <AmiBlitz3.ab2@15586>    LSL.w #8,d0
0002B7CA <AmiBlitz3.ab2@15587>    MOVE.b (a5)+,d0                      ; get blitz instruction with returnvalue
0002B7D0 <AmiBlitz3.ab2@15588>    MOVE.l d0,lasttoken
0002B7D6 <AmiBlitz3.ab2@15589>    MOVE.w d0,lastchar
0002B7DC <AmiBlitz3.ab2@15590>    CLR.l rightsidetype                  ; blitzlibs do currently no type check
0002B7E0 <AmiBlitz3.ab2@15592>   CMP.w #"(",D0
0002B7E4 <AmiBlitz3.ab2@15593>    BEQ.w checkcast2
0002B7E8 <AmiBlitz3.ab2@15594> nocast CMP.w #"{",D0
0002B7EC <AmiBlitz3.ab2@15595>    BEQ.w JL_0_A410
0002B7F0 <AmiBlitz3.ab2@15596>   CMP.w #$2D,D0
0002B7F4 <AmiBlitz3.ab2@15597>    BEQ.w JL_0_A3DA
0002B7F8 <AmiBlitz3.ab2@15598>   CMP.w #-$7F77,D0
0002B7FC <AmiBlitz3.ab2@15599>    BEQ.w JL_0_A428
0002B800 <AmiBlitz3.ab2@15600>   MOVEA.l forthsp(PC),A1
0002B806 <AmiBlitz3.ab2@15601>   CMPA.l #forthsp,A1
0002B80A <AmiBlitz3.ab2@15602>    BCC.w conmemerr
0002B810 <AmiBlitz3.ab2@15603>   MOVE.l destpointer,(A1)+
0002B816 <AmiBlitz3.ab2@15604>   MOVE.l hunkoffsetbase,(A1)+
0002B81C <AmiBlitz3.ab2@15605>   MOVE.l lasta6,(A1)+
0002B822 <AmiBlitz3.ab2@15606>   MOVE.w lasta6,(A1)+
0002B824 <AmiBlitz3.ab2@15607>   CLR.w (A1)+
0002B826 <AmiBlitz3.ab2@15608>   CLR.w (A1)+
0002B82C <AmiBlitz3.ab2@15609>   MOVE.l A1,forthsp
0002B83E <AmiBlitz3.ab2@15611>    !compare2
0002B842 <AmiBlitz3.ab2@15612>    BEQ.w JL_0_B224
0002B846 <AmiBlitz3.ab2@15613>   CMP.w #".",D0
0002B84A <AmiBlitz3.ab2@15614>    BEQ.w JL_0_B21E
0002B84E <AmiBlitz3.ab2@15615>   CMP.w #"#",D0
0002B852 <AmiBlitz3.ab2@15616>    BEQ.w get_constant
0002B856 <AmiBlitz3.ab2@15617>   CMP.w #"$",D0
0002B85A <AmiBlitz3.ab2@15618>    BEQ.w get_hexconstant
0002B85E <AmiBlitz3.ab2@15619>   CMP.w #"%",D0
0002B862 <AmiBlitz3.ab2@15620>    BEQ.w JL_0_A8C0
0002B866 <AmiBlitz3.ab2@15621>   CMP.w #-$7FD1,D0
0002B86A <AmiBlitz3.ab2@15622>    BEQ.w _SizeOf
0002B86E <AmiBlitz3.ab2@15623>   CMP.w #-$7F46,D0
0002B872 <AmiBlitz3.ab2@15624>    BEQ.w JL_0_A44E
0002B876 <AmiBlitz3.ab2@15625>   CMP.w #-$7F3B,D0
0002B87A <AmiBlitz3.ab2@15626>    BEQ.w JL_0_A83C
0002B87E <AmiBlitz3.ab2@15627>   CMP.w #-$7F3A,D0
0002B882 <AmiBlitz3.ab2@15628>    BEQ.w JL_0_A846
0002B888 <AmiBlitz3.ab2@15629>   MOVE.w constmode,D1
0002B88C <AmiBlitz3.ab2@15630>    BEQ.w JL_0_A776
0002B8AE <AmiBlitz3.ab2@15631>    !compare1                                               ;bsr.w tstalpha
0002B8B2 <AmiBlitz3.ab2@15632>    BEQ.w JL_0_AF22
0002B8B6 <AmiBlitz3.ab2@15633>   CMP.w #$5F,D0
0002B8BA <AmiBlitz3.ab2@15634>    BEQ.w JL_0_AF22
0002B8BE <AmiBlitz3.ab2@15635>   CMP.w #$22,D0
0002B8C2 <AmiBlitz3.ab2@15636>    BEQ.w JL_0_AF00
0002B8C6 <AmiBlitz3.ab2@15637> BRA.w syntaxerr
0002B8CC <AmiBlitz3.ab2@15639> checkcast2 JMP checkcast
0002B8D2 <AmiBlitz3.ab2@15642>   MOVE.w cfetchmode,D1
0002B8D6 <AmiBlitz3.ab2@15643>   BEQ.w JL_0_A784
0002B8DA <AmiBlitz3.ab2@15644> BRA.w badconerr
0002B8E0 <AmiBlitz3.ab2@15647> JMP syntaxerropt4
0002B8E2 <AmiBlitz3.ab2@15651>   NOT.w -(A1)
0002B904 <AmiBlitz3.ab2@15652>   !compare1                                                ;bsr.w tstalpha
0002B908 <AmiBlitz3.ab2@15653>    BEQ.w JL_0_AF4C
0002B90C <AmiBlitz3.ab2@15654>   CMP.w #$2A,D0
0002B910 <AmiBlitz3.ab2@15655>    BEQ.w JL_0_AF4C
0002B914 <AmiBlitz3.ab2@15656>   CMP.w #$5C,D0
0002B918 <AmiBlitz3.ab2@15657>    BEQ.w JL_0_AF4C
0002B91C <AmiBlitz3.ab2@15658>   CMP.w #$22,D0
0002B920 <AmiBlitz3.ab2@15659>    BEQ.w JL_0_ADC0
0002B924 <AmiBlitz3.ab2@15660>   BTST #$F,D0
0002B928 <AmiBlitz3.ab2@15661>    BNE.w JL_0_AAF2
0002B92C <AmiBlitz3.ab2@15662>   CMP.w #"&",D0
0002B930 <AmiBlitz3.ab2@15663>    BEQ.w getvaraddr                                          ;jump to & address of var code
0002B934 <AmiBlitz3.ab2@15664>   CMP.w #"?",D0
0002B938 <AmiBlitz3.ab2@15665>    BEQ.w JL_0_AED4
0002B93C <AmiBlitz3.ab2@15668>   CMP.b #"@",d0
0002B940 <AmiBlitz3.ab2@15669>    BNE syntaxerr
0002B946 <AmiBlitz3.ab2@15670>   TST.b newsyntax
0002B94A <AmiBlitz3.ab2@15671>    BEQ JUMP_syntaxerropt4
0002B950 <AmiBlitz3.ab2@15672>   MOVE.w regnum,D1
0002B952 <AmiBlitz3.ab2@15673>   LSL.w #8,D1
0002B954 <AmiBlitz3.ab2@15674>   LSL.w #1,D1
0002B958 <AmiBlitz3.ab2@15675>   ORI.w #$203C,D1
0002B95C <AmiBlitz3.ab2@15676>   BSR.w writeword
0002B960 <AmiBlitz3.ab2@15677>   CMP.b #$22,(a5)
0002B964 <AmiBlitz3.ab2@15678>    BNE syntaxerr
0002B966 <AmiBlitz3.ab2@15679>   ADDQ #1,a5
0002B968 <AmiBlitz3.ab2@15680>   MOVEQ #0,d0
0002B96C <AmiBlitz3.ab2@15681>   CMP.b #1,d2
0002B970 <AmiBlitz3.ab2@15682>    BEQ 'l3b
0002B974 <AmiBlitz3.ab2@15683>   CMP.b #2,d2
0002B978 <AmiBlitz3.ab2@15684>    BEQ 'l2b
0002B97C <AmiBlitz3.ab2@15685>   CMP.b #4,d2
0002B980 <AmiBlitz3.ab2@15686>    BEQ error_convert_types
0002B982 <AmiBlitz3.ab2@15687>   MOVE.b (a5)+,d0
0002B986 <AmiBlitz3.ab2@15688>   BEQ syntaxerr
0002B98A <AmiBlitz3.ab2@15689>   CMP.b #$22,d0
0002B98E <AmiBlitz3.ab2@15690>   BNE 'l1
0002B992 <AmiBlitz3.ab2@15691>     MOVE.b #0,d0
0002B996 <AmiBlitz3.ab2@15692> BRA 'do
0002B998 <AmiBlitz3.ab2@15695>   ASL.l #8,d0
0002B99A <AmiBlitz3.ab2@15696>   MOVE.b (a5)+,d0
0002B99E <AmiBlitz3.ab2@15697>   BEQ syntaxerr
0002B9A2 <AmiBlitz3.ab2@15698>   CMP.b #$22,d0
0002B9A6 <AmiBlitz3.ab2@15699>   BNE 'l2
0002B9AA <AmiBlitz3.ab2@15700>     MOVE.b #0,d0
0002B9AC <AmiBlitz3.ab2@15701>     ASR.l #8,d0
0002B9B0 <AmiBlitz3.ab2@15702> BRA 'do
0002B9B2 <AmiBlitz3.ab2@15705>   ASL.l #8,d0
0002B9B4 <AmiBlitz3.ab2@15708>   MOVE.b (a5)+,d0
0002B9B8 <AmiBlitz3.ab2@15709>    BEQ syntaxerr
0002B9BC <AmiBlitz3.ab2@15710>    CMP.b #$22,d0
0002B9C0 <AmiBlitz3.ab2@15711>    BNE 'l3
0002B9C4 <AmiBlitz3.ab2@15712>    MOVE.b #0,d0
0002B9C6 <AmiBlitz3.ab2@15713>    ASR.l #8,d0
0002B9CA <AmiBlitz3.ab2@15714> BRA 'do
0002B9CC <AmiBlitz3.ab2@15717>   ASL.l #8,d0
0002B9CE <AmiBlitz3.ab2@15720>   MOVE.b (a5)+,d0
0002B9D2 <AmiBlitz3.ab2@15721>    BEQ syntaxerr
0002B9D6 <AmiBlitz3.ab2@15722>    CMP.b #$22,d0
0002B9DA <AmiBlitz3.ab2@15723>    BNE 'l4
0002B9DE <AmiBlitz3.ab2@15724>    MOVE.b #0,d0
0002B9E0 <AmiBlitz3.ab2@15725>    ASR.l #8,d0
0002B9E4 <AmiBlitz3.ab2@15726> BRA 'do
0002B9E8 <AmiBlitz3.ab2@15729>    CMP.b #$22,(a5)+
0002B9EC <AmiBlitz3.ab2@15730>    BNE JUMP_error4char
0002B9EE <AmiBlitz3.ab2@15733>   MOVE.l d0,d1
0002B9F2 <AmiBlitz3.ab2@15734>     BSR writelong
0002B9F6 <AmiBlitz3.ab2@15735>     BSR get1bytemain
0002B9F8 <AmiBlitz3.ab2@15736> RTS
0002B9FC <AmiBlitz3.ab2@15740>   BSR.w get1bytemain
0002BA00 <AmiBlitz3.ab2@15741>   CMP.w #$2E,D0
0002BA04 <AmiBlitz3.ab2@15742>    BEQ.b JL_0_A7F4
0002BA0E <AmiBlitz3.ab2@15744>   MOVE.w oldqflag,instringon
0002BA14 <AmiBlitz3.ab2@15745>   MOVEA.l lastsourcepos,A5
0002BA16 <AmiBlitz3.ab2@15746>   MOVE.w D2,-(A7)
0002BA1A <AmiBlitz3.ab2@15747>    BSR.w getparameter2
0002BA1E <AmiBlitz3.ab2@15748>    BEQ.w syntaxerr
0002BA24 <AmiBlitz3.ab2@15749>   LEA varbase,A2
0002BA28 <AmiBlitz3.ab2@15750>    BSR.w findvariable
0002BA2C <AmiBlitz3.ab2@15751>    BNE.w notypeerr
0002BA30 <AmiBlitz3.ab2@15752>   MOVE.w $4(A2),D3
0002BA32 <AmiBlitz3.ab2@15753>   EXT.l D3
0002BA34 <AmiBlitz3.ab2@15754>   MOVE.w (A7)+,D2
0002BA38 <AmiBlitz3.ab2@15755> BRA.w JL_0_B46E
0002BA3A <AmiBlitz3.ab2@15759>   MOVE.w D2,-(A7)
0002BA3E <AmiBlitz3.ab2@15760>    BSR.w getparameter2
0002BA42 <AmiBlitz3.ab2@15761>    BEQ.w syntaxerr
0002BA48 <AmiBlitz3.ab2@15762>   LEA newtypebase,A2
0002BA4C <AmiBlitz3.ab2@15763>    BSR.w findtype
0002BA50 <AmiBlitz3.ab2@15764>    BNE.w notypeerr
0002BA52 <AmiBlitz3.ab2@15765>   MOVEQ.l #$00,D3
0002BA56 <AmiBlitz3.ab2@15766>   CMP.w #$5C,D0
0002BA5A <AmiBlitz3.ab2@15767>    BNE.w JL_0_A832
0002BA5E <AmiBlitz3.ab2@15768>    BSR.w getparameter2
0002BA62 <AmiBlitz3.ab2@15769>    BEQ.w syntaxerr
0002BA66 <AmiBlitz3.ab2@15770>   LEA $4(A2),A2
0002BA6A <AmiBlitz3.ab2@15771>    BSR.w findvariable2
0002BA6E <AmiBlitz3.ab2@15772>    BNE.w noofferr
0002BA72 <AmiBlitz3.ab2@15773>   MOVE.w $4(A2),D3
0002BA76 <AmiBlitz3.ab2@15774> BRA.w JL_0_A836
0002BA7A <AmiBlitz3.ab2@15778>   MOVE.w $8(A2),D3
0002BA7C <AmiBlitz3.ab2@15781>   MOVE.w (A7)+,D2
0002BA80 <AmiBlitz3.ab2@15782> BRA.w JL_0_B46E
0002BA82 <AmiBlitz3.ab2@15786>   MOVEQ.l #-$01,D3
0002BA86 <AmiBlitz3.ab2@15787>    BSR.w get1bytemain
0002BA8A <AmiBlitz3.ab2@15788> BRA.w JL_0_B46E
0002BA8C <AmiBlitz3.ab2@15792>   MOVEQ.l #$00,D3
0002BA90 <AmiBlitz3.ab2@15793>    BSR.w get1bytemain
0002BA94 <AmiBlitz3.ab2@15794> BRA.w JL_0_B46E
0002BA98 <AmiBlitz3.ab2@15798>   CMP.w #$30,D0
0002BA9C <AmiBlitz3.ab2@15799>    BCS.w JL_0_A876
0002BAA0 <AmiBlitz3.ab2@15800>   CMP.w #$39,D0
0002BAA4 <AmiBlitz3.ab2@15801>    BLS.w JL_0_A874
0002BAA8 <AmiBlitz3.ab2@15802>   ANDI.w #$FFDF,D0
0002BAAC <AmiBlitz3.ab2@15803>   CMP.w #$46,D0
0002BAB0 <AmiBlitz3.ab2@15804>    BHI.w JL_0_A876
0002BAB4 <AmiBlitz3.ab2@15805>   CMP.w #$41,D0
0002BAB8 <AmiBlitz3.ab2@15806>    BCS.w JL_0_A876
0002BABA <AmiBlitz3.ab2@15809>    CMP.w D0,D0
0002BABC <AmiBlitz3.ab2@15812> RTS
0002BAC0 <AmiBlitz3.ab2@15816>   CMP.w #$31,D0
0002BAC4 <AmiBlitz3.ab2@15817>    BEQ.w JL_0_A884
0002BAC8 <AmiBlitz3.ab2@15818>   CMP.w #$30,D0
0002BACA <AmiBlitz3.ab2@15821> RTS
0002BACC <AmiBlitz3.ab2@15825>    MOVEQ #0,d0
0002BACE <AmiBlitz3.ab2@15826>    MOVE.b (a5)+,d0
0002BAD0 <AmiBlitz3.ab2@15827>    MOVE.b (a5)+,d0
0002BAD4 <AmiBlitz3.ab2@15828>    BSR ishex
0002BAD8 <AmiBlitz3.ab2@15829>    BNE syntaxerr
0002BADC <AmiBlitz3.ab2@15830>    SUBI.w #$30,D0
0002BAE0 <AmiBlitz3.ab2@15831>    CMP.w #$9,D0
0002BAE4 <AmiBlitz3.ab2@15832>    BLS.w 'l1
0002BAE6 <AmiBlitz3.ab2@15833>    SUBQ.w #7,D0
0002BAE8 <AmiBlitz3.ab2@15836>    MOVE.l d0,d1
0002BAEA <AmiBlitz3.ab2@15837>    MOVE.b (a5)+,d0
0002BAEE <AmiBlitz3.ab2@15838>      BSR ishex
0002BAF2 <AmiBlitz3.ab2@15839>     BNE syntaxerr
0002BAF4 <AmiBlitz3.ab2@15840>     LSL.l #4,d1
0002BAF8 <AmiBlitz3.ab2@15841>     SUBI.w #$30,D0
0002BAFC <AmiBlitz3.ab2@15842>    CMP.w #$9,D0
0002BB00 <AmiBlitz3.ab2@15843>    BLS.w 'l2
0002BB02 <AmiBlitz3.ab2@15844>    SUBQ.w #7,D0
0002BB04 <AmiBlitz3.ab2@15847>   ADD.l d1,d0
0002BB06 <AmiBlitz3.ab2@15848> RTS
0002BB0A <AmiBlitz3.ab2@15852>    BSR.w get1bytemain
0002BB0E <AmiBlitz3.ab2@15853>    BSR.w ishex
0002BB12 <AmiBlitz3.ab2@15854>    BNE.w syntaxerr
0002BB14 <AmiBlitz3.ab2@15855>   MOVEQ.l #$00,D3
0002BB18 <AmiBlitz3.ab2@15856>   CMP.w #5,d2
0002BB1C <AmiBlitz3.ab2@15857>   BNE JL_0_A894
0002BB22 <AmiBlitz3.ab2@15858>   CMP.l #newtype_double,a2
0002BB26 <AmiBlitz3.ab2@15859>   BEQ 'doit
0002BB2C <AmiBlitz3.ab2@15860>   CMP.l #newtype_float,a2
0002BB30 <AmiBlitz3.ab2@15861>   BNE JL_0_A894
0002BB38 <AmiBlitz3.ab2@15864>    fmove.s #0,fp0
0002BB3E <AmiBlitz3.ab2@15866>   TST.b fpu
0002BB42 <AmiBlitz3.ab2@15867>   BEQ JL_0_A894
0002BB48 <AmiBlitz3.ab2@15868>   fmove.w #16,fp1
0002BB4C <AmiBlitz3.ab2@15869>   fmul.x fp1,fp0
0002BB50 <AmiBlitz3.ab2@15870>   SUBI.w #$30,D0
0002BB54 <AmiBlitz3.ab2@15871>   CMP.w #$9,D0
0002BB58 <AmiBlitz3.ab2@15872>    BLS.w JL_0_A8AEa
0002BB5A <AmiBlitz3.ab2@15873>   SUBQ.w #7,D0
0002BB5E <AmiBlitz3.ab2@15876>    fmove.w d0,fp1
0002BB62 <AmiBlitz3.ab2@15877>    fadd.x fp1,fp0
0002BB66 <AmiBlitz3.ab2@15878>    BSR.w get1bytemain
0002BB6A <AmiBlitz3.ab2@15879>    BSR.w ishex
0002BB6E <AmiBlitz3.ab2@15880>    BEQ.w JL_0_A894a
0002BB72 <AmiBlitz3.ab2@15881> BRA.w nofpregload
0002BB78 <AmiBlitz3.ab2@15885>   CMP.l #$10000000,D3
0002BB7C <AmiBlitz3.ab2@15886>    BCC.w overerr
0002BB7E <AmiBlitz3.ab2@15887>   LSL.l #4,D3
0002BB82 <AmiBlitz3.ab2@15888>   SUBI.w #$30,D0
0002BB86 <AmiBlitz3.ab2@15889>   CMP.w #$9,D0
0002BB8A <AmiBlitz3.ab2@15890>    BLS.w JL_0_A8AE
0002BB8C <AmiBlitz3.ab2@15891>   SUBQ.w #7,D0
0002BB8E <AmiBlitz3.ab2@15894>   OR.w D0,D3
0002BB92 <AmiBlitz3.ab2@15895>    BSR.w get1bytemain
0002BB96 <AmiBlitz3.ab2@15896>    BSR.w ishex
0002BB9A <AmiBlitz3.ab2@15897>    BEQ.w JL_0_A894
0002BB9E <AmiBlitz3.ab2@15898> BRA.w JL_0_B46E
0002BBA2 <AmiBlitz3.ab2@15902>    BSR.w get1bytemain
0002BBA6 <AmiBlitz3.ab2@15903>    BSR.w JL_0_A878
0002BBAA <AmiBlitz3.ab2@15904>    BNE.w syntaxerr
0002BBAC <AmiBlitz3.ab2@15905>    MOVEQ.l #$00,D3
0002BBAE <AmiBlitz3.ab2@15908>    LSL.l #1,D3
0002BBB2 <AmiBlitz3.ab2@15909>    BCS.w overerr
0002BBB6 <AmiBlitz3.ab2@15910>   SUBI.w #$30,D0
0002BBB8 <AmiBlitz3.ab2@15911>   OR.w D0,D3
0002BBBC <AmiBlitz3.ab2@15912>    BSR.w get1bytemain
0002BBC0 <AmiBlitz3.ab2@15913>    BSR.w JL_0_A878
0002BBC4 <AmiBlitz3.ab2@15914>    BEQ.w JL_0_A8CE
0002BBC8 <AmiBlitz3.ab2@15915> BRA.w JL_0_B46E
0002BBCA <AmiBlitz3.ab2@15919>    MOVE.w d2,-(A7)
0002BBD2 <AmiBlitz3.ab2@15920>    MOVE.b #0,automode
0002BBD6 <AmiBlitz3.ab2@15921>    CMP.b #"@",(a5)
0002BBDA <AmiBlitz3.ab2@15922>    BNE 'l1
0002BBDC <AmiBlitz3.ab2@15923>    ADDQ.l #1,a5
0002BBE4 <AmiBlitz3.ab2@15924>    MOVE.b #1,automode
0002BBE8 <AmiBlitz3.ab2@15925>    BSR getparameter2
0002BBEC <AmiBlitz3.ab2@15926>    BSR findlabel2
0002BBF0 <AmiBlitz3.ab2@15927>    BNE 'addit
0002BBF4 <AmiBlitz3.ab2@15928> BRA errormsg_autocount
0002BBF8 <AmiBlitz3.ab2@15931>   BSR.w addlabelhash
0002BC00 <AmiBlitz3.ab2@15932>   MOVE.l #$1,$4(A2)
0002BC04 <AmiBlitz3.ab2@15933>   MOVEM.l a2/a5,-(a7)
0002BC0A <AmiBlitz3.ab2@15934>   MOVE.w lastchar,-(a7)
0002BC10 <AmiBlitz3.ab2@15935>   LEA autostorename,a5
0002BC14 <AmiBlitz3.ab2@15936>   BSR getparameter2
0002BC18 <AmiBlitz3.ab2@15937>   BSR findlabel2
0002BC1C <AmiBlitz3.ab2@15938>   BEQ 'found
0002BC20 <AmiBlitz3.ab2@15939>   BSR.w addlabelhash
0002BC28 <AmiBlitz3.ab2@15940>   MOVE.l #$1,$4(A2)
0002BC30 <AmiBlitz3.ab2@15941>   MOVE.l #0,8(a2)
0002BC32 <AmiBlitz3.ab2@15944>    MOVE.w (a7)+,d0
0002BC38 <AmiBlitz3.ab2@15945>    MOVE.w d0,lastchar
0002BC3C <AmiBlitz3.ab2@15946>   MOVE.l 8(a2),d3
0002BC44 <AmiBlitz3.ab2@15947>   ADD.l #1,8(a2)
0002BC48 <AmiBlitz3.ab2@15948>   MOVEM.l (a7)+,a2/a5
0002BC4C <AmiBlitz3.ab2@15949>   MOVE.l d3,8(a2)
0002BC50 <AmiBlitz3.ab2@15950>   MOVE.l $8(A2),D3
0002BC54 <AmiBlitz3.ab2@15951> BRA.l 'l3
0002BC58 <AmiBlitz3.ab2@15954>   BSR.w getparameter2
0002BC5E <AmiBlitz3.ab2@15955>     TST.b incnif
0002BC62 <AmiBlitz3.ab2@15956>     BEQ 'lc1
0002BC66 <AmiBlitz3.ab2@15957>     BSR.w findlabel2
0002BC6A <AmiBlitz3.ab2@15958>     BNE 'l5
0002BC6C <AmiBlitz3.ab2@15959>     MOVEQ #1,d3
0002BC6E <AmiBlitz3.ab2@15960>     MOVE.w (A7)+,D2
0002BC72 <AmiBlitz3.ab2@15961> BRA JL_0_B46E
0002BC74 <AmiBlitz3.ab2@15964>   MOVEQ #0,d3
0002BC76 <AmiBlitz3.ab2@15965>     MOVE.w (A7)+,D2
0002BC7A <AmiBlitz3.ab2@15966> BRA JL_0_B46E
0002BC7E <AmiBlitz3.ab2@15969>    BSR.w findlabel2
0002BC82 <AmiBlitz3.ab2@15970>    BNE.w cnferr
0002BC8A <AmiBlitz3.ab2@15973>    CMPI.l #$1,$4(A2)
0002BC8E <AmiBlitz3.ab2@15974>    BNE.w cnferr
0002BC92 <AmiBlitz3.ab2@15976>    MOVE.l $8(A2),D3
0002BC94 <AmiBlitz3.ab2@15977>    MOVE.w (A7)+,D2
0002BC98 <AmiBlitz3.ab2@15978> BRA.w JL_0_B46E
0002BC9E <AmiBlitz3.ab2@15982>   CLR.w vartype
0002BCA6 <AmiBlitz3.ab2@15983>   MOVE.b #3,peekaddrsize
0002BCAA <AmiBlitz3.ab2@15984>   BSR.w JL_0_A916
0002BCB0 <AmiBlitz3.ab2@15985>   MOVE.l a2,rightsidetype
0002BCB2 <AmiBlitz3.ab2@15986>   MOVEQ.l #$03,D2
0002BCB4 <AmiBlitz3.ab2@15987> RTS
0002BCB8 <AmiBlitz3.ab2@15991>    BSR.w get1bytemain
0002BCCA <AmiBlitz3.ab2@15992>    !compare2
0002BCCE <AmiBlitz3.ab2@15993>    BEQ andop2
0002BCD2 <AmiBlitz3.ab2@15994>    BSR.w getparameter
0002BCD6 <AmiBlitz3.ab2@15995>    BSR.w JL_0_8E3C
0002BCDA <AmiBlitz3.ab2@15996>    BSR.w calcvar
0002BCDE <AmiBlitz3.ab2@15997>   CMP.b #$7,D2
0002BCE2 <AmiBlitz3.ab2@15998>    BNE.w JL_0_A960
0002BCE6 <AmiBlitz3.ab2@15999>   BTST #$F,D2
0002BCEA <AmiBlitz3.ab2@16000>    BNE.w JL_0_A94A
0002BCF0 <AmiBlitz3.ab2@16001>   MOVE.w D3,stamp2+2
0002BCF6 <AmiBlitz3.ab2@16002>   MOVE.l stamp2,D1
0002BCFA <AmiBlitz3.ab2@16003>    BSR.w pokela5s
0002BCFE <AmiBlitz3.ab2@16004> BRA.w JL_0_A978
0002BD04 <AmiBlitz3.ab2@16008>   MOVE.w regnum,D1
0002BD06 <AmiBlitz3.ab2@16009>   LSL.w #8,D1
0002BD08 <AmiBlitz3.ab2@16010>   LSL.w #1,D1
0002BD0E <AmiBlitz3.ab2@16011>   OR.w stamp,D1
0002BD12 <AmiBlitz3.ab2@16012>    BSR.w writeword
0002BD14 <AmiBlitz3.ab2@16013> RTS
0002BD18 <AmiBlitz3.ab2@16017>   BTST #$F,D2
0002BD1C <AmiBlitz3.ab2@16018>    BNE.w JL_0_A978
0002BD22 <AmiBlitz3.ab2@16019>   MOVE.w D3,leaamp+2
0002BD28 <AmiBlitz3.ab2@16020>   MOVE.l leaamp,D1
0002BD2C <AmiBlitz3.ab2@16021>    BSR.w pokela5s
0002BD32 <AmiBlitz3.ab2@16024>   MOVE.w regnum,D1
0002BD34 <AmiBlitz3.ab2@16025>   LSL.w #8,D1
0002BD36 <AmiBlitz3.ab2@16026>   LSL.w #1,D1
0002BD3C <AmiBlitz3.ab2@16027>   OR.w leaamp2,D1
0002BD40 <AmiBlitz3.ab2@16028> BRA.w writeword
0002BD44 <AmiBlitz3.ab2@16032>   MOVE.w #$D200,D1
0002BD48 <AmiBlitz3.ab2@16033>    BSR.w Atokejsr
0002BD4A <AmiBlitz3.ab2@16034>   MOVEQ.l #$03,D2
0002BD4C <AmiBlitz3.ab2@16035> RTS
0002BD50 <AmiBlitz3.ab2@16039> addrcode:  Dc.b $20,$6D,$00,$00                            ;MOVEA.L $0000(A5),A0
0002BD52 <AmiBlitz3.ab2@16040>            Dc.b $D0,$C0                                    ;ADDA.W  D0,A0
0002BD54 <AmiBlitz3.ab2@16041>            Dc.b $20,$08                                    ;MOVE.L  A0,D0
0002BD58 <AmiBlitz3.ab2@16047>    BSR.w get1bytemain
0002BD5A <AmiBlitz3.ab2@16048>   MOVE.w D0,D1
0002BD5E <AmiBlitz3.ab2@16049>    BPL.w syntaxerr
0002BD60 <AmiBlitz3.ab2@16050>   MOVE.w D2,-(A7)
0002BD64 <AmiBlitz3.ab2@16051>   BCLR #$F,D1
0002BD68 <AmiBlitz3.ab2@16052>    BSR.w searchinstr
0002BD6C <AmiBlitz3.ab2@16053>   MOVE.l $12(A2),D0
0002BD70 <AmiBlitz3.ab2@16054>   TST.w -$2(A2,D0.L)
0002BD74 <AmiBlitz3.ab2@16055>    BEQ.w freeerr
0002BD76 <AmiBlitz3.ab2@16056>   MOVE.w (A7)+,D2
0002BD78 <AmiBlitz3.ab2@16057> RTS
0002BD7C <AmiBlitz3.ab2@16061>   MOVE.l $0(A5),D0
0002BD80 <AmiBlitz3.ab2@16062>    BNE.b ucodeskip
0002BD82 <AmiBlitz3.ab2@16063>   MOVEQ.l #-$01,D0
0002BD86 <AmiBlitz3.ab2@16064> BRA.b usedcodef
0002BD8A <AmiBlitz3.ab2@16067>   SUB.l $0(A5),D0
0002BD8C <AmiBlitz3.ab2@16070>   LSR.w #8,D0
0002BD90 <AmiBlitz3.ab2@16075>    MOVE.l $0(A5),D0
0002BD94 <AmiBlitz3.ab2@16076>    BNE.b ucodeskip2
0002BD96 <AmiBlitz3.ab2@16077>   MOVEQ.l #-$01,D0
0002BD9A <AmiBlitz3.ab2@16078> BRA.b usedcode2f
0002BD9E <AmiBlitz3.ab2@16081>   SUB.l $0(A5),D0                                          ;usedcode2
0002BDA0 <AmiBlitz3.ab2@16082>   LSR.w #8,D0
0002BDA2 <AmiBlitz3.ab2@16085>   LSR.w #8,D0
0002BDA4 <AmiBlitz3.ab2@16090>   MOVE.l D0,-(A7)
0002BDA6 <AmiBlitz3.ab2@16093>   MOVE.l (A7)+,D0
0002BDA8 <AmiBlitz3.ab2@16096>   MOVE.l D0,D0
0002BDAC <AmiBlitz3.ab2@16102>   BSR.w JL_0_A9A0
0002BDB0 <AmiBlitz3.ab2@16104>   MOVE.w -$2(A2,D0.L),D3
0002BDB4 <AmiBlitz3.ab2@16105>   CMP.w #$9,D3
0002BDB8 <AmiBlitz3.ab2@16106>    BCC.w doused__skip
0002BDBC <AmiBlitz3.ab2@16110>   LEA usedcode(PC),A0
0002BDC0 <AmiBlitz3.ab2@16111>   LEA usedcodef(PC),A1
0002BDC6 <AmiBlitz3.ab2@16113>   ANDI.w #$F1FF,$E+4(A0)                                   ;and #$f1ff,ucodediv-usedcode(a0) org source
0002BDCA <AmiBlitz3.ab2@16114>   ANDI.w #$7,D3
0002BDCC <AmiBlitz3.ab2@16115>   LSL.w #8,D3
0002BDCE <AmiBlitz3.ab2@16116>   LSL.w #1,D3
0002BDD2 <AmiBlitz3.ab2@16117>   OR.w D3,$E+4(A0)                                         ;or  d3,ucodediv-usedcode(a0) org source
0002BDD6 <AmiBlitz3.ab2@16118> BRA.w doused__skip2
0002BDDA <AmiBlitz3.ab2@16123>   LEA usedcode2(PC),A0
0002BDDE <AmiBlitz3.ab2@16124>   LEA usedcode2f(PC),A1
0002BDE4 <AmiBlitz3.ab2@16126>   ANDI.w #$F1FF,$10+4(A0)                                  ;and #$f1ff,ucodediv2-usedcode2(a0) org source
0002BDE6 <AmiBlitz3.ab2@16127>   SUBQ.w #8,D3
0002BDE8 <AmiBlitz3.ab2@16128>   LSL.w #8,D3
0002BDEA <AmiBlitz3.ab2@16129>   LSL.w #1,D3
0002BDEE <AmiBlitz3.ab2@16130>   OR.w D3,$10+4(A0)                                        ;or  d3,ucodediv2-usedcode2(a0) org source
0002BDF2 <AmiBlitz3.ab2@16133>   MOVE.w -$6(A2,D0.L),D3
0002BDF6 <AmiBlitz3.ab2@16134>   MOVE.w D3,$C+4(A0)                                       ;move d3,ucodeskip-usedcode+2(a0) org source
0002BDF8 <AmiBlitz3.ab2@16135>   ADDQ.w #4,D3
0002BDFC <AmiBlitz3.ab2@16136>   MOVE.w D3,$2(A0)
0002BE02 <AmiBlitz3.ab2@16137>   MOVE.w regnum,D1
0002BE06 <AmiBlitz3.ab2@16138>    BEQ.w doused__skip3
0002BE0A <AmiBlitz3.ab2@16139>   MOVE.w usedprep(PC),D1
0002BE0E <AmiBlitz3.ab2@16140>    BSR.w writeword
0002BE12 <AmiBlitz3.ab2@16143>   BSR.w pokecode
0002BE18 <AmiBlitz3.ab2@16144>   MOVE.w regnum,D1
0002BE1C <AmiBlitz3.ab2@16145>    BEQ.w doused__skip4
0002BE1E <AmiBlitz3.ab2@16146>   LSL.w #8,D1
0002BE20 <AmiBlitz3.ab2@16147>   LSL.w #1,D1
0002BE24 <AmiBlitz3.ab2@16148>   OR.w usedfix(PC),D1
0002BE28 <AmiBlitz3.ab2@16149>    BSR.w writeword
0002BE2C <AmiBlitz3.ab2@16150>   MOVE.w useddone(PC),D1
0002BE30 <AmiBlitz3.ab2@16151>    BSR.w writeword
0002BE32 <AmiBlitz3.ab2@16154>    MOVEQ.l #$02,D2
0002BE36 <AmiBlitz3.ab2@16155> BRA.w get1bytemain
0002BE3A <AmiBlitz3.ab2@16163>    BSR.w JL_0_A9A0
0002BE3C <AmiBlitz3.ab2@16165>   MOVEQ.l #$00,D3
0002BE40 <AmiBlitz3.ab2@16166>   MOVE.w -$4(A2,D0.L),D3
0002BE44 <AmiBlitz3.ab2@16167>    BSR.w get1bytemain
0002BE48 <AmiBlitz3.ab2@16168> BRA.w JL_0_B46E
0002BE4C <AmiBlitz3.ab2@16175>    BSR.w get1bytemain
0002BE4E <AmiBlitz3.ab2@16176>   MOVE.w D0,-(A7)
0002BE52 <AmiBlitz3.ab2@16177>    BSR.w get1bytemain
0002BE56 <AmiBlitz3.ab2@16178>   CMP.w #$28,D0
0002BE5A <AmiBlitz3.ab2@16179>    BNE.w syntaxerr
0002BE5C <AmiBlitz3.ab2@16180>   MOVE.w (A7)+,D0
0002BE60 <AmiBlitz3.ab2@16181>    BSR.w JL_0_C340
0002BE64 <AmiBlitz3.ab2@16182>    BSR.w reget
0002BE68 <AmiBlitz3.ab2@16183>   CMP.w #$29,D0
0002BE6C <AmiBlitz3.ab2@16184>    BNE.w syntaxerr
0002BE70 <AmiBlitz3.ab2@16188>   LEA addrcode(PC),A0
0002BE74 <AmiBlitz3.ab2@16189>   LEA addrcodef(PC),A1
0002BE7A <AmiBlitz3.ab2@16190>   MOVE.w -$6(A2),$2(A0)
0002BE7E <AmiBlitz3.ab2@16191>   MOVE.w $4(A0),D1
0002BE82 <AmiBlitz3.ab2@16192>   ANDI.w #$FFF8,D1
0002BE88 <AmiBlitz3.ab2@16193>   OR.w regnum,D1
0002BE8C <AmiBlitz3.ab2@16194>   MOVE.w D1,$4(A0)
0002BE90 <AmiBlitz3.ab2@16195>   MOVE.w $6(A0),D1
0002BE94 <AmiBlitz3.ab2@16196>   ANDI.w #$F1FF,D1
0002BE9A <AmiBlitz3.ab2@16197>   MOVE.w regnum,D0
0002BE9C <AmiBlitz3.ab2@16198>   LSL.w #8,D0
0002BE9E <AmiBlitz3.ab2@16199>   LSL.w #1,D0
0002BEA0 <AmiBlitz3.ab2@16200>   OR.w D0,D1
0002BEA4 <AmiBlitz3.ab2@16201>   MOVE.w D1,$6(A0)
0002BEA8 <AmiBlitz3.ab2@16202>    BSR.w pokecode
0002BEAA <AmiBlitz3.ab2@16203>   MOVEQ.l #$03,D2
0002BEAE <AmiBlitz3.ab2@16204> BRA.w get1bytemain
0002BEB2 <AmiBlitz3.ab2@16208>   CMP.w #-$7F4D,D0
0002BEB6 <AmiBlitz3.ab2@16209>    BHI.w JL_0_AAFE
0002BEBA <AmiBlitz3.ab2@16210> BRA.w syntaxerr
0002BEBE <AmiBlitz3.ab2@16217> .do_null   CMP.w #$b581,d0
0002BEC2 <AmiBlitz3.ab2@16218>    BNE 'nonull
0002BEC8 <AmiBlitz3.ab2@16219>    MOVE.l d0,lastinstruction
0002BECC <AmiBlitz3.ab2@16220>    MOVE.w #$7000,d1                                            ;asm instr moveq #0,dx
0002BED2 <AmiBlitz3.ab2@16221>    MOVE.w regnum,d0
0002BED4 <AmiBlitz3.ab2@16222>    ASL.l #7,d0
0002BED6 <AmiBlitz3.ab2@16223>    ASL.l #2,d0
0002BED8 <AmiBlitz3.ab2@16224>    OR.l d0,d1
0002BEDC <AmiBlitz3.ab2@16225>    BSR writeword
0002BEE2 <AmiBlitz3.ab2@16226>    JSR get1bytemain
0002BEE4 <AmiBlitz3.ab2@16227>    RTS
0002BEE8 <AmiBlitz3.ab2@16229> 'nonull CMP.w #$c982,d0
0002BEEC <AmiBlitz3.ab2@16230>        BNE nonew_
0002BEEE <AmiBlitz3.ab2@16232>   MOVE.l a5,-(a7)
0002BEF4 <AmiBlitz3.ab2@16233>   MOVE.w lastchar,-(a7)
0002BEFA <AmiBlitz3.ab2@16234>   JSR get1bytemain
0002BEFE <AmiBlitz3.ab2@16235>   CMP.w #"(",d0                                             ; use oldcode
0002BF02 <AmiBlitz3.ab2@16236>   BNE 'newcode
0002BF08 <AmiBlitz3.ab2@16237>   JSR get1bytemain
0002BF0C <AmiBlitz3.ab2@16238>   CMP.w #")",d0
0002BF10 <AmiBlitz3.ab2@16239>   BEQ 'newcode
0002BF16 <AmiBlitz3.ab2@16240>   MOVE.w (a7)+,lastchar
0002BF18 <AmiBlitz3.ab2@16241>   MOVE.l (a7)+,a5
0002BF1E <AmiBlitz3.ab2@16242>   MOVE.w lastchar,d0
0002BF22 <AmiBlitz3.ab2@16243>   BRA nonew_
0002BF24 <AmiBlitz3.ab2@16244> 'newcode  MOVE.l a0,-(a7)
0002BF2A <AmiBlitz3.ab2@16245>   TST.b blitzparloop
0002BF2E <AmiBlitz3.ab2@16246>   BNE 'err
0002BF34 <AmiBlitz3.ab2@16247>   TST.b funcparloop
0002BF38 <AmiBlitz3.ab2@16248>   BNE 'err
0002BF3C <AmiBlitz3.ab2@16249>   BRA 'ok
0002BF42 <AmiBlitz3.ab2@16250> 'err JMP errornewnotincalls
0002BF48 <AmiBlitz3.ab2@16251> 'ok  MOVE.l #$203c0000,d1
0002BF4C <AmiBlitz3.ab2@16252>   BSR writelong                                            ; 68k asm move.l #$xx,d0
0002BF4E <AmiBlitz3.ab2@16253>   MOVEQ #0,d1
0002BF52 <AmiBlitz3.ab2@16254>   MOVE.w 8(a0),d1
0002BF56 <AmiBlitz3.ab2@16255>   BSR writeword
0002BF5A <AmiBlitz3.ab2@16256>   MOVE.w #$7200,d1                                         ; 68k asm "moveq #0,d1"
0002BF5E <AmiBlitz3.ab2@16257>   BSR writeword
0002BF62 <AmiBlitz3.ab2@16258>   MOVE.w #$C002,D1                                         ;call function to alloc global mem
0002BF66 <AmiBlitz3.ab2@16259>   BSR.w tokejsr2
0002BF68 <AmiBlitz3.ab2@16260>   MOVE.l (a7)+,a0
0002BF6A <AmiBlitz3.ab2@16261>   ADDQ.l #6,a7                      ; a5 need not restore
0002BF6E <AmiBlitz3.ab2@16262>   CMP.w #")",d0
0002BF72 <AmiBlitz3.ab2@16263>   BNE 'nobracket
0002BF78 <AmiBlitz3.ab2@16264>   JSR get1bytemain
0002BF7A <AmiBlitz3.ab2@16265> 'nobracket  RTS
0002BF7E <AmiBlitz3.ab2@16267> nonew_  CMP.w #-$7F4A,D0
0002BF82 <AmiBlitz3.ab2@16268>    BEQ.w JL_0_A98C
0002BF86 <AmiBlitz3.ab2@16269>   CMP.w #-$7F48,D0
0002BF8A <AmiBlitz3.ab2@16270>    BEQ.w doaddr
0002BF8E <AmiBlitz3.ab2@16271>   CMP.w #-$7F3C,D0
0002BF92 <AmiBlitz3.ab2@16272>    BEQ.w domaximum
0002BF96 <AmiBlitz3.ab2@16273>   CMP.w #-$7F2F,D0
0002BF9A <AmiBlitz3.ab2@16274>    BEQ.w doused
0002BF9C <AmiBlitz3.ab2@16275>   MOVE.w D2,-(A7)
0002BF9E <AmiBlitz3.ab2@16276>   MOVE.w D0,D1
0002BFA2 <AmiBlitz3.ab2@16277>   BCLR #$F,D1
0002BFA6 <AmiBlitz3.ab2@16279>    BSR.w searchinstr
0002BFA8 <AmiBlitz3.ab2@16280>   MOVE.w (A3),D1
0002BFAC <AmiBlitz3.ab2@16281>   BTST #$1,D1
0002BFB0 <AmiBlitz3.ab2@16282>    BEQ.w noreturn_                                         ;syntax error noreturn
0002BFB4 <AmiBlitz3.ab2@16283>   BTST #$2,D1
0002BFB8 <AmiBlitz3.ab2@16284>    BNE.w JL_0_AC1A
0002BFBA <AmiBlitz3.ab2@16285>   LSR.w #8,D1
0002BFC0 <AmiBlitz3.ab2@16286>   BTST #$3,$1(A3)
0002BFC4 <AmiBlitz3.ab2@16287>    BEQ.w JL_0_AB4C
0002BFCA <AmiBlitz3.ab2@16288>    JSR AJL_0_498A
0002BFD0 <AmiBlitz3.ab2@16291>    CLR.l rightsidetype
0002BFD2 <AmiBlitz3.ab2@16292>    MOVE.w D1,-(A7)                                         ;is library instruction
0002BFD6 <AmiBlitz3.ab2@16293>   CMP.w #$7,D1
0002BFDA <AmiBlitz3.ab2@16294>    BNE.w JL_0_AB5E
0002BFDC <AmiBlitz3.ab2@16295>   MOVE.l A2,-(A7)
0002BFE0 <AmiBlitz3.ab2@16296>    BSR.w makesbase
0002BFE2 <AmiBlitz3.ab2@16297>   MOVEA.l (A7)+,A2
0002BFE6 <AmiBlitz3.ab2@16300>     BSR.w JL_0_AFA2
0002BFE8 <AmiBlitz3.ab2@16301>   MOVE.w D3,-(A7)
0002BFEC <AmiBlitz3.ab2@16302>    BSR.w get1bytemain
0002BFEE <AmiBlitz3.ab2@16303>   MOVEQ.l #$00,D1
0002BFF2 <AmiBlitz3.ab2@16304>   CMP.w #$28,D0
0002BFF6 <AmiBlitz3.ab2@16305>    BNE.w JL_0_AB80
0002BFFC <AmiBlitz3.ab2@16306>    JSR JL_0_66F6
0002BFFE <AmiBlitz3.ab2@16307>   TST.w D1
0002C002 <AmiBlitz3.ab2@16308>    BEQ.w syntaxerr
0002C006 <AmiBlitz3.ab2@16309> BRA.w JL_0_AB84
0002C010 <AmiBlitz3.ab2@16314>   MOVE.w oldqflag,instringon
0002C016 <AmiBlitz3.ab2@16315>   MOVEA.l lastsourcepos,A5
0002C01C <AmiBlitz3.ab2@16318>    MOVE.w regnum,-(A7)
0002C026 <AmiBlitz3.ab2@16319>    MOVE.w regnum,regnumstore
0002C02C <AmiBlitz3.ab2@16320>    TST.b fpu
0002C030 <AmiBlitz3.ab2@16321>             BEQ 'nofloat
0002C036 <AmiBlitz3.ab2@16322>             CMP.w #$ffff,28(a3)
0002C03A <AmiBlitz3.ab2@16323>             BNE 'nofloat
0002C040 <AmiBlitz3.ab2@16324>             CMP.w #$3c01,34(a3)                            ;val do nofpu stuff
0002C044 <AmiBlitz3.ab2@16325>             BEQ 'nofloat
0002C04A <AmiBlitz3.ab2@16326>             CMP.w #$3c02,34(a3)                            ;int skip
0002C04E <AmiBlitz3.ab2@16327>             BEQ 'quick
0002C052 <AmiBlitz3.ab2@16328>             CMP.b #5,(a3)
0002C056 <AmiBlitz3.ab2@16329>             BNE 'nofloat
0002C05C <AmiBlitz3.ab2@16332>             CLR.l load_var_addr
0002C060 <AmiBlitz3.ab2@16333> BRA 'isfpu
0002C066 <AmiBlitz3.ab2@16336>    CLR.w regnum
0002C068 <AmiBlitz3.ab2@16339>    MOVE.w D1,-(A7)
0002C06E <AmiBlitz3.ab2@16340>   BTST #$3,$1(A3)
0002C072 <AmiBlitz3.ab2@16341>    BEQ.w JL_0_ABB0
0002C076 <AmiBlitz3.ab2@16360>   MOVE.w $6(A7),D1
0002C07C <AmiBlitz3.ab2@16361>   MOVE.w d1,peeksize
0002C080 <AmiBlitz3.ab2@16371>   ORI.w #$7000,D1
0002C084 <AmiBlitz3.ab2@16372>   BSR.w writeword                                          ;write peekmode
0002C08A <AmiBlitz3.ab2@16375>   ADDQ.w #1,regnum
0002C08C <AmiBlitz3.ab2@16376>   MOVE.w (A7),D1
0002C094 <AmiBlitz3.ab2@16379>   MOVE.w 2(a7),tempregnum
0002C09A <AmiBlitz3.ab2@16380>   JSR JL_0_4878
0002C09C <AmiBlitz3.ab2@16381>   TST.w (A7)+
0002C0A0 <AmiBlitz3.ab2@16382>   BEQ.w JL_0_ABC6
0002C0A4 <AmiBlitz3.ab2@16383>   CMP.w #")",D0                                             ; check if ) here for correct end of blitzlib function call
0002C0A8 <AmiBlitz3.ab2@16384>   BNE.w errorbracketmiss                                    ; was syntax error
0002C0AE <AmiBlitz3.ab2@16385>   CLR.l lasttoken
0002C0B2 <AmiBlitz3.ab2@16386>   BSR.w get1bytemain
0002C0B4 <AmiBlitz3.ab2@16389>    MOVE.w (A7)+,D1
0002C0BA <AmiBlitz3.ab2@16390>   MOVE.w D1,regnum
0002C0BE <AmiBlitz3.ab2@16391>    BEQ.w JL_0_ABDE
0002C0C4 <AmiBlitz3.ab2@16392>    CMP.w #$3c01,24(a2)                                     ;val skipped
0002C0C8 <AmiBlitz3.ab2@16393>    BNE 'noval
0002C0CE <AmiBlitz3.ab2@16394>    TST.b fpu
0002C0D2 <AmiBlitz3.ab2@16395>    BEQ 'noval
0002C0D8 <AmiBlitz3.ab2@16396>    CLR.l load_var_addr
0002C0DA <AmiBlitz3.ab2@16397>    MOVEQ #0,d1
0002C0E0 <AmiBlitz3.ab2@16398>    MOVE.w regnum,d1
0002C0E2 <AmiBlitz3.ab2@16399>    LSL.l #7,d1
0002C0E8 <AmiBlitz3.ab2@16400>    OR.l #$f2000000,d1
0002C0EC <AmiBlitz3.ab2@16401>    BSR writelong
0002C0F0 <AmiBlitz3.ab2@16402> BRA JL_0_ABDE
0002C0F6 <AmiBlitz3.ab2@16406>    CMP.w #$3c02,24(a2)                                     ;int skipped
0002C0FA <AmiBlitz3.ab2@16407>    BEQ 'quick
0002C0FE <AmiBlitz3.ab2@16408>    CMP.b #5,d2
0002C102 <AmiBlitz3.ab2@16409>    BNE 'nofpu
0002C108 <AmiBlitz3.ab2@16410>    TST.b fpu
0002C10C <AmiBlitz3.ab2@16411>    BEQ 'nofpu
0002C112 <AmiBlitz3.ab2@16416>    CLR.l load_var_addr
0002C116 <AmiBlitz3.ab2@16417> BRA JL_0_ABDE
0002C118 <AmiBlitz3.ab2@16420>   LSL.w #8,D1
0002C11A <AmiBlitz3.ab2@16421>   LSL.w #1,D1
0002C11E <AmiBlitz3.ab2@16422>   ORI.w #$2000,D1
0002C122 <AmiBlitz3.ab2@16423>   BSR.w writeword                                          ;write move.l d0,dx
0002C128 <AmiBlitz3.ab2@16424>   TST.b fpu
0002C12C <AmiBlitz3.ab2@16425>   BEQ JL_0_ABDE
0002C12E <AmiBlitz3.ab2@16426>   MOVEQ #0,d1
0002C134 <AmiBlitz3.ab2@16427>   MOVE.w regnum,d1
0002C136 <AmiBlitz3.ab2@16428>   LSL.l #7,d1
0002C13C <AmiBlitz3.ab2@16429>   OR.l #$f2000000,d1
0002C13E <AmiBlitz3.ab2@16433>        MOVE.w (A7)+,D3
0002C142 <AmiBlitz3.ab2@16434>        BEQ.w JL_0_ABFC
0002C148 <AmiBlitz3.ab2@16435>        TST.b fpu
0002C14C <AmiBlitz3.ab2@16436>        BEQ 'nofpu
0002C14E <AmiBlitz3.ab2@16437>       MOVE.l d0,-(a7)
0002C150 <AmiBlitz3.ab2@16438>        MOVE.l a0,-(a7)
0002C156 <AmiBlitz3.ab2@16439>        MOVE.l stacktrack,d1
0002C15C <AmiBlitz3.ab2@16440>        LEA fpustackbase,a0
0002C164 <AmiBlitz3.ab2@16441>        MOVE.w 0(a0,d1),regmask
0002C166 <AmiBlitz3.ab2@16442>        MOVE.l (a7)+,a0
0002C16A <AmiBlitz3.ab2@16443>       MOVE.w #8,d0
0002C16E <AmiBlitz3.ab2@16446>       BEQ 'ready
0002C174 <AmiBlitz3.ab2@16447>       BTST d0,regmask
0002C178 <AmiBlitz3.ab2@16448>       BEQ 'noa7
0002C17A <AmiBlitz3.ab2@16449>       MOVEQ #0,d1
0002C17C <AmiBlitz3.ab2@16450>       MOVE.w d0,d1
0002C17E <AmiBlitz3.ab2@16451>       SUBQ.w #1,d1
0002C180 <AmiBlitz3.ab2@16452>       ASL #7,d1
0002C186 <AmiBlitz3.ab2@16454>       OR.l #$f21f5400,d1                                   ;fmove.d (a7)+
0002C18A <AmiBlitz3.ab2@16455>       BSR writelong
0002C190 <AmiBlitz3.ab2@16456>       SUBQ.l #2,stacktrack
0002C192 <AmiBlitz3.ab2@16459>       SUBQ.w #1,d0
0002C196 <AmiBlitz3.ab2@16460>       BNE 'loop
0002C198 <AmiBlitz3.ab2@16463>       MOVE.l (a7)+,d0
0002C19E <AmiBlitz3.ab2@16464>       SUBQ.l #2,stacktrack                                 ;int track
0002C1A2 <AmiBlitz3.ab2@16467>    MOVE.w #$4CDF,D1
0002C1A6 <AmiBlitz3.ab2@16468>    BSR.w writeword                                         ;write movem.l (a7)+,
0002C1A8 <AmiBlitz3.ab2@16469>   MOVEQ.l #$00,D1
0002C1AA <AmiBlitz3.ab2@16470>   MOVEQ.l #$0F,D4
0002C1AC <AmiBlitz3.ab2@16473>     LSL.w #1,D3
0002C1AE <AmiBlitz3.ab2@16474>     ROXR.w #1,D1
0002C1B2 <AmiBlitz3.ab2@16475>   DBF D4,JL_0_ABF0
0002C1B6 <AmiBlitz3.ab2@16477>    BSR.w writeword
0002C1BC <AmiBlitz3.ab2@16478>    TST.b fast
0002C1C0 <AmiBlitz3.ab2@16479>    BEQ JL_0_ABFC
0002C1C6 <AmiBlitz3.ab2@16480>    TST.w regnum
0002C1CA <AmiBlitz3.ab2@16481>    BEQ JL_0_ABFC
0002C1D0 <AmiBlitz3.ab2@16482>    CMP.w #$3c0e,$1c(a3)                                    ;true
0002C1D4 <AmiBlitz3.ab2@16483>    BNE 'l1
0002C1DA <AmiBlitz3.ab2@16484>    MOVE.w regnum,d1
0002C1DC <AmiBlitz3.ab2@16485>    ASL.l #8,d1
0002C1DE <AmiBlitz3.ab2@16486>    ASL.l #1,d1
0002C1E2 <AmiBlitz3.ab2@16487>    OR.w #$70ff,d1
0002C1EC <AmiBlitz3.ab2@16488>    SUB.l #12,destpointer
0002C1F0 <AmiBlitz3.ab2@16489>    BSR writeword
0002C1F6 <AmiBlitz3.ab2@16492>   CMP.w #$3c0f,$1c(a3)                                     ;false
0002C1FA <AmiBlitz3.ab2@16493>    BNE 'l2
0002C200 <AmiBlitz3.ab2@16494>     MOVE.w regnum,d1
0002C202 <AmiBlitz3.ab2@16495>     ASL.l #8,d1
0002C204 <AmiBlitz3.ab2@16496>     ASL.l #1,d1
0002C208 <AmiBlitz3.ab2@16497>     OR.w #$7000,d1
0002C212 <AmiBlitz3.ab2@16498>     SUB.l #12,destpointer
0002C216 <AmiBlitz3.ab2@16499>     BSR writeword
0002C218 <AmiBlitz3.ab2@16503>    MOVE.w (A7)+,D2
0002C21C <AmiBlitz3.ab2@16504>   CMP.w #$7,D2                                             ;destination var type
0002C220 <AmiBlitz3.ab2@16505>    BNE.w JL_0_AC16
0002C226 <AmiBlitz3.ab2@16506>   MOVE.w putstlen,D1
0002C22C <AmiBlitz3.ab2@16507>   OR.w regnum,D1
0002C230 <AmiBlitz3.ab2@16508>    BSR.w writeword
0002C234 <AmiBlitz3.ab2@16511> BRA.w JL_0_AF66
0002C238 <AmiBlitz3.ab2@16516>   MOVE.w $6(A3),D1
0002C23C <AmiBlitz3.ab2@16517>    BSR.w uselib
0002C240 <AmiBlitz3.ab2@16518>    BSR.w JL_0_AD40
0002C242 <AmiBlitz3.ab2@16519>   MOVE.l D4,D1
0002C244 <AmiBlitz3.ab2@16520>   MOVE.l D5,-(A7)
0002C248 <AmiBlitz3.ab2@16521>    BSR.w JL_0_AD38
0002C24C <AmiBlitz3.ab2@16522>   MOVE.w $A(A1),-(A7)
0002C24E <AmiBlitz3.ab2@16523>   ADDQ.w #8,A3
0002C250 <AmiBlitz3.ab2@16524>   MOVE.w (A3)+,-(A7)
0002C252 <AmiBlitz3.ab2@16525>   MOVE.l A3,-(A7)
0002C256 <AmiBlitz3.ab2@16526>    BSR.w get1bytemain
0002C258 <AmiBlitz3.ab2@16527>   MOVE.w D0,-(A7)
0002C25A <AmiBlitz3.ab2@16528>   MOVEQ.l #$00,D3
0002C260 <AmiBlitz3.ab2@16529>   JSR checka4a5
0002C262 <AmiBlitz3.ab2@16531>   MOVE.b (A3)+,D1
0002C266 <AmiBlitz3.ab2@16532>    BMI.w JL_0_AC6A
0002C268 <AmiBlitz3.ab2@16533>   MOVEQ.l #$03,D2
0002C26A <AmiBlitz3.ab2@16534>   ADDQ.w #1,D3
0002C26E <AmiBlitz3.ab2@16535>   MOVEM.l D3/A3,-(A7)
0002C274 <AmiBlitz3.ab2@16536>   MOVE.b funcparloop,-(a7)
0002C27A <AmiBlitz3.ab2@16537>   CLR.b funcparloop
0002C280 <AmiBlitz3.ab2@16538>   MOVE.b blitzparloop,-(a7)
0002C288 <AmiBlitz3.ab2@16539>   MOVE.b #1,blitzparloop
0002C28E <AmiBlitz3.ab2@16540>   MOVE.l lasttoken,-(a7)
0002C294 <AmiBlitz3.ab2@16541>   MOVE.l leftsidetype,-(a7)
0002C29A <AmiBlitz3.ab2@16542>   MOVE.l rightsidetype,-(a7)
0002C29E <AmiBlitz3.ab2@16543>   BSR.w peval
0002C2A4 <AmiBlitz3.ab2@16544>   MOVE.l (a7)+,rightsidetype
0002C2AA <AmiBlitz3.ab2@16545>   MOVE.l (a7)+,leftsidetype
0002C2B0 <AmiBlitz3.ab2@16546>   MOVE.l (a7)+,lasttoken
0002C2B6 <AmiBlitz3.ab2@16547>   MOVE.b (a7)+,blitzparloop
0002C2BC <AmiBlitz3.ab2@16548>   MOVE.b (a7)+,funcparloop
0002C2C2 <AmiBlitz3.ab2@16549>   SUBQ.w #4,a2offset
0002C2C6 <AmiBlitz3.ab2@16550>   MOVEM.l (A7)+,D3/A3
0002C2CA <AmiBlitz3.ab2@16551>   CMP.w #$2C,D0
0002C2CE <AmiBlitz3.ab2@16552>    BEQ.w JL_0_AC40
0002C2D0 <AmiBlitz3.ab2@16553>   TST.b (A3)
0002C2D4 <AmiBlitz3.ab2@16554>    BPL.w syntaxerr
0002C2D6 <AmiBlitz3.ab2@16557>   MOVE.w (A7)+,D1
0002C2DA <AmiBlitz3.ab2@16558>    BSR.w JL_0_AD04
0002C2DC <AmiBlitz3.ab2@16559>   MOVEA.l (A7)+,A3
0002C2DE <AmiBlitz3.ab2@16560>   SUBQ.w #1,D3
0002C2E2 <AmiBlitz3.ab2@16561>    BMI.w JL_0_ACBE
0002C2E4 <AmiBlitz3.ab2@16564>   TST.b (A3)+
0002C2E8 <AmiBlitz3.ab2@16565>    BPL.w JL_0_AC78
0002C2EA <AmiBlitz3.ab2@16566>   SUBQ.w #1,A3
0002C2EC <AmiBlitz3.ab2@16569>     MOVEQ.l #$00,D1
0002C2EE <AmiBlitz3.ab2@16570>     MOVE.b -(A3),D1
0002C2F2 <AmiBlitz3.ab2@16571>     BTST #$4,D1
0002C2F6 <AmiBlitz3.ab2@16572>      BNE.w JL_0_ACAA
0002C2FC <AmiBlitz3.ab2@16573>     CMP.w regnum,D1
0002C300 <AmiBlitz3.ab2@16574>      BCC.w JL_0_AC9E
0002C302 <AmiBlitz3.ab2@16575>     BSET D1,D5
0002C304 <AmiBlitz3.ab2@16576>     MOVEQ.l #$0F,D0
0002C306 <AmiBlitz3.ab2@16577>     SUB.w D1,D0
0002C308 <AmiBlitz3.ab2@16578>     BSET D0,D4
0002C30A <AmiBlitz3.ab2@16581>     LSL.w #8,D1
0002C30C <AmiBlitz3.ab2@16582>     LSL.w #1,D1
0002C310 <AmiBlitz3.ab2@16583>     ORI.w #$201F,D1
0002C314 <AmiBlitz3.ab2@16584>   BRA.w JL_0_ACB6
0002C318 <AmiBlitz3.ab2@16587>     ANDI.w #$7,D1
0002C31A <AmiBlitz3.ab2@16588>     LSL.w #8,D1
0002C31C <AmiBlitz3.ab2@16589>     LSL.w #1,D1
0002C320 <AmiBlitz3.ab2@16590>     ORI.w #$205F,D1
0002C324 <AmiBlitz3.ab2@16593>      BSR.w writeword
0002C328 <AmiBlitz3.ab2@16594>   DBF D3,JL_0_AC80
0002C32E <AmiBlitz3.ab2@16597>   MOVE.w (A7)+,libjsr+2
0002C334 <AmiBlitz3.ab2@16598>   MOVE.w (A7)+,libbase+2
0002C33A <AmiBlitz3.ab2@16599>   MOVE.l libbase,D1
0002C33E <AmiBlitz3.ab2@16600>    BSR.w writelong
0002C344 <AmiBlitz3.ab2@16601>   MOVE.l libjsr,D1
0002C348 <AmiBlitz3.ab2@16602>    BSR.w writelong
0002C34E <AmiBlitz3.ab2@16603>   MOVE.w regnum,D1
0002C352 <AmiBlitz3.ab2@16604>    BEQ.w JL_0_ACF4
0002C354 <AmiBlitz3.ab2@16605>   LSL.w #8,D1
0002C356 <AmiBlitz3.ab2@16606>   LSL.w #1,D1
0002C35A <AmiBlitz3.ab2@16607>   ORI.w #$2000,D1
0002C35E <AmiBlitz3.ab2@16608>    BSR.w writeword
0002C360 <AmiBlitz3.ab2@16611>   MOVE.l (A7)+,D1
0002C364 <AmiBlitz3.ab2@16612>    BSR.w JL_0_AD38
0002C36A <AmiBlitz3.ab2@16613>    JSR restorea4a5
0002C36C <AmiBlitz3.ab2@16614>   MOVEQ.l #$03,D2
0002C370 <AmiBlitz3.ab2@16615>    BSR.w reget
0002C374 <AmiBlitz3.ab2@16616> BRA.w JL_0_AF66
0002C376 <AmiBlitz3.ab2@16619>   TST.w D3
0002C37A <AmiBlitz3.ab2@16620>    BEQ.w JL_0_AD1E
0002C37E <AmiBlitz3.ab2@16621>   CMP.w #$28,D1
0002C382 <AmiBlitz3.ab2@16622>    BNE.w syntaxerr
0002C386 <AmiBlitz3.ab2@16623>   CMP.w #$29,D0
0002C38A <AmiBlitz3.ab2@16624>    BNE.w syntaxerr
0002C38E <AmiBlitz3.ab2@16625> BRA.w get1bytemain
0002C392 <AmiBlitz3.ab2@16628>   CMP.w #$28,D1
0002C396 <AmiBlitz3.ab2@16629>    BNE.w JL_0_AD36
0002C39A <AmiBlitz3.ab2@16630>    BSR.w get1bytemain
0002C39E <AmiBlitz3.ab2@16631>   CMP.w #$29,D0
0002C3A2 <AmiBlitz3.ab2@16632>    BNE.w syntaxerr
0002C3A6 <AmiBlitz3.ab2@16633> BRA.w get1bytemain
0002C3A8 <AmiBlitz3.ab2@16636> RTS
0002C3AA <AmiBlitz3.ab2@16639>   TST.w D1
0002C3AE <AmiBlitz3.ab2@16640>    BNE.w writelong
0002C3B0 <AmiBlitz3.ab2@16641> RTS
0002C3B4 <AmiBlitz3.ab2@16645>   MOVE.w #$48E7,D4
0002C3B6 <AmiBlitz3.ab2@16646>   SWAP D4
0002C3B8 <AmiBlitz3.ab2@16647>   CLR.w D4
0002C3BC <AmiBlitz3.ab2@16648>   MOVE.w #$4CDF,D5
0002C3BE <AmiBlitz3.ab2@16649>   SWAP D5
0002C3C0 <AmiBlitz3.ab2@16650>   CLR.w D5
0002C3C6 <AmiBlitz3.ab2@16651>   MOVE.w regnum,D1
0002C3CA <AmiBlitz3.ab2@16652>    BEQ.w JL_0_AD74
0002C3CE <AmiBlitz3.ab2@16653>   BSET #$F,D4
0002C3D2 <AmiBlitz3.ab2@16654>   BSET #$0,D5
0002C3D6 <AmiBlitz3.ab2@16655>   CMP.w #$2,D1
0002C3DA <AmiBlitz3.ab2@16656>    BCS.w JL_0_AD72
0002C3DE <AmiBlitz3.ab2@16659>   BSET #$E,D4
0002C3E2 <AmiBlitz3.ab2@16660>   BSET #$1,D5
0002C3E4 <AmiBlitz3.ab2@16663> RTS
0002C3EA <AmiBlitz3.ab2@16666>   TST.w fuckpos
0002C3EE <AmiBlitz3.ab2@16667>   BNE.w JL_0_AD6A
0002C3F0 <AmiBlitz3.ab2@16668> RTS
0002C3F2 <AmiBlitz3.ab2@16671> fuckpos:  Ds.w 1
0002C3F8 <AmiBlitz3.ab2@16675>   MOVE.w sbasegot,D1
0002C3FC <AmiBlitz3.ab2@16676>    BEQ.w makesbase__skip
0002C400 <AmiBlitz3.ab2@16680>   MOVE.w sbgot(PC),D1
0002C404 <AmiBlitz3.ab2@16681>    BNE.w makesbase__skip2
0002C40C <AmiBlitz3.ab2@16685>   MOVE.w #$0002,sbgot
0002C412 <AmiBlitz3.ab2@16686>   MOVE.w movea3a7,D1
0002C416 <AmiBlitz3.ab2@16687> BRA.w writeword
0002C418 <AmiBlitz3.ab2@16690> RTS
0002C420 <AmiBlitz3.ab2@16695>   MOVE.w #$0001,sbgot                                      ;voodoo magic! - Will it work?
0002C426 <AmiBlitz3.ab2@16698>   MOVE.l #$C601,D1
0002C42E <AmiBlitz3.ab2@16699>   MOVE.w #-1,sbasegot
0002C434 <AmiBlitz3.ab2@16700>   MOVE.l d1,lastinstruction
0002C438 <AmiBlitz3.ab2@16701>   BSR.w Atokejsr
0002C43A <AmiBlitz3.ab2@16702> RTS
0002C444 <AmiBlitz3.ab2@16707>   MOVE.l data1,litdata1
0002C44A <AmiBlitz3.ab2@16708>   TST.b fast
0002C44E <AmiBlitz3.ab2@16709>   BEQ 'l50                                                 ;optistring  seem impossible to get work
0002C452 <AmiBlitz3.ab2@16713> BRA 'l50                                                   ;to deactivate
0002C458 <AmiBlitz3.ab2@16719>   TST.b optistring
0002C45C <AmiBlitz3.ab2@16720>   BNE.s 'l21
0002C462 <AmiBlitz3.ab2@16721>   CLR.b string1
0002C46A <AmiBlitz3.ab2@16722>   MOVE.b #1,optistring
0002C470 <AmiBlitz3.ab2@16723>   TST.b nostringopt
0002C474 <AmiBlitz3.ab2@16724>   BNE 'l21
0002C476 <AmiBlitz3.ab2@16725>   MOVE.l a5,a4
0002C478 <AmiBlitz3.ab2@16726>   SUBQ.l #1,a4
0002C47A <AmiBlitz3.ab2@16729>     TST.b (a4)
0002C47E <AmiBlitz3.ab2@16730>     BMI 'l19a
0002C482 <AmiBlitz3.ab2@16731>     BEQ.s 'l20
0002C486 <AmiBlitz3.ab2@16732>     CMP.b #$22,(a4)
0002C48A <AmiBlitz3.ab2@16733>     BEQ.s 'l19
0002C490 <AmiBlitz3.ab2@16736>     TST.w string1
0002C494 <AmiBlitz3.ab2@16737>     BNE 'l11
0002C498 <AmiBlitz3.ab2@16738>     CMP.b #":",(a4)
0002C49C <AmiBlitz3.ab2@16739>     BEQ.s 'l20
0002C4A0 <AmiBlitz3.ab2@16740>     CMP.b #";",(a4)
0002C4A4 <AmiBlitz3.ab2@16741>     BEQ.s 'l20
0002C4A8 <AmiBlitz3.ab2@16742>     CMP.b #"+",(a4)
0002C4AC <AmiBlitz3.ab2@16743>     BEQ.s 'l21
0002C4B0 <AmiBlitz3.ab2@16744>     CMP.b #",",(a4)
0002C4B4 <AmiBlitz3.ab2@16745>     BEQ.s 'l20                                             ;was l21
0002C4B8 <AmiBlitz3.ab2@16746>     CMP.b #")",(a4)
0002C4BC <AmiBlitz3.ab2@16747>     BEQ.s 'l20                                             ;was l21
0002C4BE <AmiBlitz3.ab2@16750>     ADDQ.l #1,a4
0002C4C2 <AmiBlitz3.ab2@16751> BRA.s 'l10
0002C4CA <AmiBlitz3.ab2@16754>   BCHG #0,string1
0002C4CE <AmiBlitz3.ab2@16755> BRA 'l18
0002C4D0 <AmiBlitz3.ab2@16758>   ADDQ.l #1,a4
0002C4D2 <AmiBlitz3.ab2@16759>   TST.b (a4)
0002C4D6 <AmiBlitz3.ab2@16760>   BEQ 'l21
0002C4DA <AmiBlitz3.ab2@16761> BRA 'l11
0002C4DC <AmiBlitz3.ab2@16764>   MOVE.l a5,a4
0002C4DE <AmiBlitz3.ab2@16765>   SUBQ.l #1,a4
0002C4E2 <AmiBlitz3.ab2@16768>   CMP.b #$20,-(a4)
0002C4E6 <AmiBlitz3.ab2@16769>   BEQ 'll1
0002C4EA <AmiBlitz3.ab2@16770>   CMP.b #"+",(a4)
0002C4EE <AmiBlitz3.ab2@16771>   BEQ 'l21
0002C4F6 <AmiBlitz3.ab2@16786>   MOVE.b #2,optistring
0002C4FE <AmiBlitz3.ab2@16789>   CMP.b #2,optistring
0002C502 <AmiBlitz3.ab2@16790>   BEQ.s 'l100
0002C506 <AmiBlitz3.ab2@16793>   BSR.w makesbase
0002C50A <AmiBlitz3.ab2@16794>   BSR.w pokedata1                                          ;writestringsizespace
0002C50E <AmiBlitz3.ab2@16795>   BSR.w pokedata1
0002C510 <AmiBlitz3.ab2@16798>   MOVEQ.l #$00,D2
0002C516 <AmiBlitz3.ab2@16801>     MOVE.l a5,lastsourcepos
0002C518 <AmiBlitz3.ab2@16802>     MOVEQ #0,d0
0002C51A <AmiBlitz3.ab2@16803>     MOVE.b (a5)+,d0
0002C51C <AmiBlitz3.ab2@16804>     TST.w D0
0002C520 <AmiBlitz3.ab2@16805>      BEQ.w notqerr
0002C524 <AmiBlitz3.ab2@16806>     CMP.w #$22,D0                                          ; --- " ---
0002C528 <AmiBlitz3.ab2@16807>      BEQ.w JL_0_ADF6
0002C52C <AmiBlitz3.ab2@16808>     CMP.b #"\",d0
0002C530 <AmiBlitz3.ab2@16809>      BNE 'l1
0002C534 <AmiBlitz3.ab2@16810>     CMP.b #"\",(a5)
0002C538 <AmiBlitz3.ab2@16811>      BNE 'l1
0002C53E <AmiBlitz3.ab2@16812>     TST.b newsyntax
0002C542 <AmiBlitz3.ab2@16813>      BEQ 'l1
0002C548 <AmiBlitz3.ab2@16814>     CMP.w #"\\",1(a5)                                      ; new compiler constants
0002C54C <AmiBlitz3.ab2@16815>     BNE 'l2
0002C54E <AmiBlitz3.ab2@16816>     ADDQ #2,a5
0002C550 <AmiBlitz3.ab2@16819>     ADDQ.w #1,D2
0002C552 <AmiBlitz3.ab2@16820>     MOVE.w D0,D1
0002C556 <AmiBlitz3.ab2@16821>     BSR.w pokedata1b                                        ;writestring
0002C55A <AmiBlitz3.ab2@16822> BRA.w writestring
0002C560 <AmiBlitz3.ab2@16825>     JSR check_newconstants
0002C564 <AmiBlitz3.ab2@16826> BRA writestring
0002C56A <AmiBlitz3.ab2@16829>   NOT instringon
0002C570 <AmiBlitz3.ab2@16830>   MOVE.w dontwrite,D1
0002C574 <AmiBlitz3.ab2@16831>   BNE.w JL_0_AE0A
0002C57C <AmiBlitz3.ab2@16832>   CMP.b #2,optistring
0002C580 <AmiBlitz3.ab2@16833>   BEQ 'l10
0002C586 <AmiBlitz3.ab2@16834>     MOVEA.l litdata1,A0
0002C588 <AmiBlitz3.ab2@16835>     CLR.w (A0)+                                            ;writesize
0002C58A <AmiBlitz3.ab2@16836>     MOVE.w D2,(A0)
0002C58E <AmiBlitz3.ab2@16840>   BSR.w JL_0_AEA4                                          ;writestringconstantcode
0002C594 <AmiBlitz3.ab2@16841>   ADDQ.l #1,data1
0002C59C <AmiBlitz3.ab2@16842>   BCLR #$0,data1+3
0002C59E <AmiBlitz3.ab2@16843>   MOVEQ.l #$07,D2
0002C5A2 <AmiBlitz3.ab2@16844> BRA.w get1bytemain
0002C5A6 <AmiBlitz3.ab2@16848>   BSR.w makename2
0002C5AA <AmiBlitz3.ab2@16849>   BSR.w findlabel2
0002C5AE <AmiBlitz3.ab2@16850>   BEQ.w JL_0_AE4A
0002C5B2 <AmiBlitz3.ab2@16851>   BSR.w addlabelhash
0002C5B6 <AmiBlitz3.ab2@16852>   CLR.l $4(A2)
0002C5BA <AmiBlitz3.ab2@16853>   CLR.l $8(A2)
0002C5C2 <AmiBlitz3.ab2@16855>   MOVE.w linenumat+2,$10(A2)
0002C5C8 <AmiBlitz3.ab2@16856>   MOVE.w linenumat,d0
0002C5CA <AmiBlitz3.ab2@16857>   MOVEQ #0,d1
0002C5CE <AmiBlitz3.ab2@16858>   MOVE.b -1(a2,d7),d1
0002C5D2 <AmiBlitz3.ab2@16859>   MOVE.w d0,0(a2,d1)
0002C5D6 <AmiBlitz3.ab2@16860> BRA.w JL_0_AE52
0002C5DA <AmiBlitz3.ab2@16863>   TST.l $8(A2)
0002C5DE <AmiBlitz3.ab2@16864>   BNE.w JL_0_AE88
0002C5E4 <AmiBlitz3.ab2@16867>   MOVEA.l _execbase,A6
0002C5E6 <AmiBlitz3.ab2@16868>   MOVEQ.l #$0C+2,D0
0002C5E8 <AmiBlitz3.ab2@16869>   MOVEQ.l #$01,D1
0002C5EE <AmiBlitz3.ab2@16870>   MOVE.l mempool,a0
0002C5F2 <AmiBlitz3.ab2@16871>   JSR _AllocPooled(a6)
0002C5F4 <AmiBlitz3.ab2@16873>   MOVEA.l D0,A0
0002C5F8 <AmiBlitz3.ab2@16874>   MOVE.l $4(A2),(A0)
0002C5FC <AmiBlitz3.ab2@16875>   MOVE.l A0,$4(A2)
0002C604 <AmiBlitz3.ab2@16876>   MOVE.l destpointer,$4(A0)
0002C608 <AmiBlitz3.ab2@16877>   ADDQ.l #2,$4(A0)
0002C610 <AmiBlitz3.ab2@16878>   MOVE.w procnum,$8(A0)
0002C618 <AmiBlitz3.ab2@16879>   MOVE.w linenumat+2,$A(A0)
0002C620 <AmiBlitz3.ab2@16880>   MOVE.w linenumat,$c(a0)
0002C622 <AmiBlitz3.ab2@16881> RTS
0002C626 <AmiBlitz3.ab2@16884>   MOVE.l $4(A2),D1
0002C62A <AmiBlitz3.ab2@16885>   BTST #$0,D1
0002C62E <AmiBlitz3.ab2@16886>    BNE.w illlaberr
0002C634 <AmiBlitz3.ab2@16887>   MOVE.w procnum,D1
0002C638 <AmiBlitz3.ab2@16888>   CMP.w $10(A2),D1
0002C63C <AmiBlitz3.ab2@16889>    BNE.w referr
0002C63E <AmiBlitz3.ab2@16890> RTS
0002C640 <AmiBlitz3.ab2@16894>   MOVE.w D0,-(A7)
0002C648 <AmiBlitz3.ab2@16895>   CMP.b #2,optistring
0002C64C <AmiBlitz3.ab2@16896>   BEQ 'l10
0002C652 <AmiBlitz3.ab2@16899>   MOVE.w numtoa0,D1
0002C656 <AmiBlitz3.ab2@16900>    BSR.w writeword
0002C65A <AmiBlitz3.ab2@16901>    BSR.w addoff
0002C660 <AmiBlitz3.ab2@16902>   MOVE.l litdata1,D1
0002C664 <AmiBlitz3.ab2@16903>    BSR.w writelong
0002C66A <AmiBlitz3.ab2@16904>   MOVE.w pushlen,D1
0002C66E <AmiBlitz3.ab2@16905>    BSR.w writeword
0002C672 <AmiBlitz3.ab2@16906>   MOVE.w #$C600,D1
0002C676 <AmiBlitz3.ab2@16907>    BSR.w Atokejsr
0002C678 <AmiBlitz3.ab2@16908>   MOVE.w (A7)+,D0
0002C67A <AmiBlitz3.ab2@16909> RTS
0002C67C <AmiBlitz3.ab2@16912>   MOVEQ #0,d1
0002C680 <AmiBlitz3.ab2@16913>   BSR.w pokedata1b
0002C686 <AmiBlitz3.ab2@16914>   MOVE.l destpointer,a4
0002C68A <AmiBlitz3.ab2@16915>   MOVE.w #$203c,d1
0002C690 <AmiBlitz3.ab2@16916>   TST.w mode
0002C694 <AmiBlitz3.ab2@16917>   BNE 'lm10
0002C69A <AmiBlitz3.ab2@16918>    ADDQ.w #4,a2offset
0002C69E <AmiBlitz3.ab2@16919>   MOVE.w #$2f3c,d1
0002C6A4 <AmiBlitz3.ab2@16922>   TST.w mode
0002C6A8 <AmiBlitz3.ab2@16923>   BEQ 'lm3
0002C6AE <AmiBlitz3.ab2@16924>   MOVE.w regnum,D0
0002C6B0 <AmiBlitz3.ab2@16925>   LSL.w #8,D0
0002C6B2 <AmiBlitz3.ab2@16926>   LSL.w #1,D0
0002C6B4 <AmiBlitz3.ab2@16927>   OR.w d0,d1
0002C6B8 <AmiBlitz3.ab2@16928>   BSR writeword
0002C6BC <AmiBlitz3.ab2@16929>   BSR.w addoff
0002C6C2 <AmiBlitz3.ab2@16930>   MOVE.l litdata1,D1
0002C6C6 <AmiBlitz3.ab2@16931>   BSR.w writelong
0002C6CE <AmiBlitz3.ab2@16932>   CMP.w #3,mode
0002C6D2 <AmiBlitz3.ab2@16933>   BEQ 'l30
0002C6D8 <AmiBlitz3.ab2@16934>    ADDQ.w #4,a2offset
0002C6DC <AmiBlitz3.ab2@16935>   MOVE.w #$4878,D1
0002C6E0 <AmiBlitz3.ab2@16936>   BSR.w writeword
0002C6E2 <AmiBlitz3.ab2@16937>   MOVE.l d2,d1
0002C6E6 <AmiBlitz3.ab2@16938>   BSR writeword
0002C6E8 <AmiBlitz3.ab2@16941>   MOVE.w (A7)+,D0
0002C6EA <AmiBlitz3.ab2@16942> RTS
0002C6F0 <AmiBlitz3.ab2@16945>   MOVE.l #$3f3c0007,d1
0002C6F4 <AmiBlitz3.ab2@16946>   BSR writelong
0002C6FA <AmiBlitz3.ab2@16947>   MOVE.w regnum,D1
0002C6FC <AmiBlitz3.ab2@16948>   LSL.w #8,D1
0002C6FE <AmiBlitz3.ab2@16949>   LSL.w #1,D1
0002C702 <AmiBlitz3.ab2@16950>   ORI.w #$2f3c,d1
0002C706 <AmiBlitz3.ab2@16951>   BSR writeword
0002C70C <AmiBlitz3.ab2@16952>    ADDQ.w #4,a2offset
0002C70E <AmiBlitz3.ab2@16953>   MOVE.l d2,d1
0002C712 <AmiBlitz3.ab2@16954>   BSR writelong
0002C716 <AmiBlitz3.ab2@16955>   MOVE.w #$2f3c,d1
0002C71A <AmiBlitz3.ab2@16956>   BSR writeword
0002C71E <AmiBlitz3.ab2@16957>   BSR.w addoff
0002C724 <AmiBlitz3.ab2@16958>   MOVE.l litdata1,D1
0002C728 <AmiBlitz3.ab2@16959>   BSR.w writelong
0002C72A <AmiBlitz3.ab2@16960>   MOVE.w (A7)+,D0
0002C72C <AmiBlitz3.ab2@16961> RTS
0002C730 <AmiBlitz3.ab2@16965>   BSR.w get1bytemain
0002C734 <AmiBlitz3.ab2@16966>    BSR.w JL_0_AE22
0002C73A <AmiBlitz3.ab2@16967>   MOVE.w regnum,D1
0002C73C <AmiBlitz3.ab2@16968>   LSL.w #8,D1
0002C73E <AmiBlitz3.ab2@16969>   LSL.w #1,D1
0002C742 <AmiBlitz3.ab2@16970>   ORI.w #$203C,D1
0002C746 <AmiBlitz3.ab2@16971>    BSR.w writeword
0002C74A <AmiBlitz3.ab2@16972>    BSR.w addoff
0002C74E <AmiBlitz3.ab2@16973>   MOVE.l $8(A2),D1
0002C752 <AmiBlitz3.ab2@16974>    BSR.w writelong
0002C754 <AmiBlitz3.ab2@16975>   MOVEQ.l #$03,D2
0002C75A <AmiBlitz3.ab2@16976>   CLR.b peekaddrsize
0002C75E <AmiBlitz3.ab2@16977> BRA.w reget
0002C760 <AmiBlitz3.ab2@16980>   MOVEQ.l #$00,D3
0002C764 <AmiBlitz3.ab2@16983>   BSR.w get1bytemain
0002C768 <AmiBlitz3.ab2@16984>    BEQ.w syntaxerr
0002C76C <AmiBlitz3.ab2@16985>   CMP.w #$22,D0
0002C770 <AmiBlitz3.ab2@16986>    BEQ.w JL_0_AF1A
0002C772 <AmiBlitz3.ab2@16987>   LSL.l #8,D3
0002C774 <AmiBlitz3.ab2@16988>   MOVE.b D0,D3
0002C778 <AmiBlitz3.ab2@16989> BRA.w JL_0_AF02
0002C77C <AmiBlitz3.ab2@16992>   BSR.w get1bytemain
0002C780 <AmiBlitz3.ab2@16993> BRA.w JL_0_B46E
0002C782 <AmiBlitz3.ab2@16996>   MOVE.w D2,-(A7)                                          ;basicvarsforasm
0002C786 <AmiBlitz3.ab2@16997>    BSR.w makename2
0002C78A <AmiBlitz3.ab2@16998>    BSR.w findlabel2
0002C78E <AmiBlitz3.ab2@16999>    BEQ.w 'l10
0002C794 <AmiBlitz3.ab2@17000>    LEA ptr_parameterstore,a0
0002C79A <AmiBlitz3.ab2@17001>    CMP.b #"@",-1(a0,d2.w)
0002C79E <AmiBlitz3.ab2@17002>    BNE cnferr
0002C7A2 <AmiBlitz3.ab2@17003>    CLR.b -1(a0,d2.w)
0002C7A4 <AmiBlitz3.ab2@17004>    SUBQ.l #1,d2
0002C7AA <AmiBlitz3.ab2@17005>    LEA varbase,a2
0002C7AE <AmiBlitz3.ab2@17006>    BSR findvariable
0002C7B2 <AmiBlitz3.ab2@17007>    BNE cnferr
0002C7B6 <AmiBlitz3.ab2@17008>    CMP.b #"\",d0
0002C7BA <AmiBlitz3.ab2@17009>    BNE 'l6
0002C7C0 <AmiBlitz3.ab2@17010>    ADDQ #1,lastsourcepos
0002C7C4 <AmiBlitz3.ab2@17011>    MOVE.l $a(a2),a2
0002C7C6 <AmiBlitz3.ab2@17012>    ADDQ.l #4,a2
0002C7CA <AmiBlitz3.ab2@17013>    BSR.w makename2
0002C7CE <AmiBlitz3.ab2@17014>    BSR findvariable2
0002C7D2 <AmiBlitz3.ab2@17015>    BNE cnferr
0002C7D6 <AmiBlitz3.ab2@17016> BRA.s 'l6                                                  ;???
0002C7DA <AmiBlitz3.ab2@17019>    MOVE.w $4(a2),d3
0002C7DC <AmiBlitz3.ab2@17020>    EXT.l d3
0002C7E0 <AmiBlitz3.ab2@17021> BRA JL_0_AF46
0002C7E4 <AmiBlitz3.ab2@17024>   MOVE.l $8(A2),D3
0002C7EC <AmiBlitz3.ab2@17025>   CMPI.l #$1,$4(A2)
0002C7F0 <AmiBlitz3.ab2@17026>    BEQ.w JL_0_AF46
0002C7F6 <AmiBlitz3.ab2@17027>   NOT.w asmtype
0002C7F8 <AmiBlitz3.ab2@17030>   MOVE.w (A7)+,D2
0002C7FC <AmiBlitz3.ab2@17031> BRA.w JL_0_B46E
0002C7FE <AmiBlitz3.ab2@17035>   MOVE.w D2,-(A7)
0002C802 <AmiBlitz3.ab2@17036>    BSR.w getparameter
0002C806 <AmiBlitz3.ab2@17037>   CMP.w #"{",D0                                          ;test if var = function{}
0002C80A <AmiBlitz3.ab2@17038>    BEQ.w isfunction
0002C80E <AmiBlitz3.ab2@17039>    BSR.w JL_0_8E3C
0002C812 <AmiBlitz3.ab2@17041>    BSR.w calcvar                                         ;getvaroffset+type
0002C816 <AmiBlitz3.ab2@17042>    BSR.w JL_0_B150
0002C81C <AmiBlitz3.ab2@17043>    MOVE.l a2,rightsidetype
0002C822 <AmiBlitz3.ab2@17054>    TST.b typecheck
0002C826 <AmiBlitz3.ab2@17055>    BEQ JL_0_AF66
0002C830 <AmiBlitz3.ab2@17056>    CMP.l #$da01,lasttoken                                  ;poke
0002C834 <AmiBlitz3.ab2@17057>    BEQ 'l1
0002C83E <AmiBlitz3.ab2@17058>    CMP.l #$da02,lasttoken                                  ;peek
0002C842 <AmiBlitz3.ab2@17059>    BNE 'l2
0002C84A <AmiBlitz3.ab2@17062>    CMP.w #1,parnum                                         ; is not call when & is used in parameter
0002C84E <AmiBlitz3.ab2@17063>    BNE JL_0_AF66
0002C854 <AmiBlitz3.ab2@17064>    MOVE.b d2,peekaddrsize
0002C858 <AmiBlitz3.ab2@17065>    BRA JL_0_AF66
0002C85E <AmiBlitz3.ab2@17068>   CLR.b peekaddrsize
0002C862 <AmiBlitz3.ab2@17071>   CMP.w #$1,D2
0002C866 <AmiBlitz3.ab2@17072>    BNE.w JL_0_AF7C
0002C86C <AmiBlitz3.ab2@17073>   MOVE.w regnum,D1
0002C870 <AmiBlitz3.ab2@17074>   ORI.w #$4880,D1
0002C874 <AmiBlitz3.ab2@17075>    BSR.w writeword
0002C876 <AmiBlitz3.ab2@17078>   MOVE.w (A7)+,D3
0002C87A <AmiBlitz3.ab2@17079>    BEQ.w JL_0_AF9E
0002C880 <AmiBlitz3.ab2@17080>    MOVE.l lastinstructionaddr,a0
0002C884 <AmiBlitz3.ab2@17081>   CMP.w #$3,D3
0002C888 <AmiBlitz3.ab2@17082>    BNE.w JL_0_AF92
0002C88C <AmiBlitz3.ab2@17083>   CMP.w #$4,D2
0002C890 <AmiBlitz3.ab2@17084>    BEQ.w JL_0_AF98
0002C892 <AmiBlitz3.ab2@17087>   CMP.w D2,D3
0002C896 <AmiBlitz3.ab2@17088>    BLS.w JL_0_AF9E
0002C898 <AmiBlitz3.ab2@17091>   EXG.l D2,D3
0002C89A <AmiBlitz3.ab2@17092>   MOVE.l a0,-(a7)
0002C8A0 <AmiBlitz3.ab2@17093>   TST.b typecheck
0002C8A4 <AmiBlitz3.ab2@17094>   BEQ 'ok
0002C8AA <AmiBlitz3.ab2@17095>   TST.b notypecheck
0002C8AE <AmiBlitz3.ab2@17096>   BNE 'ok
0002C8B4 <AmiBlitz3.ab2@17097>   MOVE.l leftsidetype,a0
0002C8BE <AmiBlitz3.ab2@17098>   CMP.l #0,leftsidetype
0002C8C2 <AmiBlitz3.ab2@17099>   BEQ 'ok
0002C8CA <AmiBlitz3.ab2@17100>   CMP.l #$100,4(a0)
0002C8CE <AmiBlitz3.ab2@17101>   BLE 'ok
0002C8D2 <AmiBlitz3.ab2@17102>   CMP.b #3,d3
0002C8D6 <AmiBlitz3.ab2@17103>   BEQ 'ok
0002C8DA <AmiBlitz3.ab2@17104>   CMP.b #7,d3
0002C8DE <AmiBlitz3.ab2@17105>   BEQ 'ok
0002C8E4 <AmiBlitz3.ab2@17106>   JMP   error_convert_types      ;for all syntax only long and string allowed to assign to a type
0002C8E6 <AmiBlitz3.ab2@17108>   MOVE.l (a7)+,a0
0002C8EA <AmiBlitz3.ab2@17109>   BSR.w writeconvertcode         ;called from var assign
0002C8EE <AmiBlitz3.ab2@17112> BRA.w reget
0002C8F0 <AmiBlitz3.ab2@17115>   MOVEQ.l #$00,D3
0002C8F6 <AmiBlitz3.ab2@17116>   MOVE.w regnum,D1
0002C8FA <AmiBlitz3.ab2@17117>    BEQ.w JL_0_AFC8
0002C8FC <AmiBlitz3.ab2@17118>   SUBQ.w #1,D1
0002C8FE <AmiBlitz3.ab2@17121>      LSR.l #1,D3
0002C902 <AmiBlitz3.ab2@17122>      BSET #$F,D3
0002C906 <AmiBlitz3.ab2@17123>   DBF D1,JL_0_AFB0b
0002C90C <AmiBlitz3.ab2@17125>    TST.b fpu
0002C910 <AmiBlitz3.ab2@17126>    BEQ 'l1
0002C916 <AmiBlitz3.ab2@17127>    ADDQ.l #2,stacktrack                                    ;intern command
0002C918 <AmiBlitz3.ab2@17128>     MOVE.l a0,-(a7)
0002C91E <AmiBlitz3.ab2@17129>     MOVE.l stacktrack,d1
0002C924 <AmiBlitz3.ab2@17130>     LEA fpustackbase,a0
0002C928 <AmiBlitz3.ab2@17131>     CLR.w 0(a0,d1)
0002C92E <AmiBlitz3.ab2@17132>     CLR.w regmask
0002C930 <AmiBlitz3.ab2@17133>     MOVE.l (a7)+,a0
0002C934 <AmiBlitz3.ab2@17136>   MOVE.w #$48E7,D1
0002C938 <AmiBlitz3.ab2@17137>    BSR.w writeword                                         ;write movem.l d0/d1,-(a7)
0002C93A <AmiBlitz3.ab2@17138>   MOVE.w D3,D1
0002C93E <AmiBlitz3.ab2@17139> BRA.w writeword
0002C940 <AmiBlitz3.ab2@17144>   MOVEQ.l #$00,D3
0002C946 <AmiBlitz3.ab2@17145>   MOVE.w regnum,D1
0002C94A <AmiBlitz3.ab2@17146>    BEQ.w JL_0_AFC8
0002C94C <AmiBlitz3.ab2@17147>   SUBQ.w #1,D1
0002C94E <AmiBlitz3.ab2@17150>     LSR.l #1,D3
0002C952 <AmiBlitz3.ab2@17151>     BSET #$F,D3
0002C956 <AmiBlitz3.ab2@17152>   DBF D1,JL_0_AFB0
0002C95C <AmiBlitz3.ab2@17154>    TST.b fpu
0002C960 <AmiBlitz3.ab2@17155>    BEQ 'l1
0002C966 <AmiBlitz3.ab2@17156>    ADDQ.l #2,stacktrack                                    ;intern command
0002C968 <AmiBlitz3.ab2@17157>     MOVE.l a0,-(a7)
0002C96E <AmiBlitz3.ab2@17158>     MOVE.l stacktrack,d1
0002C974 <AmiBlitz3.ab2@17159>     LEA fpustackbase,a0
0002C978 <AmiBlitz3.ab2@17160>     CLR.w 0(a0,d1)
0002C97C <AmiBlitz3.ab2@17161>    CMP.b #5,(a3)                                           ;result float ?
0002C980 <AmiBlitz3.ab2@17162>     BNE 'nofpu
0002C98A <AmiBlitz3.ab2@17164>     MOVE.w regnum,regnumfunc
0002C990 <AmiBlitz3.ab2@17167>   CLR.w regmask
0002C992 <AmiBlitz3.ab2@17168>     MOVE.l (a7)+,a0
0002C996 <AmiBlitz3.ab2@17171>   MOVE.w #$48E7,D1
0002C99A <AmiBlitz3.ab2@17172>    BSR.w writeword                                         ;write movem.l d0/d1,-(a7)
0002C99C <AmiBlitz3.ab2@17173>   MOVE.w D3,D1
0002C9A0 <AmiBlitz3.ab2@17174> BRA.w writeword
0002C9A2 <AmiBlitz3.ab2@17177> RTS
0002C9A4 <AmiBlitz3.ab2@17181>   MOVE.l D1,-(A7)
0002C9A8 <AmiBlitz3.ab2@17182>   MOVE.w #$4EB9,D1
0002C9AC <AmiBlitz3.ab2@17183>    BSR.w writeword
0002C9B0 <AmiBlitz3.ab2@17184>    BSR.w addoff
0002C9B2 <AmiBlitz3.ab2@17185>   MOVE.l (A7)+,D1
0002C9B6 <AmiBlitz3.ab2@17186> BRA.w writelong
0002C9BA <AmiBlitz3.ab2@17190>    BSR.w findproc                                          ;write function call
0002C9BE <AmiBlitz3.ab2@17191>    BEQ 'l1
0002C9C4 <AmiBlitz3.ab2@17192>    TST.l unusedfunc
0002C9C8 <AmiBlitz3.ab2@17193>    BEQ noprocerr
0002C9CE <AmiBlitz3.ab2@17195>    JSR gotoendsource
0002C9D6 <AmiBlitz3.ab2@17198>   MOVE.l funcstruct_returntype(a2),rightsidetype
0002C9DC <AmiBlitz3.ab2@17199>   TST.l typetocast
0002C9E0 <AmiBlitz3.ab2@17200>   BEQ 'nocast
0002C9EA <AmiBlitz3.ab2@17201>   MOVE.l typetocast,rightsidetype
0002C9F0 <AmiBlitz3.ab2@17202>   CLR.l typetocast
0002C9F2 <AmiBlitz3.ab2@17203>   MOVE.l a1,-(a7)
0002C9F8 <AmiBlitz3.ab2@17204>   MOVE.l rightsidetype,a1
0002C9FE <AmiBlitz3.ab2@17205>   CMP.l leftsidetype,a1
0002CA02 <AmiBlitz3.ab2@17206>   BEQ 'ok
0002CA08 <AmiBlitz3.ab2@17207>   JMP errorconvertreturntype2
0002CA0A <AmiBlitz3.ab2@17208> 'ok  MOVE.l (a7)+,a1
0002CA0C <AmiBlitz3.ab2@17210>   MOVEQ.l #$00,D1
0002CA10 <AmiBlitz3.ab2@17211>   MOVE.b $5(A2),D1
0002CA16 <AmiBlitz3.ab2@17212>   MOVE.b d1,retmode
0002CA1A <AmiBlitz3.ab2@17213>    BMI.w illprocerr
0002CA20 <AmiBlitz3.ab2@17214>    MOVE.b #1,isfunc(a2)
0002CA22 <AmiBlitz3.ab2@17215>   MOVE.w D1,-(A7)
0002CA24 <AmiBlitz3.ab2@17216>   MOVEQ.l #$00,D1
0002CA28 <AmiBlitz3.ab2@17217>   MOVE.b $4(A2),D1
0002CA2A <AmiBlitz3.ab2@17218>   LSR.w #4,D1
0002CA2E <AmiBlitz3.ab2@17219>    BEQ.w JL_0_B006
0002CA30 <AmiBlitz3.ab2@17220>   LSL.w #2,D1
0002CA36 <AmiBlitz3.ab2@17221>   SUB.w D1,a2offset
0002CA3A <AmiBlitz3.ab2@17224>   CMPI.w #$7,(A7)
0002CA3E <AmiBlitz3.ab2@17225>    BNE.b JL_0_B014
0002CA40 <AmiBlitz3.ab2@17226>   MOVE.l A2,-(A7)
0002CA44 <AmiBlitz3.ab2@17227>    BSR.w makesbase
0002CA46 <AmiBlitz3.ab2@17228>   MOVEA.l (A7)+,A2
0002CA4C <AmiBlitz3.ab2@17231>   MOVE.w sbasegot,-(A7)
0002CA50 <AmiBlitz3.ab2@17232>    BEQ.b JL_0_B020
0002CA54 <AmiBlitz3.ab2@17233>    BSR.w dopusha3
0002CA58 <AmiBlitz3.ab2@17236>   BSR.w JL_0_AFA2func
0002CA5A <AmiBlitz3.ab2@17237>   MOVE.w D3,-(A7)
0002CA5E <AmiBlitz3.ab2@17238>   MOVE.l $E(A2),D1
0002CA62 <AmiBlitz3.ab2@17239>   TST.b $20(a2)                                            ;increase if morepar
0002CA66 <AmiBlitz3.ab2@17240>   BNE 'no0par
0002CA68 <AmiBlitz3.ab2@17241>   MOVE.l a5,a4
0002CA6C <AmiBlitz3.ab2@17244>   CMP.b #$20,(a4)+
0002CA70 <AmiBlitz3.ab2@17245>   BEQ 'l1
0002CA76 <AmiBlitz3.ab2@17246>   CMP.b #"}",-1(a4)
0002CA7A <AmiBlitz3.ab2@17247>   BNE  'no0par
0002CA7C <AmiBlitz3.ab2@17248>   MOVEQ #0,d0
0002CA80 <AmiBlitz3.ab2@17251>   LEA $16(A2),A1
0002CA82 <AmiBlitz3.ab2@17254>   MOVE.l d1,-(a7)
0002CA84 <AmiBlitz3.ab2@17255>   MOVE.b (a1),d2
0002CA86 <AmiBlitz3.ab2@17256>   MOVE.l d0,d1
0002CA8A <AmiBlitz3.ab2@17257>   CMP.w #4,d2
0002CA8E <AmiBlitz3.ab2@17258>   BNE 'l1b
0002CA94 <AmiBlitz3.ab2@17259>   ADD.l #$203c,d1
0002CA98 <AmiBlitz3.ab2@17260>   BSR writeword
0002CA9E <AmiBlitz3.ab2@17261>   MOVE.l #$ffff0000,d1
0002CAA2 <AmiBlitz3.ab2@17262>   BSR writelong
0002CAA6 <AmiBlitz3.ab2@17263> BRA 'l2b
0002CAAC <AmiBlitz3.ab2@17266>    TST.b fpu
0002CAB0 <AmiBlitz3.ab2@17267>    BNE 'l1c
0002CAB4 <AmiBlitz3.ab2@17268>    CMP.w #5,d2
0002CAB8 <AmiBlitz3.ab2@17269>    BNE 'l1c
0002CABE <AmiBlitz3.ab2@17270>    ADD.l #$203c,d1
0002CAC2 <AmiBlitz3.ab2@17271>    BSR writeword
0002CAC8 <AmiBlitz3.ab2@17272>    MOVE.l #$800000c1,d1
0002CACC <AmiBlitz3.ab2@17273>    BSR writelong
0002CAD0 <AmiBlitz3.ab2@17274> BRA 'l2b
0002CAD6 <AmiBlitz3.ab2@17277>   ADD.l #$70ff,d1
0002CADA <AmiBlitz3.ab2@17278>   BSR writeword
0002CADE <AmiBlitz3.ab2@17279>   CMP.w #7,d2
0002CAE2 <AmiBlitz3.ab2@17280>   BNE 'l1d
0002CAE8 <AmiBlitz3.ab2@17281>   MOVE.l #$2f3c0000,d1      ; write code move.l #0,-(a7)
0002CAEC <AmiBlitz3.ab2@17282>   BSR writelong
0002CAEE <AmiBlitz3.ab2@17283>   MOVEQ #0,d1
0002CAF2 <AmiBlitz3.ab2@17284>   BSR writeword
0002CAF8 <AmiBlitz3.ab2@17285>   MOVE.l #$2f3c0000,d1      ; write code move.l #0,-(a7)
0002CAFC <AmiBlitz3.ab2@17286>   BSR writelong
0002CAFE <AmiBlitz3.ab2@17287>   MOVEQ #0,d1
0002CB02 <AmiBlitz3.ab2@17288>   BSR writeword
0002CB08 <AmiBlitz3.ab2@17290> 'l1d  MOVE.l #$f23c5000,d1
0002CB0A <AmiBlitz3.ab2@17291>   MOVE.l d0,d2
0002CB0C <AmiBlitz3.ab2@17292>   ASR.l #2,d2
0002CB0E <AmiBlitz3.ab2@17293>   ADD.l d2,d1
0002CB12 <AmiBlitz3.ab2@17294>   BSR writelong
0002CB16 <AmiBlitz3.ab2@17295>   MOVE.w #$ffff,d1
0002CB1A <AmiBlitz3.ab2@17296>   BSR writeword
0002CB1C <AmiBlitz3.ab2@17300>   MOVE.l (a7)+,d1
0002CB1E <AmiBlitz3.ab2@17301>      ADDQ.l #1,a1
0002CB24 <AmiBlitz3.ab2@17302>      ADD.l #$0200,d0
0002CB2A <AmiBlitz3.ab2@17303>      CMP.l #$0e00,d0
0002CB2E <AmiBlitz3.ab2@17304>      BEQ syntaxerr
0002CB30 <AmiBlitz3.ab2@17305>      TST.b (a1)
0002CB34 <AmiBlitz3.ab2@17306>      BNE 'again
0002CB38 <AmiBlitz3.ab2@17307> BRA 'p1
0002CB3C <AmiBlitz3.ab2@17310>   TST.b $4(A2)
0002CB40 <AmiBlitz3.ab2@17311>    BNE.w JL_0_B03E
0002CB44 <AmiBlitz3.ab2@17314>   BSR.w JL_0_AFCA
0002CB48 <AmiBlitz3.ab2@17315>    BSR.w get1bytemain
0002CB4C <AmiBlitz3.ab2@17316> BRA.w JL_0_B06C
0002CB52 <AmiBlitz3.ab2@17320>   MOVE.w regnum,-(A7)
0002CB5C <AmiBlitz3.ab2@17321>   MOVE.w regnum,regnumfunc
0002CB5E <AmiBlitz3.ab2@17324>   MOVE.l D1,-(A7)                                          ;write functioncall with pars
0002CB66 <AmiBlitz3.ab2@17325>   MOVE.b #1,funccall
0002CB68 <AmiBlitz3.ab2@17326>   MOVEQ.l #$00,D0
0002CB6C <AmiBlitz3.ab2@17327>   MOVE.b $4(A2),D0
0002CB76 <AmiBlitz3.ab2@17328>   MOVE.w a2offset,a2offset2
0002CB7E <AmiBlitz3.ab2@17329>   MOVE.b 5(a2),retmode
0002CB84 <AmiBlitz3.ab2@17330>   MOVE.l a2,currentfunccall
0002CB88 <AmiBlitz3.ab2@17331>   LEA $16(A2),A2
0002CB8E <AmiBlitz3.ab2@17332>   CLR.w regnum
0002CB94 <AmiBlitz3.ab2@17333>   CLR.w regmask
0002CB9A <AmiBlitz3.ab2@17334>   MOVE.b isconstantvalue,-(a7)
0002CBA0 <AmiBlitz3.ab2@17335>   MOVE.b funcparloop,-(a7)
0002CBA8 <AmiBlitz3.ab2@17336>   MOVE.b #1,funcparloop
0002CBAE <AmiBlitz3.ab2@17337>   MOVE.l rightsidetype,-(a7)
0002CBB4 <AmiBlitz3.ab2@17338>   MOVE.l leftsidetype,-(a7)                               ;store values To stack so it can work recursive
0002CBBA <AmiBlitz3.ab2@17339>   MOVE.b blitzparloop,-(a7)
0002CBC0 <AmiBlitz3.ab2@17340>   CLR.b blitzparloop
0002CBC6 <AmiBlitz3.ab2@17341>   JSR fetchpees2
0002CBCC <AmiBlitz3.ab2@17342>   MOVE.b (a7)+,blitzparloop
0002CBD2 <AmiBlitz3.ab2@17343>   MOVE.l (a7)+,leftsidetype
0002CBD8 <AmiBlitz3.ab2@17344>   MOVE.l (a7)+,rightsidetype
0002CBDE <AmiBlitz3.ab2@17345>   MOVE.b (a7)+,funcparloop
0002CBE4 <AmiBlitz3.ab2@17346>   MOVE.b (a7)+,isconstantvalue
0002CBEA <AmiBlitz3.ab2@17347>   JSR chkstak
0002CBEC <AmiBlitz3.ab2@17348>   MOVE.l (A7)+,D1
0002CBF0 <AmiBlitz3.ab2@17364>    BTST #0,d1
0002CBF4 <AmiBlitz3.ab2@17365>    BNE intern1
0002CBF8 <AmiBlitz3.ab2@17366>    BSR.w JL_0_AFCA
0002CBFE <AmiBlitz3.ab2@17388>   MOVE.w (A7)+,regnum
0002CC02 <AmiBlitz3.ab2@17391>   CMP.w #"}",D0
0002CC06 <AmiBlitz3.ab2@17392>    BNE.w errorbracketmiss2
0002CC08 <AmiBlitz3.ab2@17393>    MOVEQ #0,d1                                            ; end of function call pars
0002CC0E <AmiBlitz3.ab2@17394>   MOVE.w regnum,D1
0002CC12 <AmiBlitz3.ab2@17395>    BEQ.w JL_0_B08A
0002CC18 <AmiBlitz3.ab2@17396>    TST.b fpu
0002CC1C <AmiBlitz3.ab2@17397>    BEQ 'old
0002CC24 <AmiBlitz3.ab2@17398>    CMP.b #5,retmode
0002CC28 <AmiBlitz3.ab2@17399>    BNE 'old
0002CC2A <AmiBlitz3.ab2@17400>    ASL.l #7,d1
0002CC30 <AmiBlitz3.ab2@17401>    OR.l #$f2000000,d1
0002CC34 <AmiBlitz3.ab2@17402>    BSR writelong
0002CC38 <AmiBlitz3.ab2@17403> BRA JL_0_B08A
0002CC3A <AmiBlitz3.ab2@17405>  'old  LSL.w #8,D1
0002CC3C <AmiBlitz3.ab2@17406>   LSL.w #1,D1
0002CC40 <AmiBlitz3.ab2@17407>   ORI.w #$2000,D1
0002CC44 <AmiBlitz3.ab2@17408>    BSR.w writeword
0002CC46 <AmiBlitz3.ab2@17411>    MOVE.w (A7)+,D3
0002CC4A <AmiBlitz3.ab2@17412>    BEQ.w JL_0_B0A8
0002CC50 <AmiBlitz3.ab2@17413>    TST.b fpu
0002CC54 <AmiBlitz3.ab2@17414>    BEQ 'old
0002CC56 <AmiBlitz3.ab2@17415>    MOVE.l d0,-(a7)
0002CC5A <AmiBlitz3.ab2@17416>    MOVE.w #8,d0
0002CC5C <AmiBlitz3.ab2@17417>    MOVE.l a0,-(a7)
0002CC62 <AmiBlitz3.ab2@17418>    MOVE.l stacktrack,d1
0002CC68 <AmiBlitz3.ab2@17419>    LEA fpustackbase,a0
0002CC70 <AmiBlitz3.ab2@17420>    MOVE.w 0(a0,d1),regmask
0002CC72 <AmiBlitz3.ab2@17421>    MOVE.l (a7)+,a0
0002CC76 <AmiBlitz3.ab2@17424>   BEQ 'ready
0002CC7C <AmiBlitz3.ab2@17425>    BTST d0,regmask
0002CC80 <AmiBlitz3.ab2@17426>    BEQ 'noa7
0002CC82 <AmiBlitz3.ab2@17427>    MOVEQ #0,d1
0002CC84 <AmiBlitz3.ab2@17428>    MOVE.w d0,d1
0002CC86 <AmiBlitz3.ab2@17429>    SUBQ.w #1,d1
0002CC88 <AmiBlitz3.ab2@17430>    ASL #7,d1
0002CC8E <AmiBlitz3.ab2@17432>    OR.l #$f21f5400,d1                                      ;fmove.d (a7)+
0002CC92 <AmiBlitz3.ab2@17433>    BSR writelong
0002CC98 <AmiBlitz3.ab2@17434>    SUBQ.l #2,stacktrack
0002CC9A <AmiBlitz3.ab2@17437>    SUBQ.w #1,d0
0002CC9E <AmiBlitz3.ab2@17438>    BNE 'loop
0002CCA4 <AmiBlitz3.ab2@17441>   SUBQ.l #2,stacktrack                                     ;integer sub
0002CCA6 <AmiBlitz3.ab2@17442>   MOVE.l (a7)+,d0
0002CCAA <AmiBlitz3.ab2@17445>   MOVE.w #$4CDF,D1
0002CCAE <AmiBlitz3.ab2@17446>    BSR.w writeword
0002CCB0 <AmiBlitz3.ab2@17447>   MOVEQ.l #$00,D1
0002CCB2 <AmiBlitz3.ab2@17448>   MOVEQ.l #$0F,D4
0002CCB4 <AmiBlitz3.ab2@17451>     LSL.w #1,D3
0002CCB6 <AmiBlitz3.ab2@17452>     ROXR.w #1,D1
0002CCBA <AmiBlitz3.ab2@17453>   DBF D4,JL_0_B09C                                         ;movem.l (a7)+,dx
0002CCBE <AmiBlitz3.ab2@17455>     BSR.w writeword
0002CCC4 <AmiBlitz3.ab2@17456>    CLR.w regnumfunc
0002CCC6 <AmiBlitz3.ab2@17459>   MOVE.w (A7)+,D1
0002CCCA <AmiBlitz3.ab2@17460>    BEQ.b JL_0_B0D2
0002CCCE <AmiBlitz3.ab2@17461>   CMPI.w #$7,(A7)
0002CCD2 <AmiBlitz3.ab2@17462>    BEQ.b JL_0_B0C4
0002CCD8 <AmiBlitz3.ab2@17463>   LEA geta3,A0
0002CCDE <AmiBlitz3.ab2@17464>   LEA numtoa0,A1
0002CCE2 <AmiBlitz3.ab2@17465>    BSR.w pokecode
0002CCE6 <AmiBlitz3.ab2@17466> BRA.b JL_0_B0CE
0002CCEC <AmiBlitz3.ab2@17469>   MOVE.w deca3,D1
0002CCF0 <AmiBlitz3.ab2@17470>    BSR.w writeword
0002CCF4 <AmiBlitz3.ab2@17473>   BSR.w dopulla3                                           ;fix up string base
0002CCF6 <AmiBlitz3.ab2@17476>   MOVE.w (A7)+,D2                                          ;what it returns!
0002CCFA <AmiBlitz3.ab2@17477>   CMP.w #$7,D2
0002CCFE <AmiBlitz3.ab2@17478>    BNE.w JL_0_B0EC
0002CD04 <AmiBlitz3.ab2@17479>   MOVE.w putstlen,D1
0002CD0A <AmiBlitz3.ab2@17480>   OR.w regnum,D1
0002CD0E <AmiBlitz3.ab2@17481>    BSR.w writeword
0002CD12 <AmiBlitz3.ab2@17484>   BSR.w get1bytemain
0002CD16 <AmiBlitz3.ab2@17485> BRA.w JL_0_AF66
0002CD18 <AmiBlitz3.ab2@17489> deca3:   Dc.b $53,$4B                                      ;SUBQ.W  #1,A3
0002CD20 <AmiBlitz3.ab2@17494>   CMP.b #2,optistring
0002CD24 <AmiBlitz3.ab2@17495>   BEQ fs2
0002CD28 <AmiBlitz3.ab2@17496>   BSR.w makesbase                                          ;writestringvariable
0002CD2C <AmiBlitz3.ab2@17497>   BTST #$F,D2
0002CD30 <AmiBlitz3.ab2@17498>    BNE.w JL_0_B112
0002CD36 <AmiBlitz3.ab2@17499>   MOVE.w D3,leaa5d3a2+2
0002CD3C <AmiBlitz3.ab2@17500>   MOVE.l leaa5d3a2,D1
0002CD40 <AmiBlitz3.ab2@17501>    BSR.w pokela5s
0002CD46 <AmiBlitz3.ab2@17504>   MOVE.w regnum,D1
0002CD48 <AmiBlitz3.ab2@17505>   LSL.w #8,D1
0002CD4A <AmiBlitz3.ab2@17506>   LSL.w #1,D1
0002CD4E <AmiBlitz3.ab2@17507>   ORI.w #$7000,D1
0002CD54 <AmiBlitz3.ab2@17508>   LEA stvarget2,A0
0002CD56 <AmiBlitz3.ab2@17509>   MOVE.w D1,(A0)
0002CD5C <AmiBlitz3.ab2@17510>   MOVE.w regnum,D1
0002CD62 <AmiBlitz3.ab2@17511>   ANDI.w #$FFF8,$2(A0)
0002CD66 <AmiBlitz3.ab2@17512>   OR.w D1,$2(A0)
0002CD6C <AmiBlitz3.ab2@17513>   LEA stvarget2f,A1
0002CD70 <AmiBlitz3.ab2@17514>    BSR.w pokecode
0002CD74 <AmiBlitz3.ab2@17515>   MOVE.w #$C600,D1
0002CD78 <AmiBlitz3.ab2@17516>    BSR.w Atokejsr
0002CD7A <AmiBlitz3.ab2@17517>   MOVEQ.l #$07,D2
0002CD7E <AmiBlitz3.ab2@17518> BRA.w reget
0002CD84 <AmiBlitz3.ab2@17521>      TST.w stackpar
0002CD88 <AmiBlitz3.ab2@17522>      BMI 'l10
0002CD8E <AmiBlitz3.ab2@17523>      MOVE.l #$3f3c0007,d1
0002CD94 <AmiBlitz3.ab2@17524>      ADDQ.w #2,a2offset
0002CD98 <AmiBlitz3.ab2@17525>      BSR writelong
0002CD9C <AmiBlitz3.ab2@17528>   MOVE.w #$4878,d1
0002CDA2 <AmiBlitz3.ab2@17529>      CLR.w stackpar
0002CDA6 <AmiBlitz3.ab2@17530>      BSR writeword
0002CDAA <AmiBlitz3.ab2@17531>      MOVE.w #$0,d1
0002CDAE <AmiBlitz3.ab2@17532>      BSR writeword
0002CDB2 <AmiBlitz3.ab2@17533>      MOVE.w #$246d,d1
0002CDB6 <AmiBlitz3.ab2@17534>      BSR writeword
0002CDB8 <AmiBlitz3.ab2@17535>      MOVE.w d3,d1
0002CDBC <AmiBlitz3.ab2@17536>      BSR writeword
0002CDC2 <AmiBlitz3.ab2@17537>      MOVE.l #$4a926704,d1
0002CDC6 <AmiBlitz3.ab2@17538>      BSR writelong
0002CDCC <AmiBlitz3.ab2@17539>      MOVE.l #$2eaafffc,d1
0002CDD0 <AmiBlitz3.ab2@17540>      BSR writelong
0002CDD4 <AmiBlitz3.ab2@17541>      MOVE.w #$2f0a,d1
0002CDDA <AmiBlitz3.ab2@17542>      ADDQ.w #8,a2offset
0002CDDE <AmiBlitz3.ab2@17543>      BSR writeword
0002CDE2 <AmiBlitz3.ab2@17544> BRA.w reget
0002CDE6 <AmiBlitz3.ab2@17547>   CMP.b #$7,D2                                             ;load basic var
0002CDEA <AmiBlitz3.ab2@17548>    BEQ.w JL_0_B0F6
0002CDF0 <AmiBlitz3.ab2@17550>    TST.b iee
0002CDF4 <AmiBlitz3.ab2@17551>    BEQ 'noiee
0002CDF8 <AmiBlitz3.ab2@17552>    CMP.b #5,d2
0002CDFC <AmiBlitz3.ab2@17553>    BNE 'noiee
0002CDFE <AmiBlitz3.ab2@17554>    MOVE.l d0,-(a7)                                         ;fpu load var
0002CE02 <AmiBlitz3.ab2@17555>    BTST #15,d2
0002CE06 <AmiBlitz3.ab2@17556>    BEQ 'var
0002CE0C <AmiBlitz3.ab2@17557>    CMP.l #$7fff,d3
0002CE10 <AmiBlitz3.ab2@17558>    BGT 'longoffset
0002CE16 <AmiBlitz3.ab2@17559>    MOVE.l #$f22a4400,d1                                    ;newtype     >32kb
0002CE18 <AmiBlitz3.ab2@17560>    TST.w d3                                                ;offset =0
0002CE1C <AmiBlitz3.ab2@17561>    BNE 'offset
0002CE22 <AmiBlitz3.ab2@17564>   MOVE.l #$f2124400,d1
0002CE24 <AmiBlitz3.ab2@17565>    MOVEQ #0,d3
0002CE28 <AmiBlitz3.ab2@17566> BRA 'glob
0002CE2E <AmiBlitz3.ab2@17569>   SUBQ.l #4,destpointer
0002CE32 <AmiBlitz3.ab2@17570> BRA 'glob
0002CE38 <AmiBlitz3.ab2@17573>   TST.b fast
0002CE3C <AmiBlitz3.ab2@17574>    BEQ 'nofastload
0002CE42 <AmiBlitz3.ab2@17575>    TST.w regnum
0002CE46 <AmiBlitz3.ab2@17576>    BNE 'nofastload
0002CE4C <AmiBlitz3.ab2@17577>    CMP.l fp0addr,a4
0002CE50 <AmiBlitz3.ab2@17578>    BNE 'nofastload
0002CE56 <AmiBlitz3.ab2@17579>    MOVE.l fp0iff,d1
0002CE5C <AmiBlitz3.ab2@17580>    CMP.l firstiff,d1
0002CE60 <AmiBlitz3.ab2@17581>    BNE 'nofastload
0002CE66 <AmiBlitz3.ab2@17582>    MOVE.w varmode,d1
0002CE6C <AmiBlitz3.ab2@17583>    CMP.w fp0mode,d1
0002CE70 <AmiBlitz3.ab2@17584>    BNE 'nofastload
0002CE76 <AmiBlitz3.ab2@17585>    CMP.w fp0var,d3
0002CE7A <AmiBlitz3.ab2@17586>    BNE 'nofastload
0002CE7E <AmiBlitz3.ab2@17587>    BCLR #16,d2
0002CE80 <AmiBlitz3.ab2@17588>    MOVE.l (a7)+,d0
0002CE82 <AmiBlitz3.ab2@17589> RTS
0002CE84 <AmiBlitz3.ab2@17592>    MOVEQ #0,d0
0002CE8A <AmiBlitz3.ab2@17593>    MOVE.w regnum,d0
0002CE90 <AmiBlitz3.ab2@17594>    CMP.l maxregs,d0
0002CE94 <AmiBlitz3.ab2@17595>    BLE 'ok
0002CE9A <AmiBlitz3.ab2@17596>    LEA cmplxerr,a0
0002CE9C <AmiBlitz3.ab2@17597>   MOVE.l a0,-(a7)
0002CEA2 <AmiBlitz3.ab2@17598> JMP handle_compileerror
0002CEA8 <AmiBlitz3.ab2@17601>    LEA regtable,a4
0002CEAA <AmiBlitz3.ab2@17602>    TST.l (a4)
0002CEAE <AmiBlitz3.ab2@17603>    BEQ 'noreg
0002CEB2 <AmiBlitz3.ab2@17604>    CMP.w 0+4(a4),d3
0002CEB6 <AmiBlitz3.ab2@17605>    BNE 'doreg1
0002CEBC <AmiBlitz3.ab2@17606>    MOVE.l #$f2001c00,d1
0002CEC2 <AmiBlitz3.ab2@17607>    MOVE.w regnum,d0
0002CEC4 <AmiBlitz3.ab2@17608>    ASL.w #7,d0
0002CEC6 <AmiBlitz3.ab2@17609>    OR.w d0,d1
0002CECA <AmiBlitz3.ab2@17610>    BSR writelong
0002CECC <AmiBlitz3.ab2@17611>    MOVE.l (a7)+,d0
0002CECE <AmiBlitz3.ab2@17612> RTS
0002CED2 <AmiBlitz3.ab2@17615>   CMP.w 8+4(a4),d3
0002CED6 <AmiBlitz3.ab2@17616>    BNE 'doreg2
0002CEDC <AmiBlitz3.ab2@17617>    MOVE.l #$f2001800,d1
0002CEE2 <AmiBlitz3.ab2@17618>    MOVE.w regnum,d0
0002CEE4 <AmiBlitz3.ab2@17619>    ASL.w #7,d0
0002CEE6 <AmiBlitz3.ab2@17620>    OR.w d0,d1
0002CEEA <AmiBlitz3.ab2@17621>    BSR writelong
0002CEEC <AmiBlitz3.ab2@17622>    MOVE.l (a7)+,d0
0002CEEE <AmiBlitz3.ab2@17623> RTS
0002CEF2 <AmiBlitz3.ab2@17626>   CMP.w 16+4(a4),d3
0002CEF6 <AmiBlitz3.ab2@17627>    BNE 'doreg3
0002CEFC <AmiBlitz3.ab2@17628>    MOVE.l #$f2001400,d1
0002CF02 <AmiBlitz3.ab2@17629>    MOVE.w regnum,d0
0002CF04 <AmiBlitz3.ab2@17630>    ASL.w #7,d0
0002CF06 <AmiBlitz3.ab2@17631>    OR.w d0,d1
0002CF0A <AmiBlitz3.ab2@17632>    BSR  writelong
0002CF0C <AmiBlitz3.ab2@17633>    MOVE.l (a7)+,d0
0002CF0E <AmiBlitz3.ab2@17634> RTS
0002CF12 <AmiBlitz3.ab2@17637>   CMP.w 24+4(a4),d3
0002CF16 <AmiBlitz3.ab2@17638>    BNE 'doreg4
0002CF1C <AmiBlitz3.ab2@17639>    MOVE.l #$f2001000,d1
0002CF22 <AmiBlitz3.ab2@17640>    MOVE.w regnum,d0
0002CF24 <AmiBlitz3.ab2@17641>    ASL.w #7,d0
0002CF26 <AmiBlitz3.ab2@17642>    OR.w d0,d1
0002CF2A <AmiBlitz3.ab2@17643>    BSR writelong
0002CF2C <AmiBlitz3.ab2@17644>    MOVE.l (a7)+,d0
0002CF2E <AmiBlitz3.ab2@17645> RTS
0002CF32 <AmiBlitz3.ab2@17648>    CMP.w 32+4(a4),d3
0002CF36 <AmiBlitz3.ab2@17649>    BNE 'noreg
0002CF3C <AmiBlitz3.ab2@17650>    MOVE.l #$f2000c00,d1
0002CF42 <AmiBlitz3.ab2@17651>    MOVE.w regnum,d0
0002CF44 <AmiBlitz3.ab2@17652>    ASL.w #7,d0
0002CF46 <AmiBlitz3.ab2@17653>    OR.w d0,d1
0002CF4A <AmiBlitz3.ab2@17654>    BSR writelong
0002CF4C <AmiBlitz3.ab2@17655>    MOVE.l (a7)+,d0
0002CF4E <AmiBlitz3.ab2@17656> RTS
0002CF54 <AmiBlitz3.ab2@17659>    MOVE.l #$f22d4400,d1                                    ;var
0002CF5A <AmiBlitz3.ab2@17660>    TST.w varmode
0002CF5E <AmiBlitz3.ab2@17661>   BEQ 'glob
0002CF62 <AmiBlitz3.ab2@17662>   BCLR #16,d1                                              ;local
0002CF64 <AmiBlitz3.ab2@17665>    MOVEQ #0,d0
0002CF6A <AmiBlitz3.ab2@17666>    MOVE.w regnum,d0
0002CF6E <AmiBlitz3.ab2@17667>    CMP.w #7,d0
0002CF72 <AmiBlitz3.ab2@17668>    BLE 'ok2
0002CF78 <AmiBlitz3.ab2@17669>    LEA cmplxerr,a0
0002CF7A <AmiBlitz3.ab2@17670>   MOVE.l a0,-(a7)
0002CF80 <AmiBlitz3.ab2@17671> JMP handle_compileerror
0002CF82 <AmiBlitz3.ab2@17674>      ASL.w #7,d0
0002CF84 <AmiBlitz3.ab2@17675>    OR.l d0,d1
0002CF8C <AmiBlitz3.ab2@17676>    CMP.l #doublecheck,8(a2)
0002CF90 <AmiBlitz3.ab2@17677>    BNE 'dbl
0002CF96 <AmiBlitz3.ab2@17678>    OR.l #$00001000,d1
0002CF9A <AmiBlitz3.ab2@17681>   BSR writelong
0002CF9C <AmiBlitz3.ab2@17682>    MOVE.l (a7)+,d0
0002CFA0 <AmiBlitz3.ab2@17683>    AND.w #$ff,d2
0002CFA2 <AmiBlitz3.ab2@17684>    MOVE.w d3,d1
0002CFA6 <AmiBlitz3.ab2@17685>    BEQ 'nooffs
0002CFAA <AmiBlitz3.ab2@17686> BRA writeword
0002CFAC <AmiBlitz3.ab2@17691> RTS
0002CFB2 <AmiBlitz3.ab2@17694>   MOVE.w regnum,D1
0002CFB8 <AmiBlitz3.ab2@17695>   MOVE.w d1,load_var_reg
0002CFBA <AmiBlitz3.ab2@17696>   LSL.w #8,D1
0002CFC4 <AmiBlitz3.ab2@17697>   MOVE.l destpointer,load_var_addr
0002CFCA <AmiBlitz3.ab2@17698>   MOVE.w d2,load_var_size
0002CFCC <AmiBlitz3.ab2@17699>   LSL.w #1,D1
0002CFD0 <AmiBlitz3.ab2@17700>   BTST #$E,D2
0002CFD4 <AmiBlitz3.ab2@17701>    BNE.w JL_0_B17A
0002CFD6 <AmiBlitz3.ab2@17702>   TST.b D2
0002CFDA <AmiBlitz3.ab2@17703>    BNE.w JL_0_B17E
0002CFDC <AmiBlitz3.ab2@17704>   MOVEQ.l #$03,D2
0002CFE0 <AmiBlitz3.ab2@17705>   ORI.w #$200A,D1
0002CFE4 <AmiBlitz3.ab2@17706> BRA.w writeword
0002CFE8 <AmiBlitz3.ab2@17709>   MOVE.b #$3,D2
0002CFEC <AmiBlitz3.ab2@17712>   BTST #$F,D2
0002CFF0 <AmiBlitz3.ab2@17713>    BEQ.w JL_0_B19A                                         ;loadarray
0002CFF6 <AmiBlitz3.ab2@17714>    TST.b fast                                              ;lea->move xx(a2)
0002CFFA <AmiBlitz3.ab2@17715>    BEQ 'la10
0002D000 <AmiBlitz3.ab2@17720>    CLR.l load_var_addr
0002D004 <AmiBlitz3.ab2@17721> BRA 'la10
0002D00C <AmiBlitz3.ab2@17723>    CMP.w #$2012,movea2dn                                  ;??Looks like dead code??
0002D010 <AmiBlitz3.ab2@17724>    BNE 'la10
0002D016 <AmiBlitz3.ab2@17725>    TST.b optiarray
0002D01A <AmiBlitz3.ab2@17726>    BNE 'la10
0002D020 <AmiBlitz3.ab2@17727>    MOVE.l destpointer,a4
0002D026 <AmiBlitz3.ab2@17728>    SUB.l loada,a4
0002D02A <AmiBlitz3.ab2@17729>    CMP.w #4,a4
0002D02E <AmiBlitz3.ab2@17730>    BEQ 'la100
0002D032 <AmiBlitz3.ab2@17731>    CMP.w #2,a4
0002D036 <AmiBlitz3.ab2@17732>    BNE 'la10
0002D03C <AmiBlitz3.ab2@17733>    MOVE.l destpointer,a4
0002D040 <AmiBlitz3.ab2@17734>    CMP.b #3,d2
0002D044 <AmiBlitz3.ab2@17735>    BCS 'la110
0002D04A <AmiBlitz3.ab2@17736>    MOVE.w #$202a,-2(a4)
0002D04E <AmiBlitz3.ab2@17737>    OR.w d1,-2(a4)
0002D054 <AmiBlitz3.ab2@17738>    MOVE.w arrayoffset,d1
0002D058 <AmiBlitz3.ab2@17739>    BSR writeword
0002D05C <AmiBlitz3.ab2@17740> BRA JL_0_B194
0002D060 <AmiBlitz3.ab2@17743>    CMP.b #2,d2
0002D064 <AmiBlitz3.ab2@17744>    BNE 'la120
0002D06A <AmiBlitz3.ab2@17745>     MOVE.w #$302a,-2(a4)
0002D06E <AmiBlitz3.ab2@17746>    OR.w d1,-2(a4)
0002D074 <AmiBlitz3.ab2@17748>    MOVE.w arrayoffset,d1
0002D078 <AmiBlitz3.ab2@17749>    BSR writeword
0002D07C <AmiBlitz3.ab2@17750> BRA JL_0_B194
0002D080 <AmiBlitz3.ab2@17753>   CMP.b #1,d2
0002D084 <AmiBlitz3.ab2@17754>    BNE.s 'la10
0002D08A <AmiBlitz3.ab2@17755>     MOVE.w #$102a,-2(a4)
0002D08E <AmiBlitz3.ab2@17756>    OR.w d1,-2(a4)
0002D094 <AmiBlitz3.ab2@17757>    MOVE.w arrayoffset,d1
0002D098 <AmiBlitz3.ab2@17758>    BSR writeword
0002D09C <AmiBlitz3.ab2@17759> BRA JL_0_B194
0002D0A2 <AmiBlitz3.ab2@17762>   MOVE.l destpointer,a4
0002D0A8 <AmiBlitz3.ab2@17763>    CMP.w #$45ea,-2(a4)
0002D0AC <AmiBlitz3.ab2@17764>    BNE 'la10
0002D0B0 <AmiBlitz3.ab2@17765>    CMP.b #3,d2
0002D0B4 <AmiBlitz3.ab2@17766>    BCS 'la11
0002D0BA <AmiBlitz3.ab2@17767>    MOVE.w #$202a,-4(a4)
0002D0BE <AmiBlitz3.ab2@17768>    OR.w d1,-4(a4)
0002D0C2 <AmiBlitz3.ab2@17769> BRA JL_0_B194
0002D0C6 <AmiBlitz3.ab2@17772>    CMP.b #2,d2
0002D0CA <AmiBlitz3.ab2@17773>    BNE 'la12
0002D0D0 <AmiBlitz3.ab2@17774>     MOVE.w #$302a,-4(a4)
0002D0D4 <AmiBlitz3.ab2@17775>    OR.w d1,-4(a4)
0002D0D8 <AmiBlitz3.ab2@17776> BRA JL_0_B194
0002D0DC <AmiBlitz3.ab2@17779>   CMP.b #1,d2
0002D0E0 <AmiBlitz3.ab2@17780>    BNE.s 'la10
0002D0E6 <AmiBlitz3.ab2@17781>     MOVE.w #$102a,-4(a4)
0002D0EA <AmiBlitz3.ab2@17782>    OR.w d1,-4(a4)
0002D0EE <AmiBlitz3.ab2@17783> BRA JL_0_B194
0002D0F4 <AmiBlitz3.ab2@17786>    OR.w movea2dn,D1
0002D0F8 <AmiBlitz3.ab2@17787>    BSR.w JL_0_B1B2
0002D0FC <AmiBlitz3.ab2@17788>    BSR.w writeword
0002D100 <AmiBlitz3.ab2@17791>   ANDI.w #$FF,D2
0002D102 <AmiBlitz3.ab2@17792> RTS
0002D108 <AmiBlitz3.ab2@17796>    MOVE.l destpointer,a4
0002D110 <AmiBlitz3.ab2@17797>    MOVE.l #$f22a4400,-4(a4)
0002D116 <AmiBlitz3.ab2@17798>    MOVE.w arrayoffset,d1
0002D11A <AmiBlitz3.ab2@17799> BRA writeword
0002D120 <AmiBlitz3.ab2@17803>   OR.w moved3a5dn,D1                                        ;write move.l 0(a5),reg
0002D124 <AmiBlitz3.ab2@17804>    BSR.w JL_0_B1B2
0002D128 <AmiBlitz3.ab2@17805>    BSR.w pokewda5s
0002D12A <AmiBlitz3.ab2@17806>   MOVE.w D3,D1
0002D12E <AmiBlitz3.ab2@17807>    BSR.w writeword
0002D132 <AmiBlitz3.ab2@17808> BRA.w JL_0_B194
0002D136 <AmiBlitz3.ab2@17811>   BTST #$E,D2
0002D13A <AmiBlitz3.ab2@17812>    BNE.w JL_0_B1CA
0002D13E <AmiBlitz3.ab2@17813>   CMP.b #$1,D2
0002D142 <AmiBlitz3.ab2@17814>    BEQ.w JL_0_B1CC
0002D146 <AmiBlitz3.ab2@17815>   CMP.b #$2,D2
0002D14A <AmiBlitz3.ab2@17816>    BEQ.w JL_0_B1D2
0002D14C <AmiBlitz3.ab2@17819> RTS
0002D150 <AmiBlitz3.ab2@17822>   EORI.w #$3000,D1
0002D152 <AmiBlitz3.ab2@17823> RTS
0002D156 <AmiBlitz3.ab2@17826>   ORI.w #$1000,D1
0002D158 <AmiBlitz3.ab2@17827> RTS
0002D160 <AmiBlitz3.ab2@17831>   MOVE.w #$FFFF,dfetch
0002D164 <AmiBlitz3.ab2@17832>   BSR.w get1bytemain
0002D168 <AmiBlitz3.ab2@17833>   CMP.w #$2D,D0
0002D16C <AmiBlitz3.ab2@17834>    BNE.w JL_0_B206
0002D170 <AmiBlitz3.ab2@17835>   BSR.w get1bytemain
0002D174 <AmiBlitz3.ab2@17836>   BSR.w JL_0_B206
0002D178 <AmiBlitz3.ab2@17837>   CMP.w #$5,D2
0002D17C <AmiBlitz3.ab2@17838>    BCC.w JL_0_B200
0002D17E <AmiBlitz3.ab2@17839>   NEG.l D0
0002D180 <AmiBlitz3.ab2@17840> RTS
0002D186 <AmiBlitz3.ab2@17843>   TST.b fpu
0002D18A <AmiBlitz3.ab2@17844>   BEQ 'noneg
0002D18E <AmiBlitz3.ab2@17845>   fneg.x fp0
0002D190 <AmiBlitz3.ab2@17846> RTS
0002D194 <AmiBlitz3.ab2@17849>   BCHG #$7,D0
0002D196 <AmiBlitz3.ab2@17850> RTS
0002D19A <AmiBlitz3.ab2@17853>   CMP.w #$24,D0
0002D19E <AmiBlitz3.ab2@17854>    BEQ.w get_hexconstant
0002D1A2 <AmiBlitz3.ab2@17855>   CMP.w #$25,D0
0002D1A6 <AmiBlitz3.ab2@17856>    BEQ.w JL_0_A8C0
0002D1AA <AmiBlitz3.ab2@17857>   CMP.w #$2E,D0
0002D1AE <AmiBlitz3.ab2@17858>    BNE.w JL_0_B224
0002D1B0 <AmiBlitz3.ab2@17861>   MOVEQ.l #$00,D3
0002D1B4 <AmiBlitz3.ab2@17862> BRA.w JL_0_B272
0002D1B6 <AmiBlitz3.ab2@17865>   MOVEQ.l #$00,D3                                          ;number
0002D1BA <AmiBlitz3.ab2@17866>    BSR.w atoi
0002D1BE <AmiBlitz3.ab2@17867>   CMP.w #$2E,D0
0002D1C2 <AmiBlitz3.ab2@17868>    BEQ.w JL_0_B268
0002D1C6 <AmiBlitz3.ab2@17869>   ORI.w #$20,D0
0002D1CA <AmiBlitz3.ab2@17870>   CMP.w #$65,D0
0002D1CE <AmiBlitz3.ab2@17871>    BNE.w JL_0_B46E
0002D1D4 <AmiBlitz3.ab2@17872>   CMP.l #$800000,D3
0002D1D8 <AmiBlitz3.ab2@17873>    BCC.w overerr
0002D1DA <AmiBlitz3.ab2@17874>   MOVEQ.l #-$01,D6
0002D1DE <AmiBlitz3.ab2@17875>   fmove.l d3,fp0
0002D1E0 <AmiBlitz3.ab2@17876>   MOVE.l D3,D0
0002D1E6 <AmiBlitz3.ab2@17877>   MOVEA.l _mathffpbase,A6
0002D1EA <AmiBlitz3.ab2@17878>    JSR -$24(A6)
0002D1EC <AmiBlitz3.ab2@17879>   MOVE.l D0,D3
0002D1F0 <AmiBlitz3.ab2@17880>    BSR.w JL_0_B2E6
0002D1F4 <AmiBlitz3.ab2@17881>    BSR.w reget
0002D1F8 <AmiBlitz3.ab2@17882>    BSR.w JL_0_B480
0002D1FC <AmiBlitz3.ab2@17883> BRA.w JL_0_B3DC
0002D200 <AmiBlitz3.ab2@17886>   CMP.b #4,d2
0002D204 <AmiBlitz3.ab2@17887>   BEQ 'l4
0002D208 <AmiBlitz3.ab2@17888>   MOVE.b #5,d2                                             ;nprint 2/0.5 bugfix
0002D20E <AmiBlitz3.ab2@17891>    TST.b fpu
0002D212 <AmiBlitz3.ab2@17892>    BNE 'l1
0002D218 <AmiBlitz3.ab2@17893>    CMP.l #$800000,D3
0002D21C <AmiBlitz3.ab2@17894>    BCC.w overerr
0002D220 <AmiBlitz3.ab2@17895> BRA JL_0_B272
0002D226 <AmiBlitz3.ab2@17898>   CMP.l #$7fffffff,d3
0002D22A <AmiBlitz3.ab2@17899>     BCC.w overerr
0002D22C <AmiBlitz3.ab2@17902>   MOVEQ.l #-$01,D6
0002D22E <AmiBlitz3.ab2@17903>   MOVE.l D3,D0
0002D232 <AmiBlitz3.ab2@17904>   fmove.l d3,fp0
0002D238 <AmiBlitz3.ab2@17905>   MOVEA.l _mathffpbase,A6
0002D23C <AmiBlitz3.ab2@17906>    JSR -$24(A6)                                            ;integer to ffp
0002D23E <AmiBlitz3.ab2@17907>   MOVE.l D0,-(A7)
0002D242 <AmiBlitz3.ab2@17908>    BSR.w get1bytemain
0002D246 <AmiBlitz3.ab2@17909>    BSR.w tstnum
0002D24A <AmiBlitz3.ab2@17910>    BNE.w syntaxerr
0002D24C <AmiBlitz3.ab2@17911>   MOVEQ.l #$00,D3
0002D250 <AmiBlitz3.ab2@17912>    BSR.w atoi
0002D252 <AmiBlitz3.ab2@17913>   TST.l D3
0002D256 <AmiBlitz3.ab2@17914>    BEQ.w JL_0_B2E0
0002D25C <AmiBlitz3.ab2@17915>   TST.b fpu
0002D260 <AmiBlitz3.ab2@17916>   BNE 'l1
0002D266 <AmiBlitz3.ab2@17917>   CMP.l #$800000,D3
0002D26A <AmiBlitz3.ab2@17918>    BCC.w overerr
0002D26E <AmiBlitz3.ab2@17919> BRA 'l2
0002D274 <AmiBlitz3.ab2@17922>   CMP.l #$7fffffff,d3
0002D278 <AmiBlitz3.ab2@17923>   BCC overerr
0002D27C <AmiBlitz3.ab2@17926>   fmove.l d5,fp1
0002D27E <AmiBlitz3.ab2@17927>   MOVE.l D5,D0
0002D282 <AmiBlitz3.ab2@17928>    JSR -$24(A6)
0002D284 <AmiBlitz3.ab2@17929>   MOVE.l D0,D5
0002D288 <AmiBlitz3.ab2@17930>   fmove.l d3,fp2
0002D28A <AmiBlitz3.ab2@17931>   MOVE.l D3,D0
0002D28E <AmiBlitz3.ab2@17932>    JSR -$24(A6)
0002D292 <AmiBlitz3.ab2@17933>   fdiv.x fp1,fp2
0002D294 <AmiBlitz3.ab2@17934>   MOVE.l D5,D1
0002D298 <AmiBlitz3.ab2@17935>    JSR -$54(A6)
0002D29C <AmiBlitz3.ab2@17936>   fadd.x fp2,fp0
0002D29E <AmiBlitz3.ab2@17937>   MOVE.l (A7)+,D1
0002D2A2 <AmiBlitz3.ab2@17938>    JSR -$42(A6)
0002D2A4 <AmiBlitz3.ab2@17939>   MOVE.l D0,D3
0002D2A8 <AmiBlitz3.ab2@17940>    BSR.w reget
0002D2AC <AmiBlitz3.ab2@17941>   ORI.w #$20,D0
0002D2B0 <AmiBlitz3.ab2@17942>   CMP.w #$65,D0
0002D2B4 <AmiBlitz3.ab2@17943>    BNE.w JL_0_B2D4
0002D2B8 <AmiBlitz3.ab2@17944>    BSR.w JL_0_B2E6
0002D2BC <AmiBlitz3.ab2@17947>    BSR.w reget
0002D2C0 <AmiBlitz3.ab2@17948>    BSR.w JL_0_B480
0002D2C4 <AmiBlitz3.ab2@17949> BRA.w JL_0_B3DC
0002D2C6 <AmiBlitz3.ab2@17952>   MOVE.l (A7)+,D3
0002D2CA <AmiBlitz3.ab2@17953> BRA.w JL_0_B2D4
0002D2CE <AmiBlitz3.ab2@17956>   BSR.w get1bytemain
0002D2D2 <AmiBlitz3.ab2@17957>   CMP.w #$2B,D0
0002D2D6 <AmiBlitz3.ab2@17958>    BEQ.w JL_0_B30E
0002D2DA <AmiBlitz3.ab2@17959>   CMP.w #$2D,D0
0002D2DE <AmiBlitz3.ab2@17960>    BNE.w JL_0_B312
0002D2E2 <AmiBlitz3.ab2@17961>    BSR.w get1bytemain
0002D2E6 <AmiBlitz3.ab2@17962>    BSR.w getsign
0002D2E8 <AmiBlitz3.ab2@17963>   MOVE.l D3,D0
0002D2EC <AmiBlitz3.ab2@17964>   fdiv.x fp1,fp0
0002D2EE <AmiBlitz3.ab2@17965>   MOVE.l D4,D1
0002D2F2 <AmiBlitz3.ab2@17966>    JSR -$54(A6)
0002D2F4 <AmiBlitz3.ab2@17967>   MOVE.l D0,D3
0002D2F6 <AmiBlitz3.ab2@17968> RTS
0002D2FA <AmiBlitz3.ab2@17971>   BSR.w get1bytemain
0002D2FE <AmiBlitz3.ab2@17974>   BSR.w getsign
0002D302 <AmiBlitz3.ab2@17975>   fmul.x fp1,fp0
0002D304 <AmiBlitz3.ab2@17976>   MOVE.l D3,D0
0002D306 <AmiBlitz3.ab2@17977>   MOVE.l D4,D1
0002D30A <AmiBlitz3.ab2@17978>    JSR -$4E(A6)
0002D30C <AmiBlitz3.ab2@17979>   MOVE.l D0,D3
0002D30E <AmiBlitz3.ab2@17980> RTS
0002D312 <AmiBlitz3.ab2@17983>   BSR.w tstnum
0002D316 <AmiBlitz3.ab2@17984>    BNE.w syntaxerr
0002D318 <AmiBlitz3.ab2@17985>   MOVE.w D0,D4
0002D31C <AmiBlitz3.ab2@17986>   SUBI.w #$30,D4
0002D320 <AmiBlitz3.ab2@17987>    BSR.w get1bytemain
0002D324 <AmiBlitz3.ab2@17988>    BSR.w tstnum
0002D328 <AmiBlitz3.ab2@17989>    BNE.w getsign__skip
0002D32C <AmiBlitz3.ab2@17990>   MULU #$A,D4
0002D330 <AmiBlitz3.ab2@17991>   SUBI.w #$30,D0
0002D332 <AmiBlitz3.ab2@17992>   ADD.w D0,D4
0002D336 <AmiBlitz3.ab2@17993>    BSR.w get1bytemain
0002D33A <AmiBlitz3.ab2@17996>   CMP.w #$12,D4
0002D33E <AmiBlitz3.ab2@17997>    BHI.w overerr
0002D340 <AmiBlitz3.ab2@17998>   LSL.w #3,D4
0002D346 <AmiBlitz3.ab2@17999>   LEA fputab,a0
0002D348 <AmiBlitz3.ab2@18000>   ADD.l d4,a0
0002D34E <AmiBlitz3.ab2@18001>   fmove.d 0(a0),fp1
0002D350 <AmiBlitz3.ab2@18002>   LSR.w #1,d4
0002D354 <AmiBlitz3.ab2@18003>   MOVE.l facts(PC,D4.W),D4
0002D356 <AmiBlitz3.ab2@18004> RTS
0002D39E <AmiBlitz3.ab2@18008>   Dc.d 1,10,100,1000,10000,100000,1000000,10000000,100000000  ;,1000000000,10000000000
0002D3A2 <AmiBlitz3.ab2@18013>   Dc.l $80000041
0002D3A6 <AmiBlitz3.ab2@18014>   Dc.l $A0000044
0002D3AA <AmiBlitz3.ab2@18015>   Dc.l $C8000047
0002D3AE <AmiBlitz3.ab2@18016>   Dc.l $FA00004A
0002D3B2 <AmiBlitz3.ab2@18017>   Dc.l $9C40004E
0002D3B6 <AmiBlitz3.ab2@18018>   Dc.l $C3500051
0002D3BA <AmiBlitz3.ab2@18019>   Dc.l $F4240054
0002D3BE <AmiBlitz3.ab2@18020>   Dc.l $98968058
0002D3C2 <AmiBlitz3.ab2@18021>   Dc.l $BEBC205B
0002D3C6 <AmiBlitz3.ab2@18022>   Dc.l $EE6B285E
0002D3CA <AmiBlitz3.ab2@18023>   Dc.l $9502F962
0002D3CE <AmiBlitz3.ab2@18024>   Dc.l $BA43B765
0002D3D2 <AmiBlitz3.ab2@18025>   Dc.l $E8D4A568
0002D3D6 <AmiBlitz3.ab2@18026>   Dc.l $9184E76C
0002D3DA <AmiBlitz3.ab2@18027>   Dc.l $B5E6A96F
0002D3DE <AmiBlitz3.ab2@18028>   Dc.l $E35F2972
0002D3E2 <AmiBlitz3.ab2@18029>   Dc.l $8E1BCA76
0002D3E6 <AmiBlitz3.ab2@18030>   Dc.l $B1A2BD79
0002D3EA <AmiBlitz3.ab2@18031>   Dc.l $DE0B6C7C
0002D3EC <AmiBlitz3.ab2@18035>   MOVEQ.l #$01,D5
0002D3EE <AmiBlitz3.ab2@18038>   LSL.l #1,D5
0002D3F0 <AmiBlitz3.ab2@18039>   MOVE.l D5,D1
0002D3F2 <AmiBlitz3.ab2@18040>   LSL.l #2,D5
0002D3F4 <AmiBlitz3.ab2@18041>   ADD.l D1,D5                                              ;divisor for frac convert!
0002D3F6 <AmiBlitz3.ab2@18042>   LSL.l #1,D3
0002D3FA <AmiBlitz3.ab2@18043>    BCS.w overerr
0002D3FC <AmiBlitz3.ab2@18044>   MOVE.l D3,D1
0002D3FE <AmiBlitz3.ab2@18045>   LSL.l #1,D3
0002D402 <AmiBlitz3.ab2@18046>    BCS.w overerr
0002D404 <AmiBlitz3.ab2@18047>   LSL.l #1,D3
0002D408 <AmiBlitz3.ab2@18048>    BCS.w overerr
0002D40A <AmiBlitz3.ab2@18049>   ADD.l D1,D3
0002D40E <AmiBlitz3.ab2@18050>   SUBI.w #$30,D0
0002D410 <AmiBlitz3.ab2@18051>   ADD.l D0,D3
0002D43C <AmiBlitz3.ab2@18052>    !fget                                                   ;bsr.w get1bytemain
0002D440 <AmiBlitz3.ab2@18053>    CMP.b #1,d0
0002D444 <AmiBlitz3.ab2@18054>    BNE 'cm1
0002D446 <AmiBlitz3.ab2@18055>    SUBQ.l #1,a5
0002D44A <AmiBlitz3.ab2@18056>    BSR get1bytemain                                        ;??wy not !fget
0002D44E <AmiBlitz3.ab2@18059>   CMP.b #$7e,d0
0002D452 <AmiBlitz3.ab2@18060>    BNE 'cm2
0002D454 <AmiBlitz3.ab2@18061>    SUBQ.l #1,a5
0002D458 <AmiBlitz3.ab2@18062>    BSR get1bytemain
0002D45A <AmiBlitz3.ab2@18065>   TST.b d0
0002D45E <AmiBlitz3.ab2@18066>    BPL 'l10
0002D460 <AmiBlitz3.ab2@18067>    LSL.w #8,d0
0002D462 <AmiBlitz3.ab2@18068>    MOVE.b (a5)+,d0
0002D468 <AmiBlitz3.ab2@18069>    MOVE.w d0,lastchar
0002D47A <AmiBlitz3.ab2@18072>   !compare2                                                ;bsr.w tstnum ;cmake bug
0002D47E <AmiBlitz3.ab2@18073>    BEQ.w atoi__loop
0002D480 <AmiBlitz3.ab2@18074> RTS
0002D482 <AmiBlitz3.ab2@18077> dfetch:  Ds.w 1                                            ;fetching data?
0002D486 <AmiBlitz3.ab2@18081>   MOVE.w dfetch(PC),D1
0002D48A <AmiBlitz3.ab2@18082>    BEQ.w JL_0_B3EC
0002D490 <AmiBlitz3.ab2@18083>   CLR.w dfetch
0002D492 <AmiBlitz3.ab2@18084> RTS
0002D498 <AmiBlitz3.ab2@18087>   MOVE.b d2,isconstantvalue
0002D49E <AmiBlitz3.ab2@18088>   MOVE.l d0,lastconstantvalue
0002D4A4 <AmiBlitz3.ab2@18089>   MOVE.w d2,imm_size
0002D4AE <AmiBlitz3.ab2@18090>   MOVE.w regnum,imm_reg
0002D4B8 <AmiBlitz3.ab2@18091>   MOVE.l destpointer,imm_addr                           ; long
0002D4BC <AmiBlitz3.ab2@18092>   CMP.w #$3,D2
0002D4C0 <AmiBlitz3.ab2@18093>   BEQ.w JL_0_B434
0002D4C4 <AmiBlitz3.ab2@18094>   CMP.w #$5,D2                                          ;float
0002D4C8 <AmiBlitz3.ab2@18095>   BEQ.w JL_0_B434
0002D4CC <AmiBlitz3.ab2@18096>   CMP.w #$1,D2
0002D4D0 <AmiBlitz3.ab2@18097>   BEQ.w JL_0_B418
0002D4D4 <AmiBlitz3.ab2@18098>   CMP.w #$2,D2
0002D4D8 <AmiBlitz3.ab2@18099>   BEQ.w JL_0_B418
0002D4DC <AmiBlitz3.ab2@18100>   CMP.w #$4,D2
0002D4E0 <AmiBlitz3.ab2@18101>   BEQ.w JL_0_B434
0002D4E4 <AmiBlitz3.ab2@18103> BRA.w mismatcherr
0002D4EA <AmiBlitz3.ab2@18106>   MOVE.w regnum,D1
0002D4EC <AmiBlitz3.ab2@18107>   LSL.w #8,D1
0002D4EE <AmiBlitz3.ab2@18108>   LSL.w #1,D1
0002D4F2 <AmiBlitz3.ab2@18109>   ORI.w #$303C,D1
0002D4F6 <AmiBlitz3.ab2@18110>    BSR.w writeword
0002D4F8 <AmiBlitz3.ab2@18111>   MOVE.w D0,D1
0002D4FC <AmiBlitz3.ab2@18112>    BSR.w writeword
0002D500 <AmiBlitz3.ab2@18113> BRA.w reget
0002D502 <AmiBlitz3.ab2@18116>   MOVEQ #0,d1
0002D508 <AmiBlitz3.ab2@18117>   MOVE.w regnum,D1
0002D50E <AmiBlitz3.ab2@18118>   TST.b fpu
0002D512 <AmiBlitz3.ab2@18119>   BEQ 'f1
0002D516 <AmiBlitz3.ab2@18120>   CMP.w #5,d2
0002D51A <AmiBlitz3.ab2@18121>   BEQ 'l10
0002D51E <AmiBlitz3.ab2@18122> BRA 'f2
0002D524 <AmiBlitz3.ab2@18125>   TST.b iee
0002D528 <AmiBlitz3.ab2@18126>   BNE 'l10
0002D52A <AmiBlitz3.ab2@18129>   LSL.w #8,D1
0002D52C <AmiBlitz3.ab2@18130>   LSL.w #1,D1
0002D530 <AmiBlitz3.ab2@18131>   ORI.w #$203C,D1
0002D534 <AmiBlitz3.ab2@18132>    BSR.w writeword
0002D536 <AmiBlitz3.ab2@18133>   MOVE.l D0,D1
0002D53A <AmiBlitz3.ab2@18134>    BSR.w writelong
0002D53E <AmiBlitz3.ab2@18135> BRA.w reget
0002D540 <AmiBlitz3.ab2@18138>   MOVEQ #5,d2
0002D542 <AmiBlitz3.ab2@18139>   ASL.l #7,d1
0002D544 <AmiBlitz3.ab2@18140>   SUBQ.l #8,a7
0002D54A <AmiBlitz3.ab2@18145>       OR.l #$f23c4400,d1                                   ;fmove.s
0002D550 <AmiBlitz3.ab2@18146>        fmove.s fp0,0(a7)
0002D554 <AmiBlitz3.ab2@18148>   BSR writelong
0002D556 <AmiBlitz3.ab2@18149>   MOVE.l (a7)+,d1
0002D55A <AmiBlitz3.ab2@18150>   BSR writelong
0002D55C <AmiBlitz3.ab2@18151>   MOVE.l (a7)+,d1
0002D560 <AmiBlitz3.ab2@18155> BRA.w reget
0002D562 <AmiBlitz3.ab2@18161>  MOVE.l D3,D0
0002D564 <AmiBlitz3.ab2@18162>   TST.w D6
0002D568 <AmiBlitz3.ab2@18163>    BEQ.w JL_0_B46C
0002D56E <AmiBlitz3.ab2@18164>   MOVEA.l _mathffpbase,A6
0002D572 <AmiBlitz3.ab2@18165>    JSR -$1E(A6)
0002D576 <AmiBlitz3.ab2@18166>    BVC.w JL_0_B46C
0002D578 <AmiBlitz3.ab2@18167>   ADDQ.w #4,A7
0002D57C <AmiBlitz3.ab2@18168> BRA.w JL_0_B5A0
0002D57E <AmiBlitz3.ab2@18171> RTS
0002D580 <AmiBlitz3.ab2@18175>   MOVEQ.l #$00,D6
0002D584 <AmiBlitz3.ab2@18176>    fmove.l d3,fp0
0002D588 <AmiBlitz3.ab2@18179>   BSR.w JL_0_B480
0002D58C <AmiBlitz3.ab2@18180> BRA.w JL_0_B3DC
0002D58E <AmiBlitz3.ab2@18183>   MOVE.w D2,-(A7)
0002D592 <AmiBlitz3.ab2@18184>    BSR.w JL_0_BF6A
0002D594 <AmiBlitz3.ab2@18185>   MOVE.w (A7)+,D2
0002D596 <AmiBlitz3.ab2@18188>   TST.w D2
0002D59A <AmiBlitz3.ab2@18189>    BNE.w JL_0_B498
0002D59C <AmiBlitz3.ab2@18190>   TST.w D6
0002D5A0 <AmiBlitz3.ab2@18191>    BEQ.w JL_0_B492
0002D5A2 <AmiBlitz3.ab2@18192>   MOVEQ.l #$04,D2
0002D5A6 <AmiBlitz3.ab2@18193> BRA.w JL_0_B510
0002D5A8 <AmiBlitz3.ab2@18196>   MOVEQ.l #$02,D2
0002D5AC <AmiBlitz3.ab2@18197> BRA.w JL_0_B4C4
0002D5B0 <AmiBlitz3.ab2@18200>   CMP.w #$1,D2
0002D5B4 <AmiBlitz3.ab2@18201>    BEQ.w JL_0_B4C4
0002D5B8 <AmiBlitz3.ab2@18202>   CMP.w #$2,D2
0002D5BC <AmiBlitz3.ab2@18203>    BEQ.w JL_0_B4F8
0002D5C0 <AmiBlitz3.ab2@18204>   CMP.w #$3,D2
0002D5C4 <AmiBlitz3.ab2@18205>    BEQ.w JL_0_B57A
0002D5C8 <AmiBlitz3.ab2@18206>   CMP.w #$4,D2
0002D5CC <AmiBlitz3.ab2@18207>    BEQ.w JL_0_B506
0002D5D0 <AmiBlitz3.ab2@18208>   CMP.w #$5,D2
0002D5D4 <AmiBlitz3.ab2@18209>    BEQ.w JL_0_B586
0002D5D8 <AmiBlitz3.ab2@18210> BRA.w mismatcherr
0002D5DC <AmiBlitz3.ab2@18213>   BSR.w JL_0_B450                                          ;bugfix if a.b=$90 bug fix
0002D5E2 <AmiBlitz3.ab2@18214>   CMP.l #$7f,D0
0002D5E6 <AmiBlitz3.ab2@18215>    BGT.w JL_0_B4DC
0002D5EC <AmiBlitz3.ab2@18216>   CMP.l #$FFFFFF80,D0
0002D5F0 <AmiBlitz3.ab2@18217>    BGE.w JL_0_B59E
0002D5F2 <AmiBlitz3.ab2@18220>   MOVEQ.l #$02,D2                                          ;was 2 before
0002D5F8 <AmiBlitz3.ab2@18221>   CMP.l #$7fff,D0
0002D5FC <AmiBlitz3.ab2@18222>    BGT.w JL_0_B4F2
0002D602 <AmiBlitz3.ab2@18223>   CMP.l #$FFFF8000,D0
0002D606 <AmiBlitz3.ab2@18224>    BGE.w JL_0_B59E
0002D608 <AmiBlitz3.ab2@18227>   MOVEQ.l #$03,D2
0002D60C <AmiBlitz3.ab2@18228> BRA.w JL_0_B59E
0002D60E <AmiBlitz3.ab2@18254>   TST.w D6
0002D612 <AmiBlitz3.ab2@18255>    BNE.w JL_0_B510
0002D616 <AmiBlitz3.ab2@18256>    BSR.w JL_0_B450
0002D61A <AmiBlitz3.ab2@18257> BRA.w JL_0_B4DC
0002D61E <AmiBlitz3.ab2@18260>   BSR.w JL_0_B450
0002D620 <AmiBlitz3.ab2@18261>   TST.w D6
0002D624 <AmiBlitz3.ab2@18262>   BEQ.w JL_0_B560
0002D62A <AmiBlitz3.ab2@18265>   CMP.l #MaxWordSgnd,D0
0002D62E <AmiBlitz3.ab2@18266>    BGT.w JL_0_B5A0
0002D634 <AmiBlitz3.ab2@18267>   CMP.l #$FFFF8000,D0
0002D638 <AmiBlitz3.ab2@18268>    BLT.w JL_0_B5A0
0002D63A <AmiBlitz3.ab2@18269>   MOVE.w D0,-(A7)
0002D63E <AmiBlitz3.ab2@18270>    JSR -$24(A6)
0002D640 <AmiBlitz3.ab2@18271>   MOVE.l D0,D1
0002D642 <AmiBlitz3.ab2@18272>   MOVE.l D3,D0
0002D646 <AmiBlitz3.ab2@18273>    JSR -$48(A6)
0002D64C <AmiBlitz3.ab2@18274>   MOVE.l #$80000051,D1
0002D650 <AmiBlitz3.ab2@18275>    JSR -$4E(A6)
0002D654 <AmiBlitz3.ab2@18276>    JSR -$1E(A6)
0002D658 <AmiBlitz3.ab2@18277>    BEQ.w JL_0_B55A
0002D65E <AmiBlitz3.ab2@18278>   CMP.l #$10000,D0
0002D662 <AmiBlitz3.ab2@18279>    BCC.w JL_0_B55A
0002D664 <AmiBlitz3.ab2@18280>   MOVE.w D0,D1
0002D666 <AmiBlitz3.ab2@18281>   MOVE.w (A7)+,D0
0002D668 <AmiBlitz3.ab2@18282>   SWAP D0
0002D66A <AmiBlitz3.ab2@18283>   MOVE.w D1,D0
0002D66E <AmiBlitz3.ab2@18284> BRA.w JL_0_B59E
0002D670 <AmiBlitz3.ab2@18287>   ADDQ.w #2,A7
0002D674 <AmiBlitz3.ab2@18288> BRA.w JL_0_B5A0
0002D67A <AmiBlitz3.ab2@18291>   CMP.l #MaxWordSgnd,D0
0002D67E <AmiBlitz3.ab2@18292>    BGT.w JL_0_B4F2
0002D684 <AmiBlitz3.ab2@18293>   CMP.l #$FFFF8000,D0
0002D688 <AmiBlitz3.ab2@18294>    BLT.w JL_0_B4F2
0002D68A <AmiBlitz3.ab2@18295>   SWAP D0
0002D68E <AmiBlitz3.ab2@18296> BRA.w JL_0_B59E
0002D690 <AmiBlitz3.ab2@18299>   TST.w D6
0002D694 <AmiBlitz3.ab2@18300>   BNE.w JL_0_B5A0
0002D696 <AmiBlitz3.ab2@18301>   MOVE.l D3,D0
0002D69A <AmiBlitz3.ab2@18302> BRA.w JL_0_B59E
0002D69C <AmiBlitz3.ab2@18305>   TST.w D6
0002D6A0 <AmiBlitz3.ab2@18306>   BNE.w JL_0_B5A0
0002D6A2 <AmiBlitz3.ab2@18307>   MOVE.l D3,D0
0002D6A8 <AmiBlitz3.ab2@18308>   MOVEA.l _mathffpbase,A6
0002D6AC <AmiBlitz3.ab2@18309>   JSR -$24(A6)
0002D6AE <AmiBlitz3.ab2@18310>   MOVE.l D0,D3
0002D6B2 <AmiBlitz3.ab2@18311> BRA.w JL_0_B5A0
0002D6B4 <AmiBlitz3.ab2@18314> RTS
0002D6B6 <AmiBlitz3.ab2@18317>   MOVEQ.l #$05,D2
0002D6B8 <AmiBlitz3.ab2@18318>   MOVE.l D3,D0
0002D6BA <AmiBlitz3.ab2@18319> RTS
0002D6BE <AmiBlitz3.ab2@18323>             Ds.l 1                                         ;??Looks like unused data??
0002D6C2 <AmiBlitz3.ab2@18324> pushpc:     Ds.l 1
0002D6C6 <AmiBlitz3.ab2@18325> pushoff:    Ds.l 1
0002D6CA <AmiBlitz3.ab2@18326> pushdooff:  Ds.l 1
0002D6CC <AmiBlitz3.ab2@18327> pushclen:   Ds.w 1
0002D6D0 <AmiBlitz3.ab2@18328> pushat:     Ds.l 1
0002D6DA <AmiBlitz3.ab2@18332>   MOVE.l destpointer,pushpc
0002D6E4 <AmiBlitz3.ab2@18333>   MOVE.l hunkoffsetbase,pushoff
0002D6E6 <AmiBlitz3.ab2@18334> RTS
0002D6EA <AmiBlitz3.ab2@18338>   MOVEM.l D0-D1/A0-A1,-(A7)
0002D6F0 <AmiBlitz3.ab2@18339>   MOVE.l destpointer,D0
0002D6F4 <AmiBlitz3.ab2@18340>   MOVE.l pushpc(PC),D1
0002D6FA <AmiBlitz3.ab2@18341>   MOVE.l D1,destpointer
0002D6FC <AmiBlitz3.ab2@18342>   SUB.l D1,D0
0002D702 <AmiBlitz3.ab2@18343>   MOVE.w D0,pushclen
0002D706 <AmiBlitz3.ab2@18344>    BEQ.w JL_0_B636
0002D70C <AmiBlitz3.ab2@18345>   MOVE.w dontwrite,D1
0002D710 <AmiBlitz3.ab2@18346>    BNE.w JL_0_B636
0002D718 <AmiBlitz3.ab2@18347>    CMP.w #1000,pushclen
0002D71C <AmiBlitz3.ab2@18348>    BGE conmemerr
0002D722 <AmiBlitz3.ab2@18349>    MOVE.l pushat,d0
0002D726 <AmiBlitz3.ab2@18350>    BNE 'nomem
0002D72C <AmiBlitz3.ab2@18351>    MOVE.l #1024,d0
0002D72E <AmiBlitz3.ab2@18352>   MOVEQ.l #$01,D1
0002D734 <AmiBlitz3.ab2@18353>   MOVEA.l _execbase,A6
0002D73A <AmiBlitz3.ab2@18354>   MOVE.l mempool,a0
0002D73E <AmiBlitz3.ab2@18355>   JSR _AllocPooled(a6)
0002D744 <AmiBlitz3.ab2@18357>   MOVE.l D0,pushat
0002D746 <AmiBlitz3.ab2@18360>   MOVEA.l D0,A0
0002D74C <AmiBlitz3.ab2@18361>   MOVEA.l pushpc,A1
0002D752 <AmiBlitz3.ab2@18362>   MOVE.l A1,destpointer
0002D758 <AmiBlitz3.ab2@18363>   MOVE.w pushclen,D0
0002D75A <AmiBlitz3.ab2@18364>   LSR.w #1,D0
0002D75C <AmiBlitz3.ab2@18365>   SUBQ.w #1,D0
0002D75E <AmiBlitz3.ab2@18368>     MOVE.w (A1)+,(A0)+
0002D762 <AmiBlitz3.ab2@18369>   DBF D0,JL_0_B626
0002D76C <AmiBlitz3.ab2@18371>    MOVE.l hunkoffsetbase,pushdooff
0002D770 <AmiBlitz3.ab2@18374>   MOVEM.l (A7)+,D0-D1/A0-A1
0002D772 <AmiBlitz3.ab2@18375> RTS
0002D776 <AmiBlitz3.ab2@18379>   MOVEM.l D0-D1/A0-A1,-(A7)
0002D778 <AmiBlitz3.ab2@18380>   MOVEQ.l #$00,D0
0002D77E <AmiBlitz3.ab2@18381>   MOVE.w pushclen,D0
0002D782 <AmiBlitz3.ab2@18382>    BEQ.w JL_0_B6D8
0002D788 <AmiBlitz3.ab2@18383>   MOVE.l destpointer,D1
0002D78E <AmiBlitz3.ab2@18384>   ADD.l D0,destpointer
0002D794 <AmiBlitz3.ab2@18385>   TST.w dontwrite
0002D798 <AmiBlitz3.ab2@18386>    BNE.w JL_0_B6D8
0002D79A <AmiBlitz3.ab2@18387>   LSR.w #1,D0
0002D79C <AmiBlitz3.ab2@18388>   SUBQ.w #1,D0
0002D79E <AmiBlitz3.ab2@18389>   MOVEA.l D1,A1
0002D7A4 <AmiBlitz3.ab2@18390>   MOVEA.l pushat,A0
0002D7AA <AmiBlitz3.ab2@18393>     CMPA.l destbufferend,A1
0002D7AE <AmiBlitz3.ab2@18394>     BCS.w JL_0_B684
0002D7B6 <AmiBlitz3.ab2@18396>     MOVE.w #$FFFF,dontwrite
0002D7BA <AmiBlitz3.ab2@18397>   BRA.w JL_0_B6D8
0002D7BC <AmiBlitz3.ab2@18400>      MOVE.w (A0)+,(A1)+                                    ;copylibcode
0002D7C0 <AmiBlitz3.ab2@18401>   DBF D0,JL_0_B66E
0002D7C6 <AmiBlitz3.ab2@18403>   SUB.l pushpc,D1
0002D7CA <AmiBlitz3.ab2@18404>   BEQ.w JL_0_B6C2
0002D7D0 <AmiBlitz3.ab2@18405>   MOVEA.l pushdooff,A0
0002D7D6 <AmiBlitz3.ab2@18408>   CMPA.l pushoff,A0
0002D7DA <AmiBlitz3.ab2@18409>   BEQ.w JL_0_B6C2
0002D7DE <AmiBlitz3.ab2@18410>   MOVEA.l $4(A0),A1
0002D7E4 <AmiBlitz3.ab2@18411>   ADDA.l destbufferstart,A1
0002D7EA <AmiBlitz3.ab2@18412>   CMPA.l destbufferend,A1
0002D7EE <AmiBlitz3.ab2@18413>   BCC.w JL_0_B6BC
0002D7F2 <AmiBlitz3.ab2@18414>   ADD.l D1,$4(A0)
0002D7F4 <AmiBlitz3.ab2@18417>   MOVEA.l (A0),A0
0002D7F8 <AmiBlitz3.ab2@18418> BRA.w JL_0_B69A
0002D7FE <AmiBlitz3.ab2@18421>   MOVEA.l pushat,A1
0002D800 <AmiBlitz3.ab2@18422>   MOVEQ.l #$00,D0
0002D806 <AmiBlitz3.ab2@18423>   MOVE.w pushclen,D0
0002D80C <AmiBlitz3.ab2@18424>   MOVEA.l _execbase,A6
0002D812 <AmiBlitz3.ab2@18425>   MOVE.l mempool,a0
0002D816 <AmiBlitz3.ab2@18429>   MOVEM.l (A7)+,D0-D1/A0-A1
0002D818 <AmiBlitz3.ab2@18430> RTS
0002D81A <AmiBlitz3.ab2@18433>   MOVE.l D1,-(A7)                                          ;array mul
0002D81C <AmiBlitz3.ab2@18434>   MOVEQ.l #$00,D2
0002D81E <AmiBlitz3.ab2@18435>   MOVEQ.l #$0F,D3
0002D820 <AmiBlitz3.ab2@18438>     LSL.w #1,D1
0002D824 <AmiBlitz3.ab2@18439>     BCC.w JL_0_B6EE
0002D826 <AmiBlitz3.ab2@18440>     ADDQ.w #1,D2
0002D828 <AmiBlitz3.ab2@18441>     MOVE.w D3,D4
0002D82C <AmiBlitz3.ab2@18444>   DBF D3,JL_0_B6E4
0002D82E <AmiBlitz3.ab2@18446>   SUBQ.w #1,D2
0002D832 <AmiBlitz3.ab2@18447>    BNE.w JL_0_B726
0002D834 <AmiBlitz3.ab2@18448>   ADDQ.w #4,A7
0002D836 <AmiBlitz3.ab2@18449>   MOVE.w D4,D1
0002D83A <AmiBlitz3.ab2@18450>    BEQ.w JL_0_B724
0002D83E <AmiBlitz3.ab2@18451>   CMP.w #$8,D1
0002D842 <AmiBlitz3.ab2@18452>    BCS.w JL_0_B712
0002D846 <AmiBlitz3.ab2@18453>   SUBI.w #$8,D1
0002D84A <AmiBlitz3.ab2@18454>    BSR.w JL_0_B712
0002D84C <AmiBlitz3.ab2@18455>   MOVEQ.l #$00,D1
0002D84E <AmiBlitz3.ab2@18458>   LSL.w #8,D1
0002D850 <AmiBlitz3.ab2@18459>   LSL.w #1,D1
0002D854 <AmiBlitz3.ab2@18460>   ORI.w #$E188,D1
0002D85A <AmiBlitz3.ab2@18461>   OR.w regnum,D1
0002D85E <AmiBlitz3.ab2@18462> BRA.w writeword
0002D860 <AmiBlitz3.ab2@18465> RTS
0002D862 <AmiBlitz3.ab2@18468>   MOVEQ #0,d1
0002D868 <AmiBlitz3.ab2@18469>   MOVE.w regnum,D1
0002D86A <AmiBlitz3.ab2@18470>   LSL.l #8,D1
0002D86C <AmiBlitz3.ab2@18472>   LSL.l #4,d1
0002D872 <AmiBlitz3.ab2@18474>   OR.l #$4c3c0000,d1
0002D878 <AmiBlitz3.ab2@18475>   OR.w regnum,d1
0002D87C <AmiBlitz3.ab2@18476>   BSR.w writelong
0002D87E <AmiBlitz3.ab2@18477>   MOVE.l (A7)+,D1
0002D882 <AmiBlitz3.ab2@18479> BRA writelong
0002D888 <AmiBlitz3.ab2@18482>   MOVE.l destpointer,-(A7)
0002D88A <AmiBlitz3.ab2@18483>   MOVEQ.l #-$01,D7
0002D88E <AmiBlitz3.ab2@18486>     BSR.w findhilib
0002D892 <AmiBlitz3.ab2@18487>      BEQ.w JL_0_B8A4
0002D896 <AmiBlitz3.ab2@18488>     TST.w $C(A2)
0002D89A <AmiBlitz3.ab2@18489>      BPL.w JL_0_B746
0002D89E <AmiBlitz3.ab2@18491>     MOVE.l $16(A2),D1
0002D8A2 <AmiBlitz3.ab2@18492>     BEQ.w JL_0_B746
0002D8A6 <AmiBlitz3.ab2@18494>     MOVE.w $4(A2),D1                                       ; check state in D1 and do some things
0002D8AA <AmiBlitz3.ab2@18495>     CMP.w #-$2,D1
0002D8AE <AmiBlitz3.ab2@18496>      BNE.w JL_0_B772
0002D8B2 <AmiBlitz3.ab2@18497>     BSR.w makevsize
0002D8B6 <AmiBlitz3.ab2@18498> BRA.w JL_0_B7FE
0002D8BA <AmiBlitz3.ab2@18501>     CMP.w #-$5C4,D1
0002D8BE <AmiBlitz3.ab2@18502>      BNE.w JL_0_B790
0002D8C2 <AmiBlitz3.ab2@18503>     MOVE.w #$7000,D1
0002D8CA <AmiBlitz3.ab2@18504>     BTST #$7,autorun
0002D8CC <AmiBlitz3.ab2@18505>     SNE D1
0002D8D0 <AmiBlitz3.ab2@18506>     BSR.w writeword
0002D8D4 <AmiBlitz3.ab2@18507> BRA.w JL_0_B7FE
0002D8D8 <AmiBlitz3.ab2@18510>     CMP.w #-$12D,D1
0002D8DC <AmiBlitz3.ab2@18511>      BNE.w JL_0_B7A0
0002D8E0 <AmiBlitz3.ab2@18512>     BSR.w makessize
0002D8E4 <AmiBlitz3.ab2@18513> BRA.w JL_0_B7FE
0002D8E8 <AmiBlitz3.ab2@18516>     CMP.w #-$1F5,D1
0002D8EC <AmiBlitz3.ab2@18517>      BNE.w JL_0_B7C2
0002D8F0 <AmiBlitz3.ab2@18518>     MOVE.w #$203C,D1
0002D8F4 <AmiBlitz3.ab2@18519>     BSR.w writeword
0002D8F8 <AmiBlitz3.ab2@18520>     BSR.w addoff
0002D8FE <AmiBlitz3.ab2@18521>     MOVE.l endop,D1
0002D902 <AmiBlitz3.ab2@18522>     BSR.w writelong
0002D906 <AmiBlitz3.ab2@18523> BRA.w JL_0_B7FE
0002D90A <AmiBlitz3.ab2@18526>     CMP.w #-$3E9,D1
0002D90E <AmiBlitz3.ab2@18527>      BNE.w JL_0_B7E4
0002D912 <AmiBlitz3.ab2@18528>     MOVE.w #$203C,D1
0002D916 <AmiBlitz3.ab2@18529>     BSR.w writeword
0002D91A <AmiBlitz3.ab2@18530>     BSR.w addoff
0002D920 <AmiBlitz3.ab2@18531>     MOVE.l data2at,D1
0002D924 <AmiBlitz3.ab2@18532>     BSR.w writelong
0002D928 <AmiBlitz3.ab2@18533> BRA.w JL_0_B7FE
0002D92C <AmiBlitz3.ab2@18536>     CMP.w #$1,D1
0002D930 <AmiBlitz3.ab2@18537>      BNE.w JL_0_B7FE
0002D934 <AmiBlitz3.ab2@18538>     MOVE.w #$203C,D1
0002D938 <AmiBlitz3.ab2@18539>     BSR.w writeword
0002D93E <AmiBlitz3.ab2@18540>     MOVE.l ptr_seg_debugger,D1
0002D942 <AmiBlitz3.ab2@18541>     BSR.w writelong
0002D946 <AmiBlitz3.ab2@18544>     MOVE.l $16(A2),D1
0002D94E <AmiBlitz3.ab2@18545>     MOVE.w #$FFFF,lasta6
0002D952 <AmiBlitz3.ab2@18546>     BSR.w Amakelibsub
0002D958 <AmiBlitz3.ab2@18547>     CMPI.w #$FFFE,$4(A2)
0002D95C <AmiBlitz3.ab2@18548>      BNE.w JL_0_B83A
0002D962 <AmiBlitz3.ab2@18549>     MOVE.l intdata1,D1
0002D966 <AmiBlitz3.ab2@18550>      BEQ.w JL_0_B83A
0002D96C <AmiBlitz3.ab2@18551>     MOVE.w putidata1,D1
0002D970 <AmiBlitz3.ab2@18552>     BSR.w writeword
0002D974 <AmiBlitz3.ab2@18553>     BSR.w addoff
0002D97A <AmiBlitz3.ab2@18554>     MOVE.l intdata1,D1
0002D97E <AmiBlitz3.ab2@18555>     BSR.w writelong
0002D982 <AmiBlitz3.ab2@18558>     MOVE.w #$2B40,D1
0002D986 <AmiBlitz3.ab2@18559>     TST.w $1A(A2)
0002D98A <AmiBlitz3.ab2@18560>      BEQ.w JL_0_B746
0002D98E <AmiBlitz3.ab2@18561>      BPL.w JL_0_B84E
0002D992 <AmiBlitz3.ab2@18562>     MOVE.w #$3B40,D1
0002D996 <AmiBlitz3.ab2@18565>     BSR.w writeword
0002D99A <AmiBlitz3.ab2@18566>     MOVE.w $A(A2),D1
0002D99E <AmiBlitz3.ab2@18567>      BSR.w writeword
0002D9A4 <AmiBlitz3.ab2@18568>     CMPI.w #$FFFA,$4(A2)
0002D9A8 <AmiBlitz3.ab2@18569>      BNE.w JL_0_B746
0002D9AA <AmiBlitz3.ab2@18570>     MOVE.w D7,-(A7)
0002D9B0 <AmiBlitz3.ab2@18571>     MOVE.w numstatic,D4
0002D9B4 <AmiBlitz3.ab2@18572>      BEQ.w JL_0_B882
0002D9BA <AmiBlitz3.ab2@18573>     MOVE.l staticdata,D3
0002D9C0 <AmiBlitz3.ab2@18574>      JSR datastart
0002D9C4 <AmiBlitz3.ab2@18575>     MOVE.w #$C500,D1
0002D9C8 <AmiBlitz3.ab2@18576>      BSR.w tokejsr2
0002D9CE <AmiBlitz3.ab2@18579>     MOVE.w maxsused,D4
0002D9D2 <AmiBlitz3.ab2@18580>      BEQ.w JL_0_B89E
0002D9D8 <AmiBlitz3.ab2@18581>     MOVE.l maxsat,D3
0002D9DE <AmiBlitz3.ab2@18582>      JSR datastart
0002D9E2 <AmiBlitz3.ab2@18583>     MOVE.w #$CF00,D1
0002D9E6 <AmiBlitz3.ab2@18584>      BSR.w tokejsr2
0002D9E8 <AmiBlitz3.ab2@18587>     MOVE.w (A7)+,D7
0002D9EC <AmiBlitz3.ab2@18588> BRA.w JL_0_B746
0002D9F2 <AmiBlitz3.ab2@18591>   MOVE.l destpointer,D1
0002D9F4 <AmiBlitz3.ab2@18592>   CMP.l (A7),D1
0002D9F8 <AmiBlitz3.ab2@18593>    BNE.w JL_0_B8BC
0002DA00 <AmiBlitz3.ab2@18594>   MOVE.w #$0008,noinits+2
0002DA04 <AmiBlitz3.ab2@18595> BRA.w JL_0_B8E6
0002DA0A <AmiBlitz3.ab2@18598>   CLR.w noinits+2
0002DA10 <AmiBlitz3.ab2@18599>   MOVE.w dontwrite,D1
0002DA14 <AmiBlitz3.ab2@18600>    BNE.w JL_0_B8DE
0002DA1A <AmiBlitz3.ab2@18601>   TST.l newinitaddr
0002DA1E <AmiBlitz3.ab2@18602>    BEQ 'l10
0002DA24 <AmiBlitz3.ab2@18603>   MOVE.l newinitaddr,D2
0002DA2A <AmiBlitz3.ab2@18604>   SUB.l destbufferstart,D2
0002DA2C <AmiBlitz3.ab2@18605>   ADDQ.l #2,d2
0002DA32 <AmiBlitz3.ab2@18606>   MOVEA.l newinitaddr,A0                                   ;write newinitcode
0002DA36 <AmiBlitz3.ab2@18608>   MOVE.w #$4EB9,(A0)+
0002DA38 <AmiBlitz3.ab2@18609>   MOVE.l (A7),(A0)+
0002DA3C <AmiBlitz3.ab2@18611> BRA 'l20
0002DA42 <AmiBlitz3.ab2@18614>   MOVEA.l destbufferstart,A0                               ;write initcode
0002DA48 <AmiBlitz3.ab2@18615>   TST.b saved0
0002DA4C <AmiBlitz3.ab2@18616>   BEQ 'l1
0002DA50 <AmiBlitz3.ab2@18617>   MOVE.w #$23c0,(a0)+
0002DA52 <AmiBlitz3.ab2@18618>   MOVE.l a0,a1
0002DA54 <AmiBlitz3.ab2@18619>   ADDQ.l #6,a1
0002DA56 <AmiBlitz3.ab2@18620>   MOVE.l a1,(a0)+
0002DA58 <AmiBlitz3.ab2@18621>   MOVEQ.l #$02,D2
0002DA5C <AmiBlitz3.ab2@18622>   BSR.w addhunkoffset
0002DA60 <AmiBlitz3.ab2@18623>   MOVE.w #$6004,(a0)+
0002DA66 <AmiBlitz3.ab2@18624>   MOVE.l #$4e714e71,(a0)+
0002DA6A <AmiBlitz3.ab2@18627>   MOVE.w #$4EB9,(A0)+
0002DA6C <AmiBlitz3.ab2@18628>   MOVE.l (A7),(A0)+
0002DA6E <AmiBlitz3.ab2@18629>   MOVEQ #2,d2
0002DA74 <AmiBlitz3.ab2@18630>   TST.b saved0
0002DA78 <AmiBlitz3.ab2@18631>   BEQ 'l20
0002DA7A <AmiBlitz3.ab2@18632>   MOVEQ.l #14,D2
0002DA7E <AmiBlitz3.ab2@18635>   BSR.w addhunkoffset
0002DA82 <AmiBlitz3.ab2@18636>   MOVE.w #$2039,(a0)+
0002DA84 <AmiBlitz3.ab2@18637>   MOVE.l a1,(a0)+
0002DA86 <AmiBlitz3.ab2@18638>   MOVEQ.l #20,d2
0002DA8A <AmiBlitz3.ab2@18641>   BSR.w addhunkoffset
0002DA8E <AmiBlitz3.ab2@18644>   MOVE.w #$4E75,D1
0002DA92 <AmiBlitz3.ab2@18645>   BSR.w writeword
0002DA94 <AmiBlitz3.ab2@18648>   ADDQ.w #4,A7
0002DA96 <AmiBlitz3.ab2@18649> RTS
0002DA9A <AmiBlitz3.ab2@18654>   Dc.b $22,$2D,$00,$00                                     ;MOVE.L  $0000(A5),D1
0002DAA0 <AmiBlitz3.ab2@18656>   Dc.b $23,$CD,$00,$00,$00,$00                             ;MOVE.L  A5,$00000000
0002DAA6 <AmiBlitz3.ab2@18658>   Dc.b $24,$7C,$00,$00,$00,$00                             ;MOVEA.L #$00000000,A2
0002DAAC <AmiBlitz3.ab2@18663>   MOVE.l stringbuffer,D1
0002DAB0 <AmiBlitz3.ab2@18664> BRA.w makesize
0002DAB2 <AmiBlitz3.ab2@18667>   MOVEQ.l #$00,D1
0002DAB8 <AmiBlitz3.ab2@18668>   MOVE.w globalvarpointer,D1
0002DABC <AmiBlitz3.ab2@18669>   SUBI.w #$8000,D1
0002DAC0 <AmiBlitz3.ab2@18670>   BNE.w makesize
0002DAC2 <AmiBlitz3.ab2@18671>     MOVEQ.l #$08,D1
0002DAC4 <AmiBlitz3.ab2@18674>   MOVE.l D1,-(A7)
0002DAC8 <AmiBlitz3.ab2@18675>   MOVE.w #$203C,D1
0002DACC <AmiBlitz3.ab2@18676>   BSR.w writeword
0002DACE <AmiBlitz3.ab2@18677>   MOVE.l (A7)+,D1
0002DAD2 <AmiBlitz3.ab2@18678> BRA.w writelong
0002DAD4 <AmiBlitz3.ab2@18686>   MOVEQ.l #$00,D1
0002DADA <AmiBlitz3.ab2@18687>   MOVEA.l libpointer,A1
0002DADE <AmiBlitz3.ab2@18690>     CMPA.w #$0,A1
0002DAE2 <AmiBlitz3.ab2@18691>     BEQ.w findhilib__done
0002DAE6 <AmiBlitz3.ab2@18692>       CMP.w $4(A1),D7
0002DAEA <AmiBlitz3.ab2@18693>       BLS.w findhilib__next
0002DAEE <AmiBlitz3.ab2@18694>         CMP.w $4(A1),D1
0002DAF2 <AmiBlitz3.ab2@18695>         BCC.w findhilib__next
0002DAF6 <AmiBlitz3.ab2@18696>           MOVE.w $4(A1),D1
0002DAF8 <AmiBlitz3.ab2@18697>           MOVEA.l A1,A2
0002DAFA <AmiBlitz3.ab2@18700>     MOVEA.l (A1),A1
0002DAFE <AmiBlitz3.ab2@18701> BRA.w findhilib__loop
0002DB00 <AmiBlitz3.ab2@18704>   MOVE.w D1,D7
0002DB02 <AmiBlitz3.ab2@18705> RTS
0002DB04 <AmiBlitz3.ab2@18713>   MOVEQ.l #-$01,D1
0002DB0A <AmiBlitz3.ab2@18714>   MOVEA.l libpointer,A1
0002DB0E <AmiBlitz3.ab2@18717>     CMPA.w #$0,A1
0002DB12 <AmiBlitz3.ab2@18718>      BEQ.w findlolib__done
0002DB16 <AmiBlitz3.ab2@18719>     CMP.w $4(A1),D7
0002DB1A <AmiBlitz3.ab2@18720>      BCC.w findlolib__next
0002DB1E <AmiBlitz3.ab2@18721>     CMP.w $4(A1),D1
0002DB22 <AmiBlitz3.ab2@18722>      BLS.w findlolib__next
0002DB26 <AmiBlitz3.ab2@18723>     MOVE.w $4(A1),D1
0002DB28 <AmiBlitz3.ab2@18724>     MOVEA.l A1,A2
0002DB2A <AmiBlitz3.ab2@18727>     MOVEA.l (A1),A1
0002DB2E <AmiBlitz3.ab2@18728> BRA.w findlolib__loop
0002DB30 <AmiBlitz3.ab2@18731>   MOVE.w D1,D7
0002DB34 <AmiBlitz3.ab2@18732>   CMP.w #-$1,D1
0002DB36 <AmiBlitz3.ab2@18733> RTS
0002DB3C <AmiBlitz3.ab2@18737>   ADDQ.w #1,globalvarpointer
0002DB44 <AmiBlitz3.ab2@18738>   BCLR #$0,globalvarpointer+1
0002DB46 <AmiBlitz3.ab2@18739>   MOVEQ.l #$00,D7
0002DB4A <AmiBlitz3.ab2@18742>     BSR.w findlolib
0002DB4E <AmiBlitz3.ab2@18743>     BEQ.w JL_0_BA74
0002DB52 <AmiBlitz3.ab2@18744>     TST.w $C(A2)
0002DB56 <AmiBlitz3.ab2@18745>     BPL.w JL_0_B99A
0002DB58 <AmiBlitz3.ab2@18746>     MOVEA.l A2,A1
0002DB5C <AmiBlitz3.ab2@18747>     ADDA.l $12(A1),A1
0002DB60 <AmiBlitz3.ab2@18748>     TST.w -$2(A1)
0002DB64 <AmiBlitz3.ab2@18749>     BEQ.w JL_0_BA34
0002DB68 <AmiBlitz3.ab2@18750>     MOVE.l -$A(A1),D1
0002DB6C <AmiBlitz3.ab2@18751>     LEA $6(A2,D1.L),A3
0002DB6E <AmiBlitz3.ab2@18754>       TST.w (A3)+
0002DB72 <AmiBlitz3.ab2@18755>       BEQ.w JL_0_B9CC
0002DB74 <AmiBlitz3.ab2@18756>         ADDQ.w #2,A3
0002DB78 <AmiBlitz3.ab2@18757> BRA.w JL_0_B9C0
0002DB7C <AmiBlitz3.ab2@18760>     TST.l $4(A3)
0002DB80 <AmiBlitz3.ab2@18761>     BEQ.w JL_0_BA34
0002DB84 <AmiBlitz3.ab2@18762>       MOVE.w freemax(PC),D1
0002DB88 <AmiBlitz3.ab2@18763>       BSR.w writeword
0002DB8C <AmiBlitz3.ab2@18764>       MOVE.w -$4(A1),D1
0002DB90 <AmiBlitz3.ab2@18765>       BSR.w writeword
0002DB96 <AmiBlitz3.ab2@18766>       MOVE.l free,D1
0002DB9A <AmiBlitz3.ab2@18767>       MOVE.w -$6(A1),D1
0002DB9E <AmiBlitz3.ab2@18768>       BSR.w writelong
0002DBA4 <AmiBlitz3.ab2@18769>       MOVE.l destpointer,-(A7)
0002DBA6 <AmiBlitz3.ab2@18770>       MOVEQ.l #$01,D1
0002DBAA <AmiBlitz3.ab2@18771>       MOVE.w -$2(A1),D2
0002DBAC <AmiBlitz3.ab2@18772>       LSL.w D2,D1
0002DBAE <AmiBlitz3.ab2@18773>       MOVE.w D1,-(A7)
0002DBB2 <AmiBlitz3.ab2@18774>       MOVE.l -$A(A1),D1
0002DBB6 <AmiBlitz3.ab2@18775>       BSR.w Amakelibsub
0002DBBA <AmiBlitz3.ab2@18776>       MOVE.w freemax3(PC),D1
0002DBBE <AmiBlitz3.ab2@18777>       BSR.w writeword
0002DBC0 <AmiBlitz3.ab2@18778>       MOVE.w (A7)+,D1
0002DBC4 <AmiBlitz3.ab2@18779>       BSR.w writeword
0002DBC8 <AmiBlitz3.ab2@18780>       MOVE.l freemax2(PC),D1
0002DBCC <AmiBlitz3.ab2@18781>       BSR.w writelong
0002DBCE <AmiBlitz3.ab2@18782>       MOVE.l (A7)+,D1
0002DBD4 <AmiBlitz3.ab2@18783>       SUB.l destpointer,D1
0002DBD8 <AmiBlitz3.ab2@18784>       BSR.w writeword
0002DBDC <AmiBlitz3.ab2@18785>       MOVE.w freemax4(PC),D1
0002DBE0 <AmiBlitz3.ab2@18786>       BSR.w writeword
0002DBE4 <AmiBlitz3.ab2@18789>     MOVE.l $1C(A2),D1
0002DBE8 <AmiBlitz3.ab2@18790>     BEQ.w JL_0_B99A
0002DBEC <AmiBlitz3.ab2@18792>     MOVE.w $4(A2),D1
0002DBF0 <AmiBlitz3.ab2@18793>     CMP.w #-$2,D1
0002DBF4 <AmiBlitz3.ab2@18794>     BNE.w JL_0_BA50
0002DBF8 <AmiBlitz3.ab2@18795>       BSR.w makevsize
0002DBFC <AmiBlitz3.ab2@18796> BRA.w JL_0_BA60
0002DC00 <AmiBlitz3.ab2@18799>     CMP.w #-$12D,D1
0002DC04 <AmiBlitz3.ab2@18800>     BNE.w JL_0_BA60
0002DC08 <AmiBlitz3.ab2@18801>       BSR.w makessize
0002DC0C <AmiBlitz3.ab2@18802> BRA.w JL_0_BA60
0002DC10 <AmiBlitz3.ab2@18805>     MOVE.l $1C(A2),D1
0002DC18 <AmiBlitz3.ab2@18806>     MOVE.w #$FFFF,lasta6
0002DC1C <AmiBlitz3.ab2@18807>     BSR.w Amakelibsub
0002DC20 <AmiBlitz3.ab2@18808> BRA.w JL_0_B99A
0002DC22 <AmiBlitz3.ab2@18811> RTS
0002DC26 <AmiBlitz3.ab2@18815> freemax:   Dc.b $3F,$3C,$00,$00                            ;MOVE.W  #$0000,-(A7)
0002DC28 <AmiBlitz3.ab2@18817> freemax2:  Dc.b $53,$57                                    ;SUBQ.W  #1,(A7)
0002DC2C <AmiBlitz3.ab2@18818>            Dc.b $66,$00,$FF,$FC                            ;BNE.W freemax2
0002DC2E <AmiBlitz3.ab2@18819> freemax4:  Dc.b $54,$4F                                    ;ADDQ.W  #2,A7
0002DC32 <AmiBlitz3.ab2@18820> freemax3:  Dc.b $47,$EB,$00,$00                            ;LEA $0000(A3),A3
0002DC38 <AmiBlitz3.ab2@18825>   TST.b debugmode
0002DC3C <AmiBlitz3.ab2@18826>    BEQ.b chkstak__skip
0002DC42 <AmiBlitz3.ab2@18827>   TST.w debugversion
0002DC46 <AmiBlitz3.ab2@18828>    BNE.b chkstak__skip
0002DC4A <AmiBlitz3.ab2@18829>   MOVE.w #$C308,D1
0002DC4E <AmiBlitz3.ab2@18830> BRA.w Atokejsr
0002DC50 <AmiBlitz3.ab2@18833> RTS
0002DC58 <AmiBlitz3.ab2@18837>   MOVE.w #$FFFF,lasta6
0002DC5C <AmiBlitz3.ab2@18842>   MOVEM.l D0-d7/A0-a6,-(A7)
0002DC64 <AmiBlitz3.ab2@18843>   MOVE.b #1,nostringopt
0002DC6A <AmiBlitz3.ab2@18844>   JSR searchinstr
0002DC6C <AmiBlitz3.ab2@18845>   MOVE.l A3,D1
0002DC6E <AmiBlitz3.ab2@18846>   SUB.l A2,D1
0002DC72 <AmiBlitz3.ab2@18847>   BSR.w Amakelibsub
0002DC76 <AmiBlitz3.ab2@18848>   MOVEM.l (A7)+,d0-d7/a0-a6
0002DC78 <AmiBlitz3.ab2@18849> RTS
0002DC7E <AmiBlitz3.ab2@18856>   MOVE.l libisat,-(A7)                                   ;library write
0002DC84 <AmiBlitz3.ab2@18857>   MOVE.l A2,libisat
0002DC86 <AmiBlitz3.ab2@18859>   MOVEA.l A1,A2
0002DC88 <AmiBlitz3.ab2@18860>   MOVE.w (A2)+,D1
0002DC8E <AmiBlitz3.ab2@18861>   MOVE.l a2,lastinstructionaddr
0002DC92 <AmiBlitz3.ab2@18862>   ANDI.w #$FF,D1
0002DC94 <AmiBlitz3.ab2@18863>   ADDA.w D1,A2
0002DC96 <AmiBlitz3.ab2@18864>   EXG.l D0,A2
0002DC98 <AmiBlitz3.ab2@18865>   ADDQ.l #1,D0
0002DC9C <AmiBlitz3.ab2@18866>   BCLR #$0,D0
0002DC9E <AmiBlitz3.ab2@18867>   EXG.l D0,A2
0002DCA2 <AmiBlitz3.ab2@18868> BRA.w JL_0_BB08
0002DCA8 <AmiBlitz3.ab2@18872>   MOVE.l libisat,-(A7)
0002DCAE <AmiBlitz3.ab2@18873>   MOVE.l A2,libisat
0002DCB0 <AmiBlitz3.ab2@18874>   MOVEA.l A3,A2
0002DCB4 <AmiBlitz3.ab2@18875> BRA.w JL_0_BB08
0002DCB6 <AmiBlitz3.ab2@18879>   MOVE.l a1,-(a7)
0002DCB8 <AmiBlitz3.ab2@18882>   MOVE.l d0,a0
0002DCBC <AmiBlitz3.ab2@18883>   MOVE.l $a(a0),d0
0002DCBE <AmiBlitz3.ab2@18884>   MOVE.l d0,a1
0002DCC6 <AmiBlitz3.ab2@18885>   CMP.l #8,4(a1)
0002DCCA <AmiBlitz3.ab2@18886>   BLE 'norec
0002DCCC <AmiBlitz3.ab2@18887>   MOVE.l a0,-(a7)
0002DCD2 <AmiBlitz3.ab2@18888>   MOVE.l typebase,-(a7)
0002DCD4 <AmiBlitz3.ab2@18889>   MOVEQ #0,d0
0002DCD8 <AmiBlitz3.ab2@18890>   MOVE.w 4(a0),d0
0002DCDE <AmiBlitz3.ab2@18891>   ADD.l d0,typebase
0002DCE2 <AmiBlitz3.ab2@18892>   MOVE.l $4(a1),d0
0002DCE6 <AmiBlitz3.ab2@18893>   BSR scantype
0002DCEC <AmiBlitz3.ab2@18894>   MOVE.l (a7)+,typebase
0002DCEE <AmiBlitz3.ab2@18895>   MOVE.l (a7)+,a0
0002DCF4 <AmiBlitz3.ab2@18898>   CMP.l #newtype_string,d0
0002DCF8 <AmiBlitz3.ab2@18899>   BNE 'nostring
0002DCFE <AmiBlitz3.ab2@18900>   ADDQ #2,a2offset
0002DD04 <AmiBlitz3.ab2@18901>   MOVE.l #$3f3c0000,d1
0002DD06 <AmiBlitz3.ab2@18902>   MOVEQ #0,d0
0002DD0A <AmiBlitz3.ab2@18903>   MOVE.w 4(a0),d0
0002DD10 <AmiBlitz3.ab2@18904>   ADD.l typebase,d0
0002DD12 <AmiBlitz3.ab2@18905>   MOVE.w d0,d1
0002DD16 <AmiBlitz3.ab2@18906>   BSR writelong
0002DD1C <AmiBlitz3.ab2@18907>   TST.b debugmode
0002DD20 <AmiBlitz3.ab2@18908>   BEQ 'l1a
0002DD22 <AmiBlitz3.ab2@18909>   MOVE.l d1,-(a7)
0002DD28 <AmiBlitz3.ab2@18910>   MOVE.l #$c308,d1
0002DD2E <AmiBlitz3.ab2@18911>   JSR Atokejsr
0002DD30 <AmiBlitz3.ab2@18912>   MOVE.l (a7)+,d1
0002DD34 <AmiBlitz3.ab2@18915>   TST.w 8(a0)
0002DD38 <AmiBlitz3.ab2@18916>   BEQ 'nostring
0002DD3C <AmiBlitz3.ab2@18917>   MOVEM.l d2/d3,-(a7)
0002DD3E <AmiBlitz3.ab2@18918>   MOVE.l d1,d2
0002DD40 <AmiBlitz3.ab2@18919>   MOVEQ #0,d3
0002DD44 <AmiBlitz3.ab2@18920>   MOVE.w 8(a0),d3
0002DD46 <AmiBlitz3.ab2@18921>   SUBQ.l #1,d3
0002DD4A <AmiBlitz3.ab2@18922>   BEQ 'nostring2
0002DD4C <AmiBlitz3.ab2@18925>   ADDQ.l #4,d2
0002DD4E <AmiBlitz3.ab2@18926>   MOVE.l d2,d1
0002DD52 <AmiBlitz3.ab2@18927>   BSR writelong
0002DD58 <AmiBlitz3.ab2@18928>   TST.b debugmode
0002DD5C <AmiBlitz3.ab2@18929>   BEQ 'l1
0002DD62 <AmiBlitz3.ab2@18930>   MOVE.l #$c308,d1
0002DD68 <AmiBlitz3.ab2@18931>   JSR Atokejsr
0002DD6E <AmiBlitz3.ab2@18934>   ADDQ #2,a2offset
0002DD70 <AmiBlitz3.ab2@18935>   SUBQ.l #1,d3
0002DD74 <AmiBlitz3.ab2@18936>   BNE 'loop
0002DD78 <AmiBlitz3.ab2@18939>   MOVEM.l (a7)+,d2/d3
0002DD7A <AmiBlitz3.ab2@18942>   MOVE.l (a0),d0
0002DD7E <AmiBlitz3.ab2@18943>   BNE 'more
0002DD80 <AmiBlitz3.ab2@18944>   MOVE.l (a7)+,a1
0002DD82 <AmiBlitz3.ab2@18945> RTS
0002DD86 <AmiBlitz3.ab2@18948> libisat:   Ds.l 1
0002DD8C <AmiBlitz3.ab2@18954>   MOVE.l libisat,-(A7)                                   
0002DD92 <AmiBlitz3.ab2@18955>   MOVE.l A2,libisat
0002DD96 <AmiBlitz3.ab2@18956>   LEA $6(A2,D1.L),A2
0002DD9E <AmiBlitz3.ab2@18960>   CMP.l #$3e19436c,$1c-8(a2)                               ;clear type
0002DDA2 <AmiBlitz3.ab2@18961>   BEQ 'dowritevar
0002DDAA <AmiBlitz3.ab2@18962>   CMP.l #$3e18436f,$1c-8(a2)                               ;copy type
0002DDAE <AmiBlitz3.ab2@18963>   BEQ 'dowritevar
0002DDB6 <AmiBlitz3.ab2@18964>   CMP.l #$3e175265,$1c(a2)
0002DDBA <AmiBlitz3.ab2@18965>   BEQ 'dowritevar
0002DDC2 <AmiBlitz3.ab2@18966>   CMP.l #$3e165772,$1c(a2)
0002DDC6 <AmiBlitz3.ab2@18967>   BNE 'nowritef
0002DDCA <AmiBlitz3.ab2@18970>   MOVEM.l a0-a2/d2,-(a7)
0002DDCC <AmiBlitz3.ab2@18971>   MOVEQ #0,d1
0002DDD6 <AmiBlitz3.ab2@18972>   MOVE.l #0,typebase
0002DDDA <AmiBlitz3.ab2@18973>   MOVE.l $a(a3),a0
0002DDDE <AmiBlitz3.ab2@18974>   MOVE.l $4(a0),d0
0002DDE4 <AmiBlitz3.ab2@18975>   CMP.l #8,d0
0002DDE8 <AmiBlitz3.ab2@18976>   BLE 'notype
0002DDEC <AmiBlitz3.ab2@18977>   BSR scantype
0002DDF2 <AmiBlitz3.ab2@18980>   MOVE.l #$3f3c0000,d1
0002DDF8 <AmiBlitz3.ab2@18981>   MOVE.w a2offset,d1
0002DDFC <AmiBlitz3.ab2@18982>   BSR writelong
0002DE02 <AmiBlitz3.ab2@18983>   MOVE.l #$3f3c0000,d1
0002DE06 <AmiBlitz3.ab2@18984>   MOVE.l $a(a3),a0
0002DE0A <AmiBlitz3.ab2@18985>   MOVE.w 8(a0),d1
0002DE0E <AmiBlitz3.ab2@18986>   BSR writelong
0002DE14 <AmiBlitz3.ab2@18987>   MOVE.l #$3f3cab12,d1
0002DE18 <AmiBlitz3.ab2@18988>   BSR writelong
0002DE1E <AmiBlitz3.ab2@18989>   ADDQ.w #6,a2offset
0002DE22 <AmiBlitz3.ab2@18990>   MOVEM.l (a7)+,a0-a2/d2
0002DE28 <AmiBlitz3.ab2@18993>   TST.b fpu
0002DE2C <AmiBlitz3.ab2@18994>   BEQ 'nofpu2
0002DE34 <AmiBlitz3.ab2@18995>   CMP.l #$496e7400,$1a(a2)
0002DE38 <AmiBlitz3.ab2@18996>   BNE 'noint
0002DE3A <AmiBlitz3.ab2@18997>   MOVEQ #0,d1
0002DE40 <AmiBlitz3.ab2@18998>   SUBQ.l #8,destpointer                                    ;fpu int
0002DE46 <AmiBlitz3.ab2@18999>   CLR.w a2offset
0002DE4A <AmiBlitz3.ab2@19000>   CMP.b #2,d2
0002DE4E <AmiBlitz3.ab2@19001>   BGT 'noword
0002DE52 <AmiBlitz3.ab2@19002>   MOVE.w #$48c0,d1
0002DE58 <AmiBlitz3.ab2@19003>   OR.w regnumstore,d1
0002DE5C <AmiBlitz3.ab2@19004>   BSR writeword
0002DE60 <AmiBlitz3.ab2@19005> BRA 'exit2
0002DE64 <AmiBlitz3.ab2@19008>    CMP.b #3,d2
0002DE68 <AmiBlitz3.ab2@19009>         BNE 'nolong
0002DE6C <AmiBlitz3.ab2@19010> BRA 'exit2
0002DE70 <AmiBlitz3.ab2@19013>    CMP.b #4,d2
0002DE74 <AmiBlitz3.ab2@19014>         BNE 'noquick
0002DE78 <AmiBlitz3.ab2@19015>         MOVE.w #$e080,d1
0002DE7E <AmiBlitz3.ab2@19016>         OR.w regnumstore,d1
0002DE82 <AmiBlitz3.ab2@19017>         BSR writeword
0002DE86 <AmiBlitz3.ab2@19018>         MOVE.w #$e080,d1
0002DE8C <AmiBlitz3.ab2@19019>         OR.w regnumstore,d1
0002DE90 <AmiBlitz3.ab2@19020>         BSR writeword
0002DE94 <AmiBlitz3.ab2@19021> BRA 'exit2
0002DE96 <AmiBlitz3.ab2@19024>         MOVEQ #0,d0
0002DE98 <AmiBlitz3.ab2@19025>         MOVEQ #0,d1
0002DE9E <AmiBlitz3.ab2@19026>         MOVE.w regnumstore,d0
0002DEA0 <AmiBlitz3.ab2@19027>         ASL.l #7,d0
0002DEA6 <AmiBlitz3.ab2@19028>         OR.l #$f23c4428,d1                                 ;fsub.s 0.5,fpx
0002DEA8 <AmiBlitz3.ab2@19029>         OR.l d0,d1
0002DEAE <AmiBlitz3.ab2@19031>         MOVE.l #$3f000000,d1
0002DEB0 <AmiBlitz3.ab2@19033>         MOVEQ #0,d0
0002DEB2 <AmiBlitz3.ab2@19034>         MOVEQ #0,d1
0002DEB8 <AmiBlitz3.ab2@19035>         MOVE.w regnumstore,d0
0002DEBA <AmiBlitz3.ab2@19036>         ASL.l #7,d0
0002DEBC <AmiBlitz3.ab2@19037>         MOVE.l d0,d1
0002DEC2 <AmiBlitz3.ab2@19038>         OR.l #$f2000003,d1                                 ;fintrz fpx
0002DEC4 <AmiBlitz3.ab2@19039>         ASL.l #3,d0
0002DEC6 <AmiBlitz3.ab2@19040>         OR.l d0,d1
0002DECA <AmiBlitz3.ab2@19041>         BSR writelong
0002DECC <AmiBlitz3.ab2@19042>         MOVEQ #0,d0
0002DED2 <AmiBlitz3.ab2@19043>         MOVE.w regnumstore,d0
0002DED4 <AmiBlitz3.ab2@19044>         ASL.l #7,d0
0002DEDA <AmiBlitz3.ab2@19045>         MOVE.l #$f2006000,d1                               ;fmove.l fp0,d0
0002DEDC <AmiBlitz3.ab2@19046>         OR.l d0,d1
0002DEDE <AmiBlitz3.ab2@19047>         ASL.l #1,d0
0002DEE0 <AmiBlitz3.ab2@19048>         ASL.l #8,d0
0002DEE2 <AmiBlitz3.ab2@19049>         OR.l d0,d1
0002DEE6 <AmiBlitz3.ab2@19050> BRA 'exit
0002DEEC <AmiBlitz3.ab2@19053>   CMP.w #$3c01,24(a2)
0002DEF0 <AmiBlitz3.ab2@19054>   BNE 'noval
0002DEF2 <AmiBlitz3.ab2@19055>   MOVE.l a2,-(a7)
0002DEF6 <AmiBlitz3.ab2@19056>   BSR.w JL_0_BB14
0002DEF8 <AmiBlitz3.ab2@19057>   MOVE.l (a7)+,a2
0002DEFC <AmiBlitz3.ab2@19058> BRA 'exit2
0002DF04 <AmiBlitz3.ab2@19075>   CMP.l #$41627300,$1a(a2)
0002DF08 <AmiBlitz3.ab2@19076>   BNE 'noabs
0002DF0A <AmiBlitz3.ab2@19077>   MOVEQ #0,d1
0002DF10 <AmiBlitz3.ab2@19078>   MOVE.w regnumstore,d1
0002DF12 <AmiBlitz3.ab2@19079>   MOVE.w d1,d0
0002DF14 <AmiBlitz3.ab2@19080>   ASL.w #7,d1
0002DF16 <AmiBlitz3.ab2@19081>   ASL.w #8,d0
0002DF18 <AmiBlitz3.ab2@19082>   ASL.w #2,d0
0002DF1A <AmiBlitz3.ab2@19083>   OR.w d0,d1
0002DF20 <AmiBlitz3.ab2@19084>   SUBQ.l #8,destpointer                                    ;fpu abs
0002DF24 <AmiBlitz3.ab2@19085>   MOVEM.l d3/d1,-(a7)
0002DF28 <AmiBlitz3.ab2@19086>   MOVE.w #5,d3
0002DF2A <AmiBlitz3.ab2@19087>   EXG d2,d3
0002DF30 <AmiBlitz3.ab2@19088>   MOVE.w regnum,-(a7)
0002DF3A <AmiBlitz3.ab2@19089>   MOVE.w regnumstore,regnum
0002DF3E <AmiBlitz3.ab2@19090>   BSR writeconvertcode
0002DF44 <AmiBlitz3.ab2@19091>   MOVE.w (a7)+,regnum
0002DF46 <AmiBlitz3.ab2@19092>   EXG d2,d3
0002DF4A <AmiBlitz3.ab2@19093>   MOVEM.l (a7)+,d3/d1
0002DF50 <AmiBlitz3.ab2@19094>   OR.l #$f2000018,d1
0002DF56 <AmiBlitz3.ab2@19095>   CLR.w a2offset
0002DF5A <AmiBlitz3.ab2@19096> BRA 'exit
0002DF5E <AmiBlitz3.ab2@19099>   CMP.b #5,d2
0002DF62 <AmiBlitz3.ab2@19100>   BNE 'nofpu2
0002DF66 <AmiBlitz3.ab2@19101>   MOVE.b 24(a2),d0
0002DF6A <AmiBlitz3.ab2@19102>   CMP.b #$60,d0                                            ;nolib $edxx
0002DF6E <AmiBlitz3.ab2@19103>   BNE 'nofpu
0002DF70 <AmiBlitz3.ab2@19104>   MOVEQ #0,d1
0002DF76 <AmiBlitz3.ab2@19105>   MOVE.w regnumstore,d1
0002DF78 <AmiBlitz3.ab2@19106>   MOVE.w d1,d0
0002DF7A <AmiBlitz3.ab2@19107>   ASL.w #7,d1
0002DF7C <AmiBlitz3.ab2@19108>   ASL.w #8,d0
0002DF7E <AmiBlitz3.ab2@19109>   ASL.w #2,d0
0002DF80 <AmiBlitz3.ab2@19110>   OR.w d0,d1
0002DF84 <AmiBlitz3.ab2@19111>   MOVE.b 25(a2),d0
0002DF88 <AmiBlitz3.ab2@19112>   CMP.b #5,d0
0002DF8C <AmiBlitz3.ab2@19113>   BNE 'nocos
0002DF92 <AmiBlitz3.ab2@19114>   OR.l #$f200001d,d1                                       ;fpu cos
0002DF96 <AmiBlitz3.ab2@19115> BRA 'exit
0002DF9A <AmiBlitz3.ab2@19118>   CMP.b #$c,d0
0002DF9E <AmiBlitz3.ab2@19119>   BNE 'nosqr
0002DFA4 <AmiBlitz3.ab2@19120>   OR.l #$f2000004,d1                                       ;fpu sqr
0002DFA8 <AmiBlitz3.ab2@19121> BRA 'exit
0002DFAC <AmiBlitz3.ab2@19124>   CMP.b #$d,d0
0002DFB0 <AmiBlitz3.ab2@19125>   BNE 'notan
0002DFB6 <AmiBlitz3.ab2@19126>   OR.l #$f200000f,d1                                       ;fpu tan
0002DFBA <AmiBlitz3.ab2@19127> BRA 'exit
0002DFBE <AmiBlitz3.ab2@19130>   CMP.b #$a,d0
0002DFC2 <AmiBlitz3.ab2@19131>   BNE 'nosin
0002DFC8 <AmiBlitz3.ab2@19132>   OR.l #$f200000e,d1                                       ;fpu sin
0002DFCC <AmiBlitz3.ab2@19133> BRA 'exit
0002DFD0 <AmiBlitz3.ab2@19136>   CMP.b #$3,d0
0002DFD4 <AmiBlitz3.ab2@19137>   BNE 'noasin
0002DFDA <AmiBlitz3.ab2@19138>   OR.l #$f200000c,d1                                       ;fpu asin
0002DFDE <AmiBlitz3.ab2@19139> BRA 'exit
0002DFE2 <AmiBlitz3.ab2@19142>   CMP.b #$2,d0
0002DFE6 <AmiBlitz3.ab2@19143>   BNE 'noacos
0002DFEC <AmiBlitz3.ab2@19144>   OR.l #$f200001c,d1                                       ;fpu acos
0002DFF0 <AmiBlitz3.ab2@19145> BRA 'exit
0002DFF4 <AmiBlitz3.ab2@19148>   CMP.b #$4,d0
0002DFF8 <AmiBlitz3.ab2@19149>   BNE 'noatan
0002DFFE <AmiBlitz3.ab2@19150>   OR.l #$f200000a,d1                                       ;fpu atan
0002E002 <AmiBlitz3.ab2@19151> BRA 'exit
0002E006 <AmiBlitz3.ab2@19154>   CMP.b #$e,d0
0002E00A <AmiBlitz3.ab2@19155>   BNE 'nohtan
0002E010 <AmiBlitz3.ab2@19156>   OR.l #$f2000009,d1                                       ;fpu htan
0002E014 <AmiBlitz3.ab2@19157> BRA 'exit
0002E018 <AmiBlitz3.ab2@19160>   CMP.b #$6,d0
0002E01C <AmiBlitz3.ab2@19161>   BNE 'nohcos
0002E022 <AmiBlitz3.ab2@19162>   OR.l #$f2000019,d1                                       ;fpu hcos
0002E026 <AmiBlitz3.ab2@19163> BRA 'exit
0002E02A <AmiBlitz3.ab2@19166>   CMP.b #$b,d0
0002E02E <AmiBlitz3.ab2@19167>   BNE 'nohsin
0002E034 <AmiBlitz3.ab2@19168>   OR.l #$f2000002,d1                                       ;fpu hsin
0002E038 <AmiBlitz3.ab2@19169> BRA 'exit
0002E03C <AmiBlitz3.ab2@19172>   CMP.b #$9,d0
0002E040 <AmiBlitz3.ab2@19173>   BNE 'nolog
0002E046 <AmiBlitz3.ab2@19174>   OR.l #$f2000014,d1                                       ;fpu log
0002E04A <AmiBlitz3.ab2@19175> BRA 'exit
0002E04E <AmiBlitz3.ab2@19178>   CMP.b #$8,d0
0002E052 <AmiBlitz3.ab2@19179>   BNE 'nolog10
0002E058 <AmiBlitz3.ab2@19180>   OR.l #$f2000015,d1                                       ;fpu log10
0002E05C <AmiBlitz3.ab2@19181> BRA 'exit
0002E060 <AmiBlitz3.ab2@19184>   CMP.b #$7,d0
0002E064 <AmiBlitz3.ab2@19185>   BNE 'noexp
0002E06A <AmiBlitz3.ab2@19186>   OR.l #$f2000010,d1                                       ;fpu exp
0002E06E <AmiBlitz3.ab2@19187> BRA 'exit
0002E074 <AmiBlitz3.ab2@19190>   LEA fpuerr,a0
0002E076 <AmiBlitz3.ab2@19191>   MOVE.l a0,-(a7)
0002E07C <AmiBlitz3.ab2@19192> JMP handle_compileerror
0002E080 <AmiBlitz3.ab2@19196>   CMP.b #$3c,d0
0002E084 <AmiBlitz3.ab2@19197>   BNE 'nofpu2
0002E086 <AmiBlitz3.ab2@19198>   MOVEQ #0,d1
0002E08C <AmiBlitz3.ab2@19199>       MOVE.w regnumstore,d1
0002E08E <AmiBlitz3.ab2@19200>       MOVE.w d1,d0
0002E090 <AmiBlitz3.ab2@19201>       ASL.w #7,d1
0002E092 <AmiBlitz3.ab2@19202>       ASL.w #8,d0
0002E094 <AmiBlitz3.ab2@19203>       ASL.w #2,d0
0002E096 <AmiBlitz3.ab2@19204>       OR.w d0,d1
0002E09C <AmiBlitz3.ab2@19205>       CMP.b #$03,25(a2)
0002E0A0 <AmiBlitz3.ab2@19206>       BNE 'nosgn
0002E0A6 <AmiBlitz3.ab2@19209>       SUBQ.l #8,destpointer                                ;fpu sgn
0002E0AC <AmiBlitz3.ab2@19210>         OR.l #$f200003a,d1
0002E0B0 <AmiBlitz3.ab2@19211>         BSR writelong
0002E0B6 <AmiBlitz3.ab2@19212>         CLR.w a2offset
0002E0BC <AmiBlitz3.ab2@19213>          MOVE.l #$F28E0006,d1
0002E0C0 <AmiBlitz3.ab2@19214>          BSR writelong
0002E0C6 <AmiBlitz3.ab2@19215>   MOVE.l #$7000600a,d1
0002E0CA <AmiBlitz3.ab2@19216>   BSR writelong
0002E0D0 <AmiBlitz3.ab2@19217>   MOVE.l #$70014840,d1
0002E0D4 <AmiBlitz3.ab2@19218>   BSR writelong
0002E0DA <AmiBlitz3.ab2@19219>   MOVE.l #$F292,d1
0002E0DE <AmiBlitz3.ab2@19220>   BSR writeword
0002E0E4 <AmiBlitz3.ab2@19221>   MOVE.l #$000470FF,d1
0002E0E8 <AmiBlitz3.ab2@19222> BRA 'exit
0002E0F0 <AmiBlitz3.ab2@19225>   CMP.l #"Frac",$1a(a2)
0002E0F4 <AmiBlitz3.ab2@19226>   BNE 'nofrac
0002E0FA <AmiBlitz3.ab2@19227> JMP notwork
0002E0FE <AmiBlitz3.ab2@19268> BRA 'exit
0002E102 <AmiBlitz3.ab2@19272>   BSR.w JL_0_BB14                                          ;write lib code
0002E108 <AmiBlitz3.ab2@19273>   MOVE.l (A7)+,libisat
0002E10A <AmiBlitz3.ab2@19274> RTS
0002E10E <AmiBlitz3.ab2@19277>   BSR writelong
0002E114 <AmiBlitz3.ab2@19280>   MOVE.l (A7)+,libisat
0002E116 <AmiBlitz3.ab2@19281> RTS
0002E11A <AmiBlitz3.ab2@19285>   BSR.w fetchregs
0002E120 <AmiBlitz3.ab2@19286>   TST.b debugmode
0002E124 <AmiBlitz3.ab2@19287>    BEQ.w JL_0_BB76
0002E126 <AmiBlitz3.ab2@19288>   MOVE.l (A2),D1
0002E12A <AmiBlitz3.ab2@19289>   OR.l $8(A2),D1
0002E12E <AmiBlitz3.ab2@19290>   BCLR #$0,D1
0002E130 <AmiBlitz3.ab2@19291>   TST.l D1
0002E134 <AmiBlitz3.ab2@19292>    BEQ.w JL_0_BB76
0002E136 <AmiBlitz3.ab2@19293>   MOVE.l (A2)+,D1
0002E13A <AmiBlitz3.ab2@19294>   BTST #$0,D1
0002E13E <AmiBlitz3.ab2@19295>    BEQ.w JL_0_BB60
0002E144 <AmiBlitz3.ab2@19296>   TST.w blitzmode
0002E148 <AmiBlitz3.ab2@19297>    BPL.w blitzerr
0002E14E <AmiBlitz3.ab2@19298>   TST.b debugmode
0002E152 <AmiBlitz3.ab2@19299>    BEQ.w JL_0_BB5C
0002E154 <AmiBlitz3.ab2@19300>   MOVE.l D1,-(A7)
0002E158 <AmiBlitz3.ab2@19301>   MOVE.w #$C311,D1
0002E15C <AmiBlitz3.ab2@19302>    BSR.w makebtst
0002E15E <AmiBlitz3.ab2@19303>   MOVE.l (A7)+,D1
0002E162 <AmiBlitz3.ab2@19306>   BCLR #$0,D1
0002E164 <AmiBlitz3.ab2@19309>   TST.l D1
0002E168 <AmiBlitz3.ab2@19310>    BSR.w JL_0_BBC6
0002E16A <AmiBlitz3.ab2@19311>   MOVE.l (A2)+,D1
0002E16E <AmiBlitz3.ab2@19312>    BSR.w JL_0_BB98
0002E170 <AmiBlitz3.ab2@19313>   MOVE.l (A2)+,D1
0002E174 <AmiBlitz3.ab2@19314>    BSR.w JL_0_BBC6
0002E178 <AmiBlitz3.ab2@19315> BRA.w JL_0_BB90
0002E17E <AmiBlitz3.ab2@19318>   BTST #$0,$3(A2)
0002E182 <AmiBlitz3.ab2@19319>    BEQ.w JL_0_BB88
0002E186 <AmiBlitz3.ab2@19320>   MOVE.w blitzmode(PC),D1
0002E18A <AmiBlitz3.ab2@19321>    BPL.w blitzerr
0002E18E <AmiBlitz3.ab2@19324>   MOVE.l $4(A2),D1
0002E192 <AmiBlitz3.ab2@19325>    BSR.w JL_0_BB98
0002E198 <AmiBlitz3.ab2@19328>   MOVEA.l libisat,A2
0002E19A <AmiBlitz3.ab2@19329> RTS
0002E19E <AmiBlitz3.ab2@19332>   BTST #$0,D1
0002E1A2 <AmiBlitz3.ab2@19333>    BEQ.w JL_0_BBC4
0002E1A8 <AmiBlitz3.ab2@19334>   TST.w blitzmode
0002E1AC <AmiBlitz3.ab2@19335>    BMI.w amigaerr
0002E1B2 <AmiBlitz3.ab2@19336>   TST.b debugmode
0002E1B6 <AmiBlitz3.ab2@19337>    BEQ.w JL_0_BBC0
0002E1B8 <AmiBlitz3.ab2@19338>   MOVE.l D1,-(A7)
0002E1BC <AmiBlitz3.ab2@19339>   MOVE.w #$C312,D1
0002E1C0 <AmiBlitz3.ab2@19340>    BSR.w makebtst
0002E1C2 <AmiBlitz3.ab2@19341>   MOVE.l (A7)+,D1
0002E1C6 <AmiBlitz3.ab2@19344>   BCLR #$0,D1
0002E1C8 <AmiBlitz3.ab2@19347>   TST.l D1
0002E1CC <AmiBlitz3.ab2@19350>    BEQ.w JL_0_BBD2
0002E1CE <AmiBlitz3.ab2@19351>   MOVE.l A1,-(A7)
0002E1D2 <AmiBlitz3.ab2@19352>    BSR.w JL_0_BBD4
0002E1D4 <AmiBlitz3.ab2@19353>   MOVEA.l (A7)+,A1
0002E1D6 <AmiBlitz3.ab2@19356> RTS
0002E1DC <AmiBlitz3.ab2@19359>   MOVEA.l libisat,A0
0002E1E2 <AmiBlitz3.ab2@19360>   TST.w cfetchmode
0002E1E6 <AmiBlitz3.ab2@19361>    BEQ.w JL_0_BBF6
0002E1E8 <AmiBlitz3.ab2@19362>   ADD.l A0,D1
0002E1EA <AmiBlitz3.ab2@19363>   MOVE.l D1,-(A7)
0002E1EE <AmiBlitz3.ab2@19364>   MOVE.w #$4EB9,D1
0002E1F2 <AmiBlitz3.ab2@19365>    BSR.w writeword
0002E1F4 <AmiBlitz3.ab2@19366>   MOVE.l (A7)+,D1
0002E1F8 <AmiBlitz3.ab2@19367> BRA.w writelong
0002E1FC <AmiBlitz3.ab2@19370>   LEA $0(A0,D1.L),A1
0002E202 <AmiBlitz3.ab2@19371>   CLR.w inline
0002E206 <AmiBlitz3.ab2@19374>   CMPI.b #$A0,(A1)+
0002E20A <AmiBlitz3.ab2@19375>    BNE.w JL_0_BC68
0002E20C <AmiBlitz3.ab2@19376>   TST.b (A1)+
0002E210 <AmiBlitz3.ab2@19377>    BEQ.w JL_0_BC18
0002E216 <AmiBlitz3.ab2@19378>   CMPI.b #$1,-$1(A1)
0002E21A <AmiBlitz3.ab2@19379>    BEQ.w JL_0_BC24
0002E220 <AmiBlitz3.ab2@19382>   MOVE.w (A1)+,inline
0002E222 <AmiBlitz3.ab2@19383>   ADDQ.l #4,D1
0002E226 <AmiBlitz3.ab2@19384> BRA.w JL_0_BC00
0002E22C <AmiBlitz3.ab2@19387>   TST.w blitzmode
0002E230 <AmiBlitz3.ab2@19388>    BPL.w JL_0_BC4A
0002E236 <AmiBlitz3.ab2@19389>   TST.b debugmode
0002E23A <AmiBlitz3.ab2@19390>    BEQ.w JL_0_BC40
0002E23E <AmiBlitz3.ab2@19391>   MOVE.w #$C311,D1
0002E242 <AmiBlitz3.ab2@19392>    BSR.w makebtst
0002E244 <AmiBlitz3.ab2@19395>   MOVE.l (A1)+,D1
0002E248 <AmiBlitz3.ab2@19396>   LEA $0(A0,D1.L),A1
0002E24C <AmiBlitz3.ab2@19397> BRA.w JL_0_BC00
0002E252 <AmiBlitz3.ab2@19400>   TST.b debugmode
0002E256 <AmiBlitz3.ab2@19401>    BEQ.w JL_0_BC60
0002E258 <AmiBlitz3.ab2@19402>   MOVE.l D1,-(A7)
0002E25C <AmiBlitz3.ab2@19403>   MOVE.w #$C312,D1
0002E260 <AmiBlitz3.ab2@19404>    BSR.w makebtst
0002E262 <AmiBlitz3.ab2@19405>   MOVE.l (A7)+,D1
0002E264 <AmiBlitz3.ab2@19408>   ADDQ.w #4,A1
0002E266 <AmiBlitz3.ab2@19409>   ADDQ.l #6,D1
0002E26A <AmiBlitz3.ab2@19410> BRA.w JL_0_BC00
0002E270 <AmiBlitz3.ab2@19413>   TST.w inline
0002E274 <AmiBlitz3.ab2@19414>    BEQ.w JL_0_BC7E
0002E276 <AmiBlitz3.ab2@19415>   SUBQ.w #1,A1
0002E278 <AmiBlitz3.ab2@19416>   MOVEA.l A1,A0
0002E27C <AmiBlitz3.ab2@19417>   ADDA.w inline(PC),A1
0002E280 <AmiBlitz3.ab2@19418> BRA.w pokecode2
0002E284 <AmiBlitz3.ab2@19421>   MOVEM.l a0/D1,-(A7)
0002E28A <AmiBlitz3.ab2@19422>   TST.w debugversion
0002E28E <AmiBlitz3.ab2@19423>   BEQ 'l11
0002E296 <AmiBlitz3.ab2@19424>   BTST #$7,link_debuginfo
0002E29A <AmiBlitz3.ab2@19425>   BEQ.w 'l11
0002E2A0 <AmiBlitz3.ab2@19426>   MOVE.l lastinstruction,d1
0002E2A4 <AmiBlitz3.ab2@19427>   BEQ 'l11
0002E2AA <AmiBlitz3.ab2@19428>   CLR.l lastinstruction
0002E2B0 <AmiBlitz3.ab2@19429>   CMP.l #$e000,d1
0002E2B4 <AmiBlitz3.ab2@19430>   BGE 'ln99
0002E2BA <AmiBlitz3.ab2@19431>   LEA notf,a0
0002E2C0 <AmiBlitz3.ab2@19432>   CMP.l #$c601,d1
0002E2C4 <AmiBlitz3.ab2@19433>   BNE 'ln1
0002E2CA <AmiBlitz3.ab2@19434>   LEA strcpy,a0
0002E2CE <AmiBlitz3.ab2@19435> BRA 'ln3
0002E2D4 <AmiBlitz3.ab2@19438>   CMP.l #$c700,d1
0002E2D8 <AmiBlitz3.ab2@19439>   BNE 'ln2
0002E2DE <AmiBlitz3.ab2@19440>   LEA strvar,a0
0002E2E2 <AmiBlitz3.ab2@19441> BRA 'ln3
0002E2E8 <AmiBlitz3.ab2@19444>   CMP.l #$ce00,d1
0002E2EC <AmiBlitz3.ab2@19445>   BNE 'ln4
0002E2F2 <AmiBlitz3.ab2@19446>   LEA strcmp,a0
0002E2F6 <AmiBlitz3.ab2@19447> BRA 'ln3
0002E2FC <AmiBlitz3.ab2@19450>   CMP.l #$ca00,d1
0002E300 <AmiBlitz3.ab2@19451>   BNE 'ln5
0002E306 <AmiBlitz3.ab2@19452>   LEA qmul,a0
0002E30A <AmiBlitz3.ab2@19453> BRA 'ln3
0002E310 <AmiBlitz3.ab2@19456>   CMP.l #$d000,d1
0002E314 <AmiBlitz3.ab2@19457>      BNE 'ln6
0002E31A <AmiBlitz3.ab2@19458>      LEA _MaxLen,a0
0002E31E <AmiBlitz3.ab2@19459> BRA 'ln3
0002E324 <AmiBlitz3.ab2@19462>   CMP.l #$cb00,d1
0002E328 <AmiBlitz3.ab2@19463>   BNE 'ln3
0002E32E <AmiBlitz3.ab2@19464>   LEA qdiv,a0
0002E332 <AmiBlitz3.ab2@19465> BRA 'ln3
0002E334 <AmiBlitz3.ab2@19468>   MOVE.l d1,a0
0002E338 <AmiBlitz3.ab2@19469>   LEA $8(a0),a0
0002E33C <AmiBlitz3.ab2@19472>   CMP.w #$ffff,(a0)+
0002E340 <AmiBlitz3.ab2@19473>   BNE 'l1
0002E344 <AmiBlitz3.ab2@19474>   LEA 6(a0),a0
0002E348 <AmiBlitz3.ab2@19477>   MOVEM.l a1/a2/d7/d2,-(a7)
0002E34A <AmiBlitz3.ab2@19478>   MOVEQ #0,d2
0002E350 <AmiBlitz3.ab2@19479>   LEA ptr_parameterstore,a1
0002E352 <AmiBlitz3.ab2@19482>   ADDQ.l #1,d2
0002E354 <AmiBlitz3.ab2@19483>   MOVE.b (a0)+,d0
0002E358 <AmiBlitz3.ab2@19484> 
0002E35C <AmiBlitz3.ab2@19485>   BNE 'nodollar
0002E360 <AmiBlitz3.ab2@19486>   MOVE.b #"S",d0
0002E364 <AmiBlitz3.ab2@19488>   CMP.b #"?",d0
0002E368 <AmiBlitz3.ab2@19489>   BEQ 'nolabelwrite
0002E36A <AmiBlitz3.ab2@19490>   MOVE.b d0,(a1)+
0002E36E <AmiBlitz3.ab2@19491>   BNE 'l2
0002E374 <AmiBlitz3.ab2@19492>   MOVE.w #"__",-1(a1)
0002E376 <AmiBlitz3.ab2@19493>   ADDQ.l #2,d2
0002E37A <AmiBlitz3.ab2@19494>   CLR.b 1(a1)
0002E380 <AmiBlitz3.ab2@19495>   JSR findlabel2
0002E384 <AmiBlitz3.ab2@19496>   BEQ 'l3
0002E38A <AmiBlitz3.ab2@19497>   JSR addlabelhash
0002E38E <AmiBlitz3.ab2@19500>   CLR.l 4(a2)
0002E392 <AmiBlitz3.ab2@19501>   MOVE.l $14(a7),a0
0002E396 <AmiBlitz3.ab2@19502>   MOVE.l $10(a7),d1
0002E39A <AmiBlitz3.ab2@19503>   SUB.l $12(a0),d1
0002E39E <AmiBlitz3.ab2@19504>   ADD.l $28(a0),d1
0002E3A2 <AmiBlitz3.ab2@19505>   MOVE.l d1,8(a2)
0002E3A6 <AmiBlitz3.ab2@19506> 'nolabelwrite MOVEM.l (a7)+,a1/a2/d7/d2
0002E3AC <AmiBlitz3.ab2@19509>   TST.b typecheck
0002E3B0 <AmiBlitz3.ab2@19510>   BEQ 'p1
0002E3B6 <AmiBlitz3.ab2@19511>   MOVE.l lasttoken,d1
0002E3BC <AmiBlitz3.ab2@19512>   CMP.l #$da01,d1                                          ;poke
0002E3C0 <AmiBlitz3.ab2@19513>   BEQ 'lp1
0002E3C6 <AmiBlitz3.ab2@19514>   CMP.l #$da02,d1                                          ;peek
0002E3CA <AmiBlitz3.ab2@19515>   BNE 'p1
0002E3D0 <AmiBlitz3.ab2@19518>   TST.b peekaddrsize
0002E3D4 <AmiBlitz3.ab2@19519>   BEQ 'p1
0002E3DC <AmiBlitz3.ab2@19520>   CMP.b #3,peekaddrsize
0002E3E0 <AmiBlitz3.ab2@19521>   BNE errormsg_onlylong
0002E3E6 <AmiBlitz3.ab2@19522>   CLR.b peekaddrsize
0002E3EC <AmiBlitz3.ab2@19530>    TST.b fpu
0002E3F0 <AmiBlitz3.ab2@19531>   BNE 'optf
0002E3F6 <AmiBlitz3.ab2@19532>   TST.b fast
0002E3FA <AmiBlitz3.ab2@19533>   BEQ JL11a2
0002E402 <AmiBlitz3.ab2@19540>   CMP.l #"Poke",20(a2)                                     ;poke
0002E406 <AmiBlitz3.ab2@19541>   BNE peekopt
0002E40A <AmiBlitz3.ab2@19542>   TST.b 24(a2)
0002E40E <AmiBlitz3.ab2@19543>   BNE peekopt
0002E412 <AmiBlitz3.ab2@19544>   CMP.b #3,d2
0002E416 <AmiBlitz3.ab2@19545>   BNE 'lw1
0002E41C <AmiBlitz3.ab2@19548>   MOVE.l #$21821990,d1
0002E420 <AmiBlitz3.ab2@19549> BRA.s 'lpx
0002E424 <AmiBlitz3.ab2@19552>   CMP.b #2,d2
0002E428 <AmiBlitz3.ab2@19553>   BNE 'lb1
0002E42E <AmiBlitz3.ab2@19554>   MOVE.l #$31821990,d1
0002E432 <AmiBlitz3.ab2@19555> BRA.s 'lpx
0002E436 <AmiBlitz3.ab2@19558>   CMP.b #1,d2
0002E43A <AmiBlitz3.ab2@19559>   BNE 'lp3
0002E440 <AmiBlitz3.ab2@19560>   MOVE.l #$11821990,d1
0002E444 <AmiBlitz3.ab2@19561> BRA.s 'lpx
0002E448 <AmiBlitz3.ab2@19564>   CMP.b #5,d2
0002E44C <AmiBlitz3.ab2@19565>     BNE JL11a2
0002E452 <AmiBlitz3.ab2@19566>     TST.b fpu
0002E456 <AmiBlitz3.ab2@19567>     BEQ 'll1
0002E45C <AmiBlitz3.ab2@19568>      MOVE.l destpointer,a4
0002E464 <AmiBlitz3.ab2@19569>     CMP.l #$f22d4500,-6(a4)
0002E468 <AmiBlitz3.ab2@19570>     BNE 'noglob
0002E46E <AmiBlitz3.ab2@19571>     TST.b doublepeek
0002E472 <AmiBlitz3.ab2@19572>     BNE 'noglob
0002E478 <AmiBlitz3.ab2@19573>     MOVE.w -2(a4),-4(a4)
0002E47E <AmiBlitz3.ab2@19574>     MOVE.w #$21ad,-6(a4)
0002E484 <AmiBlitz3.ab2@19575>     MOVE.w #$1990,-2(a4)
0002E48C <AmiBlitz3.ab2@19576>     MOVE.w #9,peeksize
0002E48E <AmiBlitz3.ab2@19577>     ADDQ #8,a7
0002E490 <AmiBlitz3.ab2@19578> RTS
0002E498 <AmiBlitz3.ab2@19581>     CMP.l #$f22c4500,-6(a4)
0002E49C <AmiBlitz3.ab2@19582>     BNE 'nolocal
0002E4A2 <AmiBlitz3.ab2@19583>     MOVE.w -2(a4),-4(a4)
0002E4A8 <AmiBlitz3.ab2@19584>     TST.b doublepeek                                       ;dont move longfix on double floats
0002E4AC <AmiBlitz3.ab2@19585>     BNE 'nolocal
0002E4B2 <AmiBlitz3.ab2@19586>     MOVE.w #$21ac,-6(a4)
0002E4B8 <AmiBlitz3.ab2@19587>     MOVE.w #$1990,-2(a4)
0002E4C0 <AmiBlitz3.ab2@19588>     MOVE.w #9,peeksize
0002E4C2 <AmiBlitz3.ab2@19589>     ADDQ #8,a7
0002E4C4 <AmiBlitz3.ab2@19590> RTS
0002E4C8 <AmiBlitz3.ab2@19593>     MOVE.w #$f230,d1
0002E4CC <AmiBlitz3.ab2@19594>     BSR writeword
0002E4D2 <AmiBlitz3.ab2@19595>   MOVE.l #$65001990,d1
0002E4D8 <AmiBlitz3.ab2@19596>   TST.b doublepeek
0002E4DC <AmiBlitz3.ab2@19597>   BEQ 'lpx
0002E4E2 <AmiBlitz3.ab2@19598>   OR.l   #$10000000,d1
0002E4E4 <AmiBlitz3.ab2@19602>   ADDQ #8,a7
0002E4EC <AmiBlitz3.ab2@19603>   MOVE.w #9,peeksize
0002E4F0 <AmiBlitz3.ab2@19604> BRA writelong
0002E4F8 <AmiBlitz3.ab2@19607>   CMP.l #"Peek",20(a2)
0002E4FC <AmiBlitz3.ab2@19608>   BNE 'l10
0002E500 <AmiBlitz3.ab2@19609>   TST.b 24(a2)
0002E504 <AmiBlitz3.ab2@19610>   BNE 'l10
0002E50C <AmiBlitz3.ab2@19611>   CMP.w #7,peeksize
0002E510 <AmiBlitz3.ab2@19612>   BEQ 'l10
0002E518 <AmiBlitz3.ab2@19613>    CMP.w #3,peeksize
0002E51C <AmiBlitz3.ab2@19614>    BNE.s 'lw1
0002E522 <AmiBlitz3.ab2@19617>   MOVE.l #$20301990,d1
0002E526 <AmiBlitz3.ab2@19618> BRA exitjsr
0002E52E <AmiBlitz3.ab2@19621>   CMP.w #2,peeksize
0002E532 <AmiBlitz3.ab2@19622>    BNE.s 'lb1
0002E538 <AmiBlitz3.ab2@19623>    MOVE.l #$30301990,d1
0002E53C <AmiBlitz3.ab2@19624> BRA exitjsr
0002E544 <AmiBlitz3.ab2@19627>   CMP.w #1,peeksize
0002E548 <AmiBlitz3.ab2@19628>    BNE.s 'lf1
0002E54E <AmiBlitz3.ab2@19629>    MOVE.l #$10301990,d1
0002E552 <AmiBlitz3.ab2@19630> BRA exitjsr
0002E55A <AmiBlitz3.ab2@19633>   CMP.w #5,peeksize
0002E55E <AmiBlitz3.ab2@19634>    BNE 'l10
0002E564 <AmiBlitz3.ab2@19635>    TST.b fpu
0002E568 <AmiBlitz3.ab2@19636>    BEQ 'll1
0002E56C <AmiBlitz3.ab2@19637>    MOVE.w #$f230,d1
0002E570 <AmiBlitz3.ab2@19638>    BSR writeword
0002E572 <AmiBlitz3.ab2@19639>    MOVEQ #0,d1
0002E578 <AmiBlitz3.ab2@19640>    MOVE.w tempregnum,d1
0002E57A <AmiBlitz3.ab2@19641>    ASL.l #7,d1
0002E57C <AmiBlitz3.ab2@19642>    ASL.l #8,d1
0002E57E <AmiBlitz3.ab2@19643>    ASL.l #8,d1
0002E584 <AmiBlitz3.ab2@19644>    ADD.l #$44001990,d1
0002E58A <AmiBlitz3.ab2@19645>     TST.b doublepeek
0002E58E <AmiBlitz3.ab2@19646>     BEQ 'lpx2
0002E594 <AmiBlitz3.ab2@19647>     OR.l   #$10000000,d1
0002E598 <AmiBlitz3.ab2@19649> BRA exitjsr
0002E59C <AmiBlitz3.ab2@19653>   MOVE.w #$4EB9,D1
0002E5A0 <AmiBlitz3.ab2@19654>    BSR.w writeword                                         ;writesysjsr
0002E5A4 <AmiBlitz3.ab2@19655>   MOVEM.l (A7)+,a0/D1
0002E5AA <AmiBlitz3.ab2@19656>    JSR addoff
0002E5AE <AmiBlitz3.ab2@19657>   SUB.l $12(A0),D1
0002E5B2 <AmiBlitz3.ab2@19658>   ADD.l $28(A0),D1
0002E5B6 <AmiBlitz3.ab2@19659> BRA.w writelong
0002E5B8 <AmiBlitz3.ab2@19664>   MOVE.w D1,-(A7)
0002E5BC <AmiBlitz3.ab2@19665>   MOVE.w tstmode(PC),D1
0002E5C0 <AmiBlitz3.ab2@19666>    BSR.w writeword
0002E5C4 <AmiBlitz3.ab2@19667>    BSR.w getbbase
0002E5C8 <AmiBlitz3.ab2@19668>    BSR.w writeword
0002E5CA <AmiBlitz3.ab2@19669>   MOVE.w (A7)+,D1
0002E5CE <AmiBlitz3.ab2@19670>   MOVEM.l D0/D3-D7/A0-A2/A4,-(A7)
0002E5D2 <AmiBlitz3.ab2@19671>    BSR.w Atokejsr
0002E5D6 <AmiBlitz3.ab2@19672>   MOVEM.l (A7)+,D0/D3-D7/A0-A2/A4
0002E5D8 <AmiBlitz3.ab2@19673> RTS
0002E5DC <AmiBlitz3.ab2@19681>   MOVE.w blitzoff(PC),D1
0002E5E0 <AmiBlitz3.ab2@19682>   CMP.w #-$1,D1
0002E5E4 <AmiBlitz3.ab2@19683>    BNE.w getbbase__done
0002E5EA <AmiBlitz3.ab2@19684>   ADDQ.w #1,globalvarpointer
0002E5F2 <AmiBlitz3.ab2@19685>   BCLR #$0,globalvarpointer+1
0002E5F8 <AmiBlitz3.ab2@19686>   MOVE.w globalvarpointer,D1
0002E5FE <AmiBlitz3.ab2@19687>   MOVE.w D1,blitzoff
0002E604 <AmiBlitz3.ab2@19688>   ADDQ.w #2,globalvarpointer
0002E606 <AmiBlitz3.ab2@19691> RTS
0002E60A <AmiBlitz3.ab2@19695> tstmode:    Dc.b $4A,$6D,$00,$00                           ;TST.W $0000(A5)
0002E60C <AmiBlitz3.ab2@19698> inline:     Ds.w 1
0002E60E <AmiBlitz3.ab2@19699> blitzoff:   Dc.w $FFFF                                   ;-1 org source
0002E610 <AmiBlitz3.ab2@19700> blitzmode:  Ds.w 1                                       ;+=amiga, -=blitz
0002E612 <AmiBlitz3.ab2@19704>   MOVE.w (A2)+,D1
0002E616 <AmiBlitz3.ab2@19705>    BEQ.w fetchregs__done
0002E618 <AmiBlitz3.ab2@19706>   MOVE.w (A2)+,D2
0002E61C <AmiBlitz3.ab2@19707>    BSR.w toreg
0002E620 <AmiBlitz3.ab2@19708> BRA.w fetchregs
0002E622 <AmiBlitz3.ab2@19711> RTS
0002E626 <AmiBlitz3.ab2@19716>   CMP.w #-$100,D2
0002E62A <AmiBlitz3.ab2@19717>    BCC.w toreg__yeah
0002E62E <AmiBlitz3.ab2@19719>   BCLR #$F,D2
0002E632 <AmiBlitz3.ab2@19720>    BEQ.w toreg__nobm
0002E638 <AmiBlitz3.ab2@19722>   TST.w blitzmode
0002E63C <AmiBlitz3.ab2@19723>    BMI.w toreg__yeah
0002E63E <AmiBlitz3.ab2@19724> RTS
0002E642 <AmiBlitz3.ab2@19727>   BCLR #$E,D2
0002E646 <AmiBlitz3.ab2@19728>    BEQ.w toreg__yeah
0002E64C <AmiBlitz3.ab2@19730>   TST.w blitzmode
0002E650 <AmiBlitz3.ab2@19731>    BPL.w toreg__yeah
0002E652 <AmiBlitz3.ab2@19732> RTS
0002E658 <AmiBlitz3.ab2@19735>   JSR uselib
0002E65A <AmiBlitz3.ab2@19736>   TST.b D2
0002E65E <AmiBlitz3.ab2@19737>    BEQ.w toreg__norm
0002E662 <AmiBlitz3.ab2@19738>   CMP.b #$4,D2
0002E666 <AmiBlitz3.ab2@19739>    BNE.w toreg__suv
0002E66A <AmiBlitz3.ab2@19740>   MOVE.w #$0004,-(A7)
0002E670 <AmiBlitz3.ab2@19741>   MOVE.l #$FFFFFFFA,-(A7)                                  ;#-6,-(a7) org source
0002E674 <AmiBlitz3.ab2@19742> BRA.w toreg__sendmd
0002E678 <AmiBlitz3.ab2@19745>   CMP.b #$3,D2
0002E67C <AmiBlitz3.ab2@19746>    BNE.w toreg__notnmax
0002E67E <AmiBlitz3.ab2@19747>   CLR.w -(A7)
0002E684 <AmiBlitz3.ab2@19748>   MOVE.l #$FFFFFFFC,-(A7)                                  ;#-4,-(a7) org source
0002E686 <AmiBlitz3.ab2@19754>   LSR.w #8,D2
0002E68A <AmiBlitz3.ab2@19755>   MOVE.w #$303C,D1                                         ;move.w #x,dn
0002E68E <AmiBlitz3.ab2@19756>   BTST #$7,D2
0002E692 <AmiBlitz3.ab2@19757>    BEQ.w toreg__skipad
0002E696 <AmiBlitz3.ab2@19758>   MOVE.w #$307C,D1                                         ;move.w #x,an
0002E69A <AmiBlitz3.ab2@19759>   CMP.w #$16,D2
0002E69E <AmiBlitz3.ab2@19760>    BNE.w toreg__skipad
0002E6A6 <AmiBlitz3.ab2@19761>   MOVE.w #$FFFF,lasta6                                     ;-1 org source
0002E6AA <AmiBlitz3.ab2@19764>   ANDI.w #$7,D2
0002E6AC <AmiBlitz3.ab2@19765>   LSL.w #8,D2
0002E6AE <AmiBlitz3.ab2@19766>   LSL.w #1,D2
0002E6B0 <AmiBlitz3.ab2@19767>   OR.w D2,D1
0002E6B4 <AmiBlitz3.ab2@19768>    BSR.w writeword
0002E6B8 <AmiBlitz3.ab2@19769>   MOVE.l $12(A1),D1
0002E6BA <AmiBlitz3.ab2@19770>   ADD.l (A7)+,D1
0002E6BE <AmiBlitz3.ab2@19771>   MOVE.w $0(A1,D1.L),D1
0002E6C0 <AmiBlitz3.ab2@19772>   ADD.w (A7)+,D1
0002E6C4 <AmiBlitz3.ab2@19773> BRA.w writeword
0002E6C6 <AmiBlitz3.ab2@19776>   MOVE.w D2,-(A7)
0002E6C8 <AmiBlitz3.ab2@19777>   LSR.w #8,D2
0002E6CC <AmiBlitz3.ab2@19778>   CMP.w #$16,D2
0002E6D0 <AmiBlitz3.ab2@19779>    BNE.w toreg__isnta6
0002E6D8 <AmiBlitz3.ab2@19780>   MOVE.w #$FFFF,lasta6                                     ;-1 org source
0002E6DC <AmiBlitz3.ab2@19783>   MOVE.l $12(A1),D1                                        ;objectspace
0002E6E0 <AmiBlitz3.ab2@19784>   MOVE.w -$6(A1,D1.L),-(A7)
0002E6E4 <AmiBlitz3.ab2@19785>    BSR.w makeregop
0002E6E8 <AmiBlitz3.ab2@19786>    BSR.w writeword
0002E6EA <AmiBlitz3.ab2@19787>   MOVE.w (A7)+,D1
0002E6EC <AmiBlitz3.ab2@19788>   MOVE.w (A7)+,D2
0002E6EE <AmiBlitz3.ab2@19789>   TST.b D2
0002E6F2 <AmiBlitz3.ab2@19790>    BPL.w toreg__skippy1
0002E6F6 <AmiBlitz3.ab2@19795>    BSR.w writeword                                         ;move.l x(a5),dn
0002E6F8 <AmiBlitz3.ab2@19796>   MOVE.w D2,-(A7)                                          ;store reg used
0002E6FC <AmiBlitz3.ab2@19798>   ADDA.l $12(A1),A1
0002E6FE <AmiBlitz3.ab2@19799>   MOVE.b D2,D1
0002E702 <AmiBlitz3.ab2@19800>   ANDI.w #$7,D1
0002E708 <AmiBlitz3.ab2@19802>   TST.b debugmode
0002E70C <AmiBlitz3.ab2@19803>    BEQ.w toreg__norerr
0002E70E <AmiBlitz3.ab2@19805>   MOVE.w D1,-(A7)
0002E710 <AmiBlitz3.ab2@19806>   LSL.w #8,D1
0002E712 <AmiBlitz3.ab2@19807>   LSL.w #1,D1
0002E716 <AmiBlitz3.ab2@19808>   ORI.w #$B07C,D1                                          ;cmp #x,dn
0002E71A <AmiBlitz3.ab2@19809>    BSR.w writeword
0002E71E <AmiBlitz3.ab2@19810>   MOVE.w -$4(A1),D1
0002E722 <AmiBlitz3.ab2@19811>    BSR.w writeword
0002E726 <AmiBlitz3.ab2@19812>   MOVE.l maxchk(PC),D1                                  ;bcs
0002E72A <AmiBlitz3.ab2@19813>    BSR.w writelong
0002E72C <AmiBlitz3.ab2@19814>   MOVE.l A2,-(A7)
0002E730 <AmiBlitz3.ab2@19815>   MOVE.w #$C30A,D1
0002E734 <AmiBlitz3.ab2@19816>    BSR.w Atokejsr
0002E736 <AmiBlitz3.ab2@19817>   MOVEA.l (A7)+,A2
0002E738 <AmiBlitz3.ab2@19818>   MOVE.w (A7)+,D1
0002E73C <AmiBlitz3.ab2@19821>   MOVE.w -$2(A1),D2                                        ;shift amount
0002E740 <AmiBlitz3.ab2@19824>   CMP.w #$9,D2
0002E744 <AmiBlitz3.ab2@19825>    BCS.w toreg__simp
0002E748 <AmiBlitz3.ab2@19826>   MOVEM.w D1-D2,-(A7)
0002E74A <AmiBlitz3.ab2@19828>   MOVEQ.l #$00,D2                                          ;!!!!!
0002E74C <AmiBlitz3.ab2@19830>   LSL.w #8,D2
0002E74E <AmiBlitz3.ab2@19831>   LSL.w #1,D2
0002E750 <AmiBlitz3.ab2@19832>   OR.w D2,D1
0002E754 <AmiBlitz3.ab2@19833>   OR.w lsldn(PC),D1
0002E758 <AmiBlitz3.ab2@19834>    BSR.w writeword
0002E75C <AmiBlitz3.ab2@19835>   MOVEM.w (A7)+,D1-D2
0002E75E <AmiBlitz3.ab2@19836>   SUBQ.w #8,D2
0002E762 <AmiBlitz3.ab2@19837> BRA.w toreg__shloop
0002E764 <AmiBlitz3.ab2@19840>   MOVE.w D1,-(A7)
0002E768 <AmiBlitz3.ab2@19841>   OR.w #$48c0,d1
0002E76C <AmiBlitz3.ab2@19842>   BSR writeword
0002E76E <AmiBlitz3.ab2@19843>   MOVE.w (a7),d1
0002E770 <AmiBlitz3.ab2@19844>   TST.w D2
0002E774 <AmiBlitz3.ab2@19845>   BEQ.w toreg__simp2
0002E778 <AmiBlitz3.ab2@19847>   ANDI.w #$7,D2                                            ;?????
0002E77A <AmiBlitz3.ab2@19849>   LSL.w #8,D2
0002E77C <AmiBlitz3.ab2@19850>   LSL.w #1,D2
0002E77E <AmiBlitz3.ab2@19851>   OR.w D2,D1
0002E782 <AmiBlitz3.ab2@19852>   OR.w lsldn(PC),D1
0002E786 <AmiBlitz3.ab2@19853>    BSR.w writeword
0002E788 <AmiBlitz3.ab2@19859>   MOVE.w (A7)+,D1
0002E78C <AmiBlitz3.ab2@19860>   ANDI.w #$7,D1
0002E790 <AmiBlitz3.ab2@19861>   OR.w maxdo(PC),D1
0002E792 <AmiBlitz3.ab2@19862>   MOVE.w (A7)+,D2
0002E794 <AmiBlitz3.ab2@19863>   LSL.w #1,D2
0002E798 <AmiBlitz3.ab2@19864>   ANDI.w #$E00,D2
0002E79A <AmiBlitz3.ab2@19865>   OR.w D2,D1
0002E79E <AmiBlitz3.ab2@19866> BRA.w writeword
0002E7A2 <AmiBlitz3.ab2@19869>   CMP.b #$1,D2
0002E7A6 <AmiBlitz3.ab2@19870>    BEQ.w toreg__skippy
0002E7A8 <AmiBlitz3.ab2@19874>   ADDQ.w #4,D1
0002E7AE <AmiBlitz3.ab2@19876>   TST.b debugmode
0002E7B2 <AmiBlitz3.ab2@19877>    BEQ.w toreg__skippy
0002E7B6 <AmiBlitz3.ab2@19879>    BSR.w writeword
0002E7B8 <AmiBlitz3.ab2@19880>   SWAP D1
0002E7BC <AmiBlitz3.ab2@19881>   MOVE.w toreg__theretest(PC),D1
0002E7BE <AmiBlitz3.ab2@19882>   SWAP D1
0002E7C2 <AmiBlitz3.ab2@19883>    BSR.w writelong
0002E7C6 <AmiBlitz3.ab2@19884>   MOVE.l toreg__theretest+4(PC),D1
0002E7CA <AmiBlitz3.ab2@19885>    BSR.w writelong
0002E7CE <AmiBlitz3.ab2@19886>   MOVE.l toreg__theretest+8(PC),D1
0002E7D2 <AmiBlitz3.ab2@19887> BRA.w writelong
0002E7D6 <AmiBlitz3.ab2@19890> BRA.w writeword
0002E7DA <AmiBlitz3.ab2@19895>             Dc.b $4A,$AD,$00,$00                           ;TST.L  $0000(A5)
0002E7DE <AmiBlitz3.ab2@19896>             Dc.b $66,$00,$00,$06                           ;BNE.W  toreg__ttskip
0002E7E0 <AmiBlitz3.ab2@19897>             Dc.b $70,$01                                   ;MOVEQ  #$01,D0
0002E7E2 <AmiBlitz3.ab2@19898>             Dc.b $4E,$40                                   ;TRAP   #00
0002E7E4 <AmiBlitz3.ab2@19903>   LSR.w #8,D2
0002E7E8 <AmiBlitz3.ab2@19904>   CMP.b #$16,D2
0002E7EC <AmiBlitz3.ab2@19905>    BNE.w toreg__nota6
0002E7F0 <AmiBlitz3.ab2@19906>   MOVE.w $A(A1),D1
0002E7F6 <AmiBlitz3.ab2@19907>   CMP.w lasta6,D1
0002E7FA <AmiBlitz3.ab2@19908>    BEQ.w toreg__sk
0002E800 <AmiBlitz3.ab2@19909>   MOVE.w D1,lasta6
0002E804 <AmiBlitz3.ab2@19912>    BSR.w makeregop
0002E808 <AmiBlitz3.ab2@19913>   TST.w $1A(A1)
0002E80C <AmiBlitz3.ab2@19914>    BPL.w toreg__long
0002E810 <AmiBlitz3.ab2@19915>   CMP.w stackop(PC),D1
0002E814 <AmiBlitz3.ab2@19916>    BNE.w toreg__notst
0002E81A <AmiBlitz3.ab2@19917>   SUBQ.w #2,a2offset
0002E81E <AmiBlitz3.ab2@19920>    ORI.w #$1000,D1
0002E822 <AmiBlitz3.ab2@19923>    BSR.w writeword
0002E826 <AmiBlitz3.ab2@19924>   MOVE.w $A(A1),D1
0002E82A <AmiBlitz3.ab2@19925>    BSR.w writeword
0002E82C <AmiBlitz3.ab2@19928> RTS
0002E82E <AmiBlitz3.ab2@19932> lsldn:      Dc.b $E1,$88                 ;Dc.b $48 ;object long acsess    ;LSL.L   #8,D0
0002E832 <AmiBlitz3.ab2@19933> maxchk:     Dc.b $65,$00,$00,$08                                          ;BCS.W   maxchk__ok
0002E838 <AmiBlitz3.ab2@19934>             Dc.b $4E,$B9,$00,$00,$00,$00                                  ;JSR     $00000000
0002E83A <AmiBlitz3.ab2@19937> 
0002E83C <AmiBlitz3.ab2@19940>             Dc.b $00,$00
0002E840 <AmiBlitz3.ab2@19941> stackop:    Dc.b $2F,$2D,$00,$00                                          ;MOVE.L  $0000(A5),-(A7)
0002E844 <AmiBlitz3.ab2@19948>   CMP.b #$FF,D2
0002E848 <AmiBlitz3.ab2@19949>    BNE.w makeregop__notst
0002E84C <AmiBlitz3.ab2@19950>   MOVE.w stackop(PC),D1
0002E852 <AmiBlitz3.ab2@19951>   ADDQ.w #4,a2offset
0002E854 <AmiBlitz3.ab2@19952> RTS
0002E856 <AmiBlitz3.ab2@19955>   MOVE.l A3,-(A7)
0002E85C <AmiBlitz3.ab2@19956>   LEA regtransd,A3
0002E860 <AmiBlitz3.ab2@19957>   BTST #$4,D2
0002E864 <AmiBlitz3.ab2@19958>    BEQ.w makeregop__skip
0002E86A <AmiBlitz3.ab2@19959>   LEA regtransa,A3
0002E86E <AmiBlitz3.ab2@19962>   ANDI.w #$7,D2
0002E870 <AmiBlitz3.ab2@19963>   MOVE.w D2,D1
0002E872 <AmiBlitz3.ab2@19964>   LSL.w #8,D1
0002E874 <AmiBlitz3.ab2@19965>   LSL.w #1,D1
0002E876 <AmiBlitz3.ab2@19966>   OR.w (A3),D1
0002E878 <AmiBlitz3.ab2@19967>   MOVEA.l (A7)+,A3
0002E87A <AmiBlitz3.ab2@19968> RTS
0002E87E <AmiBlitz3.ab2@19974>   CMP.w #$3C,D0
0002E882 <AmiBlitz3.ab2@19975>    BCS.w ifchar__no
0002E886 <AmiBlitz3.ab2@19976>   CMP.w #$3E,D0
0002E88A <AmiBlitz3.ab2@19977>    BHI.w ifchar__no
0002E88E <AmiBlitz3.ab2@19978>   SUBI.w #$3C,D0
0002E890 <AmiBlitz3.ab2@19979>   CMP.w D0,D0
0002E892 <AmiBlitz3.ab2@19982> RTS
0002E89C <AmiBlitz3.ab2@19987>   MOVE.w oldqflag,instringon
0002E8A2 <AmiBlitz3.ab2@19988>   MOVEA.l lastsourcepos,A5
0002E8A8 <AmiBlitz3.ab2@19993>   MOVE.w regnum,-(A7)
0002E8AE <AmiBlitz3.ab2@19994>   CLR.w regnum
0002E8B4 <AmiBlitz3.ab2@19995>   MOVE.l destpointer,-(A7)
0002E8BA <AmiBlitz3.ab2@19996>   MOVE.l destbufferend,-(A7)
0002E8C0 <AmiBlitz3.ab2@19997>   MOVE.w dontwrite,-(A7)
0002E8C6 <AmiBlitz3.ab2@19998>   MOVE.w lasta6,-(A7)
0002E8CC <AmiBlitz3.ab2@19999>   MOVE.w cfetchmode,-(A7)
0002E8D0 <AmiBlitz3.ab2@20000>    BNE.w JL_0_BFB6
0002E8DA <AmiBlitz3.ab2@20001>   MOVE.l destbufferend,oldlibat
0002E8E0 <AmiBlitz3.ab2@20002>   MOVEA.l constpcat,A0
0002E8E6 <AmiBlitz3.ab2@20003>   MOVE.l A0,destpointer
0002E8EA <AmiBlitz3.ab2@20004> BRA.w JL_0_BFBC
0002E8F0 <AmiBlitz3.ab2@20007>   MOVEA.l destpointer,A0
0002E8F2 <AmiBlitz3.ab2@20010>   MOVE.l A0,-(A7)
0002E8FC <AmiBlitz3.ab2@20011>   MOVE.l constlibat,destbufferend
0002E902 <AmiBlitz3.ab2@20012>   CLR.w dontwrite
0002E90A <AmiBlitz3.ab2@20014>   MOVE.w #$FFFF,lasta6
0002E912 <AmiBlitz3.ab2@20015>   MOVE.w #$FFFF,cfetchmode
0002E916 <AmiBlitz3.ab2@20017>     BSR.w arreval
0002E918 <AmiBlitz3.ab2@20018>    MOVE.l (a7),a0
0002EA54 <AmiBlitz3.ab2@20020>  !newcalc
0002EA58 <AmiBlitz3.ab2@20021>    BEQ 'l10
0002EA5A <AmiBlitz3.ab2@20022>    MOVE.l d0,d3
0002EA5C <AmiBlitz3.ab2@20023>    MOVEA.l (A7)+,A0
0002EA60 <AmiBlitz3.ab2@20024> BRA bc1
0002EA64 <AmiBlitz3.ab2@20027>    MOVE.w #$2600,D1
0002EA6A <AmiBlitz3.ab2@20028>   OR.w regnum,D1
0002EA6E <AmiBlitz3.ab2@20029>    BSR.w writeword
0002EA72 <AmiBlitz3.ab2@20030>   MOVE.w #$4E75,D1
0002EA76 <AmiBlitz3.ab2@20031>    BSR.w writeword
0002EA7C <AmiBlitz3.ab2@20032>   MOVE.w dontwrite,D1
0002EA80 <AmiBlitz3.ab2@20033>    BNE.w conmemerr
0002EA82 <AmiBlitz3.ab2@20034>   MOVEA.l (A7)+,A0
0002EA84 <AmiBlitz3.ab2@20035>   NOP
0002EA8A <AmiBlitz3.ab2@20036>    JSR Aclearcache                                         ;simple expression
0002EA8C <AmiBlitz3.ab2@20039>    JSR (A0)                                                ;writeresult
0002EA92 <AmiBlitz3.ab2@20042>   MOVE.w (A7)+,cfetchmode
0002EA98 <AmiBlitz3.ab2@20043>   MOVE.w (A7)+,lasta6
0002EA9E <AmiBlitz3.ab2@20044>   MOVE.w (A7)+,dontwrite
0002EAA4 <AmiBlitz3.ab2@20045>   MOVE.l (A7)+,destbufferend
0002EAAA <AmiBlitz3.ab2@20046>   MOVE.l (A7)+,destpointer
0002EAB0 <AmiBlitz3.ab2@20047>   MOVE.w (A7)+,regnum
0002EAB6 <AmiBlitz3.ab2@20050> JMP reget
0002EABA <AmiBlitz3.ab2@20053> oldlibat:   Ds.l 1
0002EAC0 <AmiBlitz3.ab2@20057>   LEA incdir,A0
0002EAC4 <AmiBlitz3.ab2@20060>   CMP.w #$22,D0
0002EAC8 <AmiBlitz3.ab2@20061>    BEQ.w JL_0_C052
0002EACA <AmiBlitz3.ab2@20062>   MOVE.b D0,(A0)+
0002EACC <AmiBlitz3.ab2@20063>   TST.w D0
0002EAD0 <AmiBlitz3.ab2@20064>    BEQ.w JL_0_C05A
0002EAD4 <AmiBlitz3.ab2@20065>    BMI.w syntaxerr
0002EADA <AmiBlitz3.ab2@20068>   JSR get1bytemain                                         ;_long
0002EADE <AmiBlitz3.ab2@20069> BRA.w JL_0_C03E
0002EAE0 <AmiBlitz3.ab2@20072> RTS
0002EAE6 <AmiBlitz3.ab2@20076>   LEA ptr_parameterstore,A1                                ;getparameter
0002EAEC <AmiBlitz3.ab2@20077>   LEA incdir,A0
0002EAEE <AmiBlitz3.ab2@20078>   MOVEQ.l #-$01,D2
0002EAF0 <AmiBlitz3.ab2@20081>     ADDQ.w #1,D2
0002EAF2 <AmiBlitz3.ab2@20082>     MOVE.b (A0)+,(A1)+
0002EAF6 <AmiBlitz3.ab2@20083>   BNE.w JL_0_C06A
0002EAF8 <AmiBlitz3.ab2@20084>   SUBQ.w #1,A1
0002EB02 <AmiBlitz3.ab2@20086>   MOVE.w oldqflag,instringon
0002EB08 <AmiBlitz3.ab2@20087>   MOVEA.l lastsourcepos,A5
0002EB0E <AmiBlitz3.ab2@20091>   JSR get1bytemain
0002EB10 <AmiBlitz3.ab2@20092>   TST.w D0
0002EB14 <AmiBlitz3.ab2@20093>    BMI.w syntaxerr
0002EB18 <AmiBlitz3.ab2@20094>   CMP.b #$22,D0
0002EB1C <AmiBlitz3.ab2@20095>    BEQ.w JL_0_C078
0002EB1E <AmiBlitz3.ab2@20096>   MOVE.b D0,(A1)+
0002EB22 <AmiBlitz3.ab2@20097>    BEQ.w JL_0_C096
0002EB24 <AmiBlitz3.ab2@20098>   ADDQ.w #1,D2
0002EB28 <AmiBlitz3.ab2@20099> BRA.w JL_0_C078
0002EB2A <AmiBlitz3.ab2@20102>   TST.w D2
0002EB2E <AmiBlitz3.ab2@20103>    BEQ.w syntaxerr
0002EB30 <AmiBlitz3.ab2@20104> RTS
0002EB36 <AmiBlitz3.ab2@20108>   MOVEA.l constantbase,A2
0002EB3A <AmiBlitz3.ab2@20109>   MOVEA.l $E(A2),A5
0002EB40 <AmiBlitz3.ab2@20110>   MOVE.l a5,includesourceline
0002EB46 <AmiBlitz3.ab2@20111>   LEA inctab,a0
0002EB4C <AmiBlitz3.ab2@20112>   MOVE.w ininclude,d0
0002EB50 <AmiBlitz3.ab2@20113>   MOVE.l $0(a0,d0*4),d0
0002EB54 <AmiBlitz3.ab2@20114>   MOVEA.l $4(A2),A0
0002EB58 <AmiBlitz3.ab2@20116>   LEA $0(A0,D0.l),A0
0002EB5A <AmiBlitz3.ab2@20117>   MOVEA.l A5,A1
0002EB5C <AmiBlitz3.ab2@20120>     CMPA.l A0,A1
0002EB60 <AmiBlitz3.ab2@20121>      BCC.w JL_0_C0C6
0002EB62 <AmiBlitz3.ab2@20122>   TST.b (A1)+
0002EB66 <AmiBlitz3.ab2@20123>   BNE.w JL_0_C0B6
0002EB6A <AmiBlitz3.ab2@20124> BRA.w JL_0_C112
0002EB6E <AmiBlitz3.ab2@20127>   MOVEA.l $4(A2),A1
0002EB70 <AmiBlitz3.ab2@20130>   CMPA.l A0,A5
0002EB74 <AmiBlitz3.ab2@20131>   BCC.w JL_0_C0D6
0002EB76 <AmiBlitz3.ab2@20132>   MOVE.b (A5)+,(A1)+
0002EB7A <AmiBlitz3.ab2@20133> BRA.w JL_0_C0CA
0002EB7C <AmiBlitz3.ab2@20136>   MOVE.l A1,D0
0002EB80 <AmiBlitz3.ab2@20137>   SUB.l $4(A2),D0
0002EB86 <AmiBlitz3.ab2@20138>   LEA inctab,a0
0002EB88 <AmiBlitz3.ab2@20139>   MOVEQ #0,d1
0002EB8E <AmiBlitz3.ab2@20140>   MOVE.w ininclude,d1
0002EB92 <AmiBlitz3.ab2@20141>   MOVE.l d0,0(a0,d1*4)
0002EB98 <AmiBlitz3.ab2@20143>   MOVEA.l _dosbase,A6
0002EB9C <AmiBlitz3.ab2@20144>   MOVE.l $8(A2),D1
0002EB9E <AmiBlitz3.ab2@20145>   MOVE.l A1,D2
0002EBA4 <AmiBlitz3.ab2@20146>   MOVE.l D2,include_base
0002EBAA <AmiBlitz3.ab2@20148>   MOVE.l #$10000000,d3                                     ;load whole file
0002EBAC <AmiBlitz3.ab2@20149>   SUB.l D0,D3
0002EBB0 <AmiBlitz3.ab2@20150>    JSR _Read(A6)
0002EBB2 <AmiBlitz3.ab2@20151>   TST.l D0
0002EBB6 <AmiBlitz3.ab2@20152>    BMI.w error_reading_file
0002EBBA <AmiBlitz3.ab2@20153>    BEQ.w JL_0_C120
0002EBC0 <AmiBlitz3.ab2@20154>    MOVE.l D0,include_length
0002EC02 <AmiBlitz3.ab2@20155>    !ComData_GetL{comPtr_PreProcessor,include_preprocessor}
0002EC2C <AmiBlitz3.ab2@20156>    !basic
0002EC3C <AmiBlitz3.ab2@20157>    ilen.l  = Peek.l(?include_length)
0002EC4C <AmiBlitz3.ab2@20158>    ibase.l = Peek.l(?include_base)
0002EC5C <AmiBlitz3.ab2@20159>    ido.l   = Peek.l(?include_process)
0002EC6C <AmiBlitz3.ab2@20160>    *tn.preprocessor = Peek.l(?include_preprocessor)
0002EC76 <AmiBlitz3.ab2@20161>    If ido
0002EC88 <AmiBlitz3.ab2@20162>      ioffset.l = SkipXtraHeader{ibase,ilen}
0002ECAE <AmiBlitz3.ab2@20163>      nilen.l = preproc_Tokenize{*tn,ibase+ioffset,ibase,ilen-ioffset}
0002ECC0 <AmiBlitz3.ab2@20164>      If nilen>0
0002ECD0 <AmiBlitz3.ab2@20168>        Poke.l ?include_length,nilen
0002ECEE <AmiBlitz3.ab2@20171>    !asm
0002ECF8 <AmiBlitz3.ab2@20172>    MOVE.l #0,include_process
0002ECFE <AmiBlitz3.ab2@20173>    MOVE.l include_length,D0
0002ED04 <AmiBlitz3.ab2@20174>    LEA inctab,a0
0002ED06 <AmiBlitz3.ab2@20175>    MOVEQ #0,d1
0002ED0C <AmiBlitz3.ab2@20176>    MOVE.w ininclude,d1
0002ED10 <AmiBlitz3.ab2@20177>    ADD.l d0,0(a0,d1*4)
0002ED14 <AmiBlitz3.ab2@20179>   MOVEA.l $4(A2),A5
0002ED18 <AmiBlitz3.ab2@20181>    MOVE.l 0(a0,d1*4),d0
0002ED1C <AmiBlitz3.ab2@20182>   CLR.b $0(A5,D0.l)
0002ED1E <AmiBlitz3.ab2@20185>   MOVEA.l A5,A0
0002ED20 <AmiBlitz3.ab2@20188>     TST.b (A0)+
0002ED24 <AmiBlitz3.ab2@20189>   BNE.w JL_0_C114
0002ED28 <AmiBlitz3.ab2@20190>   MOVE.l A0,$E(A2)
0002ED2A <AmiBlitz3.ab2@20191> RTS
0002ED2E <AmiBlitz3.ab2@20194> include_length:        Dc.l 0                              ; for tokenizer!
0002ED32 <AmiBlitz3.ab2@20195> include_base:          Dc.l 0
0002ED36 <AmiBlitz3.ab2@20196> include_process:       Dc.l 0
0002ED3A <AmiBlitz3.ab2@20197> include_preprocessor:  Dc.l 0
0002ED3E <AmiBlitz3.ab2@20201>   MOVE.l $8(A2),D1
0002ED44 <AmiBlitz3.ab2@20203>   MOVEA.l _dosbase,A6
0002ED48 <AmiBlitz3.ab2@20204>   JSR _Close(a6)
0002ED4E <AmiBlitz3.ab2@20205>   MOVEA.l _execbase,A6
0002ED52 <AmiBlitz3.ab2@20206>   MOVEA.l $4(A2),A1
0002ED58 <AmiBlitz3.ab2@20207>   MOVE.l #$400*8,D0                                        ;exit include
0002ED5C <AmiBlitz3.ab2@20209>   JSR _FreeVec(a6)
0002ED62 <AmiBlitz3.ab2@20212>   MOVE.l (A2),constantbase
0002ED64 <AmiBlitz3.ab2@20213>   MOVEA.l A2,A1
0002ED66 <AmiBlitz3.ab2@20214>   MOVEQ.l #$00,D0
0002ED6A <AmiBlitz3.ab2@20215>   MOVE.b $12(A2),D0
0002ED70 <AmiBlitz3.ab2@20216>   MOVEA.l _execbase,A6
0002ED76 <AmiBlitz3.ab2@20217>   MOVE.l mempool2,a0
0002ED7A <AmiBlitz3.ab2@20218>   JSR _FreePooled(A6)
0002ED80 <AmiBlitz3.ab2@20219>   JSR zero_includename
0002ED86 <AmiBlitz3.ab2@20220>   SUBQ.w #1,ininclude
0002ED8A <AmiBlitz3.ab2@20221>   BNE.w AJL_0_C09E
0002ED90 <AmiBlitz3.ab2@20224>   LEA _include,a0
0002ED94 <AmiBlitz3.ab2@20225>   MOVEM.l a0-a6/d0-d7,-(a7)
0002ED9A <AmiBlitz3.ab2@20226>   LEA ptr_parameterstore,a1
0002ED9C <AmiBlitz3.ab2@20229>     MOVE.b (a0)+,(a1)+
0002EDA0 <AmiBlitz3.ab2@20230>   BNE 'l1b
0002EDA2 <AmiBlitz3.ab2@20231>   MOVEQ #9,d2
0002EDA8 <AmiBlitz3.ab2@20232>   JSR findlabel2
0002EDAC <AmiBlitz3.ab2@20233>   BNE 'd
0002EDB0 <AmiBlitz3.ab2@20234>   CLR.l 8(a2)
0002EDB4 <AmiBlitz3.ab2@20237>   MOVEM.l (a7)+,a0-a6/d0-d7
0002EDB6 <AmiBlitz3.ab2@20238> RTS
0002EDBC <AmiBlitz3.ab2@20242>   MOVE.l unusedfunc,d0
0002EDC0 <AmiBlitz3.ab2@20243>   BEQ 'noclear
0002EDC4 <AmiBlitz3.ab2@20244>   MOVEM.l d0-d2/a0-a1/a6,-(a7)
0002EDC6 <AmiBlitz3.ab2@20247>     MOVE.l d0,a1
0002EDCA <AmiBlitz3.ab2@20248>     MOVE.l 4(a1),d0
0002EDCC <AmiBlitz3.ab2@20249>     MOVE.l (a1),d2
0002EDD2 <AmiBlitz3.ab2@20250>     MOVE.l _execbase,a6
0002EDD6 <AmiBlitz3.ab2@20251>     JSR _FreeMem(a6)
0002EDD8 <AmiBlitz3.ab2@20252>     MOVE.l d2,d0
0002EDDC <AmiBlitz3.ab2@20253>   BNE 'f1
0002EDE2 <AmiBlitz3.ab2@20254>   CLR.l unusedfunc
0002EDE6 <AmiBlitz3.ab2@20255>   MOVEM.l (a7)+,a0-a1/a6/d0-d2
0002EDE8 <AmiBlitz3.ab2@20258> RTS
0002EDEE <AmiBlitz3.ab2@20262>   MOVEA.l xinclude_base,A2
0002EDF4 <AmiBlitz3.ab2@20263>   CLR.l xinclude_base
0002EDF8 <AmiBlitz3.ab2@20266>     CMPA.w #$0,A2
0002EDFC <AmiBlitz3.ab2@20267>      BEQ.w JL_0_C186
0002EDFE <AmiBlitz3.ab2@20268>     MOVEQ.l #$00,D0
0002EE02 <AmiBlitz3.ab2@20269>     MOVE.b 4+8(A2),D0
0002EE04 <AmiBlitz3.ab2@20270>     MOVEA.l A2,A1
0002EE06 <AmiBlitz3.ab2@20271>     MOVEA.l (A2),A2
0002EE0C <AmiBlitz3.ab2@20272>     MOVEA.l _execbase,A6
0002EE12 <AmiBlitz3.ab2@20273>     MOVE.l mempool2,a0
0002EE16 <AmiBlitz3.ab2@20274>     JSR _FreePooled(A6)
0002EE1A <AmiBlitz3.ab2@20275> BRA.w JL_0_C168
0002EE1C <AmiBlitz3.ab2@20278> RTS
0002EE22 <AmiBlitz3.ab2@20282>   MOVEA.l constantbase,A2
0002EE28 <AmiBlitz3.ab2@20283>   CLR.l constantbase
0002EE2C <AmiBlitz3.ab2@20286>     CMPA.w #$0,A2
0002EE30 <AmiBlitz3.ab2@20287>      BEQ.w JL_0_C1DC
0002EE34 <AmiBlitz3.ab2@20288>     MOVE.l $8(A2),D1
0002EE38 <AmiBlitz3.ab2@20289>      BEQ.w JL_0_C1AE
0002EE3E <AmiBlitz3.ab2@20290>     MOVEA.l _dosbase,A6
0002EE42 <AmiBlitz3.ab2@20291>      JSR _Close(A6)
0002EE46 <AmiBlitz3.ab2@20294>     MOVE.l $4(A2),D0
0002EE4A <AmiBlitz3.ab2@20295>      BEQ.w JL_0_C1C6
0002EE4C <AmiBlitz3.ab2@20296>     MOVEA.l D0,A1
0002EE52 <AmiBlitz3.ab2@20297>     MOVE.l #$400*8,D0
0002EE58 <AmiBlitz3.ab2@20298>     MOVEA.l _execbase,A6
0002EE5E <AmiBlitz3.ab2@20299>     MOVE.l mempool,a0
0002EE62 <AmiBlitz3.ab2@20300>     JSR _FreeVec(a6)
0002EE64 <AmiBlitz3.ab2@20303>     MOVEQ.l #$00,D0
0002EE68 <AmiBlitz3.ab2@20304>     MOVE.b $12(A2),D0
0002EE6A <AmiBlitz3.ab2@20305>     MOVEA.l A2,A1
0002EE6C <AmiBlitz3.ab2@20306>     MOVEA.l (A2),A2
0002EE72 <AmiBlitz3.ab2@20307>     MOVEA.l _execbase,A6
0002EE78 <AmiBlitz3.ab2@20308>     MOVE.l mempool2,a0
0002EE7C <AmiBlitz3.ab2@20309>     JSR _FreePooled(A6)
0002EE80 <AmiBlitz3.ab2@20310> BRA.w JL_0_C194
0002EE82 <AmiBlitz3.ab2@20313> RTS
0002EE84 <AmiBlitz3.ab2@20317>   SWAP D0
0002EE88 <AmiBlitz3.ab2@20318>    BSR.w JL_0_C1E6
0002EE8A <AmiBlitz3.ab2@20319>   SWAP D0
0002EE90 <AmiBlitz3.ab2@20322>   MOVEA.l data2,A4
0002EE96 <AmiBlitz3.ab2@20323>   CMPA.l allat,A4
0002EE9A <AmiBlitz3.ab2@20324>    BCC.w JL_0_C200
0002EE9C <AmiBlitz3.ab2@20325>   MOVE.w D0,(A4)+
0002EEA2 <AmiBlitz3.ab2@20326>   MOVE.l A4,data2
0002EEA4 <AmiBlitz3.ab2@20327> RTS
0002EEAC <AmiBlitz3.ab2@20330>   MOVE.w #$FFFF,dontwrite
0002EEB2 <AmiBlitz3.ab2@20331>   ADDQ.l #2,data2
0002EEB4 <AmiBlitz3.ab2@20332> RTS
0002EEBA <AmiBlitz3.ab2@20336>   MOVEA.l data2,A4
0002EEC0 <AmiBlitz3.ab2@20337>   CMPA.l allat,A4
0002EEC4 <AmiBlitz3.ab2@20338>    BCC.w JL_0_C22A
0002EEC6 <AmiBlitz3.ab2@20339>   MOVE.b D0,(A4)+
0002EECC <AmiBlitz3.ab2@20340>   MOVE.l A4,data2
0002EECE <AmiBlitz3.ab2@20341> RTS
0002EED6 <AmiBlitz3.ab2@20344>   MOVE.w #$FFFF,dontwrite
0002EEDC <AmiBlitz3.ab2@20345>   ADDQ.l #1,data2
0002EEDE <AmiBlitz3.ab2@20346> RTS
0002EEE2 <AmiBlitz3.ab2@20350>   CMP.w #$22,D0
0002EEE6 <AmiBlitz3.ab2@20351>    BNE.w syntaxerr
0002EEEC <AmiBlitz3.ab2@20355>   JSR get1bytemain
0002EEF0 <AmiBlitz3.ab2@20356>   CMP.b #$22,D0
0002EEF4 <AmiBlitz3.ab2@20357>    BEQ.w JL_0_C25A
0002EEF6 <AmiBlitz3.ab2@20358>   TST.w D0
0002EEFA <AmiBlitz3.ab2@20359>    BEQ.w syntaxerr
0002EEFC <AmiBlitz3.ab2@20360>   MOVE.b D0,(A0)+
0002EF00 <AmiBlitz3.ab2@20361> BRA.w JL_0_C242
0002EF02 <AmiBlitz3.ab2@20364>   CLR.b (A0)
0002EF04 <AmiBlitz3.ab2@20365> RTS
0002EF06 <AmiBlitz3.ab2@20368>   TST.l D3
0002EF08 <AmiBlitz3.ab2@20369> RTS
0002EF0E <AmiBlitz3.ab2@20372>   LEA ptr_parameterstore,A0
0002EF14 <AmiBlitz3.ab2@20373>   LEA namebuff2,A1
0002EF16 <AmiBlitz3.ab2@20376>     MOVE.b (A0)+,D0
0002EF1A <AmiBlitz3.ab2@20377>     BEQ.w JL_0_C27C
0002EF1C <AmiBlitz3.ab2@20378>   CMP.b (A1)+,D0
0002EF20 <AmiBlitz3.ab2@20379>   BEQ.w JL_0_C26E
0002EF22 <AmiBlitz3.ab2@20380> RTS
0002EF24 <AmiBlitz3.ab2@20383>   TST.b (A1)
0002EF28 <AmiBlitz3.ab2@20384>   BNE.w JL_0_C284
0002EF2A <AmiBlitz3.ab2@20385> RTS
0002EF2E <AmiBlitz3.ab2@20388>   CMP.w #$1,D0
0002EF30 <AmiBlitz3.ab2@20389> RTS
0002EF34 <AmiBlitz3.ab2@20393>   CMP.w #$2E,D0                                            ;dodeftype
0002EF38 <AmiBlitz3.ab2@20394>    BNE.w syntaxerr
0002EF3C <AmiBlitz3.ab2@20395>   BSR.w getparameter2
0002EF42 <AmiBlitz3.ab2@20396>   LEA newtypebase,A2
0002EF46 <AmiBlitz3.ab2@20397>   BSR.w findtype
0002EF4A <AmiBlitz3.ab2@20398>    BNE.w notypeerr
0002EF50 <AmiBlitz3.ab2@20399>   TST.b declare
0002EF54 <AmiBlitz3.ab2@20400>    BNE 'l1
0002EF5A <AmiBlitz3.ab2@20401>   TST.b declare2
0002EF5E <AmiBlitz3.ab2@20402>    BEQ 'l2
0002EF66 <AmiBlitz3.ab2@20405>   MOVE.b #2,nowdeclare
0002EF6C <AmiBlitz3.ab2@20409>   JSR reget
0002EF70 <AmiBlitz3.ab2@20410>    BNE.w JL_0_C2B4
0002EF76 <AmiBlitz3.ab2@20411>   MOVE.l A2,defaulttype
0002EF78 <AmiBlitz3.ab2@20412> RTS
0002EF7E <AmiBlitz3.ab2@20415>   MOVE.l defaulttype,-(A7)
0002EF84 <AmiBlitz3.ab2@20416>   MOVE.l A2,defaulttype
0002EF88 <AmiBlitz3.ab2@20419>   BSR.w getparameter
0002EF8C <AmiBlitz3.ab2@20420>    BSR.w JL_0_8E3C
0002EF90 <AmiBlitz3.ab2@20421>   CMP.w #$2C,D0
0002EF94 <AmiBlitz3.ab2@20422>    BNE.w JL_0_C2D8
0002EF9A <AmiBlitz3.ab2@20423>    JSR get1bytemain                                        ; was BSR.w
0002EF9E <AmiBlitz3.ab2@20424> BRA.w JL_0_C2C0
0002EFA4 <AmiBlitz3.ab2@20427>   MOVE.l (A7)+,defaulttype
0002EFA6 <AmiBlitz3.ab2@20428> RTS
0002EFAA <AmiBlitz3.ab2@20432>   LEA $4(A5),A2                                            ;fehler function
0002EFAC <AmiBlitz3.ab2@20435>   MOVE.l A2,D0
0002EFB0 <AmiBlitz3.ab2@20438>   BSR.w getparameter
0002EFB4 <AmiBlitz3.ab2@20439>   BSR.w JL_0_8E3C
0002EFB8 <AmiBlitz3.ab2@20440>   BSR.w calcvar
0002EFBC <AmiBlitz3.ab2@20441>   CMP.b #$7,D2
0002EFC0 <AmiBlitz3.ab2@20442>    BNE.w mismatcherr
0002EFC4 <AmiBlitz3.ab2@20443>   MOVE.w varmode(PC),-(A7)
0002EFC8 <AmiBlitz3.ab2@20444>   CMP.w #$3D,D0
0002EFCC <AmiBlitz3.ab2@20445>    BNE.w syntaxerr
0002EFD0 <AmiBlitz3.ab2@20446>   BTST #$F,D2
0002EFD4 <AmiBlitz3.ab2@20447>    BNE.w JL_0_C31C
0002EFD8 <AmiBlitz3.ab2@20448>   MOVE.w JL_0_C2E0(PC),D1
0002EFDC <AmiBlitz3.ab2@20449>   BSR.w pokewda5s
0002EFDE <AmiBlitz3.ab2@20450>   MOVE.w D3,D1
0002EFE2 <AmiBlitz3.ab2@20451>   BSR.w writeword
0002EFE6 <AmiBlitz3.ab2@20454>   MOVE.w L_0_C2E4(PC),D1
0002EFEA <AmiBlitz3.ab2@20455>   BSR.w writeword
0002EFF0 <AmiBlitz3.ab2@20456>   ADDQ.w #1,regnum
0002EFF2 <AmiBlitz3.ab2@20457>   MOVEQ.l #$03,D2
0002EFF6 <AmiBlitz3.ab2@20458>   BSR.w eval
0002EFFC <AmiBlitz3.ab2@20459>   MOVE.l #$D000,D1
0002F002 <AmiBlitz3.ab2@20460>   MOVE.l d1,lastinstruction
0002F004 <AmiBlitz3.ab2@20461>   TST.w (A7)+
0002F008 <AmiBlitz3.ab2@20462>    BEQ.w Atokejsr
0002F00A <AmiBlitz3.ab2@20463>   ADDQ.w #1,D1
0002F00E <AmiBlitz3.ab2@20464> BRA.w Atokejsr
0002F010 <AmiBlitz3.ab2@20468>   MOVE.w D0,D1
0002F014 <AmiBlitz3.ab2@20469>    BPL.w syntaxerr
0002F018 <AmiBlitz3.ab2@20470>   BCLR #$F,D1
0002F01E <AmiBlitz3.ab2@20471>    JSR searchinstr
0002F022 <AmiBlitz3.ab2@20472>   MOVE.l $12(A2),D0
0002F026 <AmiBlitz3.ab2@20473>   TST.w -$2(A2,D0.L)
0002F02A <AmiBlitz3.ab2@20474>    BEQ.w freeerr
0002F02C <AmiBlitz3.ab2@20475>   MOVEQ.l #$02,D2
0002F02E <AmiBlitz3.ab2@20476>   MOVE.l A2,-(A7)
0002F032 <AmiBlitz3.ab2@20477>    BSR.w eval
0002F034 <AmiBlitz3.ab2@20478>   MOVEA.l (A7)+,A2
0002F03A <AmiBlitz3.ab2@20479>   MOVE.l A2,mymaxlib
0002F03E <AmiBlitz3.ab2@20480>   ADDA.l $12(A2),A2
0002F044 <AmiBlitz3.ab2@20481>   TST.b debugmode
0002F048 <AmiBlitz3.ab2@20482>    BEQ.w JL_0_C3A8
0002F04E <AmiBlitz3.ab2@20483>   MOVE.w regnum,D1
0002F050 <AmiBlitz3.ab2@20484>   LSL.w #8,D1
0002F052 <AmiBlitz3.ab2@20485>   LSL.w #1,D1
0002F056 <AmiBlitz3.ab2@20486>   ORI.w #$B07C,D1
0002F05A <AmiBlitz3.ab2@20487>    BSR.w writeword
0002F05E <AmiBlitz3.ab2@20488>   MOVE.w -$4(A2),D1
0002F062 <AmiBlitz3.ab2@20489>    BSR.w writeword
0002F068 <AmiBlitz3.ab2@20490>   MOVE.l maxchk,D1
0002F06C <AmiBlitz3.ab2@20491>    BSR.w writelong
0002F06E <AmiBlitz3.ab2@20492>   MOVE.l A2,-(A7)
0002F072 <AmiBlitz3.ab2@20493>   MOVE.w #$C30A,D1
0002F076 <AmiBlitz3.ab2@20494>    BSR.w Atokejsr
0002F078 <AmiBlitz3.ab2@20495>   MOVEA.l (A7)+,A2
0002F07C <AmiBlitz3.ab2@20498>   MOVE.w -$2(A2),D2
0002F082 <AmiBlitz3.ab2@20501>   MOVE.w regnum,D1
0002F088 <AmiBlitz3.ab2@20502>   OR.w lslimm,D1
0002F08C <AmiBlitz3.ab2@20503>   CMP.w #$8,D2
0002F090 <AmiBlitz3.ab2@20504>    BCS.w JL_0_C3CE
0002F094 <AmiBlitz3.ab2@20505>    BSR.w writeword
0002F096 <AmiBlitz3.ab2@20506>   SUBQ.w #8,D2
0002F09A <AmiBlitz3.ab2@20507>    BNE.w JL_0_C3AC
0002F09E <AmiBlitz3.ab2@20508> BRA.w JL_0_C3DA
0002F0A0 <AmiBlitz3.ab2@20511>   MOVE.w D2,D0
0002F0A2 <AmiBlitz3.ab2@20512>   LSL.w #8,D0
0002F0A4 <AmiBlitz3.ab2@20513>   LSL.w #1,D0
0002F0A6 <AmiBlitz3.ab2@20514>   OR.w D0,D1
0002F0AA <AmiBlitz3.ab2@20515>   BSR.w writeword
0002F0AC <AmiBlitz3.ab2@20518> RTS
0002F0B0 <AmiBlitz3.ab2@20523>   Dc.b $26,$6D,$00,$00                                     ;MOVEA.L $0000(A5),A3
0002F0B2 <AmiBlitz3.ab2@20524>   Dc.b $D6,$C0                                             ;ADDA.W  D0,A3
0002F0B6 <AmiBlitz3.ab2@20528> mymaxlib:  Ds.l 1
0002F0BA <AmiBlitz3.ab2@20532>   BSR.w JL_0_C340
0002F0BE <AmiBlitz3.ab2@20533>   LEA free(PC),A0
0002F0C2 <AmiBlitz3.ab2@20534>   LEA freef(PC),A1
0002F0C8 <AmiBlitz3.ab2@20535>   MOVE.w -$6(A2),$2(A0)
0002F0CC <AmiBlitz3.ab2@20536>   BSR.w pokecode
0002F0D0 <AmiBlitz3.ab2@20537>   MOVE.l -$A(A2),D1
0002F0D4 <AmiBlitz3.ab2@20540>   BEQ.w nosuperr
0002F0D8 <AmiBlitz3.ab2@20541>   MOVEA.l mymaxlib(PC),A2
0002F0DC <AmiBlitz3.ab2@20542> BRA.w Amakelibsub
0002F0E0 <AmiBlitz3.ab2@20547>   BSR.w JL_0_C340
0002F0E6 <AmiBlitz3.ab2@20548>   LEA use,A0
0002F0EC <AmiBlitz3.ab2@20549>   LEA usef,A1
0002F0F2 <AmiBlitz3.ab2@20550>   MOVE.w -$6(A2),$2(A0)
0002F0F8 <AmiBlitz3.ab2@20551>   MOVE.w -$6(A2),-$2(A1)
0002F0FC <AmiBlitz3.ab2@20552>   ADDQ.w #4,-$2(A1)
0002F100 <AmiBlitz3.ab2@20553>   BSR.w pokecode
0002F104 <AmiBlitz3.ab2@20554>   MOVE.l -$E(A2),D1
0002F108 <AmiBlitz3.ab2@20555> BRA.w maxjsr
0002F10E <AmiBlitz3.ab2@20559>   JSR get1bytemain
0002F114 <AmiBlitz3.ab2@20563>   MOVE.l firstiff,D0
0002F118 <AmiBlitz3.ab2@20564>    BEQ.w noiferr
0002F11A <AmiBlitz3.ab2@20565>   MOVEA.l D0,A0
0002F120 <AmiBlitz3.ab2@20566>   CMPI.b #$1,$D(A0)
0002F124 <AmiBlitz3.ab2@20567>    BEQ.w illelseerr
0002F128 <AmiBlitz3.ab2@20568>   MOVE.w #$6000,D1
0002F12E <AmiBlitz3.ab2@20570>     TST.b fast
0002F132 <AmiBlitz3.ab2@20571>     BEQ 'l1
0002F138 <AmiBlitz3.ab2@20572>     OR.l #$ff,d1
0002F13C <AmiBlitz3.ab2@20573>     BSR writeword
0002F13E <AmiBlitz3.ab2@20577>   SWAP D1
0002F142 <AmiBlitz3.ab2@20578>   BSR.w writelong
0002F144 <AmiBlitz3.ab2@20579>   MOVEQ.l #$00,D1
0002F148 <AmiBlitz3.ab2@20580>   BSR.w AJL_0_D7B8
0002F150 <AmiBlitz3.ab2@20581>   MOVE.l destpointer,$8(A0)
0002F154 <AmiBlitz3.ab2@20582> BRA.w do_then
0002F15A <AmiBlitz3.ab2@20586>   LEA ptr_parameterstore,A0
0002F15C <AmiBlitz3.ab2@20587>   MOVE.l A0,-(A7)
0002F160 <AmiBlitz3.ab2@20588>   BSR.w JL_0_C23A
0002F164 <AmiBlitz3.ab2@20589> BRA.w handle_compileerror
0002F168 <AmiBlitz3.ab2@20593>   BSR.w JL_0_BF6A
0002F16A <AmiBlitz3.ab2@20594>   MOVEQ.l #$05,D1
0002F174 <AmiBlitz3.ab2@20596>   MOVE.w oldqflag,instringon
0002F17A <AmiBlitz3.ab2@20597>   MOVEA.l lastsourcepos,A5
0002F180 <AmiBlitz3.ab2@20598>   LEA AJL_0_C25E,A0
0002F184 <AmiBlitz3.ab2@20599> BRA.w JL_0_C4B4
0002F18A <AmiBlitz3.ab2@20603>   LEA ptr_parameterstore,A0
0002F18E <AmiBlitz3.ab2@20604>   BSR.w JL_0_C23A
0002F194 <AmiBlitz3.ab2@20605>   JSR get1bytemain
0002F198 <AmiBlitz3.ab2@20606>   BSR.w JL_0_CCA8
0002F19E <AmiBlitz3.ab2@20607>   LEA namebuff2,A0
0002F1A2 <AmiBlitz3.ab2@20608>   BSR.w JL_0_C23A
0002F1A8 <AmiBlitz3.ab2@20609>   LEA AJL_0_C262,A0
0002F1AA <AmiBlitz3.ab2@20612>   LSL.w #2,D1
0002F1B0 <AmiBlitz3.ab2@20613>   LEA CIF_branches,A1
0002F1B4 <AmiBlitz3.ab2@20614>   MOVE.l $0(A1,D1.W),-(A7)
0002F1B6 <AmiBlitz3.ab2@20615>   MOVEQ.l #-$01,D1
0002F1B8 <AmiBlitz3.ab2@20618>   JSR (A0)
0002F1BA <AmiBlitz3.ab2@20619>   MOVEA.l (A7)+,A1
0002F1BC <AmiBlitz3.ab2@20622> JMP (A1)
0002F1C0 <AmiBlitz3.ab2@20626>   BEQ.w JL_0_C4F6
0002F1C4 <AmiBlitz3.ab2@20627> BRA.w JL_0_C4F4
0002F1C8 <AmiBlitz3.ab2@20631>   BNE.w JL_0_C4F6
0002F1CC <AmiBlitz3.ab2@20632> BRA.w JL_0_C4F4
0002F1D0 <AmiBlitz3.ab2@20636>   BLT.w JL_0_C4F6
0002F1D4 <AmiBlitz3.ab2@20637> BRA.w JL_0_C4F4
0002F1D8 <AmiBlitz3.ab2@20641>   BLE.w JL_0_C4F6
0002F1DC <AmiBlitz3.ab2@20642> BRA.w JL_0_C4F4
0002F1E0 <AmiBlitz3.ab2@20646>   BGT.w JL_0_C4F6
0002F1E4 <AmiBlitz3.ab2@20647> BRA.w JL_0_C4F4
0002F1E8 <AmiBlitz3.ab2@20651>   BGE.w JL_0_C4F6
0002F1EA <AmiBlitz3.ab2@20654>   MOVEQ.l #$00,D1
0002F1F0 <AmiBlitz3.ab2@20657>   MOVEA.l concomsp,A0
0002F1F6 <AmiBlitz3.ab2@20658>   MOVE.w skipcode,(A0)+
0002F1FC <AmiBlitz3.ab2@20659>   MOVE.l A0,concomsp
0002F202 <AmiBlitz3.ab2@20660>   MOVE.w D1,skipcode
0002F208 <AmiBlitz3.ab2@20661>   JSR get1bytemain
0002F20C <AmiBlitz3.ab2@20662>    BNE.w syntaxerr
0002F212 <AmiBlitz3.ab2@20663> JMP bakup
0002F21A <AmiBlitz3.ab2@20667> rescode:   Dc.b $2B,$7c,$00,$00,$00,$00 :   Ds.w 1         ;MOVE.L  #$00000000,$0000(A5)
0002F21E <AmiBlitz3.ab2@20668> rescode2:  Dc.b $2B,$40                 :   Ds.w 1         ;MOVE.L  D0,$0000(A5)
0002F222 <AmiBlitz3.ab2@20675>   MOVE.w #$FC17,D1
0002F228 <AmiBlitz3.ab2@20676>   JSR uselib
0002F22E <AmiBlitz3.ab2@20678>   JSR reget
0002F232 <AmiBlitz3.ab2@20679>    BEQ.w do_Restore__resbeg
0002F236 <AmiBlitz3.ab2@20680>   BSR.w JL_0_AE22                                          ;get label name!
0002F23A <AmiBlitz3.ab2@20681>   MOVE.w rescode(PC),D1
0002F23E <AmiBlitz3.ab2@20682>   BSR.w writeword
0002F244 <AmiBlitz3.ab2@20683>   JSR addoff                                               ;add offset
0002F248 <AmiBlitz3.ab2@20684>   MOVE.l $C(A2),D1
0002F24C <AmiBlitz3.ab2@20685>   BSR.w writelong
0002F250 <AmiBlitz3.ab2@20686>   MOVE.w rescode+6(PC),D1
0002F254 <AmiBlitz3.ab2@20687>   BSR.w writeword
0002F258 <AmiBlitz3.ab2@20688>   MOVE.l $4(A2),D1                                         ;is it outstanding?
0002F25C <AmiBlitz3.ab2@20689>   BEQ.w do_Restore__no
0002F25E <AmiBlitz3.ab2@20691>   MOVEA.l D1,A1
0002F262 <AmiBlitz3.ab2@20692>   ADDQ.l #1,$4(A1)                                         ;make odd - flag for data reference.
0002F264 <AmiBlitz3.ab2@20693> RTS
0002F266 <AmiBlitz3.ab2@20698> RTS
0002F26A <AmiBlitz3.ab2@20701>   MOVE.w #$CD00,D1
0002F270 <AmiBlitz3.ab2@20702>   JSR Atokejsr
0002F274 <AmiBlitz3.ab2@20703>   MOVE.l rescode2(PC),D1
0002F27A <AmiBlitz3.ab2@20704> JMP writelong
0002F27E <AmiBlitz3.ab2@20708>   MOVE.w #$FC17,D1
0002F284 <AmiBlitz3.ab2@20709>   JSR uselib
0002F28A <AmiBlitz3.ab2@20712>   MOVE.l dataget,D1
0002F28E <AmiBlitz3.ab2@20713>   BSR.w writelong
0002F292 <AmiBlitz3.ab2@20714>   BSR.w getparameter
0002F296 <AmiBlitz3.ab2@20715>   BSR.w JL_0_8E3C
0002F29A <AmiBlitz3.ab2@20716>   BSR.w calcvar
0002F29E <AmiBlitz3.ab2@20717>   BTST #$E,D2
0002F2A2 <AmiBlitz3.ab2@20718>    BEQ.w JL_0_C5A6
0002F2A6 <AmiBlitz3.ab2@20719>   MOVE.b #$6,D2
0002F2A8 <AmiBlitz3.ab2@20722>   TST.b D2
0002F2AC <AmiBlitz3.ab2@20723>    BEQ.w noleterr
0002F2B2 <AmiBlitz3.ab2@20724>   TST.b debugmode
0002F2B6 <AmiBlitz3.ab2@20725>    BEQ.w JL_0_C5D0
0002F2BA <AmiBlitz3.ab2@20726>   MOVE.w #$7000,D1
0002F2BC <AmiBlitz3.ab2@20727>   MOVE.b D2,D1
0002F2C0 <AmiBlitz3.ab2@20728>   ANDI.b #$F,D1
0002F2C4 <AmiBlitz3.ab2@20729>   BSR.w writeword
0002F2C8 <AmiBlitz3.ab2@20730>   MOVE.w #$C310,D1
0002F2CA <AmiBlitz3.ab2@20731>   MOVE.w D2,-(A7)
0002F2CE <AmiBlitz3.ab2@20732>   BSR.w Atokejsr
0002F2D0 <AmiBlitz3.ab2@20733>   MOVE.w (A7)+,D2
0002F2D4 <AmiBlitz3.ab2@20736>   CMP.b #$7,D2
0002F2D8 <AmiBlitz3.ab2@20737>    BEQ.w JL_0_C684
0002F2DC <AmiBlitz3.ab2@20738>   CMP.b #$1,D2
0002F2E0 <AmiBlitz3.ab2@20739>    BNE.w JL_0_C62A
0002F2E6 <AmiBlitz3.ab2@20740>   LEA dataletb2,A0
0002F2EC <AmiBlitz3.ab2@20741>   LEA dataletb2f,A1
0002F2F0 <AmiBlitz3.ab2@20742>   BTST #$F,D2
0002F2F4 <AmiBlitz3.ab2@20743>    BEQ.w JL_0_C5FC
0002F2F8 <AmiBlitz3.ab2@20744>   BSR.w pokecode
0002F2FC <AmiBlitz3.ab2@20745> BRA.w JL_0_C668
0002F302 <AmiBlitz3.ab2@20748>   LEA dataletb,A0
0002F308 <AmiBlitz3.ab2@20749>   LEA dataletbf,A1
0002F30E <AmiBlitz3.ab2@20750>   TST.w varmode
0002F312 <AmiBlitz3.ab2@20751>    BEQ.w JL_0_C61E
0002F318 <AmiBlitz3.ab2@20752>   LEA dataletbl,A0
0002F31E <AmiBlitz3.ab2@20753>   LEA dataletblf,A1
0002F322 <AmiBlitz3.ab2@20756>   MOVE.w D3,$4(A0)
0002F326 <AmiBlitz3.ab2@20757>   BSR.w pokecode
0002F32A <AmiBlitz3.ab2@20758> BRA.w JL_0_C668
0002F330 <AmiBlitz3.ab2@20761>   LEA dataletw,A0
0002F334 <AmiBlitz3.ab2@20762>   CMP.b #$3,D2
0002F338 <AmiBlitz3.ab2@20763>    BCS.w JL_0_C63E
0002F33E <AmiBlitz3.ab2@20764>   LEA dataletl,A0
0002F342 <AmiBlitz3.ab2@20767>   BTST #$F,D2
0002F346 <AmiBlitz3.ab2@20768>    BEQ.w JL_0_C652
0002F34A <AmiBlitz3.ab2@20769>   MOVE.w $4(A0),D1
0002F34E <AmiBlitz3.ab2@20770>    BSR.w writeword
0002F352 <AmiBlitz3.ab2@20771> BRA.w JL_0_C668
0002F358 <AmiBlitz3.ab2@20774>   TST.w varmode
0002F35C <AmiBlitz3.ab2@20775>    BEQ.w JL_0_C65E
0002F35E <AmiBlitz3.ab2@20776>   ADDQ.w #6,A0
0002F362 <AmiBlitz3.ab2@20779>   MOVE.w D3,$2(A0)
0002F364 <AmiBlitz3.ab2@20780>   MOVE.l (A0),D1
0002F368 <AmiBlitz3.ab2@20781>   BSR.w writelong
0002F36E <AmiBlitz3.ab2@20784>   MOVE.l dataput,D1
0002F372 <AmiBlitz3.ab2@20785>    BSR.w writelong
0002F376 <AmiBlitz3.ab2@20786>   CMP.w #$2C,D0
0002F37A <AmiBlitz3.ab2@20787>    BEQ.w JL_0_C67C
0002F37C <AmiBlitz3.ab2@20788> RTS
0002F382 <AmiBlitz3.ab2@20791>   JSR get1bytemain
0002F386 <AmiBlitz3.ab2@20792> BRA.w JL_0_C584
0002F38C <AmiBlitz3.ab2@20796>   MOVE.w stlenget,D1
0002F390 <AmiBlitz3.ab2@20797>    BSR.w writeword
0002F394 <AmiBlitz3.ab2@20798>   BTST #$F,D2
0002F398 <AmiBlitz3.ab2@20799>    BNE.w JL_0_C6C0
0002F39E <AmiBlitz3.ab2@20800>   TST.w varmode
0002F3A2 <AmiBlitz3.ab2@20801>    BEQ.w JL_0_C6B0
0002F3A8 <AmiBlitz3.ab2@20802>   MOVE.w D3,leaampl+2
0002F3AE <AmiBlitz3.ab2@20803>   MOVE.l leaampl,D1
0002F3B2 <AmiBlitz3.ab2@20804> BRA.w JL_0_C6BC
0002F3B8 <AmiBlitz3.ab2@20807>   MOVE.w D3,leaamp+2
0002F3BE <AmiBlitz3.ab2@20808>   MOVE.l leaamp,D1
0002F3C2 <AmiBlitz3.ab2@20811>   BSR.w writelong
0002F3C6 <AmiBlitz3.ab2@20814>   MOVE.w #$C701,D1
0002F3CC <AmiBlitz3.ab2@20815>   MOVE.w varmode,D2
0002F3D0 <AmiBlitz3.ab2@20816>    BEQ.w JL_0_C6D0
0002F3D2 <AmiBlitz3.ab2@20817>   SUBQ.w #1,D1
0002F3D6 <AmiBlitz3.ab2@20820>   BSR.w Atokejsr
0002F3DE <AmiBlitz3.ab2@20821>   MOVE.w #$FFFF,lasta6
0002F3E4 <AmiBlitz3.ab2@20822>   LEA stalign,A0
0002F3EA <AmiBlitz3.ab2@20823>   LEA stalignf,A1
0002F3EE <AmiBlitz3.ab2@20824>   BSR.w pokecode
0002F3F2 <AmiBlitz3.ab2@20825> BRA.w JL_0_C668
0002F3F6 <AmiBlitz3.ab2@20829>   CMP.w #$2E,D0                                            ;definecode 'lb 'lw 'll
0002F3FA <AmiBlitz3.ab2@20830>    BNE.w JL_0_C720
0002F400 <AmiBlitz3.ab2@20831>   JSR get1bytemain
0002F404 <AmiBlitz3.ab2@20832>   CMP.w #$77,D0
0002F408 <AmiBlitz3.ab2@20833>    BEQ.w JL_0_C71C
0002F40C <AmiBlitz3.ab2@20834>   CMP.w #$62,D0
0002F410 <AmiBlitz3.ab2@20835>    BEQ.w JL_0_C718
0002F414 <AmiBlitz3.ab2@20836>   CMP.w #"s",d0
0002F418 <AmiBlitz3.ab2@20837>   BEQ single3
0002F41C <AmiBlitz3.ab2@20838>   CMP.w #"d",d0
0002F420 <AmiBlitz3.ab2@20839>   BEQ double3
0002F424 <AmiBlitz3.ab2@20840>   CMP.w #$6C,D0
0002F428 <AmiBlitz3.ab2@20841>    BNE.w syntaxerr
0002F42A <AmiBlitz3.ab2@20842>   MOVEQ.l #$02,D1
0002F42C <AmiBlitz3.ab2@20843> RTS
0002F434 <AmiBlitz3.ab2@20847>   MOVE.b #1,iee
0002F436 <AmiBlitz3.ab2@20848>   MOVEQ.l #$3,d1
0002F438 <AmiBlitz3.ab2@20849> RTS
0002F440 <AmiBlitz3.ab2@20853>   MOVE.b #1,iee
0002F442 <AmiBlitz3.ab2@20854>   MOVEQ.l #$4,d1
0002F444 <AmiBlitz3.ab2@20855> RTS
0002F446 <AmiBlitz3.ab2@20859>   MOVEQ.l #$00,D1
0002F448 <AmiBlitz3.ab2@20860> RTS
0002F44A <AmiBlitz3.ab2@20864>   MOVEQ.l #$01,D1
0002F44C <AmiBlitz3.ab2@20865> RTS
0002F44E <AmiBlitz3.ab2@20869>   MOVEQ.l #$01,D1
0002F454 <AmiBlitz3.ab2@20870> JMP bakup
0002F458 <AmiBlitz3.ab2@20874>   BSR.w JL_0_C6F0
0002F45A <AmiBlitz3.ab2@20876>   MOVE.w D1,-(A7)
0002F45E <AmiBlitz3.ab2@20877>    BSR.w AJL_0_BF6E
0002F462 <AmiBlitz3.ab2@20878>   CMP.w #$2C,D0
0002F466 <AmiBlitz3.ab2@20879>    BNE.w syntaxerr
0002F468 <AmiBlitz3.ab2@20880>   MOVE.l D3,-(A7)
0002F46C <AmiBlitz3.ab2@20881>    BSR.w AJL_0_BF6E
0002F46E <AmiBlitz3.ab2@20882>   MOVE.l D3,D1
0002F470 <AmiBlitz3.ab2@20883>   MOVE.l (A7)+,D3
0002F472 <AmiBlitz3.ab2@20884>   MOVE.w (A7)+,D2
0002F476 <AmiBlitz3.ab2@20885>    BEQ.w JL_0_C774
0002F47A <AmiBlitz3.ab2@20889>   CMP.w #$1,D2
0002F47E <AmiBlitz3.ab2@20890>    BEQ.w JL_0_C768
0002F480 <AmiBlitz3.ab2@20893>   SWAP D1
0002F484 <AmiBlitz3.ab2@20894>    BSR.w writeword
0002F486 <AmiBlitz3.ab2@20895>   SWAP D1
0002F48A <AmiBlitz3.ab2@20896>    BSR.w writeword
0002F48C <AmiBlitz3.ab2@20897>   SUBQ.l #1,D3
0002F490 <AmiBlitz3.ab2@20898>    BNE.w JL_0_C754
0002F492 <AmiBlitz3.ab2@20899> RTS
0002F496 <AmiBlitz3.ab2@20902>    BSR.w writeword
0002F498 <AmiBlitz3.ab2@20903>   SUBQ.l #1,D3
0002F49C <AmiBlitz3.ab2@20904>    BNE.w JL_0_C768
0002F49E <AmiBlitz3.ab2@20905> RTS
0002F4A2 <AmiBlitz3.ab2@20908>    BSR.w writebyte
0002F4A4 <AmiBlitz3.ab2@20909>   SUBQ.l #1,D3
0002F4A8 <AmiBlitz3.ab2@20910>    BNE.w JL_0_C774
0002F4AA <AmiBlitz3.ab2@20911> RTS
0002F4AE <AmiBlitz3.ab2@20915>   BSR.w JL_0_C6F0                                          ;definestorage
0002F4B0 <AmiBlitz3.ab2@20916>   MOVE.w D1,-(A7)
0002F4B4 <AmiBlitz3.ab2@20917>   BSR.w AJL_0_BF6E
0002F4B6 <AmiBlitz3.ab2@20918>   MOVE.w (A7)+,D1
0002F4B8 <AmiBlitz3.ab2@20919>   LSL.l D1,D3
0002F4BA <AmiBlitz3.ab2@20920>   MOVE.l d3,d0
0002F4BE <AmiBlitz3.ab2@20921>   BEQ 'll5
0002F4C0 <AmiBlitz3.ab2@20922>   MOVEQ #0,d1
0002F4C6 <AmiBlitz3.ab2@20925>     JSR writebyte
0002F4C8 <AmiBlitz3.ab2@20926>     SUBQ.l #1,d3
0002F4CC <AmiBlitz3.ab2@20927>   BNE.s 'll10
0002F4CE <AmiBlitz3.ab2@20930> RTS
0002F4D0 <AmiBlitz3.ab2@20934>   MOVE.w D0,-(A7)
0002F4D6 <AmiBlitz3.ab2@20935>   LEA dummyasm,A0
0002F4DC <AmiBlitz3.ab2@20936>   MOVEA.l destpointer,A1
0002F4E6 <AmiBlitz3.ab2@20937>   MOVE.w asmlen2,asmlen
0002F4EC <AmiBlitz3.ab2@20938>   JSR insasm
0002F4EE <AmiBlitz3.ab2@20939>   MOVE.w (A7)+,D0
0002F4F0 <AmiBlitz3.ab2@20940> RTS
0002F4F4 <AmiBlitz3.ab2@20944>   BSR.w JL_0_C6F0
0002F4FE <AmiBlitz3.ab2@20946>   MOVE.l #ptr_parameterstore,asmbuff
0002F500 <AmiBlitz3.ab2@20947>   TST.w D1
0002F504 <AmiBlitz3.ab2@20948>    BEQ.w JL_0_C7EE
0002F508 <AmiBlitz3.ab2@20949>   CMP.w #$1,D1
0002F50C <AmiBlitz3.ab2@20950>    BEQ.w JL_0_C844
0002F510 <AmiBlitz3.ab2@20951>   CMP.w #$2,d1
0002F514 <AmiBlitz3.ab2@20952>    BEQ long
0002F518 <AmiBlitz3.ab2@20953>   CMP.w #$3,d1
0002F51C <AmiBlitz3.ab2@20954>    BEQ single
0002F51E <AmiBlitz3.ab2@20955>    MOVEQ.l #$0d,D3
0002F524 <AmiBlitz3.ab2@20961>    JSR asmconst
0002F528 <AmiBlitz3.ab2@20962>    BSR.w JL_0_C796
0002F52C <AmiBlitz3.ab2@20963>    BSR.w writelong
0002F530 <AmiBlitz3.ab2@20964>    BSR   writelong
0002F534 <AmiBlitz3.ab2@20965>   CMP.w #$2C,D0
0002F538 <AmiBlitz3.ab2@20966>    BEQ.w JL_0_C7D8b
0002F53A <AmiBlitz3.ab2@20967> RTS
0002F53C <AmiBlitz3.ab2@20971>   MOVEQ.l #$0B,D3
0002F544 <AmiBlitz3.ab2@20975>   MOVE.b #1,_dcb
0002F54A <AmiBlitz3.ab2@20978>   JSR asmconst
0002F550 <AmiBlitz3.ab2@20979>   CLR.b _dcb
0002F554 <AmiBlitz3.ab2@20980>   BSR.w JL_0_C796
0002F558 <AmiBlitz3.ab2@20981>   BSR writebyte
0002F55C <AmiBlitz3.ab2@20982>   BSR writebyte
0002F560 <AmiBlitz3.ab2@20983>   BSR writebyte                                            ;long
0002F564 <AmiBlitz3.ab2@20984>   BSR writebyte
0002F568 <AmiBlitz3.ab2@20985>   CMP.w #$2C,D0
0002F56C <AmiBlitz3.ab2@20986>    BEQ.w JL_0_C7D8
0002F56E <AmiBlitz3.ab2@20987> RTS
0002F570 <AmiBlitz3.ab2@20991>   MOVEQ.l #$0c,D3
0002F578 <AmiBlitz3.ab2@20995>   MOVE.b #1,_dcb
0002F57E <AmiBlitz3.ab2@20998>   JSR asmconst
0002F584 <AmiBlitz3.ab2@20999>   CLR.b _dcb
0002F588 <AmiBlitz3.ab2@21000>   BSR.w JL_0_C796
0002F58C <AmiBlitz3.ab2@21001>   BSR.w writebyte
0002F590 <AmiBlitz3.ab2@21002>   BSR.w writebyte
0002F594 <AmiBlitz3.ab2@21003>   BSR.w writebyte
0002F598 <AmiBlitz3.ab2@21004>   BSR.w writebyte
0002F59C <AmiBlitz3.ab2@21005>   CMP.w #$2C,D0
0002F5A0 <AmiBlitz3.ab2@21006>    BEQ.w JL_0_C7D8a
0002F5A2 <AmiBlitz3.ab2@21007> RTS
0002F5A4 <AmiBlitz3.ab2@21012>   MOVEQ.l #$11,D3
0002F5AA <AmiBlitz3.ab2@21015>   JSR get1bytemain
0002F5AE <AmiBlitz3.ab2@21016>   CMP.w #$22,D0
0002F5B2 <AmiBlitz3.ab2@21017>    BNE.w JL_0_C81E
0002F5B4 <AmiBlitz3.ab2@21020>   MOVE.b (a5)+,d0                                          ;bsr.w get1bytemain ascii dc.b
0002F5B8 <AmiBlitz3.ab2@21021>    BEQ.w syntaxerr
0002F5BC <AmiBlitz3.ab2@21022>   CMP.w #$22,D0
0002F5C0 <AmiBlitz3.ab2@21023>    BEQ.w JL_0_C816
0002F5C4 <AmiBlitz3.ab2@21024>   CMP.b #"\",d0
0002F5C8 <AmiBlitz3.ab2@21025>    BNE 'n1
0002F5CC <AmiBlitz3.ab2@21026>   CMP.b #"\",(a5)
0002F5D0 <AmiBlitz3.ab2@21027>    BEQ 'do1
0002F5D2 <AmiBlitz3.ab2@21030>   MOVE.w D0,D1
0002F5D6 <AmiBlitz3.ab2@21031>   BSR.w writebyte
0002F5DA <AmiBlitz3.ab2@21032> BRA.w JL_0_C7FC
0002F5E2 <AmiBlitz3.ab2@21035>   CMP.l #"__DA",1(a5)
0002F5E6 <AmiBlitz3.ab2@21036>    BNE 'nodate1
0002F5EE <AmiBlitz3.ab2@21037>   CMP.l #"TE__",5(a5)
0002F5F2 <AmiBlitz3.ab2@21038>    BEQ 'c1
0002F5FA <AmiBlitz3.ab2@21039>   CMP.l #"TE_G",5(a5)
0002F5FE <AmiBlitz3.ab2@21040>    BNE 'nodate1
0002F606 <AmiBlitz3.ab2@21041>   CMP.l #"ER__",9(a5)
0002F60A <AmiBlitz3.ab2@21042>    BNE 'nodate1
0002F610 <AmiBlitz3.ab2@21043>   JSR compiledatedc_ger
0002F614 <AmiBlitz3.ab2@21044> BRA 'n1
0002F61A <AmiBlitz3.ab2@21047>   JSR compiledatedc
0002F61E <AmiBlitz3.ab2@21048> BRA 'n1
0002F626 <AmiBlitz3.ab2@21051>   CMP.l #"__VE",1(a5)
0002F62A <AmiBlitz3.ab2@21052>    BNE 'n1
0002F630 <AmiBlitz3.ab2@21053>   CMP.w #"R_",5(a5)
0002F634 <AmiBlitz3.ab2@21054>    BNE 'n1
0002F63A <AmiBlitz3.ab2@21055>   JSR version_string_dc
0002F63E <AmiBlitz3.ab2@21056> BRA.w JL_0_C7FC
0002F644 <AmiBlitz3.ab2@21060>   CLR.w instringon
0002F64A <AmiBlitz3.ab2@21061>   JSR get1bytemain
0002F64E <AmiBlitz3.ab2@21062> BRA.w JL_0_C83A
0002F658 <AmiBlitz3.ab2@21067>    MOVE.w oldqflag,instringon
0002F65E <AmiBlitz3.ab2@21068>   MOVEA.l lastsourcepos,A5
0002F664 <AmiBlitz3.ab2@21069>    JSR asmconst
0002F66A <AmiBlitz3.ab2@21070>   SUBQ.l #1,destpointer
0002F66E <AmiBlitz3.ab2@21071>    BSR.w JL_0_C796
0002F674 <AmiBlitz3.ab2@21072>   ADDQ.l #1,destpointer
0002F678 <AmiBlitz3.ab2@21073>    BSR.w writebyte
0002F67C <AmiBlitz3.ab2@21076>   CMP.w #$2C,D0
0002F680 <AmiBlitz3.ab2@21077>    BEQ.w JL_0_C7F0
0002F682 <AmiBlitz3.ab2@21078> RTS
0002F684 <AmiBlitz3.ab2@21082>   MOVEQ.l #$10,D3
0002F68C <AmiBlitz3.ab2@21088>   MOVE.b #1,_dcb
0002F692 <AmiBlitz3.ab2@21089>   JSR asmconst
0002F698 <AmiBlitz3.ab2@21090>   CLR.b _dcb
0002F69C <AmiBlitz3.ab2@21091>   BSR.w JL_0_C796
0002F6A0 <AmiBlitz3.ab2@21092>   BSR.w writebyte
0002F6A4 <AmiBlitz3.ab2@21093>   BSR.w writebyte
0002F6A8 <AmiBlitz3.ab2@21094>   CMP.w #$2C,D0
0002F6AC <AmiBlitz3.ab2@21095>    BEQ.w JL_0_C84A
0002F6AE <AmiBlitz3.ab2@21096> RTS
0002F6B4 <AmiBlitz3.ab2@21100>   ADDQ.l #3,destpointer
0002F6BC <AmiBlitz3.ab2@21101>   ANDI.w #$FFFC,destpointer+2
0002F6BE <AmiBlitz3.ab2@21102> RTS
0002F6C4 <AmiBlitz3.ab2@21106>   ADDQ.l #7,destpointer
0002F6CC <AmiBlitz3.ab2@21107>   ANDI.w #$FFF8,destpointer+2
0002F6CE <AmiBlitz3.ab2@21108> RTS
0002F6D4 <AmiBlitz3.ab2@21112>   ADDQ.l #1,destpointer                                    ;even
0002F6DC <AmiBlitz3.ab2@21113>   BCLR #$0,destpointer+3
0002F6DE <AmiBlitz3.ab2@21114> RTS
0002F6E0 <AmiBlitz3.ab2@21117> datasize: Ds.w 1
0002F6E6 <AmiBlitz3.ab2@21127>   TST.b debugmode
0002F6EA <AmiBlitz3.ab2@21128>   BEQ.w pdt__skip
0002F6EE <AmiBlitz3.ab2@21129>   MOVE.w #$4420,D0                                         ;'D '
0002F6F2 <AmiBlitz3.ab2@21130>   MOVE.b datasize+1(PC),D0
0002F6F6 <AmiBlitz3.ab2@21131> BRA.w JL_0_C1E6
0002F6F8 <AmiBlitz3.ab2@21134> RTS
0002F6FC <AmiBlitz3.ab2@21138>   MOVE.w #$FC17,D1
0002F702 <AmiBlitz3.ab2@21139>    JSR uselib
0002F70C <AmiBlitz3.ab2@21141>    MOVE.w oldqflag,instringon
0002F712 <AmiBlitz3.ab2@21142>   MOVEA.l lastsourcepos,A5
0002F718 <AmiBlitz3.ab2@21143>    JSR AJL_0_498A
0002F71E <AmiBlitz3.ab2@21144>   MOVE.w D1,datasize
0002F722 <AmiBlitz3.ab2@21145>   CMP.w #$7,D1
0002F726 <AmiBlitz3.ab2@21146>    BEQ.w JL_0_C944
0002F728 <AmiBlitz3.ab2@21147>   MOVE.w D1,-(A7)
0002F72C <AmiBlitz3.ab2@21150>   BSR.w pdt
0002F72E <AmiBlitz3.ab2@21151>   MOVE.w (A7),D2
0002F732 <AmiBlitz3.ab2@21152>    BSR.w JL_0_B1D8
0002F734 <AmiBlitz3.ab2@21153>   CMP.w (A7),D2                                            ;datamode
0002F738 <AmiBlitz3.ab2@21154>    BEQ.w JL_0_C920
0002F73A <AmiBlitz3.ab2@21155>   MOVE.w D2,D1
0002F73C <AmiBlitz3.ab2@21156>   MOVE.w (A7),D2
0002F740 <AmiBlitz3.ab2@21157>   CMP.w #$2,D2
0002F744 <AmiBlitz3.ab2@21158>    BNE.w JL_0_C8FE
0002F748 <AmiBlitz3.ab2@21159>   CMP.w #$3,D1
0002F74C <AmiBlitz3.ab2@21160>    BNE.w baddaterr
0002F752 <AmiBlitz3.ab2@21161>   CMP.l #$10000,D3
0002F756 <AmiBlitz3.ab2@21162>    BCC.w baddaterr
0002F75A <AmiBlitz3.ab2@21163> BRA.w JL_0_C920
0002F75E <AmiBlitz3.ab2@21166>   CMP.w #$1,D2
0002F762 <AmiBlitz3.ab2@21167>    BNE.w JL_0_C91C
0002F766 <AmiBlitz3.ab2@21168>   CMP.w #$2,D1
0002F76A <AmiBlitz3.ab2@21169>    BNE.w baddaterr
0002F770 <AmiBlitz3.ab2@21170>   CMP.l #$100,D3
0002F774 <AmiBlitz3.ab2@21171>    BCC.w baddaterr
0002F778 <AmiBlitz3.ab2@21172> BRA.w JL_0_C920
0002F77C <AmiBlitz3.ab2@21175> BRA.w baddaterr
0002F780 <AmiBlitz3.ab2@21178>   CMP.w #$3,D2
0002F784 <AmiBlitz3.ab2@21179>   BCC.w JL_0_C930
0002F788 <AmiBlitz3.ab2@21180>   BSR.w JL_0_C1E6
0002F78C <AmiBlitz3.ab2@21181> BRA.w JL_0_C934
0002F792 <AmiBlitz3.ab2@21184>   TST.b iee
0002F796 <AmiBlitz3.ab2@21185>   BEQ 'old
0002F79A <AmiBlitz3.ab2@21186>   CMP.b #5,d2
0002F79E <AmiBlitz3.ab2@21187>   BNE 'old
0002F7A2 <AmiBlitz3.ab2@21188>   Dc.l $f2006400                                           ;  fpu data write fmove.s fp0,d0
0002F7A6 <AmiBlitz3.ab2@21192>   BSR.w JL_0_C1DE                                          ;write data >3
0002F7AC <AmiBlitz3.ab2@21195>   JSR reget
0002F7B0 <AmiBlitz3.ab2@21196>   CMP.w #$2C,D0
0002F7B4 <AmiBlitz3.ab2@21197>    BEQ.w JL_0_C8CC
0002F7B6 <AmiBlitz3.ab2@21198>   ADDQ.w #2,A7
0002F7B8 <AmiBlitz3.ab2@21199> RTS
0002F7BC <AmiBlitz3.ab2@21202>    BSR.w pdt
0002F7C2 <AmiBlitz3.ab2@21203>   MOVE.l data2,-(A7)
0002F7C6 <AmiBlitz3.ab2@21204>    BSR.w JL_0_C1DE
0002F7C8 <AmiBlitz3.ab2@21205>   MOVEQ.l #$00,D1
0002F7CE <AmiBlitz3.ab2@21206>    JSR get1bytemain
0002F7D2 <AmiBlitz3.ab2@21207>    BEQ.w JL_0_C9A6
0002F7D6 <AmiBlitz3.ab2@21208>   CMP.w #$22,D0
0002F7DA <AmiBlitz3.ab2@21209>    BEQ.w JL_0_C988
0002F7DE <AmiBlitz3.ab2@21210>   CMP.w #$2C,D0
0002F7E2 <AmiBlitz3.ab2@21211>    BEQ.w JL_0_C9A6
0002F7E6 <AmiBlitz3.ab2@21214>    BSR.w JL_0_C210
0002F7E8 <AmiBlitz3.ab2@21215>   ADDQ.w #1,D1
0002F7EE <AmiBlitz3.ab2@21216>    JSR getchar
0002F7F0 <AmiBlitz3.ab2@21217>   TST.w D0
0002F7F4 <AmiBlitz3.ab2@21218>    BEQ.w JL_0_C9A6
0002F7F8 <AmiBlitz3.ab2@21219>   CMP.w #$2C,D0
0002F7FC <AmiBlitz3.ab2@21220>    BEQ.w JL_0_C9A6
0002F800 <AmiBlitz3.ab2@21221> BRA.w JL_0_C96C
0002F802 <AmiBlitz3.ab2@21225>    MOVEQ #0,d0
0002F804 <AmiBlitz3.ab2@21226>    MOVE.b (a5)+,d0
0002F808 <AmiBlitz3.ab2@21227>    BEQ.w notqerr2
0002F80C <AmiBlitz3.ab2@21228>   CMP.w #$22,D0
0002F810 <AmiBlitz3.ab2@21229>    BEQ.w JL_0_C9A2
0002F814 <AmiBlitz3.ab2@21230>    BSR.w JL_0_C210
0002F816 <AmiBlitz3.ab2@21231>   ADDQ.w #1,D1
0002F81A <AmiBlitz3.ab2@21232> BRA.w JL_0_C988
0002F820 <AmiBlitz3.ab2@21233> notqerr2 JMP notqerr
0002F826 <AmiBlitz3.ab2@21235>   CLR.w instringon
0002F82C <AmiBlitz3.ab2@21236>   JSR get1bytemain
0002F82E <AmiBlitz3.ab2@21239>   MOVEA.l (A7)+,A0
0002F834 <AmiBlitz3.ab2@21240>   MOVE.w dontwrite,D2
0002F838 <AmiBlitz3.ab2@21241>    BNE.w JL_0_C9B4
0002F83A <AmiBlitz3.ab2@21242>   MOVE.l D1,(A0)
0002F840 <AmiBlitz3.ab2@21245>   ADDQ.l #1,data2
0002F848 <AmiBlitz3.ab2@21246>   BCLR #$0,data2+3
0002F84C <AmiBlitz3.ab2@21247>   CMP.w #$2C,D0
0002F850 <AmiBlitz3.ab2@21248>    BEQ.w JL_0_C944
0002F852 <AmiBlitz3.ab2@21249> RTS
0002F858 <AmiBlitz3.ab2@21253> JMP vardeclareerr
0002F85E <AmiBlitz3.ab2@21256>   MOVE.w proceduremode,D1                                  ;doshared
0002F862 <AmiBlitz3.ab2@21258>   BNE.w 'l1
0002F864 <AmiBlitz3.ab2@21259>   MOVE.w D1,-(A7)
0002F86A <AmiBlitz3.ab2@21260>   CLR.w proceduremode
0002F870 <AmiBlitz3.ab2@21263>   LEA varbase,a2
0002F874 <AmiBlitz3.ab2@21264>   BSR.w getparameter
0002F876 <AmiBlitz3.ab2@21265>   MOVE.w d2,-(a7)
0002F87C <AmiBlitz3.ab2@21266>    JSR findvariable
0002F880 <AmiBlitz3.ab2@21267>    BEQ 'checkdim
0002F886 <AmiBlitz3.ab2@21268>    LEA sharebase,a2
0002F888 <AmiBlitz3.ab2@21269>    MOVEQ #$f+4,d7
0002F88C <AmiBlitz3.ab2@21270>    BSR.w findlab                                         ;find var
0002F890 <AmiBlitz3.ab2@21271>    BEQ.b dupsherr
0002F894 <AmiBlitz3.ab2@21272>    BSR addlabel
0002F898 <AmiBlitz3.ab2@21273>    CMP.b #".",d0
0002F89C <AmiBlitz3.ab2@21274>    BNE JUMP_vardeclareerr
0002F89E <AmiBlitz3.ab2@21275>    MOVE.l a2,a3
0002F8A4 <AmiBlitz3.ab2@21276>    JSR JL_0_8EB8b
0002F8A6 <AmiBlitz3.ab2@21307>   MOVE.w (a7)+,d2
0002F8AA <AmiBlitz3.ab2@21308>    CMP.b #",",d0
0002F8AE <AmiBlitz3.ab2@21309>    BNE 'ret
0002F8B4 <AmiBlitz3.ab2@21310>    JSR get1bytemain
0002F8B8 <AmiBlitz3.ab2@21311> BRA 'again2
0002F8BE <AmiBlitz3.ab2@21314>   MOVE.w (A7)+,proceduremode
0002F8C0 <AmiBlitz3.ab2@21315> RTS
0002F8C6 <AmiBlitz3.ab2@21322>    CMP.w #2,6(a2)
0002F8CA <AmiBlitz3.ab2@21323>    BEQ 'do
0002F8D0 <AmiBlitz3.ab2@21324>    CMP.w #$102,6(a2)
0002F8D4 <AmiBlitz3.ab2@21325>    BEQ 'do
0002F8DA <AmiBlitz3.ab2@21326> JMP errormsg_declaredtwice                                 ;was BRA 'errormsg_declaredtwice_
0002F8E0 <AmiBlitz3.ab2@21329>   LEA varbase,a0
0002F8E2 <AmiBlitz3.ab2@21332>   MOVE.l (A0),D0                                           ;find label
0002F8E6 <AmiBlitz3.ab2@21333>    BEQ.b 'z1
0002F8E8 <AmiBlitz3.ab2@21334>    CMP.l d0,a2
0002F8EC <AmiBlitz3.ab2@21335>    BEQ 'z1
0002F8EE <AmiBlitz3.ab2@21336>    MOVE.l d0,a0
0002F8F2 <AmiBlitz3.ab2@21337> BRA 'm1
0002F8F4 <AmiBlitz3.ab2@21340>   MOVE.l (a2),d1
0002F8F6 <AmiBlitz3.ab2@21341>     MOVE.l d1,(a0)
0002F8F8 <AmiBlitz3.ab2@21342>     CLR.l (a2)
0002F8FE <AmiBlitz3.ab2@21343>     LEA sharebase,a0
0002F900 <AmiBlitz3.ab2@21344>     MOVE.l (a0),(a2)
0002F902 <AmiBlitz3.ab2@21345>     MOVE.l a2,(a0)
0002F908 <AmiBlitz3.ab2@21346>     JSR get1bytemain
0002F90E <AmiBlitz3.ab2@21347>     JSR get1bytemain
0002F912 <AmiBlitz3.ab2@21348> BRA 'domore
0002F91A <AmiBlitz3.ab2@21351>   MOVE.b #1,nowdeclare
0002F91C <AmiBlitz3.ab2@21352>   MOVE.w D1,-(A7)
0002F922 <AmiBlitz3.ab2@21353>   CLR.w proceduremode
0002F926 <AmiBlitz3.ab2@21356>    BSR.w getparameter
0002F928 <AmiBlitz3.ab2@21357>   MOVE.w D2,-(A7)
0002F92E <AmiBlitz3.ab2@21358>   LEA firstglob,A2
0002F932 <AmiBlitz3.ab2@21359>    BSR.w findvariable2
0002F936 <AmiBlitz3.ab2@21360>    BNE.b JL_0_CA06
0002F93C <AmiBlitz3.ab2@21363>   MOVE.b flagmask+1,D1
0002F940 <AmiBlitz3.ab2@21364>   MOVE.b $7(A2),D3
0002F942 <AmiBlitz3.ab2@21365>   EOR.b D3,D1
0002F946 <AmiBlitz3.ab2@21366>    BEQ.w dupsherr
0002F94A <AmiBlitz3.ab2@21367>    BSR.w findlab
0002F94E <AmiBlitz3.ab2@21368>    BEQ.b JL_0_C9F0
0002F952 <AmiBlitz3.ab2@21371>    BSR.w addlabel
0002F954 <AmiBlitz3.ab2@21372>   MOVE.w (A7)+,D2
0002F956 <AmiBlitz3.ab2@21373>   MOVE.l A2,-(A7)
0002F95A <AmiBlitz3.ab2@21374>    BSR.w JL_0_8E3C
0002F95C <AmiBlitz3.ab2@21375>   MOVEA.l (A7)+,A2
0002F95E <AmiBlitz3.ab2@21376>   MOVEQ.l #$04,D1
0002F960 <AmiBlitz3.ab2@21377>   ADDQ.w #4,A2
0002F962 <AmiBlitz3.ab2@21378>   ADDQ.w #4,A3
0002F964 <AmiBlitz3.ab2@21381>     MOVE.w (A3)+,(A2)+
0002F968 <AmiBlitz3.ab2@21382>   DBF D1,JL_0_CA1A
0002F970 <AmiBlitz3.ab2@21384>   BTST #$1,flagmask+1
0002F974 <AmiBlitz3.ab2@21385>    BEQ.w JL_0_CA3C
0002F97A <AmiBlitz3.ab2@21386>    JSR get1bytemain
0002F97E <AmiBlitz3.ab2@21387>   CMP.w #$29,D0
0002F982 <AmiBlitz3.ab2@21388>    BNE.w syntaxerrc
0002F988 <AmiBlitz3.ab2@21389>    JSR get1bytemain
0002F98C <AmiBlitz3.ab2@21392>    CMP.w #$2C,D0
0002F990 <AmiBlitz3.ab2@21393>    BNE.w JL_0_CA4C
0002F996 <AmiBlitz3.ab2@21394>    JSR get1bytemain
0002F99A <AmiBlitz3.ab2@21395> BRA.w JL_0_C9DE
0002F9A0 <AmiBlitz3.ab2@21398>   MOVE.w (A7)+,proceduremode
0002F9A2 <AmiBlitz3.ab2@21399> RTS
0002F9A8 <AmiBlitz3.ab2@21401> syntaxerrc JMP syntaxerr
0002F9AC <AmiBlitz3.ab2@21404>    BSR.w JL_0_C05C
0002F9B2 <AmiBlitz3.ab2@21405>    JSR check_incdir                                        ; ergebnis in d2
0002F9B8 <AmiBlitz3.ab2@21407>    LEA ptr_parameterstore,a1
0002F9BA <AmiBlitz3.ab2@21408>    MOVE.l d2,-(a7)
0002F9C0 <AmiBlitz3.ab2@21409>    LEA includetemp,a0                                      ; filename in includetemp packen
0002F9C2 <AmiBlitz3.ab2@21412>      MOVE.b (a1)+,(a0)+
0002F9C6 <AmiBlitz3.ab2@21413>    BNE 'l4
0002F9CC <AmiBlitz3.ab2@21415>    LEA ptr_parameterstore,a1
0002F9CE <AmiBlitz3.ab2@21416>    MOVE.l a1,a0
0002F9D0 <AmiBlitz3.ab2@21419>     TST.b (a0)+
0002F9D4 <AmiBlitz3.ab2@21420>    BNE 'l1
0002F9D6 <AmiBlitz3.ab2@21423>      MOVE.b -(a0),d0
0002F9DA <AmiBlitz3.ab2@21424>      CMP.b #":",d0
0002F9DE <AmiBlitz3.ab2@21425>       BEQ 'out
0002F9E2 <AmiBlitz3.ab2@21426>      CMP.b #"/",d0
0002F9E6 <AmiBlitz3.ab2@21427>       BEQ 'out
0002F9E8 <AmiBlitz3.ab2@21428>      CMP.l a1,a0
0002F9EC <AmiBlitz3.ab2@21429>       BEQ 'out2
0002F9F0 <AmiBlitz3.ab2@21430> BRA 'l2
0002F9F2 <AmiBlitz3.ab2@21433>    ADDQ.l #1,a0                                            ; dateinamen vom pfad extrahiert
0002F9F4 <AmiBlitz3.ab2@21436>    MOVEQ.l #-$01,D2
0002F9F6 <AmiBlitz3.ab2@21439>      ADDQ.w #1,D2
0002F9F8 <AmiBlitz3.ab2@21440>      MOVE.b (a0)+,(a1)+
0002F9FC <AmiBlitz3.ab2@21441>    BNE 'l3
0002F9FE <AmiBlitz3.ab2@21442>    CLR.b (a1)+
0002FA04 <AmiBlitz3.ab2@21444>    LEA ptr_parameterstore,a1
0002FA08 <AmiBlitz3.ab2@21445>    BSR.w findxinc                                         ;find include
0002FA0C <AmiBlitz3.ab2@21446>     BEQ.w 'outb
0002FA0E <AmiBlitz3.ab2@21448>    MOVE.w D2,-(A7)
0002FA12 <AmiBlitz3.ab2@21449>    BSR.w addlabel
0002FA14 <AmiBlitz3.ab2@21450>    MOVE.w (A7)+,D2
0002FA1A <AmiBlitz3.ab2@21452>    LEA ptr_parameterstore,a1
0002FA20 <AmiBlitz3.ab2@21453>    LEA includetemp,a0                                      ; namen in includetemp schreiben
0002FA22 <AmiBlitz3.ab2@21456>     MOVE.b (a0)+,(a1)+
0002FA26 <AmiBlitz3.ab2@21457>    BNE 'l4b
0002FA28 <AmiBlitz3.ab2@21459>    MOVE.l (a7)+,d2
0002FA2E <AmiBlitz3.ab2@21460>    LEA ptr_parameterstore,a1
0002FA32 <AmiBlitz3.ab2@21461> BRA.w JL_0_CB18
0002FA38 <AmiBlitz3.ab2@21464>    LEA ptr_parameterstore,a1
0002FA3E <AmiBlitz3.ab2@21465>    LEA includetemp,a0
0002FA40 <AmiBlitz3.ab2@21468>     MOVE.b (a0)+,(a1)+
0002FA44 <AmiBlitz3.ab2@21469>    BNE 'l4b2
0002FA46 <AmiBlitz3.ab2@21471>    MOVE.l (a7)+,d2
0002FA4C <AmiBlitz3.ab2@21472>    LEA ptr_parameterstore,a1
0002FA4E <AmiBlitz3.ab2@21475> RTS
0002FA52 <AmiBlitz3.ab2@21479>   BSR.w JL_0_C05C                                              ; test and get the parameter (includestring)
0002FA58 <AmiBlitz3.ab2@21481>   JSR check_IncBinDir                                          ; to fix the path problem in CLIMode  tomsmart1
0002FA5E <AmiBlitz3.ab2@21483>   MOVEA.l _dosbase,A6
0002FA60 <AmiBlitz3.ab2@21484>   MOVE.l D0,D7                                                 ; store Lockpointer
0002FA64 <AmiBlitz3.ab2@21485>    BEQ.w error_cant_open_include                               ; no pointer => errormessage
0002FA66 <AmiBlitz3.ab2@21486>   MOVE.l D7,D1                                                 ; begin get the size of the file to include
0002FA6C <AmiBlitz3.ab2@21487>   MOVE.l ptr_macrobuffer_begin,D2
0002FA70 <AmiBlitz3.ab2@21488>    JSR _Examine(A6)
0002FA76 <AmiBlitz3.ab2@21489>   MOVEA.l ptr_macrobuffer_begin,A0
0002FA7A <AmiBlitz3.ab2@21490>   MOVE.l $4(A0),D0
0002FA7E <AmiBlitz3.ab2@21491>    BPL.w error_cant_open_include                               ; something went wrong => errormessage
0002FA82 <AmiBlitz3.ab2@21492>   MOVE.l $7C(A0),D3                                            ; store the size of the file to include
0002FA84 <AmiBlitz3.ab2@21493>   MOVE.l D7,D1                                                 ; begin unlock the file
0002FA88 <AmiBlitz3.ab2@21494>    JSR _UnLock(A6)
0002FA8E <AmiBlitz3.ab2@21496>   MOVE.l #ptr_parameterstore,D1                                ; begin Open and Load the file
0002FA94 <AmiBlitz3.ab2@21497>   MOVE.l #HUNK_RELOC_16__MODE_OLDFILE,D2                       
0002FA98 <AmiBlitz3.ab2@21498>    JSR _Open(A6)
0002FA9A <AmiBlitz3.ab2@21499>   MOVE.l D0,D7
0002FA9E <AmiBlitz3.ab2@21500>    BEQ.w error_cant_open_include
0002FAA4 <AmiBlitz3.ab2@21501>   MOVE.l destpointer,D0
0002FAA6 <AmiBlitz3.ab2@21502>   ADD.l D3,D0
0002FAAC <AmiBlitz3.ab2@21503>   CMP.l destbufferend,D0
0002FAB0 <AmiBlitz3.ab2@21504>    BHI.w JL_0_CAF6
0002FAB6 <AmiBlitz3.ab2@21505>   MOVE.l destpointer,D2
0002FAB8 <AmiBlitz3.ab2@21506>   MOVE.l D7,D1
0002FABC <AmiBlitz3.ab2@21507>    JSR _Read(A6)
0002FAC2 <AmiBlitz3.ab2@21508>   CMP.l #$FFFFFFFF,D0
0002FAC6 <AmiBlitz3.ab2@21509>    BEQ.w error_reading_file
0002FACC <AmiBlitz3.ab2@21510>   ADD.l D0,destpointer
0002FAD0 <AmiBlitz3.ab2@21511> BRA.w JL_0_CB04
0002FAD8 <AmiBlitz3.ab2@21514>   MOVE.w #$FFFF,dontwrite
0002FADE <AmiBlitz3.ab2@21515>   MOVE.l D0,destpointer
0002FAE0 <AmiBlitz3.ab2@21518>   MOVE.l D7,D1
0002FAE4 <AmiBlitz3.ab2@21519> JMP _Close(A6)
0002FAEA <AmiBlitz3.ab2@21523> JMP illdirerr
0002FAF0 <AmiBlitz3.ab2@21526>   TST.w dirmode                                            ;include  open
0002FAF4 <AmiBlitz3.ab2@21527>    BNE.w JUMP_illdirerr
0002FAF8 <AmiBlitz3.ab2@21528>   BSR.w JL_0_C05C
0002FAFE <AmiBlitz3.ab2@21529>   JSR check_incdir
0002FB02 <AmiBlitz3.ab2@21532>   BSR.w findconstant
0002FB06 <AmiBlitz3.ab2@21533>    BEQ.w alincerr
0002FB0C <AmiBlitz3.ab2@21535>   LEA constantbase,A2
0002FB10 <AmiBlitz3.ab2@21536>   BSR.w addhere2
0002FB14 <AmiBlitz3.ab2@21537>   CLR.w $C(A2)
0002FB18 <AmiBlitz3.ab2@21538>   CLR.l $4(A2)
0002FB1E <AmiBlitz3.ab2@21540>   MOVE.l #ptr_parameterstore,D1
0002FB20 <AmiBlitz3.ab2@21541>   MOVE.l d1,a0
0002FB26 <AmiBlitz3.ab2@21542>   LEA includetemp2,a1
0002FB28 <AmiBlitz3.ab2@21545>     MOVE.b (a0)+,(a1)+
0002FB2C <AmiBlitz3.ab2@21546>   BNE 'l1
0002FB32 <AmiBlitz3.ab2@21547>   JSR save_includename
0002FB3C <AmiBlitz3.ab2@21548>   MOVE.l #0,include_process
0002FB44 <AmiBlitz3.ab2@21550>   CMP.l #$62623200,-4(a0)                                  ;.bb2
0002FB48 <AmiBlitz3.ab2@21551>   BEQ 'ok
0002FB50 <AmiBlitz3.ab2@21552>   CMP.l #$61623300,-4(a0)                                  ;.ab3
0002FB54 <AmiBlitz3.ab2@21553>   BEQ 'ok_tokenize
0002FB5C <AmiBlitz3.ab2@21554>   CMP.l #$61623200,-4(a0)                                  ;.ab2
0002FB60 <AmiBlitz3.ab2@21555>   BEQ 'ok_tokenize
0002FB68 <AmiBlitz3.ab2@21556>   CMP.l #$2e626200,-4(a0)                                  ;.bb files
0002FB6C <AmiBlitz3.ab2@21557>   BEQ 'ok
0002FB72 <AmiBlitz3.ab2@21558> JMP errortoken                                             ;can only include
0002FB7C <AmiBlitz3.ab2@21561>    MOVE.l #-1,include_process                              ; must tokenize the include
0002FB82 <AmiBlitz3.ab2@21564>   MOVE.l #HUNK_RELOC_16__MODE_OLDFILE,D2
0002FB88 <AmiBlitz3.ab2@21565>   MOVEA.l _dosbase,A6
0002FB8C <AmiBlitz3.ab2@21566>   JSR _Open(A6)
0002FB90 <AmiBlitz3.ab2@21567>   MOVE.l D0,$8(A2)
0002FB94 <AmiBlitz3.ab2@21568>   BEQ.w error_cant_open_include
0002FB9A <AmiBlitz3.ab2@21569>   CLR.l includeline
0002FB9E <AmiBlitz3.ab2@21570>   MOVE.l 8(a2),d1
0002FBA0 <AmiBlitz3.ab2@21571>   MOVE.l d3,-(a7)
0002FBA2 <AmiBlitz3.ab2@21572>   MOVEQ #0,d2
0002FBA4 <AmiBlitz3.ab2@21573>   MOVEQ #1,d3
0002FBA8 <AmiBlitz3.ab2@21574>   JSR _Seek(a6)                                            ; -66
0002FBAC <AmiBlitz3.ab2@21575>   MOVE.l 8(a2),d1
0002FBAE <AmiBlitz3.ab2@21576>   MOVEQ #0,d2
0002FBB0 <AmiBlitz3.ab2@21577>   MOVEQ #-1,d3
0002FBB4 <AmiBlitz3.ab2@21578>   JSR _Seek(a6)                                            ; -66
0002FBB6 <AmiBlitz3.ab2@21579>   MOVE.l (a7)+,d3
0002FBB8 <AmiBlitz3.ab2@21580>   ADDQ.l #4,d0
0002FBBE <AmiBlitz3.ab2@21582>   MOVE.l #$10000,D1
0002FBC4 <AmiBlitz3.ab2@21583>   MOVEA.l _execbase,A6
0002FBC8 <AmiBlitz3.ab2@21586>   JSR _AllocVec(a6)
0002FBCC <AmiBlitz3.ab2@21588>   MOVE.l D0,$4(A2)
0002FBD0 <AmiBlitz3.ab2@21589>   MOVE.l D0,$E(A2)
0002FBD2 <AmiBlitz3.ab2@21590>   MOVEA.l D0,A5
0002FBD8 <AmiBlitz3.ab2@21597>   ADDQ.w #1,ininclude                                      ;enter include
0002FBDE <AmiBlitz3.ab2@21600>   LEA _include,a0
0002FBE2 <AmiBlitz3.ab2@21601>   MOVEM.l a0-a6/d0-d7,-(a7)
0002FBE8 <AmiBlitz3.ab2@21602>   LEA ptr_parameterstore,a1
0002FBEA <AmiBlitz3.ab2@21605>     MOVE.b (a0)+,(a1)+
0002FBEE <AmiBlitz3.ab2@21606>   BNE 'l1b
0002FBF0 <AmiBlitz3.ab2@21608>   MOVEQ #9,d2
0002FBF6 <AmiBlitz3.ab2@21609>   JSR findlabel2
0002FBFA <AmiBlitz3.ab2@21610>   BNE 'd
0002FC02 <AmiBlitz3.ab2@21611>   MOVE.l #1,8(a2)
0002FC06 <AmiBlitz3.ab2@21612>   MOVEM.l (a7)+,a0-a6/d0-d7
0002FC0A <AmiBlitz3.ab2@21613> BRA 'd2
0002FC10 <AmiBlitz3.ab2@21616>   JSR addlabelhash
0002FC18 <AmiBlitz3.ab2@21617>   MOVE.l #$1,$4(A2)
0002FC20 <AmiBlitz3.ab2@21618>   MOVE.l #1,8(a2)
0002FC24 <AmiBlitz3.ab2@21619>   MOVEM.l (a7)+,a0-a6/d0-d7
0002FC2A <AmiBlitz3.ab2@21622>   LEA inctab,a0
0002FC2C <AmiBlitz3.ab2@21623>   MOVEQ #0,d1
0002FC32 <AmiBlitz3.ab2@21624>   MOVE.w ininclude,d1
0002FC36 <AmiBlitz3.ab2@21625>   CLR.l $0(a0,d1*4)
0002FC3C <AmiBlitz3.ab2@21626>   MOVEA.l passstack,A7
0002FC42 <AmiBlitz3.ab2@21627> JMP AJL_0_413A
0002FC48 <AmiBlitz3.ab2@21629> JUMP_dupmacerr JMP dupmacerr
0002FC4A <AmiBlitz3.ab2@21631> coolnest:   Ds.w 1
0002FC4E <AmiBlitz3.ab2@21632> macline:    Ds.l 1
0002FC58 <AmiBlitz3.ab2@21636>   MOVE.l linenumat,macline
0002FC5C <AmiBlitz3.ab2@21637>    BSR.w makename2
0002FC60 <AmiBlitz3.ab2@21638>    BEQ.w JUMP_syntaxerr
0002FC66 <AmiBlitz3.ab2@21640>    CLR.b thenmode
0002FC70 <AmiBlitz3.ab2@21642>    MOVE.w oldqflag,instringon
0002FC76 <AmiBlitz3.ab2@21643>   MOVEA.l lastsourcepos,A5
0002FC7A <AmiBlitz3.ab2@21644>    BSR.w findmac
0002FC7E <AmiBlitz3.ab2@21645>    BEQ.w JUMP_dupmacerr
0002FC82 <AmiBlitz3.ab2@21646>    BSR.w addlabel
0002FC86 <AmiBlitz3.ab2@21647>   CLR.w $A(A2)
0002FC8C <AmiBlitz3.ab2@21648>   MOVEA.l ptr_macrobuffer_begin,A0
0002FC8E <AmiBlitz3.ab2@21649>   MOVEQ.l #$00,D2
0002FC94 <AmiBlitz3.ab2@21650>   CLR.w coolnest
0002FC96 <AmiBlitz3.ab2@21653>   MOVE.b (a5),d0
0002FC9A <AmiBlitz3.ab2@21654>      BEQ 'l3
0002FC9E <AmiBlitz3.ab2@21655>      CMP.b #" ",d0
0002FCA2 <AmiBlitz3.ab2@21656>       BNE 'l2                                              ;space macro
0002FCA4 <AmiBlitz3.ab2@21657>       ADDQ.l #1,a5
0002FCA8 <AmiBlitz3.ab2@21658> BRA 'l1
0002FCAC <AmiBlitz3.ab2@21661>    CMP.b #";",d0
0002FCB0 <AmiBlitz3.ab2@21662>       BNE 'l3
0002FCB2 <AmiBlitz3.ab2@21665>    MOVE.b (a5),d0
0002FCB6 <AmiBlitz3.ab2@21666>       BEQ 'l5
0002FCBA <AmiBlitz3.ab2@21667>       BSR.w JL_0_CC98                                      ;add comment
0002FCBC <AmiBlitz3.ab2@21668>       ADDQ.l #1,a5
0002FCC0 <AmiBlitz3.ab2@21669> BRA 'l4
0002FCC4 <AmiBlitz3.ab2@21672>    MOVE.b #":",d0
0002FCC8 <AmiBlitz3.ab2@21673>       BSR.w JL_0_CC98
0002FCCC <AmiBlitz3.ab2@21674>       MOVE.b #"@",d0
0002FCD0 <AmiBlitz3.ab2@21675>       BSR.w JL_0_CC98
0002FCD8 <AmiBlitz3.ab2@21678>    MOVE.b #0,temp
0002FCE0 <AmiBlitz3.ab2@21679>       MOVE.b #0,thenmode
0002FCE6 <AmiBlitz3.ab2@21682>   JSR getcharb
0002FCE8 <AmiBlitz3.ab2@21683>   TST.w D0
0002FCEC <AmiBlitz3.ab2@21684>    BNE.w JL_0_CBDE
0002FCF0 <AmiBlitz3.ab2@21685>   MOVEM.l D2/A0/A2,-(A7)
0002FCF6 <AmiBlitz3.ab2@21686>   CMP.w #"@@",-3(a5)
0002FCFA <AmiBlitz3.ab2@21687>   BNE 'l2a
0002FD00 <AmiBlitz3.ab2@21688>   JSR nextline
0002FD04 <AmiBlitz3.ab2@21689>   BEQ.w JUMP_macenderr
0002FD08 <AmiBlitz3.ab2@21690>   MOVEM.l (A7)+,D2/A0/A2
0002FD0C <AmiBlitz3.ab2@21691> BRA.w JL_0_CBB6
0002FD12 <AmiBlitz3.ab2@21694>    JSR nextline
0002FD16 <AmiBlitz3.ab2@21695>    BEQ.w JUMP_macenderr
0002FD1A <AmiBlitz3.ab2@21696>   MOVEM.l (A7)+,D2/A0/A2
0002FD1C <AmiBlitz3.ab2@21697>   TST.w D2
0002FD20 <AmiBlitz3.ab2@21698>    BEQ.w JL_0_CBB6
0002FD22 <AmiBlitz3.ab2@21701>   MOVE.b (a5),d0
0002FD26 <AmiBlitz3.ab2@21702>       CMP.b #" ",d0
0002FD2A <AmiBlitz3.ab2@21703>       BNE 'l1
0002FD2C <AmiBlitz3.ab2@21704>       ADDQ.w #1,a5
0002FD30 <AmiBlitz3.ab2@21705> BRA 'l2
0002FD36 <AmiBlitz3.ab2@21708>   TST.b thenmode
0002FD3A <AmiBlitz3.ab2@21709>      BEQ 'l3
0002FD3C <AmiBlitz3.ab2@21710>      MOVEQ #":",d0
0002FD40 <AmiBlitz3.ab2@21711>      BSR.w JL_0_CC98
0002FD44 <AmiBlitz3.ab2@21712>      MOVE.w #-$7FFE,D0                                     ;write end if
0002FD48 <AmiBlitz3.ab2@21713>      BSR macputw
0002FD4C <AmiBlitz3.ab2@21714>      MOVE.w #$800b,d0
0002FD50 <AmiBlitz3.ab2@21715>      BSR.w macputw
0002FD56 <AmiBlitz3.ab2@21716>      CLR.b thenmode
0002FD58 <AmiBlitz3.ab2@21719>    MOVEQ.l #$3A,D0
0002FD60 <AmiBlitz3.ab2@21720>      MOVE.b #1,temp
0002FD64 <AmiBlitz3.ab2@21722> BRA.w JL_0_CC2A
0002FD68 <AmiBlitz3.ab2@21726>   BPL.w JL_0_CC2A
0002FD6C <AmiBlitz3.ab2@21727>   CMP.w #-$7FF3,D0                                         ;macro ?
0002FD70 <AmiBlitz3.ab2@21728>    BNE.w JL_0_CBF4
0002FD76 <AmiBlitz3.ab2@21729>   ADDQ.w #1,coolnest
0002FD7A <AmiBlitz3.ab2@21730> BRA.w JL_0_CC22
0002FD80 <AmiBlitz3.ab2@21732> JUMP_macnesterr JMP macnesterr
0002FD84 <AmiBlitz3.ab2@21735>   CMP.w #$80d7,d0                                          ;object ?
0002FD88 <AmiBlitz3.ab2@21736>     BNE 'l1x
0002FD8E <AmiBlitz3.ab2@21737>     TST.b objectcount
0002FD92 <AmiBlitz3.ab2@21738>     BNE JUMP_macnesterr
0002FD96 <AmiBlitz3.ab2@21741>   CMP.w #$8021,d0
0002FD9A <AmiBlitz3.ab2@21742>     BNE 'nothen
0002FDA2 <AmiBlitz3.ab2@21743>     MOVE.b #1,thenmode
0002FDA8 <AmiBlitz3.ab2@21746>   TST.b thenmode
0002FDAC <AmiBlitz3.ab2@21747>         BEQ 'l1
0002FDB0 <AmiBlitz3.ab2@21748>    CMP.w #$8002,d0                                         ;end if
0002FDB4 <AmiBlitz3.ab2@21749>    BNE 'l1
0002FDB8 <AmiBlitz3.ab2@21750>    MOVEM.l d0/a5,-(a7)
0002FDBE <AmiBlitz3.ab2@21751>    JSR get1bytemain
0002FDC0 <AmiBlitz3.ab2@21752>    MOVE.w d0,d1
0002FDC4 <AmiBlitz3.ab2@21753>    MOVEM.l (a7)+,a5/d0
0002FDC8 <AmiBlitz3.ab2@21754>    CMP.w #$800b,d1
0002FDCC <AmiBlitz3.ab2@21755>    BNE 'l1
0002FDD2 <AmiBlitz3.ab2@21756>    CLR.b thenmode
0002FDD6 <AmiBlitz3.ab2@21759>    CMP.w #-$7FFE,D0                                        ;end ?
0002FDDA <AmiBlitz3.ab2@21760>    BNE.w JL_0_CC22
0002FDDC <AmiBlitz3.ab2@21761>    MOVE.l a5,-(a7)
0002FDE2 <AmiBlitz3.ab2@21762>    JSR get1bytemain
0002FDE4 <AmiBlitz3.ab2@21763>    MOVE.l (a7)+,a5
0002FDE6 <AmiBlitz3.ab2@21764>    TST.w d0
0002FDEA <AmiBlitz3.ab2@21765>    BEQ 'doend
0002FDEE <AmiBlitz3.ab2@21766>    CMP.w #":",d0
0002FDF2 <AmiBlitz3.ab2@21767>    BEQ 'doend
0002FDF6 <AmiBlitz3.ab2@21768>    CMP.w #";",d0
0002FDFA <AmiBlitz3.ab2@21769>    BEQ 'doend
0002FDFC <AmiBlitz3.ab2@21770>    MOVE.l a5,-(a7)
0002FE02 <AmiBlitz3.ab2@21771>    JSR get1bytemain
0002FE06 <AmiBlitz3.ab2@21772>    MOVE.l -1(a5),d0
0002FE08 <AmiBlitz3.ab2@21773>    MOVE.l (a7)+,a5
0002FE0E <AmiBlitz3.ab2@21774>    CMP.l #"noa7",d0
0002FE12 <AmiBlitz3.ab2@21775>    BEQ 'doend
0002FE16 <AmiBlitz3.ab2@21776> BRA 'morechar
0002FE1A <AmiBlitz3.ab2@21779>   MOVE.w #$8002,D0
0002FE1E <AmiBlitz3.ab2@21780>    BSR.w macputw
0002FE22 <AmiBlitz3.ab2@21781> BRA JL_0_CBB6
0002FE28 <AmiBlitz3.ab2@21784>   JSR get1bytemain
0002FE2C <AmiBlitz3.ab2@21785>    CMP.w #-$7FF3,D0                                        ;end macro
0002FE30 <AmiBlitz3.ab2@21786>    BEQ.w 'lo1
0002FE34 <AmiBlitz3.ab2@21787>   CMP.w #$80d7,d0                                          ;end object
0002FE38 <AmiBlitz3.ab2@21788>   BNE JL_0_CC12
0002FE3E <AmiBlitz3.ab2@21789>   SUBQ.b #1,objectcount
0002FE44 <AmiBlitz3.ab2@21790>   TST.b developobject
0002FE48 <AmiBlitz3.ab2@21791>   BEQ 'lo1
0002FE4C <AmiBlitz3.ab2@21792>   BSR skiprest
0002FE4E <AmiBlitz3.ab2@21793> RTS
0002FE54 <AmiBlitz3.ab2@21796>   SUBQ.w #1,coolnest
0002FE58 <AmiBlitz3.ab2@21797>    BMI.w JL_0_CC32
0002FE5A <AmiBlitz3.ab2@21800>   MOVE.w D0,-(A7)
0002FE5E <AmiBlitz3.ab2@21801>   MOVE.w #$8002,D0
0002FE62 <AmiBlitz3.ab2@21802>    BSR.w macputw
0002FE64 <AmiBlitz3.ab2@21803>   MOVE.w (A7)+,D0
0002FE68 <AmiBlitz3.ab2@21804> BRA.w JL_0_CC22
0002FE6C <AmiBlitz3.ab2@21807>   BSR.w macputw
0002FE70 <AmiBlitz3.ab2@21808> BRA.w JL_0_CBB6
0002FE76 <AmiBlitz3.ab2@21810> JUMP_macenderr JMP macenderr
0002FE7C <AmiBlitz3.ab2@21813>     CMP.w #"@@",-1(a5)                                     ;merge lines
0002FE80 <AmiBlitz3.ab2@21814>     BNE 'no
0002FE84 <AmiBlitz3.ab2@21815>      MOVEM.l D2/A0/A2,-(A7)
0002FE8A <AmiBlitz3.ab2@21816>    JSR nextline
0002FE8E <AmiBlitz3.ab2@21817>    BEQ.w JUMP_macenderr
0002FE92 <AmiBlitz3.ab2@21818>   MOVEM.l (A7)+,D2/A0/A2
0002FE94 <AmiBlitz3.ab2@21819>     TST.w D2
0002FE98 <AmiBlitz3.ab2@21820>    BEQ.w JL_0_CBB6
0002FE9C <AmiBlitz3.ab2@21821> BRA JL_0_CBB6
0002FEA0 <AmiBlitz3.ab2@21825>   BSR.w JL_0_CC98
0002FEA4 <AmiBlitz3.ab2@21826> BRA.w JL_0_CBB6
0002FEA6 <AmiBlitz3.ab2@21829>   ADDQ.w #4,A7
0002FEA8 <AmiBlitz3.ab2@21830>   MOVE.l A0,D0
0002FEAE <AmiBlitz3.ab2@21831>   SUB.l ptr_macrobuffer_begin,D0
0002FEB2 <AmiBlitz3.ab2@21834>    BEQ.w JL_0_CC5E
0002FEB6 <AmiBlitz3.ab2@21835>   CMPI.b #":",-(A0)
0002FEBA <AmiBlitz3.ab2@21836>    BNE.w JL_0_CC5E
0002FEBE <AmiBlitz3.ab2@21837>   CMP.w #$1,D0
0002FEC2 <AmiBlitz3.ab2@21838>    BEQ.w JL_0_CC58
0002FEC6 <AmiBlitz3.ab2@21839>   TST.b -$1(A0)
0002FECA <AmiBlitz3.ab2@21840>    BMI.w JL_0_CC5E
0002FECC <AmiBlitz3.ab2@21843>   SUBQ.w #1,D0
0002FED0 <AmiBlitz3.ab2@21844> BRA.w JL_0_CC3C
0002FED4 <AmiBlitz3.ab2@21847>   MOVE.w D0,$8(A2)
0002FED8 <AmiBlitz3.ab2@21848>    BEQ.w JL_0_CC8E
0002FEDA <AmiBlitz3.ab2@21849>   MOVEQ.l #$01,D1
0002FEE0 <AmiBlitz3.ab2@21850>   MOVEA.l _execbase,A6
0002FEE6 <AmiBlitz3.ab2@21851>   MOVE.l mempool,a0
0002FEEA <AmiBlitz3.ab2@21852>   JSR _AllocPooled(a6)
0002FEEC <AmiBlitz3.ab2@21854>   MOVEA.l D0,A0
0002FEF0 <AmiBlitz3.ab2@21855>   MOVE.l A0,$4(A2)
0002FEF4 <AmiBlitz3.ab2@21856>   MOVE.w $8(A2),D1
0002FEF8 <AmiBlitz3.ab2@21857>    BEQ.w JL_0_CC8E
0002FEFA <AmiBlitz3.ab2@21858>   SUBQ.w #1,D1
0002FF00 <AmiBlitz3.ab2@21859>   MOVEA.l ptr_macrobuffer_begin,A1
0002FF02 <AmiBlitz3.ab2@21862>     MOVE.b (A1)+,(A0)+
0002FF06 <AmiBlitz3.ab2@21863>   DBF D1,JL_0_CC88
0002FF0C <AmiBlitz3.ab2@21866> JMP get1bytemain
0002FF0E <AmiBlitz3.ab2@21870>   MOVE.w D0,D1
0002FF10 <AmiBlitz3.ab2@21871>   LSR.w #8,D1
0002FF12 <AmiBlitz3.ab2@21872>   MOVE.b D1,(A0)+
0002FF14 <AmiBlitz3.ab2@21875>   MOVEQ.l #-$01,D2
0002FF16 <AmiBlitz3.ab2@21876>   MOVE.b D0,(A0)+
0002FF1C <AmiBlitz3.ab2@21877>   CMPA.l ptr_macrobuffer_end,A0
0002FF20 <AmiBlitz3.ab2@21878>    BCC.w macbigerr2
0002FF22 <AmiBlitz3.ab2@21879> RTS
0002FF28 <AmiBlitz3.ab2@21880> macbigerr2 JMP macbigerr
0002FF2A <AmiBlitz3.ab2@21883>   MOVE.l d0,-(a7)
0002FF2C <AmiBlitz3.ab2@21884>   MOVEQ #0,d0
0002FF32 <AmiBlitz3.ab2@21885>   CLR.b skiptoggle
0002FF34 <AmiBlitz3.ab2@21888>     MOVE.b (a5),d0
0002FF38 <AmiBlitz3.ab2@21889>     BEQ 'l3
0002FF3C <AmiBlitz3.ab2@21890>     CMP.b #";",d0
0002FF40 <AmiBlitz3.ab2@21891>     BNE 'l2
0002FF48 <AmiBlitz3.ab2@21892>     MOVE.b #1,skiptoggle
0002FF4E <AmiBlitz3.ab2@21895>     TST.b skiptoggle
0002FF52 <AmiBlitz3.ab2@21896>     BNE 'l4
0002FF56 <AmiBlitz3.ab2@21897>     CMP.b #":",d0
0002FF5A <AmiBlitz3.ab2@21898>     BEQ 'l3
0002FF5C <AmiBlitz3.ab2@21901>     ADDQ #1,a5
0002FF60 <AmiBlitz3.ab2@21902> BRA 'loop
0002FF66 <AmiBlitz3.ab2@21905>   MOVE.w d0,lastchar
0002FF68 <AmiBlitz3.ab2@21906>   MOVE.l (a7)+,d0
0002FF6A <AmiBlitz3.ab2@21907> RTS
0002FF6E <AmiBlitz3.ab2@21911>   BSR.w ifchar
0002FF72 <AmiBlitz3.ab2@21912>    BNE.w JUMP_syntaxerr
0002FF74 <AmiBlitz3.ab2@21913>   MOVE.w D0,D1
0002FF7A <AmiBlitz3.ab2@21914>   JSR get1bytemain
0002FF7E <AmiBlitz3.ab2@21915>   BSR.w ifchar
0002FF82 <AmiBlitz3.ab2@21916>    BNE.w JL_0_CCDA
0002FF84 <AmiBlitz3.ab2@21917>   ADDQ.w #1,D0
0002FF86 <AmiBlitz3.ab2@21918>   MOVE.w D0,D2
0002FF88 <AmiBlitz3.ab2@21919>   ADD.w D0,D0
0002FF8A <AmiBlitz3.ab2@21920>   ADD.w D2,D0
0002FF8C <AmiBlitz3.ab2@21921>   ADD.w D0,D1
0002FF8E <AmiBlitz3.ab2@21922>   MOVE.w D1,D0
0002FF92 <AmiBlitz3.ab2@21923>   ANDI.w #$3,D0
0002FF96 <AmiBlitz3.ab2@21924>   CMP.w #$3,D0
0002FF9A <AmiBlitz3.ab2@21925>    BEQ.w JUMP_syntaxerr
0002FFA0 <AmiBlitz3.ab2@21927>   JSR get1bytemain
0002FFA2 <AmiBlitz3.ab2@21930> RTS
0002FFA4 <AmiBlitz3.ab2@21936> thetst1:  TST.b D0
0002FFA6 <AmiBlitz3.ab2@21937> thetst2:  TST.w D0
0002FFA8 <AmiBlitz3.ab2@21938> thetst3:  TST.l D0
0002FFAA <AmiBlitz3.ab2@21939> thetst4:  TST.l (A7)+                                      ;Any Length?
0002FFAE <AmiBlitz3.ab2@21940> thetst5:  JSR _Reschedule(A6)
0002FFB2 <AmiBlitz3.ab2@21942> posbr:    BEQ.w posbr
0002FFB6 <AmiBlitz3.ab2@21943> negbr:    BNE.w negbr
0002FFB8 <AmiBlitz3.ab2@21947>   MOVEQ.l #-$01,D2
0002FFBC <AmiBlitz3.ab2@21948> BRA.w JL_0_D04C
0002FFC2 <AmiBlitz3.ab2@21952>   CLR.l fp0addr
0002FFC4 <AmiBlitz3.ab2@21953>   MOVEQ.l #$01,D1                                          ;while flag
0002FFC6 <AmiBlitz3.ab2@21954>   MOVEQ.l #$00,D2                                          ;negate flag
0002FFCA <AmiBlitz3.ab2@21955> BRA.w JL_0_D04E
0002FFD0 <AmiBlitz3.ab2@21959>   LEA firstrep,A2
0002FFD2 <AmiBlitz3.ab2@21960>   MOVEQ.l #$08,D2
0002FFD6 <AmiBlitz3.ab2@21961> BRA.w freeslist
0002FFDA <AmiBlitz3.ab2@21965>   LEA firstsel(PC),A2
0002FFDC <AmiBlitz3.ab2@21966>   MOVEQ.l #$0E,D2
0002FFDE <AmiBlitz3.ab2@21971>   MOVEQ.l #$00,D3
0002FFE0 <AmiBlitz3.ab2@21979>   MOVE.l (A2),D0
0002FFE2 <AmiBlitz3.ab2@21980>   CLR.l (A2)
0002FFE4 <AmiBlitz3.ab2@21981>   MOVEA.l D0,A2
0002FFEA <AmiBlitz3.ab2@21982>   MOVEA.l _execbase,A6
0002FFEE <AmiBlitz3.ab2@21985>     CMPA.w #$0,A2
0002FFF2 <AmiBlitz3.ab2@21986>      BEQ.w freelist__done
0002FFF4 <AmiBlitz3.ab2@21987>     TST.w D3
0002FFF8 <AmiBlitz3.ab2@21988>      BEQ.w freelist__skip
0002FFFC <AmiBlitz3.ab2@21989>     MOVEM.l D2-D3/A2,-(A7)
0002FFFE <AmiBlitz3.ab2@21990>     ADDA.w D3,A2
00030000 <AmiBlitz3.ab2@21991>     MOVE.l D4,D2
00030004 <AmiBlitz3.ab2@21992>     BSR.w freeslist
00030008 <AmiBlitz3.ab2@21993>     MOVEM.l (A7)+,D2-D3/A2
0003000A <AmiBlitz3.ab2@21996>     MOVEA.l A2,A1
0003000C <AmiBlitz3.ab2@21997>     MOVE.l D2,D0
0003000E <AmiBlitz3.ab2@21998>     MOVEA.l (A2),A2
00030014 <AmiBlitz3.ab2@21999>     MOVE.l mempool,a0
00030018 <AmiBlitz3.ab2@22000>     JSR _FreePooled(A6)
0003001C <AmiBlitz3.ab2@22001> BRA.w freelist__loop
0003001E <AmiBlitz3.ab2@22004> RTS
00030024 <AmiBlitz3.ab2@22007> JMP eselerr
00030028 <AmiBlitz3.ab2@22010> firstsel:  Ds.l 1
0003002C <AmiBlitz3.ab2@22013> selpushb:   Dc.b $02,$40,$00,$FF                           ;ANDI.W  #$00FF,D0
0003002E <AmiBlitz3.ab2@22016> selpushw:   MOVE.w D0,-(A7)
00030030 <AmiBlitz3.ab2@22018> selpushl:   MOVE.l D0,-(A7)
00030034 <AmiBlitz3.ab2@22020> selpushs:   LEA $4(A7),A2                                  ;(a7)=len of string!
00030038 <AmiBlitz3.ab2@22023> selcomb:    ANDI.w #$FF,D0
0003003A <AmiBlitz3.ab2@22024> selcomw:    CMP.w (A7),D0
0003003C <AmiBlitz3.ab2@22026> selcoml:    CMP.l (A7),D0
00030040 <AmiBlitz3.ab2@22028> selbne:     BNE.w selbne
00030042 <AmiBlitz3.ab2@22030> endsel:     ADDQ.w #8,A7
00030046 <AmiBlitz3.ab2@22036>   MOVE.l firstsel(PC),D0                                  
0003004A <AmiBlitz3.ab2@22037>    BEQ.w JUMP_eselerr
0003004C <AmiBlitz3.ab2@22038>   MOVEA.l D0,A2
00030050 <AmiBlitz3.ab2@22039>    BSR.w JL_0_CDFC
00030056 <AmiBlitz3.ab2@22042>   MOVEA.l _execbase,A6
0003005A <AmiBlitz3.ab2@22045>   MOVE.l $4(A2),D0
0003005E <AmiBlitz3.ab2@22046>    BEQ.w doendsel__done
00030060 <AmiBlitz3.ab2@22047>   MOVEA.l D0,A3
00030064 <AmiBlitz3.ab2@22048>   MOVEA.l $4(A3),A0
0003006A <AmiBlitz3.ab2@22049>   MOVE.l destpointer,D1
0003006C <AmiBlitz3.ab2@22050>   SUB.l A0,D1
00030072 <AmiBlitz3.ab2@22052>     TST.b fast
00030076 <AmiBlitz3.ab2@22053>     BEQ doendsel__loop_l1
0003007C <AmiBlitz3.ab2@22054>     MOVE.w dontwrite,D0
00030080 <AmiBlitz3.ab2@22055>     BNE.w doendsel__skip
00030082 <AmiBlitz3.ab2@22056>     ADDQ.l #2,d1
00030086 <AmiBlitz3.ab2@22057>     MOVE.l d1,-2(a0)
0003008A <AmiBlitz3.ab2@22058>   BRA doendsel__skip
00030090 <AmiBlitz3.ab2@22062>   TST.w dontwrite
00030094 <AmiBlitz3.ab2@22063>      BNE.w doendsel__skip
0003009A <AmiBlitz3.ab2@22064>   CMP.l #MaxWordSgnd,D1
0003009E <AmiBlitz3.ab2@22065>    BHI.w JUMP_cbraerr
000300A0 <AmiBlitz3.ab2@22066>   MOVE.w D1,(A0)
000300A4 <AmiBlitz3.ab2@22069>   MOVE.l (A3),$4(A2)                                       ;next of me is new first
000300A6 <AmiBlitz3.ab2@22070>   MOVEA.l A3,A1
000300A8 <AmiBlitz3.ab2@22071>   MOVEQ.l #$08,D0
000300AE <AmiBlitz3.ab2@22072>   MOVE.l mempool,a0
000300B2 <AmiBlitz3.ab2@22073>    JSR _FreePooled(A6)
000300B6 <AmiBlitz3.ab2@22074> BRA.w doendsel__loop
000300BC <AmiBlitz3.ab2@22077>   JSR popselect                                            ;fix stack on select
000300C0 <AmiBlitz3.ab2@22078>   MOVEA.l firstsel(PC),A1
000300C6 <AmiBlitz3.ab2@22079>   MOVE.l (A1),firstsel
000300C8 <AmiBlitz3.ab2@22080>   MOVEQ.l #$0E,D0
000300CE <AmiBlitz3.ab2@22081>   MOVEA.l _execbase,A6
000300D4 <AmiBlitz3.ab2@22082>   MOVE.l mempool,a0
000300D8 <AmiBlitz3.ab2@22083>   JSR _FreePooled(A6)
000300DE <AmiBlitz3.ab2@22084> JMP get1bytemain
000300E0 <AmiBlitz3.ab2@22088>   MOVEA.l (A7)+,A1
000300E2 <AmiBlitz3.ab2@22089>   SUBQ.w #8,A1
000300E4 <AmiBlitz3.ab2@22090>   MOVEQ.l #$09,D0
000300E6 <AmiBlitz3.ab2@22091>   ADD.l (A1),D0
000300E8 <AmiBlitz3.ab2@22094>   ADDQ.w #2,A7                                             ;for runtime errs!
000300EC <AmiBlitz3.ab2@22099>   MOVE.l firstsel(PC),D0
000300F0 <AmiBlitz3.ab2@22100>    BEQ.w JUMP_defaerr
000300F2 <AmiBlitz3.ab2@22101>   MOVEA.l D0,A2
000300F6 <AmiBlitz3.ab2@22102>   BSR.w JL_0_CE26
000300FA <AmiBlitz3.ab2@22103>   BSR.w JL_0_CDFC
000300FE <AmiBlitz3.ab2@22104>   CLR.l $8(A2)
00030102 <AmiBlitz3.ab2@22105>   MOVE.w $C(A2),D2
00030106 <AmiBlitz3.ab2@22106> BRA.w JL_0_CE5E
0003010C <AmiBlitz3.ab2@22109> JMP defaerr
00030110 <AmiBlitz3.ab2@22112>   MOVE.l $8(A2),D0
00030114 <AmiBlitz3.ab2@22113>    BEQ.w JL_0_CE24
00030116 <AmiBlitz3.ab2@22114>   MOVEA.l D0,A0
0003011C <AmiBlitz3.ab2@22115>   MOVE.l destpointer,D1
0003011E <AmiBlitz3.ab2@22116>   SUB.l A0,D1
00030124 <AmiBlitz3.ab2@22118>     TST.b fast
00030128 <AmiBlitz3.ab2@22119>     BEQ 'l1
0003012E <AmiBlitz3.ab2@22120>     TST.w dontwrite
00030132 <AmiBlitz3.ab2@22121>     BNE.w JL_0_CE24
00030134 <AmiBlitz3.ab2@22122>     ADDQ.l #2,d1
00030138 <AmiBlitz3.ab2@22123>     MOVE.l D1,-2(A0)
0003013C <AmiBlitz3.ab2@22124>   BRA JL_0_CE24
00030142 <AmiBlitz3.ab2@22128>   TST.w dontwrite
00030146 <AmiBlitz3.ab2@22129>      BNE.w JL_0_CE24
0003014C <AmiBlitz3.ab2@22130>    CMP.l #MaxWordSgnd,D1
00030150 <AmiBlitz3.ab2@22131>    BHI.w JUMP_cbraerr
00030152 <AmiBlitz3.ab2@22132>   MOVE.w D1,(A0)
00030154 <AmiBlitz3.ab2@22135> RTS
0003015A <AmiBlitz3.ab2@22138> JMP cbraerr
0003015E <AmiBlitz3.ab2@22142>   MOVE.l $8(A2),D0
00030162 <AmiBlitz3.ab2@22143>    BEQ.w JL_0_CE5C
00030164 <AmiBlitz3.ab2@22144>   MOVEA.l D0,A3
00030168 <AmiBlitz3.ab2@22145>   MOVE.w #$6000,D1
0003016E <AmiBlitz3.ab2@22147>    TST.b fast
00030172 <AmiBlitz3.ab2@22148>    BEQ 'l1
00030178 <AmiBlitz3.ab2@22149>    OR.l #$ff,d1
0003017C <AmiBlitz3.ab2@22150>    BSR writeword
00030180 <AmiBlitz3.ab2@22154>   BSR.w writeword
00030182 <AmiBlitz3.ab2@22155>   MOVEQ.l #$08,D0
00030184 <AmiBlitz3.ab2@22156>   MOVEQ.l #$01,D1
0003018A <AmiBlitz3.ab2@22157>   MOVEA.l _execbase,A6
00030190 <AmiBlitz3.ab2@22158>   MOVE.l mempool,a0
00030194 <AmiBlitz3.ab2@22159>   JSR _AllocPooled(a6)
00030196 <AmiBlitz3.ab2@22161>   MOVEA.l D0,A0
0003019A <AmiBlitz3.ab2@22162>   MOVE.l $4(A2),(A0)
0003019E <AmiBlitz3.ab2@22163>   MOVE.l A0,$4(A2)
000301A6 <AmiBlitz3.ab2@22164>   MOVE.l destpointer,$4(A0)
000301AA <AmiBlitz3.ab2@22165> BRA.w writeword
000301AC <AmiBlitz3.ab2@22168> RTS
000301B2 <AmiBlitz3.ab2@22172>   TST.b debugmode
000301B6 <AmiBlitz3.ab2@22173>    BEQ.w JL_0_CE7A
000301BA <AmiBlitz3.ab2@22174>   MOVE.w #$C313,D1
000301BE <AmiBlitz3.ab2@22175>   CMP.w #$3,D2
000301C2 <AmiBlitz3.ab2@22176>    BCS.w JL_0_CE76
000301C4 <AmiBlitz3.ab2@22177>   ADDQ.w #1,D1
000301C8 <AmiBlitz3.ab2@22180> BRA.w Atokejsr
000301CA <AmiBlitz3.ab2@22183> RTS
000301D0 <AmiBlitz3.ab2@22187> JMP caseerr
000301D4 <AmiBlitz3.ab2@22190>   MOVE.l firstsel(PC),D0
000301D8 <AmiBlitz3.ab2@22191>    BEQ.w JUMP_caseerr
000301DA <AmiBlitz3.ab2@22192>   MOVEA.l D0,A2
000301DE <AmiBlitz3.ab2@22193>    BSR.w JL_0_CE26
000301E2 <AmiBlitz3.ab2@22194>    BSR.w JL_0_CDFC
000301E6 <AmiBlitz3.ab2@22195>   MOVE.w $C(A2),D2
000301E8 <AmiBlitz3.ab2@22196>   MOVE.w D2,-(A7)
000301EC <AmiBlitz3.ab2@22197>    BSR.w JL_0_CE5E
000301EE <AmiBlitz3.ab2@22198>   MOVE.w (A7),D2
000301F2 <AmiBlitz3.ab2@22199>    BSR.w bakeval
000301F4 <AmiBlitz3.ab2@22200>   MOVE.w (A7)+,D2
000301F8 <AmiBlitz3.ab2@22201>   LEA selcomb(PC),A0
000301FC <AmiBlitz3.ab2@22202>   LEA selcombf(PC),A1
00030200 <AmiBlitz3.ab2@22203>   CMP.w #$1,D2
00030204 <AmiBlitz3.ab2@22204>    BEQ.w JL_0_CED8
00030208 <AmiBlitz3.ab2@22205>   LEA selcomw(PC),A0
0003020C <AmiBlitz3.ab2@22206>   CMP.w #$2,D2
00030210 <AmiBlitz3.ab2@22207>    BEQ.w JL_0_CED8
00030214 <AmiBlitz3.ab2@22208>   LEA selcoml(PC),A0
00030218 <AmiBlitz3.ab2@22209>   LEA selcomlf(PC),A1
0003021C <AmiBlitz3.ab2@22210>   CMP.w #$7,D2
00030220 <AmiBlitz3.ab2@22211>    BCS.w JL_0_CED8
00030224 <AmiBlitz3.ab2@22213>   MOVE.w #$CE01,D1
00030228 <AmiBlitz3.ab2@22214>    BSR.w Atokejsr
0003022C <AmiBlitz3.ab2@22215> BRA.w JL_0_CEDC
00030230 <AmiBlitz3.ab2@22218>   BSR.w pokecode
00030234 <AmiBlitz3.ab2@22221>   MOVE.w selbne(PC),D1
0003023A <AmiBlitz3.ab2@22223>     TST.b fast
0003023E <AmiBlitz3.ab2@22224>     BEQ 'l1
00030244 <AmiBlitz3.ab2@22225>     ORI.l #$ff,d1
00030248 <AmiBlitz3.ab2@22226>     BSR writeword
0003024C <AmiBlitz3.ab2@22229>   BSR.w writeword
00030250 <AmiBlitz3.ab2@22230>   MOVEA.l firstsel(PC),A0
00030258 <AmiBlitz3.ab2@22231>   MOVE.l destpointer,$8(A0)
0003025C <AmiBlitz3.ab2@22232> BRA.w writeword
00030260 <AmiBlitz3.ab2@22236> pcchk:      Dc.b $3F,$3C,$73,$45                           ;MOVE.W  #$7345,-(A7)   ;#"sE",-(a7) org source
00030262 <AmiBlitz3.ab2@22237> clrst:      Dc.b $42,$A7                                   ;CLR.L   -(A7)
00030266 <AmiBlitz3.ab2@22240> sellineat:  Ds.l 1
0003026C <AmiBlitz3.ab2@22246>   TST.b debugmode
00030270 <AmiBlitz3.ab2@22247>    BEQ.w JL_0_CF0E
00030274 <AmiBlitz3.ab2@22248>   MOVE.l pcchk(PC),D1                                      ;move #"sE",-(a7)
00030278 <AmiBlitz3.ab2@22249>    BSR.w writelong
00030282 <AmiBlitz3.ab2@22252>   MOVE.l linenumat,sellineat
0003028C <AmiBlitz3.ab2@22254>    MOVE.l destpointer,pushpc
00030296 <AmiBlitz3.ab2@22255>   MOVE.l hunkoffsetbase,pushoff
00030298 <AmiBlitz3.ab2@22256>   MOVEQ.l #$00,D2
0003029C <AmiBlitz3.ab2@22257>    BSR.w bakevalu                                          ;Evaluate
000302A0 <AmiBlitz3.ab2@22258>    BSR.w JL_0_B5D2
000302A4 <AmiBlitz3.ab2@22259>   CMP.w #$7,D2
000302A8 <AmiBlitz3.ab2@22260>    BNE.w JL_0_CF36
000302AC <AmiBlitz3.ab2@22261>   MOVE.w clrst(PC),D1
000302B0 <AmiBlitz3.ab2@22262>    BSR.w writeword
000302B4 <AmiBlitz3.ab2@22265>    BSR.w JL_0_B63C
000302B8 <AmiBlitz3.ab2@22266>   LEA selpushb(PC),A0
000302BC <AmiBlitz3.ab2@22267>   LEA selpushbf(PC),A1
000302C0 <AmiBlitz3.ab2@22268>   CMP.w #$1,D2
000302C4 <AmiBlitz3.ab2@22269>    BEQ.w JL_0_CF88
000302C8 <AmiBlitz3.ab2@22270>   LEA selpushw(PC),A0
000302CC <AmiBlitz3.ab2@22271>   CMP.w #$2,D2
000302D0 <AmiBlitz3.ab2@22272>    BEQ.w JL_0_CF88
000302D4 <AmiBlitz3.ab2@22273>   LEA selpushl(PC),A0
000302D8 <AmiBlitz3.ab2@22274>   LEA selpushlf(PC),A1
000302DC <AmiBlitz3.ab2@22275>   CMP.w #$7,D2
000302E0 <AmiBlitz3.ab2@22276>    BCS.w JL_0_CF88
000302E6 <AmiBlitz3.ab2@22278>   MOVE.w moved0a3,D1                                       ;d0 to a3!
000302EA <AmiBlitz3.ab2@22279>    BSR.w writeword
000302EE <AmiBlitz3.ab2@22280>   LEA selpushs(PC),A0
000302F2 <AmiBlitz3.ab2@22281>   LEA selpushsf(PC),A1
000302F6 <AmiBlitz3.ab2@22282>    BSR.w pokecode
000302FA <AmiBlitz3.ab2@22283>   MOVE.w #$C701,D1
000302FE <AmiBlitz3.ab2@22284>    BSR.w Atokejsr
00030302 <AmiBlitz3.ab2@22285> BRA.w JL_0_CF8C
00030306 <AmiBlitz3.ab2@22288>   BSR.w pokecode
00030308 <AmiBlitz3.ab2@22291>   MOVEQ.l #$0E,D0
0003030A <AmiBlitz3.ab2@22292>   MOVEQ.l #$01,D1
00030310 <AmiBlitz3.ab2@22293>   MOVEA.l _execbase,A6
00030316 <AmiBlitz3.ab2@22295>   MOVE.l mempool,a0
0003031A <AmiBlitz3.ab2@22296>   JSR _AllocPooled(a6)
0003031C <AmiBlitz3.ab2@22297>   MOVEA.l D0,A0
00030320 <AmiBlitz3.ab2@22298>   MOVE.l firstsel(PC),(A0)
00030326 <AmiBlitz3.ab2@22299>   MOVE.l A0,firstsel
0003032A <AmiBlitz3.ab2@22300>   CLR.l $4(A0)
0003032E <AmiBlitz3.ab2@22301>   CLR.l $8(A0)
00030332 <AmiBlitz3.ab2@22302>   MOVE.w D2,$C(A0)
00030334 <AmiBlitz3.ab2@22303> RTS
0003033A <AmiBlitz3.ab2@22307>   MOVE.l firstrep,D0
0003033E <AmiBlitz3.ab2@22308>    BEQ.w JUMP_unterr1
00030342 <AmiBlitz3.ab2@22309>   MOVE.w #$6000,D1
00030346 <AmiBlitz3.ab2@22310>   BSR.w writeword
00030348 <AmiBlitz3.ab2@22311>   MOVEA.l D0,A0
0003034C <AmiBlitz3.ab2@22312>   MOVE.l $4(A0),D1
00030352 <AmiBlitz3.ab2@22313>   SUB.l destpointer,D1
00030354 <AmiBlitz3.ab2@22314>   TST.w D1
00030358 <AmiBlitz3.ab2@22315>    BPL.w JUMP_unterr2
0003035C <AmiBlitz3.ab2@22316>   BSR.w writeword
00030362 <AmiBlitz3.ab2@22317>   MOVEA.l _execbase,A6
00030366 <AmiBlitz3.ab2@22318> BRA.w JL_0_D036
0003036C <AmiBlitz3.ab2@22321> JMP unterr2
00030372 <AmiBlitz3.ab2@22324> JMP unterr1
00030378 <AmiBlitz3.ab2@22328>   MOVE.l firstrep,D0
0003037C <AmiBlitz3.ab2@22329>    BEQ.w JUMP_unterr1
00030380 <AmiBlitz3.ab2@22330>   BSR.w do_if
00030386 <AmiBlitz3.ab2@22331>   JSR reget
0003038A <AmiBlitz3.ab2@22332>    BNE.w JUMP_syntaxerr
00030390 <AmiBlitz3.ab2@22333>   MOVE.w dontwrite,D1
00030394 <AmiBlitz3.ab2@22334>    BNE.w JL_0_D020
0003039A <AmiBlitz3.ab2@22335>   MOVEA.l firstrep,A0
000303A0 <AmiBlitz3.ab2@22336>   MOVEA.l destpointer,A1
000303A6 <AmiBlitz3.ab2@22338>     TST.b fast
000303AA <AmiBlitz3.ab2@22339>     BEQ 'l1
000303AC <AmiBlitz3.ab2@22340>     SUBQ.w #4,a1
000303B0 <AmiBlitz3.ab2@22341>     MOVE.l $4(A0),D2
000303B2 <AmiBlitz3.ab2@22342>     SUB.l A1,D2
000303B4 <AmiBlitz3.ab2@22343>     MOVE.l d2,(a1)
000303B8 <AmiBlitz3.ab2@22344>   BRA JL_0_D020
000303BA <AmiBlitz3.ab2@22348>   SUBQ.w #2,A1
000303BE <AmiBlitz3.ab2@22349>   MOVE.l $4(A0),D2
000303C0 <AmiBlitz3.ab2@22350>   SUB.l A1,D2
000303C2 <AmiBlitz3.ab2@22351>   TST.w D2
000303C6 <AmiBlitz3.ab2@22352>    BPL.w JUMP_unterr2
000303C8 <AmiBlitz3.ab2@22353>   MOVE.w D2,(A1)
000303CE <AmiBlitz3.ab2@22356>   MOVEA.l firstiff,A1
000303D4 <AmiBlitz3.ab2@22357>   MOVE.l (A1),firstiff
000303D6 <AmiBlitz3.ab2@22358>   MOVEQ.l #$0E,D0
000303DC <AmiBlitz3.ab2@22359>   MOVEA.l _execbase,A6
000303E2 <AmiBlitz3.ab2@22360>   MOVE.l mempool,a0
000303E6 <AmiBlitz3.ab2@22361>   JSR _FreePooled(A6)
000303EC <AmiBlitz3.ab2@22364>   MOVEA.l firstrep,A1
000303F2 <AmiBlitz3.ab2@22365>   MOVE.l (A1),firstrep
000303F4 <AmiBlitz3.ab2@22366>   MOVEQ.l #$08,D0
000303FA <AmiBlitz3.ab2@22367>   MOVE.l mempool,a0
000303FE <AmiBlitz3.ab2@22368> JMP _FreePooled(A6)
00030402 <AmiBlitz3.ab2@22371> iflineat:   Ds.l 1
00030404 <AmiBlitz3.ab2@22375>   MOVEQ.l #$00,D2
0003040A <AmiBlitz3.ab2@22376>   TST.b fast
0003040E <AmiBlitz3.ab2@22377>   BEQ 'l1
00030416 <AmiBlitz3.ab2@22378>   MOVE.b #1,nostringopt
0003041E <AmiBlitz3.ab2@22379>   MOVE.b #1,iniffcommand
00030420 <AmiBlitz3.ab2@22383>   MOVEQ.l #$00,D1
00030422 <AmiBlitz3.ab2@22386>   MOVE.w D1,-(A7)
00030428 <AmiBlitz3.ab2@22387>   MOVE.l destpointer,-(A7)
0003042A <AmiBlitz3.ab2@22388>   MOVE.w D2,-(A7)
00030434 <AmiBlitz3.ab2@22389>   MOVE.l linenumat,iflineat
00030436 <AmiBlitz3.ab2@22390>   MOVEQ.l #$00,D2
00030440 <AmiBlitz3.ab2@22391>   MOVE.b optistring,optistring2
00030448 <AmiBlitz3.ab2@22392>   MOVE.b #1,optistring
0003044C <AmiBlitz3.ab2@22393>   BSR.w bakevalu
00030456 <AmiBlitz3.ab2@22394>   MOVE.b optistring2,optistring
0003045A <AmiBlitz3.ab2@22395>   CMP.w #$5,D2
0003045E <AmiBlitz3.ab2@22396>    BEQ.w JL_0_D09C
00030462 <AmiBlitz3.ab2@22397>   MOVE.w thetst1(PC),D1
00030466 <AmiBlitz3.ab2@22398>   CMP.w #$1,D2
0003046A <AmiBlitz3.ab2@22399>    BEQ.w writebranchcode
0003046E <AmiBlitz3.ab2@22400>   MOVE.w thetst2(PC),D1
00030472 <AmiBlitz3.ab2@22401>   CMP.w #$2,D2
00030476 <AmiBlitz3.ab2@22402>    BEQ.w writebranchcode
0003047A <AmiBlitz3.ab2@22403>   MOVE.w thetst4(PC),D1
0003047E <AmiBlitz3.ab2@22404>   CMP.w #$7,D2
00030482 <AmiBlitz3.ab2@22405>    BEQ.w writebranchcode
00030486 <AmiBlitz3.ab2@22406>   MOVE.w thetst3(PC),D1
0003048A <AmiBlitz3.ab2@22407> BRA.w writebranchcode
00030490 <AmiBlitz3.ab2@22410>   TST.b fpu
00030494 <AmiBlitz3.ab2@22411>   BEQ 'dofpu
0003049A <AmiBlitz3.ab2@22412>   MOVE.l #$f200003a,d1
0003049E <AmiBlitz3.ab2@22413>   BSR writelong
000304A2 <AmiBlitz3.ab2@22414>   MOVE.w #$f2c1,d1
000304A6 <AmiBlitz3.ab2@22415>   BSR writeword
000304AA <AmiBlitz3.ab2@22416>   BSR writelong
000304AC <AmiBlitz3.ab2@22417>   ADDQ.l #2,a7
000304B0 <AmiBlitz3.ab2@22418> BRA.w br2
000304B4 <AmiBlitz3.ab2@22421>    MOVE.w #$C900,D1
000304B8 <AmiBlitz3.ab2@22422>    BSR.w Atokejsr
000304BC <AmiBlitz3.ab2@22423>   MOVE.l thetst5(PC),D1
000304C0 <AmiBlitz3.ab2@22424>    BSR.w writelong
000304C4 <AmiBlitz3.ab2@22425> BRA.w JL_0_D0B4
000304CA <AmiBlitz3.ab2@22429>          CLR.b iniffcommand
000304D0 <AmiBlitz3.ab2@22430>          TST.b fast                                        ;branchcode
000304D4 <AmiBlitz3.ab2@22431>          BEQ b6
000304DA <AmiBlitz3.ab2@22432>          TST.b fpu
000304DE <AmiBlitz3.ab2@22433>          BEQ 'nofpu
000304E4 <AmiBlitz3.ab2@22437>           MOVE.l destpointer,a0
000304EA <AmiBlitz3.ab2@22438>          SUB.l load_var_addr,a0
000304F0 <AmiBlitz3.ab2@22439>          CMP.l #4,a0
000304F4 <AmiBlitz3.ab2@22440>          BEQ 'nofpu
000304FC <AmiBlitz3.ab2@22441>          CMP.l #$f2400014,-4(a4)                           ;<
00030500 <AmiBlitz3.ab2@22442>          BNE 'nolt
00030506 <AmiBlitz3.ab2@22443>          SUBQ.l #2,destpointer
0003050C <AmiBlitz3.ab2@22444>          MOVE.w #$f293,-4(a4)                              ;
00030510 <AmiBlitz3.ab2@22445> BRA 'brf
00030518 <AmiBlitz3.ab2@22448>   CMP.l #$f2400015,-4(a4)                                  ;<=
0003051C <AmiBlitz3.ab2@22449>          BNE 'nole
00030522 <AmiBlitz3.ab2@22450>          SUBQ.l #2,destpointer
00030528 <AmiBlitz3.ab2@22451>          MOVE.w #$f292,-4(a4)
0003052C <AmiBlitz3.ab2@22452> BRA 'brf
00030534 <AmiBlitz3.ab2@22455>   CMP.l #$f2400013,-4(a4)                                  ;=>
00030538 <AmiBlitz3.ab2@22456>          BNE 'noge
0003053E <AmiBlitz3.ab2@22457>          SUBQ.l #2,destpointer
00030544 <AmiBlitz3.ab2@22458>          MOVE.w #$f294,-4(a4)
00030548 <AmiBlitz3.ab2@22459> BRA 'brf
00030550 <AmiBlitz3.ab2@22462>   CMP.l #$f2400012,-4(a4)                                  ;>
00030554 <AmiBlitz3.ab2@22463>          BNE 'nogt
0003055A <AmiBlitz3.ab2@22464>          SUBQ.l #2,destpointer
00030560 <AmiBlitz3.ab2@22465>          MOVE.w #$f295,-4(a4)
00030564 <AmiBlitz3.ab2@22466> BRA 'brf
0003056C <AmiBlitz3.ab2@22469>   CMP.l #$f2400001,-4(a4)                                  ;=
00030570 <AmiBlitz3.ab2@22470>          BNE 'noeq
00030576 <AmiBlitz3.ab2@22471>          SUBQ.l #2,destpointer
0003057C <AmiBlitz3.ab2@22472>          MOVE.w #$f28e,-4(a4)
00030580 <AmiBlitz3.ab2@22473> BRA 'brf
00030588 <AmiBlitz3.ab2@22476>   CMP.l #$f240000e,-4(a4)                                  ;<>
0003058C <AmiBlitz3.ab2@22477>          BNE 'none
00030592 <AmiBlitz3.ab2@22478>          SUBQ.l #2,destpointer
00030598 <AmiBlitz3.ab2@22479>          MOVE.w #$f281,-4(a4)
0003059A <AmiBlitz3.ab2@22482>   ADDQ.l #2,a7
000305A0 <AmiBlitz3.ab2@22484>     TST.b fast
000305A4 <AmiBlitz3.ab2@22485>     BEQ 'l1
000305AA <AmiBlitz3.ab2@22486>     OR.b #$40,-3(a4)
000305AE <AmiBlitz3.ab2@22487>     BSR writeword
000305B2 <AmiBlitz3.ab2@22491>  BSR writeword
000305B6 <AmiBlitz3.ab2@22492> BRA.s br2
000305BC <AmiBlitz3.ab2@22496>   MOVE.l destpointer,a0
000305C2 <AmiBlitz3.ab2@22497>          SUB.l load_var_addr,a0
000305C8 <AmiBlitz3.ab2@22498>          CMP.l #4,a0
000305CC <AmiBlitz3.ab2@22499>          BEQ JL_0_D0B4
000305D2 <AmiBlitz3.ab2@22500>          CMP.w #$4eb9,-6(a4)
000305D6 <AmiBlitz3.ab2@22501>          BEQ b6
000305DC <AmiBlitz3.ab2@22502>          CMP.w #$5ec0,-2(a4)                               ;>
000305E0 <AmiBlitz3.ab2@22503>      BNE.s 'lb1
000305E6 <AmiBlitz3.ab2@22504>          MOVE.w #$6f00,-2(a4)                              ;ble
000305EA <AmiBlitz3.ab2@22505> BRA.s br
000305F0 <AmiBlitz3.ab2@22508>  CMP.w #$5dc0,-2(a4)                                       ;<
000305F4 <AmiBlitz3.ab2@22509>   BNE.s 'lb2
000305FA <AmiBlitz3.ab2@22510>          MOVE.w #$6c00,-2(a4)                              ;bge
000305FE <AmiBlitz3.ab2@22511> BRA.s br
00030604 <AmiBlitz3.ab2@22514>   CMP.w #$57c0,-2(a4)                                      ;=
00030608 <AmiBlitz3.ab2@22515>   BNE.s 'lb3
0003060E <AmiBlitz3.ab2@22516>          MOVE.w #$6600,-2(a4)                              ;bne
00030612 <AmiBlitz3.ab2@22517> BRA.s br
00030618 <AmiBlitz3.ab2@22520>   CMP.w #$56c0,-2(a4)                                      ;<>
0003061C <AmiBlitz3.ab2@22521>   BNE.s 'lb4
00030622 <AmiBlitz3.ab2@22522>          MOVE.w #$6700,-2(a4)                              ;beq
00030626 <AmiBlitz3.ab2@22523> BRA.s br
0003062C <AmiBlitz3.ab2@22526>   CMP.w #$5cc0,-2(a4)                                      ;>=
00030630 <AmiBlitz3.ab2@22527>   BNE.s 'lb5
00030636 <AmiBlitz3.ab2@22528>          MOVE.w #$6d00,-2(a4)                              ;blt
0003063A <AmiBlitz3.ab2@22529> BRA.s br
00030640 <AmiBlitz3.ab2@22532>   CMP.w #$5fc0,-2(a4)                                      ;<=
00030644 <AmiBlitz3.ab2@22533>         BNE.s b6
0003064A <AmiBlitz3.ab2@22534>          MOVE.w #$6e00,-2(a4)                              ;bgt
0003064C <AmiBlitz3.ab2@22537>   TST.w (a7)+
00030652 <AmiBlitz3.ab2@22539>         TST.b fast
00030656 <AmiBlitz3.ab2@22540>         BEQ 'l1
0003065C <AmiBlitz3.ab2@22541>         OR.b #$ff,-1(a4)                                   ;long branches
00030660 <AmiBlitz3.ab2@22542>         BSR writeword
00030664 <AmiBlitz3.ab2@22546>         BSR writeword
00030668 <AmiBlitz3.ab2@22547> BRA.s br2
0003066C <AmiBlitz3.ab2@22550>   BSR.w writeword
00030670 <AmiBlitz3.ab2@22553>   MOVE.l posbr(PC),D1
00030672 <AmiBlitz3.ab2@22554>   TST.w (A7)+
00030676 <AmiBlitz3.ab2@22555>    BEQ.w JL_0_D0C2
0003067A <AmiBlitz3.ab2@22556>   MOVE.l negbr(PC),D1
00030680 <AmiBlitz3.ab2@22559>   TST.b fast
00030684 <AmiBlitz3.ab2@22560>            BEQ 'l1
0003068A <AmiBlitz3.ab2@22561>            OR.l #$00ff0000,d1
0003068E <AmiBlitz3.ab2@22562>            BSR writelong
00030692 <AmiBlitz3.ab2@22563>            BSR writeword
00030696 <AmiBlitz3.ab2@22564> BRA br2
0003069A <AmiBlitz3.ab2@22567>   BSR.w writelong
0003069C <AmiBlitz3.ab2@22570>  MOVEQ.l #$0E,D0
0003069E <AmiBlitz3.ab2@22571>   MOVEQ.l #$01,D1
000306A4 <AmiBlitz3.ab2@22572>   MOVEA.l _execbase,A6
000306AA <AmiBlitz3.ab2@22574>   MOVE.l mempool,a0
000306AE <AmiBlitz3.ab2@22575>   JSR _AllocPooled(a6)
000306B0 <AmiBlitz3.ab2@22576>   MOVEA.l D0,A0
000306B6 <AmiBlitz3.ab2@22577>   MOVE.l firstiff,(A0)
000306BC <AmiBlitz3.ab2@22578>   MOVE.l A0,firstiff
000306C0 <AmiBlitz3.ab2@22579>   MOVE.l (A7)+,$4(A0)
000306C8 <AmiBlitz3.ab2@22580>   MOVE.l destpointer,$8(A0)
000306CC <AmiBlitz3.ab2@22581>   MOVE.w (A7)+,$C(A0)
000306D2 <AmiBlitz3.ab2@22582>    JSR reget
000306D6 <AmiBlitz3.ab2@22583>    BEQ.w JL_0_D10C
000306DC <AmiBlitz3.ab2@22584>   BSET #$7,$C(A0)
000306E6 <AmiBlitz3.ab2@22588>   MOVE.w oldqflag,instringon
000306EC <AmiBlitz3.ab2@22589>   MOVEA.l lastsourcepos,A5
000306F4 <AmiBlitz3.ab2@22590>   MOVE.w #$003A,lastchar
000306F6 <AmiBlitz3.ab2@22593> RTS
000306FA <AmiBlitz3.ab2@22597>   CMP.w #$1,D0
000306FE <AmiBlitz3.ab2@22598>    BLT.w JL_0_D128
00030702 <AmiBlitz3.ab2@22599>   CMP.w #$0,D0
00030706 <AmiBlitz3.ab2@22600>    BGT.w JL_0_D128
00030708 <AmiBlitz3.ab2@22601>   ADD.w D0,D0
0003070A <AmiBlitz3.ab2@22602>   ADD.w D0,D0
0003070E <AmiBlitz3.ab2@22603>   MOVEA.l JL_0_D128(PC,D0.W),A0
00030710 <AmiBlitz3.ab2@22606> JMP (A0)
00030714 <AmiBlitz3.ab2@22609> BRA.w JL_0_D128
00030718 <AmiBlitz3.ab2@22613>   CMP.w #$1,D0
0003071C <AmiBlitz3.ab2@22614>    BLT.w JL_0_D146
00030720 <AmiBlitz3.ab2@22615>   CMP.w #$0,D0
00030724 <AmiBlitz3.ab2@22616>    BGT.w JL_0_D146
00030726 <AmiBlitz3.ab2@22617>   ADD.w D0,D0
00030728 <AmiBlitz3.ab2@22618>   ADD.w D0,D0
0003072C <AmiBlitz3.ab2@22619>   MOVEA.l JL_0_D146(PC,D0.W),A0
0003072E <AmiBlitz3.ab2@22622>   JSR (A0)
00030732 <AmiBlitz3.ab2@22625> BRA.w JL_0_D146
00030736 <AmiBlitz3.ab2@22629>   CMP.w #$1,D0
0003073A <AmiBlitz3.ab2@22630>    BLT.w JL_0_D168
0003073E <AmiBlitz3.ab2@22631>   CMP.w #$0,D0
00030742 <AmiBlitz3.ab2@22632>    BGT.w JL_0_D168
00030744 <AmiBlitz3.ab2@22633>   ADD.w D0,D0
00030746 <AmiBlitz3.ab2@22634>   ADD.w D0,D0
0003074A <AmiBlitz3.ab2@22635>   MOVEA.l JL_0_D168(PC,D0.W),A0
0003074E <AmiBlitz3.ab2@22638>   MOVE.w #$6753,-(A7)                                      ;#'gS' ;for runtime error checking!
00030750 <AmiBlitz3.ab2@22641>    JSR (A0)
00030754 <AmiBlitz3.ab2@22644> BRA.w JL_0_D168
00030756 <AmiBlitz3.ab2@22647> labcnt:   Ds.w 1
00030758 <AmiBlitz3.ab2@22654>   MOVEQ.l #$02,D2
0003075C <AmiBlitz3.ab2@22655>    BSR.w bakeval
00030760 <AmiBlitz3.ab2@22656>   LEA JL_0_D10E(PC),A0
00030764 <AmiBlitz3.ab2@22657>   LEA JL_0_D12C(PC),A1
00030768 <AmiBlitz3.ab2@22658>   MOVE.w #$001A,D1
0003076C <AmiBlitz3.ab2@22659>   CMP.w #-$7FFB,D0
00030770 <AmiBlitz3.ab2@22660>    BEQ.w JL_0_D1B6
00030774 <AmiBlitz3.ab2@22661>   CMP.w #-$7FFA,D0
00030778 <AmiBlitz3.ab2@22662>    BNE.w JUMP_syntaxerr
0003077C <AmiBlitz3.ab2@22663>   LEA JL_0_D12C(PC),A0
00030780 <AmiBlitz3.ab2@22664>   LEA JL_0_D14A(PC),A1
00030784 <AmiBlitz3.ab2@22665>   MOVE.w #$001A,D1
0003078A <AmiBlitz3.ab2@22666>   TST.b debugmode
0003078E <AmiBlitz3.ab2@22667>    BEQ.b JL_0_D1B6
00030794 <AmiBlitz3.ab2@22668>    JSR chkstak
00030798 <AmiBlitz3.ab2@22669>   LEA JL_0_D14A(PC),A0
0003079C <AmiBlitz3.ab2@22670>   LEA labcnt(PC),A1
000307A0 <AmiBlitz3.ab2@22671>   MOVE.w #$001E,D1
000307A2 <AmiBlitz3.ab2@22674>   MOVE.w D1,-(A7)
000307A8 <AmiBlitz3.ab2@22675>   MOVE.l destpointer,-(A7)                                 ;for when we know number of labels!
000307AC <AmiBlitz3.ab2@22676>    BSR.w pokecode
000307B2 <AmiBlitz3.ab2@22677>   CLR.w labcnt
000307B8 <AmiBlitz3.ab2@22682>    JSR get1bytemain
000307BE <AmiBlitz3.ab2@22683>   SUBQ.l #2,destpointer                                    ;for makealab!
000307C2 <AmiBlitz3.ab2@22684>    BSR.w JL_0_AE22
000307C8 <AmiBlitz3.ab2@22685>   ADDQ.l #2,destpointer
000307CE <AmiBlitz3.ab2@22686>    JSR addoff
000307D2 <AmiBlitz3.ab2@22687>   MOVE.l $8(A2),D1
000307D6 <AmiBlitz3.ab2@22688>    BSR.w writelong
000307DC <AmiBlitz3.ab2@22689>   ADDQ.w #1,labcnt
000307E2 <AmiBlitz3.ab2@22690>    JSR reget
000307E6 <AmiBlitz3.ab2@22691>   CMP.w #$2C,D0
000307EA <AmiBlitz3.ab2@22692>    BEQ.w JL_0_D1C8
000307EC <AmiBlitz3.ab2@22693>   MOVEA.l (A7)+,A0
000307EE <AmiBlitz3.ab2@22694>   MOVE.w (A7)+,D2
000307F4 <AmiBlitz3.ab2@22695>   MOVE.w dontwrite,D1
000307F8 <AmiBlitz3.ab2@22696>    BNE.w JL_0_D21A
000307FC <AmiBlitz3.ab2@22697>   MOVE.w labcnt(PC),D1
00030800 <AmiBlitz3.ab2@22698>   MOVE.w D1,$A(A0)
00030802 <AmiBlitz3.ab2@22699>   ADD.w D1,D1
00030804 <AmiBlitz3.ab2@22700>   ADD.w D1,D1
00030806 <AmiBlitz3.ab2@22701>   ADDQ.w #2,D1
0003080A <AmiBlitz3.ab2@22702>   MOVE.w D1,$2(A0,D2.W)
0003080C <AmiBlitz3.ab2@22705> RTS
00030812 <AmiBlitz3.ab2@22709>   TST.b debugmode
00030816 <AmiBlitz3.ab2@22710>    BEQ.w JL_0_D236
0003081C <AmiBlitz3.ab2@22711>    JSR chkstak
00030822 <AmiBlitz3.ab2@22712>   MOVE.l AL_0_D162,D1
00030826 <AmiBlitz3.ab2@22713>    BSR.w writelong
0003082C <AmiBlitz3.ab2@22715>   MOVE.w gosubcode,D1
00030830 <AmiBlitz3.ab2@22716> BRA.w JL_0_D246
00030836 <AmiBlitz3.ab2@22720>   MOVE.w gotocode,D1
00030838 <AmiBlitz3.ab2@22723>   MOVE.w D1,-(A7)
0003083C <AmiBlitz3.ab2@22724>    BSR.w JL_0_AE22
0003083E <AmiBlitz3.ab2@22725>   MOVE.w (A7)+,D1
00030842 <AmiBlitz3.ab2@22726>    BSR.w writeword
00030848 <AmiBlitz3.ab2@22727>    JSR addoff
0003084C <AmiBlitz3.ab2@22728>   MOVE.l $8(A2),D1
00030850 <AmiBlitz3.ab2@22729> BRA.w writelong
00030856 <AmiBlitz3.ab2@22733>   MOVE.w proceduremode,D1
0003085A <AmiBlitz3.ab2@22734>    BEQ.w JUMP_badpenderr
0003085E <AmiBlitz3.ab2@22735>   MOVE.w #$4EF9,D1
00030862 <AmiBlitz3.ab2@22736>    BSR.w writeword
00030868 <AmiBlitz3.ab2@22737>    JSR addoff
0003086E <AmiBlitz3.ab2@22738>   MOVEA.l _execbase,A6
00030870 <AmiBlitz3.ab2@22739>   MOVEQ.l #$08,D0
00030872 <AmiBlitz3.ab2@22740>   MOVEQ.l #$01,D1
00030878 <AmiBlitz3.ab2@22742>   MOVE.l mempool,a0
0003087C <AmiBlitz3.ab2@22743>   JSR _AllocPooled(a6)
0003087E <AmiBlitz3.ab2@22744>   MOVEA.l D0,A0
00030884 <AmiBlitz3.ab2@22745>   MOVE.l firstpend,(A0)
0003088A <AmiBlitz3.ab2@22746>   MOVE.l A0,firstpend
00030892 <AmiBlitz3.ab2@22747>   MOVE.l destpointer,$4(A0)
00030896 <AmiBlitz3.ab2@22748> BRA.w writelong
0003089A <AmiBlitz3.ab2@22752>   BSR.w do_AsmExit
000308A0 <AmiBlitz3.ab2@22753> JMP get1bytemain
000308A8 <AmiBlitz3.ab2@22757>   MOVE.b #1,nostringopt
000308AC <AmiBlitz3.ab2@22758>   MOVEM.l a0/a1/d1,-(a7)
000308B2 <AmiBlitz3.ab2@22759>   MOVEA.l currentfunction,A0
000308B8 <AmiBlitz3.ab2@22760>     CMP.l #0,a0
000308BC <AmiBlitz3.ab2@22761>     BNE 'l1
000308C2 <AmiBlitz3.ab2@22762>     JMP errorasmexit
000308C4 <AmiBlitz3.ab2@22763> 'l1 MOVEQ.l #$00,D2
000308C8 <AmiBlitz3.ab2@22764>   MOVE.b $5(A0),D2
000308CC <AmiBlitz3.ab2@22765>   BSR.w eval
000308D2 <AmiBlitz3.ab2@22767>   MOVEA.l currentfunction,A0
000308D6 <AmiBlitz3.ab2@22768>   MOVE.l funcstruct_returntype(a0),a0
000308DC <AmiBlitz3.ab2@22769>   CMP.l #0,a0
000308E0 <AmiBlitz3.ab2@22770>   BEQ 'isstatement
000308E8 <AmiBlitz3.ab2@22771>   CMP.l #$100,4(a0)
000308EC <AmiBlitz3.ab2@22772>   BLT.w 'isvar
000308EE <AmiBlitz3.ab2@22773>   MOVE.l a2,a1
000308F4 <AmiBlitz3.ab2@22774>   TST.l typetocast
000308F8 <AmiBlitz3.ab2@22775>   BEQ 'nocast
000308FE <AmiBlitz3.ab2@22776>   MOVE.l typetocast,a1
00030900 <AmiBlitz3.ab2@22777> 'nocast  CMP.l a0,a1
00030904 <AmiBlitz3.ab2@22778>   BEQ 'ok
0003090A <AmiBlitz3.ab2@22779>   CLR.l typetocast
00030910 <AmiBlitz3.ab2@22780>   MOVE.l lasttoken,d1
00030914 <AmiBlitz3.ab2@22781>   CMP.w #$b581,d1                   ; ok, when token for null
00030918 <AmiBlitz3.ab2@22782>   BEQ 'isnull
0003091E <AmiBlitz3.ab2@22783> 'error  JMP errorconvertreturntype
00030922 <AmiBlitz3.ab2@22790>   MOVEM.l (a7)+,a0/a1/d1
00030926 <AmiBlitz3.ab2@22791> BRA.w do_AsmExit
0003092C <AmiBlitz3.ab2@22793> error_convert_types2 JMP error_convert_types
00030932 <AmiBlitz3.ab2@22806>   TST.b debugmode
00030936 <AmiBlitz3.ab2@22807>    BEQ.w JL_0_D2CA
0003093A <AmiBlitz3.ab2@22808>   MOVE.w #$C305,D1
0003093E <AmiBlitz3.ab2@22809> BRA.w Atokejsr
00030942 <AmiBlitz3.ab2@22812>   MOVE.w #$4E75,D1
00030946 <AmiBlitz3.ab2@22813> BRA.w writeword
0003094A <AmiBlitz3.ab2@22816> localslist:  Ds.l 1                                        ;all locals for procs.;??Looks like obsovled data??
0003094E <AmiBlitz3.ab2@22817> proclocals:  Ds.l 1                                        ;for debugga!
00030950 <AmiBlitz3.ab2@22818> procnum:     Ds.w 1
00030952 <AmiBlitz3.ab2@22819> procnum2:    Ds.w 1
00030956 <AmiBlitz3.ab2@22820> prolineat:   Ds.l 1
0003095C <AmiBlitz3.ab2@22824>    TST.w proceduremode
00030960 <AmiBlitz3.ab2@22825>    BGT JUMP_sreterr
00030964 <AmiBlitz3.ab2@22826>    CMP.w #-$7FF9,D0
00030968 <AmiBlitz3.ab2@22827>    BEQ.w JL_0_D29C
0003096A <AmiBlitz3.ab2@22828>    MOVEQ.l #-$01,D1
0003096E <AmiBlitz3.ab2@22829> BRA.w do_function2
00030974 <AmiBlitz3.ab2@22832> JMP sreterr
0003097A <AmiBlitz3.ab2@22836>   CLR.b skipfunc
00030980 <AmiBlitz3.ab2@22837>   TST.l unusedfunc
00030984 <AmiBlitz3.ab2@22838>   BEQ 'ex
00030988 <AmiBlitz3.ab2@22839>   MOVEM.l d0-d7/a0-a6,-(a7)
0003098E <AmiBlitz3.ab2@22840>   MOVE.l unusedfunc,d1
00030994 <AmiBlitz3.ab2@22841>   LEA ptr_parameterstore,a5
00030996 <AmiBlitz3.ab2@22844>   MOVE.l d1,a0
0003099A <AmiBlitz3.ab2@22845>   LEA 12(a0),a2
0003099C <AmiBlitz3.ab2@22846>   MOVE.l a5,a1
0003099E <AmiBlitz3.ab2@22848>   CMPM.b (a1)+,(a2)+
000309A2 <AmiBlitz3.ab2@22849>   BNE 'neq
000309A4 <AmiBlitz3.ab2@22850>   TST.b (a2)
000309A8 <AmiBlitz3.ab2@22851>   BNE 'ch
000309AA <AmiBlitz3.ab2@22852>   TST.b (a1)
000309AE <AmiBlitz3.ab2@22853>   BNE 'neq
000309B6 <AmiBlitz3.ab2@22854>   MOVE.b #1,skipfunc
000309BA <AmiBlitz3.ab2@22855> BRA 'out
000309BC <AmiBlitz3.ab2@22858>   MOVE.l (a0),d1
000309C0 <AmiBlitz3.ab2@22859>   BNE 'ag
000309C4 <AmiBlitz3.ab2@22862>   MOVEM.l (a7)+,d0-d7/a0-a6
000309C6 <AmiBlitz3.ab2@22865> RTS
000309CC <AmiBlitz3.ab2@22869> JMP dupprocerr
000309D2 <AmiBlitz3.ab2@22872> JMP illprocperr
000309DA <AmiBlitz3.ab2@22879>   CMP.w #-1,proceduremode                                  ;was JUMP_sreterr_2
000309DE <AmiBlitz3.ab2@22880>    BEQ JUMP_sreterr
000309E2 <AmiBlitz3.ab2@22881>   CMP.w #-$7FF9,D0
000309E6 <AmiBlitz3.ab2@22882>    BEQ.w do_function_return
000309F0 <AmiBlitz3.ab2@22885>   MOVE.w oldqflag,instringon
000309F6 <AmiBlitz3.ab2@22886>   MOVEA.l lastsourcepos,A5
000309FC <AmiBlitz3.ab2@22887>   JSR getfunctionreturntype
00030A02 <AmiBlitz3.ab2@22888>   JSR get1bytemain
00030A08 <AmiBlitz3.ab2@22891>   TST.b declare
00030A0C <AmiBlitz3.ab2@22892>   BEQ 'l1
00030A14 <AmiBlitz3.ab2@22893>   MOVE.b #1,nowdeclare
00030A1A <AmiBlitz3.ab2@22896>   JSR errchx                                           ;writejumpoverfunction
00030A20 <AmiBlitz3.ab2@22899>   CLR.b fastfunc
00030A2A <AmiBlitz3.ab2@22900>   MOVE.l firstiff,firstiffstore
00030A32 <AmiBlitz3.ab2@22901>   CMP.l #"FAST",-1(a5)
00030A36 <AmiBlitz3.ab2@22902>   BNE 'nofast
00030A3C <AmiBlitz3.ab2@22903>   CMP.b #" ",3(a5)
00030A40 <AmiBlitz3.ab2@22904>   BNE 'nofast
00030A42 <AmiBlitz3.ab2@22905>   ADDQ.l #3,a5
00030A46 <AmiBlitz3.ab2@22908>     CMP.b #" ",(a5)
00030A4A <AmiBlitz3.ab2@22909>      BNE 'x1
00030A4C <AmiBlitz3.ab2@22910>     ADDQ #1,a5
00030A50 <AmiBlitz3.ab2@22911> BRA 'x2
00030A56 <AmiBlitz3.ab2@22914>   MOVE.l a5,lastsourcepos
00030A5E <AmiBlitz3.ab2@22915>   MOVE.b #1,fastfunc
00030A66 <AmiBlitz3.ab2@22918>   CMP.l #"NOOP",-1(a5)                                     ;compile 3* so its deactivate
00030A6A <AmiBlitz3.ab2@22919> BRA 'noopt
00030A70 <AmiBlitz3.ab2@22921>   CMP.w #"T ",3(a5)                                        ;??Looks like dead code??
00030A74 <AmiBlitz3.ab2@22922>   BNE 'noopt
00030A76 <AmiBlitz3.ab2@22923>   ADDQ.l #4,a5
00030A7A <AmiBlitz3.ab2@22926>     CMP.b #" ",(a5)
00030A7E <AmiBlitz3.ab2@22927>      BNE 'x1b
00030A80 <AmiBlitz3.ab2@22928>     ADDQ #1,a5
00030A84 <AmiBlitz3.ab2@22929> BRA 'x2b
00030A8A <AmiBlitz3.ab2@22932>   MOVE.l a5,lastsourcepos
00030A90 <AmiBlitz3.ab2@22934>   JSR makename2
00030A94 <AmiBlitz3.ab2@22935> BRA 'l1
00030A9A <AmiBlitz3.ab2@22939>   JSR makename2
00030AA0 <AmiBlitz3.ab2@22940>   JSR checkused
00030AA6 <AmiBlitz3.ab2@22941>   TST.b skipfunc
00030AAA <AmiBlitz3.ab2@22942>    BEQ 'l1
00030AB0 <AmiBlitz3.ab2@22943>   JSR skipme
00030AB6 <AmiBlitz3.ab2@22944>   CLR.b fastfunc
00030AB8 <AmiBlitz3.ab2@22945> RTS
00030AC2 <AmiBlitz3.ab2@22948>   MOVE.l linenumat,prolineat
00030AC8 <AmiBlitz3.ab2@22949>   ADDQ.w #1,procnum2
00030AD0 <AmiBlitz3.ab2@22950>   MOVE.w procnum2(PC),procnum
00030AD6 <AmiBlitz3.ab2@22951>   MOVE.w D1,proceduremode
00030ADC <AmiBlitz3.ab2@22952>   CLR.w locvaroff
00030AE0 <AmiBlitz3.ab2@22953>   CMP.w #$7B,D0
00030AE4 <AmiBlitz3.ab2@22954>    BNE.w JUMP_syntaxerr
00030AEC <AmiBlitz3.ab2@22955>    MOVE.b #1,infunctioncode
00030AF2 <AmiBlitz3.ab2@22956>   MOVEA.l tempvm,A0
00030AFA <AmiBlitz3.ab2@22957>   MOVE.w $C(A0),memlibstat
00030B00 <AmiBlitz3.ab2@22958>   BCLR #$7,$C(A0)                                          ;Bit out of range
00030B04 <AmiBlitz3.ab2@22959>   MOVE.w #$4EF9,D1
00030B08 <AmiBlitz3.ab2@22960>    BSR.w writeword
00030B0E <AmiBlitz3.ab2@22961>    JSR addoff
00030B12 <AmiBlitz3.ab2@22962>    BSR.w writelong
00030B18 <AmiBlitz3.ab2@22963>    JSR findproc                                          ;findproc function
00030B1C <AmiBlitz3.ab2@22964>    BEQ.w JUMP_dupprocerr
00030B22 <AmiBlitz3.ab2@22965>    JSR addlabel
00030B28 <AmiBlitz3.ab2@22966>    MOVE.b #31,$20(a2)                                      ;increase if more pars
00030B2E <AmiBlitz3.ab2@22967>    MOVE.b #0,isfunc(a2)
00030B36 <AmiBlitz3.ab2@22968>    MOVE.l functionreturntype,funcstruct_returntype(a2)
00030B3E <AmiBlitz3.ab2@22969>   MOVE.l destpointer,$E(A2)
00030B44 <AmiBlitz3.ab2@22970>   MOVE.l A2,currentfunction
00030B4A <AmiBlitz3.ab2@22971>   LEA nops8,A0
00030B50 <AmiBlitz3.ab2@22972>   LEA dataget,A1
00030B54 <AmiBlitz3.ab2@22973>    BSR.w pokecode2
00030B5A <AmiBlitz3.ab2@22974>   TST.b debugmode
00030B5E <AmiBlitz3.ab2@22975>    BEQ.b JL_0_D3AA
00030B60 <AmiBlitz3.ab2@22976>   MOVEQ.l #$04,D1
00030B66 <AmiBlitz3.ab2@22977>    JSR writetrap
00030B70 <AmiBlitz3.ab2@22978>   MOVE.l destpointer,proclocals
00030B74 <AmiBlitz3.ab2@22979>    BSR.w writelong
00030B78 <AmiBlitz3.ab2@22980>    BSR.w writelong
00030B7C <AmiBlitz3.ab2@22983>    LEA $16(A2),A4
00030B84 <AmiBlitz3.ab2@22984>   MOVE.b proceduremode+1,$5(A2)
00030B86 <AmiBlitz3.ab2@22985>   MOVEQ.l #$00,D6
00030B88 <AmiBlitz3.ab2@22986>   MOVEQ.l #$00,D5
00030B8E <AmiBlitz3.ab2@22987>    JSR get1bytemain
00030B92 <AmiBlitz3.ab2@22988>   CMP.w #$7D,D0
00030B96 <AmiBlitz3.ab2@22989>    BEQ.w JL_0_D466
00030B9A <AmiBlitz3.ab2@22992>    CMP.b #"@",d0
00030B9E <AmiBlitz3.ab2@22993>    BNE 'l2
00030BA0 <AmiBlitz3.ab2@22994>    MOVE.l a0,-(a7)
00030BA6 <AmiBlitz3.ab2@22995>    MOVE.l currentfunction,a0
00030BAC <AmiBlitz3.ab2@22996>    CMP.b #31,$20(a0)                                       ;increase if morepars
00030BB0 <AmiBlitz3.ab2@22997>    BNE 'l1
00030BB4 <AmiBlitz3.ab2@22998>    MOVE.b d6,$20(a0)                                       ;increase if morepar
00030BBA <AmiBlitz3.ab2@23001>    JSR get1bytemain
00030BBC <AmiBlitz3.ab2@23002>    MOVE.l (a7)+,a0
00030BC0 <AmiBlitz3.ab2@23005>    BSR.w getparameter
00030BC4 <AmiBlitz3.ab2@23006>    BSR.w JL_0_8E3C
00030BCC <AmiBlitz3.ab2@23007>   CMPI.l #$7,$4(A2)
00030BD0 <AmiBlitz3.ab2@23008>    BNE.w JL_0_D3F6
00030BD6 <AmiBlitz3.ab2@23009>   LEA stbuff,A0
00030BD8 <AmiBlitz3.ab2@23010>   MOVE.w D5,D1
00030BDA <AmiBlitz3.ab2@23011>   LSL.w #2,D1
00030BDE <AmiBlitz3.ab2@23012>   MOVE.w D6,$0(A0,D1.W)
00030BE4 <AmiBlitz3.ab2@23013>   MOVE.w $4(A3),$2(A0,D1.W)
00030BE6 <AmiBlitz3.ab2@23014>   ADDQ.w #1,D5
00030BE8 <AmiBlitz3.ab2@23015>   MOVEQ.l #$07,D2
00030BEC <AmiBlitz3.ab2@23016> BRA.w JL_0_D442
00030BF2 <AmiBlitz3.ab2@23019> JMP toovarerr
00030BF6 <AmiBlitz3.ab2@23022>   MOVE.w #$2940,D1
00030BF8 <AmiBlitz3.ab2@23023>   MOVEQ.l #$03,D2
00030C00 <AmiBlitz3.ab2@23024>   BTST #$0,flagmask+1
00030C04 <AmiBlitz3.ab2@23025>    BNE.w JL_0_D430
00030C0C <AmiBlitz3.ab2@23026>   CMPI.l #$100,$4(A2)
00030C10 <AmiBlitz3.ab2@23027>    BCC.w JUMP_illprocperr
00030C14 <AmiBlitz3.ab2@23028>   MOVE.w $6(A2),D2
00030C18 <AmiBlitz3.ab2@23029>   CMP.w #$2,D2
00030C1C <AmiBlitz3.ab2@23030>    BHI.w JL_0_D430
00030C20 <AmiBlitz3.ab2@23031>    BEQ.w JL_0_D42C
00030C24 <AmiBlitz3.ab2@23032>   EORI.w #$3000,D1
00030C28 <AmiBlitz3.ab2@23033> BRA.w JL_0_D430
00030C2E <AmiBlitz3.ab2@23036> JMP more6pard
00030C32 <AmiBlitz3.ab2@23039>   ORI.w #$1000,D1
00030C34 <AmiBlitz3.ab2@23042>   OR.w D6,D1
00030C3A <AmiBlitz3.ab2@23043>   TST.b fpu
00030C3E <AmiBlitz3.ab2@23044>   BEQ 'nofpu
00030C42 <AmiBlitz3.ab2@23045>   CMP.b #5,d2
00030C46 <AmiBlitz3.ab2@23046>   BNE 'nofpu
00030C4A <AmiBlitz3.ab2@23047>   CMP.w #6,d6
00030C4E <AmiBlitz3.ab2@23048>   BLT 'l10a
00030C54 <AmiBlitz3.ab2@23049>   CMP.l #newtype_double,a2
00030C58 <AmiBlitz3.ab2@23050>   BEQ JUMP_more6pard
00030C5C <AmiBlitz3.ab2@23051> BRA 'nofpu
00030C62 <AmiBlitz3.ab2@23054>   MOVE.l #$f22c6400,d1
00030C66 <AmiBlitz3.ab2@23055>   MOVEM.l d0/a4,-(a7)
00030C68 <AmiBlitz3.ab2@23056>   MOVE.l d6,d0
00030C6A <AmiBlitz3.ab2@23057>   ASL.l #7,d0
00030C6C <AmiBlitz3.ab2@23058>   OR.w d0,d1
00030C72 <AmiBlitz3.ab2@23059>   CMP.l #newtype_double,a2
00030C76 <AmiBlitz3.ab2@23060>   BNE 'l1
00030C7C <AmiBlitz3.ab2@23061>   OR.l #$1000,d1
00030C80 <AmiBlitz3.ab2@23064>   BSR writelong
00030C84 <AmiBlitz3.ab2@23065>   MOVE.w 4(a3),d1
00030C88 <AmiBlitz3.ab2@23066>   BSR writeword
00030C8C <AmiBlitz3.ab2@23067>   MOVEM.l (a7)+,a4/d0
00030C90 <AmiBlitz3.ab2@23068> BRA JL_0_D442
00030C92 <AmiBlitz3.ab2@23071>   MOVE.l A4,-(A7)
00030C96 <AmiBlitz3.ab2@23072>    CMP.w #6,d6
00030C9A <AmiBlitz3.ab2@23073>    BLT 'l10
00030C9E <AmiBlitz3.ab2@23074>    MOVE.w #$c500-4,d1                                      ;savetemp+regnum
00030CA0 <AmiBlitz3.ab2@23075>    ADD.w d6,d1
00030CA6 <AmiBlitz3.ab2@23076>    JSR Atokejsr
00030CAC <AmiBlitz3.ab2@23077>    TST.w dontwrite
00030CB0 <AmiBlitz3.ab2@23078>    BNE 'l10
00030CB6 <AmiBlitz3.ab2@23079>    MOVE.l data1start,d1
00030CBC <AmiBlitz3.ab2@23080>    MOVE.l destpointer,a4
00030CC0 <AmiBlitz3.ab2@23081>    ADD.l d1,-6(a4)
00030CC6 <AmiBlitz3.ab2@23082>    MOVE.l destpointer,d1
00030CC8 <AmiBlitz3.ab2@23083>    SUBQ.l #6,d1
00030CCE <AmiBlitz3.ab2@23084>    SUB.l destbufferstart,d1
00030CD0 <AmiBlitz3.ab2@23086>    MOVE.l d2,-(a7)
00030CD2 <AmiBlitz3.ab2@23087>    MOVE.l d1,d2
00030CD8 <AmiBlitz3.ab2@23088>    JSR addhunkoffset                                       ;move.l $0,-x(a4)
00030CDA <AmiBlitz3.ab2@23089>    MOVE.l (a7)+,d2
00030CE0 <AmiBlitz3.ab2@23090>    MOVE.l destpointer,a4
00030CE4 <AmiBlitz3.ab2@23091>    CMP.w #2,d2
00030CE8 <AmiBlitz3.ab2@23092>    BNE 'nw1
00030CEE <AmiBlitz3.ab2@23094>    MOVE.w #$3979,-8(a4)                                    ;move.w $0,-x(a4)
00030CF6 <AmiBlitz3.ab2@23095>    ADD.l #2,-6(a4)
00030CFA <AmiBlitz3.ab2@23098>    CMP.w #1,d2
00030CFE <AmiBlitz3.ab2@23099>    BNE 'nb
00030D04 <AmiBlitz3.ab2@23100>    MOVE.w #$1979,-8(a4)                                    ;move.b $0,-x(a4)
00030D0C <AmiBlitz3.ab2@23101>    ADD.l #3,-6(a4)
00030D12 <AmiBlitz3.ab2@23104>    MOVE.w $4(a3),-2(a4)
00030D16 <AmiBlitz3.ab2@23105> BRA 'ne1
00030D1A <AmiBlitz3.ab2@23108>   BSR.w writeword                                          ;write storeparameter
00030D1E <AmiBlitz3.ab2@23111>   MOVE.w $4(A3),D1
00030D22 <AmiBlitz3.ab2@23112>    BSR.w writeword
00030D24 <AmiBlitz3.ab2@23115>   MOVEA.l (A7)+,A4
00030D2A <AmiBlitz3.ab2@23118>   CLR.l functionreturntype
00030D2C <AmiBlitz3.ab2@23119>   ADDQ.w #1,D6
00030D30 <AmiBlitz3.ab2@23120>   CMP.w #11,D6                                             ;max function parameters
00030D34 <AmiBlitz3.ab2@23121>    BCC.w JUMP_toovarerr
00030D3A <AmiBlitz3.ab2@23122>   MOVE.l currentfunction,a0
00030D3E <AmiBlitz3.ab2@23123>   MOVE.l a2,funcstruct_parametertype-4(a0,d6*4)                                    ;-4 because d6 is increment before
00030D40 <AmiBlitz3.ab2@23124>   MOVE.b D2,(A4)+
00030D44 <AmiBlitz3.ab2@23125>   CMP.w #$2C,D0
00030D48 <AmiBlitz3.ab2@23126>    BNE.w JL_0_D45E
00030D4E <AmiBlitz3.ab2@23127>    JSR get1bytemain
00030D52 <AmiBlitz3.ab2@23139> BRA.w JL_0_D3C6
00030D56 <AmiBlitz3.ab2@23142>   CMP.w #$7D,D0
00030D5A <AmiBlitz3.ab2@23143>    BNE.w JUMP_syntaxerr
00030D60 <AmiBlitz3.ab2@23146>   MOVEA.l currentfunction,A2
00030D62 <AmiBlitz3.ab2@23147>   LSL.w #4,D5
00030D64 <AmiBlitz3.ab2@23148>   OR.w D5,D6
00030D68 <AmiBlitz3.ab2@23149>   MOVE.b D6,$4(A2)
00030D6A <AmiBlitz3.ab2@23150>   LSR.w #4,D6
00030D6E <AmiBlitz3.ab2@23151>    BEQ.w JL_0_D4C4
00030D74 <AmiBlitz3.ab2@23152>   LEA stbuff,A0
00030D76 <AmiBlitz3.ab2@23153>   SUBQ.w #1,D6
00030D78 <AmiBlitz3.ab2@23156>     MOVE.w D6,D1                                           ;function stringpars
00030D7A <AmiBlitz3.ab2@23157>     LSL.w #2,D1                                            ;stringsize was 2
00030D7C <AmiBlitz3.ab2@23159>       LSL.w #1,d1
00030D7E <AmiBlitz3.ab2@23160>       ADDQ.w #4,d1
00030D80 <AmiBlitz3.ab2@23162>     ADDQ.w #8,D1
00030D86 <AmiBlitz3.ab2@23163>     MOVE.w D1,funcst+2
00030D8C <AmiBlitz3.ab2@23164>     MOVE.l funcst,D1
00030D90 <AmiBlitz3.ab2@23165>     BSR.w writelong
00030D92 <AmiBlitz3.ab2@23166>     MOVE.w (A0)+,D1
00030D96 <AmiBlitz3.ab2@23167>     CMP.b #5,d1
00030D9A <AmiBlitz3.ab2@23168>     BLE 's1
00030D9E <AmiBlitz3.ab2@23169>     MOVE.w #$266c,d1                                       ;native move.l 4(a4),a3
00030DA2 <AmiBlitz3.ab2@23170>     BSR writeinstruction
00030DA4 <AmiBlitz3.ab2@23171>     MOVE.w D6,D1                                           ;function stringpars
00030DA6 <AmiBlitz3.ab2@23172>     LSL.w #2,D1                                            ;stringsize was 2
00030DA8 <AmiBlitz3.ab2@23174>       LSL.w #1,d1
00030DAA <AmiBlitz3.ab2@23176>     ADDQ.w #8,D1
00030DAE <AmiBlitz3.ab2@23177>     BSR writeword
00030DB2 <AmiBlitz3.ab2@23178>   BRA 's2
00030DB8 <AmiBlitz3.ab2@23181>     OR.w movedna3,D1
00030DBC <AmiBlitz3.ab2@23182>      BSR.w writeword
00030DC2 <AmiBlitz3.ab2@23185>     MOVE.w (A0)+,least+2
00030DC8 <AmiBlitz3.ab2@23186>     MOVE.l least,D1
00030DCC <AmiBlitz3.ab2@23187>      BSR.w writelong
00030DCE <AmiBlitz3.ab2@23188>     MOVE.l A0,-(A7)
00030DD2 <AmiBlitz3.ab2@23189>     MOVE.w #$C700,D1
00030DD6 <AmiBlitz3.ab2@23190>      BSR.w Atokejsr
00030DD8 <AmiBlitz3.ab2@23191>     MOVEA.l (A7)+,A0
00030DDC <AmiBlitz3.ab2@23192>   DBF D6,JL_0_D482
00030DE2 <AmiBlitz3.ab2@23195> JMP get1bytemain
00030DE8 <AmiBlitz3.ab2@23199>   MOVE.w dontwrite,D1
00030DEC <AmiBlitz3.ab2@23200>    BNE.w JL_0_D4F6
00030DF2 <AmiBlitz3.ab2@23201>   MOVE.l destpointer,-(A7)
00030DF8 <AmiBlitz3.ab2@23202>   MOVE.l A0,destpointer
00030DFE <AmiBlitz3.ab2@23203>   MOVE.l linksize,D1
00030E02 <AmiBlitz3.ab2@23204>    BSR.w writelong                                         ;writefunctions jumppos
00030E08 <AmiBlitz3.ab2@23205>    TST.b fastfunc
00030E0C <AmiBlitz3.ab2@23206>    BNE 'skip
00030E10 <AmiBlitz3.ab2@23207>   MOVE.w #$CC00,D1
00030E14 <AmiBlitz3.ab2@23208>    BSR.w tokejsr2                                          ;write clearvars
00030E1A <AmiBlitz3.ab2@23211>   MOVE.l (A7)+,destpointer
00030E1C <AmiBlitz3.ab2@23214> RTS
00030E22 <AmiBlitz3.ab2@23218>   MOVEA.l currentfunction,A2
00030E26 <AmiBlitz3.ab2@23219>   MOVEA.l $E(A2),A0
00030E2A <AmiBlitz3.ab2@23220>   MOVE.w $6(A2),D1
00030E2E <AmiBlitz3.ab2@23221>    BEQ.w JL_0_D538
00030E34 <AmiBlitz3.ab2@23222>   MOVE.w D1,linksize+2
00030E38 <AmiBlitz3.ab2@23223>   MOVE.w $8(A2),D1                                         ;check if function memalloc need
00030E3C <AmiBlitz3.ab2@23224>    BNE.w JL_0_D522
00030E3E <AmiBlitz3.ab2@23225>   ADDQ.w #6,A0
00030E42 <AmiBlitz3.ab2@23226>   MOVE.l A0,$E(A2)
00030E46 <AmiBlitz3.ab2@23227> BRA.w JL_0_D4C8
00030E48 <AmiBlitz3.ab2@23230>   MOVE.l A0,-(A7)
00030E4C <AmiBlitz3.ab2@23231>    BSR.w JL_0_D4C8
00030E4E <AmiBlitz3.ab2@23232>   MOVEA.l (A7)+,A0
00030E52 <AmiBlitz3.ab2@23233>   LEA $A(A0),A0
00030E58 <AmiBlitz3.ab2@23234>   MOVEA.l currentfunction,A2
00030E5C <AmiBlitz3.ab2@23235> BRA.w JL_0_D54A
00030E60 <AmiBlitz3.ab2@23238>   MOVE.w $8(A2),D1
00030E64 <AmiBlitz3.ab2@23239>    BNE.w JL_0_D54A
00030E68 <AmiBlitz3.ab2@23240>   LEA $10(A0),A0
00030E6C <AmiBlitz3.ab2@23241>   MOVE.l A0,$E(A2)
00030E6E <AmiBlitz3.ab2@23242> RTS
00030E74 <AmiBlitz3.ab2@23246> JMP errormsg_nofast
00030E7A <AmiBlitz3.ab2@23249>    MOVE.w dontwrite,D1                                     ;writeallocmem for functions (after releasemem called)
00030E7E <AmiBlitz3.ab2@23250>    BNE.w JL_0_D580
00030E84 <AmiBlitz3.ab2@23251>    TST.b fastfunc
00030E88 <AmiBlitz3.ab2@23252>    BNE JUMP_errormsg_nofast
00030E8E <AmiBlitz3.ab2@23253>   MOVE.l destpointer,-(A7)
00030E94 <AmiBlitz3.ab2@23254>   MOVE.l A0,destpointer
00030E98 <AmiBlitz3.ab2@23255>   MOVE.w #$4EB9,D1
00030E9C <AmiBlitz3.ab2@23256>    BSR.w writeword
00030EA2 <AmiBlitz3.ab2@23257>    JSR addoff
00030EA6 <AmiBlitz3.ab2@23258>    BSR.w writelong
00030EA8 <AmiBlitz3.ab2@23259>   MOVEA.l (A7)+,A0
00030EAE <AmiBlitz3.ab2@23260>   MOVEA.l destpointer,A1
00030EB0 <AmiBlitz3.ab2@23261>   MOVE.l A0,-(A1)
00030EB6 <AmiBlitz3.ab2@23262>   MOVE.l A0,destpointer
00030EBA <AmiBlitz3.ab2@23265>   MOVE.w $8(A2),D4
00030EBE <AmiBlitz3.ab2@23266>    BPL.w JL_0_D59E
00030EC2 <AmiBlitz3.ab2@23267>   MOVE.w #$C004,D1
00030EC6 <AmiBlitz3.ab2@23268>    BSR.w tokejsr2
00030ECC <AmiBlitz3.ab2@23269>   MOVEA.l currentfunction,A2
00030ED0 <AmiBlitz3.ab2@23270>   MOVE.w $8(A2),D4
00030ED4 <AmiBlitz3.ab2@23271>   ANDI.w #$7FFF,D4
00030ED8 <AmiBlitz3.ab2@23274>    BEQ.w JL_0_D5E0
00030EDC <AmiBlitz3.ab2@23275>   MOVE.b $4(A2),D1
00030EE0 <AmiBlitz3.ab2@23276>   ANDI.w #$F,D1
00030EE2 <AmiBlitz3.ab2@23277>   MOVE.w D1,-(A7)
00030EE6 <AmiBlitz3.ab2@23278>   CMP.w #$5,D1
00030EEA <AmiBlitz3.ab2@23279>    BCS.w JL_0_D5BC
00030EEE <AmiBlitz3.ab2@23280>   MOVE.w #$2F04,D1
00030EF2 <AmiBlitz3.ab2@23281>    BSR.w writeword
00030EF8 <AmiBlitz3.ab2@23284>   MOVE.l locdatast,D3
00030EFE <AmiBlitz3.ab2@23285>    JSR datastart
00030F02 <AmiBlitz3.ab2@23286>   MOVE.w #$C501,D1
00030F06 <AmiBlitz3.ab2@23287>    BSR.w tokejsr2
00030F08 <AmiBlitz3.ab2@23288>   MOVE.w (A7)+,D1
00030F0C <AmiBlitz3.ab2@23289>   CMP.w #$5,D1
00030F10 <AmiBlitz3.ab2@23290>    BCS.w JL_0_D5E0
00030F14 <AmiBlitz3.ab2@23291>   MOVE.w #$281F,D1
00030F18 <AmiBlitz3.ab2@23292>    BSR.w writeword
00030F1C <AmiBlitz3.ab2@23294>   MOVE.w #$4E75,D1
00030F20 <AmiBlitz3.ab2@23295> BRA.w writeword
00030F26 <AmiBlitz3.ab2@23299>   LEA mwait,A0
00030F2C <AmiBlitz3.ab2@23300>   LEA mwaitf,A1
00030F30 <AmiBlitz3.ab2@23301> BRA.w pokecode
00030F36 <AmiBlitz3.ab2@23305> JMP laberr
00030F3A <AmiBlitz3.ab2@23308>   CMP.w #$2E,D0
00030F3E <AmiBlitz3.ab2@23309>   BNE.w JUMP_syntaxerr
00030F44 <AmiBlitz3.ab2@23310>   JSR getparameter2
00030F48 <AmiBlitz3.ab2@23311>   BEQ.w JUMP_laberr
00030F4E <AmiBlitz3.ab2@23312>   LEA newtypebase,A2
00030F54 <AmiBlitz3.ab2@23313>   JSR findtype
00030F58 <AmiBlitz3.ab2@23314>   BNE.w JL_0_D626
00030F60 <AmiBlitz3.ab2@23315>   CMPI.l #MaxByte,$4(A2)
00030F64 <AmiBlitz3.ab2@23316>   BNE.w JUMP_typeerr
00030F68 <AmiBlitz3.ab2@23317> BRA.w JL_0_D62A
00030F6E <AmiBlitz3.ab2@23320> JMP typeerr
00030F74 <AmiBlitz3.ab2@23323>   JSR addlabel
00030F78 <AmiBlitz3.ab2@23326>   CLR.l $4(A2)
00030F7E <AmiBlitz3.ab2@23327>   MOVE.l A2,thistype
00030F84 <AmiBlitz3.ab2@23328>   CLR.l prevtype
00030F8A <AmiBlitz3.ab2@23329>   CLR.w typelen
00030F90 <AmiBlitz3.ab2@23330>   CLR.w linemode
00030F96 <AmiBlitz3.ab2@23331>   JSR reget
00030F9A <AmiBlitz3.ab2@23332>   BNE.w typemode
00030F9C <AmiBlitz3.ab2@23333> RTS
00030FA0 <AmiBlitz3.ab2@23336>   CMP.w #-$7FFE,D0
00030FA4 <AmiBlitz3.ab2@23337>   BEQ.w JL_0_D82E
00030FAE <AmiBlitz3.ab2@23339>   MOVE.w oldqflag,instringon
00030FB4 <AmiBlitz3.ab2@23340>   MOVEA.l lastsourcepos,A5
00030FB6 <AmiBlitz3.ab2@23341>   MOVEQ.l #$00,D6
00030FBA <AmiBlitz3.ab2@23342>   CMP.w #$2A,D0
00030FBE <AmiBlitz3.ab2@23343>   BNE.w JL_0_D670
00030FC0 <AmiBlitz3.ab2@23344>   MOVEQ.l #$01,D6
00030FC6 <AmiBlitz3.ab2@23345>   JSR get1bytemain
00030FCA <AmiBlitz3.ab2@23346> BRA.w JL_0_D67E
00030FCE <AmiBlitz3.ab2@23349>   CMP.w #$40,D0
00030FD2 <AmiBlitz3.ab2@23350>   BNE.w JL_0_D67E
00030FD4 <AmiBlitz3.ab2@23351>   MOVEQ.l #$05,D6
00030FDA <AmiBlitz3.ab2@23352>   JSR get1bytemain
00030FE0 <AmiBlitz3.ab2@23355>   MOVE.w D6,flagmask
00030FE6 <AmiBlitz3.ab2@23356>   JSR getparameter2
00030FEA <AmiBlitz3.ab2@23357>   BEQ.w JUMP_syntaxerr
00030FF0 <AmiBlitz3.ab2@23358>   MOVEA.l thistype,A2
00030FF2 <AmiBlitz3.ab2@23359>   ADDQ.w #4,A2
00030FF8 <AmiBlitz3.ab2@23360>   JSR findvariable2
00030FFC <AmiBlitz3.ab2@23361>   BEQ.w JUMP_dupofferr
00031002 <AmiBlitz3.ab2@23362>   JSR addlabel
00031004 <AmiBlitz3.ab2@23363>   MOVE.l A2,-(A7)
00031008 <AmiBlitz3.ab2@23364>   CMP.w #$2E,D0
0003100C <AmiBlitz3.ab2@23365>    BEQ.w JL_0_D6CE
00031010 <AmiBlitz3.ab2@23366>   CMP.w #$24,D0
00031014 <AmiBlitz3.ab2@23367>    BNE.w JL_0_D6C0
0003101A <AmiBlitz3.ab2@23368>   MOVE.l #newtype_string,D2
00031020 <AmiBlitz3.ab2@23369>    JSR get1bytemain
00031024 <AmiBlitz3.ab2@23370> BRA.w JL_0_D710
0003102A <AmiBlitz3.ab2@23373> JMP dupofferr
00031030 <AmiBlitz3.ab2@23376>   MOVE.l prevtype,D2
00031034 <AmiBlitz3.ab2@23377>   BEQ.w JUMP_notypeerr
00031038 <AmiBlitz3.ab2@23378> BRA.w JL_0_D706
0003103E <AmiBlitz3.ab2@23381> JMP notypeerr
00031044 <AmiBlitz3.ab2@23384>   JSR getparameter2
00031048 <AmiBlitz3.ab2@23385>    BEQ.w JUMP_syntaxerr
0003104E <AmiBlitz3.ab2@23386>   LEA newtypebase,A2
00031054 <AmiBlitz3.ab2@23387>    JSR findtype
00031058 <AmiBlitz3.ab2@23388>    BEQ.w JL_0_D704
00031060 <AmiBlitz3.ab2@23389>   BTST #$0,flagmask+1
00031064 <AmiBlitz3.ab2@23390>    BEQ.w JUMP_notypeerr
0003106A <AmiBlitz3.ab2@23391>   JSR addlabel
00031072 <AmiBlitz3.ab2@23394>   MOVE.w linenumat+2,$8(A2)
0003107A <AmiBlitz3.ab2@23395>   MOVE.l #MaxByte,$4(A2)
0003107C <AmiBlitz3.ab2@23398>   MOVE.l A2,D2
00031082 <AmiBlitz3.ab2@23401>   CMP.l #newtype_byte,D2
00031086 <AmiBlitz3.ab2@23402>    BEQ.w JL_0_D71E
0003108C <AmiBlitz3.ab2@23405>   ADDQ.w #1,typelen
00031094 <AmiBlitz3.ab2@23406>   BCLR #$0,typelen+1
00031096 <AmiBlitz3.ab2@23409>   MOVEQ.l #$00,D3
00031098 <AmiBlitz3.ab2@23410>   MOVEA.l D2,A2
0003109E <AmiBlitz3.ab2@23411>   MOVE.l A2,prevtype
000310A2 <AmiBlitz3.ab2@23412>   MOVE.w $8(A2),D3
000310A4 <AmiBlitz3.ab2@23413>   MOVEA.l (A7)+,A2
000310A8 <AmiBlitz3.ab2@23414>   MOVE.l D2,$A(A2)
000310AA <AmiBlitz3.ab2@23415>   MOVEQ.l #$00,D4
000310B0 <AmiBlitz3.ab2@23416>   MOVE.w typelen,D4
000310B4 <AmiBlitz3.ab2@23417>   MOVE.w D4,$4(A2)
000310BC <AmiBlitz3.ab2@23418>   BTST #$0,flagmask+1
000310C0 <AmiBlitz3.ab2@23419>    BEQ.w JL_0_D74C
000310C2 <AmiBlitz3.ab2@23420>   MOVEQ.l #$04,D3
000310C6 <AmiBlitz3.ab2@23423>   CMP.w #$5B,D0
000310CA <AmiBlitz3.ab2@23424>    BNE.w JL_0_D782
000310CE <AmiBlitz3.ab2@23425>   MOVEM.l D3-D4/A2,-(A7)
000310D2 <AmiBlitz3.ab2@23426>    BSR.w AJL_0_BF6E
000310D6 <AmiBlitz3.ab2@23427>   CMP.w #$5D,D0
000310DA <AmiBlitz3.ab2@23428>    BNE.w JUMP_syntaxerr
000310DC <AmiBlitz3.ab2@23429>   TST.w D6
000310E0 <AmiBlitz3.ab2@23430>    BNE.w JUMP_fpconerr
000310E2 <AmiBlitz3.ab2@23431>   MOVE.l D3,D1
000310E6 <AmiBlitz3.ab2@23432>   MOVEM.l (A7)+,D3-D4/A2
000310EC <AmiBlitz3.ab2@23433>    JSR get1bytemain
000310F0 <AmiBlitz3.ab2@23434>   MOVE.w D1,$8(A2)
000310F4 <AmiBlitz3.ab2@23435>   MULU.l d1,d3                                             ;>32k fix was mulu.w
000310FC <AmiBlitz3.ab2@23436>   ORI.w #$2,flagmask
000310FE <AmiBlitz3.ab2@23439>   ADD.l D3,D4
00031104 <AmiBlitz3.ab2@23442>     CMP.l #65532,d4
00031108 <AmiBlitz3.ab2@23447>   BCC JUMP_toolongerr
00031110 <AmiBlitz3.ab2@23448>   MOVE.w flagmask,$6(A2)
00031116 <AmiBlitz3.ab2@23449>   MOVE.w D4,typelen
00031118 <AmiBlitz3.ab2@23450> RTS
0003111E <AmiBlitz3.ab2@23453> JMP badenderr
00031124 <AmiBlitz3.ab2@23456> JMP noiferr
0003112A <AmiBlitz3.ab2@23459> JMP toolongerr
00031130 <AmiBlitz3.ab2@23462> JMP fpconerr
00031136 <AmiBlitz3.ab2@23465>   MOVE.l firstiff,D0
0003113A <AmiBlitz3.ab2@23466>    BEQ.w JUMP_noiferr
0003113C <AmiBlitz3.ab2@23467>   MOVEA.l D0,A0
00031140 <AmiBlitz3.ab2@23468>   MOVE.w $C(A0),D0
00031144 <AmiBlitz3.ab2@23469>   ANDI.w #$FF,D0
00031146 <AmiBlitz3.ab2@23470>   CMP.w D0,D1
0003114A <AmiBlitz3.ab2@23471>    BNE.w JUMP_badenderr
0003114E <AmiBlitz3.ab2@23474>   CMP.w #$1,D1
00031152 <AmiBlitz3.ab2@23475>   BNE.w JL_0_D7D8
00031156 <AmiBlitz3.ab2@23476>   MOVE.w #$6000,D1
0003115C <AmiBlitz3.ab2@23479>     TST.b fast
00031160 <AmiBlitz3.ab2@23480>     BEQ 'l1
00031166 <AmiBlitz3.ab2@23481>     OR.l #$ff,d1
0003116A <AmiBlitz3.ab2@23485>   BSR.w writeword
00031170 <AmiBlitz3.ab2@23486>   MOVEA.l destpointer,A1
00031174 <AmiBlitz3.ab2@23487>   MOVE.l $4(A0),D1
00031176 <AmiBlitz3.ab2@23488>   SUB.l A1,D1
0003117C <AmiBlitz3.ab2@23491>     TST.b fast
00031180 <AmiBlitz3.ab2@23492>     BEQ 'l2
00031184 <AmiBlitz3.ab2@23493>     BSR writelong
00031188 <AmiBlitz3.ab2@23494>   BRA JL_0_D7D8
0003118C <AmiBlitz3.ab2@23498>   BSR.w writeword
00031190 <AmiBlitz3.ab2@23501>   MOVEA.l $8(A0),A1                                        ;write if branch destination
00031196 <AmiBlitz3.ab2@23502>   MOVE.l destpointer,D1
00031198 <AmiBlitz3.ab2@23503>   SUB.l A1,D1
0003119E <AmiBlitz3.ab2@23506>     TST.b fast
000311A2 <AmiBlitz3.ab2@23507>     BEQ 'l1
000311A4 <AmiBlitz3.ab2@23508>     ADDQ.l #4,D1
000311AA <AmiBlitz3.ab2@23509>     MOVE.w dontwrite,D0
000311AE <AmiBlitz3.ab2@23510>     BNE.w JL_0_D7FE
000311B2 <AmiBlitz3.ab2@23511>     MOVE.l d1,-$4(a1)
000311B6 <AmiBlitz3.ab2@23512>   BRA JL_0_D7FE
000311B8 <AmiBlitz3.ab2@23516>   ADDQ.l #2,d1
000311BE <AmiBlitz3.ab2@23517>   TST.w dontwrite
000311C2 <AmiBlitz3.ab2@23518>   BNE JL_0_D7FE
000311C8 <AmiBlitz3.ab2@23519>   CMP.l #MinWordSgnd,D1
000311CC <AmiBlitz3.ab2@23520>   BCC.w JUMP_bigiferr
000311D0 <AmiBlitz3.ab2@23521>   MOVE.w D1,-$2(A1)
000311D2 <AmiBlitz3.ab2@23524> RTS
000311D8 <AmiBlitz3.ab2@23527> JMP bigiferr
000311E2 <AmiBlitz3.ab2@23532>   MOVE.w oldqflag,instringon
000311E8 <AmiBlitz3.ab2@23533>   MOVEA.l lastsourcepos,A5
000311EA <AmiBlitz3.ab2@23536>   MOVEQ.l #$01,D1
000311EE <AmiBlitz3.ab2@23537> BRA.w JL_0_D810
000311F8 <AmiBlitz3.ab2@23541>   MOVE.w oldqflag,instringon
000311FE <AmiBlitz3.ab2@23542>   MOVEA.l lastsourcepos,A5
00031200 <AmiBlitz3.ab2@23545>   MOVEQ.l #$00,D1
00031204 <AmiBlitz3.ab2@23548>   BSR.w JL_0_D79E
00031208 <AmiBlitz3.ab2@23549>   BSR.w AJL_0_D81C
0003120E <AmiBlitz3.ab2@23550> JMP get1bytemain
00031214 <AmiBlitz3.ab2@23553>   MOVE.l (A0),firstiff
00031216 <AmiBlitz3.ab2@23554>   MOVEA.l A0,A1
00031218 <AmiBlitz3.ab2@23555>   MOVEQ.l #$0E,D0
0003121E <AmiBlitz3.ab2@23556>   MOVEA.l _execbase,A6
00031224 <AmiBlitz3.ab2@23557>   MOVE.l mempool,a0
00031228 <AmiBlitz3.ab2@23558> JMP _FreePooled(A6)
0003122E <AmiBlitz3.ab2@23562>   JSR get1bytemain
00031232 <AmiBlitz3.ab2@23565>   BEQ.w JL_0_D980
0003123A <AmiBlitz3.ab2@23566>   CMP.l #"noa7",-1(a5)
0003123E <AmiBlitz3.ab2@23567>   BNE 'l1
00031244 <AmiBlitz3.ab2@23568>   JSR get1bytemain
0003124A <AmiBlitz3.ab2@23569>   JSR get1bytemain
00031250 <AmiBlitz3.ab2@23570>   JSR get1bytemain
00031258 <AmiBlitz3.ab2@23571>   MOVE.w #$3a,lastchar
0003125C <AmiBlitz3.ab2@23572> BRA JL_0_D980
00031262 <AmiBlitz3.ab2@23575>   CMP.w #"d0",-1(a5)
00031266 <AmiBlitz3.ab2@23576>   BNE 'l2
0003126E <AmiBlitz3.ab2@23577>   MOVE.b #1,returncode
00031274 <AmiBlitz3.ab2@23578>   CLR.w lastchar
00031278 <AmiBlitz3.ab2@23579> BRA JL_0_D980
0003127C <AmiBlitz3.ab2@23582>   CMP.w #$80d7,d0
00031280 <AmiBlitz3.ab2@23583>   BNE JL_0_D836
00031286 <AmiBlitz3.ab2@23584>   JSR skiprest
00031288 <AmiBlitz3.ab2@23585> RTS
0003128C <AmiBlitz3.ab2@23588>   BSR.w JL_0_D844
00031292 <AmiBlitz3.ab2@23589>   JSR reget
00031296 <AmiBlitz3.ab2@23590>   BNE.w JL_0_D836
00031298 <AmiBlitz3.ab2@23591> RTS
0003129C <AmiBlitz3.ab2@23594>   CMP.w #-$7FFF,D0
000312A0 <AmiBlitz3.ab2@23595>    BNE.w JL_0_D87E
000312A6 <AmiBlitz3.ab2@23596>   MOVE.w linemode,D1
000312AA <AmiBlitz3.ab2@23597>    BNE.w JUMP_modeerr
000312B0 <AmiBlitz3.ab2@23598>   ADDQ.w #1,typelen
000312B8 <AmiBlitz3.ab2@23599>   BCLR #$0,typelen+1
000312BE <AmiBlitz3.ab2@23600>   MOVEA.l thistype,A0
000312C6 <AmiBlitz3.ab2@23601>   MOVE.w typelen,$8(A0)
000312CE <AmiBlitz3.ab2@23602>   MOVE.w #$FFFF,linemode
000312D4 <AmiBlitz3.ab2@23603> JMP get1bytemain
000312DA <AmiBlitz3.ab2@23606> JMP modeerr
000312DE <AmiBlitz3.ab2@23609>   CMP.w #-$7FF5,D0
000312E2 <AmiBlitz3.ab2@23610>    BEQ.w JL_0_D80E
000312E6 <AmiBlitz3.ab2@23611>   CMP.w #-$7FF4,D0
000312EA <AmiBlitz3.ab2@23612>    BEQ.w JL_0_D804
000312EE <AmiBlitz3.ab2@23613>   CMP.w #-$7FF8,D0
000312F2 <AmiBlitz3.ab2@23614>    BNE.w JL_0_D89A
000312F6 <AmiBlitz3.ab2@23617> BRA.w JL_0_D9E8
000312FC <AmiBlitz3.ab2@23620> JMP interr3
00031300 <AmiBlitz3.ab2@23623>   CMP.w #-$7FF7,D0
00031304 <AmiBlitz3.ab2@23624>    BNE.w JL_0_D8C8
0003130A <AmiBlitz3.ab2@23625>    TST.b fpu
0003130E <AmiBlitz3.ab2@23626>    BEQ 'nof
00031314 <AmiBlitz3.ab2@23627>    MOVEA.l currentfunction,A0
0003131A <AmiBlitz3.ab2@23628>    CMP.l #0,a0
0003131E <AmiBlitz3.ab2@23629>    BEQ 'nof
00031324 <AmiBlitz3.ab2@23630>    CMP.b #5,$5(a0)
00031328 <AmiBlitz3.ab2@23631>     BNE 'nof
0003132E <AmiBlitz3.ab2@23632>    MOVE.l #$f23c5000,d1
00031332 <AmiBlitz3.ab2@23633>    BSR writelong
00031336 <AmiBlitz3.ab2@23634>    MOVE.w #0,d1
0003133A <AmiBlitz3.ab2@23635>    BSR writeword
0003133E <AmiBlitz3.ab2@23638>   MOVE.w #$7000,D1                                         ;end function moveq #0,d0
00031342 <AmiBlitz3.ab2@23639>    BSR.w writeword
00031348 <AmiBlitz3.ab2@23640>   MOVEA.l currentfunction,A0
0003134E <AmiBlitz3.ab2@23641>   CMP.l #0,a0
00031352 <AmiBlitz3.ab2@23642>   BEQ JL_0_D896
00031358 <AmiBlitz3.ab2@23643>   MOVE.l destpointer,d1
0003135C <AmiBlitz3.ab2@23644>   SUB.l $e(a0),d1
00031360 <AmiBlitz3.ab2@23645>   MOVE.l d1,isfunc+1(a0)
00031366 <AmiBlitz3.ab2@23646>   CMPI.b #$7,$5(A0)
0003136A <AmiBlitz3.ab2@23647>    BNE.w JL_0_D896
00031370 <AmiBlitz3.ab2@23648>   MOVE.w putstlen,D1
00031374 <AmiBlitz3.ab2@23649>    BSR.w writeword
00031378 <AmiBlitz3.ab2@23650> BRA.w JL_0_D896
0003137E <AmiBlitz3.ab2@23653> JMP interr
00031382 <AmiBlitz3.ab2@23656>  CMP.w #-$7FD0,D0
00031386 <AmiBlitz3.ab2@23657>    BNE.w JL_0_D966
0003138C <AmiBlitz3.ab2@23658>   MOVE.w proceduremode,D1
00031390 <AmiBlitz3.ab2@23659>    BNE.w JUMP_interr3
00031396 <AmiBlitz3.ab2@23660>   TST.b debugmode
0003139A <AmiBlitz3.ab2@23661>    BEQ.w JL_0_D90A
0003139C <AmiBlitz3.ab2@23662>   MOVEQ.l #$03,D1
000313A2 <AmiBlitz3.ab2@23663>    JSR writetrap
000313A8 <AmiBlitz3.ab2@23664>   MOVE.w dontwrite,D1
000313AC <AmiBlitz3.ab2@23665>    BNE.w JL_0_D90A
000313B2 <AmiBlitz3.ab2@23666>   MOVEA.l intcleanat,A0
000313B8 <AmiBlitz3.ab2@23667>   MOVE.l destpointer,(A0)
000313BC <AmiBlitz3.ab2@23668>   MOVE.w #$C30C,D1
000313C0 <AmiBlitz3.ab2@23669>    BSR.w Atokejsr
000313C6 <AmiBlitz3.ab2@23672>   MOVE.w intstring,D1
000313CA <AmiBlitz3.ab2@23673>    BEQ.w JUMP_interr
000313CE <AmiBlitz3.ab2@23674>    BPL.w JL_0_D934
000313D4 <AmiBlitz3.ab2@23675>   MOVE.w intlevel,D1
000313D8 <AmiBlitz3.ab2@23676>   ORI.w #$7200,D1
000313DC <AmiBlitz3.ab2@23677>    BSR.w writeword
000313E0 <AmiBlitz3.ab2@23678>   MOVE.w #$C103,D1
000313E4 <AmiBlitz3.ab2@23679>    BSR.w Atokejsr
000313EA <AmiBlitz3.ab2@23680>   CLR.w intlevel
000313F0 <AmiBlitz3.ab2@23683>  CLR.w intstring
000313F6 <AmiBlitz3.ab2@23684>   MOVE.l intfin,D1
000313FA <AmiBlitz3.ab2@23685>    BSR.w writelong
00031400 <AmiBlitz3.ab2@23686>   MOVE.l #$70004E75,D1
00031404 <AmiBlitz3.ab2@23687>    BSR.w writelong
0003140A <AmiBlitz3.ab2@23688>   MOVE.w dontwrite,D1
0003140E <AmiBlitz3.ab2@23689>    BNE.w JL_0_D962
00031414 <AmiBlitz3.ab2@23690>   MOVEA.l intjmpat,A0
00031418 <AmiBlitz3.ab2@23691>   MOVE.l destpointer(PC),(A0)
0003141E <AmiBlitz3.ab2@23694> JMP get1bytemain
00031422 <AmiBlitz3.ab2@23698>   CMP.w #-$7FF2,D0
00031426 <AmiBlitz3.ab2@23699>    BEQ.w doendsel
0003142A <AmiBlitz3.ab2@23700>   CMP.w #-$7F4C,D0
0003142E <AmiBlitz3.ab2@23701>    BNE.w JL_0_D97C
00031434 <AmiBlitz3.ab2@23702> JMP doendseterr
0003143A <AmiBlitz3.ab2@23706> JMP syntaxerr
00031440 <AmiBlitz3.ab2@23710>   TST.w dirmode
00031444 <AmiBlitz3.ab2@23711>   BNE.w JUMP_baddirerr
00031448 <AmiBlitz3.ab2@23712>   MOVE.w #$C800,D1
0003144E <AmiBlitz3.ab2@23713>   JSR Atokejsr                                            ;end
00031456 <AmiBlitz3.ab2@23714>   CMP.l #"noa7",-4(a5)
0003145A <AmiBlitz3.ab2@23715>   BNE 'l10
00031460 <AmiBlitz3.ab2@23716>   TST.w dontwrite
00031464 <AmiBlitz3.ab2@23717>   BNE 'l10
0003146A <AmiBlitz3.ab2@23718>   MOVE.l destpointer,d1
0003146C <AmiBlitz3.ab2@23719>   SUBQ.l #4,d1
0003146E <AmiBlitz3.ab2@23720>   MOVE.l a0,-(a7)
00031470 <AmiBlitz3.ab2@23721>   MOVE.l d1,a0
00031472 <AmiBlitz3.ab2@23722>   MOVE.l (a0),a0
00031478 <AmiBlitz3.ab2@23723>   MOVE.l #$60000002,(a0)+
0003147C <AmiBlitz3.ab2@23724>   MOVE.w #$588f,(a0)
0003147E <AmiBlitz3.ab2@23725>   MOVE.l (a7)+,a0
00031480 <AmiBlitz3.ab2@23728> RTS
00031486 <AmiBlitz3.ab2@23732>   TST.w dirmode                                            ;stop
0003148A <AmiBlitz3.ab2@23733>   BNE.w JUMP_baddirerr
0003148C <AmiBlitz3.ab2@23734>   MOVE.w d0,d1
00031490 <AmiBlitz3.ab2@23735>   BEQ 'l10
00031494 <AmiBlitz3.ab2@23736>   CMP.b #$3a,d0
00031498 <AmiBlitz3.ab2@23737>   BEQ 'l10
0003149E <AmiBlitz3.ab2@23738>   JSR get1bytemain
000314A4 <AmiBlitz3.ab2@23741>   TST.b debugmode
000314A8 <AmiBlitz3.ab2@23742>   BEQ.w newstop
000314AC <AmiBlitz3.ab2@23743>   MOVE.w #$D501,D1
000314B0 <AmiBlitz3.ab2@23744> BRA.w Atokejsr
000314B2 <AmiBlitz3.ab2@23748>     RTS
000314B4 <AmiBlitz3.ab2@23750>   MOVE.w d1,d0
000314B8 <AmiBlitz3.ab2@23751>   BEQ 'l10
000314BC <AmiBlitz3.ab2@23752>   CMP.b #$3a,d0
000314C0 <AmiBlitz3.ab2@23753>   BEQ 'l10
000314C4 <AmiBlitz3.ab2@23754>   SUB.b #$30,d0
000314C8 <AmiBlitz3.ab2@23755>   MOVE.w #$4e40,d1
000314CC <AmiBlitz3.ab2@23756> BRA 'l11
000314D0 <AmiBlitz3.ab2@23759>   MOVE.w #$4e4a,d1
000314D4 <AmiBlitz3.ab2@23760> BRA writeword
000314D6 <AmiBlitz3.ab2@23763>   ADD.b d0,d1
000314DA <AmiBlitz3.ab2@23764> BRA writeword
000314E0 <AmiBlitz3.ab2@23768> JMP badconterr
000314E4 <AmiBlitz3.ab2@23771>   MOVE.w #$4E71,D1
000314E8 <AmiBlitz3.ab2@23772> BRA.w writeword
000314EE <AmiBlitz3.ab2@23775>   MOVEA.l firstfor,A2
000314F4 <AmiBlitz3.ab2@23776>   CLR.l firstfor
000314FA <AmiBlitz3.ab2@23777>   MOVEA.l _execbase,A6
000314FE <AmiBlitz3.ab2@23780>   CMPA.w #$0,A2
00031502 <AmiBlitz3.ab2@23781>   BEQ.w JL_0_D9E6
00031504 <AmiBlitz3.ab2@23782>   MOVEA.l A2,A1
00031506 <AmiBlitz3.ab2@23783>   MOVEA.l (A1),A2
00031508 <AmiBlitz3.ab2@23784>   MOVEQ.l #$00,D0
0003150E <AmiBlitz3.ab2@23785>   MOVE.l mempool2,a0
00031512 <AmiBlitz3.ab2@23786>   MOVE.b $10(A1),D0
00031516 <AmiBlitz3.ab2@23787>   JSR _FreePooled(A6)                                      ;freememfor_error
0003151A <AmiBlitz3.ab2@23788> BRA.w JL_0_D9CC
0003151C <AmiBlitz3.ab2@23791> RTS
00031522 <AmiBlitz3.ab2@23795> JMP badpenderr
00031528 <AmiBlitz3.ab2@23801>   MOVE.w proceduremode,D1
0003152C <AmiBlitz3.ab2@23802>    BEQ.w JUMP_badpenderr
00031532 <AmiBlitz3.ab2@23804>   MOVE.w dontwrite,D1
00031536 <AmiBlitz3.ab2@23805>    BNE.w JL_0_DA1A
0003153C <AmiBlitz3.ab2@23806>   MOVEA.l firstpend,A2
00031540 <AmiBlitz3.ab2@23809>   CMPA.w #$0,A2
00031544 <AmiBlitz3.ab2@23810>    BEQ.w JL_0_DA1A
00031548 <AmiBlitz3.ab2@23811>   MOVEA.l $4(A2),A0
0003154E <AmiBlitz3.ab2@23812>   MOVE.l destpointer,(A0)
00031550 <AmiBlitz3.ab2@23813>   MOVEA.l (A2),A2
00031554 <AmiBlitz3.ab2@23814> BRA.w JL_0_DA02
0003155A <AmiBlitz3.ab2@23817>   TST.b debugmode
0003155E <AmiBlitz3.ab2@23818>    BEQ.b JL_0_DA2A
00031560 <AmiBlitz3.ab2@23819>   MOVEQ.l #$05,D1
00031566 <AmiBlitz3.ab2@23820>   JSR writetrap
0003156C <AmiBlitz3.ab2@23823>   MOVEA.l firstlocal,A2                                    ;firstlocal
00031572 <AmiBlitz3.ab2@23824>   JSR calcstatic2b                                           ;calcstatic
00031578 <AmiBlitz3.ab2@23825>   MOVEA.l currentfunction,A0
0003157E <AmiBlitz3.ab2@23826>   MOVE.l destpointer,d1
00031582 <AmiBlitz3.ab2@23827>   SUB.l $e(a0),d1
00031586 <AmiBlitz3.ab2@23828>   MOVE.l d1,isfunc+1(a0)                                   ;store function size
0003158A <AmiBlitz3.ab2@23829>   MOVE.w D4,$8(A0)                                         ;set if memalloc need
00031590 <AmiBlitz3.ab2@23830>   MOVE.l D3,locdatast
00031596 <AmiBlitz3.ab2@23831>   MOVEA.l tempvm,A1
0003159C <AmiBlitz3.ab2@23832>  CLR.b infunctioncode
000315A2 <AmiBlitz3.ab2@23833>   MOVE.l firstiffstore,d1
000315A8 <AmiBlitz3.ab2@23834>   CMP.l firstiff,d1
000315AC <AmiBlitz3.ab2@23835>   BNE JUMP_noenderr
000315B0 <AmiBlitz3.ab2@23836>   TST.w $C(A1)                                             ;dim
000315B4 <AmiBlitz3.ab2@23837>    BPL.w JL_0_DA64
000315BA <AmiBlitz3.ab2@23838>  BSET #$7,$8(A0)
000315BE <AmiBlitz3.ab2@23839>   MOVE.w #$C005,D1
000315C2 <AmiBlitz3.ab2@23840>    BSR.w tokejsr2                                          ;writefreememstatement
000315C6 <AmiBlitz3.ab2@23841> BRA.w JL_0_DA6C
000315CC <AmiBlitz3.ab2@23844> JMP noenderr
000315D4 <AmiBlitz3.ab2@23847>   MOVE.w memlibstat,$C(A1)
000315DA <AmiBlitz3.ab2@23850>   MOVEA.l currentfunction,A0
000315DE <AmiBlitz3.ab2@23851>   MOVE.l $E(A0),-(A7)
000315E6 <AmiBlitz3.ab2@23852>   MOVE.w locvaroff,$6(A0)
000315EC <AmiBlitz3.ab2@23853>   BCLR #$1,$7(A0)
000315F2 <AmiBlitz3.ab2@23854>   BCLR #$0,$7(A0)
000315F8 <AmiBlitz3.ab2@23855>   CMPI.b #$7,$5(A0)
000315FC <AmiBlitz3.ab2@23856>    BNE.w JL_0_DA9E
00031602 <AmiBlitz3.ab2@23857>   MOVE.w getstlen,D1
00031606 <AmiBlitz3.ab2@23858>    BSR.w writeword
0003160A <AmiBlitz3.ab2@23861>   TST.w $6(A0)
0003160E <AmiBlitz3.ab2@23862>    BEQ.w JL_0_DAB8
00031612 <AmiBlitz3.ab2@23863>   MOVE.w #$FC7B,D1
00031618 <AmiBlitz3.ab2@23864>    JSR uselib
0003161E <AmiBlitz3.ab2@23865>   MOVE.w unlinka4,D1
00031622 <AmiBlitz3.ab2@23866>    BSR.w writeword
00031628 <AmiBlitz3.ab2@23869>   MOVEA.l currentfunction,A0
0003162A <AmiBlitz3.ab2@23870>   MOVEQ.l #$00,D1
0003162E <AmiBlitz3.ab2@23871>   MOVE.b $4(A0),D1
00031630 <AmiBlitz3.ab2@23872>   LSR.w #4,D1
00031634 <AmiBlitz3.ab2@23873>    BEQ.w JL_0_DB24
00031636 <AmiBlitz3.ab2@23875>      LSL.w #1,d1
0003163A <AmiBlitz3.ab2@23877>   CMP.w #$1,D1
0003163E <AmiBlitz3.ab2@23878>    BNE.w JL_0_DAE0
00031644 <AmiBlitz3.ab2@23879>   MOVE.w fix1,D1
00031648 <AmiBlitz3.ab2@23880>    BSR.w writeword
0003164C <AmiBlitz3.ab2@23881> BRA.w JL_0_DB24
0003164E <AmiBlitz3.ab2@23884>   LSL.w #2,D1
00031650 <AmiBlitz3.ab2@23885>   MOVE.w D1,-(A7)
00031656 <AmiBlitz3.ab2@23886>   MOVE.w D1,moverts+2
0003165C <AmiBlitz3.ab2@23887>   MOVE.l moverts,D1
00031662 <AmiBlitz3.ab2@23888>    JSR writelong
00031664 <AmiBlitz3.ab2@23889>   MOVE.w (A7)+,D1
00031668 <AmiBlitz3.ab2@23890>   CMP.w #$8,D1
0003166C <AmiBlitz3.ab2@23891>    BHI.w JL_0_DB14
00031670 <AmiBlitz3.ab2@23892>   ANDI.w #$7,D1
00031672 <AmiBlitz3.ab2@23893>   LSL.w #8,D1
00031674 <AmiBlitz3.ab2@23894>   LSL.w #1,D1
0003167A <AmiBlitz3.ab2@23895>   OR.w fixq,D1
00031680 <AmiBlitz3.ab2@23896>    JSR writeword
00031684 <AmiBlitz3.ab2@23897> BRA.w JL_0_DB24
0003168A <AmiBlitz3.ab2@23901>    MOVE.w D1,fixstack+2
00031690 <AmiBlitz3.ab2@23902>   MOVE.l fixstack,D1
00031696 <AmiBlitz3.ab2@23903>    JSR writelong
0003169A <AmiBlitz3.ab2@23906>    BSR.w JL_0_D2CA
0003169E <AmiBlitz3.ab2@23907>    BSR.w JL_0_D4F8
000316A0 <AmiBlitz3.ab2@23908>   MOVEA.l (A7)+,A0
000316A6 <AmiBlitz3.ab2@23909>   MOVE.w dontwrite,D1
000316AA <AmiBlitz3.ab2@23910>    BNE.w JL_0_DB3E
000316B0 <AmiBlitz3.ab2@23911>   MOVE.l destpointer,-(A0)
000316B6 <AmiBlitz3.ab2@23914>   CLR.w proceduremode
000316BC <AmiBlitz3.ab2@23915>   CLR.l currentfunction
000316C2 <AmiBlitz3.ab2@23916>   CLR.w procnum
000316C6 <AmiBlitz3.ab2@23917>    BSR.w JL_0_DB5C
000316CC <AmiBlitz3.ab2@23918>    JSR freepends
000316D2 <AmiBlitz3.ab2@23919> JMP get1bytemain
000316D4 <AmiBlitz3.ab2@23922>   MOVEQ.l #$0C,D0
000316D6 <AmiBlitz3.ab2@23923>   MOVEQ.l #$01,D1
000316DC <AmiBlitz3.ab2@23924>   MOVEA.l _execbase,A6
000316E2 <AmiBlitz3.ab2@23926>   MOVE.l mempool,a0
000316E6 <AmiBlitz3.ab2@23927>   JSR _AllocPooled(a6)
000316E8 <AmiBlitz3.ab2@23928>   MOVEA.l D0,A0
000316EE <AmiBlitz3.ab2@23929>   MOVE.l alllocals,(A0)
000316F4 <AmiBlitz3.ab2@23930>   MOVE.l A0,alllocals
000316FA <AmiBlitz3.ab2@23931>   MOVE.l firstlocal,D0
00031700 <AmiBlitz3.ab2@23932>   CLR.l firstlocal
00031704 <AmiBlitz3.ab2@23933>   MOVE.l D0,$4(A0)
0003170A <AmiBlitz3.ab2@23934>   MOVE.l firstglob,D1
00031710 <AmiBlitz3.ab2@23935>   CLR.l firstglob
00031714 <AmiBlitz3.ab2@23936>   MOVE.l D1,$8(A0)
0003171A <AmiBlitz3.ab2@23937>   TST.b debugmode
0003171E <AmiBlitz3.ab2@23938>    BEQ.b JL_0_DBB0
00031724 <AmiBlitz3.ab2@23939>   TST.w dontwrite
00031728 <AmiBlitz3.ab2@23940>    BNE.b JL_0_DBB0
0003172C <AmiBlitz3.ab2@23941>   MOVEA.l proclocals(PC),A0
0003172E <AmiBlitz3.ab2@23942>   MOVE.l D0,(A0)+
00031730 <AmiBlitz3.ab2@23943>   MOVE.l D1,(A0)
00031732 <AmiBlitz3.ab2@23946> RTS
00031738 <AmiBlitz3.ab2@23949> JMP baddirerr
0003173E <AmiBlitz3.ab2@23953>   TST.w dirmode
00031742 <AmiBlitz3.ab2@23954>    BNE.w JUMP_baddirerr
00031748 <AmiBlitz3.ab2@23955>   MOVE.l firstfor,D1
0003174C <AmiBlitz3.ab2@23956>    BEQ.w JUMP_noforerr
00031752 <AmiBlitz3.ab2@23957>   JSR reget
00031756 <AmiBlitz3.ab2@23958>    BEQ.w JL_0_DC18
0003175A <AmiBlitz3.ab2@23961>   BSR.w getparameter
0003175E <AmiBlitz3.ab2@23962>   MOVEA.l firstfor(PC),A2
00031760 <AmiBlitz3.ab2@23963>   MOVEQ.l #$00,D1
00031764 <AmiBlitz3.ab2@23964>   MOVE.b $10(A2),D1
00031768 <AmiBlitz3.ab2@23965>   SUBI.w #$12,D1
0003176A <AmiBlitz3.ab2@23966>   CMP.w D1,D2
0003176E <AmiBlitz3.ab2@23967>    BNE.w JUMP_noforerr
00031772 <AmiBlitz3.ab2@23968>   LEA ptr_parameterstore(PC),A0
00031776 <AmiBlitz3.ab2@23969>   LEA $11(A2),A1
00031778 <AmiBlitz3.ab2@23970>   SUBQ.w #1,D2
0003177A <AmiBlitz3.ab2@23973>     CMPM.b (A0)+,(A1)+
0003177E <AmiBlitz3.ab2@23974>     BNE.w JUMP_noforerr
00031782 <AmiBlitz3.ab2@23975>   DBF D2,JL_0_DBF0
00031786 <AmiBlitz3.ab2@23977>    BSR.w JL_0_DC1A
0003178C <AmiBlitz3.ab2@23978>    JSR reget
00031790 <AmiBlitz3.ab2@23979>    BEQ.w JL_0_DC16
00031794 <AmiBlitz3.ab2@23980>   CMP.w #$2C,D0
00031798 <AmiBlitz3.ab2@23981>    BNE.w JUMP_syntaxerr
0003179E <AmiBlitz3.ab2@23982>    JSR get1bytemain
000317A2 <AmiBlitz3.ab2@23983> BRA.w JL_0_DBCE
000317A8 <AmiBlitz3.ab2@23986> JMP noforerr
000317AA <AmiBlitz3.ab2@23989> RTS
000317AE <AmiBlitz3.ab2@23993>   MOVE.l 8(a7),a2
000317B2 <AmiBlitz3.ab2@23994>   Dc.l  $f2124400                                          ;fmove.s (a2),fp0
000317B6 <AmiBlitz3.ab2@23995>   Dc.l  $F2174422                                          ;fadd.s (a7),fp0
000317BA <AmiBlitz3.ab2@23996>   Dc.l  $F2126400                                          ;fmove.s fp0,(a2)
000317BC <AmiBlitz3.ab2@24000>   MOVEA.l D1,A2
000317C2 <AmiBlitz3.ab2@24003>   JSR popnext                                           ;error checking for next.
000317C6 <AmiBlitz3.ab2@24004>   MOVE.w $C(A2),D0
000317CC <AmiBlitz3.ab2@24005>   LEA nextb,A0
000317D2 <AmiBlitz3.ab2@24006>   LEA nextbf,A1
000317D6 <AmiBlitz3.ab2@24007>   CMP.w #$1,D0
000317DA <AmiBlitz3.ab2@24008>    BEQ.w JL_0_DC74
000317E0 <AmiBlitz3.ab2@24009>   LEA nextw,A0
000317E6 <AmiBlitz3.ab2@24010>   LEA nextwf,A1
000317EA <AmiBlitz3.ab2@24011>   CMP.w #$2,D0
000317EE <AmiBlitz3.ab2@24012>    BEQ.w JL_0_DC74
000317F4 <AmiBlitz3.ab2@24013>   LEA nextl,A0
000317FA <AmiBlitz3.ab2@24014>   LEA nextlf,A1
000317FE <AmiBlitz3.ab2@24015>   CMP.w #$5,D0
00031802 <AmiBlitz3.ab2@24016>    BNE.w JL_0_DC74
00031808 <AmiBlitz3.ab2@24017>    TST.b fpu
0003180C <AmiBlitz3.ab2@24018>    BEQ 'old
00031812 <AmiBlitz3.ab2@24019>    LEA fpu2dats,a0                                         ;fpu next code
00031818 <AmiBlitz3.ab2@24020>    LEA fpu2date,a1
0003181C <AmiBlitz3.ab2@24021> BRA JL_0_DC74
00031820 <AmiBlitz3.ab2@24024>   MOVE.w #$C900,D1
00031824 <AmiBlitz3.ab2@24025>    BSR.w Atokejsr
0003182A <AmiBlitz3.ab2@24026>   LEA nextf,A0
00031830 <AmiBlitz3.ab2@24027>   LEA nextff,A1
00031836 <AmiBlitz3.ab2@24030>   JSR pokecode
0003183C <AmiBlitz3.ab2@24031>     TST.b fast                                             ;fast for next deactivate
00031840 <AmiBlitz3.ab2@24032> BRA 'l1
00031846 <AmiBlitz3.ab2@24034>     TST.b onestep
0003184A <AmiBlitz3.ab2@24035>     BEQ 'l1
00031850 <AmiBlitz3.ab2@24036>     CLR.b onestep
00031856 <AmiBlitz3.ab2@24037>     SUBQ.l #4,destpointer
0003185A <AmiBlitz3.ab2@24038>     MOVE.w #$5292,d1
00031860 <AmiBlitz3.ab2@24039>     JSR writeword
00031864 <AmiBlitz3.ab2@24042>   MOVE.l JL_0_DCF4(PC),D1
0003186A <AmiBlitz3.ab2@24043>    JSR writelong
00031870 <AmiBlitz3.ab2@24044>   MOVEA.l firstfor,A2
00031876 <AmiBlitz3.ab2@24045>   MOVE.l (A2),firstfor
0003187A <AmiBlitz3.ab2@24046>   MOVEA.l $8(A2),A0
00031880 <AmiBlitz3.ab2@24047>   MOVEA.l destpointer,A1
00031882 <AmiBlitz3.ab2@24048>   MOVE.l A1,D1
00031884 <AmiBlitz3.ab2@24049>   SUB.l A0,D1
00031886 <AmiBlitz3.ab2@24050>   ADDQ.l #2,D1
0003188C <AmiBlitz3.ab2@24051>   CMP.l #MinWordSgnd,D1
00031890 <AmiBlitz3.ab2@24052>    BCC.w JUMP_bigforerr
00031896 <AmiBlitz3.ab2@24053>   TST.w dontwrite
0003189A <AmiBlitz3.ab2@24054>    BNE.w JL_0_DCB4
0003189E <AmiBlitz3.ab2@24055>   MOVE.w D1,-$2(A0)
000318A0 <AmiBlitz3.ab2@24058>   MOVE.l A1,D1
000318A4 <AmiBlitz3.ab2@24059>   SUB.l $4(A2),D1
000318A6 <AmiBlitz3.ab2@24060>   SUBQ.l #6,D1
000318AC <AmiBlitz3.ab2@24061>   CMP.l #MinWordSgnd,D1
000318B0 <AmiBlitz3.ab2@24062>    BCC.w JUMP_bigforerr
000318B6 <AmiBlitz3.ab2@24063>   TST.w dontwrite
000318BA <AmiBlitz3.ab2@24064>    BNE.w JL_0_DCD6
000318BC <AmiBlitz3.ab2@24065>   NEG.w D1
000318C0 <AmiBlitz3.ab2@24066>   MOVE.w D1,-$2(A1)
000318C6 <AmiBlitz3.ab2@24069>   JSR popnext3
000318CC <AmiBlitz3.ab2@24070>   MOVEA.l _execbase,A6
000318CE <AmiBlitz3.ab2@24071>   MOVEA.l A2,A1
000318D0 <AmiBlitz3.ab2@24072>   MOVEQ.l #$00,D0
000318D4 <AmiBlitz3.ab2@24073>   MOVE.b $10(A1),D0
000318DA <AmiBlitz3.ab2@24074>   MOVE.l mempool2,a0
000318DE <AmiBlitz3.ab2@24075>   JSR _FreePooled(A6)
000318E4 <AmiBlitz3.ab2@24076> JMP reget
000318EA <AmiBlitz3.ab2@24079> JMP notallowd
000318F0 <AmiBlitz3.ab2@24082> JMP bigforerr
000318F4 <AmiBlitz3.ab2@24089>   MOVE.w #$664F,-(A7)
000318F8 <AmiBlitz3.ab2@24092> BRA.w JL_0_DCF4
000318FE <AmiBlitz3.ab2@24095> JMP error_dublicate_for
00031902 <AmiBlitz3.ab2@24098> forlineat:   Ds.l 1
00031904 <AmiBlitz3.ab2@24099> fortemp:     Ds.w 1
0003190A <AmiBlitz3.ab2@24106>   CLR.l fp0addr
00031910 <AmiBlitz3.ab2@24107>   TST.w dirmode
00031914 <AmiBlitz3.ab2@24108>    BNE.w JUMP_baddirerr
0003191E <AmiBlitz3.ab2@24109>   MOVE.l linenumat,forlineat
00031924 <AmiBlitz3.ab2@24113>   MOVE.l A5,letstart
00031928 <AmiBlitz3.ab2@24114>   BSR.w getparameter
0003192E <AmiBlitz3.ab2@24115>   MOVE.w D2,fortemp
00031934 <AmiBlitz3.ab2@24116>   JSR findfor
00031938 <AmiBlitz3.ab2@24117>    BEQ.w JUMP_error_dublicate_for
0003193E <AmiBlitz3.ab2@24118>   LEA firstfor,A2
00031944 <AmiBlitz3.ab2@24119>   JSR addhere2
00031946 <AmiBlitz3.ab2@24120>   MOVE.l A2,-(A7)
0003194C <AmiBlitz3.ab2@24121>   TST.b debugmode
00031950 <AmiBlitz3.ab2@24122>    BEQ.b JL_0_DD4C
00031956 <AmiBlitz3.ab2@24123>   JSR chkstak
0003195C <AmiBlitz3.ab2@24124>   MOVE.l AJL_0_DCF0,D1
00031962 <AmiBlitz3.ab2@24125>   JSR  writelong
00031966 <AmiBlitz3.ab2@24128>   MOVE.w fortemp(PC),D2
0003196E <AmiBlitz3.ab2@24129>   MOVE.b #1,formode
00031972 <AmiBlitz3.ab2@24130>   BSR.w AJL_0_DEA6                                         ;for get 1. value
00031978 <AmiBlitz3.ab2@24131>   CLR.b formode
0003197C <AmiBlitz3.ab2@24132>   CMP.w #-$7FE8,D0
00031980 <AmiBlitz3.ab2@24133>    BNE.w JUMP_syntaxerr
00031986 <AmiBlitz3.ab2@24134>   MOVE.w commode,D1
0003198A <AmiBlitz3.ab2@24135>    BNE.w JUMP_syntaxerr
0003198E <AmiBlitz3.ab2@24136>   CMP.b #$6,D2
00031992 <AmiBlitz3.ab2@24137>    BCC.w JUMP_badforerr
00031996 <AmiBlitz3.ab2@24138>   BTST #$F,D2
0003199A <AmiBlitz3.ab2@24139>    BNE.w JL_0_DD86
000319A0 <AmiBlitz3.ab2@24140>   MOVE.w leaamp,D1
000319A6 <AmiBlitz3.ab2@24141>   JSR pokewda5s
000319A8 <AmiBlitz3.ab2@24142>   MOVE.w D3,D1
000319AE <AmiBlitz3.ab2@24143>   JSR  writeword
000319B4 <AmiBlitz3.ab2@24146>   MOVE.w pushindex,D1
000319BA <AmiBlitz3.ab2@24147>   JSR  writeword
000319BE <AmiBlitz3.ab2@24148>   ANDI.w #$FF,D2
000319C0 <AmiBlitz3.ab2@24150>   MOVEA.l (A7),A1
000319C4 <AmiBlitz3.ab2@24151>   MOVE.w D2,$C(A1)
000319C6 <AmiBlitz3.ab2@24152>   MOVE.w D2,-(A7)
000319CA <AmiBlitz3.ab2@24153>    BSR.w eval
000319D0 <AmiBlitz3.ab2@24154>    CLR.b onestep
000319D4 <AmiBlitz3.ab2@24155>    CMP.w #$8019,d0
000319D8 <AmiBlitz3.ab2@24156>    BEQ 'l1
000319E0 <AmiBlitz3.ab2@24157>    MOVE.b #1,onestep
000319E2 <AmiBlitz3.ab2@24160>   MOVE.w (A7),D2
000319E8 <AmiBlitz3.ab2@24161>   MOVE.w pushd0l,D1
000319EC <AmiBlitz3.ab2@24162>   CMP.w #$3,D2
000319F0 <AmiBlitz3.ab2@24163>    BCC.w JL_0_DDB6
000319F6 <AmiBlitz3.ab2@24164>   MOVE.w pushd0wd,D1
000319F8 <AmiBlitz3.ab2@24167>    MOVE.w D1,-(A7)
000319FE <AmiBlitz3.ab2@24168>    TST.b fpu
00031A02 <AmiBlitz3.ab2@24169>    BEQ 'old
00031A06 <AmiBlitz3.ab2@24170>    CMP.b #5,d2
00031A0A <AmiBlitz3.ab2@24171>    BNE 'old
00031A10 <AmiBlitz3.ab2@24172>    MOVE.l #$f2276400,d1
00031A16 <AmiBlitz3.ab2@24174>    JSR writelong
00031A1A <AmiBlitz3.ab2@24175> BRA 'weit
00031A20 <AmiBlitz3.ab2@24178>    JSR  writeword                                          ;fpu for end value
00031A24 <AmiBlitz3.ab2@24181>   CMP.w #-$7FE7,D0
00031A28 <AmiBlitz3.ab2@24182>    BNE.w JL_0_DDCC
00031A2C <AmiBlitz3.ab2@24183>    BSR.w eval
00031A32 <AmiBlitz3.ab2@24184>    TST.b fpu
00031A36 <AmiBlitz3.ab2@24185>    BEQ JL_0_DE0C
00031A3A <AmiBlitz3.ab2@24186>    CMP.b #5,d2
00031A3E <AmiBlitz3.ab2@24187>    BNE JL_0_DE0C
00031A44 <AmiBlitz3.ab2@24188>    MOVE.l #$f2276400,d1                                    ;write step <> 1
00031A4A <AmiBlitz3.ab2@24190>   JSR writelong
00031A4C <AmiBlitz3.ab2@24193>    MOVE.w (a7)+,d1
00031A50 <AmiBlitz3.ab2@24194> BRA fpur
00031A54 <AmiBlitz3.ab2@24197>   CMP.w #$4,D2
00031A58 <AmiBlitz3.ab2@24198>    BCC.w JL_0_DDE0
00031A5C <AmiBlitz3.ab2@24199>   MOVE.w #$7001,D1
00031A62 <AmiBlitz3.ab2@24200>   JSR writeword
00031A66 <AmiBlitz3.ab2@24201> BRA.w JL_0_DE0C
00031A6C <AmiBlitz3.ab2@24204> JMP badforerr
00031A70 <AmiBlitz3.ab2@24207>   BNE.w JL_0_DDFA
00031A74 <AmiBlitz3.ab2@24208>   MOVE.w #$7001,D1
00031A7A <AmiBlitz3.ab2@24209>   JSR writeword
00031A80 <AmiBlitz3.ab2@24210>   MOVE.w swapd0,D1
00031A86 <AmiBlitz3.ab2@24211>   JSR writeword
00031A8A <AmiBlitz3.ab2@24212> BRA.w JL_0_DE0C
00031A90 <AmiBlitz3.ab2@24215>   TST.b fpu
00031A94 <AmiBlitz3.ab2@24216>    BEQ 'old
00031A98 <AmiBlitz3.ab2@24217>   CMP.b #5,d2
00031A9C <AmiBlitz3.ab2@24218>    BNE 'old
00031AA2 <AmiBlitz3.ab2@24219>   MOVE.l #$f23c5000,d1
00031AA8 <AmiBlitz3.ab2@24220>   JSR writelong
00031AAC <AmiBlitz3.ab2@24221>   MOVE.w #$1,d1
00031AB2 <AmiBlitz3.ab2@24222>   JSR writeword
00031AB8 <AmiBlitz3.ab2@24223>   MOVE.l #$f2276400,d1
00031ABE <AmiBlitz3.ab2@24224>   JSR writelong
00031AC0 <AmiBlitz3.ab2@24225>   MOVE.w (a7)+,d1
00031AC4 <AmiBlitz3.ab2@24226> BRA fpur
00031AC8 <AmiBlitz3.ab2@24229>   MOVE.w #$203C,D1                                         ;write step 1
00031ACE <AmiBlitz3.ab2@24230>   JSR writeword
00031AD4 <AmiBlitz3.ab2@24231>   MOVE.l #SA_BackFill,D1                                   ;#$80000041,d1 org source  ;ffp '1'
00031ADA <AmiBlitz3.ab2@24232>   JSR writelong
00031ADC <AmiBlitz3.ab2@24235>   MOVE.w (A7)+,D1
00031AE2 <AmiBlitz3.ab2@24236>   JSR writeword                                            ;push step on stack
00031AE4 <AmiBlitz3.ab2@24239>   MOVE.w (A7)+,D2
00031AE6 <AmiBlitz3.ab2@24240>   MOVEA.l (A7),A1
00031AEE <AmiBlitz3.ab2@24241>   MOVE.l destpointer,$4(A1)
00031AF4 <AmiBlitz3.ab2@24242>   LEA forcompb,A0
00031AFA <AmiBlitz3.ab2@24243>   LEA forcompbf,A1
00031AFE <AmiBlitz3.ab2@24244>   CMP.w #$1,D2
00031B02 <AmiBlitz3.ab2@24245>    BEQ.w JL_0_DE7E
00031B08 <AmiBlitz3.ab2@24246>   LEA forcompw,A0
00031B0E <AmiBlitz3.ab2@24247>   LEA forcompwf,A1
00031B12 <AmiBlitz3.ab2@24248>   CMP.w #$2,D2
00031B16 <AmiBlitz3.ab2@24249>    BEQ.w JL_0_DE7E
00031B1C <AmiBlitz3.ab2@24250>   LEA forcompl,A0
00031B22 <AmiBlitz3.ab2@24251>   LEA forcomplf,A1
00031B26 <AmiBlitz3.ab2@24252>   CMP.w #$5,D2
00031B2A <AmiBlitz3.ab2@24253>    BNE.w JL_0_DE7E
00031B30 <AmiBlitz3.ab2@24254>   TST.b fpu
00031B34 <AmiBlitz3.ab2@24255>    BEQ 'old
00031B3A <AmiBlitz3.ab2@24256>   LEA fpu_start,a0
00031B40 <AmiBlitz3.ab2@24257>   LEA fpu_end,a1
00031B46 <AmiBlitz3.ab2@24258>   JSR pokecode
00031B4A <AmiBlitz3.ab2@24259> BRA fpu3
00031B50 <AmiBlitz3.ab2@24262>   LEA forcompf,A0                                         ;
00031B56 <AmiBlitz3.ab2@24263>   LEA forcompff,A1
00031B5C <AmiBlitz3.ab2@24264>   JSR pokecode
00031B60 <AmiBlitz3.ab2@24265>   MOVE.w #$C900,D1
00031B64 <AmiBlitz3.ab2@24266>   BSR.w Atokejsr
00031B6A <AmiBlitz3.ab2@24267>   LEA forcompf2,A0
00031B70 <AmiBlitz3.ab2@24268>   LEA forcompf2f,A1
00031B76 <AmiBlitz3.ab2@24271>   JSR pokecode
00031B7C <AmiBlitz3.ab2@24272>   TST.b fast                                               ;fast for next
00031B80 <AmiBlitz3.ab2@24273>    BEQ 's1
00031B84 <AmiBlitz3.ab2@24274>   CMP.w #3,d2
00031B88 <AmiBlitz3.ab2@24275>    BNE 's1
00031B8E <AmiBlitz3.ab2@24276>   TST.b onestep
00031B92 <AmiBlitz3.ab2@24277>    BEQ 's1
00031B9C <AmiBlitz3.ab2@24278>   SUB.l #10,destpointer
00031BA0 <AmiBlitz3.ab2@24279>   MOVE.w #$b081,d1
00031BA6 <AmiBlitz3.ab2@24280>   JSR writeword
00031BAA <AmiBlitz3.ab2@24284>   MOVE.l thebgt(PC),D1
00031BB0 <AmiBlitz3.ab2@24285>   JSR writelong
00031BB2 <AmiBlitz3.ab2@24288>   MOVEA.l (A7)+,A1
00031BBA <AmiBlitz3.ab2@24289>   MOVE.l destpointer,$8(A1)
00031BC0 <AmiBlitz3.ab2@24290> JMP reget
00031BC4 <AmiBlitz3.ab2@24293>   MOVEA.l 8(a7),a2
00031BC8 <AmiBlitz3.ab2@24294>   Dc.l $f2124400                                           ;fmove.s (a2),fp0
00031BCE <AmiBlitz3.ab2@24295>   fmove.s 4(a7),fp1
00031BD2 <AmiBlitz3.ab2@24296>   BTST.b #7,(a7)
00031BD6 <AmiBlitz3.ab2@24297>   BNE 'negi
00031BDA <AmiBlitz3.ab2@24298>   fcmp.x fp1,fp0
00031BDE <AmiBlitz3.ab2@24299> BRA 'negi2
00031BE2 <AmiBlitz3.ab2@24302>   fcmp.x fp0,fp1
00031BE6 <AmiBlitz3.ab2@24305>   Dc.l $f2920000                                           ;fbgt.w
00031BEA <AmiBlitz3.ab2@24309>   BGT.w thebgt
00031BF0 <AmiBlitz3.ab2@24312>   MOVE.l A5,letstart
00031BF4 <AmiBlitz3.ab2@24313>   BSR.w getparameter
00031BFE <AmiBlitz3.ab2@24319>   MOVE.l destpointer,pushpc
00031C08 <AmiBlitz3.ab2@24320>   MOVE.l hunkoffsetbase,pushoff
00031C0E <AmiBlitz3.ab2@24321>   CLR.l rightsidetype
00031C16 <AmiBlitz3.ab2@24322>   MOVE.w #$0001,regnum
00031C1C <AmiBlitz3.ab2@24323>   JSR JL_0_8E3C
00031C22 <AmiBlitz3.ab2@24324>   JSR calcvar
00031C28 <AmiBlitz3.ab2@24325>   TST.b formode
00031C2C <AmiBlitz3.ab2@24326>   BEQ 'lf1
00031C32 <AmiBlitz3.ab2@24327>   CMP.l #newtype_double,A2
00031C36 <AmiBlitz3.ab2@24328>   BEQ JUMP_notallowd
00031C3C <AmiBlitz3.ab2@24329>   MOVE.l a2,currtype
00031C42 <AmiBlitz3.ab2@24332>   CLR.w startoffsetmore
00031C46 <AmiBlitz3.ab2@24333>   CMP.w #$3d,d0
00031C4A <AmiBlitz3.ab2@24334>   BNE 'l1a
00031C4E <AmiBlitz3.ab2@24335>   BTST #15,d2
00031C52 <AmiBlitz3.ab2@24336>   BEQ 'l1a
00031C56 <AmiBlitz3.ab2@24337>   CMP.b #1,d2
00031C5A <AmiBlitz3.ab2@24338>   BNE 'l1a
00031C64 <AmiBlitz3.ab2@24339>   MOVE.w leaa0a0+2,startoffsetmore
00031C6A <AmiBlitz3.ab2@24342>   CLR.w regnum
00031C6E <AmiBlitz3.ab2@24343>   BSR.w JL_0_B5D2
00031C74 <AmiBlitz3.ab2@24344>   CLR.w commode
00031C7A <AmiBlitz3.ab2@24345>   CLR.w stackcorrect
00031C80 <AmiBlitz3.ab2@24346>   CLR.w pcodd
00031C86 <AmiBlitz3.ab2@24347>   MOVE.w startoffsetmore,d1
00031C8A <AmiBlitz3.ab2@24348>   BTST #0,d1
00031C8E <AmiBlitz3.ab2@24349>   BEQ 'l2a
00031C96 <AmiBlitz3.ab2@24350>   MOVE.w #1,pcodd
00031C9A <AmiBlitz3.ab2@24353>   CMP.w #$3D,D0                                            ;=
00031C9E <AmiBlitz3.ab2@24354>   BEQ.w JL_0_DEE0
00031CA0 <AmiBlitz3.ab2@24357>   MOVE.b (a5)+,d1
00031CA4 <AmiBlitz3.ab2@24358>   BEQ 'l10
00031CA8 <AmiBlitz3.ab2@24359>   CMP.b #":",d1
00031CAC <AmiBlitz3.ab2@24360>   BEQ 'l10
00031CB0 <AmiBlitz3.ab2@24361>   CMP.b #";",d1
00031CB4 <AmiBlitz3.ab2@24362>   BEQ 'l10
00031CB8 <AmiBlitz3.ab2@24363>   CMP.b #"0",d1
00031CBC <AmiBlitz3.ab2@24364>   BLT 'l11
00031CC0 <AmiBlitz3.ab2@24365>   CMP.b #"9",d1
00031CC4 <AmiBlitz3.ab2@24366>   BGT 'l11
00031CC8 <AmiBlitz3.ab2@24367> BRA.s 'l1
00031CD0 <AmiBlitz3.ab2@24370>   MOVE.b #1,quickadd
00031CD6 <AmiBlitz3.ab2@24373>   MOVEA.l letstart,A5
00031CD8 <AmiBlitz3.ab2@24374>   SUBQ.w #1,A5
00031CDC <AmiBlitz3.ab2@24377>   CMP.b #$7,D2
00031CE0 <AmiBlitz3.ab2@24378>    BNE.w JL_0_DF8A
00031CE4 <AmiBlitz3.ab2@24384>   MOVEM.w D2-D3,-(A7)
00031CEA <AmiBlitz3.ab2@24385>   MOVE.l lastoffset_org,-(A7)
00031CF0 <AmiBlitz3.ab2@24386>   MOVE.w varmode,-(A7)
00031CFA <AmiBlitz3.ab2@24388>    MOVE.l #forthstack,forthsp
00031D04 <AmiBlitz3.ab2@24389>    MOVE.l #precstack,precsp
00031D0A <AmiBlitz3.ab2@24390>    CLR.w regnum
00031D10 <AmiBlitz3.ab2@24391>    CLR.w nonew
00031D16 <AmiBlitz3.ab2@24392>    CLR.w sbasegot
00031D20 <AmiBlitz3.ab2@24393>    MOVE.w varcodelen,oldvcodelen
00031D26 <AmiBlitz3.ab2@24394>    CLR.w varcodelen
00031D2E <AmiBlitz3.ab2@24395>    MOVE.w #$FFFF,lasta6
00031D30 <AmiBlitz3.ab2@24398>   MOVEQ.l #$07,D2
00031D34 <AmiBlitz3.ab2@24399>    BSR.w eval
00031D3A <AmiBlitz3.ab2@24400>   MOVE.w (A7)+,varmode
00031D40 <AmiBlitz3.ab2@24401>   MOVE.l (A7)+,lastoffset_org
00031D46 <AmiBlitz3.ab2@24402>   MOVE.w moved0a3,D1
00031D4C <AmiBlitz3.ab2@24403>    JSR writeword
00031D52 <AmiBlitz3.ab2@24404>   MOVE.w commode,D1
00031D56 <AmiBlitz3.ab2@24405>    BEQ.w JL_0_DF38
00031D5C <AmiBlitz3.ab2@24406>   LEA pulla2st,A0
00031D62 <AmiBlitz3.ab2@24407>   LEA pulla2stf,A1
00031D68 <AmiBlitz3.ab2@24408>    JSR pokecode
00031D6C <AmiBlitz3.ab2@24409> BRA.w JL_0_DF3C
00031D70 <AmiBlitz3.ab2@24412>   BSR.w JL_0_B63C
00031D74 <AmiBlitz3.ab2@24415>   MOVEM.w (A7)+,D2-D3
00031D78 <AmiBlitz3.ab2@24416>   BTST #$F,D2
00031D7C <AmiBlitz3.ab2@24417>   BNE.w JL_0_DF58
00031D82 <AmiBlitz3.ab2@24418>     MOVE.w D3,leaa5d3a2+2
00031D88 <AmiBlitz3.ab2@24419>     MOVE.l leaa5d3a2,D1
00031D8E <AmiBlitz3.ab2@24420>     JSR pokela5s
00031D92 <AmiBlitz3.ab2@24423>   MOVE.w #$FE6F,D1
00031D98 <AmiBlitz3.ab2@24424>   JSR uselib
00031D9E <AmiBlitz3.ab2@24425>   MOVE.l #$C700,D1
00031DA4 <AmiBlitz3.ab2@24426>   MOVE.l d1,lastinstruction
00031DAA <AmiBlitz3.ab2@24427>   MOVE.w varmode,D2
00031DAE <AmiBlitz3.ab2@24428>   BNE.w JL_0_DF70
00031DB0 <AmiBlitz3.ab2@24429>     ADDQ.w #1,D1
00031DB4 <AmiBlitz3.ab2@24432>   BSR.w Atokejsr
00031DB8 <AmiBlitz3.ab2@24433>   CMP.w #$2C,D0
00031DBC <AmiBlitz3.ab2@24434>   BNE.w JL_0_E0C6
00031DC2 <AmiBlitz3.ab2@24436>   MOVE.w addq4a2,D1
00031DC8 <AmiBlitz3.ab2@24437>   JSR writeword
00031DCC <AmiBlitz3.ab2@24438> BRA.w JL_0_E018
00031DD2 <AmiBlitz3.ab2@24441> JMP error4char
00031DD8 <AmiBlitz3.ab2@24444> JMP error_convert_types
00031DDC <AmiBlitz3.ab2@24448>    BTST #$E,D2
00031DE0 <AmiBlitz3.ab2@24449>    BNE.w JL_0_DF9C
00031DE2 <AmiBlitz3.ab2@24450>   TST.b D2
00031DE6 <AmiBlitz3.ab2@24451>    BEQ.w JUMP_noleterr
00031DEC <AmiBlitz3.ab2@24452>    TST.b newsyntax
00031DF0 <AmiBlitz3.ab2@24453>    BEQ JL_0_DFA0
00031DF4 <AmiBlitz3.ab2@24456>    CMP.w #$4022,(a5)
00031DF8 <AmiBlitz3.ab2@24457>    BNE JL_0_DFA0
00031DFE <AmiBlitz3.ab2@24458>    CMP.l #3,d2
00031E02 <AmiBlitz3.ab2@24459>    BNE  JUMP_error_convert_types
00031E04 <AmiBlitz3.ab2@24460>    ADDQ #2,a5
00031E06 <AmiBlitz3.ab2@24461>    MOVEQ #0,d0
00031E08 <AmiBlitz3.ab2@24462>    MOVE.b (a5)+,d0
00031E0C <AmiBlitz3.ab2@24463>    BEQ JL_0_DFA0
00031E10 <AmiBlitz3.ab2@24464>    CMP.b #$22,d0
00031E14 <AmiBlitz3.ab2@24465>    BNE 'l1
00031E18 <AmiBlitz3.ab2@24466>    MOVE.b #0,d0
00031E1C <AmiBlitz3.ab2@24467> BRA 'do
00031E1E <AmiBlitz3.ab2@24470>   ASL.l #8,d0
00031E20 <AmiBlitz3.ab2@24471>    MOVE.b (a5)+,d0
00031E24 <AmiBlitz3.ab2@24472>    BEQ JL_0_DFA0
00031E28 <AmiBlitz3.ab2@24473>    CMP.b #$22,d0
00031E2C <AmiBlitz3.ab2@24474>    BNE 'l2
00031E30 <AmiBlitz3.ab2@24475>    MOVE.b #0,d0
00031E32 <AmiBlitz3.ab2@24476>    ASR.l #8,d0
00031E36 <AmiBlitz3.ab2@24477> BRA 'do
00031E38 <AmiBlitz3.ab2@24480>   ASL.l #8,d0
00031E3A <AmiBlitz3.ab2@24481>     MOVE.b (a5)+,d0
00031E3E <AmiBlitz3.ab2@24482>    BEQ JL_0_DFA0
00031E42 <AmiBlitz3.ab2@24483>    CMP.b #$22,d0
00031E46 <AmiBlitz3.ab2@24484>    BNE 'l3
00031E4A <AmiBlitz3.ab2@24485>    MOVE.b #0,d0
00031E4C <AmiBlitz3.ab2@24486>    ASR.l #8,d0
00031E50 <AmiBlitz3.ab2@24487> BRA 'do
00031E52 <AmiBlitz3.ab2@24490>   ASL.l #8,d0
00031E54 <AmiBlitz3.ab2@24491>     MOVE.b (a5)+,d0
00031E58 <AmiBlitz3.ab2@24492>    BEQ JL_0_DFA0
00031E5C <AmiBlitz3.ab2@24493>    CMP.b #$22,d0
00031E60 <AmiBlitz3.ab2@24494>    BNE 'l4
00031E64 <AmiBlitz3.ab2@24495>    MOVE.b #0,d0
00031E66 <AmiBlitz3.ab2@24496>    ASR.l #8,d0
00031E6A <AmiBlitz3.ab2@24497> BRA 'do
00031E6E <AmiBlitz3.ab2@24500>    CMP.b #$22,(a5)+
00031E72 <AmiBlitz3.ab2@24501>    BNE JUMP_error4char
00031E76 <AmiBlitz3.ab2@24504>   MOVE.w #$2b7c,d1
00031E7C <AmiBlitz3.ab2@24505>    TST.w varmode
00031E80 <AmiBlitz3.ab2@24506>    BEQ 'g3
00031E84 <AmiBlitz3.ab2@24507>    BCLR #9,d1
00031E8A <AmiBlitz3.ab2@24510>     JSR writeword
00031E8C <AmiBlitz3.ab2@24511>     MOVE.l d0,d1
00031E92 <AmiBlitz3.ab2@24512>     JSR writelong
00031E94 <AmiBlitz3.ab2@24513>     MOVE.w d3,d1
00031E9A <AmiBlitz3.ab2@24514>     JSR writeword
00031EA0 <AmiBlitz3.ab2@24515>     JSR get1bytemain
00031EA2 <AmiBlitz3.ab2@24516> RTS
00031EA8 <AmiBlitz3.ab2@24522> JMP noleterr
00031EAE <AmiBlitz3.ab2@24526>   MOVE.w d2,vartype
00031EB2 <AmiBlitz3.ab2@24527>   MOVE.b #$3,D2
00031EB6 <AmiBlitz3.ab2@24530>   CMP.b #5,d2
00031EBA <AmiBlitz3.ab2@24531>   BNE 'l1
00031EC0 <AmiBlitz3.ab2@24532>   MOVE.l a2,currtype
00031EC4 <AmiBlitz3.ab2@24536>   MOVEM.w D2-D3,-(A7)
00031ECA <AmiBlitz3.ab2@24537>   MOVE.w varmode,-(A7)
00031ED0 <AmiBlitz3.ab2@24538>   MOVE.l a2,leftsidetype
00031ED4 <AmiBlitz3.ab2@24539>   BTST #$f,d2
00031ED8 <AmiBlitz3.ab2@24540>   BEQ 'nomultiassign
00031EDE <AmiBlitz3.ab2@24541>   CLR.l leftsidetype                        ;its multiassign to type entries so no typecheck need
00031EE2 <AmiBlitz3.ab2@24542> 'nomultiassign  ANDI.w #$FF,D2
00031EE8 <AmiBlitz3.ab2@24543>   MOVE.l lastoffset_org,-(A7)
00031EEC <AmiBlitz3.ab2@24544>   BSR.w eval                                ; calc right side of var assign
00031EF0 <AmiBlitz3.ab2@24546>   MOVEM.l a0/a1,-(a7)
00031EF6 <AmiBlitz3.ab2@24547>   MOVE.l leftsidetype,a0
00031EFC <AmiBlitz3.ab2@24548>   CMP.l #0,a0
00031F00 <AmiBlitz3.ab2@24549>   BEQ 'nocheck
00031F08 <AmiBlitz3.ab2@24550>   CMP.l #$100,4(a0)
00031F0C <AmiBlitz3.ab2@24551>   BLE 'nocheck
00031F12 <AmiBlitz3.ab2@24552>   TST.l typetocast
00031F16 <AmiBlitz3.ab2@24553>   BEQ 'nocast
00031F1C <AmiBlitz3.ab2@24554>   MOVE.l typetocast,a1
00031F20 <AmiBlitz3.ab2@24555>   BRA 'typecheck
00031F26 <AmiBlitz3.ab2@24556> 'nocast  TST.l rightsidetype
00031F2A <AmiBlitz3.ab2@24557>   BEQ 'nocheck
00031F30 <AmiBlitz3.ab2@24558>   MOVE.l rightsidetype,a1
00031F38 <AmiBlitz3.ab2@24559>   CMP.l #$100,4(a1)
00031F3C <AmiBlitz3.ab2@24560>   BGE 'typecheck
00031F44 <AmiBlitz3.ab2@24561>   CMP.l #$3,4(a1)
00031F48 <AmiBlitz3.ab2@24562>   BEQ 'ok                              ;long assign is allow with this codelines
00031F4C <AmiBlitz3.ab2@24563>   BRA 'error
00031F52 <AmiBlitz3.ab2@24565>   TST.b typecheck
00031F56 <AmiBlitz3.ab2@24566>   BEQ 'nocheck
00031F5C <AmiBlitz3.ab2@24567>   TST.b notypecheck
00031F60 <AmiBlitz3.ab2@24568>   BNE 'ok
00031F62 <AmiBlitz3.ab2@24569>   CMP.l a0,a1
00031F66 <AmiBlitz3.ab2@24570>   BEQ 'ok
00031F6A <AmiBlitz3.ab2@24572>   MOVE.l 4(a1),a1                   ; load the address of 1. type.
00031F6E <AmiBlitz3.ab2@24573>   CMP.l $a(a1),a0                   ; check if the bigger type contain in first place same type as the function need
00031F72 <AmiBlitz3.ab2@24574>   BEQ 'ok
00031F78 <AmiBlitz3.ab2@24576>  JMP   error_convert_types     ;for syntax 4  = typecheck
00031F7E <AmiBlitz3.ab2@24579>    CLR.l typetocast
00031F82 <AmiBlitz3.ab2@24580>    MOVEM.l (a7)+, a0/a1
00031F88 <AmiBlitz3.ab2@24581>   MOVE.l (A7)+,lastoffset_org
00031F8E <AmiBlitz3.ab2@24582>   MOVE.w commode,D1
00031F92 <AmiBlitz3.ab2@24583>    BNE.w JL_0_DFCC
00031F96 <AmiBlitz3.ab2@24584>    BSR.w JL_0_B63C
00031F9C <AmiBlitz3.ab2@24587>   MOVE.w (A7)+,varmode
00031FA0 <AmiBlitz3.ab2@24588>   MOVEM.w (A7)+,D2-D3
00031FA4 <AmiBlitz3.ab2@24590>   MOVE.w #$2B40,D1
00031FAA <AmiBlitz3.ab2@24591>   MOVE.w varmode,D4
00031FAE <AmiBlitz3.ab2@24592>    BEQ.w JL_0_DFE8
00031FB2 <AmiBlitz3.ab2@24593>   BCLR #$9,D1
00031FB6 <AmiBlitz3.ab2@24596>   BTST #$F,D2
00031FBA <AmiBlitz3.ab2@24597>    BEQ.w JL_0_E090
00031FC0 <AmiBlitz3.ab2@24598>    TST.b stackcorrect
00031FC4 <AmiBlitz3.ab2@24599>    BNE 'st1
00031FCA <AmiBlitz3.ab2@24600>   MOVE.w commode,D1
00031FCE <AmiBlitz3.ab2@24601>    BEQ.w JL_0_E004
00031FD4 <AmiBlitz3.ab2@24604>   MOVE.w pulla2,D1
00031FDA <AmiBlitz3.ab2@24605>    JSR writeword
00031FDE <AmiBlitz3.ab2@24608>   MOVE.w #$2480,D1
00031FE2 <AmiBlitz3.ab2@24609>    MOVEM.l a0/d0,-(a7)
00031FE8 <AmiBlitz3.ab2@24610>    MOVEA.l lastoffset_org,A0
00031FEA <AmiBlitz3.ab2@24611>    MOVE.l A0,D0
00031FEE <AmiBlitz3.ab2@24612>    BEQ.w 'skip
00031FF0 <AmiBlitz3.ab2@24613>    MOVEA.l D0,A0
00031FF8 <AmiBlitz3.ab2@24614>    MOVE.l $A(A0),currtype
00031FFC <AmiBlitz3.ab2@24617>   MOVEM.l (a7)+,a0/d0
00032000 <AmiBlitz3.ab2@24618>   CMP.w #$2C,D0
00032004 <AmiBlitz3.ab2@24619>    BNE.w JL_0_E090
00032008 <AmiBlitz3.ab2@24620>     MOVE.w #$24C0,D1
0003200C <AmiBlitz3.ab2@24621>    BSR.w JL_0_E090                                         ;write store
00032012 <AmiBlitz3.ab2@24624>    MOVE.l lastoffset_org,D0
0003201A <AmiBlitz3.ab2@24628>   MOVE.w #$FFFF,commode
00032020 <AmiBlitz3.ab2@24629>   CLR.w varcodelen
00032028 <AmiBlitz3.ab2@24630>   MOVE.b #1,optiarray
0003202E <AmiBlitz3.ab2@24631>   MOVE.w pusha2,D1
00032034 <AmiBlitz3.ab2@24632>    JSR writeword
0003203A <AmiBlitz3.ab2@24633>   TST.l lastoffset_org
0003203E <AmiBlitz3.ab2@24634>   BEQ dimmore
00032044 <AmiBlitz3.ab2@24635>   MOVEA.l lastoffset_org,A0
00032046 <AmiBlitz3.ab2@24636>   MOVE.l (A0),D0
0003204A <AmiBlitz3.ab2@24637>    BEQ.w JUMP_comerr
0003204C <AmiBlitz3.ab2@24638>   MOVEA.l D0,A0
00032052 <AmiBlitz3.ab2@24639>   MOVE.l A0,lastoffset_org
00032058 <AmiBlitz3.ab2@24640>   BTST #$1,$7(A0)
0003205C <AmiBlitz3.ab2@24641>    BNE.w JUMP_nocomerr
00032060 <AmiBlitz3.ab2@24642>   MOVEA.l $A(A0),A1
00032064 <AmiBlitz3.ab2@24643>   MOVE.l $4(A1),D2
0003206A <AmiBlitz3.ab2@24646>   BTST #$0,$7(A0)
0003206E <AmiBlitz3.ab2@24647>    BNE.w JL_0_E078
00032074 <AmiBlitz3.ab2@24648>   CMP.l #$100,D2
00032078 <AmiBlitz3.ab2@24649>    BCC.l JUMP_nocomerr
0003207C <AmiBlitz3.ab2@24650> BRA.w JL_0_E088                                     ; do do type\x= 10,20,30....
00032082 <AmiBlitz3.ab2@24653>         CLR.b optiarray
00032086 <AmiBlitz3.ab2@24654>         CMP.w #"@@",(a5)
0003208A <AmiBlitz3.ab2@24655>         BEQ 'n1
0003208E <AmiBlitz3.ab2@24656> BRA 'd1
00032094 <AmiBlitz3.ab2@24659>   JSR nextline
00032096 <AmiBlitz3.ab2@24660>         MOVE.l a5,-(a7)
00032098 <AmiBlitz3.ab2@24663>   MOVE.b (a5)+,d0
0003209C <AmiBlitz3.ab2@24664>         CMP.b #$20,d0
000320A0 <AmiBlitz3.ab2@24665>         BEQ 'l2
000320A2 <AmiBlitz3.ab2@24666>         MOVE.l (a7)+,a5
000320A6 <AmiBlitz3.ab2@24667>         CMP.b #";",d0
000320AA <AmiBlitz3.ab2@24668>         BEQ 'n1
000320B0 <AmiBlitz3.ab2@24671>         TST.w debugmode
000320B4 <AmiBlitz3.ab2@24672>         BEQ JL_0_DEE0
000320B6 <AmiBlitz3.ab2@24673>         MOVE.l a0,-(a7)
000320BC <AmiBlitz3.ab2@24674>         MOVE.l pushat,a0
000320C2 <AmiBlitz3.ab2@24675>         CMP.l #0,a0
000320C6 <AmiBlitz3.ab2@24676>         BNE 'o1
000320CA <AmiBlitz3.ab2@24677> BRA 'skip
000320D2 <AmiBlitz3.ab2@24680>         ADD.l #1,2(a0)
000320D8 <AmiBlitz3.ab2@24683>   CLR.w commode
000320E0 <AmiBlitz3.ab2@24684>         MOVE.b #1,stackcorrect
000320E2 <AmiBlitz3.ab2@24685>         MOVE.l (a7)+,a0
000320E8 <AmiBlitz3.ab2@24686> JMP JL_0_DEE0
000320EE <AmiBlitz3.ab2@24689> JMP nocomerr
000320F4 <AmiBlitz3.ab2@24692>   CMP.l #$100,D2
000320F8 <AmiBlitz3.ab2@24693>    BCS.w JL_0_E084
000320FA <AmiBlitz3.ab2@24694>   MOVEQ.l #$00,D2
000320FE <AmiBlitz3.ab2@24697>   BSET #$E,D2
00032102 <AmiBlitz3.ab2@24700>   BSET #$F,D2
00032106 <AmiBlitz3.ab2@24701> BRA.w JL_0_DEE0
0003210C <AmiBlitz3.ab2@24704>    MOVE.l destpointer,a4
00032114 <AmiBlitz3.ab2@24705>    MOVE.l #$f22a6400,-4(a4)
0003211A <AmiBlitz3.ab2@24706>    MOVE.w arrayoffset,d1
00032120 <AmiBlitz3.ab2@24707> JMP writeword
00032126 <AmiBlitz3.ab2@24710> JMP comerr
0003212C <AmiBlitz3.ab2@24713>    TST.b fpu
00032130 <AmiBlitz3.ab2@24714>    BEQ 'nofloat
00032134 <AmiBlitz3.ab2@24715>    CMP.b #5,d2
00032138 <AmiBlitz3.ab2@24716>    BNE 'nofloat
0003213E <AmiBlitz3.ab2@24717>    CLR.w fp0var
00032144 <AmiBlitz3.ab2@24718>    LEA regtable,a4
00032146 <AmiBlitz3.ab2@24719>    TST.l (a4)
0003214A <AmiBlitz3.ab2@24720>    BEQ 'noreg
0003214E <AmiBlitz3.ab2@24721>    BTST #15,d2                                             ;regvars
00032152 <AmiBlitz3.ab2@24722>    BNE 'noreg
00032156 <AmiBlitz3.ab2@24723>    CMP.w 0+4(a4),d3
0003215A <AmiBlitz3.ab2@24724>    BNE 'doreg1
00032160 <AmiBlitz3.ab2@24725>    MOVE.l #$f2000380,d1
00032166 <AmiBlitz3.ab2@24726>    MOVE.w regnum,d0
0003216A <AmiBlitz3.ab2@24727>    BNE 'noopt
00032170 <AmiBlitz3.ab2@24733>    MOVE.l destpointer,a4
00032178 <AmiBlitz3.ab2@24734>    CMP.l #$f2001c80,-8(a4)
0003217C <AmiBlitz3.ab2@24735>    BNE 'noopt
00032184 <AmiBlitz3.ab2@24736>    CMP.l #$f2000422,-4(a4)
00032188 <AmiBlitz3.ab2@24737>    BNE 'noopt
0003218E <AmiBlitz3.ab2@24738>    MOVE.l #$f20003a2,d1
00032198 <AmiBlitz3.ab2@24739>    SUB.l #8,destpointer
0003219A <AmiBlitz3.ab2@24742>    ASL.w #7,d0
0003219C <AmiBlitz3.ab2@24743>    OR.w d0,d1
000321A2 <AmiBlitz3.ab2@24744>    JSR writelong
000321A4 <AmiBlitz3.ab2@24745> RTS
000321A8 <AmiBlitz3.ab2@24748>   CMP.w 8+4(a4),d3
000321AC <AmiBlitz3.ab2@24749>    BNE 'doreg2
000321B2 <AmiBlitz3.ab2@24750>    MOVE.l #$f2000300,d1
000321B8 <AmiBlitz3.ab2@24751>    MOVE.w regnum,d0
000321BA <AmiBlitz3.ab2@24752>    ASL.w #7,d0
000321BC <AmiBlitz3.ab2@24753>    OR.w d0,d1
000321C2 <AmiBlitz3.ab2@24754>    JSR writelong
000321C4 <AmiBlitz3.ab2@24755> RTS
000321C8 <AmiBlitz3.ab2@24758>   CMP.w 16+4(a4),d3
000321CC <AmiBlitz3.ab2@24759>    BNE 'doreg3
000321D2 <AmiBlitz3.ab2@24760>    MOVE.l #$f2000280,d1
000321D8 <AmiBlitz3.ab2@24761>    MOVE.w regnum,d0
000321DA <AmiBlitz3.ab2@24762>    ASL.w #7,d0
000321DC <AmiBlitz3.ab2@24763>    OR.w d0,d1
000321E2 <AmiBlitz3.ab2@24764>    JSR  writelong
000321E4 <AmiBlitz3.ab2@24765>  RTS
000321E8 <AmiBlitz3.ab2@24768>   CMP.w 24+4(a4),d3
000321EC <AmiBlitz3.ab2@24769>    BNE 'doreg4
000321F2 <AmiBlitz3.ab2@24770>    MOVE.l #$f2000200,d1
000321F8 <AmiBlitz3.ab2@24771>    MOVE.w regnum,d0
000321FA <AmiBlitz3.ab2@24772>    ASL.w #7,d0
000321FC <AmiBlitz3.ab2@24773>    OR.w d0,d1
00032202 <AmiBlitz3.ab2@24774>    JSR writelong
00032204 <AmiBlitz3.ab2@24775> RTS
00032208 <AmiBlitz3.ab2@24778>   CMP.w 32+4(a4),d3
0003220C <AmiBlitz3.ab2@24779>    BNE 'noreg
00032212 <AmiBlitz3.ab2@24780>    MOVE.l #$f2000180,d1
00032218 <AmiBlitz3.ab2@24781>    MOVE.w regnum,d0
0003221A <AmiBlitz3.ab2@24782>    ASL.w #7,d0
0003221C <AmiBlitz3.ab2@24783>    OR.w d0,d1
00032222 <AmiBlitz3.ab2@24784>    JSR writelong
00032224 <AmiBlitz3.ab2@24785> RTS
0003222A <AmiBlitz3.ab2@24788>    TST.w regnum
0003222E <AmiBlitz3.ab2@24789>    BNE 'nofp0
00032234 <AmiBlitz3.ab2@24790>    MOVE.l destpointer ,a4
0003223C <AmiBlitz3.ab2@24791>    CMP.l #$f2304400,-6(a4)
00032240 <AmiBlitz3.ab2@24792>    BNE 'do
00032246 <AmiBlitz3.ab2@24793>    CMP.w #$1990,-2(a4)
0003224A <AmiBlitz3.ab2@24794>    BNE 'do
0003224E <AmiBlitz3.ab2@24795>    BTST #15,d2                                             ;types ?
00032252 <AmiBlitz3.ab2@24796>    BNE 'do
00032258 <AmiBlitz3.ab2@24797>   MOVE.l #$2b701990,d1                                     ;var
0003225E <AmiBlitz3.ab2@24798>   TST.w varmode
00032262 <AmiBlitz3.ab2@24799>   BEQ 'glob1
00032266 <AmiBlitz3.ab2@24800>   BCLR #25,d1
0003226A <AmiBlitz3.ab2@24803>   MOVE.l d1,-6(a4)
0003226E <AmiBlitz3.ab2@24804>   MOVE.w d3,-2(a4)
00032274 <AmiBlitz3.ab2@24805>   CLR.w fp0var
0003227C <AmiBlitz3.ab2@24806>   MOVE.w #$ffff,fp0mode
0003227E <AmiBlitz3.ab2@24807> RTS
00032286 <AmiBlitz3.ab2@24810>    CMP.l #$f22d4400,-6(a4)                                 ;fmove.s (a5),fp0
0003228A <AmiBlitz3.ab2@24811>    BNE 'do3
00032294 <AmiBlitz3.ab2@24812>    CMP.l #newtype_double,currtype
00032298 <AmiBlitz3.ab2@24813>    BEQ 'do4
0003229C <AmiBlitz3.ab2@24816>   MOVE.w #$2b6d,d1
000322A2 <AmiBlitz3.ab2@24817>    TST.w varmode
000322A6 <AmiBlitz3.ab2@24818>    BEQ 'g2
000322AA <AmiBlitz3.ab2@24819>     BCLR #9,d1
000322AE <AmiBlitz3.ab2@24822>     CMP.w #$2b6d,d1
000322B2 <AmiBlitz3.ab2@24823>     BNE 'd1
000322B6 <AmiBlitz3.ab2@24824>     CMP.w -2(a4),d3
000322BA <AmiBlitz3.ab2@24825>     BNE 'd1
000322C0 <AmiBlitz3.ab2@24826>     SUBQ.l #6,destpointer
000322C4 <AmiBlitz3.ab2@24827> BRA 'd12
000322C8 <AmiBlitz3.ab2@24830>     MOVE.w d1,-6(a4)                                       ;fmove.s to move.l mem,mem
000322CE <AmiBlitz3.ab2@24831>     MOVE.w -2(a4),-4(a4)
000322D2 <AmiBlitz3.ab2@24832>     MOVE.w d3,-2(a4)
000322D8 <AmiBlitz3.ab2@24835>   CLR.w fp0var
000322E0 <AmiBlitz3.ab2@24836>     MOVE.w #$ffff,fp0mode
000322E2 <AmiBlitz3.ab2@24837> RTS
000322EA <AmiBlitz3.ab2@24840>   CMP.l #$f22c4400,-6(a4)                                  ;fmove.s (a4)
000322EE <AmiBlitz3.ab2@24841>    BNE 'do4
000322F2 <AmiBlitz3.ab2@24842>    MOVE.w #$2b6c,d1
000322F8 <AmiBlitz3.ab2@24843>       TST.w varmode
000322FC <AmiBlitz3.ab2@24844>    BEQ 'g3
00032300 <AmiBlitz3.ab2@24845>    BCLR #9,d1
00032304 <AmiBlitz3.ab2@24848>   MOVE.w d1,-6(a4)
0003230A <AmiBlitz3.ab2@24849>     MOVE.w -2(a4),-4(a4)
0003230E <AmiBlitz3.ab2@24850>     MOVE.w d3,-2(a4)
00032314 <AmiBlitz3.ab2@24851>     CLR.w fp0var
0003231C <AmiBlitz3.ab2@24852>     MOVE.w #$ffff,fp0mode
0003231E <AmiBlitz3.ab2@24853> RTS
00032324 <AmiBlitz3.ab2@24856>   MOVE.w d3,fp0var
0003232E <AmiBlitz3.ab2@24857>    MOVE.w varmode,fp0mode
00032330 <AmiBlitz3.ab2@24858>    ADDQ.l #6,a4
00032336 <AmiBlitz3.ab2@24859>    MOVE.l a4,fp0addr
00032340 <AmiBlitz3.ab2@24860>    MOVE.l firstiff,fp0iff
00032344 <AmiBlitz3.ab2@24863>   MOVEM.l d0/d4,-(a7)
00032346 <AmiBlitz3.ab2@24864>    MOVEQ #0,d0
0003234C <AmiBlitz3.ab2@24865>     MOVE.w regnum,d0
0003234E <AmiBlitz3.ab2@24866>    ASL.w #7,d0                                             ;fpu store var
00032352 <AmiBlitz3.ab2@24867>   BTST #15,d2
00032356 <AmiBlitz3.ab2@24868>    BEQ 'var
00032358 <AmiBlitz3.ab2@24869>    MOVE.w d1,d4
0003235C <AmiBlitz3.ab2@24870>    CMP.w #$24c0,d4
00032360 <AmiBlitz3.ab2@24871>    BNE 'nopl
00032366 <AmiBlitz3.ab2@24872>    MOVE.l #$f21a6400,d1
00032368 <AmiBlitz3.ab2@24873>    MOVEQ #0,d3
0003236C <AmiBlitz3.ab2@24874> BRA 'glob
00032372 <AmiBlitz3.ab2@24878>   MOVE.l #$f2126400,d1
00032374 <AmiBlitz3.ab2@24879>    TST.w d3                                                ;offset =0
00032378 <AmiBlitz3.ab2@24880>    BNE 'offset
0003237E <AmiBlitz3.ab2@24881>    MOVE.l #$f2126400,d1
00032380 <AmiBlitz3.ab2@24889>    MOVEQ #0,d3
00032384 <AmiBlitz3.ab2@24890> BRA 'glob
0003238A <AmiBlitz3.ab2@24893>   MOVE.l #$f22d6400,d1                                     ;var
00032390 <AmiBlitz3.ab2@24894>   TST.w varmode
00032394 <AmiBlitz3.ab2@24895>   BEQ 'glob
00032398 <AmiBlitz3.ab2@24896>   BCLR #16,d1
0003239A <AmiBlitz3.ab2@24897>  'glob OR.l d0,d1
000323A4 <AmiBlitz3.ab2@24900>   CMP.l #newtype_double,currtype
000323A8 <AmiBlitz3.ab2@24901>   BNE 'dbl1
000323AE <AmiBlitz3.ab2@24902>   OR.l #$00001000,d1
000323B4 <AmiBlitz3.ab2@24905>   JSR writelong
000323BA <AmiBlitz3.ab2@24906>   CLR.l currtype
000323BE <AmiBlitz3.ab2@24907>   MOVEM.l (a7)+,d0/d4
000323C0 <AmiBlitz3.ab2@24908>   MOVE.l d3,d1
000323C4 <AmiBlitz3.ab2@24909>   BEQ 'nooffs
000323CA <AmiBlitz3.ab2@24910> JMP writeword
000323CC <AmiBlitz3.ab2@24913> RTS
000323D2 <AmiBlitz3.ab2@24927>     TST.b fast                                             ;write lea->xx(a2)
000323D6 <AmiBlitz3.ab2@24928>    BEQ 'la10
000323DC <AmiBlitz3.ab2@24932>    TST.b quickadd
000323E2 <AmiBlitz3.ab2@24934>      CLR.b quickadd
000323E6 <AmiBlitz3.ab2@24935>    CMP.w #$2480,d1
000323EA <AmiBlitz3.ab2@24936>    BNE 'la10
000323F0 <AmiBlitz3.ab2@24937>    TST.b optiarray
000323F4 <AmiBlitz3.ab2@24938>    BNE 'la10
000323FA <AmiBlitz3.ab2@24939>    MOVE.l destpointer,a4
00032400 <AmiBlitz3.ab2@24940>    CMP.w #$45ea,-4(a4)
00032404 <AmiBlitz3.ab2@24941>    BNE 'la10
0003240C <AmiBlitz3.ab2@24942>    CMP.w #8,pushclen
00032410 <AmiBlitz3.ab2@24943>    BEQ 'la100
00032418 <AmiBlitz3.ab2@24944>    CMP.w #6,pushclen
0003241C <AmiBlitz3.ab2@24945>    BNE 'la10
00032420 <AmiBlitz3.ab2@24946>    CMP.b #3,d2
00032424 <AmiBlitz3.ab2@24947>    BCS 'la110
0003242A <AmiBlitz3.ab2@24949>    MOVE.w #$2540,-2(a4)
00032430 <AmiBlitz3.ab2@24950>    MOVE.w arrayoffset,d1
00032436 <AmiBlitz3.ab2@24951> JMP writeword
0003243C <AmiBlitz3.ab2@24954>    CLR.b quickadd
0003243E <AmiBlitz3.ab2@24955> RTS
00032442 <AmiBlitz3.ab2@24958>    CMP.b #2,d2
00032446 <AmiBlitz3.ab2@24959>    BNE 'la120
0003244C <AmiBlitz3.ab2@24960>     MOVE.w #$3540,-2(a4)
00032452 <AmiBlitz3.ab2@24961>    MOVE.w arrayoffset,d1
00032458 <AmiBlitz3.ab2@24962> JMP writeword
0003245C <AmiBlitz3.ab2@24965>   CMP.b #1,d2
00032460 <AmiBlitz3.ab2@24966>    BNE.s 'la10
00032466 <AmiBlitz3.ab2@24967>     MOVE.w #$1540,-2(a4)
0003246C <AmiBlitz3.ab2@24968>    MOVE.w arrayoffset,d1
00032472 <AmiBlitz3.ab2@24969> JMP writeword
00032476 <AmiBlitz3.ab2@24972>    CMP.b #3,d2
0003247A <AmiBlitz3.ab2@24973>    BCS 'la11
00032480 <AmiBlitz3.ab2@24974>    MOVE.w #$2540,-4(a4)
00032482 <AmiBlitz3.ab2@24975> RTS
00032486 <AmiBlitz3.ab2@24978>    CMP.b #2,d2
0003248A <AmiBlitz3.ab2@24979>    BNE 'la12
00032490 <AmiBlitz3.ab2@24980>     MOVE.w #$3540,-4(a4)
00032492 <AmiBlitz3.ab2@24981> RTS
00032496 <AmiBlitz3.ab2@24983>  'la12 CMP.b #1,d2
0003249A <AmiBlitz3.ab2@24984>    BNE.s 'la10
000324A0 <AmiBlitz3.ab2@24985>     MOVE.w #$1540,-4(a4)
000324A2 <AmiBlitz3.ab2@24986> RTS
000324A8 <AmiBlitz3.ab2@24989>   CLR.b optiarray
000324AC <AmiBlitz3.ab2@24990>    CMP.b #$1,D2
000324B0 <AmiBlitz3.ab2@24991>    BEQ.w JL_0_E0AC
000324B4 <AmiBlitz3.ab2@24992>    BSR.w varalign
000324B8 <AmiBlitz3.ab2@24993>    CMP.b #$3,D2
000324BC <AmiBlitz3.ab2@24994>    BCC.w writevarlong
000324C2 <AmiBlitz3.ab2@24995>    TST.b fast                                              ;optiimmi
000324C6 <AmiBlitz3.ab2@24996>    BEQ 'l10b
000324CC <AmiBlitz3.ab2@25001>    MOVE.l destpointer,a0
000324D2 <AmiBlitz3.ab2@25002>    SUB.l imm_addr,a0
000324D8 <AmiBlitz3.ab2@25003>    CMP.l #4,a0
000324DC <AmiBlitz3.ab2@25004>    BNE 'l10
000324E2 <AmiBlitz3.ab2@25005>    CLR.l imm_addr
000324E8 <AmiBlitz3.ab2@25006>    MOVE.l destpointer,a4
000324EC <AmiBlitz3.ab2@25007>    OR.w #$107c,d1
000324F0 <AmiBlitz3.ab2@25008>    MOVE.w d1,-4(a4)
000324F2 <AmiBlitz3.ab2@25009>     MOVE.w D3,D1
000324F8 <AmiBlitz3.ab2@25010> JMP writeword
000324FE <AmiBlitz3.ab2@25013>   MOVE.l destpointer,a0
00032504 <AmiBlitz3.ab2@25014>   SUB.l load_var_addr,a0
0003250A <AmiBlitz3.ab2@25015>   CMP.l #4,a0
0003250E <AmiBlitz3.ab2@25016>   BNE 'l10b
00032514 <AmiBlitz3.ab2@25017>   CMP.w #$302d,-4(a4)                                      ;check 68k opcode
00032518 <AmiBlitz3.ab2@25018>   BNE 'l10b
0003251E <AmiBlitz3.ab2@25020>   CLR.l load_var_addr
00032524 <AmiBlitz3.ab2@25021>   MOVE.l destpointer,a4
00032528 <AmiBlitz3.ab2@25022>   OR.w #$102d,d1
0003252C <AmiBlitz3.ab2@25023>   MOVE.w d1,-4(a4)
0003252E <AmiBlitz3.ab2@25024>   MOVE.w d3,d1
00032534 <AmiBlitz3.ab2@25025> JMP writeword
00032538 <AmiBlitz3.ab2@25028>   ORI.w #$1000,D1                                          ;word
0003253C <AmiBlitz3.ab2@25029> BRA.w writestorevar
00032542 <AmiBlitz3.ab2@25033>    TST.b fast                                              ;optiimmi
00032546 <AmiBlitz3.ab2@25034>    BEQ 'l10b
0003254C <AmiBlitz3.ab2@25039>    MOVE.l destpointer,a0
00032552 <AmiBlitz3.ab2@25040>    SUB.l imm_addr,a0
00032558 <AmiBlitz3.ab2@25041>    CMP.l #4,a0
0003255C <AmiBlitz3.ab2@25042>    BNE 'l10
00032562 <AmiBlitz3.ab2@25043>    CLR.l imm_addr
00032568 <AmiBlitz3.ab2@25044>    MOVE.l destpointer,a4
0003256C <AmiBlitz3.ab2@25045>    OR.w #$7c,d1
00032570 <AmiBlitz3.ab2@25046>    EORI #$3000,d1
00032574 <AmiBlitz3.ab2@25047>    MOVE.w d1,-4(a4)
00032576 <AmiBlitz3.ab2@25048>       MOVE.w D3,D1
0003257C <AmiBlitz3.ab2@25049> JMP writeword
00032582 <AmiBlitz3.ab2@25052>   MOVE.l destpointer,a0
00032588 <AmiBlitz3.ab2@25053>   SUB.l load_var_addr,a0
0003258E <AmiBlitz3.ab2@25054>   CMP.l #4,a0
00032592 <AmiBlitz3.ab2@25055>   BNE 'l10b
00032598 <AmiBlitz3.ab2@25056>   CLR.l load_var_addr
0003259E <AmiBlitz3.ab2@25057>   MOVE.l destpointer,a4
000325A4 <AmiBlitz3.ab2@25058>    CMP.w #$1b6d,-4(a4)
000325A8 <AmiBlitz3.ab2@25059>    BNE 'l10b
000325AC <AmiBlitz3.ab2@25060>    OR.w #$2d,d1
000325B0 <AmiBlitz3.ab2@25061>    EORI #$3000,d1
000325B4 <AmiBlitz3.ab2@25062>    MOVE.w d1,-4(a4)
000325B6 <AmiBlitz3.ab2@25063>   MOVE.w d3,d1
000325BC <AmiBlitz3.ab2@25064> JMP writeword
000325C2 <AmiBlitz3.ab2@25067>   ADDQ.w #1,pcodd                                          ;byte
000325C6 <AmiBlitz3.ab2@25068>   EORI.w #$3000,D1
000325CC <AmiBlitz3.ab2@25071>   JSR writeword
000325D0 <AmiBlitz3.ab2@25072>   BTST #$7,D1
000325D4 <AmiBlitz3.ab2@25073>    BNE JL_0_E0C6
000325D6 <AmiBlitz3.ab2@25074>   MOVE.w D3,D1
000325DC <AmiBlitz3.ab2@25075> JMP writeword
000325E2 <AmiBlitz3.ab2@25078>    TST.b fast                                              ;optiimmi
000325E6 <AmiBlitz3.ab2@25079>    BEQ 'l10b
000325EC <AmiBlitz3.ab2@25083>    MOVE.l destpointer,a0
000325F2 <AmiBlitz3.ab2@25084>    SUB.l imm_addr,a0
000325F8 <AmiBlitz3.ab2@25085>    CMP.l #6,a0
000325FC <AmiBlitz3.ab2@25086>    BNE 'l10
00032602 <AmiBlitz3.ab2@25087>    CLR.l imm_addr
00032608 <AmiBlitz3.ab2@25088>    MOVE.l destpointer,a4
0003260C <AmiBlitz3.ab2@25089>    OR.w #$7c,d1
00032610 <AmiBlitz3.ab2@25090>    MOVE.w d1,-6(a4)
00032612 <AmiBlitz3.ab2@25091>     MOVE.w D3,D1
00032618 <AmiBlitz3.ab2@25092> JMP writeword
0003261E <AmiBlitz3.ab2@25095>   MOVE.l destpointer,a0
00032624 <AmiBlitz3.ab2@25096>   SUB.l load_var_addr,a0
0003262A <AmiBlitz3.ab2@25097>   CMP.l #4,a0
0003262E <AmiBlitz3.ab2@25098>   BNE 'l10b
00032634 <AmiBlitz3.ab2@25099>   CLR.l load_var_addr
0003263A <AmiBlitz3.ab2@25100>   MOVE.l destpointer,a4
00032640 <AmiBlitz3.ab2@25101>   CMP.w #$245f,-2(a4)
00032644 <AmiBlitz3.ab2@25102>   BEQ 'l10b
00032648 <AmiBlitz3.ab2@25103>   OR.w #$28,d1
0003264C <AmiBlitz3.ab2@25104>   OR.w d1,-4(a4)
00032652 <AmiBlitz3.ab2@25105>   CMP.w #$2b6d,-4(a4)
00032656 <AmiBlitz3.ab2@25106>   BNE 'd1
0003265A <AmiBlitz3.ab2@25107>   CMP.w -2(a4),d3
0003265E <AmiBlitz3.ab2@25108>   BNE 'd1
00032664 <AmiBlitz3.ab2@25109>   SUBQ.l #4,destpointer
00032666 <AmiBlitz3.ab2@25110> RTS
00032668 <AmiBlitz3.ab2@25113>   MOVE.w d3,d1
0003266E <AmiBlitz3.ab2@25114> JMP writeword
00032674 <AmiBlitz3.ab2@25117>   JSR writeword
00032678 <AmiBlitz3.ab2@25118>   BTST #$7,D1
0003267C <AmiBlitz3.ab2@25119>    BNE.b JL_0_E0C6
0003267E <AmiBlitz3.ab2@25120>   MOVE.w D3,D1
00032684 <AmiBlitz3.ab2@25121> JMP writeword
00032686 <AmiBlitz3.ab2@25124> RTS
00032688 <AmiBlitz3.ab2@25128>   MOVE.w D1,-(A7)
0003268C <AmiBlitz3.ab2@25129>   MOVE.w pcodd(PC),D1
0003268E <AmiBlitz3.ab2@25130>   LSR.w #1,D1
00032692 <AmiBlitz3.ab2@25131>    BCC.b JL_0_E0E2
00032698 <AmiBlitz3.ab2@25132>   CLR.w pcodd
0003269E <AmiBlitz3.ab2@25133>   MOVE.w add1a2,D1
000326A4 <AmiBlitz3.ab2@25134>    JSR writeword
000326A6 <AmiBlitz3.ab2@25137>   MOVE.w (A7)+,D1
000326A8 <AmiBlitz3.ab2@25138> RTS
000326AA <AmiBlitz3.ab2@25142> add1a2:     Dc.b $52,$4A                                   ;ADDQ.W  #1,A2
000326AC <AmiBlitz3.ab2@25145> pcodd:     Ds.w 1                                          ;add 1 to this for bytes
000326AE <AmiBlitz3.ab2@25146> listadd:   Ds.w 1                                          ;set to 8 if it's a list
000326B0 <AmiBlitz3.ab2@25147> listsize:  Ds.w 1
000326B6 <AmiBlitz3.ab2@25151>   ADDQ.w #1,regnum
000326BE <AmiBlitz3.ab2@25152>   MOVE.b #1,nowdeclare
000326C4 <AmiBlitz3.ab2@25153>   CLR.b dimkeep
000326CC <AmiBlitz3.ab2@25154>    CMP.l #"KEEP",-1(a5)
000326D0 <AmiBlitz3.ab2@25155>   BNE 'nokeep
000326D6 <AmiBlitz3.ab2@25156>   CMP.b #" ",3(a5)
000326DA <AmiBlitz3.ab2@25157>   BNE 'nokeep
000326DC <AmiBlitz3.ab2@25158>   ADDQ.l #3,a5
000326E0 <AmiBlitz3.ab2@25161>     CMP.b #" ",(a5)
000326E4 <AmiBlitz3.ab2@25162>     BNE '1
000326E6 <AmiBlitz3.ab2@25163>    ADDQ #1,a5
000326EA <AmiBlitz3.ab2@25164> BRA '2
000326F0 <AmiBlitz3.ab2@25167>   MOVE.l a5,lastsourcepos
000326F8 <AmiBlitz3.ab2@25168>   MOVE.b #1,dimkeep
000326FC <AmiBlitz3.ab2@25176>   MOVE.w #$FF9A,D1
00032702 <AmiBlitz3.ab2@25177>   JSR uselib
00032708 <AmiBlitz3.ab2@25180>   CLR.w listadd
0003270C <AmiBlitz3.ab2@25181>   CMP.w #-$7F4D,D0
00032710 <AmiBlitz3.ab2@25182>    BNE.w JL_0_E11E
00032718 <AmiBlitz3.ab2@25183>   MOVE.w #$0008,listadd
0003271C <AmiBlitz3.ab2@25184>   MOVE.w #$FFFA,D1
00032722 <AmiBlitz3.ab2@25185>    JSR uselib
00032728 <AmiBlitz3.ab2@25186>    JSR get1bytemain
0003272E <AmiBlitz3.ab2@25189>   CLR.w nonew
00032734 <AmiBlitz3.ab2@25190>    JSR getparameter
0003273C <AmiBlitz3.ab2@25191>   BTST #$1,flagmask+1
00032740 <AmiBlitz3.ab2@25192>    BEQ.w JUMP_syntaxerr
00032746 <AmiBlitz3.ab2@25193>    JSR JL_0_8E3C
0003274C <AmiBlitz3.ab2@25194>   MOVE.w notshared,D1
00032750 <AmiBlitz3.ab2@25195>    BNE.w JL_0_E198
00032758 <AmiBlitz3.ab2@25196>   MOVE.w $8(A3),temp1
0003275E <AmiBlitz3.ab2@25197>   MOVE.w proceduremode,D2
00032762 <AmiBlitz3.ab2@25198>    BNE.w JL_0_E176
00032768 <AmiBlitz3.ab2@25199>   MOVE.w globalvarpointer,-(A7)
00032770 <AmiBlitz3.ab2@25200>   MOVE.w $4(A3),globalvarpointer
00032776 <AmiBlitz3.ab2@25201>   ADDQ.w #4,globalvarpointer
0003277A <AmiBlitz3.ab2@25202>    BSR.w write_dim_code
00032780 <AmiBlitz3.ab2@25203>   MOVE.w (A7)+,globalvarpointer
00032784 <AmiBlitz3.ab2@25204> BRA.w JL_0_E1BA
0003278A <AmiBlitz3.ab2@25215>   MOVE.w globalvarpointer,-(A7)
00032790 <AmiBlitz3.ab2@25216>             MOVE.w proceduremode,-(a7)
00032796 <AmiBlitz3.ab2@25217>             CLR.w proceduremode
0003279E <AmiBlitz3.ab2@25218>   MOVE.w $4(A3),globalvarpointer
000327A4 <AmiBlitz3.ab2@25219>   ADDQ.w #4,globalvarpointer
000327A8 <AmiBlitz3.ab2@25220>    BSR.w write_dim_code
000327AE <AmiBlitz3.ab2@25221>    MOVE.w (a7)+,proceduremode
000327B4 <AmiBlitz3.ab2@25222>   MOVE.w (A7)+,globalvarpointer
000327B8 <AmiBlitz3.ab2@25223> BRA.w JL_0_E1BA
000327C0 <AmiBlitz3.ab2@25226>   MOVE.w #$FFFF,temp1
000327C4 <AmiBlitz3.ab2@25227>   MOVE.w listadd(PC),D1
000327C8 <AmiBlitz3.ab2@25228>    BEQ.w JL_0_E1B6
000327D0 <AmiBlitz3.ab2@25229>   MOVE.w #$4000,temp1
000327D6 <AmiBlitz3.ab2@25230>   BSET #$0,$6(A3)
000327DC <AmiBlitz3.ab2@25233>         TST.w proceduremode
000327E0 <AmiBlitz3.ab2@25234>        BNE 'l1
000327E6 <AmiBlitz3.ab2@25235>        MOVE.w locvaroff,-(a7)
000327EA <AmiBlitz3.ab2@25238>   BSR.w write_dim_code
000327F0 <AmiBlitz3.ab2@25239>         TST.w proceduremode
000327F4 <AmiBlitz3.ab2@25240>         BNE JL_0_E1BA
000327FA <AmiBlitz3.ab2@25241>        MOVE.w (A7)+,locvaroff
00032800 <AmiBlitz3.ab2@25244>   JSR get1bytemain
00032804 <AmiBlitz3.ab2@25245>   CMP.w #$2C,D0
00032808 <AmiBlitz3.ab2@25246>    BNE.w JL_0_E1CE
0003280E <AmiBlitz3.ab2@25247>    JSR get1bytemain
00032812 <AmiBlitz3.ab2@25248> BRA.w JL_0_E0FC
00032814 <AmiBlitz3.ab2@25251> RTS
0003281C <AmiBlitz3.ab2@25254>   MOVE.w #$FFFF,nonew                                      ;#-1,nonew org source
00032822 <AmiBlitz3.ab2@25255>   MOVE.w beginarr,D1
00032828 <AmiBlitz3.ab2@25256>    JSR writeword
0003282A <AmiBlitz3.ab2@25257>   MOVEQ.l #$00,D1
00032830 <AmiBlitz3.ab2@25258>    JSR writeword
00032832 <AmiBlitz3.ab2@25259>   MOVEQ.l #$04,D1
0003283A <AmiBlitz3.ab2@25260>   BTST #$0,flagmask+1
0003283E <AmiBlitz3.ab2@25261>    BNE.w write_dim_code__pointer
00032842 <AmiBlitz3.ab2@25262>   MOVE.w $8(A2),D1
00032846 <AmiBlitz3.ab2@25265>   ADD.w listadd(PC),D1                                     ;size of one element.
0003284C <AmiBlitz3.ab2@25266>   MOVE.w D1,listsize
00032852 <AmiBlitz3.ab2@25267>    JSR writeword
00032858 <AmiBlitz3.ab2@25268>   CLR.w temp2                                              ;# dim's got
0003285A <AmiBlitz3.ab2@25269>   MOVE.l A3,-(A7)
00032860 <AmiBlitz3.ab2@25272>   ADDQ.w #1,temp2
00032862 <AmiBlitz3.ab2@25273>   MOVEQ.l #$03,D2                                          ;get word
00032868 <AmiBlitz3.ab2@25274>   MOVE.w notshared,-(a7)
0003286E <AmiBlitz3.ab2@25275>    JSR eval
00032874 <AmiBlitz3.ab2@25276>   MOVE.w (a7)+,notshared
0003287A <AmiBlitz3.ab2@25277>   TST.b debugmode
0003287E <AmiBlitz3.ab2@25278>    BEQ.w write_dim_code__norerr0
00032882 <AmiBlitz3.ab2@25279>   MOVE.w #$C30F,D1
00032886 <AmiBlitz3.ab2@25285>       MOVE.w #$5281,d1
0003288C <AmiBlitz3.ab2@25286>       JSR writeword
00032892 <AmiBlitz3.ab2@25287>       MOVE.l #$4c010800,d1                                 ;dim >65536 fix
00032898 <AmiBlitz3.ab2@25288>       JSR writelong
0003289E <AmiBlitz3.ab2@25289>   MOVE.w proceduremode,D2
000328A2 <AmiBlitz3.ab2@25290>    BEQ.w write_dim_code__global
000328A8 <AmiBlitz3.ab2@25291>   SUBQ.w #4,locvaroff
000328B2 <AmiBlitz3.ab2@25292>   MOVE.w locvaroff,putarr+2
000328B6 <AmiBlitz3.ab2@25293> BRA.w write_dim_code__doit
000328BC <AmiBlitz3.ab2@25296> JMP syntaxerr
000328C6 <AmiBlitz3.ab2@25299>   MOVE.w globalvarpointer,putarr+2
000328CC <AmiBlitz3.ab2@25300>   ADDQ.w #4,globalvarpointer
000328D2 <AmiBlitz3.ab2@25303>   TST.b dimkeep
000328D6 <AmiBlitz3.ab2@25304>            BEQ write_dim_code__doit_l1
000328D8 <AmiBlitz3.ab2@25305>       MOVEQ #0,d1
000328DE <AmiBlitz3.ab2@25306>       MOVE.w putarr+2,d1
000328E4 <AmiBlitz3.ab2@25307>       OR.l  #$222d0000,d1
000328EA <AmiBlitz3.ab2@25308>       MOVE.w proceduremode,D2
000328EE <AmiBlitz3.ab2@25309>       BEQ write_dim_code__doit_l2
000328F4 <AmiBlitz3.ab2@25310>       TST.w notshared
000328F8 <AmiBlitz3.ab2@25311>       BEQ write_dim_code__doit_l2
000328FE <AmiBlitz3.ab2@25312>       SUB.l #$00010000,d1
00032904 <AmiBlitz3.ab2@25315>   JSR writelong
0003290A <AmiBlitz3.ab2@25318>   MOVE.l putarr,D1
00032910 <AmiBlitz3.ab2@25319>       TST.w notshared
00032914 <AmiBlitz3.ab2@25320>       BNE write_dim_code__doit_l1a
0003291A <AmiBlitz3.ab2@25321>       JSR writelong
0003291E <AmiBlitz3.ab2@25322> BRA write_dim_code__doit_l4
00032924 <AmiBlitz3.ab2@25325>   JSR pokela5d
00032928 <AmiBlitz3.ab2@25328>   CMP.w #$2C,D0
0003292C <AmiBlitz3.ab2@25329>    BEQ.w write_dim_code__loop
00032930 <AmiBlitz3.ab2@25330>   CMP.w #$29,D0
00032934 <AmiBlitz3.ab2@25331>    BNE.w JUMP_syntaxerr
00032936 <AmiBlitz3.ab2@25332>   MOVEA.l (A7)+,A3
0003293C <AmiBlitz3.ab2@25333>   MOVE.w temp1,D1
00032940 <AmiBlitz3.ab2@25334>    BMI.w write_dim_code__nocare
00032944 <AmiBlitz3.ab2@25338>   BTST #$E,D1
00032948 <AmiBlitz3.ab2@25339>    BEQ.w write_dim_code__notl
00032950 <AmiBlitz3.ab2@25340>   CMPI.w #$1,temp2
00032954 <AmiBlitz3.ab2@25341>    BNE.w JUMP_redimerr
00032958 <AmiBlitz3.ab2@25342> BRA.w write_dim_code__nocare
0003295E <AmiBlitz3.ab2@25345> JMP redimerr
00032964 <AmiBlitz3.ab2@25348>   CMP.w temp2,D1
00032968 <AmiBlitz3.ab2@25349>    BNE.w JUMP_redimerr                                      ;range too long
0003296E <AmiBlitz3.ab2@25352>   LEA globalvarpointer,A0
00032974 <AmiBlitz3.ab2@25353>   MOVE.w proceduremode,D1
00032978 <AmiBlitz3.ab2@25354>   BEQ.w write_dim_code__gskip
0003297E <AmiBlitz3.ab2@25355>   LEA locvaroff,A0
00032984 <AmiBlitz3.ab2@25358>   MOVE.W  extraword,(A0)
00032988 <AmiBlitz3.ab2@25359>   BRA.W   write_dim_code__care
00032990 <AmiBlitz3.ab2@25362>   MOVE.w temp2,$8(A3)                                      ;set # dim's
00032996 <AmiBlitz3.ab2@25365>   LEA doarr,A0
0003299C <AmiBlitz3.ab2@25366>   MOVE.w $4(A3),$2(A0)
000329A4 <AmiBlitz3.ab2@25367>   MOVE.w putarr+2,$6(A0)
000329A6 <AmiBlitz3.ab2@25368>   MOVE.l (A0)+,D1
000329AC <AmiBlitz3.ab2@25369>    JSR writelong
000329AE <AmiBlitz3.ab2@25370>   MOVE.l (A0),D1
000329B4 <AmiBlitz3.ab2@25371>    JSR writelong
000329BA <AmiBlitz3.ab2@25372>    TST.b dimkeep
000329BE <AmiBlitz3.ab2@25373>   BNE write_dim_code__care_l3
000329C2 <AmiBlitz3.ab2@25376>   MOVE.w #$C400,D1
000329C6 <AmiBlitz3.ab2@25377> BRA write_dim_code__care_l2
000329CA <AmiBlitz3.ab2@25380>   MOVE.w #$C405,d1
000329D0 <AmiBlitz3.ab2@25383>   MOVE.w proceduremode,D2
000329D4 <AmiBlitz3.ab2@25384>    BEQ.w write_dim_code__isg
000329DA <AmiBlitz3.ab2@25385>    TST.w notshared
000329DE <AmiBlitz3.ab2@25386>    BEQ write_dim_code__isg
000329E0 <AmiBlitz3.ab2@25387>   ADDQ.w #1,D1
000329E4 <AmiBlitz3.ab2@25390>   MOVE.w listadd(PC),D2
000329E8 <AmiBlitz3.ab2@25391>    BEQ.w write_dim_code__isrg
000329EA <AmiBlitz3.ab2@25392>   MOVE.w D1,-(A7)
000329EE <AmiBlitz3.ab2@25393>   MOVE.w setles(PC),D1
000329F4 <AmiBlitz3.ab2@25394>    JSR writeword
000329F8 <AmiBlitz3.ab2@25395>   MOVE.w listsize(PC),D1
000329FE <AmiBlitz3.ab2@25396>    JSR writeword
00032A00 <AmiBlitz3.ab2@25397>   MOVE.w (A7)+,D1
00032A02 <AmiBlitz3.ab2@25398>   ADDQ.w #3,D1
00032A06 <AmiBlitz3.ab2@25401> BRA.w Atokejsr
00032A0C <AmiBlitz3.ab2@25408>     MOVE.l #$f23c4400,d1
00032A12 <AmiBlitz3.ab2@25410>   MOVE.w regnum,d0
00032A14 <AmiBlitz3.ab2@25411>   ASL.w #7,d0
00032A16 <AmiBlitz3.ab2@25412>   OR.w d0,d1
00032A1C <AmiBlitz3.ab2@25413>   JSR writelong
00032A22 <AmiBlitz3.ab2@25419>     MOVE.l #$40490fd9,d1
00032A28 <AmiBlitz3.ab2@25421>   JSR writelong
00032A2E <AmiBlitz3.ab2@25422> JMP get1bytemain
00032A32 <AmiBlitz3.ab2@25426> setles:   Dc.b $38,$3C,$00,$00                             ;MOVE.W  #$0000,D4
00032A36 <AmiBlitz3.ab2@25433> vbr:                Ds.l 1
00032A38 <AmiBlitz3.ab2@25434> cfetchmode:         Ds.w 1                               ;1=fetching a constant
00032A3E <AmiBlitz3.ab2@25436> constlibs           Dc.w $FDA7,$FCDF,$FD43               ;64935,64735,64835  org source
00032A42 <AmiBlitz3.ab2@25440> constpcat:          Ds.l 1
00032A46 <AmiBlitz3.ab2@25441> constlibat:         Ds.l 1
00032A4A <AmiBlitz3.ab2@25442> constmaxpc:         Dc.l $400
00032A4E <AmiBlitz3.ab2@25444> stacksize:          Dc.l 32768                           ;stackfuck org source
00032A52 <AmiBlitz3.ab2@25445> currentlabeladdr:   Dc.l labelbase                       ;lastrescon org source
00032A56 <AmiBlitz3.ab2@25446> currentmacroaddr:   Dc.l macrobase                       ;lastresmac org source
00032A5A <AmiBlitz3.ab2@25447> lastrestype:        Dc.l newtype_string
00032A5C <AmiBlitz3.ab2@25448> rescnt:             Ds.w 1                               ;# resident
00032A5E <AmiBlitz3.ab2@25449> state_of_residents: Ds.w 1                               ;reschg org source ;flag for if res's have changed
00032A62 <AmiBlitz3.ab2@25450> resat:              Dc.l residents_table                 ;??looks like not used anymore??
00032A64 <AmiBlitz3.ab2@25451> linedone:           Ds.w 1
00032A7A <AmiBlitz3.ab2@25452> directbuffer:       Ds.w 11                              ;dirpcat  dc.w 0 org source
00032A7E <AmiBlitz3.ab2@25461>   Dc.l 0                                        ; bytetobyte
00032A82 <AmiBlitz3.ab2@25462>   Dc.l convert_byte_to_word                     ; bytetoword
00032A86 <AmiBlitz3.ab2@25463>   Dc.l convert_byte_to_long                     ; bytetolong
00032A8A <AmiBlitz3.ab2@25464>   Dc.l convert_byte_to_quick                    ; bytetoquick
00032A8E <AmiBlitz3.ab2@25465>   Dc.l convert_byte_to_float                    ; bytetofloat
00032A92 <AmiBlitz3.ab2@25466>   Dc.l convert_byte_to_long                     ; bytetolong
00032A96 <AmiBlitz3.ab2@25467>   Dc.l error_convert_types                      ; noconerr
00032A9A <AmiBlitz3.ab2@25470>   Dc.l convert_word_to_byte                     ; wordtobyte
00032A9E <AmiBlitz3.ab2@25471>   Dc.l 0                                        ; wordtoword
00032AA2 <AmiBlitz3.ab2@25472>   Dc.l convert_word_to_long                     ; wordtolong
00032AA6 <AmiBlitz3.ab2@25473>   Dc.l convert_word_to_quick                    ; wordtoquick
00032AAA <AmiBlitz3.ab2@25474>   Dc.l convert_word_to_float                    ; wordtofloat
00032AAE <AmiBlitz3.ab2@25475>   Dc.l convert_word_to_long                     ; wordtolong
00032AB2 <AmiBlitz3.ab2@25476>   Dc.l error_convert_types                      ; noconerr
00032AB6 <AmiBlitz3.ab2@25479>   Dc.l convert_long_to_byte                     ; longtobyte
00032ABA <AmiBlitz3.ab2@25480>   Dc.l convert_long_to_word                     ; longtoword
00032ABE <AmiBlitz3.ab2@25481>   Dc.l 0                                        ; longtolong
00032AC2 <AmiBlitz3.ab2@25482>   Dc.l convert_long_to_quick                    ; longtoquick
00032AC6 <AmiBlitz3.ab2@25483>   Dc.l convert_long_to_float                    ; longtofloat
00032ACA <AmiBlitz3.ab2@25484>   Dc.l 0                                        ; longtolong
00032ACE <AmiBlitz3.ab2@25485>   Dc.l error_convert_types                      ; noconerr
00032AD2 <AmiBlitz3.ab2@25488>   Dc.l convert_quick_to_byte                    ; quicktobyte
00032AD6 <AmiBlitz3.ab2@25489>   Dc.l convert_quick_to_word                    ; quicktoword
00032ADA <AmiBlitz3.ab2@25490>   Dc.l convert_quick_to_long                    ; quicktolong
00032ADE <AmiBlitz3.ab2@25491>   Dc.l 0                                        ; quicktoquick
00032AE2 <AmiBlitz3.ab2@25492>   Dc.l convert_quick_to_float                   ; quicktofloat
00032AE6 <AmiBlitz3.ab2@25493>   Dc.l convert_quick_to_long                    ; quicktolong
00032AEA <AmiBlitz3.ab2@25494>   Dc.l error_convert_types                      ; noconerr
00032AEE <AmiBlitz3.ab2@25497>   Dc.l convert_float_to_byte                    ; floattobyte
00032AF2 <AmiBlitz3.ab2@25498>   Dc.l convert_float_to_word                    ; floattoword
00032AF6 <AmiBlitz3.ab2@25499>   Dc.l convert_float_to_long                    ; floattolong
00032AFA <AmiBlitz3.ab2@25500>   Dc.l convert_float_to_quick                   ; floattoquick
00032AFE <AmiBlitz3.ab2@25501>   Dc.l 0                                        ; floattofloat
00032B02 <AmiBlitz3.ab2@25502>   Dc.l convert_float_to_long                    ; floattolong
00032B06 <AmiBlitz3.ab2@25503>   Dc.l error_convert_types                      ; noconerr
00032B0A <AmiBlitz3.ab2@25506>   Dc.l convert_long_to_byte                     ; longtobyte
00032B0E <AmiBlitz3.ab2@25507>   Dc.l convert_long_to_word                     ; longtoword
00032B12 <AmiBlitz3.ab2@25508>   Dc.l 0                                        ; longtolong
00032B16 <AmiBlitz3.ab2@25509>   Dc.l convert_long_to_quick                    ; longtoquick
00032B1A <AmiBlitz3.ab2@25510>   Dc.l convert_long_to_float                    ; longtofloat
00032B1E <AmiBlitz3.ab2@25511>   Dc.l 0                                        ; longtolong
00032B22 <AmiBlitz3.ab2@25512>   Dc.l error_convert_types                      ; noconerr
00032B26 <AmiBlitz3.ab2@25515>   Dc.l error_convert_types                      ; noconerr
00032B2A <AmiBlitz3.ab2@25516>   Dc.l error_convert_types                      ; noconerr
00032B2E <AmiBlitz3.ab2@25517>   Dc.l string_to_long                           ; stringtolong
00032B32 <AmiBlitz3.ab2@25518>   Dc.l error_convert_types                      ; noconerr
00032B36 <AmiBlitz3.ab2@25519>   Dc.l error_convert_types                      ; noconerr
00032B3A <AmiBlitz3.ab2@25520>   Dc.l string_to_long                           ; stringtolong
00032B3E <AmiBlitz3.ab2@25521>   Ds.l 1
00032B40 <AmiBlitz3.ab2@25527>   Dc.b $00,$2B                                  ;+ ; add
00032B44 <AmiBlitz3.ab2@25528>   Dc.l do_plus_byte                             ;doplusb
00032B48 <AmiBlitz3.ab2@25529>   Dc.l do_plus_word                             ;doplusw
00032B4C <AmiBlitz3.ab2@25530>   Dc.l do_plus_long                             ;doplusl
00032B50 <AmiBlitz3.ab2@25531>   Dc.l do_plus_long                             ;doplusl
00032B54 <AmiBlitz3.ab2@25532>   Dc.l do_plus_float                            ;doplusf
00032B58 <AmiBlitz3.ab2@25533>   Ds.l 1
00032B5C <AmiBlitz3.ab2@25534>   Dc.l add_strings                              ;addstrings
00032B5E <AmiBlitz3.ab2@25535>   Dc.b $0B,$B8
00032B60 <AmiBlitz3.ab2@25537>   Dc.b $00,$2D                                  ;- ; sub
00032B64 <AmiBlitz3.ab2@25538>   Dc.l do_minus_byte                            ;dominusb
00032B68 <AmiBlitz3.ab2@25539>   Dc.l do_minus_word                            ;dominusw
00032B6C <AmiBlitz3.ab2@25540>   Dc.l do_minus_long                            ;dominusl
00032B70 <AmiBlitz3.ab2@25541>   Dc.l do_minus_long                            ;dominusl
00032B74 <AmiBlitz3.ab2@25542>   Dc.l do_minus_float                           ;dominusf
00032B7C <AmiBlitz3.ab2@25543>   Ds.l 2
00032B7E <AmiBlitz3.ab2@25544>   Dc.b $0B,$B8
00032B80 <AmiBlitz3.ab2@25546>   Dc.b $00,$2A                                  ;* ; mul
00032B84 <AmiBlitz3.ab2@25547>   Dc.l do_times_byte                            ;dotimesb
00032B88 <AmiBlitz3.ab2@25548>   Dc.l do_times_word                            ;dotimesw
00032B8C <AmiBlitz3.ab2@25549>   Dc.l do_times_long                            ;dotimesl
00032B90 <AmiBlitz3.ab2@25550>   Dc.l do_times_quick                           ;dotimesq
00032B94 <AmiBlitz3.ab2@25551>   Dc.l do_times_float                           ;dotimesf
00032B9C <AmiBlitz3.ab2@25552>   Ds.l 2
00032B9E <AmiBlitz3.ab2@25553>   Dc.b $0F,$A0
00032BA0 <AmiBlitz3.ab2@25555>   Dc.b $00,$2F                                  ;/ ; div
00032BA4 <AmiBlitz3.ab2@25556>   Dc.l do_Div_byte                              ;dodivb
00032BA8 <AmiBlitz3.ab2@25557>   Dc.l do_Div_word                              ;dodivb
00032BAC <AmiBlitz3.ab2@25558>   Dc.l do_Div_long                              ;dodivl
00032BB0 <AmiBlitz3.ab2@25559>   Dc.l do_Div_quick                             ;dodivq
00032BB4 <AmiBlitz3.ab2@25560>   Dc.l do_Div_float                             ;dodivf
00032BBC <AmiBlitz3.ab2@25561>   Ds.l 2
00032BBE <AmiBlitz3.ab2@25562>   Dc.b $0F,$A0
00032BC0 <AmiBlitz3.ab2@25564>   Dc.b $00,$26                                  ;& ; & int
00032BC4 <AmiBlitz3.ab2@25565>   Dc.l do_AND_byte                              ;doandb
00032BC8 <AmiBlitz3.ab2@25566>   Dc.l do_AND_word                              ;doandw
00032BCC <AmiBlitz3.ab2@25567>   Dc.l do_AND_long                              ;doandl
00032BD0 <AmiBlitz3.ab2@25568>   Dc.l do_AND_long                              ;doandl
00032BDC <AmiBlitz3.ab2@25569>   Ds.l 3
00032BDE <AmiBlitz3.ab2@25570>   Dc.b $13,$88
00032BE0 <AmiBlitz3.ab2@25572>   Dc.b $00,$7C                                  ;| ;or int ;
00032BE4 <AmiBlitz3.ab2@25573>   Dc.l do_OR_byte                               ;doorb
00032BE8 <AmiBlitz3.ab2@25574>   Dc.l do_OR_word                               ;doorw
00032BEC <AmiBlitz3.ab2@25575>   Dc.l do_OR_long                               ;doorl
00032BF0 <AmiBlitz3.ab2@25576>   Dc.l do_OR_long                               ;doorl
00032BFC <AmiBlitz3.ab2@25577>   Ds.l 3
00032BFE <AmiBlitz3.ab2@25578>   Dc.b $13,$88
00032C00 <AmiBlitz3.ab2@25580>   Dc.b $80,$42                                  ; AND int  ;(opand-opabcd)/$1c+$8000+fnum
00032C04 <AmiBlitz3.ab2@25581>   Dc.l do_AND_byte                              ;doandb
00032C08 <AmiBlitz3.ab2@25582>   Dc.l do_AND_word                              ;doandw
00032C0C <AmiBlitz3.ab2@25583>   Dc.l do_AND_long                              ;doandl
00032C10 <AmiBlitz3.ab2@25584>   Dc.l do_AND_long                              ;doandl
00032C1C <AmiBlitz3.ab2@25585>   Ds.l 3
00032C1E <AmiBlitz3.ab2@25586>   Dc.b $03,$E8
00032C20 <AmiBlitz3.ab2@25588>   Dc.b $80,$8A                                  ; OR int   ;(opor-opabcd)/$1c+$8000+fnum
00032C24 <AmiBlitz3.ab2@25589>   Dc.l do_OR_byte                               ;doorb
00032C28 <AmiBlitz3.ab2@25590>   Dc.l do_OR_word                               ;doorw
00032C2C <AmiBlitz3.ab2@25591>   Dc.l do_OR_long                               ;doorl
00032C30 <AmiBlitz3.ab2@25592>   Dc.l do_OR_long                               ;doorl
00032C3C <AmiBlitz3.ab2@25593>   Ds.l 3
00032C3E <AmiBlitz3.ab2@25594>   Dc.b $03,$E8
00032C40 <AmiBlitz3.ab2@25596>   Dc.b $80,$73                                  ; EOR int  ;(opeor-opabcd)/$1c+$8000+fnum
00032C44 <AmiBlitz3.ab2@25597>   Dc.l do_EOR_byte                              ;doeorb
00032C48 <AmiBlitz3.ab2@25598>   Dc.l do_EOR_word                              ;doeorw
00032C4C <AmiBlitz3.ab2@25599>   Dc.l do_EOR_long                              ;doeorl
00032C50 <AmiBlitz3.ab2@25600>   Dc.l do_EOR_long                              ;doeorl
00032C5C <AmiBlitz3.ab2@25601>   Ds.l 3
00032C5E <AmiBlitz3.ab2@25602>   Dc.b $03,$E8
00032C60 <AmiBlitz3.ab2@25604>   Dc.b $80,$7C                                  ; LSL int  ;(oplsl-opabcd)/$1c+$8000+fnum
00032C64 <AmiBlitz3.ab2@25605>   Dc.l do_LSL                                   ;dolslb
00032C68 <AmiBlitz3.ab2@25606>   Dc.l do_LSL                                   ;dolslw
00032C6C <AmiBlitz3.ab2@25607>   Dc.l do_LSL                                   ;dolsll
00032C70 <AmiBlitz3.ab2@25608>   Dc.l do_LSL                                   ;dolsll
00032C7C <AmiBlitz3.ab2@25609>   Ds.l 3
00032C7E <AmiBlitz3.ab2@25610>   Dc.b $17,$70
00032C80 <AmiBlitz3.ab2@25612>   Dc.b $80,$44                                  ; ASL int  ;(opasl-opabcd)/$1c+$8000+fnum
00032C84 <AmiBlitz3.ab2@25613>   Dc.l do_LSL                                   ;dolslb
00032C88 <AmiBlitz3.ab2@25614>   Dc.l do_LSL                                   ;dolslw
00032C8C <AmiBlitz3.ab2@25615>   Dc.l do_LSL                                   ;dolsll
00032C90 <AmiBlitz3.ab2@25616>   Dc.l do_LSL                                   ;dolsll
00032C9C <AmiBlitz3.ab2@25617>   Ds.l 3
00032C9E <AmiBlitz3.ab2@25618>   Dc.b $17,$70
00032CA0 <AmiBlitz3.ab2@25620>   Dc.b $80,$7D                                  ; LSR int  ;(oplsr-opabcd)/$1c+$8000+fnum
00032CA4 <AmiBlitz3.ab2@25621>   Dc.l do_LSR                                   ;dolsrb
00032CA8 <AmiBlitz3.ab2@25622>   Dc.l do_LSR                                   ;dolsrw
00032CAC <AmiBlitz3.ab2@25623>   Dc.l do_LSR                                   ;dolsrl
00032CB0 <AmiBlitz3.ab2@25624>   Dc.l do_LSR                                   ;dolsrl
00032CBC <AmiBlitz3.ab2@25625>   Ds.l 3
00032CBE <AmiBlitz3.ab2@25626>   Dc.b $17,$70
00032CC0 <AmiBlitz3.ab2@25628>   Dc.b $80,$45                                  ; ASR int  ;(opasr-opabcd)/$1c+$8000+fnum
00032CC4 <AmiBlitz3.ab2@25629>   Dc.l do_ASR                                   ;doasrb
00032CC8 <AmiBlitz3.ab2@25630>   Dc.l do_ASR                                   ;doasrw
00032CCC <AmiBlitz3.ab2@25631>   Dc.l do_ASR                                   ;doasrl
00032CD0 <AmiBlitz3.ab2@25632>   Dc.l do_ASR                                   ;doasrl
00032CDC <AmiBlitz3.ab2@25633>   Ds.l 3
00032CDE <AmiBlitz3.ab2@25634>   Dc.b $17,$70
00032CE0 <AmiBlitz3.ab2@25636>   Dc.b $80,$B9                                  ;mod       ;$8006+tnum
00032CE4 <AmiBlitz3.ab2@25637>   Dc.l do_mod_byte                              ;domodb
00032CE8 <AmiBlitz3.ab2@25638>   Dc.l do_mod_word                              ;domodw
00032CEC <AmiBlitz3.ab2@25639>   Dc.l do_mod_long                              ;domodl
00032CF0 <AmiBlitz3.ab2@25640>   Dc.l do_mod_quick                             ;domodq
00032CF4 <AmiBlitz3.ab2@25641>   Dc.l do_mod_float                             ;domodf
00032CFC <AmiBlitz3.ab2@25642>   Ds.l 2
00032CFE <AmiBlitz3.ab2@25643>   Dc.b $13,$88
00032D00 <AmiBlitz3.ab2@25646>   Dc.b $00,$5E                                  ;^
00032D04 <AmiBlitz3.ab2@25647>   Dc.l do_pow                                   ;dopow
00032D08 <AmiBlitz3.ab2@25648>   Dc.l do_pow                                   ;dopow
00032D0C <AmiBlitz3.ab2@25649>   Dc.l do_pow                                   ;dopow
00032D10 <AmiBlitz3.ab2@25650>   Dc.l do_pow                                   ;dopow
00032D14 <AmiBlitz3.ab2@25651>   Dc.l do_pow                                   ;dopow
00032D1C <AmiBlitz3.ab2@25652>   Ds.l 2
00032D1E <AmiBlitz3.ab2@25653>   Dc.b $1B,$58                                  ;7000
00032D20 <AmiBlitz3.ab2@25656>   Dc.b $00,$3D                                  ;=
00032D24 <AmiBlitz3.ab2@25657>   Dc.l do_equal_byte                            ;doeqb
00032D28 <AmiBlitz3.ab2@25658>   Dc.l do_equal_word                            ;doeqw
00032D2C <AmiBlitz3.ab2@25659>   Dc.l do_equal_long                            ;doeql
00032D30 <AmiBlitz3.ab2@25660>   Dc.l do_equal_long                            ;doeql
00032D34 <AmiBlitz3.ab2@25661>   Dc.l do_equal_float                           ;doeqf
00032D38 <AmiBlitz3.ab2@25662>   Dc.l do_equal_long                            ;doeql
00032D3C <AmiBlitz3.ab2@25663>   Dc.l do_equal_string                          ;doeqs
00032D3E <AmiBlitz3.ab2@25664>   Dc.b $07,$D0                                  ;2000
00032D40 <AmiBlitz3.ab2@25667>   Dc.b $3C,$3E                                  ;<>
00032D44 <AmiBlitz3.ab2@25668>   Dc.l do_not_equal_byte                        ;doneb
00032D48 <AmiBlitz3.ab2@25669>   Dc.l do_not_equal_word                        ;donew
00032D4C <AmiBlitz3.ab2@25670>   Dc.l do_not_equal_long                        ;donel
00032D50 <AmiBlitz3.ab2@25671>   Dc.l do_not_equal_long                        ;donel
00032D54 <AmiBlitz3.ab2@25672>   Dc.l do_not_equal_float                       ;donef
00032D58 <AmiBlitz3.ab2@25673>   Dc.l do_not_equal_long                        ;donel
00032D5C <AmiBlitz3.ab2@25674>   Dc.l do_not_equal_string                      ;dones
00032D5E <AmiBlitz3.ab2@25675>   Dc.b $07,$D0                                  ;2000
00032D60 <AmiBlitz3.ab2@25678>   Dc.b $00,$3C                                  ;<
00032D64 <AmiBlitz3.ab2@25679>   Dc.l do_littler_byte                          ;doltb
00032D68 <AmiBlitz3.ab2@25680>   Dc.l do_littler_word                          ;doltw
00032D6C <AmiBlitz3.ab2@25681>   Dc.l do_littler_long                          ;doltl
00032D70 <AmiBlitz3.ab2@25682>   Dc.l do_littler_long                          ;doltl
00032D74 <AmiBlitz3.ab2@25683>   Dc.l do_littler_float                         ;doltf
00032D78 <AmiBlitz3.ab2@25684>   Dc.l do_littler_long                          ;doltl
00032D7C <AmiBlitz3.ab2@25685>   Dc.l do_littler_string                        ;dolts
00032D7E <AmiBlitz3.ab2@25686>   Dc.b $07,$D0                                  ;2000
00032D80 <AmiBlitz3.ab2@25689>   Dc.b $3C,$3D                                  ;<=
00032D84 <AmiBlitz3.ab2@25690>   Dc.l do_littler_equal_byte                    ;doleb
00032D88 <AmiBlitz3.ab2@25691>   Dc.l do_littler_equal_word                    ;doleb
00032D8C <AmiBlitz3.ab2@25692>   Dc.l do_littler_equal_long                    ;dolel
00032D90 <AmiBlitz3.ab2@25693>   Dc.l do_littler_equal_long                    ;dolel
00032D94 <AmiBlitz3.ab2@25694>   Dc.l do_littler_equal_float                   ;dolef
00032D98 <AmiBlitz3.ab2@25695>   Dc.l do_littler_equal_long                    ;dolel
00032D9C <AmiBlitz3.ab2@25696>   Dc.l do_littler_equal_string                  ;doles
00032D9E <AmiBlitz3.ab2@25697>   Dc.b $07,$D0                                  ;2000
00032DA0 <AmiBlitz3.ab2@25700>   Dc.b $00,$3E                                  ;>
00032DA4 <AmiBlitz3.ab2@25701>   Dc.l do_greater_byte                          ;dogtb
00032DA8 <AmiBlitz3.ab2@25702>   Dc.l do_greater_word                          ;dogtw
00032DAC <AmiBlitz3.ab2@25703>   Dc.l do_greater_long                          ;dogtl
00032DB0 <AmiBlitz3.ab2@25704>   Dc.l do_greater_long                          ;dogtl
00032DB4 <AmiBlitz3.ab2@25705>   Dc.l do_greater_float                         ;dogtf
00032DB8 <AmiBlitz3.ab2@25706>   Dc.l do_greater_long                          ;dogtl
00032DBC <AmiBlitz3.ab2@25707>   Dc.l do_greater_string                        ;dogts
00032DBE <AmiBlitz3.ab2@25708>   Dc.b $07,$D0                                  ;2000
00032DC0 <AmiBlitz3.ab2@25711>   Dc.b $3E,$3D                                  ;>=
00032DC4 <AmiBlitz3.ab2@25712>   Dc.l do_greater_equal_byte                    ;dogeb
00032DC8 <AmiBlitz3.ab2@25713>   Dc.l do_greater_equal_word                    ;dogew
00032DCC <AmiBlitz3.ab2@25714>   Dc.l do_greater_equal_long                    ;dogel
00032DD0 <AmiBlitz3.ab2@25715>   Dc.l do_greater_equal_long                    ;dogel
00032DD4 <AmiBlitz3.ab2@25716>   Dc.l do_greater_equal_float                   ;dogef
00032DD8 <AmiBlitz3.ab2@25717>   Dc.l do_greater_equal_long                    ;dogel
00032DDC <AmiBlitz3.ab2@25718>   Dc.l do_greater_equal_string                  ;doges
00032DDE <AmiBlitz3.ab2@25719>   Dc.b $07,$D0                                  ;2000
00032DE0 <AmiBlitz3.ab2@25721>   Dc.b $80,$CD                                  ;$8000+26+tnum
00032DE4 <AmiBlitz3.ab2@25722>   Dc.l _BitTst
00032DE8 <AmiBlitz3.ab2@25723>   Dc.l _BitTst
00032DEC <AmiBlitz3.ab2@25724>   Dc.l _BitTst
00032DF0 <AmiBlitz3.ab2@25725>   Dc.l _BitTst
00032DFC <AmiBlitz3.ab2@25726>   Ds.l 3
00032DFE <AmiBlitz3.ab2@25727>   Dc.b $1F,$40                                  ;8000
00032E00 <AmiBlitz3.ab2@25729>   Dc.b $80,$CE                                  ;$8000+27+tnum
00032E04 <AmiBlitz3.ab2@25730>   Dc.l _BitSet
00032E08 <AmiBlitz3.ab2@25731>   Dc.l _BitSet
00032E0C <AmiBlitz3.ab2@25732>   Dc.l _BitSet
00032E10 <AmiBlitz3.ab2@25733>   Dc.l _BitSet
00032E1C <AmiBlitz3.ab2@25734>   Ds.l 3
00032E1E <AmiBlitz3.ab2@25735>   Dc.b $1F,$40                                  ;8000
00032E20 <AmiBlitz3.ab2@25737>   Dc.b $80,$CF                                  ;$8000+28+tnum
00032E24 <AmiBlitz3.ab2@25738>   Dc.l _BitClr
00032E28 <AmiBlitz3.ab2@25739>   Dc.l _BitClr
00032E2C <AmiBlitz3.ab2@25740>   Dc.l _BitClr
00032E30 <AmiBlitz3.ab2@25741>   Dc.l _BitClr
00032E3C <AmiBlitz3.ab2@25742>   Ds.l 3
00032E3E <AmiBlitz3.ab2@25743>   Dc.b $1F,$40                                  ;8000
00032E40 <AmiBlitz3.ab2@25745>   Dc.b $80,$D0                                  ;$8000+29+tnum
00032E44 <AmiBlitz3.ab2@25746>   Dc.l _BitChg
00032E48 <AmiBlitz3.ab2@25747>   Dc.l _BitChg
00032E4C <AmiBlitz3.ab2@25748>   Dc.l _BitChg
00032E50 <AmiBlitz3.ab2@25749>   Dc.l _BitChg
00032E5C <AmiBlitz3.ab2@25750>   Ds.l 3
00032E5E <AmiBlitz3.ab2@25751>   Dc.b $1F,$40                                  ;8000
00032E60 <AmiBlitz3.ab2@25753>   Dc.b $00,$00
00032E64 <AmiBlitz3.ab2@25758> modetable:   Dc.l typemode
00032E68 <AmiBlitz3.ab2@25761> newtypebase: Dc.l newtype_byte
00032E70 <AmiBlitz3.ab2@25764>   Dc.l newtype_word,$01                                    
00032E72 <AmiBlitz3.ab2@25765>   Dc.w $0001
00032E76 <AmiBlitz3.ab2@25766>   Dc.b 13,"b",0,0
00032E7E <AmiBlitz3.ab2@25769>   Dc.l newtype_long,$02
00032E80 <AmiBlitz3.ab2@25770>   Dc.w $0002
00032E84 <AmiBlitz3.ab2@25771>   Dc.b 13,"w",0,0
00032E8C <AmiBlitz3.ab2@25774>   Dc.l newtype_quick,$03                                   
00032E8E <AmiBlitz3.ab2@25775>   Dc.w $0004
00032E92 <AmiBlitz3.ab2@25776>   Dc.b 13,"l",0,0
00032E9A <AmiBlitz3.ab2@25779>   Dc.l newtype_float,$04                                   
00032E9C <AmiBlitz3.ab2@25780>   Dc.w $0004
00032EA0 <AmiBlitz3.ab2@25781>   Dc.b 13,"q",0,0
00032EA8 <AmiBlitz3.ab2@25785>   Dc.l newtype_double,$05                                  ;make problems on old residents
00032EAA <AmiBlitz3.ab2@25786>   Dc.w $0004
00032EAE <AmiBlitz3.ab2@25787>   Dc.b 13,"f",0,0
00032EB6 <AmiBlitz3.ab2@25790>   Dc.l newtype_double,$06
00032EB8 <AmiBlitz3.ab2@25791>   Dc.w $0004
00032EBC <AmiBlitz3.ab2@25792>   Dc.b 13,"a",0,0
00032EC4 <AmiBlitz3.ab2@25795>   Dc.l newtype_string,$05                                  ;?? has to by $06 becous is number 6 not 5
00032EC6 <AmiBlitz3.ab2@25796>   Dc.w $0008
00032ECA <AmiBlitz3.ab2@25797>   Dc.b 13,"d",0,0
00032ED2 <AmiBlitz3.ab2@25801>   Dc.l $0000000,$07                                        ;stringtype
00032ED4 <AmiBlitz3.ab2@25802>   Dc.w $0004
00032ED8 <AmiBlitz3.ab2@25803>   Dc.b 13,"s",0,0
00032EE0 <AmiBlitz3.ab2@25806>   Dc.l $00,$00
00032EE2 <AmiBlitz3.ab2@25807>   Dc.w $0000
00032EE6 <AmiBlitz3.ab2@25808>   Dc.b $01,$00,$00,$00
00032F46 <AmiBlitz3.ab2@25811> incdir:               Ds.l 24                              ;dcb.b   96,0    org source
00032F48 <AmiBlitz3.ab2@25815> dirmode:              Ds.w 1                               ;shows if directmode is on
00032F4C <AmiBlitz3.ab2@25817>                       Ds.l 1                               ;int org source ;intuition!
00032F4E <AmiBlitz3.ab2@25818> maxobject_pos:        Ds.w 1                               ;maxat org source ;max at
00032F52 <AmiBlitz3.ab2@25819> maxsat:               Ds.l 1                               ;data1 info pos
00032F54 <AmiBlitz3.ab2@25820> number_of_objects:    Ds.w 1                               ;nummaxs org source ;number of maximums
00032F56 <AmiBlitz3.ab2@25822> maxsused:             Ds.w 1                               ;maximums used in prog
00032F58 <AmiBlitz3.ab2@25826> dark:                 Ds.w 1                               ;dark compile?
00032F5A <AmiBlitz3.ab2@25827> qlab:                 Ds.w 1                               ;quick lab allocate
00032F5E <AmiBlitz3.ab2@25828> defaulttype:          Dc.l newtype_quick                   ;dc.l quicktype org source
00032F60 <AmiBlitz3.ab2@25833> anyerrs:              Dc.w -1                              ;Any Errors in compile ?
00032F62 <AmiBlitz3.ab2@25834> debugversion:         Ds.w 1                               ;makeexec org source ;make an executable file!
00032F66 <AmiBlitz3.ab2@25835> noinits:              Ds.l 1                               ;flag for if we have any init routines!
00032F6A <AmiBlitz3.ab2@25837> letstart:             Ds.l 1
00032F6C <AmiBlitz3.ab2@25838> dontwrite:            Ds.w 1                               ;nomemleft org source
00032FEC <AmiBlitz3.ab2@25839> lastgloballabel:      Ds.l 32                              ;lastbiglab ds.b 128 org source
00032FF0 <AmiBlitz3.ab2@25841> locdatast:            Ds.l 1
00032FF4 <AmiBlitz3.ab2@25842> firstpend:            Ds.l 1
00032FF8 <AmiBlitz3.ab2@25846> data2at:              Ds.l 1
00032FFC <AmiBlitz3.ab2@25847> data2:                Ds.l 1
00033000 <AmiBlitz3.ab2@25848> data1start:           Ds.l 1                               ;data1at org source
00033004 <AmiBlitz3.ab2@25849> data1:                Ds.l 1                               ;pc for initialized data!
00033008 <AmiBlitz3.ab2@25850> destbufferstart:      Ds.l 1                               ;pcat org source
0003300C <AmiBlitz3.ab2@25854> destbufferend:        Ds.l 1                               ;libat org source
00033010 <AmiBlitz3.ab2@25855> libend:               Ds.l 1                               ;lib org source
00033014 <AmiBlitz3.ab2@25856> allat:                Ds.l 1                               ;highest allocmemd location for code
0003301E <AmiBlitz3.ab2@25857> dummyasm:             Dc.w 0,0,0,0,0
00033022 <AmiBlitz3.ab2@25858>                       Dc.l 0
00033024 <AmiBlitz3.ab2@25859>                       Dc.w 0
00033028 <AmiBlitz3.ab2@25863> buff1:                Ds.l 1                               ;buffer for text get
0003302C <AmiBlitz3.ab2@25864> buff2:                Ds.l 1                               ;ditto for dest
0003302E <AmiBlitz3.ab2@25865> constmode:            Ds.w 1                               ;0 for norm, <>0 for assembler
00033030 <AmiBlitz3.ab2@25866> asmtype:              Ds.w 1                               ;0=contains no prog reference
00033032 <AmiBlitz3.ab2@25867> extraword:            Ds.w 1                               ;the extension word for assembler
00033034 <AmiBlitz3.ab2@25868> extraword2:           Ds.w 1                               ;ditto
00033036 <AmiBlitz3.ab2@25869> asmsize:              Ds.w 1
0003303A <AmiBlitz3.ab2@25870> asmbuff:              Ds.l 1
0003303C <AmiBlitz3.ab2@25871> asmlen:               Ds.w 1                               ;first (src) text len
0003303E <AmiBlitz3.ab2@25872> asmlen2:              Ds.w 1                               ;second (dest)
00033042 <AmiBlitz3.ab2@25873> templabel:            Ds.l 1                               ;linked list of expressions to resolve
00033044 <AmiBlitz3.ab2@25876> macnum:               Ds.w 1
00033048 <AmiBlitz3.ab2@25878>                       Dc.l 0                               ;address of next 0 in include fil
0003304C <AmiBlitz3.ab2@25879> titleat:              Ds.l 1                               ;5 longs for compile streaks
00033056 <AmiBlitz3.ab2@25880> progress_per_line:    Ds.w 5                               ;titleadd ds 5 org source ;5 adds for compile streaks
00033058 <AmiBlitz3.ab2@25881> connest:              Ds.w 1                               ;conditional nest level
0003305C <AmiBlitz3.ab2@25882> firstconst:           Ds.l 1                               ;first constant (#a)
0003305E <AmiBlitz3.ab2@25883> numarg:               Ds.w 1                               ;number of macro arguements
00033062 <AmiBlitz3.ab2@25884> myoline:              Ds.l 1                               ;macro done yet?
00033066 <AmiBlitz3.ab2@25885> myline:               Ds.l 1                               ;pointer to some memory to create
0003306A <AmiBlitz3.ab2@25888>                       Ds.l 1
000330AA <AmiBlitz3.ab2@25889> concomstack:          Ds.l 16                              ;32 deep conditional compilation
000330AE <AmiBlitz3.ab2@25890> concomsp:             Dc.l concomstack                     ;stack pointer
000330B0 <AmiBlitz3.ab2@25891> oldqflag:             Ds.w 1
000330B4 <AmiBlitz3.ab2@25894>                       Ds.l 1
000330B6 <AmiBlitz3.ab2@25896>                       Ds.w 1
000330BA <AmiBlitz3.ab2@25897> firstfor:             Ds.l 1                               ;first for
000330BC <AmiBlitz3.ab2@25898> stackpar:             Ds.w 1                               ;pushflag org source ;1 par to stack 0 normal
000330BE <AmiBlitz3.ab2@25899> sbgot:                Ds.w 1                               ;flag for string got 2
000330C0 <AmiBlitz3.ab2@25900> convsize:             Ds.w 1                               ;usertype org source
000330C2 <AmiBlitz3.ab2@25901> userp:                Ds.w 1
000330C6 <AmiBlitz3.ab2@25906> ptr_userlibs_list:    Ds.l 1                               ;libslist org source
000330C8 <AmiBlitz3.ab2@25907> a2offset:             Ds.w 1                               ;stackuse org source ;stack used when gathering lib parameters
000330CA <AmiBlitz3.ab2@25908> numreps:              Ds.w 1                               ;number of repeats in a repeatable
000330CE <AmiBlitz3.ab2@25910> locloc:               Ds.l 1
000330D0 <AmiBlitz3.ab2@25911> locchar:              Ds.w 1
00033150 <AmiBlitz3.ab2@25912> stbuff:               Ds.l 32                              ;was 8    ;six string varoffs
00033152 <AmiBlitz3.ab2@25913> commode:              Ds.w 1                               ;in comma mode...
00033156 <AmiBlitz3.ab2@25914> lastoffset_org:       Ds.l 1                               ;lastoffset org source ;last offset in calcvar!
0003315A <AmiBlitz3.ab2@25915> linenumat:            Dc.l $FFFFFFFF                       ;linecounter ;dc -1 org source ;line being processed
0003315E <AmiBlitz3.ab2@25916> compilelinecounter:   Dc.l $FFFFFFFF                       ;menuret dc -1 org source ;menu return code
00033160 <AmiBlitz3.ab2@25918>                       Ds.w 1                               ;opt reset offset
00033260 <AmiBlitz3.ab2@25920>                       Ds.l 64                              ;Ds.b vcodelen org source ;code used to generate
00033360 <AmiBlitz3.ab2@25922>                       Ds.l 64                              ;Ds.b vcodelen org source ;above for let.....
00033362 <AmiBlitz3.ab2@25923> varcodelen:           Ds.w 1                               ;and length
00033364 <AmiBlitz3.ab2@25925>                       Ds.w 1
0003336A <AmiBlitz3.ab2@25926> oldvcodelen:          Ds.w 3                               ;old varcodelen
0003336C <AmiBlitz3.ab2@25929> Even4
00033370 <AmiBlitz3.ab2@25930> tempvm:               Ds.l 1                               ;memlib org source ;address of memory library
00033372 <AmiBlitz3.ab2@25931> memlibstat:           Ds.w 1                               ;status of memory library during
00033374 <AmiBlitz3.ab2@25934>                       Dc.w 0
00033376 <AmiBlitz3.ab2@25936>                       Dc.w 0
00033378 <AmiBlitz3.ab2@25938> varmode:              Ds.w 1                               ;0 a5 pointer to global
0003337C <AmiBlitz3.ab2@25940> currentfunction:      Ds.l 1                               ;thisproc org source
00033380 <AmiBlitz3.ab2@25941> firstproc:            Ds.l 1                               ;firstproc org source ;this procedure being 'done'
00033382 <AmiBlitz3.ab2@25942> 
00033384 <AmiBlitz3.ab2@25944> skipcode:             Ds.w 1                               ;nocompile ;comflag org source ;0 if no compile
00033388 <AmiBlitz3.ab2@25945> passstack:            Ds.l 1
0003338C <AmiBlitz3.ab2@25946> zero:                 Ds.l 1                               ;ZERO!
0003338E <AmiBlitz3.ab2@25947> ininclude:            Ds.w 1                               ;numincs org source ;number of include files
00033392 <AmiBlitz3.ab2@25949> xinclude_base:        Ds.l 1                               ;firstxinc org source ;first exclusive include.
00033396 <AmiBlitz3.ab2@25950> constantbase:         Ds.l 1                               ;firstinc org source ;first include
00033398 <AmiBlitz3.ab2@25951> lasta6:               Dc.w $FFFF                           ;-1 org source
0003339A <AmiBlitz3.ab2@25952> instringon:           Ds.w 1                               ;quoteflag org source
0003339E <AmiBlitz3.ab2@25953> ptr_macrobuffer_begin:Ds.l 1                               ;macrobuff org source ;pointer to macro collection buffer ;begin
000333A2 <AmiBlitz3.ab2@25954> ptr_macrobuffer_end:  Ds.l 1                               ;macrobufff org source ;end of above ;end of
000333A6 <AmiBlitz3.ab2@25955> macrobase:            Ds.l 1                               ;firstmacro org source ;linked list of macro's ;macrolist
000333AA <AmiBlitz3.ab2@25956> endop:                Ds.l 1                               ;end of program pc - before finishups!
000333AE <AmiBlitz3.ab2@25957> labelbase:            Ds.l 1                               ;firstlabel org source ;first lib struct
000333B2 <AmiBlitz3.ab2@25958> end_of_tokenlist:     Ds.l 1                               ;lasttoken org source
000333B4 <AmiBlitz3.ab2@25959> numstatic:            Ds.w 1                               ;number of static structs
000333B8 <AmiBlitz3.ab2@25960> staticdata:           Ds.l 1                               ;data1 val for statics
000333BC <AmiBlitz3.ab2@25961> libpointer:           Ds.l 1                               ;firstlib org source ;first lib struct
000333BE <AmiBlitz3.ab2@25962> sbasegot:             Ds.w 1                               ;string base got?
000333C2 <AmiBlitz3.ab2@25963> litdata1:             Ds.l 1
000333C6 <AmiBlitz3.ab2@25967> objlen:               Ds.l 1
000333CA <AmiBlitz3.ab2@25968> hunkoffsetcounter:    Ds.l 1                               ;numoffs org source
000333CE <AmiBlitz3.ab2@25969> hunkoffsetbase:       Ds.l 1                               ;firstoff org source ;pointer to linked list
000333D0 <AmiBlitz3.ab2@25971> flagmask:             Ds.w 1                               ;mask for flag of variable when
000333D2 <AmiBlitz3.ab2@25973> notshared:            Ds.w 1                               ;added org source ;flag for seeing if variable was added!
000333D4 <AmiBlitz3.ab2@25974> nonew:                Ds.w 1                               ;1 to inhibit new variable creation
000333D8 <AmiBlitz3.ab2@25975> temp1:                Ds.l 1
000333DC <AmiBlitz3.ab2@25976> temp2:                Ds.l 1
000333E0 <AmiBlitz3.ab2@25978> ptr_parameterstore:   Ds.l 1                               ;namebuff ds.b 128 org source
000333E4 <AmiBlitz3.ab2@25979> fib_DirEntryType:     Ds.l 1                               ;namebuff+4 org source
00033458 <AmiBlitz3.ab2@25980> fib_FileName:         Ds.l 29                              ;namebuff+8 org source
0003345C <AmiBlitz3.ab2@25981> fib_Size:             Ds.l 1                               ;namebuff+124 org source
000334DC <AmiBlitz3.ab2@25983> namebuff2:            Ds.b 128
000334E4 <AmiBlitz3.ab2@25984>                       Ds.b 8                               ;for fileinfoblock
00033524 <AmiBlitz3.ab2@25987> optstuff:             Ds.b 64                              ;temp opt make buffer
00033562 <AmiBlitz3.ab2@25995>   !ComData_GetL{comFunc_OpenCompilerWindow,A1}
00033568 <AmiBlitz3.ab2@25996>   MOVE.l #1000,D0
0003356A <AmiBlitz3.ab2@25997>   JSR (A1)
0003356C <AmiBlitz3.ab2@25998> RTS
0003356E <AmiBlitz3.ab2@26004>   Dc.b $00,$01                                             ; 1 byte schreiben ;one byte stuff...
00033572 <AmiBlitz3.ab2@26005>   Dc.l xtra_versionnumber                                  ; vers org source
00033576 <AmiBlitz3.ab2@26006>   Dc.l create_iconfile                                     ; create icon for executable
0003357A <AmiBlitz3.ab2@26007>   Ds.l 1
0003357C <AmiBlitz3.ab2@26009>   Dc.b $00,$02                                             ; 2 bytes schreiben  ;two byte stuff...
00033580 <AmiBlitz3.ab2@26012>   Dc.l set_use_debugger
00033584 <AmiBlitz3.ab2@26013>   Dc.l AL_0_11010                                          ;+obsolet: debugger
00033588 <AmiBlitz3.ab2@26014>   Dc.l AL_0_1103C                                          ;+obsolet: long arrays
0003358C <AmiBlitz3.ab2@26015>   Dc.l AL_0_11068                                          ;+obsolet: expand macros
00033590 <AmiBlitz3.ab2@26016>   Dc.l AL_0_11094                                          ;+obsolet: quoted macros
00033594 <AmiBlitz3.ab2@26017>   Dc.l set_make_smallestcode
00033598 <AmiBlitz3.ab2@26018>   Dc.l set_link_debuginfo
0003359C <AmiBlitz3.ab2@26019>   Dc.l set_autorun
000335A0 <AmiBlitz3.ab2@26020>   Dc.l set_interruptcheck
000335A4 <AmiBlitz3.ab2@26021>   Dc.l set_assemblercheck
000335A8 <AmiBlitz3.ab2@26023>   Dc.l set_overflowcheck
000335AC <AmiBlitz3.ab2@26024>   Dc.l default_obsolete                                    ;+obsolet: ohne inhalt
000335B0 <AmiBlitz3.ab2@26025>   Dc.l default_interruptcheck                              ;+obsolet: interruptcheck vorgabe
000335B4 <AmiBlitz3.ab2@26026>   Dc.l default_overflowcheck                               ;+obsolet: overflow vorgabe
000335B8 <AmiBlitz3.ab2@26029>   Ds.l 1
000335BA <AmiBlitz3.ab2@26031>   Dc.b $00,$04                                             ; 4 bytes schreiben..  ;four byte stuff...
000335BE <AmiBlitz3.ab2@26038>   Dc.l objectbuffer
000335C2 <AmiBlitz3.ab2@26039>   Dc.l libsbuffer
000335C6 <AmiBlitz3.ab2@26040>   Dc.l systembuffer
000335CA <AmiBlitz3.ab2@26041>   Dc.l databuffer
000335CE <AmiBlitz3.ab2@26042>   Dc.l macrobuffer_size
000335D2 <AmiBlitz3.ab2@26043>   Dc.l stringbuffer
000335D6 <AmiBlitz3.ab2@26046>   Ds.l 1
000335D8 <AmiBlitz3.ab2@26050>   Dc.b $02,$20                                             ;dc 68*8; 544 bytes schreiben.
000335E0 <AmiBlitz3.ab2@26051>   Dc.l residents_table,0
000335E2 <AmiBlitz3.ab2@26055>   Dc.b $01,$80                                             ;dc 192*2; 384 bytes schreiben
000335EA <AmiBlitz3.ab2@26056>   Dc.l exepath,0                                           ; exepath und exefilename jeweils 192 bytes
000335EC <AmiBlitz3.ab2@26057>   Ds.w 1
000336E8 <AmiBlitz3.ab2@26061>   Ds.l 63
000337E4 <AmiBlitz3.ab2@26062>   Ds.l 63
000338E0 <AmiBlitz3.ab2@26063>   Ds.l 63
000339C2 <AmiBlitz3.ab2@26064>   Ds.w 113
000339C4 <AmiBlitz3.ab2@26067> comsettings_message:  Ds.w 1                               ;allchg org source
000339C6 <AmiBlitz3.ab2@26068> xtra_versionnumber:   Ds.w 1                               ;vers org source
000339CC <AmiBlitz3.ab2@26072>   CLR.b exefilename
000339CE <AmiBlitz3.ab2@26073>   TST.l d0
000339D2 <AmiBlitz3.ab2@26074>   BNE read_xtrafile__l10
000339D4 <AmiBlitz3.ab2@26075> RTS
000339DA <AmiBlitz3.ab2@26078>   JSR free_residents                                       ;jsr freeres2 org source
000339E0 <AmiBlitz3.ab2@26079> 
000339E6 <AmiBlitz3.ab2@26080>   LEA ptr_xtradata,A2
000339E8 <AmiBlitz3.ab2@26081>   MOVEQ.l #$00,D4
000339EA <AmiBlitz3.ab2@26084>     MOVE.w (A2)+,D4                                        ; anzahl bytes zum lesen
000339EE <AmiBlitz3.ab2@26085>     BEQ.b read_xtrafile__done
000339F0 <AmiBlitz3.ab2@26088>     MOVE.l (A2)+,D2
000339F4 <AmiBlitz3.ab2@26089>   BEQ.b read_xtrafile__loop
000339F6 <AmiBlitz3.ab2@26091>   MOVE.l D4,D3
000339F8 <AmiBlitz3.ab2@26092>   MOVE.l D7,D1
000339FC <AmiBlitz3.ab2@26093>   JSR _Read(A6)                                            ; d1: file, d2: buffer, d3:length
000339FE <AmiBlitz3.ab2@26094>   TST.l D0
00033A02 <AmiBlitz3.ab2@26095>   BNE.b read_xtrafile__loop2
00033A06 <AmiBlitz3.ab2@26096> BRA.w read_xtrafile__done2
00033A0C <AmiBlitz3.ab2@26099>   TST.b xtra_versionnumber
00033A10 <AmiBlitz3.ab2@26100>    BNE.b read_xtrafile__nover0
00033A18 <AmiBlitz3.ab2@26101>   MOVE.w #$0080,set_autorun                                ;auto run on
00033A22 <AmiBlitz3.ab2@26102>   MOVE.w default_interruptcheck,set_interruptcheck         ;interupt checking on
00033A28 <AmiBlitz3.ab2@26103>   CLR.w set_assemblercheck                                 ;assembler checking off
00033A32 <AmiBlitz3.ab2@26104>   MOVE.w default_overflowcheck,set_overflowcheck           ;overflow chex
00033A36 <AmiBlitz3.ab2@26105> BRA.b read_xtrafile__ver0
00033A38 <AmiBlitz3.ab2@26108>   MOVE.l D7,D1                                             ;load cli arg!
00033A3E <AmiBlitz3.ab2@26109>   MOVE.l #str_cliarguments,D2
00033A44 <AmiBlitz3.ab2@26110>   MOVE.l #116,D3                                           ; vorher 128 , jetzt 8 weniger fuer die Versionsdaten
00033A48 <AmiBlitz3.ab2@26111>   JSR _Read(A6)                                            ; d1: file, d2: buffer, d3:length
00033A4E <AmiBlitz3.ab2@26112>   MOVE.l #str_cliarguments,A0
00033A54 <AmiBlitz3.ab2@26113>   ADDA.l #115,A0
00033A5A <AmiBlitz3.ab2@26114>   MOVE.l #0,(a0) ; terminate it!
00033A5C <AmiBlitz3.ab2@26116>   MOVE.l D7,D1                                             ; I know, I know. Honitos started this horrible thing, see below...
00033A62 <AmiBlitz3.ab2@26117>   MOVE.l #stacksize,D2
00033A68 <AmiBlitz3.ab2@26118>   MOVE.l #4,D3
00033A6C <AmiBlitz3.ab2@26119>   JSR _Read(A6)
00033A76 <AmiBlitz3.ab2@26120>   CMP.l ##MIN_STACKSIZE,stacksize
00033A7A <AmiBlitz3.ab2@26121>   BGE 'stackok
00033A84 <AmiBlitz3.ab2@26122>   MOVE.l ##MIN_STACKSIZE,stacksize
00033A86 <AmiBlitz3.ab2@26125>   MOVE.l D7,D1
00033A8C <AmiBlitz3.ab2@26126>   MOVE.l #versioninformation,D2
00033A92 <AmiBlitz3.ab2@26127>   MOVE.l #4,D3
00033A96 <AmiBlitz3.ab2@26128>   JSR _Read(A6)
00033A98 <AmiBlitz3.ab2@26130>   MOVE.l D7,D1
00033A9E <AmiBlitz3.ab2@26131>   MOVE.l #number_of_builds,D2
00033AA4 <AmiBlitz3.ab2@26132>   MOVE.l #4,D3
00033AA8 <AmiBlitz3.ab2@26133>   JSR _Read(A6)
00033AAE <AmiBlitz3.ab2@26139>   MOVE.l A7,errstack
00033AB8 <AmiBlitz3.ab2@26140>   MOVE.l #read_xtrafile__done2,errcont
00033AC0 <AmiBlitz3.ab2@26141>   MOVE.w #$FFFF,ezerr
00033AC6 <AmiBlitz3.ab2@26144>     MOVE.l #temp1,D2                                   ;LOAD maxobjectsvalues
00033AC8 <AmiBlitz3.ab2@26145>     MOVEQ.l #$04,D3
00033ACA <AmiBlitz3.ab2@26146>     MOVE.l D7,D1
00033ACE <AmiBlitz3.ab2@26147>     JSR _Read(A6)
00033AD0 <AmiBlitz3.ab2@26148>     TST.l D0
00033AD4 <AmiBlitz3.ab2@26149>     BEQ.b read_xtrafile__done2
00033ADA <AmiBlitz3.ab2@26150>     MOVE.w temp1,D1
00033ADC <AmiBlitz3.ab2@26151>     TST.w d1                                               ;new
00033AE0 <AmiBlitz3.ab2@26152>     BEQ read_xtrafile__done2                                         ;new
00033AE6 <AmiBlitz3.ab2@26153>      JSR AJL_0_6F1A
00033AEC <AmiBlitz3.ab2@26155>     CMP.l #0,a1
00033AF0 <AmiBlitz3.ab2@26156>     BEQ read_xtrafile__dloop
00033AF4 <AmiBlitz3.ab2@26157>     MOVE.l $12(A1),D0
00033AFC <AmiBlitz3.ab2@26158>     MOVE.w temp1+2,-$4(A1,D0.L)
00033B00 <AmiBlitz3.ab2@26159> BRA.b read_xtrafile__dloop
00033B04 <AmiBlitz3.ab2@26165>   LEA residents_table(PC),A0
00033B06 <AmiBlitz3.ab2@26166>   MOVEQ.l #$07,D0
00033B0A <AmiBlitz3.ab2@26169>     CLR.l $40(A0)
00033B0E <AmiBlitz3.ab2@26170>     LEA ResidentEntryStep(A0),A0   ; $44
00033B12 <AmiBlitz3.ab2@26171>   DBF D0,read_xtrafile__loop3
00033B16 <AmiBlitz3.ab2@26173>   MOVEM.l D7/A6,-(A7)
00033B1C <AmiBlitz3.ab2@26174>   JSR init_buffers
00033B22 <AmiBlitz3.ab2@26175>   JSR reloadresident
00033B26 <AmiBlitz3.ab2@26176>   MOVEM.l (A7)+,D7/A6
00033B28 <AmiBlitz3.ab2@26177> RTS
00033B30 <AmiBlitz3.ab2@26181>   MOVE.b #$1,xtra_versionnumber                            ;.xtra version number...
00033B36 <AmiBlitz3.ab2@26190>   LEA ptr_xtradata,A2
00033B38 <AmiBlitz3.ab2@26191>   MOVEQ.l #$00,D4
00033B3A <AmiBlitz3.ab2@26195>   MOVE.w (A2)+,D4                                          ; anzahl bytes zu schreiben
00033B3E <AmiBlitz3.ab2@26196>   BEQ.b write_xtrafile__done
00033B40 <AmiBlitz3.ab2@26199>    MOVE.l (A2)+,D2
00033B44 <AmiBlitz3.ab2@26200>    BEQ.b write_xtrafile__loop
00033B46 <AmiBlitz3.ab2@26202>    MOVE.l D4,D3
00033B48 <AmiBlitz3.ab2@26203>    MOVE.l D7,D1                                            ; schreiben der daten in ptr_xtradata
00033B4C <AmiBlitz3.ab2@26204>    JSR _Write(A6)                                          ; d1: file, d2: buffer, d3:length
00033B50 <AmiBlitz3.ab2@26205> BRA.b write_xtrafile__loop2
00033B52 <AmiBlitz3.ab2@26208>   MOVE.l D7,D1
00033B58 <AmiBlitz3.ab2@26209>   MOVE.l #str_cliarguments,D2
00033B5E <AmiBlitz3.ab2@26210>   MOVE.l #116,D3
00033B62 <AmiBlitz3.ab2@26211>   JSR _Write(A6)                                           ; hier werden 116 bytes an cli_arguments geschrieben !!
00033B64 <AmiBlitz3.ab2@26213>   MOVE.l D7,D1
00033B6A <AmiBlitz3.ab2@26214>   MOVE.l #stacksize,D2
00033B70 <AmiBlitz3.ab2@26215>   MOVE.l #4,D3
00033B74 <AmiBlitz3.ab2@26216>   JSR _Write(A6)
00033B76 <AmiBlitz3.ab2@26218>   MOVE.l D7,D1
00033B7C <AmiBlitz3.ab2@26219>   MOVE.l #versioninformation,D2
00033B82 <AmiBlitz3.ab2@26220>   MOVE.l #4,D3
00033B86 <AmiBlitz3.ab2@26221>   JSR _Write(A6)
00033B88 <AmiBlitz3.ab2@26223>   MOVE.l D7,D1
00033B8E <AmiBlitz3.ab2@26224>   MOVE.l #number_of_builds,D2
00033B94 <AmiBlitz3.ab2@26225>   MOVE.l #4,D3
00033B98 <AmiBlitz3.ab2@26226>   JSR _Write(A6)
00033B9E <AmiBlitz3.ab2@26232>   LEA libpointer,A2
00033BA0 <AmiBlitz3.ab2@26235>     MOVE.l (A2),D0
00033BA4 <AmiBlitz3.ab2@26236>     BEQ.w write_xtrafile__done2
00033BA6 <AmiBlitz3.ab2@26237>     MOVEA.l D0,A2
00033BAA <AmiBlitz3.ab2@26238>     MOVE.l $12(A2),D4
00033BAE <AmiBlitz3.ab2@26239>     TST.w -$2(A2,D4.L)
00033BB2 <AmiBlitz3.ab2@26240>     BEQ.w write_xtrafile__loop3
00033BB6 <AmiBlitz3.ab2@26242>     LEA $4(A2),A0
00033BB8 <AmiBlitz3.ab2@26243>     MOVE.l A0,D2
00033BBA <AmiBlitz3.ab2@26244>     MOVEQ.l #$02,D3
00033BBC <AmiBlitz3.ab2@26245>     MOVE.l D7,D1                                           ; schreiben der Libnum mit 2 bytes
00033BC0 <AmiBlitz3.ab2@26246>     JSR _Write(A6)                                         ; d1: file, d2: buffer, d3:length
00033BC4 <AmiBlitz3.ab2@26248>     LEA -$4(A2,D4.L),A0
00033BC6 <AmiBlitz3.ab2@26249>     MOVE.l A0,D2
00033BC8 <AmiBlitz3.ab2@26250>     MOVEQ.l #$02,D3
00033BCA <AmiBlitz3.ab2@26251>     MOVE.l D7,D1                                           ; schreiben der Max Objects mit 2 bytes
00033BCE <AmiBlitz3.ab2@26252>     JSR _Write(A6)                                         ; d1: file, d2: buffer, d3:length
00033BD2 <AmiBlitz3.ab2@26253> BRA.w write_xtrafile__loop3
00033BD8 <AmiBlitz3.ab2@26258>   LEA XTRAEndPadBytes,A2 ; get the start address off the 4 fill/pad/termination bytes
00033BDA <AmiBlitz3.ab2@26259>   MOVE.l A2,D2           ; move the address to d2
00033BE0 <AmiBlitz3.ab2@26260>   MOVE.l #4,D3           ; we only need 4 bytes to save
00033BE2 <AmiBlitz3.ab2@26261>   MOVE.l D7,D1           ; we set the file handle
00033BE6 <AmiBlitz3.ab2@26262>   JSR _Write(A6)         ; and we write it.
00033BE8 <AmiBlitz3.ab2@26264> RTS
00033BEE <AmiBlitz3.ab2@26269>   LEA optssave,A0                      ; backup address
00033BF4 <AmiBlitz3.ab2@26270>   LEA ptr_xtradata,A1                  ; source address
00033BF6 <AmiBlitz3.ab2@26273>   MOVE.w (A1)+,D0                                          ;length of data move
00033BFA <AmiBlitz3.ab2@26274>   BEQ.b 'backupdone
00033BFC <AmiBlitz3.ab2@26275>   SUBQ.w #1,D0
00033BFE <AmiBlitz3.ab2@26278>     MOVE.l (A1)+,D1
00033C02 <AmiBlitz3.ab2@26279>     BEQ.b 'backuploop
00033C04 <AmiBlitz3.ab2@26280>     MOVEA.l D1,A2
00033C06 <AmiBlitz3.ab2@26281>     MOVE.w D0,D1
00033C08 <AmiBlitz3.ab2@26284>       MOVE.b (A2)+,(A0)+
00033C0C <AmiBlitz3.ab2@26285>   DBF D1,'backuploop3
00033C10 <AmiBlitz3.ab2@26287> BRA.w 'backuploop2
00033C16 <AmiBlitz3.ab2@26291>   LEA bufferlist,A1
00033C18 <AmiBlitz3.ab2@26294>     MOVE.l (A1)+,D2
00033C1C <AmiBlitz3.ab2@26295>     BEQ.b 'loop4done
00033C1E <AmiBlitz3.ab2@26297>     MOVEA.l D2,A0
00033C20 <AmiBlitz3.ab2@26298>     MOVE.l (A0),D2
00033C22 <AmiBlitz3.ab2@26299>     ADDQ.w #8,A0
00033C28 <AmiBlitz3.ab2@26300>     JSR makelong
00033C2C <AmiBlitz3.ab2@26301> BRA.b 'loop4
00033C32 <AmiBlitz3.ab2@26304>   CLR.w state_of_residents                                 ;resident change
00033C38 <AmiBlitz3.ab2@26305>   CLR.w comsettings_message                                ;alloc change
00033C3E <AmiBlitz3.ab2@26306>   CLR.w maxobject_pos
00033C40 <AmiBlitz3.ab2@26307> RTS   ; new tomsmart1
00033C46 <AmiBlitz3.ab2@26311>   LEA optssave,A0
00033C4C <AmiBlitz3.ab2@26312>   LEA ptr_xtradata,A1
00033C4E <AmiBlitz3.ab2@26315>   MOVE.w (A1)+,D0
00033C52 <AmiBlitz3.ab2@26316>   BEQ.b 'restoredone
00033C54 <AmiBlitz3.ab2@26317>   SUBQ.w #1,D0
00033C56 <AmiBlitz3.ab2@26320>     MOVE.l (A1)+,D1
00033C5A <AmiBlitz3.ab2@26321>     BEQ.b 'restoreloop1
00033C5C <AmiBlitz3.ab2@26322>     MOVEA.l D1,A2
00033C5E <AmiBlitz3.ab2@26323>     MOVE.w D0,D1
00033C60 <AmiBlitz3.ab2@26326>       MOVE.b (A0)+,(A2)+
00033C64 <AmiBlitz3.ab2@26327>   DBF D1,'restoreloop3
00033C68 <AmiBlitz3.ab2@26329> BRA.b 'restoreloop2
00033C6A <AmiBlitz3.ab2@26332> RTS
00033C70 <AmiBlitz3.ab2@26336>   JSR free_residents                    ; first free the allready loaded residents
00033C76 <AmiBlitz3.ab2@26337>   JSR Clear_Residents_table             ; second clear the complete resident table
00033C78 <AmiBlitz3.ab2@26338> RTS
00033C80 <AmiBlitz3.ab2@26342>   MOVE.w #$FFFF,state_of_residents
00033C86 <AmiBlitz3.ab2@26343>   MOVE.w state_of_residents,D0
00033C8C <AmiBlitz3.ab2@26344>   JSR reloadresident
00033C8E <AmiBlitz3.ab2@26345> RTS
00033C90 <AmiBlitz3.ab2@26350>   MOVE.l d0,a1
00033C96 <AmiBlitz3.ab2@26351>   MOVEA.l libpointer,A2
00033C9A <AmiBlitz3.ab2@26354>     MOVE.l $12(A2),D0
00033C9E <AmiBlitz3.ab2@26355>     TST.w -$2(A2,D0.L)
00033CA2 <AmiBlitz3.ab2@26356>      BEQ.w JL_0_102AAa
00033CA4 <AmiBlitz3.ab2@26357>     SUBQ.w #1,D1
00033CA8 <AmiBlitz3.ab2@26358>      BPL.w JL_0_102AAa
00033CAC <AmiBlitz3.ab2@26359>     MOVEA.l -$1A(A2,D0.L),A3
00033CAE <AmiBlitz3.ab2@26360>     ADDA.l A2,A3
00033CB0 <AmiBlitz3.ab2@26363>       MOVE.b (A3)+,(A1)+
00033CB4 <AmiBlitz3.ab2@26364>     BNE.w JL_0_10294a
00033CB6 <AmiBlitz3.ab2@26366>     CLR.b -(A1)
00033CBA <AmiBlitz3.ab2@26367>     MOVE.w -$4(A2,D0.L),D0
00033CC0 <AmiBlitz3.ab2@26368>     AND.l #$ffff,d0
00033CC2 <AmiBlitz3.ab2@26369> RTS
00033CC4 <AmiBlitz3.ab2@26372>     MOVEA.l (A2),A2
00033CC8 <AmiBlitz3.ab2@26373> BRA.w JL_0_1027Ca
00033CD8 <AmiBlitz3.ab2@26378> str_maxobjects_name:   Dc.b "              ",0 : Even
00033CE8 <AmiBlitz3.ab2@26379> str_maxobjects_name2:  Dc.b "              ",0 : Even
00033CEC <AmiBlitz3.ab2@26380> objectbuffer:          Dc.l $00004000
00033CF0 <AmiBlitz3.ab2@26381>                        Dc.l $00000000
00033CFC <AmiBlitz3.ab2@26382> str_objectbuffer:      Dc.b "16384",0,0,0,0,0,0,0      ; string max 12 columns
00033D00 <AmiBlitz3.ab2@26384> libsbuffer:            Dc.l $00008000
00033D04 <AmiBlitz3.ab2@26385>                        Dc.l $00000000
00033D10 <AmiBlitz3.ab2@26386> str_libsbuffer:        Dc.b "32768",0,0,0,0,0,0,0      ;was "16384"; string max 12 columns
00033D14 <AmiBlitz3.ab2@26388> systembuffer:          Dc.l $00001000                      ; systen buffer
00033D18 <AmiBlitz3.ab2@26389>                        Dc.l $00000000
00033D24 <AmiBlitz3.ab2@26390> str_systembuffer:      Dc.b "4096",0,0,0,0,0,0,0,0     ; string max 12 columns
00033D28 <AmiBlitz3.ab2@26392> databuffer:            Dc.l $00001000                      ; data buffer
00033D2C <AmiBlitz3.ab2@26393>                        Dc.l $00000000
00033D38 <AmiBlitz3.ab2@26394> str_databuffer:        Dc.b "4096",0,0,0,0,0,0,0,0     ; string max 12 columns
00033D3C <AmiBlitz3.ab2@26396> macrobuffer_size:      Dc.l $00002000                      ; macro buffer
00033D40 <AmiBlitz3.ab2@26397>                        Dc.l $00000000
00033D4C <AmiBlitz3.ab2@26398> str_macrobuffer:       Dc.b "8192",0,0,0,0,0,0,0,0     ; string max 12 columns
00033D50 <AmiBlitz3.ab2@26400> stringbuffer:          Dc.l $00002800                      ; string buffer
00033D54 <AmiBlitz3.ab2@26401>                        Dc.l $00000000
00033D60 <AmiBlitz3.ab2@26402> str_stringbuffer:      Dc.b "10240",0,0,0,0,0,0,0      ; string max 12 columns
00033D62 <AmiBlitz3.ab2@26404> maxobjects_value:      Dc.w $0064
00033D66 <AmiBlitz3.ab2@26405>                        Dc.l $00000000
00033D72 <AmiBlitz3.ab2@26406> str_maxobjects_value:  Dc.b "100",0,0,0,0,0,0,0,0,0    ; string max 12 columns
00033D74 <AmiBlitz3.ab2@26408> maxobjects_value2:     Dc.w $0014
00033D76 <AmiBlitz3.ab2@26409>                        Dc.w $0000
00033D82 <AmiBlitz3.ab2@26411> str_maxobjects_value2: Dc.b "20",0,0,0,0,0,0,0,0,0,0   ; string max 12 columns
00033D83 <AmiBlitz3.ab2@26415> set_create_iconfile:   Dc.b $00
00033D86 <AmiBlitz3.ab2@26416> create_iconfile:       Dc.b $80,$01,$01                    ;create icon
00033D88 <AmiBlitz3.ab2@26417>                        Dc.b $00,$01
00033D89 <AmiBlitz3.ab2@26419> set_use_debugger:      Dc.b $00                            ; Flags.w
00033D8C <AmiBlitz3.ab2@26420> use_debugger:          Dc.b $80,$01,$01                    ; Activation.w
00033D8E <AmiBlitz3.ab2@26421>                        Dc.b $00,$01                        ; GadgetType.w
00033D92 <AmiBlitz3.ab2@26422> AL_0_11010:            Dc.b $00,$80,$01,$01                ; flags, activation
00033D96 <AmiBlitz3.ab2@26423> AL_0_1103C:            Dc.b $00,$80,$01,$01                ; flags, activation
00033D9A <AmiBlitz3.ab2@26424> AL_0_11068:            Dc.b $00,$80,$01,$01                ; flags, activation
00033D9C <AmiBlitz3.ab2@26425> AL_0_11094:            Ds.w 1
00033D9D <AmiBlitz3.ab2@26427> set_make_smallestcode: Ds.b 1
00033DA0 <AmiBlitz3.ab2@26428> make_smallestcode:     Dc.b $00,$01,$01                    ;make smallest
00033DA2 <AmiBlitz3.ab2@26429>                        Dc.b $00,$01
00033DA3 <AmiBlitz3.ab2@26430> set_link_debuginfo:    Ds.b 1
00033DA6 <AmiBlitz3.ab2@26431> link_debuginfo:        Dc.b $00,$01,$01                    ;create debuginfo
00033DA8 <AmiBlitz3.ab2@26432>                        Dc.b $00,$01
00033FC8 <AmiBlitz3.ab2@26437>   Ds.l 136         ;resident files STEP $44 piece 8
00034048 <AmiBlitz3.ab2@26442> str_calcexpression:        Ds.l 32
0003404C <AmiBlitz3.ab2@26443> destbufferend_backup_calc: Ds.l 1
00034056 <AmiBlitz3.ab2@26448>   MOVE.l destbufferend,destbufferend_backup_calc
0003405C <AmiBlitz3.ab2@26449>   MOVE.l A7,errstack
00034066 <AmiBlitz3.ab2@26450>   MOVE.l #Calc_Error_Exit,errcont
00034090 <AmiBlitz3.ab2@26457>   !basic         ; get the flage for the conversion form the editor
000340D4 <AmiBlitz3.ab2@26458>   !ComData_GetW{comWord_CalculatorButtonBinFlag,D0} : MOVE.w d0,CalculatorButtonBinFlag
00034118 <AmiBlitz3.ab2@26459>   !ComData_GetW{comWord_CalculatorButtonDecFlag,D0} : MOVE.w d0,CalculatorButtonDecFlag
00034136 <AmiBlitz3.ab2@26460>   !asm
0003413C <AmiBlitz3.ab2@26462>   LEA str_calcexpression,A0
00034142 <AmiBlitz3.ab2@26470>   JSR setcvars
00034148 <AmiBlitz3.ab2@26471>   JSR setsvars
0003414E <AmiBlitz3.ab2@26472>   CLR.w connest
00034154 <AmiBlitz3.ab2@26473>   LEA str_calcexpression,A5
0003415A <AmiBlitz3.ab2@26474>   JSR AJL_0_BF6E
00034160 <AmiBlitz3.ab2@26475>   LEA str_calcexpression,A0
00034162 <AmiBlitz3.ab2@26476>   TST.l D3
00034166 <AmiBlitz3.ab2@26477>    BPL.w JL_0_11AE8
0003416A <AmiBlitz3.ab2@26478>   MOVE.b #$2D,(A0)+
0003416C <AmiBlitz3.ab2@26479>   NEG.l D3
00034174 <AmiBlitz3.ab2@26482>   CMPI.w #$80,CalculatorButtonDecFlag
00034178 <AmiBlitz3.ab2@26483>    BEQ.w JL_0_11B74
0003417A <AmiBlitz3.ab2@26484>   MOVEQ.l #$00,D1
00034182 <AmiBlitz3.ab2@26485>   CMPI.w #$80,CalculatorButtonBinFlag
00034186 <AmiBlitz3.ab2@26486>    BNE.w JL_0_11B36
00034188 <AmiBlitz3.ab2@26487>   MOVEQ.l #$1F,D0
0003418C <AmiBlitz3.ab2@26488>   MOVE.b #$25,(A0)+
0003418E <AmiBlitz3.ab2@26491>       LSL.l #1,D3
00034192 <AmiBlitz3.ab2@26492>        BCC.w JL_0_11B18
00034196 <AmiBlitz3.ab2@26493>       MOVE.b #"1",(A0)+
00034198 <AmiBlitz3.ab2@26494>       MOVEQ.l #-$01,D1
0003419C <AmiBlitz3.ab2@26495>   BRA.w JL_0_11B22
0003419E <AmiBlitz3.ab2@26498>       TST.w D1
000341A2 <AmiBlitz3.ab2@26499>       BEQ.w JL_0_11B22
000341A6 <AmiBlitz3.ab2@26500>       MOVE.b #"0",(A0)+
000341AA <AmiBlitz3.ab2@26503>  DBF D0,JL_0_11B08
000341AC <AmiBlitz3.ab2@26506>   TST.w D1
000341B0 <AmiBlitz3.ab2@26507>   BNE.w JL_0_11B30
000341B4 <AmiBlitz3.ab2@26508>   MOVE.b #"0",(A0)+
000341B6 <AmiBlitz3.ab2@26511>   CLR.b (A0)
000341BA <AmiBlitz3.ab2@26512> BRA.w JL_0_11B7C
000341BC <AmiBlitz3.ab2@26515>   MOVEQ.l #$07,D0
000341C0 <AmiBlitz3.ab2@26516>   MOVE.b #$24,(A0)+
000341C2 <AmiBlitz3.ab2@26519>     MOVE.l D3,D2
000341C4 <AmiBlitz3.ab2@26520>     SWAP D2
000341C6 <AmiBlitz3.ab2@26521>     LSR.w #8,D2
000341C8 <AmiBlitz3.ab2@26522>     LSR.w #4,D2
000341CC <AmiBlitz3.ab2@26523>     ADDI.w #$30,D2
000341D0 <AmiBlitz3.ab2@26524>     CMP.w #$3A,D2
000341D4 <AmiBlitz3.ab2@26525>      BCS.w JL_0_11B52
000341D6 <AmiBlitz3.ab2@26526>     ADDQ.w #7,D2
000341DA <AmiBlitz3.ab2@26529>     CMP.w #$30,D2
000341DE <AmiBlitz3.ab2@26530>     BEQ.w JL_0_11B62
000341E0 <AmiBlitz3.ab2@26531>     MOVE.b D2,(A0)+
000341E2 <AmiBlitz3.ab2@26532>     MOVEQ.l #-$01,D1
000341E6 <AmiBlitz3.ab2@26533>   BRA.w JL_0_11B6A
000341E8 <AmiBlitz3.ab2@26536>     TST.w D1
000341EC <AmiBlitz3.ab2@26537>      BEQ.w JL_0_11B6A
000341EE <AmiBlitz3.ab2@26538>     MOVE.b D2,(A0)+
000341F0 <AmiBlitz3.ab2@26541>     LSL.l #4,D3
000341F4 <AmiBlitz3.ab2@26542>  DBF D0,JL_0_11B3C
000341F8 <AmiBlitz3.ab2@26544> BRA.w JL_0_11B26
000341FA <AmiBlitz3.ab2@26547>   MOVE.l D3,D2
00034200 <AmiBlitz3.ab2@26548>   JSR makelong
0003420A <AmiBlitz3.ab2@26555>   MOVE.l destbufferend_backup_calc,destbufferend
0003420C <AmiBlitz3.ab2@26557> RTS                         ; added tomsmart 2012 03 07 vor Calculator in PED
0003430B <AmiBlitz3.ab2@26561> str_cliarguments: Ds.b 255   ; a command line can acutally be 255 characters long
0003430C <AmiBlitz3.ab2@26563> Even
0003434A <AmiBlitz3.ab2@26568>   !ComData_GetL{comFunc_OpenCompilerWindow,A1}
00034350 <AmiBlitz3.ab2@26569>   MOVE.l #1001,D0
00034356 <AmiBlitz3.ab2@26570>   MOVE.l #str_cliarguments,D1
00034358 <AmiBlitz3.ab2@26571>   JSR (A1)
0003435A <AmiBlitz3.ab2@26572> RTS
0003435C <AmiBlitz3.ab2@26577>     MOVE.b (a5)+,d0
00034360 <AmiBlitz3.ab2@26578>     BEQ 'l2
00034364 <AmiBlitz3.ab2@26579>     CMP.b #$80,d0
00034368 <AmiBlitz3.ab2@26580>     BNE 'l1
0003436A <AmiBlitz3.ab2@26581>     MOVE.b (a5)+,d0
0003436E <AmiBlitz3.ab2@26582>     BEQ 'l2
00034372 <AmiBlitz3.ab2@26583>     CMP.b #$02,d0
00034376 <AmiBlitz3.ab2@26584>   BNE 'l1
0003437A <AmiBlitz3.ab2@26587>     CMP.b #$20,(a5)+
0003437E <AmiBlitz3.ab2@26588>   BEQ 'l3
00034380 <AmiBlitz3.ab2@26589>   SUBQ.l #1,a5
00034382 <AmiBlitz3.ab2@26590>   TST.b (a5)
00034386 <AmiBlitz3.ab2@26591>   BEQ 'l2
0003438A <AmiBlitz3.ab2@26592>   CMP.w #$8008,(a5)
0003438E <AmiBlitz3.ab2@26593>   BEQ 'l4
00034392 <AmiBlitz3.ab2@26594>   CMP.w #$8009,(a5)
00034396 <AmiBlitz3.ab2@26595>   BEQ 'l4
0003439A <AmiBlitz3.ab2@26596> BRA 'l1
0003439C <AmiBlitz3.ab2@26599>   ADDQ.l #2,a5
000343A2 <AmiBlitz3.ab2@26600>   JSR skiprest
000343A4 <AmiBlitz3.ab2@26601> RTS
000343AA <AmiBlitz3.ab2@26604>   JSR nextline
000343AE <AmiBlitz3.ab2@26605>   BNE 'l1
000343B0 <AmiBlitz3.ab2@26606> RTS
000343DA <AmiBlitz3.ab2@26610>   !basic
000343E4 <AmiBlitz3.ab2@26611>   DateFormat 1
000343F2 <AmiBlitz3.ab2@26612>   i.l=SystemDate
00034418 <AmiBlitz3.ab2@26613>   a$=Date$ (i)
00034496 <AmiBlitz3.ab2@26614>   a$=Replace$(a$,"/",".")
0003449C <AmiBlitz3.ab2@26615>   GetD0 &a$
0003449E <AmiBlitz3.ab2@26616>   MOVEQ #8,d2
000344A0 <AmiBlitz3.ab2@26617>   MOVE.l d0,a0
000344A2 <AmiBlitz3.ab2@26620>     MOVE.b (a0)+,d1
000344A8 <AmiBlitz3.ab2@26621>     JSR pokedata1b
000344AC <AmiBlitz3.ab2@26622>  DBF d2,'l1
000344AE <AmiBlitz3.ab2@26624>   MOVEQ #0,d0
000344B0 <AmiBlitz3.ab2@26625>   MOVE.b (a0)+,d0
000344CE <AmiBlitz3.ab2@26626>   !asm
000344D4 <AmiBlitz3.ab2@26627>   ADD.l #9,d2
000344DA <AmiBlitz3.ab2@26628>   ADD.l #9,a5
000344DC <AmiBlitz3.ab2@26629> RTS
00034506 <AmiBlitz3.ab2@26633>   !basic
00034510 <AmiBlitz3.ab2@26634>   DateFormat 0
0003451E <AmiBlitz3.ab2@26635>   i.l=SystemDate
00034544 <AmiBlitz3.ab2@26636>   a$=Date$ (i)
000345C2 <AmiBlitz3.ab2@26637>   a$=Replace$(a$,"/",".")
000345C8 <AmiBlitz3.ab2@26638>   GetD0 &a$
000345CA <AmiBlitz3.ab2@26639>   MOVEQ #8,d2
000345CC <AmiBlitz3.ab2@26640>   MOVE.l d0,a0
000345CE <AmiBlitz3.ab2@26643>     MOVE.b (a0)+,d1
000345D4 <AmiBlitz3.ab2@26644>     JSR pokedata1b
000345D8 <AmiBlitz3.ab2@26645>  DBF d2,'l1
000345DA <AmiBlitz3.ab2@26647>   MOVEQ #0,d0
000345DC <AmiBlitz3.ab2@26648>   MOVE.b (a0)+,d0
000345FA <AmiBlitz3.ab2@26649>   !asm
00034600 <AmiBlitz3.ab2@26650>   ADD.l #9,d2
00034606 <AmiBlitz3.ab2@26651>   ADD.l #13,a5
00034608 <AmiBlitz3.ab2@26652> RTS
00034632 <AmiBlitz3.ab2@26656>   !basic
0003463C <AmiBlitz3.ab2@26657>   DateFormat 1
0003464A <AmiBlitz3.ab2@26658>   i.l = SystemDate
00034670 <AmiBlitz3.ab2@26659>   a$ = Date$ (i)
000346EE <AmiBlitz3.ab2@26660>   a$ = Replace$(a$,"/",".")
000346F4 <AmiBlitz3.ab2@26661>   GetD0 &a$
000346F6 <AmiBlitz3.ab2@26662>   MOVEQ #8,d2
000346F8 <AmiBlitz3.ab2@26663>   MOVE.l d0,a0
000346FA <AmiBlitz3.ab2@26666>     MOVE.b (a0)+,d1
00034700 <AmiBlitz3.ab2@26667>     JSR writebyte
00034704 <AmiBlitz3.ab2@26668>  DBF d2,'l1
00034706 <AmiBlitz3.ab2@26670>   MOVEQ #0,d0
00034708 <AmiBlitz3.ab2@26671>   MOVE.b (a0)+,d0
00034726 <AmiBlitz3.ab2@26672>   !asm
0003472C <AmiBlitz3.ab2@26673>   ADD.l #9,a5
0003472E <AmiBlitz3.ab2@26674> RTS
00034758 <AmiBlitz3.ab2@26678>   !basic
00034762 <AmiBlitz3.ab2@26679>   DateFormat 0
00034770 <AmiBlitz3.ab2@26680>   i.l=SystemDate
00034796 <AmiBlitz3.ab2@26681>   a$=Date$ (i)
00034814 <AmiBlitz3.ab2@26682>   a$=Replace$(a$,"/",".")
0003481A <AmiBlitz3.ab2@26683>   GetD0 &a$
0003481C <AmiBlitz3.ab2@26684>   MOVEQ #8,d2
0003481E <AmiBlitz3.ab2@26685>   MOVE.l d0,a0
00034820 <AmiBlitz3.ab2@26688>     MOVE.b (a0)+,d1
00034826 <AmiBlitz3.ab2@26689>     JSR writebyte
0003482A <AmiBlitz3.ab2@26690>  DBF d2,'l1
0003482C <AmiBlitz3.ab2@26692>   MOVEQ #0,d0
0003482E <AmiBlitz3.ab2@26693>   MOVE.b (a0)+,d0
0003484C <AmiBlitz3.ab2@26694>   !asm
00034852 <AmiBlitz3.ab2@26695>   ADD.l #13,a5
00034854 <AmiBlitz3.ab2@26696> RTS
00034856 <AmiBlitz3.ab2@26700>   MOVE.l d2,-(a7)                                          ; D2 -> stack
00034858 <AmiBlitz3.ab2@26701>   MOVE.l a5,d0
00034882 <AmiBlitz3.ab2@26702>   !basic
00034886 <AmiBlitz3.ab2@26703>   _myD0.l = PutD0
00034890 <AmiBlitz3.ab2@26704>   If _myD0
000348D6 <AmiBlitz3.ab2@26705>     verstring$ = Left$(Peek.s(_myD0),9+3)
00034928 <AmiBlitz3.ab2@26706>     verstring$ = UnRight$(verstring$,3)                      ; Compilerkonstantenbeginn \__ entfernen
0003492E <AmiBlitz3.ab2@26707>   Else
0003495C <AmiBlitz3.ab2@26708>     error{"INTERNAL: Invalid pointer in version_string!"}
0003496C <AmiBlitz3.ab2@26713>   actual_version.l = Peek.l(?versioninformation)
0003497C <AmiBlitz3.ab2@26714>   actual_build.l   = Peek.l(?number_of_builds)
000349A0 <AmiBlitz3.ab2@26716>   Format "00"
000349D6 <AmiBlitz3.ab2@26717>   Select verstring$
000349FA <AmiBlitz3.ab2@26719>     Case "VER_MAJOR"
00034A36 <AmiBlitz3.ab2@26720>      put_versionstr$ = Str$(actual_version LSR 24)
00034A60 <AmiBlitz3.ab2@26722>     Case "VER_MINOR"
00034AA4 <AmiBlitz3.ab2@26723>      put_versionstr$ = Str$((actual_version LSL 8) LSR 24)
00034ACE <AmiBlitz3.ab2@26725>     Case "VER_PATCH"
00034B12 <AmiBlitz3.ab2@26726>      put_versionstr$ = Str$((actual_version LSL 16) LSR 24 )
00034B3C <AmiBlitz3.ab2@26728>     Case "VER_BUILD"
00034B60 <AmiBlitz3.ab2@26729>      Format ""
00034B94 <AmiBlitz3.ab2@26730>      put_versionstr$ = Str$(actual_build)
00034B9A <AmiBlitz3.ab2@26732>     Default
00034BC2 <AmiBlitz3.ab2@26733>      put_versionstr$ = "{unknown compilerconstant}"
00034BD0 <AmiBlitz3.ab2@26736>   End Select
00034BF4 <AmiBlitz3.ab2@26737>   Format ""
00034C04 <AmiBlitz3.ab2@26739>   GetD0 FLen(put_versionstr$)                              ; laenge zielstring -> Stack
00034C06 <AmiBlitz3.ab2@26740>   MOVE.l d0,d2
00034C08 <AmiBlitz3.ab2@26741>   MOVE.l d2,-(a7)
00034C0C <AmiBlitz3.ab2@26742>   SUB #1,d2
00034C12 <AmiBlitz3.ab2@26744>   GetD0 &put_versionstr$                                   ; kopieren des neuen Strings in den Zielstring
00034C14 <AmiBlitz3.ab2@26745>   MOVE.l d0,a0
00034C16 <AmiBlitz3.ab2@26748>     MOVE.b (a0)+,d1
00034C1C <AmiBlitz3.ab2@26749>     JSR pokedata1b
00034C20 <AmiBlitz3.ab2@26750>  DBF d2,'l1
00034C22 <AmiBlitz3.ab2@26752>   MOVEQ #0,d0
00034C40 <AmiBlitz3.ab2@26753>   !asm
00034C42 <AmiBlitz3.ab2@26754>   MOVE.l (a7)+,d0                                          ; laenge Zielstring <- Stack
00034C44 <AmiBlitz3.ab2@26755>   MOVE.l (a7)+,d2                                          ; d2 <-Stack
00034C46 <AmiBlitz3.ab2@26756>   ADD.l d0,d2
00034C4C <AmiBlitz3.ab2@26757>   ADD.l #12,a5                                             ; string_ptr um konstante weitersetzen
00034C4E <AmiBlitz3.ab2@26758>   MOVEQ #0,d0
00034C50 <AmiBlitz3.ab2@26759> RTS
00034C52 <AmiBlitz3.ab2@26763>   MOVE.l a5,d0
00034C7C <AmiBlitz3.ab2@26764>   !basic
00034C80 <AmiBlitz3.ab2@26765>   _myD0.l = PutD0
00034C8A <AmiBlitz3.ab2@26766>   If _myD0
00034CD0 <AmiBlitz3.ab2@26767>     verstring$ = Left$(Peek.s(_myD0),9+3)
00034D22 <AmiBlitz3.ab2@26768>     verstring$ = UnRight$(verstring$,3)                      ; Compilerkonstantenbeginn \__ entfernen
00034D28 <AmiBlitz3.ab2@26769>   Else
00034D56 <AmiBlitz3.ab2@26770>     error{"INTERNAL: Invalid pointer in version_string_dc!"}
00034D66 <AmiBlitz3.ab2@26775>   actual_version.l = Peek.l(?versioninformation)
00034D76 <AmiBlitz3.ab2@26776>   actual_build.l   = Peek.l(?number_of_builds)
00034D9A <AmiBlitz3.ab2@26778>   Format ""
00034DD0 <AmiBlitz3.ab2@26779>   Select verstring$
00034DF4 <AmiBlitz3.ab2@26781>     Case "VER_MAJOR"
00034E30 <AmiBlitz3.ab2@26782>      put_versionstr$ = Str$(actual_version LSR 24)
00034E5A <AmiBlitz3.ab2@26784>     Case "VER_MINOR"
00034E9E <AmiBlitz3.ab2@26785>      put_versionstr$ = Str$((actual_version LSL 8) LSR 24)
00034EC8 <AmiBlitz3.ab2@26787>     Case "VER_PATCH"
00034F0C <AmiBlitz3.ab2@26788>      put_versionstr$ = Str$((actual_version LSL 16) LSR 24 )
00034F36 <AmiBlitz3.ab2@26790>     Case "VER_BUILD"
00034F5A <AmiBlitz3.ab2@26791>      Format ""
00034F8E <AmiBlitz3.ab2@26792>      put_versionstr$ = Str$(actual_build)
00034F94 <AmiBlitz3.ab2@26794>     Default
00034FBC <AmiBlitz3.ab2@26795>      put_versionstr$ = "{unknown compilerconstant}"
00034FCA <AmiBlitz3.ab2@26797>   End Select
00034FEE <AmiBlitz3.ab2@26798>   Format ""
00035004 <AmiBlitz3.ab2@26800>   GetD0 FLen(put_versionstr$)-1
00035006 <AmiBlitz3.ab2@26801>   MOVE.l d0,d2
0003500C <AmiBlitz3.ab2@26803>   GetD0 &put_versionstr$                                   ; kopieren des neuen Strings in den Zielstring
0003500E <AmiBlitz3.ab2@26804>   MOVE.l d0,a0
00035010 <AmiBlitz3.ab2@26807>     MOVE.b (a0)+,d1
00035016 <AmiBlitz3.ab2@26808>     JSR writebyte
0003501A <AmiBlitz3.ab2@26809>  DBF d2,'l1
0003501C <AmiBlitz3.ab2@26811>   MOVEQ #0,d0
0003501E <AmiBlitz3.ab2@26812>   MOVE.b -(a0),d0                                          ; letztes Zeichen in D0
0003503C <AmiBlitz3.ab2@26813>   !asm
00035042 <AmiBlitz3.ab2@26814>   ADD.l #12,a5                                             ; string_ptr um konstante weitersetzen
00035044 <AmiBlitz3.ab2@26815> RTS
00035046 <AmiBlitz3.ab2@26917>  MOVE.l a5,-(a7)
00035072 <AmiBlitz3.ab2@26918>  !fget
00035076 <AmiBlitz3.ab2@26919>  CMP.w #".",d0
0003507A <AmiBlitz3.ab2@26920>  BNE 'skip
0003507E <AmiBlitz3.ab2@26921>  MOVEM.l a2/d2,-(a7)
00035084 <AmiBlitz3.ab2@26922>  LEA newtypebase,a2
0003508A <AmiBlitz3.ab2@26923>  JSR getparameter2
0003508E <AmiBlitz3.ab2@26924>  BEQ.w JUMP_syntaxerr
00035094 <AmiBlitz3.ab2@26925>  JSR findtype
00035098 <AmiBlitz3.ab2@26926>  BNE.w JUMP_notypeerr
0003509E <AmiBlitz3.ab2@26927>  MOVE.l a2,typetocast
000350A2 <AmiBlitz3.ab2@26928>  MOVEM.l (a7)+,a2/d2
000350A6 <AmiBlitz3.ab2@26929>  CMP.w #")",d0
000350AA <AmiBlitz3.ab2@26930>  BNE JUMP_errorbracketmiss
000350AC <AmiBlitz3.ab2@26931>  ADDQ.l #4,a7
000350D8 <AmiBlitz3.ab2@26932>  !fget
000350DE <AmiBlitz3.ab2@26933>  JMP nocast
000350E0 <AmiBlitz3.ab2@26935> 'skip MOVE.l (a7)+,a5
000350E6 <AmiBlitz3.ab2@26936>  JMP JL_0_A410
000350EC <AmiBlitz3.ab2@26938> JUMP_errorbracketmiss JMP errorbracketmiss
00035116 <AmiBlitz3.ab2@26940> Function.l ab3_GetIncludeLock{filename.s}
00035136 <AmiBlitz3.ab2@26941>   incLock.l  = Lock_ (&filename,#ACCESS_READ)   ; try bla.blub
0003518E <AmiBlitz3.ab2@26942>   ex.s       = dos_GetExt{filename}
000351A2 <AmiBlitz3.ab2@26944>   If incLock = False
00035216 <AmiBlitz3.ab2@26945>     filename = dos_SetExt{filename,"ab3"}
00035236 <AmiBlitz3.ab2@26946>     incLock  = Lock_ (&filename,#ACCESS_READ)   ; try bla.ab3
0003524A <AmiBlitz3.ab2@26949>   If incLock = False
000352BE <AmiBlitz3.ab2@26950>     filename = dos_SetExt{filename,"ab2"}
000352DE <AmiBlitz3.ab2@26951>     incLock  = Lock_ (&filename,#ACCESS_READ)   ; try bla.ab2
000352F2 <AmiBlitz3.ab2@26954>   If incLock = False
00035366 <AmiBlitz3.ab2@26955>     filename = dos_SetExt{filename,"bb2"}
00035386 <AmiBlitz3.ab2@26956>     incLock  = Lock_ (&filename,#ACCESS_READ)   ; try bla.bb2
0003539A <AmiBlitz3.ab2@26959>   If incLock = False
0003542C <AmiBlitz3.ab2@26960>     filename = dos_SetExt{filename,ex+".ab3"}
0003544C <AmiBlitz3.ab2@26961>     incLock  = Lock_ (&filename,#ACCESS_READ)   ; try bla.blub.ab3
00035460 <AmiBlitz3.ab2@26964>   If incLock = False
000354D4 <AmiBlitz3.ab2@26965>     filename = dos_SetExt{filename,"ab2"}
000354F4 <AmiBlitz3.ab2@26966>     incLock  = Lock_ (&filename,#ACCESS_READ)   ; try bla.blub.ab2
00035508 <AmiBlitz3.ab2@26969>   If incLock = False
0003557C <AmiBlitz3.ab2@26970>     filename = dos_SetExt{filename,"bb2"}
0003559C <AmiBlitz3.ab2@26971>     incLock  = Lock_ (&filename,#ACCESS_READ)   ; try bla.blub.bb2
000355A6 <AmiBlitz3.ab2@26974>  Function Return incLock
000355C0 <AmiBlitz3.ab2@26975> End Function
000355EA <AmiBlitz3.ab2@26979>   !basic
00035614 <AmiBlitz3.ab2@26980>   incString.s = Peek$(?ptr_parameterstore)
00035642 <AmiBlitz3.ab2@26982>   !ComData_LEA{comStr_CurrentDir,D0}                        ; get pointer to current Sourcefiledir
00035646 <AmiBlitz3.ab2@26983>   incDirP.l   = PutD0                                       ;    "
0003566E <AmiBlitz3.ab2@26984>   incDir_.s   = Peek.s(incDirP)                             ; get current Sourcefiledir
000356EE <AmiBlitz3.ab2@26985>   incFile.s   = dos_AddPart{incDir_,incString}              ; adding Sourcefiledir and Includestring
00035720 <AmiBlitz3.ab2@26986>   incLock.l   = ab3_GetIncludeLock{incFile}                 ; check if file exist
00035734 <AmiBlitz3.ab2@26988>   If incLock = False ; not found => check default Include Directory
00035744 <AmiBlitz3.ab2@26989>     incDirP.l = Peek.l(?incd)
0003574E <AmiBlitz3.ab2@26990>     If incDirP
00035776 <AmiBlitz3.ab2@26991>       incDir_.s = Peek.s(incDirP)
0003577C <AmiBlitz3.ab2@26992>     Else
000357E6 <AmiBlitz3.ab2@26993>       incDir_.s = dos_AddPart{Peek.s(?str_blitz3assign),"Sourcecodes/Includes"}
00035866 <AmiBlitz3.ab2@26995>     incFile.s = dos_AddPart{incDir_,incString}
00035898 <AmiBlitz3.ab2@26996>     incLock.l = ab3_GetIncludeLock{incFile}
000358AC <AmiBlitz3.ab2@26999>   If incLock = False ; not found => check relative to current source
000358C4 <AmiBlitz3.ab2@27000>     incDepth.l = Peek.w(?ininclude)-1
000358EA <AmiBlitz3.ab2@27001>     If incDepth >= 0 AND incDepth < #maxincludes
0003594A <AmiBlitz3.ab2@27002>       incDir_.s = dos_PathPart{incdim (incDepth)} ;= Peek.s(?includetemp2)
000359CA <AmiBlitz3.ab2@27003>       incFile.s = dos_AddPart{incDir_,incString}
000359FC <AmiBlitz3.ab2@27004>       incLock.l = ab3_GetIncludeLock{incFile}
00035A10 <AmiBlitz3.ab2@27008>   If incLock = False ; still not found => check default Include Directory and name only
00035A20 <AmiBlitz3.ab2@27009>     incDirP.l = Peek.l(?incd)
00035A2A <AmiBlitz3.ab2@27010>     If incDirP
00035A52 <AmiBlitz3.ab2@27011>       incDir_.s = Peek.s(incDirP)
00035A58 <AmiBlitz3.ab2@27012>     Else
00035AC2 <AmiBlitz3.ab2@27013>       incDir_.s = dos_AddPart{Peek.s(?str_blitz3assign),"Sourcecodes/Includes"}
00035B70 <AmiBlitz3.ab2@27015>     incFile.s = dos_AddPart{incDir_,dos_FilePart{incString}}
00035BA2 <AmiBlitz3.ab2@27016>     incLock.l = ab3_GetIncludeLock{incFile}
00035BAC <AmiBlitz3.ab2@27019>   If incLock
00035BC2 <AmiBlitz3.ab2@27020>     MaxLen incFile = 1024
00035BE6 <AmiBlitz3.ab2@27021>     NameFromLock_ incLock,&incFile,1024
00035C10 <AmiBlitz3.ab2@27022>     incFile = Peek.s(&incFile)
00035C48 <AmiBlitz3.ab2@27023>     Poke$ ?ptr_parameterstore,incFile
00035C5C <AmiBlitz3.ab2@27024>     i = FLen(incFile)
00035C68 <AmiBlitz3.ab2@27025>     GetReg d0,i
00035C6E <AmiBlitz3.ab2@27026>     MOVE.l d0,tempstore
00035C7E <AmiBlitz3.ab2@27027>     UnLock_ incLock
00035C9C <AmiBlitz3.ab2@27030>   !asm
00035CA2 <AmiBlitz3.ab2@27031>   TST.l tempstore
00035CA6 <AmiBlitz3.ab2@27032>    BEQ 'l1
00035CAC <AmiBlitz3.ab2@27033>   MOVE.l tempstore,d2
00035CAE <AmiBlitz3.ab2@27036> RTS
00035CD8 <AmiBlitz3.ab2@27040>   !basic
00035D02 <AmiBlitz3.ab2@27041>   incString.s = Peek$(?ptr_parameterstore)                  ; get the string
00035D30 <AmiBlitz3.ab2@27042>   !ComData_LEA{comStr_CurrentDir,D0}                        ; get pointer to current Sourcefiledir
00035D34 <AmiBlitz3.ab2@27043>   incDirP.l   = PutD0                                       ;    "
00035D5C <AmiBlitz3.ab2@27044>   incDir_.s   = Peek.s(incDirP)                             ; get current Sourcefiledir
00035DDC <AmiBlitz3.ab2@27045>   incFile.s   = dos_AddPart{incDir_,incString}              ; adding Sourcefiledir and Includestring
00035DFC <AmiBlitz3.ab2@27046>   incLock.l   = Lock_(&incFile,#ACCESS_READ)                ; check if file exist
00035E10 <AmiBlitz3.ab2@27048>   If incLock = False                                        ; not found => try orignal string only to find
00035E30 <AmiBlitz3.ab2@27049>     incLock.l = Lock_(&incString,#ACCESS_READ)
00035E3A <AmiBlitz3.ab2@27052>   If incLock                                                ; found => store full path
00035E50 <AmiBlitz3.ab2@27053>     MaxLen incFile = 1024
00035E74 <AmiBlitz3.ab2@27054>     NameFromLock_ incLock,&incFile,1024
00035E9E <AmiBlitz3.ab2@27055>     incFile = Peek.s(&incFile)
00035ED6 <AmiBlitz3.ab2@27056>     Poke$ ?ptr_parameterstore,incFile
00035EE2 <AmiBlitz3.ab2@27059> 
00035F00 <AmiBlitz3.ab2@27060>   !asm
00035F02 <AmiBlitz3.ab2@27061> RTS
00035F08 <AmiBlitz3.ab2@27072>   JSR Aclearallvars
00035F0E <AmiBlitz3.ab2@27073>   JSR free_unusedfunctions
00035F18 <AmiBlitz3.ab2@27088>   MOVE.l #"NORE",reqmode
00035F1E <AmiBlitz3.ab2@27089> JSR handle_compileerror
00035F20 <AmiBlitz3.ab2@27092>   MOVE.l d0,-(a7)
00035F22 <AmiBlitz3.ab2@27093>   MOVE.l a5,d0
00035F2C <AmiBlitz3.ab2@27094>   !basica7
00035F30 <AmiBlitz3.ab2@27095>   i.l = PutD0
00035F3A <AmiBlitz3.ab2@27096>   If i
00035F62 <AmiBlitz3.ab2@27097>     a$ = Peek$(i)
00035F94 <AmiBlitz3.ab2@27098>     b$ = Peeks$(i-7,7)
0003607A <AmiBlitz3.ab2@27099>     i = Request(!TRANS{"Do workaround ?"},b$ + a$,!TRANS{"Yes|No"})
00036080 <AmiBlitz3.ab2@27100>     MOVE.l d0,result
00036084 <AmiBlitz3.ab2@27102>   !asma7
00036086 <AmiBlitz3.ab2@27103>   MOVE.l (a7)+,d0
00036088 <AmiBlitz3.ab2@27104> RTS
000360B2 <AmiBlitz3.ab2@27108>   !basic
000360E0 <AmiBlitz3.ab2@27109>   !ComData_LEA{comStr_CurrentDir,D0}
000360E4 <AmiBlitz3.ab2@27110>   currentDirP.l = PutD0
00036112 <AmiBlitz3.ab2@27112>   !ComData_LEA{comStr_SourceName,D0}
00036116 <AmiBlitz3.ab2@27113>   fileNameP.l = PutD0
0003613E <AmiBlitz3.ab2@27115>   check_dirname$  = Peek$(currentDirP)
00036166 <AmiBlitz3.ab2@27116>   check_filename$ = Peek$(fileNameP)
000361EC <AmiBlitz3.ab2@27117>   If (olddirname$<>check_dirname$) OR (oldfilename$<>check_filename$)
000361F2 <AmiBlitz3.ab2@27118>     JSR free_unusedfunctions
0003623C <AmiBlitz3.ab2@27120>   olddirname$ = Peek$(check_dirname$)
00036286 <AmiBlitz3.ab2@27121>   oldfilename$ = Peek$(check_filename$)
000362B0 <AmiBlitz3.ab2@27122>   For i = 0 To #maxincludes-1
000362C4 <AmiBlitz3.ab2@27123>     incline(i) = 0
000362D4 <AmiBlitz3.ab2@27124>   Next
000362F2 <AmiBlitz3.ab2@27125>   !asm
000362F4 <AmiBlitz3.ab2@27126> RTS
000362F6 <AmiBlitz3.ab2@27130>   MOVEQ #0,d1
000362F8 <AmiBlitz3.ab2@27133>   MOVE.b (a5)+,d0
000362FC <AmiBlitz3.ab2@27134>   BEQ 'er1
00036300 <AmiBlitz3.ab2@27135>   CMP.b #$20,d0
00036304 <AmiBlitz3.ab2@27136>   BEQ 'l1
00036306 <AmiBlitz3.ab2@27137>   ADDQ #1,d1
0003630A <AmiBlitz3.ab2@27138>   CMP.b #$22,d0
0003630E <AmiBlitz3.ab2@27139>   BNE 'l1
00036310 <AmiBlitz3.ab2@27140> RTS
00036316 <AmiBlitz3.ab2@27143> JMP syntaxerr
0003633A <AmiBlitz3.ab2@27154> erro1t   Dc.b "Only one BSS / Chip Segment allowed",0 : Even
00036358 <AmiBlitz3.ab2@27155> nodata   Dc.b "BSS Segment contains Data!!!!",0       : Even
0003635E <AmiBlitz3.ab2@27160>   TST.b exdebug
00036362 <AmiBlitz3.ab2@27161>   BNE 'l10
00036368 <AmiBlitz3.ab2@27162>   MOVE.l #$4e71,d1
0003636E <AmiBlitz3.ab2@27163>   JSR writeword
00036374 <AmiBlitz3.ab2@27164>   MOVE.l destpointer,d0
00036376 <AmiBlitz3.ab2@27165>   MOVE.l d0,d1
00036378 <AmiBlitz3.ab2@27166>   ADDQ.l #3,d1
0003637E <AmiBlitz3.ab2@27167>   AND.l #$fffffffc,d1
00036384 <AmiBlitz3.ab2@27168>   MOVE.l d1,destpointer
0003638A <AmiBlitz3.ab2@27169>   SUB.l destpointer,d0
0003638E <AmiBlitz3.ab2@27170>   BEQ 'lnf1
00036398 <AmiBlitz3.ab2@27171>   CMP.l #-1,bssstart
0003639C <AmiBlitz3.ab2@27172>   BNE 'lnf1
000363A6 <AmiBlitz3.ab2@27173>   CMP.l #-1,chipstart
000363AA <AmiBlitz3.ab2@27174>   BNE 'lnf1
000363B0 <AmiBlitz3.ab2@27175>   MOVE.l destpointer,a4
000363B6 <AmiBlitz3.ab2@27176>   TST.w dontwrite
000363BA <AmiBlitz3.ab2@27177>   BNE 'lnf1
000363C0 <AmiBlitz3.ab2@27178>   MOVE.w #$4e71,-2(a4)
000363CA <AmiBlitz3.ab2@27181>   CMP.l #-1,bssstart
000363CE <AmiBlitz3.ab2@27182>   BEQ 'l11
000363D4 <AmiBlitz3.ab2@27183>   MOVE.l #erro1t,-(a7)
000363DA <AmiBlitz3.ab2@27184> JMP handle_compileerror
000363E4 <AmiBlitz3.ab2@27187>   MOVE.l destpointer,bssstart
000363EC <AmiBlitz3.ab2@27188>   MOVE.b #1,bssmode
000363F2 <AmiBlitz3.ab2@27191>   TST.b chipmode
000363F6 <AmiBlitz3.ab2@27192>   BEQ 'l10
00036400 <AmiBlitz3.ab2@27193>   MOVE.l destpointer,chipend
00036406 <AmiBlitz3.ab2@27194>   CLR.b chipmode
0003640C <AmiBlitz3.ab2@27197>   JSR get1bytemain
0003640E <AmiBlitz3.ab2@27198> RTS
00036414 <AmiBlitz3.ab2@27202>    TST.b exdebug
00036418 <AmiBlitz3.ab2@27203>   BNE 'x1
0003641E <AmiBlitz3.ab2@27204>   MOVE.l destpointer,d0
00036424 <AmiBlitz3.ab2@27205>   MOVE.l d0,realbssend
0003642A <AmiBlitz3.ab2@27206>   MOVE.l #$4e71,d1
00036430 <AmiBlitz3.ab2@27207>   JSR writeword
00036436 <AmiBlitz3.ab2@27208>   MOVE.l destpointer,d0
00036438 <AmiBlitz3.ab2@27209>   MOVE.l d0,d1
0003643A <AmiBlitz3.ab2@27210>   ADDQ.l #3,d1
00036440 <AmiBlitz3.ab2@27211>   AND.l #$fffffffc,d1
00036446 <AmiBlitz3.ab2@27212>   MOVE.l d1,destpointer
0003644C <AmiBlitz3.ab2@27213>   SUB.l destpointer,d0
00036450 <AmiBlitz3.ab2@27214>   BEQ 'lnf1
00036456 <AmiBlitz3.ab2@27215>   MOVE.l destpointer,a4
00036460 <AmiBlitz3.ab2@27216>   CMP.l #-1,bssstart
00036464 <AmiBlitz3.ab2@27217>   BNE 'lnf1
0003646E <AmiBlitz3.ab2@27218>   CMP.l #-1,chipstart
00036472 <AmiBlitz3.ab2@27219>   BNE 'lnf1
00036478 <AmiBlitz3.ab2@27220>   TST.w dontwrite
0003647C <AmiBlitz3.ab2@27221>   BNE 'lnf1
00036482 <AmiBlitz3.ab2@27222>   MOVE.w #$4e71,-2(a4)
00036488 <AmiBlitz3.ab2@27225>   TST.b bssmode
0003648C <AmiBlitz3.ab2@27226>   BEQ 'l10
00036496 <AmiBlitz3.ab2@27227>   MOVE.l destpointer,bssend
0003649C <AmiBlitz3.ab2@27228>   CLR.b bssmode
000364A6 <AmiBlitz3.ab2@27233>   CMP.l #-1,chipstart
000364AA <AmiBlitz3.ab2@27234>   BEQ 'l11
000364B0 <AmiBlitz3.ab2@27235>   MOVE.l #erro1t,-(a7)
000364B6 <AmiBlitz3.ab2@27236> JMP handle_compileerror
000364C0 <AmiBlitz3.ab2@27239>   MOVE.l destpointer,chipstart
000364C8 <AmiBlitz3.ab2@27240>   MOVE.b #1,chipmode
000364CE <AmiBlitz3.ab2@27243>   JSR get1bytemain
000364D0 <AmiBlitz3.ab2@27244> RTS
000364FA <AmiBlitz3.ab2@27248>   !basic
0003650C <AmiBlitz3.ab2@27258>   i.l = Peek.w(?ininclude)
00036532 <AmiBlitz3.ab2@27259>   If i>=0 AND i<#maxincludes
00036564 <AmiBlitz3.ab2@27260>     incdim (i) = Peek.s(?includetemp2)
0003657E <AmiBlitz3.ab2@27261>     incline(i) = Peek.l(?includeline)
00036588 <AmiBlitz3.ab2@27263>     If CLIMode
00036636 <AmiBlitz3.ab2@27264>       If cli_verbose>=2 Then NPrint "  -> Compiling ",incdim(i),"..."
00036654 <AmiBlitz3.ab2@27268>   !asm
00036656 <AmiBlitz3.ab2@27269> RTS
00036680 <AmiBlitz3.ab2@27273>   !basic
00036692 <AmiBlitz3.ab2@27274>   i.l = Peek.w(?ininclude)
000366B8 <AmiBlitz3.ab2@27275>   If i>=0 AND i<#maxincludes
000366E8 <AmiBlitz3.ab2@27276>     incdim (i) = ""
000366FC <AmiBlitz3.ab2@27277>     incline(i) = 0
00036734 <AmiBlitz3.ab2@27278>     If i>0 Then Poke.l (?includeline),incline(i-1)+1
00036752 <AmiBlitz3.ab2@27280>   !asm
00036754 <AmiBlitz3.ab2@27281> RTS
0003675A <AmiBlitz3.ab2@27285>   LEA replacedat,a0
0003675E <AmiBlitz3.ab2@27286>   Dc.w $3181,$0A00                                         ;MOVE.w d1,0(a0,d0.l*2)
00036760 <AmiBlitz3.ab2@27287> RTS
00036766 <AmiBlitz3.ab2@27291>   TST.b fpu
0003676A <AmiBlitz3.ab2@27292>   BEQ 'l1
00036774 <AmiBlitz3.ab2@27295>   MOVE.l destpointer,newinitaddr
0003677A <AmiBlitz3.ab2@27296>   JSR writeword
00036780 <AmiBlitz3.ab2@27297>   JSR writelong
00036782 <AmiBlitz3.ab2@27298> RTS
00036784 <AmiBlitz3.ab2@27303>   TST.b (a5)
00036788 <AmiBlitz3.ab2@27304>    BEQ.s 'll20
0003678C <AmiBlitz3.ab2@27305>   CMP.b #$20,(a5)
00036790 <AmiBlitz3.ab2@27306>    BNE.s 'll10
00036792 <AmiBlitz3.ab2@27307>   ADDQ.l #1,a5
00036796 <AmiBlitz3.ab2@27308> BRA.s 'll21
0003679A <AmiBlitz3.ab2@27311>   CMP.b #";",(a5)
0003679E <AmiBlitz3.ab2@27312>   BNE.s 'll20
000367A0 <AmiBlitz3.ab2@27315>   TST.b (a5)+
000367A4 <AmiBlitz3.ab2@27316>   BEQ.s 'll23
000367A8 <AmiBlitz3.ab2@27317> BRA.s 'll25
000367AA <AmiBlitz3.ab2@27320>   SUBQ.l #1,a5
000367AC <AmiBlitz3.ab2@27323> RTS
000367B0 <AmiBlitz3.ab2@27327>   MOVEM.l a2/d2,-(a7)
000367B2 <AmiBlitz3.ab2@27328>   MOVEQ #0,d2
000367B8 <AmiBlitz3.ab2@27329>   LEA ptr_parameterstore,a0
000367BE <AmiBlitz3.ab2@27330>   LEA chartab,a2
000367C0 <AmiBlitz3.ab2@27333>   MOVE.b (a5),d0
000367C4 <AmiBlitz3.ab2@27334>   TST.b 0(a2,d0)
000367C8 <AmiBlitz3.ab2@27335>   BNE 'l10
000367CA <AmiBlitz3.ab2@27336>   ADDQ.l #1,a5
000367CC <AmiBlitz3.ab2@27337>   MOVE.b d0,(a0)+
000367CE <AmiBlitz3.ab2@27338>   ADDQ.l #1,d2
000367D2 <AmiBlitz3.ab2@27339> BRA fc2
000367D4 <AmiBlitz3.ab2@27342>   CLR.b (a0)+
000367DA <AmiBlitz3.ab2@27343>   JSR findlabel2
000367DC <AmiBlitz3.ab2@27344>   MOVE.l a2,a0
000367E0 <AmiBlitz3.ab2@27345>   MOVEM.l (a7)+,a2/d2
000367E2 <AmiBlitz3.ab2@27346> RTS
000367E4 <AmiBlitz3.ab2@27350>   TST.l d0
000367E8 <AmiBlitz3.ab2@27351>   BNE 'l10
000367EE <AmiBlitz3.ab2@27352>     MOVE.l #syntax_,-(a7)
000367F4 <AmiBlitz3.ab2@27353> JMP handle_compileerror
000367FA <AmiBlitz3.ab2@27356>   CMP.l #1,d0
000367FE <AmiBlitz3.ab2@27357>   BNE 'l20
00036804 <AmiBlitz3.ab2@27358>     MOVE.l #overflow,-(a7)
0003680A <AmiBlitz3.ab2@27359> JMP handle_compileerror
0003680C <AmiBlitz3.ab2@27362>   ADD.l a2,d0
0003680E <AmiBlitz3.ab2@27363>   MOVE.l d0,-(a7)
00036814 <AmiBlitz3.ab2@27364> JMP handle_compileerror
0003681A <AmiBlitz3.ab2@27368>   JMP _return
00036820 <AmiBlitz3.ab2@27369>   JMP _return
00036826 <AmiBlitz3.ab2@27370>   JMP _return
0003682C <AmiBlitz3.ab2@27371>   JMP _return
00036832 <AmiBlitz3.ab2@27372>   JMP _return
00036838 <AmiBlitz3.ab2@27373>   JMP _return
0003683E <AmiBlitz3.ab2@27374>   JMP _return
00036844 <AmiBlitz3.ab2@27375>   JMP _return
0003684A <AmiBlitz3.ab2@27376>   JMP _return
00036850 <AmiBlitz3.ab2@27377>   JMP _return
00036856 <AmiBlitz3.ab2@27378>   JMP Atokejsr
0003685C <AmiBlitz3.ab2@27379>   JMP writeinit
00036862 <AmiBlitz3.ab2@27380>   JMP macroexecute
00036868 <AmiBlitz3.ab2@27381>   JMP findnext
0003686E <AmiBlitz3.ab2@27382>   JMP replacelib
00036874 <AmiBlitz3.ab2@27383>   JMP findconstant2
0003687A <AmiBlitz3.ab2@27384>   JMP findchar                                             ;char in d1
00036880 <AmiBlitz3.ab2@27385>   JMP stripspaces
00036886 <AmiBlitz3.ab2@27386>   JMP calc                                                 ;d0 varmode
0003688C <AmiBlitz3.ab2@27387>   JMP error
00036892 <AmiBlitz3.ab2@27388>   JMP writelong                                            ;d1 value
00036898 <AmiBlitz3.ab2@27389>   JMP writeword                                            ;d1 value
0003689E <AmiBlitz3.ab2@27390>   JMP writebyte                                            ;d1 value
000368A4 <AmiBlitz3.ab2@27391> JMP exit
000368A8 <AmiBlitz3.ab2@27395>   destpointer:    Ds.l 1                                ;pc org source      ;Ds.w 1
000368AA <AmiBlitz3.ab2@27398>   fast            Dc.w 0
000368AC <AmiBlitz3.ab2@27399>   fpu             Dc.w 0
000368AE <AmiBlitz3.ab2@27400>   newsyntax       Dc.w 0
000368AF <AmiBlitz3.ab2@27402>   optistring      Dc.b 0
000368B0 <AmiBlitz3.ab2@27403>   optistring2     Dc.b 0
000368B1 <AmiBlitz3.ab2@27404>   optiarray       Dc.b 0
000368B2 <AmiBlitz3.ab2@27405>   quickadd        Dc.b 0
000368B4 <AmiBlitz3.ab2@27406>   newmode         Dc.w 0
000368B6 <AmiBlitz3.ab2@27407>   mode            Dc.w 0
000368B8 <AmiBlitz3.ab2@27408>   string1         Dc.w 0
000368BA <AmiBlitz3.ab2@27409>   load_var_size   Dc.w 0
000368BC <AmiBlitz3.ab2@27410>   load_var_reg    Dc.w 0
000368C0 <AmiBlitz3.ab2@27411>   load_var_addr   Dc.l 0
000368C2 <AmiBlitz3.ab2@27412>   imm_size        Dc.w 0
000368C4 <AmiBlitz3.ab2@27413>   imm_reg         Dc.w 0
000368C8 <AmiBlitz3.ab2@27414>   imm_addr        Dc.l 0
000368C9 <AmiBlitz3.ab2@27415>   iee             Dc.b 0
000368CA <AmiBlitz3.ab2@27416>   _dcb            Dc.b 0
000368CE <AmiBlitz3.ab2@27417>   nohunkoffset    Dc.l 0
000368D2 <AmiBlitz3.ab2@27420> teddata:        Dc.l tokens
000368D6 <AmiBlitz3.ab2@27421>                 Dc.l 0 ;compilermenu_entries               ; NOT used anymore
000368DA <AmiBlitz3.ab2@27422>                 Dc.l read_xtrafile
000368DE <AmiBlitz3.ab2@27423>                 Dc.l write_xtrafile
000368E2 <AmiBlitz3.ab2@27424>                 Dc.l call_menuentry                        ; compile AND RUN ?
000368E6 <AmiBlitz3.ab2@27425>                 Dc.l 0
000368EA <AmiBlitz3.ab2@27426>                 Dc.b ":",34,".;"
000368EE <AmiBlitz3.ab2@27427>                 Dc.l "NEW1"
000368F2 <AmiBlitz3.ab2@27428>                 Dc.l newtypebase
000368F6 <AmiBlitz3.ab2@27429> realconstbase:  Dc.l labelbase
000368FA <AmiBlitz3.ab2@27430> deflib          Dc.l 0
000368FE <AmiBlitz3.ab2@27431> incd            Dc.l 0
00036902 <AmiBlitz3.ab2@27432>                 Dc.l 0
00036906 <AmiBlitz3.ab2@27433>                 Dc.l 0
0003690A <AmiBlitz3.ab2@27434>                 Dc.l 0
0003690C <AmiBlitz3.ab2@27435> _return         RTS
0003690D <AmiBlitz3.ab2@27436>                 Dc.b 0
00036D0D <AmiBlitz3.ab2@27437> chartab2        Ds.l 256
00036D11 <AmiBlitz3.ab2@27438> codeend         Dc.l 0
00036D15 <AmiBlitz3.ab2@27439> hunkoffsetnum   Dc.l 0
00036D19 <AmiBlitz3.ab2@27440> chipsize        Dc.l 0
00036D1D <AmiBlitz3.ab2@27441> bsssize         Dc.l 0
00036D21 <AmiBlitz3.ab2@27442> bssstart        Dc.l -1
00036D25 <AmiBlitz3.ab2@27443> bssend          Dc.l -1
00036D29 <AmiBlitz3.ab2@27444> chipstart       Dc.l -1
00036D2D <AmiBlitz3.ab2@27445> chipend         Dc.l -1
00036D2E <AmiBlitz3.ab2@27446> bssmode         Dc.b 0
00036D2F <AmiBlitz3.ab2@27447> chipmode        Dc.b 0
00036D30 <AmiBlitz3.ab2@27448> newhunk         Dc.b 0
00036D34 <AmiBlitz3.ab2@27449> bssnum          Dc.l 0
00036D38 <AmiBlitz3.ab2@27450> chipnum         Dc.l 0
00036D3C <AmiBlitz3.ab2@27451> lastinstruction Dc.l 0
00036D40 <AmiBlitz3.ab2@27452> lastinstructionaddr Dc.l 0
00036D54 <AmiBlitz3.ab2@27453> hunkbegin       Dc.l $03F3,$00,$02,$00,$01
00036D58 <AmiBlitz3.ab2@27454> tstsize1b:      Ds.l 1
00036D5C <AmiBlitz3.ab2@27455> bsssize2        Dc.l 1
00036D60 <AmiBlitz3.ab2@27456>                 Dc.l $03E9
00036D64 <AmiBlitz3.ab2@27457> tstsize2b:      Dc.l $100
00036D78 <AmiBlitz3.ab2@27458> hunkbegin2      Dc.l $03F3,$00,$03,$00,$02
00036D7C <AmiBlitz3.ab2@27459> tstsize1c:      Ds.l 1
00036D80 <AmiBlitz3.ab2@27460> bsssize3        Dc.l 1
00036D84 <AmiBlitz3.ab2@27461> chipsize2       Dc.l 1
00036D88 <AmiBlitz3.ab2@27462>                 Dc.l $3e9
00036D8C <AmiBlitz3.ab2@27463> tstsize2c       Dc.l 0
00036D9C <AmiBlitz3.ab2@27464> hunkend         Dc.l $3f2,$3eb,0,$3f2
00036DAC <AmiBlitz3.ab2@27465> hunkend2        Dc.l $3f2,$3ea,0,$3f2
00036DB3 <AmiBlitz3.ab2@27466> strcpy          Dc.b "strcpy",0
00036DBA <AmiBlitz3.ab2@27467> strcmp          Dc.b "strcmp",0
00036DC1 <AmiBlitz3.ab2@27468> strvar          Dc.b "strvar",0
00036DC6 <AmiBlitz3.ab2@27469> qmul            Dc.b "qmul",0
00036DCB <AmiBlitz3.ab2@27470> qdiv            Dc.b "qdiv",0
00036DD2 <AmiBlitz3.ab2@27471> _MaxLen         Dc.b "maxlen",0
00036DD7 <AmiBlitz3.ab2@27472> notf            Dc.b "????",0
00036DFA <AmiBlitz3.ab2@27474> errtext         Dc.b "only reg addressing Mode supported",0
00036E24 <AmiBlitz3.ab2@27475> fpuerr          Dc.b "Instruction not yet supported by 68K FPU ",0
00036E66 <AmiBlitz3.ab2@27476> cmplxerr        Dc.b "Formula too complex for 68K FPU or too much regload register used",0 : Even
00036E68 <AmiBlitz3.ab2@27477> peeksize        Dc.w 0
00036E6C <AmiBlitz3.ab2@27479> mainstart       Dc.l 0
00036E6D <AmiBlitz3.ab2@27481> infunctioncode  Dc.b 0
00036E6F <AmiBlitz3.ab2@27482> regnumstore     Dc.w 0
00036E9C <AmiBlitz3.ab2@27483>                 Dc.b "$VER: AmiBlitz3 \\__VER_MAJOR.\\__VER_MINOR (\\__DATE_GER__) Build \\__VER_PATCH.\\__VER_BUILD",0 : Even
00036EA4 <AmiBlitz3.ab2@27484> testcode        Dc.b "print i",0
00036F08 <AmiBlitz3.ab2@27485>                 Ds.b 100
00036F16 <AmiBlitz3.ab2@27486> devo            Dc.b "developobject",0 : Even
00036F28 <AmiBlitz3.ab2@27487> autostorename   Dc.b "__autoconstantnum",0
00036F32 <AmiBlitz3.ab2@27488> _include        Dc.b "__include",0
00036F3A <AmiBlitz3.ab2@27489> _debug          Dc.b "__debug",0
00036F3E <AmiBlitz3.ab2@27490> unusedfunc      Dc.l 0
00036F40 <AmiBlitz3.ab2@27494> MOVE.l a0,d0
00036F6A <AmiBlitz3.ab2@27495> !basic
00036F6E <AmiBlitz3.ab2@27496> *olderror.l= PutD0
00036F96 <AmiBlitz3.ab2@27497> error$=Peek.s(*olderror)
00036FDC <AmiBlitz3.ab2@27498> error$=error$+"\\nPossible wrong Code begin here: "
00036FF0 <AmiBlitz3.ab2@27499>         If Peek.l (?beforeparameterfetch)
00037006 <AmiBlitz3.ab2@27500>           MaxLen detokenline.s = 65536
00037048 <AmiBlitz3.ab2@27501>          !ComData_GetL{comPtr_PreProcessor,include_preprocessor}
00037058 <AmiBlitz3.ab2@27502>          *tn.preprocessor = Peek.l(?include_preprocessor)
00037082 <AmiBlitz3.ab2@27503>           written.l = preproc_DetokenizeLine{*tn,Peek.l (?beforeparameterfetch),&detokenline}
000370AA <AmiBlitz3.ab2@27504>           If written>0 Then Poke.b &detokenline+written,0
000370D4 <AmiBlitz3.ab2@27505>           sourceLineText.s = Peek.s(&detokenline)
000370DA <AmiBlitz3.ab2@27506>         Else
00037102 <AmiBlitz3.ab2@27507>           sourceLineText = "NULL"
00037154 <AmiBlitz3.ab2@27509> error$=error$+sourceLineText
0003715A <AmiBlitz3.ab2@27510> GetD0 &error$
00037178 <AmiBlitz3.ab2@27511> !asm
0003717A <AmiBlitz3.ab2@27512> MOVE.l d0,a0
0003717C <AmiBlitz3.ab2@27513> RTS
0003717E <AmiBlitz3.ab2@27517>   MOVE.l a0,-(a7)
00037180 <AmiBlitz3.ab2@27518>   MOVE.l a0,d0
00037182 <AmiBlitz3.ab2@27519>   MOVE.l a5,a0                                             ;macro title
000371AC <AmiBlitz3.ab2@27520>   !basic
000371B0 <AmiBlitz3.ab2@27521>   i = PutD0
000371B2 <AmiBlitz3.ab2@27522>   MOVEQ #20,d0
000371B4 <AmiBlitz3.ab2@27525>     MOVE.b -(a0),d1
000371B8 <AmiBlitz3.ab2@27526>     BEQ 'l1
000371BC <AmiBlitz3.ab2@27527>     CMP.b #":",d1
000371C0 <AmiBlitz3.ab2@27528>     BEQ 'l1
000371C2 <AmiBlitz3.ab2@27529>     SUBQ.l #1,d0
000371C6 <AmiBlitz3.ab2@27530>     BNE 'l2
000371C8 <AmiBlitz3.ab2@27533>   ADDQ #1,a0
000371CA <AmiBlitz3.ab2@27534>   MOVE.l a0,d0
000371CE <AmiBlitz3.ab2@27535>   i2.l = PutD0
000371EA <AmiBlitz3.ab2@27536>   If Peek.w (?ininclude)>0
00037244 <AmiBlitz3.ab2@27537>     Poke.s (?includetemp2),incdim(Peek.w(?ininclude)-1)
00037254 <AmiBlitz3.ab2@27538>     errorline.l = Peek.l(?includeline);-1
0003727C <AmiBlitz3.ab2@27539>     Poke.l ?compilelinecounter,Peek.l(?includeline) - 1
000372A6 <AmiBlitz3.ab2@27540>     errorfile.s = Peek.s(?includetemp2)
000372AC <AmiBlitz3.ab2@27541>   Else
000372E4 <AmiBlitz3.ab2@27542>     Poke.s (?includetemp2),Peek.s(?ptr_parameterstore)
000372FA <AmiBlitz3.ab2@27543>     errorline.l = Peek.l(?compilelinecounter) + 1
0003732E <AmiBlitz3.ab2@27544>     errorfile.s = cli_sourcefile
00037338 <AmiBlitz3.ab2@27547>   If i
000373DC <AmiBlitz3.ab2@27548>     errortext.s = !TRANS{Replace$(Peek.s(i),"\\0a","\n")}
000373E2 <AmiBlitz3.ab2@27549>   Else
0003740A <AmiBlitz3.ab2@27550>     errortext.s = "???"
0003757C <AmiBlitz3.ab2@27553>   NPrint "\\1b[1m",!TRANS{"Compiler Error"}," <",errorfile,"@",errorline,">\\1b[0m ",errortext
0003759A <AmiBlitz3.ab2@27557>   !asm
0003759C <AmiBlitz3.ab2@27558>   MOVE.l (a7)+,a0
0003759E <AmiBlitz3.ab2@27559> RTS
000375A0 <AmiBlitz3.ab2@27563>   MOVE.l a0,-(a7)
000375A2 <AmiBlitz3.ab2@27564>   MOVE.l a0,d0
000375A4 <AmiBlitz3.ab2@27565>   MOVE.l a5,a0                                             ;macro title
000375CE <AmiBlitz3.ab2@27566>   !basic
000375D2 <AmiBlitz3.ab2@27567>   i = PutD0
000375D4 <AmiBlitz3.ab2@27568>   MOVEQ #20,d0
000375D6 <AmiBlitz3.ab2@27571>     MOVE.b -(a0),d1
000375DA <AmiBlitz3.ab2@27572>     BEQ 'l1
000375DE <AmiBlitz3.ab2@27573>     CMP.b #":",d1
000375E2 <AmiBlitz3.ab2@27574>     BEQ 'l1
000375E4 <AmiBlitz3.ab2@27575>     SUBQ.l #1,d0
000375E8 <AmiBlitz3.ab2@27576>     BNE 'l2
000375EA <AmiBlitz3.ab2@27579>   ADDQ #1,a0
000375EC <AmiBlitz3.ab2@27580>   MOVE.l a0,d0
000375F0 <AmiBlitz3.ab2@27581>   i2.l = PutD0
00037674 <AmiBlitz3.ab2@27582>   fid.l = file_Open{dos_AddPart{my_systemdir$,"ab_compileerror.txt"},#file_forcewrite}
00037688 <AmiBlitz3.ab2@27583>   If fid <> -1
000376A4 <AmiBlitz3.ab2@27584>     If Peek.w (?ininclude)>0
000376FE <AmiBlitz3.ab2@27585>       Poke$(?includetemp2),incdim(Peek.w(?ininclude)-1)
00037704 <AmiBlitz3.ab2@27586>     Else
00037730 <AmiBlitz3.ab2@27587>       Poke$(?includetemp2),""
0003775A <AmiBlitz3.ab2@27589>     a$ = Peek$(?includetemp2)
000377CC <AmiBlitz3.ab2@27590>     x$ = Replace$(Peek$(i),"\\0a","\n")
000377FE <AmiBlitz3.ab2@27591>     file_WriteLine{fid,x$}
00037848 <AmiBlitz3.ab2@27592>     file_WriteLine{fid,Str$(Peek.l(?compilelinecounter) + 1)}
00037874 <AmiBlitz3.ab2@27593>     If a$
000378A6 <AmiBlitz3.ab2@27594>       file_WriteLine{fid,a$}
000378F0 <AmiBlitz3.ab2@27595>       file_WriteLine{fid,Str$(Peek.l(?includeline)-1)}
00037918 <AmiBlitz3.ab2@27596>       Poke.l ?compilelinecounter,Peek.l(?includeline) - 1
0003791E <AmiBlitz3.ab2@27597>     Else
00037944 <AmiBlitz3.ab2@27598>       file_WriteLine{fid,"none"}
00037974 <AmiBlitz3.ab2@27600>     file_WriteLine{fid,Peek$(i2)}
000379CA <AmiBlitz3.ab2@27601>     file_WriteLine{fid,Str$(Peek.l(?globallinecount))+" line(s) compiled"}
00037A14 <AmiBlitz3.ab2@27602>     file_WriteLine{fid,Hex$(Peek.w(?globalvarpointer))+" global var base"}
00037A1E <AmiBlitz3.ab2@27603>     file_Close{fid}
00037A3C <AmiBlitz3.ab2@27605>   !asm
00037A3E <AmiBlitz3.ab2@27606>   MOVE.l (a7)+,a0
00037A40 <AmiBlitz3.ab2@27607> RTS
00037A6A <AmiBlitz3.ab2@27611>   !basic
00037A6E <AmiBlitz3.ab2@27612>   progress.l     = PutD0
00037A80 <AmiBlitz3.ab2@27613>   total.l        = Peek.w(?progressbar_width)
00037A9E <AmiBlitz3.ab2@27614>   calcpro        = (progress * 100) / total +1
00037AB0 <AmiBlitz3.ab2@27615>   pass.l         = Peek.w(?pass)
00037AC2 <AmiBlitz3.ab2@27616>   typ.l          = Peek.w(?compiler_job)
00037AE0 <AmiBlitz3.ab2@27619> If (pass><pass_old OR typ><typ_old)
00037AE6 <AmiBlitz3.ab2@27620>     pass_old = pass
00037AEC <AmiBlitz3.ab2@27621>     typ_old  = typ
00037AF2 <AmiBlitz3.ab2@27622>     update_comstatus_gui = True
00037B04 <AmiBlitz3.ab2@27623>     If typ=0
00037BE4 <AmiBlitz3.ab2@27624>       comstatusstr = !TRANS{"Pass"}+" "+Str$(pass)+": "+!TRANS{"Compiling Sources..."}
00037BEC <AmiBlitz3.ab2@27625>       calcpro = 0  ; set gauge to 0
00037BFE <AmiBlitz3.ab2@27627>     If typ=1
00037CDE <AmiBlitz3.ab2@27628>       comstatusstr = !TRANS{"Pass"}+" "+Str$(pass)+": "+!TRANS{"Building Executable..."}
00037CE6 <AmiBlitz3.ab2@27629>       calcpro = 0  ; set gauge to 0
00037D3C <AmiBlitz3.ab2@27631>     If cli_verbose>=2 Then NPrint comstatusstr
00037D4A <AmiBlitz3.ab2@27634>   If (calcpro >< calcpro_old)
00037D9E <AmiBlitz3.ab2@27635>     If cli_verbose>=3 Then NPrint calcpro,"% compiled..."
00037DA4 <AmiBlitz3.ab2@27636>     calcpro_old = calcpro
00037DAA <AmiBlitz3.ab2@27637>     update_comstatus_gui = True
00037DC4 <AmiBlitz3.ab2@27640>   If update_comstatus_gui = True                                     ; check if a update of the gui nessecary
00037DE2 <AmiBlitz3.ab2@27641>     !asm
00037E14 <AmiBlitz3.ab2@27642> 
00037E3E <AmiBlitz3.ab2@27643>     !basic
00037E44 <AmiBlitz3.ab2@27644>     update_comstatus_gui  = False ; because we update the gui
00037E62 <AmiBlitz3.ab2@27646>   !asm
00037E64 <AmiBlitz3.ab2@27647> RTS
00037E6A <AmiBlitz3.ab2@27652>   MOVE.w maxobject_pos,D5                                  ;max objects 1. visible
00037E70 <AmiBlitz3.ab2@27653>   LEA maxobjects_value,A3                                  ;current value
00037E76 <AmiBlitz3.ab2@27654>   MOVEA.l libpointer,A2
00037E7A <AmiBlitz3.ab2@27657>   CMPA.w #$0,A2
00037E7E <AmiBlitz3.ab2@27658>   BEQ.w menu4c__igotb
00037E80 <AmiBlitz3.ab2@27659>   MOVEA.l A2,A1
00037E84 <AmiBlitz3.ab2@27660>   ADDA.l $12(A1),A1
00037E88 <AmiBlitz3.ab2@27661>   TST.w -$2(A1)
00037E8C <AmiBlitz3.ab2@27662>   BEQ.w JL_0_FFF6b
00037E8E <AmiBlitz3.ab2@27663>   SUBQ.w #1,D5
00037E92 <AmiBlitz3.ab2@27664>   BMI.w JL_0_FFFCb
00037E94 <AmiBlitz3.ab2@27667>   MOVEA.l (A2),A2
00037E98 <AmiBlitz3.ab2@27668> BRA.w JL_0_FFDAb
00037E9C <AmiBlitz3.ab2@27671>   MOVE.w (A3),-$4(A1)
00037E9E <AmiBlitz3.ab2@27674> RTS
00037EA4 <AmiBlitz3.ab2@27678>   MOVE.w debugnest,d0
00037EAA <AmiBlitz3.ab2@27679>   LEA storedebugmode, a0
00037EB2 <AmiBlitz3.ab2@27680>   MOVE.b 0(a0,d0.w),debugmode
00037EB8 <AmiBlitz3.ab2@27681>   TST.w debugnest
00037EBC <AmiBlitz3.ab2@27682>   BEQ JUMP_unpairrunerrs
00037EC2 <AmiBlitz3.ab2@27683>   SUBQ.w #1,debugnest
00037EC4 <AmiBlitz3.ab2@27684> RTS
00037ECA <AmiBlitz3.ab2@27687> JMP runerrsoverflow
00037ED0 <AmiBlitz3.ab2@27690> JMP unpairrunerrs
00037ED8 <AmiBlitz3.ab2@27694>   BCHG #$7,use_debugger
00037EE0 <AmiBlitz3.ab2@27696>   BTST #$7,use_debugger
00037EE4 <AmiBlitz3.ab2@27697>   BNE 'debugon
00037EEA <AmiBlitz3.ab2@27698>   CLR.w debugmode
00037EEE <AmiBlitz3.ab2@27699> BRA.b 'debugoff
00037EF4 <AmiBlitz3.ab2@27702>   SNE debugmode
00037EF6 <AmiBlitz3.ab2@27705>   MOVE.l a0,-(a7)
00037F2E <AmiBlitz3.ab2@27708>   !ComData_SetB{comByte_DebugMode,debugmode}
00037F30 <AmiBlitz3.ab2@27713>   MOVE.l (a7)+,a0
00037F32 <AmiBlitz3.ab2@27714> RTS
00037F3A <AmiBlitz3.ab2@27719>   BTST #$7,use_debugger
00037F3E <AmiBlitz3.ab2@27720>   BNE 'debugon
00037F44 <AmiBlitz3.ab2@27721>   CLR.w debugmode
00037F48 <AmiBlitz3.ab2@27722> BRA.b 'debugoff
00037F4E <AmiBlitz3.ab2@27725>   SNE debugmode
00037F50 <AmiBlitz3.ab2@27728> RTS
00037F56 <AmiBlitz3.ab2@27732>   ADDQ.w #1,debugnest
00037F5C <AmiBlitz3.ab2@27733>   MOVE.w debugnest,d0
00037F60 <AmiBlitz3.ab2@27734>   CMP.w #18,d0
00037F64 <AmiBlitz3.ab2@27735>    BGE JUMP_runerrsoverflow
00037F6A <AmiBlitz3.ab2@27736>   LEA storedebugmode, a0
00037F72 <AmiBlitz3.ab2@27737>   MOVE.b debugmode,0( a0,d0.w)
00037F78 <AmiBlitz3.ab2@27740>   SF debugmode
00037F7A <AmiBlitz3.ab2@27741> RTS
00037FFA <AmiBlitz3.ab2@27744> usedpath:  Ds.l 32
00037FFE <AmiBlitz3.ab2@27748>   BEQ.w JUMP_syntaxerr
00038004 <AmiBlitz3.ab2@27749>   LEA lastpath,A0
00038008 <AmiBlitz3.ab2@27750>   MOVEM.l a0-a1/d0,-(a7)
0003800E <AmiBlitz3.ab2@27751>   LEA lastpath2,a1
00038010 <AmiBlitz3.ab2@27754>     MOVE.b (a0)+,(a1)+
00038014 <AmiBlitz3.ab2@27755>   BNE 'l2
00038018 <AmiBlitz3.ab2@27756>   MOVEM.l (a7)+,a0-a1/d0
0003801C <AmiBlitz3.ab2@27757>   LEA usedpath(PC),A0
00038020 <AmiBlitz3.ab2@27758>   MOVEM.l a0-a1/d0,-(a7)
00038026 <AmiBlitz3.ab2@27759>   LEA lastpath,a1
00038028 <AmiBlitz3.ab2@27762>     MOVE.b (a0)+,(a1)+
0003802C <AmiBlitz3.ab2@27763>   BNE 'l1
00038030 <AmiBlitz3.ab2@27764>   MOVEM.l (a7)+,a0-a1/d0
00038032 <AmiBlitz3.ab2@27767>   TST.w D0
00038036 <AmiBlitz3.ab2@27768>    BMI.w JUMP_syntaxerr
00038038 <AmiBlitz3.ab2@27769>   MOVE.b D0,(A0)+
0003803C <AmiBlitz3.ab2@27770>   BSR.w JUMP_get1bytemain
00038040 <AmiBlitz3.ab2@27771>    BNE.w JL_0_4AA8
00038044 <AmiBlitz3.ab2@27772>   MOVE.b #$2,(A0)
00038046 <AmiBlitz3.ab2@27773> RTS
0003804A <AmiBlitz3.ab2@27777>   BEQ.w JUMP_syntaxerr
00038050 <AmiBlitz3.ab2@27778>   LEA path2,A0
00038052 <AmiBlitz3.ab2@27788>   TST.w D0
00038056 <AmiBlitz3.ab2@27789>    BMI.w JUMP_syntaxerr
00038058 <AmiBlitz3.ab2@27790>   MOVE.b D0,(A0)+
0003805C <AmiBlitz3.ab2@27791>   BSR.w JUMP_get1bytemain
00038060 <AmiBlitz3.ab2@27792>    BNE.w JL_0_4AA8b
00038064 <AmiBlitz3.ab2@27793>   MOVE.b #$2,(A0)
00038066 <AmiBlitz3.ab2@27794> RTS
0003806C <AmiBlitz3.ab2@27803> JMP errormsg_reg
00038076 <AmiBlitz3.ab2@27807>   MOVE.l #$f22d6780,fpucodeglobal
00038080 <AmiBlitz3.ab2@27808>   MOVE.l #$f22c6780,fpucodelocal
00038086 <AmiBlitz3.ab2@27809>   LEA regtable,a0
00038090 <AmiBlitz3.ab2@27810>   MOVE.l #7,maxregs
00038092 <AmiBlitz3.ab2@27813>   MOVE.l (a0),d0
00038096 <AmiBlitz3.ab2@27814>   BEQ 'e1
00038098 <AmiBlitz3.ab2@27815>   CLR.l (a0)
0003809C <AmiBlitz3.ab2@27816>   MOVE.w 4(a0),d0
000380A6 <AmiBlitz3.ab2@27817>   MOVE.l fpucodeglobal,fpucode
000380AA <AmiBlitz3.ab2@27818>   TST.w 6(a0)
000380AE <AmiBlitz3.ab2@27819>   BEQ 'glob
000380B8 <AmiBlitz3.ab2@27820>   MOVE.l fpucodelocal,fpucode
000380BE <AmiBlitz3.ab2@27823>   MOVE.l fpucode,d1
000380C4 <AmiBlitz3.ab2@27824>   JSR writelong
000380CE <AmiBlitz3.ab2@27825>   SUB.l #$80,fpucodelocal
000380D8 <AmiBlitz3.ab2@27826>   SUB.l #$80,fpucodeglobal
000380DA <AmiBlitz3.ab2@27827>   MOVE.w d0,d1
000380E0 <AmiBlitz3.ab2@27828>   JSR writeword
000380E2 <AmiBlitz3.ab2@27829>   ADDQ #8,a0
000380E6 <AmiBlitz3.ab2@27830> BRA 'again
000380E8 <AmiBlitz3.ab2@27833> RTS
000380EE <AmiBlitz3.ab2@27840> JMP notypeerr
000380F4 <AmiBlitz3.ab2@27843> JMP illtypeerr
000380FE <AmiBlitz3.ab2@27846>   MOVE.l #$f22d4780,fpucodeglobal
00038108 <AmiBlitz3.ab2@27847>   MOVE.l #$f22c4780,fpucodelocal
0003810E <AmiBlitz3.ab2@27848>   LEA regtable,a0
00038110 <AmiBlitz3.ab2@27849>   TST.l (a0)
00038114 <AmiBlitz3.ab2@27850>    BNE JUMP_errormsg_reg
00038116 <AmiBlitz3.ab2@27851>   MOVE.l d7,-(a7)
00038118 <AmiBlitz3.ab2@27852>   SUBQ.l #1,a5
0003811E <AmiBlitz3.ab2@27855>   JSR getparameter2
00038122 <AmiBlitz3.ab2@27856>   BEQ.w 'nopar
00038128 <AmiBlitz3.ab2@27857>   MOVE.w d0,lastchar
0003812E <AmiBlitz3.ab2@27858>   JSR findvariable
00038132 <AmiBlitz3.ab2@27859>   BNE 'islocal
0003813C <AmiBlitz3.ab2@27860>   MOVE.l fpucodeglobal,fpucode
00038146 <AmiBlitz3.ab2@27861>   MOVE.l #3,maxregs
00038148 <AmiBlitz3.ab2@27862>   MOVEQ #0,d7
00038150 <AmiBlitz3.ab2@27865>   CMP.l #newtype_float,$a(a2)                              ;is float type
00038154 <AmiBlitz3.ab2@27866>    BEQ 'doit
0003815C <AmiBlitz3.ab2@27867>   CMP.l #newtype_double,$a(a2)
00038160 <AmiBlitz3.ab2@27868>    BNE JUMP_illtypeerr
00038166 <AmiBlitz3.ab2@27871>   LEA regtable,a0
00038168 <AmiBlitz3.ab2@27872>   MOVEQ #0,d0
0003816A <AmiBlitz3.ab2@27875>   TST.l (a0)
0003816E <AmiBlitz3.ab2@27876>    BEQ 'store
00038170 <AmiBlitz3.ab2@27877>   ADDQ.l #4,d0
00038172 <AmiBlitz3.ab2@27878>   ADDQ.l #8,a0
00038178 <AmiBlitz3.ab2@27879>   CMP.l #16,d0
0003817C <AmiBlitz3.ab2@27880>    BCS 'loop
00038186 <AmiBlitz3.ab2@27881>   MOVE.l #2,maxregs
0003818C <AmiBlitz3.ab2@27882>   CMP.l #20,d0
00038190 <AmiBlitz3.ab2@27883>    BCS 'loop
0003819A <AmiBlitz3.ab2@27884>   MOVE.l #1,maxregs
000381A0 <AmiBlitz3.ab2@27885>   CMP.l #24,d0
000381A4 <AmiBlitz3.ab2@27886>    BCS 'loop
000381AA <AmiBlitz3.ab2@27887> JMP toovarerr
000381B0 <AmiBlitz3.ab2@27890>   TST.b fpu
000381B4 <AmiBlitz3.ab2@27891>    BEQ 'nofpu
000381B6 <AmiBlitz3.ab2@27892>   MOVE.l a2,(a0)
000381BC <AmiBlitz3.ab2@27893>   MOVE.w 4(a2),4(a0)
000381C0 <AmiBlitz3.ab2@27894>   MOVE.w d7,6(a0)
000381C6 <AmiBlitz3.ab2@27895>   MOVE.l fpucode,d1
000381D0 <AmiBlitz3.ab2@27896>   SUB.l #$80,fpucodeglobal
000381DA <AmiBlitz3.ab2@27897>   SUB.l #$80,fpucodelocal
000381E0 <AmiBlitz3.ab2@27898>   JSR writelong
000381E4 <AmiBlitz3.ab2@27899>   MOVE.w 4(a2),d1
000381EA <AmiBlitz3.ab2@27900>   JSR writeword
000381F0 <AmiBlitz3.ab2@27903>   MOVE.w lastchar,d0
000381F4 <AmiBlitz3.ab2@27904>   CMP.w #":",d0
000381F8 <AmiBlitz3.ab2@27905>    BEQ 'nopar
000381FA <AmiBlitz3.ab2@27906>   TST.w d0
000381FE <AmiBlitz3.ab2@27907>    BEQ 'nopar
00038202 <AmiBlitz3.ab2@27908>   CMP.w #",",d0
00038206 <AmiBlitz3.ab2@27909>   BNE JUMP_syntaxerr
0003820A <AmiBlitz3.ab2@27910> BRA 'l2
0003820C <AmiBlitz3.ab2@27913>    MOVE.l (a7)+,d7
0003820E <AmiBlitz3.ab2@27914> RTS
00038210 <AmiBlitz3.ab2@27917>   MOVEQ #1,d7
00038218 <AmiBlitz3.ab2@27918>   MOVE.b #1,newvariable
0003821E <AmiBlitz3.ab2@27919>   LEA firstlocal,a2
00038224 <AmiBlitz3.ab2@27920>   JSR findvariable
0003822A <AmiBlitz3.ab2@27921>   CLR.b newvariable
00038230 <AmiBlitz3.ab2@27922>   CMP.l #-1,d0
00038234 <AmiBlitz3.ab2@27923>   BEQ.w JUMP_notypeerr2
0003823E <AmiBlitz3.ab2@27924>   MOVE.l fpucodelocal,fpucode
00038242 <AmiBlitz3.ab2@27925> BRA 'go
00038246 <AmiBlitz3.ab2@27928>   CMP.b #".",d0
0003824A <AmiBlitz3.ab2@27929>    BNE 'l1
0003824E <AmiBlitz3.ab2@27930>   BSR JUMP_get1bytemain
00038252 <AmiBlitz3.ab2@27931>   BSR JUMP_get1bytemain
00038256 <AmiBlitz3.ab2@27934>   ORI .b #$20,d0
0003825A <AmiBlitz3.ab2@27935>   CMP.b #"d",d0
0003825E <AmiBlitz3.ab2@27936>    BNE JUMP_illeaerr
00038262 <AmiBlitz3.ab2@27937>   BSR JUMP_get1bytemain
00038266 <AmiBlitz3.ab2@27938>   SUB.b #$30,d0
0003826A <AmiBlitz3.ab2@27939>   CMP.b #$7,d0
0003826E <AmiBlitz3.ab2@27940>    BGT JUMP_syntaxerr
00038272 <AmiBlitz3.ab2@27941>   MOVE.w #$49c0,d1
00038274 <AmiBlitz3.ab2@27942>   ADD.b d0,d1
0003827A <AmiBlitz3.ab2@27943>   JSR writeword
0003827E <AmiBlitz3.ab2@27944>   BSR JUMP_get1bytemain
00038280 <AmiBlitz3.ab2@27945> RTS
00038286 <AmiBlitz3.ab2@27949>   LEA lastpath,a0
0003828A <AmiBlitz3.ab2@27950>   LEA usedpath(PC),A1
0003828C <AmiBlitz3.ab2@27953>     MOVE.b (a0)+,(a1)+
00038290 <AmiBlitz3.ab2@27954>   BNE 'l1
00038296 <AmiBlitz3.ab2@27956>   LEA lastpath2,a0
0003829C <AmiBlitz3.ab2@27957>   LEA lastpath,A1
0003829E <AmiBlitz3.ab2@27960>     MOVE.b (a0)+,(a1)+
000382A2 <AmiBlitz3.ab2@27961>   BNE 'l2
000382A4 <AmiBlitz3.ab2@27962> RTS
000382AA <AmiBlitz3.ab2@27966>   TST.b objectcount
000382AE <AmiBlitz3.ab2@27967>   BEQ 'l2a
000382B4 <AmiBlitz3.ab2@27968> JMP macnesterr
000382BA <AmiBlitz3.ab2@27971>   LEA devo,a0
000382C0 <AmiBlitz3.ab2@27972>   ADDQ.b #1,objectcount
000382C4 <AmiBlitz3.ab2@27973>   MOVEM.l a1/d2,-(a7)
000382CA <AmiBlitz3.ab2@27974>   LEA ptr_parameterstore,a1
000382CC <AmiBlitz3.ab2@27977>     MOVE.b (a0)+,(a1)+
000382D0 <AmiBlitz3.ab2@27978>   BNE 'l1
000382D2 <AmiBlitz3.ab2@27980>   MOVEQ #13,d2
000382D8 <AmiBlitz3.ab2@27981>   JSR findlabel2
000382DC <AmiBlitz3.ab2@27982>   BNE 'd
000382E0 <AmiBlitz3.ab2@27983>   TST.l 8(a2)
000382E4 <AmiBlitz3.ab2@27984>   BEQ 'd
000382EA <AmiBlitz3.ab2@27985>   SUBQ.b #1,objectcount
000382EE <AmiBlitz3.ab2@27986>   MOVEM.l (a7)+,a1/d2
000382F4 <AmiBlitz3.ab2@27987>   JSR skiprest
000382FC <AmiBlitz3.ab2@27988>   MOVE.b #1,developobject
000382FE <AmiBlitz3.ab2@27989> RTS
00038302 <AmiBlitz3.ab2@27992>   MOVEM.l (a7)+,a1/d2
0003830A <AmiBlitz3.ab2@27993>   MOVE.b #1,resdisable
00038310 <AmiBlitz3.ab2@27996>   CLR.b developobject
00038316 <AmiBlitz3.ab2@27997> JMP do_Macro
0003831C <AmiBlitz3.ab2@28001> JMP illeaerr
00038322 <AmiBlitz3.ab2@28005>   CLR.b typecheck
00038328 <AmiBlitz3.ab2@28006>   CLR.b declare
0003832E <AmiBlitz3.ab2@28007>   CLR.b declare2
00038332 <AmiBlitz3.ab2@28008>   SUB.b #$30,d0
00038336 <AmiBlitz3.ab2@28009>   BTST #0,d0
0003833A <AmiBlitz3.ab2@28010>   BEQ 'l1
00038342 <AmiBlitz3.ab2@28011>   MOVE.b #1,declare
00038346 <AmiBlitz3.ab2@28014>   BTST #1,d0
0003834A <AmiBlitz3.ab2@28015>   BEQ 'l2
00038352 <AmiBlitz3.ab2@28016>   MOVE.b #1,declare2
00038356 <AmiBlitz3.ab2@28019>   BTST #2,d0
0003835A <AmiBlitz3.ab2@28020>   BEQ 'l3
00038362 <AmiBlitz3.ab2@28021>   MOVE.b #1,typecheck
00038366 <AmiBlitz3.ab2@28023>   BSR.w JUMP_get1bytemain
00038368 <AmiBlitz3.ab2@28024> RTS
0003836E <AmiBlitz3.ab2@28027> JMP get1bytemain
00038398 <AmiBlitz3.ab2@28031>   !basic
000383B8 <AmiBlitz3.ab2@28033>   FillMem ?residents_table,?residents_table_end-?residents_table,0
000383D6 <AmiBlitz3.ab2@28034>   !asm
000383D8 <AmiBlitz3.ab2@28035> Return
000383DA <AmiBlitz3.ab2@28040>   MOVE.l d2,-(a7)                                          ; D2 -> stack
000383DC <AmiBlitz3.ab2@28041>   ADDQ #1,a5
000383DE <AmiBlitz3.ab2@28042>   MOVE.l a5,-(a7)
00038408 <AmiBlitz3.ab2@28043>   !basic
0003840E <AmiBlitz3.ab2@28044>   MOVE.l (a7)+,d0 : _myD0.l = PutD0
00038418 <AmiBlitz3.ab2@28045>   If _myD0
00038458 <AmiBlitz3.ab2@28046>     newconst$ = UCase$(Peek.s(_myD0))
0003845E <AmiBlitz3.ab2@28047>   Else
0003848C <AmiBlitz3.ab2@28048>     error{"INTERNAL: invalid pointer in check_newconstants!"}
000384B4 <AmiBlitz3.ab2@28049>     nwconst$="xxx"
000384DC <AmiBlitz3.ab2@28051>   condata$ =""
000384EC <AmiBlitz3.ab2@28052>   Poke.b ?skip_bytes,0
00038548 <AmiBlitz3.ab2@28053>   If Left$(newconst$,2) = "__"
000385A2 <AmiBlitz3.ab2@28054>     Select Mid$(newconst$,3,4)
000385C6 <AmiBlitz3.ab2@28056>      Case "DATE"
00038620 <AmiBlitz3.ab2@28057>       Select Mid$(newconst$,3,6)
0003865E <AmiBlitz3.ab2@28058>       Case "DATE__" : DateFormat 1 : Poke.b ?skip_bytes,8
000386A2 <AmiBlitz3.ab2@28059>       Case "DATE_G" : DateFormat 0 : Poke.b ?skip_bytes,12
000386B0 <AmiBlitz3.ab2@28060>       End Select
000386BE <AmiBlitz3.ab2@28061>       i.l=SystemDate
000386E4 <AmiBlitz3.ab2@28062>       condata$ = Date$ (i)
00038762 <AmiBlitz3.ab2@28063>       condata$ = Replace$(condata$,"/",".")
0003878C <AmiBlitz3.ab2@28065>      Case "VER_"
0003879C <AmiBlitz3.ab2@28068>       actual_version.l = Peek.l(?versioninformation)
000387AC <AmiBlitz3.ab2@28069>       actual_build.l   = Peek.l(?number_of_builds)
000387D0 <AmiBlitz3.ab2@28071>       Format ""
0003882A <AmiBlitz3.ab2@28072>       Select Mid$(newconst$,3,9)
0003884E <AmiBlitz3.ab2@28074>        Case "VER_MAJOR"
0003888A <AmiBlitz3.ab2@28075>         condata$ = Str$(actual_version LSR 24)
000388B4 <AmiBlitz3.ab2@28077>        Case "VER_MINOR"
000388F8 <AmiBlitz3.ab2@28078>         condata$ = Str$((actual_version LSL 8) LSR 24)
00038922 <AmiBlitz3.ab2@28080>        Case "VER_PATCH"
00038966 <AmiBlitz3.ab2@28081>         condata$ = Str$((actual_version LSL 16) LSR 24 )
00038990 <AmiBlitz3.ab2@28083>        Case "VER_BUILD"
000389B4 <AmiBlitz3.ab2@28084>         Format ""
000389E8 <AmiBlitz3.ab2@28085>         condata$ = Str$(actual_build)
000389EE <AmiBlitz3.ab2@28087>        Default
00038A16 <AmiBlitz3.ab2@28088>         condata$ = "{unknown compiler constant}"
00038A24 <AmiBlitz3.ab2@28090>       End Select
00038A48 <AmiBlitz3.ab2@28091>       Format ""
00038A58 <AmiBlitz3.ab2@28092>       Poke.b ?skip_bytes,11
00038A82 <AmiBlitz3.ab2@28094>      Case "THIS"
00038ADC <AmiBlitz3.ab2@28095>       Select Mid$(newconst$,3,9)
00038B00 <AmiBlitz3.ab2@28097>        Case "THIS_FUNC"
00038B10 <AmiBlitz3.ab2@28098>         Poke.b ?skip_bytes,15
00038B30 <AmiBlitz3.ab2@28099>         If Peek.l(?currentfunction)<>0
00038B7C <AmiBlitz3.ab2@28100>           condata$ = Peek.s(Peek.l(?currentfunction) + 32 + #funcentry_extend + 1)
00038B82 <AmiBlitz3.ab2@28101>         Else
00038BAA <AmiBlitz3.ab2@28102>           condata$ = "GLOBAL"
00038BD4 <AmiBlitz3.ab2@28105>        Case "THIS_INCL"
00038BE4 <AmiBlitz3.ab2@28106>         Poke.b ?skip_bytes,14
00038C04 <AmiBlitz3.ab2@28107>         If Peek.l(?includetemp2)<>0
00038C52 <AmiBlitz3.ab2@28108>           condata$ = dos_FilePart{Peek$(?includetemp2)}
00038C7C <AmiBlitz3.ab2@28111>        Case "THIS_POIN"
00038C8C <AmiBlitz3.ab2@28112>         Poke.b ?skip_bytes,14
00038CAC <AmiBlitz3.ab2@28113>         If Peek.l(?currentfunction)<>0
00038CDA <AmiBlitz3.ab2@28114>           condata$ = Hex$(Peek.l(?currentfunction))
00038CE8 <AmiBlitz3.ab2@28117>       End Select
00038D12 <AmiBlitz3.ab2@28119>      Case "CODE"
00038D22 <AmiBlitz3.ab2@28120>       Poke.b ?skip_bytes,10
00038D84 <AmiBlitz3.ab2@28121>       If Mid$(newconst$,3,8) = "CODELINE"
00038DC0 <AmiBlitz3.ab2@28122>         condata$ = Str$(Peek.l(?globallinecount))
00038DCE <AmiBlitz3.ab2@28125>     End Select
00038DD4 <AmiBlitz3.ab2@28127>   Else
00038E28 <AmiBlitz3.ab2@28128>     Select Left$(newconst$,1)
00038E4C <AmiBlitz3.ab2@28130>      Case "R"
00038E5C <AmiBlitz3.ab2@28131>       Poke.b ?skip_bytes,3
00038ED4 <AmiBlitz3.ab2@28132>       For i = 1 To Vallong(Mid$(newconst$,2,2))
00038F54 <AmiBlitz3.ab2@28133>         condata$ = condata$ + Mid$(newconst$,4,1)
00038F64 <AmiBlitz3.ab2@28134>       Next
00038F8E <AmiBlitz3.ab2@28136>      Case "N"
00038F9E <AmiBlitz3.ab2@28137>       Poke.b ?skip_bytes,1
00038FC2 <AmiBlitz3.ab2@28138>       condata$ = Chr$(10)
00038FC8 <AmiBlitz3.ab2@28140>      Default
00038FDA <AmiBlitz3.ab2@28141>       char1.b = Peek.b(&newconst$)
00038FF2 <AmiBlitz3.ab2@28142>       char2.b = Peek.b(&newconst$+1)
00038FFE <AmiBlitz3.ab2@28143>       nibble1.l = -1
0003900A <AmiBlitz3.ab2@28144>       nibble2.l = -1
00039048 <AmiBlitz3.ab2@28146>       If (char1>=@"0" AND char1<=@"9") Then nibble1 = char1-@"0"
00039086 <AmiBlitz3.ab2@28147>       If (char2>=@"0" AND char2<=@"9") Then nibble2 = char2-@"0"
000390CA <AmiBlitz3.ab2@28149>       If (char1>=@"a" AND char1<=@"f") Then nibble1 = char1-@"a" + 10
0003910E <AmiBlitz3.ab2@28150>       If (char2>=@"a" AND char2<=@"f") Then nibble2 = char2-@"a" + 10
00039152 <AmiBlitz3.ab2@28152>       If (char1>=@"A" AND char1<=@"F") Then nibble1 = char1-@"A" + 10
00039196 <AmiBlitz3.ab2@28153>       If (char2>=@"A" AND char2<=@"F") Then nibble2 = char2-@"A" + 10
000391BC <AmiBlitz3.ab2@28155>       If nibble1>=0 AND nibble2>=0
000391D2 <AmiBlitz3.ab2@28156>         newchar.l = (nibble1 LSL 4) + (nibble2)
000391F6 <AmiBlitz3.ab2@28157>         condata$ = Chr$(newchar)
00039206 <AmiBlitz3.ab2@28158>         Poke.b ?skip_bytes,2
00039214 <AmiBlitz3.ab2@28161>     End Select
00039274 <AmiBlitz3.ab2@28163>   If condata$ = "" AND Peek.b(?skip_bytes)=0
0003939A <AmiBlitz3.ab2@28164>     !cout{"detected unknown const: " + newconst$}
000393CE <AmiBlitz3.ab2@28165>     condata$ = newconst$
000393E4 <AmiBlitz3.ab2@28168>   GetD0 FLen(condata$)-1                                    ; laenge zielstring -> Stack
000393E6 <AmiBlitz3.ab2@28169>   MOVE.l d0,d2
000393E8 <AmiBlitz3.ab2@28170>   MOVE.l d2,-(a7)
000393EE <AmiBlitz3.ab2@28172>   GetD0 &condata$                                          ; kopieren des neuen Strings in den Zielstring
000393F0 <AmiBlitz3.ab2@28173>   MOVE.l d0,a0
000393F2 <AmiBlitz3.ab2@28176>     MOVE.b (a0)+,d1
000393F8 <AmiBlitz3.ab2@28177>     JSR pokedata1b
000393FC <AmiBlitz3.ab2@28178>  DBF d2,'l1
0003941A <AmiBlitz3.ab2@28180>   !asm
0003941C <AmiBlitz3.ab2@28181>   MOVE.l (a7)+,d0                                          ; laenge Zielstring <- Stack
0003941E <AmiBlitz3.ab2@28182>   MOVE.l (a7)+,d2                                          ; d2 <-Stack
00039420 <AmiBlitz3.ab2@28183>   ADD.l d0,d2                                              ; eingefuegte chars zu D2 dazu
00039426 <AmiBlitz3.ab2@28184>   ADD.l #1,d2
0003942C <AmiBlitz3.ab2@28186>   MOVE.l #0,d0                                             ; a5 um konstantennamen weiterschieben
00039432 <AmiBlitz3.ab2@28187>   MOVE.b skip_bytes,D0
00039434 <AmiBlitz3.ab2@28188>   ADD.l D0,a5
00039436 <AmiBlitz3.ab2@28189> RTS
0003943A <AmiBlitz3.ab2@28264> MOVEM.l a3/d1,-(a7)
00039440 <AmiBlitz3.ab2@28266> CLR.b a4a5store
00039442 <AmiBlitz3.ab2@28267> 'continue: MOVE.b (a3)+,d1
00039446 <AmiBlitz3.ab2@28268> CMP.b #$15,d1
0003944A <AmiBlitz3.ab2@28269> BEQ 'find
0003944E <AmiBlitz3.ab2@28270> CMP.b #$14,d1
00039452 <AmiBlitz3.ab2@28271> BEQ 'find
00039456 <AmiBlitz3.ab2@28272> CMP.b #$ff,d1
0003945A <AmiBlitz3.ab2@28273> BNE 'continue
0003945E <AmiBlitz3.ab2@28274> BRA 'notfind
00039464 <AmiBlitz3.ab2@28276> MOVE.l #$48e7000c,d1                  ; write 68k movem.l a4/a5,-(a7)
0003946A <AmiBlitz3.ab2@28277> JSR writelong
00039472 <AmiBlitz3.ab2@28278> MOVE.b #1,a4a5store
00039476 <AmiBlitz3.ab2@28279> 'notfind: MOVEM.l (a7)+,a3/d1
00039478 <AmiBlitz3.ab2@28280> RTS
0003947E <AmiBlitz3.ab2@28283> TST.b a4a5store
00039482 <AmiBlitz3.ab2@28284> BEQ 'no
00039488 <AmiBlitz3.ab2@28285> MOVE.l #$4cdf3000,d1                  ; write 68k movem.l (a7)+,a4/a5
0003948E <AmiBlitz3.ab2@28286> JSR writelong
00039494 <AmiBlitz3.ab2@28287> CLR.b a4a5store
00039496 <AmiBlitz3.ab2@28288> 'no RTS
00039496 <internal_commands.ab2@1> INCLUDE "internal_commands.ab2"
0003949A <internal_commands.ab2@13> INCLUDE "internal_commands.ab2"
0003949C <internal_commands.ab2@15> INCLUDE "internal_commands.ab2"
000394A4 <internal_commands.ab2@16> INCLUDE "internal_commands.ab2"
000394B0 <internal_commands.ab2@17> INCLUDE "internal_commands.ab2"
000394B4 <internal_commands.ab2@21> INCLUDE "internal_commands.ab2"
000394B6 <internal_commands.ab2@22> INCLUDE "internal_commands.ab2"
000394BA <internal_commands.ab2@23> INCLUDE "internal_commands.ab2"
00039503 <internal_commands.ab2@24> INCLUDE "internal_commands.ab2"
00039504 <internal_commands.ab2@25> INCLUDE "internal_commands.ab2"
00039508 <internal_commands.ab2@28> INCLUDE "internal_commands.ab2"
0003950A <internal_commands.ab2@29> INCLUDE "internal_commands.ab2"
0003950E <internal_commands.ab2@30> INCLUDE "internal_commands.ab2"
0003952A <internal_commands.ab2@31> INCLUDE "internal_commands.ab2"
0003952E <internal_commands.ab2@35> INCLUDE "internal_commands.ab2"
00039530 <internal_commands.ab2@36> INCLUDE "internal_commands.ab2"
00039534 <internal_commands.ab2@37> INCLUDE "internal_commands.ab2"
00039591 <internal_commands.ab2@38> INCLUDE "internal_commands.ab2"
00039592 <internal_commands.ab2@39> INCLUDE "internal_commands.ab2"
00039596 <internal_commands.ab2@42> INCLUDE "internal_commands.ab2"
00039598 <internal_commands.ab2@43> INCLUDE "internal_commands.ab2"
0003959D <internal_commands.ab2@44> INCLUDE "internal_commands.ab2"
000395AD <internal_commands.ab2@45> INCLUDE "internal_commands.ab2"
000395AE <internal_commands.ab2@46> INCLUDE "internal_commands.ab2"
000395B2 <internal_commands.ab2@49> INCLUDE "internal_commands.ab2"
000395B4 <internal_commands.ab2@50> INCLUDE "internal_commands.ab2"
000395BA <internal_commands.ab2@51> INCLUDE "internal_commands.ab2"
000395CA <internal_commands.ab2@52> INCLUDE "internal_commands.ab2"
000395CE <internal_commands.ab2@56> INCLUDE "internal_commands.ab2"
000395D0 <internal_commands.ab2@57> INCLUDE "internal_commands.ab2"
000395D7 <internal_commands.ab2@58> INCLUDE "internal_commands.ab2"
000395D8 <internal_commands.ab2@59> INCLUDE "internal_commands.ab2"
000395DC <internal_commands.ab2@63> INCLUDE "internal_commands.ab2"
000395DE <internal_commands.ab2@64> INCLUDE "internal_commands.ab2"
000395E8 <internal_commands.ab2@65> INCLUDE "internal_commands.ab2"
0003961B <internal_commands.ab2@66> INCLUDE "internal_commands.ab2"
0003961C <internal_commands.ab2@67> INCLUDE "internal_commands.ab2"
00039620 <internal_commands.ab2@70> INCLUDE "internal_commands.ab2"
00039622 <internal_commands.ab2@71> INCLUDE "internal_commands.ab2"
0003962B <internal_commands.ab2@72> INCLUDE "internal_commands.ab2"
00039666 <internal_commands.ab2@73> INCLUDE "internal_commands.ab2"
0003966A <internal_commands.ab2@77> INCLUDE "internal_commands.ab2"
0003966C <internal_commands.ab2@78> INCLUDE "internal_commands.ab2"
00039676 <internal_commands.ab2@79> INCLUDE "internal_commands.ab2"
00039677 <internal_commands.ab2@80> INCLUDE "internal_commands.ab2"
00039678 <internal_commands.ab2@81> INCLUDE "internal_commands.ab2"
0003967C <internal_commands.ab2@84> INCLUDE "internal_commands.ab2"
0003967E <internal_commands.ab2@85> INCLUDE "internal_commands.ab2"
00039681 <internal_commands.ab2@86> INCLUDE "internal_commands.ab2"
00039698 <internal_commands.ab2@87> INCLUDE "internal_commands.ab2"
0003969C <internal_commands.ab2@91> INCLUDE "internal_commands.ab2"
0003969E <internal_commands.ab2@92> INCLUDE "internal_commands.ab2"
000396A4 <internal_commands.ab2@93> INCLUDE "internal_commands.ab2"
000396B1 <internal_commands.ab2@94> INCLUDE "internal_commands.ab2"
000396B2 <internal_commands.ab2@95> INCLUDE "internal_commands.ab2"
000396B6 <internal_commands.ab2@98> INCLUDE "internal_commands.ab2"
000396B8 <internal_commands.ab2@99> INCLUDE "internal_commands.ab2"
000396BE <internal_commands.ab2@100> INCLUDE "internal_commands.ab2"
000396CA <internal_commands.ab2@101> INCLUDE "internal_commands.ab2"
000396CE <internal_commands.ab2@105> INCLUDE "internal_commands.ab2"
000396D0 <internal_commands.ab2@106> INCLUDE "internal_commands.ab2"
000396D7 <internal_commands.ab2@107> INCLUDE "internal_commands.ab2"
000396E4 <internal_commands.ab2@108> INCLUDE "internal_commands.ab2"
000396E8 <internal_commands.ab2@112> INCLUDE "internal_commands.ab2"
000396EA <internal_commands.ab2@113> INCLUDE "internal_commands.ab2"
000396EF <internal_commands.ab2@114> INCLUDE "internal_commands.ab2"
000396FC <internal_commands.ab2@115> INCLUDE "internal_commands.ab2"
00039700 <internal_commands.ab2@119> INCLUDE "internal_commands.ab2"
00039702 <internal_commands.ab2@120> INCLUDE "internal_commands.ab2"
0003970A <internal_commands.ab2@121> INCLUDE "internal_commands.ab2"
0003970B <internal_commands.ab2@122> INCLUDE "internal_commands.ab2"
0003970C <internal_commands.ab2@123> INCLUDE "internal_commands.ab2"
00039710 <internal_commands.ab2@126> INCLUDE "internal_commands.ab2"
00039712 <internal_commands.ab2@127> INCLUDE "internal_commands.ab2"
0003971A <internal_commands.ab2@128> INCLUDE "internal_commands.ab2"
0003971B <internal_commands.ab2@129> INCLUDE "internal_commands.ab2"
0003971C <internal_commands.ab2@130> INCLUDE "internal_commands.ab2"
00039720 <internal_commands.ab2@133> INCLUDE "internal_commands.ab2"
00039722 <internal_commands.ab2@134> INCLUDE "internal_commands.ab2"
0003972B <internal_commands.ab2@135> INCLUDE "internal_commands.ab2"
00039736 <internal_commands.ab2@136> INCLUDE "internal_commands.ab2"
0003973A <internal_commands.ab2@140> INCLUDE "internal_commands.ab2"
0003973C <internal_commands.ab2@141> INCLUDE "internal_commands.ab2"
00039744 <internal_commands.ab2@142> INCLUDE "internal_commands.ab2"
0003974F <internal_commands.ab2@143> INCLUDE "internal_commands.ab2"
00039750 <internal_commands.ab2@144> INCLUDE "internal_commands.ab2"
00039754 <internal_commands.ab2@147> INCLUDE "internal_commands.ab2"
00039756 <internal_commands.ab2@148> INCLUDE "internal_commands.ab2"
0003975D <internal_commands.ab2@149> INCLUDE "internal_commands.ab2"
000397BF <internal_commands.ab2@150> INCLUDE "internal_commands.ab2"
000397C0 <internal_commands.ab2@151> INCLUDE "internal_commands.ab2"
000397C4 <internal_commands.ab2@154> INCLUDE "internal_commands.ab2"
000397C6 <internal_commands.ab2@155> INCLUDE "internal_commands.ab2"
000397CD <internal_commands.ab2@156> INCLUDE "internal_commands.ab2"
000397DC <internal_commands.ab2@157> INCLUDE "internal_commands.ab2"
000397E0 <internal_commands.ab2@161> INCLUDE "internal_commands.ab2"
000397E2 <internal_commands.ab2@162> INCLUDE "internal_commands.ab2"
000397E6 <internal_commands.ab2@163> INCLUDE "internal_commands.ab2"
0003981C <internal_commands.ab2@164> INCLUDE "internal_commands.ab2"
00039820 <internal_commands.ab2@168> INCLUDE "internal_commands.ab2"
00039822 <internal_commands.ab2@169> INCLUDE "internal_commands.ab2"
00039827 <internal_commands.ab2@170> INCLUDE "internal_commands.ab2"
00039836 <internal_commands.ab2@171> INCLUDE "internal_commands.ab2"
0003983A <internal_commands.ab2@175> INCLUDE "internal_commands.ab2"
0003983C <internal_commands.ab2@176> INCLUDE "internal_commands.ab2"
0003983F <internal_commands.ab2@177> INCLUDE "internal_commands.ab2"
00039860 <internal_commands.ab2@178> INCLUDE "internal_commands.ab2"
00039864 <internal_commands.ab2@182> INCLUDE "internal_commands.ab2"
00039866 <internal_commands.ab2@183> INCLUDE "internal_commands.ab2"
0003986B <internal_commands.ab2@184> INCLUDE "internal_commands.ab2"
00039877 <internal_commands.ab2@185> INCLUDE "internal_commands.ab2"
00039878 <internal_commands.ab2@186> INCLUDE "internal_commands.ab2"
0003987C <internal_commands.ab2@189> INCLUDE "internal_commands.ab2"
0003987E <internal_commands.ab2@190> INCLUDE "internal_commands.ab2"
00039883 <internal_commands.ab2@191> INCLUDE "internal_commands.ab2"
0003989A <internal_commands.ab2@192> INCLUDE "internal_commands.ab2"
0003989E <internal_commands.ab2@196> INCLUDE "internal_commands.ab2"
000398A0 <internal_commands.ab2@197> INCLUDE "internal_commands.ab2"
000398A5 <internal_commands.ab2@198> INCLUDE "internal_commands.ab2"
000398B4 <internal_commands.ab2@199> INCLUDE "internal_commands.ab2"
000398B8 <internal_commands.ab2@203> INCLUDE "internal_commands.ab2"
000398BA <internal_commands.ab2@204> INCLUDE "internal_commands.ab2"
000398BF <internal_commands.ab2@205> INCLUDE "internal_commands.ab2"
000398DE <internal_commands.ab2@206> INCLUDE "internal_commands.ab2"
000398E2 <internal_commands.ab2@210> INCLUDE "internal_commands.ab2"
000398E4 <internal_commands.ab2@211> INCLUDE "internal_commands.ab2"
000398E9 <internal_commands.ab2@212> INCLUDE "internal_commands.ab2"
00039908 <internal_commands.ab2@213> INCLUDE "internal_commands.ab2"
0003990C <internal_commands.ab2@217> INCLUDE "internal_commands.ab2"
0003990E <internal_commands.ab2@218> INCLUDE "internal_commands.ab2"
00039914 <internal_commands.ab2@219> INCLUDE "internal_commands.ab2"
00039915 <internal_commands.ab2@220> INCLUDE "internal_commands.ab2"
00039916 <internal_commands.ab2@221> INCLUDE "internal_commands.ab2"
0003991A <internal_commands.ab2@224> INCLUDE "internal_commands.ab2"
0003991C <internal_commands.ab2@225> INCLUDE "internal_commands.ab2"
00039921 <internal_commands.ab2@226> INCLUDE "internal_commands.ab2"
00039922 <internal_commands.ab2@227> INCLUDE "internal_commands.ab2"
00039926 <internal_commands.ab2@231> INCLUDE "internal_commands.ab2"
00039928 <internal_commands.ab2@232> INCLUDE "internal_commands.ab2"
0003992D <internal_commands.ab2@233> INCLUDE "internal_commands.ab2"
0003993A <internal_commands.ab2@234> INCLUDE "internal_commands.ab2"
0003993E <internal_commands.ab2@238> INCLUDE "internal_commands.ab2"
00039940 <internal_commands.ab2@239> INCLUDE "internal_commands.ab2"
00039945 <internal_commands.ab2@240> INCLUDE "internal_commands.ab2"
00039954 <internal_commands.ab2@241> INCLUDE "internal_commands.ab2"
00039958 <internal_commands.ab2@245> INCLUDE "internal_commands.ab2"
0003995A <internal_commands.ab2@246> INCLUDE "internal_commands.ab2"
0003995F <internal_commands.ab2@247> INCLUDE "internal_commands.ab2"
0003996E <internal_commands.ab2@248> INCLUDE "internal_commands.ab2"
00039972 <internal_commands.ab2@252> INCLUDE "internal_commands.ab2"
00039974 <internal_commands.ab2@253> INCLUDE "internal_commands.ab2"
0003997A <internal_commands.ab2@254> INCLUDE "internal_commands.ab2"
00039997 <internal_commands.ab2@255> INCLUDE "internal_commands.ab2"
00039998 <internal_commands.ab2@256> INCLUDE "internal_commands.ab2"
0003999C <internal_commands.ab2@259> INCLUDE "internal_commands.ab2"
0003999E <internal_commands.ab2@260> INCLUDE "internal_commands.ab2"
000399A4 <internal_commands.ab2@261> INCLUDE "internal_commands.ab2"
000399C1 <internal_commands.ab2@262> INCLUDE "internal_commands.ab2"
000399C2 <internal_commands.ab2@263> INCLUDE "internal_commands.ab2"
000399C6 <internal_commands.ab2@266> INCLUDE "internal_commands.ab2"
000399C8 <internal_commands.ab2@267> INCLUDE "internal_commands.ab2"
000399CB <internal_commands.ab2@268> INCLUDE "internal_commands.ab2"
000399E2 <internal_commands.ab2@269> INCLUDE "internal_commands.ab2"
000399E6 <internal_commands.ab2@273> INCLUDE "internal_commands.ab2"
000399E8 <internal_commands.ab2@274> INCLUDE "internal_commands.ab2"
000399EB <internal_commands.ab2@275> INCLUDE "internal_commands.ab2"
000399FA <internal_commands.ab2@276> INCLUDE "internal_commands.ab2"
000399FE <internal_commands.ab2@280> INCLUDE "internal_commands.ab2"
00039A00 <internal_commands.ab2@281> INCLUDE "internal_commands.ab2"
00039A05 <internal_commands.ab2@282> INCLUDE "internal_commands.ab2"
00039A06 <internal_commands.ab2@283> INCLUDE "internal_commands.ab2"
00039A0A <internal_commands.ab2@287> INCLUDE "internal_commands.ab2"
00039A0C <internal_commands.ab2@288> INCLUDE "internal_commands.ab2"
00039A10 <internal_commands.ab2@289> INCLUDE "internal_commands.ab2"
00039A25 <internal_commands.ab2@290> INCLUDE "internal_commands.ab2"
00039A26 <internal_commands.ab2@291> INCLUDE "internal_commands.ab2"
00039A2A <internal_commands.ab2@294> INCLUDE "internal_commands.ab2"
00039A2C <internal_commands.ab2@295> INCLUDE "internal_commands.ab2"
00039A33 <internal_commands.ab2@296> INCLUDE "internal_commands.ab2"
00039A4C <internal_commands.ab2@297> INCLUDE "internal_commands.ab2"
00039A50 <internal_commands.ab2@301> INCLUDE "internal_commands.ab2"
00039A52 <internal_commands.ab2@302> INCLUDE "internal_commands.ab2"
00039A59 <internal_commands.ab2@303> INCLUDE "internal_commands.ab2"
00039A64 <internal_commands.ab2@304> INCLUDE "internal_commands.ab2"
00039A68 <internal_commands.ab2@308> INCLUDE "internal_commands.ab2"
00039A6A <internal_commands.ab2@309> INCLUDE "internal_commands.ab2"
00039A6F <internal_commands.ab2@310> INCLUDE "internal_commands.ab2"
00039A86 <internal_commands.ab2@311> INCLUDE "internal_commands.ab2"
00039A8A <internal_commands.ab2@315> INCLUDE "internal_commands.ab2"
00039A8C <internal_commands.ab2@316> INCLUDE "internal_commands.ab2"
00039A90 <internal_commands.ab2@317> INCLUDE "internal_commands.ab2"
00039AA7 <internal_commands.ab2@318> INCLUDE "internal_commands.ab2"
00039AA8 <internal_commands.ab2@319> INCLUDE "internal_commands.ab2"
00039AAC <internal_commands.ab2@322> INCLUDE "internal_commands.ab2"
00039AAE <internal_commands.ab2@323> INCLUDE "internal_commands.ab2"
00039AB3 <internal_commands.ab2@324> INCLUDE "internal_commands.ab2"
00039AB4 <internal_commands.ab2@325> INCLUDE "internal_commands.ab2"
00039AB8 <internal_commands.ab2@329> INCLUDE "internal_commands.ab2"
00039ABA <internal_commands.ab2@330> INCLUDE "internal_commands.ab2"
00039ABF <internal_commands.ab2@331> INCLUDE "internal_commands.ab2"
00039AC3 <internal_commands.ab2@332> INCLUDE "internal_commands.ab2"
00039AC4 <internal_commands.ab2@333> INCLUDE "internal_commands.ab2"
00039AC8 <internal_commands.ab2@336> INCLUDE "internal_commands.ab2"
00039ACA <internal_commands.ab2@337> INCLUDE "internal_commands.ab2"
00039AD1 <internal_commands.ab2@338> INCLUDE "internal_commands.ab2"
00039AE9 <internal_commands.ab2@339> INCLUDE "internal_commands.ab2"
00039AEA <internal_commands.ab2@340> INCLUDE "internal_commands.ab2"
00039AEE <internal_commands.ab2@343> INCLUDE "internal_commands.ab2"
00039AF0 <internal_commands.ab2@344> INCLUDE "internal_commands.ab2"
00039AF7 <internal_commands.ab2@345> INCLUDE "internal_commands.ab2"
00039AFC <internal_commands.ab2@346> INCLUDE "internal_commands.ab2"
00039B00 <internal_commands.ab2@350> INCLUDE "internal_commands.ab2"
00039B02 <internal_commands.ab2@351> INCLUDE "internal_commands.ab2"
00039B09 <internal_commands.ab2@352> INCLUDE "internal_commands.ab2"
00039B0E <internal_commands.ab2@353> INCLUDE "internal_commands.ab2"
00039B12 <internal_commands.ab2@357> INCLUDE "internal_commands.ab2"
00039B14 <internal_commands.ab2@358> INCLUDE "internal_commands.ab2"
00039B1B <internal_commands.ab2@359> INCLUDE "internal_commands.ab2"
00039B36 <internal_commands.ab2@360> INCLUDE "internal_commands.ab2"
00039B3A <internal_commands.ab2@364> INCLUDE "internal_commands.ab2"
00039B3C <internal_commands.ab2@365> INCLUDE "internal_commands.ab2"
00039B44 <internal_commands.ab2@366> INCLUDE "internal_commands.ab2"
00039B5D <internal_commands.ab2@367> INCLUDE "internal_commands.ab2"
00039B5E <internal_commands.ab2@368> INCLUDE "internal_commands.ab2"
00039B62 <internal_commands.ab2@371> INCLUDE "internal_commands.ab2"
00039B64 <internal_commands.ab2@372> INCLUDE "internal_commands.ab2"
00039B6A <internal_commands.ab2@373> INCLUDE "internal_commands.ab2"
00039B6B <internal_commands.ab2@374> INCLUDE "internal_commands.ab2"
00039B6C <internal_commands.ab2@375> INCLUDE "internal_commands.ab2"
00039B70 <internal_commands.ab2@378> INCLUDE "internal_commands.ab2"
00039B72 <internal_commands.ab2@379> INCLUDE "internal_commands.ab2"
00039B78 <internal_commands.ab2@380> INCLUDE "internal_commands.ab2"
00039B79 <internal_commands.ab2@381> INCLUDE "internal_commands.ab2"
00039B7A <internal_commands.ab2@382> INCLUDE "internal_commands.ab2"
00039B7E <internal_commands.ab2@385> INCLUDE "internal_commands.ab2"
00039B80 <internal_commands.ab2@386> INCLUDE "internal_commands.ab2"
00039B87 <internal_commands.ab2@387> INCLUDE "internal_commands.ab2"
00039B88 <internal_commands.ab2@388> INCLUDE "internal_commands.ab2"
00039B8C <internal_commands.ab2@392> INCLUDE "internal_commands.ab2"
00039B8E <internal_commands.ab2@393> INCLUDE "internal_commands.ab2"
00039B94 <internal_commands.ab2@394> INCLUDE "internal_commands.ab2"
00039B9D <internal_commands.ab2@395> INCLUDE "internal_commands.ab2"
00039B9E <internal_commands.ab2@396> INCLUDE "internal_commands.ab2"
00039BA2 <internal_commands.ab2@399> INCLUDE "internal_commands.ab2"
00039BA4 <internal_commands.ab2@400> INCLUDE "internal_commands.ab2"
00039BAC <internal_commands.ab2@401> INCLUDE "internal_commands.ab2"
00039BB9 <internal_commands.ab2@402> INCLUDE "internal_commands.ab2"
00039BBA <internal_commands.ab2@403> INCLUDE "internal_commands.ab2"
00039BBE <internal_commands.ab2@406> INCLUDE "internal_commands.ab2"
00039BC0 <internal_commands.ab2@407> INCLUDE "internal_commands.ab2"
00039BC8 <internal_commands.ab2@408> INCLUDE "internal_commands.ab2"
00039BD5 <internal_commands.ab2@409> INCLUDE "internal_commands.ab2"
00039BD6 <internal_commands.ab2@410> INCLUDE "internal_commands.ab2"
00039BDA <internal_commands.ab2@413> INCLUDE "internal_commands.ab2"
00039BDC <internal_commands.ab2@414> INCLUDE "internal_commands.ab2"
00039BE4 <internal_commands.ab2@415> INCLUDE "internal_commands.ab2"
00039BF1 <internal_commands.ab2@416> INCLUDE "internal_commands.ab2"
00039BF2 <internal_commands.ab2@417> INCLUDE "internal_commands.ab2"
00039BF6 <internal_commands.ab2@420> INCLUDE "internal_commands.ab2"
00039BF8 <internal_commands.ab2@421> INCLUDE "internal_commands.ab2"
00039BFD <internal_commands.ab2@422> INCLUDE "internal_commands.ab2"
00039BFE <internal_commands.ab2@423> INCLUDE "internal_commands.ab2"
00039C02 <internal_commands.ab2@437> INCLUDE "internal_commands.ab2"
00039C04 <internal_commands.ab2@438> INCLUDE "internal_commands.ab2"
00039C09 <internal_commands.ab2@439> INCLUDE "internal_commands.ab2"
00039C0A <internal_commands.ab2@440> INCLUDE "internal_commands.ab2"
00039C0C <internal_commands.ab2@443> INCLUDE "internal_commands.ab2"
00039C10 <internal_commands.ab2@444> INCLUDE "internal_commands.ab2"
00039C12 <internal_commands.ab2@445> INCLUDE "internal_commands.ab2"
00039C14 <internal_commands.ab2@446> INCLUDE "internal_commands.ab2"
00039C18 <internal_commands.ab2@447> INCLUDE "internal_commands.ab2"
00039C1A <internal_commands.ab2@448> INCLUDE "internal_commands.ab2"
00039C1E <internal_commands.ab2@452> INCLUDE "internal_commands.ab2"
00039C20 <internal_commands.ab2@453> INCLUDE "internal_commands.ab2"
00039C24 <internal_commands.ab2@454> INCLUDE "internal_commands.ab2"
00039C25 <internal_commands.ab2@455> INCLUDE "internal_commands.ab2"
00039C26 <internal_commands.ab2@456> INCLUDE "internal_commands.ab2"
00039C28 <internal_commands.ab2@458> INCLUDE "internal_commands.ab2"
00039C2C <internal_commands.ab2@459> INCLUDE "internal_commands.ab2"
00039C2E <internal_commands.ab2@460> INCLUDE "internal_commands.ab2"
00039C30 <internal_commands.ab2@461> INCLUDE "internal_commands.ab2"
00039C34 <internal_commands.ab2@462> INCLUDE "internal_commands.ab2"
00039C36 <internal_commands.ab2@463> INCLUDE "internal_commands.ab2"
00039C3A <internal_commands.ab2@467> INCLUDE "internal_commands.ab2"
00039C3C <internal_commands.ab2@468> INCLUDE "internal_commands.ab2"
00039C41 <internal_commands.ab2@469> INCLUDE "internal_commands.ab2"
00039C42 <internal_commands.ab2@470> INCLUDE "internal_commands.ab2"
00039C44 <internal_commands.ab2@473> INCLUDE "internal_commands.ab2"
00039C48 <internal_commands.ab2@474> INCLUDE "internal_commands.ab2"
00039C4A <internal_commands.ab2@475> INCLUDE "internal_commands.ab2"
00039C4C <internal_commands.ab2@476> INCLUDE "internal_commands.ab2"
00039C50 <internal_commands.ab2@477> INCLUDE "internal_commands.ab2"
00039C52 <internal_commands.ab2@478> INCLUDE "internal_commands.ab2"
00039C56 <internal_commands.ab2@482> INCLUDE "internal_commands.ab2"
00039C58 <internal_commands.ab2@483> INCLUDE "internal_commands.ab2"
00039C5D <internal_commands.ab2@484> INCLUDE "internal_commands.ab2"
00039C5E <internal_commands.ab2@485> INCLUDE "internal_commands.ab2"
00039C60 <internal_commands.ab2@488> INCLUDE "internal_commands.ab2"
00039C64 <internal_commands.ab2@489> INCLUDE "internal_commands.ab2"
00039C66 <internal_commands.ab2@490> INCLUDE "internal_commands.ab2"
00039C68 <internal_commands.ab2@491> INCLUDE "internal_commands.ab2"
00039C6C <internal_commands.ab2@492> INCLUDE "internal_commands.ab2"
00039C6E <internal_commands.ab2@493> INCLUDE "internal_commands.ab2"
00039C72 <internal_commands.ab2@497> INCLUDE "internal_commands.ab2"
00039C74 <internal_commands.ab2@498> INCLUDE "internal_commands.ab2"
00039C79 <internal_commands.ab2@499> INCLUDE "internal_commands.ab2"
00039C7A <internal_commands.ab2@500> INCLUDE "internal_commands.ab2"
00039C7C <internal_commands.ab2@503> INCLUDE "internal_commands.ab2"
00039C80 <internal_commands.ab2@504> INCLUDE "internal_commands.ab2"
00039C82 <internal_commands.ab2@505> INCLUDE "internal_commands.ab2"
00039C84 <internal_commands.ab2@506> INCLUDE "internal_commands.ab2"
00039C88 <internal_commands.ab2@507> INCLUDE "internal_commands.ab2"
00039C8A <internal_commands.ab2@508> INCLUDE "internal_commands.ab2"
00039C8E <internal_commands.ab2@512> INCLUDE "internal_commands.ab2"
00039C90 <internal_commands.ab2@513> INCLUDE "internal_commands.ab2"
00039C95 <internal_commands.ab2@514> INCLUDE "internal_commands.ab2"
00039C96 <internal_commands.ab2@515> INCLUDE "internal_commands.ab2"
00039C98 <internal_commands.ab2@518> INCLUDE "internal_commands.ab2"
00039C9C <internal_commands.ab2@519> INCLUDE "internal_commands.ab2"
00039C9E <internal_commands.ab2@520> INCLUDE "internal_commands.ab2"
00039CA0 <internal_commands.ab2@521> INCLUDE "internal_commands.ab2"
00039CA4 <internal_commands.ab2@522> INCLUDE "internal_commands.ab2"
00039CA6 <internal_commands.ab2@523> INCLUDE "internal_commands.ab2"
00039CAA <internal_commands.ab2@527> INCLUDE "internal_commands.ab2"
00039CAC <internal_commands.ab2@528> INCLUDE "internal_commands.ab2"
00039CB0 <internal_commands.ab2@529> INCLUDE "internal_commands.ab2"
00039CB1 <internal_commands.ab2@530> INCLUDE "internal_commands.ab2"
00039CB2 <internal_commands.ab2@531> INCLUDE "internal_commands.ab2"
00039CB4 <internal_commands.ab2@533> INCLUDE "internal_commands.ab2"
00039CB8 <internal_commands.ab2@534> INCLUDE "internal_commands.ab2"
00039CBA <internal_commands.ab2@535> INCLUDE "internal_commands.ab2"
00039CBC <internal_commands.ab2@536> INCLUDE "internal_commands.ab2"
00039CC0 <internal_commands.ab2@537> INCLUDE "internal_commands.ab2"
00039CC2 <internal_commands.ab2@538> INCLUDE "internal_commands.ab2"
00039CC6 <internal_commands.ab2@542> INCLUDE "internal_commands.ab2"
00039CC8 <internal_commands.ab2@543> INCLUDE "internal_commands.ab2"
00039CCD <internal_commands.ab2@544> INCLUDE "internal_commands.ab2"
00039CCE <internal_commands.ab2@545> INCLUDE "internal_commands.ab2"
00039CD0 <internal_commands.ab2@548> INCLUDE "internal_commands.ab2"
00039CD4 <internal_commands.ab2@549> INCLUDE "internal_commands.ab2"
00039CD6 <internal_commands.ab2@550> INCLUDE "internal_commands.ab2"
00039CD8 <internal_commands.ab2@551> INCLUDE "internal_commands.ab2"
00039CDC <internal_commands.ab2@552> INCLUDE "internal_commands.ab2"
00039CDE <internal_commands.ab2@553> INCLUDE "internal_commands.ab2"
00039CE2 <internal_commands.ab2@557> INCLUDE "internal_commands.ab2"
00039CE4 <internal_commands.ab2@558> INCLUDE "internal_commands.ab2"
00039CE8 <internal_commands.ab2@559> INCLUDE "internal_commands.ab2"
00039CE9 <internal_commands.ab2@560> INCLUDE "internal_commands.ab2"
00039CEA <internal_commands.ab2@561> INCLUDE "internal_commands.ab2"
00039CEC <internal_commands.ab2@563> INCLUDE "internal_commands.ab2"
00039CF0 <internal_commands.ab2@564> INCLUDE "internal_commands.ab2"
00039CF2 <internal_commands.ab2@565> INCLUDE "internal_commands.ab2"
00039CF4 <internal_commands.ab2@566> INCLUDE "internal_commands.ab2"
00039CF8 <internal_commands.ab2@567> INCLUDE "internal_commands.ab2"
00039CFA <internal_commands.ab2@568> INCLUDE "internal_commands.ab2"
00039CFE <internal_commands.ab2@572> INCLUDE "internal_commands.ab2"
00039D00 <internal_commands.ab2@573> INCLUDE "internal_commands.ab2"
00039D04 <internal_commands.ab2@574> INCLUDE "internal_commands.ab2"
00039D05 <internal_commands.ab2@575> INCLUDE "internal_commands.ab2"
00039D06 <internal_commands.ab2@576> INCLUDE "internal_commands.ab2"
00039D08 <internal_commands.ab2@578> INCLUDE "internal_commands.ab2"
00039D0C <internal_commands.ab2@579> INCLUDE "internal_commands.ab2"
00039D0E <internal_commands.ab2@580> INCLUDE "internal_commands.ab2"
00039D10 <internal_commands.ab2@581> INCLUDE "internal_commands.ab2"
00039D14 <internal_commands.ab2@582> INCLUDE "internal_commands.ab2"
00039D16 <internal_commands.ab2@583> INCLUDE "internal_commands.ab2"
00039D1A <internal_commands.ab2@587> INCLUDE "internal_commands.ab2"
00039D1C <internal_commands.ab2@588> INCLUDE "internal_commands.ab2"
00039D20 <internal_commands.ab2@589> INCLUDE "internal_commands.ab2"
00039D21 <internal_commands.ab2@590> INCLUDE "internal_commands.ab2"
00039D22 <internal_commands.ab2@591> INCLUDE "internal_commands.ab2"
00039D24 <internal_commands.ab2@593> INCLUDE "internal_commands.ab2"
00039D28 <internal_commands.ab2@594> INCLUDE "internal_commands.ab2"
00039D2A <internal_commands.ab2@595> INCLUDE "internal_commands.ab2"
00039D2C <internal_commands.ab2@596> INCLUDE "internal_commands.ab2"
00039D30 <internal_commands.ab2@597> INCLUDE "internal_commands.ab2"
00039D32 <internal_commands.ab2@598> INCLUDE "internal_commands.ab2"
00039D36 <internal_commands.ab2@602> INCLUDE "internal_commands.ab2"
00039D38 <internal_commands.ab2@603> INCLUDE "internal_commands.ab2"
00039D3C <internal_commands.ab2@604> INCLUDE "internal_commands.ab2"
00039D3D <internal_commands.ab2@605> INCLUDE "internal_commands.ab2"
00039D3E <internal_commands.ab2@606> INCLUDE "internal_commands.ab2"
00039D40 <internal_commands.ab2@608> INCLUDE "internal_commands.ab2"
00039D44 <internal_commands.ab2@609> INCLUDE "internal_commands.ab2"
00039D46 <internal_commands.ab2@610> INCLUDE "internal_commands.ab2"
00039D48 <internal_commands.ab2@611> INCLUDE "internal_commands.ab2"
00039D4C <internal_commands.ab2@612> INCLUDE "internal_commands.ab2"
00039D4E <internal_commands.ab2@613> INCLUDE "internal_commands.ab2"
00039D52 <internal_commands.ab2@617> INCLUDE "internal_commands.ab2"
00039D54 <internal_commands.ab2@618> INCLUDE "internal_commands.ab2"
00039D58 <internal_commands.ab2@619> INCLUDE "internal_commands.ab2"
00039D59 <internal_commands.ab2@620> INCLUDE "internal_commands.ab2"
00039D5A <internal_commands.ab2@621> INCLUDE "internal_commands.ab2"
00039D5C <internal_commands.ab2@623> INCLUDE "internal_commands.ab2"
00039D60 <internal_commands.ab2@624> INCLUDE "internal_commands.ab2"
00039D62 <internal_commands.ab2@625> INCLUDE "internal_commands.ab2"
00039D64 <internal_commands.ab2@626> INCLUDE "internal_commands.ab2"
00039D68 <internal_commands.ab2@627> INCLUDE "internal_commands.ab2"
00039D6A <internal_commands.ab2@628> INCLUDE "internal_commands.ab2"
00039D6E <internal_commands.ab2@632> INCLUDE "internal_commands.ab2"
00039D70 <internal_commands.ab2@633> INCLUDE "internal_commands.ab2"
00039D74 <internal_commands.ab2@634> INCLUDE "internal_commands.ab2"
00039D75 <internal_commands.ab2@635> INCLUDE "internal_commands.ab2"
00039D76 <internal_commands.ab2@636> INCLUDE "internal_commands.ab2"
00039D78 <internal_commands.ab2@638> INCLUDE "internal_commands.ab2"
00039D7C <internal_commands.ab2@639> INCLUDE "internal_commands.ab2"
00039D7E <internal_commands.ab2@640> INCLUDE "internal_commands.ab2"
00039D80 <internal_commands.ab2@641> INCLUDE "internal_commands.ab2"
00039D84 <internal_commands.ab2@642> INCLUDE "internal_commands.ab2"
00039D86 <internal_commands.ab2@643> INCLUDE "internal_commands.ab2"
00039D8A <internal_commands.ab2@647> INCLUDE "internal_commands.ab2"
00039D8C <internal_commands.ab2@648> INCLUDE "internal_commands.ab2"
00039D90 <internal_commands.ab2@649> INCLUDE "internal_commands.ab2"
00039D91 <internal_commands.ab2@650> INCLUDE "internal_commands.ab2"
00039D92 <internal_commands.ab2@651> INCLUDE "internal_commands.ab2"
00039D94 <internal_commands.ab2@653> INCLUDE "internal_commands.ab2"
00039D98 <internal_commands.ab2@654> INCLUDE "internal_commands.ab2"
00039D9A <internal_commands.ab2@655> INCLUDE "internal_commands.ab2"
00039D9C <internal_commands.ab2@656> INCLUDE "internal_commands.ab2"
00039DA0 <internal_commands.ab2@657> INCLUDE "internal_commands.ab2"
00039DA2 <internal_commands.ab2@658> INCLUDE "internal_commands.ab2"
00039DA6 <internal_commands.ab2@662> INCLUDE "internal_commands.ab2"
00039DA8 <internal_commands.ab2@663> INCLUDE "internal_commands.ab2"
00039DAC <internal_commands.ab2@664> INCLUDE "internal_commands.ab2"
00039DAD <internal_commands.ab2@665> INCLUDE "internal_commands.ab2"
00039DAE <internal_commands.ab2@666> INCLUDE "internal_commands.ab2"
00039DB0 <internal_commands.ab2@668> INCLUDE "internal_commands.ab2"
00039DB4 <internal_commands.ab2@669> INCLUDE "internal_commands.ab2"
00039DB6 <internal_commands.ab2@670> INCLUDE "internal_commands.ab2"
00039DB8 <internal_commands.ab2@671> INCLUDE "internal_commands.ab2"
00039DBC <internal_commands.ab2@672> INCLUDE "internal_commands.ab2"
00039DBE <internal_commands.ab2@673> INCLUDE "internal_commands.ab2"
00039DC2 <internal_commands.ab2@677> INCLUDE "internal_commands.ab2"
00039DC4 <internal_commands.ab2@678> INCLUDE "internal_commands.ab2"
00039DC8 <internal_commands.ab2@679> INCLUDE "internal_commands.ab2"
00039DC9 <internal_commands.ab2@680> INCLUDE "internal_commands.ab2"
00039DCA <internal_commands.ab2@681> INCLUDE "internal_commands.ab2"
00039DCC <internal_commands.ab2@683> INCLUDE "internal_commands.ab2"
00039DD0 <internal_commands.ab2@684> INCLUDE "internal_commands.ab2"
00039DD2 <internal_commands.ab2@685> INCLUDE "internal_commands.ab2"
00039DD4 <internal_commands.ab2@686> INCLUDE "internal_commands.ab2"
00039DD8 <internal_commands.ab2@687> INCLUDE "internal_commands.ab2"
00039DDA <internal_commands.ab2@688> INCLUDE "internal_commands.ab2"
00039DDE <internal_commands.ab2@692> INCLUDE "internal_commands.ab2"
00039DE0 <internal_commands.ab2@693> INCLUDE "internal_commands.ab2"
00039DE4 <internal_commands.ab2@694> INCLUDE "internal_commands.ab2"
00039DE5 <internal_commands.ab2@695> INCLUDE "internal_commands.ab2"
00039DE6 <internal_commands.ab2@696> INCLUDE "internal_commands.ab2"
00039DE8 <internal_commands.ab2@698> INCLUDE "internal_commands.ab2"
00039DEC <internal_commands.ab2@699> INCLUDE "internal_commands.ab2"
00039DEE <internal_commands.ab2@700> INCLUDE "internal_commands.ab2"
00039DF0 <internal_commands.ab2@701> INCLUDE "internal_commands.ab2"
00039DF4 <internal_commands.ab2@702> INCLUDE "internal_commands.ab2"
00039DF6 <internal_commands.ab2@703> INCLUDE "internal_commands.ab2"
00039DFA <internal_commands.ab2@707> INCLUDE "internal_commands.ab2"
00039DFC <internal_commands.ab2@708> INCLUDE "internal_commands.ab2"
00039E00 <internal_commands.ab2@709> INCLUDE "internal_commands.ab2"
00039E01 <internal_commands.ab2@710> INCLUDE "internal_commands.ab2"
00039E02 <internal_commands.ab2@711> INCLUDE "internal_commands.ab2"
00039E04 <internal_commands.ab2@713> INCLUDE "internal_commands.ab2"
00039E08 <internal_commands.ab2@714> INCLUDE "internal_commands.ab2"
00039E0A <internal_commands.ab2@715> INCLUDE "internal_commands.ab2"
00039E0C <internal_commands.ab2@716> INCLUDE "internal_commands.ab2"
00039E10 <internal_commands.ab2@717> INCLUDE "internal_commands.ab2"
00039E12 <internal_commands.ab2@718> INCLUDE "internal_commands.ab2"
00039E16 <internal_commands.ab2@722> INCLUDE "internal_commands.ab2"
00039E18 <internal_commands.ab2@723> INCLUDE "internal_commands.ab2"
00039E1C <internal_commands.ab2@724> INCLUDE "internal_commands.ab2"
00039E1D <internal_commands.ab2@725> INCLUDE "internal_commands.ab2"
00039E1E <internal_commands.ab2@726> INCLUDE "internal_commands.ab2"
00039E20 <internal_commands.ab2@728> INCLUDE "internal_commands.ab2"
00039E24 <internal_commands.ab2@729> INCLUDE "internal_commands.ab2"
00039E26 <internal_commands.ab2@730> INCLUDE "internal_commands.ab2"
00039E28 <internal_commands.ab2@731> INCLUDE "internal_commands.ab2"
00039E2C <internal_commands.ab2@732> INCLUDE "internal_commands.ab2"
00039E2E <internal_commands.ab2@733> INCLUDE "internal_commands.ab2"
00039E32 <internal_commands.ab2@737> INCLUDE "internal_commands.ab2"
00039E34 <internal_commands.ab2@738> INCLUDE "internal_commands.ab2"
00039E38 <internal_commands.ab2@739> INCLUDE "internal_commands.ab2"
00039E39 <internal_commands.ab2@740> INCLUDE "internal_commands.ab2"
00039E3A <internal_commands.ab2@741> INCLUDE "internal_commands.ab2"
00039E3C <internal_commands.ab2@743> INCLUDE "internal_commands.ab2"
00039E40 <internal_commands.ab2@744> INCLUDE "internal_commands.ab2"
00039E42 <internal_commands.ab2@745> INCLUDE "internal_commands.ab2"
00039E44 <internal_commands.ab2@746> INCLUDE "internal_commands.ab2"
00039E48 <internal_commands.ab2@747> INCLUDE "internal_commands.ab2"
00039E4A <internal_commands.ab2@748> INCLUDE "internal_commands.ab2"
00039E4E <internal_commands.ab2@752> INCLUDE "internal_commands.ab2"
00039E50 <internal_commands.ab2@753> INCLUDE "internal_commands.ab2"
00039E54 <internal_commands.ab2@754> INCLUDE "internal_commands.ab2"
00039E55 <internal_commands.ab2@755> INCLUDE "internal_commands.ab2"
00039E56 <internal_commands.ab2@756> INCLUDE "internal_commands.ab2"
00039E58 <internal_commands.ab2@758> INCLUDE "internal_commands.ab2"
00039E5C <internal_commands.ab2@759> INCLUDE "internal_commands.ab2"
00039E5E <internal_commands.ab2@760> INCLUDE "internal_commands.ab2"
00039E60 <internal_commands.ab2@761> INCLUDE "internal_commands.ab2"
00039E64 <internal_commands.ab2@762> INCLUDE "internal_commands.ab2"
00039E66 <internal_commands.ab2@763> INCLUDE "internal_commands.ab2"
00039E6A <internal_commands.ab2@767> INCLUDE "internal_commands.ab2"
00039E6C <internal_commands.ab2@768> INCLUDE "internal_commands.ab2"
00039E70 <internal_commands.ab2@769> INCLUDE "internal_commands.ab2"
00039E71 <internal_commands.ab2@770> INCLUDE "internal_commands.ab2"
00039E72 <internal_commands.ab2@771> INCLUDE "internal_commands.ab2"
00039E74 <internal_commands.ab2@773> INCLUDE "internal_commands.ab2"
00039E78 <internal_commands.ab2@774> INCLUDE "internal_commands.ab2"
00039E7A <internal_commands.ab2@775> INCLUDE "internal_commands.ab2"
00039E7C <internal_commands.ab2@776> INCLUDE "internal_commands.ab2"
00039E80 <internal_commands.ab2@777> INCLUDE "internal_commands.ab2"
00039E82 <internal_commands.ab2@778> INCLUDE "internal_commands.ab2"
00039E86 <internal_commands.ab2@782> INCLUDE "internal_commands.ab2"
00039E88 <internal_commands.ab2@783> INCLUDE "internal_commands.ab2"
00039E8C <internal_commands.ab2@784> INCLUDE "internal_commands.ab2"
00039E8D <internal_commands.ab2@785> INCLUDE "internal_commands.ab2"
00039E8E <internal_commands.ab2@786> INCLUDE "internal_commands.ab2"
00039E90 <internal_commands.ab2@788> INCLUDE "internal_commands.ab2"
00039E94 <internal_commands.ab2@789> INCLUDE "internal_commands.ab2"
00039E96 <internal_commands.ab2@790> INCLUDE "internal_commands.ab2"
00039E98 <internal_commands.ab2@791> INCLUDE "internal_commands.ab2"
00039E9C <internal_commands.ab2@792> INCLUDE "internal_commands.ab2"
00039E9E <internal_commands.ab2@793> INCLUDE "internal_commands.ab2"
00039EA2 <internal_commands.ab2@797> INCLUDE "internal_commands.ab2"
00039EA4 <internal_commands.ab2@798> INCLUDE "internal_commands.ab2"
00039EA9 <internal_commands.ab2@799> INCLUDE "internal_commands.ab2"
00039EAA <internal_commands.ab2@800> INCLUDE "internal_commands.ab2"
00039EAC <internal_commands.ab2@803> INCLUDE "internal_commands.ab2"
00039EB0 <internal_commands.ab2@804> INCLUDE "internal_commands.ab2"
00039EB2 <internal_commands.ab2@805> INCLUDE "internal_commands.ab2"
00039EB4 <internal_commands.ab2@806> INCLUDE "internal_commands.ab2"
00039EB8 <internal_commands.ab2@807> INCLUDE "internal_commands.ab2"
00039EBA <internal_commands.ab2@808> INCLUDE "internal_commands.ab2"
00039EBE <internal_commands.ab2@812> INCLUDE "internal_commands.ab2"
00039EC0 <internal_commands.ab2@813> INCLUDE "internal_commands.ab2"
00039EC5 <internal_commands.ab2@814> INCLUDE "internal_commands.ab2"
00039EC6 <internal_commands.ab2@815> INCLUDE "internal_commands.ab2"
00039EC8 <internal_commands.ab2@818> INCLUDE "internal_commands.ab2"
00039ECC <internal_commands.ab2@819> INCLUDE "internal_commands.ab2"
00039ECE <internal_commands.ab2@820> INCLUDE "internal_commands.ab2"
00039ED0 <internal_commands.ab2@821> INCLUDE "internal_commands.ab2"
00039ED4 <internal_commands.ab2@822> INCLUDE "internal_commands.ab2"
00039ED6 <internal_commands.ab2@823> INCLUDE "internal_commands.ab2"
00039EDA <internal_commands.ab2@827> INCLUDE "internal_commands.ab2"
00039EDC <internal_commands.ab2@828> INCLUDE "internal_commands.ab2"
00039EE1 <internal_commands.ab2@829> INCLUDE "internal_commands.ab2"
00039EE2 <internal_commands.ab2@830> INCLUDE "internal_commands.ab2"
00039EE4 <internal_commands.ab2@833> INCLUDE "internal_commands.ab2"
00039EE8 <internal_commands.ab2@834> INCLUDE "internal_commands.ab2"
00039EEA <internal_commands.ab2@835> INCLUDE "internal_commands.ab2"
00039EEC <internal_commands.ab2@836> INCLUDE "internal_commands.ab2"
00039EF0 <internal_commands.ab2@837> INCLUDE "internal_commands.ab2"
00039EF2 <internal_commands.ab2@838> INCLUDE "internal_commands.ab2"
00039EF6 <internal_commands.ab2@842> INCLUDE "internal_commands.ab2"
00039EF8 <internal_commands.ab2@843> INCLUDE "internal_commands.ab2"
00039EFD <internal_commands.ab2@844> INCLUDE "internal_commands.ab2"
00039EFE <internal_commands.ab2@845> INCLUDE "internal_commands.ab2"
00039F00 <internal_commands.ab2@848> INCLUDE "internal_commands.ab2"
00039F04 <internal_commands.ab2@849> INCLUDE "internal_commands.ab2"
00039F06 <internal_commands.ab2@850> INCLUDE "internal_commands.ab2"
00039F08 <internal_commands.ab2@851> INCLUDE "internal_commands.ab2"
00039F0C <internal_commands.ab2@852> INCLUDE "internal_commands.ab2"
00039F0E <internal_commands.ab2@853> INCLUDE "internal_commands.ab2"
00039F12 <internal_commands.ab2@857> INCLUDE "internal_commands.ab2"
00039F14 <internal_commands.ab2@858> INCLUDE "internal_commands.ab2"
00039F18 <internal_commands.ab2@859> INCLUDE "internal_commands.ab2"
00039F19 <internal_commands.ab2@860> INCLUDE "internal_commands.ab2"
00039F1A <internal_commands.ab2@861> INCLUDE "internal_commands.ab2"
00039F1C <internal_commands.ab2@863> INCLUDE "internal_commands.ab2"
00039F20 <internal_commands.ab2@864> INCLUDE "internal_commands.ab2"
00039F22 <internal_commands.ab2@865> INCLUDE "internal_commands.ab2"
00039F24 <internal_commands.ab2@866> INCLUDE "internal_commands.ab2"
00039F28 <internal_commands.ab2@867> INCLUDE "internal_commands.ab2"
00039F2A <internal_commands.ab2@868> INCLUDE "internal_commands.ab2"
00039F2E <internal_commands.ab2@872> INCLUDE "internal_commands.ab2"
00039F30 <internal_commands.ab2@873> INCLUDE "internal_commands.ab2"
00039F34 <internal_commands.ab2@874> INCLUDE "internal_commands.ab2"
00039F35 <internal_commands.ab2@875> INCLUDE "internal_commands.ab2"
00039F36 <internal_commands.ab2@876> INCLUDE "internal_commands.ab2"
00039F38 <internal_commands.ab2@878> INCLUDE "internal_commands.ab2"
00039F3C <internal_commands.ab2@879> INCLUDE "internal_commands.ab2"
00039F3E <internal_commands.ab2@880> INCLUDE "internal_commands.ab2"
00039F40 <internal_commands.ab2@881> INCLUDE "internal_commands.ab2"
00039F44 <internal_commands.ab2@882> INCLUDE "internal_commands.ab2"
00039F46 <internal_commands.ab2@883> INCLUDE "internal_commands.ab2"
00039F4A <internal_commands.ab2@887> INCLUDE "internal_commands.ab2"
00039F4C <internal_commands.ab2@888> INCLUDE "internal_commands.ab2"
00039F50 <internal_commands.ab2@889> INCLUDE "internal_commands.ab2"
00039F51 <internal_commands.ab2@890> INCLUDE "internal_commands.ab2"
00039F52 <internal_commands.ab2@891> INCLUDE "internal_commands.ab2"
00039F54 <internal_commands.ab2@893> INCLUDE "internal_commands.ab2"
00039F58 <internal_commands.ab2@894> INCLUDE "internal_commands.ab2"
00039F5A <internal_commands.ab2@895> INCLUDE "internal_commands.ab2"
00039F5C <internal_commands.ab2@896> INCLUDE "internal_commands.ab2"
00039F60 <internal_commands.ab2@897> INCLUDE "internal_commands.ab2"
00039F62 <internal_commands.ab2@898> INCLUDE "internal_commands.ab2"
00039F66 <internal_commands.ab2@902> INCLUDE "internal_commands.ab2"
00039F68 <internal_commands.ab2@903> INCLUDE "internal_commands.ab2"
00039F6C <internal_commands.ab2@904> INCLUDE "internal_commands.ab2"
00039F6D <internal_commands.ab2@905> INCLUDE "internal_commands.ab2"
00039F6E <internal_commands.ab2@906> INCLUDE "internal_commands.ab2"
00039F70 <internal_commands.ab2@908> INCLUDE "internal_commands.ab2"
00039F74 <internal_commands.ab2@909> INCLUDE "internal_commands.ab2"
00039F76 <internal_commands.ab2@910> INCLUDE "internal_commands.ab2"
00039F78 <internal_commands.ab2@911> INCLUDE "internal_commands.ab2"
00039F7C <internal_commands.ab2@912> INCLUDE "internal_commands.ab2"
00039F7E <internal_commands.ab2@913> INCLUDE "internal_commands.ab2"
00039F82 <internal_commands.ab2@917> INCLUDE "internal_commands.ab2"
00039F84 <internal_commands.ab2@918> INCLUDE "internal_commands.ab2"
00039F88 <internal_commands.ab2@919> INCLUDE "internal_commands.ab2"
00039F89 <internal_commands.ab2@920> INCLUDE "internal_commands.ab2"
00039F8A <internal_commands.ab2@921> INCLUDE "internal_commands.ab2"
00039F8C <internal_commands.ab2@923> INCLUDE "internal_commands.ab2"
00039F90 <internal_commands.ab2@924> INCLUDE "internal_commands.ab2"
00039F92 <internal_commands.ab2@925> INCLUDE "internal_commands.ab2"
00039F94 <internal_commands.ab2@926> INCLUDE "internal_commands.ab2"
00039F98 <internal_commands.ab2@927> INCLUDE "internal_commands.ab2"
00039F9A <internal_commands.ab2@928> INCLUDE "internal_commands.ab2"
00039F9E <internal_commands.ab2@932> INCLUDE "internal_commands.ab2"
00039FA0 <internal_commands.ab2@933> INCLUDE "internal_commands.ab2"
00039FA5 <internal_commands.ab2@934> INCLUDE "internal_commands.ab2"
00039FA6 <internal_commands.ab2@935> INCLUDE "internal_commands.ab2"
00039FA8 <internal_commands.ab2@938> INCLUDE "internal_commands.ab2"
00039FAC <internal_commands.ab2@939> INCLUDE "internal_commands.ab2"
00039FAE <internal_commands.ab2@940> INCLUDE "internal_commands.ab2"
00039FB0 <internal_commands.ab2@941> INCLUDE "internal_commands.ab2"
00039FB4 <internal_commands.ab2@942> INCLUDE "internal_commands.ab2"
00039FB6 <internal_commands.ab2@943> INCLUDE "internal_commands.ab2"
00039FBA <internal_commands.ab2@947> INCLUDE "internal_commands.ab2"
00039FBC <internal_commands.ab2@948> INCLUDE "internal_commands.ab2"
00039FC1 <internal_commands.ab2@949> INCLUDE "internal_commands.ab2"
00039FC2 <internal_commands.ab2@950> INCLUDE "internal_commands.ab2"
00039FC4 <internal_commands.ab2@953> INCLUDE "internal_commands.ab2"
00039FC8 <internal_commands.ab2@954> INCLUDE "internal_commands.ab2"
00039FCA <internal_commands.ab2@955> INCLUDE "internal_commands.ab2"
00039FCC <internal_commands.ab2@956> INCLUDE "internal_commands.ab2"
00039FD0 <internal_commands.ab2@957> INCLUDE "internal_commands.ab2"
00039FD2 <internal_commands.ab2@958> INCLUDE "internal_commands.ab2"
00039FD6 <internal_commands.ab2@962> INCLUDE "internal_commands.ab2"
00039FD8 <internal_commands.ab2@963> INCLUDE "internal_commands.ab2"
00039FDD <internal_commands.ab2@964> INCLUDE "internal_commands.ab2"
00039FDE <internal_commands.ab2@965> INCLUDE "internal_commands.ab2"
00039FE0 <internal_commands.ab2@968> INCLUDE "internal_commands.ab2"
00039FE4 <internal_commands.ab2@969> INCLUDE "internal_commands.ab2"
00039FE6 <internal_commands.ab2@970> INCLUDE "internal_commands.ab2"
00039FE8 <internal_commands.ab2@971> INCLUDE "internal_commands.ab2"
00039FEC <internal_commands.ab2@972> INCLUDE "internal_commands.ab2"
00039FEE <internal_commands.ab2@973> INCLUDE "internal_commands.ab2"
00039FF2 <internal_commands.ab2@977> INCLUDE "internal_commands.ab2"
00039FF4 <internal_commands.ab2@978> INCLUDE "internal_commands.ab2"
00039FF9 <internal_commands.ab2@979> INCLUDE "internal_commands.ab2"
00039FFA <internal_commands.ab2@980> INCLUDE "internal_commands.ab2"
00039FFC <internal_commands.ab2@983> INCLUDE "internal_commands.ab2"
0003A000 <internal_commands.ab2@984> INCLUDE "internal_commands.ab2"
0003A002 <internal_commands.ab2@985> INCLUDE "internal_commands.ab2"
0003A004 <internal_commands.ab2@986> INCLUDE "internal_commands.ab2"
0003A008 <internal_commands.ab2@987> INCLUDE "internal_commands.ab2"
0003A00A <internal_commands.ab2@988> INCLUDE "internal_commands.ab2"
0003A00E <internal_commands.ab2@992> INCLUDE "internal_commands.ab2"
0003A010 <internal_commands.ab2@993> INCLUDE "internal_commands.ab2"
0003A015 <internal_commands.ab2@994> INCLUDE "internal_commands.ab2"
0003A016 <internal_commands.ab2@995> INCLUDE "internal_commands.ab2"
0003A018 <internal_commands.ab2@998> INCLUDE "internal_commands.ab2"
0003A01C <internal_commands.ab2@999> INCLUDE "internal_commands.ab2"
0003A01E <internal_commands.ab2@1000> INCLUDE "internal_commands.ab2"
0003A020 <internal_commands.ab2@1001> INCLUDE "internal_commands.ab2"
0003A024 <internal_commands.ab2@1002> INCLUDE "internal_commands.ab2"
0003A026 <internal_commands.ab2@1003> INCLUDE "internal_commands.ab2"
0003A02A <internal_commands.ab2@1007> INCLUDE "internal_commands.ab2"
0003A02C <internal_commands.ab2@1008> INCLUDE "internal_commands.ab2"
0003A031 <internal_commands.ab2@1009> INCLUDE "internal_commands.ab2"
0003A032 <internal_commands.ab2@1010> INCLUDE "internal_commands.ab2"
0003A034 <internal_commands.ab2@1013> INCLUDE "internal_commands.ab2"
0003A038 <internal_commands.ab2@1014> INCLUDE "internal_commands.ab2"
0003A03A <internal_commands.ab2@1015> INCLUDE "internal_commands.ab2"
0003A03C <internal_commands.ab2@1016> INCLUDE "internal_commands.ab2"
0003A040 <internal_commands.ab2@1017> INCLUDE "internal_commands.ab2"
0003A042 <internal_commands.ab2@1018> INCLUDE "internal_commands.ab2"
0003A046 <internal_commands.ab2@1022> INCLUDE "internal_commands.ab2"
0003A048 <internal_commands.ab2@1023> INCLUDE "internal_commands.ab2"
0003A04D <internal_commands.ab2@1024> INCLUDE "internal_commands.ab2"
0003A04E <internal_commands.ab2@1025> INCLUDE "internal_commands.ab2"
0003A050 <internal_commands.ab2@1028> INCLUDE "internal_commands.ab2"
0003A054 <internal_commands.ab2@1029> INCLUDE "internal_commands.ab2"
0003A056 <internal_commands.ab2@1030> INCLUDE "internal_commands.ab2"
0003A058 <internal_commands.ab2@1031> INCLUDE "internal_commands.ab2"
0003A05C <internal_commands.ab2@1032> INCLUDE "internal_commands.ab2"
0003A05E <internal_commands.ab2@1033> INCLUDE "internal_commands.ab2"
0003A062 <internal_commands.ab2@1037> INCLUDE "internal_commands.ab2"
0003A064 <internal_commands.ab2@1038> INCLUDE "internal_commands.ab2"
0003A069 <internal_commands.ab2@1039> INCLUDE "internal_commands.ab2"
0003A06A <internal_commands.ab2@1040> INCLUDE "internal_commands.ab2"
0003A06C <internal_commands.ab2@1043> INCLUDE "internal_commands.ab2"
0003A070 <internal_commands.ab2@1044> INCLUDE "internal_commands.ab2"
0003A072 <internal_commands.ab2@1045> INCLUDE "internal_commands.ab2"
0003A074 <internal_commands.ab2@1046> INCLUDE "internal_commands.ab2"
0003A078 <internal_commands.ab2@1047> INCLUDE "internal_commands.ab2"
0003A07A <internal_commands.ab2@1048> INCLUDE "internal_commands.ab2"
0003A07E <internal_commands.ab2@1052> INCLUDE "internal_commands.ab2"
0003A080 <internal_commands.ab2@1053> INCLUDE "internal_commands.ab2"
0003A085 <internal_commands.ab2@1054> INCLUDE "internal_commands.ab2"
0003A086 <internal_commands.ab2@1055> INCLUDE "internal_commands.ab2"
0003A088 <internal_commands.ab2@1058> INCLUDE "internal_commands.ab2"
0003A08C <internal_commands.ab2@1059> INCLUDE "internal_commands.ab2"
0003A08E <internal_commands.ab2@1060> INCLUDE "internal_commands.ab2"
0003A090 <internal_commands.ab2@1061> INCLUDE "internal_commands.ab2"
0003A094 <internal_commands.ab2@1062> INCLUDE "internal_commands.ab2"
0003A096 <internal_commands.ab2@1063> INCLUDE "internal_commands.ab2"
0003A09A <internal_commands.ab2@1067> INCLUDE "internal_commands.ab2"
0003A09C <internal_commands.ab2@1068> INCLUDE "internal_commands.ab2"
0003A0A1 <internal_commands.ab2@1069> INCLUDE "internal_commands.ab2"
0003A0A2 <internal_commands.ab2@1070> INCLUDE "internal_commands.ab2"
0003A0A4 <internal_commands.ab2@1073> INCLUDE "internal_commands.ab2"
0003A0A8 <internal_commands.ab2@1074> INCLUDE "internal_commands.ab2"
0003A0AA <internal_commands.ab2@1075> INCLUDE "internal_commands.ab2"
0003A0AC <internal_commands.ab2@1076> INCLUDE "internal_commands.ab2"
0003A0B0 <internal_commands.ab2@1077> INCLUDE "internal_commands.ab2"
0003A0B2 <internal_commands.ab2@1078> INCLUDE "internal_commands.ab2"
0003A0B6 <internal_commands.ab2@1082> INCLUDE "internal_commands.ab2"
0003A0B8 <internal_commands.ab2@1083> INCLUDE "internal_commands.ab2"
0003A0BD <internal_commands.ab2@1084> INCLUDE "internal_commands.ab2"
0003A0BE <internal_commands.ab2@1085> INCLUDE "internal_commands.ab2"
0003A0C0 <internal_commands.ab2@1088> INCLUDE "internal_commands.ab2"
0003A0C4 <internal_commands.ab2@1089> INCLUDE "internal_commands.ab2"
0003A0C6 <internal_commands.ab2@1090> INCLUDE "internal_commands.ab2"
0003A0C8 <internal_commands.ab2@1091> INCLUDE "internal_commands.ab2"
0003A0CC <internal_commands.ab2@1092> INCLUDE "internal_commands.ab2"
0003A0CE <internal_commands.ab2@1093> INCLUDE "internal_commands.ab2"
0003A0D2 <internal_commands.ab2@1097> INCLUDE "internal_commands.ab2"
0003A0D4 <internal_commands.ab2@1098> INCLUDE "internal_commands.ab2"
0003A0D9 <internal_commands.ab2@1099> INCLUDE "internal_commands.ab2"
0003A0DA <internal_commands.ab2@1100> INCLUDE "internal_commands.ab2"
0003A0DC <internal_commands.ab2@1103> INCLUDE "internal_commands.ab2"
0003A0E0 <internal_commands.ab2@1104> INCLUDE "internal_commands.ab2"
0003A0E2 <internal_commands.ab2@1105> INCLUDE "internal_commands.ab2"
0003A0E4 <internal_commands.ab2@1106> INCLUDE "internal_commands.ab2"
0003A0E8 <internal_commands.ab2@1107> INCLUDE "internal_commands.ab2"
0003A0EA <internal_commands.ab2@1108> INCLUDE "internal_commands.ab2"
0003A0EE <internal_commands.ab2@1112> INCLUDE "internal_commands.ab2"
0003A0F0 <internal_commands.ab2@1113> INCLUDE "internal_commands.ab2"
0003A0F5 <internal_commands.ab2@1114> INCLUDE "internal_commands.ab2"
0003A0F6 <internal_commands.ab2@1115> INCLUDE "internal_commands.ab2"
0003A0F8 <internal_commands.ab2@1118> INCLUDE "internal_commands.ab2"
0003A0FC <internal_commands.ab2@1119> INCLUDE "internal_commands.ab2"
0003A0FE <internal_commands.ab2@1120> INCLUDE "internal_commands.ab2"
0003A100 <internal_commands.ab2@1121> INCLUDE "internal_commands.ab2"
0003A104 <internal_commands.ab2@1122> INCLUDE "internal_commands.ab2"
0003A106 <internal_commands.ab2@1123> INCLUDE "internal_commands.ab2"
0003A10A <internal_commands.ab2@1127> INCLUDE "internal_commands.ab2"
0003A10C <internal_commands.ab2@1128> INCLUDE "internal_commands.ab2"
0003A111 <internal_commands.ab2@1129> INCLUDE "internal_commands.ab2"
0003A112 <internal_commands.ab2@1130> INCLUDE "internal_commands.ab2"
0003A114 <internal_commands.ab2@1133> INCLUDE "internal_commands.ab2"
0003A118 <internal_commands.ab2@1134> INCLUDE "internal_commands.ab2"
0003A11A <internal_commands.ab2@1135> INCLUDE "internal_commands.ab2"
0003A11C <internal_commands.ab2@1136> INCLUDE "internal_commands.ab2"
0003A120 <internal_commands.ab2@1137> INCLUDE "internal_commands.ab2"
0003A122 <internal_commands.ab2@1138> INCLUDE "internal_commands.ab2"
0003A126 <internal_commands.ab2@1142> INCLUDE "internal_commands.ab2"
0003A128 <internal_commands.ab2@1143> INCLUDE "internal_commands.ab2"
0003A12D <internal_commands.ab2@1144> INCLUDE "internal_commands.ab2"
0003A12E <internal_commands.ab2@1145> INCLUDE "internal_commands.ab2"
0003A130 <internal_commands.ab2@1148> INCLUDE "internal_commands.ab2"
0003A134 <internal_commands.ab2@1149> INCLUDE "internal_commands.ab2"
0003A136 <internal_commands.ab2@1150> INCLUDE "internal_commands.ab2"
0003A138 <internal_commands.ab2@1151> INCLUDE "internal_commands.ab2"
0003A13C <internal_commands.ab2@1152> INCLUDE "internal_commands.ab2"
0003A13E <internal_commands.ab2@1153> INCLUDE "internal_commands.ab2"
0003A142 <internal_commands.ab2@1157> INCLUDE "internal_commands.ab2"
0003A144 <internal_commands.ab2@1158> INCLUDE "internal_commands.ab2"
0003A149 <internal_commands.ab2@1159> INCLUDE "internal_commands.ab2"
0003A14A <internal_commands.ab2@1160> INCLUDE "internal_commands.ab2"
0003A14C <internal_commands.ab2@1163> INCLUDE "internal_commands.ab2"
0003A150 <internal_commands.ab2@1164> INCLUDE "internal_commands.ab2"
0003A152 <internal_commands.ab2@1165> INCLUDE "internal_commands.ab2"
0003A154 <internal_commands.ab2@1166> INCLUDE "internal_commands.ab2"
0003A158 <internal_commands.ab2@1167> INCLUDE "internal_commands.ab2"
0003A15A <internal_commands.ab2@1168> INCLUDE "internal_commands.ab2"
0003A15E <internal_commands.ab2@1172> INCLUDE "internal_commands.ab2"
0003A160 <internal_commands.ab2@1173> INCLUDE "internal_commands.ab2"
0003A165 <internal_commands.ab2@1174> INCLUDE "internal_commands.ab2"
0003A166 <internal_commands.ab2@1175> INCLUDE "internal_commands.ab2"
0003A168 <internal_commands.ab2@1178> INCLUDE "internal_commands.ab2"
0003A16C <internal_commands.ab2@1179> INCLUDE "internal_commands.ab2"
0003A16E <internal_commands.ab2@1180> INCLUDE "internal_commands.ab2"
0003A170 <internal_commands.ab2@1181> INCLUDE "internal_commands.ab2"
0003A174 <internal_commands.ab2@1182> INCLUDE "internal_commands.ab2"
0003A176 <internal_commands.ab2@1183> INCLUDE "internal_commands.ab2"
0003A17A <internal_commands.ab2@1186> INCLUDE "internal_commands.ab2"
0003A17C <internal_commands.ab2@1187> INCLUDE "internal_commands.ab2"
0003A180 <internal_commands.ab2@1188> INCLUDE "internal_commands.ab2"
0003A181 <internal_commands.ab2@1189> INCLUDE "internal_commands.ab2"
0003A182 <internal_commands.ab2@1190> INCLUDE "internal_commands.ab2"
0003A184 <internal_commands.ab2@1192> INCLUDE "internal_commands.ab2"
0003A188 <internal_commands.ab2@1193> INCLUDE "internal_commands.ab2"
0003A18A <internal_commands.ab2@1194> INCLUDE "internal_commands.ab2"
0003A18C <internal_commands.ab2@1195> INCLUDE "internal_commands.ab2"
0003A190 <internal_commands.ab2@1196> INCLUDE "internal_commands.ab2"
0003A192 <internal_commands.ab2@1197> INCLUDE "internal_commands.ab2"
0003A196 <internal_commands.ab2@1201> INCLUDE "internal_commands.ab2"
0003A198 <internal_commands.ab2@1202> INCLUDE "internal_commands.ab2"
0003A19D <internal_commands.ab2@1203> INCLUDE "internal_commands.ab2"
0003A19E <internal_commands.ab2@1204> INCLUDE "internal_commands.ab2"
0003A1A0 <internal_commands.ab2@1207> INCLUDE "internal_commands.ab2"
0003A1A4 <internal_commands.ab2@1208> INCLUDE "internal_commands.ab2"
0003A1A6 <internal_commands.ab2@1209> INCLUDE "internal_commands.ab2"
0003A1A8 <internal_commands.ab2@1210> INCLUDE "internal_commands.ab2"
0003A1AC <internal_commands.ab2@1211> INCLUDE "internal_commands.ab2"
0003A1AE <internal_commands.ab2@1212> INCLUDE "internal_commands.ab2"
0003A1B2 <internal_commands.ab2@1216> INCLUDE "internal_commands.ab2"
0003A1B4 <internal_commands.ab2@1217> INCLUDE "internal_commands.ab2"
0003A1B8 <internal_commands.ab2@1218> INCLUDE "internal_commands.ab2"
0003A1B9 <internal_commands.ab2@1219> INCLUDE "internal_commands.ab2"
0003A1BA <internal_commands.ab2@1220> INCLUDE "internal_commands.ab2"
0003A1BC <internal_commands.ab2@1222> INCLUDE "internal_commands.ab2"
0003A1C0 <internal_commands.ab2@1223> INCLUDE "internal_commands.ab2"
0003A1C2 <internal_commands.ab2@1224> INCLUDE "internal_commands.ab2"
0003A1C4 <internal_commands.ab2@1225> INCLUDE "internal_commands.ab2"
0003A1C8 <internal_commands.ab2@1226> INCLUDE "internal_commands.ab2"
0003A1CA <internal_commands.ab2@1227> INCLUDE "internal_commands.ab2"
0003A1CE <internal_commands.ab2@1231> INCLUDE "internal_commands.ab2"
0003A1D0 <internal_commands.ab2@1232> INCLUDE "internal_commands.ab2"
0003A1D5 <internal_commands.ab2@1233> INCLUDE "internal_commands.ab2"
0003A1D6 <internal_commands.ab2@1234> INCLUDE "internal_commands.ab2"
0003A1D8 <internal_commands.ab2@1237> INCLUDE "internal_commands.ab2"
0003A1DC <internal_commands.ab2@1238> INCLUDE "internal_commands.ab2"
0003A1DE <internal_commands.ab2@1239> INCLUDE "internal_commands.ab2"
0003A1E0 <internal_commands.ab2@1240> INCLUDE "internal_commands.ab2"
0003A1E4 <internal_commands.ab2@1241> INCLUDE "internal_commands.ab2"
0003A1E6 <internal_commands.ab2@1242> INCLUDE "internal_commands.ab2"
0003A1EA <internal_commands.ab2@1246> INCLUDE "internal_commands.ab2"
0003A1EC <internal_commands.ab2@1247> INCLUDE "internal_commands.ab2"
0003A1F1 <internal_commands.ab2@1248> INCLUDE "internal_commands.ab2"
0003A1F2 <internal_commands.ab2@1249> INCLUDE "internal_commands.ab2"
0003A1F4 <internal_commands.ab2@1252> INCLUDE "internal_commands.ab2"
0003A1F8 <internal_commands.ab2@1253> INCLUDE "internal_commands.ab2"
0003A1FA <internal_commands.ab2@1254> INCLUDE "internal_commands.ab2"
0003A1FC <internal_commands.ab2@1255> INCLUDE "internal_commands.ab2"
0003A200 <internal_commands.ab2@1256> INCLUDE "internal_commands.ab2"
0003A202 <internal_commands.ab2@1257> INCLUDE "internal_commands.ab2"
0003A206 <internal_commands.ab2@1261> INCLUDE "internal_commands.ab2"
0003A208 <internal_commands.ab2@1262> INCLUDE "internal_commands.ab2"
0003A20C <internal_commands.ab2@1263> INCLUDE "internal_commands.ab2"
0003A20D <internal_commands.ab2@1264> INCLUDE "internal_commands.ab2"
0003A20E <internal_commands.ab2@1265> INCLUDE "internal_commands.ab2"
0003A210 <internal_commands.ab2@1267> INCLUDE "internal_commands.ab2"
0003A214 <internal_commands.ab2@1268> INCLUDE "internal_commands.ab2"
0003A216 <internal_commands.ab2@1269> INCLUDE "internal_commands.ab2"
0003A218 <internal_commands.ab2@1270> INCLUDE "internal_commands.ab2"
0003A21C <internal_commands.ab2@1271> INCLUDE "internal_commands.ab2"
0003A21E <internal_commands.ab2@1272> INCLUDE "internal_commands.ab2"
0003A222 <internal_commands.ab2@1276> INCLUDE "internal_commands.ab2"
0003A224 <internal_commands.ab2@1277> INCLUDE "internal_commands.ab2"
0003A229 <internal_commands.ab2@1278> INCLUDE "internal_commands.ab2"
0003A22A <internal_commands.ab2@1279> INCLUDE "internal_commands.ab2"
0003A22C <internal_commands.ab2@1282> INCLUDE "internal_commands.ab2"
0003A230 <internal_commands.ab2@1283> INCLUDE "internal_commands.ab2"
0003A232 <internal_commands.ab2@1284> INCLUDE "internal_commands.ab2"
0003A234 <internal_commands.ab2@1285> INCLUDE "internal_commands.ab2"
0003A238 <internal_commands.ab2@1286> INCLUDE "internal_commands.ab2"
0003A23A <internal_commands.ab2@1287> INCLUDE "internal_commands.ab2"
0003A23E <internal_commands.ab2@1291> INCLUDE "internal_commands.ab2"
0003A240 <internal_commands.ab2@1292> INCLUDE "internal_commands.ab2"
0003A244 <internal_commands.ab2@1293> INCLUDE "internal_commands.ab2"
0003A245 <internal_commands.ab2@1294> INCLUDE "internal_commands.ab2"
0003A246 <internal_commands.ab2@1295> INCLUDE "internal_commands.ab2"
0003A248 <internal_commands.ab2@1297> INCLUDE "internal_commands.ab2"
0003A24C <internal_commands.ab2@1298> INCLUDE "internal_commands.ab2"
0003A24E <internal_commands.ab2@1299> INCLUDE "internal_commands.ab2"
0003A250 <internal_commands.ab2@1300> INCLUDE "internal_commands.ab2"
0003A254 <internal_commands.ab2@1301> INCLUDE "internal_commands.ab2"
0003A256 <internal_commands.ab2@1302> INCLUDE "internal_commands.ab2"
0003A25A <internal_commands.ab2@1306> INCLUDE "internal_commands.ab2"
0003A25C <internal_commands.ab2@1307> INCLUDE "internal_commands.ab2"
0003A260 <internal_commands.ab2@1308> INCLUDE "internal_commands.ab2"
0003A261 <internal_commands.ab2@1309> INCLUDE "internal_commands.ab2"
0003A262 <internal_commands.ab2@1310> INCLUDE "internal_commands.ab2"
0003A264 <internal_commands.ab2@1312> INCLUDE "internal_commands.ab2"
0003A268 <internal_commands.ab2@1313> INCLUDE "internal_commands.ab2"
0003A26A <internal_commands.ab2@1314> INCLUDE "internal_commands.ab2"
0003A26C <internal_commands.ab2@1315> INCLUDE "internal_commands.ab2"
0003A270 <internal_commands.ab2@1316> INCLUDE "internal_commands.ab2"
0003A272 <internal_commands.ab2@1317> INCLUDE "internal_commands.ab2"
0003A276 <internal_commands.ab2@1321> INCLUDE "internal_commands.ab2"
0003A278 <internal_commands.ab2@1322> INCLUDE "internal_commands.ab2"
0003A280 <internal_commands.ab2@1323> INCLUDE "internal_commands.ab2"
0003A281 <internal_commands.ab2@1324> INCLUDE "internal_commands.ab2"
0003A282 <internal_commands.ab2@1325> INCLUDE "internal_commands.ab2"
0003A284 <internal_commands.ab2@1327> INCLUDE "internal_commands.ab2"
0003A288 <internal_commands.ab2@1328> INCLUDE "internal_commands.ab2"
0003A28A <internal_commands.ab2@1329> INCLUDE "internal_commands.ab2"
0003A28C <internal_commands.ab2@1330> INCLUDE "internal_commands.ab2"
0003A290 <internal_commands.ab2@1331> INCLUDE "internal_commands.ab2"
0003A292 <internal_commands.ab2@1332> INCLUDE "internal_commands.ab2"
0003A296 <internal_commands.ab2@1336> INCLUDE "internal_commands.ab2"
0003A298 <internal_commands.ab2@1337> INCLUDE "internal_commands.ab2"
0003A29C <internal_commands.ab2@1338> INCLUDE "internal_commands.ab2"
0003A29D <internal_commands.ab2@1339> INCLUDE "internal_commands.ab2"
0003A29E <internal_commands.ab2@1340> INCLUDE "internal_commands.ab2"
0003A2A0 <internal_commands.ab2@1342> INCLUDE "internal_commands.ab2"
0003A2A4 <internal_commands.ab2@1343> INCLUDE "internal_commands.ab2"
0003A2A6 <internal_commands.ab2@1344> INCLUDE "internal_commands.ab2"
0003A2A8 <internal_commands.ab2@1345> INCLUDE "internal_commands.ab2"
0003A2AC <internal_commands.ab2@1346> INCLUDE "internal_commands.ab2"
0003A2AE <internal_commands.ab2@1347> INCLUDE "internal_commands.ab2"
0003A2B2 <internal_commands.ab2@1351> INCLUDE "internal_commands.ab2"
0003A2B4 <internal_commands.ab2@1352> INCLUDE "internal_commands.ab2"
0003A2B8 <internal_commands.ab2@1353> INCLUDE "internal_commands.ab2"
0003A2B9 <internal_commands.ab2@1354> INCLUDE "internal_commands.ab2"
0003A2BA <internal_commands.ab2@1355> INCLUDE "internal_commands.ab2"
0003A2BC <internal_commands.ab2@1357> INCLUDE "internal_commands.ab2"
0003A2C0 <internal_commands.ab2@1358> INCLUDE "internal_commands.ab2"
0003A2C2 <internal_commands.ab2@1359> INCLUDE "internal_commands.ab2"
0003A2C4 <internal_commands.ab2@1360> INCLUDE "internal_commands.ab2"
0003A2C8 <internal_commands.ab2@1361> INCLUDE "internal_commands.ab2"
0003A2CA <internal_commands.ab2@1362> INCLUDE "internal_commands.ab2"
0003A2CE <internal_commands.ab2@1366> INCLUDE "internal_commands.ab2"
0003A2D0 <internal_commands.ab2@1367> INCLUDE "internal_commands.ab2"
0003A2D4 <internal_commands.ab2@1368> INCLUDE "internal_commands.ab2"
0003A2D5 <internal_commands.ab2@1369> INCLUDE "internal_commands.ab2"
0003A2D6 <internal_commands.ab2@1370> INCLUDE "internal_commands.ab2"
0003A2D8 <internal_commands.ab2@1372> INCLUDE "internal_commands.ab2"
0003A2DC <internal_commands.ab2@1373> INCLUDE "internal_commands.ab2"
0003A2DE <internal_commands.ab2@1374> INCLUDE "internal_commands.ab2"
0003A2E0 <internal_commands.ab2@1375> INCLUDE "internal_commands.ab2"
0003A2E4 <internal_commands.ab2@1376> INCLUDE "internal_commands.ab2"
0003A2E6 <internal_commands.ab2@1377> INCLUDE "internal_commands.ab2"
0003A2EA <internal_commands.ab2@1381> INCLUDE "internal_commands.ab2"
0003A2EC <internal_commands.ab2@1382> INCLUDE "internal_commands.ab2"
0003A2F1 <internal_commands.ab2@1383> INCLUDE "internal_commands.ab2"
0003A2F2 <internal_commands.ab2@1384> INCLUDE "internal_commands.ab2"
0003A2F4 <internal_commands.ab2@1387> INCLUDE "internal_commands.ab2"
0003A2F8 <internal_commands.ab2@1388> INCLUDE "internal_commands.ab2"
0003A2FA <internal_commands.ab2@1389> INCLUDE "internal_commands.ab2"
0003A2FC <internal_commands.ab2@1390> INCLUDE "internal_commands.ab2"
0003A300 <internal_commands.ab2@1391> INCLUDE "internal_commands.ab2"
0003A302 <internal_commands.ab2@1392> INCLUDE "internal_commands.ab2"
0003A306 <internal_commands.ab2@1396> INCLUDE "internal_commands.ab2"
0003A308 <internal_commands.ab2@1397> INCLUDE "internal_commands.ab2"
0003A30C <internal_commands.ab2@1398> INCLUDE "internal_commands.ab2"
0003A30D <internal_commands.ab2@1399> INCLUDE "internal_commands.ab2"
0003A30E <internal_commands.ab2@1400> INCLUDE "internal_commands.ab2"
0003A310 <internal_commands.ab2@1402> INCLUDE "internal_commands.ab2"
0003A314 <internal_commands.ab2@1403> INCLUDE "internal_commands.ab2"
0003A316 <internal_commands.ab2@1404> INCLUDE "internal_commands.ab2"
0003A318 <internal_commands.ab2@1405> INCLUDE "internal_commands.ab2"
0003A31C <internal_commands.ab2@1406> INCLUDE "internal_commands.ab2"
0003A31E <internal_commands.ab2@1407> INCLUDE "internal_commands.ab2"
0003A322 <internal_commands.ab2@1411> INCLUDE "internal_commands.ab2"
0003A324 <internal_commands.ab2@1412> INCLUDE "internal_commands.ab2"
0003A328 <internal_commands.ab2@1413> INCLUDE "internal_commands.ab2"
0003A329 <internal_commands.ab2@1414> INCLUDE "internal_commands.ab2"
0003A32A <internal_commands.ab2@1415> INCLUDE "internal_commands.ab2"
0003A32C <internal_commands.ab2@1417> INCLUDE "internal_commands.ab2"
0003A330 <internal_commands.ab2@1418> INCLUDE "internal_commands.ab2"
0003A332 <internal_commands.ab2@1419> INCLUDE "internal_commands.ab2"
0003A334 <internal_commands.ab2@1420> INCLUDE "internal_commands.ab2"
0003A338 <internal_commands.ab2@1421> INCLUDE "internal_commands.ab2"
0003A33A <internal_commands.ab2@1422> INCLUDE "internal_commands.ab2"
0003A33E <internal_commands.ab2@1426> INCLUDE "internal_commands.ab2"
0003A340 <internal_commands.ab2@1427> INCLUDE "internal_commands.ab2"
0003A345 <internal_commands.ab2@1428> INCLUDE "internal_commands.ab2"
0003A346 <internal_commands.ab2@1429> INCLUDE "internal_commands.ab2"
0003A348 <internal_commands.ab2@1432> INCLUDE "internal_commands.ab2"
0003A34C <internal_commands.ab2@1433> INCLUDE "internal_commands.ab2"
0003A34E <internal_commands.ab2@1434> INCLUDE "internal_commands.ab2"
0003A350 <internal_commands.ab2@1435> INCLUDE "internal_commands.ab2"
0003A354 <internal_commands.ab2@1436> INCLUDE "internal_commands.ab2"
0003A356 <internal_commands.ab2@1437> INCLUDE "internal_commands.ab2"
0003A35A <internal_commands.ab2@1441> INCLUDE "internal_commands.ab2"
0003A35C <internal_commands.ab2@1442> INCLUDE "internal_commands.ab2"
0003A361 <internal_commands.ab2@1443> INCLUDE "internal_commands.ab2"
0003A362 <internal_commands.ab2@1444> INCLUDE "internal_commands.ab2"
0003A364 <internal_commands.ab2@1447> INCLUDE "internal_commands.ab2"
0003A368 <internal_commands.ab2@1448> INCLUDE "internal_commands.ab2"
0003A36A <internal_commands.ab2@1449> INCLUDE "internal_commands.ab2"
0003A36C <internal_commands.ab2@1450> INCLUDE "internal_commands.ab2"
0003A370 <internal_commands.ab2@1451> INCLUDE "internal_commands.ab2"
0003A372 <internal_commands.ab2@1452> INCLUDE "internal_commands.ab2"
0003A376 <internal_commands.ab2@1457> INCLUDE "internal_commands.ab2"
0003A378 <internal_commands.ab2@1458> INCLUDE "internal_commands.ab2"
0003A37E <internal_commands.ab2@1459> INCLUDE "internal_commands.ab2"
0003A37F <internal_commands.ab2@1460> INCLUDE "internal_commands.ab2"
0003A380 <internal_commands.ab2@1461> INCLUDE "internal_commands.ab2"
0003A382 <internal_commands.ab2@1463> INCLUDE "internal_commands.ab2"
0003A386 <internal_commands.ab2@1464> INCLUDE "internal_commands.ab2"
0003A388 <internal_commands.ab2@1465> INCLUDE "internal_commands.ab2"
0003A38A <internal_commands.ab2@1466> INCLUDE "internal_commands.ab2"
0003A38E <internal_commands.ab2@1467> INCLUDE "internal_commands.ab2"
0003A390 <internal_commands.ab2@1468> INCLUDE "internal_commands.ab2"
0003A394 <internal_commands.ab2@1472> INCLUDE "internal_commands.ab2"
0003A396 <internal_commands.ab2@1473> INCLUDE "internal_commands.ab2"
0003A39C <internal_commands.ab2@1474> INCLUDE "internal_commands.ab2"
0003A39D <internal_commands.ab2@1475> INCLUDE "internal_commands.ab2"
0003A39E <internal_commands.ab2@1476> INCLUDE "internal_commands.ab2"
0003A3A0 <internal_commands.ab2@1478> INCLUDE "internal_commands.ab2"
0003A3A4 <internal_commands.ab2@1479> INCLUDE "internal_commands.ab2"
0003A3A6 <internal_commands.ab2@1480> INCLUDE "internal_commands.ab2"
0003A3A8 <internal_commands.ab2@1481> INCLUDE "internal_commands.ab2"
0003A3AC <internal_commands.ab2@1482> INCLUDE "internal_commands.ab2"
0003A3AE <internal_commands.ab2@1483> INCLUDE "internal_commands.ab2"
0003A3B2 <internal_commands.ab2@1487> INCLUDE "internal_commands.ab2"
0003A3B4 <internal_commands.ab2@1488> INCLUDE "internal_commands.ab2"
0003A3BA <internal_commands.ab2@1489> INCLUDE "internal_commands.ab2"
0003A3BB <internal_commands.ab2@1490> INCLUDE "internal_commands.ab2"
0003A3BC <internal_commands.ab2@1491> INCLUDE "internal_commands.ab2"
0003A3BE <internal_commands.ab2@1493> INCLUDE "internal_commands.ab2"
0003A3C2 <internal_commands.ab2@1494> INCLUDE "internal_commands.ab2"
0003A3C4 <internal_commands.ab2@1495> INCLUDE "internal_commands.ab2"
0003A3C6 <internal_commands.ab2@1496> INCLUDE "internal_commands.ab2"
0003A3CA <internal_commands.ab2@1497> INCLUDE "internal_commands.ab2"
0003A3CC <internal_commands.ab2@1498> INCLUDE "internal_commands.ab2"
0003A3D0 <internal_commands.ab2@1502> INCLUDE "internal_commands.ab2"
0003A3D2 <internal_commands.ab2@1503> INCLUDE "internal_commands.ab2"
0003A3D7 <internal_commands.ab2@1504> INCLUDE "internal_commands.ab2"
0003A3D8 <internal_commands.ab2@1505> INCLUDE "internal_commands.ab2"
0003A3DA <internal_commands.ab2@1508> INCLUDE "internal_commands.ab2"
0003A3DE <internal_commands.ab2@1509> INCLUDE "internal_commands.ab2"
0003A3E0 <internal_commands.ab2@1510> INCLUDE "internal_commands.ab2"
0003A3E2 <internal_commands.ab2@1511> INCLUDE "internal_commands.ab2"
0003A3E6 <internal_commands.ab2@1512> INCLUDE "internal_commands.ab2"
0003A3E8 <internal_commands.ab2@1513> INCLUDE "internal_commands.ab2"
0003A3EC <internal_commands.ab2@1517> INCLUDE "internal_commands.ab2"
0003A3EE <internal_commands.ab2@1518> INCLUDE "internal_commands.ab2"
0003A3F3 <internal_commands.ab2@1519> INCLUDE "internal_commands.ab2"
0003A3F4 <internal_commands.ab2@1520> INCLUDE "internal_commands.ab2"
0003A3F6 <internal_commands.ab2@1523> INCLUDE "internal_commands.ab2"
0003A3FA <internal_commands.ab2@1524> INCLUDE "internal_commands.ab2"
0003A3FC <internal_commands.ab2@1525> INCLUDE "internal_commands.ab2"
0003A3FE <internal_commands.ab2@1526> INCLUDE "internal_commands.ab2"
0003A402 <internal_commands.ab2@1527> INCLUDE "internal_commands.ab2"
0003A404 <internal_commands.ab2@1528> INCLUDE "internal_commands.ab2"
0003A408 <internal_commands.ab2@1532> INCLUDE "internal_commands.ab2"
0003A40A <internal_commands.ab2@1533> INCLUDE "internal_commands.ab2"
0003A40F <internal_commands.ab2@1534> INCLUDE "internal_commands.ab2"
0003A410 <internal_commands.ab2@1535> INCLUDE "internal_commands.ab2"
0003A412 <internal_commands.ab2@1538> INCLUDE "internal_commands.ab2"
0003A416 <internal_commands.ab2@1539> INCLUDE "internal_commands.ab2"
0003A418 <internal_commands.ab2@1540> INCLUDE "internal_commands.ab2"
0003A41A <internal_commands.ab2@1541> INCLUDE "internal_commands.ab2"
0003A41E <internal_commands.ab2@1542> INCLUDE "internal_commands.ab2"
0003A420 <internal_commands.ab2@1543> INCLUDE "internal_commands.ab2"
0003A424 <internal_commands.ab2@1547> INCLUDE "internal_commands.ab2"
0003A426 <internal_commands.ab2@1548> INCLUDE "internal_commands.ab2"
0003A42A <internal_commands.ab2@1549> INCLUDE "internal_commands.ab2"
0003A42B <internal_commands.ab2@1550> INCLUDE "internal_commands.ab2"
0003A42C <internal_commands.ab2@1551> INCLUDE "internal_commands.ab2"
0003A42E <internal_commands.ab2@1553> INCLUDE "internal_commands.ab2"
0003A432 <internal_commands.ab2@1554> INCLUDE "internal_commands.ab2"
0003A434 <internal_commands.ab2@1555> INCLUDE "internal_commands.ab2"
0003A436 <internal_commands.ab2@1556> INCLUDE "internal_commands.ab2"
0003A43A <internal_commands.ab2@1557> INCLUDE "internal_commands.ab2"
0003A43C <internal_commands.ab2@1558> INCLUDE "internal_commands.ab2"
0003A440 <internal_commands.ab2@1562> INCLUDE "internal_commands.ab2"
0003A442 <internal_commands.ab2@1563> INCLUDE "internal_commands.ab2"
0003A447 <internal_commands.ab2@1564> INCLUDE "internal_commands.ab2"
0003A448 <internal_commands.ab2@1565> INCLUDE "internal_commands.ab2"
0003A44A <internal_commands.ab2@1568> INCLUDE "internal_commands.ab2"
0003A44E <internal_commands.ab2@1569> INCLUDE "internal_commands.ab2"
0003A450 <internal_commands.ab2@1570> INCLUDE "internal_commands.ab2"
0003A452 <internal_commands.ab2@1571> INCLUDE "internal_commands.ab2"
0003A456 <internal_commands.ab2@1572> INCLUDE "internal_commands.ab2"
0003A458 <internal_commands.ab2@1573> INCLUDE "internal_commands.ab2"
0003A45C <internal_commands.ab2@1577> INCLUDE "internal_commands.ab2"
0003A45E <internal_commands.ab2@1578> INCLUDE "internal_commands.ab2"
0003A462 <internal_commands.ab2@1579> INCLUDE "internal_commands.ab2"
0003A463 <internal_commands.ab2@1580> INCLUDE "internal_commands.ab2"
0003A464 <internal_commands.ab2@1581> INCLUDE "internal_commands.ab2"
0003A466 <internal_commands.ab2@1583> INCLUDE "internal_commands.ab2"
0003A46A <internal_commands.ab2@1584> INCLUDE "internal_commands.ab2"
0003A46C <internal_commands.ab2@1585> INCLUDE "internal_commands.ab2"
0003A46E <internal_commands.ab2@1586> INCLUDE "internal_commands.ab2"
0003A472 <internal_commands.ab2@1587> INCLUDE "internal_commands.ab2"
0003A474 <internal_commands.ab2@1588> INCLUDE "internal_commands.ab2"
0003A478 <internal_commands.ab2@1592> INCLUDE "internal_commands.ab2"
0003A47A <internal_commands.ab2@1593> INCLUDE "internal_commands.ab2"
0003A47E <internal_commands.ab2@1594> INCLUDE "internal_commands.ab2"
0003A47F <internal_commands.ab2@1595> INCLUDE "internal_commands.ab2"
0003A480 <internal_commands.ab2@1596> INCLUDE "internal_commands.ab2"
0003A482 <internal_commands.ab2@1598> INCLUDE "internal_commands.ab2"
0003A486 <internal_commands.ab2@1599> INCLUDE "internal_commands.ab2"
0003A488 <internal_commands.ab2@1600> INCLUDE "internal_commands.ab2"
0003A48A <internal_commands.ab2@1601> INCLUDE "internal_commands.ab2"
0003A48E <internal_commands.ab2@1602> INCLUDE "internal_commands.ab2"
0003A490 <internal_commands.ab2@1603> INCLUDE "internal_commands.ab2"
0003A494 <internal_commands.ab2@1607> INCLUDE "internal_commands.ab2"
0003A496 <internal_commands.ab2@1608> INCLUDE "internal_commands.ab2"
0003A499 <internal_commands.ab2@1609> INCLUDE "internal_commands.ab2"
0003A49A <internal_commands.ab2@1610> INCLUDE "internal_commands.ab2"
0003A49C <internal_commands.ab2@1613> INCLUDE "internal_commands.ab2"
0003A4A0 <internal_commands.ab2@1614> INCLUDE "internal_commands.ab2"
0003A4A2 <internal_commands.ab2@1615> INCLUDE "internal_commands.ab2"
0003A4A4 <internal_commands.ab2@1616> INCLUDE "internal_commands.ab2"
0003A4A8 <internal_commands.ab2@1617> INCLUDE "internal_commands.ab2"
0003A4AA <internal_commands.ab2@1618> INCLUDE "internal_commands.ab2"
0003A4AE <internal_commands.ab2@1622> INCLUDE "internal_commands.ab2"
0003A4B0 <internal_commands.ab2@1623> INCLUDE "internal_commands.ab2"
0003A4B4 <internal_commands.ab2@1624> INCLUDE "internal_commands.ab2"
0003A4B5 <internal_commands.ab2@1625> INCLUDE "internal_commands.ab2"
0003A4B6 <internal_commands.ab2@1626> INCLUDE "internal_commands.ab2"
0003A4B8 <internal_commands.ab2@1628> INCLUDE "internal_commands.ab2"
0003A4BC <internal_commands.ab2@1629> INCLUDE "internal_commands.ab2"
0003A4BE <internal_commands.ab2@1630> INCLUDE "internal_commands.ab2"
0003A4C0 <internal_commands.ab2@1631> INCLUDE "internal_commands.ab2"
0003A4C4 <internal_commands.ab2@1632> INCLUDE "internal_commands.ab2"
0003A4C6 <internal_commands.ab2@1633> INCLUDE "internal_commands.ab2"
0003A4CA <internal_commands.ab2@1637> INCLUDE "internal_commands.ab2"
0003A4CC <internal_commands.ab2@1638> INCLUDE "internal_commands.ab2"
0003A4D0 <internal_commands.ab2@1639> INCLUDE "internal_commands.ab2"
0003A4D1 <internal_commands.ab2@1640> INCLUDE "internal_commands.ab2"
0003A4D2 <internal_commands.ab2@1641> INCLUDE "internal_commands.ab2"
0003A4D4 <internal_commands.ab2@1643> INCLUDE "internal_commands.ab2"
0003A4D8 <internal_commands.ab2@1644> INCLUDE "internal_commands.ab2"
0003A4DA <internal_commands.ab2@1645> INCLUDE "internal_commands.ab2"
0003A4DC <internal_commands.ab2@1646> INCLUDE "internal_commands.ab2"
0003A4E0 <internal_commands.ab2@1647> INCLUDE "internal_commands.ab2"
0003A4E2 <internal_commands.ab2@1648> INCLUDE "internal_commands.ab2"
0003A4E6 <internal_commands.ab2@1652> INCLUDE "internal_commands.ab2"
0003A4E8 <internal_commands.ab2@1653> INCLUDE "internal_commands.ab2"
0003A4EE <internal_commands.ab2@1654> INCLUDE "internal_commands.ab2"
0003A4EF <internal_commands.ab2@1655> INCLUDE "internal_commands.ab2"
0003A4F0 <internal_commands.ab2@1656> INCLUDE "internal_commands.ab2"
0003A4F2 <internal_commands.ab2@1658> INCLUDE "internal_commands.ab2"
0003A4F6 <internal_commands.ab2@1659> INCLUDE "internal_commands.ab2"
0003A4F8 <internal_commands.ab2@1660> INCLUDE "internal_commands.ab2"
0003A4FA <internal_commands.ab2@1661> INCLUDE "internal_commands.ab2"
0003A4FE <internal_commands.ab2@1662> INCLUDE "internal_commands.ab2"
0003A500 <internal_commands.ab2@1663> INCLUDE "internal_commands.ab2"
0003A504 <internal_commands.ab2@1667> INCLUDE "internal_commands.ab2"
0003A506 <internal_commands.ab2@1668> INCLUDE "internal_commands.ab2"
0003A50A <internal_commands.ab2@1669> INCLUDE "internal_commands.ab2"
0003A50B <internal_commands.ab2@1670> INCLUDE "internal_commands.ab2"
0003A50C <internal_commands.ab2@1671> INCLUDE "internal_commands.ab2"
0003A50E <internal_commands.ab2@1673> INCLUDE "internal_commands.ab2"
0003A512 <internal_commands.ab2@1674> INCLUDE "internal_commands.ab2"
0003A514 <internal_commands.ab2@1675> INCLUDE "internal_commands.ab2"
0003A516 <internal_commands.ab2@1676> INCLUDE "internal_commands.ab2"
0003A51A <internal_commands.ab2@1677> INCLUDE "internal_commands.ab2"
0003A51C <internal_commands.ab2@1678> INCLUDE "internal_commands.ab2"
0003A520 <internal_commands.ab2@1682> INCLUDE "internal_commands.ab2"
0003A522 <internal_commands.ab2@1683> INCLUDE "internal_commands.ab2"
0003A526 <internal_commands.ab2@1684> INCLUDE "internal_commands.ab2"
0003A527 <internal_commands.ab2@1685> INCLUDE "internal_commands.ab2"
0003A528 <internal_commands.ab2@1686> INCLUDE "internal_commands.ab2"
0003A52A <internal_commands.ab2@1688> INCLUDE "internal_commands.ab2"
0003A52E <internal_commands.ab2@1689> INCLUDE "internal_commands.ab2"
0003A530 <internal_commands.ab2@1690> INCLUDE "internal_commands.ab2"
0003A532 <internal_commands.ab2@1691> INCLUDE "internal_commands.ab2"
0003A536 <internal_commands.ab2@1692> INCLUDE "internal_commands.ab2"
0003A538 <internal_commands.ab2@1693> INCLUDE "internal_commands.ab2"
0003A53C <internal_commands.ab2@1697> INCLUDE "internal_commands.ab2"
0003A53E <internal_commands.ab2@1698> INCLUDE "internal_commands.ab2"
0003A543 <internal_commands.ab2@1699> INCLUDE "internal_commands.ab2"
0003A544 <internal_commands.ab2@1700> INCLUDE "internal_commands.ab2"
0003A546 <internal_commands.ab2@1703> INCLUDE "internal_commands.ab2"
0003A54A <internal_commands.ab2@1704> INCLUDE "internal_commands.ab2"
0003A54C <internal_commands.ab2@1705> INCLUDE "internal_commands.ab2"
0003A54E <internal_commands.ab2@1706> INCLUDE "internal_commands.ab2"
0003A552 <internal_commands.ab2@1707> INCLUDE "internal_commands.ab2"
0003A554 <internal_commands.ab2@1708> INCLUDE "internal_commands.ab2"
0003A558 <internal_commands.ab2@1712> INCLUDE "internal_commands.ab2"
0003A55A <internal_commands.ab2@1713> INCLUDE "internal_commands.ab2"
0003A55F <internal_commands.ab2@1714> INCLUDE "internal_commands.ab2"
0003A560 <internal_commands.ab2@1715> INCLUDE "internal_commands.ab2"
0003A562 <internal_commands.ab2@1718> INCLUDE "internal_commands.ab2"
0003A566 <internal_commands.ab2@1719> INCLUDE "internal_commands.ab2"
0003A568 <internal_commands.ab2@1720> INCLUDE "internal_commands.ab2"
0003A56A <internal_commands.ab2@1721> INCLUDE "internal_commands.ab2"
0003A56E <internal_commands.ab2@1722> INCLUDE "internal_commands.ab2"
0003A570 <internal_commands.ab2@1723> INCLUDE "internal_commands.ab2"
0003A574 <internal_commands.ab2@1727> INCLUDE "internal_commands.ab2"
0003A576 <internal_commands.ab2@1728> INCLUDE "internal_commands.ab2"
0003A57A <internal_commands.ab2@1729> INCLUDE "internal_commands.ab2"
0003A57B <internal_commands.ab2@1730> INCLUDE "internal_commands.ab2"
0003A57C <internal_commands.ab2@1731> INCLUDE "internal_commands.ab2"
0003A57E <internal_commands.ab2@1733> INCLUDE "internal_commands.ab2"
0003A582 <internal_commands.ab2@1734> INCLUDE "internal_commands.ab2"
0003A584 <internal_commands.ab2@1735> INCLUDE "internal_commands.ab2"
0003A586 <internal_commands.ab2@1736> INCLUDE "internal_commands.ab2"
0003A58A <internal_commands.ab2@1737> INCLUDE "internal_commands.ab2"
0003A58C <internal_commands.ab2@1738> INCLUDE "internal_commands.ab2"
0003A590 <internal_commands.ab2@1742> INCLUDE "internal_commands.ab2"
0003A592 <internal_commands.ab2@1743> INCLUDE "internal_commands.ab2"
0003A596 <internal_commands.ab2@1744> INCLUDE "internal_commands.ab2"
0003A597 <internal_commands.ab2@1745> INCLUDE "internal_commands.ab2"
0003A598 <internal_commands.ab2@1746> INCLUDE "internal_commands.ab2"
0003A59A <internal_commands.ab2@1748> INCLUDE "internal_commands.ab2"
0003A59E <internal_commands.ab2@1749> INCLUDE "internal_commands.ab2"
0003A5A0 <internal_commands.ab2@1750> INCLUDE "internal_commands.ab2"
0003A5A2 <internal_commands.ab2@1751> INCLUDE "internal_commands.ab2"
0003A5A6 <internal_commands.ab2@1752> INCLUDE "internal_commands.ab2"
0003A5A8 <internal_commands.ab2@1753> INCLUDE "internal_commands.ab2"
0003A5AC <internal_commands.ab2@1757> INCLUDE "internal_commands.ab2"
0003A5AE <internal_commands.ab2@1758> INCLUDE "internal_commands.ab2"
0003A5B2 <internal_commands.ab2@1759> INCLUDE "internal_commands.ab2"
0003A5B3 <internal_commands.ab2@1760> INCLUDE "internal_commands.ab2"
0003A5B4 <internal_commands.ab2@1761> INCLUDE "internal_commands.ab2"
0003A5B6 <internal_commands.ab2@1763> INCLUDE "internal_commands.ab2"
0003A5BA <internal_commands.ab2@1764> INCLUDE "internal_commands.ab2"
0003A5BC <internal_commands.ab2@1765> INCLUDE "internal_commands.ab2"
0003A5BE <internal_commands.ab2@1766> INCLUDE "internal_commands.ab2"
0003A5C2 <internal_commands.ab2@1767> INCLUDE "internal_commands.ab2"
0003A5C4 <internal_commands.ab2@1768> INCLUDE "internal_commands.ab2"
0003A5C8 <internal_commands.ab2@1772> INCLUDE "internal_commands.ab2"
0003A5CA <internal_commands.ab2@1773> INCLUDE "internal_commands.ab2"
0003A5CF <internal_commands.ab2@1774> INCLUDE "internal_commands.ab2"
0003A5D0 <internal_commands.ab2@1775> INCLUDE "internal_commands.ab2"
0003A5D2 <internal_commands.ab2@1778> INCLUDE "internal_commands.ab2"
0003A5D6 <internal_commands.ab2@1779> INCLUDE "internal_commands.ab2"
0003A5D8 <internal_commands.ab2@1780> INCLUDE "internal_commands.ab2"
0003A5DA <internal_commands.ab2@1781> INCLUDE "internal_commands.ab2"
0003A5DE <internal_commands.ab2@1782> INCLUDE "internal_commands.ab2"
0003A5E0 <internal_commands.ab2@1783> INCLUDE "internal_commands.ab2"
0003A5E4 <internal_commands.ab2@1787> INCLUDE "internal_commands.ab2"
0003A5E6 <internal_commands.ab2@1788> INCLUDE "internal_commands.ab2"
0003A5EA <internal_commands.ab2@1789> INCLUDE "internal_commands.ab2"
0003A5EB <internal_commands.ab2@1790> INCLUDE "internal_commands.ab2"
0003A5EC <internal_commands.ab2@1791> INCLUDE "internal_commands.ab2"
0003A5EE <internal_commands.ab2@1793> INCLUDE "internal_commands.ab2"
0003A5F2 <internal_commands.ab2@1794> INCLUDE "internal_commands.ab2"
0003A5F4 <internal_commands.ab2@1795> INCLUDE "internal_commands.ab2"
0003A5F6 <internal_commands.ab2@1796> INCLUDE "internal_commands.ab2"
0003A5FA <internal_commands.ab2@1797> INCLUDE "internal_commands.ab2"
0003A5FC <internal_commands.ab2@1798> INCLUDE "internal_commands.ab2"
0003A600 <internal_commands.ab2@1802> INCLUDE "internal_commands.ab2"
0003A602 <internal_commands.ab2@1803> INCLUDE "internal_commands.ab2"
0003A606 <internal_commands.ab2@1804> INCLUDE "internal_commands.ab2"
0003A607 <internal_commands.ab2@1805> INCLUDE "internal_commands.ab2"
0003A608 <internal_commands.ab2@1806> INCLUDE "internal_commands.ab2"
0003A60A <internal_commands.ab2@1808> INCLUDE "internal_commands.ab2"
0003A60E <internal_commands.ab2@1809> INCLUDE "internal_commands.ab2"
0003A610 <internal_commands.ab2@1810> INCLUDE "internal_commands.ab2"
0003A612 <internal_commands.ab2@1811> INCLUDE "internal_commands.ab2"
0003A616 <internal_commands.ab2@1812> INCLUDE "internal_commands.ab2"
0003A618 <internal_commands.ab2@1813> INCLUDE "internal_commands.ab2"
0003A61C <internal_commands.ab2@1817> INCLUDE "internal_commands.ab2"
0003A61E <internal_commands.ab2@1818> INCLUDE "internal_commands.ab2"
0003A622 <internal_commands.ab2@1819> INCLUDE "internal_commands.ab2"
0003A623 <internal_commands.ab2@1820> INCLUDE "internal_commands.ab2"
0003A624 <internal_commands.ab2@1821> INCLUDE "internal_commands.ab2"
0003A626 <internal_commands.ab2@1823> INCLUDE "internal_commands.ab2"
0003A62A <internal_commands.ab2@1824> INCLUDE "internal_commands.ab2"
0003A62C <internal_commands.ab2@1825> INCLUDE "internal_commands.ab2"
0003A62E <internal_commands.ab2@1826> INCLUDE "internal_commands.ab2"
0003A632 <internal_commands.ab2@1827> INCLUDE "internal_commands.ab2"
0003A634 <internal_commands.ab2@1828> INCLUDE "internal_commands.ab2"
0003A638 <internal_commands.ab2@1832> INCLUDE "internal_commands.ab2"
0003A63A <internal_commands.ab2@1833> INCLUDE "internal_commands.ab2"
0003A63E <internal_commands.ab2@1834> INCLUDE "internal_commands.ab2"
0003A63F <internal_commands.ab2@1835> INCLUDE "internal_commands.ab2"
0003A640 <internal_commands.ab2@1836> INCLUDE "internal_commands.ab2"
0003A642 <internal_commands.ab2@1838> INCLUDE "internal_commands.ab2"
0003A646 <internal_commands.ab2@1839> INCLUDE "internal_commands.ab2"
0003A648 <internal_commands.ab2@1840> INCLUDE "internal_commands.ab2"
0003A64A <internal_commands.ab2@1841> INCLUDE "internal_commands.ab2"
0003A64E <internal_commands.ab2@1842> INCLUDE "internal_commands.ab2"
0003A650 <internal_commands.ab2@1843> INCLUDE "internal_commands.ab2"
0003A654 <internal_commands.ab2@1847> INCLUDE "internal_commands.ab2"
0003A656 <internal_commands.ab2@1848> INCLUDE "internal_commands.ab2"
0003A65A <internal_commands.ab2@1849> INCLUDE "internal_commands.ab2"
0003A65B <internal_commands.ab2@1850> INCLUDE "internal_commands.ab2"
0003A65C <internal_commands.ab2@1851> INCLUDE "internal_commands.ab2"
0003A65E <internal_commands.ab2@1853> INCLUDE "internal_commands.ab2"
0003A662 <internal_commands.ab2@1854> INCLUDE "internal_commands.ab2"
0003A664 <internal_commands.ab2@1855> INCLUDE "internal_commands.ab2"
0003A666 <internal_commands.ab2@1856> INCLUDE "internal_commands.ab2"
0003A66A <internal_commands.ab2@1857> INCLUDE "internal_commands.ab2"
0003A66C <internal_commands.ab2@1858> INCLUDE "internal_commands.ab2"
0003A670 <internal_commands.ab2@1862> INCLUDE "internal_commands.ab2"
0003A672 <internal_commands.ab2@1863> INCLUDE "internal_commands.ab2"
0003A676 <internal_commands.ab2@1864> INCLUDE "internal_commands.ab2"
0003A677 <internal_commands.ab2@1865> INCLUDE "internal_commands.ab2"
0003A678 <internal_commands.ab2@1866> INCLUDE "internal_commands.ab2"
0003A67A <internal_commands.ab2@1868> INCLUDE "internal_commands.ab2"
0003A67E <internal_commands.ab2@1869> INCLUDE "internal_commands.ab2"
0003A680 <internal_commands.ab2@1870> INCLUDE "internal_commands.ab2"
0003A682 <internal_commands.ab2@1871> INCLUDE "internal_commands.ab2"
0003A686 <internal_commands.ab2@1872> INCLUDE "internal_commands.ab2"
0003A688 <internal_commands.ab2@1873> INCLUDE "internal_commands.ab2"
0003A68C <internal_commands.ab2@1877> INCLUDE "internal_commands.ab2"
0003A68E <internal_commands.ab2@1878> INCLUDE "internal_commands.ab2"
0003A692 <internal_commands.ab2@1879> INCLUDE "internal_commands.ab2"
0003A693 <internal_commands.ab2@1880> INCLUDE "internal_commands.ab2"
0003A694 <internal_commands.ab2@1881> INCLUDE "internal_commands.ab2"
0003A696 <internal_commands.ab2@1883> INCLUDE "internal_commands.ab2"
0003A69A <internal_commands.ab2@1884> INCLUDE "internal_commands.ab2"
0003A69C <internal_commands.ab2@1885> INCLUDE "internal_commands.ab2"
0003A69E <internal_commands.ab2@1886> INCLUDE "internal_commands.ab2"
0003A6A2 <internal_commands.ab2@1887> INCLUDE "internal_commands.ab2"
0003A6A4 <internal_commands.ab2@1888> INCLUDE "internal_commands.ab2"
0003A6A8 <internal_commands.ab2@1892> INCLUDE "internal_commands.ab2"
0003A6AA <internal_commands.ab2@1893> INCLUDE "internal_commands.ab2"
0003A6AE <internal_commands.ab2@1894> INCLUDE "internal_commands.ab2"
0003A6AF <internal_commands.ab2@1895> INCLUDE "internal_commands.ab2"
0003A6B0 <internal_commands.ab2@1896> INCLUDE "internal_commands.ab2"
0003A6B2 <internal_commands.ab2@1898> INCLUDE "internal_commands.ab2"
0003A6B6 <internal_commands.ab2@1899> INCLUDE "internal_commands.ab2"
0003A6B8 <internal_commands.ab2@1900> INCLUDE "internal_commands.ab2"
0003A6BA <internal_commands.ab2@1901> INCLUDE "internal_commands.ab2"
0003A6BE <internal_commands.ab2@1902> INCLUDE "internal_commands.ab2"
0003A6C0 <internal_commands.ab2@1903> INCLUDE "internal_commands.ab2"
0003A6C4 <internal_commands.ab2@1907> INCLUDE "internal_commands.ab2"
0003A6C6 <internal_commands.ab2@1908> INCLUDE "internal_commands.ab2"
0003A6CA <internal_commands.ab2@1909> INCLUDE "internal_commands.ab2"
0003A6CB <internal_commands.ab2@1910> INCLUDE "internal_commands.ab2"
0003A6CC <internal_commands.ab2@1911> INCLUDE "internal_commands.ab2"
0003A6CE <internal_commands.ab2@1913> INCLUDE "internal_commands.ab2"
0003A6D2 <internal_commands.ab2@1914> INCLUDE "internal_commands.ab2"
0003A6D4 <internal_commands.ab2@1915> INCLUDE "internal_commands.ab2"
0003A6D6 <internal_commands.ab2@1916> INCLUDE "internal_commands.ab2"
0003A6DA <internal_commands.ab2@1917> INCLUDE "internal_commands.ab2"
0003A6DC <internal_commands.ab2@1918> INCLUDE "internal_commands.ab2"
0003A6E0 <internal_commands.ab2@1922> INCLUDE "internal_commands.ab2"
0003A6E2 <internal_commands.ab2@1923> INCLUDE "internal_commands.ab2"
0003A6E6 <internal_commands.ab2@1924> INCLUDE "internal_commands.ab2"
0003A6E7 <internal_commands.ab2@1925> INCLUDE "internal_commands.ab2"
0003A6E8 <internal_commands.ab2@1926> INCLUDE "internal_commands.ab2"
0003A6EA <internal_commands.ab2@1928> INCLUDE "internal_commands.ab2"
0003A6EE <internal_commands.ab2@1929> INCLUDE "internal_commands.ab2"
0003A6F0 <internal_commands.ab2@1930> INCLUDE "internal_commands.ab2"
0003A6F2 <internal_commands.ab2@1931> INCLUDE "internal_commands.ab2"
0003A6F6 <internal_commands.ab2@1932> INCLUDE "internal_commands.ab2"
0003A6F8 <internal_commands.ab2@1933> INCLUDE "internal_commands.ab2"
0003A6FC <internal_commands.ab2@1937> INCLUDE "internal_commands.ab2"
0003A6FE <internal_commands.ab2@1938> INCLUDE "internal_commands.ab2"
0003A702 <internal_commands.ab2@1939> INCLUDE "internal_commands.ab2"
0003A703 <internal_commands.ab2@1940> INCLUDE "internal_commands.ab2"
0003A704 <internal_commands.ab2@1941> INCLUDE "internal_commands.ab2"
0003A706 <internal_commands.ab2@1943> INCLUDE "internal_commands.ab2"
0003A70A <internal_commands.ab2@1944> INCLUDE "internal_commands.ab2"
0003A70C <internal_commands.ab2@1945> INCLUDE "internal_commands.ab2"
0003A70E <internal_commands.ab2@1946> INCLUDE "internal_commands.ab2"
0003A712 <internal_commands.ab2@1947> INCLUDE "internal_commands.ab2"
0003A714 <internal_commands.ab2@1948> INCLUDE "internal_commands.ab2"
0003A718 <internal_commands.ab2@1952> INCLUDE "internal_commands.ab2"
0003A71A <internal_commands.ab2@1953> INCLUDE "internal_commands.ab2"
0003A71E <internal_commands.ab2@1954> INCLUDE "internal_commands.ab2"
0003A71F <internal_commands.ab2@1955> INCLUDE "internal_commands.ab2"
0003A720 <internal_commands.ab2@1956> INCLUDE "internal_commands.ab2"
0003A722 <internal_commands.ab2@1958> INCLUDE "internal_commands.ab2"
0003A726 <internal_commands.ab2@1959> INCLUDE "internal_commands.ab2"
0003A728 <internal_commands.ab2@1960> INCLUDE "internal_commands.ab2"
0003A72A <internal_commands.ab2@1961> INCLUDE "internal_commands.ab2"
0003A72E <internal_commands.ab2@1962> INCLUDE "internal_commands.ab2"
0003A730 <internal_commands.ab2@1963> INCLUDE "internal_commands.ab2"
0003A734 <internal_commands.ab2@1967> INCLUDE "internal_commands.ab2"
0003A736 <internal_commands.ab2@1968> INCLUDE "internal_commands.ab2"
0003A73A <internal_commands.ab2@1969> INCLUDE "internal_commands.ab2"
0003A73B <internal_commands.ab2@1970> INCLUDE "internal_commands.ab2"
0003A73C <internal_commands.ab2@1971> INCLUDE "internal_commands.ab2"
0003A73E <internal_commands.ab2@1973> INCLUDE "internal_commands.ab2"
0003A742 <internal_commands.ab2@1974> INCLUDE "internal_commands.ab2"
0003A744 <internal_commands.ab2@1975> INCLUDE "internal_commands.ab2"
0003A746 <internal_commands.ab2@1976> INCLUDE "internal_commands.ab2"
0003A74A <internal_commands.ab2@1977> INCLUDE "internal_commands.ab2"
0003A74C <internal_commands.ab2@1978> INCLUDE "internal_commands.ab2"
0003A750 <internal_commands.ab2@1982> INCLUDE "internal_commands.ab2"
0003A752 <internal_commands.ab2@1983> INCLUDE "internal_commands.ab2"
0003A756 <internal_commands.ab2@1984> INCLUDE "internal_commands.ab2"
0003A757 <internal_commands.ab2@1985> INCLUDE "internal_commands.ab2"
0003A758 <internal_commands.ab2@1986> INCLUDE "internal_commands.ab2"
0003A75A <internal_commands.ab2@1988> INCLUDE "internal_commands.ab2"
0003A75E <internal_commands.ab2@1989> INCLUDE "internal_commands.ab2"
0003A760 <internal_commands.ab2@1990> INCLUDE "internal_commands.ab2"
0003A762 <internal_commands.ab2@1991> INCLUDE "internal_commands.ab2"
0003A766 <internal_commands.ab2@1992> INCLUDE "internal_commands.ab2"
0003A768 <internal_commands.ab2@1993> INCLUDE "internal_commands.ab2"
0003A76C <internal_commands.ab2@1997> INCLUDE "internal_commands.ab2"
0003A76E <internal_commands.ab2@1998> INCLUDE "internal_commands.ab2"
0003A771 <internal_commands.ab2@1999> INCLUDE "internal_commands.ab2"
0003A772 <internal_commands.ab2@2000> INCLUDE "internal_commands.ab2"
0003A774 <internal_commands.ab2@2003> INCLUDE "internal_commands.ab2"
0003A778 <internal_commands.ab2@2004> INCLUDE "internal_commands.ab2"
0003A77A <internal_commands.ab2@2005> INCLUDE "internal_commands.ab2"
0003A77C <internal_commands.ab2@2006> INCLUDE "internal_commands.ab2"
0003A780 <internal_commands.ab2@2007> INCLUDE "internal_commands.ab2"
0003A782 <internal_commands.ab2@2008> INCLUDE "internal_commands.ab2"
0003A786 <internal_commands.ab2@2012> INCLUDE "internal_commands.ab2"
0003A788 <internal_commands.ab2@2013> INCLUDE "internal_commands.ab2"
0003A78B <internal_commands.ab2@2014> INCLUDE "internal_commands.ab2"
0003A78C <internal_commands.ab2@2015> INCLUDE "internal_commands.ab2"
0003A78E <internal_commands.ab2@2018> INCLUDE "internal_commands.ab2"
0003A792 <internal_commands.ab2@2019> INCLUDE "internal_commands.ab2"
0003A794 <internal_commands.ab2@2020> INCLUDE "internal_commands.ab2"
0003A796 <internal_commands.ab2@2021> INCLUDE "internal_commands.ab2"
0003A79A <internal_commands.ab2@2022> INCLUDE "internal_commands.ab2"
0003A79C <internal_commands.ab2@2023> INCLUDE "internal_commands.ab2"
0003A7A0 <internal_commands.ab2@2027> INCLUDE "internal_commands.ab2"
0003A7A2 <internal_commands.ab2@2028> INCLUDE "internal_commands.ab2"
0003A7A7 <internal_commands.ab2@2029> INCLUDE "internal_commands.ab2"
0003A7A8 <internal_commands.ab2@2030> INCLUDE "internal_commands.ab2"
0003A7AA <internal_commands.ab2@2033> INCLUDE "internal_commands.ab2"
0003A7AE <internal_commands.ab2@2034> INCLUDE "internal_commands.ab2"
0003A7B0 <internal_commands.ab2@2035> INCLUDE "internal_commands.ab2"
0003A7B2 <internal_commands.ab2@2036> INCLUDE "internal_commands.ab2"
0003A7B6 <internal_commands.ab2@2037> INCLUDE "internal_commands.ab2"
0003A7B8 <internal_commands.ab2@2038> INCLUDE "internal_commands.ab2"
0003A7BC <internal_commands.ab2@2042> INCLUDE "internal_commands.ab2"
0003A7BE <internal_commands.ab2@2043> INCLUDE "internal_commands.ab2"
0003A7C2 <internal_commands.ab2@2044> INCLUDE "internal_commands.ab2"
0003A7C3 <internal_commands.ab2@2045> INCLUDE "internal_commands.ab2"
0003A7C4 <internal_commands.ab2@2046> INCLUDE "internal_commands.ab2"
0003A7C6 <internal_commands.ab2@2048> INCLUDE "internal_commands.ab2"
0003A7CA <internal_commands.ab2@2049> INCLUDE "internal_commands.ab2"
0003A7CC <internal_commands.ab2@2050> INCLUDE "internal_commands.ab2"
0003A7CE <internal_commands.ab2@2051> INCLUDE "internal_commands.ab2"
0003A7D2 <internal_commands.ab2@2052> INCLUDE "internal_commands.ab2"
0003A7D4 <internal_commands.ab2@2053> INCLUDE "internal_commands.ab2"
0003A7D8 <internal_commands.ab2@2057> INCLUDE "internal_commands.ab2"
0003A7DA <internal_commands.ab2@2058> INCLUDE "internal_commands.ab2"
0003A7DF <internal_commands.ab2@2059> INCLUDE "internal_commands.ab2"
0003A7E0 <internal_commands.ab2@2060> INCLUDE "internal_commands.ab2"
0003A7E2 <internal_commands.ab2@2063> INCLUDE "internal_commands.ab2"
0003A7E6 <internal_commands.ab2@2064> INCLUDE "internal_commands.ab2"
0003A7E8 <internal_commands.ab2@2065> INCLUDE "internal_commands.ab2"
0003A7EA <internal_commands.ab2@2066> INCLUDE "internal_commands.ab2"
0003A7EE <internal_commands.ab2@2067> INCLUDE "internal_commands.ab2"
0003A7F0 <internal_commands.ab2@2068> INCLUDE "internal_commands.ab2"
0003A7F4 <internal_commands.ab2@2072> INCLUDE "internal_commands.ab2"
0003A7F6 <internal_commands.ab2@2073> INCLUDE "internal_commands.ab2"
0003A7FB <internal_commands.ab2@2074> INCLUDE "internal_commands.ab2"
0003A7FC <internal_commands.ab2@2075> INCLUDE "internal_commands.ab2"
0003A7FE <internal_commands.ab2@2078> INCLUDE "internal_commands.ab2"
0003A802 <internal_commands.ab2@2079> INCLUDE "internal_commands.ab2"
0003A804 <internal_commands.ab2@2080> INCLUDE "internal_commands.ab2"
0003A806 <internal_commands.ab2@2081> INCLUDE "internal_commands.ab2"
0003A80A <internal_commands.ab2@2082> INCLUDE "internal_commands.ab2"
0003A80C <internal_commands.ab2@2083> INCLUDE "internal_commands.ab2"
0003A810 <internal_commands.ab2@2087> INCLUDE "internal_commands.ab2"
0003A812 <internal_commands.ab2@2088> INCLUDE "internal_commands.ab2"
0003A817 <internal_commands.ab2@2089> INCLUDE "internal_commands.ab2"
0003A818 <internal_commands.ab2@2090> INCLUDE "internal_commands.ab2"
0003A81A <internal_commands.ab2@2093> INCLUDE "internal_commands.ab2"
0003A81E <internal_commands.ab2@2094> INCLUDE "internal_commands.ab2"
0003A820 <internal_commands.ab2@2095> INCLUDE "internal_commands.ab2"
0003A822 <internal_commands.ab2@2096> INCLUDE "internal_commands.ab2"
0003A826 <internal_commands.ab2@2097> INCLUDE "internal_commands.ab2"
0003A828 <internal_commands.ab2@2098> INCLUDE "internal_commands.ab2"
0003A82C <internal_commands.ab2@2102> INCLUDE "internal_commands.ab2"
0003A82E <internal_commands.ab2@2103> INCLUDE "internal_commands.ab2"
0003A833 <internal_commands.ab2@2104> INCLUDE "internal_commands.ab2"
0003A834 <internal_commands.ab2@2105> INCLUDE "internal_commands.ab2"
0003A836 <internal_commands.ab2@2108> INCLUDE "internal_commands.ab2"
0003A83A <internal_commands.ab2@2109> INCLUDE "internal_commands.ab2"
0003A83C <internal_commands.ab2@2110> INCLUDE "internal_commands.ab2"
0003A83E <internal_commands.ab2@2111> INCLUDE "internal_commands.ab2"
0003A842 <internal_commands.ab2@2112> INCLUDE "internal_commands.ab2"
0003A844 <internal_commands.ab2@2113> INCLUDE "internal_commands.ab2"
0003A848 <internal_commands.ab2@2117> INCLUDE "internal_commands.ab2"
0003A84A <internal_commands.ab2@2118> INCLUDE "internal_commands.ab2"
0003A84F <internal_commands.ab2@2119> INCLUDE "internal_commands.ab2"
0003A850 <internal_commands.ab2@2120> INCLUDE "internal_commands.ab2"
0003A852 <internal_commands.ab2@2123> INCLUDE "internal_commands.ab2"
0003A856 <internal_commands.ab2@2124> INCLUDE "internal_commands.ab2"
0003A858 <internal_commands.ab2@2125> INCLUDE "internal_commands.ab2"
0003A85A <internal_commands.ab2@2126> INCLUDE "internal_commands.ab2"
0003A85E <internal_commands.ab2@2127> INCLUDE "internal_commands.ab2"
0003A860 <internal_commands.ab2@2128> INCLUDE "internal_commands.ab2"
0003A864 <internal_commands.ab2@2132> INCLUDE "internal_commands.ab2"
0003A866 <internal_commands.ab2@2133> INCLUDE "internal_commands.ab2"
0003A86A <internal_commands.ab2@2134> INCLUDE "internal_commands.ab2"
0003A86B <internal_commands.ab2@2135> INCLUDE "internal_commands.ab2"
0003A86C <internal_commands.ab2@2136> INCLUDE "internal_commands.ab2"
0003A86E <internal_commands.ab2@2138> INCLUDE "internal_commands.ab2"
0003A872 <internal_commands.ab2@2139> INCLUDE "internal_commands.ab2"
0003A874 <internal_commands.ab2@2140> INCLUDE "internal_commands.ab2"
0003A876 <internal_commands.ab2@2141> INCLUDE "internal_commands.ab2"
0003A87A <internal_commands.ab2@2142> INCLUDE "internal_commands.ab2"
0003A87C <internal_commands.ab2@2143> INCLUDE "internal_commands.ab2"
0003A880 <internal_commands.ab2@2147> INCLUDE "internal_commands.ab2"
0003A882 <internal_commands.ab2@2148> INCLUDE "internal_commands.ab2"
0003A887 <internal_commands.ab2@2149> INCLUDE "internal_commands.ab2"
0003A888 <internal_commands.ab2@2150> INCLUDE "internal_commands.ab2"
0003A88A <internal_commands.ab2@2153> INCLUDE "internal_commands.ab2"
0003A88E <internal_commands.ab2@2154> INCLUDE "internal_commands.ab2"
0003A890 <internal_commands.ab2@2155> INCLUDE "internal_commands.ab2"
0003A892 <internal_commands.ab2@2156> INCLUDE "internal_commands.ab2"
0003A896 <internal_commands.ab2@2157> INCLUDE "internal_commands.ab2"
0003A898 <internal_commands.ab2@2158> INCLUDE "internal_commands.ab2"
0003A89C <internal_commands.ab2@2162> INCLUDE "internal_commands.ab2"
0003A89E <internal_commands.ab2@2163> INCLUDE "internal_commands.ab2"
0003A8A4 <internal_commands.ab2@2164> INCLUDE "internal_commands.ab2"
0003A8A5 <internal_commands.ab2@2165> INCLUDE "internal_commands.ab2"
0003A8A6 <internal_commands.ab2@2166> INCLUDE "internal_commands.ab2"
0003A8A8 <internal_commands.ab2@2168> INCLUDE "internal_commands.ab2"
0003A8AC <internal_commands.ab2@2169> INCLUDE "internal_commands.ab2"
0003A8AE <internal_commands.ab2@2170> INCLUDE "internal_commands.ab2"
0003A8B0 <internal_commands.ab2@2171> INCLUDE "internal_commands.ab2"
0003A8B4 <internal_commands.ab2@2172> INCLUDE "internal_commands.ab2"
0003A8B6 <internal_commands.ab2@2173> INCLUDE "internal_commands.ab2"
0003A8BA <internal_commands.ab2@2177> INCLUDE "internal_commands.ab2"
0003A8BC <internal_commands.ab2@2178> INCLUDE "internal_commands.ab2"
0003A8C0 <internal_commands.ab2@2179> INCLUDE "internal_commands.ab2"
0003A8C1 <internal_commands.ab2@2180> INCLUDE "internal_commands.ab2"
0003A8C2 <internal_commands.ab2@2181> INCLUDE "internal_commands.ab2"
0003A8C4 <internal_commands.ab2@2183> INCLUDE "internal_commands.ab2"
0003A8C8 <internal_commands.ab2@2184> INCLUDE "internal_commands.ab2"
0003A8CA <internal_commands.ab2@2185> INCLUDE "internal_commands.ab2"
0003A8CC <internal_commands.ab2@2186> INCLUDE "internal_commands.ab2"
0003A8D0 <internal_commands.ab2@2187> INCLUDE "internal_commands.ab2"
0003A8D2 <internal_commands.ab2@2188> INCLUDE "internal_commands.ab2"
0003A8D6 <internal_commands.ab2@2192> INCLUDE "internal_commands.ab2"
0003A8D8 <internal_commands.ab2@2193> INCLUDE "internal_commands.ab2"
0003A8DD <internal_commands.ab2@2194> INCLUDE "internal_commands.ab2"
0003A8DE <internal_commands.ab2@2195> INCLUDE "internal_commands.ab2"
0003A8E0 <internal_commands.ab2@2198> INCLUDE "internal_commands.ab2"
0003A8E4 <internal_commands.ab2@2199> INCLUDE "internal_commands.ab2"
0003A8E6 <internal_commands.ab2@2200> INCLUDE "internal_commands.ab2"
0003A8E8 <internal_commands.ab2@2201> INCLUDE "internal_commands.ab2"
0003A8EC <internal_commands.ab2@2202> INCLUDE "internal_commands.ab2"
0003A8EE <internal_commands.ab2@2203> INCLUDE "internal_commands.ab2"
0003A8F2 <internal_commands.ab2@2208> INCLUDE "internal_commands.ab2"
0003A8F4 <internal_commands.ab2@2209> INCLUDE "internal_commands.ab2"
0003A8FB <internal_commands.ab2@2210> INCLUDE "internal_commands.ab2"
0003A8FC <internal_commands.ab2@2211> INCLUDE "internal_commands.ab2"
0003A8FE <internal_commands.ab2@2230> INCLUDE "internal_commands.ab2"
0003A900 <internal_commands.ab2@2231> INCLUDE "internal_commands.ab2"
0003A902 <internal_commands.ab2@2235> INCLUDE "internal_commands.ab2"
0003A904 <internal_commands.ab2@2236> INCLUDE "internal_commands.ab2"
0003A906 <internal_commands.ab2@2240> INCLUDE "internal_commands.ab2"
0003A908 <internal_commands.ab2@2241> INCLUDE "internal_commands.ab2"
0003A90A <internal_commands.ab2@2245> INCLUDE "internal_commands.ab2"
0003A90C <internal_commands.ab2@2246> INCLUDE "internal_commands.ab2"
0003A90E <internal_commands.ab2@2251> INCLUDE "internal_commands.ab2"
0003A912 <internal_commands.ab2@2252> INCLUDE "internal_commands.ab2"
0003A914 <internal_commands.ab2@2253> INCLUDE "internal_commands.ab2"
0003A916 <internal_commands.ab2@2254> INCLUDE "internal_commands.ab2"
0003A918 <internal_commands.ab2@2255> INCLUDE "internal_commands.ab2"
0003A91A <internal_commands.ab2@2256> INCLUDE "internal_commands.ab2"
0003A91E <internal_commands.ab2@2257> INCLUDE "internal_commands.ab2"
0003A924 <internal_commands.ab2@2260> INCLUDE "internal_commands.ab2"
0003A928 <internal_commands.ab2@2261> INCLUDE "internal_commands.ab2"
0003A92A <internal_commands.ab2@2262> INCLUDE "internal_commands.ab2"
0003A92C <internal_commands.ab2@2263> INCLUDE "internal_commands.ab2"
0003A92E <internal_commands.ab2@2264> INCLUDE "internal_commands.ab2"
0003A930 <internal_commands.ab2@2265> INCLUDE "internal_commands.ab2"
0003A932 <internal_commands.ab2@2266> INCLUDE "internal_commands.ab2"
0003A934 <internal_commands.ab2@2273> INCLUDE "internal_commands.ab2"
0003A938 <internal_commands.ab2@2274> INCLUDE "internal_commands.ab2"
0003A93C <internal_commands.ab2@2275> INCLUDE "internal_commands.ab2"
0003A940 <internal_commands.ab2@2276> INCLUDE "internal_commands.ab2"
0003A944 <internal_commands.ab2@2277> INCLUDE "internal_commands.ab2"
0003A948 <internal_commands.ab2@2278> INCLUDE "internal_commands.ab2"
0003A94A <internal_commands.ab2@2281> INCLUDE "internal_commands.ab2"
0003A94C <internal_commands.ab2@2282> INCLUDE "internal_commands.ab2"
0003A950 <internal_commands.ab2@2283> INCLUDE "internal_commands.ab2"
0003A954 <internal_commands.ab2@2284> INCLUDE "internal_commands.ab2"
0003A958 <internal_commands.ab2@2285> INCLUDE "internal_commands.ab2"
0003A95C <internal_commands.ab2@2286> INCLUDE "internal_commands.ab2"
0003A95E <internal_commands.ab2@2289> INCLUDE "internal_commands.ab2"
0003A960 <internal_commands.ab2@2290> INCLUDE "internal_commands.ab2"
0003A964 <internal_commands.ab2@2291> INCLUDE "internal_commands.ab2"
0003A968 <internal_commands.ab2@2292> INCLUDE "internal_commands.ab2"
0003A96C <internal_commands.ab2@2293> INCLUDE "internal_commands.ab2"
0003A970 <internal_commands.ab2@2294> INCLUDE "internal_commands.ab2"
0003A972 <internal_commands.ab2@2295> INCLUDE "internal_commands.ab2"
0003A974 <internal_commands.ab2@2298> INCLUDE "internal_commands.ab2"
0003A976 <internal_commands.ab2@2299> INCLUDE "internal_commands.ab2"
0003A97A <internal_commands.ab2@2300> INCLUDE "internal_commands.ab2"
0003A97C <internal_commands.ab2@2302> INCLUDE "internal_commands.ab2"
0003A980 <internal_commands.ab2@2303> INCLUDE "internal_commands.ab2"
0003A982 <internal_commands.ab2@2307> INCLUDE "internal_commands.ab2"
0003A986 <internal_commands.ab2@2308> INCLUDE "internal_commands.ab2"
0003A988 <internal_commands.ab2@2309> INCLUDE "internal_commands.ab2"
0003A98C <internal_commands.ab2@2310> INCLUDE "internal_commands.ab2"
0003A990 <internal_commands.ab2@2311> INCLUDE "internal_commands.ab2"
0003A994 <internal_commands.ab2@2312> INCLUDE "internal_commands.ab2"
0003A998 <internal_commands.ab2@2316> INCLUDE "internal_commands.ab2"
0003A99C <internal_commands.ab2@2317> INCLUDE "internal_commands.ab2"
0003A9A0 <internal_commands.ab2@2319> INCLUDE "internal_commands.ab2"
0003A9A4 <internal_commands.ab2@2320> INCLUDE "internal_commands.ab2"
0003A9A8 <internal_commands.ab2@2321> INCLUDE "internal_commands.ab2"
0003A9AC <internal_commands.ab2@2322> INCLUDE "internal_commands.ab2"
0003A9B0 <internal_commands.ab2@2323> INCLUDE "internal_commands.ab2"
0003A9B4 <internal_commands.ab2@2324> INCLUDE "internal_commands.ab2"
0003A9B8 <internal_commands.ab2@2325> INCLUDE "internal_commands.ab2"
0003A9BC <internal_commands.ab2@2326> INCLUDE "internal_commands.ab2"
0003A9C0 <internal_commands.ab2@2328> INCLUDE "internal_commands.ab2"
0003A9C4 <internal_commands.ab2@2331> INCLUDE "internal_commands.ab2"
0003A9C8 <internal_commands.ab2@2332> INCLUDE "internal_commands.ab2"
0003A9CC <internal_commands.ab2@2334> INCLUDE "internal_commands.ab2"
0003A9D0 <internal_commands.ab2@2335> INCLUDE "internal_commands.ab2"
0003A9D4 <internal_commands.ab2@2336> INCLUDE "internal_commands.ab2"
0003A9D8 <internal_commands.ab2@2337> INCLUDE "internal_commands.ab2"
0003A9DC <internal_commands.ab2@2338> INCLUDE "internal_commands.ab2"
0003A9E0 <internal_commands.ab2@2339> INCLUDE "internal_commands.ab2"
0003A9E4 <internal_commands.ab2@2340> INCLUDE "internal_commands.ab2"
0003A9E8 <internal_commands.ab2@2341> INCLUDE "internal_commands.ab2"
0003A9EC <internal_commands.ab2@2343> INCLUDE "internal_commands.ab2"
0003A9F0 <internal_commands.ab2@2346> INCLUDE "internal_commands.ab2"
0003A9F2 <internal_commands.ab2@2347> INCLUDE "internal_commands.ab2"
0003A9F6 <internal_commands.ab2@2348> INCLUDE "internal_commands.ab2"
0003A9FA <internal_commands.ab2@2349> INCLUDE "internal_commands.ab2"
0003A9FE <internal_commands.ab2@2350> INCLUDE "internal_commands.ab2"
0003AA02 <internal_commands.ab2@2351> INCLUDE "internal_commands.ab2"
0003AA06 <internal_commands.ab2@2352> INCLUDE "internal_commands.ab2"
0003AA0A <internal_commands.ab2@2353> INCLUDE "internal_commands.ab2"
0003AA0E <internal_commands.ab2@2356> INCLUDE "internal_commands.ab2"
0003AA12 <internal_commands.ab2@2357> INCLUDE "internal_commands.ab2"
0003AA16 <internal_commands.ab2@2358> INCLUDE "internal_commands.ab2"
0003AA18 <internal_commands.ab2@2359> INCLUDE "internal_commands.ab2"
0003AA1A <internal_commands.ab2@2362> INCLUDE "internal_commands.ab2"
0003AA1C <internal_commands.ab2@2363> INCLUDE "internal_commands.ab2"
0003AA1E <internal_commands.ab2@2364> INCLUDE "internal_commands.ab2"
0003AA20 <internal_commands.ab2@2365> INCLUDE "internal_commands.ab2"
0003AA24 <internal_commands.ab2@2366> INCLUDE "internal_commands.ab2"
0003AA28 <internal_commands.ab2@2369> INCLUDE "internal_commands.ab2"
0003AA2C <internal_commands.ab2@2370> INCLUDE "internal_commands.ab2"
0003AA30 <internal_commands.ab2@2371> INCLUDE "internal_commands.ab2"
0003AA32 <internal_commands.ab2@2372> INCLUDE "internal_commands.ab2"
0003AA36 <internal_commands.ab2@2373> INCLUDE "internal_commands.ab2"
0003AA3A <internal_commands.ab2@2376> INCLUDE "internal_commands.ab2"
0003AA3E <internal_commands.ab2@2379> INCLUDE "internal_commands.ab2"
0003AA42 <internal_commands.ab2@2380> INCLUDE "internal_commands.ab2"
0003AA44 <internal_commands.ab2@2381> INCLUDE "internal_commands.ab2"
0003AA46 <internal_commands.ab2@2382> INCLUDE "internal_commands.ab2"
0003AA4A <internal_commands.ab2@2383> INCLUDE "internal_commands.ab2"
0003AA4E <internal_commands.ab2@2386> INCLUDE "internal_commands.ab2"
0003AA52 <internal_commands.ab2@2387> INCLUDE "internal_commands.ab2"
0003AA56 <internal_commands.ab2@2390> INCLUDE "internal_commands.ab2"
0003AA5A <internal_commands.ab2@2393> INCLUDE "internal_commands.ab2"
0003AA5E <internal_commands.ab2@2394> INCLUDE "internal_commands.ab2"
0003AA60 <internal_commands.ab2@2395> INCLUDE "internal_commands.ab2"
0003AA62 <internal_commands.ab2@2396> INCLUDE "internal_commands.ab2"
0003AA66 <internal_commands.ab2@2397> INCLUDE "internal_commands.ab2"
0003AA6A <internal_commands.ab2@2400> INCLUDE "internal_commands.ab2"
0003AA6E <internal_commands.ab2@2401> INCLUDE "internal_commands.ab2"
0003AA70 <internal_commands.ab2@2405> INCLUDE "internal_commands.ab2"
0003AA74 <internal_commands.ab2@2406> INCLUDE "internal_commands.ab2"
0003AA78 <internal_commands.ab2@2407> INCLUDE "internal_commands.ab2"
0003AA7A <internal_commands.ab2@2408> INCLUDE "internal_commands.ab2"
0003AA7E <internal_commands.ab2@2409> INCLUDE "internal_commands.ab2"
0003AA82 <internal_commands.ab2@2410> INCLUDE "internal_commands.ab2"
0003AA84 <internal_commands.ab2@2413> INCLUDE "internal_commands.ab2"
0003AA88 <internal_commands.ab2@2414> INCLUDE "internal_commands.ab2"
0003AA8C <internal_commands.ab2@2415> INCLUDE "internal_commands.ab2"
0003AA90 <internal_commands.ab2@2416> INCLUDE "internal_commands.ab2"
0003AA94 <internal_commands.ab2@2419> INCLUDE "internal_commands.ab2"
0003AA98 <internal_commands.ab2@2420> INCLUDE "internal_commands.ab2"
0003AA9A <internal_commands.ab2@2424> INCLUDE "internal_commands.ab2"
0003AA9E <internal_commands.ab2@2425> INCLUDE "internal_commands.ab2"
0003AAA0 <internal_commands.ab2@2426> INCLUDE "internal_commands.ab2"
0003AAA2 <internal_commands.ab2@2427> INCLUDE "internal_commands.ab2"
0003AAA4 <internal_commands.ab2@2428> INCLUDE "internal_commands.ab2"
0003AAA8 <internal_commands.ab2@2429> INCLUDE "internal_commands.ab2"
0003AAAC <internal_commands.ab2@2432> INCLUDE "internal_commands.ab2"
0003AAB0 <internal_commands.ab2@2433> INCLUDE "internal_commands.ab2"
0003AAB4 <internal_commands.ab2@2434> INCLUDE "internal_commands.ab2"
0003AAB8 <internal_commands.ab2@2435> INCLUDE "internal_commands.ab2"
0003AABC <internal_commands.ab2@2439> INCLUDE "internal_commands.ab2"
0003AAC0 <internal_commands.ab2@2440> INCLUDE "internal_commands.ab2"
0003AAC4 <internal_commands.ab2@2444> INCLUDE "internal_commands.ab2"
0003AAC8 <internal_commands.ab2@2445> INCLUDE "internal_commands.ab2"
0003AACC <internal_commands.ab2@2449> INCLUDE "internal_commands.ab2"
0003AAD0 <internal_commands.ab2@2450> INCLUDE "internal_commands.ab2"
0003AAD4 <internal_commands.ab2@2454> INCLUDE "internal_commands.ab2"
0003AAD6 <internal_commands.ab2@2456> INCLUDE "internal_commands.ab2"
0003AADA <internal_commands.ab2@2457> INCLUDE "internal_commands.ab2"
0003AADE <internal_commands.ab2@2458> INCLUDE "internal_commands.ab2"
0003AAE0 <internal_commands.ab2@2459> INCLUDE "internal_commands.ab2"
0003AAE2 <internal_commands.ab2@2460> INCLUDE "internal_commands.ab2"
0003AAE4 <internal_commands.ab2@2461> INCLUDE "internal_commands.ab2"
0003AAE8 <internal_commands.ab2@2462> INCLUDE "internal_commands.ab2"
0003AAEC <internal_commands.ab2@2463> INCLUDE "internal_commands.ab2"
0003AAEE <internal_commands.ab2@2464> INCLUDE "internal_commands.ab2"
0003AAF2 <internal_commands.ab2@2465> INCLUDE "internal_commands.ab2"
0003AAF4 <internal_commands.ab2@2466> INCLUDE "internal_commands.ab2"
0003AAF6 <internal_commands.ab2@2467> INCLUDE "internal_commands.ab2"
0003AAF8 <internal_commands.ab2@2468> INCLUDE "internal_commands.ab2"
0003AAFC <internal_commands.ab2@2469> INCLUDE "internal_commands.ab2"
0003AB00 <internal_commands.ab2@2470> INCLUDE "internal_commands.ab2"
0003AB02 <internal_commands.ab2@2473> INCLUDE "internal_commands.ab2"
0003AB04 <internal_commands.ab2@2474> INCLUDE "internal_commands.ab2"
0003AB08 <internal_commands.ab2@2475> INCLUDE "internal_commands.ab2"
0003AB0C <internal_commands.ab2@2476> INCLUDE "internal_commands.ab2"
0003AB10 <internal_commands.ab2@2477> INCLUDE "internal_commands.ab2"
0003AB14 <internal_commands.ab2@2478> INCLUDE "internal_commands.ab2"
0003AB16 <internal_commands.ab2@2479> INCLUDE "internal_commands.ab2"
0003AB1A <internal_commands.ab2@2480> INCLUDE "internal_commands.ab2"
0003AB1E <internal_commands.ab2@2481> INCLUDE "internal_commands.ab2"
0003AB22 <internal_commands.ab2@2482> INCLUDE "internal_commands.ab2"
0003AB24 <internal_commands.ab2@2483> INCLUDE "internal_commands.ab2"
0003AB26 <internal_commands.ab2@2484> INCLUDE "internal_commands.ab2"
0003AB28 <internal_commands.ab2@2485> INCLUDE "internal_commands.ab2"
0003AB2A <internal_commands.ab2@2488> INCLUDE "internal_commands.ab2"
0003AB2C <internal_commands.ab2@2489> INCLUDE "internal_commands.ab2"
0003AB2E <internal_commands.ab2@2490> INCLUDE "internal_commands.ab2"
0003AB32 <internal_commands.ab2@2491> INCLUDE "internal_commands.ab2"
0003AB36 <internal_commands.ab2@2492> INCLUDE "internal_commands.ab2"
0003AB38 <internal_commands.ab2@2496> INCLUDE "internal_commands.ab2"
0003AB3C <internal_commands.ab2@2497> INCLUDE "internal_commands.ab2"
0003AB3E <internal_commands.ab2@2498> INCLUDE "internal_commands.ab2"
0003AB42 <internal_commands.ab2@2499> INCLUDE "internal_commands.ab2"
0003AB46 <internal_commands.ab2@2500> INCLUDE "internal_commands.ab2"
0003AB48 <internal_commands.ab2@2501> INCLUDE "internal_commands.ab2"
0003AB4A <internal_commands.ab2@2504> INCLUDE "internal_commands.ab2"
0003AB4C <internal_commands.ab2@2508> INCLUDE "internal_commands.ab2"
0003AB50 <internal_commands.ab2@2509> INCLUDE "internal_commands.ab2"
0003AB52 <internal_commands.ab2@2510> INCLUDE "internal_commands.ab2"
0003AB56 <internal_commands.ab2@2511> INCLUDE "internal_commands.ab2"
0003AB5A <internal_commands.ab2@2512> INCLUDE "internal_commands.ab2"
0003AB5E <internal_commands.ab2@2513> INCLUDE "internal_commands.ab2"
0003AB60 <internal_commands.ab2@2516> INCLUDE "internal_commands.ab2"
0003AB64 <internal_commands.ab2@2520> INCLUDE "internal_commands.ab2"
0003AB68 <internal_commands.ab2@2521> INCLUDE "internal_commands.ab2"
0003AB6A <internal_commands.ab2@2522> INCLUDE "internal_commands.ab2"
0003AB6E <internal_commands.ab2@2523> INCLUDE "internal_commands.ab2"
0003AB72 <internal_commands.ab2@2524> INCLUDE "internal_commands.ab2"
0003AB76 <internal_commands.ab2@2527> INCLUDE "internal_commands.ab2"
0003AB7A <internal_commands.ab2@2528> INCLUDE "internal_commands.ab2"
0003AB7E <internal_commands.ab2@2529> INCLUDE "internal_commands.ab2"
0003AB82 <internal_commands.ab2@2530> INCLUDE "internal_commands.ab2"
0003AB86 <internal_commands.ab2@2531> INCLUDE "internal_commands.ab2"
0003AB8A <internal_commands.ab2@2538> INCLUDE "internal_commands.ab2"
0003AB8C <internal_commands.ab2@2539> INCLUDE "internal_commands.ab2"
0003AB91 <internal_commands.ab2@2540> INCLUDE "internal_commands.ab2"
0003AB92 <internal_commands.ab2@2541> INCLUDE "internal_commands.ab2"
0003AB96 <internal_commands.ab2@2545> INCLUDE "internal_commands.ab2"
0003AB98 <internal_commands.ab2@2546> INCLUDE "internal_commands.ab2"
0003AB9F <internal_commands.ab2@2547> INCLUDE "internal_commands.ab2"
0003ABA0 <internal_commands.ab2@2548> INCLUDE "internal_commands.ab2"
0003ABA4 <internal_commands.ab2@2552> INCLUDE "internal_commands.ab2"
0003ABA6 <internal_commands.ab2@2553> INCLUDE "internal_commands.ab2"
0003ABAD <internal_commands.ab2@2554> INCLUDE "internal_commands.ab2"
0003ABAE <internal_commands.ab2@2555> INCLUDE "internal_commands.ab2"
0003ABB2 <internal_commands.ab2@2559> INCLUDE "internal_commands.ab2"
0003ABB4 <internal_commands.ab2@2560> INCLUDE "internal_commands.ab2"
0003ABBC <internal_commands.ab2@2561> INCLUDE "internal_commands.ab2"
0003ABBD <internal_commands.ab2@2562> INCLUDE "internal_commands.ab2"
0003ABBE <internal_commands.ab2@2563> INCLUDE "internal_commands.ab2"
0003ABC2 <internal_commands.ab2@2566> INCLUDE "internal_commands.ab2"
0003ABC4 <internal_commands.ab2@2567> INCLUDE "internal_commands.ab2"
0003ABC9 <internal_commands.ab2@2568> INCLUDE "internal_commands.ab2"
0003ABDD <internal_commands.ab2@2569> INCLUDE "internal_commands.ab2"
0003ABDE <internal_commands.ab2@2570> INCLUDE "internal_commands.ab2"
0003ABE2 <internal_commands.ab2@2573> INCLUDE "internal_commands.ab2"
0003ABE4 <internal_commands.ab2@2574> INCLUDE "internal_commands.ab2"
0003ABE8 <internal_commands.ab2@2575> INCLUDE "internal_commands.ab2"
0003ABE9 <internal_commands.ab2@2576> INCLUDE "internal_commands.ab2"
0003ABEA <internal_commands.ab2@2577> INCLUDE "internal_commands.ab2"
0003ABEE <internal_commands.ab2@2580> INCLUDE "internal_commands.ab2"
0003ABF0 <internal_commands.ab2@2581> INCLUDE "internal_commands.ab2"
0003ABF3 <internal_commands.ab2@2582> INCLUDE "internal_commands.ab2"
0003ABF4 <internal_commands.ab2@2583> INCLUDE "internal_commands.ab2"
0003ABF8 <internal_commands.ab2@2587> INCLUDE "internal_commands.ab2"
0003ABFA <internal_commands.ab2@2588> INCLUDE "internal_commands.ab2"
0003AC01 <internal_commands.ab2@2589> INCLUDE "internal_commands.ab2"
0003AC02 <internal_commands.ab2@2590> INCLUDE "internal_commands.ab2"
0003AC06 <internal_commands.ab2@2594> INCLUDE "internal_commands.ab2"
0003AC08 <internal_commands.ab2@2595> INCLUDE "internal_commands.ab2"
0003AC0E <internal_commands.ab2@2596> INCLUDE "internal_commands.ab2"
0003AC1B <internal_commands.ab2@2597> INCLUDE "internal_commands.ab2"
0003AC1C <internal_commands.ab2@2598> INCLUDE "internal_commands.ab2"
0003AC20 <internal_commands.ab2@2601> INCLUDE "internal_commands.ab2"
0003AC22 <internal_commands.ab2@2602> INCLUDE "internal_commands.ab2"
0003AC29 <internal_commands.ab2@2603> INCLUDE "internal_commands.ab2"
0003AC41 <internal_commands.ab2@2604> INCLUDE "internal_commands.ab2"
0003AC42 <internal_commands.ab2@2605> INCLUDE "internal_commands.ab2"
0003AC46 <internal_commands.ab2@2608> INCLUDE "internal_commands.ab2"
0003AC48 <internal_commands.ab2@2609> INCLUDE "internal_commands.ab2"
0003AC4C <internal_commands.ab2@2610> INCLUDE "internal_commands.ab2"
0003AC6F <internal_commands.ab2@2611> INCLUDE "internal_commands.ab2"
0003AC70 <internal_commands.ab2@2612> INCLUDE "internal_commands.ab2"
0003AC74 <internal_commands.ab2@2615> INCLUDE "internal_commands.ab2"
0003AC76 <internal_commands.ab2@2616> INCLUDE "internal_commands.ab2"
0003AC7D <internal_commands.ab2@2617> INCLUDE "internal_commands.ab2"
0003AC88 <internal_commands.ab2@2618> INCLUDE "internal_commands.ab2"
0003AC8C <internal_commands.ab2@2622> INCLUDE "internal_commands.ab2"
0003AC8E <internal_commands.ab2@2623> INCLUDE "internal_commands.ab2"
0003AC94 <internal_commands.ab2@2624> INCLUDE "internal_commands.ab2"
0003AC95 <internal_commands.ab2@2625> INCLUDE "internal_commands.ab2"
0003AC96 <internal_commands.ab2@2626> INCLUDE "internal_commands.ab2"
0003AC9A <internal_commands.ab2@2629> INCLUDE "internal_commands.ab2"
0003AC9C <internal_commands.ab2@2630> INCLUDE "internal_commands.ab2"
0003ACA1 <internal_commands.ab2@2631> INCLUDE "internal_commands.ab2"
0003ACA2 <internal_commands.ab2@2632> INCLUDE "internal_commands.ab2"
0003ACA6 <internal_commands.ab2@2636> INCLUDE "internal_commands.ab2"
0003ACA8 <internal_commands.ab2@2637> INCLUDE "internal_commands.ab2"
0003ACAF <internal_commands.ab2@2638> INCLUDE "internal_commands.ab2"
0003ACC1 <internal_commands.ab2@2639> INCLUDE "internal_commands.ab2"
0003ACC2 <internal_commands.ab2@2640> INCLUDE "internal_commands.ab2"
0003ACC6 <internal_commands.ab2@2643> INCLUDE "internal_commands.ab2"
0003ACC8 <internal_commands.ab2@2644> INCLUDE "internal_commands.ab2"
0003ACD2 <internal_commands.ab2@2645> INCLUDE "internal_commands.ab2"
0003ACD3 <internal_commands.ab2@2646> INCLUDE "internal_commands.ab2"
0003ACD4 <internal_commands.ab2@2647> INCLUDE "internal_commands.ab2"
0003ACD8 <internal_commands.ab2@2650> INCLUDE "internal_commands.ab2"
0003ACDA <internal_commands.ab2@2651> INCLUDE "internal_commands.ab2"
0003ACE2 <internal_commands.ab2@2652> INCLUDE "internal_commands.ab2"
0003ACEF <internal_commands.ab2@2653> INCLUDE "internal_commands.ab2"
0003ACF0 <internal_commands.ab2@2654> INCLUDE "internal_commands.ab2"
0003ACF4 <internal_commands.ab2@2657> INCLUDE "internal_commands.ab2"
0003ACF6 <internal_commands.ab2@2658> INCLUDE "internal_commands.ab2"
0003ACF9 <internal_commands.ab2@2659> INCLUDE "internal_commands.ab2"
0003AD34 <internal_commands.ab2@2660> INCLUDE "internal_commands.ab2"
0003AD38 <internal_commands.ab2@2664> INCLUDE "internal_commands.ab2"
0003AD3A <internal_commands.ab2@2665> INCLUDE "internal_commands.ab2"
0003AD3E <internal_commands.ab2@2666> INCLUDE "internal_commands.ab2"
0003AD3F <internal_commands.ab2@2667> INCLUDE "internal_commands.ab2"
0003AD40 <internal_commands.ab2@2668> INCLUDE "internal_commands.ab2"
0003AD44 <internal_commands.ab2@2671> INCLUDE "internal_commands.ab2"
0003AD46 <internal_commands.ab2@2672> INCLUDE "internal_commands.ab2"
0003AD4E <internal_commands.ab2@2673> INCLUDE "internal_commands.ab2"
0003AD4F <internal_commands.ab2@2674> INCLUDE "internal_commands.ab2"
0003AD50 <internal_commands.ab2@2675> INCLUDE "internal_commands.ab2"
0003AD54 <internal_commands.ab2@2678> INCLUDE "internal_commands.ab2"
0003AD56 <internal_commands.ab2@2679> INCLUDE "internal_commands.ab2"
0003AD5E <internal_commands.ab2@2680> INCLUDE "internal_commands.ab2"
0003AD6E <internal_commands.ab2@2681> INCLUDE "internal_commands.ab2"
0003AD72 <internal_commands.ab2@2685> INCLUDE "internal_commands.ab2"
0003AD74 <internal_commands.ab2@2686> INCLUDE "internal_commands.ab2"
0003AD7D <internal_commands.ab2@2687> INCLUDE "internal_commands.ab2"
0003AD85 <internal_commands.ab2@2688> INCLUDE "internal_commands.ab2"
0003AD86 <internal_commands.ab2@2689> INCLUDE "internal_commands.ab2"
0003AD8A <internal_commands.ab2@2692> INCLUDE "internal_commands.ab2"
0003AD8C <internal_commands.ab2@2693> INCLUDE "internal_commands.ab2"
0003AD94 <internal_commands.ab2@2694> INCLUDE "internal_commands.ab2"
0003AD9D <internal_commands.ab2@2695> INCLUDE "internal_commands.ab2"
0003AD9E <internal_commands.ab2@2696> INCLUDE "internal_commands.ab2"
0003ADA2 <internal_commands.ab2@2699> INCLUDE "internal_commands.ab2"
0003ADA4 <internal_commands.ab2@2700> INCLUDE "internal_commands.ab2"
0003ADAC <internal_commands.ab2@2701> INCLUDE "internal_commands.ab2"
0003ADAD <internal_commands.ab2@2702> INCLUDE "internal_commands.ab2"
0003ADAE <internal_commands.ab2@2703> INCLUDE "internal_commands.ab2"
0003ADB2 <internal_commands.ab2@2706> INCLUDE "internal_commands.ab2"
0003ADB4 <internal_commands.ab2@2707> INCLUDE "internal_commands.ab2"
0003ADBA <internal_commands.ab2@2708> INCLUDE "internal_commands.ab2"
0003ADBB <internal_commands.ab2@2709> INCLUDE "internal_commands.ab2"
0003ADBC <internal_commands.ab2@2710> INCLUDE "internal_commands.ab2"
0003ADC0 <internal_commands.ab2@2713> INCLUDE "internal_commands.ab2"
0003ADC2 <internal_commands.ab2@2714> INCLUDE "internal_commands.ab2"
0003ADC9 <internal_commands.ab2@2715> INCLUDE "internal_commands.ab2"
0003ADCA <internal_commands.ab2@2716> INCLUDE "internal_commands.ab2"
0003ADCE <internal_commands.ab2@2720> INCLUDE "internal_commands.ab2"
0003ADD0 <internal_commands.ab2@2721> INCLUDE "internal_commands.ab2"
0003ADD7 <internal_commands.ab2@2722> INCLUDE "internal_commands.ab2"
0003ADD8 <internal_commands.ab2@2723> INCLUDE "internal_commands.ab2"
0003ADDC <internal_commands.ab2@2727> INCLUDE "internal_commands.ab2"
0003ADDE <internal_commands.ab2@2728> INCLUDE "internal_commands.ab2"
0003ADE5 <internal_commands.ab2@2729> INCLUDE "internal_commands.ab2"
0003ADE6 <internal_commands.ab2@2730> INCLUDE "internal_commands.ab2"
0003ADEA <internal_commands.ab2@2734> INCLUDE "internal_commands.ab2"
0003ADEC <internal_commands.ab2@2735> INCLUDE "internal_commands.ab2"
0003ADF3 <internal_commands.ab2@2736> INCLUDE "internal_commands.ab2"
0003ADF4 <internal_commands.ab2@2737> INCLUDE "internal_commands.ab2"
0003ADF8 <internal_commands.ab2@2741> INCLUDE "internal_commands.ab2"
0003ADFA <internal_commands.ab2@2742> INCLUDE "internal_commands.ab2"
0003ADFF <internal_commands.ab2@2743> INCLUDE "internal_commands.ab2"
0003AE15 <internal_commands.ab2@2744> INCLUDE "internal_commands.ab2"
0003AE16 <internal_commands.ab2@2745> INCLUDE "internal_commands.ab2"
0003AE1A <internal_commands.ab2@2748> INCLUDE "internal_commands.ab2"
0003AE1C <internal_commands.ab2@2749> INCLUDE "internal_commands.ab2"
0003AE26 <internal_commands.ab2@2750> INCLUDE "internal_commands.ab2"
0003AE27 <internal_commands.ab2@2751> INCLUDE "internal_commands.ab2"
0003AE28 <internal_commands.ab2@2752> INCLUDE "internal_commands.ab2"
0003AE2C <internal_commands.ab2@2755> INCLUDE "internal_commands.ab2"
0003AE2E <internal_commands.ab2@2756> INCLUDE "internal_commands.ab2"
0003AE39 <internal_commands.ab2@2757> INCLUDE "internal_commands.ab2"
0003AE3A <internal_commands.ab2@2758> INCLUDE "internal_commands.ab2"
0003AE3E <internal_commands.ab2@2762> INCLUDE "internal_commands.ab2"
0003AE40 <internal_commands.ab2@2763> INCLUDE "internal_commands.ab2"
0003AE4C <internal_commands.ab2@2764> INCLUDE "internal_commands.ab2"
0003AE79 <internal_commands.ab2@2765> INCLUDE "internal_commands.ab2"
0003AE7A <internal_commands.ab2@2766> INCLUDE "internal_commands.ab2"
0003AE7E <internal_commands.ab2@2769> INCLUDE "internal_commands.ab2"
0003AE80 <internal_commands.ab2@2770> INCLUDE "internal_commands.ab2"
0003AE88 <internal_commands.ab2@2771> INCLUDE "internal_commands.ab2"
0003AEBF <internal_commands.ab2@2772> INCLUDE "internal_commands.ab2"
0003AEC0 <internal_commands.ab2@2773> INCLUDE "internal_commands.ab2"
0003AEC4 <internal_commands.ab2@2776> INCLUDE "internal_commands.ab2"
0003AEC6 <internal_commands.ab2@2777> INCLUDE "internal_commands.ab2"
0003AECE <internal_commands.ab2@2778> INCLUDE "internal_commands.ab2"
0003AEED <internal_commands.ab2@2779> INCLUDE "internal_commands.ab2"
0003AEEE <internal_commands.ab2@2780> INCLUDE "internal_commands.ab2"
0003AEF2 <internal_commands.ab2@2783> INCLUDE "internal_commands.ab2"
0003AEF4 <internal_commands.ab2@2784> INCLUDE "internal_commands.ab2"
0003AEFB <internal_commands.ab2@2785> INCLUDE "internal_commands.ab2"
0003AF31 <internal_commands.ab2@2786> INCLUDE "internal_commands.ab2"
0003AF32 <internal_commands.ab2@2787> INCLUDE "internal_commands.ab2"
0003AF36 <internal_commands.ab2@2790> INCLUDE "internal_commands.ab2"
0003AF38 <internal_commands.ab2@2791> INCLUDE "internal_commands.ab2"
0003AF41 <internal_commands.ab2@2792> INCLUDE "internal_commands.ab2"
0003AF76 <internal_commands.ab2@2793> INCLUDE "internal_commands.ab2"
0003AF7A <internal_commands.ab2@2797> INCLUDE "internal_commands.ab2"
0003AF7C <internal_commands.ab2@2798> INCLUDE "internal_commands.ab2"
0003AF8C <internal_commands.ab2@2799> INCLUDE "internal_commands.ab2"
0003AFC3 <internal_commands.ab2@2800> INCLUDE "internal_commands.ab2"
0003AFC4 <internal_commands.ab2@2801> INCLUDE "internal_commands.ab2"
0003AFC4 <AmiBlitz3.ab2@28292> INCLUDE "internal_commands.ab2"
0003AFC8 <AmiBlitz3.ab2@28297>            Dc.l cif_lt                                     ;ciflt
0003AFCC <AmiBlitz3.ab2@28298>            Dc.l cif_eq                                     ;cifeq
0003AFD0 <AmiBlitz3.ab2@28299>            Dc.l cif_gt                                     ;cifgt
0003AFD4 <AmiBlitz3.ab2@28300>            Ds.l 1                                          ;0
0003AFD8 <AmiBlitz3.ab2@28301>            Dc.l cif_le                                     ;cifle
0003AFDC <AmiBlitz3.ab2@28302>            Dc.l cif_ne                                     ;cifne
0003AFE0 <AmiBlitz3.ab2@28303>            Dc.l cif_le                                     ;cifge
0003AFE4 <AmiBlitz3.ab2@28304>            Ds.l 1                                          ;0
0003AFE8 <AmiBlitz3.ab2@28305>            Dc.l cif_ge                                     ;cifge
0003AFEC <AmiBlitz3.ab2@28306>            Dc.l cif_ne                                     ;cifne
0003AFF0 <AmiBlitz3.ab2@28307>            Dc.l cif_ge                                     ;cifge
0003AFF4 <AmiBlitz3.ab2@28308>            Ds.l 1                                          ;0
0003AFF8 <AmiBlitz3.ab2@28311>            Dc.l do_newtype                                 ;donewtype
0003AFFC <AmiBlitz3.ab2@28312>            Dc.l do_end                                     ;doend
0003B000 <AmiBlitz3.ab2@28313>            Dc.l do_let                                     ;dolet
0003B004 <AmiBlitz3.ab2@28314>            Dc.l do_dim                                     ;dodim
0003B008 <AmiBlitz3.ab2@28315>            Dc.l do_goto                                    ;dogoto
0003B00C <AmiBlitz3.ab2@28316>            Dc.l do_gosub                                   ;dogosub
0003B010 <AmiBlitz3.ab2@28317>            Dc.l do_return                                  ;doreturn
0003B014 <AmiBlitz3.ab2@28318>            Dc.l do_statement                               ;dostatement
0003B018 <AmiBlitz3.ab2@28319>            Dc.l do_function                                ;dofunc
0003B01C <AmiBlitz3.ab2@28320>            Dc.l do_mousewait                               ;domwait
0003B020 <AmiBlitz3.ab2@28321>            Dc.l do_if                                      ;doif
0003B024 <AmiBlitz3.ab2@28322>            Dc.l do_while                                   ;dowhile
0003B028 <AmiBlitz3.ab2@28323>            Dc.l do_Macro                                   ;domacro
0003B02C <AmiBlitz3.ab2@28324>            Dc.l do_select                                  ;doselect
0003B030 <AmiBlitz3.ab2@28325>            Dc.l do_case                                    ;docase
0003B034 <AmiBlitz3.ab2@28326>            Dc.l do_default                                 ;dodefault
0003B038 <AmiBlitz3.ab2@28327>            Dc.l do_AsmExit                                 ;doasmexit
0003B03C <AmiBlitz3.ab2@28328>            Dc.l do_xinclude                                ;doxinclude
0003B040 <AmiBlitz3.ab2@28329>            Dc.l do_INCLUDE                                 ;doinclude
0003B044 <AmiBlitz3.ab2@28330>            Dc.l do_syntax                                  ;syntaxerr
0003B048 <AmiBlitz3.ab2@28331>            Dc.l do_shared                                  ;doshared
0003B04C <AmiBlitz3.ab2@28332>            Dc.l do_for                                     ;dofor
0003B050 <AmiBlitz3.ab2@28333>            Dc.l do_next                                    ;donext
0003B054 <AmiBlitz3.ab2@28334>            Dc.l syntaxerr                                  ; To
0003B058 <AmiBlitz3.ab2@28335>            Dc.l syntaxerr                                  ; Step
0003B05C <AmiBlitz3.ab2@28336>            Dc.l do_data                                    ;dodata
0003B060 <AmiBlitz3.ab2@28337>            Dc.l do_read                                    ;doread
0003B064 <AmiBlitz3.ab2@28341>            Dc.l syntaxerr                                  ; CNIF
0003B068 <AmiBlitz3.ab2@28342>            Dc.l syntaxerr                                  ; CSIF
0003B06C <AmiBlitz3.ab2@28343>            Dc.l syntaxerr                                  ; CELSE
0003B070 <AmiBlitz3.ab2@28344>            Dc.l syntaxerr                                  ; CEND
0003B074 <AmiBlitz3.ab2@28345>            Dc.l do_cerr                                    ;docerr
0003B078 <AmiBlitz3.ab2@28346>            Dc.l do_then                                    ;dothen
0003B07C <AmiBlitz3.ab2@28347>            Dc.l do_else                                    ;doelse
0003B080 <AmiBlitz3.ab2@28348>            Dc.l do_even4                                   ;doeven4
0003B084 <AmiBlitz3.ab2@28349>            Dc.l do_even8                                   ;doeven8
0003B088 <AmiBlitz3.ab2@28351>            Dc.l do_dc                                      ;dodc
0003B08C <AmiBlitz3.ab2@28352>            Dc.l do_ds                                      ;dods
0003B090 <AmiBlitz3.ab2@28353>            Dc.l do_even                                    ;doeven
0003B094 <AmiBlitz3.ab2@28354>            Dc.l do_dcb                                     ;dodcb
0003B098 <AmiBlitz3.ab2@28355>            Dc.l do_setreg                                  ;dosetreg
0003B09C <AmiBlitz3.ab2@28356>            Dc.l do_IncBin                                  ;doincbin
0003B0A0 <AmiBlitz3.ab2@28357>            Dc.l do_free                                    ;dofree
0003B0A4 <AmiBlitz3.ab2@28358>            Dc.l do_use                                     ;douse
0003B0A8 <AmiBlitz3.ab2@28359>            Dc.l do_Stop                                    ;dostop
0003B0AC <AmiBlitz3.ab2@28360>            Dc.l do_Cont                                    ;docont
0003B0B0 <AmiBlitz3.ab2@28361>            Dc.l syntaxerr                                  ;syntaxeer
0003B0B4 <AmiBlitz3.ab2@28362>            Dc.l do_SetInt                                  ;dosetint
0003B0B8 <AmiBlitz3.ab2@28363>            Dc.l do_ClrInt                                  ;doclrint
0003B0BC <AmiBlitz3.ab2@28364>            Dc.l do_MaxLen                                  ;domaxlen
0003B0C0 <AmiBlitz3.ab2@28365>            Dc.l do_DEFTYPE                                 ;dodeftype
0003B0C4 <AmiBlitz3.ab2@28366>            Dc.l do_BLITZ                                   ;doblitz
0003B0C8 <AmiBlitz3.ab2@28367>            Dc.l do_AMIGA                                   ;doamiga
0003B0CC <AmiBlitz3.ab2@28368>            Dc.l do_QAMIGA                                  ;doqamiga
0003B0D0 <AmiBlitz3.ab2@28369>            Dc.l do_VWait                                   ;dovwait
0003B0D4 <AmiBlitz3.ab2@28370>            Dc.l do_LibJsr                                  ;dolibjsr
0003B0D8 <AmiBlitz3.ab2@28371>            Dc.l do_TokeJsr                                 ;dotokejsr
0003B0DC <AmiBlitz3.ab2@28372>            Dc.l do_BLibJsr                                 ;doblibjsr
0003B0E0 <AmiBlitz3.ab2@28373>            Dc.l _extb                                      ;syntaxerr
0003B0E4 <AmiBlitz3.ab2@28377>            Dc.l syntaxerr                                  ;syntaxerr      ;flash2 ; for list
0003B0E8 <AmiBlitz3.ab2@28378>            Dc.l do_SetErr                                  ;doseterr
0003B0EC <AmiBlitz3.ab2@28379>            Dc.l do_ClrErr                                  ;doclrerr
0003B0F0 <AmiBlitz3.ab2@28380>            Dc.l syntaxerr                                  ;syntaxerr
0003B0F4 <AmiBlitz3.ab2@28381>            Dc.l do_ErrFail                                 ;doerrfail
0003B0F8 <AmiBlitz3.ab2@28382>            Dc.l syntaxerr
0003B0FC <AmiBlitz3.ab2@28383>            Dc.l syntaxerr                                  ;mod
0003B100 <AmiBlitz3.ab2@28384>            Dc.l syntaxerr                                  ;Pi
0003B104 <AmiBlitz3.ab2@28385>            Dc.l do_Repeat                                  ;dorepeat
0003B108 <AmiBlitz3.ab2@28386>            Dc.l do_Until                                   ;dountil
0003B10C <AmiBlitz3.ab2@28387>            Dc.l do_PutReg                                  ;doputreg
0003B110 <AmiBlitz3.ab2@28388>            Dc.l do_Pop                                     ;dopop
0003B114 <AmiBlitz3.ab2@28389>            Dc.l do_INCDIR                                  ;doincdir
0003B118 <AmiBlitz3.ab2@28390>            Dc.l mydo_Endif2                                ;mydoendif2
0003B11C <AmiBlitz3.ab2@28391>            Dc.l do_Wend                                    ;dowend
0003B120 <AmiBlitz3.ab2@28392>            Dc.l do_SysJsr                                  ;dosysjsr
0003B124 <AmiBlitz3.ab2@28393>            Dc.l do_WBStartup                               ;dowbstartup
0003B128 <AmiBlitz3.ab2@28394>            Dc.l syntaxerr
0003B12C <AmiBlitz3.ab2@28395>            Dc.l do_Ongo                                    ;doongo
0003B130 <AmiBlitz3.ab2@28396>            Dc.l syntaxerr
0003B134 <AmiBlitz3.ab2@28397>            Dc.l do_Forever                                 ;doforever
0003B138 <AmiBlitz3.ab2@28398>            Dc.l do_Restore                                 ;dorestore
0003B13C <AmiBlitz3.ab2@28399>            Dc.l do_Exchange                                ;doexchange
0003B140 <AmiBlitz3.ab2@28400>            Dc.l do_USEPATH                                 ;dousepath
0003B144 <AmiBlitz3.ab2@28401>            Dc.l do_CloseEd                                 ;doclosed
0003B148 <AmiBlitz3.ab2@28402>            Dc.l do_NoCli                                   ;donocli
0003B14C <AmiBlitz3.ab2@28403>            Dc.l syntaxerr                                  ;syntaxerr
0003B150 <AmiBlitz3.ab2@28404>            Dc.l syntaxerr                                  ;syntaxerr
0003B154 <AmiBlitz3.ab2@28405>            Dc.l syntaxerr                                  ;syntaxerr
0003B158 <AmiBlitz3.ab2@28406>            Dc.l syntaxerr                                  ;syntaxerr
0003B15C <AmiBlitz3.ab2@28407>            Dc.l syntaxerr                                  ;syntaxerr
0003B160 <AmiBlitz3.ab2@28408>            Dc.l do_runerrson                               ;dorunerrson
0003B164 <AmiBlitz3.ab2@28409>            Dc.l do_runerrsoff                              ;dorunerrsoff
0003B168 <AmiBlitz3.ab2@28410>            Dc.l do_uselastpath
0003B16C <AmiBlitz3.ab2@28411>            Dc.l do_regload
0003B170 <AmiBlitz3.ab2@28412>            Dc.l do_regsave
0003B174 <AmiBlitz3.ab2@28413>            Dc.l do_Object
0003B178 <AmiBlitz3.ab2@28414>            Dc.l do_usepath2
0003B17C <AmiBlitz3.ab2@28415>            Dc.l do_LastRunErrsMode
0003B180 <AmiBlitz3.ab2@28438> menu_items:Dc.l menu_compile_run                                ;menuadds oreg source
0003B184 <AmiBlitz3.ab2@28439>            Dc.l menu_run
0003B188 <AmiBlitz3.ab2@28440>            Dc.l menu_createexecutable
0003B18C <AmiBlitz3.ab2@28441>            Dc.l menu_dummyfunc          ;was menu_compileroptions
0003B190 <AmiBlitz3.ab2@28442>            Dc.l menu_createresidentfile
0003B194 <AmiBlitz3.ab2@28443>            Dc.l menu_viewnewtypes
0003B198 <AmiBlitz3.ab2@28444>            Dc.l menu_simcliarguments
0003B19C <AmiBlitz3.ab2@28445>            Dc.l menu_dummyfunc          ;was menu_calculator
0003B1A0 <AmiBlitz3.ab2@28446>            Dc.l menu_reloadlibs
0003B1A4 <AmiBlitz3.ab2@28447>            Dc.l menu_loaddebugmodule
0003B1A8 <AmiBlitz3.ab2@28448>            Dc.l menu_dummyfunc
0003B1AC <AmiBlitz3.ab2@28449>            Dc.l menu_newcreate
0003B1B0 <AmiBlitz3.ab2@28450>            Dc.l menu_dummyfunc
0003B1B4 <AmiBlitz3.ab2@28451>            Dc.l toggledebug
0003B1B8 <AmiBlitz3.ab2@28452>            Dc.l menu_dummyfunc
0003B1BC <AmiBlitz3.ab2@28453>            Dc.l menu_dummyfunc
0003B1E6 <AmiBlitz3.ab2@28458>   !basic
0003B23C <AmiBlitz3.ab2@28459>   error{!TRANS{"Inavlid amiblitz3 menu item called!"} }
0003B25A <AmiBlitz3.ab2@28460>   !asm
0003B25C <AmiBlitz3.ab2@28461> RTS
0003B25D <AmiBlitz3.ab2@28467> set_autorun:               Dc.b $00
0003B262 <AmiBlitz3.ab2@28468> autorun:                   Dc.b $80,$01,$01,$00,$01
0003B263 <AmiBlitz3.ab2@28470> set_interruptcheck:        Dc.b $00
0003B268 <AmiBlitz3.ab2@28471> interruptcheck             Dc.b $80,$01,$01,$00,$01
0003B269 <AmiBlitz3.ab2@28473> set_assemblercheck:        Ds.b 1
0003B26E <AmiBlitz3.ab2@28474> assemblercheck:            Dc.b $00,$01,$01,$00,$01
0003B26F <AmiBlitz3.ab2@28476> set_overflowcheck:         Ds.b 1
0003B274 <AmiBlitz3.ab2@28477> overflowcheck:             Dc.b $00,$01,$01,$00,$01
0003B27A <AmiBlitz3.ab2@28479> default_obsolete:          Dc.b $00,$80,$01,$01,$00,$01
0003B280 <AmiBlitz3.ab2@28480> default_interruptcheck:    Dc.b $00,$80,$01,$01,$00,$01
0003B286 <AmiBlitz3.ab2@28481> default_overflowcheck:     Dc.b $00,$80,$01,$01,$00,$01
0003B288 <AmiBlitz3.ab2@28482> Even4
0003B294 <AmiBlitz3.ab2@28485> tsthead:                   Dc.l $000003F3,$00000000,$00000001
0003B29C <AmiBlitz3.ab2@28486>                            Dc.l $00000000,$00000000
0003B2A4 <AmiBlitz3.ab2@28487> tstsize1:                  Dc.l $00000100,$000003E9
0003B2A8 <AmiBlitz3.ab2@28488> tstsize2:                  Dc.l $00000100
0003B2AC <AmiBlitz3.ab2@28489> tstend:                    Dc.l $000003EC
0003B2B4 <AmiBlitz3.ab2@28490> tstsize3:                  Ds.l 2
0003B2B8 <AmiBlitz3.ab2@28491> tstdone:                   Dc.l $000003F2
0003B2BC <AmiBlitz3.ab2@28494> edstruct:                  Dc.l tokens                     ;data for ted
0003B2C0 <AmiBlitz3.ab2@28498>                            Dc.l 0
0003B2C4 <AmiBlitz3.ab2@28500>                            Dc.l read_xtrafile              ;load .xtra routine
0003B2C8 <AmiBlitz3.ab2@28501>                            Dc.l write_xtrafile             ;save .xtra routine
0003B2CC <AmiBlitz3.ab2@28502>                            Dc.l call_menuentry             ;Menu Routine
0003B2D0 <AmiBlitz3.ab2@28503>                            Ds.l 1                          ;cleanup (?)
0003B2D4 <AmiBlitz3.ab2@28504>                            Dc.b ":",34,".;"
0003B3D0 <AmiBlitz3.ab2@28507> 
0003B4B0 <AmiBlitz3.ab2@28508>                            Ds.l 56
0003B4B2 <AmiBlitz3.ab2@28513> lslimm:                    Dc.b $E1,$48                                             ;LSL.W   #8,D0
0003B4B6 <AmiBlitz3.ab2@28516> use:                       Dc.b $26,$6D,$00,$00                                     ;MOVEA.L $0000(A5),A3
0003B4B8 <AmiBlitz3.ab2@28517>                            Dc.b $D6,$C0                                             ;ADDA.W  D0,A3
0003B4BC <AmiBlitz3.ab2@28518>                            Dc.b $2B,$4B,$00,$00                                     ;MOVE.L  A3,$0000(A5)
0003B4C2 <AmiBlitz3.ab2@28522> beginarr:                  Dc.b $20,$3C,$00,$00,$00,$00                             ;MOVE.L  #$00000000,D0
0003B4C4 <AmiBlitz3.ab2@28526>                            Dc.b $C0,$C1                                             ;MULU.W  D1,D0
0003B4C8 <AmiBlitz3.ab2@28529> putarr:                    Dc.b $2B,$40 :                            Dc.b $00,$00   ;MOVE.L  D0,$0000(A5)
0003B4CC <AmiBlitz3.ab2@28532> doarr:                     Dc.b $34,$3C,$00,$00                                     ;MOVE.W  #$0000,D2
0003B4D0 <AmiBlitz3.ab2@28533>                            Dc.b $36,$3C,$00,$00                                     ;MOVE.W  #$0000,D3
0003B4D2 <AmiBlitz3.ab2@28539>                            Dc.b $4A,$40                                             ;TST.W   D0
0003B4D4 <AmiBlitz3.ab2@28543>                            Dc.b $4A,$80                                             ;TST.L   D0
0003B4D6 <AmiBlitz3.ab2@28546> nops8:                     Dc.b $4E,$71                                             ;NOP
0003B4D8 <AmiBlitz3.ab2@28547>                            Dc.b $4E,$71                                             ;NOP
0003B4DA <AmiBlitz3.ab2@28548>                            Dc.b $4E,$71                                             ;NOP
0003B4DC <AmiBlitz3.ab2@28549>                            Dc.b $4E,$71                                             ;NOP
0003B4DE <AmiBlitz3.ab2@28550> nops4:                     Dc.b $4E,$71                                             ;NOP
0003B4E0 <AmiBlitz3.ab2@28552>                            Dc.b $4E,$71                                             ;NOP
0003B4E2 <AmiBlitz3.ab2@28553>                            Dc.b $4E,$71                                             ;NOP
0003B4E4 <AmiBlitz3.ab2@28554>                            Dc.b $4E,$71                                             ;NOP
0003B4E8 <AmiBlitz3.ab2@28558> dataget:                   Dc.b $26,$6D :                            Dc.b $00,$00   ;MOVEA.L $0000(A5),A3
0003B4EC <AmiBlitz3.ab2@28561> dataput:                   Dc.b $2B,$4B :                            Dc.b $00,$00   ;MOVE.L  A3,$0000(A5)
0003B4EE <AmiBlitz3.ab2@28564> stlenget:                  Dc.b $2F,$1B                                             ;MOVE.L  (A3)+,-(A7)
0003B4F0 <AmiBlitz3.ab2@28567> stalign:                   Dc.b $52,$4B                                             ;ADDQ.W  #1,A3
0003B4F2 <AmiBlitz3.ab2@28568>                            Dc.b $C1,$8B                                             ;EXG D0,A3
0003B4F6 <AmiBlitz3.ab2@28569>                            Dc.b $08,$80,$00,$00                                     ;BCLR    #0,D0
0003B4F8 <AmiBlitz3.ab2@28570>                            Dc.b $C1,$8B                                             ;EXG D0,A3
0003B4FA <AmiBlitz3.ab2@28576> dataletb:                  Dc.b $52,$4B                                             ;ADDQ.W  #1,A3
0003B4FE <AmiBlitz3.ab2@28577>                            Dc.b $1B,$5B,$00,$00                                     ;MOVE.B  (A3)+,$0000(A5)
0003B500 <AmiBlitz3.ab2@28582> dataletbl:                 Dc.b $52,$4B                                             ;ADDQ.W  #1,A3
0003B504 <AmiBlitz3.ab2@28583>                            Dc.b $19,$5B,$00,$00                                     ;MOVE.B  (A3)+,$0000(A4)
0003B506 <AmiBlitz3.ab2@28587> dataletb2:                 Dc.b $52,$4B                                             ;ADDQ.W  #1,A3
0003B508 <AmiBlitz3.ab2@28588>                            Dc.b $14,$9B                                             ;MOVE.B  (A3)+,(A2)
0003B50C <AmiBlitz3.ab2@28594> dataletw:                  Dc.b $3B,$5B,$00,$00                                     ;MOVE.W  (A3)+,$0000(A5)
0003B50E <AmiBlitz3.ab2@28595>                            Dc.b $34,$9B                                             ;MOVE.W  (A3)+,(A2)
0003B512 <AmiBlitz3.ab2@28596>                            Dc.b $39,$5B,$00,$00                                     ;MOVE.W  (A3)+,$0000(A4)
0003B516 <AmiBlitz3.ab2@28600> dataletl:                  Dc.b $2B,$5B,$00,$00                                     ;MOVE.L  (A3)+,$0000(A5)
0003B518 <AmiBlitz3.ab2@28601>                            Dc.b $24,$9B                                             ;MOVE.L  (A3)+,(A2)
0003B51C <AmiBlitz3.ab2@28602>                            Dc.b $29,$5B,$00,$00                                     ;MOVE.L  (A3)+,$0000(A4)
0003B51E <AmiBlitz3.ab2@28605> nextfixw:                  Dc.b $50,$4F                                             ;ADDQ.W  #8,A7
0003B522 <AmiBlitz3.ab2@28608> nextfixw2:                 Dc.b $4F,$EF,$00,$0A                                     ;LEA $000A(A7),A7
0003B526 <AmiBlitz3.ab2@28611> nextfixl:                  Dc.b $4F,$EF,$00,$0C                                     ;LEA $000C(A7),A7
0003B52A <AmiBlitz3.ab2@28614> nextfixl2:                 Dc.b $4F,$EF,$00,$0E                                     ;LEA $000E(A7),A7
0003B52E <AmiBlitz3.ab2@28618>                            Dc.b $24,$6F,$00,$04                                     ;MOVEA.L $0004(A7),A2
0003B530 <AmiBlitz3.ab2@28619>                            Dc.b $30,$17                                             ;MOVE.W  (A7),D0
0003B532 <AmiBlitz3.ab2@28620>                            Dc.b $D1,$12                                             ;ADD.B   D0,(A2)
0003B536 <AmiBlitz3.ab2@28625>                            Dc.b $24,$6F,$00,$04                                     ;MOVEA.L $0004(A7),A2
0003B538 <AmiBlitz3.ab2@28626>                            Dc.b $30,$17                                             ;MOVE.W  (A7),D0
0003B53A <AmiBlitz3.ab2@28627>                            Dc.b $D1,$52                                             ;ADD.W   D0,(A2)
0003B53E <AmiBlitz3.ab2@28632>                            Dc.b $24,$6F,$00,$08                                     ;MOVEA.L $0008(A7),A2
0003B540 <AmiBlitz3.ab2@28633>                            Dc.b $20,$17                                             ;MOVE.L  (A7),D0
0003B542 <AmiBlitz3.ab2@28634>                            Dc.b $D1,$92                                             ;ADD.L   D0,(A2)
0003B546 <AmiBlitz3.ab2@28639>                            Dc.b $24,$6F,$00,$08                                     ;MOVEA.L $0008(A7),A2
0003B548 <AmiBlitz3.ab2@28640>                            Dc.b $20,$12                                             ;MOVE.L  (A2),D0
0003B54A <AmiBlitz3.ab2@28641>                            Dc.b $22,$17                                             ;MOVE.L  (A7),D1
0003B54E <AmiBlitz3.ab2@28642>                            Dc.b $4E,$AE,$FF,$BE                                     ;JSR -$0042(A6)
0003B550 <AmiBlitz3.ab2@28643>                            Dc.b $24,$80                                             ;MOVE.L  D0,(A2)
0003B554 <AmiBlitz3.ab2@28648>                            Dc.b $24,$6F,$00,$04                                     ;MOVEA.L $0004(A7),A2
0003B556 <AmiBlitz3.ab2@28649>                            Dc.b $10,$12                                             ;MOVE.B  (A2),D0
0003B55A <AmiBlitz3.ab2@28650>                            Dc.b $32,$2F,$00,$02                                     ;MOVE.W  $0002(A7),D1
0003B55C <AmiBlitz3.ab2@28651>                            Dc.b $4A,$57                                             ;TST.W   (A7)
0003B560 <AmiBlitz3.ab2@28652>                            Dc.b $6A,$00,$00,$04                                     ;BPL.W   L000001         ;.skip org source
0003B562 <AmiBlitz3.ab2@28653>                            Dc.b $C1,$41                                             ;EXG D0,D1
0003B564 <AmiBlitz3.ab2@28656>                            Dc.b $B0,$01                                             ;CMP.B   D1,D0
0003B568 <AmiBlitz3.ab2@28661>                            Dc.b $24,$6F,$00,$04                                     ;MOVEA.L $0004(A7),A2
0003B56A <AmiBlitz3.ab2@28662>                            Dc.b $30,$12                                             ;MOVE.W  (A2),D0
0003B56E <AmiBlitz3.ab2@28663>                            Dc.b $32,$2F,$00,$02                                     ;MOVE.W  $0002(A7),D1
0003B570 <AmiBlitz3.ab2@28664>                            Dc.b $4A,$57                                             ;TST.W   (A7)
0003B574 <AmiBlitz3.ab2@28665>                            Dc.b $6A,$00,$00,$04                                     ;BPL.W   L000002         ;.skip org source
0003B576 <AmiBlitz3.ab2@28666>                            Dc.b $C1,$41                                             ;EXG D0,D1
0003B578 <AmiBlitz3.ab2@28669>                            Dc.b $B0,$41                                             ;CMP.W   D1,D0
0003B57C <AmiBlitz3.ab2@28674>                            Dc.b $24,$6F,$00,$08                                     ;MOVEA.L $0008(A7),A2
0003B57E <AmiBlitz3.ab2@28675>                            Dc.b $20,$12                                             ;MOVE.L  (A2),D0
0003B582 <AmiBlitz3.ab2@28676>                            Dc.b $22,$2F,$00,$04                                     ;MOVE.L  $0004(A7),D1
0003B584 <AmiBlitz3.ab2@28677>                            Dc.b $4A,$57                                             ;TST.W   (A7)
0003B588 <AmiBlitz3.ab2@28678>                            Dc.b $6A,$00,$00,$04                                     ;BPL.W   L000003         ;.skip org source
0003B58A <AmiBlitz3.ab2@28679>                            Dc.b $C1,$41                                             ;EXG D0,D1
0003B58C <AmiBlitz3.ab2@28682>                            Dc.b $B0,$81                                             ;CMP.L   D1,D0
0003B590 <AmiBlitz3.ab2@28687>                            Dc.b $24,$6F,$00,$08                                     ;MOVEA.L $0008(A7),A2
0003B592 <AmiBlitz3.ab2@28688>                            Dc.b $20,$12                                             ;MOVE.L  (A2),D0
0003B596 <AmiBlitz3.ab2@28689>                            Dc.b $22,$2F,$00,$04                                     ;MOVE.L  $0004(A7),D1
0003B59C <AmiBlitz3.ab2@28690>                            Dc.b $08,$2F,$00,$07,$00,$03                             ;BTST    #7,$0003(A7)
0003B5A0 <AmiBlitz3.ab2@28691>                            Dc.b $67,$00,$00,$04                                     ;BEQ.W   L000004
0003B5A2 <AmiBlitz3.ab2@28692>                            Dc.b $C1,$41                                             ;EXG D0,D1
0003B5A6 <AmiBlitz3.ab2@28699>                            Dc.b $4E,$AE,$FF,$D6                                     ;JSR -$002A(A6)
0003B5A8 <AmiBlitz3.ab2@28703> swapd0:                    Dc.b $48,$40                                             ;SWAP    D0
0003B5AA <AmiBlitz3.ab2@28706> pushindex:                 Dc.b $2F,$0A                                             ;MOVE.L  A2,-(A7)
0003B5AE <AmiBlitz3.ab2@28709> leaamp:                    Dc.b $45,$ED :                            Dc.b $00,$00   ;LEA $0000(A5),A2
0003B5B0 <AmiBlitz3.ab2@28710> leaamp2:                   Dc.b $20,$0A                                             ;MOVE.L  A2,D0
0003B5B4 <AmiBlitz3.ab2@28713> leaampl:                   Dc.b $45,$EC :                            Dc.b $00,$00   ;LEA $0000(A4),A2
0003B5B6 <AmiBlitz3.ab2@28716> stamp:                     Dc.b $20,$12                                             ;MOVE.L  (A2),D0
0003B5BA <AmiBlitz3.ab2@28719> stamp2:                    Dc.b $24,$6D :                            Dc.b $00,$00   ;MOVEA.L $0000(A5),A2
0003B5BC <AmiBlitz3.ab2@28723>                            Dc.b $58,$4F                                             ;ADDQ.W  #4,A7
0003B5BE <AmiBlitz3.ab2@28726> pushd0wd:                  Dc.b $3F,$00                                             ;MOVE.W  D0,-(A7)
0003B5C0 <AmiBlitz3.ab2@28729> pushd0l:                   Dc.b $2F,$00                                             ;MOVE.L  D0,-(A7)
0003B5C4 <AmiBlitz3.ab2@28732> movenumrep:                Dc.b $3E,$3C :                            Dc.b $00,$00   ;MOVE.W  #$0000,D7
0003B5C8 <AmiBlitz3.ab2@28735> preplibst:                 Dc.b $45,$EF :                            Dc.b $00,$00   ;LEA $0000(A7),A2
0003B5CC <AmiBlitz3.ab2@28738> fixlibst:                  Dc.b $4F,$EF :                            Dc.b $00,$00   ;LEA $0000(A7),A7
0003B5CE <AmiBlitz3.ab2@28741> pushdn:                    Dc.b $2F,$00                                             ;MOVE.L  D0,-(A7)
0003B5D0 <AmiBlitz3.ab2@28744> movea3a7:                  Dc.b $2F,$0B                                             ;MOVE.L  A3,-(A7)
0003B5D4 <AmiBlitz3.ab2@28747> movestst2:                 Dc.b $20,$2F :                            Dc.b $00,$06   ;MOVE.L  $0006(A7),D0
0003B5DA <AmiBlitz3.ab2@28748>                            Dc.b $3F,$6F,$00,$04,$00,$08                             ;MOVE.W  $0004(A7),$0008(A7)
0003B5DC <AmiBlitz3.ab2@28749>                            Dc.b $2E,$9F                                             ;MOVE.L  (A7)+,(A7)
0003B5E0 <AmiBlitz3.ab2@28753> movea7dn:                  Dc.b $20,$2F :                            Dc.b $00,$04   ;MOVE.L  $0004(A7),D0
0003B5E2 <AmiBlitz3.ab2@28754>                            Dc.b $2E,$9F                                             ;MOVE.L  (A7)+,(A7)
0003B5E4 <AmiBlitz3.ab2@28758> moved0a3:                  Dc.b $26,$40                                             ;MOVEA.L D0,A3
0003B5E8 <AmiBlitz3.ab2@28761> movestdn:                  Dc.b $20,$2D :                            Dc.b $00,$00   ;MOVE.L  $0000(A5),D0
0003B5EA <AmiBlitz3.ab2@28765>                            Dc.b $20,$0B                                             ;MOVE.L  A3,D0
0003B5EC <AmiBlitz3.ab2@28769>                            Dc.b $2F,$00                                             ;MOVE.L  D0,-(A7)
0003B5EE <AmiBlitz3.ab2@28773>                            Dc.b $20,$1F                                             ;MOVE.L  (A7)+,D0
0003B5F2 <AmiBlitz3.ab2@28776> moverts:                   Dc.b $2F,$57 :                            Dc.b $00,$00   ;MOVE.L  (A7),$0000(A7)
0003B5F6 <AmiBlitz3.ab2@28779> fixstack:                  Dc.b $4F,$EF :                            Dc.b $00,$00   ;LEA $0000(A7),A7
0003B5F8 <AmiBlitz3.ab2@28782> fixq:                      Dc.b $50,$4F                                             ;ADDQ.W  #8,A7
0003B5FA <AmiBlitz3.ab2@28785> fix1:                      Dc.b $2E,$9F                                             ;MOVE.L  (A7)+,(A7)
0003B5FC <AmiBlitz3.ab2@28788> movedna3:                  Dc.b $26,$40                                             ;MOVEA.L D0,A3
0003B600 <AmiBlitz3.ab2@28791> least:                     Dc.b $45,$EC :                            Dc.b $00,$00   ;LEA $0000(A4),A2
0003B604 <AmiBlitz3.ab2@28794> funcst:                    Dc.b $2F,$2C :                            Dc.b $00,$00   ;MOVE.L  $0000(A4),-(A7)
0003B606 <AmiBlitz3.ab2@28797> addq4a2:                   Dc.b $58,$4A                                             ;ADDQ.W  #4,A2
0003B608 <AmiBlitz3.ab2@28801>                            Dc.b $2F,$0B                                             ;MOVE.L  A3,-(A7)
0003B60C <AmiBlitz3.ab2@28804>                            Dc.b $2B,$4B,$00,$00                                     ;MOVE.L  A3,$0000(A5)
0003B60E <AmiBlitz3.ab2@28810>                            Dc.b $26,$5F                                             ;MOVEA.L (A7)+,A3
0003B612 <AmiBlitz3.ab2@28813>                            Dc.b $2B,$4B,$00,$00                                     ;MOVE.L  A3,$0000(A5)
0003B614 <AmiBlitz3.ab2@28819>                            Dc.b $CB,$4C                                             ;EXG A5,A4
0003B618 <AmiBlitz3.ab2@28823> linksize:                  Dc.b $4E,$54 :                            Dc.b $00,$00   ;LINK    A4,#-$0000
0003B61A <AmiBlitz3.ab2@28826> unlinka4:                  Dc.b $4E,$5C                                             ;UNLK    A4
0003B61C <AmiBlitz3.ab2@28830>                            Dc.b $2F,$0A                                             ;MOVE.L  A2,-(A7)
0003B61E <AmiBlitz3.ab2@28834>                            Dc.b $24,$5F                                             ;MOVEA.L (A7)+,A2
0003B624 <AmiBlitz3.ab2@28837> gotocode:                  Dc.b $4E,$F9,$00,$00,$00,$00                             ;JMP $00000000
0003B62A <AmiBlitz3.ab2@28840> gosubcode:                 Dc.b $4E,$B9,$00,$00,$00,$00                             ;JSR $00000000
0003B632 <AmiBlitz3.ab2@28844> mwait:                     Dc.b $08,$39,$00,$06,$00,$BF,$E0,$01                     ;BTST    #6,$00BFE001
0003B636 <AmiBlitz3.ab2@28845>                            Dc.b $66,$00,$FF,$F6                                     ;BNE.W   L000005       ;mwait: org source
0003B638 <AmiBlitz3.ab2@28849> libreg:                    Dc.b $20,$00                                             ;MOVE.L  D0,D0
0003B63C <AmiBlitz3.ab2@28852> libbase:                   Dc.b $2C,$6D :                            Dc.b $00,$00   ;MOVEA.L $0000(A5),A6
0003B640 <AmiBlitz3.ab2@28855> libjsr:                    Dc.b $4E,$AE :                            Dc.b $00,$00   ;JSR $0000(A6)
0003B644 <AmiBlitz3.ab2@28858> regtransd:                 Dc.b $20,$2D,$00,$00                                     ;MOVE.L  $0000(A5),D0
0003B648 <AmiBlitz3.ab2@28859> regtransa:                 Dc.b $20,$6D,$00,$00                                     ;MOVEA.L $0000(A5),A0
0003B64C <AmiBlitz3.ab2@28863>                            Dc.b $26,$7C,$00,$00                                     ;MOVEA.L #$00000000,A3
0003B650 <AmiBlitz3.ab2@28865>                            Dc.l $3F1B                                               ;MOVE.W  (A3)+,-(A7)
0003B652 <AmiBlitz3.ab2@28868> movea2dn:                  Dc.b $20,$12                                             ;MOVE.L  (A2),D0
0003B656 <AmiBlitz3.ab2@28871> moved3a5dn:                Dc.b $20,$2D,$00,$00                                     ;MOVE.L  $0000(A5),D0
0003B658 <AmiBlitz3.ab2@28874> stvarget2:                 Dc.b $70,$00                                             ;MOVEQ   #$00,D0
0003B65A <AmiBlitz3.ab2@28875>                            Dc.b $2F,$00                                             ;MOVE.L  D0,-(A7)
0003B65C <AmiBlitz3.ab2@28876>                            Dc.b $4A,$92                                             ;TST.L   (A2)
0003B660 <AmiBlitz3.ab2@28877> 
0003B662 <AmiBlitz3.ab2@28878>                            Dc.b $20,$52                                             ;MOVEA.L (A2),A0
0003B664 <AmiBlitz3.ab2@28879>                            Dc.b $59,$48                                             ;SUBQ.W  #4,A0
0003B666 <AmiBlitz3.ab2@28880>                            Dc.b $2E,$98                                             ;MOVE.L  (A0)+,(A7)
0003B66C <AmiBlitz3.ab2@28882>                            Dc.b $4E,$B9,$00,$00,$00,$00                             ;JSR $00000000
0003B66E <AmiBlitz3.ab2@28887> addcode:                   Dc.b $20,$1F                                             ;MOVE.L  (A7)+,D0
0003B670 <AmiBlitz3.ab2@28888>                            Dc.b $D1,$97                                             ;ADD.L   D0,(A7)
0003B672 <AmiBlitz3.ab2@28892> pushlen:                   Dc.b $2F,$18                                             ;MOVE.L  (A0)+,-(A7)
0003B676 <AmiBlitz3.ab2@28895> leaa5d3a2:                 Dc.b $45,$ED :                            Dc.b $00,$00   ;LEA $0000(A5),A2
0003B678 <AmiBlitz3.ab2@28898> pusha2:                    Dc.b $2F,$0A                                             ;MOVE.L  A2,-(A7)
0003B67A <AmiBlitz3.ab2@28902>                            Dc.b $24,$57                                             ;MOVEA.L (A7),A2
0003B67C <AmiBlitz3.ab2@28905> pulla2:                    Dc.b $24,$5F                                             ;MOVEA.L (A7)+,A2
0003B680 <AmiBlitz3.ab2@28908> pulla2st:                  Dc.b $24,$6F,$00,$04                                     ;MOVEA.L $0004(A7),A2
0003B682 <AmiBlitz3.ab2@28909>                            Dc.b $2E,$9F                                             ;MOVE.L  (A7)+,(A7)
0003B686 <AmiBlitz3.ab2@28913> pusha3:                    Dc.b $2F,$2D :                            Dc.b $00,$00   ;MOVE.L  $0000(A5),-(A7)
0003B68A <AmiBlitz3.ab2@28914> pusha32:                   Dc.b $2B,$4B :                            Dc.b $00,$00   ;MOVE.L  A3,$0000(A5)
0003B68E <AmiBlitz3.ab2@28918> pulla3:                    Dc.b $2B,$5F :                            Dc.b $00,$00   ;MOVE.L  (A7)+,$0000(A5)
0003B692 <AmiBlitz3.ab2@28922> geta3:                     Dc.b $26,$6D :                            Dc.b $00,$00   ;MOVEA.L $0000(A5),A3
0003B698 <AmiBlitz3.ab2@28926> numtoa0:                   Dc.b $20,$7C,$00,$00,$00,$00                             ;MOVEA.L #$00000000,A0
0003B69E <AmiBlitz3.ab2@28929> numtoa2:                   Dc.b $24,$7C,$00,$00,$00,$00                             ;MOVEA.L #$00000000,A2
0003B6A2 <AmiBlitz3.ab2@28933> endarray:                  Dc.b $38,$3C :                            Dc.b $00,$00   ;MOVE.W  #$0000,D4
0003B6A6 <AmiBlitz3.ab2@28937>                            Dc.b $34,$3C,$00,$00                                     ;MOVE.W  #$0000,D2
0003B6AA <AmiBlitz3.ab2@28938>                            Dc.b $36,$3C,$00,$00                                     ;MOVE.W  #$0000,D3
0003B6B0 <AmiBlitz3.ab2@28943>                            Dc.b $20,$3C,$00,$00,$00,$04                             ;MOVE.L  #$00000004,D0
0003B6B4 <AmiBlitz3.ab2@28948>                            Dc.b $2B,$40,$00,$00                                     ;MOVE.L  D0,$0000(A5)
0003B6B6 <AmiBlitz3.ab2@28953>                            Dc.b $C0,$C1                                             ;MULU.W  D1,D0
0003B6BA <AmiBlitz3.ab2@28957>                            Dc.b $2B,$40,$00,$00                                     ;MOVE.L  D0,$0000(A5)
0003B6BC <AmiBlitz3.ab2@28961> movea0:                    Dc.b $24,$52                                             ;MOVEA.L (A2),A2
0003B6BE <AmiBlitz3.ab2@28964> adda0a0:                   Dc.b $D5,$CA                                             ;ADDA.L  A2,A2
0003B6C0 <AmiBlitz3.ab2@28965>                            Dc.b $D5,$CA                                             ;ADDA.L  A2,A2
0003B6C4 <AmiBlitz3.ab2@28969>                            Dc.b $2C,$78,$00,$04                                     ;MOVEA.L $0004,A6
0003B6C8 <AmiBlitz3.ab2@28973> movea5a0:                  Dc.b $24,$6D :                            Dc.b $00,$00   ;MOVEA.L $0000(A5),A2
0003B6CC <AmiBlitz3.ab2@28976> movea0a0:                  Dc.b $24,$6A :                            Dc.b $00,$00   ;MOVEA.L $0000(A2),A2
0003B6CE <AmiBlitz3.ab2@28979> addqa0:                    Dc.b $52,$4A                                             ;ADDQ.W  #1,A2
0003B6D2 <AmiBlitz3.ab2@28982> leaa0a0:                   Dc.b $45,$EA :                            Dc.b $00,$00   ;LEA $0000(A2),A2
0003B6D4 <AmiBlitz3.ab2@28985> addrega2:                  Dc.b $D4,$C0                                             ;ADDA.W  D0,A2
0003B6DD <AmiBlitz3.ab2@28989>                            Dc.b "ram:test",0
0003B6DE <AmiBlitz3.ab2@28990> Even
0003B6E2 <AmiBlitz3.ab2@28994>                            Dc.l  0                          ;was  Ds.w 3 org source
0003B6E4 <AmiBlitz3.ab2@28996>                            Dc.w  0
0003B6E8 <AmiBlitz3.ab2@28999> _mathffpbase:              Ds.l 1                           ;maths org source
0003B6EA <AmiBlitz3.ab2@29000> regnum:                    Ds.w 1                           ;regat org source       ;register being used!
0003B6EC <AmiBlitz3.ab2@29001> typelen:                   Ds.w 1
0003B6F0 <AmiBlitz3.ab2@29002> prevtype:                  Ds.l 1
0003B6F4 <AmiBlitz3.ab2@29003> lastsourcepos:             Ds.l 1                           ;prevloc org source
0003B6F6 <AmiBlitz3.ab2@29004> lastchar:                  Ds.w 1
0003B6FA <AmiBlitz3.ab2@29005> thistype:                  Ds.l 1
0003B6FE <AmiBlitz3.ab2@29006> errstack:                  Ds.l 1
0003B702 <AmiBlitz3.ab2@29007> errcont:                   Ds.l 1
0003B704 <AmiBlitz3.ab2@29008> linemode:                  Ds.w 1                          ;0 if norm, 1 if newtype
0003B706 <AmiBlitz3.ab2@29009> linesleft:                 Ds.w 1
0003B70A <AmiBlitz3.ab2@29010> sourceline:                Ds.l 1                          ;thisitem org source
0003B70E <AmiBlitz3.ab2@29011> varbase:                   Ds.l 1                          ;firstvar org source
0003B712 <AmiBlitz3.ab2@29012> alllocals:                 Ds.l 1
0003B716 <AmiBlitz3.ab2@29013> firstlocal:                Ds.l 1
0003B71A <AmiBlitz3.ab2@29014> firstglob:                 Ds.l 1
0003B71C <AmiBlitz3.ab2@29015> globalvarpointer:          Ds.w 1                          ;varoff org source
0003B71E <AmiBlitz3.ab2@29016> locvaroff:                 Ds.w 1
0003B722 <AmiBlitz3.ab2@29017> firstitem_:                 Ds.l 1
0003B724 <AmiBlitz3.ab2@29018> numlines_org:              Ds.w 1                          ;numlines org source
0003B726 <AmiBlitz3.ab2@29019> returncode_org:            Ds.w 1                          ;returncode org source
0003B72A <AmiBlitz3.ab2@29020> firstiff:                  Ds.l 1                          ;firstif org source
0003B72E <AmiBlitz3.ab2@29021> ptr_seg_ped:               Ds.l 1                          ;segadd org source
0003B92E <AmiBlitz3.ab2@29022> str_pedfile:               Ds.b #MAX_STRINGSIZE            ;segname org source
0003B93E <AmiBlitz3.ab2@29023> str_mathffpname:           Dc.b "mathffp.library",0 : Even ;mathsname org source
0003BB3E <AmiBlitz3.ab2@29024> str_libfilename:           Ds.b #MAX_STRINGSIZE
0003BD3E <AmiBlitz3.ab2@29025> str_path_userlibs:         Ds.b #MAX_STRINGSIZE
0003BF3E <AmiBlitz3.ab2@29026> str_defaultdbug:           Ds.b #MAX_STRINGSIZE            ;debugname org source
0003BF42 <AmiBlitz3.ab2@29028> ptr_seg_debugger:          Ds.l 1                          ;dseg org source
0003C142 <AmiBlitz3.ab2@29029> str_blitz3assign:          Ds.b #MAX_STRINGSIZE            ;dpath org source
0003C342 <AmiBlitz3.ab2@29031> str_path_acidlibs:         Ds.b #MAX_STRINGSIZE            ;acidname org source
0003C346 <AmiBlitz3.ab2@29032> size_acidlibs:             Ds.l 1                          ;acidlibs org source
0003C546 <AmiBlitz3.ab2@29033> str_path_deflibs:          Ds.b #MAX_STRINGSIZE            ;defname org source
0003C54A <AmiBlitz3.ab2@29034> size_deflibs:              Ds.l 1                          ;deflibs org source
0003C74A <AmiBlitz3.ab2@29035> str_tempfilename:          Ds.b #MAX_STRINGSIZE
0003C94A <AmiBlitz3.ab2@29037> str_temp_debugmodulename:  Ds.b #MAX_STRINGSIZE            ;dname org source
0003C94E <AmiBlitz3.ab2@29038> ptr_temp_debugmodule:      Ds.l 1                          ;dname2 org source
0003CB4E <AmiBlitz3.ab2@29040> str_path_includes:         Ds.b #MAX_STRINGSIZE            ;acidname org source
0003CB52 <AmiBlitz3.ab2@29046>   Dc.b $E3,$10,$00,$01                                     ;icondata  
0003CB56 <AmiBlitz3.ab2@29047>   Dc.b $00,$00,$00,$00
0003CB5A <AmiBlitz3.ab2@29048>   Dc.b $00,$19,$00,$11
0003CB5E <AmiBlitz3.ab2@29049>   Dc.b $00,$2E,$00,$18
0003CB62 <AmiBlitz3.ab2@29050>   Dc.b $00,$04,$00,$03
0003CB66 <AmiBlitz3.ab2@29051>   Dc.b $00,$01,$00,$22
0003CB6A <AmiBlitz3.ab2@29052>   Dc.b $73,$68,$00,$00
0003CB6E <AmiBlitz3.ab2@29053>   Dc.b $00,$00,$00,$00
0003CB72 <AmiBlitz3.ab2@29054>   Dc.b $00,$00,$00,$00
0003CB76 <AmiBlitz3.ab2@29055>   Dc.b $00,$00,$00,$00
0003CB7A <AmiBlitz3.ab2@29056>   Dc.b $00,$00,$00,$00
0003CB7E <AmiBlitz3.ab2@29057>   Dc.b $00,$00,$00,$00
0003CB82 <AmiBlitz3.ab2@29058>   Dc.b $03,$22,$00,$21
0003CB86 <AmiBlitz3.ab2@29059>   Dc.b $3C,$28,$00,$22
0003CB8A <AmiBlitz3.ab2@29060>   Dc.b $6E,$C0,$00,$00
0003CB8E <AmiBlitz3.ab2@29061>   Dc.b $00,$12,$00,$00
0003CB92 <AmiBlitz3.ab2@29062>   Dc.b $00,$0E,$00,$00
0003CB96 <AmiBlitz3.ab2@29063>   Dc.b $00,$00,$00,$00
0003CB9A <AmiBlitz3.ab2@29064>   Dc.b $00,$00,$00,$00
0003CB9E <AmiBlitz3.ab2@29065>   Dc.b $00,$00,$00,$00
0003CBA2 <AmiBlitz3.ab2@29066>   Dc.b $00,$00,$00,$2E
0003CBA6 <AmiBlitz3.ab2@29067>   Dc.b $00,$17,$00,$02
0003CBAA <AmiBlitz3.ab2@29068>   Dc.b $00,$01,$8E,$80
0003CBAE <AmiBlitz3.ab2@29069>   Dc.b $03,$00,$00,$00
0003CBB2 <AmiBlitz3.ab2@29070>   Dc.b $00,$00,$FF,$FF
0003CBB6 <AmiBlitz3.ab2@29071>   Dc.b $FF,$FF,$FF,$FC
0003CBBA <AmiBlitz3.ab2@29072>   Dc.b $80,$00,$00,$00
0003CBBE <AmiBlitz3.ab2@29073>   Dc.b $00,$00,$80,$00
0003CBC2 <AmiBlitz3.ab2@29074>   Dc.b $00,$3F,$BB,$40
0003CBC6 <AmiBlitz3.ab2@29075>   Dc.b $80,$1F,$C0,$00
0003CBCA <AmiBlitz3.ab2@29076>   Dc.b $00,$00,$80,$3F
0003CBCE <AmiBlitz3.ab2@29077>   Dc.b $C0,$0F,$BB,$40
0003CBD2 <AmiBlitz3.ab2@29078>   Dc.b $80,$1F,$C0,$00
0003CBD6 <AmiBlitz3.ab2@29079>   Dc.b $00,$00,$8E,$00
0003CBDA <AmiBlitz3.ab2@29080>   Dc.b $F8,$00,$00,$00
0003CBDE <AmiBlitz3.ab2@29081>   Dc.b $8F,$01,$FF,$00
0003CBE2 <AmiBlitz3.ab2@29082>   Dc.b $3B,$40,$81,$E3
0003CBE6 <AmiBlitz3.ab2@29083>   Dc.b $F7,$C0,$00,$00
0003CBEA <AmiBlitz3.ab2@29084>   Dc.b $80,$7F,$F8,$70
0003CBEE <AmiBlitz3.ab2@29085>   Dc.b $3B,$40,$80,$0F
0003CBF2 <AmiBlitz3.ab2@29086>   Dc.b $7C,$E0,$00,$00
0003CBF6 <AmiBlitz3.ab2@29087>   Dc.b $80,$00,$FD,$80
0003CBFA <AmiBlitz3.ab2@29088>   Dc.b $00,$00,$80,$01
0003CBFE <AmiBlitz3.ab2@29089>   Dc.b $F6,$00,$FB,$40
0003CC02 <AmiBlitz3.ab2@29090>   Dc.b $80,$03,$EF,$00
0003CC06 <AmiBlitz3.ab2@29091>   Dc.b $00,$00,$80,$07
0003CC0A <AmiBlitz3.ab2@29092>   Dc.b $87,$80,$3B,$40
0003CC0E <AmiBlitz3.ab2@29093>   Dc.b $80,$0F,$01,$C0
0003CC12 <AmiBlitz3.ab2@29094>   Dc.b $00,$00,$80,$03
0003CC16 <AmiBlitz3.ab2@29095>   Dc.b $F0,$70,$1D,$40
0003CC1A <AmiBlitz3.ab2@29096>   Dc.b $80,$00,$18,$1C
0003CC1E <AmiBlitz3.ab2@29097>   Dc.b $00,$00,$80,$00
0003CC22 <AmiBlitz3.ab2@29098>   Dc.b $10,$06,$03,$40
0003CC26 <AmiBlitz3.ab2@29099>   Dc.b $80,$00,$20,$1F
0003CC2A <AmiBlitz3.ab2@29100>   Dc.b $00,$00,$80,$00
0003CC2E <AmiBlitz3.ab2@29101>   Dc.b $00,$00,$01,$40
0003CC32 <AmiBlitz3.ab2@29102>   Dc.b $80,$00,$00,$00
0003CC36 <AmiBlitz3.ab2@29103>   Dc.b $00,$00,$80,$00
0003CC3A <AmiBlitz3.ab2@29104>   Dc.b $00,$00,$00,$00
0003CC3E <AmiBlitz3.ab2@29105>   Dc.b $00,$00,$00,$00
0003CC42 <AmiBlitz3.ab2@29106>   Dc.b $00,$00,$00,$00
0003CC46 <AmiBlitz3.ab2@29107>   Dc.b $00,$00,$00,$04
0003CC4A <AmiBlitz3.ab2@29108>   Dc.b $00,$3F,$FC,$01
0003CC4E <AmiBlitz3.ab2@29109>   Dc.b $BB,$44,$00,$60
0003CC52 <AmiBlitz3.ab2@29110>   Dc.b $FE,$00,$00,$04
0003CC56 <AmiBlitz3.ab2@29111>   Dc.b $00,$CF,$FF,$01
0003CC5A <AmiBlitz3.ab2@29112>   Dc.b $BB,$44,$1F,$EF
0003CC5E <AmiBlitz3.ab2@29113>   Dc.b $FF,$00,$00,$04
0003CC62 <AmiBlitz3.ab2@29114>   Dc.b $33,$FF,$FF,$E0
0003CC66 <AmiBlitz3.ab2@29115>   Dc.b $00,$04,$37,$FE
0003CC6A <AmiBlitz3.ab2@29116>   Dc.b $7F,$FC,$1B,$44
0003CC6E <AmiBlitz3.ab2@29117>   Dc.b $0F,$9C,$FF,$FF
0003CC72 <AmiBlitz3.ab2@29118>   Dc.b $00,$04,$03,$E3
0003CC76 <AmiBlitz3.ab2@29119>   Dc.b $FF,$FF,$DB,$44
0003CC7A <AmiBlitz3.ab2@29120>   Dc.b $00,$7F,$BF,$FF
0003CC7E <AmiBlitz3.ab2@29121>   Dc.b $80,$04,$00,$0F
0003CC82 <AmiBlitz3.ab2@29122>   Dc.b $3F,$FE,$00,$04
0003CC86 <AmiBlitz3.ab2@29123>   Dc.b $00,$06,$7F,$F8
0003CC8A <AmiBlitz3.ab2@29124>   Dc.b $1B,$44,$00,$0C
0003CC8E <AmiBlitz3.ab2@29125>   Dc.b $F7,$FC,$00,$04
0003CC92 <AmiBlitz3.ab2@29126>   Dc.b $00,$19,$F9,$FE
0003CC96 <AmiBlitz3.ab2@29127>   Dc.b $1B,$44,$00,$33
0003CC9A <AmiBlitz3.ab2@29128>   Dc.b $FE,$7F,$00,$04
0003CC9E <AmiBlitz3.ab2@29129>   Dc.b $00,$0F,$FF,$BF
0003CCA2 <AmiBlitz3.ab2@29130>   Dc.b $CD,$44,$00,$03
0003CCA6 <AmiBlitz3.ab2@29131>   Dc.b $EF,$EF,$F0,$04
0003CCAA <AmiBlitz3.ab2@29132>   Dc.b $00,$00,$7F,$DF
0003CCAE <AmiBlitz3.ab2@29133>   Dc.b $FB,$44,$00,$00
0003CCB2 <AmiBlitz3.ab2@29134>   Dc.b $FF,$A7,$FC,$04
0003CCB6 <AmiBlitz3.ab2@29135>   Dc.b $00,$00,$7E,$3F
0003CCBA <AmiBlitz3.ab2@29136>   Dc.b $FD,$44,$00,$00
0003CCBE <AmiBlitz3.ab2@29137>   Dc.b $00,$00,$00,$04
0003CCC2 <AmiBlitz3.ab2@29138>   Dc.b $7F,$FF,$FF,$FF
0003CCC6 <AmiBlitz3.ab2@29139>   Dc.b $FF,$FC,$00,$00
0003CCCA <AmiBlitz3.ab2@29140>   Dc.b $00,$01,$00,$00
0003CCCD <AmiBlitz3.ab2@29141>   Dc.b $00,$00,$04
0003CCD3 <AmiBlitz3.ab2@29144> str_infoextention2:  Dc.b ".info",0                           ;infoname org source
0003CCD4 <AmiBlitz3.ab2@29145> Even
0003CCD8 <AmiBlitz3.ab2@29147> sysdebug:            Dc.l $3F0
0003CCDC <AmiBlitz3.ab2@29151> exelock              Ds.l 1
0003CCE0 <AmiBlitz3.ab2@29155> includesourceline    Dc.l 0
0003CCE4 <AmiBlitz3.ab2@29156> linenum              Ds.l 1
0003CCE8 <AmiBlitz3.ab2@29157> globallinecount      Ds.l 1
0003CD04 <AmiBlitz3.ab2@29158> myversion            Dc.b "\\__VER_MAJOR.\\__VER_MINOR (\\__DATE_GER__) Build \\__VER_PATCH.\\__VER_BUILD",0 : Even
0003CD08 <AmiBlitz3.ab2@29159> calc_option          Dc.l 1
0003CD0C <AmiBlitz3.ab2@29160> versioninformation   Dc.l $00
0003CD10 <AmiBlitz3.ab2@29161> number_of_builds     Dc.l $00
0003CD14 <AmiBlitz3.ab2@29164> BSS
0003CD16 <AmiBlitz3.ab2@29165> debugnest            Ds.w 1
0003CD1A <AmiBlitz3.ab2@29166> instringf            Ds.l 1
0003CD1E <AmiBlitz3.ab2@29167> funcscanon           Ds.l 1
0003CD32 <AmiBlitz3.ab2@29168> storedebugmode       Ds.b 20
0003CD36 <AmiBlitz3.ab2@29169> firsttimepref        Ds.l 1
0003CD37 <AmiBlitz3.ab2@29170> funcparloop          Ds.b 1                   ; is 1 when function calling parameter are compile
0003CD38 <AmiBlitz3.ab2@29171> blitzparloop         Ds.b 1                   ; is 1 when blitzlib calling parameters are compile
0003CD3A <AmiBlitz3.ab2@29172> nostringopt          Ds.w 1
0003CDBA <AmiBlitz3.ab2@29173> path2:               Ds.l 32
0003CDBE <AmiBlitz3.ab2@29174> typebase             Dc.l 0
0003CDC0 <AmiBlitz3.ab2@29175> doublepeek           Dc.w 0
0003CDC4 <AmiBlitz3.ab2@29176> lastoffset           Dc.l 0
0003CDC6 <AmiBlitz3.ab2@29177> firsttime            Dc.w 0
0003CDCA <AmiBlitz3.ab2@29178> lastdestpointer      Dc.l 0
0003CDCE <AmiBlitz3.ab2@29179> prevwritedat         Dc.l 0
0003CDD2 <AmiBlitz3.ab2@29180> lastsourceline       Dc.l 0
0003CDD6 <AmiBlitz3.ab2@29181> lastwritedat         Dc.l 0
0003CDD8 <AmiBlitz3.ab2@29182> makeexec             Dc.w 0
0003CDDA <AmiBlitz3.ab2@29183> makeexec_remember    Dc.w 0
0003CDDE <AmiBlitz3.ab2@29184> sharebase            Ds.l 1
0003CDE2 <AmiBlitz3.ab2@29185> tempa7               Ds.l 1
0003CDE4 <AmiBlitz3.ab2@29186> incnif               Ds.w 1
0003CDE8 <AmiBlitz3.ab2@29187> tempstore            Ds.l 1
0003CDEC <AmiBlitz3.ab2@29188> result               Ds.l 1
0003CDEE <AmiBlitz3.ab2@29189> automode             Ds.w 1
0003CDF0 <AmiBlitz3.ab2@29190> stackcorrect         Ds.w 1
0003CDF2 <AmiBlitz3.ab2@29191> formode              Ds.w 1
0003CDF6 <AmiBlitz3.ab2@29192> limitregs            Ds.l 1
0003CDF8 <AmiBlitz3.ab2@29193> onestep              Ds.w 1
0003CDFC <AmiBlitz3.ab2@29194> reqmode              Ds.l 1
0003CE9C <AmiBlitz3.ab2@29195> inctab               Ds.l 40
0003CE9E <AmiBlitz3.ab2@29196> funcoptimize         Ds.w 1
0003CEA2 <AmiBlitz3.ab2@29197> includeline          Ds.l 1
0003CEA6 <AmiBlitz3.ab2@29198> morememadd           Ds.l 1
0003CEA8 <AmiBlitz3.ab2@29199> objectcount          Ds.w 1
0003CEAC <AmiBlitz3.ab2@29200> savefuncspace        Ds.l 1
0003CEB0 <AmiBlitz3.ab2@29201> lasttrap1            Ds.l 1
0003CEB4 <AmiBlitz3.ab2@29202> currentfunccall      Ds.l 1
0003CEB5 <AmiBlitz3.ab2@29203> skipfunc             Ds.b 1
0003CEB6 <AmiBlitz3.ab2@29204> resdisable           Ds.b 1
0003CEB7 <AmiBlitz3.ab2@29205> skiptoggle           Ds.b 1
0003CEB8 <AmiBlitz3.ab2@29206> developobject        Ds.b 1
0003CEBA <AmiBlitz3.ab2@29207> iniffcommand         Ds.w 1
0003CEBC <AmiBlitz3.ab2@29208> startoffsetmore      Ds.w 1
0003CEBE <AmiBlitz3.ab2@29209> olddebugmode         Ds.w 1
0003CEC2 <AmiBlitz3.ab2@29210> fpucodeglobal        Ds.l 1
0003CEC6 <AmiBlitz3.ab2@29211> fpucodelocal         Ds.l 1
0003CECA <AmiBlitz3.ab2@29212> maxregs              Ds.l 1
0003CECE <AmiBlitz3.ab2@29213> fpucode              Ds.l 1
0003CED0 <AmiBlitz3.ab2@29214> firstmline           Ds.w 1
0003CF10 <AmiBlitz3.ab2@29215> regtable             Ds.l 16
0003CF12 <AmiBlitz3.ab2@29216> exdebug              Ds.w 1
0003CF14 <AmiBlitz3.ab2@29217> a2offset2            Ds.w 1
0003CF18 <AmiBlitz3.ab2@29218> parnumtemp           Ds.l 1
0003CF19 <AmiBlitz3.ab2@29219> doimmediate          Ds.b 1
0003CF1A <AmiBlitz3.ab2@29220> notypecheck          Ds.b 1
0003CF1C <AmiBlitz3.ab2@29221> vartype              Ds.w 1
0003CF1D <AmiBlitz3.ab2@29222> peekaddrsize         Ds.b 1
0003CF1E <AmiBlitz3.ab2@29223> declare2             Ds.b 1
0003CF20 <AmiBlitz3.ab2@29224> parameternum         Ds.w 1
0003CF24 <AmiBlitz3.ab2@29225> lasttoken            Ds.l 1
0003CF26 <AmiBlitz3.ab2@29226> newvariable          Ds.w 1
0003CF27 <AmiBlitz3.ab2@29227> declare              Ds.b 1
0003CF28 <AmiBlitz3.ab2@29228> typecheck            Ds.b 1
0003CF29 <AmiBlitz3.ab2@29229> nowdeclare           Ds.b 1
0003CF2A <AmiBlitz3.ab2@29230> dimkeep              Ds.b 1
0003CF2B <AmiBlitz3.ab2@29231> a4a5store            Ds.b 1
0003CF2C <AmiBlitz3.ab2@29232> ___freetouse         Ds.b 1
0003CF30 <AmiBlitz3.ab2@29233> firstiffstore        Ds.l 1
0003CF34 <AmiBlitz3.ab2@29234> destpointer2         Ds.l 1
0003CF38 <AmiBlitz3.ab2@29235> stackaddr            Ds.l 1
0003D03C <AmiBlitz3.ab2@29236> allowtab             Ds.b 260
0003D13C <AmiBlitz3.ab2@29237> templine             Ds.b 256
0003D13E <AmiBlitz3.ab2@29238> thenmode             Ds.w 1
0003D140 <AmiBlitz3.ab2@29239> temp                 Ds.w 1
0003D142 <AmiBlitz3.ab2@29240> tempregnum           Ds.w 1
0003D146 <AmiBlitz3.ab2@29242> numlines2            Ds.l 1
0003D14A <AmiBlitz3.ab2@29243> numlines             Ds.l 1
0003D14C <AmiBlitz3.ab2@29244> exmac                Ds.w 1
0003D14E <AmiBlitz3.ab2@29245> returncode           Ds.w 1
0003D152 <AmiBlitz3.ab2@29246> fp0iff               Ds.l 1
0003D156 <AmiBlitz3.ab2@29247> fp0addr              Ds.l 1
0003D158 <AmiBlitz3.ab2@29248> fp0mode              Ds.w 1
0003D15A <AmiBlitz3.ab2@29249> fp0var               Ds.w 1
0003D15C <AmiBlitz3.ab2@29250> fastfunc             Ds.w 1
0003D15E <AmiBlitz3.ab2@29251> retmode              Ds.w 1
0003D160 <AmiBlitz3.ab2@29252> parnum               Ds.w 1
0003D162 <AmiBlitz3.ab2@29253> regmask              Ds.w 1
0003D164 <AmiBlitz3.ab2@29254> regnumfunc           Ds.w 1
0003D166 <AmiBlitz3.ab2@29255> libmode              Ds.w 1
0003D16A <AmiBlitz3.ab2@29256> oldline              Ds.l 1
0003D16E <AmiBlitz3.ab2@29257> sourceline3          Ds.l 1
0003D236 <AmiBlitz3.ab2@29258> debugstore           Ds.b 200
0003D23A <AmiBlitz3.ab2@29259> deststore            Ds.l 1
0003D23E <AmiBlitz3.ab2@29261> loada                Ds.l 1
0003D242 <AmiBlitz3.ab2@29263> currtype             Ds.l 1
0003D246 <AmiBlitz3.ab2@29264> arrayoffset          Ds.l 1
0003D24A <AmiBlitz3.ab2@29265> lastlabel            Ds.l 1
0003D24E <AmiBlitz3.ab2@29266> curtemplabel         Ds.l 1
0003D252 <AmiBlitz3.ab2@29267> sourceline2          Ds.l 1
0003D352 <AmiBlitz3.ab2@29268> chartab              Ds.b 256
0003D3CA <AmiBlitz3.ab2@29269> tempspace            Ds.b 120
000BD3DA <AmiBlitz3.ab2@29270> instrtab             Ds.l 65538*2
000C53DA <AmiBlitz3.ab2@29272> labelhash            Ds.l 8192                             ;-bssstore clear every compile pass
000E53DE <AmiBlitz3.ab2@29273> replacedat           Ds.w 65538
000ED3DE <AmiBlitz3.ab2@29274> variablehash         Ds.l 8192
000ED3E2 <AmiBlitz3.ab2@29275> newinitaddr          Ds.l 1
000ED3E6 <AmiBlitz3.ab2@29276> realbssend           Ds.l 1
000ED3E8 <AmiBlitz3.ab2@29277> saved0               Ds.w 1
000ED468 <AmiBlitz3.ab2@29278> lastpath             Ds.b 128
000ED4E8 <AmiBlitz3.ab2@29279> lastpath2            Ds.b 128
000ED5B0 <AmiBlitz3.ab2@29280> fpustackbase         Ds.w 100
000ED5B4 <AmiBlitz3.ab2@29281> 
000ED5B6 <AmiBlitz3.ab2@29282> isconstantvalue      Dc.w 0  ; contain a type (1-7) if a constant expression is used as a Parameter or on right side of =
000ED5BA <AmiBlitz3.ab2@29283> lastfunction         Dc.l 0  ; the address of the function in the Parameter or rght side of =
000ED5BE <AmiBlitz3.ab2@29284> leftsidetype         Dc.l 0  ;this contain the address of the type from the left side of the variable assign
000ED5C2 <AmiBlitz3.ab2@29285> rightsidetype        Dc.l 0  ; same as above but right side
000ED5C6 <AmiBlitz3.ab2@29288> trap15temp           Ds.l 1
000ED5CA <AmiBlitz3.ab2@29289> trap15temp2          Ds.l 1
000ED5CE <AmiBlitz3.ab2@29290> templibend           Ds.l 1
000ED5D2 <AmiBlitz3.ab2@29291> tempdata1start       Ds.l 1
000ED5D6 <AmiBlitz3.ab2@29292> stacktrack           Ds.l 1
000ED5DA <AmiBlitz3.ab2@29293> pad                  Ds.l 1
000ED6DA <AmiBlitz3.ab2@29294> includetemp          Ds.b 256
000EE0DA <AmiBlitz3.ab2@29295> includetemp2         Ds.b 256*10
000EE0DC <AmiBlitz3.ab2@29296> funccall             Ds.w 1
000EE0E0 <AmiBlitz3.ab2@29299> ptr_resfile          Ds.l 1
000EE0E2 <AmiBlitz3.ab2@29300> CalculatorButtonBinFlag:    Ds.w 1
000EE0E4 <AmiBlitz3.ab2@29301> CalculatorButtonDecFlag:    Ds.w 1
000EE0E8 <AmiBlitz3.ab2@29302> ped_startup_addr:    Ds.l 1
000EE0E9 <AmiBlitz3.ab2@29303> start_without_libs:  Ds.b 1
000EE0EA <AmiBlitz3.ab2@29304> skip_bytes:          Ds.b 1
000EE0EE <AmiBlitz3.ab2@29305> functionreturntype   Ds.l 1  ; a temp store of it.do not read this value
000EE0F2 <AmiBlitz3.ab2@29306> beforeparameterfetch Ds.l 1
000EE0F6 <AmiBlitz3.ab2@29307> typetocast           Ds.l 1
000EE0F7 <AmiBlitz3.ab2@29308> iserror              Ds.b 1
000EE0F8 <AmiBlitz3.ab2@29309> Even
000EE0FC <AmiBlitz3.ab2@29311> CLIMode:             Dc.l 0
000EE100 <AmiBlitz3.ab2@29312> XTRAEndPadBytes:     Dc.l 0                             ; 4 fill/pad/termination bytes for the xtra write function  tomsmart1
