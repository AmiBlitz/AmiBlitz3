00000008 <AmiBlitz3.ab3@0> 
00000014 <AmiBlitz3.ab3@43> optimize 5                               ; don't use FPU (opt. 4)
00000076 <AmiBlitz3.ab3@64> !initasm                                 ; some initial mumbo jumbo
000000A0 <AmiBlitz3.ab3@65> !basic
000000AC <AmiBlitz3.ab3@70> cli_verbose = -1
000000B2 <AmiBlitz3.ab3@71> CLIMode     = False
000000C8 <AmiBlitz3.ab3@72> MaxLen cli_tempstr.s = 1024
000000E4 <AmiBlitz3.ab3@73> GetCurrentDirName_ &cli_tempstr,1024  ; get the current dir to restore it on exit
0000010E <AmiBlitz3.ab3@74> cli_path.s = Peek.s(&cli_tempstr)
0000010E <library_offsets.ab3@1> XINCLUDE "/Shared/library_offsets.ab3"   ; needed includes
0000010E <AmiBlitz3.ab3@78> XINCLUDE "/Shared/library_offsets.ab3"   ; needed includes
0000010E <dos.include.ab3@1> XINCLUDE "dos.include.ab3"
0000010E <error.include.ab3@1> XINCLUDE "dos.include.ab3"
00000146 <error.include.ab3@62> XINCLUDE "dos.include.ab3"
0000016E <error.include.ab3@63> XINCLUDE "dos.include.ab3"
00000196 <error.include.ab3@64> XINCLUDE "dos.include.ab3"
000001BE <error.include.ab3@65> XINCLUDE "dos.include.ab3"
000001C4 <error.include.ab3@66> XINCLUDE "dos.include.ab3"
000001F8 <error.include.ab3@67> XINCLUDE "dos.include.ab3"
0000022C <error.include.ab3@68> XINCLUDE "dos.include.ab3"
00000260 <error.include.ab3@69> XINCLUDE "dos.include.ab3"
0000027C <error.include.ab3@73> XINCLUDE "dos.include.ab3"
00000296 <error.include.ab3@99> XINCLUDE "dos.include.ab3"
000002A2 <error.include.ab3@101> XINCLUDE "dos.include.ab3"
000002A6 <error.include.ab3@102> XINCLUDE "dos.include.ab3"
000002B4 <error.include.ab3@104> XINCLUDE "dos.include.ab3"
000002F6 <error.include.ab3@124> XINCLUDE "dos.include.ab3"
0000037A <error.include.ab3@126> XINCLUDE "dos.include.ab3"
000003E6 <error.include.ab3@127> XINCLUDE "dos.include.ab3"
00000400 <error.include.ab3@129> XINCLUDE "dos.include.ab3"
00000438 <error.include.ab3@130> XINCLUDE "dos.include.ab3"
00000498 <error.include.ab3@131> XINCLUDE "dos.include.ab3"
000004A6 <error.include.ab3@133> XINCLUDE "dos.include.ab3"
000004B4 <error.include.ab3@134> XINCLUDE "dos.include.ab3"
000004C2 <error.include.ab3@135> XINCLUDE "dos.include.ab3"
000004D0 <error.include.ab3@136> XINCLUDE "dos.include.ab3"
000004F8 <error.include.ab3@137> XINCLUDE "dos.include.ab3"
00000506 <error.include.ab3@138> XINCLUDE "dos.include.ab3"
0000050E <error.include.ab3@139> XINCLUDE "dos.include.ab3"
00000540 <error.include.ab3@141> XINCLUDE "dos.include.ab3"
0000055A <error.include.ab3@146> XINCLUDE "dos.include.ab3"
00000592 <error.include.ab3@147> XINCLUDE "dos.include.ab3"
00000598 <error.include.ab3@148> XINCLUDE "dos.include.ab3"
000005DC <error.include.ab3@149> XINCLUDE "dos.include.ab3"
00000624 <error.include.ab3@150> XINCLUDE "dos.include.ab3"
0000062E <error.include.ab3@154> XINCLUDE "dos.include.ab3"
00000648 <error.include.ab3@156> XINCLUDE "dos.include.ab3"
00000692 <error.include.ab3@195> XINCLUDE "dos.include.ab3"
0000069A <error.include.ab3@197> XINCLUDE "dos.include.ab3"
00000706 <error.include.ab3@198> XINCLUDE "dos.include.ab3"
00000728 <error.include.ab3@199> XINCLUDE "dos.include.ab3"
00000788 <error.include.ab3@200> XINCLUDE "dos.include.ab3"
00000796 <error.include.ab3@202> XINCLUDE "dos.include.ab3"
000007A4 <error.include.ab3@203> XINCLUDE "dos.include.ab3"
000007B2 <error.include.ab3@204> XINCLUDE "dos.include.ab3"
000007C0 <error.include.ab3@205> XINCLUDE "dos.include.ab3"
00000820 <error.include.ab3@206> XINCLUDE "dos.include.ab3"
0000082E <error.include.ab3@207> XINCLUDE "dos.include.ab3"
00000864 <error.include.ab3@210> XINCLUDE "dos.include.ab3"
0000086E <error.include.ab3@214> XINCLUDE "dos.include.ab3"
0000088A <error.include.ab3@215> XINCLUDE "dos.include.ab3"
0000088A <multilist.include.ab3@1> XINCLUDE "dos.include.ab3"
0000088A <strptr.include.ab3@1> XINCLUDE "dos.include.ab3"
0000088A <useful.include.ab3@1> XINCLUDE "dos.include.ab3"
000008B8 <useful.include.ab3@283> XINCLUDE "dos.include.ab3"
000008C2 <useful.include.ab3@284> XINCLUDE "dos.include.ab3"
000008D6 <useful.include.ab3@285> XINCLUDE "dos.include.ab3"
000008DE <useful.include.ab3@286> XINCLUDE "dos.include.ab3"
00000906 <useful.include.ab3@287> XINCLUDE "dos.include.ab3"
0000092C <useful.include.ab3@288> XINCLUDE "dos.include.ab3"
0000094C <useful.include.ab3@291> XINCLUDE "dos.include.ab3"
0000095A <useful.include.ab3@292> XINCLUDE "dos.include.ab3"
00000980 <useful.include.ab3@293> XINCLUDE "dos.include.ab3"
00000988 <useful.include.ab3@295> XINCLUDE "dos.include.ab3"
00000990 <useful.include.ab3@296> XINCLUDE "dos.include.ab3"
00000996 <useful.include.ab3@297> XINCLUDE "dos.include.ab3"
000009B2 <useful.include.ab3@298> XINCLUDE "dos.include.ab3"
000009D6 <useful.include.ab3@299> XINCLUDE "dos.include.ab3"
000009EA <useful.include.ab3@300> XINCLUDE "dos.include.ab3"
000009F0 <useful.include.ab3@301> XINCLUDE "dos.include.ab3"
00000A3A <useful.include.ab3@302> XINCLUDE "dos.include.ab3"
00000A3C <useful.include.ab3@303> XINCLUDE "dos.include.ab3"
00000A4A <useful.include.ab3@305> XINCLUDE "dos.include.ab3"
00000A6A <useful.include.ab3@307> XINCLUDE "dos.include.ab3"
00000AC8 <useful.include.ab3@308> XINCLUDE "dos.include.ab3"
00000ACE <useful.include.ab3@309> XINCLUDE "dos.include.ab3"
00000ADC <useful.include.ab3@310> XINCLUDE "dos.include.ab3"
00000AF0 <useful.include.ab3@311> XINCLUDE "dos.include.ab3"
00000B02 <useful.include.ab3@312> XINCLUDE "dos.include.ab3"
00000B10 <useful.include.ab3@313> XINCLUDE "dos.include.ab3"
00000B16 <useful.include.ab3@314> XINCLUDE "dos.include.ab3"
00000B22 <useful.include.ab3@315> XINCLUDE "dos.include.ab3"
00000B36 <useful.include.ab3@318> XINCLUDE "dos.include.ab3"
00000B4A <useful.include.ab3@319> XINCLUDE "dos.include.ab3"
00000B5C <useful.include.ab3@320> XINCLUDE "dos.include.ab3"
00000B6A <useful.include.ab3@321> XINCLUDE "dos.include.ab3"
00000B88 <useful.include.ab3@322> XINCLUDE "dos.include.ab3"
00000B8E <useful.include.ab3@323> XINCLUDE "dos.include.ab3"
00000BA2 <useful.include.ab3@327> XINCLUDE "dos.include.ab3"
00000BAC <useful.include.ab3@328> XINCLUDE "dos.include.ab3"
00000BB4 <useful.include.ab3@329> XINCLUDE "dos.include.ab3"
00000BD2 <useful.include.ab3@330> XINCLUDE "dos.include.ab3"
00000BD8 <useful.include.ab3@331> XINCLUDE "dos.include.ab3"
00000C04 <useful.include.ab3@332> XINCLUDE "dos.include.ab3"
00000C0A <useful.include.ab3@334> XINCLUDE "dos.include.ab3"
00000C1C <useful.include.ab3@335> XINCLUDE "dos.include.ab3"
00000C34 <useful.include.ab3@336> XINCLUDE "dos.include.ab3"
00000C4C <useful.include.ab3@337> XINCLUDE "dos.include.ab3"
00000C6A <useful.include.ab3@338> XINCLUDE "dos.include.ab3"
00000C6C <useful.include.ab3@340> XINCLUDE "dos.include.ab3"
00000C7A <useful.include.ab3@341> XINCLUDE "dos.include.ab3"
00000CA0 <useful.include.ab3@342> XINCLUDE "dos.include.ab3"
00000D34 <useful.include.ab3@343> XINCLUDE "dos.include.ab3"
00000D42 <useful.include.ab3@345> XINCLUDE "dos.include.ab3"
00000D48 <useful.include.ab3@346> XINCLUDE "dos.include.ab3"
00000D72 <useful.include.ab3@347> XINCLUDE "dos.include.ab3"
00000D90 <useful.include.ab3@348> XINCLUDE "dos.include.ab3"
00000D90 <strptr.include.ab3@37> XINCLUDE "dos.include.ab3"
00000DAA <strptr.include.ab3@96> XINCLUDE "dos.include.ab3"
00000DB4 <strptr.include.ab3@97> XINCLUDE "dos.include.ab3"
00000DFC <strptr.include.ab3@98> XINCLUDE "dos.include.ab3"
00000E00 <strptr.include.ab3@100> XINCLUDE "dos.include.ab3"
00000E2E <strptr.include.ab3@197> XINCLUDE "dos.include.ab3"
00000E38 <strptr.include.ab3@198> XINCLUDE "dos.include.ab3"
00000E80 <strptr.include.ab3@199> XINCLUDE "dos.include.ab3"
00000E94 <strptr.include.ab3@200> XINCLUDE "dos.include.ab3"
00000EA6 <strptr.include.ab3@201> XINCLUDE "dos.include.ab3"
00000ECA <strptr.include.ab3@205> XINCLUDE "dos.include.ab3"
00000ED4 <strptr.include.ab3@208> XINCLUDE "dos.include.ab3"
00000EE2 <strptr.include.ab3@209> XINCLUDE "dos.include.ab3"
00000EEC <strptr.include.ab3@210> XINCLUDE "dos.include.ab3"
00000F14 <strptr.include.ab3@211> XINCLUDE "dos.include.ab3"
00000F2E <strptr.include.ab3@212> XINCLUDE "dos.include.ab3"
00000F46 <strptr.include.ab3@216> XINCLUDE "dos.include.ab3"
00000F60 <strptr.include.ab3@282> XINCLUDE "dos.include.ab3"
00000F6A <strptr.include.ab3@283> XINCLUDE "dos.include.ab3"
00000F78 <strptr.include.ab3@284> XINCLUDE "dos.include.ab3"
00000FAA <strptr.include.ab3@285> XINCLUDE "dos.include.ab3"
00000FC8 <strptr.include.ab3@287> XINCLUDE "dos.include.ab3"
00000FD2 <strptr.include.ab3@288> XINCLUDE "dos.include.ab3"
00000FD2 <multilist.include.ab3@44> XINCLUDE "dos.include.ab3"
00000FE8 <multilist.include.ab3@61> XINCLUDE "dos.include.ab3"
00001002 <multilist.include.ab3@406> XINCLUDE "dos.include.ab3"
0000100C <multilist.include.ab3@407> XINCLUDE "dos.include.ab3"
0000102E <multilist.include.ab3@408> XINCLUDE "dos.include.ab3"
00001052 <multilist.include.ab3@409> XINCLUDE "dos.include.ab3"
00001064 <multilist.include.ab3@410> XINCLUDE "dos.include.ab3"
0000107C <multilist.include.ab3@411> XINCLUDE "dos.include.ab3"
00001090 <multilist.include.ab3@412> XINCLUDE "dos.include.ab3"
000010A2 <multilist.include.ab3@415> XINCLUDE "dos.include.ab3"
000010B2 <multilist.include.ab3@416> XINCLUDE "dos.include.ab3"
000010B8 <multilist.include.ab3@417> XINCLUDE "dos.include.ab3"
000010C8 <multilist.include.ab3@418> XINCLUDE "dos.include.ab3"
000010D8 <multilist.include.ab3@419> XINCLUDE "dos.include.ab3"
000010F2 <multilist.include.ab3@420> XINCLUDE "dos.include.ab3"
000010F6 <multilist.include.ab3@422> XINCLUDE "dos.include.ab3"
00001110 <multilist.include.ab3@585> XINCLUDE "dos.include.ab3"
00001140 <multilist.include.ab3@586> XINCLUDE "dos.include.ab3"
0000114A <multilist.include.ab3@588> XINCLUDE "dos.include.ab3"
00001154 <multilist.include.ab3@589> XINCLUDE "dos.include.ab3"
00001176 <multilist.include.ab3@590> XINCLUDE "dos.include.ab3"
0000119A <multilist.include.ab3@591> XINCLUDE "dos.include.ab3"
000011AC <multilist.include.ab3@592> XINCLUDE "dos.include.ab3"
000011C4 <multilist.include.ab3@593> XINCLUDE "dos.include.ab3"
000011D8 <multilist.include.ab3@594> XINCLUDE "dos.include.ab3"
000011EA <multilist.include.ab3@597> XINCLUDE "dos.include.ab3"
000011FA <multilist.include.ab3@598> XINCLUDE "dos.include.ab3"
00001200 <multilist.include.ab3@599> XINCLUDE "dos.include.ab3"
00001210 <multilist.include.ab3@600> XINCLUDE "dos.include.ab3"
00001220 <multilist.include.ab3@601> XINCLUDE "dos.include.ab3"
0000123A <multilist.include.ab3@602> XINCLUDE "dos.include.ab3"
00001240 <multilist.include.ab3@603> XINCLUDE "dos.include.ab3"
00001246 <multilist.include.ab3@604> XINCLUDE "dos.include.ab3"
0000124A <multilist.include.ab3@605> XINCLUDE "dos.include.ab3"
00001264 <multilist.include.ab3@713> XINCLUDE "dos.include.ab3"
0000126C <multilist.include.ab3@714> XINCLUDE "dos.include.ab3"
00001276 <multilist.include.ab3@715> XINCLUDE "dos.include.ab3"
0000128C <multilist.include.ab3@716> XINCLUDE "dos.include.ab3"
000012A0 <multilist.include.ab3@717> XINCLUDE "dos.include.ab3"
000012C4 <multilist.include.ab3@718> XINCLUDE "dos.include.ab3"
000012D2 <multilist.include.ab3@721> XINCLUDE "dos.include.ab3"
000012DC <multilist.include.ab3@722> XINCLUDE "dos.include.ab3"
000012E2 <multilist.include.ab3@723> XINCLUDE "dos.include.ab3"
000012EC <multilist.include.ab3@724> XINCLUDE "dos.include.ab3"
000012F2 <multilist.include.ab3@725> XINCLUDE "dos.include.ab3"
00001310 <multilist.include.ab3@742> XINCLUDE "dos.include.ab3"
00001318 <multilist.include.ab3@743> XINCLUDE "dos.include.ab3"
00001322 <multilist.include.ab3@744> XINCLUDE "dos.include.ab3"
00001340 <multilist.include.ab3@745> XINCLUDE "dos.include.ab3"
00001356 <multilist.include.ab3@746> XINCLUDE "dos.include.ab3"
0000136A <multilist.include.ab3@747> XINCLUDE "dos.include.ab3"
0000139E <multilist.include.ab3@748> XINCLUDE "dos.include.ab3"
000013AC <multilist.include.ab3@751> XINCLUDE "dos.include.ab3"
000013B6 <multilist.include.ab3@752> XINCLUDE "dos.include.ab3"
000013BC <multilist.include.ab3@753> XINCLUDE "dos.include.ab3"
000013C6 <multilist.include.ab3@754> XINCLUDE "dos.include.ab3"
000013CA <multilist.include.ab3@756> XINCLUDE "dos.include.ab3"
000013D0 <multilist.include.ab3@757> XINCLUDE "dos.include.ab3"
000013EA <multilist.include.ab3@795> XINCLUDE "dos.include.ab3"
000013F4 <multilist.include.ab3@796> XINCLUDE "dos.include.ab3"
000013FE <multilist.include.ab3@797> XINCLUDE "dos.include.ab3"
00001414 <multilist.include.ab3@798> XINCLUDE "dos.include.ab3"
00001424 <multilist.include.ab3@799> XINCLUDE "dos.include.ab3"
0000142E <multilist.include.ab3@801> XINCLUDE "dos.include.ab3"
00001434 <multilist.include.ab3@802> XINCLUDE "dos.include.ab3"
00001438 <multilist.include.ab3@803> XINCLUDE "dos.include.ab3"
0000145A <multilist.include.ab3@821> XINCLUDE "dos.include.ab3"
00001462 <multilist.include.ab3@822> XINCLUDE "dos.include.ab3"
0000147C <multilist.include.ab3@823> XINCLUDE "dos.include.ab3"
00001486 <multilist.include.ab3@824> XINCLUDE "dos.include.ab3"
0000149C <multilist.include.ab3@825> XINCLUDE "dos.include.ab3"
000014B0 <multilist.include.ab3@826> XINCLUDE "dos.include.ab3"
00001506 <multilist.include.ab3@827> XINCLUDE "dos.include.ab3"
00001540 <multilist.include.ab3@828> XINCLUDE "dos.include.ab3"
00001552 <multilist.include.ab3@829> XINCLUDE "dos.include.ab3"
00001574 <multilist.include.ab3@830> XINCLUDE "dos.include.ab3"
0000157A <multilist.include.ab3@831> XINCLUDE "dos.include.ab3"
000015D0 <multilist.include.ab3@832> XINCLUDE "dos.include.ab3"
0000160A <multilist.include.ab3@833> XINCLUDE "dos.include.ab3"
00001610 <multilist.include.ab3@835> XINCLUDE "dos.include.ab3"
0000164A <multilist.include.ab3@836> XINCLUDE "dos.include.ab3"
00001684 <multilist.include.ab3@837> XINCLUDE "dos.include.ab3"
00001696 <multilist.include.ab3@839> XINCLUDE "dos.include.ab3"
000016A0 <multilist.include.ab3@840> XINCLUDE "dos.include.ab3"
000016A6 <multilist.include.ab3@841> XINCLUDE "dos.include.ab3"
000016B0 <multilist.include.ab3@842> XINCLUDE "dos.include.ab3"
000016C4 <multilist.include.ab3@843> XINCLUDE "dos.include.ab3"
0000170A <multilist.include.ab3@870> XINCLUDE "dos.include.ab3"
00001712 <multilist.include.ab3@871> XINCLUDE "dos.include.ab3"
00001730 <multilist.include.ab3@872> XINCLUDE "dos.include.ab3"
0000175C <multilist.include.ab3@873> XINCLUDE "dos.include.ab3"
0000177A <multilist.include.ab3@874> XINCLUDE "dos.include.ab3"
00001794 <multilist.include.ab3@875> XINCLUDE "dos.include.ab3"
000017AE <multilist.include.ab3@876> XINCLUDE "dos.include.ab3"
00001830 <multilist.include.ab3@877> XINCLUDE "dos.include.ab3"
00001844 <multilist.include.ab3@879> XINCLUDE "dos.include.ab3"
0000185C <multilist.include.ab3@880> XINCLUDE "dos.include.ab3"
00001862 <multilist.include.ab3@881> XINCLUDE "dos.include.ab3"
0000187A <multilist.include.ab3@882> XINCLUDE "dos.include.ab3"
00001890 <multilist.include.ab3@884> XINCLUDE "dos.include.ab3"
000018AA <multilist.include.ab3@886> XINCLUDE "dos.include.ab3"
000018BE <multilist.include.ab3@887> XINCLUDE "dos.include.ab3"
000018CC <multilist.include.ab3@888> XINCLUDE "dos.include.ab3"
00001922 <multilist.include.ab3@889> XINCLUDE "dos.include.ab3"
00001958 <multilist.include.ab3@890> XINCLUDE "dos.include.ab3"
00001988 <multilist.include.ab3@891> XINCLUDE "dos.include.ab3"
00001A10 <multilist.include.ab3@893> XINCLUDE "dos.include.ab3"
00001A16 <multilist.include.ab3@894> XINCLUDE "dos.include.ab3"
00001A24 <multilist.include.ab3@895> XINCLUDE "dos.include.ab3"
00001A7A <multilist.include.ab3@896> XINCLUDE "dos.include.ab3"
00001AB0 <multilist.include.ab3@897> XINCLUDE "dos.include.ab3"
00001AE0 <multilist.include.ab3@898> XINCLUDE "dos.include.ab3"
00001AE6 <multilist.include.ab3@901> XINCLUDE "dos.include.ab3"
00001B00 <multilist.include.ab3@902> XINCLUDE "dos.include.ab3"
00001B0E <multilist.include.ab3@903> XINCLUDE "dos.include.ab3"
00001B48 <multilist.include.ab3@904> XINCLUDE "dos.include.ab3"
00001B7E <multilist.include.ab3@905> XINCLUDE "dos.include.ab3"
00001BAE <multilist.include.ab3@906> XINCLUDE "dos.include.ab3"
00001BBC <multilist.include.ab3@909> XINCLUDE "dos.include.ab3"
00001BC6 <multilist.include.ab3@910> XINCLUDE "dos.include.ab3"
00001BCC <multilist.include.ab3@911> XINCLUDE "dos.include.ab3"
00001BD6 <multilist.include.ab3@912> XINCLUDE "dos.include.ab3"
00001BEA <multilist.include.ab3@913> XINCLUDE "dos.include.ab3"
00001BEA <dos.include.ab3@57> XINCLUDE "dos.include.ab3"
00001BEA <wbstart.include.ab3@1> XINCLUDE "dos.include.ab3"
00001C00 <wbstart.include.ab3@58> XINCLUDE "dos.include.ab3"
00001C0A <wbstart.include.ab3@59> XINCLUDE "dos.include.ab3"
00001C22 <wbstart.include.ab3@61> XINCLUDE "dos.include.ab3"
00001C24 <wbstart.include.ab3@63> XINCLUDE "dos.include.ab3"
00001C52 <wbstart.include.ab3@64> XINCLUDE "dos.include.ab3"
00001C52 <dos.include.ab3@59> XINCLUDE "dos.include.ab3"
00001C68 <dos.include.ab3@61> XINCLUDE "dos.include.ab3"
00001C70 <dos.include.ab3@79> XINCLUDE "dos.include.ab3"
00001C78 <dos.include.ab3@80> XINCLUDE "dos.include.ab3"
00001CA0 <dos.include.ab3@81> XINCLUDE "dos.include.ab3"
00001CA8 <dos.include.ab3@82> XINCLUDE "dos.include.ab3"
00001CD0 <dos.include.ab3@83> XINCLUDE "dos.include.ab3"
00001CF8 <dos.include.ab3@84> XINCLUDE "dos.include.ab3"
00001D20 <dos.include.ab3@85> XINCLUDE "dos.include.ab3"
00001D28 <dos.include.ab3@86> XINCLUDE "dos.include.ab3"
00001D30 <dos.include.ab3@87> XINCLUDE "dos.include.ab3"
00001D38 <dos.include.ab3@88> XINCLUDE "dos.include.ab3"
00001D40 <dos.include.ab3@89> XINCLUDE "dos.include.ab3"
00001D48 <dos.include.ab3@90> XINCLUDE "dos.include.ab3"
00001D50 <dos.include.ab3@91> XINCLUDE "dos.include.ab3"
00001D58 <dos.include.ab3@92> XINCLUDE "dos.include.ab3"
00001D60 <dos.include.ab3@93> XINCLUDE "dos.include.ab3"
00001D68 <dos.include.ab3@94> XINCLUDE "dos.include.ab3"
00001D88 <dos.include.ab3@95> XINCLUDE "dos.include.ab3"
00001D90 <dos.include.ab3@96> XINCLUDE "dos.include.ab3"
00001D98 <dos.include.ab3@97> XINCLUDE "dos.include.ab3"
00001DC0 <dos.include.ab3@99> XINCLUDE "dos.include.ab3"
00001DD6 <dos.include.ab3@130> XINCLUDE "dos.include.ab3"
00001DE2 <dos.include.ab3@131> XINCLUDE "dos.include.ab3"
00001DE6 <dos.include.ab3@132> XINCLUDE "dos.include.ab3"
00001DFC <dos.include.ab3@145> XINCLUDE "dos.include.ab3"
00001E16 <dos.include.ab3@146> XINCLUDE "dos.include.ab3"
00001E2C <dos.include.ab3@147> XINCLUDE "dos.include.ab3"
00001E56 <dos.include.ab3@148> XINCLUDE "dos.include.ab3"
00001E60 <dos.include.ab3@149> XINCLUDE "dos.include.ab3"
00001E66 <dos.include.ab3@150> XINCLUDE "dos.include.ab3"
00001E7C <dos.include.ab3@163> XINCLUDE "dos.include.ab3"
00001E96 <dos.include.ab3@164> XINCLUDE "dos.include.ab3"
00001EAC <dos.include.ab3@165> XINCLUDE "dos.include.ab3"
00001ED6 <dos.include.ab3@166> XINCLUDE "dos.include.ab3"
00001EE0 <dos.include.ab3@167> XINCLUDE "dos.include.ab3"
00001EE6 <dos.include.ab3@168> XINCLUDE "dos.include.ab3"
00001F10 <dos.include.ab3@184> XINCLUDE "dos.include.ab3"
00001F1C <dos.include.ab3@185> XINCLUDE "dos.include.ab3"
00001F3C <dos.include.ab3@186> XINCLUDE "dos.include.ab3"
00001F46 <dos.include.ab3@187> XINCLUDE "dos.include.ab3"
00001F56 <dos.include.ab3@188> XINCLUDE "dos.include.ab3"
00001F66 <dos.include.ab3@189> XINCLUDE "dos.include.ab3"
00001F70 <dos.include.ab3@191> XINCLUDE "dos.include.ab3"
00001F8A <dos.include.ab3@192> XINCLUDE "dos.include.ab3"
00001FA0 <dos.include.ab3@430> XINCLUDE "dos.include.ab3"
00001FB2 <dos.include.ab3@432> XINCLUDE "dos.include.ab3"
0000202C <dos.include.ab3@433> XINCLUDE "dos.include.ab3"
00002056 <dos.include.ab3@434> XINCLUDE "dos.include.ab3"
0000206E <dos.include.ab3@435> XINCLUDE "dos.include.ab3"
00002084 <dos.include.ab3@461> XINCLUDE "dos.include.ab3"
00002096 <dos.include.ab3@462> XINCLUDE "dos.include.ab3"
0000209A <dos.include.ab3@463> XINCLUDE "dos.include.ab3"
000020B0 <dos.include.ab3@479> XINCLUDE "dos.include.ab3"
000020B2 <dos.include.ab3@480> XINCLUDE "dos.include.ab3"
000020EC <dos.include.ab3@541> XINCLUDE "dos.include.ab3"
00002120 <dos.include.ab3@543> XINCLUDE "dos.include.ab3"
00002146 <dos.include.ab3@544> XINCLUDE "dos.include.ab3"
00002166 <dos.include.ab3@545> XINCLUDE "dos.include.ab3"
00002186 <dos.include.ab3@546> XINCLUDE "dos.include.ab3"
000021B0 <dos.include.ab3@549> XINCLUDE "dos.include.ab3"
000021FC <dos.include.ab3@551> XINCLUDE "dos.include.ab3"
0000220E <dos.include.ab3@552> XINCLUDE "dos.include.ab3"
0000225E <dos.include.ab3@553> XINCLUDE "dos.include.ab3"
00002288 <dos.include.ab3@556> XINCLUDE "dos.include.ab3"
000022A6 <dos.include.ab3@558> XINCLUDE "dos.include.ab3"
000022D0 <dos.include.ab3@674> XINCLUDE "dos.include.ab3"
000022E6 <dos.include.ab3@675> XINCLUDE "dos.include.ab3"
000022F0 <dos.include.ab3@676> XINCLUDE "dos.include.ab3"
00002318 <dos.include.ab3@677> XINCLUDE "dos.include.ab3"
0000231E <dos.include.ab3@678> XINCLUDE "dos.include.ab3"
00002346 <dos.include.ab3@679> XINCLUDE "dos.include.ab3"
00002370 <dos.include.ab3@681> XINCLUDE "dos.include.ab3"
0000238E <dos.include.ab3@682> XINCLUDE "dos.include.ab3"
000023B8 <dos.include.ab3@705> XINCLUDE "dos.include.ab3"
00002428 <dos.include.ab3@706> XINCLUDE "dos.include.ab3"
00002452 <dos.include.ab3@707> XINCLUDE "dos.include.ab3"
00002470 <dos.include.ab3@708> XINCLUDE "dos.include.ab3"
0000249A <dos.include.ab3@743> XINCLUDE "dos.include.ab3"
000024BA <dos.include.ab3@744> XINCLUDE "dos.include.ab3"
000024E6 <dos.include.ab3@745> XINCLUDE "dos.include.ab3"
000024F0 <dos.include.ab3@746> XINCLUDE "dos.include.ab3"
0000250A <dos.include.ab3@747> XINCLUDE "dos.include.ab3"
00002534 <dos.include.ab3@894> XINCLUDE "dos.include.ab3"
000025E2 <dos.include.ab3@895> XINCLUDE "dos.include.ab3"
000025F8 <dos.include.ab3@896> XINCLUDE "dos.include.ab3"
00002602 <dos.include.ab3@897> XINCLUDE "dos.include.ab3"
0000262A <dos.include.ab3@898> XINCLUDE "dos.include.ab3"
00002634 <dos.include.ab3@899> XINCLUDE "dos.include.ab3"
0000263A <dos.include.ab3@900> XINCLUDE "dos.include.ab3"
00002640 <dos.include.ab3@901> XINCLUDE "dos.include.ab3"
00002646 <dos.include.ab3@902> XINCLUDE "dos.include.ab3"
00002658 <dos.include.ab3@904> XINCLUDE "dos.include.ab3"
00002662 <dos.include.ab3@906> XINCLUDE "dos.include.ab3"
0000267C <dos.include.ab3@907> XINCLUDE "dos.include.ab3"
000026BA <dos.include.ab3@928> XINCLUDE "dos.include.ab3"
000026C2 <dos.include.ab3@929> XINCLUDE "dos.include.ab3"
00002770 <dos.include.ab3@930> XINCLUDE "dos.include.ab3"
00002784 <dos.include.ab3@931> XINCLUDE "dos.include.ab3"
000027C6 <dos.include.ab3@932> XINCLUDE "dos.include.ab3"
000027E6 <dos.include.ab3@934> XINCLUDE "dos.include.ab3"
000027F0 <dos.include.ab3@935> XINCLUDE "dos.include.ab3"
0000280C <dos.include.ab3@936> XINCLUDE "dos.include.ab3"
00002846 <dos.include.ab3@988> XINCLUDE "dos.include.ab3"
0000284E <dos.include.ab3@989> XINCLUDE "dos.include.ab3"
000028FC <dos.include.ab3@990> XINCLUDE "dos.include.ab3"
00002932 <dos.include.ab3@991> XINCLUDE "dos.include.ab3"
00002952 <dos.include.ab3@992> XINCLUDE "dos.include.ab3"
00002970 <dos.include.ab3@993> XINCLUDE "dos.include.ab3"
00002994 <dos.include.ab3@994> XINCLUDE "dos.include.ab3"
0000299E <dos.include.ab3@996> XINCLUDE "dos.include.ab3"
000029BA <dos.include.ab3@997> XINCLUDE "dos.include.ab3"
000029F4 <dos.include.ab3@1014> XINCLUDE "dos.include.ab3"
00002AA2 <dos.include.ab3@1015> XINCLUDE "dos.include.ab3"
00002ADA <dos.include.ab3@1016> XINCLUDE "dos.include.ab3"
00002AFA <dos.include.ab3@1017> XINCLUDE "dos.include.ab3"
00002B00 <dos.include.ab3@1018> XINCLUDE "dos.include.ab3"
00002B20 <dos.include.ab3@1019> XINCLUDE "dos.include.ab3"
00002B2A <dos.include.ab3@1020> XINCLUDE "dos.include.ab3"
00002B44 <dos.include.ab3@1021> XINCLUDE "dos.include.ab3"
00002B5C <dos.include.ab3@1022> XINCLUDE "dos.include.ab3"
00002B66 <dos.include.ab3@1025> XINCLUDE "dos.include.ab3"
00002B82 <dos.include.ab3@1026> XINCLUDE "dos.include.ab3"
00002BAC <dos.include.ab3@1161> XINCLUDE "dos.include.ab3"
00002BBA <dos.include.ab3@1163> XINCLUDE "dos.include.ab3"
00002C80 <dos.include.ab3@1164> XINCLUDE "dos.include.ab3"
00002CAA <dos.include.ab3@1165> XINCLUDE "dos.include.ab3"
00002CD2 <dos.include.ab3@1167> XINCLUDE "dos.include.ab3"
00002CFC <dos.include.ab3@1168> XINCLUDE "dos.include.ab3"
00002D26 <dos.include.ab3@1170> XINCLUDE "dos.include.ab3"
00002D44 <dos.include.ab3@1171> XINCLUDE "dos.include.ab3"
00002D6E <dos.include.ab3@1189> XINCLUDE "dos.include.ab3"
00002DDA <dos.include.ab3@1191> XINCLUDE "dos.include.ab3"
00002E02 <dos.include.ab3@1192> XINCLUDE "dos.include.ab3"
00002E10 <dos.include.ab3@1193> XINCLUDE "dos.include.ab3"
00002E44 <dos.include.ab3@1194> XINCLUDE "dos.include.ab3"
00002E52 <dos.include.ab3@1197> XINCLUDE "dos.include.ab3"
00002E74 <dos.include.ab3@1203> XINCLUDE "dos.include.ab3"
00002E82 <dos.include.ab3@1207> XINCLUDE "dos.include.ab3"
00002EA6 <dos.include.ab3@1208> XINCLUDE "dos.include.ab3"
00002ED0 <dos.include.ab3@1209> XINCLUDE "dos.include.ab3"
00002EFA <dos.include.ab3@1212> XINCLUDE "dos.include.ab3"
00002F18 <dos.include.ab3@1213> XINCLUDE "dos.include.ab3"
00002F42 <dos.include.ab3@1274> XINCLUDE "dos.include.ab3"
00002F9A <dos.include.ab3@1275> XINCLUDE "dos.include.ab3"
00002FC4 <dos.include.ab3@1276> XINCLUDE "dos.include.ab3"
00002FE2 <dos.include.ab3@1277> XINCLUDE "dos.include.ab3"
00002FF8 <dos.include.ab3@1351> XINCLUDE "dos.include.ab3"
00002FFE <dos.include.ab3@1353> XINCLUDE "dos.include.ab3"
00003008 <dos.include.ab3@1354> XINCLUDE "dos.include.ab3"
00003012 <dos.include.ab3@1355> XINCLUDE "dos.include.ab3"
00003030 <dos.include.ab3@1358> XINCLUDE "dos.include.ab3"
00003036 <dos.include.ab3@1359> XINCLUDE "dos.include.ab3"
0000303C <dos.include.ab3@1360> XINCLUDE "dos.include.ab3"
0000304C <dos.include.ab3@1362> XINCLUDE "dos.include.ab3"
00003052 <dos.include.ab3@1363> XINCLUDE "dos.include.ab3"
0000305A <dos.include.ab3@1364> XINCLUDE "dos.include.ab3"
00003082 <dos.include.ab3@1365> XINCLUDE "dos.include.ab3"
0000308C <dos.include.ab3@1366> XINCLUDE "dos.include.ab3"
00003096 <dos.include.ab3@1368> XINCLUDE "dos.include.ab3"
000030AA <dos.include.ab3@1369> XINCLUDE "dos.include.ab3"
000030C0 <dos.include.ab3@1474> XINCLUDE "dos.include.ab3"
000030C6 <dos.include.ab3@1480> XINCLUDE "dos.include.ab3"
000030EA <dos.include.ab3@1481> XINCLUDE "dos.include.ab3"
0000310E <dos.include.ab3@1482> XINCLUDE "dos.include.ab3"
00003132 <dos.include.ab3@1483> XINCLUDE "dos.include.ab3"
00003138 <dos.include.ab3@1484> XINCLUDE "dos.include.ab3"
00003164 <dos.include.ab3@1485> XINCLUDE "dos.include.ab3"
00003166 <dos.include.ab3@1486> XINCLUDE "dos.include.ab3"
00003194 <dos.include.ab3@1487> XINCLUDE "dos.include.ab3"
000031BE <dos.include.ab3@1503> XINCLUDE "dos.include.ab3"
00003242 <dos.include.ab3@1506> XINCLUDE "dos.include.ab3"
0000330A <dos.include.ab3@1507> XINCLUDE "dos.include.ab3"
00003314 <dos.include.ab3@1509> XINCLUDE "dos.include.ab3"
0000335E <dos.include.ab3@1510> XINCLUDE "dos.include.ab3"
000033AA <dos.include.ab3@1512> XINCLUDE "dos.include.ab3"
000033E2 <dos.include.ab3@1513> XINCLUDE "dos.include.ab3"
000033F4 <dos.include.ab3@1514> XINCLUDE "dos.include.ab3"
0000340A <dos.include.ab3@1515> XINCLUDE "dos.include.ab3"
00003410 <dos.include.ab3@1516> XINCLUDE "dos.include.ab3"
00003426 <dos.include.ab3@1517> XINCLUDE "dos.include.ab3"
0000345A <dos.include.ab3@1519> XINCLUDE "dos.include.ab3"
00003460 <dos.include.ab3@1520> XINCLUDE "dos.include.ab3"
0000346A <dos.include.ab3@1522> XINCLUDE "dos.include.ab3"
00003484 <dos.include.ab3@1523> XINCLUDE "dos.include.ab3"
000034CE <dos.include.ab3@1553> XINCLUDE "dos.include.ab3"
00003504 <dos.include.ab3@1555> XINCLUDE "dos.include.ab3"
00003528 <dos.include.ab3@1556> XINCLUDE "dos.include.ab3"
00003532 <dos.include.ab3@1557> XINCLUDE "dos.include.ab3"
0000355A <dos.include.ab3@1558> XINCLUDE "dos.include.ab3"
000035A2 <dos.include.ab3@1561> XINCLUDE "dos.include.ab3"
00003678 <dos.include.ab3@1563> XINCLUDE "dos.include.ab3"
000036A2 <dos.include.ab3@1564> XINCLUDE "dos.include.ab3"
000036C2 <dos.include.ab3@1565> XINCLUDE "dos.include.ab3"
000036FC <dos.include.ab3@1584> XINCLUDE "dos.include.ab3"
00003702 <dos.include.ab3@1586> XINCLUDE "dos.include.ab3"
00003708 <dos.include.ab3@1587> XINCLUDE "dos.include.ab3"
00003710 <dos.include.ab3@1588> XINCLUDE "dos.include.ab3"
00003746 <dos.include.ab3@1589> XINCLUDE "dos.include.ab3"
00003754 <dos.include.ab3@1590> XINCLUDE "dos.include.ab3"
0000375E <dos.include.ab3@1591> XINCLUDE "dos.include.ab3"
0000378A <dos.include.ab3@1592> XINCLUDE "dos.include.ab3"
00003798 <dos.include.ab3@1593> XINCLUDE "dos.include.ab3"
000037A2 <dos.include.ab3@1594> XINCLUDE "dos.include.ab3"
000037D0 <dos.include.ab3@1596> XINCLUDE "dos.include.ab3"
0000384E <dos.include.ab3@1599> XINCLUDE "dos.include.ab3"
000038A0 <dos.include.ab3@1602> XINCLUDE "dos.include.ab3"
000038B2 <dos.include.ab3@1603> XINCLUDE "dos.include.ab3"
00003920 <dos.include.ab3@1604> XINCLUDE "dos.include.ab3"
00003926 <dos.include.ab3@1605> XINCLUDE "dos.include.ab3"
00003972 <dos.include.ab3@1606> XINCLUDE "dos.include.ab3"
00003A40 <dos.include.ab3@1610> XINCLUDE "dos.include.ab3"
00003B20 <dos.include.ab3@1611> XINCLUDE "dos.include.ab3"
00003B8C <dos.include.ab3@1613> XINCLUDE "dos.include.ab3"
00003B92 <dos.include.ab3@1614> XINCLUDE "dos.include.ab3"
00003BAE <dos.include.ab3@1615> XINCLUDE "dos.include.ab3"
00003BBC <dos.include.ab3@1618> XINCLUDE "dos.include.ab3"
00003BC2 <dos.include.ab3@1619> XINCLUDE "dos.include.ab3"
00003BD4 <dos.include.ab3@1622> XINCLUDE "dos.include.ab3"
00003BEA <dos.include.ab3@1623> XINCLUDE "dos.include.ab3"
00003BF4 <dos.include.ab3@1624> XINCLUDE "dos.include.ab3"
00003C10 <dos.include.ab3@1625> XINCLUDE "dos.include.ab3"
00003C3A <dos.include.ab3@2221> XINCLUDE "dos.include.ab3"
00003C4E <dos.include.ab3@2222> XINCLUDE "dos.include.ab3"
00003C8C <dos.include.ab3@2223> XINCLUDE "dos.include.ab3"
00003D72 <dos.include.ab3@2224> XINCLUDE "dos.include.ab3"
00003D78 <dos.include.ab3@2225> XINCLUDE "dos.include.ab3"
00003DC8 <dos.include.ab3@2226> XINCLUDE "dos.include.ab3"
00003DF2 <dos.include.ab3@2227> XINCLUDE "dos.include.ab3"
00003E10 <dos.include.ab3@2228> XINCLUDE "dos.include.ab3"
00003E3A <dos.include.ab3@2252> XINCLUDE "dos.include.ab3"
00003E4E <dos.include.ab3@2253> XINCLUDE "dos.include.ab3"
00003E8C <dos.include.ab3@2254> XINCLUDE "dos.include.ab3"
00003F72 <dos.include.ab3@2255> XINCLUDE "dos.include.ab3"
00003F78 <dos.include.ab3@2256> XINCLUDE "dos.include.ab3"
00003FEA <dos.include.ab3@2257> XINCLUDE "dos.include.ab3"
00004014 <dos.include.ab3@2258> XINCLUDE "dos.include.ab3"
00004032 <dos.include.ab3@2259> XINCLUDE "dos.include.ab3"
0000406C <dos.include.ab3@2285> XINCLUDE "dos.include.ab3"
000040A4 <dos.include.ab3@2286> XINCLUDE "dos.include.ab3"
000040FC <dos.include.ab3@2287> XINCLUDE "dos.include.ab3"
00004160 <dos.include.ab3@2288> XINCLUDE "dos.include.ab3"
0000418A <dos.include.ab3@2290> XINCLUDE "dos.include.ab3"
000041AA <dos.include.ab3@2291> XINCLUDE "dos.include.ab3"
000041D4 <dos.include.ab3@2308> XINCLUDE "dos.include.ab3"
000041DA <dos.include.ab3@2309> XINCLUDE "dos.include.ab3"
000041F0 <dos.include.ab3@2310> XINCLUDE "dos.include.ab3"
000041FA <dos.include.ab3@2311> XINCLUDE "dos.include.ab3"
00004200 <dos.include.ab3@2312> XINCLUDE "dos.include.ab3"
00004210 <dos.include.ab3@2313> XINCLUDE "dos.include.ab3"
0000421A <dos.include.ab3@2315> XINCLUDE "dos.include.ab3"
00004234 <dos.include.ab3@2316> XINCLUDE "dos.include.ab3"
00004262 <dos.include.ab3@2558> XINCLUDE "dos.include.ab3"
00004284 <dos.include.ab3@2559> XINCLUDE "dos.include.ab3"
0000428C <dos.include.ab3@2560> XINCLUDE "dos.include.ab3"
0000429A <dos.include.ab3@2561> XINCLUDE "dos.include.ab3"
000042B4 <dos.include.ab3@2563> XINCLUDE "dos.include.ab3"
000042E2 <dos.include.ab3@2582> XINCLUDE "dos.include.ab3"
000042F6 <dos.include.ab3@2583> XINCLUDE "dos.include.ab3"
0000432A <dos.include.ab3@2584> XINCLUDE "dos.include.ab3"
00004344 <dos.include.ab3@2586> XINCLUDE "dos.include.ab3"
0000434C <dos.include.ab3@2587> XINCLUDE "dos.include.ab3"
0000435A <dos.include.ab3@2588> XINCLUDE "dos.include.ab3"
00004374 <dos.include.ab3@2590> XINCLUDE "dos.include.ab3"
0000439E <dos.include.ab3@2726> XINCLUDE "dos.include.ab3"
000043AA <dos.include.ab3@2728> XINCLUDE "dos.include.ab3"
000043CA <dos.include.ab3@2729> XINCLUDE "dos.include.ab3"
000043F0 <dos.include.ab3@2730> XINCLUDE "dos.include.ab3"
0000441C <dos.include.ab3@2731> XINCLUDE "dos.include.ab3"
00004434 <dos.include.ab3@2732> XINCLUDE "dos.include.ab3"
00004442 <dos.include.ab3@2734> XINCLUDE "dos.include.ab3"
00004448 <dos.include.ab3@2735> XINCLUDE "dos.include.ab3"
00004454 <dos.include.ab3@2736> XINCLUDE "dos.include.ab3"
0000445A <dos.include.ab3@2738> XINCLUDE "dos.include.ab3"
00004466 <dos.include.ab3@2739> XINCLUDE "dos.include.ab3"
00004476 <dos.include.ab3@2741> XINCLUDE "dos.include.ab3"
0000447C <dos.include.ab3@2742> XINCLUDE "dos.include.ab3"
00004488 <dos.include.ab3@2743> XINCLUDE "dos.include.ab3"
00004492 <dos.include.ab3@2745> XINCLUDE "dos.include.ab3"
000044AC <dos.include.ab3@2746> XINCLUDE "dos.include.ab3"
000044AC <AmiBlitz3.ab3@79> XINCLUDE "dos.include.ab3"
000044BA <AmiBlitz3.ab3@81> If dos_FromCLI{}
000044C0 <AmiBlitz3.ab3@82>   CLIMode.l=True
000044CC <AmiBlitz3.ab3@83>   error_SetFlags{#error_stdout}
000044CC <common.ab3@1> XINCLUDE "/Shared/common.ab3"
000044F4 <common.ab3@48> XINCLUDE "/Shared/common.ab3"
000044FA <common.ab3@261> XINCLUDE "/Shared/common.ab3"
000044FC <common.ab3@262> XINCLUDE "/Shared/common.ab3"
0000468C <common.ab3@263> XINCLUDE "/Shared/common.ab3"
00004690 <common.ab3@264> XINCLUDE "/Shared/common.ab3"
00004694 <common.ab3@266> XINCLUDE "/Shared/common.ab3"
00004698 <common.ab3@267> XINCLUDE "/Shared/common.ab3"
0000469C <common.ab3@269> XINCLUDE "/Shared/common.ab3"
000046A0 <common.ab3@270> XINCLUDE "/Shared/common.ab3"
000046A4 <common.ab3@271> XINCLUDE "/Shared/common.ab3"
000046A8 <common.ab3@272> XINCLUDE "/Shared/common.ab3"
000046AC <common.ab3@273> XINCLUDE "/Shared/common.ab3"
000046B0 <common.ab3@274> XINCLUDE "/Shared/common.ab3"
000046B4 <common.ab3@275> XINCLUDE "/Shared/common.ab3"
000046B8 <common.ab3@276> XINCLUDE "/Shared/common.ab3"
000046BC <common.ab3@277> XINCLUDE "/Shared/common.ab3"
000046C0 <common.ab3@279> XINCLUDE "/Shared/common.ab3"
000046C4 <common.ab3@281> XINCLUDE "/Shared/common.ab3"
000046C8 <common.ab3@282> XINCLUDE "/Shared/common.ab3"
000046CC <common.ab3@283> XINCLUDE "/Shared/common.ab3"
000046D0 <common.ab3@284> XINCLUDE "/Shared/common.ab3"
000046D4 <common.ab3@285> XINCLUDE "/Shared/common.ab3"
000046D8 <common.ab3@286> XINCLUDE "/Shared/common.ab3"
000046DC <common.ab3@287> XINCLUDE "/Shared/common.ab3"
000046E0 <common.ab3@288> XINCLUDE "/Shared/common.ab3"
000046E4 <common.ab3@289> XINCLUDE "/Shared/common.ab3"
000046E8 <common.ab3@290> XINCLUDE "/Shared/common.ab3"
000046F0 <common.ab3@293> XINCLUDE "/Shared/common.ab3"
000046F4 <common.ab3@294> XINCLUDE "/Shared/common.ab3"
000046F6 <common.ab3@295> XINCLUDE "/Shared/common.ab3"
000046FA <common.ab3@296> XINCLUDE "/Shared/common.ab3"
000046FC <common.ab3@297> XINCLUDE "/Shared/common.ab3"
00004700 <common.ab3@298> XINCLUDE "/Shared/common.ab3"
00004704 <common.ab3@299> XINCLUDE "/Shared/common.ab3"
00004708 <common.ab3@300> XINCLUDE "/Shared/common.ab3"
0000470C <common.ab3@301> XINCLUDE "/Shared/common.ab3"
00004710 <common.ab3@302> XINCLUDE "/Shared/common.ab3"
00004718 <common.ab3@303> XINCLUDE "/Shared/common.ab3"
00004720 <common.ab3@304> XINCLUDE "/Shared/common.ab3"
00004724 <common.ab3@305> XINCLUDE "/Shared/common.ab3"
00004728 <common.ab3@306> XINCLUDE "/Shared/common.ab3"
0000472C <common.ab3@307> XINCLUDE "/Shared/common.ab3"
0000472E <common.ab3@309> XINCLUDE "/Shared/common.ab3"
000047EE <common.ab3@310> XINCLUDE "/Shared/common.ab3"
00004836 <common.ab3@311> XINCLUDE "/Shared/common.ab3"
0000483A <common.ab3@313> XINCLUDE "/Shared/common.ab3"
0000483C <common.ab3@314> XINCLUDE "/Shared/common.ab3"
00004840 <common.ab3@315> XINCLUDE "/Shared/common.ab3"
00004842 <common.ab3@316> XINCLUDE "/Shared/common.ab3"
00004844 <common.ab3@317> XINCLUDE "/Shared/common.ab3"
00004846 <common.ab3@318> XINCLUDE "/Shared/common.ab3"
00004848 <common.ab3@319> XINCLUDE "/Shared/common.ab3"
0000484A <common.ab3@321> XINCLUDE "/Shared/common.ab3"
0000484C <common.ab3@322> XINCLUDE "/Shared/common.ab3"
0000484D <common.ab3@326> XINCLUDE "/Shared/common.ab3"
0000484E <common.ab3@328> XINCLUDE "/Shared/common.ab3"
00004850 <common.ab3@329> XINCLUDE "/Shared/common.ab3"
00004852 <common.ab3@330> XINCLUDE "/Shared/common.ab3"
00004854 <common.ab3@332> XINCLUDE "/Shared/common.ab3"
00004856 <common.ab3@335> XINCLUDE "/Shared/common.ab3"
00004858 <common.ab3@337> XINCLUDE "/Shared/common.ab3"
0000485A <common.ab3@339> XINCLUDE "/Shared/common.ab3"
0000485E <common.ab3@341> XINCLUDE "/Shared/common.ab3"
00004860 <common.ab3@343> XINCLUDE "/Shared/common.ab3"
00004862 <common.ab3@344> XINCLUDE "/Shared/common.ab3"
00004864 <common.ab3@346> XINCLUDE "/Shared/common.ab3"
00004868 <common.ab3@348> XINCLUDE "/Shared/common.ab3"
0000486A <common.ab3@349> XINCLUDE "/Shared/common.ab3"
0000486C <common.ab3@350> XINCLUDE "/Shared/common.ab3"
00004870 <common.ab3@353> XINCLUDE "/Shared/common.ab3"
00004872 <common.ab3@354> XINCLUDE "/Shared/common.ab3"
00004874 <common.ab3@355> XINCLUDE "/Shared/common.ab3"
00004876 <common.ab3@356> XINCLUDE "/Shared/common.ab3"
00004878 <common.ab3@358> XINCLUDE "/Shared/common.ab3"
0000487A <common.ab3@359> XINCLUDE "/Shared/common.ab3"
0000487E <common.ab3@361> XINCLUDE "/Shared/common.ab3"
00004880 <common.ab3@362> XINCLUDE "/Shared/common.ab3"
00004882 <common.ab3@363> XINCLUDE "/Shared/common.ab3"
00004884 <common.ab3@367> XINCLUDE "/Shared/common.ab3"
00004886 <common.ab3@368> XINCLUDE "/Shared/common.ab3"
0000488A <common.ab3@369> XINCLUDE "/Shared/common.ab3"
0000488C <common.ab3@375> XINCLUDE "/Shared/common.ab3"
0000488E <common.ab3@377> XINCLUDE "/Shared/common.ab3"
00004890 <common.ab3@379> XINCLUDE "/Shared/common.ab3"
00004892 <common.ab3@380> XINCLUDE "/Shared/common.ab3"
00004894 <common.ab3@381> XINCLUDE "/Shared/common.ab3"
00004898 <common.ab3@382> XINCLUDE "/Shared/common.ab3"
0000489A <common.ab3@383> XINCLUDE "/Shared/common.ab3"
0000489C <common.ab3@384> XINCLUDE "/Shared/common.ab3"
0000489E <common.ab3@385> XINCLUDE "/Shared/common.ab3"
000048A0 <common.ab3@386> XINCLUDE "/Shared/common.ab3"
000048A2 <common.ab3@388> XINCLUDE "/Shared/common.ab3"
000048A4 <common.ab3@390> XINCLUDE "/Shared/common.ab3"
000048A6 <common.ab3@392> XINCLUDE "/Shared/common.ab3"
000048AA <common.ab3@393> XINCLUDE "/Shared/common.ab3"
000048AC <common.ab3@394> XINCLUDE "/Shared/common.ab3"
000048DA <common.ab3@395> XINCLUDE "/Shared/common.ab3"
000048E4 <common.ab3@396> XINCLUDE "/Shared/common.ab3"
000048E8 <common.ab3@397> XINCLUDE "/Shared/common.ab3"
000048EA <common.ab3@399> XINCLUDE "/Shared/common.ab3"
000048EC <common.ab3@400> XINCLUDE "/Shared/common.ab3"
000048F0 <common.ab3@401> XINCLUDE "/Shared/common.ab3"
000048F4 <common.ab3@402> XINCLUDE "/Shared/common.ab3"
000048FD <common.ab3@403> XINCLUDE "/Shared/common.ab3"
00004900 <common.ab3@404> XINCLUDE "/Shared/common.ab3"
0000492D <common.ab3@405> XINCLUDE "/Shared/common.ab3"
0000496D <common.ab3@406> XINCLUDE "/Shared/common.ab3"
00004979 <common.ab3@407> XINCLUDE "/Shared/common.ab3"
000049C9 <common.ab3@408> XINCLUDE "/Shared/common.ab3"
000049D5 <common.ab3@409> XINCLUDE "/Shared/common.ab3"
00004A25 <common.ab3@410> XINCLUDE "/Shared/common.ab3"
00004B21 <common.ab3@411> XINCLUDE "/Shared/common.ab3"
00004B23 <common.ab3@412> XINCLUDE "/Shared/common.ab3"
00004BE3 <common.ab3@413> XINCLUDE "/Shared/common.ab3"
00004C23 <common.ab3@414> XINCLUDE "/Shared/common.ab3"
00004C25 <common.ab3@415> XINCLUDE "/Shared/common.ab3"
00004C26 <common.ab3@416> XINCLUDE "/Shared/common.ab3"
00004C2A <common.ab3@419> XINCLUDE "/Shared/common.ab3"
00004C2E <common.ab3@421> XINCLUDE "/Shared/common.ab3"
00004C32 <common.ab3@422> XINCLUDE "/Shared/common.ab3"
00004C36 <common.ab3@423> XINCLUDE "/Shared/common.ab3"
00004C3A <common.ab3@425> XINCLUDE "/Shared/common.ab3"
00004C3E <common.ab3@427> XINCLUDE "/Shared/common.ab3"
00004C42 <common.ab3@428> XINCLUDE "/Shared/common.ab3"
00004C46 <common.ab3@429> XINCLUDE "/Shared/common.ab3"
00004C4A <common.ab3@430> XINCLUDE "/Shared/common.ab3"
00004C4E <common.ab3@431> XINCLUDE "/Shared/common.ab3"
00004C52 <common.ab3@432> XINCLUDE "/Shared/common.ab3"
00004C56 <common.ab3@433> XINCLUDE "/Shared/common.ab3"
00004C5A <common.ab3@434> XINCLUDE "/Shared/common.ab3"
00004C5E <common.ab3@436> XINCLUDE "/Shared/common.ab3"
00004C62 <common.ab3@438> XINCLUDE "/Shared/common.ab3"
00004C66 <common.ab3@440> XINCLUDE "/Shared/common.ab3"
00004C6A <common.ab3@442> XINCLUDE "/Shared/common.ab3"
00004C6E <common.ab3@443> XINCLUDE "/Shared/common.ab3"
00004C78 <common.ab3@444> XINCLUDE "/Shared/common.ab3"
00004C7C <common.ab3@445> XINCLUDE "/Shared/common.ab3"
00004C80 <common.ab3@448> XINCLUDE "/Shared/common.ab3"
00004C82 <common.ab3@449> XINCLUDE "/Shared/common.ab3"
00004C84 <common.ab3@450> XINCLUDE "/Shared/common.ab3"
00004CA2 <common.ab3@451> XINCLUDE "/Shared/common.ab3"
00004CA6 <common.ab3@452> XINCLUDE "/Shared/common.ab3"
00004CA8 <common.ab3@454> XINCLUDE "/Shared/common.ab3"
00004CAC <common.ab3@455> XINCLUDE "/Shared/common.ab3"
00004CE0 <common.ab3@456> XINCLUDE "/Shared/common.ab3"
00004CE4 <common.ab3@457> XINCLUDE "/Shared/common.ab3"
00004CF2 <common.ab3@459> XINCLUDE "/Shared/common.ab3"
00004D04 <common.ab3@460> XINCLUDE "/Shared/common.ab3"
00004D06 <common.ab3@461> XINCLUDE "/Shared/common.ab3"
00004D1A <common.ab3@462> XINCLUDE "/Shared/common.ab3"
00004D30 <common.ab3@463> XINCLUDE "/Shared/common.ab3"
00004D46 <common.ab3@464> XINCLUDE "/Shared/common.ab3"
00004D5C <common.ab3@465> XINCLUDE "/Shared/common.ab3"
00004D72 <common.ab3@466> XINCLUDE "/Shared/common.ab3"
00004D74 <common.ab3@467> XINCLUDE "/Shared/common.ab3"
00004D76 <common.ab3@468> XINCLUDE "/Shared/common.ab3"
00004D7A <common.ab3@470> XINCLUDE "/Shared/common.ab3"
00004D7E <common.ab3@472> XINCLUDE "/Shared/common.ab3"
00004D82 <common.ab3@474> XINCLUDE "/Shared/common.ab3"
00004D86 <common.ab3@475> XINCLUDE "/Shared/common.ab3"
00004D8A <common.ab3@476> XINCLUDE "/Shared/common.ab3"
00004D8E <common.ab3@477> XINCLUDE "/Shared/common.ab3"
00004D92 <common.ab3@478> XINCLUDE "/Shared/common.ab3"
00004D96 <common.ab3@479> XINCLUDE "/Shared/common.ab3"
00004D9A <common.ab3@480> XINCLUDE "/Shared/common.ab3"
00004D9E <common.ab3@481> XINCLUDE "/Shared/common.ab3"
00004DA4 <common.ab3@482> XINCLUDE "/Shared/common.ab3"
00004DB6 <common.ab3@483> XINCLUDE "/Shared/common.ab3"
00004DB8 <common.ab3@487> XINCLUDE "/Shared/common.ab3"
00004DBC <common.ab3@488> XINCLUDE "/Shared/common.ab3"
00004DBE <common.ab3@489> XINCLUDE "/Shared/common.ab3"
00004DC2 <common.ab3@490> XINCLUDE "/Shared/common.ab3"
00004DC4 <common.ab3@491> XINCLUDE "/Shared/common.ab3"
00004DC8 <common.ab3@492> XINCLUDE "/Shared/common.ab3"
00004DCA <common.ab3@493> XINCLUDE "/Shared/common.ab3"
00004DCE <common.ab3@494> XINCLUDE "/Shared/common.ab3"
00004DD0 <common.ab3@495> XINCLUDE "/Shared/common.ab3"
00004DD4 <common.ab3@496> XINCLUDE "/Shared/common.ab3"
00004DD6 <common.ab3@497> XINCLUDE "/Shared/common.ab3"
00004DDA <common.ab3@498> XINCLUDE "/Shared/common.ab3"
00004DDC <common.ab3@499> XINCLUDE "/Shared/common.ab3"
00004DE0 <common.ab3@500> XINCLUDE "/Shared/common.ab3"
00004DE2 <common.ab3@501> XINCLUDE "/Shared/common.ab3"
00004DE6 <common.ab3@502> XINCLUDE "/Shared/common.ab3"
00004DE8 <common.ab3@503> XINCLUDE "/Shared/common.ab3"
00004DEC <common.ab3@504> XINCLUDE "/Shared/common.ab3"
00004DEE <common.ab3@505> XINCLUDE "/Shared/common.ab3"
00004DF2 <common.ab3@506> XINCLUDE "/Shared/common.ab3"
00004DF4 <common.ab3@507> XINCLUDE "/Shared/common.ab3"
00004DF8 <common.ab3@508> XINCLUDE "/Shared/common.ab3"
00004DFA <common.ab3@509> XINCLUDE "/Shared/common.ab3"
00004DFE <common.ab3@510> XINCLUDE "/Shared/common.ab3"
00004E00 <common.ab3@511> XINCLUDE "/Shared/common.ab3"
00004E04 <common.ab3@512> XINCLUDE "/Shared/common.ab3"
00004E06 <common.ab3@513> XINCLUDE "/Shared/common.ab3"
00004E0A <common.ab3@514> XINCLUDE "/Shared/common.ab3"
00004E0C <common.ab3@515> XINCLUDE "/Shared/common.ab3"
00004E20 <common.ab3@519> XINCLUDE "/Shared/common.ab3"
00004E34 <common.ab3@520> XINCLUDE "/Shared/common.ab3"
00004E48 <common.ab3@521> XINCLUDE "/Shared/common.ab3"
00004E4A <common.ab3@522> XINCLUDE "/Shared/common.ab3"
00004E4E <common.ab3@523> XINCLUDE "/Shared/common.ab3"
00004E52 <common.ab3@524> XINCLUDE "/Shared/common.ab3"
00004E56 <common.ab3@525> XINCLUDE "/Shared/common.ab3"
00004E5A <common.ab3@526> XINCLUDE "/Shared/common.ab3"
00004E5E <common.ab3@527> XINCLUDE "/Shared/common.ab3"
00004E62 <common.ab3@528> XINCLUDE "/Shared/common.ab3"
00004E66 <common.ab3@529> XINCLUDE "/Shared/common.ab3"
00004E67 <common.ab3@530> XINCLUDE "/Shared/common.ab3"
00004E68 <common.ab3@531> XINCLUDE "/Shared/common.ab3"
00004E69 <common.ab3@532> XINCLUDE "/Shared/common.ab3"
00004E6C <common.ab3@533> XINCLUDE "/Shared/common.ab3"
00004E70 <common.ab3@534> XINCLUDE "/Shared/common.ab3"
00004E74 <common.ab3@535> XINCLUDE "/Shared/common.ab3"
00004E78 <common.ab3@536> XINCLUDE "/Shared/common.ab3"
00004E7C <common.ab3@537> XINCLUDE "/Shared/common.ab3"
00004E80 <common.ab3@538> XINCLUDE "/Shared/common.ab3"
00004E84 <common.ab3@539> XINCLUDE "/Shared/common.ab3"
00004E85 <common.ab3@540> XINCLUDE "/Shared/common.ab3"
00004E86 <common.ab3@541> XINCLUDE "/Shared/common.ab3"
00004E88 <common.ab3@542> XINCLUDE "/Shared/common.ab3"
00004E8C <common.ab3@543> XINCLUDE "/Shared/common.ab3"
00004E90 <common.ab3@544> XINCLUDE "/Shared/common.ab3"
00004E94 <common.ab3@545> XINCLUDE "/Shared/common.ab3"
00004E98 <common.ab3@547> XINCLUDE "/Shared/common.ab3"
00004E9C <common.ab3@548> XINCLUDE "/Shared/common.ab3"
00004EA0 <common.ab3@549> XINCLUDE "/Shared/common.ab3"
00004EA4 <common.ab3@550> XINCLUDE "/Shared/common.ab3"
00004EA8 <common.ab3@551> XINCLUDE "/Shared/common.ab3"
00004EAC <common.ab3@552> XINCLUDE "/Shared/common.ab3"
00004EB0 <common.ab3@553> XINCLUDE "/Shared/common.ab3"
00004EB4 <common.ab3@554> XINCLUDE "/Shared/common.ab3"
00004EB8 <common.ab3@558> XINCLUDE "/Shared/common.ab3"
00004EBC <common.ab3@559> XINCLUDE "/Shared/common.ab3"
00004EC0 <common.ab3@560> XINCLUDE "/Shared/common.ab3"
00004EC2 <common.ab3@561> XINCLUDE "/Shared/common.ab3"
00004EC3 <common.ab3@562> XINCLUDE "/Shared/common.ab3"
00004EC7 <common.ab3@563> XINCLUDE "/Shared/common.ab3"
00004ECB <common.ab3@564> XINCLUDE "/Shared/common.ab3"
00004ECF <common.ab3@565> XINCLUDE "/Shared/common.ab3"
00004ED3 <common.ab3@566> XINCLUDE "/Shared/common.ab3"
00004ED4 <common.ab3@568> XINCLUDE "/Shared/common.ab3"
00004ED8 <common.ab3@570> XINCLUDE "/Shared/common.ab3"
00004EDC <common.ab3@571> XINCLUDE "/Shared/common.ab3"
00004EE0 <common.ab3@572> XINCLUDE "/Shared/common.ab3"
00004EE4 <common.ab3@573> XINCLUDE "/Shared/common.ab3"
00004EE8 <common.ab3@574> XINCLUDE "/Shared/common.ab3"
00004EE9 <common.ab3@575> XINCLUDE "/Shared/common.ab3"
00004EEA <common.ab3@577> XINCLUDE "/Shared/common.ab3"
00004EEE <common.ab3@579> XINCLUDE "/Shared/common.ab3"
00004EF2 <common.ab3@580> XINCLUDE "/Shared/common.ab3"
00004EF4 <common.ab3@581> XINCLUDE "/Shared/common.ab3"
00004EF6 <common.ab3@582> XINCLUDE "/Shared/common.ab3"
00004EFA <common.ab3@586> XINCLUDE "/Shared/common.ab3"
00004EFE <common.ab3@587> XINCLUDE "/Shared/common.ab3"
00004F02 <common.ab3@589> XINCLUDE "/Shared/common.ab3"
00004F06 <common.ab3@590> XINCLUDE "/Shared/common.ab3"
00004F0A <common.ab3@592> XINCLUDE "/Shared/common.ab3"
00004F0E <common.ab3@593> XINCLUDE "/Shared/common.ab3"
00004F12 <common.ab3@595> XINCLUDE "/Shared/common.ab3"
00004F16 <common.ab3@596> XINCLUDE "/Shared/common.ab3"
00004F1A <common.ab3@597> XINCLUDE "/Shared/common.ab3"
00004F1E <common.ab3@598> XINCLUDE "/Shared/common.ab3"
00004F22 <common.ab3@599> XINCLUDE "/Shared/common.ab3"
00004F26 <common.ab3@600> XINCLUDE "/Shared/common.ab3"
00004F2A <common.ab3@601> XINCLUDE "/Shared/common.ab3"
00004F2E <common.ab3@602> XINCLUDE "/Shared/common.ab3"
00004F32 <common.ab3@603> XINCLUDE "/Shared/common.ab3"
00004F36 <common.ab3@604> XINCLUDE "/Shared/common.ab3"
00004F3A <common.ab3@605> XINCLUDE "/Shared/common.ab3"
00004F3E <common.ab3@606> XINCLUDE "/Shared/common.ab3"
00004F42 <common.ab3@607> XINCLUDE "/Shared/common.ab3"
00004F46 <common.ab3@608> XINCLUDE "/Shared/common.ab3"
00004F46 <AmiBlitz3.ab3@86> XINCLUDE "/Shared/common.ab3"
00004F46 <preprocessor.include.ab3@1> XINCLUDE "/Shared/preprocessor.include.ab3"
00004F46 <hashmap.include.ab3@1> XINCLUDE "/Shared/preprocessor.include.ab3"
00004F64 <hashmap.include.ab3@39> XINCLUDE "/Shared/preprocessor.include.ab3"
00004F6C <hashmap.include.ab3@41> XINCLUDE "/Shared/preprocessor.include.ab3"
00004F9A <hashmap.include.ab3@42> XINCLUDE "/Shared/preprocessor.include.ab3"
00004FCA <hashmap.include.ab3@43> XINCLUDE "/Shared/preprocessor.include.ab3"
00004FDA <hashmap.include.ab3@44> XINCLUDE "/Shared/preprocessor.include.ab3"
00004FE4 <hashmap.include.ab3@46> XINCLUDE "/Shared/preprocessor.include.ab3"
00004FEA <hashmap.include.ab3@48> XINCLUDE "/Shared/preprocessor.include.ab3"
0000500C <hashmap.include.ab3@52> XINCLUDE "/Shared/preprocessor.include.ab3"
0000502C <hashmap.include.ab3@54> XINCLUDE "/Shared/preprocessor.include.ab3"
0000503E <hashmap.include.ab3@55> XINCLUDE "/Shared/preprocessor.include.ab3"
00005066 <hashmap.include.ab3@56> XINCLUDE "/Shared/preprocessor.include.ab3"
0000506C <hashmap.include.ab3@58> XINCLUDE "/Shared/preprocessor.include.ab3"
00005086 <hashmap.include.ab3@62> XINCLUDE "/Shared/preprocessor.include.ab3"
000050A0 <hashmap.include.ab3@64> XINCLUDE "/Shared/preprocessor.include.ab3"
000050B2 <hashmap.include.ab3@65> XINCLUDE "/Shared/preprocessor.include.ab3"
000050C0 <hashmap.include.ab3@66> XINCLUDE "/Shared/preprocessor.include.ab3"
000050F4 <hashmap.include.ab3@67> XINCLUDE "/Shared/preprocessor.include.ab3"
00005102 <hashmap.include.ab3@68> XINCLUDE "/Shared/preprocessor.include.ab3"
0000510C <hashmap.include.ab3@69> XINCLUDE "/Shared/preprocessor.include.ab3"
0000511E <hashmap.include.ab3@70> XINCLUDE "/Shared/preprocessor.include.ab3"
00005158 <hashmap.include.ab3@71> XINCLUDE "/Shared/preprocessor.include.ab3"
00005168 <hashmap.include.ab3@72> XINCLUDE "/Shared/preprocessor.include.ab3"
0000516E <hashmap.include.ab3@74> XINCLUDE "/Shared/preprocessor.include.ab3"
0000517E <hashmap.include.ab3@75> XINCLUDE "/Shared/preprocessor.include.ab3"
0000518A <hashmap.include.ab3@77> XINCLUDE "/Shared/preprocessor.include.ab3"
00005198 <hashmap.include.ab3@79> XINCLUDE "/Shared/preprocessor.include.ab3"
000051A8 <hashmap.include.ab3@80> XINCLUDE "/Shared/preprocessor.include.ab3"
000051C8 <hashmap.include.ab3@81> XINCLUDE "/Shared/preprocessor.include.ab3"
000051D4 <hashmap.include.ab3@83> XINCLUDE "/Shared/preprocessor.include.ab3"
000051E2 <hashmap.include.ab3@84> XINCLUDE "/Shared/preprocessor.include.ab3"
000051F0 <hashmap.include.ab3@85> XINCLUDE "/Shared/preprocessor.include.ab3"
000051FE <hashmap.include.ab3@86> XINCLUDE "/Shared/preprocessor.include.ab3"
0000520C <hashmap.include.ab3@87> XINCLUDE "/Shared/preprocessor.include.ab3"
0000523E <hashmap.include.ab3@88> XINCLUDE "/Shared/preprocessor.include.ab3"
0000524C <hashmap.include.ab3@89> XINCLUDE "/Shared/preprocessor.include.ab3"
0000525C <hashmap.include.ab3@90> XINCLUDE "/Shared/preprocessor.include.ab3"
00005262 <hashmap.include.ab3@91> XINCLUDE "/Shared/preprocessor.include.ab3"
00005266 <hashmap.include.ab3@93> XINCLUDE "/Shared/preprocessor.include.ab3"
00005280 <hashmap.include.ab3@97> XINCLUDE "/Shared/preprocessor.include.ab3"
0000529A <hashmap.include.ab3@99> XINCLUDE "/Shared/preprocessor.include.ab3"
000052B4 <hashmap.include.ab3@100> XINCLUDE "/Shared/preprocessor.include.ab3"
000052D4 <hashmap.include.ab3@102> XINCLUDE "/Shared/preprocessor.include.ab3"
000052DE <hashmap.include.ab3@103> XINCLUDE "/Shared/preprocessor.include.ab3"
000052EA <hashmap.include.ab3@104> XINCLUDE "/Shared/preprocessor.include.ab3"
000052FE <hashmap.include.ab3@105> XINCLUDE "/Shared/preprocessor.include.ab3"
00005330 <hashmap.include.ab3@106> XINCLUDE "/Shared/preprocessor.include.ab3"
00005348 <hashmap.include.ab3@107> XINCLUDE "/Shared/preprocessor.include.ab3"
00005354 <hashmap.include.ab3@108> XINCLUDE "/Shared/preprocessor.include.ab3"
00005362 <hashmap.include.ab3@109> XINCLUDE "/Shared/preprocessor.include.ab3"
00005370 <hashmap.include.ab3@110> XINCLUDE "/Shared/preprocessor.include.ab3"
0000537A <hashmap.include.ab3@111> XINCLUDE "/Shared/preprocessor.include.ab3"
00005388 <hashmap.include.ab3@112> XINCLUDE "/Shared/preprocessor.include.ab3"
000053B2 <hashmap.include.ab3@113> XINCLUDE "/Shared/preprocessor.include.ab3"
000053BC <hashmap.include.ab3@116> XINCLUDE "/Shared/preprocessor.include.ab3"
000053C2 <hashmap.include.ab3@118> XINCLUDE "/Shared/preprocessor.include.ab3"
000053F0 <hashmap.include.ab3@122> XINCLUDE "/Shared/preprocessor.include.ab3"
0000540A <hashmap.include.ab3@124> XINCLUDE "/Shared/preprocessor.include.ab3"
0000542A <hashmap.include.ab3@125> XINCLUDE "/Shared/preprocessor.include.ab3"
0000543E <hashmap.include.ab3@126> XINCLUDE "/Shared/preprocessor.include.ab3"
00005456 <hashmap.include.ab3@127> XINCLUDE "/Shared/preprocessor.include.ab3"
0000547E <hashmap.include.ab3@128> XINCLUDE "/Shared/preprocessor.include.ab3"
00005498 <hashmap.include.ab3@129> XINCLUDE "/Shared/preprocessor.include.ab3"
000054A6 <hashmap.include.ab3@130> XINCLUDE "/Shared/preprocessor.include.ab3"
000054B4 <hashmap.include.ab3@131> XINCLUDE "/Shared/preprocessor.include.ab3"
000054C2 <hashmap.include.ab3@132> XINCLUDE "/Shared/preprocessor.include.ab3"
000054D6 <hashmap.include.ab3@133> XINCLUDE "/Shared/preprocessor.include.ab3"
0000552A <hashmap.include.ab3@134> XINCLUDE "/Shared/preprocessor.include.ab3"
00005554 <hashmap.include.ab3@135> XINCLUDE "/Shared/preprocessor.include.ab3"
00005598 <hashmap.include.ab3@137> XINCLUDE "/Shared/preprocessor.include.ab3"
000055B8 <hashmap.include.ab3@138> XINCLUDE "/Shared/preprocessor.include.ab3"
000055CA <hashmap.include.ab3@139> XINCLUDE "/Shared/preprocessor.include.ab3"
000055EE <hashmap.include.ab3@140> XINCLUDE "/Shared/preprocessor.include.ab3"
000055FC <hashmap.include.ab3@141> XINCLUDE "/Shared/preprocessor.include.ab3"
00005654 <hashmap.include.ab3@142> XINCLUDE "/Shared/preprocessor.include.ab3"
0000569A <hashmap.include.ab3@143> XINCLUDE "/Shared/preprocessor.include.ab3"
000056A0 <hashmap.include.ab3@144> XINCLUDE "/Shared/preprocessor.include.ab3"
000056A6 <hashmap.include.ab3@145> XINCLUDE "/Shared/preprocessor.include.ab3"
000056CE <hashmap.include.ab3@147> XINCLUDE "/Shared/preprocessor.include.ab3"
000056E0 <hashmap.include.ab3@148> XINCLUDE "/Shared/preprocessor.include.ab3"
000056F2 <hashmap.include.ab3@149> XINCLUDE "/Shared/preprocessor.include.ab3"
0000572C <hashmap.include.ab3@150> XINCLUDE "/Shared/preprocessor.include.ab3"
0000573C <hashmap.include.ab3@151> XINCLUDE "/Shared/preprocessor.include.ab3"
00005742 <hashmap.include.ab3@153> XINCLUDE "/Shared/preprocessor.include.ab3"
00005752 <hashmap.include.ab3@154> XINCLUDE "/Shared/preprocessor.include.ab3"
00005758 <hashmap.include.ab3@156> XINCLUDE "/Shared/preprocessor.include.ab3"
0000575E <hashmap.include.ab3@158> XINCLUDE "/Shared/preprocessor.include.ab3"
00005776 <hashmap.include.ab3@160> XINCLUDE "/Shared/preprocessor.include.ab3"
000057B4 <hashmap.include.ab3@164> XINCLUDE "/Shared/preprocessor.include.ab3"
000057D0 <hashmap.include.ab3@166> XINCLUDE "/Shared/preprocessor.include.ab3"
00005802 <hashmap.include.ab3@167> XINCLUDE "/Shared/preprocessor.include.ab3"
00005816 <hashmap.include.ab3@168> XINCLUDE "/Shared/preprocessor.include.ab3"
0000582A <hashmap.include.ab3@169> XINCLUDE "/Shared/preprocessor.include.ab3"
00005842 <hashmap.include.ab3@170> XINCLUDE "/Shared/preprocessor.include.ab3"
0000586A <hashmap.include.ab3@172> XINCLUDE "/Shared/preprocessor.include.ab3"
00005874 <hashmap.include.ab3@176> XINCLUDE "/Shared/preprocessor.include.ab3"
00005882 <hashmap.include.ab3@177> XINCLUDE "/Shared/preprocessor.include.ab3"
0000589A <hashmap.include.ab3@178> XINCLUDE "/Shared/preprocessor.include.ab3"
000058A0 <hashmap.include.ab3@182> XINCLUDE "/Shared/preprocessor.include.ab3"
000058A8 <hashmap.include.ab3@183> XINCLUDE "/Shared/preprocessor.include.ab3"
000058C8 <hashmap.include.ab3@186> XINCLUDE "/Shared/preprocessor.include.ab3"
000058EE <hashmap.include.ab3@187> XINCLUDE "/Shared/preprocessor.include.ab3"
000058F8 <hashmap.include.ab3@188> XINCLUDE "/Shared/preprocessor.include.ab3"
00005906 <hashmap.include.ab3@189> XINCLUDE "/Shared/preprocessor.include.ab3"
00005910 <hashmap.include.ab3@191> XINCLUDE "/Shared/preprocessor.include.ab3"
0000593C <hashmap.include.ab3@192> XINCLUDE "/Shared/preprocessor.include.ab3"
00005950 <hashmap.include.ab3@193> XINCLUDE "/Shared/preprocessor.include.ab3"
00005956 <hashmap.include.ab3@194> XINCLUDE "/Shared/preprocessor.include.ab3"
00005964 <hashmap.include.ab3@195> XINCLUDE "/Shared/preprocessor.include.ab3"
0000599A <hashmap.include.ab3@198> XINCLUDE "/Shared/preprocessor.include.ab3"
000059E8 <hashmap.include.ab3@199> XINCLUDE "/Shared/preprocessor.include.ab3"
00005A10 <hashmap.include.ab3@201> XINCLUDE "/Shared/preprocessor.include.ab3"
00005A2A <hashmap.include.ab3@202> XINCLUDE "/Shared/preprocessor.include.ab3"
00005A3C <hashmap.include.ab3@203> XINCLUDE "/Shared/preprocessor.include.ab3"
00005A46 <hashmap.include.ab3@206> XINCLUDE "/Shared/preprocessor.include.ab3"
00005A62 <hashmap.include.ab3@208> XINCLUDE "/Shared/preprocessor.include.ab3"
00005A8C <hashmap.include.ab3@212> XINCLUDE "/Shared/preprocessor.include.ab3"
00005AA8 <hashmap.include.ab3@214> XINCLUDE "/Shared/preprocessor.include.ab3"
00005ACA <hashmap.include.ab3@215> XINCLUDE "/Shared/preprocessor.include.ab3"
00005AF8 <hashmap.include.ab3@216> XINCLUDE "/Shared/preprocessor.include.ab3"
00005B12 <hashmap.include.ab3@217> XINCLUDE "/Shared/preprocessor.include.ab3"
00005B3A <hashmap.include.ab3@218> XINCLUDE "/Shared/preprocessor.include.ab3"
00005B56 <hashmap.include.ab3@219> XINCLUDE "/Shared/preprocessor.include.ab3"
00005B72 <hashmap.include.ab3@220> XINCLUDE "/Shared/preprocessor.include.ab3"
00005B80 <hashmap.include.ab3@221> XINCLUDE "/Shared/preprocessor.include.ab3"
00005B94 <hashmap.include.ab3@223> XINCLUDE "/Shared/preprocessor.include.ab3"
00005BB6 <hashmap.include.ab3@224> XINCLUDE "/Shared/preprocessor.include.ab3"
00005BD8 <hashmap.include.ab3@225> XINCLUDE "/Shared/preprocessor.include.ab3"
00005BE6 <hashmap.include.ab3@226> XINCLUDE "/Shared/preprocessor.include.ab3"
00005C06 <hashmap.include.ab3@227> XINCLUDE "/Shared/preprocessor.include.ab3"
00005C36 <hashmap.include.ab3@228> XINCLUDE "/Shared/preprocessor.include.ab3"
00005C3C <hashmap.include.ab3@229> XINCLUDE "/Shared/preprocessor.include.ab3"
00005C70 <hashmap.include.ab3@230> XINCLUDE "/Shared/preprocessor.include.ab3"
00005CB2 <hashmap.include.ab3@231> XINCLUDE "/Shared/preprocessor.include.ab3"
00005CC2 <hashmap.include.ab3@232> XINCLUDE "/Shared/preprocessor.include.ab3"
00005CCC <hashmap.include.ab3@233> XINCLUDE "/Shared/preprocessor.include.ab3"
00005CDC <hashmap.include.ab3@234> XINCLUDE "/Shared/preprocessor.include.ab3"
00005CE2 <hashmap.include.ab3@238> XINCLUDE "/Shared/preprocessor.include.ab3"
00005CEA <hashmap.include.ab3@240> XINCLUDE "/Shared/preprocessor.include.ab3"
00005CF0 <hashmap.include.ab3@242> XINCLUDE "/Shared/preprocessor.include.ab3"
00005D1E <hashmap.include.ab3@246> XINCLUDE "/Shared/preprocessor.include.ab3"
00005D50 <hashmap.include.ab3@248> XINCLUDE "/Shared/preprocessor.include.ab3"
00005D88 <hashmap.include.ab3@249> XINCLUDE "/Shared/preprocessor.include.ab3"
00005D9C <hashmap.include.ab3@250> XINCLUDE "/Shared/preprocessor.include.ab3"
00005DB4 <hashmap.include.ab3@251> XINCLUDE "/Shared/preprocessor.include.ab3"
00005DDC <hashmap.include.ab3@252> XINCLUDE "/Shared/preprocessor.include.ab3"
00005E0E <hashmap.include.ab3@253> XINCLUDE "/Shared/preprocessor.include.ab3"
00005E2A <hashmap.include.ab3@254> XINCLUDE "/Shared/preprocessor.include.ab3"
00005E38 <hashmap.include.ab3@255> XINCLUDE "/Shared/preprocessor.include.ab3"
00005E4C <hashmap.include.ab3@256> XINCLUDE "/Shared/preprocessor.include.ab3"
00005EA0 <hashmap.include.ab3@257> XINCLUDE "/Shared/preprocessor.include.ab3"
00005ECA <hashmap.include.ab3@258> XINCLUDE "/Shared/preprocessor.include.ab3"
00005F0E <hashmap.include.ab3@259> XINCLUDE "/Shared/preprocessor.include.ab3"
00005F34 <hashmap.include.ab3@260> XINCLUDE "/Shared/preprocessor.include.ab3"
00005F3A <hashmap.include.ab3@262> XINCLUDE "/Shared/preprocessor.include.ab3"
00005F58 <hashmap.include.ab3@264> XINCLUDE "/Shared/preprocessor.include.ab3"
00005F76 <hashmap.include.ab3@266> XINCLUDE "/Shared/preprocessor.include.ab3"
00005F94 <hashmap.include.ab3@303> XINCLUDE "/Shared/preprocessor.include.ab3"
00005F9A <hashmap.include.ab3@305> XINCLUDE "/Shared/preprocessor.include.ab3"
00005FBC <hashmap.include.ab3@306> XINCLUDE "/Shared/preprocessor.include.ab3"
00005FEA <hashmap.include.ab3@308> XINCLUDE "/Shared/preprocessor.include.ab3"
00006012 <hashmap.include.ab3@309> XINCLUDE "/Shared/preprocessor.include.ab3"
00006036 <hashmap.include.ab3@310> XINCLUDE "/Shared/preprocessor.include.ab3"
0000608C <hashmap.include.ab3@313> XINCLUDE "/Shared/preprocessor.include.ab3"
000060DE <hashmap.include.ab3@314> XINCLUDE "/Shared/preprocessor.include.ab3"
00006134 <hashmap.include.ab3@315> XINCLUDE "/Shared/preprocessor.include.ab3"
00006144 <hashmap.include.ab3@318> XINCLUDE "/Shared/preprocessor.include.ab3"
00006196 <hashmap.include.ab3@319> XINCLUDE "/Shared/preprocessor.include.ab3"
000061BE <hashmap.include.ab3@320> XINCLUDE "/Shared/preprocessor.include.ab3"
000061E4 <hashmap.include.ab3@321> XINCLUDE "/Shared/preprocessor.include.ab3"
00006200 <hashmap.include.ab3@322> XINCLUDE "/Shared/preprocessor.include.ab3"
00006208 <hashmap.include.ab3@323> XINCLUDE "/Shared/preprocessor.include.ab3"
00006230 <hashmap.include.ab3@324> XINCLUDE "/Shared/preprocessor.include.ab3"
0000625E <hashmap.include.ab3@327> XINCLUDE "/Shared/preprocessor.include.ab3"
00006286 <hashmap.include.ab3@328> XINCLUDE "/Shared/preprocessor.include.ab3"
0000628E <hashmap.include.ab3@329> XINCLUDE "/Shared/preprocessor.include.ab3"
000062B2 <hashmap.include.ab3@330> XINCLUDE "/Shared/preprocessor.include.ab3"
000062E6 <hashmap.include.ab3@332> XINCLUDE "/Shared/preprocessor.include.ab3"
00006302 <hashmap.include.ab3@333> XINCLUDE "/Shared/preprocessor.include.ab3"
0000630C <hashmap.include.ab3@334> XINCLUDE "/Shared/preprocessor.include.ab3"
00006320 <hashmap.include.ab3@335> XINCLUDE "/Shared/preprocessor.include.ab3"
00006340 <hashmap.include.ab3@336> XINCLUDE "/Shared/preprocessor.include.ab3"
0000635C <hashmap.include.ab3@337> XINCLUDE "/Shared/preprocessor.include.ab3"
0000636A <hashmap.include.ab3@338> XINCLUDE "/Shared/preprocessor.include.ab3"
00006378 <hashmap.include.ab3@339> XINCLUDE "/Shared/preprocessor.include.ab3"
0000637E <hashmap.include.ab3@340> XINCLUDE "/Shared/preprocessor.include.ab3"
00006396 <hashmap.include.ab3@341> XINCLUDE "/Shared/preprocessor.include.ab3"
000063A6 <hashmap.include.ab3@343> XINCLUDE "/Shared/preprocessor.include.ab3"
000063D4 <hashmap.include.ab3@344> XINCLUDE "/Shared/preprocessor.include.ab3"
00006430 <hashmap.include.ab3@345> XINCLUDE "/Shared/preprocessor.include.ab3"
000064A6 <hashmap.include.ab3@346> XINCLUDE "/Shared/preprocessor.include.ab3"
00006502 <hashmap.include.ab3@347> XINCLUDE "/Shared/preprocessor.include.ab3"
00006508 <hashmap.include.ab3@348> XINCLUDE "/Shared/preprocessor.include.ab3"
00006512 <hashmap.include.ab3@351> XINCLUDE "/Shared/preprocessor.include.ab3"
00006518 <hashmap.include.ab3@353> XINCLUDE "/Shared/preprocessor.include.ab3"
00006546 <hashmap.include.ab3@357> XINCLUDE "/Shared/preprocessor.include.ab3"
0000654C <hashmap.include.ab3@359> XINCLUDE "/Shared/preprocessor.include.ab3"
0000656C <hashmap.include.ab3@360> XINCLUDE "/Shared/preprocessor.include.ab3"
00006576 <hashmap.include.ab3@361> XINCLUDE "/Shared/preprocessor.include.ab3"
00006588 <hashmap.include.ab3@362> XINCLUDE "/Shared/preprocessor.include.ab3"
00006598 <hashmap.include.ab3@363> XINCLUDE "/Shared/preprocessor.include.ab3"
000065A2 <hashmap.include.ab3@366> XINCLUDE "/Shared/preprocessor.include.ab3"
000065BC <hashmap.include.ab3@368> XINCLUDE "/Shared/preprocessor.include.ab3"
000065D6 <hashmap.include.ab3@372> XINCLUDE "/Shared/preprocessor.include.ab3"
000065DC <hashmap.include.ab3@374> XINCLUDE "/Shared/preprocessor.include.ab3"
000065E2 <hashmap.include.ab3@375> XINCLUDE "/Shared/preprocessor.include.ab3"
000065EC <hashmap.include.ab3@376> XINCLUDE "/Shared/preprocessor.include.ab3"
000065F4 <hashmap.include.ab3@377> XINCLUDE "/Shared/preprocessor.include.ab3"
0000661C <hashmap.include.ab3@378> XINCLUDE "/Shared/preprocessor.include.ab3"
00006622 <hashmap.include.ab3@379> XINCLUDE "/Shared/preprocessor.include.ab3"
00006636 <hashmap.include.ab3@380> XINCLUDE "/Shared/preprocessor.include.ab3"
00006672 <hashmap.include.ab3@382> XINCLUDE "/Shared/preprocessor.include.ab3"
00006698 <hashmap.include.ab3@383> XINCLUDE "/Shared/preprocessor.include.ab3"
000066A6 <hashmap.include.ab3@384> XINCLUDE "/Shared/preprocessor.include.ab3"
000066E2 <hashmap.include.ab3@386> XINCLUDE "/Shared/preprocessor.include.ab3"
000066F6 <hashmap.include.ab3@387> XINCLUDE "/Shared/preprocessor.include.ab3"
00006732 <hashmap.include.ab3@389> XINCLUDE "/Shared/preprocessor.include.ab3"
00006748 <hashmap.include.ab3@390> XINCLUDE "/Shared/preprocessor.include.ab3"
0000675C <hashmap.include.ab3@392> XINCLUDE "/Shared/preprocessor.include.ab3"
00006766 <hashmap.include.ab3@393> XINCLUDE "/Shared/preprocessor.include.ab3"
0000678A <hashmap.include.ab3@394> XINCLUDE "/Shared/preprocessor.include.ab3"
000067C2 <hashmap.include.ab3@395> XINCLUDE "/Shared/preprocessor.include.ab3"
000067C8 <hashmap.include.ab3@396> XINCLUDE "/Shared/preprocessor.include.ab3"
000067D0 <hashmap.include.ab3@397> XINCLUDE "/Shared/preprocessor.include.ab3"
000067E4 <hashmap.include.ab3@400> XINCLUDE "/Shared/preprocessor.include.ab3"
000067EE <hashmap.include.ab3@401> XINCLUDE "/Shared/preprocessor.include.ab3"
00006816 <hashmap.include.ab3@402> XINCLUDE "/Shared/preprocessor.include.ab3"
0000683E <hashmap.include.ab3@403> XINCLUDE "/Shared/preprocessor.include.ab3"
00006850 <hashmap.include.ab3@404> XINCLUDE "/Shared/preprocessor.include.ab3"
0000687C <hashmap.include.ab3@405> XINCLUDE "/Shared/preprocessor.include.ab3"
000068B0 <hashmap.include.ab3@406> XINCLUDE "/Shared/preprocessor.include.ab3"
000068DC <hashmap.include.ab3@407> XINCLUDE "/Shared/preprocessor.include.ab3"
00006928 <hashmap.include.ab3@408> XINCLUDE "/Shared/preprocessor.include.ab3"
00006938 <hashmap.include.ab3@410> XINCLUDE "/Shared/preprocessor.include.ab3"
0000693E <hashmap.include.ab3@412> XINCLUDE "/Shared/preprocessor.include.ab3"
00006946 <hashmap.include.ab3@413> XINCLUDE "/Shared/preprocessor.include.ab3"
00006974 <hashmap.include.ab3@416> XINCLUDE "/Shared/preprocessor.include.ab3"
00006976 <hashmap.include.ab3@418> XINCLUDE "/Shared/preprocessor.include.ab3"
0000697C <hashmap.include.ab3@419> XINCLUDE "/Shared/preprocessor.include.ab3"
00006986 <hashmap.include.ab3@421> XINCLUDE "/Shared/preprocessor.include.ab3"
000069B0 <hashmap.include.ab3@422> XINCLUDE "/Shared/preprocessor.include.ab3"
000069BA <hashmap.include.ab3@425> XINCLUDE "/Shared/preprocessor.include.ab3"
000069C0 <hashmap.include.ab3@427> XINCLUDE "/Shared/preprocessor.include.ab3"
000069EA <hashmap.include.ab3@431> XINCLUDE "/Shared/preprocessor.include.ab3"
000069F0 <hashmap.include.ab3@433> XINCLUDE "/Shared/preprocessor.include.ab3"
00006A10 <hashmap.include.ab3@434> XINCLUDE "/Shared/preprocessor.include.ab3"
00006A1A <hashmap.include.ab3@435> XINCLUDE "/Shared/preprocessor.include.ab3"
00006A28 <hashmap.include.ab3@436> XINCLUDE "/Shared/preprocessor.include.ab3"
00006A38 <hashmap.include.ab3@437> XINCLUDE "/Shared/preprocessor.include.ab3"
00006A42 <hashmap.include.ab3@440> XINCLUDE "/Shared/preprocessor.include.ab3"
00006A5C <hashmap.include.ab3@442> XINCLUDE "/Shared/preprocessor.include.ab3"
00006A5C <preprocessor.include.ab3@11> XINCLUDE "/Shared/preprocessor.include.ab3"
00006A76 <preprocessor.include.ab3@31> XINCLUDE "/Shared/preprocessor.include.ab3"
00006A90 <preprocessor.include.ab3@32> XINCLUDE "/Shared/preprocessor.include.ab3"
00006AB2 <preprocessor.include.ab3@33> XINCLUDE "/Shared/preprocessor.include.ab3"
00006AE4 <preprocessor.include.ab3@34> XINCLUDE "/Shared/preprocessor.include.ab3"
00006AE8 <preprocessor.include.ab3@35> XINCLUDE "/Shared/preprocessor.include.ab3"
00006B02 <preprocessor.include.ab3@39> XINCLUDE "/Shared/preprocessor.include.ab3"
00006B1C <preprocessor.include.ab3@40> XINCLUDE "/Shared/preprocessor.include.ab3"
00006B26 <preprocessor.include.ab3@41> XINCLUDE "/Shared/preprocessor.include.ab3"
00006B3C <preprocessor.include.ab3@42> XINCLUDE "/Shared/preprocessor.include.ab3"
00006B40 <preprocessor.include.ab3@43> XINCLUDE "/Shared/preprocessor.include.ab3"
00006B5A <preprocessor.include.ab3@47> XINCLUDE "/Shared/preprocessor.include.ab3"
00006B74 <preprocessor.include.ab3@48> XINCLUDE "/Shared/preprocessor.include.ab3"
00006B8E <preprocessor.include.ab3@49> XINCLUDE "/Shared/preprocessor.include.ab3"
00006BB2 <preprocessor.include.ab3@50> XINCLUDE "/Shared/preprocessor.include.ab3"
00006BB8 <preprocessor.include.ab3@51> XINCLUDE "/Shared/preprocessor.include.ab3"
00006BE2 <preprocessor.include.ab3@52> XINCLUDE "/Shared/preprocessor.include.ab3"
00006BFC <preprocessor.include.ab3@53> XINCLUDE "/Shared/preprocessor.include.ab3"
00006C0C <preprocessor.include.ab3@54> XINCLUDE "/Shared/preprocessor.include.ab3"
00006C16 <preprocessor.include.ab3@57> XINCLUDE "/Shared/preprocessor.include.ab3"
00006C24 <preprocessor.include.ab3@58> XINCLUDE "/Shared/preprocessor.include.ab3"
00006C46 <preprocessor.include.ab3@59> XINCLUDE "/Shared/preprocessor.include.ab3"
00006C7A <preprocessor.include.ab3@60> XINCLUDE "/Shared/preprocessor.include.ab3"
00006C96 <preprocessor.include.ab3@61> XINCLUDE "/Shared/preprocessor.include.ab3"
00006CA0 <preprocessor.include.ab3@62> XINCLUDE "/Shared/preprocessor.include.ab3"
00006CBC <preprocessor.include.ab3@63> XINCLUDE "/Shared/preprocessor.include.ab3"
00006CCA <preprocessor.include.ab3@64> XINCLUDE "/Shared/preprocessor.include.ab3"
00006CDE <preprocessor.include.ab3@65> XINCLUDE "/Shared/preprocessor.include.ab3"
00006D00 <preprocessor.include.ab3@66> XINCLUDE "/Shared/preprocessor.include.ab3"
00006D22 <preprocessor.include.ab3@67> XINCLUDE "/Shared/preprocessor.include.ab3"
00006D40 <preprocessor.include.ab3@68> XINCLUDE "/Shared/preprocessor.include.ab3"
00006D6E <preprocessor.include.ab3@69> XINCLUDE "/Shared/preprocessor.include.ab3"
00006D74 <preprocessor.include.ab3@70> XINCLUDE "/Shared/preprocessor.include.ab3"
00006D84 <preprocessor.include.ab3@72> XINCLUDE "/Shared/preprocessor.include.ab3"
00006D88 <preprocessor.include.ab3@74> XINCLUDE "/Shared/preprocessor.include.ab3"
00006D9E <preprocessor.include.ab3@78> XINCLUDE "/Shared/preprocessor.include.ab3"
00006DBE <preprocessor.include.ab3@79> XINCLUDE "/Shared/preprocessor.include.ab3"
00006DC8 <preprocessor.include.ab3@80> XINCLUDE "/Shared/preprocessor.include.ab3"
00006DF2 <preprocessor.include.ab3@81> XINCLUDE "/Shared/preprocessor.include.ab3"
00006E08 <preprocessor.include.ab3@82> XINCLUDE "/Shared/preprocessor.include.ab3"
00006E18 <preprocessor.include.ab3@83> XINCLUDE "/Shared/preprocessor.include.ab3"
00006E34 <preprocessor.include.ab3@85> XINCLUDE "/Shared/preprocessor.include.ab3"
00006E50 <preprocessor.include.ab3@86> XINCLUDE "/Shared/preprocessor.include.ab3"
00006E6C <preprocessor.include.ab3@87> XINCLUDE "/Shared/preprocessor.include.ab3"
00006E88 <preprocessor.include.ab3@88> XINCLUDE "/Shared/preprocessor.include.ab3"
00006EA4 <preprocessor.include.ab3@89> XINCLUDE "/Shared/preprocessor.include.ab3"
00006EC0 <preprocessor.include.ab3@90> XINCLUDE "/Shared/preprocessor.include.ab3"
00006EDC <preprocessor.include.ab3@91> XINCLUDE "/Shared/preprocessor.include.ab3"
00006EF8 <preprocessor.include.ab3@92> XINCLUDE "/Shared/preprocessor.include.ab3"
00006F14 <preprocessor.include.ab3@93> XINCLUDE "/Shared/preprocessor.include.ab3"
00006F30 <preprocessor.include.ab3@94> XINCLUDE "/Shared/preprocessor.include.ab3"
00006F4C <preprocessor.include.ab3@95> XINCLUDE "/Shared/preprocessor.include.ab3"
00006F68 <preprocessor.include.ab3@96> XINCLUDE "/Shared/preprocessor.include.ab3"
00006F84 <preprocessor.include.ab3@97> XINCLUDE "/Shared/preprocessor.include.ab3"
00006FA0 <preprocessor.include.ab3@98> XINCLUDE "/Shared/preprocessor.include.ab3"
00006FBC <preprocessor.include.ab3@99> XINCLUDE "/Shared/preprocessor.include.ab3"
00006FD8 <preprocessor.include.ab3@100> XINCLUDE "/Shared/preprocessor.include.ab3"
00006FF4 <preprocessor.include.ab3@101> XINCLUDE "/Shared/preprocessor.include.ab3"
00007010 <preprocessor.include.ab3@102> XINCLUDE "/Shared/preprocessor.include.ab3"
0000702C <preprocessor.include.ab3@103> XINCLUDE "/Shared/preprocessor.include.ab3"
00007048 <preprocessor.include.ab3@104> XINCLUDE "/Shared/preprocessor.include.ab3"
00007064 <preprocessor.include.ab3@105> XINCLUDE "/Shared/preprocessor.include.ab3"
00007080 <preprocessor.include.ab3@106> XINCLUDE "/Shared/preprocessor.include.ab3"
0000709C <preprocessor.include.ab3@107> XINCLUDE "/Shared/preprocessor.include.ab3"
000070B8 <preprocessor.include.ab3@108> XINCLUDE "/Shared/preprocessor.include.ab3"
000070D4 <preprocessor.include.ab3@109> XINCLUDE "/Shared/preprocessor.include.ab3"
000070F0 <preprocessor.include.ab3@110> XINCLUDE "/Shared/preprocessor.include.ab3"
0000710C <preprocessor.include.ab3@111> XINCLUDE "/Shared/preprocessor.include.ab3"
00007128 <preprocessor.include.ab3@112> XINCLUDE "/Shared/preprocessor.include.ab3"
00007144 <preprocessor.include.ab3@113> XINCLUDE "/Shared/preprocessor.include.ab3"
00007160 <preprocessor.include.ab3@114> XINCLUDE "/Shared/preprocessor.include.ab3"
0000717C <preprocessor.include.ab3@115> XINCLUDE "/Shared/preprocessor.include.ab3"
00007198 <preprocessor.include.ab3@116> XINCLUDE "/Shared/preprocessor.include.ab3"
000071B4 <preprocessor.include.ab3@117> XINCLUDE "/Shared/preprocessor.include.ab3"
000071D0 <preprocessor.include.ab3@118> XINCLUDE "/Shared/preprocessor.include.ab3"
000071EC <preprocessor.include.ab3@119> XINCLUDE "/Shared/preprocessor.include.ab3"
00007208 <preprocessor.include.ab3@120> XINCLUDE "/Shared/preprocessor.include.ab3"
00007224 <preprocessor.include.ab3@121> XINCLUDE "/Shared/preprocessor.include.ab3"
00007240 <preprocessor.include.ab3@122> XINCLUDE "/Shared/preprocessor.include.ab3"
0000725C <preprocessor.include.ab3@123> XINCLUDE "/Shared/preprocessor.include.ab3"
00007278 <preprocessor.include.ab3@124> XINCLUDE "/Shared/preprocessor.include.ab3"
00007294 <preprocessor.include.ab3@125> XINCLUDE "/Shared/preprocessor.include.ab3"
000072B0 <preprocessor.include.ab3@126> XINCLUDE "/Shared/preprocessor.include.ab3"
000072CC <preprocessor.include.ab3@127> XINCLUDE "/Shared/preprocessor.include.ab3"
000072E8 <preprocessor.include.ab3@128> XINCLUDE "/Shared/preprocessor.include.ab3"
00007304 <preprocessor.include.ab3@129> XINCLUDE "/Shared/preprocessor.include.ab3"
00007320 <preprocessor.include.ab3@130> XINCLUDE "/Shared/preprocessor.include.ab3"
0000733C <preprocessor.include.ab3@131> XINCLUDE "/Shared/preprocessor.include.ab3"
00007358 <preprocessor.include.ab3@132> XINCLUDE "/Shared/preprocessor.include.ab3"
00007374 <preprocessor.include.ab3@133> XINCLUDE "/Shared/preprocessor.include.ab3"
00007390 <preprocessor.include.ab3@134> XINCLUDE "/Shared/preprocessor.include.ab3"
000073AC <preprocessor.include.ab3@135> XINCLUDE "/Shared/preprocessor.include.ab3"
000073C8 <preprocessor.include.ab3@136> XINCLUDE "/Shared/preprocessor.include.ab3"
000073E4 <preprocessor.include.ab3@137> XINCLUDE "/Shared/preprocessor.include.ab3"
00007400 <preprocessor.include.ab3@138> XINCLUDE "/Shared/preprocessor.include.ab3"
0000741C <preprocessor.include.ab3@139> XINCLUDE "/Shared/preprocessor.include.ab3"
00007438 <preprocessor.include.ab3@140> XINCLUDE "/Shared/preprocessor.include.ab3"
00007454 <preprocessor.include.ab3@141> XINCLUDE "/Shared/preprocessor.include.ab3"
00007470 <preprocessor.include.ab3@142> XINCLUDE "/Shared/preprocessor.include.ab3"
0000748C <preprocessor.include.ab3@143> XINCLUDE "/Shared/preprocessor.include.ab3"
000074A8 <preprocessor.include.ab3@144> XINCLUDE "/Shared/preprocessor.include.ab3"
000074C4 <preprocessor.include.ab3@145> XINCLUDE "/Shared/preprocessor.include.ab3"
000074E0 <preprocessor.include.ab3@146> XINCLUDE "/Shared/preprocessor.include.ab3"
000074FC <preprocessor.include.ab3@147> XINCLUDE "/Shared/preprocessor.include.ab3"
00007518 <preprocessor.include.ab3@148> XINCLUDE "/Shared/preprocessor.include.ab3"
00007534 <preprocessor.include.ab3@149> XINCLUDE "/Shared/preprocessor.include.ab3"
00007550 <preprocessor.include.ab3@150> XINCLUDE "/Shared/preprocessor.include.ab3"
0000756C <preprocessor.include.ab3@151> XINCLUDE "/Shared/preprocessor.include.ab3"
00007588 <preprocessor.include.ab3@152> XINCLUDE "/Shared/preprocessor.include.ab3"
000075A4 <preprocessor.include.ab3@153> XINCLUDE "/Shared/preprocessor.include.ab3"
000075C0 <preprocessor.include.ab3@154> XINCLUDE "/Shared/preprocessor.include.ab3"
000075DC <preprocessor.include.ab3@155> XINCLUDE "/Shared/preprocessor.include.ab3"
000075F8 <preprocessor.include.ab3@156> XINCLUDE "/Shared/preprocessor.include.ab3"
00007614 <preprocessor.include.ab3@157> XINCLUDE "/Shared/preprocessor.include.ab3"
00007630 <preprocessor.include.ab3@158> XINCLUDE "/Shared/preprocessor.include.ab3"
0000764C <preprocessor.include.ab3@159> XINCLUDE "/Shared/preprocessor.include.ab3"
00007668 <preprocessor.include.ab3@160> XINCLUDE "/Shared/preprocessor.include.ab3"
00007684 <preprocessor.include.ab3@161> XINCLUDE "/Shared/preprocessor.include.ab3"
000076A0 <preprocessor.include.ab3@162> XINCLUDE "/Shared/preprocessor.include.ab3"
000076BC <preprocessor.include.ab3@163> XINCLUDE "/Shared/preprocessor.include.ab3"
000076D8 <preprocessor.include.ab3@164> XINCLUDE "/Shared/preprocessor.include.ab3"
000076F4 <preprocessor.include.ab3@165> XINCLUDE "/Shared/preprocessor.include.ab3"
00007710 <preprocessor.include.ab3@166> XINCLUDE "/Shared/preprocessor.include.ab3"
0000772C <preprocessor.include.ab3@167> XINCLUDE "/Shared/preprocessor.include.ab3"
00007748 <preprocessor.include.ab3@168> XINCLUDE "/Shared/preprocessor.include.ab3"
00007764 <preprocessor.include.ab3@169> XINCLUDE "/Shared/preprocessor.include.ab3"
00007780 <preprocessor.include.ab3@170> XINCLUDE "/Shared/preprocessor.include.ab3"
0000779C <preprocessor.include.ab3@171> XINCLUDE "/Shared/preprocessor.include.ab3"
000077B8 <preprocessor.include.ab3@172> XINCLUDE "/Shared/preprocessor.include.ab3"
000077D4 <preprocessor.include.ab3@173> XINCLUDE "/Shared/preprocessor.include.ab3"
000077F0 <preprocessor.include.ab3@174> XINCLUDE "/Shared/preprocessor.include.ab3"
0000780C <preprocessor.include.ab3@175> XINCLUDE "/Shared/preprocessor.include.ab3"
00007828 <preprocessor.include.ab3@176> XINCLUDE "/Shared/preprocessor.include.ab3"
00007844 <preprocessor.include.ab3@177> XINCLUDE "/Shared/preprocessor.include.ab3"
00007860 <preprocessor.include.ab3@178> XINCLUDE "/Shared/preprocessor.include.ab3"
0000787C <preprocessor.include.ab3@179> XINCLUDE "/Shared/preprocessor.include.ab3"
00007898 <preprocessor.include.ab3@180> XINCLUDE "/Shared/preprocessor.include.ab3"
000078B4 <preprocessor.include.ab3@181> XINCLUDE "/Shared/preprocessor.include.ab3"
000078D0 <preprocessor.include.ab3@182> XINCLUDE "/Shared/preprocessor.include.ab3"
000078EC <preprocessor.include.ab3@183> XINCLUDE "/Shared/preprocessor.include.ab3"
00007908 <preprocessor.include.ab3@184> XINCLUDE "/Shared/preprocessor.include.ab3"
00007924 <preprocessor.include.ab3@185> XINCLUDE "/Shared/preprocessor.include.ab3"
00007940 <preprocessor.include.ab3@186> XINCLUDE "/Shared/preprocessor.include.ab3"
0000795C <preprocessor.include.ab3@187> XINCLUDE "/Shared/preprocessor.include.ab3"
00007978 <preprocessor.include.ab3@188> XINCLUDE "/Shared/preprocessor.include.ab3"
00007994 <preprocessor.include.ab3@189> XINCLUDE "/Shared/preprocessor.include.ab3"
000079B0 <preprocessor.include.ab3@190> XINCLUDE "/Shared/preprocessor.include.ab3"
000079CC <preprocessor.include.ab3@191> XINCLUDE "/Shared/preprocessor.include.ab3"
000079E8 <preprocessor.include.ab3@192> XINCLUDE "/Shared/preprocessor.include.ab3"
00007A04 <preprocessor.include.ab3@193> XINCLUDE "/Shared/preprocessor.include.ab3"
00007A20 <preprocessor.include.ab3@194> XINCLUDE "/Shared/preprocessor.include.ab3"
00007A3C <preprocessor.include.ab3@195> XINCLUDE "/Shared/preprocessor.include.ab3"
00007A58 <preprocessor.include.ab3@196> XINCLUDE "/Shared/preprocessor.include.ab3"
00007A74 <preprocessor.include.ab3@197> XINCLUDE "/Shared/preprocessor.include.ab3"
00007A90 <preprocessor.include.ab3@198> XINCLUDE "/Shared/preprocessor.include.ab3"
00007AAC <preprocessor.include.ab3@199> XINCLUDE "/Shared/preprocessor.include.ab3"
00007AC8 <preprocessor.include.ab3@200> XINCLUDE "/Shared/preprocessor.include.ab3"
00007AE4 <preprocessor.include.ab3@201> XINCLUDE "/Shared/preprocessor.include.ab3"
00007B00 <preprocessor.include.ab3@202> XINCLUDE "/Shared/preprocessor.include.ab3"
00007B1C <preprocessor.include.ab3@203> XINCLUDE "/Shared/preprocessor.include.ab3"
00007B38 <preprocessor.include.ab3@204> XINCLUDE "/Shared/preprocessor.include.ab3"
00007B54 <preprocessor.include.ab3@205> XINCLUDE "/Shared/preprocessor.include.ab3"
00007B70 <preprocessor.include.ab3@206> XINCLUDE "/Shared/preprocessor.include.ab3"
00007B8C <preprocessor.include.ab3@207> XINCLUDE "/Shared/preprocessor.include.ab3"
00007BA8 <preprocessor.include.ab3@208> XINCLUDE "/Shared/preprocessor.include.ab3"
00007BC4 <preprocessor.include.ab3@209> XINCLUDE "/Shared/preprocessor.include.ab3"
00007BE0 <preprocessor.include.ab3@210> XINCLUDE "/Shared/preprocessor.include.ab3"
00007BFC <preprocessor.include.ab3@211> XINCLUDE "/Shared/preprocessor.include.ab3"
00007C18 <preprocessor.include.ab3@212> XINCLUDE "/Shared/preprocessor.include.ab3"
00007C20 <preprocessor.include.ab3@213> XINCLUDE "/Shared/preprocessor.include.ab3"
00007C2A <preprocessor.include.ab3@214> XINCLUDE "/Shared/preprocessor.include.ab3"
00007C34 <preprocessor.include.ab3@216> XINCLUDE "/Shared/preprocessor.include.ab3"
00007C3A <preprocessor.include.ab3@217> XINCLUDE "/Shared/preprocessor.include.ab3"
00007C68 <preprocessor.include.ab3@254> XINCLUDE "/Shared/preprocessor.include.ab3"
00007C84 <preprocessor.include.ab3@255> XINCLUDE "/Shared/preprocessor.include.ab3"
00007CB6 <preprocessor.include.ab3@256> XINCLUDE "/Shared/preprocessor.include.ab3"
00007CC0 <preprocessor.include.ab3@257> XINCLUDE "/Shared/preprocessor.include.ab3"
00007CE2 <preprocessor.include.ab3@258> XINCLUDE "/Shared/preprocessor.include.ab3"
00007CEC <preprocessor.include.ab3@259> XINCLUDE "/Shared/preprocessor.include.ab3"
00007CF6 <preprocessor.include.ab3@260> XINCLUDE "/Shared/preprocessor.include.ab3"
00007D00 <preprocessor.include.ab3@262> XINCLUDE "/Shared/preprocessor.include.ab3"
00007D1A <preprocessor.include.ab3@263> XINCLUDE "/Shared/preprocessor.include.ab3"
00007D48 <preprocessor.include.ab3@267> XINCLUDE "/Shared/preprocessor.include.ab3"
00007D64 <preprocessor.include.ab3@268> XINCLUDE "/Shared/preprocessor.include.ab3"
00007D72 <preprocessor.include.ab3@269> XINCLUDE "/Shared/preprocessor.include.ab3"
00007DAC <preprocessor.include.ab3@270> XINCLUDE "/Shared/preprocessor.include.ab3"
00007DB4 <preprocessor.include.ab3@272> XINCLUDE "/Shared/preprocessor.include.ab3"
00007DCE <preprocessor.include.ab3@273> XINCLUDE "/Shared/preprocessor.include.ab3"
00007DF4 <preprocessor.include.ab3@280> XINCLUDE "/Shared/preprocessor.include.ab3"
00007E16 <preprocessor.include.ab3@281> XINCLUDE "/Shared/preprocessor.include.ab3"
00007E3A <preprocessor.include.ab3@282> XINCLUDE "/Shared/preprocessor.include.ab3"
00007E40 <preprocessor.include.ab3@283> XINCLUDE "/Shared/preprocessor.include.ab3"
00007E4E <preprocessor.include.ab3@284> XINCLUDE "/Shared/preprocessor.include.ab3"
00007E54 <preprocessor.include.ab3@285> XINCLUDE "/Shared/preprocessor.include.ab3"
00007E5C <preprocessor.include.ab3@286> XINCLUDE "/Shared/preprocessor.include.ab3"
00007E62 <preprocessor.include.ab3@287> XINCLUDE "/Shared/preprocessor.include.ab3"
00007E6A <preprocessor.include.ab3@288> XINCLUDE "/Shared/preprocessor.include.ab3"
00007E7E <preprocessor.include.ab3@290> XINCLUDE "/Shared/preprocessor.include.ab3"
00007EA4 <preprocessor.include.ab3@291> XINCLUDE "/Shared/preprocessor.include.ab3"
00007ECC <preprocessor.include.ab3@292> XINCLUDE "/Shared/preprocessor.include.ab3"
00007ED6 <preprocessor.include.ab3@294> XINCLUDE "/Shared/preprocessor.include.ab3"
00007EEA <preprocessor.include.ab3@295> XINCLUDE "/Shared/preprocessor.include.ab3"
00007EFE <preprocessor.include.ab3@296> XINCLUDE "/Shared/preprocessor.include.ab3"
00007F0E <preprocessor.include.ab3@297> XINCLUDE "/Shared/preprocessor.include.ab3"
00007F28 <preprocessor.include.ab3@298> XINCLUDE "/Shared/preprocessor.include.ab3"
00007F56 <preprocessor.include.ab3@299> XINCLUDE "/Shared/preprocessor.include.ab3"
00007F6A <preprocessor.include.ab3@300> XINCLUDE "/Shared/preprocessor.include.ab3"
00007F92 <preprocessor.include.ab3@301> XINCLUDE "/Shared/preprocessor.include.ab3"
00007F98 <preprocessor.include.ab3@302> XINCLUDE "/Shared/preprocessor.include.ab3"
00007FA0 <preprocessor.include.ab3@303> XINCLUDE "/Shared/preprocessor.include.ab3"
00007FA6 <preprocessor.include.ab3@305> XINCLUDE "/Shared/preprocessor.include.ab3"
00007FCE <preprocessor.include.ab3@306> XINCLUDE "/Shared/preprocessor.include.ab3"
00007FD8 <preprocessor.include.ab3@308> XINCLUDE "/Shared/preprocessor.include.ab3"
00007FE6 <preprocessor.include.ab3@309> XINCLUDE "/Shared/preprocessor.include.ab3"
00008004 <preprocessor.include.ab3@310> XINCLUDE "/Shared/preprocessor.include.ab3"
00008012 <preprocessor.include.ab3@311> XINCLUDE "/Shared/preprocessor.include.ab3"
0000801A <preprocessor.include.ab3@312> XINCLUDE "/Shared/preprocessor.include.ab3"
00008020 <preprocessor.include.ab3@313> XINCLUDE "/Shared/preprocessor.include.ab3"
00008034 <preprocessor.include.ab3@317> XINCLUDE "/Shared/preprocessor.include.ab3"
0000803E <preprocessor.include.ab3@318> XINCLUDE "/Shared/preprocessor.include.ab3"
0000804C <preprocessor.include.ab3@319> XINCLUDE "/Shared/preprocessor.include.ab3"
00008066 <preprocessor.include.ab3@320> XINCLUDE "/Shared/preprocessor.include.ab3"
0000806C <preprocessor.include.ab3@322> XINCLUDE "/Shared/preprocessor.include.ab3"
00008074 <preprocessor.include.ab3@323> XINCLUDE "/Shared/preprocessor.include.ab3"
0000807A <preprocessor.include.ab3@325> XINCLUDE "/Shared/preprocessor.include.ab3"
0000808E <preprocessor.include.ab3@326> XINCLUDE "/Shared/preprocessor.include.ab3"
00008098 <preprocessor.include.ab3@327> XINCLUDE "/Shared/preprocessor.include.ab3"
000080A0 <preprocessor.include.ab3@328> XINCLUDE "/Shared/preprocessor.include.ab3"
000080B4 <preprocessor.include.ab3@329> XINCLUDE "/Shared/preprocessor.include.ab3"
000080C8 <preprocessor.include.ab3@334> XINCLUDE "/Shared/preprocessor.include.ab3"
000080DC <preprocessor.include.ab3@335> XINCLUDE "/Shared/preprocessor.include.ab3"
000080FA <preprocessor.include.ab3@337> XINCLUDE "/Shared/preprocessor.include.ab3"
00008108 <preprocessor.include.ab3@338> XINCLUDE "/Shared/preprocessor.include.ab3"
00008118 <preprocessor.include.ab3@339> XINCLUDE "/Shared/preprocessor.include.ab3"
00008140 <preprocessor.include.ab3@340> XINCLUDE "/Shared/preprocessor.include.ab3"
00008162 <preprocessor.include.ab3@341> XINCLUDE "/Shared/preprocessor.include.ab3"
00008176 <preprocessor.include.ab3@344> XINCLUDE "/Shared/preprocessor.include.ab3"
00008194 <preprocessor.include.ab3@346> XINCLUDE "/Shared/preprocessor.include.ab3"
000081A2 <preprocessor.include.ab3@347> XINCLUDE "/Shared/preprocessor.include.ab3"
000081C8 <preprocessor.include.ab3@348> XINCLUDE "/Shared/preprocessor.include.ab3"
000081F0 <preprocessor.include.ab3@349> XINCLUDE "/Shared/preprocessor.include.ab3"
00008212 <preprocessor.include.ab3@350> XINCLUDE "/Shared/preprocessor.include.ab3"
00008242 <preprocessor.include.ab3@353> XINCLUDE "/Shared/preprocessor.include.ab3"
00008270 <preprocessor.include.ab3@357> XINCLUDE "/Shared/preprocessor.include.ab3"
000082A2 <preprocessor.include.ab3@358> XINCLUDE "/Shared/preprocessor.include.ab3"
000082B0 <preprocessor.include.ab3@360> XINCLUDE "/Shared/preprocessor.include.ab3"
000082B6 <preprocessor.include.ab3@361> XINCLUDE "/Shared/preprocessor.include.ab3"
000082C6 <preprocessor.include.ab3@364> XINCLUDE "/Shared/preprocessor.include.ab3"
000082CC <preprocessor.include.ab3@365> XINCLUDE "/Shared/preprocessor.include.ab3"
000082F2 <preprocessor.include.ab3@369> XINCLUDE "/Shared/preprocessor.include.ab3"
00008314 <preprocessor.include.ab3@370> XINCLUDE "/Shared/preprocessor.include.ab3"
0000833C <preprocessor.include.ab3@371> XINCLUDE "/Shared/preprocessor.include.ab3"
0000835C <preprocessor.include.ab3@372> XINCLUDE "/Shared/preprocessor.include.ab3"
0000837E <preprocessor.include.ab3@373> XINCLUDE "/Shared/preprocessor.include.ab3"
00008384 <preprocessor.include.ab3@374> XINCLUDE "/Shared/preprocessor.include.ab3"
00008392 <preprocessor.include.ab3@375> XINCLUDE "/Shared/preprocessor.include.ab3"
000083A0 <preprocessor.include.ab3@376> XINCLUDE "/Shared/preprocessor.include.ab3"
000083A6 <preprocessor.include.ab3@377> XINCLUDE "/Shared/preprocessor.include.ab3"
000083AE <preprocessor.include.ab3@378> XINCLUDE "/Shared/preprocessor.include.ab3"
000083CC <preprocessor.include.ab3@379> XINCLUDE "/Shared/preprocessor.include.ab3"
000083E0 <preprocessor.include.ab3@380> XINCLUDE "/Shared/preprocessor.include.ab3"
000083F0 <preprocessor.include.ab3@381> XINCLUDE "/Shared/preprocessor.include.ab3"
00008406 <preprocessor.include.ab3@383> XINCLUDE "/Shared/preprocessor.include.ab3"
0000841E <preprocessor.include.ab3@385> XINCLUDE "/Shared/preprocessor.include.ab3"
0000843A <preprocessor.include.ab3@386> XINCLUDE "/Shared/preprocessor.include.ab3"
00008444 <preprocessor.include.ab3@387> XINCLUDE "/Shared/preprocessor.include.ab3"
00008460 <preprocessor.include.ab3@388> XINCLUDE "/Shared/preprocessor.include.ab3"
00008472 <preprocessor.include.ab3@389> XINCLUDE "/Shared/preprocessor.include.ab3"
000084A0 <preprocessor.include.ab3@390> XINCLUDE "/Shared/preprocessor.include.ab3"
000084DC <preprocessor.include.ab3@391> XINCLUDE "/Shared/preprocessor.include.ab3"
000084EC <preprocessor.include.ab3@392> XINCLUDE "/Shared/preprocessor.include.ab3"
000084F2 <preprocessor.include.ab3@393> XINCLUDE "/Shared/preprocessor.include.ab3"
000084F8 <preprocessor.include.ab3@396> XINCLUDE "/Shared/preprocessor.include.ab3"
00008510 <preprocessor.include.ab3@397> XINCLUDE "/Shared/preprocessor.include.ab3"
00008520 <preprocessor.include.ab3@398> XINCLUDE "/Shared/preprocessor.include.ab3"
000085A6 <preprocessor.include.ab3@399> XINCLUDE "/Shared/preprocessor.include.ab3"
000085E0 <preprocessor.include.ab3@400> XINCLUDE "/Shared/preprocessor.include.ab3"
00008616 <preprocessor.include.ab3@401> XINCLUDE "/Shared/preprocessor.include.ab3"
00008626 <preprocessor.include.ab3@402> XINCLUDE "/Shared/preprocessor.include.ab3"
00008634 <preprocessor.include.ab3@404> XINCLUDE "/Shared/preprocessor.include.ab3"
0000863A <preprocessor.include.ab3@405> XINCLUDE "/Shared/preprocessor.include.ab3"
0000864A <preprocessor.include.ab3@406> XINCLUDE "/Shared/preprocessor.include.ab3"
00008674 <preprocessor.include.ab3@407> XINCLUDE "/Shared/preprocessor.include.ab3"
0000867A <preprocessor.include.ab3@408> XINCLUDE "/Shared/preprocessor.include.ab3"
000086A6 <preprocessor.include.ab3@409> XINCLUDE "/Shared/preprocessor.include.ab3"
000086B6 <preprocessor.include.ab3@412> XINCLUDE "/Shared/preprocessor.include.ab3"
000086C6 <preprocessor.include.ab3@414> XINCLUDE "/Shared/preprocessor.include.ab3"
000086E4 <preprocessor.include.ab3@415> XINCLUDE "/Shared/preprocessor.include.ab3"
000086F2 <preprocessor.include.ab3@416> XINCLUDE "/Shared/preprocessor.include.ab3"
00008728 <preprocessor.include.ab3@417> XINCLUDE "/Shared/preprocessor.include.ab3"
0000874C <preprocessor.include.ab3@418> XINCLUDE "/Shared/preprocessor.include.ab3"
00008760 <preprocessor.include.ab3@421> XINCLUDE "/Shared/preprocessor.include.ab3"
00008770 <preprocessor.include.ab3@423> XINCLUDE "/Shared/preprocessor.include.ab3"
0000878E <preprocessor.include.ab3@424> XINCLUDE "/Shared/preprocessor.include.ab3"
0000879C <preprocessor.include.ab3@425> XINCLUDE "/Shared/preprocessor.include.ab3"
000087C0 <preprocessor.include.ab3@426> XINCLUDE "/Shared/preprocessor.include.ab3"
000087E4 <preprocessor.include.ab3@427> XINCLUDE "/Shared/preprocessor.include.ab3"
000087F2 <preprocessor.include.ab3@431> XINCLUDE "/Shared/preprocessor.include.ab3"
00008800 <preprocessor.include.ab3@432> XINCLUDE "/Shared/preprocessor.include.ab3"
00008820 <preprocessor.include.ab3@433> XINCLUDE "/Shared/preprocessor.include.ab3"
0000882E <preprocessor.include.ab3@434> XINCLUDE "/Shared/preprocessor.include.ab3"
00008834 <preprocessor.include.ab3@435> XINCLUDE "/Shared/preprocessor.include.ab3"
0000883A <preprocessor.include.ab3@438> XINCLUDE "/Shared/preprocessor.include.ab3"
00008848 <preprocessor.include.ab3@440> XINCLUDE "/Shared/preprocessor.include.ab3"
00008856 <preprocessor.include.ab3@441> XINCLUDE "/Shared/preprocessor.include.ab3"
00008876 <preprocessor.include.ab3@442> XINCLUDE "/Shared/preprocessor.include.ab3"
00008884 <preprocessor.include.ab3@443> XINCLUDE "/Shared/preprocessor.include.ab3"
0000888A <preprocessor.include.ab3@444> XINCLUDE "/Shared/preprocessor.include.ab3"
0000889A <preprocessor.include.ab3@449> XINCLUDE "/Shared/preprocessor.include.ab3"
000088A4 <preprocessor.include.ab3@451> XINCLUDE "/Shared/preprocessor.include.ab3"
000088B8 <preprocessor.include.ab3@452> XINCLUDE "/Shared/preprocessor.include.ab3"
000088DE <preprocessor.include.ab3@456> XINCLUDE "/Shared/preprocessor.include.ab3"
00008900 <preprocessor.include.ab3@457> XINCLUDE "/Shared/preprocessor.include.ab3"
00008928 <preprocessor.include.ab3@458> XINCLUDE "/Shared/preprocessor.include.ab3"
0000892E <preprocessor.include.ab3@459> XINCLUDE "/Shared/preprocessor.include.ab3"
0000893C <preprocessor.include.ab3@460> XINCLUDE "/Shared/preprocessor.include.ab3"
00008942 <preprocessor.include.ab3@461> XINCLUDE "/Shared/preprocessor.include.ab3"
00008956 <preprocessor.include.ab3@462> XINCLUDE "/Shared/preprocessor.include.ab3"
00008966 <preprocessor.include.ab3@463> XINCLUDE "/Shared/preprocessor.include.ab3"
0000897C <preprocessor.include.ab3@465> XINCLUDE "/Shared/preprocessor.include.ab3"
00008994 <preprocessor.include.ab3@467> XINCLUDE "/Shared/preprocessor.include.ab3"
000089B0 <preprocessor.include.ab3@468> XINCLUDE "/Shared/preprocessor.include.ab3"
000089BA <preprocessor.include.ab3@469> XINCLUDE "/Shared/preprocessor.include.ab3"
000089D6 <preprocessor.include.ab3@470> XINCLUDE "/Shared/preprocessor.include.ab3"
00008A04 <preprocessor.include.ab3@471> XINCLUDE "/Shared/preprocessor.include.ab3"
00008A40 <preprocessor.include.ab3@472> XINCLUDE "/Shared/preprocessor.include.ab3"
00008A50 <preprocessor.include.ab3@473> XINCLUDE "/Shared/preprocessor.include.ab3"
00008A5E <preprocessor.include.ab3@475> XINCLUDE "/Shared/preprocessor.include.ab3"
00008A64 <preprocessor.include.ab3@476> XINCLUDE "/Shared/preprocessor.include.ab3"
00008A74 <preprocessor.include.ab3@477> XINCLUDE "/Shared/preprocessor.include.ab3"
00008A9E <preprocessor.include.ab3@478> XINCLUDE "/Shared/preprocessor.include.ab3"
00008AA4 <preprocessor.include.ab3@479> XINCLUDE "/Shared/preprocessor.include.ab3"
00008AD0 <preprocessor.include.ab3@480> XINCLUDE "/Shared/preprocessor.include.ab3"
00008AE0 <preprocessor.include.ab3@482> XINCLUDE "/Shared/preprocessor.include.ab3"
00008AF0 <preprocessor.include.ab3@484> XINCLUDE "/Shared/preprocessor.include.ab3"
00008B0E <preprocessor.include.ab3@485> XINCLUDE "/Shared/preprocessor.include.ab3"
00008B1C <preprocessor.include.ab3@486> XINCLUDE "/Shared/preprocessor.include.ab3"
00008B52 <preprocessor.include.ab3@487> XINCLUDE "/Shared/preprocessor.include.ab3"
00008B76 <preprocessor.include.ab3@488> XINCLUDE "/Shared/preprocessor.include.ab3"
00008B8A <preprocessor.include.ab3@491> XINCLUDE "/Shared/preprocessor.include.ab3"
00008B9A <preprocessor.include.ab3@493> XINCLUDE "/Shared/preprocessor.include.ab3"
00008BB8 <preprocessor.include.ab3@494> XINCLUDE "/Shared/preprocessor.include.ab3"
00008BC6 <preprocessor.include.ab3@495> XINCLUDE "/Shared/preprocessor.include.ab3"
00008BEA <preprocessor.include.ab3@496> XINCLUDE "/Shared/preprocessor.include.ab3"
00008C0E <preprocessor.include.ab3@497> XINCLUDE "/Shared/preprocessor.include.ab3"
00008C14 <preprocessor.include.ab3@501> XINCLUDE "/Shared/preprocessor.include.ab3"
00008C24 <preprocessor.include.ab3@502> XINCLUDE "/Shared/preprocessor.include.ab3"
00008C2A <preprocessor.include.ab3@503> XINCLUDE "/Shared/preprocessor.include.ab3"
00008C4C <preprocessor.include.ab3@507> XINCLUDE "/Shared/preprocessor.include.ab3"
00008C54 <preprocessor.include.ab3@508> XINCLUDE "/Shared/preprocessor.include.ab3"
00008C8A <preprocessor.include.ab3@509> XINCLUDE "/Shared/preprocessor.include.ab3"
00008CA6 <preprocessor.include.ab3@510> XINCLUDE "/Shared/preprocessor.include.ab3"
00008CAC <preprocessor.include.ab3@511> XINCLUDE "/Shared/preprocessor.include.ab3"
00008CE2 <preprocessor.include.ab3@515> XINCLUDE "/Shared/preprocessor.include.ab3"
00008CFE <preprocessor.include.ab3@516> XINCLUDE "/Shared/preprocessor.include.ab3"
00008D26 <preprocessor.include.ab3@517> XINCLUDE "/Shared/preprocessor.include.ab3"
00008D44 <preprocessor.include.ab3@518> XINCLUDE "/Shared/preprocessor.include.ab3"
00008D62 <preprocessor.include.ab3@519> XINCLUDE "/Shared/preprocessor.include.ab3"
00008D90 <preprocessor.include.ab3@520> XINCLUDE "/Shared/preprocessor.include.ab3"
00008DF2 <preprocessor.include.ab3@521> XINCLUDE "/Shared/preprocessor.include.ab3"
00008E0C <preprocessor.include.ab3@522> XINCLUDE "/Shared/preprocessor.include.ab3"
00008E26 <preprocessor.include.ab3@526> XINCLUDE "/Shared/preprocessor.include.ab3"
00008E30 <preprocessor.include.ab3@527> XINCLUDE "/Shared/preprocessor.include.ab3"
00008E6E <preprocessor.include.ab3@528> XINCLUDE "/Shared/preprocessor.include.ab3"
00008E72 <preprocessor.include.ab3@529> XINCLUDE "/Shared/preprocessor.include.ab3"
00008E7C <preprocessor.include.ab3@531> XINCLUDE "/Shared/preprocessor.include.ab3"
00008EAA <preprocessor.include.ab3@532> XINCLUDE "/Shared/preprocessor.include.ab3"
00008ECA <preprocessor.include.ab3@533> XINCLUDE "/Shared/preprocessor.include.ab3"
00008EE2 <preprocessor.include.ab3@534> XINCLUDE "/Shared/preprocessor.include.ab3"
00008F40 <preprocessor.include.ab3@535> XINCLUDE "/Shared/preprocessor.include.ab3"
00008F6C <preprocessor.include.ab3@536> XINCLUDE "/Shared/preprocessor.include.ab3"
00008F7E <preprocessor.include.ab3@537> XINCLUDE "/Shared/preprocessor.include.ab3"
00008F8E <preprocessor.include.ab3@538> XINCLUDE "/Shared/preprocessor.include.ab3"
00008FA6 <preprocessor.include.ab3@539> XINCLUDE "/Shared/preprocessor.include.ab3"
00008FAC <preprocessor.include.ab3@541> XINCLUDE "/Shared/preprocessor.include.ab3"
00008FE6 <preprocessor.include.ab3@542> XINCLUDE "/Shared/preprocessor.include.ab3"
00008FF0 <preprocessor.include.ab3@544> XINCLUDE "/Shared/preprocessor.include.ab3"
00008FF6 <preprocessor.include.ab3@545> XINCLUDE "/Shared/preprocessor.include.ab3"
00009000 <preprocessor.include.ab3@546> XINCLUDE "/Shared/preprocessor.include.ab3"
00009012 <preprocessor.include.ab3@547> XINCLUDE "/Shared/preprocessor.include.ab3"
00009012 <AmiBlitz3.ab3@87> XINCLUDE "/Shared/preprocessor.include.ab3"
00009012 <logging.include.ab3@1> XINCLUDE "PE/logging.include.ab3"
00009012 <PE_Tools.include.ab3@1> XINCLUDE "PE/logging.include.ab3"
00009036 <PE_Tools.include.ab3@75> XINCLUDE "PE/logging.include.ab3"
0000903E <PE_Tools.include.ab3@84> XINCLUDE "PE/logging.include.ab3"
0000906C <PE_Tools.include.ab3@85> XINCLUDE "PE/logging.include.ab3"
0000909A <PE_Tools.include.ab3@86> XINCLUDE "PE/logging.include.ab3"
0000910A <PE_Tools.include.ab3@87> XINCLUDE "PE/logging.include.ab3"
00009118 <PE_Tools.include.ab3@88> XINCLUDE "PE/logging.include.ab3"
00009168 <PE_Tools.include.ab3@89> XINCLUDE "PE/logging.include.ab3"
00009168 <logging.include.ab3@11> XINCLUDE "PE/logging.include.ab3"
00009168 <file.include.ab3@1> XINCLUDE "PE/logging.include.ab3"
00009168 <asl.include.ab3@1> XINCLUDE "PE/logging.include.ab3"
0000918C <asl.include.ab3@94> XINCLUDE "PE/logging.include.ab3"
000091B4 <asl.include.ab3@95> XINCLUDE "PE/logging.include.ab3"
000091D8 <asl.include.ab3@96> XINCLUDE "PE/logging.include.ab3"
00009206 <asl.include.ab3@295> XINCLUDE "PE/logging.include.ab3"
00009424 <asl.include.ab3@297> XINCLUDE "PE/logging.include.ab3"
00009452 <asl.include.ab3@299> XINCLUDE "PE/logging.include.ab3"
0000947E <asl.include.ab3@301> XINCLUDE "PE/logging.include.ab3"
000094BA <asl.include.ab3@302> XINCLUDE "PE/logging.include.ab3"
000094E6 <asl.include.ab3@303> XINCLUDE "PE/logging.include.ab3"
00009512 <asl.include.ab3@304> XINCLUDE "PE/logging.include.ab3"
0000953E <asl.include.ab3@305> XINCLUDE "PE/logging.include.ab3"
0000956A <asl.include.ab3@306> XINCLUDE "PE/logging.include.ab3"
00009596 <asl.include.ab3@307> XINCLUDE "PE/logging.include.ab3"
000095C2 <asl.include.ab3@308> XINCLUDE "PE/logging.include.ab3"
000095EE <asl.include.ab3@309> XINCLUDE "PE/logging.include.ab3"
0000961A <asl.include.ab3@310> XINCLUDE "PE/logging.include.ab3"
000096A4 <asl.include.ab3@312> XINCLUDE "PE/logging.include.ab3"
0000972E <asl.include.ab3@313> XINCLUDE "PE/logging.include.ab3"
000097CC <asl.include.ab3@314> XINCLUDE "PE/logging.include.ab3"
00009816 <asl.include.ab3@315> XINCLUDE "PE/logging.include.ab3"
00009856 <asl.include.ab3@316> XINCLUDE "PE/logging.include.ab3"
0000985C <asl.include.ab3@317> XINCLUDE "PE/logging.include.ab3"
000098A6 <asl.include.ab3@320> XINCLUDE "PE/logging.include.ab3"
000098E6 <asl.include.ab3@321> XINCLUDE "PE/logging.include.ab3"
00009910 <asl.include.ab3@322> XINCLUDE "PE/logging.include.ab3"
00009916 <asl.include.ab3@323> XINCLUDE "PE/logging.include.ab3"
00009940 <asl.include.ab3@324> XINCLUDE "PE/logging.include.ab3"
0000996A <asl.include.ab3@326> XINCLUDE "PE/logging.include.ab3"
00009994 <asl.include.ab3@328> XINCLUDE "PE/logging.include.ab3"
0000999E <asl.include.ab3@329> XINCLUDE "PE/logging.include.ab3"
000099BC <asl.include.ab3@330> XINCLUDE "PE/logging.include.ab3"
000099DE <asl.include.ab3@331> XINCLUDE "PE/logging.include.ab3"
00009A0C <asl.include.ab3@332> XINCLUDE "PE/logging.include.ab3"
00009A3A <asl.include.ab3@333> XINCLUDE "PE/logging.include.ab3"
00009A68 <asl.include.ab3@334> XINCLUDE "PE/logging.include.ab3"
00009AAE <asl.include.ab3@337> XINCLUDE "PE/logging.include.ab3"
00009AF4 <asl.include.ab3@338> XINCLUDE "PE/logging.include.ab3"
00009B3A <asl.include.ab3@339> XINCLUDE "PE/logging.include.ab3"
00009B72 <asl.include.ab3@341> XINCLUDE "PE/logging.include.ab3"
00009C70 <asl.include.ab3@342> XINCLUDE "PE/logging.include.ab3"
00009C8E <asl.include.ab3@344> XINCLUDE "PE/logging.include.ab3"
00009C98 <asl.include.ab3@346> XINCLUDE "PE/logging.include.ab3"
00009CBE <asl.include.ab3@347> XINCLUDE "PE/logging.include.ab3"
00009CD0 <asl.include.ab3@349> XINCLUDE "PE/logging.include.ab3"
00009CFE <asl.include.ab3@350> XINCLUDE "PE/logging.include.ab3"
00009D26 <asl.include.ab3@351> XINCLUDE "PE/logging.include.ab3"
00009D38 <asl.include.ab3@352> XINCLUDE "PE/logging.include.ab3"
00009D8E <asl.include.ab3@353> XINCLUDE "PE/logging.include.ab3"
00009DC4 <asl.include.ab3@354> XINCLUDE "PE/logging.include.ab3"
00009DD4 <asl.include.ab3@356> XINCLUDE "PE/logging.include.ab3"
00009DDA <asl.include.ab3@357> XINCLUDE "PE/logging.include.ab3"
00009DEC <asl.include.ab3@358> XINCLUDE "PE/logging.include.ab3"
00009DF6 <asl.include.ab3@359> XINCLUDE "PE/logging.include.ab3"
00009E30 <asl.include.ab3@360> XINCLUDE "PE/logging.include.ab3"
00009E36 <asl.include.ab3@361> XINCLUDE "PE/logging.include.ab3"
00009E8E <asl.include.ab3@362> XINCLUDE "PE/logging.include.ab3"
00009EAC <asl.include.ab3@364> XINCLUDE "PE/logging.include.ab3"
00009EB2 <asl.include.ab3@367> XINCLUDE "PE/logging.include.ab3"
00009EC2 <asl.include.ab3@370> XINCLUDE "PE/logging.include.ab3"
00009ED2 <asl.include.ab3@371> XINCLUDE "PE/logging.include.ab3"
00009EE2 <asl.include.ab3@372> XINCLUDE "PE/logging.include.ab3"
00009EF2 <asl.include.ab3@373> XINCLUDE "PE/logging.include.ab3"
00009F02 <asl.include.ab3@375> XINCLUDE "PE/logging.include.ab3"
00009F0C <asl.include.ab3@377> XINCLUDE "PE/logging.include.ab3"
00009F20 <asl.include.ab3@378> XINCLUDE "PE/logging.include.ab3"
00009F36 <asl.include.ab3@394> XINCLUDE "PE/logging.include.ab3"
00009F5E <asl.include.ab3@396> XINCLUDE "PE/logging.include.ab3"
00009F68 <asl.include.ab3@397> XINCLUDE "PE/logging.include.ab3"
00009F7A <asl.include.ab3@398> XINCLUDE "PE/logging.include.ab3"
00009FB4 <asl.include.ab3@399> XINCLUDE "PE/logging.include.ab3"
00009FBE <asl.include.ab3@400> XINCLUDE "PE/logging.include.ab3"
00009FE8 <asl.include.ab3@402> XINCLUDE "PE/logging.include.ab3"
0000A000 <asl.include.ab3@403> XINCLUDE "PE/logging.include.ab3"
0000A052 <asl.include.ab3@439> XINCLUDE "PE/logging.include.ab3"
0000A080 <asl.include.ab3@441> XINCLUDE "PE/logging.include.ab3"
0000A112 <asl.include.ab3@442> XINCLUDE "PE/logging.include.ab3"
0000A158 <asl.include.ab3@443> XINCLUDE "PE/logging.include.ab3"
0000A1EA <asl.include.ab3@444> XINCLUDE "PE/logging.include.ab3"
0000A204 <asl.include.ab3@445> XINCLUDE "PE/logging.include.ab3"
0000A204 <file.include.ab3@57> XINCLUDE "PE/logging.include.ab3"
0000A21A <file.include.ab3@66> XINCLUDE "PE/logging.include.ab3"
0000A230 <file.include.ab3@67> XINCLUDE "PE/logging.include.ab3"
0000A246 <file.include.ab3@68> XINCLUDE "PE/logging.include.ab3"
0000A25C <file.include.ab3@70> XINCLUDE "PE/logging.include.ab3"
0000A268 <file.include.ab3@72> XINCLUDE "PE/logging.include.ab3"
0000A274 <file.include.ab3@73> XINCLUDE "PE/logging.include.ab3"
0000A280 <file.include.ab3@74> XINCLUDE "PE/logging.include.ab3"
0000A28C <file.include.ab3@75> XINCLUDE "PE/logging.include.ab3"
0000A2B4 <file.include.ab3@77> XINCLUDE "PE/logging.include.ab3"
0000A2DC <file.include.ab3@78> XINCLUDE "PE/logging.include.ab3"
0000A304 <file.include.ab3@79> XINCLUDE "PE/logging.include.ab3"
0000A328 <file.include.ab3@109> XINCLUDE "PE/logging.include.ab3"
0000A34C <file.include.ab3@110> XINCLUDE "PE/logging.include.ab3"
0000A366 <file.include.ab3@156> XINCLUDE "PE/logging.include.ab3"
0000A376 <file.include.ab3@157> XINCLUDE "PE/logging.include.ab3"
0000A378 <file.include.ab3@158> XINCLUDE "PE/logging.include.ab3"
0000A37A <file.include.ab3@159> XINCLUDE "PE/logging.include.ab3"
0000A37C <file.include.ab3@160> XINCLUDE "PE/logging.include.ab3"
0000A37E <file.include.ab3@161> XINCLUDE "PE/logging.include.ab3"
0000A380 <file.include.ab3@162> XINCLUDE "PE/logging.include.ab3"
0000A384 <file.include.ab3@163> XINCLUDE "PE/logging.include.ab3"
0000A388 <file.include.ab3@164> XINCLUDE "PE/logging.include.ab3"
0000A38C <file.include.ab3@165> XINCLUDE "PE/logging.include.ab3"
0000A38E <file.include.ab3@166> XINCLUDE "PE/logging.include.ab3"
0000A390 <file.include.ab3@167> XINCLUDE "PE/logging.include.ab3"
0000A392 <file.include.ab3@168> XINCLUDE "PE/logging.include.ab3"
0000A394 <file.include.ab3@169> XINCLUDE "PE/logging.include.ab3"
0000A396 <file.include.ab3@170> XINCLUDE "PE/logging.include.ab3"
0000A398 <file.include.ab3@171> XINCLUDE "PE/logging.include.ab3"
0000A39A <file.include.ab3@172> XINCLUDE "PE/logging.include.ab3"
0000A3A4 <file.include.ab3@173> XINCLUDE "PE/logging.include.ab3"
0000A3AA <file.include.ab3@174> XINCLUDE "PE/logging.include.ab3"
0000A3C4 <file.include.ab3@215> XINCLUDE "PE/logging.include.ab3"
0000A3E2 <file.include.ab3@217> XINCLUDE "PE/logging.include.ab3"
0000A3E8 <file.include.ab3@218> XINCLUDE "PE/logging.include.ab3"
0000A402 <file.include.ab3@237> XINCLUDE "PE/logging.include.ab3"
0000A41E <file.include.ab3@239> XINCLUDE "PE/logging.include.ab3"
0000A444 <file.include.ab3@240> XINCLUDE "PE/logging.include.ab3"
0000A464 <file.include.ab3@241> XINCLUDE "PE/logging.include.ab3"
0000A46E <file.include.ab3@242> XINCLUDE "PE/logging.include.ab3"
0000A49A <file.include.ab3@243> XINCLUDE "PE/logging.include.ab3"
0000A4BC <file.include.ab3@244> XINCLUDE "PE/logging.include.ab3"
0000A4D6 <file.include.ab3@245> XINCLUDE "PE/logging.include.ab3"
0000A4DC <file.include.ab3@248> XINCLUDE "PE/logging.include.ab3"
0000A516 <file.include.ab3@249> XINCLUDE "PE/logging.include.ab3"
0000A534 <file.include.ab3@251> XINCLUDE "PE/logging.include.ab3"
0000A53A <file.include.ab3@252> XINCLUDE "PE/logging.include.ab3"
0000A558 <file.include.ab3@271> XINCLUDE "PE/logging.include.ab3"
0000A55E <file.include.ab3@273> XINCLUDE "PE/logging.include.ab3"
0000A580 <file.include.ab3@274> XINCLUDE "PE/logging.include.ab3"
0000A5A0 <file.include.ab3@275> XINCLUDE "PE/logging.include.ab3"
0000A5D8 <file.include.ab3@276> XINCLUDE "PE/logging.include.ab3"
0000A5F4 <file.include.ab3@277> XINCLUDE "PE/logging.include.ab3"
0000A5FA <file.include.ab3@278> XINCLUDE "PE/logging.include.ab3"
0000A600 <file.include.ab3@279> XINCLUDE "PE/logging.include.ab3"
0000A606 <file.include.ab3@281> XINCLUDE "PE/logging.include.ab3"
0000A60C <file.include.ab3@282> XINCLUDE "PE/logging.include.ab3"
0000A628 <file.include.ab3@283> XINCLUDE "PE/logging.include.ab3"
0000A674 <file.include.ab3@285> XINCLUDE "PE/logging.include.ab3"
0000A67A <file.include.ab3@286> XINCLUDE "PE/logging.include.ab3"
0000A6B4 <file.include.ab3@287> XINCLUDE "PE/logging.include.ab3"
0000A6C0 <file.include.ab3@288> XINCLUDE "PE/logging.include.ab3"
0000A6DC <file.include.ab3@289> XINCLUDE "PE/logging.include.ab3"
0000A6E2 <file.include.ab3@291> XINCLUDE "PE/logging.include.ab3"
0000A71C <file.include.ab3@292> XINCLUDE "PE/logging.include.ab3"
0000A726 <file.include.ab3@296> XINCLUDE "PE/logging.include.ab3"
0000A72C <file.include.ab3@297> XINCLUDE "PE/logging.include.ab3"
0000A74A <file.include.ab3@316> XINCLUDE "PE/logging.include.ab3"
0000A778 <file.include.ab3@318> XINCLUDE "PE/logging.include.ab3"
0000A77E <file.include.ab3@319> XINCLUDE "PE/logging.include.ab3"
0000A794 <file.include.ab3@335> XINCLUDE "PE/logging.include.ab3"
0000A79C <file.include.ab3@337> XINCLUDE "PE/logging.include.ab3"
0000A7F8 <file.include.ab3@338> XINCLUDE "PE/logging.include.ab3"
0000A806 <file.include.ab3@339> XINCLUDE "PE/logging.include.ab3"
0000A80C <file.include.ab3@340> XINCLUDE "PE/logging.include.ab3"
0000A83E <file.include.ab3@341> XINCLUDE "PE/logging.include.ab3"
0000A848 <file.include.ab3@342> XINCLUDE "PE/logging.include.ab3"
0000A84E <file.include.ab3@343> XINCLUDE "PE/logging.include.ab3"
0000A868 <file.include.ab3@397> XINCLUDE "PE/logging.include.ab3"
0000A87A <file.include.ab3@399> XINCLUDE "PE/logging.include.ab3"
0000A8D8 <file.include.ab3@400> XINCLUDE "PE/logging.include.ab3"
0000A912 <file.include.ab3@401> XINCLUDE "PE/logging.include.ab3"
0000A94C <file.include.ab3@402> XINCLUDE "PE/logging.include.ab3"
0000A96A <file.include.ab3@403> XINCLUDE "PE/logging.include.ab3"
0000A988 <file.include.ab3@404> XINCLUDE "PE/logging.include.ab3"
0000A99E <file.include.ab3@405> XINCLUDE "PE/logging.include.ab3"
0000A9BA <file.include.ab3@406> XINCLUDE "PE/logging.include.ab3"
0000A9D4 <file.include.ab3@407> XINCLUDE "PE/logging.include.ab3"
0000AA52 <file.include.ab3@408> XINCLUDE "PE/logging.include.ab3"
0000AA64 <file.include.ab3@410> XINCLUDE "PE/logging.include.ab3"
0000AA7A <file.include.ab3@422> XINCLUDE "PE/logging.include.ab3"
0000AAA4 <file.include.ab3@424> XINCLUDE "PE/logging.include.ab3"
0000AAAE <file.include.ab3@425> XINCLUDE "PE/logging.include.ab3"
0000AABE <file.include.ab3@426> XINCLUDE "PE/logging.include.ab3"
0000AAC2 <file.include.ab3@427> XINCLUDE "PE/logging.include.ab3"
0000AAF0 <file.include.ab3@428> XINCLUDE "PE/logging.include.ab3"
0000AB0A <file.include.ab3@447> XINCLUDE "PE/logging.include.ab3"
0000AB1C <file.include.ab3@449> XINCLUDE "PE/logging.include.ab3"
0000AB3C <file.include.ab3@450> XINCLUDE "PE/logging.include.ab3"
0000AB52 <file.include.ab3@451> XINCLUDE "PE/logging.include.ab3"
0000AB8A <file.include.ab3@452> XINCLUDE "PE/logging.include.ab3"
0000ABB4 <file.include.ab3@453> XINCLUDE "PE/logging.include.ab3"
0000ABDE <file.include.ab3@456> XINCLUDE "PE/logging.include.ab3"
0000ABF6 <file.include.ab3@457> XINCLUDE "PE/logging.include.ab3"
0000AC0C <file.include.ab3@525> XINCLUDE "PE/logging.include.ab3"
0000AC54 <file.include.ab3@527> XINCLUDE "PE/logging.include.ab3"
0000AC74 <file.include.ab3@528> XINCLUDE "PE/logging.include.ab3"
0000AC7C <file.include.ab3@529> XINCLUDE "PE/logging.include.ab3"
0000ACBA <file.include.ab3@568> XINCLUDE "PE/logging.include.ab3"
0000ACC6 <file.include.ab3@570> XINCLUDE "PE/logging.include.ab3"
0000ACD0 <file.include.ab3@571> XINCLUDE "PE/logging.include.ab3"
0000ACE2 <file.include.ab3@572> XINCLUDE "PE/logging.include.ab3"
0000ACE8 <file.include.ab3@573> XINCLUDE "PE/logging.include.ab3"
0000ACF6 <file.include.ab3@574> XINCLUDE "PE/logging.include.ab3"
0000AD1E <file.include.ab3@575> XINCLUDE "PE/logging.include.ab3"
0000AD32 <file.include.ab3@576> XINCLUDE "PE/logging.include.ab3"
0000AD5A <file.include.ab3@577> XINCLUDE "PE/logging.include.ab3"
0000AD6E <file.include.ab3@578> XINCLUDE "PE/logging.include.ab3"
0000AD96 <file.include.ab3@579> XINCLUDE "PE/logging.include.ab3"
0000ADAA <file.include.ab3@580> XINCLUDE "PE/logging.include.ab3"
0000ADD2 <file.include.ab3@581> XINCLUDE "PE/logging.include.ab3"
0000ADD4 <file.include.ab3@582> XINCLUDE "PE/logging.include.ab3"
0000ADF8 <file.include.ab3@584> XINCLUDE "PE/logging.include.ab3"
0000AE30 <file.include.ab3@586> XINCLUDE "PE/logging.include.ab3"
0000AEBA <file.include.ab3@587> XINCLUDE "PE/logging.include.ab3"
0000AEE2 <file.include.ab3@588> XINCLUDE "PE/logging.include.ab3"
0000AF12 <file.include.ab3@589> XINCLUDE "PE/logging.include.ab3"
0000AF4A <file.include.ab3@593> XINCLUDE "PE/logging.include.ab3"
0000AFA2 <file.include.ab3@594> XINCLUDE "PE/logging.include.ab3"
0000AFFA <file.include.ab3@595> XINCLUDE "PE/logging.include.ab3"
0000B07A <file.include.ab3@597> XINCLUDE "PE/logging.include.ab3"
0000B0AE <file.include.ab3@598> XINCLUDE "PE/logging.include.ab3"
0000B0E2 <file.include.ab3@599> XINCLUDE "PE/logging.include.ab3"
0000B0E8 <file.include.ab3@600> XINCLUDE "PE/logging.include.ab3"
0000B0F6 <file.include.ab3@601> XINCLUDE "PE/logging.include.ab3"
0000B12A <file.include.ab3@602> XINCLUDE "PE/logging.include.ab3"
0000B152 <file.include.ab3@603> XINCLUDE "PE/logging.include.ab3"
0000B20A <file.include.ab3@604> XINCLUDE "PE/logging.include.ab3"
0000B28A <file.include.ab3@605> XINCLUDE "PE/logging.include.ab3"
0000B2BE <file.include.ab3@606> XINCLUDE "PE/logging.include.ab3"
0000B2DE <file.include.ab3@608> XINCLUDE "PE/logging.include.ab3"
0000B2E4 <file.include.ab3@609> XINCLUDE "PE/logging.include.ab3"
0000B2EA <file.include.ab3@610> XINCLUDE "PE/logging.include.ab3"
0000B3BA <file.include.ab3@611> XINCLUDE "PE/logging.include.ab3"
0000B3CE <file.include.ab3@614> XINCLUDE "PE/logging.include.ab3"
0000B486 <file.include.ab3@615> XINCLUDE "PE/logging.include.ab3"
0000B506 <file.include.ab3@616> XINCLUDE "PE/logging.include.ab3"
0000B5F6 <file.include.ab3@617> XINCLUDE "PE/logging.include.ab3"
0000B600 <file.include.ab3@618> XINCLUDE "PE/logging.include.ab3"
0000B634 <file.include.ab3@619> XINCLUDE "PE/logging.include.ab3"
0000B654 <file.include.ab3@620> XINCLUDE "PE/logging.include.ab3"
0000B65A <file.include.ab3@621> XINCLUDE "PE/logging.include.ab3"
0000B660 <file.include.ab3@622> XINCLUDE "PE/logging.include.ab3"
0000B730 <file.include.ab3@623> XINCLUDE "PE/logging.include.ab3"
0000B744 <file.include.ab3@627> XINCLUDE "PE/logging.include.ab3"
0000B778 <file.include.ab3@628> XINCLUDE "PE/logging.include.ab3"
0000B7A0 <file.include.ab3@629> XINCLUDE "PE/logging.include.ab3"
0000B858 <file.include.ab3@630> XINCLUDE "PE/logging.include.ab3"
0000B8D8 <file.include.ab3@631> XINCLUDE "PE/logging.include.ab3"
0000B90C <file.include.ab3@632> XINCLUDE "PE/logging.include.ab3"
0000B92C <file.include.ab3@635> XINCLUDE "PE/logging.include.ab3"
0000B932 <file.include.ab3@636> XINCLUDE "PE/logging.include.ab3"
0000B938 <file.include.ab3@637> XINCLUDE "PE/logging.include.ab3"
0000BA08 <file.include.ab3@638> XINCLUDE "PE/logging.include.ab3"
0000BA1C <file.include.ab3@641> XINCLUDE "PE/logging.include.ab3"
0000BAD4 <file.include.ab3@642> XINCLUDE "PE/logging.include.ab3"
0000BB54 <file.include.ab3@643> XINCLUDE "PE/logging.include.ab3"
0000BB88 <file.include.ab3@644> XINCLUDE "PE/logging.include.ab3"
0000BBA8 <file.include.ab3@645> XINCLUDE "PE/logging.include.ab3"
0000BBAE <file.include.ab3@646> XINCLUDE "PE/logging.include.ab3"
0000BBB4 <file.include.ab3@647> XINCLUDE "PE/logging.include.ab3"
0000BC84 <file.include.ab3@648> XINCLUDE "PE/logging.include.ab3"
0000BC8A <file.include.ab3@651> XINCLUDE "PE/logging.include.ab3"
0000BCC4 <file.include.ab3@652> XINCLUDE "PE/logging.include.ab3"
0000BCC6 <file.include.ab3@653> XINCLUDE "PE/logging.include.ab3"
0000BCCC <file.include.ab3@655> XINCLUDE "PE/logging.include.ab3"
0000BD64 <file.include.ab3@656> XINCLUDE "PE/logging.include.ab3"
0000BD76 <file.include.ab3@659> XINCLUDE "PE/logging.include.ab3"
0000BD8C <file.include.ab3@660> XINCLUDE "PE/logging.include.ab3"
0000BDF6 <file.include.ab3@661> XINCLUDE "PE/logging.include.ab3"
0000BE60 <file.include.ab3@662> XINCLUDE "PE/logging.include.ab3"
0000BE7A <file.include.ab3@663> XINCLUDE "PE/logging.include.ab3"
0000BE96 <file.include.ab3@664> XINCLUDE "PE/logging.include.ab3"
0000BEB4 <file.include.ab3@665> XINCLUDE "PE/logging.include.ab3"
0000BECE <file.include.ab3@666> XINCLUDE "PE/logging.include.ab3"
0000BED8 <file.include.ab3@668> XINCLUDE "PE/logging.include.ab3"
0000BEF4 <file.include.ab3@669> XINCLUDE "PE/logging.include.ab3"
0000BF16 <file.include.ab3@805> XINCLUDE "PE/logging.include.ab3"
0000BF1C <file.include.ab3@807> XINCLUDE "PE/logging.include.ab3"
0000BF42 <file.include.ab3@808> XINCLUDE "PE/logging.include.ab3"
0000BF5E <file.include.ab3@809> XINCLUDE "PE/logging.include.ab3"
0000BF70 <file.include.ab3@810> XINCLUDE "PE/logging.include.ab3"
0000BFCE <file.include.ab3@811> XINCLUDE "PE/logging.include.ab3"
0000C006 <file.include.ab3@812> XINCLUDE "PE/logging.include.ab3"
0000C00C <file.include.ab3@813> XINCLUDE "PE/logging.include.ab3"
0000C054 <file.include.ab3@814> XINCLUDE "PE/logging.include.ab3"
0000C06E <file.include.ab3@815> XINCLUDE "PE/logging.include.ab3"
0000C07C <file.include.ab3@818> XINCLUDE "PE/logging.include.ab3"
0000C082 <file.include.ab3@819> XINCLUDE "PE/logging.include.ab3"
0000C088 <file.include.ab3@820> XINCLUDE "PE/logging.include.ab3"
0000C09A <file.include.ab3@821> XINCLUDE "PE/logging.include.ab3"
0000C186 <file.include.ab3@822> XINCLUDE "PE/logging.include.ab3"
0000C18C <file.include.ab3@823> XINCLUDE "PE/logging.include.ab3"
0000C1D2 <file.include.ab3@824> XINCLUDE "PE/logging.include.ab3"
0000C1DE <file.include.ab3@825> XINCLUDE "PE/logging.include.ab3"
0000C244 <file.include.ab3@826> XINCLUDE "PE/logging.include.ab3"
0000C28A <file.include.ab3@827> XINCLUDE "PE/logging.include.ab3"
0000C2D2 <file.include.ab3@830> XINCLUDE "PE/logging.include.ab3"
0000C33A <file.include.ab3@831> XINCLUDE "PE/logging.include.ab3"
0000C340 <file.include.ab3@832> XINCLUDE "PE/logging.include.ab3"
0000C37A <file.include.ab3@833> XINCLUDE "PE/logging.include.ab3"
0000C380 <file.include.ab3@835> XINCLUDE "PE/logging.include.ab3"
0000C3E2 <file.include.ab3@836> XINCLUDE "PE/logging.include.ab3"
0000C3EC <file.include.ab3@838> XINCLUDE "PE/logging.include.ab3"
0000C400 <file.include.ab3@839> XINCLUDE "PE/logging.include.ab3"
0000C41A <file.include.ab3@841> XINCLUDE "PE/logging.include.ab3"
0000C420 <file.include.ab3@843> XINCLUDE "PE/logging.include.ab3"
0000C446 <file.include.ab3@844> XINCLUDE "PE/logging.include.ab3"
0000C462 <file.include.ab3@845> XINCLUDE "PE/logging.include.ab3"
0000C4C0 <file.include.ab3@846> XINCLUDE "PE/logging.include.ab3"
0000C4C4 <file.include.ab3@849> XINCLUDE "PE/logging.include.ab3"
0000C4E6 <file.include.ab3@867> XINCLUDE "PE/logging.include.ab3"
0000C4EC <file.include.ab3@869> XINCLUDE "PE/logging.include.ab3"
0000C508 <file.include.ab3@870> XINCLUDE "PE/logging.include.ab3"
0000C528 <file.include.ab3@871> XINCLUDE "PE/logging.include.ab3"
0000C566 <file.include.ab3@872> XINCLUDE "PE/logging.include.ab3"
0000C5B4 <file.include.ab3@873> XINCLUDE "PE/logging.include.ab3"
0000C5EA <file.include.ab3@874> XINCLUDE "PE/logging.include.ab3"
0000C5F0 <file.include.ab3@875> XINCLUDE "PE/logging.include.ab3"
0000C5F6 <file.include.ab3@876> XINCLUDE "PE/logging.include.ab3"
0000C626 <file.include.ab3@877> XINCLUDE "PE/logging.include.ab3"
0000C62C <file.include.ab3@878> XINCLUDE "PE/logging.include.ab3"
0000C632 <file.include.ab3@880> XINCLUDE "PE/logging.include.ab3"
0000C644 <file.include.ab3@881> XINCLUDE "PE/logging.include.ab3"
0000C6A2 <file.include.ab3@882> XINCLUDE "PE/logging.include.ab3"
0000C6DA <file.include.ab3@883> XINCLUDE "PE/logging.include.ab3"
0000C6E0 <file.include.ab3@884> XINCLUDE "PE/logging.include.ab3"
0000C728 <file.include.ab3@885> XINCLUDE "PE/logging.include.ab3"
0000C742 <file.include.ab3@886> XINCLUDE "PE/logging.include.ab3"
0000C750 <file.include.ab3@888> XINCLUDE "PE/logging.include.ab3"
0000C756 <file.include.ab3@889> XINCLUDE "PE/logging.include.ab3"
0000C75C <file.include.ab3@890> XINCLUDE "PE/logging.include.ab3"
0000C76E <file.include.ab3@891> XINCLUDE "PE/logging.include.ab3"
0000C774 <file.include.ab3@892> XINCLUDE "PE/logging.include.ab3"
0000C77A <file.include.ab3@893> XINCLUDE "PE/logging.include.ab3"
0000C7D8 <file.include.ab3@894> XINCLUDE "PE/logging.include.ab3"
0000C820 <file.include.ab3@897> XINCLUDE "PE/logging.include.ab3"
0000C82A <file.include.ab3@900> XINCLUDE "PE/logging.include.ab3"
0000C830 <file.include.ab3@901> XINCLUDE "PE/logging.include.ab3"
0000C84A <file.include.ab3@955> XINCLUDE "PE/logging.include.ab3"
0000C850 <file.include.ab3@957> XINCLUDE "PE/logging.include.ab3"
0000C898 <file.include.ab3@958> XINCLUDE "PE/logging.include.ab3"
0000C8D6 <file.include.ab3@959> XINCLUDE "PE/logging.include.ab3"
0000C8E0 <file.include.ab3@960> XINCLUDE "PE/logging.include.ab3"
0000C8E6 <file.include.ab3@961> XINCLUDE "PE/logging.include.ab3"
0000C90C <file.include.ab3@1108> XINCLUDE "PE/logging.include.ab3"
0000C912 <file.include.ab3@1110> XINCLUDE "PE/logging.include.ab3"
0000C938 <file.include.ab3@1111> XINCLUDE "PE/logging.include.ab3"
0000C998 <file.include.ab3@1112> XINCLUDE "PE/logging.include.ab3"
0000C9B2 <file.include.ab3@1113> XINCLUDE "PE/logging.include.ab3"
0000C9BC <file.include.ab3@1114> XINCLUDE "PE/logging.include.ab3"
0000C9D6 <file.include.ab3@1115> XINCLUDE "PE/logging.include.ab3"
0000C9E0 <file.include.ab3@1116> XINCLUDE "PE/logging.include.ab3"
0000C9F8 <file.include.ab3@1117> XINCLUDE "PE/logging.include.ab3"
0000CA28 <file.include.ab3@1118> XINCLUDE "PE/logging.include.ab3"
0000CA44 <file.include.ab3@1119> XINCLUDE "PE/logging.include.ab3"
0000CA52 <file.include.ab3@1120> XINCLUDE "PE/logging.include.ab3"
0000CA58 <file.include.ab3@1123> XINCLUDE "PE/logging.include.ab3"
0000CA92 <file.include.ab3@1124> XINCLUDE "PE/logging.include.ab3"
0000CA9C <file.include.ab3@1126> XINCLUDE "PE/logging.include.ab3"
0000CAA2 <file.include.ab3@1127> XINCLUDE "PE/logging.include.ab3"
0000CAC0 <file.include.ab3@1148> XINCLUDE "PE/logging.include.ab3"
0000CAC6 <file.include.ab3@1150> XINCLUDE "PE/logging.include.ab3"
0000CAD8 <file.include.ab3@1151> XINCLUDE "PE/logging.include.ab3"
0000CAE6 <file.include.ab3@1152> XINCLUDE "PE/logging.include.ab3"
0000CB04 <file.include.ab3@1153> XINCLUDE "PE/logging.include.ab3"
0000CB3A <file.include.ab3@1154> XINCLUDE "PE/logging.include.ab3"
0000CB4C <file.include.ab3@1155> XINCLUDE "PE/logging.include.ab3"
0000CB96 <file.include.ab3@1156> XINCLUDE "PE/logging.include.ab3"
0000CC80 <file.include.ab3@1157> XINCLUDE "PE/logging.include.ab3"
0000CC9E <file.include.ab3@1158> XINCLUDE "PE/logging.include.ab3"
0000CCC4 <file.include.ab3@1160> XINCLUDE "PE/logging.include.ab3"
0000CCE0 <file.include.ab3@1161> XINCLUDE "PE/logging.include.ab3"
0000CD0C <file.include.ab3@1162> XINCLUDE "PE/logging.include.ab3"
0000CD16 <file.include.ab3@1163> XINCLUDE "PE/logging.include.ab3"
0000CD44 <file.include.ab3@1164> XINCLUDE "PE/logging.include.ab3"
0000CD5E <file.include.ab3@1165> XINCLUDE "PE/logging.include.ab3"
0000CD7A <file.include.ab3@1166> XINCLUDE "PE/logging.include.ab3"
0000CD80 <file.include.ab3@1167> XINCLUDE "PE/logging.include.ab3"
0000CDBA <file.include.ab3@1168> XINCLUDE "PE/logging.include.ab3"
0000CDC0 <file.include.ab3@1170> XINCLUDE "PE/logging.include.ab3"
0000CDC6 <file.include.ab3@1171> XINCLUDE "PE/logging.include.ab3"
0000CDCC <file.include.ab3@1173> XINCLUDE "PE/logging.include.ab3"
0000CE6C <file.include.ab3@1174> XINCLUDE "PE/logging.include.ab3"
0000CE72 <file.include.ab3@1176> XINCLUDE "PE/logging.include.ab3"
0000CF14 <file.include.ab3@1177> XINCLUDE "PE/logging.include.ab3"
0000CF1A <file.include.ab3@1179> XINCLUDE "PE/logging.include.ab3"
0000CF54 <file.include.ab3@1180> XINCLUDE "PE/logging.include.ab3"
0000CF5E <file.include.ab3@1182> XINCLUDE "PE/logging.include.ab3"
0000CF64 <file.include.ab3@1183> XINCLUDE "PE/logging.include.ab3"
0000CF7E <file.include.ab3@1245> XINCLUDE "PE/logging.include.ab3"
0000CF9C <file.include.ab3@1247> XINCLUDE "PE/logging.include.ab3"
0000CFA2 <file.include.ab3@1248> XINCLUDE "PE/logging.include.ab3"
0000CFBC <file.include.ab3@1398> XINCLUDE "PE/logging.include.ab3"
0000CFDC <file.include.ab3@1400> XINCLUDE "PE/logging.include.ab3"
0000D090 <file.include.ab3@1401> XINCLUDE "PE/logging.include.ab3"
0000D096 <file.include.ab3@1402> XINCLUDE "PE/logging.include.ab3"
0000D09C <file.include.ab3@1403> XINCLUDE "PE/logging.include.ab3"
0000D0C6 <file.include.ab3@1404> XINCLUDE "PE/logging.include.ab3"
0000D0D2 <file.include.ab3@1406> XINCLUDE "PE/logging.include.ab3"
0000D0D8 <file.include.ab3@1407> XINCLUDE "PE/logging.include.ab3"
0000D0F2 <file.include.ab3@1593> XINCLUDE "PE/logging.include.ab3"
0000D0FA <file.include.ab3@1594> XINCLUDE "PE/logging.include.ab3"
0000D102 <file.include.ab3@1595> XINCLUDE "PE/logging.include.ab3"
0000D118 <file.include.ab3@1596> XINCLUDE "PE/logging.include.ab3"
0000D130 <file.include.ab3@1597> XINCLUDE "PE/logging.include.ab3"
0000D142 <file.include.ab3@1598> XINCLUDE "PE/logging.include.ab3"
0000D14E <file.include.ab3@1599> XINCLUDE "PE/logging.include.ab3"
0000D154 <file.include.ab3@1600> XINCLUDE "PE/logging.include.ab3"
0000D15C <file.include.ab3@1601> XINCLUDE "PE/logging.include.ab3"
0000D194 <file.include.ab3@1602> XINCLUDE "PE/logging.include.ab3"
0000D1A6 <file.include.ab3@1603> XINCLUDE "PE/logging.include.ab3"
0000D1CA <file.include.ab3@1604> XINCLUDE "PE/logging.include.ab3"
0000D1DC <file.include.ab3@1605> XINCLUDE "PE/logging.include.ab3"
0000D1E8 <file.include.ab3@1606> XINCLUDE "PE/logging.include.ab3"
0000D1EE <file.include.ab3@1607> XINCLUDE "PE/logging.include.ab3"
0000D1FE <file.include.ab3@1608> XINCLUDE "PE/logging.include.ab3"
0000D21C <file.include.ab3@1613> XINCLUDE "PE/logging.include.ab3"
0000D22E <file.include.ab3@1616> XINCLUDE "PE/logging.include.ab3"
0000D27A <file.include.ab3@1617> XINCLUDE "PE/logging.include.ab3"
0000D280 <file.include.ab3@1619> XINCLUDE "PE/logging.include.ab3"
0000D2AA <file.include.ab3@1621> XINCLUDE "PE/logging.include.ab3"
0000D2C2 <file.include.ab3@1622> XINCLUDE "PE/logging.include.ab3"
0000D2F0 <file.include.ab3@1706> XINCLUDE "PE/logging.include.ab3"
0000D304 <file.include.ab3@1707> XINCLUDE "PE/logging.include.ab3"
0000D31A <file.include.ab3@1708> XINCLUDE "PE/logging.include.ab3"
0000D33A <file.include.ab3@1709> XINCLUDE "PE/logging.include.ab3"
0000D350 <file.include.ab3@1710> XINCLUDE "PE/logging.include.ab3"
0000D35A <file.include.ab3@1711> XINCLUDE "PE/logging.include.ab3"
0000D374 <file.include.ab3@1712> XINCLUDE "PE/logging.include.ab3"
0000D396 <file.include.ab3@1787> XINCLUDE "PE/logging.include.ab3"
0000D3AE <file.include.ab3@1789> XINCLUDE "PE/logging.include.ab3"
0000D3D0 <file.include.ab3@1790> XINCLUDE "PE/logging.include.ab3"
0000D3D6 <file.include.ab3@1791> XINCLUDE "PE/logging.include.ab3"
0000D408 <file.include.ab3@1811> XINCLUDE "PE/logging.include.ab3"
0000D41C <file.include.ab3@1813> XINCLUDE "PE/logging.include.ab3"
0000D434 <file.include.ab3@1814> XINCLUDE "PE/logging.include.ab3"
0000D44C <file.include.ab3@1815> XINCLUDE "PE/logging.include.ab3"
0000D46C <file.include.ab3@1816> XINCLUDE "PE/logging.include.ab3"
0000D49C <file.include.ab3@1817> XINCLUDE "PE/logging.include.ab3"
0000D4CC <file.include.ab3@1818> XINCLUDE "PE/logging.include.ab3"
0000D4DE <file.include.ab3@1819> XINCLUDE "PE/logging.include.ab3"
0000D4E6 <file.include.ab3@1820> XINCLUDE "PE/logging.include.ab3"
0000D510 <file.include.ab3@1821> XINCLUDE "PE/logging.include.ab3"
0000D51A <file.include.ab3@1823> XINCLUDE "PE/logging.include.ab3"
0000D534 <file.include.ab3@1824> XINCLUDE "PE/logging.include.ab3"
0000D54E <file.include.ab3@1841> XINCLUDE "PE/logging.include.ab3"
0000D56C <file.include.ab3@1843> XINCLUDE "PE/logging.include.ab3"
0000D58C <file.include.ab3@1844> XINCLUDE "PE/logging.include.ab3"
0000D5D6 <file.include.ab3@1845> XINCLUDE "PE/logging.include.ab3"
0000D5F0 <file.include.ab3@1846> XINCLUDE "PE/logging.include.ab3"
0000D602 <file.include.ab3@1847> XINCLUDE "PE/logging.include.ab3"
0000D638 <file.include.ab3@1848> XINCLUDE "PE/logging.include.ab3"
0000D64A <file.include.ab3@1849> XINCLUDE "PE/logging.include.ab3"
0000D652 <file.include.ab3@1850> XINCLUDE "PE/logging.include.ab3"
0000D67A <file.include.ab3@1851> XINCLUDE "PE/logging.include.ab3"
0000D680 <file.include.ab3@1853> XINCLUDE "PE/logging.include.ab3"
0000D6A8 <file.include.ab3@1854> XINCLUDE "PE/logging.include.ab3"
0000D6B8 <file.include.ab3@1856> XINCLUDE "PE/logging.include.ab3"
0000D6CC <file.include.ab3@1857> XINCLUDE "PE/logging.include.ab3"
0000D6E2 <file.include.ab3@1870> XINCLUDE "PE/logging.include.ab3"
0000D6F2 <file.include.ab3@1872> XINCLUDE "PE/logging.include.ab3"
0000D6F6 <file.include.ab3@1873> XINCLUDE "PE/logging.include.ab3"
0000D70C <file.include.ab3@1894> XINCLUDE "PE/logging.include.ab3"
0000D736 <file.include.ab3@1896> XINCLUDE "PE/logging.include.ab3"
0000D73E <file.include.ab3@1897> XINCLUDE "PE/logging.include.ab3"
0000D73E <logging.include.ab3@13> XINCLUDE "PE/logging.include.ab3"
0000D7DC <logging.include.ab3@35> XINCLUDE "PE/logging.include.ab3"
0000D7E2 <logging.include.ab3@36> XINCLUDE "PE/logging.include.ab3"
0000D7E8 <logging.include.ab3@37> XINCLUDE "PE/logging.include.ab3"
0000D7EE <logging.include.ab3@38> XINCLUDE "PE/logging.include.ab3"
0000D828 <logging.include.ab3@129> XINCLUDE "PE/logging.include.ab3"
0000D85A <logging.include.ab3@131> XINCLUDE "PE/logging.include.ab3"
0000D868 <logging.include.ab3@132> XINCLUDE "PE/logging.include.ab3"
0000D898 <logging.include.ab3@133> XINCLUDE "PE/logging.include.ab3"
0000DC08 <logging.include.ab3@134> XINCLUDE "PE/logging.include.ab3"
0000DC16 <logging.include.ab3@135> XINCLUDE "PE/logging.include.ab3"
0000DC1C <logging.include.ab3@136> XINCLUDE "PE/logging.include.ab3"
0000DEAE <logging.include.ab3@137> XINCLUDE "PE/logging.include.ab3"
0000DEC8 <logging.include.ab3@139> XINCLUDE "PE/logging.include.ab3"
0000DF02 <logging.include.ab3@142> XINCLUDE "PE/logging.include.ab3"
0000DF54 <logging.include.ab3@143> XINCLUDE "PE/logging.include.ab3"
0000DF62 <logging.include.ab3@144> XINCLUDE "PE/logging.include.ab3"
0000DFB8 <logging.include.ab3@145> XINCLUDE "PE/logging.include.ab3"
0000DFBE <logging.include.ab3@146> XINCLUDE "PE/logging.include.ab3"
0000E038 <logging.include.ab3@147> XINCLUDE "PE/logging.include.ab3"
0000E0AC <logging.include.ab3@148> XINCLUDE "PE/logging.include.ab3"
0000E0C6 <logging.include.ab3@150> XINCLUDE "PE/logging.include.ab3"
0000E0C6 <AmiBlitz3.ab3@89> XINCLUDE "PE/logging.include.ab3"
0000E0C6 <translation.include.ab3@1> XINCLUDE "translation.include.ab3"
0000E0C6 <phrasebook.include.ab3@1> XINCLUDE "translation.include.ab3"
0000E0C6 <prefixtree.include.ab3@1> XINCLUDE "translation.include.ab3"
0000E0C6 <dynamicarray.include.ab3@1> XINCLUDE "translation.include.ab3"
0000E0EE <dynamicarray.include.ab3@42> XINCLUDE "translation.include.ab3"
0000E108 <dynamicarray.include.ab3@55> XINCLUDE "translation.include.ab3"
0000E112 <dynamicarray.include.ab3@56> XINCLUDE "translation.include.ab3"
0000E124 <dynamicarray.include.ab3@57> XINCLUDE "translation.include.ab3"
0000E148 <dynamicarray.include.ab3@58> XINCLUDE "translation.include.ab3"
0000E156 <dynamicarray.include.ab3@60> XINCLUDE "translation.include.ab3"
0000E162 <dynamicarray.include.ab3@61> XINCLUDE "translation.include.ab3"
0000E166 <dynamicarray.include.ab3@63> XINCLUDE "translation.include.ab3"
0000E184 <dynamicarray.include.ab3@99> XINCLUDE "translation.include.ab3"
0000E19E <dynamicarray.include.ab3@101> XINCLUDE "translation.include.ab3"
0000E1BE <dynamicarray.include.ab3@102> XINCLUDE "translation.include.ab3"
0000E1C8 <dynamicarray.include.ab3@103> XINCLUDE "translation.include.ab3"
0000E1D6 <dynamicarray.include.ab3@104> XINCLUDE "translation.include.ab3"
0000E1E2 <dynamicarray.include.ab3@105> XINCLUDE "translation.include.ab3"
0000E1F0 <dynamicarray.include.ab3@106> XINCLUDE "translation.include.ab3"
0000E1FC <dynamicarray.include.ab3@107> XINCLUDE "translation.include.ab3"
0000E208 <dynamicarray.include.ab3@108> XINCLUDE "translation.include.ab3"
0000E21A <dynamicarray.include.ab3@109> XINCLUDE "translation.include.ab3"
0000E22A <dynamicarray.include.ab3@110> XINCLUDE "translation.include.ab3"
0000E234 <dynamicarray.include.ab3@113> XINCLUDE "translation.include.ab3"
0000E23A <dynamicarray.include.ab3@114> XINCLUDE "translation.include.ab3"
0000E254 <dynamicarray.include.ab3@425> XINCLUDE "translation.include.ab3"
0000E25E <dynamicarray.include.ab3@427> XINCLUDE "translation.include.ab3"
0000E268 <dynamicarray.include.ab3@428> XINCLUDE "translation.include.ab3"
0000E278 <dynamicarray.include.ab3@429> XINCLUDE "translation.include.ab3"
0000E282 <dynamicarray.include.ab3@430> XINCLUDE "translation.include.ab3"
0000E294 <dynamicarray.include.ab3@431> XINCLUDE "translation.include.ab3"
0000E2AA <dynamicarray.include.ab3@432> XINCLUDE "translation.include.ab3"
0000E2B4 <dynamicarray.include.ab3@433> XINCLUDE "translation.include.ab3"
0000E2BA <dynamicarray.include.ab3@435> XINCLUDE "translation.include.ab3"
0000E2BE <dynamicarray.include.ab3@437> XINCLUDE "translation.include.ab3"
0000E2D4 <dynamicarray.include.ab3@531> XINCLUDE "translation.include.ab3"
0000E2DA <dynamicarray.include.ab3@533> XINCLUDE "translation.include.ab3"
0000E2E4 <dynamicarray.include.ab3@535> XINCLUDE "translation.include.ab3"
0000E31A <dynamicarray.include.ab3@536> XINCLUDE "translation.include.ab3"
0000E324 <dynamicarray.include.ab3@537> XINCLUDE "translation.include.ab3"
0000E328 <dynamicarray.include.ab3@538> XINCLUDE "translation.include.ab3"
0000E356 <dynamicarray.include.ab3@539> XINCLUDE "translation.include.ab3"
0000E356 <prefixtree.include.ab3@156> XINCLUDE "translation.include.ab3"
0000E370 <prefixtree.include.ab3@221> XINCLUDE "translation.include.ab3"
0000E37A <prefixtree.include.ab3@223> XINCLUDE "translation.include.ab3"
0000E3A2 <prefixtree.include.ab3@224> XINCLUDE "translation.include.ab3"
0000E3C4 <prefixtree.include.ab3@225> XINCLUDE "translation.include.ab3"
0000E3DC <prefixtree.include.ab3@226> XINCLUDE "translation.include.ab3"
0000E3F2 <prefixtree.include.ab3@227> XINCLUDE "translation.include.ab3"
0000E3F6 <prefixtree.include.ab3@230> XINCLUDE "translation.include.ab3"
0000E410 <prefixtree.include.ab3@283> XINCLUDE "translation.include.ab3"
0000E430 <prefixtree.include.ab3@284> XINCLUDE "translation.include.ab3"
0000E43A <prefixtree.include.ab3@285> XINCLUDE "translation.include.ab3"
0000E454 <prefixtree.include.ab3@286> XINCLUDE "translation.include.ab3"
0000E462 <prefixtree.include.ab3@287> XINCLUDE "translation.include.ab3"
0000E470 <prefixtree.include.ab3@288> XINCLUDE "translation.include.ab3"
0000E47E <prefixtree.include.ab3@289> XINCLUDE "translation.include.ab3"
0000E48C <prefixtree.include.ab3@290> XINCLUDE "translation.include.ab3"
0000E498 <prefixtree.include.ab3@291> XINCLUDE "translation.include.ab3"
0000E4A2 <prefixtree.include.ab3@292> XINCLUDE "translation.include.ab3"
0000E4B0 <prefixtree.include.ab3@293> XINCLUDE "translation.include.ab3"
0000E4BE <prefixtree.include.ab3@294> XINCLUDE "translation.include.ab3"
0000E4CC <prefixtree.include.ab3@295> XINCLUDE "translation.include.ab3"
0000E4E6 <prefixtree.include.ab3@296> XINCLUDE "translation.include.ab3"
0000E4F4 <prefixtree.include.ab3@297> XINCLUDE "translation.include.ab3"
0000E504 <prefixtree.include.ab3@298> XINCLUDE "translation.include.ab3"
0000E514 <prefixtree.include.ab3@299> XINCLUDE "translation.include.ab3"
0000E524 <prefixtree.include.ab3@300> XINCLUDE "translation.include.ab3"
0000E532 <prefixtree.include.ab3@301> XINCLUDE "translation.include.ab3"
0000E53C <prefixtree.include.ab3@303> XINCLUDE "translation.include.ab3"
0000E542 <prefixtree.include.ab3@304> XINCLUDE "translation.include.ab3"
0000E560 <prefixtree.include.ab3@322> XINCLUDE "translation.include.ab3"
0000E566 <prefixtree.include.ab3@323> XINCLUDE "translation.include.ab3"
0000E570 <prefixtree.include.ab3@324> XINCLUDE "translation.include.ab3"
0000E590 <prefixtree.include.ab3@325> XINCLUDE "translation.include.ab3"
0000E5BE <prefixtree.include.ab3@326> XINCLUDE "translation.include.ab3"
0000E5DC <prefixtree.include.ab3@327> XINCLUDE "translation.include.ab3"
0000E5E6 <prefixtree.include.ab3@328> XINCLUDE "translation.include.ab3"
0000E5F8 <prefixtree.include.ab3@329> XINCLUDE "translation.include.ab3"
0000E624 <prefixtree.include.ab3@330> XINCLUDE "translation.include.ab3"
0000E63A <prefixtree.include.ab3@331> XINCLUDE "translation.include.ab3"
0000E646 <prefixtree.include.ab3@333> XINCLUDE "translation.include.ab3"
0000E652 <prefixtree.include.ab3@334> XINCLUDE "translation.include.ab3"
0000E658 <prefixtree.include.ab3@335> XINCLUDE "translation.include.ab3"
0000E65E <prefixtree.include.ab3@336> XINCLUDE "translation.include.ab3"
0000E664 <prefixtree.include.ab3@337> XINCLUDE "translation.include.ab3"
0000E69C <prefixtree.include.ab3@338> XINCLUDE "translation.include.ab3"
0000E6A2 <prefixtree.include.ab3@340> XINCLUDE "translation.include.ab3"
0000E6A8 <prefixtree.include.ab3@341> XINCLUDE "translation.include.ab3"
0000E6B2 <prefixtree.include.ab3@344> XINCLUDE "translation.include.ab3"
0000E6B8 <prefixtree.include.ab3@345> XINCLUDE "translation.include.ab3"
0000E6EA <prefixtree.include.ab3@365> XINCLUDE "translation.include.ab3"
0000E706 <prefixtree.include.ab3@366> XINCLUDE "translation.include.ab3"
0000E720 <prefixtree.include.ab3@367> XINCLUDE "translation.include.ab3"
0000E734 <prefixtree.include.ab3@368> XINCLUDE "translation.include.ab3"
0000E784 <prefixtree.include.ab3@369> XINCLUDE "translation.include.ab3"
0000E7A6 <prefixtree.include.ab3@371> XINCLUDE "translation.include.ab3"
0000E7BA <prefixtree.include.ab3@372> XINCLUDE "translation.include.ab3"
0000E7C8 <prefixtree.include.ab3@373> XINCLUDE "translation.include.ab3"
0000E7D4 <prefixtree.include.ab3@374> XINCLUDE "translation.include.ab3"
0000E7DC <prefixtree.include.ab3@375> XINCLUDE "translation.include.ab3"
0000E7E4 <prefixtree.include.ab3@376> XINCLUDE "translation.include.ab3"
0000E7EC <prefixtree.include.ab3@377> XINCLUDE "translation.include.ab3"
0000E7F4 <prefixtree.include.ab3@378> XINCLUDE "translation.include.ab3"
0000E7FA <prefixtree.include.ab3@379> XINCLUDE "translation.include.ab3"
0000E808 <prefixtree.include.ab3@380> XINCLUDE "translation.include.ab3"
0000E82A <prefixtree.include.ab3@382> XINCLUDE "translation.include.ab3"
0000E856 <prefixtree.include.ab3@383> XINCLUDE "translation.include.ab3"
0000E868 <prefixtree.include.ab3@385> XINCLUDE "translation.include.ab3"
0000E86E <prefixtree.include.ab3@386> XINCLUDE "translation.include.ab3"
0000E896 <prefixtree.include.ab3@388> XINCLUDE "translation.include.ab3"
0000E8BA <prefixtree.include.ab3@389> XINCLUDE "translation.include.ab3"
0000E8E2 <prefixtree.include.ab3@390> XINCLUDE "translation.include.ab3"
0000E916 <prefixtree.include.ab3@391> XINCLUDE "translation.include.ab3"
0000E926 <prefixtree.include.ab3@392> XINCLUDE "translation.include.ab3"
0000E930 <prefixtree.include.ab3@393> XINCLUDE "translation.include.ab3"
0000E93E <prefixtree.include.ab3@394> XINCLUDE "translation.include.ab3"
0000E952 <prefixtree.include.ab3@395> XINCLUDE "translation.include.ab3"
0000E958 <prefixtree.include.ab3@396> XINCLUDE "translation.include.ab3"
0000E978 <prefixtree.include.ab3@397> XINCLUDE "translation.include.ab3"
0000E97E <prefixtree.include.ab3@398> XINCLUDE "translation.include.ab3"
0000E986 <prefixtree.include.ab3@400> XINCLUDE "translation.include.ab3"
0000E9C0 <prefixtree.include.ab3@402> XINCLUDE "translation.include.ab3"
0000E9E6 <prefixtree.include.ab3@403> XINCLUDE "translation.include.ab3"
0000E9FE <prefixtree.include.ab3@404> XINCLUDE "translation.include.ab3"
0000EA32 <prefixtree.include.ab3@405> XINCLUDE "translation.include.ab3"
0000EA3A <prefixtree.include.ab3@406> XINCLUDE "translation.include.ab3"
0000EA48 <prefixtree.include.ab3@408> XINCLUDE "translation.include.ab3"
0000EA4E <prefixtree.include.ab3@410> XINCLUDE "translation.include.ab3"
0000EA66 <prefixtree.include.ab3@411> XINCLUDE "translation.include.ab3"
0000EA6C <prefixtree.include.ab3@412> XINCLUDE "translation.include.ab3"
0000EA72 <prefixtree.include.ab3@413> XINCLUDE "translation.include.ab3"
0000EA8C <prefixtree.include.ab3@414> XINCLUDE "translation.include.ab3"
0000EA92 <prefixtree.include.ab3@417> XINCLUDE "translation.include.ab3"
0000EA98 <prefixtree.include.ab3@419> XINCLUDE "translation.include.ab3"
0000EA9E <prefixtree.include.ab3@421> XINCLUDE "translation.include.ab3"
0000EAAC <prefixtree.include.ab3@422> XINCLUDE "translation.include.ab3"
0000EABA <prefixtree.include.ab3@423> XINCLUDE "translation.include.ab3"
0000EAF4 <prefixtree.include.ab3@425> XINCLUDE "translation.include.ab3"
0000EB1A <prefixtree.include.ab3@426> XINCLUDE "translation.include.ab3"
0000EB32 <prefixtree.include.ab3@427> XINCLUDE "translation.include.ab3"
0000EB3E <prefixtree.include.ab3@430> XINCLUDE "translation.include.ab3"
0000EB4A <prefixtree.include.ab3@431> XINCLUDE "translation.include.ab3"
0000EB56 <prefixtree.include.ab3@432> XINCLUDE "translation.include.ab3"
0000EB62 <prefixtree.include.ab3@433> XINCLUDE "translation.include.ab3"
0000EB6E <prefixtree.include.ab3@434> XINCLUDE "translation.include.ab3"
0000EB78 <prefixtree.include.ab3@435> XINCLUDE "translation.include.ab3"
0000EB80 <prefixtree.include.ab3@437> XINCLUDE "translation.include.ab3"
0000EB9A <prefixtree.include.ab3@438> XINCLUDE "translation.include.ab3"
0000EBD8 <prefixtree.include.ab3@485> XINCLUDE "translation.include.ab3"
0000EBDE <prefixtree.include.ab3@486> XINCLUDE "translation.include.ab3"
0000EC44 <prefixtree.include.ab3@487> XINCLUDE "translation.include.ab3"
0000EC84 <prefixtree.include.ab3@489> XINCLUDE "translation.include.ab3"
0000ECDA <prefixtree.include.ab3@490> XINCLUDE "translation.include.ab3"
0000ED4C <prefixtree.include.ab3@491> XINCLUDE "translation.include.ab3"
0000ED58 <prefixtree.include.ab3@493> XINCLUDE "translation.include.ab3"
0000ED66 <prefixtree.include.ab3@494> XINCLUDE "translation.include.ab3"
0000EDAC <prefixtree.include.ab3@495> XINCLUDE "translation.include.ab3"
0000EDF6 <prefixtree.include.ab3@496> XINCLUDE "translation.include.ab3"
0000EE2E <prefixtree.include.ab3@497> XINCLUDE "translation.include.ab3"
0000EE82 <prefixtree.include.ab3@498> XINCLUDE "translation.include.ab3"
0000EE88 <prefixtree.include.ab3@499> XINCLUDE "translation.include.ab3"
0000EE8E <prefixtree.include.ab3@500> XINCLUDE "translation.include.ab3"
0000EE9C <prefixtree.include.ab3@502> XINCLUDE "translation.include.ab3"
0000EEA4 <prefixtree.include.ab3@503> XINCLUDE "translation.include.ab3"
0000EEDE <prefixtree.include.ab3@505> XINCLUDE "translation.include.ab3"
0000EF04 <prefixtree.include.ab3@506> XINCLUDE "translation.include.ab3"
0000EF1C <prefixtree.include.ab3@507> XINCLUDE "translation.include.ab3"
0000EF52 <prefixtree.include.ab3@508> XINCLUDE "translation.include.ab3"
0000EF68 <prefixtree.include.ab3@509> XINCLUDE "translation.include.ab3"
0000EF76 <prefixtree.include.ab3@511> XINCLUDE "translation.include.ab3"
0000EF8E <prefixtree.include.ab3@512> XINCLUDE "translation.include.ab3"
0000EFC6 <prefixtree.include.ab3@513> XINCLUDE "translation.include.ab3"
0000EFEC <prefixtree.include.ab3@514> XINCLUDE "translation.include.ab3"
0000F034 <prefixtree.include.ab3@515> XINCLUDE "translation.include.ab3"
0000F03A <prefixtree.include.ab3@516> XINCLUDE "translation.include.ab3"
0000F054 <prefixtree.include.ab3@518> XINCLUDE "translation.include.ab3"
0000F060 <prefixtree.include.ab3@519> XINCLUDE "translation.include.ab3"
0000F066 <prefixtree.include.ab3@520> XINCLUDE "translation.include.ab3"
0000F092 <prefixtree.include.ab3@521> XINCLUDE "translation.include.ab3"
0000F0A6 <prefixtree.include.ab3@526> XINCLUDE "translation.include.ab3"
0000F0B4 <prefixtree.include.ab3@528> XINCLUDE "translation.include.ab3"
0000F0BC <prefixtree.include.ab3@529> XINCLUDE "translation.include.ab3"
0000F0F6 <prefixtree.include.ab3@531> XINCLUDE "translation.include.ab3"
0000F11C <prefixtree.include.ab3@532> XINCLUDE "translation.include.ab3"
0000F134 <prefixtree.include.ab3@533> XINCLUDE "translation.include.ab3"
0000F16E <prefixtree.include.ab3@534> XINCLUDE "translation.include.ab3"
0000F198 <prefixtree.include.ab3@535> XINCLUDE "translation.include.ab3"
0000F1B0 <prefixtree.include.ab3@536> XINCLUDE "translation.include.ab3"
0000F1E0 <prefixtree.include.ab3@537> XINCLUDE "translation.include.ab3"
0000F20C <prefixtree.include.ab3@538> XINCLUDE "translation.include.ab3"
0000F228 <prefixtree.include.ab3@539> XINCLUDE "translation.include.ab3"
0000F236 <prefixtree.include.ab3@541> XINCLUDE "translation.include.ab3"
0000F244 <prefixtree.include.ab3@542> XINCLUDE "translation.include.ab3"
0000F282 <prefixtree.include.ab3@543> XINCLUDE "translation.include.ab3"
0000F2BE <prefixtree.include.ab3@544> XINCLUDE "translation.include.ab3"
0000F32A <prefixtree.include.ab3@545> XINCLUDE "translation.include.ab3"
0000F358 <prefixtree.include.ab3@546> XINCLUDE "translation.include.ab3"
0000F386 <prefixtree.include.ab3@547> XINCLUDE "translation.include.ab3"
0000F3CE <prefixtree.include.ab3@548> XINCLUDE "translation.include.ab3"
0000F3E8 <prefixtree.include.ab3@551> XINCLUDE "translation.include.ab3"
0000F430 <prefixtree.include.ab3@552> XINCLUDE "translation.include.ab3"
0000F44E <prefixtree.include.ab3@553> XINCLUDE "translation.include.ab3"
0000F46C <prefixtree.include.ab3@554> XINCLUDE "translation.include.ab3"
0000F486 <prefixtree.include.ab3@557> XINCLUDE "translation.include.ab3"
0000F492 <prefixtree.include.ab3@558> XINCLUDE "translation.include.ab3"
0000F498 <prefixtree.include.ab3@559> XINCLUDE "translation.include.ab3"
0000F4C4 <prefixtree.include.ab3@560> XINCLUDE "translation.include.ab3"
0000F4DC <prefixtree.include.ab3@562> XINCLUDE "translation.include.ab3"
0000F4E2 <prefixtree.include.ab3@563> XINCLUDE "translation.include.ab3"
0000F4F6 <prefixtree.include.ab3@566> XINCLUDE "translation.include.ab3"
0000F504 <prefixtree.include.ab3@568> XINCLUDE "translation.include.ab3"
0000F512 <prefixtree.include.ab3@569> XINCLUDE "translation.include.ab3"
0000F520 <prefixtree.include.ab3@570> XINCLUDE "translation.include.ab3"
0000F528 <prefixtree.include.ab3@571> XINCLUDE "translation.include.ab3"
0000F554 <prefixtree.include.ab3@572> XINCLUDE "translation.include.ab3"
0000F57C <prefixtree.include.ab3@573> XINCLUDE "translation.include.ab3"
0000F5A4 <prefixtree.include.ab3@574> XINCLUDE "translation.include.ab3"
0000F610 <prefixtree.include.ab3@575> XINCLUDE "translation.include.ab3"
0000F620 <prefixtree.include.ab3@576> XINCLUDE "translation.include.ab3"
0000F64C <prefixtree.include.ab3@577> XINCLUDE "translation.include.ab3"
0000F6A2 <prefixtree.include.ab3@579> XINCLUDE "translation.include.ab3"
0000F6B0 <prefixtree.include.ab3@580> XINCLUDE "translation.include.ab3"
0000F6BE <prefixtree.include.ab3@581> XINCLUDE "translation.include.ab3"
0000F6C4 <prefixtree.include.ab3@582> XINCLUDE "translation.include.ab3"
0000F718 <prefixtree.include.ab3@584> XINCLUDE "translation.include.ab3"
0000F838 <prefixtree.include.ab3@585> XINCLUDE "translation.include.ab3"
0000F888 <prefixtree.include.ab3@587> XINCLUDE "translation.include.ab3"
0000F8DE <prefixtree.include.ab3@588> XINCLUDE "translation.include.ab3"
0000F94A <prefixtree.include.ab3@589> XINCLUDE "translation.include.ab3"
0000F952 <prefixtree.include.ab3@593> XINCLUDE "translation.include.ab3"
0000F98C <prefixtree.include.ab3@595> XINCLUDE "translation.include.ab3"
0000F9B2 <prefixtree.include.ab3@596> XINCLUDE "translation.include.ab3"
0000F9CA <prefixtree.include.ab3@597> XINCLUDE "translation.include.ab3"
0000FA04 <prefixtree.include.ab3@598> XINCLUDE "translation.include.ab3"
0000FA2E <prefixtree.include.ab3@599> XINCLUDE "translation.include.ab3"
0000FA46 <prefixtree.include.ab3@600> XINCLUDE "translation.include.ab3"
0000FA6A <prefixtree.include.ab3@602> XINCLUDE "translation.include.ab3"
0000FABE <prefixtree.include.ab3@603> XINCLUDE "translation.include.ab3"
0000FAC6 <prefixtree.include.ab3@604> XINCLUDE "translation.include.ab3"
0000FACC <prefixtree.include.ab3@605> XINCLUDE "translation.include.ab3"
0000FB2E <prefixtree.include.ab3@606> XINCLUDE "translation.include.ab3"
0000FB5A <prefixtree.include.ab3@607> XINCLUDE "translation.include.ab3"
0000FB76 <prefixtree.include.ab3@610> XINCLUDE "translation.include.ab3"
0000FB84 <prefixtree.include.ab3@612> XINCLUDE "translation.include.ab3"
0000FB92 <prefixtree.include.ab3@613> XINCLUDE "translation.include.ab3"
0000FBA0 <prefixtree.include.ab3@615> XINCLUDE "translation.include.ab3"
0000FBAE <prefixtree.include.ab3@616> XINCLUDE "translation.include.ab3"
0000FBF2 <prefixtree.include.ab3@617> XINCLUDE "translation.include.ab3"
0000FC5E <prefixtree.include.ab3@618> XINCLUDE "translation.include.ab3"
0000FC8C <prefixtree.include.ab3@619> XINCLUDE "translation.include.ab3"
0000FCA0 <prefixtree.include.ab3@620> XINCLUDE "translation.include.ab3"
0000FCD2 <prefixtree.include.ab3@621> XINCLUDE "translation.include.ab3"
0000FD1C <prefixtree.include.ab3@622> XINCLUDE "translation.include.ab3"
0000FD2C <prefixtree.include.ab3@623> XINCLUDE "translation.include.ab3"
0000FD60 <prefixtree.include.ab3@624> XINCLUDE "translation.include.ab3"
0000FD82 <prefixtree.include.ab3@625> XINCLUDE "translation.include.ab3"
0000FD92 <prefixtree.include.ab3@626> XINCLUDE "translation.include.ab3"
0000FD9A <prefixtree.include.ab3@629> XINCLUDE "translation.include.ab3"
0000FDDE <prefixtree.include.ab3@630> XINCLUDE "translation.include.ab3"
0000FE4A <prefixtree.include.ab3@631> XINCLUDE "translation.include.ab3"
0000FE78 <prefixtree.include.ab3@632> XINCLUDE "translation.include.ab3"
0000FE9C <prefixtree.include.ab3@634> XINCLUDE "translation.include.ab3"
0000FEE0 <prefixtree.include.ab3@635> XINCLUDE "translation.include.ab3"
0000FF4C <prefixtree.include.ab3@636> XINCLUDE "translation.include.ab3"
0000FF7A <prefixtree.include.ab3@637> XINCLUDE "translation.include.ab3"
0000FFA8 <prefixtree.include.ab3@638> XINCLUDE "translation.include.ab3"
0000FFB0 <prefixtree.include.ab3@639> XINCLUDE "translation.include.ab3"
0000FFDE <prefixtree.include.ab3@640> XINCLUDE "translation.include.ab3"
00010050 <prefixtree.include.ab3@641> XINCLUDE "translation.include.ab3"
00010056 <prefixtree.include.ab3@642> XINCLUDE "translation.include.ab3"
00010084 <prefixtree.include.ab3@643> XINCLUDE "translation.include.ab3"
000100F6 <prefixtree.include.ab3@644> XINCLUDE "translation.include.ab3"
00010114 <prefixtree.include.ab3@647> XINCLUDE "translation.include.ab3"
00010138 <prefixtree.include.ab3@648> XINCLUDE "translation.include.ab3"
00010150 <prefixtree.include.ab3@649> XINCLUDE "translation.include.ab3"
00010156 <prefixtree.include.ab3@650> XINCLUDE "translation.include.ab3"
0001015C <prefixtree.include.ab3@653> XINCLUDE "translation.include.ab3"
0001015E <prefixtree.include.ab3@655> XINCLUDE "translation.include.ab3"
00010168 <prefixtree.include.ab3@658> XINCLUDE "translation.include.ab3"
00010194 <prefixtree.include.ab3@659> XINCLUDE "translation.include.ab3"
000101B6 <prefixtree.include.ab3@677> XINCLUDE "translation.include.ab3"
000101BE <prefixtree.include.ab3@679> XINCLUDE "translation.include.ab3"
000101C4 <prefixtree.include.ab3@680> XINCLUDE "translation.include.ab3"
000101D2 <prefixtree.include.ab3@681> XINCLUDE "translation.include.ab3"
0001020C <prefixtree.include.ab3@683> XINCLUDE "translation.include.ab3"
00010232 <prefixtree.include.ab3@684> XINCLUDE "translation.include.ab3"
0001024A <prefixtree.include.ab3@685> XINCLUDE "translation.include.ab3"
00010284 <prefixtree.include.ab3@686> XINCLUDE "translation.include.ab3"
000102AE <prefixtree.include.ab3@687> XINCLUDE "translation.include.ab3"
000102C6 <prefixtree.include.ab3@689> XINCLUDE "translation.include.ab3"
000102DE <prefixtree.include.ab3@690> XINCLUDE "translation.include.ab3"
00010316 <prefixtree.include.ab3@691> XINCLUDE "translation.include.ab3"
0001031E <prefixtree.include.ab3@693> XINCLUDE "translation.include.ab3"
00010358 <prefixtree.include.ab3@695> XINCLUDE "translation.include.ab3"
0001036A <prefixtree.include.ab3@697> XINCLUDE "translation.include.ab3"
00010390 <prefixtree.include.ab3@698> XINCLUDE "translation.include.ab3"
000103A6 <prefixtree.include.ab3@699> XINCLUDE "translation.include.ab3"
000103CC <prefixtree.include.ab3@700> XINCLUDE "translation.include.ab3"
000103E0 <prefixtree.include.ab3@701> XINCLUDE "translation.include.ab3"
000103F8 <prefixtree.include.ab3@703> XINCLUDE "translation.include.ab3"
0001040A <prefixtree.include.ab3@705> XINCLUDE "translation.include.ab3"
00010414 <prefixtree.include.ab3@707> XINCLUDE "translation.include.ab3"
00010428 <prefixtree.include.ab3@709> XINCLUDE "translation.include.ab3"
00010442 <prefixtree.include.ab3@726> XINCLUDE "translation.include.ab3"
0001045E <prefixtree.include.ab3@728> XINCLUDE "translation.include.ab3"
00010470 <prefixtree.include.ab3@729> XINCLUDE "translation.include.ab3"
0001048C <prefixtree.include.ab3@730> XINCLUDE "translation.include.ab3"
000104C8 <prefixtree.include.ab3@731> XINCLUDE "translation.include.ab3"
000104E4 <prefixtree.include.ab3@732> XINCLUDE "translation.include.ab3"
00010504 <prefixtree.include.ab3@733> XINCLUDE "translation.include.ab3"
0001050E <prefixtree.include.ab3@734> XINCLUDE "translation.include.ab3"
00010514 <prefixtree.include.ab3@735> XINCLUDE "translation.include.ab3"
0001051E <prefixtree.include.ab3@736> XINCLUDE "translation.include.ab3"
00010526 <prefixtree.include.ab3@738> XINCLUDE "translation.include.ab3"
0001052C <prefixtree.include.ab3@740> XINCLUDE "translation.include.ab3"
0001055A <prefixtree.include.ab3@759> XINCLUDE "translation.include.ab3"
00010582 <prefixtree.include.ab3@760> XINCLUDE "translation.include.ab3"
000105C2 <prefixtree.include.ab3@761> XINCLUDE "translation.include.ab3"
000105DA <prefixtree.include.ab3@762> XINCLUDE "translation.include.ab3"
00010620 <prefixtree.include.ab3@763> XINCLUDE "translation.include.ab3"
0001064A <prefixtree.include.ab3@766> XINCLUDE "translation.include.ab3"
00010678 <prefixtree.include.ab3@767> XINCLUDE "translation.include.ab3"
00010692 <prefixtree.include.ab3@966> XINCLUDE "translation.include.ab3"
00010698 <prefixtree.include.ab3@967> XINCLUDE "translation.include.ab3"
000106B0 <prefixtree.include.ab3@968> XINCLUDE "translation.include.ab3"
000106BA <prefixtree.include.ab3@969> XINCLUDE "translation.include.ab3"
000106CC <prefixtree.include.ab3@970> XINCLUDE "translation.include.ab3"
00010704 <prefixtree.include.ab3@971> XINCLUDE "translation.include.ab3"
00010712 <prefixtree.include.ab3@972> XINCLUDE "translation.include.ab3"
0001071E <prefixtree.include.ab3@973> XINCLUDE "translation.include.ab3"
0001073A <prefixtree.include.ab3@974> XINCLUDE "translation.include.ab3"
0001075C <prefixtree.include.ab3@975> XINCLUDE "translation.include.ab3"
0001077E <prefixtree.include.ab3@976> XINCLUDE "translation.include.ab3"
000107A0 <prefixtree.include.ab3@977> XINCLUDE "translation.include.ab3"
000107C2 <prefixtree.include.ab3@978> XINCLUDE "translation.include.ab3"
000107DE <prefixtree.include.ab3@979> XINCLUDE "translation.include.ab3"
000107FC <prefixtree.include.ab3@980> XINCLUDE "translation.include.ab3"
00010810 <prefixtree.include.ab3@981> XINCLUDE "translation.include.ab3"
00010816 <prefixtree.include.ab3@983> XINCLUDE "translation.include.ab3"
00010818 <prefixtree.include.ab3@985> XINCLUDE "translation.include.ab3"
0001081E <prefixtree.include.ab3@986> XINCLUDE "translation.include.ab3"
00010828 <prefixtree.include.ab3@988> XINCLUDE "translation.include.ab3"
0001082E <prefixtree.include.ab3@989> XINCLUDE "translation.include.ab3"
0001084C <prefixtree.include.ab3@1007> XINCLUDE "translation.include.ab3"
00010852 <prefixtree.include.ab3@1008> XINCLUDE "translation.include.ab3"
00010876 <prefixtree.include.ab3@1009> XINCLUDE "translation.include.ab3"
00010894 <prefixtree.include.ab3@1010> XINCLUDE "translation.include.ab3"
000108C2 <prefixtree.include.ab3@1011> XINCLUDE "translation.include.ab3"
000108F0 <prefixtree.include.ab3@1012> XINCLUDE "translation.include.ab3"
0001091E <prefixtree.include.ab3@1013> XINCLUDE "translation.include.ab3"
0001094C <prefixtree.include.ab3@1014> XINCLUDE "translation.include.ab3"
00010980 <prefixtree.include.ab3@1015> XINCLUDE "translation.include.ab3"
00010990 <prefixtree.include.ab3@1016> XINCLUDE "translation.include.ab3"
0001099A <prefixtree.include.ab3@1018> XINCLUDE "translation.include.ab3"
000109A0 <prefixtree.include.ab3@1019> XINCLUDE "translation.include.ab3"
000109A0 <phrasebook.include.ab3@34> XINCLUDE "translation.include.ab3"
000109EA <phrasebook.include.ab3@58> XINCLUDE "translation.include.ab3"
00010A0A <phrasebook.include.ab3@59> XINCLUDE "translation.include.ab3"
00010A14 <phrasebook.include.ab3@60> XINCLUDE "translation.include.ab3"
00010A28 <phrasebook.include.ab3@61> XINCLUDE "translation.include.ab3"
00010A6E <phrasebook.include.ab3@62> XINCLUDE "translation.include.ab3"
00010AB4 <phrasebook.include.ab3@63> XINCLUDE "translation.include.ab3"
00010AFA <phrasebook.include.ab3@64> XINCLUDE "translation.include.ab3"
00010B04 <phrasebook.include.ab3@66> XINCLUDE "translation.include.ab3"
00010B20 <phrasebook.include.ab3@67> XINCLUDE "translation.include.ab3"
00010B4A <phrasebook.include.ab3@70> XINCLUDE "translation.include.ab3"
00010BC8 <phrasebook.include.ab3@71> XINCLUDE "translation.include.ab3"
00010C46 <phrasebook.include.ab3@72> XINCLUDE "translation.include.ab3"
00010CC4 <phrasebook.include.ab3@73> XINCLUDE "translation.include.ab3"
00010D42 <phrasebook.include.ab3@74> XINCLUDE "translation.include.ab3"
00010DC0 <phrasebook.include.ab3@75> XINCLUDE "translation.include.ab3"
00010E3E <phrasebook.include.ab3@76> XINCLUDE "translation.include.ab3"
00010EBC <phrasebook.include.ab3@77> XINCLUDE "translation.include.ab3"
00010F3A <phrasebook.include.ab3@78> XINCLUDE "translation.include.ab3"
00010FB8 <phrasebook.include.ab3@79> XINCLUDE "translation.include.ab3"
00011036 <phrasebook.include.ab3@80> XINCLUDE "translation.include.ab3"
000110BA <phrasebook.include.ab3@81> XINCLUDE "translation.include.ab3"
000110EA <phrasebook.include.ab3@82> XINCLUDE "translation.include.ab3"
00011146 <phrasebook.include.ab3@84> XINCLUDE "translation.include.ab3"
00011172 <phrasebook.include.ab3@85> XINCLUDE "translation.include.ab3"
0001123C <phrasebook.include.ab3@86> XINCLUDE "translation.include.ab3"
0001124A <phrasebook.include.ab3@88> XINCLUDE "translation.include.ab3"
00011288 <phrasebook.include.ab3@89> XINCLUDE "translation.include.ab3"
0001130C <phrasebook.include.ab3@90> XINCLUDE "translation.include.ab3"
00011336 <phrasebook.include.ab3@91> XINCLUDE "translation.include.ab3"
00011354 <phrasebook.include.ab3@92> XINCLUDE "translation.include.ab3"
0001136E <phrasebook.include.ab3@106> XINCLUDE "translation.include.ab3"
00011378 <phrasebook.include.ab3@107> XINCLUDE "translation.include.ab3"
00011384 <phrasebook.include.ab3@108> XINCLUDE "translation.include.ab3"
00011394 <phrasebook.include.ab3@109> XINCLUDE "translation.include.ab3"
000113A4 <phrasebook.include.ab3@110> XINCLUDE "translation.include.ab3"
000113B4 <phrasebook.include.ab3@111> XINCLUDE "translation.include.ab3"
000113C4 <phrasebook.include.ab3@112> XINCLUDE "translation.include.ab3"
000113C8 <phrasebook.include.ab3@114> XINCLUDE "translation.include.ab3"
00011406 <phrasebook.include.ab3@131> XINCLUDE "translation.include.ab3"
0001145E <phrasebook.include.ab3@132> XINCLUDE "translation.include.ab3"
000114BA <phrasebook.include.ab3@133> XINCLUDE "translation.include.ab3"
00011544 <phrasebook.include.ab3@134> XINCLUDE "translation.include.ab3"
000115C2 <phrasebook.include.ab3@135> XINCLUDE "translation.include.ab3"
000115DC <phrasebook.include.ab3@137> XINCLUDE "translation.include.ab3"
0001160A <phrasebook.include.ab3@155> XINCLUDE "translation.include.ab3"
00011646 <phrasebook.include.ab3@156> XINCLUDE "translation.include.ab3"
00011714 <phrasebook.include.ab3@158> XINCLUDE "translation.include.ab3"
000117E2 <phrasebook.include.ab3@159> XINCLUDE "translation.include.ab3"
0001182E <phrasebook.include.ab3@161> XINCLUDE "translation.include.ab3"
000118AC <phrasebook.include.ab3@162> XINCLUDE "translation.include.ab3"
0001192A <phrasebook.include.ab3@163> XINCLUDE "translation.include.ab3"
00011988 <phrasebook.include.ab3@165> XINCLUDE "translation.include.ab3"
00011A1E <phrasebook.include.ab3@166> XINCLUDE "translation.include.ab3"
00011A56 <phrasebook.include.ab3@168> XINCLUDE "translation.include.ab3"
00011AB4 <phrasebook.include.ab3@169> XINCLUDE "translation.include.ab3"
00011B3C <phrasebook.include.ab3@170> XINCLUDE "translation.include.ab3"
00011B44 <phrasebook.include.ab3@172> XINCLUDE "translation.include.ab3"
00011BAE <phrasebook.include.ab3@174> XINCLUDE "translation.include.ab3"
00011C1A <phrasebook.include.ab3@175> XINCLUDE "translation.include.ab3"
00011C58 <phrasebook.include.ab3@176> XINCLUDE "translation.include.ab3"
00011CE0 <phrasebook.include.ab3@177> XINCLUDE "translation.include.ab3"
00011D0C <phrasebook.include.ab3@187> XINCLUDE "translation.include.ab3"
00011D68 <phrasebook.include.ab3@188> XINCLUDE "translation.include.ab3"
00011E30 <phrasebook.include.ab3@189> XINCLUDE "translation.include.ab3"
00011E94 <phrasebook.include.ab3@190> XINCLUDE "translation.include.ab3"
00011E9A <phrasebook.include.ab3@191> XINCLUDE "translation.include.ab3"
00011ECE <phrasebook.include.ab3@192> XINCLUDE "translation.include.ab3"
00011F9C <phrasebook.include.ab3@196> XINCLUDE "translation.include.ab3"
0001206A <phrasebook.include.ab3@197> XINCLUDE "translation.include.ab3"
00012094 <phrasebook.include.ab3@199> XINCLUDE "translation.include.ab3"
000120B2 <phrasebook.include.ab3@200> XINCLUDE "translation.include.ab3"
000120E0 <phrasebook.include.ab3@204> XINCLUDE "translation.include.ab3"
0001211C <phrasebook.include.ab3@205> XINCLUDE "translation.include.ab3"
0001218C <phrasebook.include.ab3@206> XINCLUDE "translation.include.ab3"
00012194 <phrasebook.include.ab3@207> XINCLUDE "translation.include.ab3"
000121E6 <phrasebook.include.ab3@208> XINCLUDE "translation.include.ab3"
0001220E <phrasebook.include.ab3@209> XINCLUDE "translation.include.ab3"
00012226 <phrasebook.include.ab3@210> XINCLUDE "translation.include.ab3"
000122DA <phrasebook.include.ab3@211> XINCLUDE "translation.include.ab3"
000122E8 <phrasebook.include.ab3@212> XINCLUDE "translation.include.ab3"
0001233E <phrasebook.include.ab3@213> XINCLUDE "translation.include.ab3"
0001239C <phrasebook.include.ab3@214> XINCLUDE "translation.include.ab3"
000123A2 <phrasebook.include.ab3@215> XINCLUDE "translation.include.ab3"
00012426 <phrasebook.include.ab3@216> XINCLUDE "translation.include.ab3"
000124AA <phrasebook.include.ab3@217> XINCLUDE "translation.include.ab3"
0001252E <phrasebook.include.ab3@218> XINCLUDE "translation.include.ab3"
000125AC <phrasebook.include.ab3@219> XINCLUDE "translation.include.ab3"
0001262A <phrasebook.include.ab3@220> XINCLUDE "translation.include.ab3"
000126A8 <phrasebook.include.ab3@221> XINCLUDE "translation.include.ab3"
00012726 <phrasebook.include.ab3@222> XINCLUDE "translation.include.ab3"
000127A4 <phrasebook.include.ab3@223> XINCLUDE "translation.include.ab3"
00012822 <phrasebook.include.ab3@224> XINCLUDE "translation.include.ab3"
000128A0 <phrasebook.include.ab3@225> XINCLUDE "translation.include.ab3"
000128CA <phrasebook.include.ab3@226> XINCLUDE "translation.include.ab3"
000128E8 <phrasebook.include.ab3@227> XINCLUDE "translation.include.ab3"
00012916 <phrasebook.include.ab3@245> XINCLUDE "translation.include.ab3"
0001295A <phrasebook.include.ab3@246> XINCLUDE "translation.include.ab3"
00012960 <phrasebook.include.ab3@247> XINCLUDE "translation.include.ab3"
0001297A <phrasebook.include.ab3@248> XINCLUDE "translation.include.ab3"
00012996 <phrasebook.include.ab3@249> XINCLUDE "translation.include.ab3"
000129CA <phrasebook.include.ab3@250> XINCLUDE "translation.include.ab3"
000129EE <phrasebook.include.ab3@251> XINCLUDE "translation.include.ab3"
00012A16 <phrasebook.include.ab3@252> XINCLUDE "translation.include.ab3"
00012A82 <phrasebook.include.ab3@253> XINCLUDE "translation.include.ab3"
00012AE0 <phrasebook.include.ab3@256> XINCLUDE "translation.include.ab3"
00012B3E <phrasebook.include.ab3@257> XINCLUDE "translation.include.ab3"
00012B8A <phrasebook.include.ab3@258> XINCLUDE "translation.include.ab3"
00012BE4 <phrasebook.include.ab3@259> XINCLUDE "translation.include.ab3"
00012BEA <phrasebook.include.ab3@260> XINCLUDE "translation.include.ab3"
00012BF0 <phrasebook.include.ab3@262> XINCLUDE "translation.include.ab3"
00012BFA <phrasebook.include.ab3@263> XINCLUDE "translation.include.ab3"
00012C04 <phrasebook.include.ab3@264> XINCLUDE "translation.include.ab3"
00012C1E <phrasebook.include.ab3@265> XINCLUDE "translation.include.ab3"
00012C4C <phrasebook.include.ab3@282> XINCLUDE "translation.include.ab3"
00012C52 <phrasebook.include.ab3@283> XINCLUDE "translation.include.ab3"
00012C96 <phrasebook.include.ab3@284> XINCLUDE "translation.include.ab3"
00012CB0 <phrasebook.include.ab3@285> XINCLUDE "translation.include.ab3"
00012CC0 <phrasebook.include.ab3@286> XINCLUDE "translation.include.ab3"
00012CCA <phrasebook.include.ab3@287> XINCLUDE "translation.include.ab3"
00012CD6 <phrasebook.include.ab3@288> XINCLUDE "translation.include.ab3"
00012CE0 <phrasebook.include.ab3@289> XINCLUDE "translation.include.ab3"
00012D04 <phrasebook.include.ab3@292> XINCLUDE "translation.include.ab3"
00012D4C <phrasebook.include.ab3@293> XINCLUDE "translation.include.ab3"
00012D94 <phrasebook.include.ab3@294> XINCLUDE "translation.include.ab3"
00012DDC <phrasebook.include.ab3@295> XINCLUDE "translation.include.ab3"
00012DF2 <phrasebook.include.ab3@296> XINCLUDE "translation.include.ab3"
00012E06 <phrasebook.include.ab3@297> XINCLUDE "translation.include.ab3"
00012E10 <phrasebook.include.ab3@299> XINCLUDE "translation.include.ab3"
00012E1A <phrasebook.include.ab3@300> XINCLUDE "translation.include.ab3"
00012E34 <phrasebook.include.ab3@301> XINCLUDE "translation.include.ab3"
00012E5E <phrasebook.include.ab3@317> XINCLUDE "translation.include.ab3"
00012EA2 <phrasebook.include.ab3@318> XINCLUDE "translation.include.ab3"
00012EBC <phrasebook.include.ab3@319> XINCLUDE "translation.include.ab3"
00012F1A <phrasebook.include.ab3@320> XINCLUDE "translation.include.ab3"
00012F34 <phrasebook.include.ab3@321> XINCLUDE "translation.include.ab3"
00012F4C <phrasebook.include.ab3@323> XINCLUDE "translation.include.ab3"
00012F56 <phrasebook.include.ab3@324> XINCLUDE "translation.include.ab3"
00012F72 <phrasebook.include.ab3@325> XINCLUDE "translation.include.ab3"
00012F80 <phrasebook.include.ab3@326> XINCLUDE "translation.include.ab3"
00012F8C <phrasebook.include.ab3@327> XINCLUDE "translation.include.ab3"
00012FD8 <phrasebook.include.ab3@328> XINCLUDE "translation.include.ab3"
0001302A <phrasebook.include.ab3@329> XINCLUDE "translation.include.ab3"
0001307C <phrasebook.include.ab3@330> XINCLUDE "translation.include.ab3"
00013090 <phrasebook.include.ab3@331> XINCLUDE "translation.include.ab3"
000130A0 <phrasebook.include.ab3@332> XINCLUDE "translation.include.ab3"
000130A6 <phrasebook.include.ab3@333> XINCLUDE "translation.include.ab3"
000130A8 <phrasebook.include.ab3@335> XINCLUDE "translation.include.ab3"
000130AE <phrasebook.include.ab3@336> XINCLUDE "translation.include.ab3"
000130B8 <phrasebook.include.ab3@338> XINCLUDE "translation.include.ab3"
000130C2 <phrasebook.include.ab3@339> XINCLUDE "translation.include.ab3"
000130DC <phrasebook.include.ab3@340> XINCLUDE "translation.include.ab3"
00013106 <phrasebook.include.ab3@379> XINCLUDE "translation.include.ab3"
0001311C <phrasebook.include.ab3@380> XINCLUDE "translation.include.ab3"
00013126 <phrasebook.include.ab3@381> XINCLUDE "translation.include.ab3"
0001319E <phrasebook.include.ab3@382> XINCLUDE "translation.include.ab3"
000131DA <phrasebook.include.ab3@383> XINCLUDE "translation.include.ab3"
000131EA <phrasebook.include.ab3@384> XINCLUDE "translation.include.ab3"
0001320A <phrasebook.include.ab3@385> XINCLUDE "translation.include.ab3"
0001322A <phrasebook.include.ab3@386> XINCLUDE "translation.include.ab3"
0001324A <phrasebook.include.ab3@387> XINCLUDE "translation.include.ab3"
00013280 <phrasebook.include.ab3@388> XINCLUDE "translation.include.ab3"
000132A8 <phrasebook.include.ab3@389> XINCLUDE "translation.include.ab3"
000132E0 <phrasebook.include.ab3@390> XINCLUDE "translation.include.ab3"
00013344 <phrasebook.include.ab3@391> XINCLUDE "translation.include.ab3"
00013364 <phrasebook.include.ab3@392> XINCLUDE "translation.include.ab3"
000133E0 <phrasebook.include.ab3@393> XINCLUDE "translation.include.ab3"
00013418 <phrasebook.include.ab3@396> XINCLUDE "translation.include.ab3"
0001348E <phrasebook.include.ab3@397> XINCLUDE "translation.include.ab3"
000134AE <phrasebook.include.ab3@398> XINCLUDE "translation.include.ab3"
0001352A <phrasebook.include.ab3@399> XINCLUDE "translation.include.ab3"
00013562 <phrasebook.include.ab3@402> XINCLUDE "translation.include.ab3"
000135D8 <phrasebook.include.ab3@403> XINCLUDE "translation.include.ab3"
000135F8 <phrasebook.include.ab3@404> XINCLUDE "translation.include.ab3"
00013674 <phrasebook.include.ab3@405> XINCLUDE "translation.include.ab3"
000136A0 <phrasebook.include.ab3@408> XINCLUDE "translation.include.ab3"
000136A8 <phrasebook.include.ab3@409> XINCLUDE "translation.include.ab3"
000136EE <phrasebook.include.ab3@410> XINCLUDE "translation.include.ab3"
0001370E <phrasebook.include.ab3@411> XINCLUDE "translation.include.ab3"
00013718 <phrasebook.include.ab3@412> XINCLUDE "translation.include.ab3"
00013730 <phrasebook.include.ab3@413> XINCLUDE "translation.include.ab3"
00013740 <phrasebook.include.ab3@414> XINCLUDE "translation.include.ab3"
00013778 <phrasebook.include.ab3@415> XINCLUDE "translation.include.ab3"
000137AA <phrasebook.include.ab3@416> XINCLUDE "translation.include.ab3"
000137BC <phrasebook.include.ab3@419> XINCLUDE "translation.include.ab3"
0001383E <phrasebook.include.ab3@420> XINCLUDE "translation.include.ab3"
00013848 <phrasebook.include.ab3@421> XINCLUDE "translation.include.ab3"
0001387A <phrasebook.include.ab3@422> XINCLUDE "translation.include.ab3"
000138AC <phrasebook.include.ab3@423> XINCLUDE "translation.include.ab3"
000138D8 <phrasebook.include.ab3@428> XINCLUDE "translation.include.ab3"
00013904 <phrasebook.include.ab3@429> XINCLUDE "translation.include.ab3"
00013926 <phrasebook.include.ab3@430> XINCLUDE "translation.include.ab3"
00013930 <phrasebook.include.ab3@432> XINCLUDE "translation.include.ab3"
0001394A <phrasebook.include.ab3@433> XINCLUDE "translation.include.ab3"
0001394A <translation.include.ab3@31> XINCLUDE "translation.include.ab3"
00013960 <translation.include.ab3@43> XINCLUDE "translation.include.ab3"
0001397C <translation.include.ab3@44> XINCLUDE "translation.include.ab3"
0001397E <translation.include.ab3@45> XINCLUDE "translation.include.ab3"
000139AC <translation.include.ab3@46> XINCLUDE "translation.include.ab3"
000139AC <AmiBlitz3.ab3@91> XINCLUDE "translation.include.ab3"
000139AC <ted.include.ab3@1> XINCLUDE "/Shared/ted.include.ab3"
000139C6 <ted.include.ab3@161> XINCLUDE "/Shared/ted.include.ab3"
000139D0 <ted.include.ab3@162> XINCLUDE "/Shared/ted.include.ab3"
000139F2 <ted.include.ab3@163> XINCLUDE "/Shared/ted.include.ab3"
00013A0A <ted.include.ab3@164> XINCLUDE "/Shared/ted.include.ab3"
00013A24 <ted.include.ab3@166> XINCLUDE "/Shared/ted.include.ab3"
00013A56 <ted.include.ab3@167> XINCLUDE "/Shared/ted.include.ab3"
00013A60 <ted.include.ab3@168> XINCLUDE "/Shared/ted.include.ab3"
00013A66 <ted.include.ab3@170> XINCLUDE "/Shared/ted.include.ab3"
00013A78 <ted.include.ab3@171> XINCLUDE "/Shared/ted.include.ab3"
00013AEC <ted.include.ab3@172> XINCLUDE "/Shared/ted.include.ab3"
00013AF2 <ted.include.ab3@173> XINCLUDE "/Shared/ted.include.ab3"
00013B2C <ted.include.ab3@174> XINCLUDE "/Shared/ted.include.ab3"
00013B36 <ted.include.ab3@177> XINCLUDE "/Shared/ted.include.ab3"
00013B3C <ted.include.ab3@178> XINCLUDE "/Shared/ted.include.ab3"
00013B52 <ted.include.ab3@180> XINCLUDE "/Shared/ted.include.ab3"
00013B5C <ted.include.ab3@181> XINCLUDE "/Shared/ted.include.ab3"
00013B74 <ted.include.ab3@183> XINCLUDE "/Shared/ted.include.ab3"
00013B76 <ted.include.ab3@185> XINCLUDE "/Shared/ted.include.ab3"
00013BA4 <ted.include.ab3@186> XINCLUDE "/Shared/ted.include.ab3"
00013BBE <ted.include.ab3@190> XINCLUDE "/Shared/ted.include.ab3"
00013BD4 <ted.include.ab3@191> XINCLUDE "/Shared/ted.include.ab3"
00013C08 <ted.include.ab3@192> XINCLUDE "/Shared/ted.include.ab3"
00013C0C <ted.include.ab3@194> XINCLUDE "/Shared/ted.include.ab3"
00013C26 <ted.include.ab3@196> XINCLUDE "/Shared/ted.include.ab3"
00013C3C <ted.include.ab3@197> XINCLUDE "/Shared/ted.include.ab3"
00013C70 <ted.include.ab3@198> XINCLUDE "/Shared/ted.include.ab3"
00013C74 <ted.include.ab3@200> XINCLUDE "/Shared/ted.include.ab3"
00013C8E <ted.include.ab3@216> XINCLUDE "/Shared/ted.include.ab3"
00013CA4 <ted.include.ab3@217> XINCLUDE "/Shared/ted.include.ab3"
00013CD8 <ted.include.ab3@218> XINCLUDE "/Shared/ted.include.ab3"
00013CDC <ted.include.ab3@220> XINCLUDE "/Shared/ted.include.ab3"
00013CF6 <ted.include.ab3@236> XINCLUDE "/Shared/ted.include.ab3"
00013D0C <ted.include.ab3@237> XINCLUDE "/Shared/ted.include.ab3"
00013D40 <ted.include.ab3@238> XINCLUDE "/Shared/ted.include.ab3"
00013D44 <ted.include.ab3@240> XINCLUDE "/Shared/ted.include.ab3"
00013D5E <ted.include.ab3@242> XINCLUDE "/Shared/ted.include.ab3"
00013D74 <ted.include.ab3@243> XINCLUDE "/Shared/ted.include.ab3"
00013DA8 <ted.include.ab3@244> XINCLUDE "/Shared/ted.include.ab3"
00013DAC <ted.include.ab3@246> XINCLUDE "/Shared/ted.include.ab3"
00013DAC <AmiBlitz3.ab3@92> XINCLUDE "/Shared/ted.include.ab3"
00013DAC <CLIModeSupport.ab3@1> XINCLUDE "CLIModeSupport.ab3"
00013DC2 <CLIModeSupport.ab3@4> XINCLUDE "CLIModeSupport.ab3"
00013DD8 <CLIModeSupport.ab3@7> XINCLUDE "CLIModeSupport.ab3"
00013DE6 <CLIModeSupport.ab3@8> XINCLUDE "CLIModeSupport.ab3"
00013DF4 <CLIModeSupport.ab3@9> XINCLUDE "CLIModeSupport.ab3"
00013DFE <CLIModeSupport.ab3@11> XINCLUDE "CLIModeSupport.ab3"
00013E10 <CLIModeSupport.ab3@12> XINCLUDE "CLIModeSupport.ab3"
00013E22 <CLIModeSupport.ab3@13> XINCLUDE "CLIModeSupport.ab3"
00013E28 <CLIModeSupport.ab3@14> XINCLUDE "CLIModeSupport.ab3"
00013E62 <CLIModeSupport.ab3@15> XINCLUDE "CLIModeSupport.ab3"
00013E66 <CLIModeSupport.ab3@18> XINCLUDE "CLIModeSupport.ab3"
00013E7C <CLIModeSupport.ab3@21> XINCLUDE "CLIModeSupport.ab3"
00013E92 <CLIModeSupport.ab3@23> XINCLUDE "CLIModeSupport.ab3"
00013E9E <CLIModeSupport.ab3@24> XINCLUDE "CLIModeSupport.ab3"
00013EAA <CLIModeSupport.ab3@25> XINCLUDE "CLIModeSupport.ab3"
00013EB2 <CLIModeSupport.ab3@26> XINCLUDE "CLIModeSupport.ab3"
00013EBA <CLIModeSupport.ab3@27> XINCLUDE "CLIModeSupport.ab3"
00013EBE <CLIModeSupport.ab3@28> XINCLUDE "CLIModeSupport.ab3"
00013EE8 <CLIModeSupport.ab3@47> XINCLUDE "CLIModeSupport.ab3"
00013F14 <CLIModeSupport.ab3@49> XINCLUDE "CLIModeSupport.ab3"
00013F26 <CLIModeSupport.ab3@50> XINCLUDE "CLIModeSupport.ab3"
00013F3E <CLIModeSupport.ab3@52> XINCLUDE "CLIModeSupport.ab3"
00013F54 <CLIModeSupport.ab3@56> XINCLUDE "CLIModeSupport.ab3"
00013F5A <CLIModeSupport.ab3@58> XINCLUDE "CLIModeSupport.ab3"
00013F90 <CLIModeSupport.ab3@61> XINCLUDE "CLIModeSupport.ab3"
00013FC8 <CLIModeSupport.ab3@62> XINCLUDE "CLIModeSupport.ab3"
00014000 <CLIModeSupport.ab3@63> XINCLUDE "CLIModeSupport.ab3"
00014038 <CLIModeSupport.ab3@64> XINCLUDE "CLIModeSupport.ab3"
00014070 <CLIModeSupport.ab3@65> XINCLUDE "CLIModeSupport.ab3"
000140A8 <CLIModeSupport.ab3@66> XINCLUDE "CLIModeSupport.ab3"
000140E0 <CLIModeSupport.ab3@67> XINCLUDE "CLIModeSupport.ab3"
00014118 <CLIModeSupport.ab3@68> XINCLUDE "CLIModeSupport.ab3"
00014150 <CLIModeSupport.ab3@69> XINCLUDE "CLIModeSupport.ab3"
00014188 <CLIModeSupport.ab3@70> XINCLUDE "CLIModeSupport.ab3"
000141C0 <CLIModeSupport.ab3@71> XINCLUDE "CLIModeSupport.ab3"
000141F8 <CLIModeSupport.ab3@72> XINCLUDE "CLIModeSupport.ab3"
00014230 <CLIModeSupport.ab3@73> XINCLUDE "CLIModeSupport.ab3"
00014264 <CLIModeSupport.ab3@74> XINCLUDE "CLIModeSupport.ab3"
0001426E <CLIModeSupport.ab3@75> XINCLUDE "CLIModeSupport.ab3"
00014278 <CLIModeSupport.ab3@77> XINCLUDE "CLIModeSupport.ab3"
00014282 <CLIModeSupport.ab3@78> XINCLUDE "CLIModeSupport.ab3"
000142AC <CLIModeSupport.ab3@82> XINCLUDE "CLIModeSupport.ab3"
000142B6 <CLIModeSupport.ab3@83> XINCLUDE "CLIModeSupport.ab3"
000142BA <CLIModeSupport.ab3@84> XINCLUDE "CLIModeSupport.ab3"
000142EE <CLIModeSupport.ab3@85> XINCLUDE "CLIModeSupport.ab3"
0001430C <CLIModeSupport.ab3@88> XINCLUDE "CLIModeSupport.ab3"
00014316 <CLIModeSupport.ab3@89> XINCLUDE "CLIModeSupport.ab3"
00014322 <CLIModeSupport.ab3@90> XINCLUDE "CLIModeSupport.ab3"
00014328 <CLIModeSupport.ab3@91> XINCLUDE "CLIModeSupport.ab3"
00014334 <CLIModeSupport.ab3@92> XINCLUDE "CLIModeSupport.ab3"
0001433A <CLIModeSupport.ab3@93> XINCLUDE "CLIModeSupport.ab3"
00014346 <CLIModeSupport.ab3@94> XINCLUDE "CLIModeSupport.ab3"
0001434C <CLIModeSupport.ab3@95> XINCLUDE "CLIModeSupport.ab3"
00014352 <CLIModeSupport.ab3@98> XINCLUDE "CLIModeSupport.ab3"
0001438C <CLIModeSupport.ab3@99> XINCLUDE "CLIModeSupport.ab3"
00014392 <CLIModeSupport.ab3@100> XINCLUDE "CLIModeSupport.ab3"
000143A8 <CLIModeSupport.ab3@103> XINCLUDE "CLIModeSupport.ab3"
000143B2 <CLIModeSupport.ab3@105> XINCLUDE "CLIModeSupport.ab3"
000143B8 <CLIModeSupport.ab3@106> XINCLUDE "CLIModeSupport.ab3"
000143BE <CLIModeSupport.ab3@108> XINCLUDE "CLIModeSupport.ab3"
000143BF <CLIModeSupport.ab3@110> XINCLUDE "CLIModeSupport.ab3"
000143C0 <CLIModeSupport.ab3@111> XINCLUDE "CLIModeSupport.ab3"
000143C1 <CLIModeSupport.ab3@112> XINCLUDE "CLIModeSupport.ab3"
000143C2 <CLIModeSupport.ab3@113> XINCLUDE "CLIModeSupport.ab3"
000143C4 <CLIModeSupport.ab3@116> XINCLUDE "CLIModeSupport.ab3"
000143C6 <CLIModeSupport.ab3@117> XINCLUDE "CLIModeSupport.ab3"
000143C8 <CLIModeSupport.ab3@120> XINCLUDE "CLIModeSupport.ab3"
000143CA <CLIModeSupport.ab3@121> XINCLUDE "CLIModeSupport.ab3"
000143CE <CLIModeSupport.ab3@122> XINCLUDE "CLIModeSupport.ab3"
000143D0 <CLIModeSupport.ab3@124> XINCLUDE "CLIModeSupport.ab3"
000143D2 <CLIModeSupport.ab3@125> XINCLUDE "CLIModeSupport.ab3"
000143D6 <CLIModeSupport.ab3@126> XINCLUDE "CLIModeSupport.ab3"
000143D8 <CLIModeSupport.ab3@127> XINCLUDE "CLIModeSupport.ab3"
000143DA <CLIModeSupport.ab3@147> XINCLUDE "CLIModeSupport.ab3"
000143DC <CLIModeSupport.ab3@148> XINCLUDE "CLIModeSupport.ab3"
000143DE <CLIModeSupport.ab3@149> XINCLUDE "CLIModeSupport.ab3"
000143E0 <CLIModeSupport.ab3@150> XINCLUDE "CLIModeSupport.ab3"
000143E2 <CLIModeSupport.ab3@153> XINCLUDE "CLIModeSupport.ab3"
000143E6 <CLIModeSupport.ab3@154> XINCLUDE "CLIModeSupport.ab3"
000143EC <CLIModeSupport.ab3@157> XINCLUDE "CLIModeSupport.ab3"
000143F0 <CLIModeSupport.ab3@158> XINCLUDE "CLIModeSupport.ab3"
000143F2 <CLIModeSupport.ab3@161> XINCLUDE "CLIModeSupport.ab3"
000143F6 <CLIModeSupport.ab3@162> XINCLUDE "CLIModeSupport.ab3"
000143F8 <CLIModeSupport.ab3@163> XINCLUDE "CLIModeSupport.ab3"
000143FA <CLIModeSupport.ab3@164> XINCLUDE "CLIModeSupport.ab3"
000143FC <CLIModeSupport.ab3@165> XINCLUDE "CLIModeSupport.ab3"
000143FE <CLIModeSupport.ab3@166> XINCLUDE "CLIModeSupport.ab3"
00014400 <CLIModeSupport.ab3@169> XINCLUDE "CLIModeSupport.ab3"
00014402 <CLIModeSupport.ab3@170> XINCLUDE "CLIModeSupport.ab3"
00014408 <CLIModeSupport.ab3@171> XINCLUDE "CLIModeSupport.ab3"
0001440E <CLIModeSupport.ab3@172> XINCLUDE "CLIModeSupport.ab3"
00014410 <CLIModeSupport.ab3@175> XINCLUDE "CLIModeSupport.ab3"
00014414 <CLIModeSupport.ab3@176> XINCLUDE "CLIModeSupport.ab3"
00014418 <CLIModeSupport.ab3@177> XINCLUDE "CLIModeSupport.ab3"
0001441E <CLIModeSupport.ab3@178> XINCLUDE "CLIModeSupport.ab3"
00014424 <CLIModeSupport.ab3@180> XINCLUDE "CLIModeSupport.ab3"
00014428 <CLIModeSupport.ab3@181> XINCLUDE "CLIModeSupport.ab3"
0001442C <CLIModeSupport.ab3@183> XINCLUDE "CLIModeSupport.ab3"
00014432 <CLIModeSupport.ab3@185> XINCLUDE "CLIModeSupport.ab3"
00014436 <CLIModeSupport.ab3@186> XINCLUDE "CLIModeSupport.ab3"
0001443C <CLIModeSupport.ab3@189> XINCLUDE "CLIModeSupport.ab3"
00014442 <CLIModeSupport.ab3@192> XINCLUDE "CLIModeSupport.ab3"
00014446 <CLIModeSupport.ab3@193> XINCLUDE "CLIModeSupport.ab3"
0001444C <CLIModeSupport.ab3@196> XINCLUDE "CLIModeSupport.ab3"
00014450 <CLIModeSupport.ab3@197> XINCLUDE "CLIModeSupport.ab3"
00014456 <CLIModeSupport.ab3@198> XINCLUDE "CLIModeSupport.ab3"
0001445A <CLIModeSupport.ab3@199> XINCLUDE "CLIModeSupport.ab3"
0001445E <CLIModeSupport.ab3@202> XINCLUDE "CLIModeSupport.ab3"
00014462 <CLIModeSupport.ab3@203> XINCLUDE "CLIModeSupport.ab3"
00014466 <CLIModeSupport.ab3@204> XINCLUDE "CLIModeSupport.ab3"
0001446A <CLIModeSupport.ab3@205> XINCLUDE "CLIModeSupport.ab3"
0001446E <CLIModeSupport.ab3@206> XINCLUDE "CLIModeSupport.ab3"
00014472 <CLIModeSupport.ab3@208> XINCLUDE "CLIModeSupport.ab3"
00014476 <CLIModeSupport.ab3@209> XINCLUDE "CLIModeSupport.ab3"
0001447A <CLIModeSupport.ab3@210> XINCLUDE "CLIModeSupport.ab3"
0001447E <CLIModeSupport.ab3@211> XINCLUDE "CLIModeSupport.ab3"
00014482 <CLIModeSupport.ab3@212> XINCLUDE "CLIModeSupport.ab3"
00014486 <CLIModeSupport.ab3@213> XINCLUDE "CLIModeSupport.ab3"
0001448C <CLIModeSupport.ab3@214> XINCLUDE "CLIModeSupport.ab3"
00014490 <CLIModeSupport.ab3@215> XINCLUDE "CLIModeSupport.ab3"
00014496 <CLIModeSupport.ab3@218> XINCLUDE "CLIModeSupport.ab3"
00014498 <CLIModeSupport.ab3@219> XINCLUDE "CLIModeSupport.ab3"
0001449C <CLIModeSupport.ab3@220> XINCLUDE "CLIModeSupport.ab3"
000144A0 <CLIModeSupport.ab3@221> XINCLUDE "CLIModeSupport.ab3"
000144A4 <CLIModeSupport.ab3@224> XINCLUDE "CLIModeSupport.ab3"
000144A8 <CLIModeSupport.ab3@225> XINCLUDE "CLIModeSupport.ab3"
000144AC <CLIModeSupport.ab3@226> XINCLUDE "CLIModeSupport.ab3"
000144B0 <CLIModeSupport.ab3@227> XINCLUDE "CLIModeSupport.ab3"
000144B4 <CLIModeSupport.ab3@228> XINCLUDE "CLIModeSupport.ab3"
000144B8 <CLIModeSupport.ab3@229> XINCLUDE "CLIModeSupport.ab3"
000144BE <CLIModeSupport.ab3@232> XINCLUDE "CLIModeSupport.ab3"
000144C0 <CLIModeSupport.ab3@233> XINCLUDE "CLIModeSupport.ab3"
000144C4 <CLIModeSupport.ab3@234> XINCLUDE "CLIModeSupport.ab3"
000144C8 <CLIModeSupport.ab3@235> XINCLUDE "CLIModeSupport.ab3"
000144CC <CLIModeSupport.ab3@236> XINCLUDE "CLIModeSupport.ab3"
000144D0 <CLIModeSupport.ab3@237> XINCLUDE "CLIModeSupport.ab3"
000144D4 <CLIModeSupport.ab3@239> XINCLUDE "CLIModeSupport.ab3"
000144D8 <CLIModeSupport.ab3@240> XINCLUDE "CLIModeSupport.ab3"
000144DC <CLIModeSupport.ab3@241> XINCLUDE "CLIModeSupport.ab3"
000144E0 <CLIModeSupport.ab3@242> XINCLUDE "CLIModeSupport.ab3"
000144E4 <CLIModeSupport.ab3@243> XINCLUDE "CLIModeSupport.ab3"
000144E8 <CLIModeSupport.ab3@244> XINCLUDE "CLIModeSupport.ab3"
000144EC <CLIModeSupport.ab3@245> XINCLUDE "CLIModeSupport.ab3"
000144F0 <CLIModeSupport.ab3@246> XINCLUDE "CLIModeSupport.ab3"
000144F4 <CLIModeSupport.ab3@247> XINCLUDE "CLIModeSupport.ab3"
000144F8 <CLIModeSupport.ab3@248> XINCLUDE "CLIModeSupport.ab3"
000144FC <CLIModeSupport.ab3@249> XINCLUDE "CLIModeSupport.ab3"
00014500 <CLIModeSupport.ab3@250> XINCLUDE "CLIModeSupport.ab3"
00014504 <CLIModeSupport.ab3@251> XINCLUDE "CLIModeSupport.ab3"
00014508 <CLIModeSupport.ab3@252> XINCLUDE "CLIModeSupport.ab3"
0001450E <CLIModeSupport.ab3@255> XINCLUDE "CLIModeSupport.ab3"
00014510 <CLIModeSupport.ab3@256> XINCLUDE "CLIModeSupport.ab3"
00014514 <CLIModeSupport.ab3@257> XINCLUDE "CLIModeSupport.ab3"
00014518 <CLIModeSupport.ab3@258> XINCLUDE "CLIModeSupport.ab3"
0001451E <CLIModeSupport.ab3@259> XINCLUDE "CLIModeSupport.ab3"
00014524 <CLIModeSupport.ab3@261> XINCLUDE "CLIModeSupport.ab3"
00014528 <CLIModeSupport.ab3@262> XINCLUDE "CLIModeSupport.ab3"
0001452C <CLIModeSupport.ab3@263> XINCLUDE "CLIModeSupport.ab3"
00014532 <CLIModeSupport.ab3@265> XINCLUDE "CLIModeSupport.ab3"
00014536 <CLIModeSupport.ab3@266> XINCLUDE "CLIModeSupport.ab3"
0001453C <CLIModeSupport.ab3@267> XINCLUDE "CLIModeSupport.ab3"
00014540 <CLIModeSupport.ab3@268> XINCLUDE "CLIModeSupport.ab3"
00014542 <CLIModeSupport.ab3@271> XINCLUDE "CLIModeSupport.ab3"
00014548 <CLIModeSupport.ab3@272> XINCLUDE "CLIModeSupport.ab3"
0001454A <CLIModeSupport.ab3@275> XINCLUDE "CLIModeSupport.ab3"
0001454C <CLIModeSupport.ab3@276> XINCLUDE "CLIModeSupport.ab3"
0001454E <CLIModeSupport.ab3@277> XINCLUDE "CLIModeSupport.ab3"
00014550 <CLIModeSupport.ab3@280> XINCLUDE "CLIModeSupport.ab3"
00014554 <CLIModeSupport.ab3@281> XINCLUDE "CLIModeSupport.ab3"
00014556 <CLIModeSupport.ab3@282> XINCLUDE "CLIModeSupport.ab3"
0001455A <CLIModeSupport.ab3@283> XINCLUDE "CLIModeSupport.ab3"
0001455E <CLIModeSupport.ab3@284> XINCLUDE "CLIModeSupport.ab3"
00014562 <CLIModeSupport.ab3@285> XINCLUDE "CLIModeSupport.ab3"
00014564 <CLIModeSupport.ab3@286> XINCLUDE "CLIModeSupport.ab3"
00014568 <CLIModeSupport.ab3@287> XINCLUDE "CLIModeSupport.ab3"
0001456A <CLIModeSupport.ab3@290> XINCLUDE "CLIModeSupport.ab3"
0001456C <CLIModeSupport.ab3@291> XINCLUDE "CLIModeSupport.ab3"
00014570 <CLIModeSupport.ab3@292> XINCLUDE "CLIModeSupport.ab3"
00014572 <CLIModeSupport.ab3@293> XINCLUDE "CLIModeSupport.ab3"
00014576 <CLIModeSupport.ab3@294> XINCLUDE "CLIModeSupport.ab3"
00014578 <CLIModeSupport.ab3@297> XINCLUDE "CLIModeSupport.ab3"
0001457C <CLIModeSupport.ab3@298> XINCLUDE "CLIModeSupport.ab3"
00014582 <CLIModeSupport.ab3@301> XINCLUDE "CLIModeSupport.ab3"
00014584 <CLIModeSupport.ab3@302> XINCLUDE "CLIModeSupport.ab3"
00014588 <CLIModeSupport.ab3@303> XINCLUDE "CLIModeSupport.ab3"
0001458C <CLIModeSupport.ab3@304> XINCLUDE "CLIModeSupport.ab3"
00014592 <CLIModeSupport.ab3@305> XINCLUDE "CLIModeSupport.ab3"
00014598 <CLIModeSupport.ab3@307> XINCLUDE "CLIModeSupport.ab3"
0001459C <CLIModeSupport.ab3@308> XINCLUDE "CLIModeSupport.ab3"
000145A0 <CLIModeSupport.ab3@309> XINCLUDE "CLIModeSupport.ab3"
000145A6 <CLIModeSupport.ab3@311> XINCLUDE "CLIModeSupport.ab3"
000145AA <CLIModeSupport.ab3@312> XINCLUDE "CLIModeSupport.ab3"
000145B0 <CLIModeSupport.ab3@313> XINCLUDE "CLIModeSupport.ab3"
000145B4 <CLIModeSupport.ab3@314> XINCLUDE "CLIModeSupport.ab3"
000145B8 <CLIModeSupport.ab3@315> XINCLUDE "CLIModeSupport.ab3"
000145BA <CLIModeSupport.ab3@318> XINCLUDE "CLIModeSupport.ab3"
000145BE <CLIModeSupport.ab3@319> XINCLUDE "CLIModeSupport.ab3"
000145C4 <CLIModeSupport.ab3@320> XINCLUDE "CLIModeSupport.ab3"
000145C8 <CLIModeSupport.ab3@321> XINCLUDE "CLIModeSupport.ab3"
000145CC <CLIModeSupport.ab3@322> XINCLUDE "CLIModeSupport.ab3"
000145D0 <CLIModeSupport.ab3@323> XINCLUDE "CLIModeSupport.ab3"
000145D4 <CLIModeSupport.ab3@324> XINCLUDE "CLIModeSupport.ab3"
000145D8 <CLIModeSupport.ab3@325> XINCLUDE "CLIModeSupport.ab3"
000145DC <CLIModeSupport.ab3@326> XINCLUDE "CLIModeSupport.ab3"
000145E0 <CLIModeSupport.ab3@328> XINCLUDE "CLIModeSupport.ab3"
000145E4 <CLIModeSupport.ab3@329> XINCLUDE "CLIModeSupport.ab3"
000145E6 <CLIModeSupport.ab3@330> XINCLUDE "CLIModeSupport.ab3"
000145E8 <CLIModeSupport.ab3@331> XINCLUDE "CLIModeSupport.ab3"
000145EA <CLIModeSupport.ab3@332> XINCLUDE "CLIModeSupport.ab3"
000145EE <CLIModeSupport.ab3@333> XINCLUDE "CLIModeSupport.ab3"
000145F0 <CLIModeSupport.ab3@334> XINCLUDE "CLIModeSupport.ab3"
000145F2 <CLIModeSupport.ab3@335> XINCLUDE "CLIModeSupport.ab3"
000145F4 <CLIModeSupport.ab3@336> XINCLUDE "CLIModeSupport.ab3"
000145F6 <CLIModeSupport.ab3@337> XINCLUDE "CLIModeSupport.ab3"
000145F8 <CLIModeSupport.ab3@338> XINCLUDE "CLIModeSupport.ab3"
000145FC <CLIModeSupport.ab3@339> XINCLUDE "CLIModeSupport.ab3"
000145FE <CLIModeSupport.ab3@340> XINCLUDE "CLIModeSupport.ab3"
00014602 <CLIModeSupport.ab3@341> XINCLUDE "CLIModeSupport.ab3"
00014604 <CLIModeSupport.ab3@344> XINCLUDE "CLIModeSupport.ab3"
00014606 <CLIModeSupport.ab3@345> XINCLUDE "CLIModeSupport.ab3"
00014608 <CLIModeSupport.ab3@346> XINCLUDE "CLIModeSupport.ab3"
0001460C <CLIModeSupport.ab3@347> XINCLUDE "CLIModeSupport.ab3"
0001460E <CLIModeSupport.ab3@348> XINCLUDE "CLIModeSupport.ab3"
00014610 <CLIModeSupport.ab3@351> XINCLUDE "CLIModeSupport.ab3"
00014612 <CLIModeSupport.ab3@354> XINCLUDE "CLIModeSupport.ab3"
00014616 <CLIModeSupport.ab3@355> XINCLUDE "CLIModeSupport.ab3"
0001461A <CLIModeSupport.ab3@358> XINCLUDE "CLIModeSupport.ab3"
0001461E <CLIModeSupport.ab3@359> XINCLUDE "CLIModeSupport.ab3"
00014622 <CLIModeSupport.ab3@360> XINCLUDE "CLIModeSupport.ab3"
00014626 <CLIModeSupport.ab3@361> XINCLUDE "CLIModeSupport.ab3"
0001462A <CLIModeSupport.ab3@362> XINCLUDE "CLIModeSupport.ab3"
0001462E <CLIModeSupport.ab3@363> XINCLUDE "CLIModeSupport.ab3"
00014632 <CLIModeSupport.ab3@364> XINCLUDE "CLIModeSupport.ab3"
00014636 <CLIModeSupport.ab3@365> XINCLUDE "CLIModeSupport.ab3"
00014638 <CLIModeSupport.ab3@368> XINCLUDE "CLIModeSupport.ab3"
0001463A <CLIModeSupport.ab3@371> XINCLUDE "CLIModeSupport.ab3"
0001463C <CLIModeSupport.ab3@374> XINCLUDE "CLIModeSupport.ab3"
00014640 <CLIModeSupport.ab3@375> XINCLUDE "CLIModeSupport.ab3"
00014642 <CLIModeSupport.ab3@376> XINCLUDE "CLIModeSupport.ab3"
00014644 <CLIModeSupport.ab3@377> XINCLUDE "CLIModeSupport.ab3"
0001465A <CLIModeSupport.ab3@382> XINCLUDE "CLIModeSupport.ab3"
00014660 <CLIModeSupport.ab3@383> XINCLUDE "CLIModeSupport.ab3"
0001469E <CLIModeSupport.ab3@385> XINCLUDE "CLIModeSupport.ab3"
000146A2 <CLIModeSupport.ab3@386> XINCLUDE "CLIModeSupport.ab3"
000146AC <CLIModeSupport.ab3@387> XINCLUDE "CLIModeSupport.ab3"
000146AE <CLIModeSupport.ab3@388> XINCLUDE "CLIModeSupport.ab3"
000146E2 <CLIModeSupport.ab3@389> XINCLUDE "CLIModeSupport.ab3"
000146F2 <CLIModeSupport.ab3@390> XINCLUDE "CLIModeSupport.ab3"
000146F4 <CLIModeSupport.ab3@393> XINCLUDE "CLIModeSupport.ab3"
0001472C <CLIModeSupport.ab3@394> XINCLUDE "CLIModeSupport.ab3"
00014764 <CLIModeSupport.ab3@395> XINCLUDE "CLIModeSupport.ab3"
0001479C <CLIModeSupport.ab3@396> XINCLUDE "CLIModeSupport.ab3"
000147A6 <CLIModeSupport.ab3@398> XINCLUDE "CLIModeSupport.ab3"
000147AC <CLIModeSupport.ab3@399> XINCLUDE "CLIModeSupport.ab3"
000147C2 <CLIModeSupport.ab3@403> XINCLUDE "CLIModeSupport.ab3"
00014800 <CLIModeSupport.ab3@404> XINCLUDE "CLIModeSupport.ab3"
00014804 <CLIModeSupport.ab3@405> XINCLUDE "CLIModeSupport.ab3"
0001480C <CLIModeSupport.ab3@406> XINCLUDE "CLIModeSupport.ab3"
0001484A <CLIModeSupport.ab3@407> XINCLUDE "CLIModeSupport.ab3"
0001484C <CLIModeSupport.ab3@408> XINCLUDE "CLIModeSupport.ab3"
00014850 <CLIModeSupport.ab3@409> XINCLUDE "CLIModeSupport.ab3"
0001488E <CLIModeSupport.ab3@411> XINCLUDE "CLIModeSupport.ab3"
00014892 <CLIModeSupport.ab3@412> XINCLUDE "CLIModeSupport.ab3"
000148D0 <CLIModeSupport.ab3@414> XINCLUDE "CLIModeSupport.ab3"
000148D4 <CLIModeSupport.ab3@415> XINCLUDE "CLIModeSupport.ab3"
000148FE <CLIModeSupport.ab3@417> XINCLUDE "CLIModeSupport.ab3"
00014908 <CLIModeSupport.ab3@418> XINCLUDE "CLIModeSupport.ab3"
0001491C <CLIModeSupport.ab3@419> XINCLUDE "CLIModeSupport.ab3"
00014942 <CLIModeSupport.ab3@420> XINCLUDE "CLIModeSupport.ab3"
00014948 <CLIModeSupport.ab3@421> XINCLUDE "CLIModeSupport.ab3"
00014956 <CLIModeSupport.ab3@422> XINCLUDE "CLIModeSupport.ab3"
0001495C <CLIModeSupport.ab3@423> XINCLUDE "CLIModeSupport.ab3"
00014994 <CLIModeSupport.ab3@425> XINCLUDE "CLIModeSupport.ab3"
00014998 <CLIModeSupport.ab3@428> XINCLUDE "CLIModeSupport.ab3"
000149C2 <CLIModeSupport.ab3@431> XINCLUDE "CLIModeSupport.ab3"
000149C8 <CLIModeSupport.ab3@432> XINCLUDE "CLIModeSupport.ab3"
000149E8 <CLIModeSupport.ab3@433> XINCLUDE "CLIModeSupport.ab3"
000149F2 <CLIModeSupport.ab3@434> XINCLUDE "CLIModeSupport.ab3"
000149F6 <CLIModeSupport.ab3@435> XINCLUDE "CLIModeSupport.ab3"
000149F8 <CLIModeSupport.ab3@436> XINCLUDE "CLIModeSupport.ab3"
00014A16 <CLIModeSupport.ab3@437> XINCLUDE "CLIModeSupport.ab3"
00014A18 <CLIModeSupport.ab3@438> XINCLUDE "CLIModeSupport.ab3"
00014A1E <CLIModeSupport.ab3@439> XINCLUDE "CLIModeSupport.ab3"
00014A24 <CLIModeSupport.ab3@440> XINCLUDE "CLIModeSupport.ab3"
00014A4E <CLIModeSupport.ab3@442> XINCLUDE "CLIModeSupport.ab3"
00014A50 <CLIModeSupport.ab3@443> XINCLUDE "CLIModeSupport.ab3"
00014A7E <CLIModeSupport.ab3@444> XINCLUDE "CLIModeSupport.ab3"
00014A82 <CLIModeSupport.ab3@445> XINCLUDE "CLIModeSupport.ab3"
00014AB0 <CLIModeSupport.ab3@446> XINCLUDE "CLIModeSupport.ab3"
00014AB4 <CLIModeSupport.ab3@447> XINCLUDE "CLIModeSupport.ab3"
00014ADA <CLIModeSupport.ab3@449> XINCLUDE "CLIModeSupport.ab3"
00014AEA <CLIModeSupport.ab3@450> XINCLUDE "CLIModeSupport.ab3"
00014AF0 <CLIModeSupport.ab3@451> XINCLUDE "CLIModeSupport.ab3"
00014AF6 <CLIModeSupport.ab3@452> XINCLUDE "CLIModeSupport.ab3"
00014B30 <CLIModeSupport.ab3@453> XINCLUDE "CLIModeSupport.ab3"
00014B3A <CLIModeSupport.ab3@455> XINCLUDE "CLIModeSupport.ab3"
00014B54 <CLIModeSupport.ab3@456> XINCLUDE "CLIModeSupport.ab3"
00014B72 <CLIModeSupport.ab3@468> XINCLUDE "CLIModeSupport.ab3"
00014B7A <CLIModeSupport.ab3@469> XINCLUDE "CLIModeSupport.ab3"
00014B80 <CLIModeSupport.ab3@470> XINCLUDE "CLIModeSupport.ab3"
00014B86 <CLIModeSupport.ab3@471> XINCLUDE "CLIModeSupport.ab3"
00014BA8 <CLIModeSupport.ab3@472> XINCLUDE "CLIModeSupport.ab3"
00014BC0 <CLIModeSupport.ab3@474> XINCLUDE "CLIModeSupport.ab3"
00014BE6 <CLIModeSupport.ab3@475> XINCLUDE "CLIModeSupport.ab3"
00014C10 <CLIModeSupport.ab3@476> XINCLUDE "CLIModeSupport.ab3"
00014C1E <CLIModeSupport.ab3@477> XINCLUDE "CLIModeSupport.ab3"
00014C24 <CLIModeSupport.ab3@478> XINCLUDE "CLIModeSupport.ab3"
00014C38 <CLIModeSupport.ab3@479> XINCLUDE "CLIModeSupport.ab3"
00014C50 <CLIModeSupport.ab3@481> XINCLUDE "CLIModeSupport.ab3"
00014C5E <CLIModeSupport.ab3@482> XINCLUDE "CLIModeSupport.ab3"
00014C72 <CLIModeSupport.ab3@483> XINCLUDE "CLIModeSupport.ab3"
00014CA8 <CLIModeSupport.ab3@484> XINCLUDE "CLIModeSupport.ab3"
00014CB6 <CLIModeSupport.ab3@485> XINCLUDE "CLIModeSupport.ab3"
00014CE6 <CLIModeSupport.ab3@486> XINCLUDE "CLIModeSupport.ab3"
00014CF4 <CLIModeSupport.ab3@487> XINCLUDE "CLIModeSupport.ab3"
00014CFA <CLIModeSupport.ab3@488> XINCLUDE "CLIModeSupport.ab3"
00014D08 <CLIModeSupport.ab3@489> XINCLUDE "CLIModeSupport.ab3"
00014D0E <CLIModeSupport.ab3@490> XINCLUDE "CLIModeSupport.ab3"
00014D14 <CLIModeSupport.ab3@492> XINCLUDE "CLIModeSupport.ab3"
00014D22 <CLIModeSupport.ab3@493> XINCLUDE "CLIModeSupport.ab3"
00014D24 <CLIModeSupport.ab3@494> XINCLUDE "CLIModeSupport.ab3"
00014D2A <CLIModeSupport.ab3@496> XINCLUDE "CLIModeSupport.ab3"
00014D40 <CLIModeSupport.ab3@498> XINCLUDE "CLIModeSupport.ab3"
00014D4A <CLIModeSupport.ab3@499> XINCLUDE "CLIModeSupport.ab3"
00014D50 <CLIModeSupport.ab3@500> XINCLUDE "CLIModeSupport.ab3"
00014D7A <CLIModeSupport.ab3@504> XINCLUDE "CLIModeSupport.ab3"
00014DB8 <CLIModeSupport.ab3@505> XINCLUDE "CLIModeSupport.ab3"
00014DBC <CLIModeSupport.ab3@506> XINCLUDE "CLIModeSupport.ab3"
00014DFA <CLIModeSupport.ab3@507> XINCLUDE "CLIModeSupport.ab3"
00014DFE <CLIModeSupport.ab3@508> XINCLUDE "CLIModeSupport.ab3"
00014E3C <CLIModeSupport.ab3@509> XINCLUDE "CLIModeSupport.ab3"
00014E40 <CLIModeSupport.ab3@510> XINCLUDE "CLIModeSupport.ab3"
00014E48 <CLIModeSupport.ab3@512> XINCLUDE "CLIModeSupport.ab3"
00014E50 <CLIModeSupport.ab3@513> XINCLUDE "CLIModeSupport.ab3"
00014E94 <CLIModeSupport.ab3@515> XINCLUDE "CLIModeSupport.ab3"
00014EA6 <CLIModeSupport.ab3@516> XINCLUDE "CLIModeSupport.ab3"
00014EB4 <CLIModeSupport.ab3@517> XINCLUDE "CLIModeSupport.ab3"
00014EE8 <CLIModeSupport.ab3@518> XINCLUDE "CLIModeSupport.ab3"
00014F0C <CLIModeSupport.ab3@520> XINCLUDE "CLIModeSupport.ab3"
00014F16 <CLIModeSupport.ab3@521> XINCLUDE "CLIModeSupport.ab3"
00014F30 <CLIModeSupport.ab3@522> XINCLUDE "CLIModeSupport.ab3"
00014F44 <CLIModeSupport.ab3@523> XINCLUDE "CLIModeSupport.ab3"
00014F9C <CLIModeSupport.ab3@524> XINCLUDE "CLIModeSupport.ab3"
0001503C <CLIModeSupport.ab3@525> XINCLUDE "CLIModeSupport.ab3"
00015044 <CLIModeSupport.ab3@526> XINCLUDE "CLIModeSupport.ab3"
0001507C <CLIModeSupport.ab3@527> XINCLUDE "CLIModeSupport.ab3"
00015082 <CLIModeSupport.ab3@528> XINCLUDE "CLIModeSupport.ab3"
00015092 <CLIModeSupport.ab3@529> XINCLUDE "CLIModeSupport.ab3"
000150BA <CLIModeSupport.ab3@532> XINCLUDE "CLIModeSupport.ab3"
000150E2 <CLIModeSupport.ab3@533> XINCLUDE "CLIModeSupport.ab3"
000150EA <CLIModeSupport.ab3@534> XINCLUDE "CLIModeSupport.ab3"
000150F0 <CLIModeSupport.ab3@535> XINCLUDE "CLIModeSupport.ab3"
000150F8 <CLIModeSupport.ab3@536> XINCLUDE "CLIModeSupport.ab3"
00015100 <CLIModeSupport.ab3@537> XINCLUDE "CLIModeSupport.ab3"
00015128 <CLIModeSupport.ab3@538> XINCLUDE "CLIModeSupport.ab3"
00015130 <CLIModeSupport.ab3@539> XINCLUDE "CLIModeSupport.ab3"
00015138 <CLIModeSupport.ab3@540> XINCLUDE "CLIModeSupport.ab3"
0001513E <CLIModeSupport.ab3@541> XINCLUDE "CLIModeSupport.ab3"
00015144 <CLIModeSupport.ab3@542> XINCLUDE "CLIModeSupport.ab3"
0001514A <CLIModeSupport.ab3@543> XINCLUDE "CLIModeSupport.ab3"
00015150 <CLIModeSupport.ab3@544> XINCLUDE "CLIModeSupport.ab3"
00015156 <CLIModeSupport.ab3@545> XINCLUDE "CLIModeSupport.ab3"
0001515C <CLIModeSupport.ab3@546> XINCLUDE "CLIModeSupport.ab3"
00015162 <CLIModeSupport.ab3@547> XINCLUDE "CLIModeSupport.ab3"
00015168 <CLIModeSupport.ab3@548> XINCLUDE "CLIModeSupport.ab3"
00015170 <CLIModeSupport.ab3@549> XINCLUDE "CLIModeSupport.ab3"
00015178 <CLIModeSupport.ab3@550> XINCLUDE "CLIModeSupport.ab3"
000151A0 <CLIModeSupport.ab3@551> XINCLUDE "CLIModeSupport.ab3"
000151A6 <CLIModeSupport.ab3@552> XINCLUDE "CLIModeSupport.ab3"
000151AC <CLIModeSupport.ab3@553> XINCLUDE "CLIModeSupport.ab3"
000151B4 <CLIModeSupport.ab3@554> XINCLUDE "CLIModeSupport.ab3"
000151D4 <CLIModeSupport.ab3@558> XINCLUDE "CLIModeSupport.ab3"
000151E4 <CLIModeSupport.ab3@560> XINCLUDE "CLIModeSupport.ab3"
000151F4 <CLIModeSupport.ab3@561> XINCLUDE "CLIModeSupport.ab3"
00015204 <CLIModeSupport.ab3@563> XINCLUDE "CLIModeSupport.ab3"
00015214 <CLIModeSupport.ab3@564> XINCLUDE "CLIModeSupport.ab3"
00015224 <CLIModeSupport.ab3@565> XINCLUDE "CLIModeSupport.ab3"
00015234 <CLIModeSupport.ab3@566> XINCLUDE "CLIModeSupport.ab3"
00015244 <CLIModeSupport.ab3@567> XINCLUDE "CLIModeSupport.ab3"
00015254 <CLIModeSupport.ab3@568> XINCLUDE "CLIModeSupport.ab3"
00015264 <CLIModeSupport.ab3@569> XINCLUDE "CLIModeSupport.ab3"
00015274 <CLIModeSupport.ab3@570> XINCLUDE "CLIModeSupport.ab3"
00015284 <CLIModeSupport.ab3@571> XINCLUDE "CLIModeSupport.ab3"
00015294 <CLIModeSupport.ab3@572> XINCLUDE "CLIModeSupport.ab3"
000152A4 <CLIModeSupport.ab3@573> XINCLUDE "CLIModeSupport.ab3"
000152B4 <CLIModeSupport.ab3@574> XINCLUDE "CLIModeSupport.ab3"
000152C4 <CLIModeSupport.ab3@575> XINCLUDE "CLIModeSupport.ab3"
000152D4 <CLIModeSupport.ab3@576> XINCLUDE "CLIModeSupport.ab3"
000152E6 <CLIModeSupport.ab3@578> XINCLUDE "CLIModeSupport.ab3"
000152F8 <CLIModeSupport.ab3@579> XINCLUDE "CLIModeSupport.ab3"
0001530A <CLIModeSupport.ab3@580> XINCLUDE "CLIModeSupport.ab3"
0001531C <CLIModeSupport.ab3@581> XINCLUDE "CLIModeSupport.ab3"
0001532E <CLIModeSupport.ab3@582> XINCLUDE "CLIModeSupport.ab3"
00015340 <CLIModeSupport.ab3@583> XINCLUDE "CLIModeSupport.ab3"
0001535E <CLIModeSupport.ab3@585> XINCLUDE "CLIModeSupport.ab3"
00015364 <CLIModeSupport.ab3@586> XINCLUDE "CLIModeSupport.ab3"
0001536A <CLIModeSupport.ab3@588> XINCLUDE "CLIModeSupport.ab3"
00015394 <CLIModeSupport.ab3@589> XINCLUDE "CLIModeSupport.ab3"
000153A6 <CLIModeSupport.ab3@590> XINCLUDE "CLIModeSupport.ab3"
000153DA <CLIModeSupport.ab3@593> XINCLUDE "CLIModeSupport.ab3"
000153F2 <CLIModeSupport.ab3@594> XINCLUDE "CLIModeSupport.ab3"
0001543E <CLIModeSupport.ab3@595> XINCLUDE "CLIModeSupport.ab3"
00015450 <CLIModeSupport.ab3@596> XINCLUDE "CLIModeSupport.ab3"
000154A6 <CLIModeSupport.ab3@597> XINCLUDE "CLIModeSupport.ab3"
00015518 <CLIModeSupport.ab3@598> XINCLUDE "CLIModeSupport.ab3"
0001551E <CLIModeSupport.ab3@599> XINCLUDE "CLIModeSupport.ab3"
00015552 <CLIModeSupport.ab3@600> XINCLUDE "CLIModeSupport.ab3"
0001557A <CLIModeSupport.ab3@601> XINCLUDE "CLIModeSupport.ab3"
000155A2 <CLIModeSupport.ab3@603> XINCLUDE "CLIModeSupport.ab3"
000155DC <CLIModeSupport.ab3@604> XINCLUDE "CLIModeSupport.ab3"
000155F4 <CLIModeSupport.ab3@605> XINCLUDE "CLIModeSupport.ab3"
00015678 <CLIModeSupport.ab3@606> XINCLUDE "CLIModeSupport.ab3"
00015692 <CLIModeSupport.ab3@607> XINCLUDE "CLIModeSupport.ab3"
000156E0 <CLIModeSupport.ab3@608> XINCLUDE "CLIModeSupport.ab3"
000156F0 <CLIModeSupport.ab3@610> XINCLUDE "CLIModeSupport.ab3"
000156F8 <CLIModeSupport.ab3@612> XINCLUDE "CLIModeSupport.ab3"
0001570C <CLIModeSupport.ab3@613> XINCLUDE "CLIModeSupport.ab3"
00015752 <CLIModeSupport.ab3@614> XINCLUDE "CLIModeSupport.ab3"
00015758 <CLIModeSupport.ab3@615> XINCLUDE "CLIModeSupport.ab3"
000157A2 <CLIModeSupport.ab3@616> XINCLUDE "CLIModeSupport.ab3"
0001580C <CLIModeSupport.ab3@617> XINCLUDE "CLIModeSupport.ab3"
00015872 <CLIModeSupport.ab3@618> XINCLUDE "CLIModeSupport.ab3"
000158A6 <CLIModeSupport.ab3@619> XINCLUDE "CLIModeSupport.ab3"
000158D2 <CLIModeSupport.ab3@621> XINCLUDE "CLIModeSupport.ab3"
00015920 <CLIModeSupport.ab3@622> XINCLUDE "CLIModeSupport.ab3"
00015944 <CLIModeSupport.ab3@623> XINCLUDE "CLIModeSupport.ab3"
0001594A <CLIModeSupport.ab3@624> XINCLUDE "CLIModeSupport.ab3"
00015958 <CLIModeSupport.ab3@626> XINCLUDE "CLIModeSupport.ab3"
000159B6 <CLIModeSupport.ab3@628> XINCLUDE "CLIModeSupport.ab3"
00015A14 <CLIModeSupport.ab3@629> XINCLUDE "CLIModeSupport.ab3"
00015A3E <CLIModeSupport.ab3@630> XINCLUDE "CLIModeSupport.ab3"
00015A48 <CLIModeSupport.ab3@631> XINCLUDE "CLIModeSupport.ab3"
00015A50 <CLIModeSupport.ab3@632> XINCLUDE "CLIModeSupport.ab3"
00015A8E <CLIModeSupport.ab3@633> XINCLUDE "CLIModeSupport.ab3"
00015ADA <CLIModeSupport.ab3@634> XINCLUDE "CLIModeSupport.ab3"
00015AEC <CLIModeSupport.ab3@635> XINCLUDE "CLIModeSupport.ab3"
00015B42 <CLIModeSupport.ab3@636> XINCLUDE "CLIModeSupport.ab3"
00015BBA <CLIModeSupport.ab3@637> XINCLUDE "CLIModeSupport.ab3"
00015BC0 <CLIModeSupport.ab3@638> XINCLUDE "CLIModeSupport.ab3"
00015BF4 <CLIModeSupport.ab3@639> XINCLUDE "CLIModeSupport.ab3"
00015C1C <CLIModeSupport.ab3@640> XINCLUDE "CLIModeSupport.ab3"
00015C52 <CLIModeSupport.ab3@643> XINCLUDE "CLIModeSupport.ab3"
00015C60 <CLIModeSupport.ab3@644> XINCLUDE "CLIModeSupport.ab3"
00015C6E <CLIModeSupport.ab3@645> XINCLUDE "CLIModeSupport.ab3"
00015CE2 <CLIModeSupport.ab3@646> XINCLUDE "CLIModeSupport.ab3"
00015CE8 <CLIModeSupport.ab3@647> XINCLUDE "CLIModeSupport.ab3"
00015D32 <CLIModeSupport.ab3@648> XINCLUDE "CLIModeSupport.ab3"
00015D7C <CLIModeSupport.ab3@649> XINCLUDE "CLIModeSupport.ab3"
00015DAC <CLIModeSupport.ab3@650> XINCLUDE "CLIModeSupport.ab3"
00015DDC <CLIModeSupport.ab3@651> XINCLUDE "CLIModeSupport.ab3"
00015E06 <CLIModeSupport.ab3@652> XINCLUDE "CLIModeSupport.ab3"
00015E58 <CLIModeSupport.ab3@653> XINCLUDE "CLIModeSupport.ab3"
00015EAE <CLIModeSupport.ab3@654> XINCLUDE "CLIModeSupport.ab3"
00015EFE <CLIModeSupport.ab3@655> XINCLUDE "CLIModeSupport.ab3"
00015F64 <CLIModeSupport.ab3@656> XINCLUDE "CLIModeSupport.ab3"
00015FD0 <CLIModeSupport.ab3@657> XINCLUDE "CLIModeSupport.ab3"
00015FFC <CLIModeSupport.ab3@658> XINCLUDE "CLIModeSupport.ab3"
0001602C <CLIModeSupport.ab3@659> XINCLUDE "CLIModeSupport.ab3"
000160A8 <CLIModeSupport.ab3@660> XINCLUDE "CLIModeSupport.ab3"
000160D8 <CLIModeSupport.ab3@661> XINCLUDE "CLIModeSupport.ab3"
00016108 <CLIModeSupport.ab3@662> XINCLUDE "CLIModeSupport.ab3"
00016138 <CLIModeSupport.ab3@663> XINCLUDE "CLIModeSupport.ab3"
00016168 <CLIModeSupport.ab3@664> XINCLUDE "CLIModeSupport.ab3"
00016198 <CLIModeSupport.ab3@665> XINCLUDE "CLIModeSupport.ab3"
000161C8 <CLIModeSupport.ab3@666> XINCLUDE "CLIModeSupport.ab3"
000161F8 <CLIModeSupport.ab3@667> XINCLUDE "CLIModeSupport.ab3"
00016228 <CLIModeSupport.ab3@668> XINCLUDE "CLIModeSupport.ab3"
00016258 <CLIModeSupport.ab3@669> XINCLUDE "CLIModeSupport.ab3"
00016288 <CLIModeSupport.ab3@670> XINCLUDE "CLIModeSupport.ab3"
00016304 <CLIModeSupport.ab3@671> XINCLUDE "CLIModeSupport.ab3"
00016336 <CLIModeSupport.ab3@672> XINCLUDE "CLIModeSupport.ab3"
00016368 <CLIModeSupport.ab3@673> XINCLUDE "CLIModeSupport.ab3"
00016398 <CLIModeSupport.ab3@674> XINCLUDE "CLIModeSupport.ab3"
0001639E <CLIModeSupport.ab3@675> XINCLUDE "CLIModeSupport.ab3"
00016412 <CLIModeSupport.ab3@676> XINCLUDE "CLIModeSupport.ab3"
0001647E <CLIModeSupport.ab3@677> XINCLUDE "CLIModeSupport.ab3"
00016490 <CLIModeSupport.ab3@678> XINCLUDE "CLIModeSupport.ab3"
000164BE <CLIModeSupport.ab3@679> XINCLUDE "CLIModeSupport.ab3"
000164E6 <CLIModeSupport.ab3@680> XINCLUDE "CLIModeSupport.ab3"
000164FA <CLIModeSupport.ab3@681> XINCLUDE "CLIModeSupport.ab3"
00016524 <CLIModeSupport.ab3@682> XINCLUDE "CLIModeSupport.ab3"
00016568 <CLIModeSupport.ab3@683> XINCLUDE "CLIModeSupport.ab3"
00016578 <CLIModeSupport.ab3@684> XINCLUDE "CLIModeSupport.ab3"
00016588 <CLIModeSupport.ab3@685> XINCLUDE "CLIModeSupport.ab3"
0001658E <CLIModeSupport.ab3@686> XINCLUDE "CLIModeSupport.ab3"
0001659E <CLIModeSupport.ab3@688> XINCLUDE "CLIModeSupport.ab3"
000165AC <CLIModeSupport.ab3@692> XINCLUDE "CLIModeSupport.ab3"
000165B6 <CLIModeSupport.ab3@695> XINCLUDE "CLIModeSupport.ab3"
000165EE <CLIModeSupport.ab3@698> XINCLUDE "CLIModeSupport.ab3"
00016626 <CLIModeSupport.ab3@699> XINCLUDE "CLIModeSupport.ab3"
0001665E <CLIModeSupport.ab3@700> XINCLUDE "CLIModeSupport.ab3"
0001666E <CLIModeSupport.ab3@701> XINCLUDE "CLIModeSupport.ab3"
000166D6 <CLIModeSupport.ab3@702> XINCLUDE "CLIModeSupport.ab3"
0001670E <CLIModeSupport.ab3@703> XINCLUDE "CLIModeSupport.ab3"
0001671E <CLIModeSupport.ab3@704> XINCLUDE "CLIModeSupport.ab3"
0001672E <CLIModeSupport.ab3@705> XINCLUDE "CLIModeSupport.ab3"
00016796 <CLIModeSupport.ab3@706> XINCLUDE "CLIModeSupport.ab3"
000167FE <CLIModeSupport.ab3@707> XINCLUDE "CLIModeSupport.ab3"
00016866 <CLIModeSupport.ab3@708> XINCLUDE "CLIModeSupport.ab3"
000168CE <CLIModeSupport.ab3@709> XINCLUDE "CLIModeSupport.ab3"
00016936 <CLIModeSupport.ab3@710> XINCLUDE "CLIModeSupport.ab3"
0001699E <CLIModeSupport.ab3@711> XINCLUDE "CLIModeSupport.ab3"
00016A06 <CLIModeSupport.ab3@712> XINCLUDE "CLIModeSupport.ab3"
00016A6E <CLIModeSupport.ab3@713> XINCLUDE "CLIModeSupport.ab3"
00016A7E <CLIModeSupport.ab3@714> XINCLUDE "CLIModeSupport.ab3"
00016AB6 <CLIModeSupport.ab3@716> XINCLUDE "CLIModeSupport.ab3"
00016AF0 <CLIModeSupport.ab3@717> XINCLUDE "CLIModeSupport.ab3"
00016B2A <CLIModeSupport.ab3@718> XINCLUDE "CLIModeSupport.ab3"
00016B62 <CLIModeSupport.ab3@719> XINCLUDE "CLIModeSupport.ab3"
00016B7E <CLIModeSupport.ab3@720> XINCLUDE "CLIModeSupport.ab3"
00016BB6 <CLIModeSupport.ab3@721> XINCLUDE "CLIModeSupport.ab3"
00016BDC <CLIModeSupport.ab3@723> XINCLUDE "CLIModeSupport.ab3"
00016BE4 <CLIModeSupport.ab3@726> XINCLUDE "CLIModeSupport.ab3"
00016BEC <CLIModeSupport.ab3@728> XINCLUDE "CLIModeSupport.ab3"
00016BF4 <CLIModeSupport.ab3@729> XINCLUDE "CLIModeSupport.ab3"
00016BFC <CLIModeSupport.ab3@731> XINCLUDE "CLIModeSupport.ab3"
00016C10 <CLIModeSupport.ab3@732> XINCLUDE "CLIModeSupport.ab3"
00016C3E <CLIModeSupport.ab3@733> XINCLUDE "CLIModeSupport.ab3"
00016C58 <CLIModeSupport.ab3@734> XINCLUDE "CLIModeSupport.ab3"
00016C66 <CLIModeSupport.ab3@735> XINCLUDE "CLIModeSupport.ab3"
00016CD2 <CLIModeSupport.ab3@736> XINCLUDE "CLIModeSupport.ab3"
00016CF8 <CLIModeSupport.ab3@737> XINCLUDE "CLIModeSupport.ab3"
00016D14 <CLIModeSupport.ab3@738> XINCLUDE "CLIModeSupport.ab3"
00016D1E <CLIModeSupport.ab3@739> XINCLUDE "CLIModeSupport.ab3"
00016D28 <CLIModeSupport.ab3@740> XINCLUDE "CLIModeSupport.ab3"
00016D34 <CLIModeSupport.ab3@741> XINCLUDE "CLIModeSupport.ab3"
00016D42 <CLIModeSupport.ab3@742> XINCLUDE "CLIModeSupport.ab3"
00016D4E <CLIModeSupport.ab3@743> XINCLUDE "CLIModeSupport.ab3"
00016D8A <CLIModeSupport.ab3@744> XINCLUDE "CLIModeSupport.ab3"
00016DA4 <CLIModeSupport.ab3@745> XINCLUDE "CLIModeSupport.ab3"
00016DB2 <CLIModeSupport.ab3@746> XINCLUDE "CLIModeSupport.ab3"
00016DD2 <CLIModeSupport.ab3@747> XINCLUDE "CLIModeSupport.ab3"
00016DE0 <CLIModeSupport.ab3@748> XINCLUDE "CLIModeSupport.ab3"
00016DEE <CLIModeSupport.ab3@749> XINCLUDE "CLIModeSupport.ab3"
00016DF4 <CLIModeSupport.ab3@751> XINCLUDE "CLIModeSupport.ab3"
00016E04 <CLIModeSupport.ab3@752> XINCLUDE "CLIModeSupport.ab3"
00016E08 <CLIModeSupport.ab3@754> XINCLUDE "CLIModeSupport.ab3"
00016E3C <CLIModeSupport.ab3@755> XINCLUDE "CLIModeSupport.ab3"
00016E70 <CLIModeSupport.ab3@756> XINCLUDE "CLIModeSupport.ab3"
00016E74 <CLIModeSupport.ab3@757> XINCLUDE "CLIModeSupport.ab3"
00016EA8 <CLIModeSupport.ab3@758> XINCLUDE "CLIModeSupport.ab3"
00016EAC <CLIModeSupport.ab3@759> XINCLUDE "CLIModeSupport.ab3"
00016EE0 <CLIModeSupport.ab3@760> XINCLUDE "CLIModeSupport.ab3"
00016EE6 <CLIModeSupport.ab3@761> XINCLUDE "CLIModeSupport.ab3"
00016F1C <CLIModeSupport.ab3@763> XINCLUDE "CLIModeSupport.ab3"
00016F52 <CLIModeSupport.ab3@764> XINCLUDE "CLIModeSupport.ab3"
00016F88 <CLIModeSupport.ab3@765> XINCLUDE "CLIModeSupport.ab3"
00016FC0 <CLIModeSupport.ab3@766> XINCLUDE "CLIModeSupport.ab3"
00016FF8 <CLIModeSupport.ab3@767> XINCLUDE "CLIModeSupport.ab3"
00017098 <CLIModeSupport.ab3@769> XINCLUDE "CLIModeSupport.ab3"
000170D8 <CLIModeSupport.ab3@770> XINCLUDE "CLIModeSupport.ab3"
0001710E <CLIModeSupport.ab3@771> XINCLUDE "CLIModeSupport.ab3"
00017144 <CLIModeSupport.ab3@772> XINCLUDE "CLIModeSupport.ab3"
0001717C <CLIModeSupport.ab3@775> XINCLUDE "CLIModeSupport.ab3"
0001719A <CLIModeSupport.ab3@776> XINCLUDE "CLIModeSupport.ab3"
0001719E <CLIModeSupport.ab3@777> XINCLUDE "CLIModeSupport.ab3"
000171A4 <CLIModeSupport.ab3@778> XINCLUDE "CLIModeSupport.ab3"
000171AA <CLIModeSupport.ab3@779> XINCLUDE "CLIModeSupport.ab3"
000171AE <CLIModeSupport.ab3@780> XINCLUDE "CLIModeSupport.ab3"
000171D8 <CLIModeSupport.ab3@781> XINCLUDE "CLIModeSupport.ab3"
000171EC <CLIModeSupport.ab3@785> XINCLUDE "CLIModeSupport.ab3"
0001722A <CLIModeSupport.ab3@786> XINCLUDE "CLIModeSupport.ab3"
0001725E <CLIModeSupport.ab3@787> XINCLUDE "CLIModeSupport.ab3"
00017294 <CLIModeSupport.ab3@791> XINCLUDE "CLIModeSupport.ab3"
000172EC <CLIModeSupport.ab3@793> XINCLUDE "CLIModeSupport.ab3"
0001731A <CLIModeSupport.ab3@794> XINCLUDE "CLIModeSupport.ab3"
0001731E <CLIModeSupport.ab3@795> XINCLUDE "CLIModeSupport.ab3"
00017354 <CLIModeSupport.ab3@796> XINCLUDE "CLIModeSupport.ab3"
00017382 <CLIModeSupport.ab3@797> XINCLUDE "CLIModeSupport.ab3"
000173B0 <CLIModeSupport.ab3@799> XINCLUDE "CLIModeSupport.ab3"
000173B4 <CLIModeSupport.ab3@800> XINCLUDE "CLIModeSupport.ab3"
000173EA <CLIModeSupport.ab3@801> XINCLUDE "CLIModeSupport.ab3"
00017418 <CLIModeSupport.ab3@803> XINCLUDE "CLIModeSupport.ab3"
0001741C <CLIModeSupport.ab3@804> XINCLUDE "CLIModeSupport.ab3"
00017480 <CLIModeSupport.ab3@805> XINCLUDE "CLIModeSupport.ab3"
00017486 <CLIModeSupport.ab3@808> XINCLUDE "CLIModeSupport.ab3"
000174C0 <CLIModeSupport.ab3@809> XINCLUDE "CLIModeSupport.ab3"
000174CA <CLIModeSupport.ab3@812> XINCLUDE "CLIModeSupport.ab3"
000174D4 <CLIModeSupport.ab3@814> XINCLUDE "CLIModeSupport.ab3"
000174EE <CLIModeSupport.ab3@815> XINCLUDE "CLIModeSupport.ab3"
00017518 <CLIModeSupport.ab3@818> XINCLUDE "CLIModeSupport.ab3"
0001751E <CLIModeSupport.ab3@819> XINCLUDE "CLIModeSupport.ab3"
0001753E <CLIModeSupport.ab3@820> XINCLUDE "CLIModeSupport.ab3"
00017548 <CLIModeSupport.ab3@821> XINCLUDE "CLIModeSupport.ab3"
0001754C <CLIModeSupport.ab3@822> XINCLUDE "CLIModeSupport.ab3"
0001754E <CLIModeSupport.ab3@823> XINCLUDE "CLIModeSupport.ab3"
0001756C <CLIModeSupport.ab3@824> XINCLUDE "CLIModeSupport.ab3"
0001756E <CLIModeSupport.ab3@825> XINCLUDE "CLIModeSupport.ab3"
00017574 <CLIModeSupport.ab3@826> XINCLUDE "CLIModeSupport.ab3"
0001757A <CLIModeSupport.ab3@828> XINCLUDE "CLIModeSupport.ab3"
000175A4 <CLIModeSupport.ab3@829> XINCLUDE "CLIModeSupport.ab3"
000175A6 <CLIModeSupport.ab3@830> XINCLUDE "CLIModeSupport.ab3"
000175D4 <CLIModeSupport.ab3@831> XINCLUDE "CLIModeSupport.ab3"
000175D8 <CLIModeSupport.ab3@832> XINCLUDE "CLIModeSupport.ab3"
00017606 <CLIModeSupport.ab3@833> XINCLUDE "CLIModeSupport.ab3"
0001760A <CLIModeSupport.ab3@834> XINCLUDE "CLIModeSupport.ab3"
00017630 <CLIModeSupport.ab3@835> XINCLUDE "CLIModeSupport.ab3"
00017640 <CLIModeSupport.ab3@836> XINCLUDE "CLIModeSupport.ab3"
00017646 <CLIModeSupport.ab3@837> XINCLUDE "CLIModeSupport.ab3"
0001764C <CLIModeSupport.ab3@838> XINCLUDE "CLIModeSupport.ab3"
00017686 <CLIModeSupport.ab3@839> XINCLUDE "CLIModeSupport.ab3"
00017690 <CLIModeSupport.ab3@841> XINCLUDE "CLIModeSupport.ab3"
000176AA <CLIModeSupport.ab3@842> XINCLUDE "CLIModeSupport.ab3"
000176C8 <CLIModeSupport.ab3@845> XINCLUDE "CLIModeSupport.ab3"
000176F2 <CLIModeSupport.ab3@846> XINCLUDE "CLIModeSupport.ab3"
00017720 <CLIModeSupport.ab3@847> XINCLUDE "CLIModeSupport.ab3"
000177B0 <CLIModeSupport.ab3@848> XINCLUDE "CLIModeSupport.ab3"
000177BA <CLIModeSupport.ab3@850> XINCLUDE "CLIModeSupport.ab3"
000177CE <CLIModeSupport.ab3@851> XINCLUDE "CLIModeSupport.ab3"
0001780A <CLIModeSupport.ab3@852> XINCLUDE "CLIModeSupport.ab3"
00017846 <CLIModeSupport.ab3@853> XINCLUDE "CLIModeSupport.ab3"
00017882 <CLIModeSupport.ab3@854> XINCLUDE "CLIModeSupport.ab3"
000178BE <CLIModeSupport.ab3@855> XINCLUDE "CLIModeSupport.ab3"
000178FA <CLIModeSupport.ab3@856> XINCLUDE "CLIModeSupport.ab3"
00017900 <CLIModeSupport.ab3@857> XINCLUDE "CLIModeSupport.ab3"
0001793A <CLIModeSupport.ab3@858> XINCLUDE "CLIModeSupport.ab3"
0001794C <CLIModeSupport.ab3@863> XINCLUDE "CLIModeSupport.ab3"
0001795C <CLIModeSupport.ab3@864> XINCLUDE "CLIModeSupport.ab3"
00017968 <CLIModeSupport.ab3@867> XINCLUDE "CLIModeSupport.ab3"
00017982 <CLIModeSupport.ab3@868> XINCLUDE "CLIModeSupport.ab3"
00017984 <CLIModeSupport.ab3@870> XINCLUDE "CLIModeSupport.ab3"
000179A2 <CLIModeSupport.ab3@871> XINCLUDE "CLIModeSupport.ab3"
000179A8 <CLIModeSupport.ab3@872> XINCLUDE "CLIModeSupport.ab3"
000179D2 <CLIModeSupport.ab3@873> XINCLUDE "CLIModeSupport.ab3"
000179D4 <CLIModeSupport.ab3@874> XINCLUDE "CLIModeSupport.ab3"
000179DE <CLIModeSupport.ab3@876> XINCLUDE "CLIModeSupport.ab3"
000179E4 <CLIModeSupport.ab3@877> XINCLUDE "CLIModeSupport.ab3"
000179F6 <CLIModeSupport.ab3@880> XINCLUDE "CLIModeSupport.ab3"
00017A30 <CLIModeSupport.ab3@897> XINCLUDE "CLIModeSupport.ab3"
00017A4A <CLIModeSupport.ab3@901> XINCLUDE "CLIModeSupport.ab3"
00017A5E <CLIModeSupport.ab3@903> XINCLUDE "CLIModeSupport.ab3"
00017AC8 <CLIModeSupport.ab3@904> XINCLUDE "CLIModeSupport.ab3"
00017ACE <CLIModeSupport.ab3@905> XINCLUDE "CLIModeSupport.ab3"
00017B38 <CLIModeSupport.ab3@906> XINCLUDE "CLIModeSupport.ab3"
00017B4C <CLIModeSupport.ab3@909> XINCLUDE "CLIModeSupport.ab3"
00017BB6 <CLIModeSupport.ab3@910> XINCLUDE "CLIModeSupport.ab3"
00017BEC <CLIModeSupport.ab3@911> XINCLUDE "CLIModeSupport.ab3"
00017BF2 <CLIModeSupport.ab3@912> XINCLUDE "CLIModeSupport.ab3"
00017C5C <CLIModeSupport.ab3@913> XINCLUDE "CLIModeSupport.ab3"
00017C70 <CLIModeSupport.ab3@914> XINCLUDE "CLIModeSupport.ab3"
00017CA6 <CLIModeSupport.ab3@915> XINCLUDE "CLIModeSupport.ab3"
00017CAC <CLIModeSupport.ab3@916> XINCLUDE "CLIModeSupport.ab3"
00017CE2 <CLIModeSupport.ab3@917> XINCLUDE "CLIModeSupport.ab3"
00017CF6 <CLIModeSupport.ab3@921> XINCLUDE "CLIModeSupport.ab3"
00017D60 <CLIModeSupport.ab3@922> XINCLUDE "CLIModeSupport.ab3"
00017D66 <CLIModeSupport.ab3@923> XINCLUDE "CLIModeSupport.ab3"
00017DD0 <CLIModeSupport.ab3@924> XINCLUDE "CLIModeSupport.ab3"
00017DE4 <CLIModeSupport.ab3@927> XINCLUDE "CLIModeSupport.ab3"
00017E1A <CLIModeSupport.ab3@928> XINCLUDE "CLIModeSupport.ab3"
00017E20 <CLIModeSupport.ab3@929> XINCLUDE "CLIModeSupport.ab3"
00017E56 <CLIModeSupport.ab3@930> XINCLUDE "CLIModeSupport.ab3"
00017E70 <CLIModeSupport.ab3@935> XINCLUDE "CLIModeSupport.ab3"
00017E84 <CLIModeSupport.ab3@937> XINCLUDE "CLIModeSupport.ab3"
00017EEE <CLIModeSupport.ab3@938> XINCLUDE "CLIModeSupport.ab3"
00017EF4 <CLIModeSupport.ab3@939> XINCLUDE "CLIModeSupport.ab3"
00017F5E <CLIModeSupport.ab3@940> XINCLUDE "CLIModeSupport.ab3"
00017F72 <CLIModeSupport.ab3@943> XINCLUDE "CLIModeSupport.ab3"
00017FDC <CLIModeSupport.ab3@944> XINCLUDE "CLIModeSupport.ab3"
00017FE2 <CLIModeSupport.ab3@945> XINCLUDE "CLIModeSupport.ab3"
0001804C <CLIModeSupport.ab3@946> XINCLUDE "CLIModeSupport.ab3"
00018060 <CLIModeSupport.ab3@949> XINCLUDE "CLIModeSupport.ab3"
000180CA <CLIModeSupport.ab3@950> XINCLUDE "CLIModeSupport.ab3"
000180D0 <CLIModeSupport.ab3@951> XINCLUDE "CLIModeSupport.ab3"
0001813A <CLIModeSupport.ab3@952> XINCLUDE "CLIModeSupport.ab3"
0001814E <CLIModeSupport.ab3@955> XINCLUDE "CLIModeSupport.ab3"
000181B8 <CLIModeSupport.ab3@956> XINCLUDE "CLIModeSupport.ab3"
000181BE <CLIModeSupport.ab3@957> XINCLUDE "CLIModeSupport.ab3"
00018228 <CLIModeSupport.ab3@958> XINCLUDE "CLIModeSupport.ab3"
0001823A <CLIModeSupport.ab3@963> XINCLUDE "CLIModeSupport.ab3"
0001824A <CLIModeSupport.ab3@964> XINCLUDE "CLIModeSupport.ab3"
00018254 <CLIModeSupport.ab3@967> XINCLUDE "CLIModeSupport.ab3"
000182BE <CLIModeSupport.ab3@968> XINCLUDE "CLIModeSupport.ab3"
000182C4 <CLIModeSupport.ab3@969> XINCLUDE "CLIModeSupport.ab3"
0001832E <CLIModeSupport.ab3@970> XINCLUDE "CLIModeSupport.ab3"
00018338 <CLIModeSupport.ab3@973> XINCLUDE "CLIModeSupport.ab3"
000183A2 <CLIModeSupport.ab3@974> XINCLUDE "CLIModeSupport.ab3"
000183D8 <CLIModeSupport.ab3@975> XINCLUDE "CLIModeSupport.ab3"
000183DE <CLIModeSupport.ab3@976> XINCLUDE "CLIModeSupport.ab3"
00018448 <CLIModeSupport.ab3@978> XINCLUDE "CLIModeSupport.ab3"
0001847E <CLIModeSupport.ab3@979> XINCLUDE "CLIModeSupport.ab3"
00018486 <CLIModeSupport.ab3@982> XINCLUDE "CLIModeSupport.ab3"
000184B4 <CLIModeSupport.ab3@984> XINCLUDE "CLIModeSupport.ab3"
000184B8 <CLIModeSupport.ab3@985> XINCLUDE "CLIModeSupport.ab3"
000184E0 <CLIModeSupport.ab3@986> XINCLUDE "CLIModeSupport.ab3"
000184E6 <CLIModeSupport.ab3@989> XINCLUDE "CLIModeSupport.ab3"
000184EC <CLIModeSupport.ab3@992> XINCLUDE "CLIModeSupport.ab3"
000184F2 <CLIModeSupport.ab3@993> XINCLUDE "CLIModeSupport.ab3"
000184F8 <CLIModeSupport.ab3@994> XINCLUDE "CLIModeSupport.ab3"
000184FE <CLIModeSupport.ab3@995> XINCLUDE "CLIModeSupport.ab3"
00018508 <CLIModeSupport.ab3@996> XINCLUDE "CLIModeSupport.ab3"
00018512 <CLIModeSupport.ab3@997> XINCLUDE "CLIModeSupport.ab3"
00018540 <CLIModeSupport.ab3@999> XINCLUDE "CLIModeSupport.ab3"
0001856C <CLIModeSupport.ab3@1001> XINCLUDE "CLIModeSupport.ab3"
00018574 <CLIModeSupport.ab3@1002> XINCLUDE "CLIModeSupport.ab3"
000185DA <CLIModeSupport.ab3@1005> XINCLUDE "CLIModeSupport.ab3"
0001860E <CLIModeSupport.ab3@1006> XINCLUDE "CLIModeSupport.ab3"
00018614 <CLIModeSupport.ab3@1007> XINCLUDE "CLIModeSupport.ab3"
00018694 <CLIModeSupport.ab3@1008> XINCLUDE "CLIModeSupport.ab3"
000186A6 <CLIModeSupport.ab3@1010> XINCLUDE "CLIModeSupport.ab3"
0001870C <CLIModeSupport.ab3@1011> XINCLUDE "CLIModeSupport.ab3"
00018772 <CLIModeSupport.ab3@1012> XINCLUDE "CLIModeSupport.ab3"
00018778 <CLIModeSupport.ab3@1013> XINCLUDE "CLIModeSupport.ab3"
00018780 <CLIModeSupport.ab3@1014> XINCLUDE "CLIModeSupport.ab3"
00018782 <CLIModeSupport.ab3@1018> XINCLUDE "CLIModeSupport.ab3"
000187A0 <CLIModeSupport.ab3@1019> XINCLUDE "CLIModeSupport.ab3"
000187DE <CLIModeSupport.ab3@1020> XINCLUDE "CLIModeSupport.ab3"
0001881C <CLIModeSupport.ab3@1021> XINCLUDE "CLIModeSupport.ab3"
00018822 <CLIModeSupport.ab3@1023> XINCLUDE "CLIModeSupport.ab3"
00018828 <CLIModeSupport.ab3@1024> XINCLUDE "CLIModeSupport.ab3"
0001882E <CLIModeSupport.ab3@1025> XINCLUDE "CLIModeSupport.ab3"
00018838 <CLIModeSupport.ab3@1028> XINCLUDE "CLIModeSupport.ab3"
0001883E <CLIModeSupport.ab3@1029> XINCLUDE "CLIModeSupport.ab3"
00018844 <CLIModeSupport.ab3@1030> XINCLUDE "CLIModeSupport.ab3"
0001884A <CLIModeSupport.ab3@1031> XINCLUDE "CLIModeSupport.ab3"
00018850 <CLIModeSupport.ab3@1032> XINCLUDE "CLIModeSupport.ab3"
00018854 <CLIModeSupport.ab3@1033> XINCLUDE "CLIModeSupport.ab3"
0001885E <CLIModeSupport.ab3@1034> XINCLUDE "CLIModeSupport.ab3"
00018862 <CLIModeSupport.ab3@1035> XINCLUDE "CLIModeSupport.ab3"
0001888C <CLIModeSupport.ab3@1037> XINCLUDE "CLIModeSupport.ab3"
0001888E <CLIModeSupport.ab3@1038> XINCLUDE "CLIModeSupport.ab3"
00018894 <CLIModeSupport.ab3@1040> XINCLUDE "CLIModeSupport.ab3"
00018898 <CLIModeSupport.ab3@1041> XINCLUDE "CLIModeSupport.ab3"
0001889E <CLIModeSupport.ab3@1043> XINCLUDE "CLIModeSupport.ab3"
000188A2 <CLIModeSupport.ab3@1044> XINCLUDE "CLIModeSupport.ab3"
000188B2 <CLIModeSupport.ab3@1046> XINCLUDE "CLIModeSupport.ab3"
0001890C <CLIModeSupport.ab3@1047> XINCLUDE "CLIModeSupport.ab3"
0001891E <CLIModeSupport.ab3@1049> XINCLUDE "CLIModeSupport.ab3"
00018988 <CLIModeSupport.ab3@1050> XINCLUDE "CLIModeSupport.ab3"
0001898E <CLIModeSupport.ab3@1051> XINCLUDE "CLIModeSupport.ab3"
000189D8 <CLIModeSupport.ab3@1052> XINCLUDE "CLIModeSupport.ab3"
000189EA <CLIModeSupport.ab3@1055> XINCLUDE "CLIModeSupport.ab3"
00018A16 <CLIModeSupport.ab3@1056> XINCLUDE "CLIModeSupport.ab3"
00018ABC <CLIModeSupport.ab3@1057> XINCLUDE "CLIModeSupport.ab3"
00018ADA <CLIModeSupport.ab3@1058> XINCLUDE "CLIModeSupport.ab3"
00018AE0 <CLIModeSupport.ab3@1059> XINCLUDE "CLIModeSupport.ab3"
00018B0A <CLIModeSupport.ab3@1060> XINCLUDE "CLIModeSupport.ab3"
00018B14 <CLIModeSupport.ab3@1061> XINCLUDE "CLIModeSupport.ab3"
00018B46 <CLIModeSupport.ab3@1062> XINCLUDE "CLIModeSupport.ab3"
00018B60 <CLIModeSupport.ab3@1063> XINCLUDE "CLIModeSupport.ab3"
00018B74 <CLIModeSupport.ab3@1068> XINCLUDE "CLIModeSupport.ab3"
00018B80 <CLIModeSupport.ab3@1070> XINCLUDE "CLIModeSupport.ab3"
00018B9A <CLIModeSupport.ab3@1071> XINCLUDE "CLIModeSupport.ab3"
00018BA4 <CLIModeSupport.ab3@1073> XINCLUDE "CLIModeSupport.ab3"
00018BBE <CLIModeSupport.ab3@1075> XINCLUDE "CLIModeSupport.ab3"
00018BE8 <CLIModeSupport.ab3@1079> XINCLUDE "CLIModeSupport.ab3"
00018C0C <CLIModeSupport.ab3@1080> XINCLUDE "CLIModeSupport.ab3"
00018C4A <CLIModeSupport.ab3@1081> XINCLUDE "CLIModeSupport.ab3"
00018C4E <CLIModeSupport.ab3@1082> XINCLUDE "CLIModeSupport.ab3"
00018C8C <CLIModeSupport.ab3@1084> XINCLUDE "CLIModeSupport.ab3"
00018C90 <CLIModeSupport.ab3@1085> XINCLUDE "CLIModeSupport.ab3"
00018CCE <CLIModeSupport.ab3@1088> XINCLUDE "CLIModeSupport.ab3"
00018D0C <CLIModeSupport.ab3@1089> XINCLUDE "CLIModeSupport.ab3"
00018D0E <CLIModeSupport.ab3@1090> XINCLUDE "CLIModeSupport.ab3"
00018D42 <CLIModeSupport.ab3@1091> XINCLUDE "CLIModeSupport.ab3"
00018D48 <CLIModeSupport.ab3@1093> XINCLUDE "CLIModeSupport.ab3"
00018D8C <CLIModeSupport.ab3@1094> XINCLUDE "CLIModeSupport.ab3"
00018D9E <CLIModeSupport.ab3@1095> XINCLUDE "CLIModeSupport.ab3"
00018DA6 <CLIModeSupport.ab3@1097> XINCLUDE "CLIModeSupport.ab3"
00018DAC <CLIModeSupport.ab3@1098> XINCLUDE "CLIModeSupport.ab3"
00018DB6 <CLIModeSupport.ab3@1100> XINCLUDE "CLIModeSupport.ab3"
00018DC4 <CLIModeSupport.ab3@1101> XINCLUDE "CLIModeSupport.ab3"
00018DCA <CLIModeSupport.ab3@1102> XINCLUDE "CLIModeSupport.ab3"
00018DF2 <CLIModeSupport.ab3@1103> XINCLUDE "CLIModeSupport.ab3"
00018E0C <CLIModeSupport.ab3@1104> XINCLUDE "CLIModeSupport.ab3"
00018E16 <CLIModeSupport.ab3@1105> XINCLUDE "CLIModeSupport.ab3"
00018E1C <CLIModeSupport.ab3@1106> XINCLUDE "CLIModeSupport.ab3"
00018E3A <CLIModeSupport.ab3@1108> XINCLUDE "CLIModeSupport.ab3"
00018E44 <CLIModeSupport.ab3@1109> XINCLUDE "CLIModeSupport.ab3"
00018E4A <CLIModeSupport.ab3@1110> XINCLUDE "CLIModeSupport.ab3"
00018E50 <CLIModeSupport.ab3@1111> XINCLUDE "CLIModeSupport.ab3"
00018E5A <CLIModeSupport.ab3@1112> XINCLUDE "CLIModeSupport.ab3"
00018E68 <CLIModeSupport.ab3@1113> XINCLUDE "CLIModeSupport.ab3"
00018E6E <CLIModeSupport.ab3@1114> XINCLUDE "CLIModeSupport.ab3"
00018E7E <CLIModeSupport.ab3@1116> XINCLUDE "CLIModeSupport.ab3"
00018EAA <CLIModeSupport.ab3@1117> XINCLUDE "CLIModeSupport.ab3"
00018EC0 <CLIModeSupport.ab3@1118> XINCLUDE "CLIModeSupport.ab3"
00018ECA <CLIModeSupport.ab3@1119> XINCLUDE "CLIModeSupport.ab3"
00018ED0 <CLIModeSupport.ab3@1120> XINCLUDE "CLIModeSupport.ab3"
00018F28 <CLIModeSupport.ab3@1122> XINCLUDE "CLIModeSupport.ab3"
00018F96 <CLIModeSupport.ab3@1124> XINCLUDE "CLIModeSupport.ab3"
00018FAE <CLIModeSupport.ab3@1125> XINCLUDE "CLIModeSupport.ab3"
00018FB4 <CLIModeSupport.ab3@1126> XINCLUDE "CLIModeSupport.ab3"
00018FEC <CLIModeSupport.ab3@1127> XINCLUDE "CLIModeSupport.ab3"
0001901A <CLIModeSupport.ab3@1129> XINCLUDE "CLIModeSupport.ab3"
00019044 <CLIModeSupport.ab3@1130> XINCLUDE "CLIModeSupport.ab3"
0001904E <CLIModeSupport.ab3@1132> XINCLUDE "CLIModeSupport.ab3"
00019076 <CLIModeSupport.ab3@1133> XINCLUDE "CLIModeSupport.ab3"
000190A0 <CLIModeSupport.ab3@1134> XINCLUDE "CLIModeSupport.ab3"
00019142 <CLIModeSupport.ab3@1135> XINCLUDE "CLIModeSupport.ab3"
00019150 <CLIModeSupport.ab3@1136> XINCLUDE "CLIModeSupport.ab3"
000191A0 <CLIModeSupport.ab3@1137> XINCLUDE "CLIModeSupport.ab3"
000191B0 <CLIModeSupport.ab3@1138> XINCLUDE "CLIModeSupport.ab3"
00019278 <CLIModeSupport.ab3@1139> XINCLUDE "CLIModeSupport.ab3"
000192AC <CLIModeSupport.ab3@1141> XINCLUDE "CLIModeSupport.ab3"
000192E0 <CLIModeSupport.ab3@1142> XINCLUDE "CLIModeSupport.ab3"
00019314 <CLIModeSupport.ab3@1143> XINCLUDE "CLIModeSupport.ab3"
00019348 <CLIModeSupport.ab3@1144> XINCLUDE "CLIModeSupport.ab3"
0001937C <CLIModeSupport.ab3@1145> XINCLUDE "CLIModeSupport.ab3"
000193B0 <CLIModeSupport.ab3@1146> XINCLUDE "CLIModeSupport.ab3"
000193E4 <CLIModeSupport.ab3@1147> XINCLUDE "CLIModeSupport.ab3"
00019418 <CLIModeSupport.ab3@1148> XINCLUDE "CLIModeSupport.ab3"
0001941A <CLIModeSupport.ab3@1150> XINCLUDE "CLIModeSupport.ab3"
00019458 <CLIModeSupport.ab3@1151> XINCLUDE "CLIModeSupport.ab3"
0001945C <CLIModeSupport.ab3@1152> XINCLUDE "CLIModeSupport.ab3"
0001949A <CLIModeSupport.ab3@1155> XINCLUDE "CLIModeSupport.ab3"
000194D8 <CLIModeSupport.ab3@1156> XINCLUDE "CLIModeSupport.ab3"
000194DA <CLIModeSupport.ab3@1157> XINCLUDE "CLIModeSupport.ab3"
000194E0 <CLIModeSupport.ab3@1158> XINCLUDE "CLIModeSupport.ab3"
000194E4 <CLIModeSupport.ab3@1159> XINCLUDE "CLIModeSupport.ab3"
000194E6 <CLIModeSupport.ab3@1161> XINCLUDE "CLIModeSupport.ab3"
00019524 <CLIModeSupport.ab3@1162> XINCLUDE "CLIModeSupport.ab3"
00019562 <CLIModeSupport.ab3@1163> XINCLUDE "CLIModeSupport.ab3"
00019564 <CLIModeSupport.ab3@1164> XINCLUDE "CLIModeSupport.ab3"
00019566 <CLIModeSupport.ab3@1165> XINCLUDE "CLIModeSupport.ab3"
00019568 <CLIModeSupport.ab3@1166> XINCLUDE "CLIModeSupport.ab3"
0001956E <CLIModeSupport.ab3@1167> XINCLUDE "CLIModeSupport.ab3"
00019572 <CLIModeSupport.ab3@1168> XINCLUDE "CLIModeSupport.ab3"
00019582 <CLIModeSupport.ab3@1170> XINCLUDE "CLIModeSupport.ab3"
0001959A <CLIModeSupport.ab3@1171> XINCLUDE "CLIModeSupport.ab3"
000195B2 <CLIModeSupport.ab3@1172> XINCLUDE "CLIModeSupport.ab3"
000195CA <CLIModeSupport.ab3@1173> XINCLUDE "CLIModeSupport.ab3"
000195F4 <CLIModeSupport.ab3@1175> XINCLUDE "CLIModeSupport.ab3"
0001961E <CLIModeSupport.ab3@1176> XINCLUDE "CLIModeSupport.ab3"
0001964C <CLIModeSupport.ab3@1178> XINCLUDE "CLIModeSupport.ab3"
00019650 <CLIModeSupport.ab3@1179> XINCLUDE "CLIModeSupport.ab3"
00019678 <CLIModeSupport.ab3@1180> XINCLUDE "CLIModeSupport.ab3"
0001967A <CLIModeSupport.ab3@1181> XINCLUDE "CLIModeSupport.ab3"
000196B8 <CLIModeSupport.ab3@1182> XINCLUDE "CLIModeSupport.ab3"
000196BC <CLIModeSupport.ab3@1183> XINCLUDE "CLIModeSupport.ab3"
000196FA <CLIModeSupport.ab3@1184> XINCLUDE "CLIModeSupport.ab3"
000196FE <CLIModeSupport.ab3@1185> XINCLUDE "CLIModeSupport.ab3"
0001973C <CLIModeSupport.ab3@1186> XINCLUDE "CLIModeSupport.ab3"
00019740 <CLIModeSupport.ab3@1187> XINCLUDE "CLIModeSupport.ab3"
0001977E <CLIModeSupport.ab3@1189> XINCLUDE "CLIModeSupport.ab3"
00019782 <CLIModeSupport.ab3@1190> XINCLUDE "CLIModeSupport.ab3"
000197A8 <CLIModeSupport.ab3@1192> XINCLUDE "CLIModeSupport.ab3"
000197CE <CLIModeSupport.ab3@1193> XINCLUDE "CLIModeSupport.ab3"
000197F4 <CLIModeSupport.ab3@1194> XINCLUDE "CLIModeSupport.ab3"
0001981A <CLIModeSupport.ab3@1195> XINCLUDE "CLIModeSupport.ab3"
00019840 <CLIModeSupport.ab3@1196> XINCLUDE "CLIModeSupport.ab3"
00019896 <CLIModeSupport.ab3@1197> XINCLUDE "CLIModeSupport.ab3"
000198EC <CLIModeSupport.ab3@1198> XINCLUDE "CLIModeSupport.ab3"
0001993A <CLIModeSupport.ab3@1199> XINCLUDE "CLIModeSupport.ab3"
00019990 <CLIModeSupport.ab3@1200> XINCLUDE "CLIModeSupport.ab3"
000199B6 <CLIModeSupport.ab3@1201> XINCLUDE "CLIModeSupport.ab3"
000199DC <CLIModeSupport.ab3@1202> XINCLUDE "CLIModeSupport.ab3"
00019A02 <CLIModeSupport.ab3@1203> XINCLUDE "CLIModeSupport.ab3"
00019A58 <CLIModeSupport.ab3@1204> XINCLUDE "CLIModeSupport.ab3"
00019AA6 <CLIModeSupport.ab3@1205> XINCLUDE "CLIModeSupport.ab3"
00019AF4 <CLIModeSupport.ab3@1206> XINCLUDE "CLIModeSupport.ab3"
00019BAE <CLIModeSupport.ab3@1207> XINCLUDE "CLIModeSupport.ab3"
00019C04 <CLIModeSupport.ab3@1208> XINCLUDE "CLIModeSupport.ab3"
00019C2A <CLIModeSupport.ab3@1209> XINCLUDE "CLIModeSupport.ab3"
00019C50 <CLIModeSupport.ab3@1210> XINCLUDE "CLIModeSupport.ab3"
00019C76 <CLIModeSupport.ab3@1211> XINCLUDE "CLIModeSupport.ab3"
00019CCC <CLIModeSupport.ab3@1212> XINCLUDE "CLIModeSupport.ab3"
00019D22 <CLIModeSupport.ab3@1213> XINCLUDE "CLIModeSupport.ab3"
00019D70 <CLIModeSupport.ab3@1214> XINCLUDE "CLIModeSupport.ab3"
00019DBE <CLIModeSupport.ab3@1215> XINCLUDE "CLIModeSupport.ab3"
00019E0C <CLIModeSupport.ab3@1216> XINCLUDE "CLIModeSupport.ab3"
00019E5A <CLIModeSupport.ab3@1217> XINCLUDE "CLIModeSupport.ab3"
00019EA8 <CLIModeSupport.ab3@1218> XINCLUDE "CLIModeSupport.ab3"
00019EF6 <CLIModeSupport.ab3@1219> XINCLUDE "CLIModeSupport.ab3"
00019F44 <CLIModeSupport.ab3@1220> XINCLUDE "CLIModeSupport.ab3"
00019F6A <CLIModeSupport.ab3@1221> XINCLUDE "CLIModeSupport.ab3"
00019F90 <CLIModeSupport.ab3@1222> XINCLUDE "CLIModeSupport.ab3"
00019FB6 <CLIModeSupport.ab3@1223> XINCLUDE "CLIModeSupport.ab3"
0001A004 <CLIModeSupport.ab3@1224> XINCLUDE "CLIModeSupport.ab3"
0001A052 <CLIModeSupport.ab3@1225> XINCLUDE "CLIModeSupport.ab3"
0001A0A8 <CLIModeSupport.ab3@1226> XINCLUDE "CLIModeSupport.ab3"
0001A0F6 <CLIModeSupport.ab3@1227> XINCLUDE "CLIModeSupport.ab3"
0001A144 <CLIModeSupport.ab3@1228> XINCLUDE "CLIModeSupport.ab3"
0001A192 <CLIModeSupport.ab3@1229> XINCLUDE "CLIModeSupport.ab3"
0001A1B8 <CLIModeSupport.ab3@1230> XINCLUDE "CLIModeSupport.ab3"
0001A1DE <CLIModeSupport.ab3@1231> XINCLUDE "CLIModeSupport.ab3"
0001A204 <CLIModeSupport.ab3@1232> XINCLUDE "CLIModeSupport.ab3"
0001A23C <CLIModeSupport.ab3@1233> XINCLUDE "CLIModeSupport.ab3"
0001A264 <CLIModeSupport.ab3@1234> XINCLUDE "CLIModeSupport.ab3"
0001A278 <CLIModeSupport.ab3@1235> XINCLUDE "CLIModeSupport.ab3"
0001A2EC <CLIModeSupport.ab3@1236> XINCLUDE "CLIModeSupport.ab3"
0001A332 <CLIModeSupport.ab3@1237> XINCLUDE "CLIModeSupport.ab3"
0001A3E0 <CLIModeSupport.ab3@1238> XINCLUDE "CLIModeSupport.ab3"
0001A44C <CLIModeSupport.ab3@1239> XINCLUDE "CLIModeSupport.ab3"
0001A45C <CLIModeSupport.ab3@1240> XINCLUDE "CLIModeSupport.ab3"
0001A482 <CLIModeSupport.ab3@1242> XINCLUDE "CLIModeSupport.ab3"
0001A48C <CLIModeSupport.ab3@1244> XINCLUDE "CLIModeSupport.ab3"
0001A4B6 <CLIModeSupport.ab3@1245> XINCLUDE "CLIModeSupport.ab3"
0001A4BC <CLIModeSupport.ab3@1246> XINCLUDE "CLIModeSupport.ab3"
0001A4CC <CLIModeSupport.ab3@1248> XINCLUDE "CLIModeSupport.ab3"
0001A56C <CLIModeSupport.ab3@1250> XINCLUDE "CLIModeSupport.ab3"
0001A5AC <CLIModeSupport.ab3@1251> XINCLUDE "CLIModeSupport.ab3"
0001A5B2 <CLIModeSupport.ab3@1253> XINCLUDE "CLIModeSupport.ab3"
0001A614 <CLIModeSupport.ab3@1254> XINCLUDE "CLIModeSupport.ab3"
0001A61E <CLIModeSupport.ab3@1256> XINCLUDE "CLIModeSupport.ab3"
0001A628 <CLIModeSupport.ab3@1258> XINCLUDE "CLIModeSupport.ab3"
0001A642 <CLIModeSupport.ab3@1259> XINCLUDE "CLIModeSupport.ab3"
0001A664 <CLIModeSupport.ab3@1335> XINCLUDE "CLIModeSupport.ab3"
0001A686 <CLIModeSupport.ab3@1336> XINCLUDE "CLIModeSupport.ab3"
0001A6E0 <CLIModeSupport.ab3@1337> XINCLUDE "CLIModeSupport.ab3"
0001A702 <CLIModeSupport.ab3@1338> XINCLUDE "CLIModeSupport.ab3"
0001A724 <CLIModeSupport.ab3@1339> XINCLUDE "CLIModeSupport.ab3"
0001A77E <CLIModeSupport.ab3@1340> XINCLUDE "CLIModeSupport.ab3"
0001A7C0 <CLIModeSupport.ab3@1341> XINCLUDE "CLIModeSupport.ab3"
0001A7C6 <CLIModeSupport.ab3@1343> XINCLUDE "CLIModeSupport.ab3"
0001A7D4 <CLIModeSupport.ab3@1344> XINCLUDE "CLIModeSupport.ab3"
0001A7DA <CLIModeSupport.ab3@1346> XINCLUDE "CLIModeSupport.ab3"
0001A7EE <CLIModeSupport.ab3@1347> XINCLUDE "CLIModeSupport.ab3"
0001A7F8 <CLIModeSupport.ab3@1348> XINCLUDE "CLIModeSupport.ab3"
0001A872 <CLIModeSupport.ab3@1349> XINCLUDE "CLIModeSupport.ab3"
0001A87C <CLIModeSupport.ab3@1350> XINCLUDE "CLIModeSupport.ab3"
0001A882 <CLIModeSupport.ab3@1351> XINCLUDE "CLIModeSupport.ab3"
0001A896 <CLIModeSupport.ab3@1354> XINCLUDE "CLIModeSupport.ab3"
0001A8A0 <CLIModeSupport.ab3@1355> XINCLUDE "CLIModeSupport.ab3"
0001A920 <CLIModeSupport.ab3@1356> XINCLUDE "CLIModeSupport.ab3"
0001A92A <CLIModeSupport.ab3@1357> XINCLUDE "CLIModeSupport.ab3"
0001A930 <CLIModeSupport.ab3@1358> XINCLUDE "CLIModeSupport.ab3"
0001A944 <CLIModeSupport.ab3@1361> XINCLUDE "CLIModeSupport.ab3"
0001A94E <CLIModeSupport.ab3@1362> XINCLUDE "CLIModeSupport.ab3"
0001A996 <CLIModeSupport.ab3@1363> XINCLUDE "CLIModeSupport.ab3"
0001A9A4 <CLIModeSupport.ab3@1364> XINCLUDE "CLIModeSupport.ab3"
0001A9CA <CLIModeSupport.ab3@1365> XINCLUDE "CLIModeSupport.ab3"
0001A9D4 <CLIModeSupport.ab3@1366> XINCLUDE "CLIModeSupport.ab3"
0001AA3E <CLIModeSupport.ab3@1367> XINCLUDE "CLIModeSupport.ab3"
0001AB10 <CLIModeSupport.ab3@1368> XINCLUDE "CLIModeSupport.ab3"
0001AB1A <CLIModeSupport.ab3@1369> XINCLUDE "CLIModeSupport.ab3"
0001AB20 <CLIModeSupport.ab3@1370> XINCLUDE "CLIModeSupport.ab3"
0001AB2A <CLIModeSupport.ab3@1372> XINCLUDE "CLIModeSupport.ab3"
0001AB30 <CLIModeSupport.ab3@1373> XINCLUDE "CLIModeSupport.ab3"
0001AB44 <CLIModeSupport.ab3@1376> XINCLUDE "CLIModeSupport.ab3"
0001AB4E <CLIModeSupport.ab3@1377> XINCLUDE "CLIModeSupport.ab3"
0001AB96 <CLIModeSupport.ab3@1378> XINCLUDE "CLIModeSupport.ab3"
0001ABA0 <CLIModeSupport.ab3@1379> XINCLUDE "CLIModeSupport.ab3"
0001ABA6 <CLIModeSupport.ab3@1380> XINCLUDE "CLIModeSupport.ab3"
0001ABBA <CLIModeSupport.ab3@1383> XINCLUDE "CLIModeSupport.ab3"
0001ABE0 <CLIModeSupport.ab3@1384> XINCLUDE "CLIModeSupport.ab3"
0001ABF4 <CLIModeSupport.ab3@1387> XINCLUDE "CLIModeSupport.ab3"
0001AC1A <CLIModeSupport.ab3@1388> XINCLUDE "CLIModeSupport.ab3"
0001AC2E <CLIModeSupport.ab3@1391> XINCLUDE "CLIModeSupport.ab3"
0001AC54 <CLIModeSupport.ab3@1392> XINCLUDE "CLIModeSupport.ab3"
0001AC68 <CLIModeSupport.ab3@1395> XINCLUDE "CLIModeSupport.ab3"
0001AC72 <CLIModeSupport.ab3@1396> XINCLUDE "CLIModeSupport.ab3"
0001ACA0 <CLIModeSupport.ab3@1397> XINCLUDE "CLIModeSupport.ab3"
0001ACF0 <CLIModeSupport.ab3@1398> XINCLUDE "CLIModeSupport.ab3"
0001AD10 <CLIModeSupport.ab3@1399> XINCLUDE "CLIModeSupport.ab3"
0001AD28 <CLIModeSupport.ab3@1400> XINCLUDE "CLIModeSupport.ab3"
0001AE0C <CLIModeSupport.ab3@1401> XINCLUDE "CLIModeSupport.ab3"
0001AE16 <CLIModeSupport.ab3@1402> XINCLUDE "CLIModeSupport.ab3"
0001AE1C <CLIModeSupport.ab3@1403> XINCLUDE "CLIModeSupport.ab3"
0001AE1E <CLIModeSupport.ab3@1405> XINCLUDE "CLIModeSupport.ab3"
0001AE32 <CLIModeSupport.ab3@1406> XINCLUDE "CLIModeSupport.ab3"
0001AE64 <CLIModeSupport.ab3@1409> XINCLUDE "CLIModeSupport.ab3"
0001AE6A <CLIModeSupport.ab3@1410> XINCLUDE "CLIModeSupport.ab3"
0001AEAE <CLIModeSupport.ab3@1411> XINCLUDE "CLIModeSupport.ab3"
0001AEC0 <CLIModeSupport.ab3@1412> XINCLUDE "CLIModeSupport.ab3"
0001AED2 <CLIModeSupport.ab3@1413> XINCLUDE "CLIModeSupport.ab3"
0001AEDC <CLIModeSupport.ab3@1414> XINCLUDE "CLIModeSupport.ab3"
0001AEE2 <CLIModeSupport.ab3@1415> XINCLUDE "CLIModeSupport.ab3"
0001AEEC <CLIModeSupport.ab3@1417> XINCLUDE "CLIModeSupport.ab3"
0001AF06 <CLIModeSupport.ab3@1418> XINCLUDE "CLIModeSupport.ab3"
0001AF06 <AmiBlitz3.ab3@93> XINCLUDE "CLIModeSupport.ab3"
0001AF86 <AmiBlitz3.ab3@98> dynassign.s = dos_GetToolString{"ASSIGN",default_assign$}       ; replaced hardcoded path  tomsmart1 2012 03 09
0001AFBE <AmiBlitz3.ab3@99> If dynassign <> ""
0001AFD4 <AmiBlitz3.ab3@100>     *AssignSema.SignalSemaphore = FindSemaphore_(&dynassign)    ; does it already exist?
0001AFDE <AmiBlitz3.ab3@101>     If *AssignSema
0001AFEE <AmiBlitz3.ab3@102>       ObtainSemaphoreShared_ *AssignSema
0001AFF4 <AmiBlitz3.ab3@103>     Else                                                        ; no, create one...
0001B014 <AmiBlitz3.ab3@104>       *AssignSema = AllocVec_ (SizeOf.SignalSemaphore,#MEMF_PUBLIC|#MEMF_CLEAR)
0001B01E <AmiBlitz3.ab3@105>       If *AssignSema
0001B02E <AmiBlitz3.ab3@106>         InitSemaphore_ *AssignSema
0001B062 <AmiBlitz3.ab3@108>         *AssignSema\ss_Link\ln_Name = AllocVec_(FLen(dynassign)+1,#MEMF_PUBLIC|#MEMF_CLEAR)
0001B074 <AmiBlitz3.ab3@109>         If *AssignSema\ss_Link\ln_Name
0001B0B0 <AmiBlitz3.ab3@110>           Poke.s  *AssignSema\ss_Link\ln_Name,dynassign
0001B0BC <AmiBlitz3.ab3@112>         *AssignSema\ss_Link\ln_Pri  = 1
0001B0C8 <AmiBlitz3.ab3@113>         *AssignSema\ss_Link\ln_Type = #NT_SIGNALSEM
0001B0D8 <AmiBlitz3.ab3@115>         AddSemaphore_ *AssignSema
0001B0E8 <AmiBlitz3.ab3@116>         ObtainSemaphoreShared_ *AssignSema
0001B134 <AmiBlitz3.ab3@122>   mydir.s = dos_GetProgDir{"Sys:"}
0001B194 <AmiBlitz3.ab3@123>   If dos_SetAssign{dynassign,mydir,False}
0001B228 <AmiBlitz3.ab3@124>     dos_AddAssign{"LIBS:",dos_AddPart{dynassign,"Libs"}}
0001B260 <AmiBlitz3.ab3@127>   Poke$ ?str_blitz3assign,dynassign
0001B2E2 <AmiBlitz3.ab3@128>   Poke$ ?str_defaultdbug,dos_AddPart{dynassign,"Debug/DefaultDBug"}
0001B364 <AmiBlitz3.ab3@131>   Poke$ ?str_path_acidlibs,dos_AddPart{dynassign, "BlitzLibs/AcidLibs"}
0001B3E6 <AmiBlitz3.ab3@132>   Poke$ ?str_path_deflibs ,dos_AddPart{dynassign, "BlitzLibs/DefLibs" }
0001B468 <AmiBlitz3.ab3@133>   Poke$ ?str_path_userlibs,dos_AddPart{dynassign, "BlitzLibs/UserLibs"}
0001B4EA <AmiBlitz3.ab3@134>   Poke$ ?str_path_includes,dos_AddPart{dynassign, "Sourcecodes/Includes"}
0001B55E <AmiBlitz3.ab3@135>   my_systemdir$    = dos_AddPart{dynassign, "System"}
0001B5D2 <AmiBlitz3.ab3@136>   my_residentsdir$ = dos_AddPart{dynassign, "BlitzLibs/Residents"}
0001B646 <AmiBlitz3.ab3@137>   my_blitzlibsdir$ = dos_AddPart{dynassign, "BlitzLibs"}
0001B674 <AmiBlitz3.ab3@138>   dos_CreateDir{my_blitzlibsdir$}
0001B698 <AmiBlitz3.ab3@139>   dos_CreateDir{Peek$(?str_path_userlibs)}
0001B6C6 <AmiBlitz3.ab3@140>   dos_CreateDir{my_residentsdir$}
0001B6F4 <AmiBlitz3.ab3@141>   dos_CreateDir{my_systemdir$}
0001B7BE <AmiBlitz3.ab3@147> pedfile$ = dos_GetToolString{"EDITOR",dos_AddPart{my_systemdir$,"PED"}}
0001B7F6 <AmiBlitz3.ab3@148> Poke.s ?str_pedfile,pedfile$
0001B834 <AmiBlitz3.ab3@150> If dos_GetToolState{"START_WITHOUT_LIBS"} = -1
0001B844 <AmiBlitz3.ab3@151>   Poke.b ?start_without_libs,1
0001B84A <AmiBlitz3.ab3@152> Else
0001B85A <AmiBlitz3.ab3@153>   Poke.b ?start_without_libs,0
0001B880 <AmiBlitz3.ab3@156> !TRANS_INIT{"AmiBlitz3"}     ; init localization via translation.include
0001B8AE <AmiBlitz3.ab3@161> If ( FindResident_("MorphOS") )
0001B8BE <AmiBlitz3.ab3@162>   Poke.b ?MorphOS,1      ; set it to use CacheClear_E
0001B8C4 <AmiBlitz3.ab3@163> Else
0001B8D4 <AmiBlitz3.ab3@164>   Poke.b ?MorphOS,0      ; set it to use CacheClear_U
0001B8E0 <AmiBlitz3.ab3@168> dbg_fid.l = -1 ; no debug file id yet!
0001B8F2 <AmiBlitz3.ab3@171> Poke.l ?maxerrorcount,#defaultmaxerrorcount                ; set the default value  tomsmart1
0001B8FC <AmiBlitz3.ab3@173> If CLIMode
0001B902 <AmiBlitz3.ab3@176>   err.l      = False                                       ; indicate that an error has occured
0001B908 <AmiBlitz3.ab3@177>   showhelp.l = False                                       ; show the CLI tool's help
0001B960 <AmiBlitz3.ab3@180>   cli_progpath.s      = dos_GetProgDir{default_assign$}    ; replaced hardcoded path  tomsmart1 2012 03 09
0001B988 <AmiBlitz3.ab3@181>   cli_sourcefile.s    = ""
0001B9B0 <AmiBlitz3.ab3@182>   cli_exefile.s       = ""
0001B9D8 <AmiBlitz3.ab3@183>   cli_savefile.s      = ""
0001BA00 <AmiBlitz3.ab3@184>   cli_dumpfile.s      = ""
0001BA28 <AmiBlitz3.ab3@185>   cli_includepath.s   = ""
0001BA50 <AmiBlitz3.ab3@186>   cli_blitzlibpath.s  = ""
0001BA56 <AmiBlitz3.ab3@187>   cli_debuginfo.l     = False
0001BA5C <AmiBlitz3.ab3@188>   cli_run.l           = False
0001BA64 <AmiBlitz3.ab3@189>   cli_dumpflags.l     = $FFFFFFFF
0001BA8C <AmiBlitz3.ab3@190>   cli_info.s          = ""
0001BA92 <AmiBlitz3.ab3@191>   cli_release.l       = False
0001BA9C <AmiBlitz3.ab3@192>   cli_numargs.l       = dos_GetNumArgs{}
0001BAA2 <AmiBlitz3.ab3@193>   cli_gui.l           = False
0001BAAA <AmiBlitz3.ab3@194>   cli_dumpform.l      = 1 ; 0 = bin, 1 = ASCII
0001BAB2 <AmiBlitz3.ab3@195>   cli_verbose.l       = 1
0001BABA <AmiBlitz3.ab3@196>   cli_comdbgflags.l   = $00000000             ; added to support compiler and debugger settings via CLI  tomsmart1
0001BAC2 <AmiBlitz3.ab3@197>   cli_comstrbufsize.l = 0
0001BACA <AmiBlitz3.ab3@198>   cli_exestacksize.l  = 0
0001BAD2 <AmiBlitz3.ab3@199>   cli_maxerrors.l     = 0                     ; added to make maxerrorcount changable in CLIMode  tomsmart1
0001BAEA <AmiBlitz3.ab3@200>   If cli_numargs=0 Then showhelp=True
0001BB1A <AmiBlitz3.ab3@204>     arg.s = dos_GetNextArg{}                               ; get the next CLI argument
0001BB66 <AmiBlitz3.ab3@205>     larg.s = LCase$(arg)                                   ; lower case the option string
0001BC2E <AmiBlitz3.ab3@206>     If Left$(larg,1)="-" Then larg = Right$(larg,FLen(larg)-1)
0001BC64 <AmiBlitz3.ab3@207>     Select larg
0001BCB0 <AmiBlitz3.ab3@208>       Case "s" : larg="source"
0001BD02 <AmiBlitz3.ab3@209>       Case "e" : larg="exe"
0001BD54 <AmiBlitz3.ab3@210>       Case "d" : larg="debug"
0001BDA6 <AmiBlitz3.ab3@211>       Case "r" : larg="release"
0001BDF8 <AmiBlitz3.ab3@212>       Case "h" : larg="help"
0001BE4A <AmiBlitz3.ab3@213>       Case "v" : larg="verbose"
0001BE58 <AmiBlitz3.ab3@214>     End Select
0001BE8E <AmiBlitz3.ab3@216>     Select larg
0001BEE2 <AmiBlitz3.ab3@217>       Case "exe"      : cli_exefile     = dos_GetNextArg{}
0001BF3C <AmiBlitz3.ab3@218>       Case "source"   : cli_sourcefile  = dos_GetNextArg{}
0001BF96 <AmiBlitz3.ab3@219>       Case "save"     : cli_savefile    = dos_GetNextArg{}
0001BFC6 <AmiBlitz3.ab3@220>       Case "debug"    : cli_debuginfo   = True
0001BFF6 <AmiBlitz3.ab3@221>       Case "run"      : cli_run         = True
0001C026 <AmiBlitz3.ab3@222>       Case "release"  : cli_release     = True
0001C056 <AmiBlitz3.ab3@223>       Case "ped"      : cli_gui         = True
0001C0B0 <AmiBlitz3.ab3@224>       Case "dform"    : cli_dumpform.l  = Vallong(dos_GetNextArg{})
0001C122 <AmiBlitz3.ab3@225>       Case "dump"     : cli_info        = LCase$(dos_GetNextArg{})
0001C152 <AmiBlitz3.ab3@226>                         cli_dumpfile    = dos_GetNextArg{}
0001C15A <AmiBlitz3.ab3@227>                         cli_dumpflags   = $0
0001C1BA <AmiBlitz3.ab3@228>                         If Instr(cli_info,"all"  ) Then cli_dumpflags | $FFFFFFFF
0001C21A <AmiBlitz3.ab3@229>                         If Instr(cli_info,"token") Then cli_dumpflags | #DUMPFLG_TOKENS
0001C27A <AmiBlitz3.ab3@230>                         If Instr(cli_info,"label") Then cli_dumpflags | #DUMPFLG_LABELS
0001C2DA <AmiBlitz3.ab3@231>                         If Instr(cli_info,"var"  ) Then cli_dumpflags | #DUMPFLG_VARS
0001C33A <AmiBlitz3.ab3@232>                         If Instr(cli_info,"const") Then cli_dumpflags | #DUMPFLG_CONSTANTS
0001C39A <AmiBlitz3.ab3@233>                         If Instr(cli_info,"func" ) Then cli_dumpflags | #DUMPFLG_FUNCTIONS
0001C3FA <AmiBlitz3.ab3@234>                         If Instr(cli_info,"macro") Then cli_dumpflags | #DUMPFLG_MACROS
0001C45A <AmiBlitz3.ab3@235>                         If Instr(cli_info,"type" ) Then cli_dumpflags | #DUMPFLG_NEWTYPES
0001C4BA <AmiBlitz3.ab3@236>                         If Instr(cli_info,"lib"  ) Then cli_dumpflags | #DUMPFLG_LIBS
0001C4CC <AmiBlitz3.ab3@237>                         If cli_dumpflags = $0
0001C4D2 <AmiBlitz3.ab3@238>                          err=True
0001C566 <AmiBlitz3.ab3@239>                          NPrint "\\1b[1m*** ERROR: Invalid flags for dumpfile \\22",cli_info,"\\22 specified!\\1b[0m"
0001C5D8 <AmiBlitz3.ab3@242>       Case "setcom"   : cli_setcom.s    = LCase$(dos_GetNextArg{})
0001C5E0 <AmiBlitz3.ab3@243>                         cli_comflags.l  = $0
0001C640 <AmiBlitz3.ab3@244>                         If Instr(cli_setcom,"icon"  ) Then cli_comflags | #CLI_COMSETICONFLAG     ; create Icon
0001C6A0 <AmiBlitz3.ab3@245>                         If Instr(cli_setcom,"small" ) Then cli_comflags | #CLI_COMSETSMALLFLAG    ; make smallest code
0001C700 <AmiBlitz3.ab3@246>                         If Instr(cli_setcom,"func"  ) Then cli_comflags | #CLI_COMSETFUNCFLAG     ; use Functionoptimizer
0001C760 <AmiBlitz3.ab3@247> 
0001C7C0 <AmiBlitz3.ab3@248>                         If Instr(cli_setcom,"dbgf"  ) Then cli_comflags | #CLI_COMSETDBGFFLAG     ; create a .dbf file
0001C7DA <AmiBlitz3.ab3@249>                         If (cli_comflags & #CLI_COMSETALLFLAGS) = 0                               ; test if args are correct
0001C7E0 <AmiBlitz3.ab3@250>                           err=True                                                                ; no
0001C874 <AmiBlitz3.ab3@251>                           NPrint "\\1b[1m*** ERROR: Invalid flags for setcom \\22",cli_setcom,"\\22 specified!\\1b[0m"
0001C87A <AmiBlitz3.ab3@252>                         Else
0001C888 <AmiBlitz3.ab3@253>                           cli_comdbgflags | cli_comflags                                          ; yes then add it
0001C8FA <AmiBlitz3.ab3@256>       Case "setdbg"   : cli_setdbg.s    = LCase$(dos_GetNextArg{})
0001C902 <AmiBlitz3.ab3@257>                         cli_dbgflags.l  = $0
0001C962 <AmiBlitz3.ab3@258>                         If Instr(cli_setdbg,"auto" ) Then cli_dbgflags | #CLI_DEBUGAUTOFLAG       ; autorun
0001C9C2 <AmiBlitz3.ab3@259>                         If Instr(cli_setdbg,"irq"  ) Then cli_dbgflags | #CLI_DEBUGIRQFLAG        ; interrupt check
0001CA22 <AmiBlitz3.ab3@260>                         If Instr(cli_setdbg,"asm"  ) Then cli_dbgflags | #CLI_DEBUGASMFLAG        ; assembler check
0001CA82 <AmiBlitz3.ab3@261>                         If Instr(cli_setdbg,"ofl"  ) Then cli_dbgflags | #CLI_DEBUGOFLFLAG        ; overflow check
0001CA9C <AmiBlitz3.ab3@262>                         If (cli_dbgflags & #CLI_DEBUGALLFLAGS) = 0                                ; yes then add it
0001CAA2 <AmiBlitz3.ab3@263>                           err=True                                                                ; no
0001CB36 <AmiBlitz3.ab3@264>                           NPrint "\\1b[1m*** ERROR: Invalid flags for setdbg \\22",cli_setdbg,"\\22 specified!\\1b[0m"
0001CB3C <AmiBlitz3.ab3@265>                         Else
0001CB4A <AmiBlitz3.ab3@266>                           cli_comdbgflags | cli_dbgflags                                          ; yes then add it
0001CBA4 <AmiBlitz3.ab3@268>       Case "strbufsize": cli_comstrbufsize = Vallong(dos_GetNextArg{})
0001CBFE <AmiBlitz3.ab3@269>       Case "stacksize" : cli_exestacksize  = Vallong(dos_GetNextArg{})
0001CC58 <AmiBlitz3.ab3@270> 
0001CC7E <AmiBlitz3.ab3@271>                         If ((cli_maxerrors > 0) AND (cli_maxerrors <4097))                        ; check
0001CC8E <AmiBlitz3.ab3@272>                           Poke.l ?maxerrorcount,cli_maxerrors
0001CCE8 <AmiBlitz3.ab3@275>       Case "verbose"  : cli_verbose     = Vallong(dos_GetNextArg{})
0001CD18 <AmiBlitz3.ab3@276>       Case "h"        : showhelp        = True             ; show the help and quit
0001CD1E <AmiBlitz3.ab3@277>       Default
0001CD56 <AmiBlitz3.ab3@278>         If arg><""
0001CDEA <AmiBlitz3.ab3@279>           NPrint "\\1b[1m*** ERROR: Unknown option \\22",arg,"\\22 specified!\\1b[0m"
0001CDF0 <AmiBlitz3.ab3@280>           err = True
0001CDFE <AmiBlitz3.ab3@282>     End Select
0001CE4A <AmiBlitz3.ab3@283>   Until arg = "" OR err=True          ; until we processed all arguments
0001CE6C <AmiBlitz3.ab3@286>   If err><False OR showhelp = True
0001CE76 <AmiBlitz3.ab3@287>     If showhelp
0001CED8 <AmiBlitz3.ab3@288>     NPrint "AmiBlitz ",Peek.s(?myversion)
0001CF10 <AmiBlitz3.ab3@289>     NPrint "\\nSyntax: AmiBlitz3 [options]"
0001CF48 <AmiBlitz3.ab3@290>     NPrint "\\nOptions:"
0001CF80 <AmiBlitz3.ab3@291>     NPrint "  -(s)ource <file>    : input source code filename (bb2, ab2 or ab3)"
0001CFB8 <AmiBlitz3.ab3@292>     NPrint "  -(e)xe <file>       : output executable filename"
0001CFF0 <AmiBlitz3.ab3@293>     NPrint "  -(d)ebug            : compile and start runtime debugger"
0001D028 <AmiBlitz3.ab3@294>     NPrint "  -(r)elease          : create release executable (size optimized)"
0001D060 <AmiBlitz3.ab3@295>     NPrint "  -run                : run compiled program"
0001D098 <AmiBlitz3.ab3@296>     NPrint "  -dump <info> <file> : dump compiler internals to file"
0001D0D0 <AmiBlitz3.ab3@297>     NPrint "                        (info=all|token|label|var|func|const|macro|type|lib)"
0001D108 <AmiBlitz3.ab3@298>     NPrint "  -setcom <options>   : set compiler settings (options=icon|small|func|ldbg|dbgf)"       ; added  tomsmart1
0001D140 <AmiBlitz3.ab3@299>     NPrint "  -setdbg <check>     : set debugger settings (check=auto|irq|asm|ofl)"                  ; added  tomsmart1
0001D178 <AmiBlitz3.ab3@300>     NPrint "  -strbufsize <n>     : set the string buffer size of the compiler"                      ; added  tomsmart1
0001D1B0 <AmiBlitz3.ab3@301>     NPrint "  -stacksize <n>      : set the stacksize for the exe if it run/debug"                   ; added  tomsmart1
0001D1E8 <AmiBlitz3.ab3@302>     NPrint "  -maxerrors <n>      ; set maxerrorcounter of the compiler (1-4096; default=99)"        ; added  tomsmart1
0001D220 <AmiBlitz3.ab3@303>     NPrint "  -dform <n>          : format of compiler internals dump (0=bin, 1=ASCII; default=1)"
0001D258 <AmiBlitz3.ab3@304>     NPrint "  -PED                : start AmiBlitz3 IDE (PED)"
0001D290 <AmiBlitz3.ab3@305>     NPrint "  -save <file>        : re-save source code (convert format, if needed)"
0001D2C8 <AmiBlitz3.ab3@306>     NPrint "  -(v)erbose <n>      : set verbose level (0, 1 or 2; default=1)"
0001D300 <AmiBlitz3.ab3@307>     NPrint "  -(h)elp             : show this help"
0001D338 <AmiBlitz3.ab3@308>     NPrint "\\nExample:"
0001D370 <AmiBlitz3.ab3@309>     NPrint "  AmiBlitz3 -s \\22DH0:Sourcecodes/MyProgram.ab3\\22 -e RAM:MyProgram.exe"
0001D3A8 <AmiBlitz3.ab3@310>     NPrint "\\nNote: To start the AmiBlitz3 IDE, run from Workbench or with -PED option."
0001D3AE <AmiBlitz3.ab3@313>     Goto abnormal_exit
0001D3CA <AmiBlitz3.ab3@316>   If cli_gui        Then CLIMode = False : error_SetFlags{#error_requester}
0001D42E <AmiBlitz3.ab3@317>   If cli_sourcefile Then Poke.s ?str_tempfilename,cli_sourcefile
0001D43E <AmiBlitz3.ab3@320> Poke.l ?CLIMode,CLIMode
0001D462 <AmiBlitz3.ab3@355>   Dim incdim.s (#maxincludes)
0001D486 <AmiBlitz3.ab3@356>   Dim incline.l(#maxincludes)
0001D4A0 <AmiBlitz3.ab3@624> Function.s Get_Libinfo{addr_libnum.l}
0001D4AC <AmiBlitz3.ab3@626>   lib_ab2.b = False : lib_os.b = False
0001D4B2 <AmiBlitz3.ab3@627>   addr_counter.l = addr_libnum
0001D4BA <AmiBlitz3.ab3@628>   skip.l = 0
0001D4CC <AmiBlitz3.ab3@629>   If addr_counter=0
0001D506 <AmiBlitz3.ab3@630>     error{"INTERNAL: \\__THIS_FUNCTION: Invalid pointer!"}
0001D524 <AmiBlitz3.ab3@631>     Function Return ""
0001D532 <AmiBlitz3.ab3@636>     mem.l = Peek.l(addr_counter)
0001D540 <AmiBlitz3.ab3@641>     addr_counter + 2
0001D560 <AmiBlitz3.ab3@642>     If (mem = $0000ffff) Then lib_ab2= True : skip = 8
0001D57A <AmiBlitz3.ab3@643>     If (mem LSR 16) = $ffe2
0001D580 <AmiBlitz3.ab3@645>       lib_os = True
0001D588 <AmiBlitz3.ab3@646>       skip = 10
0001D5CE <AmiBlitz3.ab3@647>       If Peek$(addr_counter+skip) = "" Then skip + 4
0001D612 <AmiBlitz3.ab3@649>   Until (lib_ab2=True OR lib_os = True) OR (addr_counter>addr_libnum + $400)
0001D628 <AmiBlitz3.ab3@651>   If (addr_counter>addr_libnum + $400)
0001D646 <AmiBlitz3.ab3@653>     Function Return ""
0001D64C <AmiBlitz3.ab3@654>   Else
0001D670 <AmiBlitz3.ab3@655>     Function Return Peek$(addr_counter + skip)
0001D67A <AmiBlitz3.ab3@657> End Function
0001D698 <AmiBlitz3.ab3@697>   !asm
0001D69E <AmiBlitz3.ab3@698>   MOVEA.l _execbase,A6
0001D6A2 <AmiBlitz3.ab3@699>   MOVEM.l d0/a0,-(a7)
0001D6A4 <AmiBlitz3.ab3@701>   MOVEQ #127,d0
0001D6AA <AmiBlitz3.ab3@702>   LEA chartab,a0
0001D6B0 <AmiBlitz3.ab3@705>     MOVE.b #1,128(a0)
0001D6B2 <AmiBlitz3.ab3@706>     CLR.b (a0)+
0001D6B6 <AmiBlitz3.ab3@707>   DBF d0,'l12
0001D6BC <AmiBlitz3.ab3@709>   LEA chartab,a0
0001D6C0 <AmiBlitz3.ab3@710>   MOVE.b #1,(a0)
0001D6C6 <AmiBlitz3.ab3@711>   MOVE.b #1,","(a0)
0001D6CC <AmiBlitz3.ab3@712>   MOVE.b #1,";"(a0)
0001D6D2 <AmiBlitz3.ab3@713>   MOVE.b #1,":"(a0)
0001D6D8 <AmiBlitz3.ab3@714>   MOVE.b #1,"("(a0)
0001D6DE <AmiBlitz3.ab3@715>   MOVE.b #1,")"(a0)
0001D6E4 <AmiBlitz3.ab3@716>   MOVE.b #1,"="(a0)
0001D6EA <AmiBlitz3.ab3@717>   MOVE.b #1,"+"(a0)
0001D6F0 <AmiBlitz3.ab3@718>   MOVE.b #1,"-"(a0)
0001D6F6 <AmiBlitz3.ab3@719>   MOVE.b #1,"*"(a0)
0001D6FC <AmiBlitz3.ab3@720>   MOVE.b #1,"/"(a0)
0001D702 <AmiBlitz3.ab3@721>   MOVE.b #1,"$"(a0)
0001D708 <AmiBlitz3.ab3@722>   MOVE.b #1,"%"(a0)
0001D70E <AmiBlitz3.ab3@723>   MOVE.b #1,"."(a0)
0001D714 <AmiBlitz3.ab3@724>   MOVE.b #1,"["(a0)
0001D71A <AmiBlitz3.ab3@725>   MOVE.b #1,"]"(a0)
0001D720 <AmiBlitz3.ab3@726>   MOVE.b #1,"{"(a0)
0001D726 <AmiBlitz3.ab3@727>   MOVE.b #1,"}"(a0)
0001D72C <AmiBlitz3.ab3@728>   MOVE.b #1,"\"(a0)
0001D732 <AmiBlitz3.ab3@729>   MOVE.b #1,">"(a0)
0001D738 <AmiBlitz3.ab3@730>   MOVE.b #1,"<"(a0)
0001D73E <AmiBlitz3.ab3@731>   MOVE.b #1,"&"(a0)
0001D744 <AmiBlitz3.ab3@732>   MOVE.b #1,"|"(a0)
0001D74A <AmiBlitz3.ab3@733>   MOVE.b #1,"^"(a0)
0001D750 <AmiBlitz3.ab3@734>   MOVE.b #1,$7e(a0)
0001D756 <AmiBlitz3.ab3@735>   MOVE.w #$0101,1(a0)
0001D75C <AmiBlitz3.ab3@737>   LEA instrtab,a0
0001D762 <AmiBlitz3.ab3@738>   MOVE.l #labelhash-instrtab,d0
0001D764 <AmiBlitz3.ab3@739>   ASR.l #2,d0
0001D766 <AmiBlitz3.ab3@740>   SUBQ.l #1,d0
0001D768 <AmiBlitz3.ab3@743>    CLR.l (a0)+
0001D76A <AmiBlitz3.ab3@744>    SUBQ.l #1,d0
0001D76E <AmiBlitz3.ab3@745>   BNE 'l10
0001D774 <AmiBlitz3.ab3@747>   LEA allowtab,a0
0001D77A <AmiBlitz3.ab3@748>   MOVE.l #255,d0
0001D77C <AmiBlitz3.ab3@751>     CLR.b (a0)+
0001D780 <AmiBlitz3.ab3@752>   DBF d0,'la1
0001D786 <AmiBlitz3.ab3@754>   LEA allowtab,a0
0001D78C <AmiBlitz3.ab3@755>   MOVE.b #1,$7d(a0)
0001D792 <AmiBlitz3.ab3@756>   MOVE.b #1,$7c(a0)
0001D798 <AmiBlitz3.ab3@757>   MOVE.b #1,$44(a0)
0001D79E <AmiBlitz3.ab3@758>   MOVE.b #1,$45(a0)
0001D7A4 <AmiBlitz3.ab3@759>   MOVE.b #1,$b9(a0)
0001D7AA <AmiBlitz3.ab3@760>   MOVE.b #1,$89(a0)
0001D7B0 <AmiBlitz3.ab3@761>   MOVE.b #1,$ce(a0)
0001D7B6 <AmiBlitz3.ab3@762>   MOVE.b #1,$cf(a0)
0001D7BC <AmiBlitz3.ab3@763>   MOVE.b #1,$d0(a0)
0001D7C2 <AmiBlitz3.ab3@764>   MOVE.b #1,$cd(a0)
0001D7C4 <AmiBlitz3.ab3@765>   MOVEQ #0,d0
0001D7CA <AmiBlitz3.ab3@767>   MOVEA.l _execbase,a6
0001D7D0 <AmiBlitz3.ab3@772>   MOVE.l #$10000,d0
0001D7D6 <AmiBlitz3.ab3@773>   MOVE.l #80000,d1
0001D7D8 <AmiBlitz3.ab3@774>   MOVE.l d1,d2
0001D7DC <AmiBlitz3.ab3@775>   JSR _CreatePool(a6)                                      ; alloc memory for own stuff
0001D7E2 <AmiBlitz3.ab3@776>   MOVE.l d0,mempool
0001D7E6 <AmiBlitz3.ab3@777>   MOVEM.l (a7)+,d0/a0
0001D7EC <AmiBlitz3.ab3@778>   TST.l mempool
0001D7F0 <AmiBlitz3.ab3@779>   BEQ shutdown_compiler
0001D7F4 <AmiBlitz3.ab3@781>   MOVEA.l $114(A6),A4                                      ; get adress of this.Task-Structure
0001D7FA <AmiBlitz3.ab3@782>   MOVE.l A4,ptr_ThisTask
0001D7FE <AmiBlitz3.ab3@784>   BSR.w open_doslibrary
0001D802 <AmiBlitz3.ab3@785>   BEQ.w shutdown_compiler
0001D808 <AmiBlitz3.ab3@787>   MOVE.l D2,stacksize
0001D80A <AmiBlitz3.ab3@791>   MOVEQ.l #$00,D0
0001D810 <AmiBlitz3.ab3@792>   LEA tokens,A0
0001D812 <AmiBlitz3.ab3@795>     ADDQ.w #1,D0
0001D814 <AmiBlitz3.ab3@796>     MOVE.l (A0),D1
0001D818 <AmiBlitz3.ab3@797>     BEQ.w JL_0_2D1C
0001D81A <AmiBlitz3.ab3@798>     MOVEA.l D1,A0
0001D81E <AmiBlitz3.ab3@799> BRA.w JL_0_2D0E
0001D824 <AmiBlitz3.ab3@802>   MOVE.l A0,end_of_tokenlist
0001D828 <AmiBlitz3.ab3@804>   BSR.w makeasmtable
0001D830 <AmiBlitz3.ab3@805>   MOVE.w #$FFFF,returncode_org                             ;#-1,returncode
0001D834 <AmiBlitz3.ab3@807>   BSR.w open_mathlibrary
0001D838 <AmiBlitz3.ab3@808>   BEQ.w freemem_and_quit4
0001D83E <AmiBlitz3.ab3@810>   MOVE.l constmaxpc,D0
0001D840 <AmiBlitz3.ab3@811>   MOVEQ.l #$02,D1                                          ;chipmem            ;01 org source
0001D846 <AmiBlitz3.ab3@812>   MOVEA.l _execbase,A6
0001D84A <AmiBlitz3.ab3@813>   JSR _AllocMem(A6)                                        ;mem for branch routine
0001D850 <AmiBlitz3.ab3@814>   MOVE.l D0,constpcat
0001D854 <AmiBlitz3.ab3@815>   BEQ.w freemem_and_quit3
0001D85A <AmiBlitz3.ab3@816>   ADD.l constmaxpc,D0
0001D860 <AmiBlitz3.ab3@817>   MOVE.l D0,constlibat
0001D866 <AmiBlitz3.ab3@819>   MOVE.l macrobuffer_size,D0
0001D86C <AmiBlitz3.ab3@820>   CMP.l #DEFAULT_MACROBUFFERSIZE,d0                        ; replaced by a constant  tomsmart1
0001D870 <AmiBlitz3.ab3@821>   BGE 'ok
0001D876 <AmiBlitz3.ab3@822>     MOVE.l #DEFAULT_MACROBUFFERSIZE,d0
0001D87C <AmiBlitz3.ab3@823>     MOVE.l d0,macrobuffer_size                             ; replaced with a constant tomsmart1
0001D87E <AmiBlitz3.ab3@826>   ADDQ.l #4,d0
0001D880 <AmiBlitz3.ab3@827>   MOVEQ.l #$01,D1
0001D886 <AmiBlitz3.ab3@828>   MOVEA.l _execbase,A6
0001D88A <AmiBlitz3.ab3@829>   JSR _AllocMem(A6)                                        ;macro mem
0001D88C <AmiBlitz3.ab3@830>   MOVE.l d0,a0
0001D892 <AmiBlitz3.ab3@831>   MOVE.l macrobuffer_size,(a0)+
0001D894 <AmiBlitz3.ab3@832>   MOVE.l a0,d0
0001D89A <AmiBlitz3.ab3@833>   MOVE.l D0,ptr_macrobuffer_begin
0001D89E <AmiBlitz3.ab3@834>   BEQ.w freemem_and_quit2
0001D8A4 <AmiBlitz3.ab3@835>   ADD.l macrobuffer_size,D0
0001D8AA <AmiBlitz3.ab3@836>   MOVE.l D0,ptr_macrobuffer_end
0001D8B0 <AmiBlitz3.ab3@838>   TST.l CLIMode
0001D8B4 <AmiBlitz3.ab3@839>   BEQ load_ped
0001D8DE <AmiBlitz3.ab3@842>   !basic
0001D8E8 <AmiBlitz3.ab3@843>   succ.l = InitEmulatedPED{}
0001D8EC <AmiBlitz3.ab3@844>   GetD0 succ
0001D90A <AmiBlitz3.ab3@845>   !asm
0001D90C <AmiBlitz3.ab3@846>   TST.l d0
0001D910 <AmiBlitz3.ab3@847>   BEQ freemem_and_quit
0001D916 <AmiBlitz3.ab3@848> JMP skip_ped
0001D91C <AmiBlitz3.ab3@853>   MOVE.l #str_pedfile,D1                                   ; Load PED
0001D922 <AmiBlitz3.ab3@854>   MOVEA.l _dosbase,A6
0001D926 <AmiBlitz3.ab3@855>   JSR _LoadSeg(A6)
0001D92C <AmiBlitz3.ab3@856>   MOVE.l D0,ptr_seg_ped
0001D930 <AmiBlitz3.ab3@858>   BEQ.w cant_load_PED         ; was freemem_and_quit  added error massage  that we can't load it  tomsmart1  2012 03
0001D932 <AmiBlitz3.ab3@862>   MOVEA.l D0,A2
0001D934 <AmiBlitz3.ab3@863>   ADDA.l A2,A2
0001D936 <AmiBlitz3.ab3@864>   ADDA.l A2,A2
0001D93C <AmiBlitz3.ab3@866>   LEA teddata,a1                                           ;lea edstruct,A1
0001D942 <AmiBlitz3.ab3@867>   MOVE.l #"TEDY",d1
0001D946 <AmiBlitz3.ab3@868>   JSR 4(A2)                                                ; Run PED
0001D94C <AmiBlitz3.ab3@870>   MOVE.l A0,ped_startup_addr                               ; PED returns address of routine "startup_code"
0001D952 <AmiBlitz3.ab3@871>   MOVE.l A1,comdata                                        ; PED returns address of comdata-area in A1
0001D990 <AmiBlitz3.ab3@873>   !ComData_GetW{comWord_PEDIsAvailable,D0}                 ; if PED_IsAvailable=0, quit AmiBlitz
0001D994 <AmiBlitz3.ab3@874>   BEQ.w unload_ped
0001D998 <AmiBlitz3.ab3@875> 
0001D99C <AmiBlitz3.ab3@876>   BNE old_version_of_PED                                   ; no, than exit
0001D9DA <AmiBlitz3.ab3@882>   !ComData_GetL{comData_Magic,D0}
0001D9E0 <AmiBlitz3.ab3@883>   CMP.l ##MagicIdentifier_Long,D0                          ;"~::~",D0    ; replace with a constants  tomsmart1 2012 03 09
0001D9E4 <AmiBlitz3.ab3@884>   BNE unload_ped
0001DA1C <AmiBlitz3.ab3@887>   !ComData_SetL{comPtr_Trap15            ,#directTrap15 }
0001DA54 <AmiBlitz3.ab3@888>   !ComData_SetL{comPtr_DirectBuffer      ,#directbuffer}
0001DA8C <AmiBlitz3.ab3@889>   !ComData_SetL{comPtr_MacroBase         ,#macrobase}
0001DAC4 <AmiBlitz3.ab3@890>   !ComData_SetL{comPtr_VarBase           ,#varbase }
0001DAFC <AmiBlitz3.ab3@891>   !ComData_SetL{comPtr_InstrBase         ,#instrtab}
0001DB34 <AmiBlitz3.ab3@892>   !ComData_SetL{comPtr_LibPointer        ,#libpointer}
0001DB6C <AmiBlitz3.ab3@893>   !ComData_SetL{comPtr_CompilerVersion   ,#myversion }
0001DBA4 <AmiBlitz3.ab3@894>   !ComData_SetL{comPtr_VersionInformation,#versioninformation}
0001DBDC <AmiBlitz3.ab3@895>   !ComData_SetL{comPtr_NumberOfBuilds    ,#number_of_builds}
0001DC14 <AmiBlitz3.ab3@896>   !ComData_SetL{comFunc_SaveSource       ,#ab3_SaveSource}
0001DC4C <AmiBlitz3.ab3@897>   !ComData_SetL{comFunc_LoadSource       ,#ab3_LoadSource}
0001DC84 <AmiBlitz3.ab3@898>   !ComData_SetL{comFunc_ClearSource      ,#ab3_ClearSource}
0001DCBC <AmiBlitz3.ab3@901>   !ComData_SetL{comFunc_CalculatExpression       ,#menu_calculator}
0001DCF4 <AmiBlitz3.ab3@902>   !ComData_SetL{comPtr_CalculatorExpressionString,#str_calcexpression}
0001DD2C <AmiBlitz3.ab3@905>   !ComData_SetL{comFunc_BackupXtraData           ,#BackupXtraData}
0001DD64 <AmiBlitz3.ab3@906>   !ComData_SetL{comFunc_RestoreXtraData          ,#RestoreXtraData}
0001DD9C <AmiBlitz3.ab3@908>   !ComData_SetL{comFunc_GetObjectEntry           ,#getobjectentry}
0001DDD4 <AmiBlitz3.ab3@909>   !ComData_SetL{comFunc_StoreMaxObjects          ,#storemaxobjects}
0001DE0C <AmiBlitz3.ab3@911>   !ComData_SetL{comFunc_ReloadResidentsForPED    ,#ReloadResidentsForPED}
0001DE44 <AmiBlitz3.ab3@912>   !ComData_SetL{comFunc_FreeClearResidentsForPED ,#FreeClearResidentsForPED}    ; add tomsmart1 2012 06 09
0001DE7C <AmiBlitz3.ab3@914>   !ComData_SetL{comPtr_Residents_Table           ,#residents_table}
0001DEB4 <AmiBlitz3.ab3@915>   !ComData_SetL{comPtr_StringBuffer_Long         ,#stringbuffer}
0001DEEC <AmiBlitz3.ab3@916>   !ComData_SetL{comPtr_Stacksize_Long            ,#stacksize}
0001DF24 <AmiBlitz3.ab3@917>   !ComData_SetL{comPtr_Create_IconFile_Byte      ,#create_iconfile}
0001DF5C <AmiBlitz3.ab3@918>   !ComData_SetL{comPtr_Make_SmallestCode_Byte    ,#make_smallestcode}
0001DF94 <AmiBlitz3.ab3@919>   !ComData_SetL{comPtr_Link_DebugInfo_Byte       ,#link_debuginfo}
0001DFCC <AmiBlitz3.ab3@920>   !ComData_SetL{comPtr_Use_Debugger_Byte         ,#use_debugger}
0001E004 <AmiBlitz3.ab3@921>   !ComData_SetL{comPtr_Autorun_Byte              ,#autorun}
0001E03C <AmiBlitz3.ab3@922>   !ComData_SetL{comPtr_InterruptCheck_Byte       ,#interruptcheck}
0001E074 <AmiBlitz3.ab3@923>   !ComData_SetL{comPtr_AssemblerCheck_Byte       ,#assemblercheck}
0001E0AC <AmiBlitz3.ab3@924>   !ComData_SetL{comPtr_OverflowCheck_Byte        ,#overflowcheck}
0001E0E4 <AmiBlitz3.ab3@925>   !ComData_SetL{comPtr_Number_of_Objects_Word    ,#number_of_objects}
0001E11C <AmiBlitz3.ab3@926>   !ComData_SetL{comPtr_MaxObjects_Value_Word     ,#maxobjects_value}
0001E154 <AmiBlitz3.ab3@927>   !ComData_SetL{comPtr_MaxObject_Pos_Word        ,#maxobject_pos}
0001E18C <AmiBlitz3.ab3@930>   !ComData_SetL{comPtr_CLIArgumentsString       ,#str_cliarguments}
0001E192 <AmiBlitz3.ab3@932>   CLR.w returncode_org
0001E1BC <AmiBlitz3.ab3@934>   !basic
0001E1C6 <AmiBlitz3.ab3@935>   If CLIMode
0001E238 <AmiBlitz3.ab3@936>     If cli_verbose>=3 Then NPrint !TRANS{"Loading BlitzLibs..."}
0001E256 <AmiBlitz3.ab3@938>   !asm
0001E25C <AmiBlitz3.ab3@942>   TST.b start_without_libs
0001E260 <AmiBlitz3.ab3@943>   BNE skip_loading_libs
0001E264 <AmiBlitz3.ab3@944>     BSR.w call_setpointerbusy
0001E26E <AmiBlitz3.ab3@945>     MOVE.l #$FFFFffff,linenumat
0001E272 <AmiBlitz3.ab3@946>     BSR.w get_libraries
0001E278 <AmiBlitz3.ab3@947>     JSR init_libraries
0001E27C <AmiBlitz3.ab3@948>     BSR.w init_buffers
0001E280 <AmiBlitz3.ab3@949>     BSR.w call_setpointernormal
0001E282 <AmiBlitz3.ab3@954>   MOVEQ.l #-$01,D0
0001E288 <AmiBlitz3.ab3@955>   MOVEA.l _execbase,A6
0001E28C <AmiBlitz3.ab3@956>   JSR _AllocSignal(A6)
0001E292 <AmiBlitz3.ab3@957>   MOVE.l D0,signalNum
0001E294 <AmiBlitz3.ab3@958>   MOVEQ.l #$00,D1
0001E296 <AmiBlitz3.ab3@959>   BSET D0,D1
0001E29C <AmiBlitz3.ab3@960>   MOVE.l D1,signals
0001E2A2 <AmiBlitz3.ab3@964>   MOVE.l #str_defaultdbug,D1
0001E2A6 <AmiBlitz3.ab3@965>   MOVEA.l _dosbase(PC),A6
0001E2AA <AmiBlitz3.ab3@966>   JSR _LoadSeg(A6)
0001E2B0 <AmiBlitz3.ab3@967>   MOVE.l D0,ptr_seg_debugger
0001E2B2 <AmiBlitz3.ab3@968>   TST.l d0
0001E2B6 <AmiBlitz3.ab3@969>   BNE ok_12
0001E2E0 <AmiBlitz3.ab3@970>     !basic
0001E342 <AmiBlitz3.ab3@971>     error{!TRANS{"The Debugexecutor `Defaultdbug` was not found.\\nDebugging is not possible."}}
0001E360 <AmiBlitz3.ab3@972>     !asm
0001E366 <AmiBlitz3.ab3@975>   TST.l CLIMode
0001E36A <AmiBlitz3.ab3@976>   BEQ run_ped
0001E394 <AmiBlitz3.ab3@982>   !basic
0001E39A <AmiBlitz3.ab3@983>   err.l = False
0001E3C6 <AmiBlitz3.ab3@991>   If cli_sourcefile
0001E3E6 <AmiBlitz3.ab3@992>     lock.l = Lock_(&cli_sourcefile,#ACCESS_READ)
0001E3F0 <AmiBlitz3.ab3@993>     If lock
0001E414 <AmiBlitz3.ab3@994>       NameFromLock_ lock,&cli_tempstr,1024
0001E43E <AmiBlitz3.ab3@995>       cli_sourcefile.s = Peek.s(&cli_tempstr)
0001E44E <AmiBlitz3.ab3@996>       UnLock_ lock
0001E47A <AmiBlitz3.ab3@999>     If cli_exefile
0001E4CC <AmiBlitz3.ab3@1000>       SetCurrentDir{dos_PathPart{cli_sourcefile}}
0001E524 <AmiBlitz3.ab3@1001>       path.s = dos_PathPart{cli_exefile}
0001E544 <AmiBlitz3.ab3@1002>       lock.l = Lock_(&path,#ACCESS_READ)
0001E54E <AmiBlitz3.ab3@1003>       If lock
0001E572 <AmiBlitz3.ab3@1004>         NameFromLock_ lock,&cli_tempstr,1024
0001E59C <AmiBlitz3.ab3@1005>         path.s = Peek.s(&cli_tempstr)
0001E64A <AmiBlitz3.ab3@1006>         cli_exefile = dos_AddPart{path,dos_FilePart{cli_exefile}}
0001E65A <AmiBlitz3.ab3@1007>         UnLock_ lock
0001E6A4 <AmiBlitz3.ab3@1018>   If cli_verbose>=3 Then NPrint "Initializing token hashmap..."
0001E718 <AmiBlitz3.ab3@1019> 
0001E722 <AmiBlitz3.ab3@1020>   *PreProcessor.preprocessor = preproc_Create{}
0001E732 <AmiBlitz3.ab3@1021>   Poke.l ?comPtr_PreProcessor,*PreProcessor
0001E764 <AmiBlitz3.ab3@1022>   preproc_LoadTokens{*PreProcessor,TokenHashMapFile}
0001E77A <AmiBlitz3.ab3@1023>   If *PreProcessor\tokens=Null
0001E7F4 <AmiBlitz3.ab3@1024>     If cli_verbose>=1 Then NPrint "No hashmap found (\\22"+TokenHashMapFile+"\\22), will be created..."
0001E7FE <AmiBlitz3.ab3@1025>     preproc_QueryTokens{*PreProcessor}
0001E830 <AmiBlitz3.ab3@1026>     preproc_SaveTokens{*PreProcessor,TokenHashMapFile}
0001E87C <AmiBlitz3.ab3@1034>   If cli_sourcefile><"" AND err=False
0001E922 <AmiBlitz3.ab3@1035>     If cli_verbose>=3 Then NPrint "Loading sourcecode \\22",cli_sourcefile,"\\22..."
0001E954 <AmiBlitz3.ab3@1036>     succ=LoadSource{cli_sourcefile}
0001E95E <AmiBlitz3.ab3@1037>     If succ
0001E996 <AmiBlitz3.ab3@1038> 
0001EA10 <AmiBlitz3.ab3@1039>         If cli_verbose>=1 Then NPrint "Compiling \\22"+cli_sourcefile+"\\22..."
0001EA52 <AmiBlitz3.ab3@1040> 
0001EA5C <AmiBlitz3.ab3@1042>         If comerr
0001EA62 <AmiBlitz3.ab3@1044>         Else
0001EA68 <AmiBlitz3.ab3@1048>     Else
0001EAB8 <AmiBlitz3.ab3@1049>       If cli_verbose>=0 NPrint "\\1b[1m*** ERROR: Unable to read source file!\\1b[0m" : err=True
0001EB04 <AmiBlitz3.ab3@1053>   If cli_savefile><"" AND err=False
0001EB7E <AmiBlitz3.ab3@1054>     If cli_verbose>=2 Then NPrint "Saving sourcefiles as "+cli_savefile+"..."
0001EBAC <AmiBlitz3.ab3@1055>     SaveSource{cli_savefile}
0001EBF8 <AmiBlitz3.ab3@1058>   If cli_dumpfile><"" AND err=False
0001EC42 <AmiBlitz3.ab3@1059>     If cli_verbose>=2 Then NPrint "Saving dumpfile..."
0001EC78 <AmiBlitz3.ab3@1060>     DumpFile{cli_dumpfile,cli_dumpflags,cli_dumpform}
0001EC82 <AmiBlitz3.ab3@1063>   If cli_run
0001EC96 <AmiBlitz3.ab3@1064>     If comerr=False
0001ECC2 <AmiBlitz3.ab3@1065>       If cli_exefile
0001ED3C <AmiBlitz3.ab3@1066>         If cli_verbose>=1 Then NPrint "Recompiling "+cli_sourcefile+" for debug..."
0001ED72 <AmiBlitz3.ab3@1067> 
0001EDBC <AmiBlitz3.ab3@1069>       If cli_verbose>=1 Then NPrint "Running program..."
0001EDCA <AmiBlitz3.ab3@1070> 
0001EDCC <AmiBlitz3.ab3@1072>         CLR.l d0
0001EE0A <AmiBlitz3.ab3@1073>         !ComData_GetB{comByte_RunningFlag,D0}
0001EE0E <AmiBlitz3.ab3@1074>         running.l = PutD0
0001EE2A <AmiBlitz3.ab3@1075>         If running Then Delay_ 50
0001EE3E <AmiBlitz3.ab3@1077>       Until running=False
0001EE52 <AmiBlitz3.ab3@1078>       If Peek.l(?_runerror)
0001EEA2 <AmiBlitz3.ab3@1079>         If cli_verbose>=0 Then NPrint "\\1b[1m*** ERROR: Unable to run compiled program!\\1b[0m" : err=True
0001EEB2 <AmiBlitz3.ab3@1090>   preproc_Free{*PreProcessor} : *PreProcessor=Null
0001EEFC <AmiBlitz3.ab3@1091>   If cli_verbose>=3 Then NPrint "Exit AmiBlitz3."
0001EF02 <AmiBlitz3.ab3@1092>   DeinitEmulatedPED{}
0001EF20 <AmiBlitz3.ab3@1094>   !asm
0001EF26 <AmiBlitz3.ab3@1095> JMP terminate_ab3
0001EF2C <AmiBlitz3.ab3@1100>   MOVEA.l ped_startup_addr,A1
0001EF32 <AmiBlitz3.ab3@1101>   LEA str_tempfilename,A0
0001EF34 <AmiBlitz3.ab3@1102>   JSR (A1)
0001EF3A <AmiBlitz3.ab3@1109>   MOVE.l signalNum,D0
0001EF40 <AmiBlitz3.ab3@1110>   MOVEA.l _execbase,A6
0001EF44 <AmiBlitz3.ab3@1111>   JSR _FreeSignal(A6)
0001EF4A <AmiBlitz3.ab3@1113>   MOVE.l ptr_seg_debugger,D1
0001EF4E <AmiBlitz3.ab3@1114>   BEQ.b skip_unload_debugger
0001EF52 <AmiBlitz3.ab3@1115>     MOVEA.l _dosbase(PC),A6
0001EF56 <AmiBlitz3.ab3@1116>     JSR _UnLoadSeg(A6)
0001EF5A <AmiBlitz3.ab3@1119>   BSR.w Aclearallvars
0001EF5E <AmiBlitz3.ab3@1120>   BSR.w free_residents
0001EF64 <AmiBlitz3.ab3@1121>   JSR free_blitzlibs
0001EF6A <AmiBlitz3.ab3@1124>   MOVE.l ptr_seg_ped,D1
0001EF6E <AmiBlitz3.ab3@1125>   BEQ freemem_and_quit
0001EF72 <AmiBlitz3.ab3@1126>   MOVEA.l _dosbase(PC),A6
0001EF76 <AmiBlitz3.ab3@1127>   JSR _UnLoadSeg(A6)
0001EF7A <AmiBlitz3.ab3@1128>   BRA freemem_and_quit     ; added by tomsmart1 for Ped errormessage
0001EFA4 <AmiBlitz3.ab3@1131>   !basic
0001F068 <AmiBlitz3.ab3@1132> 
0001F086 <AmiBlitz3.ab3@1133>   !asm
0001F08A <AmiBlitz3.ab3@1134>   BRA freemem_and_quit
0001F0B4 <AmiBlitz3.ab3@1137>   !basic
0001F178 <AmiBlitz3.ab3@1138>   error{!TRANS{"Can't load the Editor:\n"} + pedfile$ + !TRANS{"\n must quit, sorry!"} }  ; show error message  tomsmart1
0001F196 <AmiBlitz3.ab3@1139>   !asm
0001F19A <AmiBlitz3.ab3@1143>   BSR.w freeallox
0001F1A0 <AmiBlitz3.ab3@1144>   MOVEA.l ptr_macrobuffer_begin,A1
0001F1A2 <AmiBlitz3.ab3@1145>   MOVE.l -(a1),D0
0001F1A4 <AmiBlitz3.ab3@1146>   ADDQ.l #4,d0
0001F1AA <AmiBlitz3.ab3@1147>   MOVEA.l _execbase,A6
0001F1AE <AmiBlitz3.ab3@1148>   JSR _FreeMem(A6)
0001F1B4 <AmiBlitz3.ab3@1151>   MOVEA.l _dosbase,A1
0001F1BA <AmiBlitz3.ab3@1152>   MOVEA.l _execbase,A6
0001F1BE <AmiBlitz3.ab3@1153>   JSR _CloseLibrary(A6)
0001F1C4 <AmiBlitz3.ab3@1155>   MOVEA.l constpcat,A1
0001F1CA <AmiBlitz3.ab3@1156>   MOVE.l constmaxpc,D0
0001F1D0 <AmiBlitz3.ab3@1157>   MOVEA.l _execbase,A6
0001F1D4 <AmiBlitz3.ab3@1158>   JSR _FreeMem(A6)
0001F1DA <AmiBlitz3.ab3@1161>   MOVEA.l _mathffpbase,A1
0001F1E0 <AmiBlitz3.ab3@1162>   MOVEA.l _execbase,A6
0001F1E4 <AmiBlitz3.ab3@1163>   JSR _CloseLibrary(A6)
0001F1EA <AmiBlitz3.ab3@1167>   TST.l mempool2                    ; test if mempool2 is allocated
0001F1EE <AmiBlitz3.ab3@1168>   BEQ shutdown_compiler             ; no jump
0001F1F4 <AmiBlitz3.ab3@1169>   MOVEA.l _execbase,A6              ; yes delete it to free the memory
0001F1FA <AmiBlitz3.ab3@1170>   MOVE.l mempool2,a0
0001F1FE <AmiBlitz3.ab3@1171>   JSR _DeletePool(a6)
0001F204 <AmiBlitz3.ab3@1172>   CLR.l mempool2
0001F20A <AmiBlitz3.ab3@1175>   MOVEA.l _execbase,A6
0001F210 <AmiBlitz3.ab3@1176>   MOVE.l mempool,a0
0001F214 <AmiBlitz3.ab3@1177>   JSR _DeletePool(a6)
0001F21A <AmiBlitz3.ab3@1178>   CLR.l pushat
0001F220 <AmiBlitz3.ab3@1179>   CLR.l mempool
0001F226 <AmiBlitz3.ab3@1182>   JSR free_unusedfunctions
0001F228 <AmiBlitz3.ab3@1183>   MOVEQ #0,d0
0001F236 <AmiBlitz3.ab3@1186>   !exitasm
0001F26E <AmiBlitz3.ab3@1187>   If dynassign<>""
0001F278 <AmiBlitz3.ab3@1188>     If *AssignSema
0001F288 <AmiBlitz3.ab3@1189>       ReleaseSemaphore_ *AssignSema
0001F2A0 <AmiBlitz3.ab3@1190>       If (AttemptSemaphore_ (*AssignSema))                 ; we are the exclusive owner of the sema now!
0001F334 <AmiBlitz3.ab3@1191>         dos_RemAssign{"LIBS:",dos_AddPart{dynassign,"Libs"}}
0001F36E <AmiBlitz3.ab3@1192>         dos_RemAssign{dynassign}
0001F37E <AmiBlitz3.ab3@1193>         RemSemaphore_ *AssignSema
0001F38E <AmiBlitz3.ab3@1194>         ReleaseSemaphore_ *AssignSema
0001F3C0 <AmiBlitz3.ab3@1195>         If *AssignSema\ss_Link\ln_Name Then FreeVec_ *AssignSema\ss_Link\ln_Name : *AssignSema\ss_Link\ln_Name = Null
0001F3D0 <AmiBlitz3.ab3@1196>         FreeVec_ *AssignSema
0001F3D6 <AmiBlitz3.ab3@1197>         *AssignSema = Null
0001F404 <AmiBlitz3.ab3@1201>   SetCurrentDir{cli_path}
0001F426 <AmiBlitz3.ab3@1202>   !coutclose
0001F42C <AmiBlitz3.ab3@1203> End
0001F438 <AmiBlitz3.ab3@1207> str_doslibrary:     Dc.b "dos.library",0 : Even
0001F43C <AmiBlitz3.ab3@1208> _dosbase:           Ds.l 1
0001F442 <AmiBlitz3.ab3@1212>   MOVEA.l _execbase,A6
0001F448 <AmiBlitz3.ab3@1213>   LEA str_doslibrary,A1
0001F44C <AmiBlitz3.ab3@1214>   JSR _OldOpenLibrary(A6)
0001F452 <AmiBlitz3.ab3@1215>   MOVE.l D0,_dosbase
0001F454 <AmiBlitz3.ab3@1216> RTS
0001F45A <AmiBlitz3.ab3@1220>   MOVEA.l #str_mathffpname,A1
0001F460 <AmiBlitz3.ab3@1221>   MOVEA.l _execbase,A6
0001F464 <AmiBlitz3.ab3@1222>   JSR _OldOpenLibrary(A6)
0001F46A <AmiBlitz3.ab3@1223>   MOVE.l D0,_mathffpbase
0001F46C <AmiBlitz3.ab3@1224> RTS
0001F49E <AmiBlitz3.ab3@1232> !ComData_JMP{comFunc_SetNormalPointer}
0001F4D0 <AmiBlitz3.ab3@1240> !ComData_JMP{comFunc_SetBusyPointer}
0001F4FA <AmiBlitz3.ab3@1244>   !basic
0001F4FE <AmiBlitz3.ab3@1245>   ab3save_filenameP.l = PutD0
0001F508 <AmiBlitz3.ab3@1246>   If ab3save_filenameP
0001F530 <AmiBlitz3.ab3@1247>     ab3save_filename.s = Peek.s(ab3save_filenameP)
0001F55E <AmiBlitz3.ab3@1249>     SaveSource{ab3save_filename}
0001F564 <AmiBlitz3.ab3@1250>   Else
0001F59E <AmiBlitz3.ab3@1251>     error{"INTERNAL ERROR: no filename passed in D0 to SaveSource{}!"}
0001F5BC <AmiBlitz3.ab3@1253>   !asm
0001F5BE <AmiBlitz3.ab3@1254>   RTS
0001F5E8 <AmiBlitz3.ab3@1257>   !basic
0001F5EC <AmiBlitz3.ab3@1258>   ab3save_filenameP.l = PutD0
0001F5F6 <AmiBlitz3.ab3@1259>   If ab3save_filenameP
0001F61E <AmiBlitz3.ab3@1260>     ab3save_filename.s = Peek.s(ab3save_filenameP)
0001F64C <AmiBlitz3.ab3@1261>     LoadSource{ab3save_filename}
0001F652 <AmiBlitz3.ab3@1262>   Else
0001F68C <AmiBlitz3.ab3@1263>     error{"INTERNAL ERROR: no filename passed in D0 to LoadSource{}!"}
0001F6AA <AmiBlitz3.ab3@1265>   !asm
0001F6AC <AmiBlitz3.ab3@1266>   RTS
0001F6D6 <AmiBlitz3.ab3@1269>   !basic
0001F6DC <AmiBlitz3.ab3@1270>   ClearSource{}
0001F6FA <AmiBlitz3.ab3@1271>   !asm
0001F6FC <AmiBlitz3.ab3@1272>   RTS
0001F726 <AmiBlitz3.ab3@1275>   !basic
0001F72C <AmiBlitz3.ab3@1276>   OpenConsoleFake{}
0001F74A <AmiBlitz3.ab3@1277>   !asm
0001F74C <AmiBlitz3.ab3@1278>   RTS
0001F776 <AmiBlitz3.ab3@1282>   !basic
0001F77C <AmiBlitz3.ab3@1283>   CloseConsoleFake{}
0001F79A <AmiBlitz3.ab3@1284>   !asm
0001F79C <AmiBlitz3.ab3@1285>   RTS
0001F7A2 <AmiBlitz3.ab3@1289>   MOVE.w d6,menuitemdebug
0001F7CC <AmiBlitz3.ab3@1290>   !basic
0001F7DE <AmiBlitz3.ab3@1291>   menuitemx.l = Peek.w(?menuitemdebug)
0001F804 <AmiBlitz3.ab3@1292>   If menuitemx>16 OR  menuitemx<0
0001F878 <AmiBlitz3.ab3@1293>     error{"Called invalid AB3 Menuitem #"+Str$(menuitemx)+"!"}
0001F880 <AmiBlitz3.ab3@1294>     menuitemx=0
0001F890 <AmiBlitz3.ab3@1296>   Poke.w ?menuitemdebug,menuitemx
0001F8AE <AmiBlitz3.ab3@1297>   !asm
0001F8B4 <AmiBlitz3.ab3@1298>   MOVE.w menuitemdebug,d6
0001F8BA <AmiBlitz3.ab3@1301>   MOVE.l A5,firstitem_
0001F8C0 <AmiBlitz3.ab3@1302>   MOVE.w D7,numlines_org
0001F8C6 <AmiBlitz3.ab3@1303>   MOVE.l d7,numlines
0001F8C8 <AmiBlitz3.ab3@1304>   LSL.w #2,D6
0001F8CE <AmiBlitz3.ab3@1305>   LEA menu_items,A0
0001F8D2 <AmiBlitz3.ab3@1306>   MOVEA.l $0(A0,D6.W),A0
0001F8DC <AmiBlitz3.ab3@1307>   MOVE.l #$FFFFffff,linenumat
0001F8E6 <AmiBlitz3.ab3@1308>   MOVE.l #$FFFFffff,compilelinecounter
0001F8E8 <AmiBlitz3.ab3@1311>   JSR (A0)                              ; jsr to the function for the menuitem
0001F8EE <AmiBlitz3.ab3@1312>   MOVE.l compilelinecounter,D0
0001F8F0 <AmiBlitz3.ab3@1313> RTS
0001F8F4 <AmiBlitz3.ab3@1315> menuitemdebug: Dc.l 0
0001F8F8 <AmiBlitz3.ab3@1317> mempool                Dc.l 0
0001F90E <AmiBlitz3.ab3@1318> str_loaddebugmessage:  Dc.b "Debug module to load",0 : Even
0001F914 <AmiBlitz3.ab3@1319> dloaderr:             JSR handle_compileerror
0001F930 <AmiBlitz3.ab3@1320>                        Dc.b "Can't LoadSeg debug module!",0 : Even
0001F96E <AmiBlitz3.ab3@1328>   !ComData_GetL{comFunc_ASLFileRequest,A3}
0001F974 <AmiBlitz3.ab3@1329>   LEA str_loaddebugmessage,A2
0001F97A <AmiBlitz3.ab3@1330>   LEA str_blitz3assign,A0
0001F980 <AmiBlitz3.ab3@1331>   LEA str_temp_debugmodulename,A1
0001F982 <AmiBlitz3.ab3@1333>   JSR (A3)                                                  ;open ped filerequest
0001F986 <AmiBlitz3.ab3@1335>   BEQ.w menu_loaddebugmodule_noload
0001F98C <AmiBlitz3.ab3@1336>   MOVE.l D0,ptr_temp_debugmodule
0001F990 <AmiBlitz3.ab3@1337>   BSR.w call_setpointerbusy
0001F996 <AmiBlitz3.ab3@1338> 
0001F99C <AmiBlitz3.ab3@1339>   MOVE.l A7,errstack
0001F9A6 <AmiBlitz3.ab3@1340>   MOVE.l #menu_loaddebugmodule_noload,errcont
0001F9AC <AmiBlitz3.ab3@1341>   MOVE.l ptr_temp_debugmodule,D1
0001F9B0 <AmiBlitz3.ab3@1343>   MOVEA.l _dosbase(PC),A6
0001F9B4 <AmiBlitz3.ab3@1344>   JSR _LoadSeg(A6)
0001F9B6 <AmiBlitz3.ab3@1345>   MOVE.l D0,D7
0001F9BA <AmiBlitz3.ab3@1346>   BEQ.w dloaderr
0001F9C0 <AmiBlitz3.ab3@1347>   MOVE.l ptr_seg_debugger,D1
0001F9C4 <AmiBlitz3.ab3@1348>   BEQ.b menu_loaddebugmodule_ndseg
0001F9C8 <AmiBlitz3.ab3@1349>   MOVEA.l _dosbase(PC),A6
0001F9CC <AmiBlitz3.ab3@1350>   JSR _UnLoadSeg(A6)
0001F9D0 <AmiBlitz3.ab3@1351>   BSR.w call_setpointernormal
0001F9D6 <AmiBlitz3.ab3@1354>   MOVE.l D7,ptr_seg_debugger
0001F9D8 <AmiBlitz3.ab3@1357> RTS
0001F9F6 <AmiBlitz3.ab3@1360> str_request_exename:   Dc.b "Name of Executable to Create:",0 : Even                        ;xtext org source
0001FAB6 <AmiBlitz3.ab3@1361> exepath:               Ds.l 48                             ;Ds.b #MAX_STRINGSIZE ; Ds.l 48  ;xpath  dcb.b 192,0 org source
0001FB76 <AmiBlitz3.ab3@1362> exefilename:           Ds.l 48                             ;Ds.b #MAX_STRINGSIZE ; Ds.l 48  ;xname  dcb.b 192,0 org source
0001FB7A <AmiBlitz3.ab3@1363> ptr_newexefilename:    Dc.l 0                                                               ;execname org
0001FBA4 <AmiBlitz3.ab3@1367>   !basic
0001FBCE <AmiBlitz3.ab3@1368>   exepath.s = Peek.s(?exepath)
0001FBF8 <AmiBlitz3.ab3@1369>   exefile.s = Peek.s(?exefilename)
0001FC78 <AmiBlitz3.ab3@1370>   exefile.s = dos_AddPart{exepath,exefile}
0001FCB0 <AmiBlitz3.ab3@1371>   Poke.s ?tempspace,exefile
0001FCCE <AmiBlitz3.ab3@1372>   !asm
0001FCD4 <AmiBlitz3.ab3@1393>   LEA tempspace,a0
0001FCD6 <AmiBlitz3.ab3@1394>   MOVE.l a0,d0
0001FCDA <AmiBlitz3.ab3@1395> BRA newcreate2
0001FD04 <AmiBlitz3.ab3@1401>   !basic
0001FD2E <AmiBlitz3.ab3@1402>   request_exename.s = Peek.s(?str_request_exename )
0001FD8A <AmiBlitz3.ab3@1403>   request_exename   = !TRANS{request_exename}
0001FD90 <AmiBlitz3.ab3@1404>   GetD0 &request_exename
0001FDAE <AmiBlitz3.ab3@1405>   !asm
0001FDB0 <AmiBlitz3.ab3@1406>   MOVE.l D0,A2
0001FDEE <AmiBlitz3.ab3@1409>   !ComData_GetL{comFunc_ASLFileRequest,A3}
0001FDF4 <AmiBlitz3.ab3@1411>   LEA exepath,A0
0001FDFA <AmiBlitz3.ab3@1412>   LEA exefilename,A1
0001FDFC <AmiBlitz3.ab3@1414>   JSR (A3)                                                 ;open ped filerequest
0001FE00 <AmiBlitz3.ab3@1416>   BEQ.w cancel_createexe
0001FE0A <AmiBlitz3.ab3@1419>   ADD.l #1,number_of_builds
0001FE10 <AmiBlitz3.ab3@1422>   MOVE.l D0,ptr_newexefilename
0001FE18 <AmiBlitz3.ab3@1423>   MOVE.w #-1,debugversion
0001FE1E <AmiBlitz3.ab3@1424>   MOVE.w set_make_smallestcode,-(A7)
0001FE26 <AmiBlitz3.ab3@1428>     MOVE.w #1,makeexec
0001FE2C <AmiBlitz3.ab3@1429>     JSR ab3_OpenDebugFile
0001FE30 <AmiBlitz3.ab3@1430>     BSR.w startcompile
0001FE36 <AmiBlitz3.ab3@1431>     JSR ab3_CloseDebugFile
0001FE40 <AmiBlitz3.ab3@1432>     CMP.l #"NORE",reqmode
0001FE44 <AmiBlitz3.ab3@1433>   BEQ 'l1
0001FE4A <AmiBlitz3.ab3@1435>   TST.w anyerrs
0001FE4E <AmiBlitz3.ab3@1436>   BNE.b 'skip
0001FE52 <AmiBlitz3.ab3@1437>   BSR.w savefile
0001FE58 <AmiBlitz3.ab3@1440>   MOVE.w (A7)+,set_make_smallestcode
0001FE5A <AmiBlitz3.ab3@1443> RTS
0001FE62 <AmiBlitz3.ab3@1447>   MOVE.w #-1,flag_noPED
0001FE64 <AmiBlitz3.ab3@1448> RTS
0001FE6C <AmiBlitz3.ab3@1452>   MOVE.w #-1,flag_noCLI
0001FE6E <AmiBlitz3.ab3@1453> RTS
0001FE98 <AmiBlitz3.ab3@1456>   !basic
0001FEC0 <AmiBlitz3.ab3@1457>     If dbg_fid>=0 Then file_Close{dbg_fid} : dbg_fid = -1
0001FED0 <AmiBlitz3.ab3@1458>     Poke.w ?word_WriteDebugFileNow,0
0001FEEE <AmiBlitz3.ab3@1459>   !asm
0001FEF0 <AmiBlitz3.ab3@1460> RTS
0001FF1A <AmiBlitz3.ab3@1463>   !basic
0001FF2A <AmiBlitz3.ab3@1464>   Poke.w ?word_WriteDebugFileNow,0
0001FF3C <AmiBlitz3.ab3@1465>   If dbg_fid>=0
0001FF52 <AmiBlitz3.ab3@1466>     file_Close{dbg_fid} : dbg_fid = -1
0001FF64 <AmiBlitz3.ab3@1468>   If dbg_fid.l<0
0001FF66 <AmiBlitz3.ab3@1469>     CLR.l d0
0001FFA4 <AmiBlitz3.ab3@1470>     !ComData_GetW{comWord_CreateDebugFile,D0}
0001FFA8 <AmiBlitz3.ab3@1471>     dbg_Create.l = PutD0
0001FFB2 <AmiBlitz3.ab3@1472>     If (dbg_Create) ; only when set!
0001FFC2 <AmiBlitz3.ab3@1473>       exefileP.l = Peek.l (?ptr_newexefilename)
0001FFEA <AmiBlitz3.ab3@1474>       exefile.s = ""
0002001C <AmiBlitz3.ab3@1475>       If exefileP Then exefile.s = Peek.s(exefileP)
00020054 <AmiBlitz3.ab3@1476>       If exefile><""
000200AA <AmiBlitz3.ab3@1477>         dbg_fid = file_Open{exefile+".dbg",#file_forcewrite}
000200BC <AmiBlitz3.ab3@1478>         If dbg_fid>=0
000200CE <AmiBlitz3.ab3@1479>           Poke.w ?word_WriteDebugFileNow,-1
000200DA <AmiBlitz3.ab3@1482>       oldhunkoffset.l = -1
00020102 <AmiBlitz3.ab3@1483>       oldfile.s       = ""
00020120 <AmiBlitz3.ab3@1486>   !asm
00020122 <AmiBlitz3.ab3@1487> RTS
00020128 <AmiBlitz3.ab3@1490> TST.w word_WriteDebugFileNow
0002012C <AmiBlitz3.ab3@1491> BEQ 'skipdebugfile
00020156 <AmiBlitz3.ab3@1492> !basic
00020168 <AmiBlitz3.ab3@1493>   If dbg_fid>=0
0002017A <AmiBlitz3.ab3@1494>     pass.l          = Peek.w(?pass)
0002018C <AmiBlitz3.ab3@1495>     makesmallest.b  = Peek.b(?make_smallestcode)               ; get the status of make_smallestcode  tomsmart1
000201B0 <AmiBlitz3.ab3@1496> 
000201B6 <AmiBlitz3.ab3@1497>       oldhunkoffset.l = hunkoffset.l
000201EA <AmiBlitz3.ab3@1498>       oldfile.s       = codefile.s
00020206 <AmiBlitz3.ab3@1499>       If Peek.w (?ininclude)>0
00020216 <AmiBlitz3.ab3@1500>         codeline.l = Peek.l(?includeline);-1
00020286 <AmiBlitz3.ab3@1501>         codefile.s = dos_FilePart{incdim(Peek.w(?ininclude)-1)}
0002028C <AmiBlitz3.ab3@1502>       Else
000202BA <AmiBlitz3.ab3@1503>         !ComData_LEA{comStr_SourceName,A0}
000202BC <AmiBlitz3.ab3@1504>         MOVE.l A0,D0
000202C0 <AmiBlitz3.ab3@1505>         sourceP.l = PutD0
000202E8 <AmiBlitz3.ab3@1506>         codefile.s = Peek.s(sourceP)
000202F8 <AmiBlitz3.ab3@1507>         codeline.l = Peek.l(?linenumat)
00020320 <AmiBlitz3.ab3@1509>       hunkoffset.l = Peek.l(?destpointer)-Peek.l(?destbufferstart)
00020374 <AmiBlitz3.ab3@1510>       If oldhunkoffset><hunkoffset OR oldfile><codefile
00020384 <AmiBlitz3.ab3@1517>         *sourceLine.SourceLine_t = Peek.l(?sourceline)
0002038E <AmiBlitz3.ab3@1518>         If *sourceLine
000203A4 <AmiBlitz3.ab3@1519>           MaxLen detokenline.s = 65536
000203E6 <AmiBlitz3.ab3@1520>          !ComData_GetL{comPtr_PreProcessor,include_preprocessor}
000203F6 <AmiBlitz3.ab3@1521>          *tn.preprocessor = Peek.l(?include_preprocessor)
00020422 <AmiBlitz3.ab3@1522>           written.l = preproc_Detokenize{*tn,&*sourceLine\Text,&detokenline,*sourceLine\CharLength}
00020450 <AmiBlitz3.ab3@1523>           If written>0 Then Poke.b &detokenline+written-1,0
0002047A <AmiBlitz3.ab3@1524>           sourceLineText.s = Peek.s(&detokenline)
00020480 <AmiBlitz3.ab3@1525>         Else
000204A8 <AmiBlitz3.ab3@1526>           sourceLineText = "NULL"
00020570 <AmiBlitz3.ab3@1529>         file_WriteLine{dbg_fid,Hex$(hunkoffset)+" <"+codefile+"@"+Str$(codeline)+"> "+sourceLineText}
0002058E <AmiBlitz3.ab3@1535> !asm
00020590 <AmiBlitz3.ab3@1537> RTS
00020592 <AmiBlitz3.ab3@1539> word_WriteDebugFileNow: Dc.w 0
00020594 <AmiBlitz3.ab3@1541> flag_noPED:  Ds.w 1                                        ;closeed org source
00020596 <AmiBlitz3.ab3@1542> flag_noCLI:  Ds.w 1                                        ;nocli org source
0002059A <AmiBlitz3.ab3@1546>   MOVEM.l A2-A3,-(A7)
000205A0 <AmiBlitz3.ab3@1547>   CLR.b doublepeek
000205A6 <AmiBlitz3.ab3@1548>   MOVE.l A5,lastsourcepos
000205AC <AmiBlitz3.ab3@1549>    JSR getchar
000205B0 <AmiBlitz3.ab3@1550>   CMP.w #$2E,D0              ;'.'
000205B4 <AmiBlitz3.ab3@1551>    BEQ.w 'ok
000205BA <AmiBlitz3.ab3@1552>   MOVEA.l defaulttype,A2
000205BE <AmiBlitz3.ab3@1553>   CMP.w #$24,D0              ;'$'
000205C2 <AmiBlitz3.ab3@1554>    BNE.w 'none
000205C4 <AmiBlitz3.ab3@1555>   MOVEQ.l #$07,D1
000205C8 <AmiBlitz3.ab3@1556>  BRA.w 'skip
000205CE <AmiBlitz3.ab3@1559>   JSR getparameter2
000205D2 <AmiBlitz3.ab3@1560>   BEQ.w JUMP_syntaxerr1
000205D8 <AmiBlitz3.ab3@1561>   LEA newtypebase,A2
000205DE <AmiBlitz3.ab3@1562>   JSR findtype
000205E2 <AmiBlitz3.ab3@1563>   BNE.w JUMP_notypeerr1
000205EC <AmiBlitz3.ab3@1568>   MOVE.w oldqflag,instringon
000205F2 <AmiBlitz3.ab3@1569>   MOVEA.l lastsourcepos,A5
000205F8 <AmiBlitz3.ab3@1571>   MOVE.l a2,functionreturntype
00020600 <AmiBlitz3.ab3@1572>   CMPI.l #$100,$4(A2)
00020604 <AmiBlitz3.ab3@1573>   BLE.w 'isvar
00020606 <AmiBlitz3.ab3@1577>   MOVEQ #3,d1
0002060A <AmiBlitz3.ab3@1578>   BRA 'skip
0002060E <AmiBlitz3.ab3@1588>   MOVE.w $6(A2),D1
00020614 <AmiBlitz3.ab3@1590>   CMP.w #8,8(a2)
00020618 <AmiBlitz3.ab3@1591>   BNE 'l1
00020620 <AmiBlitz3.ab3@1592>   MOVE.b #1,doublepeek
00020626 <AmiBlitz3.ab3@1597>   MOVE.w D1,convsize
0002062A <AmiBlitz3.ab3@1598>   MOVEM.l (A7)+,A2-A3
0002062C <AmiBlitz3.ab3@1599> RTS
00020632 <AmiBlitz3.ab3@1601> JUMP_notypeerr1  JMP notypeerr
00020638 <AmiBlitz3.ab3@1602> JUMP_illtypeerr1 JMP illtypeerr
0002063E <AmiBlitz3.ab3@1603> JUMP_syntaxerr1  JMP syntaxerr
00020642 <AmiBlitz3.ab3@1608>   MOVEM.l D0-D1/A0-A1/A6,-(A7)
00020648 <AmiBlitz3.ab3@1609>   MOVEA.l _execbase,A6
0002064E <AmiBlitz3.ab3@1610>   TST.b MorphOS                    ; test if we have MorphOS ( 0 no, 1 yes)
00020652 <AmiBlitz3.ab3@1611>    BEQ 'useclearU                  ; if we have 0 = No MorpOS then jump
00020654 <AmiBlitz3.ab3@1613>   MOVEQ.l #8,d1
0002065A <AmiBlitz3.ab3@1614>   MOVE.l #200,d0
0002065E <AmiBlitz3.ab3@1615>   JSR _CacheClearE(A6)
00020662 <AmiBlitz3.ab3@1616>  BRA 'exit
00020666 <AmiBlitz3.ab3@1655>   JSR _CacheClearU(A6)
0002066A <AmiBlitz3.ab3@1658>   MOVEM.l (A7)+,D0-D1/A0-A1/A6
0002066C <AmiBlitz3.ab3@1659> RTS
00020676 <AmiBlitz3.ab3@1664>   ADD.l #1,number_of_builds
0002067C <AmiBlitz3.ab3@1666>   CLR.w debugversion
00020682 <AmiBlitz3.ab3@1667>   CLR.w flag_noPED
00020688 <AmiBlitz3.ab3@1668>   CLR.w flag_noCLI
00020690 <AmiBlitz3.ab3@1671>     MOVE.w #0,makeexec                                     ;MOVE.w #$FFFF,debugversion
00020694 <AmiBlitz3.ab3@1672>     BSR.w startcompile
0002069E <AmiBlitz3.ab3@1673>     CMP.l #"NORE",reqmode
000206A2 <AmiBlitz3.ab3@1674>   BEQ 'l1
000206A8 <AmiBlitz3.ab3@1677>   TST.w anyerrs
000206AC <AmiBlitz3.ab3@1678>    BNE.w JL_0_3482
000206B0 <AmiBlitz3.ab3@1680>   MOVE.w flag_noPED(PC),D1
000206B4 <AmiBlitz3.ab3@1681>    BEQ.w skip_closingGUI
000206E6 <AmiBlitz3.ab3@1686>   !ComData_JSR{comFunc_CloseGUI}
000206EA <AmiBlitz3.ab3@1687> BRA.b runprogram
000206EE <AmiBlitz3.ab3@1691>   BSR.w compilerequester
000206F4 <AmiBlitz3.ab3@1694>   MOVEA.l _dosbase,A6
000206FA <AmiBlitz3.ab3@1695>   LEA exepath,a0
000206FC <AmiBlitz3.ab3@1696>   MOVE.l a0,d1
000206FE <AmiBlitz3.ab3@1697>   MOVEQ #-2,d2
00020702 <AmiBlitz3.ab3@1698>   JSR _Lock(a6)                                            ;lock
00020708 <AmiBlitz3.ab3@1699>   MOVE.l d0,exelock
0002070E <AmiBlitz3.ab3@1700>   MOVE.l #0,d1
00020712 <AmiBlitz3.ab3@1701>   JSR _CurrentDir(A6)
00020718 <AmiBlitz3.ab3@1702>   MOVE.l D0,lock_currentdir
0002071A <AmiBlitz3.ab3@1703>   MOVE.l D0,D1
0002071E <AmiBlitz3.ab3@1704>   JSR _CurrentDir(A6)
00020724 <AmiBlitz3.ab3@1705>   CLR.l ptr_exetask
0002072A <AmiBlitz3.ab3@1714>   MOVE.l #str_process_name,D1
0002072C <AmiBlitz3.ab3@1715>   MOVEQ.l #$00,D2
00020732 <AmiBlitz3.ab3@1716>   MOVE.l #proc_seglist,D3
00020734 <AmiBlitz3.ab3@1717>   LSR.l #2,D3
0002073A <AmiBlitz3.ab3@1718>   MOVE.l stacksize,D4
00020740 <AmiBlitz3.ab3@1719>   MOVEA.l _dosbase,A6
00020744 <AmiBlitz3.ab3@1720>   JSR _CreateProc(A6)                                      ;runtask
00020746 <AmiBlitz3.ab3@1721>   TST.l D0
0002074A <AmiBlitz3.ab3@1722>    BEQ ErrorRunningProg
00020780 <AmiBlitz3.ab3@1724>   !ComData_SetB{comByte_RunningFlag,#1}   ; this should be done here, straigt after it is clear that
00020786 <AmiBlitz3.ab3@1726>   TST.w flag_noPED
0002078A <AmiBlitz3.ab3@1727>    BNE.b JL_0_344E
0002078E <AmiBlitz3.ab3@1728>   BSR.w close_compilewin
00020794 <AmiBlitz3.ab3@1731>   CLR.l firstlocal
0002079A <AmiBlitz3.ab3@1732>   CLR.l firstglob
0002079E <AmiBlitz3.ab3@1733>   MOVE.w flag_noPED(PC),D1
000207A2 <AmiBlitz3.ab3@1734>   BEQ.w skip_openGUI
000207D4 <AmiBlitz3.ab3@1738>   !ComData_JSR{comFunc_CreateGUI}
000207D6 <AmiBlitz3.ab3@1748> RTS
000207E0 <AmiBlitz3.ab3@1751>   MOVE.l #1,_runerror
000207E4 <AmiBlitz3.ab3@1752> BRA JL_0_344E
000207E8 <AmiBlitz3.ab3@1754> _runerror: Dc.l 0
000207EC <AmiBlitz3.ab3@1755> lock_currentdir:    Ds.l 1                                          ;tasklock org source
000207F0 <AmiBlitz3.ab3@1756> ptr_exetask:        Ds.l 1                                          ;panictask org source
000207F4 <AmiBlitz3.ab3@1757> signalNum:          Ds.l 1                                          ;panicbit org source
000207F8 <AmiBlitz3.ab3@1758> signals:            Ds.l 1                                          ;panicmask org source
0002080E <AmiBlitz3.ab3@1760> str_process_name:   Dc.b "Blitz ][ Program Proc",0 : Even           ;procname org source
00020813 <AmiBlitz3.ab3@1761>                     Ds.b 5                                          ;cnop 0,4 :dc.l 0   ;length org source
00020814 <AmiBlitz3.ab3@1762> Even4
00020818 <AmiBlitz3.ab3@1764> ptr_ThisTask:       Ds.l 1                                          ;length
0002081C <AmiBlitz3.ab3@1765> .proc_seglist:      Ds.l 1                                          ;procstart org source ;next
00020822 <AmiBlitz3.ab3@1769>   MOVEA.l $4,A0
0002082A <AmiBlitz3.ab3@1770>   MOVE.l  $114(A0),ptr_exetask
00020830 <AmiBlitz3.ab3@1772>   MOVEA.l _dosbase,A6
00020836 <AmiBlitz3.ab3@1773>   MOVE.l exelock,D1
0002083A <AmiBlitz3.ab3@1774>   JSR _CurrentDir(A6)
00020870 <AmiBlitz3.ab3@1779>   !ComData_SetB{comByte_RunningFlag,#1}
00020874 <AmiBlitz3.ab3@1785>   MOVE.w flag_noCLI(PC),D1
00020878 <AmiBlitz3.ab3@1786>    BNE.b skip_openconsole
000208AA <AmiBlitz3.ab3@1790>   !ComData_JSR{comFunc_OpenConsole}
000208AE <AmiBlitz3.ab3@1793>   BSR.w calcvbr
000208B4 <AmiBlitz3.ab3@1794>   MOVEA.l vbr,A0
000208BA <AmiBlitz3.ab3@1799>   CLR.w dirmode
000208C0 <AmiBlitz3.ab3@1800>   CLR.l firstglob
000208C6 <AmiBlitz3.ab3@1801>   CLR.l firstlocal
000208CC <AmiBlitz3.ab3@1803>   MOVE.l stacksize,D2
000208D2 <AmiBlitz3.ab3@1804>   MOVE.l #$624C745A,D7                                      ;#'bLtZ',d7 org source ;force cli-type run
000208D8 <AmiBlitz3.ab3@1805>   LEA str_cliarguments,A0                                   ;cli arguement
000208DE <AmiBlitz3.ab3@1806>   MOVEA.l destbufferstart,A1
000208E2 <AmiBlitz3.ab3@1807>   BSR.w Aclearcache
000208E4 <AmiBlitz3.ab3@1810>   JSR (A1)                                                 ; execute compiled code  ;Run the thing!
000208EA <AmiBlitz3.ab3@1812>   MOVEA.l vbr,A0
000208F0 <AmiBlitz3.ab3@1814>   CLR.l firstglob
000208F6 <AmiBlitz3.ab3@1815>   CLR.l firstlocal
000208FC <AmiBlitz3.ab3@1816>   MOVEA.l _dosbase,A6
00020902 <AmiBlitz3.ab3@1817>   MOVE.l exelock,d1
00020906 <AmiBlitz3.ab3@1818>   BEQ 'nolock
0002090A <AmiBlitz3.ab3@1819>   JSR _UnLock(a6)
00020940 <AmiBlitz3.ab3@1824>   !ComData_SetB{comByte_RunningFlag,#0}
00020944 <AmiBlitz3.ab3@1827>   MOVE.w flag_noCLI(PC),D1
00020948 <AmiBlitz3.ab3@1828>    BNE.b skip_closeconsole
0002097A <AmiBlitz3.ab3@1832>   !ComData_JSR{comFunc_CloseConsole}
00020982 <AmiBlitz3.ab3@1835>   MOVE.w #$0001,stopit
00020986 <AmiBlitz3.ab3@1836>   MOVE.l signals(PC),D0
0002098C <AmiBlitz3.ab3@1837>   MOVEA.l ptr_ThisTask,A1
00020992 <AmiBlitz3.ab3@1838>   MOVEA.l _execbase,A6
00020996 <AmiBlitz3.ab3@1839>   JSR _Signal(A6)
00020998 <AmiBlitz3.ab3@1840> RTS
0002099E <AmiBlitz3.ab3@1844>   MOVEA.l _execbase,A6
000209A2 <AmiBlitz3.ab3@1845>   MOVE.w $128(A6),D0
000209A4 <AmiBlitz3.ab3@1846>   MOVEQ.l #$00,D1
000209A8 <AmiBlitz3.ab3@1847>   ANDI.w #$F,D0
000209AC <AmiBlitz3.ab3@1850>     BEQ.b 'skip
000209AE <AmiBlitz3.ab3@1851>     ADDQ.w #1,D1
000209B0 <AmiBlitz3.ab3@1852>     LSR.w #1,D0
000209B4 <AmiBlitz3.ab3@1853>  BRA.b 'loop
000209B6 <AmiBlitz3.ab3@1856>   MOVEQ.l #$00,D2
000209BA <AmiBlitz3.ab3@1857>   CMP.w #$2,D1
000209BE <AmiBlitz3.ab3@1858>    BCS.b 'skip2
000209C4 <AmiBlitz3.ab3@1859>   MOVEA.l _execbase,A6
000209C8 <AmiBlitz3.ab3@1860>   JSR _SuperState(A6)
000209CC <AmiBlitz3.ab3@1861>   Dc.l $4E7A2801                                           ;movec vbr,D2
000209D0 <AmiBlitz3.ab3@1862>   JSR _UserState(A6)
000209D6 <AmiBlitz3.ab3@1865>   MOVE.l D2,vbr
000209D8 <AmiBlitz3.ab3@1866> RTS
000209DE <AmiBlitz3.ab3@1870>   LEA instrtab,a0
000209E4 <AmiBlitz3.ab3@1871>   MOVE.l #labelhash-instrtab,d0
000209E6 <AmiBlitz3.ab3@1872>   ASR.l #2,d0
000209E8 <AmiBlitz3.ab3@1873>   SUBQ.l #1,d0
000209EA <AmiBlitz3.ab3@1876>   CLR.l (a0)+
000209EC <AmiBlitz3.ab3@1877>   SUBQ.l #1,d0
000209F0 <AmiBlitz3.ab3@1878>   BNE 'l10
000209F4 <AmiBlitz3.ab3@1879>   BSR.w call_setpointerbusy
000209F8 <AmiBlitz3.ab3@1880>   BSR.w free_userlibs
000209FC <AmiBlitz3.ab3@1881>   BSR.w scan_for_userlibs
00020A00 <AmiBlitz3.ab3@1882>   BSR.w loadblitzlibs
00020A04 <AmiBlitz3.ab3@1883> BRA.w call_setpointernormal
00020A2E <AmiBlitz3.ab3@1889>   !basic
00020A68 <AmiBlitz3.ab3@1890>   Poke.l ?size_acidlibs, dos_GetFileSize{Peek$(?str_path_acidlibs)}
00020A78 <AmiBlitz3.ab3@1892>   deflibNameP.l = Peek.l(?deflib)
00020A82 <AmiBlitz3.ab3@1893>   If deflibNameP
00020AB4 <AmiBlitz3.ab3@1894>     If Peek.s(deflibNameP)<>""
00020AFE <AmiBlitz3.ab3@1895>       Poke.l ?size_deflibs, dos_GetFileSize{Peek.s(Peek.l(?deflib))}
00020B04 <AmiBlitz3.ab3@1896>     Else
00020B3E <AmiBlitz3.ab3@1897>       Poke.l ?size_deflibs, dos_GetFileSize{Peek.s(?str_path_deflibs)}
00020B44 <AmiBlitz3.ab3@1899>   Else
00020B7E <AmiBlitz3.ab3@1900>     Poke.l ?size_deflibs, dos_GetFileSize{Peek.s(?str_path_deflibs)}
00020BB8 <AmiBlitz3.ab3@1901>     error{"INTERNAL: Invalid deflib name pointer!"}
00020BD6 <AmiBlitz3.ab3@1903>   !asm
00020BDC <AmiBlitz3.ab3@1908>   MOVE.l #str_path_userlibs,D1
00020BDE <AmiBlitz3.ab3@1909>   MOVEQ.l #-$02,D2
00020BE4 <AmiBlitz3.ab3@1910>   MOVEA.l _dosbase,A6
00020BE8 <AmiBlitz3.ab3@1911>   JSR _Lock(A6)
00020BEA <AmiBlitz3.ab3@1912>   MOVE.l D0,D7
00020BEE <AmiBlitz3.ab3@1913>    BEQ.w exit_get_libraries
00020BF0 <AmiBlitz3.ab3@1914>   MOVE.l D7,D1
00020BF6 <AmiBlitz3.ab3@1915>   MOVE.l #ptr_parameterstore,D2
00020BFA <AmiBlitz3.ab3@1916>   JSR _Examine(A6)
00020BFC <AmiBlitz3.ab3@1917>   TST.l D0
00020C00 <AmiBlitz3.ab3@1918>   BEQ.w unlock_and_exit_get_libraries
00020C06 <AmiBlitz3.ab3@1919>   MOVE.l fib_DirEntryType,D0
00020C0A <AmiBlitz3.ab3@1920>   BMI.w unlock_and_exit_get_libraries
00020C0C <AmiBlitz3.ab3@1925>     MOVE.l D7,D1
00020C12 <AmiBlitz3.ab3@1926>     MOVE.l #ptr_parameterstore,D2
00020C18 <AmiBlitz3.ab3@1927>     MOVEA.l _dosbase,A6
00020C1C <AmiBlitz3.ab3@1928>     JSR _ExNext(A6)
00020C1E <AmiBlitz3.ab3@1929>     TST.l D0
00020C22 <AmiBlitz3.ab3@1930>      BEQ.w exit_scan_libsdrawer                            ; kein weiteres File
00020C28 <AmiBlitz3.ab3@1932>     MOVE.l fib_DirEntryType,D0                             ; positive for directoies, negative for files
00020C2C <AmiBlitz3.ab3@1933>     BPL.w scan_libsdrawer                                  ; skip directories
00020C32 <AmiBlitz3.ab3@1935>     LEA fib_FileName,A0                                    ; pruefen ob infofile
00020C36 <AmiBlitz3.ab3@1936>     BSR.w check_for_infoextention
00020C3A <AmiBlitz3.ab3@1937>     BEQ.w scan_libsdrawer
00020C40 <AmiBlitz3.ab3@1939>     MOVEA.l _execbase,A6                                   ; allocate $26 = 38 bytes fuer listeneintrag
00020C42 <AmiBlitz3.ab3@1940>     MOVEQ.l #$26,D0
00020C44 <AmiBlitz3.ab3@1941>     MOVEQ.l #$01,D1
00020C4A <AmiBlitz3.ab3@1942>     MOVE.l mempool,a0
00020C4E <AmiBlitz3.ab3@1943>     JSR _AllocPooled(a6)
00020C54 <AmiBlitz3.ab3@1945>     MOVEA.l _dosbase,A6
00020C56 <AmiBlitz3.ab3@1946>     MOVE.l D0,D6                                           ; sichere speicheradresse in D6
00020C5C <AmiBlitz3.ab3@1949>     LEA ptr_userlibs_list,A0                               ; pruefe liste
00020C5E <AmiBlitz3.ab3@1952>     MOVE.l (A0),D5
00020C62 <AmiBlitz3.ab3@1953>      BEQ.w JL_0_3722                                       ; kein pointer da? kann springe weiter
00020C64 <AmiBlitz3.ab3@1954>     MOVEA.l D5,A2
00020C66 <AmiBlitz3.ab3@1955>     ADDQ.w #6,A2                                           ; 6 bytes weiter gehen, um dateinamen zu speichern
00020C6C <AmiBlitz3.ab3@1958>     LEA fib_FileName,A1                                    ; vergleich, ob Dateiname schon in der liste ist
00020C6E <AmiBlitz3.ab3@1961>       MOVEQ.l #$00,D0
00020C70 <AmiBlitz3.ab3@1962>       MOVE.b (A1)+,D0
00020C74 <AmiBlitz3.ab3@1963>        BEQ.w JL_0_3722                                     ; dateiname komplett, dann weiter
00020C76 <AmiBlitz3.ab3@1964>       MOVEQ.l #$00,D1
00020C78 <AmiBlitz3.ab3@1965>       MOVE.b (A2)+,D1
00020C7C <AmiBlitz3.ab3@1966>        BEQ.w JL_0_371C
00020C9E <AmiBlitz3.ab3@1967>       !compare1                                            ;bsr.w tstalpha
00020CA2 <AmiBlitz3.ab3@1968>       BNE.w JL_0_3702
00020CA6 <AmiBlitz3.ab3@1969>       ANDI.w #$DF,D0
00020CA8 <AmiBlitz3.ab3@1972>       EXG.l D0,D1
00020CCA <AmiBlitz3.ab3@1973>       !compare1                                            ;bsr.w tstalpha
00020CCE <AmiBlitz3.ab3@1974>       BNE.w JL_0_3710
00020CD2 <AmiBlitz3.ab3@1975>       ANDI.w #$DF,D0
00020CD4 <AmiBlitz3.ab3@1978>       EXG.l D0,D1
00020CD6 <AmiBlitz3.ab3@1979>       CMP.b D1,D0
00020CDA <AmiBlitz3.ab3@1980>     BEQ.w JL_0_36E6
00020CDE <AmiBlitz3.ab3@1981>     BCS.w JL_0_3722
00020CE0 <AmiBlitz3.ab3@1984>     MOVEA.l D5,A0
00020CE4 <AmiBlitz3.ab3@1985> BRA.w JL_0_36D6
00020CE6 <AmiBlitz3.ab3@1988>     MOVEA.l D6,A1                                          ; hier war die adresse des allokierten Speicers drin
00020CE8 <AmiBlitz3.ab3@1989>     MOVE.l (A0),(A1)
00020CEA <AmiBlitz3.ab3@1990>     MOVE.l A1,(A0)
00020CEC <AmiBlitz3.ab3@1991>     ADDQ.w #4,A1                                           ; pointer zum naechsten namen ueberspringen
00020CF0 <AmiBlitz3.ab3@1992>     MOVE.w #$FFFF,(A1)+                                    ; $FFFF schreiben
00020CF6 <AmiBlitz3.ab3@1993>     MOVEA.l #fib_FileName,A0                               ; dateinamen in die liste kopieren
00020CF8 <AmiBlitz3.ab3@1996>       MOVE.b (A0)+,(A1)+
00020CFC <AmiBlitz3.ab3@1997>     BNE.w JL_0_3734
00020D00 <AmiBlitz3.ab3@1998> BRA.w scan_libsdrawer
00020D02 <AmiBlitz3.ab3@2001>   MOVE.l D7,D1
00020D08 <AmiBlitz3.ab3@2002>   MOVEA.l _dosbase,A6
00020D0C <AmiBlitz3.ab3@2003>   JSR _UnLock(A6)
00020D0E <AmiBlitz3.ab3@2004>   MOVEQ.l #-$01,D0
00020D10 <AmiBlitz3.ab3@2007> RTS
00020D12 <AmiBlitz3.ab3@2010>   MOVE.l D7,D1
00020D18 <AmiBlitz3.ab3@2011>   MOVEA.l _dosbase,A6
00020D1C <AmiBlitz3.ab3@2012>   JSR _UnLock(A6)
00020D1E <AmiBlitz3.ab3@2013>   MOVEQ.l #$00,D0
00020D20 <AmiBlitz3.ab3@2014> RTS
00020D26 <AmiBlitz3.ab3@2018>   MOVEA.l _execbase,A6
00020D2C <AmiBlitz3.ab3@2019>   MOVEA.l ptr_userlibs_list,A2
00020D32 <AmiBlitz3.ab3@2020>   CLR.l ptr_userlibs_list
00020D36 <AmiBlitz3.ab3@2023>     CMPA.w #$0,A2
00020D3A <AmiBlitz3.ab3@2024>     BEQ.w exit_free_userlib
00020D3C <AmiBlitz3.ab3@2025>       MOVEA.l A2,A1
00020D3E <AmiBlitz3.ab3@2026>       MOVEQ.l #$26,D0
00020D40 <AmiBlitz3.ab3@2027>       MOVEA.l (A2),A2
00020D46 <AmiBlitz3.ab3@2028>       MOVE.l mempool,a0
00020D4C <AmiBlitz3.ab3@2029>       MOVEA.l _execbase,A6
00020D50 <AmiBlitz3.ab3@2030>       JSR _FreePooled(A6)
00020D54 <AmiBlitz3.ab3@2031> BRA.w loop_free_userlib
00020D56 <AmiBlitz3.ab3@2034> RTS
00020D58 <AmiBlitz3.ab3@2037> pass:  Dc.w 0                                             ; smallpass org source
00020D5A <AmiBlitz3.ab3@2038> compiler_job: Dc.w 0                                      ; added by thilo: what the compiler is doing at the moment
00020D60 <AmiBlitz3.ab3@2042>   MOVE.l A7,errstack                                      ;startcompile
00020D66 <AmiBlitz3.ab3@2051>   CLR.l reqmode
00020D70 <AmiBlitz3.ab3@2053>   MOVE.l #Aclearallvars,errcont
00020D7A <AmiBlitz3.ab3@2054>   MOVE.l #concomstack,concomsp
00020D7E <AmiBlitz3.ab3@2062>   MOVE.w #1450,D0
00020D80 <AmiBlitz3.ab3@2063>   LSR.w #3,D0
00020D82 <AmiBlitz3.ab3@2064>   SUBQ.w #7,D0                                             ; 173
00020D88 <AmiBlitz3.ab3@2065>   MOVE.w D0,progressbar_width
00020D8A <AmiBlitz3.ab3@2066>   SWAP D0
00020D8C <AmiBlitz3.ab3@2067>   CLR.w D0
00020D92 <AmiBlitz3.ab3@2068>   MOVE.l numlines,d1
00020D96 <AmiBlitz3.ab3@2069>   DIVU.l d1,d0                                             ; progressbar_width / numlines
00020D98 <AmiBlitz3.ab3@2071>   TST.w D0
00020D9C <AmiBlitz3.ab3@2072>   BNE.w JL_0_37C0
00020D9E <AmiBlitz3.ab3@2073>   MOVEQ.l #-$01,D0
00020DA4 <AmiBlitz3.ab3@2076>   MOVE.w D0,progress_per_line
00020DAC <AmiBlitz3.ab3@2085>   BTST #$7,use_debugger
00020DB0 <AmiBlitz3.ab3@2087>   BNE 'debugon
00020DB6 <AmiBlitz3.ab3@2088>   CLR.w debugmode
00020DBA <AmiBlitz3.ab3@2089> BRA.b 'debugoff
00020DC0 <AmiBlitz3.ab3@2092>   SNE debugmode
00020DF8 <AmiBlitz3.ab3@2100>   !ComData_SetB{comByte_DebugMode,debugmode}
00020DFE <AmiBlitz3.ab3@2103>   CLR.w dirmode                                            ;direct mode flag
00020E04 <AmiBlitz3.ab3@2104>   CLR.w ezerr                                              ;quiet error
00020E0A <AmiBlitz3.ab3@2105>   CLR.l currentfunction
00020E10 <AmiBlitz3.ab3@2106>   CLR.w connest
00020E16 <AmiBlitz3.ab3@2107>   CLR.w varmode
00020E1C <AmiBlitz3.ab3@2108>   CLR.w proceduremode
00020E22 <AmiBlitz3.ab3@2109>   CLR.w ininclude
00020E28 <AmiBlitz3.ab3@2110>   CLR.w intstring
00020E2E <AmiBlitz3.ab3@2111>   CLR.w pass
00020E36 <AmiBlitz3.ab3@2112>   MOVE.w #0,compiler_job
00020E3C <AmiBlitz3.ab3@2113>   CLR.l funcscanon
00020E42 <AmiBlitz3.ab3@2122>   CLR.l funcscanon
00020E46 <AmiBlitz3.ab3@2123>   BSR.w compileall
00020E4C <AmiBlitz3.ab3@2124> 
00020E52 <AmiBlitz3.ab3@2125>   TST.l errorcounter
00020E56 <AmiBlitz3.ab3@2126>   BEQ _skiperrorstop
00020E58 <AmiBlitz3.ab3@2127>   RTS
00020E5E <AmiBlitz3.ab3@2130>   MOVE.w dontwrite,d0
00020E62 <AmiBlitz3.ab3@2131>   CMP.w #1,d0
00020E66 <AmiBlitz3.ab3@2132>   BNE 'l3
00020E6C <AmiBlitz3.ab3@2133>   TST.l errorcounter
00020E70 <AmiBlitz3.ab3@2134>   BNE 'l3
00020E76 <AmiBlitz3.ab3@2135>   CLR.w dontwrite
00020E7A <AmiBlitz3.ab3@2136>   BSR compileall                                           ;if a function is not found
00020E80 <AmiBlitz3.ab3@2137>   ADDQ.w #1,pass
00020EBE <AmiBlitz3.ab3@2142>   !ComData_GetB{comByte_FuncOptimize,D0}  ; now its in the xtra file and can be put to GUI settings ; Wanderer
00020EC2 <AmiBlitz3.ab3@2143>   BEQ 'out  ; only if func optimize is set >< 0; Wanderer
00020EC8 <AmiBlitz3.ab3@2144>   LEA firstproc,a0
00020ECE <AmiBlitz3.ab3@2145>   CLR.l savefuncspace
00020ED0 <AmiBlitz3.ab3@2146>   MOVE.l (a0),d0
00020ED2 <AmiBlitz3.ab3@2150>     MOVE.l d0,a0
00020ED6 <AmiBlitz3.ab3@2151>     BEQ 'out
00020EDA <AmiBlitz3.ab3@2152>     TST.b isfunc(a0)
00020EDE <AmiBlitz3.ab3@2153>     BNE 'nex
00020EE2 <AmiBlitz3.ab3@2154>     MOVEM.l d2/a6/a0,-(a7)
00020EE4 <AmiBlitz3.ab3@2156>     MOVEQ #0,d0
00020EE8 <AmiBlitz3.ab3@2157>     MOVE.b $21+#funcentry_extend-1(a0),d0
00020EEC <AmiBlitz3.ab3@2158>     SUB.w #$21+#funcentry_extend,d0
00020EF0 <AmiBlitz3.ab3@2159>     ADD.w #16,d0
00020EF6 <AmiBlitz3.ab3@2160>     MOVE.l #$10000,d1
00020EF8 <AmiBlitz3.ab3@2161>     MOVE.l d0,d2
00020EFE <AmiBlitz3.ab3@2162>     MOVEA.l _execbase,A6
00020F02 <AmiBlitz3.ab3@2163>     JSR _AllocMem(a6)         ; thilo: not 100% sure about this!
00020F04 <AmiBlitz3.ab3@2164>     MOVE.l d0,a1
00020F08 <AmiBlitz3.ab3@2165>     MOVE.l d2,4(a1)
00020F0E <AmiBlitz3.ab3@2166>     MOVE.l unusedfunc,(a1)
00020F14 <AmiBlitz3.ab3@2167>     MOVE.l d0,unusedfunc
00020F18 <AmiBlitz3.ab3@2168>     MOVEM.l (a7)+,a6/a0/d2
00020F1C <AmiBlitz3.ab3@2169>     MOVE.l isfunc+1(a0),d0
00020F1E <AmiBlitz3.ab3@2170>     ADDQ.l #6,d0
00020F24 <AmiBlitz3.ab3@2171>     ADD.l d0,savefuncspace
00020F28 <AmiBlitz3.ab3@2174>     MOVE.l d0,8(a1)
00020F2C <AmiBlitz3.ab3@2175>     LEA 12(a1),a1
00020F2E <AmiBlitz3.ab3@2176>     MOVE.l a0,-(a7)
00020F32 <AmiBlitz3.ab3@2177>     LEA $21+#funcentry_extend(a0),a0
00020F34 <AmiBlitz3.ab3@2180>       MOVE.b (a0)+,(a1)+
00020F38 <AmiBlitz3.ab3@2181>     BNE 'l1
00020F3A <AmiBlitz3.ab3@2182>     MOVE.l (a7)+,a0
00020F3C <AmiBlitz3.ab3@2185>     MOVE.l (a0),d0
00020F40 <AmiBlitz3.ab3@2186> BRA 'lr1
00020F48 <AmiBlitz3.ab3@2189>   BTST #$7,make_smallestcode
00020F4C <AmiBlitz3.ab3@2190>   BEQ.b JL_0_3844                                           ;optimize for executable
00020F52 <AmiBlitz3.ab3@2191>   CLR.l morememadd
00020F56 <AmiBlitz3.ab3@2193>   BSR.w alloxadj
00020F5A <AmiBlitz3.ab3@2194>   BEQ.w JL_0_388A
00020F5E <AmiBlitz3.ab3@2197>   BSR.w compileall
00020F64 <AmiBlitz3.ab3@2198>   ADDQ.w #1,pass
00020F6A <AmiBlitz3.ab3@2201>   MOVE.w dontwrite,D1
00020F6E <AmiBlitz3.ab3@2202>   BEQ.w JL_0_38A2
00020F72 <AmiBlitz3.ab3@2222> BRA.w JL_0_3896
00020F7A <AmiBlitz3.ab3@2233>   MOVE.w #$FFFF,anyerrs
00020F7E <AmiBlitz3.ab3@2234> BRA.w JL_0_38A2
00020F82 <AmiBlitz3.ab3@2237>   BSR.w alloxinc                                          ;increase all by 50%
00020F86 <AmiBlitz3.ab3@2238>   BEQ.w Aclearallvars
00020F8A <AmiBlitz3.ab3@2239> BRA.w JL_0_3824
00020F8E <AmiBlitz3.ab3@2251> BRA.w qfree                                            ;???????
00020F94 <AmiBlitz3.ab3@2257>   JSR freereps
00020F9A <AmiBlitz3.ab3@2258>   JSR freesels
00020FA0 <AmiBlitz3.ab3@2259>   JSR freetlist
00020FA6 <AmiBlitz3.ab3@2260>   JSR freepends
00020FAC <AmiBlitz3.ab3@2261>   JSR freeifs
00020FB2 <AmiBlitz3.ab3@2262>   JSR freeincs
00020FB8 <AmiBlitz3.ab3@2263>   JSR freexincs
00020FBE <AmiBlitz3.ab3@2264>   JSR freefors
00020FC4 <AmiBlitz3.ab3@2265> JMP cleartemplabel
00020FC8 <AmiBlitz3.ab3@2268> mempool2:  Dc.l 0
00020FCE <AmiBlitz3.ab3@2273>   JSR Aclearcache
00020FD6 <AmiBlitz3.ab3@2275>   BTST #$7,use_debugger
00020FDA <AmiBlitz3.ab3@2277>   BNE 'debugon
00020FE0 <AmiBlitz3.ab3@2278>   CLR.w debugmode
00020FE4 <AmiBlitz3.ab3@2279>  BRA.b 'debugoff
00020FEA <AmiBlitz3.ab3@2282>   SNE debugmode
00021022 <AmiBlitz3.ab3@2287>   !ComData_SetB{comByte_DebugMode,debugmode}
00021028 <AmiBlitz3.ab3@2289>   LEA regtable,a0
0002102A <AmiBlitz3.ab3@2290>   MOVEQ #10,d0
0002102C <AmiBlitz3.ab3@2293>     CLR.l (a0)+
00021030 <AmiBlitz3.ab3@2294>   DBF d0,'l1
00021036 <AmiBlitz3.ab3@2296>   LEA includetemp2,a0
00021038 <AmiBlitz3.ab3@2297>   CLR.b (a0)
00021042 <AmiBlitz3.ab3@2298>   MOVE.l #7,maxregs
00021048 <AmiBlitz3.ab3@2299>   CLR.w debugnest
0002104E <AmiBlitz3.ab3@2300>   CLR.b funcparloop
00021054 <AmiBlitz3.ab3@2301>   CLR.b nostringopt
0002105A <AmiBlitz3.ab3@2302>   CLR.b firsttime
00021060 <AmiBlitz3.ab3@2303>   CLR.l lastdestpointer
00021066 <AmiBlitz3.ab3@2304>   CLR.l lastwritedat
0002106C <AmiBlitz3.ab3@2305>   CLR.l prevwritedat
00021072 <AmiBlitz3.ab3@2306>   CLR.l includeline
00021078 <AmiBlitz3.ab3@2307>   CLR.b incnif
0002107E <AmiBlitz3.ab3@2308>   CLR.b formode
00021084 <AmiBlitz3.ab3@2309>   CLR.b funccall
0002108A <AmiBlitz3.ab3@2310>   CLR.w objectcount
00021090 <AmiBlitz3.ab3@2311>   CLR.b resdisable
00021096 <AmiBlitz3.ab3@2312>   CLR.b developobject
0002109C <AmiBlitz3.ab3@2313>   CLR.b optistring
000210A2 <AmiBlitz3.ab3@2314>   CLR.b optistring2
000210A8 <AmiBlitz3.ab3@2315>   CLR.b optiarray
000210AE <AmiBlitz3.ab3@2316>   CLR.b quickadd
000210B4 <AmiBlitz3.ab3@2317>   CLR.w newmode
000210BA <AmiBlitz3.ab3@2318>   CLR.w mode
000210C0 <AmiBlitz3.ab3@2319>   CLR.w string1
000210C6 <AmiBlitz3.ab3@2320>   CLR.b fastfunc
000210CC <AmiBlitz3.ab3@2321>   CLR.w load_var_size
000210D2 <AmiBlitz3.ab3@2322>   CLR.w load_var_reg
000210D8 <AmiBlitz3.ab3@2323>   CLR.l load_var_addr
000210DE <AmiBlitz3.ab3@2324>   CLR.w imm_size
000210E4 <AmiBlitz3.ab3@2325>   CLR.w imm_reg
000210EA <AmiBlitz3.ab3@2326>   CLR.l imm_addr
000210F0 <AmiBlitz3.ab3@2327>   CLR.b _dcb
000210F6 <AmiBlitz3.ab3@2328>   CLR.l nohunkoffset
000210FC <AmiBlitz3.ab3@2329>   CLR.b peekaddrsize
00021102 <AmiBlitz3.ab3@2330>   CLR.b typecheck
00021108 <AmiBlitz3.ab3@2331>   CLR.b declare2
0002110E <AmiBlitz3.ab3@2332>   CLR.b declare
00021114 <AmiBlitz3.ab3@2333>   CLR.l myoline                                          ;check
0002111A <AmiBlitz3.ab3@2334>   CLR.l myline                                          ;check
00021120 <AmiBlitz3.ab3@2335>   CLR.b newvariable
00021126 <AmiBlitz3.ab3@2336>   CLR.b saved0
0002112C <AmiBlitz3.ab3@2337>   CLR.l bsssize
00021132 <AmiBlitz3.ab3@2338>   CLR.l chipsize
00021138 <AmiBlitz3.ab3@2339>   CLR.b infunctioncode
0002113E <AmiBlitz3.ab3@2340>   CLR.l errorcounter
00021148 <AmiBlitz3.ab3@2341>   MOVE.l #-1,bssstart
00021152 <AmiBlitz3.ab3@2342>   MOVE.l #-1,bssend
0002115C <AmiBlitz3.ab3@2343>   MOVE.l #-1,chipstart
00021166 <AmiBlitz3.ab3@2344>   MOVE.l #-1,chipend
0002116E <AmiBlitz3.ab3@2345>   MOVE.w #0,bssmode
00021174 <AmiBlitz3.ab3@2346>   CLR.w a2offset
0002117A <AmiBlitz3.ab3@2347>   CLR.w fast
00021180 <AmiBlitz3.ab3@2348>   CLR.w fpu
00021186 <AmiBlitz3.ab3@2349>   CLR.b iee
0002118C <AmiBlitz3.ab3@2350>   CLR.w newsyntax
00021190 <AmiBlitz3.ab3@2352>   BSR.w qfree
00021196 <AmiBlitz3.ab3@2353>   JSR AJL_0_7962              ;free up DOS offset table
0002119C <AmiBlitz3.ab3@2354>   JSR frallvars               ;free up Global vars
000211A2 <AmiBlitz3.ab3@2355>   JSR fralltypes              ;free up all types
000211A8 <AmiBlitz3.ab3@2356>   JSR freemacs                ;free up actual macro defines.
000211AE <AmiBlitz3.ab3@2357>   JSR clearfunctionlist       ;free up states/funcs
000211B4 <AmiBlitz3.ab3@2359>   TST.w pass                  
000211BA <AmiBlitz3.ab3@2362>   JSR clearlabels             ;free up labels
000211C0 <AmiBlitz3.ab3@2364>   JSR clearhash
000211C6 <AmiBlitz3.ab3@2367>   LEA devo,a0
000211CA <AmiBlitz3.ab3@2368>   MOVEM.l a0-a6/d0-d7,-(a7)
000211D0 <AmiBlitz3.ab3@2369>   LEA ptr_parameterstore,a1
000211D2 <AmiBlitz3.ab3@2372>     MOVE.b (a0)+,(a1)+
000211D6 <AmiBlitz3.ab3@2373>   BNE 'l1b
000211D8 <AmiBlitz3.ab3@2374>   MOVEQ #13,d2
000211DE <AmiBlitz3.ab3@2375>   JSR findlabel2
000211E2 <AmiBlitz3.ab3@2376>   BNE 'd
000211E6 <AmiBlitz3.ab3@2377>   CLR.l 8(a2)
000211EA <AmiBlitz3.ab3@2380>   MOVEM.l (a7)+,a0-a6/d0-d7
00021214 <AmiBlitz3.ab3@2381>   !basic
00021288 <AmiBlitz3.ab3@2382>   dos_Delete{dos_AddPart{my_systemdir$,"ab_compileerror.txt"}}
000212A6 <AmiBlitz3.ab3@2383>   !asm
000212AC <AmiBlitz3.ab3@2384>   CLR.b returncode
000212B2 <AmiBlitz3.ab3@2386> JMP freeprocvs                     ;free up outstanding proc stuff
000212B8 <AmiBlitz3.ab3@2390>   MOVE.l #bssstore-labelhash,d0
000212BA <AmiBlitz3.ab3@2391>   ASR.l #2,d0
000212C0 <AmiBlitz3.ab3@2392>   LEA labelhash,a0
000212C2 <AmiBlitz3.ab3@2395>     CLR.l (a0)+
000212C4 <AmiBlitz3.ab3@2396>     SUBQ.l #1,d0
000212C8 <AmiBlitz3.ab3@2397>   BNE.s 'l10
000212CE <AmiBlitz3.ab3@2399>   LEA labelbase,a1
000212D0 <AmiBlitz3.ab3@2400>   MOVE.l (a1),d0
000212D4 <AmiBlitz3.ab3@2401>   BEQ 'l11
000212D6 <AmiBlitz3.ab3@2404>     MOVE.l d0,a1
000212DA <AmiBlitz3.ab3@2405>     TST.l 4(a1)
000212DE <AmiBlitz3.ab3@2406>     BEQ 'l29
000212E2 <AmiBlitz3.ab3@2407>     LEA $13(a1),a0
000212E4 <AmiBlitz3.ab3@2408>     MOVEQ #0,d0
000212E6 <AmiBlitz3.ab3@2409>     MOVEQ #0,d1
000212E8 <AmiBlitz3.ab3@2412>       MOVE.b (a0)+,d1
000212EC <AmiBlitz3.ab3@2413>       BEQ 'l12
000212F2 <AmiBlitz3.ab3@2414>       !hashalgo
000212F6 <AmiBlitz3.ab3@2415>  BRA 'l13
000212FC <AmiBlitz3.ab3@2418>     LEA labelhash,a0
00021302 <AmiBlitz3.ab3@2419>     AND.l #hashsize,d0
00021304 <AmiBlitz3.ab3@2420>      ASL.l #2,d0
00021308 <AmiBlitz3.ab3@2421>     MOVE.l 0(a0,d0),d1                                     ;*4
0002130C <AmiBlitz3.ab3@2422>     MOVE.l d1,$c(a1)
00021310 <AmiBlitz3.ab3@2423>     MOVE.l a1,0(a0,d0)
00021312 <AmiBlitz3.ab3@2426>     MOVE.l (a1),d0
00021316 <AmiBlitz3.ab3@2427>   BNE 'l21
00021318 <AmiBlitz3.ab3@2430> RTS
0002131E <AmiBlitz3.ab3@2434>   MOVEA.l lastrestype,A0
00021320 <AmiBlitz3.ab3@2435>   MOVEA.l (A0),A2
00021322 <AmiBlitz3.ab3@2436>   CLR.l (A0)
00021328 <AmiBlitz3.ab3@2437> JMP freetypes
0002132E <AmiBlitz3.ab3@2441>   MOVEA.l varbase,A3
00021334 <AmiBlitz3.ab3@2442>   CLR.l varbase
00021338 <AmiBlitz3.ab3@2446>   CMPA.w #$0,A3
0002133C <AmiBlitz3.ab3@2447>   BEQ.w 'l20
0002133E <AmiBlitz3.ab3@2448>   MOVEA.l A3,A1
00021340 <AmiBlitz3.ab3@2449>   MOVEA.l (A3),A3
00021342 <AmiBlitz3.ab3@2450>   MOVEQ.l #$00,D0
00021346 <AmiBlitz3.ab3@2451>   MOVE.b $E+4(A1),D0
0002134C <AmiBlitz3.ab3@2452>   MOVEA.l _execbase,A6
00021352 <AmiBlitz3.ab3@2453>   MOVE.l mempool2,a0
00021356 <AmiBlitz3.ab3@2454>   JSR _FreePooled(A6)
0002135A <AmiBlitz3.ab3@2455>  BRA.w 'l10
0002135C <AmiBlitz3.ab3@2458> RTS
00021362 <AmiBlitz3.ab3@2464>   LEA firstiff,A2
00021364 <AmiBlitz3.ab3@2465>   MOVEQ.l #$0E,D2
0002136A <AmiBlitz3.ab3@2466> JMP freeslist
0002136C <AmiBlitz3.ab3@2472> progressbar_width:   Dc.w 100                              ;riteend org source ;right end of include strip
0002136E <AmiBlitz3.ab3@2473> inmacro:             Ds.w 1                                ;macmask org source ;macro found
00021374 <AmiBlitz3.ab3@2477>   CLR.w inmacro
0002137A <AmiBlitz3.ab3@2478>   ADDQ.l #1,globallinecount
00021380 <AmiBlitz3.ab3@2479>   CLR.b nostringopt
00021384 <AmiBlitz3.ab3@2480>   BSR.w freembuff
0002138A <AmiBlitz3.ab3@2481>   CLR.w instringon
00021390 <AmiBlitz3.ab3@2484>   TST.w ininclude
00021394 <AmiBlitz3.ab3@2485>   BEQ.w JL_0_39B0
0002139A <AmiBlitz3.ab3@2486>   ADDQ.l #1,includeline
000213A0 <AmiBlitz3.ab3@2487>     JSR ab3_WriteDebugFile
000213A6 <AmiBlitz3.ab3@2488>   JSR readinc
000213AA <AmiBlitz3.ab3@2489>   BEQ.w JL_0_39B0
000213B0 <AmiBlitz3.ab3@2490>   MOVE.w ininclude,D0
000213B4 <AmiBlitz3.ab3@2491>   CMP.w #$4,D0
000213B8 <AmiBlitz3.ab3@2492>   BCC.w JL_0_39AC
000213BA <AmiBlitz3.ab3@2493>   ADD.w D0,D0
000213C0 <AmiBlitz3.ab3@2494>   LEA progress_per_line,A0
000213C4 <AmiBlitz3.ab3@2495>   MOVE.w $0(A0,D0.W),D2
000213C8 <AmiBlitz3.ab3@2496>   CMP.w progressbar_width(PC),D2
000213CC <AmiBlitz3.ab3@2497>   BCC.w JL_0_39AC
000213D0 <AmiBlitz3.ab3@2498>   ADDQ.w #1,$0(A0,D0.W)
000213D2 <AmiBlitz3.ab3@2499>   LSR.w #1,D0
000213D4 <AmiBlitz3.ab3@2500>   MOVE.l d0,d1
000213D6 <AmiBlitz3.ab3@2501>   EXT.l d1
000213D8 <AmiBlitz3.ab3@2502>   MOVE.l d2,d0
000213DA <AmiBlitz3.ab3@2503>   EXT.l d0                                                 ;d0=x,d1=y
000213E0 <AmiBlitz3.ab3@2505>   JSR update_progressbar
000213E2 <AmiBlitz3.ab3@2508>   MOVEQ.l #-$01,D0
000213E4 <AmiBlitz3.ab3@2509> RTS
000213EA <AmiBlitz3.ab3@2513>   MOVE.l titleat,D0
000213EC <AmiBlitz3.ab3@2514>   MOVEQ.l #$00,D1
000213F2 <AmiBlitz3.ab3@2515>   MOVE.w progress_per_line,D1
000213F4 <AmiBlitz3.ab3@2516>   ADD.l D1,D0
000213F6 <AmiBlitz3.ab3@2517>   MOVE.l D0,D1
000213F8 <AmiBlitz3.ab3@2518>   SWAP D0
000213FE <AmiBlitz3.ab3@2519>   CMP.w titleat,D0
00021402 <AmiBlitz3.ab3@2520>    BEQ.w JL_0_39E4
00021404 <AmiBlitz3.ab3@2524>   EXT.l d0
00021406 <AmiBlitz3.ab3@2525>   MOVE.l d1,-(a7)
0002140E <AmiBlitz3.ab3@2528>   MOVE.w #1,compiler_job                                    ; set to compiler job 1 (=build executable)
00021414 <AmiBlitz3.ab3@2529>   JSR update_progressbar
0002141C <AmiBlitz3.ab3@2530>   MOVE.w #0,compiler_job                                    ; set to compiler job 0 (=compile source)
0002141E <AmiBlitz3.ab3@2534>   MOVE.l (a7)+,d1
00021424 <AmiBlitz3.ab3@2537>   MOVE.l D1,titleat
0002142A <AmiBlitz3.ab3@2538>   ADDQ.l #1,linenumat
00021430 <AmiBlitz3.ab3@2539>   CLR.w linedone
00021436 <AmiBlitz3.ab3@2540>   JSR ab3_WriteDebugFile  ; write to DebugFile every main source line
0002143C <AmiBlitz3.ab3@2542>   SUBQ.l #1,numlines2
00021440 <AmiBlitz3.ab3@2543>    BEQ.w JL_0_3A12
00021446 <AmiBlitz3.ab3@2544>   MOVEA.l sourceline,A0
00021448 <AmiBlitz3.ab3@2545>   MOVEA.l (A0),A0
0002144E <AmiBlitz3.ab3@2546>   MOVE.l A0,sourceline
00021452 <AmiBlitz3.ab3@2547>   LEA $9(A0),A5
00021454 <AmiBlitz3.ab3@2550> RTS
00021456 <AmiBlitz3.ab3@2554>   MOVE.w D0,-(A7)
00021458 <AmiBlitz3.ab3@2555>   MOVEQ.l #$03,D0
0002145A <AmiBlitz3.ab3@2558>     MOVE.w D1,D2
0002145E <AmiBlitz3.ab3@2559>     ANDI.w #$F,D2
00021462 <AmiBlitz3.ab3@2560>     ADDI.w #$30,D2
00021466 <AmiBlitz3.ab3@2561>     CMP.w #$3A,D2
0002146A <AmiBlitz3.ab3@2562>      BCS.w 'skip
0002146C <AmiBlitz3.ab3@2563>     ADDQ.w #7,D2
00021470 <AmiBlitz3.ab3@2566>     MOVE.b D2,$0(A0,D0.W)
00021472 <AmiBlitz3.ab3@2567>     LSR.w #4,D1
00021476 <AmiBlitz3.ab3@2568>   DBF D0,'loop
00021478 <AmiBlitz3.ab3@2570>   MOVE.w (A7)+,D0
0002147A <AmiBlitz3.ab3@2571> RTS
00021480 <AmiBlitz3.ab3@2581>   MOVE.w skipcode,D1
00021484 <AmiBlitz3.ab3@2582>   BNE.w JL_0_3A46
00021486 <AmiBlitz3.ab3@2583> RTS
00021488 <AmiBlitz3.ab3@2586>   MOVE.l A5,-(A7)
0002148A <AmiBlitz3.ab3@2587>   MOVEQ.l #$3A,D1                                          ;':'
0002148C <AmiBlitz3.ab3@2588>   MOVEQ.l #$21,D2                                          ;'!'
0002148E <AmiBlitz3.ab3@2589>   MOVEQ.l #$3B,D3                                          ;';'
00021490 <AmiBlitz3.ab3@2590>   MOVEQ.l #$22,D4                                          ;'"'
00021492 <AmiBlitz3.ab3@2593>   MOVE.b (A5)+,D0
00021496 <AmiBlitz3.ab3@2594>    BEQ.w JL_0_3CA0
0002149A <AmiBlitz3.ab3@2595>    BPL.w JL_0_3A60
0002149C <AmiBlitz3.ab3@2596>   MOVE.b (A5)+,D0
000214A0 <AmiBlitz3.ab3@2597> BRA.w JL_0_3A50
000214A2 <AmiBlitz3.ab3@2600>   CMP.b D4,D0
000214A6 <AmiBlitz3.ab3@2601>    BNE.w JL_0_3A82
000214A8 <AmiBlitz3.ab3@2604>   MOVE.b (A5)+,D0
000214AC <AmiBlitz3.ab3@2605>    BEQ.w notqerr
000214B0 <AmiBlitz3.ab3@2611>   CMP.b #$22,D0
000214B4 <AmiBlitz3.ab3@2612>    BNE.w JL_0_3A66
000214B8 <AmiBlitz3.ab3@2613> BRA.w JL_0_3A50
000214BA <AmiBlitz3.ab3@2616>   CMP.b D1,D0
000214BE <AmiBlitz3.ab3@2617>    BEQ.w JL_0_3CA0
000214C0 <AmiBlitz3.ab3@2618>   CMP.b D3,D0
000214C4 <AmiBlitz3.ab3@2619>    BEQ.w JL_0_3CA0
000214C6 <AmiBlitz3.ab3@2622>   CMP.b D2,D0
000214CA <AmiBlitz3.ab3@2623>    BNE.w JL_0_3A50
000214D2 <AmiBlitz3.ab3@2624>   MOVE.w #$FFFF,inmacro                                    ; no runtimecheck in macros
000214D4 <AmiBlitz3.ab3@2625>   MOVEA.l A5,A3
000214DA <AmiBlitz3.ab3@2626>    JSR getparameter2
000214DE <AmiBlitz3.ab3@2627>    BNE.w JL_0_3AAC
000214E4 <AmiBlitz3.ab3@2628> JMP syntaxerr
000214EE <AmiBlitz3.ab3@2633>    MOVE.w oldqflag,instringon
000214F4 <AmiBlitz3.ab3@2634>   MOVEA.l lastsourcepos,A5
000214FA <AmiBlitz3.ab3@2635>    JSR findmac                                             ;find macro
000214FE <AmiBlitz3.ab3@2636>    BEQ.w JL_0_3ABE
00021504 <AmiBlitz3.ab3@2637> JMP nomacerr
0002150A <AmiBlitz3.ab3@2640>   TST.b debugmode
0002150E <AmiBlitz3.ab3@2641>   BEQ 'sk1
00021512 <AmiBlitz3.ab3@2642>   MOVE.w #$4e71,d1
00021518 <AmiBlitz3.ab3@2643>   JSR writeword
0002151A <AmiBlitz3.ab3@2644>   MOVE.l a5,-(a7)
0002151C <AmiBlitz3.ab3@2645>   MOVE.l a3,a5
0002151E <AmiBlitz3.ab3@2646>   SUBQ.l #1,a5
00021526 <AmiBlitz3.ab3@2647>   MOVE.w #$0,inmacro
0002152A <AmiBlitz3.ab3@2648>   BSR debugstuffa
00021532 <AmiBlitz3.ab3@2649>   MOVE.w #$FFFF,inmacro
00021534 <AmiBlitz3.ab3@2650>   MOVE.l (a7)+,a5
00021538 <AmiBlitz3.ab3@2651>   MOVE.w #$4e71,d1
0002153E <AmiBlitz3.ab3@2652>   JSR writeword
00021540 <AmiBlitz3.ab3@2655>   MOVEA.l A5,A4
00021544 <AmiBlitz3.ab3@2658>    CMP.b #" ",(a4)+
00021548 <AmiBlitz3.ab3@2659>     BEQ 'l5a
0002154A <AmiBlitz3.ab3@2660>      SUBQ.l#1,a4
0002154E <AmiBlitz3.ab3@2661>      CMP.b #",",(a4)
00021552 <AmiBlitz3.ab3@2662>     BEQ JL_0_3AEA
00021554 <AmiBlitz3.ab3@2665>   MOVEQ.l #$00,D4
0002155A <AmiBlitz3.ab3@2666>   TST.b newsyntax
0002155E <AmiBlitz3.ab3@2667>   BEQ 'l10b
00021562 <AmiBlitz3.ab3@2668>   MOVEM.l a0/d0,-(a7)
00021566 <AmiBlitz3.ab3@2669>   MOVE.l 4(a2),a0
0002156A <AmiBlitz3.ab3@2670>   MOVE.w 8(a2),d0
0002156E <AmiBlitz3.ab3@2673>   CMP.b #"`",(a0)+
00021572 <AmiBlitz3.ab3@2674>   BEQ 'x1
00021574 <AmiBlitz3.ab3@2675>   SUBQ.w #1,d0
00021578 <AmiBlitz3.ab3@2676>   BNE 'x2
0002157C <AmiBlitz3.ab3@2677> BRA 'x3
00021580 <AmiBlitz3.ab3@2680>   MOVEM.l (a7)+,a0/d0
00021584 <AmiBlitz3.ab3@2681> BRA 'l10
00021588 <AmiBlitz3.ab3@2684>   MOVEM.l (a7)+,a0/d0
0002158C <AmiBlitz3.ab3@2685> BRA JL_0_3AEA
00021590 <AmiBlitz3.ab3@2688>   CMPI.b #"{",(A4)
00021594 <AmiBlitz3.ab3@2689>    BNE.w JL_0_3AEA
00021596 <AmiBlitz3.ab3@2693>   ADDQ.l #1,a4
0002159A <AmiBlitz3.ab3@2696>     CMP.b #" ",(a4)
0002159E <AmiBlitz3.ab3@2697>     BEQ 'l5
000215A2 <AmiBlitz3.ab3@2698>     MOVEM.l a0/d0,-(a7)
000215A8 <AmiBlitz3.ab3@2699>     CLR.b exmac
000215AE <AmiBlitz3.ab3@2700>     LEA chartab,a0
000215B0 <AmiBlitz3.ab3@2701>     MOVEQ #0,d0
000215B2 <AmiBlitz3.ab3@2702>     MOVE.b (a4),d0
000215B6 <AmiBlitz3.ab3@2703>     BMI 'm1
000215BA <AmiBlitz3.ab3@2704>     TST.b 0(a0,d0)
000215BE <AmiBlitz3.ab3@2705>     BEQ 'm1
000215C4 <AmiBlitz3.ab3@2706>     TST.b newsyntax
000215C8 <AmiBlitz3.ab3@2707>     BEQ 'ns1
000215CC <AmiBlitz3.ab3@2708>     CMP.b #"#",d0
000215D0 <AmiBlitz3.ab3@2709>     BEQ 'm1
000215D4 <AmiBlitz3.ab3@2710>     CMP.b #"$",d0
000215D8 <AmiBlitz3.ab3@2711>     BEQ 'm1
000215DC <AmiBlitz3.ab3@2712>     CMP.b #"-",d0
000215E0 <AmiBlitz3.ab3@2713>     BEQ 'm1
000215E4 <AmiBlitz3.ab3@2716>   CMP.b #",",d0
000215E8 <AmiBlitz3.ab3@2717>     BEQ 'm1
000215EC <AmiBlitz3.ab3@2718>     CMP.b #"{",d0
000215F0 <AmiBlitz3.ab3@2719>     BNE 'm1b
000215F2 <AmiBlitz3.ab3@2720>     ADDQ.l #1,a4
000215F6 <AmiBlitz3.ab3@2721> BRA 'm1
000215FC <AmiBlitz3.ab3@2724>   TST.b newsyntax
00021600 <AmiBlitz3.ab3@2725>     BEQ 'm1
00021608 <AmiBlitz3.ab3@2726>     MOVE.b #1,exmac
0002160C <AmiBlitz3.ab3@2729>   MOVEM.l (a7)+,a0/d0
00021612 <AmiBlitz3.ab3@2730>     TST.b exmac
00021616 <AmiBlitz3.ab3@2731>     BNE JL_0_3AEA
00021618 <AmiBlitz3.ab3@2738>   TST.b (a4)
0002161C <AmiBlitz3.ab3@2739>   BEQ JL_0_3AEA
00021622 <AmiBlitz3.ab3@2742>   MOVEA.l ptr_macrobuffer_begin,A0
00021624 <AmiBlitz3.ab3@2745>   ADDQ.w #1,D4
00021626 <AmiBlitz3.ab3@2746>   MOVE.l A4,(A0)
0002162A <AmiBlitz3.ab3@2747>   CLR.w 4(a0)
0002162E <AmiBlitz3.ab3@2748>    BSR.w findit
00021630 <AmiBlitz3.ab3@2750>   ADDQ.l #4,a0
00021632 <AmiBlitz3.ab3@2754>   SUBQ.w #1,(a0)+
00021636 <AmiBlitz3.ab3@2755>   CMP.b #$7D,D0
0002163A <AmiBlitz3.ab3@2756>   BEQ 'l10
0002163C <AmiBlitz3.ab3@2757>   TST.b d0
00021640 <AmiBlitz3.ab3@2758>   BEQ 'l10
00021644 <AmiBlitz3.ab3@2759> BRA JL_0_3AD0
0002164A <AmiBlitz3.ab3@2763>   CLR.l sourceline3
0002164C <AmiBlitz3.ab3@2764>   MOVEA.l A4,A5
00021652 <AmiBlitz3.ab3@2767>   MOVE.w D4,numarg
00021658 <AmiBlitz3.ab3@2774>   MOVE.l #$01,D1
0002165E <AmiBlitz3.ab3@2775>   MOVEA.l _execbase,A6
00021664 <AmiBlitz3.ab3@2776>   MOVE.l mempool,a0
0002166A <AmiBlitz3.ab3@2777>   MOVE.l macrobuffer_size,D0
00021670 <AmiBlitz3.ab3@2778>   CMP.l #DEFAULT_MACROBUFFERSIZE,d0                          ; replaced with a constant tomsmart1
00021674 <AmiBlitz3.ab3@2779>   BGE 'l1m
0002167A <AmiBlitz3.ab3@2780>   MOVE.l #DEFAULT_MACROBUFFERSIZE,d0                         ; replaced with a constant tomsmart1
00021680 <AmiBlitz3.ab3@2781>   MOVE.l d0,macrobuffer_size
00021684 <AmiBlitz3.ab3@2784>   JSR _AllocPooled(a6)
0002168E <AmiBlitz3.ab3@2786>   MOVE.l myline,myoline
00021690 <AmiBlitz3.ab3@2789>   ADDQ.l #1,d0
00021696 <AmiBlitz3.ab3@2790>   MOVE.l D0,myline
00021698 <AmiBlitz3.ab3@2791>   MOVEA.l D0,A1
0002169E <AmiBlitz3.ab3@2792>   MOVE.b #":",-1(a1)
000216A0 <AmiBlitz3.ab3@2793>   MOVEA.l A1,A6
000216A6 <AmiBlitz3.ab3@2794>   ADDA.l macrobuffer_size,A6
000216A8 <AmiBlitz3.ab3@2795>   MOVEA.l (A7)+,A0
000216AA <AmiBlitz3.ab3@2798>   CMPA.l A6,A1
000216AE <AmiBlitz3.ab3@2799>    BCC.w mbovererr
000216B0 <AmiBlitz3.ab3@2800>   MOVE.b (A0)+,(a1)+
000216B2 <AmiBlitz3.ab3@2801>   CMPA.l A3,A0
000216B6 <AmiBlitz3.ab3@2802>    BCS.w JL_0_3B1E
000216B8 <AmiBlitz3.ab3@2803>   SUBQ.w #1,A1
000216BC <AmiBlitz3.ab3@2804>   MOVE.w $8(A2),D1
000216C0 <AmiBlitz3.ab3@2805>    BEQ.w JL_0_3C70
000216C8 <AmiBlitz3.ab3@2806>   MOVE.w $A(A2),macnum
000216CC <AmiBlitz3.ab3@2807>   ADDQ.w #1,$A(A2)
000216D0 <AmiBlitz3.ab3@2808>   MOVEA.l $4(A2),A2
000216D2 <AmiBlitz3.ab3@2809>   SUBQ.w #1,D1
000216D8 <AmiBlitz3.ab3@2810>   CLR.b firstmline
000216DA <AmiBlitz3.ab3@2813>     MOVEQ.l #$00,D0
000216DC <AmiBlitz3.ab3@2814>     MOVE.b (A2)+,D0
000216E2 <AmiBlitz3.ab3@2815>     TST.b firstmline
000216E6 <AmiBlitz3.ab3@2816>     BNE 'c1
000216EA <AmiBlitz3.ab3@2817>     CMP.b #$22,d0
000216EE <AmiBlitz3.ab3@2818>     BNE 's1
000216F6 <AmiBlitz3.ab3@2819>     MOVE.b #1,firstmline
000216FA <AmiBlitz3.ab3@2822>     CMP.b #":",d0
000216FE <AmiBlitz3.ab3@2823>     BNE 'm1
00021706 <AmiBlitz3.ab3@2824>     MOVE.b #1,firstmline
0002170A <AmiBlitz3.ab3@2827>     CMP.b #";",d0
0002170E <AmiBlitz3.ab3@2828>     BNE 'c1
00021710 <AmiBlitz3.ab3@2831>     SUBQ.w #1,d1                                           ;filter out comment
00021712 <AmiBlitz3.ab3@2832>     MOVE.b (a2)+,d0
00021718 <AmiBlitz3.ab3@2833>     CMP.w #":@",-1(a2)
0002171C <AmiBlitz3.ab3@2834>     BEQ 'c2
0002171E <AmiBlitz3.ab3@2835>     TST.w d1
00021722 <AmiBlitz3.ab3@2836>     BNE 'l1
00021726 <AmiBlitz3.ab3@2837>   BRA JL_0_3C6C
0002172C <AmiBlitz3.ab3@2840>     CMP.b #":",1(a2)
00021730 <AmiBlitz3.ab3@2841>       BNE 'l1
00021732 <AmiBlitz3.ab3@2842>       ADDQ #2,a2
00021734 <AmiBlitz3.ab3@2843>       SUBQ #3,d1
00021736 <AmiBlitz3.ab3@2844>       MOVE.b (a2)+,d0
0002173E <AmiBlitz3.ab3@2845>       MOVE.b #1,firstmline
00021742 <AmiBlitz3.ab3@2848>     CMP.b #"`",D0
00021746 <AmiBlitz3.ab3@2849>      BNE.w JL_0_3C56
00021748 <AmiBlitz3.ab3@2850>     SUBQ.w #1,D1
0002174A <AmiBlitz3.ab3@2851>     MOVE.b (A2)+,D0
0002174E <AmiBlitz3.ab3@2852>     CMP.w #$7B,D0
00021752 <AmiBlitz3.ab3@2853>      BEQ.w JL_0_3BB6
00021756 <AmiBlitz3.ab3@2854>     CMP.w #$40,D0
0002175A <AmiBlitz3.ab3@2855>      BNE.w JL_0_3B82
0002175C <AmiBlitz3.ab3@2856>     MOVEQ.l #$00,D2
00021762 <AmiBlitz3.ab3@2857>     MOVE.w macnum,D2
00021764 <AmiBlitz3.ab3@2858>     MOVEA.l A1,A0
00021766 <AmiBlitz3.ab3@2859>     MOVE.w D1,-(A7)
0002176C <AmiBlitz3.ab3@2860>      JSR makelong
0002176E <AmiBlitz3.ab3@2861>     MOVEA.l A0,A1
00021770 <AmiBlitz3.ab3@2862>     MOVE.w (A7)+,D1
00021774 <AmiBlitz3.ab3@2863>   BRA.w JL_0_3C6C
00021778 <AmiBlitz3.ab3@2866>     ORI.w #$20,D0
0002177C <AmiBlitz3.ab3@2867>     CMP.w #$7A,D0
00021780 <AmiBlitz3.ab3@2868>      BCS.w JL_0_3B94
00021786 <AmiBlitz3.ab3@2869>   JMP ilconsterr
0002178A <AmiBlitz3.ab3@2872>     SUBI.w #$30,D0
0002178E <AmiBlitz3.ab3@2873>     CMP.w #$A,D0
00021792 <AmiBlitz3.ab3@2874>      BCS.w JL_0_3BF2
00021796 <AmiBlitz3.ab3@2875>     SUBI.w #$27,D0
0002179A <AmiBlitz3.ab3@2876>     CMP.w #$A,D0
0002179E <AmiBlitz3.ab3@2877>      BCC.w JL_0_3BB2
000217A4 <AmiBlitz3.ab3@2878>   JMP ilconsterr
000217A8 <AmiBlitz3.ab3@2881>   BRA.w JL_0_3BF2
000217AA <AmiBlitz3.ab3@2884>     MOVE.l A5,-(A7)
000217AE <AmiBlitz3.ab3@2885>     MOVEM.l D1/A1-A2/A6,-(A7)
000217B0 <AmiBlitz3.ab3@2886>     MOVEA.l A2,A5
000217B6 <AmiBlitz3.ab3@2887>      JSR evalconst2
000217BA <AmiBlitz3.ab3@2888>     CMP.w #$7D,D0
000217BE <AmiBlitz3.ab3@2889>      BEQ.w JL_0_3BD2
000217C4 <AmiBlitz3.ab3@2890>   JMP syntaxerr
000217C8 <AmiBlitz3.ab3@2893>     MOVEM.l (A7)+,D1/A1-A2/A6
000217CA <AmiBlitz3.ab3@2894>     MOVE.l A5,D2
000217CC <AmiBlitz3.ab3@2895>     SUB.l A2,D2
000217CE <AmiBlitz3.ab3@2896>     SUB.w D2,D1
000217D0 <AmiBlitz3.ab3@2897>     MOVEA.l A5,A2
000217D6 <AmiBlitz3.ab3@2898>     CLR.w instringon
000217D8 <AmiBlitz3.ab3@2899>     MOVEA.l (A7)+,A5
000217DA <AmiBlitz3.ab3@2900>     MOVE.l D3,D0
000217DE <AmiBlitz3.ab3@2901>     BPL.w JL_0_3BF2
000217E4 <AmiBlitz3.ab3@2902>   JMP ilconsterr
000217E6 <AmiBlitz3.ab3@2905>     SUBQ.w #1,D0
000217EA <AmiBlitz3.ab3@2906>      BPL.w JL_0_3C20
000217F0 <AmiBlitz3.ab3@2910>     MOVE.w numarg,D0
000217F4 <AmiBlitz3.ab3@2911>     DIVU #$A,D0
000217F8 <AmiBlitz3.ab3@2912>     ADDI.w #$30,D0
000217FA <AmiBlitz3.ab3@2913>     CMPA.l A6,A1
000217FE <AmiBlitz3.ab3@2914>      BCC.w mbovererr
00021800 <AmiBlitz3.ab3@2915>     MOVE.b D0,(A1)+
00021802 <AmiBlitz3.ab3@2916>     SWAP D0
00021806 <AmiBlitz3.ab3@2917>     ADDI.w #$30,D0
00021808 <AmiBlitz3.ab3@2918>     CMPA.l A6,A1
0002180C <AmiBlitz3.ab3@2919>      BCC.w mbovererr
0002180E <AmiBlitz3.ab3@2920>     MOVE.b D0,(A1)+
00021812 <AmiBlitz3.ab3@2921>   BRA.w JL_0_3C6C
00021818 <AmiBlitz3.ab3@2927>     CMP.w numarg,D0
0002181C <AmiBlitz3.ab3@2928>      BCC.w JL_0_3C6C
0002181E <AmiBlitz3.ab3@2929>     LSL.w #1,D0
00021820 <AmiBlitz3.ab3@2930>     MOVE.w D0,D4
00021822 <AmiBlitz3.ab3@2931>     LSL.w #1,D0
00021824 <AmiBlitz3.ab3@2932>     ADD.w D4,D0
0002182A <AmiBlitz3.ab3@2933>     MOVEA.l ptr_macrobuffer_begin,A0
0002182C <AmiBlitz3.ab3@2934>     ADDA.w D0,A0
00021830 <AmiBlitz3.ab3@2935>     MOVE.w $4(A0),D4
00021834 <AmiBlitz3.ab3@2936>      BEQ.w JL_0_3C6C
00021836 <AmiBlitz3.ab3@2937>     MOVEA.l (A0),A0
00021838 <AmiBlitz3.ab3@2938>     SUBQ.w #1,D4
0002183A <AmiBlitz3.ab3@2941>       CMPA.l A6,A1
0002183E <AmiBlitz3.ab3@2942>        BCC.w mbovererr
00021842 <AmiBlitz3.ab3@2943>       CMP.w #"@@",(a0)
00021846 <AmiBlitz3.ab3@2944>        BNE 'l10
0002184C <AmiBlitz3.ab3@2945>       TST.w ininclude
00021850 <AmiBlitz3.ab3@2946>        BNE errorjoin
00021856 <AmiBlitz3.ab3@2949>       MOVE.l sourceline,a0
00021858 <AmiBlitz3.ab3@2950>       MOVE.l (a0),a0
0002185E <AmiBlitz3.ab3@2951>       CMP.l #0,a0
00021862 <AmiBlitz3.ab3@2952>       BNE 'l11
00021864 <AmiBlitz3.ab3@2953>       MOVEQ #0,d0
0002186A <AmiBlitz3.ab3@2954>       JSR error
00021870 <AmiBlitz3.ab3@2957>       MOVE.l a0,sourceline
00021876 <AmiBlitz3.ab3@2958>       ADDQ.l #1,linenumat
0002187A <AmiBlitz3.ab3@2959>       LEA 9(a0),a0
0002187C <AmiBlitz3.ab3@2960>       MOVE.l a0,-(a7)
00021880 <AmiBlitz3.ab3@2963>       CMP.b #" ",(a0)+
00021884 <AmiBlitz3.ab3@2964>        BEQ 'l110
0002188A <AmiBlitz3.ab3@2965>       CMP.b #";",-1(a0)
0002188C <AmiBlitz3.ab3@2966>       MOVE.l (a7)+,a0
00021890 <AmiBlitz3.ab3@2967>        BEQ 'l111
00021892 <AmiBlitz3.ab3@2968>       SUBQ.l #1,d4
00021894 <AmiBlitz3.ab3@2971>       MOVE.b (A0)+,(A1)+
00021898 <AmiBlitz3.ab3@2972>     DBF D4,JL_0_3C46
0002189C <AmiBlitz3.ab3@2974>   BRA.w JL_0_3C6C
0002189E <AmiBlitz3.ab3@2977>     CMPA.l A6,A1
000218A2 <AmiBlitz3.ab3@2978>      BCC.w mbovererr
000218A4 <AmiBlitz3.ab3@2979>     MOVE.b D0,(A1)+
000218A8 <AmiBlitz3.ab3@2980>      BPL.w JL_0_3C6C
000218AA <AmiBlitz3.ab3@2981>     CMPA.l A6,A1
000218AE <AmiBlitz3.ab3@2982>      BCC.w mbovererr
000218B0 <AmiBlitz3.ab3@2983>     MOVE.b (A2)+,(A1)+
000218B2 <AmiBlitz3.ab3@2984>     SUBQ.w #1,D1
000218B6 <AmiBlitz3.ab3@2987>   DBF D1,JL_0_3B48
000218B8 <AmiBlitz3.ab3@2997>   CMPA.l A6,A1
000218BC <AmiBlitz3.ab3@2998>    BCC.w mbovererr
000218BE <AmiBlitz3.ab3@2999>   MOVE.b (A5)+,(A1)+
000218C2 <AmiBlitz3.ab3@3000>    BNE.w JL_0_3C70
000218C8 <AmiBlitz3.ab3@3001>   MOVEA.l myline,A5
000218CE <AmiBlitz3.ab3@3002>   MOVE.l myoline,D0
000218D2 <AmiBlitz3.ab3@3003>    BEQ.w JL_0_3C9C
000218D4 <AmiBlitz3.ab3@3004>   SUBQ.l #1,d0
000218D6 <AmiBlitz3.ab3@3005>   MOVEA.l D0,A1
000218DC <AmiBlitz3.ab3@3006>   MOVE.l macrobuffer_size,D0
000218E2 <AmiBlitz3.ab3@3007>   MOVEA.l _execbase,A6
000218E8 <AmiBlitz3.ab3@3008>   MOVE.l mempool,a0
000218EC <AmiBlitz3.ab3@3009>   JSR _FreePooled(A6)
000218F0 <AmiBlitz3.ab3@3012> BRA.w JL_0_3A46
000218F2 <AmiBlitz3.ab3@3015>   MOVEA.l (A7)+,A5
000218F4 <AmiBlitz3.ab3@3016> RTS
000218FA <AmiBlitz3.ab3@3020>   MOVE.l myline,D0
000218FE <AmiBlitz3.ab3@3021>   BEQ.w 'no
00021900 <AmiBlitz3.ab3@3023>   SUBQ.l #1,d0
00021906 <AmiBlitz3.ab3@3025>   CLR.l myline
00021908 <AmiBlitz3.ab3@3026>   MOVEA.l D0,A1
0002190E <AmiBlitz3.ab3@3027>   MOVE.l macrobuffer_size,D0
00021914 <AmiBlitz3.ab3@3028>   MOVEA.l _execbase,A6
0002191A <AmiBlitz3.ab3@3030>   MOVE.l mempool,a0
0002191E <AmiBlitz3.ab3@3031>  JMP _FreePooled(A6)
00021920 <AmiBlitz3.ab3@3036> RTS
00021922 <AmiBlitz3.ab3@3042>   MOVEQ.l #$00,D2    ;no nesting
00021926 <AmiBlitz3.ab3@3046>   ADDQ.w #1,4(a0)
00021928 <AmiBlitz3.ab3@3048>    MOVE.b (A4)+,D0
0002192C <AmiBlitz3.ab3@3051>    BEQ exit1
00021930 <AmiBlitz3.ab3@3053>    BPL.w 'tst
00021934 <AmiBlitz3.ab3@3055>   ADDQ.w #1,4(a0)
00021936 <AmiBlitz3.ab3@3057>   ADDQ.w #1,A4
0002193A <AmiBlitz3.ab3@3058>  BRA.w 'loop
00021940 <AmiBlitz3.ab3@3062>    TST.w instringon
00021944 <AmiBlitz3.ab3@3063>    BNE 'lnom
00021948 <AmiBlitz3.ab3@3064>    CMP.b #";",d0
0002194C <AmiBlitz3.ab3@3065>    BEQ exit2
00021950 <AmiBlitz3.ab3@3066>    CMP.b #":",d0
00021954 <AmiBlitz3.ab3@3067>    BEQ exit2
00021958 <AmiBlitz3.ab3@3071>   CMP.b #$22,D0           ;'"'
0002195C <AmiBlitz3.ab3@3072>    BNE.w 'notq
00021962 <AmiBlitz3.ab3@3073>   NOT.w instringon
00021966 <AmiBlitz3.ab3@3074>  BRA.w 'loop
0002196C <AmiBlitz3.ab3@3077>   TST.w instringon
00021970 <AmiBlitz3.ab3@3078>    BNE.w 'loop
00021974 <AmiBlitz3.ab3@3080>    CMP.b #"@",d0
00021978 <AmiBlitz3.ab3@3081>    BNE 'l10
0002197C <AmiBlitz3.ab3@3082>    CMP.b #"@",(a4)
00021980 <AmiBlitz3.ab3@3083>    BNE 'l10
00021986 <AmiBlitz3.ab3@3084>    TST.w ininclude
0002198A <AmiBlitz3.ab3@3085>    BNE errorjoin
00021990 <AmiBlitz3.ab3@3086>    MOVE.l sourceline3,a4
00021996 <AmiBlitz3.ab3@3087>    CMP.l #0,a4
0002199A <AmiBlitz3.ab3@3088>    BNE 'l11
000219A0 <AmiBlitz3.ab3@3089>    MOVE.l sourceline,a4
000219A2 <AmiBlitz3.ab3@3092>   MOVE.l (a4),a4
000219A8 <AmiBlitz3.ab3@3093>       CMP.l #0,a4
000219AC <AmiBlitz3.ab3@3094>       BNE 'l12
000219AE <AmiBlitz3.ab3@3095>       MOVEQ #0,d0
000219B4 <AmiBlitz3.ab3@3096>       JSR error
000219BA <AmiBlitz3.ab3@3099>    MOVE.l a4,sourceline3
000219BE <AmiBlitz3.ab3@3100>    LEA 9(a4),a4
000219C0 <AmiBlitz3.ab3@3101>    MOVEQ #",",d0
000219C4 <AmiBlitz3.ab3@3105>   CMP.b #$2C,D0       ;','
000219C8 <AmiBlitz3.ab3@3106>    BNE.w 'notc
000219CA <AmiBlitz3.ab3@3107>   TST.w D2
000219CE <AmiBlitz3.ab3@3108>    BEQ.w 'done
000219D2 <AmiBlitz3.ab3@3109>  BRA.w 'loop
000219D6 <AmiBlitz3.ab3@3114>    CMP.b #$7B,D0      ; same as itisopen                                     ;"{"
000219DA <AmiBlitz3.ab3@3115>    BEQ.w 'l10b
000219DE <AmiBlitz3.ab3@3116>   CMP.b #$28,D0                                            ;"("
000219E2 <AmiBlitz3.ab3@3120>    BNE.w 'noto
000219E4 <AmiBlitz3.ab3@3121>   ADDQ.w #1,D2
000219E8 <AmiBlitz3.ab3@3122>  BRA.w 'loop
000219EC <AmiBlitz3.ab3@3125>   CMP.b #$7D,D0       ;'}'                                    ;"}"
000219F0 <AmiBlitz3.ab3@3126>    BNE.w 'notcb
000219F2 <AmiBlitz3.ab3@3127>  TST.w D2
000219F6 <AmiBlitz3.ab3@3128>    BEQ.w 'done
000219FA <AmiBlitz3.ab3@3133>    CMP.b #$7D,D0     ; same as isitclose                                       ;"}"
000219FE <AmiBlitz3.ab3@3134>    BEQ.w 'l10a
00021A02 <AmiBlitz3.ab3@3135>   CMP.b #$29,D0                                            ;")"
00021A06 <AmiBlitz3.ab3@3139>    BNE.w 'loop
00021A08 <AmiBlitz3.ab3@3140>   SUBQ.w #1,D2
00021A0C <AmiBlitz3.ab3@3141> BRA.w 'loop
00021A0E <AmiBlitz3.ab3@3144> RTS
00021A10 <AmiBlitz3.ab3@3149>       SUBQ.l #1,a4
00021A16 <AmiBlitz3.ab3@3150>       CLR.l sourceline3
00021A18 <AmiBlitz3.ab3@3151> RTS
00021A1A <AmiBlitz3.ab3@3155>       MOVEQ #0,d0
00021A1C <AmiBlitz3.ab3@3156>       SUBQ.l #1,a4
00021A22 <AmiBlitz3.ab3@3157>       CLR.l sourceline3
00021A24 <AmiBlitz3.ab3@3158> RTS
00021A28 <AmiBlitz3.ab3@3163>   CMP.b #$7B,D0        ;'{'                                     ;"{"
00021A2C <AmiBlitz3.ab3@3164>   BEQ.w 'yes
00021A30 <AmiBlitz3.ab3@3165>   CMP.b #$28,D0        ;'('                                    ;"("
00021A32 <AmiBlitz3.ab3@3168> RTS
00021A36 <AmiBlitz3.ab3@3172>   CMP.b #$7D,D0         ;'}'                                   ;"}"
00021A3A <AmiBlitz3.ab3@3173>   BEQ.w 'yes
00021A3E <AmiBlitz3.ab3@3174>   CMP.b #$29,D0         ;')'                                   ;")"
00021A40 <AmiBlitz3.ab3@3177> RTS
00021A42 <AmiBlitz3.ab3@3181> stopit:     Ds.w 1
00021A44 <AmiBlitz3.ab3@3182> clrreq:     Ds.w 1
00021A48 <AmiBlitz3.ab3@3204>   MOVE.w clrreq(PC),D0
00021A4C <AmiBlitz3.ab3@3205>    BEQ.w 'skip
00021A7E <AmiBlitz3.ab3@3207> 
00021A84 <AmiBlitz3.ab3@3209>   LEA clrreq,a0
00021A86 <AmiBlitz3.ab3@3210>   NOT.w (a0)                                               ;reass
00021A8C <AmiBlitz3.ab3@3211>   MOVEA.l ptr_ThisTask,A0
00021A90 <AmiBlitz3.ab3@3212>   CLR.l $1E(A0)
00021A94 <AmiBlitz3.ab3@3213>   CLR.l $2A(A0)
00021A96 <AmiBlitz3.ab3@3216> RTS
00021A98 <AmiBlitz3.ab3@3219> intsused:  Ds.w 1
00021AA0 <AmiBlitz3.ab3@3223>   MOVE.w #-1,blitzoff
00021AA6 <AmiBlitz3.ab3@3224>   CLR.w intsused
00021AAC <AmiBlitz3.ab3@3225>   CLR.w anyerrs
00021AB2 <AmiBlitz3.ab3@3226>   CLR.w blitzmode
00021AB8 <AmiBlitz3.ab3@3227>   CLR.w dontwrite                                              ;nomemleft
00021ABE <AmiBlitz3.ab3@3228>   CLR.w constmode
00021AC4 <AmiBlitz3.ab3@3229>   CLR.w cmake
00021ACA <AmiBlitz3.ab3@3230>   CLR.w cfetchmode
00021AD0 <AmiBlitz3.ab3@3231>   CLR.l intdata1
00021AD6 <AmiBlitz3.ab3@3232>   CLR.w fuckpos
00021ADC <AmiBlitz3.ab3@3233>   CLR.w procnum
00021AE2 <AmiBlitz3.ab3@3234>   CLR.w procnum2
00021AE8 <AmiBlitz3.ab3@3235>   CLR.w dfetch
00021AEE <AmiBlitz3.ab3@3236>   CLR.l titleat
00021AF4 <AmiBlitz3.ab3@3237>   CLR.b usedpath
00021AFA <AmiBlitz3.ab3@3238>   CLR.b path2
00021B00 <AmiBlitz3.ab3@3239>   CLR.w inerr
00021B06 <AmiBlitz3.ab3@3240>   CLR.w intlevel
00021B0C <AmiBlitz3.ab3@3241>   CLR.l cont_pc
00021B12 <AmiBlitz3.ab3@3242>   CLR.l cont_pc2
00021B18 <AmiBlitz3.ab3@3243>   CLR.l lastcontlink
00021B22 <AmiBlitz3.ab3@3245>   MOVE.l destbufferstart,destpointer
00021B2C <AmiBlitz3.ab3@3246>   MOVE.l destbufferstart,bigpc
00021B36 <AmiBlitz3.ab3@3247>   MOVE.l destbufferend,libend
00021B40 <AmiBlitz3.ab3@3248>   MOVE.l data1start,data1
00021B4A <AmiBlitz3.ab3@3249>   MOVE.l data2at,data2
00021B52 <AmiBlitz3.ab3@3251>   MOVE.w #-1,skipcode                                      ;#-1,comflag org source
00021B5A <AmiBlitz3.ab3@3252>   MOVE.w #-1,linemode                                      ;#-1,linemode org soruce
00021B60 <AmiBlitz3.ab3@3253>   CLR.w oldvcodelen
00021B66 <AmiBlitz3.ab3@3254>   CLR.b lastgloballabel                                    ;lastbiglab org source
00021B68 <AmiBlitz3.ab3@3256> RTS
00021B6A <AmiBlitz3.ab3@3259> debugmode:  Ds.w 1                                         ;debugga org source ;debugger enabled?
00021B70 <AmiBlitz3.ab3@3263>   LEA  clrreq,a1
00021B74 <AmiBlitz3.ab3@3264>   MOVE.w #2000,(a1)
00021B9E <AmiBlitz3.ab3@3265>   !basic
00021BB4 <AmiBlitz3.ab3@3266> 
00021C04 <AmiBlitz3.ab3@3267>   comstatusstr   = !TRANS{"Initializing Compiler..."} ;default settings
00021C0C <AmiBlitz3.ab3@3268>   calcpro.l      = 0
00021C14 <AmiBlitz3.ab3@3269>   calcpro_old.l  = 0
00021C20 <AmiBlitz3.ab3@3270>   typ_old.l      = -1
00021C2C <AmiBlitz3.ab3@3271>   pass_old.l     = -1
00021C32 <AmiBlitz3.ab3@3272>   update_comstatus_gui.b = True ; for the first
00021C6C <AmiBlitz3.ab3@3274>   GetD0 &comstatusstr : !ComData_SetL{comPtr_CompileStatusString,d0}  ; set pointer of status string for gui tomsmart1 2012 05 12
00021CA6 <AmiBlitz3.ab3@3275>   GetD0 &calcpro      : !ComData_SetL{comPtr_CompileCalcProLong ,d0}  ; set pointer of calcpro long for gui tomsmart1 2012 05 12
00021CC4 <AmiBlitz3.ab3@3276>   !asm
00021CF6 <AmiBlitz3.ab3@3277> 
00021CFC <AmiBlitz3.ab3@3279>   CLR.w stopit
00021CFE <AmiBlitz3.ab3@3280> RTS
00021D04 <AmiBlitz3.ab3@3287>   CLR.w storedebugmode
00021D0A <AmiBlitz3.ab3@3288>   CLR.b iserror
00021D0E <AmiBlitz3.ab3@3290>   BSR.w compilerequester
00021D18 <AmiBlitz3.ab3@3292>   MOVE.l #0,globallinecount
00021D1E <AmiBlitz3.ab3@3293>   JSR check_of_same_source
00021D22 <AmiBlitz3.ab3@3296>   BSR.w call_setpointerbusy
00021D26 <AmiBlitz3.ab3@3298>   BSR.w setcvars
00021D2E <AmiBlitz3.ab3@3300>   MOVE.w #$8000,globalvarpointer
00021D38 <AmiBlitz3.ab3@3301>   MOVE.l #newtype_quick,defaulttype
00021D3E <AmiBlitz3.ab3@3303>   MOVE.l A7,passstack
00021D48 <AmiBlitz3.ab3@3304>   MOVE.l #firstitem_,sourceline
00021D52 <AmiBlitz3.ab3@3305>   MOVE.w numlines_org,linesleft
00021D5C <AmiBlitz3.ab3@3307>   MOVE.l numlines,numlines2
00021D62 <AmiBlitz3.ab3@3309>   ADDQ.w #1,linesleft
00021D68 <AmiBlitz3.ab3@3310>   ADDQ.l #1,numlines2
00021D72 <AmiBlitz3.ab3@3311>   MOVE.l #-1,linenumat
00021D76 <AmiBlitz3.ab3@3313>   BSR.w resetlibs
00021D7A <AmiBlitz3.ab3@3314>   BSR.w Aclearallvars
00021D80 <AmiBlitz3.ab3@3316>   LEA progress_per_line+2,A0
00021D82 <AmiBlitz3.ab3@3317>   MOVEQ.l #$03,D0
00021D84 <AmiBlitz3.ab3@3320>     CLR.w (A0)+
00021D88 <AmiBlitz3.ab3@3321>   DBF D0,'okloop
00021D8E <AmiBlitz3.ab3@3325>   LEA _include,a0
00021D92 <AmiBlitz3.ab3@3326>   MOVEM.l a0-a6/d0-d7,-(a7)
00021D98 <AmiBlitz3.ab3@3327>   LEA ptr_parameterstore,a1
00021D9A <AmiBlitz3.ab3@3330>     MOVE.b (a0)+,(a1)+
00021D9E <AmiBlitz3.ab3@3331>   BNE 'l1b
00021DA0 <AmiBlitz3.ab3@3333>   MOVEQ #9,d2
00021DA6 <AmiBlitz3.ab3@3334>   JSR findlabel2
00021DAA <AmiBlitz3.ab3@3335>   BNE 'd
00021DB2 <AmiBlitz3.ab3@3336>   MOVE.l #0,8(a2)
00021DB6 <AmiBlitz3.ab3@3337>   MOVEM.l (a7)+,a0-a6/d0-d7
00021DBA <AmiBlitz3.ab3@3338>  BRA 'd2
00021DC0 <AmiBlitz3.ab3@3341>   JSR addlabelhash
00021DC8 <AmiBlitz3.ab3@3342>   MOVE.l #$1,$4(A2)
00021DD0 <AmiBlitz3.ab3@3343>   MOVE.l #0,8(a2)
00021DD4 <AmiBlitz3.ab3@3344>   MOVEM.l (a7)+,a0-a6/d0-d7
00021DDA <AmiBlitz3.ab3@3347>   LEA _debug,a0
00021DDE <AmiBlitz3.ab3@3348>   MOVEM.l a0-a6/d0-d7,-(a7)
00021DE4 <AmiBlitz3.ab3@3349>   LEA ptr_parameterstore,a1
00021DE6 <AmiBlitz3.ab3@3352>     MOVE.b (a0)+,(a1)+
00021DEA <AmiBlitz3.ab3@3353>   BNE 'l9b
00021DEC <AmiBlitz3.ab3@3355>   MOVEQ #7,d2
00021DF2 <AmiBlitz3.ab3@3356>   JSR findlabel2
00021DF6 <AmiBlitz3.ab3@3357>   BNE 'd9
00021DFA <AmiBlitz3.ab3@3358>   MOVE.b debugmode(PC),D0
00021DFC <AmiBlitz3.ab3@3359>   EXT.w d0
00021DFE <AmiBlitz3.ab3@3360>   EXT.l d0
00021E02 <AmiBlitz3.ab3@3361>   MOVE.l d0,8(a2)
00021E06 <AmiBlitz3.ab3@3362>   MOVEM.l (a7)+,a0-a6/d0-d7
00021E0A <AmiBlitz3.ab3@3363>  BRA 'd9b
00021E10 <AmiBlitz3.ab3@3366>   JSR addlabelhash
00021E18 <AmiBlitz3.ab3@3367>   MOVE.l #$1,$4(A2)
00021E1C <AmiBlitz3.ab3@3368>   MOVE.b debugmode(PC),D0
00021E1E <AmiBlitz3.ab3@3369>   EXT.w d0
00021E20 <AmiBlitz3.ab3@3370>   EXT.l d0
00021E24 <AmiBlitz3.ab3@3371>   MOVE.l d0,8(a2)
00021E28 <AmiBlitz3.ab3@3372>   MOVEM.l (a7)+,a0-a6/d0-d7
00021E2E <AmiBlitz3.ab3@3375>   MOVE.l #firstitem_,a0
00021E30 <AmiBlitz3.ab3@3376>   MOVE.l (a0),a0
00021E34 <AmiBlitz3.ab3@3377>   LEA 9(a0),a0
00021E3C <AmiBlitz3.ab3@3378>   MOVE.w #0,exdebug
00021E42 <AmiBlitz3.ab3@3379>   TST.b debugmode
00021E46 <AmiBlitz3.ab3@3380>    BEQ 'l10
00021E48 <AmiBlitz3.ab3@3383>   MOVE.b (a0)+,d0
00021E4C <AmiBlitz3.ab3@3384>    BEQ 'l10
00021E50 <AmiBlitz3.ab3@3385>   CMP.b #$20,d0
00021E54 <AmiBlitz3.ab3@3386>    BEQ 'l2
00021E56 <AmiBlitz3.ab3@3387>   SUBQ.l #1,a0
00021E5C <AmiBlitz3.ab3@3388>   CMP.l #"DEBU",(a0)
00021E60 <AmiBlitz3.ab3@3389>    BNE 'l10
00021E66 <AmiBlitz3.ab3@3390>   CMP.b #"G",4(a0)
00021E6A <AmiBlitz3.ab3@3391>    BNE 'l10
00021E72 <AmiBlitz3.ab3@3392>   MOVE.w #$0,debugversion
00021E7A <AmiBlitz3.ab3@3393>   MOVE.b #1,exdebug
00021E80 <AmiBlitz3.ab3@3400>   LEA nops4,A0
00021E86 <AmiBlitz3.ab3@3401>   LEA nopsf,A1
00021E8C <AmiBlitz3.ab3@3402>   JSR pokecode2                                            ;write intro nops
00021E92 <AmiBlitz3.ab3@3404>   MOVE.l #$01010101,d1
00021E98 <AmiBlitz3.ab3@3405>   JSR writedatalong                                        ;for the 4 tempregs
00021E9E <AmiBlitz3.ab3@3406>   JSR writedatalong
00021EA4 <AmiBlitz3.ab3@3407>   JSR writedatalong
00021EAA <AmiBlitz3.ab3@3408>   JSR writedatalong
00021EB0 <AmiBlitz3.ab3@3409>   TST.b saved0
00021EB4 <AmiBlitz3.ab3@3410>    BEQ 'l1
00021EBA <AmiBlitz3.ab3@3411>   MOVE.l #$4e714e71,d1
00021EC0 <AmiBlitz3.ab3@3412>   JSR writelong                                            ;add 2 nops
00021EC6 <AmiBlitz3.ab3@3413>   MOVE.l #$4e714e71,d1
00021ECC <AmiBlitz3.ab3@3414>   JSR writelong                                            ;add 2 nops
00021ED2 <AmiBlitz3.ab3@3415>   MOVE.l #$4e714e71,d1
00021ED8 <AmiBlitz3.ab3@3416>   JSR writelong                                            ;add 2 nops
00021EDE <AmiBlitz3.ab3@3417>    MOVE.l #$4e714e71,d1
00021EE4 <AmiBlitz3.ab3@3418>   JSR writelong                                            ;add 2 nops
00021EE8 <AmiBlitz3.ab3@3422>   MOVE.b debugmode(PC),D1
00021EEC <AmiBlitz3.ab3@3423>    BEQ.b 'dskip
00021EF6 <AmiBlitz3.ab3@3424>   MOVE.b debugmode,storedebugmode
00021EFA <AmiBlitz3.ab3@3426>   MOVE.w #$FFDC,D1        ;#runerrlib,
00021EFE <AmiBlitz3.ab3@3427>    BSR.w uselib
00021F04 <AmiBlitz3.ab3@3429>   TST.w debugversion                                       ;make a version for debugger
00021F08 <AmiBlitz3.ab3@3430>    BNE.b 'exec
00021F0C <AmiBlitz3.ab3@3434>   MOVE.w #$FA3C,D1        ;#debuglib,
00021F10 <AmiBlitz3.ab3@3435>    BSR.w uselib
00021F14 <AmiBlitz3.ab3@3436>   MOVE.w #$0001,D1        ;#dhandlerlib,
00021F18 <AmiBlitz3.ab3@3437>    BSR.w uselib
00021F1C <AmiBlitz3.ab3@3438>  BRA.b 'dskip
00021F20 <AmiBlitz3.ab3@3443>   MOVE.w #$FA32,D1        ;#rundebuglib,
00021F24 <AmiBlitz3.ab3@3444>   BSR.w uselib
00021F28 <AmiBlitz3.ab3@3447>   BSR.w nextline
00021F2E <AmiBlitz3.ab3@3449>   CLR.l linenum
00021F34 <AmiBlitz3.ab3@3450>   CLR.l stacktrack
00021F3A <AmiBlitz3.ab3@3456>   ADDQ.l #1,linenum
00021F44 <AmiBlitz3.ab3@3457>   MOVE.l destpointer,destpointer2
00021F4A <AmiBlitz3.ab3@3458>   MOVE.l a5,sourceline2
00021F4E <AmiBlitz3.ab3@3460>   BSR.w compile_line                                        ;compile pass
00021F52 <AmiBlitz3.ab3@3464>   BSR.w nextline
00021F56 <AmiBlitz3.ab3@3465>    BNE.w passloop
00021F5A <AmiBlitz3.ab3@3466>   BSR.w JUMP_do_runerrson
00021F5E <AmiBlitz3.ab3@3467>   BSR.w pointchk
00021F64 <AmiBlitz3.ab3@3469>   TST.b objectcount
00021F68 <AmiBlitz3.ab3@3470>    BNE macenderr
00021F6E <AmiBlitz3.ab3@3472>   CLR.l linenumat
00021F72 <AmiBlitz3.ab3@3473>   BSR.w errchx2
00021F7C <AmiBlitz3.ab3@3475>   CMP.l #-1,bssend
00021F80 <AmiBlitz3.ab3@3476>    BNE 'l30
00021F8A <AmiBlitz3.ab3@3477>   MOVE.l destpointer,bssend                                ;compile end
00021F90 <AmiBlitz3.ab3@3480>   MOVE.l destpointer,d0
00021F9A <AmiBlitz3.ab3@3481>   CMP.l #-1,bssstart
00021F9E <AmiBlitz3.ab3@3482>   BNE 'lnf6
00021FA8 <AmiBlitz3.ab3@3483>   CMP.l #-1,chipstart
00021FAC <AmiBlitz3.ab3@3484>   BNE 'lnf6
00021FB0 <AmiBlitz3.ab3@3485>  BRA 'leven4
00021FB6 <AmiBlitz3.ab3@3488>   MOVE.l destpointer,d1
00021FB8 <AmiBlitz3.ab3@3489>   ADDQ.l #3,d1
00021FBE <AmiBlitz3.ab3@3490>   AND.l #$fffffffc,d1                                      ;bug ?
00021FC4 <AmiBlitz3.ab3@3491>   MOVE.l d1,destpointer
00021FCE <AmiBlitz3.ab3@3494>   MOVE.l destpointer,codeend
00021FD8 <AmiBlitz3.ab3@3495>   CMP.l #-1,chipend
00021FDC <AmiBlitz3.ab3@3496>   BNE 'l31
00021FE6 <AmiBlitz3.ab3@3497>   MOVE.l destpointer,chipend
00021FEC <AmiBlitz3.ab3@3500>   MOVE.l destpointer,d1
00021FEE <AmiBlitz3.ab3@3501>   ADDQ.l #1,d1
00021FF4 <AmiBlitz3.ab3@3502>   AND.l #$fffffffe,d1                                     ;new evenexit
00021FFA <AmiBlitz3.ab3@3503>   MOVE.l d1,destpointer
00021FFE <AmiBlitz3.ab3@3506>   MOVE.b debugmode(PC),D1
00022002 <AmiBlitz3.ab3@3507>    BEQ.b 'nodb
00022006 <AmiBlitz3.ab3@3509>    BSR.w debugstuff
0002200A <AmiBlitz3.ab3@3510>   MOVE.w #$C300,D1        ;#finalscheck,
00022010 <AmiBlitz3.ab3@3511>    JSR Atokejsr
00022014 <AmiBlitz3.ab3@3513>    BSR.w debugstuff
00022018 <AmiBlitz3.ab3@3514>   MOVE.l eopcode(PC),D1
0002201E <AmiBlitz3.ab3@3515>    JSR writelong
00022022 <AmiBlitz3.ab3@3516>   MOVE.l lastcontlink(PC),D1
00022026 <AmiBlitz3.ab3@3517>    BEQ.b 'nocl
00022028 <AmiBlitz3.ab3@3518>   MOVEA.l D1,A0
0002202C <AmiBlitz3.ab3@3519>   CLR.w $6(A0)
00022036 <AmiBlitz3.ab3@3526>   MOVE.l destpointer,endop                                ;where end goes...
0002203C <AmiBlitz3.ab3@3528>   TST.w blitzmode
00022040 <AmiBlitz3.ab3@3529>   BEQ.w 'nobl
00022044 <AmiBlitz3.ab3@3530>   BSR.w do_AMIGA                                          ;back to amiga if in blitz!
0002204A <AmiBlitz3.ab3@3533>   TST.w intsused
0002204E <AmiBlitz3.ab3@3534>   BEQ.b 'noints
00022052 <AmiBlitz3.ab3@3535>   MOVE.w #$C105,D1                                        ;interupts off!
00022058 <AmiBlitz3.ab3@3536>   JSR tokejsr2
0002205C <AmiBlitz3.ab3@3539>   BSR.w calcstatic
00022062 <AmiBlitz3.ab3@3540>   MOVE.w D4,numstatic
00022068 <AmiBlitz3.ab3@3541>   MOVE.l D3,staticdata
0002206C <AmiBlitz3.ab3@3542>    BSR.w calcmaxs
00022072 <AmiBlitz3.ab3@3544>   TST.l tokeslist
00022076 <AmiBlitz3.ab3@3545>    BEQ.b 'skipjsrs
0002207C <AmiBlitz3.ab3@3547>   MOVE.w gotocode,D1                                       ;jmp!
00022082 <AmiBlitz3.ab3@3548>    JSR writeword
0002208C <AmiBlitz3.ab3@3549>   MOVE.l destpointer,endjmpat
00022090 <AmiBlitz3.ab3@3550>    BSR.w addoff
00022096 <AmiBlitz3.ab3@3551>    JSR writelong                                           
0002209A <AmiBlitz3.ab3@3553>    BSR.w fixjsrs                                         ;has to be done before finits!
000220A0 <AmiBlitz3.ab3@3557>   TST.w dontwrite
000220A4 <AmiBlitz3.ab3@3558>    BNE.b 'skipjsrs
000220A8 <AmiBlitz3.ab3@3559>   MOVEA.l endjmpat(PC),A4
000220AE <AmiBlitz3.ab3@3560>   MOVE.l destpointer,(A4)
000220B4 <AmiBlitz3.ab3@3564>   TST.b returncode
000220B8 <AmiBlitz3.ab3@3565>   BEQ 'l2
000220BC <AmiBlitz3.ab3@3566>   MOVE.w #$2e80,d1
000220C2 <AmiBlitz3.ab3@3567>   JSR writeword
000220C8 <AmiBlitz3.ab3@3571>   JSR makefinits
000220CE <AmiBlitz3.ab3@3573>   TST.b returncode
000220D2 <AmiBlitz3.ab3@3574>   BEQ 'l3
000220D6 <AmiBlitz3.ab3@3575>   MOVE.w #$4e75,d1
000220DC <AmiBlitz3.ab3@3576>   JSR writeword
000220E0 <AmiBlitz3.ab3@3577>  BRA 'l1
000220E6 <AmiBlitz3.ab3@3581>   MOVE.l #$70004E75,D1
000220EC <AmiBlitz3.ab3@3582>   JSR writelong                                            ;write moveq #0,d0:rts
000220F2 <AmiBlitz3.ab3@3585>   JSR makeinits
000220F6 <AmiBlitz3.ab3@3586>   BSR.w asmfixer
000220FA <AmiBlitz3.ab3@3588>   BSR.w close_compilewin
000220FE <AmiBlitz3.ab3@3589> BRA.w call_setpointernormal
00022104 <AmiBlitz3.ab3@3592> JUMP_do_runerrson JMP do_runerrson
00022106 <AmiBlitz3.ab3@3596> eopcode:    Dc.b $70,$03                                   ;MOVEQ #$03,D0
00022108 <AmiBlitz3.ab3@3597>             Dc.b $4E,$40                                   ;TRAP  #00
0002210C <AmiBlitz3.ab3@3599> endjmpat:   Ds.l 1
00022112 <AmiBlitz3.ab3@3603>   MOVEA.l newtype_string,A2
00022118 <AmiBlitz3.ab3@3604>   MOVE.l #MaxByte,D0                                       ;move.l #$ff,d0 org source
0002211C <AmiBlitz3.ab3@3607>     CMPA.w #$0,A2
00022120 <AmiBlitz3.ab3@3608>      BEQ.w 'done
00022124 <AmiBlitz3.ab3@3609>     CMP.l $4(A2),D0
00022128 <AmiBlitz3.ab3@3610>      BNE.w 'next
00022130 <AmiBlitz3.ab3@3611>     MOVE.w $8(A2),linenumat+2                              ;type not found  ;move 8(a2),linenumat org source
00022134 <AmiBlitz3.ab3@3612>  BRA.w notypeerr
00022136 <AmiBlitz3.ab3@3615>     MOVEA.l (A2),A2
0002213A <AmiBlitz3.ab3@3616>  BRA.w 'loop
0002213C <AmiBlitz3.ab3@3619> RTS
00022142 <AmiBlitz3.ab3@3623>   LEA labelbase,A2
00022144 <AmiBlitz3.ab3@3627>   MOVE.l (A2),D0                                           ;testlabels
00022148 <AmiBlitz3.ab3@3628>    BEQ.w 'done
0002214A <AmiBlitz3.ab3@3629>   MOVEA.l D0,A2
0002214E <AmiBlitz3.ab3@3630>   MOVE.l $4(A2),D0
00022152 <AmiBlitz3.ab3@3631>   BTST #$0,D0
00022156 <AmiBlitz3.ab3@3632>    BNE.w 'loop
0002215A <AmiBlitz3.ab3@3633>   MOVE.l $8(A2),D0
0002215E <AmiBlitz3.ab3@3634>    BNE.w 'loop
00022166 <AmiBlitz3.ab3@3635>   MOVE.w $10(A2),linenumat+2
00022168 <AmiBlitz3.ab3@3636>   MOVEQ #0,d0
0002216C <AmiBlitz3.ab3@3637>   MOVE.b $12(a2),d0
00022174 <AmiBlitz3.ab3@3638>   MOVE.w 0(a2,d0),linenumat
0002217A <AmiBlitz3.ab3@3639>  JMP nolaberr                                               ;label not found
00022180 <AmiBlitz3.ab3@3642>   MOVE.l concomsp,D0
00022186 <AmiBlitz3.ab3@3643>   CMP.l #concomstack,D0
0002218A <AmiBlitz3.ab3@3644>    BNE.w chxerr4
00022190 <AmiBlitz3.ab3@3645>   MOVE.w connest,D1
00022194 <AmiBlitz3.ab3@3646>    BNE.w chxerr4
00022196 <AmiBlitz3.ab3@3650>   MOVE.l D1,-(A7)
0002219C <AmiBlitz3.ab3@3651>   MOVE.l firstsel,D1
000221A0 <AmiBlitz3.ab3@3652>    BNE.w 'err1
000221A6 <AmiBlitz3.ab3@3653>   MOVE.l firstrep,D1
000221AA <AmiBlitz3.ab3@3654>    BNE.w 'err2
000221B0 <AmiBlitz3.ab3@3655>   MOVE.w intstring,D1
000221B4 <AmiBlitz3.ab3@3656>    BNE.w 'err3
000221B8 <AmiBlitz3.ab3@3657>   MOVE.l 4(a7),d1
000221BE <AmiBlitz3.ab3@3658>   MOVE.w proceduremode,D1
000221C2 <AmiBlitz3.ab3@3659>    BNE.w 'err6
000221C8 <AmiBlitz3.ab3@3660>   MOVE.l firstiff,d1
000221CC <AmiBlitz3.ab3@3661>    BNE 'err5
000221D2 <AmiBlitz3.ab3@3662>   MOVE.l firstfor,D1
000221D6 <AmiBlitz3.ab3@3663>    BNE.w 'err7
000221D8 <AmiBlitz3.ab3@3664>   MOVE.l (A7)+,D1
000221DA <AmiBlitz3.ab3@3665>  RTS
000221E4 <AmiBlitz3.ab3@3668>   MOVE.l sellineat,linenumat
000221EA <AmiBlitz3.ab3@3669>  JMP selerrz
000221F4 <AmiBlitz3.ab3@3672>   MOVE.l replineat,linenumat
000221FA <AmiBlitz3.ab3@3673>  JMP unterr3
00022204 <AmiBlitz3.ab3@3676>   MOVE.l intlineat,linenumat
0002220A <AmiBlitz3.ab3@3677>  JMP interr2
00022214 <AmiBlitz3.ab3@3680>   MOVE.l iflineat,linenumat
0002221A <AmiBlitz3.ab3@3681>  JMP noenderr
00022224 <AmiBlitz3.ab3@3684>   MOVE.l prolineat,linenumat
0002222A <AmiBlitz3.ab3@3685>  JMP nopenderr
00022234 <AmiBlitz3.ab3@3688>   MOVE.l forlineat,linenumat
0002223A <AmiBlitz3.ab3@3689> JMP nonexterr
00022244 <AmiBlitz3.ab3@3693>   MOVE.l ciflineat,linenumat
0002224A <AmiBlitz3.ab3@3694> JMP nocenderr
00022254 <AmiBlitz3.ab3@3698>   MOVE.l data1,maxsat
00022256 <AmiBlitz3.ab3@3699>   MOVEQ.l #$00,D4
0002225C <AmiBlitz3.ab3@3700>   MOVEA.l libpointer,A2
00022260 <AmiBlitz3.ab3@3703>     CMPA.w #$0,A2
00022264 <AmiBlitz3.ab3@3704>      BEQ.w 'done
00022268 <AmiBlitz3.ab3@3705>     TST.w $C(A2)
0002226C <AmiBlitz3.ab3@3706>      BPL.w 'next
00022270 <AmiBlitz3.ab3@3707>     MOVE.l $12(A2),D0
00022274 <AmiBlitz3.ab3@3708>     TST.w -$2(A2,D0.L)
00022278 <AmiBlitz3.ab3@3709>      BEQ.w 'next
0002227A <AmiBlitz3.ab3@3711>     ADDQ.w #1,D4
0002227E <AmiBlitz3.ab3@3712>     MOVE.w -$6(A2,D0.L),D1
00022282 <AmiBlitz3.ab3@3713>     BSR.w pokedata1
00022284 <AmiBlitz3.ab3@3714>     MOVEQ.l #$01,D1
00022288 <AmiBlitz3.ab3@3715>     MOVE.w -$2(A2,D0.L),D2
0002228A <AmiBlitz3.ab3@3716>     LSL.w D2,D1
0002228E <AmiBlitz3.ab3@3717>     MULU -$4(A2,D0.L),D1                                   ;write objectspacesize
00022292 <AmiBlitz3.ab3@3718>     BSR.w writedatalong
00022294 <AmiBlitz3.ab3@3721>     MOVEA.l (A2),A2
00022298 <AmiBlitz3.ab3@3722>  BRA.w 'loop
0002229E <AmiBlitz3.ab3@3725>   MOVE.w D4,maxsused
000222A2 <AmiBlitz3.ab3@3726>    BEQ.w 'done2
000222A6 <AmiBlitz3.ab3@3727>   MOVE.w #$FFFA,D1       ;was #65530    ;use memlib                                  ;;use memlib
000222AA <AmiBlitz3.ab3@3728> BRA.w uselib
000222AC <AmiBlitz3.ab3@3731> RTS
000222B2 <AmiBlitz3.ab3@3737>    MOVE.l a7,stackaddr
000222B6 <AmiBlitz3.ab3@3739>    BSR.w compile_term
000222BA <AmiBlitz3.ab3@3740>    BSR.w reget
000222BE <AmiBlitz3.ab3@3741>    BNE.w illeolerr
000222C4 <AmiBlitz3.ab3@3743>    TST.w dontwrite
000222C8 <AmiBlitz3.ab3@3744>    BNE 'l1
000222CE <AmiBlitz3.ab3@3745>    TST.l stacktrack
000222D2 <AmiBlitz3.ab3@3746>    BNE errormsg_stack
000222D6 <AmiBlitz3.ab3@3750>    CMP.w #-$7FDE,D0            ; was #$8000+34
000222DA <AmiBlitz3.ab3@3751>    BNE.w 'notelse
000222E0 <AmiBlitz3.ab3@3752>    JSR do_else2
000222E4 <AmiBlitz3.ab3@3753>  BRA.w compile_line
000222E6 <AmiBlitz3.ab3@3756>   TST.w D0
000222EA <AmiBlitz3.ab3@3757>   BNE.w compile_line
000222F0 <AmiBlitz3.ab3@3763>   MOVE.l firstiff,D0
000222F4 <AmiBlitz3.ab3@3764>    BEQ.w 'done
000222F6 <AmiBlitz3.ab3@3765>   MOVEA.l D0,A0
000222FA <AmiBlitz3.ab3@3766>   MOVE.w $C(A0),D1
000222FE <AmiBlitz3.ab3@3767>    BPL.w 'done
00022302 <AmiBlitz3.ab3@3771>   BCLR #$F,D1
00022308 <AmiBlitz3.ab3@3772>    JSR doendif2
0002230E <AmiBlitz3.ab3@3773>    JSR freetheifz
00022312 <AmiBlitz3.ab3@3774> BRA.w 'unthen
00022314 <AmiBlitz3.ab3@3777> RTS
0002231A <AmiBlitz3.ab3@3781>   LEA lastgloballabel,A0
0002231C <AmiBlitz3.ab3@3782>   TST.b (A0)
00022320 <AmiBlitz3.ab3@3783>   BEQ.w nolocerr
00022326 <AmiBlitz3.ab3@3784>   LEA ptr_parameterstore,A1
00022328 <AmiBlitz3.ab3@3785>   MOVEQ.l #$00,D2
0002232A <AmiBlitz3.ab3@3788>   ADDQ.w #1,D2
0002232C <AmiBlitz3.ab3@3789>   MOVE.b (A0)+,(A1)+
00022330 <AmiBlitz3.ab3@3790>    BNE.w 'loop
00022336 <AmiBlitz3.ab3@3791>   MOVE.b #$27,-$1(A1)
00022338 <AmiBlitz3.ab3@3792>   MOVE.w D2,-(A7)
0002233E <AmiBlitz3.ab3@3793>    JSR makename4
00022340 <AmiBlitz3.ab3@3794>   CMP.w (A7)+,D2
00022344 <AmiBlitz3.ab3@3795>    BEQ.w syntaxerr
00022346 <AmiBlitz3.ab3@3796>    TST.w d0
0002234A <AmiBlitz3.ab3@3797>    BPL 'done
00022352 <AmiBlitz3.ab3@3798>    MOVE.w #$3a,lastchar
00022354 <AmiBlitz3.ab3@3799>    SUBQ.l #2,a5
00022356 <AmiBlitz3.ab3@3802> RTS
00022360 <AmiBlitz3.ab3@3806>   MOVE.l #forthstack,forthsp
0002236A <AmiBlitz3.ab3@3807>   MOVE.l #precstack,precsp
0002236C <AmiBlitz3.ab3@3808> RTS
0002236E <AmiBlitz3.ab3@3815>   MOVEQ.l #$00,D4
00022398 <AmiBlitz3.ab3@3818>   !basic
000223DA <AmiBlitz3.ab3@3819> 
000223EA <AmiBlitz3.ab3@3821>   If (c_abort = 1)           ; check if set
000223EC <AmiBlitz3.ab3@3822>     MOVEQ.l #-$01,d4
000223F2 <AmiBlitz3.ab3@3823>     MOVE.w D4,stopit
00022410 <AmiBlitz3.ab3@3824>     !asm
00022414 <AmiBlitz3.ab3@3825>     BRA 'skip
00022432 <AmiBlitz3.ab3@3827>   !asm
00022434 <AmiBlitz3.ab3@3828>   MOVEQ.l #$00,D6
00022436 <AmiBlitz3.ab3@3829>   MOVEQ.l #$00,D7                                          ; clr Z-Flag for beq.b in chkstop_chk
00022438 <AmiBlitz3.ab3@3833> RTS
0002243C <AmiBlitz3.ab3@3837>   MOVE.w stopit(PC),D0
00022440 <AmiBlitz3.ab3@3838>   BEQ 'chk
00022446 <AmiBlitz3.ab3@3840>   SUBQ.w #1,stopit
00022448 <AmiBlitz3.ab3@3845>  RTS
00022450 <AmiBlitz3.ab3@3849>   MOVE.w #2000,stopit
00022454 <AmiBlitz3.ab3@3851>   BSR.w chkrealstop
00022458 <AmiBlitz3.ab3@3852>   BEQ.b 'rts
0002245C <AmiBlitz3.ab3@3855>   BSR.w close_compilewin
00022460 <AmiBlitz3.ab3@3856>   BSR.w call_setpointernormal
00022466 <AmiBlitz3.ab3@3858>   MOVEA.l errstack,A7
0002246C <AmiBlitz3.ab3@3859>   MOVEA.l errcont,A0
00022474 <AmiBlitz3.ab3@3860>   MOVE.w #-1,anyerrs
00022476 <AmiBlitz3.ab3@3861> JMP (A0)
0002247A <AmiBlitz3.ab3@3864> d_pc:           Ds.l 1
0002247E <AmiBlitz3.ab3@3865> d_bigpc:        Ds.l 1
00022480 <AmiBlitz3.ab3@3866> d_nomemleft:    Ds.w 1
00022484 <AmiBlitz3.ab3@3867> cont_pc:        Ds.l 1
00022488 <AmiBlitz3.ab3@3868> cont_pc2:       Ds.l 1
0002248C <AmiBlitz3.ab3@3869> lastcontlink:   Ds.l 1
00022490 <AmiBlitz3.ab3@3873>   ORI.w #$4E40,D1
00022494 <AmiBlitz3.ab3@3874> BRA.w JUMP_writeword
0002249A <AmiBlitz3.ab3@3878>   TST.b debugmode
0002249E <AmiBlitz3.ab3@3879>   BEQ.w debugstuffa_rts
000224A4 <AmiBlitz3.ab3@3890>   TST.w dirmode                                            ;or while in direct mode...
000224A8 <AmiBlitz3.ab3@3891>    BNE debugstuffa_rts
000224B2 <AmiBlitz3.ab3@3893>   MOVE.l destpointer,d_pc
000224BC <AmiBlitz3.ab3@3894>   MOVE.l bigpc,d_bigpc
000224C6 <AmiBlitz3.ab3@3895>   MOVE.w dontwrite,d_nomemleft
000224CA <AmiBlitz3.ab3@3897>   MOVEM.l D0-D1,-(A7)
000224CC <AmiBlitz3.ab3@3899>   MOVEQ.l #$01,D1
000224D0 <AmiBlitz3.ab3@3900>    BSR.w writetrap                                         ;write the adress to sourceline
000224D6 <AmiBlitz3.ab3@3904>    MOVE.l destpointer,D0
000224DC <AmiBlitz3.ab3@3905>   MOVE.l cont_pc,D1
000224E2 <AmiBlitz3.ab3@3906>   MOVE.l D0,cont_pc
000224E8 <AmiBlitz3.ab3@3907>   MOVE.l D1,cont_pc2
000224EC <AmiBlitz3.ab3@3908>    BEQ.b 'skip
000224F2 <AmiBlitz3.ab3@3910>   TST.w dontwrite
000224F6 <AmiBlitz3.ab3@3911>    BNE.b 'skip
000224F8 <AmiBlitz3.ab3@3913>   MOVEA.l D1,A4
000224FA <AmiBlitz3.ab3@3914>   SUB.l A4,D0
000224FE <AmiBlitz3.ab3@3915>   MOVE.w D0,$6(A4)
00022504 <AmiBlitz3.ab3@3916>   MOVE.l A4,lastcontlink
0002250A <AmiBlitz3.ab3@3920>   TST.w ininclude
00022510 <AmiBlitz3.ab3@3922>   TST.w makeexec
00022514 <AmiBlitz3.ab3@3923>   BEQ 'l1
0002251A <AmiBlitz3.ab3@3924>   TST.w exdebug
0002251E <AmiBlitz3.ab3@3925>   BEQ 'noinc
00022522 <AmiBlitz3.ab3@3928>   MOVEM.l a0-a1/d2/d3,-(a7)                                ;write source for includes
00022528 <AmiBlitz3.ab3@3929>   MOVE.l data1,d1
0002252E <AmiBlitz3.ab3@3930>   TST.b firsttime
00022532 <AmiBlitz3.ab3@3931>   BNE 'nofirst
0002253A <AmiBlitz3.ab3@3932>   MOVE.b #1,firsttime
00022540 <AmiBlitz3.ab3@3933>   MOVE.l #"DuCk",d1                                        ; to found from debugger the code start
00022546 <AmiBlitz3.ab3@3934>   JSR writedatalong
0002254C <AmiBlitz3.ab3@3935>   MOVE.l #"AmiB",d1
00022552 <AmiBlitz3.ab3@3936>   JSR writedatalong
00022558 <AmiBlitz3.ab3@3937>   MOVE.l destbufferstart,d1
0002255E <AmiBlitz3.ab3@3938>   JSR writedatalong
00022564 <AmiBlitz3.ab3@3939>   TST.w dontwrite
00022568 <AmiBlitz3.ab3@3940>   BNE 'nohunk
0002256E <AmiBlitz3.ab3@3941>   MOVE.l data1,d1
00022570 <AmiBlitz3.ab3@3942>   SUBQ.l #4,d1
00022576 <AmiBlitz3.ab3@3943>   SUB.l destbufferstart,d1
00022578 <AmiBlitz3.ab3@3944>   MOVE.l d1,d2
0002257E <AmiBlitz3.ab3@3945>   JSR addhunkoffset
00022584 <AmiBlitz3.ab3@3948>   MOVE.l destpointer,d2
0002258A <AmiBlitz3.ab3@3949>   MOVE.l data1,d1
00022590 <AmiBlitz3.ab3@3952>   MOVE.l destpointer,d2
00022592 <AmiBlitz3.ab3@3953>   MOVE.l d1,d3
00022598 <AmiBlitz3.ab3@3954>   SUB.l destbufferstart,d1
0002259E <AmiBlitz3.ab3@3955>   OR.l #$80000000,d1
000225A4 <AmiBlitz3.ab3@3956>   JSR writelong
000225AA <AmiBlitz3.ab3@3957>   TST.w inmacro
000225AE <AmiBlitz3.ab3@3958>   BEQ 'sc1
000225B4 <AmiBlitz3.ab3@3959>   MOVE.l myline,a0
000225B8 <AmiBlitz3.ab3@3961>  BRA 'inc2
000225BE <AmiBlitz3.ab3@3964>   TST.w ininclude
000225C2 <AmiBlitz3.ab3@3965>   BEQ 'inc
000225C8 <AmiBlitz3.ab3@3966>   MOVE.l includesourceline,a0
000225CC <AmiBlitz3.ab3@3967>  BRA 'inc2
000225D2 <AmiBlitz3.ab3@3970>   MOVE.l sourceline,a0
000225D6 <AmiBlitz3.ab3@3971>   LEA 9(a0),a0
000225D8 <AmiBlitz3.ab3@3974>   MOVE.l d1,d2
000225DA <AmiBlitz3.ab3@3975>   MOVE.l A5,D1
000225DC <AmiBlitz3.ab3@3976>   SUB.l a0,D1
000225E2 <AmiBlitz3.ab3@3977>   ADD.l #9,d1
000225E6 <AmiBlitz3.ab3@3978>   BSR.w JUMP_writeword
000225EC <AmiBlitz3.ab3@3979>   CMP.l #9,d1
000225F0 <AmiBlitz3.ab3@3980>   BEQ 'pos1
000225F6 <AmiBlitz3.ab3@3981>   TST.w dontwrite
000225FA <AmiBlitz3.ab3@3982>   BNE 'nopad
00022600 <AmiBlitz3.ab3@3983>   MOVE.l lastsourceline,d1
00022604 <AmiBlitz3.ab3@3984>   MOVE.l d1,-6(a4)
00022608 <AmiBlitz3.ab3@3985>  BRA 'nopad
0002260E <AmiBlitz3.ab3@3988>   MOVE.l d2,lastsourceline
00022618 <AmiBlitz3.ab3@3989>    MOVE.l destpointer,lastdestpointer
0002261A <AmiBlitz3.ab3@3990>    MOVEQ #0,d1
00022620 <AmiBlitz3.ab3@3991>   MOVE.l data1,d2
00022626 <AmiBlitz3.ab3@3992>   SUB.l destbufferstart,d2
0002262C <AmiBlitz3.ab3@3993>   JSR writedatalong
00022632 <AmiBlitz3.ab3@3994>   TST.w dontwrite
00022636 <AmiBlitz3.ab3@3995>   BNE 'no2
0002263C <AmiBlitz3.ab3@3996>   JSR addhunkoffset
00022642 <AmiBlitz3.ab3@3999>   MOVE.l data1,d2
00022648 <AmiBlitz3.ab3@4000>   SUB.l destbufferstart,d2
0002264E <AmiBlitz3.ab3@4001>   JSR writedatalong
00022654 <AmiBlitz3.ab3@4002>   TST.w dontwrite
00022658 <AmiBlitz3.ab3@4003>   BNE 'no
0002265E <AmiBlitz3.ab3@4004>   JSR addhunkoffset
00022664 <AmiBlitz3.ab3@4005>   MOVE.l lastwritedat,a1
0002266A <AmiBlitz3.ab3@4006>   CMP.l #0,a1
0002266E <AmiBlitz3.ab3@4007>   BEQ 'no
00022670 <AmiBlitz3.ab3@4008>   MOVE.l d3,(a1)
00022678 <AmiBlitz3.ab3@4009>   MOVE.l prevwritedat,4(a1)
00022682 <AmiBlitz3.ab3@4010>   MOVE.l lastwritedat,prevwritedat
00022688 <AmiBlitz3.ab3@4013>   MOVE.l d3,lastwritedat
0002268A <AmiBlitz3.ab3@4014>   MOVEQ #4,d1
0002268E <AmiBlitz3.ab3@4015>   BSR pokedata1b
00022690 <AmiBlitz3.ab3@4018>   MOVE.b (a0)+,d1
00022694 <AmiBlitz3.ab3@4019>   BEQ 'done
00022698 <AmiBlitz3.ab3@4020>   BSR pokedata1b
0002269C <AmiBlitz3.ab3@4021>  BRA 'loop
0002269E <AmiBlitz3.ab3@4024>   MOVEQ #0,d1
000226A2 <AmiBlitz3.ab3@4025>   BSR pokedata1b
000226A8 <AmiBlitz3.ab3@4026>   MOVE.l data1,d1
000226AC <AmiBlitz3.ab3@4027>   BTST #0,d1
000226B0 <AmiBlitz3.ab3@4028>   BEQ 'nopad
000226B2 <AmiBlitz3.ab3@4029>   MOVEQ #0,d1
000226B6 <AmiBlitz3.ab3@4030>   BSR pokedata1b
000226BA <AmiBlitz3.ab3@4033>   MOVEM.l (a7)+,a0-a1/d2/d3
000226BE <AmiBlitz3.ab3@4034>  BRA 'noinc2
000226C4 <AmiBlitz3.ab3@4038>   MOVE.l sourceline,D1
000226CA <AmiBlitz3.ab3@4039>   JSR writelong
000226CC <AmiBlitz3.ab3@4040>   MOVE.l A5,D1
000226D2 <AmiBlitz3.ab3@4041>   SUB.l sourceline,D1
000226D8 <AmiBlitz3.ab3@4042>   JSR writeword
000226DA <AmiBlitz3.ab3@4045>   MOVEQ.l #$00,D1
000226E0 <AmiBlitz3.ab3@4046>   JSR writeword          ;next cont goes here!                                  ; was: BSR.w writeword
000226E4 <AmiBlitz3.ab3@4048>   MOVEM.l (A7)+,D0-D1
000226E6 <AmiBlitz3.ab3@4051> RTS
000226EC <AmiBlitz3.ab3@4055>   TST.b debugmode                                          ;extern debug
000226F0 <AmiBlitz3.ab3@4056>    BEQ.b 'rts
000226F6 <AmiBlitz3.ab3@4057>   TST.b dirmode
000226FA <AmiBlitz3.ab3@4058>   BNE 'rts
00022704 <AmiBlitz3.ab3@4066>   MOVE.w d_nomemleft,dontwrite
0002270E <AmiBlitz3.ab3@4067>   MOVE.l d_bigpc,bigpc
00022718 <AmiBlitz3.ab3@4068>   MOVE.l d_pc,destpointer
00022722 <AmiBlitz3.ab3@4069>   MOVE.l cont_pc2,cont_pc
00022724 <AmiBlitz3.ab3@4072> RTS
0002272E <AmiBlitz3.ab3@4077>   MOVE.l #forthstack,forthsp
00022738 <AmiBlitz3.ab3@4078>   MOVE.l #precstack,precsp
0002273E <AmiBlitz3.ab3@4079>   CLR.w regnum
00022744 <AmiBlitz3.ab3@4080>   CLR.w nonew
0002274A <AmiBlitz3.ab3@4081>   CLR.w sbasegot
00022754 <AmiBlitz3.ab3@4082>   MOVE.w varcodelen,oldvcodelen
0002275A <AmiBlitz3.ab3@4083>   CLR.w varcodelen
00022762 <AmiBlitz3.ab3@4084>   MOVE.w #-1,lasta6
00022764 <AmiBlitz3.ab3@4085> RTS
0002276A <AmiBlitz3.ab3@4089>   TST.w linemode
0002276E <AmiBlitz3.ab3@4090>   BMI.b 'skip
00022772 <AmiBlitz3.ab3@4091>   BSR.w undodebug
00022778 <AmiBlitz3.ab3@4092>   MOVE.w linemode,D1
0002277A <AmiBlitz3.ab3@4093>   ADDQ.w #4,A7
0002277C <AmiBlitz3.ab3@4094>   LSL.w #2,D1
00022782 <AmiBlitz3.ab3@4095>   LEA modetable,A0
00022786 <AmiBlitz3.ab3@4096>   MOVEA.l $0(A0,D1.W),A0
0002278A <AmiBlitz3.ab3@4097>   BSR.w reget
0002278C <AmiBlitz3.ab3@4098>  JMP (A0)                                                   ;jumptokenroutine
0002278E <AmiBlitz3.ab3@4101> RTS
00022796 <AmiBlitz3.ab3@4109>   MOVE.w #0,leaa0a0+2
0002279C <AmiBlitz3.ab3@4110>   CLR.b nowdeclare
000227A2 <AmiBlitz3.ab3@4111>   CLR.b notypecheck
000227A8 <AmiBlitz3.ab3@4112>   CLR.l lasttoken
000227AE <AmiBlitz3.ab3@4113>   CLR.b doimmediate
000227B4 <AmiBlitz3.ab3@4114>   CLR.w vartype
000227BA <AmiBlitz3.ab3@4115>   CLR.w regnumfunc
000227C0 <AmiBlitz3.ab3@4116>   CLR.b optistring
000227C6 <AmiBlitz3.ab3@4117>   CLR.b iniffcommand
000227CC <AmiBlitz3.ab3@4118>   CLR.w instringon  ; new
000227D2 <AmiBlitz3.ab3@4119>   CLR.b funccall
000227D8 <AmiBlitz3.ab3@4120>   CLR.l currentfunccall
000227DE <AmiBlitz3.ab3@4121>   CLR.l leftsidetype
000227E4 <AmiBlitz3.ab3@4122>   CLR.l rightsidetype
000227EA <AmiBlitz3.ab3@4123>   CLR.w leftsideflagmask
000227F0 <AmiBlitz3.ab3@4124>   CLR.w rightsideflagmask
000227F6 <AmiBlitz3.ab3@4125>   CLR.b peekaddrsize
000227FC <AmiBlitz3.ab3@4126>   CLR.b blitzparloop
00022802 <AmiBlitz3.ab3@4127>   CLR.b funcparloop
00022808 <AmiBlitz3.ab3@4128>   CLR.w parnum           ;7.2014
0002280E <AmiBlitz3.ab3@4129>   TST.b debugmode
00022812 <AmiBlitz3.ab3@4130>    BEQ 'fpu
0002281C <AmiBlitz3.ab3@4136>   MOVE.b fpu,iee
00022820 <AmiBlitz3.ab3@4137>   MOVE.w stopit(PC),D0
00022824 <AmiBlitz3.ab3@4138>   BNE 'chkstop_chkb
00022828 <AmiBlitz3.ab3@4140>   BSR.w chkstop                                          ; message here
0002282E <AmiBlitz3.ab3@4144>   SUBQ.w #1,stopit
00022832 <AmiBlitz3.ab3@4148>   BSR.w findmacro                                          ;macro
00022838 <AmiBlitz3.ab3@4210>   TST.b debugmode
0002283C <AmiBlitz3.ab3@4211>    BEQ.s 'l10
00022842 <AmiBlitz3.ab3@4212>   TST.b exdebug
00022846 <AmiBlitz3.ab3@4213>   BEQ 'l10a
00022848 <AmiBlitz3.ab3@4214>   MOVE.w (a5),d0
0002284C <AmiBlitz3.ab3@4215>   CMP.w #$8025,d0
00022850 <AmiBlitz3.ab3@4216>    BEQ 'l10
00022854 <AmiBlitz3.ab3@4219>   BSR.w debugstuffa                                         ;insert runtimecode debugcode
00022858 <AmiBlitz3.ab3@4223>   BSR.w get1bytemain                                       ;gettokenmain
0002285C <AmiBlitz3.ab3@4224>    BEQ.w undodebug
00022860 <AmiBlitz3.ab3@4225>   CMP.w #$002b,d0                                            ;check for + cast sign
00022864 <AmiBlitz3.ab3@4226>     BNE 'lb2
00022868 <AmiBlitz3.ab3@4227>     BSR.w get1bytemain
00022870 <AmiBlitz3.ab3@4228>     MOVE.b #1,notypecheck
0002287A <AmiBlitz3.ab3@4239>   MOVE.l #forthstack,forthsp
00022884 <AmiBlitz3.ab3@4240>   MOVE.l #precstack,precsp
0002288A <AmiBlitz3.ab3@4241>   CLR.w regnum
00022890 <AmiBlitz3.ab3@4242>   CLR.w nonew
00022896 <AmiBlitz3.ab3@4243>   CLR.w sbasegot
000228A0 <AmiBlitz3.ab3@4244>   MOVE.w varcodelen,oldvcodelen
000228A6 <AmiBlitz3.ab3@4246>   CLR.w varcodelen
000228AE <AmiBlitz3.ab3@4247>   MOVE.w #$FFFF,lasta6
000228B2 <AmiBlitz3.ab3@4250>   BSR.w smode
000228B4 <AmiBlitz3.ab3@4253>   TST.w D0                 ; was behind cmp ... and befor handleascii in org source
000228B8 <AmiBlitz3.ab3@4254>   BMI.w get_tokencode      ; "
000228BC <AmiBlitz3.ab3@4256>   CMP.w #$2E,D0            ;'.'
000228C0 <AmiBlitz3.ab3@4257>    BEQ.w handlemouse                                         ;shortlist
000228C4 <AmiBlitz3.ab3@4258>   CMP.w #"#",D0
000228C8 <AmiBlitz3.ab3@4259>    BEQ.w handleconst                                         ;constant found
000228CC <AmiBlitz3.ab3@4260>   CMP.w #$27,D0            ;'''  ; was #loclabch
000228D0 <AmiBlitz3.ab3@4261>    BEQ.w handlelocal                                            ;local label
000228D6 <AmiBlitz3.ab3@4264>   MOVE.l A5,letstart
000228DC <AmiBlitz3.ab3@4265>   JSR getparameter
000228E0 <AmiBlitz3.ab3@4266>   BSR.w reget
000228E4 <AmiBlitz3.ab3@4267>    BEQ.w handlelabel                                         ;label found
000228E8 <AmiBlitz3.ab3@4268>   CMP.w #$7B,D0         ;'{'
000228EC <AmiBlitz3.ab3@4269>    BEQ.w handleproc
000228EE <AmiBlitz3.ab3@4271>   TST.w d0
000228F2 <AmiBlitz3.ab3@4272>    BPL 'll1
000228F8 <AmiBlitz3.ab3@4273>   TST.b newsyntax
000228FC <AmiBlitz3.ab3@4274>    BEQ 'll1
00022902 <AmiBlitz3.ab3@4275>   LEA allowtab,a0
00022904 <AmiBlitz3.ab3@4276>   MOVEQ #0,d1
00022906 <AmiBlitz3.ab3@4277>   MOVE.b d0,d1
0002290A <AmiBlitz3.ab3@4278>   TST.b 0(a0,d1.w)
0002290E <AmiBlitz3.ab3@4279>    BNE 'll1
00022910 <AmiBlitz3.ab3@4280>   SUBQ.l #2,a5
00022918 <AmiBlitz3.ab3@4281>   MOVE.w #":",lastchar                                     ;no doublepoint
0002291C <AmiBlitz3.ab3@4282>  BRA handlelabel
00022924 <AmiBlitz3.ab3@4285>   CMP.l #"equ ",-1(a5)
00022928 <AmiBlitz3.ab3@4286>    BEQ 'll4
00022930 <AmiBlitz3.ab3@4287>   CMP.l #"EQU ",-1(a5)
00022934 <AmiBlitz3.ab3@4288>    BNE 'll2
00022936 <AmiBlitz3.ab3@4291>   ADDQ.l #2,a5
0002293A <AmiBlitz3.ab3@4292>   BSR.w findlabel2
0002293E <AmiBlitz3.ab3@4293>   BEQ.w 'lf1
00022942 <AmiBlitz3.ab3@4294>   BSR.w addlabelhash
0002294A <AmiBlitz3.ab3@4295>   MOVE.l #$1,$4(A2)
00022952 <AmiBlitz3.ab3@4298>   CMPI.l #$1,$4(A2)
00022956 <AmiBlitz3.ab3@4299>    BNE.w illconerr
0002295A <AmiBlitz3.ab3@4300>   BSR get1bytemain
0002295C <AmiBlitz3.ab3@4301>   MOVE.l A2,-(A7)
0002295E <AmiBlitz3.ab3@4312>   SUBQ.l #1,a5
00022960 <AmiBlitz3.ab3@4315>   SUBQ.l #1,a5
00022966 <AmiBlitz3.ab3@4316>   JSR evalconst2
00022968 <AmiBlitz3.ab3@4317>   MOVEA.l (A7)+,A2
0002296C <AmiBlitz3.ab3@4318>   MOVE.l D3,$8(A2)
0002296E <AmiBlitz3.ab3@4319>   RTS
00022972 <AmiBlitz3.ab3@4320>   BSR get1bytemain
0002297A <AmiBlitz3.ab3@4323>   CMP.l #"SET ",-1(a5)
0002297E <AmiBlitz3.ab3@4324>   BNE 'll3
00022982 <AmiBlitz3.ab3@4325>  BRA 'll4
00022988 <AmiBlitz3.ab3@4329> JMP dolet2
0002298C <AmiBlitz3.ab3@4333>   CMP.w #-$7FDE,D0    ; was #$8000+34,
00022990 <AmiBlitz3.ab3@4334>   BEQ.w get_tokencode
00022994 <AmiBlitz3.ab3@4335> BRA.w undodebug       ;!*!*!
00022998 <AmiBlitz3.ab3@4339>   BSR.w undodebug    ;!***!
0002299C <AmiBlitz3.ab3@4340>   BSR.w createlab
000229A0 <AmiBlitz3.ab3@4341> BRA.w handlelab2
000229A4 <AmiBlitz3.ab3@4345>   BSR.w get1bytemain
000229A8 <AmiBlitz3.ab3@4346>    BEQ.w handleeol     ;syntaxerr
000229AC <AmiBlitz3.ab3@4347>   CMP.w #"'",D0        ; was #loclabch
000229B0 <AmiBlitz3.ab3@4348>    BEQ.w handlelocal
000229B4 <AmiBlitz3.ab3@4349>    BSR.w makename2
000229B6 <AmiBlitz3.ab3@4351>    TST.w d0
000229BA <AmiBlitz3.ab3@4352>    BPL handlelabel
000229BC <AmiBlitz3.ab3@4353>    SUBQ.l #2,a5
000229C4 <AmiBlitz3.ab3@4354>    MOVE.w #":",lastchar
000229C8 <AmiBlitz3.ab3@4355> BRA handlelabel                                              ;????
000229CC <AmiBlitz3.ab3@4362>   BSR.w undodebug      ;!***!
000229D2 <AmiBlitz3.ab3@4364>   LEA ptr_parameterstore,A0
000229D8 <AmiBlitz3.ab3@4365>   LEA lastgloballabel,A1
000229DA <AmiBlitz3.ab3@4368>   MOVE.b (A0)+,(A1)+
000229DE <AmiBlitz3.ab3@4369>    BNE.w 'coplab
000229E2 <AmiBlitz3.ab3@4373>   BSR.w findlabel2
000229E6 <AmiBlitz3.ab3@4374>    BEQ.w 'found
000229EA <AmiBlitz3.ab3@4376>    BSR.w addlabelhash
000229EE <AmiBlitz3.ab3@4379>   CLR.l $4(A2)                ;no refs
000229F6 <AmiBlitz3.ab3@4380>   MOVE.l destpointer,$8(A2)   ;pc of label.
000229FE <AmiBlitz3.ab3@4385>   MOVE.w procnum,$10(A2)
00022A00 <AmiBlitz3.ab3@4386>  RTS
00022A04 <AmiBlitz3.ab3@4389>   MOVE.l $4(A2),D0
00022A08 <AmiBlitz3.ab3@4390>   BTST #$0,D0
00022A0C <AmiBlitz3.ab3@4391>    BNE.w illlaberr
00022A12 <AmiBlitz3.ab3@4393>   TST.w pass
00022A16 <AmiBlitz3.ab3@4396>   MOVE.l $8(A2),D0
00022A1A <AmiBlitz3.ab3@4397>    BNE.w duplaberr
00022A22 <AmiBlitz3.ab3@4398>   MOVE.w procnum,$10(A2)
00022A26 <AmiBlitz3.ab3@4402>   MOVEA.l $4(A2),A3      ;start of refs list
00022A2C <AmiBlitz3.ab3@4403>   MOVEA.l _execbase,A6
00022A30 <AmiBlitz3.ab3@4406>   CMPA.w #$0,A3
00022A34 <AmiBlitz3.ab3@4407>    BEQ.w 'done
00022A38 <AmiBlitz3.ab3@4409>     MOVE.l $4(A2),D1
00022A3C <AmiBlitz3.ab3@4410>     BTST #$0,D1
00022A40 <AmiBlitz3.ab3@4411>     BNE.w illlaberr
00022A44 <AmiBlitz3.ab3@4413>   MOVE.w $8(A3),D1
00022A48 <AmiBlitz3.ab3@4414>   CMP.w $10(A2),D1
00022A4C <AmiBlitz3.ab3@4415>    BEQ.w 'isok
00022A52 <AmiBlitz3.ab3@4417>    TST.b newsyntax
00022A56 <AmiBlitz3.ab3@4418>    BEQ 'l1
00022A5A <AmiBlitz3.ab3@4419>  BRA.w 'isok                                            ;label context out of range fix
00022A62 <AmiBlitz3.ab3@4425>   MOVE.w $A(A3),linenumat+2                                ;move 10(a3),linenumat org source
00022A66 <AmiBlitz3.ab3@4426>  BRA.w referr
00022A6C <AmiBlitz3.ab3@4429>   MOVE.w dontwrite,D1
00022A70 <AmiBlitz3.ab3@4430>    BNE.w 'isaskip
00022A74 <AmiBlitz3.ab3@4431>   MOVEA.l $4(A3),A1
00022A7A <AmiBlitz3.ab3@4432>   BTST #$0,$7(A3)
00022A7E <AmiBlitz3.ab3@4433>    BEQ.w 'pcref
00022A80 <AmiBlitz3.ab3@4437>   SUBQ.w #1,A1
00022A86 <AmiBlitz3.ab3@4438>   MOVE.l data2,(A1)
00022A8A <AmiBlitz3.ab3@4439>  BRA.w 'isaskip
00022A90 <AmiBlitz3.ab3@4442>   MOVE.l destpointer,(A1)
00022A92 <AmiBlitz3.ab3@4445>   MOVEA.l A3,A1
00022A94 <AmiBlitz3.ab3@4446>   MOVEA.l (A3),A3
00022A98 <AmiBlitz3.ab3@4447>   MOVE.l A3,$4(A2)     ;new first.
00022A9A <AmiBlitz3.ab3@4448>   MOVEQ.l #$0C+2,D0    ; was #12
00022AA0 <AmiBlitz3.ab3@4451>   MOVE.l mempool,a0
00022AA6 <AmiBlitz3.ab3@4452>   MOVEA.l _execbase,A6
00022AAA <AmiBlitz3.ab3@4453>   JSR _FreePooled(A6)
00022AAE <AmiBlitz3.ab3@4455>  BRA.w 'floop
00022AB8 <AmiBlitz3.ab3@4461>    MOVE.l #forthstack,forthsp
00022AC2 <AmiBlitz3.ab3@4462>   MOVE.l #precstack,precsp
00022AC6 <AmiBlitz3.ab3@4464>    BSR.w getparameter2
00022ACA <AmiBlitz3.ab3@4468>   BSR.w findlabel2
00022ACE <AmiBlitz3.ab3@4469>    BEQ.w 'cfound
00022AD2 <AmiBlitz3.ab3@4470>    BSR.w addlabelhash
00022ADA <AmiBlitz3.ab3@4471>   MOVE.l #$1,$4(A2)
00022ADE <AmiBlitz3.ab3@4472>  BRA.w 'cn
00022AE6 <AmiBlitz3.ab3@4475>   CMPI.l #$1,$4(A2)
00022AEA <AmiBlitz3.ab3@4476>    BNE.w illconerr
00022AEE <AmiBlitz3.ab3@4487>   CMP.w #$3D,D0         ;'='
00022AF2 <AmiBlitz3.ab3@4488>   BEQ.w 'asscon
00022AF4 <AmiBlitz3.ab3@4489>  RTS
00022AF6 <AmiBlitz3.ab3@4492>   MOVE.l A2,-(A7)
00022AFC <AmiBlitz3.ab3@4493>   JSR evalconst2
00022AFE <AmiBlitz3.ab3@4494>   MOVEA.l (A7)+,A2
00022B02 <AmiBlitz3.ab3@4495>   MOVE.l D3,$8(A2)                                         ;store constant
00022B0A <AmiBlitz3.ab3@4497>   CMP.w #$0a,lastchar
00022B0E <AmiBlitz3.ab3@4498>   BNE 'l1
00022B16 <AmiBlitz3.ab3@4499>   MOVE.w #":",lastchar                                     ;hack to read wizard include files
00022B18 <AmiBlitz3.ab3@4503> RTS
00022B1C <AmiBlitz3.ab3@4509>   BSR.w findproc                                           ;write statement call
00022B20 <AmiBlitz3.ab3@4511>   BEQ '_state
00022B26 <AmiBlitz3.ab3@4512>   TST.l unusedfunc
00022B2A <AmiBlitz3.ab3@4514>   BEQ noprocerr          ; was bne
00022B30 <AmiBlitz3.ab3@4517>   JSR gotoendsource
00022B34 <AmiBlitz3.ab3@4521>   TST.b $5(A2)
00022B3A <AmiBlitz3.ab3@4524>   MOVE.l a2,currentfunccall
00022B42 <AmiBlitz3.ab3@4525>   MOVE.b #1,funccall
00022B48 <AmiBlitz3.ab3@4526>   MOVE.b #1,isfunc(a2)
00022B4C <AmiBlitz3.ab3@4528>   MOVE.l $E(A2),-(A7)         ;pc of proc.
00022B4E <AmiBlitz3.ab3@4529>   MOVEQ.l #$00,D0
00022B52 <AmiBlitz3.ab3@4530>   MOVE.b $4(A2),D0
00022B58 <AmiBlitz3.ab3@4531>   MOVE.l d0,parnumtemp
00022B5C <AmiBlitz3.ab3@4532>   BEQ.w 'nopars
00022B60 <AmiBlitz3.ab3@4534>   TST.b $20(a2)                                            ;increase if morepar
00022B64 <AmiBlitz3.ab3@4535>   BNE 'no0par
00022B66 <AmiBlitz3.ab3@4536>   MOVE.l a5,a4
00022B6A <AmiBlitz3.ab3@4539>   CMP.b #$20,(a4)+
00022B6E <AmiBlitz3.ab3@4540>   BEQ 'l1
00022B74 <AmiBlitz3.ab3@4541>   CMP.b #"}",-1(a4)
00022B78 <AmiBlitz3.ab3@4542>   BNE  'no0par                                             ;statementcall pars
00022B7A <AmiBlitz3.ab3@4543>   MOVEQ #0,d0
00022B7E <AmiBlitz3.ab3@4547>   LEA $16(A2),A1            ;pointer to var desc list
00022B80 <AmiBlitz3.ab3@4551>   MOVE.l d1,-(a7)
00022B82 <AmiBlitz3.ab3@4552>   MOVE.b (a1),d2
00022B84 <AmiBlitz3.ab3@4553>   MOVE.l d0,d1
00022B88 <AmiBlitz3.ab3@4554>   CMP.w #4,d2
00022B8C <AmiBlitz3.ab3@4555>   BNE 'l1b
00022B92 <AmiBlitz3.ab3@4556>   ADD.l #$203c,d1
00022B98 <AmiBlitz3.ab3@4557>   JSR writeword
00022B9E <AmiBlitz3.ab3@4558>   MOVE.l #$ffff0000,d1
00022BA4 <AmiBlitz3.ab3@4559>   JSR writelong
00022BA8 <AmiBlitz3.ab3@4560>  BRA 'l2b
00022BAE <AmiBlitz3.ab3@4563>   TST.b fpu
00022BB2 <AmiBlitz3.ab3@4564>   BNE 'l1c
00022BB6 <AmiBlitz3.ab3@4565>   CMP.w #5,d2
00022BBA <AmiBlitz3.ab3@4566>   BNE 'l1c
00022BC0 <AmiBlitz3.ab3@4567>   ADD.l #$203c,d1
00022BC6 <AmiBlitz3.ab3@4568>   JSR writeword
00022BCC <AmiBlitz3.ab3@4569>   MOVE.l #$800000c1,d1
00022BD2 <AmiBlitz3.ab3@4570>   JSR writelong
00022BD6 <AmiBlitz3.ab3@4571>  BRA 'l2b
00022BDC <AmiBlitz3.ab3@4574>   ADD.l #$70ff,d1
00022BE2 <AmiBlitz3.ab3@4575>   JSR writeword
00022BE8 <AmiBlitz3.ab3@4576>   MOVE.l #$f23c5000,d1
00022BEA <AmiBlitz3.ab3@4577>   MOVE.l d0,d2
00022BEC <AmiBlitz3.ab3@4578>   ASR.l #2,d2
00022BEE <AmiBlitz3.ab3@4579>   ADD.l d2,d1
00022BF4 <AmiBlitz3.ab3@4580>   JSR writelong
00022BF8 <AmiBlitz3.ab3@4581>   MOVE.w #$ffff,d1
00022BFE <AmiBlitz3.ab3@4582>   JSR writeword
00022C00 <AmiBlitz3.ab3@4585>   MOVE.l (a7)+,d1
00022C02 <AmiBlitz3.ab3@4586>   ADDQ.l #1,a1
00022C08 <AmiBlitz3.ab3@4587>   ADD.l #$0200,d0
00022C0E <AmiBlitz3.ab3@4588>   CMP.l #$0e00,d0
00022C12 <AmiBlitz3.ab3@4589>    BEQ syntaxerr
00022C14 <AmiBlitz3.ab3@4590>   TST.b (a1)
00022C18 <AmiBlitz3.ab3@4591>    BNE 'again
00022C1C <AmiBlitz3.ab3@4592>  BRA 'nopars
00022C26 <AmiBlitz3.ab3@4595>   MOVE.w a2offset,a2offset2
00022C2A <AmiBlitz3.ab3@4596>   LEA $16(A2),A2
00022C30 <AmiBlitz3.ab3@4597>   MOVE.b funcparloop,-(a7)
00022C38 <AmiBlitz3.ab3@4598>   MOVE.b #1,funcparloop
00022C3E <AmiBlitz3.ab3@4599>   MOVE.b blitzparloop,-(a7)
00022C44 <AmiBlitz3.ab3@4600>   CLR.b blitzparloop
00022C48 <AmiBlitz3.ab3@4602>   BSR.w fetchpees2
00022C4E <AmiBlitz3.ab3@4604>   MOVE.b (a7)+,blitzparloop
00022C54 <AmiBlitz3.ab3@4605>   MOVE.b (a7)+,funcparloop
00022C58 <AmiBlitz3.ab3@4607>  BRA.w 'nopars3
00022C5C <AmiBlitz3.ab3@4611>   BSR.w get1bytemain
00022C60 <AmiBlitz3.ab3@4614>   CMP.w #$7D,D0        ;'}'
00022C64 <AmiBlitz3.ab3@4615>    BNE.w morepar_                                          ;syntax error morepar
00022C6A <AmiBlitz3.ab3@4616>    JSR chkstak
00022C6C <AmiBlitz3.ab3@4617>   MOVE.l (A7)+,D1
00022C72 <AmiBlitz3.ab3@4635>    JSR makefjsr
00022C78 <AmiBlitz3.ab3@4658>   CLR.b funccall
00022C7C <AmiBlitz3.ab3@4660> BRA.w get1bytemain
00022C82 <AmiBlitz3.ab3@4667>   MOVE.l d0,lasttoken
00022C86 <AmiBlitz3.ab3@4668>   CMP.w #$c09f,d0                                          ;hack to use getregd0 instead of getd0
00022C8A <AmiBlitz3.ab3@4669>   BNE 'l2
00022C8E <AmiBlitz3.ab3@4670>    MOVE.w #$dd05,d0
00022C92 <AmiBlitz3.ab3@4673>   CMP.w #$c0a0,d0                                          ;hack to use getregd0 instead of getd0
00022C96 <AmiBlitz3.ab3@4674>   BNE 'l3
00022C9A <AmiBlitz3.ab3@4675>    MOVE.w #$dd06,d0
00022C9E <AmiBlitz3.ab3@4679>   CMP.w #-$7FC4,D0               ; was #$8000+fnum,
00022CA2 <AmiBlitz3.ab3@4680>   BCS.w 'nono
00022CA6 <AmiBlitz3.ab3@4681>     CMP.w #-$7F4D,D0             ; was #$8000+tnum,
00022CAA <AmiBlitz3.ab3@4682>     BCC.w 'nono
00022CB2 <AmiBlitz3.ab3@4684>       BTST #$7,assemblercheck    ; was optreq2ga3+13                            ;inline Assembler checking
00022CB6 <AmiBlitz3.ab3@4685>       BNE.b 'asmok
00022CBC <AmiBlitz3.ab3@4687>         TST.b debugmode
00022CC0 <AmiBlitz3.ab3@4688>         BEQ.b 'l10
00022CCA <AmiBlitz3.ab3@4693>           MOVE.w d_nomemleft,dontwrite
00022CD4 <AmiBlitz3.ab3@4694>           MOVE.l d_bigpc,bigpc
00022CDE <AmiBlitz3.ab3@4695>           MOVE.l d_pc,destpointer
00022CE8 <AmiBlitz3.ab3@4696>           MOVE.l cont_pc2,cont_pc
00022CEC <AmiBlitz3.ab3@4704>  BRA.w asmit   ;assemble the bastard
00022CF0 <AmiBlitz3.ab3@4711>   BCLR #$F,D0
00022CF2 <AmiBlitz3.ab3@4712>   MOVE.w D0,D1
00022CF6 <AmiBlitz3.ab3@4713>   ANDI.w #$7F00,D1
00022CFA <AmiBlitz3.ab3@4714>   BNE.w handlelib
00022CFE <AmiBlitz3.ab3@4716>     CMP.w #$B3,D0        ; was #tnum,                                  ;intern Instructions
00022D02 <AmiBlitz3.ab3@4717>     BCS.w 'isokat
00022D06 <AmiBlitz3.ab3@4719>       SUBI.w #$77,D0     ; was #tnum-fnum,
00022D0A <AmiBlitz3.ab3@4720>       CMP.w #$4B,D0      ; was #fnum+15
00022D0E <AmiBlitz3.ab3@4721>       BEQ.w 'noerr
00022D12 <AmiBlitz3.ab3@4722>         CMP.w #$46,D0    ; was #fnum+10,
00022D16 <AmiBlitz3.ab3@4723>         BEQ.w 'noerr
00022D1A <AmiBlitz3.ab3@4724>  BRA.w 'doerr                                            ; change tokennum
00022D1E <AmiBlitz3.ab3@4727>     CMP.w #$38,D0        ;check for things which don't want
00022D22 <AmiBlitz3.ab3@4728>      BEQ.w 'noerr        ;error checking...
00022D26 <AmiBlitz3.ab3@4729>     CMP.w #$39,D0
00022D2A <AmiBlitz3.ab3@4730>      BEQ.w 'noerr
00022D2E <AmiBlitz3.ab3@4731>     CMP.w #$D,D0
00022D32 <AmiBlitz3.ab3@4732>      BEQ.w 'noerr
00022D36 <AmiBlitz3.ab3@4733>     CMP.w #$12,D0
00022D3A <AmiBlitz3.ab3@4734>      BEQ.w 'noerr
00022D3E <AmiBlitz3.ab3@4735>     CMP.w #$13,D0
00022D42 <AmiBlitz3.ab3@4736>      BEQ.w 'noerr
00022D46 <AmiBlitz3.ab3@4737>     CMP.w #$1A,D0
00022D4A <AmiBlitz3.ab3@4738>      BEQ.w 'noerr
00022D4E <AmiBlitz3.ab3@4739>     CMP.w #$2A,D0
00022D52 <AmiBlitz3.ab3@4740>      BHI.w 'doerr
00022D56 <AmiBlitz3.ab3@4741>     CMP.w #$23,D0
00022D5A <AmiBlitz3.ab3@4742>      BCS.b 'doerr
00022D5E <AmiBlitz3.ab3@4745>   BSR.w undodebug
00022D60 <AmiBlitz3.ab3@4748>   SUBQ.w #1,D0
00022D62 <AmiBlitz3.ab3@4749>   LSL.w #2,D0
00022D68 <AmiBlitz3.ab3@4759>   LEA instructionbase,A0
00022D6C <AmiBlitz3.ab3@4760>   MOVEA.l $0(A0,D0.W),A0
00022D6E <AmiBlitz3.ab3@4761>   MOVE.l A0,-(A7)
00022D72 <AmiBlitz3.ab3@4762> BRA.w get1bytemain
00022D74 <AmiBlitz3.ab3@4768>   MOVE.w D0,D1
00022D78 <AmiBlitz3.ab3@4769>    BSR.w searchinstr    ;toke stuff in a3
00022D7E <AmiBlitz3.ab3@4771>    TST.b newmode
00022D82 <AmiBlitz3.ab3@4772>    BNE compile_term
00022D88 <AmiBlitz3.ab3@4774>   BTST #$2,$1(A3)                                          ;a3 = pointer to instr ;toke stuff in a3
00022D8C <AmiBlitz3.ab3@4775>    BNE.w stamigalib
00022D92 <AmiBlitz3.ab3@4776>   BTST #$0,$1(A3)
00022D96 <AmiBlitz3.ab3@4777>    BEQ.w needreturn_                                       ;syntax err need return   ;check it's a statement
00022D9A <AmiBlitz3.ab3@4779>    BSR.w sizespec                                         ;does it need a size specifier?
00022D9E <AmiBlitz3.ab3@4780>    BSR.w countpees
00022DA4 <AmiBlitz3.ab3@4786>   MOVE.w numreps,-(A7)
00022DAA <AmiBlitz3.ab3@4787>   MOVE.w userp,-(A7)
00022DB0 <AmiBlitz3.ab3@4788>   MOVE.w a2offset,-(A7)
00022DB2 <AmiBlitz3.ab3@4789>   MOVE.l A2,-(A7)                                          ;recurs.
00022DBC <AmiBlitz3.ab3@4790>   MOVE.w convsize,userp
00022DC0 <AmiBlitz3.ab3@4791>   LEA $6(A3),A1
00022DC2 <AmiBlitz3.ab3@4796>    MOVE.w (A1),D2
00022DC6 <AmiBlitz3.ab3@4797>    BMI.w 'SERR                                              ;statement syntax error
00022DCA <AmiBlitz3.ab3@4798>   ANDI.w #$FF,D2
00022DCC <AmiBlitz3.ab3@4799>   CMP.w D2,D1
00022DD0 <AmiBlitz3.ab3@4800>    BEQ.w 'found
00022DD4 <AmiBlitz3.ab3@4801>    BCS.w 'next
00022DD6 <AmiBlitz3.ab3@4802>   MOVE.b (A1),D3
00022DDA <AmiBlitz3.ab3@4803>   ANDI.w #$7,D3
00022DDE <AmiBlitz3.ab3@4804>    BEQ.w 'next
00022DE0 <AmiBlitz3.ab3@4805>   MOVE.w D2,D4
00022DE2 <AmiBlitz3.ab3@4806>   SUB.w D3,D4
00022DE4 <AmiBlitz3.ab3@4807>   MOVEQ.l #$00,D5
00022DE6 <AmiBlitz3.ab3@4808>   MOVE.w D1,D5
00022DE8 <AmiBlitz3.ab3@4809>   SUB.w D4,D5
00022DEA <AmiBlitz3.ab3@4810>   DIVU D3,D5
00022DEC <AmiBlitz3.ab3@4811>   SWAP D5
00022DEE <AmiBlitz3.ab3@4812>   TST.w D5
00022DF2 <AmiBlitz3.ab3@4813>    BEQ.w 'found
00022DF4 <AmiBlitz3.ab3@4816>   ADDQ.w #2,A1
00022DF6 <AmiBlitz3.ab3@4817>   ADDA.w D2,A1
00022DFA <AmiBlitz3.ab3@4818>    BSR.w aligna1
00022DFE <AmiBlitz3.ab3@4819>    BSR.w skiplibreg
00022E02 <AmiBlitz3.ab3@4820>   LEA $C(A1),A1
00022E06 <AmiBlitz3.ab3@4821>  BRA.w 'loop
00022E08 <AmiBlitz3.ab3@4825>   MOVE.w (a3),d2
00022E0C <AmiBlitz3.ab3@4826>   BTST #1,d2
00022E10 <AmiBlitz3.ab3@4827>   BEQ statement_
00022E14 <AmiBlitz3.ab3@4828>   CMP.w #1,d1
00022E18 <AmiBlitz3.ab3@4829>   BEQ statement_
00022E1C <AmiBlitz3.ab3@4832>   CMP.b #$20,(a5)+
00022E20 <AmiBlitz3.ab3@4833>   BEQ 'l2
00022E26 <AmiBlitz3.ab3@4834>   CMP.b #"(",-2(a5)
00022E2A <AmiBlitz3.ab3@4835>   BNE 'l1
00022E2E <AmiBlitz3.ab3@4836>  BRA parameter_
00022E32 <AmiBlitz3.ab3@4839>  BRA inbrackets_
00022E34 <AmiBlitz3.ab3@4843>   MOVE.b (A1),D2
00022E36 <AmiBlitz3.ab3@4844>   LSL.w #8,D2
00022E38 <AmiBlitz3.ab3@4845>   OR.w D2,D1
00022E3A <AmiBlitz3.ab3@4846>   MOVE.l A1,-(A7)
00022E40 <AmiBlitz3.ab3@4847>   CLR.w a2offset
00022E42 <AmiBlitz3.ab3@4848>   TST.w D1
00022E46 <AmiBlitz3.ab3@4849>    BEQ.w 'nopees
00022E4A <AmiBlitz3.ab3@4850>   LEA $2(A1),A2
00022E50 <AmiBlitz3.ab3@4852>   MOVE.l lasttoken,-(a7)
00022E56 <AmiBlitz3.ab3@4853>   CLR.l lasttoken
00022E5A <AmiBlitz3.ab3@4855>   BSR.w fetchlibps
00022E60 <AmiBlitz3.ab3@4857>   MOVE.l (a7)+,lasttoken
00022E64 <AmiBlitz3.ab3@4859>  BRA.w 'skip
00022E68 <AmiBlitz3.ab3@4862>   BSR.w get1bytemain
00022E6A <AmiBlitz3.ab3@4865>   MOVEA.l (A7)+,A1
00022E6C <AmiBlitz3.ab3@4866>   MOVEA.l (A7)+,A2
00022E72 <AmiBlitz3.ab3@4867>   MOVE.w a2offset,D1
00022E76 <AmiBlitz3.ab3@4868>    BEQ.w 'skip2
00022E7C <AmiBlitz3.ab3@4869>   MOVE.w D1,preplibst+2
00022E82 <AmiBlitz3.ab3@4870>   MOVE.l preplibst,D1
00022E88 <AmiBlitz3.ab3@4871>    JSR writelong                                           ;write array offset stack correct
00022E92 <AmiBlitz3.ab3@4872>   MOVE.w numreps,movenumrep+2
00022E96 <AmiBlitz3.ab3@4873>    BEQ.w 'skip2
00022E9C <AmiBlitz3.ab3@4874>   MOVE.l movenumrep,D1
00022EA2 <AmiBlitz3.ab3@4875>    JSR writelong
00022EA8 <AmiBlitz3.ab3@4879>   JSR userjsr
00022EAE <AmiBlitz3.ab3@4884>   MOVE.w a2offset,D1
00022EB2 <AmiBlitz3.ab3@4885>    BEQ.w 'skip3
00022EB6 <AmiBlitz3.ab3@4886>   CMP.w #$8,D1
00022EBA <AmiBlitz3.ab3@4887>    BHI.w 'skip4
00022EBE <AmiBlitz3.ab3@4888>   ANDI.w #$7,D1
00022EC0 <AmiBlitz3.ab3@4889>   LSL.w #8,D1
00022EC2 <AmiBlitz3.ab3@4890>   LSL.w #1,D1
00022EC6 <AmiBlitz3.ab3@4891>   ORI.w #$504F,D1       ;addq #x,a7
00022ECC <AmiBlitz3.ab3@4892>   JSR writeword
00022ED0 <AmiBlitz3.ab3@4893>  BRA.w 'skip3
00022ED6 <AmiBlitz3.ab3@4896>   MOVE.w D1,fixlibst+2
00022EDC <AmiBlitz3.ab3@4897>   MOVE.l fixlibst,D1
00022EE2 <AmiBlitz3.ab3@4898>   JSR writelong
00022EE8 <AmiBlitz3.ab3@4901>   MOVE.w (A7)+,a2offset
00022EEE <AmiBlitz3.ab3@4902>   MOVE.w (A7)+,userp
00022EF4 <AmiBlitz3.ab3@4903>   MOVE.w (A7)+,numreps
00022EF8 <AmiBlitz3.ab3@4904> BRA.w reget
00022EFC <AmiBlitz3.ab3@4908>   MOVEM.l A2-A3,-(A7)
00022F02 <AmiBlitz3.ab3@4910>   CLR.b doublepeek
00022F08 <AmiBlitz3.ab3@4912>   MOVE.l A5,lastsourcepos
00022F0C <AmiBlitz3.ab3@4913>    BSR.w getchar          ;','
00022F10 <AmiBlitz3.ab3@4914>   CMP.w #$2E,D0
00022F14 <AmiBlitz3.ab3@4915>    BEQ.w 'ok1
00022F1A <AmiBlitz3.ab3@4916>   MOVEA.l defaulttype,A2
00022F1E <AmiBlitz3.ab3@4917>   CMP.w #$24,D0           ;'$'
00022F22 <AmiBlitz3.ab3@4918>    BNE.w 'none
00022F24 <AmiBlitz3.ab3@4919>   MOVEQ.l #$07,D1
00022F28 <AmiBlitz3.ab3@4920>  BRA.w 'skip
00022F2C <AmiBlitz3.ab3@4923>   BSR.w getparameter2
00022F30 <AmiBlitz3.ab3@4924>   BEQ.w syntaxerr
00022F36 <AmiBlitz3.ab3@4925>   LEA newtypebase,A2
00022F3A <AmiBlitz3.ab3@4926>   BSR.w findtype
00022F3E <AmiBlitz3.ab3@4927>   BNE.w notypeerr
00022F48 <AmiBlitz3.ab3@4932>   MOVE.w oldqflag,instringon
00022F4E <AmiBlitz3.ab3@4933>   MOVEA.l lastsourcepos,A5
00022F52 <AmiBlitz3.ab3@4941>   MOVE.w $6(A2),D1
00022F58 <AmiBlitz3.ab3@4943>   CMP.w #8,8(a2)
00022F5C <AmiBlitz3.ab3@4944>   BNE 'l1
00022F64 <AmiBlitz3.ab3@4945>   MOVE.b #1,doublepeek
00022F6A <AmiBlitz3.ab3@4950>   MOVE.w D1,convsize
00022F6E <AmiBlitz3.ab3@4951>   MOVEM.l (A7)+,A2-A3
00022F70 <AmiBlitz3.ab3@4952> RTS
00022F76 <AmiBlitz3.ab3@4957>   BTST #$3,$1(A3)
00022F7A <AmiBlitz3.ab3@4958>   BEQ.w 'skip
00022F7E <AmiBlitz3.ab3@4959>   BSR.w sizespec2                                         ;read peek/poke size
00022F82 <AmiBlitz3.ab3@4961>   ORI.w #$7000,D1
00022F88 <AmiBlitz3.ab3@4962>   JSR writeword
00022F8E <AmiBlitz3.ab3@4963>   ADDQ.w #1,regnum
00022F90 <AmiBlitz3.ab3@4966> RTS
00022F92 <AmiBlitz3.ab3@4973>             Dc.b $10,$12                                   ;MOVE.B  (A2),D0
00022F94 <AmiBlitz3.ab3@4974>             Dc.b $14,$91                                   ;MOVE.B  (A1),(A2)
00022F96 <AmiBlitz3.ab3@4975>             Dc.b $12,$80                                   ;MOVE.B  D0,(A1)
00022F98 <AmiBlitz3.ab3@4979> swapw:      Dc.b $30,$12                                   ;MOVE.W  (A2),D0
00022F9A <AmiBlitz3.ab3@4980>             Dc.b $34,$91                                   ;MOVE.W  (A1),(A2)
00022F9C <AmiBlitz3.ab3@4981>             Dc.b $32,$80                                   ;MOVE.W  D0,(A1)
00022F9E <AmiBlitz3.ab3@4985> swapl:      Dc.b $20,$12                                   ;MOVE.L  (A2),D0
00022FA0 <AmiBlitz3.ab3@4986>             Dc.b $24,$91                                   ;MOVE.L  (A1),(A2)
00022FA2 <AmiBlitz3.ab3@4987>             Dc.b $22,$80                                   ;MOVE.L  D0,(A1)
00022FA4 <AmiBlitz3.ab3@4991> pulla1:     Dc.b $22,$5F                                   ;MOVEA.L (A7)+,A1
00022FA6 <AmiBlitz3.ab3@4994> srctype:    Ds.w 1
00022FAA <AmiBlitz3.ab3@4999>   BSR.w excget
00022FAE <AmiBlitz3.ab3@5000>   CMP.w #$2C,D0     ;','
00022FB2 <AmiBlitz3.ab3@5001>    BNE.w syntaxerr
00022FB8 <AmiBlitz3.ab3@5002>   MOVE.b D2,srctype
00022FBE <AmiBlitz3.ab3@5003>   MOVE.w pusha2,D1
00022FC4 <AmiBlitz3.ab3@5004>   JSR writeword
00022FC8 <AmiBlitz3.ab3@5005>   BSR.w get1bytemain
00022FCC <AmiBlitz3.ab3@5006>   BSR.w excget
00022FD2 <AmiBlitz3.ab3@5007>   CMP.b srctype,D2
00022FD6 <AmiBlitz3.ab3@5008>    BNE.w excerr2
00022FDC <AmiBlitz3.ab3@5009>   MOVE.w pulla1,D1
00022FE2 <AmiBlitz3.ab3@5010>    JSR writeword
00022FE6 <AmiBlitz3.ab3@5012>   CMP.b #$2,D2
00022FEA <AmiBlitz3.ab3@5013>    BCS.w 'byte
00022FEE <AmiBlitz3.ab3@5014>    BEQ.w 'word
00022FF2 <AmiBlitz3.ab3@5015>   LEA swapl(PC),A0
00022FF6 <AmiBlitz3.ab3@5016>   LEA swaplf(PC),A1
00022FFC <AmiBlitz3.ab3@5017>  JMP pokecode
00023000 <AmiBlitz3.ab3@5020>   LEA swapw(PC),A0
00023004 <AmiBlitz3.ab3@5021>   LEA swapwf(PC),A1
0002300A <AmiBlitz3.ab3@5022>  JMP pokecode
0002300E <AmiBlitz3.ab3@5025>   LEA swapb(PC),A0
00023012 <AmiBlitz3.ab3@5026>   LEA swapbf(PC),A1
00023018 <AmiBlitz3.ab3@5027> JMP pokecode
0002301E <AmiBlitz3.ab3@5031>   JSR getparameter
00023022 <AmiBlitz3.ab3@5032>   BSR.w fetchvars
00023028 <AmiBlitz3.ab3@5033>   JSR calcvar
0002302C <AmiBlitz3.ab3@5034>   BTST #$E,D2
00023030 <AmiBlitz3.ab3@5035>    BEQ.w 'skip
00023034 <AmiBlitz3.ab3@5036>   MOVE.b #$4,D2
00023036 <AmiBlitz3.ab3@5039>   TST.b D2
0002303A <AmiBlitz3.ab3@5040>    BEQ.w excerr
0002303E <AmiBlitz3.ab3@5041>   BTST #$F,D2
00023042 <AmiBlitz3.ab3@5042>    BNE.w 'done
00023048 <AmiBlitz3.ab3@5043>   MOVE.w leaamp,D1
0002304E <AmiBlitz3.ab3@5044>    JSR pokewda5s
00023050 <AmiBlitz3.ab3@5045>   MOVE.w D3,D1
00023056 <AmiBlitz3.ab3@5046>  JMP writeword
00023058 <AmiBlitz3.ab3@5049> RTS
0002305E <AmiBlitz3.ab3@5059>   MOVE.l mempool,a0
00023064 <AmiBlitz3.ab3@5060>   MOVEA.l _execbase,A6
00023068 <AmiBlitz3.ab3@5061> JMP _AllocPooled(a6)
0002306C <AmiBlitz3.ab3@5066>   MOVE.w #$BF00,D1       ; was #wbstart
00023072 <AmiBlitz3.ab3@5067> JMP Atokejsr
00023076 <AmiBlitz3.ab3@5071>   CMP.w #-$7FFA,D0       ; was  #$8006
0002307A <AmiBlitz3.ab3@5072>    BEQ.w popreturn
0002307E <AmiBlitz3.ab3@5073>   CMP.w #-$7FEA,D0       ; was  #$8000+22,
00023082 <AmiBlitz3.ab3@5074>    BEQ.w popnext2
00023086 <AmiBlitz3.ab3@5075>   CMP.w #-$7FF2,D0       ; was  #$8000+14,
0002308A <AmiBlitz3.ab3@5076>    BEQ.w popselect2
0002308E <AmiBlitz3.ab3@5078>   CMP.w #-$7FF5,D0       ; was  #$8000+11
00023092 <AmiBlitz3.ab3@5079>    BEQ.w get1bytemain
00023096 <AmiBlitz3.ab3@5080>   CMP.w #-$7FF4,D0       ; was  #$8000+12
0002309A <AmiBlitz3.ab3@5081>    BEQ.w get1bytemain
0002309E <AmiBlitz3.ab3@5082>   CMP.w #-$7FEC,D0       ; was  #$8000+20
000230A2 <AmiBlitz3.ab3@5083>    BEQ.w get1bytemain
000230A6 <AmiBlitz3.ab3@5084>   CMP.w #-$7F45,D0       ; was  #$8000+tnum+8
000230AA <AmiBlitz3.ab3@5085>    BEQ.w get1bytemain
000230AE <AmiBlitz3.ab3@5086> BRA.w syntaxerr
000230B4 <AmiBlitz3.ab3@5090>   TST.b debugmode
000230B8 <AmiBlitz3.ab3@5091>    BEQ.w 'norerr
000230BC <AmiBlitz3.ab3@5092>   LEA 'rfix(PC),A0
000230C0 <AmiBlitz3.ab3@5093>   LEA 'rfixf(PC),A1
000230C6 <AmiBlitz3.ab3@5094>    JSR pokecode
000230CA <AmiBlitz3.ab3@5095>   MOVE.w #$C305,D1
000230D0 <AmiBlitz3.ab3@5096>    JSR Atokejsr
000230D4 <AmiBlitz3.ab3@5097>   MOVE.w 'rfix2(PC),D1
000230DA <AmiBlitz3.ab3@5099>    JSR writeword
000230DE <AmiBlitz3.ab3@5100>  BRA.w get1bytemain
000230E4 <AmiBlitz3.ab3@5103>   CMPI.w #$6753,$4(A7)                                     ;#"gS",4(A7)
000230E8 <AmiBlitz3.ab3@5104>   BEQ.w 'rfix2
000230EE <AmiBlitz3.ab3@5107>   JSR $20000                                               ;reass
000230F0 <AmiBlitz3.ab3@5110>   ADDQ.w #6,A7
000230F4 <AmiBlitz3.ab3@5113>   MOVE.w 'sfix(PC),D1
000230FA <AmiBlitz3.ab3@5114>   JSR writeword
000230FE <AmiBlitz3.ab3@5115> BRA.w get1bytemain
00023100 <AmiBlitz3.ab3@5120>   Dc.b $58,$4F                                             ;ADDQ.W  #4,A7
00023106 <AmiBlitz3.ab3@5125>   MOVE.l firstfor,D0
0002310A <AmiBlitz3.ab3@5126>    BEQ.w noforerr
0002310C <AmiBlitz3.ab3@5127>   MOVEA.l D0,A2
00023110 <AmiBlitz3.ab3@5128>    BSR.w get1bytemain
00023114 <AmiBlitz3.ab3@5129>   BSR.w popnext
0002311A <AmiBlitz3.ab3@5132>   TST.b debugmode
0002311E <AmiBlitz3.ab3@5133>    BEQ.w 'ner
00023124 <AmiBlitz3.ab3@5134>   MOVE.l nextfixw2,D1
0002312A <AmiBlitz3.ab3@5135>   CMPI.w #$3,$C(A2)
0002312E <AmiBlitz3.ab3@5136>    BCS.w 'writelong2
00023134 <AmiBlitz3.ab3@5137>   MOVE.l nextfixl2,D1
0002313A <AmiBlitz3.ab3@5140>   JMP  writelong
00023140 <AmiBlitz3.ab3@5143>   CMPI.w #$3,$C(A2)
00023144 <AmiBlitz3.ab3@5144>    BCS.w 'skip2
0002314A <AmiBlitz3.ab3@5145>   MOVE.l nextfixl,D1
00023150 <AmiBlitz3.ab3@5146>   JMP writelong
00023156 <AmiBlitz3.ab3@5149>   MOVE.w nextfixw,D1
0002315C <AmiBlitz3.ab3@5150> JMP writeword
00023160 <AmiBlitz3.ab3@5155>   MOVE.w $C(A2),D0
00023166 <AmiBlitz3.ab3@5156>   TST.b debugmode
0002316A <AmiBlitz3.ab3@5157>    BEQ.w 'norunerr
0002316E <AmiBlitz3.ab3@5158>   MOVE.w #$C306,D1
00023172 <AmiBlitz3.ab3@5159>   CMP.w #$3,D0
00023176 <AmiBlitz3.ab3@5160>    BCS.w 'oktc
00023178 <AmiBlitz3.ab3@5161>   ADDQ.w #1,D1
0002317A <AmiBlitz3.ab3@5164>   MOVE.l A2,-(A7)
00023180 <AmiBlitz3.ab3@5165>   JSR Atokejsr
00023182 <AmiBlitz3.ab3@5166>   MOVEA.l (A7)+,A2
00023184 <AmiBlitz3.ab3@5169> RTS
0002318A <AmiBlitz3.ab3@5173>   MOVE.l firstsel,D0
0002318E <AmiBlitz3.ab3@5174>    BEQ.w eselerr
00023190 <AmiBlitz3.ab3@5175>   MOVEA.l D0,A2
00023194 <AmiBlitz3.ab3@5176>    BSR.w get1bytemain
00023198 <AmiBlitz3.ab3@5179>   MOVE.w $C(A2),D2
0002319E <AmiBlitz3.ab3@5180>   TST.b debugmode
000231A2 <AmiBlitz3.ab3@5181>    BEQ.w 'norerr
000231A6 <AmiBlitz3.ab3@5182>   MOVE.w #$C313,D1
000231AA <AmiBlitz3.ab3@5183>   CMP.w #$3,D2
000231AE <AmiBlitz3.ab3@5184>    BCS.w 'chkit
000231B0 <AmiBlitz3.ab3@5185>   ADDQ.w #1,D1
000231B6 <AmiBlitz3.ab3@5188>   JSR Atokejsr                                             ;make sure next thing on stack
000231B8 <AmiBlitz3.ab3@5192>   MOVEQ.l #$02,D1
000231BC <AmiBlitz3.ab3@5193>   CMP.w #$3,D2
000231C0 <AmiBlitz3.ab3@5194>    BCS.w 'doit
000231C2 <AmiBlitz3.ab3@5195>   MOVEQ.l #$04,D1
000231C6 <AmiBlitz3.ab3@5196>   CMP.w #$7,D2
000231CA <AmiBlitz3.ab3@5197>    BCS.w 'doit
000231D0 <AmiBlitz3.ab3@5198>   LEA endselstr,A0
000231D6 <AmiBlitz3.ab3@5199>   LEA endselstrf,A1
000231DC <AmiBlitz3.ab3@5200>   TST.b debugmode
000231E0 <AmiBlitz3.ab3@5201>    BEQ.w 'norerr3
000231E6 <AmiBlitz3.ab3@5202>   LEA endselstrf2,A1
000231EC <AmiBlitz3.ab3@5205>   JSR pokecode
000231F0 <AmiBlitz3.ab3@5206>   MOVE.w #$C003,D1                                         ;global freemem
000231F6 <AmiBlitz3.ab3@5207>  JMP Atokejsr
000231FC <AmiBlitz3.ab3@5210>   TST.b debugmode
00023200 <AmiBlitz3.ab3@5211>    BEQ.w 'norerr2
00023202 <AmiBlitz3.ab3@5212>   ADDQ.w #2,D1                                             ;for the "sE"
00023204 <AmiBlitz3.ab3@5215>   LSL.w #8,D1
00023206 <AmiBlitz3.ab3@5216>   LSL.w #1,D1
0002320C <AmiBlitz3.ab3@5217>   OR.w endsel,D1
00023212 <AmiBlitz3.ab3@5218> JMP writeword
00023216 <AmiBlitz3.ab3@5221> firstrep:    Ds.l 1
0002321A <AmiBlitz3.ab3@5222> replineat:   Ds.l 1
00023220 <AmiBlitz3.ab3@5231>   CLR.l fp0addr
0002322A <AmiBlitz3.ab3@5232>   MOVE.l linenumat,replineat
0002322C <AmiBlitz3.ab3@5233>   MOVEQ.l #$08,D0
00023232 <AmiBlitz3.ab3@5234>   MOVEA.l _execbase,A6
00023238 <AmiBlitz3.ab3@5235>   MOVE.l mempool,a0
0002323C <AmiBlitz3.ab3@5236>   JSR _AllocPooled(a6)
0002323E <AmiBlitz3.ab3@5238>   MOVEA.l D0,A0
00023242 <AmiBlitz3.ab3@5239>   MOVE.l firstrep(PC),(A0)
00023248 <AmiBlitz3.ab3@5240>   MOVE.l A0,firstrep
00023250 <AmiBlitz3.ab3@5241>   MOVE.l destpointer,$4(A0)
00023252 <AmiBlitz3.ab3@5242> RTS
00023258 <AmiBlitz3.ab3@5245> str_temp:  Ds.w 3                                            ;infochk  ds.b 6 org source
0002325C <AmiBlitz3.ab3@5248>   LEA str_temp(PC),A1
0002325E <AmiBlitz3.ab3@5249>   CLR.w (A1)
00023262 <AmiBlitz3.ab3@5250>   CLR.l $2(A1)
00023264 <AmiBlitz3.ab3@5253>   MOVEQ.l #$04,D0
00023268 <AmiBlitz3.ab3@5256>     MOVE.b $1(A1),(A1)+
0002326C <AmiBlitz3.ab3@5257>   DBF D0,'loop
00023270 <AmiBlitz3.ab3@5262>   LEA str_temp(PC),A1
00023272 <AmiBlitz3.ab3@5263>   MOVE.b (A0),D0
00023276 <AmiBlitz3.ab3@5264>   ORI.b #$20,D0
0002327A <AmiBlitz3.ab3@5265>   MOVE.b D0,$5(A1)
0002327C <AmiBlitz3.ab3@5266>   TST.b (A0)+
00023280 <AmiBlitz3.ab3@5267>    BNE.w 'loop2
00023284 <AmiBlitz3.ab3@5268>   CMPI.w #$2E69,(A1)+                                      ;".i"
00023288 <AmiBlitz3.ab3@5269>    BNE.w 'no
0002328E <AmiBlitz3.ab3@5270>   CMPI.l #$6E666F20,(A1)                                   ;"nfo "
00023290 <AmiBlitz3.ab3@5273> RTS
00023294 <AmiBlitz3.ab3@5277>   BPL.w 'evaltoke
00023296 <AmiBlitz3.ab3@5278>   MOVE.w D0,D1
0002329A <AmiBlitz3.ab3@5279>   ANDI.w #$7F80,D1
0002329E <AmiBlitz3.ab3@5280>    BEQ.w tokeerr
000232A2 <AmiBlitz3.ab3@5281>   BCLR #$F,D0
000232A4 <AmiBlitz3.ab3@5282>   MOVE.w D0,D4                                             ;got toke number
000232A8 <AmiBlitz3.ab3@5283>   BSR.w get1bytemain
000232AC <AmiBlitz3.ab3@5284>  BRA.w 'gotnum
000232B2 <AmiBlitz3.ab3@5287>   JSR evalconst
000232B8 <AmiBlitz3.ab3@5288>   CMP.l #MaxWord,D3
000232BC <AmiBlitz3.ab3@5289>    BHI.w tokeerr
000232BE <AmiBlitz3.ab3@5290>   TST.w D6
000232C2 <AmiBlitz3.ab3@5291>    BNE.w tokeerr
000232C4 <AmiBlitz3.ab3@5292>   MOVE.w D3,D4
000232C6 <AmiBlitz3.ab3@5295>   MOVEQ.l #$00,D5
000232CA <AmiBlitz3.ab3@5296>   CMP.w #$2C,D0
000232CE <AmiBlitz3.ab3@5297>    BNE.w 'gotfrom
000232D0 <AmiBlitz3.ab3@5298>   MOVE.w D4,-(A7)
000232D6 <AmiBlitz3.ab3@5299>    JSR evalconst2
000232DC <AmiBlitz3.ab3@5300>   CMP.l #MaxWord,D3
000232E0 <AmiBlitz3.ab3@5301>    BHI.w tokeerr
000232E2 <AmiBlitz3.ab3@5302>   TST.w D6
000232E6 <AmiBlitz3.ab3@5303>    BNE.w tokeerr
000232E8 <AmiBlitz3.ab3@5304>   MOVE.w D3,D5
000232EA <AmiBlitz3.ab3@5305>   MOVE.w (A7)+,D4
000232EC <AmiBlitz3.ab3@5308> RTS                                                        ;d4=toke, d5=form
000232EE <AmiBlitz3.ab3@5312>   TST.w D0
000232F2 <AmiBlitz3.ab3@5313>    BSR.w gettokeps
000232F6 <AmiBlitz3.ab3@5314>   MOVE.w #$4EB9,D1
000232FC <AmiBlitz3.ab3@5315>   JSR writeword
00023300 <AmiBlitz3.ab3@5316>   BSR.w addoff
00023302 <AmiBlitz3.ab3@5317>   MOVE.w D5,D1
00023306 <AmiBlitz3.ab3@5318>   ORI.w #$8000,D1                                          ;Toke of Amiga type.
00023308 <AmiBlitz3.ab3@5319>   SWAP D1
0002330A <AmiBlitz3.ab3@5320>   MOVE.w D4,D1
00023310 <AmiBlitz3.ab3@5321> JMP writelong
00023312 <AmiBlitz3.ab3@5325>   TST.w D0
00023316 <AmiBlitz3.ab3@5326>    BSR.w gettokeps
0002331A <AmiBlitz3.ab3@5327>   MOVE.w #$4EB9,D1
00023320 <AmiBlitz3.ab3@5328>   JSR writeword
00023324 <AmiBlitz3.ab3@5329>   BSR.w addoff
00023326 <AmiBlitz3.ab3@5330>   MOVE.w D5,D1
0002332A <AmiBlitz3.ab3@5331>   ORI.w #$C000,D1                                          ;Toke of Blitz type.
0002332C <AmiBlitz3.ab3@5332>   SWAP D1
0002332E <AmiBlitz3.ab3@5333>   MOVE.w D4,D1
00023334 <AmiBlitz3.ab3@5334>   JMP writelong
0002333A <AmiBlitz3.ab3@5338>   JSR evalconst
00023340 <AmiBlitz3.ab3@5339>   CMP.l #$10000,D3
00023344 <AmiBlitz3.ab3@5340>    BCC.w tokeerr
00023346 <AmiBlitz3.ab3@5341>   MOVE.w D3,D1
0002334C <AmiBlitz3.ab3@5342> JMP Atokejsr
00023350 <AmiBlitz3.ab3@5346>   BSR.w gettokeps
00023354 <AmiBlitz3.ab3@5347>   MOVE.w #$4EB9,D1
0002335A <AmiBlitz3.ab3@5348>   JSR writeword
00023360 <AmiBlitz3.ab3@5349>   MOVE.l destpointer,D3
00023368 <AmiBlitz3.ab3@5350>   BTST #$7,blitzmode
0002336C <AmiBlitz3.ab3@5351>    BEQ.w 'inamiga
00023370 <AmiBlitz3.ab3@5352>   BSET #$E,D5
00023374 <AmiBlitz3.ab3@5355>   BSR.w maketjsr
00023378 <AmiBlitz3.ab3@5356>   BSR.w addoff
0002337E <AmiBlitz3.ab3@5357> JMP writelong
00023382 <AmiBlitz3.ab3@5361>   BEQ.w 'zero
00023384 <AmiBlitz3.ab3@5362>   MOVEQ.l #$02,D2                                          ;get a word
0002338A <AmiBlitz3.ab3@5364>   JSR bakeval
0002338E <AmiBlitz3.ab3@5365>   MOVE.w fvwait(PC),D1
00023392 <AmiBlitz3.ab3@5366>  BRA.w 'vcont
00023396 <AmiBlitz3.ab3@5369>   MOVE.w #$7000,D1                                         ;moveq #0,d0
0002339C <AmiBlitz3.ab3@5372>   JSR writeword
000233A0 <AmiBlitz3.ab3@5373>   MOVE.w #$C104,D1
000233A6 <AmiBlitz3.ab3@5374> JMP Atokejsr
000233A8 <AmiBlitz3.ab3@5378>   SUBQ.w #1,D0
000233AE <AmiBlitz3.ab3@5381>   Dc.w $3b7c,$ffff,0                                       ;move.w #$FFFF,$0(A5) ;noopt
000233B2 <AmiBlitz3.ab3@5384>   Dc.l $426d0001                                           ;clr.w $0(A5)
000233B6 <AmiBlitz3.ab3@5388>   MOVE.b debugmode(PC),D1
000233BA <AmiBlitz3.ab3@5389>   BEQ.b 'skip
000233BE <AmiBlitz3.ab3@5390>   MOVE.w #$D500,D1
000233C4 <AmiBlitz3.ab3@5391> JMP Atokejsr
000233C6 <AmiBlitz3.ab3@5394> RTS
000233CE <AmiBlitz3.ab3@5398>   BSET #$0,blitzmode
000233D6 <AmiBlitz3.ab3@5399>   BSET #$7,blitzmode
000233DA <AmiBlitz3.ab3@5400>   MOVE.w #$C200,D1
000233E0 <AmiBlitz3.ab3@5401>   JSR Atokejsr
000233E6 <AmiBlitz3.ab3@5402>   TST.b debugmode
000233EA <AmiBlitz3.ab3@5403>    BEQ.w 'done
000233EE <AmiBlitz3.ab3@5404>   MOVE.w cgoblitz(PC),D1
000233F4 <AmiBlitz3.ab3@5405>   JSR writeword
000233F6 <AmiBlitz3.ab3@5406>   MOVEQ.l #-$01,D1
000233FC <AmiBlitz3.ab3@5407>   JSR writeword
00023402 <AmiBlitz3.ab3@5408>   JSR getbbase
00023408 <AmiBlitz3.ab3@5409>   JSR writeword
0002340C <AmiBlitz3.ab3@5412> BRA.w debugmode_codelabel
00023410 <AmiBlitz3.ab3@5416>   MOVE.w #$C201,D1
00023414 <AmiBlitz3.ab3@5417> BRA.w do_AMIGA_toamode
00023418 <AmiBlitz3.ab3@5420>   MOVE.W  #$C202,D1
00023420 <AmiBlitz3.ab3@5423>   BSET #$0,blitzmode
00023428 <AmiBlitz3.ab3@5424>   BCLR #$7,blitzmode
0002342E <AmiBlitz3.ab3@5425>   JSR Atokejsr
00023434 <AmiBlitz3.ab3@5426>   TST.b debugmode
00023438 <AmiBlitz3.ab3@5427>    BEQ.w 'done
0002343C <AmiBlitz3.ab3@5428>   MOVE.w cgoamiga(PC),D1
00023442 <AmiBlitz3.ab3@5429>   JSR writeword
00023448 <AmiBlitz3.ab3@5430>   JSR getbbase
0002344E <AmiBlitz3.ab3@5431>   JSR writeword
00023452 <AmiBlitz3.ab3@5434> BRA.w debugmode_codelabel
00023456 <AmiBlitz3.ab3@5438>   MOVEM.l D2-D7/A2-A4,-(A7)
0002345A <AmiBlitz3.ab3@5441>   MOVEM.l (A7)+,D2-D7/A2-A4
00023460 <AmiBlitz3.ab3@5445>   JSR evalconst
00023466 <AmiBlitz3.ab3@5446>   CMP.l #$E,D3
0002346A <AmiBlitz3.ab3@5447>    BCC.w interr4
0002346E <AmiBlitz3.ab3@5448>   MOVE.w #$7000,D1
00023470 <AmiBlitz3.ab3@5449>   OR.w D3,D1
00023476 <AmiBlitz3.ab3@5450>   JSR writeword
0002347A <AmiBlitz3.ab3@5451>   MOVE.w #$C101,D1
00023480 <AmiBlitz3.ab3@5452> JMP Atokejsr                                               ;clear the interupt
00023482 <AmiBlitz3.ab3@5455> inerr:       Ds.w 1                                        ;flag - in error trap mode
00023486 <AmiBlitz3.ab3@5456> errjmp:      Ds.l 1                                        ;where err jump is
0002348A <AmiBlitz3.ab3@5457> errcode:     Ds.l 1
0002348E <AmiBlitz3.ab3@5461>   MOVE.W  #$D202,D1
00023494 <AmiBlitz3.ab3@5462> JMP Atokejsr                                               ;BRA.W Atokejsr
00023498 <AmiBlitz3.ab3@5466>   MOVE.w inerr(PC),D1
0002349C <AmiBlitz3.ab3@5467>    BEQ.w errerr3
000234A2 <AmiBlitz3.ab3@5468>   CLR.w inerr
000234A8 <AmiBlitz3.ab3@5469>   MOVE.w dontwrite,D1
000234AC <AmiBlitz3.ab3@5470>    BNE.w 'skip
000234B0 <AmiBlitz3.ab3@5471>   MOVEA.l errjmp(PC),A0
000234B6 <AmiBlitz3.ab3@5472>   MOVE.l destpointer,(A0)
000234BA <AmiBlitz3.ab3@5475> BRA.w get1bytemain
000234BE <AmiBlitz3.ab3@5479>   MOVE.w #$D205,D1
000234C4 <AmiBlitz3.ab3@5480> JMP Atokejsr
000234CA <AmiBlitz3.ab3@5484>   MOVE.w proceduremode,D1
000234CE <AmiBlitz3.ab3@5485>    BNE.w errerr1
000234D2 <AmiBlitz3.ab3@5486>   MOVE.w inerr(PC),D1
000234D6 <AmiBlitz3.ab3@5487>    BNE.w errerr2
000234DC <AmiBlitz3.ab3@5488>   LEA inerr,a0
000234DE <AmiBlitz3.ab3@5489>   NOT.w (a0)                                               ;reass
000234E2 <AmiBlitz3.ab3@5490>   MOVE.w #$203C,D1                                         ;move.l #x,d0
000234E8 <AmiBlitz3.ab3@5491>   JSR writeword
000234F2 <AmiBlitz3.ab3@5492>   MOVE.l destpointer,errcode
000234F6 <AmiBlitz3.ab3@5493>   BSR.w addoff
000234FC <AmiBlitz3.ab3@5494>   JSR writelong
00023500 <AmiBlitz3.ab3@5495>   MOVE.w #$D201,D1
00023506 <AmiBlitz3.ab3@5496>   JSR Atokejsr
0002350A <AmiBlitz3.ab3@5497>   MOVE.w #$4EF9,D1                                         ;JMP
00023510 <AmiBlitz3.ab3@5498>   JSR writeword
0002351A <AmiBlitz3.ab3@5499>   MOVE.l destpointer,errjmp
0002351E <AmiBlitz3.ab3@5500>   BSR.w addoff
00023524 <AmiBlitz3.ab3@5501>   JSR writelong
0002352A <AmiBlitz3.ab3@5502>   MOVE.w dontwrite,D1
0002352E <AmiBlitz3.ab3@5503>    BNE.w 'skip
00023532 <AmiBlitz3.ab3@5504>   MOVEA.l errcode(PC),A0
00023538 <AmiBlitz3.ab3@5505>   MOVE.l destpointer,(A0)
0002353A <AmiBlitz3.ab3@5508> RTS
0002353E <AmiBlitz3.ab3@5511> intlineat:  Ds.l 1
00023540 <AmiBlitz3.ab3@5515>   MOVEQ.l #-$01,D1                                        ;type - need new string space
00023544 <AmiBlitz3.ab3@5516>   BSR.w errchx
0002354A <AmiBlitz3.ab3@5517>   MOVE.w D1,intstring
00023554 <AmiBlitz3.ab3@5518>   MOVE.l linenumat,intlineat
0002355A <AmiBlitz3.ab3@5519>   JSR evalconst                                           ;get constant - int level
00023560 <AmiBlitz3.ab3@5520>   CMP.l #$E,D3
00023564 <AmiBlitz3.ab3@5521>    BCC.w interr4
0002356A <AmiBlitz3.ab3@5522>   ST intsused
00023570 <AmiBlitz3.ab3@5523>   MOVE.w D3,intlevel
00023574 <AmiBlitz3.ab3@5524>   MOVE.w #$7000,D1
00023576 <AmiBlitz3.ab3@5525>   OR.w D3,D1                                              
0002357C <AmiBlitz3.ab3@5526>   JSR writeword                                         ;moveq #x,d0
00023580 <AmiBlitz3.ab3@5527>   MOVE.w #$223C,D1                                        ;move.l #x,d1
00023586 <AmiBlitz3.ab3@5528>   JSR writeword
0002358A <AmiBlitz3.ab3@5529>   BSR.w addoff
00023590 <AmiBlitz3.ab3@5530>   MOVE.l destpointer,-(A7)
00023594 <AmiBlitz3.ab3@5531>   BSR.w writelong
00023598 <AmiBlitz3.ab3@5532>   MOVE.w #$C100,D1
0002359E <AmiBlitz3.ab3@5533>   JSR Atokejsr
000235A2 <AmiBlitz3.ab3@5534>   MOVE.w #$4EF9,D1                                        ;jmp
000235A8 <AmiBlitz3.ab3@5535>   JSR writeword
000235AC <AmiBlitz3.ab3@5536>   BSR.w addoff
000235B6 <AmiBlitz3.ab3@5537>   MOVE.l destpointer,intjmpat
000235BA <AmiBlitz3.ab3@5538>   BSR.w writelong
000235BC <AmiBlitz3.ab3@5539>   MOVEA.l (A7)+,A0
000235C2 <AmiBlitz3.ab3@5540>   MOVE.w dontwrite,D1
000235C6 <AmiBlitz3.ab3@5541>   BNE.w 'dontpoke
000235CC <AmiBlitz3.ab3@5542>   MOVE.l destpointer,(A0)
000235D0 <AmiBlitz3.ab3@5545>   MOVE.l intstart0(PC),D1
000235D4 <AmiBlitz3.ab3@5546>   BSR.w writelong
000235DA <AmiBlitz3.ab3@5547>   TST.b debugmode
000235DE <AmiBlitz3.ab3@5548>    BEQ.w 'norerr
000235E0 <AmiBlitz3.ab3@5552>   MOVEQ.l #$02,D1
000235E4 <AmiBlitz3.ab3@5553>   BSR.w writetrap
000235E8 <AmiBlitz3.ab3@5554>   BSR.w addoff
000235F2 <AmiBlitz3.ab3@5555>   MOVE.l destpointer,intcleanat
000235F6 <AmiBlitz3.ab3@5556>   BSR.w writelong
000235FC <AmiBlitz3.ab3@5557>   MOVE.w intlevel,D1
00023600 <AmiBlitz3.ab3@5558>   BSR.w writeword
00023604 <AmiBlitz3.ab3@5559>   MOVE.w #$C30B,D1                                         ;disable stack checks
0002360A <AmiBlitz3.ab3@5560>   JSR Atokejsr
0002360E <AmiBlitz3.ab3@5563>   MOVE.w #$FED3,D1
00023612 <AmiBlitz3.ab3@5564>   BSR.w uselib
00023616 <AmiBlitz3.ab3@5565>   MOVE.w #$C102,D1
0002361C <AmiBlitz3.ab3@5566>   JSR Atokejsr
00023624 <AmiBlitz3.ab3@5567>   MOVE.w #-1,lasta6
0002362E <AmiBlitz3.ab3@5568>   MOVE.l linenumat,intline
00023630 <AmiBlitz3.ab3@5569> RTS
00023632 <AmiBlitz3.ab3@5573>             Ds.w 1                                         ;??looks like obsolved data??
00023636 <AmiBlitz3.ab3@5575> intdata1:   Ds.l 1                                         ;where in data1 a5 is being kept
0002363A <AmiBlitz3.ab3@5577> intjmpat:   Ds.l 1
0002363E <AmiBlitz3.ab3@5578> intline:    Ds.l 1
00023640 <AmiBlitz3.ab3@5579> intstring:  Ds.w 1                                         ;flag 0 = no setint
00023642 <AmiBlitz3.ab3@5582> intlevel:   Ds.w 1
00023646 <AmiBlitz3.ab3@5583> intcleanat: Ds.l 1
0002364A <AmiBlitz3.ab3@5584> ret15add:   Ds.l 1
0002364C <AmiBlitz3.ab3@5585> ret15cc:    Ds.w 1
00023654 <AmiBlitz3.ab3@5589>   ADDI.l #$12,$2(A7)
0002365C <AmiBlitz3.ab3@5590>   MOVE.l $2(A7),ret15add
00023662 <AmiBlitz3.ab3@5591>   MOVE.w (A7),ret15cc
0002366A <AmiBlitz3.ab3@5592>   MOVE.l #directdo,$2(A7)
0002366C <AmiBlitz3.ab3@5593> RTE
00023670 <AmiBlitz3.ab3@5602>   MOVE.l ret15add(PC),-(A7)
00023674 <AmiBlitz3.ab3@5603>   MOVE.w ret15cc(PC),-(A7)                                 ;15*4
00023678 <AmiBlitz3.ab3@5604>   MOVEM.l D0-D7/A0-A6,-(A7)
00023682 <AmiBlitz3.ab3@5605>   MOVE.l destbufferend,trap15temp                          ;store high buff addr
0002368C <AmiBlitz3.ab3@5606>   MOVE.l destbufferstart,trap15temp2
00023696 <AmiBlitz3.ab3@5607>   MOVE.l libend,templibend
000236A0 <AmiBlitz3.ab3@5608>   MOVE.l data1start,tempdata1start
000236A6 <AmiBlitz3.ab3@5609>   CLR.l hunkoffsetcounter
000236AC <AmiBlitz3.ab3@5611>   MOVE.l directbuffer,a0
000236B2 <AmiBlitz3.ab3@5615>   MOVE.l a0,destbufferstart
000236B8 <AmiBlitz3.ab3@5616>   ADD.l #3900,a0
000236BE <AmiBlitz3.ab3@5617>   MOVE.l a0,destbufferend
000236C4 <AmiBlitz3.ab3@5618>   TST.b exdebug
000236C8 <AmiBlitz3.ab3@5619>   BEQ 'l1
000236CE <AmiBlitz3.ab3@5620>   MOVE.l a0,libend
000236D4 <AmiBlitz3.ab3@5621>   ADD.l #4000,a0
000236DA <AmiBlitz3.ab3@5622>   MOVE.l a0,data1start
000236E4 <AmiBlitz3.ab3@5625>   MOVE.l #'dircont,errcont
000236EA <AmiBlitz3.ab3@5626> 
000236F0 <AmiBlitz3.ab3@5627>   MOVE.l A7,errstack
000236F8 <AmiBlitz3.ab3@5628>   MOVE.w #$FFFF,dirmode
000236FC <AmiBlitz3.ab3@5630>     MOVEA.l ret15add(PC),A1
00023702 <AmiBlitz3.ab3@5631>     MOVE.w -(A1),blitzmode
00023704 <AmiBlitz3.ab3@5632>     CLR.l -(A1)
0002370A <AmiBlitz3.ab3@5633>     MOVE.l -(A1),firstglob
00023710 <AmiBlitz3.ab3@5634>     MOVE.l -(A1),firstlocal
00023716 <AmiBlitz3.ab3@5636>   CLR.w proceduremode
0002371C <AmiBlitz3.ab3@5637>   MOVE.l firstglob,D0
00023722 <AmiBlitz3.ab3@5638>   OR.l firstlocal,D0
00023726 <AmiBlitz3.ab3@5639>   BEQ.b 'skip
0002372C <AmiBlitz3.ab3@5640>   NOT.w proceduremode
0002372E <AmiBlitz3.ab3@5643>   MOVEA.l -(A1),A0                                         ;address of string
00023730 <AmiBlitz3.ab3@5647>   MOVE.l A0,-(A7)
0002376E <AmiBlitz3.ab3@5650>   !ComData_GetL{comFunc_DebugTrap,A1}
00023770 <AmiBlitz3.ab3@5652>   JSR (A1)                                                 ;tokenise line.....
00023772 <AmiBlitz3.ab3@5654>   MOVEA.l (A7)+,A5
0002377C <AmiBlitz3.ab3@5655>   MOVE.l directbuffer,destpointer
00023782 <AmiBlitz3.ab3@5656>   TST.b exdebug
00023786 <AmiBlitz3.ab3@5657>   BEQ 'noexdebug
00023788 <AmiBlitz3.ab3@5658>   MOVE.l a5,a0
0002378E <AmiBlitz3.ab3@5659>   MOVE.l #200,d0
00023794 <AmiBlitz3.ab3@5662>     MOVE.b 0(a0,d0.l),8(a0,d0.l)
00023798 <AmiBlitz3.ab3@5663>   DBF d0,'l2
0002379E <AmiBlitz3.ab3@5668>   MOVE.l destpointer,a0
000237A2 <AmiBlitz3.ab3@5669>   MOVE.w #$207c,(a0)+
000237A4 <AmiBlitz3.ab3@5670>   MOVE.l a5,d0
000237AA <AmiBlitz3.ab3@5671>   ADD.l #$206,d0                                           ;constant from debuglib
000237AC <AmiBlitz3.ab3@5672>   MOVE.l d0,(a0)+
000237B2 <AmiBlitz3.ab3@5673>   MOVE.l a0,destpointer
000237B4 <AmiBlitz3.ab3@5674>   MOVE.l a5,a0
000237B8 <AmiBlitz3.ab3@5675>   MOVE.w #$8039,(a0)+                                      ;TokeJsr 164 (inputoutputlib) LSL 7+4
000237BE <AmiBlitz3.ab3@5676>   MOVE.l #"$520",(a0)+
000237C2 <AmiBlitz3.ab3@5677>   MOVE.w #"4:",(a0)+
000237C8 <AmiBlitz3.ab3@5680>   CLR.w dontwrite
000237D0 <AmiBlitz3.ab3@5681>   MOVE.w #$FFFF,lasta6
000237D4 <AmiBlitz3.ab3@5682>   BSR.w compile_line                                        ;.....compile it
000237DA <AmiBlitz3.ab3@5683>   TST.b exdebug
000237DE <AmiBlitz3.ab3@5684>   BEQ 'noexdebug2
000237E4 <AmiBlitz3.ab3@5685>   JSR fixjsrs
000237EA <AmiBlitz3.ab3@5688>   CLR.w proceduremode
000237EE <AmiBlitz3.ab3@5689>   BSR.w errchx
000237F2 <AmiBlitz3.ab3@5690>   MOVE.w #$4EF9,D1
000237F6 <AmiBlitz3.ab3@5691>   BSR.w writeword                                          ;JMP
000237FA <AmiBlitz3.ab3@5692>   MOVE.l ret15add(PC),D1
000237FE <AmiBlitz3.ab3@5693>   BSR.w writelong                                          ;jmp to done
00023804 <AmiBlitz3.ab3@5694>   MOVE.w dontwrite,D0
00023808 <AmiBlitz3.ab3@5695>    BNE.w nodirmem
00023810 <AmiBlitz3.ab3@5696>   MOVE.l directbuffer,$3E(A7)                              ;install code address
00023816 <AmiBlitz3.ab3@5699>   CLR.w dirmode
0002381C <AmiBlitz3.ab3@5700>   MOVE.w ret15cc(PC),$3C(A7)
00023826 <AmiBlitz3.ab3@5701>   MOVE.l trap15temp,destbufferend
00023830 <AmiBlitz3.ab3@5702>   MOVE.l trap15temp2,destbufferstart
0002383A <AmiBlitz3.ab3@5703>   MOVE.l tempdata1start,data1start
00023844 <AmiBlitz3.ab3@5704>   MOVE.l templibend,libend
00023848 <AmiBlitz3.ab3@5705>   MOVEM.l (A7)+,D0-D7/A0-A6
0002384C <AmiBlitz3.ab3@5706>   BSR.w Aclearcache                                        ;selden used
0002384E <AmiBlitz3.ab3@5707> RTR
00023852 <AmiBlitz3.ab3@5710>   MOVEA.l ret15add(PC),A0
00023854 <AmiBlitz3.ab3@5711>   SUBQ.w #2,A0
00023856 <AmiBlitz3.ab3@5712>   MOVE.l D0,-(A0)
0002385A <AmiBlitz3.ab3@5713> BRA.w 'direxit
0002385E <AmiBlitz3.ab3@5717>   MOVE.w $6(A3),D1
00023862 <AmiBlitz3.ab3@5718>   BSR.w uselib                                             ;get lib for base address
00023866 <AmiBlitz3.ab3@5719>   MOVE.w $A(A1),-(A7)                                      ;libbase reg
00023868 <AmiBlitz3.ab3@5720>   ADDQ.w #8,A3
0002386A <AmiBlitz3.ab3@5721>   MOVE.w (A3)+,-(A7)                                       ;get offset for lib
0002386C <AmiBlitz3.ab3@5722>   MOVE.l A3,-(A7)
0002386E <AmiBlitz3.ab3@5726>   MOVEQ.l #$00,D3
00023874 <AmiBlitz3.ab3@5727>   JSR checka4a5
00023876 <AmiBlitz3.ab3@5730>   MOVE.b (A3)+,D1
0002387A <AmiBlitz3.ab3@5731>    BMI.w 'done
0002387C <AmiBlitz3.ab3@5732>   MOVEQ.l #$03,D2
0002387E <AmiBlitz3.ab3@5733>   ADDQ.w #1,D3
00023882 <AmiBlitz3.ab3@5734>   MOVEM.l D3/A3,-(A7)
00023888 <AmiBlitz3.ab3@5735>   MOVE.b funcparloop,-(a7)
00023890 <AmiBlitz3.ab3@5736>   MOVE.b #0,funcparloop
00023896 <AmiBlitz3.ab3@5737>   MOVE.l leftsidetype,-(a7)
0002389C <AmiBlitz3.ab3@5738>   MOVE.l rightsidetype,-(a7)
000238A2 <AmiBlitz3.ab3@5739>   MOVE.w leftsideflagmask,-(a7)
000238A8 <AmiBlitz3.ab3@5740>   MOVE.w rightsideflagmask,-(a7)
000238AE <AmiBlitz3.ab3@5741>   CLR.l leftsidetype
000238B4 <AmiBlitz3.ab3@5742>   CLR.l rightsidetype
000238BA <AmiBlitz3.ab3@5743>   CLR.w leftsideflagmask
000238C0 <AmiBlitz3.ab3@5744>   CLR.w rightsideflagmask
000238C6 <AmiBlitz3.ab3@5745>   MOVE.b blitzparloop,-(a7)
000238CE <AmiBlitz3.ab3@5746>   MOVE.b #1,blitzparloop                                 ;write the parameter to stack
000238D4 <AmiBlitz3.ab3@5747>   JSR peval
000238DA <AmiBlitz3.ab3@5748>   MOVE.b (a7)+,blitzparloop
000238E0 <AmiBlitz3.ab3@5749>   MOVE.w (a7)+,rightsideflagmask
000238E6 <AmiBlitz3.ab3@5750>   MOVE.w (a7)+,leftsideflagmask
000238EC <AmiBlitz3.ab3@5751>   MOVE.l (a7)+,rightsidetype
000238F2 <AmiBlitz3.ab3@5752>   MOVE.l (a7)+,leftsidetype
000238F8 <AmiBlitz3.ab3@5753>   MOVE.b (a7)+,funcparloop
000238FC <AmiBlitz3.ab3@5754>   MOVEM.l (A7)+,D3/A3
00023900 <AmiBlitz3.ab3@5755>   CMP.w #$2C,D0
00023904 <AmiBlitz3.ab3@5756>    BEQ.w 'loop
00023906 <AmiBlitz3.ab3@5757>   TST.b (A3)
0002390A <AmiBlitz3.ab3@5758>    BPL.w syntaxerr
0002390C <AmiBlitz3.ab3@5761>   MOVEA.l (A7)+,A3
0002390E <AmiBlitz3.ab3@5762>   SUBQ.w #1,D3
00023912 <AmiBlitz3.ab3@5763>    BPL.w 'toend
00023916 <AmiBlitz3.ab3@5764>    BSR.w get1bytemain                                      ;no pars - get :
0002391A <AmiBlitz3.ab3@5765>  BRA.w 'nopars
0002391C <AmiBlitz3.ab3@5768>   TST.b (A3)+                                              ;go to end of params
00023920 <AmiBlitz3.ab3@5769>    BPL.w 'toend
00023922 <AmiBlitz3.ab3@5770>   SUBQ.w #1,A3
00023924 <AmiBlitz3.ab3@5773>    MOVEQ.l #$00,D1
00023926 <AmiBlitz3.ab3@5774>    MOVE.b -(A3),D1
0002392A <AmiBlitz3.ab3@5775>    BTST #$4,D1
0002392E <AmiBlitz3.ab3@5776>     BNE.w 'addreg
00023930 <AmiBlitz3.ab3@5777>    LSL.w #8,D1
00023932 <AmiBlitz3.ab3@5778>    LSL.w #1,D1
00023936 <AmiBlitz3.ab3@5779>    ORI.w #$201F,D1
0002393A <AmiBlitz3.ab3@5780>  BRA.w 'gotit
0002393E <AmiBlitz3.ab3@5783>    ANDI.w #$7,D1
00023940 <AmiBlitz3.ab3@5784>    LSL.w #8,D1
00023942 <AmiBlitz3.ab3@5785>    LSL.w #1,D1
00023946 <AmiBlitz3.ab3@5786>    ORI.w #$205F,D1
0002394A <AmiBlitz3.ab3@5789>     BSR.w writeword
0002394E <AmiBlitz3.ab3@5790>   DBF D3,'loop2
00023954 <AmiBlitz3.ab3@5793>   MOVE.w (A7)+,libjsr+2
0002395A <AmiBlitz3.ab3@5794>   MOVE.w (A7)+,libbase+2
00023960 <AmiBlitz3.ab3@5795>   MOVE.l libbase,D1
00023964 <AmiBlitz3.ab3@5796>    BSR.w writelong
0002396A <AmiBlitz3.ab3@5797>   MOVE.l libjsr,D1
00023970 <AmiBlitz3.ab3@5798>   JSR writelong
00023976 <AmiBlitz3.ab3@5799>   JSR restorea4a5
00023978 <AmiBlitz3.ab3@5800> RTS
0002397E <AmiBlitz3.ab3@5804>   MOVE.l data1,D4
00023984 <AmiBlitz3.ab3@5805>   SUB.l data1start,D4
0002398A <AmiBlitz3.ab3@5806>   ADD.l #10000,d4
00023990 <AmiBlitz3.ab3@5807>   MOVE.l libend,D3
00023996 <AmiBlitz3.ab3@5808>   SUB.l destbufferend,D3
0002399C <AmiBlitz3.ab3@5809>   ADD.l #40000,d3
000239A2 <AmiBlitz3.ab3@5810>   MOVE.l bigpc,D2
000239A8 <AmiBlitz3.ab3@5811>   SUB.l destbufferstart,D2
000239AE <AmiBlitz3.ab3@5812>   ADD.l #20000,d2
000239B4 <AmiBlitz3.ab3@5813>   MOVE.l databuffer,D5
000239BA <AmiBlitz3.ab3@5814>   ADD.l #10000,D5
000239BE <AmiBlitz3.ab3@5815> BRA newallox
000239C4 <AmiBlitz3.ab3@5819>   MOVE.l objectbuffer,D2
000239C6 <AmiBlitz3.ab3@5820>   LSR.l #1,D2
000239CC <AmiBlitz3.ab3@5821>   ADD.l objectbuffer,D2
000239D2 <AmiBlitz3.ab3@5822>   MOVE.l libsbuffer,D3
000239D4 <AmiBlitz3.ab3@5823>   LSR.l #1,D3
000239DA <AmiBlitz3.ab3@5824>   ADD.l libsbuffer,D3
000239E0 <AmiBlitz3.ab3@5825>   MOVE.l systembuffer,D4
000239E2 <AmiBlitz3.ab3@5826>   LSR.l #1,D4
000239E8 <AmiBlitz3.ab3@5827>   ADD.l systembuffer,D4
000239EE <AmiBlitz3.ab3@5828>   MOVE.l databuffer,D5
000239F0 <AmiBlitz3.ab3@5829>   LSR.l #1,D5
000239F6 <AmiBlitz3.ab3@5830>   ADD.l databuffer,D5
000239FA <AmiBlitz3.ab3@5831> BRA.w newallox
00023A00 <AmiBlitz3.ab3@5835>   MOVE.l bigpc,D2
00023A06 <AmiBlitz3.ab3@5836>   SUB.l destbufferstart,D2                                     ;size of object buffer
00023A0C <AmiBlitz3.ab3@5837>   SUB.l savefuncspace,d2
00023A12 <AmiBlitz3.ab3@5839>   TST.w debugversion
00023A16 <AmiBlitz3.ab3@5840>    BNE.b 'skip
00023A1C <AmiBlitz3.ab3@5841>   ADDI.l #$800,D2
00023A22 <AmiBlitz3.ab3@5844>   MOVE.l libend,D3
00023A28 <AmiBlitz3.ab3@5845>   SUB.l destbufferend,D3
00023A2E <AmiBlitz3.ab3@5847>   MOVE.l data1,D4
00023A34 <AmiBlitz3.ab3@5848>   SUB.l data1start,D4
00023A3A <AmiBlitz3.ab3@5850>   MOVE.l data2,D5
00023A40 <AmiBlitz3.ab3@5851>   SUB.l data2at,D5
00023A46 <AmiBlitz3.ab3@5853>   CLR.l morememadd
00023A4A <AmiBlitz3.ab3@5856>   BSR.w makeallox
00023A4E <AmiBlitz3.ab3@5857>   BNE.w 'done
00023A52 <AmiBlitz3.ab3@5858>  BRA.w init_buffers
00023A54 <AmiBlitz3.ab3@5861> RTS
00023A5A <AmiBlitz3.ab3@5865>   MOVEA.l _execbase,A6
00023A60 <AmiBlitz3.ab3@5866>   MOVE.l objlen,D0
00023A64 <AmiBlitz3.ab3@5867>   BEQ.w 'skip
00023A6A <AmiBlitz3.ab3@5868>   CLR.l objlen
00023A70 <AmiBlitz3.ab3@5869>   MOVEA.l destbufferstart,A1
00023A76 <AmiBlitz3.ab3@5870>   MOVE.l mempool,a0
00023A7A <AmiBlitz3.ab3@5871> JMP _FreeVec(A6)
00023A7C <AmiBlitz3.ab3@5874> RTS
00023A82 <AmiBlitz3.ab3@5878>   MOVE.l objectbuffer,D2
00023A88 <AmiBlitz3.ab3@5879>   MOVE.l libsbuffer,D3
00023A8E <AmiBlitz3.ab3@5880>   MOVE.l systembuffer,D4
00023A94 <AmiBlitz3.ab3@5881>   MOVE.l databuffer,D5
00023A9C <AmiBlitz3.ab3@5884>   MOVE.w #$FFFF,anyerrs
00023AA0 <AmiBlitz3.ab3@5885>   BSR.w freeallox
00023AA2 <AmiBlitz3.ab3@5889>   ADDQ.l #1,D2
00023AA6 <AmiBlitz3.ab3@5890>   BCLR #$0,D2
00023AA8 <AmiBlitz3.ab3@5891>   ADDQ.l #1,D3
00023AAC <AmiBlitz3.ab3@5892>   BCLR #$0,D3
00023AAE <AmiBlitz3.ab3@5893>   ADDQ.l #1,D4
00023AB2 <AmiBlitz3.ab3@5894>   BCLR #$0,D4
00023AB4 <AmiBlitz3.ab3@5895>   TST.l d5
00023AB8 <AmiBlitz3.ab3@5896>   BNE 'l1
00023ABA <AmiBlitz3.ab3@5899>   ADDQ.l #1,D5
00023ABE <AmiBlitz3.ab3@5900>   BCLR #$0,D5
00023AC0 <AmiBlitz3.ab3@5901>   MOVE.l D2,D0
00023AC2 <AmiBlitz3.ab3@5902>   ADD.l D3,D0
00023AC4 <AmiBlitz3.ab3@5903>   ADD.l D4,D0
00023AC6 <AmiBlitz3.ab3@5904>   ADD.l D5,D0
00023ACC <AmiBlitz3.ab3@5905>   ADD.l #moremem,d0
00023ACE <AmiBlitz3.ab3@5906>   MOVE.l D0,D6
00023AD4 <AmiBlitz3.ab3@5907>   MOVE.l #MemfPublic_MemfClear,D1
00023ADA <AmiBlitz3.ab3@5908>   MOVE.l mempool,a0
00023AE0 <AmiBlitz3.ab3@5909>   MOVEA.l _execbase,A6
00023AE4 <AmiBlitz3.ab3@5910>   JSR _AllocVec(a6)                                        ;alloc mem for objectbuffer
00023AE6 <AmiBlitz3.ab3@5912>   TST.l D0
00023AEA <AmiBlitz3.ab3@5913>   BEQ.w exit_initbuffers
00023AF0 <AmiBlitz3.ab3@5914>   MOVE.l D6,objlen
00023AF6 <AmiBlitz3.ab3@5915>   MOVE.l D2,objectbuffer
00023AFC <AmiBlitz3.ab3@5916>   MOVE.l D3,libsbuffer
00023B02 <AmiBlitz3.ab3@5917>   MOVE.l D4,systembuffer
00023B08 <AmiBlitz3.ab3@5918>   MOVE.l D5,databuffer
00023B0E <AmiBlitz3.ab3@5919>   MOVE.l D0,destbufferstart
00023B42 <AmiBlitz3.ab3@5922>   !ComData_SetL{comPtr_DestBufferStart,D0}
00023B44 <AmiBlitz3.ab3@5923>   ADD.l D2,D0
00023B4A <AmiBlitz3.ab3@5924>   MOVE.l D0,destbufferend
00023B4C <AmiBlitz3.ab3@5925>   ADD.l D3,D0
00023B52 <AmiBlitz3.ab3@5926>   MOVE.l D0,data1start
00023B54 <AmiBlitz3.ab3@5927>   ADD.l D4,D0
00023B5A <AmiBlitz3.ab3@5928>   MOVE.l D0,data2at
00023B5C <AmiBlitz3.ab3@5929>   ADD.l D5,D0
00023B62 <AmiBlitz3.ab3@5930>   MOVE.l D0,allat
00023B64 <AmiBlitz3.ab3@5933> RTS
00023B68 <AmiBlitz3.ab3@5937>   Dc.b $00,$00,$00,$01                                     ;         1
00023B6C <AmiBlitz3.ab3@5938>   Dc.b $00,$00,$00,$0A                                     ;        10
00023B70 <AmiBlitz3.ab3@5939>   Dc.b $00,$00,$00,$64                                     ;       100
00023B74 <AmiBlitz3.ab3@5940>   Dc.b $00,$00,$03,$E8                                     ;      1000
00023B78 <AmiBlitz3.ab3@5941>   Dc.b $00,$00,$27,$10                                     ;     10000
00023B7C <AmiBlitz3.ab3@5942>   Dc.b $00,$01,$86,$A0                                     ;    100000
00023B80 <AmiBlitz3.ab3@5943>   Dc.b $00,$0F,$42,$40                                     ;   1000000
00023B84 <AmiBlitz3.ab3@5944>   Dc.b $00,$98,$96,$80                                     ;  10000000
00023B88 <AmiBlitz3.ab3@5945>   Dc.b $05,$F5,$E1,$00                                     ; 100000000
00023B8C <AmiBlitz3.ab3@5946>   Dc.b $3B,$9A,$CA,$00                                     ;1000000000
00023B8E <AmiBlitz3.ab3@5950>   MOVEQ.l #$00,D1                                          ;no zero printed
00023B90 <AmiBlitz3.ab3@5951>   MOVEQ.l #$24,D3                                          ; "$"
00023B92 <AmiBlitz3.ab3@5954>   MOVEQ.l #$30,D4                                          ; "0"
00023B96 <AmiBlitz3.ab3@5957>     CMP.l divisors(PC,D3.W),D2
00023B9A <AmiBlitz3.ab3@5958>     BCS.w 'skip
00023B9E <AmiBlitz3.ab3@5959>     SUB.l divisors(PC,D3.W),D2
00023BA0 <AmiBlitz3.ab3@5960>     ADDQ.w #1,D4
00023BA4 <AmiBlitz3.ab3@5961>  BRA.w 'loop2
00023BA8 <AmiBlitz3.ab3@5964>   CMP.b #"0",D4
00023BAC <AmiBlitz3.ab3@5965>   BNE.w 'doit
00023BAE <AmiBlitz3.ab3@5966>   TST.w D1
00023BB2 <AmiBlitz3.ab3@5967>   BEQ.w 'skip2
00023BB4 <AmiBlitz3.ab3@5970>   MOVE.b D4,(A0)+
00023BB6 <AmiBlitz3.ab3@5971>   MOVEQ.l #$01,D1
00023BB8 <AmiBlitz3.ab3@5974>   SUBQ.w #4,D3
00023BBC <AmiBlitz3.ab3@5975>   BPL.w 'loop
00023BBE <AmiBlitz3.ab3@5976>   TST.w D1
00023BC2 <AmiBlitz3.ab3@5977>   BNE.w 'skip3
00023BC6 <AmiBlitz3.ab3@5978>   MOVE.b #"0",(A0)+
00023BC8 <AmiBlitz3.ab3@5981>   CLR.b (A0)
00023BCA <AmiBlitz3.ab3@5982> RTS
00023BEA <AmiBlitz3.ab3@5985> str_residentrequester:  Dc.b "Name of Resident File to Create",0 : Even        ;restext org source
00023CAA <AmiBlitz3.ab3@5986> str_residentpath:       Ds.l 48                                                ;respath org source
00023D6A <AmiBlitz3.ab3@5987> str_residentname:       Ds.l 48                                                ;resname org source
00023D70 <AmiBlitz3.ab3@5991>   MOVE.l macrobase,D0
00023D74 <AmiBlitz3.ab3@5992>    BNE.w 'create_residentfile
00023D7A <AmiBlitz3.ab3@5993>   MOVE.l newtype_string,D0
00023D7E <AmiBlitz3.ab3@5994>    BNE.w 'create_residentfile
00023D84 <AmiBlitz3.ab3@5995>   MOVEA.l labelbase,A2
00023D88 <AmiBlitz3.ab3@5998>     CMPA.w #$0,A2
00023D8C <AmiBlitz3.ab3@5999>      BEQ.w 'err
00023D94 <AmiBlitz3.ab3@6000>     CMPI.l #$1,$4(A2)
00023D98 <AmiBlitz3.ab3@6001>      BEQ.w 'create_residentfile
00023D9A <AmiBlitz3.ab3@6002>     MOVEA.l (A2),A2
00023D9E <AmiBlitz3.ab3@6003>  BRA.w 'loop
00023DC8 <AmiBlitz3.ab3@6006>   !basic
00023E2A <AmiBlitz3.ab3@6007> 
00023E48 <AmiBlitz3.ab3@6008>   !asm
00023E4A <AmiBlitz3.ab3@6009>  RTS
00023E88 <AmiBlitz3.ab3@6014>   !ComData_GetL{comFunc_ASLFileRequest,A3}
00023E8E <AmiBlitz3.ab3@6015>   LEA str_residentrequester,A2
00023E94 <AmiBlitz3.ab3@6016>   LEA str_residentpath,A0
00023E9A <AmiBlitz3.ab3@6017>   LEA str_residentname,A1
00023EC4 <AmiBlitz3.ab3@6018>   !basic
00023EFC <AmiBlitz3.ab3@6019>     Poke$ ?str_residentpath,my_residentsdir$
00023F28 <AmiBlitz3.ab3@6020>     Poke$ ?str_residentname,".res"
00023F46 <AmiBlitz3.ab3@6021>   !asm
00023F48 <AmiBlitz3.ab3@6023>   JSR (A3)                                                 ;open ped filerequest
00023F4C <AmiBlitz3.ab3@6025>   BEQ.w 'err
00023F4E <AmiBlitz3.ab3@6028>   MOVE.l D0,D1
00023F54 <AmiBlitz3.ab3@6029>   MOVE.l #HUNK_RELOC_8__MODE_NEWFILE,D2
00023F58 <AmiBlitz3.ab3@6030>   MOVEA.l _dosbase(PC),A6
00023F5C <AmiBlitz3.ab3@6031>   JSR _Open(A6)
00023F5E <AmiBlitz3.ab3@6032>   MOVE.l D0,D7                                             ;handle
00023F62 <AmiBlitz3.ab3@6033>   BEQ.w 'err
00023F66 <AmiBlitz3.ab3@6034>   MOVEM.l d2-d7/a0-a6,-(a7)
00023F6C <AmiBlitz3.ab3@6035>   LEA devo,a0
00023F72 <AmiBlitz3.ab3@6036>   LEA ptr_parameterstore,a1
00023F74 <AmiBlitz3.ab3@6039>     MOVE.b (a0)+,(a1)+
00023F78 <AmiBlitz3.ab3@6040>   BNE 'l1
00023F7A <AmiBlitz3.ab3@6041>   MOVEQ #13,d2
00023F80 <AmiBlitz3.ab3@6042>   JSR findlabel2
00023F84 <AmiBlitz3.ab3@6043>   BNE 'd
00023F88 <AmiBlitz3.ab3@6044>   TST.l 8(a2)
00023F8C <AmiBlitz3.ab3@6045>   BEQ 'd2
00023FB6 <AmiBlitz3.ab3@6046>   !basic
00024018 <AmiBlitz3.ab3@6047>     error{!TRANS{"Cannot create Resident with develope debug 1"}}
00024036 <AmiBlitz3.ab3@6048>   !asm
0002403A <AmiBlitz3.ab3@6049>   MOVEM.l (a7)+,d2-d7/a0-a6
0002403E <AmiBlitz3.ab3@6050>   MOVEA.l _dosbase(PC),A6
00024040 <AmiBlitz3.ab3@6051>   MOVE.l d7,d1
00024044 <AmiBlitz3.ab3@6052>   JSR _Close(a6)
00024048 <AmiBlitz3.ab3@6053>  BRA 'err
0002404C <AmiBlitz3.ab3@6057>   MOVEM.l (a7)+,d2-d7/a0-a6
00024050 <AmiBlitz3.ab3@6058>   BSR.w call_setpointerbusy
00024054 <AmiBlitz3.ab3@6060>   BSR.w AJL_0_7962
00024056 <AmiBlitz3.ab3@6061>   MOVE.l D7,D1
0002405C <AmiBlitz3.ab3@6062>   MOVE.l #tsthead,D2                                       ;header
0002405E <AmiBlitz3.ab3@6063>   MOVEQ.l #$20,D3
00024062 <AmiBlitz3.ab3@6064>   MOVEA.l _dosbase(PC),A6
00024066 <AmiBlitz3.ab3@6065>   JSR _Write(A6)
00024068 <AmiBlitz3.ab3@6066>   MOVEQ.l #$00,D6                                          ;offset from start of file!
0002406C <AmiBlitz3.ab3@6067>   BSR.w restypes
00024070 <AmiBlitz3.ab3@6068>   BSR.w resmacs
00024074 <AmiBlitz3.ab3@6069>   BSR.w resconsts
00024076 <AmiBlitz3.ab3@6070>   MOVE.l D6,D3
00024078 <AmiBlitz3.ab3@6071>   ADDQ.l #3,D3
0002407E <AmiBlitz3.ab3@6072>   ANDI.l #$FFFFFFFC,D3                                    ;long word align
00024080 <AmiBlitz3.ab3@6073>   MOVE.l D3,-(A7)
00024082 <AmiBlitz3.ab3@6074>   SUB.l D6,D3
00024086 <AmiBlitz3.ab3@6075>   BEQ.w 'noalign
0002408C <AmiBlitz3.ab3@6076>   MOVE.l #writelist,D2
0002408E <AmiBlitz3.ab3@6077>   MOVE.l D7,D1
00024094 <AmiBlitz3.ab3@6078>   MOVEA.l _dosbase,A6
00024098 <AmiBlitz3.ab3@6079>   JSR _Write(A6)
000240A2 <AmiBlitz3.ab3@6082>    MOVE.l hunkoffsetcounter,tstsize3
000240A6 <AmiBlitz3.ab3@6083>    BEQ.w 'skip2a
000240A8 <AmiBlitz3.ab3@6084>   MOVE.l D7,D1
000240AE <AmiBlitz3.ab3@6085>   MOVE.l #tstend,D2
000240B0 <AmiBlitz3.ab3@6086>   MOVEQ.l #$0C,D3
000240B6 <AmiBlitz3.ab3@6087>   MOVEA.l _dosbase,A6
000240BA <AmiBlitz3.ab3@6088>    JSR _Write(A6)
000240C0 <AmiBlitz3.ab3@6092>   MOVEA.l hunkoffsetbase,A2
000240C4 <AmiBlitz3.ab3@6095>   CMPA.w #$0,A2
000240C8 <AmiBlitz3.ab3@6096>    BEQ.w 'skip2
000240CC <AmiBlitz3.ab3@6097>   LEA $4(A2),A1
000240CE <AmiBlitz3.ab3@6098>   MOVE.l D7,D1
000240D0 <AmiBlitz3.ab3@6099>   MOVE.l A1,D2
000240D2 <AmiBlitz3.ab3@6100>   MOVEQ.l #$04,D3
000240D8 <AmiBlitz3.ab3@6101>   MOVEA.l _dosbase,A6
000240DC <AmiBlitz3.ab3@6102>    JSR _Write(A6)
000240DE <AmiBlitz3.ab3@6103>   MOVEA.l (A2),A2
000240E2 <AmiBlitz3.ab3@6104>  BRA.w 'oloop
000240E4 <AmiBlitz3.ab3@6107>   MOVE.l D7,D1
000240EA <AmiBlitz3.ab3@6108>   MOVE.l #zero,D2
000240EC <AmiBlitz3.ab3@6109>   MOVEQ.l #$04,D3
000240F2 <AmiBlitz3.ab3@6110>   MOVEA.l _dosbase,A6
000240F6 <AmiBlitz3.ab3@6111>   JSR _Write(A6)
000240F8 <AmiBlitz3.ab3@6114>   MOVE.l D7,D1
000240FE <AmiBlitz3.ab3@6115>   MOVE.l #tstdone,D2
00024100 <AmiBlitz3.ab3@6116>   MOVEQ.l #$04,D3
00024106 <AmiBlitz3.ab3@6117>   MOVEA.l _dosbase,A6
0002410A <AmiBlitz3.ab3@6118>    JSR _Write(A6)
0002410C <AmiBlitz3.ab3@6119>   MOVE.l (A7)+,D0
0002410E <AmiBlitz3.ab3@6120>   LSR.l #2,D0
00024114 <AmiBlitz3.ab3@6121>   MOVE.l D0,temp1
00024116 <AmiBlitz3.ab3@6122>   MOVE.l D7,D1
00024118 <AmiBlitz3.ab3@6123>   MOVEQ.l #$14,D2
0002411A <AmiBlitz3.ab3@6124>   MOVEQ.l #-$01,D3
0002411E <AmiBlitz3.ab3@6125>   JSR _Seek(A6)
00024120 <AmiBlitz3.ab3@6126>   MOVE.l D7,D1
00024126 <AmiBlitz3.ab3@6127>   MOVE.l #temp1,D2
00024128 <AmiBlitz3.ab3@6128>   MOVEQ.l #$04,D3
0002412C <AmiBlitz3.ab3@6129>    JSR _Write(A6)
0002412E <AmiBlitz3.ab3@6130>   MOVE.l D7,D1
00024130 <AmiBlitz3.ab3@6131>   MOVEQ.l #$1C,D2
00024132 <AmiBlitz3.ab3@6132>   MOVEQ.l #-$01,D3
00024136 <AmiBlitz3.ab3@6133>    JSR _Seek(A6)
00024138 <AmiBlitz3.ab3@6134>   MOVE.l D7,D1
0002413E <AmiBlitz3.ab3@6135>   MOVE.l #temp1,D2
00024140 <AmiBlitz3.ab3@6136>   MOVEQ.l #$04,D3
00024144 <AmiBlitz3.ab3@6137>    JSR _Write(A6)
00024146 <AmiBlitz3.ab3@6138>   MOVE.l D7,D1
0002414A <AmiBlitz3.ab3@6139>    JSR _Close(A6)
0002414E <AmiBlitz3.ab3@6140> BRA.w call_setpointernormal
00024150 <AmiBlitz3.ab3@6144>   ADDQ.w #5,D1
00024152 <AmiBlitz3.ab3@6145>   ADDQ.b #8,D0
00024156 <AmiBlitz3.ab3@6148>     CMPA.w #$0,A2
0002415A <AmiBlitz3.ab3@6149>     BEQ.w 'done
0002415E <AmiBlitz3.ab3@6150>      BSR.w writeitem
00024160 <AmiBlitz3.ab3@6151>     MOVEA.l (A2),A2
00024164 <AmiBlitz3.ab3@6152>  BRA.w 'loop
00024166 <AmiBlitz3.ab3@6155> RTS
00024168 <AmiBlitz3.ab3@6159>   MOVEQ.l #$00,D3
0002416C <AmiBlitz3.ab3@6160>   MOVE.b $0(A2,D5.W),D3
0002416E <AmiBlitz3.ab3@6161>   ADDQ.w #1,D3
00024172 <AmiBlitz3.ab3@6162>   BCLR #$0,D3                                              ;word align
00024174 <AmiBlitz3.ab3@6163>   MOVE.l (A2),-(A7)
00024178 <AmiBlitz3.ab3@6164>    BEQ.w 'skip
0002417C <AmiBlitz3.ab3@6165>    BSR.w 'resoff
0002417E <AmiBlitz3.ab3@6166>   ADD.l D3,D6
00024180 <AmiBlitz3.ab3@6167>   MOVE.l D6,(A2)
00024182 <AmiBlitz3.ab3@6168>   SUB.l D3,D6
00024184 <AmiBlitz3.ab3@6171>    ADD.l D3,D6
00024186 <AmiBlitz3.ab3@6172>   MOVE.l A2,D2
00024188 <AmiBlitz3.ab3@6173>   MOVE.l D7,D1
0002418E <AmiBlitz3.ab3@6174>   MOVEA.l _dosbase,A6
00024192 <AmiBlitz3.ab3@6175>    JSR _Write(A6)
00024194 <AmiBlitz3.ab3@6176>   MOVE.l (A7)+,(A2)
00024196 <AmiBlitz3.ab3@6177>  RTS
00024198 <AmiBlitz3.ab3@6180>   MOVE.l D6,D2
0002419C <AmiBlitz3.ab3@6181> BRA.w addhunkoffset
000241A0 <AmiBlitz3.ab3@6185>     CMPA.w #$0,A2
000241A4 <AmiBlitz3.ab3@6186>      BEQ.w 'done
000241AA <AmiBlitz3.ab3@6187>     MOVEA.l newtypebase,A1
000241AC <AmiBlitz3.ab3@6188>     MOVEQ.l #$00,D1
000241B0 <AmiBlitz3.ab3@6191>       CMPA.w #$0,A1
000241B4 <AmiBlitz3.ab3@6192>       BEQ.w 'found
000241B8 <AmiBlitz3.ab3@6193>       CMPA.l $A(A2),A1
000241BC <AmiBlitz3.ab3@6194>        BEQ.w 'found
000241BE <AmiBlitz3.ab3@6195>       ADDQ.w #1,D1
000241C0 <AmiBlitz3.ab3@6196>       MOVEA.l (A1),A1
000241C4 <AmiBlitz3.ab3@6197>  BRA.w 'loop2
000241C8 <AmiBlitz3.ab3@6200>     MOVE.w $A(A2),-(A7)
000241CC <AmiBlitz3.ab3@6201>     MOVE.w D1,$A(A2)
000241D0 <AmiBlitz3.ab3@6202>      BSR.w writeitem
000241D4 <AmiBlitz3.ab3@6203>     MOVE.w (A7)+,$A(A2)
000241D6 <AmiBlitz3.ab3@6204>     MOVEA.l (A2),A2
000241DA <AmiBlitz3.ab3@6205>  BRA.w writeoffs
000241DC <AmiBlitz3.ab3@6208> RTS
000241DE <AmiBlitz3.ab3@6212>   MOVEQ.l #$00,D0
000241E2 <AmiBlitz3.ab3@6215>   CMPA.w #$0,A2
000241E6 <AmiBlitz3.ab3@6216>    BEQ.w 'done
000241E8 <AmiBlitz3.ab3@6217>   ADDQ.w #1,D0
000241EA <AmiBlitz3.ab3@6218>   MOVEA.l (A2),A2
000241EE <AmiBlitz3.ab3@6219>  BRA.w 'loop
000241F4 <AmiBlitz3.ab3@6222>   MOVE.w D0,temp1
000241F6 <AmiBlitz3.ab3@6223>   MOVE.l D7,D1
000241FC <AmiBlitz3.ab3@6224>   MOVE.l #temp1,D2
000241FE <AmiBlitz3.ab3@6225>   MOVEQ.l #$02,D3
00024200 <AmiBlitz3.ab3@6226>   ADDQ.l #2,D6
00024206 <AmiBlitz3.ab3@6227>   MOVEA.l _dosbase,A6
0002420A <AmiBlitz3.ab3@6228> JMP _Write(A6)
00024210 <AmiBlitz3.ab3@6232>    TST.b resdisable
00024214 <AmiBlitz3.ab3@6233>    BEQ 'l1
0002421A <AmiBlitz3.ab3@6234>    MOVE.l currentmacroaddr,a3
00024220 <AmiBlitz3.ab3@6235>    CMP.l #0,a3
00024224 <AmiBlitz3.ab3@6236>    BEQ 'l1
00024226 <AmiBlitz3.ab3@6237>    MOVE.l (a3),a3
0002422A <AmiBlitz3.ab3@6238>  BRA 'l2
00024230 <AmiBlitz3.ab3@6241>   MOVEA.l macrobase,A3                                     ;??begin org code??
00024232 <AmiBlitz3.ab3@6244>   MOVEA.l A3,A2
00024236 <AmiBlitz3.ab3@6245>   BSR.w countem
0002423A <AmiBlitz3.ab3@6248>    CMPA.w #$0,A3
0002423E <AmiBlitz3.ab3@6249>    BEQ.w 'done
00024240 <AmiBlitz3.ab3@6250>   MOVE.l D6,D5
00024242 <AmiBlitz3.ab3@6251>   MOVE.l (A3),-(A7)
00024246 <AmiBlitz3.ab3@6252>   MOVE.l $4(A3),-(A7)
00024248 <AmiBlitz3.ab3@6253>   MOVEQ.l #$00,D3
0002424C <AmiBlitz3.ab3@6254>   MOVE.b $C(A3),D3
0002424E <AmiBlitz3.ab3@6255>   ADDQ.w #1,D3
00024252 <AmiBlitz3.ab3@6256>   BCLR #$0,D3
00024254 <AmiBlitz3.ab3@6257>   ADD.l D3,D6                                              ;add len of struct
00024258 <AmiBlitz3.ab3@6258>   TST.w $8(A3)
0002425C <AmiBlitz3.ab3@6259>    BEQ.w 'notext
00024260 <AmiBlitz3.ab3@6260>   MOVE.l D6,$4(A3)
00024262 <AmiBlitz3.ab3@6261>   MOVE.l D5,D2
00024264 <AmiBlitz3.ab3@6262>   ADDQ.l #4,D2
00024268 <AmiBlitz3.ab3@6263>    BSR.w addhunkoffset
0002426A <AmiBlitz3.ab3@6266>   MOVEQ.l #$00,D4
0002426E <AmiBlitz3.ab3@6267>   MOVE.w $8(A3),D4
00024270 <AmiBlitz3.ab3@6268>   ADDQ.w #1,D4
00024274 <AmiBlitz3.ab3@6269>   BCLR #$0,D4
00024276 <AmiBlitz3.ab3@6270>   ADD.l D4,D6
00024278 <AmiBlitz3.ab3@6271>   TST.l (A3)
0002427C <AmiBlitz3.ab3@6272>    BEQ.w 'nomore
0002427E <AmiBlitz3.ab3@6273>   MOVE.l D6,(A3)
00024280 <AmiBlitz3.ab3@6274>   MOVE.l D5,D2
00024284 <AmiBlitz3.ab3@6275>    BSR.w addhunkoffset
00024286 <AmiBlitz3.ab3@6278>   MOVE.l A3,D2
00024288 <AmiBlitz3.ab3@6279>   MOVE.l D7,D1
0002428E <AmiBlitz3.ab3@6281>    MOVEA.l _dosbase,A6
00024292 <AmiBlitz3.ab3@6282>    JSR _Write(a6)
00024294 <AmiBlitz3.ab3@6283>   TST.l D4
00024298 <AmiBlitz3.ab3@6284>    BEQ.w 'skip
0002429A <AmiBlitz3.ab3@6285>   MOVE.l (A7),D2
0002429C <AmiBlitz3.ab3@6286>   MOVE.l D4,D3
0002429E <AmiBlitz3.ab3@6287>   MOVE.l D7,D1
000242A4 <AmiBlitz3.ab3@6289>     MOVEA.l _dosbase,A6
000242A8 <AmiBlitz3.ab3@6290>    JSR _Write(A6)
000242AC <AmiBlitz3.ab3@6293>   MOVE.l (A7)+,$4(A3)
000242AE <AmiBlitz3.ab3@6294>   MOVE.l (A7)+,(A3)
000242B0 <AmiBlitz3.ab3@6295>   MOVEA.l (A3),A3
000242B4 <AmiBlitz3.ab3@6296> BRA.w 'loop
000242B6 <AmiBlitz3.ab3@6299> RTS
000242BC <AmiBlitz3.ab3@6303>   TST.b resdisable
000242C0 <AmiBlitz3.ab3@6304>   BEQ 'l1
000242C6 <AmiBlitz3.ab3@6305>   MOVE.l lastrestype,a3
000242CC <AmiBlitz3.ab3@6306>   CMP.l #0,a3
000242D0 <AmiBlitz3.ab3@6307>   BEQ 'l1
000242D2 <AmiBlitz3.ab3@6308>   MOVE.l (a3),a3
000242D6 <AmiBlitz3.ab3@6309>  BRA 'l2
000242DC <AmiBlitz3.ab3@6312>   MOVEA.l newtype_string,A3
000242DE <AmiBlitz3.ab3@6315>   MOVEA.l A3,A2
000242E2 <AmiBlitz3.ab3@6316>    BSR.w countem
000242E6 <AmiBlitz3.ab3@6319>    CMPA.w #$0,A3
000242EA <AmiBlitz3.ab3@6320>    BEQ.w 'done
000242EC <AmiBlitz3.ab3@6321>   MOVE.l D6,-(A7)
000242F0 <AmiBlitz3.ab3@6322>   MOVEA.l $4(A3),A2
000242F2 <AmiBlitz3.ab3@6323>   MOVEQ.l #$0E,D5
000242F6 <AmiBlitz3.ab3@6324>    BSR.w writeoffs
000242F8 <AmiBlitz3.ab3@6325>   MOVE.l (A7)+,D0
000242FC <AmiBlitz3.ab3@6326>   MOVE.l $4(A3),-(A7)
00024300 <AmiBlitz3.ab3@6327>   MOVE.l D0,$4(A3)
00024302 <AmiBlitz3.ab3@6328>   MOVE.l D6,D2
00024304 <AmiBlitz3.ab3@6329>   ADDQ.l #4,D2
00024308 <AmiBlitz3.ab3@6330>    BSR.w addhunkoffset
0002430A <AmiBlitz3.ab3@6331>   MOVEQ.l #$00,D3
0002430E <AmiBlitz3.ab3@6332>   MOVE.b $A(A3),D3
00024310 <AmiBlitz3.ab3@6333>   ADDQ.w #1,D3
00024314 <AmiBlitz3.ab3@6334>   BCLR #$0,D3
00024316 <AmiBlitz3.ab3@6335>   ADD.l D3,D6
00024318 <AmiBlitz3.ab3@6336>   MOVE.l A3,D2
0002431A <AmiBlitz3.ab3@6337>   MOVE.l D7,D1
00024320 <AmiBlitz3.ab3@6339>     MOVEA.l _dosbase,A6
00024324 <AmiBlitz3.ab3@6340>     JSR _Write(A6)
00024328 <AmiBlitz3.ab3@6341>   MOVE.l (A7)+,$4(A3)
0002432A <AmiBlitz3.ab3@6342>   MOVEA.l (A3),A3
0002432E <AmiBlitz3.ab3@6343>  BRA.w 'loop
00024330 <AmiBlitz3.ab3@6346> RTS
00024336 <AmiBlitz3.ab3@6350>    TST.b resdisable
0002433A <AmiBlitz3.ab3@6351>    BEQ 'l1
00024340 <AmiBlitz3.ab3@6352>    MOVE.l currentlabeladdr,a2
00024346 <AmiBlitz3.ab3@6353>    CMP.l #0,a2
0002434A <AmiBlitz3.ab3@6354>    BEQ 'l1
0002434C <AmiBlitz3.ab3@6355>    MOVE.l (a2),a2
00024350 <AmiBlitz3.ab3@6356>  BRA 'l2
00024356 <AmiBlitz3.ab3@6359>    MOVEA.l labelbase,A2
00024358 <AmiBlitz3.ab3@6362>    MOVEQ.l #$00,D0
0002435C <AmiBlitz3.ab3@6365>    CMPA.w #$0,A2
00024360 <AmiBlitz3.ab3@6366>    BEQ.w 'done
00024368 <AmiBlitz3.ab3@6367>   CMPI.l #$1,$4(A2)
0002436C <AmiBlitz3.ab3@6368>    BNE.w 'next
0002436E <AmiBlitz3.ab3@6369>   ADDQ.w #1,D0
00024370 <AmiBlitz3.ab3@6372>   MOVEA.l (A2),A2
00024374 <AmiBlitz3.ab3@6373>  BRA.w 'loop
0002437A <AmiBlitz3.ab3@6376>   MOVE.w D0,temp1
0002437C <AmiBlitz3.ab3@6377>   MOVE.l D7,D1
00024382 <AmiBlitz3.ab3@6378>   MOVE.l #temp1,D2
00024384 <AmiBlitz3.ab3@6379>   MOVEQ.l #$02,D3
00024386 <AmiBlitz3.ab3@6380>   ADDQ.l #2,D6
0002438C <AmiBlitz3.ab3@6382>     MOVEA.l _dosbase,A6
00024390 <AmiBlitz3.ab3@6383>     JSR _Write(A6)
00024396 <AmiBlitz3.ab3@6384>    TST.b resdisable
0002439A <AmiBlitz3.ab3@6385>    BEQ 'done_l1
000243A0 <AmiBlitz3.ab3@6386>    MOVE.l currentlabeladdr,a2
000243A6 <AmiBlitz3.ab3@6387>    CMP.l #0,a2
000243AA <AmiBlitz3.ab3@6388>    BEQ 'done_l1
000243AC <AmiBlitz3.ab3@6389>    MOVE.l (a2),a2
000243B0 <AmiBlitz3.ab3@6390>  BRA 'loop2
000243B6 <AmiBlitz3.ab3@6393>    MOVEA.l labelbase,A2                                    ;write resident labels
000243BA <AmiBlitz3.ab3@6396>    CMPA.w #$0,A2
000243BE <AmiBlitz3.ab3@6397>    BEQ.w 'done2
000243C6 <AmiBlitz3.ab3@6398>   CMPI.l #$1,$4(A2)
000243CA <AmiBlitz3.ab3@6399>    BNE.w 'next2
000243CC <AmiBlitz3.ab3@6400>    MOVEQ.l #$00,D3
000243D0 <AmiBlitz3.ab3@6401>   MOVE.b $12(A2),D3                                        ;length
000243D2 <AmiBlitz3.ab3@6402>   ADDQ.w #1,D3
000243D6 <AmiBlitz3.ab3@6403>   BCLR #$0,D3
000243D8 <AmiBlitz3.ab3@6404>   MOVE.l D6,D2
000243DA <AmiBlitz3.ab3@6405>   ADD.l D3,D6
000243DC <AmiBlitz3.ab3@6408>   MOVE.l (A2),-(A7)
000243DE <AmiBlitz3.ab3@6409>   TST.l (A2)
000243E2 <AmiBlitz3.ab3@6410>    BEQ.w 'nonext
000243E4 <AmiBlitz3.ab3@6411>   MOVE.l D6,(A2)
000243E8 <AmiBlitz3.ab3@6412>    BSR.w addhunkoffset
000243EA <AmiBlitz3.ab3@6415>   MOVE.l A2,D2
000243EC <AmiBlitz3.ab3@6416>   MOVE.l D7,D1
000243F2 <AmiBlitz3.ab3@6418>     MOVEA.l _dosbase,A6
000243F6 <AmiBlitz3.ab3@6419>     JSR _Write(A6)
000243F8 <AmiBlitz3.ab3@6420>   MOVE.l (A7)+,(A2)
000243FA <AmiBlitz3.ab3@6423>   MOVEA.l (A2),A2
000243FE <AmiBlitz3.ab3@6424>  BRA.w 'loop2
00024400 <AmiBlitz3.ab3@6427> RTS
0002442A <AmiBlitz3.ab3@6432>    !basic
00024430 <AmiBlitz3.ab3@6433>     MOVE.l ptr_resfile,d0
00024440 <AmiBlitz3.ab3@6434>     resfileP.l = Peek.l(?ptr_resfile)
0002444A <AmiBlitz3.ab3@6435>     If resfileP
00024472 <AmiBlitz3.ab3@6436>       resfile$ = Peek.s(resfileP)
000244BE <AmiBlitz3.ab3@6437>       tests.b = Instr(resfile$,"/")
0002450A <AmiBlitz3.ab3@6438>       testc.b = Instr(resfile$,":")
0002452C <AmiBlitz3.ab3@6439>       If tests=0 AND testc=0
000245AC <AmiBlitz3.ab3@6440>         resfile$ = dos_AddPart{my_residentsdir$,resfile$}
000245BE <AmiBlitz3.ab3@6441>         Poke.l ?ptr_resfile,&resfile$
000245C4 <AmiBlitz3.ab3@6443>     Else
000245FE <AmiBlitz3.ab3@6444>       error{"INTERNAL: Invalid pointer in ptr_resfile!"}
0002461C <AmiBlitz3.ab3@6446>    !asm
0002461E <AmiBlitz3.ab3@6447> RTS
00024624 <AmiBlitz3.ab3@6452> 
0002462A <AmiBlitz3.ab3@6453>   MOVE.l A7,errstack
00024634 <AmiBlitz3.ab3@6457>   MOVE.l #'next,errcont
0002463C <AmiBlitz3.ab3@6458>   MOVE.w #$FFFF,ezerr         ; was -1
00024640 <AmiBlitz3.ab3@6460>   BSR.w Aclearallvars
00024644 <AmiBlitz3.ab3@6461>   BSR.w free_residents
0002464A <AmiBlitz3.ab3@6463>   LEA residents_table,A5
0002464C <AmiBlitz3.ab3@6464>   MOVEQ.l #$07,D6
0002464E <AmiBlitz3.ab3@6467>     TST.b (A5)
00024652 <AmiBlitz3.ab3@6468>     BEQ.w 'next
00024658 <AmiBlitz3.ab3@6469>     MOVE.l A5,ptr_resfile
0002465C <AmiBlitz3.ab3@6470>     BSR check_residentpath
00024662 <AmiBlitz3.ab3@6471>     MOVE.l ptr_resfile,d1
00024668 <AmiBlitz3.ab3@6472>     MOVEA.l _dosbase,A6
0002466C <AmiBlitz3.ab3@6473>     JSR _LoadSeg(A6)
00024670 <AmiBlitz3.ab3@6474>     MOVE.l D0,$40(A5)
00024674 <AmiBlitz3.ab3@6475>     BNE.w 'yeah
00024678 <AmiBlitz3.ab3@6477>     BSR.w reserr
0002467A <AmiBlitz3.ab3@6481>     MOVEA.l D0,A3
0002467C <AmiBlitz3.ab3@6482>     ADDA.l A3,A3
0002467E <AmiBlitz3.ab3@6483>     ADDA.l A3,A3
00024680 <AmiBlitz3.ab3@6484>     ADDQ.w #4,A3                                           ;start of res
00024684 <AmiBlitz3.ab3@6486>     BSR.w fixtypes
00024688 <AmiBlitz3.ab3@6487>     BSR.w fixmacs                                        ;add macros to list
0002468C <AmiBlitz3.ab3@6488>     BSR.w fixconsts                                        ;read labels
00024690 <AmiBlitz3.ab3@6491>     LEA ResidentEntryStep(A5),A5       ;$44
00024694 <AmiBlitz3.ab3@6492>   DBF D6,'loop
0002469E <AmiBlitz3.ab3@6497>   MOVE.l #free_residents,errcont
000246A4 <AmiBlitz3.ab3@6499>   MOVEA.l newtype_string,A3
000246A6 <AmiBlitz3.ab3@6500>   MOVEQ.l #$0B,D7
000246AA <AmiBlitz3.ab3@6501>   BSR.w checkclash
000246B0 <AmiBlitz3.ab3@6503>   MOVEA.l macrobase,A3
000246B2 <AmiBlitz3.ab3@6504>   MOVEQ.l #$d,D7
000246B6 <AmiBlitz3.ab3@6505>   BSR.w checkclash
000246BC <AmiBlitz3.ab3@6507>   MOVEA.l firstconst,A3
000246BE <AmiBlitz3.ab3@6508>   MOVEQ.l #$19,D7
000246C2 <AmiBlitz3.ab3@6509>   BSR.w checkclash
000246C4 <AmiBlitz3.ab3@6512> RTS
000246C6 <AmiBlitz3.ab3@6516>   MOVEA.l A3,A4
000246CA <AmiBlitz3.ab3@6519>     CMPA.w #$0,A4
000246CE <AmiBlitz3.ab3@6520>     BEQ.w 'done
000246D4 <AmiBlitz3.ab3@6522>     LEA ptr_parameterstore,A0
000246D8 <AmiBlitz3.ab3@6523>     LEA $0(A4,D7.W),A1
000246DA <AmiBlitz3.ab3@6524>     MOVEQ.l #-$01,D2
000246DC <AmiBlitz3.ab3@6527>       ADDQ.w #1,D2
000246DE <AmiBlitz3.ab3@6528>       MOVE.b (A1)+,(A0)+
000246E2 <AmiBlitz3.ab3@6529>     BNE.w 'loop2
000246E4 <AmiBlitz3.ab3@6530>     MOVEA.l A3,A2
000246E8 <AmiBlitz3.ab3@6533>     BSR.w findlab
000246EC <AmiBlitz3.ab3@6534>     BNE.w 'next                                  ;not found
000246EE <AmiBlitz3.ab3@6535>     CMPA.l A2,A4
000246F2 <AmiBlitz3.ab3@6537>     BEQ.w 'l1
000246F4 <AmiBlitz3.ab3@6538>     MOVE.l a1,a5
000246F8 <AmiBlitz3.ab3@6540>  BRA clasherr      ; was bne
000246FC <AmiBlitz3.ab3@6543>  BRA.w 'more
000246FE <AmiBlitz3.ab3@6546>     MOVEA.l (A4),A4
00024702 <AmiBlitz3.ab3@6547>  BRA.w 'loop
00024704 <AmiBlitz3.ab3@6550> RTS
0002470A <AmiBlitz3.ab3@6554>   MOVEA.l _dosbase,A6
00024710 <AmiBlitz3.ab3@6556>   LEA newtype_string,A0
00024716 <AmiBlitz3.ab3@6557>   MOVE.l A0,lastrestype
00024718 <AmiBlitz3.ab3@6558>   CLR.l (A0)
0002471E <AmiBlitz3.ab3@6560>   LEA macrobase,A0
00024724 <AmiBlitz3.ab3@6561>   MOVE.l A0,currentmacroaddr
00024726 <AmiBlitz3.ab3@6562>   CLR.l (A0)
0002472C <AmiBlitz3.ab3@6564>   LEA labelbase,A0
00024732 <AmiBlitz3.ab3@6565>   MOVE.l A0,currentlabeladdr
00024734 <AmiBlitz3.ab3@6566>   CLR.l (A0)
0002473A <AmiBlitz3.ab3@6567>   CLR.w rescnt
00024772 <AmiBlitz3.ab3@6571>   !ComData_SetB{comByte_DebugMode,debugmode}
00024778 <AmiBlitz3.ab3@6574>   LEA residents_table,A2
0002477A <AmiBlitz3.ab3@6575>   MOVEQ.l #$07,D2
0002477E <AmiBlitz3.ab3@6578>      MOVE.l $40(A2),D1
00024782 <AmiBlitz3.ab3@6579>      BEQ.w 'next
00024786 <AmiBlitz3.ab3@6580>       CLR.l $40(A2)
0002478C <AmiBlitz3.ab3@6581>       MOVEA.l _dosbase,A6
00024790 <AmiBlitz3.ab3@6582>       JSR _UnLoadSeg(A6)
00024794 <AmiBlitz3.ab3@6585>      LEA ResidentEntryStep(A2),A2   ; $44
00024798 <AmiBlitz3.ab3@6586>  DBF D2,'loop
0002479A <AmiBlitz3.ab3@6588> RTS
0002479C <AmiBlitz3.ab3@6592>   MOVE.w (A3)+,D1
000247A0 <AmiBlitz3.ab3@6593>   BEQ.w 'done
000247A6 <AmiBlitz3.ab3@6594>   MOVEA.l currentlabeladdr,A2
000247A8 <AmiBlitz3.ab3@6595>   MOVE.l A3,(A2)
000247AA <AmiBlitz3.ab3@6596>   SUBQ.w #1,D1
000247AC <AmiBlitz3.ab3@6599>     MOVEA.l A3,A2
000247AE <AmiBlitz3.ab3@6600>     MOVEA.l (A3),A3
000247B2 <AmiBlitz3.ab3@6601>   DBF D1,'loop
000247B4 <AmiBlitz3.ab3@6604>   CLR.l (a2)                                               ;bugfix for object
000247BA <AmiBlitz3.ab3@6606>   MOVE.l A2,currentlabeladdr
000247BC <AmiBlitz3.ab3@6607>   MOVEA.l A2,A3
000247BE <AmiBlitz3.ab3@6608>   MOVEQ.l #$00,D0
000247C2 <AmiBlitz3.ab3@6609>   MOVE.b $12(A3),D0
000247C4 <AmiBlitz3.ab3@6610>   ADDQ.w #1,D0
000247C8 <AmiBlitz3.ab3@6611>   BCLR #$0,D0
000247CA <AmiBlitz3.ab3@6612>   ADDA.w D0,A3
000247CC <AmiBlitz3.ab3@6615> RTS
000247CE <AmiBlitz3.ab3@6619>   MOVE.w (A3)+,D1
000247D2 <AmiBlitz3.ab3@6620>   BEQ.w 'done
000247D8 <AmiBlitz3.ab3@6621>   MOVEA.l currentmacroaddr,A2
000247DA <AmiBlitz3.ab3@6622>   MOVE.l A3,(A2)
000247DC <AmiBlitz3.ab3@6623>   SUBQ.w #1,D1
000247DE <AmiBlitz3.ab3@6626>     MOVEA.l A3,A2
000247E0 <AmiBlitz3.ab3@6627>     MOVEA.l (A3),A3
000247E4 <AmiBlitz3.ab3@6628>   DBF D1,'loop
000247EA <AmiBlitz3.ab3@6630>   MOVE.l A2,currentmacroaddr
000247EC <AmiBlitz3.ab3@6631>   MOVEA.l A2,A3
000247EE <AmiBlitz3.ab3@6632>   MOVEQ.l #$00,D0
000247F2 <AmiBlitz3.ab3@6633>   MOVE.b $C(A3),D0
000247F4 <AmiBlitz3.ab3@6634>   ADDQ.w #1,D0
000247F8 <AmiBlitz3.ab3@6635>   BCLR #$0,D0
000247FC <AmiBlitz3.ab3@6636>   MOVE.w $8(A3),D1
000247FE <AmiBlitz3.ab3@6637>   ADDQ.w #1,D1
00024802 <AmiBlitz3.ab3@6638>   BCLR #$0,D1
00024804 <AmiBlitz3.ab3@6639>   ADDA.w D0,A3
00024806 <AmiBlitz3.ab3@6640>   ADDA.w D1,A3
00024808 <AmiBlitz3.ab3@6643> RTS
0002480A <AmiBlitz3.ab3@6648>   MOVE.w (A3)+,D1            ;number of types to do
0002480E <AmiBlitz3.ab3@6649>   BEQ.w 'done
00024810 <AmiBlitz3.ab3@6650>   MOVE.w D1,-(A7)
00024812 <AmiBlitz3.ab3@6651>   SUBQ.w #1,D1
00024818 <AmiBlitz3.ab3@6652>   MOVEA.l lastrestype,A2
0002481A <AmiBlitz3.ab3@6653>   MOVE.l A2,-(A7)
0002481C <AmiBlitz3.ab3@6656>       MOVE.l (A3),D0          ;skip through offsets
00024820 <AmiBlitz3.ab3@6657>       BEQ.w 'loopme
00024822 <AmiBlitz3.ab3@6658>       MOVEA.l D0,A3
00024826 <AmiBlitz3.ab3@6659>  BRA.w 'loop
0002482A <AmiBlitz3.ab3@6662>       MOVE.b $E(A3),D0
0002482C <AmiBlitz3.ab3@6663>       ADDQ.w #1,D0
00024830 <AmiBlitz3.ab3@6664>       BCLR #$0,D0
00024832 <AmiBlitz3.ab3@6665>       ADDA.w D0,A3            ;a3=type
00024834 <AmiBlitz3.ab3@6666>       MOVE.l A3,(A2)          ;link
00024836 <AmiBlitz3.ab3@6667>       MOVEA.l A3,A2
00024838 <AmiBlitz3.ab3@6668>       MOVEQ.l #$00,D0
0002483C <AmiBlitz3.ab3@6669>       MOVE.b $A(A3),D0
0002483E <AmiBlitz3.ab3@6670>       ADDQ.w #1,D0
00024842 <AmiBlitz3.ab3@6671>       BCLR #$0,D0
00024844 <AmiBlitz3.ab3@6672>       ADDA.w D0,A3            ;next offset
00024848 <AmiBlitz3.ab3@6673>   DBF D1,'loop
0002484A <AmiBlitz3.ab3@6677>   MOVEA.l (A7)+,A0
0002484C <AmiBlitz3.ab3@6678>   MOVEA.l (A0),A0
00024850 <AmiBlitz3.ab3@6681>     CMPA.w #$0,A0
00024854 <AmiBlitz3.ab3@6682>     BEQ.w 'fdone
00024858 <AmiBlitz3.ab3@6683>     MOVEA.l $4(A0),A1          ;first offset!
0002485C <AmiBlitz3.ab3@6686>     CMPA.w #$0,A1
00024860 <AmiBlitz3.ab3@6687>     BEQ.w 'fofd
00024864 <AmiBlitz3.ab3@6689>     MOVE.w $A(A1),D0           ;number of type
0002486A <AmiBlitz3.ab3@6690>     MOVEA.l newtypebase,A4
0002486E <AmiBlitz3.ab3@6691>     CMP.w #$7,D0
00024872 <AmiBlitz3.ab3@6692>     BCS.w 'fsys
00024878 <AmiBlitz3.ab3@6693>     SUB.w rescnt,D0
0002487A <AmiBlitz3.ab3@6696>     SUBQ.w #1,D0
0002487E <AmiBlitz3.ab3@6697>     BMI.w 'fdone2
00024880 <AmiBlitz3.ab3@6700>        MOVEA.l (A4),A4
00024884 <AmiBlitz3.ab3@6701>   DBF D0,'floop3
00024888 <AmiBlitz3.ab3@6704>     MOVE.l A4,$A(A1)
0002488A <AmiBlitz3.ab3@6705>     MOVEA.l (A1),A1
0002488E <AmiBlitz3.ab3@6706>  BRA.w 'floop2
00024890 <AmiBlitz3.ab3@6709>     MOVEA.l (A0),A0
00024894 <AmiBlitz3.ab3@6710>  BRA.w 'floop
00024896 <AmiBlitz3.ab3@6713>   MOVE.w (A7)+,D0
0002489C <AmiBlitz3.ab3@6714>   ADD.w D0,rescnt
000248A2 <AmiBlitz3.ab3@6715>   MOVE.l A2,lastrestype
000248A4 <AmiBlitz3.ab3@6718> RTS
000248AA <AmiBlitz3.ab3@6725>   LEA tokens,A0
000248AE <AmiBlitz3.ab3@6726>   MOVE.w #$003A,D0                                         ; $003A : 58 dec
000248B0 <AmiBlitz3.ab3@6729>     MOVEA.l (A0),A0
000248B4 <AmiBlitz3.ab3@6730>   DBF D0,'loop
000248BA <AmiBlitz3.ab3@6732>   MOVEA.l #asmpnts,A1                                      ;create tokentab
000248BE <AmiBlitz3.ab3@6733>   MOVE.w #$0076,D0        ; was #tnum-fnum-1,                                 ; $0076 : 118 dec
000248C2 <AmiBlitz3.ab3@6736>       LEA $6(A0),A2
000248C4 <AmiBlitz3.ab3@6739>         TST.b (A2)+
000248C8 <AmiBlitz3.ab3@6740>       BNE.w 'loop3
000248CA <AmiBlitz3.ab3@6743>         TST.b (A2)+
000248CE <AmiBlitz3.ab3@6744>       BNE.w 'loop4
000248D0 <AmiBlitz3.ab3@6746>       ADDQ.w #1,A2
000248D2 <AmiBlitz3.ab3@6747>       EXG.l D1,A2
000248D6 <AmiBlitz3.ab3@6748>       BCLR #$0,D1
000248D8 <AmiBlitz3.ab3@6749>       EXG.l D1,A2
000248DA <AmiBlitz3.ab3@6750>       MOVE.l A2,(A1)+
000248DC <AmiBlitz3.ab3@6751>       MOVEA.l (A0),A0
000248E0 <AmiBlitz3.ab3@6752>   DBF D0,'loop2
000248E2 <AmiBlitz3.ab3@6753> RTS
000248E6 <AmiBlitz3.ab3@6757>   BSR.w asmconst
000248E8 <AmiBlitz3.ab3@6758>   MOVEQ.l #$0B,D5
000248EA <AmiBlitz3.ab3@6759> RTS
000248EC <AmiBlitz3.ab3@6762> unmove:  Ds.w 1
000248F0 <AmiBlitz3.ab3@6766>   MOVE.w #$48E7,D1
000248F4 <AmiBlitz3.ab3@6767>   BSR.w writeword                                          ;movem.l -(a7)
000248F8 <AmiBlitz3.ab3@6768>   MOVE.w #$000F,D2
000248FA <AmiBlitz3.ab3@6769>   SUB.w D4,D2
000248FC <AmiBlitz3.ab3@6770>   MOVEQ.l #-$01,D1
000248FE <AmiBlitz3.ab3@6771>   BCLR D2,D1
00024902 <AmiBlitz3.ab3@6772>   BSR.w writeword
00024904 <AmiBlitz3.ab3@6773>   MOVEQ.l #-$01,D1
00024906 <AmiBlitz3.ab3@6774>   BCLR D4,D1
0002490C <AmiBlitz3.ab3@6775>   MOVE.w D1,unmove
0002490E <AmiBlitz3.ab3@6776> RTS
00024912 <AmiBlitz3.ab3@6780>   MOVE.w #$4CDF,D1
00024916 <AmiBlitz3.ab3@6781>   BSR.w writeword
0002491A <AmiBlitz3.ab3@6782>   MOVE.w unmove(PC),D1
0002491E <AmiBlitz3.ab3@6783>  BRA.w writeword
00024922 <AmiBlitz3.ab3@6796>   BSR.w get_reg2
00024926 <AmiBlitz3.ab3@6797>   CMP.w #$2C,D0                                            ;#','
0002492A <AmiBlitz3.ab3@6798>    BNE.w syntaxerr
00024930 <AmiBlitz3.ab3@6799>   MOVE.l #$48E7FFFE,D1                                     ;movem to stack
00024934 <AmiBlitz3.ab3@6800>    BSR.w writelong
00024936 <AmiBlitz3.ab3@6801>   MOVE.w D4,D1
0002493A <AmiBlitz3.ab3@6802>   ORI.w #$2F00,D1
0002493E <AmiBlitz3.ab3@6803>    BSR.w writeword
00024942 <AmiBlitz3.ab3@6805>    BSR.w get1bytemain
00024946 <AmiBlitz3.ab3@6806>    BSR.w getparameter
0002494A <AmiBlitz3.ab3@6807>    BSR.w fetchvars
0002494E <AmiBlitz3.ab3@6808>    BSR.w calcvar
00024952 <AmiBlitz3.ab3@6809>    BTST #$E,D2
00024956 <AmiBlitz3.ab3@6810>    BEQ.w 'notp
0002495A <AmiBlitz3.ab3@6813>    MOVE.b #$3,D2
0002495E <AmiBlitz3.ab3@6814>  BRA.w 'pd
00024960 <AmiBlitz3.ab3@6817>   TST.b D2
00024964 <AmiBlitz3.ab3@6818>    BEQ.w 'issa
00024968 <AmiBlitz3.ab3@6819>   CMP.b #$7,D2
0002496C <AmiBlitz3.ab3@6820>    BEQ.w 'issa
00024970 <AmiBlitz3.ab3@6823>   BTST #$F,D2
00024974 <AmiBlitz3.ab3@6824>    BNE.w 'nsimp
00024978 <AmiBlitz3.ab3@6825>   MOVE.w #$45ED,D1                                         ;lea x(a5),a2
0002497C <AmiBlitz3.ab3@6826>    BSR.w writeword
0002497E <AmiBlitz3.ab3@6827>   MOVE.w D3,D1
00024982 <AmiBlitz3.ab3@6828>    BSR.w writeword
00024986 <AmiBlitz3.ab3@6831>   MOVE.w #$201F,D1                                         ;move.l (a7)+,d0
0002498A <AmiBlitz3.ab3@6832>    BSR.w writeword
0002498E <AmiBlitz3.ab3@6833>   MOVE.w #$1480,D1
00024992 <AmiBlitz3.ab3@6834>   CMP.b #$1,D2
00024996 <AmiBlitz3.ab3@6835>    BEQ.w 'pg
0002499A <AmiBlitz3.ab3@6836>   EORI.w #$3000,D1
0002499E <AmiBlitz3.ab3@6837>   CMP.b #$2,D2
000249A2 <AmiBlitz3.ab3@6838>    BNE.w 'pg
000249A6 <AmiBlitz3.ab3@6839>   ORI.w #$1000,D1
000249AA <AmiBlitz3.ab3@6842>   BSR.w writeword
000249B0 <AmiBlitz3.ab3@6843>   MOVE.l #$4CDF7FFF,D1
000249B4 <AmiBlitz3.ab3@6844> BRA.w writelong
000249B8 <AmiBlitz3.ab3@6848>   BSR.w get_reg2
000249BC <AmiBlitz3.ab3@6849>   CMP.w #$2C,D0     ;','
000249C0 <AmiBlitz3.ab3@6850>    BNE.w syntaxerr
000249C4 <AmiBlitz3.ab3@6851>    BSR.w regmovems
000249C6 <AmiBlitz3.ab3@6852>   MOVE.w D4,-(A7)
000249C8 <AmiBlitz3.ab3@6853>   MOVEQ.l #$03,D2   ;get a long
000249CC <AmiBlitz3.ab3@6854>    BSR.w eval
000249CE <AmiBlitz3.ab3@6855>   MOVE.w (A7)+,D1
000249D2 <AmiBlitz3.ab3@6856>    BEQ.w 'done
000249D6 <AmiBlitz3.ab3@6857>   CMP.w #$8,D1
000249DA <AmiBlitz3.ab3@6858>    BCC.w 'addreg
000249DC <AmiBlitz3.ab3@6859>   LSL.w #8,D1
000249DE <AmiBlitz3.ab3@6860>   LSL.w #1,D1
000249E2 <AmiBlitz3.ab3@6861>   ORI.w #$2000,D1
000249E6 <AmiBlitz3.ab3@6862>    BSR.w writeword
000249EA <AmiBlitz3.ab3@6863>  BRA.w 'done
000249EC <AmiBlitz3.ab3@6866>   SUBQ.w #8,D1
000249EE <AmiBlitz3.ab3@6867>   LSL.w #8,D1
000249F0 <AmiBlitz3.ab3@6868>   LSL.w #1,D1
000249F4 <AmiBlitz3.ab3@6869>   ORI.w #$2040,D1
000249F8 <AmiBlitz3.ab3@6870>   BSR.w writeword
000249FC <AmiBlitz3.ab3@6873> BRA.w dounmove
00024A00 <AmiBlitz3.ab3@6878>   BSR.w get1bytemain
00024A04 <AmiBlitz3.ab3@6881>   ORI.w #$20,D0
00024A08 <AmiBlitz3.ab3@6882>   CMP.w #$64,D0       ;'d'
00024A0C <AmiBlitz3.ab3@6883>    BEQ.w getan3
00024A10 <AmiBlitz3.ab3@6884>   CMP.w #$61,D0       ;'a'
00024A14 <AmiBlitz3.ab3@6885>    BNE.w syntaxerr
00024A18 <AmiBlitz3.ab3@6886>    BSR.w getan3
00024A1A <AmiBlitz3.ab3@6887>   ADDQ.w #8,D4
00024A1C <AmiBlitz3.ab3@6888> RTS
00024A48 <AmiBlitz3.ab3@6893>   !fget                                                   ;bsr.w get1bytemain
00024A4C <AmiBlitz3.ab3@6895>   ORI.w #$20,D0
00024A50 <AmiBlitz3.ab3@6898>   CMP.w #$61,D0     ;'a'
00024A54 <AmiBlitz3.ab3@6899>   BNE.w syntaxerr
00024A80 <AmiBlitz3.ab3@6903>   !fget                                                    ;bsr.w get1bytemain
00024A84 <AmiBlitz3.ab3@6905>   SUBI.w #$30,D0
00024A88 <AmiBlitz3.ab3@6906>    BMI.w syntaxerr
00024A8C <AmiBlitz3.ab3@6907>   CMP.w #$7,D0
00024A90 <AmiBlitz3.ab3@6908>    BHI.w syntaxerr
00024A92 <AmiBlitz3.ab3@6909>   MOVE.w D0,D4
00024ABE <AmiBlitz3.ab3@6911>   !fget
00024AC0 <AmiBlitz3.ab3@6913> RTS                                                        ;bra.w get1bytemain
00024AC2 <AmiBlitz3.ab3@6917>   ADDQ.w #8,D4
00024AC4 <AmiBlitz3.ab3@6920>   MOVEQ.l #$00,D5    ;bits for reg
00024AC8 <AmiBlitz3.ab3@6921>   SUBI.w #$30,D4
00024ACC <AmiBlitz3.ab3@6924>   CMP.w #$2D,D0      ;'-'
00024AD0 <AmiBlitz3.ab3@6925>    BEQ.w 'range
00024AD4 <AmiBlitz3.ab3@6926>   CMP.w #$2F,D0      ;'/'
00024AD8 <AmiBlitz3.ab3@6927>    BEQ.w 'one
00024ADC <AmiBlitz3.ab3@6928>  BRA.w syntaxerr
00024ADE <AmiBlitz3.ab3@6931>   BSET D4,D5
00024AE0 <AmiBlitz3.ab3@6934>   MOVE.w D5,D4
00024AE2 <AmiBlitz3.ab3@6935>   MOVEQ.l #$0F,D5
00024AE4 <AmiBlitz3.ab3@6936>  RTS
00024AE6 <AmiBlitz3.ab3@6939>   BSET D4,D5
00024AEA <AmiBlitz3.ab3@6940>   BSR.w get_reg
00024AFC <AmiBlitz3.ab3@6942>   !compare3                                                ;bsr.w tstend2
00024B00 <AmiBlitz3.ab3@6944>   BNE.w 'loop
00024B04 <AmiBlitz3.ab3@6945>  BRA.w 'done2
00024B06 <AmiBlitz3.ab3@6948>   MOVE.w D4,D1    ;from
00024B0A <AmiBlitz3.ab3@6949>    BSR.w get_reg
00024B0C <AmiBlitz3.ab3@6950>   CMP.w D4,D1
00024B10 <AmiBlitz3.ab3@6951>    BLS.w 'loop2
00024B12 <AmiBlitz3.ab3@6952>   EXG.l D4,D1
00024B14 <AmiBlitz3.ab3@6955>   BSET D1,D5
00024B16 <AmiBlitz3.ab3@6956>   ADDQ.w #1,D1
00024B18 <AmiBlitz3.ab3@6957>   CMP.w D4,D1
00024B1C <AmiBlitz3.ab3@6958>    BLS.w 'loop2
00024B2E <AmiBlitz3.ab3@6960>   !compare3                                                ;bsr.w tstend2
00024B32 <AmiBlitz3.ab3@6962>   BNE.w 'loop
00024B36 <AmiBlitz3.ab3@6963> BRA.w 'done
00024B38 <AmiBlitz3.ab3@6969>   MOVEA.l A5,A4                                            ;bsr.w get1bytemain
00024B64 <AmiBlitz3.ab3@6971>    !fget
00024B68 <AmiBlitz3.ab3@6973>   CMP.w #$23,D0       ;'#'
00024B6C <AmiBlitz3.ab3@6974>    BEQ.w getimm
00024B70 <AmiBlitz3.ab3@6975>   CMP.w #$28,D0       ;'('
00024B74 <AmiBlitz3.ab3@6976>    BEQ.w 'ind
00024B78 <AmiBlitz3.ab3@6977>   CMP.w #$2D,D0       ;'-'
00024B7C <AmiBlitz3.ab3@6978>    BNE.w 'more
00024BA8 <AmiBlitz3.ab3@6980>    !fget                                                   ;bsr.w get1bytemain       -(
00024BAC <AmiBlitz3.ab3@6982>   CMP.w #$28,D0       ;'('
00024BB0 <AmiBlitz3.ab3@6983>    BNE.w 'notccr
00024BB4 <AmiBlitz3.ab3@6984>    BSR.w getan
00024BB8 <AmiBlitz3.ab3@6985>   CMP.w #$29,D0       ;')'
00024BBC <AmiBlitz3.ab3@6986>    BNE.w syntaxerr
00024BBE <AmiBlitz3.ab3@6987>   MOVEQ.l #$04,D5
00024BEA <AmiBlitz3.ab3@6989>   !fget                                                    ;bsr.w get1bytemain  
00024BEC <AmiBlitz3.ab3@6990>  RTS
00024BF0 <AmiBlitz3.ab3@6994>   BSR.w getan
00024BF4 <AmiBlitz3.ab3@6995>   CMP.w #$29,D0      ;')'
00024BF8 <AmiBlitz3.ab3@6996>    BNE.w syntaxerr
00024C24 <AmiBlitz3.ab3@6998>   !fget
00024C28 <AmiBlitz3.ab3@7000>   CMP.w #$2B,D0      ;'+'
00024C2C <AmiBlitz3.ab3@7001>    BEQ.w 'postinc
00024C2E <AmiBlitz3.ab3@7002>   MOVEQ.l #$02,D5
00024C30 <AmiBlitz3.ab3@7003>  RTS
00024C32 <AmiBlitz3.ab3@7006>   MOVEQ.l #$03,D5
00024C5E <AmiBlitz3.ab3@7008>   !fget                                                    ;bra.w get1bytemain
00024C60 <AmiBlitz3.ab3@7009>  RTS
00024C64 <AmiBlitz3.ab3@7013>   ORI.w #$20,D0
00024C66 <AmiBlitz3.ab3@7014>   MOVE.w D0,D1      ;first
00024C92 <AmiBlitz3.ab3@7016>    !fget                                                   ;bsr.w get1bytemain  ;get second
00024C96 <AmiBlitz3.ab3@7018>   CMP.w #$64,D1     ;'d'
00024C9A <AmiBlitz3.ab3@7019>    BNE.w 'notdn
00024C9E <AmiBlitz3.ab3@7020>   CMP.w #$30,D0     ;'0'
00024CA2 <AmiBlitz3.ab3@7021>    BCS.w 'notan
00024CA6 <AmiBlitz3.ab3@7022>   CMP.w #$37,D0     ;'7'
00024CAA <AmiBlitz3.ab3@7023>    BHI.w 'notan
00024CAC <AmiBlitz3.ab3@7024>   MOVE.w D0,D4
00024CD8 <AmiBlitz3.ab3@7026>    !fget                                                   ;bsr.w get1bytemain
00024CEA <AmiBlitz3.ab3@7027>    !compare3                                               ;bsr.w tstend2
00024CEE <AmiBlitz3.ab3@7029>    BEQ.w 'dn
00024CF2 <AmiBlitz3.ab3@7030>   CMP.w #$2D,D0     ;'-'
00024CF6 <AmiBlitz3.ab3@7031>    BEQ.w getmovem
00024CFA <AmiBlitz3.ab3@7032>   CMP.w #$2F,D0     ;'/'
00024CFE <AmiBlitz3.ab3@7033>    BEQ.w getmovem
00024D02 <AmiBlitz3.ab3@7034>  BRA.w 'notan2
00024D04 <AmiBlitz3.ab3@7037>   MOVEQ.l #$00,D5
00024D08 <AmiBlitz3.ab3@7038>   SUBI.w #$30,D4
00024D0A <AmiBlitz3.ab3@7039>  RTS
00024D0E <AmiBlitz3.ab3@7042>    CMP.w #$61,D1    ;'a'
00024D12 <AmiBlitz3.ab3@7043>    BNE.w 'notan
00024D16 <AmiBlitz3.ab3@7045>   CMP.w #$30,D0     ;'0'
00024D1A <AmiBlitz3.ab3@7046>    BCS.w 'notan
00024D1E <AmiBlitz3.ab3@7047>   CMP.w #$37,D0     ;'7'
00024D22 <AmiBlitz3.ab3@7048>    BHI.w 'notan
00024D24 <AmiBlitz3.ab3@7049>   MOVE.w D0,D4
00024D50 <AmiBlitz3.ab3@7051>    !fget                                                   ;bsr.w get1bytemain
00024D62 <AmiBlitz3.ab3@7052>    !compare3                                               ;bsr.w tstend2
00024D66 <AmiBlitz3.ab3@7054>    BEQ.w 'an
00024D6A <AmiBlitz3.ab3@7055>   CMP.w #$2D,D0     ;'-'
00024D6E <AmiBlitz3.ab3@7056>    BEQ.w getmovem2                                         ;movem
00024D72 <AmiBlitz3.ab3@7057>   CMP.w #$2F,D0     ;'/'
00024D76 <AmiBlitz3.ab3@7058>    BEQ.w getmovem2
00024D7A <AmiBlitz3.ab3@7059>  BRA.w 'notan2
00024D7C <AmiBlitz3.ab3@7065>   MOVEQ.l #1,d5
00024D80 <AmiBlitz3.ab3@7066>   SUBI.w #$30,D4
00024D84 <AmiBlitz3.ab3@7068>   BRA 'l10
00024D86 <AmiBlitz3.ab3@7069>   ADDQ.w #8,d4                             ; ??? looks like dead code ???
00024D88 <AmiBlitz3.ab3@7070>   MOVEQ #0,d5                              ;   "
00024D8A <AmiBlitz3.ab3@7071>   BSET d4,d5                               ;   "
00024D8C <AmiBlitz3.ab3@7072>   MOVE.w d5,d4                             ;   "
00024D8E <AmiBlitz3.ab3@7073>   MOVEQ.l #$0f,D5                          ;   "             ;01
00024D90 <AmiBlitz3.ab3@7077>  RTS
00024D94 <AmiBlitz3.ab3@7080>   ORI.w #$20,D0
00024D96 <AmiBlitz3.ab3@7081>   MOVE.w D0,D4
00024DC2 <AmiBlitz3.ab3@7082>    !fget                                                   ;bsr.w get1bytemain ;get third
00024DD4 <AmiBlitz3.ab3@7087>   !compare3                                                ;bsr.w tstend2
00024DD8 <AmiBlitz3.ab3@7089>    BNE.w 'notsx
00024DDC <AmiBlitz3.ab3@7090>   CMP.w #$73,D1       ;'s'
00024DE0 <AmiBlitz3.ab3@7091>    BNE.w 'notsx
00024DE4 <AmiBlitz3.ab3@7092>   CMP.w #$70,D4       ;'p'
00024DE8 <AmiBlitz3.ab3@7093>    BNE.w 'notsp
00024DFA <AmiBlitz3.ab3@7095>    !compare3                                               ;bsr.w tstend2
00024DFE <AmiBlitz3.ab3@7097>    BNE.w 'notccr
00024E00 <AmiBlitz3.ab3@7101>   MOVEQ.l #$07,D4
00024E02 <AmiBlitz3.ab3@7102>   MOVEQ.l #$01,D5
00024E04 <AmiBlitz3.ab3@7103>  RTS
00024E08 <AmiBlitz3.ab3@7106>   CMP.w #$72,D4      ;'r'
00024E0C <AmiBlitz3.ab3@7107>    BNE.w 'notccr
00024E1E <AmiBlitz3.ab3@7109>    !compare3                                               ;bsr.w tstend2
00024E22 <AmiBlitz3.ab3@7111>    BNE.w 'notccr
00024E24 <AmiBlitz3.ab3@7112>   MOVEQ.l #$0D,D5
00024E26 <AmiBlitz3.ab3@7113>  RTS
00024E2A <AmiBlitz3.ab3@7116>   ORI.w #$20,D0
00024E2E <AmiBlitz3.ab3@7117>   CMP.w #$63,D1      ;'c'
00024E32 <AmiBlitz3.ab3@7118>    BNE.w 'notccr0
00024E36 <AmiBlitz3.ab3@7119>   CMP.w #$63,D4      ;'c'
00024E3A <AmiBlitz3.ab3@7120>    BNE.w 'notccr
00024E3E <AmiBlitz3.ab3@7121>   CMP.w #$72,D0      ;'r'
00024E42 <AmiBlitz3.ab3@7122>    BNE.w 'notccr
00024E46 <AmiBlitz3.ab3@7123>    BSR.w get1bytemain                                      ;??wy not !fget
00024E4A <AmiBlitz3.ab3@7124>    BEQ.w 'ccr
00024E4E <AmiBlitz3.ab3@7125>   CMP.w #$2C,D0
00024E52 <AmiBlitz3.ab3@7126>    BNE.w 'notccr
00024E54 <AmiBlitz3.ab3@7132>   MOVEQ.l #$0C,D5
00024E56 <AmiBlitz3.ab3@7133>  RTS
00024E5A <AmiBlitz3.ab3@7136>   CMP.w #$75,D1      ;'u'
00024E5E <AmiBlitz3.ab3@7137>    BNE.w 'notccr
00024E62 <AmiBlitz3.ab3@7138>   CMP.w #$73,D4      ;'s'
00024E66 <AmiBlitz3.ab3@7139>    BNE.w 'notccr
00024E6A <AmiBlitz3.ab3@7140>   CMP.w #$70,D0      ;'p'
00024E6E <AmiBlitz3.ab3@7141>    BNE.w 'notccr
00024E72 <AmiBlitz3.ab3@7142>    BSR.w get1bytemain                                      ;??wy not !fget
00024E76 <AmiBlitz3.ab3@7143>    BEQ.w 'usp
00024E7A <AmiBlitz3.ab3@7144>   CMP.w #$2C,D0      ;','
00024E7E <AmiBlitz3.ab3@7145>    BNE.w 'notccr
00024E80 <AmiBlitz3.ab3@7148>   MOVEQ.l #$0E,D5
00024E82 <AmiBlitz3.ab3@7149>  RTS
00024E84 <AmiBlitz3.ab3@7155>   MOVEA.l A4,A5
00024E88 <AmiBlitz3.ab3@7156>    BSR.w asmconst
00024E9A <AmiBlitz3.ab3@7159>    !compare3                                               ;bsr.w tstend2
00024E9E <AmiBlitz3.ab3@7161>    BEQ.w 'abs1
00024EA2 <AmiBlitz3.ab3@7162>   CMP.w #$2E,D0      ;'.'
00024EA6 <AmiBlitz3.ab3@7163>    BEQ.w 'absx
00024EAA <AmiBlitz3.ab3@7164>   CMP.w #$28,D0      ;'('
00024EAE <AmiBlitz3.ab3@7165>    BNE.w syntaxerr
00024EB2 <AmiBlitz3.ab3@7166>    BSR.w get1bytemain                                      ;??wy not !fget
00024EB6 <AmiBlitz3.ab3@7167>   ORI.w #$20,D0
00024EBA <AmiBlitz3.ab3@7168>   CMP.w #$70,D0      ;'p'
00024EBE <AmiBlitz3.ab3@7169>    BNE.w 'notpcrel
00024EC2 <AmiBlitz3.ab3@7170>    BSR.w get1bytemain                                      ;??wy not !fget
00024EC6 <AmiBlitz3.ab3@7171>   ORI.w #$20,D0
00024ECA <AmiBlitz3.ab3@7172>   CMP.w #$63,D0      ;'c'
00024ECE <AmiBlitz3.ab3@7173>    BNE.w syntaxerr
00024ED2 <AmiBlitz3.ab3@7174>    BSR.w get1bytemain                                      ;??wy not !fget
00024ED6 <AmiBlitz3.ab3@7175>    BSR.w getrest
00024ED8 <AmiBlitz3.ab3@7176>   ADDQ.w #4,D5
00024EDA <AmiBlitz3.ab3@7177>  RTS
00024EDE <AmiBlitz3.ab3@7180>   BSR.w getan2
00024EE2 <AmiBlitz3.ab3@7181>  BRA.w getrest
00024EE6 <AmiBlitz3.ab3@7184>    BSR.w get1bytemain                                     ;??wy not !fget
00024EEA <AmiBlitz3.ab3@7185>   ORI.w #$20,D0
00024EEE <AmiBlitz3.ab3@7186>   CMP.w #$77,D0      ;'w'
00024EF2 <AmiBlitz3.ab3@7187>    BEQ.w 'absw
00024EF6 <AmiBlitz3.ab3@7188>   CMP.w #$6C,D0      ;'l'
00024EFA <AmiBlitz3.ab3@7189>    BNE.w syntaxerr
00024EFC <AmiBlitz3.ab3@7192>   MOVEQ.l #$08,D5
00024EFE <AmiBlitz3.ab3@7193>  RTS
00024F00 <AmiBlitz3.ab3@7196>   MOVEQ.l #$07,D5
00024F02 <AmiBlitz3.ab3@7197> RTS
00024F04 <AmiBlitz3.ab3@7201>   TST.w D0
00024F08 <AmiBlitz3.ab3@7202>    BEQ.w 'ok
00024F0C <AmiBlitz3.ab3@7203>   CMP.w #$3A,D0       ;':'
00024F10 <AmiBlitz3.ab3@7204>    BEQ.w 'ok
00024F14 <AmiBlitz3.ab3@7205>   CMP.w #$2C,D0       ;','
00024F16 <AmiBlitz3.ab3@7208> RTS
00024F1A <AmiBlitz3.ab3@7212>   CMP.w #$2C,D0       ;','
00024F1E <AmiBlitz3.ab3@7213>    BNE.w 'dis
00024F22 <AmiBlitz3.ab3@7214>    BSR.w get1bytemain                                      ;??wy not !fget
00024F26 <AmiBlitz3.ab3@7215>   ORI.w #$20,D0
00024F28 <AmiBlitz3.ab3@7216>   MOVEQ.l #$00,D1
00024F2C <AmiBlitz3.ab3@7217>   CMP.w #$64,D0       ;'d'
00024F30 <AmiBlitz3.ab3@7218>    BEQ.w 'ianxi
00024F34 <AmiBlitz3.ab3@7219>   CMP.w #$61,D0       ;'a'
00024F38 <AmiBlitz3.ab3@7220>    BNE.w syntaxerr
00024F3C <AmiBlitz3.ab3@7221>   BSET #$F,D1
00024F40 <AmiBlitz3.ab3@7224>    BSR.w get1bytemain                                      ;??wy not !fget
00024F44 <AmiBlitz3.ab3@7225>   SUBI.w #$30,D0
00024F48 <AmiBlitz3.ab3@7226>    BMI.w syntaxerr
00024F4C <AmiBlitz3.ab3@7227>   CMP.w #$7,D0
00024F50 <AmiBlitz3.ab3@7228>    BHI.w syntaxerr
00024F52 <AmiBlitz3.ab3@7229>   LSL.w #8,D0
00024F54 <AmiBlitz3.ab3@7230>   LSL.w #4,D0
00024F56 <AmiBlitz3.ab3@7231>   OR.w D0,D1
00024F5A <AmiBlitz3.ab3@7232>    BSR.w get1bytemain                                      ;??wy not !fget
00024F5E <AmiBlitz3.ab3@7233>   CMP.w #$2E,D0       ;'.'
00024F62 <AmiBlitz3.ab3@7234>    BNE.w 'ok2
00024F66 <AmiBlitz3.ab3@7235>    BSR.w get1bytemain                                      ;??wy not !fget
00024F6A <AmiBlitz3.ab3@7236>   ORI.w #$20,D0
00024F6E <AmiBlitz3.ab3@7237>   CMP.w #$77,D0       ;'w'
00024F72 <AmiBlitz3.ab3@7238>    BEQ.w 'ok
00024F76 <AmiBlitz3.ab3@7239>   CMP.w #$6C,D0       ;'l'
00024F7A <AmiBlitz3.ab3@7240>    BNE.w syntaxerr
00024F7E <AmiBlitz3.ab3@7241>   BSET #$B,D1
00024F82 <AmiBlitz3.ab3@7244>    BSR.w get1bytemain                                      ;??wy not !fget
00024F86 <AmiBlitz3.ab3@7248>    CMP.b #"*",d0                                            ;020 * Mode
00024F8A <AmiBlitz3.ab3@7249>             BNE 'l1
00024F8E <AmiBlitz3.ab3@7250>             BSR.w get1bytemain                             ;??wy not !fget
00024F92 <AmiBlitz3.ab3@7251>             CMP.b #"2",d0
00024F96 <AmiBlitz3.ab3@7252>             BNE 'l2
00024F9A <AmiBlitz3.ab3@7253>             OR.w #$200,d1
00024F9E <AmiBlitz3.ab3@7254>  BRA 'l1b
00024FA2 <AmiBlitz3.ab3@7257>             CMP.b #"4",d0
00024FA6 <AmiBlitz3.ab3@7258>             BNE 'l3
00024FAA <AmiBlitz3.ab3@7259>             OR.w #$400,d1
00024FAE <AmiBlitz3.ab3@7260>  BRA 'l1b
00024FB2 <AmiBlitz3.ab3@7263>             CMP.b #"8",d0
00024FB6 <AmiBlitz3.ab3@7264>             BNE syntaxerr
00024FBA <AmiBlitz3.ab3@7265>             OR.w #$600,d1
00024FBE <AmiBlitz3.ab3@7268>         BSR.w get1bytemain                                 ;??wy not !fget
00024FC2 <AmiBlitz3.ab3@7272>   CMP.w #$29,D0       ;')'
00024FC6 <AmiBlitz3.ab3@7273>    BNE.w syntaxerr
00024FCC <AmiBlitz3.ab3@7274>   MOVE.w D1,extraword
00024FCE <AmiBlitz3.ab3@7275>   MOVEQ.l #$06,D5
00024FD2 <AmiBlitz3.ab3@7276>  BRA.w get1bytemain                                         ;??wy not !fget
00024FD6 <AmiBlitz3.ab3@7279>   CMP.w #")",D0                                            ;")"
00024FDA <AmiBlitz3.ab3@7280>    BNE.w errorbracketmiss                                  ; was syntax error
00024FDC <AmiBlitz3.ab3@7281>   MOVEQ.l #$05,D5
00024FE0 <AmiBlitz3.ab3@7282> BRA.w get1bytemain                                         ;??wy not !fget
00024FE6 <AmiBlitz3.ab3@7289>   MOVEA.l asmbuff,A0
00024FEC <AmiBlitz3.ab3@7290>   MOVE.w ininclude,D1
00024FF2 <AmiBlitz3.ab3@7291>   OR.w inmacro,D1
00024FF4 <AmiBlitz3.ab3@7292>   MOVE.w D1,(A0)+                                          ;flag!
00024FF8 <AmiBlitz3.ab3@7293>    BNE.w copyconst
00024FFA <AmiBlitz3.ab3@7294>   MOVE.l A5,-(A7)
00024FFE <AmiBlitz3.ab3@7295>    BSR.w copyconst
00025004 <AmiBlitz3.ab3@7296>   MOVEA.l asmbuff,A0
00025008 <AmiBlitz3.ab3@7297>   CMP.w #$4,D1
0002500C <AmiBlitz3.ab3@7298>    BLS.w 'leave
00025012 <AmiBlitz3.ab3@7299>   TST.w lc
00025016 <AmiBlitz3.ab3@7300>    BNE.w 'leave
00025018 <AmiBlitz3.ab3@7301>   ADDQ.w #2,A0
0002501A <AmiBlitz3.ab3@7302>   MOVE.l (A7)+,(A0)+
0002501C <AmiBlitz3.ab3@7303>   CLR.b (A0)
00025024 <AmiBlitz3.ab3@7304>   MOVE.w #$0004,asmlen2                                    ;pointer + 0
00025026 <AmiBlitz3.ab3@7305>  RTS
00025028 <AmiBlitz3.ab3@7308>   NOT.w (A0)
0002502A <AmiBlitz3.ab3@7309>   ADDQ.w #4,A7
0002502C <AmiBlitz3.ab3@7310> RTS
0002502E <AmiBlitz3.ab3@7313> lc:  Ds.w 1
00025034 <AmiBlitz3.ab3@7317>   CLR.w lc
00025036 <AmiBlitz3.ab3@7318>   MOVEQ.l #$00,D1
00025038 <AmiBlitz3.ab3@7321>    ADDQ.w #1,D1                                            ;label name
00025064 <AmiBlitz3.ab3@7323>    !fget                                                   ;bsr.w get1bytemain
00025068 <AmiBlitz3.ab3@7325>    BEQ.w 'done
0002506C <AmiBlitz3.ab3@7328>    CMP.w #$22,d0
00025070 <AmiBlitz3.ab3@7329>    BNE.s 'loop_l10
00025076 <AmiBlitz3.ab3@7330>    NOT.w instringon
0002507A <AmiBlitz3.ab3@7333>    CMP.w #":",d0
0002507E <AmiBlitz3.ab3@7334>    BNE.s 'loop_l11
00025084 <AmiBlitz3.ab3@7335>    TST.w instringon
00025088 <AmiBlitz3.ab3@7336>    BEQ 'done
0002508A <AmiBlitz3.ab3@7340>   TST.w D0
0002508E <AmiBlitz3.ab3@7341>   BPL.w 'notmi
00025090 <AmiBlitz3.ab3@7342>   MOVE.w D0,-(A7)
00025092 <AmiBlitz3.ab3@7343>   LSR.w #8,D0
00025094 <AmiBlitz3.ab3@7344>   MOVE.b D0,(A0)+
00025096 <AmiBlitz3.ab3@7345>   MOVE.w (A7)+,D0
00025098 <AmiBlitz3.ab3@7346>   MOVE.b D0,(A0)+
0002509A <AmiBlitz3.ab3@7347>   ADDQ.w #1,D1
0002509E <AmiBlitz3.ab3@7348>  BRA.s 'loop
000250A4 <AmiBlitz3.ab3@7351>    TST.w instringon
000250A8 <AmiBlitz3.ab3@7352>    BNE.w 'putbyte
000250AE <AmiBlitz3.ab3@7354>    TST.b _dcb
000250B2 <AmiBlitz3.ab3@7355>    BNE 'notmi_l10
000250B6 <AmiBlitz3.ab3@7357>    CMP.w #$28,D0     ;'('
000250BA <AmiBlitz3.ab3@7358>    BEQ.w 'done
000250BE <AmiBlitz3.ab3@7362>    CMP.w #$2C,D0     ;','
000250C2 <AmiBlitz3.ab3@7363>    BEQ.w 'done
000250C6 <AmiBlitz3.ab3@7364>    CMP.b #"'",D0           ; was #loclabch
000250CA <AmiBlitz3.ab3@7365>    BNE.w 'putbyte
000250D0 <AmiBlitz3.ab3@7366>    MOVE.w D0,lc                                     ;locallabels
000250D2 <AmiBlitz3.ab3@7367>    MOVE.l A1,-(A7)
000250D8 <AmiBlitz3.ab3@7368>    LEA lastgloballabel,A1
000250DA <AmiBlitz3.ab3@7369>    TST.b (A1)
000250DE <AmiBlitz3.ab3@7370>    BEQ.w nolocerr
000250E0 <AmiBlitz3.ab3@7373>   ADDQ.w #1,D1
000250E2 <AmiBlitz3.ab3@7374>   MOVE.b (A1)+,(A0)+
000250E6 <AmiBlitz3.ab3@7375>    BNE.w 'cloop
000250E8 <AmiBlitz3.ab3@7376>   SUBQ.w #1,D1
000250EA <AmiBlitz3.ab3@7377>   SUBQ.w #1,A0
000250EC <AmiBlitz3.ab3@7378>   MOVEA.l (A7)+,A1
000250EE <AmiBlitz3.ab3@7381>   MOVE.b D0,(A0)+
000250F2 <AmiBlitz3.ab3@7382>  BRA.w 'loop
000250F4 <AmiBlitz3.ab3@7385>   CLR.b (A0)
000250FA <AmiBlitz3.ab3@7386>   MOVE.w D1,asmlen2
000250FC <AmiBlitz3.ab3@7387> RTS
00025102 <AmiBlitz3.ab3@7393>   CMP.l #$80ad,d0      
00025106 <AmiBlitz3.ab3@7394>   BNE.s 'l12
0002510C <AmiBlitz3.ab3@7395>  JMP bssseg
00025112 <AmiBlitz3.ab3@7398>   CMP.l #$807f,d0
00025116 <AmiBlitz3.ab3@7399>     BNE.s 'l13
0002511C <AmiBlitz3.ab3@7400>  JMP chipseg
00025122 <AmiBlitz3.ab3@7403>   ADDQ.l #1,destpointer                                    ;even
0002512A <AmiBlitz3.ab3@7404>   BCLR #$0,destpointer+3
0002512E <AmiBlitz3.ab3@7406>   SUBI.w #$803C,D0         ; was #$8000+fnum
00025130 <AmiBlitz3.ab3@7407>   LSL.w #2,D0
00025136 <AmiBlitz3.ab3@7408>   MOVEA.l #asmpnts,A0
0002513A <AmiBlitz3.ab3@7409>   MOVEA.l $0(A0,D0.W),A0                                   ;begin inline assembler
00025140 <AmiBlitz3.ab3@7410>   MOVE.w D0,temp1
00025142 <AmiBlitz3.ab3@7411>   MOVE.l A0,-(A7)
00025144 <AmiBlitz3.ab3@7413>   MOVEQ.l #$01,D1         ;word len (byte=0, long=2)
00025170 <AmiBlitz3.ab3@7415>    !fget                                                   ;bsr.w get1bytemain
00025174 <AmiBlitz3.ab3@7417>   CMP.w #$2E,D0           ;'.'
00025178 <AmiBlitz3.ab3@7418>    BNE.w 'dsize
000251A4 <AmiBlitz3.ab3@7420>   !fget                                                    ;bsr.w get1bytemain
000251A8 <AmiBlitz3.ab3@7422>   ORI.w #$20,D0
000251AC <AmiBlitz3.ab3@7423>   CMP.w #$77,D0           ;'w'                                  ;long
000251B0 <AmiBlitz3.ab3@7424>    BEQ.w 'wsize
000251B4 <AmiBlitz3.ab3@7425>   CMP.w #$62,D0           ;'b'                                 ;byte
000251B8 <AmiBlitz3.ab3@7426>    BEQ.w 'bsize
000251BC <AmiBlitz3.ab3@7427>   CMP.w #$6C,D0           ;'l'                                 ;word
000251C0 <AmiBlitz3.ab3@7429>    BEQ.w 'lsize
000251C4 <AmiBlitz3.ab3@7430>   CMP.w #"s",d0
000251C8 <AmiBlitz3.ab3@7432>   BNE syntaxerr
000251CC <AmiBlitz3.ab3@7433>  BRA.w 'bsize             ; was 'lsize org source
000251CE <AmiBlitz3.ab3@7436>   MOVEQ.l #$00,D1
000251D2 <AmiBlitz3.ab3@7437>   MOVE.w $8(A0),D0
000251D6 <AmiBlitz3.ab3@7438>  BRA.w 'tstsize
000251D8 <AmiBlitz3.ab3@7441>   MOVEQ.l #$04,D1
000251DC <AmiBlitz3.ab3@7442>  BRA.w 'putsize
000251DE <AmiBlitz3.ab3@7445>   MOVEQ.l #$04,D1
000251E2 <AmiBlitz3.ab3@7446>   MOVE.w $8(A0),D0
000251E4 <AmiBlitz3.ab3@7447>   LSR.w #4,D0
000251E8 <AmiBlitz3.ab3@7448>  BRA.w 'tstsize
000251EA <AmiBlitz3.ab3@7451>   MOVEQ.l #$08,D1
000251EE <AmiBlitz3.ab3@7452>   MOVE.w $8(A0),D0
000251F0 <AmiBlitz3.ab3@7453>   LSR.w #8,D0
000251F4 <AmiBlitz3.ab3@7456>    ANDI.w #$F,D0
000251F8 <AmiBlitz3.ab3@7457>   CMP.w #$F,D0
000251FC <AmiBlitz3.ab3@7459>    BNE.w 'cl60
00025204 <AmiBlitz3.ab3@7462>    CMP.l #"MULS",-6(a0)
00025208 <AmiBlitz3.ab3@7463>    BNE 'c20
0002520E <AmiBlitz3.ab3@7464>    MOVE.l #$4c000800,d1
00025214 <AmiBlitz3.ab3@7465>  JMP do32
0002521C <AmiBlitz3.ab3@7468>    CMP.l #"MULU",-6(a0)
00025220 <AmiBlitz3.ab3@7469>    BNE 'c30
00025226 <AmiBlitz3.ab3@7470>    MOVE.l #$4c000000,d1
0002522C <AmiBlitz3.ab3@7471>  JMP do32
00025234 <AmiBlitz3.ab3@7474>    CMP.l #"DIVS",-6(a0)
00025238 <AmiBlitz3.ab3@7475>    BNE 'c40
0002523E <AmiBlitz3.ab3@7476>    MOVE.l #$4c400800,d1
00025244 <AmiBlitz3.ab3@7477>  JMP do32
0002524C <AmiBlitz3.ab3@7480>    CMP.l #"DIVU",-6(a0)
00025250 <AmiBlitz3.ab3@7481>    BNE 'c50
00025256 <AmiBlitz3.ab3@7482>    MOVE.l #$4c400000,d1
0002525C <AmiBlitz3.ab3@7483>  JMP do32
00025260 <AmiBlitz3.ab3@7487>  BRA illsizeerr             ; in org source this was afte 'c160
0002528C <AmiBlitz3.ab3@7490>   !fget                                                    ;bsr.w get1bytemain
00025292 <AmiBlitz3.ab3@7493>   MOVE.w D1,asmsize
00025294 <AmiBlitz3.ab3@7494>   MOVEQ.l #-$01,D3
00025298 <AmiBlitz3.ab3@7495>    BSR.w reget
0002529C <AmiBlitz3.ab3@7496>    BEQ.w 'done0
000252A6 <AmiBlitz3.ab3@7497>   MOVE.l #ptr_parameterstore,asmbuff
000252B0 <AmiBlitz3.ab3@7500>    MOVE.w oldqflag,instringon
000252B6 <AmiBlitz3.ab3@7501>   MOVEA.l lastsourcepos,A5
000252BA <AmiBlitz3.ab3@7503>    BSR.w getea
000252BC <AmiBlitz3.ab3@7504>   MOVE.l D4,D2                                              ;to src
000252BE <AmiBlitz3.ab3@7505>   MOVE.l D5,D3
000252C8 <AmiBlitz3.ab3@7506>   MOVE.w asmlen2,asmlen
000252CA <AmiBlitz3.ab3@7507>   MOVEQ.l #-$01,D5
000252D4 <AmiBlitz3.ab3@7508>   MOVE.w extraword,extraword2
000252D8 <AmiBlitz3.ab3@7509>   CMP.w #$2C,D0                                             ;','
000252DC <AmiBlitz3.ab3@7510>    BNE.w 'done0
000252E6 <AmiBlitz3.ab3@7511>   MOVE.l #namebuff2,asmbuff
000252EA <AmiBlitz3.ab3@7512>    BSR.w getea                                              ;dest
000252EC <AmiBlitz3.ab3@7519>   MOVEA.l (A7)+,A0
000252F2 <AmiBlitz3.ab3@7523>   MOVEA.l destpointer,A1    ; pc
000252F4 <AmiBlitz3.ab3@7525>   MOVEA.l A1,A4
000252F6 <AmiBlitz3.ab3@7526>   ADDQ.w #2,A1
000252F8 <AmiBlitz3.ab3@7527>   MOVE.w (A0),D1            ;opcode
000252FA <AmiBlitz3.ab3@7528>   TST.w D3
000252FE <AmiBlitz3.ab3@7529>    BMI.w 'none              ;no src/dest ea!
00025302 <AmiBlitz3.ab3@7533>   MOVE.w $E(A0),D0
00025306 <AmiBlitz3.ab3@7534>    BPL.w 'noia
0002530A <AmiBlitz3.ab3@7535>   BTST #$0,D0
0002530E <AmiBlitz3.ab3@7536>    BEQ.w 'noa
00025312 <AmiBlitz3.ab3@7537>   CMP.w #$1,D5
00025316 <AmiBlitz3.ab3@7538>    BNE.w 'noa
0002531A <AmiBlitz3.ab3@7539>   CMP.w #$E,D3
0002531E <AmiBlitz3.ab3@7540>    BEQ.w 'noia
00025324 <AmiBlitz3.ab3@7541>   MOVE.w temp1,D0
00025326 <AmiBlitz3.ab3@7542>   ADDQ.w #4,D0
0002532A <AmiBlitz3.ab3@7543>  BRA.w 'moveon
0002532E <AmiBlitz3.ab3@7546>   BTST #$1,D0
00025332 <AmiBlitz3.ab3@7547>    BEQ.w 'noia
00025336 <AmiBlitz3.ab3@7548>   CMP.w #$B,D3
0002533A <AmiBlitz3.ab3@7549>    BNE.w 'noia
00025340 <AmiBlitz3.ab3@7550>   MOVE.w temp1,D0
00025342 <AmiBlitz3.ab3@7553>   ADDQ.w #4,D0
00025348 <AmiBlitz3.ab3@7554>   MOVEA.l #asmpnts,A0
0002534C <AmiBlitz3.ab3@7555>   MOVEA.l $0(A0,D0.W),A0
0002534E <AmiBlitz3.ab3@7556>   MOVE.w (A0),D1
00025358 <AmiBlitz3.ab3@7559>   MOVE.l #ptr_parameterstore,buff1
00025362 <AmiBlitz3.ab3@7560>   MOVE.l #namebuff2,buff2
00025366 <AmiBlitz3.ab3@7561>   MOVE.l $A(A0),D0
0002536A <AmiBlitz3.ab3@7562>    BEQ.w 'nojsr
0002536C <AmiBlitz3.ab3@7563>   MOVEA.l D0,A3
00025372 <AmiBlitz3.ab3@7564>   MOVE.w asmsize,D6
00025374 <AmiBlitz3.ab3@7565>    JSR (A3)
00025378 <AmiBlitz3.ab3@7566>    BPL.w 'noerr
0002537C <AmiBlitz3.ab3@7567>   CMP.w #-$2,D0
00025380 <AmiBlitz3.ab3@7568>    BEQ.w illsizeerr
00025384 <AmiBlitz3.ab3@7569>  BRA.w illeaerr
00025388 <AmiBlitz3.ab3@7572>   BEQ.w 'nojsr
0002538A <AmiBlitz3.ab3@7574>   EXG.l D2,D4
0002538C <AmiBlitz3.ab3@7575>   EXG.l D3,D5
00025392 <AmiBlitz3.ab3@7577>   MOVE.l extraword,D6
00025394 <AmiBlitz3.ab3@7578>   SWAP D6
0002539A <AmiBlitz3.ab3@7579>   MOVE.l D6,extraword
000253A4 <AmiBlitz3.ab3@7581>   MOVE.l #namebuff2,buff1
000253AE <AmiBlitz3.ab3@7582>   MOVE.l #ptr_parameterstore,buff2
000253B4 <AmiBlitz3.ab3@7584>   MOVE.w asmlen,D6
000253BA <AmiBlitz3.ab3@7585>   MOVE.w asmlen2,D7
000253C0 <AmiBlitz3.ab3@7586>   MOVE.w D6,asmlen2
000253C6 <AmiBlitz3.ab3@7587>   MOVE.w D7,asmlen
000253D0 <AmiBlitz3.ab3@7590>   MOVE.l buff1,asmbuff
000253D4 <AmiBlitz3.ab3@7591>   MOVE.w $E(A0),D0
000253D8 <AmiBlitz3.ab3@7592>    BEQ.w 'nothing
000253DC <AmiBlitz3.ab3@7593>    BMI.w 'nothing
000253E0 <AmiBlitz3.ab3@7595>    CMP.w #$7000,d1
000253E4 <AmiBlitz3.ab3@7596>    BNE 'skip
000253E8 <AmiBlitz3.ab3@7597>    CMP.w #$b,d3
000253EC <AmiBlitz3.ab3@7598>    BNE illeaerr
000253F0 <AmiBlitz3.ab3@7602>    CMP.w #$1,D0
000253F4 <AmiBlitz3.ab3@7603>    BNE.w 'n1to8
000253F8 <AmiBlitz3.ab3@7604>    CMP.w #$B,D3
000253FC <AmiBlitz3.ab3@7605>    BNE.w 'nothing
00025400 <AmiBlitz3.ab3@7608>    BSR.w insasm
00025402 <AmiBlitz3.ab3@7609>   MOVE.w D4,D2
00025404 <AmiBlitz3.ab3@7610>   MOVE.w D5,D3
00025408 <AmiBlitz3.ab3@7611>  BRA.w 'skipsrc2
0002540C <AmiBlitz3.ab3@7614>    CMP.w #$2,D0
00025410 <AmiBlitz3.ab3@7615>    BNE.w 'notbcc
00025414 <AmiBlitz3.ab3@7616>   CMP.w #$8,D3
00025418 <AmiBlitz3.ab3@7617>    BNE.w illeaerr
0002541A <AmiBlitz3.ab3@7618>   MOVEQ.l #$09,D3
0002541E <AmiBlitz3.ab3@7619>  BRA.w 'nothing
00025422 <AmiBlitz3.ab3@7622>    CMP.w #$3,D0
00025426 <AmiBlitz3.ab3@7623>    BEQ.w 'skipsrc
0002542A <AmiBlitz3.ab3@7626>   CMP.w #$4,D0
0002542E <AmiBlitz3.ab3@7627>    BEQ.w 'skipsrc
00025432 <AmiBlitz3.ab3@7630>   CMP.w #$5,D0
00025436 <AmiBlitz3.ab3@7631>    BNE.w 'notdbf
0002543A <AmiBlitz3.ab3@7632>   CMP.w #$8,D5
0002543E <AmiBlitz3.ab3@7633>    BNE.w illeaerr
00025440 <AmiBlitz3.ab3@7634>   OR.w D2,D1
00025442 <AmiBlitz3.ab3@7635>   MOVEQ.l #$09,D5
00025446 <AmiBlitz3.ab3@7639>   MOVE.w $2(A0),D6
0002544A <AmiBlitz3.ab3@7640>   MOVE.b $6(A0),D7
0002544E <AmiBlitz3.ab3@7641>   MOVEM.l D4-D5,-(A7)
00025454 <AmiBlitz3.ab3@7642>   MOVE.w extraword2,D4
00025458 <AmiBlitz3.ab3@7643>    BSR.w doea          ;do src
0002545C <AmiBlitz3.ab3@7645>   MOVEM.l (A7)+,D2-D3
0002545E <AmiBlitz3.ab3@7647>   TST.w D3
00025462 <AmiBlitz3.ab3@7650>     BMI.w 'one
00025468 <AmiBlitz3.ab3@7651>   MOVE.w extraword,D4
0002546C <AmiBlitz3.ab3@7652>   MOVE.w $4(A0),D6
00025470 <AmiBlitz3.ab3@7653>   MOVE.b $7(A0),D7
0002547A <AmiBlitz3.ab3@7654>   MOVE.l buff2,asmbuff
00025484 <AmiBlitz3.ab3@7655>   MOVE.w asmlen2,asmlen
00025488 <AmiBlitz3.ab3@7656>    BSR.w doea
0002548C <AmiBlitz3.ab3@7657>  BRA.w 'putit
00025490 <AmiBlitz3.ab3@7660>   MOVE.w $4(A0),D0
00025494 <AmiBlitz3.ab3@7661>    BNE.w illeaerr
00025498 <AmiBlitz3.ab3@7662>  BRA.w 'putit
0002549C <AmiBlitz3.ab3@7665>   MOVE.w $2(A0),D0
000254A0 <AmiBlitz3.ab3@7666>   OR.w $4(A0),D0
000254A4 <AmiBlitz3.ab3@7667>    BNE.w illeaerr
000254A8 <AmiBlitz3.ab3@7672>   MOVE.w $8(A0),D0
000254AC <AmiBlitz3.ab3@7673>   ANDI.w #$F000,D0
000254B0 <AmiBlitz3.ab3@7674>   CMP.w #-$1000,D0    ;was #$f000
000254B4 <AmiBlitz3.ab3@7675>    BEQ.w 'nosizep
000254B6 <AmiBlitz3.ab3@7676>   LSR.w #8,D0
000254B8 <AmiBlitz3.ab3@7677>   LSR.w #4,D0         ;shift for size
000254BC <AmiBlitz3.ab3@7679>   MOVE.w $8(A0),D2
000254C2 <AmiBlitz3.ab3@7680>   MOVE.w asmsize,D3
000254C4 <AmiBlitz3.ab3@7681>   LSR.w D3,D2
000254C8 <AmiBlitz3.ab3@7682>   ANDI.w #$F,D2
000254CA <AmiBlitz3.ab3@7683>   LSL.w D0,D2
000254CC <AmiBlitz3.ab3@7684>   OR.w D2,D1          ;size into opcode
000254D2 <AmiBlitz3.ab3@7687>   CMPA.l destbufferend,A4
000254D6 <AmiBlitz3.ab3@7688>    BCS.w 'oky
000254DE <AmiBlitz3.ab3@7689>   MOVE.w #$FFFF,dontwrite     ; was -1
000254E2 <AmiBlitz3.ab3@7690>  BRA.w 'done
000254E4 <AmiBlitz3.ab3@7693>   MOVE.w D1,(A4)
000254EA <AmiBlitz3.ab3@7696>   MOVE.l A1,destpointer
000254EC <AmiBlitz3.ab3@7697> RTS
000254F2 <AmiBlitz3.ab3@7701>   MOVE.l destpointer,-(A7)
000254F8 <AmiBlitz3.ab3@7702>   MOVE.l A1,destpointer
000254FC <AmiBlitz3.ab3@7703>    BSR.w addoff
00025502 <AmiBlitz3.ab3@7704>   MOVEA.l destpointer,A1
00025508 <AmiBlitz3.ab3@7705>   MOVE.l (A7)+,destpointer
0002550A <AmiBlitz3.ab3@7706> RTS
0002550E <AmiBlitz3.ab3@7710>   MOVEM.l d2-d6,-(a7)
00025514 <AmiBlitz3.ab3@7711>   JSR stripspaces
00025518 <AmiBlitz3.ab3@7712>   CMP.b #"d",(a5)+
0002551C <AmiBlitz3.ab3@7713>   BNE noreg
0002551E <AmiBlitz3.ab3@7714>   MOVE.b (a5)+,d0
00025522 <AmiBlitz3.ab3@7715>   CMP.b #$30,d0
00025526 <AmiBlitz3.ab3@7716>   BLT noreg
0002552A <AmiBlitz3.ab3@7717>   CMP.b #$37,d0
0002552E <AmiBlitz3.ab3@7718>   BGT noreg
00025532 <AmiBlitz3.ab3@7719>   SUB.b #$30,d0
00025534 <AmiBlitz3.ab3@7720>   MOVEQ #0,d3
00025536 <AmiBlitz3.ab3@7721>   MOVE.b d0,d3                                             ;reg1
00025538 <AmiBlitz3.ab3@7722>   ASL.l #8,d3
0002553A <AmiBlitz3.ab3@7723>   ASL.l #8,d3
00025540 <AmiBlitz3.ab3@7724>   JSR stripspaces
00025544 <AmiBlitz3.ab3@7725>   CMP.b #",",(a5)+
00025548 <AmiBlitz3.ab3@7726>   BNE noreg
0002554E <AmiBlitz3.ab3@7727>   JSR stripspaces
00025552 <AmiBlitz3.ab3@7728>   CMP.b #"d",(a5)+
00025556 <AmiBlitz3.ab3@7729>   BNE noreg
00025558 <AmiBlitz3.ab3@7730>   MOVE.b (a5)+,d0
0002555C <AmiBlitz3.ab3@7731>   CMP.b #$30,d0
00025560 <AmiBlitz3.ab3@7732>   BLT noreg
00025564 <AmiBlitz3.ab3@7733>   CMP.b #$37,d0
00025568 <AmiBlitz3.ab3@7734>   BGT noreg
0002556C <AmiBlitz3.ab3@7735>   SUB.b #$30,d0
0002556E <AmiBlitz3.ab3@7736>   MOVEQ #0,d4
00025570 <AmiBlitz3.ab3@7737>   MOVE.b d0,d4                                             ;reg2
00025572 <AmiBlitz3.ab3@7738>   ASL.l #8,d4
00025574 <AmiBlitz3.ab3@7739>   ASL.l #4,d4
00025576 <AmiBlitz3.ab3@7740>   OR.b d0,d1
00025578 <AmiBlitz3.ab3@7741>   OR.l d3,d1
0002557A <AmiBlitz3.ab3@7742>   OR.l d4,d1
00025580 <AmiBlitz3.ab3@7743>   JSR writelong
00025584 <AmiBlitz3.ab3@7744>   MOVEM.l (a7)+,d2-d6
00025588 <AmiBlitz3.ab3@7745>   MOVEM.l d1/a1-a3,-(a7)
0002558C <AmiBlitz3.ab3@7746> BRA exit
00025590 <AmiBlitz3.ab3@7750>   MOVEM.l (a7)+,d2-d6
00025596 <AmiBlitz3.ab3@7751>   LEA errtext,a0
00025598 <AmiBlitz3.ab3@7752>   MOVE.l a0,-(a7)
0002559E <AmiBlitz3.ab3@7753> JMP handle_compileerror
000255A4 <AmiBlitz3.ab3@7758>   MOVE.w dontwrite,D1
000255A8 <AmiBlitz3.ab3@7759>    BNE.w 'done
000255B0 <AmiBlitz3.ab3@7760>   BTST #$7,make_smallestcode
000255B4 <AmiBlitz3.ab3@7761>    BEQ.w 'go
000255B8 <AmiBlitz3.ab3@7762>   MOVE.w pass(PC),D1
000255BC <AmiBlitz3.ab3@7763>    BEQ.w 'done
000255C2 <AmiBlitz3.ab3@7766>   MOVEA.l templabel,A2                                     ;insert labels in Code
000255CA <AmiBlitz3.ab3@7767>   MOVE.b #1,curtemplabel
000255D2 <AmiBlitz3.ab3@7768>   MOVE.w #$FFFF,constmode
000255D8 <AmiBlitz3.ab3@7769>   CLR.w regnum
000255E2 <AmiBlitz3.ab3@7770>           MOVE.l #forthstack,forthsp
000255EC <AmiBlitz3.ab3@7771>           MOVE.l #precstack,precsp
000255F0 <AmiBlitz3.ab3@7772>    BSR.w prepstack
000255F2 <AmiBlitz3.ab3@7775>   MOVE.l A2,-(A7)
000255F6 <AmiBlitz3.ab3@7776>    BSR.w chkstop
000255F8 <AmiBlitz3.ab3@7777>   MOVEA.l (A7)+,A2
000255FC <AmiBlitz3.ab3@7778>   CMPA.w #$0,A2
00025600 <AmiBlitz3.ab3@7779>    BEQ.w 'done2
00025606 <AmiBlitz3.ab3@7780>    CLR.b iee
0002560C <AmiBlitz3.ab3@7781>   MOVE.l A2,asmbuff
00025610 <AmiBlitz3.ab3@7782>   LEA $10(A2),A5
00025614 <AmiBlitz3.ab3@7783>   TST.b $F(A2)
00025618 <AmiBlitz3.ab3@7784>    BNE.w 'skipo
0002561A <AmiBlitz3.ab3@7785>   MOVEA.l (A5),A5                                          ;pointer to real text
00025620 <AmiBlitz3.ab3@7788>    CLR.w asmtype
00025624 <AmiBlitz3.ab3@7789>    CMP.b #".",(a5)
00025628 <AmiBlitz3.ab3@7790>    BNE.s 'skipo_l10
0002562A <AmiBlitz3.ab3@7791>    MOVE.l a2,-(a7)
0002562C <AmiBlitz3.ab3@7792>    ADDQ.l #1,a5
00025632 <AmiBlitz3.ab3@7793>    LEA newtypebase,a2
00025636 <AmiBlitz3.ab3@7794>    BSR getparameter2
0002563A <AmiBlitz3.ab3@7795>    BEQ.w syntaxerr
0002563E <AmiBlitz3.ab3@7796>    BSR findtype
00025642 <AmiBlitz3.ab3@7797>    BNE.w notypeerr
00025646 <AmiBlitz3.ab3@7798>    LEA $4(a2),a2
0002564A <AmiBlitz3.ab3@7799>    BSR getparameter2
0002564E <AmiBlitz3.ab3@7800>    BEQ.w syntaxerr
00025652 <AmiBlitz3.ab3@7801>    BSR.w findvariable2
00025656 <AmiBlitz3.ab3@7802>    BNE.w notypeerr
0002565A <AmiBlitz3.ab3@7803>    MOVE.w $4(a2),d3
0002565C <AmiBlitz3.ab3@7804>    EXT.l d3
00025660 <AmiBlitz3.ab3@7805>  BRA 'skipo_l30b
00025664 <AmiBlitz3.ab3@7808>   CMP.b #"\",(a5)
00025668 <AmiBlitz3.ab3@7809>     BNE 'skipo_l20
0002566A <AmiBlitz3.ab3@7810>     ADDQ.l #1,a5
0002566C <AmiBlitz3.ab3@7811>    MOVE.l a2,-(a7)
0002566E <AmiBlitz3.ab3@7812>    MOVE.l a5,a4
00025674 <AmiBlitz3.ab3@7813>    LEA usedpath,a5
00025678 <AmiBlitz3.ab3@7814>    CMP.b #"*",(a5)
0002567C <AmiBlitz3.ab3@7815>    BNE 'skipo_lm1
0002567E <AmiBlitz3.ab3@7816>    ADDQ.l #1,a5
00025682 <AmiBlitz3.ab3@7819>    BSR.w getparameter2
00025686 <AmiBlitz3.ab3@7820>    BEQ.w syntaxerr
0002568C <AmiBlitz3.ab3@7821>    LEA varbase,A2
00025694 <AmiBlitz3.ab3@7822>    MOVE.b #1,newvariable
00025698 <AmiBlitz3.ab3@7823>    BSR.w findvariable
0002569E <AmiBlitz3.ab3@7824>    CLR.b newvariable
000256A4 <AmiBlitz3.ab3@7825>    CMP.l #-1,d0
000256A8 <AmiBlitz3.ab3@7826>    BEQ.w notypeerr
000256AA <AmiBlitz3.ab3@7827>    MOVE.l a4,a5
000256AE <AmiBlitz3.ab3@7828>    MOVE.l $a(a2),a2
000256B2 <AmiBlitz3.ab3@7829>    LEA $4(a2),a2
000256B6 <AmiBlitz3.ab3@7830>    BSR getparameter2
000256BA <AmiBlitz3.ab3@7831>    BEQ.w syntaxerr
000256BE <AmiBlitz3.ab3@7832>    BSR.w findvariable2
000256C2 <AmiBlitz3.ab3@7833>    BNE.w notypeerr
000256C6 <AmiBlitz3.ab3@7834>   MOVE.w $4(A2),D3
000256C8 <AmiBlitz3.ab3@7835>   EXT.l D3
000256CE <AmiBlitz3.ab3@7838>    CMP.b #"[",-1(a5)
000256D2 <AmiBlitz3.ab3@7839>    BNE 'skipo_l30c
000256D4 <AmiBlitz3.ab3@7840>    MOVEQ #0,d0
000256D6 <AmiBlitz3.ab3@7841>    MOVE.b (a5)+,d0
000256D8 <AmiBlitz3.ab3@7842>    MOVE.l d3,-(a7)
000256DA <AmiBlitz3.ab3@7843>    MOVEQ #0,d3
000256E0 <AmiBlitz3.ab3@7844>    JSR atoi
000256E2 <AmiBlitz3.ab3@7845>    MOVE.l (a7)+,d1
000256E6 <AmiBlitz3.ab3@7846>    MOVE.l $a(a2),a2
000256EA <AmiBlitz3.ab3@7847>    MOVE.w 8(a2),d0
000256EC <AmiBlitz3.ab3@7848>    MULS d0,d3
000256EE <AmiBlitz3.ab3@7849>    ADD.l d1,d3
000256F0 <AmiBlitz3.ab3@7852>   MOVE.l (a7)+,a2
000256F4 <AmiBlitz3.ab3@7853>  BRA 'oko
000256FA <AmiBlitz3.ab3@7856>   CMP.w #$c,$8(a2)
000256FE <AmiBlitz3.ab3@7857>      BEQ 'skipo_lf1
00025704 <AmiBlitz3.ab3@7858>      CMP.w #$d,$8(a2)
00025708 <AmiBlitz3.ab3@7859>      BEQ 'skipo_lf1
0002570E <AmiBlitz3.ab3@7862>   JSR evalconst3
00025714 <AmiBlitz3.ab3@7865>   MOVEA.l asmbuff,A2
00025718 <AmiBlitz3.ab3@7866>    BEQ.w 'oko
0002571C <AmiBlitz3.ab3@7867>   CMP.w #$28,D0
00025720 <AmiBlitz3.ab3@7868>    BEQ.w 'oko
00025724 <AmiBlitz3.ab3@7869>   CMP.w #$2C,D0
00025728 <AmiBlitz3.ab3@7870>    BEQ.w 'oko
0002572C <AmiBlitz3.ab3@7871>  BRA.w syntaxerr
00025734 <AmiBlitz3.ab3@7874>   MOVE.b #1,iee
00025738 <AmiBlitz3.ab3@7875>  BRA 'skipo_lf2
0002573C <AmiBlitz3.ab3@7878>   MOVEA.l $4(A2),A1
00025740 <AmiBlitz3.ab3@7880>   MOVE.w $8(A2),D1                                         ;labelmode
00025744 <AmiBlitz3.ab3@7881>   CMP.w #$5,D1
00025748 <AmiBlitz3.ab3@7882>    BNE.w 'notdan
0002574C <AmiBlitz3.ab3@7885>    BSR.w chkword                                           ;word
0002574E <AmiBlitz3.ab3@7888>   MOVE.w D3,(A1)
00025752 <AmiBlitz3.ab3@7889>  BRA.w 'next
00025756 <AmiBlitz3.ab3@7892>   CMP.w #$6,D1
0002575A <AmiBlitz3.ab3@7893>    BNE.w 'notdanxi
0002575E <AmiBlitz3.ab3@7896>    BSR.w chkbyte                                           ;byte
00025762 <AmiBlitz3.ab3@7899>   MOVE.b D3,$1(A1)
00025766 <AmiBlitz3.ab3@7900>  BRA.w 'next
0002576A <AmiBlitz3.ab3@7903>    CMP.w #$11,D1                                           ;byte
0002576E <AmiBlitz3.ab3@7904>    BEQ.w 'isbyte2
00025772 <AmiBlitz3.ab3@7905>    CMP.w #$c,d1
00025776 <AmiBlitz3.ab3@7906>    BEQ 'single1
0002577A <AmiBlitz3.ab3@7907>    CMP.w #$d,d1
0002577E <AmiBlitz3.ab3@7908>    BEQ 'double1
00025782 <AmiBlitz3.ab3@7909>   CMP.w #$7,D1
00025786 <AmiBlitz3.ab3@7910>    BEQ.w 'word                                             ;word
0002578A <AmiBlitz3.ab3@7911>   CMP.w #$8,D1
0002578E <AmiBlitz3.ab3@7912>    BNE.w 'notabsl
00025794 <AmiBlitz3.ab3@7915>   MOVE.w asmtype,D1                                        ;long
00025798 <AmiBlitz3.ab3@7916>    BEQ.w 'notpcrel
0002579C <AmiBlitz3.ab3@7917>      BSR.w asmoff
0002579E <AmiBlitz3.ab3@7920>   MOVE.l D3,(A1)
000257A2 <AmiBlitz3.ab3@7921>  BRA.w 'next
000257A8 <AmiBlitz3.ab3@7924>   fmove.s fp0,0(a1)
000257AC <AmiBlitz3.ab3@7925>  BRA.w 'next
000257B2 <AmiBlitz3.ab3@7928>   fmove.d fp0,0(a1)
000257B6 <AmiBlitz3.ab3@7929>  BRA.w 'next
000257BA <AmiBlitz3.ab3@7932>   CMP.w #$9,D1
000257BE <AmiBlitz3.ab3@7933>    BNE.w 'notdpc
000257C0 <AmiBlitz3.ab3@7934>   SUB.l A1,D3                                              ;branchword
000257C4 <AmiBlitz3.ab3@7935>    BSR.w chkword
000257C6 <AmiBlitz3.ab3@7936>   MOVE.w D3,(A1)
000257CA <AmiBlitz3.ab3@7937>  BRA.w 'next
000257CE <AmiBlitz3.ab3@7940>   CMP.w #$A,D1
000257D2 <AmiBlitz3.ab3@7941>    BNE.w 'imm
000257D4 <AmiBlitz3.ab3@7942>   SUB.l A1,D3                                              ;branchbyte
000257D8 <AmiBlitz3.ab3@7943>  BRA.w 'isbyte
000257DC <AmiBlitz3.ab3@7946>   CMP.w #$11,d1
000257E0 <AmiBlitz3.ab3@7947>   BLE 'imm_org
000257E2 <AmiBlitz3.ab3@7948>   MOVE.l a3,-(a7)
000257E8 <AmiBlitz3.ab3@7949>   LEA pluginbase,a3
000257EC <AmiBlitz3.ab3@7950>   MOVE.l 8(a2),a0
000257EE <AmiBlitz3.ab3@7951>   JSR (a0)                                                 ;hook
000257F0 <AmiBlitz3.ab3@7952>   MOVE.l (a7)+,a3
000257F4 <AmiBlitz3.ab3@7953>  BRA 'next
000257F8 <AmiBlitz3.ab3@7956>   MOVE.w $A(A2),D0
000257FC <AmiBlitz3.ab3@7957>    BEQ.w 'noflag
00025800 <AmiBlitz3.ab3@7958>   CMP.w #$1,D0
00025804 <AmiBlitz3.ab3@7959>    BEQ.w 'tocount
00025808 <AmiBlitz3.ab3@7960>   CMP.w #$3,D0
0002580C <AmiBlitz3.ab3@7961>    BEQ.w 'tomoveq
00025810 <AmiBlitz3.ab3@7962>   CMP.w #$4,D0
00025814 <AmiBlitz3.ab3@7963>    BEQ.w 'totrap
00025818 <AmiBlitz3.ab3@7966>   CMP.w #$B,D1                                             ;long
0002581C <AmiBlitz3.ab3@7967>    BEQ.w 'isabsl
00025820 <AmiBlitz3.ab3@7968>  BRA 'word2                                                ;word
00025826 <AmiBlitz3.ab3@7971>   CMP.l #$F,D3
0002582A <AmiBlitz3.ab3@7972>    BHI.w illtraperr
0002582C <AmiBlitz3.ab3@7973>   OR.b D3,-(A1)
00025830 <AmiBlitz3.ab3@7974>  BRA.w 'next
00025836 <AmiBlitz3.ab3@7977>   CMP.l #$8,D3
0002583A <AmiBlitz3.ab3@7978>    BHI.w illimmerr
0002583C <AmiBlitz3.ab3@7979>   TST.l D3
00025840 <AmiBlitz3.ab3@7980>    BEQ.w illimmerr
00025844 <AmiBlitz3.ab3@7981>   ANDI.w #$7,D3
00025846 <AmiBlitz3.ab3@7982>   LSL.w #8,D3
00025848 <AmiBlitz3.ab3@7983>   LSL.w #1,D3
0002584A <AmiBlitz3.ab3@7984>   OR.w D3,-(A1)
0002584E <AmiBlitz3.ab3@7985>  BRA.w 'next
00025852 <AmiBlitz3.ab3@7988>    BSR.w chkbyte
00025854 <AmiBlitz3.ab3@7989>   MOVE.b D3,-(A1)
00025856 <AmiBlitz3.ab3@7992>   MOVEA.l (A2),A2
0002585A <AmiBlitz3.ab3@7993>  BRA.w 'loop
00025860 <AmiBlitz3.ab3@7996>   CLR.w constmode
00025866 <AmiBlitz3.ab3@7999>   CLR.b curtemplabel
00025868 <AmiBlitz3.ab3@8000> RTS
0002586A <AmiBlitz3.ab3@8009>   BTST D3,D6
0002586E <AmiBlitz3.ab3@8010>    BEQ.w illeaerr
00025872 <AmiBlitz3.ab3@8011>    BSR.w makemode
00025876 <AmiBlitz3.ab3@8012>   CMP.w #$7,D3
0002587A <AmiBlitz3.ab3@8013>    BCS.w 'skip
0002587C <AmiBlitz3.ab3@8014>   MOVE.w D3,D2
0002587E <AmiBlitz3.ab3@8015>   SUBQ.w #7,D2
00025882 <AmiBlitz3.ab3@8016>   CMP.w #$5,D2
00025886 <AmiBlitz3.ab3@8017>    BCS.w 'skip0
00025888 <AmiBlitz3.ab3@8018>   MOVEQ.l #$04,D2
0002588A <AmiBlitz3.ab3@8021>   MOVEQ.l #$07,D3
0002588C <AmiBlitz3.ab3@8024>   MOVE.b D7,D0
00025890 <AmiBlitz3.ab3@8025>   ANDI.w #$F,D0
00025894 <AmiBlitz3.ab3@8026>   CMP.w #$F,D0
00025898 <AmiBlitz3.ab3@8027>    BEQ.w 'skip2
0002589A <AmiBlitz3.ab3@8028>   LSL.w D0,D3
0002589C <AmiBlitz3.ab3@8029>   OR.w D3,D1
0002589E <AmiBlitz3.ab3@8032>   LSR.w #4,D7
000258A2 <AmiBlitz3.ab3@8033>   ANDI.w #$F,D7
000258A6 <AmiBlitz3.ab3@8034>   CMP.w #$F,D7
000258AA <AmiBlitz3.ab3@8035>    BEQ.w 'skip3
000258AC <AmiBlitz3.ab3@8036>   LSL.w D7,D2
000258AE <AmiBlitz3.ab3@8037>   OR.w D2,D1
000258B0 <AmiBlitz3.ab3@8040> RTS
000258B6 <AmiBlitz3.ab3@8044>   CMP.l #$7F,D3
000258BA <AmiBlitz3.ab3@8045>    BGT.w illdiserr
000258C0 <AmiBlitz3.ab3@8046>   CMP.l #$FFFFFF80,D3                                      ;#-128,d3 org source
000258C4 <AmiBlitz3.ab3@8047>    BLT.w illdiserr
000258C6 <AmiBlitz3.ab3@8048> RTS
000258CC <AmiBlitz3.ab3@8052>   CMP.l #$7fff,D3
000258D0 <AmiBlitz3.ab3@8053>    BGT.w illdiserr
000258D6 <AmiBlitz3.ab3@8054>   CMP.l #$FFFF8000,D3                                      ;#-32768,d3 org source
000258DA <AmiBlitz3.ab3@8055>    BLT.w illdiserr
000258DC <AmiBlitz3.ab3@8056> RTS
000258DE <AmiBlitz3.ab3@8061>   MOVE.b (a5)+,d0
000258E0 <AmiBlitz3.ab3@8062>   CMP.b d1,d0
000258E4 <AmiBlitz3.ab3@8063>   BEQ 'll10
000258E6 <AmiBlitz3.ab3@8064>   TST.b d0
000258EA <AmiBlitz3.ab3@8065>   BNE 'll20
000258EC <AmiBlitz3.ab3@8068>   SUBQ #1,a5
000258EE <AmiBlitz3.ab3@8069> RTS
000258F0 <AmiBlitz3.ab3@8074>   MOVE.b (a5)+,d0
000258F4 <AmiBlitz3.ab3@8075>   CMP.b #",",d0
000258F8 <AmiBlitz3.ab3@8076>   BEQ 'll10
000258FC <AmiBlitz3.ab3@8077>   CMP.b #";",d0
00025900 <AmiBlitz3.ab3@8078>   BEQ 'll10
00025904 <AmiBlitz3.ab3@8079>  CMP.b #":",d0
00025908 <AmiBlitz3.ab3@8080>   BEQ 'll10
0002590A <AmiBlitz3.ab3@8083>   TST.b d0
0002590E <AmiBlitz3.ab3@8084>   BNE 'll20
00025910 <AmiBlitz3.ab3@8087>   SUBQ #1,a5
00025912 <AmiBlitz3.ab3@8088> RTS
00025914 <AmiBlitz3.ab3@8092>   ADD.l a2,d1
0002591A <AmiBlitz3.ab3@8093>   LEA tempspace,a1
0002591C <AmiBlitz3.ab3@8094>   MOVE.l d1,a0
0002591E <AmiBlitz3.ab3@8097>   MOVE.b (a0)+,(a1)+
00025922 <AmiBlitz3.ab3@8098>   BNE.s 'l10
00025924 <AmiBlitz3.ab3@8099>   SUBQ.l #1,a0
00025926 <AmiBlitz3.ab3@8100>   SUBQ.l #1,a1
00025928 <AmiBlitz3.ab3@8103>   MOVE.b (a5)+,(a1)+
0002592C <AmiBlitz3.ab3@8104>   BNE.s 'l20
0002592E <AmiBlitz3.ab3@8105>   CLR.b (a1)
00025934 <AmiBlitz3.ab3@8106>   LEA tempspace,a5
00025936 <AmiBlitz3.ab3@8107> RTS
0002593A <AmiBlitz3.ab3@8111>   MOVEM.l D1-D2/A0,-(A7)
0002593C <AmiBlitz3.ab3@8112>   MOVE.l d0,d2
0002593E <AmiBlitz3.ab3@8113>   MOVEQ #0,d1
00025940 <AmiBlitz3.ab3@8114>   MOVE.l a5,a4
00025942 <AmiBlitz3.ab3@8117>   ADDQ.l #1,d1
00025944 <AmiBlitz3.ab3@8118>   MOVE.b (a5)+,d0
00025948 <AmiBlitz3.ab3@8119>   CMP.b #",",d0
0002594C <AmiBlitz3.ab3@8120>   BEQ 'll10
00025950 <AmiBlitz3.ab3@8121>   CMP.b #";",d0
00025954 <AmiBlitz3.ab3@8122>   BEQ 'll10
00025958 <AmiBlitz3.ab3@8123>   CMP.b #":",d0
0002595C <AmiBlitz3.ab3@8124>   BEQ 'll10
00025960 <AmiBlitz3.ab3@8125>   CMP.b #"(",d0
00025964 <AmiBlitz3.ab3@8126>   BEQ 'll10
00025966 <AmiBlitz3.ab3@8127>   TST.b d0
0002596A <AmiBlitz3.ab3@8128>   BNE 'll20
0002596C <AmiBlitz3.ab3@8131>   SUBQ #1,a5
00025970 <AmiBlitz3.ab3@8132>   CMP.b #"'",(a4)
00025974 <AmiBlitz3.ab3@8133>   BEQ 'llocal
0002597A <AmiBlitz3.ab3@8134>   TST.w inmacro
0002597E <AmiBlitz3.ab3@8135>   BNE 'lmacro
00025980 <AmiBlitz3.ab3@8136>   MOVEQ.l #$14+4,D0
00025982 <AmiBlitz3.ab3@8137>   ADD.l d1,d0
00025984 <AmiBlitz3.ab3@8138>   MOVE.l d1,-(a7)
00025986 <AmiBlitz3.ab3@8139>   MOVEQ.l #$01,D1
0002598C <AmiBlitz3.ab3@8140>   MOVEA.l _execbase,A6
00025992 <AmiBlitz3.ab3@8141>   MOVE.l mempool2,a0
00025996 <AmiBlitz3.ab3@8142>   JSR _AllocPooled(a6)
00025998 <AmiBlitz3.ab3@8144>   MOVE.l (a7)+,d1
0002599A <AmiBlitz3.ab3@8145>   TST.l d0
0002599E <AmiBlitz3.ab3@8146>   BEQ nomemory
000259A0 <AmiBlitz3.ab3@8147>   MOVEA.l D0,A0
000259A8 <AmiBlitz3.ab3@8149>   MOVE.w linenumat+2,$A(A0)
000259AE <AmiBlitz3.ab3@8151>   MOVE.l templabel,(A0)
000259B4 <AmiBlitz3.ab3@8152>   MOVE.l A0,templabel
000259BC <AmiBlitz3.ab3@8153>   MOVE.l destpointer,$4(A0)
000259C0 <AmiBlitz3.ab3@8154>   MOVE.l d2,$8(A0)
000259C4 <AmiBlitz3.ab3@8155>   LEA $E(A0),A0
000259C8 <AmiBlitz3.ab3@8156>   MOVE.b #$14,(A0)+
000259CA <AmiBlitz3.ab3@8157>   CLR.b (a0)+
000259CC <AmiBlitz3.ab3@8159>   MOVE.l a0,d2
000259CE <AmiBlitz3.ab3@8160>   ADDQ.l #4,d2
000259D0 <AmiBlitz3.ab3@8161>   MOVE.l d2,(a0)+
000259D2 <AmiBlitz3.ab3@8164>   MOVE.b (a4)+,(a0)+
000259D4 <AmiBlitz3.ab3@8165>   SUBQ.l #1,d1
000259D8 <AmiBlitz3.ab3@8166>   BNE 'lc1
000259DA <AmiBlitz3.ab3@8167>   CLR.b (a0)+
000259E0 <AmiBlitz3.ab3@8168>   MOVE.w linenumat,(a0)
000259E4 <AmiBlitz3.ab3@8169>   MOVEM.l (A7)+,D1-D2/A0
000259E6 <AmiBlitz3.ab3@8170>  RTS
000259E8 <AmiBlitz3.ab3@8173>   MOVEQ.l #$10+2,D0
000259EA <AmiBlitz3.ab3@8174>   ADD.l d1,d0
000259EE <AmiBlitz3.ab3@8175>   MOVEM.l a4/d3,-(a7)
000259F0 <AmiBlitz3.ab3@8176>   MOVE.l d1,d3
000259F2 <AmiBlitz3.ab3@8177>   MOVEQ.l #$01,D1
000259F8 <AmiBlitz3.ab3@8178>   MOVEA.l _execbase,A6
000259FE <AmiBlitz3.ab3@8179>   MOVE.l mempool2,a0
00025A02 <AmiBlitz3.ab3@8180>   JSR _AllocPooled(a6)
00025A04 <AmiBlitz3.ab3@8182>   TST.l d0
00025A08 <AmiBlitz3.ab3@8183>   BEQ nomemory
00025A0A <AmiBlitz3.ab3@8184>   MOVEA.l D0,A0
00025A12 <AmiBlitz3.ab3@8187>   MOVE.w linenumat+2,$C(A0)
00025A18 <AmiBlitz3.ab3@8188>   MOVE.l templabel,(A0)
00025A1E <AmiBlitz3.ab3@8189>   MOVE.l A0,templabel
00025A26 <AmiBlitz3.ab3@8190>   MOVE.l destpointer,$4(A0)
00025A2A <AmiBlitz3.ab3@8191>   MOVE.l d2,$8(A0)
00025A2E <AmiBlitz3.ab3@8192>   LEA $E(A0),A0
00025A30 <AmiBlitz3.ab3@8193>   MOVE.b d3,(A0)+
00025A36 <AmiBlitz3.ab3@8194>   ADD.b #$10,-1(a0)
00025A3A <AmiBlitz3.ab3@8195>   MOVE.b #$1,(a0)+
00025A3C <AmiBlitz3.ab3@8196>   SUBQ.w #1,d3
00025A3E <AmiBlitz3.ab3@8199>   MOVE.b (a4)+,(a0)+
00025A40 <AmiBlitz3.ab3@8200>   SUBQ.l #1,d3
00025A44 <AmiBlitz3.ab3@8201>   BNE.s 'lm2
00025A46 <AmiBlitz3.ab3@8202>   CLR.b (a0)+
00025A4C <AmiBlitz3.ab3@8203>   MOVE.w linenumat,(a0)
00025A50 <AmiBlitz3.ab3@8204>   MOVEM.l (a7)+,d3/a4
00025A54 <AmiBlitz3.ab3@8205>   MOVEM.l (A7)+,D1-D2/A0
00025A56 <AmiBlitz3.ab3@8206>  RTS
00025A5C <AmiBlitz3.ab3@8209>   LEA lastgloballabel,a1
00025A5E <AmiBlitz3.ab3@8212>   ADDQ.l #1,d1
00025A60 <AmiBlitz3.ab3@8213>   TST.b (a1)+
00025A64 <AmiBlitz3.ab3@8214>   BNE.s 'll11
00025A66 <AmiBlitz3.ab3@8215>   MOVEQ.l #$10+2,D0
00025A68 <AmiBlitz3.ab3@8216>   ADD.l d1,d0
00025A6C <AmiBlitz3.ab3@8217>   MOVEM.l a4/d3,-(a7)
00025A6E <AmiBlitz3.ab3@8218>   MOVE.l d1,d3
00025A70 <AmiBlitz3.ab3@8219>   MOVEQ.l #$01,D1
00025A76 <AmiBlitz3.ab3@8220>   MOVEA.l _execbase,A6
00025A7C <AmiBlitz3.ab3@8221>   MOVE.l mempool2,a0
00025A80 <AmiBlitz3.ab3@8222>   JSR _AllocPooled(a6)
00025A82 <AmiBlitz3.ab3@8224>   TST.l d0
00025A86 <AmiBlitz3.ab3@8225>   BEQ nomemory
00025A88 <AmiBlitz3.ab3@8226>   MOVEA.l D0,A0
00025A90 <AmiBlitz3.ab3@8229>   MOVE.w linenumat+2,$C(A0)
00025A96 <AmiBlitz3.ab3@8230>   MOVE.l templabel,(A0)
00025A9C <AmiBlitz3.ab3@8231>   MOVE.l A0,templabel
00025AA4 <AmiBlitz3.ab3@8232>   MOVE.l destpointer,$4(A0)
00025AA8 <AmiBlitz3.ab3@8233>   MOVE.l d2,$8(A0)
00025AAC <AmiBlitz3.ab3@8234>   LEA $E(A0),A0
00025AAE <AmiBlitz3.ab3@8235>   MOVE.b d3,(A0)+
00025AB4 <AmiBlitz3.ab3@8236>   ADD.b #$10,-1(a0)
00025AB8 <AmiBlitz3.ab3@8237>   MOVE.b #$1,(a0)+
00025ABA <AmiBlitz3.ab3@8238>   SUBQ.w #1,d3
00025AC0 <AmiBlitz3.ab3@8239>   LEA lastgloballabel,a1
00025AC2 <AmiBlitz3.ab3@8242>   SUBQ.l #1,d3
00025AC4 <AmiBlitz3.ab3@8243>   MOVE.b (a1)+,(a0)+
00025AC8 <AmiBlitz3.ab3@8244>   BNE.s 'lm3
00025ACA <AmiBlitz3.ab3@8245>   SUBQ.l #1,a0
00025ACC <AmiBlitz3.ab3@8248>   MOVE.b (a4)+,(a0)+
00025ACE <AmiBlitz3.ab3@8249>   SUBQ.l #1,d3
00025AD2 <AmiBlitz3.ab3@8250>   BNE.s 'lm1
00025AD4 <AmiBlitz3.ab3@8251>   CLR.b (a0)+
00025ADA <AmiBlitz3.ab3@8252>   MOVE.w linenumat,(a0)
00025ADE <AmiBlitz3.ab3@8253>   MOVEM.l (a7)+,d3/a4
00025AE2 <AmiBlitz3.ab3@8254>   MOVEM.l (A7)+,D1-D2/A0
00025AE4 <AmiBlitz3.ab3@8255> RTS
00025B0E <AmiBlitz3.ab3@8259>   !basic
00025B70 <AmiBlitz3.ab3@8260>   error{!TRANS{"No memory available!!!\\nAB3 will terminate due to low memory!"}}
00025B82 <AmiBlitz3.ab3@8261>   loop Delay_ 1
00025B88 <AmiBlitz3.ab3@8262> Goto loop
00025B8C <AmiBlitz3.ab3@8266>   MOVEM.l D0-D2/A0,-(A7)
00025B90 <AmiBlitz3.ab3@8267>   MOVE.w $E(A0),-(A7)
00025B94 <AmiBlitz3.ab3@8268>    BPL.w 'ok
00025B96 <AmiBlitz3.ab3@8269>   CLR.w (A7)
00025B98 <AmiBlitz3.ab3@8272>   MOVE.l A1,-(A7)
00025B9A <AmiBlitz3.ab3@8273>   MOVEQ.l #$10+2,D0
00025BA0 <AmiBlitz3.ab3@8274>   ADD.w asmlen,D0
00025BA2 <AmiBlitz3.ab3@8275>   MOVE.w D0,D2
00025BA4 <AmiBlitz3.ab3@8276>   MOVEQ.l #$01,D1
00025BAA <AmiBlitz3.ab3@8277>   MOVEA.l _execbase,A6
00025BB0 <AmiBlitz3.ab3@8278>   MOVE.l mempool2,a0
00025BB4 <AmiBlitz3.ab3@8279>   JSR _AllocPooled(a6)
00025BB6 <AmiBlitz3.ab3@8281>   MOVEA.l D0,A0
00025BBE <AmiBlitz3.ab3@8284>   MOVE.w linenumat+2,$C(A0)
00025BC4 <AmiBlitz3.ab3@8285>   MOVE.l templabel,(A0)
00025BCA <AmiBlitz3.ab3@8286>   MOVE.l A0,templabel
00025BCE <AmiBlitz3.ab3@8287>   MOVE.l (A7),$4(A0)
00025BD2 <AmiBlitz3.ab3@8288>   MOVE.w d3,$8(A0)
00025BD8 <AmiBlitz3.ab3@8289>   MOVE.w $4(A7),$A(A0)
00025BDC <AmiBlitz3.ab3@8290>   LEA $E(A0),A0
00025BDE <AmiBlitz3.ab3@8291>   MOVE.b D2,(A0)+                                           ;length
00025BE4 <AmiBlitz3.ab3@8292>   MOVEA.l asmbuff,A1
00025BE6 <AmiBlitz3.ab3@8293>   ADDQ.w #1,A1
00025BE8 <AmiBlitz3.ab3@8294>   MOVE.b (A1)+,(A0)+                                        ;type - 0 = indirect,else direct
00025BEC <AmiBlitz3.ab3@8295>    BNE.w 'loop
00025BEE <AmiBlitz3.ab3@8296>   MOVE.l (A1)+,(A0)+
00025BF4 <AmiBlitz3.ab3@8297>   MOVE.w linenumat,(a0)
00025BF8 <AmiBlitz3.ab3@8298>  BRA.w 'loopdone
00025BFA <AmiBlitz3.ab3@8301>    MOVE.b (A1)+,(A0)+
00025BFE <AmiBlitz3.ab3@8302>    BNE.w 'loop
00025C04 <AmiBlitz3.ab3@8303>    MOVE.w linenumat,(a0)
00025C06 <AmiBlitz3.ab3@8306>   MOVEA.l (A7)+,A1
00025C08 <AmiBlitz3.ab3@8307>   ADDQ.w #2,A7
00025C0C <AmiBlitz3.ab3@8308>   MOVEM.l (A7)+,D0-D2/A0
00025C0E <AmiBlitz3.ab3@8309> RTS
00025C12 <AmiBlitz3.ab3@8313>   CMP.w #$5,D3
00025C16 <AmiBlitz3.ab3@8314>    BCS.w 'done
00025C1A <AmiBlitz3.ab3@8315>   CMP.w #$B,D3
00025C1E <AmiBlitz3.ab3@8316>    BHI.w 'done2
00025C22 <AmiBlitz3.ab3@8317>    BEQ.w 'imm
00025C26 <AmiBlitz3.ab3@8318>    BSR.w insasm
00025C2A <AmiBlitz3.ab3@8319>   CMP.w #$5,D3
00025C2E <AmiBlitz3.ab3@8320>    BEQ.w 'word
00025C32 <AmiBlitz3.ab3@8321>   CMP.w #$6,D3
00025C36 <AmiBlitz3.ab3@8322>    BEQ.w 'dxi
00025C3A <AmiBlitz3.ab3@8323>   CMP.w #$7,D3
00025C3E <AmiBlitz3.ab3@8324>    BEQ.w 'word
00025C42 <AmiBlitz3.ab3@8325>   CMP.w #$8,D3
00025C46 <AmiBlitz3.ab3@8326>    BEQ.w 'long
00025C4A <AmiBlitz3.ab3@8327>   CMP.w #$9,D3
00025C4E <AmiBlitz3.ab3@8328>    BEQ.w 'word
00025C54 <AmiBlitz3.ab3@8332>   CMPA.l destbufferend,A1
00025C58 <AmiBlitz3.ab3@8333>    BCS.w 'ok7
00025C5A <AmiBlitz3.ab3@8334>   ADDQ.w #2,A1
00025C5C <AmiBlitz3.ab3@8335>  RTS
00025C5E <AmiBlitz3.ab3@8338>   MOVE.w D4,(A1)+
00025C60 <AmiBlitz3.ab3@8339>  RTS
00025C68 <AmiBlitz3.ab3@8342>   CMPI.w #$8,asmsize
00025C6C <AmiBlitz3.ab3@8343>    BCC.w 'immlong
00025C6E <AmiBlitz3.ab3@8344>   MOVEQ.l #$10,D3
00025C72 <AmiBlitz3.ab3@8345>    BSR.w insasm
00025C74 <AmiBlitz3.ab3@8346>   MOVEQ.l #$0B,D3
00025C78 <AmiBlitz3.ab3@8347>  BRA.w 'word
00025C7C <AmiBlitz3.ab3@8350>   BSR.w insasm
00025C7E <AmiBlitz3.ab3@8353>   ADDQ.w #2,A1
00025C80 <AmiBlitz3.ab3@8356>   ADDQ.w #2,A1
00025C82 <AmiBlitz3.ab3@8357>  RTS
00025C86 <AmiBlitz3.ab3@8360>   CMP.w #$F,D3
00025C8A <AmiBlitz3.ab3@8361>    BNE.w 'done
00025C90 <AmiBlitz3.ab3@8362>   CMPA.l destbufferend,A1
00025C94 <AmiBlitz3.ab3@8363>    BCS.w 'ok3
00025C96 <AmiBlitz3.ab3@8364>   ADDQ.w #2,A1
00025C98 <AmiBlitz3.ab3@8365>   ADDQ.w #4,A7
00025C9A <AmiBlitz3.ab3@8366>  RTS
00025C9C <AmiBlitz3.ab3@8369>   MOVE.w D2,(A1)+
00025C9E <AmiBlitz3.ab3@8370>   ADDQ.w #4,A7
00025CA0 <AmiBlitz3.ab3@8373> RTS
00025CA4 <AmiBlitz3.ab3@8382>   BSR.w storeloc
00025CAE <AmiBlitz3.ab3@8384>   MOVE.l linenumat,oldline
00025CB0 <AmiBlitz3.ab3@8386>   MOVEQ.l #$00,D1
00025CB4 <AmiBlitz3.ab3@8387>    BSR.w get1bytemain    ;eol?
00025CB8 <AmiBlitz3.ab3@8388>    BEQ.w 'done
00025CBA <AmiBlitz3.ab3@8389>   MOVEQ.l #$00,D3
00025CBE <AmiBlitz3.ab3@8390>  BRA.w 'skiphelp
00025CC2 <AmiBlitz3.ab3@8393>    BSR.w get1bytemain
00025CC6 <AmiBlitz3.ab3@8394>    BNE.w 'skip
00025CC8 <AmiBlitz3.ab3@8398>   TST.w D3
00025CCC <AmiBlitz3.ab3@8399>    BNE.w brackets_                                         ;syntax error brackets
00025CD0 <AmiBlitz3.ab3@8400>  BRA.w 'done2
00025CD6 <AmiBlitz3.ab3@8403>    MOVE.w instringon,D4
00025CDA <AmiBlitz3.ab3@8406>     BEQ 'skiphelp
00025CDC <AmiBlitz3.ab3@8409>     MOVEQ #0,d0
00025CDE <AmiBlitz3.ab3@8410>      MOVE.b (a5)+,d0                                       ;fix "ue"
00025CE4 <AmiBlitz3.ab3@8411>      MOVE.w d0,lastchar
00025CE8 <AmiBlitz3.ab3@8412>      BEQ 'ready
00025CEC <AmiBlitz3.ab3@8413>      CMP.b #$22,d0
00025CF0 <AmiBlitz3.ab3@8414>      BNE 'l1
00025CF6 <AmiBlitz3.ab3@8415>      NOT.w instringon
00025CFA <AmiBlitz3.ab3@8416>  BRA 'loop
00025CFE <AmiBlitz3.ab3@8421>            CMP.b #"@",d0                                   ;expand line @@ 1. for parameter
00025D02 <AmiBlitz3.ab3@8422>            BNE 'l10
00025D06 <AmiBlitz3.ab3@8423>            CMP.b #"@",(a5)
00025D0A <AmiBlitz3.ab3@8424>            BNE 'l10
00025D10 <AmiBlitz3.ab3@8427>            TST.w ininclude
00025D14 <AmiBlitz3.ab3@8428>            BNE 'inc
00025D1A <AmiBlitz3.ab3@8429>            MOVE.l sourceline3,a5
00025D20 <AmiBlitz3.ab3@8430>            CMP.l #0,a5
00025D24 <AmiBlitz3.ab3@8431>            BNE 'l11t
00025D2A <AmiBlitz3.ab3@8432>            MOVEA.l sourceline,A5
00025D2C <AmiBlitz3.ab3@8435>            MOVEA.l (A5),A5
00025D32 <AmiBlitz3.ab3@8436>            CMP.l #0,a5
00025D36 <AmiBlitz3.ab3@8437>            BEQ 'done2
00025D3C <AmiBlitz3.ab3@8438>            MOVE.l a5,sourceline3
00025D40 <AmiBlitz3.ab3@8439>            LEA $9(A5),A5
00025D44 <AmiBlitz3.ab3@8440>   BRA 'l11
00025D46 <AmiBlitz3.ab3@8443>            ADDQ.l #1,a5
00025D48 <AmiBlitz3.ab3@8444>            TST.b (a5)
00025D4C <AmiBlitz3.ab3@8445>            BNE 'inc
00025D4E <AmiBlitz3.ab3@8449>            ADDQ.l #1,a5
00025D50 <AmiBlitz3.ab3@8450>            TST.b (a5)
00025D54 <AmiBlitz3.ab3@8451>            BEQ illeolerr
00025D56 <AmiBlitz3.ab3@8452>            MOVE.l a5,-(a7)
00025D5A <AmiBlitz3.ab3@8455>       CMP.b #" ",(a5)+
00025D5E <AmiBlitz3.ab3@8456>       BEQ 'l110
00025D64 <AmiBlitz3.ab3@8457>        CMP.b #";",-1(a5)
00025D66 <AmiBlitz3.ab3@8458>        MOVE.l (a7)+,a5
00025D6A <AmiBlitz3.ab3@8459>        BEQ 'l111
00025D6E <AmiBlitz3.ab3@8460>   BRA 'loop
00025D72 <AmiBlitz3.ab3@8464>    CMP.w #$29,D0      ;')'
00025D76 <AmiBlitz3.ab3@8465>    BNE.w 'skip2
00025D78 <AmiBlitz3.ab3@8466>   TST.w D3
00025D7C <AmiBlitz3.ab3@8467>    BEQ.w 'done2
00025D7E <AmiBlitz3.ab3@8470>   SUBQ.w #1,D3
00025D82 <AmiBlitz3.ab3@8471>  BRA.w 'loop
00025D86 <AmiBlitz3.ab3@8474>    CMP.w #$7D,D0      ;'}'
00025D8A <AmiBlitz3.ab3@8475>    BEQ.w 'skip3
00025D8E <AmiBlitz3.ab3@8476>   CMP.w #$28,D0       ;'('
00025D92 <AmiBlitz3.ab3@8477>    BNE.w 'skip4a
00025D94 <AmiBlitz3.ab3@8480>    ADDQ.w #1,D3
00025D98 <AmiBlitz3.ab3@8481>  BRA.w 'loop
00025D9C <AmiBlitz3.ab3@8484>   CMP.w #$7B,D0        ;'{'
00025DA0 <AmiBlitz3.ab3@8485>    BEQ.w 'skip4
00025DA4 <AmiBlitz3.ab3@8486>   CMP.w #$2C,D0        ;','
00025DA8 <AmiBlitz3.ab3@8487>    BNE.w 'loop
00025DAA <AmiBlitz3.ab3@8488>   TST.w D3
00025DAE <AmiBlitz3.ab3@8489>    BNE.w 'loop
00025DB0 <AmiBlitz3.ab3@8490>   ADDQ.w #1,D1
00025DB4 <AmiBlitz3.ab3@8491>  BRA.w 'loop
00025DB6 <AmiBlitz3.ab3@8494>   ADDQ.w #1,D1
00025DBC <AmiBlitz3.ab3@8498>   CLR.l sourceline3
00025DC6 <AmiBlitz3.ab3@8499>   MOVE.l oldline,linenumat
00025DCA <AmiBlitz3.ab3@8501> BRA.w resloc
00025DD0 <AmiBlitz3.ab3@8514>    CLR.w numreps
00025DD2 <AmiBlitz3.ab3@8515>   MOVE.w D1,D0
00025DD6 <AmiBlitz3.ab3@8516>   ANDI.w #$FF00,D0
00025DDA <AmiBlitz3.ab3@8517>    BEQ.w 'noreps
00025DDC <AmiBlitz3.ab3@8518>   LSR.w #8,D0
00025DDE <AmiBlitz3.ab3@8519>   LSR.w #4,D0           ;d0= start of reps
00025DE2 <AmiBlitz3.ab3@8520>    BEQ.w 'skip
00025DE4 <AmiBlitz3.ab3@8521>   SUB.b D0,D1           ;new number to fetch
00025DEE <AmiBlitz3.ab3@8523>    MOVE.w regnum,regnumfunc
00025DF4 <AmiBlitz3.ab3@8524>    MOVE.b funcparloop,-(a7)
00025DFC <AmiBlitz3.ab3@8525>    MOVE.b #0,funcparloop
00025E02 <AmiBlitz3.ab3@8526>    MOVE.l leftsidetype,-(a7)
00025E08 <AmiBlitz3.ab3@8527>    MOVE.l rightsidetype,-(a7)
00025E0E <AmiBlitz3.ab3@8528>    MOVE.w leftsideflagmask,-(a7)
00025E14 <AmiBlitz3.ab3@8529>    MOVE.w rightsideflagmask,-(a7)
00025E1A <AmiBlitz3.ab3@8530>    CLR.l leftsidetype
00025E20 <AmiBlitz3.ab3@8531>    CLR.l rightsidetype
00025E26 <AmiBlitz3.ab3@8532>    CLR.w leftsideflagmask
00025E2C <AmiBlitz3.ab3@8533>    CLR.w rightsideflagmask
00025E32 <AmiBlitz3.ab3@8534>    MOVE.b blitzparloop,-(a7)
00025E3A <AmiBlitz3.ab3@8535>    MOVE.b #1,blitzparloop
00025E3E <AmiBlitz3.ab3@8537>    BSR.w fetchpees2      ;fetch first parms
00025E44 <AmiBlitz3.ab3@8539>    MOVE.b (a7)+,blitzparloop
00025E4A <AmiBlitz3.ab3@8540>    MOVE.w (a7)+,rightsideflagmask
00025E50 <AmiBlitz3.ab3@8541>    MOVE.w (a7)+,leftsideflagmask
00025E56 <AmiBlitz3.ab3@8542>    MOVE.l (a7)+,rightsidetype
00025E5C <AmiBlitz3.ab3@8543>    MOVE.l (a7)+,leftsidetype
00025E62 <AmiBlitz3.ab3@8544>    MOVE.b (a7)+,funcparloop
00025E66 <AmiBlitz3.ab3@8546>   CMP.w #$2C,D0          ;','
00025E6A <AmiBlitz3.ab3@8547>    BNE.w syntaxerr
00025E6C <AmiBlitz3.ab3@8552>   MOVE.w D1,D2
00025E6E <AmiBlitz3.ab3@8553>   LSR.w #8,D2
00025E72 <AmiBlitz3.ab3@8554>   ANDI.w #$7,D2         ;# repeatable....
00025E74 <AmiBlitz3.ab3@8557>    CMP.b D2,D1
00025E78 <AmiBlitz3.ab3@8558>    BCS.w 'repsdone      ;all reps done....
00025E7A <AmiBlitz3.ab3@8559>   SUB.b D2,D1
00025E7E <AmiBlitz3.ab3@8560>   MOVEM.l D2/A2,-(A7)
00025E80 <AmiBlitz3.ab3@8561>   MOVE.w D2,D0
00025E86 <AmiBlitz3.ab3@8563>   MOVE.b funcparloop,-(a7)
00025E8E <AmiBlitz3.ab3@8564>   MOVE.b #0,funcparloop
00025E94 <AmiBlitz3.ab3@8565>   MOVE.l leftsidetype,-(a7)
00025E9A <AmiBlitz3.ab3@8566>   MOVE.l rightsidetype,-(a7)
00025EA0 <AmiBlitz3.ab3@8567>   MOVE.w leftsideflagmask,-(a7)
00025EA6 <AmiBlitz3.ab3@8568>   MOVE.w rightsideflagmask,-(a7)
00025EAC <AmiBlitz3.ab3@8569>   CLR.l leftsidetype
00025EB2 <AmiBlitz3.ab3@8570>   CLR.l rightsidetype
00025EB8 <AmiBlitz3.ab3@8571>   CLR.w leftsideflagmask
00025EBE <AmiBlitz3.ab3@8572>   CLR.w rightsideflagmask
00025EC4 <AmiBlitz3.ab3@8573>   MOVE.b blitzparloop,-(a7)
00025ECC <AmiBlitz3.ab3@8574>   MOVE.b #1,blitzparloop
00025ED0 <AmiBlitz3.ab3@8576>   BSR.w fetchpees4
00025ED6 <AmiBlitz3.ab3@8578>   MOVE.b (a7)+,blitzparloop
00025EDC <AmiBlitz3.ab3@8579>   MOVE.w (a7)+,rightsideflagmask
00025EE2 <AmiBlitz3.ab3@8580>   MOVE.w (a7)+,leftsideflagmask
00025EE8 <AmiBlitz3.ab3@8581>   MOVE.l (a7)+,rightsidetype
00025EEE <AmiBlitz3.ab3@8582>   MOVE.l (a7)+,leftsidetype
00025EF4 <AmiBlitz3.ab3@8583>   MOVE.b (a7)+,funcparloop
00025EF8 <AmiBlitz3.ab3@8585>   MOVEM.l (A7)+,D2/A2
00025EFE <AmiBlitz3.ab3@8586>   ADDQ.w #1,numreps
00025F02 <AmiBlitz3.ab3@8587>  BRA.w 'rloop
00025F08 <AmiBlitz3.ab3@8590>    MOVE.w numreps,D3
00025F0C <AmiBlitz3.ab3@8591>    BEQ.w syntaxerr
00025F0E <AmiBlitz3.ab3@8592>   ADDA.w D2,A2
00025F12 <AmiBlitz3.ab3@8593>   ANDI.w #$FF,D1
00025F16 <AmiBlitz3.ab3@8594>    BEQ.w 'done
00025F1A <AmiBlitz3.ab3@8601>   CMP.w #$2C,D0       ;','
00025F1E <AmiBlitz3.ab3@8602>    BNE.w syntaxerr
00025F20 <AmiBlitz3.ab3@8605>    MOVE.w D1,D0
00025F24 <AmiBlitz3.ab3@8606>    BNE.w 'fetchpees2b
00025F26 <AmiBlitz3.ab3@8609>  RTS
00025F2C <AmiBlitz3.ab3@8613>   MOVE.b funcparloop,-(a7)
00025F32 <AmiBlitz3.ab3@8614>   MOVE.l leftsidetype,-(a7)
00025F38 <AmiBlitz3.ab3@8615>   MOVE.l rightsidetype,-(a7)
00025F3E <AmiBlitz3.ab3@8616>   MOVE.w leftsideflagmask,-(a7)
00025F44 <AmiBlitz3.ab3@8617>   MOVE.w rightsideflagmask,-(a7)
00025F4A <AmiBlitz3.ab3@8618>   CLR.l leftsidetype
00025F50 <AmiBlitz3.ab3@8619>   CLR.l rightsidetype
00025F56 <AmiBlitz3.ab3@8620>   CLR.w leftsideflagmask
00025F5C <AmiBlitz3.ab3@8621>   CLR.w rightsideflagmask
00025F64 <AmiBlitz3.ab3@8622>   MOVE.b #0,funcparloop
00025F6A <AmiBlitz3.ab3@8623>   MOVE.b blitzparloop,-(a7)
00025F72 <AmiBlitz3.ab3@8624>   MOVE.b #1,blitzparloop
00025F76 <AmiBlitz3.ab3@8625>   BSR.w fetchpees2
00025F7C <AmiBlitz3.ab3@8626>   MOVE.b (a7)+,blitzparloop
00025F82 <AmiBlitz3.ab3@8627>   MOVE.w (a7)+,rightsideflagmask
00025F88 <AmiBlitz3.ab3@8628>   MOVE.w (a7)+,leftsideflagmask
00025F8E <AmiBlitz3.ab3@8629>   MOVE.l (a7)+,rightsidetype
00025F94 <AmiBlitz3.ab3@8630>   MOVE.l (a7)+,leftsidetype
00025F9A <AmiBlitz3.ab3@8631>   MOVE.b (a7)+,funcparloop
00025F9C <AmiBlitz3.ab3@8632> RTS
00025FA0 <AmiBlitz3.ab3@8636> ptype:    Dc.b $3F,$3C,$00,$00                             ;MOVE.W  #$0000,-(A7)
00025FA2 <AmiBlitz3.ab3@8639> partostack:  Ds.w 1                                        ;pmode org source
00025FA4 <AmiBlitz3.ab3@8643>   MOVEQ.l #$01,D2
00025FA8 <AmiBlitz3.ab3@8644> BRA.w fetchpees3
00025FAA <AmiBlitz3.ab3@8647>   MOVEQ.l #$00,D2
00025FAE <AmiBlitz3.ab3@8650>   ANDI.w #$F,D0
00025FB4 <AmiBlitz3.ab3@8658>   CLR.w parnum
00025FB6 <AmiBlitz3.ab3@8659>   MOVE.w D1,-(A7)
00025FBA <AmiBlitz3.ab3@8660>   MOVE.w partostack(PC),-(A7)                              ;in case of recursion
00025FC0 <AmiBlitz3.ab3@8661>   MOVE.w D2,partostack
00025FC2 <AmiBlitz3.ab3@8662>   MOVE.w D0,-(A7)
00025FC6 <AmiBlitz3.ab3@8663>   CMP.w #"@@",(a5)                                        
00025FCA <AmiBlitz3.ab3@8664>   BNE 'loop                                      ;was 'l15
00025FD0 <AmiBlitz3.ab3@8665>   TST.w ininclude                                          ;merge macrolines
00025FD4 <AmiBlitz3.ab3@8666>   BNE errorjoin
00025FDA <AmiBlitz3.ab3@8667>        MOVEA.l sourceline,A5
00025FDC <AmiBlitz3.ab3@8670>            MOVEA.l (A5),A5
00025FE2 <AmiBlitz3.ab3@8671>            MOVE.l a5,sourceline
00025FE6 <AmiBlitz3.ab3@8672>            LEA $9(A5),A5
00025FEC <AmiBlitz3.ab3@8673>            ADDQ.l #1,linenumat
00025FEE <AmiBlitz3.ab3@8676>   MOVE.b (A2)+,D2                                          ;parameterloop   d2=vartype
00025FF2 <AmiBlitz3.ab3@8677>    BNE.w 'skip0
00025FF8 <AmiBlitz3.ab3@8678>   MOVE.w userp,D2                                          ;user selected type
00025FFA <AmiBlitz3.ab3@8681>    MOVE.l A2,-(A7)
00026000 <AmiBlitz3.ab3@8682>    ADDQ.w #1,parnum
00026006 <AmiBlitz3.ab3@8683>    TST.b funccall
0002600A <AmiBlitz3.ab3@8684>    BEQ 'skip0_l1
00026012 <AmiBlitz3.ab3@8685>    CMP.w #6,parnum
00026016 <AmiBlitz3.ab3@8686>    BLE 'skip0_l1
0002601A <AmiBlitz3.ab3@8687>    CMP.w #7,d2
00026020 <AmiBlitz3.ab3@8693>    TST.b fpu
00026024 <AmiBlitz3.ab3@8694>    BEQ 'skip0_old
0002602A <AmiBlitz3.ab3@8695>    TST.w regnumfunc
0002602E <AmiBlitz3.ab3@8696>    BEQ 'skip0_old
00026034 <AmiBlitz3.ab3@8697>    CMP.w #$48e7,-4(a4)
00026038 <AmiBlitz3.ab3@8698>    BNE 'skip0_old
0002603A <AmiBlitz3.ab3@8699>    MOVEQ #0,d1
00026040 <AmiBlitz3.ab3@8700>    MOVE.w regnum,d1
00026046 <AmiBlitz3.ab3@8701>    CMP regnumfunc,d1                                       ;fpu reg function save
0002604A <AmiBlitz3.ab3@8702>    BGE 'skip0_old
0002604C <AmiBlitz3.ab3@8703>    ASL.w #7,d1
0002604E <AmiBlitz3.ab3@8704>    MOVE.l d0,-(a7)
00026054 <AmiBlitz3.ab3@8705>    MOVE.w regnumfunc,d0
0002605A <AmiBlitz3.ab3@8706>    CLR.w regmask
00026060 <AmiBlitz3.ab3@8709>    BSET d0,regmask
00026062 <AmiBlitz3.ab3@8710>    SUBQ #1,d0
00026066 <AmiBlitz3.ab3@8711>    BNE 'skip0_loop
00026068 <AmiBlitz3.ab3@8712>     MOVEQ #0,d0
0002606E <AmiBlitz3.ab3@8715>       BTST d0,regmask
00026072 <AmiBlitz3.ab3@8716>       BEQ 'skip0_noa7
00026074 <AmiBlitz3.ab3@8717>       MOVEQ #0,d1
00026076 <AmiBlitz3.ab3@8718>       MOVE.w d0,d1
00026078 <AmiBlitz3.ab3@8719>       SUBQ.w #1,d1
0002607A <AmiBlitz3.ab3@8720>       ASL #7,d1
00026080 <AmiBlitz3.ab3@8721>       OR.l #$f2277400,d1                                   ;fmove.d
00026084 <AmiBlitz3.ab3@8723>       BSR writelong
0002608A <AmiBlitz3.ab3@8725>       ADDQ.l #2,stacktrack
00026090 <AmiBlitz3.ab3@8726>       MOVE.l stacktrack,d1
00026096 <AmiBlitz3.ab3@8727>       CMP.l #180,d1
0002609A <AmiBlitz3.ab3@8728>       BGT conmemerr                                        ;formel too complex
0002609C <AmiBlitz3.ab3@8729>       MOVE.l a0,-(a7)
000260A2 <AmiBlitz3.ab3@8730>       LEA fpustackbase,a0
000260AA <AmiBlitz3.ab3@8731>       MOVE.w regmask,0(a0,d1)
000260AC <AmiBlitz3.ab3@8732>       MOVE.l (a7)+,a0
000260AE <AmiBlitz3.ab3@8735>       ADDQ.w #1,d0
000260B4 <AmiBlitz3.ab3@8736>       CMP.w regnumfunc,d0
000260B8 <AmiBlitz3.ab3@8737>       BLE 'skip0_loop2
000260BA <AmiBlitz3.ab3@8740>       MOVE.l (a7)+,d0
000260C0 <AmiBlitz3.ab3@8743>      MOVE.l currentfunccall,-(a7)
000260C6 <AmiBlitz3.ab3@8744>      MOVE.w parnum,-(a7)
000260CC <AmiBlitz3.ab3@8745>      TST.l rightsidetype
000260D0 <AmiBlitz3.ab3@8746>      BSR.w JL_0_6836
000260D6 <AmiBlitz3.ab3@8747>      MOVE.w (a7)+,parnum
000260DC <AmiBlitz3.ab3@8749>    MOVE.l (a7)+,currentfunccall
000260E2 <AmiBlitz3.ab3@8752>     TST.b typecheck                            ;typecheck for function call
000260E6 <AmiBlitz3.ab3@8753>     BEQ 'notypecheck
000260EC <AmiBlitz3.ab3@8754>     TST.b notypecheck
000260F0 <AmiBlitz3.ab3@8755>     BNE 'notypecheck
000260F6 <AmiBlitz3.ab3@8756>     TST.b blitzparloop
000260FA <AmiBlitz3.ab3@8757>     BNE 'isblitzlibcall                                    ;no typecheck for blitzlibs currently
00026104 <AmiBlitz3.ab3@8758>     CMP.l #0,currentfunccall
00026108 <AmiBlitz3.ab3@8759>     BEQ 'isblitzlibcall
0002610C <AmiBlitz3.ab3@8760>     MOVEM.l a0/a1,-(a7)
00026112 <AmiBlitz3.ab3@8761>     MOVE.l currentfunccall,a0
00026118 <AmiBlitz3.ab3@8762>     MOVE.w parnum,d1
0002611E <AmiBlitz3.ab3@8763>     TST.b isconstantvalue
00026122 <AmiBlitz3.ab3@8764>     BEQ 'noconstant
0002612C <AmiBlitz3.ab3@8765>     CMP.l #0,lastconstantvalue
00026130 <AmiBlitz3.ab3@8766>     BEQ 'isnull
00026134 <AmiBlitz3.ab3@8769>     MOVE.l funcstruct_parametertype-4(a0,d1*4),a0
0002613A <AmiBlitz3.ab3@8770>     CMP.l #0,a0
0002613E <AmiBlitz3.ab3@8771>     BEQ 'notype
00026146 <AmiBlitz3.ab3@8772>     CMP.l #$100,4(a0)
0002614A <AmiBlitz3.ab3@8773>     BLE 'notype
00026150 <AmiBlitz3.ab3@8774>     MOVE.l lasttoken,d1
00026154 <AmiBlitz3.ab3@8775>     CMP.w #NullTokenID,d1                   ;$b581 ok, when token for null
00026158 <AmiBlitz3.ab3@8776>     BEQ 'isnull
0002615E <AmiBlitz3.ab3@8777>     TST.l typetocast
00026162 <AmiBlitz3.ab3@8778>     BEQ 'nocast
00026168 <AmiBlitz3.ab3@8779>     MOVE.l typetocast,a1
0002616C <AmiBlitz3.ab3@8780>     BRA 'typecheck
00026172 <AmiBlitz3.ab3@8783>     MOVE.l rightsidetype,a1
00026178 <AmiBlitz3.ab3@8784>     CMP.l #0,a1
0002617C <AmiBlitz3.ab3@8785>     BEQ 'notype
00026184 <AmiBlitz3.ab3@8787>   'typecheck   CMP.l #$100,4(a1)
00026186 <AmiBlitz3.ab3@8789>     CMP.l a0,a1
0002618A <AmiBlitz3.ab3@8790>     BEQ 'ok
00026192 <AmiBlitz3.ab3@8792>     CMP.l #$100,4(a1)                 ; is a type here
00026196 <AmiBlitz3.ab3@8793>     BLE 'error
0002619A <AmiBlitz3.ab3@8794>     MOVE.l 4(a1),a1                   ; load the address of type.
0002619E <AmiBlitz3.ab3@8795>     CMP.l $a(a1),a0                   ; check if the bigger type contain in first place same type as the function need
000261A2 <AmiBlitz3.ab3@8796>     BEQ 'ok
000261A8 <AmiBlitz3.ab3@8799>    JMP error_convert_types            ; for syntax 4
000261AE <AmiBlitz3.ab3@8804>     CLR.l typetocast
000261B2 <AmiBlitz3.ab3@8805>     MOVEM.l (a7)+,a0/a1
000261B8 <AmiBlitz3.ab3@8811>    CLR.l lastfunction
000261BE <AmiBlitz3.ab3@8812>    TST.b fpu
000261C2 <AmiBlitz3.ab3@8813>    BEQ 'skip0_noprint
000261C4 <AmiBlitz3.ab3@8814>   MOVE.l (a7),a2
000261C6 <AmiBlitz3.ab3@8815>   ADDQ.l #1,a2
000261CA <AmiBlitz3.ab3@8816>    CMP.b #5,d2
000261CE <AmiBlitz3.ab3@8817>   BNE 'skip0_noprint
000261D4 <AmiBlitz3.ab3@8818>   CMP.b #$5d,24(a2)
000261D8 <AmiBlitz3.ab3@8819>   BNE 'skip0_noprint
000261DE <AmiBlitz3.ab3@8820>   CMP.b #$81,25(a2)
000261E2 <AmiBlitz3.ab3@8821>   BLT 'skip0_noprint
000261E8 <AmiBlitz3.ab3@8822>   CMP.b #$86,25(a2)
000261EC <AmiBlitz3.ab3@8823>   BEQ 'skip0_ok
000261F2 <AmiBlitz3.ab3@8824>   CMP.b #$87,25(a2)
000261F6 <AmiBlitz3.ab3@8825>   BEQ 'skip0_ok
000261FC <AmiBlitz3.ab3@8826>   CMP.b #$88,25(a2)
00026200 <AmiBlitz3.ab3@8827>   BEQ 'skip0_ok
00026206 <AmiBlitz3.ab3@8828>   CMP.b #$83,25(a2)
0002620A <AmiBlitz3.ab3@8829>   BGT 'skip0_noprint
00026210 <AmiBlitz3.ab3@8832>   MOVE.l destpointer,a4
00026216 <AmiBlitz3.ab3@8833>   CMP.w #$2f00,-2(a4)
0002621A <AmiBlitz3.ab3@8834>   BNE 'skip0_noprint
00026220 <AmiBlitz3.ab3@8835>   SUBQ.l #2,destpointer
00026226 <AmiBlitz3.ab3@8837>   MOVE.l #$f2277400,d1
0002622A <AmiBlitz3.ab3@8838>   BSR writelong                                            ;fmove.d fp0,-(a7)
00026230 <AmiBlitz3.ab3@8839>   ADDQ #4,a2offset
00026236 <AmiBlitz3.ab3@8856>   CLR.b optistring
00026238 <AmiBlitz3.ab3@8857>   MOVEA.l (A7)+,A2
0002623C <AmiBlitz3.ab3@8858>    CMP.w #"@",d0
00026240 <AmiBlitz3.ab3@8859>   BNE 'skip0_l10
00026244 <AmiBlitz3.ab3@8860>    CMP.b #"@",(a5)
00026248 <AmiBlitz3.ab3@8861>   BNE 'skip0_l10
0002624E <AmiBlitz3.ab3@8862>   TST.w ininclude
00026252 <AmiBlitz3.ab3@8863>   BNE errorjoin
00026258 <AmiBlitz3.ab3@8864>   MOVEA.l sourceline,A5
0002625A <AmiBlitz3.ab3@8865>            MOVEA.l (A5),A5
00026260 <AmiBlitz3.ab3@8866>            MOVE.l a5,sourceline
00026266 <AmiBlitz3.ab3@8867>            ADDQ.l #1,linenumat
0002626A <AmiBlitz3.ab3@8868>            LEA $9(A5),A5
0002626C <AmiBlitz3.ab3@8869>            MOVEQ #0,d0
00026270 <AmiBlitz3.ab3@8870>            BSR get1bytemain
00026274 <AmiBlitz3.ab3@8873>    CMP.b #32,(a5)+ ;for space after a ,
00026278 <AmiBlitz3.ab3@8874>    BEQ 'skip0_l10:
0002627A <AmiBlitz3.ab3@8875>    SUBQ.l #1,a5
0002627E <AmiBlitz3.ab3@8877>    CMP.w #"@@",(a5)                                        ;if merge
00026282 <AmiBlitz3.ab3@8878>    BNE 'skip0_l15
00026286 <AmiBlitz3.ab3@8879>    MOVEM.l d0-d7/a0-a4/a6,-(a7)
0002628C <AmiBlitz3.ab3@8880>    JSR mergeline
00026290 <AmiBlitz3.ab3@8881>    MOVEM.l (a7)+,d0-d7/a0-a4/a6
00026292 <AmiBlitz3.ab3@8901>       SUBQ.w #1,(A7)
00026296 <AmiBlitz3.ab3@8902>    BEQ.w 'done
0002629A <AmiBlitz3.ab3@8904>     CMP.w #$2C,D0
0002629E <AmiBlitz3.ab3@8906>    BNE 'overloadfunc
000262A2 <AmiBlitz3.ab3@8907> BRA.w 'loop
000262A4 <AmiBlitz3.ab3@8910>   ADDQ.w #2,A7
000262AA <AmiBlitz3.ab3@8911>   MOVE.w (A7)+,partostack
000262AC <AmiBlitz3.ab3@8912>   MOVE.w (A7)+,D1
000262B2 <AmiBlitz3.ab3@8913>   CLR.b isconstantvalue
000262BC <AmiBlitz3.ab3@8914>   MOVE.l currentfunccall,lastfunction
000262C2 <AmiBlitz3.ab3@8915>   CLR.b funccall
000262C8 <AmiBlitz3.ab3@8916>   CLR.l currentfunccall
000262CA <AmiBlitz3.ab3@8917> RTS
000262D0 <AmiBlitz3.ab3@8920>   CLR.b funccall
000262D6 <AmiBlitz3.ab3@8921>   MOVE.w regnum,d1
000262DC <AmiBlitz3.ab3@8922>   MOVE.l currentfunccall,a4
000262E0 <AmiBlitz3.ab3@8923>   CMP.b $20(a4),d1                                         ;increase if more pars
000262E4 <AmiBlitz3.ab3@8924>   BLT notparerr
000262E6 <AmiBlitz3.ab3@8927>   MOVE.b (a2)+,d2
000262EE <AmiBlitz3.ab3@8928>   ADD.w #1,parnum
000262F4 <AmiBlitz3.ab3@8929>   TST.b fpu
000262F8 <AmiBlitz3.ab3@8930>   BEQ 'nofpu
000262FC <AmiBlitz3.ab3@8931>   CMP.b #5,d2
00026300 <AmiBlitz3.ab3@8932>   BNE 'nofpu
00026302 <AmiBlitz3.ab3@8933>   MOVEQ #0,d1
00026308 <AmiBlitz3.ab3@8934>   MOVE.w regnum,d1
00026310 <AmiBlitz3.ab3@8935>   CMP.w #6,regnum
00026314 <AmiBlitz3.ab3@8936>   BLT 'nostack2
00026318 <AmiBlitz3.ab3@8943>   MOVE.w #$2c3c,d1
0002631C <AmiBlitz3.ab3@8944>   BSR writeword
00026322 <AmiBlitz3.ab3@8945>   MOVE.l #$bf800000,d1
00026326 <AmiBlitz3.ab3@8946>   BSR writelong
0002632A <AmiBlitz3.ab3@8947>   MOVE.w #$c4ff,d1                                         ;savetemp+regnum
00026330 <AmiBlitz3.ab3@8948>   ADD.w parnum,d1
00026336 <AmiBlitz3.ab3@8949>   JSR Atokejsr
0002633C <AmiBlitz3.ab3@8950>   TST.w dontwrite
00026340 <AmiBlitz3.ab3@8951>   BNE 'l1
00026346 <AmiBlitz3.ab3@8952>   MOVE.l data1start,d1
0002634C <AmiBlitz3.ab3@8953>   MOVE.l destpointer,a4
00026350 <AmiBlitz3.ab3@8954>   ADD.l d1,-4(a4)
00026356 <AmiBlitz3.ab3@8955>   MOVE.l destpointer,d1
00026358 <AmiBlitz3.ab3@8956>   SUBQ.l #4,d1
0002635E <AmiBlitz3.ab3@8957>   SUB.l destbufferstart,d1
00026360 <AmiBlitz3.ab3@8958>   MOVE.l d2,-(a7)
00026362 <AmiBlitz3.ab3@8959>   MOVE.l d1,d2
00026368 <AmiBlitz3.ab3@8960>   JSR addhunkoffset
0002636A <AmiBlitz3.ab3@8961>   MOVE.l (a7)+,d2
0002636E <AmiBlitz3.ab3@8962>  BRA 'l1
00026370 <AmiBlitz3.ab3@8965>   ASL.l #7,d1
00026376 <AmiBlitz3.ab3@8966>   OR.l #$F23C5000,d1                                       ;fmove.w #-1,fpx
0002637A <AmiBlitz3.ab3@8967>   BSR writelong
0002637C <AmiBlitz3.ab3@8968>   MOVEQ #-1,d1                                             ;-1
00026380 <AmiBlitz3.ab3@8969>   BSR writeword
00026384 <AmiBlitz3.ab3@8970>  BRA 'l1
0002638A <AmiBlitz3.ab3@8973>   MOVE.w regnum,d1
00026392 <AmiBlitz3.ab3@8974>   CMP.w #6,regnum
00026396 <AmiBlitz3.ab3@8975>   BLT 'nostack
0002639A <AmiBlitz3.ab3@8980>   CMP.b #2,d2
0002639E <AmiBlitz3.ab3@8981>   BGT 'nw
000263A2 <AmiBlitz3.ab3@8982>  BRA 'nos
000263A6 <AmiBlitz3.ab3@8991>   CMP.w #7,d2
000263AA <AmiBlitz3.ab3@8992>   BNE 'nos
000263B0 <AmiBlitz3.ab3@8993>   ADDQ #4,a2offset
000263B6 <AmiBlitz3.ab3@8996>     MOVE.l #$48780000,d1
000263BA <AmiBlitz3.ab3@8997>     BSR writelong
000263C0 <AmiBlitz3.ab3@8998>     ADDQ.w #4,a2offset
000263C4 <AmiBlitz3.ab3@8999>     MOVE.w #$2f3c,d1
000263C8 <AmiBlitz3.ab3@9000>     BSR writeword
000263CE <AmiBlitz3.ab3@9001>     MOVE.l #-1,d1
000263D2 <AmiBlitz3.ab3@9002>     BSR writelong
000263D6 <AmiBlitz3.ab3@9003>    BRA 'l1
000263DA <AmiBlitz3.ab3@9007>   CMP.b #4,d2
000263DE <AmiBlitz3.ab3@9008>       BNE 'noq
000263E2 <AmiBlitz3.ab3@9009>       MOVE.w #$2c3c,d1
000263E6 <AmiBlitz3.ab3@9010>       BSR writeword
000263EC <AmiBlitz3.ab3@9011>       MOVE.l #$ffff0000,d1
000263F0 <AmiBlitz3.ab3@9012>       BSR writelong
000263F4 <AmiBlitz3.ab3@9013>  BRA 'noq2
000263F8 <AmiBlitz3.ab3@9016>      CMP.b #5,d2
000263FC <AmiBlitz3.ab3@9017>      BNE 'nof
00026400 <AmiBlitz3.ab3@9018>       MOVE.w #$2c3c,d1
00026404 <AmiBlitz3.ab3@9019>       BSR writeword
0002640A <AmiBlitz3.ab3@9020>       MOVE.l #$800000c1,d1
0002640E <AmiBlitz3.ab3@9021>       BSR writelong
00026412 <AmiBlitz3.ab3@9022>  BRA 'noq2
00026416 <AmiBlitz3.ab3@9025>   MOVE.w #$7cff,d1
0002641A <AmiBlitz3.ab3@9026>   BSR writeword
0002641E <AmiBlitz3.ab3@9029>   MOVE.w #$c4ff,d1                                         ;savetemp+regnum
00026424 <AmiBlitz3.ab3@9030>   ADD.w parnum,d1
0002642A <AmiBlitz3.ab3@9031>   JSR Atokejsr
00026430 <AmiBlitz3.ab3@9032>    TST.w dontwrite
00026434 <AmiBlitz3.ab3@9033>    BNE 'l1
0002643A <AmiBlitz3.ab3@9034>    MOVE.l data1start,d1
00026440 <AmiBlitz3.ab3@9035>    MOVE.l destpointer,a4
00026444 <AmiBlitz3.ab3@9036>    ADD.l d1,-4(a4)
0002644A <AmiBlitz3.ab3@9037>    MOVE.l destpointer,d1
0002644C <AmiBlitz3.ab3@9038>    SUBQ.l #4,d1
00026452 <AmiBlitz3.ab3@9039>    SUB.l destbufferstart,d1
00026454 <AmiBlitz3.ab3@9040>    MOVE.l d2,-(a7)
00026456 <AmiBlitz3.ab3@9041>    MOVE.l d1,d2
0002645C <AmiBlitz3.ab3@9042>    JSR addhunkoffset
0002645E <AmiBlitz3.ab3@9043>    MOVE.l (a7)+,d2
00026462 <AmiBlitz3.ab3@9044>  BRA 'l1
00026464 <AmiBlitz3.ab3@9047>   ASL.l #8,d1
00026466 <AmiBlitz3.ab3@9048>   ASL.l #1,d1
0002646C <AmiBlitz3.ab3@9049>   OR.l #$203c,d1                                           ;-1
00026470 <AmiBlitz3.ab3@9050>   BSR writeword
00026476 <AmiBlitz3.ab3@9051>   MOVE.l #-1,d1
0002647A <AmiBlitz3.ab3@9052>   CMP.b #4,d2
0002647E <AmiBlitz3.ab3@9053>   BNE 'nq1
00026484 <AmiBlitz3.ab3@9054>   MOVE.l #$ffff0000,d1
00026488 <AmiBlitz3.ab3@9057>   CMP.b #5,d2
0002648C <AmiBlitz3.ab3@9058>   BNE 'nof2
00026492 <AmiBlitz3.ab3@9059>   TST.b fpu
00026496 <AmiBlitz3.ab3@9060>   BNE 'nof2
0002649C <AmiBlitz3.ab3@9061>   MOVE.l #$800000c1,d1
000264A0 <AmiBlitz3.ab3@9064>    BSR writelong
000264A4 <AmiBlitz3.ab3@9065>    CMP.b #7,d2
000264A8 <AmiBlitz3.ab3@9066>    BNE 'l1
000264AE <AmiBlitz3.ab3@9068>      MOVE.l #$48780000,d1
000264B2 <AmiBlitz3.ab3@9069>      BSR writelong
000264B8 <AmiBlitz3.ab3@9071>    ADDQ.w #4,a2offset                                      ; bug fix for string parameters
000264BE <AmiBlitz3.ab3@9072>    MOVE.l #$594f,d1                                        ; subq #4,a7
000264C2 <AmiBlitz3.ab3@9073>    BSR writeword
000264C4 <AmiBlitz3.ab3@9076>    SUBQ.w #1,(A7)
000264C8 <AmiBlitz3.ab3@9077>    BEQ.w 'done
000264CE <AmiBlitz3.ab3@9078>    ADDQ.w #1,regnum
000264D2 <AmiBlitz3.ab3@9079>  BRA 'ol2
000264D4 <AmiBlitz3.ab3@9083>    MOVE.w D2,D1
000264D8 <AmiBlitz3.ab3@9084>    ANDI.w #$40,D1
000264DE <AmiBlitz3.ab3@9085>    MOVE.b D1,partostack
000264E0 <AmiBlitz3.ab3@9086>    TST.b D2
000264E4 <AmiBlitz3.ab3@9087>     BMI.w handlevara
000264E8 <AmiBlitz3.ab3@9088>    BTST #$5,D2
000264EC <AmiBlitz3.ab3@9089>     BNE.w handlearr
000264F2 <AmiBlitz3.ab3@9090>     MOVE.w regnumstore,-(a7)
000264F8 <AmiBlitz3.ab3@9091>     MOVE.w tempregnum,-(a7)
000264FE <AmiBlitz3.ab3@9092>     MOVE.w parnum,-(a7)
00026502 <AmiBlitz3.ab3@9093>     BSR.w getap                                        ;recursive entry
00026508 <AmiBlitz3.ab3@9094>     MOVE.w (a7)+,parnum
0002650E <AmiBlitz3.ab3@9095>     MOVE.w (a7)+,tempregnum
00026514 <AmiBlitz3.ab3@9096>     MOVE.w (a7)+,regnumstore
00026518 <AmiBlitz3.ab3@9100>     MOVE.w partostack(PC),D1
0002651C <AmiBlitz3.ab3@9101>     BEQ.w JL_0_6886
00026522 <AmiBlitz3.ab3@9104>    ADDQ.w #4,a2offset
00026528 <AmiBlitz3.ab3@9107>    MOVE.w pushdn,D1
0002652E <AmiBlitz3.ab3@9108>    OR.w regnum,D1
00026532 <AmiBlitz3.ab3@9109>    CMP.w #$3,D2
00026536 <AmiBlitz3.ab3@9110>     BCC.w JL_0_6880
0002653C <AmiBlitz3.ab3@9111>    SUBQ.w #2,a2offset
00026540 <AmiBlitz3.ab3@9112>    ORI.w #$1000,D1
00026544 <AmiBlitz3.ab3@9113>    BSR.w writeword
00026546 <AmiBlitz3.ab3@9114> RTS
0002654A <AmiBlitz3.ab3@9117>   CMP.b #7,d2
0002654E <AmiBlitz3.ab3@9118>    BNE 'l10
00026556 <AmiBlitz3.ab3@9119>    CMP.b #2,optistring
0002655C <AmiBlitz3.ab3@9123>   TST.b iee
00026560 <AmiBlitz3.ab3@9124>   BEQ 'old
00026564 <AmiBlitz3.ab3@9125>   CMP.b #5,d2
00026568 <AmiBlitz3.ab3@9126>   BNE 'old
0002656C <AmiBlitz3.ab3@9129>   BSR.w writeword                                          ;write val to stack
0002656E <AmiBlitz3.ab3@9130> RTS
00026574 <AmiBlitz3.ab3@9133>   SUBQ.w #4,a2offset
00026576 <AmiBlitz3.ab3@9134> RTS
0002657C <AmiBlitz3.ab3@9137>   ADDQ.w #1,regnum
0002657E <AmiBlitz3.ab3@9138> RTS
00026580 <AmiBlitz3.ab3@9142>   MOVEQ.l #$03,D2
00026584 <AmiBlitz3.ab3@9143> BRA.w JL_0_6854
00026588 <AmiBlitz3.ab3@9147>   ANDI.w #$7,D2
0002658A <AmiBlitz3.ab3@9148>   MOVE.w D2,-(A7)
0002658E <AmiBlitz3.ab3@9149>    BSR.w JL_0_A916
00026592 <AmiBlitz3.ab3@9150>   CMP.b #$7,D2                                             ;ignore pnt to $
00026596 <AmiBlitz3.ab3@9151>    BEQ.w JL_0_68C0
0002659A <AmiBlitz3.ab3@9152>   BTST #$E,D2
0002659E <AmiBlitz3.ab3@9153>    BEQ.w JL_0_68B6
000265A2 <AmiBlitz3.ab3@9154>   MOVE.b #$3,D2                                            ;pointer to long
000265A6 <AmiBlitz3.ab3@9155> BRA.w JL_0_68C0
000265A8 <AmiBlitz3.ab3@9158>    TST.b D2
000265AC <AmiBlitz3.ab3@9159>    BNE.w JL_0_68C0
000265B0 <AmiBlitz3.ab3@9160>   MOVE.b #$3,D2
000265B2 <AmiBlitz3.ab3@9163>   MOVE.w (A7)+,D3
000265B4 <AmiBlitz3.ab3@9164>   TST.b D3
000265B8 <AmiBlitz3.ab3@9165>    BEQ.w JL_0_68D2
000265BA <AmiBlitz3.ab3@9166>   CMP.b D2,D3
000265BE <AmiBlitz3.ab3@9167>    BEQ.w putalp
000265C2 <AmiBlitz3.ab3@9168> BRA.w mismatcherr
000265C8 <AmiBlitz3.ab3@9171>   ADDQ.w #2,a2offset
000265CC <AmiBlitz3.ab3@9172>   MOVE.w ptype(PC),D1
000265D0 <AmiBlitz3.ab3@9173>    BSR.w writeword
000265D2 <AmiBlitz3.ab3@9174>   MOVEQ.l #$00,D1
000265D4 <AmiBlitz3.ab3@9175>   MOVE.b D2,D1
000265D8 <AmiBlitz3.ab3@9176>    BSR.w writeword
000265DC <AmiBlitz3.ab3@9177> BRA.w putalp
000265DE <AmiBlitz3.ab3@9180>    MOVE.w D2,-(A7)
000265E2 <AmiBlitz3.ab3@9181>    BSR.w JL_0_694E
000265E8 <AmiBlitz3.ab3@9182>   BTST #$4,$1(A7)
000265EC <AmiBlitz3.ab3@9183>    BEQ.w JL_0_6900
000265F0 <AmiBlitz3.ab3@9184>    BSR.w JL_0_699A
000265F6 <AmiBlitz3.ab3@9187>    BTST #$3,$1(A7)
000265FA <AmiBlitz3.ab3@9188>    BEQ.w JL_0_690E
000265FE <AmiBlitz3.ab3@9189>    BSR.w sendtype
00026600 <AmiBlitz3.ab3@9192>    MOVE.w (A7)+,D2
00026604 <AmiBlitz3.ab3@9193> BRA.w get1bytemain
0002660A <AmiBlitz3.ab3@9196>   MOVE.w regnum,D1
0002660C <AmiBlitz3.ab3@9197>   LSL.w #8,D1
0002660E <AmiBlitz3.ab3@9198>   LSL.w #1,D1
00026612 <AmiBlitz3.ab3@9199>   ORI.w #$7000,D1
00026618 <AmiBlitz3.ab3@9200>   BTST #$0,$7(A3)
0002661C <AmiBlitz3.ab3@9201>    BNE.w JL_0_6946                                         ;A Pointer
00026624 <AmiBlitz3.ab3@9202>   CMPI.l #$100,$4(A2)
00026628 <AmiBlitz3.ab3@9203>    BCC.w arrerr1                                           ;illegal type to send
0002662C <AmiBlitz3.ab3@9204>   MOVE.b $7(A2),D1
00026630 <AmiBlitz3.ab3@9207>   BSR.w writeword                                          ;moveq #type,d regat
00026632 <AmiBlitz3.ab3@9208>   MOVEQ.l #$02,D2                                          ;just a word.
00026636 <AmiBlitz3.ab3@9209> BRA.w JL_0_685C
0002663A <AmiBlitz3.ab3@9212>   MOVE.b #$3,D1
0002663E <AmiBlitz3.ab3@9213> BRA.w JL_0_693C
00026642 <AmiBlitz3.ab3@9217>    BSR.w get1bytemain                                      ;write array paramter code
00026646 <AmiBlitz3.ab3@9218>    BSR.w getparameter
0002664E <AmiBlitz3.ab3@9219>   BTST #$1,flagmask+1
00026652 <AmiBlitz3.ab3@9220>    BEQ.w syntaxerr
00026656 <AmiBlitz3.ab3@9221>    BSR.w fetchvars
0002665A <AmiBlitz3.ab3@9222>    BSR.w get1bytemain
0002665E <AmiBlitz3.ab3@9223>   CMP.w #$29,D0                                            ;we just want a() or whatever
00026662 <AmiBlitz3.ab3@9224>    BNE.w syntaxerr
00026668 <AmiBlitz3.ab3@9225>   MOVE.w notshared,D1
0002666C <AmiBlitz3.ab3@9226>    BNE.w noarrayerr
00026672 <AmiBlitz3.ab3@9227>   MOVE.w regnum,D1
00026674 <AmiBlitz3.ab3@9228>   LSL.w #8,D1
00026676 <AmiBlitz3.ab3@9229>   LSL.w #1,D1
0002667A <AmiBlitz3.ab3@9230>   OR.w fbase(PC),D1
00026680 <AmiBlitz3.ab3@9231>    TST.b varmode
00026684 <AmiBlitz3.ab3@9232>    BEQ 'l1
00026688 <AmiBlitz3.ab3@9233>    BCLR #0,d1
0002668C <AmiBlitz3.ab3@9236>    BSR.w writeword
00026690 <AmiBlitz3.ab3@9237>   MOVE.w $4(A3),D1
00026694 <AmiBlitz3.ab3@9238>    BSR.w writeword
00026698 <AmiBlitz3.ab3@9239> BRA.w putalp
0002669E <AmiBlitz3.ab3@9243>   MOVE.w regnum,D1
000266A0 <AmiBlitz3.ab3@9244>   LSL.w #8,D1
000266A2 <AmiBlitz3.ab3@9245>   LSL.w #1,D1
000266A6 <AmiBlitz3.ab3@9246>   OR.w fbase(PC),D1
000266AC <AmiBlitz3.ab3@9247>    TST.b varmode
000266B0 <AmiBlitz3.ab3@9248>    BEQ 'l1
000266B4 <AmiBlitz3.ab3@9249>    BCLR #0,d1
000266B8 <AmiBlitz3.ab3@9252>    BSR.w writeword
000266BC <AmiBlitz3.ab3@9253>   MOVE.w $8(A3),D1
000266BE <AmiBlitz3.ab3@9254>   LSL.w #2,D1
000266C4 <AmiBlitz3.ab3@9255>   MOVE.w varmode,D2
000266C8 <AmiBlitz3.ab3@9256>    BEQ.w JL_0_69BE
000266CA <AmiBlitz3.ab3@9257>   NEG.w D1
000266CE <AmiBlitz3.ab3@9260>    ADD.w $4(A3),D1
000266D2 <AmiBlitz3.ab3@9261>    BSR.w writeword
000266D8 <AmiBlitz3.ab3@9262>   MOVE.w regnum,D1
000266DA <AmiBlitz3.ab3@9263>   LSL.w #8,D1
000266DC <AmiBlitz3.ab3@9264>   LSL.w #1,D1
000266E0 <AmiBlitz3.ab3@9265>   MOVE.w partostack(PC),D2
000266E4 <AmiBlitz3.ab3@9266>    BNE.w JL_0_69F4
000266EC <AmiBlitz3.ab3@9267>   CMPI.w #$7,regnum
000266F0 <AmiBlitz3.ab3@9268>    BCC.w JL_0_69F4
000266F4 <AmiBlitz3.ab3@9269>   OR.w pushlast(PC),D1
000266FA <AmiBlitz3.ab3@9270>   MOVE.w regnum,D2
000266FC <AmiBlitz3.ab3@9271>   SUBQ.w #1,D2
000266FE <AmiBlitz3.ab3@9272>   OR.w D2,D1
00026702 <AmiBlitz3.ab3@9273> BRA.w JL_0_69F8
00026706 <AmiBlitz3.ab3@9276>   OR.w pushadd(PC),D1
0002670A <AmiBlitz3.ab3@9279>   BSR.w writeword
00026712 <AmiBlitz3.ab3@9280>   MOVE.b #$1,partostack
00026716 <AmiBlitz3.ab3@9281> BRA.w putalp
0002671A <AmiBlitz3.ab3@9285> fbase:       Dc.b $20,$2D,$00,$00                           ;MOVE.L  $0000(A5),D0
0002671C <AmiBlitz3.ab3@9286> pushadd:     Dc.b $D0,$97                                   ;ADD.L (A7),D0
0002671E <AmiBlitz3.ab3@9287> pushlast:    Dc.b $D0,$80                                   ;ADD.L D0,D0
00026722 <AmiBlitz3.ab3@9292>   ANDI.w #$7,D2                                            ;0-7 (unknown to string)
00026726 <AmiBlitz3.ab3@9293>    BEQ.w evalu2
0002672A <AmiBlitz3.ab3@9294> BRA.w eval
00026730 <AmiBlitz3.ab3@9298>   MOVEA.l libpointer,A1
00026734 <AmiBlitz3.ab3@9301>    CMPA.w #$0,A1
00026738 <AmiBlitz3.ab3@9302>    BEQ.w 'done
0002673E <AmiBlitz3.ab3@9303>   MOVE.w #-1,$A(A1)
00026744 <AmiBlitz3.ab3@9304>   BCLR #$7,$C(A1)
00026746 <AmiBlitz3.ab3@9305>   MOVEA.l (A1),A1
0002674A <AmiBlitz3.ab3@9306>  BRA.w 'loop
0002674C <AmiBlitz3.ab3@9309> RTS
00026750 <AmiBlitz3.ab3@9313>   MOVE.w #$FFFE,D1       ;#allocvars
00026754 <AmiBlitz3.ab3@9317>    BSR.w findlib
0002675A <AmiBlitz3.ab3@9320>   TST.w cfetchmode
0002675E <AmiBlitz3.ab3@9321>    BEQ.w 'noconst
00026764 <AmiBlitz3.ab3@9322>   BTST #$6,$C(A1)
00026768 <AmiBlitz3.ab3@9323>    BNE.w 'constok
0002676C <AmiBlitz3.ab3@9325>  BRA.w badconerr                                            ;Can't use this Library!
0002676E <AmiBlitz3.ab3@9328>  RTS
00026774 <AmiBlitz3.ab3@9331>    BSET #$7,$C(A1)
00026778 <AmiBlitz3.ab3@9332>    BNE.w 'skip                                         ;already done....
0002677E <AmiBlitz3.ab3@9333>    CMPI.w #-1,$A(A1)
00026782 <AmiBlitz3.ab3@9334>    BNE.w 'skip                                         ;something already here
00026788 <AmiBlitz3.ab3@9338>    TST.w dirmode
0002678C <AmiBlitz3.ab3@9339>    BEQ.b 'oktouse
00026792 <AmiBlitz3.ab3@9342>    TST.b exdebug
00026796 <AmiBlitz3.ab3@9343>    BEQ 'l1
0002679A <AmiBlitz3.ab3@9344>  BRA.b 'oktouse
000267A0 <AmiBlitz3.ab3@9348>   BCLR #$7,$C(A1)
000267A4 <AmiBlitz3.ab3@9349>  BRA.w dirliberr
000267AA <AmiBlitz3.ab3@9353>   MOVE.b debugmode,-(a7)
000267AE <AmiBlitz3.ab3@9355>   MOVEM.l D1/A0/A2,-(A7)
000267B6 <AmiBlitz3.ab3@9365>   BTST #$7,use_debugger
000267BA <AmiBlitz3.ab3@9366>   BNE 'debugon
000267BC <AmiBlitz3.ab3@9367>   CLR.w D1
000267C0 <AmiBlitz3.ab3@9368>  BRA.b 'debugoff
000267C2 <AmiBlitz3.ab3@9371>   SNE D1
000267C8 <AmiBlitz3.ab3@9374>   MOVE.b d1,debugmode
000267CA <AmiBlitz3.ab3@9379>   MOVEA.l A1,A0
000267CE <AmiBlitz3.ab3@9380>   ADDA.l $12(A1),A0
000267D2 <AmiBlitz3.ab3@9381>   TST.w -$2(A0)
000267D6 <AmiBlitz3.ab3@9382>    BEQ.w 'notmax
000267DA <AmiBlitz3.ab3@9383>   MOVEM.l A0-A1,-(A7)
000267DE <AmiBlitz3.ab3@9384>   MOVE.w #$FB4F,D1            ; #64335,
000267E2 <AmiBlitz3.ab3@9385>    BSR.w uselib
000267E6 <AmiBlitz3.ab3@9386>   MOVEM.l (A7)+,A0-A1
000267EC <AmiBlitz3.ab3@9387>   ADDQ.w #1,globalvarpointer
000267F4 <AmiBlitz3.ab3@9388>   BCLR #$0,globalvarpointer+1
000267FC <AmiBlitz3.ab3@9389>   MOVE.w globalvarpointer,-$6(A0)
00026802 <AmiBlitz3.ab3@9390>   ADDQ.w #4,globalvarpointer
00026806 <AmiBlitz3.ab3@9391>   TST.l -$E(A0)
0002680A <AmiBlitz3.ab3@9392>    BEQ.w 'notmax
00026810 <AmiBlitz3.ab3@9393>   ADDQ.w #4,globalvarpointer
00026818 <AmiBlitz3.ab3@9396>   MOVE.l libend,$28(A1)      ;pc of lib
0002681A <AmiBlitz3.ab3@9397>   MOVEA.l A1,A0
0002681E <AmiBlitz3.ab3@9398>   ADDA.l $12(A1),A0          ;start of lib
00026820 <AmiBlitz3.ab3@9400>   MOVE.l A1,D1
00026824 <AmiBlitz3.ab3@9401>   ADD.l $6(A1),D1            ;end of lib
00026828 <AmiBlitz3.ab3@9402>   TST.l $2C(A1)
0002682C <AmiBlitz3.ab3@9403>    BEQ.w 'nor
00026832 <AmiBlitz3.ab3@9404>   TST.b debugmode
00026836 <AmiBlitz3.ab3@9405>    BNE.w 'nor                ;errs turned on
00026838 <AmiBlitz3.ab3@9406>   MOVE.l A1,D1
0002683C <AmiBlitz3.ab3@9407>   ADD.l $2C(A1),D1           ;copy only non-errchks
00026842 <AmiBlitz3.ab3@9410>   MOVEA.l libend,A2
00026848 <AmiBlitz3.ab3@9413>   CMPA.l data1start,A2
0002684C <AmiBlitz3.ab3@9414>    BCS.w 'okp
00026854 <AmiBlitz3.ab3@9415>   MOVE.w #$FFFF,dontwrite     ; -1
00026856 <AmiBlitz3.ab3@9418>   ADDQ.w #2,A0
00026858 <AmiBlitz3.ab3@9419>   ADDQ.w #2,A2
0002685A <AmiBlitz3.ab3@9420>   CMPA.l D1,A0
0002685E <AmiBlitz3.ab3@9421>    BCS.w 'bad
00026862 <AmiBlitz3.ab3@9422>  BRA.w 'toreloc
00026864 <AmiBlitz3.ab3@9425>   MOVE.w (A0)+,(A2)+                                       ;copylibcode
00026866 <AmiBlitz3.ab3@9426>   CMPA.l D1,A0
0002686A <AmiBlitz3.ab3@9427>    BCS.w 'loop
00026870 <AmiBlitz3.ab3@9430>   MOVE.l A2,libend
00026874 <AmiBlitz3.ab3@9431>   MOVE.l $20(A1),D1
00026878 <AmiBlitz3.ab3@9432>    BEQ.w 'noreloc
0002687C <AmiBlitz3.ab3@9434>   MOVEM.l D0/D2-D3,-(A7)
00026880 <AmiBlitz3.ab3@9435>   MOVEA.l $24(A1),A0         ;start of reloc table
00026882 <AmiBlitz3.ab3@9436>   MOVEQ.l #$00,D3            ;no tokejsrs (yet!)
00026884 <AmiBlitz3.ab3@9442>   MOVE.l (A0)+,D2
00026888 <AmiBlitz3.ab3@9443>   TST.l $2C(A1)
0002688C <AmiBlitz3.ab3@9444>    BEQ.w 'skipr
00026892 <AmiBlitz3.ab3@9445>   TST.b debugmode
00026896 <AmiBlitz3.ab3@9446>    BNE.w 'skipr
0002689A <AmiBlitz3.ab3@9447>   CMP.l $2C(A1),D2
0002689E <AmiBlitz3.ab3@9448>    BCC.w 'next
000268A2 <AmiBlitz3.ab3@9451>   TST.w $0(A1,D2.L)
000268A6 <AmiBlitz3.ab3@9452>    BPL.w 'notajsr
000268A8 <AmiBlitz3.ab3@9453>   TST.l D3
000268AC <AmiBlitz3.ab3@9454>    BNE.w 'notajsr      ;already done...
000268AE <AmiBlitz3.ab3@9455>   MOVE.l A0,D0
000268B0 <AmiBlitz3.ab3@9456>   MOVE.l D1,D3         ;number left to do!
000268B4 <AmiBlitz3.ab3@9459>   SUB.l $12(A1),D2
000268B8 <AmiBlitz3.ab3@9460>    BMI.w 'next
000268BC <AmiBlitz3.ab3@9461>   ADD.l $28(A1),D2
000268BE <AmiBlitz3.ab3@9462>   MOVE.l D2,-(A7)
000268C4 <AmiBlitz3.ab3@9463>   SUB.l destbufferstart,D2
000268C8 <AmiBlitz3.ab3@9464>    BSR.w addhunkoffset
000268CA <AmiBlitz3.ab3@9465>   MOVEA.l (A7)+,A2
000268D0 <AmiBlitz3.ab3@9466>   TST.w dontwrite
000268D4 <AmiBlitz3.ab3@9467>    BNE.w 'next
000268D8 <AmiBlitz3.ab3@9468>   MOVE.l $28(A1),D2
000268DC <AmiBlitz3.ab3@9469>   SUB.l $12(A1),D2
000268DE <AmiBlitz3.ab3@9470>   ADD.l D2,(A2)
000268E0 <AmiBlitz3.ab3@9473>    SUBQ.l #1,D1
000268E4 <AmiBlitz3.ab3@9474>    BNE.w 'reloop
000268E6 <AmiBlitz3.ab3@9475>   MOVE.l D3,D2
000268EA <AmiBlitz3.ab3@9476>    BEQ.w 'nohand
000268EC <AmiBlitz3.ab3@9477>   MOVEA.l D0,A2
000268EE <AmiBlitz3.ab3@9478>   SUBQ.w #4,A2
000268F2 <AmiBlitz3.ab3@9480>    BSR.w handlejsrs
000268F6 <AmiBlitz3.ab3@9483>    MOVEM.l (A7)+,D0/D2-D3
000268FA <AmiBlitz3.ab3@9486>    MOVEM.l (A7)+,D1/A0/A2
000268FE <AmiBlitz3.ab3@9488>   MOVEM.l D1-D2,-(A7)
00026902 <AmiBlitz3.ab3@9489>   TST.w $1A(A1)
00026906 <AmiBlitz3.ab3@9490>    BNE.w 'skip2a
0002690A <AmiBlitz3.ab3@9491>   CLR.w $A(A1)
0002690E <AmiBlitz3.ab3@9492>  BRA.w 'skip2
00026914 <AmiBlitz3.ab3@9495>   ADDQ.w #1,globalvarpointer
0002691C <AmiBlitz3.ab3@9496>   BCLR #$0,globalvarpointer+1
00026924 <AmiBlitz3.ab3@9497>   MOVE.w globalvarpointer,$A(A1)
00026928 <AmiBlitz3.ab3@9499>   CMP.w #-$12D,D1            ; was  #65235,
0002692C <AmiBlitz3.ab3@9500>    BNE.w 'nots1
00026934 <AmiBlitz3.ab3@9502>   MOVE.w $A(A1),movestdn+2
0002693C <AmiBlitz3.ab3@9503>   MOVE.w $A(A1),pusha3+2
00026944 <AmiBlitz3.ab3@9504>   MOVE.w $A(A1),pusha32+2
0002694C <AmiBlitz3.ab3@9505>   MOVE.w $A(A1),pulla3+2
00026954 <AmiBlitz3.ab3@9506>   MOVE.w $A(A1),geta3+2
00026958 <AmiBlitz3.ab3@9509>    CMP.w #-$3E9,D1           ; was #64535,
0002695C <AmiBlitz3.ab3@9510>    BNE.w 'notd
00026964 <AmiBlitz3.ab3@9512>   MOVE.w $A(A1),dataget+2
0002696C <AmiBlitz3.ab3@9513>   MOVE.w $A(A1),dataput+2
00026974 <AmiBlitz3.ab3@9514>   MOVE.w $A(A1),rescode+6
0002697C <AmiBlitz3.ab3@9515>   MOVE.w $A(A1),rescode2+2
00026982 <AmiBlitz3.ab3@9518>   ADDQ.w #2,globalvarpointer
00026986 <AmiBlitz3.ab3@9519>   TST.w $1A(A1)
0002698A <AmiBlitz3.ab3@9520>    BMI.w 'jword
00026990 <AmiBlitz3.ab3@9521>   ADDQ.w #2,globalvarpointer
00026994 <AmiBlitz3.ab3@9524>   MOVEM.l D1/A1,-(A7)
00026998 <AmiBlitz3.ab3@9525>   BSR.w usevars
0002699C <AmiBlitz3.ab3@9526>   MOVEM.l (A7)+,D1/A1
0002699E <AmiBlitz3.ab3@9529>   MOVE.w D1,D2
000269A2 <AmiBlitz3.ab3@9530>   MOVE.l $16(A1),D1
000269A6 <AmiBlitz3.ab3@9531>    BSR.w uselib2
000269AA <AmiBlitz3.ab3@9532>   MOVE.l $1C(A1),D1
000269AE <AmiBlitz3.ab3@9533>    BSR.w uselib2
000269B2 <AmiBlitz3.ab3@9534>   MOVEM.l (A7)+,D1-D2
000269B8 <AmiBlitz3.ab3@9536>   MOVE.b (a7)+,debugmode
000269BA <AmiBlitz3.ab3@9539> RTS
000269BC <AmiBlitz3.ab3@9546>   MOVEQ.l #$00,D2       ;do list till this...
000269C2 <AmiBlitz3.ab3@9549>   MOVEA.l tokeslist,A2
000269C4 <AmiBlitz3.ab3@9550>   CMPA.l D2,A2
000269C8 <AmiBlitz3.ab3@9551>    BEQ.w 'done
000269CA <AmiBlitz3.ab3@9552>   MOVE.l A2,-(A7)       ;next till...
000269CC <AmiBlitz3.ab3@9555>   MOVEQ.l #$00,D3
000269D0 <AmiBlitz3.ab3@9558>   MOVEA.l $8(A2),A3
000269D2 <AmiBlitz3.ab3@9559>   CMPA.l D3,A3
000269D6 <AmiBlitz3.ab3@9560>    BEQ.w 'done4
000269D8 <AmiBlitz3.ab3@9562>   MOVE.l A3,-(A7)
000269DC <AmiBlitz3.ab3@9563>   MOVEM.l D2-D3/A2-A3,-(A7)
000269E0 <AmiBlitz3.ab3@9564>   MOVE.w $4(A2),D1
000269E4 <AmiBlitz3.ab3@9565>   MOVE.w $6(A2),D2
000269E8 <AmiBlitz3.ab3@9567>    BSR.w tokecode
000269EC <AmiBlitz3.ab3@9569>   MOVEM.l (A7)+,D2-D3/A2-A3
000269F2 <AmiBlitz3.ab3@9571>   MOVE.w dontwrite,D0
000269F6 <AmiBlitz3.ab3@9572>    BEQ.w 'ok
000269F8 <AmiBlitz3.ab3@9575>   MOVEA.l (A3),A3
000269FA <AmiBlitz3.ab3@9576>   CMPA.l D3,A3
000269FE <AmiBlitz3.ab3@9577>    BNE.w 'loop5
00026A02 <AmiBlitz3.ab3@9578>  BRA.w 'skipz
00026A06 <AmiBlitz3.ab3@9581>   MOVEA.l $4(A3),A0
00026A08 <AmiBlitz3.ab3@9582>   MOVE.l D7,(A0)
00026A0A <AmiBlitz3.ab3@9583>   MOVEA.l (A3),A3
00026A0C <AmiBlitz3.ab3@9584>   CMPA.l D3,A3
00026A10 <AmiBlitz3.ab3@9585>    BNE.w 'ok
00026A12 <AmiBlitz3.ab3@9588>   MOVE.l (A7)+,D3
00026A16 <AmiBlitz3.ab3@9589>  BRA.w 'loop3
00026A18 <AmiBlitz3.ab3@9592>    MOVEA.l (A2),A2
00026A1A <AmiBlitz3.ab3@9593>   CMPA.l D2,A2
00026A1E <AmiBlitz3.ab3@9594>    BNE.w 'loop2
00026A20 <AmiBlitz3.ab3@9595>   MOVE.l (A7)+,D2
00026A24 <AmiBlitz3.ab3@9596>  BRA.w 'loop
00026A26 <AmiBlitz3.ab3@9599> RTS
00026A28 <AmiBlitz3.ab3@9607>   MOVE.w D2,-(A7)
00026A2C <AmiBlitz3.ab3@9608>    BSR.w searchinstr
00026A2E <AmiBlitz3.ab3@9609>   MOVE.w (A7)+,D2
00026A36 <AmiBlitz3.ab3@9611>   BCLR #$7,blitzmode
00026A3A <AmiBlitz3.ab3@9612>   BCLR #$E,D2
00026A3E <AmiBlitz3.ab3@9613>    BEQ.w 'isamiga
00026A46 <AmiBlitz3.ab3@9614>   BSET #$7,blitzmode
00026A48 <AmiBlitz3.ab3@9617>   TST.w (A3)
00026A4C <AmiBlitz3.ab3@9618>    BEQ.w 'simple
00026A52 <AmiBlitz3.ab3@9619>   BTST #$2,$1(A3)
00026A56 <AmiBlitz3.ab3@9620>    BNE.w tokeerr
00026A5C <AmiBlitz3.ab3@9621>   BTST #$3,$1(A3)
00026A60 <AmiBlitz3.ab3@9622>    BNE.w tokeerr
00026A64 <AmiBlitz3.ab3@9626>   LEA $6(A3),A3     ;skip node
00026A66 <AmiBlitz3.ab3@9629>   MOVE.w (A3)+,D0
00026A6A <AmiBlitz3.ab3@9630>    BMI.w tokeerr
00026A6E <AmiBlitz3.ab3@9631>   ANDI.w #$FF,D0
00026A70 <AmiBlitz3.ab3@9632>   ADDA.w D0,A3
00026A72 <AmiBlitz3.ab3@9633>   ADDQ.w #1,A3
00026A74 <AmiBlitz3.ab3@9634>   EXG.l D0,A3
00026A78 <AmiBlitz3.ab3@9635>   BCLR #$0,D0
00026A7A <AmiBlitz3.ab3@9636>   EXG.l D0,A3
00026A7C <AmiBlitz3.ab3@9637>   SUBQ.w #1,D2
00026A80 <AmiBlitz3.ab3@9638>    BPL.w 'loop2
00026A82 <AmiBlitz3.ab3@9640>   TST.w (A3)
00026A86 <AmiBlitz3.ab3@9641>    BNE.w 'go4it          ;no libs to fetch....
00026A8A <AmiBlitz3.ab3@9642>   MOVE.l $2(A3),D0
00026A8E <AmiBlitz3.ab3@9643>   OR.l $A(A3),D0
00026A92 <AmiBlitz3.ab3@9644>    BNE.w 'go4it          ;no error chx...
00026A98 <AmiBlitz3.ab3@9645>   BTST #$0,$9(A3)
00026A9C <AmiBlitz3.ab3@9646>    BNE.w 'go4it          ;ditto...
00026AA0 <AmiBlitz3.ab3@9647>   MOVE.l $6(A3),D7       ;sub offset
00026AA4 <AmiBlitz3.ab3@9648>   MOVE.w $0(A2,D7.L),D0
00026AA8 <AmiBlitz3.ab3@9649>   ANDI.w #$F000,D0
00026AAC <AmiBlitz3.ab3@9650>   CMP.w #-$6000,D0
00026AB0 <AmiBlitz3.ab3@9651>    BEQ.w 'go4it
00026AB4 <AmiBlitz3.ab3@9654>   SUB.l $12(A2),D7
00026AB8 <AmiBlitz3.ab3@9655>   ADD.l $28(A2),D7
00026ABA <AmiBlitz3.ab3@9656>  RTS
00026AC0 <AmiBlitz3.ab3@9659>   LEA cutejsr,A0
00026AC6 <AmiBlitz3.ab3@9663>   MOVE.l destpointer,-(A7)
00026ACE <AmiBlitz3.ab3@9664>   MOVE.w #$FFFF,lasta6     ; was -1
00026AD0 <AmiBlitz3.ab3@9666>    JSR (A0)
00026AD4 <AmiBlitz3.ab3@9667>   MOVE.w #$4E75,D1
00026AD8 <AmiBlitz3.ab3@9668>    BSR.w writeword
00026ADA <AmiBlitz3.ab3@9670>   MOVE.l (A7)+,D7
00026ADC <AmiBlitz3.ab3@9671>  RTS
00026ADE <AmiBlitz3.ab3@9674>   TST.w (A3)+
00026AE2 <AmiBlitz3.ab3@9675>    BEQ.w 'skip
00026AE4 <AmiBlitz3.ab3@9676>   ADDQ.w #2,A3
00026AE8 <AmiBlitz3.ab3@9677>  BRA.w 'loop2
00026AEC <AmiBlitz3.ab3@9680>   LEA $C(A3),A3
00026AF0 <AmiBlitz3.ab3@9681>  BRA.w 'loop
00026AF2 <AmiBlitz3.ab3@9684>   TST.w D2
00026AF6 <AmiBlitz3.ab3@9685>    BNE.w tokeerr
00026AFA <AmiBlitz3.ab3@9687>   TST.w $6(A3)
00026AFE <AmiBlitz3.ab3@9688>    BNE.w 'be4it
00026B02 <AmiBlitz3.ab3@9689>   MOVE.l $8(A3),D0
00026B06 <AmiBlitz3.ab3@9690>   OR.l $10(A3),D0
00026B0A <AmiBlitz3.ab3@9691>    BNE.w 'be4it
00026B10 <AmiBlitz3.ab3@9692>   BTST #$0,$F(A3)
00026B14 <AmiBlitz3.ab3@9693>    BNE.w 'be4it
00026B18 <AmiBlitz3.ab3@9694>   MOVE.l $C(A3),D7
00026B1C <AmiBlitz3.ab3@9695>   MOVE.w $0(A2,D7.L),D0
00026B20 <AmiBlitz3.ab3@9696>   ANDI.w #$F000,D0
00026B24 <AmiBlitz3.ab3@9697>   CMP.w #-$6000,D0        ; was #$a000
00026B28 <AmiBlitz3.ab3@9698>    BNE.w 'penis
00026B2A <AmiBlitz3.ab3@9701>   MOVE.l A3,D1
00026B2C <AmiBlitz3.ab3@9702>   SUB.l A2,D1
00026B32 <AmiBlitz3.ab3@9703>   LEA Amakelibsub,A0
00026B36 <AmiBlitz3.ab3@9704> BRA.w 'putcode
00026B3C <AmiBlitz3.ab3@9708>   MOVEA.l _execbase,A6
00026B42 <AmiBlitz3.ab3@9709>   MOVEA.l tokeslist,A2
00026B48 <AmiBlitz3.ab3@9710>   CLR.l tokeslist
00026B4C <AmiBlitz3.ab3@9713>     CMPA.w #$0,A2
00026B50 <AmiBlitz3.ab3@9714>      BEQ.w 'done2
00026B54 <AmiBlitz3.ab3@9715>     MOVEA.l $8(A2),A3
00026B58 <AmiBlitz3.ab3@9718>       CMPA.w #$0,A3
00026B5C <AmiBlitz3.ab3@9719>        BEQ.w 'done3
00026B5E <AmiBlitz3.ab3@9720>       MOVEA.l A3,A1
00026B60 <AmiBlitz3.ab3@9721>       MOVEA.l (A3),A3
00026B62 <AmiBlitz3.ab3@9722>       MOVEQ.l #$08,D0
00026B68 <AmiBlitz3.ab3@9724>       MOVE.l mempool,a0
00026B6E <AmiBlitz3.ab3@9725>       MOVEA.l _execbase,A6
00026B72 <AmiBlitz3.ab3@9726>       JSR _FreePooled(A6)
00026B76 <AmiBlitz3.ab3@9729>  BRA.w 'floop2
00026B78 <AmiBlitz3.ab3@9732>     MOVEA.l A2,A1
00026B7A <AmiBlitz3.ab3@9733>     MOVEA.l (A2),A2
00026B7C <AmiBlitz3.ab3@9734>     MOVEQ.l #$0C,D0
00026B82 <AmiBlitz3.ab3@9736>     MOVE.l mempool,a0
00026B88 <AmiBlitz3.ab3@9737>     MOVEA.l _execbase,A6
00026B8C <AmiBlitz3.ab3@9738>     JSR _FreePooled(A6)
00026B90 <AmiBlitz3.ab3@9741>  BRA.w 'floop
00026B92 <AmiBlitz3.ab3@9744> RTS
00026B96 <AmiBlitz3.ab3@9750>   MOVEM.l D3-D5/A1-A6,-(A7)
00026B98 <AmiBlitz3.ab3@9751>   MOVEA.l A1,A4
00026B9A <AmiBlitz3.ab3@9754>   MOVE.l (A2)+,D3
00026B9E <AmiBlitz3.ab3@9755>   MOVE.w $0(A4,D3.L),D5
00026BA2 <AmiBlitz3.ab3@9756>    BPL.w 'next
00026BA6 <AmiBlitz3.ab3@9758>   TST.l $2C(A4)
00026BAA <AmiBlitz3.ab3@9759>    BEQ.w 'skipr
00026BB0 <AmiBlitz3.ab3@9760>   TST.b debugmode
00026BB4 <AmiBlitz3.ab3@9761>    BNE.w 'skipr
00026BB8 <AmiBlitz3.ab3@9762>   CMP.l $2C(A4),D3
00026BBC <AmiBlitz3.ab3@9763>    BCC.w 'next
00026BC0 <AmiBlitz3.ab3@9766>   BCLR #$F,D5             ;to offset number
00026BC4 <AmiBlitz3.ab3@9767>   MOVE.w $2(A4,D3.L),D4
00026BC8 <AmiBlitz3.ab3@9768>   SUB.l $12(A4),D3
00026BCC <AmiBlitz3.ab3@9769>   ADD.l $28(A4),D3
00026BD0 <AmiBlitz3.ab3@9771>   MOVEM.l D2/A2/A4,-(A7)
00026BD4 <AmiBlitz3.ab3@9772>    BSR.w maketjsr
00026BD8 <AmiBlitz3.ab3@9773>   MOVEM.l (A7)+,D2/A2/A4
00026BDA <AmiBlitz3.ab3@9776>   SUBQ.l #1,D2
00026BDE <AmiBlitz3.ab3@9777>    BNE.w 'loop
00026BE2 <AmiBlitz3.ab3@9779>   MOVEM.l (A7)+,D3-D5/A1-A6
00026BE4 <AmiBlitz3.ab3@9780> RTS
00026BEA <AmiBlitz3.ab3@9788>   LEA tokeslist,A3
00026BF0 <AmiBlitz3.ab3@9789>   MOVEA.l _execbase,A6
00026BF2 <AmiBlitz3.ab3@9792>   MOVE.l (A3),D0
00026BF6 <AmiBlitz3.ab3@9793>    BEQ.w 'notfound
00026BF8 <AmiBlitz3.ab3@9794>   MOVEA.l D0,A3
00026BFC <AmiBlitz3.ab3@9795>   CMP.w $4(A3),D4
00026C00 <AmiBlitz3.ab3@9796>    BNE.w 'loop2
00026C04 <AmiBlitz3.ab3@9797>   CMP.w $6(A3),D5
00026C08 <AmiBlitz3.ab3@9798>    BNE.w 'loop2
00026C0C <AmiBlitz3.ab3@9799>  BRA.w 'found
00026C0E <AmiBlitz3.ab3@9804>   MOVEQ.l #$0C,D0
00026C10 <AmiBlitz3.ab3@9805>   MOVEQ.l #$01,D1
00026C16 <AmiBlitz3.ab3@9807>   MOVE.l mempool,a0
00026C1A <AmiBlitz3.ab3@9808>   JSR _AllocPooled(a6)
00026C1C <AmiBlitz3.ab3@9811>   MOVEA.l D0,A3
00026C22 <AmiBlitz3.ab3@9812>   MOVE.l tokeslist,(A3)
00026C28 <AmiBlitz3.ab3@9813>   MOVE.l A3,tokeslist
00026C2C <AmiBlitz3.ab3@9814>   MOVE.w D4,$4(A3)
00026C30 <AmiBlitz3.ab3@9815>   MOVE.w D5,$6(A3)
00026C34 <AmiBlitz3.ab3@9816>   CLR.l $8(A3)
00026C36 <AmiBlitz3.ab3@9819>   MOVEQ.l #$08,D0
00026C38 <AmiBlitz3.ab3@9820>   MOVEQ.l #$01,D1
00026C3E <AmiBlitz3.ab3@9822>   MOVE.l mempool,a0
00026C42 <AmiBlitz3.ab3@9823>   JSR _AllocPooled(a6)
00026C44 <AmiBlitz3.ab3@9826>   MOVEA.l D0,A0
00026C48 <AmiBlitz3.ab3@9827>   MOVE.l D3,$4(A0)
00026C4C <AmiBlitz3.ab3@9828>   MOVE.l $8(A3),(A0)
00026C50 <AmiBlitz3.ab3@9829>   MOVE.l A0,$8(A3)
00026C52 <AmiBlitz3.ab3@9831>   MOVE.w D4,D1
00026C56 <AmiBlitz3.ab3@9832> BRA.w searchinstr       ;use this library - NOW!
00026C5A <AmiBlitz3.ab3@9835> tokeslist: Ds.l 1
00026C5E <AmiBlitz3.ab3@9848>   BEQ.w 'skip
00026C60 <AmiBlitz3.ab3@9849>   MOVE.l A1,-(A7)
00026C62 <AmiBlitz3.ab3@9850>   ADDA.l D1,A1
00026C64 <AmiBlitz3.ab3@9851>   ADDQ.w #6,A1
00026C66 <AmiBlitz3.ab3@9854>     MOVE.w (A1)+,D1
00026C6A <AmiBlitz3.ab3@9855>     BEQ.w 'done
00026C6C <AmiBlitz3.ab3@9856>     CMP.w D2,D1
00026C70 <AmiBlitz3.ab3@9857>     BEQ.w 'skip2
00026C72 <AmiBlitz3.ab3@9858>     MOVE.l A1,-(A7)
00026C76 <AmiBlitz3.ab3@9859>     BSR.w uselib
00026C78 <AmiBlitz3.ab3@9860>     MOVEA.l (A7)+,A1
00026C7A <AmiBlitz3.ab3@9863>     ADDQ.w #2,A1
00026C7E <AmiBlitz3.ab3@9864>  BRA.w 'loop
00026C80 <AmiBlitz3.ab3@9867>   MOVEA.l (A7)+,A1
00026C82 <AmiBlitz3.ab3@9870> RTS
00026C88 <AmiBlitz3.ab3@9874>   MOVEA.l libpointer,A1
00026C8C <AmiBlitz3.ab3@9877>   CMPA.w #$0,A1
00026C90 <AmiBlitz3.ab3@9878>    BEQ.b 'rts
00026C94 <AmiBlitz3.ab3@9879>   CMP.w $4(A1),D1
00026C98 <AmiBlitz3.ab3@9880>    BEQ.w 'found
00026C9A <AmiBlitz3.ab3@9881>   MOVEA.l (A1),A1
00026C9E <AmiBlitz3.ab3@9882>  BRA.w 'loop
00026CA0 <AmiBlitz3.ab3@9885>   MOVEQ.l #-$01,D1
00026CA2 <AmiBlitz3.ab3@9888> RTS
00026CA6 <AmiBlitz3.ab3@9895>   MOVEM.l d0/a2,-(a7)
00026CA8 <AmiBlitz3.ab3@9896>   MOVEQ #0,d0
00026CAE <AmiBlitz3.ab3@9897>   LEA instrtab+4,a2
00026CB0 <AmiBlitz3.ab3@9898>   MOVE.w d1,d0
00026CB2 <AmiBlitz3.ab3@9899>   ASL.l #3,d0
00026CB6 <AmiBlitz3.ab3@9900>   MOVE.l 0(a2,d0.l),a1                                     ;*8
00026CBC <AmiBlitz3.ab3@9901>   CMP.l #0,a1
00026CC0 <AmiBlitz3.ab3@9902>   BNE 'foundb
00026CC6 <AmiBlitz3.ab3@9904>   MOVEA.l libpointer,A1
00026CCA <AmiBlitz3.ab3@9907>     CMPA.w #$0,A1
00026CCE <AmiBlitz3.ab3@9909>     BEQ.w noliberr
00026CD2 <AmiBlitz3.ab3@9911>     CMP.w $4(A1),D1
00026CD6 <AmiBlitz3.ab3@9912>     BEQ.w 'found
00026CD8 <AmiBlitz3.ab3@9913>    MOVEA.l (A1),A1
00026CDC <AmiBlitz3.ab3@9914>  BRA.w 'loop
00026CE0 <AmiBlitz3.ab3@9918>   MOVE.l a1,0(a2,d0.l)
00026CE4 <AmiBlitz3.ab3@9921>   MOVEM.l (a7)+,d0/a2
00026CE6 <AmiBlitz3.ab3@9923> RTS
00026CEA <AmiBlitz3.ab3@9933>   MOVEM.l d0-d1/a1,-(a7)
00026CEC <AmiBlitz3.ab3@9934>   MOVEQ #0,d0
00026CF2 <AmiBlitz3.ab3@9935>   LEA instrtab,a1
00026CF4 <AmiBlitz3.ab3@9936>   MOVE.w d1,d0
00026CF6 <AmiBlitz3.ab3@9937>   ASL.l #3,d0
00026CFA <AmiBlitz3.ab3@9938>   MOVE.l 0(a1,d0.l),a3
00026CFE <AmiBlitz3.ab3@9939>   MOVE.l 4(a1,d0.l),a2
00026D04 <AmiBlitz3.ab3@9940>   CMP.l #0,a3
00026D08 <AmiBlitz3.ab3@9941>   BNE 'foundb
00026D0E <AmiBlitz3.ab3@9944>   MOVEA.l libpointer,A2
00026D12 <AmiBlitz3.ab3@9947>   CMPA.w #$0,A2
00026D16 <AmiBlitz3.ab3@9948>   BEQ.w notokerr
00026D1A <AmiBlitz3.ab3@9949>   CMP.w $E(A2),D1
00026D1E <AmiBlitz3.ab3@9950>   BCS.w 'next
00026D22 <AmiBlitz3.ab3@9951>   CMP.w $10(A2),D1
00026D26 <AmiBlitz3.ab3@9952>   BCC.w 'next
00026D2A <AmiBlitz3.ab3@9956>   LEA $30(A2),A3
00026D2E <AmiBlitz3.ab3@9957>   TST.w $4(A2)
00026D32 <AmiBlitz3.ab3@9958>   BPL.w 'userlib
00026D36 <AmiBlitz3.ab3@9961>     CMP.w $E(A2),D1
00026D3A <AmiBlitz3.ab3@9962>     BEQ.w 'found
00026D3C <AmiBlitz3.ab3@9963>     SUBQ.w #1,D1
00026D40 <AmiBlitz3.ab3@9964>     MOVEA.l $2(A3),A3
00026D44 <AmiBlitz3.ab3@9965>  BRA.w 'loop2
00026D48 <AmiBlitz3.ab3@9969>   MOVE.l a3,0(a1,d0.l)
00026D4C <AmiBlitz3.ab3@9970>   MOVE.l a2,4(a1,d0.l)
00026D50 <AmiBlitz3.ab3@9973>   MOVEM.l (a7)+,d0-d1/a1
00026D54 <AmiBlitz3.ab3@9975>   MOVEM.l D1/A1-a3,-(A7)      ; was  movem.l d1/a1,-(a7)
00026D58 <AmiBlitz3.ab3@9977>   CMP.w #1,(a3)
00026D5C <AmiBlitz3.ab3@9978>   BNE.s 'ex10
00026D64 <AmiBlitz3.ab3@9979>   CMP.l #$12345678,$e(a3)
00026D68 <AmiBlitz3.ab3@9980>   BNE.s 'ex10
00026D6E <AmiBlitz3.ab3@9981>   CMP.w #$ffff,$16(a3)
00026D72 <AmiBlitz3.ab3@9982>   BNE.s 'ex10
00026D76 <AmiBlitz3.ab3@9983>   MOVE.l $12(a3),d1
00026D7A <AmiBlitz3.ab3@9984>   BEQ.s 'ex10
00026D80 <AmiBlitz3.ab3@9985>   LEA pluginbase,a3
00026D84 <AmiBlitz3.ab3@9987>  JMP 0(a2,d1.l)                                             ;plugin
00026D86 <AmiBlitz3.ab3@9991>   MOVEA.l A2,A1
00026D8C <AmiBlitz3.ab3@9993>   CLR.b newmode
00026D90 <AmiBlitz3.ab3@9995>   MOVE.w $4(A1),D1       ;set lib#
00026D94 <AmiBlitz3.ab3@10000>   BSR.w uselib3
00026D98 <AmiBlitz3.ab3@10001>   MOVEM.l (A7)+,D1/A1-a3
00026D9A <AmiBlitz3.ab3@10002>  RTS
00026DA0 <AmiBlitz3.ab3@10006>   MOVE.w globalvarpointer,-(a7)         ; "
00026DA8 <AmiBlitz3.ab3@10007>   MOVE.w #$8004,globalvarpointer        ; "
00026DAC <AmiBlitz3.ab3@10008>   BSR.w uselib3                         ; "
00026DB2 <AmiBlitz3.ab3@10009>   MOVE.w (a7)+,globalvarpointer         ; "
00026DB6 <AmiBlitz3.ab3@10010>   MOVEM.l (A7)+,D1/A1-a3
00026DB8 <AmiBlitz3.ab3@10011>  RTS
00026DBC <AmiBlitz3.ab3@10015>     CMP.w $E(A2),D1
00026DC0 <AmiBlitz3.ab3@10016>     BEQ.w 'found
00026DC2 <AmiBlitz3.ab3@10017>     SUBQ.w #1,D1
00026DC6 <AmiBlitz3.ab3@10018>     MOVEA.l $2(A3),A3
00026DCA <AmiBlitz3.ab3@10019>  BRA.w 'userlib
00026DCC <AmiBlitz3.ab3@10022>   MOVEA.l (A2),A2
00026DD0 <AmiBlitz3.ab3@10023> BRA.w 'loop
00026DD4 <AmiBlitz3.ab3@10027>   MOVEM.l (A7)+,D1/A1-a3
00026DDA <AmiBlitz3.ab3@10028>   JSR stripspaces
00026DDC <AmiBlitz3.ab3@10029>   MOVEQ #0,d0
00026DDE <AmiBlitz3.ab3@10030>   MOVE.b (a5)+,d0
00026DE4 <AmiBlitz3.ab3@10031>   MOVE.w d0,lastchar
00026DE6 <AmiBlitz3.ab3@10032>   ADDQ.l #4,a7
00026DE8 <AmiBlitz3.ab3@10033> RTS
00026DEE <AmiBlitz3.ab3@10036> JUMP_writeword JMP writeword
00026DF2 <AmiBlitz3.ab3@10039> ptr_acidlibs:   Ds.l 1                                     ;deflibsat org source
00026DF6 <AmiBlitz3.ab3@10040> ptr_deflibs:    Ds.l 1                                     ;acidlibsat org source
00026DFA <AmiBlitz3.ab3@10041> ptr_userlibs:   Ds.l 1                                     ;blitzlibsat org source  ;;start of blitzlibs list!
00026DFC <AmiBlitz3.ab3@10051>   TST.l D0
00026E00 <AmiBlitz3.ab3@10052>   BEQ.w 'rts
00026E02 <AmiBlitz3.ab3@10053>     MOVE.l D0,D6                                           ;d6=len
00026E08 <AmiBlitz3.ab3@10054>     MOVEA.l _dosbase,A6
00026E0E <AmiBlitz3.ab3@10055>     MOVE.l #HUNK_RELOC_16__MODE_OLDFILE,D2
00026E12 <AmiBlitz3.ab3@10056>     JSR _Open(A6)
00026E14 <AmiBlitz3.ab3@10057>     MOVE.l D0,D7
00026E18 <AmiBlitz3.ab3@10058>     BEQ.w 'rts
00026E1A <AmiBlitz3.ab3@10059>       MOVE.l D6,D0
00026E1C <AmiBlitz3.ab3@10060>       MOVEQ.l #$01,D1
00026E22 <AmiBlitz3.ab3@10061>       MOVEA.l _execbase,A6
00026E28 <AmiBlitz3.ab3@10064>       MOVE.l mempool,a0
00026E2C <AmiBlitz3.ab3@10065>       JSR _AllocPooled(a6)
00026E2E <AmiBlitz3.ab3@10067>       MOVE.l D0,D5                                         ;start address
00026E30 <AmiBlitz3.ab3@10069>       MOVE.l D7,D1                                         ; handle
00026E32 <AmiBlitz3.ab3@10070>       MOVE.l D5,D2                                         ; buffer addr
00026E34 <AmiBlitz3.ab3@10071>       MOVE.l D6,D3                                         ; size
00026E3A <AmiBlitz3.ab3@10072>       MOVEA.l _dosbase,A6
00026E3E <AmiBlitz3.ab3@10073>       JSR _Read(A6)
00026E40 <AmiBlitz3.ab3@10074>       MOVE.l D7,D1
00026E44 <AmiBlitz3.ab3@10075>       JSR _Close(A6)
00026E46 <AmiBlitz3.ab3@10077>       MOVEA.l D5,A0                                        ; buffer addr
00026E48 <AmiBlitz3.ab3@10083>         MOVE.l (A0)+,D0                                    ; naechster Longwert nach DO
00026E4C <AmiBlitz3.ab3@10084>         BEQ.b 'linkdone                                    ; wenn <> 0, dann
00026E50 <AmiBlitz3.ab3@10085>           LEA $20(A0),A1  ;link in.                        ;   lade inhalt von D0+40bytes nach A1
00026E52 <AmiBlitz3.ab3@10086>           MOVE.l A1,(A3)                                   ;   kopiere Adresse in A1 zum libpointer
00026E54 <AmiBlitz3.ab3@10087>           MOVEA.l A1,A3                                    ;   kopiere A1 nach A3
00026E56 <AmiBlitz3.ab3@10088>           ADDA.l D0,A0                                     ;   addiere inhalt von D0 zu A0 hinzu
00026E5A <AmiBlitz3.ab3@10092>           MOVE.l -$4(A1),D0    ;number of longwords.       ;   hole die 4bytes vor nach D0
00026E5C <AmiBlitz3.ab3@10093>           ADD.l D0,D0          ;to bytes...                ;   verdoppele D0
00026E5E <AmiBlitz3.ab3@10094>           ADD.l D0,D0                                      ;   verdoppele D0 nochmal
00026E62 <AmiBlitz3.ab3@10095>           MOVE.l D0,$6(A1)     ;fix 1                      ;   schreibe D0 6bytes nach A1
00026E66 <AmiBlitz3.ab3@10096>           CLR.l $20(A1)        ;no relocs                  ;   loesche D0+40bytes
00026E6A <AmiBlitz3.ab3@10097>           LEA $C(A1,D0.L),A2   ;reloc info.                ;   lade inhalt von (A1)+D0+$C nach A2
00026E6C <AmiBlitz3.ab3@10098>           CMPA.l A0,A2         ;is it over?
00026E70 <AmiBlitz3.ab3@10099>           BCC.b 'linkloop                                  ; wenn A0=>A2
00026E76 <AmiBlitz3.ab3@10101>             MOVE.l -$8(A2),$20(A1)  ;number of relocs.     ;
00026E7A <AmiBlitz3.ab3@10102>             MOVE.l A2,$24(A1)       ;pointer to relocs.    ;
00026E7E <AmiBlitz3.ab3@10103>   BRA.w 'linkloop
00026E80 <AmiBlitz3.ab3@10106>       MOVE.l D5,D0
00026E82 <AmiBlitz3.ab3@10109> RTS
00026EAC <AmiBlitz3.ab3@10114>   !basic
00026F20 <AmiBlitz3.ab3@10115>    tempmapping$ = dos_AddPart{my_systemdir$,"token_mapping_userlibs.txt"}
00026F54 <AmiBlitz3.ab3@10116>    dos_Delete{tempmapping$}
00026F98 <AmiBlitz3.ab3@10117>    fid.l = file_Open{tempmapping$,#file_forcewrite}
00026FB6 <AmiBlitz3.ab3@10118>   !asm
00026FBC <AmiBlitz3.ab3@10120>   LEA libpointer,A3
00026FC2 <AmiBlitz3.ab3@10124>   MOVE.l size_deflibs,D0                 ; in org source was acid libs first
00026FC8 <AmiBlitz3.ab3@10125>   MOVE.l deflib,d1
00026FCC <AmiBlitz3.ab3@10127>   BEQ 'l1
00026FD0 <AmiBlitz3.ab3@10128>  BRA 'l2
00026FD6 <AmiBlitz3.ab3@10131>   MOVE.l #str_path_deflibs,D1
00026FDA <AmiBlitz3.ab3@10135>   BSR.w load_libsfile
00026FE0 <AmiBlitz3.ab3@10136>   MOVE.l D0,ptr_deflibs
00026FE6 <AmiBlitz3.ab3@10139>   MOVE.l size_acidlibs,D0               ; in org source was deflibs libs second
00026FEC <AmiBlitz3.ab3@10140>   MOVE.l #str_path_acidlibs,D1
00026FF0 <AmiBlitz3.ab3@10141>   BSR.w load_libsfile
00026FF6 <AmiBlitz3.ab3@10142>   MOVE.l D0,ptr_acidlibs
00026FF8 <AmiBlitz3.ab3@10148>   CLR.l (A3)
00026FFE <AmiBlitz3.ab3@10149>   MOVE.l A3,ptr_userlibs
00027004 <AmiBlitz3.ab3@10154>   LEA str_libfilename,A0
0002700A <AmiBlitz3.ab3@10155>   LEA str_path_userlibs,A1
0002700C <AmiBlitz3.ab3@10158>     MOVE.b (A1)+,(A0)+
00027010 <AmiBlitz3.ab3@10159>   BNE.b 'loop0
00027012 <AmiBlitz3.ab3@10162>   SUBQ.w #1,A0
00027016 <AmiBlitz3.ab3@10163>   MOVE.b #$2F,(A0)+
00027018 <AmiBlitz3.ab3@10167>   MOVE.l A0,-(A7) ;store first pos for chars        ; -- store str_path_userlibs in A7
0002701E <AmiBlitz3.ab3@10169>   LEA ptr_userlibs_list,A2   ;lib names!
00027024 <AmiBlitz3.ab3@10170>   MOVEA.l ptr_userlibs,A3
0002702A <AmiBlitz3.ab3@10171>   MOVEA.l _dosbase,A6
0002702C <AmiBlitz3.ab3@10176>       MOVE.l (A2),D0                                       ; addresse aus liste nach D0
00027030 <AmiBlitz3.ab3@10177>       BNE.b 'more                                      ; wenn nix drin, processing ueberspringen
00027032 <AmiBlitz3.ab3@10179>       CLR.l (A3)
00027034 <AmiBlitz3.ab3@10180>       ADDQ.w #4,A7
0002705E <AmiBlitz3.ab3@10182>       !basic
00027072 <AmiBlitz3.ab3@10183>       If fid<>-1
0002707C <AmiBlitz3.ab3@10184>         file_Close{fid}
00027088 <AmiBlitz3.ab3@10185>         fid = -1
000270A6 <AmiBlitz3.ab3@10187>       !asm
000270AA <AmiBlitz3.ab3@10189>  BRA.w process_libraries
000270AC <AmiBlitz3.ab3@10192>       MOVEA.l D0,A2                                        ; addresse zureuck nach A2
000270B0 <AmiBlitz3.ab3@10193>       TST.w $4(A2)                                         ; naechste addresse pruefen
000270B4 <AmiBlitz3.ab3@10194>     BEQ.b 'loop
000270B8 <AmiBlitz3.ab3@10196>     LEA $6(A2),A1          ;add dir name to libsdir
000270BA <AmiBlitz3.ab3@10197>     MOVEA.l (A7),A0
000270BC <AmiBlitz3.ab3@10200>       MOVE.b (A1)+,(A0)+
000270C0 <AmiBlitz3.ab3@10201>     BNE.w 'loop2
000270C2 <AmiBlitz3.ab3@10205>     MOVE.l A0,-(A7)                  ;pointer for lib name
000270C8 <AmiBlitz3.ab3@10207>     MOVE.l #str_libfilename,D1
000270CA <AmiBlitz3.ab3@10208>     MOVEQ.l #-$02,D2
000270D0 <AmiBlitz3.ab3@10209>     MOVEA.l _dosbase,A6
000270D4 <AmiBlitz3.ab3@10210>      JSR _Lock(A6)
000270D6 <AmiBlitz3.ab3@10211>     MOVE.l D0,D1
000270DA <AmiBlitz3.ab3@10212>      BEQ.w 'exdone2
000270DC <AmiBlitz3.ab3@10213>     MOVEA.l (A7),A0
000270E2 <AmiBlitz3.ab3@10214>     MOVE.b #$2F,-$1(A0)           ;#'/'
000270E4 <AmiBlitz3.ab3@10217>     MOVE.l D1,-(A7)               ;lock
000270EA <AmiBlitz3.ab3@10218>     MOVE.l #ptr_parameterstore,D2
000270F0 <AmiBlitz3.ab3@10219>     MOVEA.l _dosbase,A6
000270F4 <AmiBlitz3.ab3@10220>     JSR _Examine(A6)
000270F6 <AmiBlitz3.ab3@10221>     TST.l D0
000270FA <AmiBlitz3.ab3@10222>      BEQ.w 'exdone
00027100 <AmiBlitz3.ab3@10229>     LEA fib_FileName,A0
00027104 <AmiBlitz3.ab3@10230>     BSR.w check_for_infoextention
00027108 <AmiBlitz3.ab3@10231>     BEQ.w 'exdone
00027132 <AmiBlitz3.ab3@10235>     !basic
000271B6 <AmiBlitz3.ab3@10236>       Poke$ ?str_libfilename,dos_AddPart{Peek$(?str_path_userlibs),Peek$(?fib_FileName)}
000271D4 <AmiBlitz3.ab3@10237>     !asm
000271DA <AmiBlitz3.ab3@10238>     MOVE.l #str_libfilename,D1
000271DE <AmiBlitz3.ab3@10239>     BSR.w open_userlibfile
000271E0 <AmiBlitz3.ab3@10243>     MOVE.l (A7)+,D1
000271E6 <AmiBlitz3.ab3@10244>     MOVEA.l _dosbase,A6
000271EA <AmiBlitz3.ab3@10245>     JSR _UnLock(A6)
000271EC <AmiBlitz3.ab3@10248>     ADDQ.w #4,A7    ;forget namepos
000271F0 <AmiBlitz3.ab3@10249> BRA.w 'loop
000271F6 <AmiBlitz3.ab3@10256>   MOVE.l #HUNK_RELOC_16__MODE_OLDFILE,D2
000271FC <AmiBlitz3.ab3@10257>   MOVEA.l _dosbase,A6
00027200 <AmiBlitz3.ab3@10258>    JSR _Open(A6)
00027202 <AmiBlitz3.ab3@10259>   MOVE.l D0,D7
00027206 <AmiBlitz3.ab3@10260>    BEQ.w 'openerr
00027208 <AmiBlitz3.ab3@10263>   MOVE.l D7,D1                                             ; filehandle
0002720E <AmiBlitz3.ab3@10264>   MOVE.l #optstuff,D2                                     ; buffer
00027214 <AmiBlitz3.ab3@10265>   MOVEA.l _dosbase,A6
00027216 <AmiBlitz3.ab3@10266>   MOVEQ.l #$20,D3                                          ; size
0002721A <AmiBlitz3.ab3@10267>   JSR _Read(A6)
00027220 <AmiBlitz3.ab3@10270>   MOVE.l optstuff+28,D6      ;long words to read
00027222 <AmiBlitz3.ab3@10271>   LSL.l #2,D6
00027224 <AmiBlitz3.ab3@10272>   MOVE.l D6,D0
00027226 <AmiBlitz3.ab3@10273>   MOVEQ.l #$01,D1
0002722C <AmiBlitz3.ab3@10274>   MOVEA.l _execbase,A6
00027232 <AmiBlitz3.ab3@10277>   MOVE.l mempool,a0
00027236 <AmiBlitz3.ab3@10278>   JSR _AllocPooled(a6)
00027238 <AmiBlitz3.ab3@10280>   MOVEA.l D0,A5
0002723E <AmiBlitz3.ab3@10283>   MOVEA.l _dosbase,A6
00027240 <AmiBlitz3.ab3@10284>   MOVE.l D7,D1                                             ; filehandle
00027242 <AmiBlitz3.ab3@10285>   MOVE.l A5,D2                                             ; buffer
00027244 <AmiBlitz3.ab3@10286>   MOVE.l D6,D3                                             ; size
00027248 <AmiBlitz3.ab3@10287>    JSR _Read(A6)   ;read in struct
0002724A <AmiBlitz3.ab3@10289>   MOVE.l A5,(A3)
0002724C <AmiBlitz3.ab3@10292>   MOVE.l A5,d0
0002724E <AmiBlitz3.ab3@10295>   MOVEA.l A5,A3
00027252 <AmiBlitz3.ab3@10296>   MOVE.l D6,$6(A5)
00027256 <AmiBlitz3.ab3@10297>   CLR.l $20(A5)
00027280 <AmiBlitz3.ab3@10299>   !basic
0002728A <AmiBlitz3.ab3@10301>   addr_libnum.l = PutD0 + 4
0002729E <AmiBlitz3.ab3@10302>   If fid<>-1
0002733E <AmiBlitz3.ab3@10303>     currentlib$ = LSet$(Peek.s(?fib_FileName),30)+";"+LSet$(Get_Libinfo{addr_libnum},30) ;+";"+Str$(Peek.w(addr_libnum))
00027370 <AmiBlitz3.ab3@10304>     file_WriteLine{fid,currentlib$}
0002738E <AmiBlitz3.ab3@10306>   !asm
00027390 <AmiBlitz3.ab3@10309>   MOVE.l D7,D1                                             ; filehandle
00027396 <AmiBlitz3.ab3@10310>   MOVE.l #optstuff,D2                                     ; buffer
00027398 <AmiBlitz3.ab3@10311>   MOVEQ.l #$0C,D3                                          ; size
0002739E <AmiBlitz3.ab3@10312>   MOVEA.l _dosbase,A6
000273A2 <AmiBlitz3.ab3@10313>    JSR _Read(A6)
000273A8 <AmiBlitz3.ab3@10316>   CMP.l #$C,D0
000273AC <AmiBlitz3.ab3@10317>    BCS.w 'closeup
000273B2 <AmiBlitz3.ab3@10320>   MOVE.l optstuff+4,D0
000273B6 <AmiBlitz3.ab3@10321>   MOVE.l D0,$20(A5)
000273B8 <AmiBlitz3.ab3@10322>   LSL.l #2,D0
000273BA <AmiBlitz3.ab3@10323>   MOVE.l D0,D5             ;length of reloc info
000273BC <AmiBlitz3.ab3@10324>   MOVEQ.l #$01,D1
000273C2 <AmiBlitz3.ab3@10325>   MOVEA.l _execbase,A6
000273C8 <AmiBlitz3.ab3@10327>   MOVE.l mempool,a0
000273CC <AmiBlitz3.ab3@10328>   JSR _AllocPooled(a6)
000273D2 <AmiBlitz3.ab3@10331>   MOVEA.l _dosbase,A6
000273D6 <AmiBlitz3.ab3@10333>   MOVE.l D0,$24(A5)        ;pointer to reloc mem
000273D8 <AmiBlitz3.ab3@10334>   MOVE.l D7,D1
000273DA <AmiBlitz3.ab3@10335>   MOVE.l D0,D2
000273DC <AmiBlitz3.ab3@10336>   MOVE.l D5,D3
000273E0 <AmiBlitz3.ab3@10337>   JSR _Read(A6)
000273E2 <AmiBlitz3.ab3@10340>   MOVE.l D7,D1
000273E8 <AmiBlitz3.ab3@10341>   MOVEA.l _dosbase,A6
000273EC <AmiBlitz3.ab3@10342> JMP _Close(A6)
000273EE <AmiBlitz3.ab3@10345> RTS
000273F4 <AmiBlitz3.ab3@10355>   CLR.w number_of_objects
000273FA <AmiBlitz3.ab3@10356>   MOVEA.l end_of_tokenlist,A3
00027400 <AmiBlitz3.ab3@10357>   MOVEA.l libpointer,A2
00027404 <AmiBlitz3.ab3@10360>     CMPA.w #$0,A2
00027408 <AmiBlitz3.ab3@10361>     BEQ.w 'done                                        ; <-- abbruch mit RTS
0002740C <AmiBlitz3.ab3@10363>     MOVE.w $4(A2),D7                                       ; <-- get tokennumber
00027410 <AmiBlitz3.ab3@10364>     BMI.w 'syslib
00027412 <AmiBlitz3.ab3@10365>       LSL.w #7,D7
00027414 <AmiBlitz3.ab3@10366>       ADDQ.w #1,D7
00027418 <AmiBlitz3.ab3@10367>       MOVE.w D7,$E(A2)
0002741C <AmiBlitz3.ab3@10370>     LEA $30(A2),A1
00027422 <AmiBlitz3.ab3@10371>     LEA temp1,A4
00027424 <AmiBlitz3.ab3@10374>       MOVE.w (A1),D0
00027428 <AmiBlitz3.ab3@10375>       BMI.w 'next
0002742A <AmiBlitz3.ab3@10376>       MOVE.l A1,(A4)
0002742C <AmiBlitz3.ab3@10377>       MOVEA.l A1,A4      ;last link for subs
0002742E <AmiBlitz3.ab3@10378>       ADDQ.w #2,A4
00027430 <AmiBlitz3.ab3@10379>       ADDQ.w #6,A1
00027434 <AmiBlitz3.ab3@10380>       CMP.w #$8,D0
00027438 <AmiBlitz3.ab3@10381>       BEQ.w 'addtoke
0002743C <AmiBlitz3.ab3@10382>         ANDI.w #$F,D0
00027440 <AmiBlitz3.ab3@10383>         BNE.w 'something
00027444 <AmiBlitz3.ab3@10387>           BSR.w skiplibreg
00027448 <AmiBlitz3.ab3@10388>           LEA $C(A1),A1
0002744A <AmiBlitz3.ab3@10389>           ADDQ.w #1,D7   ;in case it's a user lib
0002744E <AmiBlitz3.ab3@10390>  BRA.w 'loop2
00027452 <AmiBlitz3.ab3@10393>     BTST #$2,D0
00027456 <AmiBlitz3.ab3@10394>     BEQ.w 'notalib
00027458 <AmiBlitz3.ab3@10395>       ADDQ.w #4,A1
0002745A <AmiBlitz3.ab3@10398>         TST.b (A1)+
0002745E <AmiBlitz3.ab3@10399>       BPL.w 'alibloop
00027462 <AmiBlitz3.ab3@10400>       BSR.w aligna1
00027466 <AmiBlitz3.ab3@10401>  BRA.w 'addtoke
00027468 <AmiBlitz3.ab3@10406>       MOVE.w (A1)+,D0
0002746C <AmiBlitz3.ab3@10407>       BMI.w 'addtoke
00027470 <AmiBlitz3.ab3@10408>       ANDI.w #$FF,D0
00027472 <AmiBlitz3.ab3@10409>       ADDA.w D0,A1
00027476 <AmiBlitz3.ab3@10410>       BSR.w aligna1
0002747A <AmiBlitz3.ab3@10411>       BSR.w skiplibreg
0002747E <AmiBlitz3.ab3@10412>       LEA $C(A1),A1
00027482 <AmiBlitz3.ab3@10413>  BRA.w 'stloop
00027484 <AmiBlitz3.ab3@10416>     MOVE.l A1,(A3)
00027486 <AmiBlitz3.ab3@10417>     MOVEA.l A1,A3
00027488 <AmiBlitz3.ab3@10418>     ADDQ.w #4,A1
0002748A <AmiBlitz3.ab3@10420>     MOVE.w D7,(A1)+
0002748C <AmiBlitz3.ab3@10423>       TST.b (A1)+
00027490 <AmiBlitz3.ab3@10424>     BNE.w 'tokeloop
00027492 <AmiBlitz3.ab3@10427>       TST.b (A1)+
00027496 <AmiBlitz3.ab3@10428>     BNE.w 'tokeloop2
0002749A <AmiBlitz3.ab3@10429>     BSR.w aligna1
0002749C <AmiBlitz3.ab3@10430>     ADDQ.w #1,D7
000274A0 <AmiBlitz3.ab3@10431>  BRA.w 'loop2
000274A4 <AmiBlitz3.ab3@10434>     TST.w $4(A2)
000274A8 <AmiBlitz3.ab3@10435>      BMI.w 'notulib
000274AC <AmiBlitz3.ab3@10436>     MOVE.w D7,$10(A2)
000274AE <AmiBlitz3.ab3@10439>     ADDQ.w #2,A1
000274B0 <AmiBlitz3.ab3@10440>     TST.l (A1)+
000274B4 <AmiBlitz3.ab3@10441>      BEQ.w 'nomax
000274BA <AmiBlitz3.ab3@10442>     ADDQ.w #1,number_of_objects
000274BE <AmiBlitz3.ab3@10443>     LEA $16(A1),A1
000274C0 <AmiBlitz3.ab3@10446>     SUBA.l A2,A1
000274C4 <AmiBlitz3.ab3@10447>     MOVE.l A1,$12(A2)
000274C6 <AmiBlitz3.ab3@10448>     MOVEA.l (A2),A2
000274CA <AmiBlitz3.ab3@10449>  BRA.w 'loop
000274CC <AmiBlitz3.ab3@10452>   CLR.l (A3)
000274D2 <AmiBlitz3.ab3@10454> 
000274D8 <AmiBlitz3.ab3@10456>   MOVE.l A7,errstack
000274E2 <AmiBlitz3.ab3@10457>   MOVE.l #'cont,errcont
000274EA <AmiBlitz3.ab3@10458>   MOVE.w #$FFFF,ezerr       ; was -1
000274EE <AmiBlitz3.ab3@10459>   MOVE.w #$FFFA,D1          ;#65530
000274F2 <AmiBlitz3.ab3@10460>    BSR.w findlib            ;get address of mem lib
000274F8 <AmiBlitz3.ab3@10461>   MOVE.l A1,tempvm
000274FC <AmiBlitz3.ab3@10462>   MOVE.w #$FDA7,D1          ;#64935,
00027500 <AmiBlitz3.ab3@10463>    BSR.w findlib
00027506 <AmiBlitz3.ab3@10464>   MOVE.l A1,ffplib
00027508 <AmiBlitz3.ab3@10467> RTS
0002750C <AmiBlitz3.ab3@10470> ffplib:  Ds.l 1
0002750E <AmiBlitz3.ab3@10474>     TST.w (A1)+
00027512 <AmiBlitz3.ab3@10475>     BEQ.w 'done
00027514 <AmiBlitz3.ab3@10476>     ADDQ.w #2,A1
00027518 <AmiBlitz3.ab3@10477>  BRA.w skiplibreg
0002751A <AmiBlitz3.ab3@10480> RTS
0002751C <AmiBlitz3.ab3@10484>   EXG.l A1,A0
00027520 <AmiBlitz3.ab3@10485>   BSR.w aligna1
00027522 <AmiBlitz3.ab3@10486>   EXG.l A1,A0
00027524 <AmiBlitz3.ab3@10487> RTS
00027526 <AmiBlitz3.ab3@10491>   EXG.l D0,A1
00027528 <AmiBlitz3.ab3@10492>   ADDQ.l #1,D0
0002752C <AmiBlitz3.ab3@10493>   BCLR #$0,D0
0002752E <AmiBlitz3.ab3@10494>   EXG.l D0,A1
00027530 <AmiBlitz3.ab3@10495> RTS
00027536 <AmiBlitz3.ab3@10499>   MOVEA.l _execbase,A6
0002753C <AmiBlitz3.ab3@10500>   MOVEA.l ptr_userlibs,A2
0002753E <AmiBlitz3.ab3@10501>   MOVE.l (A2),D0
00027540 <AmiBlitz3.ab3@10502>   CLR.l (A2)
00027542 <AmiBlitz3.ab3@10503>   MOVEA.l D0,A2
00027546 <AmiBlitz3.ab3@10506>     CMPA.w #$0,A2
0002754A <AmiBlitz3.ab3@10507>     BEQ.w free_userlib
0002754E <AmiBlitz3.ab3@10509>     MOVE.l $20(A2),D0
00027552 <AmiBlitz3.ab3@10510>     BEQ.b 'skip
00027554 <AmiBlitz3.ab3@10511>       LSL.l #2,D0
0002755A <AmiBlitz3.ab3@10513>       MOVE.l mempool,a0
0002755E <AmiBlitz3.ab3@10515>       MOVEA.l $24(A2),A1
00027562 <AmiBlitz3.ab3@10517>       JSR _FreePooled(A6)
00027564 <AmiBlitz3.ab3@10522>     MOVEA.l A2,A1
00027568 <AmiBlitz3.ab3@10523>     MOVE.l $6(A1),D0
0002756E <AmiBlitz3.ab3@10525>     MOVE.l mempool,a0
00027570 <AmiBlitz3.ab3@10527>     MOVEA.l (A2),A2
00027576 <AmiBlitz3.ab3@10529>     MOVEA.l _execbase,A6
0002757A <AmiBlitz3.ab3@10530>     JSR _FreePooled(A6)
0002757E <AmiBlitz3.ab3@10533> BRA.w 'loop
00027582 <AmiBlitz3.ab3@10537>   BSR.w free_userlibs
00027588 <AmiBlitz3.ab3@10539>   MOVEA.l _execbase,A6
0002758E <AmiBlitz3.ab3@10540>   CLR.l libpointer
00027594 <AmiBlitz3.ab3@10541>   MOVEA.l end_of_tokenlist,A0
00027596 <AmiBlitz3.ab3@10542>   CLR.l (A0)
0002759C <AmiBlitz3.ab3@10544>   MOVE.l size_acidlibs,D0
000275A0 <AmiBlitz3.ab3@10545>   BEQ.b 'defskip
000275A6 <AmiBlitz3.ab3@10546>     MOVE.l ptr_acidlibs,D1
000275AA <AmiBlitz3.ab3@10547>     BEQ.b 'defskip
000275B0 <AmiBlitz3.ab3@10548>       CLR.l ptr_acidlibs
000275B2 <AmiBlitz3.ab3@10549>       MOVEA.l D1,A1
000275B8 <AmiBlitz3.ab3@10551>       MOVE.l mempool,a0
000275BE <AmiBlitz3.ab3@10552>       MOVEA.l _execbase,A6
000275C2 <AmiBlitz3.ab3@10553>       JSR _FreePooled(A6)                                 ; free acidlibs
000275C8 <AmiBlitz3.ab3@10558>   MOVE.l size_deflibs,D0
000275CC <AmiBlitz3.ab3@10559>   BEQ.b 'acidskip
000275D2 <AmiBlitz3.ab3@10560>     MOVE.l ptr_deflibs,D1
000275D6 <AmiBlitz3.ab3@10561>     BEQ.b 'acidskip
000275DC <AmiBlitz3.ab3@10562>       CLR.l ptr_deflibs                                    ; d0: memorySize
000275DE <AmiBlitz3.ab3@10563>       MOVEA.l D1,A1                                        ; a1: memory
000275E4 <AmiBlitz3.ab3@10565>       MOVE.l mempool,a0                                    ; a0: poolHeader
000275EA <AmiBlitz3.ab3@10566>       MOVEA.l _execbase,A6
000275EE <AmiBlitz3.ab3@10567>       JSR _FreePooled(A6)                                  ; free deflibs
000275F0 <AmiBlitz3.ab3@10572> RTS
000275F6 <AmiBlitz3.ab3@10576>   MOVEA.l currentmacroaddr,A0
000275F8 <AmiBlitz3.ab3@10577>   MOVEA.l (A0),A2
000275FA <AmiBlitz3.ab3@10578>   CLR.l (A0)
00027600 <AmiBlitz3.ab3@10579>   MOVEA.l _execbase,A6
00027604 <AmiBlitz3.ab3@10582>     CMPA.w #$0,A2
00027608 <AmiBlitz3.ab3@10583>     BEQ.w 'done
0002760A <AmiBlitz3.ab3@10584>     MOVEQ.l #$00,D0
0002760E <AmiBlitz3.ab3@10585>     MOVE.w $8(A2),D0
00027612 <AmiBlitz3.ab3@10586>     BEQ.w 'skip
00027616 <AmiBlitz3.ab3@10587>     MOVEA.l $4(A2),A1
0002761C <AmiBlitz3.ab3@10589>     MOVE.l mempool,a0
00027620 <AmiBlitz3.ab3@10590>     JSR _FreePooled(A6)
00027622 <AmiBlitz3.ab3@10595>     MOVEA.l A2,A1
00027624 <AmiBlitz3.ab3@10596>     MOVEA.l (A2),A2
00027626 <AmiBlitz3.ab3@10597>     MOVEQ.l #$00,D0
0002762A <AmiBlitz3.ab3@10598>     MOVE.b $C(A1),D0
00027630 <AmiBlitz3.ab3@10600>     MOVE.l mempool2,a0
00027634 <AmiBlitz3.ab3@10601>     JSR _FreePooled(A6)
00027638 <AmiBlitz3.ab3@10605>  BRA.w 'loop
0002763A <AmiBlitz3.ab3@10608> RTS
00027640 <AmiBlitz3.ab3@10612>   MOVEA.l templabel,A2
00027646 <AmiBlitz3.ab3@10613>   CLR.l templabel
00027648 <AmiBlitz3.ab3@10615> RTS
0002764E <AmiBlitz3.ab3@10617>   MOVEA.l _execbase,A6                                     ;??looks like dead code?
00027652 <AmiBlitz3.ab3@10620>     CMPA.w #$0,A2
00027656 <AmiBlitz3.ab3@10621>     BEQ.w 'done
00027658 <AmiBlitz3.ab3@10622>     MOVEQ.l #$00,D0
0002765C <AmiBlitz3.ab3@10623>     MOVE.b $E(A2),D0                                       ;labeltemp
0002765E <AmiBlitz3.ab3@10624>     MOVEA.l A2,A1
00027660 <AmiBlitz3.ab3@10625>     MOVEA.l (A2),A2
00027666 <AmiBlitz3.ab3@10627>     MOVE.l mempool2,a0
0002766A <AmiBlitz3.ab3@10632>  BRA.w 'loop
0002766C <AmiBlitz3.ab3@10635> RTS
00027672 <AmiBlitz3.ab3@10639>   MOVEA.l data1,A4
00027678 <AmiBlitz3.ab3@10640>   CMPA.l data2at,A4
0002767C <AmiBlitz3.ab3@10641>   BCC.w 'over
0002767E <AmiBlitz3.ab3@10642>     MOVE.b D1,(A4)+
00027684 <AmiBlitz3.ab3@10643>     MOVE.l A4,data1
00027686 <AmiBlitz3.ab3@10644>  RTS
0002768E <AmiBlitz3.ab3@10647>   MOVE.w #$FFFF,dontwrite     ; was -1                             ;move #-1, org source
00027694 <AmiBlitz3.ab3@10648>   ADDQ.l #1,data1
00027696 <AmiBlitz3.ab3@10649> RTS
00027698 <AmiBlitz3.ab3@10653>   SWAP D1
0002769C <AmiBlitz3.ab3@10654>   BSR.w pokedata1
0002769E <AmiBlitz3.ab3@10655>   SWAP D1
000276A4 <AmiBlitz3.ab3@10658>   MOVEA.l data1,A4
000276AA <AmiBlitz3.ab3@10659>   CMPA.l data2at,A4
000276AE <AmiBlitz3.ab3@10660>    BCC.w 'over
000276B0 <AmiBlitz3.ab3@10661>   MOVE.w D1,(A4)+
000276B6 <AmiBlitz3.ab3@10662>   MOVE.l A4,data1
000276B8 <AmiBlitz3.ab3@10663>  RTS
000276C0 <AmiBlitz3.ab3@10666>   MOVE.w #$FFFF,dontwrite    ; was -1
000276C6 <AmiBlitz3.ab3@10667>   ADDQ.l #2,data1
000276C8 <AmiBlitz3.ab3@10668> RTS
000276CE <AmiBlitz3.ab3@10672>   MOVE.l data1,D3                                      ;write local string/type allocs
000276D0 <AmiBlitz3.ab3@10673>   MOVEQ.l #$00,D4
000276D4 <AmiBlitz3.ab3@10676>   CMPA.w #$0,A2
000276D8 <AmiBlitz3.ab3@10677>    BEQ.w 'done
000276DC <AmiBlitz3.ab3@10678>   TST.w $6(A2)
000276E0 <AmiBlitz3.ab3@10679>    BNE.w 'next
000276E4 <AmiBlitz3.ab3@10680>   MOVEA.l $A(A2),A3
000276EC <AmiBlitz3.ab3@10681>   CMPI.l #$100,$4(A3)
000276F0 <AmiBlitz3.ab3@10682>    BCS.w 'next
000276F4 <AmiBlitz3.ab3@10683>   MOVE.w $4(A2),D1
000276F8 <AmiBlitz3.ab3@10684>    BSR.w pokedata1
000276FC <AmiBlitz3.ab3@10685>   MOVE.w $8(A3),D1
00027700 <AmiBlitz3.ab3@10686>    BSR.w pokedata1
00027702 <AmiBlitz3.ab3@10687>   ADDQ.w #1,D4
00027704 <AmiBlitz3.ab3@10690>    MOVEA.l (A2),A2
00027708 <AmiBlitz3.ab3@10691>  BRA.w 'loop
0002770A <AmiBlitz3.ab3@10694>    TST.w D4
0002770E <AmiBlitz3.ab3@10695>    BEQ.w calcstatic2_skip
00027712 <AmiBlitz3.ab3@10696>   MOVE.w #$FF37,D1              ;#65335
00027716 <AmiBlitz3.ab3@10697>    BSR.w uselib                 ;use statics lib
0002771A <AmiBlitz3.ab3@10698>   MOVE.w #$FFFA,D1              ;use memlib
0002771E <AmiBlitz3.ab3@10699> BRA.w uselib
00027724 <AmiBlitz3.ab3@10708>   MOVEA.l varbase,A2                                       ;add alloc mem for types/strings global
0002772A <AmiBlitz3.ab3@10711>   MOVE.l data1,D3
0002772C <AmiBlitz3.ab3@10712>   MOVEQ.l #$00,D4
00027732 <AmiBlitz3.ab3@10714>   TST.b iserror
00027736 <AmiBlitz3.ab3@10715>   BEQ 'loop
00027738 <AmiBlitz3.ab3@10716>   RTS
0002773C <AmiBlitz3.ab3@10720>    CMPA.w #$0,A2
00027740 <AmiBlitz3.ab3@10721>    BEQ.w 'done
00027744 <AmiBlitz3.ab3@10722>   TST.w $6(A2)
00027748 <AmiBlitz3.ab3@10723>    BNE.w 'next
0002774C <AmiBlitz3.ab3@10724>   MOVEA.l $A(A2),A3
00027754 <AmiBlitz3.ab3@10725>   CMPI.l #$100,$4(A3)
00027758 <AmiBlitz3.ab3@10726>    BCS.w 'next
0002775C <AmiBlitz3.ab3@10727>   MOVE.w $4(A2),D1
00027760 <AmiBlitz3.ab3@10728>    BSR.w pokedata1
00027764 <AmiBlitz3.ab3@10729>   MOVE.w $8(A3),D1
00027768 <AmiBlitz3.ab3@10730>    BSR.w pokedata1
0002776A <AmiBlitz3.ab3@10731>   ADDQ.w #1,D4
0002776C <AmiBlitz3.ab3@10734>   MOVEA.l (A2),A2
00027770 <AmiBlitz3.ab3@10735>  BRA.w 'loop
00027776 <AmiBlitz3.ab3@10740>   MOVEA.l sharebase,A2  ; org  varbase
0002777A <AmiBlitz3.ab3@10743>   CMPA.w #$0,A2
0002777E <AmiBlitz3.ab3@10744>    BEQ.w 'doneb
00027782 <AmiBlitz3.ab3@10746>   TST.w $6(A2)
00027786 <AmiBlitz3.ab3@10747>    BNE.w 'nextb
0002778A <AmiBlitz3.ab3@10748>   MOVEA.l $A(A2),A3
00027792 <AmiBlitz3.ab3@10749>   CMPI.l #$100,$4(A3)
00027796 <AmiBlitz3.ab3@10750>    BCS.w 'nextb
0002779A <AmiBlitz3.ab3@10751>   MOVE.w $4(A2),D1
0002779E <AmiBlitz3.ab3@10752>    BSR.w pokedata1
000277A2 <AmiBlitz3.ab3@10753>   MOVE.w $8(A3),D1
000277A6 <AmiBlitz3.ab3@10754>    BSR.w pokedata1
000277A8 <AmiBlitz3.ab3@10755>   ADDQ.w #1,D4
000277AA <AmiBlitz3.ab3@10758>   MOVEA.l (A2),A2
000277AE <AmiBlitz3.ab3@10759>  BRA.w 'loopb
000277B0 <AmiBlitz3.ab3@10763>    TST.w D4
000277B4 <AmiBlitz3.ab3@10764>    BEQ.w calcstatic2_skip
000277B8 <AmiBlitz3.ab3@10765>   MOVE.w #$FF37,D1      ;#65335
000277BC <AmiBlitz3.ab3@10766>    BSR.w uselib         ;use statics lib                                   ;use statics lib
000277C0 <AmiBlitz3.ab3@10767>   MOVE.w #$FFFA,D1      ;use memlib                                   ;use memlib
000277C4 <AmiBlitz3.ab3@10768> BRA.w uselib
000277C6 <AmiBlitz3.ab3@10771> RTS
000277CC <AmiBlitz3.ab3@10775>   MOVE.w numtoa2,D1
000277D0 <AmiBlitz3.ab3@10776>    BSR.w writeword
000277D4 <AmiBlitz3.ab3@10777>    BSR.w addoff
000277D6 <AmiBlitz3.ab3@10778>   MOVE.l D3,D1
000277DA <AmiBlitz3.ab3@10779>    BSR.w writelong
000277DC <AmiBlitz3.ab3@10780>   SUBQ.w #1,D4
000277E2 <AmiBlitz3.ab3@10781>   MOVE.w D4,endarray+2
000277E8 <AmiBlitz3.ab3@10782>   MOVE.l endarray,D1
000277EC <AmiBlitz3.ab3@10783> BRA.w writelong
000277EE <AmiBlitz3.ab3@10787>   MOVE.l D3,-(A7)
000277F4 <AmiBlitz3.ab3@10790>   MOVEA.l _dosbase,A6
000277F8 <AmiBlitz3.ab3@10792>   JSR _Write(a6)
000277FA <AmiBlitz3.ab3@10793>   CMP.l (A7)+,D0
000277FE <AmiBlitz3.ab3@10794>    BNE.w 'skip
00027800 <AmiBlitz3.ab3@10795>  RTS
00027802 <AmiBlitz3.ab3@10798>   MOVE.l D7,D1
00027808 <AmiBlitz3.ab3@10801>   MOVEA.l _dosbase,A6
0002780C <AmiBlitz3.ab3@10803>   JSR _Close(a6)
00027812 <AmiBlitz3.ab3@10806> JMP error_create_exe
00027818 <AmiBlitz3.ab3@10814> 
0002781E <AmiBlitz3.ab3@10815>   MOVE.l A7,errstack
00027822 <AmiBlitz3.ab3@10816>   MOVEM.l d2-d7/a2-a6,-(a7)
0002782C <AmiBlitz3.ab3@10817>   MOVE.l #AL_0_7790,errcont
00027832 <AmiBlitz3.ab3@10818>    JSR call_setpointerbusy
0002783A <AmiBlitz3.ab3@10819>   MOVE.w #$FFFF,anyerrs
00027844 <AmiBlitz3.ab3@10820>   CMP.l #-1,chipstart
00027848 <AmiBlitz3.ab3@10821>   BEQ 'l01
0002784E <AmiBlitz3.ab3@10822>   MOVE.l chipend,d1
00027850 <AmiBlitz3.ab3@10823>   ADDQ.l #3,d1
00027856 <AmiBlitz3.ab3@10824>   AND.l #$fffffffc,d1                                      ;bug
0002785C <AmiBlitz3.ab3@10825>   MOVE.l d1,chipend
0002785E <AmiBlitz3.ab3@10826>   MOVE.l d1,a1
00027864 <AmiBlitz3.ab3@10827>   MOVE.l chipstart,a0
00027866 <AmiBlitz3.ab3@10828>   MOVE.l a1,d1
00027868 <AmiBlitz3.ab3@10829>   SUB.l a0,d1
0002786E <AmiBlitz3.ab3@10830>   MOVE.l d1,chipsize
00027878 <AmiBlitz3.ab3@10833>   CMP.l #-1,bssstart
0002787C <AmiBlitz3.ab3@10834>   BEQ 'l11
00027882 <AmiBlitz3.ab3@10835>   MOVE.l realbssend,a1
00027888 <AmiBlitz3.ab3@10836>   MOVE.l bssstart,a0
0002788A <AmiBlitz3.ab3@10837>   MOVE.l a1,d1
0002788C <AmiBlitz3.ab3@10838>   SUB.l a0,d1
00027892 <AmiBlitz3.ab3@10839>   MOVE.l d1,bsssize
00027896 <AmiBlitz3.ab3@10840>   BEQ 'l11
00027898 <AmiBlitz3.ab3@10843>   TST.b (a0)+
0002789C <AmiBlitz3.ab3@10844>   BEQ 'l31
000278A2 <AmiBlitz3.ab3@10845>   TST.b debugmode
000278A6 <AmiBlitz3.ab3@10846>   BEQ 'l1
000278AC <AmiBlitz3.ab3@10847>   TST.b exdebug
000278B0 <AmiBlitz3.ab3@10848>   BNE 'l31
000278B6 <AmiBlitz3.ab3@10851>   MOVE.l #nodata,-(a7)
000278BC <AmiBlitz3.ab3@10852> JMP handle_compileerror
000278BE <AmiBlitz3.ab3@10855>   CMP.l a0,a1
000278C2 <AmiBlitz3.ab3@10856>   BGT 'l32
000278C8 <AmiBlitz3.ab3@10857>   MOVE.l bssend,d1
000278CA <AmiBlitz3.ab3@10858>   ADDQ.l #3,d1
000278D0 <AmiBlitz3.ab3@10859>   AND.l #$fffffffc,d1                                      ;bug
000278D6 <AmiBlitz3.ab3@10860>   MOVE.l d1,bssend
000278D8 <AmiBlitz3.ab3@10861>   MOVE.l d1,a1
000278DE <AmiBlitz3.ab3@10862>   MOVE.l bssstart,a0
000278E0 <AmiBlitz3.ab3@10863>   MOVE.l a1,d1
000278E2 <AmiBlitz3.ab3@10864>   SUB.l a0,d1
000278E8 <AmiBlitz3.ab3@10865>   MOVE.l d1,bsssize
000278EC <AmiBlitz3.ab3@10868>   MOVEM.l d5-d7/d3,-(a7)
000278F2 <AmiBlitz3.ab3@10869>   MOVE.w dontwrite,D1
000278F6 <AmiBlitz3.ab3@10870>   BNE.w JL_0_757C
000278FC <AmiBlitz3.ab3@10871>   MOVE.l chipsize,d5
00027902 <AmiBlitz3.ab3@10872>   MOVE.l bsssize,d3
00027908 <AmiBlitz3.ab3@10873>   MOVE.l chipstart,d7
0002790E <AmiBlitz3.ab3@10874>   MOVE.l bssstart,d6
00027914 <AmiBlitz3.ab3@10875>   MOVEA.l hunkoffsetbase,A2
0002791A <AmiBlitz3.ab3@10876>   MOVEA.l destbufferstart,A1
0002791C <AmiBlitz3.ab3@10877>   MOVE.l A1,D2
00027922 <AmiBlitz3.ab3@10878>   ADD.l noinits,D2
00027928 <AmiBlitz3.ab3@10879>   CLR.l hunkoffsetnum
0002792C <AmiBlitz3.ab3@10882>   CMPA.w #$0,A2
00027930 <AmiBlitz3.ab3@10883>    BEQ.w JL_0_757C
00027934 <AmiBlitz3.ab3@10884>   MOVE.l $4(A2),D0
00027938 <AmiBlitz3.ab3@10885>    LEA $0(a1,d0.l),a0
0002793A <AmiBlitz3.ab3@10886>    MOVE.l (a0),d1
0002793C <AmiBlitz3.ab3@10887>   TST.l d1
00027940 <AmiBlitz3.ab3@10888>    BMI.w 'lm1
00027948 <AmiBlitz3.ab3@10889>   MOVE.b #0,newhunk
00027952 <AmiBlitz3.ab3@10890>   CMP.l #-1,chipstart
00027956 <AmiBlitz3.ab3@10891>   BEQ 'l10
0002795C <AmiBlitz3.ab3@10892>   CMP.l chipstart,d1
00027960 <AmiBlitz3.ab3@10893>   BLT 'l10
00027968 <AmiBlitz3.ab3@10894>   MOVE.b #1,newhunk
0002796E <AmiBlitz3.ab3@10895>   CMP.l chipend,d1
00027972 <AmiBlitz3.ab3@10896>   BGE 'l110
00027974 <AmiBlitz3.ab3@10897>   SUB.l d7,(a0)
0002797C <AmiBlitz3.ab3@10898>   ADD.l #$80000000,4(a2)
00027980 <AmiBlitz3.ab3@10899> BRA JL_0_7576
00027984 <AmiBlitz3.ab3@10902>   SUB.l d5,0(a0)
0002798E <AmiBlitz3.ab3@10905>   CMP.l #-1,bssstart
00027992 <AmiBlitz3.ab3@10906>     BEQ 'l11
00027998 <AmiBlitz3.ab3@10907>   CMP.l bssstart,d1
0002799C <AmiBlitz3.ab3@10908>   BLT 'l11
000279A2 <AmiBlitz3.ab3@10909>   CMP.l bssend,d1
000279A6 <AmiBlitz3.ab3@10910>   BGE 'l111
000279AC <AmiBlitz3.ab3@10911>   TST.b newhunk
000279B0 <AmiBlitz3.ab3@10912>   BEQ 'ln1
000279B2 <AmiBlitz3.ab3@10913>   ADD.l d5,(a0)
000279B4 <AmiBlitz3.ab3@10916>   SUB.l d6,(a0)
000279BC <AmiBlitz3.ab3@10917>   ADD.l #$40000000,4(a2)
000279C0 <AmiBlitz3.ab3@10918> BRA JL_0_7576
000279C4 <AmiBlitz3.ab3@10921>   SUB.l d3,0(a0)
000279C6 <AmiBlitz3.ab3@10924>   SUB.l D2,(A0)
000279CC <AmiBlitz3.ab3@10927>   ADDQ.l #1,hunkoffsetnum
000279CE <AmiBlitz3.ab3@10930>    MOVEA.l (A2),A2
000279D2 <AmiBlitz3.ab3@10931> BRA.w JL_0_755E
000279D6 <AmiBlitz3.ab3@10935>   MOVEM.l (a7)+,d5-d7/d3
000279DC <AmiBlitz3.ab3@10936>   MOVE.l ptr_newexefilename,D1
000279E2 <AmiBlitz3.ab3@10937>   MOVE.l #HUNK_RELOC_8__MODE_NEWFILE,D2
000279E8 <AmiBlitz3.ab3@10938>   MOVEA.l _dosbase,A6
000279EC <AmiBlitz3.ab3@10939>    JSR _Open(A6)
000279EE <AmiBlitz3.ab3@10940>   MOVE.l D0,D7
000279F2 <AmiBlitz3.ab3@10941>    BEQ.w execerr
000279F8 <AmiBlitz3.ab3@10942>   MOVE.l objlen,D0
000279FE <AmiBlitz3.ab3@10943>   SUB.l #moremem,d0
00027A04 <AmiBlitz3.ab3@10944>   SUB.l noinits,D0
00027A0E <AmiBlitz3.ab3@10945>   CMP.l #-1,bssstart
00027A12 <AmiBlitz3.ab3@10946>   BEQ 'l60
00027A18 <AmiBlitz3.ab3@10947>   SUB.l bsssize,d0
00027A1E <AmiBlitz3.ab3@10948>   SUB.l chipsize,d0
00027A22 <AmiBlitz3.ab3@10949> BRA.s 'l61
00027A2C <AmiBlitz3.ab3@10952>   CMP.l #-1,chipstart
00027A30 <AmiBlitz3.ab3@10953>   BEQ 'l61
00027A36 <AmiBlitz3.ab3@10954>   SUB.l bsssize,d0
00027A3C <AmiBlitz3.ab3@10955>   SUB.l chipsize,d0
00027A3E <AmiBlitz3.ab3@10958>   ADDQ.l #3,D0
00027A40 <AmiBlitz3.ab3@10959>   LSR.l #2,D0
00027A46 <AmiBlitz3.ab3@10960>   MOVE.l D0,tstsize1
00027A4C <AmiBlitz3.ab3@10961>   MOVE.l D0,tstsize2
00027A4E <AmiBlitz3.ab3@10962>   MOVE.l D7,D1
00027A54 <AmiBlitz3.ab3@10963>   MOVE.l #tsthead,D2                                      ;hunkbegin
00027A56 <AmiBlitz3.ab3@10964>   MOVEQ.l #$20,D3
00027A60 <AmiBlitz3.ab3@10965>   CMP.l #-1,bssstart
00027A64 <AmiBlitz3.ab3@10966>   BEQ 'lb1
00027A6E <AmiBlitz3.ab3@10967>   CMP.l #-1,chipstart
00027A72 <AmiBlitz3.ab3@10968>   BEQ 'lb1
00027A7C <AmiBlitz3.ab3@10969>   MOVE.l #1,bssnum
00027A86 <AmiBlitz3.ab3@10970>   MOVE.l #2,chipnum
00027A88 <AmiBlitz3.ab3@10971>   MOVEQ.l #$28,D3
00027A8E <AmiBlitz3.ab3@10972>   MOVE.l bsssize,d2
00027A90 <AmiBlitz3.ab3@10973>   ADDQ.l #3,d2
00027A92 <AmiBlitz3.ab3@10974>   ASR.l #2,d2
00027A98 <AmiBlitz3.ab3@10975>   MOVE.l d2,hunkend+8
00027A9E <AmiBlitz3.ab3@10976>   MOVE.l d2,bsssize3
00027AA4 <AmiBlitz3.ab3@10977>   MOVE.l chipsize,d2
00027AA6 <AmiBlitz3.ab3@10978>   ADDQ.l #3,d2
00027AA8 <AmiBlitz3.ab3@10979>   ASR.l #2,d2
00027AAE <AmiBlitz3.ab3@10980>   MOVE.l d2,chipsize2
00027AB8 <AmiBlitz3.ab3@10981>   ADD.l #$40000000,chipsize2
00027ABE <AmiBlitz3.ab3@10982>   MOVE.l d2,hunkend2+8
00027AC4 <AmiBlitz3.ab3@10983>   MOVE.l D0,tstsize1c
00027ACA <AmiBlitz3.ab3@10984>   MOVE.l D0,tstsize2c
00027AD0 <AmiBlitz3.ab3@10985>   MOVE.l #hunkbegin2,d2
00027AD4 <AmiBlitz3.ab3@10986> BRA 'l100
00027ADE <AmiBlitz3.ab3@10989>   CMP.l #-1,bssstart
00027AE2 <AmiBlitz3.ab3@10990>   BEQ 'l10
00027AEC <AmiBlitz3.ab3@10991>   MOVE.l #1,bssnum
00027AEE <AmiBlitz3.ab3@10992>   MOVEQ.l #$24,D3
00027AF4 <AmiBlitz3.ab3@10993>   MOVE.l bsssize,d2
00027AF6 <AmiBlitz3.ab3@10994>   ADDQ.l #3,d2
00027AF8 <AmiBlitz3.ab3@10995>   ASR.l #2,d2
00027AFE <AmiBlitz3.ab3@10996>   MOVE.l d2,hunkend+8
00027B04 <AmiBlitz3.ab3@10997>   MOVE.l d2,bsssize2
00027B0A <AmiBlitz3.ab3@10998>   MOVE.l D0,tstsize1b
00027B10 <AmiBlitz3.ab3@10999>   MOVE.l D0,tstsize2b
00027B16 <AmiBlitz3.ab3@11000>   MOVE.l #hunkbegin,d2
00027B20 <AmiBlitz3.ab3@11003>   CMP.l #-1,chipstart
00027B24 <AmiBlitz3.ab3@11004>   BEQ 'l100
00027B2E <AmiBlitz3.ab3@11005>   MOVE.l #1,chipnum
00027B30 <AmiBlitz3.ab3@11006>   MOVEQ.l #$24,D3
00027B36 <AmiBlitz3.ab3@11007>   MOVE.l chipsize,d2
00027B38 <AmiBlitz3.ab3@11008>   ADDQ.l #3,d2
00027B3A <AmiBlitz3.ab3@11009>   ASR.l #2,d2
00027B40 <AmiBlitz3.ab3@11010>   MOVE.l d2,hunkend2+8
00027B46 <AmiBlitz3.ab3@11011>   MOVE.l d2,bsssize2
00027B50 <AmiBlitz3.ab3@11012>   ADD.l #$40000000,bsssize2
00027B56 <AmiBlitz3.ab3@11013>   MOVE.l D0,tstsize1b
00027B5C <AmiBlitz3.ab3@11014>   MOVE.l D0,tstsize2b
00027B62 <AmiBlitz3.ab3@11015>   MOVE.l #hunkbegin,d2
00027B66 <AmiBlitz3.ab3@11018>    BSR.w mywrite
00027B6C <AmiBlitz3.ab3@11019>   MOVE.l destbufferstart,D2
00027B72 <AmiBlitz3.ab3@11020>   ADD.l noinits,D2
00027B78 <AmiBlitz3.ab3@11021>   MOVE.l objlen,D3
00027B7E <AmiBlitz3.ab3@11022>   SUB.l #moremem,d3
00027B84 <AmiBlitz3.ab3@11023>   SUB.l noinits,D3
00027B8E <AmiBlitz3.ab3@11024>   CMP.l #-1,bssstart
00027B92 <AmiBlitz3.ab3@11025>   BNE 'l40
00027B9C <AmiBlitz3.ab3@11026>   CMP.l #-1,chipstart
00027BA0 <AmiBlitz3.ab3@11027>   BNE 'l40
00027BA4 <AmiBlitz3.ab3@11028> BRA 'l41
00027BAA <AmiBlitz3.ab3@11031>   MOVE.l codeend,d1
00027BAC <AmiBlitz3.ab3@11032>     SUB.l d2,d1
00027BAE <AmiBlitz3.ab3@11033>     MOVE.l d1,d3
00027BB4 <AmiBlitz3.ab3@11034>   SUB.l bsssize,d3
00027BBA <AmiBlitz3.ab3@11035>   SUB.l chipsize,d3
00027BBC <AmiBlitz3.ab3@11036>   MOVE.l D7,D1
00027BC0 <AmiBlitz3.ab3@11037>   BSR.w mywrite
00027BC6 <AmiBlitz3.ab3@11038>   MOVE.l objlen,D3
00027BCC <AmiBlitz3.ab3@11039>   SUB.l #moremem,d3
00027BD2 <AmiBlitz3.ab3@11040>   SUB.l noinits,D3
00027BD4 <AmiBlitz3.ab3@11041>   MOVE.l d3,d1
00027BDA <AmiBlitz3.ab3@11042>   MOVE.l destbufferstart,D2
00027BE0 <AmiBlitz3.ab3@11043>   ADD.l noinits,D2
00027BE2 <AmiBlitz3.ab3@11044>   ADD.l d2,d1
00027BE8 <AmiBlitz3.ab3@11045>   SUB.l codeend,d1
00027BEA <AmiBlitz3.ab3@11046>   MOVE.l d1,d3
00027BF0 <AmiBlitz3.ab3@11047>   MOVE.l codeend,d2
00027BF2 <AmiBlitz3.ab3@11050>   MOVE.l d2,d1
00027BF4 <AmiBlitz3.ab3@11051>   ADD.l d3,d1
00027BF6 <AmiBlitz3.ab3@11052>   ADDQ.l #3,D1
00027BFC <AmiBlitz3.ab3@11053>   ANDI.l #$FFFFFFFC,D1
00027BFE <AmiBlitz3.ab3@11054>   SUB.l d2,d1
00027C00 <AmiBlitz3.ab3@11055>   MOVE.l d1,d3
00027C02 <AmiBlitz3.ab3@11056>   MOVE.l D7,D1
00027C06 <AmiBlitz3.ab3@11057>    BSR.w mywrite
00027C10 <AmiBlitz3.ab3@11058>   MOVE.l hunkoffsetcounter,tstsize3
00027C14 <AmiBlitz3.ab3@11059>    BEQ.w JL_0_7646
00027C16 <AmiBlitz3.ab3@11060>   MOVE.l D7,D1
00027C1C <AmiBlitz3.ab3@11061>   MOVE.l #tstend,D2
00027C1E <AmiBlitz3.ab3@11062>   MOVEQ.l #$04,D3
00027C22 <AmiBlitz3.ab3@11063>    BSR.w mywrite
00027C28 <AmiBlitz3.ab3@11064>    MOVEA.l _execbase,A6
00027C2E <AmiBlitz3.ab3@11065>    MOVE.l hunkoffsetcounter,d0
00027C30 <AmiBlitz3.ab3@11066>    ASL.l #2,d0
00027C36 <AmiBlitz3.ab3@11067>    ADD.l #12,d0
00027C38 <AmiBlitz3.ab3@11068>    MOVEQ #0,d1
00027C3C <AmiBlitz3.ab3@11069>    JSR _AllocMem(a6)
00027C3E <AmiBlitz3.ab3@11070>    TST.l d0
00027C42 <AmiBlitz3.ab3@11071>    BEQ nomem
00027C48 <AmiBlitz3.ab3@11072>    MOVE.l noinits,D4
00027C4A <AmiBlitz3.ab3@11073>    MOVE.l d5,-(a7)
00027C4C <AmiBlitz3.ab3@11074>    MOVE.l d0,d5
00027C4E <AmiBlitz3.ab3@11075>    MOVE.l d0,a1
00027C54 <AmiBlitz3.ab3@11076>    MOVEA.l hunkoffsetbase,A2
00027C5C <AmiBlitz3.ab3@11077>    MOVE.b #0,newhunk
00027C60 <AmiBlitz3.ab3@11080>   CMPA.w #$0,A2
00027C64 <AmiBlitz3.ab3@11081>    BEQ.w savehunk
00027C6A <AmiBlitz3.ab3@11082>   MOVE.l destbufferstart,D2
00027C70 <AmiBlitz3.ab3@11083>   ADD.l noinits,D2
00027C74 <AmiBlitz3.ab3@11084>   MOVE.l  $4(A2),d1
00027C78 <AmiBlitz3.ab3@11085>   BTST #31,d1
00027C7C <AmiBlitz3.ab3@11086>   BEQ 'lh1
00027C84 <AmiBlitz3.ab3@11087>   MOVE.b #1,newhunk
00027C88 <AmiBlitz3.ab3@11088> BRA 'lh3
00027C8C <AmiBlitz3.ab3@11091>   BTST #30,d1
00027C90 <AmiBlitz3.ab3@11092>   BEQ 'lh2
00027C98 <AmiBlitz3.ab3@11093>   MOVE.b #1,newhunk
00027C9C <AmiBlitz3.ab3@11094> BRA 'lh3
00027C9E <AmiBlitz3.ab3@11097>   ADD.l d1,d2
00027CA4 <AmiBlitz3.ab3@11098>   CMP.l chipend,d2
00027CA8 <AmiBlitz3.ab3@11099>   BLT 'l102
00027CAE <AmiBlitz3.ab3@11100>   SUB.l chipsize,d1
00027CB4 <AmiBlitz3.ab3@11103>   CMP.l bssend,d2
00027CB8 <AmiBlitz3.ab3@11104>   BLT 'l101
00027CBE <AmiBlitz3.ab3@11105>   SUB.l bsssize,d1
00027CC0 <AmiBlitz3.ab3@11108>   MOVE.l d1,(a1)
00027CC2 <AmiBlitz3.ab3@11109>   SUB.l D4,(A1)+
00027CC4 <AmiBlitz3.ab3@11112>   MOVEA.l (A2),A2
00027CC8 <AmiBlitz3.ab3@11113> BRA.w 'oloopb
00027CCA <AmiBlitz3.ab3@11117>   MOVE.l D7,D1
00027CD0 <AmiBlitz3.ab3@11118>   MOVEA.l _dosbase,A6
00027CDA <AmiBlitz3.ab3@11119>   MOVE.l hunkoffsetnum,tstsize3
00027CDE <AmiBlitz3.ab3@11120>   BEQ 'ln1
00027CE4 <AmiBlitz3.ab3@11121>   MOVE.l #tstend+4,d2
00027CE6 <AmiBlitz3.ab3@11122>     MOVEQ #8,d3
00027CEA <AmiBlitz3.ab3@11123>    JSR _Write(A6)
00027CEC <AmiBlitz3.ab3@11124>   MOVE.l d7,d1
00027CF2 <AmiBlitz3.ab3@11125>   MOVE.l hunkoffsetnum,d3
00027CF4 <AmiBlitz3.ab3@11126>   ASL.l #2,d3
00027CF6 <AmiBlitz3.ab3@11127>   MOVE.l d5,D2
00027CFA <AmiBlitz3.ab3@11128>   JSR _Write(a6)
00027D00 <AmiBlitz3.ab3@11131>   TST.b newhunk
00027D04 <AmiBlitz3.ab3@11132>   BEQ 'l10
00027D0A <AmiBlitz3.ab3@11133>   MOVEA.l hunkoffsetbase,A2
00027D0C <AmiBlitz3.ab3@11134>   MOVE.l d5,a0
00027D0E <AmiBlitz3.ab3@11135>   ADDQ #8,a0
00027D16 <AmiBlitz3.ab3@11136>   MOVE.l bssnum,-4(a0)
00027D18 <AmiBlitz3.ab3@11137>   MOVEQ #0,d6
00027D1C <AmiBlitz3.ab3@11140>   CMPA.w #$0,A2
00027D20 <AmiBlitz3.ab3@11141>    BEQ.w 'lh3
00027D26 <AmiBlitz3.ab3@11142>   MOVE.l destbufferstart,D2
00027D2C <AmiBlitz3.ab3@11143>   ADD.l noinits,D2
00027D30 <AmiBlitz3.ab3@11144>   MOVE.l  $4(A2),d1
00027D34 <AmiBlitz3.ab3@11145>   BTST #30,d1
00027D38 <AmiBlitz3.ab3@11146>   BEQ 'lh1
00027D3C <AmiBlitz3.ab3@11147>   BCLR #30,d1
00027D3E <AmiBlitz3.ab3@11148>   MOVE.l d1,(a0)
00027D40 <AmiBlitz3.ab3@11149>   SUB.l D4,(A0)+
00027D42 <AmiBlitz3.ab3@11150>   ADDQ.l #1,d6
00027D44 <AmiBlitz3.ab3@11153>   MOVE.l (a2),a2
00027D48 <AmiBlitz3.ab3@11154> BRA 'lh2
00027D4A <AmiBlitz3.ab3@11157>   TST.l d6
00027D4E <AmiBlitz3.ab3@11158>     BEQ 'lh10
00027D50 <AmiBlitz3.ab3@11159>     MOVE.l d5,a0
00027D52 <AmiBlitz3.ab3@11160>     MOVE.l d6,(a0)
00027D54 <AmiBlitz3.ab3@11161>     MOVE.l d7,d1
00027D56 <AmiBlitz3.ab3@11162>     MOVE.l d5,d2
00027D58 <AmiBlitz3.ab3@11163>     MOVE.l d6,d3
00027D5A <AmiBlitz3.ab3@11164>     ASL.l #2,d3
00027D5C <AmiBlitz3.ab3@11165>     ADDQ.l #8,d3
00027D60 <AmiBlitz3.ab3@11166>     BSR.w mywrite
00027D66 <AmiBlitz3.ab3@11169>   MOVEA.l hunkoffsetbase,A2
00027D68 <AmiBlitz3.ab3@11170>   MOVE.l d5,a0
00027D6A <AmiBlitz3.ab3@11171>   ADDQ #8,a0
00027D72 <AmiBlitz3.ab3@11172>   MOVE.l chipnum,-4(a0)
00027D74 <AmiBlitz3.ab3@11173>   MOVEQ #0,d6
00027D78 <AmiBlitz3.ab3@11176>   CMPA.w #$0,A2
00027D7C <AmiBlitz3.ab3@11177>    BEQ.w 'lh30
00027D82 <AmiBlitz3.ab3@11178>   MOVE.l destbufferstart,D2
00027D88 <AmiBlitz3.ab3@11179>   ADD.l noinits,D2
00027D8C <AmiBlitz3.ab3@11180>   MOVE.l  $4(A2),d1
00027D90 <AmiBlitz3.ab3@11181>   BTST #31,d1
00027D94 <AmiBlitz3.ab3@11182>   BEQ 'lh11
00027D98 <AmiBlitz3.ab3@11183>   BCLR #31,d1
00027D9A <AmiBlitz3.ab3@11184>   MOVE.l d1,(a0)
00027D9C <AmiBlitz3.ab3@11185>   SUB.l D4,(A0)+
00027D9E <AmiBlitz3.ab3@11186>   ADDQ.l #1,d6
00027DA0 <AmiBlitz3.ab3@11189>   MOVE.l (a2),a2
00027DA4 <AmiBlitz3.ab3@11190> BRA 'lh20
00027DA6 <AmiBlitz3.ab3@11193>   TST.l d6
00027DAA <AmiBlitz3.ab3@11194>     BEQ 'l10
00027DAC <AmiBlitz3.ab3@11195>     MOVE.l d5,a0
00027DAE <AmiBlitz3.ab3@11196>     MOVE.l d6,(a0)
00027DB0 <AmiBlitz3.ab3@11197>     MOVE.l d7,d1
00027DB2 <AmiBlitz3.ab3@11198>     MOVE.l d5,d2
00027DB4 <AmiBlitz3.ab3@11199>     MOVE.l d6,d3
00027DB6 <AmiBlitz3.ab3@11200>     ASL.l #2,d3
00027DB8 <AmiBlitz3.ab3@11201>     ADDQ.l #8,d3
00027DBC <AmiBlitz3.ab3@11202>     BSR.w mywrite
00027DC2 <AmiBlitz3.ab3@11206>    MOVEA.l _execbase,A6
00027DC8 <AmiBlitz3.ab3@11207>    MOVE.l hunkoffsetcounter,d0
00027DCA <AmiBlitz3.ab3@11208>    ASL.l #2,d0
00027DD0 <AmiBlitz3.ab3@11209>    ADD.l #12,d0
00027DD2 <AmiBlitz3.ab3@11210>    MOVE.l d5,a1
00027DD6 <AmiBlitz3.ab3@11211>    JSR _FreeMem(a6)
00027DDC <AmiBlitz3.ab3@11212>    MOVEA.l _dosbase,A6
00027DDE <AmiBlitz3.ab3@11213>    MOVE.l (a7)+,d5
00027DE2 <AmiBlitz3.ab3@11214> BRA JL_0_7632
00027DE8 <AmiBlitz3.ab3@11218>   MOVEA.l hunkoffsetbase,A2
00027DEE <AmiBlitz3.ab3@11219>   MOVE.l noinits,D4
00027DF2 <AmiBlitz3.ab3@11222>   CMPA.w #$0,A2                                            ;write hunkoffsets
00027DF6 <AmiBlitz3.ab3@11223>   BEQ.w JL_0_7632
00027DFA <AmiBlitz3.ab3@11224>   LEA $4(A2),A1
00027DFC <AmiBlitz3.ab3@11225>   SUB.l D4,(A1)
00027DFE <AmiBlitz3.ab3@11226>   MOVE.l D7,D1
00027E00 <AmiBlitz3.ab3@11227>   MOVE.l A1,D2
00027E02 <AmiBlitz3.ab3@11228>   MOVEQ.l #$04,D3
00027E06 <AmiBlitz3.ab3@11229>   BSR.w mywrite
00027E0A <AmiBlitz3.ab3@11230>   ADD.l D4,$4(A2)
00027E0C <AmiBlitz3.ab3@11231>   MOVEA.l (A2),A2
00027E10 <AmiBlitz3.ab3@11232> BRA.w JL_0_7610
00027E16 <AmiBlitz3.ab3@11235>   CLR.l tstsize3
00027E18 <AmiBlitz3.ab3@11236>   MOVE.l D7,D1
00027E1E <AmiBlitz3.ab3@11237>   MOVE.l #tstsize3,D2
00027E20 <AmiBlitz3.ab3@11238>   MOVEQ.l #$04,D3
00027E24 <AmiBlitz3.ab3@11239>    BSR.w mywrite
00027E2C <AmiBlitz3.ab3@11242>   BTST #$7,link_debuginfo
00027E30 <AmiBlitz3.ab3@11243>    BEQ.w JL_0_7706
00027E36 <AmiBlitz3.ab3@11244>   MOVE.l #sysdebug,D2                                      ;debughunks
00027E38 <AmiBlitz3.ab3@11245>   MOVEQ.l #$04,D3
00027E3A <AmiBlitz3.ab3@11246>   MOVE.l D7,D1
00027E3E <AmiBlitz3.ab3@11247>    BSR.w mywrite
00027E44 <AmiBlitz3.ab3@11248>   MOVEA.l labelbase,A2
00027E48 <AmiBlitz3.ab3@11251>   CMPA.w #$0,A2
00027E4C <AmiBlitz3.ab3@11252>    BEQ.w JL_0_76F8
00027E52 <AmiBlitz3.ab3@11253>   BTST #$0,$7(A2)
00027E56 <AmiBlitz3.ab3@11254>    BEQ.w JL_0_7682
00027E5E <AmiBlitz3.ab3@11255>   CMPI.l #$1,$4(A2)
00027E62 <AmiBlitz3.ab3@11257>   BRA.w JL_0_76F2                                            ;only addr labels
00027E64 <AmiBlitz3.ab3@11259>   MOVEQ.l #$00,D4
00027E68 <AmiBlitz3.ab3@11260>   MOVE.b $12(A2),D4
00027E6C <AmiBlitz3.ab3@11261>   SUBI.w #$13,D4
00027E6E <AmiBlitz3.ab3@11262>   ADDQ.w #2,D4
00027E72 <AmiBlitz3.ab3@11263>   ANDI.w #$FFFC,D4
00027E74 <AmiBlitz3.ab3@11264>   MOVE.l D4,D5
00027E76 <AmiBlitz3.ab3@11265>   LSR.w #2,D5
00027E7C <AmiBlitz3.ab3@11266>   MOVE.l D5,temp1
00027E7E <AmiBlitz3.ab3@11267>   LSL.w #2,D5
00027E84 <AmiBlitz3.ab3@11268>   MOVE.l #temp1,a1
00027E8A <AmiBlitz3.ab3@11270>   LEA debugstore,a0
00027E8C <AmiBlitz3.ab3@11271>   MOVE.l (a1),(a0)+
00027E8E <AmiBlitz3.ab3@11272>   MOVEQ.l #$04,D3
00027E92 <AmiBlitz3.ab3@11275>   LEA $13(A2),A1
00027E94 <AmiBlitz3.ab3@11276>   MOVE.l d4,d1
00027E96 <AmiBlitz3.ab3@11277>   SUBQ.l #1,d1
00027E98 <AmiBlitz3.ab3@11280>     MOVE.b (a1)+,d0
00027E9C <AmiBlitz3.ab3@11281>     BEQ 'l21
00027EA0 <AmiBlitz3.ab3@11282>     CMP.b #"'",d0                                            ; ' does reassembler/assembler not like, so replace
00027EA4 <AmiBlitz3.ab3@11283>     BNE 'ok
00027EA8 <AmiBlitz3.ab3@11284>     MOVE.b #"_",d0
00027EAA <AmiBlitz3.ab3@11285> 'ok    MOVE.b d0,(a0)+                                      ; copy labeltext to debuginfo
00027EAE <AmiBlitz3.ab3@11286>   DBF d1,'l10
00027EB2 <AmiBlitz3.ab3@11288> BRA 'l22
00027EB4 <AmiBlitz3.ab3@11291>       CLR.b (a0)+
00027EB8 <AmiBlitz3.ab3@11292>   DBF d1,'l21
00027EBA <AmiBlitz3.ab3@11295>   ADD.l d4,d3
00027EBC <AmiBlitz3.ab3@11300>   SUB.l D4,D5
00027EC0 <AmiBlitz3.ab3@11301>    BEQ.w JL_0_76CE
00027EC6 <AmiBlitz3.ab3@11302>   MOVE.l #zero,a1
00027EC8 <AmiBlitz3.ab3@11304>   MOVE.l (a1),(a0)+
00027ECA <AmiBlitz3.ab3@11306>   ADD.l d5,d3
00027ECE <AmiBlitz3.ab3@11311>   MOVE.l $8(A2),D2
00027ED4 <AmiBlitz3.ab3@11312>   SUB.l destbufferstart,D2
00027EDA <AmiBlitz3.ab3@11313>   SUB.l noinits,D2
00027EE0 <AmiBlitz3.ab3@11314>   MOVE.l D2,temp1
00027EE6 <AmiBlitz3.ab3@11315>   MOVE.l #temp1,a1
00027EE8 <AmiBlitz3.ab3@11317>   MOVE.l (a1),(a0)+
00027EEE <AmiBlitz3.ab3@11318>   ADD.l #4,d3
00027EF4 <AmiBlitz3.ab3@11319>   LEA debugstore,a0
00027EF6 <AmiBlitz3.ab3@11320>   MOVE.l a0,d2
00027EF8 <AmiBlitz3.ab3@11322>   MOVE.l D7,D1
00027EFC <AmiBlitz3.ab3@11323>   BSR.w mywrite
00027EFE <AmiBlitz3.ab3@11326>   MOVEA.l (A2),A2
00027F02 <AmiBlitz3.ab3@11327> BRA.w JL_0_7664
00027F08 <AmiBlitz3.ab3@11331>   MOVE.l #zero,D2
00027F0A <AmiBlitz3.ab3@11332>   MOVEQ.l #$04,D3
00027F0C <AmiBlitz3.ab3@11333>   MOVE.l D7,D1
00027F10 <AmiBlitz3.ab3@11334>   BSR.w mywrite
00027F12 <AmiBlitz3.ab3@11337>   MOVE.l D7,D1
00027F18 <AmiBlitz3.ab3@11338>   MOVE.l #tstdone,D2                                      ;hunkend
00027F1A <AmiBlitz3.ab3@11339>   MOVEQ.l #$04,D3
00027F24 <AmiBlitz3.ab3@11340>   CMPI.l #-1,bssstart
00027F28 <AmiBlitz3.ab3@11341>   BEQ 'l10
00027F2A <AmiBlitz3.ab3@11342>   MOVEQ #16,d3
00027F30 <AmiBlitz3.ab3@11343>   MOVE.l #hunkend,d2
00027F3A <AmiBlitz3.ab3@11344>   CMPI.l #-1,chipstart
00027F3E <AmiBlitz3.ab3@11345>   BEQ 'l10
00027F40 <AmiBlitz3.ab3@11346>   MOVE.l d7,d1
00027F42 <AmiBlitz3.ab3@11347>   MOVEQ #12,d3
00027F46 <AmiBlitz3.ab3@11348>   BSR.w mywrite
00027F50 <AmiBlitz3.ab3@11351>   CMPI.l #-1,chipstart
00027F54 <AmiBlitz3.ab3@11352>   BEQ 'l11
00027F56 <AmiBlitz3.ab3@11353>   MOVEQ #12,d3
00027F5C <AmiBlitz3.ab3@11354>   MOVE.l #hunkend2,d2
00027F5E <AmiBlitz3.ab3@11355>   MOVE.l d7,d1
00027F62 <AmiBlitz3.ab3@11356>   BSR.w mywrite
00027F64 <AmiBlitz3.ab3@11357>   MOVE.l d7,d1
00027F6A <AmiBlitz3.ab3@11358>   MOVE.l chipstart,d2
00027F70 <AmiBlitz3.ab3@11359>   MOVE.l chipsize,d3
00027F74 <AmiBlitz3.ab3@11360>   BSR.w mywrite
00027F76 <AmiBlitz3.ab3@11361>   MOVEQ #4,d3
00027F7C <AmiBlitz3.ab3@11362>   MOVE.l #hunkend,d2
00027F7E <AmiBlitz3.ab3@11363>   MOVE.l d7,d1
00027F82 <AmiBlitz3.ab3@11366>   BSR.w mywrite
00027F84 <AmiBlitz3.ab3@11367>   MOVE.l D7,D1
00027F8A <AmiBlitz3.ab3@11368>   MOVEA.l _dosbase,A6
00027F8E <AmiBlitz3.ab3@11369>   JSR _Close(A6)
00027F96 <AmiBlitz3.ab3@11374>   BTST #$7,create_iconfile
00027F9A <AmiBlitz3.ab3@11375>    BEQ.w skip_createicon
00027FA0 <AmiBlitz3.ab3@11377>   MOVEA.l ptr_newexefilename,A0
00027FA2 <AmiBlitz3.ab3@11380>     TST.b (A0)+
00027FA6 <AmiBlitz3.ab3@11381>   BNE.w JL_0_772C
00027FA8 <AmiBlitz3.ab3@11382>   SUBQ.w #1,A0
00027FAA <AmiBlitz3.ab3@11383>   MOVE.l A0,-(A7)
00027FB0 <AmiBlitz3.ab3@11384>   LEA str_infoextention2,A1
00027FB2 <AmiBlitz3.ab3@11387>     MOVE.b (A1)+,(A0)+
00027FB6 <AmiBlitz3.ab3@11388>   BNE.w JL_0_773A
00027FBC <AmiBlitz3.ab3@11390>   MOVE.l ptr_newexefilename,D1
00027FBE <AmiBlitz3.ab3@11391>   MOVEQ.l #-$02,D2
00027FC4 <AmiBlitz3.ab3@11392>   MOVEA.l _dosbase,A6
00027FC8 <AmiBlitz3.ab3@11393>   JSR _Lock(A6)
00027FCA <AmiBlitz3.ab3@11394>   MOVE.l D0,D1
00027FCE <AmiBlitz3.ab3@11395>   BEQ.w JL_0_775A                                          ;no icon exit so jump to create one  tomsmart1
00027FD2 <AmiBlitz3.ab3@11396>   JSR _UnLock(A6)                                          ;OH!! there is a Icon so we must Unlock it  tomsmart1
00027FD6 <AmiBlitz3.ab3@11397> BRA.w JL_0_7788                                            ;and skip writing a Icon  tomsmart1
00027FDC <AmiBlitz3.ab3@11400>   MOVE.l ptr_newexefilename,D1
00027FE2 <AmiBlitz3.ab3@11401>   MOVE.l #HUNK_RELOC_8__MODE_NEWFILE,D2
00027FE8 <AmiBlitz3.ab3@11402>   MOVEA.l _dosbase,A6
00027FEC <AmiBlitz3.ab3@11403>    JSR _Open(A6)
00027FEE <AmiBlitz3.ab3@11404>   MOVE.l D0,D7
00027FF2 <AmiBlitz3.ab3@11405>    BEQ.w JL_0_7788
00027FF8 <AmiBlitz3.ab3@11406>   MOVE.l #icongfx_data,D2                                  ; icon graphics
00027FFE <AmiBlitz3.ab3@11407>   MOVE.l #icongfx_data_end-icongfx_data,D3                 ; length of gfx-data
00028000 <AmiBlitz3.ab3@11408>   MOVE.l D7,D1
00028006 <AmiBlitz3.ab3@11409>   MOVEA.l _dosbase,A6
0002800A <AmiBlitz3.ab3@11410>   JSR _Write(A6)
0002800C <AmiBlitz3.ab3@11411>   MOVE.l D7,D1
00028010 <AmiBlitz3.ab3@11412>   JSR _Close(A6)
00028012 <AmiBlitz3.ab3@11415>   MOVEA.l (A7)+,A0
00028014 <AmiBlitz3.ab3@11416>   CLR.b (A0)
0002801A <AmiBlitz3.ab3@11421>   TST.b exdebug
0002801E <AmiBlitz3.ab3@11422>    BEQ JL_0_757Cb
00028024 <AmiBlitz3.ab3@11423>   MOVE.w dontwrite,D1
00028028 <AmiBlitz3.ab3@11424>   BNE.w JL_0_757Cb
0002802E <AmiBlitz3.ab3@11425>   MOVE.l chipsize,d5
00028034 <AmiBlitz3.ab3@11426>   MOVE.l bsssize,d3
0002803A <AmiBlitz3.ab3@11427>   MOVE.l chipstart,d7
00028040 <AmiBlitz3.ab3@11428>   MOVE.l bssstart,d6
00028046 <AmiBlitz3.ab3@11429>   MOVEA.l hunkoffsetbase,A2
0002804C <AmiBlitz3.ab3@11430>   MOVEA.l destbufferstart,A1
0002804E <AmiBlitz3.ab3@11431>   MOVE.l A1,D2
00028054 <AmiBlitz3.ab3@11432>   ADD.l noinits,D2
0002805A <AmiBlitz3.ab3@11433>   CLR.l hunkoffsetnum
0002805E <AmiBlitz3.ab3@11436>   CMPA.w #$0,A2
00028062 <AmiBlitz3.ab3@11437>    BEQ.w JL_0_757Cb
00028066 <AmiBlitz3.ab3@11438>   MOVE.l $4(A2),D0
0002806A <AmiBlitz3.ab3@11439>    LEA $0(a1,d0.l),a0
0002806C <AmiBlitz3.ab3@11440>    MOVE.l (a0),d1
0002806E <AmiBlitz3.ab3@11441>   TST.l d1
00028072 <AmiBlitz3.ab3@11442>    BMI.w 'lm1
0002807A <AmiBlitz3.ab3@11443>   MOVE.b #0,newhunk
00028084 <AmiBlitz3.ab3@11444>   CMP.l #-1,chipstart
00028088 <AmiBlitz3.ab3@11445>   BEQ 'l10
0002808E <AmiBlitz3.ab3@11446>   CMP.l chipstart,d1
00028092 <AmiBlitz3.ab3@11447>   BLT 'l10
0002809A <AmiBlitz3.ab3@11448>   MOVE.b #1,newhunk
000280A0 <AmiBlitz3.ab3@11449>   CMP.l chipend,d1
000280A4 <AmiBlitz3.ab3@11450>   BGE 'l110
000280A6 <AmiBlitz3.ab3@11451>   ADD.l d7,(a0)
000280AE <AmiBlitz3.ab3@11452>   ADD.l #$80000000,4(a2)
000280B2 <AmiBlitz3.ab3@11453> BRA JL_0_7576b
000280B6 <AmiBlitz3.ab3@11456>   ADD.l d5,0(a0)
000280C0 <AmiBlitz3.ab3@11459>   CMP.l #-1,bssstart
000280C4 <AmiBlitz3.ab3@11460>     BEQ 'l11
000280CA <AmiBlitz3.ab3@11461>   CMP.l bssstart,d1
000280CE <AmiBlitz3.ab3@11462>   BLT 'l11
000280D4 <AmiBlitz3.ab3@11463>   CMP.l bssend,d1
000280D8 <AmiBlitz3.ab3@11464>   BGE 'l111
000280DE <AmiBlitz3.ab3@11465>   TST.b newhunk
000280E2 <AmiBlitz3.ab3@11466>   BEQ 'ln1
000280E4 <AmiBlitz3.ab3@11467>   ADD.l d5,(a0)
000280E6 <AmiBlitz3.ab3@11470>   ADD.l d6,(a0)
000280EE <AmiBlitz3.ab3@11471>   ADD.l #$40000000,4(a2)
000280F2 <AmiBlitz3.ab3@11472> BRA JL_0_7576b
000280F6 <AmiBlitz3.ab3@11475>   ADD.l d3,0(a0)
000280F8 <AmiBlitz3.ab3@11478>   ADD.l D2,(A0)                                            ;only normal code offsets restore
000280FE <AmiBlitz3.ab3@11481>   ADDQ.l #1,hunkoffsetnum
00028100 <AmiBlitz3.ab3@11484>   MOVEA.l (A2),A2
00028104 <AmiBlitz3.ab3@11485> BRA.w JL_0_755Eb
0002810A <AmiBlitz3.ab3@11488>   JSR call_setpointernormal
0002810E <AmiBlitz3.ab3@11489>   MOVEM.l (a7)+,d2-d7/a2-a6
00028110 <AmiBlitz3.ab3@11491> RTS
00028112 <AmiBlitz3.ab3@11497>   MOVE.l D2,-(A7)
00028118 <AmiBlitz3.ab3@11498>   MOVE.l destpointer,D2
0002811E <AmiBlitz3.ab3@11499>   SUB.l destbufferstart,D2
00028122 <AmiBlitz3.ab3@11500>   BSR.w addhunkoffset
00028124 <AmiBlitz3.ab3@11501>   MOVE.l (A7)+,D2
00028126 <AmiBlitz3.ab3@11502> RTS
0002812A <AmiBlitz3.ab3@11508>   MOVEM.l D0-D1/A0-A1/A6,-(A7)
00028130 <AmiBlitz3.ab3@11510>   TST.b nohunkoffset
00028134 <AmiBlitz3.ab3@11511>   BNE 'l10
00028136 <AmiBlitz3.ab3@11513>   MOVEQ.l #$8,D0
00028138 <AmiBlitz3.ab3@11514>   MOVEQ.l #$01,D1
0002813E <AmiBlitz3.ab3@11515>   MOVEA.l _execbase,A6
00028144 <AmiBlitz3.ab3@11517>   MOVE.l mempool2,a0
00028148 <AmiBlitz3.ab3@11518>   JSR _AllocPooled(a6)
0002814E <AmiBlitz3.ab3@11522>   ADDQ.l #1,hunkoffsetcounter
00028150 <AmiBlitz3.ab3@11523>   MOVEA.l D0,A0
00028156 <AmiBlitz3.ab3@11524>   MOVE.l hunkoffsetbase,(A0)
0002815C <AmiBlitz3.ab3@11525>   MOVE.l A0,hunkoffsetbase
00028160 <AmiBlitz3.ab3@11526>   MOVE.l D2,$4(A0)
00028164 <AmiBlitz3.ab3@11531>   MOVEM.l (A7)+,D0-D1/A0-A1/A6
00028166 <AmiBlitz3.ab3@11532> RTS
0002816C <AmiBlitz3.ab3@11536>   CLR.l hunkoffsetbase
00028172 <AmiBlitz3.ab3@11537>   MOVEA.l _execbase,A6
00028178 <AmiBlitz3.ab3@11538>   MOVEA.l hunkoffsetbase,A2
0002817C <AmiBlitz3.ab3@11541>     CMPA.w #$0,A2
00028180 <AmiBlitz3.ab3@11542>      BEQ.w JL_0_7988
00028182 <AmiBlitz3.ab3@11543>     MOVEA.l A2,A1
00028184 <AmiBlitz3.ab3@11544>     MOVEQ.l #$08,D0
00028186 <AmiBlitz3.ab3@11545>     MOVEA.l (A2),A2
0002818C <AmiBlitz3.ab3@11546>     MOVE.l mempool2,a0
00028190 <AmiBlitz3.ab3@11547>     JSR _FreePooled(A6)
00028194 <AmiBlitz3.ab3@11548> BRA.w JL_0_7972
0002819A <AmiBlitz3.ab3@11551>   CLR.l hunkoffsetcounter
0002819C <AmiBlitz3.ab3@11552> RTS
000281B4 <AmiBlitz3.ab3@11555> cmakebuff:  Ds.l 6                                          ;dc.w 12 org source
000281B8 <AmiBlitz3.ab3@11556> cmakea5:    Ds.l 1
000281BA <AmiBlitz3.ab3@11557> cmake:      Ds.w 1
0002823A <AmiBlitz3.ab3@11558> cmakebak:   Ds.l 32                                         ;ds.b 128 org source
00028240 <AmiBlitz3.ab3@11562>   MOVE.l A5,lastsourcepos
0002824A <AmiBlitz3.ab3@11563>   MOVE.w instringon,oldqflag
0002824C <AmiBlitz3.ab3@11567>   MOVEQ.l #$00,D0
0002824E <AmiBlitz3.ab3@11568>   MOVE.b (A5)+,D0
00028252 <AmiBlitz3.ab3@11569>    BEQ 'donea
00028256 <AmiBlitz3.ab3@11570>   BPL 'stuffa
00028258 <AmiBlitz3.ab3@11571>   LSL.l #8,D0
0002825A <AmiBlitz3.ab3@11572>   MOVE.b (A5)+,D0
0002825C <AmiBlitz3.ab3@11573>   MOVE.l a1,-(a7)
00028262 <AmiBlitz3.ab3@11574>   LEA replacedat,a1
00028266 <AmiBlitz3.ab3@11575>   Dc.w $4a71,$0a00                                         ;TST.w 0(a1,d0.l*2)
0002826A <AmiBlitz3.ab3@11576>   BEQ 'l10
0002826E <AmiBlitz3.ab3@11577>   Dc.w $3031,$0a00                                         ;MOVE.w 0(a1,d0.l*2),d0
00028270 <AmiBlitz3.ab3@11581>   MOVE.l (a7)+,a1
00028274 <AmiBlitz3.ab3@11582>  BRA 'weiter
00028278 <AmiBlitz3.ab3@11585>   CMP.w #$22,D0
0002827C <AmiBlitz3.ab3@11586>    BEQ.b 'swapquotea
00028280 <AmiBlitz3.ab3@11587>   CMP.w #$3B,D0
00028284 <AmiBlitz3.ab3@11588>    BNE.b 'donea
0002828A <AmiBlitz3.ab3@11589>   TST.w instringon
0002828E <AmiBlitz3.ab3@11590>    BNE.b 'donea
00028290 <AmiBlitz3.ab3@11593>   MOVE.b (A5)+,D0
00028294 <AmiBlitz3.ab3@11594>              BEQ 'l1
00028298 <AmiBlitz3.ab3@11595>              CMP.b #":",d0
0002829C <AmiBlitz3.ab3@11596>              BNE 'loopa                                ;:@
000282A0 <AmiBlitz3.ab3@11597>              CMP.b #"@",(a5)
000282A4 <AmiBlitz3.ab3@11598>              BNE 'loopa
000282A6 <AmiBlitz3.ab3@11599>              ADDQ #1,a5
000282AC <AmiBlitz3.ab3@11602>   MOVE.w D0,lastchar
000282B0 <AmiBlitz3.ab3@11605>  BRA.s 'weiter
000282B6 <AmiBlitz3.ab3@11608>   NOT.w instringon
000282BC <AmiBlitz3.ab3@11611>    MOVE.w D0,lastchar
000282C0 <AmiBlitz3.ab3@11612>    BEQ.w 'done
000282C4 <AmiBlitz3.ab3@11613>    BPL.w 'done2
000282C8 <AmiBlitz3.ab3@11614>   CMP.w #-$7FE4,D0                                         ;cnif
000282CC <AmiBlitz3.ab3@11615>    BEQ.w 'cnif
000282D0 <AmiBlitz3.ab3@11616>   CMP.w #-$7FE3,D0                                         ;csif
000282D4 <AmiBlitz3.ab3@11617>    BEQ.w 'csif
000282D8 <AmiBlitz3.ab3@11618>   CMP.w #-$7FE2,D0                                         ;celse
000282DC <AmiBlitz3.ab3@11619>    BEQ.w 'celse
000282E0 <AmiBlitz3.ab3@11620>   CMP.w #-$7FE1,D0                                         ;cend
000282E4 <AmiBlitz3.ab3@11621>    BEQ.w 'cend
000282EA <AmiBlitz3.ab3@11624>   TST.w skipcode
000282EE <AmiBlitz3.ab3@11625>    BEQ.w getchar
000282F2 <AmiBlitz3.ab3@11626>   CMP.w #$7E,D0
000282F6 <AmiBlitz3.ab3@11627>    BEQ.w 'cmake                                            ;tilde
000282FA <AmiBlitz3.ab3@11628>   CMP.w #$2,D0
000282FE <AmiBlitz3.ab3@11629>    BNE.w 'notunpath
00028304 <AmiBlitz3.ab3@11630>   MOVEA.l usedfrom,A5
0002830A <AmiBlitz3.ab3@11631>   CLR.l usedfrom
0002830E <AmiBlitz3.ab3@11632>  BRA.w getchar
00028312 <AmiBlitz3.ab3@11635>   CMP.w #$1,D0
00028316 <AmiBlitz3.ab3@11636>    BNE.w 'done
0002831A <AmiBlitz3.ab3@11640>   MOVEA.l cmakea5(PC),A5
0002831E <AmiBlitz3.ab3@11641>  BRA.w getchar
00028324 <AmiBlitz3.ab3@11644>   TST.w cmake
00028328 <AmiBlitz3.ab3@11645>    BNE.w 'done
0002832C <AmiBlitz3.ab3@11647>   MOVEM.l D0-D7/A0-A6,-(A7)
00028332 <AmiBlitz3.ab3@11648>   LEA cmake,a0                                            ;reass
00028334 <AmiBlitz3.ab3@11649>   NOT.w (a0)
00028338 <AmiBlitz3.ab3@11650>   LEA cmakebak(PC),A0
0002833E <AmiBlitz3.ab3@11651>   LEA ptr_parameterstore,A1
00028340 <AmiBlitz3.ab3@11652>   MOVEQ.l #$1F,D0
00028342 <AmiBlitz3.ab3@11655>     MOVE.l (A1)+,(A0)+
00028346 <AmiBlitz3.ab3@11656>   DBF D0,'cmloop
0002834C <AmiBlitz3.ab3@11659>    JSR evalconst3
00028350 <AmiBlitz3.ab3@11660>   CMP.w #$7E,D0
00028354 <AmiBlitz3.ab3@11661>    BNE.w syntaxerr
0002835A <AmiBlitz3.ab3@11662>   MOVE.l A5,cmakea5                                      ;tilde
0002835E <AmiBlitz3.ab3@11663>   LEA cmakebuff(PC),A0
00028360 <AmiBlitz3.ab3@11664>   MOVE.l D3,D2
00028364 <AmiBlitz3.ab3@11665>   BSR.w makelong
00028366 <AmiBlitz3.ab3@11666>   ADDQ.b #1,(A0)
0002836C <AmiBlitz3.ab3@11667>   LEA cmake,a0
0002836E <AmiBlitz3.ab3@11668>   NOT.w (a0)                                               ;reass
00028372 <AmiBlitz3.ab3@11669>   LEA cmakebak(PC),A0
00028378 <AmiBlitz3.ab3@11670>   LEA ptr_parameterstore,A1
0002837A <AmiBlitz3.ab3@11671>   MOVEQ.l #$1F,D0
0002837C <AmiBlitz3.ab3@11674>     MOVE.l (A0)+,(A1)+
00028380 <AmiBlitz3.ab3@11675>   DBF D0,'cmloop2
00028384 <AmiBlitz3.ab3@11677>   MOVEM.l (A7)+,D0-D7/A0-A6
00028388 <AmiBlitz3.ab3@11678>   LEA cmakebuff(PC),A5
0002838C <AmiBlitz3.ab3@11679>  BRA.w getchar
0002838E <AmiBlitz3.ab3@11682>  RTS
00028398 <AmiBlitz3.ab3@11685>   MOVE.l linenumat,ciflineat                               ;csif
0002839E <AmiBlitz3.ab3@11686>   TST.w skipcode
000283A2 <AmiBlitz3.ab3@11687>    BEQ.w 'incnest
000283A6 <AmiBlitz3.ab3@11688>    BSR.w get1bytemain
000283A8 <AmiBlitz3.ab3@11689>    MOVE.l a1,-(a7)
000283AE <AmiBlitz3.ab3@11690>    JSR do_csif
000283B0 <AmiBlitz3.ab3@11691>    MOVE.l (a7)+,a1
000283B4 <AmiBlitz3.ab3@11692>  BRA.w getchar
000283BE <AmiBlitz3.ab3@11695>   MOVE.l linenumat,ciflineat                               ;cnif
000283C4 <AmiBlitz3.ab3@11696>   TST.w skipcode
000283C8 <AmiBlitz3.ab3@11697>    BEQ.w 'incnest
000283CC <AmiBlitz3.ab3@11698>    BSR.w get1bytemain
000283D0 <AmiBlitz3.ab3@11699>    CMP.b #"@",d0
000283D4 <AmiBlitz3.ab3@11700>    BNE 'cnif_ok2
000283D8 <AmiBlitz3.ab3@11701>    BSR.w get1bytemain
000283E0 <AmiBlitz3.ab3@11702>    MOVE.b #1,incnif
000283E6 <AmiBlitz3.ab3@11703>    JSR findconstant2
000283EA <AmiBlitz3.ab3@11704>    BEQ 'cnif_ok2
000283F0 <AmiBlitz3.ab3@11707>    MOVE.w fast,-(a7)
000283F6 <AmiBlitz3.ab3@11708>    CLR.b fast
000283F8 <AmiBlitz3.ab3@11709>    MOVE.l a1,-(a7)
000283FE <AmiBlitz3.ab3@11710>    JSR do_cnif
00028404 <AmiBlitz3.ab3@11711>    CLR.b incnif
00028406 <AmiBlitz3.ab3@11712>    MOVE.l (a7)+,a1
0002840C <AmiBlitz3.ab3@11713>    MOVE.w (a7)+,fast
00028410 <AmiBlitz3.ab3@11714>  BRA.w getchar
00028416 <AmiBlitz3.ab3@11717>   ADDQ.w #1,connest
0002841A <AmiBlitz3.ab3@11718>  BRA.w getchar
00028420 <AmiBlitz3.ab3@11721>   MOVE.w connest,D0                                      ;celse
00028424 <AmiBlitz3.ab3@11722>    BNE.w getchar
0002842A <AmiBlitz3.ab3@11723>   NOT.w skipcode
0002842E <AmiBlitz3.ab3@11724>  BRA.w getchar
00028434 <AmiBlitz3.ab3@11727>   SUBQ.w #1,connest                                      ;cend
00028438 <AmiBlitz3.ab3@11728>    BPL.w getchar
0002843E <AmiBlitz3.ab3@11729>   ADDQ.w #1,connest
00028444 <AmiBlitz3.ab3@11730>   MOVEA.l concomsp,A0
0002844A <AmiBlitz3.ab3@11731>   CMPA.l #concomstack,A0
0002844E <AmiBlitz3.ab3@11732>    BEQ.w nociferr
00028450 <AmiBlitz3.ab3@11733>   SUBQ.w #2,A0
00028456 <AmiBlitz3.ab3@11734>   MOVE.l A0,concomsp
0002845C <AmiBlitz3.ab3@11735>   MOVE.w (A0),skipcode
00028460 <AmiBlitz3.ab3@11736> BRA.w getchar
00028464 <AmiBlitz3.ab3@11739> ciflineat:   Ds.l 1
00028466 <AmiBlitz3.ab3@11747>   MOVEQ.l #$00,D0
00028468 <AmiBlitz3.ab3@11748>   MOVE.b (A5)+,D0
0002846C <AmiBlitz3.ab3@11749>    BEQ.b 'done
00028470 <AmiBlitz3.ab3@11750>    BPL.b 'stuff
00028472 <AmiBlitz3.ab3@11751>   LSL.w #8,D0
00028474 <AmiBlitz3.ab3@11752>   MOVE.b (A5)+,D0
00028476 <AmiBlitz3.ab3@11753>  RTS
0002847A <AmiBlitz3.ab3@11756>   CMP.w #$22,D0
0002847E <AmiBlitz3.ab3@11757>    BEQ.b 'swapquote
00028482 <AmiBlitz3.ab3@11758>   CMP.w #$3B,D0
00028486 <AmiBlitz3.ab3@11759>    BNE.b 'done
0002848C <AmiBlitz3.ab3@11760>   TST.w instringon
00028490 <AmiBlitz3.ab3@11761>    BNE.b 'done
00028492 <AmiBlitz3.ab3@11764>   MOVE.b (A5)+,D0
00028496 <AmiBlitz3.ab3@11765>             BEQ 'loop_l1
0002849A <AmiBlitz3.ab3@11766>             CMP.b #":",d0
0002849E <AmiBlitz3.ab3@11767>             BNE 'loop
000284A2 <AmiBlitz3.ab3@11768>             CMP.b #"@",(a5)
000284A6 <AmiBlitz3.ab3@11769>             BNE 'loop
000284AC <AmiBlitz3.ab3@11772>   MOVE.w D0,lastchar
000284AE <AmiBlitz3.ab3@11775>  RTS
000284B4 <AmiBlitz3.ab3@11778>   NOT.w instringon
000284B6 <AmiBlitz3.ab3@11779> RTS
000284BA <AmiBlitz3.ab3@11783>   BSR.w getchar
000284C0 <AmiBlitz3.ab3@11784>   TST.w instringon
000284C4 <AmiBlitz3.ab3@11785>    BNE.w 'skip
000284C8 <AmiBlitz3.ab3@11786>   CMP.w #$20,D0        ;' '
000284CC <AmiBlitz3.ab3@11787>    BEQ.w get1byte_
000284CE <AmiBlitz3.ab3@11790> RTS
000284E8 <AmiBlitz3.ab3@11793> gs:        Ds.w 13                                         ;ds.b 26  org source
000284EC <AmiBlitz3.ab3@11794>            Dc.b $F6,$E4,$FC,$D6                            ;dc.b 228,246,252,196,214,220 org source
000284EE <AmiBlitz3.ab3@11795>            Dc.b $C4,$DC
000284F2 <AmiBlitz3.ab3@11802>   BSR.w getchar
000284F8 <AmiBlitz3.ab3@11803>   TST.w instringon
000284FC <AmiBlitz3.ab3@11804>    BNE.w gchar2
00028500 <AmiBlitz3.ab3@11805>   CMP.w #$20,D0
00028504 <AmiBlitz3.ab3@11806>    BEQ.w get1bytemain
00028506 <AmiBlitz3.ab3@11808>   TST.w D0
0002850A <AmiBlitz3.ab3@11811>   BEQ.b 'zero
00028510 <AmiBlitz3.ab3@11812>   TST.w instringon
00028514 <AmiBlitz3.ab3@11813>    BEQ.b 'noqoute
00028518 <AmiBlitz3.ab3@11814>   CMP.b #$20,D0           ;' '
0002851C <AmiBlitz3.ab3@11815>    BCC.b 'skip
00028520 <AmiBlitz3.ab3@11816>   MOVE.b gs(PC,D0.W),D0
00028522 <AmiBlitz3.ab3@11817>  RTS
00028526 <AmiBlitz3.ab3@11820>   CMP.w #-$7FDE,D0                                         ;cmp #$8000+34,d0 org source  ;else
0002852A <AmiBlitz3.ab3@11821>    BEQ.b 'zero
0002852E <AmiBlitz3.ab3@11822>   CMP.w #$3A,D0           ;':'
00028532 <AmiBlitz3.ab3@11823>    BEQ.b 'zero
00028534 <AmiBlitz3.ab3@11826>   TST.w D0
00028536 <AmiBlitz3.ab3@11829> RTS
0002853C <AmiBlitz3.ab3@11833>   MOVE.w lastchar,D0
00028540 <AmiBlitz3.ab3@11834> BRA.w gchar2
0002854A <AmiBlitz3.ab3@11838>   MOVE.w oldqflag,instringon
00028550 <AmiBlitz3.ab3@11839>   MOVEA.l lastsourcepos,A5
00028552 <AmiBlitz3.ab3@11840> RTS
00028558 <AmiBlitz3.ab3@11844>   MOVE.w D0,locchar
0002855E <AmiBlitz3.ab3@11845>   MOVE.l A5,locloc
00028560 <AmiBlitz3.ab3@11846> RTS
00028566 <AmiBlitz3.ab3@11850>   MOVEA.l locloc,A5
0002856C <AmiBlitz3.ab3@11851>   MOVE.w locchar,D0
00028572 <AmiBlitz3.ab3@11852>   MOVE.w D0,lastchar
00028574 <AmiBlitz3.ab3@11853> RTS
00028574 <internal_errormsg.ab3@1> XINCLUDE "internal_errormsg.ab3"
000285BC <internal_errormsg.ab3@9> XINCLUDE "internal_errormsg.ab3"
0002860E <internal_errormsg.ab3@10> XINCLUDE "internal_errormsg.ab3"
0002864C <internal_errormsg.ab3@11> XINCLUDE "internal_errormsg.ab3"
0002868A <internal_errormsg.ab3@12> XINCLUDE "internal_errormsg.ab3"
000286B4 <internal_errormsg.ab3@13> XINCLUDE "internal_errormsg.ab3"
000286E4 <internal_errormsg.ab3@14> XINCLUDE "internal_errormsg.ab3"
0002872E <internal_errormsg.ab3@15> XINCLUDE "internal_errormsg.ab3"
000287B4 <internal_errormsg.ab3@16> XINCLUDE "internal_errormsg.ab3"
00028816 <internal_errormsg.ab3@17> XINCLUDE "internal_errormsg.ab3"
0002885E <internal_errormsg.ab3@18> XINCLUDE "internal_errormsg.ab3"
000288B0 <internal_errormsg.ab3@19> XINCLUDE "internal_errormsg.ab3"
00028912 <internal_errormsg.ab3@20> XINCLUDE "internal_errormsg.ab3"
00028960 <internal_errormsg.ab3@21> XINCLUDE "internal_errormsg.ab3"
00028996 <internal_errormsg.ab3@22> XINCLUDE "internal_errormsg.ab3"
000289C4 <internal_errormsg.ab3@23> XINCLUDE "internal_errormsg.ab3"
000289DE <internal_errormsg.ab3@24> XINCLUDE "internal_errormsg.ab3"
000289FC <internal_errormsg.ab3@25> XINCLUDE "internal_errormsg.ab3"
00028A7A <internal_errormsg.ab3@26> XINCLUDE "internal_errormsg.ab3"
00028AA4 <internal_errormsg.ab3@27> XINCLUDE "internal_errormsg.ab3"
00028ACA <internal_errormsg.ab3@28> XINCLUDE "internal_errormsg.ab3"
00028AEA <internal_errormsg.ab3@29> XINCLUDE "internal_errormsg.ab3"
00028B08 <internal_errormsg.ab3@30> XINCLUDE "internal_errormsg.ab3"
00028B28 <internal_errormsg.ab3@31> XINCLUDE "internal_errormsg.ab3"
00028B50 <internal_errormsg.ab3@32> XINCLUDE "internal_errormsg.ab3"
00028B7A <internal_errormsg.ab3@33> XINCLUDE "internal_errormsg.ab3"
00028B7C <internal_errormsg.ab3@36> XINCLUDE "internal_errormsg.ab3"
00028B98 <internal_errormsg.ab3@39> XINCLUDE "internal_errormsg.ab3"
00028BBE <internal_errormsg.ab3@40> XINCLUDE "internal_errormsg.ab3"
00028BD6 <internal_errormsg.ab3@41> XINCLUDE "internal_errormsg.ab3"
00028C34 <internal_errormsg.ab3@42> XINCLUDE "internal_errormsg.ab3"
00028C56 <internal_errormsg.ab3@43> XINCLUDE "internal_errormsg.ab3"
00028C7C <internal_errormsg.ab3@44> XINCLUDE "internal_errormsg.ab3"
00028CA4 <internal_errormsg.ab3@45> XINCLUDE "internal_errormsg.ab3"
00028CC4 <internal_errormsg.ab3@46> XINCLUDE "internal_errormsg.ab3"
00028CE8 <internal_errormsg.ab3@47> XINCLUDE "internal_errormsg.ab3"
00028D2E <internal_errormsg.ab3@48> XINCLUDE "internal_errormsg.ab3"
00028D52 <internal_errormsg.ab3@49> XINCLUDE "internal_errormsg.ab3"
00028D76 <internal_errormsg.ab3@50> XINCLUDE "internal_errormsg.ab3"
00028D96 <internal_errormsg.ab3@51> XINCLUDE "internal_errormsg.ab3"
00028DBA <internal_errormsg.ab3@52> XINCLUDE "internal_errormsg.ab3"
00028DDC <internal_errormsg.ab3@53> XINCLUDE "internal_errormsg.ab3"
00028E08 <internal_errormsg.ab3@54> XINCLUDE "internal_errormsg.ab3"
00028E2E <internal_errormsg.ab3@55> XINCLUDE "internal_errormsg.ab3"
00028E38 <internal_errormsg.ab3@58> XINCLUDE "internal_errormsg.ab3"
00028E5E <internal_errormsg.ab3@59> XINCLUDE "internal_errormsg.ab3"
00028EB0 <internal_errormsg.ab3@61> XINCLUDE "internal_errormsg.ab3"
00028F1A <internal_errormsg.ab3@62> XINCLUDE "internal_errormsg.ab3"
00028F78 <internal_errormsg.ab3@63> XINCLUDE "internal_errormsg.ab3"
00028FE6 <internal_errormsg.ab3@64> XINCLUDE "internal_errormsg.ab3"
00029022 <internal_errormsg.ab3@65> XINCLUDE "internal_errormsg.ab3"
00029040 <internal_errormsg.ab3@66> XINCLUDE "internal_errormsg.ab3"
00029066 <internal_errormsg.ab3@67> XINCLUDE "internal_errormsg.ab3"
00029096 <internal_errormsg.ab3@68> XINCLUDE "internal_errormsg.ab3"
000290BA <internal_errormsg.ab3@69> XINCLUDE "internal_errormsg.ab3"
000290E8 <internal_errormsg.ab3@70> XINCLUDE "internal_errormsg.ab3"
0002910C <internal_errormsg.ab3@71> XINCLUDE "internal_errormsg.ab3"
00029122 <internal_errormsg.ab3@72> XINCLUDE "internal_errormsg.ab3"
00029138 <internal_errormsg.ab3@73> XINCLUDE "internal_errormsg.ab3"
0002913E <internal_errormsg.ab3@76> XINCLUDE "internal_errormsg.ab3"
00029146 <internal_errormsg.ab3@78> XINCLUDE "internal_errormsg.ab3"
00029148 <internal_errormsg.ab3@79> XINCLUDE "internal_errormsg.ab3"
0002914C <internal_errormsg.ab3@80> XINCLUDE "internal_errormsg.ab3"
00029154 <internal_errormsg.ab3@81> XINCLUDE "internal_errormsg.ab3"
00029156 <internal_errormsg.ab3@82> XINCLUDE "internal_errormsg.ab3"
00029190 <internal_errormsg.ab3@84> XINCLUDE "internal_errormsg.ab3"
000291BC <internal_errormsg.ab3@85> XINCLUDE "internal_errormsg.ab3"
000291EC <internal_errormsg.ab3@86> XINCLUDE "internal_errormsg.ab3"
00029224 <internal_errormsg.ab3@87> XINCLUDE "internal_errormsg.ab3"
0002927E <internal_errormsg.ab3@88> XINCLUDE "internal_errormsg.ab3"
00029280 <internal_errormsg.ab3@92> XINCLUDE "internal_errormsg.ab3"
00029284 <internal_errormsg.ab3@93> XINCLUDE "internal_errormsg.ab3"
00029288 <internal_errormsg.ab3@94> XINCLUDE "internal_errormsg.ab3"
0002928C <internal_errormsg.ab3@95> XINCLUDE "internal_errormsg.ab3"
00029290 <internal_errormsg.ab3@96> XINCLUDE "internal_errormsg.ab3"
00029294 <internal_errormsg.ab3@97> XINCLUDE "internal_errormsg.ab3"
00029298 <internal_errormsg.ab3@98> XINCLUDE "internal_errormsg.ab3"
0002929C <internal_errormsg.ab3@99> XINCLUDE "internal_errormsg.ab3"
000292A0 <internal_errormsg.ab3@100> XINCLUDE "internal_errormsg.ab3"
000292A4 <internal_errormsg.ab3@101> XINCLUDE "internal_errormsg.ab3"
000292A8 <internal_errormsg.ab3@102> XINCLUDE "internal_errormsg.ab3"
000292E6 <internal_errormsg.ab3@103> XINCLUDE "internal_errormsg.ab3"
00029318 <internal_errormsg.ab3@105> XINCLUDE "internal_errormsg.ab3"
00029336 <internal_errormsg.ab3@106> XINCLUDE "internal_errormsg.ab3"
00029360 <internal_errormsg.ab3@107> XINCLUDE "internal_errormsg.ab3"
0002937C <internal_errormsg.ab3@108> XINCLUDE "internal_errormsg.ab3"
00029396 <internal_errormsg.ab3@109> XINCLUDE "internal_errormsg.ab3"
000293B4 <internal_errormsg.ab3@110> XINCLUDE "internal_errormsg.ab3"
000293D8 <internal_errormsg.ab3@111> XINCLUDE "internal_errormsg.ab3"
000293DA <internal_errormsg.ab3@114> XINCLUDE "internal_errormsg.ab3"
0002942C <internal_errormsg.ab3@115> XINCLUDE "internal_errormsg.ab3"
00029454 <internal_errormsg.ab3@117> XINCLUDE "internal_errormsg.ab3"
0002947C <internal_errormsg.ab3@118> XINCLUDE "internal_errormsg.ab3"
00029498 <internal_errormsg.ab3@122> XINCLUDE "internal_errormsg.ab3"
000294B8 <internal_errormsg.ab3@123> XINCLUDE "internal_errormsg.ab3"
000294D0 <internal_errormsg.ab3@124> XINCLUDE "internal_errormsg.ab3"
00029514 <internal_errormsg.ab3@125> XINCLUDE "internal_errormsg.ab3"
0002955C <internal_errormsg.ab3@126> XINCLUDE "internal_errormsg.ab3"
00029586 <internal_errormsg.ab3@127> XINCLUDE "internal_errormsg.ab3"
000295B0 <internal_errormsg.ab3@128> XINCLUDE "internal_errormsg.ab3"
000295CA <internal_errormsg.ab3@132> XINCLUDE "internal_errormsg.ab3"
000295F4 <internal_errormsg.ab3@133> XINCLUDE "internal_errormsg.ab3"
00029648 <internal_errormsg.ab3@134> XINCLUDE "internal_errormsg.ab3"
00029694 <internal_errormsg.ab3@135> XINCLUDE "internal_errormsg.ab3"
000296CC <internal_errormsg.ab3@136> XINCLUDE "internal_errormsg.ab3"
000296D2 <internal_errormsg.ab3@139> XINCLUDE "internal_errormsg.ab3"
000296E0 <internal_errormsg.ab3@141> XINCLUDE "internal_errormsg.ab3"
00029710 <internal_errormsg.ab3@144> XINCLUDE "internal_errormsg.ab3"
00029744 <internal_errormsg.ab3@145> XINCLUDE "internal_errormsg.ab3"
000297AA <internal_errormsg.ab3@146> XINCLUDE "internal_errormsg.ab3"
000297C8 <internal_errormsg.ab3@147> XINCLUDE "internal_errormsg.ab3"
00029842 <internal_errormsg.ab3@148> XINCLUDE "internal_errormsg.ab3"
0002986A <internal_errormsg.ab3@149> XINCLUDE "internal_errormsg.ab3"
00029880 <internal_errormsg.ab3@150> XINCLUDE "internal_errormsg.ab3"
00029894 <internal_errormsg.ab3@151> XINCLUDE "internal_errormsg.ab3"
00029896 <internal_errormsg.ab3@154> XINCLUDE "internal_errormsg.ab3"
00029897 <internal_errormsg.ab3@155> XINCLUDE "internal_errormsg.ab3"
00029898 <internal_errormsg.ab3@156> XINCLUDE "internal_errormsg.ab3"
000298B8 <internal_errormsg.ab3@158> XINCLUDE "internal_errormsg.ab3"
000298BE <internal_errormsg.ab3@161> XINCLUDE "internal_errormsg.ab3"
000298D0 <internal_errormsg.ab3@163> XINCLUDE "internal_errormsg.ab3"
00029904 <internal_errormsg.ab3@166> XINCLUDE "internal_errormsg.ab3"
0002991C <internal_errormsg.ab3@167> XINCLUDE "internal_errormsg.ab3"
00029938 <internal_errormsg.ab3@168> XINCLUDE "internal_errormsg.ab3"
00029950 <internal_errormsg.ab3@169> XINCLUDE "internal_errormsg.ab3"
00029970 <internal_errormsg.ab3@170> XINCLUDE "internal_errormsg.ab3"
00029990 <internal_errormsg.ab3@171> XINCLUDE "internal_errormsg.ab3"
000299B6 <internal_errormsg.ab3@172> XINCLUDE "internal_errormsg.ab3"
000299CC <internal_errormsg.ab3@173> XINCLUDE "internal_errormsg.ab3"
000299E8 <internal_errormsg.ab3@174> XINCLUDE "internal_errormsg.ab3"
00029A12 <internal_errormsg.ab3@175> XINCLUDE "internal_errormsg.ab3"
00029A2A <internal_errormsg.ab3@176> XINCLUDE "internal_errormsg.ab3"
00029A46 <internal_errormsg.ab3@177> XINCLUDE "internal_errormsg.ab3"
00029A66 <internal_errormsg.ab3@178> XINCLUDE "internal_errormsg.ab3"
00029A7E <internal_errormsg.ab3@179> XINCLUDE "internal_errormsg.ab3"
00029A82 <internal_errormsg.ab3@182> XINCLUDE "internal_errormsg.ab3"
00029A88 <internal_errormsg.ab3@183> XINCLUDE "internal_errormsg.ab3"
00029A8E <internal_errormsg.ab3@184> XINCLUDE "internal_errormsg.ab3"
00029AA3 <internal_errormsg.ab3@185> XINCLUDE "internal_errormsg.ab3"
00029AA9 <internal_errormsg.ab3@187> XINCLUDE "internal_errormsg.ab3"
00029AAA <internal_errormsg.ab3@188> XINCLUDE "internal_errormsg.ab3"
00029AAE <internal_errormsg.ab3@191> XINCLUDE "internal_errormsg.ab3"
00029AB4 <internal_errormsg.ab3@192> XINCLUDE "internal_errormsg.ab3"
00029ABA <internal_errormsg.ab3@193> XINCLUDE "internal_errormsg.ab3"
00029ACD <internal_errormsg.ab3@194> XINCLUDE "internal_errormsg.ab3"
00029AD3 <internal_errormsg.ab3@196> XINCLUDE "internal_errormsg.ab3"
00029AD4 <internal_errormsg.ab3@197> XINCLUDE "internal_errormsg.ab3"
00029AF2 <internal_errormsg.ab3@199> XINCLUDE "internal_errormsg.ab3"
00029B0A <internal_errormsg.ab3@200> XINCLUDE "internal_errormsg.ab3"
00029B26 <internal_errormsg.ab3@201> XINCLUDE "internal_errormsg.ab3"
00029B50 <internal_errormsg.ab3@202> XINCLUDE "internal_errormsg.ab3"
00029B6A <internal_errormsg.ab3@203> XINCLUDE "internal_errormsg.ab3"
00029B8A <internal_errormsg.ab3@204> XINCLUDE "internal_errormsg.ab3"
00029BA8 <internal_errormsg.ab3@205> XINCLUDE "internal_errormsg.ab3"
00029BD6 <internal_errormsg.ab3@206> XINCLUDE "internal_errormsg.ab3"
00029BE0 <internal_errormsg.ab3@209> XINCLUDE "internal_errormsg.ab3"
00029C12 <internal_errormsg.ab3@210> XINCLUDE "internal_errormsg.ab3"
00029C30 <internal_errormsg.ab3@212> XINCLUDE "internal_errormsg.ab3"
00029C4E <internal_errormsg.ab3@213> XINCLUDE "internal_errormsg.ab3"
00029C6E <internal_errormsg.ab3@214> XINCLUDE "internal_errormsg.ab3"
00029C94 <internal_errormsg.ab3@215> XINCLUDE "internal_errormsg.ab3"
00029CBA <internal_errormsg.ab3@216> XINCLUDE "internal_errormsg.ab3"
00029CE2 <internal_errormsg.ab3@217> XINCLUDE "internal_errormsg.ab3"
00029D00 <internal_errormsg.ab3@218> XINCLUDE "internal_errormsg.ab3"
00029D20 <internal_errormsg.ab3@219> XINCLUDE "internal_errormsg.ab3"
00029D3A <internal_errormsg.ab3@220> XINCLUDE "internal_errormsg.ab3"
00029D5C <internal_errormsg.ab3@221> XINCLUDE "internal_errormsg.ab3"
00029D7A <internal_errormsg.ab3@222> XINCLUDE "internal_errormsg.ab3"
00029D9C <internal_errormsg.ab3@223> XINCLUDE "internal_errormsg.ab3"
00029DC0 <internal_errormsg.ab3@224> XINCLUDE "internal_errormsg.ab3"
00029DC6 <internal_errormsg.ab3@227> XINCLUDE "internal_errormsg.ab3"
00029DE2 <internal_errormsg.ab3@228> XINCLUDE "internal_errormsg.ab3"
00029DFE <internal_errormsg.ab3@230> XINCLUDE "internal_errormsg.ab3"
00029E1C <internal_errormsg.ab3@231> XINCLUDE "internal_errormsg.ab3"
00029E3A <internal_errormsg.ab3@232> XINCLUDE "internal_errormsg.ab3"
00029E88 <internal_errormsg.ab3@233> XINCLUDE "internal_errormsg.ab3"
00029EA6 <internal_errormsg.ab3@234> XINCLUDE "internal_errormsg.ab3"
00029EC4 <internal_errormsg.ab3@235> XINCLUDE "internal_errormsg.ab3"
00029EDE <internal_errormsg.ab3@236> XINCLUDE "internal_errormsg.ab3"
00029F2A <internal_errormsg.ab3@237> XINCLUDE "internal_errormsg.ab3"
00029F50 <internal_errormsg.ab3@238> XINCLUDE "internal_errormsg.ab3"
00029F70 <internal_errormsg.ab3@239> XINCLUDE "internal_errormsg.ab3"
00029F92 <internal_errormsg.ab3@240> XINCLUDE "internal_errormsg.ab3"
00029FAE <internal_errormsg.ab3@241> XINCLUDE "internal_errormsg.ab3"
00029FD4 <internal_errormsg.ab3@242> XINCLUDE "internal_errormsg.ab3"
00029FF0 <internal_errormsg.ab3@243> XINCLUDE "internal_errormsg.ab3"
0002A00E <internal_errormsg.ab3@244> XINCLUDE "internal_errormsg.ab3"
0002A036 <internal_errormsg.ab3@245> XINCLUDE "internal_errormsg.ab3"
0002A052 <internal_errormsg.ab3@246> XINCLUDE "internal_errormsg.ab3"
0002A062 <internal_errormsg.ab3@247> XINCLUDE "internal_errormsg.ab3"
0002A084 <internal_errormsg.ab3@248> XINCLUDE "internal_errormsg.ab3"
0002A088 <internal_errormsg.ab3@251> XINCLUDE "internal_errormsg.ab3"
0002A08A <internal_errormsg.ab3@254> XINCLUDE "internal_errormsg.ab3"
0002A0A4 <internal_errormsg.ab3@255> XINCLUDE "internal_errormsg.ab3"
0002A0C8 <internal_errormsg.ab3@257> XINCLUDE "internal_errormsg.ab3"
0002A0E8 <internal_errormsg.ab3@258> XINCLUDE "internal_errormsg.ab3"
0002A11A <internal_errormsg.ab3@259> XINCLUDE "internal_errormsg.ab3"
0002A178 <internal_errormsg.ab3@260> XINCLUDE "internal_errormsg.ab3"
0002A1B0 <internal_errormsg.ab3@261> XINCLUDE "internal_errormsg.ab3"
0002A1EE <internal_errormsg.ab3@262> XINCLUDE "internal_errormsg.ab3"
0002A224 <internal_errormsg.ab3@263> XINCLUDE "internal_errormsg.ab3"
0002A256 <internal_errormsg.ab3@264> XINCLUDE "internal_errormsg.ab3"
0002A27A <internal_errormsg.ab3@265> XINCLUDE "internal_errormsg.ab3"
0002A29E <internal_errormsg.ab3@266> XINCLUDE "internal_errormsg.ab3"
0002A2E8 <internal_errormsg.ab3@267> XINCLUDE "internal_errormsg.ab3"
0002A310 <internal_errormsg.ab3@268> XINCLUDE "internal_errormsg.ab3"
0002A35A <internal_errormsg.ab3@269> XINCLUDE "internal_errormsg.ab3"
0002A39A <internal_errormsg.ab3@270> XINCLUDE "internal_errormsg.ab3"
0002A39A <AmiBlitz3.ab3@11857> XINCLUDE "internal_errormsg.ab3"
0002A39C <AmiBlitz3.ab3@11861> ezerr:   Ds.w 1                                            ;for simple errors
0002A3A2 <AmiBlitz3.ab3@11868>    MOVE.l myline,d0
0002A3A6 <AmiBlitz3.ab3@11869>   BNE 'l2
0002A3AC <AmiBlitz3.ab3@11872>     MOVE.l a5,lastsourcepos
0002A3AE <AmiBlitz3.ab3@11875>     SUBA.l a5,a5
0002A3B4 <AmiBlitz3.ab3@11878>   TST.l usedfrom
0002A3B8 <AmiBlitz3.ab3@11879>   BEQ 'org
0002A3BE <AmiBlitz3.ab3@11880>     MOVEA.l usedfrom,a5
0002A3C4 <AmiBlitz3.ab3@11884>   TST.w dirmode
0002A3C8 <AmiBlitz3.ab3@11885>   BNE.b 'quiet
0002A3CE <AmiBlitz3.ab3@11887>     JSR call_setpointernormal
0002A3D2 <AmiBlitz3.ab3@11889>     MOVE.w ezerr(PC),D0
0002A3D6 <AmiBlitz3.ab3@11890>     BNE.w 'skip
0002A3DC <AmiBlitz3.ab3@11891>       MOVE.w cfetchmode,D0
0002A3E0 <AmiBlitz3.ab3@11892>       BEQ.w 'skip2
0002A3EA <AmiBlitz3.ab3@11893>         MOVE.l oldlibat,destbufferend                      ;fix up lib thing.
0002A3F0 <AmiBlitz3.ab3@11896>   MOVE.w constmode,D0
0002A3F4 <AmiBlitz3.ab3@11897>   BEQ.b 'skip3
0002A3F8 <AmiBlitz3.ab3@11898>     BSR.w asmerr2
0002A3FE <AmiBlitz3.ab3@11901>   MOVE.l firstlocal,D1
0002A404 <AmiBlitz3.ab3@11902>   OR.l firstglob,D1
0002A408 <AmiBlitz3.ab3@11903>   BEQ.b 'notproc                                           ;?!?!?!
0002A40E <AmiBlitz3.ab3@11905> 
0002A412 <AmiBlitz3.ab3@11906>     BNE 'notproc                                           ; yes skip
0002A418 <AmiBlitz3.ab3@11908>       JSR droplocals                                        ; no free some data ????
0002A420 <AmiBlitz3.ab3@11911>   MOVE.w #$FFFF,anyerrs                                    ;#-1,anyerrs org source
0002A42A <AmiBlitz3.ab3@11913>   CMP.l #"NORE",reqmode                                    ;for used functions
0002A42E <AmiBlitz3.ab3@11914>   BEQ 'notproc_l1
0002A438 <AmiBlitz3.ab3@11916>     MOVE.l linenumat,compilelinecounter
0002A43E <AmiBlitz3.ab3@11919>   JSR close_compilewin
0002A440 <AmiBlitz3.ab3@11922>   MOVEA.l (A7)+,A0
0002A446 <AmiBlitz3.ab3@11924>   MOVE.l errorcounter,d0                                   ; added to make maxerrorcount changable in CLIMode  tomsmart1
0002A44C <AmiBlitz3.ab3@11925>   CMP.l maxerrorcount,d0                                   ; changed to make maxerrorcount changable in CLIMode  tomsmart1
0002A450 <AmiBlitz3.ab3@11926>   BLT 'lesserror
0002A456 <AmiBlitz3.ab3@11927>   LEA errorlimit_text,a0
0002A45C <AmiBlitz3.ab3@11930>   ADDQ.l #1,errorcounter
0002A462 <AmiBlitz3.ab3@11931>   JSR errorstringparse
0002A46C <AmiBlitz3.ab3@11932>   CMP.l #"NORE",reqmode                                    ;for used functions
0002A470 <AmiBlitz3.ab3@11933>   BEQ 'skip_Lxx2
0002A476 <AmiBlitz3.ab3@11934>   TST.l CLIMode
0002A47A <AmiBlitz3.ab3@11935>   BNE 'climode_output
0002A480 <AmiBlitz3.ab3@11938>     JSR save_errorfile
0002A484 <AmiBlitz3.ab3@11939>     BRA 'end_output
0002A48A <AmiBlitz3.ab3@11942>     JSR stdout_error
0002A490 <AmiBlitz3.ab3@11945>        MOVE.l errorcounter,d0                          ; added to make maxerrorcount changable in CLIMode  tomsmart1
0002A496 <AmiBlitz3.ab3@11946>        CMP.l maxerrorcount,d0                          ; changed to make maxerrorcount changable in CLIMode  tomsmart1
0002A49A <AmiBlitz3.ab3@11947>        BGT 'end_output
0002A4A0 <AmiBlitz3.ab3@11948>       MOVE.l lastsourcepos,a5
0002A4A2 <AmiBlitz3.ab3@11951>       TST.b (a5)
0002A4A6 <AmiBlitz3.ab3@11952>         BEQ 'ok2
0002A4A8 <AmiBlitz3.ab3@11953>       MOVE.b (a5)+,d0                                  ; position to usefull source position to avoid following errors
0002A4AC <AmiBlitz3.ab3@11954>       BEQ 'ok
0002A4B0 <AmiBlitz3.ab3@11955>       CMP.b #":",d0
0002A4B4 <AmiBlitz3.ab3@11956>       BEQ 'ok
0002A4B8 <AmiBlitz3.ab3@11957>       BRA 'loop
0002A4BA <AmiBlitz3.ab3@11960>     SUBQ.l #1,a5
0002A4C2 <AmiBlitz3.ab3@11963>       MOVE.w #0,lastchar
0002A4CA <AmiBlitz3.ab3@11964>       MOVE.b #1,iserror
0002A4D0 <AmiBlitz3.ab3@11965>       MOVE.l stackaddr,a7
0002A4D2 <AmiBlitz3.ab3@11966>       RTS
0002A4D4 <AmiBlitz3.ab3@11974>   MOVE.l A0,-(a7)
0002A512 <AmiBlitz3.ab3@11975>   !ComData_GetL{comFunc_ErrorRequest,A1}
0002A514 <AmiBlitz3.ab3@11976>   MOVE.l (a7)+,A0
0002A518 <AmiBlitz3.ab3@11978>   MOVEM.l d6/D7/A6,-(A7)
0002A51E <AmiBlitz3.ab3@11980>   MOVE.l includeline,d7
0002A524 <AmiBlitz3.ab3@11981>   MOVE.l #"INLN",a6
0002A52E <AmiBlitz3.ab3@11982>   MOVE.l errstack,tempa7
0002A530 <AmiBlitz3.ab3@11984>   JSR (A1)                                                  ;open ped errorrequest
0002A534 <AmiBlitz3.ab3@11986>   MOVEM.l (A7)+,D7/d6/A6
0002A53A <AmiBlitz3.ab3@11990>   MOVE.l tempa7,a7
0002A540 <AmiBlitz3.ab3@11992>   MOVEA.l errcont,A0
0002A542 <AmiBlitz3.ab3@11995>  RTS
0002A548 <AmiBlitz3.ab3@11998>   MOVEA.l errstack,A7
0002A54E <AmiBlitz3.ab3@11999>   MOVEA.l errcont,A0
0002A550 <AmiBlitz3.ab3@12001>  RTS
0002A552 <AmiBlitz3.ab3@12005>   MOVE.l (A7),D0
0002A558 <AmiBlitz3.ab3@12006>   MOVEA.l errstack,A7
0002A55E <AmiBlitz3.ab3@12007>   MOVEA.l errcont,A0
0002A560 <AmiBlitz3.ab3@12008> JMP (A0)
0002A564 <AmiBlitz3.ab3@12014>   CMP.w #$7A,D0                                            ;'z'
0002A568 <AmiBlitz3.ab3@12015>    BHI.w 'no
0002A56C <AmiBlitz3.ab3@12016>   CMP.w #$41,D0                                            ;'A'
0002A570 <AmiBlitz3.ab3@12017>    BCS.w 'no
0002A574 <AmiBlitz3.ab3@12018>   CMP.w #$61,D0                                            ;'a'
0002A578 <AmiBlitz3.ab3@12019>    BCC.w 'yes
0002A57C <AmiBlitz3.ab3@12020>   CMP.w #$5A,D0                                            ;'Z'
0002A580 <AmiBlitz3.ab3@12021>    BHI.w 'no
0002A582 <AmiBlitz3.ab3@12024>   CMP.w D0,D0
0002A584 <AmiBlitz3.ab3@12027> RTS
0002A588 <AmiBlitz3.ab3@12035>   CMP.w #$30,D0                                            ;'0'
0002A58C <AmiBlitz3.ab3@12036>    BCS.w 'skip
0002A590 <AmiBlitz3.ab3@12037>   CMP.w #$39,D0                                            ;'9'
0002A594 <AmiBlitz3.ab3@12038>    BHI.w 'skip
0002A596 <AmiBlitz3.ab3@12039>   CMP.w D0,D0
0002A598 <AmiBlitz3.ab3@12042> RTS
0002A5BA <AmiBlitz3.ab3@12049>   !compare1                                                ;bsr.w tstalpha
0002A5BE <AmiBlitz3.ab3@12051>    BEQ.w 'skip
0002A5D0 <AmiBlitz3.ab3@12053>   !compare2                                                ;bsr.w tstnum2
0002A5D4 <AmiBlitz3.ab3@12055>    BEQ.w 'skip
0002A5D8 <AmiBlitz3.ab3@12056>   CMP.w #$5F,D0                                            ;'_'
0002A5DC <AmiBlitz3.ab3@12057>    BEQ.w 'skip
0002A5E0 <AmiBlitz3.ab3@12058>   CMP.w #$27,D0                                            ;''';#loclabch,d0 org source
0002A5E2 <AmiBlitz3.ab3@12061> RTS
0002A5EC <AmiBlitz3.ab3@12067>   MOVE.w oldqflag,instringon
0002A5F2 <AmiBlitz3.ab3@12068>   MOVEA.l lastsourcepos,A5
0002A5F8 <AmiBlitz3.ab3@12077>   MOVE.l a5,beforeparameterfetch
0002A5FE <AmiBlitz3.ab3@12079>   LEA ptr_parameterstore,A1
0002A600 <AmiBlitz3.ab3@12082>   MOVEQ.l #$00,D2
0002A606 <AmiBlitz3.ab3@12086>   LEA chartab,a0
0002A608 <AmiBlitz3.ab3@12087>   MOVEQ #0,d0
0002A60E <AmiBlitz3.ab3@12088>   MOVE.l A5,lastsourcepos
0002A618 <AmiBlitz3.ab3@12089>   MOVE.w instringon,oldqflag
0002A61A <AmiBlitz3.ab3@12092>     MOVE.b (a5)+,d0
0002A61E <AmiBlitz3.ab3@12093>   CMP.b #$20,d0                                            ;space deftype
0002A622 <AmiBlitz3.ab3@12094>   BEQ 'retry
0002A628 <AmiBlitz3.ab3@12096>   MOVE.w d0,lastchar
0002A62C <AmiBlitz3.ab3@12097>   TST.b 0(a0,d0.w)
0002A630 <AmiBlitz3.ab3@12098>   BNE 'done
0002A632 <AmiBlitz3.ab3@12111>   MOVE.b D0,(A1)+
0002A634 <AmiBlitz3.ab3@12112>   ADDQ.l #1,D2
0002A63A <AmiBlitz3.ab3@12115>   MOVE.l A5,lastsourcepos
0002A63C <AmiBlitz3.ab3@12118>   MOVE.b (a5)+,d0
0002A642 <AmiBlitz3.ab3@12119>   MOVE.b d0,lastchar+1
0002A646 <AmiBlitz3.ab3@12120>   CMP.b #$20,d0
0002A64A <AmiBlitz3.ab3@12121>   BEQ 'loop_l20
0002A64E <AmiBlitz3.ab3@12123>   TST.b 0(a0,d0)
0002A652 <AmiBlitz3.ab3@12124>   BEQ 'loop
0002A656 <AmiBlitz3.ab3@12125>   CMP.b #2,d0
0002A65A <AmiBlitz3.ab3@12126>   BNE 'loop_lf1
0002A660 <AmiBlitz3.ab3@12127>   MOVEA.l usedfrom,A5
0002A666 <AmiBlitz3.ab3@12128>   CLR.l usedfrom
0002A66A <AmiBlitz3.ab3@12129>  BRA 'loop_ln1
0002A66E <AmiBlitz3.ab3@12132>   CMP.b #1,d0
0002A672 <AmiBlitz3.ab3@12133>   BNE 'loop_l20
0002A676 <AmiBlitz3.ab3@12134>   MOVEA.l cmakea5(PC),A5
0002A67A <AmiBlitz3.ab3@12135>  BRA 'loop_ln1
0002A67E <AmiBlitz3.ab3@12138>   CMP.b #$7e,d0
0002A682 <AmiBlitz3.ab3@12139>             BNE 'loop_lt
0002A688 <AmiBlitz3.ab3@12140>             TST.w cmake
0002A68C <AmiBlitz3.ab3@12141>             BNE.w 'loop_a1
0002A68E <AmiBlitz3.ab3@12142>             SUBQ.l #1,a5
0002A692 <AmiBlitz3.ab3@12143>             BSR.w get1bytemain
0002A696 <AmiBlitz3.ab3@12144>  BRA 'loop
0002A69A <AmiBlitz3.ab3@12148>  BRA 'loop_gpex
0002A69E <AmiBlitz3.ab3@12152>   BSR.w getchar
0002A6C0 <AmiBlitz3.ab3@12154>    !compare1                                               ;bsr.w tstalpha
0002A6C4 <AmiBlitz3.ab3@12155>    BEQ.w 'loop_getp1
0002A6D6 <AmiBlitz3.ab3@12156>    !compare2                                               ;bsr.w tstnum
0002A6DA <AmiBlitz3.ab3@12157>    BEQ.w 'loop_getp1
0002A6DE <AmiBlitz3.ab3@12158>   CMP.w #$5F,D0                                            ;'_'
0002A6E2 <AmiBlitz3.ab3@12159>    BEQ.w 'loop_getp1
0002A6E6 <AmiBlitz3.ab3@12160>   CMP.w #$27,D0                                            ;''';#loclabch,d0 org source
0002A6EA <AmiBlitz3.ab3@12164>       BNE 'loop_gpex
0002A6EE <AmiBlitz3.ab3@12165>       CMP.b #$20,d0
0002A6F2 <AmiBlitz3.ab3@12167>       BNE.w 'loop
0002A6F4 <AmiBlitz3.ab3@12170>      TST.b d0
0002A6F8 <AmiBlitz3.ab3@12171>      BPL 'loop_l10
0002A6FA <AmiBlitz3.ab3@12172>      SUBQ.l #1,a5
0002A6FE <AmiBlitz3.ab3@12173>      BSR get1byte_
0002A702 <AmiBlitz3.ab3@12181>    CMP.w #$20,D0
0002A706 <AmiBlitz3.ab3@12182>    BNE.w 'done
0002A708 <AmiBlitz3.ab3@12184>    MOVEQ #0,d0
0002A70E <AmiBlitz3.ab3@12185>   MOVE.l a5,lastsourcepos
0002A710 <AmiBlitz3.ab3@12188>   MOVE.b (a5)+,d0                                          ;neuneu
0002A714 <AmiBlitz3.ab3@12189>   BPL 'loop_l101
0002A716 <AmiBlitz3.ab3@12190>   ASL.w #8,d0
0002A718 <AmiBlitz3.ab3@12191>   MOVE.b (a5)+,d0
0002A71E <AmiBlitz3.ab3@12194>   TST.w instringon
0002A722 <AmiBlitz3.ab3@12195>   BNE 'loop_l102
0002A726 <AmiBlitz3.ab3@12196>   CMP.b #$20,d0
0002A72A <AmiBlitz3.ab3@12197>   BEQ 'loop_l103
0002A72E <AmiBlitz3.ab3@12198>   CMP.b #";",d0
0002A732 <AmiBlitz3.ab3@12199>   BNE 'loop_l102
0002A734 <AmiBlitz3.ab3@12202>   MOVE.b (A5)+,D0
0002A738 <AmiBlitz3.ab3@12203>              BEQ 'loop_l1
0002A73C <AmiBlitz3.ab3@12204>              CMP.b #":",d0
0002A740 <AmiBlitz3.ab3@12205>              BNE 'loop_lr                         ;:@
0002A744 <AmiBlitz3.ab3@12206>              CMP.b #"@",(a5)
0002A748 <AmiBlitz3.ab3@12207>              BNE 'loop_lr
0002A74A <AmiBlitz3.ab3@12208>              ADDQ #1,a5
0002A750 <AmiBlitz3.ab3@12212>   MOVE.w d0,lastchar
0002A754 <AmiBlitz3.ab3@12218>   CMP.b #";",d0
0002A758 <AmiBlitz3.ab3@12219>   BEQ 'done_l11
0002A75A <AmiBlitz3.ab3@12221>   CLR.b (A1)
0002A75C <AmiBlitz3.ab3@12225>   TST.w D2
0002A75E <AmiBlitz3.ab3@12226>  RTS
0002A760 <AmiBlitz3.ab3@12230>   CLR.b (a1)
0002A762 <AmiBlitz3.ab3@12231>   MOVEQ #0,d0
0002A768 <AmiBlitz3.ab3@12232>   MOVE.w d0,lastchar
0002A76A <AmiBlitz3.ab3@12235>   TST.w D2
0002A76C <AmiBlitz3.ab3@12236> RTS
0002A76E <AmiBlitz3.ab3@12242>   MOVE.l (A2),D0
0002A772 <AmiBlitz3.ab3@12245>   BEQ.w 'here
0002A774 <AmiBlitz3.ab3@12246>   MOVEA.l D0,A2
0002A778 <AmiBlitz3.ab3@12247>  BRA.w 'loop
0002A77C <AmiBlitz3.ab3@12250> BRA.w reget
0002A77E <AmiBlitz3.ab3@12256>   MOVE.l (A2),-(A7)
0002A782 <AmiBlitz3.ab3@12257>   BSR.w addlabel
0002A784 <AmiBlitz3.ab3@12258>   MOVE.l (A7)+,(A2)
0002A786 <AmiBlitz3.ab3@12259> RTS
0002A78C <AmiBlitz3.ab3@12264>   CLR.l fp0addr
0002A792 <AmiBlitz3.ab3@12265>   TST.w dirmode
0002A796 <AmiBlitz3.ab3@12266>    BNE.w illdirerr
0002A798 <AmiBlitz3.ab3@12267>   MOVEQ.l #$00,D0
0002A79A <AmiBlitz3.ab3@12268>   MOVE.w D7,D0
0002A79C <AmiBlitz3.ab3@12269>   ADD.w D2,D0
0002A79E <AmiBlitz3.ab3@12270>   ADDQ.w #1,D0
0002A7A0 <AmiBlitz3.ab3@12271>   MOVE.w D0,D2
0002A7A2 <AmiBlitz3.ab3@12272>   ADDQ.l #2,d0
0002A7A4 <AmiBlitz3.ab3@12273>   MOVEQ.l #$01,D1
0002A7AA <AmiBlitz3.ab3@12274>   MOVEA.l _execbase,A6
0002A7B0 <AmiBlitz3.ab3@12275>   MOVE.l mempool2,a0
0002A7B4 <AmiBlitz3.ab3@12276>   JSR _AllocPooled(a6)
0002A7BA <AmiBlitz3.ab3@12278>   MOVE.l lastlabel,a2
0002A7BC <AmiBlitz3.ab3@12279>   MOVE.l D0,(A2)
0002A7BE <AmiBlitz3.ab3@12280>   MOVE.l d0,a0
0002A7C0 <AmiBlitz3.ab3@12281>   CLR.l (a0)
0002A7C6 <AmiBlitz3.ab3@12282>   MOVE.l a0,lastlabel
0002A7C8 <AmiBlitz3.ab3@12283>   MOVE.l d0,A2
0002A7CC <AmiBlitz3.ab3@12284>   LEA -$1(A0,D7.W),A0
0002A7CE <AmiBlitz3.ab3@12285>   MOVE.b D2,(A0)+
0002A7D4 <AmiBlitz3.ab3@12286>   LEA ptr_parameterstore,A1
0002A7D6 <AmiBlitz3.ab3@12287>   MOVEQ #0,d0
0002A7D8 <AmiBlitz3.ab3@12288>   MOVEQ #0,d1
0002A7DA <AmiBlitz3.ab3@12291>   MOVE.b (A1)+,d1
0002A7DE <AmiBlitz3.ab3@12292>    BEQ 'l1
0002A7E4 <AmiBlitz3.ab3@12293>    !hashalgo
0002A7E6 <AmiBlitz3.ab3@12294>    MOVE.b d1,(A0)+
0002A7EA <AmiBlitz3.ab3@12295>  BRA 'loop2a
0002A7EC <AmiBlitz3.ab3@12298>    CLR.b (a0)+
0002A7F2 <AmiBlitz3.ab3@12299>    LEA labelhash,a0
0002A7F8 <AmiBlitz3.ab3@12300>    AND.l #hashsize,d0
0002A7FA <AmiBlitz3.ab3@12301>    ASL.l #2,d0
0002A7FE <AmiBlitz3.ab3@12302>    MOVE.l 0(a0,d0),d1
0002A802 <AmiBlitz3.ab3@12303>    MOVE.l d1,$c(a2)
0002A806 <AmiBlitz3.ab3@12304>    MOVE.l a2,0(a0,d0)
0002A808 <AmiBlitz3.ab3@12305>    MOVEQ #0,d0
0002A80C <AmiBlitz3.ab3@12306> BRA.w reget
0002A812 <AmiBlitz3.ab3@12310>    TST.b newvariable
0002A816 <AmiBlitz3.ab3@12311>    BNE addlabel
0002A81C <AmiBlitz3.ab3@12314>   TST.w dirmode
0002A820 <AmiBlitz3.ab3@12315>    BNE.w illdirerr
0002A822 <AmiBlitz3.ab3@12316>   MOVEQ.l #$00,D0
0002A824 <AmiBlitz3.ab3@12317>   MOVE.w D7,D0
0002A826 <AmiBlitz3.ab3@12318>   ADD.w D2,D0
0002A828 <AmiBlitz3.ab3@12319>   ADDQ.w #1,D0
0002A82A <AmiBlitz3.ab3@12320>   MOVE.w D0,D2
0002A82C <AmiBlitz3.ab3@12321>   MOVEQ.l #$01,D1
0002A832 <AmiBlitz3.ab3@12322>   MOVEA.l _execbase,A6
0002A838 <AmiBlitz3.ab3@12323>   MOVE.l mempool2,a0
0002A83C <AmiBlitz3.ab3@12324>   JSR _AllocPooled(a6)
0002A83E <AmiBlitz3.ab3@12325>   MOVEA.l D0,A0
0002A844 <AmiBlitz3.ab3@12327>   LEA varbase,a2
0002A846 <AmiBlitz3.ab3@12328>   MOVE.l (a2),(a0)
0002A848 <AmiBlitz3.ab3@12329>   MOVE.l A0,(A2)
0002A84A <AmiBlitz3.ab3@12330>   MOVEA.l A0,A2
0002A84E <AmiBlitz3.ab3@12331>   LEA -$1(A0,D7.W),A0
0002A850 <AmiBlitz3.ab3@12332>   MOVE.b D2,(A0)+
0002A856 <AmiBlitz3.ab3@12333>   LEA ptr_parameterstore,A1
0002A858 <AmiBlitz3.ab3@12334>   MOVEQ #0,d0
0002A85A <AmiBlitz3.ab3@12335>   MOVEQ #0,d1
0002A85C <AmiBlitz3.ab3@12338>   MOVE.b (A1)+,d1
0002A860 <AmiBlitz3.ab3@12339>    BEQ 'l12
0002A866 <AmiBlitz3.ab3@12340>    !hashalgo
0002A868 <AmiBlitz3.ab3@12341>    MOVE.b d1,(A0)+
0002A86C <AmiBlitz3.ab3@12342>  BRA 'l11
0002A86E <AmiBlitz3.ab3@12345>   CLR.b (a0)+
0002A874 <AmiBlitz3.ab3@12346>   LEA variablehash,a0
0002A87A <AmiBlitz3.ab3@12347>    AND.l #hashsize,d0
0002A87C <AmiBlitz3.ab3@12348>    ASL.l #2,d0
0002A880 <AmiBlitz3.ab3@12349>    MOVE.l 0(a0,d0),d1
0002A884 <AmiBlitz3.ab3@12350>    MOVE.l d1,$e(a2)
0002A888 <AmiBlitz3.ab3@12351>    MOVE.l a2,0(a0,d0)
0002A88A <AmiBlitz3.ab3@12352>    MOVEQ #0,d0
0002A88E <AmiBlitz3.ab3@12353> BRA.w reget
0002A894 <AmiBlitz3.ab3@12357>   TST.w dirmode
0002A898 <AmiBlitz3.ab3@12358>    BNE.w illdirerr
0002A89A <AmiBlitz3.ab3@12365>   MOVEQ.l #$00,D0
0002A89C <AmiBlitz3.ab3@12366>   MOVE.w D7,D0
0002A89E <AmiBlitz3.ab3@12367>   ADD.w D2,D0
0002A8A0 <AmiBlitz3.ab3@12368>   ADDQ.w #1,D0
0002A8A2 <AmiBlitz3.ab3@12369>   MOVE.w D0,D2
0002A8A4 <AmiBlitz3.ab3@12370>   MOVEQ.l #$01,D1
0002A8AA <AmiBlitz3.ab3@12371>   MOVEA.l _execbase,A6
0002A8B0 <AmiBlitz3.ab3@12372>   MOVE.l mempool2,a0
0002A8B4 <AmiBlitz3.ab3@12373>   JSR _AllocPooled(a6)
0002A8B6 <AmiBlitz3.ab3@12375>   MOVEA.l D0,A0
0002A8B8 <AmiBlitz3.ab3@12376>   MOVE.l A0,(A2)
0002A8BA <AmiBlitz3.ab3@12377>   CLR.l (a0)
0002A8BE <AmiBlitz3.ab3@12378>   CLR.l 8(a0)                                              ;clear next
0002A8C0 <AmiBlitz3.ab3@12379>   MOVEA.l A0,A2
0002A8C4 <AmiBlitz3.ab3@12380>   LEA -$1(A0,D7.W),A0
0002A8C6 <AmiBlitz3.ab3@12381>   MOVE.b D2,(A0)+                                          ;put in struct length
0002A8CC <AmiBlitz3.ab3@12382>   LEA ptr_parameterstore,A1
0002A8CE <AmiBlitz3.ab3@12383>   MOVEQ #0,d0
0002A8D0 <AmiBlitz3.ab3@12384>   MOVEQ #0,d1
0002A8D2 <AmiBlitz3.ab3@12387>   MOVE.b (A1)+,d1
0002A8D4 <AmiBlitz3.ab3@12390>   MOVE.b d1,(A0)+
0002A8D8 <AmiBlitz3.ab3@12391>   BNE.w 'loop2
0002A8DC <AmiBlitz3.ab3@12392> BRA.w reget
0002A8DE <AmiBlitz3.ab3@12396>   MOVEQ.l #$13,D7
0002A8E4 <AmiBlitz3.ab3@12397>   LEA constantbase,A2
0002A8E8 <AmiBlitz3.ab3@12398> BRA.w findlab
0002A8EA <AmiBlitz3.ab3@12402>   MOVEQ.l #$05+8,D7                                        ;#5,d7 org source
0002A8F0 <AmiBlitz3.ab3@12403>   LEA xinclude_base,A2
0002A8F4 <AmiBlitz3.ab3@12404> BRA.w findlab
0002A8F6 <AmiBlitz3.ab3@12408>   MOVEQ.l #$09,D7
0002A8FC <AmiBlitz3.ab3@12409>   LEA firstconst,A2
0002A900 <AmiBlitz3.ab3@12410> BRA.w findlab
0002A902 <AmiBlitz3.ab3@12414>   MOVEQ.l #$0d,D7                                          ;find macro
0002A908 <AmiBlitz3.ab3@12415>   LEA macrobase,A2
0002A90C <AmiBlitz3.ab3@12416> BRA.w findlab
0002A912 <AmiBlitz3.ab3@12420>   LEA labelhash,A2
0002A914 <AmiBlitz3.ab3@12421>   MOVEQ.l #$13,D7
0002A916 <AmiBlitz3.ab3@12422>   EXT.l d2
0002A91C <AmiBlitz3.ab3@12423>   LEA ptr_parameterstore,A0
0002A91E <AmiBlitz3.ab3@12424>   MOVEQ #0,d0
0002A920 <AmiBlitz3.ab3@12425>   MOVEQ #0,d1
0002A922 <AmiBlitz3.ab3@12428>     MOVE.b (a0)+,d1
0002A926 <AmiBlitz3.ab3@12429>     BEQ 'l15
0002A92C <AmiBlitz3.ab3@12430>     !hashalgo
0002A930 <AmiBlitz3.ab3@12431>  BRA 'l20
0002A936 <AmiBlitz3.ab3@12434>   AND.l #hashsize,d0
0002A938 <AmiBlitz3.ab3@12435>   ASL.l #2,d0
0002A93C <AmiBlitz3.ab3@12436>   MOVE.l 0(a2,d0),d0
0002A940 <AmiBlitz3.ab3@12437>  BRA 'l11
0002A944 <AmiBlitz3.ab3@12440>   MOVE.l $c(A2),D0                                         ;find label
0002A948 <AmiBlitz3.ab3@12443>   BEQ findlab_no
0002A94A <AmiBlitz3.ab3@12444>   MOVEA.l D0,A2
0002A94C <AmiBlitz3.ab3@12445>   MOVEQ.l #$00,D0
0002A950 <AmiBlitz3.ab3@12446>   MOVE.b -$1(A2,D7.l),D0
0002A956 <AmiBlitz3.ab3@12447>   LEA ptr_parameterstore,A0
0002A958 <AmiBlitz3.ab3@12448>   SUB.l D7,D0
0002A95A <AmiBlitz3.ab3@12449>   SUBQ.l #1,D0
0002A95C <AmiBlitz3.ab3@12450>   CMP.l D0,D2
0002A960 <AmiBlitz3.ab3@12451>    BNE.b 'l10
0002A964 <AmiBlitz3.ab3@12452>   LEA $0(A2,D7.W),A1
0002A966 <AmiBlitz3.ab3@12453>   SUBQ.l #1,D0
0002A968 <AmiBlitz3.ab3@12456>     MOVE.b (a1)+,d1
0002A96A <AmiBlitz3.ab3@12457>     CMP.b (a0)+,d1
0002A96E <AmiBlitz3.ab3@12459>     BNE.b 'l10
0002A972 <AmiBlitz3.ab3@12460>   DBF D0,'l201
0002A976 <AmiBlitz3.ab3@12462>   BSR.w reget
0002A978 <AmiBlitz3.ab3@12463>   CMP.w D0,D0
0002A97A <AmiBlitz3.ab3@12464> RTS
0002A97C <AmiBlitz3.ab3@12468>   MOVEQ.l #$0B,D7
0002A980 <AmiBlitz3.ab3@12469> BRA.w findlab
0002A986 <AmiBlitz3.ab3@12473>   LEA firstproc,A2
0002A98C <AmiBlitz3.ab3@12474>   MOVE.l #$21+#funcentry_extend,D7
0002A990 <AmiBlitz3.ab3@12475> BRA findlab
0002A996 <AmiBlitz3.ab3@12479>   LEA firstfor,A2
0002A998 <AmiBlitz3.ab3@12480>   MOVEQ.l #$11,D7
0002A99C <AmiBlitz3.ab3@12481> BRA.w findlab
0002A99E <AmiBlitz3.ab3@12485>   MOVEQ.l #$0F,D7
0002A9A2 <AmiBlitz3.ab3@12486> BRA.w findlab
0002A9A4 <AmiBlitz3.ab3@12490>   MOVEQ.l #$0F+4,D7
0002A9AA <AmiBlitz3.ab3@12491>   TST.b newvariable
0002A9AE <AmiBlitz3.ab3@12492>    BNE.w findlab
0002A9B4 <AmiBlitz3.ab3@12493>   LEA variablehash,A2
0002A9BA <AmiBlitz3.ab3@12494>   LEA ptr_parameterstore,A0
0002A9BC <AmiBlitz3.ab3@12495>   MOVEQ #0,d0
0002A9BE <AmiBlitz3.ab3@12496>   MOVEQ #0,d1
0002A9C0 <AmiBlitz3.ab3@12499>     MOVE.b (a0)+,d1
0002A9C4 <AmiBlitz3.ab3@12500>     BEQ 'l15
0002A9CA <AmiBlitz3.ab3@12501>     !hashalgo
0002A9CE <AmiBlitz3.ab3@12502>  BRA 'l20
0002A9D4 <AmiBlitz3.ab3@12505>   AND.l #hashsize,d0
0002A9D6 <AmiBlitz3.ab3@12506>   ASL.l #2,d0
0002A9DA <AmiBlitz3.ab3@12507>   MOVE.l 0(a2,d0),d0
0002A9DE <AmiBlitz3.ab3@12508>  BRA 'l11
0002A9E2 <AmiBlitz3.ab3@12511>   MOVE.l $e(A2),D0                                         ;find label
0002A9E6 <AmiBlitz3.ab3@12514>   BEQ findlab_no
0002A9E8 <AmiBlitz3.ab3@12515>   MOVEA.l D0,A2
0002A9EA <AmiBlitz3.ab3@12516>   MOVEQ.l #$00,D0
0002A9EE <AmiBlitz3.ab3@12517>   MOVE.b -$1(A2,D7.W),D0
0002A9F4 <AmiBlitz3.ab3@12518>   LEA ptr_parameterstore,A0
0002A9F6 <AmiBlitz3.ab3@12519>   SUB.w D7,D0
0002A9F8 <AmiBlitz3.ab3@12520>   SUBQ.l #1,D0
0002A9FA <AmiBlitz3.ab3@12521>   CMP.w D0,D2
0002A9FE <AmiBlitz3.ab3@12522>    BNE.b 'l10
0002AA02 <AmiBlitz3.ab3@12523>   LEA $0(A2,D7.W),A1
0002AA04 <AmiBlitz3.ab3@12524>   SUBQ.l #1,D0
0002AA06 <AmiBlitz3.ab3@12527>     MOVE.b (a1)+,d1
0002AA08 <AmiBlitz3.ab3@12528>     CMP.b (a0)+,d1
0002AA0C <AmiBlitz3.ab3@12530>     BNE.b 'l10
0002AA10 <AmiBlitz3.ab3@12531>   DBF D0,'l201
0002AA14 <AmiBlitz3.ab3@12533>   BSR.w reget
0002AA16 <AmiBlitz3.ab3@12534>   CMP.w D0,D0
0002AA18 <AmiBlitz3.ab3@12535> RTS
0002AA1A <AmiBlitz3.ab3@12548>     MOVE.l (A2),D0                                         ;find label
0002AA1E <AmiBlitz3.ab3@12549>      BEQ.b findlab_no
0002AA20 <AmiBlitz3.ab3@12550>     MOVEA.l D0,A2
0002AA22 <AmiBlitz3.ab3@12551>     MOVEQ.l #$00,D0
0002AA26 <AmiBlitz3.ab3@12552>     MOVE.b -$1(A2,D7.W),D0
0002AA28 <AmiBlitz3.ab3@12553>     SUB.l D7,D0
0002AA2A <AmiBlitz3.ab3@12554>     SUBQ.l #1,D0
0002AA2C <AmiBlitz3.ab3@12555>   CMP.w D0,D2
0002AA30 <AmiBlitz3.ab3@12556>   BNE.b 'loop
0002AA34 <AmiBlitz3.ab3@12558>   LEA $0(A2,D7.W),A1
0002AA3A <AmiBlitz3.ab3@12559>   LEA ptr_parameterstore,A0
0002AA3C <AmiBlitz3.ab3@12560>   SUBQ.l #1,D0
0002AA3E <AmiBlitz3.ab3@12563>     MOVE.b (a1)+,d1
0002AA40 <AmiBlitz3.ab3@12564>     CMP.b (a0)+,d1
0002AA44 <AmiBlitz3.ab3@12566>     BNE.b 'loop
0002AA48 <AmiBlitz3.ab3@12567>   DBF D0,'loop2
0002AA4C <AmiBlitz3.ab3@12569>   BSR.w reget
0002AA4E <AmiBlitz3.ab3@12570>   CMP.w D0,D0
0002AA50 <AmiBlitz3.ab3@12571> RTS
0002AA54 <AmiBlitz3.ab3@12574>   BSR.w reget
0002AA56 <AmiBlitz3.ab3@12575>   MOVEQ.l #-$01,D1
0002AA58 <AmiBlitz3.ab3@12576> RTS
0002AA5E <AmiBlitz3.ab3@12580>   MOVEA.l alllocals,A4
0002AA64 <AmiBlitz3.ab3@12581>   CLR.l alllocals
0002AA68 <AmiBlitz3.ab3@12585>     CMPA.w #$0,A4
0002AA6C <AmiBlitz3.ab3@12586>      BEQ.b 'done
0002AA70 <AmiBlitz3.ab3@12587>     MOVEA.l $4(A4),A3
0002AA74 <AmiBlitz3.ab3@12589>     MOVEA.l $8(A4),A3
0002AA76 <AmiBlitz3.ab3@12591>     MOVEA.l A4,A1
0002AA78 <AmiBlitz3.ab3@12592>     MOVEA.l (A4),A4
0002AA7A <AmiBlitz3.ab3@12593>     MOVEQ.l #$0C,D0
0002AA80 <AmiBlitz3.ab3@12594>     MOVEA.l _execbase,A6
0002AA86 <AmiBlitz3.ab3@12596>     MOVE.l mempool,a0
0002AA8A <AmiBlitz3.ab3@12597>     JSR _FreePooled(A6)
0002AA8E <AmiBlitz3.ab3@12600>  BRA.b 'loop
0002AA94 <AmiBlitz3.ab3@12604>   CLR.l firstglob                                          ;fix 2*aclearallvar called
0002AA9A <AmiBlitz3.ab3@12605>   CLR.l firstlocal
0002AAA0 <AmiBlitz3.ab3@12606>   CLR.l sharebase
0002AAA6 <AmiBlitz3.ab3@12607>   TST.l mempool2
0002AAAA <AmiBlitz3.ab3@12608>   BEQ 'done_l10
0002AAB0 <AmiBlitz3.ab3@12610>   MOVEA.l _execbase,A6
0002AAB6 <AmiBlitz3.ab3@12611>   MOVE.l mempool2,a0
0002AABC <AmiBlitz3.ab3@12612>   CLR.l mempool2
0002AAC0 <AmiBlitz3.ab3@12613>   JSR _DeletePool(a6)
0002AAC6 <AmiBlitz3.ab3@12616>   MOVE.l _execbase,a6
0002AACC <AmiBlitz3.ab3@12617>   MOVE.l #$10000,d0
0002AAD2 <AmiBlitz3.ab3@12618>   MOVE.l #80000,d1
0002AAD4 <AmiBlitz3.ab3@12619>   MOVE.l d1,d2
0002AAD8 <AmiBlitz3.ab3@12620>   JSR _CreatePool(a6)
0002AADE <AmiBlitz3.ab3@12621>   MOVE.l d0,mempool2
0002AAE0 <AmiBlitz3.ab3@12623> RTS
0002AAE4 <AmiBlitz3.ab3@12627>   CMPA.w #$0,A3
0002AAE8 <AmiBlitz3.ab3@12628>    BEQ.w 'done
0002AAEA <AmiBlitz3.ab3@12629>   MOVEA.l A3,A1
0002AAEC <AmiBlitz3.ab3@12630>   MOVEA.l (A3),A3
0002AAEE <AmiBlitz3.ab3@12631>   MOVEQ.l #$00,D0
0002AAF2 <AmiBlitz3.ab3@12632>   MOVE.b $E(A1),D0
0002AAF8 <AmiBlitz3.ab3@12633>   MOVEA.l _execbase,A6
0002AAFE <AmiBlitz3.ab3@12635>   MOVE.l mempool2,a0
0002AB02 <AmiBlitz3.ab3@12636>   JSR _FreePooled(A6)
0002AB06 <AmiBlitz3.ab3@12639>  BRA.w freevars
0002AB0A <AmiBlitz3.ab3@12643>     CMPA.w #$0,A3
0002AB0E <AmiBlitz3.ab3@12644>      BEQ.w 'done
0002AB10 <AmiBlitz3.ab3@12645>     MOVEA.l A3,A1
0002AB12 <AmiBlitz3.ab3@12646>     MOVEA.l (A3),A3
0002AB14 <AmiBlitz3.ab3@12647>     MOVEQ.l #$00,D0
0002AB18 <AmiBlitz3.ab3@12648>     MOVE.b $E+4(A1),D0
0002AB1E <AmiBlitz3.ab3@12649>     MOVEA.l _execbase,A6
0002AB24 <AmiBlitz3.ab3@12650>     MOVE.l mempool2,a0
0002AB28 <AmiBlitz3.ab3@12651>     JSR _FreePooled(A6)
0002AB2C <AmiBlitz3.ab3@12652>  BRA.w 'freevarsb
0002AB2E <AmiBlitz3.ab3@12656> RTS
0002AB34 <AmiBlitz3.ab3@12660>   MOVEA.l currentlabeladdr,A0
0002AB3A <AmiBlitz3.ab3@12661>   MOVE.l a0,lastlabel
0002AB3C <AmiBlitz3.ab3@12662>   MOVEA.l (A0),A2
0002AB3E <AmiBlitz3.ab3@12663>   CLR.l (A0)
0002AB44 <AmiBlitz3.ab3@12664>   MOVEA.l _execbase,A6
0002AB48 <AmiBlitz3.ab3@12667>   CMPA.w #$0,A2
0002AB4C <AmiBlitz3.ab3@12668>    BEQ.w 'done
0002AB50 <AmiBlitz3.ab3@12669>   MOVE.l $4(A2),D0
0002AB54 <AmiBlitz3.ab3@12670>   BTST #$0,D0
0002AB58 <AmiBlitz3.ab3@12671>    BNE.w 'skip
0002AB5A <AmiBlitz3.ab3@12672>   MOVEA.l D0,A3
0002AB5E <AmiBlitz3.ab3@12675>     CMPA.w #$0,A3
0002AB62 <AmiBlitz3.ab3@12676>      BEQ.w 'skip
0002AB64 <AmiBlitz3.ab3@12677>     MOVEA.l A3,A1
0002AB66 <AmiBlitz3.ab3@12678>     MOVEA.l (A3),A3
0002AB68 <AmiBlitz3.ab3@12679>     MOVEQ.l #$0C+2,D0                                      ;cancel fix
0002AB6E <AmiBlitz3.ab3@12680>     MOVE.l mempool,a0
0002AB72 <AmiBlitz3.ab3@12681>     JSR _FreePooled(A6)
0002AB76 <AmiBlitz3.ab3@12682>  BRA.w 'loop2
0002AB78 <AmiBlitz3.ab3@12685>   MOVEQ.l #$00,D0
0002AB7C <AmiBlitz3.ab3@12686>   MOVE.b $12(A2),D0
0002AB7E <AmiBlitz3.ab3@12687>   MOVEA.l A2,A1
0002AB80 <AmiBlitz3.ab3@12688>   MOVEA.l (A2),A2
0002AB86 <AmiBlitz3.ab3@12689>   MOVE.l mempool2,a0
0002AB8A <AmiBlitz3.ab3@12691>  BRA.w 'loop
0002AB8C <AmiBlitz3.ab3@12694> RTS
0002AB92 <AmiBlitz3.ab3@12698>   MOVEA.l firstpend,A3
0002AB98 <AmiBlitz3.ab3@12699>   CLR.l firstpend
0002AB9E <AmiBlitz3.ab3@12700>   MOVEA.l _execbase,A6
0002ABA2 <AmiBlitz3.ab3@12703>     CMPA.w #$0,A3
0002ABA6 <AmiBlitz3.ab3@12704>      BEQ.w 'done
0002ABA8 <AmiBlitz3.ab3@12705>     MOVEA.l A3,A1
0002ABAA <AmiBlitz3.ab3@12706>     MOVEQ.l #$08,D0
0002ABAC <AmiBlitz3.ab3@12707>     MOVEA.l (A3),A3
0002ABB2 <AmiBlitz3.ab3@12708>     MOVE.l mempool,a0
0002ABB6 <AmiBlitz3.ab3@12709>     JSR _FreePooled(A6)
0002ABBA <AmiBlitz3.ab3@12710>  BRA.w 'fpnd2
0002ABBC <AmiBlitz3.ab3@12713> RTS
0002ABC2 <AmiBlitz3.ab3@12717>   MOVEA.l firstproc,A2
0002ABC8 <AmiBlitz3.ab3@12718>   CLR.l firstproc
0002ABCE <AmiBlitz3.ab3@12719>   MOVEA.l _execbase,A6
0002ABD2 <AmiBlitz3.ab3@12722>     CMPA.w #$0,A2
0002ABD6 <AmiBlitz3.ab3@12723>      BEQ.w 'done
0002ABD8 <AmiBlitz3.ab3@12724>     MOVEA.l A2,A1
0002ABDA <AmiBlitz3.ab3@12725>     MOVEA.l (A2),A2
0002ABDC <AmiBlitz3.ab3@12726>     MOVEQ.l #$00,D0
0002ABE0 <AmiBlitz3.ab3@12727>     MOVE.b $20+#funcentry_extend(A1),D0
0002ABE6 <AmiBlitz3.ab3@12728>     MOVE.l mempool2,a0
0002ABEA <AmiBlitz3.ab3@12729>     JSR _FreePooled(A6)
0002ABEE <AmiBlitz3.ab3@12730> BRA.w 'loop
0002ABF0 <AmiBlitz3.ab3@12733> RTS
0002ABF4 <AmiBlitz3.ab3@12737>   CMPA.w #$0,A2
0002ABF8 <AmiBlitz3.ab3@12738>    BEQ.w 'done
0002ABFC <AmiBlitz3.ab3@12739>   MOVEA.l $4(A2),A3
0002AC00 <AmiBlitz3.ab3@12740>   CMPA.w #$FF,A3
0002AC04 <AmiBlitz3.ab3@12741>    BEQ.w 'noway
0002AC08 <AmiBlitz3.ab3@12745>    BSR.w freevars
0002AC0A <AmiBlitz3.ab3@12748>     MOVEA.l A2,A1
0002AC0C <AmiBlitz3.ab3@12749>     MOVEA.l (A2),A2
0002AC0E <AmiBlitz3.ab3@12750>     MOVEQ.l #$00,D0
0002AC12 <AmiBlitz3.ab3@12751>     MOVE.b $A(A1),D0
0002AC18 <AmiBlitz3.ab3@12752>     MOVEA.l _execbase,A6
0002AC1E <AmiBlitz3.ab3@12753>     MOVE.l mempool2,a0
0002AC22 <AmiBlitz3.ab3@12754>     JSR _FreePooled(A6)
0002AC26 <AmiBlitz3.ab3@12755>  BRA.w freetypes
0002AC28 <AmiBlitz3.ab3@12758> RTS
0002AC2E <AmiBlitz3.ab3@12767>   JSR usevars
0002AC34 <AmiBlitz3.ab3@12769>   CLR.w notshared
0002AC3A <AmiBlitz3.ab3@12770>   CLR.w varmode           ;local mode
0002AC40 <AmiBlitz3.ab3@12771>   MOVE.w proceduremode,D1
0002AC44 <AmiBlitz3.ab3@12772>    BNE.w fvarlocal
0002AC4A <AmiBlitz3.ab3@12774>   LEA varbase,A2
0002AC50 <AmiBlitz3.ab3@12776>   LEA ptr_parameterstore,a0
0002AC54 <AmiBlitz3.ab3@12777>   CMP.b #$22,(a0)
0002AC58 <AmiBlitz3.ab3@12778>   BNE fvarback
0002AC5A <AmiBlitz3.ab3@12779>   MOVEQ #0,d0
0002AC60 <AmiBlitz3.ab3@12780>  JMP error
0002AC64 <AmiBlitz3.ab3@12785>   BSR.w findvariable
0002AC68 <AmiBlitz3.ab3@12788>   BNE.w fvaradd
0002AC6E <AmiBlitz3.ab3@12793>   MOVE.b flagmask+1,D1
0002AC72 <AmiBlitz3.ab3@12794>   MOVE.b $7(A2),D3
0002AC74 <AmiBlitz3.ab3@12795>   EOR.b D3,D1
0002AC78 <AmiBlitz3.ab3@12797>   BNE 'l2
0002AC80 <AmiBlitz3.ab3@12798>   CMP.b #2,nowdeclare
0002AC84 <AmiBlitz3.ab3@12799>   BEQ errormsg_declaredtwice
0002AC88 <AmiBlitz3.ab3@12800>  BRA.w fvarfound
0002AC8C <AmiBlitz3.ab3@12804>   BSR.w findlab
0002AC90 <AmiBlitz3.ab3@12806>   BNE 'l1
0002AC98 <AmiBlitz3.ab3@12807>   CMP.b #2,nowdeclare
0002AC9C <AmiBlitz3.ab3@12808>   BEQ errormsg_declaredtwice
0002AC9E <AmiBlitz3.ab3@12809>   CMP.w d0,d0
0002ACA2 <AmiBlitz3.ab3@12813>  BRA.w 'more
0002ACA4 <AmiBlitz3.ab3@12817>    MOVE.l a2,-(a7)
0002ACAA <AmiBlitz3.ab3@12818>    LEA sharebase,a2
0002ACAC <AmiBlitz3.ab3@12819>    MOVEQ #$f+4,d7
0002ACB0 <AmiBlitz3.ab3@12820>    BSR.w findlab
0002ACB4 <AmiBlitz3.ab3@12821>    BEQ 'l2x
0002ACB6 <AmiBlitz3.ab3@12822>    MOVE.l (a7)+,a2
0002ACBA <AmiBlitz3.ab3@12823>  BRA 'cont
0002ACBC <AmiBlitz3.ab3@12826>   ADDQ.l #4,a7
0002ACC2 <AmiBlitz3.ab3@12827>   CLR.w varmode
0002ACC8 <AmiBlitz3.ab3@12828>   MOVE.b flagmask+1,D1
0002ACCC <AmiBlitz3.ab3@12829>   MOVE.b $7(A2),D3
0002ACCE <AmiBlitz3.ab3@12830>   EOR.b D3,D1
0002ACD2 <AmiBlitz3.ab3@12831>   BNE vardeclareerr
0002ACD6 <AmiBlitz3.ab3@12832>  BRA fvarfound
0002ACDC <AmiBlitz3.ab3@12836>    MOVE.w nonew,D1
0002ACE0 <AmiBlitz3.ab3@12837>    BNE.w nonewerr
0002ACE6 <AmiBlitz3.ab3@12839>    TST.b nowdeclare
0002ACEA <AmiBlitz3.ab3@12840>    BNE 'l2b
0002ACF0 <AmiBlitz3.ab3@12841>    TST.b declare2
0002ACF4 <AmiBlitz3.ab3@12842>    BEQ 'l1b
0002ACF8 <AmiBlitz3.ab3@12843>    CMP.b #$2e,d0
0002ACFC <AmiBlitz3.ab3@12844>    BEQ 'l2b
0002AD00 <AmiBlitz3.ab3@12845>    CMP.b #"$",d0
0002AD04 <AmiBlitz3.ab3@12846>    BEQ 'l2b
0002AD08 <AmiBlitz3.ab3@12847>  BRA vardeclareerr
0002AD0E <AmiBlitz3.ab3@12850>   TST.b declare
0002AD12 <AmiBlitz3.ab3@12851>    BNE vardeclareerr
0002AD16 <AmiBlitz3.ab3@12855>   BSR.w addvariable      ;create var
0002AD1C <AmiBlitz3.ab3@12856>   NOT.w notshared        ;set added flag
0002AD1E <AmiBlitz3.ab3@12857>   MOVEA.l A2,A3
0002AD24 <AmiBlitz3.ab3@12858>   MOVEA.l defaulttype,A2
0002AD28 <AmiBlitz3.ab3@12859>   CMP.w #$2E,D0         ;'.'
0002AD2C <AmiBlitz3.ab3@12860>    BEQ.w 'clapton
0002AD30 <AmiBlitz3.ab3@12861>   CMP.w #$24,D0         ;'$'
0002AD34 <AmiBlitz3.ab3@12862>    BNE.w 'usedef
0002AD3A <AmiBlitz3.ab3@12863>   LEA newtype_string,A2
0002AD3E <AmiBlitz3.ab3@12864>    BSR.w get1bytemain
0002AD42 <AmiBlitz3.ab3@12865>  BRA.w 'usedef
0002AD46 <AmiBlitz3.ab3@12868>   BSR.w getparameter2
0002AD4C <AmiBlitz3.ab3@12869>   LEA newtypebase,A2
0002AD50 <AmiBlitz3.ab3@12870>    BSR.w findtype
0002AD54 <AmiBlitz3.ab3@12871>    BNE.w notypeerr
0002AD5A <AmiBlitz3.ab3@12874>   CMPA.l #newtype_byte,A2
0002AD5E <AmiBlitz3.ab3@12875>    BEQ.w 'byte
0002AD64 <AmiBlitz3.ab3@12876>   MOVE.w varmode,D1
0002AD68 <AmiBlitz3.ab3@12877>    BNE.w 'pit
0002AD6E <AmiBlitz3.ab3@12878>   ADDQ.w #1,globalvarpointer
0002AD76 <AmiBlitz3.ab3@12881>   BCLR #$0,globalvarpointer+1
0002AD7A <AmiBlitz3.ab3@12884>   MOVE.l A2,$A(A3)           ;set type
0002AD82 <AmiBlitz3.ab3@12885>   MOVE.w flagmask,$6(A3)                                  ;??????????
0002AD84 <AmiBlitz3.ab3@12886>   MOVEQ.l #$04,D1
0002AD8C <AmiBlitz3.ab3@12887>   BTST #$0,flagmask+1
0002AD90 <AmiBlitz3.ab3@12888>    BNE.w 'skip3
0002AD98 <AmiBlitz3.ab3@12889>   BTST #$1,flagmask+1
0002AD9C <AmiBlitz3.ab3@12890>    BNE.w 'skip3
0002ADA4 <AmiBlitz3.ab3@12891>   CMPI.l #$100,$4(A2)
0002ADA8 <AmiBlitz3.ab3@12892>    BCC.w 'skip3
0002ADAC <AmiBlitz3.ab3@12893>   MOVE.w $8(A2),D1
0002ADB2 <AmiBlitz3.ab3@12896>   TST.w varmode
0002ADB6 <AmiBlitz3.ab3@12897>    BEQ.w fvaradd_pit2
0002ADB8 <AmiBlitz3.ab3@12898>   NEG.w D1
0002ADBE <AmiBlitz3.ab3@12899>   ADD.w D1,globalvarpointer
0002ADC6 <AmiBlitz3.ab3@12900>   MOVE.w globalvarpointer,$4(A3)
0002ADC8 <AmiBlitz3.ab3@12901>  RTS
0002ADD0 <AmiBlitz3.ab3@12904>   MOVE.w globalvarpointer,$4(A3)
0002ADD6 <AmiBlitz3.ab3@12905>   ADD.w D1,globalvarpointer
0002ADD8 <AmiBlitz3.ab3@12906> RTS
0002ADDC <AmiBlitz3.ab3@12911>    BSR.w getparameter2
0002ADE2 <AmiBlitz3.ab3@12912>   LEA newtypebase,A2
0002ADE6 <AmiBlitz3.ab3@12913>    BSR.w findtype
0002ADEA <AmiBlitz3.ab3@12914>    BNE.w notypeerr
0002ADF0 <AmiBlitz3.ab3@12917>   CMPA.l #newtype_byte,A2
0002ADF4 <AmiBlitz3.ab3@12918>    BEQ.w 'byte
0002ADFA <AmiBlitz3.ab3@12919>   MOVE.w varmode,D1
0002ADFE <AmiBlitz3.ab3@12920>    BNE.w 'pit
0002AE04 <AmiBlitz3.ab3@12921>   ADDQ.w #1,globalvarpointer
0002AE0C <AmiBlitz3.ab3@12924>   BCLR #$0,globalvarpointer+1
0002AE10 <AmiBlitz3.ab3@12927>   MOVE.l A2,$A(A3)              ;set type
0002AE18 <AmiBlitz3.ab3@12928>   MOVE.w flagmask,$6(A3)                                  ;??????????
0002AE1A <AmiBlitz3.ab3@12930>   MOVEQ.l #$04,D1
0002AE22 <AmiBlitz3.ab3@12931>   BTST #$0,flagmask+1
0002AE26 <AmiBlitz3.ab3@12932>    BNE.w 'skip3
0002AE2E <AmiBlitz3.ab3@12933>   BTST #$1,flagmask+1
0002AE32 <AmiBlitz3.ab3@12934>    BNE.w 'skip3
0002AE3A <AmiBlitz3.ab3@12935>   CMPI.l #$100,$4(A2)
0002AE3E <AmiBlitz3.ab3@12936>    BCC.w 'skip3
0002AE42 <AmiBlitz3.ab3@12937>   MOVE.w $8(A2),D1
0002AE48 <AmiBlitz3.ab3@12940>   TST.w varmode
0002AE4C <AmiBlitz3.ab3@12941> BRA.w fvaradd_pit2
0002AE52 <AmiBlitz3.ab3@12951>   LEA firstglob,A2
0002AE56 <AmiBlitz3.ab3@12952>    BSR.w findvariable2
0002AE5A <AmiBlitz3.ab3@12955>   BNE.w 'hendrix
0002AE60 <AmiBlitz3.ab3@12956>   MOVE.b flagmask+1,D1
0002AE64 <AmiBlitz3.ab3@12957>   MOVE.b $7(A2),D3
0002AE66 <AmiBlitz3.ab3@12958>   EOR.b D3,D1
0002AE6A <AmiBlitz3.ab3@12959>    BEQ.w fvarfound
0002AE6E <AmiBlitz3.ab3@12960>    BSR.w findlab
0002AE72 <AmiBlitz3.ab3@12961>  BRA.w 'more
0002AE7A <AmiBlitz3.ab3@12964>   MOVE.w #$FFFF,varmode           ; was -1
0002AE80 <AmiBlitz3.ab3@12965>   MOVE.w globalvarpointer,-(A7)
0002AE8A <AmiBlitz3.ab3@12966>   MOVE.w locvaroff,globalvarpointer
0002AE90 <AmiBlitz3.ab3@12967>   LEA firstlocal,A2
0002AE98 <AmiBlitz3.ab3@12969>   MOVE.b #1,newvariable
0002AE9C <AmiBlitz3.ab3@12971>    BSR.w fvarback
0002AEA2 <AmiBlitz3.ab3@12973>   CLR.b newvariable
0002AEAC <AmiBlitz3.ab3@12975>   MOVE.w globalvarpointer,locvaroff
0002AEB2 <AmiBlitz3.ab3@12976>   MOVE.w (A7)+,globalvarpointer
0002AEB4 <AmiBlitz3.ab3@12977> RTS
0002AEB6 <AmiBlitz3.ab3@12981>   MOVEA.l A2,A3
0002AEBA <AmiBlitz3.ab3@12985>   CMP.w #$2E,D0         ;'.'
0002AEBE <AmiBlitz3.ab3@12986>    BEQ.w 'skipsh
0002AEC2 <AmiBlitz3.ab3@12987>   CMP.w #$24,D0         ;'$'
0002AEC6 <AmiBlitz3.ab3@12988>    BNE.w 'skip4
0002AECE <AmiBlitz3.ab3@12989>   CMPI.l #newtype_string,$A(A3)
0002AED2 <AmiBlitz3.ab3@12990>    BNE.w rongtypeerr
0002AED6 <AmiBlitz3.ab3@12991>    BSR.w get1bytemain
0002AEDA <AmiBlitz3.ab3@12992>  BRA.w 'skip4
0002AEDE <AmiBlitz3.ab3@12995>    BSR.w getparameter2
0002AEE4 <AmiBlitz3.ab3@12996>   LEA newtypebase,A2
0002AEE8 <AmiBlitz3.ab3@12997>    BSR.w findtype
0002AEEC <AmiBlitz3.ab3@12998>    BNE.w notypeerr
0002AEF0 <AmiBlitz3.ab3@12999>   CMPA.l $A(A3),A2
0002AEF4 <AmiBlitz3.ab3@13000>    BNE.w rongtypeerr
0002AEFC <AmiBlitz3.ab3@13003>   BTST #$0,flagmask+1
0002AF00 <AmiBlitz3.ab3@13004>    BEQ.w 'skipz
0002AF06 <AmiBlitz3.ab3@13006>   BTST #$0,$7(A3)
0002AF0A <AmiBlitz3.ab3@13007>    BEQ.w pointerr
0002AF0E <AmiBlitz3.ab3@13010>   MOVEA.l $A(A3),A2
0002AF10 <AmiBlitz3.ab3@13011> RTS
0002AF12 <AmiBlitz3.ab3@13015>    TST.l D3                                                ;newtype >32kb  .w to .l
0002AF16 <AmiBlitz3.ab3@13016>    BEQ.w 'done2a
0002AF20 <AmiBlitz3.ab3@13018>    MOVE.l destpointer,loada
0002AF24 <AmiBlitz3.ab3@13021>  BRA 'done3a
0002AF28 <AmiBlitz3.ab3@13024>   CMP.w #$9,D3                                             ;_addq_arrays
0002AF2C <AmiBlitz3.ab3@13025>    BCC.w 'done3a
0002AF32 <AmiBlitz3.ab3@13027>   MOVE.w d3,arrayoffset
0002AF36 <AmiBlitz3.ab3@13029>   ANDI.w #$7,D3
0002AF38 <AmiBlitz3.ab3@13030>   LSL.w #8,D3
0002AF3A <AmiBlitz3.ab3@13031>   LSL.w #1,D3
0002AF42 <AmiBlitz3.ab3@13032>   ANDI.w #$F1FF,addqa0
0002AF48 <AmiBlitz3.ab3@13033>   OR.w D3,addqa0
0002AF4E <AmiBlitz3.ab3@13034>   MOVE.w addqa0,D1
0002AF52 <AmiBlitz3.ab3@13035>  BRA.w writeword
0002AF58 <AmiBlitz3.ab3@13039>   CMP.l #$7fff,d3                                          ;>32kb newtypes
0002AF5C <AmiBlitz3.ab3@13040>   BGT longoffset
0002AF62 <AmiBlitz3.ab3@13042>   MOVE.w D3,leaa0a0+2
0002AF68 <AmiBlitz3.ab3@13044>   MOVE.w d3,arrayoffset
0002AF6E <AmiBlitz3.ab3@13046>   MOVE.l leaa0a0,D1
0002AF72 <AmiBlitz3.ab3@13047>   BSR.w writelong
0002AF74 <AmiBlitz3.ab3@13050> RTS
0002AF78 <AmiBlitz3.ab3@13054>    MOVE.w #$d5fc,d1
0002AF7C <AmiBlitz3.ab3@13055>    BSR writeword
0002AF7E <AmiBlitz3.ab3@13056>    MOVE.l d3,d1
0002AF82 <AmiBlitz3.ab3@13057>    BSR.w writelong
0002AF84 <AmiBlitz3.ab3@13058> RTS
0002AF88 <AmiBlitz3.ab3@13062>   Dc.w $b0ad,0000                                          ;cmp.l $0(A5),D0    ;nooptimize
0002AF8C <AmiBlitz3.ab3@13065>    BCS.w arrchk3                                           
0002AF92 <AmiBlitz3.ab3@13066>    JSR $20000                                              ;jsr 0
0002AF98 <AmiBlitz3.ab3@13077>   TST.b fast
0002AF9C <AmiBlitz3.ab3@13078>   BEQ 'l1
0002AF9E <AmiBlitz3.ab3@13079>    MOVEQ #0,d1                                             ;faster arrays
0002AFA4 <AmiBlitz3.ab3@13080>    MOVE.w regnum,d2
0002AFA6 <AmiBlitz3.ab3@13081>    MOVE.w d2,d1
0002AFA8 <AmiBlitz3.ab3@13082>    LSL.w #8,d1
0002AFAA <AmiBlitz3.ab3@13083>    LSL.w #4,d1
0002AFAC <AmiBlitz3.ab3@13084>    ADD.w d2,d1
0002AFB2 <AmiBlitz3.ab3@13085>    OR.l #$4c2d0000,d1
0002AFB8 <AmiBlitz3.ab3@13086>    TST.w varmode
0002AFBC <AmiBlitz3.ab3@13087>    BEQ 'l1a
0002AFC0 <AmiBlitz3.ab3@13088>    BCLR #16,d1
0002AFC4 <AmiBlitz3.ab3@13091>    BSR writelong
0002AFC8 <AmiBlitz3.ab3@13092>    MOVE.w $4(A7),D1
0002AFCC <AmiBlitz3.ab3@13093>    BSR.w writeword
0002AFD2 <AmiBlitz3.ab3@13094>    MOVE.w regnum,D1
0002AFD4 <AmiBlitz3.ab3@13095>   SUBQ.w #1,D1
0002AFD6 <AmiBlitz3.ab3@13096>   LSL.w #8,D1
0002AFD8 <AmiBlitz3.ab3@13097>   LSL.w #1,D1
0002AFDC <AmiBlitz3.ab3@13098>   ORI.w #$D080,D1
0002AFE2 <AmiBlitz3.ab3@13099>   OR.w regnum,D1
0002AFE6 <AmiBlitz3.ab3@13100>    BSR.w writeword
0002AFE8 <AmiBlitz3.ab3@13101>  RTS
0002AFEE <AmiBlitz3.ab3@13105>   MOVE.w regnum,D2
0002AFF2 <AmiBlitz3.ab3@13107>   MOVE.w arrmul1(PC),D1
0002AFF4 <AmiBlitz3.ab3@13108>   OR.w D2,D1
0002AFF6 <AmiBlitz3.ab3@13109>   SUBQ.w #1,D1
0002AFFA <AmiBlitz3.ab3@13110>    BSR.w writeword
0002AFFE <AmiBlitz3.ab3@13111>   MOVE.w arrmul2(PC),D1
0002B000 <AmiBlitz3.ab3@13112>   OR.w D2,D1
0002B002 <AmiBlitz3.ab3@13113>   MOVE.w D2,D3
0002B004 <AmiBlitz3.ab3@13114>   SUBQ.w #1,D3
0002B006 <AmiBlitz3.ab3@13115>   LSL.w #8,D3
0002B008 <AmiBlitz3.ab3@13116>   LSL.w #1,D3
0002B00A <AmiBlitz3.ab3@13117>   OR.w D3,D1
0002B00E <AmiBlitz3.ab3@13118>    BSR.w writeword
0002B012 <AmiBlitz3.ab3@13119>   MOVE.w arrmul3(PC),D1
0002B014 <AmiBlitz3.ab3@13120>   MOVE.w D2,D3
0002B016 <AmiBlitz3.ab3@13121>   LSL.w #8,D3
0002B018 <AmiBlitz3.ab3@13122>   LSL.w #1,D3
0002B01A <AmiBlitz3.ab3@13123>   OR.w D3,D1
0002B01E <AmiBlitz3.ab3@13124>    BSR.w pokewda5s
0002B022 <AmiBlitz3.ab3@13125>   MOVE.w $4(A7),D1         ; was 4+0
0002B024 <AmiBlitz3.ab3@13126>   ADDQ.w #2,D1
0002B028 <AmiBlitz3.ab3@13127>    BSR.w writeword
0002B02C <AmiBlitz3.ab3@13129>   MOVE.w arrmul4(PC),D1
0002B02E <AmiBlitz3.ab3@13130>   MOVE.w D2,D3
0002B030 <AmiBlitz3.ab3@13131>   SUBQ.w #1,D3
0002B032 <AmiBlitz3.ab3@13132>   LSL.w #8,D3
0002B034 <AmiBlitz3.ab3@13133>   LSL.w #1,D3
0002B036 <AmiBlitz3.ab3@13134>   OR.w D3,D1
0002B03A <AmiBlitz3.ab3@13135>    BSR.w pokewda5s
0002B03E <AmiBlitz3.ab3@13136>   MOVE.w $4(A7),D1       ; was 4+0
0002B042 <AmiBlitz3.ab3@13137>    BSR.w writeword
0002B046 <AmiBlitz3.ab3@13139>   MOVE.w arrmul5(PC),D1
0002B048 <AmiBlitz3.ab3@13140>   OR.w D2,D1
0002B04A <AmiBlitz3.ab3@13141>   SUBQ.w #1,D1
0002B04E <AmiBlitz3.ab3@13142>    BSR.w writeword
0002B052 <AmiBlitz3.ab3@13143>   MOVE.w arrmul6(PC),D1
0002B054 <AmiBlitz3.ab3@13144>   OR.w D2,D1
0002B056 <AmiBlitz3.ab3@13145>   SUBQ.w #1,D1
0002B05A <AmiBlitz3.ab3@13146>    BSR.w writeword
0002B05E <AmiBlitz3.ab3@13147>   MOVE.w arrmul7(PC),D1
0002B060 <AmiBlitz3.ab3@13148>   OR.w D2,D1
0002B062 <AmiBlitz3.ab3@13149>   SUBQ.w #1,D1
0002B064 <AmiBlitz3.ab3@13150>   MOVE.w D2,D3
0002B066 <AmiBlitz3.ab3@13151>   LSL.w #8,D3
0002B068 <AmiBlitz3.ab3@13152>   LSL.w #1,D3
0002B06A <AmiBlitz3.ab3@13153>   OR.w D3,D1
0002B06E <AmiBlitz3.ab3@13154>    BSR.w writeword
0002B072 <AmiBlitz3.ab3@13155>   MOVE.w arrmul8(PC),D1
0002B074 <AmiBlitz3.ab3@13156>   MOVE.w D2,D3
0002B076 <AmiBlitz3.ab3@13157>   SUBQ.w #1,D3
0002B078 <AmiBlitz3.ab3@13158>   LSL.w #8,D3
0002B07A <AmiBlitz3.ab3@13159>   LSL.w #1,D3
0002B07C <AmiBlitz3.ab3@13160>   OR.w D3,D1
0002B080 <AmiBlitz3.ab3@13161>    BSR.w writeword
0002B086 <AmiBlitz3.ab3@13163>   MOVE.w regnum,D1
0002B088 <AmiBlitz3.ab3@13164>   SUBQ.w #1,D1
0002B08A <AmiBlitz3.ab3@13165>   LSL.w #8,D1
0002B08C <AmiBlitz3.ab3@13166>   LSL.w #1,D1
0002B090 <AmiBlitz3.ab3@13167>   ORI.w #$D080,D1
0002B096 <AmiBlitz3.ab3@13168>   OR.w regnum,D1
0002B09A <AmiBlitz3.ab3@13169> BRA.w writeword
0002B09C <AmiBlitz3.ab3@13177> arrmul1:   MOVE.l d0,-(a7)                                ;write array access
0002B09E <AmiBlitz3.ab3@13178> arrmul2:   MOVE  d0,d0
0002B0A2 <AmiBlitz3.ab3@13179> arrmul3:   MULU 0(a5),d0                                  ;mulu   x+2(a5),d1  ;lo*lo
0002B0A6 <AmiBlitz3.ab3@13180> arrmul4:   MULU 0(a5),d0                                  ;mulu   x(a5),d0    ;hi*lo
0002B0A8 <AmiBlitz3.ab3@13182> arrmul5:   SWAP d0
0002B0AA <AmiBlitz3.ab3@13183> arrmul6:   CLR d0
0002B0AC <AmiBlitz3.ab3@13184> arrmul7:   ADD.l d0,d0
0002B0AE <AmiBlitz3.ab3@13185> arrmul8:   MOVE.l (a7)+,d0
0002B0B2 <AmiBlitz3.ab3@13190> listcode1:  Dc.b $24,$6D :              Dc.b $00,$00       ;MOVEA.L $0000(A5),A2      ;pointer to start of array data
0002B0B6 <AmiBlitz3.ab3@13191> listcode2:  Dc.b $24,$6A,$FF,$E0                           ;MOVEA.L -$0020(A2),A2     ;pointer to current
0002B0B8 <AmiBlitz3.ab3@13192> listarfix:  Dc.b $50,$4A                                   ;ADDQ.W  #8,A2
0002B0BE <AmiBlitz3.ab3@13210>   CLR.l lastoffset_org
0002B0C4 <AmiBlitz3.ab3@13211>   BTST #$1,$7(A3)
0002B0C8 <AmiBlitz3.ab3@13212>    BEQ.w 'notarr
0002B0CE <AmiBlitz3.ab3@13213>   MOVE.w notshared,D1
0002B0D2 <AmiBlitz3.ab3@13214>    BNE.w noarrerr
0002B0D6 <AmiBlitz3.ab3@13215>    BSR.w get1bytemain
0002B0DA <AmiBlitz3.ab3@13216>   CMP.w #$29,D0
0002B0DE <AmiBlitz3.ab3@13217>    BNE.w 'notalist
0002B0E4 <AmiBlitz3.ab3@13218>   BTST #$0,$6(A3)
0002B0E8 <AmiBlitz3.ab3@13219>    BEQ.w nolisterr
0002B0F0 <AmiBlitz3.ab3@13220>   MOVE.w $4(A3),listcode1+2
0002B0F4 <AmiBlitz3.ab3@13221>   MOVE.l listcode1(PC),D1
0002B0F8 <AmiBlitz3.ab3@13222>    BSR.w pokela5s
0002B0FC <AmiBlitz3.ab3@13223>   MOVE.l listcode2(PC),D1
0002B100 <AmiBlitz3.ab3@13224>    BSR.w writelong
0002B106 <AmiBlitz3.ab3@13225>   TST.b debugmode
0002B10A <AmiBlitz3.ab3@13226>    BEQ.w 'nolrerr
0002B10C <AmiBlitz3.ab3@13230>   MOVE.l A2,-(A7)
0002B110 <AmiBlitz3.ab3@13231>   MOVE.w #$C315,D1
0002B114 <AmiBlitz3.ab3@13232>    BSR.w Atokejsr
0002B116 <AmiBlitz3.ab3@13233>   MOVEA.l (A7)+,A2
0002B11A <AmiBlitz3.ab3@13236>    MOVE.w listarfix(PC),D1                                 ;addq #8,a2
0002B11E <AmiBlitz3.ab3@13238>    BSR.w writeword
0002B122 <AmiBlitz3.ab3@13239>  BRA.w 'normalar
0002B124 <AmiBlitz3.ab3@13242>  'listoff:   Ds.w 1
0002B12A <AmiBlitz3.ab3@13245>   CLR.w 'listoff
0002B130 <AmiBlitz3.ab3@13246>   BTST #$0,$6(A3)
0002B134 <AmiBlitz3.ab3@13247>    BEQ.w 'knop
0002B13C <AmiBlitz3.ab3@13248>   MOVE.w #$0008,'listoff                            ;adjust size of one element if list.
0002B140 <AmiBlitz3.ab3@13251>   MOVEM.l A2-A3,-(A7)
0002B146 <AmiBlitz3.ab3@13252>   MOVE.w varmode,-(A7)
0002B14A <AmiBlitz3.ab3@13253>   MOVE.w $8(A3),-(A7)                                       ;number of dims
0002B14E <AmiBlitz3.ab3@13254>   MOVE.w $4(A3),-(A7)                                       ;varoff
0002B150 <AmiBlitz3.ab3@13255>   MOVE.l A2,-(A7)
0002B156 <AmiBlitz3.ab3@13256>   MOVE.w flagmask,-(A7)
0002B160 <AmiBlitz3.ab3@13258>   MOVE.w oldqflag,instringon
0002B166 <AmiBlitz3.ab3@13259>   MOVEA.l lastsourcepos,A5
0002B16A <AmiBlitz3.ab3@13260>    BSR.w arreval
0002B170 <AmiBlitz3.ab3@13261>   MOVE.w (A7)+,flagmask
0002B178 <AmiBlitz3.ab3@13262>   MOVE.w $8(A7),varmode
0002B17E <AmiBlitz3.ab3@13263>   TST.b debugmode
0002B182 <AmiBlitz3.ab3@13264>    BEQ.w 'noszchk
0002B184 <AmiBlitz3.ab3@13268>   MOVEA.l (A7)+,A2
0002B186 <AmiBlitz3.ab3@13269>   MOVEQ.l #$04,D1
0002B18E <AmiBlitz3.ab3@13270>   BTST #$0,flagmask+1                                      ;pointer?
0002B192 <AmiBlitz3.ab3@13271>    BNE.b 'domul                                          ;yes, then use 4 byte mul...
0002B196 <AmiBlitz3.ab3@13272>   MOVE.w $8(A2),D1
0002B19A <AmiBlitz3.ab3@13275>   ADD.w 'listoff(PC),D1
0002B19E <AmiBlitz3.ab3@13276>   BSR.w muld1
0002B1A4 <AmiBlitz3.ab3@13277>   ADDQ.w #1,regnum
0002B1A6 <AmiBlitz3.ab3@13280>   ADDQ.w #4,(A7)
0002B1AA <AmiBlitz3.ab3@13281>   TST.w $4(A7)
0002B1AE <AmiBlitz3.ab3@13282>    BEQ.w 'isglob
0002B1B0 <AmiBlitz3.ab3@13283>   SUBQ.w #8,(A7)                                           ;range check local array
0002B1B6 <AmiBlitz3.ab3@13286>   TST.b debugmode
0002B1BA <AmiBlitz3.ab3@13287>    BEQ.w 'noer1
0002B1C0 <AmiBlitz3.ab3@13288>   MOVE.w regnum,D1
0002B1C2 <AmiBlitz3.ab3@13289>   SUBQ.w #1,D1
0002B1C4 <AmiBlitz3.ab3@13290>   LSL.w #8,D1
0002B1C6 <AmiBlitz3.ab3@13291>   LSL.w #1,D1
0002B1CA <AmiBlitz3.ab3@13292>   OR.w zarrchk(PC),D1
0002B1CE <AmiBlitz3.ab3@13293>    BSR.w pokewda5s                                         ;cmp.l x(a5),D regat
0002B1D0 <AmiBlitz3.ab3@13294>   MOVE.w (A7),D1
0002B1D4 <AmiBlitz3.ab3@13295>    BSR.w writeword
0002B1D8 <AmiBlitz3.ab3@13296>   MOVE.l arrchk2(PC),D1
0002B1DC <AmiBlitz3.ab3@13297>    BSR.w writelong
0002B1E0 <AmiBlitz3.ab3@13298>   MOVE.w #$C309,D1
0002B1E4 <AmiBlitz3.ab3@13299>    BSR.w Atokejsr
0002B1E8 <AmiBlitz3.ab3@13302>   SUBQ.w #1,$2(A7)
0002B1EC <AmiBlitz3.ab3@13303>    BEQ.w 'ardone
0002B1F0 <AmiBlitz3.ab3@13304>   CMP.w #$2C,D0
0002B1F4 <AmiBlitz3.ab3@13305>    BNE.w syntaxerr
0002B1FA <AmiBlitz3.ab3@13306>    TST.b fast
0002B1FE <AmiBlitz3.ab3@13307>    BNE 'l1
0002B202 <AmiBlitz3.ab3@13308>    BSR.w arrevalchk
0002B206 <AmiBlitz3.ab3@13309>  BRA 'l2
0002B20A <AmiBlitz3.ab3@13312>   BSR arreval
0002B212 <AmiBlitz3.ab3@13315>   MOVE.w $4(A7),varmode
0002B216 <AmiBlitz3.ab3@13316>   BSR.w makeamul
0002B21A <AmiBlitz3.ab3@13317>  BRA.w 'arloop
0002B21E <AmiBlitz3.ab3@13320>   CMP.w #$29,D0
0002B222 <AmiBlitz3.ab3@13321>    BNE.w syntaxerr
0002B228 <AmiBlitz3.ab3@13322>   SUBQ.w #1,regnum
0002B22A <AmiBlitz3.ab3@13323>   ADDQ.w #6,A7
0002B22E <AmiBlitz3.ab3@13324>   MOVEM.l (A7)+,A2-A3
0002B236 <AmiBlitz3.ab3@13325>   MOVE.w $4(A3),movea5a0+2
0002B23C <AmiBlitz3.ab3@13326>   MOVE.l movea5a0,D1
0002B240 <AmiBlitz3.ab3@13327>    BSR.w pokela5s
0002B246 <AmiBlitz3.ab3@13328>   MOVE.w regnum,D1
0002B24A <AmiBlitz3.ab3@13329>   ORI.w #$D5C0,D1                                          ;add.l Dr,a2
0002B24E <AmiBlitz3.ab3@13330>    BSR.w writeword
0002B254 <AmiBlitz3.ab3@13331>   BTST #$0,$6(A3)
0002B258 <AmiBlitz3.ab3@13332>    BEQ.w 'normalar
0002B25C <AmiBlitz3.ab3@13336>   MOVE.w listarfix(PC),D1
0002B260 <AmiBlitz3.ab3@13337>    BSR.w writeword
0002B264 <AmiBlitz3.ab3@13340>   BSR.w get1bytemain
0002B26A <AmiBlitz3.ab3@13344>   BTST #$0,$7(A3)
0002B26E <AmiBlitz3.ab3@13345>    BEQ.w 'noppnt
0002B272 <AmiBlitz3.ab3@13346>   CMP.w #$5C,D0
0002B276 <AmiBlitz3.ab3@13347>    BNE.w 'pmskip
0002B27A <AmiBlitz3.ab3@13348>   MOVE.w 'pfix(PC),D1
0002B27E <AmiBlitz3.ab3@13349>    BSR.w writeword
0002B282 <AmiBlitz3.ab3@13352>   MOVE.w #$8000,D2
0002B286 <AmiBlitz3.ab3@13353>  BRA.w 'loopml
0002B28A <AmiBlitz3.ab3@13356>   MOVE.w #$C000,D2
0002B28E <AmiBlitz3.ab3@13357>  BRA.w 'loopml
0002B290 <AmiBlitz3.ab3@13360>  'pfix:   Dc.b $24,$52                                   ;MOVEA.L (A2),A2
0002B294 <AmiBlitz3.ab3@13365>   CMP.w #$28,D0
0002B298 <AmiBlitz3.ab3@13366>    BEQ.w noarrerr
0002B2A0 <AmiBlitz3.ab3@13367>   CMPI.l #$100,$4(A2)
0002B2A4 <AmiBlitz3.ab3@13368>    BCS.w 'simpvar
0002B2AA <AmiBlitz3.ab3@13369>   BTST #$0,$7(A3)
0002B2AE <AmiBlitz3.ab3@13370>    BEQ.w 'notap
0002B2B2 <AmiBlitz3.ab3@13374>   CMP.w #$5C,D0
0002B2B6 <AmiBlitz3.ab3@13375>    BEQ.w 'notap
0002B2B8 <AmiBlitz3.ab3@13376>   MOVEQ.l #$00,D2
0002B2BC <AmiBlitz3.ab3@13377>  BRA.w 'simpvar2
0002B2C0 <AmiBlitz3.ab3@13380>   MOVE.w #$8000,D2
0002B2C8 <AmiBlitz3.ab3@13381>   MOVE.w $4(A3),movea5a0+2
0002B2CE <AmiBlitz3.ab3@13382>   MOVE.l movea5a0,D1
0002B2D2 <AmiBlitz3.ab3@13383>    BSR.w pokela5s                                         ;move.l x(a5),a2
0002B2D8 <AmiBlitz3.ab3@13385>    TST.b debugmode
0002B2DC <AmiBlitz3.ab3@13386>    BEQ.w 'skip
0002B2E0 <AmiBlitz3.ab3@13387>    MOVE.w #$c320,D1
0002B2E6 <AmiBlitz3.ab3@13388>    JSR Atokejsr
0002B2E8 <AmiBlitz3.ab3@13392>   MOVEQ.l #$00,D3
0002B2EC <AmiBlitz3.ab3@13395>   CMP.w #$5C,D0
0002B2F0 <AmiBlitz3.ab3@13396>    BNE.w 'done
0002B2F8 <AmiBlitz3.ab3@13397>   CMPI.l #$100,$4(A2)
0002B2FC <AmiBlitz3.ab3@13398>    BCS.w rongtypeerr
0002B2FE <AmiBlitz3.ab3@13399>   MOVE.w D2,-(A7)
0002B302 <AmiBlitz3.ab3@13400>    BSR.w getparameter2
0002B306 <AmiBlitz3.ab3@13401>    BEQ.w syntaxerr
0002B308 <AmiBlitz3.ab3@13402>   ADDQ.w #4,A2
0002B30C <AmiBlitz3.ab3@13403>    BSR.w findvariable2
0002B310 <AmiBlitz3.ab3@13404>    BNE.w noofferr
0002B312 <AmiBlitz3.ab3@13405>   MOVE.w (A7)+,D2
0002B314 <AmiBlitz3.ab3@13406>   MOVEA.l A2,A3                                             ;pointer to offset
0002B318 <AmiBlitz3.ab3@13407>   MOVEA.l $A(A3),A2                                         ;pointer to type
0002B31A <AmiBlitz3.ab3@13408>   MOVEQ #0,d1
0002B31E <AmiBlitz3.ab3@13409>   MOVE.w 4(a3),d1
0002B320 <AmiBlitz3.ab3@13410>   ADD.l d1,d3
0002B326 <AmiBlitz3.ab3@13412>   MOVE.l A3,lastoffset_org
0002B32A <AmiBlitz3.ab3@13413>   CMP.w #$5B,D0
0002B32E <AmiBlitz3.ab3@13414>    BNE.w 'realdone
0002B334 <AmiBlitz3.ab3@13415>   BTST #$1,$7(A3)                                           ;a array [] in newtype is found
0002B338 <AmiBlitz3.ab3@13416>    BEQ.w rongtypeerr
0002B33C <AmiBlitz3.ab3@13417>    BSR.w addd0a0
0002B340 <AmiBlitz3.ab3@13418>   MOVEM.l A2-A3,-(A7)
0002B346 <AmiBlitz3.ab3@13419>   MOVE.w varmode,-(A7)
0002B34C <AmiBlitz3.ab3@13420>   MOVE.l lastoffset_org,-(A7)
0002B352 <AmiBlitz3.ab3@13421>   MOVE.w pusha2,D1
0002B356 <AmiBlitz3.ab3@13422>   BSR.w writeword
0002B358 <AmiBlitz3.ab3@13423>   MOVEQ.l #$03,D2                                          ;was 2 >32kb types
0002B362 <AmiBlitz3.ab3@13424>   MOVE.l destpointer,deststore
0002B368 <AmiBlitz3.ab3@13425>   MOVE.l leftsidetype,-(a7)
0002B36E <AmiBlitz3.ab3@13426>   MOVE.l rightsidetype,-(a7)
0002B374 <AmiBlitz3.ab3@13428>   MOVE.w leftsideflagmask,-(a7)
0002B37A <AmiBlitz3.ab3@13429>   MOVE.w rightsideflagmask,-(a7)
0002B380 <AmiBlitz3.ab3@13430>   CLR.l rightsidetype
0002B386 <AmiBlitz3.ab3@13431>   CLR.l leftsidetype
0002B38C <AmiBlitz3.ab3@13432>   CLR.w leftsideflagmask
0002B392 <AmiBlitz3.ab3@13433>   CLR.w rightsideflagmask
0002B396 <AmiBlitz3.ab3@13434>   BSR.w eval
0002B39C <AmiBlitz3.ab3@13435>   MOVE.w (a7)+,rightsideflagmask
0002B3A2 <AmiBlitz3.ab3@13436>   MOVE.w (a7)+,leftsideflagmask
0002B3A8 <AmiBlitz3.ab3@13437>   MOVE.l (a7)+,rightsidetype
0002B3AE <AmiBlitz3.ab3@13438>   MOVE.l (a7)+,leftsidetype
0002B3B2 <AmiBlitz3.ab3@13439>   CMP.w #$5D,D0
0002B3B6 <AmiBlitz3.ab3@13440>    BNE.w syntaxerr
0002B3BC <AmiBlitz3.ab3@13441>   TST.b fast                                               ;a2,-(a7) array
0002B3C0 <AmiBlitz3.ab3@13442>   BEQ 'loop0_l10
0002B3C6 <AmiBlitz3.ab3@13448>   MOVE.l destpointer,d1
0002B3CC <AmiBlitz3.ab3@13449>   SUB.l deststore,d1
0002B3D2 <AmiBlitz3.ab3@13450>   CMP.l #4,d1
0002B3D6 <AmiBlitz3.ab3@13451>   BNE 'loop0_l10
0002B3DC <AmiBlitz3.ab3@13452>   MOVE.l destpointer,a4
0002B3E2 <AmiBlitz3.ab3@13453>   MOVE.l -4(a4),-6(a4)
0002B3E8 <AmiBlitz3.ab3@13454>   SUBQ.l #2,destpointer
0002B3EE <AmiBlitz3.ab3@13455>   CLR.l imm_addr
0002B3F4 <AmiBlitz3.ab3@13456>   CLR.l load_var_addr
0002B3F8 <AmiBlitz3.ab3@13457>  BRA 'loop0_l20
0002B3FE <AmiBlitz3.ab3@13460>   MOVE.w pulla2,D1
0002B402 <AmiBlitz3.ab3@13461>    BSR.w writeword
0002B408 <AmiBlitz3.ab3@13464>   MOVE.l (A7)+,lastoffset_org
0002B40E <AmiBlitz3.ab3@13465>   MOVE.w (A7)+,varmode
0002B412 <AmiBlitz3.ab3@13466>   MOVEM.l (A7)+,A2-A3
0002B418 <AmiBlitz3.ab3@13472>   TST.w debugmode
0002B41C <AmiBlitz3.ab3@13473>    BEQ.b 'nobchk
0002B420 <AmiBlitz3.ab3@13474>   MOVE.w $8(A3),D1
0002B424 <AmiBlitz3.ab3@13475>    BEQ.b 'nobchk                                   ;no [0] checks!
0002B42A <AmiBlitz3.ab3@13479>   MOVE.w D1,brchkcode+2
0002B430 <AmiBlitz3.ab3@13480>   MOVE.w regnum,D1
0002B432 <AmiBlitz3.ab3@13481>   LSL.w #8,D1
0002B434 <AmiBlitz3.ab3@13482>   LSL.w #1,D1
0002B438 <AmiBlitz3.ab3@13483>   OR.w brchkcode0(PC),D1
0002B43E <AmiBlitz3.ab3@13484>   MOVE.w D1,brchkcode
0002B442 <AmiBlitz3.ab3@13485>   MOVE.l brchkcode(PC),D1
0002B446 <AmiBlitz3.ab3@13486>    BSR.w writelong
0002B44A <AmiBlitz3.ab3@13487>   MOVE.l brchkcode+4(PC),D1
0002B44E <AmiBlitz3.ab3@13488>    BSR.w writelong
0002B452 <AmiBlitz3.ab3@13489>   MOVE.w brchkcode+8(PC),D1
0002B456 <AmiBlitz3.ab3@13490>    BSR.w writeword
0002B458 <AmiBlitz3.ab3@13493>   MOVEQ.l #$04,D1
0002B45E <AmiBlitz3.ab3@13494>   BTST #$0,$7(A3)
0002B462 <AmiBlitz3.ab3@13495>    BNE.w 'dothemul
0002B466 <AmiBlitz3.ab3@13496>   MOVE.w $8(A2),D1
0002B46A <AmiBlitz3.ab3@13499>   BSR.w muld1
0002B470 <AmiBlitz3.ab3@13500>   MOVE.w addrega2,D1
0002B476 <AmiBlitz3.ab3@13501>   OR.w regnum,D1
0002B47A <AmiBlitz3.ab3@13502>    OR.w #$100,d1                                           ;>32kb types
0002B47E <AmiBlitz3.ab3@13503>    BSR.w writeword
0002B482 <AmiBlitz3.ab3@13504>    BSR.w get1bytemain
0002B484 <AmiBlitz3.ab3@13505>   MOVEQ.l #$00,D3
0002B488 <AmiBlitz3.ab3@13506>   MOVE.w #$8000,D2
0002B48E <AmiBlitz3.ab3@13509>   BTST #$0,$7(A3)
0002B492 <AmiBlitz3.ab3@13510>    BNE.w 'pointer
0002B496 <AmiBlitz3.ab3@13511>  BRA.w 'loop0
0002B49A <AmiBlitz3.ab3@13514>  CMP.w #$5C,D0
0002B49E <AmiBlitz3.ab3@13515>    BNE.w 'done3
0002B4A0 <AmiBlitz3.ab3@13516>   TST.w D3
0002B4A4 <AmiBlitz3.ab3@13517>    BNE.w 'pskip
0002B4AA <AmiBlitz3.ab3@13518>   MOVE.w movea0,D1
0002B4AE <AmiBlitz3.ab3@13519>    BSR.w writeword
0002B4B2 <AmiBlitz3.ab3@13520>  BRA.w 'pmore
0002B4B8 <AmiBlitz3.ab3@13523>   MOVE.w D3,movea0a0+2
0002B4BE <AmiBlitz3.ab3@13524>   MOVE.l movea0a0,D1
0002B4C2 <AmiBlitz3.ab3@13525>    BSR.w writelong
0002B4C8 <AmiBlitz3.ab3@13528>   BTST #$2,$7(A3)
0002B4CC <AmiBlitz3.ab3@13529>    BEQ.w 'loopml
0002B4D2 <AmiBlitz3.ab3@13530>   MOVE.l adda0a0,D1
0002B4D6 <AmiBlitz3.ab3@13531>    BSR.w writelong
0002B4DA <AmiBlitz3.ab3@13532>  BRA.w 'loopml
0002B4DE <AmiBlitz3.ab3@13535>   BSET #$E,D2
0002B4E4 <AmiBlitz3.ab3@13536>   BTST #$2,$7(A3)
0002B4E8 <AmiBlitz3.ab3@13537>    BNE.w 'done
0002B4EC <AmiBlitz3.ab3@13538>   BSET #$D,D2
0002B4F4 <AmiBlitz3.ab3@13541>   CMPI.l #$100,$4(A2)
0002B4F8 <AmiBlitz3.ab3@13542>    BCC.w 'done2
0002B4FC <AmiBlitz3.ab3@13543>   MOVE.b $7(A2),D2
0002B500 <AmiBlitz3.ab3@13546>  BRA.w addd0a0
0002B504 <AmiBlitz3.ab3@13549>   MOVE.w $6(A2),D2
0002B508 <AmiBlitz3.ab3@13552>   MOVE.w $4(A3),D3
0002B50E <AmiBlitz3.ab3@13553>   BTST #$0,$7(A3)
0002B512 <AmiBlitz3.ab3@13554>    BEQ.w 'nopoint
0002B516 <AmiBlitz3.ab3@13555>   BSET #$E,D2
0002B518 <AmiBlitz3.ab3@13558> RTS
0002B51C <AmiBlitz3.ab3@13562> brchkcode0:  Dc.b $B0,$7C,$00,$00                          ;CMP.W   #$0000,D0
0002B520 <AmiBlitz3.ab3@13563> brchkcode:   Dc.b $B0,$7C :             Dc.b $00,$00       ;CMP.W   #$0000,D0
0002B522 <AmiBlitz3.ab3@13564>              Dc.b $65,$04                                  ;BCS.B   brchkcode_ok
0002B524 <AmiBlitz3.ab3@13565>              Dc.b $70,$02                                  ;MOVEQ   #$02,D0
0002B526 <AmiBlitz3.ab3@13566>              Dc.b $4E,$40                                  ;TRAP    #00
0002B52C <AmiBlitz3.ab3@13574>   TST.w varmode
0002B530 <AmiBlitz3.ab3@13575>    BEQ.w writeword
0002B534 <AmiBlitz3.ab3@13576>   BCLR #$0,D1
0002B538 <AmiBlitz3.ab3@13577> BRA.w writeword
0002B53E <AmiBlitz3.ab3@13580>   TST.w varmode
0002B542 <AmiBlitz3.ab3@13581>    BEQ.w writeword
0002B546 <AmiBlitz3.ab3@13582>   BCLR #$9,D1
0002B54A <AmiBlitz3.ab3@13583> BRA.w writeword
0002B550 <AmiBlitz3.ab3@13586>   TST.w proceduremode
0002B554 <AmiBlitz3.ab3@13587>    BEQ.w writelong
0002B558 <AmiBlitz3.ab3@13588>   BCLR #$19,D1
0002B55C <AmiBlitz3.ab3@13589> BRA.w writelong
0002B562 <AmiBlitz3.ab3@13592>   TST.w varmode
0002B566 <AmiBlitz3.ab3@13593>   BEQ.w writelong
0002B56A <AmiBlitz3.ab3@13594>   BCLR #$10,D1
0002B570 <AmiBlitz3.ab3@13602>   ADDQ.l #1,destpointer                                   ; this is a copy of the writewordcode
0002B578 <AmiBlitz3.ab3@13603>   BCLR #$0,destpointer+3
0002B57E <AmiBlitz3.ab3@13604>   MOVEA.l destpointer,A4
0002B584 <AmiBlitz3.ab3@13605>   CMPA.l destbufferend,A4
0002B588 <AmiBlitz3.ab3@13606>    BCC.w 'overa
0002B58A <AmiBlitz3.ab3@13607>   MOVE.l D1,(A4)+
0002B590 <AmiBlitz3.ab3@13610>   MOVE.l A4,destpointer
0002B594 <AmiBlitz3.ab3@13611>   CMPA.l bigpc(PC),A4
0002B598 <AmiBlitz3.ab3@13612>    BHI.w 'nbpa
0002B59A <AmiBlitz3.ab3@13613>  RTS
0002B5A0 <AmiBlitz3.ab3@13616>   TST.w cfetchmode                                         ; to complete the subroutine
0002B5A4 <AmiBlitz3.ab3@13617>   BNE.w 'nbp2a                                             ;
0002B5AA <AmiBlitz3.ab3@13618>   MOVE.l A4,bigpc                                          ;
0002B5AC <AmiBlitz3.ab3@13621>  RTS
0002B5B4 <AmiBlitz3.ab3@13624>   MOVE.w #$FFFF,dontwrite                                  ;#-1 org source
0002B5BA <AmiBlitz3.ab3@13625>   CLR.b fast
0002B5C0 <AmiBlitz3.ab3@13626>   CLR.b fpu
0002B5C6 <AmiBlitz3.ab3@13627>   CLR.b iee                                                ; in writeword this is #2
0002B5C8 <AmiBlitz3.ab3@13628>   ADDQ.w #4,A4
0002B5CC <AmiBlitz3.ab3@13629> BRA.w 'msa
0002B5D2 <AmiBlitz3.ab3@13648>   ADDQ.l #1,destpointer
0002B5DA <AmiBlitz3.ab3@13649>   BCLR #$0,destpointer+3
0002B5E0 <AmiBlitz3.ab3@13650>   MOVEA.l destpointer,A4
0002B5E6 <AmiBlitz3.ab3@13651>   CMPA.l destbufferend,A4
0002B5EA <AmiBlitz3.ab3@13652>    BCC.w 'over
0002B5EC <AmiBlitz3.ab3@13653>   MOVE.w D1,(A4)+
0002B5F2 <AmiBlitz3.ab3@13656>   MOVE.l A4,destpointer
0002B5F6 <AmiBlitz3.ab3@13657>   CMPA.l bigpc(PC),A4
0002B5FA <AmiBlitz3.ab3@13658>    BHI.w 'nbp
0002B5FC <AmiBlitz3.ab3@13659>  RTS
0002B602 <AmiBlitz3.ab3@13662>   TST.w cfetchmode
0002B606 <AmiBlitz3.ab3@13663>   BNE.w 'nbp2
0002B60C <AmiBlitz3.ab3@13664>   MOVE.l A4,bigpc
0002B60E <AmiBlitz3.ab3@13667>  RTS
0002B616 <AmiBlitz3.ab3@13670>   MOVE.w #$FFFF,dontwrite                                  ;#-1 org source
0002B618 <AmiBlitz3.ab3@13671>   ADDQ.w #2,A4
0002B61E <AmiBlitz3.ab3@13672>   CLR.b fast
0002B624 <AmiBlitz3.ab3@13673>   CLR.b fpu
0002B62A <AmiBlitz3.ab3@13674>   CLR.b iee
0002B62E <AmiBlitz3.ab3@13675> BRA.w 'ms
0002B634 <AmiBlitz3.ab3@13679>   MOVEA.l destpointer,A4
0002B63A <AmiBlitz3.ab3@13680>   CMPA.l destbufferend,A4
0002B63E <AmiBlitz3.ab3@13681>    BCC.w 'over
0002B640 <AmiBlitz3.ab3@13682>   MOVE.b D1,(A4)+
0002B646 <AmiBlitz3.ab3@13685>   MOVE.l A4,destpointer
0002B64A <AmiBlitz3.ab3@13686>   CMPA.l bigpc(PC),A4
0002B64E <AmiBlitz3.ab3@13687>    BHI.w 'nbp
0002B650 <AmiBlitz3.ab3@13688>  RTS
0002B656 <AmiBlitz3.ab3@13691>   TST.w cfetchmode
0002B65A <AmiBlitz3.ab3@13692>    BNE.w 'nbp2
0002B660 <AmiBlitz3.ab3@13693>   MOVE.l A4,bigpc
0002B662 <AmiBlitz3.ab3@13696>  RTS
0002B66A <AmiBlitz3.ab3@13699>   MOVE.w #-1,dontwrite
0002B66C <AmiBlitz3.ab3@13700>   ADDQ.w #1,A4
0002B672 <AmiBlitz3.ab3@13701>   CLR.b fast
0002B678 <AmiBlitz3.ab3@13702>   CLR.b fpu
0002B67E <AmiBlitz3.ab3@13703>   CLR.b iee
0002B682 <AmiBlitz3.ab3@13704> BRA.w 'ms
0002B686 <AmiBlitz3.ab3@13707> bigpc:   Ds.l 1
0002B688 <AmiBlitz3.ab3@13711>   MOVE.w (A0)+,D1
0002B68C <AmiBlitz3.ab3@13712>   BSR.w writeword
0002B68E <AmiBlitz3.ab3@13715>     CMPA.l A1,A0
0002B692 <AmiBlitz3.ab3@13716>     BCC.w 'done
0002B694 <AmiBlitz3.ab3@13717>       MOVE.w (A0)+,D1
0002B698 <AmiBlitz3.ab3@13718>       BSR.w writeword
0002B69C <AmiBlitz3.ab3@13719>  BRA.w 'loop
0002B69E <AmiBlitz3.ab3@13722> RTS
0002B6A0 <AmiBlitz3.ab3@13726>   MOVE.w (A0)+,D1
0002B6A4 <AmiBlitz3.ab3@13727>   BSR.w writeword
0002B6A6 <AmiBlitz3.ab3@13728>   CMPA.l A1,A0
0002B6AA <AmiBlitz3.ab3@13729>   BCS.w pokecode2
0002B6AC <AmiBlitz3.ab3@13730> RTS
0002B6B2 <AmiBlitz3.ab3@13737>   TST.b iniffcommand
0002B6B6 <AmiBlitz3.ab3@13738>   BEQ 'l1
0002B6BA <AmiBlitz3.ab3@13739>     MOVE.w #$4880,D1
0002B6C0 <AmiBlitz3.ab3@13740>     OR.w regnum,D1
0002B6C4 <AmiBlitz3.ab3@13741>     BSR writeword
0002B6C6 <AmiBlitz3.ab3@13745> RTS
0002B6CA <AmiBlitz3.ab3@13751>   BSR.w convert_byte_to_word
0002B6D0 <AmiBlitz3.ab3@13755>   TST.b iee
0002B6D4 <AmiBlitz3.ab3@13756>   BEQ 'old
0002B6D8 <AmiBlitz3.ab3@13757>   CMP.b #5,d2
0002B6DC <AmiBlitz3.ab3@13758>   BEQ wtof
0002B6E0 <AmiBlitz3.ab3@13762>   MOVE.w #$48C0,D1
0002B6E6 <AmiBlitz3.ab3@13763>   OR.w regnum,D1
0002B6EA <AmiBlitz3.ab3@13764> BRA.w writeword
0002B6EC <AmiBlitz3.ab3@13768>   MOVEQ #0,d0
0002B6F2 <AmiBlitz3.ab3@13769>   MOVE.w regnum,d0
0002B6F4 <AmiBlitz3.ab3@13770>   ASL.l #7,d0
0002B6FA <AmiBlitz3.ab3@13771>   MOVE.l #$f2005000,d1
0002B6FC <AmiBlitz3.ab3@13772>   OR.l d0,d1
0002B6FE <AmiBlitz3.ab3@13773>   ASL.l #1,d0
0002B700 <AmiBlitz3.ab3@13774>   ASL.l #8,d0
0002B702 <AmiBlitz3.ab3@13775>   OR.l d0,d1
0002B706 <AmiBlitz3.ab3@13776> BRA writelong
0002B70A <AmiBlitz3.ab3@13780>   BSR.w convert_byte_to_word
0002B70E <AmiBlitz3.ab3@13783>   MOVE.w #$4840,D1
0002B714 <AmiBlitz3.ab3@13784>   OR.w regnum,D1
0002B718 <AmiBlitz3.ab3@13785>    BSR.w writeword
0002B71C <AmiBlitz3.ab3@13786>   MOVE.w #$4240,D1
0002B722 <AmiBlitz3.ab3@13787>   OR.w regnum,D1
0002B726 <AmiBlitz3.ab3@13788> BRA.w writeword
0002B72A <AmiBlitz3.ab3@13792>   CMP.w #$ffdc,d1
0002B72E <AmiBlitz3.ab3@13793>   BNE 'negfpu
0002B730 <AmiBlitz3.ab3@13794>   MOVEQ #0,d0
0002B736 <AmiBlitz3.ab3@13795>   MOVE.w regnum,d0
0002B738 <AmiBlitz3.ab3@13796>   ASL.l #7,d0
0002B73E <AmiBlitz3.ab3@13797>   MOVE.l #$f2004000,d1
0002B740 <AmiBlitz3.ab3@13798>   OR.l d0,d1
0002B742 <AmiBlitz3.ab3@13799>   ASL.l #1,d0
0002B744 <AmiBlitz3.ab3@13800>   ASL.l #8,d0
0002B746 <AmiBlitz3.ab3@13801>   OR.l d0,d1
0002B74A <AmiBlitz3.ab3@13802>  BRA writelong
0002B74C <AmiBlitz3.ab3@13805>   MOVEQ #0,d1
0002B752 <AmiBlitz3.ab3@13806>   MOVE.w regnum,d1                                         ;fpu neg
0002B754 <AmiBlitz3.ab3@13807>   ASL.l #7,d1
0002B75A <AmiBlitz3.ab3@13808>   OR.l #$f200001a,d1
0002B75C <AmiBlitz3.ab3@13809>   MOVE.l d0,-(a7)
0002B75E <AmiBlitz3.ab3@13810>   MOVEQ #0,d0
0002B764 <AmiBlitz3.ab3@13811>   MOVE.w regnum,d0
0002B766 <AmiBlitz3.ab3@13812>   ASL.l #8,d0
0002B768 <AmiBlitz3.ab3@13813>   ASL.l #2,d0
0002B76A <AmiBlitz3.ab3@13814>   OR.l d0,d1
0002B76C <AmiBlitz3.ab3@13815>   MOVE.l (a7)+,d0
0002B770 <AmiBlitz3.ab3@13816> BRA writelong
0002B776 <AmiBlitz3.ab3@13822>    TST.b iee
0002B77A <AmiBlitz3.ab3@13823>    BNE wtof
0002B77E <AmiBlitz3.ab3@13825>    BSR.w convert_byte_to_long
0002B782 <AmiBlitz3.ab3@13828>    MOVE.w #$FFDC,D1
0002B788 <AmiBlitz3.ab3@13832>    TST.b iee
0002B78C <AmiBlitz3.ab3@13833>    BNE ltof
0002B792 <AmiBlitz3.ab3@13835>    MOVE.w D1,libjsr+2
0002B796 <AmiBlitz3.ab3@13836>    BSR.w savereg
0002B798 <AmiBlitz3.ab3@13837>   MOVE.l D4,D1
0002B79C <AmiBlitz3.ab3@13838>    BSR.w pokemovem
0002B7A0 <AmiBlitz3.ab3@13839>   MOVE.w #$C900,D1      ; #getffpbase,
0002B7A4 <AmiBlitz3.ab3@13840>    BSR.w Atokejsr
0002B7A8 <AmiBlitz3.ab3@13841>    BSR.w JL_0_A352
0002B7AE <AmiBlitz3.ab3@13842>   MOVE.l libjsr,D1
0002B7B2 <AmiBlitz3.ab3@13843>    BSR.w writelong
0002B7B6 <AmiBlitz3.ab3@13844>    BSR.w JL_0_A36E
0002B7B8 <AmiBlitz3.ab3@13845>   MOVE.l D5,D1
0002B7BC <AmiBlitz3.ab3@13846> BRA.w pokemovem
0002B7BE <AmiBlitz3.ab3@13849> RTS
0002B7C2 <AmiBlitz3.ab3@13852>   MOVE.w #$C317,D1     ;#wtobover
0002B7C8 <AmiBlitz3.ab3@13854>   TST.b typecheck
0002B7CC <AmiBlitz3.ab3@13855>   BEQ 'l1
0002B7D2 <AmiBlitz3.ab3@13856>    TST.b notypecheck
0002B7D6 <AmiBlitz3.ab3@13857>    BNE 'l1
0002B7DC <AmiBlitz3.ab3@13858>    TST.l lasttoken
0002B7E2 <AmiBlitz3.ab3@13868>   TST.b debugmode
0002B7E6 <AmiBlitz3.ab3@13869>    BEQ.w 'skip
0002B7EE <AmiBlitz3.ab3@13870>   BTST #$7,overflowcheck      ;;*** was 7! overflow checking?
0002B7F2 <AmiBlitz3.ab3@13871>    BEQ.w 'skip
0002B7F8 <AmiBlitz3.ab3@13873>   TST.w cfetchmode
0002B7FC <AmiBlitz3.ab3@13874>    BNE.w 'skip
0002B802 <AmiBlitz3.ab3@13876>   TST.w regnum
0002B806 <AmiBlitz3.ab3@13877>    BEQ.w 'isok
0002B808 <AmiBlitz3.ab3@13878>   MOVE.w D1,-(A7)
0002B80C <AmiBlitz3.ab3@13879>   MOVE.w 'code1(PC),D1
0002B810 <AmiBlitz3.ab3@13880>    BSR.w writeword
0002B816 <AmiBlitz3.ab3@13881>   MOVE.w regnum,D1
0002B81A <AmiBlitz3.ab3@13882>   OR.w 'code3(PC),D1
0002B81E <AmiBlitz3.ab3@13883>    BSR.w writeword
0002B820 <AmiBlitz3.ab3@13884>   MOVE.w (A7)+,D1
0002B824 <AmiBlitz3.ab3@13885>    BSR.w 'isok
0002B828 <AmiBlitz3.ab3@13886>   MOVE.w 'code2(PC),D1
0002B82C <AmiBlitz3.ab3@13887>  BRA.w writeword
0002B830 <AmiBlitz3.ab3@13890>   MOVEM.l D0-D7/A0-A6,-(A7)
0002B834 <AmiBlitz3.ab3@13891>    BSR.w Atokejsr
0002B838 <AmiBlitz3.ab3@13892>   MOVEM.l (A7)+,D0-D7/A0-A6
0002B83A <AmiBlitz3.ab3@13895>  RTS
0002B83C <AmiBlitz3.ab3@13898>   MOVE.l D0,-(A7)
0002B83E <AmiBlitz3.ab3@13901>   MOVE.l (A7)+,D0
0002B840 <AmiBlitz3.ab3@13904>   MOVE.l D0,D0
0002B844 <AmiBlitz3.ab3@13909>   BSR.w convert_word_to_long
0002B84A <AmiBlitz3.ab3@13911>   TST.b iee
0002B84E <AmiBlitz3.ab3@13912>   BEQ 'old
0002B852 <AmiBlitz3.ab3@13913>   CMP.b #5,d2
0002B856 <AmiBlitz3.ab3@13914>   BNE 'old
0002B858 <AmiBlitz3.ab3@13915>  RTS
0002B85C <AmiBlitz3.ab3@13919> BRA.w bytetof2
0002B860 <AmiBlitz3.ab3@13922>   MOVE.w #$C316,D1      ; #ltobover
0002B866 <AmiBlitz3.ab3@13924>   TST.b typecheck
0002B86A <AmiBlitz3.ab3@13925>   BEQ 'l1
0002B870 <AmiBlitz3.ab3@13926>   TST.b peekaddrsize
0002B874 <AmiBlitz3.ab3@13927>   BNE 'l1
0002B87A <AmiBlitz3.ab3@13928>   TST.b notypecheck
0002B87E <AmiBlitz3.ab3@13929>   BNE 'l1
0002B884 <AmiBlitz3.ab3@13930>   TST.l lasttoken
0002B888 <AmiBlitz3.ab3@13937> BRA.w overchk
0002B88C <AmiBlitz3.ab3@13940>   MOVE.w #$C318,D1      ; #ltowover,
0002B892 <AmiBlitz3.ab3@13942>   TST.b typecheck
0002B896 <AmiBlitz3.ab3@13943>   BEQ 'l1
0002B89C <AmiBlitz3.ab3@13944>   TST.b peekaddrsize
0002B8A0 <AmiBlitz3.ab3@13945>   BNE 'l1
0002B8A6 <AmiBlitz3.ab3@13946>   TST.b notypecheck
0002B8AA <AmiBlitz3.ab3@13947>   BNE 'l1
0002B8B0 <AmiBlitz3.ab3@13948>   TST.l lasttoken
0002B8B4 <AmiBlitz3.ab3@13955> BRA.w overchk
0002B8B8 <AmiBlitz3.ab3@13958>   MOVE.w #$C318,D1      ;#ltowover,
0002B8BE <AmiBlitz3.ab3@13960>   TST.b typecheck
0002B8C2 <AmiBlitz3.ab3@13961>   BEQ 'l1
0002B8C8 <AmiBlitz3.ab3@13962>   TST.b notypecheck
0002B8CC <AmiBlitz3.ab3@13963>   BNE 'l1
0002B8D2 <AmiBlitz3.ab3@13964>   TST.l lasttoken
0002B8D6 <AmiBlitz3.ab3@13971>   BSR.w overchk
0002B8DA <AmiBlitz3.ab3@13972> BRA.w convert_word_to_quick
0002B8DE <AmiBlitz3.ab3@13975> BRA.w bytetof2
0002B8E0 <AmiBlitz3.ab3@13978> RTS
0002B8E4 <AmiBlitz3.ab3@13981>   MOVE.w #$C319,D1         ; #qtobover,
0002B8EA <AmiBlitz3.ab3@13983>   TST.b typecheck
0002B8EE <AmiBlitz3.ab3@13984>   BEQ 'l1
0002B8F4 <AmiBlitz3.ab3@13985>   TST.b notypecheck
0002B8F8 <AmiBlitz3.ab3@13986>   BNE 'l1
0002B8FE <AmiBlitz3.ab3@13987>   TST.l lasttoken
0002B902 <AmiBlitz3.ab3@13994>   BSR.w overchk
0002B906 <AmiBlitz3.ab3@13997>   MOVE.w #$4240,D1
0002B90C <AmiBlitz3.ab3@13998>   OR.w regnum,D1
0002B910 <AmiBlitz3.ab3@13999>   BSR.w writeword
0002B914 <AmiBlitz3.ab3@14000>   MOVE.w #$4840,D1
0002B91A <AmiBlitz3.ab3@14001>   OR.w regnum,D1
0002B91E <AmiBlitz3.ab3@14002> BRA.w writeword
0002B922 <AmiBlitz3.ab3@14005> BRA.w quicktob2
0002B926 <AmiBlitz3.ab3@14008>   BSR.w quicktob2
0002B92A <AmiBlitz3.ab3@14009> BRA.w convert_word_to_long
0002B92C <AmiBlitz3.ab3@14014>   MOVEQ #0,d0
0002B932 <AmiBlitz3.ab3@14015>   MOVE.w regnum,d0
0002B934 <AmiBlitz3.ab3@14016>   ASL.l #7,d0
0002B93A <AmiBlitz3.ab3@14017>   MOVE.l #$f2004000,d1
0002B93C <AmiBlitz3.ab3@14018>   OR.l d0,d1
0002B93E <AmiBlitz3.ab3@14019>   ASL.l #1,d0
0002B940 <AmiBlitz3.ab3@14020>   ASL.l #8,d0
0002B942 <AmiBlitz3.ab3@14021>   OR.l d0,d1
0002B946 <AmiBlitz3.ab3@14022>   BSR writelong
0002B94C <AmiBlitz3.ab3@14023>   MOVE.w regnum,d0
0002B94E <AmiBlitz3.ab3@14024>   ASL.l #7,d0
0002B954 <AmiBlitz3.ab3@14025>   MOVE.l #$f23c4423,d1                                     ;fmul.s #1/65536,fpreg
0002B956 <AmiBlitz3.ab3@14026>   OR.w d0,d1
0002B95A <AmiBlitz3.ab3@14027>   BSR writelong
0002B960 <AmiBlitz3.ab3@14028>   MOVE.l #$37800000,d1
0002B964 <AmiBlitz3.ab3@14029>   BSR writelong
0002B966 <AmiBlitz3.ab3@14030> RTS
0002B96C <AmiBlitz3.ab3@14037>   TST.b iee
0002B970 <AmiBlitz3.ab3@14038>   BNE qtof
0002B974 <AmiBlitz3.ab3@14040>   MOVE.w #$D300,D1       ; #qutofl,
0002B976 <AmiBlitz3.ab3@14043>   MOVE.w D1,-(A7)
0002B97A <AmiBlitz3.ab3@14044>    BSR.w savereg
0002B97C <AmiBlitz3.ab3@14045>   MOVE.l D4,D1
0002B980 <AmiBlitz3.ab3@14046>    BSR.w pokemovem
0002B984 <AmiBlitz3.ab3@14048>    BSR.w JL_0_A352
0002B986 <AmiBlitz3.ab3@14049>   MOVE.w (A7)+,D1
0002B98A <AmiBlitz3.ab3@14050>    BSR.w Atokejsr
0002B98E <AmiBlitz3.ab3@14052>    BSR.w JL_0_A36E
0002B990 <AmiBlitz3.ab3@14053>   MOVE.l D5,D1
0002B994 <AmiBlitz3.ab3@14054> BRA.w pokemovem
0002B996 <AmiBlitz3.ab3@14058> RTS
0002B99C <AmiBlitz3.ab3@14062>   TST.b typecheck
0002B9A0 <AmiBlitz3.ab3@14063>   BEQ 'l1
0002B9A6 <AmiBlitz3.ab3@14064>   TST.b notypecheck
0002B9AA <AmiBlitz3.ab3@14065>   BNE 'l1
0002B9B0 <AmiBlitz3.ab3@14066>   TST.l lasttoken
0002B9B6 <AmiBlitz3.ab3@14072>   TST.b iee
0002B9BA <AmiBlitz3.ab3@14073>   BNE ftol
0002B9BE <AmiBlitz3.ab3@14075>   MOVE.w #$C31A,D1       ; #ftobover
0002B9C2 <AmiBlitz3.ab3@14076>   BSR.w overchk
0002B9C6 <AmiBlitz3.ab3@14078>   BSR.w floattolong2
0002B9CA <AmiBlitz3.ab3@14079> BRA.w convert_long_to_byte
0002B9CC <AmiBlitz3.ab3@14083> RTS
0002B9D2 <AmiBlitz3.ab3@14087>   TST.b typecheck
0002B9D6 <AmiBlitz3.ab3@14088>   BEQ 'l1
0002B9DC <AmiBlitz3.ab3@14089>   TST.b notypecheck
0002B9E0 <AmiBlitz3.ab3@14090>   BNE 'l1
0002B9E6 <AmiBlitz3.ab3@14091>   TST.l lasttoken
0002B9EC <AmiBlitz3.ab3@14097>   TST.b iee
0002B9F0 <AmiBlitz3.ab3@14098>   BNE ftol
0002B9F4 <AmiBlitz3.ab3@14100>   MOVE.w #$C31B,D1         ; #ftowover
0002B9F8 <AmiBlitz3.ab3@14101>   BSR.w overchk
0002B9FC <AmiBlitz3.ab3@14103>   BSR.w floattolong2
0002BA00 <AmiBlitz3.ab3@14104> BRA.w convert_long_to_word
0002BA02 <AmiBlitz3.ab3@14107> RTS
0002BA08 <AmiBlitz3.ab3@14111>   TST.b iee
0002BA0C <AmiBlitz3.ab3@14112>   BNE ftol
0002BA10 <AmiBlitz3.ab3@14114>   MOVE.w #$C31C,D1     ; #ftolover,
0002BA14 <AmiBlitz3.ab3@14115>   BSR.w overchk
0002BA18 <AmiBlitz3.ab3@14118>   MOVE.w #$FFE2,D1     ; #-30,
0002BA1C <AmiBlitz3.ab3@14119> BRA.w fdo2
0002BA1E <AmiBlitz3.ab3@14123>   MOVE.l d0,-(a7)
0002BA20 <AmiBlitz3.ab3@14124>   MOVEQ #0,d0
0002BA26 <AmiBlitz3.ab3@14125>   MOVE.w regnum,d0
0002BA28 <AmiBlitz3.ab3@14126>   ASL.l #7,d0
0002BA2E <AmiBlitz3.ab3@14127>   MOVE.l #$f2006000,d1
0002BA30 <AmiBlitz3.ab3@14128>   OR.l d0,d1
0002BA32 <AmiBlitz3.ab3@14129>   ASL.l #1,d0
0002BA34 <AmiBlitz3.ab3@14130>   ASL.l #8,d0
0002BA36 <AmiBlitz3.ab3@14131>   OR.l d0,d1
0002BA38 <AmiBlitz3.ab3@14132>   MOVE.l (a7)+,d0
0002BA3C <AmiBlitz3.ab3@14133> BRA writelong
0002BA3E <AmiBlitz3.ab3@14137>   MOVE.l d0,-(a7)
0002BA40 <AmiBlitz3.ab3@14138>   MOVEQ #0,d0
0002BA46 <AmiBlitz3.ab3@14139>   MOVE.l #$f23c4023,d1
0002BA4C <AmiBlitz3.ab3@14140>   MOVE.w regnum,d0
0002BA4E <AmiBlitz3.ab3@14141>   ASL.l #7,d0
0002BA50 <AmiBlitz3.ab3@14142>   OR.l d0,d1
0002BA54 <AmiBlitz3.ab3@14143>   BSR writelong
0002BA5A <AmiBlitz3.ab3@14144>   MOVE.l #$00010000,d1
0002BA5E <AmiBlitz3.ab3@14145>   BSR writelong
0002BA64 <AmiBlitz3.ab3@14146>   MOVE.w regnum,d0
0002BA66 <AmiBlitz3.ab3@14147>   ASL.l #7,d0
0002BA6C <AmiBlitz3.ab3@14148>   MOVE.l #$f2006000,d1
0002BA6E <AmiBlitz3.ab3@14149>   OR.l d0,d1
0002BA70 <AmiBlitz3.ab3@14150>   ASL.l #1,d0
0002BA72 <AmiBlitz3.ab3@14151>   ASL.l #8,d0
0002BA74 <AmiBlitz3.ab3@14152>   OR.l d0,d1
0002BA78 <AmiBlitz3.ab3@14153>   BSR writelong
0002BA7A <AmiBlitz3.ab3@14154>   MOVE.l (a7)+,d0
0002BA7C <AmiBlitz3.ab3@14155> RTS
0002BA7E <AmiBlitz3.ab3@14159> RTS
0002BA84 <AmiBlitz3.ab3@14166>   TST.b iee
0002BA88 <AmiBlitz3.ab3@14167>   BNE ftoq
0002BA8C <AmiBlitz3.ab3@14169>   MOVE.w #$C31B,D1    ; #ftowover,
0002BA90 <AmiBlitz3.ab3@14170>   BSR.w overchk
0002BA94 <AmiBlitz3.ab3@14172>   MOVE.w #$D301,D1    ; #fltoqu,
0002BA98 <AmiBlitz3.ab3@14173> BRA.w qtof2
0002BA9E <AmiBlitz3.ab3@14178>    TST.b blitzparloop
0002BAA2 <AmiBlitz3.ab3@14179>    BNE 'l1
0002BAA8 <AmiBlitz3.ab3@14180>    TST.b funcparloop
0002BAAC <AmiBlitz3.ab3@14181>    BNE 'l1
0002BAB0 <AmiBlitz3.ab3@14182>    BRA error_convert_types
0002BAB8 <AmiBlitz3.ab3@14185>   CMP.b #2,optistring
0002BABC <AmiBlitz3.ab3@14186>   BEQ JLrts
0002BAC2 <AmiBlitz3.ab3@14188>   MOVE.w stol,D1
0002BAC6 <AmiBlitz3.ab3@14189>   BSR.w writeword
0002BACE <AmiBlitz3.ab3@14191>   CMPI.w #$2,sbgot
0002BAD2 <AmiBlitz3.ab3@14193>   BCS.w sbtolong                     ; was BRA
0002BAD6 <AmiBlitz3.ab3@14195>   MOVE.w ceos(PC),D1                 ; begin copy of sbtolong
0002BADA <AmiBlitz3.ab3@14196>   BSR.w writeword
0002BAE0 <AmiBlitz3.ab3@14198>   MOVE.w regnum,D1
0002BAE2 <AmiBlitz3.ab3@14199>   LSL.w #8,D1
0002BAE4 <AmiBlitz3.ab3@14200>   LSL.w #1,D1
0002BAEC <AmiBlitz3.ab3@14201>   CMPI.w #$2,sbgot
0002BAF0 <AmiBlitz3.ab3@14202>   BCS.w sbtolong_skip2
0002BAF6 <AmiBlitz3.ab3@14203>   MOVE.w a2offset,D3
0002BAFC <AmiBlitz3.ab3@14204>   SUB.w thisstuse,D3
0002BB00 <AmiBlitz3.ab3@14205>   CMP.w #$6,D3
0002BB04 <AmiBlitz3.ab3@14206>   BNE.w 'lenonly
0002BB0A <AmiBlitz3.ab3@14207>   OR.w movestst2,D1
0002BB0E <AmiBlitz3.ab3@14208>   BSR.w writeword
0002BB14 <AmiBlitz3.ab3@14209>   LEA movestst2+2,A0
0002BB1A <AmiBlitz3.ab3@14210>   LEA movestst2f,A1
0002BB1E <AmiBlitz3.ab3@14211>  BRA.w pokecode2
0002BB24 <AmiBlitz3.ab3@14214>   OR.w movea7dn,D1
0002BB28 <AmiBlitz3.ab3@14215>   BSR.w writeword
0002BB2E <AmiBlitz3.ab3@14216>   MOVE.l #0,D1
0002BB32 <AmiBlitz3.ab3@14217> BRA.w writeword                      ; end of copy
0002BB38 <AmiBlitz3.ab3@14224>   ADDQ.w #1,fuckpos
0002BB3C <AmiBlitz3.ab3@14225>   BSR.w writeconvertcode
0002BB42 <AmiBlitz3.ab3@14226>   SUBQ.w #1,fuckpos
0002BB44 <AmiBlitz3.ab3@14230> RTS
0002BB46 <AmiBlitz3.ab3@14234>   MOVE.w D3,D1
0002BB4A <AmiBlitz3.ab3@14236>   CMP.w #7,d1
0002BB4E <AmiBlitz3.ab3@14237>   BLE 'ok
0002BB54 <AmiBlitz3.ab3@14238>   JMP errorinternalconvert
0002BB56 <AmiBlitz3.ab3@14242>   SUBQ.w #1,D1
0002BB5A <AmiBlitz3.ab3@14243>   MULU #$7,D1
0002BB5C <AmiBlitz3.ab3@14244>   ADD.w D2,D1
0002BB5E <AmiBlitz3.ab3@14245>   SUBQ.w #1,D1
0002BB60 <AmiBlitz3.ab3@14246>   LSL.w #2,D1
0002BB66 <AmiBlitz3.ab3@14247>   LEA convtable,A0
0002BB6A <AmiBlitz3.ab3@14248>   MOVE.l $0(A0,D1.W),D1
0002BB6E <AmiBlitz3.ab3@14249>   BEQ.w 'skip
0002BB70 <AmiBlitz3.ab3@14250>     MOVEA.l D1,A0
0002BB74 <AmiBlitz3.ab3@14252>     CMP.b #$ff,d3
0002BB78 <AmiBlitz3.ab3@14253>     BEQ 'skip
0002BB7A <AmiBlitz3.ab3@14255>  JMP (A0)
0002BB7C <AmiBlitz3.ab3@14258> RTS
0002BB80 <AmiBlitz3.ab3@14261> usedfrom:  Ds.l 1
0002BB84 <AmiBlitz3.ab3@14268>   CMP.w #"\",D0
0002BB88 <AmiBlitz3.ab3@14269>   BNE.w 'skip0
0002BB8C <AmiBlitz3.ab3@14271>     CMP.b #"\",(a5)
0002BB90 <AmiBlitz3.ab3@14272>     BNE 'first
0002BB96 <AmiBlitz3.ab3@14273>       MOVE.l A5,usedfrom
0002BB9C <AmiBlitz3.ab3@14274>       LEA path2,A5
0002BBA0 <AmiBlitz3.ab3@14275>  BRA 'g1
0002BBA2 <AmiBlitz3.ab3@14279>     SUBQ.w #1,A5
0002BBA8 <AmiBlitz3.ab3@14280>   MOVE.l A5,usedfrom
0002BBAE <AmiBlitz3.ab3@14281>   LEA usedpath,A5                                          ;read path
0002BBB2 <AmiBlitz3.ab3@14286>   BSR.w get1bytemain
0002BBB8 <AmiBlitz3.ab3@14289>   CLR.w flagmask
0002BBBC <AmiBlitz3.ab3@14290>   CMP.w #$2A,D0             ;'*'
0002BBC0 <AmiBlitz3.ab3@14291>    BNE.w 'skip
0002BBC8 <AmiBlitz3.ab3@14292>   MOVE.w #$0001,flagmask
0002BBCC <AmiBlitz3.ab3@14295>    BSR.w getparameter2
0002BBD0 <AmiBlitz3.ab3@14298>    BEQ.w syntaxerr
0002BBD4 <AmiBlitz3.ab3@14299>   CMP.w #$28,D0             ;'('
0002BBD8 <AmiBlitz3.ab3@14300>    BEQ.w 'setmask
0002BBDC <AmiBlitz3.ab3@14301>   CMP.w #$2E,D0             ;'.'
0002BBE0 <AmiBlitz3.ab3@14302>    BEQ.w 'morem
0002BBE4 <AmiBlitz3.ab3@14303>   CMP.w #$24,D0             ;'$'
0002BBE8 <AmiBlitz3.ab3@14304>    BNE.w 'done
0002BBF0 <AmiBlitz3.ab3@14305>   ORI.w #$8,flagmask
0002BBF4 <AmiBlitz3.ab3@14306>    BSR.w storeloc
0002BBF8 <AmiBlitz3.ab3@14307>    BSR.w get1bytemain
0002BBFC <AmiBlitz3.ab3@14308>  BRA.w 'morez
0002BC00 <AmiBlitz3.ab3@14312>   BSR.w storeloc
0002BC02 <AmiBlitz3.ab3@14313>   MOVE.w D2,-(A7)
0002BC08 <AmiBlitz3.ab3@14314>   LEA namebuff2,A1
0002BC0C <AmiBlitz3.ab3@14315>    BSR.w makename3
0002BC10 <AmiBlitz3.ab3@14316>    BEQ.w syntaxerr
0002BC12 <AmiBlitz3.ab3@14317>   MOVE.w (A7)+,D2
0002BC14 <AmiBlitz3.ab3@14320>    MOVE.w D0,D1
0002BC18 <AmiBlitz3.ab3@14321>    BSR.w resloc
0002BC1C <AmiBlitz3.ab3@14322>    CMP.w #$28,D1             ;'('
0002BC20 <AmiBlitz3.ab3@14323>    BNE.w 'done
0002BC28 <AmiBlitz3.ab3@14326>   ORI.w #$2,flagmask
0002BC2A <AmiBlitz3.ab3@14329>  RTS
0002BC2E <AmiBlitz3.ab3@14332>   CMP.w #$40,D0              ;'@'
0002BC32 <AmiBlitz3.ab3@14333>    BNE.w 'skip2
0002BC3A <AmiBlitz3.ab3@14334>   MOVE.w #$0005,flagmask
0002BC3E <AmiBlitz3.ab3@14335>  BRA.w 'more2
0002BC42 <AmiBlitz3.ab3@14338>   BSR.w makename2
0002BC46 <AmiBlitz3.ab3@14339> BRA.w 'more
0002BC4A <AmiBlitz3.ab3@14343>   MOVE.w #$FED3,D1          ; #65235
0002BC4E <AmiBlitz3.ab3@14344>    BSR.w uselib
0002BC54 <AmiBlitz3.ab3@14345>   LEA pusha3,A0
0002BC5A <AmiBlitz3.ab3@14346>   LEA pusha3f,A1
0002BC5E <AmiBlitz3.ab3@14347> BRA.w pokecode
0002BC62 <AmiBlitz3.ab3@14351>   MOVE.w #$FED3,D1          ; #65235
0002BC66 <AmiBlitz3.ab3@14352>    BSR.w uselib
0002BC6C <AmiBlitz3.ab3@14353>   LEA pulla3,A0
0002BC72 <AmiBlitz3.ab3@14354>   LEA pulla3f,A1
0002BC76 <AmiBlitz3.ab3@14355> BRA.w pokecode
0002BC78 <AmiBlitz3.ab3@14359> ceos:   Dc.b $42,$1B                                       ;CLR.B   (A3)+             ;*!
0002BC80 <AmiBlitz3.ab3@14365>     CMP.b #2,optistring
0002BC84 <AmiBlitz3.ab3@14366>    BEQ 'l10
0002BC88 <AmiBlitz3.ab3@14368>    MOVE.w ceos(PC),D1
0002BC8C <AmiBlitz3.ab3@14369>    BSR.w writeword                                         ;clr.b (a3)
0002BC92 <AmiBlitz3.ab3@14374>   MOVE.w regnum,D1
0002BC94 <AmiBlitz3.ab3@14375>   LSL.w #8,D1
0002BC96 <AmiBlitz3.ab3@14376>   LSL.w #1,D1
0002BC9E <AmiBlitz3.ab3@14377>   CMPI.w #$2,sbgot
0002BCA2 <AmiBlitz3.ab3@14378>    BCS.w sbtolong_skip2
0002BCA8 <AmiBlitz3.ab3@14379>   MOVE.w a2offset,D3                                       ;stackuse,d3 org source
0002BCAE <AmiBlitz3.ab3@14380>   SUB.w thisstuse,D3
0002BCB2 <AmiBlitz3.ab3@14381>   CMP.w #$6,D3
0002BCB6 <AmiBlitz3.ab3@14382>    BNE.w 'lenonly
0002BCBC <AmiBlitz3.ab3@14383>   OR.w movestst2,D1
0002BCC0 <AmiBlitz3.ab3@14384>    BSR.w writeword
0002BCC6 <AmiBlitz3.ab3@14385>   LEA movestst2+2,A0
0002BCCC <AmiBlitz3.ab3@14386>   LEA movestst2f,A1
0002BCD0 <AmiBlitz3.ab3@14387>  BRA.w pokecode2
0002BCD6 <AmiBlitz3.ab3@14390>    OR.w movea7dn,D1
0002BCDA <AmiBlitz3.ab3@14391>    BSR.w writeword
0002BCE0 <AmiBlitz3.ab3@14392>   MOVE.l movea7dn+2,D1
0002BCE4 <AmiBlitz3.ab3@14405>   BSR writelong
0002BCEC <AmiBlitz3.ab3@14408>    CMP.w #6,regnum
0002BCF0 <AmiBlitz3.ab3@14409>    BEQ 'l1
0002BCF6 <AmiBlitz3.ab3@14410>    TST.w stackpar
0002BCFA <AmiBlitz3.ab3@14411>    BNE 'l1
0002BD00 <AmiBlitz3.ab3@14412>    TST.b funcparloop
0002BD04 <AmiBlitz3.ab3@14413>    BEQ 'l1
0002BD0A <AmiBlitz3.ab3@14414>    MOVE.l #$48780000,d1
0002BD0E <AmiBlitz3.ab3@14415>    BSR writelong
0002BD10 <AmiBlitz3.ab3@14419>  RTS
0002BD12 <AmiBlitz3.ab3@14425>      MOVE.l d1,-(a7)
0002BD1A <AmiBlitz3.ab3@14426>      CMP.w #6,regnum
0002BD1E <AmiBlitz3.ab3@14427>      BEQ 'l1
0002BD24 <AmiBlitz3.ab3@14428>      TST.w stackpar
0002BD28 <AmiBlitz3.ab3@14429>      BNE 'l1
0002BD2E <AmiBlitz3.ab3@14430>      TST.b funcparloop
0002BD32 <AmiBlitz3.ab3@14431>      BEQ 'l1
0002BD38 <AmiBlitz3.ab3@14432>      MOVE.l #$48780000,d1
0002BD3C <AmiBlitz3.ab3@14433>      BSR writelong
0002BD3E <AmiBlitz3.ab3@14436>      MOVE.l (a7)+,d1
0002BD44 <AmiBlitz3.ab3@14439>    OR.w movestdn,D1
0002BD48 <AmiBlitz3.ab3@14440>    BSR.w writeword
0002BD4C <AmiBlitz3.ab3@14441>   MOVE.w #$FED3,D1        ;#65235
0002BD50 <AmiBlitz3.ab3@14442>    BSR.w uselib
0002BD54 <AmiBlitz3.ab3@14443>   MOVE.w $A(A1),D1
0002BD58 <AmiBlitz3.ab3@14444> BRA.w writeword
0002BD5A <AmiBlitz3.ab3@14447> unknown:    Ds.w 1
0002BD60 <AmiBlitz3.ab3@14450> somecode:   Dc.b $0C,$80,$00,$01,$00,$00                   ;CMPI.L  #$00010000,D0
0002BD64 <AmiBlitz3.ab3@14451> somecode2:  Dc.b $65,$00,$00,$08                           ;BCS.W   codeisok
0002BD6A <AmiBlitz3.ab3@14452>             Dc.b $4E,$B9,$00,$00,$00,$00                   ;JSR $00000000
0002BD70 <AmiBlitz3.ab3@14458>   TST.b debugmode
0002BD74 <AmiBlitz3.ab3@14459>   BEQ.w sharreval
0002BD78 <AmiBlitz3.ab3@14460>  BSR.w arreval
0002BD7C <AmiBlitz3.ab3@14463>   MOVE.w somecode(PC),D1
0002BD82 <AmiBlitz3.ab3@14464>   OR.w regnum,D1
0002BD86 <AmiBlitz3.ab3@14465>    BSR.w writeword
0002BD88 <AmiBlitz3.ab3@14466>   MOVEQ.l #$01,D1
0002BD8A <AmiBlitz3.ab3@14467>   SWAP D1
0002BD8E <AmiBlitz3.ab3@14468>    BSR.w writelong
0002BD92 <AmiBlitz3.ab3@14469>   MOVE.l somecode2(PC),D1
0002BD96 <AmiBlitz3.ab3@14470>    BSR.w writelong
0002BD9A <AmiBlitz3.ab3@14471>   MOVE.w #$C309,D1
0002BD9E <AmiBlitz3.ab3@14472> BRA.w Atokejsr
0002BDA0 <AmiBlitz3.ab3@14476>   MOVEQ.l #$02,D2
0002BDA2 <AmiBlitz3.ab3@14477>   MOVEQ.l #$00,D1
0002BDA4 <AmiBlitz3.ab3@14478>   MOVEQ.l #$00,D3
0002BDA8 <AmiBlitz3.ab3@14479> BRA.w maineval2
0002BDAA <AmiBlitz3.ab3@14483>   MOVEQ.l #$03,D2
0002BDAC <AmiBlitz3.ab3@14484>   MOVEQ.l #$00,D1
0002BDAE <AmiBlitz3.ab3@14485>   MOVEQ.l #$00,D3
0002BDB4 <AmiBlitz3.ab3@14486>   MOVE.b notypecheck,-(a7)
0002BDBC <AmiBlitz3.ab3@14487>   MOVE.b #1,notypecheck                                    ;typecheck need switch off for array offset calculation code
0002BDC2 <AmiBlitz3.ab3@14488>   JSR maineval2
0002BDC8 <AmiBlitz3.ab3@14489>   MOVE.b (a7)+,notypecheck                                 ;now its switch to old state
0002BDCA <AmiBlitz3.ab3@14490>   RTS
0002BDD4 <AmiBlitz3.ab3@14494>   MOVE.w oldqflag,instringon
0002BDDA <AmiBlitz3.ab3@14495>   MOVEA.l lastsourcepos,A5
0002BDDC <AmiBlitz3.ab3@14496>   MOVEQ.l #-$01,D1
0002BDDE <AmiBlitz3.ab3@14497>   MOVEQ.l #-$01,D3
0002BDE2 <AmiBlitz3.ab3@14498> BRA.w peval
0002BDEC <AmiBlitz3.ab3@14503>   MOVE.w oldqflag,instringon
0002BDF2 <AmiBlitz3.ab3@14504>   MOVEA.l lastsourcepos,A5
0002BDF4 <AmiBlitz3.ab3@14507>   MOVEQ.l #-$01,D1
0002BDF6 <AmiBlitz3.ab3@14508>   MOVEQ.l #$00,D3
0002BDFC <AmiBlitz3.ab3@14509>   MOVE.l leftsidetype,-(a7)
0002BE02 <AmiBlitz3.ab3@14510>   MOVE.l rightsidetype,-(a7)
0002BE08 <AmiBlitz3.ab3@14511>   MOVE.w leftsideflagmask,-(a7)
0002BE0E <AmiBlitz3.ab3@14512>   MOVE.w rightsideflagmask,-(a7)
0002BE14 <AmiBlitz3.ab3@14513>   CLR.l leftsidetype
0002BE1A <AmiBlitz3.ab3@14514>   CLR.l rightsidetype
0002BE20 <AmiBlitz3.ab3@14515>   CLR.w leftsideflagmask
0002BE26 <AmiBlitz3.ab3@14516>   CLR.w rightsideflagmask
0002BE2C <AmiBlitz3.ab3@14517>   JSR maineval
0002BE32 <AmiBlitz3.ab3@14518>   MOVE.w (a7)+,rightsideflagmask
0002BE38 <AmiBlitz3.ab3@14519>   MOVE.w (a7)+,leftsideflagmask
0002BE3E <AmiBlitz3.ab3@14520>   MOVE.l (a7)+,rightsidetype
0002BE44 <AmiBlitz3.ab3@14521>   MOVE.l (a7)+,leftsidetype
0002BE46 <AmiBlitz3.ab3@14522>   RTS
0002BE50 <AmiBlitz3.ab3@14526>   MOVE.w oldqflag,instringon
0002BE56 <AmiBlitz3.ab3@14527>   MOVEA.l lastsourcepos,A5
0002BE58 <AmiBlitz3.ab3@14528>   MOVEQ.l #$00,D1
0002BE5A <AmiBlitz3.ab3@14529>   MOVEQ.l #-$01,D3
0002BE5E <AmiBlitz3.ab3@14530> BRA.w maineval
0002BE60 <AmiBlitz3.ab3@14534>   MOVEQ.l #$01,D1
0002BE62 <AmiBlitz3.ab3@14535>   MOVEQ.l #-$01,D3
0002BE66 <AmiBlitz3.ab3@14536> BRA.w maineval
0002BE70 <AmiBlitz3.ab3@14541>   MOVE.w oldqflag,instringon
0002BE76 <AmiBlitz3.ab3@14542>   MOVEA.l lastsourcepos,A5
0002BE78 <AmiBlitz3.ab3@14545>   MOVEQ.l #$00,D1                                        ;no push
0002BE7A <AmiBlitz3.ab3@14546>   MOVEQ.l #$00,D3
0002BE82 <AmiBlitz3.ab3@14567>    CMPI.w #$6,regnum
0002BE86 <AmiBlitz3.ab3@14568>    BCS.w maineval2
0002BE88 <AmiBlitz3.ab3@14569>    MOVEQ #0,d1
0002BE8E <AmiBlitz3.ab3@14570>    MOVE.l destpointer,a4
0002BE94 <AmiBlitz3.ab3@14572>    CMPA.l destbufferend,A4
0002BE98 <AmiBlitz3.ab3@14573>    BCC.w 'l2
0002BE9E <AmiBlitz3.ab3@14575>    CMP.w #$2f0a,-2(a4)                                    ;bug is a move.l a2,-(a7) before (show temp calc)?
0002BEA2 <AmiBlitz3.ab3@14577>    BNE 'l2
0002BEA6 <AmiBlitz3.ab3@14581> BRA 'l1
0002BEA8 <AmiBlitz3.ab3@14584>   MOVEQ.l #-$01,D1                                         ;do stackpar write
0002BEB0 <AmiBlitz3.ab3@14587>   MOVE.w #$0006,regnum                                     ;write a func par To stack
0002BEB6 <AmiBlitz3.ab3@14590>   MOVE.w thisstuse,-(A7)
0002BEC0 <AmiBlitz3.ab3@14591>   MOVE.w a2offset,thisstuse
0002BEC6 <AmiBlitz3.ab3@14592>   MOVE.w stackpar,-(A7)
0002BECC <AmiBlitz3.ab3@14593>   MOVE.w D1,stackpar
0002BED2 <AmiBlitz3.ab3@14594>   MOVE.w sbgot,-(A7)
0002BED8 <AmiBlitz3.ab3@14595>   CLR.w sbgot
0002BEDC <AmiBlitz3.ab3@14596>   MOVE.w unknown(PC),-(A7)
0002BEE2 <AmiBlitz3.ab3@14597>   MOVE.w D3,unknown
0002BEE4 <AmiBlitz3.ab3@14598>   MOVE.w D2,-(a7)
0002BEEA <AmiBlitz3.ab3@14599>   MOVE.w d2,mode
0002BEEE <AmiBlitz3.ab3@14600>    BSR.w eval3
0002BEF0 <AmiBlitz3.ab3@14601>   MOVE.w (a7)+,d3
0002BEF4 <AmiBlitz3.ab3@14602>    BEQ.w 'noconv
0002BEF8 <AmiBlitz3.ab3@14603>   MOVE.w unknown(PC),D1
0002BEFC <AmiBlitz3.ab3@14604>    BNE.w 'noconv
0002BEFE <AmiBlitz3.ab3@14605>   EXG.l D2,D3
0002BF00 <AmiBlitz3.ab3@14606>    MOVE.l a2,-(a7)
0002BF06 <AmiBlitz3.ab3@14607>    TST.b curtemplabel
0002BF0A <AmiBlitz3.ab3@14608>    BEQ 'l10
0002BF10 <AmiBlitz3.ab3@14609>    MOVE.l asmbuff,a2
0002BF16 <AmiBlitz3.ab3@14610>    CMP.w #$c,$8(a2)
0002BF1A <AmiBlitz3.ab3@14611>    BEQ 'l20
0002BF20 <AmiBlitz3.ab3@14612>    CMP.w #$d,$8(a2)
0002BF24 <AmiBlitz3.ab3@14613>    BEQ 'l20
0002BF26 <AmiBlitz3.ab3@14616>   CMP.w d2,d3
0002BF2A <AmiBlitz3.ab3@14617>   BEQ 'l20
0002BF2E <AmiBlitz3.ab3@14618>   BSR.w writeconvertcode
0002BF34 <AmiBlitz3.ab3@14619>   CLR.b doimmediate
0002BF36 <AmiBlitz3.ab3@14622>   MOVE.l (a7)+,a2
0002BF3C <AmiBlitz3.ab3@14625>   MOVE.w (A7)+,unknown
0002BF42 <AmiBlitz3.ab3@14626>   MOVE.w stackpar,D1
0002BF46 <AmiBlitz3.ab3@14627>    BEQ.w 'skipme
0002BF4A <AmiBlitz3.ab3@14628>    BMI.w 'skipme
0002BF50 <AmiBlitz3.ab3@14632>   MOVE.w regnum,D1
0002BF52 <AmiBlitz3.ab3@14633>   LSL.w #8,D1
0002BF54 <AmiBlitz3.ab3@14634>   LSL.w #1,D1
0002BF58 <AmiBlitz3.ab3@14635>   CMP.w #$7,D2
0002BF5C <AmiBlitz3.ab3@14636>    BNE.w 'hi1
0002BF64 <AmiBlitz3.ab3@14637>    CMP.b #2,optistring
0002BF68 <AmiBlitz3.ab3@14638>    BEQ 'hi1a
0002BF6A <AmiBlitz3.ab3@14639>   MOVE.w D1,-(A7)
0002BF70 <AmiBlitz3.ab3@14640>   OR.w getstlen,D1
0002BF74 <AmiBlitz3.ab3@14641>    BSR.w writeword
0002BF76 <AmiBlitz3.ab3@14642>   MOVE.w (A7)+,D1
0002BF7C <AmiBlitz3.ab3@14645>   ADDQ.w #2,a2offset                                        ;lib mode to stack
0002BF80 <AmiBlitz3.ab3@14649>   MOVE.w #$3f3c,d1
0002BF84 <AmiBlitz3.ab3@14650>    BSR.w writeword
0002BF86 <AmiBlitz3.ab3@14654>   MOVE.w d2,d1
0002BF8C <AmiBlitz3.ab3@14655>   MOVE.w d1,libmode
0002BF90 <AmiBlitz3.ab3@14656>    BSR.w writeword
0002BF94 <AmiBlitz3.ab3@14657>   CMP.w #$7,D2
0002BF98 <AmiBlitz3.ab3@14658>    BNE.w 'skipme
0002BF9E <AmiBlitz3.ab3@14659>   MOVE.w putstlen,D1
0002BFA4 <AmiBlitz3.ab3@14660>   OR.w regnum,D1
0002BFA8 <AmiBlitz3.ab3@14661>    BSR.w writeword
0002BFAC <AmiBlitz3.ab3@14664>    CMP.w #$7,D2
0002BFB0 <AmiBlitz3.ab3@14665>    BNE.w 'notst
0002BFB8 <AmiBlitz3.ab3@14676>    CMP.b #2,optistring
0002BFBC <AmiBlitz3.ab3@14677>    BEQ 'skipme_l10
0002BFC2 <AmiBlitz3.ab3@14678>    ADDQ.w #4,a2offset                                      ;a length on da stack.....
0002BFC6 <AmiBlitz3.ab3@14679>    BSR.w sbtolong
0002BFCA <AmiBlitz3.ab3@14680>  BRA.w 'notst2
0002BFD2 <AmiBlitz3.ab3@14684>     CMP.w #6,regnum
0002BFD6 <AmiBlitz3.ab3@14685>     BEQ 'skipme_l10_l1
0002BFDC <AmiBlitz3.ab3@14686>     TST.b funcparloop
0002BFE0 <AmiBlitz3.ab3@14687>     BEQ 'skipme_l10_l1
0002BFE6 <AmiBlitz3.ab3@14688>     MOVE.l #$48780000,d1
0002BFEA <AmiBlitz3.ab3@14689>     BSR writelong
0002BFEE <AmiBlitz3.ab3@14693>  BRA.w 'notst2
0002BFF4 <AmiBlitz3.ab3@14696>   ADDQ.w #2,a2offset
0002BFF8 <AmiBlitz3.ab3@14697>  BRA 'skipme
0002C000 <AmiBlitz3.ab3@14700>   CMPI.w #$2,sbgot
0002C004 <AmiBlitz3.ab3@14701>    BCS.w 'notst2                                         ;correct stack
0002C008 <AmiBlitz3.ab3@14702>   MOVE.w ststfix(PC),D1
0002C00C <AmiBlitz3.ab3@14703>    BSR.w writeword
0002C012 <AmiBlitz3.ab3@14706>   MOVE.w (A7)+,sbgot
0002C018 <AmiBlitz3.ab3@14707>   MOVE.w stackpar,D1
0002C01C <AmiBlitz3.ab3@14708>    BPL.w 'skip
0002C020 <AmiBlitz3.ab3@14709>    CMP.b #7,d2
0002C024 <AmiBlitz3.ab3@14710>    BEQ 'notst2_l1
0002C02A <AmiBlitz3.ab3@14711>   TST.b funcparloop
0002C02E <AmiBlitz3.ab3@14712>   BEQ 'notst2_l1
0002C032 <AmiBlitz3.ab3@14713>   CMP.b #5,d2
0002C036 <AmiBlitz3.ab3@14714>   BNE 'notst2_skip
0002C03C <AmiBlitz3.ab3@14715>   TST.b fpu
0002C040 <AmiBlitz3.ab3@14716>   BEQ 'notst2_skip
0002C046 <AmiBlitz3.ab3@14717>   MOVE.l #$f2066700,d1                                     ;fmove.s fp6,d6
0002C04C <AmiBlitz3.ab3@14718>   JSR writelong
0002C050 <AmiBlitz3.ab3@14721>   MOVE.w #$c4ff,d1                                         ;savetemp+regnum
0002C056 <AmiBlitz3.ab3@14722>   ADD.w parnum,d1
0002C05C <AmiBlitz3.ab3@14723>   JSR Atokejsr
0002C062 <AmiBlitz3.ab3@14724>    TST.w dontwrite
0002C066 <AmiBlitz3.ab3@14725>    BNE 'notst2_l1
0002C06C <AmiBlitz3.ab3@14726>    MOVE.l data1start,d1
0002C072 <AmiBlitz3.ab3@14727>    MOVE.l destpointer,a4
0002C076 <AmiBlitz3.ab3@14728>    ADD.l d1,-4(a4)
0002C07C <AmiBlitz3.ab3@14729>    MOVE.l destpointer,d1
0002C07E <AmiBlitz3.ab3@14730>    SUBQ.l #4,d1
0002C084 <AmiBlitz3.ab3@14731>    SUB.l destbufferstart,d1
0002C086 <AmiBlitz3.ab3@14732>    MOVE.l d2,-(a7)
0002C088 <AmiBlitz3.ab3@14733>    MOVE.l d1,d2
0002C08E <AmiBlitz3.ab3@14734>    JSR addhunkoffset
0002C090 <AmiBlitz3.ab3@14735>    MOVE.l (a7)+,d2
0002C094 <AmiBlitz3.ab3@14736>  BRA 'skip
0002C09A <AmiBlitz3.ab3@14739>   ADDQ.w #2,a2offset
0002C0A0 <AmiBlitz3.ab3@14740>   MOVE.w pushd0wd,D1
0002C0A4 <AmiBlitz3.ab3@14741>   CMP.w #$3,D2                                             ;write parameter to stack
0002C0A8 <AmiBlitz3.ab3@14742>    BCS.w 'ok
0002C0AE <AmiBlitz3.ab3@14743>   ADDQ.w #2,a2offset
0002C0B4 <AmiBlitz3.ab3@14744>   TST.b fpu
0002C0B8 <AmiBlitz3.ab3@14745>   BEQ 'notst2_nofpu
0002C0BC <AmiBlitz3.ab3@14746>   CMP.w #5,d2
0002C0C0 <AmiBlitz3.ab3@14747>   BNE 'notst2_nofpu
0002C0C2 <AmiBlitz3.ab3@14748>   MOVEQ #0,d1
0002C0C8 <AmiBlitz3.ab3@14749>   MOVE.w regnum,d1
0002C0CA <AmiBlitz3.ab3@14750>   ASL.l #7,d1
0002C0D0 <AmiBlitz3.ab3@14751>   OR.l #$f2276400,d1
0002C0D4 <AmiBlitz3.ab3@14752>   BSR writelong
0002C0D8 <AmiBlitz3.ab3@14753>  BRA 'skip
0002C0DE <AmiBlitz3.ab3@14756>   MOVE.w pushd0l,D1
0002C0E4 <AmiBlitz3.ab3@14759>    OR.w regnum,D1
0002C0E8 <AmiBlitz3.ab3@14760>    BSR.w writeword                                         ;nat
0002C0EE <AmiBlitz3.ab3@14763>   MOVE.w (A7)+,stackpar
0002C0F4 <AmiBlitz3.ab3@14764>   MOVE.w (A7)+,thisstuse
0002C0F6 <AmiBlitz3.ab3@14765> RTS
0002C0F8 <AmiBlitz3.ab3@14768> thisstuse: Ds.w 1
0002C0FA <AmiBlitz3.ab3@14771> ststfix:   Dc.b $58,$4F                                    ;ADDQ.W  #4,A7
0002C0FC <AmiBlitz3.ab3@14772> pushut:    Dc.b $3F,$00                                    ;MOVE.W  D0,-(A7)
0002C100 <AmiBlitz3.ab3@14777>   BSR.w eval4
0002C10A <AmiBlitz3.ab3@14778>   SUBI.l #$12,forthsp
0002C10C <AmiBlitz3.ab3@14779> RTS
0002C10E <AmiBlitz3.ab3@14783>   MOVEQ.l #$01,D1
0002C112 <AmiBlitz3.ab3@14785>       MOVEA.l precsp(PC),A1
0002C114 <AmiBlitz3.ab3@14786>       MOVE.l A0,(A1)+
0002C116 <AmiBlitz3.ab3@14787>       MOVE.w D1,(A1)+
0002C11C <AmiBlitz3.ab3@14788>       MOVE.l A1,precsp
0002C120 <AmiBlitz3.ab3@14789>    BSR.w calcloop
0002C122 <AmiBlitz3.ab3@14790>   TST.w D1
0002C126 <AmiBlitz3.ab3@14791>    BNE.w syntaxerr
0002C12C <AmiBlitz3.ab3@14792>   SUBQ.l #6,precsp                                      ;pop the prec set up
0002C12E <AmiBlitz3.ab3@14793> RTS
0002C132 <AmiBlitz3.ab3@14798>   BSR.w JL_0_9C24
0002C136 <AmiBlitz3.ab3@14801>   MOVEA.l precsp(PC),A1
0002C138 <AmiBlitz3.ab3@14802>   CMP.w -(A1),D1
0002C13C <AmiBlitz3.ab3@14803>    BHI.w JL_0_9B0A
0002C13E <AmiBlitz3.ab3@14804> RTS
0002C142 <AmiBlitz3.ab3@14809>   MOVEA.l precsp(PC),A1
0002C144 <AmiBlitz3.ab3@14810>   MOVE.l A0,(A1)+
0002C146 <AmiBlitz3.ab3@14811>   MOVE.w D1,(A1)+
0002C14C <AmiBlitz3.ab3@14812>   MOVE.l A1,precsp
0002C14E <AmiBlitz3.ab3@14813>   MOVE.w D2,-(A7)
0002C154 <AmiBlitz3.ab3@14814>   ADDQ.w #1,regnum
0002C158 <AmiBlitz3.ab3@14815>    BSR.w calcloop               ;constant optimizer
0002C15E <AmiBlitz3.ab3@14816>   SUBQ.w #1,regnum
0002C160 <AmiBlitz3.ab3@14817>   MOVE.w (A7)+,D3
0002C164 <AmiBlitz3.ab3@14818>   MOVEM.l D1/A0,-(A7)
0002C168 <AmiBlitz3.ab3@14819>    BEQ.w JL_0_9B2E
0002C16C <AmiBlitz3.ab3@14820>    BSR.w convtypef
0002C170 <AmiBlitz3.ab3@14823>   BSR.w popprec
0002C174 <AmiBlitz3.ab3@14824>   BSR.w writecode
0002C178 <AmiBlitz3.ab3@14825>   MOVEA.l forthsp(PC),A0
0002C17C <AmiBlitz3.ab3@14826>   MOVE.w -$2(A0),D1
0002C180 <AmiBlitz3.ab3@14827>   OR.w -$14(A0),D1
0002C184 <AmiBlitz3.ab3@14828>   MOVE.w D1,-$14(A0)
0002C188 <AmiBlitz3.ab3@14829>    BNE.w JL_0_9C0E
0002C18E <AmiBlitz3.ab3@14830>   MOVE.w dontwrite,D1
0002C192 <AmiBlitz3.ab3@14831>    BNE.w JL_0_9C0E
0002C196 <AmiBlitz3.ab3@14832>    MOVEA.l -$24(A0),A0
0002C2D2 <AmiBlitz3.ab3@14834>  !newcalc
0002C2D6 <AmiBlitz3.ab3@14835>    BEQ 'l10
0002C2DA <AmiBlitz3.ab3@14836>    MOVEA.l forthsp(PC),A0
0002C2E2 <AmiBlitz3.ab3@14837>    MOVE.w -$18(A0),lasta6
0002C2EA <AmiBlitz3.ab3@14838>    MOVE.l -$1C(A0),lasta6
0002C2EE <AmiBlitz3.ab3@14839>    MOVEA.l -$24(A0),A0
0002C2F4 <AmiBlitz3.ab3@14840>    MOVE.l A0,destpointer
0002C2FA <AmiBlitz3.ab3@14841>    MOVEA.l _mathffpbase,A6
0002C300 <AmiBlitz3.ab3@14842>    MOVEA.l ffplib,A1
0002C304 <AmiBlitz3.ab3@14843> BRA cont1
0002C308 <AmiBlitz3.ab3@14846>   MOVE.w #$2000,D1
0002C30E <AmiBlitz3.ab3@14847>   OR.w regnum,D1
0002C312 <AmiBlitz3.ab3@14848>    BSR.w writeword
0002C314 <AmiBlitz3.ab3@14849>     MOVEQ #0,d1
0002C31A <AmiBlitz3.ab3@14850>     MOVE.w regnum,D1
0002C31C <AmiBlitz3.ab3@14851>     ASL.l #8,d1
0002C31E <AmiBlitz3.ab3@14852>     ASL.l #2,d1
0002C324 <AmiBlitz3.ab3@14853>     OR.l #$f2000000,d1
0002C328 <AmiBlitz3.ab3@14854>     BSR writelong
0002C32C <AmiBlitz3.ab3@14855>   MOVE.w #$4E75,D1
0002C330 <AmiBlitz3.ab3@14856>    BSR.w writeword
0002C338 <AmiBlitz3.ab3@14857>   MOVE.w -$18(A0),lasta6
0002C340 <AmiBlitz3.ab3@14858>   MOVE.l -$1C(A0),lasta6
0002C344 <AmiBlitz3.ab3@14859>   MOVEA.l -$24(A0),A0
0002C34A <AmiBlitz3.ab3@14860>   MOVE.l A0,destpointer
0002C34E <AmiBlitz3.ab3@14861>   MOVEM.l D2/A5,-(A7)
0002C354 <AmiBlitz3.ab3@14862>   MOVEA.l _mathffpbase,A6
0002C35A <AmiBlitz3.ab3@14863>   MOVEA.l ffplib,A1
0002C35E <AmiBlitz3.ab3@14864>   MOVE.w $A(A1),D0
0002C364 <AmiBlitz3.ab3@14865>   LEA _mathffpbase,A5
0002C366 <AmiBlitz3.ab3@14866>   SUBA.w D0,A5
0002C36C <AmiBlitz3.ab3@14867>   JSR Aclearcache                                          ;neg +
0002C372 <AmiBlitz3.ab3@14868>   CLR.l load_var_addr
0002C378 <AmiBlitz3.ab3@14869>   CLR.l imm_addr
0002C37E <AmiBlitz3.ab3@14870>   TST.w dontwrite
0002C382 <AmiBlitz3.ab3@14871>   BNE '1
0002C384 <AmiBlitz3.ab3@14872>   JSR (A0)                                                 ;calc constant inline expression
0002C388 <AmiBlitz3.ab3@14875>   MOVEM.l (A7)+,D2/A5
0002C38E <AmiBlitz3.ab3@14878>   MOVE.b d2,isconstantvalue
0002C394 <AmiBlitz3.ab3@14879>   MOVE.l d0,lastconstantvalue
0002C39A <AmiBlitz3.ab3@14880>   MOVE.w regnum,D1
0002C39C <AmiBlitz3.ab3@14881>   LSL.w #8,D1
0002C39E <AmiBlitz3.ab3@14882>   LSL.w #1,D1
0002C3A2 <AmiBlitz3.ab3@14883>   ORI.w #$203C,D1
0002C3A6 <AmiBlitz3.ab3@14884>   CMP.w #$3,D2
0002C3AA <AmiBlitz3.ab3@14885>    BCC.w JL_0_9BCE
0002C3AE <AmiBlitz3.ab3@14886>   ORI.w #$1000,D1
0002C3B2 <AmiBlitz3.ab3@14887>    BSR.w writeword
0002C3B4 <AmiBlitz3.ab3@14888>   MOVE.w D0,D1
0002C3B8 <AmiBlitz3.ab3@14889>    BSR.w writeword
0002C3BC <AmiBlitz3.ab3@14890> BRA.w JL_0_9BD8
0002C3C2 <AmiBlitz3.ab3@14894>   TST.b iee                                                ;fpu constant
0002C3C6 <AmiBlitz3.ab3@14895>   BEQ 'l10
0002C3CA <AmiBlitz3.ab3@14896>   CMP.b #5,d2
0002C3CE <AmiBlitz3.ab3@14897>   BNE 'l10
0002C3D0 <AmiBlitz3.ab3@14898>   MOVEQ #0,d1
0002C3D6 <AmiBlitz3.ab3@14899>   MOVE.w regnum,D1
0002C3D8 <AmiBlitz3.ab3@14900>   ASL.l #7,d1
0002C3DE <AmiBlitz3.ab3@14901>   OR.l #$f23c5400,d1
0002C3E2 <AmiBlitz3.ab3@14902>   BSR writelong
0002C3E4 <AmiBlitz3.ab3@14903>   SUBQ.l #8,a7
0002C3EA <AmiBlitz3.ab3@14904>   fmove.d fp0,0(a7)
0002C3EC <AmiBlitz3.ab3@14905>   MOVE.l (a7)+,d1
0002C3F0 <AmiBlitz3.ab3@14906>   BSR writelong
0002C3F2 <AmiBlitz3.ab3@14907>   MOVE.l (a7)+,d1
0002C3F6 <AmiBlitz3.ab3@14908>   BSR writelong
0002C3FA <AmiBlitz3.ab3@14909> BRA JL_0_9BD8
0002C3FE <AmiBlitz3.ab3@14912>   BSR.w writeword
0002C400 <AmiBlitz3.ab3@14913>   MOVE.l D0,D1
0002C404 <AmiBlitz3.ab3@14914>   BSR.w writelong
0002C408 <AmiBlitz3.ab3@14917>   MOVEA.l forthsp(PC),A0
0002C40C <AmiBlitz3.ab3@14918>   MOVEA.l -$20(A0),A3
0002C412 <AmiBlitz3.ab3@14919>   MOVEA.l hunkoffsetbase,A2
0002C418 <AmiBlitz3.ab3@14920>   MOVE.l A3,hunkoffsetbase
0002C41E <AmiBlitz3.ab3@14921>   MOVEA.l _execbase,A6
0002C420 <AmiBlitz3.ab3@14924>   CMPA.l A3,A2
0002C424 <AmiBlitz3.ab3@14925>   BEQ.w JL_0_9C0A
0002C42A <AmiBlitz3.ab3@14926>   SUBQ.l #1,hunkoffsetcounter
0002C42C <AmiBlitz3.ab3@14927>   MOVEA.l A2,A1
0002C42E <AmiBlitz3.ab3@14928>   MOVEA.l (A2),A2
0002C430 <AmiBlitz3.ab3@14929>   MOVEQ.l #$8,D0
0002C436 <AmiBlitz3.ab3@14930>   MOVE.l mempool2,a0
0002C43A <AmiBlitz3.ab3@14931>    JSR _FreePooled(A6)
0002C43E <AmiBlitz3.ab3@14932> BRA.w JL_0_9BF0
0002C442 <AmiBlitz3.ab3@14936>   MOVEA.l forthsp(PC),A0
0002C446 <AmiBlitz3.ab3@14939>   LEA -$12(A0),A0
0002C44C <AmiBlitz3.ab3@14940>   MOVE.l A0,forthsp
0002C450 <AmiBlitz3.ab3@14941>   MOVEM.l (A7)+,D1/A0
0002C454 <AmiBlitz3.ab3@14942>   BSR.w reget
0002C458 <AmiBlitz3.ab3@14943> BRA.w JL_0_9AFE
0002C45C <AmiBlitz3.ab3@14947>   BSR.w JL_0_A386
0002C45E <AmiBlitz3.ab3@14948>   TST.w d0
0002C462 <AmiBlitz3.ab3@14949>   BEQ JL_0_9C42
0002C466 <AmiBlitz3.ab3@14950>   CMP.b #",",d0
0002C46A <AmiBlitz3.ab3@14951>   BEQ JL_0_9C42
0002C46E <AmiBlitz3.ab3@14952>   CMP.b #"@",d0                                            ;expandline @@
0002C472 <AmiBlitz3.ab3@14953>   BEQ JL_0_9C42
0002C478 <AmiBlitz3.ab3@14954>   LEA operators,A0
0002C47A <AmiBlitz3.ab3@14957>    TST.w (A0)
0002C47E <AmiBlitz3.ab3@14958>    BEQ.w JL_0_9C42
0002C480 <AmiBlitz3.ab3@14959>   CMP.w (A0),D0
0002C484 <AmiBlitz3.ab3@14960>    BEQ.w JL_0_9C46a
0002C488 <AmiBlitz3.ab3@14961>   LEA $20(A0),A0
0002C48C <AmiBlitz3.ab3@14962> BRA.w JL_0_9C2E
0002C48E <AmiBlitz3.ab3@14966>   MOVEQ.l #$00,D1
0002C490 <AmiBlitz3.ab3@14967> RTS
0002C494 <AmiBlitz3.ab3@14971>   CMP.w #$3C,D0
0002C498 <AmiBlitz3.ab3@14972>    BNE.w JL_0_9C70
0002C49C <AmiBlitz3.ab3@14973>    BSR.w get1bytemain
0002C4A0 <AmiBlitz3.ab3@14974>   CMP.w #$3D,D0
0002C4A4 <AmiBlitz3.ab3@14975>    BNE.w JL_0_9C64
0002C4AA <AmiBlitz3.ab3@14976>   LEA ople,A0
0002C4AE <AmiBlitz3.ab3@14977> BRA.w JL_0_9CCA
0002C4B2 <AmiBlitz3.ab3@14981>   CMP.w #$3E,D0
0002C4B6 <AmiBlitz3.ab3@14982>    BNE.w JL_0_9C96
0002C4BA <AmiBlitz3.ab3@14983> BRA.w JL_0_9CC4
0002C4BE <AmiBlitz3.ab3@14987>   CMP.w #$3E,D0
0002C4C2 <AmiBlitz3.ab3@14988>    BNE.w JL_0_9C9E
0002C4C6 <AmiBlitz3.ab3@14989>    BSR.w get1bytemain
0002C4CA <AmiBlitz3.ab3@14990>   CMP.w #$3D,D0
0002C4CE <AmiBlitz3.ab3@14991>    BNE.w JL_0_9C8E
0002C4D4 <AmiBlitz3.ab3@14992>   LEA opge,A0
0002C4D8 <AmiBlitz3.ab3@14993> BRA.w JL_0_9CCA
0002C4DC <AmiBlitz3.ab3@14997>   CMP.w #$3C,D0
0002C4E0 <AmiBlitz3.ab3@14998>    BEQ.w JL_0_9CC4
0002C4EA <AmiBlitz3.ab3@15002>     MOVE.w oldqflag,instringon
0002C4F0 <AmiBlitz3.ab3@15003>     MOVEA.l lastsourcepos,A5
0002C4F4 <AmiBlitz3.ab3@15004> BRA.w JL_0_9CCA
0002C4F8 <AmiBlitz3.ab3@15008>   CMP.w #$3D,D0
0002C4FC <AmiBlitz3.ab3@15009>    BNE.w JL_0_9CCA
0002C500 <AmiBlitz3.ab3@15010>    BSR.w get1bytemain
0002C504 <AmiBlitz3.ab3@15011>   CMP.w #$3E,D0
0002C508 <AmiBlitz3.ab3@15012>    BNE.w JL_0_9CBC
0002C50E <AmiBlitz3.ab3@15013>   LEA opge,A0
0002C512 <AmiBlitz3.ab3@15014> BRA.w JL_0_9CCA
0002C516 <AmiBlitz3.ab3@15018>   CMP.w #$3C,D0
0002C51A <AmiBlitz3.ab3@15019>   BNE.w JL_0_9C96
0002C520 <AmiBlitz3.ab3@15022>   LEA opne,A0
0002C524 <AmiBlitz3.ab3@15025>   MOVE.w $1E(A0),D1
0002C526 <AmiBlitz3.ab3@15026> RTS
0002C528 <AmiBlitz3.ab3@15033>   MOVE.w d2,d1
0002C52A <AmiBlitz3.ab3@15034>   SUBQ.w #1,D1
0002C52E <AmiBlitz3.ab3@15035>    BMI.w illoperr
0002C530 <AmiBlitz3.ab3@15036>   LSL.w #2,D1
0002C534 <AmiBlitz3.ab3@15037>   MOVE.l $2(A0,D1.W),D1
0002C538 <AmiBlitz3.ab3@15038>    BEQ.w illoperr
0002C53A <AmiBlitz3.ab3@15039>   MOVEA.l D1,A0
0002C53C <AmiBlitz3.ab3@15042> JMP (A0)
0002C540 <AmiBlitz3.ab3@15058>   MOVEA.l precsp(PC),A1
0002C546 <AmiBlitz3.ab3@15059>   CMPA.l #precstackf,A1
0002C54A <AmiBlitz3.ab3@15060>    BCC.w pserr
0002C54C <AmiBlitz3.ab3@15061>   MOVE.w -(A1),D1
0002C54E <AmiBlitz3.ab3@15062>   MOVEA.l -(A1),A0
0002C554 <AmiBlitz3.ab3@15063>   MOVE.l A1,precsp
0002C556 <AmiBlitz3.ab3@15064> RTS
0002C55A <AmiBlitz3.ab3@15067> precsp:      Dc.l precstack
0002C656 <AmiBlitz3.ab3@15068> precstack:   Ds.l 63                                       ;ds 6*32 org source   ;Lotsa Room?
0002C6DA <AmiBlitz3.ab3@15069>              Ds.l 33
0002C6DC <AmiBlitz3.ab3@15075> mseq:  SEQ D0
0002C6DE <AmiBlitz3.ab3@15076> msne:    SNE D0
0002C6E0 <AmiBlitz3.ab3@15077> mslt:    SLT D0
0002C6E2 <AmiBlitz3.ab3@15078> msle:    SLE D0
0002C6E4 <AmiBlitz3.ab3@15079> msgt:    SGT D0
0002C6E6 <AmiBlitz3.ab3@15080> msge:    SGE D0
0002C6E8 <AmiBlitz3.ab3@15082> cmp0:    CMP.b D0,D0
0002C6EA <AmiBlitz3.ab3@15083> cmp1:    CMP.w D0,D0
0002C6EC <AmiBlitz3.ab3@15084> cmp2:    CMP.l D0,D0
0002C6F0 <AmiBlitz3.ab3@15088>   MOVE.w cmp0(PC),D1
0002C6F4 <AmiBlitz3.ab3@15089> BRA.w doeqcmp2                                            ;writecompare
0002C6F8 <AmiBlitz3.ab3@15093>   MOVE.w cmp0(PC),D1
0002C6FC <AmiBlitz3.ab3@15094> BRA.w donecmp2
0002C700 <AmiBlitz3.ab3@15098>   MOVE.w cmp0(PC),D1
0002C704 <AmiBlitz3.ab3@15099> BRA.w doltcmp2
0002C708 <AmiBlitz3.ab3@15103>   MOVE.w cmp0(PC),D1
0002C70C <AmiBlitz3.ab3@15104> BRA.w dolecmp2
0002C710 <AmiBlitz3.ab3@15108>   MOVE.w cmp0(PC),D1
0002C714 <AmiBlitz3.ab3@15109> BRA.w dogtcmp2
0002C718 <AmiBlitz3.ab3@15114>   MOVE.w cmp0(PC),D1
0002C71C <AmiBlitz3.ab3@15115> BRA.w dogecmp2
0002C720 <AmiBlitz3.ab3@15119>   MOVE.w cmp1(PC),D1
0002C724 <AmiBlitz3.ab3@15120> BRA.w doeqcmp2
0002C728 <AmiBlitz3.ab3@15124>   MOVE.w cmp1(PC),D1
0002C72C <AmiBlitz3.ab3@15125> BRA.w donecmp2
0002C730 <AmiBlitz3.ab3@15129>   MOVE.w cmp1(PC),D1
0002C734 <AmiBlitz3.ab3@15130> BRA.w doltcmp2
0002C738 <AmiBlitz3.ab3@15134>   MOVE.w cmp1(PC),D1
0002C73C <AmiBlitz3.ab3@15135> BRA.w dolecmp2
0002C740 <AmiBlitz3.ab3@15139>   MOVE.w cmp1(PC),D1
0002C744 <AmiBlitz3.ab3@15140> BRA.w dogtcmp2
0002C748 <AmiBlitz3.ab3@15145>   MOVE.w cmp1(PC),D1
0002C74C <AmiBlitz3.ab3@15146> BRA.w dogecmp2
0002C750 <AmiBlitz3.ab3@15150>   MOVE.w cmp2(PC),D1                                   ;writecomparelong
0002C754 <AmiBlitz3.ab3@15151> BRA doeqcmp2
0002C758 <AmiBlitz3.ab3@15154>   MOVE.w cmp2(PC),D1
0002C75C <AmiBlitz3.ab3@15155> BRA donecmp2
0002C760 <AmiBlitz3.ab3@15159>   MOVE.w cmp2(PC),D1
0002C764 <AmiBlitz3.ab3@15160> BRA.w doltcmp2
0002C768 <AmiBlitz3.ab3@15164>   MOVE.w cmp2(PC),D1
0002C76C <AmiBlitz3.ab3@15165> BRA.w dolecmp2
0002C770 <AmiBlitz3.ab3@15169>   MOVE.w cmp2(PC),D1
0002C774 <AmiBlitz3.ab3@15170> BRA.w dogtcmp2
0002C778 <AmiBlitz3.ab3@15174>   MOVE.w cmp2(PC),D1
0002C77C <AmiBlitz3.ab3@15175> BRA.w dogecmp2
0002C77E <AmiBlitz3.ab3@15178> cfregat:  Ds.w 1
0002C784 <AmiBlitz3.ab3@15182>   MOVE.w D1,libjsr+2
0002C788 <AmiBlitz3.ab3@15183>    BSR.w savereg
0002C78A <AmiBlitz3.ab3@15184>   MOVE.l D4,D1
0002C78E <AmiBlitz3.ab3@15185>    BSR.w pokemovem
0002C792 <AmiBlitz3.ab3@15186>   MOVE.w #$C900,D1
0002C796 <AmiBlitz3.ab3@15187>    BSR.w Atokejsr
0002C79A <AmiBlitz3.ab3@15188>    BSR.w JL_0_A352
0002C7A0 <AmiBlitz3.ab3@15189>   MOVE.l libjsr,D1
0002C7A4 <AmiBlitz3.ab3@15190>    BSR.w writelong
0002C7AE <AmiBlitz3.ab3@15191>   MOVE.w regnum,cfregat
0002C7B4 <AmiBlitz3.ab3@15192>   CLR.w regnum
0002C7B6 <AmiBlitz3.ab3@15193> RTS
0002C7C0 <AmiBlitz3.ab3@15197>   MOVE.w cfregat,regnum
0002C7C4 <AmiBlitz3.ab3@15198>    BSR.w JL_0_A36E
0002C7C6 <AmiBlitz3.ab3@15199>   MOVE.l D5,D1
0002C7CA <AmiBlitz3.ab3@15200> BRA.w pokemovem
0002C7CC <AmiBlitz3.ab3@15204>    MOVEQ.l #-$2A,D1
0002C7D2 <AmiBlitz3.ab3@15205>    TST.b fpu
0002C7D6 <AmiBlitz3.ab3@15206>    BEQ 'nofpu
0002C7D8 <AmiBlitz3.ab3@15207>    MOVEQ #0,d1
0002C7DE <AmiBlitz3.ab3@15208>    MOVE.w regnum,d1
0002C7E0 <AmiBlitz3.ab3@15209>    MOVE.l d1,d2
0002C7E2 <AmiBlitz3.ab3@15210>    ASL.l #7,d1
0002C7E4 <AmiBlitz3.ab3@15211>    ADDQ  #1,d2
0002C7E6 <AmiBlitz3.ab3@15212>    ASL.l #8,d2
0002C7E8 <AmiBlitz3.ab3@15213>    ASL.l #2,d2
0002C7EA <AmiBlitz3.ab3@15214>    OR.l d2,d1
0002C7F0 <AmiBlitz3.ab3@15215>    OR.l #$f2000038,d1
0002C7F6 <AmiBlitz3.ab3@15216>    JSR writelong
0002C7FA <AmiBlitz3.ab3@15217>    MOVE.w #$f240,d1
0002C800 <AmiBlitz3.ab3@15218>    OR.w regnum,d1
0002C804 <AmiBlitz3.ab3@15219>    BSR writeword
0002C806 <AmiBlitz3.ab3@15220>    MOVEQ.l #1,d2
0002C80A <AmiBlitz3.ab3@15221>    MOVE.w #1,d1                                            ;fpu comp fseq
0002C80E <AmiBlitz3.ab3@15222>    BSR writeword
0002C810 <AmiBlitz3.ab3@15223>  RTS
0002C814 <AmiBlitz3.ab3@15226>    BSR.w docflib
0002C818 <AmiBlitz3.ab3@15227>    BSR.w doeqcmp
0002C81C <AmiBlitz3.ab3@15228> BRA.w docflib2
0002C81E <AmiBlitz3.ab3@15232>   MOVEQ.l #-$2A,D1
0002C824 <AmiBlitz3.ab3@15233>   TST.b fpu
0002C828 <AmiBlitz3.ab3@15234>    BEQ 'nofpu
0002C82A <AmiBlitz3.ab3@15235>    MOVEQ #0,d1
0002C830 <AmiBlitz3.ab3@15236>    MOVE.w regnum,d1
0002C832 <AmiBlitz3.ab3@15237>    MOVE.l d1,d2
0002C834 <AmiBlitz3.ab3@15238>    ASL.l #7,d1
0002C836 <AmiBlitz3.ab3@15239>    ADDQ  #1,d2
0002C838 <AmiBlitz3.ab3@15240>    ASL.l #8,d2
0002C83A <AmiBlitz3.ab3@15241>    ASL.l #2,d2
0002C83C <AmiBlitz3.ab3@15242>    OR.l d2,d1
0002C842 <AmiBlitz3.ab3@15243>    OR.l #$f2000038,d1
0002C848 <AmiBlitz3.ab3@15244>    JSR writelong
0002C84C <AmiBlitz3.ab3@15245>    MOVE.w #$f240,d1
0002C852 <AmiBlitz3.ab3@15246>    OR.w regnum,d1
0002C856 <AmiBlitz3.ab3@15247>    BSR writeword
0002C85C <AmiBlitz3.ab3@15248>    MOVE.l #1,d2
0002C860 <AmiBlitz3.ab3@15249>    MOVE.w #$e,d1                                           ;fpu comp fsne
0002C864 <AmiBlitz3.ab3@15250>    BSR writeword
0002C866 <AmiBlitz3.ab3@15251>  RTS
0002C86A <AmiBlitz3.ab3@15254>    BSR.w docflib
0002C86E <AmiBlitz3.ab3@15255>    BSR.w donecmp
0002C872 <AmiBlitz3.ab3@15256> BRA.w docflib2
0002C874 <AmiBlitz3.ab3@15260>   MOVEQ.l #-$2A,D1
0002C87A <AmiBlitz3.ab3@15261>     TST.b fpu
0002C87E <AmiBlitz3.ab3@15262>    BEQ 'nofpu
0002C880 <AmiBlitz3.ab3@15263>    MOVEQ #0,d1
0002C886 <AmiBlitz3.ab3@15264>    MOVE.w regnum,d1
0002C888 <AmiBlitz3.ab3@15265>    MOVE.l d1,d2
0002C88A <AmiBlitz3.ab3@15266>    ASL.l #7,d1
0002C88C <AmiBlitz3.ab3@15267>    ADDQ  #1,d2
0002C88E <AmiBlitz3.ab3@15268>    ASL.l #8,d2
0002C890 <AmiBlitz3.ab3@15269>    ASL.l #2,d2
0002C892 <AmiBlitz3.ab3@15270>    OR.l d2,d1
0002C898 <AmiBlitz3.ab3@15271>    OR.l #$f2000038,d1
0002C89E <AmiBlitz3.ab3@15272>    JSR writelong
0002C8A2 <AmiBlitz3.ab3@15273>    MOVE.w #$f240,d1
0002C8A8 <AmiBlitz3.ab3@15274>    OR.w regnum,d1
0002C8AC <AmiBlitz3.ab3@15275>    BSR writeword
0002C8B2 <AmiBlitz3.ab3@15276>    MOVE.l #$1,d2
0002C8B6 <AmiBlitz3.ab3@15277>    MOVE.w #$14,d1                                          ;fpu comp fslt
0002C8BA <AmiBlitz3.ab3@15278>    BSR writeword
0002C8BC <AmiBlitz3.ab3@15279>  RTS
0002C8C0 <AmiBlitz3.ab3@15282>    BSR.w docflib
0002C8C4 <AmiBlitz3.ab3@15283>    BSR.w doltcmp
0002C8C8 <AmiBlitz3.ab3@15284> BRA.w docflib2
0002C8CA <AmiBlitz3.ab3@15288>   MOVEQ.l #-$2A,D1
0002C8D0 <AmiBlitz3.ab3@15289>   TST.b fpu
0002C8D4 <AmiBlitz3.ab3@15290>    BEQ 'nofpu
0002C8D6 <AmiBlitz3.ab3@15291>    MOVEQ #0,d1
0002C8DC <AmiBlitz3.ab3@15292>    MOVE.w regnum,d1
0002C8DE <AmiBlitz3.ab3@15293>    MOVE.l d1,d2
0002C8E0 <AmiBlitz3.ab3@15294>    ASL.l #7,d1
0002C8E2 <AmiBlitz3.ab3@15295>    ADDQ  #1,d2
0002C8E4 <AmiBlitz3.ab3@15296>    ASL.l #8,d2
0002C8E6 <AmiBlitz3.ab3@15297>    ASL.l #2,d2
0002C8E8 <AmiBlitz3.ab3@15298>    OR.l d2,d1
0002C8EE <AmiBlitz3.ab3@15299>    OR.l #$f2000038,d1
0002C8F4 <AmiBlitz3.ab3@15300>    JSR writelong
0002C8F8 <AmiBlitz3.ab3@15301>    MOVE.w #$f240,d1
0002C8FE <AmiBlitz3.ab3@15302>    OR.w regnum,d1
0002C902 <AmiBlitz3.ab3@15303>    BSR writeword
0002C908 <AmiBlitz3.ab3@15304>    MOVE.l #1,d2
0002C90C <AmiBlitz3.ab3@15305>    MOVE.w #$15,d1                                          ;fpu comp fsle
0002C910 <AmiBlitz3.ab3@15306>    BSR writeword
0002C912 <AmiBlitz3.ab3@15307>  RTS
0002C916 <AmiBlitz3.ab3@15310>    BSR.w docflib
0002C91A <AmiBlitz3.ab3@15311>    BSR.w dolecmp
0002C91E <AmiBlitz3.ab3@15312> BRA.w docflib2
0002C920 <AmiBlitz3.ab3@15316>   MOVEQ.l #-$2A,D1
0002C926 <AmiBlitz3.ab3@15317>    TST.b fpu
0002C92A <AmiBlitz3.ab3@15318>    BEQ 'nofpu
0002C92C <AmiBlitz3.ab3@15319>     MOVEQ #0,d1
0002C932 <AmiBlitz3.ab3@15320>    MOVE.w regnum,d1
0002C934 <AmiBlitz3.ab3@15321>    MOVE.l d1,d2
0002C936 <AmiBlitz3.ab3@15322>    ASL.l #7,d1
0002C938 <AmiBlitz3.ab3@15323>    ADDQ  #1,d2
0002C93A <AmiBlitz3.ab3@15324>    ASL.l #8,d2
0002C93C <AmiBlitz3.ab3@15325>    ASL.l #2,d2
0002C93E <AmiBlitz3.ab3@15326>    OR.l d2,d1
0002C944 <AmiBlitz3.ab3@15327>    OR.l #$f2000038,d1
0002C94A <AmiBlitz3.ab3@15328>    JSR writelong
0002C94E <AmiBlitz3.ab3@15329>    MOVE.w #$f240,d1
0002C954 <AmiBlitz3.ab3@15330>    OR.w regnum,d1
0002C958 <AmiBlitz3.ab3@15331>    BSR writeword
0002C95E <AmiBlitz3.ab3@15332>    MOVE.l #1,d2
0002C962 <AmiBlitz3.ab3@15333>    MOVE.w #$12,d1                                          ;fpu comp fsgt
0002C966 <AmiBlitz3.ab3@15334>    BSR writeword
0002C968 <AmiBlitz3.ab3@15335>  RTS
0002C96C <AmiBlitz3.ab3@15338>    BSR.w docflib
0002C970 <AmiBlitz3.ab3@15339>    BSR.w dogtcmp
0002C974 <AmiBlitz3.ab3@15340> BRA.w docflib2
0002C976 <AmiBlitz3.ab3@15344>   MOVEQ.l #-$2A,D1
0002C97C <AmiBlitz3.ab3@15345>  TST.b fpu
0002C980 <AmiBlitz3.ab3@15346>    BEQ 'nofpu
0002C982 <AmiBlitz3.ab3@15347>    MOVEQ #0,d1
0002C988 <AmiBlitz3.ab3@15348>    MOVE.w regnum,d1
0002C98A <AmiBlitz3.ab3@15349>    MOVE.l d1,d2
0002C98C <AmiBlitz3.ab3@15350>    ASL.l #7,d1
0002C98E <AmiBlitz3.ab3@15351>    ADDQ  #1,d2
0002C990 <AmiBlitz3.ab3@15352>    ASL.l #8,d2
0002C992 <AmiBlitz3.ab3@15353>    ASL.l #2,d2
0002C994 <AmiBlitz3.ab3@15354>    OR.l d2,d1
0002C99A <AmiBlitz3.ab3@15355>    OR.l #$f2000038,d1
0002C9A0 <AmiBlitz3.ab3@15356>    JSR writelong
0002C9A4 <AmiBlitz3.ab3@15357>    MOVE.w #$f240,d1
0002C9AA <AmiBlitz3.ab3@15358>    OR.w regnum,d1
0002C9AE <AmiBlitz3.ab3@15359>    BSR writeword
0002C9B4 <AmiBlitz3.ab3@15360>    MOVE.l #1,d2
0002C9B8 <AmiBlitz3.ab3@15361>    MOVE.w #$13,d1                                          ;fpu comp fsge
0002C9BC <AmiBlitz3.ab3@15362>    BSR writeword
0002C9BE <AmiBlitz3.ab3@15363>  RTS
0002C9C2 <AmiBlitz3.ab3@15366>    BSR.w docflib
0002C9C6 <AmiBlitz3.ab3@15367>    BSR.w dogecmp
0002C9CA <AmiBlitz3.ab3@15368> BRA.w docflib2
0002C9D0 <AmiBlitz3.ab3@15373>   MOVE.l #$CE00,D1
0002C9D6 <AmiBlitz3.ab3@15374>    MOVE.l d1,lastinstruction
0002C9DA <AmiBlitz3.ab3@15375>    BSR.w Atokejsr
0002C9DE <AmiBlitz3.ab3@15376> BRA.w doeqcmp
0002C9E4 <AmiBlitz3.ab3@15380>   MOVE.l #$CE00,D1
0002C9EA <AmiBlitz3.ab3@15381>    MOVE.l d1,lastinstruction
0002C9EE <AmiBlitz3.ab3@15382>    BSR.w Atokejsr
0002C9F2 <AmiBlitz3.ab3@15383> BRA.w donecmp
0002C9F8 <AmiBlitz3.ab3@15387>   MOVE.l #$CE00,D1
0002C9FE <AmiBlitz3.ab3@15388>    MOVE.l d1,lastinstruction
0002CA02 <AmiBlitz3.ab3@15389>    BSR.w Atokejsr
0002CA06 <AmiBlitz3.ab3@15390> BRA.w doltcmp
0002CA0C <AmiBlitz3.ab3@15394>   MOVE.l #$CE00,D1
0002CA12 <AmiBlitz3.ab3@15395>    MOVE.l d1,lastinstruction
0002CA16 <AmiBlitz3.ab3@15396>    BSR.w Atokejsr
0002CA1A <AmiBlitz3.ab3@15397> BRA.w dolecmp
0002CA20 <AmiBlitz3.ab3@15401>   MOVE.l #$CE00,D1
0002CA26 <AmiBlitz3.ab3@15402>    MOVE.l d1,lastinstruction
0002CA2A <AmiBlitz3.ab3@15403>    BSR.w Atokejsr
0002CA2E <AmiBlitz3.ab3@15404> BRA.w dogtcmp
0002CA34 <AmiBlitz3.ab3@15408>   MOVE.l #$CE00,D1
0002CA3A <AmiBlitz3.ab3@15409>    MOVE.l d1,lastinstruction
0002CA3E <AmiBlitz3.ab3@15410>    BSR.w Atokejsr
0002CA42 <AmiBlitz3.ab3@15411> BRA.w dogecmp
0002CA48 <AmiBlitz3.ab3@15416>   TST.b fast                                               ;compare
0002CA4C <AmiBlitz3.ab3@15417>   BEQ 'org
0002CA52 <AmiBlitz3.ab3@15421>   MOVE.l destpointer,a0
0002CA58 <AmiBlitz3.ab3@15422>   SUB.l imm_addr,a0
0002CA5E <AmiBlitz3.ab3@15423>   CMP.l #6,a0
0002CA62 <AmiBlitz3.ab3@15424>   BNE 'l11
0002CA68 <AmiBlitz3.ab3@15425>   MOVE.l imm_addr,a0
0002CA70 <AmiBlitz3.ab3@15426>   CMP.w #$223c,imm_addr
0002CA74 <AmiBlitz3.ab3@15427>   BNE 'org
0002CA7A <AmiBlitz3.ab3@15428>   ADD.w #$8e80,-6(a4)
0002CA80 <AmiBlitz3.ab3@15431>   CLR.l imm_addr
0002CA82 <AmiBlitz3.ab3@15432>  RTS
0002CA88 <AmiBlitz3.ab3@15435>   CMP.l #4,a0
0002CA8C <AmiBlitz3.ab3@15436>   BNE 'l10
0002CA90 <AmiBlitz3.ab3@15437>   CMP.b #2,d3
0002CA94 <AmiBlitz3.ab3@15438>   BNE 'l11b
0002CA9A <AmiBlitz3.ab3@15439>   ADD.w #$7e40,-4(a4)
0002CA9C <AmiBlitz3.ab3@15440>  RTS
0002CAA2 <AmiBlitz3.ab3@15443>   ADD.w #$7e00,-4(a4)
0002CAA4 <AmiBlitz3.ab3@15444>  RTS
0002CAAA <AmiBlitz3.ab3@15447>    MOVE.l destpointer,a0
0002CAB0 <AmiBlitz3.ab3@15448>    SUB.l load_var_addr,a0
0002CAB4 <AmiBlitz3.ab3@15449>    CMP.w #4,a0
0002CAB8 <AmiBlitz3.ab3@15450>    BNE 'org
0002CABC <AmiBlitz3.ab3@15451>    CMP.b #3,d3
0002CAC0 <AmiBlitz3.ab3@15452>    BCS 'lv1
0002CAC6 <AmiBlitz3.ab3@15453>    CLR.l load_var_addr
0002CACC <AmiBlitz3.ab3@15454>    ADD.w #$9080-$200,-4(a4)
0002CACE <AmiBlitz3.ab3@15455>  RTS
0002CAD2 <AmiBlitz3.ab3@15458>   CMP.b #2,d3
0002CAD6 <AmiBlitz3.ab3@15459>    BNE 'org
0002CADC <AmiBlitz3.ab3@15460>    CLR.l load_var_addr
0002CAE2 <AmiBlitz3.ab3@15461>    ADD.w #$8040-$200,-4(a4)
0002CAE4 <AmiBlitz3.ab3@15462>  RTS
0002CAEA <AmiBlitz3.ab3@15465>   MOVE.w regnum,D3
0002CAEC <AmiBlitz3.ab3@15466>   OR.w D3,D1
0002CAEE <AmiBlitz3.ab3@15467>   LSL.w #8,D3
0002CAF0 <AmiBlitz3.ab3@15468>   LSL.w #1,D3
0002CAF2 <AmiBlitz3.ab3@15469>   OR.w D3,D1
0002CAF4 <AmiBlitz3.ab3@15470>   ADDQ.w #1,D1
0002CAF8 <AmiBlitz3.ab3@15471> BRA.w writeword
0002CAFC <AmiBlitz3.ab3@15475>    BSR.w cmpit
0002CB00 <AmiBlitz3.ab3@15478>    MOVE.w mseq(PC),D1
0002CB04 <AmiBlitz3.ab3@15479> BRA.w cpoke
0002CB08 <AmiBlitz3.ab3@15483>   BSR.w cmpit
0002CB0C <AmiBlitz3.ab3@15486>   MOVE.w msne(PC),D1
0002CB10 <AmiBlitz3.ab3@15487> BRA.w cpoke
0002CB14 <AmiBlitz3.ab3@15491>   BSR.w cmpit
0002CB18 <AmiBlitz3.ab3@15494>    MOVE.w mslt(PC),D1
0002CB1C <AmiBlitz3.ab3@15495> BRA.w cpoke
0002CB20 <AmiBlitz3.ab3@15499>    BSR.w cmpit
0002CB24 <AmiBlitz3.ab3@15502>    MOVE.w msle(PC),D1
0002CB28 <AmiBlitz3.ab3@15503> BRA.w cpoke
0002CB2C <AmiBlitz3.ab3@15507>    BSR.w cmpit
0002CB30 <AmiBlitz3.ab3@15510>    MOVE.w msgt(PC),D1
0002CB34 <AmiBlitz3.ab3@15511> BRA.w cpoke
0002CB38 <AmiBlitz3.ab3@15515>   BSR.w cmpit
0002CB3C <AmiBlitz3.ab3@15518>    MOVE.w msge(PC),D1
0002CB42 <AmiBlitz3.ab3@15521>    OR.w regnum,D1
0002CB46 <AmiBlitz3.ab3@15522>    CMP.w #5,d2
0002CB4A <AmiBlitz3.ab3@15523>    BNE 'nod0
0002CB4E <AmiBlitz3.ab3@15524>    CMP.w #5,d3
0002CB52 <AmiBlitz3.ab3@15525>    BNE 'nod0
0002CB54 <AmiBlitz3.ab3@15526>    MOVE.l d1,-(a7)
0002CB5A <AmiBlitz3.ab3@15527>    MOVE.l #$44004a00,d1                                    ;68k neg.b:tst.b
0002CB5E <AmiBlitz3.ab3@15528>    BSR writelong
0002CB60 <AmiBlitz3.ab3@15529>    MOVE.l (a7)+,d1
0002CB64 <AmiBlitz3.ab3@15532>    BSR.w writeword                                         ;writeseq
0002CB66 <AmiBlitz3.ab3@15533>    MOVEQ.l #1,d2
0002CB6C <AmiBlitz3.ab3@15534>    MOVE.l lasttoken,d1
0002CB72 <AmiBlitz3.ab3@15535>     TST.b fast
0002CB76 <AmiBlitz3.ab3@15536>     BEQ.s 'l11
0002CB7C <AmiBlitz3.ab3@15537>    CMP.l #$800b,d1
0002CB80 <AmiBlitz3.ab3@15538>    BEQ 'l10
0002CB84 <AmiBlitz3.ab3@15541>   MOVE.w #$4880,D1                                         ;ext.w D regat
0002CB8A <AmiBlitz3.ab3@15542>   OR.w regnum,D1
0002CB8E <AmiBlitz3.ab3@15543>    BSR.w writeword                                         ;writeext.w
0002CB90 <AmiBlitz3.ab3@15544>   MOVEQ.l #$02,D2                                          ;type now WORD!
0002CB92 <AmiBlitz3.ab3@15547> RTS
0002CB96 <AmiBlitz3.ab3@15552>   MOVE.w #$D040,D1
0002CB98 <AmiBlitz3.ab3@15553>   MOVEQ.l #$02,D2                                          ;writeaddword   ;now a word
0002CB9C <AmiBlitz3.ab3@15554> BRA.w doplus2
0002CBA0 <AmiBlitz3.ab3@15558>   MOVE.w #$D040,D1
0002CBA2 <AmiBlitz3.ab3@15559>   MOVEQ.l #$03,D2                                          ;now a long
0002CBA6 <AmiBlitz3.ab3@15560>    BSR.w doplus2
0002CBAA <AmiBlitz3.ab3@15561> BRA.w convert_word_to_long
0002CBAE <AmiBlitz3.ab3@15565>   MOVE.w #$D080,D1                                         ;writeaddlong
0002CBB0 <AmiBlitz3.ab3@15568>   MOVE.w d1,a1
0002CBB6 <AmiBlitz3.ab3@15569>   TST.b fast
0002CBBA <AmiBlitz3.ab3@15570>   BEQ 'l10
0002CBBC <AmiBlitz3.ab3@15574>   ASR.w #8,d1
0002CBC0 <AmiBlitz3.ab3@15575>   CMP.b #$90,d1
0002CBC4 <AmiBlitz3.ab3@15576>   BEQ 'sub1
0002CBC8 <AmiBlitz3.ab3@15577>   CMP.b #$d0,d1
0002CBCC <AmiBlitz3.ab3@15578>   BNE 'l10
0002CBD0 <AmiBlitz3.ab3@15579>   CMP.b #3,d3
0002CBD4 <AmiBlitz3.ab3@15580>   BCS 'lq10
0002CBDA <AmiBlitz3.ab3@15581>   TST.b quickadd
0002CBE0 <AmiBlitz3.ab3@15585>    MOVE.l destpointer,a0
0002CBE6 <AmiBlitz3.ab3@15586>    CLR.b quickadd
0002CBEC <AmiBlitz3.ab3@15587>    CLR.l load_var_addr
0002CBF2 <AmiBlitz3.ab3@15588>    SUB.l imm_addr,a0
0002CBF6 <AmiBlitz3.ab3@15589>    CMP.w #6,a0
0002CBFA <AmiBlitz3.ab3@15590>    BEQ 'li10
0002CBFE <AmiBlitz3.ab3@15591>    CMP.w #4,a0
0002CC02 <AmiBlitz3.ab3@15592>    BNE.s 'li1
0002CC08 <AmiBlitz3.ab3@15593>    CLR.l imm_addr
0002CC0E <AmiBlitz3.ab3@15594>    ADD.w #$a040-$200,-4(a4)
0002CC10 <AmiBlitz3.ab3@15595>  RTS
0002CC12 <AmiBlitz3.ab3@15598>    MOVE.l a4,a0
0002CC18 <AmiBlitz3.ab3@15599>    SUB.l load_var_addr,a0
0002CC1E <AmiBlitz3.ab3@15600>    CMP.l #$a,a0
0002CC22 <AmiBlitz3.ab3@15601>    BNE 'l10e
0002CC28 <AmiBlitz3.ab3@15602>    CLR.l load_var_addr
0002CC2C <AmiBlitz3.ab3@15603>    MOVE.w -$8(a4),d1
0002CC32 <AmiBlitz3.ab3@15604>    MOVE.l -$4(a4),-$8(a4)
0002CC36 <AmiBlitz3.ab3@15605>    MOVE.w d1,-$4(a4)
0002CC3C <AmiBlitz3.ab3@15606>    SUB.w #$1980,-$a(a4)
0002CC42 <AmiBlitz3.ab3@15607>    SUBQ.l #2,destpointer
0002CC44 <AmiBlitz3.ab3@15608>  RTS
0002CC4A <AmiBlitz3.ab3@15611>   CLR.b quickadd
0002CC4E <AmiBlitz3.ab3@15612>  BRA 'l10
0002CC54 <AmiBlitz3.ab3@15615>    CLR.l imm_addr
0002CC58 <AmiBlitz3.ab3@15616>    TST.l -4(a4)                                            ;skip If ADD.l #0,dx
0002CC5C <AmiBlitz3.ab3@15617>    BNE 'doit
0002CC62 <AmiBlitz3.ab3@15618>    SUBQ.l #6,destpointer
0002CC64 <AmiBlitz3.ab3@15619>  RTS
0002CC6A <AmiBlitz3.ab3@15622>    ADD.w #$b080-$200,-6(a4)
0002CC6C <AmiBlitz3.ab3@15623>  RTS
0002CC72 <AmiBlitz3.ab3@15626>    MOVE.l destpointer,a0
0002CC78 <AmiBlitz3.ab3@15627>    SUB.l load_var_addr,a0
0002CC7C <AmiBlitz3.ab3@15628>    CMP.w #4,a0
0002CC80 <AmiBlitz3.ab3@15629>    BNE 'l10
0002CC84 <AmiBlitz3.ab3@15630>    CMP.b #3,d3
0002CC88 <AmiBlitz3.ab3@15631>    BNE 'lv1
0002CC8E <AmiBlitz3.ab3@15632>    CLR.l load_var_addr
0002CC94 <AmiBlitz3.ab3@15633>    ADD.w #$b080-$200,-4(a4)
0002CC96 <AmiBlitz3.ab3@15634>  RTS
0002CC9A <AmiBlitz3.ab3@15637>   CMP.b #2,d3
0002CC9E <AmiBlitz3.ab3@15638>   BNE 'l10
0002CCA4 <AmiBlitz3.ab3@15639>   CLR.l load_var_addr
0002CCAA <AmiBlitz3.ab3@15640>   ADD.w #$a040-$200,-4(a4)
0002CCAC <AmiBlitz3.ab3@15641>  RTS
0002CCB2 <AmiBlitz3.ab3@15644>   MOVE.w regnum,D3
0002CCB4 <AmiBlitz3.ab3@15645>   MOVE.w a1,d1
0002CCB6 <AmiBlitz3.ab3@15646>   OR.w D3,D1
0002CCB8 <AmiBlitz3.ab3@15647>   ADDQ.w #1,D1
0002CCBA <AmiBlitz3.ab3@15648>   LSL.w #8,D3
0002CCBC <AmiBlitz3.ab3@15649>   LSL.w #1,D3
0002CCBE <AmiBlitz3.ab3@15650>   OR.w D3,D1
0002CCC2 <AmiBlitz3.ab3@15651>  BRA.w writeword
0002CCC6 <AmiBlitz3.ab3@15654>    CMP.b #3,d3
0002CCCA <AmiBlitz3.ab3@15655>    BCS 'sub1_lq10
0002CCD0 <AmiBlitz3.ab3@15656>    TST.b quickadd
0002CCD6 <AmiBlitz3.ab3@15660>    MOVE.l destpointer,a0
0002CCDC <AmiBlitz3.ab3@15661>    CLR.b quickadd
0002CCE2 <AmiBlitz3.ab3@15662>    CLR.l load_var_addr
0002CCE8 <AmiBlitz3.ab3@15663>    SUB.l imm_addr,a0
0002CCEC <AmiBlitz3.ab3@15664>    CMP.w #6,a0
0002CCF0 <AmiBlitz3.ab3@15665>    BEQ 'sub1_li10
0002CCF4 <AmiBlitz3.ab3@15666>    CMP.w #4,a0
0002CCF8 <AmiBlitz3.ab3@15667>    BNE.s 'sub1_li1
0002CCFE <AmiBlitz3.ab3@15668>    CLR.l imm_addr
0002CD04 <AmiBlitz3.ab3@15669>    ADD.w #$6040-$200,-4(a4)
0002CD06 <AmiBlitz3.ab3@15670>  RTS
0002CD08 <AmiBlitz3.ab3@15673>    MOVE.l a4,a0
0002CD0E <AmiBlitz3.ab3@15674>     SUB.l load_var_addr,a0
0002CD14 <AmiBlitz3.ab3@15675>     CMP.l #$a,a0
0002CD18 <AmiBlitz3.ab3@15676>     BNE 'sub1_l10e
0002CD1E <AmiBlitz3.ab3@15677>    CLR.l load_var_addr
0002CD22 <AmiBlitz3.ab3@15678>    MOVE.w -$8(a4),d1
0002CD28 <AmiBlitz3.ab3@15679>    MOVE.l -$4(a4),-$8(a4)
0002CD2C <AmiBlitz3.ab3@15680>    MOVE.w d1,-$4(a4)
0002CD32 <AmiBlitz3.ab3@15681>    SUB.w #$1b80,-$a(a4)
0002CD38 <AmiBlitz3.ab3@15682>    SUBQ.l #2,destpointer
0002CD3A <AmiBlitz3.ab3@15683>  RTS
0002CD40 <AmiBlitz3.ab3@15686>   CLR.b quickadd
0002CD44 <AmiBlitz3.ab3@15687>  BRA 'sub1_l10
0002CD4A <AmiBlitz3.ab3@15690>    CLR.l imm_addr
0002CD50 <AmiBlitz3.ab3@15691>    ADD.w #$7080-$200,-6(a4)
0002CD52 <AmiBlitz3.ab3@15692>  RTS
0002CD58 <AmiBlitz3.ab3@15695>    MOVE.l destpointer,a0
0002CD5E <AmiBlitz3.ab3@15696>    SUB.l load_var_addr,a0
0002CD62 <AmiBlitz3.ab3@15697>    CMP.w #4,a0
0002CD66 <AmiBlitz3.ab3@15698>    BNE 'sub1_l10
0002CD6A <AmiBlitz3.ab3@15699>    CMP.b #3,d3
0002CD6E <AmiBlitz3.ab3@15700>    BNE 'sub1_lv1
0002CD74 <AmiBlitz3.ab3@15701>    CLR.l load_var_addr
0002CD7A <AmiBlitz3.ab3@15702>    ADD.w #$7080-$200,-4(a4)
0002CD7C <AmiBlitz3.ab3@15703>  RTS
0002CD80 <AmiBlitz3.ab3@15706>    CMP.b #2,d3
0002CD84 <AmiBlitz3.ab3@15707>    BNE 'sub1_l10
0002CD8A <AmiBlitz3.ab3@15708>    CLR.l load_var_addr
0002CD90 <AmiBlitz3.ab3@15709>    ADD.w #$6040-$200,-4(a4)
0002CD92 <AmiBlitz3.ab3@15710>  RTS
0002CD98 <AmiBlitz3.ab3@15713>   MOVE.w regnum,D3
0002CD9A <AmiBlitz3.ab3@15714>   MOVE.w a1,d1
0002CD9C <AmiBlitz3.ab3@15715>   OR.w D3,D1
0002CD9E <AmiBlitz3.ab3@15716>   ADDQ.w #1,D1
0002CDA0 <AmiBlitz3.ab3@15717>   LSL.w #8,D3
0002CDA2 <AmiBlitz3.ab3@15718>   LSL.w #1,D3
0002CDA4 <AmiBlitz3.ab3@15719>   OR.w D3,D1
0002CDA8 <AmiBlitz3.ab3@15720> BRA.w writeword
0002CDAA <AmiBlitz3.ab3@15724>   MOVEQ #0,d0
0002CDB0 <AmiBlitz3.ab3@15725>   MOVE.w regnum,d0
0002CDB2 <AmiBlitz3.ab3@15726>   ADDQ #1,d0
0002CDB4 <AmiBlitz3.ab3@15727>   ASL.w #8,d0
0002CDB6 <AmiBlitz3.ab3@15728>   ASL.w #2,d0
0002CDBC <AmiBlitz3.ab3@15729>   MOVE.l #$f2000022,d1                                     ;fpu add
0002CDBE <AmiBlitz3.ab3@15730>   OR.l d0,d1
0002CDC4 <AmiBlitz3.ab3@15731>   MOVE.w regnum,d0
0002CDC6 <AmiBlitz3.ab3@15732>   ASL.w #7,d0
0002CDC8 <AmiBlitz3.ab3@15733>   OR.l d0,d1
0002CDCC <AmiBlitz3.ab3@15734> BRA.w writelong
0002CDD2 <AmiBlitz3.ab3@15741>   TST.b iee
0002CDD6 <AmiBlitz3.ab3@15742>   BNE do_plus_float_fadd1
0002CDDA <AmiBlitz3.ab3@15743>   MOVE.w #$FFBE,D1                                         ;#-66,d1 org soruce ;floatadd
0002CDE0 <AmiBlitz3.ab3@15746>    MOVE.w D1,libjsr+2
0002CDE4 <AmiBlitz3.ab3@15747>    BSR.w savereg
0002CDE6 <AmiBlitz3.ab3@15748>   MOVE.l D4,D1
0002CDEA <AmiBlitz3.ab3@15749>    BSR.w pokemovem
0002CDEE <AmiBlitz3.ab3@15750>   MOVE.w #$C900,D1
0002CDF2 <AmiBlitz3.ab3@15751>    BSR.w Atokejsr
0002CDF6 <AmiBlitz3.ab3@15752>    BSR.w JL_0_A352
0002CDFC <AmiBlitz3.ab3@15753>   MOVE.l libjsr,D1
0002CE00 <AmiBlitz3.ab3@15754>    BSR.w writelong
0002CE04 <AmiBlitz3.ab3@15755>    BSR.w JL_0_A36E
0002CE06 <AmiBlitz3.ab3@15756>   MOVE.l D5,D1
0002CE0A <AmiBlitz3.ab3@15757> BRA.w pokemovem
0002CE10 <AmiBlitz3.ab3@15761>   MOVE.w regnum,D1
0002CE12 <AmiBlitz3.ab3@15762>   LSL.w #8,D1
0002CE14 <AmiBlitz3.ab3@15763>   LSL.w #1,D1
0002CE16 <AmiBlitz3.ab3@15764>   MOVE.w D1,-(A7)
0002CE1A <AmiBlitz3.ab3@15765>   CMP.w #3072,d1
0002CE1E <AmiBlitz3.ab3@15766>   BEQ 'l1
0002CE24 <AmiBlitz3.ab3@15767>   OR.w addcode,D1                                          ;move.l (a7)+,d0
0002CE28 <AmiBlitz3.ab3@15768> BRA 'l2
0002CE2C <AmiBlitz3.ab3@15771>    MOVE.w #$588f,d1                                        ;addq.l #4,a7
0002CE30 <AmiBlitz3.ab3@15774>    BSR.w writeword
0002CE32 <AmiBlitz3.ab3@15775>   MOVE.w (A7)+,D1
0002CE38 <AmiBlitz3.ab3@15776>   OR.w addcode+2,D1                                        ;native string add.l d0,(a7)
0002CE3C <AmiBlitz3.ab3@15777> BRA.w writeword
0002CE40 <AmiBlitz3.ab3@15783>   MOVE.w #$9040,D1
0002CE44 <AmiBlitz3.ab3@15784> BRA.w doplus2
0002CE48 <AmiBlitz3.ab3@15788>   MOVE.w #$9040,D1
0002CE4C <AmiBlitz3.ab3@15789> BRA.w doplus2
0002CE50 <AmiBlitz3.ab3@15793>   MOVE.w #$9080,D1
0002CE54 <AmiBlitz3.ab3@15794> BRA.w doplus2
0002CE5A <AmiBlitz3.ab3@15798>    TST.b iee
0002CE5E <AmiBlitz3.ab3@15799>     BNE 'fs1
0002CE62 <AmiBlitz3.ab3@15800>   MOVE.w #$FFB8,D1                                         ;floatsub
0002CE66 <AmiBlitz3.ab3@15801> BRA.w doflib
0002CE68 <AmiBlitz3.ab3@15804>   MOVEQ #0,d0
0002CE6E <AmiBlitz3.ab3@15805>   MOVE.w regnum,d0
0002CE70 <AmiBlitz3.ab3@15806>   ADDQ #1,d0
0002CE72 <AmiBlitz3.ab3@15807>   ASL.w #8,d0
0002CE74 <AmiBlitz3.ab3@15808>   ASL.w #2,d0
0002CE7A <AmiBlitz3.ab3@15809>   MOVE.l #$f2000028,d1
0002CE7C <AmiBlitz3.ab3@15810>   OR.l d0,d1
0002CE82 <AmiBlitz3.ab3@15811>   MOVE.w regnum,d0
0002CE84 <AmiBlitz3.ab3@15812>   ASL.w #7,d0
0002CE86 <AmiBlitz3.ab3@15813>   OR.l d0,d1
0002CE8A <AmiBlitz3.ab3@15814> BRA.w writelong
0002CE8E <AmiBlitz3.ab3@15820>   MOVE.w #$C1C0,D1
0002CE90 <AmiBlitz3.ab3@15821>   MOVEQ.l #$02,D2                                          ;now a word
0002CE94 <AmiBlitz3.ab3@15822> BRA.w doplus2
0002CE98 <AmiBlitz3.ab3@15826>   MOVE.w #$C1C0,D1
0002CE9A <AmiBlitz3.ab3@15827>   MOVEQ.l #$03,D2                                          ;now a long.
0002CE9E <AmiBlitz3.ab3@15828> BRA.w doplus2
0002CEA2 <AmiBlitz3.ab3@15832>   MOVE.w #$CA00,D1                                         ;quickmul
0002CEA6 <AmiBlitz3.ab3@15833> BRA.w domylib
0002CEAC <AmiBlitz3.ab3@15837>   TST.b fast
0002CEB0 <AmiBlitz3.ab3@15838>   BNE.s 'l10
0002CEB4 <AmiBlitz3.ab3@15839>   MOVE.w #$CA01,D1                                         ;writelongmul
0002CEB8 <AmiBlitz3.ab3@15840> BRA.w domylib
0002CEBE <AmiBlitz3.ab3@15849>    MOVE.l destpointer,a0
0002CEC4 <AmiBlitz3.ab3@15850>    SUB.l imm_addr,a0
0002CEC8 <AmiBlitz3.ab3@15851>    CMP.w #6,a0
0002CECC <AmiBlitz3.ab3@15852>    BNE 'li1
0002CECE <AmiBlitz3.ab3@15853>    MOVEQ.l #2,d1
0002CED0 <AmiBlitz3.ab3@15854>    MOVEQ #1,d3
0002CED4 <AmiBlitz3.ab3@15857>   CMP.l -4(a4),d1
0002CED8 <AmiBlitz3.ab3@15858>    BEQ 'oklsl
0002CEDA <AmiBlitz3.ab3@15859>     LSL.l #1,d1
0002CEE0 <AmiBlitz3.ab3@15860>     ADD.l #1,d3
0002CEE6 <AmiBlitz3.ab3@15861>     CMP.l #9,d3
0002CEEA <AmiBlitz3.ab3@15862>     BNE 'ag
0002CEEE <AmiBlitz3.ab3@15863>    MOVE.w -2(a4),d1
0002CEF2 <AmiBlitz3.ab3@15864>    BSR writeword
0002CEF8 <AmiBlitz3.ab3@15865>    MOVE.w -6(a4),-4(a4)
0002CF00 <AmiBlitz3.ab3@15866>    MOVE.l #$4c3c0800,-8(a4)
0002CF06 <AmiBlitz3.ab3@15867>    MOVE.w regnum,D3
0002CF0A <AmiBlitz3.ab3@15868>    MULS #$1000,D3
0002CF0E <AmiBlitz3.ab3@15869>    OR.w D3,-6(a4)
0002CF14 <AmiBlitz3.ab3@15870>    CLR.l load_var_addr
0002CF1A <AmiBlitz3.ab3@15871>    CLR.l imm_addr
0002CF1E <AmiBlitz3.ab3@15872> BRA 'li3
0002CF22 <AmiBlitz3.ab3@15875>    CMP.w #8,d3
0002CF26 <AmiBlitz3.ab3@15876>    BEQ 'ok
0002CF28 <AmiBlitz3.ab3@15877>    ASL.l #1,d3
0002CF2A <AmiBlitz3.ab3@15878>    ASL.l #8,d3
0002CF2E <AmiBlitz3.ab3@15879>    MOVE.w #$e188,d1
0002CF30 <AmiBlitz3.ab3@15880>    OR.w d3,d1
0002CF34 <AmiBlitz3.ab3@15881>    MOVE.w d1,-6(a4)
0002CF38 <AmiBlitz3.ab3@15882> BRA 'okls
0002CF3E <AmiBlitz3.ab3@15885>   MOVE.w #$e188,-6(a4)                                     ;lsl.l #,dx
0002CF44 <AmiBlitz3.ab3@15888>   MOVE.w regnum,d3
0002CF48 <AmiBlitz3.ab3@15889>    OR.b d3,-5(a4)
0002CF4E <AmiBlitz3.ab3@15890>    SUBQ.l #4,destpointer
0002CF54 <AmiBlitz3.ab3@15891>    CLR.l load_var_addr
0002CF5A <AmiBlitz3.ab3@15892>    CLR.l imm_addr
0002CF5E <AmiBlitz3.ab3@15893> BRA 'li3
0002CF64 <AmiBlitz3.ab3@15896>    MOVE.l destpointer,a0
0002CF6A <AmiBlitz3.ab3@15897>    SUB.l load_var_addr,a0
0002CF6E <AmiBlitz3.ab3@15898>    CMP.w #4,a0
0002CF72 <AmiBlitz3.ab3@15899>    BNE 'li2
0002CF76 <AmiBlitz3.ab3@15900>    MOVE.w -2(a4),d1
0002CF7A <AmiBlitz3.ab3@15901>    BSR writeword
0002CF80 <AmiBlitz3.ab3@15902>    MOVE.b #$4c,-6(a4)
0002CF86 <AmiBlitz3.ab3@15903>    MOVE.w #$0800,-4(a4)
0002CF8C <AmiBlitz3.ab3@15904>    MOVE.w regnum,D3
0002CF90 <AmiBlitz3.ab3@15905>    MULS #$1000,d3
0002CF94 <AmiBlitz3.ab3@15906>    OR.w D3,-4(a4)
0002CF98 <AmiBlitz3.ab3@15907> BRA 'li3
0002CF9E <AmiBlitz3.ab3@15910>    MOVE.l #$4c010800,d1
0002CFA4 <AmiBlitz3.ab3@15911>    MOVE.w regnum,D3
0002CFA6 <AmiBlitz3.ab3@15912>    EXT.l d3
0002CFAA <AmiBlitz3.ab3@15913>    MULS #$1000,d3
0002CFAC <AmiBlitz3.ab3@15914>    OR.w D3,d1
0002CFB0 <AmiBlitz3.ab3@15915>    MULS #$10,d3
0002CFB2 <AmiBlitz3.ab3@15916>    ADD.l d3,d1
0002CFB6 <AmiBlitz3.ab3@15917>    BSR writelong
0002CFB8 <AmiBlitz3.ab3@15922> RTS
0002CFBA <AmiBlitz3.ab3@15926>   MOVE.w D1,-(A7)
0002CFBE <AmiBlitz3.ab3@15927>    BSR.w savereg
0002CFC0 <AmiBlitz3.ab3@15928>   MOVE.l D4,D1
0002CFC4 <AmiBlitz3.ab3@15929>    BSR.w pokemovem
0002CFC8 <AmiBlitz3.ab3@15930>    BSR.w JL_0_A352
0002CFCA <AmiBlitz3.ab3@15931>   MOVEQ #0,d1
0002CFCC <AmiBlitz3.ab3@15932>   MOVE.w (A7)+,D1
0002CFD2 <AmiBlitz3.ab3@15933>   MOVE.l d1,lastinstruction
0002CFD6 <AmiBlitz3.ab3@15934>    BSR.w Atokejsr
0002CFDA <AmiBlitz3.ab3@15935>    BSR.w JL_0_A36E
0002CFDC <AmiBlitz3.ab3@15936>   MOVE.l D5,D1
0002CFE0 <AmiBlitz3.ab3@15937> BRA.w pokemovem
0002CFE6 <AmiBlitz3.ab3@15941>    TST.b iee
0002CFEA <AmiBlitz3.ab3@15942>     BNE fm1
0002CFEE <AmiBlitz3.ab3@15943>  MOVE.w #$FFB2,D1                                          ;floatmul
0002CFF2 <AmiBlitz3.ab3@15944> BRA.w doflib
0002CFF4 <AmiBlitz3.ab3@15947>   MOVEQ #0,d0
0002CFFA <AmiBlitz3.ab3@15948>  MOVE.w regnum,d0
0002CFFC <AmiBlitz3.ab3@15949>  ADDQ #1,d0
0002CFFE <AmiBlitz3.ab3@15950>  ASL.w #8,d0
0002D000 <AmiBlitz3.ab3@15951>  ASL.w #2,d0
0002D006 <AmiBlitz3.ab3@15952>  MOVE.l #$f2000023,d1
0002D008 <AmiBlitz3.ab3@15953>  OR.l d0,d1
0002D00E <AmiBlitz3.ab3@15954>  MOVE.w regnum,d0
0002D010 <AmiBlitz3.ab3@15955>  ASL.w #7,d0
0002D012 <AmiBlitz3.ab3@15956>  OR.l d0,d1
0002D016 <AmiBlitz3.ab3@15957> BRA.w writelong
0002D018 <AmiBlitz3.ab3@15961>   MOVE.w D2,-(A7)                                          ;dopow
0002D01A <AmiBlitz3.ab3@15962>   MOVE.w D2,D3
0002D01C <AmiBlitz3.ab3@15963>   MOVEQ.l #$05,D2
0002D020 <AmiBlitz3.ab3@15964>    BSR.w convtypef
0002D026 <AmiBlitz3.ab3@15965>   ADDQ.w #1,regnum
0002D028 <AmiBlitz3.ab3@15966>   MOVE.w (A7)+,D3
0002D02A <AmiBlitz3.ab3@15967>   MOVEQ.l #$05,D2
0002D02E <AmiBlitz3.ab3@15968>    BSR.w writeconvertcode
0002D034 <AmiBlitz3.ab3@15969>   SUBQ.w #1,regnum
0002D038 <AmiBlitz3.ab3@15970>    BSR.w nocando
0002D03E <AmiBlitz3.ab3@15971>    TST.b fpu
0002D042 <AmiBlitz3.ab3@15972>    BEQ 'old
0002D044 <AmiBlitz3.ab3@15973>    MOVEQ #0,d1
0002D04A <AmiBlitz3.ab3@15974>    MOVE.w regnum,d1
0002D04C <AmiBlitz3.ab3@15975>   MOVE.l d1,d0
0002D04E <AmiBlitz3.ab3@15976>   ASL.w #7,d1
0002D050 <AmiBlitz3.ab3@15977>   ASL.w #8,d0
0002D052 <AmiBlitz3.ab3@15978>   ASL.w #2,d0
0002D054 <AmiBlitz3.ab3@15979>   OR.w d0,d1
0002D056 <AmiBlitz3.ab3@15980>   MOVE.l d1,-(a7)
0002D05C <AmiBlitz3.ab3@15982>    OR.l #$f2000016,d1                                       ;flog2.x fp0      ;fpu ^ pow
0002D060 <AmiBlitz3.ab3@15983>    BSR writelong
0002D066 <AmiBlitz3.ab3@15984>    MOVE.w regnum,d0
0002D068 <AmiBlitz3.ab3@15985>  ADDQ #1,d0
0002D06A <AmiBlitz3.ab3@15986>  ASL.w #8,d0
0002D06C <AmiBlitz3.ab3@15987>  ASL.w #2,d0
0002D072 <AmiBlitz3.ab3@15988>  MOVE.l #$f2000023,d1
0002D074 <AmiBlitz3.ab3@15989>  OR.l d0,d1
0002D07A <AmiBlitz3.ab3@15990>  MOVE.w regnum,d0
0002D07C <AmiBlitz3.ab3@15991>  ASL.w #7,d0
0002D07E <AmiBlitz3.ab3@15992>  OR.l d0,d1
0002D084 <AmiBlitz3.ab3@15993>    OR.l #$f2000023,d1                                      ;fmulx.x fp1,fp0
0002D088 <AmiBlitz3.ab3@15994>    BSR writelong
0002D08A <AmiBlitz3.ab3@15995>    MOVE.l (a7)+,d1
0002D090 <AmiBlitz3.ab3@15997>    OR.l #$f2000011,d1                                      ;ftwotox.x fp0
0002D094 <AmiBlitz3.ab3@15998>    BSR writelong
0002D096 <AmiBlitz3.ab3@15999> RTS
0002D09A <AmiBlitz3.ab3@16002>   MOVE.w #$6001,D1
0002D09E <AmiBlitz3.ab3@16003> BRA.w domylib
0002D0A2 <AmiBlitz3.ab3@16009>   MOVEA.l forthsp(PC),A0
0002D0A6 <AmiBlitz3.ab3@16010>   MOVE.w #$FFFF,-(A0)                                      ;#-1,-(a0) org source
0002D0A8 <AmiBlitz3.ab3@16011> RTS
0002D0AC <AmiBlitz3.ab3@16017>   MOVE.w #$D400,D1
0002D0B0 <AmiBlitz3.ab3@16018> BRA.w domylib
0002D0B4 <AmiBlitz3.ab3@16022>   MOVE.w #$D401,D1
0002D0B8 <AmiBlitz3.ab3@16023> BRA.w domylib
0002D0BC <AmiBlitz3.ab3@16027>    BSR.w nocando                                           ;modlib uses an alibjsr here!
0002D0C0 <AmiBlitz3.ab3@16028>   MOVE.w #$D402,D1
0002D0C4 <AmiBlitz3.ab3@16029> BRA.w domylib
0002D0C8 <AmiBlitz3.ab3@16033>   MOVE.w #$D403,D1
0002D0CA <AmiBlitz3.ab3@16034>   MOVEQ.l #$02,D2                                          ;now a word.
0002D0CE <AmiBlitz3.ab3@16035> BRA.w domylib
0002D0D2 <AmiBlitz3.ab3@16039>    BSR.w nocando                                           ;modlib lib uses an alibjsr!  ;domod float
0002D0D8 <AmiBlitz3.ab3@16040>   TST.b fpu
0002D0DC <AmiBlitz3.ab3@16041>   BEQ 'old
0002D0DE <AmiBlitz3.ab3@16042>   MOVEQ #0,d1
0002D0E4 <AmiBlitz3.ab3@16043>   MOVE.w regnum,d1                                         ;fpu mod
0002D0E6 <AmiBlitz3.ab3@16044>   MOVE.l d1,d0
0002D0E8 <AmiBlitz3.ab3@16045>   ADDQ.l #1,d1
0002D0EA <AmiBlitz3.ab3@16046>   ASL.l #7,d0
0002D0EC <AmiBlitz3.ab3@16047>   ASL.l #8,d1
0002D0EE <AmiBlitz3.ab3@16048>   ASL.l #2,d1
0002D0F0 <AmiBlitz3.ab3@16049>   OR.l d0,d1
0002D0F2 <AmiBlitz3.ab3@16050>   MOVE.l d0,-(a7)
0002D0F8 <AmiBlitz3.ab3@16051>   OR.l #$f2000021,d1
0002D0FC <AmiBlitz3.ab3@16052>   BSR writelong
0002D0FE <AmiBlitz3.ab3@16053>   MOVE.l (a7)+,d0
0002D100 <AmiBlitz3.ab3@16054>  RTS
0002D104 <AmiBlitz3.ab3@16057>   MOVE.w #$D404,D1
0002D106 <AmiBlitz3.ab3@16058>   MOVEQ.l #$03,D2                                          ;now a long
0002D10A <AmiBlitz3.ab3@16059> BRA.w domylib
0002D10E <AmiBlitz3.ab3@16067>   MOVE.w #$48C0,D1
0002D114 <AmiBlitz3.ab3@16068>   OR.w regnum,D1
0002D118 <AmiBlitz3.ab3@16069>    BSR.w writeword
0002D11A <AmiBlitz3.ab3@16070>   ADDQ.w #1,D1
0002D11E <AmiBlitz3.ab3@16071>    BSR.w writeword
0002D122 <AmiBlitz3.ab3@16074>    MOVE.w #$48C0,D1
0002D128 <AmiBlitz3.ab3@16075>   OR.w regnum,D1
0002D12C <AmiBlitz3.ab3@16076>    BSR.w writeword
0002D130 <AmiBlitz3.ab3@16077>   MOVE.w #$81C0,D1
0002D134 <AmiBlitz3.ab3@16078> BRA.w doplus2
0002D13A <AmiBlitz3.ab3@16082>   TST.b fast
0002D13E <AmiBlitz3.ab3@16083>   BNE.s 'l10
0002D142 <AmiBlitz3.ab3@16084>   MOVE.w #$CB01,D1
0002D146 <AmiBlitz3.ab3@16085> BRA.w domylib
0002D14A <AmiBlitz3.ab3@16091>   BSR.w savereg
0002D14C <AmiBlitz3.ab3@16092>   MOVE.l D4,D1
0002D150 <AmiBlitz3.ab3@16093>    BSR.w pokemovem
0002D154 <AmiBlitz3.ab3@16094>    BSR.w JL_0_A352
0002D15A <AmiBlitz3.ab3@16108>    MOVE.l #$4c410800,d1
0002D15E <AmiBlitz3.ab3@16109>    BSR writelong
0002D162 <AmiBlitz3.ab3@16112>   MOVE.w #$4e71,d1
0002D166 <AmiBlitz3.ab3@16114>    BSR.w JL_0_A36E
0002D168 <AmiBlitz3.ab3@16115>   MOVE.l D5,D1
0002D16C <AmiBlitz3.ab3@16116> BRA.w pokemovem
0002D170 <AmiBlitz3.ab3@16119>     CMP.w #8,d3
0002D174 <AmiBlitz3.ab3@16120>     BEQ 'ok
0002D176 <AmiBlitz3.ab3@16121>     ASL.l #1,d3
0002D178 <AmiBlitz3.ab3@16122>     ASL.l #8,d3
0002D17C <AmiBlitz3.ab3@16123>     MOVE.w #$e080,d1
0002D17E <AmiBlitz3.ab3@16124>     OR.w d3,d1
0002D182 <AmiBlitz3.ab3@16125> BRA 'oklsr2
0002D186 <AmiBlitz3.ab3@16128>   MOVE.w #$e080,d1                                         ;lsr.l #,dx
0002D18C <AmiBlitz3.ab3@16131>      SUBQ.l #6,destpointer
0002D190 <AmiBlitz3.ab3@16132>      BSR writeword
0002D192 <AmiBlitz3.ab3@16133>      MOVE.l (a7)+,d3
0002D194 <AmiBlitz3.ab3@16134>      MOVEQ #0,d1
0002D19A <AmiBlitz3.ab3@16135>      CLR.l load_var_addr
0002D1A0 <AmiBlitz3.ab3@16136>      CLR.l imm_addr
0002D1A4 <AmiBlitz3.ab3@16137> BRA pokemovem
0002D1A8 <AmiBlitz3.ab3@16141>   MOVE.w #$CB00,D1                                         ;quickdiv
0002D1AC <AmiBlitz3.ab3@16142> BRA.w domylib
0002D1B2 <AmiBlitz3.ab3@16146>    TST.b iee
0002D1B6 <AmiBlitz3.ab3@16147>    BNE fdiv1
0002D1BA <AmiBlitz3.ab3@16148>    MOVE.w #$FFAC,D1                                        ;floatdiv
0002D1BE <AmiBlitz3.ab3@16149> BRA.w doflib
0002D1C0 <AmiBlitz3.ab3@16153>   MOVEQ #0,d0
0002D1C6 <AmiBlitz3.ab3@16154>   MOVE.w regnum,d0
0002D1C8 <AmiBlitz3.ab3@16155>   ADDQ #1,d0
0002D1CA <AmiBlitz3.ab3@16156>   ASL.w #8,d0
0002D1CC <AmiBlitz3.ab3@16157>   ASL.w #2,d0
0002D1D2 <AmiBlitz3.ab3@16158>   MOVE.l #$f2000020,d1                                     ;fpu div
0002D1D4 <AmiBlitz3.ab3@16159>   OR.l d0,d1
0002D1DA <AmiBlitz3.ab3@16160>   MOVE.w regnum,d0
0002D1DC <AmiBlitz3.ab3@16161>   ASL.w #7,d0
0002D1DE <AmiBlitz3.ab3@16162>   OR.l d0,d1
0002D1E2 <AmiBlitz3.ab3@16163> BRA.w writelong
0002D1E6 <AmiBlitz3.ab3@16167>   MOVE.w #$C000,D1
0002D1EA <AmiBlitz3.ab3@16168> BRA.w doplus2
0002D1EE <AmiBlitz3.ab3@16172>   MOVE.w #$C040,D1
0002D1F2 <AmiBlitz3.ab3@16173> BRA.w doplus2
0002D1F6 <AmiBlitz3.ab3@16177>   MOVE.w #$C080,D1
0002D1FA <AmiBlitz3.ab3@16178> BRA.w doplus2
0002D1FE <AmiBlitz3.ab3@16182>   MOVE.w #$8000,D1
0002D202 <AmiBlitz3.ab3@16183> BRA.w doplus2
0002D206 <AmiBlitz3.ab3@16187>   MOVE.w #$8040,D1
0002D20A <AmiBlitz3.ab3@16188> BRA.w doplus2
0002D20E <AmiBlitz3.ab3@16192>   MOVE.w #$8080,D1
0002D212 <AmiBlitz3.ab3@16193> BRA.w doplus2
0002D216 <AmiBlitz3.ab3@16197>   MOVE.w #$B100,D1
0002D21C <AmiBlitz3.ab3@16200>    MOVE.w regnum,D3
0002D21E <AmiBlitz3.ab3@16201>   OR.w D3,D1
0002D220 <AmiBlitz3.ab3@16202>   ADDQ.w #1,D3
0002D222 <AmiBlitz3.ab3@16203>   LSL.w #8,D3
0002D224 <AmiBlitz3.ab3@16204>   LSL.w #1,D3
0002D226 <AmiBlitz3.ab3@16205>   OR.w D3,D1
0002D22A <AmiBlitz3.ab3@16206> BRA.w writeword
0002D22E <AmiBlitz3.ab3@16210>   MOVE.w #$B140,D1
0002D232 <AmiBlitz3.ab3@16211> BRA.w doeor2
0002D236 <AmiBlitz3.ab3@16215>   MOVE.w #$B180,D1
0002D23A <AmiBlitz3.ab3@16216> BRA.w doeor2
0002D23E <AmiBlitz3.ab3@16220>   MOVE.w #$E1A8,D1
0002D242 <AmiBlitz3.ab3@16221> BRA.w shpoke
0002D246 <AmiBlitz3.ab3@16225>   MOVE.w #$E0A8,D1
0002D24A <AmiBlitz3.ab3@16226> BRA.w shpoke
0002D24E <AmiBlitz3.ab3@16230>   MOVE.w #$E0A0,D1
0002D252 <AmiBlitz3.ab3@16231> BRA.w shpoke
0002D254 <AmiBlitz3.ab3@16235>   MOVE.w D1,-(A7)
0002D25A <AmiBlitz3.ab3@16236>   ADDQ.w #1,regnum   ;make second a word!
0002D25C <AmiBlitz3.ab3@16237>   MOVE.w D2,-(A7)
0002D25E <AmiBlitz3.ab3@16238>   MOVE.w D2,D3
0002D260 <AmiBlitz3.ab3@16239>   MOVEQ.l #$02,D2
0002D264 <AmiBlitz3.ab3@16246>    BSR.w writeconvertcode
0002D266 <AmiBlitz3.ab3@16250>   MOVE.w (A7)+,D2     ;type
0002D26C <AmiBlitz3.ab3@16251>   SUBQ.w #1,regnum
0002D270 <AmiBlitz3.ab3@16252>   CMP.w #$4,D2        ;don't fuck with quix
0002D274 <AmiBlitz3.ab3@16253>    BEQ.w 'skip
0002D276 <AmiBlitz3.ab3@16254>   MOVE.w D2,D3
0002D278 <AmiBlitz3.ab3@16255>   MOVEQ.l #$03,D2
0002D27C <AmiBlitz3.ab3@16256>    BSR.w convtypef    ;make first (and current) a long
0002D27E <AmiBlitz3.ab3@16259>    MOVE.w (A7)+,D1
0002D284 <AmiBlitz3.ab3@16261>   MOVE.w regnum,D3
0002D286 <AmiBlitz3.ab3@16262>   OR.w D3,D1
0002D288 <AmiBlitz3.ab3@16263>   ADDQ.w #1,D3
0002D28A <AmiBlitz3.ab3@16264>   LSL.w #8,D3
0002D28C <AmiBlitz3.ab3@16265>   LSL.w #1,D3
0002D28E <AmiBlitz3.ab3@16266>   OR.w D3,D1
0002D292 <AmiBlitz3.ab3@16267> BRA.w writeword
0002D296 <AmiBlitz3.ab3@16271>   MOVE.w #$0100,D1
0002D29A <AmiBlitz3.ab3@16272>    BSR.w JL_0_A31C
0002D2A0 <AmiBlitz3.ab3@16273>   MOVE.w regnum,D1
0002D2A4 <AmiBlitz3.ab3@16274>   ORI.w #$56C0,D1
0002D2A8 <AmiBlitz3.ab3@16275>    BSR.w writeword
0002D2AE <AmiBlitz3.ab3@16276>   MOVE.w regnum,D1
0002D2B2 <AmiBlitz3.ab3@16277>   ORI.w #$4880,D1
0002D2B6 <AmiBlitz3.ab3@16278>    BSR.w writeword
0002D2B8 <AmiBlitz3.ab3@16279>   MOVEQ.l #$02,D2
0002D2BA <AmiBlitz3.ab3@16280> RTS
0002D2BE <AmiBlitz3.ab3@16284>   MOVE.w #$01C0,D1
0002D2C2 <AmiBlitz3.ab3@16287>    BSR.w JL_0_A31C
0002D2C4 <AmiBlitz3.ab3@16288>   MOVEQ.l #$03,D2
0002D2C6 <AmiBlitz3.ab3@16289> RTS
0002D2CA <AmiBlitz3.ab3@16293>   MOVE.w #$0180,D1
0002D2CE <AmiBlitz3.ab3@16294> BRA.w JL_0_A304
0002D2D2 <AmiBlitz3.ab3@16298>   MOVE.w #$0140,D1
0002D2D6 <AmiBlitz3.ab3@16299> BRA.w JL_0_A304
0002D2D8 <AmiBlitz3.ab3@16303>   MOVE.w D1,-(A7)
0002D2DA <AmiBlitz3.ab3@16304>   MOVE.w D2,-(A7)
0002D2DC <AmiBlitz3.ab3@16305>   MOVE.w D2,D3
0002D2DE <AmiBlitz3.ab3@16306>   MOVEQ.l #$03,D2
0002D2E2 <AmiBlitz3.ab3@16307>    BSR.w convtypef
0002D2E4 <AmiBlitz3.ab3@16308>   MOVE.w (A7)+,D3
0002D2E6 <AmiBlitz3.ab3@16309>   MOVEQ.l #$01,D2
0002D2EC <AmiBlitz3.ab3@16310>   ADDQ.w #1,regnum
0002D2F0 <AmiBlitz3.ab3@16311>    BSR.w writeconvertcode
0002D2F6 <AmiBlitz3.ab3@16312>   SUBQ.w #1,regnum
0002D2FC <AmiBlitz3.ab3@16313>   MOVE.w regnum,D1
0002D2FE <AmiBlitz3.ab3@16314>   MOVE.w D1,D2
0002D300 <AmiBlitz3.ab3@16315>   ADDQ.w #1,D2
0002D302 <AmiBlitz3.ab3@16316>   LSL.w #8,D2
0002D304 <AmiBlitz3.ab3@16317>   LSL.w #1,D2
0002D306 <AmiBlitz3.ab3@16318>   OR.w (A7)+,D1
0002D308 <AmiBlitz3.ab3@16319>   OR.w D2,D1
0002D30C <AmiBlitz3.ab3@16320> BRA.w writeword
0002D312 <AmiBlitz3.ab3@16324>   MOVE.w regnum,D1
0002D316 <AmiBlitz3.ab3@16325>    BEQ.w JL_0_A36C
0002D31A <AmiBlitz3.ab3@16326>   ORI.w #$2000,D1
0002D31E <AmiBlitz3.ab3@16327>    BSR.w writeword
0002D322 <AmiBlitz3.ab3@16328>   ADDI.w #$201,D1
0002D326 <AmiBlitz3.ab3@16329>    BSR.w writeword
0002D328 <AmiBlitz3.ab3@16332> RTS
0002D32E <AmiBlitz3.ab3@16336>   MOVE.w regnum,D1
0002D332 <AmiBlitz3.ab3@16337>    BEQ.w JL_0_A384
0002D334 <AmiBlitz3.ab3@16338>   LSL.w #8,D1
0002D336 <AmiBlitz3.ab3@16339>   LSL.w #1,D1
0002D33A <AmiBlitz3.ab3@16340>   ORI.w #$2000,D1
0002D33E <AmiBlitz3.ab3@16341>    BSR.w writeword
0002D340 <AmiBlitz3.ab3@16344> RTS
0002D346 <AmiBlitz3.ab3@16348>    CLR.b isconstantvalue
0002D34C <AmiBlitz3.ab3@16349>    CLR.l lastconstantvalue
0002D354 <AmiBlitz3.ab3@16350>    CMPI.w #$7,regnum
0002D358 <AmiBlitz3.ab3@16351>    BCS.w JL_0_A6B4
0002D35E <AmiBlitz3.ab3@16352>   MOVE.l #$f2277700,d1                                     ;fmove.d fp6,-(a7)
0002D362 <AmiBlitz3.ab3@16353>   BSR writelong
0002D366 <AmiBlitz3.ab3@16354>   MOVE.w #$2F06,D1                                         ;d6 to stack
0002D36A <AmiBlitz3.ab3@16356>   CMP.w #$3,D2
0002D36E <AmiBlitz3.ab3@16357>    BCS.w JL_0_A3A2
0002D372 <AmiBlitz3.ab3@16358>   MOVE.w #$2F06,D1
0002D376 <AmiBlitz3.ab3@16361>   BSR.w writeword
0002D378 <AmiBlitz3.ab3@16362>   MOVE.w D1,-(A7)
0002D37E <AmiBlitz3.ab3@16363>   SUBQ.w #1,regnum
0002D382 <AmiBlitz3.ab3@16364>    BSR.w JL_0_A6B4
0002D388 <AmiBlitz3.ab3@16365>   ADDQ.w #1,regnum
0002D38E <AmiBlitz3.ab3@16366>   MOVE.l #$f2001b80,d1
0002D392 <AmiBlitz3.ab3@16367>   BSR writelong
0002D396 <AmiBlitz3.ab3@16368>   MOVE.w #$3E06,D1
0002D39A <AmiBlitz3.ab3@16369>   CMP.w #$3,D2
0002D39E <AmiBlitz3.ab3@16370>    BCS.w JL_0_A3C8
0002D3A2 <AmiBlitz3.ab3@16371>   MOVE.w #$2E06,D1
0002D3A6 <AmiBlitz3.ab3@16374>   BSR.w writeword
0002D3A8 <AmiBlitz3.ab3@16375>   MOVE.w (A7)+,D1
0002D3AC <AmiBlitz3.ab3@16376>   ANDI.w #$F000,D1
0002D3B0 <AmiBlitz3.ab3@16377>   ORI.w #$C1F,D1
0002D3B6 <AmiBlitz3.ab3@16378>   JSR writeword
0002D3BC <AmiBlitz3.ab3@16379>   MOVE.l #$f21f5700,d1                                     ;fmove.d (a7)+,fp6
0002D3C0 <AmiBlitz3.ab3@16380> BRA writelong
0002D3C4 <AmiBlitz3.ab3@16384>   BSR.w JL_0_A6B4
0002D3C8 <AmiBlitz3.ab3@16385>   MOVE.w #$4440,D1
0002D3CC <AmiBlitz3.ab3@16386>   CMP.w #$3,D2
0002D3D0 <AmiBlitz3.ab3@16387>    BCS.w JL_0_A406
0002D3D4 <AmiBlitz3.ab3@16388>   MOVE.w #$4480,D1
0002D3D8 <AmiBlitz3.ab3@16389>   CMP.w #$5,D2
0002D3DC <AmiBlitz3.ab3@16390>    BCS.w JL_0_A406
0002D3E0 <AmiBlitz3.ab3@16391>   CMP.w #$6,D2
0002D3E4 <AmiBlitz3.ab3@16392>    BCC.w illoperr
0002D3E8 <AmiBlitz3.ab3@16393>   MOVE.w #$FFC4,D1
0002D3EC <AmiBlitz3.ab3@16394> BRA.w fdo2
0002D3F2 <AmiBlitz3.ab3@16397>   OR.w regnum,D1                                           ;negate
0002D3F8 <AmiBlitz3.ab3@16398>   CLR.l imm_addr
0002D3FC <AmiBlitz3.ab3@16399> BRA.w writeword
0002D400 <AmiBlitz3.ab3@16403>    BSR.w eval4
0002D404 <AmiBlitz3.ab3@16404>   CMP.w #")",D0
0002D408 <AmiBlitz3.ab3@16405>    BEQ.w JL_0_A424
0002D40C <AmiBlitz3.ab3@16406>   CMP.w #"}",D0
0002D410 <AmiBlitz3.ab3@16407>    BNE.w brackets_                                         ;syntax error brackets
0002D414 <AmiBlitz3.ab3@16410> BRA.w get1bytemain
0002D418 <AmiBlitz3.ab3@16414>    BSR.w eval4
0002D41C <AmiBlitz3.ab3@16415>   CMP.w #$5,D2
0002D420 <AmiBlitz3.ab3@16416>    BCC.w illoperr
0002D426 <AmiBlitz3.ab3@16417>   MOVE.w regnum,D1
0002D42A <AmiBlitz3.ab3@16418>   ORI.w #$4640,D1
0002D42E <AmiBlitz3.ab3@16419>   CMP.w #$3,D2
0002D432 <AmiBlitz3.ab3@16420>    BCS.w writeword
0002D436 <AmiBlitz3.ab3@16421>   EORI.w #$C0,D1
0002D43A <AmiBlitz3.ab3@16422> BRA.w writeword
0002D43C <AmiBlitz3.ab3@16426>   MOVEQ.l #$05,D2                                          ;fpu pi
0002D442 <AmiBlitz3.ab3@16427>    TST.b fpu
0002D446 <AmiBlitz3.ab3@16428>   BEQ 'old
0002D44C <AmiBlitz3.ab3@16429> JMP fpupi
0002D452 <AmiBlitz3.ab3@16432>   MOVE.w regnum,D1
0002D454 <AmiBlitz3.ab3@16433>   LSL.w #8,D1
0002D456 <AmiBlitz3.ab3@16434>   LSL.w #1,D1
0002D45A <AmiBlitz3.ab3@16435>   ORI.w #$203C,D1
0002D45E <AmiBlitz3.ab3@16436>    BSR.w writeword
0002D464 <AmiBlitz3.ab3@16437>   MOVE.l #$C90FDA42,D1
0002D468 <AmiBlitz3.ab3@16438>    BSR.w writelong
0002D46C <AmiBlitz3.ab3@16439> BRA.w get1bytemain
0002D568 <AmiBlitz3.ab3@16447> forthstack:  Ds.l 63                                       ;ds.b  18*32 org source
0002D664 <AmiBlitz3.ab3@16448>              Ds.l 63
0002D6AC <AmiBlitz3.ab3@16449>              Ds.l 18
0002D6B0 <AmiBlitz3.ab3@16450> forthsp:     Dc.l forthstack
0002D6DC <AmiBlitz3.ab3@16455>    !fget
0002D6E0 <AmiBlitz3.ab3@16456>    CMP.b #$7e,d0
0002D6E4 <AmiBlitz3.ab3@16457>    BNE 'noc
0002D6E6 <AmiBlitz3.ab3@16458>    SUBQ.l #1,a5
0002D6EA <AmiBlitz3.ab3@16459>    BSR get1bytemain
0002D6EE <AmiBlitz3.ab3@16462>    CMP.b #"#",d0
0002D6F2 <AmiBlitz3.ab3@16463>    BNE 'ld1
0002D6F6 <AmiBlitz3.ab3@16464>    CMP.b #$22,(a5)
0002D6FA <AmiBlitz3.ab3@16465>    BNE 'ld1
0002D700 <AmiBlitz3.ab3@16466>    JSR addimmi
0002D704 <AmiBlitz3.ab3@16469>    CMP.b #$22,d0
0002D708 <AmiBlitz3.ab3@16470>    BNE 'l11
0002D70E <AmiBlitz3.ab3@16480>    NOT.w instringon
0002D710 <AmiBlitz3.ab3@16483>    TST.b d0
0002D714 <AmiBlitz3.ab3@16484>    BPL 'l10
0002D716 <AmiBlitz3.ab3@16485>    LSL.w #8,d0
0002D718 <AmiBlitz3.ab3@16486>    MOVE.b (a5)+,d0                      ; get blitzlib instruction with returnvalue(called in functions/statement)
0002D71E <AmiBlitz3.ab3@16487>    MOVE.l d0,lasttoken
0002D724 <AmiBlitz3.ab3@16488>    MOVE.w d0,lastchar
0002D72A <AmiBlitz3.ab3@16489>    CLR.l rightsidetype                  ; blitzlibs do currently no type check
0002D730 <AmiBlitz3.ab3@16490>    CLR.w rightsideflagmask
0002D734 <AmiBlitz3.ab3@16492>   CMP.w #"(",D0
0002D738 <AmiBlitz3.ab3@16493>    BEQ.w checkcast2
0002D73C <AmiBlitz3.ab3@16494> nocast CMP.w #"{",D0
0002D740 <AmiBlitz3.ab3@16495>    BEQ.w JL_0_A410
0002D744 <AmiBlitz3.ab3@16496>   CMP.w #$2D,D0
0002D748 <AmiBlitz3.ab3@16497>    BEQ.w JL_0_A3DA
0002D74C <AmiBlitz3.ab3@16498>   CMP.w #-$7F77,D0
0002D750 <AmiBlitz3.ab3@16499>    BEQ.w JL_0_A428
0002D754 <AmiBlitz3.ab3@16500>   MOVEA.l forthsp(PC),A1
0002D75A <AmiBlitz3.ab3@16501>   CMPA.l #forthsp,A1
0002D75E <AmiBlitz3.ab3@16502>    BCC.w conmemerr
0002D764 <AmiBlitz3.ab3@16503>   MOVE.l destpointer,(A1)+
0002D76A <AmiBlitz3.ab3@16504>   MOVE.l hunkoffsetbase,(A1)+
0002D770 <AmiBlitz3.ab3@16505>   MOVE.l lasta6,(A1)+
0002D776 <AmiBlitz3.ab3@16506>   MOVE.w lasta6,(A1)+
0002D778 <AmiBlitz3.ab3@16507>   CLR.w (A1)+
0002D77A <AmiBlitz3.ab3@16508>   CLR.w (A1)+
0002D780 <AmiBlitz3.ab3@16509>   MOVE.l A1,forthsp
0002D792 <AmiBlitz3.ab3@16511>    !compare2
0002D796 <AmiBlitz3.ab3@16512>    BEQ.w fetchnum
0002D79A <AmiBlitz3.ab3@16513>   CMP.w #".",D0
0002D79E <AmiBlitz3.ab3@16514>    BEQ.w fetchfrac
0002D7A2 <AmiBlitz3.ab3@16515>   CMP.w #"#",D0
0002D7A6 <AmiBlitz3.ab3@16516>    BEQ.w get_constant
0002D7AA <AmiBlitz3.ab3@16517>   CMP.w #"$",D0
0002D7AE <AmiBlitz3.ab3@16518>    BEQ.w get_hexconstant
0002D7B2 <AmiBlitz3.ab3@16519>   CMP.w #"%",D0
0002D7B6 <AmiBlitz3.ab3@16520>    BEQ.w JL_0_A8C0
0002D7BA <AmiBlitz3.ab3@16521>   CMP.w #-$7FD1,D0
0002D7BE <AmiBlitz3.ab3@16522>    BEQ.w _SizeOf
0002D7C2 <AmiBlitz3.ab3@16523>   CMP.w #-$7F46,D0
0002D7C6 <AmiBlitz3.ab3@16524>    BEQ.w JL_0_A44E
0002D7CA <AmiBlitz3.ab3@16525>   CMP.w #-$7F3B,D0
0002D7CE <AmiBlitz3.ab3@16526>    BEQ.w JL_0_A83C
0002D7D2 <AmiBlitz3.ab3@16527>   CMP.w #-$7F3A,D0
0002D7D6 <AmiBlitz3.ab3@16528>    BEQ.w JL_0_A846
0002D7DC <AmiBlitz3.ab3@16529>   MOVE.w constmode,D1
0002D7E0 <AmiBlitz3.ab3@16530>    BEQ.w JL_0_A776
0002D802 <AmiBlitz3.ab3@16531>    !compare1                                               ;bsr.w tstalpha
0002D806 <AmiBlitz3.ab3@16532>    BEQ.w fetchasm
0002D80A <AmiBlitz3.ab3@16533>   CMP.w #$5F,D0
0002D80E <AmiBlitz3.ab3@16534>    BEQ.w fetchasm
0002D812 <AmiBlitz3.ab3@16535>   CMP.w #$22,D0
0002D816 <AmiBlitz3.ab3@16536>    BEQ.w fetchqasm
0002D81A <AmiBlitz3.ab3@16537> BRA.w syntaxerr
0002D820 <AmiBlitz3.ab3@16539> checkcast2 JMP checkcast
0002D826 <AmiBlitz3.ab3@16542>   MOVE.w cfetchmode,D1
0002D82A <AmiBlitz3.ab3@16543>   BEQ.w JL_0_A784
0002D82E <AmiBlitz3.ab3@16544> BRA.w badconerr
0002D834 <AmiBlitz3.ab3@16546> JUMP_syntaxerropt4 JMP syntaxerropt4
0002D836 <AmiBlitz3.ab3@16550>   NOT.w -(A1)
0002D858 <AmiBlitz3.ab3@16551>   !compare1                                                ;bsr.w tstalpha
0002D85C <AmiBlitz3.ab3@16552>    BEQ.w variable
0002D860 <AmiBlitz3.ab3@16553>   CMP.w #$2A,D0
0002D864 <AmiBlitz3.ab3@16554>    BEQ.w variable
0002D868 <AmiBlitz3.ab3@16555>   CMP.w #$5C,D0
0002D86C <AmiBlitz3.ab3@16556>    BEQ.w variable
0002D870 <AmiBlitz3.ab3@16557>   CMP.w #$22,D0
0002D874 <AmiBlitz3.ab3@16558>    BEQ.w litstring
0002D878 <AmiBlitz3.ab3@16559>   BTST #$F,D0
0002D87C <AmiBlitz3.ab3@16560>    BNE.w JL_0_AAF2
0002D880 <AmiBlitz3.ab3@16561>   CMP.w #"&",D0
0002D884 <AmiBlitz3.ab3@16562>    BEQ.w getvaraddr                                          ;jump to & address of var code
0002D888 <AmiBlitz3.ab3@16563>   CMP.w #"?",D0
0002D88C <AmiBlitz3.ab3@16564>    BEQ.w qmark
0002D890 <AmiBlitz3.ab3@16567>   CMP.b #"@",d0
0002D894 <AmiBlitz3.ab3@16568>    BNE syntaxerr
0002D89A <AmiBlitz3.ab3@16569>   TST.b newsyntax
0002D89E <AmiBlitz3.ab3@16570>    BEQ JUMP_syntaxerropt4
0002D8A4 <AmiBlitz3.ab3@16571>   MOVE.w regnum,D1
0002D8A6 <AmiBlitz3.ab3@16572>   LSL.w #8,D1
0002D8A8 <AmiBlitz3.ab3@16573>   LSL.w #1,D1
0002D8AC <AmiBlitz3.ab3@16574>   ORI.w #$203C,D1
0002D8B0 <AmiBlitz3.ab3@16575>   BSR.w writeword
0002D8B4 <AmiBlitz3.ab3@16576>   CMP.b #$22,(a5)
0002D8B8 <AmiBlitz3.ab3@16577>    BNE syntaxerr
0002D8BA <AmiBlitz3.ab3@16578>   ADDQ #1,a5
0002D8BC <AmiBlitz3.ab3@16579>   MOVEQ #0,d0
0002D8C0 <AmiBlitz3.ab3@16580>   CMP.b #1,d2
0002D8C4 <AmiBlitz3.ab3@16581>    BEQ 'l3b
0002D8C8 <AmiBlitz3.ab3@16582>   CMP.b #2,d2
0002D8CC <AmiBlitz3.ab3@16583>    BEQ 'l2b
0002D8D0 <AmiBlitz3.ab3@16584>   CMP.b #4,d2
0002D8D4 <AmiBlitz3.ab3@16585>    BEQ error_convert_types
0002D8D6 <AmiBlitz3.ab3@16586>   MOVE.b (a5)+,d0
0002D8DA <AmiBlitz3.ab3@16587>   BEQ syntaxerr
0002D8DE <AmiBlitz3.ab3@16588>   CMP.b #$22,d0
0002D8E2 <AmiBlitz3.ab3@16589>   BNE 'l1
0002D8E6 <AmiBlitz3.ab3@16590>     MOVE.b #0,d0
0002D8EA <AmiBlitz3.ab3@16591> BRA 'do
0002D8EC <AmiBlitz3.ab3@16594>   ASL.l #8,d0
0002D8EE <AmiBlitz3.ab3@16595>   MOVE.b (a5)+,d0
0002D8F2 <AmiBlitz3.ab3@16596>   BEQ syntaxerr
0002D8F6 <AmiBlitz3.ab3@16597>   CMP.b #$22,d0
0002D8FA <AmiBlitz3.ab3@16598>   BNE 'l2
0002D8FE <AmiBlitz3.ab3@16599>     MOVE.b #0,d0
0002D900 <AmiBlitz3.ab3@16600>     ASR.l #8,d0
0002D904 <AmiBlitz3.ab3@16601> BRA 'do
0002D906 <AmiBlitz3.ab3@16604>   ASL.l #8,d0
0002D908 <AmiBlitz3.ab3@16607>   MOVE.b (a5)+,d0
0002D90C <AmiBlitz3.ab3@16608>    BEQ syntaxerr
0002D910 <AmiBlitz3.ab3@16609>    CMP.b #$22,d0
0002D914 <AmiBlitz3.ab3@16610>    BNE 'l3
0002D918 <AmiBlitz3.ab3@16611>    MOVE.b #0,d0
0002D91A <AmiBlitz3.ab3@16612>    ASR.l #8,d0
0002D91E <AmiBlitz3.ab3@16613> BRA 'do
0002D920 <AmiBlitz3.ab3@16616>   ASL.l #8,d0
0002D922 <AmiBlitz3.ab3@16619>   MOVE.b (a5)+,d0
0002D926 <AmiBlitz3.ab3@16620>    BEQ syntaxerr
0002D92A <AmiBlitz3.ab3@16621>    CMP.b #$22,d0
0002D92E <AmiBlitz3.ab3@16622>    BNE 'l4
0002D932 <AmiBlitz3.ab3@16623>    MOVE.b #0,d0
0002D934 <AmiBlitz3.ab3@16624>    ASR.l #8,d0
0002D938 <AmiBlitz3.ab3@16625> BRA 'do
0002D93C <AmiBlitz3.ab3@16628>    CMP.b #$22,(a5)+
0002D940 <AmiBlitz3.ab3@16629>    BNE error4char
0002D942 <AmiBlitz3.ab3@16632>   MOVE.l d0,d1
0002D946 <AmiBlitz3.ab3@16633>     BSR writelong
0002D94A <AmiBlitz3.ab3@16634>     BSR get1bytemain
0002D94C <AmiBlitz3.ab3@16635> RTS
0002D950 <AmiBlitz3.ab3@16639>   BSR.w get1bytemain
0002D954 <AmiBlitz3.ab3@16640>   CMP.w #$2E,D0
0002D958 <AmiBlitz3.ab3@16641>    BEQ.b JL_0_A7F4
0002D962 <AmiBlitz3.ab3@16643>   MOVE.w oldqflag,instringon
0002D968 <AmiBlitz3.ab3@16644>   MOVEA.l lastsourcepos,A5
0002D96A <AmiBlitz3.ab3@16645>   MOVE.w D2,-(A7)
0002D96E <AmiBlitz3.ab3@16646>    BSR.w getparameter2
0002D972 <AmiBlitz3.ab3@16647>    BEQ.w syntaxerr
0002D978 <AmiBlitz3.ab3@16648>   LEA varbase,A2
0002D97C <AmiBlitz3.ab3@16649>    BSR.w findvariable
0002D980 <AmiBlitz3.ab3@16650>    BNE.w notypeerr
0002D984 <AmiBlitz3.ab3@16651>   MOVE.w $4(A2),D3
0002D986 <AmiBlitz3.ab3@16652>   EXT.l D3
0002D988 <AmiBlitz3.ab3@16653>   MOVE.w (A7)+,D2
0002D98C <AmiBlitz3.ab3@16654> BRA.w fetchnum2
0002D98E <AmiBlitz3.ab3@16658>   MOVE.w D2,-(A7)
0002D992 <AmiBlitz3.ab3@16659>    BSR.w getparameter2
0002D996 <AmiBlitz3.ab3@16660>    BEQ.w syntaxerr
0002D99C <AmiBlitz3.ab3@16661>   LEA newtypebase,A2
0002D9A0 <AmiBlitz3.ab3@16662>    BSR.w findtype
0002D9A4 <AmiBlitz3.ab3@16663>    BNE.w notypeerr
0002D9A6 <AmiBlitz3.ab3@16664>   MOVEQ.l #$00,D3
0002D9AA <AmiBlitz3.ab3@16665>   CMP.w #$5C,D0
0002D9AE <AmiBlitz3.ab3@16666>    BNE.w JL_0_A832
0002D9B2 <AmiBlitz3.ab3@16667>    BSR.w getparameter2
0002D9B6 <AmiBlitz3.ab3@16668>    BEQ.w syntaxerr
0002D9BA <AmiBlitz3.ab3@16669>   LEA $4(A2),A2
0002D9BE <AmiBlitz3.ab3@16670>    BSR.w findvariable2
0002D9C2 <AmiBlitz3.ab3@16671>    BNE.w noofferr
0002D9C6 <AmiBlitz3.ab3@16672>   MOVE.w $4(A2),D3
0002D9CA <AmiBlitz3.ab3@16673> BRA.w JL_0_A836
0002D9CE <AmiBlitz3.ab3@16677>   MOVE.w $8(A2),D3
0002D9D0 <AmiBlitz3.ab3@16680>   MOVE.w (A7)+,D2
0002D9D4 <AmiBlitz3.ab3@16681> BRA.w fetchnum2
0002D9D6 <AmiBlitz3.ab3@16685>   MOVEQ.l #-$01,D3
0002D9DA <AmiBlitz3.ab3@16686>    BSR.w get1bytemain
0002D9DE <AmiBlitz3.ab3@16687> BRA.w fetchnum2
0002D9E0 <AmiBlitz3.ab3@16691>   MOVEQ.l #$00,D3
0002D9E4 <AmiBlitz3.ab3@16692>    BSR.w get1bytemain
0002D9E8 <AmiBlitz3.ab3@16693> BRA.w fetchnum2
0002D9EC <AmiBlitz3.ab3@16697>   CMP.w #$30,D0
0002D9F0 <AmiBlitz3.ab3@16698>    BCS.w JL_0_A876
0002D9F4 <AmiBlitz3.ab3@16699>   CMP.w #$39,D0
0002D9F8 <AmiBlitz3.ab3@16700>    BLS.w JL_0_A874
0002D9FC <AmiBlitz3.ab3@16701>   ANDI.w #$FFDF,D0
0002DA00 <AmiBlitz3.ab3@16702>   CMP.w #$46,D0
0002DA04 <AmiBlitz3.ab3@16703>    BHI.w JL_0_A876
0002DA08 <AmiBlitz3.ab3@16704>   CMP.w #$41,D0
0002DA0C <AmiBlitz3.ab3@16705>    BCS.w JL_0_A876
0002DA0E <AmiBlitz3.ab3@16708>    CMP.w D0,D0
0002DA10 <AmiBlitz3.ab3@16711> RTS
0002DA14 <AmiBlitz3.ab3@16715>   CMP.w #$31,D0
0002DA18 <AmiBlitz3.ab3@16716>    BEQ.w JL_0_A884
0002DA1C <AmiBlitz3.ab3@16717>   CMP.w #$30,D0
0002DA1E <AmiBlitz3.ab3@16720> RTS
0002DA20 <AmiBlitz3.ab3@16724>    MOVEQ #0,d0
0002DA22 <AmiBlitz3.ab3@16725>    MOVE.b (a5)+,d0
0002DA24 <AmiBlitz3.ab3@16726>    MOVE.b (a5)+,d0
0002DA28 <AmiBlitz3.ab3@16727>    BSR ishex
0002DA2C <AmiBlitz3.ab3@16728>    BNE syntaxerr
0002DA30 <AmiBlitz3.ab3@16729>    SUBI.w #$30,D0
0002DA34 <AmiBlitz3.ab3@16730>    CMP.w #$9,D0
0002DA38 <AmiBlitz3.ab3@16731>    BLS.w 'l1
0002DA3A <AmiBlitz3.ab3@16732>    SUBQ.w #7,D0
0002DA3C <AmiBlitz3.ab3@16735>    MOVE.l d0,d1
0002DA3E <AmiBlitz3.ab3@16736>    MOVE.b (a5)+,d0
0002DA42 <AmiBlitz3.ab3@16737>      BSR ishex
0002DA46 <AmiBlitz3.ab3@16738>     BNE syntaxerr
0002DA48 <AmiBlitz3.ab3@16739>     LSL.l #4,d1
0002DA4C <AmiBlitz3.ab3@16740>     SUBI.w #$30,D0
0002DA50 <AmiBlitz3.ab3@16741>    CMP.w #$9,D0
0002DA54 <AmiBlitz3.ab3@16742>    BLS.w 'l2
0002DA56 <AmiBlitz3.ab3@16743>    SUBQ.w #7,D0
0002DA58 <AmiBlitz3.ab3@16746>   ADD.l d1,d0
0002DA5A <AmiBlitz3.ab3@16747> RTS
0002DA5E <AmiBlitz3.ab3@16751>    BSR.w get1bytemain
0002DA62 <AmiBlitz3.ab3@16752>    BSR.w ishex
0002DA66 <AmiBlitz3.ab3@16753>    BNE.w syntaxerr
0002DA68 <AmiBlitz3.ab3@16754>   MOVEQ.l #$00,D3
0002DA6C <AmiBlitz3.ab3@16755>   CMP.w #5,d2
0002DA70 <AmiBlitz3.ab3@16756>   BNE JL_0_A894
0002DA76 <AmiBlitz3.ab3@16757>   CMP.l #newtype_double,a2
0002DA7A <AmiBlitz3.ab3@16758>   BEQ 'doit
0002DA80 <AmiBlitz3.ab3@16759>   CMP.l #newtype_float,a2
0002DA84 <AmiBlitz3.ab3@16760>   BNE JL_0_A894
0002DA8C <AmiBlitz3.ab3@16763>    fmove.s #0,fp0
0002DA92 <AmiBlitz3.ab3@16765>   TST.b fpu
0002DA96 <AmiBlitz3.ab3@16766>   BEQ JL_0_A894
0002DA9C <AmiBlitz3.ab3@16767>   fmove.w #16,fp1
0002DAA0 <AmiBlitz3.ab3@16768>   fmul.x fp1,fp0
0002DAA4 <AmiBlitz3.ab3@16769>   SUBI.w #$30,D0
0002DAA8 <AmiBlitz3.ab3@16770>   CMP.w #$9,D0
0002DAAC <AmiBlitz3.ab3@16771>    BLS.w JL_0_A8AEa
0002DAAE <AmiBlitz3.ab3@16772>   SUBQ.w #7,D0
0002DAB2 <AmiBlitz3.ab3@16775>    fmove.w d0,fp1
0002DAB6 <AmiBlitz3.ab3@16776>    fadd.x fp1,fp0
0002DABA <AmiBlitz3.ab3@16777>    BSR.w get1bytemain
0002DABE <AmiBlitz3.ab3@16778>    BSR.w ishex
0002DAC2 <AmiBlitz3.ab3@16779>    BEQ.w JL_0_A894a
0002DAC6 <AmiBlitz3.ab3@16780> BRA.w nofpregload
0002DACC <AmiBlitz3.ab3@16784>   CMP.l #$10000000,D3
0002DAD0 <AmiBlitz3.ab3@16785>    BCC.w overerr
0002DAD2 <AmiBlitz3.ab3@16786>   LSL.l #4,D3
0002DAD6 <AmiBlitz3.ab3@16787>   SUBI.w #$30,D0
0002DADA <AmiBlitz3.ab3@16788>   CMP.w #$9,D0
0002DADE <AmiBlitz3.ab3@16789>    BLS.w JL_0_A8AE
0002DAE0 <AmiBlitz3.ab3@16790>   SUBQ.w #7,D0
0002DAE2 <AmiBlitz3.ab3@16793>   OR.w D0,D3
0002DAE6 <AmiBlitz3.ab3@16794>    BSR.w get1bytemain
0002DAEA <AmiBlitz3.ab3@16795>    BSR.w ishex
0002DAEE <AmiBlitz3.ab3@16796>    BEQ.w JL_0_A894
0002DAF2 <AmiBlitz3.ab3@16797> BRA.w fetchnum2
0002DAF6 <AmiBlitz3.ab3@16801>    BSR.w get1bytemain
0002DAFA <AmiBlitz3.ab3@16802>    BSR.w JL_0_A878
0002DAFE <AmiBlitz3.ab3@16803>    BNE.w syntaxerr
0002DB00 <AmiBlitz3.ab3@16804>    MOVEQ.l #$00,D3
0002DB02 <AmiBlitz3.ab3@16807>    LSL.l #1,D3
0002DB06 <AmiBlitz3.ab3@16808>    BCS.w overerr
0002DB0A <AmiBlitz3.ab3@16809>   SUBI.w #$30,D0
0002DB0C <AmiBlitz3.ab3@16810>   OR.w D0,D3
0002DB10 <AmiBlitz3.ab3@16811>    BSR.w get1bytemain
0002DB14 <AmiBlitz3.ab3@16812>    BSR.w JL_0_A878
0002DB18 <AmiBlitz3.ab3@16813>    BEQ.w JL_0_A8CE
0002DB1C <AmiBlitz3.ab3@16814> BRA.w fetchnum2
0002DB1E <AmiBlitz3.ab3@16818>    MOVE.w d2,-(A7)
0002DB26 <AmiBlitz3.ab3@16819>    MOVE.b #0,automode
0002DB2A <AmiBlitz3.ab3@16820>    CMP.b #"@",(a5)
0002DB2E <AmiBlitz3.ab3@16821>    BNE 'l1
0002DB30 <AmiBlitz3.ab3@16822>    ADDQ.l #1,a5
0002DB38 <AmiBlitz3.ab3@16823>    MOVE.b #1,automode
0002DB3C <AmiBlitz3.ab3@16824>    BSR getparameter2
0002DB40 <AmiBlitz3.ab3@16825>    BSR findlabel2
0002DB44 <AmiBlitz3.ab3@16826>    BNE 'addit
0002DB48 <AmiBlitz3.ab3@16827> BRA errormsg_autocount
0002DB4C <AmiBlitz3.ab3@16830>   BSR.w addlabelhash
0002DB54 <AmiBlitz3.ab3@16831>   MOVE.l #$1,$4(A2)
0002DB58 <AmiBlitz3.ab3@16832>   MOVEM.l a2/a5,-(a7)
0002DB5E <AmiBlitz3.ab3@16833>   MOVE.w lastchar,-(a7)
0002DB64 <AmiBlitz3.ab3@16834>   LEA autostorename,a5
0002DB68 <AmiBlitz3.ab3@16835>   BSR getparameter2
0002DB6C <AmiBlitz3.ab3@16836>   BSR findlabel2
0002DB70 <AmiBlitz3.ab3@16837>   BEQ 'found
0002DB74 <AmiBlitz3.ab3@16838>   BSR.w addlabelhash
0002DB7C <AmiBlitz3.ab3@16839>   MOVE.l #$1,$4(A2)
0002DB84 <AmiBlitz3.ab3@16840>   MOVE.l #0,8(a2)
0002DB86 <AmiBlitz3.ab3@16843>    MOVE.w (a7)+,d0
0002DB8C <AmiBlitz3.ab3@16844>    MOVE.w d0,lastchar
0002DB90 <AmiBlitz3.ab3@16845>   MOVE.l 8(a2),d3
0002DB98 <AmiBlitz3.ab3@16846>   ADD.l #1,8(a2)
0002DB9C <AmiBlitz3.ab3@16847>   MOVEM.l (a7)+,a2/a5
0002DBA0 <AmiBlitz3.ab3@16848>   MOVE.l d3,8(a2)
0002DBA4 <AmiBlitz3.ab3@16849>   MOVE.l $8(A2),D3
0002DBA8 <AmiBlitz3.ab3@16850> BRA.l 'l3
0002DBAC <AmiBlitz3.ab3@16853>   BSR.w getparameter2
0002DBB2 <AmiBlitz3.ab3@16854>     TST.b incnif
0002DBB6 <AmiBlitz3.ab3@16855>     BEQ 'lc1
0002DBBA <AmiBlitz3.ab3@16856>     BSR.w findlabel2
0002DBBE <AmiBlitz3.ab3@16857>     BNE 'l5
0002DBC0 <AmiBlitz3.ab3@16858>     MOVEQ #1,d3
0002DBC2 <AmiBlitz3.ab3@16859>     MOVE.w (A7)+,D2
0002DBC6 <AmiBlitz3.ab3@16860> BRA fetchnum2
0002DBC8 <AmiBlitz3.ab3@16863>   MOVEQ #0,d3
0002DBCA <AmiBlitz3.ab3@16864>     MOVE.w (A7)+,D2
0002DBCE <AmiBlitz3.ab3@16865> BRA fetchnum2
0002DBD2 <AmiBlitz3.ab3@16868>    BSR.w findlabel2
0002DBD6 <AmiBlitz3.ab3@16869>    BNE.w cnferr
0002DBDE <AmiBlitz3.ab3@16872>    CMPI.l #$1,$4(A2)
0002DBE2 <AmiBlitz3.ab3@16873>    BNE.w cnferr
0002DBE6 <AmiBlitz3.ab3@16875>    MOVE.l $8(A2),D3
0002DBE8 <AmiBlitz3.ab3@16876>    MOVE.w (A7)+,D2
0002DBEC <AmiBlitz3.ab3@16877> BRA.w fetchnum2
0002DBF2 <AmiBlitz3.ab3@16881>   CLR.w vartype
0002DBFA <AmiBlitz3.ab3@16882>   MOVE.b #3,peekaddrsize
0002DBFE <AmiBlitz3.ab3@16883>   BSR.w JL_0_A916
0002DC04 <AmiBlitz3.ab3@16884>   MOVE.l a2,rightsidetype
0002DC0E <AmiBlitz3.ab3@16885>   MOVE.w flagmask,rightsideflagmask
0002DC10 <AmiBlitz3.ab3@16886>   MOVEQ.l #$03,D2
0002DC12 <AmiBlitz3.ab3@16887> RTS
0002DC16 <AmiBlitz3.ab3@16891>    BSR.w get1bytemain
0002DC28 <AmiBlitz3.ab3@16892>    !compare2
0002DC2C <AmiBlitz3.ab3@16893>    BEQ andop2
0002DC30 <AmiBlitz3.ab3@16894>    BSR.w getparameter
0002DC34 <AmiBlitz3.ab3@16895>    BSR.w fetchvars
0002DC38 <AmiBlitz3.ab3@16896>    BSR.w calcvar
0002DC3C <AmiBlitz3.ab3@16897>   CMP.b #$7,D2
0002DC40 <AmiBlitz3.ab3@16898>    BNE.w JL_0_A960
0002DC44 <AmiBlitz3.ab3@16899>   BTST #$F,D2
0002DC48 <AmiBlitz3.ab3@16900>    BNE.w JL_0_A94A
0002DC4E <AmiBlitz3.ab3@16901>   MOVE.w D3,stamp2+2
0002DC54 <AmiBlitz3.ab3@16902>   MOVE.l stamp2,D1
0002DC58 <AmiBlitz3.ab3@16903>    BSR.w pokela5s
0002DC5C <AmiBlitz3.ab3@16904> BRA.w JL_0_A978
0002DC62 <AmiBlitz3.ab3@16908>   MOVE.w regnum,D1
0002DC64 <AmiBlitz3.ab3@16909>   LSL.w #8,D1
0002DC66 <AmiBlitz3.ab3@16910>   LSL.w #1,D1
0002DC6C <AmiBlitz3.ab3@16911>   OR.w stamp,D1
0002DC70 <AmiBlitz3.ab3@16912>    BSR.w writeword
0002DC72 <AmiBlitz3.ab3@16913> RTS
0002DC76 <AmiBlitz3.ab3@16917>   BTST #$F,D2
0002DC7A <AmiBlitz3.ab3@16918>    BNE.w JL_0_A978
0002DC80 <AmiBlitz3.ab3@16919>   MOVE.w D3,leaamp+2
0002DC86 <AmiBlitz3.ab3@16920>   MOVE.l leaamp,D1
0002DC8A <AmiBlitz3.ab3@16921>    BSR.w pokela5s
0002DC90 <AmiBlitz3.ab3@16924>   MOVE.w regnum,D1
0002DC92 <AmiBlitz3.ab3@16925>   LSL.w #8,D1
0002DC94 <AmiBlitz3.ab3@16926>   LSL.w #1,D1
0002DC9A <AmiBlitz3.ab3@16927>   OR.w leaamp2,D1
0002DC9E <AmiBlitz3.ab3@16928> BRA.w writeword
0002DCA2 <AmiBlitz3.ab3@16932>   MOVE.w #$D200,D1
0002DCA6 <AmiBlitz3.ab3@16933>    BSR.w Atokejsr
0002DCA8 <AmiBlitz3.ab3@16934>   MOVEQ.l #$03,D2
0002DCAA <AmiBlitz3.ab3@16935> RTS
0002DCAE <AmiBlitz3.ab3@16939> addrcode:  Dc.b $20,$6D,$00,$00                            ;MOVEA.L $0000(A5),A0
0002DCB0 <AmiBlitz3.ab3@16940>            Dc.b $D0,$C0                                    ;ADDA.W  D0,A0
0002DCB2 <AmiBlitz3.ab3@16941>            Dc.b $20,$08                                    ;MOVE.L  A0,D0
0002DCB6 <AmiBlitz3.ab3@16947>    BSR.w get1bytemain
0002DCB8 <AmiBlitz3.ab3@16948>   MOVE.w D0,D1
0002DCBC <AmiBlitz3.ab3@16949>    BPL.w syntaxerr
0002DCBE <AmiBlitz3.ab3@16950>   MOVE.w D2,-(A7)
0002DCC2 <AmiBlitz3.ab3@16951>   BCLR #$F,D1
0002DCC6 <AmiBlitz3.ab3@16952>    BSR.w searchinstr
0002DCCA <AmiBlitz3.ab3@16953>   MOVE.l $12(A2),D0
0002DCCE <AmiBlitz3.ab3@16954>   TST.w -$2(A2,D0.L)
0002DCD2 <AmiBlitz3.ab3@16955>    BEQ.w freeerr
0002DCD4 <AmiBlitz3.ab3@16956>   MOVE.w (A7)+,D2
0002DCD6 <AmiBlitz3.ab3@16957> RTS
0002DCDA <AmiBlitz3.ab3@16961>   MOVE.l $0(A5),D0
0002DCDE <AmiBlitz3.ab3@16962>    BNE.b ucodeskip
0002DCE0 <AmiBlitz3.ab3@16963>   MOVEQ.l #-$01,D0
0002DCE4 <AmiBlitz3.ab3@16964> BRA.b usedcodef
0002DCE8 <AmiBlitz3.ab3@16967>   SUB.l $0(A5),D0
0002DCEA <AmiBlitz3.ab3@16970>   LSR.w #8,D0
0002DCEE <AmiBlitz3.ab3@16975>    MOVE.l $0(A5),D0
0002DCF2 <AmiBlitz3.ab3@16976>    BNE.b ucodeskip2
0002DCF4 <AmiBlitz3.ab3@16977>   MOVEQ.l #-$01,D0
0002DCF8 <AmiBlitz3.ab3@16978> BRA.b usedcode2f
0002DCFC <AmiBlitz3.ab3@16981>   SUB.l $0(A5),D0                                          ;usedcode2
0002DCFE <AmiBlitz3.ab3@16982>   LSR.w #8,D0
0002DD00 <AmiBlitz3.ab3@16985>   LSR.w #8,D0
0002DD02 <AmiBlitz3.ab3@16990>   MOVE.l D0,-(A7)
0002DD04 <AmiBlitz3.ab3@16993>   MOVE.l (A7)+,D0
0002DD06 <AmiBlitz3.ab3@16996>   MOVE.l D0,D0
0002DD0A <AmiBlitz3.ab3@17002>   BSR.w JL_0_A9A0
0002DD0E <AmiBlitz3.ab3@17004>   MOVE.w -$2(A2,D0.L),D3
0002DD12 <AmiBlitz3.ab3@17005>   CMP.w #$9,D3
0002DD16 <AmiBlitz3.ab3@17006>    BCC.w 'skip
0002DD1A <AmiBlitz3.ab3@17010>   LEA usedcode(PC),A0
0002DD1E <AmiBlitz3.ab3@17011>   LEA usedcodef(PC),A1
0002DD24 <AmiBlitz3.ab3@17013>   ANDI.w #$F1FF,$E+4(A0)                                   ;and #$f1ff,ucodediv-usedcode(a0) org source
0002DD28 <AmiBlitz3.ab3@17014>   ANDI.w #$7,D3
0002DD2A <AmiBlitz3.ab3@17015>   LSL.w #8,D3
0002DD2C <AmiBlitz3.ab3@17016>   LSL.w #1,D3
0002DD30 <AmiBlitz3.ab3@17017>   OR.w D3,$E+4(A0)                                         ;or  d3,ucodediv-usedcode(a0) org source
0002DD34 <AmiBlitz3.ab3@17018>  BRA.w 'skip2
0002DD38 <AmiBlitz3.ab3@17023>   LEA usedcode2(PC),A0
0002DD3C <AmiBlitz3.ab3@17024>   LEA usedcode2f(PC),A1
0002DD42 <AmiBlitz3.ab3@17026>   ANDI.w #$F1FF,$10+4(A0)                                  ;and #$f1ff,ucodediv2-usedcode2(a0) org source
0002DD44 <AmiBlitz3.ab3@17027>   SUBQ.w #8,D3
0002DD46 <AmiBlitz3.ab3@17028>   LSL.w #8,D3
0002DD48 <AmiBlitz3.ab3@17029>   LSL.w #1,D3
0002DD4C <AmiBlitz3.ab3@17030>   OR.w D3,$10+4(A0)                                        ;or  d3,ucodediv2-usedcode2(a0) org source
0002DD50 <AmiBlitz3.ab3@17033>   MOVE.w -$6(A2,D0.L),D3
0002DD54 <AmiBlitz3.ab3@17034>   MOVE.w D3,$C+4(A0)                                       ;move d3,ucodeskip-usedcode+2(a0) org source
0002DD56 <AmiBlitz3.ab3@17035>   ADDQ.w #4,D3
0002DD5A <AmiBlitz3.ab3@17036>   MOVE.w D3,$2(A0)
0002DD60 <AmiBlitz3.ab3@17037>   MOVE.w regnum,D1
0002DD64 <AmiBlitz3.ab3@17038>    BEQ.w 'skip3
0002DD68 <AmiBlitz3.ab3@17039>   MOVE.w usedprep(PC),D1
0002DD6C <AmiBlitz3.ab3@17040>    BSR.w writeword
0002DD70 <AmiBlitz3.ab3@17043>   BSR.w pokecode
0002DD76 <AmiBlitz3.ab3@17044>   MOVE.w regnum,D1
0002DD7A <AmiBlitz3.ab3@17045>    BEQ.w 'skip4
0002DD7C <AmiBlitz3.ab3@17046>   LSL.w #8,D1
0002DD7E <AmiBlitz3.ab3@17047>   LSL.w #1,D1
0002DD82 <AmiBlitz3.ab3@17048>   OR.w usedfix(PC),D1
0002DD86 <AmiBlitz3.ab3@17049>    BSR.w writeword
0002DD8A <AmiBlitz3.ab3@17050>   MOVE.w useddone(PC),D1
0002DD8E <AmiBlitz3.ab3@17051>    BSR.w writeword
0002DD90 <AmiBlitz3.ab3@17054>    MOVEQ.l #$02,D2
0002DD94 <AmiBlitz3.ab3@17055> BRA.w get1bytemain
0002DD98 <AmiBlitz3.ab3@17063>    BSR.w JL_0_A9A0
0002DD9A <AmiBlitz3.ab3@17065>   MOVEQ.l #$00,D3
0002DD9E <AmiBlitz3.ab3@17066>   MOVE.w -$4(A2,D0.L),D3
0002DDA2 <AmiBlitz3.ab3@17067>    BSR.w get1bytemain
0002DDA6 <AmiBlitz3.ab3@17068> BRA.w fetchnum2
0002DDAA <AmiBlitz3.ab3@17075>    BSR.w get1bytemain
0002DDAC <AmiBlitz3.ab3@17076>   MOVE.w D0,-(A7)
0002DDB0 <AmiBlitz3.ab3@17077>    BSR.w get1bytemain
0002DDB4 <AmiBlitz3.ab3@17078>   CMP.w #$28,D0
0002DDB8 <AmiBlitz3.ab3@17079>    BNE.w syntaxerr
0002DDBA <AmiBlitz3.ab3@17080>   MOVE.w (A7)+,D0
0002DDBE <AmiBlitz3.ab3@17081>    BSR.w getmaxel
0002DDC2 <AmiBlitz3.ab3@17082>    BSR.w reget
0002DDC6 <AmiBlitz3.ab3@17083>   CMP.w #$29,D0
0002DDCA <AmiBlitz3.ab3@17084>    BNE.w syntaxerr
0002DDCE <AmiBlitz3.ab3@17088>   LEA addrcode(PC),A0
0002DDD2 <AmiBlitz3.ab3@17089>   LEA addrcodef(PC),A1
0002DDD8 <AmiBlitz3.ab3@17090>   MOVE.w -$6(A2),$2(A0)
0002DDDC <AmiBlitz3.ab3@17091>   MOVE.w $4(A0),D1
0002DDE0 <AmiBlitz3.ab3@17092>   ANDI.w #$FFF8,D1
0002DDE6 <AmiBlitz3.ab3@17093>   OR.w regnum,D1
0002DDEA <AmiBlitz3.ab3@17094>   MOVE.w D1,$4(A0)
0002DDEE <AmiBlitz3.ab3@17095>   MOVE.w $6(A0),D1
0002DDF2 <AmiBlitz3.ab3@17096>   ANDI.w #$F1FF,D1
0002DDF8 <AmiBlitz3.ab3@17097>   MOVE.w regnum,D0
0002DDFA <AmiBlitz3.ab3@17098>   LSL.w #8,D0
0002DDFC <AmiBlitz3.ab3@17099>   LSL.w #1,D0
0002DDFE <AmiBlitz3.ab3@17100>   OR.w D0,D1
0002DE02 <AmiBlitz3.ab3@17101>   MOVE.w D1,$6(A0)
0002DE06 <AmiBlitz3.ab3@17102>    BSR.w pokecode
0002DE08 <AmiBlitz3.ab3@17103>   MOVEQ.l #$03,D2
0002DE0C <AmiBlitz3.ab3@17104> BRA.w get1bytemain
0002DE10 <AmiBlitz3.ab3@17108>   CMP.w #-$7F4D,D0
0002DE14 <AmiBlitz3.ab3@17109>    BHI.w JL_0_AAFE
0002DE18 <AmiBlitz3.ab3@17110> BRA.w syntaxerr
0002DE1C <AmiBlitz3.ab3@17117> .do_null   CMP.w #NullTokenID,d0                                ;#$b581 check for lib 107 token 1 "NULL" form elomorsyslib
0002DE20 <AmiBlitz3.ab3@17118>    BNE 'nonull
0002DE26 <AmiBlitz3.ab3@17119>    MOVE.l d0,lastinstruction
0002DE2A <AmiBlitz3.ab3@17120>    MOVE.w #$7000,d1                                            ;asm instr moveq #0,dx
0002DE30 <AmiBlitz3.ab3@17121>    MOVE.w regnum,d0
0002DE32 <AmiBlitz3.ab3@17122>    ASL.l #7,d0
0002DE34 <AmiBlitz3.ab3@17123>    ASL.l #2,d0
0002DE36 <AmiBlitz3.ab3@17124>    OR.l d0,d1
0002DE3A <AmiBlitz3.ab3@17125>    BSR writeword
0002DE40 <AmiBlitz3.ab3@17126>    JSR get1bytemain
0002DE42 <AmiBlitz3.ab3@17127>    RTS
0002DE46 <AmiBlitz3.ab3@17129> 'nonull CMP.w #$c982,d0
0002DE4A <AmiBlitz3.ab3@17130>        BNE nonew_
0002DE4C <AmiBlitz3.ab3@17132>   MOVE.l a5,-(a7)
0002DE52 <AmiBlitz3.ab3@17133>   MOVE.w lastchar,-(a7)
0002DE58 <AmiBlitz3.ab3@17134>   JSR get1bytemain
0002DE5C <AmiBlitz3.ab3@17135>   CMP.w #"(",d0                                             ; use oldcode
0002DE60 <AmiBlitz3.ab3@17136>   BNE 'newcode
0002DE66 <AmiBlitz3.ab3@17137>   JSR get1bytemain
0002DE6A <AmiBlitz3.ab3@17138>   CMP.w #")",d0
0002DE6E <AmiBlitz3.ab3@17139>   BEQ 'newcode
0002DE74 <AmiBlitz3.ab3@17140>   MOVE.w (a7)+,lastchar
0002DE76 <AmiBlitz3.ab3@17141>   MOVE.l (a7)+,a5
0002DE7C <AmiBlitz3.ab3@17142>   MOVE.w lastchar,d0
0002DE80 <AmiBlitz3.ab3@17143>   BRA nonew_
0002DE82 <AmiBlitz3.ab3@17144> 'newcode  MOVE.l a0,-(a7)
0002DE88 <AmiBlitz3.ab3@17145>   TST.b blitzparloop
0002DE8C <AmiBlitz3.ab3@17146>   BNE 'err
0002DE92 <AmiBlitz3.ab3@17147>   TST.b funcparloop
0002DE96 <AmiBlitz3.ab3@17148>   BNE 'err
0002DE9A <AmiBlitz3.ab3@17149>   BRA 'ok
0002DEA0 <AmiBlitz3.ab3@17150> 'err JMP errornewnotincalls
0002DEA6 <AmiBlitz3.ab3@17151> 'ok  MOVE.l #$203c0000,d1
0002DEAA <AmiBlitz3.ab3@17152>   BSR writelong                                            ; 68k asm move.l #$xx,d0
0002DEAC <AmiBlitz3.ab3@17153>   MOVEQ #0,d1
0002DEB0 <AmiBlitz3.ab3@17154>   MOVE.w 8(a0),d1
0002DEB4 <AmiBlitz3.ab3@17155>   BSR writeword
0002DEB8 <AmiBlitz3.ab3@17156>   MOVE.w #$7200,d1                                         ; 68k asm "moveq #0,d1"
0002DEBC <AmiBlitz3.ab3@17157>   BSR writeword
0002DEC0 <AmiBlitz3.ab3@17158>   MOVE.w #$C002,D1                                         ;call function to alloc global mem
0002DEC4 <AmiBlitz3.ab3@17159>   BSR.w tokejsr2
0002DEC6 <AmiBlitz3.ab3@17160>   MOVE.l (a7)+,a0
0002DEC8 <AmiBlitz3.ab3@17161>   ADDQ.l #6,a7                      ; a5 need not restore
0002DECC <AmiBlitz3.ab3@17162>   CMP.w #")",d0
0002DED0 <AmiBlitz3.ab3@17163>   BNE 'nobracket
0002DED6 <AmiBlitz3.ab3@17164>   JSR get1bytemain
0002DED8 <AmiBlitz3.ab3@17165> 'nobracket  RTS
0002DEDC <AmiBlitz3.ab3@17167> nonew_  CMP.w #-$7F4A,D0
0002DEE0 <AmiBlitz3.ab3@17168>    BEQ.w JL_0_A98C
0002DEE4 <AmiBlitz3.ab3@17169>   CMP.w #-$7F48,D0
0002DEE8 <AmiBlitz3.ab3@17170>    BEQ.w doaddr
0002DEEC <AmiBlitz3.ab3@17171>   CMP.w #-$7F3C,D0
0002DEF0 <AmiBlitz3.ab3@17172>    BEQ.w domaximum
0002DEF4 <AmiBlitz3.ab3@17173>   CMP.w #-$7F2F,D0
0002DEF8 <AmiBlitz3.ab3@17174>    BEQ.w doused
0002DEFA <AmiBlitz3.ab3@17175>   MOVE.w D2,-(A7)
0002DEFC <AmiBlitz3.ab3@17176>   MOVE.w D0,D1
0002DF00 <AmiBlitz3.ab3@17177>   BCLR #$F,D1
0002DF04 <AmiBlitz3.ab3@17179>    BSR.w searchinstr
0002DF06 <AmiBlitz3.ab3@17180>   MOVE.w (A3),D1
0002DF0A <AmiBlitz3.ab3@17181>   BTST #$1,D1
0002DF0E <AmiBlitz3.ab3@17182>    BEQ.w noreturn_                                         ;syntax error noreturn
0002DF12 <AmiBlitz3.ab3@17183>   BTST #$2,D1
0002DF16 <AmiBlitz3.ab3@17184>    BNE.w amigalib
0002DF18 <AmiBlitz3.ab3@17185>   LSR.w #8,D1
0002DF1E <AmiBlitz3.ab3@17186>   BTST #$3,$1(A3)
0002DF22 <AmiBlitz3.ab3@17187>    BEQ.w JL_0_AB4C
0002DF28 <AmiBlitz3.ab3@17188>    JSR sizespec2
0002DF2E <AmiBlitz3.ab3@17191>    CLR.l rightsidetype
0002DF34 <AmiBlitz3.ab3@17192>    CLR.w rightsideflagmask
0002DF36 <AmiBlitz3.ab3@17193>    MOVE.w D1,-(A7)                                         ;is library instruction
0002DF3A <AmiBlitz3.ab3@17194>   CMP.w #$7,D1
0002DF3E <AmiBlitz3.ab3@17195>    BNE.w JL_0_AB5E
0002DF40 <AmiBlitz3.ab3@17196>   MOVE.l A2,-(A7)
0002DF44 <AmiBlitz3.ab3@17197>    BSR.w makesbase
0002DF46 <AmiBlitz3.ab3@17198>   MOVEA.l (A7)+,A2
0002DF4A <AmiBlitz3.ab3@17201>     BSR.w savem
0002DF4C <AmiBlitz3.ab3@17202>   MOVE.w D3,-(A7)
0002DF50 <AmiBlitz3.ab3@17203>    BSR.w get1bytemain
0002DF52 <AmiBlitz3.ab3@17204>   MOVEQ.l #$00,D1
0002DF56 <AmiBlitz3.ab3@17205>   CMP.w #$28,D0
0002DF5A <AmiBlitz3.ab3@17206>    BNE.w JL_0_AB80
0002DF60 <AmiBlitz3.ab3@17207>    JSR countpees
0002DF62 <AmiBlitz3.ab3@17208>   TST.w D1
0002DF66 <AmiBlitz3.ab3@17209>    BEQ.w syntaxerr
0002DF6A <AmiBlitz3.ab3@17210> BRA.w JL_0_AB84
0002DF74 <AmiBlitz3.ab3@17215>   MOVE.w oldqflag,instringon
0002DF7A <AmiBlitz3.ab3@17216>   MOVEA.l lastsourcepos,A5
0002DF80 <AmiBlitz3.ab3@17219>    MOVE.w regnum,-(A7)
0002DF8A <AmiBlitz3.ab3@17220>    MOVE.w regnum,regnumstore
0002DF90 <AmiBlitz3.ab3@17221>    TST.b fpu
0002DF94 <AmiBlitz3.ab3@17222>             BEQ 'nofloat
0002DF9A <AmiBlitz3.ab3@17223>             CMP.w #$ffff,28(a3)
0002DF9E <AmiBlitz3.ab3@17224>             BNE 'nofloat
0002DFA4 <AmiBlitz3.ab3@17225>             CMP.w #$3c01,34(a3)                            ;val do nofpu stuff
0002DFA8 <AmiBlitz3.ab3@17226>             BEQ 'nofloat
0002DFAE <AmiBlitz3.ab3@17227>             CMP.w #$3c02,34(a3)                            ;int skip
0002DFB2 <AmiBlitz3.ab3@17228>             BEQ 'quick
0002DFB6 <AmiBlitz3.ab3@17229>             CMP.b #5,(a3)
0002DFBA <AmiBlitz3.ab3@17230>             BNE 'nofloat
0002DFC0 <AmiBlitz3.ab3@17233>             CLR.l load_var_addr
0002DFC4 <AmiBlitz3.ab3@17234> BRA 'isfpu
0002DFCA <AmiBlitz3.ab3@17237>    CLR.w regnum
0002DFCC <AmiBlitz3.ab3@17240>    MOVE.w D1,-(A7)
0002DFD2 <AmiBlitz3.ab3@17241>   BTST #$3,$1(A3)
0002DFD6 <AmiBlitz3.ab3@17242>    BEQ.w JL_0_ABB0
0002DFDA <AmiBlitz3.ab3@17261>   MOVE.w $6(A7),D1
0002DFE0 <AmiBlitz3.ab3@17262>   MOVE.w d1,peeksize
0002DFE4 <AmiBlitz3.ab3@17272>   ORI.w #$7000,D1
0002DFE8 <AmiBlitz3.ab3@17273>   BSR.w writeword                                          ;write peekmode
0002DFEE <AmiBlitz3.ab3@17276>   ADDQ.w #1,regnum
0002DFF0 <AmiBlitz3.ab3@17277>   MOVE.w (A7),D1
0002DFF8 <AmiBlitz3.ab3@17280>   MOVE.w 2(a7),tempregnum
0002DFFE <AmiBlitz3.ab3@17281>   MOVE.w parnum,-(a7)                                       ;7.2014 parnum need store to allow functioncall in parameter >6
0002E004 <AmiBlitz3.ab3@17282>   CLR.w parnum                                              ;7.2014
0002E00A <AmiBlitz3.ab3@17283>   JSR dolibtoke                                             ;write code of blitzfunc
0002E010 <AmiBlitz3.ab3@17284>   MOVE.w (a7)+,parnum                                       ;7.2014 new restore parnum
0002E012 <AmiBlitz3.ab3@17285>   TST.w (A7)+
0002E016 <AmiBlitz3.ab3@17286>   BEQ.w JL_0_ABC6
0002E01A <AmiBlitz3.ab3@17287>   CMP.w #")",D0                                             ; check if ) here for correct end of blitzlib function call
0002E01E <AmiBlitz3.ab3@17288>   BNE.w errorbracketmiss                                    ; was syntax error
0002E024 <AmiBlitz3.ab3@17289>   CLR.l lasttoken
0002E028 <AmiBlitz3.ab3@17290>   BSR.w get1bytemain
0002E02A <AmiBlitz3.ab3@17293>    MOVE.w (A7)+,D1
0002E030 <AmiBlitz3.ab3@17294>    MOVE.w D1,regnum
0002E034 <AmiBlitz3.ab3@17295>    BEQ.w JL_0_ABDE
0002E03A <AmiBlitz3.ab3@17296>    CMP.w #$3c01,24(a2)                                     ;val skipped
0002E03E <AmiBlitz3.ab3@17297>    BNE 'noval
0002E044 <AmiBlitz3.ab3@17298>    TST.b fpu
0002E048 <AmiBlitz3.ab3@17299>    BEQ 'noval
0002E04E <AmiBlitz3.ab3@17300>    CLR.l load_var_addr
0002E050 <AmiBlitz3.ab3@17301>    MOVEQ #0,d1
0002E056 <AmiBlitz3.ab3@17302>    MOVE.w regnum,d1
0002E058 <AmiBlitz3.ab3@17303>    LSL.l #7,d1
0002E05E <AmiBlitz3.ab3@17304>    OR.l #$f2000000,d1
0002E062 <AmiBlitz3.ab3@17305>    BSR writelong
0002E066 <AmiBlitz3.ab3@17306> BRA JL_0_ABDE
0002E06C <AmiBlitz3.ab3@17310>    CMP.w #$3c02,24(a2)                                     ;int skipped
0002E070 <AmiBlitz3.ab3@17311>    BEQ 'quick
0002E074 <AmiBlitz3.ab3@17312>    CMP.b #5,d2
0002E078 <AmiBlitz3.ab3@17313>    BNE 'nofpu
0002E07E <AmiBlitz3.ab3@17314>    TST.b fpu
0002E082 <AmiBlitz3.ab3@17315>    BEQ 'nofpu
0002E088 <AmiBlitz3.ab3@17320>    CLR.l load_var_addr
0002E08C <AmiBlitz3.ab3@17321> BRA JL_0_ABDE
0002E08E <AmiBlitz3.ab3@17324>   LSL.w #8,D1
0002E090 <AmiBlitz3.ab3@17325>   LSL.w #1,D1
0002E094 <AmiBlitz3.ab3@17326>   ORI.w #$2000,D1
0002E098 <AmiBlitz3.ab3@17327>   BSR.w writeword                                          ;write move.l d0,dx
0002E09E <AmiBlitz3.ab3@17328>   TST.b fpu
0002E0A2 <AmiBlitz3.ab3@17329>   BEQ JL_0_ABDE
0002E0A4 <AmiBlitz3.ab3@17330>   MOVEQ #0,d1
0002E0AA <AmiBlitz3.ab3@17331>   MOVE.w regnum,d1
0002E0AC <AmiBlitz3.ab3@17332>   LSL.l #7,d1
0002E0B2 <AmiBlitz3.ab3@17333>   OR.l #$f2000000,d1
0002E0B4 <AmiBlitz3.ab3@17337>        MOVE.w (A7)+,D3
0002E0B8 <AmiBlitz3.ab3@17338>        BEQ.w JL_0_ABFC
0002E0BE <AmiBlitz3.ab3@17339>        TST.b fpu
0002E0C2 <AmiBlitz3.ab3@17340>        BEQ 'nofpu
0002E0C4 <AmiBlitz3.ab3@17341>       MOVE.l d0,-(a7)
0002E0C6 <AmiBlitz3.ab3@17342>        MOVE.l a0,-(a7)
0002E0CC <AmiBlitz3.ab3@17343>        MOVE.l stacktrack,d1
0002E0D2 <AmiBlitz3.ab3@17344>        LEA fpustackbase,a0
0002E0DA <AmiBlitz3.ab3@17345>        MOVE.w 0(a0,d1),regmask
0002E0DC <AmiBlitz3.ab3@17346>        MOVE.l (a7)+,a0
0002E0E0 <AmiBlitz3.ab3@17347>       MOVE.w #8,d0
0002E0E4 <AmiBlitz3.ab3@17350>       BEQ 'ready
0002E0EA <AmiBlitz3.ab3@17351>       BTST d0,regmask
0002E0EE <AmiBlitz3.ab3@17352>       BEQ 'noa7
0002E0F0 <AmiBlitz3.ab3@17353>       MOVEQ #0,d1
0002E0F2 <AmiBlitz3.ab3@17354>       MOVE.w d0,d1
0002E0F4 <AmiBlitz3.ab3@17355>       SUBQ.w #1,d1
0002E0F6 <AmiBlitz3.ab3@17356>       ASL #7,d1
0002E0FC <AmiBlitz3.ab3@17358>       OR.l #$f21f5400,d1                                   ;fmove.d (a7)+
0002E100 <AmiBlitz3.ab3@17359>       BSR writelong
0002E106 <AmiBlitz3.ab3@17360>       SUBQ.l #2,stacktrack
0002E108 <AmiBlitz3.ab3@17363>       SUBQ.w #1,d0
0002E10C <AmiBlitz3.ab3@17364>       BNE 'loop
0002E10E <AmiBlitz3.ab3@17367>       MOVE.l (a7)+,d0
0002E114 <AmiBlitz3.ab3@17368>       SUBQ.l #2,stacktrack                                 ;int track
0002E118 <AmiBlitz3.ab3@17371>    MOVE.w #$4CDF,D1
0002E11C <AmiBlitz3.ab3@17372>    BSR.w writeword                                         ;write movem.l (a7)+,
0002E11E <AmiBlitz3.ab3@17373>   MOVEQ.l #$00,D1
0002E120 <AmiBlitz3.ab3@17374>   MOVEQ.l #$0F,D4
0002E122 <AmiBlitz3.ab3@17377>     LSL.w #1,D3
0002E124 <AmiBlitz3.ab3@17378>     ROXR.w #1,D1
0002E128 <AmiBlitz3.ab3@17379>   DBF D4,JL_0_ABF0
0002E12C <AmiBlitz3.ab3@17381>    BSR.w writeword
0002E132 <AmiBlitz3.ab3@17382>    TST.b fast
0002E136 <AmiBlitz3.ab3@17383>    BEQ JL_0_ABFC
0002E13C <AmiBlitz3.ab3@17384>    TST.w regnum
0002E140 <AmiBlitz3.ab3@17385>    BEQ JL_0_ABFC
0002E146 <AmiBlitz3.ab3@17386>    CMP.w #$3c0e,$1c(a3)                                    ;true
0002E14A <AmiBlitz3.ab3@17387>    BNE 'l1
0002E150 <AmiBlitz3.ab3@17388>    MOVE.w regnum,d1
0002E152 <AmiBlitz3.ab3@17389>    ASL.l #8,d1
0002E154 <AmiBlitz3.ab3@17390>    ASL.l #1,d1
0002E158 <AmiBlitz3.ab3@17391>    OR.w #$70ff,d1
0002E162 <AmiBlitz3.ab3@17392>    SUB.l #12,destpointer
0002E166 <AmiBlitz3.ab3@17393>    BSR writeword
0002E16C <AmiBlitz3.ab3@17396>   CMP.w #$3c0f,$1c(a3)                                     ;false
0002E170 <AmiBlitz3.ab3@17397>    BNE 'l2
0002E176 <AmiBlitz3.ab3@17398>     MOVE.w regnum,d1
0002E178 <AmiBlitz3.ab3@17399>     ASL.l #8,d1
0002E17A <AmiBlitz3.ab3@17400>     ASL.l #1,d1
0002E17E <AmiBlitz3.ab3@17401>     OR.w #$7000,d1
0002E188 <AmiBlitz3.ab3@17402>     SUB.l #12,destpointer
0002E18C <AmiBlitz3.ab3@17403>     BSR writeword
0002E18E <AmiBlitz3.ab3@17407>    MOVE.w (A7)+,D2
0002E192 <AmiBlitz3.ab3@17408>   CMP.w #$7,D2                                             ;destination var type
0002E196 <AmiBlitz3.ab3@17409>    BNE.w JL_0_AC16
0002E19C <AmiBlitz3.ab3@17410>   MOVE.w putstlen,D1
0002E1A2 <AmiBlitz3.ab3@17411>   OR.w regnum,D1
0002E1A6 <AmiBlitz3.ab3@17412>    BSR.w writeword
0002E1AA <AmiBlitz3.ab3@17415> BRA.w varcont
0002E1AE <AmiBlitz3.ab3@17420>   MOVE.w $6(A3),D1
0002E1B2 <AmiBlitz3.ab3@17421>    BSR.w uselib           ;get lib for base address
0002E1B6 <AmiBlitz3.ab3@17422>    BSR.w savereg
0002E1B8 <AmiBlitz3.ab3@17423>   MOVE.l D4,D1
0002E1BA <AmiBlitz3.ab3@17424>   MOVE.l D5,-(A7)
0002E1BE <AmiBlitz3.ab3@17425>    BSR.w pokemovem
0002E1C2 <AmiBlitz3.ab3@17426>   MOVE.w $A(A1),-(A7)     ;libbase reg
0002E1C4 <AmiBlitz3.ab3@17427>   ADDQ.w #8,A3
0002E1C6 <AmiBlitz3.ab3@17428>   MOVE.w (A3)+,-(A7)      ;get offset for lib
0002E1C8 <AmiBlitz3.ab3@17429>   MOVE.l A3,-(A7)
0002E1CC <AmiBlitz3.ab3@17430>    BSR.w get1bytemain
0002E1CE <AmiBlitz3.ab3@17431>   MOVE.w D0,-(A7)         ;remember first bracket....
0002E1D0 <AmiBlitz3.ab3@17435>   MOVEQ.l #$00,D3
0002E1D6 <AmiBlitz3.ab3@17437>   JSR checka4a5
0002E1D8 <AmiBlitz3.ab3@17441>   MOVE.b (A3)+,D1
0002E1DC <AmiBlitz3.ab3@17442>    BMI.w 'done
0002E1DE <AmiBlitz3.ab3@17443>   MOVEQ.l #$03,D2
0002E1E0 <AmiBlitz3.ab3@17444>   ADDQ.w #1,D3
0002E1E4 <AmiBlitz3.ab3@17445>   MOVEM.l D3/A3,-(A7)
0002E1EA <AmiBlitz3.ab3@17447>   MOVE.b funcparloop,-(a7)
0002E1F0 <AmiBlitz3.ab3@17448>   CLR.b funcparloop
0002E1F6 <AmiBlitz3.ab3@17449>   MOVE.b blitzparloop,-(a7)
0002E1FE <AmiBlitz3.ab3@17450>   MOVE.b #1,blitzparloop
0002E204 <AmiBlitz3.ab3@17451>   MOVE.l lasttoken,-(a7)
0002E20A <AmiBlitz3.ab3@17452>   MOVE.l leftsidetype,-(a7)
0002E210 <AmiBlitz3.ab3@17453>   MOVE.l rightsidetype,-(a7)
0002E214 <AmiBlitz3.ab3@17455>   BSR.w peval
0002E21A <AmiBlitz3.ab3@17457>   MOVE.l (a7)+,rightsidetype
0002E220 <AmiBlitz3.ab3@17458>   MOVE.l (a7)+,leftsidetype
0002E226 <AmiBlitz3.ab3@17459>   MOVE.l (a7)+,lasttoken
0002E22C <AmiBlitz3.ab3@17460>   MOVE.b (a7)+,blitzparloop
0002E232 <AmiBlitz3.ab3@17461>   MOVE.b (a7)+,funcparloop
0002E238 <AmiBlitz3.ab3@17463>   SUBQ.w #4,a2offset              ;readjust stack! it's coming off later!
0002E23C <AmiBlitz3.ab3@17464>   MOVEM.l (A7)+,D3/A3
0002E240 <AmiBlitz3.ab3@17465>   CMP.w #$2C,D0                   ;','
0002E244 <AmiBlitz3.ab3@17466>    BEQ.w 'loop
0002E246 <AmiBlitz3.ab3@17467>   TST.b (A3)
0002E24A <AmiBlitz3.ab3@17468>    BPL.w syntaxerr
0002E24C <AmiBlitz3.ab3@17471>   MOVE.w (A7)+,D1
0002E250 <AmiBlitz3.ab3@17472>    BSR.w tstbras
0002E252 <AmiBlitz3.ab3@17473>   MOVEA.l (A7)+,A3
0002E254 <AmiBlitz3.ab3@17474>   SUBQ.w #1,D3
0002E258 <AmiBlitz3.ab3@17475>    BMI.w 'nopars
0002E25A <AmiBlitz3.ab3@17478>   TST.b (A3)+
0002E25E <AmiBlitz3.ab3@17479>    BPL.w 'toend
0002E260 <AmiBlitz3.ab3@17480>   SUBQ.w #1,A3
0002E262 <AmiBlitz3.ab3@17483>     MOVEQ.l #$00,D1
0002E264 <AmiBlitz3.ab3@17484>     MOVE.b -(A3),D1
0002E268 <AmiBlitz3.ab3@17485>     BTST #$4,D1
0002E26C <AmiBlitz3.ab3@17486>      BNE.w 'addreg
0002E272 <AmiBlitz3.ab3@17487>     CMP.w regnum,D1
0002E276 <AmiBlitz3.ab3@17488>      BCC.w 'nomovem
0002E278 <AmiBlitz3.ab3@17489>     BSET D1,D5
0002E27A <AmiBlitz3.ab3@17490>     MOVEQ.l #$0F,D0
0002E27C <AmiBlitz3.ab3@17491>     SUB.w D1,D0
0002E27E <AmiBlitz3.ab3@17492>     BSET D0,D4
0002E280 <AmiBlitz3.ab3@17495>     LSL.w #8,D1
0002E282 <AmiBlitz3.ab3@17496>     LSL.w #1,D1
0002E286 <AmiBlitz3.ab3@17497>     ORI.w #$201F,D1
0002E28A <AmiBlitz3.ab3@17498>    BRA.w 'gotit
0002E28E <AmiBlitz3.ab3@17501>     ANDI.w #$7,D1
0002E290 <AmiBlitz3.ab3@17502>     LSL.w #8,D1
0002E292 <AmiBlitz3.ab3@17503>     LSL.w #1,D1
0002E296 <AmiBlitz3.ab3@17504>     ORI.w #$205F,D1
0002E29A <AmiBlitz3.ab3@17507>      BSR.w writeword
0002E29E <AmiBlitz3.ab3@17508>   DBF D3,'loop2
0002E2A4 <AmiBlitz3.ab3@17511>   MOVE.w (A7)+,libjsr+2
0002E2AA <AmiBlitz3.ab3@17512>   MOVE.w (A7)+,libbase+2
0002E2B0 <AmiBlitz3.ab3@17513>   MOVE.l libbase,D1
0002E2B4 <AmiBlitz3.ab3@17514>    BSR.w writelong
0002E2BA <AmiBlitz3.ab3@17515>   MOVE.l libjsr,D1
0002E2BE <AmiBlitz3.ab3@17516>    BSR.w writelong
0002E2C4 <AmiBlitz3.ab3@17517>   MOVE.w regnum,D1
0002E2C8 <AmiBlitz3.ab3@17518>    BEQ.w 'nofin
0002E2CA <AmiBlitz3.ab3@17519>   LSL.w #8,D1
0002E2CC <AmiBlitz3.ab3@17520>   LSL.w #1,D1
0002E2D0 <AmiBlitz3.ab3@17521>   ORI.w #$2000,D1
0002E2D4 <AmiBlitz3.ab3@17522>    BSR.w writeword
0002E2D6 <AmiBlitz3.ab3@17525>   MOVE.l (A7)+,D1
0002E2DA <AmiBlitz3.ab3@17526>    BSR.w pokemovem
0002E2E0 <AmiBlitz3.ab3@17528>    JSR restorea4a5
0002E2E2 <AmiBlitz3.ab3@17530>   MOVEQ.l #$03,D2
0002E2E6 <AmiBlitz3.ab3@17531>    BSR.w reget
0002E2EA <AmiBlitz3.ab3@17532> BRA.w varcont
0002E2EC <AmiBlitz3.ab3@17541>   TST.w D3
0002E2F0 <AmiBlitz3.ab3@17542>    BEQ.w 'nopars
0002E2F4 <AmiBlitz3.ab3@17543>   CMP.w #$28,D1      ;'('
0002E2F8 <AmiBlitz3.ab3@17544>    BNE.w syntaxerr
0002E2FC <AmiBlitz3.ab3@17545>   CMP.w #$29,D0      ;')'
0002E300 <AmiBlitz3.ab3@17546>    BNE.w syntaxerr
0002E304 <AmiBlitz3.ab3@17547>  BRA.w get1bytemain
0002E308 <AmiBlitz3.ab3@17550>   CMP.w #$28,D1       ;'('
0002E30C <AmiBlitz3.ab3@17551>    BNE.w 'skip
0002E310 <AmiBlitz3.ab3@17552>    BSR.w get1bytemain
0002E314 <AmiBlitz3.ab3@17553>   CMP.w #$29,D0       ;')'
0002E318 <AmiBlitz3.ab3@17554>    BNE.w syntaxerr
0002E31C <AmiBlitz3.ab3@17555>  BRA.w get1bytemain
0002E31E <AmiBlitz3.ab3@17558> RTS
0002E320 <AmiBlitz3.ab3@17562>   TST.w D1
0002E324 <AmiBlitz3.ab3@17563>    BNE.w writelong
0002E326 <AmiBlitz3.ab3@17564> RTS
0002E32A <AmiBlitz3.ab3@17569>   MOVE.w #$48E7,D4
0002E32C <AmiBlitz3.ab3@17570>   SWAP D4
0002E32E <AmiBlitz3.ab3@17571>   CLR.w D4
0002E332 <AmiBlitz3.ab3@17572>   MOVE.w #$4CDF,D5
0002E334 <AmiBlitz3.ab3@17573>   SWAP D5
0002E336 <AmiBlitz3.ab3@17574>   CLR.w D5
0002E33C <AmiBlitz3.ab3@17575>   MOVE.w regnum,D1
0002E340 <AmiBlitz3.ab3@17576>    BEQ.w 'skip
0002E344 <AmiBlitz3.ab3@17577>   BSET #$F,D4
0002E348 <AmiBlitz3.ab3@17578>   BSET #$0,D5
0002E34C <AmiBlitz3.ab3@17579>   CMP.w #$2,D1
0002E350 <AmiBlitz3.ab3@17580>    BCS.w 'skip2
0002E354 <AmiBlitz3.ab3@17583>   BSET #$E,D4
0002E358 <AmiBlitz3.ab3@17584>   BSET #$1,D5
0002E35A <AmiBlitz3.ab3@17587>  RTS
0002E360 <AmiBlitz3.ab3@17590>   TST.w fuckpos
0002E364 <AmiBlitz3.ab3@17591>   BNE.w 'skip3
0002E366 <AmiBlitz3.ab3@17592> RTS
0002E368 <AmiBlitz3.ab3@17595> fuckpos:  Ds.w 1
0002E36E <AmiBlitz3.ab3@17599>   MOVE.w sbasegot,D1
0002E372 <AmiBlitz3.ab3@17600>    BEQ.w 'skip
0002E376 <AmiBlitz3.ab3@17604>   MOVE.w sbgot(PC),D1
0002E37A <AmiBlitz3.ab3@17605>    BNE.w 'skip2
0002E382 <AmiBlitz3.ab3@17609>   MOVE.w #$0002,sbgot
0002E388 <AmiBlitz3.ab3@17610>   MOVE.w movea3a7,D1
0002E38C <AmiBlitz3.ab3@17611>  BRA.w writeword
0002E38E <AmiBlitz3.ab3@17614>  RTS
0002E396 <AmiBlitz3.ab3@17619>   MOVE.w #$0001,sbgot                                      ;voodoo magic! - Will it work?
0002E39C <AmiBlitz3.ab3@17621>   MOVE.l #$C601,D1                  ; was #workstart,
0002E3A4 <AmiBlitz3.ab3@17622>   MOVE.w #-1,sbasegot               
0002E3AA <AmiBlitz3.ab3@17624>   MOVE.l d1,lastinstruction
0002E3AE <AmiBlitz3.ab3@17626>   BSR.w Atokejsr
0002E3B0 <AmiBlitz3.ab3@17627> RTS
0002E3BA <AmiBlitz3.ab3@17632>   MOVE.l data1,litdata1
0002E3C0 <AmiBlitz3.ab3@17634>   TST.b fast
0002E3C4 <AmiBlitz3.ab3@17635>   BEQ 'l50                                                 ;optistring  seem impossible to get work
0002E3C8 <AmiBlitz3.ab3@17639>  BRA 'l50                                                  ;to deactivate
0002E3CE <AmiBlitz3.ab3@17645>   TST.b optistring
0002E3D2 <AmiBlitz3.ab3@17646>   BNE.s 'l21
0002E3D8 <AmiBlitz3.ab3@17647>   CLR.b string1
0002E3E0 <AmiBlitz3.ab3@17648>   MOVE.b #1,optistring
0002E3E6 <AmiBlitz3.ab3@17649>   TST.b nostringopt
0002E3EA <AmiBlitz3.ab3@17650>   BNE 'l21
0002E3EC <AmiBlitz3.ab3@17651>   MOVE.l a5,a4
0002E3EE <AmiBlitz3.ab3@17652>   SUBQ.l #1,a4
0002E3F0 <AmiBlitz3.ab3@17655>     TST.b (a4)
0002E3F4 <AmiBlitz3.ab3@17656>     BMI 'l19a
0002E3F8 <AmiBlitz3.ab3@17657>     BEQ.s 'l20
0002E3FC <AmiBlitz3.ab3@17658>     CMP.b #$22,(a4)
0002E400 <AmiBlitz3.ab3@17659>     BEQ.s 'l19
0002E406 <AmiBlitz3.ab3@17662>     TST.w string1
0002E40A <AmiBlitz3.ab3@17663>     BNE 'l11
0002E40E <AmiBlitz3.ab3@17664>     CMP.b #":",(a4)
0002E412 <AmiBlitz3.ab3@17665>     BEQ.s 'l20
0002E416 <AmiBlitz3.ab3@17666>     CMP.b #";",(a4)
0002E41A <AmiBlitz3.ab3@17667>     BEQ.s 'l20
0002E41E <AmiBlitz3.ab3@17668>     CMP.b #"+",(a4)
0002E422 <AmiBlitz3.ab3@17669>     BEQ.s 'l21
0002E426 <AmiBlitz3.ab3@17670>     CMP.b #",",(a4)
0002E42A <AmiBlitz3.ab3@17671>     BEQ.s 'l20                                             ;was l21
0002E42E <AmiBlitz3.ab3@17672>     CMP.b #")",(a4)
0002E432 <AmiBlitz3.ab3@17673>     BEQ.s 'l20                                             ;was l21
0002E434 <AmiBlitz3.ab3@17676>     ADDQ.l #1,a4
0002E438 <AmiBlitz3.ab3@17677>  BRA.s 'l10
0002E440 <AmiBlitz3.ab3@17680>   BCHG #0,string1
0002E444 <AmiBlitz3.ab3@17681>  BRA 'l18
0002E446 <AmiBlitz3.ab3@17684>   ADDQ.l #1,a4
0002E448 <AmiBlitz3.ab3@17685>   TST.b (a4)
0002E44C <AmiBlitz3.ab3@17686>   BEQ 'l21
0002E450 <AmiBlitz3.ab3@17687>  BRA 'l11
0002E452 <AmiBlitz3.ab3@17690>   MOVE.l a5,a4
0002E454 <AmiBlitz3.ab3@17691>   SUBQ.l #1,a4
0002E458 <AmiBlitz3.ab3@17694>   CMP.b #$20,-(a4)
0002E45C <AmiBlitz3.ab3@17695>   BEQ 'll1
0002E460 <AmiBlitz3.ab3@17696>   CMP.b #"+",(a4)
0002E464 <AmiBlitz3.ab3@17697>   BEQ 'l21
0002E46C <AmiBlitz3.ab3@17712>   MOVE.b #2,optistring
0002E474 <AmiBlitz3.ab3@17715>   CMP.b #2,optistring
0002E478 <AmiBlitz3.ab3@17716>   BEQ.s 'l100
0002E47C <AmiBlitz3.ab3@17719>   BSR.w makesbase
0002E480 <AmiBlitz3.ab3@17721>   BSR.w pokedata1                                          ;writestringsizespace
0002E484 <AmiBlitz3.ab3@17722>   BSR.w pokedata1
0002E486 <AmiBlitz3.ab3@17725>   MOVEQ.l #$00,D2
0002E48C <AmiBlitz3.ab3@17729>     MOVE.l a5,lastsourcepos
0002E48E <AmiBlitz3.ab3@17730>     MOVEQ #0,d0
0002E490 <AmiBlitz3.ab3@17731>     MOVE.b (a5)+,d0
0002E492 <AmiBlitz3.ab3@17733>     TST.w D0
0002E496 <AmiBlitz3.ab3@17734>      BEQ.w notqerr
0002E49A <AmiBlitz3.ab3@17735>     CMP.w #$22,D0     ; '"'                                     ; --- " ---
0002E49E <AmiBlitz3.ab3@17736>      BEQ.w 'done
0002E4A2 <AmiBlitz3.ab3@17738>     CMP.b #"\",d0
0002E4A6 <AmiBlitz3.ab3@17739>      BNE 'l1
0002E4AA <AmiBlitz3.ab3@17740>     CMP.b #"\",(a5)
0002E4AE <AmiBlitz3.ab3@17741>      BNE 'l1
0002E4B4 <AmiBlitz3.ab3@17742>     TST.b newsyntax
0002E4B8 <AmiBlitz3.ab3@17743>      BEQ 'l1
0002E4BE <AmiBlitz3.ab3@17744>     CMP.w #"\\",1(a5)                                      ; new compiler constants
0002E4C2 <AmiBlitz3.ab3@17745>     BNE 'l2
0002E4C4 <AmiBlitz3.ab3@17746>     ADDQ #2,a5
0002E4C6 <AmiBlitz3.ab3@17749>     ADDQ.w #1,D2
0002E4C8 <AmiBlitz3.ab3@17750>     MOVE.w D0,D1
0002E4CC <AmiBlitz3.ab3@17751>     BSR.w pokedata1b                                        ;writestring
0002E4D0 <AmiBlitz3.ab3@17752>  BRA.w 'writestring
0002E4D6 <AmiBlitz3.ab3@17755>     JSR check_newconstants
0002E4DA <AmiBlitz3.ab3@17756>  BRA 'writestring
0002E4E0 <AmiBlitz3.ab3@17761>   NOT instringon
0002E4E6 <AmiBlitz3.ab3@17763>   MOVE.w dontwrite,D1
0002E4EA <AmiBlitz3.ab3@17764>   BNE.w 'skip
0002E4F2 <AmiBlitz3.ab3@17766>   CMP.b #2,optistring
0002E4F6 <AmiBlitz3.ab3@17767>   BEQ 'skip
0002E4FC <AmiBlitz3.ab3@17769>     MOVEA.l litdata1,A0
0002E4FE <AmiBlitz3.ab3@17770>     CLR.w (A0)+                                            ;writesize
0002E500 <AmiBlitz3.ab3@17771>     MOVE.w D2,(A0)
0002E504 <AmiBlitz3.ab3@17774>   BSR.w makelit                                          ;writestringconstantcode
0002E50A <AmiBlitz3.ab3@17775>   ADDQ.l #1,data1
0002E512 <AmiBlitz3.ab3@17776>   BCLR #$0,data1+3
0002E514 <AmiBlitz3.ab3@17777>   MOVEQ.l #$07,D2
0002E518 <AmiBlitz3.ab3@17778> BRA.w get1bytemain
0002E51C <AmiBlitz3.ab3@17783>   BSR.w makename2
0002E520 <AmiBlitz3.ab3@17785>   BSR.w findlabel2
0002E524 <AmiBlitz3.ab3@17786>   BEQ.w 'found
0002E528 <AmiBlitz3.ab3@17788>   BSR.w addlabelhash
0002E52C <AmiBlitz3.ab3@17789>   CLR.l $4(A2)           ;no refs
0002E530 <AmiBlitz3.ab3@17790>   CLR.l $8(A2)           ;not created yet (no PC)
0002E538 <AmiBlitz3.ab3@17792>   MOVE.w linenumat+2,$10(A2)  ; was linenumat,    ;context
0002E53E <AmiBlitz3.ab3@17794>   MOVE.w linenumat,d0
0002E540 <AmiBlitz3.ab3@17795>   MOVEQ #0,d1
0002E544 <AmiBlitz3.ab3@17796>   MOVE.b -1(a2,d7),d1
0002E548 <AmiBlitz3.ab3@17797>   MOVE.w d0,0(a2,d1)
0002E54C <AmiBlitz3.ab3@17799>  BRA.w 'makeit
0002E550 <AmiBlitz3.ab3@17802>   TST.l $8(A2)
0002E554 <AmiBlitz3.ab3@17803>   BNE.w 'gotit    ;already made
0002E55A <AmiBlitz3.ab3@17809>   MOVEA.l _execbase,A6
0002E55C <AmiBlitz3.ab3@17810>   MOVEQ.l #$0C+2,D0      ; was 12
0002E55E <AmiBlitz3.ab3@17811>   MOVEQ.l #$01,D1
0002E564 <AmiBlitz3.ab3@17813>   MOVE.l mempool,a0
0002E568 <AmiBlitz3.ab3@17814>   JSR _AllocPooled(a6)
0002E56A <AmiBlitz3.ab3@17817>   MOVEA.l D0,A0
0002E56E <AmiBlitz3.ab3@17818>   MOVE.l $4(A2),(A0)
0002E572 <AmiBlitz3.ab3@17819>   MOVE.l A0,$4(A2)
0002E57A <AmiBlitz3.ab3@17820>   MOVE.l destpointer,$4(A0)
0002E57E <AmiBlitz3.ab3@17821>   ADDQ.l #2,$4(A0)
0002E586 <AmiBlitz3.ab3@17822>   MOVE.w procnum,$8(A0)
0002E58E <AmiBlitz3.ab3@17823>   MOVE.w linenumat+2,$A(A0)   ; was linenumat,
0002E596 <AmiBlitz3.ab3@17825>   MOVE.w linenumat,$c(a0)
0002E598 <AmiBlitz3.ab3@17827>  RTS
0002E59C <AmiBlitz3.ab3@17830>   MOVE.l $4(A2),D1
0002E5A0 <AmiBlitz3.ab3@17831>   BTST #$0,D1
0002E5A4 <AmiBlitz3.ab3@17832>    BNE.w illlaberr
0002E5AA <AmiBlitz3.ab3@17833>   MOVE.w procnum,D1
0002E5AE <AmiBlitz3.ab3@17834>   CMP.w $10(A2),D1
0002E5B2 <AmiBlitz3.ab3@17835>    BNE.w referr
0002E5B4 <AmiBlitz3.ab3@17838> RTS
0002E5B6 <AmiBlitz3.ab3@17844>   MOVE.w D0,-(A7)
0002E5BE <AmiBlitz3.ab3@17846>   CMP.b #2,optistring
0002E5C2 <AmiBlitz3.ab3@17847>   BEQ 'l10
0002E5C8 <AmiBlitz3.ab3@17851>   MOVE.w numtoa0,D1
0002E5CC <AmiBlitz3.ab3@17852>    BSR.w writeword
0002E5D0 <AmiBlitz3.ab3@17853>    BSR.w addoff
0002E5D6 <AmiBlitz3.ab3@17854>   MOVE.l litdata1,D1
0002E5DA <AmiBlitz3.ab3@17855>    BSR.w writelong
0002E5E0 <AmiBlitz3.ab3@17856>   MOVE.w pushlen,D1
0002E5E4 <AmiBlitz3.ab3@17857>    BSR.w writeword
0002E5E8 <AmiBlitz3.ab3@17858>   MOVE.w #$C600,D1        ; was #copstring
0002E5EC <AmiBlitz3.ab3@17859>    BSR.w Atokejsr
0002E5EE <AmiBlitz3.ab3@17860>   MOVE.w (A7)+,D0
0002E5F0 <AmiBlitz3.ab3@17861>  RTS
0002E5F2 <AmiBlitz3.ab3@17865>   MOVEQ #0,d1
0002E5F6 <AmiBlitz3.ab3@17866>   BSR.w pokedata1b
0002E5FC <AmiBlitz3.ab3@17867>   MOVE.l destpointer,a4
0002E600 <AmiBlitz3.ab3@17868>   MOVE.w #$203c,d1
0002E606 <AmiBlitz3.ab3@17869>   TST.w mode
0002E60A <AmiBlitz3.ab3@17870>   BNE 'lm10
0002E610 <AmiBlitz3.ab3@17871>    ADDQ.w #4,a2offset
0002E614 <AmiBlitz3.ab3@17872>   MOVE.w #$2f3c,d1
0002E61A <AmiBlitz3.ab3@17875>   TST.w mode
0002E61E <AmiBlitz3.ab3@17876>   BEQ 'lm3
0002E624 <AmiBlitz3.ab3@17877>   MOVE.w regnum,D0
0002E626 <AmiBlitz3.ab3@17878>   LSL.w #8,D0
0002E628 <AmiBlitz3.ab3@17879>   LSL.w #1,D0
0002E62A <AmiBlitz3.ab3@17880>   OR.w d0,d1
0002E62E <AmiBlitz3.ab3@17881>   BSR writeword
0002E632 <AmiBlitz3.ab3@17882>   BSR.w addoff
0002E638 <AmiBlitz3.ab3@17883>   MOVE.l litdata1,D1
0002E63C <AmiBlitz3.ab3@17884>   BSR.w writelong
0002E644 <AmiBlitz3.ab3@17885>   CMP.w #3,mode
0002E648 <AmiBlitz3.ab3@17886>   BEQ 'l30
0002E64E <AmiBlitz3.ab3@17887>    ADDQ.w #4,a2offset
0002E652 <AmiBlitz3.ab3@17888>   MOVE.w #$4878,D1
0002E656 <AmiBlitz3.ab3@17889>   BSR.w writeword
0002E658 <AmiBlitz3.ab3@17890>   MOVE.l d2,d1
0002E65C <AmiBlitz3.ab3@17891>   BSR writeword
0002E65E <AmiBlitz3.ab3@17894>   MOVE.w (A7)+,D0
0002E660 <AmiBlitz3.ab3@17895>  RTS
0002E666 <AmiBlitz3.ab3@17898>   MOVE.l #$3f3c0007,d1
0002E66A <AmiBlitz3.ab3@17899>   BSR writelong
0002E670 <AmiBlitz3.ab3@17900>   MOVE.w regnum,D1
0002E672 <AmiBlitz3.ab3@17901>   LSL.w #8,D1
0002E674 <AmiBlitz3.ab3@17902>   LSL.w #1,D1
0002E678 <AmiBlitz3.ab3@17903>   ORI.w #$2f3c,d1
0002E67C <AmiBlitz3.ab3@17904>   BSR writeword
0002E682 <AmiBlitz3.ab3@17905>    ADDQ.w #4,a2offset
0002E684 <AmiBlitz3.ab3@17906>   MOVE.l d2,d1
0002E688 <AmiBlitz3.ab3@17907>   BSR writelong
0002E68C <AmiBlitz3.ab3@17908>   MOVE.w #$2f3c,d1
0002E690 <AmiBlitz3.ab3@17909>   BSR writeword
0002E694 <AmiBlitz3.ab3@17910>   BSR.w addoff
0002E69A <AmiBlitz3.ab3@17911>   MOVE.l litdata1,D1
0002E69E <AmiBlitz3.ab3@17912>   BSR.w writelong
0002E6A0 <AmiBlitz3.ab3@17913>   MOVE.w (A7)+,D0
0002E6A2 <AmiBlitz3.ab3@17914> RTS
0002E6A6 <AmiBlitz3.ab3@17919>   BSR.w get1bytemain
0002E6AA <AmiBlitz3.ab3@17920>    BSR.w makealab2
0002E6B0 <AmiBlitz3.ab3@17922>   MOVE.w regnum,D1
0002E6B2 <AmiBlitz3.ab3@17923>   LSL.w #8,D1
0002E6B4 <AmiBlitz3.ab3@17924>   LSL.w #1,D1
0002E6B8 <AmiBlitz3.ab3@17925>   ORI.w #$203C,D1
0002E6BC <AmiBlitz3.ab3@17926>    BSR.w writeword        ;create move.l #loc,dn
0002E6C0 <AmiBlitz3.ab3@17927>    BSR.w addoff
0002E6C4 <AmiBlitz3.ab3@17928>   MOVE.l $8(A2),D1
0002E6C8 <AmiBlitz3.ab3@17929>    BSR.w writelong
0002E6CA <AmiBlitz3.ab3@17930>   MOVEQ.l #$03,D2
0002E6D0 <AmiBlitz3.ab3@17932>   CLR.b peekaddrsize
0002E6D4 <AmiBlitz3.ab3@17934> BRA.w reget
0002E6D6 <AmiBlitz3.ab3@17938>   MOVEQ.l #$00,D3
0002E6DA <AmiBlitz3.ab3@17941>   BSR.w get1bytemain
0002E6DE <AmiBlitz3.ab3@17942>    BEQ.w syntaxerr
0002E6E2 <AmiBlitz3.ab3@17943>   CMP.w #$22,D0         ;'"'
0002E6E6 <AmiBlitz3.ab3@17944>    BEQ.w 'done
0002E6E8 <AmiBlitz3.ab3@17945>   LSL.l #8,D3
0002E6EA <AmiBlitz3.ab3@17946>   MOVE.b D0,D3
0002E6EE <AmiBlitz3.ab3@17947>  BRA.w 'loop
0002E6F2 <AmiBlitz3.ab3@17950>   BSR.w get1bytemain
0002E6F6 <AmiBlitz3.ab3@17951> BRA.w fetchnum2
0002E6F8 <AmiBlitz3.ab3@17955>   MOVE.w D2,-(A7)                                          ;basicvarsforasm
0002E6FC <AmiBlitz3.ab3@17956>    BSR.w makename2              ;get the things name
0002E700 <AmiBlitz3.ab3@17957>    BSR.w findlabel2
0002E704 <AmiBlitz3.ab3@17959>    BEQ.w 'l10
0002E70A <AmiBlitz3.ab3@17960>    LEA ptr_parameterstore,a0
0002E710 <AmiBlitz3.ab3@17961>    CMP.b #"@",-1(a0,d2.w)
0002E714 <AmiBlitz3.ab3@17963>    BNE cnferr
0002E718 <AmiBlitz3.ab3@17965>    CLR.b -1(a0,d2.w)
0002E71A <AmiBlitz3.ab3@17966>    SUBQ.l #1,d2
0002E720 <AmiBlitz3.ab3@17967>    LEA varbase,a2
0002E724 <AmiBlitz3.ab3@17968>    BSR findvariable
0002E728 <AmiBlitz3.ab3@17969>    BNE cnferr
0002E72C <AmiBlitz3.ab3@17970>    CMP.b #"\",d0
0002E730 <AmiBlitz3.ab3@17971>    BNE 'l6
0002E736 <AmiBlitz3.ab3@17972>    ADDQ #1,lastsourcepos
0002E73A <AmiBlitz3.ab3@17973>    MOVE.l $a(a2),a2
0002E73C <AmiBlitz3.ab3@17974>    ADDQ.l #4,a2
0002E740 <AmiBlitz3.ab3@17975>    BSR.w makename2
0002E744 <AmiBlitz3.ab3@17976>    BSR findvariable2
0002E748 <AmiBlitz3.ab3@17977>    BNE cnferr
0002E74C <AmiBlitz3.ab3@17978>  BRA.s 'l6                                                  ;???
0002E750 <AmiBlitz3.ab3@17981>    MOVE.w $4(a2),d3
0002E752 <AmiBlitz3.ab3@17982>    EXT.l d3
0002E756 <AmiBlitz3.ab3@17983>  BRA 'npc
0002E75A <AmiBlitz3.ab3@17987>   MOVE.l $8(A2),D3          ;val.
0002E762 <AmiBlitz3.ab3@17988>   CMPI.l #$1,$4(A2)
0002E766 <AmiBlitz3.ab3@17989>    BEQ.w 'npc
0002E76C <AmiBlitz3.ab3@17990>   NOT.w asmtype
0002E76E <AmiBlitz3.ab3@17993>   MOVE.w (A7)+,D2
0002E772 <AmiBlitz3.ab3@17994> BRA.w fetchnum2
0002E774 <AmiBlitz3.ab3@17998>   MOVE.w D2,-(A7)           ;remember old type
0002E778 <AmiBlitz3.ab3@17999>    BSR.w getparameter
0002E77C <AmiBlitz3.ab3@18000>   CMP.w #"{",D0                                          ;test if var = function{}
0002E780 <AmiBlitz3.ab3@18001>    BEQ.w isfunction
0002E784 <AmiBlitz3.ab3@18002>    BSR.w fetchvars
0002E788 <AmiBlitz3.ab3@18004>    BSR.w calcvar                                         ;getvaroffset+type
0002E78C <AmiBlitz3.ab3@18005>    BSR.w variable2
0002E792 <AmiBlitz3.ab3@18007>    MOVE.l a2,rightsidetype
0002E79C <AmiBlitz3.ab3@18008>    MOVE.w flagmask, rightsideflagmask
0002E7A2 <AmiBlitz3.ab3@18020>    TST.b typecheck
0002E7A6 <AmiBlitz3.ab3@18021>    BEQ varcont
0002E7B0 <AmiBlitz3.ab3@18022>    CMP.l #$da01,lasttoken                                  ;poke
0002E7B4 <AmiBlitz3.ab3@18023>    BEQ 'l1
0002E7BE <AmiBlitz3.ab3@18024>    CMP.l #$da02,lasttoken                                  ;peek
0002E7C2 <AmiBlitz3.ab3@18025>    BNE 'l2
0002E7CA <AmiBlitz3.ab3@18028>    CMP.w #1,parnum                                         ; is not call when & is used in parameter
0002E7CE <AmiBlitz3.ab3@18029>    BNE varcont
0002E7D4 <AmiBlitz3.ab3@18030>    MOVE.b d2,peekaddrsize
0002E7D8 <AmiBlitz3.ab3@18031>    BRA varcont
0002E7DE <AmiBlitz3.ab3@18034>   CLR.b peekaddrsize
0002E7E2 <AmiBlitz3.ab3@18038>   CMP.w #$1,D2
0002E7E6 <AmiBlitz3.ab3@18039>    BNE.w 'notabyte
0002E7EC <AmiBlitz3.ab3@18043>   MOVE.w regnum,D1
0002E7F0 <AmiBlitz3.ab3@18044>   ORI.w #$4880,D1      ;ext.w Dn
0002E7F4 <AmiBlitz3.ab3@18045>    BSR.w writeword
0002E7F6 <AmiBlitz3.ab3@18048>   MOVE.w (A7)+,D3      ;old type
0002E7FA <AmiBlitz3.ab3@18049>    BEQ.w 'done         ;type not set yet...
0002E800 <AmiBlitz3.ab3@18052>    MOVE.l lastinstructionaddr,a0
0002E804 <AmiBlitz3.ab3@18054>   CMP.w #$3,D3
0002E808 <AmiBlitz3.ab3@18055>    BNE.w 'nob
0002E80C <AmiBlitz3.ab3@18056>   CMP.w #$4,D2
0002E810 <AmiBlitz3.ab3@18057>    BEQ.w 'conv2
0002E812 <AmiBlitz3.ab3@18060>   CMP.w D2,D3
0002E816 <AmiBlitz3.ab3@18061>    BLS.w 'done
0002E818 <AmiBlitz3.ab3@18064>   EXG.l D2,D3
0002E81A <AmiBlitz3.ab3@18066>   MOVE.l a0,-(a7)
0002E820 <AmiBlitz3.ab3@18067>   TST.b typecheck
0002E824 <AmiBlitz3.ab3@18068>   BEQ 'ok
0002E82A <AmiBlitz3.ab3@18069>   TST.b notypecheck
0002E82E <AmiBlitz3.ab3@18070>   BNE 'ok
0002E834 <AmiBlitz3.ab3@18071>   MOVE.l leftsidetype,a0
0002E83E <AmiBlitz3.ab3@18072>   CMP.l #0,leftsidetype
0002E842 <AmiBlitz3.ab3@18073>   BEQ 'ok
0002E84A <AmiBlitz3.ab3@18074>   CMP.w #1,leftsideflagmask
0002E84E <AmiBlitz3.ab3@18075>   BEQ 'isptr
0002E856 <AmiBlitz3.ab3@18076>   CMP.l #$100,4(a0)
0002E85A <AmiBlitz3.ab3@18077>   BLE 'ok
0002E85E <AmiBlitz3.ab3@18080>   CMP.b #3,d3
0002E862 <AmiBlitz3.ab3@18081>   BEQ 'ok
0002E866 <AmiBlitz3.ab3@18082>   CMP.b #7,d3
0002E86A <AmiBlitz3.ab3@18083>   BEQ 'ok
0002E870 <AmiBlitz3.ab3@18084>   JMP   error_convert_types      ;for all syntax only long and string allowed to assign to a type
0002E872 <AmiBlitz3.ab3@18087>   MOVE.l (a7)+,a0
0002E876 <AmiBlitz3.ab3@18089>   BSR.w writeconvertcode         ;called from var assign      ;bump up new type to old...
0002E87A <AmiBlitz3.ab3@18092> BRA.w reget
0002E87C <AmiBlitz3.ab3@18096>   MOVEQ.l #$00,D3
0002E882 <AmiBlitz3.ab3@18097>   MOVE.w regnum,D1
0002E886 <AmiBlitz3.ab3@18098>    BEQ.w savem_skip
0002E888 <AmiBlitz3.ab3@18099>   SUBQ.w #1,D1
0002E88A <AmiBlitz3.ab3@18102>      LSR.l #1,D3
0002E88E <AmiBlitz3.ab3@18103>      BSET #$F,D3
0002E892 <AmiBlitz3.ab3@18104>   DBF D1,'loop
0002E898 <AmiBlitz3.ab3@18106>    TST.b fpu
0002E89C <AmiBlitz3.ab3@18107>    BEQ 'l1
0002E8A2 <AmiBlitz3.ab3@18108>    ADDQ.l #2,stacktrack                                    ;intern command
0002E8A4 <AmiBlitz3.ab3@18109>     MOVE.l a0,-(a7)
0002E8AA <AmiBlitz3.ab3@18110>     MOVE.l stacktrack,d1
0002E8B0 <AmiBlitz3.ab3@18111>     LEA fpustackbase,a0
0002E8B4 <AmiBlitz3.ab3@18112>     CLR.w 0(a0,d1)
0002E8BA <AmiBlitz3.ab3@18113>     CLR.w regmask
0002E8BC <AmiBlitz3.ab3@18114>     MOVE.l (a7)+,a0
0002E8C0 <AmiBlitz3.ab3@18118>   MOVE.w #$48E7,D1
0002E8C4 <AmiBlitz3.ab3@18119>    BSR.w writeword                                         ;write movem.l d0/d1,-(a7)
0002E8C6 <AmiBlitz3.ab3@18120>   MOVE.w D3,D1
0002E8CA <AmiBlitz3.ab3@18121> BRA.w writeword
0002E8CC <AmiBlitz3.ab3@18126>   MOVEQ.l #$00,D3
0002E8D2 <AmiBlitz3.ab3@18127>   MOVE.w regnum,D1
0002E8D6 <AmiBlitz3.ab3@18128>    BEQ.w savem_skip
0002E8D8 <AmiBlitz3.ab3@18129>   SUBQ.w #1,D1
0002E8DA <AmiBlitz3.ab3@18132>     LSR.l #1,D3
0002E8DE <AmiBlitz3.ab3@18133>     BSET #$F,D3
0002E8E2 <AmiBlitz3.ab3@18134>   DBF D1,'loop
0002E8E8 <AmiBlitz3.ab3@18136>    TST.b fpu
0002E8EC <AmiBlitz3.ab3@18137>    BEQ 'l1
0002E8F2 <AmiBlitz3.ab3@18138>    ADDQ.l #2,stacktrack                                    ;intern command
0002E8F4 <AmiBlitz3.ab3@18139>     MOVE.l a0,-(a7)
0002E8FA <AmiBlitz3.ab3@18140>     MOVE.l stacktrack,d1
0002E900 <AmiBlitz3.ab3@18141>     LEA fpustackbase,a0
0002E904 <AmiBlitz3.ab3@18142>     CLR.w 0(a0,d1)
0002E908 <AmiBlitz3.ab3@18143>    CMP.b #5,(a3)                                           ;result float ?
0002E90C <AmiBlitz3.ab3@18144>     BNE 'nofpu
0002E916 <AmiBlitz3.ab3@18146>     MOVE.w regnum,regnumfunc
0002E91C <AmiBlitz3.ab3@18149>   CLR.w regmask
0002E91E <AmiBlitz3.ab3@18150>     MOVE.l (a7)+,a0
0002E922 <AmiBlitz3.ab3@18154>   MOVE.w #$48E7,D1
0002E926 <AmiBlitz3.ab3@18155>    BSR.w writeword                                         ;write movem.l d0/d1,-(a7)
0002E928 <AmiBlitz3.ab3@18156>   MOVE.w D3,D1
0002E92C <AmiBlitz3.ab3@18157>  BRA.w writeword
0002E92E <AmiBlitz3.ab3@18160> RTS
0002E930 <AmiBlitz3.ab3@18164>   MOVE.l D1,-(A7)
0002E934 <AmiBlitz3.ab3@18165>   MOVE.w #$4EB9,D1
0002E938 <AmiBlitz3.ab3@18166>    BSR.w writeword
0002E93C <AmiBlitz3.ab3@18167>    BSR.w addoff
0002E93E <AmiBlitz3.ab3@18168>   MOVE.l (A7)+,D1
0002E942 <AmiBlitz3.ab3@18169> BRA.w writelong
0002E946 <AmiBlitz3.ab3@18176>    BSR.w findproc                                          ;write function call
0002E94A <AmiBlitz3.ab3@18178>    BEQ 'l1a
0002E950 <AmiBlitz3.ab3@18179>    TST.l unusedfunc
0002E954 <AmiBlitz3.ab3@18181>    BEQ noprocerr
0002E95A <AmiBlitz3.ab3@18184>    JSR gotoendsource
0002E962 <AmiBlitz3.ab3@18187>   MOVE.l funcstruct_returntype(a2),rightsidetype
0002E968 <AmiBlitz3.ab3@18188>   TST.l typetocast
0002E96C <AmiBlitz3.ab3@18189>   BEQ 'nocast
0002E976 <AmiBlitz3.ab3@18190>   MOVE.l typetocast,rightsidetype
0002E97C <AmiBlitz3.ab3@18191>   CLR.l typetocast
0002E97E <AmiBlitz3.ab3@18192>   MOVE.l a1,-(a7)
0002E984 <AmiBlitz3.ab3@18193>   MOVE.l rightsidetype,a1
0002E98A <AmiBlitz3.ab3@18194>   CMP.l leftsidetype,a1
0002E98E <AmiBlitz3.ab3@18195>   BEQ 'ok
0002E994 <AmiBlitz3.ab3@18196>   JMP errorconvertreturntype2
0002E996 <AmiBlitz3.ab3@18199>   MOVE.l (a7)+,a1
0002E998 <AmiBlitz3.ab3@18203>   MOVEQ.l #$00,D1
0002E99C <AmiBlitz3.ab3@18204>   MOVE.b $5(A2),D1
0002E9A2 <AmiBlitz3.ab3@18206>   MOVE.b d1,retmode
0002E9A6 <AmiBlitz3.ab3@18208>    BMI.w illprocerr
0002E9AC <AmiBlitz3.ab3@18210>    MOVE.b #1,isfunc(a2)
0002E9AE <AmiBlitz3.ab3@18212>   MOVE.w D1,-(A7)
0002E9B0 <AmiBlitz3.ab3@18213>   MOVEQ.l #$00,D1
0002E9B4 <AmiBlitz3.ab3@18214>   MOVE.b $4(A2),D1
0002E9B6 <AmiBlitz3.ab3@18215>   LSR.w #4,D1
0002E9BA <AmiBlitz3.ab3@18216>    BEQ.w 'skip
0002E9BC <AmiBlitz3.ab3@18217>   LSL.w #2,D1
0002E9C2 <AmiBlitz3.ab3@18218>   SUB.w D1,a2offset
0002E9C6 <AmiBlitz3.ab3@18221>   CMPI.w #$7,(A7)       ;function type!
0002E9CA <AmiBlitz3.ab3@18222>    BNE.b 'sss
0002E9CC <AmiBlitz3.ab3@18223>   MOVE.l A2,-(A7)
0002E9D0 <AmiBlitz3.ab3@18224>    BSR.w makesbase
0002E9D2 <AmiBlitz3.ab3@18225>   MOVEA.l (A7)+,A2
0002E9D8 <AmiBlitz3.ab3@18228>   MOVE.w sbasegot,-(A7)
0002E9DC <AmiBlitz3.ab3@18229>    BEQ.b 'sssz
0002E9E0 <AmiBlitz3.ab3@18230>    BSR.w dopusha3
0002E9E4 <AmiBlitz3.ab3@18233>   BSR.w savemfunc
0002E9E6 <AmiBlitz3.ab3@18234>   MOVE.w D3,-(A7)             ;the movem regs
0002E9EA <AmiBlitz3.ab3@18236>   MOVE.l $E(A2),D1            ;pc of function call
0002E9EE <AmiBlitz3.ab3@18238>   TST.b $20(a2)                                            ;increase if morepar
0002E9F2 <AmiBlitz3.ab3@18239>   BNE 'no0par
0002E9F4 <AmiBlitz3.ab3@18240>   MOVE.l a5,a4
0002E9F8 <AmiBlitz3.ab3@18243>   CMP.b #$20,(a4)+
0002E9FC <AmiBlitz3.ab3@18244>   BEQ 'l1
0002EA02 <AmiBlitz3.ab3@18245>   CMP.b #"}",-1(a4)
0002EA06 <AmiBlitz3.ab3@18246>   BNE  'no0par
0002EA08 <AmiBlitz3.ab3@18247>   MOVEQ #0,d0
0002EA0C <AmiBlitz3.ab3@18250>   LEA $16(A2),A1
0002EA0E <AmiBlitz3.ab3@18253>   MOVE.l d1,-(a7)
0002EA10 <AmiBlitz3.ab3@18254>   MOVE.b (a1),d2
0002EA12 <AmiBlitz3.ab3@18255>   MOVE.l d0,d1
0002EA16 <AmiBlitz3.ab3@18256>   CMP.w #4,d2
0002EA1A <AmiBlitz3.ab3@18257>   BNE 'l1b
0002EA20 <AmiBlitz3.ab3@18258>   ADD.l #$203c,d1
0002EA24 <AmiBlitz3.ab3@18259>   BSR writeword
0002EA2A <AmiBlitz3.ab3@18260>   MOVE.l #$ffff0000,d1
0002EA2E <AmiBlitz3.ab3@18261>   BSR writelong
0002EA32 <AmiBlitz3.ab3@18262>  BRA 'l2b
0002EA38 <AmiBlitz3.ab3@18265>    TST.b fpu
0002EA3C <AmiBlitz3.ab3@18266>    BNE 'l1c
0002EA40 <AmiBlitz3.ab3@18267>    CMP.w #5,d2
0002EA44 <AmiBlitz3.ab3@18268>    BNE 'l1c
0002EA4A <AmiBlitz3.ab3@18269>    ADD.l #$203c,d1
0002EA4E <AmiBlitz3.ab3@18270>    BSR writeword
0002EA54 <AmiBlitz3.ab3@18271>    MOVE.l #$800000c1,d1
0002EA58 <AmiBlitz3.ab3@18272>    BSR writelong
0002EA5C <AmiBlitz3.ab3@18273>  BRA 'l2b
0002EA62 <AmiBlitz3.ab3@18276>   ADD.l #$70ff,d1
0002EA66 <AmiBlitz3.ab3@18277>   BSR writeword
0002EA6A <AmiBlitz3.ab3@18278>   CMP.w #7,d2
0002EA6E <AmiBlitz3.ab3@18279>   BNE 'l1d
0002EA74 <AmiBlitz3.ab3@18280>   MOVE.l #$2f3c0000,d1      ; write code move.l #0,-(a7)
0002EA78 <AmiBlitz3.ab3@18281>   BSR writelong
0002EA7A <AmiBlitz3.ab3@18282>   MOVEQ #0,d1
0002EA7E <AmiBlitz3.ab3@18283>   BSR writeword
0002EA84 <AmiBlitz3.ab3@18284>   MOVE.l #$2f3c0000,d1      ; write code move.l #0,-(a7)
0002EA88 <AmiBlitz3.ab3@18285>   BSR writelong
0002EA8A <AmiBlitz3.ab3@18286>   MOVEQ #0,d1
0002EA8E <AmiBlitz3.ab3@18287>   BSR writeword
0002EA94 <AmiBlitz3.ab3@18290>   MOVE.l #$f23c5000,d1
0002EA96 <AmiBlitz3.ab3@18291>   MOVE.l d0,d2
0002EA98 <AmiBlitz3.ab3@18292>   ASR.l #2,d2
0002EA9A <AmiBlitz3.ab3@18293>   ADD.l d2,d1
0002EA9E <AmiBlitz3.ab3@18294>   BSR writelong
0002EAA2 <AmiBlitz3.ab3@18295>   MOVE.w #$ffff,d1
0002EAA6 <AmiBlitz3.ab3@18296>   BSR writeword
0002EAA8 <AmiBlitz3.ab3@18300>   MOVE.l (a7)+,d1
0002EAAA <AmiBlitz3.ab3@18301>      ADDQ.l #1,a1
0002EAB0 <AmiBlitz3.ab3@18302>      ADD.l #$0200,d0
0002EAB6 <AmiBlitz3.ab3@18303>      CMP.l #$0e00,d0
0002EABA <AmiBlitz3.ab3@18304>      BEQ syntaxerr
0002EABC <AmiBlitz3.ab3@18305>      TST.b (a1)
0002EAC0 <AmiBlitz3.ab3@18306>      BNE 'again
0002EAC4 <AmiBlitz3.ab3@18307>  BRA 'p1
0002EAC8 <AmiBlitz3.ab3@18311>   TST.b $4(A2)
0002EACC <AmiBlitz3.ab3@18312>    BNE.w 'somepars
0002EAD0 <AmiBlitz3.ab3@18317>   BSR.w makefjsr
0002EAD4 <AmiBlitz3.ab3@18318>    BSR.w get1bytemain
0002EAD8 <AmiBlitz3.ab3@18319>  BRA.w 'nopars
0002EADE <AmiBlitz3.ab3@18324>   MOVE.w parnum,-(a7)                                      ;7.2014 need store so function calls in parameter >6 can work
0002EAE4 <AmiBlitz3.ab3@18326>   MOVE.w regnum,-(A7)         ;old regat
0002EAEE <AmiBlitz3.ab3@18328>   MOVE.w regnum,regnumfunc
0002EAF0 <AmiBlitz3.ab3@18332>   MOVE.l D1,-(A7)                                          ;write functioncall with pars
0002EAF8 <AmiBlitz3.ab3@18334>   MOVE.b #1,funccall
0002EAFA <AmiBlitz3.ab3@18336>   MOVEQ.l #$00,D0
0002EAFE <AmiBlitz3.ab3@18337>   MOVE.b $4(A2),D0
0002EB08 <AmiBlitz3.ab3@18339>   MOVE.w a2offset,a2offset2
0002EB10 <AmiBlitz3.ab3@18340>   MOVE.b 5(a2),retmode
0002EB16 <AmiBlitz3.ab3@18341>   MOVE.l a2,currentfunccall
0002EB1A <AmiBlitz3.ab3@18343>   LEA $16(A2),A2              ;pointer to var desc
0002EB20 <AmiBlitz3.ab3@18344>   CLR.w regnum
0002EB26 <AmiBlitz3.ab3@18346>   CLR.w regmask
0002EB2C <AmiBlitz3.ab3@18347>   MOVE.b isconstantvalue,-(a7)
0002EB32 <AmiBlitz3.ab3@18348>   MOVE.b funcparloop,-(a7)
0002EB3A <AmiBlitz3.ab3@18349>   MOVE.b #1,funcparloop
0002EB40 <AmiBlitz3.ab3@18350>   MOVE.l rightsidetype,-(a7)
0002EB46 <AmiBlitz3.ab3@18351>   MOVE.l leftsidetype,-(a7)                               ;store values To stack so it can work recursive
0002EB4C <AmiBlitz3.ab3@18352>   MOVE.b blitzparloop,-(a7)
0002EB52 <AmiBlitz3.ab3@18353>   CLR.b blitzparloop
0002EB58 <AmiBlitz3.ab3@18355>   JSR fetchpees2
0002EB5E <AmiBlitz3.ab3@18358>   MOVE.b (a7)+,blitzparloop
0002EB64 <AmiBlitz3.ab3@18359>   MOVE.l (a7)+,leftsidetype
0002EB6A <AmiBlitz3.ab3@18360>   MOVE.l (a7)+,rightsidetype
0002EB70 <AmiBlitz3.ab3@18361>   MOVE.b (a7)+,funcparloop
0002EB76 <AmiBlitz3.ab3@18362>   MOVE.b (a7)+,isconstantvalue
0002EB7C <AmiBlitz3.ab3@18364>   JSR chkstak
0002EB7E <AmiBlitz3.ab3@18365>   MOVE.l (A7)+,D1
0002EB82 <AmiBlitz3.ab3@18382>    BTST #0,d1
0002EB86 <AmiBlitz3.ab3@18383>    BNE intern1
0002EB8A <AmiBlitz3.ab3@18385>    BSR.w makefjsr
0002EB90 <AmiBlitz3.ab3@18409>   MOVE.w (A7)+,regnum
0002EB96 <AmiBlitz3.ab3@18411>   MOVE.w (a7)+,parnum                                     ;07.2014
0002EB9A <AmiBlitz3.ab3@18415>   CMP.w #"}",D0
0002EB9E <AmiBlitz3.ab3@18416>    BNE.w errorbracketmiss2
0002EBA0 <AmiBlitz3.ab3@18419>    MOVEQ #0,d1                                            ; end of function call pars
0002EBA6 <AmiBlitz3.ab3@18421>   MOVE.w regnum,D1
0002EBAA <AmiBlitz3.ab3@18422>    BEQ.w 'nopars3
0002EBB0 <AmiBlitz3.ab3@18424>    TST.b fpu
0002EBB4 <AmiBlitz3.ab3@18425>    BEQ 'old
0002EBBC <AmiBlitz3.ab3@18426>    CMP.b #5,retmode
0002EBC0 <AmiBlitz3.ab3@18427>    BNE 'old
0002EBC2 <AmiBlitz3.ab3@18428>    ASL.l #7,d1
0002EBC8 <AmiBlitz3.ab3@18429>    OR.l #$f2000000,d1
0002EBCC <AmiBlitz3.ab3@18430>    BSR writelong
0002EBD0 <AmiBlitz3.ab3@18431>  BRA 'nopars3
0002EBD2 <AmiBlitz3.ab3@18435>   LSL.w #8,D1
0002EBD4 <AmiBlitz3.ab3@18436>   LSL.w #1,D1
0002EBD8 <AmiBlitz3.ab3@18437>   ORI.w #$2000,D1
0002EBDC <AmiBlitz3.ab3@18438>    BSR.w writeword         ;move.l d0,regat
0002EBDE <AmiBlitz3.ab3@18441>    MOVE.w (A7)+,D3
0002EBE2 <AmiBlitz3.ab3@18442>    BEQ.w 'nomovem
0002EBE8 <AmiBlitz3.ab3@18444>    TST.b fpu
0002EBEC <AmiBlitz3.ab3@18445>    BEQ 'old2
0002EBEE <AmiBlitz3.ab3@18446>    MOVE.l d0,-(a7)
0002EBF2 <AmiBlitz3.ab3@18447>    MOVE.w #8,d0
0002EBF4 <AmiBlitz3.ab3@18448>    MOVE.l a0,-(a7)
0002EBFA <AmiBlitz3.ab3@18449>    MOVE.l stacktrack,d1
0002EC00 <AmiBlitz3.ab3@18450>    LEA fpustackbase,a0
0002EC08 <AmiBlitz3.ab3@18451>    MOVE.w 0(a0,d1),regmask
0002EC0A <AmiBlitz3.ab3@18452>    MOVE.l (a7)+,a0
0002EC0E <AmiBlitz3.ab3@18455>   BEQ 'ready
0002EC14 <AmiBlitz3.ab3@18456>    BTST d0,regmask
0002EC18 <AmiBlitz3.ab3@18457>    BEQ 'noa7
0002EC1A <AmiBlitz3.ab3@18458>    MOVEQ #0,d1
0002EC1C <AmiBlitz3.ab3@18459>    MOVE.w d0,d1
0002EC1E <AmiBlitz3.ab3@18460>    SUBQ.w #1,d1
0002EC20 <AmiBlitz3.ab3@18461>    ASL #7,d1
0002EC26 <AmiBlitz3.ab3@18463>    OR.l #$f21f5400,d1                                      ;fmove.d (a7)+
0002EC2A <AmiBlitz3.ab3@18464>    BSR writelong
0002EC30 <AmiBlitz3.ab3@18465>    SUBQ.l #2,stacktrack
0002EC32 <AmiBlitz3.ab3@18468>    SUBQ.w #1,d0
0002EC36 <AmiBlitz3.ab3@18469>    BNE 'loop
0002EC3C <AmiBlitz3.ab3@18472>   SUBQ.l #2,stacktrack                                     ;integer sub
0002EC3E <AmiBlitz3.ab3@18473>   MOVE.l (a7)+,d0
0002EC42 <AmiBlitz3.ab3@18477>   MOVE.w #$4CDF,D1
0002EC46 <AmiBlitz3.ab3@18478>    BSR.w writeword
0002EC48 <AmiBlitz3.ab3@18479>   MOVEQ.l #$00,D1
0002EC4A <AmiBlitz3.ab3@18480>   MOVEQ.l #$0F,D4
0002EC4C <AmiBlitz3.ab3@18483>     LSL.w #1,D3
0002EC4E <AmiBlitz3.ab3@18484>     ROXR.w #1,D1
0002EC52 <AmiBlitz3.ab3@18485>   DBF D4,'loopsw                                         ;movem.l (a7)+,dx
0002EC56 <AmiBlitz3.ab3@18487>     BSR.w writeword        ;poke movem (a7)+...
0002EC5C <AmiBlitz3.ab3@18489>    CLR.w regnumfunc
0002EC5E <AmiBlitz3.ab3@18493>   MOVE.w (A7)+,D1
0002EC62 <AmiBlitz3.ab3@18494>    BEQ.b 'nores
0002EC66 <AmiBlitz3.ab3@18495>   CMPI.w #$7,(A7)
0002EC6A <AmiBlitz3.ab3@18496>    BEQ.b 'issb
0002EC70 <AmiBlitz3.ab3@18498>   LEA geta3,A0
0002EC76 <AmiBlitz3.ab3@18499>   LEA geta3f,A1
0002EC7A <AmiBlitz3.ab3@18500>    BSR.w pokecode
0002EC7E <AmiBlitz3.ab3@18501>  BRA.b 'nosb
0002EC84 <AmiBlitz3.ab3@18505>   MOVE.w deca3,D1
0002EC88 <AmiBlitz3.ab3@18506>    BSR.w writeword
0002EC8C <AmiBlitz3.ab3@18509>   BSR.w dopulla3          ;fix up string base
0002EC8E <AmiBlitz3.ab3@18512>   MOVE.w (A7)+,D2         ;what it returns!
0002EC92 <AmiBlitz3.ab3@18513>   CMP.w #$7,D2
0002EC96 <AmiBlitz3.ab3@18514>    BNE.w 'notst
0002EC9C <AmiBlitz3.ab3@18515>   MOVE.w putstlen,D1
0002ECA2 <AmiBlitz3.ab3@18516>   OR.w regnum,D1
0002ECA6 <AmiBlitz3.ab3@18517>    BSR.w writeword
0002ECAA <AmiBlitz3.ab3@18520>   BSR.w get1bytemain
0002ECAE <AmiBlitz3.ab3@18521> BRA.w varcont
0002ECB0 <AmiBlitz3.ab3@18525> deca3:   Dc.b $53,$4B                                      ;SUBQ.W  #1,A3
0002ECB8 <AmiBlitz3.ab3@18533>   CMP.b #2,optistring
0002ECBC <AmiBlitz3.ab3@18534>   BEQ 'fs2
0002ECC0 <AmiBlitz3.ab3@18536>   BSR.w makesbase                                          ;writestringvariable
0002ECC4 <AmiBlitz3.ab3@18537>   BTST #$F,D2
0002ECC8 <AmiBlitz3.ab3@18538>    BNE.w 'already
0002ECCE <AmiBlitz3.ab3@18539>   MOVE.w D3,leaa5d3a2+2
0002ECD4 <AmiBlitz3.ab3@18540>   MOVE.l leaa5d3a2,D1
0002ECD8 <AmiBlitz3.ab3@18541>    BSR.w pokela5s
0002ECDE <AmiBlitz3.ab3@18544>   MOVE.w regnum,D1
0002ECE0 <AmiBlitz3.ab3@18545>   LSL.w #8,D1
0002ECE2 <AmiBlitz3.ab3@18546>   LSL.w #1,D1
0002ECE6 <AmiBlitz3.ab3@18547>   ORI.w #$7000,D1
0002ECEC <AmiBlitz3.ab3@18548>   LEA stvarget2,A0
0002ECEE <AmiBlitz3.ab3@18549>   MOVE.w D1,(A0)
0002ECF4 <AmiBlitz3.ab3@18550>   MOVE.w regnum,D1
0002ECFA <AmiBlitz3.ab3@18551>   ANDI.w #$FFF8,$2(A0)
0002ECFE <AmiBlitz3.ab3@18552>   OR.w D1,$2(A0)
0002ED04 <AmiBlitz3.ab3@18553>   LEA stvarget2f,A1
0002ED08 <AmiBlitz3.ab3@18554>    BSR.w pokecode
0002ED0C <AmiBlitz3.ab3@18555>   MOVE.w #$C600,D1     ; was #copstring,
0002ED10 <AmiBlitz3.ab3@18556>    BSR.w Atokejsr
0002ED12 <AmiBlitz3.ab3@18557>   MOVEQ.l #$07,D2
0002ED16 <AmiBlitz3.ab3@18558>  BRA.w reget
0002ED1C <AmiBlitz3.ab3@18562>      TST.w stackpar
0002ED20 <AmiBlitz3.ab3@18563>      BMI 'l10
0002ED26 <AmiBlitz3.ab3@18564>      MOVE.l #$3f3c0007,d1
0002ED2C <AmiBlitz3.ab3@18565>      ADDQ.w #2,a2offset
0002ED30 <AmiBlitz3.ab3@18566>      BSR writelong
0002ED34 <AmiBlitz3.ab3@18569>   MOVE.w #$4878,d1
0002ED3A <AmiBlitz3.ab3@18570>      CLR.w stackpar
0002ED3E <AmiBlitz3.ab3@18571>      BSR writeword
0002ED42 <AmiBlitz3.ab3@18572>      MOVE.w #$0,d1
0002ED46 <AmiBlitz3.ab3@18573>      BSR writeword
0002ED4A <AmiBlitz3.ab3@18574>      MOVE.w #$246d,d1
0002ED4E <AmiBlitz3.ab3@18575>      BSR writeword
0002ED50 <AmiBlitz3.ab3@18576>      MOVE.w d3,d1
0002ED54 <AmiBlitz3.ab3@18577>      BSR writeword
0002ED5A <AmiBlitz3.ab3@18578>      MOVE.l #$4a926704,d1
0002ED5E <AmiBlitz3.ab3@18579>      BSR writelong
0002ED64 <AmiBlitz3.ab3@18580>      MOVE.l #$2eaafffc,d1
0002ED68 <AmiBlitz3.ab3@18581>      BSR writelong
0002ED6C <AmiBlitz3.ab3@18582>      MOVE.w #$2f0a,d1
0002ED72 <AmiBlitz3.ab3@18583>      ADDQ.w #8,a2offset
0002ED76 <AmiBlitz3.ab3@18584>      BSR writeword
0002ED7A <AmiBlitz3.ab3@18585> BRA.w reget
0002ED7E <AmiBlitz3.ab3@18590>   CMP.b #$7,D2                                             ;load basic var
0002ED82 <AmiBlitz3.ab3@18591>    BEQ.w stvar
0002ED88 <AmiBlitz3.ab3@18593>    TST.b iee
0002ED8C <AmiBlitz3.ab3@18594>    BEQ 'noiee
0002ED90 <AmiBlitz3.ab3@18595>    CMP.b #5,d2
0002ED94 <AmiBlitz3.ab3@18596>    BNE 'noiee
0002ED96 <AmiBlitz3.ab3@18597>    MOVE.l d0,-(a7)                                         ;fpu load var
0002ED9A <AmiBlitz3.ab3@18598>    BTST #15,d2
0002ED9E <AmiBlitz3.ab3@18599>    BEQ 'var
0002EDA4 <AmiBlitz3.ab3@18600>    CMP.l #$7fff,d3
0002EDA8 <AmiBlitz3.ab3@18601>    BGT 'longoffset
0002EDAE <AmiBlitz3.ab3@18602>    MOVE.l #$f22a4400,d1                                    ;newtype     >32kb
0002EDB0 <AmiBlitz3.ab3@18603>    TST.w d3                                                ;offset =0
0002EDB4 <AmiBlitz3.ab3@18604>    BNE 'offset
0002EDBA <AmiBlitz3.ab3@18607>   MOVE.l #$f2124400,d1
0002EDBC <AmiBlitz3.ab3@18608>    MOVEQ #0,d3
0002EDC0 <AmiBlitz3.ab3@18609>  BRA 'glob
0002EDC6 <AmiBlitz3.ab3@18612>   SUBQ.l #4,destpointer
0002EDCA <AmiBlitz3.ab3@18613>  BRA 'glob
0002EDD0 <AmiBlitz3.ab3@18616>   TST.b fast
0002EDD4 <AmiBlitz3.ab3@18617>    BEQ 'nofastload
0002EDDA <AmiBlitz3.ab3@18618>    TST.w regnum
0002EDDE <AmiBlitz3.ab3@18619>    BNE 'nofastload
0002EDE4 <AmiBlitz3.ab3@18620>    CMP.l fp0addr,a4
0002EDE8 <AmiBlitz3.ab3@18621>    BNE 'nofastload
0002EDEE <AmiBlitz3.ab3@18622>    MOVE.l fp0iff,d1
0002EDF4 <AmiBlitz3.ab3@18623>    CMP.l firstiff,d1
0002EDF8 <AmiBlitz3.ab3@18624>    BNE 'nofastload
0002EDFE <AmiBlitz3.ab3@18625>    MOVE.w varmode,d1
0002EE04 <AmiBlitz3.ab3@18626>    CMP.w fp0mode,d1
0002EE08 <AmiBlitz3.ab3@18627>    BNE 'nofastload
0002EE0E <AmiBlitz3.ab3@18628>    CMP.w fp0var,d3
0002EE12 <AmiBlitz3.ab3@18629>    BNE 'nofastload
0002EE16 <AmiBlitz3.ab3@18630>    BCLR #16,d2
0002EE18 <AmiBlitz3.ab3@18631>    MOVE.l (a7)+,d0
0002EE1A <AmiBlitz3.ab3@18632>  RTS
0002EE1C <AmiBlitz3.ab3@18635>    MOVEQ #0,d0
0002EE22 <AmiBlitz3.ab3@18636>    MOVE.w regnum,d0
0002EE28 <AmiBlitz3.ab3@18637>    CMP.l maxregs,d0
0002EE2C <AmiBlitz3.ab3@18638>    BLE 'ok
0002EE32 <AmiBlitz3.ab3@18639>    LEA cmplxerr,a0
0002EE34 <AmiBlitz3.ab3@18640>   MOVE.l a0,-(a7)
0002EE3A <AmiBlitz3.ab3@18641>  JMP handle_compileerror
0002EE40 <AmiBlitz3.ab3@18644>    LEA regtable,a4
0002EE42 <AmiBlitz3.ab3@18645>    TST.l (a4)
0002EE46 <AmiBlitz3.ab3@18646>    BEQ 'noreg
0002EE4A <AmiBlitz3.ab3@18647>    CMP.w 0+4(a4),d3
0002EE4E <AmiBlitz3.ab3@18648>    BNE 'doreg1
0002EE54 <AmiBlitz3.ab3@18649>    MOVE.l #$f2001c00,d1
0002EE5A <AmiBlitz3.ab3@18650>    MOVE.w regnum,d0
0002EE5C <AmiBlitz3.ab3@18651>    ASL.w #7,d0
0002EE5E <AmiBlitz3.ab3@18652>    OR.w d0,d1
0002EE62 <AmiBlitz3.ab3@18653>    BSR writelong
0002EE64 <AmiBlitz3.ab3@18654>    MOVE.l (a7)+,d0
0002EE66 <AmiBlitz3.ab3@18655>  RTS
0002EE6A <AmiBlitz3.ab3@18658>   CMP.w 8+4(a4),d3
0002EE6E <AmiBlitz3.ab3@18659>    BNE 'doreg2
0002EE74 <AmiBlitz3.ab3@18660>    MOVE.l #$f2001800,d1
0002EE7A <AmiBlitz3.ab3@18661>    MOVE.w regnum,d0
0002EE7C <AmiBlitz3.ab3@18662>    ASL.w #7,d0
0002EE7E <AmiBlitz3.ab3@18663>    OR.w d0,d1
0002EE82 <AmiBlitz3.ab3@18664>    BSR writelong
0002EE84 <AmiBlitz3.ab3@18665>    MOVE.l (a7)+,d0
0002EE86 <AmiBlitz3.ab3@18666>  RTS
0002EE8A <AmiBlitz3.ab3@18669>   CMP.w 16+4(a4),d3
0002EE8E <AmiBlitz3.ab3@18670>    BNE 'doreg3
0002EE94 <AmiBlitz3.ab3@18671>    MOVE.l #$f2001400,d1
0002EE9A <AmiBlitz3.ab3@18672>    MOVE.w regnum,d0
0002EE9C <AmiBlitz3.ab3@18673>    ASL.w #7,d0
0002EE9E <AmiBlitz3.ab3@18674>    OR.w d0,d1
0002EEA2 <AmiBlitz3.ab3@18675>    BSR  writelong
0002EEA4 <AmiBlitz3.ab3@18676>    MOVE.l (a7)+,d0
0002EEA6 <AmiBlitz3.ab3@18677>  RTS
0002EEAA <AmiBlitz3.ab3@18680>   CMP.w 24+4(a4),d3
0002EEAE <AmiBlitz3.ab3@18681>    BNE 'doreg4
0002EEB4 <AmiBlitz3.ab3@18682>    MOVE.l #$f2001000,d1
0002EEBA <AmiBlitz3.ab3@18683>    MOVE.w regnum,d0
0002EEBC <AmiBlitz3.ab3@18684>    ASL.w #7,d0
0002EEBE <AmiBlitz3.ab3@18685>    OR.w d0,d1
0002EEC2 <AmiBlitz3.ab3@18686>    BSR writelong
0002EEC4 <AmiBlitz3.ab3@18687>    MOVE.l (a7)+,d0
0002EEC6 <AmiBlitz3.ab3@18688>  RTS
0002EECA <AmiBlitz3.ab3@18691>    CMP.w 32+4(a4),d3
0002EECE <AmiBlitz3.ab3@18692>    BNE 'noreg
0002EED4 <AmiBlitz3.ab3@18693>    MOVE.l #$f2000c00,d1
0002EEDA <AmiBlitz3.ab3@18694>    MOVE.w regnum,d0
0002EEDC <AmiBlitz3.ab3@18695>    ASL.w #7,d0
0002EEDE <AmiBlitz3.ab3@18696>    OR.w d0,d1
0002EEE2 <AmiBlitz3.ab3@18697>    BSR writelong
0002EEE4 <AmiBlitz3.ab3@18698>    MOVE.l (a7)+,d0
0002EEE6 <AmiBlitz3.ab3@18699>  RTS
0002EEEC <AmiBlitz3.ab3@18702>    MOVE.l #$f22d4400,d1                                    ;var
0002EEF2 <AmiBlitz3.ab3@18703>    TST.w varmode
0002EEF6 <AmiBlitz3.ab3@18704>   BEQ 'glob
0002EEFA <AmiBlitz3.ab3@18705>   BCLR #16,d1                                              ;local
0002EEFC <AmiBlitz3.ab3@18708>    MOVEQ #0,d0
0002EF02 <AmiBlitz3.ab3@18709>    MOVE.w regnum,d0
0002EF06 <AmiBlitz3.ab3@18710>    CMP.w #7,d0
0002EF0A <AmiBlitz3.ab3@18711>    BLE 'ok2
0002EF10 <AmiBlitz3.ab3@18712>    LEA cmplxerr,a0
0002EF12 <AmiBlitz3.ab3@18713>   MOVE.l a0,-(a7)
0002EF18 <AmiBlitz3.ab3@18714>  JMP handle_compileerror
0002EF1A <AmiBlitz3.ab3@18717>      ASL.w #7,d0
0002EF1C <AmiBlitz3.ab3@18718>    OR.l d0,d1
0002EF24 <AmiBlitz3.ab3@18719>    CMP.l #doublecheck,8(a2)
0002EF28 <AmiBlitz3.ab3@18720>    BNE 'dbl
0002EF2E <AmiBlitz3.ab3@18721>    OR.l #$00001000,d1
0002EF32 <AmiBlitz3.ab3@18724>   BSR writelong
0002EF34 <AmiBlitz3.ab3@18725>    MOVE.l (a7)+,d0
0002EF38 <AmiBlitz3.ab3@18726>    AND.w #$ff,d2
0002EF3A <AmiBlitz3.ab3@18727>    MOVE.w d3,d1
0002EF3E <AmiBlitz3.ab3@18728>    BEQ 'nooffs
0002EF42 <AmiBlitz3.ab3@18729>  BRA writeword
0002EF44 <AmiBlitz3.ab3@18734>  RTS
0002EF4A <AmiBlitz3.ab3@18737>   MOVE.w regnum,D1
0002EF50 <AmiBlitz3.ab3@18739>   MOVE.w d1,load_var_reg
0002EF52 <AmiBlitz3.ab3@18741>   LSL.w #8,D1
0002EF5C <AmiBlitz3.ab3@18743>   MOVE.l destpointer,load_var_addr
0002EF62 <AmiBlitz3.ab3@18744>   MOVE.w d2,load_var_size
0002EF64 <AmiBlitz3.ab3@18746>   LSL.w #1,D1
0002EF68 <AmiBlitz3.ab3@18747>   BTST #$E,D2
0002EF6C <AmiBlitz3.ab3@18748>    BNE.w 'pointer
0002EF6E <AmiBlitz3.ab3@18749>   TST.b D2
0002EF72 <AmiBlitz3.ab3@18750>    BNE.w 'skip2
0002EF74 <AmiBlitz3.ab3@18751>   MOVEQ.l #$03,D2
0002EF78 <AmiBlitz3.ab3@18752>   ORI.w #$200A,D1
0002EF7C <AmiBlitz3.ab3@18753>  BRA.w writeword
0002EF80 <AmiBlitz3.ab3@18756>   MOVE.b #$3,D2
0002EF84 <AmiBlitz3.ab3@18759>   BTST #$F,D2
0002EF88 <AmiBlitz3.ab3@18760>    BEQ.w 'simpvar                                         ;loadarray
0002EF8E <AmiBlitz3.ab3@18762>    TST.b fast                                              ;lea->move xx(a2)
0002EF92 <AmiBlitz3.ab3@18763>    BEQ 'la10
0002EF98 <AmiBlitz3.ab3@18768>    CLR.l load_var_addr
0002EF9C <AmiBlitz3.ab3@18769>  BRA 'la10
0002EFA4 <AmiBlitz3.ab3@18771>    CMP.w #$2012,movea2dn                                  ;??Looks like dead code??
0002EFA8 <AmiBlitz3.ab3@18772>    BNE 'la10
0002EFAE <AmiBlitz3.ab3@18773>    TST.b optiarray
0002EFB2 <AmiBlitz3.ab3@18774>    BNE 'la10
0002EFB8 <AmiBlitz3.ab3@18775>    MOVE.l destpointer,a4
0002EFBE <AmiBlitz3.ab3@18776>    SUB.l loada,a4
0002EFC2 <AmiBlitz3.ab3@18777>    CMP.w #4,a4
0002EFC6 <AmiBlitz3.ab3@18778>    BEQ 'la100
0002EFCA <AmiBlitz3.ab3@18779>    CMP.w #2,a4
0002EFCE <AmiBlitz3.ab3@18780>    BNE 'la10
0002EFD4 <AmiBlitz3.ab3@18781>    MOVE.l destpointer,a4
0002EFD8 <AmiBlitz3.ab3@18782>    CMP.b #3,d2
0002EFDC <AmiBlitz3.ab3@18783>    BCS 'la110
0002EFE2 <AmiBlitz3.ab3@18784>    MOVE.w #$202a,-2(a4)
0002EFE6 <AmiBlitz3.ab3@18785>    OR.w d1,-2(a4)
0002EFEC <AmiBlitz3.ab3@18786>    MOVE.w arrayoffset,d1
0002EFF0 <AmiBlitz3.ab3@18787>    BSR writeword
0002EFF4 <AmiBlitz3.ab3@18788>  BRA 'more
0002EFF8 <AmiBlitz3.ab3@18791>    CMP.b #2,d2
0002EFFC <AmiBlitz3.ab3@18792>    BNE 'la120
0002F002 <AmiBlitz3.ab3@18793>     MOVE.w #$302a,-2(a4)
0002F006 <AmiBlitz3.ab3@18794>    OR.w d1,-2(a4)
0002F00C <AmiBlitz3.ab3@18796>    MOVE.w arrayoffset,d1
0002F010 <AmiBlitz3.ab3@18797>    BSR writeword
0002F014 <AmiBlitz3.ab3@18798>  BRA 'more
0002F018 <AmiBlitz3.ab3@18801>   CMP.b #1,d2
0002F01C <AmiBlitz3.ab3@18802>    BNE.s 'la10
0002F022 <AmiBlitz3.ab3@18803>     MOVE.w #$102a,-2(a4)
0002F026 <AmiBlitz3.ab3@18804>    OR.w d1,-2(a4)
0002F02C <AmiBlitz3.ab3@18805>    MOVE.w arrayoffset,d1
0002F030 <AmiBlitz3.ab3@18806>    BSR writeword
0002F034 <AmiBlitz3.ab3@18807>  BRA 'more
0002F03A <AmiBlitz3.ab3@18810>   MOVE.l destpointer,a4
0002F040 <AmiBlitz3.ab3@18811>    CMP.w #$45ea,-2(a4)
0002F044 <AmiBlitz3.ab3@18812>    BNE 'la10
0002F048 <AmiBlitz3.ab3@18813>    CMP.b #3,d2
0002F04C <AmiBlitz3.ab3@18814>    BCS 'la11
0002F052 <AmiBlitz3.ab3@18815>    MOVE.w #$202a,-4(a4)
0002F056 <AmiBlitz3.ab3@18816>    OR.w d1,-4(a4)
0002F05A <AmiBlitz3.ab3@18817>  BRA 'more
0002F05E <AmiBlitz3.ab3@18820>    CMP.b #2,d2
0002F062 <AmiBlitz3.ab3@18821>    BNE 'la12
0002F068 <AmiBlitz3.ab3@18822>     MOVE.w #$302a,-4(a4)
0002F06C <AmiBlitz3.ab3@18823>    OR.w d1,-4(a4)
0002F070 <AmiBlitz3.ab3@18824>  BRA 'more
0002F074 <AmiBlitz3.ab3@18827>   CMP.b #1,d2
0002F078 <AmiBlitz3.ab3@18828>    BNE.s 'la10
0002F07E <AmiBlitz3.ab3@18829>     MOVE.w #$102a,-4(a4)
0002F082 <AmiBlitz3.ab3@18830>    OR.w d1,-4(a4)
0002F086 <AmiBlitz3.ab3@18831>  BRA 'more
0002F08C <AmiBlitz3.ab3@18835>    OR.w movea2dn,D1
0002F090 <AmiBlitz3.ab3@18836>    BSR.w 'size
0002F094 <AmiBlitz3.ab3@18837>    BSR.w writeword
0002F098 <AmiBlitz3.ab3@18840>   ANDI.w #$FF,D2
0002F09A <AmiBlitz3.ab3@18841>  RTS
0002F0A0 <AmiBlitz3.ab3@18845>    MOVE.l destpointer,a4              ; "
0002F0A8 <AmiBlitz3.ab3@18846>    MOVE.l #$f22a4400,-4(a4)           ; "
0002F0AE <AmiBlitz3.ab3@18847>    MOVE.w arrayoffset,d1              ; "
0002F0B2 <AmiBlitz3.ab3@18848>  BRA writeword
0002F0B8 <AmiBlitz3.ab3@18852>   OR.w moved3a5dn,D1                                        ;write move.l 0(a5),reg
0002F0BC <AmiBlitz3.ab3@18853>    BSR.w 'size
0002F0C0 <AmiBlitz3.ab3@18854>    BSR.w pokewda5s
0002F0C2 <AmiBlitz3.ab3@18855>   MOVE.w D3,D1
0002F0C6 <AmiBlitz3.ab3@18856>    BSR.w writeword
0002F0CA <AmiBlitz3.ab3@18857>  BRA.w 'more
0002F0CE <AmiBlitz3.ab3@18862>   BTST #$E,D2
0002F0D2 <AmiBlitz3.ab3@18863>    BNE.w 'long
0002F0D6 <AmiBlitz3.ab3@18864>   CMP.b #$1,D2
0002F0DA <AmiBlitz3.ab3@18865>    BEQ.w 'byte
0002F0DE <AmiBlitz3.ab3@18866>   CMP.b #$2,D2
0002F0E2 <AmiBlitz3.ab3@18867>    BEQ.w 'word
0002F0E4 <AmiBlitz3.ab3@18870>  RTS
0002F0E8 <AmiBlitz3.ab3@18873>   EORI.w #$3000,D1
0002F0EA <AmiBlitz3.ab3@18874>  RTS
0002F0EE <AmiBlitz3.ab3@18877>   ORI.w #$1000,D1
0002F0F0 <AmiBlitz3.ab3@18878> RTS
0002F0F8 <AmiBlitz3.ab3@18884>   MOVE.w #$FFFF,dfetch    ; was -1
0002F0FC <AmiBlitz3.ab3@18885>   BSR.w get1bytemain
0002F100 <AmiBlitz3.ab3@18886>   CMP.w #$2D,D0           ;'-'
0002F104 <AmiBlitz3.ab3@18887>    BNE.w 'datado
0002F108 <AmiBlitz3.ab3@18888>   BSR.w get1bytemain
0002F10C <AmiBlitz3.ab3@18889>   BSR.w 'datado
0002F110 <AmiBlitz3.ab3@18891>   CMP.w #$5,D2
0002F114 <AmiBlitz3.ab3@18892>    BCC.w 'nfp
0002F116 <AmiBlitz3.ab3@18893>   NEG.l D0
0002F118 <AmiBlitz3.ab3@18894>  RTS
0002F11E <AmiBlitz3.ab3@18898>   TST.b fpu
0002F122 <AmiBlitz3.ab3@18899>   BEQ 'noneg
0002F126 <AmiBlitz3.ab3@18900>   fneg.x fp0
0002F128 <AmiBlitz3.ab3@18901>  RTS
0002F12C <AmiBlitz3.ab3@18906>   BCHG #$7,D0
0002F12E <AmiBlitz3.ab3@18907>  RTS
0002F132 <AmiBlitz3.ab3@18911>   CMP.w #$24,D0          ;'$'
0002F136 <AmiBlitz3.ab3@18912>    BEQ.w get_hexconstant
0002F13A <AmiBlitz3.ab3@18913>   CMP.w #$25,D0          ;'%'
0002F13E <AmiBlitz3.ab3@18914>    BEQ.w JL_0_A8C0
0002F142 <AmiBlitz3.ab3@18917>   CMP.w #$2E,D0          ;'.'
0002F146 <AmiBlitz3.ab3@18918>    BNE.w fetchnum
0002F148 <AmiBlitz3.ab3@18922>   MOVEQ.l #$00,D3
0002F14C <AmiBlitz3.ab3@18923> BRA.w fetchpoint2
0002F14E <AmiBlitz3.ab3@18927>   MOVEQ.l #$00,D3                                          ;number
0002F152 <AmiBlitz3.ab3@18929>    BSR.w atoi
0002F156 <AmiBlitz3.ab3@18931>   CMP.w #$2E,D0             ;'.'
0002F15A <AmiBlitz3.ab3@18932>    BEQ.w fetchpoint
0002F15E <AmiBlitz3.ab3@18933>   ORI.w #$20,D0
0002F162 <AmiBlitz3.ab3@18934>   CMP.w #$65,D0             ;'e'
0002F166 <AmiBlitz3.ab3@18935>    BNE.w fetchnum2
0002F16C <AmiBlitz3.ab3@18936>   CMP.l #$800000,D3
0002F170 <AmiBlitz3.ab3@18937>    BCC.w overerr
0002F172 <AmiBlitz3.ab3@18938>   MOVEQ.l #-$01,D6
0002F176 <AmiBlitz3.ab3@18940>   fmove.l d3,fp0
0002F178 <AmiBlitz3.ab3@18942>   MOVE.l D3,D0
0002F17E <AmiBlitz3.ab3@18943>   MOVEA.l _mathffpbase,A6
0002F182 <AmiBlitz3.ab3@18944>    JSR -$24(A6)             ;int to ffp
0002F184 <AmiBlitz3.ab3@18945>   MOVE.l D0,D3
0002F188 <AmiBlitz3.ab3@18946>    BSR.w dothee
0002F18C <AmiBlitz3.ab3@18947>    BSR.w reget
0002F190 <AmiBlitz3.ab3@18948>    BSR.w consttype2
0002F194 <AmiBlitz3.ab3@18949> BRA.w fetchnum3
0002F198 <AmiBlitz3.ab3@18954>   CMP.b #4,d2
0002F19C <AmiBlitz3.ab3@18955>   BEQ 'l4
0002F1A0 <AmiBlitz3.ab3@18956>   MOVE.b #5,d2                                             ;nprint 2/0.5 bugfix
0002F1A6 <AmiBlitz3.ab3@18959>    TST.b fpu
0002F1AA <AmiBlitz3.ab3@18960>    BNE 'l1
0002F1B0 <AmiBlitz3.ab3@18962>    CMP.l #$800000,D3
0002F1B4 <AmiBlitz3.ab3@18963>    BCC.w overerr
0002F1B8 <AmiBlitz3.ab3@18965>  BRA fetchpoint2
0002F1BE <AmiBlitz3.ab3@18968>   CMP.l #$7fffffff,d3
0002F1C2 <AmiBlitz3.ab3@18969>     BCC.w overerr
0002F1C4 <AmiBlitz3.ab3@18974>   MOVEQ.l #-$01,D6         ;now a float.
0002F1C6 <AmiBlitz3.ab3@18975>   MOVE.l D3,D0
0002F1CA <AmiBlitz3.ab3@18977>   fmove.l d3,fp0
0002F1D0 <AmiBlitz3.ab3@18979>   MOVEA.l _mathffpbase,A6
0002F1D4 <AmiBlitz3.ab3@18980>    JSR -$24(A6)            ;int to ffp                                       ;integer to ffp
0002F1D6 <AmiBlitz3.ab3@18981>   MOVE.l D0,-(A7)          ;save whole number
0002F1DA <AmiBlitz3.ab3@18982>    BSR.w get1bytemain
0002F1DE <AmiBlitz3.ab3@18983>    BSR.w tstnum
0002F1E2 <AmiBlitz3.ab3@18984>    BNE.w syntaxerr
0002F1E4 <AmiBlitz3.ab3@18985>   MOVEQ.l #$00,D3
0002F1E8 <AmiBlitz3.ab3@18986>    BSR.w atoi              ;get int frac
0002F1EA <AmiBlitz3.ab3@18987>   TST.l D3
0002F1EE <AmiBlitz3.ab3@18988>    BEQ.w 'pskip
0002F1F4 <AmiBlitz3.ab3@18990>   TST.b fpu
0002F1F8 <AmiBlitz3.ab3@18991>   BNE 'l1
0002F1FE <AmiBlitz3.ab3@18993>   CMP.l #$800000,D3
0002F202 <AmiBlitz3.ab3@18994>    BCC.w overerr
0002F206 <AmiBlitz3.ab3@18996>  BRA 'l2
0002F20C <AmiBlitz3.ab3@18999>   CMP.l #$7fffffff,d3
0002F210 <AmiBlitz3.ab3@19000>   BCC overerr
0002F214 <AmiBlitz3.ab3@19003>   fmove.l d5,fp1
0002F216 <AmiBlitz3.ab3@19005>   MOVE.l D5,D0
0002F21A <AmiBlitz3.ab3@19006>    JSR -$24(A6)        ;divisor to ffp
0002F21C <AmiBlitz3.ab3@19007>   MOVE.l D0,D5
0002F220 <AmiBlitz3.ab3@19009>   fmove.l d3,fp2
0002F222 <AmiBlitz3.ab3@19011>   MOVE.l D3,D0
0002F226 <AmiBlitz3.ab3@19012>    JSR -$24(A6)        ;to ffp
0002F22A <AmiBlitz3.ab3@19014>   fdiv.x fp1,fp2
0002F22C <AmiBlitz3.ab3@19016>   MOVE.l D5,D1
0002F230 <AmiBlitz3.ab3@19017>    JSR -$54(A6)       ;num/divisor (eg .25=25/100)
0002F234 <AmiBlitz3.ab3@19019>   fadd.x fp2,fp0
0002F236 <AmiBlitz3.ab3@19021>   MOVE.l (A7)+,D1
0002F23A <AmiBlitz3.ab3@19022>    JSR -$42(A6)       ;add 'em
0002F23C <AmiBlitz3.ab3@19023>   MOVE.l D0,D3
0002F240 <AmiBlitz3.ab3@19024>    BSR.w reget
0002F244 <AmiBlitz3.ab3@19025>   ORI.w #$20,D0
0002F248 <AmiBlitz3.ab3@19026>   CMP.w #$65,D0       ;'e'
0002F24C <AmiBlitz3.ab3@19027>    BNE.w 'pskip2
0002F250 <AmiBlitz3.ab3@19030>    BSR.w dothee
0002F254 <AmiBlitz3.ab3@19033>    BSR.w reget
0002F258 <AmiBlitz3.ab3@19034>    BSR.w consttype2
0002F25C <AmiBlitz3.ab3@19035> BRA.w fetchnum3
0002F25E <AmiBlitz3.ab3@19038>   MOVE.l (A7)+,D3
0002F262 <AmiBlitz3.ab3@19039> BRA.w 'pskip2
0002F266 <AmiBlitz3.ab3@19044>   BSR.w get1bytemain
0002F26A <AmiBlitz3.ab3@19045>   CMP.w #$2B,D0       ;'+'
0002F26E <AmiBlitz3.ab3@19046>    BEQ.w 'pos
0002F272 <AmiBlitz3.ab3@19047>   CMP.w #$2D,D0       ;'-'
0002F276 <AmiBlitz3.ab3@19048>    BNE.w 'pos2
0002F27A <AmiBlitz3.ab3@19050>    BSR.w get1bytemain
0002F27E <AmiBlitz3.ab3@19051>    BSR.w getsign
0002F280 <AmiBlitz3.ab3@19055>   MOVE.l D3,D0
0002F284 <AmiBlitz3.ab3@19057>   fdiv.x fp1,fp0
0002F286 <AmiBlitz3.ab3@19059>   MOVE.l D4,D1
0002F28A <AmiBlitz3.ab3@19060>    JSR -$54(A6)
0002F28C <AmiBlitz3.ab3@19061>   MOVE.l D0,D3
0002F28E <AmiBlitz3.ab3@19062> RTS
0002F292 <AmiBlitz3.ab3@19065>   BSR.w get1bytemain
0002F296 <AmiBlitz3.ab3@19068>   BSR.w getsign
0002F29A <AmiBlitz3.ab3@19072>   fmul.x fp1,fp0
0002F29C <AmiBlitz3.ab3@19073>   MOVE.l D3,D0
0002F29E <AmiBlitz3.ab3@19074>   MOVE.l D4,D1
0002F2A2 <AmiBlitz3.ab3@19075>    JSR -$4E(A6)
0002F2A4 <AmiBlitz3.ab3@19076>   MOVE.l D0,D3
0002F2A6 <AmiBlitz3.ab3@19077> RTS
0002F2AA <AmiBlitz3.ab3@19081>   BSR.w tstnum
0002F2AE <AmiBlitz3.ab3@19082>    BNE.w syntaxerr
0002F2B0 <AmiBlitz3.ab3@19083>   MOVE.w D0,D4
0002F2B4 <AmiBlitz3.ab3@19084>   SUBI.w #$30,D4
0002F2B8 <AmiBlitz3.ab3@19085>    BSR.w get1bytemain
0002F2BC <AmiBlitz3.ab3@19086>    BSR.w tstnum
0002F2C0 <AmiBlitz3.ab3@19087>    BNE.w 'skip
0002F2C4 <AmiBlitz3.ab3@19088>   MULU #$A,D4
0002F2C8 <AmiBlitz3.ab3@19089>   SUBI.w #$30,D0
0002F2CA <AmiBlitz3.ab3@19090>   ADD.w D0,D4
0002F2CE <AmiBlitz3.ab3@19091>    BSR.w get1bytemain
0002F2D2 <AmiBlitz3.ab3@19095>   CMP.w #$12,D4
0002F2D6 <AmiBlitz3.ab3@19096>    BHI.w overerr
0002F2D8 <AmiBlitz3.ab3@19098>   LSL.w #3,D4
0002F2DE <AmiBlitz3.ab3@19099>   LEA fputab,a0
0002F2E0 <AmiBlitz3.ab3@19100>   ADD.l d4,a0
0002F2E6 <AmiBlitz3.ab3@19101>   fmove.d 0(a0),fp1
0002F2E8 <AmiBlitz3.ab3@19103>   LSR.w #1,d4               ; was #2
0002F2EC <AmiBlitz3.ab3@19104>   MOVE.l facts(PC,D4.W),D4
0002F2EE <AmiBlitz3.ab3@19105> RTS
0002F336 <AmiBlitz3.ab3@19109>   Dc.d 1,10,100,1000,10000,100000,1000000,10000000,100000000  ;,1000000000,10000000000
0002F33A <AmiBlitz3.ab3@19114>   Dc.l $80000041
0002F33E <AmiBlitz3.ab3@19115>   Dc.l $A0000044
0002F342 <AmiBlitz3.ab3@19116>   Dc.l $C8000047
0002F346 <AmiBlitz3.ab3@19117>   Dc.l $FA00004A
0002F34A <AmiBlitz3.ab3@19118>   Dc.l $9C40004E
0002F34E <AmiBlitz3.ab3@19119>   Dc.l $C3500051
0002F352 <AmiBlitz3.ab3@19120>   Dc.l $F4240054
0002F356 <AmiBlitz3.ab3@19121>   Dc.l $98968058
0002F35A <AmiBlitz3.ab3@19122>   Dc.l $BEBC205B
0002F35E <AmiBlitz3.ab3@19123>   Dc.l $EE6B285E
0002F362 <AmiBlitz3.ab3@19124>   Dc.l $9502F962
0002F366 <AmiBlitz3.ab3@19125>   Dc.l $BA43B765
0002F36A <AmiBlitz3.ab3@19126>   Dc.l $E8D4A568
0002F36E <AmiBlitz3.ab3@19127>   Dc.l $9184E76C
0002F372 <AmiBlitz3.ab3@19128>   Dc.l $B5E6A96F
0002F376 <AmiBlitz3.ab3@19129>   Dc.l $E35F2972
0002F37A <AmiBlitz3.ab3@19130>   Dc.l $8E1BCA76
0002F37E <AmiBlitz3.ab3@19131>   Dc.l $B1A2BD79
0002F382 <AmiBlitz3.ab3@19132>   Dc.l $DE0B6C7C
0002F384 <AmiBlitz3.ab3@19136>   MOVEQ.l #$01,D5
0002F386 <AmiBlitz3.ab3@19139>   LSL.l #1,D5
0002F388 <AmiBlitz3.ab3@19140>   MOVE.l D5,D1
0002F38A <AmiBlitz3.ab3@19141>   LSL.l #2,D5
0002F38C <AmiBlitz3.ab3@19142>   ADD.l D1,D5                                              ;divisor for frac convert!
0002F38E <AmiBlitz3.ab3@19144>   LSL.l #1,D3
0002F392 <AmiBlitz3.ab3@19145>    BCS.w overerr
0002F394 <AmiBlitz3.ab3@19146>   MOVE.l D3,D1
0002F396 <AmiBlitz3.ab3@19147>   LSL.l #1,D3
0002F39A <AmiBlitz3.ab3@19148>    BCS.w overerr
0002F39C <AmiBlitz3.ab3@19149>   LSL.l #1,D3
0002F3A0 <AmiBlitz3.ab3@19150>    BCS.w overerr
0002F3A2 <AmiBlitz3.ab3@19151>   ADD.l D1,D3
0002F3A6 <AmiBlitz3.ab3@19152>   SUBI.w #$30,D0
0002F3A8 <AmiBlitz3.ab3@19153>   ADD.l D0,D3
0002F3D4 <AmiBlitz3.ab3@19155>    !fget                                                   ;bsr.w get1bytemain
0002F3D8 <AmiBlitz3.ab3@19156>    CMP.b #1,d0
0002F3DC <AmiBlitz3.ab3@19157>    BNE 'cm1
0002F3DE <AmiBlitz3.ab3@19158>    SUBQ.l #1,a5
0002F3E2 <AmiBlitz3.ab3@19159>    BSR get1bytemain                                        ;??wy not !fget
0002F3E6 <AmiBlitz3.ab3@19162>   CMP.b #$7e,d0
0002F3EA <AmiBlitz3.ab3@19163>    BNE 'cm2
0002F3EC <AmiBlitz3.ab3@19164>    SUBQ.l #1,a5
0002F3F0 <AmiBlitz3.ab3@19165>    BSR get1bytemain
0002F3F2 <AmiBlitz3.ab3@19168>   TST.b d0
0002F3F6 <AmiBlitz3.ab3@19169>    BPL 'l10
0002F3F8 <AmiBlitz3.ab3@19170>    LSL.w #8,d0
0002F3FA <AmiBlitz3.ab3@19171>    MOVE.b (a5)+,d0
0002F400 <AmiBlitz3.ab3@19172>    MOVE.w d0,lastchar
0002F412 <AmiBlitz3.ab3@19175>   !compare2                                                ;bsr.w tstnum ;cmake bug
0002F416 <AmiBlitz3.ab3@19177>    BEQ.w 'loop
0002F418 <AmiBlitz3.ab3@19178> RTS
0002F41A <AmiBlitz3.ab3@19181> dfetch:  Ds.w 1                                            ;fetching data?
0002F41E <AmiBlitz3.ab3@19185>   MOVE.w dfetch(PC),D1
0002F422 <AmiBlitz3.ab3@19186>    BEQ.w 'doit
0002F428 <AmiBlitz3.ab3@19187>   CLR.w dfetch
0002F42A <AmiBlitz3.ab3@19188>  RTS
0002F430 <AmiBlitz3.ab3@19192>   MOVE.b d2,isconstantvalue
0002F436 <AmiBlitz3.ab3@19193>   MOVE.l d0,lastconstantvalue
0002F43C <AmiBlitz3.ab3@19194>   MOVE.w d2,imm_size
0002F446 <AmiBlitz3.ab3@19195>   MOVE.w regnum,imm_reg
0002F450 <AmiBlitz3.ab3@19196>   MOVE.l destpointer,imm_addr                           ; long
0002F454 <AmiBlitz3.ab3@19198>   CMP.w #$3,D2          ; order of cmp/beq in org soure is different
0002F458 <AmiBlitz3.ab3@19199>   BEQ.w 'long
0002F45C <AmiBlitz3.ab3@19200>   CMP.w #$5,D2                                          ;float
0002F460 <AmiBlitz3.ab3@19201>   BEQ.w 'long
0002F464 <AmiBlitz3.ab3@19202>   CMP.w #$1,D2
0002F468 <AmiBlitz3.ab3@19203>   BEQ.w 'word
0002F46C <AmiBlitz3.ab3@19204>   CMP.w #$2,D2
0002F470 <AmiBlitz3.ab3@19205>   BEQ.w 'word
0002F474 <AmiBlitz3.ab3@19206>   CMP.w #$4,D2
0002F478 <AmiBlitz3.ab3@19207>   BEQ.w 'long
0002F47C <AmiBlitz3.ab3@19208>  BRA.w mismatcherr
0002F482 <AmiBlitz3.ab3@19211>   MOVE.w regnum,D1
0002F484 <AmiBlitz3.ab3@19212>   LSL.w #8,D1
0002F486 <AmiBlitz3.ab3@19213>   LSL.w #1,D1
0002F48A <AmiBlitz3.ab3@19214>   ORI.w #$303C,D1
0002F48E <AmiBlitz3.ab3@19215>    BSR.w writeword
0002F490 <AmiBlitz3.ab3@19216>   MOVE.w D0,D1
0002F494 <AmiBlitz3.ab3@19217>    BSR.w writeword
0002F498 <AmiBlitz3.ab3@19218>  BRA.w reget
0002F49A <AmiBlitz3.ab3@19222>   MOVEQ #0,d1
0002F4A0 <AmiBlitz3.ab3@19224>   MOVE.w regnum,D1
0002F4A6 <AmiBlitz3.ab3@19226>   TST.b fpu
0002F4AA <AmiBlitz3.ab3@19227>   BEQ 'f1
0002F4AE <AmiBlitz3.ab3@19228>   CMP.w #5,d2
0002F4B2 <AmiBlitz3.ab3@19229>   BEQ 'l10
0002F4B6 <AmiBlitz3.ab3@19230>  BRA 'f2
0002F4BC <AmiBlitz3.ab3@19233>   TST.b iee
0002F4C0 <AmiBlitz3.ab3@19234>   BNE 'l10
0002F4C2 <AmiBlitz3.ab3@19238>   LSL.w #8,D1
0002F4C4 <AmiBlitz3.ab3@19239>   LSL.w #1,D1
0002F4C8 <AmiBlitz3.ab3@19240>   ORI.w #$203C,D1
0002F4CC <AmiBlitz3.ab3@19241>    BSR.w writeword
0002F4CE <AmiBlitz3.ab3@19242>   MOVE.l D0,D1
0002F4D2 <AmiBlitz3.ab3@19243>    BSR.w writelong
0002F4D6 <AmiBlitz3.ab3@19244>  BRA.w reget
0002F4D8 <AmiBlitz3.ab3@19248>   MOVEQ #5,d2
0002F4DA <AmiBlitz3.ab3@19249>   ASL.l #7,d1
0002F4DC <AmiBlitz3.ab3@19250>   SUBQ.l #8,a7
0002F4E2 <AmiBlitz3.ab3@19255>       OR.l #$f23c4400,d1                                   ;fmove.s
0002F4E8 <AmiBlitz3.ab3@19256>        fmove.s fp0,0(a7)
0002F4EC <AmiBlitz3.ab3@19258>   BSR writelong
0002F4EE <AmiBlitz3.ab3@19259>   MOVE.l (a7)+,d1
0002F4F2 <AmiBlitz3.ab3@19260>   BSR writelong
0002F4F4 <AmiBlitz3.ab3@19261>   MOVE.l (a7)+,d1
0002F4F8 <AmiBlitz3.ab3@19265> BRA.w reget
0002F4FA <AmiBlitz3.ab3@19272>  MOVE.l D3,D0
0002F4FC <AmiBlitz3.ab3@19273>   TST.w D6
0002F500 <AmiBlitz3.ab3@19274>    BEQ.w 'skip            ;already integer
0002F506 <AmiBlitz3.ab3@19275>   MOVEA.l _mathffpbase,A6
0002F50A <AmiBlitz3.ab3@19276>    JSR -$1E(A6)
0002F50E <AmiBlitz3.ab3@19277>    BVC.w 'skip
0002F510 <AmiBlitz3.ab3@19278>   ADDQ.w #4,A7
0002F514 <AmiBlitz3.ab3@19279>  BRA.w numdofloat
0002F516 <AmiBlitz3.ab3@19282> RTS
0002F518 <AmiBlitz3.ab3@19286>   MOVEQ.l #$00,D6          ;no frac
0002F51C <AmiBlitz3.ab3@19288>    fmove.l d3,fp0
0002F520 <AmiBlitz3.ab3@19292>   BSR.w consttype2
0002F524 <AmiBlitz3.ab3@19293> BRA.w fetchnum3
0002F526 <AmiBlitz3.ab3@19301>   MOVE.w D2,-(A7)                       ;
0002F52A <AmiBlitz3.ab3@19302>    BSR.w evalconst                      ;  "
0002F52C <AmiBlitz3.ab3@19303>   MOVE.w (A7)+,D2
0002F52E <AmiBlitz3.ab3@19306>   TST.w D2
0002F532 <AmiBlitz3.ab3@19307>    BNE.w 'something
0002F534 <AmiBlitz3.ab3@19311>   TST.w D6
0002F538 <AmiBlitz3.ab3@19312>    BEQ.w 'nofrac
0002F53A <AmiBlitz3.ab3@19313>   MOVEQ.l #$04,D2
0002F53E <AmiBlitz3.ab3@19314>  BRA.w 'quick2
0002F540 <AmiBlitz3.ab3@19317>   MOVEQ.l #$02,D2
0002F544 <AmiBlitz3.ab3@19318>  BRA.w 'byte
0002F548 <AmiBlitz3.ab3@19321>   CMP.w #$1,D2
0002F54C <AmiBlitz3.ab3@19322>    BEQ.w 'byte
0002F550 <AmiBlitz3.ab3@19323>   CMP.w #$2,D2
0002F554 <AmiBlitz3.ab3@19324>    BEQ.w 'word
0002F558 <AmiBlitz3.ab3@19325>   CMP.w #$3,D2
0002F55C <AmiBlitz3.ab3@19326>    BEQ.w 'long
0002F560 <AmiBlitz3.ab3@19327>   CMP.w #$4,D2
0002F564 <AmiBlitz3.ab3@19328>    BEQ.w 'quick
0002F568 <AmiBlitz3.ab3@19329>   CMP.w #$5,D2
0002F56C <AmiBlitz3.ab3@19330>    BEQ.w 'float
0002F570 <AmiBlitz3.ab3@19331>  BRA.w mismatcherr
0002F574 <AmiBlitz3.ab3@19334>   BSR.w makeint                                          ;bugfix if a.b=$90 bug fix
0002F57A <AmiBlitz3.ab3@19335>   CMP.l #$7f,D0             ;127
0002F57E <AmiBlitz3.ab3@19336>    BGT.w 'over1
0002F584 <AmiBlitz3.ab3@19337>   CMP.l #$FFFFFF80,D0       ;-128
0002F588 <AmiBlitz3.ab3@19338>    BGE.w 'dobword
0002F58A <AmiBlitz3.ab3@19341>   MOVEQ.l #$02,D2                                          ;was 2 before
0002F590 <AmiBlitz3.ab3@19342>   CMP.l #$7fff,D0           ;32767
0002F594 <AmiBlitz3.ab3@19343>    BGT.w 'byte2
0002F59A <AmiBlitz3.ab3@19344>   CMP.l #$FFFF8000,D0       ;32768
0002F59E <AmiBlitz3.ab3@19345>    BGE.w 'dobword
0002F5A0 <AmiBlitz3.ab3@19348>   MOVEQ.l #$03,D2
0002F5A4 <AmiBlitz3.ab3@19349>  BRA.w 'dobword
0002F5A6 <AmiBlitz3.ab3@19376>   TST.w D6
0002F5AA <AmiBlitz3.ab3@19377>    BNE.w 'quick2
0002F5AE <AmiBlitz3.ab3@19378>    BSR.w makeint
0002F5B2 <AmiBlitz3.ab3@19379>  BRA.w 'over1
0002F5B6 <AmiBlitz3.ab3@19382>   BSR.w makeint
0002F5B8 <AmiBlitz3.ab3@19383>   TST.w D6
0002F5BC <AmiBlitz3.ab3@19384>   BEQ.w 'qint
0002F5C2 <AmiBlitz3.ab3@19387>   CMP.l #MaxWordSgnd,D0   ;32767
0002F5C6 <AmiBlitz3.ab3@19388>    BGT.w numdofloat
0002F5CC <AmiBlitz3.ab3@19389>   CMP.l #$FFFF8000,D0     ;-32768
0002F5D0 <AmiBlitz3.ab3@19390>    BLT.w numdofloat
0002F5D2 <AmiBlitz3.ab3@19392>   MOVE.w D0,-(A7)         ;save whole part
0002F5D6 <AmiBlitz3.ab3@19393>    JSR -$24(A6)           ;back to ffp
0002F5D8 <AmiBlitz3.ab3@19394>   MOVE.l D0,D1
0002F5DA <AmiBlitz3.ab3@19395>   MOVE.l D3,D0
0002F5DE <AmiBlitz3.ab3@19396>    JSR -$48(A6)           ;subtract - d0=fraction!
0002F5E4 <AmiBlitz3.ab3@19397>   MOVE.l #$80000051,D1    ;65536
0002F5E8 <AmiBlitz3.ab3@19398>    JSR -$4E(A6)           ;*65536
0002F5EC <AmiBlitz3.ab3@19399>    JSR -$1E(A6)           ;back to int
0002F5F0 <AmiBlitz3.ab3@19401>    BEQ.w 'knob            ;numdofloat
0002F5F6 <AmiBlitz3.ab3@19402>   CMP.l #$10000,D0        ;65536
0002F5FA <AmiBlitz3.ab3@19403>    BCC.w 'knob            ;numdofloat
0002F5FC <AmiBlitz3.ab3@19404>   MOVE.w D0,D1
0002F5FE <AmiBlitz3.ab3@19405>   MOVE.w (A7)+,D0
0002F600 <AmiBlitz3.ab3@19406>   SWAP D0
0002F602 <AmiBlitz3.ab3@19407>   MOVE.w D1,D0
0002F606 <AmiBlitz3.ab3@19408>  BRA.w 'dolong
0002F608 <AmiBlitz3.ab3@19411>   ADDQ.w #2,A7
0002F60C <AmiBlitz3.ab3@19412>  BRA.w numdofloat
0002F612 <AmiBlitz3.ab3@19415>   CMP.l #MaxWordSgnd,D0   ;#32767
0002F616 <AmiBlitz3.ab3@19416>    BGT.w 'byte2
0002F61C <AmiBlitz3.ab3@19417>   CMP.l #$FFFF8000,D0     ;#32768
0002F620 <AmiBlitz3.ab3@19418>    BLT.w 'byte2
0002F622 <AmiBlitz3.ab3@19419>   SWAP D0
0002F626 <AmiBlitz3.ab3@19420>  BRA.w 'dolong
0002F628 <AmiBlitz3.ab3@19423>   TST.w D6
0002F62C <AmiBlitz3.ab3@19424>   BNE.w numdofloat
0002F62E <AmiBlitz3.ab3@19425>   MOVE.l D3,D0
0002F632 <AmiBlitz3.ab3@19426>  BRA.w 'dolong
0002F634 <AmiBlitz3.ab3@19429>   TST.w D6
0002F638 <AmiBlitz3.ab3@19430>   BNE.w numdofloat
0002F63A <AmiBlitz3.ab3@19431>   MOVE.l D3,D0
0002F640 <AmiBlitz3.ab3@19432>   MOVEA.l _mathffpbase,A6
0002F644 <AmiBlitz3.ab3@19433>   JSR -$24(A6)           ;int to float
0002F646 <AmiBlitz3.ab3@19434>   MOVE.l D0,D3
0002F64A <AmiBlitz3.ab3@19435>  BRA.w numdofloat
0002F64C <AmiBlitz3.ab3@19439> RTS
0002F64E <AmiBlitz3.ab3@19443>   MOVEQ.l #$05,D2
0002F650 <AmiBlitz3.ab3@19444>   MOVE.l D3,D0
0002F652 <AmiBlitz3.ab3@19445> RTS
0002F656 <AmiBlitz3.ab3@19449>             Ds.l 1                                         ;??Looks like unused data??
0002F65A <AmiBlitz3.ab3@19450> pushpc:     Ds.l 1
0002F65E <AmiBlitz3.ab3@19451> pushoff:    Ds.l 1
0002F662 <AmiBlitz3.ab3@19452> pushdooff:  Ds.l 1
0002F664 <AmiBlitz3.ab3@19453> pushclen:   Ds.w 1
0002F668 <AmiBlitz3.ab3@19454> pushat:     Ds.l 1
0002F672 <AmiBlitz3.ab3@19460>   MOVE.l destpointer,pushpc
0002F67C <AmiBlitz3.ab3@19461>   MOVE.l hunkoffsetbase,pushoff
0002F67E <AmiBlitz3.ab3@19462>  RTS
0002F682 <AmiBlitz3.ab3@19468>   MOVEM.l D0-D1/A0-A1,-(A7)
0002F688 <AmiBlitz3.ab3@19470>   MOVE.l destpointer,D0
0002F68C <AmiBlitz3.ab3@19471>   MOVE.l pushpc(PC),D1
0002F692 <AmiBlitz3.ab3@19472>   MOVE.l D1,destpointer    ;New PC
0002F694 <AmiBlitz3.ab3@19473>   SUB.l D1,D0              ;len
0002F69A <AmiBlitz3.ab3@19474>   MOVE.w D0,pushclen
0002F69E <AmiBlitz3.ab3@19475>    BEQ.w 'skip
0002F6A4 <AmiBlitz3.ab3@19476>   MOVE.w dontwrite,D1
0002F6A8 <AmiBlitz3.ab3@19477>    BNE.w 'skip
0002F6B0 <AmiBlitz3.ab3@19480>    CMP.w #1000,pushclen
0002F6B4 <AmiBlitz3.ab3@19481>    BGE conmemerr
0002F6BA <AmiBlitz3.ab3@19482>    MOVE.l pushat,d0
0002F6BE <AmiBlitz3.ab3@19483>    BNE 'nomem
0002F6C4 <AmiBlitz3.ab3@19484>    MOVE.l #1024,d0
0002F6C6 <AmiBlitz3.ab3@19486>   MOVEQ.l #$01,D1
0002F6CC <AmiBlitz3.ab3@19487>   MOVEA.l _execbase,A6
0002F6D2 <AmiBlitz3.ab3@19489>   MOVE.l mempool,a0
0002F6D6 <AmiBlitz3.ab3@19490>   JSR _AllocPooled(a6)
0002F6DC <AmiBlitz3.ab3@19493>   MOVE.l D0,pushat
0002F6DE <AmiBlitz3.ab3@19498>   MOVEA.l D0,A0          ;destination
0002F6E4 <AmiBlitz3.ab3@19499>   MOVEA.l pushpc,A1      ;source
0002F6EA <AmiBlitz3.ab3@19500>   MOVE.l A1,destpointer
0002F6F0 <AmiBlitz3.ab3@19501>   MOVE.w pushclen,D0
0002F6F2 <AmiBlitz3.ab3@19502>   LSR.w #1,D0
0002F6F4 <AmiBlitz3.ab3@19503>   SUBQ.w #1,D0           ;to word dbf
0002F6F6 <AmiBlitz3.ab3@19506>     MOVE.w (A1)+,(A0)+
0002F6FA <AmiBlitz3.ab3@19507>   DBF D0,'loop
0002F704 <AmiBlitz3.ab3@19509>    MOVE.l hunkoffsetbase,pushdooff
0002F708 <AmiBlitz3.ab3@19512>   MOVEM.l (A7)+,D0-D1/A0-A1
0002F70A <AmiBlitz3.ab3@19513> RTS
0002F70E <AmiBlitz3.ab3@19519>   MOVEM.l D0-D1/A0-A1,-(A7)
0002F710 <AmiBlitz3.ab3@19520>   MOVEQ.l #$00,D0
0002F716 <AmiBlitz3.ab3@19521>   MOVE.w pushclen,D0
0002F71A <AmiBlitz3.ab3@19522>    BEQ.w 'skip
0002F720 <AmiBlitz3.ab3@19523>   MOVE.l destpointer,D1     ;pc before put
0002F726 <AmiBlitz3.ab3@19524>   ADD.l D0,destpointer
0002F72C <AmiBlitz3.ab3@19525>   TST.w dontwrite
0002F730 <AmiBlitz3.ab3@19526>    BNE.w 'skip
0002F732 <AmiBlitz3.ab3@19528>   LSR.w #1,D0
0002F734 <AmiBlitz3.ab3@19529>   SUBQ.w #1,D0
0002F736 <AmiBlitz3.ab3@19531>   MOVEA.l D1,A1
0002F73C <AmiBlitz3.ab3@19532>   MOVEA.l pushat,A0
0002F742 <AmiBlitz3.ab3@19535>     CMPA.l destbufferend,A1
0002F746 <AmiBlitz3.ab3@19536>     BCS.w 'ok
0002F74E <AmiBlitz3.ab3@19538>     MOVE.w #$FFFF,dontwrite    ; was -1
0002F752 <AmiBlitz3.ab3@19539>   BRA.w 'skip
0002F754 <AmiBlitz3.ab3@19542>      MOVE.w (A0)+,(A1)+                                    ;copylibcode
0002F758 <AmiBlitz3.ab3@19543>   DBF D0,'loop
0002F75E <AmiBlitz3.ab3@19548>   SUB.l pushpc,D1
0002F762 <AmiBlitz3.ab3@19549>   BEQ.w 'skip2
0002F768 <AmiBlitz3.ab3@19550>   MOVEA.l pushdooff,A0
0002F76E <AmiBlitz3.ab3@19553>   CMPA.l pushoff,A0
0002F772 <AmiBlitz3.ab3@19554>   BEQ.w 'done
0002F776 <AmiBlitz3.ab3@19555>   MOVEA.l $4(A0),A1          ;address in prog.
0002F77C <AmiBlitz3.ab3@19556>   ADDA.l destbufferstart,A1
0002F782 <AmiBlitz3.ab3@19557>   CMPA.l destbufferend,A1
0002F786 <AmiBlitz3.ab3@19558>   BCC.w 'next                ;leave offs >= lib
0002F78A <AmiBlitz3.ab3@19559>   ADD.l D1,$4(A0)
0002F78C <AmiBlitz3.ab3@19562>   MOVEA.l (A0),A0
0002F790 <AmiBlitz3.ab3@19563>  BRA.w 'loop2
0002F796 <AmiBlitz3.ab3@19567>   MOVEA.l pushat,A1
0002F798 <AmiBlitz3.ab3@19568>   MOVEQ.l #$00,D0
0002F79E <AmiBlitz3.ab3@19569>   MOVE.w pushclen,D0
0002F7A4 <AmiBlitz3.ab3@19570>   MOVEA.l _execbase,A6
0002F7AA <AmiBlitz3.ab3@19571>   MOVE.l mempool,a0
0002F7AE <AmiBlitz3.ab3@19575>   MOVEM.l (A7)+,D0-D1/A0-A1
0002F7B0 <AmiBlitz3.ab3@19576> RTS
0002F7B2 <AmiBlitz3.ab3@19582>   MOVE.l D1,-(A7)                                          ;array mul
0002F7B4 <AmiBlitz3.ab3@19583>   MOVEQ.l #$00,D2
0002F7B6 <AmiBlitz3.ab3@19584>   MOVEQ.l #$0F,D3
0002F7B8 <AmiBlitz3.ab3@19587>     LSL.w #1,D1
0002F7BC <AmiBlitz3.ab3@19588>     BCC.w 'shskip
0002F7BE <AmiBlitz3.ab3@19589>     ADDQ.w #1,D2
0002F7C0 <AmiBlitz3.ab3@19590>     MOVE.w D3,D4
0002F7C4 <AmiBlitz3.ab3@19593>   DBF D3,'shloop
0002F7C6 <AmiBlitz3.ab3@19595>   SUBQ.w #1,D2
0002F7CA <AmiBlitz3.ab3@19596>    BNE.w 'domul
0002F7CC <AmiBlitz3.ab3@19597>   ADDQ.w #4,A7           ; was 2
0002F7CE <AmiBlitz3.ab3@19598>   MOVE.w D4,D1
0002F7D2 <AmiBlitz3.ab3@19599>    BEQ.w 'done
0002F7D6 <AmiBlitz3.ab3@19600>   CMP.w #$8,D1
0002F7DA <AmiBlitz3.ab3@19601>    BCS.w 'once
0002F7DE <AmiBlitz3.ab3@19602>   SUBI.w #$8,D1
0002F7E2 <AmiBlitz3.ab3@19603>    BSR.w 'once
0002F7E4 <AmiBlitz3.ab3@19604>   MOVEQ.l #$00,D1
0002F7E6 <AmiBlitz3.ab3@19607>   LSL.w #8,D1
0002F7E8 <AmiBlitz3.ab3@19608>   LSL.w #1,D1
0002F7EC <AmiBlitz3.ab3@19609>   ORI.w #$E188,D1
0002F7F2 <AmiBlitz3.ab3@19610>   OR.w regnum,D1
0002F7F6 <AmiBlitz3.ab3@19611>  BRA.w writeword
0002F7F8 <AmiBlitz3.ab3@19614>  RTS
0002F7FA <AmiBlitz3.ab3@19618>   MOVEQ #0,d1
0002F800 <AmiBlitz3.ab3@19619>   MOVE.w regnum,D1
0002F802 <AmiBlitz3.ab3@19621>   LSL.l #8,D1
0002F804 <AmiBlitz3.ab3@19624>   LSL.l #4,d1
0002F80A <AmiBlitz3.ab3@19628>   OR.l #$4c3c0000,d1
0002F810 <AmiBlitz3.ab3@19629>   OR.w regnum,d1
0002F814 <AmiBlitz3.ab3@19630>   BSR.w writelong          ; was writeword
0002F816 <AmiBlitz3.ab3@19632>   MOVE.l (A7)+,D1
0002F81A <AmiBlitz3.ab3@19635> BRA writelong
0002F820 <AmiBlitz3.ab3@19642>   MOVE.l destpointer,-(A7)
0002F822 <AmiBlitz3.ab3@19643>   MOVEQ.l #-$01,D7
0002F826 <AmiBlitz3.ab3@19646>     BSR.w findhilib
0002F82A <AmiBlitz3.ab3@19647>      BEQ.w 'done
0002F82E <AmiBlitz3.ab3@19648>     TST.w $C(A2)
0002F832 <AmiBlitz3.ab3@19649>      BPL.w 'loop
0002F836 <AmiBlitz3.ab3@19650>     MOVE.l $16(A2),D1
0002F83A <AmiBlitz3.ab3@19651>     BEQ.w 'loop
0002F83E <AmiBlitz3.ab3@19653>     MOVE.w $4(A2),D1                                       ; check state in D1 and do some things
0002F842 <AmiBlitz3.ab3@19654>     CMP.w #-$2,D1          ; was #allocvars
0002F846 <AmiBlitz3.ab3@19655>      BNE.w 'notvar
0002F84A <AmiBlitz3.ab3@19656>     BSR.w makevsize
0002F84E <AmiBlitz3.ab3@19657>  BRA.w 'more
0002F852 <AmiBlitz3.ab3@19660>     CMP.w #-$5C4,D1       ; was #debuglib
0002F856 <AmiBlitz3.ab3@19661>      BNE.w 'notdebuglib
0002F85A <AmiBlitz3.ab3@19665>     MOVE.w #$7000,D1      ;moveq #0,d0
0002F862 <AmiBlitz3.ab3@19666>     BTST #$7,autorun
0002F864 <AmiBlitz3.ab3@19667>     SNE D1
0002F868 <AmiBlitz3.ab3@19668>     BSR.w writeword
0002F86C <AmiBlitz3.ab3@19669>  BRA.w 'more
0002F870 <AmiBlitz3.ab3@19672>     CMP.w #-$12D,D1       ; was 65235
0002F874 <AmiBlitz3.ab3@19673>      BNE.w 'notstring1
0002F878 <AmiBlitz3.ab3@19674>     BSR.w makessize
0002F87C <AmiBlitz3.ab3@19675>  BRA.w 'more
0002F880 <AmiBlitz3.ab3@19678>     CMP.w #-$1F5,D1       ; was 65035
0002F884 <AmiBlitz3.ab3@19679>      BNE.w 'notexit
0002F888 <AmiBlitz3.ab3@19681>     MOVE.w #$203C,D1
0002F88C <AmiBlitz3.ab3@19682>     BSR.w writeword
0002F890 <AmiBlitz3.ab3@19683>     BSR.w addoff
0002F896 <AmiBlitz3.ab3@19684>     MOVE.l endop,D1
0002F89A <AmiBlitz3.ab3@19685>     BSR.w writelong
0002F89E <AmiBlitz3.ab3@19686>  BRA.w 'more
0002F8A2 <AmiBlitz3.ab3@19689>     CMP.w #-$3E9,D1       ; was 64535
0002F8A6 <AmiBlitz3.ab3@19690>      BNE.w 'notdatalib
0002F8AA <AmiBlitz3.ab3@19691>     MOVE.w #$203C,D1
0002F8AE <AmiBlitz3.ab3@19692>     BSR.w writeword
0002F8B2 <AmiBlitz3.ab3@19693>     BSR.w addoff
0002F8B8 <AmiBlitz3.ab3@19694>     MOVE.l data2at,D1
0002F8BC <AmiBlitz3.ab3@19695>     BSR.w writelong
0002F8C0 <AmiBlitz3.ab3@19696>  BRA.w 'more
0002F8C4 <AmiBlitz3.ab3@19699>     CMP.w #$1,D1          ; was #dhandlerlib
0002F8C8 <AmiBlitz3.ab3@19700>      BNE.w 'notdhandler
0002F8CC <AmiBlitz3.ab3@19701>     MOVE.w #$203C,D1
0002F8D0 <AmiBlitz3.ab3@19702>     BSR.w writeword
0002F8D6 <AmiBlitz3.ab3@19703>     MOVE.l ptr_seg_debugger,D1
0002F8DA <AmiBlitz3.ab3@19704>     BSR.w writelong
0002F8DE <AmiBlitz3.ab3@19708>     MOVE.l $16(A2),D1
0002F8E6 <AmiBlitz3.ab3@19709>     MOVE.w #$FFFF,lasta6     ; was -1
0002F8EA <AmiBlitz3.ab3@19710>     BSR.w Amakelibsub
0002F8F0 <AmiBlitz3.ab3@19711>     CMPI.w #$FFFE,$4(A2)     ; was #allocvars
0002F8F4 <AmiBlitz3.ab3@19712>      BNE.w 'notvar2
0002F8FA <AmiBlitz3.ab3@19714>     MOVE.l intdata1,D1
0002F8FE <AmiBlitz3.ab3@19715>      BEQ.w 'notvar2
0002F904 <AmiBlitz3.ab3@19716>     MOVE.w putidata1,D1
0002F908 <AmiBlitz3.ab3@19717>     BSR.w writeword
0002F90C <AmiBlitz3.ab3@19718>     BSR.w addoff
0002F912 <AmiBlitz3.ab3@19719>     MOVE.l intdata1,D1
0002F916 <AmiBlitz3.ab3@19720>     BSR.w writelong
0002F91A <AmiBlitz3.ab3@19723>     MOVE.w #$2B40,D1
0002F91E <AmiBlitz3.ab3@19724>     TST.w $1A(A2)
0002F922 <AmiBlitz3.ab3@19725>      BEQ.w 'loop
0002F926 <AmiBlitz3.ab3@19726>      BPL.w 'long
0002F92A <AmiBlitz3.ab3@19727>     MOVE.w #$3B40,D1
0002F92E <AmiBlitz3.ab3@19730>     BSR.w writeword
0002F932 <AmiBlitz3.ab3@19731>     MOVE.w $A(A2),D1
0002F936 <AmiBlitz3.ab3@19732>      BSR.w writeword
0002F93C <AmiBlitz3.ab3@19733>     CMPI.w #$FFFA,$4(A2)   ; was #65530
0002F940 <AmiBlitz3.ab3@19734>      BNE.w 'loop
0002F942 <AmiBlitz3.ab3@19736>     MOVE.w D7,-(A7)
0002F948 <AmiBlitz3.ab3@19737>     MOVE.w numstatic,D4
0002F94C <AmiBlitz3.ab3@19738>      BEQ.w 'nostats
0002F952 <AmiBlitz3.ab3@19739>     MOVE.l staticdata,D3
0002F958 <AmiBlitz3.ab3@19740>      JSR datastart
0002F95C <AmiBlitz3.ab3@19741>     MOVE.w #$C500,D1       ; was #alstat
0002F960 <AmiBlitz3.ab3@19742>      BSR.w tokejsr2
0002F966 <AmiBlitz3.ab3@19745>     MOVE.w maxsused,D4
0002F96A <AmiBlitz3.ab3@19746>      BEQ.w 'nomaxs
0002F970 <AmiBlitz3.ab3@19747>     MOVE.l maxsat,D3
0002F976 <AmiBlitz3.ab3@19748>      JSR datastart
0002F97A <AmiBlitz3.ab3@19749>     MOVE.w #$CF00,D1      ; was #setmaxs
0002F97E <AmiBlitz3.ab3@19750>      BSR.w tokejsr2
0002F980 <AmiBlitz3.ab3@19753>     MOVE.w (A7)+,D7
0002F984 <AmiBlitz3.ab3@19755>  BRA.w 'loop
0002F98A <AmiBlitz3.ab3@19761>   MOVE.l destpointer,D1
0002F98C <AmiBlitz3.ab3@19762>   CMP.l (A7),D1
0002F990 <AmiBlitz3.ab3@19763>    BNE.w 'yi
0002F998 <AmiBlitz3.ab3@19764>   MOVE.w #$0008,noinits+2
0002F99C <AmiBlitz3.ab3@19765>  BRA.w 'yi3
0002F9A2 <AmiBlitz3.ab3@19768>   CLR.w noinits+2
0002F9A8 <AmiBlitz3.ab3@19769>   MOVE.w dontwrite,D1
0002F9AC <AmiBlitz3.ab3@19770>    BNE.w 'yi2
0002F9B2 <AmiBlitz3.ab3@19772>   TST.l newinitaddr
0002F9B6 <AmiBlitz3.ab3@19773>    BEQ 'l10
0002F9BC <AmiBlitz3.ab3@19774>   MOVE.l newinitaddr,D2
0002F9C2 <AmiBlitz3.ab3@19775>   SUB.l destbufferstart,D2
0002F9C4 <AmiBlitz3.ab3@19776>   ADDQ.l #2,d2
0002F9CA <AmiBlitz3.ab3@19778>   MOVEA.l newinitaddr,A0                                   ;write newinitcode
0002F9CE <AmiBlitz3.ab3@19782>   MOVE.w #$4EB9,(A0)+
0002F9D0 <AmiBlitz3.ab3@19783>   MOVE.l (A7),(A0)+
0002F9D4 <AmiBlitz3.ab3@19786>  BRA 'l20
0002F9DA <AmiBlitz3.ab3@19789>   MOVEA.l destbufferstart,A0                               ;write initcode
0002F9E0 <AmiBlitz3.ab3@19790>   TST.b saved0
0002F9E4 <AmiBlitz3.ab3@19791>   BEQ 'l1
0002F9E8 <AmiBlitz3.ab3@19792>   MOVE.w #$23c0,(a0)+
0002F9EA <AmiBlitz3.ab3@19793>   MOVE.l a0,a1
0002F9EC <AmiBlitz3.ab3@19794>   ADDQ.l #6,a1
0002F9EE <AmiBlitz3.ab3@19795>   MOVE.l a1,(a0)+
0002F9F0 <AmiBlitz3.ab3@19797>   MOVEQ.l #$02,D2
0002F9F4 <AmiBlitz3.ab3@19798>   BSR.w addhunkoffset
0002F9F8 <AmiBlitz3.ab3@19800>   MOVE.w #$6004,(a0)+
0002F9FE <AmiBlitz3.ab3@19801>   MOVE.l #$4e714e71,(a0)+
0002FA02 <AmiBlitz3.ab3@19804>   MOVE.w #$4EB9,(A0)+
0002FA04 <AmiBlitz3.ab3@19805>   MOVE.l (A7),(A0)+
0002FA06 <AmiBlitz3.ab3@19806>   MOVEQ #2,d2
0002FA0C <AmiBlitz3.ab3@19807>   TST.b saved0
0002FA10 <AmiBlitz3.ab3@19808>   BEQ 'l20
0002FA12 <AmiBlitz3.ab3@19809>   MOVEQ.l #14,D2
0002FA16 <AmiBlitz3.ab3@19812>   BSR.w addhunkoffset
0002FA1A <AmiBlitz3.ab3@19813>   MOVE.w #$2039,(a0)+
0002FA1C <AmiBlitz3.ab3@19814>   MOVE.l a1,(a0)+
0002FA1E <AmiBlitz3.ab3@19815>   MOVEQ.l #20,d2
0002FA22 <AmiBlitz3.ab3@19818>   BSR.w addhunkoffset
0002FA26 <AmiBlitz3.ab3@19822>   MOVE.w #$4E75,D1
0002FA2A <AmiBlitz3.ab3@19823>   BSR.w writeword
0002FA2C <AmiBlitz3.ab3@19826>   ADDQ.w #4,A7
0002FA2E <AmiBlitz3.ab3@19827> RTS
0002FA32 <AmiBlitz3.ab3@19832>   Dc.b $22,$2D,$00,$00                                     ;MOVE.L  $0000(A5),D1
0002FA38 <AmiBlitz3.ab3@19834>   Dc.b $23,$CD,$00,$00,$00,$00                             ;MOVE.L  A5,$00000000
0002FA3E <AmiBlitz3.ab3@19836>   Dc.b $24,$7C,$00,$00,$00,$00                             ;MOVEA.L #$00000000,A2
0002FA44 <AmiBlitz3.ab3@19841>   MOVE.l stringbuffer,D1
0002FA48 <AmiBlitz3.ab3@19842> BRA.w makesize
0002FA4A <AmiBlitz3.ab3@19847>   MOVEQ.l #$00,D1
0002FA50 <AmiBlitz3.ab3@19848>   MOVE.w globalvarpointer,D1
0002FA54 <AmiBlitz3.ab3@19849>   SUBI.w #$8000,D1
0002FA58 <AmiBlitz3.ab3@19850>   BNE.w makesize
0002FA5A <AmiBlitz3.ab3@19851>     MOVEQ.l #$08,D1
0002FA5C <AmiBlitz3.ab3@19856>   MOVE.l D1,-(A7)
0002FA60 <AmiBlitz3.ab3@19857>   MOVE.w #$203C,D1
0002FA64 <AmiBlitz3.ab3@19858>   BSR.w writeword
0002FA66 <AmiBlitz3.ab3@19859>   MOVE.l (A7)+,D1
0002FA6A <AmiBlitz3.ab3@19860> BRA.w writelong
0002FA6C <AmiBlitz3.ab3@19868>   MOVEQ.l #$00,D1
0002FA72 <AmiBlitz3.ab3@19869>   MOVEA.l libpointer,A1
0002FA76 <AmiBlitz3.ab3@19872>     CMPA.w #$0,A1
0002FA7A <AmiBlitz3.ab3@19873>     BEQ.w 'done
0002FA7E <AmiBlitz3.ab3@19874>       CMP.w $4(A1),D7
0002FA82 <AmiBlitz3.ab3@19875>       BLS.w 'next
0002FA86 <AmiBlitz3.ab3@19876>         CMP.w $4(A1),D1
0002FA8A <AmiBlitz3.ab3@19877>         BCC.w 'next
0002FA8E <AmiBlitz3.ab3@19878>           MOVE.w $4(A1),D1
0002FA90 <AmiBlitz3.ab3@19879>           MOVEA.l A1,A2
0002FA92 <AmiBlitz3.ab3@19882>     MOVEA.l (A1),A1
0002FA96 <AmiBlitz3.ab3@19883>  BRA.w 'loop
0002FA98 <AmiBlitz3.ab3@19886>   MOVE.w D1,D7
0002FA9A <AmiBlitz3.ab3@19887> RTS
0002FA9C <AmiBlitz3.ab3@19895>   MOVEQ.l #-$01,D1
0002FAA2 <AmiBlitz3.ab3@19896>   MOVEA.l libpointer,A1
0002FAA6 <AmiBlitz3.ab3@19899>     CMPA.w #$0,A1
0002FAAA <AmiBlitz3.ab3@19900>      BEQ.w 'done
0002FAAE <AmiBlitz3.ab3@19901>     CMP.w $4(A1),D7
0002FAB2 <AmiBlitz3.ab3@19902>      BCC.w 'next
0002FAB6 <AmiBlitz3.ab3@19903>     CMP.w $4(A1),D1
0002FABA <AmiBlitz3.ab3@19904>      BLS.w 'next
0002FABE <AmiBlitz3.ab3@19905>     MOVE.w $4(A1),D1
0002FAC0 <AmiBlitz3.ab3@19906>     MOVEA.l A1,A2
0002FAC2 <AmiBlitz3.ab3@19909>     MOVEA.l (A1),A1
0002FAC6 <AmiBlitz3.ab3@19910> BRA.w 'loop
0002FAC8 <AmiBlitz3.ab3@19913>   MOVE.w D1,D7
0002FACC <AmiBlitz3.ab3@19914>   CMP.w #-$1,D1
0002FACE <AmiBlitz3.ab3@19915> RTS
0002FAD4 <AmiBlitz3.ab3@19923>   ADDQ.w #1,globalvarpointer
0002FADC <AmiBlitz3.ab3@19924>   BCLR #$0,globalvarpointer+1
0002FADE <AmiBlitz3.ab3@19925>   MOVEQ.l #$00,D7
0002FAE2 <AmiBlitz3.ab3@19928>     BSR.w findlolib
0002FAE6 <AmiBlitz3.ab3@19929>     BEQ.w 'azdone
0002FAEA <AmiBlitz3.ab3@19930>     TST.w $C(A2)
0002FAEE <AmiBlitz3.ab3@19931>     BPL.w 'loop
0002FAF0 <AmiBlitz3.ab3@19934>     MOVEA.l A2,A1
0002FAF4 <AmiBlitz3.ab3@19935>     ADDA.l $12(A1),A1
0002FAF8 <AmiBlitz3.ab3@19936>     TST.w -$2(A1)
0002FAFC <AmiBlitz3.ab3@19937>     BEQ.w 'nomax
0002FB00 <AmiBlitz3.ab3@19941>     MOVE.l -$A(A1),D1
0002FB04 <AmiBlitz3.ab3@19942>     LEA $6(A2,D1.L),A3
0002FB06 <AmiBlitz3.ab3@19945>       TST.w (A3)+
0002FB0A <AmiBlitz3.ab3@19946>       BEQ.w 'plopf
0002FB0C <AmiBlitz3.ab3@19947>         ADDQ.w #2,A3
0002FB10 <AmiBlitz3.ab3@19948>  BRA.w 'plop
0002FB14 <AmiBlitz3.ab3@19951>     TST.l $4(A3)
0002FB18 <AmiBlitz3.ab3@19952>     BEQ.w 'nomax
0002FB1C <AmiBlitz3.ab3@19956>       MOVE.w freemax(PC),D1    ;move.w #x,-(a7)
0002FB20 <AmiBlitz3.ab3@19957>       BSR.w writeword
0002FB24 <AmiBlitz3.ab3@19958>       MOVE.w -$4(A1),D1
0002FB28 <AmiBlitz3.ab3@19959>       BSR.w writeword          ;x (max)
0002FB2E <AmiBlitz3.ab3@19960>       MOVE.l free,D1
0002FB32 <AmiBlitz3.ab3@19961>       MOVE.w -$6(A1),D1
0002FB36 <AmiBlitz3.ab3@19962>       BSR.w writelong          ;move.l x(a5),a3
0002FB3C <AmiBlitz3.ab3@19964>       MOVE.l destpointer,-(A7)
0002FB3E <AmiBlitz3.ab3@19965>       MOVEQ.l #$01,D1
0002FB42 <AmiBlitz3.ab3@19966>       MOVE.w -$2(A1),D2
0002FB44 <AmiBlitz3.ab3@19967>       LSL.w D2,D1
0002FB46 <AmiBlitz3.ab3@19968>       MOVE.w D1,-(A7)
0002FB4A <AmiBlitz3.ab3@19969>       MOVE.l -$A(A1),D1
0002FB4E <AmiBlitz3.ab3@19970>       BSR.w Amakelibsub
0002FB52 <AmiBlitz3.ab3@19971>       MOVE.w freemax3(PC),D1
0002FB56 <AmiBlitz3.ab3@19972>       BSR.w writeword          ;lea x(a3),a3
0002FB58 <AmiBlitz3.ab3@19973>       MOVE.w (A7)+,D1
0002FB5C <AmiBlitz3.ab3@19974>       BSR.w writeword
0002FB60 <AmiBlitz3.ab3@19975>       MOVE.l freemax2(PC),D1
0002FB64 <AmiBlitz3.ab3@19976>       BSR.w writelong
0002FB66 <AmiBlitz3.ab3@19977>       MOVE.l (A7)+,D1
0002FB6C <AmiBlitz3.ab3@19978>       SUB.l destpointer,D1
0002FB70 <AmiBlitz3.ab3@19979>       BSR.w writeword
0002FB74 <AmiBlitz3.ab3@19980>       MOVE.w freemax4(PC),D1
0002FB78 <AmiBlitz3.ab3@19981>       BSR.w writeword
0002FB7C <AmiBlitz3.ab3@19984>     MOVE.l $1C(A2),D1
0002FB80 <AmiBlitz3.ab3@19985>     BEQ.w 'loop
0002FB84 <AmiBlitz3.ab3@19989>     MOVE.w $4(A2),D1
0002FB88 <AmiBlitz3.ab3@19990>     CMP.w #-$2,D1              ; was #allocvars
0002FB8C <AmiBlitz3.ab3@19991>     BNE.w 'notvfin
0002FB90 <AmiBlitz3.ab3@19992>       BSR.w makevsize
0002FB94 <AmiBlitz3.ab3@19993>  BRA.w 'more
0002FB98 <AmiBlitz3.ab3@19996>     CMP.w #-$12D,D1            ; was #65235
0002FB9C <AmiBlitz3.ab3@19997>     BNE.w 'more
0002FBA0 <AmiBlitz3.ab3@19998>       BSR.w makessize
0002FBA4 <AmiBlitz3.ab3@19999>  BRA.w 'more
0002FBA8 <AmiBlitz3.ab3@20003>     MOVE.l $1C(A2),D1
0002FBB0 <AmiBlitz3.ab3@20004>     MOVE.w #$FFFF,lasta6       ; was -1
0002FBB4 <AmiBlitz3.ab3@20005>     BSR.w Amakelibsub
0002FBB8 <AmiBlitz3.ab3@20006>  BRA.w 'loop
0002FBBA <AmiBlitz3.ab3@20009> RTS
0002FBBE <AmiBlitz3.ab3@20013> freemax:   Dc.b $3F,$3C,$00,$00                            ;MOVE.W  #$0000,-(A7)
0002FBC0 <AmiBlitz3.ab3@20015> freemax2:  Dc.b $53,$57                                    ;SUBQ.W  #1,(A7)
0002FBC4 <AmiBlitz3.ab3@20016>            Dc.b $66,$00,$FF,$FC                            ;BNE.W freemax2
0002FBC6 <AmiBlitz3.ab3@20017> freemax4:  Dc.b $54,$4F                                    ;ADDQ.W  #2,A7
0002FBCA <AmiBlitz3.ab3@20018> freemax3:  Dc.b $47,$EB,$00,$00                            ;LEA $0000(A3),A3
0002FBD0 <AmiBlitz3.ab3@20023>   TST.b debugmode
0002FBD4 <AmiBlitz3.ab3@20024>    BEQ.b 'skip
0002FBDA <AmiBlitz3.ab3@20025>   TST.w debugversion
0002FBDE <AmiBlitz3.ab3@20026>    BNE.b 'skip
0002FBE2 <AmiBlitz3.ab3@20027>   MOVE.w #$C308,D1
0002FBE6 <AmiBlitz3.ab3@20028>  BRA.w Atokejsr
0002FBE8 <AmiBlitz3.ab3@20031> RTS
0002FBF0 <AmiBlitz3.ab3@20035>   MOVE.w #$FFFF,lasta6
0002FBF4 <AmiBlitz3.ab3@20040>   MOVEM.l D0-d7/A0-a6,-(A7)
0002FBFC <AmiBlitz3.ab3@20041>   MOVE.b #1,nostringopt
0002FC02 <AmiBlitz3.ab3@20042>   JSR searchinstr
0002FC04 <AmiBlitz3.ab3@20043>   MOVE.l A3,D1
0002FC06 <AmiBlitz3.ab3@20044>   SUB.l A2,D1
0002FC0A <AmiBlitz3.ab3@20045>   BSR.w Amakelibsub
0002FC0E <AmiBlitz3.ab3@20046>   MOVEM.l (A7)+,d0-d7/a0-a6
0002FC10 <AmiBlitz3.ab3@20047> RTS
0002FC16 <AmiBlitz3.ab3@20054>   MOVE.l libisat,-(A7)                                   ;library write
0002FC1C <AmiBlitz3.ab3@20055>   MOVE.l A2,libisat
0002FC1E <AmiBlitz3.ab3@20057>   MOVEA.l A1,A2
0002FC20 <AmiBlitz3.ab3@20058>   MOVE.w (A2)+,D1
0002FC26 <AmiBlitz3.ab3@20059>   MOVE.l a2,lastinstructionaddr
0002FC2A <AmiBlitz3.ab3@20060>   ANDI.w #$FF,D1
0002FC2C <AmiBlitz3.ab3@20061>   ADDA.w D1,A2
0002FC2E <AmiBlitz3.ab3@20062>   EXG.l D0,A2
0002FC30 <AmiBlitz3.ab3@20063>   ADDQ.l #1,D0
0002FC34 <AmiBlitz3.ab3@20064>   BCLR #$0,D0
0002FC36 <AmiBlitz3.ab3@20065>   EXG.l D0,A2
0002FC3A <AmiBlitz3.ab3@20066> BRA.w makelsub2
0002FC40 <AmiBlitz3.ab3@20070>   MOVE.l libisat,-(A7)
0002FC46 <AmiBlitz3.ab3@20071>   MOVE.l A2,libisat
0002FC48 <AmiBlitz3.ab3@20072>   MOVEA.l A3,A2
0002FC4C <AmiBlitz3.ab3@20073> BRA.w makelsub2
0002FC4E <AmiBlitz3.ab3@20077>   MOVE.l a1,-(a7)
0002FC50 <AmiBlitz3.ab3@20080>   MOVE.l d0,a0
0002FC54 <AmiBlitz3.ab3@20081>   MOVE.l $a(a0),d0
0002FC56 <AmiBlitz3.ab3@20082>   MOVE.l d0,a1
0002FC5E <AmiBlitz3.ab3@20083>   CMP.l #8,4(a1)
0002FC62 <AmiBlitz3.ab3@20084>   BLE 'norec
0002FC64 <AmiBlitz3.ab3@20085>   MOVE.l a0,-(a7)
0002FC6A <AmiBlitz3.ab3@20086>   MOVE.l typebase,-(a7)
0002FC6C <AmiBlitz3.ab3@20087>   MOVEQ #0,d0
0002FC70 <AmiBlitz3.ab3@20088>   MOVE.w 4(a0),d0
0002FC76 <AmiBlitz3.ab3@20089>   ADD.l d0,typebase
0002FC7A <AmiBlitz3.ab3@20090>   MOVE.l $4(a1),d0
0002FC7E <AmiBlitz3.ab3@20091>   BSR scantype
0002FC84 <AmiBlitz3.ab3@20092>   MOVE.l (a7)+,typebase
0002FC86 <AmiBlitz3.ab3@20093>   MOVE.l (a7)+,a0
0002FC8C <AmiBlitz3.ab3@20096>   CMP.l #newtype_string,d0
0002FC90 <AmiBlitz3.ab3@20097>   BNE 'nostring
0002FC96 <AmiBlitz3.ab3@20098>   ADDQ #2,a2offset
0002FC9C <AmiBlitz3.ab3@20099>   MOVE.l #$3f3c0000,d1
0002FC9E <AmiBlitz3.ab3@20100>   MOVEQ #0,d0
0002FCA2 <AmiBlitz3.ab3@20101>   MOVE.w 4(a0),d0
0002FCA8 <AmiBlitz3.ab3@20102>   ADD.l typebase,d0
0002FCAA <AmiBlitz3.ab3@20103>   MOVE.w d0,d1
0002FCAE <AmiBlitz3.ab3@20104>   BSR writelong
0002FCB4 <AmiBlitz3.ab3@20105>   TST.b debugmode
0002FCB8 <AmiBlitz3.ab3@20106>   BEQ 'l1a
0002FCBA <AmiBlitz3.ab3@20107>   MOVE.l d1,-(a7)
0002FCC0 <AmiBlitz3.ab3@20108>   MOVE.l #$c308,d1
0002FCC6 <AmiBlitz3.ab3@20109>   JSR Atokejsr
0002FCC8 <AmiBlitz3.ab3@20110>   MOVE.l (a7)+,d1
0002FCCC <AmiBlitz3.ab3@20113>   TST.w 8(a0)
0002FCD0 <AmiBlitz3.ab3@20114>   BEQ 'nostring
0002FCD4 <AmiBlitz3.ab3@20115>   MOVEM.l d2/d3,-(a7)
0002FCD6 <AmiBlitz3.ab3@20116>   MOVE.l d1,d2
0002FCD8 <AmiBlitz3.ab3@20117>   MOVEQ #0,d3
0002FCDC <AmiBlitz3.ab3@20118>   MOVE.w 8(a0),d3
0002FCDE <AmiBlitz3.ab3@20119>   SUBQ.l #1,d3
0002FCE2 <AmiBlitz3.ab3@20120>   BEQ 'nostring2
0002FCE4 <AmiBlitz3.ab3@20123>   ADDQ.l #4,d2
0002FCE6 <AmiBlitz3.ab3@20124>   MOVE.l d2,d1
0002FCEA <AmiBlitz3.ab3@20125>   BSR writelong
0002FCF0 <AmiBlitz3.ab3@20126>   TST.b debugmode
0002FCF4 <AmiBlitz3.ab3@20127>   BEQ 'l1
0002FCFA <AmiBlitz3.ab3@20128>   MOVE.l #$c308,d1
0002FD00 <AmiBlitz3.ab3@20129>   JSR Atokejsr
0002FD06 <AmiBlitz3.ab3@20132>   ADDQ #2,a2offset
0002FD08 <AmiBlitz3.ab3@20133>   SUBQ.l #1,d3
0002FD0C <AmiBlitz3.ab3@20134>   BNE 'loop
0002FD10 <AmiBlitz3.ab3@20137>   MOVEM.l (a7)+,d2/d3
0002FD12 <AmiBlitz3.ab3@20140>   MOVE.l (a0),d0
0002FD16 <AmiBlitz3.ab3@20141>   BNE 'more
0002FD18 <AmiBlitz3.ab3@20142>   MOVE.l (a7)+,a1
0002FD1A <AmiBlitz3.ab3@20143> RTS
0002FD1E <AmiBlitz3.ab3@20146> libisat:   Ds.l 1
0002FD24 <AmiBlitz3.ab3@20152>   MOVE.l libisat,-(A7)                                   
0002FD2A <AmiBlitz3.ab3@20153>   MOVE.l A2,libisat
0002FD2E <AmiBlitz3.ab3@20154>   LEA $6(A2,D1.L),A2
0002FD36 <AmiBlitz3.ab3@20159>   CMP.l #$3e19436c,$1c-8(a2)                               ;clear type
0002FD3A <AmiBlitz3.ab3@20160>   BEQ 'dowritevar
0002FD42 <AmiBlitz3.ab3@20161>   CMP.l #$3e18436f,$1c-8(a2)                               ;copy type
0002FD46 <AmiBlitz3.ab3@20162>   BEQ 'dowritevar
0002FD4E <AmiBlitz3.ab3@20163>   CMP.l #$3e175265,$1c(a2)
0002FD52 <AmiBlitz3.ab3@20164>   BEQ 'dowritevar
0002FD5A <AmiBlitz3.ab3@20165>   CMP.l #$3e165772,$1c(a2)
0002FD5E <AmiBlitz3.ab3@20166>   BNE 'nowritef
0002FD62 <AmiBlitz3.ab3@20169>   MOVEM.l a0-a2/d2,-(a7)
0002FD64 <AmiBlitz3.ab3@20170>   MOVEQ #0,d1
0002FD6E <AmiBlitz3.ab3@20171>   MOVE.l #0,typebase
0002FD72 <AmiBlitz3.ab3@20172>   MOVE.l $a(a3),a0
0002FD76 <AmiBlitz3.ab3@20173>   MOVE.l $4(a0),d0
0002FD7C <AmiBlitz3.ab3@20174>   CMP.l #8,d0
0002FD80 <AmiBlitz3.ab3@20175>   BLE 'notype
0002FD84 <AmiBlitz3.ab3@20176>   BSR scantype
0002FD8A <AmiBlitz3.ab3@20179>   MOVE.l #$3f3c0000,d1
0002FD90 <AmiBlitz3.ab3@20180>   MOVE.w a2offset,d1
0002FD94 <AmiBlitz3.ab3@20181>   BSR writelong
0002FD9A <AmiBlitz3.ab3@20182>   MOVE.l #$3f3c0000,d1
0002FD9E <AmiBlitz3.ab3@20183>   MOVE.l $a(a3),a0
0002FDA2 <AmiBlitz3.ab3@20184>   MOVE.w 8(a0),d1
0002FDA6 <AmiBlitz3.ab3@20185>   BSR writelong
0002FDAC <AmiBlitz3.ab3@20186>   MOVE.l #$3f3cab12,d1
0002FDB0 <AmiBlitz3.ab3@20187>   BSR writelong
0002FDB6 <AmiBlitz3.ab3@20188>   ADDQ.w #6,a2offset
0002FDBA <AmiBlitz3.ab3@20189>   MOVEM.l (a7)+,a0-a2/d2
0002FDC0 <AmiBlitz3.ab3@20192>   TST.b fpu
0002FDC4 <AmiBlitz3.ab3@20193>   BEQ 'nofpu2
0002FDCC <AmiBlitz3.ab3@20194>   CMP.l #$496e7400,$1a(a2)
0002FDD0 <AmiBlitz3.ab3@20195>   BNE 'noint
0002FDD2 <AmiBlitz3.ab3@20196>   MOVEQ #0,d1
0002FDD8 <AmiBlitz3.ab3@20197>   SUBQ.l #8,destpointer                                    ;fpu int
0002FDDE <AmiBlitz3.ab3@20198>   CLR.w a2offset
0002FDE2 <AmiBlitz3.ab3@20199>   CMP.b #2,d2
0002FDE6 <AmiBlitz3.ab3@20200>   BGT 'noword
0002FDEA <AmiBlitz3.ab3@20201>   MOVE.w #$48c0,d1
0002FDF0 <AmiBlitz3.ab3@20202>   OR.w regnumstore,d1
0002FDF4 <AmiBlitz3.ab3@20203>   BSR writeword
0002FDF8 <AmiBlitz3.ab3@20204>  BRA 'exit2
0002FDFC <AmiBlitz3.ab3@20207>    CMP.b #3,d2
0002FE00 <AmiBlitz3.ab3@20208>         BNE 'nolong
0002FE04 <AmiBlitz3.ab3@20209>  BRA 'exit2
0002FE08 <AmiBlitz3.ab3@20212>    CMP.b #4,d2
0002FE0C <AmiBlitz3.ab3@20213>         BNE 'noquick
0002FE10 <AmiBlitz3.ab3@20214>         MOVE.w #$e080,d1
0002FE16 <AmiBlitz3.ab3@20215>         OR.w regnumstore,d1
0002FE1A <AmiBlitz3.ab3@20216>         BSR writeword
0002FE1E <AmiBlitz3.ab3@20217>         MOVE.w #$e080,d1
0002FE24 <AmiBlitz3.ab3@20218>         OR.w regnumstore,d1
0002FE28 <AmiBlitz3.ab3@20219>         BSR writeword
0002FE2C <AmiBlitz3.ab3@20220>  BRA 'exit2
0002FE2E <AmiBlitz3.ab3@20223>         MOVEQ #0,d0
0002FE30 <AmiBlitz3.ab3@20224>         MOVEQ #0,d1
0002FE36 <AmiBlitz3.ab3@20225>         MOVE.w regnumstore,d0
0002FE38 <AmiBlitz3.ab3@20226>         ASL.l #7,d0
0002FE3E <AmiBlitz3.ab3@20227>         OR.l #$f23c4428,d1                                 ;fsub.s 0.5,fpx
0002FE40 <AmiBlitz3.ab3@20228>         OR.l d0,d1
0002FE46 <AmiBlitz3.ab3@20230>         MOVE.l #$3f000000,d1
0002FE48 <AmiBlitz3.ab3@20232>         MOVEQ #0,d0
0002FE4A <AmiBlitz3.ab3@20233>         MOVEQ #0,d1
0002FE50 <AmiBlitz3.ab3@20234>         MOVE.w regnumstore,d0
0002FE52 <AmiBlitz3.ab3@20235>         ASL.l #7,d0
0002FE54 <AmiBlitz3.ab3@20236>         MOVE.l d0,d1
0002FE5A <AmiBlitz3.ab3@20237>         OR.l #$f2000003,d1                                 ;fintrz fpx
0002FE5C <AmiBlitz3.ab3@20238>         ASL.l #3,d0
0002FE5E <AmiBlitz3.ab3@20239>         OR.l d0,d1
0002FE62 <AmiBlitz3.ab3@20240>         BSR writelong
0002FE64 <AmiBlitz3.ab3@20241>         MOVEQ #0,d0
0002FE6A <AmiBlitz3.ab3@20242>         MOVE.w regnumstore,d0
0002FE6C <AmiBlitz3.ab3@20243>         ASL.l #7,d0
0002FE72 <AmiBlitz3.ab3@20244>         MOVE.l #$f2006000,d1                               ;fmove.l fp0,d0
0002FE74 <AmiBlitz3.ab3@20245>         OR.l d0,d1
0002FE76 <AmiBlitz3.ab3@20246>         ASL.l #1,d0
0002FE78 <AmiBlitz3.ab3@20247>         ASL.l #8,d0
0002FE7A <AmiBlitz3.ab3@20248>         OR.l d0,d1
0002FE7E <AmiBlitz3.ab3@20249>  BRA 'exit
0002FE84 <AmiBlitz3.ab3@20252>   CMP.w #$3c01,24(a2)
0002FE88 <AmiBlitz3.ab3@20253>   BNE 'noval
0002FE8A <AmiBlitz3.ab3@20254>   MOVE.l a2,-(a7)
0002FE8E <AmiBlitz3.ab3@20255>   BSR.w makelsub3
0002FE90 <AmiBlitz3.ab3@20256>   MOVE.l (a7)+,a2
0002FE94 <AmiBlitz3.ab3@20257>  BRA 'exit2
0002FE9C <AmiBlitz3.ab3@20274>   CMP.l #$41627300,$1a(a2)
0002FEA0 <AmiBlitz3.ab3@20275>   BNE 'noabs
0002FEA2 <AmiBlitz3.ab3@20276>   MOVEQ #0,d1
0002FEA8 <AmiBlitz3.ab3@20277>   MOVE.w regnumstore,d1
0002FEAA <AmiBlitz3.ab3@20278>   MOVE.w d1,d0
0002FEAC <AmiBlitz3.ab3@20279>   ASL.w #7,d1
0002FEAE <AmiBlitz3.ab3@20280>   ASL.w #8,d0
0002FEB0 <AmiBlitz3.ab3@20281>   ASL.w #2,d0
0002FEB2 <AmiBlitz3.ab3@20282>   OR.w d0,d1
0002FEB8 <AmiBlitz3.ab3@20283>   SUBQ.l #8,destpointer                                    ;fpu abs
0002FEBC <AmiBlitz3.ab3@20284>   MOVEM.l d3/d1,-(a7)
0002FEC0 <AmiBlitz3.ab3@20285>   MOVE.w #5,d3
0002FEC2 <AmiBlitz3.ab3@20286>   EXG d2,d3
0002FEC8 <AmiBlitz3.ab3@20287>   MOVE.w regnum,-(a7)
0002FED2 <AmiBlitz3.ab3@20288>   MOVE.w regnumstore,regnum
0002FED6 <AmiBlitz3.ab3@20289>   BSR writeconvertcode
0002FEDC <AmiBlitz3.ab3@20290>   MOVE.w (a7)+,regnum
0002FEDE <AmiBlitz3.ab3@20291>   EXG d2,d3
0002FEE2 <AmiBlitz3.ab3@20292>   MOVEM.l (a7)+,d3/d1
0002FEE8 <AmiBlitz3.ab3@20293>   OR.l #$f2000018,d1
0002FEEE <AmiBlitz3.ab3@20294>   CLR.w a2offset
0002FEF2 <AmiBlitz3.ab3@20295>  BRA 'exit
0002FEF6 <AmiBlitz3.ab3@20298>   CMP.b #5,d2
0002FEFA <AmiBlitz3.ab3@20299>   BNE 'nofpu2
0002FEFE <AmiBlitz3.ab3@20300>   MOVE.b 24(a2),d0
0002FF02 <AmiBlitz3.ab3@20301>   CMP.b #$60,d0                                            ;nolib $edxx
0002FF06 <AmiBlitz3.ab3@20302>   BNE 'nofpu
0002FF08 <AmiBlitz3.ab3@20303>   MOVEQ #0,d1
0002FF0E <AmiBlitz3.ab3@20304>   MOVE.w regnumstore,d1
0002FF10 <AmiBlitz3.ab3@20305>   MOVE.w d1,d0
0002FF12 <AmiBlitz3.ab3@20306>   ASL.w #7,d1
0002FF14 <AmiBlitz3.ab3@20307>   ASL.w #8,d0
0002FF16 <AmiBlitz3.ab3@20308>   ASL.w #2,d0
0002FF18 <AmiBlitz3.ab3@20309>   OR.w d0,d1
0002FF1C <AmiBlitz3.ab3@20310>   MOVE.b 25(a2),d0
0002FF20 <AmiBlitz3.ab3@20311>   CMP.b #5,d0
0002FF24 <AmiBlitz3.ab3@20312>   BNE 'nocos
0002FF2A <AmiBlitz3.ab3@20313>   OR.l #$f200001d,d1                                       ;fpu cos
0002FF2E <AmiBlitz3.ab3@20314>  BRA 'exit
0002FF32 <AmiBlitz3.ab3@20317>   CMP.b #$c,d0
0002FF36 <AmiBlitz3.ab3@20318>   BNE 'nosqr
0002FF3C <AmiBlitz3.ab3@20319>   OR.l #$f2000004,d1                                       ;fpu sqr
0002FF40 <AmiBlitz3.ab3@20320>  BRA 'exit
0002FF44 <AmiBlitz3.ab3@20323>   CMP.b #$d,d0
0002FF48 <AmiBlitz3.ab3@20324>   BNE 'notan
0002FF4E <AmiBlitz3.ab3@20325>   OR.l #$f200000f,d1                                       ;fpu tan
0002FF52 <AmiBlitz3.ab3@20326>  BRA 'exit
0002FF56 <AmiBlitz3.ab3@20329>   CMP.b #$a,d0
0002FF5A <AmiBlitz3.ab3@20330>   BNE 'nosin
0002FF60 <AmiBlitz3.ab3@20331>   OR.l #$f200000e,d1                                       ;fpu sin
0002FF64 <AmiBlitz3.ab3@20332>  BRA 'exit
0002FF68 <AmiBlitz3.ab3@20335>   CMP.b #$3,d0
0002FF6C <AmiBlitz3.ab3@20336>   BNE 'noasin
0002FF72 <AmiBlitz3.ab3@20337>   OR.l #$f200000c,d1                                       ;fpu asin
0002FF76 <AmiBlitz3.ab3@20338>  BRA 'exit
0002FF7A <AmiBlitz3.ab3@20341>   CMP.b #$2,d0
0002FF7E <AmiBlitz3.ab3@20342>   BNE 'noacos
0002FF84 <AmiBlitz3.ab3@20343>   OR.l #$f200001c,d1                                       ;fpu acos
0002FF88 <AmiBlitz3.ab3@20344>  BRA 'exit
0002FF8C <AmiBlitz3.ab3@20347>   CMP.b #$4,d0
0002FF90 <AmiBlitz3.ab3@20348>   BNE 'noatan
0002FF96 <AmiBlitz3.ab3@20349>   OR.l #$f200000a,d1                                       ;fpu atan
0002FF9A <AmiBlitz3.ab3@20350>  BRA 'exit
0002FF9E <AmiBlitz3.ab3@20353>   CMP.b #$e,d0
0002FFA2 <AmiBlitz3.ab3@20354>   BNE 'nohtan
0002FFA8 <AmiBlitz3.ab3@20355>   OR.l #$f2000009,d1                                       ;fpu htan
0002FFAC <AmiBlitz3.ab3@20356>  BRA 'exit
0002FFB0 <AmiBlitz3.ab3@20359>   CMP.b #$6,d0
0002FFB4 <AmiBlitz3.ab3@20360>   BNE 'nohcos
0002FFBA <AmiBlitz3.ab3@20361>   OR.l #$f2000019,d1                                       ;fpu hcos
0002FFBE <AmiBlitz3.ab3@20362>  BRA 'exit
0002FFC2 <AmiBlitz3.ab3@20365>   CMP.b #$b,d0
0002FFC6 <AmiBlitz3.ab3@20366>   BNE 'nohsin
0002FFCC <AmiBlitz3.ab3@20367>   OR.l #$f2000002,d1                                       ;fpu hsin
0002FFD0 <AmiBlitz3.ab3@20368>  BRA 'exit
0002FFD4 <AmiBlitz3.ab3@20371>   CMP.b #$9,d0
0002FFD8 <AmiBlitz3.ab3@20372>   BNE 'nolog
0002FFDE <AmiBlitz3.ab3@20373>   OR.l #$f2000014,d1                                       ;fpu log
0002FFE2 <AmiBlitz3.ab3@20374>  BRA 'exit
0002FFE6 <AmiBlitz3.ab3@20377>   CMP.b #$8,d0
0002FFEA <AmiBlitz3.ab3@20378>   BNE 'nolog10
0002FFF0 <AmiBlitz3.ab3@20379>   OR.l #$f2000015,d1                                       ;fpu log10
0002FFF4 <AmiBlitz3.ab3@20380>  BRA 'exit
0002FFF8 <AmiBlitz3.ab3@20383>   CMP.b #$7,d0
0002FFFC <AmiBlitz3.ab3@20384>   BNE 'noexp
00030002 <AmiBlitz3.ab3@20385>   OR.l #$f2000010,d1                                       ;fpu exp
00030006 <AmiBlitz3.ab3@20386>  BRA 'exit
0003000C <AmiBlitz3.ab3@20389>   LEA fpuerr,a0
0003000E <AmiBlitz3.ab3@20390>   MOVE.l a0,-(a7)
00030014 <AmiBlitz3.ab3@20391>  JMP handle_compileerror
00030018 <AmiBlitz3.ab3@20395>   CMP.b #$3c,d0
0003001C <AmiBlitz3.ab3@20396>   BNE 'nofpu2
0003001E <AmiBlitz3.ab3@20397>   MOVEQ #0,d1
00030024 <AmiBlitz3.ab3@20398>       MOVE.w regnumstore,d1
00030026 <AmiBlitz3.ab3@20399>       MOVE.w d1,d0
00030028 <AmiBlitz3.ab3@20400>       ASL.w #7,d1
0003002A <AmiBlitz3.ab3@20401>       ASL.w #8,d0
0003002C <AmiBlitz3.ab3@20402>       ASL.w #2,d0
0003002E <AmiBlitz3.ab3@20403>       OR.w d0,d1
00030034 <AmiBlitz3.ab3@20404>       CMP.b #$03,25(a2)
00030038 <AmiBlitz3.ab3@20405>       BNE 'nosgn
0003003E <AmiBlitz3.ab3@20408>       SUBQ.l #8,destpointer                                ;fpu sgn
00030044 <AmiBlitz3.ab3@20409>         OR.l #$f200003a,d1
00030048 <AmiBlitz3.ab3@20410>         BSR writelong
0003004E <AmiBlitz3.ab3@20411>         CLR.w a2offset
00030054 <AmiBlitz3.ab3@20412>          MOVE.l #$F28E0006,d1
00030058 <AmiBlitz3.ab3@20413>          BSR writelong
0003005E <AmiBlitz3.ab3@20414>   MOVE.l #$7000600a,d1
00030062 <AmiBlitz3.ab3@20415>   BSR writelong
00030068 <AmiBlitz3.ab3@20416>   MOVE.l #$70014840,d1
0003006C <AmiBlitz3.ab3@20417>   BSR writelong
00030072 <AmiBlitz3.ab3@20418>   MOVE.l #$F292,d1
00030076 <AmiBlitz3.ab3@20419>   BSR writeword
0003007C <AmiBlitz3.ab3@20420>   MOVE.l #$000470FF,d1
00030080 <AmiBlitz3.ab3@20421>  BRA 'exit
00030088 <AmiBlitz3.ab3@20424>   CMP.l #"Frac",$1a(a2)
0003008C <AmiBlitz3.ab3@20425>   BNE 'nofrac
00030092 <AmiBlitz3.ab3@20426>  JMP notwork
00030096 <AmiBlitz3.ab3@20467>  BRA 'exit
0003009A <AmiBlitz3.ab3@20472>   BSR.w makelsub3                                          ;write lib code
000300A0 <AmiBlitz3.ab3@20473>   MOVE.l (A7)+,libisat
000300A2 <AmiBlitz3.ab3@20474>  RTS
000300A6 <AmiBlitz3.ab3@20478>   BSR writelong
000300AC <AmiBlitz3.ab3@20481>   MOVE.l (A7)+,libisat
000300AE <AmiBlitz3.ab3@20482> RTS
000300B2 <AmiBlitz3.ab3@20486>   BSR.w fetchregs
000300B8 <AmiBlitz3.ab3@20488>   TST.b debugmode
000300BC <AmiBlitz3.ab3@20489>    BEQ.w 'norerr
000300BE <AmiBlitz3.ab3@20491>   MOVE.l (A2),D1
000300C2 <AmiBlitz3.ab3@20492>   OR.l $8(A2),D1
000300C6 <AmiBlitz3.ab3@20493>   BCLR #$0,D1
000300C8 <AmiBlitz3.ab3@20494>   TST.l D1
000300CC <AmiBlitz3.ab3@20495>    BEQ.w 'norerr
000300CE <AmiBlitz3.ab3@20497>   MOVE.l (A2)+,D1
000300D2 <AmiBlitz3.ab3@20498>   BTST #$0,D1
000300D6 <AmiBlitz3.ab3@20499>    BEQ.w 'skiptt
000300DC <AmiBlitz3.ab3@20500>   TST.w blitzmode
000300E0 <AmiBlitz3.ab3@20501>    BPL.w blitzerr
000300E6 <AmiBlitz3.ab3@20502>   TST.b debugmode
000300EA <AmiBlitz3.ab3@20503>    BEQ.w 'skiptt2
000300EC <AmiBlitz3.ab3@20504>   MOVE.l D1,-(A7)
000300F0 <AmiBlitz3.ab3@20505>   MOVE.w #$C311,D1   ; was #inblitz,
000300F4 <AmiBlitz3.ab3@20506>    BSR.w makebtst
000300F6 <AmiBlitz3.ab3@20507>   MOVE.l (A7)+,D1
000300FA <AmiBlitz3.ab3@20510>   BCLR #$0,D1
000300FC <AmiBlitz3.ab3@20513>   TST.l D1
00030100 <AmiBlitz3.ab3@20515>    BSR.w doajsr
00030102 <AmiBlitz3.ab3@20516>   MOVE.l (A2)+,D1
00030106 <AmiBlitz3.ab3@20517>    BSR.w doajsrrout
00030108 <AmiBlitz3.ab3@20518>   MOVE.l (A2)+,D1
0003010C <AmiBlitz3.ab3@20519>    BSR.w doajsr
00030110 <AmiBlitz3.ab3@20520>  BRA.w 'more
00030116 <AmiBlitz3.ab3@20523>   BTST #$0,$3(A2)
0003011A <AmiBlitz3.ab3@20524>    BEQ.w 'penis
0003011E <AmiBlitz3.ab3@20528>   MOVE.w blitzmode(PC),D1
00030122 <AmiBlitz3.ab3@20529>    BPL.w blitzerr
00030126 <AmiBlitz3.ab3@20532>   MOVE.l $4(A2),D1
0003012A <AmiBlitz3.ab3@20533>    BSR.w doajsrrout
00030130 <AmiBlitz3.ab3@20536>   MOVEA.l libisat,A2
00030132 <AmiBlitz3.ab3@20537> RTS
00030136 <AmiBlitz3.ab3@20544>   BTST #$0,D1
0003013A <AmiBlitz3.ab3@20545>    BEQ.w 'doajsr
00030140 <AmiBlitz3.ab3@20546>   TST.w blitzmode
00030144 <AmiBlitz3.ab3@20547>    BMI.w amigaerr
0003014A <AmiBlitz3.ab3@20548>   TST.b debugmode
0003014E <AmiBlitz3.ab3@20549>    BEQ.w 'doajsr2      
00030150 <AmiBlitz3.ab3@20550>   MOVE.l D1,-(A7)
00030154 <AmiBlitz3.ab3@20551>   MOVE.w #$C312,D1     ; #inamiga,
00030158 <AmiBlitz3.ab3@20552>    BSR.w makebtst
0003015A <AmiBlitz3.ab3@20553>   MOVE.l (A7)+,D1
0003015E <AmiBlitz3.ab3@20556>   BCLR #$0,D1
00030160 <AmiBlitz3.ab3@20559>   TST.l D1
00030164 <AmiBlitz3.ab3@20562>    BEQ.w 'skip
00030166 <AmiBlitz3.ab3@20563>   MOVE.l A1,-(A7)
0003016A <AmiBlitz3.ab3@20564>    BSR.w doajsr2
0003016C <AmiBlitz3.ab3@20565>   MOVEA.l (A7)+,A1
0003016E <AmiBlitz3.ab3@20568> RTS
00030174 <AmiBlitz3.ab3@20572>   MOVEA.l libisat,A0
0003017A <AmiBlitz3.ab3@20573>   TST.w cfetchmode
0003017E <AmiBlitz3.ab3@20574>    BEQ.w 'nfetch
00030180 <AmiBlitz3.ab3@20575>   ADD.l A0,D1
00030182 <AmiBlitz3.ab3@20576>   MOVE.l D1,-(A7)
00030186 <AmiBlitz3.ab3@20577>   MOVE.w #$4EB9,D1
0003018A <AmiBlitz3.ab3@20578>    BSR.w writeword
0003018C <AmiBlitz3.ab3@20579>   MOVE.l (A7)+,D1
00030190 <AmiBlitz3.ab3@20580>  BRA.w writelong
00030194 <AmiBlitz3.ab3@20587>   LEA $0(A0,D1.L),A1
0003019A <AmiBlitz3.ab3@20588>   CLR.w inline
0003019E <AmiBlitz3.ab3@20591>   CMPI.b #$A0,(A1)+
000301A2 <AmiBlitz3.ab3@20592>    BNE.w 'ugly
000301A4 <AmiBlitz3.ab3@20593>   TST.b (A1)+
000301A8 <AmiBlitz3.ab3@20594>    BEQ.w 'iszero
000301AE <AmiBlitz3.ab3@20595>   CMPI.b #$1,-$1(A1)
000301B2 <AmiBlitz3.ab3@20596>    BEQ.w 'isone
000301B8 <AmiBlitz3.ab3@20600>   MOVE.w (A1)+,inline
000301BA <AmiBlitz3.ab3@20601>   ADDQ.l #4,D1
000301BE <AmiBlitz3.ab3@20602>  BRA.w 'cute
000301C4 <AmiBlitz3.ab3@20607>   TST.w blitzmode
000301C8 <AmiBlitz3.ab3@20608>    BPL.w 'inamiga
000301CE <AmiBlitz3.ab3@20610>   TST.b debugmode
000301D2 <AmiBlitz3.ab3@20611>    BEQ.w 'nobrerr
000301D6 <AmiBlitz3.ab3@20612>   MOVE.w #$C311,D1       ; was #inblitz,
000301DA <AmiBlitz3.ab3@20613>    BSR.w makebtst
000301DC <AmiBlitz3.ab3@20616>   MOVE.l (A1)+,D1
000301E0 <AmiBlitz3.ab3@20617>   LEA $0(A0,D1.L),A1
000301E4 <AmiBlitz3.ab3@20618>  BRA.w 'cute
000301EA <AmiBlitz3.ab3@20621>   TST.b debugmode
000301EE <AmiBlitz3.ab3@20622>    BEQ.w 'noarerr        
000301F0 <AmiBlitz3.ab3@20623>   MOVE.l D1,-(A7)
000301F4 <AmiBlitz3.ab3@20624>   MOVE.w #$C312,D1       ; was #inamiga,
000301F8 <AmiBlitz3.ab3@20625>    BSR.w makebtst
000301FA <AmiBlitz3.ab3@20626>   MOVE.l (A7)+,D1
000301FC <AmiBlitz3.ab3@20629>   ADDQ.w #4,A1
000301FE <AmiBlitz3.ab3@20630>   ADDQ.l #6,D1
00030202 <AmiBlitz3.ab3@20631>  BRA.w 'cute
00030208 <AmiBlitz3.ab3@20634>   TST.w inline
0003020C <AmiBlitz3.ab3@20635>    BEQ.w 'notin
0003020E <AmiBlitz3.ab3@20637>   SUBQ.w #1,A1
00030210 <AmiBlitz3.ab3@20638>   MOVEA.l A1,A0
00030214 <AmiBlitz3.ab3@20639>   ADDA.w inline(PC),A1
00030218 <AmiBlitz3.ab3@20640>  BRA.w pokecode2
0003021C <AmiBlitz3.ab3@20643>   MOVEM.l a0/D1,-(A7)          ; was  d1,-(a7)
00030222 <AmiBlitz3.ab3@20645>   TST.w debugversion
00030226 <AmiBlitz3.ab3@20646>   BEQ 'l11
0003022E <AmiBlitz3.ab3@20647>   BTST #$7,link_debuginfo
00030232 <AmiBlitz3.ab3@20648>   BEQ.w 'l11
00030238 <AmiBlitz3.ab3@20649>   MOVE.l lastinstruction,d1
0003023C <AmiBlitz3.ab3@20650>   BEQ 'l11
00030242 <AmiBlitz3.ab3@20651>   CLR.l lastinstruction
00030248 <AmiBlitz3.ab3@20652>   CMP.l #$e000,d1
0003024C <AmiBlitz3.ab3@20653>   BGE 'ln99
00030252 <AmiBlitz3.ab3@20654>   LEA notf,a0
00030258 <AmiBlitz3.ab3@20655>   CMP.l #$c601,d1
0003025C <AmiBlitz3.ab3@20656>   BNE 'ln1
00030262 <AmiBlitz3.ab3@20657>   LEA strcpy,a0
00030266 <AmiBlitz3.ab3@20658>  BRA 'ln3
0003026C <AmiBlitz3.ab3@20661>   CMP.l #$c700,d1
00030270 <AmiBlitz3.ab3@20662>   BNE 'ln2
00030276 <AmiBlitz3.ab3@20663>   LEA strvar,a0
0003027A <AmiBlitz3.ab3@20664>  BRA 'ln3
00030280 <AmiBlitz3.ab3@20667>   CMP.l #$ce00,d1
00030284 <AmiBlitz3.ab3@20668>   BNE 'ln4
0003028A <AmiBlitz3.ab3@20669>   LEA strcmp,a0
0003028E <AmiBlitz3.ab3@20670>  BRA 'ln3
00030294 <AmiBlitz3.ab3@20673>   CMP.l #$ca00,d1
00030298 <AmiBlitz3.ab3@20674>   BNE 'ln5
0003029E <AmiBlitz3.ab3@20675>   LEA qmul,a0
000302A2 <AmiBlitz3.ab3@20676>  BRA 'ln3
000302A8 <AmiBlitz3.ab3@20679>   CMP.l #$d000,d1
000302AC <AmiBlitz3.ab3@20680>      BNE 'ln6
000302B2 <AmiBlitz3.ab3@20681>      LEA _MaxLen,a0
000302B6 <AmiBlitz3.ab3@20682>  BRA 'ln3
000302BC <AmiBlitz3.ab3@20685>   CMP.l #$cb00,d1
000302C0 <AmiBlitz3.ab3@20686>   BNE 'ln3
000302C6 <AmiBlitz3.ab3@20687>   LEA qdiv,a0
000302CA <AmiBlitz3.ab3@20688>  BRA 'ln3
000302CC <AmiBlitz3.ab3@20691>   MOVE.l d1,a0
000302D0 <AmiBlitz3.ab3@20692>   LEA $8(a0),a0
000302D4 <AmiBlitz3.ab3@20695>   CMP.w #$ffff,(a0)+
000302D8 <AmiBlitz3.ab3@20696>   BNE 'l1
000302DC <AmiBlitz3.ab3@20697>   LEA 6(a0),a0
000302E0 <AmiBlitz3.ab3@20700>   MOVEM.l a1/a2/d7/d2,-(a7)
000302E2 <AmiBlitz3.ab3@20701>   MOVEQ #0,d2
000302E8 <AmiBlitz3.ab3@20702>   LEA ptr_parameterstore,a1
000302EA <AmiBlitz3.ab3@20705>   ADDQ.l #1,d2
000302EC <AmiBlitz3.ab3@20706>   MOVE.b (a0)+,d0
000302F0 <AmiBlitz3.ab3@20707> 
000302F4 <AmiBlitz3.ab3@20708>   BNE 'nodollar
000302F8 <AmiBlitz3.ab3@20709>   MOVE.b #"S",d0
000302FC <AmiBlitz3.ab3@20712>   CMP.b #"?",d0
00030300 <AmiBlitz3.ab3@20713>   BEQ 'nolabelwrite
00030302 <AmiBlitz3.ab3@20714>   MOVE.b d0,(a1)+
00030306 <AmiBlitz3.ab3@20715>   BNE 'l2
0003030C <AmiBlitz3.ab3@20716>   MOVE.w #"__",-1(a1)
0003030E <AmiBlitz3.ab3@20717>   ADDQ.l #2,d2
00030312 <AmiBlitz3.ab3@20718>   CLR.b 1(a1)
00030318 <AmiBlitz3.ab3@20719>   JSR findlabel2
0003031C <AmiBlitz3.ab3@20720>   BEQ 'l3
00030322 <AmiBlitz3.ab3@20721>   JSR addlabelhash
00030326 <AmiBlitz3.ab3@20724>   CLR.l 4(a2)
0003032A <AmiBlitz3.ab3@20725>   MOVE.l $14(a7),a0
0003032E <AmiBlitz3.ab3@20726>   MOVE.l $10(a7),d1
00030332 <AmiBlitz3.ab3@20727>   SUB.l $12(a0),d1
00030336 <AmiBlitz3.ab3@20728>   ADD.l $28(a0),d1
0003033A <AmiBlitz3.ab3@20729>   MOVE.l d1,8(a2)
0003033E <AmiBlitz3.ab3@20732>   MOVEM.l (a7)+,a1/a2/d7/d2
00030344 <AmiBlitz3.ab3@20735>   TST.b typecheck
00030348 <AmiBlitz3.ab3@20736>   BEQ 'p1
0003034E <AmiBlitz3.ab3@20737>   MOVE.l lasttoken,d1
00030354 <AmiBlitz3.ab3@20738>   CMP.l #$da01,d1                                          ;poke
00030358 <AmiBlitz3.ab3@20739>   BEQ 'lp1
0003035E <AmiBlitz3.ab3@20740>   CMP.l #$da02,d1                                          ;peek
00030362 <AmiBlitz3.ab3@20741>   BNE 'p1
00030368 <AmiBlitz3.ab3@20744>   TST.b peekaddrsize
0003036C <AmiBlitz3.ab3@20745>   BEQ 'p1
00030374 <AmiBlitz3.ab3@20746>   CMP.b #3,peekaddrsize
00030378 <AmiBlitz3.ab3@20747>   BNE errormsg_onlylong
0003037E <AmiBlitz3.ab3@20748>   CLR.b peekaddrsize
00030384 <AmiBlitz3.ab3@20756>    TST.b fpu
00030388 <AmiBlitz3.ab3@20757>   BNE 'optf
0003038E <AmiBlitz3.ab3@20758>   TST.b fast
00030392 <AmiBlitz3.ab3@20759>   BEQ 'l10
0003039A <AmiBlitz3.ab3@20765>   CMP.l #"Poke",20(a2)                                     ;poke
0003039E <AmiBlitz3.ab3@20766>   BNE 'peekopt
000303A2 <AmiBlitz3.ab3@20767>   TST.b 24(a2)
000303A6 <AmiBlitz3.ab3@20768>   BNE 'peekopt
000303AA <AmiBlitz3.ab3@20769>   CMP.b #3,d2
000303AE <AmiBlitz3.ab3@20770>   BNE 'lw1
000303B4 <AmiBlitz3.ab3@20773>   MOVE.l #$21821990,d1
000303B8 <AmiBlitz3.ab3@20774>  BRA.s 'exitjsr
000303BC <AmiBlitz3.ab3@20777>   CMP.b #2,d2
000303C0 <AmiBlitz3.ab3@20778>   BNE 'lb1
000303C6 <AmiBlitz3.ab3@20779>   MOVE.l #$31821990,d1
000303CA <AmiBlitz3.ab3@20780>  BRA.s 'exitjsr
000303CE <AmiBlitz3.ab3@20783>   CMP.b #1,d2
000303D2 <AmiBlitz3.ab3@20784>   BNE 'lp3
000303D8 <AmiBlitz3.ab3@20785>   MOVE.l #$11821990,d1
000303DC <AmiBlitz3.ab3@20786>  BRA.s 'exitjsr
000303E0 <AmiBlitz3.ab3@20789>   CMP.b #5,d2
000303E4 <AmiBlitz3.ab3@20790>     BNE 'l10
000303EA <AmiBlitz3.ab3@20791>     TST.b fpu
000303EE <AmiBlitz3.ab3@20792>     BEQ 'll1
000303F4 <AmiBlitz3.ab3@20793>      MOVE.l destpointer,a4
000303FC <AmiBlitz3.ab3@20794>     CMP.l #$f22d4500,-6(a4)
00030400 <AmiBlitz3.ab3@20795>     BNE 'noglob
00030406 <AmiBlitz3.ab3@20796>     TST.b doublepeek
0003040A <AmiBlitz3.ab3@20797>     BNE 'noglob
00030410 <AmiBlitz3.ab3@20798>     MOVE.w -2(a4),-4(a4)
00030416 <AmiBlitz3.ab3@20799>     MOVE.w #$21ad,-6(a4)
0003041C <AmiBlitz3.ab3@20800>     MOVE.w #$1990,-2(a4)
00030424 <AmiBlitz3.ab3@20801>     MOVE.w #9,peeksize
00030426 <AmiBlitz3.ab3@20802>     ADDQ #8,a7
00030428 <AmiBlitz3.ab3@20803>  RTS
00030430 <AmiBlitz3.ab3@20806>     CMP.l #$f22c4500,-6(a4)
00030434 <AmiBlitz3.ab3@20807>     BNE 'nolocal
0003043A <AmiBlitz3.ab3@20808>     MOVE.w -2(a4),-4(a4)
00030440 <AmiBlitz3.ab3@20809>     TST.b doublepeek                                       ;dont move longfix on double floats
00030444 <AmiBlitz3.ab3@20810>     BNE 'nolocal
0003044A <AmiBlitz3.ab3@20811>     MOVE.w #$21ac,-6(a4)
00030450 <AmiBlitz3.ab3@20812>     MOVE.w #$1990,-2(a4)
00030458 <AmiBlitz3.ab3@20813>     MOVE.w #9,peeksize
0003045A <AmiBlitz3.ab3@20814>     ADDQ #8,a7
0003045C <AmiBlitz3.ab3@20815>  RTS
00030460 <AmiBlitz3.ab3@20818>     MOVE.w #$f230,d1
00030464 <AmiBlitz3.ab3@20819>     BSR writeword
0003046A <AmiBlitz3.ab3@20820>   MOVE.l #$65001990,d1
00030470 <AmiBlitz3.ab3@20821>   TST.b doublepeek
00030474 <AmiBlitz3.ab3@20822>   BEQ 'exitjsr
0003047A <AmiBlitz3.ab3@20823>   OR.l   #$10000000,d1
0003047C <AmiBlitz3.ab3@20826>   ADDQ #8,a7
00030484 <AmiBlitz3.ab3@20827>   MOVE.w #9,peeksize
00030488 <AmiBlitz3.ab3@20828>  BRA writelong
00030490 <AmiBlitz3.ab3@20831>   CMP.l #"Peek",20(a2)
00030494 <AmiBlitz3.ab3@20832>   BNE 'l10
00030498 <AmiBlitz3.ab3@20833>   TST.b 24(a2)
0003049C <AmiBlitz3.ab3@20834>   BNE 'l10
000304A4 <AmiBlitz3.ab3@20835>   CMP.w #7,peeksize
000304A8 <AmiBlitz3.ab3@20836>   BEQ 'l10
000304B0 <AmiBlitz3.ab3@20837>    CMP.w #3,peeksize
000304B4 <AmiBlitz3.ab3@20838>    BNE.s 'lw1a
000304BA <AmiBlitz3.ab3@20841>   MOVE.l #$20301990,d1
000304BE <AmiBlitz3.ab3@20842>  BRA 'exitjsr
000304C6 <AmiBlitz3.ab3@20845>   CMP.w #2,peeksize
000304CA <AmiBlitz3.ab3@20846>    BNE.s 'lb1a
000304D0 <AmiBlitz3.ab3@20847>    MOVE.l #$30301990,d1
000304D4 <AmiBlitz3.ab3@20848>  BRA 'exitjsr
000304DC <AmiBlitz3.ab3@20851>   CMP.w #1,peeksize
000304E0 <AmiBlitz3.ab3@20852>    BNE.s 'lf1
000304E6 <AmiBlitz3.ab3@20853>    MOVE.l #$10301990,d1
000304EA <AmiBlitz3.ab3@20854>  BRA 'exitjsr
000304F2 <AmiBlitz3.ab3@20857>   CMP.w #5,peeksize
000304F6 <AmiBlitz3.ab3@20858>    BNE 'l10
000304FC <AmiBlitz3.ab3@20859>    TST.b fpu
00030500 <AmiBlitz3.ab3@20860>    BEQ 'll1a
00030504 <AmiBlitz3.ab3@20861>    MOVE.w #$f230,d1
00030508 <AmiBlitz3.ab3@20862>    BSR writeword
0003050A <AmiBlitz3.ab3@20863>    MOVEQ #0,d1
00030510 <AmiBlitz3.ab3@20864>    MOVE.w tempregnum,d1
00030512 <AmiBlitz3.ab3@20865>    ASL.l #7,d1
00030514 <AmiBlitz3.ab3@20866>    ASL.l #8,d1
00030516 <AmiBlitz3.ab3@20867>    ASL.l #8,d1
0003051C <AmiBlitz3.ab3@20868>    ADD.l #$44001990,d1
00030522 <AmiBlitz3.ab3@20869>     TST.b doublepeek
00030526 <AmiBlitz3.ab3@20870>     BEQ 'exitjsr2
0003052C <AmiBlitz3.ab3@20871>     OR.l   #$10000000,d1
00030530 <AmiBlitz3.ab3@20874>  BRA 'exitjsr
00030534 <AmiBlitz3.ab3@20878>   MOVE.w #$4EB9,D1
00030538 <AmiBlitz3.ab3@20879>    BSR.w writeword                                         ;writesysjsr
0003053C <AmiBlitz3.ab3@20880>   MOVEM.l (A7)+,a0/D1        ; was  (a7)+,d1
00030542 <AmiBlitz3.ab3@20881>    JSR addoff
00030546 <AmiBlitz3.ab3@20882>   SUB.l $12(A0),D1
0003054A <AmiBlitz3.ab3@20883>   ADD.l $28(A0),D1
0003054E <AmiBlitz3.ab3@20884> BRA.w writelong
00030550 <AmiBlitz3.ab3@20889>   MOVE.w D1,-(A7)
00030554 <AmiBlitz3.ab3@20890>   MOVE.w tstmode(PC),D1
00030558 <AmiBlitz3.ab3@20891>    BSR.w writeword
0003055C <AmiBlitz3.ab3@20892>    BSR.w getbbase
00030560 <AmiBlitz3.ab3@20893>    BSR.w writeword
00030562 <AmiBlitz3.ab3@20894>   MOVE.w (A7)+,D1
00030566 <AmiBlitz3.ab3@20895>   MOVEM.l D0/D3-D7/A0-A2/A4,-(A7)
0003056A <AmiBlitz3.ab3@20896>    BSR.w Atokejsr
0003056E <AmiBlitz3.ab3@20897>   MOVEM.l (A7)+,D0/D3-D7/A0-A2/A4
00030570 <AmiBlitz3.ab3@20898> RTS
00030574 <AmiBlitz3.ab3@20906>   MOVE.w blitzoff(PC),D1
00030578 <AmiBlitz3.ab3@20907>   CMP.w #-$1,D1
0003057C <AmiBlitz3.ab3@20908>    BNE.w 'done
00030582 <AmiBlitz3.ab3@20909>   ADDQ.w #1,globalvarpointer
0003058A <AmiBlitz3.ab3@20910>   BCLR #$0,globalvarpointer+1
00030590 <AmiBlitz3.ab3@20911>   MOVE.w globalvarpointer,D1
00030596 <AmiBlitz3.ab3@20912>   MOVE.w D1,blitzoff
0003059C <AmiBlitz3.ab3@20913>   ADDQ.w #2,globalvarpointer
0003059E <AmiBlitz3.ab3@20916> RTS
000305A2 <AmiBlitz3.ab3@20920> tstmode:    Dc.b $4A,$6D,$00,$00                           ;TST.W $0000(A5)
000305A4 <AmiBlitz3.ab3@20923> inline:     Ds.w 1
000305A6 <AmiBlitz3.ab3@20924> blitzoff:   Dc.w $FFFF                                   ;-1 org source
000305A8 <AmiBlitz3.ab3@20925> blitzmode:  Ds.w 1                                       ;+=amiga, -=blitz
000305AA <AmiBlitz3.ab3@20929>   MOVE.w (A2)+,D1
000305AE <AmiBlitz3.ab3@20930>    BEQ.w 'done
000305B0 <AmiBlitz3.ab3@20931>   MOVE.w (A2)+,D2
000305B4 <AmiBlitz3.ab3@20932>    BSR.w toreg
000305B8 <AmiBlitz3.ab3@20933>  BRA.w fetchregs
000305BA <AmiBlitz3.ab3@20936> RTS
000305BE <AmiBlitz3.ab3@20942>   CMP.w #-$100,D2
000305C2 <AmiBlitz3.ab3@20943>    BCC.w 'yeah
000305C6 <AmiBlitz3.ab3@20945>   BCLR #$F,D2
000305CA <AmiBlitz3.ab3@20946>    BEQ.w 'nobm
000305D0 <AmiBlitz3.ab3@20948>   TST.w blitzmode
000305D4 <AmiBlitz3.ab3@20949>    BMI.w 'yeah
000305D6 <AmiBlitz3.ab3@20950>  RTS
000305DA <AmiBlitz3.ab3@20953>   BCLR #$E,D2
000305DE <AmiBlitz3.ab3@20954>    BEQ.w 'yeah
000305E4 <AmiBlitz3.ab3@20956>   TST.w blitzmode
000305E8 <AmiBlitz3.ab3@20957>    BPL.w 'yeah
000305EA <AmiBlitz3.ab3@20958>  RTS
000305F0 <AmiBlitz3.ab3@20961>   JSR uselib
000305F2 <AmiBlitz3.ab3@20962>   TST.b D2
000305F6 <AmiBlitz3.ab3@20963>    BEQ.w 'norm
000305FA <AmiBlitz3.ab3@20964>   CMP.b #$4,D2
000305FE <AmiBlitz3.ab3@20965>    BNE.w 'suv
00030602 <AmiBlitz3.ab3@20966>   MOVE.w #$0004,-(A7)
00030608 <AmiBlitz3.ab3@20967>   MOVE.l #$FFFFFFFA,-(A7)                                  ;#-6,-(a7) org source
0003060C <AmiBlitz3.ab3@20968>  BRA.w 'sendmd
00030610 <AmiBlitz3.ab3@20971>   CMP.b #$3,D2
00030614 <AmiBlitz3.ab3@20972>    BNE.w 'notnmax
00030616 <AmiBlitz3.ab3@20973>   CLR.w -(A7)
0003061C <AmiBlitz3.ab3@20974>   MOVE.l #$FFFFFFFC,-(A7)                                  ;#-4,-(a7) org source
0003061E <AmiBlitz3.ab3@20980>   LSR.w #8,D2
00030622 <AmiBlitz3.ab3@20981>   MOVE.w #$303C,D1                                         ;move.w #x,dn
00030626 <AmiBlitz3.ab3@20982>   BTST #$7,D2
0003062A <AmiBlitz3.ab3@20983>    BEQ.w 'skipad
0003062E <AmiBlitz3.ab3@20984>   MOVE.w #$307C,D1                                         ;move.w #x,an
00030632 <AmiBlitz3.ab3@20985>   CMP.w #$16,D2
00030636 <AmiBlitz3.ab3@20986>    BNE.w 'skipad
0003063E <AmiBlitz3.ab3@20987>   MOVE.w #$FFFF,lasta6                                     ;-1 org source
00030642 <AmiBlitz3.ab3@20990>   ANDI.w #$7,D2
00030644 <AmiBlitz3.ab3@20991>   LSL.w #8,D2
00030646 <AmiBlitz3.ab3@20992>   LSL.w #1,D2
00030648 <AmiBlitz3.ab3@20993>   OR.w D2,D1
0003064C <AmiBlitz3.ab3@20994>    BSR.w writeword
00030650 <AmiBlitz3.ab3@20995>   MOVE.l $12(A1),D1
00030652 <AmiBlitz3.ab3@20996>   ADD.l (A7)+,D1
00030656 <AmiBlitz3.ab3@20997>   MOVE.w $0(A1,D1.L),D1
00030658 <AmiBlitz3.ab3@20998>   ADD.w (A7)+,D1
0003065C <AmiBlitz3.ab3@20999>  BRA.w writeword
0003065E <AmiBlitz3.ab3@21002>   MOVE.w D2,-(A7)
00030660 <AmiBlitz3.ab3@21003>   LSR.w #8,D2
00030664 <AmiBlitz3.ab3@21004>   CMP.w #$16,D2
00030668 <AmiBlitz3.ab3@21005>    BNE.w 'isnta6
00030670 <AmiBlitz3.ab3@21006>   MOVE.w #$FFFF,lasta6                                     ;-1 org source
00030674 <AmiBlitz3.ab3@21009>   MOVE.l $12(A1),D1                                        ;objectspace
00030678 <AmiBlitz3.ab3@21010>   MOVE.w -$6(A1,D1.L),-(A7)
0003067C <AmiBlitz3.ab3@21011>    BSR.w makeregop
00030680 <AmiBlitz3.ab3@21012>    BSR.w writeword
00030682 <AmiBlitz3.ab3@21013>   MOVE.w (A7)+,D1
00030684 <AmiBlitz3.ab3@21014>   MOVE.w (A7)+,D2
00030686 <AmiBlitz3.ab3@21015>   TST.b D2
0003068A <AmiBlitz3.ab3@21016>    BPL.w 'skippy1
0003068E <AmiBlitz3.ab3@21021>    BSR.w writeword                                         ;move.l x(a5),dn
00030690 <AmiBlitz3.ab3@21022>   MOVE.w D2,-(A7)                                          ;store reg used
00030694 <AmiBlitz3.ab3@21024>   ADDA.l $12(A1),A1
00030696 <AmiBlitz3.ab3@21025>   MOVE.b D2,D1
0003069A <AmiBlitz3.ab3@21026>   ANDI.w #$7,D1
000306A0 <AmiBlitz3.ab3@21028>   TST.b debugmode
000306A4 <AmiBlitz3.ab3@21029>    BEQ.w 'norerr
000306A6 <AmiBlitz3.ab3@21031>   MOVE.w D1,-(A7)
000306A8 <AmiBlitz3.ab3@21032>   LSL.w #8,D1
000306AA <AmiBlitz3.ab3@21033>   LSL.w #1,D1
000306AE <AmiBlitz3.ab3@21034>   ORI.w #$B07C,D1                                          ;cmp #x,dn
000306B2 <AmiBlitz3.ab3@21035>    BSR.w writeword
000306B6 <AmiBlitz3.ab3@21036>   MOVE.w -$4(A1),D1
000306BA <AmiBlitz3.ab3@21037>    BSR.w writeword
000306BE <AmiBlitz3.ab3@21038>   MOVE.l maxchk(PC),D1                                  ;bcs
000306C2 <AmiBlitz3.ab3@21039>    BSR.w writelong
000306C4 <AmiBlitz3.ab3@21040>   MOVE.l A2,-(A7)
000306C8 <AmiBlitz3.ab3@21041>   MOVE.w #$C30A,D1
000306CC <AmiBlitz3.ab3@21042>    BSR.w Atokejsr
000306CE <AmiBlitz3.ab3@21043>   MOVEA.l (A7)+,A2
000306D0 <AmiBlitz3.ab3@21044>   MOVE.w (A7)+,D1
000306D4 <AmiBlitz3.ab3@21047>   MOVE.w -$2(A1),D2                                        ;shift amount
000306D8 <AmiBlitz3.ab3@21050>   CMP.w #$9,D2
000306DC <AmiBlitz3.ab3@21051>    BCS.w 'simp
000306E0 <AmiBlitz3.ab3@21052>   MOVEM.w D1-D2,-(A7)
000306E2 <AmiBlitz3.ab3@21054>   MOVEQ.l #$00,D2                                          ;!!!!!
000306E4 <AmiBlitz3.ab3@21056>   LSL.w #8,D2
000306E6 <AmiBlitz3.ab3@21057>   LSL.w #1,D2
000306E8 <AmiBlitz3.ab3@21058>   OR.w D2,D1
000306EC <AmiBlitz3.ab3@21059>   OR.w lsldn(PC),D1
000306F0 <AmiBlitz3.ab3@21060>    BSR.w writeword
000306F4 <AmiBlitz3.ab3@21061>   MOVEM.w (A7)+,D1-D2
000306F6 <AmiBlitz3.ab3@21062>   SUBQ.w #8,D2
000306FA <AmiBlitz3.ab3@21063>  BRA.w 'shloop
000306FC <AmiBlitz3.ab3@21066>   MOVE.w D1,-(A7)
00030700 <AmiBlitz3.ab3@21067>   OR.w #$48c0,d1
00030704 <AmiBlitz3.ab3@21068>   BSR writeword
00030706 <AmiBlitz3.ab3@21069>   MOVE.w (a7),d1
00030708 <AmiBlitz3.ab3@21070>   TST.w D2
0003070C <AmiBlitz3.ab3@21071>   BEQ.w 'simp2
00030710 <AmiBlitz3.ab3@21073>   ANDI.w #$7,D2                                            ;?????
00030712 <AmiBlitz3.ab3@21075>   LSL.w #8,D2
00030714 <AmiBlitz3.ab3@21076>   LSL.w #1,D2
00030716 <AmiBlitz3.ab3@21077>   OR.w D2,D1
0003071A <AmiBlitz3.ab3@21078>   OR.w lsldn(PC),D1
0003071E <AmiBlitz3.ab3@21079>    BSR.w writeword
00030720 <AmiBlitz3.ab3@21085>   MOVE.w (A7)+,D1
00030724 <AmiBlitz3.ab3@21086>   ANDI.w #$7,D1
00030728 <AmiBlitz3.ab3@21087>   OR.w maxdo(PC),D1
0003072A <AmiBlitz3.ab3@21088>   MOVE.w (A7)+,D2
0003072C <AmiBlitz3.ab3@21089>   LSL.w #1,D2
00030730 <AmiBlitz3.ab3@21090>   ANDI.w #$E00,D2
00030732 <AmiBlitz3.ab3@21091>   OR.w D2,D1
00030736 <AmiBlitz3.ab3@21092>  BRA.w writeword
0003073A <AmiBlitz3.ab3@21095>   CMP.b #$1,D2
0003073E <AmiBlitz3.ab3@21096>    BEQ.w 'skippy
00030740 <AmiBlitz3.ab3@21100>   ADDQ.w #4,D1
00030746 <AmiBlitz3.ab3@21102>   TST.b debugmode
0003074A <AmiBlitz3.ab3@21103>    BEQ.w 'skippy
0003074E <AmiBlitz3.ab3@21105>    BSR.w writeword
00030750 <AmiBlitz3.ab3@21106>   SWAP D1
00030754 <AmiBlitz3.ab3@21107>   MOVE.w 'theretest(PC),D1
00030756 <AmiBlitz3.ab3@21108>   SWAP D1
0003075A <AmiBlitz3.ab3@21109>    BSR.w writelong
0003075E <AmiBlitz3.ab3@21110>   MOVE.l 'theretest+4(PC),D1
00030762 <AmiBlitz3.ab3@21111>    BSR.w writelong
00030766 <AmiBlitz3.ab3@21112>   MOVE.l 'theretest+8(PC),D1
0003076A <AmiBlitz3.ab3@21113>  BRA.w writelong
0003076E <AmiBlitz3.ab3@21116>  BRA.w writeword
00030772 <AmiBlitz3.ab3@21121>             Dc.b $4A,$AD,$00,$00                           ;TST.L  $0000(A5)
00030776 <AmiBlitz3.ab3@21122>             Dc.b $66,$00,$00,$06                           ;BNE.W  'ttskip
00030778 <AmiBlitz3.ab3@21123>             Dc.b $70,$01                                   ;MOVEQ  #$01,D0
0003077A <AmiBlitz3.ab3@21124>             Dc.b $4E,$40                                   ;TRAP   #00
0003077C <AmiBlitz3.ab3@21129>   LSR.w #8,D2
00030780 <AmiBlitz3.ab3@21130>   CMP.b #$16,D2
00030784 <AmiBlitz3.ab3@21131>    BNE.w 'nota6
00030788 <AmiBlitz3.ab3@21132>   MOVE.w $A(A1),D1
0003078E <AmiBlitz3.ab3@21133>   CMP.w lasta6,D1
00030792 <AmiBlitz3.ab3@21134>    BEQ.w 'sk
00030798 <AmiBlitz3.ab3@21135>   MOVE.w D1,lasta6
0003079C <AmiBlitz3.ab3@21138>    BSR.w makeregop
000307A0 <AmiBlitz3.ab3@21139>   TST.w $1A(A1)
000307A4 <AmiBlitz3.ab3@21140>    BPL.w 'long
000307A8 <AmiBlitz3.ab3@21141>   CMP.w stackop(PC),D1
000307AC <AmiBlitz3.ab3@21142>    BNE.w 'notst
000307B2 <AmiBlitz3.ab3@21143>   SUBQ.w #2,a2offset
000307B6 <AmiBlitz3.ab3@21146>    ORI.w #$1000,D1
000307BA <AmiBlitz3.ab3@21149>    BSR.w writeword
000307BE <AmiBlitz3.ab3@21150>   MOVE.w $A(A1),D1
000307C2 <AmiBlitz3.ab3@21151>    BSR.w writeword
000307C4 <AmiBlitz3.ab3@21154> RTS
000307C6 <AmiBlitz3.ab3@21158> lsldn:      Dc.b $E1,$88                 ;Dc.b $48 ;object long acsess    ;LSL.L   #8,D0
000307CA <AmiBlitz3.ab3@21159> maxchk:     Dc.b $65,$00,$00,$08                                          ;BCS.W   maxchk_ok
000307D0 <AmiBlitz3.ab3@21160>             Dc.b $4E,$B9,$00,$00,$00,$00                                  ;JSR     $00000000
000307D2 <AmiBlitz3.ab3@21163> 
000307D4 <AmiBlitz3.ab3@21166>             Dc.b $00,$00
000307D8 <AmiBlitz3.ab3@21167> stackop:    Dc.b $2F,$2D,$00,$00                                          ;MOVE.L  $0000(A5),-(A7)
000307DC <AmiBlitz3.ab3@21174>   CMP.b #$FF,D2
000307E0 <AmiBlitz3.ab3@21175>    BNE.w 'notst
000307E4 <AmiBlitz3.ab3@21176>   MOVE.w stackop(PC),D1
000307EA <AmiBlitz3.ab3@21177>   ADDQ.w #4,a2offset
000307EC <AmiBlitz3.ab3@21178>  RTS
000307EE <AmiBlitz3.ab3@21181>   MOVE.l A3,-(A7)
000307F4 <AmiBlitz3.ab3@21182>   LEA regtransd,A3
000307F8 <AmiBlitz3.ab3@21183>   BTST #$4,D2
000307FC <AmiBlitz3.ab3@21184>    BEQ.w 'skip
00030802 <AmiBlitz3.ab3@21185>   LEA regtransa,A3
00030806 <AmiBlitz3.ab3@21188>   ANDI.w #$7,D2
00030808 <AmiBlitz3.ab3@21189>   MOVE.w D2,D1
0003080A <AmiBlitz3.ab3@21190>   LSL.w #8,D1
0003080C <AmiBlitz3.ab3@21191>   LSL.w #1,D1
0003080E <AmiBlitz3.ab3@21192>   OR.w (A3),D1
00030810 <AmiBlitz3.ab3@21193>   MOVEA.l (A7)+,A3
00030812 <AmiBlitz3.ab3@21194> RTS
00030816 <AmiBlitz3.ab3@21200>   CMP.w #$3C,D0
0003081A <AmiBlitz3.ab3@21201>    BCS.w 'no
0003081E <AmiBlitz3.ab3@21202>   CMP.w #$3E,D0
00030822 <AmiBlitz3.ab3@21203>    BHI.w 'no
00030826 <AmiBlitz3.ab3@21204>   SUBI.w #$3C,D0
00030828 <AmiBlitz3.ab3@21205>   CMP.w D0,D0
0003082A <AmiBlitz3.ab3@21208> RTS
00030834 <AmiBlitz3.ab3@21221>   MOVE.w oldqflag,instringon
0003083A <AmiBlitz3.ab3@21222>   MOVEA.l lastsourcepos,A5
00030840 <AmiBlitz3.ab3@21231>   MOVE.w regnum,-(A7)
00030846 <AmiBlitz3.ab3@21232>   CLR.w regnum
0003084C <AmiBlitz3.ab3@21233>   MOVE.l destpointer,-(A7)
00030852 <AmiBlitz3.ab3@21234>   MOVE.l destbufferend,-(A7)
00030858 <AmiBlitz3.ab3@21235>   MOVE.w dontwrite,-(A7)
0003085E <AmiBlitz3.ab3@21236>   MOVE.w lasta6,-(A7)
00030864 <AmiBlitz3.ab3@21237>   MOVE.w cfetchmode,-(A7)
00030868 <AmiBlitz3.ab3@21238>    BNE.w 'something
00030872 <AmiBlitz3.ab3@21239>   MOVE.l destbufferend,oldlibat
00030878 <AmiBlitz3.ab3@21240>   MOVEA.l constpcat,A0
0003087E <AmiBlitz3.ab3@21241>   MOVE.l A0,destpointer
00030882 <AmiBlitz3.ab3@21242>  BRA.w 'some2
00030888 <AmiBlitz3.ab3@21247>   MOVEA.l destpointer,A0     ;continue in cmode buff
0003088A <AmiBlitz3.ab3@21250>   MOVE.l A0,-(A7)
00030894 <AmiBlitz3.ab3@21251>   MOVE.l constlibat,destbufferend      ;for overflow
0003089A <AmiBlitz3.ab3@21252>   CLR.w dontwrite
000308A2 <AmiBlitz3.ab3@21254>   MOVE.w #$FFFF,lasta6                 ; was -1
000308AA <AmiBlitz3.ab3@21255>   MOVE.w #$FFFF,cfetchmode             ; was -1
000308AE <AmiBlitz3.ab3@21259>     BSR.w arreval                      ;!
000308B0 <AmiBlitz3.ab3@21261>    MOVE.l (a7),a0
000309EC <AmiBlitz3.ab3@21263>  !newcalc
000309F0 <AmiBlitz3.ab3@21264>    BEQ 'l10
000309F2 <AmiBlitz3.ab3@21265>    MOVE.l d0,d3
000309F4 <AmiBlitz3.ab3@21266>    MOVEA.l (A7)+,A0
000309F8 <AmiBlitz3.ab3@21267>  BRA 'bc1
000309FC <AmiBlitz3.ab3@21271>    MOVE.w #$2600,D1              ;move.l d0,d3
00030A02 <AmiBlitz3.ab3@21272>   OR.w regnum,D1
00030A06 <AmiBlitz3.ab3@21273>    BSR.w writeword
00030A0A <AmiBlitz3.ab3@21274>   MOVE.w #$4E75,D1               ;rts!
00030A0E <AmiBlitz3.ab3@21275>    BSR.w writeword
00030A14 <AmiBlitz3.ab3@21277>   MOVE.w dontwrite,D1
00030A18 <AmiBlitz3.ab3@21278>    BNE.w conmemerr
00030A1A <AmiBlitz3.ab3@21280>   MOVEA.l (A7)+,A0
00030A1C <AmiBlitz3.ab3@21282>   NOP
00030A22 <AmiBlitz3.ab3@21284>    JSR Aclearcache                                         ;simple expression
00030A24 <AmiBlitz3.ab3@21286>    JSR (A0)                                                ;writeresult
00030A2A <AmiBlitz3.ab3@21289>   MOVE.w (A7)+,cfetchmode
00030A30 <AmiBlitz3.ab3@21290>   MOVE.w (A7)+,lasta6
00030A36 <AmiBlitz3.ab3@21291>   MOVE.w (A7)+,dontwrite
00030A3C <AmiBlitz3.ab3@21292>   MOVE.l (A7)+,destbufferend
00030A42 <AmiBlitz3.ab3@21293>   MOVE.l (A7)+,destpointer
00030A48 <AmiBlitz3.ab3@21294>   MOVE.w (A7)+,regnum
00030A4E <AmiBlitz3.ab3@21299> JMP reget
00030A52 <AmiBlitz3.ab3@21302> oldlibat:   Ds.l 1
00030A58 <AmiBlitz3.ab3@21306>   LEA incdir,A0
00030A5C <AmiBlitz3.ab3@21309>   CMP.w #$22,D0     ;'"'
00030A60 <AmiBlitz3.ab3@21310>    BEQ.w 'skip
00030A62 <AmiBlitz3.ab3@21311>   MOVE.b D0,(A0)+
00030A64 <AmiBlitz3.ab3@21312>   TST.w D0
00030A68 <AmiBlitz3.ab3@21313>    BEQ.w 'done
00030A6C <AmiBlitz3.ab3@21314>    BMI.w syntaxerr
00030A72 <AmiBlitz3.ab3@21317>   JSR get1bytemain                                         ;_long
00030A76 <AmiBlitz3.ab3@21318>  BRA.w 'loop
00030A78 <AmiBlitz3.ab3@21321> RTS
00030A7E <AmiBlitz3.ab3@21328>   LEA ptr_parameterstore,A1                                ;getparameter
00030A84 <AmiBlitz3.ab3@21329>   LEA incdir,A0
00030A86 <AmiBlitz3.ab3@21330>   MOVEQ.l #-$01,D2
00030A88 <AmiBlitz3.ab3@21333>     ADDQ.w #1,D2
00030A8A <AmiBlitz3.ab3@21334>     MOVE.b (A0)+,(A1)+
00030A8E <AmiBlitz3.ab3@21335>   BNE.w 'loop0
00030A90 <AmiBlitz3.ab3@21336>   SUBQ.w #1,A1
00030A9A <AmiBlitz3.ab3@21339>   MOVE.w oldqflag,instringon
00030AA0 <AmiBlitz3.ab3@21340>   MOVEA.l lastsourcepos,A5
00030AA6 <AmiBlitz3.ab3@21344>   JSR get1bytemain
00030AA8 <AmiBlitz3.ab3@21345>   TST.w D0
00030AAC <AmiBlitz3.ab3@21346>    BMI.w syntaxerr
00030AB0 <AmiBlitz3.ab3@21347>   CMP.b #$22,D0         ;'"'
00030AB4 <AmiBlitz3.ab3@21348>    BEQ.w 'loop
00030AB6 <AmiBlitz3.ab3@21349>   MOVE.b D0,(A1)+
00030ABA <AmiBlitz3.ab3@21350>    BEQ.w 'done
00030ABC <AmiBlitz3.ab3@21351>   ADDQ.w #1,D2
00030AC0 <AmiBlitz3.ab3@21352>  BRA.w 'loop
00030AC2 <AmiBlitz3.ab3@21355>   TST.w D2
00030AC6 <AmiBlitz3.ab3@21356>    BEQ.w syntaxerr
00030AC8 <AmiBlitz3.ab3@21357> RTS
00030ACE <AmiBlitz3.ab3@21364>   MOVEA.l constantbase,A2
00030AD2 <AmiBlitz3.ab3@21366>   MOVEA.l $E(A2),A5
00030AD8 <AmiBlitz3.ab3@21368>   MOVE.l a5,includesourceline
00030ADE <AmiBlitz3.ab3@21369>   LEA inctab,a0
00030AE4 <AmiBlitz3.ab3@21370>   MOVE.w ininclude,d0
00030AE8 <AmiBlitz3.ab3@21371>   MOVE.l $0(a0,d0*4),d0
00030AEC <AmiBlitz3.ab3@21373>   MOVEA.l $4(A2),A0
00030AF0 <AmiBlitz3.ab3@21375>   LEA $0(A0,D0.l),A0   ;end of buffer!
00030AF2 <AmiBlitz3.ab3@21376>   MOVEA.l A5,A1
00030AF4 <AmiBlitz3.ab3@21379>     CMPA.l A0,A1
00030AF8 <AmiBlitz3.ab3@21380>      BCC.w readpend
00030AFA <AmiBlitz3.ab3@21381>   TST.b (A1)+
00030AFE <AmiBlitz3.ab3@21382>   BNE.w 'loop
00030B02 <AmiBlitz3.ab3@21383> BRA.w imakeend
00030B06 <AmiBlitz3.ab3@21388>   MOVEA.l $4(A2),A1
00030B08 <AmiBlitz3.ab3@21391>   CMPA.l A0,A5
00030B0C <AmiBlitz3.ab3@21392>   BCC.w 'skip
00030B0E <AmiBlitz3.ab3@21393>   MOVE.b (A5)+,(A1)+
00030B12 <AmiBlitz3.ab3@21394>  BRA.w 'loop
00030B14 <AmiBlitz3.ab3@21397>   MOVE.l A1,D0
00030B18 <AmiBlitz3.ab3@21398>   SUB.l $4(A2),D0
00030B1E <AmiBlitz3.ab3@21400>   LEA inctab,a0
00030B20 <AmiBlitz3.ab3@21401>   MOVEQ #0,d1
00030B26 <AmiBlitz3.ab3@21402>   MOVE.w ininclude,d1
00030B2A <AmiBlitz3.ab3@21403>   MOVE.l d0,0(a0,d1*4)
00030B30 <AmiBlitz3.ab3@21406>   MOVEA.l _dosbase,A6
00030B34 <AmiBlitz3.ab3@21407>   MOVE.l $8(A2),D1
00030B36 <AmiBlitz3.ab3@21408>   MOVE.l A1,D2
00030B3C <AmiBlitz3.ab3@21410>   MOVE.l D2,include_base
00030B42 <AmiBlitz3.ab3@21411>   MOVE.l #$10000000,d3                                     ;load whole file
00030B44 <AmiBlitz3.ab3@21414>   SUB.l D0,D3
00030B48 <AmiBlitz3.ab3@21416>    JSR _Read(A6)
00030B4A <AmiBlitz3.ab3@21418>   TST.l D0
00030B4E <AmiBlitz3.ab3@21419>    BMI.w error_reading_file
00030B52 <AmiBlitz3.ab3@21421>    BEQ.w closeinc
00030B58 <AmiBlitz3.ab3@21422>    MOVE.l D0,include_length
00030B9A <AmiBlitz3.ab3@21423>    !ComData_GetL{comPtr_PreProcessor,include_preprocessor}
00030BC4 <AmiBlitz3.ab3@21424>    !basic
00030BD4 <AmiBlitz3.ab3@21425>    ilen.l  = Peek.l(?include_length)
00030BE4 <AmiBlitz3.ab3@21426>    ibase.l = Peek.l(?include_base)
00030BF4 <AmiBlitz3.ab3@21427>    ido.l   = Peek.l(?include_process)
00030C04 <AmiBlitz3.ab3@21428>    *tn.preprocessor = Peek.l(?include_preprocessor)
00030C0E <AmiBlitz3.ab3@21429>    If ido
00030C20 <AmiBlitz3.ab3@21430>      ioffset.l = SkipXtraHeader{ibase,ilen}
00030C46 <AmiBlitz3.ab3@21431>      nilen.l = preproc_Tokenize{*tn,ibase+ioffset,ibase,ilen-ioffset}
00030C58 <AmiBlitz3.ab3@21432>      If nilen>0
00030C68 <AmiBlitz3.ab3@21436>        Poke.l ?include_length,nilen
00030C86 <AmiBlitz3.ab3@21439>    !asm
00030C90 <AmiBlitz3.ab3@21440>    MOVE.l #0,include_process
00030C96 <AmiBlitz3.ab3@21441>    MOVE.l include_length,D0
00030C9C <AmiBlitz3.ab3@21442>    LEA inctab,a0
00030C9E <AmiBlitz3.ab3@21443>    MOVEQ #0,d1
00030CA4 <AmiBlitz3.ab3@21444>    MOVE.w ininclude,d1
00030CA8 <AmiBlitz3.ab3@21445>    ADD.l d0,0(a0,d1*4)
00030CAC <AmiBlitz3.ab3@21449>   MOVEA.l $4(A2),A5
00030CB0 <AmiBlitz3.ab3@21452>    MOVE.l 0(a0,d1*4),d0
00030CB4 <AmiBlitz3.ab3@21454>   CLR.b $0(A5,D0.l)
00030CB6 <AmiBlitz3.ab3@21457>   MOVEA.l A5,A0
00030CB8 <AmiBlitz3.ab3@21460>     TST.b (A0)+
00030CBC <AmiBlitz3.ab3@21461>   BNE.w 'loop2
00030CC0 <AmiBlitz3.ab3@21462>   MOVE.l A0,$E(A2)
00030CC2 <AmiBlitz3.ab3@21463> RTS
00030CC6 <AmiBlitz3.ab3@21466> include_length:        Dc.l 0                              ; for tokenizer!
00030CCA <AmiBlitz3.ab3@21467> include_base:          Dc.l 0
00030CCE <AmiBlitz3.ab3@21468> include_process:       Dc.l 0
00030CD2 <AmiBlitz3.ab3@21469> include_preprocessor:  Dc.l 0
00030CD6 <AmiBlitz3.ab3@21473>   MOVE.l $8(A2),D1
00030CDC <AmiBlitz3.ab3@21474>   MOVEA.l _dosbase,A6
00030CE0 <AmiBlitz3.ab3@21475>   JSR _Close(a6)
00030CE6 <AmiBlitz3.ab3@21476>   MOVEA.l _execbase,A6
00030CEA <AmiBlitz3.ab3@21477>   MOVEA.l $4(A2),A1
00030CF0 <AmiBlitz3.ab3@21478>   MOVE.l #$400*8,D0         ; #inclen                               ;exit include
00030CF4 <AmiBlitz3.ab3@21483>   JSR _FreeVec(a6)
00030CFA <AmiBlitz3.ab3@21486>   MOVE.l (A2),constantbase
00030CFC <AmiBlitz3.ab3@21487>   MOVEA.l A2,A1
00030CFE <AmiBlitz3.ab3@21488>   MOVEQ.l #$00,D0
00030D02 <AmiBlitz3.ab3@21489>   MOVE.b $12(A2),D0
00030D08 <AmiBlitz3.ab3@21490>   MOVEA.l _execbase,A6
00030D0E <AmiBlitz3.ab3@21493>   MOVE.l mempool2,a0
00030D12 <AmiBlitz3.ab3@21494>   JSR _FreePooled(A6)
00030D18 <AmiBlitz3.ab3@21495>   JSR zero_includename
00030D1E <AmiBlitz3.ab3@21497>   SUBQ.w #1,ininclude
00030D22 <AmiBlitz3.ab3@21498>   BNE.w readinc
00030D28 <AmiBlitz3.ab3@21502>   LEA _include,a0
00030D2C <AmiBlitz3.ab3@21503>   MOVEM.l a0-a6/d0-d7,-(a7)
00030D32 <AmiBlitz3.ab3@21504>   LEA ptr_parameterstore,a1
00030D34 <AmiBlitz3.ab3@21507>     MOVE.b (a0)+,(a1)+
00030D38 <AmiBlitz3.ab3@21508>   BNE 'l1b
00030D3A <AmiBlitz3.ab3@21509>   MOVEQ #9,d2
00030D40 <AmiBlitz3.ab3@21510>   JSR findlabel2
00030D44 <AmiBlitz3.ab3@21511>   BNE 'd
00030D48 <AmiBlitz3.ab3@21512>   CLR.l 8(a2)
00030D4C <AmiBlitz3.ab3@21515>   MOVEM.l (a7)+,a0-a6/d0-d7
00030D4E <AmiBlitz3.ab3@21517> RTS
00030D54 <AmiBlitz3.ab3@21522>   MOVE.l unusedfunc,d0
00030D58 <AmiBlitz3.ab3@21523>   BEQ 'noclear
00030D5C <AmiBlitz3.ab3@21524>   MOVEM.l d0-d2/a0-a1/a6,-(a7)
00030D5E <AmiBlitz3.ab3@21527>     MOVE.l d0,a1
00030D62 <AmiBlitz3.ab3@21528>     MOVE.l 4(a1),d0
00030D64 <AmiBlitz3.ab3@21529>     MOVE.l (a1),d2
00030D6A <AmiBlitz3.ab3@21530>     MOVE.l _execbase,a6
00030D6E <AmiBlitz3.ab3@21531>     JSR _FreeMem(a6)
00030D70 <AmiBlitz3.ab3@21532>     MOVE.l d2,d0
00030D74 <AmiBlitz3.ab3@21533>   BNE 'f1
00030D7A <AmiBlitz3.ab3@21534>   CLR.l unusedfunc
00030D7E <AmiBlitz3.ab3@21535>   MOVEM.l (a7)+,a0-a1/a6/d0-d2
00030D80 <AmiBlitz3.ab3@21538> RTS
00030D86 <AmiBlitz3.ab3@21543>   MOVEA.l xinclude_base,A2
00030D8C <AmiBlitz3.ab3@21544>   CLR.l xinclude_base
00030D90 <AmiBlitz3.ab3@21547>     CMPA.w #$0,A2
00030D94 <AmiBlitz3.ab3@21548>      BEQ.w 'done
00030D96 <AmiBlitz3.ab3@21549>     MOVEQ.l #$00,D0
00030D9A <AmiBlitz3.ab3@21550>     MOVE.b 4+8(A2),D0           ; was 4 org
00030D9C <AmiBlitz3.ab3@21551>     MOVEA.l A2,A1
00030D9E <AmiBlitz3.ab3@21552>     MOVEA.l (A2),A2
00030DA4 <AmiBlitz3.ab3@21553>     MOVEA.l _execbase,A6
00030DAA <AmiBlitz3.ab3@21556>     MOVE.l mempool2,a0
00030DAE <AmiBlitz3.ab3@21557>     JSR _FreePooled(A6)
00030DB2 <AmiBlitz3.ab3@21559>  BRA.w 'loop
00030DB4 <AmiBlitz3.ab3@21562> RTS
00030DBA <AmiBlitz3.ab3@21566>   MOVEA.l constantbase,A2
00030DC0 <AmiBlitz3.ab3@21567>   CLR.l constantbase
00030DC4 <AmiBlitz3.ab3@21570>     CMPA.w #$0,A2
00030DC8 <AmiBlitz3.ab3@21571>      BEQ.w 'done
00030DCC <AmiBlitz3.ab3@21572>     MOVE.l $8(A2),D1
00030DD0 <AmiBlitz3.ab3@21573>      BEQ.w 'noclose
00030DD6 <AmiBlitz3.ab3@21574>     MOVEA.l _dosbase,A6
00030DDA <AmiBlitz3.ab3@21575>      JSR _Close(A6)
00030DDE <AmiBlitz3.ab3@21578>     MOVE.l $4(A2),D0
00030DE2 <AmiBlitz3.ab3@21579>      BEQ.w 'skip
00030DE4 <AmiBlitz3.ab3@21580>     MOVEA.l D0,A1
00030DEA <AmiBlitz3.ab3@21581>     MOVE.l #$400*8,D0          ; was #inclen
00030DF0 <AmiBlitz3.ab3@21582>     MOVEA.l _execbase,A6
00030DF6 <AmiBlitz3.ab3@21585>     MOVE.l mempool,a0
00030DFA <AmiBlitz3.ab3@21586>     JSR _FreeVec(a6)
00030DFC <AmiBlitz3.ab3@21590>     MOVEQ.l #$00,D0
00030E00 <AmiBlitz3.ab3@21591>     MOVE.b $12(A2),D0
00030E02 <AmiBlitz3.ab3@21592>     MOVEA.l A2,A1
00030E04 <AmiBlitz3.ab3@21593>     MOVEA.l (A2),A2
00030E0A <AmiBlitz3.ab3@21594>     MOVEA.l _execbase,A6
00030E10 <AmiBlitz3.ab3@21597>     MOVE.l mempool2,a0
00030E14 <AmiBlitz3.ab3@21598>     JSR _FreePooled(A6)
00030E18 <AmiBlitz3.ab3@21600>  BRA.w 'loop
00030E1A <AmiBlitz3.ab3@21603> RTS
00030E1C <AmiBlitz3.ab3@21610>   SWAP D0
00030E20 <AmiBlitz3.ab3@21611>    BSR.w pokedata2
00030E22 <AmiBlitz3.ab3@21612>   SWAP D0
00030E28 <AmiBlitz3.ab3@21617>   MOVEA.l data2,A4
00030E2E <AmiBlitz3.ab3@21618>   CMPA.l allat,A4
00030E32 <AmiBlitz3.ab3@21619>    BCC.w 'over
00030E34 <AmiBlitz3.ab3@21620>   MOVE.w D0,(A4)+
00030E3A <AmiBlitz3.ab3@21621>   MOVE.l A4,data2
00030E3C <AmiBlitz3.ab3@21622>  RTS
00030E44 <AmiBlitz3.ab3@21625>   MOVE.w #$FFFF,dontwrite        ; was -1
00030E4A <AmiBlitz3.ab3@21626>   ADDQ.l #2,data2
00030E4C <AmiBlitz3.ab3@21627> RTS
00030E52 <AmiBlitz3.ab3@21631>   MOVEA.l data2,A4
00030E58 <AmiBlitz3.ab3@21632>   CMPA.l allat,A4
00030E5C <AmiBlitz3.ab3@21633>    BCC.w 'over
00030E5E <AmiBlitz3.ab3@21634>   MOVE.b D0,(A4)+
00030E64 <AmiBlitz3.ab3@21635>   MOVE.l A4,data2
00030E66 <AmiBlitz3.ab3@21636>  RTS
00030E6E <AmiBlitz3.ab3@21639>   MOVE.w #$FFFF,dontwrite        ; was -1
00030E74 <AmiBlitz3.ab3@21640>   ADDQ.l #1,data2
00030E76 <AmiBlitz3.ab3@21641> RTS
00030E7A <AmiBlitz3.ab3@21647>   CMP.w #$22,D0          ;'"'
00030E7E <AmiBlitz3.ab3@21648>    BNE.w syntaxerr
00030E84 <AmiBlitz3.ab3@21651>   JSR get1bytemain
00030E88 <AmiBlitz3.ab3@21652>   CMP.b #$22,D0
00030E8C <AmiBlitz3.ab3@21653>    BEQ.w 'done
00030E8E <AmiBlitz3.ab3@21654>   TST.w D0
00030E92 <AmiBlitz3.ab3@21655>    BEQ.w syntaxerr
00030E94 <AmiBlitz3.ab3@21656>   MOVE.b D0,(A0)+
00030E98 <AmiBlitz3.ab3@21657>  BRA.w 'getsp2
00030E9A <AmiBlitz3.ab3@21660>   CLR.b (A0)
00030E9C <AmiBlitz3.ab3@21661> RTS
00030E9E <AmiBlitz3.ab3@21665>   TST.l D3
00030EA0 <AmiBlitz3.ab3@21666> RTS
00030EA6 <AmiBlitz3.ab3@21672>   LEA ptr_parameterstore,A0
00030EAC <AmiBlitz3.ab3@21673>   LEA namebuff2,A1
00030EAE <AmiBlitz3.ab3@21676>     MOVE.b (A0)+,D0
00030EB2 <AmiBlitz3.ab3@21677>     BEQ.w 'short
00030EB4 <AmiBlitz3.ab3@21678>   CMP.b (A1)+,D0
00030EB8 <AmiBlitz3.ab3@21679>   BEQ.w 'loop
00030EBA <AmiBlitz3.ab3@21680>  RTS
00030EBC <AmiBlitz3.ab3@21683>   TST.b (A1)
00030EC0 <AmiBlitz3.ab3@21684>   BNE.w 'lt
00030EC2 <AmiBlitz3.ab3@21685>  RTS
00030EC6 <AmiBlitz3.ab3@21688>   CMP.w #$1,D0
00030EC8 <AmiBlitz3.ab3@21689> RTS
00030ECC <AmiBlitz3.ab3@21696>   CMP.w #$2E,D0                ;"."                            ;dodeftype
00030ED0 <AmiBlitz3.ab3@21697>    BNE.w syntaxerr
00030ED4 <AmiBlitz3.ab3@21698>   BSR.w getparameter2
00030EDA <AmiBlitz3.ab3@21699>   LEA newtypebase,A2
00030EDE <AmiBlitz3.ab3@21700>   BSR.w findtype
00030EE2 <AmiBlitz3.ab3@21701>    BNE.w notypeerr
00030EE8 <AmiBlitz3.ab3@21703>   TST.b declare
00030EEC <AmiBlitz3.ab3@21704>    BNE 'l1
00030EF2 <AmiBlitz3.ab3@21705>   TST.b declare2
00030EF6 <AmiBlitz3.ab3@21706>    BEQ 'l2
00030EFE <AmiBlitz3.ab3@21709>   MOVE.b #2,nowdeclare
00030F04 <AmiBlitz3.ab3@21713>   JSR reget
00030F08 <AmiBlitz3.ab3@21714>    BNE.w 'more
00030F0E <AmiBlitz3.ab3@21715>   MOVE.l A2,defaulttype
00030F10 <AmiBlitz3.ab3@21716>  RTS
00030F16 <AmiBlitz3.ab3@21722>   MOVE.l defaulttype,-(A7)
00030F1C <AmiBlitz3.ab3@21723>   MOVE.l A2,defaulttype
00030F20 <AmiBlitz3.ab3@21726>   BSR.w getparameter
00030F24 <AmiBlitz3.ab3@21727>    BSR.w fetchvars
00030F28 <AmiBlitz3.ab3@21728>   CMP.w #$2C,D0            ;","
00030F2C <AmiBlitz3.ab3@21729>    BNE.w 'done
00030F32 <AmiBlitz3.ab3@21730>    JSR get1bytemain                                        ; was BSR.w
00030F36 <AmiBlitz3.ab3@21731>  BRA.w 'loopz
00030F3C <AmiBlitz3.ab3@21734>   MOVE.l (A7)+,defaulttype
00030F3E <AmiBlitz3.ab3@21735> RTS
00030F42 <AmiBlitz3.ab3@21739>   LEA $4(A5),A2                                            ;fehler function
00030F44 <AmiBlitz3.ab3@21742>   MOVE.l A2,D0
00030F48 <AmiBlitz3.ab3@21747>   BSR.w getparameter
00030F4C <AmiBlitz3.ab3@21748>   BSR.w fetchvars
00030F50 <AmiBlitz3.ab3@21749>   BSR.w calcvar
00030F54 <AmiBlitz3.ab3@21751>   CMP.b #$7,D2
00030F58 <AmiBlitz3.ab3@21752>    BNE.w mismatcherr
00030F5C <AmiBlitz3.ab3@21753>   MOVE.w varmode(PC),-(A7)
00030F60 <AmiBlitz3.ab3@21754>   CMP.w #$3D,D0            ;"="
00030F64 <AmiBlitz3.ab3@21755>    BNE.w syntaxerr
00030F68 <AmiBlitz3.ab3@21756>   BTST #$F,D2
00030F6C <AmiBlitz3.ab3@21757>    BNE.w 'already
00030F70 <AmiBlitz3.ab3@21758>   MOVE.w maxprep1(PC),D1
00030F74 <AmiBlitz3.ab3@21759>   BSR.w pokewda5s
00030F76 <AmiBlitz3.ab3@21760>   MOVE.w D3,D1
00030F7A <AmiBlitz3.ab3@21761>   BSR.w writeword
00030F7E <AmiBlitz3.ab3@21764>   MOVE.w maxprep2(PC),D1
00030F82 <AmiBlitz3.ab3@21765>   BSR.w writeword
00030F88 <AmiBlitz3.ab3@21766>   ADDQ.w #1,regnum
00030F8A <AmiBlitz3.ab3@21767>   MOVEQ.l #$03,D2
00030F8E <AmiBlitz3.ab3@21768>   BSR.w eval
00030F94 <AmiBlitz3.ab3@21769>   MOVE.l #$D000,D1              ; was #maxlen
00030F9A <AmiBlitz3.ab3@21771>   MOVE.l d1,lastinstruction
00030F9C <AmiBlitz3.ab3@21773>   TST.w (A7)+
00030FA0 <AmiBlitz3.ab3@21774>    BEQ.w Atokejsr
00030FA2 <AmiBlitz3.ab3@21775>   ADDQ.w #1,D1
00030FA6 <AmiBlitz3.ab3@21776> BRA.w Atokejsr
00030FA8 <AmiBlitz3.ab3@21780>   MOVE.w D0,D1
00030FAC <AmiBlitz3.ab3@21781>    BPL.w syntaxerr
00030FB0 <AmiBlitz3.ab3@21782>   BCLR #$F,D1
00030FB6 <AmiBlitz3.ab3@21783>    JSR searchinstr
00030FBA <AmiBlitz3.ab3@21784>   MOVE.l $12(A2),D0
00030FBE <AmiBlitz3.ab3@21785>   TST.w -$2(A2,D0.L)
00030FC2 <AmiBlitz3.ab3@21786>    BEQ.w freeerr
00030FC4 <AmiBlitz3.ab3@21787>   MOVEQ.l #$02,D2
00030FC6 <AmiBlitz3.ab3@21788>   MOVE.l A2,-(A7)
00030FCA <AmiBlitz3.ab3@21790>    BSR.w eval
00030FCC <AmiBlitz3.ab3@21792>   MOVEA.l (A7)+,A2
00030FD2 <AmiBlitz3.ab3@21793>   MOVE.l A2,mymaxlib
00030FD6 <AmiBlitz3.ab3@21795>   ADDA.l $12(A2),A2
00030FDC <AmiBlitz3.ab3@21796>   TST.b debugmode
00030FE0 <AmiBlitz3.ab3@21797>    BEQ.w 'pen
00030FE6 <AmiBlitz3.ab3@21801>   MOVE.w regnum,D1
00030FE8 <AmiBlitz3.ab3@21802>   LSL.w #8,D1
00030FEA <AmiBlitz3.ab3@21803>   LSL.w #1,D1
00030FEE <AmiBlitz3.ab3@21804>   ORI.w #$B07C,D1       ;cmp #x,dn
00030FF2 <AmiBlitz3.ab3@21805>    BSR.w writeword
00030FF6 <AmiBlitz3.ab3@21806>   MOVE.w -$4(A2),D1
00030FFA <AmiBlitz3.ab3@21807>    BSR.w writeword
00031000 <AmiBlitz3.ab3@21808>   MOVE.l maxchk,D1      ;bcs
00031004 <AmiBlitz3.ab3@21809>    BSR.w writelong
00031006 <AmiBlitz3.ab3@21810>   MOVE.l A2,-(A7)
0003100A <AmiBlitz3.ab3@21811>   MOVE.w #$C30A,D1      ; was #maxerr,
0003100E <AmiBlitz3.ab3@21812>    BSR.w Atokejsr
00031010 <AmiBlitz3.ab3@21813>   MOVEA.l (A7)+,A2
00031014 <AmiBlitz3.ab3@21816>   MOVE.w -$2(A2),D2     ;# shifts
0003101A <AmiBlitz3.ab3@21819>   MOVE.w regnum,D1
00031020 <AmiBlitz3.ab3@21820>   OR.w lslimm,D1
00031024 <AmiBlitz3.ab3@21821>   CMP.w #$8,D2
00031028 <AmiBlitz3.ab3@21822>    BCS.w 'under
0003102C <AmiBlitz3.ab3@21823>    BSR.w writeword
0003102E <AmiBlitz3.ab3@21824>   SUBQ.w #8,D2
00031032 <AmiBlitz3.ab3@21825>    BNE.w 'loop
00031036 <AmiBlitz3.ab3@21826>  BRA.w 'shdone
00031038 <AmiBlitz3.ab3@21829>   MOVE.w D2,D0
0003103A <AmiBlitz3.ab3@21830>   LSL.w #8,D0
0003103C <AmiBlitz3.ab3@21831>   LSL.w #1,D0
0003103E <AmiBlitz3.ab3@21832>   OR.w D0,D1
00031042 <AmiBlitz3.ab3@21833>   BSR.w writeword
00031044 <AmiBlitz3.ab3@21836> RTS
00031048 <AmiBlitz3.ab3@21841>   Dc.b $26,$6D,$00,$00                                     ;MOVEA.L $0000(A5),A3
0003104A <AmiBlitz3.ab3@21842>   Dc.b $D6,$C0                                             ;ADDA.W  D0,A3
0003104E <AmiBlitz3.ab3@21846> mymaxlib:  Ds.l 1
00031052 <AmiBlitz3.ab3@21850>   BSR.w getmaxel
00031056 <AmiBlitz3.ab3@21852>   LEA free(PC),A0
0003105A <AmiBlitz3.ab3@21853>   LEA freef(PC),A1
00031060 <AmiBlitz3.ab3@21854>   MOVE.w -$6(A2),$2(A0)
00031064 <AmiBlitz3.ab3@21855>   BSR.w pokecode
00031068 <AmiBlitz3.ab3@21857>   MOVE.l -$A(A2),D1
0003106C <AmiBlitz3.ab3@21860>   BEQ.w nosuperr
00031070 <AmiBlitz3.ab3@21861>   MOVEA.l mymaxlib(PC),A2
00031074 <AmiBlitz3.ab3@21862> BRA.w Amakelibsub
00031078 <AmiBlitz3.ab3@21866>   BSR.w getmaxel
0003107E <AmiBlitz3.ab3@21868>   LEA use,A0
00031084 <AmiBlitz3.ab3@21869>   LEA usef,A1
0003108A <AmiBlitz3.ab3@21870>   MOVE.w -$6(A2),$2(A0)
00031090 <AmiBlitz3.ab3@21871>   MOVE.w -$6(A2),-$2(A1)
00031094 <AmiBlitz3.ab3@21872>   ADDQ.w #4,-$2(A1)
00031098 <AmiBlitz3.ab3@21873>   BSR.w pokecode
0003109C <AmiBlitz3.ab3@21875>   MOVE.l -$E(A2),D1
000310A0 <AmiBlitz3.ab3@21877> BRA.w maxjsr
000310A6 <AmiBlitz3.ab3@21882>   JSR get1bytemain
000310AC <AmiBlitz3.ab3@21885>   MOVE.l firstiff,D0
000310B0 <AmiBlitz3.ab3@21886>    BEQ.w noiferr
000310B2 <AmiBlitz3.ab3@21887>   MOVEA.l D0,A0
000310B8 <AmiBlitz3.ab3@21888>   CMPI.b #$1,$D(A0)
000310BC <AmiBlitz3.ab3@21889>    BEQ.w illelseerr
000310C0 <AmiBlitz3.ab3@21890>   MOVE.w #$6000,D1
000310C6 <AmiBlitz3.ab3@21893>     TST.b fast
000310CA <AmiBlitz3.ab3@21894>     BEQ 'l1
000310D0 <AmiBlitz3.ab3@21895>     OR.l #$ff,d1
000310D4 <AmiBlitz3.ab3@21896>     BSR writeword
000310D6 <AmiBlitz3.ab3@21901>   SWAP D1
000310DA <AmiBlitz3.ab3@21902>   BSR.w writelong
000310DC <AmiBlitz3.ab3@21903>   MOVEQ.l #$00,D1
000310E0 <AmiBlitz3.ab3@21904>   BSR.w doendif2
000310E8 <AmiBlitz3.ab3@21905>   MOVE.l destpointer,$8(A0)
000310EC <AmiBlitz3.ab3@21906> BRA.w do_then
000310F2 <AmiBlitz3.ab3@21910>   LEA ptr_parameterstore,A0
000310F4 <AmiBlitz3.ab3@21911>   MOVE.l A0,-(A7)
000310F8 <AmiBlitz3.ab3@21912>   BSR.w getsp
000310FC <AmiBlitz3.ab3@21913> BRA.w handle_compileerror
00031100 <AmiBlitz3.ab3@21917>   BSR.w evalconst
00031102 <AmiBlitz3.ab3@21918>   MOVEQ.l #$05,D1       ;beq
0003110C <AmiBlitz3.ab3@21921>   MOVE.w oldqflag,instringon
00031112 <AmiBlitz3.ab3@21922>   MOVEA.l lastsourcepos,A5
00031118 <AmiBlitz3.ab3@21924>   LEA numcom,A0
0003111C <AmiBlitz3.ab3@21925> BRA.w compare
00031122 <AmiBlitz3.ab3@21929>   LEA ptr_parameterstore,A0
00031126 <AmiBlitz3.ab3@21930>   BSR.w getsp
0003112C <AmiBlitz3.ab3@21931>   JSR get1bytemain
00031130 <AmiBlitz3.ab3@21932>   BSR.w collif
00031136 <AmiBlitz3.ab3@21933>   LEA namebuff2,A0
0003113A <AmiBlitz3.ab3@21934>   BSR.w getsp
00031140 <AmiBlitz3.ab3@21935>   LEA strcom,A0
00031142 <AmiBlitz3.ab3@21943>   LSL.w #2,D1
00031148 <AmiBlitz3.ab3@21944>   LEA CIF_branches,A1
0003114C <AmiBlitz3.ab3@21945>   MOVE.l $0(A1,D1.W),-(A7)
0003114E <AmiBlitz3.ab3@21946>   MOVEQ.l #-$01,D1           ;comp flag
00031150 <AmiBlitz3.ab3@21948>   JSR (A0)
00031152 <AmiBlitz3.ab3@21950>   MOVEA.l (A7)+,A1
00031154 <AmiBlitz3.ab3@21951> JMP (A1)
00031158 <AmiBlitz3.ab3@21955>   BEQ.w cifdo
0003115C <AmiBlitz3.ab3@21956> BRA.w cifdont
00031160 <AmiBlitz3.ab3@21959>   BNE.w cifdo
00031164 <AmiBlitz3.ab3@21960> BRA.w cifdont
00031168 <AmiBlitz3.ab3@21963>   BLT.w cifdo
0003116C <AmiBlitz3.ab3@21964> BRA.w cifdont
00031170 <AmiBlitz3.ab3@21967>   BLE.w cifdo
00031174 <AmiBlitz3.ab3@21968> BRA.w cifdont
00031178 <AmiBlitz3.ab3@21971>   BGT.w cifdo
0003117C <AmiBlitz3.ab3@21972> BRA.w cifdont
00031180 <AmiBlitz3.ab3@21975>   BGE.w cifdo
00031182 <AmiBlitz3.ab3@21978>   MOVEQ.l #$00,D1
00031188 <AmiBlitz3.ab3@21981>   MOVEA.l concomsp,A0
0003118E <AmiBlitz3.ab3@21982>   MOVE.w skipcode,(A0)+
00031194 <AmiBlitz3.ab3@21983>   MOVE.l A0,concomsp
0003119A <AmiBlitz3.ab3@21984>   MOVE.w D1,skipcode
000311A0 <AmiBlitz3.ab3@21985>   JSR get1bytemain
000311A4 <AmiBlitz3.ab3@21986>    BNE.w syntaxerr
000311AA <AmiBlitz3.ab3@21987> JMP bakup
000311B2 <AmiBlitz3.ab3@21991> rescode:   Dc.b $2B,$7c,$00,$00,$00,$00 :   Ds.w 1         ;MOVE.L  #$00000000,$0000(A5)
000311B6 <AmiBlitz3.ab3@21992> rescode2:  Dc.b $2B,$40                 :   Ds.w 1         ;MOVE.L  D0,$0000(A5)
000311BA <AmiBlitz3.ab3@21999>   MOVE.w #$FC17,D1
000311C0 <AmiBlitz3.ab3@22000>   JSR uselib
000311C6 <AmiBlitz3.ab3@22002>   JSR reget
000311CA <AmiBlitz3.ab3@22003>    BEQ.w 'resbeg
000311CE <AmiBlitz3.ab3@22004>   BSR.w makealab2                                          ;get label name!
000311D2 <AmiBlitz3.ab3@22005>   MOVE.w rescode(PC),D1
000311D6 <AmiBlitz3.ab3@22006>   BSR.w writeword
000311DC <AmiBlitz3.ab3@22007>   JSR addoff                                               ;add offset
000311E0 <AmiBlitz3.ab3@22008>   MOVE.l $C(A2),D1
000311E4 <AmiBlitz3.ab3@22009>   BSR.w writelong
000311E8 <AmiBlitz3.ab3@22010>   MOVE.w rescode+6(PC),D1
000311EC <AmiBlitz3.ab3@22011>   BSR.w writeword
000311F0 <AmiBlitz3.ab3@22012>   MOVE.l $4(A2),D1                                         ;is it outstanding?
000311F4 <AmiBlitz3.ab3@22013>   BEQ.w 'no
000311F6 <AmiBlitz3.ab3@22015>   MOVEA.l D1,A1
000311FA <AmiBlitz3.ab3@22016>   ADDQ.l #1,$4(A1)                                         ;make odd - flag for data reference.
000311FC <AmiBlitz3.ab3@22017>  RTS
000311FE <AmiBlitz3.ab3@22022>  RTS
00031202 <AmiBlitz3.ab3@22025>   MOVE.w #$CD00,D1
00031208 <AmiBlitz3.ab3@22026>   JSR Atokejsr
0003120C <AmiBlitz3.ab3@22027>   MOVE.l rescode2(PC),D1
00031212 <AmiBlitz3.ab3@22028> JMP writelong
00031216 <AmiBlitz3.ab3@22032>   MOVE.w #$FC17,D1
0003121C <AmiBlitz3.ab3@22033>   JSR uselib
00031222 <AmiBlitz3.ab3@22036>   MOVE.l dataget,D1
00031226 <AmiBlitz3.ab3@22037>   BSR.w writelong
0003122A <AmiBlitz3.ab3@22038>   BSR.w getparameter
0003122E <AmiBlitz3.ab3@22039>   BSR.w fetchvars
00031232 <AmiBlitz3.ab3@22040>   BSR.w calcvar
00031236 <AmiBlitz3.ab3@22041>   BTST #$E,D2
0003123A <AmiBlitz3.ab3@22042>    BEQ.w 'notap
0003123E <AmiBlitz3.ab3@22044>   MOVE.b #$6,D2      ;pointer becomes an address!
00031240 <AmiBlitz3.ab3@22047>   TST.b D2
00031244 <AmiBlitz3.ab3@22048>    BEQ.w noleterr   ;read in a whole struct....later!
0003124A <AmiBlitz3.ab3@22049>   TST.b debugmode
0003124E <AmiBlitz3.ab3@22050>    BEQ.w 'norerr
00031252 <AmiBlitz3.ab3@22052>   MOVE.w #$7000,D1
00031254 <AmiBlitz3.ab3@22053>   MOVE.b D2,D1
00031258 <AmiBlitz3.ab3@22054>   ANDI.b #$F,D1
0003125C <AmiBlitz3.ab3@22055>   BSR.w writeword
00031260 <AmiBlitz3.ab3@22056>   MOVE.w #$C310,D1     ; was  #datachk
00031262 <AmiBlitz3.ab3@22057>   MOVE.w D2,-(A7)
00031266 <AmiBlitz3.ab3@22058>   BSR.w Atokejsr
00031268 <AmiBlitz3.ab3@22059>   MOVE.w (A7)+,D2
0003126C <AmiBlitz3.ab3@22062>   CMP.b #$7,D2
00031270 <AmiBlitz3.ab3@22063>    BEQ.w 'string
00031274 <AmiBlitz3.ab3@22064>   CMP.b #$1,D2
00031278 <AmiBlitz3.ab3@22065>    BNE.w 'notbyte
0003127E <AmiBlitz3.ab3@22067>   LEA dataletb2,A0
00031284 <AmiBlitz3.ab3@22068>   LEA dataletb2f,A1
00031288 <AmiBlitz3.ab3@22069>   BTST #$F,D2
0003128C <AmiBlitz3.ab3@22070>    BEQ.w 'bimm
00031290 <AmiBlitz3.ab3@22071>   BSR.w pokecode
00031294 <AmiBlitz3.ab3@22072>  BRA.w 'next
0003129A <AmiBlitz3.ab3@22075>   LEA dataletb,A0
000312A0 <AmiBlitz3.ab3@22076>   LEA dataletbf,A1
000312A6 <AmiBlitz3.ab3@22078>   TST.w varmode
000312AA <AmiBlitz3.ab3@22079>    BEQ.w 'byteglobal
000312B0 <AmiBlitz3.ab3@22080>   LEA dataletbl,A0
000312B6 <AmiBlitz3.ab3@22081>   LEA dataletblf,A1
000312BA <AmiBlitz3.ab3@22084>   MOVE.w D3,$4(A0)
000312BE <AmiBlitz3.ab3@22085>   BSR.w pokecode
000312C2 <AmiBlitz3.ab3@22086>  BRA.w 'next
000312C8 <AmiBlitz3.ab3@22089>   LEA dataletw,A0
000312CC <AmiBlitz3.ab3@22090>   CMP.b #$3,D2
000312D0 <AmiBlitz3.ab3@22091>    BCS.w 'word
000312D6 <AmiBlitz3.ab3@22092>   LEA dataletl,A0
000312DA <AmiBlitz3.ab3@22095>   BTST #$F,D2
000312DE <AmiBlitz3.ab3@22096>    BEQ.w 'imm
000312E2 <AmiBlitz3.ab3@22097>   MOVE.w $4(A0),D1
000312E6 <AmiBlitz3.ab3@22098>    BSR.w writeword
000312EA <AmiBlitz3.ab3@22099>  BRA.w 'next
000312F0 <AmiBlitz3.ab3@22102>   TST.w varmode
000312F4 <AmiBlitz3.ab3@22103>    BEQ.w 'wlglobal
000312F6 <AmiBlitz3.ab3@22104>   ADDQ.w #6,A0
000312FA <AmiBlitz3.ab3@22107>   MOVE.w D3,$2(A0)
000312FC <AmiBlitz3.ab3@22108>   MOVE.l (A0),D1
00031300 <AmiBlitz3.ab3@22109>   BSR.w writelong
00031306 <AmiBlitz3.ab3@22112>   MOVE.l dataput,D1
0003130A <AmiBlitz3.ab3@22113>    BSR.w writelong
0003130E <AmiBlitz3.ab3@22114>   CMP.w #$2C,D0        ;','
00031312 <AmiBlitz3.ab3@22115>    BEQ.w 'more
00031314 <AmiBlitz3.ab3@22116>  RTS
0003131A <AmiBlitz3.ab3@22119>   JSR get1bytemain
0003131E <AmiBlitz3.ab3@22120>  BRA.w 'loop
00031324 <AmiBlitz3.ab3@22123>   MOVE.w stlenget,D1
00031328 <AmiBlitz3.ab3@22124>    BSR.w writeword     ;move.l (a3)+,-(a7)
0003132C <AmiBlitz3.ab3@22125>   BTST #$F,D2
00031330 <AmiBlitz3.ab3@22126>    BNE.w 'ok
00031336 <AmiBlitz3.ab3@22128>   TST.w varmode
0003133A <AmiBlitz3.ab3@22129>    BEQ.w 'sglobal
00031340 <AmiBlitz3.ab3@22130>   MOVE.w D3,leaampl+2
00031346 <AmiBlitz3.ab3@22131>   MOVE.l leaampl,D1
0003134A <AmiBlitz3.ab3@22132>  BRA.w 'sskip
00031350 <AmiBlitz3.ab3@22135>   MOVE.w D3,leaamp+2
00031356 <AmiBlitz3.ab3@22136>   MOVE.l leaamp,D1
0003135A <AmiBlitz3.ab3@22139>   BSR.w writelong
0003135E <AmiBlitz3.ab3@22142>   MOVE.w #$C701,D1     ;was  #astring
00031364 <AmiBlitz3.ab3@22143>   MOVE.w varmode,D2
00031368 <AmiBlitz3.ab3@22144>    BEQ.w 'global
0003136A <AmiBlitz3.ab3@22145>   SUBQ.w #1,D1
0003136E <AmiBlitz3.ab3@22148>   BSR.w Atokejsr
00031376 <AmiBlitz3.ab3@22149>   MOVE.w #$FFFF,lasta6    ; was -1
0003137C <AmiBlitz3.ab3@22150>   LEA stalign,A0
00031382 <AmiBlitz3.ab3@22151>   LEA stalignf,A1
00031386 <AmiBlitz3.ab3@22152>   BSR.w pokecode
0003138A <AmiBlitz3.ab3@22153> BRA.w 'next
0003138E <AmiBlitz3.ab3@22157>   CMP.w #$2E,D0        ;'.'                                    ;definecode 'lb 'lw 'll
00031392 <AmiBlitz3.ab3@22158>    BNE.w 'word
00031398 <AmiBlitz3.ab3@22159>   JSR get1bytemain
0003139C <AmiBlitz3.ab3@22160>   CMP.w #$77,D0        ;'w'
000313A0 <AmiBlitz3.ab3@22161>    BEQ.w 'word2
000313A4 <AmiBlitz3.ab3@22162>   CMP.w #$62,D0        ;'b'
000313A8 <AmiBlitz3.ab3@22163>    BEQ.w 'byte
000313AC <AmiBlitz3.ab3@22165>   CMP.w #"s",d0        ;'s'
000313B0 <AmiBlitz3.ab3@22166>   BEQ 'single3         
000313B4 <AmiBlitz3.ab3@22167>   CMP.w #"d",d0        ;'d'
000313B8 <AmiBlitz3.ab3@22168>   BEQ 'double3
000313BC <AmiBlitz3.ab3@22170>   CMP.w #$6C,D0        ;'l'
000313C0 <AmiBlitz3.ab3@22171>    BNE.w syntaxerr
000313C2 <AmiBlitz3.ab3@22172>   MOVEQ.l #$02,D1
000313C4 <AmiBlitz3.ab3@22173>  RTS
000313CC <AmiBlitz3.ab3@22177>   MOVE.b #1,iee
000313CE <AmiBlitz3.ab3@22178>   MOVEQ.l #$3,d1
000313D0 <AmiBlitz3.ab3@22179>  RTS
000313D8 <AmiBlitz3.ab3@22182>   MOVE.b #1,iee
000313DA <AmiBlitz3.ab3@22183>   MOVEQ.l #$4,d1
000313DC <AmiBlitz3.ab3@22184>  RTS
000313DE <AmiBlitz3.ab3@22188>   MOVEQ.l #$00,D1
000313E0 <AmiBlitz3.ab3@22189>  RTS
000313E2 <AmiBlitz3.ab3@22192>   MOVEQ.l #$01,D1
000313E4 <AmiBlitz3.ab3@22193>  RTS
000313E6 <AmiBlitz3.ab3@22196>   MOVEQ.l #$01,D1
000313EC <AmiBlitz3.ab3@22197> JMP bakup
000313F0 <AmiBlitz3.ab3@22201>   BSR.w getsize2
000313F2 <AmiBlitz3.ab3@22203>   MOVE.w D1,-(A7)
000313F6 <AmiBlitz3.ab3@22204>    BSR.w evalconst2
000313FA <AmiBlitz3.ab3@22205>   CMP.w #$2C,D0        ;','
000313FE <AmiBlitz3.ab3@22206>    BNE.w syntaxerr
00031400 <AmiBlitz3.ab3@22207>   MOVE.l D3,-(A7)
00031404 <AmiBlitz3.ab3@22208>    BSR.w evalconst2
00031406 <AmiBlitz3.ab3@22209>   MOVE.l D3,D1        ;to put in memory
00031408 <AmiBlitz3.ab3@22210>   MOVE.l (A7)+,D3     ;number of times
0003140A <AmiBlitz3.ab3@22211>   MOVE.w (A7)+,D2
0003140E <AmiBlitz3.ab3@22212>    BEQ.w 'byte
00031412 <AmiBlitz3.ab3@22218>   CMP.w #$1,D2
00031416 <AmiBlitz3.ab3@22219>    BEQ.w 'word
00031418 <AmiBlitz3.ab3@22222>   SWAP D1
0003141C <AmiBlitz3.ab3@22223>    BSR.w writeword
0003141E <AmiBlitz3.ab3@22224>   SWAP D1
00031422 <AmiBlitz3.ab3@22225>    BSR.w writeword
00031424 <AmiBlitz3.ab3@22226>   SUBQ.l #1,D3
00031428 <AmiBlitz3.ab3@22227>    BNE.w 'long
0003142A <AmiBlitz3.ab3@22228>  RTS
0003142E <AmiBlitz3.ab3@22231>    BSR.w writeword
00031430 <AmiBlitz3.ab3@22232>   SUBQ.l #1,D3
00031434 <AmiBlitz3.ab3@22233>    BNE.w 'word
00031436 <AmiBlitz3.ab3@22234>  RTS
0003143A <AmiBlitz3.ab3@22237>    BSR.w writebyte
0003143C <AmiBlitz3.ab3@22238>   SUBQ.l #1,D3
00031440 <AmiBlitz3.ab3@22239>    BNE.w 'byte
00031442 <AmiBlitz3.ab3@22240> RTS
00031446 <AmiBlitz3.ab3@22244>   BSR.w getsize2                                          ;definestorage
00031448 <AmiBlitz3.ab3@22245>   MOVE.w D1,-(A7)
0003144C <AmiBlitz3.ab3@22246>   BSR.w evalconst3
0003144E <AmiBlitz3.ab3@22247>   MOVE.w (A7)+,D1
00031450 <AmiBlitz3.ab3@22248>   LSL.l D1,D3
00031452 <AmiBlitz3.ab3@22250>   MOVE.l d3,d0
00031456 <AmiBlitz3.ab3@22251>   BEQ 'll5
00031458 <AmiBlitz3.ab3@22252>   MOVEQ #0,d1
0003145E <AmiBlitz3.ab3@22255>     JSR writebyte
00031460 <AmiBlitz3.ab3@22256>     SUBQ.l #1,d3
00031464 <AmiBlitz3.ab3@22257>   BNE.s 'll10
00031466 <AmiBlitz3.ab3@22262> RTS
00031468 <AmiBlitz3.ab3@22266>   MOVE.w D0,-(A7)
0003146E <AmiBlitz3.ab3@22267>   LEA dummyasm,A0
00031474 <AmiBlitz3.ab3@22268>   MOVEA.l destpointer,A1
0003147E <AmiBlitz3.ab3@22269>   MOVE.w asmlen2,asmlen
00031484 <AmiBlitz3.ab3@22270>   JSR insasm
00031486 <AmiBlitz3.ab3@22271>   MOVE.w (A7)+,D0
00031488 <AmiBlitz3.ab3@22272> RTS
0003148C <AmiBlitz3.ab3@22276>   BSR.w getsize2
00031496 <AmiBlitz3.ab3@22278>   MOVE.l #ptr_parameterstore,asmbuff
00031498 <AmiBlitz3.ab3@22279>   TST.w D1
0003149C <AmiBlitz3.ab3@22280>    BEQ.w 'byte
000314A0 <AmiBlitz3.ab3@22281>   CMP.w #$1,D1
000314A4 <AmiBlitz3.ab3@22282>    BEQ.w 'word
000314A8 <AmiBlitz3.ab3@22284>   CMP.w #$2,d1
000314AC <AmiBlitz3.ab3@22285>    BEQ 'long
000314B0 <AmiBlitz3.ab3@22286>   CMP.w #$3,d1
000314B4 <AmiBlitz3.ab3@22287>    BEQ 'single
000314B6 <AmiBlitz3.ab3@22292>    MOVEQ.l #$0d,D3
000314BC <AmiBlitz3.ab3@22300>    JSR asmconst
000314C0 <AmiBlitz3.ab3@22301>    BSR.w insasm2
000314C4 <AmiBlitz3.ab3@22302>    BSR.w writelong
000314C8 <AmiBlitz3.ab3@22304>    BSR   writelong
000314CC <AmiBlitz3.ab3@22306>   CMP.w #$2C,D0    ; ','
000314D0 <AmiBlitz3.ab3@22307>    BEQ.w 'lloop
000314D2 <AmiBlitz3.ab3@22308>  RTS
000314D4 <AmiBlitz3.ab3@22312>   MOVEQ.l #$0B,D3
000314DC <AmiBlitz3.ab3@22316>   MOVE.b #1,_dcb
000314E2 <AmiBlitz3.ab3@22319>   JSR asmconst
000314E8 <AmiBlitz3.ab3@22320>   CLR.b _dcb
000314EC <AmiBlitz3.ab3@22321>   BSR.w insasm2
000314F0 <AmiBlitz3.ab3@22322>   BSR writebyte
000314F4 <AmiBlitz3.ab3@22323>   BSR writebyte
000314F8 <AmiBlitz3.ab3@22324>   BSR writebyte                                            ;long
000314FC <AmiBlitz3.ab3@22325>   BSR writebyte
00031500 <AmiBlitz3.ab3@22326>   CMP.w #$2C,D0
00031504 <AmiBlitz3.ab3@22327>    BEQ.w 'lloopb
00031506 <AmiBlitz3.ab3@22328>  RTS
00031508 <AmiBlitz3.ab3@22331>   MOVEQ.l #$0c,D3
00031510 <AmiBlitz3.ab3@22335>   MOVE.b #1,_dcb
00031516 <AmiBlitz3.ab3@22338>   JSR asmconst
0003151C <AmiBlitz3.ab3@22339>   CLR.b _dcb
00031520 <AmiBlitz3.ab3@22340>   BSR.w insasm2
00031524 <AmiBlitz3.ab3@22341>   BSR.w writebyte
00031528 <AmiBlitz3.ab3@22342>   BSR.w writebyte
0003152C <AmiBlitz3.ab3@22343>   BSR.w writebyte
00031530 <AmiBlitz3.ab3@22344>   BSR.w writebyte
00031534 <AmiBlitz3.ab3@22345>   CMP.w #$2C,D0
00031538 <AmiBlitz3.ab3@22346>    BEQ.w 'lloopa
0003153A <AmiBlitz3.ab3@22347>  RTS
0003153C <AmiBlitz3.ab3@22353>   MOVEQ.l #$11,D3
00031542 <AmiBlitz3.ab3@22356>   JSR get1bytemain
00031546 <AmiBlitz3.ab3@22357>   CMP.w #$22,D0     ;'"'
0003154A <AmiBlitz3.ab3@22358>    BNE.w 'notq
0003154C <AmiBlitz3.ab3@22363>   MOVE.b (a5)+,d0                                          ;bsr.w get1bytemain ascii dc.b
00031550 <AmiBlitz3.ab3@22365>    BEQ.w syntaxerr
00031554 <AmiBlitz3.ab3@22366>   CMP.w #$22,D0   ;'"'
00031558 <AmiBlitz3.ab3@22367>    BEQ.w 'qdone
0003155C <AmiBlitz3.ab3@22369>   CMP.b #"\",d0
00031560 <AmiBlitz3.ab3@22370>    BNE 'n1
00031564 <AmiBlitz3.ab3@22371>   CMP.b #"\",(a5)
00031568 <AmiBlitz3.ab3@22372>    BEQ 'do1
0003156A <AmiBlitz3.ab3@22376>   MOVE.w D0,D1
0003156E <AmiBlitz3.ab3@22377>   BSR.w writebyte
00031572 <AmiBlitz3.ab3@22378>  BRA.w 'qloop
0003157A <AmiBlitz3.ab3@22382>   CMP.l #"__DA",1(a5)
0003157E <AmiBlitz3.ab3@22383>    BNE 'nodate1
00031586 <AmiBlitz3.ab3@22384>   CMP.l #"TE__",5(a5)
0003158A <AmiBlitz3.ab3@22385>    BEQ 'c1
00031592 <AmiBlitz3.ab3@22386>   CMP.l #"TE_G",5(a5)
00031596 <AmiBlitz3.ab3@22387>    BNE 'nodate1
0003159E <AmiBlitz3.ab3@22388>   CMP.l #"ER__",9(a5)
000315A2 <AmiBlitz3.ab3@22389>    BNE 'nodate1
000315A8 <AmiBlitz3.ab3@22390>   JSR compiledatedc_ger
000315AC <AmiBlitz3.ab3@22391>  BRA 'n1
000315B2 <AmiBlitz3.ab3@22394>   JSR compiledatedc
000315B6 <AmiBlitz3.ab3@22395>  BRA 'n1
000315BE <AmiBlitz3.ab3@22398>   CMP.l #"__VE",1(a5)
000315C2 <AmiBlitz3.ab3@22399>    BNE 'n1
000315C8 <AmiBlitz3.ab3@22400>   CMP.w #"R_",5(a5)
000315CC <AmiBlitz3.ab3@22401>    BNE 'n1
000315D2 <AmiBlitz3.ab3@22402>   JSR version_string_dc
000315D6 <AmiBlitz3.ab3@22403>  BRA.w 'qloop
000315DC <AmiBlitz3.ab3@22407>   CLR.w instringon
000315E2 <AmiBlitz3.ab3@22409>   JSR get1bytemain
000315E6 <AmiBlitz3.ab3@22410>  BRA.w 'bdone
000315F0 <AmiBlitz3.ab3@22415>    MOVE.w oldqflag,instringon
000315F6 <AmiBlitz3.ab3@22416>   MOVEA.l lastsourcepos,A5
000315FC <AmiBlitz3.ab3@22418>    JSR asmconst
00031602 <AmiBlitz3.ab3@22419>   SUBQ.l #1,destpointer
00031606 <AmiBlitz3.ab3@22420>    BSR.w insasm2
0003160C <AmiBlitz3.ab3@22421>   ADDQ.l #1,destpointer
00031610 <AmiBlitz3.ab3@22422>    BSR.w writebyte
00031614 <AmiBlitz3.ab3@22425>   CMP.w #$2C,D0   ;','
00031618 <AmiBlitz3.ab3@22426>    BEQ.w 'bloop
0003161A <AmiBlitz3.ab3@22427>  RTS
0003161C <AmiBlitz3.ab3@22430>   MOVEQ.l #$10,D3
00031624 <AmiBlitz3.ab3@22439>   MOVE.b #1,_dcb
0003162A <AmiBlitz3.ab3@22441>   JSR asmconst
00031630 <AmiBlitz3.ab3@22443>   CLR.b _dcb
00031634 <AmiBlitz3.ab3@22445>   BSR.w insasm2
00031638 <AmiBlitz3.ab3@22448>   BSR.w writebyte
0003163C <AmiBlitz3.ab3@22449>   BSR.w writebyte
00031640 <AmiBlitz3.ab3@22451>   CMP.w #$2C,D0      ;','
00031644 <AmiBlitz3.ab3@22452>    BEQ.w 'wloop
00031646 <AmiBlitz3.ab3@22453> RTS
0003164C <AmiBlitz3.ab3@22457>   ADDQ.l #3,destpointer
00031654 <AmiBlitz3.ab3@22458>   ANDI.w #$FFFC,destpointer+2
00031656 <AmiBlitz3.ab3@22459> RTS
0003165C <AmiBlitz3.ab3@22463>   ADDQ.l #7,destpointer
00031664 <AmiBlitz3.ab3@22464>   ANDI.w #$FFF8,destpointer+2
00031666 <AmiBlitz3.ab3@22465> RTS
0003166C <AmiBlitz3.ab3@22469>   ADDQ.l #1,destpointer                                    ;even
00031674 <AmiBlitz3.ab3@22470>   BCLR #$0,destpointer+3
00031676 <AmiBlitz3.ab3@22471> RTS
00031678 <AmiBlitz3.ab3@22474> datasize: Ds.w 1
0003167E <AmiBlitz3.ab3@22484>   TST.b debugmode
00031682 <AmiBlitz3.ab3@22485>   BEQ.w 'skip
00031686 <AmiBlitz3.ab3@22486>   MOVE.w #$4420,D0                                         ;'D '
0003168A <AmiBlitz3.ab3@22487>   MOVE.b datasize+1(PC),D0
0003168E <AmiBlitz3.ab3@22488>  BRA.w pokedata2
00031690 <AmiBlitz3.ab3@22491> RTS
00031694 <AmiBlitz3.ab3@22495>   MOVE.w #$FC17,D1           ;#64535
0003169A <AmiBlitz3.ab3@22496>    JSR uselib
000316A4 <AmiBlitz3.ab3@22499>    MOVE.w oldqflag,instringon
000316AA <AmiBlitz3.ab3@22500>   MOVEA.l lastsourcepos,A5
000316B0 <AmiBlitz3.ab3@22502>    JSR sizespec2        ;get size of it into d1
000316B6 <AmiBlitz3.ab3@22503>   MOVE.w D1,datasize
000316BA <AmiBlitz3.ab3@22507>   CMP.w #$7,D1
000316BE <AmiBlitz3.ab3@22508>    BEQ.w 'string
000316C0 <AmiBlitz3.ab3@22510>   MOVE.w D1,-(A7)
000316C4 <AmiBlitz3.ab3@22513>   BSR.w pdt
000316C6 <AmiBlitz3.ab3@22514>   MOVE.w (A7),D2
000316CA <AmiBlitz3.ab3@22515>    BSR.w fetchdata
000316CC <AmiBlitz3.ab3@22516>   CMP.w (A7),D2                                            ;datamode
000316D0 <AmiBlitz3.ab3@22517>    BEQ.w 'dataok
000316D2 <AmiBlitz3.ab3@22519>   MOVE.w D2,D1
000316D4 <AmiBlitz3.ab3@22520>   MOVE.w (A7),D2
000316D8 <AmiBlitz3.ab3@22521>   CMP.w #$2,D2
000316DC <AmiBlitz3.ab3@22522>    BNE.w 'notw
000316E0 <AmiBlitz3.ab3@22523>   CMP.w #$3,D1
000316E4 <AmiBlitz3.ab3@22524>    BNE.w baddaterr
000316EA <AmiBlitz3.ab3@22525>   CMP.l #$10000,D3        ; was  #65536
000316EE <AmiBlitz3.ab3@22526>    BCC.w baddaterr
000316F2 <AmiBlitz3.ab3@22527>  BRA.w 'dataok
000316F6 <AmiBlitz3.ab3@22530>   CMP.w #$1,D2
000316FA <AmiBlitz3.ab3@22531>    BNE.w 'notb
000316FE <AmiBlitz3.ab3@22532>   CMP.w #$2,D1
00031702 <AmiBlitz3.ab3@22533>    BNE.w baddaterr
00031708 <AmiBlitz3.ab3@22534>   CMP.l #$100,D3
0003170C <AmiBlitz3.ab3@22535>    BCC.w baddaterr
00031710 <AmiBlitz3.ab3@22536>  BRA.w 'dataok
00031714 <AmiBlitz3.ab3@22539>  BRA.w baddaterr
00031718 <AmiBlitz3.ab3@22542>   CMP.w #$3,D2
0003171C <AmiBlitz3.ab3@22543>   BCC.w 'notword
00031720 <AmiBlitz3.ab3@22544>   BSR.w pokedata2
00031724 <AmiBlitz3.ab3@22545>  BRA.w 'next
0003172A <AmiBlitz3.ab3@22549>   TST.b iee
0003172E <AmiBlitz3.ab3@22550>   BEQ 'old
00031732 <AmiBlitz3.ab3@22551>   CMP.b #5,d2
00031736 <AmiBlitz3.ab3@22552>   BNE 'old
0003173A <AmiBlitz3.ab3@22553>   Dc.l $f2006400                                           ;  fpu data write fmove.s fp0,d0
0003173E <AmiBlitz3.ab3@22558>   BSR.w pokedata2l                                          ;write data >3
00031744 <AmiBlitz3.ab3@22561>   JSR reget
00031748 <AmiBlitz3.ab3@22562>   CMP.w #$2C,D0     ;','
0003174C <AmiBlitz3.ab3@22563>    BEQ.w 'more
0003174E <AmiBlitz3.ab3@22564>   ADDQ.w #2,A7
00031750 <AmiBlitz3.ab3@22565>  RTS
00031754 <AmiBlitz3.ab3@22568>    BSR.w pdt
0003175A <AmiBlitz3.ab3@22569>   MOVE.l data2,-(A7)
0003175E <AmiBlitz3.ab3@22570>    BSR.w pokedata2l
00031760 <AmiBlitz3.ab3@22571>   MOVEQ.l #$00,D1
00031766 <AmiBlitz3.ab3@22573>    JSR get1bytemain
0003176A <AmiBlitz3.ab3@22574>    BEQ.w 'done
0003176E <AmiBlitz3.ab3@22575>   CMP.w #$22,D0       ;'"'
00031772 <AmiBlitz3.ab3@22576>    BEQ.w 'quoted
00031776 <AmiBlitz3.ab3@22577>   CMP.w #$2C,D0       ;','
0003177A <AmiBlitz3.ab3@22578>    BEQ.w 'done
0003177E <AmiBlitz3.ab3@22581>    BSR.w pokedata2b
00031780 <AmiBlitz3.ab3@22582>   ADDQ.w #1,D1
00031786 <AmiBlitz3.ab3@22583>    JSR getchar
00031788 <AmiBlitz3.ab3@22584>   TST.w D0
0003178C <AmiBlitz3.ab3@22585>    BEQ.w 'done
00031790 <AmiBlitz3.ab3@22586>   CMP.w #$2C,D0
00031794 <AmiBlitz3.ab3@22587>    BEQ.w 'done       ;','
00031798 <AmiBlitz3.ab3@22588>  BRA.w 'loop2
0003179A <AmiBlitz3.ab3@22593>    MOVEQ #0,d0
0003179C <AmiBlitz3.ab3@22594>    MOVE.b (a5)+,d0
000317A0 <AmiBlitz3.ab3@22596>    BEQ.w notqerr2
000317A4 <AmiBlitz3.ab3@22597>   CMP.w #$22,D0       ;'"'
000317A8 <AmiBlitz3.ab3@22598>    BEQ.w 'done2
000317AC <AmiBlitz3.ab3@22599>    BSR.w pokedata2b
000317AE <AmiBlitz3.ab3@22600>   ADDQ.w #1,D1
000317B2 <AmiBlitz3.ab3@22601>  BRA.w 'quoted
000317B8 <AmiBlitz3.ab3@22605>   CLR.w instringon
000317BE <AmiBlitz3.ab3@22607>   JSR get1bytemain
000317C0 <AmiBlitz3.ab3@22610>   MOVEA.l (A7)+,A0
000317C6 <AmiBlitz3.ab3@22611>   MOVE.w dontwrite,D2
000317CA <AmiBlitz3.ab3@22612>    BNE.w 'nopoke
000317CC <AmiBlitz3.ab3@22613>   MOVE.l D1,(A0)
000317D2 <AmiBlitz3.ab3@22616>   ADDQ.l #1,data2
000317DA <AmiBlitz3.ab3@22617>   BCLR #$0,data2+3
000317DE <AmiBlitz3.ab3@22618>   CMP.w #$2C,D0      ;','
000317E2 <AmiBlitz3.ab3@22619>    BEQ.w 'string
000317E4 <AmiBlitz3.ab3@22620> RTS
000317EA <AmiBlitz3.ab3@22624> notqerr2           JMP notqerr
000317F0 <AmiBlitz3.ab3@22625> JUMP_vardeclareerr JMP vardeclareerr
000317F6 <AmiBlitz3.ab3@22633>   MOVE.w proceduremode,D1                                  ;doshared
000317FA <AmiBlitz3.ab3@22636>   BNE.w 'l1
000317FC <AmiBlitz3.ab3@22637>   MOVE.w D1,-(A7)
00031802 <AmiBlitz3.ab3@22638>   CLR.w proceduremode
00031808 <AmiBlitz3.ab3@22641>   LEA varbase,a2
0003180C <AmiBlitz3.ab3@22642>   BSR.w getparameter
0003180E <AmiBlitz3.ab3@22643>   MOVE.w d2,-(a7)
00031814 <AmiBlitz3.ab3@22644>    JSR findvariable
00031818 <AmiBlitz3.ab3@22645>    BEQ 'checkdim
0003181E <AmiBlitz3.ab3@22646>    LEA sharebase,a2
00031820 <AmiBlitz3.ab3@22647>    MOVEQ #$f+4,d7
00031824 <AmiBlitz3.ab3@22648>    BSR.w findlab                                         ;find var
00031828 <AmiBlitz3.ab3@22649>    BEQ.b dupsherr
0003182C <AmiBlitz3.ab3@22650>    BSR addlabel
00031830 <AmiBlitz3.ab3@22651>    CMP.b #".",d0
00031834 <AmiBlitz3.ab3@22652>    BNE JUMP_vardeclareerr
00031836 <AmiBlitz3.ab3@22653>    MOVE.l a2,a3
0003183C <AmiBlitz3.ab3@22654>    JSR claptonb       ; jump to a copy of fvaradd 'clapton
0003183E <AmiBlitz3.ab3@22685>   MOVE.w (a7)+,d2
00031842 <AmiBlitz3.ab3@22686>    CMP.b #",",d0
00031846 <AmiBlitz3.ab3@22687>    BNE 'ret
0003184C <AmiBlitz3.ab3@22688>    JSR get1bytemain
00031850 <AmiBlitz3.ab3@22689>  BRA 'again2
00031856 <AmiBlitz3.ab3@22692>   MOVE.w (A7)+,proceduremode
00031858 <AmiBlitz3.ab3@22693>  RTS
0003185E <AmiBlitz3.ab3@22696>    CMP.w #2,6(a2)
00031862 <AmiBlitz3.ab3@22697>    BEQ 'do
00031868 <AmiBlitz3.ab3@22698>    CMP.w #$102,6(a2)
0003186C <AmiBlitz3.ab3@22699>    BEQ 'do
00031872 <AmiBlitz3.ab3@22700>  JMP errormsg_declaredtwice                                 ;was BRA 'errormsg_declaredtwice_
00031878 <AmiBlitz3.ab3@22703>   LEA varbase,a0
0003187A <AmiBlitz3.ab3@22706>   MOVE.l (A0),D0                                           ;find label
0003187E <AmiBlitz3.ab3@22707>    BEQ.b 'z1
00031880 <AmiBlitz3.ab3@22708>    CMP.l d0,a2
00031884 <AmiBlitz3.ab3@22709>    BEQ 'z1
00031886 <AmiBlitz3.ab3@22710>    MOVE.l d0,a0
0003188A <AmiBlitz3.ab3@22711>  BRA 'm1
0003188C <AmiBlitz3.ab3@22714>   MOVE.l (a2),d1
0003188E <AmiBlitz3.ab3@22715>     MOVE.l d1,(a0)
00031890 <AmiBlitz3.ab3@22716>     CLR.l (a2)
00031896 <AmiBlitz3.ab3@22717>     LEA sharebase,a0
00031898 <AmiBlitz3.ab3@22718>     MOVE.l (a0),(a2)
0003189A <AmiBlitz3.ab3@22719>     MOVE.l a2,(a0)
000318A0 <AmiBlitz3.ab3@22720>     JSR get1bytemain
000318A6 <AmiBlitz3.ab3@22721>     JSR get1bytemain
000318AA <AmiBlitz3.ab3@22722>  BRA 'domore
000318B2 <AmiBlitz3.ab3@22725>   MOVE.b #1,nowdeclare
000318B4 <AmiBlitz3.ab3@22727>   MOVE.w D1,-(A7)
000318BA <AmiBlitz3.ab3@22728>   CLR.w proceduremode
000318BE <AmiBlitz3.ab3@22731>    BSR.w getparameter
000318C0 <AmiBlitz3.ab3@22732>   MOVE.w D2,-(A7)
000318C6 <AmiBlitz3.ab3@22734>   LEA firstglob,A2
000318CA <AmiBlitz3.ab3@22735>    BSR.w findvariable2
000318CE <AmiBlitz3.ab3@22736>    BNE.b 'notfound
000318D4 <AmiBlitz3.ab3@22739>   MOVE.b flagmask+1,D1
000318D8 <AmiBlitz3.ab3@22740>   MOVE.b $7(A2),D3
000318DA <AmiBlitz3.ab3@22741>   EOR.b D3,D1
000318DE <AmiBlitz3.ab3@22742>    BEQ.w dupsherr
000318E2 <AmiBlitz3.ab3@22743>    BSR.w findlab
000318E6 <AmiBlitz3.ab3@22744>    BEQ.b 'try2
000318EA <AmiBlitz3.ab3@22747>    BSR.w addlabel
000318EC <AmiBlitz3.ab3@22748>   MOVE.w (A7)+,D2
000318EE <AmiBlitz3.ab3@22749>   MOVE.l A2,-(A7)   ;new glob
000318F2 <AmiBlitz3.ab3@22750>    BSR.w fetchvars     
000318F4 <AmiBlitz3.ab3@22751>   MOVEA.l (A7)+,A2
000318F6 <AmiBlitz3.ab3@22752>   MOVEQ.l #$04,D1
000318F8 <AmiBlitz3.ab3@22753>   ADDQ.w #4,A2
000318FA <AmiBlitz3.ab3@22754>   ADDQ.w #4,A3
000318FC <AmiBlitz3.ab3@22757>     MOVE.w (A3)+,(A2)+
00031900 <AmiBlitz3.ab3@22758>   DBF D1,'loop
00031908 <AmiBlitz3.ab3@22760>   BTST #$1,flagmask+1
0003190C <AmiBlitz3.ab3@22761>    BEQ.w 'done
00031912 <AmiBlitz3.ab3@22762>    JSR get1bytemain
00031916 <AmiBlitz3.ab3@22763>   CMP.w #$29,D0         ;')'
0003191A <AmiBlitz3.ab3@22764>    BNE.w JUMP_syntaxerr
00031920 <AmiBlitz3.ab3@22765>    JSR get1bytemain
00031924 <AmiBlitz3.ab3@22768>    CMP.w #$2C,D0         ;','
00031928 <AmiBlitz3.ab3@22769>    BNE.w 'done2
0003192E <AmiBlitz3.ab3@22770>    JSR get1bytemain
00031932 <AmiBlitz3.ab3@22771>  BRA.w 'loop2
00031938 <AmiBlitz3.ab3@22774>   MOVE.w (A7)+,proceduremode
0003193A <AmiBlitz3.ab3@22775> RTS
0003193E <AmiBlitz3.ab3@22782>    BSR.w makeiname
00031944 <AmiBlitz3.ab3@22783>    JSR check_incdir                                        ; ergebnis in d2
0003194A <AmiBlitz3.ab3@22785>    LEA ptr_parameterstore,a1
0003194C <AmiBlitz3.ab3@22786>    MOVE.l d2,-(a7)
00031952 <AmiBlitz3.ab3@22787>    LEA includetemp,a0                                      ; filename in includetemp packen
00031954 <AmiBlitz3.ab3@22790>      MOVE.b (a1)+,(a0)+
00031958 <AmiBlitz3.ab3@22791>    BNE 'l4
0003195E <AmiBlitz3.ab3@22793>    LEA ptr_parameterstore,a1
00031960 <AmiBlitz3.ab3@22794>    MOVE.l a1,a0
00031962 <AmiBlitz3.ab3@22797>     TST.b (a0)+
00031966 <AmiBlitz3.ab3@22798>    BNE 'l1
00031968 <AmiBlitz3.ab3@22801>      MOVE.b -(a0),d0
0003196C <AmiBlitz3.ab3@22802>      CMP.b #":",d0
00031970 <AmiBlitz3.ab3@22803>       BEQ 'out
00031974 <AmiBlitz3.ab3@22804>      CMP.b #"/",d0
00031978 <AmiBlitz3.ab3@22805>       BEQ 'out
0003197A <AmiBlitz3.ab3@22806>      CMP.l a1,a0
0003197E <AmiBlitz3.ab3@22807>       BEQ 'out2
00031982 <AmiBlitz3.ab3@22808>  BRA 'l2
00031984 <AmiBlitz3.ab3@22811>    ADDQ.l #1,a0                                            ; dateinamen vom pfad extrahiert
00031986 <AmiBlitz3.ab3@22814>    MOVEQ.l #-$01,D2
00031988 <AmiBlitz3.ab3@22817>      ADDQ.w #1,D2
0003198A <AmiBlitz3.ab3@22818>      MOVE.b (a0)+,(a1)+
0003198E <AmiBlitz3.ab3@22819>    BNE 'l3
00031990 <AmiBlitz3.ab3@22820>    CLR.b (a1)+
00031996 <AmiBlitz3.ab3@22822>    LEA ptr_parameterstore,a1
0003199A <AmiBlitz3.ab3@22823>    BSR.w findxinc                                         ;find include
0003199E <AmiBlitz3.ab3@22824>     BEQ.w 'outb
000319A0 <AmiBlitz3.ab3@22826>    MOVE.w D2,-(A7)
000319A4 <AmiBlitz3.ab3@22827>    BSR.w addlabel
000319A6 <AmiBlitz3.ab3@22828>    MOVE.w (A7)+,D2
000319AC <AmiBlitz3.ab3@22830>    LEA ptr_parameterstore,a1
000319B2 <AmiBlitz3.ab3@22831>    LEA includetemp,a0                                      ; namen in includetemp schreiben
000319B4 <AmiBlitz3.ab3@22834>     MOVE.b (a0)+,(a1)+
000319B8 <AmiBlitz3.ab3@22835>    BNE 'l4b
000319BA <AmiBlitz3.ab3@22837>    MOVE.l (a7)+,d2
000319C0 <AmiBlitz3.ab3@22838>    LEA ptr_parameterstore,a1
000319C4 <AmiBlitz3.ab3@22840>  BRA.w doinc2
000319CA <AmiBlitz3.ab3@22844>    LEA ptr_parameterstore,a1
000319D0 <AmiBlitz3.ab3@22845>    LEA includetemp,a0
000319D2 <AmiBlitz3.ab3@22848>     MOVE.b (a0)+,(a1)+
000319D6 <AmiBlitz3.ab3@22849>    BNE 'l4b2
000319D8 <AmiBlitz3.ab3@22851>    MOVE.l (a7)+,d2
000319DE <AmiBlitz3.ab3@22852>    LEA ptr_parameterstore,a1
000319E0 <AmiBlitz3.ab3@22855> RTS
000319E4 <AmiBlitz3.ab3@22859>   BSR.w makeiname                                              ; test and get the parameter (includestring)
000319EA <AmiBlitz3.ab3@22863>   JSR check_IncBinDir                                          ; to fix the path problem in CLIMode  tomsmart1
000319F0 <AmiBlitz3.ab3@22865>   MOVEA.l _dosbase,A6
000319F2 <AmiBlitz3.ab3@22867>   MOVE.l D0,D7                                                 ; store Lockpointer
000319F6 <AmiBlitz3.ab3@22868>    BEQ.w error_cant_open_include                               ; no pointer => errormessage
000319F8 <AmiBlitz3.ab3@22869>   MOVE.l D7,D1                                                 ; begin get the size of the file to include
000319FE <AmiBlitz3.ab3@22870>   MOVE.l ptr_macrobuffer_begin,D2
00031A02 <AmiBlitz3.ab3@22871>    JSR _Examine(A6)
00031A08 <AmiBlitz3.ab3@22872>   MOVEA.l ptr_macrobuffer_begin,A0
00031A0C <AmiBlitz3.ab3@22873>   MOVE.l $4(A0),D0
00031A10 <AmiBlitz3.ab3@22874>    BPL.w error_cant_open_include                               ; something went wrong => errormessage
00031A14 <AmiBlitz3.ab3@22875>   MOVE.l $7C(A0),D3      ;length                                       ; store the size of the file to include
00031A16 <AmiBlitz3.ab3@22876>   MOVE.l D7,D1                                                 ; begin unlock the file
00031A1A <AmiBlitz3.ab3@22877>    JSR _UnLock(A6)
00031A20 <AmiBlitz3.ab3@22879>   MOVE.l #ptr_parameterstore,D1                                ; begin Open and Load the file
00031A26 <AmiBlitz3.ab3@22880>   MOVE.l #HUNK_RELOC_16__MODE_OLDFILE,D2                       
00031A2A <AmiBlitz3.ab3@22881>    JSR _Open(A6)
00031A2C <AmiBlitz3.ab3@22882>   MOVE.l D0,D7
00031A30 <AmiBlitz3.ab3@22883>    BEQ.w error_cant_open_include
00031A36 <AmiBlitz3.ab3@22884>   MOVE.l destpointer,D0
00031A38 <AmiBlitz3.ab3@22885>   ADD.l D3,D0
00031A3E <AmiBlitz3.ab3@22886>   CMP.l destbufferend,D0
00031A42 <AmiBlitz3.ab3@22887>    BHI.w 'over
00031A48 <AmiBlitz3.ab3@22888>   MOVE.l destpointer,D2
00031A4A <AmiBlitz3.ab3@22889>   MOVE.l D7,D1
00031A4E <AmiBlitz3.ab3@22890>    JSR _Read(A6)
00031A54 <AmiBlitz3.ab3@22891>   CMP.l #$FFFFFFFF,D0              ; was -1
00031A58 <AmiBlitz3.ab3@22892>    BEQ.w error_reading_file
00031A5E <AmiBlitz3.ab3@22893>   ADD.l D0,destpointer
00031A62 <AmiBlitz3.ab3@22894>  BRA.w 'close
00031A6A <AmiBlitz3.ab3@22897>   MOVE.w #$FFFF,dontwrite          ; was -1
00031A70 <AmiBlitz3.ab3@22898>   MOVE.l D0,destpointer
00031A72 <AmiBlitz3.ab3@22901>   MOVE.l D7,D1
00031A76 <AmiBlitz3.ab3@22902> JMP _Close(A6)
00031A7C <AmiBlitz3.ab3@22905> JUMP_illdirerr JMP illdirerr
00031A82 <AmiBlitz3.ab3@22911>   TST.w dirmode                                            ;include  open
00031A86 <AmiBlitz3.ab3@22912>    BNE.w JUMP_illdirerr
00031A8A <AmiBlitz3.ab3@22914>   BSR.w makeiname
00031A90 <AmiBlitz3.ab3@22916>   JSR check_incdir
00031A94 <AmiBlitz3.ab3@22920>   BSR.w findconstant
00031A98 <AmiBlitz3.ab3@22921>    BEQ.w alincerr
00031A9E <AmiBlitz3.ab3@22923>   LEA constantbase,A2
00031AA2 <AmiBlitz3.ab3@22924>   BSR.w addhere2
00031AA6 <AmiBlitz3.ab3@22926>   CLR.w $C(A2)
00031AAA <AmiBlitz3.ab3@22927>   CLR.l $4(A2)
00031AB0 <AmiBlitz3.ab3@22929>   MOVE.l #ptr_parameterstore,D1
00031AB2 <AmiBlitz3.ab3@22930>   MOVE.l d1,a0
00031AB8 <AmiBlitz3.ab3@22931>   LEA includetemp2,a1
00031ABA <AmiBlitz3.ab3@22934>     MOVE.b (a0)+,(a1)+
00031ABE <AmiBlitz3.ab3@22935>   BNE 'l1
00031AC4 <AmiBlitz3.ab3@22936>   JSR save_includename
00031ACE <AmiBlitz3.ab3@22937>   MOVE.l #0,include_process
00031AD6 <AmiBlitz3.ab3@22939>   CMP.l #$62623200,-4(a0)                                  ;.bb2
00031ADA <AmiBlitz3.ab3@22940>   BEQ 'ok
00031AE2 <AmiBlitz3.ab3@22941>   CMP.l #$61623300,-4(a0)                                  ;.ab3
00031AE6 <AmiBlitz3.ab3@22942>   BEQ 'ok_tokenize
00031AEE <AmiBlitz3.ab3@22943>   CMP.l #$61623200,-4(a0)                                  ;.ab2
00031AF2 <AmiBlitz3.ab3@22944>   BEQ 'ok_tokenize
00031AFA <AmiBlitz3.ab3@22945>   CMP.l #$2e626200,-4(a0)                                  ;.bb files
00031AFE <AmiBlitz3.ab3@22946>   BEQ 'ok
00031B04 <AmiBlitz3.ab3@22947>  JMP errortoken                                             ;can only include
00031B0E <AmiBlitz3.ab3@22950>    MOVE.l #-1,include_process                              ; must tokenize the include
00031B14 <AmiBlitz3.ab3@22953>   MOVE.l #HUNK_RELOC_16__MODE_OLDFILE,D2
00031B1A <AmiBlitz3.ab3@22954>   MOVEA.l _dosbase,A6
00031B1E <AmiBlitz3.ab3@22955>   JSR _Open(A6)
00031B22 <AmiBlitz3.ab3@22956>   MOVE.l D0,$8(A2)
00031B26 <AmiBlitz3.ab3@22957>   BEQ.w error_cant_open_include
00031B2C <AmiBlitz3.ab3@22958>   CLR.l includeline
00031B30 <AmiBlitz3.ab3@22959>   MOVE.l 8(a2),d1
00031B32 <AmiBlitz3.ab3@22960>   MOVE.l d3,-(a7)
00031B34 <AmiBlitz3.ab3@22961>   MOVEQ #0,d2
00031B36 <AmiBlitz3.ab3@22962>   MOVEQ #1,d3
00031B3A <AmiBlitz3.ab3@22963>   JSR _Seek(a6)                                            ; -66
00031B3E <AmiBlitz3.ab3@22964>   MOVE.l 8(a2),d1
00031B40 <AmiBlitz3.ab3@22965>   MOVEQ #0,d2
00031B42 <AmiBlitz3.ab3@22966>   MOVEQ #-1,d3
00031B46 <AmiBlitz3.ab3@22967>   JSR _Seek(a6)                                            ; -66
00031B48 <AmiBlitz3.ab3@22968>   MOVE.l (a7)+,d3
00031B4A <AmiBlitz3.ab3@22969>   ADDQ.l #4,d0
00031B50 <AmiBlitz3.ab3@22973>   MOVE.l #$10000,D1
00031B56 <AmiBlitz3.ab3@22975>   MOVEA.l _execbase,A6
00031B5A <AmiBlitz3.ab3@22979>   JSR _AllocVec(a6)
00031B5E <AmiBlitz3.ab3@22983>   MOVE.l D0,$4(A2)
00031B62 <AmiBlitz3.ab3@22984>   MOVE.l D0,$E(A2)
00031B64 <AmiBlitz3.ab3@22985>   MOVEA.l D0,A5
00031B6A <AmiBlitz3.ab3@22993>   ADDQ.w #1,ininclude                                      ;enter include
00031B70 <AmiBlitz3.ab3@22997>   LEA _include,a0
00031B74 <AmiBlitz3.ab3@22998>   MOVEM.l a0-a6/d0-d7,-(a7)
00031B7A <AmiBlitz3.ab3@22999>   LEA ptr_parameterstore,a1
00031B7C <AmiBlitz3.ab3@23002>     MOVE.b (a0)+,(a1)+
00031B80 <AmiBlitz3.ab3@23003>   BNE 'l1b
00031B82 <AmiBlitz3.ab3@23005>   MOVEQ #9,d2
00031B88 <AmiBlitz3.ab3@23006>   JSR findlabel2
00031B8C <AmiBlitz3.ab3@23007>   BNE 'd
00031B94 <AmiBlitz3.ab3@23008>   MOVE.l #1,8(a2)
00031B98 <AmiBlitz3.ab3@23009>   MOVEM.l (a7)+,a0-a6/d0-d7
00031B9C <AmiBlitz3.ab3@23010>  BRA 'd2
00031BA2 <AmiBlitz3.ab3@23013>   JSR addlabelhash
00031BAA <AmiBlitz3.ab3@23014>   MOVE.l #$1,$4(A2)
00031BB2 <AmiBlitz3.ab3@23015>   MOVE.l #1,8(a2)
00031BB6 <AmiBlitz3.ab3@23016>   MOVEM.l (a7)+,a0-a6/d0-d7
00031BBC <AmiBlitz3.ab3@23019>   LEA inctab,a0
00031BBE <AmiBlitz3.ab3@23020>   MOVEQ #0,d1
00031BC4 <AmiBlitz3.ab3@23021>   MOVE.w ininclude,d1
00031BC8 <AmiBlitz3.ab3@23022>   CLR.l $0(a0,d1*4)
00031BCE <AmiBlitz3.ab3@23024>   MOVEA.l passstack,A7
00031BD4 <AmiBlitz3.ab3@23025> JMP passnxt
00031BDA <AmiBlitz3.ab3@23028> JUMP_dupmacerr  JMP dupmacerr
00031BE0 <AmiBlitz3.ab3@23029> JUMP_macenderr  JMP macenderr
00031BE6 <AmiBlitz3.ab3@23030> JUMP_macnesterr JMP macnesterr
00031BE8 <AmiBlitz3.ab3@23033> coolnest:   Ds.w 1
00031BEC <AmiBlitz3.ab3@23034> macline:    Ds.l 1
00031BF6 <AmiBlitz3.ab3@23040>   MOVE.l linenumat,macline
00031BFA <AmiBlitz3.ab3@23042>    BSR.w makename2
00031BFE <AmiBlitz3.ab3@23043>    BEQ.w JUMP_syntaxerr
00031C04 <AmiBlitz3.ab3@23045>    CLR.b thenmode
00031C0E <AmiBlitz3.ab3@23049>    MOVE.w oldqflag,instringon
00031C14 <AmiBlitz3.ab3@23050>   MOVEA.l lastsourcepos,A5
00031C18 <AmiBlitz3.ab3@23052>    BSR.w findmac
00031C1C <AmiBlitz3.ab3@23053>    BEQ.w JUMP_dupmacerr
00031C20 <AmiBlitz3.ab3@23054>    BSR.w addlabel
00031C24 <AmiBlitz3.ab3@23055>   CLR.w $A(A2)
00031C2A <AmiBlitz3.ab3@23056>   MOVEA.l ptr_macrobuffer_begin,A0
00031C2C <AmiBlitz3.ab3@23057>   MOVEQ.l #$00,D2     ;flag for nothing got yet!
00031C32 <AmiBlitz3.ab3@23058>   CLR.w coolnest
00031C34 <AmiBlitz3.ab3@23062>   MOVE.b (a5),d0
00031C38 <AmiBlitz3.ab3@23063>      BEQ 'l3
00031C3C <AmiBlitz3.ab3@23064>      CMP.b #" ",d0
00031C40 <AmiBlitz3.ab3@23065>       BNE 'l2                                              ;space macro
00031C42 <AmiBlitz3.ab3@23066>       ADDQ.l #1,a5
00031C46 <AmiBlitz3.ab3@23067>  BRA 'l1
00031C4A <AmiBlitz3.ab3@23070>    CMP.b #";",d0
00031C4E <AmiBlitz3.ab3@23071>       BNE 'l3
00031C50 <AmiBlitz3.ab3@23074>    MOVE.b (a5),d0
00031C54 <AmiBlitz3.ab3@23075>       BEQ 'l5
00031C58 <AmiBlitz3.ab3@23076>       BSR.w macputb                                      ;add comment
00031C5A <AmiBlitz3.ab3@23077>       ADDQ.l #1,a5
00031C5E <AmiBlitz3.ab3@23078>  BRA 'l4
00031C62 <AmiBlitz3.ab3@23081>    MOVE.b #":",d0
00031C66 <AmiBlitz3.ab3@23082>       BSR.w macputb
00031C6A <AmiBlitz3.ab3@23083>       MOVE.b #"@",d0
00031C6E <AmiBlitz3.ab3@23084>       BSR.w macputb
00031C76 <AmiBlitz3.ab3@23087>    MOVE.b #0,temp
00031C7E <AmiBlitz3.ab3@23088>       MOVE.b #0,thenmode
00031C84 <AmiBlitz3.ab3@23091>   JSR getcharb   ;get next character
00031C86 <AmiBlitz3.ab3@23093>   TST.w D0
00031C8A <AmiBlitz3.ab3@23094>    BNE.w 'skip
00031C8E <AmiBlitz3.ab3@23095>   MOVEM.l D2/A0/A2,-(A7)
00031C94 <AmiBlitz3.ab3@23097>   CMP.w #"@@",-3(a5)
00031C98 <AmiBlitz3.ab3@23098>   BNE 'l2a
00031C9E <AmiBlitz3.ab3@23099>   JSR nextline
00031CA2 <AmiBlitz3.ab3@23100>   BEQ.w JUMP_macenderr
00031CA6 <AmiBlitz3.ab3@23101>   MOVEM.l (A7)+,D2/A0/A2
00031CAA <AmiBlitz3.ab3@23102>  BRA.w 'gather
00031CB0 <AmiBlitz3.ab3@23106>    JSR nextline
00031CB4 <AmiBlitz3.ab3@23107>    BEQ.w JUMP_macenderr
00031CB8 <AmiBlitz3.ab3@23108>   MOVEM.l (A7)+,D2/A0/A2
00031CBA <AmiBlitz3.ab3@23109>   TST.w D2
00031CBE <AmiBlitz3.ab3@23110>    BEQ.w 'gather
00031CC0 <AmiBlitz3.ab3@23114>   MOVE.b (a5),d0
00031CC4 <AmiBlitz3.ab3@23115>       CMP.b #" ",d0
00031CC8 <AmiBlitz3.ab3@23116>       BNE 'l1a
00031CCA <AmiBlitz3.ab3@23117>       ADDQ.w #1,a5
00031CCE <AmiBlitz3.ab3@23118>  BRA 'l2b
00031CD4 <AmiBlitz3.ab3@23121>   TST.b thenmode
00031CD8 <AmiBlitz3.ab3@23122>      BEQ 'l3a
00031CDA <AmiBlitz3.ab3@23123>      MOVEQ #":",d0
00031CDE <AmiBlitz3.ab3@23124>      BSR.w macputb
00031CE2 <AmiBlitz3.ab3@23125>      MOVE.w #-$7FFE,D0                                     ;write end if
00031CE6 <AmiBlitz3.ab3@23126>      BSR macputw
00031CEA <AmiBlitz3.ab3@23127>      MOVE.w #$800b,d0
00031CEE <AmiBlitz3.ab3@23128>      BSR.w macputw
00031CF4 <AmiBlitz3.ab3@23129>      CLR.b thenmode
00031CF6 <AmiBlitz3.ab3@23133>    MOVEQ.l #$3A,D0
00031CFE <AmiBlitz3.ab3@23135>      MOVE.b #1,temp
00031D02 <AmiBlitz3.ab3@23138>  BRA.w 'notend2
00031D06 <AmiBlitz3.ab3@23141>   BPL.w 'notend2
00031D0A <AmiBlitz3.ab3@23142>   CMP.w #-$7FF3,D0         ; was #$800d                                ;macro ?
00031D0E <AmiBlitz3.ab3@23143>    BNE.w 'notamac
00031D14 <AmiBlitz3.ab3@23144>   ADDQ.w #1,coolnest
00031D18 <AmiBlitz3.ab3@23145>  BRA.w 'notend
00031D1C <AmiBlitz3.ab3@23149>   CMP.w #$80d7,d0                                          ;object ?
00031D20 <AmiBlitz3.ab3@23150>     BNE 'l1x
00031D26 <AmiBlitz3.ab3@23151>     TST.b objectcount
00031D2A <AmiBlitz3.ab3@23152>     BNE JUMP_macnesterr
00031D2E <AmiBlitz3.ab3@23155>   CMP.w #$8021,d0
00031D32 <AmiBlitz3.ab3@23156>     BNE 'nothen
00031D3A <AmiBlitz3.ab3@23157>     MOVE.b #1,thenmode
00031D40 <AmiBlitz3.ab3@23160>   TST.b thenmode
00031D44 <AmiBlitz3.ab3@23161>         BEQ 'l1c
00031D48 <AmiBlitz3.ab3@23162>    CMP.w #$8002,d0                                         ;end if
00031D4C <AmiBlitz3.ab3@23163>    BNE 'l1c
00031D50 <AmiBlitz3.ab3@23164>    MOVEM.l d0/a5,-(a7)
00031D56 <AmiBlitz3.ab3@23165>    JSR get1bytemain
00031D58 <AmiBlitz3.ab3@23166>    MOVE.w d0,d1
00031D5C <AmiBlitz3.ab3@23167>    MOVEM.l (a7)+,a5/d0
00031D60 <AmiBlitz3.ab3@23168>    CMP.w #$800b,d1
00031D64 <AmiBlitz3.ab3@23169>    BNE 'l1c
00031D6A <AmiBlitz3.ab3@23170>    CLR.b thenmode
00031D6E <AmiBlitz3.ab3@23174>    CMP.w #-$7FFE,D0   ; was #$8002                                     ;end ?
00031D72 <AmiBlitz3.ab3@23175>    BNE.w 'notend
00031D74 <AmiBlitz3.ab3@23177>    MOVE.l a5,-(a7)
00031D7A <AmiBlitz3.ab3@23178>    JSR get1bytemain
00031D7C <AmiBlitz3.ab3@23179>    MOVE.l (a7)+,a5
00031D7E <AmiBlitz3.ab3@23180>    TST.w d0
00031D82 <AmiBlitz3.ab3@23181>    BEQ 'doend
00031D86 <AmiBlitz3.ab3@23182>    CMP.w #":",d0
00031D8A <AmiBlitz3.ab3@23183>    BEQ 'doend
00031D8E <AmiBlitz3.ab3@23184>    CMP.w #";",d0
00031D92 <AmiBlitz3.ab3@23185>    BEQ 'doend
00031D94 <AmiBlitz3.ab3@23186>    MOVE.l a5,-(a7)
00031D9A <AmiBlitz3.ab3@23187>    JSR get1bytemain
00031D9E <AmiBlitz3.ab3@23188>    MOVE.l -1(a5),d0
00031DA0 <AmiBlitz3.ab3@23189>    MOVE.l (a7)+,a5
00031DA6 <AmiBlitz3.ab3@23190>    CMP.l #"noa7",d0
00031DAA <AmiBlitz3.ab3@23191>    BEQ 'doend
00031DAE <AmiBlitz3.ab3@23192>  BRA 'morechar
00031DB2 <AmiBlitz3.ab3@23195>   MOVE.w #$8002,D0
00031DB6 <AmiBlitz3.ab3@23196>    BSR.w macputw
00031DBA <AmiBlitz3.ab3@23197>  BRA 'gather
00031DC0 <AmiBlitz3.ab3@23201>   JSR get1bytemain
00031DC4 <AmiBlitz3.ab3@23202>    CMP.w #-$7FF3,D0        ;was #$800d,                                ;end macro
00031DC8 <AmiBlitz3.ab3@23204>    BEQ.w 'lo1
00031DCC <AmiBlitz3.ab3@23205>   CMP.w #$80d7,d0                                          ;end object
00031DD0 <AmiBlitz3.ab3@23207>   BNE 'notem
00031DD6 <AmiBlitz3.ab3@23209>   SUBQ.b #1,objectcount
00031DDC <AmiBlitz3.ab3@23210>   TST.b developobject
00031DE0 <AmiBlitz3.ab3@23211>   BEQ 'lo1
00031DE4 <AmiBlitz3.ab3@23212>   BSR skiprest
00031DE6 <AmiBlitz3.ab3@23213>  RTS
00031DEC <AmiBlitz3.ab3@23217>   SUBQ.w #1,coolnest
00031DF0 <AmiBlitz3.ab3@23218>    BMI.w 'macdone
00031DF2 <AmiBlitz3.ab3@23221>   MOVE.w D0,-(A7)
00031DF6 <AmiBlitz3.ab3@23222>   MOVE.w #$8002,D0
00031DFA <AmiBlitz3.ab3@23223>    BSR.w macputw
00031DFC <AmiBlitz3.ab3@23224>   MOVE.w (A7)+,D0
00031E00 <AmiBlitz3.ab3@23225>  BRA.w 'notend
00031E04 <AmiBlitz3.ab3@23228>   BSR.w macputw
00031E08 <AmiBlitz3.ab3@23229>  BRA.w 'gather
00031E0E <AmiBlitz3.ab3@23233>     CMP.w #"@@",-1(a5)                                     ;merge lines
00031E12 <AmiBlitz3.ab3@23234>     BNE 'no
00031E16 <AmiBlitz3.ab3@23235>      MOVEM.l D2/A0/A2,-(A7)
00031E1C <AmiBlitz3.ab3@23236>    JSR nextline
00031E20 <AmiBlitz3.ab3@23237>    BEQ.w JUMP_macenderr
00031E24 <AmiBlitz3.ab3@23238>   MOVEM.l (A7)+,D2/A0/A2
00031E26 <AmiBlitz3.ab3@23239>     TST.w D2
00031E2A <AmiBlitz3.ab3@23240>    BEQ.w 'gather
00031E2E <AmiBlitz3.ab3@23241>  BRA 'gather
00031E32 <AmiBlitz3.ab3@23245>   BSR.w macputb
00031E36 <AmiBlitz3.ab3@23246>  BRA.w 'gather
00031E38 <AmiBlitz3.ab3@23249>   ADDQ.w #4,A7
00031E3A <AmiBlitz3.ab3@23250>   MOVE.l A0,D0
00031E40 <AmiBlitz3.ab3@23251>   SUB.l ptr_macrobuffer_begin,D0
00031E44 <AmiBlitz3.ab3@23257>    BEQ.w 'cdone
00031E48 <AmiBlitz3.ab3@23258>   CMPI.b #":",-(A0)
00031E4C <AmiBlitz3.ab3@23259>    BNE.w 'cdone
00031E50 <AmiBlitz3.ab3@23260>   CMP.w #$1,D0
00031E54 <AmiBlitz3.ab3@23261>    BEQ.w 'cdo
00031E58 <AmiBlitz3.ab3@23262>   TST.b -$1(A0)
00031E5C <AmiBlitz3.ab3@23263>    BMI.w 'cdone
00031E5E <AmiBlitz3.ab3@23266>   SUBQ.w #1,D0
00031E62 <AmiBlitz3.ab3@23267>  BRA.w 'mclean
00031E66 <AmiBlitz3.ab3@23270>   MOVE.w D0,$8(A2)
00031E6A <AmiBlitz3.ab3@23271>    BEQ.w 'skip2
00031E6C <AmiBlitz3.ab3@23272>   MOVEQ.l #$01,D1
00031E72 <AmiBlitz3.ab3@23273>   MOVEA.l _execbase,A6
00031E78 <AmiBlitz3.ab3@23275>   MOVE.l mempool,a0
00031E7C <AmiBlitz3.ab3@23276>   JSR _AllocPooled(a6)
00031E7E <AmiBlitz3.ab3@23279>   MOVEA.l D0,A0
00031E82 <AmiBlitz3.ab3@23280>   MOVE.l A0,$4(A2)
00031E86 <AmiBlitz3.ab3@23281>   MOVE.w $8(A2),D1
00031E8A <AmiBlitz3.ab3@23282>    BEQ.w 'skip2
00031E8C <AmiBlitz3.ab3@23283>   SUBQ.w #1,D1
00031E92 <AmiBlitz3.ab3@23284>   MOVEA.l ptr_macrobuffer_begin,A1
00031E94 <AmiBlitz3.ab3@23287>     MOVE.b (A1)+,(A0)+
00031E98 <AmiBlitz3.ab3@23288>   DBF D1,'lll
00031E9E <AmiBlitz3.ab3@23291> JMP get1bytemain
00031EA0 <AmiBlitz3.ab3@23295>   MOVE.w D0,D1
00031EA2 <AmiBlitz3.ab3@23296>   LSR.w #8,D1
00031EA4 <AmiBlitz3.ab3@23297>   MOVE.b D1,(A0)+
00031EA6 <AmiBlitz3.ab3@23300>   MOVEQ.l #-$01,D2
00031EA8 <AmiBlitz3.ab3@23301>   MOVE.b D0,(A0)+
00031EAE <AmiBlitz3.ab3@23302>   CMPA.l ptr_macrobuffer_end,A0
00031EB2 <AmiBlitz3.ab3@23303>    BCC.w macbigerr2
00031EB4 <AmiBlitz3.ab3@23304> RTS
00031EBA <AmiBlitz3.ab3@23307> macbigerr2 JMP macbigerr
00031EBC <AmiBlitz3.ab3@23311>   MOVE.l d0,-(a7)
00031EBE <AmiBlitz3.ab3@23312>   MOVEQ #0,d0
00031EC4 <AmiBlitz3.ab3@23313>   CLR.b skiptoggle
00031EC6 <AmiBlitz3.ab3@23316>     MOVE.b (a5),d0
00031ECA <AmiBlitz3.ab3@23317>     BEQ 'l3
00031ECE <AmiBlitz3.ab3@23318>     CMP.b #";",d0
00031ED2 <AmiBlitz3.ab3@23319>     BNE 'l2
00031EDA <AmiBlitz3.ab3@23320>     MOVE.b #1,skiptoggle
00031EE0 <AmiBlitz3.ab3@23323>     TST.b skiptoggle
00031EE4 <AmiBlitz3.ab3@23324>     BNE 'l4
00031EE8 <AmiBlitz3.ab3@23325>     CMP.b #":",d0
00031EEC <AmiBlitz3.ab3@23326>     BEQ 'l3
00031EEE <AmiBlitz3.ab3@23329>     ADDQ #1,a5
00031EF2 <AmiBlitz3.ab3@23330>  BRA 'loop
00031EF8 <AmiBlitz3.ab3@23333>   MOVE.w d0,lastchar
00031EFA <AmiBlitz3.ab3@23334>   MOVE.l (a7)+,d0
00031EFC <AmiBlitz3.ab3@23335> RTS
00031F00 <AmiBlitz3.ab3@23342>   BSR.w ifchar
00031F04 <AmiBlitz3.ab3@23343>    BNE.w JUMP_syntaxerr
00031F06 <AmiBlitz3.ab3@23344>   MOVE.w D0,D1
00031F0C <AmiBlitz3.ab3@23345>   JSR get1bytemain
00031F10 <AmiBlitz3.ab3@23346>   BSR.w ifchar
00031F14 <AmiBlitz3.ab3@23347>    BNE.w 'skip
00031F16 <AmiBlitz3.ab3@23348>   ADDQ.w #1,D0
00031F18 <AmiBlitz3.ab3@23349>   MOVE.w D0,D2
00031F1A <AmiBlitz3.ab3@23350>   ADD.w D0,D0
00031F1C <AmiBlitz3.ab3@23351>   ADD.w D2,D0
00031F1E <AmiBlitz3.ab3@23352>   ADD.w D0,D1
00031F20 <AmiBlitz3.ab3@23353>   MOVE.w D1,D0
00031F24 <AmiBlitz3.ab3@23354>   ANDI.w #$3,D0
00031F28 <AmiBlitz3.ab3@23355>   CMP.w #$3,D0
00031F2C <AmiBlitz3.ab3@23356>    BEQ.w JUMP_syntaxerr
00031F32 <AmiBlitz3.ab3@23358>   JSR get1bytemain
00031F34 <AmiBlitz3.ab3@23361> RTS
00031F36 <AmiBlitz3.ab3@23364> thetst1:  TST.b D0
00031F38 <AmiBlitz3.ab3@23365> thetst2:  TST.w D0
00031F3A <AmiBlitz3.ab3@23366> thetst3:  TST.l D0
00031F3C <AmiBlitz3.ab3@23367> thetst4:  TST.l (A7)+                                      ;Any Length?
00031F40 <AmiBlitz3.ab3@23368> thetst5:  JSR _Reschedule(A6)
00031F44 <AmiBlitz3.ab3@23370> posbr:    BEQ.w posbr
00031F48 <AmiBlitz3.ab3@23371> negbr:    BNE.w negbr
00031F4A <AmiBlitz3.ab3@23375>   MOVEQ.l #-$01,D2
00031F4E <AmiBlitz3.ab3@23376> BRA.w doifm
00031F54 <AmiBlitz3.ab3@23380>   CLR.l fp0addr
00031F56 <AmiBlitz3.ab3@23381>   MOVEQ.l #$01,D1                                          ;while flag
00031F58 <AmiBlitz3.ab3@23382>   MOVEQ.l #$00,D2                                          ;negate flag
00031F5C <AmiBlitz3.ab3@23383> BRA.w doif2
00031F62 <AmiBlitz3.ab3@23387>   LEA firstrep,A2
00031F64 <AmiBlitz3.ab3@23388>   MOVEQ.l #$08,D2
00031F68 <AmiBlitz3.ab3@23389> BRA.w freeslist
00031F6C <AmiBlitz3.ab3@23393>   LEA firstsel(PC),A2
00031F6E <AmiBlitz3.ab3@23394>   MOVEQ.l #$0E,D2
00031F70 <AmiBlitz3.ab3@23399>   MOVEQ.l #$00,D3
00031F72 <AmiBlitz3.ab3@23407>   MOVE.l (A2),D0
00031F74 <AmiBlitz3.ab3@23408>   CLR.l (A2)
00031F76 <AmiBlitz3.ab3@23409>   MOVEA.l D0,A2
00031F7C <AmiBlitz3.ab3@23410>   MOVEA.l _execbase,A6
00031F80 <AmiBlitz3.ab3@23413>     CMPA.w #$0,A2
00031F84 <AmiBlitz3.ab3@23414>      BEQ.w 'done
00031F86 <AmiBlitz3.ab3@23415>     TST.w D3
00031F8A <AmiBlitz3.ab3@23416>      BEQ.w 'skip
00031F8E <AmiBlitz3.ab3@23417>     MOVEM.l D2-D3/A2,-(A7)
00031F90 <AmiBlitz3.ab3@23418>     ADDA.w D3,A2
00031F92 <AmiBlitz3.ab3@23419>     MOVE.l D4,D2
00031F96 <AmiBlitz3.ab3@23420>     BSR.w freeslist
00031F9A <AmiBlitz3.ab3@23421>     MOVEM.l (A7)+,D2-D3/A2
00031F9C <AmiBlitz3.ab3@23424>     MOVEA.l A2,A1
00031F9E <AmiBlitz3.ab3@23425>     MOVE.l D2,D0
00031FA0 <AmiBlitz3.ab3@23426>     MOVEA.l (A2),A2
00031FA6 <AmiBlitz3.ab3@23427>     MOVE.l mempool,a0
00031FAA <AmiBlitz3.ab3@23428>     JSR _FreePooled(A6)
00031FAE <AmiBlitz3.ab3@23429>  BRA.w 'loop
00031FB0 <AmiBlitz3.ab3@23432> RTS
00031FB6 <AmiBlitz3.ab3@23434> JUMP_eselerr JMP eselerr
00031FBA <AmiBlitz3.ab3@23437> firstsel:  Ds.l 1
00031FBE <AmiBlitz3.ab3@23440> selpushb:   Dc.b $02,$40,$00,$FF                           ;ANDI.W  #$00FF,D0
00031FC0 <AmiBlitz3.ab3@23443> selpushw:   MOVE.w D0,-(A7)
00031FC2 <AmiBlitz3.ab3@23445> selpushl:   MOVE.l D0,-(A7)
00031FC6 <AmiBlitz3.ab3@23447> selpushs:   LEA $4(A7),A2                                  ;(a7)=len of string!
00031FCA <AmiBlitz3.ab3@23450> selcomb:    ANDI.w #$FF,D0
00031FCC <AmiBlitz3.ab3@23451> selcomw:    CMP.w (A7),D0
00031FCE <AmiBlitz3.ab3@23453> selcoml:    CMP.l (A7),D0
00031FD2 <AmiBlitz3.ab3@23455> selbne:     BNE.w selbne
00031FD4 <AmiBlitz3.ab3@23457> endsel:     ADDQ.w #8,A7
00031FD8 <AmiBlitz3.ab3@23463>   MOVE.l firstsel(PC),D0                                  
00031FDC <AmiBlitz3.ab3@23464>    BEQ.w JUMP_eselerr
00031FDE <AmiBlitz3.ab3@23465>   MOVEA.l D0,A2
00031FE2 <AmiBlitz3.ab3@23466>    BSR.w fillbne
00031FE8 <AmiBlitz3.ab3@23469>   MOVEA.l _execbase,A6
00031FEC <AmiBlitz3.ab3@23472>   MOVE.l $4(A2),D0
00031FF0 <AmiBlitz3.ab3@23473>    BEQ.w 'done
00031FF2 <AmiBlitz3.ab3@23474>   MOVEA.l D0,A3
00031FF6 <AmiBlitz3.ab3@23475>   MOVEA.l $4(A3),A0
00031FFC <AmiBlitz3.ab3@23476>   MOVE.l destpointer,D1
00031FFE <AmiBlitz3.ab3@23477>   SUB.l A0,D1
00032004 <AmiBlitz3.ab3@23479>     TST.b fast
00032008 <AmiBlitz3.ab3@23480>     BEQ 'loop_l1
0003200E <AmiBlitz3.ab3@23481>     MOVE.w dontwrite,D0
00032012 <AmiBlitz3.ab3@23482>     BNE.w 'skip
00032014 <AmiBlitz3.ab3@23483>     ADDQ.l #2,d1
00032018 <AmiBlitz3.ab3@23484>     MOVE.l d1,-2(a0)
0003201C <AmiBlitz3.ab3@23485>   BRA 'skip
00032022 <AmiBlitz3.ab3@23489>   TST.w dontwrite
00032026 <AmiBlitz3.ab3@23490>      BNE.w 'skip
0003202C <AmiBlitz3.ab3@23491>   CMP.l #MaxWordSgnd,D1
00032030 <AmiBlitz3.ab3@23492>    BHI.w JUMP_cbraerr
00032032 <AmiBlitz3.ab3@23493>   MOVE.w D1,(A0)
00032036 <AmiBlitz3.ab3@23496>   MOVE.l (A3),$4(A2)                                       ;next of me is new first
00032038 <AmiBlitz3.ab3@23497>   MOVEA.l A3,A1
0003203A <AmiBlitz3.ab3@23498>   MOVEQ.l #$08,D0
00032040 <AmiBlitz3.ab3@23499>   MOVE.l mempool,a0
00032044 <AmiBlitz3.ab3@23500>    JSR _FreePooled(A6)
00032048 <AmiBlitz3.ab3@23501>  BRA.w 'loop
0003204E <AmiBlitz3.ab3@23504>   JSR popselect                                            ;fix stack on select
00032052 <AmiBlitz3.ab3@23505>   MOVEA.l firstsel(PC),A1
00032058 <AmiBlitz3.ab3@23506>   MOVE.l (A1),firstsel
0003205A <AmiBlitz3.ab3@23507>   MOVEQ.l #$0E,D0
00032060 <AmiBlitz3.ab3@23508>   MOVEA.l _execbase,A6
00032066 <AmiBlitz3.ab3@23509>   MOVE.l mempool,a0
0003206A <AmiBlitz3.ab3@23510>   JSR _FreePooled(A6)
00032070 <AmiBlitz3.ab3@23511> JMP get1bytemain
00032072 <AmiBlitz3.ab3@23515>   MOVEA.l (A7)+,A1
00032074 <AmiBlitz3.ab3@23516>   SUBQ.w #8,A1
00032076 <AmiBlitz3.ab3@23517>   MOVEQ.l #$09,D0
00032078 <AmiBlitz3.ab3@23518>   ADD.l (A1),D0
0003207A <AmiBlitz3.ab3@23521>   ADDQ.w #2,A7                                             ;for runtime errs!
0003207E <AmiBlitz3.ab3@23526>   MOVE.l firstsel(PC),D0
00032082 <AmiBlitz3.ab3@23527>    BEQ.w JUMP_defaerr
00032084 <AmiBlitz3.ab3@23528>   MOVEA.l D0,A2
00032088 <AmiBlitz3.ab3@23529>   BSR.w fillbra
0003208C <AmiBlitz3.ab3@23530>   BSR.w fillbne
00032090 <AmiBlitz3.ab3@23531>   CLR.l $8(A2)
00032094 <AmiBlitz3.ab3@23532>   MOVE.w $C(A2),D2
00032098 <AmiBlitz3.ab3@23533> BRA.w casechk
0003209E <AmiBlitz3.ab3@23535> JUMP_defaerr JMP defaerr
000320A2 <AmiBlitz3.ab3@23540>   MOVE.l $8(A2),D0
000320A6 <AmiBlitz3.ab3@23541>    BEQ.w 'skip   ;none to do!
000320A8 <AmiBlitz3.ab3@23542>   MOVEA.l D0,A0
000320AE <AmiBlitz3.ab3@23543>   MOVE.l destpointer,D1
000320B0 <AmiBlitz3.ab3@23544>   SUB.l A0,D1
000320B6 <AmiBlitz3.ab3@23547>     TST.b fast
000320BA <AmiBlitz3.ab3@23548>     BEQ 'l1
000320C0 <AmiBlitz3.ab3@23549>     TST.w dontwrite
000320C4 <AmiBlitz3.ab3@23550>     BNE.w 'skip
000320C6 <AmiBlitz3.ab3@23551>     ADDQ.l #2,d1
000320CA <AmiBlitz3.ab3@23552>     MOVE.l D1,-2(A0)
000320CE <AmiBlitz3.ab3@23553>   BRA 'skip
000320D4 <AmiBlitz3.ab3@23557>   TST.w dontwrite
000320D8 <AmiBlitz3.ab3@23558>      BNE.w 'skip
000320DE <AmiBlitz3.ab3@23560>    CMP.l #MaxWordSgnd,D1
000320E2 <AmiBlitz3.ab3@23561>    BHI.w JUMP_cbraerr
000320E4 <AmiBlitz3.ab3@23562>   MOVE.w D1,(A0)
000320E6 <AmiBlitz3.ab3@23565> RTS
000320EC <AmiBlitz3.ab3@23567> JUMP_cbraerr JMP cbraerr
000320F0 <AmiBlitz3.ab3@23573>   MOVE.l $8(A2),D0
000320F4 <AmiBlitz3.ab3@23574>    BEQ.w 'skip
000320F6 <AmiBlitz3.ab3@23578>   MOVEA.l D0,A3
000320FA <AmiBlitz3.ab3@23579>   MOVE.w #$6000,D1
00032100 <AmiBlitz3.ab3@23582>    TST.b fast
00032104 <AmiBlitz3.ab3@23583>    BEQ 'l1
0003210A <AmiBlitz3.ab3@23584>    OR.l #$ff,d1
0003210E <AmiBlitz3.ab3@23585>    BSR writeword
00032112 <AmiBlitz3.ab3@23590>   BSR.w writeword
00032114 <AmiBlitz3.ab3@23591>   MOVEQ.l #$08,D0
00032116 <AmiBlitz3.ab3@23592>   MOVEQ.l #$01,D1
0003211C <AmiBlitz3.ab3@23593>   MOVEA.l _execbase,A6
00032122 <AmiBlitz3.ab3@23595>   MOVE.l mempool,a0
00032126 <AmiBlitz3.ab3@23596>   JSR _AllocPooled(a6)
00032128 <AmiBlitz3.ab3@23599>   MOVEA.l D0,A0
0003212C <AmiBlitz3.ab3@23600>   MOVE.l $4(A2),(A0)
00032130 <AmiBlitz3.ab3@23601>   MOVE.l A0,$4(A2)
00032138 <AmiBlitz3.ab3@23602>   MOVE.l destpointer,$4(A0)
0003213C <AmiBlitz3.ab3@23603>  BRA.w writeword
0003213E <AmiBlitz3.ab3@23606> RTS
00032144 <AmiBlitz3.ab3@23610>   TST.b debugmode
00032148 <AmiBlitz3.ab3@23611>    BEQ.w 'norerr
0003214C <AmiBlitz3.ab3@23612>   MOVE.w #$C313,D1
00032150 <AmiBlitz3.ab3@23613>   CMP.w #$3,D2
00032154 <AmiBlitz3.ab3@23614>    BCS.w 'dochk
00032156 <AmiBlitz3.ab3@23615>   ADDQ.w #1,D1
0003215A <AmiBlitz3.ab3@23618>  BRA.w Atokejsr
0003215C <AmiBlitz3.ab3@23621> RTS
00032162 <AmiBlitz3.ab3@23624> JUMP_caseerr JMP caseerr
00032166 <AmiBlitz3.ab3@23631>   MOVE.l firstsel(PC),D0
0003216A <AmiBlitz3.ab3@23632>    BEQ.w JUMP_caseerr
0003216C <AmiBlitz3.ab3@23633>   MOVEA.l D0,A2
00032170 <AmiBlitz3.ab3@23634>    BSR.w fillbra
00032174 <AmiBlitz3.ab3@23635>    BSR.w fillbne
00032178 <AmiBlitz3.ab3@23637>   MOVE.w $C(A2),D2    ;type to get!
0003217A <AmiBlitz3.ab3@23638>   MOVE.w D2,-(A7)
0003217E <AmiBlitz3.ab3@23639>    BSR.w casechk
00032180 <AmiBlitz3.ab3@23640>   MOVE.w (A7),D2
00032184 <AmiBlitz3.ab3@23643>    BSR.w bakeval
00032186 <AmiBlitz3.ab3@23644>   MOVE.w (A7)+,D2    ;types to compare
0003218A <AmiBlitz3.ab3@23645>   LEA selcomb(PC),A0
0003218E <AmiBlitz3.ab3@23646>   LEA selcombf(PC),A1
00032192 <AmiBlitz3.ab3@23647>   CMP.w #$1,D2
00032196 <AmiBlitz3.ab3@23648>    BEQ.w 'doit
0003219A <AmiBlitz3.ab3@23649>   LEA selcomw(PC),A0
0003219E <AmiBlitz3.ab3@23650>   CMP.w #$2,D2
000321A2 <AmiBlitz3.ab3@23651>    BEQ.w 'doit
000321A6 <AmiBlitz3.ab3@23652>   LEA selcoml(PC),A0
000321AA <AmiBlitz3.ab3@23653>   LEA selcomlf(PC),A1
000321AE <AmiBlitz3.ab3@23654>   CMP.w #$7,D2
000321B2 <AmiBlitz3.ab3@23655>    BCS.w 'doit
000321B6 <AmiBlitz3.ab3@23657>   MOVE.w #$CE01,D1     ; was #casestrcomp
000321BA <AmiBlitz3.ab3@23658>    BSR.w Atokejsr
000321BE <AmiBlitz3.ab3@23659>  BRA.w 'doneit
000321C2 <AmiBlitz3.ab3@23662>   BSR.w pokecode
000321C6 <AmiBlitz3.ab3@23665>   MOVE.w selbne(PC),D1
000321CC <AmiBlitz3.ab3@23668>     TST.b fast
000321D0 <AmiBlitz3.ab3@23669>     BEQ 'l1
000321D6 <AmiBlitz3.ab3@23670>     ORI.l #$ff,d1
000321DA <AmiBlitz3.ab3@23671>     BSR writeword
000321DE <AmiBlitz3.ab3@23676>   BSR.w writeword
000321E2 <AmiBlitz3.ab3@23677>   MOVEA.l firstsel(PC),A0
000321EA <AmiBlitz3.ab3@23678>   MOVE.l destpointer,$8(A0)
000321EE <AmiBlitz3.ab3@23679> BRA.w writeword
000321F2 <AmiBlitz3.ab3@23683> pcchk:      Dc.b $3F,$3C,$73,$45                           ;MOVE.W  #$7345,-(A7)   ;#"sE",-(a7) org source
000321F4 <AmiBlitz3.ab3@23684> clrst:      Dc.b $42,$A7                                   ;CLR.L   -(A7)
000321F8 <AmiBlitz3.ab3@23687> sellineat:  Ds.l 1
000321FE <AmiBlitz3.ab3@23693>   TST.b debugmode
00032202 <AmiBlitz3.ab3@23694>    BEQ.w 'norerr
00032206 <AmiBlitz3.ab3@23695>   MOVE.l pcchk(PC),D1                                      ;move #"sE",-(a7)
0003220A <AmiBlitz3.ab3@23696>    BSR.w writelong
00032214 <AmiBlitz3.ab3@23699>   MOVE.l linenumat,sellineat
0003221E <AmiBlitz3.ab3@23702>    MOVE.l destpointer,pushpc
00032228 <AmiBlitz3.ab3@23703>   MOVE.l hunkoffsetbase,pushoff
0003222A <AmiBlitz3.ab3@23705>   MOVEQ.l #$00,D2
0003222E <AmiBlitz3.ab3@23706>    BSR.w bakevalu                                          ;Evaluate
00032232 <AmiBlitz3.ab3@23707>    BSR.w pushdo
00032236 <AmiBlitz3.ab3@23708>   CMP.w #$7,D2
0003223A <AmiBlitz3.ab3@23709>    BNE.w 'nos
0003223E <AmiBlitz3.ab3@23710>   MOVE.w clrst(PC),D1
00032242 <AmiBlitz3.ab3@23711>    BSR.w writeword
00032246 <AmiBlitz3.ab3@23714>    BSR.w pushput
0003224A <AmiBlitz3.ab3@23715>   LEA selpushb(PC),A0
0003224E <AmiBlitz3.ab3@23716>   LEA selpushbf(PC),A1
00032252 <AmiBlitz3.ab3@23717>   CMP.w #$1,D2
00032256 <AmiBlitz3.ab3@23718>    BEQ.w 'doit
0003225A <AmiBlitz3.ab3@23719>   LEA selpushw(PC),A0
0003225E <AmiBlitz3.ab3@23720>   CMP.w #$2,D2
00032262 <AmiBlitz3.ab3@23721>    BEQ.w 'doit
00032266 <AmiBlitz3.ab3@23722>   LEA selpushl(PC),A0
0003226A <AmiBlitz3.ab3@23723>   LEA selpushlf(PC),A1
0003226E <AmiBlitz3.ab3@23724>   CMP.w #$7,D2
00032272 <AmiBlitz3.ab3@23725>    BCS.w 'doit
00032278 <AmiBlitz3.ab3@23727>   MOVE.w moved0a3,D1                                       ;d0 to a3!
0003227C <AmiBlitz3.ab3@23728>    BSR.w writeword
00032280 <AmiBlitz3.ab3@23729>   LEA selpushs(PC),A0
00032284 <AmiBlitz3.ab3@23730>   LEA selpushsf(PC),A1
00032288 <AmiBlitz3.ab3@23731>    BSR.w pokecode
0003228C <AmiBlitz3.ab3@23732>   MOVE.w #$C701,D1     ; was #astring
00032290 <AmiBlitz3.ab3@23733>    BSR.w Atokejsr
00032294 <AmiBlitz3.ab3@23734>  BRA.w 'doneit
00032298 <AmiBlitz3.ab3@23737>   BSR.w pokecode
0003229A <AmiBlitz3.ab3@23740>   MOVEQ.l #$0E,D0
0003229C <AmiBlitz3.ab3@23741>   MOVEQ.l #$01,D1
000322A2 <AmiBlitz3.ab3@23742>   MOVEA.l _execbase,A6
000322A8 <AmiBlitz3.ab3@23745>   MOVE.l mempool,a0
000322AC <AmiBlitz3.ab3@23746>   JSR _AllocPooled(a6)
000322AE <AmiBlitz3.ab3@23748>   MOVEA.l D0,A0
000322B2 <AmiBlitz3.ab3@23749>   MOVE.l firstsel(PC),(A0)
000322B8 <AmiBlitz3.ab3@23750>   MOVE.l A0,firstsel
000322BC <AmiBlitz3.ab3@23751>   CLR.l $4(A0)
000322C0 <AmiBlitz3.ab3@23752>   CLR.l $8(A0)        ;default mode!
000322C4 <AmiBlitz3.ab3@23753>   MOVE.w D2,$C(A0)
000322C6 <AmiBlitz3.ab3@23754> RTS
000322CC <AmiBlitz3.ab3@23758>   MOVE.l firstrep,D0
000322D0 <AmiBlitz3.ab3@23759>    BEQ.w JUMP_unterr1
000322D4 <AmiBlitz3.ab3@23760>   MOVE.w #$6000,D1      ;BRA
000322D8 <AmiBlitz3.ab3@23761>   BSR.w writeword
000322DA <AmiBlitz3.ab3@23762>   MOVEA.l D0,A0
000322DE <AmiBlitz3.ab3@23763>   MOVE.l $4(A0),D1      ;dest pc
000322E4 <AmiBlitz3.ab3@23764>   SUB.l destpointer,D1
000322E6 <AmiBlitz3.ab3@23765>   TST.w D1
000322EA <AmiBlitz3.ab3@23766>    BPL.w JUMP_unterr2
000322EE <AmiBlitz3.ab3@23767>   BSR.w writeword
000322F4 <AmiBlitz3.ab3@23768>   MOVEA.l _execbase,A6
000322F8 <AmiBlitz3.ab3@23769> BRA.w unlinkrep
000322FE <AmiBlitz3.ab3@23771> JUMP_unterr2 JMP unterr2
00032304 <AmiBlitz3.ab3@23772> JUMP_unterr1 JMP unterr1
0003230A <AmiBlitz3.ab3@23776>   MOVE.l firstrep,D0
0003230E <AmiBlitz3.ab3@23777>    BEQ.w JUMP_unterr1    ;no repeat!
00032312 <AmiBlitz3.ab3@23778>   BSR.w do_if            ;do the until
00032318 <AmiBlitz3.ab3@23780>   JSR reget
0003231C <AmiBlitz3.ab3@23781>    BNE.w JUMP_syntaxerr
00032322 <AmiBlitz3.ab3@23783>   MOVE.w dontwrite,D1
00032326 <AmiBlitz3.ab3@23784>    BNE.w 'skip
0003232C <AmiBlitz3.ab3@23785>   MOVEA.l firstrep,A0
00032332 <AmiBlitz3.ab3@23786>   MOVEA.l destpointer,A1
00032338 <AmiBlitz3.ab3@23789>     TST.b fast
0003233C <AmiBlitz3.ab3@23790>     BEQ 'l1
0003233E <AmiBlitz3.ab3@23791>     SUBQ.w #4,a1
00032342 <AmiBlitz3.ab3@23792>     MOVE.l $4(A0),D2
00032344 <AmiBlitz3.ab3@23793>     SUB.l A1,D2
00032346 <AmiBlitz3.ab3@23794>     MOVE.l d2,(a1)
0003234A <AmiBlitz3.ab3@23795>   BRA 'skip
0003234C <AmiBlitz3.ab3@23800>   SUBQ.w #2,A1
00032350 <AmiBlitz3.ab3@23801>   MOVE.l $4(A0),D2    ;dest pc.
00032352 <AmiBlitz3.ab3@23802>   SUB.l A1,D2
00032354 <AmiBlitz3.ab3@23803>   TST.w D2
00032358 <AmiBlitz3.ab3@23804>    BPL.w JUMP_unterr2
0003235A <AmiBlitz3.ab3@23805>   MOVE.w D2,(A1)      ;put in pra dest.
00032360 <AmiBlitz3.ab3@23808>   MOVEA.l firstiff,A1
00032366 <AmiBlitz3.ab3@23809>   MOVE.l (A1),firstiff
00032368 <AmiBlitz3.ab3@23810>   MOVEQ.l #$0E,D0
0003236E <AmiBlitz3.ab3@23811>   MOVEA.l _execbase,A6
00032374 <AmiBlitz3.ab3@23814>   MOVE.l mempool,a0
00032378 <AmiBlitz3.ab3@23815>   JSR _FreePooled(A6)
0003237E <AmiBlitz3.ab3@23819>   MOVEA.l firstrep,A1
00032384 <AmiBlitz3.ab3@23820>   MOVE.l (A1),firstrep
00032386 <AmiBlitz3.ab3@23821>   MOVEQ.l #$08,D0
0003238C <AmiBlitz3.ab3@23824>   MOVE.l mempool,a0
00032390 <AmiBlitz3.ab3@23825> JMP _FreePooled(A6)
00032394 <AmiBlitz3.ab3@23828> iflineat:   Ds.l 1
00032396 <AmiBlitz3.ab3@23832>   MOVEQ.l #$00,D2   ;negate flag
0003239C <AmiBlitz3.ab3@23834>   TST.b fast
000323A0 <AmiBlitz3.ab3@23835>   BEQ 'l1
000323A8 <AmiBlitz3.ab3@23836>   MOVE.b #1,nostringopt
000323B0 <AmiBlitz3.ab3@23837>   MOVE.b #1,iniffcommand
000323B2 <AmiBlitz3.ab3@23842>   MOVEQ.l #$00,D1  ;if flag
000323B4 <AmiBlitz3.ab3@23848>   MOVE.w D1,-(A7)
000323BA <AmiBlitz3.ab3@23849>   MOVE.l destpointer,-(A7)
000323BC <AmiBlitz3.ab3@23850>   MOVE.w D2,-(A7)
000323C6 <AmiBlitz3.ab3@23851>   MOVE.l linenumat,iflineat
000323C8 <AmiBlitz3.ab3@23853>   MOVEQ.l #$00,D2
000323D2 <AmiBlitz3.ab3@23855>   MOVE.b optistring,optistring2
000323DA <AmiBlitz3.ab3@23856>   MOVE.b #1,optistring
000323DE <AmiBlitz3.ab3@23858>   BSR.w bakevalu       ;Get True/False Expression!
000323E8 <AmiBlitz3.ab3@23860>   MOVE.b optistring2,optistring
000323EC <AmiBlitz3.ab3@23862>   CMP.w #$5,D2
000323F0 <AmiBlitz3.ab3@23863>    BEQ.w 'float
000323F4 <AmiBlitz3.ab3@23864>   MOVE.w thetst1(PC),D1
000323F8 <AmiBlitz3.ab3@23865>   CMP.w #$1,D2
000323FC <AmiBlitz3.ab3@23866>    BEQ.w 'writebranchcode
00032400 <AmiBlitz3.ab3@23867>   MOVE.w thetst2(PC),D1
00032404 <AmiBlitz3.ab3@23868>   CMP.w #$2,D2
00032408 <AmiBlitz3.ab3@23869>    BEQ.w 'writebranchcode
0003240C <AmiBlitz3.ab3@23870>   MOVE.w thetst4(PC),D1
00032410 <AmiBlitz3.ab3@23871>   CMP.w #$7,D2
00032414 <AmiBlitz3.ab3@23872>    BEQ.w 'writebranchcode
00032418 <AmiBlitz3.ab3@23873>   MOVE.w thetst3(PC),D1
0003241C <AmiBlitz3.ab3@23874>  BRA.w 'writebranchcode
00032422 <AmiBlitz3.ab3@23878>   TST.b fpu
00032426 <AmiBlitz3.ab3@23879>   BEQ 'dofpu
0003242C <AmiBlitz3.ab3@23880>   MOVE.l #$f200003a,d1
00032430 <AmiBlitz3.ab3@23881>   BSR writelong
00032434 <AmiBlitz3.ab3@23882>   MOVE.w #$f2c1,d1       
00032438 <AmiBlitz3.ab3@23883>   BSR writeword
0003243C <AmiBlitz3.ab3@23884>   BSR writelong
0003243E <AmiBlitz3.ab3@23885>   ADDQ.l #2,a7
00032442 <AmiBlitz3.ab3@23886>  BRA.w 'br2
00032446 <AmiBlitz3.ab3@23890>    MOVE.w #$C900,D1     ;was #getffpbase
0003244A <AmiBlitz3.ab3@23891>    BSR.w Atokejsr
0003244E <AmiBlitz3.ab3@23892>   MOVE.l thetst5(PC),D1
00032452 <AmiBlitz3.ab3@23893>    BSR.w writelong
00032456 <AmiBlitz3.ab3@23894>  BRA.w 'gotst2
0003245C <AmiBlitz3.ab3@23898>          CLR.b iniffcommand
00032462 <AmiBlitz3.ab3@23899>          TST.b fast                                        ;branchcode
00032466 <AmiBlitz3.ab3@23900>          BEQ 'b6
0003246C <AmiBlitz3.ab3@23901>          TST.b fpu
00032470 <AmiBlitz3.ab3@23902>          BEQ 'nofpu
00032476 <AmiBlitz3.ab3@23906>           MOVE.l destpointer,a0
0003247C <AmiBlitz3.ab3@23907>          SUB.l load_var_addr,a0
00032482 <AmiBlitz3.ab3@23908>          CMP.l #4,a0
00032486 <AmiBlitz3.ab3@23909>          BEQ 'nofpu
0003248E <AmiBlitz3.ab3@23910>          CMP.l #$f2400014,-4(a4)                           ;<
00032492 <AmiBlitz3.ab3@23911>          BNE 'nolt
00032498 <AmiBlitz3.ab3@23912>          SUBQ.l #2,destpointer
0003249E <AmiBlitz3.ab3@23913>          MOVE.w #$f293,-4(a4)                              ;
000324A2 <AmiBlitz3.ab3@23914>  BRA 'brf
000324AA <AmiBlitz3.ab3@23917>   CMP.l #$f2400015,-4(a4)                                  ;<=
000324AE <AmiBlitz3.ab3@23918>          BNE 'nole
000324B4 <AmiBlitz3.ab3@23919>          SUBQ.l #2,destpointer
000324BA <AmiBlitz3.ab3@23920>          MOVE.w #$f292,-4(a4)
000324BE <AmiBlitz3.ab3@23921>  BRA 'brf
000324C6 <AmiBlitz3.ab3@23924>   CMP.l #$f2400013,-4(a4)                                  ;=>
000324CA <AmiBlitz3.ab3@23925>          BNE 'noge
000324D0 <AmiBlitz3.ab3@23926>          SUBQ.l #2,destpointer
000324D6 <AmiBlitz3.ab3@23927>          MOVE.w #$f294,-4(a4)
000324DA <AmiBlitz3.ab3@23928>  BRA 'brf
000324E2 <AmiBlitz3.ab3@23931>   CMP.l #$f2400012,-4(a4)                                  ;>
000324E6 <AmiBlitz3.ab3@23932>          BNE 'nogt
000324EC <AmiBlitz3.ab3@23933>          SUBQ.l #2,destpointer
000324F2 <AmiBlitz3.ab3@23934>          MOVE.w #$f295,-4(a4)
000324F6 <AmiBlitz3.ab3@23935>  BRA 'brf
000324FE <AmiBlitz3.ab3@23938>   CMP.l #$f2400001,-4(a4)                                  ;=
00032502 <AmiBlitz3.ab3@23939>          BNE 'noeq
00032508 <AmiBlitz3.ab3@23940>          SUBQ.l #2,destpointer
0003250E <AmiBlitz3.ab3@23941>          MOVE.w #$f28e,-4(a4)
00032512 <AmiBlitz3.ab3@23942>  BRA 'brf
0003251A <AmiBlitz3.ab3@23945>   CMP.l #$f240000e,-4(a4)                                  ;<>
0003251E <AmiBlitz3.ab3@23946>          BNE 'none
00032524 <AmiBlitz3.ab3@23947>          SUBQ.l #2,destpointer
0003252A <AmiBlitz3.ab3@23948>          MOVE.w #$f281,-4(a4)
0003252C <AmiBlitz3.ab3@23951>   ADDQ.l #2,a7
00032532 <AmiBlitz3.ab3@23953>     TST.b fast
00032536 <AmiBlitz3.ab3@23954>     BEQ 'l1
0003253C <AmiBlitz3.ab3@23955>     OR.b #$40,-3(a4)
00032540 <AmiBlitz3.ab3@23956>     BSR writeword
00032544 <AmiBlitz3.ab3@23960>   BSR writeword
00032548 <AmiBlitz3.ab3@23961>  BRA.s 'br2
0003254E <AmiBlitz3.ab3@23965>   MOVE.l destpointer,a0
00032554 <AmiBlitz3.ab3@23966>          SUB.l load_var_addr,a0
0003255A <AmiBlitz3.ab3@23967>          CMP.l #4,a0
0003255E <AmiBlitz3.ab3@23968>          BEQ 'gotst2
00032564 <AmiBlitz3.ab3@23969>          CMP.w #$4eb9,-6(a4)
00032568 <AmiBlitz3.ab3@23970>          BEQ 'b6
0003256E <AmiBlitz3.ab3@23971>          CMP.w #$5ec0,-2(a4)                               ;>
00032572 <AmiBlitz3.ab3@23972>      BNE.s 'lb1
00032578 <AmiBlitz3.ab3@23973>          MOVE.w #$6f00,-2(a4)                              ;ble
0003257C <AmiBlitz3.ab3@23974>  BRA.s 'br
00032582 <AmiBlitz3.ab3@23977>   CMP.w #$5dc0,-2(a4)                                       ;<
00032586 <AmiBlitz3.ab3@23978>   BNE.s 'lb2
0003258C <AmiBlitz3.ab3@23979>          MOVE.w #$6c00,-2(a4)                              ;bge
00032590 <AmiBlitz3.ab3@23980>  BRA.s 'br
00032596 <AmiBlitz3.ab3@23983>   CMP.w #$57c0,-2(a4)                                      ;=
0003259A <AmiBlitz3.ab3@23984>   BNE.s 'lb3
000325A0 <AmiBlitz3.ab3@23985>          MOVE.w #$6600,-2(a4)                              ;bne
000325A4 <AmiBlitz3.ab3@23986>  BRA.s 'br
000325AA <AmiBlitz3.ab3@23989>   CMP.w #$56c0,-2(a4)                                      ;<>
000325AE <AmiBlitz3.ab3@23990>   BNE.s 'lb4
000325B4 <AmiBlitz3.ab3@23991>          MOVE.w #$6700,-2(a4)                              ;beq
000325B8 <AmiBlitz3.ab3@23992>  BRA.s 'br
000325BE <AmiBlitz3.ab3@23995>   CMP.w #$5cc0,-2(a4)                                      ;>=
000325C2 <AmiBlitz3.ab3@23996>   BNE.s 'lb5
000325C8 <AmiBlitz3.ab3@23997>          MOVE.w #$6d00,-2(a4)                              ;blt
000325CC <AmiBlitz3.ab3@23998>  BRA.s 'br
000325D2 <AmiBlitz3.ab3@24001>   CMP.w #$5fc0,-2(a4)                                      ;<=
000325D6 <AmiBlitz3.ab3@24002>         BNE.s 'b6
000325DC <AmiBlitz3.ab3@24003>          MOVE.w #$6e00,-2(a4)                              ;bgt
000325DE <AmiBlitz3.ab3@24006>   TST.w (a7)+
000325E4 <AmiBlitz3.ab3@24008>         TST.b fast
000325E8 <AmiBlitz3.ab3@24009>         BEQ 'l1a
000325EE <AmiBlitz3.ab3@24010>         OR.b #$ff,-1(a4)                                   ;long branches
000325F2 <AmiBlitz3.ab3@24011>         BSR writeword
000325F6 <AmiBlitz3.ab3@24015>         BSR writeword
000325FA <AmiBlitz3.ab3@24016>  BRA.s 'br2
000325FE <AmiBlitz3.ab3@24020>   BSR.w writeword
00032602 <AmiBlitz3.ab3@24023>   MOVE.l posbr(PC),D1
00032604 <AmiBlitz3.ab3@24024>   TST.w (A7)+
00032608 <AmiBlitz3.ab3@24025>    BEQ.w 'skip
0003260C <AmiBlitz3.ab3@24026>   MOVE.l negbr(PC),D1
00032612 <AmiBlitz3.ab3@24030>   TST.b fast
00032616 <AmiBlitz3.ab3@24031>            BEQ 'l1b
0003261C <AmiBlitz3.ab3@24032>            OR.l #$00ff0000,d1
00032620 <AmiBlitz3.ab3@24033>            BSR writelong
00032624 <AmiBlitz3.ab3@24034>            BSR writeword
00032628 <AmiBlitz3.ab3@24035>  BRA 'br2
0003262C <AmiBlitz3.ab3@24038>   BSR.w writelong
0003262E <AmiBlitz3.ab3@24042>   MOVEQ.l #$0E,D0
00032630 <AmiBlitz3.ab3@24043>   MOVEQ.l #$01,D1
00032636 <AmiBlitz3.ab3@24044>   MOVEA.l _execbase,A6
0003263C <AmiBlitz3.ab3@24047>   MOVE.l mempool,a0
00032640 <AmiBlitz3.ab3@24048>   JSR _AllocPooled(a6)
00032642 <AmiBlitz3.ab3@24051>   MOVEA.l D0,A0
00032648 <AmiBlitz3.ab3@24052>   MOVE.l firstiff,(A0)
0003264E <AmiBlitz3.ab3@24053>   MOVE.l A0,firstiff
00032652 <AmiBlitz3.ab3@24054>   MOVE.l (A7)+,$4(A0)
0003265A <AmiBlitz3.ab3@24055>   MOVE.l destpointer,$8(A0)
0003265E <AmiBlitz3.ab3@24056>   MOVE.w (A7)+,$C(A0)
00032664 <AmiBlitz3.ab3@24057>    JSR reget
00032668 <AmiBlitz3.ab3@24058>    BEQ.w ifdone
0003266E <AmiBlitz3.ab3@24059>   BSET #$7,$C(A0)    ;one liner
00032678 <AmiBlitz3.ab3@24065>   MOVE.w oldqflag,instringon
0003267E <AmiBlitz3.ab3@24066>   MOVEA.l lastsourcepos,A5
00032686 <AmiBlitz3.ab3@24068>   MOVE.w #$003A,lastchar      ; ':'
00032688 <AmiBlitz3.ab3@24071> RTS
0003268C <AmiBlitz3.ab3@24075>   CMP.w #$1,D0     ;4
00032690 <AmiBlitz3.ab3@24076>    BLT.w gc1skip   ;4
00032694 <AmiBlitz3.ab3@24077>   CMP.w #$0,D0     ;2
00032698 <AmiBlitz3.ab3@24078>    BGT.w gc1skip
0003269A <AmiBlitz3.ab3@24079>   ADD.w D0,D0
0003269C <AmiBlitz3.ab3@24080>   ADD.w D0,D0
000326A0 <AmiBlitz3.ab3@24081>   MOVEA.l gc1labs-4(PC,D0.W),A0
000326A2 <AmiBlitz3.ab3@24082>  JMP (A0)
000326A6 <AmiBlitz3.ab3@24085>  BRA.w gc1skip
000326AA <AmiBlitz3.ab3@24091>   CMP.w #$1,D0     ;4
000326AE <AmiBlitz3.ab3@24092>    BLT.w gc2skip   ;4
000326B2 <AmiBlitz3.ab3@24093>   CMP.w #$0,D0     ;2
000326B6 <AmiBlitz3.ab3@24094>    BGT.w gc2skip
000326B8 <AmiBlitz3.ab3@24095>   ADD.w D0,D0
000326BA <AmiBlitz3.ab3@24096>   ADD.w D0,D0
000326BE <AmiBlitz3.ab3@24097>   MOVEA.l gc2labs-4(PC,D0.W),A0
000326C0 <AmiBlitz3.ab3@24098>   JSR (A0)
000326C4 <AmiBlitz3.ab3@24101>  BRA.w gc2skip
000326C8 <AmiBlitz3.ab3@24107>   CMP.w #$1,D0    ;4
000326CC <AmiBlitz3.ab3@24108>    BLT.w gc3skip  ;4
000326D0 <AmiBlitz3.ab3@24109>   CMP.w #$0,D0    ;2
000326D4 <AmiBlitz3.ab3@24110>    BGT.w gc3skip
000326D6 <AmiBlitz3.ab3@24111>   ADD.w D0,D0
000326D8 <AmiBlitz3.ab3@24112>   ADD.w D0,D0
000326DC <AmiBlitz3.ab3@24113>   MOVEA.l gc3labs-4(PC,D0.W),A0
000326E0 <AmiBlitz3.ab3@24116>   MOVE.w #$6753,-(A7)                                      ;#'gS' ;for runtime error checking!
000326E2 <AmiBlitz3.ab3@24117>    JSR (A0)
000326E6 <AmiBlitz3.ab3@24120>  BRA.w gc3skip
000326E8 <AmiBlitz3.ab3@24125> labcnt:   Ds.w 1
000326EA <AmiBlitz3.ab3@24132>   MOVEQ.l #$02,D2
000326EE <AmiBlitz3.ab3@24133>    BSR.w bakeval
000326F2 <AmiBlitz3.ab3@24135>   LEA ongotocode(PC),A0
000326F6 <AmiBlitz3.ab3@24136>   LEA ongotocodef(PC),A1
000326FA <AmiBlitz3.ab3@24137>   MOVE.w #gc1skip-ongotocode,D1      ; is #$001A
000326FE <AmiBlitz3.ab3@24138>   CMP.w #-$7FFB,D0                   ; was #$8005
00032702 <AmiBlitz3.ab3@24139>    BEQ.w 'isok
00032706 <AmiBlitz3.ab3@24140>   CMP.w #-$7FFA,D0                   ; was #$8006
0003270A <AmiBlitz3.ab3@24141>    BNE.w JUMP_syntaxerr
0003270E <AmiBlitz3.ab3@24142>   LEA ongosubcode(PC),A0
00032712 <AmiBlitz3.ab3@24143>   LEA ongosubcodef(PC),A1
00032716 <AmiBlitz3.ab3@24144>   MOVE.w #gc2skip-ongosubcode,D1     ; is #$001A
0003271C <AmiBlitz3.ab3@24146>   TST.b debugmode
00032720 <AmiBlitz3.ab3@24147>    BEQ.b 'isok
00032726 <AmiBlitz3.ab3@24149>    JSR chkstak
0003272A <AmiBlitz3.ab3@24150>   LEA ongcode(PC),A0
0003272E <AmiBlitz3.ab3@24151>   LEA ongcodef(PC),A1
00032732 <AmiBlitz3.ab3@24152>   MOVE.w #gc3skip-ongcode,D1         ; is #$001E
00032734 <AmiBlitz3.ab3@24155>   MOVE.w D1,-(A7)
0003273A <AmiBlitz3.ab3@24156>   MOVE.l destpointer,-(A7)                                 ;for when we know number of labels!
0003273E <AmiBlitz3.ab3@24157>    BSR.w pokecode
00032744 <AmiBlitz3.ab3@24158>   CLR.w labcnt
0003274A <AmiBlitz3.ab3@24164>    JSR get1bytemain
00032750 <AmiBlitz3.ab3@24165>   SUBQ.l #2,destpointer                                    ;for makealab!
00032754 <AmiBlitz3.ab3@24166>    BSR.w makealab2
0003275A <AmiBlitz3.ab3@24167>   ADDQ.l #2,destpointer
00032760 <AmiBlitz3.ab3@24168>    JSR addoff
00032764 <AmiBlitz3.ab3@24169>   MOVE.l $8(A2),D1
00032768 <AmiBlitz3.ab3@24170>    BSR.w writelong
0003276E <AmiBlitz3.ab3@24171>   ADDQ.w #1,labcnt
00032774 <AmiBlitz3.ab3@24172>    JSR reget
00032778 <AmiBlitz3.ab3@24173>   CMP.w #$2C,D0 ; ','
0003277C <AmiBlitz3.ab3@24174>    BEQ.w 'loop
0003277E <AmiBlitz3.ab3@24176>   MOVEA.l (A7)+,A0
00032780 <AmiBlitz3.ab3@24177>   MOVE.w (A7)+,D2
00032786 <AmiBlitz3.ab3@24178>   MOVE.w dontwrite,D1
0003278A <AmiBlitz3.ab3@24179>    BNE.w 'done
0003278E <AmiBlitz3.ab3@24181>   MOVE.w labcnt(PC),D1
00032792 <AmiBlitz3.ab3@24182>   MOVE.w D1,$A(A0)       ;for cmp#
00032794 <AmiBlitz3.ab3@24183>   ADD.w D1,D1
00032796 <AmiBlitz3.ab3@24184>   ADD.w D1,D1
00032798 <AmiBlitz3.ab3@24185>   ADDQ.w #2,D1
0003279C <AmiBlitz3.ab3@24186>   MOVE.w D1,$2(A0,D2.W)  ;for bra!
0003279E <AmiBlitz3.ab3@24189> RTS
000327A4 <AmiBlitz3.ab3@24193>   TST.b debugmode
000327A8 <AmiBlitz3.ab3@24194>    BEQ.w 'noerr
000327AE <AmiBlitz3.ab3@24196>    JSR chkstak
000327B4 <AmiBlitz3.ab3@24197>   MOVE.l goset,D1
000327B8 <AmiBlitz3.ab3@24198>    BSR.w writelong
000327BE <AmiBlitz3.ab3@24201>   MOVE.w gosubcode,D1
000327C2 <AmiBlitz3.ab3@24202> BRA.w dogoto2
000327C8 <AmiBlitz3.ab3@24206>   MOVE.w gotocode,D1
000327CA <AmiBlitz3.ab3@24209>   MOVE.w D1,-(A7)
000327CE <AmiBlitz3.ab3@24210>    BSR.w makealab2
000327D0 <AmiBlitz3.ab3@24211>   MOVE.w (A7)+,D1
000327D4 <AmiBlitz3.ab3@24212>    BSR.w writeword
000327DA <AmiBlitz3.ab3@24213>    JSR addoff
000327DE <AmiBlitz3.ab3@24214>   MOVE.l $8(A2),D1
000327E2 <AmiBlitz3.ab3@24215> BRA.w writelong
000327E8 <AmiBlitz3.ab3@24219>   MOVE.w proceduremode,D1
000327EC <AmiBlitz3.ab3@24220>    BEQ.w JUMP_badpenderr
000327F0 <AmiBlitz3.ab3@24222>   MOVE.w #$4EF9,D1
000327F4 <AmiBlitz3.ab3@24223>    BSR.w writeword
000327FA <AmiBlitz3.ab3@24224>    JSR addoff
00032800 <AmiBlitz3.ab3@24226>   MOVEA.l _execbase,A6
00032802 <AmiBlitz3.ab3@24227>   MOVEQ.l #$08,D0
00032804 <AmiBlitz3.ab3@24228>   MOVEQ.l #$01,D1
0003280A <AmiBlitz3.ab3@24231>   MOVE.l mempool,a0
0003280E <AmiBlitz3.ab3@24232>   JSR _AllocPooled(a6)
00032810 <AmiBlitz3.ab3@24234>   MOVEA.l D0,A0
00032816 <AmiBlitz3.ab3@24235>   MOVE.l firstpend,(A0)
0003281C <AmiBlitz3.ab3@24236>   MOVE.l A0,firstpend
00032824 <AmiBlitz3.ab3@24237>   MOVE.l destpointer,$4(A0)
00032828 <AmiBlitz3.ab3@24239> BRA.w writelong
0003282C <AmiBlitz3.ab3@24243>   BSR.w do_AsmExit
00032832 <AmiBlitz3.ab3@24244> JMP get1bytemain
0003283A <AmiBlitz3.ab3@24249>   MOVE.b #1,nostringopt
0003283E <AmiBlitz3.ab3@24250>   MOVEM.l a0/a1/d1,-(a7)
00032844 <AmiBlitz3.ab3@24252>   MOVEA.l currentfunction,A0
0003284A <AmiBlitz3.ab3@24254>     CMP.l #0,a0
0003284E <AmiBlitz3.ab3@24255>     BNE 'l1
00032854 <AmiBlitz3.ab3@24256>     JMP errorasmexit
00032856 <AmiBlitz3.ab3@24259>   MOVEQ.l #$00,D2
0003285A <AmiBlitz3.ab3@24261>   MOVE.b $5(A0),D2      ;type returning!
0003285E <AmiBlitz3.ab3@24262>   BSR.w eval            ;put return val in d0.
00032864 <AmiBlitz3.ab3@24265>   MOVEA.l currentfunction,A0
00032868 <AmiBlitz3.ab3@24266>   MOVE.l funcstruct_returntype(a0),a0
0003286E <AmiBlitz3.ab3@24267>   CMP.l #0,a0
00032872 <AmiBlitz3.ab3@24268>   BEQ 'isstatement
0003287A <AmiBlitz3.ab3@24269>   CMP.l #$100,4(a0)
0003287E <AmiBlitz3.ab3@24270>   BLT.w 'isvar
00032880 <AmiBlitz3.ab3@24271>   MOVE.l a2,a1
00032886 <AmiBlitz3.ab3@24272>   TST.l typetocast
0003288A <AmiBlitz3.ab3@24273>   BEQ 'nocast
00032890 <AmiBlitz3.ab3@24274>   MOVE.l typetocast,a1
00032892 <AmiBlitz3.ab3@24277>   CMP.l a0,a1
00032896 <AmiBlitz3.ab3@24278>   BEQ 'ok
0003289C <AmiBlitz3.ab3@24279>   CLR.l typetocast
000328A2 <AmiBlitz3.ab3@24280>   MOVE.l lasttoken,d1
000328A6 <AmiBlitz3.ab3@24281>   CMP.w #NullTokenID,d1                   ;$b581 ok, when token for null
000328AA <AmiBlitz3.ab3@24282>   BEQ 'isnull
000328B0 <AmiBlitz3.ab3@24285>   JMP errorconvertreturntype
000328B4 <AmiBlitz3.ab3@24294>   MOVEM.l (a7)+,a0/a1/d1
000328B8 <AmiBlitz3.ab3@24297> BRA.w do_AsmExit
000328BE <AmiBlitz3.ab3@24299> error_convert_types2 JMP error_convert_types
000328C4 <AmiBlitz3.ab3@24315>   TST.b debugmode
000328C8 <AmiBlitz3.ab3@24316>    BEQ.w normret
000328CC <AmiBlitz3.ab3@24317>   MOVE.w #$C305,D1        ; was #chkret,
000328D0 <AmiBlitz3.ab3@24318> BRA.w Atokejsr
000328D4 <AmiBlitz3.ab3@24325>   MOVE.w #$4E75,D1
000328D8 <AmiBlitz3.ab3@24326> BRA.w writeword
000328DC <AmiBlitz3.ab3@24329> localslist:  Ds.l 1                                        ;all locals for procs.;??Looks like obsovled data??
000328E0 <AmiBlitz3.ab3@24330> proclocals:  Ds.l 1                                        ;for debugga!
000328E2 <AmiBlitz3.ab3@24331> procnum:     Ds.w 1
000328E4 <AmiBlitz3.ab3@24332> procnum2:    Ds.w 1
000328E8 <AmiBlitz3.ab3@24333> prolineat:   Ds.l 1
000328EE <AmiBlitz3.ab3@24338>    TST.w proceduremode
000328F2 <AmiBlitz3.ab3@24339>    BGT JUMP_sreterr
000328F6 <AmiBlitz3.ab3@24341>    CMP.w #-$7FF9,D0     ;was #$8007
000328FA <AmiBlitz3.ab3@24342>    BEQ.w stateret
000328FC <AmiBlitz3.ab3@24343>    MOVEQ.l #-$01,D1  ;statement flag
00032900 <AmiBlitz3.ab3@24344> BRA.w do_function2
00032906 <AmiBlitz3.ab3@24346> JUMP_sreterr JMP sreterr
0003290C <AmiBlitz3.ab3@24350>   CLR.b skipfunc
00032912 <AmiBlitz3.ab3@24351>   TST.l unusedfunc
00032916 <AmiBlitz3.ab3@24352>   BEQ 'ex
0003291A <AmiBlitz3.ab3@24353>   MOVEM.l d0-d7/a0-a6,-(a7)
00032920 <AmiBlitz3.ab3@24354>   MOVE.l unusedfunc,d1
00032926 <AmiBlitz3.ab3@24355>   LEA ptr_parameterstore,a5
00032928 <AmiBlitz3.ab3@24358>   MOVE.l d1,a0
0003292C <AmiBlitz3.ab3@24359>   LEA 12(a0),a2
0003292E <AmiBlitz3.ab3@24360>   MOVE.l a5,a1
00032930 <AmiBlitz3.ab3@24362>   CMPM.b (a1)+,(a2)+
00032934 <AmiBlitz3.ab3@24363>   BNE 'neq
00032936 <AmiBlitz3.ab3@24364>   TST.b (a2)
0003293A <AmiBlitz3.ab3@24365>   BNE 'ch
0003293C <AmiBlitz3.ab3@24366>   TST.b (a1)
00032940 <AmiBlitz3.ab3@24367>   BNE 'neq
00032948 <AmiBlitz3.ab3@24368>   MOVE.b #1,skipfunc
0003294C <AmiBlitz3.ab3@24369>  BRA 'out
0003294E <AmiBlitz3.ab3@24372>   MOVE.l (a0),d1
00032952 <AmiBlitz3.ab3@24373>   BNE 'ag
00032956 <AmiBlitz3.ab3@24376>   MOVEM.l (a7)+,d0-d7/a0-a6
00032958 <AmiBlitz3.ab3@24379> RTS
0003295E <AmiBlitz3.ab3@24382> JUMP_dupprocerr  JMP dupprocerr
00032964 <AmiBlitz3.ab3@24383> JUMP_illprocperr JMP illprocperr
0003296A <AmiBlitz3.ab3@24384> JUMP_toovarerr   JMP toovarerr
00032970 <AmiBlitz3.ab3@24385> JUMP_more6pard   JMP more6pard
00032978 <AmiBlitz3.ab3@24389>   CMP.w #-1,proceduremode                                  
0003297C <AmiBlitz3.ab3@24390>    BEQ JUMP_sreterr
00032980 <AmiBlitz3.ab3@24391>   CMP.w #-$7FF9,D0      ; was #$8007
00032984 <AmiBlitz3.ab3@24392>    BEQ.w do_function_return
0003298E <AmiBlitz3.ab3@24396>   MOVE.w oldqflag,instringon
00032994 <AmiBlitz3.ab3@24397>   MOVEA.l lastsourcepos,A5
0003299A <AmiBlitz3.ab3@24399>   JSR getfunctionreturntype
000329A0 <AmiBlitz3.ab3@24400>   JSR get1bytemain
000329A6 <AmiBlitz3.ab3@24406>   TST.b declare
000329AA <AmiBlitz3.ab3@24407>   BEQ 'l3
000329B2 <AmiBlitz3.ab3@24408>   MOVE.b #1,nowdeclare
000329B8 <AmiBlitz3.ab3@24412>   JSR errchx                                           ;writejumpoverfunction
000329BE <AmiBlitz3.ab3@24416>   CLR.b fastfunc
000329C8 <AmiBlitz3.ab3@24417>   MOVE.l firstiff,firstiffstore
000329D0 <AmiBlitz3.ab3@24418>   CMP.l #"FAST",-1(a5)
000329D4 <AmiBlitz3.ab3@24419>   BNE 'nofast
000329DA <AmiBlitz3.ab3@24420>   CMP.b #" ",3(a5)
000329DE <AmiBlitz3.ab3@24421>   BNE 'nofast
000329E0 <AmiBlitz3.ab3@24422>   ADDQ.l #3,a5
000329E4 <AmiBlitz3.ab3@24425>     CMP.b #" ",(a5)
000329E8 <AmiBlitz3.ab3@24426>      BNE 'x1
000329EA <AmiBlitz3.ab3@24427>     ADDQ #1,a5
000329EE <AmiBlitz3.ab3@24428>  BRA 'x2
000329F4 <AmiBlitz3.ab3@24431>   MOVE.l a5,lastsourcepos
000329FC <AmiBlitz3.ab3@24432>   MOVE.b #1,fastfunc
00032A04 <AmiBlitz3.ab3@24435>   CMP.l #"NOOP",-1(a5)                                     ;compile 3* so its deactivate
00032A08 <AmiBlitz3.ab3@24436>  BRA 'noopt
00032A0E <AmiBlitz3.ab3@24438>   CMP.w #"T ",3(a5)                                        ;??Looks like dead code??
00032A12 <AmiBlitz3.ab3@24439>   BNE 'noopt                                               ;          "
00032A14 <AmiBlitz3.ab3@24440>   ADDQ.l #4,a5                                             ;          "
00032A18 <AmiBlitz3.ab3@24443>     CMP.b #" ",(a5)                                        ;          "
00032A1C <AmiBlitz3.ab3@24444>      BNE 'x1b                                              ;          "
00032A1E <AmiBlitz3.ab3@24445>     ADDQ #1,a5                                             ;          "
00032A22 <AmiBlitz3.ab3@24446>  BRA 'x2b
00032A28 <AmiBlitz3.ab3@24449>   MOVE.l a5,lastsourcepos                                  ;          "
00032A2E <AmiBlitz3.ab3@24450>   JSR makename2                                            ;          "
00032A32 <AmiBlitz3.ab3@24451>  BRA 'l1                                                   ;          "
00032A38 <AmiBlitz3.ab3@24454>   JSR makename2
00032A3E <AmiBlitz3.ab3@24455>   JSR checkused
00032A44 <AmiBlitz3.ab3@24456>   TST.b skipfunc
00032A48 <AmiBlitz3.ab3@24457>    BEQ 'l1
00032A4E <AmiBlitz3.ab3@24458>   JSR skipme
00032A54 <AmiBlitz3.ab3@24459>   CLR.b fastfunc
00032A56 <AmiBlitz3.ab3@24460>  RTS
00032A60 <AmiBlitz3.ab3@24464>   MOVE.l linenumat,prolineat
00032A66 <AmiBlitz3.ab3@24466>   ADDQ.w #1,procnum2
00032A6E <AmiBlitz3.ab3@24467>   MOVE.w procnum2(PC),procnum
00032A74 <AmiBlitz3.ab3@24468>   MOVE.w D1,proceduremode
00032A7A <AmiBlitz3.ab3@24469>   CLR.w locvaroff
00032A7E <AmiBlitz3.ab3@24471>   CMP.w #$7B,D0   ;'{'
00032A82 <AmiBlitz3.ab3@24472>    BNE.w JUMP_syntaxerr
00032A8A <AmiBlitz3.ab3@24474>    MOVE.b #1,infunctioncode
00032A90 <AmiBlitz3.ab3@24476>   MOVEA.l tempvm,A0
00032A98 <AmiBlitz3.ab3@24477>   MOVE.w $C(A0),memlibstat
00032A9E <AmiBlitz3.ab3@24478>   BCLR #$7,$C(A0)                                          ;Bit out of range
00032AA2 <AmiBlitz3.ab3@24479>   MOVE.w #$4EF9,D1  ;make a jump around the proc
00032AA6 <AmiBlitz3.ab3@24480>    BSR.w writeword
00032AAC <AmiBlitz3.ab3@24481>    JSR addoff
00032AB0 <AmiBlitz3.ab3@24482>    BSR.w writelong
00032AB6 <AmiBlitz3.ab3@24484>    JSR findproc                                          ;findproc function
00032ABA <AmiBlitz3.ab3@24485>    BEQ.w JUMP_dupprocerr
00032AC0 <AmiBlitz3.ab3@24486>    JSR addlabel
00032AC6 <AmiBlitz3.ab3@24488>    MOVE.b #31,$20(a2)                                      ;increase if more pars
00032ACC <AmiBlitz3.ab3@24489>    MOVE.b #0,isfunc(a2)
00032AD4 <AmiBlitz3.ab3@24490>    MOVE.l functionreturntype,funcstruct_returntype(a2)
00032ADC <AmiBlitz3.ab3@24492>   MOVE.l destpointer,$E(A2)    ;new!
00032AE2 <AmiBlitz3.ab3@24493>   MOVE.l A2,currentfunction
00032AE8 <AmiBlitz3.ab3@24495>   LEA nops8,A0
00032AEE <AmiBlitz3.ab3@24496>   LEA nopsf,A1
00032AF2 <AmiBlitz3.ab3@24497>    BSR.w pokecode2
00032AF8 <AmiBlitz3.ab3@24499>   TST.b debugmode
00032AFC <AmiBlitz3.ab3@24500>    BEQ.b 'nodebug
00032AFE <AmiBlitz3.ab3@24502>   MOVEQ.l #$04,D1
00032B04 <AmiBlitz3.ab3@24503>    JSR writetrap
00032B0E <AmiBlitz3.ab3@24504>   MOVE.l destpointer,proclocals
00032B12 <AmiBlitz3.ab3@24505>    BSR.w writelong
00032B16 <AmiBlitz3.ab3@24506>    BSR.w writelong
00032B1A <AmiBlitz3.ab3@24509>    LEA $16(A2),A4
00032B22 <AmiBlitz3.ab3@24510>   MOVE.b proceduremode+1,$5(A2)
00032B24 <AmiBlitz3.ab3@24511>   MOVEQ.l #$00,D6
00032B26 <AmiBlitz3.ab3@24512>   MOVEQ.l #$00,D5
00032B2C <AmiBlitz3.ab3@24513>    JSR get1bytemain
00032B30 <AmiBlitz3.ab3@24514>   CMP.w #$7D,D0        ; '}'
00032B34 <AmiBlitz3.ab3@24515>    BEQ.w 'done
00032B38 <AmiBlitz3.ab3@24519>    CMP.b #"@",d0
00032B3C <AmiBlitz3.ab3@24520>    BNE 'l2
00032B3E <AmiBlitz3.ab3@24521>    MOVE.l a0,-(a7)
00032B44 <AmiBlitz3.ab3@24522>    MOVE.l currentfunction,a0
00032B4A <AmiBlitz3.ab3@24523>    CMP.b #31,$20(a0)                                       ;increase if morepars
00032B4E <AmiBlitz3.ab3@24524>    BNE 'l4
00032B52 <AmiBlitz3.ab3@24525>    MOVE.b d6,$20(a0)                                       ;increase if morepar
00032B58 <AmiBlitz3.ab3@24528>    JSR get1bytemain
00032B5A <AmiBlitz3.ab3@24529>    MOVE.l (a7)+,a0
00032B5E <AmiBlitz3.ab3@24533>    BSR.w getparameter
00032B62 <AmiBlitz3.ab3@24534>    BSR.w fetchvars
00032B6A <AmiBlitz3.ab3@24535>   CMPI.l #$7,$4(A2)
00032B6E <AmiBlitz3.ab3@24536>    BNE.w 'notst
00032B74 <AmiBlitz3.ab3@24537>   LEA stbuff,A0
00032B76 <AmiBlitz3.ab3@24538>   MOVE.w D5,D1
00032B78 <AmiBlitz3.ab3@24539>   LSL.w #2,D1
00032B7C <AmiBlitz3.ab3@24540>   MOVE.w D6,$0(A0,D1.W)
00032B82 <AmiBlitz3.ab3@24541>   MOVE.w $4(A3),$2(A0,D1.W)
00032B84 <AmiBlitz3.ab3@24542>   ADDQ.w #1,D5
00032B86 <AmiBlitz3.ab3@24543>   MOVEQ.l #$07,D2
00032B8A <AmiBlitz3.ab3@24544>  BRA.w 'pgot
00032B8E <AmiBlitz3.ab3@24547>   MOVE.w #$2940,D1
00032B90 <AmiBlitz3.ab3@24548>   MOVEQ.l #$03,D2
00032B98 <AmiBlitz3.ab3@24549>   BTST #$0,flagmask+1
00032B9C <AmiBlitz3.ab3@24550>    BNE.w 'sgot
00032BA4 <AmiBlitz3.ab3@24551>   CMPI.l #$100,$4(A2)
00032BA8 <AmiBlitz3.ab3@24552>    BCC.w JUMP_illprocperr
00032BAC <AmiBlitz3.ab3@24553>   MOVE.w $6(A2),D2
00032BB0 <AmiBlitz3.ab3@24554>   CMP.w #$2,D2
00032BB4 <AmiBlitz3.ab3@24555>    BHI.w 'sgot
00032BB8 <AmiBlitz3.ab3@24556>    BEQ.w 'wgot
00032BBC <AmiBlitz3.ab3@24557>   EORI.w #$3000,D1
00032BC0 <AmiBlitz3.ab3@24558>  BRA.w 'sgot
00032BC4 <AmiBlitz3.ab3@24561>   ORI.w #$1000,D1
00032BC6 <AmiBlitz3.ab3@24564>   OR.w D6,D1
00032BCC <AmiBlitz3.ab3@24566>   TST.b fpu
00032BD0 <AmiBlitz3.ab3@24567>   BEQ 'nofpu
00032BD4 <AmiBlitz3.ab3@24568>   CMP.b #5,d2
00032BD8 <AmiBlitz3.ab3@24569>   BNE 'nofpu
00032BDC <AmiBlitz3.ab3@24570>   CMP.w #6,d6
00032BE0 <AmiBlitz3.ab3@24571>   BLT 'l10a
00032BE6 <AmiBlitz3.ab3@24572>   CMP.l #newtype_double,a2
00032BEA <AmiBlitz3.ab3@24573>   BEQ JUMP_more6pard
00032BEE <AmiBlitz3.ab3@24574>  BRA 'nofpu
00032BF4 <AmiBlitz3.ab3@24577>   MOVE.l #$f22c6400,d1
00032BF8 <AmiBlitz3.ab3@24578>   MOVEM.l d0/a4,-(a7)
00032BFA <AmiBlitz3.ab3@24579>   MOVE.l d6,d0
00032BFC <AmiBlitz3.ab3@24580>   ASL.l #7,d0
00032BFE <AmiBlitz3.ab3@24581>   OR.w d0,d1
00032C04 <AmiBlitz3.ab3@24582>   CMP.l #newtype_double,a2
00032C08 <AmiBlitz3.ab3@24583>   BNE 'l5
00032C0E <AmiBlitz3.ab3@24584>   OR.l #$1000,d1
00032C12 <AmiBlitz3.ab3@24587>   BSR writelong
00032C16 <AmiBlitz3.ab3@24588>   MOVE.w 4(a3),d1
00032C1A <AmiBlitz3.ab3@24589>   BSR writeword
00032C1E <AmiBlitz3.ab3@24590>   MOVEM.l (a7)+,a4/d0
00032C22 <AmiBlitz3.ab3@24591>  BRA 'pgot
00032C24 <AmiBlitz3.ab3@24595>   MOVE.l A4,-(A7)
00032C28 <AmiBlitz3.ab3@24597>    CMP.w #6,d6
00032C2C <AmiBlitz3.ab3@24598>    BLT 'l10
00032C30 <AmiBlitz3.ab3@24599>    MOVE.w #$c500-4,d1                                      ;savetemp+regnum
00032C32 <AmiBlitz3.ab3@24600>    ADD.w d6,d1
00032C38 <AmiBlitz3.ab3@24601>    JSR Atokejsr
00032C3E <AmiBlitz3.ab3@24602>    TST.w dontwrite
00032C42 <AmiBlitz3.ab3@24603>    BNE 'l10
00032C48 <AmiBlitz3.ab3@24604>    MOVE.l data1start,d1
00032C4E <AmiBlitz3.ab3@24605>    MOVE.l destpointer,a4
00032C52 <AmiBlitz3.ab3@24606>    ADD.l d1,-6(a4)
00032C58 <AmiBlitz3.ab3@24607>    MOVE.l destpointer,d1
00032C5A <AmiBlitz3.ab3@24608>    SUBQ.l #6,d1
00032C60 <AmiBlitz3.ab3@24609>    SUB.l destbufferstart,d1
00032C62 <AmiBlitz3.ab3@24611>    MOVE.l d2,-(a7)
00032C64 <AmiBlitz3.ab3@24612>    MOVE.l d1,d2
00032C6A <AmiBlitz3.ab3@24613>    JSR addhunkoffset                                       ;move.l $0,-x(a4)
00032C6C <AmiBlitz3.ab3@24614>    MOVE.l (a7)+,d2
00032C72 <AmiBlitz3.ab3@24615>    MOVE.l destpointer,a4
00032C76 <AmiBlitz3.ab3@24616>    CMP.w #2,d2
00032C7A <AmiBlitz3.ab3@24617>    BNE 'nw1
00032C80 <AmiBlitz3.ab3@24619>    MOVE.w #$3979,-8(a4)                                    ;move.w $0,-x(a4)
00032C88 <AmiBlitz3.ab3@24620>    ADD.l #2,-6(a4)
00032C8C <AmiBlitz3.ab3@24623>    CMP.w #1,d2
00032C90 <AmiBlitz3.ab3@24624>    BNE 'nb
00032C96 <AmiBlitz3.ab3@24625>    MOVE.w #$1979,-8(a4)                                    ;move.b $0,-x(a4)
00032C9E <AmiBlitz3.ab3@24626>    ADD.l #3,-6(a4)
00032CA4 <AmiBlitz3.ab3@24629>    MOVE.w $4(a3),-2(a4)
00032CA8 <AmiBlitz3.ab3@24630>  BRA 'ne1
00032CAC <AmiBlitz3.ab3@24634>   BSR.w writeword                                          ;write storeparameter
00032CB0 <AmiBlitz3.ab3@24637>   MOVE.w $4(A3),D1
00032CB4 <AmiBlitz3.ab3@24638>    BSR.w writeword
00032CB6 <AmiBlitz3.ab3@24641>   MOVEA.l (A7)+,A4
00032CBC <AmiBlitz3.ab3@24645>   CLR.l functionreturntype
00032CBE <AmiBlitz3.ab3@24647>   ADDQ.w #1,D6
00032CC2 <AmiBlitz3.ab3@24648>   CMP.w #11,D6          ; was #7                            ;max function parameters
00032CC6 <AmiBlitz3.ab3@24649>    BCC.w JUMP_toovarerr
00032CCC <AmiBlitz3.ab3@24651>   MOVE.l currentfunction,a0
00032CD0 <AmiBlitz3.ab3@24652>   MOVE.l a2,funcstruct_parametertype-4(a0,d6*4)             ;-4 because d6 is increment before
00032CD2 <AmiBlitz3.ab3@24654>   MOVE.b D2,(A4)+
00032CD6 <AmiBlitz3.ab3@24655>   CMP.w #$2C,D0      ;','
00032CDA <AmiBlitz3.ab3@24656>    BNE.w 'nomore
00032CE0 <AmiBlitz3.ab3@24657>    JSR get1bytemain
00032CE4 <AmiBlitz3.ab3@24671>  BRA.w 'more
00032CE8 <AmiBlitz3.ab3@24674>   CMP.w #$7D,D0
00032CEC <AmiBlitz3.ab3@24675>    BNE.w JUMP_syntaxerr
00032CF2 <AmiBlitz3.ab3@24678>   MOVEA.l currentfunction,A2
00032CF4 <AmiBlitz3.ab3@24679>   LSL.w #4,D5
00032CF6 <AmiBlitz3.ab3@24680>   OR.w D5,D6
00032CFA <AmiBlitz3.ab3@24681>   MOVE.b D6,$4(A2)
00032CFC <AmiBlitz3.ab3@24682>   LSR.w #4,D6
00032D00 <AmiBlitz3.ab3@24683>    BEQ.w 'nostrings
00032D06 <AmiBlitz3.ab3@24684>   LEA stbuff,A0
00032D08 <AmiBlitz3.ab3@24685>   SUBQ.w #1,D6
00032D0A <AmiBlitz3.ab3@24691>     MOVE.w D6,D1                                           ;function stringpars
00032D0C <AmiBlitz3.ab3@24692>     LSL.w #2,D1                                            ;stringsize was 2
00032D0E <AmiBlitz3.ab3@24695>       LSL.w #1,d1
00032D10 <AmiBlitz3.ab3@24696>       ADDQ.w #4,d1
00032D12 <AmiBlitz3.ab3@24699>     ADDQ.w #8,D1
00032D18 <AmiBlitz3.ab3@24700>     MOVE.w D1,funcst+2
00032D1E <AmiBlitz3.ab3@24701>     MOVE.l funcst,D1
00032D22 <AmiBlitz3.ab3@24702>     BSR.w writelong
00032D24 <AmiBlitz3.ab3@24703>     MOVE.w (A0)+,D1
00032D28 <AmiBlitz3.ab3@24705>     CMP.b #5,d1
00032D2C <AmiBlitz3.ab3@24706>     BLE 's1
00032D30 <AmiBlitz3.ab3@24707>     MOVE.w #$266c,d1                                       ;native move.l 4(a4),a3
00032D34 <AmiBlitz3.ab3@24708>     BSR writeword    ; was writeinstruction  tomsmart1
00032D36 <AmiBlitz3.ab3@24709>     MOVE.w D6,D1                                           ;function stringpars
00032D38 <AmiBlitz3.ab3@24710>     LSL.w #2,D1                                            ;stringsize was 2
00032D3A <AmiBlitz3.ab3@24712>       LSL.w #1,d1
00032D3C <AmiBlitz3.ab3@24714>     ADDQ.w #8,D1
00032D40 <AmiBlitz3.ab3@24715>     BSR writeword
00032D44 <AmiBlitz3.ab3@24716>   BRA 's2
00032D4A <AmiBlitz3.ab3@24720>     OR.w movedna3,D1
00032D4E <AmiBlitz3.ab3@24721>      BSR.w writeword
00032D54 <AmiBlitz3.ab3@24724>     MOVE.w (A0)+,least+2
00032D5A <AmiBlitz3.ab3@24725>     MOVE.l least,D1
00032D5E <AmiBlitz3.ab3@24726>      BSR.w writelong
00032D60 <AmiBlitz3.ab3@24727>     MOVE.l A0,-(A7)
00032D64 <AmiBlitz3.ab3@24728>     MOVE.w #$C700,D1
00032D68 <AmiBlitz3.ab3@24729>      BSR.w Atokejsr
00032D6A <AmiBlitz3.ab3@24730>     MOVEA.l (A7)+,A0
00032D6E <AmiBlitz3.ab3@24731>   DBF D6,'stloop
00032D74 <AmiBlitz3.ab3@24734> JMP get1bytemain
00032D7A <AmiBlitz3.ab3@24738>   MOVE.w dontwrite,D1
00032D7E <AmiBlitz3.ab3@24739>    BNE.w 'skip
00032D84 <AmiBlitz3.ab3@24740>   MOVE.l destpointer,-(A7)
00032D8A <AmiBlitz3.ab3@24742>   MOVE.l A0,destpointer
00032D90 <AmiBlitz3.ab3@24743>   MOVE.l linksize,D1
00032D94 <AmiBlitz3.ab3@24744>    BSR.w writelong                                         ;writefunctions jumppos
00032D9A <AmiBlitz3.ab3@24746>    TST.b fastfunc
00032D9E <AmiBlitz3.ab3@24747>    BNE 'skip1
00032DA2 <AmiBlitz3.ab3@24749>   MOVE.w #$CC00,D1      ; was #clrloc
00032DA6 <AmiBlitz3.ab3@24750>    BSR.w tokejsr2                                          ;write clearvars
00032DAC <AmiBlitz3.ab3@24753>   MOVE.l (A7)+,destpointer
00032DAE <AmiBlitz3.ab3@24756> RTS
00032DB4 <AmiBlitz3.ab3@24759> JUMP_errormsg_nofast  JMP errormsg_nofast
00032DBA <AmiBlitz3.ab3@24764>   MOVEA.l currentfunction,A2
00032DBE <AmiBlitz3.ab3@24765>   MOVEA.l $E(A2),A0          ;pc of proc
00032DC2 <AmiBlitz3.ab3@24766>   MOVE.w $6(A2),D1
00032DC6 <AmiBlitz3.ab3@24767>    BEQ.w 'skiplink
00032DCC <AmiBlitz3.ab3@24768>   MOVE.w D1,linksize+2
00032DD0 <AmiBlitz3.ab3@24769>   MOVE.w $8(A2),D1                                         ;check if function memalloc need
00032DD4 <AmiBlitz3.ab3@24770>    BNE.w 'howdy
00032DD6 <AmiBlitz3.ab3@24774>   ADDQ.w #6,A0
00032DDA <AmiBlitz3.ab3@24775>   MOVE.l A0,$E(A2)
00032DDE <AmiBlitz3.ab3@24776>  BRA.w linkput
00032DE0 <AmiBlitz3.ab3@24781>   MOVE.l A0,-(A7)
00032DE4 <AmiBlitz3.ab3@24782>    BSR.w linkput
00032DE6 <AmiBlitz3.ab3@24783>   MOVEA.l (A7)+,A0
00032DEA <AmiBlitz3.ab3@24784>   LEA $A(A0),A0
00032DF0 <AmiBlitz3.ab3@24785>   MOVEA.l currentfunction,A2
00032DF4 <AmiBlitz3.ab3@24786>  BRA.w 'cont
00032DF8 <AmiBlitz3.ab3@24789>   MOVE.w $8(A2),D1
00032DFC <AmiBlitz3.ab3@24790>    BNE.w 'cont
00032E00 <AmiBlitz3.ab3@24791>   LEA $10(A0),A0
00032E04 <AmiBlitz3.ab3@24792>   MOVE.l A0,$E(A2)
00032E06 <AmiBlitz3.ab3@24793>  RTS
00032E0C <AmiBlitz3.ab3@24796>    MOVE.w dontwrite,D1                                     ;writeallocmem for functions (after releasemem called)
00032E10 <AmiBlitz3.ab3@24797>    BNE.w 'contskip
00032E16 <AmiBlitz3.ab3@24800>    TST.b fastfunc
00032E1A <AmiBlitz3.ab3@24801>    BNE JUMP_errormsg_nofast
00032E20 <AmiBlitz3.ab3@24803>   MOVE.l destpointer,-(A7)
00032E26 <AmiBlitz3.ab3@24804>   MOVE.l A0,destpointer
00032E2A <AmiBlitz3.ab3@24805>   MOVE.w #$4EB9,D1      ;jsr
00032E2E <AmiBlitz3.ab3@24806>    BSR.w writeword
00032E34 <AmiBlitz3.ab3@24807>    JSR addoff
00032E38 <AmiBlitz3.ab3@24808>    BSR.w writelong
00032E3A <AmiBlitz3.ab3@24810>   MOVEA.l (A7)+,A0
00032E40 <AmiBlitz3.ab3@24811>   MOVEA.l destpointer,A1
00032E42 <AmiBlitz3.ab3@24812>   MOVE.l A0,-(A1)
00032E48 <AmiBlitz3.ab3@24813>   MOVE.l A0,destpointer
00032E4C <AmiBlitz3.ab3@24816>   MOVE.w $8(A2),D4
00032E50 <AmiBlitz3.ab3@24817>    BPL.w 'linky
00032E54 <AmiBlitz3.ab3@24818>   MOVE.w #$C004,D1   ; was  #newmem
00032E58 <AmiBlitz3.ab3@24819>    BSR.w tokejsr2
00032E5E <AmiBlitz3.ab3@24820>   MOVEA.l currentfunction,A2
00032E62 <AmiBlitz3.ab3@24821>   MOVE.w $8(A2),D4
00032E66 <AmiBlitz3.ab3@24822>   ANDI.w #$7FFF,D4        ;#32767,
00032E6A <AmiBlitz3.ab3@24825>    BEQ.w 'skipstat
00032E6E <AmiBlitz3.ab3@24829>   MOVE.b $4(A2),D1
00032E72 <AmiBlitz3.ab3@24830>   ANDI.w #$F,D1
00032E74 <AmiBlitz3.ab3@24831>   MOVE.w D1,-(A7)
00032E78 <AmiBlitz3.ab3@24832>   CMP.w #$5,D1
00032E7C <AmiBlitz3.ab3@24833>    BCS.w 'npush
00032E80 <AmiBlitz3.ab3@24834>   MOVE.w #$2F04,D1
00032E84 <AmiBlitz3.ab3@24835>    BSR.w writeword
00032E8A <AmiBlitz3.ab3@24838>   MOVE.l locdatast,D3
00032E90 <AmiBlitz3.ab3@24839>    JSR datastart
00032E94 <AmiBlitz3.ab3@24840>   MOVE.w #$C501,D1    ; was #localstat
00032E98 <AmiBlitz3.ab3@24841>    BSR.w tokejsr2
00032E9A <AmiBlitz3.ab3@24843>   MOVE.w (A7)+,D1
00032E9E <AmiBlitz3.ab3@24844>   CMP.w #$5,D1
00032EA2 <AmiBlitz3.ab3@24845>    BCS.w 'skipstat
00032EA6 <AmiBlitz3.ab3@24846>   MOVE.w #$281F,D1
00032EAA <AmiBlitz3.ab3@24847>    BSR.w writeword
00032EAE <AmiBlitz3.ab3@24850>   MOVE.w #$4E75,D1
00032EB2 <AmiBlitz3.ab3@24851> BRA.w writeword
00032EB8 <AmiBlitz3.ab3@24855>   LEA mwait,A0
00032EBE <AmiBlitz3.ab3@24856>   LEA mwaitf,A1
00032EC2 <AmiBlitz3.ab3@24857> BRA.w pokecode
00032EC8 <AmiBlitz3.ab3@24860> JUMP_laberr    JMP laberr
00032ECE <AmiBlitz3.ab3@24861> JUMP_typeerr   JMP typeerr
00032ED4 <AmiBlitz3.ab3@24862> JUMP_dupofferr JMP dupofferr
00032ED8 <AmiBlitz3.ab3@24865>   CMP.w #$2E,D0           ;'.'
00032EDC <AmiBlitz3.ab3@24866>   BNE.w JUMP_syntaxerr
00032EE2 <AmiBlitz3.ab3@24867>   JSR getparameter2
00032EE6 <AmiBlitz3.ab3@24868>   BEQ.w JUMP_laberr
00032EEC <AmiBlitz3.ab3@24869>   LEA newtypebase,A2
00032EF2 <AmiBlitz3.ab3@24870>   JSR findtype
00032EF6 <AmiBlitz3.ab3@24871>   BNE.w 'ok1
00032EFE <AmiBlitz3.ab3@24872>   CMPI.l #MaxByte,$4(A2)    ; was #$FF
00032F02 <AmiBlitz3.ab3@24873>   BNE.w JUMP_typeerr
00032F06 <AmiBlitz3.ab3@24874>  BRA.w 'ok2
00032F0C <AmiBlitz3.ab3@24877>   JSR addlabel
00032F10 <AmiBlitz3.ab3@24880>   CLR.l $4(A2)
00032F16 <AmiBlitz3.ab3@24881>   MOVE.l A2,thistype
00032F1C <AmiBlitz3.ab3@24882>   CLR.l prevtype
00032F22 <AmiBlitz3.ab3@24883>   CLR.w typelen
00032F28 <AmiBlitz3.ab3@24884>   CLR.w linemode
00032F2E <AmiBlitz3.ab3@24885>   JSR reget
00032F32 <AmiBlitz3.ab3@24886>   BNE.w typemode
00032F34 <AmiBlitz3.ab3@24887> RTS
00032F38 <AmiBlitz3.ab3@24891>   CMP.w #-$7FFE,D0      ; was #$8002
00032F3C <AmiBlitz3.ab3@24892>   BEQ.w doend2
00032F46 <AmiBlitz3.ab3@24895>   MOVE.w oldqflag,instringon
00032F4C <AmiBlitz3.ab3@24896>   MOVEA.l lastsourcepos,A5
00032F4E <AmiBlitz3.ab3@24898>   MOVEQ.l #$00,D6      ;not pointer
00032F52 <AmiBlitz3.ab3@24899>   CMP.w #$2A,D0        ;'*'
00032F56 <AmiBlitz3.ab3@24900>   BNE.w 'skip
00032F58 <AmiBlitz3.ab3@24901>   MOVEQ.l #$01,D6
00032F5E <AmiBlitz3.ab3@24902>   JSR get1bytemain
00032F62 <AmiBlitz3.ab3@24903>  BRA.w 'skipv
00032F66 <AmiBlitz3.ab3@24906>   CMP.w #$40,D0         ;'@'
00032F6A <AmiBlitz3.ab3@24907>   BNE.w 'skipv
00032F6C <AmiBlitz3.ab3@24908>   MOVEQ.l #$05,D6
00032F72 <AmiBlitz3.ab3@24909>   JSR get1bytemain
00032F78 <AmiBlitz3.ab3@24912>   MOVE.w D6,flagmask
00032F7E <AmiBlitz3.ab3@24913>   JSR getparameter2
00032F82 <AmiBlitz3.ab3@24914>   BEQ.w JUMP_syntaxerr
00032F88 <AmiBlitz3.ab3@24915>   MOVEA.l thistype,A2
00032F8A <AmiBlitz3.ab3@24916>   ADDQ.w #4,A2
00032F90 <AmiBlitz3.ab3@24917>   JSR findvariable2
00032F94 <AmiBlitz3.ab3@24918>   BEQ.w JUMP_dupofferr     ;beq    .skip2
00032F9A <AmiBlitz3.ab3@24920>   JSR addlabel
00032F9C <AmiBlitz3.ab3@24923>   MOVE.l A2,-(A7)
00032FA0 <AmiBlitz3.ab3@24924>   CMP.w #$2E,D0           ;'.'
00032FA4 <AmiBlitz3.ab3@24925>    BEQ.w 'skip3
00032FA8 <AmiBlitz3.ab3@24926>   CMP.w #$24,D0           ;'$'
00032FAC <AmiBlitz3.ab3@24927>    BNE.w 'notstring
00032FB2 <AmiBlitz3.ab3@24928>   MOVE.l #newtype_string,D2
00032FB8 <AmiBlitz3.ab3@24929>    JSR get1bytemain
00032FBC <AmiBlitz3.ab3@24930>  BRA.w 'skip4a
00032FC2 <AmiBlitz3.ab3@24933>   MOVE.l prevtype,D2
00032FC6 <AmiBlitz3.ab3@24934>   BEQ.w JUMP_notypeerr2
00032FCA <AmiBlitz3.ab3@24935>  BRA.w 'skip4
00032FD0 <AmiBlitz3.ab3@24938>   JSR getparameter2
00032FD4 <AmiBlitz3.ab3@24939>    BEQ.w JUMP_syntaxerr
00032FDA <AmiBlitz3.ab3@24940>   LEA newtypebase,A2
00032FE0 <AmiBlitz3.ab3@24941>    JSR findtype
00032FE4 <AmiBlitz3.ab3@24942>    BEQ.w 'gotit
00032FEC <AmiBlitz3.ab3@24943>   BTST #$0,flagmask+1
00032FF0 <AmiBlitz3.ab3@24944>    BEQ.w JUMP_notypeerr2
00032FF6 <AmiBlitz3.ab3@24948>   JSR addlabel
00032FFE <AmiBlitz3.ab3@24953>   MOVE.w linenumat+2,$8(A2)
00033006 <AmiBlitz3.ab3@24954>   MOVE.l #MaxByte,$4(A2)       ; was $FF  ;set to pointer crap
00033008 <AmiBlitz3.ab3@24957>   MOVE.l A2,D2
0003300E <AmiBlitz3.ab3@24960>   CMP.l #newtype_byte,D2
00033012 <AmiBlitz3.ab3@24961>    BEQ.w 'byte
00033018 <AmiBlitz3.ab3@24964>   ADDQ.w #1,typelen
00033020 <AmiBlitz3.ab3@24965>   BCLR #$0,typelen+1
00033022 <AmiBlitz3.ab3@24968>   MOVEQ.l #$00,D3
00033024 <AmiBlitz3.ab3@24969>   MOVEA.l D2,A2
0003302A <AmiBlitz3.ab3@24970>   MOVE.l A2,prevtype
0003302E <AmiBlitz3.ab3@24971>   MOVE.w $8(A2),D3
00033030 <AmiBlitz3.ab3@24972>   MOVEA.l (A7)+,A2
00033034 <AmiBlitz3.ab3@24973>   MOVE.l D2,$A(A2)
00033036 <AmiBlitz3.ab3@24974>   MOVEQ.l #$00,D4
0003303C <AmiBlitz3.ab3@24975>   MOVE.w typelen,D4
00033040 <AmiBlitz3.ab3@24976>   MOVE.w D4,$4(A2)
00033048 <AmiBlitz3.ab3@24977>   BTST #$0,flagmask+1
0003304C <AmiBlitz3.ab3@24978>    BEQ.w 'skipz
0003304E <AmiBlitz3.ab3@24979>   MOVEQ.l #$04,D3
00033052 <AmiBlitz3.ab3@24982>   CMP.w #$5B,D0            ;'['
00033056 <AmiBlitz3.ab3@24983>    BNE.w 'skipzz
0003305A <AmiBlitz3.ab3@24987>   MOVEM.l D3-D4/A2,-(A7)
0003305E <AmiBlitz3.ab3@24988>    BSR.w evalconst3
00033062 <AmiBlitz3.ab3@24989>   CMP.w #$5D,D0            ;']'
00033066 <AmiBlitz3.ab3@24990>    BNE.w JUMP_syntaxerr
00033068 <AmiBlitz3.ab3@24991>   TST.w D6
0003306C <AmiBlitz3.ab3@24992>    BNE.w JUMP_fpconerr
0003306E <AmiBlitz3.ab3@24993>   MOVE.l D3,D1
00033072 <AmiBlitz3.ab3@24994>   MOVEM.l (A7)+,D3-D4/A2
00033078 <AmiBlitz3.ab3@24995>    JSR get1bytemain
0003307C <AmiBlitz3.ab3@24996>   MOVE.w D1,$8(A2)
00033080 <AmiBlitz3.ab3@24997>   MULU.l d1,d3                                             ;>32k fix was mulu.w
00033088 <AmiBlitz3.ab3@24998>   ORI.w #$2,flagmask
0003308A <AmiBlitz3.ab3@25001>   ADD.l D3,D4
00033090 <AmiBlitz3.ab3@25004>     CMP.l #65532,d4
00033094 <AmiBlitz3.ab3@25010>   BCC JUMP_toolongerr
0003309C <AmiBlitz3.ab3@25011>   MOVE.w flagmask,$6(A2)
000330A2 <AmiBlitz3.ab3@25012>   MOVE.w D4,typelen
000330A4 <AmiBlitz3.ab3@25013> RTS
000330AA <AmiBlitz3.ab3@25016> JUMP_badenderr  JMP badenderr
000330B0 <AmiBlitz3.ab3@25017> JUMP_noiferr    JMP noiferr
000330B6 <AmiBlitz3.ab3@25018> JUMP_toolongerr JMP toolongerr
000330BC <AmiBlitz3.ab3@25019> JUMP_fpconerr   JMP fpconerr
000330C2 <AmiBlitz3.ab3@25023>   MOVE.l firstiff,D0
000330C6 <AmiBlitz3.ab3@25024>    BEQ.w JUMP_noiferr
000330C8 <AmiBlitz3.ab3@25025>   MOVEA.l D0,A0
000330CC <AmiBlitz3.ab3@25026>   MOVE.w $C(A0),D0
000330D0 <AmiBlitz3.ab3@25027>   ANDI.w #$FF,D0
000330D2 <AmiBlitz3.ab3@25028>   CMP.w D0,D1
000330D6 <AmiBlitz3.ab3@25029>    BNE.w JUMP_badenderr
000330DA <AmiBlitz3.ab3@25032>   CMP.w #$1,D1
000330DE <AmiBlitz3.ab3@25033>   BNE.w 'calcbra
000330E2 <AmiBlitz3.ab3@25035>   MOVE.w #$6000,D1
000330E8 <AmiBlitz3.ab3@25038>     TST.b fast
000330EC <AmiBlitz3.ab3@25039>     BEQ 'l1
000330F2 <AmiBlitz3.ab3@25040>     OR.l #$ff,d1
000330F6 <AmiBlitz3.ab3@25045>   BSR.w writeword
000330FC <AmiBlitz3.ab3@25046>   MOVEA.l destpointer,A1
00033100 <AmiBlitz3.ab3@25047>   MOVE.l $4(A0),D1
00033102 <AmiBlitz3.ab3@25048>   SUB.l A1,D1
00033108 <AmiBlitz3.ab3@25051>     TST.b fast
0003310C <AmiBlitz3.ab3@25052>     BEQ 'l2
00033110 <AmiBlitz3.ab3@25053>     BSR writelong
00033114 <AmiBlitz3.ab3@25054>   BRA 'calcbra
00033118 <AmiBlitz3.ab3@25059>   BSR.w writeword
0003311C <AmiBlitz3.ab3@25062>   MOVEA.l $8(A0),A1                                        ;write if branch destination
00033122 <AmiBlitz3.ab3@25063>   MOVE.l destpointer,D1
00033124 <AmiBlitz3.ab3@25064>   SUB.l A1,D1
0003312A <AmiBlitz3.ab3@25067>     TST.b fast
0003312E <AmiBlitz3.ab3@25068>     BEQ 'l3
00033130 <AmiBlitz3.ab3@25069>     ADDQ.l #4,D1
00033136 <AmiBlitz3.ab3@25070>     MOVE.w dontwrite,D0
0003313A <AmiBlitz3.ab3@25071>     BNE.w 'skip
0003313E <AmiBlitz3.ab3@25072>     MOVE.l d1,-$4(a1)
00033142 <AmiBlitz3.ab3@25073>   BRA 'skip
00033144 <AmiBlitz3.ab3@25078>   ADDQ.l #2,d1
0003314A <AmiBlitz3.ab3@25080>   TST.w dontwrite
0003314E <AmiBlitz3.ab3@25082>   BNE 'skip
00033154 <AmiBlitz3.ab3@25084>   CMP.l #MinWordSgnd,D1
00033158 <AmiBlitz3.ab3@25085>   BCC.w JUMP_bigiferr
0003315C <AmiBlitz3.ab3@25087>   MOVE.w D1,-$2(A1)
0003315E <AmiBlitz3.ab3@25090> RTS
00033164 <AmiBlitz3.ab3@25092> JUMP_bigiferr JMP bigiferr
0003316E <AmiBlitz3.ab3@25097>   MOVE.w oldqflag,instringon
00033174 <AmiBlitz3.ab3@25098>   MOVEA.l lastsourcepos,A5
00033176 <AmiBlitz3.ab3@25101>   MOVEQ.l #$01,D1
0003317A <AmiBlitz3.ab3@25102> BRA.w doendif
00033184 <AmiBlitz3.ab3@25106>   MOVE.w oldqflag,instringon
0003318A <AmiBlitz3.ab3@25107>   MOVEA.l lastsourcepos,A5
0003318C <AmiBlitz3.ab3@25110>   MOVEQ.l #$00,D1
00033190 <AmiBlitz3.ab3@25113>   BSR.w doendif3
00033194 <AmiBlitz3.ab3@25114>   BSR.w freetheifz
0003319A <AmiBlitz3.ab3@25115> JMP get1bytemain
000331A0 <AmiBlitz3.ab3@25119>   MOVE.l (A0),firstiff
000331A2 <AmiBlitz3.ab3@25120>   MOVEA.l A0,A1
000331A4 <AmiBlitz3.ab3@25121>   MOVEQ.l #$0E,D0
000331AA <AmiBlitz3.ab3@25122>   MOVEA.l _execbase,A6
000331B0 <AmiBlitz3.ab3@25125>   MOVE.l mempool,a0
000331B4 <AmiBlitz3.ab3@25126> JMP _FreePooled(A6)
000331BA <AmiBlitz3.ab3@25130> JUMP_modeerr JMP modeerr
000331C0 <AmiBlitz3.ab3@25131> JUMP_interr3 JMP interr3
000331C6 <AmiBlitz3.ab3@25132> JUMP_interr JMP interr
000331CC <AmiBlitz3.ab3@25136>   JSR get1bytemain
000331D0 <AmiBlitz3.ab3@25139>   BEQ.w 'done
000331D8 <AmiBlitz3.ab3@25141>   CMP.l #"noa7",-1(a5)
000331DC <AmiBlitz3.ab3@25142>   BNE 'l1
000331E2 <AmiBlitz3.ab3@25143>   JSR get1bytemain
000331E8 <AmiBlitz3.ab3@25144>   JSR get1bytemain
000331EE <AmiBlitz3.ab3@25145>   JSR get1bytemain
000331F6 <AmiBlitz3.ab3@25146>   MOVE.w #$3a,lastchar
000331FA <AmiBlitz3.ab3@25147>  BRA 'done
00033200 <AmiBlitz3.ab3@25150>   CMP.w #"d0",-1(a5)
00033204 <AmiBlitz3.ab3@25151>   BNE 'l2
0003320C <AmiBlitz3.ab3@25152>   MOVE.b #1,returncode
00033212 <AmiBlitz3.ab3@25153>   CLR.w lastchar
00033216 <AmiBlitz3.ab3@25154>  BRA 'done
0003321A <AmiBlitz3.ab3@25157>   CMP.w #$80d7,d0
0003321E <AmiBlitz3.ab3@25158>   BNE 'loop
00033224 <AmiBlitz3.ab3@25159>   JSR skiprest
00033226 <AmiBlitz3.ab3@25160>  RTS
0003322A <AmiBlitz3.ab3@25164>   BSR.w 'doend3
00033230 <AmiBlitz3.ab3@25165>   JSR reget
00033234 <AmiBlitz3.ab3@25166>   BNE.w 'loop
00033236 <AmiBlitz3.ab3@25167>  RTS
0003323A <AmiBlitz3.ab3@25170>   CMP.w #-$7FFF,D0        ; was #$8001
0003323E <AmiBlitz3.ab3@25171>    BNE.w 'nottype
00033244 <AmiBlitz3.ab3@25172>   MOVE.w linemode,D1
00033248 <AmiBlitz3.ab3@25173>    BNE.w JUMP_modeerr
0003324E <AmiBlitz3.ab3@25174>   ADDQ.w #1,typelen
00033256 <AmiBlitz3.ab3@25175>   BCLR #$0,typelen+1
0003325C <AmiBlitz3.ab3@25176>   MOVEA.l thistype,A0
00033264 <AmiBlitz3.ab3@25177>   MOVE.w typelen,$8(A0)
0003326C <AmiBlitz3.ab3@25178>   MOVE.w #$FFFF,linemode        ; was -1
00033272 <AmiBlitz3.ab3@25179>  JMP get1bytemain
00033276 <AmiBlitz3.ab3@25182>   CMP.w #-$7FF5,D0    ; was #$800b
0003327A <AmiBlitz3.ab3@25183>    BEQ.w mydoendif
0003327E <AmiBlitz3.ab3@25186>   CMP.w #-$7FF4,D0    ; was #$800c
00033282 <AmiBlitz3.ab3@25187>    BEQ.w dowend2
00033286 <AmiBlitz3.ab3@25190>   CMP.w #-$7FF8,D0    ; was #$8008
0003328A <AmiBlitz3.ab3@25191>    BNE.w 'notstate
0003328E <AmiBlitz3.ab3@25196>  BRA.w endstate
00033292 <AmiBlitz3.ab3@25199>   CMP.w #-$7FF7,D0        ; was #$8009
00033296 <AmiBlitz3.ab3@25200>    BNE.w 'notfunc
0003329C <AmiBlitz3.ab3@25202>    TST.b fpu
000332A0 <AmiBlitz3.ab3@25203>    BEQ 'nof
000332A6 <AmiBlitz3.ab3@25204>    MOVEA.l currentfunction,A0
000332AC <AmiBlitz3.ab3@25205>    CMP.l #0,a0
000332B0 <AmiBlitz3.ab3@25206>    BEQ 'nof
000332B6 <AmiBlitz3.ab3@25207>    CMP.b #5,$5(a0)
000332BA <AmiBlitz3.ab3@25208>     BNE 'nof
000332C0 <AmiBlitz3.ab3@25209>    MOVE.l #$f23c5000,d1
000332C4 <AmiBlitz3.ab3@25210>    BSR writelong
000332C8 <AmiBlitz3.ab3@25211>    MOVE.w #0,d1
000332CC <AmiBlitz3.ab3@25212>    BSR writeword
000332D0 <AmiBlitz3.ab3@25216>   MOVE.w #$7000,D1                                         ;end function moveq #0,d0
000332D4 <AmiBlitz3.ab3@25217>    BSR.w writeword
000332DA <AmiBlitz3.ab3@25218>   MOVEA.l currentfunction,A0
000332E0 <AmiBlitz3.ab3@25220>   CMP.l #0,a0
000332E4 <AmiBlitz3.ab3@25221>   BEQ 'state
000332EA <AmiBlitz3.ab3@25222>   MOVE.l destpointer,d1
000332EE <AmiBlitz3.ab3@25223>   SUB.l $e(a0),d1
000332F2 <AmiBlitz3.ab3@25224>   MOVE.l d1,isfunc+1(a0)
000332F8 <AmiBlitz3.ab3@25226>   CMPI.b #$7,$5(A0)
000332FC <AmiBlitz3.ab3@25227>    BNE.w 'state
00033302 <AmiBlitz3.ab3@25228>   MOVE.w putstlen,D1
00033306 <AmiBlitz3.ab3@25229>    BSR.w writeword
0003330A <AmiBlitz3.ab3@25230>  BRA.w 'state
0003330E <AmiBlitz3.ab3@25233>   CMP.w #-$7FD0,D0         ; was #$8000+48
00033312 <AmiBlitz3.ab3@25234>    BNE.w 'notsetint
00033318 <AmiBlitz3.ab3@25236>   MOVE.w proceduremode,D1
0003331C <AmiBlitz3.ab3@25237>    BNE.w JUMP_interr3
00033322 <AmiBlitz3.ab3@25239>   TST.b debugmode
00033326 <AmiBlitz3.ab3@25240>    BEQ.w 'norerrf1
00033328 <AmiBlitz3.ab3@25242>   MOVEQ.l #$03,D1
0003332E <AmiBlitz3.ab3@25243>    JSR writetrap
00033334 <AmiBlitz3.ab3@25245>   MOVE.w dontwrite,D1
00033338 <AmiBlitz3.ab3@25246>    BNE.w 'norerrf1
0003333E <AmiBlitz3.ab3@25248>   MOVEA.l intcleanat,A0
00033344 <AmiBlitz3.ab3@25249>   MOVE.l destpointer,(A0)
00033348 <AmiBlitz3.ab3@25251>   MOVE.w #$C30C,D1       ; was #gouse
0003334C <AmiBlitz3.ab3@25252>    BSR.w Atokejsr        ;for runerrlib stack chex
00033352 <AmiBlitz3.ab3@25255>   MOVE.w intstring,D1
00033356 <AmiBlitz3.ab3@25256>    BEQ.w JUMP_interr
0003335A <AmiBlitz3.ab3@25257>    BPL.w 'nosp
00033360 <AmiBlitz3.ab3@25259>   MOVE.w intlevel,D1
00033364 <AmiBlitz3.ab3@25260>   ORI.w #$7200,D1
00033368 <AmiBlitz3.ab3@25261>    BSR.w writeword       ;moveq #level,d1
0003336C <AmiBlitz3.ab3@25262>   MOVE.w #$C103,D1       ; was #oldint,
00033370 <AmiBlitz3.ab3@25263>    BSR.w Atokejsr
00033376 <AmiBlitz3.ab3@25264>   CLR.w intlevel
0003337C <AmiBlitz3.ab3@25267>   CLR.w intstring
00033382 <AmiBlitz3.ab3@25269>   MOVE.l intfin,D1
00033386 <AmiBlitz3.ab3@25270>    BSR.w writelong
0003338C <AmiBlitz3.ab3@25272>   MOVE.l #$70004E75,D1
00033390 <AmiBlitz3.ab3@25273>    BSR.w writelong
00033396 <AmiBlitz3.ab3@25275>   MOVE.w dontwrite,D1
0003339A <AmiBlitz3.ab3@25276>    BNE.w 'sintdone
000333A0 <AmiBlitz3.ab3@25277>   MOVEA.l intjmpat,A0
000333A4 <AmiBlitz3.ab3@25278>   MOVE.l destpointer(PC),(A0)
000333AA <AmiBlitz3.ab3@25281>  JMP get1bytemain
000333AE <AmiBlitz3.ab3@25284>   CMP.w #-$7FF2,D0   ; was #$800e     ;end select?
000333B2 <AmiBlitz3.ab3@25285>    BEQ.w doendsel
000333B6 <AmiBlitz3.ab3@25286>   CMP.w #-$7F4C,D0  ; was #$8001+tnum
000333BA <AmiBlitz3.ab3@25287>    BNE.w 'notseterr
000333C0 <AmiBlitz3.ab3@25288>  JMP doendseterr
000333C6 <AmiBlitz3.ab3@25292>  JMP syntaxerr
000333CC <AmiBlitz3.ab3@25295>   TST.w dirmode
000333D0 <AmiBlitz3.ab3@25296>   BNE.w JUMP_baddirerr
000333D4 <AmiBlitz3.ab3@25297>   MOVE.w #$C800,D1      ; #endjmp
000333DA <AmiBlitz3.ab3@25298>   JSR Atokejsr          ; was bra org source                                  ;end
000333E2 <AmiBlitz3.ab3@25300>   CMP.l #"noa7",-4(a5)
000333E6 <AmiBlitz3.ab3@25301>   BNE 'l10
000333EC <AmiBlitz3.ab3@25302>   TST.w dontwrite
000333F0 <AmiBlitz3.ab3@25303>   BNE 'l10
000333F6 <AmiBlitz3.ab3@25304>   MOVE.l destpointer,d1
000333F8 <AmiBlitz3.ab3@25305>   SUBQ.l #4,d1
000333FA <AmiBlitz3.ab3@25306>   MOVE.l a0,-(a7)
000333FC <AmiBlitz3.ab3@25307>   MOVE.l d1,a0
000333FE <AmiBlitz3.ab3@25308>   MOVE.l (a0),a0
00033404 <AmiBlitz3.ab3@25309>   MOVE.l #$60000002,(a0)+
00033408 <AmiBlitz3.ab3@25310>   MOVE.w #$588f,(a0)
0003340A <AmiBlitz3.ab3@25311>   MOVE.l (a7)+,a0
0003340C <AmiBlitz3.ab3@25314> RTS
00033412 <AmiBlitz3.ab3@25319>   TST.w dirmode                                            ;stop
00033416 <AmiBlitz3.ab3@25320>   BNE.w JUMP_baddirerr
00033418 <AmiBlitz3.ab3@25322>   MOVE.w d0,d1
0003341C <AmiBlitz3.ab3@25323>   BEQ 'l10
00033420 <AmiBlitz3.ab3@25324>   CMP.b #$3a,d0
00033424 <AmiBlitz3.ab3@25325>   BEQ 'l10
0003342A <AmiBlitz3.ab3@25326>   JSR get1bytemain
00033430 <AmiBlitz3.ab3@25330>   TST.b debugmode
00033434 <AmiBlitz3.ab3@25331>   BEQ.w newstop
00033438 <AmiBlitz3.ab3@25332>   MOVE.w #$D501,D1
0003343C <AmiBlitz3.ab3@25333> BRA.w Atokejsr
0003343E <AmiBlitz3.ab3@25339>     RTS
00033440 <AmiBlitz3.ab3@25341>   MOVE.w d1,d0
00033444 <AmiBlitz3.ab3@25342>   BEQ 'l10
00033448 <AmiBlitz3.ab3@25343>   CMP.b #$3a,d0
0003344C <AmiBlitz3.ab3@25344>   BEQ 'l10
00033450 <AmiBlitz3.ab3@25345>   SUB.b #$30,d0
00033454 <AmiBlitz3.ab3@25346>   MOVE.w #$4e40,d1
00033458 <AmiBlitz3.ab3@25347>  BRA 'l11
0003345C <AmiBlitz3.ab3@25350>   MOVE.w #$4e4a,d1
00033460 <AmiBlitz3.ab3@25351>  BRA writeword
00033462 <AmiBlitz3.ab3@25354>   ADD.b d0,d1
00033466 <AmiBlitz3.ab3@25355> BRA writeword
0003346C <AmiBlitz3.ab3@25359> JMP badconterr        ;cont not currently supported!
00033470 <AmiBlitz3.ab3@25362>   MOVE.w #$4E71,D1
00033474 <AmiBlitz3.ab3@25363> BRA.w writeword
0003347A <AmiBlitz3.ab3@25368>   MOVEA.l firstfor,A2
00033480 <AmiBlitz3.ab3@25369>   CLR.l firstfor
00033486 <AmiBlitz3.ab3@25370>   MOVEA.l _execbase,A6
0003348A <AmiBlitz3.ab3@25373>   CMPA.w #$0,A2
0003348E <AmiBlitz3.ab3@25374>   BEQ.w 'done
00033490 <AmiBlitz3.ab3@25375>   MOVEA.l A2,A1
00033492 <AmiBlitz3.ab3@25376>   MOVEA.l (A1),A2
00033494 <AmiBlitz3.ab3@25377>   MOVEQ.l #$00,D0
00033498 <AmiBlitz3.ab3@25378>   MOVE.b $10(A1),D0
0003349E <AmiBlitz3.ab3@25381>   MOVE.l mempool2,a0  
000334A2 <AmiBlitz3.ab3@25382>   JSR _FreePooled(A6)                                      ;freememfor_error
000334A6 <AmiBlitz3.ab3@25384>  BRA.w 'loop
000334A8 <AmiBlitz3.ab3@25387> RTS
000334AE <AmiBlitz3.ab3@25390> JUMP_badpenderr JMP badpenderr
000334B4 <AmiBlitz3.ab3@25391> JUMP_noenderr   JMP noenderr
000334BA <AmiBlitz3.ab3@25397>   MOVE.w proceduremode,D1
000334BE <AmiBlitz3.ab3@25398>    BEQ.w JUMP_badpenderr
000334C4 <AmiBlitz3.ab3@25400>   MOVE.w dontwrite,D1
000334C8 <AmiBlitz3.ab3@25401>    BNE.w 'ship
000334CE <AmiBlitz3.ab3@25402>   MOVEA.l firstpend,A2
000334D2 <AmiBlitz3.ab3@25405>   CMPA.w #$0,A2
000334D6 <AmiBlitz3.ab3@25406>    BEQ.w 'ship
000334DA <AmiBlitz3.ab3@25407>   MOVEA.l $4(A2),A0
000334E0 <AmiBlitz3.ab3@25408>   MOVE.l destpointer,(A0)
000334E2 <AmiBlitz3.ab3@25409>   MOVEA.l (A2),A2
000334E6 <AmiBlitz3.ab3@25410>  BRA.w 'loop0
000334EC <AmiBlitz3.ab3@25413>   TST.b debugmode
000334F0 <AmiBlitz3.ab3@25414>    BEQ.b 'ship2
000334F2 <AmiBlitz3.ab3@25416>   MOVEQ.l #$05,D1
000334F8 <AmiBlitz3.ab3@25417>   JSR writetrap
000334FE <AmiBlitz3.ab3@25420>   MOVEA.l firstlocal,A2                                    ;firstlocal
00033504 <AmiBlitz3.ab3@25421>   JSR calcstatic2b                                           ;calcstatic
0003350A <AmiBlitz3.ab3@25422>   MOVEA.l currentfunction,A0
00033510 <AmiBlitz3.ab3@25424>   MOVE.l destpointer,d1
00033514 <AmiBlitz3.ab3@25425>   SUB.l $e(a0),d1
00033518 <AmiBlitz3.ab3@25426>   MOVE.l d1,isfunc+1(a0)                                   ;store function size
0003351C <AmiBlitz3.ab3@25428>   MOVE.w D4,$8(A0)                                         ;set if memalloc need
00033522 <AmiBlitz3.ab3@25429>   MOVE.l D3,locdatast
00033528 <AmiBlitz3.ab3@25430>   MOVEA.l tempvm,A1
0003352E <AmiBlitz3.ab3@25432>   CLR.b infunctioncode
00033534 <AmiBlitz3.ab3@25433>   MOVE.l firstiffstore,d1
0003353A <AmiBlitz3.ab3@25434>   CMP.l firstiff,d1
0003353E <AmiBlitz3.ab3@25435>   BNE JUMP_noenderr
00033542 <AmiBlitz3.ab3@25437>   TST.w $C(A1)                                             ;dim
00033546 <AmiBlitz3.ab3@25438>    BPL.w 'nolskip
0003354C <AmiBlitz3.ab3@25439>  BSET #$7,$8(A0)
00033550 <AmiBlitz3.ab3@25440>   MOVE.w #$C005,D1      ;#freelast,
00033554 <AmiBlitz3.ab3@25441>    BSR.w tokejsr2                                          ;writefreememstatement
00033558 <AmiBlitz3.ab3@25442>  BRA.w 'lskip2
00033560 <AmiBlitz3.ab3@25445>   MOVE.w memlibstat,$C(A1)
00033566 <AmiBlitz3.ab3@25448>   MOVEA.l currentfunction,A0
0003356A <AmiBlitz3.ab3@25449>   MOVE.l $E(A0),-(A7)
00033572 <AmiBlitz3.ab3@25450>   MOVE.w locvaroff,$6(A0)
00033578 <AmiBlitz3.ab3@25451>   BCLR #$1,$7(A0)
0003357E <AmiBlitz3.ab3@25452>   BCLR #$0,$7(A0)
00033584 <AmiBlitz3.ab3@25453>   CMPI.b #$7,$5(A0)
00033588 <AmiBlitz3.ab3@25454>    BNE.w 'penis
0003358E <AmiBlitz3.ab3@25455>   MOVE.w getstlen,D1
00033592 <AmiBlitz3.ab3@25456>    BSR.w writeword
00033596 <AmiBlitz3.ab3@25459>   TST.w $6(A0)
0003359A <AmiBlitz3.ab3@25460>    BEQ.w 'nolink
0003359E <AmiBlitz3.ab3@25461>   MOVE.w #$FC7B,D1   ;#64635
000335A4 <AmiBlitz3.ab3@25462>    JSR uselib
000335AA <AmiBlitz3.ab3@25463>   MOVE.w unlinka4,D1
000335B0 <AmiBlitz3.ab3@25464>    JSR writeword
000335B6 <AmiBlitz3.ab3@25470>   MOVEA.l currentfunction,A0
000335B8 <AmiBlitz3.ab3@25471>   MOVEQ.l #$00,D1
000335BC <AmiBlitz3.ab3@25472>   MOVE.b $4(A0),D1
000335BE <AmiBlitz3.ab3@25473>   LSR.w #4,D1
000335C2 <AmiBlitz3.ab3@25474>    BEQ.w 'nofix
000335C4 <AmiBlitz3.ab3@25477>      LSL.w #1,d1
000335C8 <AmiBlitz3.ab3@25480>   CMP.w #$1,D1
000335CC <AmiBlitz3.ab3@25481>    BNE.w 'not1
000335D2 <AmiBlitz3.ab3@25482>   MOVE.w fix1,D1
000335D8 <AmiBlitz3.ab3@25483>    JSR writeword
000335DC <AmiBlitz3.ab3@25484>  BRA.w 'nofix
000335DE <AmiBlitz3.ab3@25487>   LSL.w #2,D1
000335E0 <AmiBlitz3.ab3@25488>   MOVE.w D1,-(A7)
000335E6 <AmiBlitz3.ab3@25489>   MOVE.w D1,moverts+2
000335EC <AmiBlitz3.ab3@25490>   MOVE.l moverts,D1
000335F2 <AmiBlitz3.ab3@25491>    JSR writelong
000335F4 <AmiBlitz3.ab3@25492>   MOVE.w (A7)+,D1
000335F8 <AmiBlitz3.ab3@25493>   CMP.w #$8,D1
000335FC <AmiBlitz3.ab3@25494>    BHI.w 'fix
00033600 <AmiBlitz3.ab3@25495>   ANDI.w #$7,D1
00033602 <AmiBlitz3.ab3@25496>   LSL.w #8,D1
00033604 <AmiBlitz3.ab3@25497>   LSL.w #1,D1
0003360A <AmiBlitz3.ab3@25498>   OR.w fixq,D1
00033610 <AmiBlitz3.ab3@25499>    JSR writeword
00033614 <AmiBlitz3.ab3@25500>  BRA.w 'nofix
0003361A <AmiBlitz3.ab3@25503>    MOVE.w D1,fixstack+2
00033620 <AmiBlitz3.ab3@25504>   MOVE.l fixstack,D1
00033626 <AmiBlitz3.ab3@25505>    JSR writelong
0003362A <AmiBlitz3.ab3@25508>    BSR.w normret
0003362E <AmiBlitz3.ab3@25512>    BSR.w procfixer
00033630 <AmiBlitz3.ab3@25514>   MOVEA.l (A7)+,A0
00033636 <AmiBlitz3.ab3@25515>   MOVE.w dontwrite,D1
0003363A <AmiBlitz3.ab3@25516>    BNE.w 'skipjp
00033640 <AmiBlitz3.ab3@25517>   MOVE.l destpointer,-(A0)
00033646 <AmiBlitz3.ab3@25520>   CLR.w proceduremode
0003364C <AmiBlitz3.ab3@25521>   CLR.l currentfunction
00033652 <AmiBlitz3.ab3@25522>   CLR.w procnum
00033656 <AmiBlitz3.ab3@25523>    BSR.w droplocals
0003365C <AmiBlitz3.ab3@25524>    JSR freepends
00033662 <AmiBlitz3.ab3@25525> JMP get1bytemain
00033664 <AmiBlitz3.ab3@25529>   MOVEQ.l #$0C,D0
00033666 <AmiBlitz3.ab3@25530>   MOVEQ.l #$01,D1
0003366C <AmiBlitz3.ab3@25531>   MOVEA.l _execbase,A6
00033672 <AmiBlitz3.ab3@25534>   MOVE.l mempool,a0
00033676 <AmiBlitz3.ab3@25535>   JSR _AllocPooled(a6)
00033678 <AmiBlitz3.ab3@25537>   MOVEA.l D0,A0
0003367E <AmiBlitz3.ab3@25538>   MOVE.l alllocals,(A0)
00033684 <AmiBlitz3.ab3@25539>   MOVE.l A0,alllocals
0003368A <AmiBlitz3.ab3@25541>   MOVE.l firstlocal,D0
00033690 <AmiBlitz3.ab3@25542>   CLR.l firstlocal
00033694 <AmiBlitz3.ab3@25543>   MOVE.l D0,$4(A0)
0003369A <AmiBlitz3.ab3@25544>   MOVE.l firstglob,D1
000336A0 <AmiBlitz3.ab3@25545>   CLR.l firstglob
000336A4 <AmiBlitz3.ab3@25546>   MOVE.l D1,$8(A0)
000336AA <AmiBlitz3.ab3@25548>   TST.b debugmode
000336AE <AmiBlitz3.ab3@25549>    BEQ.b 'skip
000336B4 <AmiBlitz3.ab3@25550>   TST.w dontwrite
000336B8 <AmiBlitz3.ab3@25551>    BNE.b 'skip
000336BC <AmiBlitz3.ab3@25553>   MOVEA.l proclocals(PC),A0
000336BE <AmiBlitz3.ab3@25554>   MOVE.l D0,(A0)+
000336C0 <AmiBlitz3.ab3@25555>   MOVE.l D1,(A0)
000336C2 <AmiBlitz3.ab3@25558> RTS
000336C8 <AmiBlitz3.ab3@25561> JUMP_baddirerr JMP baddirerr
000336CE <AmiBlitz3.ab3@25562> JUMP_noforerr  JMP noforerr
000336D4 <AmiBlitz3.ab3@25566>   TST.w dirmode
000336D8 <AmiBlitz3.ab3@25567>    BNE.w JUMP_baddirerr
000336DE <AmiBlitz3.ab3@25568>   MOVE.l firstfor,D1
000336E2 <AmiBlitz3.ab3@25569>    BEQ.w JUMP_noforerr
000336E8 <AmiBlitz3.ab3@25570>   JSR reget
000336EC <AmiBlitz3.ab3@25571>    BEQ.w 'unknown
000336F0 <AmiBlitz3.ab3@25577>   BSR.w getparameter
000336F4 <AmiBlitz3.ab3@25578>   MOVEA.l firstfor(PC),A2
000336F6 <AmiBlitz3.ab3@25579>   MOVEQ.l #$00,D1
000336FA <AmiBlitz3.ab3@25580>   MOVE.b $10(A2),D1
000336FE <AmiBlitz3.ab3@25581>   SUBI.w #$12,D1
00033700 <AmiBlitz3.ab3@25582>   CMP.w D1,D2
00033704 <AmiBlitz3.ab3@25583>    BNE.w JUMP_noforerr
00033708 <AmiBlitz3.ab3@25584>   LEA ptr_parameterstore(PC),A0
0003370C <AmiBlitz3.ab3@25585>   LEA $11(A2),A1
0003370E <AmiBlitz3.ab3@25586>   SUBQ.w #1,D2
00033710 <AmiBlitz3.ab3@25589>     CMPM.b (A0)+,(A1)+
00033714 <AmiBlitz3.ab3@25590>     BNE.w JUMP_noforerr
00033718 <AmiBlitz3.ab3@25591>   DBF D2,'chkname
0003371C <AmiBlitz3.ab3@25593>    BSR.w 'unknown2
00033722 <AmiBlitz3.ab3@25594>    JSR reget
00033726 <AmiBlitz3.ab3@25595>    BEQ.w 'byebye
0003372A <AmiBlitz3.ab3@25596>   CMP.w #$2C,D0           ; ','
0003372E <AmiBlitz3.ab3@25597>    BNE.w JUMP_syntaxerr
00033734 <AmiBlitz3.ab3@25598>    JSR get1bytemain
00033738 <AmiBlitz3.ab3@25599>  BRA.w 'nextnext
0003373A <AmiBlitz3.ab3@25602>  RTS
0003373E <AmiBlitz3.ab3@25606>   MOVE.l 8(a7),a2
00033742 <AmiBlitz3.ab3@25607>   Dc.l  $f2124400                                          ;fmove.s (a2),fp0
00033746 <AmiBlitz3.ab3@25608>   Dc.l  $F2174422                                          ;fadd.s (a7),fp0
0003374A <AmiBlitz3.ab3@25609>   Dc.l  $F2126400                                          ;fmove.s fp0,(a2)
0003374C <AmiBlitz3.ab3@25614>   MOVEA.l D1,A2
00033752 <AmiBlitz3.ab3@25617>   JSR popnext                                           ;error checking for next.
00033756 <AmiBlitz3.ab3@25618>   MOVE.w $C(A2),D0
0003375C <AmiBlitz3.ab3@25620>   LEA nextb,A0
00033762 <AmiBlitz3.ab3@25621>   LEA nextbf,A1
00033766 <AmiBlitz3.ab3@25622>   CMP.w #$1,D0
0003376A <AmiBlitz3.ab3@25623>    BEQ.w 'donext
00033770 <AmiBlitz3.ab3@25624>   LEA nextw,A0
00033776 <AmiBlitz3.ab3@25625>   LEA nextwf,A1
0003377A <AmiBlitz3.ab3@25626>   CMP.w #$2,D0
0003377E <AmiBlitz3.ab3@25627>    BEQ.w 'donext
00033784 <AmiBlitz3.ab3@25628>   LEA nextl,A0
0003378A <AmiBlitz3.ab3@25629>   LEA nextlf,A1
0003378E <AmiBlitz3.ab3@25630>   CMP.w #$5,D0
00033792 <AmiBlitz3.ab3@25631>    BNE.w 'donext
00033798 <AmiBlitz3.ab3@25633>    TST.b fpu
0003379C <AmiBlitz3.ab3@25634>    BEQ 'old
000337A2 <AmiBlitz3.ab3@25635>    LEA 'fpu2dats,a0                                         ;fpu next code
000337A8 <AmiBlitz3.ab3@25636>    LEA 'fpu2date,a1
000337AC <AmiBlitz3.ab3@25637>  BRA 'donext
000337B0 <AmiBlitz3.ab3@25641>   MOVE.w #$C900,D1     ; #getffpbase
000337B4 <AmiBlitz3.ab3@25642>    BSR.w Atokejsr
000337BA <AmiBlitz3.ab3@25643>   LEA nextf,A0
000337C0 <AmiBlitz3.ab3@25644>   LEA nextff,A1
000337C6 <AmiBlitz3.ab3@25647>   JSR pokecode
000337CC <AmiBlitz3.ab3@25649>    TST.b fast                                             ;fast for next deactivate
000337D0 <AmiBlitz3.ab3@25650>  BRA 'l1
000337D6 <AmiBlitz3.ab3@25652>     TST.b onestep
000337DA <AmiBlitz3.ab3@25653>     BEQ 'l1
000337E0 <AmiBlitz3.ab3@25654>     CLR.b onestep
000337E6 <AmiBlitz3.ab3@25655>     SUBQ.l #4,destpointer
000337EA <AmiBlitz3.ab3@25656>     MOVE.w #$5292,d1
000337F0 <AmiBlitz3.ab3@25657>     JSR writeword
000337F4 <AmiBlitz3.ab3@25661>   MOVE.l thebra(PC),D1
000337FA <AmiBlitz3.ab3@25662>    JSR writelong
00033800 <AmiBlitz3.ab3@25664>   MOVEA.l firstfor,A2
00033806 <AmiBlitz3.ab3@25665>   MOVE.l (A2),firstfor
0003380A <AmiBlitz3.ab3@25669>   MOVEA.l $8(A2),A0
00033810 <AmiBlitz3.ab3@25670>   MOVEA.l destpointer,A1
00033812 <AmiBlitz3.ab3@25671>   MOVE.l A1,D1
00033814 <AmiBlitz3.ab3@25672>   SUB.l A0,D1            ;d1=positive bra
00033816 <AmiBlitz3.ab3@25673>   ADDQ.l #2,D1
0003381C <AmiBlitz3.ab3@25674>   CMP.l #MinWordSgnd,D1  ; #32768,
00033820 <AmiBlitz3.ab3@25675>    BCC.w JUMP_bigforerr
00033826 <AmiBlitz3.ab3@25676>   TST.w dontwrite
0003382A <AmiBlitz3.ab3@25677>    BNE.w 'nopoke1
0003382E <AmiBlitz3.ab3@25678>   MOVE.w D1,-$2(A0)
00033830 <AmiBlitz3.ab3@25681>   MOVE.l A1,D1
00033834 <AmiBlitz3.ab3@25682>   SUB.l $4(A2),D1
00033836 <AmiBlitz3.ab3@25683>   SUBQ.l #6,D1
0003383C <AmiBlitz3.ab3@25684>   CMP.l #MinWordSgnd,D1 ;#32768,
00033840 <AmiBlitz3.ab3@25685>    BCC.w JUMP_bigforerr
00033846 <AmiBlitz3.ab3@25686>   TST.w dontwrite
0003384A <AmiBlitz3.ab3@25687>    BNE.w 'skip
0003384C <AmiBlitz3.ab3@25688>   NEG.w D1
00033850 <AmiBlitz3.ab3@25689>   MOVE.w D1,-$2(A1)
00033856 <AmiBlitz3.ab3@25692>   JSR popnext3                ;fix stack
0003385C <AmiBlitz3.ab3@25694>   MOVEA.l _execbase,A6
0003385E <AmiBlitz3.ab3@25695>   MOVEA.l A2,A1
00033860 <AmiBlitz3.ab3@25696>   MOVEQ.l #$00,D0
00033864 <AmiBlitz3.ab3@25697>   MOVE.b $10(A1),D0
0003386A <AmiBlitz3.ab3@25700>   MOVE.l mempool2,a0
0003386E <AmiBlitz3.ab3@25701>   JSR _FreePooled(A6)
00033874 <AmiBlitz3.ab3@25703> JMP reget
0003387A <AmiBlitz3.ab3@25706> JUMP_notallowd JMP notallowd
00033880 <AmiBlitz3.ab3@25707> JUMP_bigforerr JMP bigforerr
00033884 <AmiBlitz3.ab3@25711>   MOVE.w #$664F,-(A7)          ;#'fO',
00033888 <AmiBlitz3.ab3@25714>  BRA.w thebra
0003388E <AmiBlitz3.ab3@25717> JUMP_error_dublicate_for JMP error_dublicate_for
00033894 <AmiBlitz3.ab3@25718> JUMP_badforerr           JMP badforerr
00033898 <AmiBlitz3.ab3@25721> forlineat:   Ds.l 1
0003389A <AmiBlitz3.ab3@25722> fortemp:     Ds.w 1
000338A0 <AmiBlitz3.ab3@25730>   CLR.l fp0addr
000338A6 <AmiBlitz3.ab3@25732>   TST.w dirmode
000338AA <AmiBlitz3.ab3@25733>    BNE.w JUMP_baddirerr
000338B4 <AmiBlitz3.ab3@25734>   MOVE.l linenumat,forlineat
000338BA <AmiBlitz3.ab3@25738>   MOVE.l A5,letstart
000338BE <AmiBlitz3.ab3@25739>   BSR.w getparameter
000338C4 <AmiBlitz3.ab3@25740>   MOVE.w D2,fortemp
000338CA <AmiBlitz3.ab3@25742>   JSR findfor
000338CE <AmiBlitz3.ab3@25743>    BEQ.w JUMP_error_dublicate_for
000338D4 <AmiBlitz3.ab3@25744>   LEA firstfor,A2
000338DA <AmiBlitz3.ab3@25745>   JSR addhere2
000338DC <AmiBlitz3.ab3@25746>   MOVE.l A2,-(A7)
000338E2 <AmiBlitz3.ab3@25748>   TST.b debugmode
000338E6 <AmiBlitz3.ab3@25749>    BEQ.b 'noerr
000338EC <AmiBlitz3.ab3@25751>   JSR chkstak
000338F2 <AmiBlitz3.ab3@25752>   MOVE.l forset,D1
000338F8 <AmiBlitz3.ab3@25753>   JSR  writelong
000338FC <AmiBlitz3.ab3@25756>   MOVE.w fortemp(PC),D2
00033904 <AmiBlitz3.ab3@25758>   MOVE.b #1,formode
00033908 <AmiBlitz3.ab3@25760>   BSR.w dolet2                                         ;for get 1. value
0003390E <AmiBlitz3.ab3@25761>   CLR.b formode
00033912 <AmiBlitz3.ab3@25762>   CMP.w #-$7FE8,D0       ; was #$8018,
00033916 <AmiBlitz3.ab3@25763>    BNE.w JUMP_syntaxerr
0003391C <AmiBlitz3.ab3@25764>   MOVE.w commode,D1
00033920 <AmiBlitz3.ab3@25765>    BNE.w JUMP_syntaxerr
00033924 <AmiBlitz3.ab3@25766>   CMP.b #$6,D2
00033928 <AmiBlitz3.ab3@25767>    BCC.w JUMP_badforerr
0003392C <AmiBlitz3.ab3@25768>   BTST #$F,D2
00033930 <AmiBlitz3.ab3@25769>    BNE.w 'skip
00033936 <AmiBlitz3.ab3@25770>   MOVE.w leaamp,D1
0003393C <AmiBlitz3.ab3@25771>   JSR pokewda5s
0003393E <AmiBlitz3.ab3@25772>   MOVE.w D3,D1
00033944 <AmiBlitz3.ab3@25773>   JSR  writeword
0003394A <AmiBlitz3.ab3@25776>   MOVE.w pushindex,D1
00033950 <AmiBlitz3.ab3@25777>   JSR  writeword         ;index lea on stack
00033954 <AmiBlitz3.ab3@25778>   ANDI.w #$FF,D2
00033956 <AmiBlitz3.ab3@25780>   MOVEA.l (A7),A1
0003395A <AmiBlitz3.ab3@25781>   MOVE.w D2,$C(A1)
0003395C <AmiBlitz3.ab3@25783>   MOVE.w D2,-(A7)
00033960 <AmiBlitz3.ab3@25784>    BSR.w eval             ;get fin
00033966 <AmiBlitz3.ab3@25786>    CLR.b onestep
0003396A <AmiBlitz3.ab3@25787>    CMP.w #$8019,d0
0003396E <AmiBlitz3.ab3@25788>    BEQ 'l1
00033976 <AmiBlitz3.ab3@25789>    MOVE.b #1,onestep
00033978 <AmiBlitz3.ab3@25793>   MOVE.w (A7),D2
0003397E <AmiBlitz3.ab3@25795>   MOVE.w pushd0l,D1
00033982 <AmiBlitz3.ab3@25796>   CMP.w #$3,D2
00033986 <AmiBlitz3.ab3@25797>    BCC.w 'skip1
0003398C <AmiBlitz3.ab3@25798>   MOVE.w pushd0wd,D1
0003398E <AmiBlitz3.ab3@25801>    MOVE.w D1,-(A7)
00033994 <AmiBlitz3.ab3@25803>    TST.b fpu
00033998 <AmiBlitz3.ab3@25804>    BEQ 'old
0003399C <AmiBlitz3.ab3@25805>    CMP.b #5,d2
000339A0 <AmiBlitz3.ab3@25806>    BNE 'old
000339A6 <AmiBlitz3.ab3@25807>    MOVE.l #$f2276400,d1
000339AC <AmiBlitz3.ab3@25809>    JSR writelong
000339B0 <AmiBlitz3.ab3@25810>  BRA 'weit
000339B6 <AmiBlitz3.ab3@25814>    JSR  writeword        ;push fin on stack                                   ;fpu for end value
000339BA <AmiBlitz3.ab3@25817>   CMP.w #-$7FE7,D0      ; was #$8019,
000339BE <AmiBlitz3.ab3@25818>    BNE.w 'defstep
000339C2 <AmiBlitz3.ab3@25820>    BSR.w eval           ;get step
000339C8 <AmiBlitz3.ab3@25822>    TST.b fpu
000339CC <AmiBlitz3.ab3@25823>    BEQ 'pushstep
000339D0 <AmiBlitz3.ab3@25824>    CMP.b #5,d2
000339D4 <AmiBlitz3.ab3@25825>    BNE 'pushstep
000339DA <AmiBlitz3.ab3@25826>    MOVE.l #$f2276400,d1                                    ;write step <> 1
000339E0 <AmiBlitz3.ab3@25828>   JSR writelong
000339E2 <AmiBlitz3.ab3@25833>    MOVE.w (a7)+,d1
000339E6 <AmiBlitz3.ab3@25834>  BRA 'fpur
000339EA <AmiBlitz3.ab3@25838>   CMP.w #$4,D2
000339EE <AmiBlitz3.ab3@25839>    BCC.w 'qup
000339F2 <AmiBlitz3.ab3@25840>   MOVE.w #$7001,D1
000339F8 <AmiBlitz3.ab3@25841>   JSR writeword
000339FC <AmiBlitz3.ab3@25842>  BRA.w 'pushstep
00033A00 <AmiBlitz3.ab3@25845>   BNE.w 'notq
00033A04 <AmiBlitz3.ab3@25846>   MOVE.w #$7001,D1
00033A0A <AmiBlitz3.ab3@25847>   JSR writeword
00033A10 <AmiBlitz3.ab3@25848>   MOVE.w swapd0,D1
00033A16 <AmiBlitz3.ab3@25849>   JSR writeword
00033A1A <AmiBlitz3.ab3@25850>  BRA.w 'pushstep
00033A20 <AmiBlitz3.ab3@25854>   TST.b fpu
00033A24 <AmiBlitz3.ab3@25855>    BEQ 'old2
00033A28 <AmiBlitz3.ab3@25856>   CMP.b #5,d2
00033A2C <AmiBlitz3.ab3@25857>    BNE 'old2
00033A32 <AmiBlitz3.ab3@25858>   MOVE.l #$f23c5000,d1
00033A38 <AmiBlitz3.ab3@25859>   JSR writelong
00033A3C <AmiBlitz3.ab3@25860>   MOVE.w #$1,d1
00033A42 <AmiBlitz3.ab3@25861>   JSR writeword
00033A48 <AmiBlitz3.ab3@25862>   MOVE.l #$f2276400,d1
00033A4E <AmiBlitz3.ab3@25863>   JSR writelong
00033A50 <AmiBlitz3.ab3@25864>   MOVE.w (a7)+,d1
00033A54 <AmiBlitz3.ab3@25865>  BRA 'fpur
00033A58 <AmiBlitz3.ab3@25869>   MOVE.w #$203C,D1                                         ;write step 1
00033A5E <AmiBlitz3.ab3@25870>   JSR writeword
00033A64 <AmiBlitz3.ab3@25871>   MOVE.l #$80000041,D1     ;ffp '1'                                ;ffp '1'
00033A6A <AmiBlitz3.ab3@25872>   JSR writelong
00033A6C <AmiBlitz3.ab3@25875>   MOVE.w (A7)+,D1
00033A72 <AmiBlitz3.ab3@25876>   JSR writeword           ;push step on stack                                 ;push step on stack
00033A74 <AmiBlitz3.ab3@25881>   MOVE.w (A7)+,D2
00033A76 <AmiBlitz3.ab3@25882>   MOVEA.l (A7),A1
00033A7E <AmiBlitz3.ab3@25883>   MOVE.l destpointer,$4(A1)
00033A84 <AmiBlitz3.ab3@25884>   LEA forcompb,A0
00033A8A <AmiBlitz3.ab3@25885>   LEA forcompbf,A1
00033A8E <AmiBlitz3.ab3@25886>   CMP.w #$1,D2
00033A92 <AmiBlitz3.ab3@25887>    BEQ.w 'docomp
00033A98 <AmiBlitz3.ab3@25888>   LEA forcompw,A0
00033A9E <AmiBlitz3.ab3@25889>   LEA forcompwf,A1
00033AA2 <AmiBlitz3.ab3@25890>   CMP.w #$2,D2
00033AA6 <AmiBlitz3.ab3@25891>    BEQ.w 'docomp
00033AAC <AmiBlitz3.ab3@25892>   LEA forcompl,A0
00033AB2 <AmiBlitz3.ab3@25893>   LEA forcomplf,A1
00033AB6 <AmiBlitz3.ab3@25894>   CMP.w #$5,D2
00033ABA <AmiBlitz3.ab3@25895>    BNE.w 'docomp
00033AC0 <AmiBlitz3.ab3@25897>   TST.b fpu
00033AC4 <AmiBlitz3.ab3@25898>    BEQ 'old3
00033ACA <AmiBlitz3.ab3@25899>   LEA fpu_start,a0
00033AD0 <AmiBlitz3.ab3@25900>   LEA fpu_end,a1
00033AD6 <AmiBlitz3.ab3@25901>   JSR pokecode
00033ADA <AmiBlitz3.ab3@25902>  BRA 'fpu3
00033AE0 <AmiBlitz3.ab3@25906>   LEA forcompf,A0                                         ;
00033AE6 <AmiBlitz3.ab3@25907>   LEA forcompff,A1
00033AEC <AmiBlitz3.ab3@25908>   JSR pokecode
00033AF0 <AmiBlitz3.ab3@25909>   MOVE.w #$C900,D1       ; #getffpbase,
00033AF4 <AmiBlitz3.ab3@25910>   BSR.w Atokejsr
00033AFA <AmiBlitz3.ab3@25911>   LEA forcompf2,A0
00033B00 <AmiBlitz3.ab3@25912>   LEA forcompf2f,A1
00033B06 <AmiBlitz3.ab3@25915>   JSR pokecode
00033B0C <AmiBlitz3.ab3@25917>   TST.b fast                                               ;fast for next
00033B10 <AmiBlitz3.ab3@25918>    BEQ 's1
00033B14 <AmiBlitz3.ab3@25919>   CMP.w #3,d2
00033B18 <AmiBlitz3.ab3@25920>    BNE 's1
00033B1E <AmiBlitz3.ab3@25921>   TST.b onestep
00033B22 <AmiBlitz3.ab3@25922>    BEQ 's1
00033B2C <AmiBlitz3.ab3@25923>   SUB.l #10,destpointer
00033B30 <AmiBlitz3.ab3@25924>   MOVE.w #$b081,d1
00033B36 <AmiBlitz3.ab3@25925>   JSR writeword
00033B3A <AmiBlitz3.ab3@25930>   MOVE.l thebgt(PC),D1
00033B40 <AmiBlitz3.ab3@25931>   JSR writelong
00033B42 <AmiBlitz3.ab3@25936>   MOVEA.l (A7)+,A1
00033B4A <AmiBlitz3.ab3@25937>   MOVE.l destpointer,$8(A1)
00033B50 <AmiBlitz3.ab3@25938> JMP reget
00033B54 <AmiBlitz3.ab3@25943>   MOVEA.l 8(a7),a2
00033B58 <AmiBlitz3.ab3@25944>   Dc.l $f2124400                                           ;fmove.s (a2),fp0
00033B5E <AmiBlitz3.ab3@25945>   fmove.s 4(a7),fp1
00033B62 <AmiBlitz3.ab3@25946>   BTST.b #7,(a7)
00033B66 <AmiBlitz3.ab3@25947>   BNE 'negi
00033B6A <AmiBlitz3.ab3@25948>   fcmp.x fp1,fp0
00033B6E <AmiBlitz3.ab3@25949>  BRA 'negi2
00033B72 <AmiBlitz3.ab3@25952>   fcmp.x fp0,fp1
00033B76 <AmiBlitz3.ab3@25955>   Dc.l $f2920000                                           ;fbgt.w
00033B7A <AmiBlitz3.ab3@25961>   BGT.w thebgt
00033B80 <AmiBlitz3.ab3@25964> JUMP_error4char          JMP error4char
00033B86 <AmiBlitz3.ab3@25965> JUMP_error_convert_types JMP error_convert_types
00033B8C <AmiBlitz3.ab3@25966> JUMP_noleterr            JMP noleterr
00033B92 <AmiBlitz3.ab3@25967> JUMP_nocomerr            JMP nocomerr
00033B98 <AmiBlitz3.ab3@25968> JUMP_comerr              JMP comerr
00033B9E <AmiBlitz3.ab3@25972>   MOVE.l A5,letstart
00033BA4 <AmiBlitz3.ab3@25973>   JSR getparameter
00033BAE <AmiBlitz3.ab3@25980>   MOVE.l destpointer,pushpc
00033BB8 <AmiBlitz3.ab3@25981>   MOVE.l hunkoffsetbase,pushoff
00033BBE <AmiBlitz3.ab3@25982>   CLR.l rightsidetype
00033BC4 <AmiBlitz3.ab3@25983>   CLR.w rightsideflagmask
00033BCC <AmiBlitz3.ab3@25985>   MOVE.w #$0001,regnum            ;don't disturb this reg!
00033BD2 <AmiBlitz3.ab3@25986>   JSR fetchvars                   ;var in a3, type in a2
00033BD8 <AmiBlitz3.ab3@25987>   JSR calcvar                     ;get offset stuff
00033BDE <AmiBlitz3.ab3@25989>   TST.b formode
00033BE2 <AmiBlitz3.ab3@25990>   BEQ 'lf1
00033BE8 <AmiBlitz3.ab3@25991>   CMP.l #newtype_double,A2
00033BEC <AmiBlitz3.ab3@25992>   BEQ JUMP_notallowd
00033BF2 <AmiBlitz3.ab3@25993>   MOVE.l a2,currtype
00033BF8 <AmiBlitz3.ab3@25996>   CLR.w startoffsetmore
00033BFC <AmiBlitz3.ab3@25997>   CMP.w #$3d,d0
00033C00 <AmiBlitz3.ab3@25998>   BNE 'l1a
00033C04 <AmiBlitz3.ab3@25999>   BTST #15,d2
00033C08 <AmiBlitz3.ab3@26000>   BEQ 'l1a
00033C0C <AmiBlitz3.ab3@26001>   CMP.b #1,d2
00033C10 <AmiBlitz3.ab3@26002>   BNE 'l1a
00033C1A <AmiBlitz3.ab3@26003>   MOVE.w leaa0a0+2,startoffsetmore
00033C20 <AmiBlitz3.ab3@26007>   CLR.w regnum                     ;don't disturb this reg
00033C24 <AmiBlitz3.ab3@26008>   BSR.w pushdo
00033C2A <AmiBlitz3.ab3@26009>   CLR.w commode
00033C30 <AmiBlitz3.ab3@26011>   CLR.w stackcorrect
00033C36 <AmiBlitz3.ab3@26013>   CLR.w pcodd
00033C3C <AmiBlitz3.ab3@26015>   MOVE.w startoffsetmore,d1
00033C40 <AmiBlitz3.ab3@26016>   BTST #0,d1
00033C44 <AmiBlitz3.ab3@26017>   BEQ 'l2a
00033C4C <AmiBlitz3.ab3@26018>   MOVE.w #1,pcodd
00033C50 <AmiBlitz3.ab3@26023>   CMP.w #$3D,D0              ;'='                              ;=
00033C54 <AmiBlitz3.ab3@26024>   BEQ.w 'nextcom
00033C56 <AmiBlitz3.ab3@26028>   MOVE.b (a5)+,d1
00033C5A <AmiBlitz3.ab3@26029>   BEQ 'l10
00033C5E <AmiBlitz3.ab3@26030>   CMP.b #":",d1
00033C62 <AmiBlitz3.ab3@26031>   BEQ 'l10
00033C66 <AmiBlitz3.ab3@26032>   CMP.b #";",d1
00033C6A <AmiBlitz3.ab3@26033>   BEQ 'l10
00033C6E <AmiBlitz3.ab3@26034>   CMP.b #"0",d1
00033C72 <AmiBlitz3.ab3@26035>   BLT 'l11
00033C76 <AmiBlitz3.ab3@26036>   CMP.b #"9",d1
00033C7A <AmiBlitz3.ab3@26037>   BGT 'l11
00033C7E <AmiBlitz3.ab3@26038>  BRA.s 'l1
00033C86 <AmiBlitz3.ab3@26041>   MOVE.b #1,quickadd
00033C8C <AmiBlitz3.ab3@26048>   MOVEA.l letstart,A5
00033C8E <AmiBlitz3.ab3@26049>   SUBQ.w #1,A5
00033C92 <AmiBlitz3.ab3@26052>   CMP.b #$7,D2
00033C96 <AmiBlitz3.ab3@26053>    BNE.w 'notstring
00033C9A <AmiBlitz3.ab3@26064>   MOVEM.w D2-D3,-(A7)
00033CA0 <AmiBlitz3.ab3@26065>   MOVE.l lastoffset_org,-(A7)
00033CA6 <AmiBlitz3.ab3@26066>   MOVE.w varmode,-(A7)
00033CB0 <AmiBlitz3.ab3@26069>     MOVE.l #forthstack,forthsp
00033CBA <AmiBlitz3.ab3@26070>    MOVE.l #precstack,precsp
00033CC0 <AmiBlitz3.ab3@26071>    CLR.w regnum
00033CC6 <AmiBlitz3.ab3@26072>    CLR.w nonew
00033CCC <AmiBlitz3.ab3@26073>    CLR.w sbasegot
00033CD6 <AmiBlitz3.ab3@26074>    MOVE.w varcodelen,oldvcodelen
00033CDC <AmiBlitz3.ab3@26075>    CLR.w varcodelen
00033CE4 <AmiBlitz3.ab3@26076>    MOVE.w #$FFFF,lasta6
00033CE6 <AmiBlitz3.ab3@26080>   MOVEQ.l #$07,D2
00033CEA <AmiBlitz3.ab3@26081>    BSR.w eval
00033CF0 <AmiBlitz3.ab3@26082>   MOVE.w (A7)+,varmode
00033CF6 <AmiBlitz3.ab3@26083>   MOVE.l (A7)+,lastoffset_org
00033CFC <AmiBlitz3.ab3@26084>   MOVE.w moved0a3,D1
00033D02 <AmiBlitz3.ab3@26085>    JSR writeword
00033D08 <AmiBlitz3.ab3@26086>   MOVE.w commode,D1
00033D0C <AmiBlitz3.ab3@26087>    BEQ.w 'stconti
00033D12 <AmiBlitz3.ab3@26088>   LEA pulla2st,A0
00033D18 <AmiBlitz3.ab3@26089>   LEA pulla2stf,A1
00033D1E <AmiBlitz3.ab3@26090>    JSR pokecode
00033D22 <AmiBlitz3.ab3@26091>  BRA.w 'stconti2
00033D26 <AmiBlitz3.ab3@26094>   BSR.w pushput
00033D2A <AmiBlitz3.ab3@26097>   MOVEM.w (A7)+,D2-D3
00033D2E <AmiBlitz3.ab3@26098>   BTST #$F,D2
00033D32 <AmiBlitz3.ab3@26099>   BNE.w 'already
00033D38 <AmiBlitz3.ab3@26100>     MOVE.w D3,leaa5d3a2+2
00033D3E <AmiBlitz3.ab3@26101>     MOVE.l leaa5d3a2,D1
00033D44 <AmiBlitz3.ab3@26102>     JSR pokela5s
00033D48 <AmiBlitz3.ab3@26105>   MOVE.w #$FE6F,D1         ; was #65135,
00033D4E <AmiBlitz3.ab3@26106>   JSR uselib
00033D54 <AmiBlitz3.ab3@26107>   MOVE.l #$C700,D1         ; was #lastring,
00033D5A <AmiBlitz3.ab3@26108>   MOVE.l d1,lastinstruction
00033D60 <AmiBlitz3.ab3@26109>   MOVE.w varmode,D2
00033D64 <AmiBlitz3.ab3@26110>   BNE.w 'local
00033D66 <AmiBlitz3.ab3@26111>     ADDQ.w #1,D1           ;use global allocmem
00033D6A <AmiBlitz3.ab3@26114>   BSR.w Atokejsr
00033D6E <AmiBlitz3.ab3@26115>   CMP.w #$2C,D0           ;','
00033D72 <AmiBlitz3.ab3@26116>   BNE.w 'done
00033D78 <AmiBlitz3.ab3@26118>   MOVE.w addq4a2,D1
00033D7E <AmiBlitz3.ab3@26119>   JSR writeword
00033D82 <AmiBlitz3.ab3@26120>  BRA.w 'nextstr
00033D86 <AmiBlitz3.ab3@26123>    BTST #$E,D2             ;pointer, ignore!
00033D8A <AmiBlitz3.ab3@26124>    BNE.w 'skip
00033D8C <AmiBlitz3.ab3@26125>   TST.b D2
00033D90 <AmiBlitz3.ab3@26126>    BEQ.w JUMP_noleterr     ;tried to assign a struct - later!
00033D96 <AmiBlitz3.ab3@26128>    TST.b newsyntax
00033D9A <AmiBlitz3.ab3@26129>    BEQ 'skip2
00033D9E <AmiBlitz3.ab3@26132>    CMP.w #$4022,(a5)
00033DA2 <AmiBlitz3.ab3@26133>    BNE 'skip2
00033DA8 <AmiBlitz3.ab3@26134>    CMP.l #3,d2
00033DAC <AmiBlitz3.ab3@26135>    BNE  JUMP_error_convert_types
00033DAE <AmiBlitz3.ab3@26136>    ADDQ #2,a5
00033DB0 <AmiBlitz3.ab3@26137>    MOVEQ #0,d0
00033DB2 <AmiBlitz3.ab3@26138>    MOVE.b (a5)+,d0
00033DB6 <AmiBlitz3.ab3@26139>    BEQ 'skip2
00033DBA <AmiBlitz3.ab3@26140>    CMP.b #$22,d0
00033DBE <AmiBlitz3.ab3@26141>    BNE 'l5
00033DC2 <AmiBlitz3.ab3@26142>    MOVE.b #0,d0
00033DC6 <AmiBlitz3.ab3@26143>  BRA 'do
00033DC8 <AmiBlitz3.ab3@26146>   ASL.l #8,d0
00033DCA <AmiBlitz3.ab3@26147>    MOVE.b (a5)+,d0
00033DCE <AmiBlitz3.ab3@26148>    BEQ 'skip2
00033DD2 <AmiBlitz3.ab3@26149>    CMP.b #$22,d0
00033DD6 <AmiBlitz3.ab3@26150>    BNE 'l2
00033DDA <AmiBlitz3.ab3@26151>    MOVE.b #0,d0
00033DDC <AmiBlitz3.ab3@26152>    ASR.l #8,d0
00033DE0 <AmiBlitz3.ab3@26153>  BRA 'do
00033DE2 <AmiBlitz3.ab3@26156>   ASL.l #8,d0
00033DE4 <AmiBlitz3.ab3@26157>     MOVE.b (a5)+,d0
00033DE8 <AmiBlitz3.ab3@26158>    BEQ 'skip2
00033DEC <AmiBlitz3.ab3@26159>    CMP.b #$22,d0
00033DF0 <AmiBlitz3.ab3@26160>    BNE 'l3
00033DF4 <AmiBlitz3.ab3@26161>    MOVE.b #0,d0
00033DF6 <AmiBlitz3.ab3@26162>    ASR.l #8,d0
00033DFA <AmiBlitz3.ab3@26163>  BRA 'do
00033DFC <AmiBlitz3.ab3@26166>   ASL.l #8,d0
00033DFE <AmiBlitz3.ab3@26167>     MOVE.b (a5)+,d0
00033E02 <AmiBlitz3.ab3@26168>    BEQ 'skip2
00033E06 <AmiBlitz3.ab3@26169>    CMP.b #$22,d0
00033E0A <AmiBlitz3.ab3@26170>    BNE 'l4
00033E0E <AmiBlitz3.ab3@26171>    MOVE.b #0,d0
00033E10 <AmiBlitz3.ab3@26172>    ASR.l #8,d0
00033E14 <AmiBlitz3.ab3@26173>  BRA 'do
00033E18 <AmiBlitz3.ab3@26176>    CMP.b #$22,(a5)+
00033E1C <AmiBlitz3.ab3@26177>    BNE JUMP_error4char
00033E20 <AmiBlitz3.ab3@26180>   MOVE.w #$2b7c,d1
00033E26 <AmiBlitz3.ab3@26181>    TST.w varmode
00033E2A <AmiBlitz3.ab3@26182>    BEQ 'g3
00033E2E <AmiBlitz3.ab3@26183>    BCLR #9,d1
00033E34 <AmiBlitz3.ab3@26186>     JSR writeword
00033E36 <AmiBlitz3.ab3@26187>     MOVE.l d0,d1
00033E3C <AmiBlitz3.ab3@26188>     JSR writelong
00033E3E <AmiBlitz3.ab3@26189>     MOVE.w d3,d1
00033E44 <AmiBlitz3.ab3@26190>     JSR writeword
00033E4A <AmiBlitz3.ab3@26191>     JSR get1bytemain
00033E4C <AmiBlitz3.ab3@26192>  RTS
00033E52 <AmiBlitz3.ab3@26199>   MOVE.w d2,vartype
00033E56 <AmiBlitz3.ab3@26201>   MOVE.b #$3,D2
00033E5A <AmiBlitz3.ab3@26208>   CMP.b #5,d2
00033E5E <AmiBlitz3.ab3@26209>   BNE 'l1aa
00033E64 <AmiBlitz3.ab3@26210>   MOVE.l a2,currtype
00033E68 <AmiBlitz3.ab3@26215>   MOVEM.w D2-D3,-(A7)
00033E6E <AmiBlitz3.ab3@26216>   MOVE.w varmode,-(A7)
00033E74 <AmiBlitz3.ab3@26218>   MOVE.l a2,leftsidetype
00033E7E <AmiBlitz3.ab3@26219>   MOVE.w flagmask,leftsideflagmask
00033E82 <AmiBlitz3.ab3@26220>   BTST #$f,d2
00033E86 <AmiBlitz3.ab3@26221>   BEQ 'nomultiassign
00033E8C <AmiBlitz3.ab3@26222>   CLR.l leftsidetype                        ;its multiassign to type entries so no typecheck need
00033E92 <AmiBlitz3.ab3@26223>   CLR.w leftsideflagmask
00033E96 <AmiBlitz3.ab3@26227>   ANDI.w #$FF,D2
00033E9C <AmiBlitz3.ab3@26228>   MOVE.l lastoffset_org,-(A7)
00033EA2 <AmiBlitz3.ab3@26229>   JSR eval                                ; calc right side of var assign
00033EA6 <AmiBlitz3.ab3@26231>   MOVEM.l a0/a1,-(a7)
00033EAC <AmiBlitz3.ab3@26232>   MOVE.l leftsidetype,a0
00033EB2 <AmiBlitz3.ab3@26233>   CMP.l #0,a0
00033EB6 <AmiBlitz3.ab3@26234>   BEQ 'nocheck
00033EBE <AmiBlitz3.ab3@26235>   CMP.w #1,leftsideflagmask
00033EC2 <AmiBlitz3.ab3@26236>   BEQ 'isptr
00033ECA <AmiBlitz3.ab3@26237>   CMP.l #$100,4(a0)
00033ECE <AmiBlitz3.ab3@26238>   BLE 'nocheck
00033ED4 <AmiBlitz3.ab3@26241>   TST.l typetocast
00033ED8 <AmiBlitz3.ab3@26242>   BEQ 'nocast
00033EDE <AmiBlitz3.ab3@26243>   MOVE.l typetocast,a1
00033EE2 <AmiBlitz3.ab3@26244>   BRA 'typecheck
00033EE8 <AmiBlitz3.ab3@26247>   TST.l rightsidetype
00033EEC <AmiBlitz3.ab3@26248>   BEQ 'nocheck
00033EF2 <AmiBlitz3.ab3@26249>   MOVE.l rightsidetype,a1
00033EFA <AmiBlitz3.ab3@26250>   CMP.w #1,rightsideflagmask
00033EFE <AmiBlitz3.ab3@26251>   BEQ 'ok
00033F06 <AmiBlitz3.ab3@26252>   CMP.l #$100,4(a1)
00033F0A <AmiBlitz3.ab3@26253>   BGE 'typecheck
00033F12 <AmiBlitz3.ab3@26254>   CMP.l #$3,4(a1)
00033F16 <AmiBlitz3.ab3@26255>   BEQ 'ok                              ;long assign is allow with this codelines
00033F1A <AmiBlitz3.ab3@26256>   BRA 'error
00033F20 <AmiBlitz3.ab3@26259>   TST.b typecheck
00033F24 <AmiBlitz3.ab3@26260>   BEQ 'nocheck
00033F2A <AmiBlitz3.ab3@26261>   TST.b notypecheck
00033F2E <AmiBlitz3.ab3@26262>   BNE 'ok
00033F30 <AmiBlitz3.ab3@26263>   CMP.l a0,a1
00033F34 <AmiBlitz3.ab3@26264>   BEQ 'ok
00033F38 <AmiBlitz3.ab3@26266>   MOVE.l 4(a1),a1                   ; load the address of 1. type.
00033F3C <AmiBlitz3.ab3@26267>   CMP.l $a(a1),a0                   ; check if the bigger type contain in first place same type as the function need
00033F40 <AmiBlitz3.ab3@26268>   BEQ 'ok
00033F46 <AmiBlitz3.ab3@26271>  JMP   error_convert_types     ;for syntax 4  = typecheck
00033F4C <AmiBlitz3.ab3@26275>    CLR.l typetocast
00033F50 <AmiBlitz3.ab3@26276>    MOVEM.l (a7)+, a0/a1
00033F56 <AmiBlitz3.ab3@26278>   MOVE.l (A7)+,lastoffset_org
00033F5C <AmiBlitz3.ab3@26279>   MOVE.w commode,D1
00033F60 <AmiBlitz3.ab3@26280>    BNE.w 'conti
00033F64 <AmiBlitz3.ab3@26281>    BSR.w pushput
00033F6A <AmiBlitz3.ab3@26284>   MOVE.w (A7)+,varmode
00033F6E <AmiBlitz3.ab3@26285>   MOVEM.w (A7)+,D2-D3
00033F72 <AmiBlitz3.ab3@26290>   MOVE.w #$2B40,D1
00033F78 <AmiBlitz3.ab3@26291>   MOVE.w varmode,D4
00033F7C <AmiBlitz3.ab3@26292>    BEQ.w 'skip1
00033F80 <AmiBlitz3.ab3@26293>   BCLR #$9,D1
00033F84 <AmiBlitz3.ab3@26296>   BTST #$F,D2
00033F88 <AmiBlitz3.ab3@26297>    BEQ.w 'code
00033F8E <AmiBlitz3.ab3@26300>    TST.b stackcorrect
00033F92 <AmiBlitz3.ab3@26301>    BNE 'st1
00033F98 <AmiBlitz3.ab3@26303>   MOVE.w commode,D1
00033F9C <AmiBlitz3.ab3@26304>    BEQ.w 'skipc1
00033FA2 <AmiBlitz3.ab3@26309>   MOVE.w pulla2,D1
00033FA8 <AmiBlitz3.ab3@26310>    JSR writeword
00033FAC <AmiBlitz3.ab3@26313>   MOVE.w #$2480,D1               ;move.l d0,(a2)
00033FB0 <AmiBlitz3.ab3@26316>    MOVEM.l a0/d0,-(a7)
00033FB6 <AmiBlitz3.ab3@26317>    MOVEA.l lastoffset_org,A0
00033FB8 <AmiBlitz3.ab3@26318>    MOVE.l A0,D0
00033FBC <AmiBlitz3.ab3@26319>    BEQ.w 'skipa
00033FBE <AmiBlitz3.ab3@26320>    MOVEA.l D0,A0
00033FC6 <AmiBlitz3.ab3@26321>    MOVE.l $A(A0),currtype
00033FCA <AmiBlitz3.ab3@26324>   MOVEM.l (a7)+,a0/d0
00033FCE <AmiBlitz3.ab3@26326>   CMP.w #$2C,D0                ; ','
00033FD2 <AmiBlitz3.ab3@26327>    BNE.w 'code
00033FD6 <AmiBlitz3.ab3@26329>     MOVE.w #$24C0,D1           ;move.l d0,(a2)+
00033FDA <AmiBlitz3.ab3@26330>    BSR.w 'code                                         ;write store
00033FE0 <AmiBlitz3.ab3@26333>    MOVE.l lastoffset_org,D0
00033FE8 <AmiBlitz3.ab3@26339>   MOVE.w #$FFFF,commode    ; -1
00033FEE <AmiBlitz3.ab3@26340>   CLR.w varcodelen
00033FF6 <AmiBlitz3.ab3@26342>   MOVE.b #1,optiarray
00033FFC <AmiBlitz3.ab3@26344>   MOVE.w pusha2,D1
00034002 <AmiBlitz3.ab3@26345>    JSR writeword
00034008 <AmiBlitz3.ab3@26347>   TST.l lastoffset_org
0003400C <AmiBlitz3.ab3@26348>   BEQ 'dimmore
00034012 <AmiBlitz3.ab3@26349>   MOVEA.l lastoffset_org,A0
00034014 <AmiBlitz3.ab3@26351>   MOVE.l (A0),D0
00034018 <AmiBlitz3.ab3@26352>    BEQ.w JUMP_comerr          ;comma past end of struct
0003401A <AmiBlitz3.ab3@26353>   MOVEA.l D0,A0
00034020 <AmiBlitz3.ab3@26354>   MOVE.l A0,lastoffset_org
00034026 <AmiBlitz3.ab3@26355>   BTST #$1,$7(A0)
0003402A <AmiBlitz3.ab3@26356>    BNE.w JUMP_nocomerr        ;can't use comma on multiple entries
0003402E <AmiBlitz3.ab3@26357>   MOVEA.l $A(A0),A1
00034032 <AmiBlitz3.ab3@26358>   MOVE.l $4(A1),D2
00034038 <AmiBlitz3.ab3@26362>   BTST #$0,$7(A0)
0003403C <AmiBlitz3.ab3@26363>    BNE.w 'nextpnt             ;pointer
00034042 <AmiBlitz3.ab3@26364>   CMP.l #$100,D2
00034046 <AmiBlitz3.ab3@26365>    BCC.l JUMP_nocomerr        ;or on structs
0003404A <AmiBlitz3.ab3@26366>  BRA.w 'docom                                     ; do do type\x= 10,20,30....
00034050 <AmiBlitz3.ab3@26370>         CLR.b optiarray
00034054 <AmiBlitz3.ab3@26371>         CMP.w #"@@",(a5)
00034058 <AmiBlitz3.ab3@26372>         BEQ 'n1
0003405C <AmiBlitz3.ab3@26373>  BRA 'd1
00034062 <AmiBlitz3.ab3@26376>   JSR nextline
00034064 <AmiBlitz3.ab3@26377>         MOVE.l a5,-(a7)
00034066 <AmiBlitz3.ab3@26380>   MOVE.b (a5)+,d0
0003406A <AmiBlitz3.ab3@26381>         CMP.b #$20,d0
0003406E <AmiBlitz3.ab3@26382>         BEQ 'l6
00034070 <AmiBlitz3.ab3@26383>         MOVE.l (a7)+,a5
00034074 <AmiBlitz3.ab3@26384>         CMP.b #";",d0
00034078 <AmiBlitz3.ab3@26385>         BEQ 'n1
0003407E <AmiBlitz3.ab3@26388>         TST.w debugmode
00034082 <AmiBlitz3.ab3@26389>         BEQ 'nextcom
00034084 <AmiBlitz3.ab3@26390>         MOVE.l a0,-(a7)
0003408A <AmiBlitz3.ab3@26391>         MOVE.l pushat,a0
00034090 <AmiBlitz3.ab3@26392>         CMP.l #0,a0
00034094 <AmiBlitz3.ab3@26393>         BNE 'o1
00034098 <AmiBlitz3.ab3@26394>  BRA 'skipb
000340A0 <AmiBlitz3.ab3@26397>         ADD.l #1,2(a0)
000340A6 <AmiBlitz3.ab3@26400>   CLR.w commode
000340AE <AmiBlitz3.ab3@26401>         MOVE.b #1,stackcorrect
000340B0 <AmiBlitz3.ab3@26402>         MOVE.l (a7)+,a0
000340B6 <AmiBlitz3.ab3@26403>  JMP 'nextcom
000340BC <AmiBlitz3.ab3@26407>   CMP.l #$100,D2
000340C0 <AmiBlitz3.ab3@26408>    BCS.w 'nextpnt2
000340C2 <AmiBlitz3.ab3@26409>   MOVEQ.l #$00,D2
000340C6 <AmiBlitz3.ab3@26412>   BSET #$E,D2
000340CA <AmiBlitz3.ab3@26415>   BSET #$F,D2
000340CE <AmiBlitz3.ab3@26416>  BRA.w 'nextcom
000340D4 <AmiBlitz3.ab3@26420>    MOVE.l destpointer,a4                   ;
000340DC <AmiBlitz3.ab3@26421>    MOVE.l #$f22a6400,-4(a4)                ;
000340E2 <AmiBlitz3.ab3@26422>    MOVE.w arrayoffset,d1                   ;
000340E8 <AmiBlitz3.ab3@26423>  JMP writeword                             ;
000340EE <AmiBlitz3.ab3@26428>    TST.b fpu
000340F2 <AmiBlitz3.ab3@26429>    BEQ 'nofloat
000340F6 <AmiBlitz3.ab3@26430>    CMP.b #5,d2
000340FA <AmiBlitz3.ab3@26431>    BNE 'nofloat
00034100 <AmiBlitz3.ab3@26432>    CLR.w fp0var
00034106 <AmiBlitz3.ab3@26433>    LEA regtable,a4
00034108 <AmiBlitz3.ab3@26434>    TST.l (a4)
0003410C <AmiBlitz3.ab3@26435>    BEQ 'noreg
00034110 <AmiBlitz3.ab3@26436>    BTST #15,d2                                             ;regvars
00034114 <AmiBlitz3.ab3@26437>    BNE 'noreg
00034118 <AmiBlitz3.ab3@26438>    CMP.w 0+4(a4),d3
0003411C <AmiBlitz3.ab3@26439>    BNE 'doreg1
00034122 <AmiBlitz3.ab3@26440>    MOVE.l #$f2000380,d1
00034128 <AmiBlitz3.ab3@26441>    MOVE.w regnum,d0
0003412C <AmiBlitz3.ab3@26442>    BNE 'noopt
00034132 <AmiBlitz3.ab3@26448>    MOVE.l destpointer,a4
0003413A <AmiBlitz3.ab3@26449>    CMP.l #$f2001c80,-8(a4)
0003413E <AmiBlitz3.ab3@26450>    BNE 'noopt
00034146 <AmiBlitz3.ab3@26451>    CMP.l #$f2000422,-4(a4)
0003414A <AmiBlitz3.ab3@26452>    BNE 'noopt
00034150 <AmiBlitz3.ab3@26453>    MOVE.l #$f20003a2,d1
0003415A <AmiBlitz3.ab3@26454>    SUB.l #8,destpointer
0003415C <AmiBlitz3.ab3@26457>    ASL.w #7,d0
0003415E <AmiBlitz3.ab3@26458>    OR.w d0,d1
00034164 <AmiBlitz3.ab3@26459>    JSR writelong
00034166 <AmiBlitz3.ab3@26460>  RTS
0003416A <AmiBlitz3.ab3@26463>   CMP.w 8+4(a4),d3
0003416E <AmiBlitz3.ab3@26464>    BNE 'doreg2
00034174 <AmiBlitz3.ab3@26465>    MOVE.l #$f2000300,d1
0003417A <AmiBlitz3.ab3@26466>    MOVE.w regnum,d0
0003417C <AmiBlitz3.ab3@26467>    ASL.w #7,d0
0003417E <AmiBlitz3.ab3@26468>    OR.w d0,d1
00034184 <AmiBlitz3.ab3@26469>    JSR writelong
00034186 <AmiBlitz3.ab3@26470>  RTS
0003418A <AmiBlitz3.ab3@26473>   CMP.w 16+4(a4),d3
0003418E <AmiBlitz3.ab3@26474>    BNE 'doreg3
00034194 <AmiBlitz3.ab3@26475>    MOVE.l #$f2000280,d1
0003419A <AmiBlitz3.ab3@26476>    MOVE.w regnum,d0
0003419C <AmiBlitz3.ab3@26477>    ASL.w #7,d0
0003419E <AmiBlitz3.ab3@26478>    OR.w d0,d1
000341A4 <AmiBlitz3.ab3@26479>    JSR  writelong
000341A6 <AmiBlitz3.ab3@26480>  RTS
000341AA <AmiBlitz3.ab3@26483>   CMP.w 24+4(a4),d3
000341AE <AmiBlitz3.ab3@26484>    BNE 'doreg4
000341B4 <AmiBlitz3.ab3@26485>    MOVE.l #$f2000200,d1
000341BA <AmiBlitz3.ab3@26486>    MOVE.w regnum,d0
000341BC <AmiBlitz3.ab3@26487>    ASL.w #7,d0
000341BE <AmiBlitz3.ab3@26488>    OR.w d0,d1
000341C4 <AmiBlitz3.ab3@26489>    JSR writelong
000341C6 <AmiBlitz3.ab3@26490>  RTS
000341CA <AmiBlitz3.ab3@26493>   CMP.w 32+4(a4),d3
000341CE <AmiBlitz3.ab3@26494>    BNE 'noreg
000341D4 <AmiBlitz3.ab3@26495>    MOVE.l #$f2000180,d1
000341DA <AmiBlitz3.ab3@26496>    MOVE.w regnum,d0
000341DC <AmiBlitz3.ab3@26497>    ASL.w #7,d0
000341DE <AmiBlitz3.ab3@26498>    OR.w d0,d1
000341E4 <AmiBlitz3.ab3@26499>    JSR writelong
000341E6 <AmiBlitz3.ab3@26500>  RTS
000341EC <AmiBlitz3.ab3@26503>    TST.w regnum
000341F0 <AmiBlitz3.ab3@26504>    BNE 'nofp0
000341F6 <AmiBlitz3.ab3@26505>    MOVE.l destpointer ,a4
000341FE <AmiBlitz3.ab3@26506>    CMP.l #$f2304400,-6(a4)
00034202 <AmiBlitz3.ab3@26507>    BNE 'do5
00034208 <AmiBlitz3.ab3@26508>    CMP.w #$1990,-2(a4)
0003420C <AmiBlitz3.ab3@26509>    BNE 'do5
00034210 <AmiBlitz3.ab3@26510>    BTST #15,d2                                             ;types ?
00034214 <AmiBlitz3.ab3@26511>    BNE 'do5
0003421A <AmiBlitz3.ab3@26512>   MOVE.l #$2b701990,d1                                     ;var
00034220 <AmiBlitz3.ab3@26513>   TST.w varmode
00034224 <AmiBlitz3.ab3@26514>   BEQ 'glob1
00034228 <AmiBlitz3.ab3@26515>   BCLR #25,d1
0003422C <AmiBlitz3.ab3@26518>   MOVE.l d1,-6(a4)
00034230 <AmiBlitz3.ab3@26519>   MOVE.w d3,-2(a4)
00034236 <AmiBlitz3.ab3@26520>   CLR.w fp0var
0003423E <AmiBlitz3.ab3@26521>   MOVE.w #$ffff,fp0mode
00034240 <AmiBlitz3.ab3@26522>  RTS
00034248 <AmiBlitz3.ab3@26525>    CMP.l #$f22d4400,-6(a4)                                 ;fmove.s (a5),fp0
0003424C <AmiBlitz3.ab3@26526>    BNE 'do3
00034256 <AmiBlitz3.ab3@26527>    CMP.l #newtype_double,currtype
0003425A <AmiBlitz3.ab3@26528>    BEQ 'do4
0003425E <AmiBlitz3.ab3@26531>   MOVE.w #$2b6d,d1
00034264 <AmiBlitz3.ab3@26532>    TST.w varmode
00034268 <AmiBlitz3.ab3@26533>    BEQ 'g2
0003426C <AmiBlitz3.ab3@26534>     BCLR #9,d1
00034270 <AmiBlitz3.ab3@26537>     CMP.w #$2b6d,d1
00034274 <AmiBlitz3.ab3@26538>     BNE 'd1a
00034278 <AmiBlitz3.ab3@26539>     CMP.w -2(a4),d3
0003427C <AmiBlitz3.ab3@26540>     BNE 'd1a
00034282 <AmiBlitz3.ab3@26541>     SUBQ.l #6,destpointer
00034286 <AmiBlitz3.ab3@26542>  BRA 'd12
0003428A <AmiBlitz3.ab3@26545>     MOVE.w d1,-6(a4)                                       ;fmove.s to move.l mem,mem
00034290 <AmiBlitz3.ab3@26546>     MOVE.w -2(a4),-4(a4)
00034294 <AmiBlitz3.ab3@26547>     MOVE.w d3,-2(a4)
0003429A <AmiBlitz3.ab3@26550>   CLR.w fp0var
000342A2 <AmiBlitz3.ab3@26551>     MOVE.w #$ffff,fp0mode
000342A4 <AmiBlitz3.ab3@26552>  RTS
000342AC <AmiBlitz3.ab3@26555>   CMP.l #$f22c4400,-6(a4)                                  ;fmove.s (a4)
000342B0 <AmiBlitz3.ab3@26556>    BNE 'do4
000342B4 <AmiBlitz3.ab3@26557>    MOVE.w #$2b6c,d1
000342BA <AmiBlitz3.ab3@26558>       TST.w varmode
000342BE <AmiBlitz3.ab3@26559>    BEQ 'g3a
000342C2 <AmiBlitz3.ab3@26560>    BCLR #9,d1
000342C6 <AmiBlitz3.ab3@26563>   MOVE.w d1,-6(a4)
000342CC <AmiBlitz3.ab3@26564>     MOVE.w -2(a4),-4(a4)
000342D0 <AmiBlitz3.ab3@26565>     MOVE.w d3,-2(a4)
000342D6 <AmiBlitz3.ab3@26566>     CLR.w fp0var
000342DE <AmiBlitz3.ab3@26567>     MOVE.w #$ffff,fp0mode
000342E0 <AmiBlitz3.ab3@26568>  RTS
000342E6 <AmiBlitz3.ab3@26571>   MOVE.w d3,fp0var
000342F0 <AmiBlitz3.ab3@26572>    MOVE.w varmode,fp0mode
000342F2 <AmiBlitz3.ab3@26573>    ADDQ.l #6,a4
000342F8 <AmiBlitz3.ab3@26574>    MOVE.l a4,fp0addr
00034302 <AmiBlitz3.ab3@26575>    MOVE.l firstiff,fp0iff
00034306 <AmiBlitz3.ab3@26578>   MOVEM.l d0/d4,-(a7)
00034308 <AmiBlitz3.ab3@26579>    MOVEQ #0,d0
0003430E <AmiBlitz3.ab3@26580>     MOVE.w regnum,d0
00034310 <AmiBlitz3.ab3@26581>    ASL.w #7,d0                                             ;fpu store var
00034314 <AmiBlitz3.ab3@26582>   BTST #15,d2
00034318 <AmiBlitz3.ab3@26583>    BEQ 'var
0003431A <AmiBlitz3.ab3@26584>    MOVE.w d1,d4
0003431E <AmiBlitz3.ab3@26585>    CMP.w #$24c0,d4
00034322 <AmiBlitz3.ab3@26586>    BNE 'nopl
00034328 <AmiBlitz3.ab3@26587>    MOVE.l #$f21a6400,d1
0003432A <AmiBlitz3.ab3@26588>    MOVEQ #0,d3
0003432E <AmiBlitz3.ab3@26589>  BRA 'glob
00034334 <AmiBlitz3.ab3@26593>   MOVE.l #$f2126400,d1
00034336 <AmiBlitz3.ab3@26594>    TST.w d3                                                ;offset =0
0003433A <AmiBlitz3.ab3@26595>    BNE 'offset
00034340 <AmiBlitz3.ab3@26596>    MOVE.l #$f2126400,d1
00034342 <AmiBlitz3.ab3@26604>    MOVEQ #0,d3
00034346 <AmiBlitz3.ab3@26605>  BRA 'glob
0003434C <AmiBlitz3.ab3@26608>   MOVE.l #$f22d6400,d1                                     ;var
00034352 <AmiBlitz3.ab3@26609>   TST.w varmode
00034356 <AmiBlitz3.ab3@26610>   BEQ 'glob
0003435A <AmiBlitz3.ab3@26611>   BCLR #16,d1
0003435C <AmiBlitz3.ab3@26612>  'glob OR.l d0,d1
00034366 <AmiBlitz3.ab3@26615>   CMP.l #newtype_double,currtype
0003436A <AmiBlitz3.ab3@26616>   BNE 'dbl1
00034370 <AmiBlitz3.ab3@26617>   OR.l #$00001000,d1
00034376 <AmiBlitz3.ab3@26620>   JSR writelong
0003437C <AmiBlitz3.ab3@26621>   CLR.l currtype
00034380 <AmiBlitz3.ab3@26622>   MOVEM.l (a7)+,d0/d4
00034382 <AmiBlitz3.ab3@26623>   MOVE.l d3,d1
00034386 <AmiBlitz3.ab3@26624>   BEQ 'nooffs
0003438C <AmiBlitz3.ab3@26625>  JMP writeword
0003438E <AmiBlitz3.ab3@26628>  RTS
00034394 <AmiBlitz3.ab3@26642>     TST.b fast                                             ;write lea->xx(a2)
00034398 <AmiBlitz3.ab3@26643>    BEQ 'la10
0003439E <AmiBlitz3.ab3@26647>    TST.b quickadd
000343A4 <AmiBlitz3.ab3@26649>      CLR.b quickadd
000343A8 <AmiBlitz3.ab3@26650>    CMP.w #$2480,d1
000343AC <AmiBlitz3.ab3@26651>    BNE 'la10
000343B2 <AmiBlitz3.ab3@26652>    TST.b optiarray
000343B6 <AmiBlitz3.ab3@26653>    BNE 'la10
000343BC <AmiBlitz3.ab3@26654>    MOVE.l destpointer,a4
000343C2 <AmiBlitz3.ab3@26655>    CMP.w #$45ea,-4(a4)
000343C6 <AmiBlitz3.ab3@26656>    BNE 'la10
000343CE <AmiBlitz3.ab3@26657>    CMP.w #8,pushclen
000343D2 <AmiBlitz3.ab3@26658>    BEQ 'la100
000343DA <AmiBlitz3.ab3@26659>    CMP.w #6,pushclen
000343DE <AmiBlitz3.ab3@26660>    BNE 'la10
000343E2 <AmiBlitz3.ab3@26661>    CMP.b #3,d2
000343E6 <AmiBlitz3.ab3@26662>    BCS 'la110
000343EC <AmiBlitz3.ab3@26664>    MOVE.w #$2540,-2(a4)
000343F2 <AmiBlitz3.ab3@26665>    MOVE.w arrayoffset,d1
000343F8 <AmiBlitz3.ab3@26666>  JMP writeword
000343FE <AmiBlitz3.ab3@26669>    CLR.b quickadd
00034400 <AmiBlitz3.ab3@26670>  RTS
00034404 <AmiBlitz3.ab3@26673>    CMP.b #2,d2
00034408 <AmiBlitz3.ab3@26674>    BNE 'la120
0003440E <AmiBlitz3.ab3@26675>     MOVE.w #$3540,-2(a4)
00034414 <AmiBlitz3.ab3@26676>    MOVE.w arrayoffset,d1
0003441A <AmiBlitz3.ab3@26677>  JMP writeword
0003441E <AmiBlitz3.ab3@26680>   CMP.b #1,d2
00034422 <AmiBlitz3.ab3@26681>    BNE.s 'la10
00034428 <AmiBlitz3.ab3@26682>     MOVE.w #$1540,-2(a4)
0003442E <AmiBlitz3.ab3@26683>    MOVE.w arrayoffset,d1
00034434 <AmiBlitz3.ab3@26684>  JMP writeword
00034438 <AmiBlitz3.ab3@26687>    CMP.b #3,d2
0003443C <AmiBlitz3.ab3@26688>    BCS 'la11
00034442 <AmiBlitz3.ab3@26689>    MOVE.w #$2540,-4(a4)
00034444 <AmiBlitz3.ab3@26690>  RTS
00034448 <AmiBlitz3.ab3@26693>    CMP.b #2,d2
0003444C <AmiBlitz3.ab3@26694>    BNE 'la12
00034452 <AmiBlitz3.ab3@26695>     MOVE.w #$3540,-4(a4)
00034454 <AmiBlitz3.ab3@26696>  RTS
00034458 <AmiBlitz3.ab3@26699>    CMP.b #1,d2
0003445C <AmiBlitz3.ab3@26700>    BNE.s 'la10
00034462 <AmiBlitz3.ab3@26701>     MOVE.w #$1540,-4(a4)
00034464 <AmiBlitz3.ab3@26702>  RTS
0003446A <AmiBlitz3.ab3@26705>   CLR.b optiarray
0003446E <AmiBlitz3.ab3@26707>    CMP.b #$1,D2
00034472 <AmiBlitz3.ab3@26708>    BEQ.w 'byte
00034476 <AmiBlitz3.ab3@26709>    BSR.w varalign
0003447A <AmiBlitz3.ab3@26710>    CMP.b #$3,D2
0003447E <AmiBlitz3.ab3@26711>    BCC.w 'writevarlong
00034484 <AmiBlitz3.ab3@26713>    TST.b fast                                              ;optiimmi
00034488 <AmiBlitz3.ab3@26714>    BEQ 'l10bc
0003448E <AmiBlitz3.ab3@26719>    MOVE.l destpointer,a0
00034494 <AmiBlitz3.ab3@26720>    SUB.l imm_addr,a0
0003449A <AmiBlitz3.ab3@26721>    CMP.l #4,a0
0003449E <AmiBlitz3.ab3@26722>    BNE 'l10c
000344A4 <AmiBlitz3.ab3@26723>    CLR.l imm_addr
000344AA <AmiBlitz3.ab3@26724>    MOVE.l destpointer,a4
000344AE <AmiBlitz3.ab3@26725>    OR.w #$107c,d1
000344B2 <AmiBlitz3.ab3@26726>    MOVE.w d1,-4(a4)
000344B4 <AmiBlitz3.ab3@26727>     MOVE.w D3,D1
000344BA <AmiBlitz3.ab3@26728>  JMP writeword
000344C0 <AmiBlitz3.ab3@26731>   MOVE.l destpointer,a0
000344C6 <AmiBlitz3.ab3@26732>   SUB.l load_var_addr,a0
000344CC <AmiBlitz3.ab3@26733>   CMP.l #4,a0
000344D0 <AmiBlitz3.ab3@26734>   BNE 'l10bc
000344D6 <AmiBlitz3.ab3@26735>   CMP.w #$302d,-4(a4)                                      ;check 68k opcode
000344DA <AmiBlitz3.ab3@26736>   BNE 'l10bc
000344E0 <AmiBlitz3.ab3@26738>   CLR.l load_var_addr
000344E6 <AmiBlitz3.ab3@26739>   MOVE.l destpointer,a4
000344EA <AmiBlitz3.ab3@26740>   OR.w #$102d,d1
000344EE <AmiBlitz3.ab3@26741>   MOVE.w d1,-4(a4)
000344F0 <AmiBlitz3.ab3@26742>   MOVE.w d3,d1
000344F6 <AmiBlitz3.ab3@26743>  JMP writeword
000344FA <AmiBlitz3.ab3@26747>   ORI.w #$1000,D1                                          ;word
000344FE <AmiBlitz3.ab3@26748>  BRA.w 'writestorevar
00034504 <AmiBlitz3.ab3@26753>    TST.b fast                                              ;optiimmi
00034508 <AmiBlitz3.ab3@26754>    BEQ 'l10bb
0003450E <AmiBlitz3.ab3@26759>    MOVE.l destpointer,a0
00034514 <AmiBlitz3.ab3@26760>    SUB.l imm_addr,a0
0003451A <AmiBlitz3.ab3@26761>    CMP.l #4,a0
0003451E <AmiBlitz3.ab3@26762>    BNE 'l10d
00034524 <AmiBlitz3.ab3@26763>    CLR.l imm_addr
0003452A <AmiBlitz3.ab3@26764>    MOVE.l destpointer,a4
0003452E <AmiBlitz3.ab3@26765>    OR.w #$7c,d1
00034532 <AmiBlitz3.ab3@26766>    EORI #$3000,d1
00034536 <AmiBlitz3.ab3@26767>    MOVE.w d1,-4(a4)
00034538 <AmiBlitz3.ab3@26768>       MOVE.w D3,D1
0003453E <AmiBlitz3.ab3@26769>  JMP writeword
00034544 <AmiBlitz3.ab3@26772>   MOVE.l destpointer,a0
0003454A <AmiBlitz3.ab3@26773>   SUB.l load_var_addr,a0
00034550 <AmiBlitz3.ab3@26774>   CMP.l #4,a0
00034554 <AmiBlitz3.ab3@26775>   BNE 'l10bb
0003455A <AmiBlitz3.ab3@26776>   CLR.l load_var_addr
00034560 <AmiBlitz3.ab3@26777>   MOVE.l destpointer,a4
00034566 <AmiBlitz3.ab3@26778>    CMP.w #$1b6d,-4(a4)
0003456A <AmiBlitz3.ab3@26779>    BNE 'l10bb
0003456E <AmiBlitz3.ab3@26780>    OR.w #$2d,d1
00034572 <AmiBlitz3.ab3@26781>    EORI #$3000,d1
00034576 <AmiBlitz3.ab3@26782>    MOVE.w d1,-4(a4)
00034578 <AmiBlitz3.ab3@26783>   MOVE.w d3,d1
0003457E <AmiBlitz3.ab3@26784>  JMP writeword
00034584 <AmiBlitz3.ab3@26788>   ADDQ.w #1,pcodd                                          ;byte
00034588 <AmiBlitz3.ab3@26789>   EORI.w #$3000,D1
0003458E <AmiBlitz3.ab3@26792>   JSR writeword
00034592 <AmiBlitz3.ab3@26793>   BTST #$7,D1
00034596 <AmiBlitz3.ab3@26794>    BNE 'done
00034598 <AmiBlitz3.ab3@26795>   MOVE.w D3,D1
0003459E <AmiBlitz3.ab3@26796>  JMP writeword
000345A4 <AmiBlitz3.ab3@26799>    TST.b fast                                              ;optiimmi
000345A8 <AmiBlitz3.ab3@26800>    BEQ 'l10ba
000345AE <AmiBlitz3.ab3@26804>    MOVE.l destpointer,a0
000345B4 <AmiBlitz3.ab3@26805>    SUB.l imm_addr,a0
000345BA <AmiBlitz3.ab3@26806>    CMP.l #6,a0
000345BE <AmiBlitz3.ab3@26807>    BNE 'l10e
000345C4 <AmiBlitz3.ab3@26808>    CLR.l imm_addr
000345CA <AmiBlitz3.ab3@26809>    MOVE.l destpointer,a4
000345CE <AmiBlitz3.ab3@26810>    OR.w #$7c,d1
000345D2 <AmiBlitz3.ab3@26811>    MOVE.w d1,-6(a4)
000345D4 <AmiBlitz3.ab3@26812>     MOVE.w D3,D1
000345DA <AmiBlitz3.ab3@26813>  JMP writeword
000345E0 <AmiBlitz3.ab3@26816>   MOVE.l destpointer,a0
000345E6 <AmiBlitz3.ab3@26817>   SUB.l load_var_addr,a0
000345EC <AmiBlitz3.ab3@26818>   CMP.l #4,a0
000345F0 <AmiBlitz3.ab3@26819>   BNE 'l10ba
000345F6 <AmiBlitz3.ab3@26820>   CLR.l load_var_addr
000345FC <AmiBlitz3.ab3@26821>   MOVE.l destpointer,a4
00034602 <AmiBlitz3.ab3@26822>   CMP.w #$245f,-2(a4)
00034606 <AmiBlitz3.ab3@26823>   BEQ 'l10ba
0003460A <AmiBlitz3.ab3@26824>   OR.w #$28,d1
0003460E <AmiBlitz3.ab3@26825>   OR.w d1,-4(a4)
00034614 <AmiBlitz3.ab3@26826>   CMP.w #$2b6d,-4(a4)
00034618 <AmiBlitz3.ab3@26827>   BNE 'd1aa
0003461C <AmiBlitz3.ab3@26828>   CMP.w -2(a4),d3
00034620 <AmiBlitz3.ab3@26829>   BNE 'd1aa
00034626 <AmiBlitz3.ab3@26830>   SUBQ.l #4,destpointer
00034628 <AmiBlitz3.ab3@26831>  RTS
0003462A <AmiBlitz3.ab3@26834>   MOVE.w d3,d1
00034630 <AmiBlitz3.ab3@26835>  JMP writeword
00034636 <AmiBlitz3.ab3@26839>   JSR writeword
0003463A <AmiBlitz3.ab3@26840>   BTST #$7,D1
0003463E <AmiBlitz3.ab3@26841>    BNE.b 'done
00034640 <AmiBlitz3.ab3@26842>   MOVE.w D3,D1
00034646 <AmiBlitz3.ab3@26843>  JMP writeword
00034648 <AmiBlitz3.ab3@26846> RTS
0003464A <AmiBlitz3.ab3@26850>   MOVE.w D1,-(A7)
0003464E <AmiBlitz3.ab3@26851>   MOVE.w pcodd(PC),D1
00034650 <AmiBlitz3.ab3@26852>   LSR.w #1,D1
00034654 <AmiBlitz3.ab3@26853>    BCC.b 'done
0003465A <AmiBlitz3.ab3@26854>   CLR.w pcodd
00034660 <AmiBlitz3.ab3@26855>   MOVE.w add1a2,D1
00034666 <AmiBlitz3.ab3@26856>    JSR writeword
00034668 <AmiBlitz3.ab3@26859>   MOVE.w (A7)+,D1
0003466A <AmiBlitz3.ab3@26860> RTS
0003466C <AmiBlitz3.ab3@26864> add1a2:     Dc.b $52,$4A                                   ;ADDQ.W  #1,A2
0003466E <AmiBlitz3.ab3@26867> pcodd:     Ds.w 1                                          ;add 1 to this for bytes
00034670 <AmiBlitz3.ab3@26868> listadd:   Ds.w 1                                          ;set to 8 if it's a list
00034672 <AmiBlitz3.ab3@26869> listsize:  Ds.w 1
00034678 <AmiBlitz3.ab3@26875>   ADDQ.w #1,regnum               ;get things into d1
00034680 <AmiBlitz3.ab3@26877>   MOVE.b #1,nowdeclare
00034686 <AmiBlitz3.ab3@26878>   CLR.b dimkeep
0003468E <AmiBlitz3.ab3@26879>    CMP.l #"KEEP",-1(a5)
00034692 <AmiBlitz3.ab3@26880>   BNE 'nokeep
00034698 <AmiBlitz3.ab3@26881>   CMP.b #" ",3(a5)
0003469C <AmiBlitz3.ab3@26882>   BNE 'nokeep
0003469E <AmiBlitz3.ab3@26883>   ADDQ.l #3,a5
000346A2 <AmiBlitz3.ab3@26886>     CMP.b #" ",(a5)
000346A6 <AmiBlitz3.ab3@26887>     BNE '1
000346A8 <AmiBlitz3.ab3@26888>    ADDQ #1,a5
000346AC <AmiBlitz3.ab3@26889>  BRA '2
000346B2 <AmiBlitz3.ab3@26892>   MOVE.l a5,lastsourcepos
000346BA <AmiBlitz3.ab3@26893>   MOVE.b #1,dimkeep
000346BE <AmiBlitz3.ab3@26902>   MOVE.w #$FF9A,D1           ; is #65434,
000346C4 <AmiBlitz3.ab3@26903>   JSR uselib                 ;arrays lib!
000346CA <AmiBlitz3.ab3@26906>   CLR.w listadd
000346CE <AmiBlitz3.ab3@26907>   CMP.w #-$7F4D,D0           ; was #$8000+tnum,d0
000346D2 <AmiBlitz3.ab3@26908>    BNE.w 'notlist
000346DA <AmiBlitz3.ab3@26909>   MOVE.w #$0008,listadd      ;it's a list
000346DE <AmiBlitz3.ab3@26910>   MOVE.w #$FFFA,D1           ; is #65530
000346E4 <AmiBlitz3.ab3@26911>    JSR uselib                ;use memlib
000346EA <AmiBlitz3.ab3@26912>    JSR get1bytemain
000346F0 <AmiBlitz3.ab3@26915>   CLR.w nonew
000346F6 <AmiBlitz3.ab3@26916>    JSR getparameter
000346FC <AmiBlitz3.ab3@26918>   JSR checkdoubledeclare
00034704 <AmiBlitz3.ab3@26920>   BTST #$1,flagmask+1
00034708 <AmiBlitz3.ab3@26921>    BEQ.w JUMP_syntaxerr
0003470E <AmiBlitz3.ab3@26922>    JSR fetchvars
00034714 <AmiBlitz3.ab3@26923>   MOVE.w notshared,D1      ; added,
00034718 <AmiBlitz3.ab3@26924>    BNE.w 'added
00034720 <AmiBlitz3.ab3@26928>   MOVE.w $8(A3),temp1
00034726 <AmiBlitz3.ab3@26929>   MOVE.w proceduremode,D2
0003472A <AmiBlitz3.ab3@26930>    BNE.w 'reloc
00034730 <AmiBlitz3.ab3@26932>   MOVE.w globalvarpointer,-(A7)
00034738 <AmiBlitz3.ab3@26933>   MOVE.w $4(A3),globalvarpointer
0003473E <AmiBlitz3.ab3@26934>   ADDQ.w #4,globalvarpointer
00034742 <AmiBlitz3.ab3@26935>    BSR.w write_dim_code
00034748 <AmiBlitz3.ab3@26936>   MOVE.w (A7)+,globalvarpointer
0003474C <AmiBlitz3.ab3@26937>  BRA.w 'next
00034752 <AmiBlitz3.ab3@26952>   MOVE.w globalvarpointer,-(A7)
00034758 <AmiBlitz3.ab3@26953>             MOVE.w proceduremode,-(a7)
0003475E <AmiBlitz3.ab3@26954>             CLR.w proceduremode
00034766 <AmiBlitz3.ab3@26955>   MOVE.w $4(A3),globalvarpointer
0003476C <AmiBlitz3.ab3@26956>   ADDQ.w #4,globalvarpointer
00034770 <AmiBlitz3.ab3@26957>    BSR.w write_dim_code
00034776 <AmiBlitz3.ab3@26958>    MOVE.w (a7)+,proceduremode
0003477C <AmiBlitz3.ab3@26959>   MOVE.w (A7)+,globalvarpointer
00034780 <AmiBlitz3.ab3@26961>  BRA.w 'next
00034788 <AmiBlitz3.ab3@26966>   MOVE.w #$FFFF,temp1                ; was -1  ;no care on # dims
0003478C <AmiBlitz3.ab3@26967>   MOVE.w listadd(PC),D1
00034790 <AmiBlitz3.ab3@26968>    BEQ.w 'isok
00034798 <AmiBlitz3.ab3@26969>   MOVE.w #$4000,temp1                ;yes, we do care - must be 1
0003479E <AmiBlitz3.ab3@26971>   BSET #$0,$6(A3)                    ;set to list type of array
000347A4 <AmiBlitz3.ab3@26975>         TST.w proceduremode
000347A8 <AmiBlitz3.ab3@26976>        BNE 'l1
000347AE <AmiBlitz3.ab3@26977>        MOVE.w locvaroff,-(a7)
000347B2 <AmiBlitz3.ab3@26981>   BSR.w write_dim_code
000347B8 <AmiBlitz3.ab3@26983>         TST.w proceduremode
000347BC <AmiBlitz3.ab3@26984>         BNE 'next
000347C2 <AmiBlitz3.ab3@26985>        MOVE.w (A7)+,locvaroff
000347C8 <AmiBlitz3.ab3@26989>   JSR get1bytemain
000347CC <AmiBlitz3.ab3@26990>   CMP.w #$2C,D0                ; ","
000347D0 <AmiBlitz3.ab3@26991>    BNE.w 'done
000347D6 <AmiBlitz3.ab3@26992>    JSR get1bytemain
000347DA <AmiBlitz3.ab3@26993>  BRA.w dodim2
000347DC <AmiBlitz3.ab3@26996> RTS
000347E2 <AmiBlitz3.ab3@26999> JUMP_syntaxerr JMP syntaxerr
000347E8 <AmiBlitz3.ab3@27000> JUMP_redimerr JMP redimerr
000347F0 <AmiBlitz3.ab3@27004>   MOVE.w #$FFFF,nonew                                      ;#-1,nonew org source
000347F6 <AmiBlitz3.ab3@27005>   MOVE.w beginarr,D1
000347FC <AmiBlitz3.ab3@27006>    JSR writeword
000347FE <AmiBlitz3.ab3@27007>   MOVEQ.l #$00,D1
00034804 <AmiBlitz3.ab3@27008>    JSR writeword
00034806 <AmiBlitz3.ab3@27009>   MOVEQ.l #$04,D1
0003480E <AmiBlitz3.ab3@27010>   BTST #$0,flagmask+1
00034812 <AmiBlitz3.ab3@27011>    BNE.w 'pointer
00034816 <AmiBlitz3.ab3@27012>   MOVE.w $8(A2),D1
0003481A <AmiBlitz3.ab3@27015>   ADD.w listadd(PC),D1                                     ;size of one element.
00034820 <AmiBlitz3.ab3@27016>   MOVE.w D1,listsize
00034826 <AmiBlitz3.ab3@27017>    JSR writeword
0003482C <AmiBlitz3.ab3@27018>   CLR.w temp2                                              ;# dim's got
0003482E <AmiBlitz3.ab3@27019>   MOVE.l A3,-(A7)
00034834 <AmiBlitz3.ab3@27022>   ADDQ.w #1,temp2
00034836 <AmiBlitz3.ab3@27023>   MOVEQ.l #$03,D2                                          ;get word
0003483C <AmiBlitz3.ab3@27024>   MOVE.w notshared,-(a7)
00034842 <AmiBlitz3.ab3@27025>    JSR eval
00034848 <AmiBlitz3.ab3@27026>   MOVE.w (a7)+,notshared
0003484E <AmiBlitz3.ab3@27027>   TST.b debugmode
00034852 <AmiBlitz3.ab3@27028>    BEQ.w 'norerr0
00034856 <AmiBlitz3.ab3@27029>   MOVE.w #$C30F,D1
0003485A <AmiBlitz3.ab3@27035>       MOVE.w #$5281,d1
00034860 <AmiBlitz3.ab3@27036>       JSR writeword
00034866 <AmiBlitz3.ab3@27037>       MOVE.l #$4c010800,d1                                 ;dim >65536 fix
0003486C <AmiBlitz3.ab3@27038>       JSR writelong
00034872 <AmiBlitz3.ab3@27039>   MOVE.w proceduremode,D2
00034876 <AmiBlitz3.ab3@27040>    BEQ.w 'global
0003487C <AmiBlitz3.ab3@27041>   SUBQ.w #4,locvaroff
00034886 <AmiBlitz3.ab3@27042>   MOVE.w locvaroff,putarr+2
0003488A <AmiBlitz3.ab3@27043>  BRA.w 'doit
00034894 <AmiBlitz3.ab3@27046>   MOVE.w globalvarpointer,putarr+2
0003489A <AmiBlitz3.ab3@27047>   ADDQ.w #4,globalvarpointer
000348A0 <AmiBlitz3.ab3@27050>   TST.b dimkeep
000348A4 <AmiBlitz3.ab3@27051>            BEQ 'doit_l1
000348A6 <AmiBlitz3.ab3@27052>       MOVEQ #0,d1
000348AC <AmiBlitz3.ab3@27053>       MOVE.w putarr+2,d1
000348B2 <AmiBlitz3.ab3@27054>       OR.l  #$222d0000,d1
000348B8 <AmiBlitz3.ab3@27055>       MOVE.w proceduremode,D2
000348BC <AmiBlitz3.ab3@27056>       BEQ 'doit_l2
000348C2 <AmiBlitz3.ab3@27057>       TST.w notshared
000348C6 <AmiBlitz3.ab3@27058>       BEQ 'doit_l2
000348CC <AmiBlitz3.ab3@27059>       SUB.l #$00010000,d1
000348D2 <AmiBlitz3.ab3@27062>   JSR writelong
000348D8 <AmiBlitz3.ab3@27065>   MOVE.l putarr,D1
000348DE <AmiBlitz3.ab3@27066>       TST.w notshared
000348E2 <AmiBlitz3.ab3@27067>       BNE 'doit_l1a
000348E8 <AmiBlitz3.ab3@27068>       JSR writelong
000348EC <AmiBlitz3.ab3@27069>  BRA 'doit_l4
000348F2 <AmiBlitz3.ab3@27072>   JSR pokela5d
000348F6 <AmiBlitz3.ab3@27075>   CMP.w #$2C,D0
000348FA <AmiBlitz3.ab3@27076>    BEQ.w 'loop
000348FE <AmiBlitz3.ab3@27077>   CMP.w #$29,D0
00034902 <AmiBlitz3.ab3@27078>    BNE.w JUMP_syntaxerr
00034904 <AmiBlitz3.ab3@27079>   MOVEA.l (A7)+,A3
0003490A <AmiBlitz3.ab3@27080>   MOVE.w temp1,D1
0003490E <AmiBlitz3.ab3@27081>    BMI.w 'nocare
00034912 <AmiBlitz3.ab3@27085>   BTST #$E,D1
00034916 <AmiBlitz3.ab3@27086>    BEQ.w 'notl
0003491E <AmiBlitz3.ab3@27087>   CMPI.w #$1,temp2
00034922 <AmiBlitz3.ab3@27088>    BNE.w JUMP_redimerr
00034926 <AmiBlitz3.ab3@27089>  BRA.w 'nocare
0003492C <AmiBlitz3.ab3@27092>   CMP.w temp2,D1
00034930 <AmiBlitz3.ab3@27093>    BNE.w JUMP_redimerr                                     ;range too long
00034936 <AmiBlitz3.ab3@27096>   LEA globalvarpointer,A0
0003493C <AmiBlitz3.ab3@27097>   MOVE.w proceduremode,D1
00034940 <AmiBlitz3.ab3@27098>   BEQ.w 'gskip
00034946 <AmiBlitz3.ab3@27099>   LEA locvaroff,A0
0003494C <AmiBlitz3.ab3@27102>   MOVE.W  extraword,(A0)
00034950 <AmiBlitz3.ab3@27103>   BRA.W   'care
00034958 <AmiBlitz3.ab3@27106>   MOVE.w temp2,$8(A3)                                      ;set # dim's
0003495E <AmiBlitz3.ab3@27109>   LEA doarr,A0
00034964 <AmiBlitz3.ab3@27110>   MOVE.w $4(A3),$2(A0)
0003496C <AmiBlitz3.ab3@27111>   MOVE.w putarr+2,$6(A0)
0003496E <AmiBlitz3.ab3@27112>   MOVE.l (A0)+,D1
00034974 <AmiBlitz3.ab3@27113>    JSR writelong
00034976 <AmiBlitz3.ab3@27114>   MOVE.l (A0),D1
0003497C <AmiBlitz3.ab3@27115>    JSR writelong
00034982 <AmiBlitz3.ab3@27116>    TST.b dimkeep
00034986 <AmiBlitz3.ab3@27117>   BNE 'care_l3
0003498A <AmiBlitz3.ab3@27120>   MOVE.w #$C400,D1
0003498E <AmiBlitz3.ab3@27121>  BRA 'care_l2
00034992 <AmiBlitz3.ab3@27124>   MOVE.w #$C405,d1
00034998 <AmiBlitz3.ab3@27127>   MOVE.w proceduremode,D2
0003499C <AmiBlitz3.ab3@27128>    BEQ.w 'isg
000349A2 <AmiBlitz3.ab3@27129>    TST.w notshared
000349A6 <AmiBlitz3.ab3@27130>    BEQ 'isg
000349A8 <AmiBlitz3.ab3@27131>   ADDQ.w #1,D1
000349AC <AmiBlitz3.ab3@27134>   MOVE.w listadd(PC),D2
000349B0 <AmiBlitz3.ab3@27135>    BEQ.w 'isrg
000349B2 <AmiBlitz3.ab3@27136>   MOVE.w D1,-(A7)
000349B6 <AmiBlitz3.ab3@27137>   MOVE.w setles(PC),D1
000349BC <AmiBlitz3.ab3@27138>    JSR writeword
000349C0 <AmiBlitz3.ab3@27139>   MOVE.w listsize(PC),D1
000349C6 <AmiBlitz3.ab3@27140>    JSR writeword
000349C8 <AmiBlitz3.ab3@27141>   MOVE.w (A7)+,D1
000349CA <AmiBlitz3.ab3@27142>   ADDQ.w #3,D1
000349CE <AmiBlitz3.ab3@27145> BRA.w Atokejsr
000349D2 <AmiBlitz3.ab3@27148> setles:   Dc.b $38,$3C,$00,$00                             ;MOVE.W  #$0000,D4
000349D8 <AmiBlitz3.ab3@27157>     MOVE.l #$f23c4400,d1
000349DE <AmiBlitz3.ab3@27159>   MOVE.w regnum,d0
000349E0 <AmiBlitz3.ab3@27160>   ASL.w #7,d0
000349E2 <AmiBlitz3.ab3@27161>   OR.w d0,d1
000349E8 <AmiBlitz3.ab3@27162>   JSR writelong
000349EE <AmiBlitz3.ab3@27168>     MOVE.l #$40490fd9,d1
000349F4 <AmiBlitz3.ab3@27170>   JSR writelong
000349FA <AmiBlitz3.ab3@27171> JMP get1bytemain
000349FE <AmiBlitz3.ab3@27178> vbr:                Ds.l 1
00034A00 <AmiBlitz3.ab3@27179> cfetchmode:         Ds.w 1                               ;1=fetching a constant
00034A06 <AmiBlitz3.ab3@27181> constlibs           Dc.w $FDA7,$FCDF,$FD43               ;64935,64735,64835  org source
00034A0A <AmiBlitz3.ab3@27185> constpcat:          Ds.l 1
00034A0E <AmiBlitz3.ab3@27186> constlibat:         Ds.l 1
00034A12 <AmiBlitz3.ab3@27187> constmaxpc:         Dc.l $400
00034A16 <AmiBlitz3.ab3@27189> stacksize:          Dc.l #DEFAULT_STACKSIZE              ;stackfuck org source
00034A1A <AmiBlitz3.ab3@27190> currentlabeladdr:   Dc.l labelbase                       ;lastrescon org source
00034A1E <AmiBlitz3.ab3@27191> currentmacroaddr:   Dc.l macrobase                       ;lastresmac org source
00034A22 <AmiBlitz3.ab3@27192> lastrestype:        Dc.l newtype_string
00034A24 <AmiBlitz3.ab3@27193> rescnt:             Ds.w 1                               ;# resident
00034A26 <AmiBlitz3.ab3@27194> state_of_residents: Ds.w 1                               ;reschg org source ;flag for if res's have changed
00034A2A <AmiBlitz3.ab3@27195> resat:              Dc.l residents_table                 ;??looks like not used anymore??
00034A2C <AmiBlitz3.ab3@27196> linedone:           Ds.w 1
00034A42 <AmiBlitz3.ab3@27197> directbuffer:       Ds.w 11                              ;dirpcat  dc.w 0 org source
00034A46 <AmiBlitz3.ab3@27206>   Dc.l 0                                        ; bytetobyte
00034A4A <AmiBlitz3.ab3@27207>   Dc.l convert_byte_to_word                     ; bytetoword
00034A4E <AmiBlitz3.ab3@27208>   Dc.l convert_byte_to_long                     ; bytetolong
00034A52 <AmiBlitz3.ab3@27209>   Dc.l convert_byte_to_quick                    ; bytetoquick
00034A56 <AmiBlitz3.ab3@27210>   Dc.l convert_byte_to_float                    ; bytetofloat
00034A5A <AmiBlitz3.ab3@27211>   Dc.l convert_byte_to_long                     ; bytetolong
00034A5E <AmiBlitz3.ab3@27212>   Dc.l error_convert_types                      ; noconerr
00034A62 <AmiBlitz3.ab3@27215>   Dc.l convert_word_to_byte                     ; wordtobyte
00034A66 <AmiBlitz3.ab3@27216>   Dc.l 0                                        ; wordtoword
00034A6A <AmiBlitz3.ab3@27217>   Dc.l convert_word_to_long                     ; wordtolong
00034A6E <AmiBlitz3.ab3@27218>   Dc.l convert_word_to_quick                    ; wordtoquick
00034A72 <AmiBlitz3.ab3@27219>   Dc.l convert_word_to_float                    ; wordtofloat
00034A76 <AmiBlitz3.ab3@27220>   Dc.l convert_word_to_long                     ; wordtolong
00034A7A <AmiBlitz3.ab3@27221>   Dc.l error_convert_types                      ; noconerr
00034A7E <AmiBlitz3.ab3@27224>   Dc.l convert_long_to_byte                     ; longtobyte
00034A82 <AmiBlitz3.ab3@27225>   Dc.l convert_long_to_word                     ; longtoword
00034A86 <AmiBlitz3.ab3@27226>   Dc.l 0                                        ; longtolong
00034A8A <AmiBlitz3.ab3@27227>   Dc.l convert_long_to_quick                    ; longtoquick
00034A8E <AmiBlitz3.ab3@27228>   Dc.l convert_long_to_float                    ; longtofloat
00034A92 <AmiBlitz3.ab3@27229>   Dc.l 0                                        ; longtolong
00034A96 <AmiBlitz3.ab3@27230>   Dc.l error_convert_types                      ; noconerr
00034A9A <AmiBlitz3.ab3@27233>   Dc.l convert_quick_to_byte                    ; quicktobyte
00034A9E <AmiBlitz3.ab3@27234>   Dc.l convert_quick_to_word                    ; quicktoword
00034AA2 <AmiBlitz3.ab3@27235>   Dc.l convert_quick_to_long                    ; quicktolong
00034AA6 <AmiBlitz3.ab3@27236>   Dc.l 0                                        ; quicktoquick
00034AAA <AmiBlitz3.ab3@27237>   Dc.l convert_quick_to_float                   ; quicktofloat
00034AAE <AmiBlitz3.ab3@27238>   Dc.l convert_quick_to_long                    ; quicktolong
00034AB2 <AmiBlitz3.ab3@27239>   Dc.l error_convert_types                      ; noconerr
00034AB6 <AmiBlitz3.ab3@27242>   Dc.l convert_float_to_byte                    ; floattobyte
00034ABA <AmiBlitz3.ab3@27243>   Dc.l convert_float_to_word                    ; floattoword
00034ABE <AmiBlitz3.ab3@27244>   Dc.l convert_float_to_long                    ; floattolong
00034AC2 <AmiBlitz3.ab3@27245>   Dc.l convert_float_to_quick                   ; floattoquick
00034AC6 <AmiBlitz3.ab3@27246>   Dc.l 0                                        ; floattofloat
00034ACA <AmiBlitz3.ab3@27247>   Dc.l convert_float_to_long                    ; floattolong
00034ACE <AmiBlitz3.ab3@27248>   Dc.l error_convert_types                      ; noconerr
00034AD2 <AmiBlitz3.ab3@27251>   Dc.l convert_long_to_byte                     ; longtobyte
00034AD6 <AmiBlitz3.ab3@27252>   Dc.l convert_long_to_word                     ; longtoword
00034ADA <AmiBlitz3.ab3@27253>   Dc.l 0                                        ; longtolong
00034ADE <AmiBlitz3.ab3@27254>   Dc.l convert_long_to_quick                    ; longtoquick
00034AE2 <AmiBlitz3.ab3@27255>   Dc.l convert_long_to_float                    ; longtofloat
00034AE6 <AmiBlitz3.ab3@27256>   Dc.l 0                                        ; longtolong
00034AEA <AmiBlitz3.ab3@27257>   Dc.l error_convert_types                      ; noconerr
00034AEE <AmiBlitz3.ab3@27260>   Dc.l error_convert_types                      ; noconerr
00034AF2 <AmiBlitz3.ab3@27261>   Dc.l error_convert_types                      ; noconerr
00034AF6 <AmiBlitz3.ab3@27262>   Dc.l string_to_long                           ; stringtolong
00034AFA <AmiBlitz3.ab3@27263>   Dc.l error_convert_types                      ; noconerr
00034AFE <AmiBlitz3.ab3@27264>   Dc.l error_convert_types                      ; noconerr
00034B02 <AmiBlitz3.ab3@27265>   Dc.l string_to_long                           ; stringtolong
00034B06 <AmiBlitz3.ab3@27266>   Ds.l 1
00034B08 <AmiBlitz3.ab3@27272>   Dc.b $00,$2B                                  ;+ ; add
00034B0C <AmiBlitz3.ab3@27273>   Dc.l do_plus_byte                             ;doplusb
00034B10 <AmiBlitz3.ab3@27274>   Dc.l do_plus_word                             ;doplusw
00034B14 <AmiBlitz3.ab3@27275>   Dc.l do_plus_long                             ;doplusl
00034B18 <AmiBlitz3.ab3@27276>   Dc.l do_plus_long                             ;doplusl
00034B1C <AmiBlitz3.ab3@27277>   Dc.l do_plus_float                            ;doplusf
00034B20 <AmiBlitz3.ab3@27278>   Ds.l 1
00034B24 <AmiBlitz3.ab3@27279>   Dc.l add_strings                              ;addstrings
00034B26 <AmiBlitz3.ab3@27280>   Dc.b $0B,$B8
00034B28 <AmiBlitz3.ab3@27282>   Dc.b $00,$2D                                  ;- ; sub
00034B2C <AmiBlitz3.ab3@27283>   Dc.l do_minus_byte                            ;dominusb
00034B30 <AmiBlitz3.ab3@27284>   Dc.l do_minus_word                            ;dominusw
00034B34 <AmiBlitz3.ab3@27285>   Dc.l do_minus_long                            ;dominusl
00034B38 <AmiBlitz3.ab3@27286>   Dc.l do_minus_long                            ;dominusl
00034B3C <AmiBlitz3.ab3@27287>   Dc.l do_minus_float                           ;dominusf
00034B44 <AmiBlitz3.ab3@27288>   Ds.l 2
00034B46 <AmiBlitz3.ab3@27289>   Dc.b $0B,$B8
00034B48 <AmiBlitz3.ab3@27291>   Dc.b $00,$2A                                  ;* ; mul
00034B4C <AmiBlitz3.ab3@27292>   Dc.l do_times_byte                            ;dotimesb
00034B50 <AmiBlitz3.ab3@27293>   Dc.l do_times_word                            ;dotimesw
00034B54 <AmiBlitz3.ab3@27294>   Dc.l do_times_long                            ;dotimesl
00034B58 <AmiBlitz3.ab3@27295>   Dc.l do_times_quick                           ;dotimesq
00034B5C <AmiBlitz3.ab3@27296>   Dc.l do_times_float                           ;dotimesf
00034B64 <AmiBlitz3.ab3@27297>   Ds.l 2
00034B66 <AmiBlitz3.ab3@27298>   Dc.b $0F,$A0
00034B68 <AmiBlitz3.ab3@27300>   Dc.b $00,$2F                                  ;/ ; div
00034B6C <AmiBlitz3.ab3@27301>   Dc.l do_Div_byte                              ;dodivb
00034B70 <AmiBlitz3.ab3@27302>   Dc.l do_Div_word                              ;dodivb
00034B74 <AmiBlitz3.ab3@27303>   Dc.l do_Div_long                              ;dodivl
00034B78 <AmiBlitz3.ab3@27304>   Dc.l do_Div_quick                             ;dodivq
00034B7C <AmiBlitz3.ab3@27305>   Dc.l do_Div_float                             ;dodivf
00034B84 <AmiBlitz3.ab3@27306>   Ds.l 2
00034B86 <AmiBlitz3.ab3@27307>   Dc.b $0F,$A0
00034B88 <AmiBlitz3.ab3@27309>   Dc.b $00,$26                                  ;& ; & int
00034B8C <AmiBlitz3.ab3@27310>   Dc.l do_AND_byte                              ;doandb
00034B90 <AmiBlitz3.ab3@27311>   Dc.l do_AND_word                              ;doandw
00034B94 <AmiBlitz3.ab3@27312>   Dc.l do_AND_long                              ;doandl
00034B98 <AmiBlitz3.ab3@27313>   Dc.l do_AND_long                              ;doandl
00034BA4 <AmiBlitz3.ab3@27314>   Ds.l 3
00034BA6 <AmiBlitz3.ab3@27315>   Dc.b $13,$88
00034BA8 <AmiBlitz3.ab3@27317>   Dc.b $00,$7C                                  ;| ;or int ;
00034BAC <AmiBlitz3.ab3@27318>   Dc.l do_OR_byte                               ;doorb
00034BB0 <AmiBlitz3.ab3@27319>   Dc.l do_OR_word                               ;doorw
00034BB4 <AmiBlitz3.ab3@27320>   Dc.l do_OR_long                               ;doorl
00034BB8 <AmiBlitz3.ab3@27321>   Dc.l do_OR_long                               ;doorl
00034BC4 <AmiBlitz3.ab3@27322>   Ds.l 3
00034BC6 <AmiBlitz3.ab3@27323>   Dc.b $13,$88
00034BC8 <AmiBlitz3.ab3@27325>   Dc.b $80,$42                                  ; AND int  ;(opand-opabcd)/$1c+$8000+fnum
00034BCC <AmiBlitz3.ab3@27326>   Dc.l do_AND_byte                              ;doandb
00034BD0 <AmiBlitz3.ab3@27327>   Dc.l do_AND_word                              ;doandw
00034BD4 <AmiBlitz3.ab3@27328>   Dc.l do_AND_long                              ;doandl
00034BD8 <AmiBlitz3.ab3@27329>   Dc.l do_AND_long                              ;doandl
00034BE4 <AmiBlitz3.ab3@27330>   Ds.l 3
00034BE6 <AmiBlitz3.ab3@27331>   Dc.b $03,$E8
00034BE8 <AmiBlitz3.ab3@27333>   Dc.b $80,$8A                                  ; OR int   ;(opor-opabcd)/$1c+$8000+fnum
00034BEC <AmiBlitz3.ab3@27334>   Dc.l do_OR_byte                               ;doorb
00034BF0 <AmiBlitz3.ab3@27335>   Dc.l do_OR_word                               ;doorw
00034BF4 <AmiBlitz3.ab3@27336>   Dc.l do_OR_long                               ;doorl
00034BF8 <AmiBlitz3.ab3@27337>   Dc.l do_OR_long                               ;doorl
00034C04 <AmiBlitz3.ab3@27338>   Ds.l 3
00034C06 <AmiBlitz3.ab3@27339>   Dc.b $03,$E8
00034C08 <AmiBlitz3.ab3@27341>   Dc.b $80,$73                                  ; EOR int  ;(opeor-opabcd)/$1c+$8000+fnum
00034C0C <AmiBlitz3.ab3@27342>   Dc.l do_EOR_byte                              ;doeorb
00034C10 <AmiBlitz3.ab3@27343>   Dc.l do_EOR_word                              ;doeorw
00034C14 <AmiBlitz3.ab3@27344>   Dc.l do_EOR_long                              ;doeorl
00034C18 <AmiBlitz3.ab3@27345>   Dc.l do_EOR_long                              ;doeorl
00034C24 <AmiBlitz3.ab3@27346>   Ds.l 3
00034C26 <AmiBlitz3.ab3@27347>   Dc.b $03,$E8
00034C28 <AmiBlitz3.ab3@27349>   Dc.b $80,$7C                                  ; LSL int  ;(oplsl-opabcd)/$1c+$8000+fnum
00034C2C <AmiBlitz3.ab3@27350>   Dc.l do_LSL                                   ;dolslb
00034C30 <AmiBlitz3.ab3@27351>   Dc.l do_LSL                                   ;dolslw
00034C34 <AmiBlitz3.ab3@27352>   Dc.l do_LSL                                   ;dolsll
00034C38 <AmiBlitz3.ab3@27353>   Dc.l do_LSL                                   ;dolsll
00034C44 <AmiBlitz3.ab3@27354>   Ds.l 3
00034C46 <AmiBlitz3.ab3@27355>   Dc.b $17,$70
00034C48 <AmiBlitz3.ab3@27357>   Dc.b $80,$44                                  ; ASL int  ;(opasl-opabcd)/$1c+$8000+fnum
00034C4C <AmiBlitz3.ab3@27358>   Dc.l do_LSL                                   ;dolslb
00034C50 <AmiBlitz3.ab3@27359>   Dc.l do_LSL                                   ;dolslw
00034C54 <AmiBlitz3.ab3@27360>   Dc.l do_LSL                                   ;dolsll
00034C58 <AmiBlitz3.ab3@27361>   Dc.l do_LSL                                   ;dolsll
00034C64 <AmiBlitz3.ab3@27362>   Ds.l 3
00034C66 <AmiBlitz3.ab3@27363>   Dc.b $17,$70
00034C68 <AmiBlitz3.ab3@27365>   Dc.b $80,$7D                                  ; LSR int  ;(oplsr-opabcd)/$1c+$8000+fnum
00034C6C <AmiBlitz3.ab3@27366>   Dc.l do_LSR                                   ;dolsrb
00034C70 <AmiBlitz3.ab3@27367>   Dc.l do_LSR                                   ;dolsrw
00034C74 <AmiBlitz3.ab3@27368>   Dc.l do_LSR                                   ;dolsrl
00034C78 <AmiBlitz3.ab3@27369>   Dc.l do_LSR                                   ;dolsrl
00034C84 <AmiBlitz3.ab3@27370>   Ds.l 3
00034C86 <AmiBlitz3.ab3@27371>   Dc.b $17,$70
00034C88 <AmiBlitz3.ab3@27373>   Dc.b $80,$45                                  ; ASR int  ;(opasr-opabcd)/$1c+$8000+fnum
00034C8C <AmiBlitz3.ab3@27374>   Dc.l do_ASR                                   ;doasrb
00034C90 <AmiBlitz3.ab3@27375>   Dc.l do_ASR                                   ;doasrw
00034C94 <AmiBlitz3.ab3@27376>   Dc.l do_ASR                                   ;doasrl
00034C98 <AmiBlitz3.ab3@27377>   Dc.l do_ASR                                   ;doasrl
00034CA4 <AmiBlitz3.ab3@27378>   Ds.l 3
00034CA6 <AmiBlitz3.ab3@27379>   Dc.b $17,$70
00034CA8 <AmiBlitz3.ab3@27381>   Dc.b $80,$B9                                  ;mod       ;$8006+tnum
00034CAC <AmiBlitz3.ab3@27382>   Dc.l do_mod_byte                              ;domodb
00034CB0 <AmiBlitz3.ab3@27383>   Dc.l do_mod_word                              ;domodw
00034CB4 <AmiBlitz3.ab3@27384>   Dc.l do_mod_long                              ;domodl
00034CB8 <AmiBlitz3.ab3@27385>   Dc.l do_mod_quick                             ;domodq
00034CBC <AmiBlitz3.ab3@27386>   Dc.l do_mod_float                             ;domodf
00034CC4 <AmiBlitz3.ab3@27387>   Ds.l 2
00034CC6 <AmiBlitz3.ab3@27388>   Dc.b $13,$88
00034CC8 <AmiBlitz3.ab3@27391>   Dc.b $00,$5E                                  ;^
00034CCC <AmiBlitz3.ab3@27392>   Dc.l do_pow                                   ;dopow
00034CD0 <AmiBlitz3.ab3@27393>   Dc.l do_pow                                   ;dopow
00034CD4 <AmiBlitz3.ab3@27394>   Dc.l do_pow                                   ;dopow
00034CD8 <AmiBlitz3.ab3@27395>   Dc.l do_pow                                   ;dopow
00034CDC <AmiBlitz3.ab3@27396>   Dc.l do_pow                                   ;dopow
00034CE4 <AmiBlitz3.ab3@27397>   Ds.l 2
00034CE6 <AmiBlitz3.ab3@27398>   Dc.b $1B,$58                                  ;7000
00034CE8 <AmiBlitz3.ab3@27401>   Dc.b $00,$3D                                  ;=
00034CEC <AmiBlitz3.ab3@27402>   Dc.l do_equal_byte                            ;doeqb
00034CF0 <AmiBlitz3.ab3@27403>   Dc.l do_equal_word                            ;doeqw
00034CF4 <AmiBlitz3.ab3@27404>   Dc.l do_equal_long                            ;doeql
00034CF8 <AmiBlitz3.ab3@27405>   Dc.l do_equal_long                            ;doeql
00034CFC <AmiBlitz3.ab3@27406>   Dc.l do_equal_float                           ;doeqf
00034D00 <AmiBlitz3.ab3@27407>   Dc.l do_equal_long                            ;doeql
00034D04 <AmiBlitz3.ab3@27408>   Dc.l do_equal_string                          ;doeqs
00034D06 <AmiBlitz3.ab3@27409>   Dc.b $07,$D0                                  ;2000
00034D08 <AmiBlitz3.ab3@27412>   Dc.b $3C,$3E                                  ;<>
00034D0C <AmiBlitz3.ab3@27413>   Dc.l do_not_equal_byte                        ;doneb
00034D10 <AmiBlitz3.ab3@27414>   Dc.l do_not_equal_word                        ;donew
00034D14 <AmiBlitz3.ab3@27415>   Dc.l do_not_equal_long                        ;donel
00034D18 <AmiBlitz3.ab3@27416>   Dc.l do_not_equal_long                        ;donel
00034D1C <AmiBlitz3.ab3@27417>   Dc.l do_not_equal_float                       ;donef
00034D20 <AmiBlitz3.ab3@27418>   Dc.l do_not_equal_long                        ;donel
00034D24 <AmiBlitz3.ab3@27419>   Dc.l do_not_equal_string                      ;dones
00034D26 <AmiBlitz3.ab3@27420>   Dc.b $07,$D0                                  ;2000
00034D28 <AmiBlitz3.ab3@27423>   Dc.b $00,$3C                                  ;<
00034D2C <AmiBlitz3.ab3@27424>   Dc.l do_littler_byte                          ;doltb
00034D30 <AmiBlitz3.ab3@27425>   Dc.l do_littler_word                          ;doltw
00034D34 <AmiBlitz3.ab3@27426>   Dc.l do_littler_long                          ;doltl
00034D38 <AmiBlitz3.ab3@27427>   Dc.l do_littler_long                          ;doltl
00034D3C <AmiBlitz3.ab3@27428>   Dc.l do_littler_float                         ;doltf
00034D40 <AmiBlitz3.ab3@27429>   Dc.l do_littler_long                          ;doltl
00034D44 <AmiBlitz3.ab3@27430>   Dc.l do_littler_string                        ;dolts
00034D46 <AmiBlitz3.ab3@27431>   Dc.b $07,$D0                                  ;2000
00034D48 <AmiBlitz3.ab3@27434>   Dc.b $3C,$3D                                  ;<=
00034D4C <AmiBlitz3.ab3@27435>   Dc.l do_littler_equal_byte                    ;doleb
00034D50 <AmiBlitz3.ab3@27436>   Dc.l do_littler_equal_word                    ;doleb
00034D54 <AmiBlitz3.ab3@27437>   Dc.l do_littler_equal_long                    ;dolel
00034D58 <AmiBlitz3.ab3@27438>   Dc.l do_littler_equal_long                    ;dolel
00034D5C <AmiBlitz3.ab3@27439>   Dc.l do_littler_equal_float                   ;dolef
00034D60 <AmiBlitz3.ab3@27440>   Dc.l do_littler_equal_long                    ;dolel
00034D64 <AmiBlitz3.ab3@27441>   Dc.l do_littler_equal_string                  ;doles
00034D66 <AmiBlitz3.ab3@27442>   Dc.b $07,$D0                                  ;2000
00034D68 <AmiBlitz3.ab3@27445>   Dc.b $00,$3E                                  ;>
00034D6C <AmiBlitz3.ab3@27446>   Dc.l do_greater_byte                          ;dogtb
00034D70 <AmiBlitz3.ab3@27447>   Dc.l do_greater_word                          ;dogtw
00034D74 <AmiBlitz3.ab3@27448>   Dc.l do_greater_long                          ;dogtl
00034D78 <AmiBlitz3.ab3@27449>   Dc.l do_greater_long                          ;dogtl
00034D7C <AmiBlitz3.ab3@27450>   Dc.l do_greater_float                         ;dogtf
00034D80 <AmiBlitz3.ab3@27451>   Dc.l do_greater_long                          ;dogtl
00034D84 <AmiBlitz3.ab3@27452>   Dc.l do_greater_string                        ;dogts
00034D86 <AmiBlitz3.ab3@27453>   Dc.b $07,$D0                                  ;2000
00034D88 <AmiBlitz3.ab3@27456>   Dc.b $3E,$3D                                  ;>=
00034D8C <AmiBlitz3.ab3@27457>   Dc.l do_greater_equal_byte                    ;dogeb
00034D90 <AmiBlitz3.ab3@27458>   Dc.l do_greater_equal_word                    ;dogew
00034D94 <AmiBlitz3.ab3@27459>   Dc.l do_greater_equal_long                    ;dogel
00034D98 <AmiBlitz3.ab3@27460>   Dc.l do_greater_equal_long                    ;dogel
00034D9C <AmiBlitz3.ab3@27461>   Dc.l do_greater_equal_float                   ;dogef
00034DA0 <AmiBlitz3.ab3@27462>   Dc.l do_greater_equal_long                    ;dogel
00034DA4 <AmiBlitz3.ab3@27463>   Dc.l do_greater_equal_string                  ;doges
00034DA6 <AmiBlitz3.ab3@27464>   Dc.b $07,$D0                                  ;2000
00034DA8 <AmiBlitz3.ab3@27466>   Dc.b $80,$CD                                  ;$8000+26+tnum
00034DAC <AmiBlitz3.ab3@27467>   Dc.l _BitTst
00034DB0 <AmiBlitz3.ab3@27468>   Dc.l _BitTst
00034DB4 <AmiBlitz3.ab3@27469>   Dc.l _BitTst
00034DB8 <AmiBlitz3.ab3@27470>   Dc.l _BitTst
00034DC4 <AmiBlitz3.ab3@27471>   Ds.l 3
00034DC6 <AmiBlitz3.ab3@27472>   Dc.b $1F,$40                                  ;8000
00034DC8 <AmiBlitz3.ab3@27474>   Dc.b $80,$CE                                  ;$8000+27+tnum
00034DCC <AmiBlitz3.ab3@27475>   Dc.l _BitSet
00034DD0 <AmiBlitz3.ab3@27476>   Dc.l _BitSet
00034DD4 <AmiBlitz3.ab3@27477>   Dc.l _BitSet
00034DD8 <AmiBlitz3.ab3@27478>   Dc.l _BitSet
00034DE4 <AmiBlitz3.ab3@27479>   Ds.l 3
00034DE6 <AmiBlitz3.ab3@27480>   Dc.b $1F,$40                                  ;8000
00034DE8 <AmiBlitz3.ab3@27482>   Dc.b $80,$CF                                  ;$8000+28+tnum
00034DEC <AmiBlitz3.ab3@27483>   Dc.l _BitClr
00034DF0 <AmiBlitz3.ab3@27484>   Dc.l _BitClr
00034DF4 <AmiBlitz3.ab3@27485>   Dc.l _BitClr
00034DF8 <AmiBlitz3.ab3@27486>   Dc.l _BitClr
00034E04 <AmiBlitz3.ab3@27487>   Ds.l 3
00034E06 <AmiBlitz3.ab3@27488>   Dc.b $1F,$40                                  ;8000
00034E08 <AmiBlitz3.ab3@27490>   Dc.b $80,$D0                                  ;$8000+29+tnum
00034E0C <AmiBlitz3.ab3@27491>   Dc.l _BitChg
00034E10 <AmiBlitz3.ab3@27492>   Dc.l _BitChg
00034E14 <AmiBlitz3.ab3@27493>   Dc.l _BitChg
00034E18 <AmiBlitz3.ab3@27494>   Dc.l _BitChg
00034E24 <AmiBlitz3.ab3@27495>   Ds.l 3
00034E26 <AmiBlitz3.ab3@27496>   Dc.b $1F,$40                                  ;8000
00034E28 <AmiBlitz3.ab3@27498>   Dc.b $00,$00
00034E2C <AmiBlitz3.ab3@27503> modetable:   Dc.l typemode
00034E30 <AmiBlitz3.ab3@27506> newtypebase: Dc.l newtype_byte
00034E38 <AmiBlitz3.ab3@27509>   Dc.l newtype_word,$01                                    
00034E3A <AmiBlitz3.ab3@27510>   Dc.w $0001
00034E3E <AmiBlitz3.ab3@27511>   Dc.b 13,"b",0,0
00034E46 <AmiBlitz3.ab3@27514>   Dc.l newtype_long,$02
00034E48 <AmiBlitz3.ab3@27515>   Dc.w $0002
00034E4C <AmiBlitz3.ab3@27516>   Dc.b 13,"w",0,0
00034E54 <AmiBlitz3.ab3@27519>   Dc.l newtype_quick,$03                                   
00034E56 <AmiBlitz3.ab3@27520>   Dc.w $0004
00034E5A <AmiBlitz3.ab3@27521>   Dc.b 13,"l",0,0
00034E62 <AmiBlitz3.ab3@27524>   Dc.l newtype_float,$04                                   
00034E64 <AmiBlitz3.ab3@27525>   Dc.w $0004
00034E68 <AmiBlitz3.ab3@27526>   Dc.b 13,"q",0,0
00034E70 <AmiBlitz3.ab3@27530>   Dc.l newtype_double,$05                                  ;make problems on old residents
00034E72 <AmiBlitz3.ab3@27531>   Dc.w $0004
00034E76 <AmiBlitz3.ab3@27532>   Dc.b 13,"f",0,0
00034E7E <AmiBlitz3.ab3@27535>   Dc.l newtype_double,$06
00034E80 <AmiBlitz3.ab3@27536>   Dc.w $0004
00034E84 <AmiBlitz3.ab3@27537>   Dc.b 13,"a",0,0
00034E8C <AmiBlitz3.ab3@27540>   Dc.l newtype_string,$05                                  ;?? has to by $06 becous is number 6 not 5
00034E8E <AmiBlitz3.ab3@27541>   Dc.w $0008
00034E92 <AmiBlitz3.ab3@27542>   Dc.b 13,"d",0,0
00034E9A <AmiBlitz3.ab3@27546>   Dc.l $0000000,$07                                        ;stringtype
00034E9C <AmiBlitz3.ab3@27547>   Dc.w $0004
00034EA0 <AmiBlitz3.ab3@27548>   Dc.b 13,"s",0,0
00034EA8 <AmiBlitz3.ab3@27551>   Dc.l $00,$00
00034EAA <AmiBlitz3.ab3@27552>   Dc.w $0000
00034EAE <AmiBlitz3.ab3@27553>   Dc.b $01,$00,$00,$00
00034F0E <AmiBlitz3.ab3@27556> incdir:               Ds.l 24                              ;dcb.b   96,0    org source
00034F10 <AmiBlitz3.ab3@27560> dirmode:              Ds.w 1                               ;shows if directmode is on
00034F14 <AmiBlitz3.ab3@27562>                       Ds.l 1                               ;int org source ;intuition!
00034F16 <AmiBlitz3.ab3@27563> maxobject_pos:        Ds.w 1                               ;maxat org source ;max at
00034F1A <AmiBlitz3.ab3@27564> maxsat:               Ds.l 1                               ;data1 info pos
00034F1C <AmiBlitz3.ab3@27565> number_of_objects:    Ds.w 1                               ;nummaxs org source ;number of maximums
00034F1E <AmiBlitz3.ab3@27567> maxsused:             Ds.w 1                               ;maximums used in prog
00034F20 <AmiBlitz3.ab3@27571> dark:                 Ds.w 1                               ;dark compile?
00034F22 <AmiBlitz3.ab3@27572> qlab:                 Ds.w 1                               ;quick lab allocate
00034F26 <AmiBlitz3.ab3@27573> defaulttype:          Dc.l newtype_quick                   ;dc.l quicktype org source
00034F28 <AmiBlitz3.ab3@27578> anyerrs:              Dc.w -1                              ;Any Errors in compile ?
00034F2A <AmiBlitz3.ab3@27579> debugversion:         Ds.w 1                               ;makeexec org source ;make an executable file!
00034F2E <AmiBlitz3.ab3@27580> noinits:              Ds.l 1                               ;flag for if we have any init routines!
00034F32 <AmiBlitz3.ab3@27582> letstart:             Ds.l 1
00034F34 <AmiBlitz3.ab3@27583> dontwrite:            Ds.w 1                               ;nomemleft org source
00034FB4 <AmiBlitz3.ab3@27584> lastgloballabel:      Ds.l 32                              ;lastbiglab ds.b 128 org source
00034FB8 <AmiBlitz3.ab3@27586> locdatast:            Ds.l 1
00034FBC <AmiBlitz3.ab3@27587> firstpend:            Ds.l 1
00034FC0 <AmiBlitz3.ab3@27591> data2at:              Ds.l 1
00034FC4 <AmiBlitz3.ab3@27592> data2:                Ds.l 1
00034FC8 <AmiBlitz3.ab3@27593> data1start:           Ds.l 1                               ;data1at org source
00034FCC <AmiBlitz3.ab3@27594> data1:                Ds.l 1                               ;pc for initialized data!
00034FD0 <AmiBlitz3.ab3@27595> destbufferstart:      Ds.l 1                               ;pcat org source
00034FD4 <AmiBlitz3.ab3@27599> destbufferend:        Ds.l 1                               ;libat org source
00034FD8 <AmiBlitz3.ab3@27600> libend:               Ds.l 1                               ;lib org source
00034FDC <AmiBlitz3.ab3@27601> allat:                Ds.l 1                               ;highest allocmemd location for code
00034FE6 <AmiBlitz3.ab3@27602> dummyasm:             Dc.w 0,0,0,0,0
00034FEA <AmiBlitz3.ab3@27603>                       Dc.l 0
00034FEC <AmiBlitz3.ab3@27604>                       Dc.w 0
00034FF0 <AmiBlitz3.ab3@27608> buff1:                Ds.l 1                               ;buffer for text get
00034FF4 <AmiBlitz3.ab3@27609> buff2:                Ds.l 1                               ;ditto for dest
00034FF6 <AmiBlitz3.ab3@27610> constmode:            Ds.w 1                               ;0 for norm, <>0 for assembler
00034FF8 <AmiBlitz3.ab3@27611> asmtype:              Ds.w 1                               ;0=contains no prog reference
00034FFA <AmiBlitz3.ab3@27612> extraword:            Ds.w 1                               ;the extension word for assembler
00034FFC <AmiBlitz3.ab3@27613> extraword2:           Ds.w 1                               ;ditto
00034FFE <AmiBlitz3.ab3@27614> asmsize:              Ds.w 1
00035002 <AmiBlitz3.ab3@27615> asmbuff:              Ds.l 1
00035004 <AmiBlitz3.ab3@27616> asmlen:               Ds.w 1                               ;first (src) text len
00035006 <AmiBlitz3.ab3@27617> asmlen2:              Ds.w 1                               ;second (dest)
0003500A <AmiBlitz3.ab3@27618> templabel:            Ds.l 1                               ;linked list of expressions to resolve
0003500C <AmiBlitz3.ab3@27621> macnum:               Ds.w 1
00035010 <AmiBlitz3.ab3@27623>                       Dc.l 0                               ;address of next 0 in include fil
00035014 <AmiBlitz3.ab3@27624> titleat:              Ds.l 1                               ;5 longs for compile streaks
0003501E <AmiBlitz3.ab3@27625> progress_per_line:    Ds.w 5                               ;titleadd ds 5 org source ;5 adds for compile streaks
00035020 <AmiBlitz3.ab3@27626> connest:              Ds.w 1                               ;conditional nest level
00035024 <AmiBlitz3.ab3@27627> firstconst:           Ds.l 1                               ;first constant (#a)
00035026 <AmiBlitz3.ab3@27628> numarg:               Ds.w 1                               ;number of macro arguements
0003502A <AmiBlitz3.ab3@27629> myoline:              Ds.l 1                               ;macro done yet?
0003502E <AmiBlitz3.ab3@27630> myline:               Ds.l 1                               ;pointer to some memory to create
00035032 <AmiBlitz3.ab3@27633>                       Ds.l 1
00035072 <AmiBlitz3.ab3@27634> concomstack:          Ds.l 16                              ;32 deep conditional compilation
00035076 <AmiBlitz3.ab3@27635> concomsp:             Dc.l concomstack                     ;stack pointer
00035078 <AmiBlitz3.ab3@27636> oldqflag:             Ds.w 1
0003507C <AmiBlitz3.ab3@27639>                       Ds.l 1
0003507E <AmiBlitz3.ab3@27641>                       Ds.w 1
00035082 <AmiBlitz3.ab3@27642> firstfor:             Ds.l 1                               ;first for
00035084 <AmiBlitz3.ab3@27643> stackpar:             Ds.w 1                               ;pushflag org source ;1 par to stack 0 normal
00035086 <AmiBlitz3.ab3@27644> sbgot:                Ds.w 1                               ;flag for string got 2
00035088 <AmiBlitz3.ab3@27645> convsize:             Ds.w 1                               ;usertype org source
0003508A <AmiBlitz3.ab3@27646> userp:                Ds.w 1
0003508E <AmiBlitz3.ab3@27651> ptr_userlibs_list:    Ds.l 1                               ;libslist org source
00035090 <AmiBlitz3.ab3@27652> a2offset:             Ds.w 1                               ;stackuse org source ;stack used when gathering lib parameters
00035092 <AmiBlitz3.ab3@27653> numreps:              Ds.w 1                               ;number of repeats in a repeatable
00035096 <AmiBlitz3.ab3@27655> locloc:               Ds.l 1
00035098 <AmiBlitz3.ab3@27656> locchar:              Ds.w 1
00035118 <AmiBlitz3.ab3@27657> stbuff:               Ds.l 32                              ;was 8    ;six string varoffs
0003511A <AmiBlitz3.ab3@27658> commode:              Ds.w 1                               ;in comma mode...
0003511E <AmiBlitz3.ab3@27659> lastoffset_org:       Ds.l 1                               ;lastoffset org source ;last offset in calcvar!
00035122 <AmiBlitz3.ab3@27660> linenumat:            Dc.l $FFFFFFFF                       ;linecounter ;dc -1 org source ;line being processed
00035126 <AmiBlitz3.ab3@27661> compilelinecounter:   Dc.l $FFFFFFFF                       ;menuret dc -1 org source ;menu return code
00035128 <AmiBlitz3.ab3@27663>                       Ds.w 1                               ;opt reset offset
00035228 <AmiBlitz3.ab3@27665>                       Ds.l 64                              ;Ds.b vcodelen org source ;code used to generate
00035328 <AmiBlitz3.ab3@27667>                       Ds.l 64                              ;Ds.b vcodelen org source ;above for let.....
0003532A <AmiBlitz3.ab3@27668> varcodelen:           Ds.w 1                               ;and length
0003532C <AmiBlitz3.ab3@27670>                       Ds.w 1
00035332 <AmiBlitz3.ab3@27671> oldvcodelen:          Ds.w 3                               ;old varcodelen
00035334 <AmiBlitz3.ab3@27674> Even4
00035338 <AmiBlitz3.ab3@27675> tempvm:               Ds.l 1                               ;memlib org source ;address of memory library
0003533A <AmiBlitz3.ab3@27676> memlibstat:           Ds.w 1                               ;status of memory library during
0003533C <AmiBlitz3.ab3@27679>                       Dc.w 0
0003533E <AmiBlitz3.ab3@27681>                       Dc.w 0
00035340 <AmiBlitz3.ab3@27683> varmode:              Ds.w 1                               ;0 a5 pointer to global
00035344 <AmiBlitz3.ab3@27685> currentfunction:      Ds.l 1                               ;thisproc org source
00035348 <AmiBlitz3.ab3@27686> firstproc:            Ds.l 1                               ;firstproc org source ;this procedure being 'done'
0003534A <AmiBlitz3.ab3@27687> 
0003534C <AmiBlitz3.ab3@27689> skipcode:             Ds.w 1                               ;nocompile ;comflag org source ;0 if no compile
00035350 <AmiBlitz3.ab3@27690> passstack:            Ds.l 1
00035354 <AmiBlitz3.ab3@27691> zero:                 Ds.l 1                               ;ZERO!
00035356 <AmiBlitz3.ab3@27692> ininclude:            Ds.w 1                               ;numincs org source ;number of include files
0003535A <AmiBlitz3.ab3@27694> xinclude_base:        Ds.l 1                               ;firstxinc org source ;first exclusive include.
0003535E <AmiBlitz3.ab3@27695> constantbase:         Ds.l 1                               ;firstinc org source ;first include
00035360 <AmiBlitz3.ab3@27696> lasta6:               Dc.w $FFFF                           ;-1 org source
00035362 <AmiBlitz3.ab3@27697> instringon:           Ds.w 1                               ;quoteflag org source
00035366 <AmiBlitz3.ab3@27698> ptr_macrobuffer_begin:Ds.l 1                               ;macrobuff org source ;pointer to macro collection buffer ;begin
0003536A <AmiBlitz3.ab3@27699> ptr_macrobuffer_end:  Ds.l 1                               ;macrobufff org source ;end of above ;end of
0003536E <AmiBlitz3.ab3@27700> macrobase:            Ds.l 1                               ;firstmacro org source ;linked list of macro's ;macrolist
00035372 <AmiBlitz3.ab3@27701> endop:                Ds.l 1                               ;end of program pc - before finishups!
00035376 <AmiBlitz3.ab3@27702> labelbase:            Ds.l 1                               ;firstlabel org source ;first lib struct
0003537A <AmiBlitz3.ab3@27703> end_of_tokenlist:     Ds.l 1                               ;lasttoken org source
0003537C <AmiBlitz3.ab3@27704> numstatic:            Ds.w 1                               ;number of static structs
00035380 <AmiBlitz3.ab3@27705> staticdata:           Ds.l 1                               ;data1 val for statics
00035384 <AmiBlitz3.ab3@27706> libpointer:           Ds.l 1                               ;firstlib org source ;first lib struct
00035386 <AmiBlitz3.ab3@27707> sbasegot:             Ds.w 1                               ;string base got?
0003538A <AmiBlitz3.ab3@27708> litdata1:             Ds.l 1
0003538E <AmiBlitz3.ab3@27712> objlen:               Ds.l 1
00035392 <AmiBlitz3.ab3@27713> hunkoffsetcounter:    Ds.l 1                               ;numoffs org source
00035396 <AmiBlitz3.ab3@27714> hunkoffsetbase:       Ds.l 1                               ;firstoff org source ;pointer to linked list
00035398 <AmiBlitz3.ab3@27716> flagmask:             Ds.w 1                               ;mask for flag of variable when
0003539A <AmiBlitz3.ab3@27718> notshared:            Ds.w 1                               ;added org source ;flag for seeing if variable was added!
0003539C <AmiBlitz3.ab3@27719> nonew:                Ds.w 1                               ;1 to inhibit new variable creation
000353A0 <AmiBlitz3.ab3@27720> temp1:                Ds.l 1
000353A4 <AmiBlitz3.ab3@27721> temp2:                Ds.l 1
000353A8 <AmiBlitz3.ab3@27723> ptr_parameterstore:   Ds.l 1                               ;namebuff ds.b 128 org source
000353AC <AmiBlitz3.ab3@27724> fib_DirEntryType:     Ds.l 1                               ;namebuff+4 org source
00035420 <AmiBlitz3.ab3@27725> fib_FileName:         Ds.l 29                              ;namebuff+8 org source
00035424 <AmiBlitz3.ab3@27726> fib_Size:             Ds.l 1                               ;namebuff+124 org source
000354A4 <AmiBlitz3.ab3@27728> namebuff2:            Ds.b 128
000354AC <AmiBlitz3.ab3@27729>                       Ds.b 8                               ;for fileinfoblock
000354EC <AmiBlitz3.ab3@27732> optstuff:             Ds.b 64                              ;temp opt make buffer
000354EE <AmiBlitz3.ab3@27749>   Dc.b $00,$01                                             ; 1 byte schreiben ;one byte stuff...
000354F2 <AmiBlitz3.ab3@27750>   Dc.l xtra_versionnumber                                  ; vers org source
000354F6 <AmiBlitz3.ab3@27751>   Dc.l create_iconfile                                     ; create icon for executable
000354FA <AmiBlitz3.ab3@27752>   Ds.l 1
000354FC <AmiBlitz3.ab3@27754>   Dc.b $00,$02                                             ; 2 bytes schreiben  ;two byte stuff...
00035500 <AmiBlitz3.ab3@27757>   Dc.l set_use_debugger
00035504 <AmiBlitz3.ab3@27758>   Dc.l AL_0_11010                                          ;+obsolet: debugger
00035508 <AmiBlitz3.ab3@27759>   Dc.l AL_0_1103C                                          ;+obsolet: long arrays
0003550C <AmiBlitz3.ab3@27760>   Dc.l AL_0_11068                                          ;+obsolet: expand macros
00035510 <AmiBlitz3.ab3@27761>   Dc.l AL_0_11094                                          ;+obsolet: quoted macros
00035514 <AmiBlitz3.ab3@27762>   Dc.l set_make_smallestcode
00035518 <AmiBlitz3.ab3@27763>   Dc.l set_link_debuginfo
0003551C <AmiBlitz3.ab3@27764>   Dc.l set_autorun
00035520 <AmiBlitz3.ab3@27765>   Dc.l set_interruptcheck
00035524 <AmiBlitz3.ab3@27766>   Dc.l set_assemblercheck
00035528 <AmiBlitz3.ab3@27768>   Dc.l set_overflowcheck
0003552C <AmiBlitz3.ab3@27769>   Dc.l default_obsolete                                    ;+obsolet: ohne inhalt
00035530 <AmiBlitz3.ab3@27770>   Dc.l default_interruptcheck                              ;+obsolet: interruptcheck vorgabe
00035534 <AmiBlitz3.ab3@27771>   Dc.l default_overflowcheck                               ;+obsolet: overflow vorgabe
00035538 <AmiBlitz3.ab3@27774>   Ds.l 1
0003553A <AmiBlitz3.ab3@27776>   Dc.b $00,$04                                             ; 4 bytes schreiben..  ;four byte stuff...
0003553E <AmiBlitz3.ab3@27783>   Dc.l objectbuffer
00035542 <AmiBlitz3.ab3@27784>   Dc.l libsbuffer
00035546 <AmiBlitz3.ab3@27785>   Dc.l systembuffer
0003554A <AmiBlitz3.ab3@27786>   Dc.l databuffer
0003554E <AmiBlitz3.ab3@27787>   Dc.l macrobuffer_size
00035552 <AmiBlitz3.ab3@27788>   Dc.l stringbuffer
00035556 <AmiBlitz3.ab3@27791>   Ds.l 1
00035558 <AmiBlitz3.ab3@27795>   Dc.b $02,$20                                             ;dc 68*8; 544 bytes schreiben.
00035560 <AmiBlitz3.ab3@27796>   Dc.l residents_table,0
00035562 <AmiBlitz3.ab3@27800>   Dc.b $01,$80                                             ;dc 192*2; 384 bytes schreiben
0003556A <AmiBlitz3.ab3@27801>   Dc.l exepath,0                                           ; exepath und exefilename jeweils 192 bytes
0003556C <AmiBlitz3.ab3@27802>   Ds.w 1
00035668 <AmiBlitz3.ab3@27806>   Ds.l 63
00035764 <AmiBlitz3.ab3@27807>   Ds.l 63
00035860 <AmiBlitz3.ab3@27808>   Ds.l 63
00035942 <AmiBlitz3.ab3@27809>   Ds.w 113
00035944 <AmiBlitz3.ab3@27812> comsettings_message:  Ds.w 1                               ;allchg org source
00035946 <AmiBlitz3.ab3@27813> xtra_versionnumber:   Ds.w 1                               ;vers org source
0003594C <AmiBlitz3.ab3@27817>   CLR.b exefilename
0003594E <AmiBlitz3.ab3@27818>   TST.l d0
00035952 <AmiBlitz3.ab3@27819>   BNE 'l10
00035954 <AmiBlitz3.ab3@27820>  RTS
0003595A <AmiBlitz3.ab3@27823>   JSR free_residents                                       ;jsr freeres2 org source
00035960 <AmiBlitz3.ab3@27824> 
00035966 <AmiBlitz3.ab3@27825>   LEA ptr_xtradata,A2
00035968 <AmiBlitz3.ab3@27826>   MOVEQ.l #$00,D4
0003596A <AmiBlitz3.ab3@27829>     MOVE.w (A2)+,D4                                        ; anzahl bytes zum lesen
0003596E <AmiBlitz3.ab3@27830>     BEQ.b 'done
00035970 <AmiBlitz3.ab3@27833>     MOVE.l (A2)+,D2
00035974 <AmiBlitz3.ab3@27834>   BEQ.b 'loop
00035976 <AmiBlitz3.ab3@27836>   MOVE.l D4,D3
00035978 <AmiBlitz3.ab3@27837>   MOVE.l D7,D1
0003597C <AmiBlitz3.ab3@27838>   JSR _Read(A6)                                            ; d1: file, d2: buffer, d3:length
0003597E <AmiBlitz3.ab3@27839>   TST.l D0
00035982 <AmiBlitz3.ab3@27840>   BNE.b 'loop2
00035986 <AmiBlitz3.ab3@27841>  BRA.w 'done2
0003598C <AmiBlitz3.ab3@27844>   TST.b xtra_versionnumber
00035990 <AmiBlitz3.ab3@27845>    BNE.b 'nover0
00035998 <AmiBlitz3.ab3@27846>   MOVE.w #$0080,set_autorun                                ;auto run on
000359A2 <AmiBlitz3.ab3@27847>   MOVE.w default_interruptcheck,set_interruptcheck         ;interupt checking on
000359A8 <AmiBlitz3.ab3@27848>   CLR.w set_assemblercheck                                 ;assembler checking off
000359B2 <AmiBlitz3.ab3@27849>   MOVE.w default_overflowcheck,set_overflowcheck           ;overflow chex
000359B6 <AmiBlitz3.ab3@27850>  BRA.b 'ver0
000359B8 <AmiBlitz3.ab3@27853>   MOVE.l D7,D1                                             ;load cli arg!
000359BE <AmiBlitz3.ab3@27854>   MOVE.l #str_cliarguments,D2
000359C4 <AmiBlitz3.ab3@27855>   MOVE.l #116,D3                                           ; vorher 128 , jetzt 8 weniger fuer die Versionsdaten
000359C8 <AmiBlitz3.ab3@27856>   JSR _Read(A6)                                            ; d1: file, d2: buffer, d3:length
000359CE <AmiBlitz3.ab3@27857>   MOVE.l #str_cliarguments,A0
000359D4 <AmiBlitz3.ab3@27858>   ADDA.l #115,A0
000359DA <AmiBlitz3.ab3@27859>   MOVE.l #0,(a0) ; terminate it!
000359DC <AmiBlitz3.ab3@27861>   MOVE.l D7,D1                                             ; I know, I know. Honitos started this horrible thing, see below...
000359E2 <AmiBlitz3.ab3@27862>   MOVE.l #stacksize,D2
000359E8 <AmiBlitz3.ab3@27863>   MOVE.l #4,D3
000359EC <AmiBlitz3.ab3@27864>   JSR _Read(A6)
000359F6 <AmiBlitz3.ab3@27865>   CMP.l ##MIN_STACKSIZE,stacksize
000359FA <AmiBlitz3.ab3@27866>   BGE 'stackok
00035A04 <AmiBlitz3.ab3@27867>   MOVE.l ##MIN_STACKSIZE,stacksize
00035A06 <AmiBlitz3.ab3@27870>   MOVE.l D7,D1
00035A0C <AmiBlitz3.ab3@27871>   MOVE.l #versioninformation,D2
00035A12 <AmiBlitz3.ab3@27872>   MOVE.l #4,D3
00035A16 <AmiBlitz3.ab3@27873>   JSR _Read(A6)
00035A18 <AmiBlitz3.ab3@27875>   MOVE.l D7,D1
00035A1E <AmiBlitz3.ab3@27876>   MOVE.l #number_of_builds,D2
00035A24 <AmiBlitz3.ab3@27877>   MOVE.l #4,D3
00035A28 <AmiBlitz3.ab3@27878>   JSR _Read(A6)
00035A2E <AmiBlitz3.ab3@27884> 
00035A34 <AmiBlitz3.ab3@27885>   MOVE.l A7,errstack
00035A3E <AmiBlitz3.ab3@27886>   MOVE.l #'done2,errcont
00035A46 <AmiBlitz3.ab3@27887>   MOVE.w #$FFFF,ezerr
00035A4C <AmiBlitz3.ab3@27890>     MOVE.l #temp1,D2                                   ;LOAD maxobjectsvalues
00035A4E <AmiBlitz3.ab3@27891>     MOVEQ.l #$04,D3
00035A50 <AmiBlitz3.ab3@27892>     MOVE.l D7,D1
00035A54 <AmiBlitz3.ab3@27893>     JSR _Read(A6)
00035A56 <AmiBlitz3.ab3@27894>     TST.l D0
00035A5A <AmiBlitz3.ab3@27895>     BEQ.b 'done2
00035A60 <AmiBlitz3.ab3@27896>     MOVE.w temp1,D1
00035A62 <AmiBlitz3.ab3@27897>     TST.w d1                                               ;new
00035A66 <AmiBlitz3.ab3@27898>     BEQ 'done2                                         ;new
00035A6C <AmiBlitz3.ab3@27899>      JSR findlibnoerr
00035A72 <AmiBlitz3.ab3@27901>     CMP.l #0,a1
00035A76 <AmiBlitz3.ab3@27902>     BEQ 'dloop
00035A7A <AmiBlitz3.ab3@27903>     MOVE.l $12(A1),D0
00035A82 <AmiBlitz3.ab3@27904>     MOVE.w temp1+2,-$4(A1,D0.L)
00035A86 <AmiBlitz3.ab3@27905>  BRA.b 'dloop
00035A8A <AmiBlitz3.ab3@27911>   LEA residents_table(PC),A0
00035A8C <AmiBlitz3.ab3@27912>   MOVEQ.l #$07,D0
00035A90 <AmiBlitz3.ab3@27915>     CLR.l $40(A0)
00035A94 <AmiBlitz3.ab3@27916>     LEA ResidentEntryStep(A0),A0   ; $44
00035A98 <AmiBlitz3.ab3@27917>   DBF D0,'loop3
00035A9C <AmiBlitz3.ab3@27919>   MOVEM.l D7/A6,-(A7)
00035AA2 <AmiBlitz3.ab3@27920>   JSR init_buffers
00035AA8 <AmiBlitz3.ab3@27921>   JSR reloadresident
00035AAC <AmiBlitz3.ab3@27922>   MOVEM.l (A7)+,D7/A6
00035AAE <AmiBlitz3.ab3@27923> RTS
00035AB6 <AmiBlitz3.ab3@27927>   MOVE.b #$1,xtra_versionnumber                            ;.xtra version number...
00035ABC <AmiBlitz3.ab3@27936>   LEA ptr_xtradata,A2
00035ABE <AmiBlitz3.ab3@27937>   MOVEQ.l #$00,D4
00035AC0 <AmiBlitz3.ab3@27941>   MOVE.w (A2)+,D4                                          ; anzahl bytes zu schreiben
00035AC4 <AmiBlitz3.ab3@27942>   BEQ.b 'done
00035AC6 <AmiBlitz3.ab3@27945>    MOVE.l (A2)+,D2
00035ACA <AmiBlitz3.ab3@27946>    BEQ.b 'loop
00035ACC <AmiBlitz3.ab3@27948>    MOVE.l D4,D3
00035ACE <AmiBlitz3.ab3@27949>    MOVE.l D7,D1                                            ; schreiben der daten in ptr_xtradata
00035AD2 <AmiBlitz3.ab3@27950>    JSR _Write(A6)                                          ; d1: file, d2: buffer, d3:length
00035AD6 <AmiBlitz3.ab3@27951>  BRA.b 'loop2
00035AD8 <AmiBlitz3.ab3@27954>   MOVE.l D7,D1
00035ADE <AmiBlitz3.ab3@27955>   MOVE.l #str_cliarguments,D2
00035AE4 <AmiBlitz3.ab3@27956>   MOVE.l #116,D3
00035AE8 <AmiBlitz3.ab3@27957>   JSR _Write(A6)                                           ; hier werden 116 bytes an cli_arguments geschrieben !!
00035AEA <AmiBlitz3.ab3@27959>   MOVE.l D7,D1
00035AF0 <AmiBlitz3.ab3@27960>   MOVE.l #stacksize,D2
00035AF6 <AmiBlitz3.ab3@27961>   MOVE.l #4,D3
00035AFA <AmiBlitz3.ab3@27962>   JSR _Write(A6)
00035AFC <AmiBlitz3.ab3@27964>   MOVE.l D7,D1
00035B02 <AmiBlitz3.ab3@27965>   MOVE.l #versioninformation,D2
00035B08 <AmiBlitz3.ab3@27966>   MOVE.l #4,D3
00035B0C <AmiBlitz3.ab3@27967>   JSR _Write(A6)
00035B0E <AmiBlitz3.ab3@27969>   MOVE.l D7,D1
00035B14 <AmiBlitz3.ab3@27970>   MOVE.l #number_of_builds,D2
00035B1A <AmiBlitz3.ab3@27971>   MOVE.l #4,D3
00035B1E <AmiBlitz3.ab3@27972>   JSR _Write(A6)
00035B24 <AmiBlitz3.ab3@27978>   LEA libpointer,A2
00035B26 <AmiBlitz3.ab3@27981>     MOVE.l (A2),D0
00035B2A <AmiBlitz3.ab3@27982>     BEQ.w 'done2
00035B2C <AmiBlitz3.ab3@27983>     MOVEA.l D0,A2
00035B30 <AmiBlitz3.ab3@27984>     MOVE.l $12(A2),D4
00035B34 <AmiBlitz3.ab3@27985>     TST.w -$2(A2,D4.L)
00035B38 <AmiBlitz3.ab3@27986>     BEQ.w 'loop3
00035B3C <AmiBlitz3.ab3@27988>     LEA $4(A2),A0
00035B3E <AmiBlitz3.ab3@27989>     MOVE.l A0,D2
00035B40 <AmiBlitz3.ab3@27990>     MOVEQ.l #$02,D3
00035B42 <AmiBlitz3.ab3@27991>     MOVE.l D7,D1                                           ; schreiben der Libnum mit 2 bytes
00035B46 <AmiBlitz3.ab3@27992>     JSR _Write(A6)                                         ; d1: file, d2: buffer, d3:length
00035B4A <AmiBlitz3.ab3@27994>     LEA -$4(A2,D4.L),A0
00035B4C <AmiBlitz3.ab3@27995>     MOVE.l A0,D2
00035B4E <AmiBlitz3.ab3@27996>     MOVEQ.l #$02,D3
00035B50 <AmiBlitz3.ab3@27997>     MOVE.l D7,D1                                           ; schreiben der Max Objects mit 2 bytes
00035B54 <AmiBlitz3.ab3@27998>     JSR _Write(A6)                                         ; d1: file, d2: buffer, d3:length
00035B58 <AmiBlitz3.ab3@27999>  BRA.w 'loop3
00035B5E <AmiBlitz3.ab3@28004>   LEA XTRAEndPadBytes,A2 ; get the start address off the 4 fill/pad/termination bytes
00035B60 <AmiBlitz3.ab3@28005>   MOVE.l A2,D2           ; move the address to d2
00035B66 <AmiBlitz3.ab3@28006>   MOVE.l #4,D3           ; we only need 4 bytes to save
00035B68 <AmiBlitz3.ab3@28007>   MOVE.l D7,D1           ; we set the file handle
00035B6C <AmiBlitz3.ab3@28008>   JSR _Write(A6)         ; and we write it.
00035B6E <AmiBlitz3.ab3@28010> RTS
00035B74 <AmiBlitz3.ab3@28015>   LEA optssave,A0                      ; backup address
00035B7A <AmiBlitz3.ab3@28016>   LEA ptr_xtradata,A1                  ; source address
00035B7C <AmiBlitz3.ab3@28019>   MOVE.w (A1)+,D0                                          ;length of data move
00035B80 <AmiBlitz3.ab3@28020>   BEQ.b 'backupdone
00035B82 <AmiBlitz3.ab3@28021>   SUBQ.w #1,D0
00035B84 <AmiBlitz3.ab3@28024>     MOVE.l (A1)+,D1
00035B88 <AmiBlitz3.ab3@28025>     BEQ.b 'backuploop
00035B8A <AmiBlitz3.ab3@28026>     MOVEA.l D1,A2
00035B8C <AmiBlitz3.ab3@28027>     MOVE.w D0,D1
00035B8E <AmiBlitz3.ab3@28030>       MOVE.b (A2)+,(A0)+
00035B92 <AmiBlitz3.ab3@28031>   DBF D1,'backuploop3
00035B96 <AmiBlitz3.ab3@28033>  BRA.w 'backuploop2
00035B9C <AmiBlitz3.ab3@28037>   LEA bufferlist,A1
00035B9E <AmiBlitz3.ab3@28040>     MOVE.l (A1)+,D2
00035BA2 <AmiBlitz3.ab3@28041>     BEQ.b 'loop4done
00035BA4 <AmiBlitz3.ab3@28043>     MOVEA.l D2,A0
00035BA6 <AmiBlitz3.ab3@28044>     MOVE.l (A0),D2
00035BA8 <AmiBlitz3.ab3@28045>     ADDQ.w #8,A0
00035BAE <AmiBlitz3.ab3@28046>     JSR makelong
00035BB2 <AmiBlitz3.ab3@28047>  BRA.b 'loop4
00035BB8 <AmiBlitz3.ab3@28050>   CLR.w state_of_residents                                 ;resident change
00035BBE <AmiBlitz3.ab3@28051>   CLR.w comsettings_message                                ;alloc change
00035BC4 <AmiBlitz3.ab3@28052>   CLR.w maxobject_pos
00035BC6 <AmiBlitz3.ab3@28053> RTS   ; new tomsmart1
00035BCC <AmiBlitz3.ab3@28057>   LEA optssave,A0
00035BD2 <AmiBlitz3.ab3@28058>   LEA ptr_xtradata,A1
00035BD4 <AmiBlitz3.ab3@28061>   MOVE.w (A1)+,D0
00035BD8 <AmiBlitz3.ab3@28062>   BEQ.b 'restoredone
00035BDA <AmiBlitz3.ab3@28063>   SUBQ.w #1,D0
00035BDC <AmiBlitz3.ab3@28066>     MOVE.l (A1)+,D1
00035BE0 <AmiBlitz3.ab3@28067>     BEQ.b 'restoreloop1
00035BE2 <AmiBlitz3.ab3@28068>     MOVEA.l D1,A2
00035BE4 <AmiBlitz3.ab3@28069>     MOVE.w D0,D1
00035BE6 <AmiBlitz3.ab3@28072>       MOVE.b (A0)+,(A2)+
00035BEA <AmiBlitz3.ab3@28073>   DBF D1,'restoreloop3
00035BEE <AmiBlitz3.ab3@28075>  BRA.b 'restoreloop2
00035BF0 <AmiBlitz3.ab3@28078> RTS
00035BF6 <AmiBlitz3.ab3@28082>   JSR free_residents                    ; first free the allready loaded residents
00035BFC <AmiBlitz3.ab3@28083>   JSR Clear_Residents_table             ; second clear the complete resident table
00035BFE <AmiBlitz3.ab3@28084> RTS
00035C06 <AmiBlitz3.ab3@28088>   MOVE.w #$FFFF,state_of_residents
00035C0C <AmiBlitz3.ab3@28089>   MOVE.w state_of_residents,D0
00035C12 <AmiBlitz3.ab3@28090>   JSR reloadresident
00035C14 <AmiBlitz3.ab3@28091> RTS
00035C16 <AmiBlitz3.ab3@28097>   MOVE.l d0,a1
00035C1C <AmiBlitz3.ab3@28099>   MOVEA.l libpointer,A2
00035C20 <AmiBlitz3.ab3@28102>     MOVE.l $12(A2),D0
00035C24 <AmiBlitz3.ab3@28103>     TST.w -$2(A2,D0.L)
00035C28 <AmiBlitz3.ab3@28104>      BEQ.w 'next
00035C2A <AmiBlitz3.ab3@28105>     SUBQ.w #1,D1
00035C2E <AmiBlitz3.ab3@28106>      BPL.w 'next
00035C32 <AmiBlitz3.ab3@28108>     MOVEA.l -$1A(A2,D0.L),A3    ;token offset
00035C34 <AmiBlitz3.ab3@28109>     ADDA.l A2,A3
00035C36 <AmiBlitz3.ab3@28112>       MOVE.b (A3)+,(A1)+
00035C3A <AmiBlitz3.ab3@28113>     BNE.w 'tt1
00035C3C <AmiBlitz3.ab3@28115>     CLR.b -(A1)
00035C40 <AmiBlitz3.ab3@28117>     MOVE.w -$4(A2,D0.L),D0
00035C46 <AmiBlitz3.ab3@28119>     AND.l #$ffff,d0
00035C48 <AmiBlitz3.ab3@28120>  RTS
00035C4A <AmiBlitz3.ab3@28124>     MOVEA.l (A2),A2
00035C4E <AmiBlitz3.ab3@28125> BRA.w 'loop
00035C5E <AmiBlitz3.ab3@28130> str_maxobjects_name:   Dc.b "              ",0 : Even
00035C6E <AmiBlitz3.ab3@28131> str_maxobjects_name2:  Dc.b "              ",0 : Even
00035C72 <AmiBlitz3.ab3@28132> objectbuffer:          Dc.l #DEFAULT_OBJECTBUFFERSIZE  ; replaced with a constant tomsmart1
00035C76 <AmiBlitz3.ab3@28133>                        Dc.l $00000000
00035C82 <AmiBlitz3.ab3@28134> str_objectbuffer:      Dc.b "16384",0,0,0,0,0,0,0      ; string max 12 columns
00035C86 <AmiBlitz3.ab3@28136> libsbuffer:            Dc.l #DEFAULT_LIBSBUFFERSIZE    ; replaced with a constant tomsmart1
00035C8A <AmiBlitz3.ab3@28137>                        Dc.l $00000000
00035C96 <AmiBlitz3.ab3@28138> str_libsbuffer:        Dc.b "32768",0,0,0,0,0,0,0      ;was "16384"; string max 12 columns
00035C9A <AmiBlitz3.ab3@28140> systembuffer:          Dc.l #DEFAULT_SYSTEMBUFFERSIZE  ; system buffer  ; replaced with a constant tomsmart1
00035C9E <AmiBlitz3.ab3@28141>                        Dc.l $00000000
00035CAA <AmiBlitz3.ab3@28142> str_systembuffer:      Dc.b "4096",0,0,0,0,0,0,0,0     ; string max 12 columns
00035CAE <AmiBlitz3.ab3@28144> databuffer:            Dc.l #DEFAULT_DATABUFFERSIZE    ; data buffer   ; replaced with a constant tomsmart1
00035CB2 <AmiBlitz3.ab3@28145>                        Dc.l $00000000
00035CBE <AmiBlitz3.ab3@28146> str_databuffer:        Dc.b "4096",0,0,0,0,0,0,0,0     ; string max 12 columns
00035CC2 <AmiBlitz3.ab3@28148> macrobuffer_size:      Dc.l #DEFAULT_MACROBUFFERSIZE   ; macro buffer ; was $00002000 ; replaced with a constant tomsmart1
00035CC6 <AmiBlitz3.ab3@28149>                        Dc.l $00000000
00035CD2 <AmiBlitz3.ab3@28150> str_macrobuffer:       Dc.b "40000",0,0,0,0,0,0,0      ; string max 12 columns
00035CD6 <AmiBlitz3.ab3@28152> stringbuffer:          Dc.l #DEFAULT_STRINGBUFFERSIZE  ; string buffer ; replaced with a constant tomsmart1
00035CDA <AmiBlitz3.ab3@28153>                        Dc.l $00000000
00035CE6 <AmiBlitz3.ab3@28154> str_stringbuffer:      Dc.b "10240",0,0,0,0,0,0,0      ; string max 12 columns
00035CE8 <AmiBlitz3.ab3@28156> maxobjects_value:      Dc.w $0064
00035CEC <AmiBlitz3.ab3@28157>                        Dc.l $00000000
00035CF8 <AmiBlitz3.ab3@28158> str_maxobjects_value:  Dc.b "100",0,0,0,0,0,0,0,0,0    ; string max 12 columns
00035CFA <AmiBlitz3.ab3@28160> maxobjects_value2:     Dc.w $0014
00035CFC <AmiBlitz3.ab3@28161>                        Dc.w $0000
00035D08 <AmiBlitz3.ab3@28163> str_maxobjects_value2: Dc.b "20",0,0,0,0,0,0,0,0,0,0   ; string max 12 columns
00035D09 <AmiBlitz3.ab3@28167> set_create_iconfile:   Dc.b $00
00035D0C <AmiBlitz3.ab3@28168> create_iconfile:       Dc.b $80,$01,$01                    ;create icon
00035D0E <AmiBlitz3.ab3@28169>                        Dc.b $00,$01
00035D0F <AmiBlitz3.ab3@28171> set_use_debugger:      Dc.b $00                            ; Flags.w
00035D12 <AmiBlitz3.ab3@28172> use_debugger:          Dc.b $80,$01,$01                    ; Activation.w
00035D14 <AmiBlitz3.ab3@28173>                        Dc.b $00,$01                        ; GadgetType.w
00035D18 <AmiBlitz3.ab3@28174> AL_0_11010:            Dc.b $00,$80,$01,$01                ; flags, activation
00035D1C <AmiBlitz3.ab3@28175> AL_0_1103C:            Dc.b $00,$80,$01,$01                ; flags, activation
00035D20 <AmiBlitz3.ab3@28176> AL_0_11068:            Dc.b $00,$80,$01,$01                ; flags, activation
00035D22 <AmiBlitz3.ab3@28177> AL_0_11094:            Ds.w 1
00035D23 <AmiBlitz3.ab3@28179> set_make_smallestcode: Ds.b 1
00035D26 <AmiBlitz3.ab3@28180> make_smallestcode:     Dc.b $00,$01,$01                    ;make smallest
00035D28 <AmiBlitz3.ab3@28181>                        Dc.b $00,$01
00035D29 <AmiBlitz3.ab3@28182> set_link_debuginfo:    Ds.b 1
00035D2C <AmiBlitz3.ab3@28183> link_debuginfo:        Dc.b $00,$01,$01                    ;create debuginfo
00035D2E <AmiBlitz3.ab3@28184>                        Dc.b $00,$01
00035F4E <AmiBlitz3.ab3@28189>   Ds.l 136         ;resident files STEP $44 piece 8
00035FCE <AmiBlitz3.ab3@28194> str_calcexpression:        Ds.l 32
00035FD2 <AmiBlitz3.ab3@28195> destbufferend_backup_calc: Ds.l 1             ; was calclibat
00035FDC <AmiBlitz3.ab3@28203>   MOVE.l destbufferend,destbufferend_backup_calc
00035FE2 <AmiBlitz3.ab3@28205> 
00035FE8 <AmiBlitz3.ab3@28207>   MOVE.l A7,errstack
00035FF2 <AmiBlitz3.ab3@28208>   MOVE.l #Calc_Error_Exit,errcont
0003601C <AmiBlitz3.ab3@28216>   !basic         ; get the flage for the conversion form the editor
00036060 <AmiBlitz3.ab3@28217>   !ComData_GetW{comWord_CalculatorButtonBinFlag,D0} : MOVE.w d0,CalculatorButtonBinFlag
000360A4 <AmiBlitz3.ab3@28218>   !ComData_GetW{comWord_CalculatorButtonDecFlag,D0} : MOVE.w d0,CalculatorButtonDecFlag
000360C2 <AmiBlitz3.ab3@28219>   !asm
000360C8 <AmiBlitz3.ab3@28222>   LEA str_calcexpression,A0
000360CE <AmiBlitz3.ab3@28230>   JSR setcvars
000360D4 <AmiBlitz3.ab3@28231>   JSR setsvars
000360DA <AmiBlitz3.ab3@28233>   CLR.w connest             ;no idea...
000360E0 <AmiBlitz3.ab3@28234>   LEA str_calcexpression,A5
000360E6 <AmiBlitz3.ab3@28235>   JSR evalconst3            ;evaluate constant
000360EC <AmiBlitz3.ab3@28237>   LEA str_calcexpression,A0
000360EE <AmiBlitz3.ab3@28238>   TST.l D3
000360F2 <AmiBlitz3.ab3@28239>    BPL.w 'ispos
000360F6 <AmiBlitz3.ab3@28240>   MOVE.b #$2D,(A0)+         ;'-'
000360F8 <AmiBlitz3.ab3@28241>   NEG.l D3
00036100 <AmiBlitz3.ab3@28244>   CMPI.w #$80,CalculatorButtonDecFlag
00036104 <AmiBlitz3.ab3@28245>    BEQ.w 'dec
00036106 <AmiBlitz3.ab3@28246>   MOVEQ.l #$00,D1
0003610E <AmiBlitz3.ab3@28247>   CMPI.w #$80,CalculatorButtonBinFlag
00036112 <AmiBlitz3.ab3@28248>    BNE.w 'hex
00036114 <AmiBlitz3.ab3@28251>   MOVEQ.l #$1F,D0
00036118 <AmiBlitz3.ab3@28252>   MOVE.b #$25,(A0)+      ;'%'
0003611A <AmiBlitz3.ab3@28255>       LSL.l #1,D3
0003611E <AmiBlitz3.ab3@28256>        BCC.w 'bzero
00036122 <AmiBlitz3.ab3@28257>       MOVE.b #"1",(A0)+
00036124 <AmiBlitz3.ab3@28258>       MOVEQ.l #-$01,D1
00036128 <AmiBlitz3.ab3@28259>   BRA.w 'bnext
0003612A <AmiBlitz3.ab3@28262>       TST.w D1
0003612E <AmiBlitz3.ab3@28263>       BEQ.w 'bnext
00036132 <AmiBlitz3.ab3@28264>       MOVE.b #"0",(A0)+
00036136 <AmiBlitz3.ab3@28267>  DBF D0,'bloop
00036138 <AmiBlitz3.ab3@28270>   TST.w D1
0003613C <AmiBlitz3.ab3@28271>   BNE.w 'pc1
00036140 <AmiBlitz3.ab3@28272>   MOVE.b #"0",(A0)+
00036142 <AmiBlitz3.ab3@28275>   CLR.b (A0)
00036146 <AmiBlitz3.ab3@28276>  BRA.w 'pc
00036148 <AmiBlitz3.ab3@28279>   MOVEQ.l #$07,D0
0003614C <AmiBlitz3.ab3@28280>   MOVE.b #$24,(A0)+  ;'$'
0003614E <AmiBlitz3.ab3@28283>     MOVE.l D3,D2
00036150 <AmiBlitz3.ab3@28284>     SWAP D2
00036152 <AmiBlitz3.ab3@28285>     LSR.w #8,D2
00036154 <AmiBlitz3.ab3@28286>     LSR.w #4,D2
00036158 <AmiBlitz3.ab3@28287>     ADDI.w #$30,D2
0003615C <AmiBlitz3.ab3@28288>     CMP.w #$3A,D2
00036160 <AmiBlitz3.ab3@28289>      BCS.w 'hok
00036162 <AmiBlitz3.ab3@28290>     ADDQ.w #7,D2
00036166 <AmiBlitz3.ab3@28293>     CMP.w #$30,D2
0003616A <AmiBlitz3.ab3@28294>     BEQ.w 'hzero
0003616C <AmiBlitz3.ab3@28295>     MOVE.b D2,(A0)+
0003616E <AmiBlitz3.ab3@28296>     MOVEQ.l #-$01,D1
00036172 <AmiBlitz3.ab3@28297>   BRA.w 'hnext
00036174 <AmiBlitz3.ab3@28300>     TST.w D1
00036178 <AmiBlitz3.ab3@28301>      BEQ.w 'hnext
0003617A <AmiBlitz3.ab3@28302>     MOVE.b D2,(A0)+
0003617C <AmiBlitz3.ab3@28305>     LSL.l #4,D3
00036180 <AmiBlitz3.ab3@28306>  DBF D0,'hloop
00036184 <AmiBlitz3.ab3@28308>  BRA.w 'bdone
00036186 <AmiBlitz3.ab3@28311>   MOVE.l D3,D2
0003618C <AmiBlitz3.ab3@28312>   JSR makelong          ;to long...
00036196 <AmiBlitz3.ab3@28319>   MOVE.l destbufferend_backup_calc,destbufferend
00036198 <AmiBlitz3.ab3@28321> RTS                         ; added tomsmart 2012 03 07 vor Calculator in PED
00036297 <AmiBlitz3.ab3@28325> str_cliarguments: Ds.b 255   ; a command line can acutally be 255 characters long
00036298 <AmiBlitz3.ab3@28327> Even
0003629A <AmiBlitz3.ab3@28341>     MOVE.b (a5)+,d0
0003629E <AmiBlitz3.ab3@28342>     BEQ 'l2
000362A2 <AmiBlitz3.ab3@28343>     CMP.b #$80,d0
000362A6 <AmiBlitz3.ab3@28344>     BNE 'l1
000362A8 <AmiBlitz3.ab3@28345>     MOVE.b (a5)+,d0
000362AC <AmiBlitz3.ab3@28346>     BEQ 'l2
000362B0 <AmiBlitz3.ab3@28347>     CMP.b #$02,d0
000362B4 <AmiBlitz3.ab3@28348>   BNE 'l1
000362B8 <AmiBlitz3.ab3@28351>     CMP.b #$20,(a5)+
000362BC <AmiBlitz3.ab3@28352>   BEQ 'l3
000362BE <AmiBlitz3.ab3@28353>   SUBQ.l #1,a5
000362C0 <AmiBlitz3.ab3@28354>   TST.b (a5)
000362C4 <AmiBlitz3.ab3@28355>   BEQ 'l2
000362C8 <AmiBlitz3.ab3@28356>   CMP.w #$8008,(a5)
000362CC <AmiBlitz3.ab3@28357>   BEQ 'l4
000362D0 <AmiBlitz3.ab3@28358>   CMP.w #$8009,(a5)
000362D4 <AmiBlitz3.ab3@28359>   BEQ 'l4
000362D8 <AmiBlitz3.ab3@28360>  BRA 'l1
000362DA <AmiBlitz3.ab3@28363>   ADDQ.l #2,a5
000362E0 <AmiBlitz3.ab3@28364>   JSR skiprest
000362E2 <AmiBlitz3.ab3@28365> RTS
000362E8 <AmiBlitz3.ab3@28368>   JSR nextline
000362EC <AmiBlitz3.ab3@28369>   BNE 'l1
000362EE <AmiBlitz3.ab3@28370> RTS
00036318 <AmiBlitz3.ab3@28374>   !basic
00036322 <AmiBlitz3.ab3@28375>   DateFormat 1
00036330 <AmiBlitz3.ab3@28376>   i.l=SystemDate
00036356 <AmiBlitz3.ab3@28377>   a$=Date$ (i)
000363D4 <AmiBlitz3.ab3@28378>   a$=Replace$(a$,"/",".")
000363DA <AmiBlitz3.ab3@28379>   GetD0 &a$
000363DC <AmiBlitz3.ab3@28380>   MOVEQ #8,d2
000363DE <AmiBlitz3.ab3@28381>   MOVE.l d0,a0
000363E0 <AmiBlitz3.ab3@28384>     MOVE.b (a0)+,d1
000363E6 <AmiBlitz3.ab3@28385>     JSR pokedata1b
000363EA <AmiBlitz3.ab3@28386>  DBF d2,'l1
000363EC <AmiBlitz3.ab3@28388>   MOVEQ #0,d0
000363EE <AmiBlitz3.ab3@28389>   MOVE.b (a0)+,d0
0003640C <AmiBlitz3.ab3@28390>   !asm
00036412 <AmiBlitz3.ab3@28391>   ADD.l #9,d2
00036418 <AmiBlitz3.ab3@28392>   ADD.l #9,a5
0003641A <AmiBlitz3.ab3@28393> RTS
00036444 <AmiBlitz3.ab3@28397>   !basic
0003644E <AmiBlitz3.ab3@28398>   DateFormat 0
0003645C <AmiBlitz3.ab3@28399>   i.l=SystemDate
00036482 <AmiBlitz3.ab3@28400>   a$=Date$ (i)
00036500 <AmiBlitz3.ab3@28401>   a$=Replace$(a$,"/",".")
00036506 <AmiBlitz3.ab3@28402>   GetD0 &a$
00036508 <AmiBlitz3.ab3@28403>   MOVEQ #8,d2
0003650A <AmiBlitz3.ab3@28404>   MOVE.l d0,a0
0003650C <AmiBlitz3.ab3@28407>     MOVE.b (a0)+,d1
00036512 <AmiBlitz3.ab3@28408>     JSR pokedata1b
00036516 <AmiBlitz3.ab3@28409>  DBF d2,'l1
00036518 <AmiBlitz3.ab3@28411>   MOVEQ #0,d0
0003651A <AmiBlitz3.ab3@28412>   MOVE.b (a0)+,d0
00036538 <AmiBlitz3.ab3@28413>   !asm
0003653E <AmiBlitz3.ab3@28414>   ADD.l #9,d2
00036544 <AmiBlitz3.ab3@28415>   ADD.l #13,a5
00036546 <AmiBlitz3.ab3@28416> RTS
00036570 <AmiBlitz3.ab3@28420>   !basic
0003657A <AmiBlitz3.ab3@28421>   DateFormat 1
00036588 <AmiBlitz3.ab3@28422>   i.l = SystemDate
000365AE <AmiBlitz3.ab3@28423>   a$ = Date$ (i)
0003662C <AmiBlitz3.ab3@28424>   a$ = Replace$(a$,"/",".")
00036632 <AmiBlitz3.ab3@28425>   GetD0 &a$
00036634 <AmiBlitz3.ab3@28426>   MOVEQ #8,d2
00036636 <AmiBlitz3.ab3@28427>   MOVE.l d0,a0
00036638 <AmiBlitz3.ab3@28430>     MOVE.b (a0)+,d1
0003663E <AmiBlitz3.ab3@28431>     JSR writebyte
00036642 <AmiBlitz3.ab3@28432>  DBF d2,'l1
00036644 <AmiBlitz3.ab3@28434>   MOVEQ #0,d0
00036646 <AmiBlitz3.ab3@28435>   MOVE.b (a0)+,d0
00036664 <AmiBlitz3.ab3@28436>   !asm
0003666A <AmiBlitz3.ab3@28437>   ADD.l #9,a5
0003666C <AmiBlitz3.ab3@28438> RTS
00036696 <AmiBlitz3.ab3@28442>   !basic
000366A0 <AmiBlitz3.ab3@28443>   DateFormat 0
000366AE <AmiBlitz3.ab3@28444>   i.l=SystemDate
000366D4 <AmiBlitz3.ab3@28445>   a$=Date$ (i)
00036752 <AmiBlitz3.ab3@28446>   a$=Replace$(a$,"/",".")
00036758 <AmiBlitz3.ab3@28447>   GetD0 &a$
0003675A <AmiBlitz3.ab3@28448>   MOVEQ #8,d2
0003675C <AmiBlitz3.ab3@28449>   MOVE.l d0,a0
0003675E <AmiBlitz3.ab3@28452>     MOVE.b (a0)+,d1
00036764 <AmiBlitz3.ab3@28453>     JSR writebyte
00036768 <AmiBlitz3.ab3@28454>  DBF d2,'l1
0003676A <AmiBlitz3.ab3@28456>   MOVEQ #0,d0
0003676C <AmiBlitz3.ab3@28457>   MOVE.b (a0)+,d0
0003678A <AmiBlitz3.ab3@28458>   !asm
00036790 <AmiBlitz3.ab3@28459>   ADD.l #13,a5
00036792 <AmiBlitz3.ab3@28460> RTS
00036794 <AmiBlitz3.ab3@28464>   MOVE.l d2,-(a7)                                          ; D2 -> stack
00036796 <AmiBlitz3.ab3@28465>   MOVE.l a5,d0
000367C0 <AmiBlitz3.ab3@28466>   !basic
000367C4 <AmiBlitz3.ab3@28467>   _myD0.l = PutD0
000367CE <AmiBlitz3.ab3@28468>   If _myD0
00036814 <AmiBlitz3.ab3@28469>     verstring$ = Left$(Peek.s(_myD0),9+3)
00036866 <AmiBlitz3.ab3@28470>     verstring$ = UnRight$(verstring$,3)                      ; Compilerkonstantenbeginn \__ entfernen
0003686C <AmiBlitz3.ab3@28471>   Else
000368A6 <AmiBlitz3.ab3@28472>     error{"INTERNAL: Invalid pointer in version_string!"}
000368B6 <AmiBlitz3.ab3@28477>   actual_version.l = Peek.l(?versioninformation)
000368C6 <AmiBlitz3.ab3@28478>   actual_build.l   = Peek.l(?number_of_builds)
000368EA <AmiBlitz3.ab3@28480>   Format "00"
00036920 <AmiBlitz3.ab3@28481>   Select verstring$
00036944 <AmiBlitz3.ab3@28483>     Case "VER_MAJOR"
00036980 <AmiBlitz3.ab3@28484>      put_versionstr$ = Str$(actual_version LSR 24)
000369AA <AmiBlitz3.ab3@28486>     Case "VER_MINOR"
000369EE <AmiBlitz3.ab3@28487>      put_versionstr$ = Str$((actual_version LSL 8) LSR 24)
00036A18 <AmiBlitz3.ab3@28489>     Case "VER_PATCH"
00036A5C <AmiBlitz3.ab3@28490>      put_versionstr$ = Str$((actual_version LSL 16) LSR 24 )
00036A86 <AmiBlitz3.ab3@28492>     Case "VER_BUILD"
00036AAA <AmiBlitz3.ab3@28493>      Format ""
00036ADE <AmiBlitz3.ab3@28494>      put_versionstr$ = Str$(actual_build)
00036AE4 <AmiBlitz3.ab3@28496>     Default
00036B0C <AmiBlitz3.ab3@28497>      put_versionstr$ = "{unknown compilerconstant}"
00036B1A <AmiBlitz3.ab3@28500>   End Select
00036B3E <AmiBlitz3.ab3@28501>   Format ""
00036B4E <AmiBlitz3.ab3@28503>   GetD0 FLen(put_versionstr$)                              ; laenge zielstring -> Stack
00036B50 <AmiBlitz3.ab3@28504>   MOVE.l d0,d2
00036B52 <AmiBlitz3.ab3@28505>   MOVE.l d2,-(a7)
00036B56 <AmiBlitz3.ab3@28506>   SUB #1,d2
00036B5C <AmiBlitz3.ab3@28508>   GetD0 &put_versionstr$                                   ; kopieren des neuen Strings in den Zielstring
00036B5E <AmiBlitz3.ab3@28509>   MOVE.l d0,a0
00036B60 <AmiBlitz3.ab3@28512>     MOVE.b (a0)+,d1
00036B66 <AmiBlitz3.ab3@28513>     JSR pokedata1b
00036B6A <AmiBlitz3.ab3@28514>  DBF d2,'l1
00036B6C <AmiBlitz3.ab3@28516>   MOVEQ #0,d0
00036B8A <AmiBlitz3.ab3@28517>   !asm
00036B8C <AmiBlitz3.ab3@28518>   MOVE.l (a7)+,d0                                          ; laenge Zielstring <- Stack
00036B8E <AmiBlitz3.ab3@28519>   MOVE.l (a7)+,d2                                          ; d2 <-Stack
00036B90 <AmiBlitz3.ab3@28520>   ADD.l d0,d2
00036B96 <AmiBlitz3.ab3@28521>   ADD.l #12,a5                                             ; string_ptr um konstante weitersetzen
00036B98 <AmiBlitz3.ab3@28522>   MOVEQ #0,d0
00036B9A <AmiBlitz3.ab3@28523> RTS
00036B9C <AmiBlitz3.ab3@28527>   MOVE.l a5,d0
00036BC6 <AmiBlitz3.ab3@28528>   !basic
00036BCA <AmiBlitz3.ab3@28529>   _myD0.l = PutD0
00036BD4 <AmiBlitz3.ab3@28530>   If _myD0
00036C1A <AmiBlitz3.ab3@28531>     verstring$ = Left$(Peek.s(_myD0),9+3)
00036C6C <AmiBlitz3.ab3@28532>     verstring$ = UnRight$(verstring$,3)                      ; Compilerkonstantenbeginn \__ entfernen
00036C72 <AmiBlitz3.ab3@28533>   Else
00036CAC <AmiBlitz3.ab3@28534>     error{"INTERNAL: Invalid pointer in version_string_dc!"}
00036CBC <AmiBlitz3.ab3@28539>   actual_version.l = Peek.l(?versioninformation)
00036CCC <AmiBlitz3.ab3@28540>   actual_build.l   = Peek.l(?number_of_builds)
00036CF0 <AmiBlitz3.ab3@28542>   Format ""
00036D26 <AmiBlitz3.ab3@28543>   Select verstring$
00036D4A <AmiBlitz3.ab3@28545>     Case "VER_MAJOR"
00036D86 <AmiBlitz3.ab3@28546>      put_versionstr$ = Str$(actual_version LSR 24)
00036DB0 <AmiBlitz3.ab3@28548>     Case "VER_MINOR"
00036DF4 <AmiBlitz3.ab3@28549>      put_versionstr$ = Str$((actual_version LSL 8) LSR 24)
00036E1E <AmiBlitz3.ab3@28551>     Case "VER_PATCH"
00036E62 <AmiBlitz3.ab3@28552>      put_versionstr$ = Str$((actual_version LSL 16) LSR 24 )
00036E8C <AmiBlitz3.ab3@28554>     Case "VER_BUILD"
00036EB0 <AmiBlitz3.ab3@28555>      Format ""
00036EE4 <AmiBlitz3.ab3@28556>      put_versionstr$ = Str$(actual_build)
00036EEA <AmiBlitz3.ab3@28558>     Default
00036F12 <AmiBlitz3.ab3@28559>      put_versionstr$ = "{unknown compilerconstant}"
00036F20 <AmiBlitz3.ab3@28561>   End Select
00036F44 <AmiBlitz3.ab3@28562>   Format ""
00036F5A <AmiBlitz3.ab3@28564>   GetD0 FLen(put_versionstr$)-1
00036F5C <AmiBlitz3.ab3@28565>   MOVE.l d0,d2
00036F62 <AmiBlitz3.ab3@28567>   GetD0 &put_versionstr$                                   ; kopieren des neuen Strings in den Zielstring
00036F64 <AmiBlitz3.ab3@28568>   MOVE.l d0,a0
00036F66 <AmiBlitz3.ab3@28571>     MOVE.b (a0)+,d1
00036F6C <AmiBlitz3.ab3@28572>     JSR writebyte
00036F70 <AmiBlitz3.ab3@28573>  DBF d2,'l1
00036F72 <AmiBlitz3.ab3@28575>   MOVEQ #0,d0
00036F74 <AmiBlitz3.ab3@28576>   MOVE.b -(a0),d0                                          ; letztes Zeichen in D0
00036F92 <AmiBlitz3.ab3@28577>   !asm
00036F98 <AmiBlitz3.ab3@28578>   ADD.l #12,a5                                             ; string_ptr um konstante weitersetzen
00036F9A <AmiBlitz3.ab3@28579> RTS
00036F9C <AmiBlitz3.ab3@28681>   MOVE.l a5,-(a7)
00036FC8 <AmiBlitz3.ab3@28682>   !fget
00036FCC <AmiBlitz3.ab3@28683>   CMP.w #".",d0
00036FD0 <AmiBlitz3.ab3@28684>   BNE 'skip
00036FD4 <AmiBlitz3.ab3@28685>   MOVEM.l a2/d2,-(a7)
00036FDA <AmiBlitz3.ab3@28686>   LEA newtypebase,a2
00036FE0 <AmiBlitz3.ab3@28687>   JSR getparameter2
00036FE4 <AmiBlitz3.ab3@28688>   BEQ.w JUMP_syntaxerr
00036FEA <AmiBlitz3.ab3@28689>   JSR findtype
00036FEE <AmiBlitz3.ab3@28690>   BNE.w JUMP_notypeerr2
00036FF4 <AmiBlitz3.ab3@28691>   MOVE.l a2,typetocast
00036FF8 <AmiBlitz3.ab3@28692>   MOVEM.l (a7)+,a2/d2
00036FFC <AmiBlitz3.ab3@28693>   CMP.w #")",d0
00037000 <AmiBlitz3.ab3@28694>   BNE JUMP_errorbracketmiss
00037002 <AmiBlitz3.ab3@28695>   ADDQ.l #4,a7
0003702E <AmiBlitz3.ab3@28696>   !fget
00037034 <AmiBlitz3.ab3@28697>   JMP nocast
00037036 <AmiBlitz3.ab3@28700>   MOVE.l (a7)+,a5
0003703C <AmiBlitz3.ab3@28701> JMP JL_0_A410
00037042 <AmiBlitz3.ab3@28704> JUMP_errorbracketmiss JMP errorbracketmiss
0003706C <AmiBlitz3.ab3@28707> Function.l ab3_GetIncludeLock{filename.s}
0003708C <AmiBlitz3.ab3@28708>   incLock.l  = Lock_ (&filename,#ACCESS_READ)   ; try bla.blub
000370E4 <AmiBlitz3.ab3@28709>   ex.s       = dos_GetExt{filename}
000370F8 <AmiBlitz3.ab3@28711>   If incLock = False
0003716C <AmiBlitz3.ab3@28712>     filename = dos_SetExt{filename,"ab3"}
0003718C <AmiBlitz3.ab3@28713>     incLock  = Lock_ (&filename,#ACCESS_READ)   ; try bla.ab3
000371A0 <AmiBlitz3.ab3@28716>   If incLock = False
00037214 <AmiBlitz3.ab3@28717>     filename = dos_SetExt{filename,"ab2"}
00037234 <AmiBlitz3.ab3@28718>     incLock  = Lock_ (&filename,#ACCESS_READ)   ; try bla.ab2
00037248 <AmiBlitz3.ab3@28721>   If incLock = False
000372BC <AmiBlitz3.ab3@28722>     filename = dos_SetExt{filename,"bb2"}
000372DC <AmiBlitz3.ab3@28723>     incLock  = Lock_ (&filename,#ACCESS_READ)   ; try bla.bb2
000372F0 <AmiBlitz3.ab3@28726>   If incLock = False
00037382 <AmiBlitz3.ab3@28727>     filename = dos_SetExt{filename,ex+".ab3"}
000373A2 <AmiBlitz3.ab3@28728>     incLock  = Lock_ (&filename,#ACCESS_READ)   ; try bla.blub.ab3
000373B6 <AmiBlitz3.ab3@28731>   If incLock = False
0003742A <AmiBlitz3.ab3@28732>     filename = dos_SetExt{filename,"ab2"}
0003744A <AmiBlitz3.ab3@28733>     incLock  = Lock_ (&filename,#ACCESS_READ)   ; try bla.blub.ab2
0003745E <AmiBlitz3.ab3@28736>   If incLock = False
000374D2 <AmiBlitz3.ab3@28737>     filename = dos_SetExt{filename,"bb2"}
000374F2 <AmiBlitz3.ab3@28738>     incLock  = Lock_ (&filename,#ACCESS_READ)   ; try bla.blub.bb2
000374FC <AmiBlitz3.ab3@28741>  Function Return incLock
00037516 <AmiBlitz3.ab3@28742> End Function
00037540 <AmiBlitz3.ab3@28746>   !basic
0003756A <AmiBlitz3.ab3@28747>   incString.s = Peek$(?ptr_parameterstore)
00037598 <AmiBlitz3.ab3@28749>   !ComData_LEA{comStr_CurrentDir,D0}                        ; get pointer to current Sourcefiledir
0003759C <AmiBlitz3.ab3@28750>   incDirP.l   = PutD0                                       ;    "
000375C4 <AmiBlitz3.ab3@28751>   incDir_.s   = Peek.s(incDirP)                             ; get current Sourcefiledir
00037644 <AmiBlitz3.ab3@28752>   incFile.s   = dos_AddPart{incDir_,incString}              ; adding Sourcefiledir and Includestring
00037676 <AmiBlitz3.ab3@28753>   incLock.l   = ab3_GetIncludeLock{incFile}                 ; check if file exist
0003768A <AmiBlitz3.ab3@28755>   If incLock = False ; not found => check default Include Directory
0003769A <AmiBlitz3.ab3@28756>     incDirP.l = Peek.l(?incd)
000376A4 <AmiBlitz3.ab3@28757>     If incDirP
000376CC <AmiBlitz3.ab3@28758>       incDir_.s = Peek.s(incDirP)
000376D2 <AmiBlitz3.ab3@28759>     Else
0003773C <AmiBlitz3.ab3@28760>       incDir_.s = dos_AddPart{Peek.s(?str_blitz3assign),"Sourcecodes/Includes"}
000377BC <AmiBlitz3.ab3@28762>     incFile.s = dos_AddPart{incDir_,incString}
000377EE <AmiBlitz3.ab3@28763>     incLock.l = ab3_GetIncludeLock{incFile}
00037802 <AmiBlitz3.ab3@28766>   If incLock = False ; not found => check relative to current source
0003781A <AmiBlitz3.ab3@28767>     incDepth.l = Peek.w(?ininclude)-1
00037840 <AmiBlitz3.ab3@28768>     If incDepth >= 0 AND incDepth < #maxincludes
000378A0 <AmiBlitz3.ab3@28769>       incDir_.s = dos_PathPart{incdim (incDepth)} ;= Peek.s(?includetemp2)
00037920 <AmiBlitz3.ab3@28770>       incFile.s = dos_AddPart{incDir_,incString}
00037952 <AmiBlitz3.ab3@28771>       incLock.l = ab3_GetIncludeLock{incFile}
00037966 <AmiBlitz3.ab3@28775>   If incLock = False ; still not found => check default Include Directory and name only
00037976 <AmiBlitz3.ab3@28776>     incDirP.l = Peek.l(?incd)
00037980 <AmiBlitz3.ab3@28777>     If incDirP
000379A8 <AmiBlitz3.ab3@28778>       incDir_.s = Peek.s(incDirP)
000379AE <AmiBlitz3.ab3@28779>     Else
00037A18 <AmiBlitz3.ab3@28780>       incDir_.s = dos_AddPart{Peek.s(?str_blitz3assign),"Sourcecodes/Includes"}
00037AC6 <AmiBlitz3.ab3@28782>     incFile.s = dos_AddPart{incDir_,dos_FilePart{incString}}
00037AF8 <AmiBlitz3.ab3@28783>     incLock.l = ab3_GetIncludeLock{incFile}
00037B02 <AmiBlitz3.ab3@28786>   If incLock
00037B18 <AmiBlitz3.ab3@28787>     MaxLen incFile = 1024
00037B3C <AmiBlitz3.ab3@28788>     NameFromLock_ incLock,&incFile,1024
00037B66 <AmiBlitz3.ab3@28789>     incFile = Peek.s(&incFile)
00037B9E <AmiBlitz3.ab3@28790>     Poke$ ?ptr_parameterstore,incFile
00037BB2 <AmiBlitz3.ab3@28791>     i = FLen(incFile)
00037BBE <AmiBlitz3.ab3@28792>     GetReg d0,i
00037BC4 <AmiBlitz3.ab3@28793>     MOVE.l d0,tempstore
00037BD4 <AmiBlitz3.ab3@28794>     UnLock_ incLock
00037BF2 <AmiBlitz3.ab3@28797>   !asm
00037BF8 <AmiBlitz3.ab3@28798>   TST.l tempstore
00037BFC <AmiBlitz3.ab3@28799>    BEQ 'l1
00037C02 <AmiBlitz3.ab3@28800>   MOVE.l tempstore,d2
00037C04 <AmiBlitz3.ab3@28803> RTS
00037C2E <AmiBlitz3.ab3@28807>   !basic
00037C58 <AmiBlitz3.ab3@28808>   incString.s = Peek$(?ptr_parameterstore)                  ; get the string
00037C86 <AmiBlitz3.ab3@28809>   !ComData_LEA{comStr_CurrentDir,D0}                        ; get pointer to current Sourcefiledir
00037C8A <AmiBlitz3.ab3@28810>   incDirP.l   = PutD0                                       ;    "
00037CB2 <AmiBlitz3.ab3@28811>   incDir_.s   = Peek.s(incDirP)                             ; get current Sourcefiledir
00037D32 <AmiBlitz3.ab3@28812>   incFile.s   = dos_AddPart{incDir_,incString}              ; adding Sourcefiledir and Includestring
00037D52 <AmiBlitz3.ab3@28813>   incLock.l   = Lock_(&incFile,#ACCESS_READ)                ; check if file exist
00037D66 <AmiBlitz3.ab3@28815>   If incLock = False                                        ; not found => try orignal string only to find
00037D86 <AmiBlitz3.ab3@28816>     incLock.l = Lock_(&incString,#ACCESS_READ)
00037D90 <AmiBlitz3.ab3@28819>   If incLock                                                ; found => store full path
00037DA6 <AmiBlitz3.ab3@28820>     MaxLen incFile = 1024
00037DCA <AmiBlitz3.ab3@28821>     NameFromLock_ incLock,&incFile,1024
00037DF4 <AmiBlitz3.ab3@28822>     incFile = Peek.s(&incFile)
00037E2C <AmiBlitz3.ab3@28823>     Poke$ ?ptr_parameterstore,incFile
00037E38 <AmiBlitz3.ab3@28826> 
00037E56 <AmiBlitz3.ab3@28827>   !asm
00037E58 <AmiBlitz3.ab3@28828> RTS
00037E5E <AmiBlitz3.ab3@28839>   JSR Aclearallvars
00037E64 <AmiBlitz3.ab3@28840>   JSR free_unusedfunctions
00037E6E <AmiBlitz3.ab3@28855>   MOVE.l #"NORE",reqmode
00037E74 <AmiBlitz3.ab3@28856> JSR handle_compileerror
00037E76 <AmiBlitz3.ab3@28859>   MOVE.l d0,-(a7)
00037E78 <AmiBlitz3.ab3@28860>   MOVE.l a5,d0
00037E82 <AmiBlitz3.ab3@28861>   !basica7
00037E86 <AmiBlitz3.ab3@28862>   i.l = PutD0
00037E90 <AmiBlitz3.ab3@28863>   If i
00037EB8 <AmiBlitz3.ab3@28864>     a$ = Peek$(i)
00037EEA <AmiBlitz3.ab3@28865>     b$ = Peeks$(i-7,7)
00038022 <AmiBlitz3.ab3@28867> 
00038028 <AmiBlitz3.ab3@28868>     MOVE.l d0,result
0003802C <AmiBlitz3.ab3@28870>   !asma7
0003802E <AmiBlitz3.ab3@28871>   MOVE.l (a7)+,d0
00038030 <AmiBlitz3.ab3@28872> RTS
0003805A <AmiBlitz3.ab3@28876>   !basic
00038088 <AmiBlitz3.ab3@28877>   !ComData_LEA{comStr_CurrentDir,D0}
0003808C <AmiBlitz3.ab3@28878>   currentDirP.l = PutD0
000380BA <AmiBlitz3.ab3@28880>   !ComData_LEA{comStr_SourceName,D0}
000380BE <AmiBlitz3.ab3@28881>   fileNameP.l = PutD0
000380E6 <AmiBlitz3.ab3@28883>   check_dirname$  = Peek$(currentDirP)
0003810E <AmiBlitz3.ab3@28884>   check_filename$ = Peek$(fileNameP)
00038194 <AmiBlitz3.ab3@28885>   If (olddirname$<>check_dirname$) OR (oldfilename$<>check_filename$)
0003819A <AmiBlitz3.ab3@28886>     JSR free_unusedfunctions
000381E4 <AmiBlitz3.ab3@28888>   olddirname$ = Peek$(check_dirname$)
0003822E <AmiBlitz3.ab3@28889>   oldfilename$ = Peek$(check_filename$)
00038258 <AmiBlitz3.ab3@28890>   For i = 0 To #maxincludes-1
0003826C <AmiBlitz3.ab3@28891>     incline(i) = 0
0003827C <AmiBlitz3.ab3@28892>   Next
0003829A <AmiBlitz3.ab3@28893>   !asm
0003829C <AmiBlitz3.ab3@28894> RTS
0003829E <AmiBlitz3.ab3@28898>   MOVEQ #0,d1
000382A0 <AmiBlitz3.ab3@28901>   MOVE.b (a5)+,d0
000382A4 <AmiBlitz3.ab3@28902>   BEQ 'er1
000382A8 <AmiBlitz3.ab3@28903>   CMP.b #$20,d0
000382AC <AmiBlitz3.ab3@28904>   BEQ 'l1
000382AE <AmiBlitz3.ab3@28905>   ADDQ #1,d1
000382B2 <AmiBlitz3.ab3@28906>   CMP.b #$22,d0
000382B6 <AmiBlitz3.ab3@28907>   BNE 'l1
000382B8 <AmiBlitz3.ab3@28908>  RTS
000382BE <AmiBlitz3.ab3@28911> JMP syntaxerr
000382E2 <AmiBlitz3.ab3@28915> erro1t   Dc.b "Only one BSS / Chip Segment allowed",0 : Even
00038300 <AmiBlitz3.ab3@28916> nodata   Dc.b "BSS Segment contains Data!!!!",0       : Even
00038306 <AmiBlitz3.ab3@28921>   TST.b exdebug
0003830A <AmiBlitz3.ab3@28922>   BNE 'l10
00038310 <AmiBlitz3.ab3@28923>   MOVE.l #$4e71,d1
00038316 <AmiBlitz3.ab3@28924>   JSR writeword
0003831C <AmiBlitz3.ab3@28925>   MOVE.l destpointer,d0
0003831E <AmiBlitz3.ab3@28926>   MOVE.l d0,d1
00038320 <AmiBlitz3.ab3@28927>   ADDQ.l #3,d1
00038326 <AmiBlitz3.ab3@28928>   AND.l #$fffffffc,d1
0003832C <AmiBlitz3.ab3@28929>   MOVE.l d1,destpointer
00038332 <AmiBlitz3.ab3@28930>   SUB.l destpointer,d0
00038336 <AmiBlitz3.ab3@28931>   BEQ 'lnf1
00038340 <AmiBlitz3.ab3@28932>   CMP.l #-1,bssstart
00038344 <AmiBlitz3.ab3@28933>   BNE 'lnf1
0003834E <AmiBlitz3.ab3@28934>   CMP.l #-1,chipstart
00038352 <AmiBlitz3.ab3@28935>   BNE 'lnf1
00038358 <AmiBlitz3.ab3@28936>   MOVE.l destpointer,a4
0003835E <AmiBlitz3.ab3@28937>   TST.w dontwrite
00038362 <AmiBlitz3.ab3@28938>   BNE 'lnf1
00038368 <AmiBlitz3.ab3@28939>   MOVE.w #$4e71,-2(a4)
00038372 <AmiBlitz3.ab3@28942>   CMP.l #-1,bssstart
00038376 <AmiBlitz3.ab3@28943>   BEQ 'l11
0003837C <AmiBlitz3.ab3@28944>   MOVE.l #erro1t,-(a7)
00038382 <AmiBlitz3.ab3@28945>  JMP handle_compileerror
0003838C <AmiBlitz3.ab3@28948>   MOVE.l destpointer,bssstart
00038394 <AmiBlitz3.ab3@28949>   MOVE.b #1,bssmode
0003839A <AmiBlitz3.ab3@28952>   TST.b chipmode
0003839E <AmiBlitz3.ab3@28953>   BEQ 'l10
000383A8 <AmiBlitz3.ab3@28954>   MOVE.l destpointer,chipend
000383AE <AmiBlitz3.ab3@28955>   CLR.b chipmode
000383B4 <AmiBlitz3.ab3@28958>   JSR get1bytemain
000383B6 <AmiBlitz3.ab3@28959> RTS
000383BC <AmiBlitz3.ab3@28963>    TST.b exdebug
000383C0 <AmiBlitz3.ab3@28964>   BNE 'x1
000383C6 <AmiBlitz3.ab3@28965>   MOVE.l destpointer,d0
000383CC <AmiBlitz3.ab3@28966>   MOVE.l d0,realbssend
000383D2 <AmiBlitz3.ab3@28967>   MOVE.l #$4e71,d1
000383D8 <AmiBlitz3.ab3@28968>   JSR writeword
000383DE <AmiBlitz3.ab3@28969>   MOVE.l destpointer,d0
000383E0 <AmiBlitz3.ab3@28970>   MOVE.l d0,d1
000383E2 <AmiBlitz3.ab3@28971>   ADDQ.l #3,d1
000383E8 <AmiBlitz3.ab3@28972>   AND.l #$fffffffc,d1
000383EE <AmiBlitz3.ab3@28973>   MOVE.l d1,destpointer
000383F4 <AmiBlitz3.ab3@28974>   SUB.l destpointer,d0
000383F8 <AmiBlitz3.ab3@28975>   BEQ 'lnf1
000383FE <AmiBlitz3.ab3@28976>   MOVE.l destpointer,a4
00038408 <AmiBlitz3.ab3@28977>   CMP.l #-1,bssstart
0003840C <AmiBlitz3.ab3@28978>   BNE 'lnf1
00038416 <AmiBlitz3.ab3@28979>   CMP.l #-1,chipstart
0003841A <AmiBlitz3.ab3@28980>   BNE 'lnf1
00038420 <AmiBlitz3.ab3@28981>   TST.w dontwrite
00038424 <AmiBlitz3.ab3@28982>   BNE 'lnf1
0003842A <AmiBlitz3.ab3@28983>   MOVE.w #$4e71,-2(a4)
00038430 <AmiBlitz3.ab3@28986>   TST.b bssmode
00038434 <AmiBlitz3.ab3@28987>   BEQ 'l10
0003843E <AmiBlitz3.ab3@28988>   MOVE.l destpointer,bssend
00038444 <AmiBlitz3.ab3@28989>   CLR.b bssmode
0003844E <AmiBlitz3.ab3@28994>   CMP.l #-1,chipstart
00038452 <AmiBlitz3.ab3@28995>   BEQ 'l11
00038458 <AmiBlitz3.ab3@28996>   MOVE.l #erro1t,-(a7)
0003845E <AmiBlitz3.ab3@28997>  JMP handle_compileerror
00038468 <AmiBlitz3.ab3@29000>   MOVE.l destpointer,chipstart
00038470 <AmiBlitz3.ab3@29001>   MOVE.b #1,chipmode
00038476 <AmiBlitz3.ab3@29004>   JSR get1bytemain
00038478 <AmiBlitz3.ab3@29005> RTS
000384A2 <AmiBlitz3.ab3@29009>   !basic
000384B4 <AmiBlitz3.ab3@29019>   i.l = Peek.w(?ininclude)
000384DA <AmiBlitz3.ab3@29020>   If i>=0 AND i<#maxincludes
0003850C <AmiBlitz3.ab3@29021>     incdim (i) = Peek.s(?includetemp2)
00038526 <AmiBlitz3.ab3@29022>     incline(i) = Peek.l(?includeline)
00038530 <AmiBlitz3.ab3@29024>     If CLIMode
000385DE <AmiBlitz3.ab3@29025>       If cli_verbose>=2 Then NPrint "Include \\22",incdim(i),"\\22..."
000385FC <AmiBlitz3.ab3@29029>   !asm
000385FE <AmiBlitz3.ab3@29030> RTS
00038628 <AmiBlitz3.ab3@29034>   !basic
0003863A <AmiBlitz3.ab3@29035>   i.l = Peek.w(?ininclude)
00038660 <AmiBlitz3.ab3@29036>   If i>=0 AND i<#maxincludes
00038690 <AmiBlitz3.ab3@29037>     incdim (i) = ""
000386A4 <AmiBlitz3.ab3@29038>     incline(i) = 0
000386DC <AmiBlitz3.ab3@29039>     If i>0 Then Poke.l (?includeline),incline(i-1)+1
000386FA <AmiBlitz3.ab3@29041>   !asm
000386FC <AmiBlitz3.ab3@29042> RTS
00038702 <AmiBlitz3.ab3@29046>   LEA replacedat,a0
00038706 <AmiBlitz3.ab3@29047>   Dc.w $3181,$0A00                                         ;MOVE.w d1,0(a0,d0.l*2)
00038708 <AmiBlitz3.ab3@29048> RTS
0003870E <AmiBlitz3.ab3@29052>   TST.b fpu
00038712 <AmiBlitz3.ab3@29053>   BEQ 'l1
0003871C <AmiBlitz3.ab3@29056>   MOVE.l destpointer,newinitaddr
00038722 <AmiBlitz3.ab3@29057>   JSR writeword
00038728 <AmiBlitz3.ab3@29058>   JSR writelong
0003872A <AmiBlitz3.ab3@29059> RTS
0003872C <AmiBlitz3.ab3@29064>   TST.b (a5)
00038730 <AmiBlitz3.ab3@29065>    BEQ.s 'll20
00038734 <AmiBlitz3.ab3@29066>   CMP.b #$20,(a5)
00038738 <AmiBlitz3.ab3@29067>    BNE.s 'll10
0003873A <AmiBlitz3.ab3@29068>   ADDQ.l #1,a5
0003873E <AmiBlitz3.ab3@29069>  BRA.s 'll21
00038742 <AmiBlitz3.ab3@29072>   CMP.b #";",(a5)
00038746 <AmiBlitz3.ab3@29073>   BNE.s 'll20
00038748 <AmiBlitz3.ab3@29076>   TST.b (a5)+
0003874C <AmiBlitz3.ab3@29077>   BEQ.s 'll23
00038750 <AmiBlitz3.ab3@29078>  BRA.s 'll25
00038752 <AmiBlitz3.ab3@29081>   SUBQ.l #1,a5
00038754 <AmiBlitz3.ab3@29084> RTS
00038758 <AmiBlitz3.ab3@29088>   MOVEM.l a2/d2,-(a7)
0003875A <AmiBlitz3.ab3@29089>   MOVEQ #0,d2
00038760 <AmiBlitz3.ab3@29090>   LEA ptr_parameterstore,a0
00038766 <AmiBlitz3.ab3@29091>   LEA chartab,a2
00038768 <AmiBlitz3.ab3@29094>   MOVE.b (a5),d0
0003876C <AmiBlitz3.ab3@29095>   TST.b 0(a2,d0)
00038770 <AmiBlitz3.ab3@29096>   BNE 'l10
00038772 <AmiBlitz3.ab3@29097>   ADDQ.l #1,a5
00038774 <AmiBlitz3.ab3@29098>   MOVE.b d0,(a0)+
00038776 <AmiBlitz3.ab3@29099>   ADDQ.l #1,d2
0003877A <AmiBlitz3.ab3@29100>  BRA fc2
0003877C <AmiBlitz3.ab3@29103>   CLR.b (a0)+
00038782 <AmiBlitz3.ab3@29104>   JSR findlabel2
00038784 <AmiBlitz3.ab3@29105>   MOVE.l a2,a0
00038788 <AmiBlitz3.ab3@29106>   MOVEM.l (a7)+,a2/d2
0003878A <AmiBlitz3.ab3@29107> RTS
0003878C <AmiBlitz3.ab3@29111>   TST.l d0
00038790 <AmiBlitz3.ab3@29112>   BNE 'l10
00038796 <AmiBlitz3.ab3@29113>     MOVE.l #syntax_,-(a7)
0003879C <AmiBlitz3.ab3@29114>  JMP handle_compileerror
000387A2 <AmiBlitz3.ab3@29117>   CMP.l #1,d0
000387A6 <AmiBlitz3.ab3@29118>   BNE 'l20
000387AC <AmiBlitz3.ab3@29119>     MOVE.l #overflow,-(a7)
000387B2 <AmiBlitz3.ab3@29120>  JMP handle_compileerror
000387B4 <AmiBlitz3.ab3@29123>   ADD.l a2,d0
000387B6 <AmiBlitz3.ab3@29124>   MOVE.l d0,-(a7)
000387BC <AmiBlitz3.ab3@29125> JMP handle_compileerror
000387C2 <AmiBlitz3.ab3@29129>   JMP _return
000387C8 <AmiBlitz3.ab3@29130>   JMP _return
000387CE <AmiBlitz3.ab3@29131>   JMP _return
000387D4 <AmiBlitz3.ab3@29132>   JMP _return
000387DA <AmiBlitz3.ab3@29133>   JMP _return
000387E0 <AmiBlitz3.ab3@29134>   JMP _return
000387E6 <AmiBlitz3.ab3@29135>   JMP _return
000387EC <AmiBlitz3.ab3@29136>   JMP _return
000387F2 <AmiBlitz3.ab3@29137>   JMP _return
000387F8 <AmiBlitz3.ab3@29138>   JMP _return
000387FE <AmiBlitz3.ab3@29139>   JMP Atokejsr
00038804 <AmiBlitz3.ab3@29140>   JMP writeinit
0003880A <AmiBlitz3.ab3@29141>   JMP macroexecute
00038810 <AmiBlitz3.ab3@29142>   JMP findnext
00038816 <AmiBlitz3.ab3@29143>   JMP replacelib
0003881C <AmiBlitz3.ab3@29144>   JMP findconstant2
00038822 <AmiBlitz3.ab3@29145>   JMP findchar                                             ;char in d1
00038828 <AmiBlitz3.ab3@29146>   JMP stripspaces
0003882E <AmiBlitz3.ab3@29147>   JMP calc                                                 ;d0 varmode
00038834 <AmiBlitz3.ab3@29148>   JMP error
0003883A <AmiBlitz3.ab3@29149>   JMP writelong                                            ;d1 value
00038840 <AmiBlitz3.ab3@29150>   JMP writeword                                            ;d1 value
00038846 <AmiBlitz3.ab3@29151>   JMP writebyte                                            ;d1 value
0003884C <AmiBlitz3.ab3@29152> JMP exit
00038850 <AmiBlitz3.ab3@29156>   destpointer:    Ds.l 1                                ;pc org source      ;Ds.w 1
00038852 <AmiBlitz3.ab3@29159>   fast            Dc.w 0
00038854 <AmiBlitz3.ab3@29160>   fpu             Dc.w 0
00038856 <AmiBlitz3.ab3@29161>   newsyntax       Dc.w 0
00038857 <AmiBlitz3.ab3@29163>   optistring      Dc.b 0
00038858 <AmiBlitz3.ab3@29164>   optistring2     Dc.b 0
00038859 <AmiBlitz3.ab3@29165>   optiarray       Dc.b 0
0003885A <AmiBlitz3.ab3@29166>   quickadd        Dc.b 0
0003885C <AmiBlitz3.ab3@29167>   newmode         Dc.w 0
0003885E <AmiBlitz3.ab3@29168>   mode            Dc.w 0
00038860 <AmiBlitz3.ab3@29169>   string1         Dc.w 0
00038862 <AmiBlitz3.ab3@29170>   load_var_size   Dc.w 0
00038864 <AmiBlitz3.ab3@29171>   load_var_reg    Dc.w 0
00038868 <AmiBlitz3.ab3@29172>   load_var_addr   Dc.l 0
0003886A <AmiBlitz3.ab3@29173>   imm_size        Dc.w 0
0003886C <AmiBlitz3.ab3@29174>   imm_reg         Dc.w 0
00038870 <AmiBlitz3.ab3@29175>   imm_addr        Dc.l 0
00038871 <AmiBlitz3.ab3@29176>   iee             Dc.b 0
00038872 <AmiBlitz3.ab3@29177>   _dcb            Dc.b 0
00038876 <AmiBlitz3.ab3@29178>   nohunkoffset    Dc.l 0
0003887A <AmiBlitz3.ab3@29181> teddata:        Dc.l tokens
0003887E <AmiBlitz3.ab3@29182>                 Dc.l 0 ;compilermenu_entries               ; NOT used anymore
00038882 <AmiBlitz3.ab3@29183>                 Dc.l read_xtrafile
00038886 <AmiBlitz3.ab3@29184>                 Dc.l write_xtrafile
0003888A <AmiBlitz3.ab3@29185>                 Dc.l call_menuentry                        ; compile AND RUN ?
0003888E <AmiBlitz3.ab3@29186>                 Dc.l 0
00038892 <AmiBlitz3.ab3@29187>                 Dc.b ":",34,".;"
00038896 <AmiBlitz3.ab3@29188>                 Dc.l "NEW1"
0003889A <AmiBlitz3.ab3@29189>                 Dc.l newtypebase
0003889E <AmiBlitz3.ab3@29190> realconstbase:  Dc.l labelbase
000388A2 <AmiBlitz3.ab3@29191> deflib          Dc.l 0
000388A6 <AmiBlitz3.ab3@29192> incd            Dc.l 0
000388AA <AmiBlitz3.ab3@29193>                 Dc.l 0
000388AE <AmiBlitz3.ab3@29194>                 Dc.l 0
000388B2 <AmiBlitz3.ab3@29195>                 Dc.l 0
000388B4 <AmiBlitz3.ab3@29196> _return         RTS
000388B5 <AmiBlitz3.ab3@29197>                 Dc.b 0
00038CB5 <AmiBlitz3.ab3@29198> chartab2        Ds.l 256
00038CB9 <AmiBlitz3.ab3@29199> codeend         Dc.l 0
00038CBD <AmiBlitz3.ab3@29200> hunkoffsetnum   Dc.l 0
00038CC1 <AmiBlitz3.ab3@29201> chipsize        Dc.l 0
00038CC5 <AmiBlitz3.ab3@29202> bsssize         Dc.l 0
00038CC9 <AmiBlitz3.ab3@29203> bssstart        Dc.l -1
00038CCD <AmiBlitz3.ab3@29204> bssend          Dc.l -1
00038CD1 <AmiBlitz3.ab3@29205> chipstart       Dc.l -1
00038CD5 <AmiBlitz3.ab3@29206> chipend         Dc.l -1
00038CD6 <AmiBlitz3.ab3@29207> bssmode         Dc.b 0
00038CD7 <AmiBlitz3.ab3@29208> chipmode        Dc.b 0
00038CD8 <AmiBlitz3.ab3@29209> newhunk         Dc.b 0
00038CDC <AmiBlitz3.ab3@29210> bssnum          Dc.l 0
00038CE0 <AmiBlitz3.ab3@29211> chipnum         Dc.l 0
00038CE4 <AmiBlitz3.ab3@29212> lastinstruction Dc.l 0
00038CE8 <AmiBlitz3.ab3@29213> lastinstructionaddr Dc.l 0
00038CFC <AmiBlitz3.ab3@29214> hunkbegin       Dc.l $03F3,$00,$02,$00,$01
00038D00 <AmiBlitz3.ab3@29215> tstsize1b:      Ds.l 1
00038D04 <AmiBlitz3.ab3@29216> bsssize2        Dc.l 1
00038D08 <AmiBlitz3.ab3@29217>                 Dc.l $03E9
00038D0C <AmiBlitz3.ab3@29218> tstsize2b:      Dc.l $100
00038D20 <AmiBlitz3.ab3@29219> hunkbegin2      Dc.l $03F3,$00,$03,$00,$02
00038D24 <AmiBlitz3.ab3@29220> tstsize1c:      Ds.l 1
00038D28 <AmiBlitz3.ab3@29221> bsssize3        Dc.l 1
00038D2C <AmiBlitz3.ab3@29222> chipsize2       Dc.l 1
00038D30 <AmiBlitz3.ab3@29223>                 Dc.l $3e9
00038D34 <AmiBlitz3.ab3@29224> tstsize2c       Dc.l 0
00038D44 <AmiBlitz3.ab3@29225> hunkend         Dc.l $3f2,$3eb,0,$3f2
00038D54 <AmiBlitz3.ab3@29226> hunkend2        Dc.l $3f2,$3ea,0,$3f2
00038D5B <AmiBlitz3.ab3@29227> strcpy          Dc.b "strcpy",0
00038D62 <AmiBlitz3.ab3@29228> strcmp          Dc.b "strcmp",0
00038D69 <AmiBlitz3.ab3@29229> strvar          Dc.b "strvar",0
00038D6E <AmiBlitz3.ab3@29230> qmul            Dc.b "qmul",0
00038D73 <AmiBlitz3.ab3@29231> qdiv            Dc.b "qdiv",0
00038D7A <AmiBlitz3.ab3@29232> _MaxLen         Dc.b "maxlen",0
00038D7F <AmiBlitz3.ab3@29233> notf            Dc.b "????",0
00038DA2 <AmiBlitz3.ab3@29235> errtext         Dc.b "only reg addressing Mode supported",0
00038DCC <AmiBlitz3.ab3@29236> fpuerr          Dc.b "Instruction not yet supported by 68K FPU ",0
00038E0E <AmiBlitz3.ab3@29237> cmplxerr        Dc.b "Formula too complex for 68K FPU or too much regload register used",0 : Even
00038E10 <AmiBlitz3.ab3@29238> peeksize        Dc.w 0
00038E14 <AmiBlitz3.ab3@29240> mainstart       Dc.l 0
00038E15 <AmiBlitz3.ab3@29242> infunctioncode  Dc.b 0
00038E17 <AmiBlitz3.ab3@29243> regnumstore     Dc.w 0
00038E44 <AmiBlitz3.ab3@29244>                 Dc.b "$VER: AmiBlitz3 \\__VER_MAJOR.\\__VER_MINOR (\\__DATE_GER__) Build \\__VER_PATCH.\\__VER_BUILD",0 : Even
00038E4C <AmiBlitz3.ab3@29245> testcode        Dc.b "print i",0
00038EB0 <AmiBlitz3.ab3@29246>                 Ds.b 100
00038EBE <AmiBlitz3.ab3@29247> devo            Dc.b "developobject",0 : Even
00038ED0 <AmiBlitz3.ab3@29248> autostorename   Dc.b "__autoconstantnum",0
00038EDA <AmiBlitz3.ab3@29249> _include        Dc.b "__include",0
00038EE2 <AmiBlitz3.ab3@29250> _debug          Dc.b "__debug",0
00038EE6 <AmiBlitz3.ab3@29251> unusedfunc      Dc.l 0
00038EE8 <AmiBlitz3.ab3@29255>   MOVE.l a0,d0
00038F12 <AmiBlitz3.ab3@29256>   !basic
00038F16 <AmiBlitz3.ab3@29257>   *olderror.l= PutD0
00038F70 <AmiBlitz3.ab3@29258> 
00038FA4 <AmiBlitz3.ab3@29259>   error_type$ = error$
00039040 <AmiBlitz3.ab3@29260> 
00039054 <AmiBlitz3.ab3@29261>   If Peek.l (?beforeparameterfetch)
0003906A <AmiBlitz3.ab3@29262>     MaxLen detokenline.s = 65536
000390AC <AmiBlitz3.ab3@29263>    !ComData_GetL{comPtr_PreProcessor,include_preprocessor}
000390BC <AmiBlitz3.ab3@29264>    *tn.preprocessor = Peek.l(?include_preprocessor)
000390E6 <AmiBlitz3.ab3@29265>     written.l = preproc_DetokenizeLine{*tn,Peek.l (?beforeparameterfetch),&detokenline}
0003910E <AmiBlitz3.ab3@29266>     If written>0 Then Poke.b &detokenline+written,0
00039152 <AmiBlitz3.ab3@29267>     If written>40 Then Poke.s &detokenline+36,"..."   ; added to limit the wide of the error requester  tomsmart1
0003917C <AmiBlitz3.ab3@29268>     sourceLineText.s = Peek.s(&detokenline)
00039182 <AmiBlitz3.ab3@29269>   Else
000391AA <AmiBlitz3.ab3@29270>     sourceLineText = "NULL"
000391DE <AmiBlitz3.ab3@29272>   error_source$ = sourceLineText
00039230 <AmiBlitz3.ab3@29273>   error$ + sourceLineText
00039236 <AmiBlitz3.ab3@29274>   GetD0 &error$
00039254 <AmiBlitz3.ab3@29275>   !asm
00039256 <AmiBlitz3.ab3@29276>   MOVE.l d0,a0
00039258 <AmiBlitz3.ab3@29277> RTS
0003925A <AmiBlitz3.ab3@29281>   MOVE.l a0,-(a7)
0003925C <AmiBlitz3.ab3@29282>   MOVE.l a0,d0
0003925E <AmiBlitz3.ab3@29283>   MOVE.l a5,a0                                             ;macro title
00039288 <AmiBlitz3.ab3@29284>   !basic
0003928C <AmiBlitz3.ab3@29285>   i = PutD0
0003928E <AmiBlitz3.ab3@29286>   MOVEQ #20,d0
00039290 <AmiBlitz3.ab3@29289>     MOVE.b -(a0),d1
00039294 <AmiBlitz3.ab3@29290>     BEQ 'l1
00039298 <AmiBlitz3.ab3@29291>     CMP.b #":",d1
0003929C <AmiBlitz3.ab3@29292>     BEQ 'l1
0003929E <AmiBlitz3.ab3@29293>     SUBQ.l #1,d0
000392A2 <AmiBlitz3.ab3@29294>     BNE 'l2
000392A4 <AmiBlitz3.ab3@29297>   ADDQ #1,a0
000392A6 <AmiBlitz3.ab3@29298>   MOVE.l a0,d0
000392AA <AmiBlitz3.ab3@29299>   i2.l = PutD0
000392C6 <AmiBlitz3.ab3@29300>   If Peek.w (?ininclude)>0
00039320 <AmiBlitz3.ab3@29301>     Poke.s (?includetemp2),incdim(Peek.w(?ininclude)-1)
00039330 <AmiBlitz3.ab3@29302>     errorline.l = Peek.l(?includeline);-1
00039358 <AmiBlitz3.ab3@29303>     Poke.l ?compilelinecounter,Peek.l(?includeline) - 1
00039382 <AmiBlitz3.ab3@29304>     errorfile.s = Peek.s(?includetemp2)
00039388 <AmiBlitz3.ab3@29305>   Else
000393C0 <AmiBlitz3.ab3@29306>     Poke.s (?includetemp2),Peek.s(?ptr_parameterstore)
000393D6 <AmiBlitz3.ab3@29307>     errorline.l = Peek.l(?compilelinecounter) + 1
0003940A <AmiBlitz3.ab3@29308>     errorfile.s = cli_sourcefile
00039414 <AmiBlitz3.ab3@29311>   If i
000394B8 <AmiBlitz3.ab3@29312>     errortext.s = !TRANS{Replace$(Peek.s(i),"\\0a","\n")}
00039536 <AmiBlitz3.ab3@29313>     errortext.s = Replace$(errortext,"\n","\\0a")
0003953C <AmiBlitz3.ab3@29314>   Else
00039564 <AmiBlitz3.ab3@29315>     errortext.s = "???"
000396DC <AmiBlitz3.ab3@29318>   NPrint "\\1b[1m",!TRANS{"Compiler Error"}," #",Peek.l(?errorcounter)," <",errorfile,"@",errorline,">\\1b[0m "
000397A4 <AmiBlitz3.ab3@29319>   NPrint "  ",error_type$,"\\n  ",error_source$
000397C2 <AmiBlitz3.ab3@29323>   !asm
000397C4 <AmiBlitz3.ab3@29324>   MOVE.l (a7)+,a0
000397C6 <AmiBlitz3.ab3@29325> RTS
000397C8 <AmiBlitz3.ab3@29329>   MOVE.l a0,-(a7)
000397CA <AmiBlitz3.ab3@29330>   MOVE.l a0,d0
000397CC <AmiBlitz3.ab3@29331>   MOVE.l a5,a0                                             ;macro title
000397F6 <AmiBlitz3.ab3@29332>   !basic
000397FA <AmiBlitz3.ab3@29333>   i = PutD0
000397FC <AmiBlitz3.ab3@29334>   MOVEQ #20,d0
000397FE <AmiBlitz3.ab3@29337>     MOVE.b -(a0),d1
00039802 <AmiBlitz3.ab3@29338>     BEQ 'l1
00039806 <AmiBlitz3.ab3@29339>     CMP.b #":",d1
0003980A <AmiBlitz3.ab3@29340>     BEQ 'l1
0003980C <AmiBlitz3.ab3@29341>     SUBQ.l #1,d0
00039810 <AmiBlitz3.ab3@29342>     BNE 'l2
00039812 <AmiBlitz3.ab3@29345>   ADDQ #1,a0
00039814 <AmiBlitz3.ab3@29346>   MOVE.l a0,d0
00039818 <AmiBlitz3.ab3@29347>   i2.l = PutD0
0003989C <AmiBlitz3.ab3@29348>   fid.l = file_Open{dos_AddPart{my_systemdir$,"ab_compileerror.txt"},#file_forcewrite}
000398B0 <AmiBlitz3.ab3@29349>   If fid <> -1
000398CC <AmiBlitz3.ab3@29350>     If Peek.w (?ininclude)>0
00039926 <AmiBlitz3.ab3@29351>       Poke$(?includetemp2),incdim(Peek.w(?ininclude)-1)
0003992C <AmiBlitz3.ab3@29352>     Else
00039958 <AmiBlitz3.ab3@29353>       Poke$(?includetemp2),""
00039982 <AmiBlitz3.ab3@29355>     a$ = Peek$(?includetemp2)
000399F4 <AmiBlitz3.ab3@29356>     x$ = Replace$(Peek$(i),"\\0a","\n")
00039A26 <AmiBlitz3.ab3@29357>     file_WriteLine{fid,x$}
00039A70 <AmiBlitz3.ab3@29358>     file_WriteLine{fid,Str$(Peek.l(?compilelinecounter) + 1)}
00039A9C <AmiBlitz3.ab3@29359>     If a$
00039ACE <AmiBlitz3.ab3@29360>       file_WriteLine{fid,a$}
00039B18 <AmiBlitz3.ab3@29361>       file_WriteLine{fid,Str$(Peek.l(?includeline)-1)}
00039B40 <AmiBlitz3.ab3@29362>       Poke.l ?compilelinecounter,Peek.l(?includeline) - 1
00039B46 <AmiBlitz3.ab3@29363>     Else
00039B6C <AmiBlitz3.ab3@29364>       file_WriteLine{fid,"none"}
00039B9C <AmiBlitz3.ab3@29366>     file_WriteLine{fid,Peek$(i2)}
00039BF2 <AmiBlitz3.ab3@29367>     file_WriteLine{fid,Str$(Peek.l(?globallinecount))+" line(s) compiled"}
00039C3C <AmiBlitz3.ab3@29368>     file_WriteLine{fid,Hex$(Peek.w(?globalvarpointer))+" global var base"}
00039C46 <AmiBlitz3.ab3@29369>     file_Close{fid}
00039C64 <AmiBlitz3.ab3@29371>   !asm
00039C66 <AmiBlitz3.ab3@29372>   MOVE.l (a7)+,a0
00039C68 <AmiBlitz3.ab3@29373> RTS
00039C92 <AmiBlitz3.ab3@29377>   !basic
00039C96 <AmiBlitz3.ab3@29378>   progress.l     = PutD0
00039CA8 <AmiBlitz3.ab3@29379>   total.l        = Peek.w(?progressbar_width)
00039CC6 <AmiBlitz3.ab3@29380>   calcpro        = (progress * 100) / total +1
00039CD8 <AmiBlitz3.ab3@29381>   pass.l         = Peek.w(?pass)
00039CEA <AmiBlitz3.ab3@29382>   typ.l          = Peek.w(?compiler_job)
00039D08 <AmiBlitz3.ab3@29385> If (pass><pass_old OR typ><typ_old)
00039D16 <AmiBlitz3.ab3@29387>     If pass_old><pass
00039DB2 <AmiBlitz3.ab3@29388>       passtatusstr.s = !TRANS{"Pass"}+" "+Str$(pass)+"..."
00039E08 <AmiBlitz3.ab3@29389>       If cli_verbose>=2 Then NPrint passtatusstr
00039E0E <AmiBlitz3.ab3@29392>     pass_old = pass
00039E14 <AmiBlitz3.ab3@29393>     typ_old  = typ
00039E1A <AmiBlitz3.ab3@29394>     update_comstatus_gui = True
00039E2C <AmiBlitz3.ab3@29395>     If typ=0
00039F0C <AmiBlitz3.ab3@29396>       comstatusstr = !TRANS{"Pass"}+" "+Str$(pass)+": "+!TRANS{"Compiling Sources..."}
00039F14 <AmiBlitz3.ab3@29397>       calcpro = 0  ; set gauge to 0
00039F26 <AmiBlitz3.ab3@29399>     If typ=1
0003A006 <AmiBlitz3.ab3@29400>       comstatusstr = !TRANS{"Pass"}+" "+Str$(pass)+": "+!TRANS{"Building Executable..."}
0003A00E <AmiBlitz3.ab3@29401>       calcpro = 0  ; set gauge to 0
0003A064 <AmiBlitz3.ab3@29404>     If cli_verbose>=3 Then NPrint comstatusstr
0003A072 <AmiBlitz3.ab3@29407>   If (calcpro >< calcpro_old)
0003A0C6 <AmiBlitz3.ab3@29408>     If cli_verbose>=4 Then NPrint calcpro,"% compiled..."
0003A0CC <AmiBlitz3.ab3@29409>     calcpro_old = calcpro
0003A0D2 <AmiBlitz3.ab3@29410>     update_comstatus_gui = True
0003A0EC <AmiBlitz3.ab3@29413>   If update_comstatus_gui = True                                     ; check if a update of the gui nessecary
0003A10A <AmiBlitz3.ab3@29414>     !asm
0003A13C <AmiBlitz3.ab3@29415> 
0003A166 <AmiBlitz3.ab3@29416>     !basic
0003A16C <AmiBlitz3.ab3@29417>     update_comstatus_gui  = False ; because we update the gui
0003A18A <AmiBlitz3.ab3@29419>   !asm
0003A18C <AmiBlitz3.ab3@29420> RTS
0003A192 <AmiBlitz3.ab3@29425>   MOVE.w maxobject_pos,D5                                  ;max objects 1. visible
0003A198 <AmiBlitz3.ab3@29426>   LEA maxobjects_value,A3                                  ;current value
0003A19E <AmiBlitz3.ab3@29427>   MOVEA.l libpointer,A2
0003A1A2 <AmiBlitz3.ab3@29430>   CMPA.w #$0,A2
0003A1A6 <AmiBlitz3.ab3@29431>   BEQ.w menu4c__igotb
0003A1A8 <AmiBlitz3.ab3@29432>   MOVEA.l A2,A1
0003A1AC <AmiBlitz3.ab3@29433>   ADDA.l $12(A1),A1
0003A1B0 <AmiBlitz3.ab3@29434>   TST.w -$2(A1)
0003A1B4 <AmiBlitz3.ab3@29435>   BEQ.w JL_0_FFF6b
0003A1B6 <AmiBlitz3.ab3@29436>   SUBQ.w #1,D5
0003A1BA <AmiBlitz3.ab3@29437>   BMI.w JL_0_FFFCb
0003A1BC <AmiBlitz3.ab3@29440>   MOVEA.l (A2),A2
0003A1C0 <AmiBlitz3.ab3@29441> BRA.w JL_0_FFDAb
0003A1C4 <AmiBlitz3.ab3@29444>   MOVE.w (A3),-$4(A1)
0003A1C6 <AmiBlitz3.ab3@29447> RTS
0003A1CC <AmiBlitz3.ab3@29451>   MOVE.w debugnest,d0
0003A1D2 <AmiBlitz3.ab3@29452>   LEA storedebugmode, a0
0003A1DA <AmiBlitz3.ab3@29453>   MOVE.b 0(a0,d0.w),debugmode
0003A1E0 <AmiBlitz3.ab3@29454>   TST.w debugnest
0003A1E4 <AmiBlitz3.ab3@29455>   BEQ JUMP_unpairrunerrs
0003A1EA <AmiBlitz3.ab3@29456>   SUBQ.w #1,debugnest
0003A1EC <AmiBlitz3.ab3@29457> RTS
0003A1F2 <AmiBlitz3.ab3@29459> JUMP_runerrsoverflow JMP runerrsoverflow
0003A1F8 <AmiBlitz3.ab3@29460> JUMP_unpairrunerrs   JMP unpairrunerrs
0003A200 <AmiBlitz3.ab3@29464>   BCHG #$7,use_debugger
0003A208 <AmiBlitz3.ab3@29466>   BTST #$7,use_debugger
0003A20C <AmiBlitz3.ab3@29467>   BNE 'debugon
0003A212 <AmiBlitz3.ab3@29468>   CLR.w debugmode
0003A216 <AmiBlitz3.ab3@29469>  BRA.b 'debugoff
0003A21C <AmiBlitz3.ab3@29472>   SNE debugmode
0003A21E <AmiBlitz3.ab3@29475>   MOVE.l a0,-(a7)
0003A256 <AmiBlitz3.ab3@29478>   !ComData_SetB{comByte_DebugMode,debugmode}
0003A258 <AmiBlitz3.ab3@29483>   MOVE.l (a7)+,a0
0003A25A <AmiBlitz3.ab3@29484> RTS
0003A262 <AmiBlitz3.ab3@29489>   BTST #$7,use_debugger
0003A266 <AmiBlitz3.ab3@29491>   BNE 'debugon
0003A26C <AmiBlitz3.ab3@29492>   CLR.w debugmode
0003A270 <AmiBlitz3.ab3@29493>  BRA.b 'debugoff
0003A276 <AmiBlitz3.ab3@29497>   SNE debugmode
0003A278 <AmiBlitz3.ab3@29500> RTS
0003A27E <AmiBlitz3.ab3@29505>   ADDQ.w #1,debugnest
0003A284 <AmiBlitz3.ab3@29506>   MOVE.w debugnest,d0
0003A288 <AmiBlitz3.ab3@29507>   CMP.w #18,d0
0003A28C <AmiBlitz3.ab3@29508>    BGE JUMP_runerrsoverflow
0003A292 <AmiBlitz3.ab3@29509>   LEA storedebugmode, a0
0003A29A <AmiBlitz3.ab3@29510>   MOVE.b debugmode,0( a0,d0.w)
0003A2A0 <AmiBlitz3.ab3@29514>   SF debugmode
0003A2A2 <AmiBlitz3.ab3@29515> RTS
0003A322 <AmiBlitz3.ab3@29518> usedpath:  Ds.l 32
0003A326 <AmiBlitz3.ab3@29522>   BEQ.w JUMP_syntaxerr
0003A32C <AmiBlitz3.ab3@29523>   LEA lastpath,A0
0003A330 <AmiBlitz3.ab3@29525>   MOVEM.l a0-a1/d0,-(a7)
0003A336 <AmiBlitz3.ab3@29526>   LEA lastpath2,a1
0003A338 <AmiBlitz3.ab3@29529>     MOVE.b (a0)+,(a1)+
0003A33C <AmiBlitz3.ab3@29530>   BNE 'l2
0003A340 <AmiBlitz3.ab3@29531>   MOVEM.l (a7)+,a0-a1/d0
0003A344 <AmiBlitz3.ab3@29532>   LEA usedpath(PC),A0
0003A348 <AmiBlitz3.ab3@29533>   MOVEM.l a0-a1/d0,-(a7)
0003A34E <AmiBlitz3.ab3@29534>   LEA lastpath,a1
0003A350 <AmiBlitz3.ab3@29537>     MOVE.b (a0)+,(a1)+
0003A354 <AmiBlitz3.ab3@29538>   BNE 'l1
0003A358 <AmiBlitz3.ab3@29539>   MOVEM.l (a7)+,a0-a1/d0
0003A35A <AmiBlitz3.ab3@29543>   TST.w D0
0003A35E <AmiBlitz3.ab3@29544>    BMI.w JUMP_syntaxerr
0003A360 <AmiBlitz3.ab3@29545>   MOVE.b D0,(A0)+
0003A364 <AmiBlitz3.ab3@29546>   BSR.w JUMP_get1bytemain
0003A368 <AmiBlitz3.ab3@29547>    BNE.w 'loop
0003A36C <AmiBlitz3.ab3@29550>   MOVE.b #$2,(A0)
0003A36E <AmiBlitz3.ab3@29551> RTS
0003A372 <AmiBlitz3.ab3@29555>   BEQ.w JUMP_syntaxerr
0003A378 <AmiBlitz3.ab3@29556>   LEA path2,A0
0003A37A <AmiBlitz3.ab3@29568>   TST.w D0
0003A37E <AmiBlitz3.ab3@29569>    BMI.w JUMP_syntaxerr
0003A380 <AmiBlitz3.ab3@29570>   MOVE.b D0,(A0)+
0003A384 <AmiBlitz3.ab3@29571>   BSR.w JUMP_get1bytemain
0003A388 <AmiBlitz3.ab3@29572>    BNE.w 'loop
0003A38C <AmiBlitz3.ab3@29575>   MOVE.b #$2,(A0)
0003A38E <AmiBlitz3.ab3@29576> RTS
0003A394 <AmiBlitz3.ab3@29579> JUMP_errormsg_reg JMP errormsg_reg
0003A39E <AmiBlitz3.ab3@29583>   MOVE.l #$f22d6780,fpucodeglobal
0003A3A8 <AmiBlitz3.ab3@29584>   MOVE.l #$f22c6780,fpucodelocal
0003A3AE <AmiBlitz3.ab3@29585>   LEA regtable,a0
0003A3B8 <AmiBlitz3.ab3@29586>   MOVE.l #7,maxregs
0003A3BA <AmiBlitz3.ab3@29589>   MOVE.l (a0),d0
0003A3BE <AmiBlitz3.ab3@29590>   BEQ 'e1
0003A3C0 <AmiBlitz3.ab3@29591>   CLR.l (a0)
0003A3C4 <AmiBlitz3.ab3@29592>   MOVE.w 4(a0),d0
0003A3CE <AmiBlitz3.ab3@29593>   MOVE.l fpucodeglobal,fpucode
0003A3D2 <AmiBlitz3.ab3@29594>   TST.w 6(a0)
0003A3D6 <AmiBlitz3.ab3@29595>   BEQ 'glob
0003A3E0 <AmiBlitz3.ab3@29596>   MOVE.l fpucodelocal,fpucode
0003A3E6 <AmiBlitz3.ab3@29599>   MOVE.l fpucode,d1
0003A3EC <AmiBlitz3.ab3@29600>   JSR writelong
0003A3F6 <AmiBlitz3.ab3@29601>   SUB.l #$80,fpucodelocal
0003A400 <AmiBlitz3.ab3@29602>   SUB.l #$80,fpucodeglobal
0003A402 <AmiBlitz3.ab3@29603>   MOVE.w d0,d1
0003A408 <AmiBlitz3.ab3@29604>   JSR writeword
0003A40A <AmiBlitz3.ab3@29605>   ADDQ #8,a0
0003A40E <AmiBlitz3.ab3@29606>  BRA 'again
0003A410 <AmiBlitz3.ab3@29609> RTS
0003A416 <AmiBlitz3.ab3@29612> JUMP_notypeerr2 JMP notypeerr
0003A41C <AmiBlitz3.ab3@29613> JUMP_illtypeerr JMP illtypeerr
0003A426 <AmiBlitz3.ab3@29616>   MOVE.l #$f22d4780,fpucodeglobal
0003A430 <AmiBlitz3.ab3@29617>   MOVE.l #$f22c4780,fpucodelocal
0003A436 <AmiBlitz3.ab3@29618>   LEA regtable,a0
0003A438 <AmiBlitz3.ab3@29619>   TST.l (a0)
0003A43C <AmiBlitz3.ab3@29620>    BNE JUMP_errormsg_reg
0003A43E <AmiBlitz3.ab3@29621>   MOVE.l d7,-(a7)
0003A440 <AmiBlitz3.ab3@29622>   SUBQ.l #1,a5
0003A446 <AmiBlitz3.ab3@29625>   JSR getparameter2
0003A44A <AmiBlitz3.ab3@29626>   BEQ.w 'nopar
0003A450 <AmiBlitz3.ab3@29627>   MOVE.w d0,lastchar
0003A456 <AmiBlitz3.ab3@29628>   JSR findvariable
0003A45A <AmiBlitz3.ab3@29629>   BNE 'islocal
0003A464 <AmiBlitz3.ab3@29630>   MOVE.l fpucodeglobal,fpucode
0003A46E <AmiBlitz3.ab3@29631>   MOVE.l #3,maxregs
0003A470 <AmiBlitz3.ab3@29632>   MOVEQ #0,d7
0003A478 <AmiBlitz3.ab3@29635>   CMP.l #newtype_float,$a(a2)                              ;is float type
0003A47C <AmiBlitz3.ab3@29636>    BEQ 'doit
0003A484 <AmiBlitz3.ab3@29637>   CMP.l #newtype_double,$a(a2)
0003A488 <AmiBlitz3.ab3@29638>    BNE JUMP_illtypeerr
0003A48E <AmiBlitz3.ab3@29641>   LEA regtable,a0
0003A490 <AmiBlitz3.ab3@29642>   MOVEQ #0,d0
0003A492 <AmiBlitz3.ab3@29645>   TST.l (a0)
0003A496 <AmiBlitz3.ab3@29646>    BEQ 'store
0003A498 <AmiBlitz3.ab3@29647>   ADDQ.l #4,d0
0003A49A <AmiBlitz3.ab3@29648>   ADDQ.l #8,a0
0003A4A0 <AmiBlitz3.ab3@29649>   CMP.l #16,d0
0003A4A4 <AmiBlitz3.ab3@29650>    BCS 'loop
0003A4AE <AmiBlitz3.ab3@29651>   MOVE.l #2,maxregs
0003A4B4 <AmiBlitz3.ab3@29652>   CMP.l #20,d0
0003A4B8 <AmiBlitz3.ab3@29653>    BCS 'loop
0003A4C2 <AmiBlitz3.ab3@29654>   MOVE.l #1,maxregs
0003A4C8 <AmiBlitz3.ab3@29655>   CMP.l #24,d0
0003A4CC <AmiBlitz3.ab3@29656>    BCS 'loop
0003A4D2 <AmiBlitz3.ab3@29657>  JMP toovarerr
0003A4D8 <AmiBlitz3.ab3@29660>   TST.b fpu
0003A4DC <AmiBlitz3.ab3@29661>    BEQ 'nofpu
0003A4DE <AmiBlitz3.ab3@29662>   MOVE.l a2,(a0)
0003A4E4 <AmiBlitz3.ab3@29663>   MOVE.w 4(a2),4(a0)
0003A4E8 <AmiBlitz3.ab3@29664>   MOVE.w d7,6(a0)
0003A4EE <AmiBlitz3.ab3@29665>   MOVE.l fpucode,d1
0003A4F8 <AmiBlitz3.ab3@29666>   SUB.l #$80,fpucodeglobal
0003A502 <AmiBlitz3.ab3@29667>   SUB.l #$80,fpucodelocal
0003A508 <AmiBlitz3.ab3@29668>   JSR writelong
0003A50C <AmiBlitz3.ab3@29669>   MOVE.w 4(a2),d1
0003A512 <AmiBlitz3.ab3@29670>   JSR writeword
0003A518 <AmiBlitz3.ab3@29673>   MOVE.w lastchar,d0
0003A51C <AmiBlitz3.ab3@29674>   CMP.w #":",d0
0003A520 <AmiBlitz3.ab3@29675>    BEQ 'nopar
0003A522 <AmiBlitz3.ab3@29676>   TST.w d0
0003A526 <AmiBlitz3.ab3@29677>    BEQ 'nopar
0003A52A <AmiBlitz3.ab3@29678>   CMP.w #",",d0
0003A52E <AmiBlitz3.ab3@29679>   BNE JUMP_syntaxerr
0003A532 <AmiBlitz3.ab3@29680>  BRA 'l2
0003A534 <AmiBlitz3.ab3@29683>    MOVE.l (a7)+,d7
0003A536 <AmiBlitz3.ab3@29684>  RTS
0003A538 <AmiBlitz3.ab3@29687>   MOVEQ #1,d7
0003A540 <AmiBlitz3.ab3@29688>   MOVE.b #1,newvariable
0003A546 <AmiBlitz3.ab3@29689>   LEA firstlocal,a2
0003A54C <AmiBlitz3.ab3@29690>   JSR findvariable
0003A552 <AmiBlitz3.ab3@29691>   CLR.b newvariable
0003A558 <AmiBlitz3.ab3@29692>   CMP.l #-1,d0
0003A55C <AmiBlitz3.ab3@29693>   BEQ.w JUMP_notypeerr2
0003A566 <AmiBlitz3.ab3@29694>   MOVE.l fpucodelocal,fpucode
0003A56A <AmiBlitz3.ab3@29695>  BRA 'go
0003A56E <AmiBlitz3.ab3@29698>   CMP.b #".",d0
0003A572 <AmiBlitz3.ab3@29699>    BNE 'l1
0003A576 <AmiBlitz3.ab3@29700>   BSR JUMP_get1bytemain
0003A57A <AmiBlitz3.ab3@29701>   BSR JUMP_get1bytemain
0003A57E <AmiBlitz3.ab3@29704>   ORI .b #$20,d0
0003A582 <AmiBlitz3.ab3@29705>   CMP.b #"d",d0
0003A586 <AmiBlitz3.ab3@29706>    BNE JUMP_illeaerr
0003A58A <AmiBlitz3.ab3@29707>   BSR JUMP_get1bytemain
0003A58E <AmiBlitz3.ab3@29708>   SUB.b #$30,d0
0003A592 <AmiBlitz3.ab3@29709>   CMP.b #$7,d0
0003A596 <AmiBlitz3.ab3@29710>    BGT JUMP_syntaxerr
0003A59A <AmiBlitz3.ab3@29711>   MOVE.w #$49c0,d1
0003A59C <AmiBlitz3.ab3@29712>   ADD.b d0,d1
0003A5A2 <AmiBlitz3.ab3@29713>   JSR writeword
0003A5A6 <AmiBlitz3.ab3@29714>   BSR JUMP_get1bytemain
0003A5A8 <AmiBlitz3.ab3@29715> RTS
0003A5AE <AmiBlitz3.ab3@29719>   LEA lastpath,a0
0003A5B2 <AmiBlitz3.ab3@29720>   LEA usedpath(PC),A1
0003A5B4 <AmiBlitz3.ab3@29723>     MOVE.b (a0)+,(a1)+
0003A5B8 <AmiBlitz3.ab3@29724>   BNE 'l1
0003A5BE <AmiBlitz3.ab3@29726>   LEA lastpath2,a0
0003A5C4 <AmiBlitz3.ab3@29727>   LEA lastpath,A1
0003A5C6 <AmiBlitz3.ab3@29730>     MOVE.b (a0)+,(a1)+
0003A5CA <AmiBlitz3.ab3@29731>   BNE 'l2
0003A5CC <AmiBlitz3.ab3@29732> RTS
0003A5D2 <AmiBlitz3.ab3@29736>   TST.b objectcount
0003A5D6 <AmiBlitz3.ab3@29737>   BEQ 'l2a
0003A5DC <AmiBlitz3.ab3@29738>  JMP macnesterr
0003A5E2 <AmiBlitz3.ab3@29741>   LEA devo,a0
0003A5E8 <AmiBlitz3.ab3@29742>   ADDQ.b #1,objectcount
0003A5EC <AmiBlitz3.ab3@29743>   MOVEM.l a1/d2,-(a7)
0003A5F2 <AmiBlitz3.ab3@29744>   LEA ptr_parameterstore,a1
0003A5F4 <AmiBlitz3.ab3@29747>     MOVE.b (a0)+,(a1)+
0003A5F8 <AmiBlitz3.ab3@29748>   BNE 'l1
0003A5FA <AmiBlitz3.ab3@29750>   MOVEQ #13,d2
0003A600 <AmiBlitz3.ab3@29751>   JSR findlabel2
0003A604 <AmiBlitz3.ab3@29752>   BNE 'd
0003A608 <AmiBlitz3.ab3@29753>   TST.l 8(a2)
0003A60C <AmiBlitz3.ab3@29754>   BEQ 'd
0003A612 <AmiBlitz3.ab3@29755>   SUBQ.b #1,objectcount
0003A616 <AmiBlitz3.ab3@29756>   MOVEM.l (a7)+,a1/d2
0003A61C <AmiBlitz3.ab3@29757>   JSR skiprest
0003A624 <AmiBlitz3.ab3@29758>   MOVE.b #1,developobject
0003A626 <AmiBlitz3.ab3@29759>  RTS
0003A62A <AmiBlitz3.ab3@29762>   MOVEM.l (a7)+,a1/d2
0003A632 <AmiBlitz3.ab3@29763>   MOVE.b #1,resdisable
0003A638 <AmiBlitz3.ab3@29766>   CLR.b developobject
0003A63E <AmiBlitz3.ab3@29767> JMP do_Macro
0003A644 <AmiBlitz3.ab3@29770> JUMP_illeaerr JMP illeaerr
0003A64A <AmiBlitz3.ab3@29774>   CLR.b typecheck
0003A650 <AmiBlitz3.ab3@29775>   CLR.b declare
0003A656 <AmiBlitz3.ab3@29776>   CLR.b declare2
0003A65A <AmiBlitz3.ab3@29777>   SUB.b #$30,d0
0003A65E <AmiBlitz3.ab3@29778>   BTST #0,d0
0003A662 <AmiBlitz3.ab3@29779>   BEQ 'l1
0003A66A <AmiBlitz3.ab3@29780>   MOVE.b #1,declare
0003A66E <AmiBlitz3.ab3@29783>   BTST #1,d0
0003A672 <AmiBlitz3.ab3@29784>   BEQ 'l2
0003A67A <AmiBlitz3.ab3@29785>   MOVE.b #1,declare2
0003A67E <AmiBlitz3.ab3@29788>   BTST #2,d0
0003A682 <AmiBlitz3.ab3@29789>   BEQ 'l3
0003A68A <AmiBlitz3.ab3@29790>   MOVE.b #1,typecheck
0003A68E <AmiBlitz3.ab3@29793>   BSR.w JUMP_get1bytemain
0003A690 <AmiBlitz3.ab3@29794> RTS
0003A696 <AmiBlitz3.ab3@29796> JUMP_get1bytemain JMP get1bytemain
0003A6C0 <AmiBlitz3.ab3@29800>   !basic
0003A6E0 <AmiBlitz3.ab3@29802>   FillMem ?residents_table,?residents_table_end-?residents_table,0
0003A6FE <AmiBlitz3.ab3@29803>   !asm
0003A700 <AmiBlitz3.ab3@29804> Return
0003A702 <AmiBlitz3.ab3@29809>   MOVE.l d2,-(a7)                                          ; D2 -> stack
0003A704 <AmiBlitz3.ab3@29810>   ADDQ #1,a5
0003A706 <AmiBlitz3.ab3@29811>   MOVE.l a5,-(a7)
0003A730 <AmiBlitz3.ab3@29812>   !basic
0003A736 <AmiBlitz3.ab3@29813>   MOVE.l (a7)+,d0 : _myD0.l = PutD0
0003A740 <AmiBlitz3.ab3@29814>   If _myD0
0003A780 <AmiBlitz3.ab3@29815>     newconst$ = UCase$(Peek.s(_myD0))
0003A786 <AmiBlitz3.ab3@29816>   Else
0003A7C0 <AmiBlitz3.ab3@29817>     error{"INTERNAL: invalid pointer in check_newconstants!"}
0003A7E8 <AmiBlitz3.ab3@29818>     nwconst$="xxx"
0003A810 <AmiBlitz3.ab3@29820>   condata$ =""
0003A820 <AmiBlitz3.ab3@29821>   Poke.b ?skip_bytes,0
0003A87C <AmiBlitz3.ab3@29822>   If Left$(newconst$,2) = "__"
0003A8D6 <AmiBlitz3.ab3@29823>     Select Mid$(newconst$,3,4)
0003A8FA <AmiBlitz3.ab3@29825>      Case "DATE"
0003A954 <AmiBlitz3.ab3@29826>       Select Mid$(newconst$,3,6)
0003A992 <AmiBlitz3.ab3@29827>       Case "DATE__" : DateFormat 1 : Poke.b ?skip_bytes,8
0003A9D6 <AmiBlitz3.ab3@29828>       Case "DATE_G" : DateFormat 0 : Poke.b ?skip_bytes,12
0003A9E4 <AmiBlitz3.ab3@29829>       End Select
0003A9F2 <AmiBlitz3.ab3@29830>       i.l=SystemDate
0003AA18 <AmiBlitz3.ab3@29831>       condata$ = Date$ (i)
0003AA96 <AmiBlitz3.ab3@29832>       condata$ = Replace$(condata$,"/",".")
0003AAC0 <AmiBlitz3.ab3@29834>      Case "VER_"
0003AAD0 <AmiBlitz3.ab3@29837>       actual_version.l = Peek.l(?versioninformation)
0003AAE0 <AmiBlitz3.ab3@29838>       actual_build.l   = Peek.l(?number_of_builds)
0003AB04 <AmiBlitz3.ab3@29840>       Format ""
0003AB5E <AmiBlitz3.ab3@29841>       Select Mid$(newconst$,3,9)
0003AB82 <AmiBlitz3.ab3@29843>        Case "VER_MAJOR"
0003ABBE <AmiBlitz3.ab3@29844>         condata$ = Str$(actual_version LSR 24)
0003ABE8 <AmiBlitz3.ab3@29846>        Case "VER_MINOR"
0003AC2C <AmiBlitz3.ab3@29847>         condata$ = Str$((actual_version LSL 8) LSR 24)
0003AC56 <AmiBlitz3.ab3@29849>        Case "VER_PATCH"
0003AC9A <AmiBlitz3.ab3@29850>         condata$ = Str$((actual_version LSL 16) LSR 24 )
0003ACC4 <AmiBlitz3.ab3@29852>        Case "VER_BUILD"
0003ACE8 <AmiBlitz3.ab3@29853>         Format ""
0003AD1C <AmiBlitz3.ab3@29854>         condata$ = Str$(actual_build)
0003AD22 <AmiBlitz3.ab3@29856>        Default
0003AD4A <AmiBlitz3.ab3@29857>         condata$ = "{unknown compiler constant}"
0003AD58 <AmiBlitz3.ab3@29859>       End Select
0003AD7C <AmiBlitz3.ab3@29860>       Format ""
0003AD8C <AmiBlitz3.ab3@29861>       Poke.b ?skip_bytes,11
0003ADB6 <AmiBlitz3.ab3@29863>      Case "THIS"
0003AE10 <AmiBlitz3.ab3@29864>       Select Mid$(newconst$,3,9)
0003AE34 <AmiBlitz3.ab3@29866>        Case "THIS_FUNC"
0003AE44 <AmiBlitz3.ab3@29867>         Poke.b ?skip_bytes,15
0003AE64 <AmiBlitz3.ab3@29868>         If Peek.l(?currentfunction)<>0
0003AEB0 <AmiBlitz3.ab3@29869>           condata$ = Peek.s(Peek.l(?currentfunction) + 32 + #funcentry_extend + 1)
0003AEB6 <AmiBlitz3.ab3@29870>         Else
0003AEDE <AmiBlitz3.ab3@29871>           condata$ = "GLOBAL"
0003AF08 <AmiBlitz3.ab3@29874>        Case "THIS_INCL"
0003AF18 <AmiBlitz3.ab3@29875>         Poke.b ?skip_bytes,14
0003AF38 <AmiBlitz3.ab3@29876>         If Peek.l(?includetemp2)<>0
0003AF86 <AmiBlitz3.ab3@29877>           condata$ = dos_FilePart{Peek$(?includetemp2)}
0003AFB0 <AmiBlitz3.ab3@29880>        Case "THIS_POIN"
0003AFC0 <AmiBlitz3.ab3@29881>         Poke.b ?skip_bytes,14
0003AFE0 <AmiBlitz3.ab3@29882>         If Peek.l(?currentfunction)<>0
0003B00E <AmiBlitz3.ab3@29883>           condata$ = Hex$(Peek.l(?currentfunction))
0003B01C <AmiBlitz3.ab3@29886>       End Select
0003B046 <AmiBlitz3.ab3@29888>      Case "CODE"
0003B056 <AmiBlitz3.ab3@29889>       Poke.b ?skip_bytes,10
0003B0B8 <AmiBlitz3.ab3@29890>       If Mid$(newconst$,3,8) = "CODELINE"
0003B0F4 <AmiBlitz3.ab3@29891>         condata$ = Str$(Peek.l(?globallinecount))
0003B102 <AmiBlitz3.ab3@29894>     End Select
0003B108 <AmiBlitz3.ab3@29896>   Else
0003B15C <AmiBlitz3.ab3@29897>     Select Left$(newconst$,1)
0003B180 <AmiBlitz3.ab3@29899>      Case "R"
0003B190 <AmiBlitz3.ab3@29900>       Poke.b ?skip_bytes,3
0003B208 <AmiBlitz3.ab3@29901>       For i = 1 To Vallong(Mid$(newconst$,2,2))
0003B288 <AmiBlitz3.ab3@29902>         condata$ = condata$ + Mid$(newconst$,4,1)
0003B298 <AmiBlitz3.ab3@29903>       Next
0003B2C2 <AmiBlitz3.ab3@29905>      Case "N"
0003B2D2 <AmiBlitz3.ab3@29906>       Poke.b ?skip_bytes,1
0003B2F6 <AmiBlitz3.ab3@29907>       condata$ = Chr$(10)
0003B2FC <AmiBlitz3.ab3@29909>      Default
0003B30E <AmiBlitz3.ab3@29910>       char1.b = Peek.b(&newconst$)
0003B326 <AmiBlitz3.ab3@29911>       char2.b = Peek.b(&newconst$+1)
0003B332 <AmiBlitz3.ab3@29912>       nibble1.l = -1
0003B33E <AmiBlitz3.ab3@29913>       nibble2.l = -1
0003B37C <AmiBlitz3.ab3@29915>       If (char1>=@"0" AND char1<=@"9") Then nibble1 = char1-@"0"
0003B3BA <AmiBlitz3.ab3@29916>       If (char2>=@"0" AND char2<=@"9") Then nibble2 = char2-@"0"
0003B3FE <AmiBlitz3.ab3@29918>       If (char1>=@"a" AND char1<=@"f") Then nibble1 = char1-@"a" + 10
0003B442 <AmiBlitz3.ab3@29919>       If (char2>=@"a" AND char2<=@"f") Then nibble2 = char2-@"a" + 10
0003B486 <AmiBlitz3.ab3@29921>       If (char1>=@"A" AND char1<=@"F") Then nibble1 = char1-@"A" + 10
0003B4CA <AmiBlitz3.ab3@29922>       If (char2>=@"A" AND char2<=@"F") Then nibble2 = char2-@"A" + 10
0003B4F0 <AmiBlitz3.ab3@29924>       If nibble1>=0 AND nibble2>=0
0003B506 <AmiBlitz3.ab3@29925>         newchar.l = (nibble1 LSL 4) + (nibble2)
0003B52A <AmiBlitz3.ab3@29926>         condata$ = Chr$(newchar)
0003B53A <AmiBlitz3.ab3@29927>         Poke.b ?skip_bytes,2
0003B548 <AmiBlitz3.ab3@29930>     End Select
0003B5A8 <AmiBlitz3.ab3@29932>   If condata$ = "" AND Peek.b(?skip_bytes)=0
0003B6CE <AmiBlitz3.ab3@29933>     !cout{"detected unknown const: " + newconst$}
0003B702 <AmiBlitz3.ab3@29934>     condata$ = newconst$
0003B718 <AmiBlitz3.ab3@29937>   GetD0 FLen(condata$)-1                                    ; laenge zielstring -> Stack
0003B71A <AmiBlitz3.ab3@29938>   MOVE.l d0,d2
0003B71C <AmiBlitz3.ab3@29939>   MOVE.l d2,-(a7)
0003B722 <AmiBlitz3.ab3@29941>   GetD0 &condata$                                          ; kopieren des neuen Strings in den Zielstring
0003B724 <AmiBlitz3.ab3@29942>   MOVE.l d0,a0
0003B726 <AmiBlitz3.ab3@29945>     MOVE.b (a0)+,d1
0003B72C <AmiBlitz3.ab3@29946>     JSR pokedata1b
0003B730 <AmiBlitz3.ab3@29947>  DBF d2,'l1
0003B74E <AmiBlitz3.ab3@29949>   !asm
0003B750 <AmiBlitz3.ab3@29950>   MOVE.l (a7)+,d0                                          ; laenge Zielstring <- Stack
0003B752 <AmiBlitz3.ab3@29951>   MOVE.l (a7)+,d2                                          ; d2 <-Stack
0003B754 <AmiBlitz3.ab3@29952>   ADD.l d0,d2                                              ; eingefuegte chars zu D2 dazu
0003B75A <AmiBlitz3.ab3@29953>   ADD.l #1,d2
0003B760 <AmiBlitz3.ab3@29955>   MOVE.l #0,d0                                             ; a5 um konstantennamen weiterschieben
0003B766 <AmiBlitz3.ab3@29956>   MOVE.b skip_bytes,D0
0003B768 <AmiBlitz3.ab3@29957>   ADD.l D0,a5
0003B76A <AmiBlitz3.ab3@29958> RTS
0003B76E <AmiBlitz3.ab3@30034>   MOVEM.l d0-d2/a0-a5,-(a7)
0003B774 <AmiBlitz3.ab3@30035>   TST.w proceduremode                                     ;1 in function
0003B778 <AmiBlitz3.ab3@30036>   BEQ 'global
0003B77E <AmiBlitz3.ab3@30037>   LEA firstglob,a2
0003B784 <AmiBlitz3.ab3@30038>   JSR findvariable2
0003B788 <AmiBlitz3.ab3@30039>   BEQ 'isused
0003B790 <AmiBlitz3.ab3@30040>   MOVE.b #1,newvariable
0003B796 <AmiBlitz3.ab3@30041>   LEA firstlocal,a2
0003B79C <AmiBlitz3.ab3@30042>   JSR findvariable
0003B7A0 <AmiBlitz3.ab3@30043>   BEQ 'isused
0003B7A6 <AmiBlitz3.ab3@30044>   CLR.b newvariable
0003B7AA <AmiBlitz3.ab3@30045>   MOVEM.l (a7)+,d0-d2/a0-a5
0003B7AC <AmiBlitz3.ab3@30046>   RTS
0003B7B2 <AmiBlitz3.ab3@30049>   JSR findvariable
0003B7B6 <AmiBlitz3.ab3@30050>   BNE 'isunused
0003B7BC <AmiBlitz3.ab3@30053>    MOVE.w lastchar,-(a7)                                  ;get the typename from source
0003B7C2 <AmiBlitz3.ab3@30054>    JSR getparameter2
0003B7C8 <AmiBlitz3.ab3@30055>    MOVE.w (a7)+,lastchar
0003B7CC <AmiBlitz3.ab3@30056>    MOVE.l $a(a2),a0                                       ; get the name of the type
0003B7D0 <AmiBlitz3.ab3@30057>    LEA $b(a0),a0
0003B7D6 <AmiBlitz3.ab3@30058>    LEA ptr_parameterstore,a1
0003B7D8 <AmiBlitz3.ab3@30061>    CMPM.b (a0)+,(a1)+                                     ; compare name
0003B7DC <AmiBlitz3.ab3@30062>    BNE'error
0003B7DE <AmiBlitz3.ab3@30063>    TST.b (a1)
0003B7E2 <AmiBlitz3.ab3@30064> 
0003B7E4 <AmiBlitz3.ab3@30065>    TST.b (a0)
0003B7E8 <AmiBlitz3.ab3@30066>    BNE 'error
0003B7EC <AmiBlitz3.ab3@30069>   MOVEM.l (a7)+,d0-d2/a0-a5
0003B7EE <AmiBlitz3.ab3@30070>  RTS
0003B7F4 <AmiBlitz3.ab3@30073> JMP errormsg_declaredtwice
0003B7F8 <AmiBlitz3.ab3@30077>   MOVEM.l a3/d1,-(a7)
0003B7FE <AmiBlitz3.ab3@30079>   CLR.b a4a5store
0003B800 <AmiBlitz3.ab3@30082>   MOVE.b (a3)+,d1
0003B804 <AmiBlitz3.ab3@30083>   CMP.b #$15,d1
0003B808 <AmiBlitz3.ab3@30084>   BEQ 'find
0003B80C <AmiBlitz3.ab3@30085>   CMP.b #$14,d1
0003B810 <AmiBlitz3.ab3@30086>   BEQ 'find
0003B814 <AmiBlitz3.ab3@30087>   CMP.b #$ff,d1
0003B818 <AmiBlitz3.ab3@30088>   BNE 'continue
0003B81C <AmiBlitz3.ab3@30089>   BRA 'notfind
0003B822 <AmiBlitz3.ab3@30092>   MOVE.l #$48e7000c,d1                  ; write 68k movem.l a4/a5,-(a7)
0003B828 <AmiBlitz3.ab3@30093>   JSR writelong
0003B830 <AmiBlitz3.ab3@30094>   MOVE.b #1,a4a5store
0003B834 <AmiBlitz3.ab3@30097>   MOVEM.l (a7)+,a3/d1
0003B836 <AmiBlitz3.ab3@30098> RTS
0003B83C <AmiBlitz3.ab3@30102>   TST.b a4a5store
0003B840 <AmiBlitz3.ab3@30103>   BEQ 'no
0003B846 <AmiBlitz3.ab3@30104>   MOVE.l #$4cdf3000,d1                  ; write 68k movem.l (a7)+,a4/a5
0003B84C <AmiBlitz3.ab3@30105>   JSR writelong
0003B852 <AmiBlitz3.ab3@30106>   CLR.b a4a5store
0003B854 <AmiBlitz3.ab3@30109> RTS
0003B854 <internal_commands.ab3@1> INCLUDE "internal_commands.ab3"
0003B858 <internal_commands.ab3@13> INCLUDE "internal_commands.ab3"
0003B85A <internal_commands.ab3@15> INCLUDE "internal_commands.ab3"
0003B862 <internal_commands.ab3@16> INCLUDE "internal_commands.ab3"
0003B86E <internal_commands.ab3@17> INCLUDE "internal_commands.ab3"
0003B872 <internal_commands.ab3@21> INCLUDE "internal_commands.ab3"
0003B874 <internal_commands.ab3@22> INCLUDE "internal_commands.ab3"
0003B878 <internal_commands.ab3@23> INCLUDE "internal_commands.ab3"
0003B8C1 <internal_commands.ab3@24> INCLUDE "internal_commands.ab3"
0003B8C2 <internal_commands.ab3@25> INCLUDE "internal_commands.ab3"
0003B8C6 <internal_commands.ab3@28> INCLUDE "internal_commands.ab3"
0003B8C8 <internal_commands.ab3@29> INCLUDE "internal_commands.ab3"
0003B8CC <internal_commands.ab3@30> INCLUDE "internal_commands.ab3"
0003B8E8 <internal_commands.ab3@31> INCLUDE "internal_commands.ab3"
0003B8EC <internal_commands.ab3@35> INCLUDE "internal_commands.ab3"
0003B8EE <internal_commands.ab3@36> INCLUDE "internal_commands.ab3"
0003B8F2 <internal_commands.ab3@37> INCLUDE "internal_commands.ab3"
0003B94F <internal_commands.ab3@38> INCLUDE "internal_commands.ab3"
0003B950 <internal_commands.ab3@39> INCLUDE "internal_commands.ab3"
0003B954 <internal_commands.ab3@42> INCLUDE "internal_commands.ab3"
0003B956 <internal_commands.ab3@43> INCLUDE "internal_commands.ab3"
0003B95B <internal_commands.ab3@44> INCLUDE "internal_commands.ab3"
0003B96B <internal_commands.ab3@45> INCLUDE "internal_commands.ab3"
0003B96C <internal_commands.ab3@46> INCLUDE "internal_commands.ab3"
0003B970 <internal_commands.ab3@49> INCLUDE "internal_commands.ab3"
0003B972 <internal_commands.ab3@50> INCLUDE "internal_commands.ab3"
0003B978 <internal_commands.ab3@51> INCLUDE "internal_commands.ab3"
0003B988 <internal_commands.ab3@52> INCLUDE "internal_commands.ab3"
0003B98C <internal_commands.ab3@56> INCLUDE "internal_commands.ab3"
0003B98E <internal_commands.ab3@57> INCLUDE "internal_commands.ab3"
0003B995 <internal_commands.ab3@58> INCLUDE "internal_commands.ab3"
0003B996 <internal_commands.ab3@59> INCLUDE "internal_commands.ab3"
0003B99A <internal_commands.ab3@63> INCLUDE "internal_commands.ab3"
0003B99C <internal_commands.ab3@64> INCLUDE "internal_commands.ab3"
0003B9A6 <internal_commands.ab3@65> INCLUDE "internal_commands.ab3"
0003B9D9 <internal_commands.ab3@66> INCLUDE "internal_commands.ab3"
0003B9DA <internal_commands.ab3@67> INCLUDE "internal_commands.ab3"
0003B9DE <internal_commands.ab3@70> INCLUDE "internal_commands.ab3"
0003B9E0 <internal_commands.ab3@71> INCLUDE "internal_commands.ab3"
0003B9E9 <internal_commands.ab3@72> INCLUDE "internal_commands.ab3"
0003BA24 <internal_commands.ab3@73> INCLUDE "internal_commands.ab3"
0003BA28 <internal_commands.ab3@77> INCLUDE "internal_commands.ab3"
0003BA2A <internal_commands.ab3@78> INCLUDE "internal_commands.ab3"
0003BA34 <internal_commands.ab3@79> INCLUDE "internal_commands.ab3"
0003BA35 <internal_commands.ab3@80> INCLUDE "internal_commands.ab3"
0003BA36 <internal_commands.ab3@81> INCLUDE "internal_commands.ab3"
0003BA3A <internal_commands.ab3@84> INCLUDE "internal_commands.ab3"
0003BA3C <internal_commands.ab3@85> INCLUDE "internal_commands.ab3"
0003BA3F <internal_commands.ab3@86> INCLUDE "internal_commands.ab3"
0003BA56 <internal_commands.ab3@87> INCLUDE "internal_commands.ab3"
0003BA5A <internal_commands.ab3@91> INCLUDE "internal_commands.ab3"
0003BA5C <internal_commands.ab3@92> INCLUDE "internal_commands.ab3"
0003BA62 <internal_commands.ab3@93> INCLUDE "internal_commands.ab3"
0003BA6F <internal_commands.ab3@94> INCLUDE "internal_commands.ab3"
0003BA70 <internal_commands.ab3@95> INCLUDE "internal_commands.ab3"
0003BA74 <internal_commands.ab3@98> INCLUDE "internal_commands.ab3"
0003BA76 <internal_commands.ab3@99> INCLUDE "internal_commands.ab3"
0003BA7C <internal_commands.ab3@100> INCLUDE "internal_commands.ab3"
0003BA88 <internal_commands.ab3@101> INCLUDE "internal_commands.ab3"
0003BA8C <internal_commands.ab3@105> INCLUDE "internal_commands.ab3"
0003BA8E <internal_commands.ab3@106> INCLUDE "internal_commands.ab3"
0003BA95 <internal_commands.ab3@107> INCLUDE "internal_commands.ab3"
0003BAA2 <internal_commands.ab3@108> INCLUDE "internal_commands.ab3"
0003BAA6 <internal_commands.ab3@112> INCLUDE "internal_commands.ab3"
0003BAA8 <internal_commands.ab3@113> INCLUDE "internal_commands.ab3"
0003BAAD <internal_commands.ab3@114> INCLUDE "internal_commands.ab3"
0003BABA <internal_commands.ab3@115> INCLUDE "internal_commands.ab3"
0003BABE <internal_commands.ab3@119> INCLUDE "internal_commands.ab3"
0003BAC0 <internal_commands.ab3@120> INCLUDE "internal_commands.ab3"
0003BAC8 <internal_commands.ab3@121> INCLUDE "internal_commands.ab3"
0003BAC9 <internal_commands.ab3@122> INCLUDE "internal_commands.ab3"
0003BACA <internal_commands.ab3@123> INCLUDE "internal_commands.ab3"
0003BACE <internal_commands.ab3@126> INCLUDE "internal_commands.ab3"
0003BAD0 <internal_commands.ab3@127> INCLUDE "internal_commands.ab3"
0003BAD8 <internal_commands.ab3@128> INCLUDE "internal_commands.ab3"
0003BAD9 <internal_commands.ab3@129> INCLUDE "internal_commands.ab3"
0003BADA <internal_commands.ab3@130> INCLUDE "internal_commands.ab3"
0003BADE <internal_commands.ab3@133> INCLUDE "internal_commands.ab3"
0003BAE0 <internal_commands.ab3@134> INCLUDE "internal_commands.ab3"
0003BAE9 <internal_commands.ab3@135> INCLUDE "internal_commands.ab3"
0003BAF4 <internal_commands.ab3@136> INCLUDE "internal_commands.ab3"
0003BAF8 <internal_commands.ab3@140> INCLUDE "internal_commands.ab3"
0003BAFA <internal_commands.ab3@141> INCLUDE "internal_commands.ab3"
0003BB02 <internal_commands.ab3@142> INCLUDE "internal_commands.ab3"
0003BB0D <internal_commands.ab3@143> INCLUDE "internal_commands.ab3"
0003BB0E <internal_commands.ab3@144> INCLUDE "internal_commands.ab3"
0003BB12 <internal_commands.ab3@147> INCLUDE "internal_commands.ab3"
0003BB14 <internal_commands.ab3@148> INCLUDE "internal_commands.ab3"
0003BB1B <internal_commands.ab3@149> INCLUDE "internal_commands.ab3"
0003BB7D <internal_commands.ab3@150> INCLUDE "internal_commands.ab3"
0003BB7E <internal_commands.ab3@151> INCLUDE "internal_commands.ab3"
0003BB82 <internal_commands.ab3@154> INCLUDE "internal_commands.ab3"
0003BB84 <internal_commands.ab3@155> INCLUDE "internal_commands.ab3"
0003BB8B <internal_commands.ab3@156> INCLUDE "internal_commands.ab3"
0003BB9A <internal_commands.ab3@157> INCLUDE "internal_commands.ab3"
0003BB9E <internal_commands.ab3@161> INCLUDE "internal_commands.ab3"
0003BBA0 <internal_commands.ab3@162> INCLUDE "internal_commands.ab3"
0003BBA4 <internal_commands.ab3@163> INCLUDE "internal_commands.ab3"
0003BBDA <internal_commands.ab3@164> INCLUDE "internal_commands.ab3"
0003BBDE <internal_commands.ab3@168> INCLUDE "internal_commands.ab3"
0003BBE0 <internal_commands.ab3@169> INCLUDE "internal_commands.ab3"
0003BBE5 <internal_commands.ab3@170> INCLUDE "internal_commands.ab3"
0003BBF4 <internal_commands.ab3@171> INCLUDE "internal_commands.ab3"
0003BBF8 <internal_commands.ab3@175> INCLUDE "internal_commands.ab3"
0003BBFA <internal_commands.ab3@176> INCLUDE "internal_commands.ab3"
0003BBFD <internal_commands.ab3@177> INCLUDE "internal_commands.ab3"
0003BC1E <internal_commands.ab3@178> INCLUDE "internal_commands.ab3"
0003BC22 <internal_commands.ab3@182> INCLUDE "internal_commands.ab3"
0003BC24 <internal_commands.ab3@183> INCLUDE "internal_commands.ab3"
0003BC29 <internal_commands.ab3@184> INCLUDE "internal_commands.ab3"
0003BC35 <internal_commands.ab3@185> INCLUDE "internal_commands.ab3"
0003BC36 <internal_commands.ab3@186> INCLUDE "internal_commands.ab3"
0003BC3A <internal_commands.ab3@189> INCLUDE "internal_commands.ab3"
0003BC3C <internal_commands.ab3@190> INCLUDE "internal_commands.ab3"
0003BC41 <internal_commands.ab3@191> INCLUDE "internal_commands.ab3"
0003BC58 <internal_commands.ab3@192> INCLUDE "internal_commands.ab3"
0003BC5C <internal_commands.ab3@196> INCLUDE "internal_commands.ab3"
0003BC5E <internal_commands.ab3@197> INCLUDE "internal_commands.ab3"
0003BC63 <internal_commands.ab3@198> INCLUDE "internal_commands.ab3"
0003BC72 <internal_commands.ab3@199> INCLUDE "internal_commands.ab3"
0003BC76 <internal_commands.ab3@203> INCLUDE "internal_commands.ab3"
0003BC78 <internal_commands.ab3@204> INCLUDE "internal_commands.ab3"
0003BC7D <internal_commands.ab3@205> INCLUDE "internal_commands.ab3"
0003BC9C <internal_commands.ab3@206> INCLUDE "internal_commands.ab3"
0003BCA0 <internal_commands.ab3@210> INCLUDE "internal_commands.ab3"
0003BCA2 <internal_commands.ab3@211> INCLUDE "internal_commands.ab3"
0003BCA7 <internal_commands.ab3@212> INCLUDE "internal_commands.ab3"
0003BCC6 <internal_commands.ab3@213> INCLUDE "internal_commands.ab3"
0003BCCA <internal_commands.ab3@217> INCLUDE "internal_commands.ab3"
0003BCCC <internal_commands.ab3@218> INCLUDE "internal_commands.ab3"
0003BCD2 <internal_commands.ab3@219> INCLUDE "internal_commands.ab3"
0003BCD3 <internal_commands.ab3@220> INCLUDE "internal_commands.ab3"
0003BCD4 <internal_commands.ab3@221> INCLUDE "internal_commands.ab3"
0003BCD8 <internal_commands.ab3@224> INCLUDE "internal_commands.ab3"
0003BCDA <internal_commands.ab3@225> INCLUDE "internal_commands.ab3"
0003BCDF <internal_commands.ab3@226> INCLUDE "internal_commands.ab3"
0003BCE0 <internal_commands.ab3@227> INCLUDE "internal_commands.ab3"
0003BCE4 <internal_commands.ab3@231> INCLUDE "internal_commands.ab3"
0003BCE6 <internal_commands.ab3@232> INCLUDE "internal_commands.ab3"
0003BCEB <internal_commands.ab3@233> INCLUDE "internal_commands.ab3"
0003BCF8 <internal_commands.ab3@234> INCLUDE "internal_commands.ab3"
0003BCFC <internal_commands.ab3@238> INCLUDE "internal_commands.ab3"
0003BCFE <internal_commands.ab3@239> INCLUDE "internal_commands.ab3"
0003BD03 <internal_commands.ab3@240> INCLUDE "internal_commands.ab3"
0003BD12 <internal_commands.ab3@241> INCLUDE "internal_commands.ab3"
0003BD16 <internal_commands.ab3@245> INCLUDE "internal_commands.ab3"
0003BD18 <internal_commands.ab3@246> INCLUDE "internal_commands.ab3"
0003BD1D <internal_commands.ab3@247> INCLUDE "internal_commands.ab3"
0003BD2C <internal_commands.ab3@248> INCLUDE "internal_commands.ab3"
0003BD30 <internal_commands.ab3@252> INCLUDE "internal_commands.ab3"
0003BD32 <internal_commands.ab3@253> INCLUDE "internal_commands.ab3"
0003BD38 <internal_commands.ab3@254> INCLUDE "internal_commands.ab3"
0003BD55 <internal_commands.ab3@255> INCLUDE "internal_commands.ab3"
0003BD56 <internal_commands.ab3@256> INCLUDE "internal_commands.ab3"
0003BD5A <internal_commands.ab3@259> INCLUDE "internal_commands.ab3"
0003BD5C <internal_commands.ab3@260> INCLUDE "internal_commands.ab3"
0003BD62 <internal_commands.ab3@261> INCLUDE "internal_commands.ab3"
0003BD7F <internal_commands.ab3@262> INCLUDE "internal_commands.ab3"
0003BD80 <internal_commands.ab3@263> INCLUDE "internal_commands.ab3"
0003BD84 <internal_commands.ab3@266> INCLUDE "internal_commands.ab3"
0003BD86 <internal_commands.ab3@267> INCLUDE "internal_commands.ab3"
0003BD89 <internal_commands.ab3@268> INCLUDE "internal_commands.ab3"
0003BDA0 <internal_commands.ab3@269> INCLUDE "internal_commands.ab3"
0003BDA4 <internal_commands.ab3@273> INCLUDE "internal_commands.ab3"
0003BDA6 <internal_commands.ab3@274> INCLUDE "internal_commands.ab3"
0003BDA9 <internal_commands.ab3@275> INCLUDE "internal_commands.ab3"
0003BDB8 <internal_commands.ab3@276> INCLUDE "internal_commands.ab3"
0003BDBC <internal_commands.ab3@280> INCLUDE "internal_commands.ab3"
0003BDBE <internal_commands.ab3@281> INCLUDE "internal_commands.ab3"
0003BDC3 <internal_commands.ab3@282> INCLUDE "internal_commands.ab3"
0003BDC4 <internal_commands.ab3@283> INCLUDE "internal_commands.ab3"
0003BDC8 <internal_commands.ab3@287> INCLUDE "internal_commands.ab3"
0003BDCA <internal_commands.ab3@288> INCLUDE "internal_commands.ab3"
0003BDCE <internal_commands.ab3@289> INCLUDE "internal_commands.ab3"
0003BDE3 <internal_commands.ab3@290> INCLUDE "internal_commands.ab3"
0003BDE4 <internal_commands.ab3@291> INCLUDE "internal_commands.ab3"
0003BDE8 <internal_commands.ab3@294> INCLUDE "internal_commands.ab3"
0003BDEA <internal_commands.ab3@295> INCLUDE "internal_commands.ab3"
0003BDF1 <internal_commands.ab3@296> INCLUDE "internal_commands.ab3"
0003BE0A <internal_commands.ab3@297> INCLUDE "internal_commands.ab3"
0003BE0E <internal_commands.ab3@301> INCLUDE "internal_commands.ab3"
0003BE10 <internal_commands.ab3@302> INCLUDE "internal_commands.ab3"
0003BE17 <internal_commands.ab3@303> INCLUDE "internal_commands.ab3"
0003BE22 <internal_commands.ab3@304> INCLUDE "internal_commands.ab3"
0003BE26 <internal_commands.ab3@308> INCLUDE "internal_commands.ab3"
0003BE28 <internal_commands.ab3@309> INCLUDE "internal_commands.ab3"
0003BE2D <internal_commands.ab3@310> INCLUDE "internal_commands.ab3"
0003BE44 <internal_commands.ab3@311> INCLUDE "internal_commands.ab3"
0003BE48 <internal_commands.ab3@315> INCLUDE "internal_commands.ab3"
0003BE4A <internal_commands.ab3@316> INCLUDE "internal_commands.ab3"
0003BE4E <internal_commands.ab3@317> INCLUDE "internal_commands.ab3"
0003BE65 <internal_commands.ab3@318> INCLUDE "internal_commands.ab3"
0003BE66 <internal_commands.ab3@319> INCLUDE "internal_commands.ab3"
0003BE6A <internal_commands.ab3@322> INCLUDE "internal_commands.ab3"
0003BE6C <internal_commands.ab3@323> INCLUDE "internal_commands.ab3"
0003BE71 <internal_commands.ab3@324> INCLUDE "internal_commands.ab3"
0003BE72 <internal_commands.ab3@325> INCLUDE "internal_commands.ab3"
0003BE76 <internal_commands.ab3@329> INCLUDE "internal_commands.ab3"
0003BE78 <internal_commands.ab3@330> INCLUDE "internal_commands.ab3"
0003BE7D <internal_commands.ab3@331> INCLUDE "internal_commands.ab3"
0003BE81 <internal_commands.ab3@332> INCLUDE "internal_commands.ab3"
0003BE82 <internal_commands.ab3@333> INCLUDE "internal_commands.ab3"
0003BE86 <internal_commands.ab3@336> INCLUDE "internal_commands.ab3"
0003BE88 <internal_commands.ab3@337> INCLUDE "internal_commands.ab3"
0003BE8F <internal_commands.ab3@338> INCLUDE "internal_commands.ab3"
0003BEA7 <internal_commands.ab3@339> INCLUDE "internal_commands.ab3"
0003BEA8 <internal_commands.ab3@340> INCLUDE "internal_commands.ab3"
0003BEAC <internal_commands.ab3@343> INCLUDE "internal_commands.ab3"
0003BEAE <internal_commands.ab3@344> INCLUDE "internal_commands.ab3"
0003BEB5 <internal_commands.ab3@345> INCLUDE "internal_commands.ab3"
0003BEBA <internal_commands.ab3@346> INCLUDE "internal_commands.ab3"
0003BEBE <internal_commands.ab3@350> INCLUDE "internal_commands.ab3"
0003BEC0 <internal_commands.ab3@351> INCLUDE "internal_commands.ab3"
0003BEC7 <internal_commands.ab3@352> INCLUDE "internal_commands.ab3"
0003BECC <internal_commands.ab3@353> INCLUDE "internal_commands.ab3"
0003BED0 <internal_commands.ab3@357> INCLUDE "internal_commands.ab3"
0003BED2 <internal_commands.ab3@358> INCLUDE "internal_commands.ab3"
0003BED9 <internal_commands.ab3@359> INCLUDE "internal_commands.ab3"
0003BEF4 <internal_commands.ab3@360> INCLUDE "internal_commands.ab3"
0003BEF8 <internal_commands.ab3@364> INCLUDE "internal_commands.ab3"
0003BEFA <internal_commands.ab3@365> INCLUDE "internal_commands.ab3"
0003BF02 <internal_commands.ab3@366> INCLUDE "internal_commands.ab3"
0003BF1B <internal_commands.ab3@367> INCLUDE "internal_commands.ab3"
0003BF1C <internal_commands.ab3@368> INCLUDE "internal_commands.ab3"
0003BF20 <internal_commands.ab3@371> INCLUDE "internal_commands.ab3"
0003BF22 <internal_commands.ab3@372> INCLUDE "internal_commands.ab3"
0003BF28 <internal_commands.ab3@373> INCLUDE "internal_commands.ab3"
0003BF29 <internal_commands.ab3@374> INCLUDE "internal_commands.ab3"
0003BF2A <internal_commands.ab3@375> INCLUDE "internal_commands.ab3"
0003BF2E <internal_commands.ab3@378> INCLUDE "internal_commands.ab3"
0003BF30 <internal_commands.ab3@379> INCLUDE "internal_commands.ab3"
0003BF36 <internal_commands.ab3@380> INCLUDE "internal_commands.ab3"
0003BF37 <internal_commands.ab3@381> INCLUDE "internal_commands.ab3"
0003BF38 <internal_commands.ab3@382> INCLUDE "internal_commands.ab3"
0003BF3C <internal_commands.ab3@385> INCLUDE "internal_commands.ab3"
0003BF3E <internal_commands.ab3@386> INCLUDE "internal_commands.ab3"
0003BF45 <internal_commands.ab3@387> INCLUDE "internal_commands.ab3"
0003BF46 <internal_commands.ab3@388> INCLUDE "internal_commands.ab3"
0003BF4A <internal_commands.ab3@392> INCLUDE "internal_commands.ab3"
0003BF4C <internal_commands.ab3@393> INCLUDE "internal_commands.ab3"
0003BF52 <internal_commands.ab3@394> INCLUDE "internal_commands.ab3"
0003BF5B <internal_commands.ab3@395> INCLUDE "internal_commands.ab3"
0003BF5C <internal_commands.ab3@396> INCLUDE "internal_commands.ab3"
0003BF60 <internal_commands.ab3@399> INCLUDE "internal_commands.ab3"
0003BF62 <internal_commands.ab3@400> INCLUDE "internal_commands.ab3"
0003BF6A <internal_commands.ab3@401> INCLUDE "internal_commands.ab3"
0003BF77 <internal_commands.ab3@402> INCLUDE "internal_commands.ab3"
0003BF78 <internal_commands.ab3@403> INCLUDE "internal_commands.ab3"
0003BF7C <internal_commands.ab3@406> INCLUDE "internal_commands.ab3"
0003BF7E <internal_commands.ab3@407> INCLUDE "internal_commands.ab3"
0003BF86 <internal_commands.ab3@408> INCLUDE "internal_commands.ab3"
0003BF93 <internal_commands.ab3@409> INCLUDE "internal_commands.ab3"
0003BF94 <internal_commands.ab3@410> INCLUDE "internal_commands.ab3"
0003BF98 <internal_commands.ab3@413> INCLUDE "internal_commands.ab3"
0003BF9A <internal_commands.ab3@414> INCLUDE "internal_commands.ab3"
0003BFA2 <internal_commands.ab3@415> INCLUDE "internal_commands.ab3"
0003BFAF <internal_commands.ab3@416> INCLUDE "internal_commands.ab3"
0003BFB0 <internal_commands.ab3@417> INCLUDE "internal_commands.ab3"
0003BFB4 <internal_commands.ab3@420> INCLUDE "internal_commands.ab3"
0003BFB6 <internal_commands.ab3@421> INCLUDE "internal_commands.ab3"
0003BFBB <internal_commands.ab3@422> INCLUDE "internal_commands.ab3"
0003BFBC <internal_commands.ab3@423> INCLUDE "internal_commands.ab3"
0003BFC0 <internal_commands.ab3@437> INCLUDE "internal_commands.ab3"
0003BFC2 <internal_commands.ab3@438> INCLUDE "internal_commands.ab3"
0003BFC7 <internal_commands.ab3@439> INCLUDE "internal_commands.ab3"
0003BFC8 <internal_commands.ab3@440> INCLUDE "internal_commands.ab3"
0003BFCA <internal_commands.ab3@443> INCLUDE "internal_commands.ab3"
0003BFCE <internal_commands.ab3@444> INCLUDE "internal_commands.ab3"
0003BFD0 <internal_commands.ab3@445> INCLUDE "internal_commands.ab3"
0003BFD2 <internal_commands.ab3@446> INCLUDE "internal_commands.ab3"
0003BFD6 <internal_commands.ab3@447> INCLUDE "internal_commands.ab3"
0003BFD8 <internal_commands.ab3@448> INCLUDE "internal_commands.ab3"
0003BFDC <internal_commands.ab3@452> INCLUDE "internal_commands.ab3"
0003BFDE <internal_commands.ab3@453> INCLUDE "internal_commands.ab3"
0003BFE2 <internal_commands.ab3@454> INCLUDE "internal_commands.ab3"
0003BFE3 <internal_commands.ab3@455> INCLUDE "internal_commands.ab3"
0003BFE4 <internal_commands.ab3@456> INCLUDE "internal_commands.ab3"
0003BFE6 <internal_commands.ab3@458> INCLUDE "internal_commands.ab3"
0003BFEA <internal_commands.ab3@459> INCLUDE "internal_commands.ab3"
0003BFEC <internal_commands.ab3@460> INCLUDE "internal_commands.ab3"
0003BFEE <internal_commands.ab3@461> INCLUDE "internal_commands.ab3"
0003BFF2 <internal_commands.ab3@462> INCLUDE "internal_commands.ab3"
0003BFF4 <internal_commands.ab3@463> INCLUDE "internal_commands.ab3"
0003BFF8 <internal_commands.ab3@467> INCLUDE "internal_commands.ab3"
0003BFFA <internal_commands.ab3@468> INCLUDE "internal_commands.ab3"
0003BFFF <internal_commands.ab3@469> INCLUDE "internal_commands.ab3"
0003C000 <internal_commands.ab3@470> INCLUDE "internal_commands.ab3"
0003C002 <internal_commands.ab3@473> INCLUDE "internal_commands.ab3"
0003C006 <internal_commands.ab3@474> INCLUDE "internal_commands.ab3"
0003C008 <internal_commands.ab3@475> INCLUDE "internal_commands.ab3"
0003C00A <internal_commands.ab3@476> INCLUDE "internal_commands.ab3"
0003C00E <internal_commands.ab3@477> INCLUDE "internal_commands.ab3"
0003C010 <internal_commands.ab3@478> INCLUDE "internal_commands.ab3"
0003C014 <internal_commands.ab3@482> INCLUDE "internal_commands.ab3"
0003C016 <internal_commands.ab3@483> INCLUDE "internal_commands.ab3"
0003C01B <internal_commands.ab3@484> INCLUDE "internal_commands.ab3"
0003C01C <internal_commands.ab3@485> INCLUDE "internal_commands.ab3"
0003C01E <internal_commands.ab3@488> INCLUDE "internal_commands.ab3"
0003C022 <internal_commands.ab3@489> INCLUDE "internal_commands.ab3"
0003C024 <internal_commands.ab3@490> INCLUDE "internal_commands.ab3"
0003C026 <internal_commands.ab3@491> INCLUDE "internal_commands.ab3"
0003C02A <internal_commands.ab3@492> INCLUDE "internal_commands.ab3"
0003C02C <internal_commands.ab3@493> INCLUDE "internal_commands.ab3"
0003C030 <internal_commands.ab3@497> INCLUDE "internal_commands.ab3"
0003C032 <internal_commands.ab3@498> INCLUDE "internal_commands.ab3"
0003C037 <internal_commands.ab3@499> INCLUDE "internal_commands.ab3"
0003C038 <internal_commands.ab3@500> INCLUDE "internal_commands.ab3"
0003C03A <internal_commands.ab3@503> INCLUDE "internal_commands.ab3"
0003C03E <internal_commands.ab3@504> INCLUDE "internal_commands.ab3"
0003C040 <internal_commands.ab3@505> INCLUDE "internal_commands.ab3"
0003C042 <internal_commands.ab3@506> INCLUDE "internal_commands.ab3"
0003C046 <internal_commands.ab3@507> INCLUDE "internal_commands.ab3"
0003C048 <internal_commands.ab3@508> INCLUDE "internal_commands.ab3"
0003C04C <internal_commands.ab3@512> INCLUDE "internal_commands.ab3"
0003C04E <internal_commands.ab3@513> INCLUDE "internal_commands.ab3"
0003C053 <internal_commands.ab3@514> INCLUDE "internal_commands.ab3"
0003C054 <internal_commands.ab3@515> INCLUDE "internal_commands.ab3"
0003C056 <internal_commands.ab3@518> INCLUDE "internal_commands.ab3"
0003C05A <internal_commands.ab3@519> INCLUDE "internal_commands.ab3"
0003C05C <internal_commands.ab3@520> INCLUDE "internal_commands.ab3"
0003C05E <internal_commands.ab3@521> INCLUDE "internal_commands.ab3"
0003C062 <internal_commands.ab3@522> INCLUDE "internal_commands.ab3"
0003C064 <internal_commands.ab3@523> INCLUDE "internal_commands.ab3"
0003C068 <internal_commands.ab3@527> INCLUDE "internal_commands.ab3"
0003C06A <internal_commands.ab3@528> INCLUDE "internal_commands.ab3"
0003C06E <internal_commands.ab3@529> INCLUDE "internal_commands.ab3"
0003C06F <internal_commands.ab3@530> INCLUDE "internal_commands.ab3"
0003C070 <internal_commands.ab3@531> INCLUDE "internal_commands.ab3"
0003C072 <internal_commands.ab3@533> INCLUDE "internal_commands.ab3"
0003C076 <internal_commands.ab3@534> INCLUDE "internal_commands.ab3"
0003C078 <internal_commands.ab3@535> INCLUDE "internal_commands.ab3"
0003C07A <internal_commands.ab3@536> INCLUDE "internal_commands.ab3"
0003C07E <internal_commands.ab3@537> INCLUDE "internal_commands.ab3"
0003C080 <internal_commands.ab3@538> INCLUDE "internal_commands.ab3"
0003C084 <internal_commands.ab3@542> INCLUDE "internal_commands.ab3"
0003C086 <internal_commands.ab3@543> INCLUDE "internal_commands.ab3"
0003C08B <internal_commands.ab3@544> INCLUDE "internal_commands.ab3"
0003C08C <internal_commands.ab3@545> INCLUDE "internal_commands.ab3"
0003C08E <internal_commands.ab3@548> INCLUDE "internal_commands.ab3"
0003C092 <internal_commands.ab3@549> INCLUDE "internal_commands.ab3"
0003C094 <internal_commands.ab3@550> INCLUDE "internal_commands.ab3"
0003C096 <internal_commands.ab3@551> INCLUDE "internal_commands.ab3"
0003C09A <internal_commands.ab3@552> INCLUDE "internal_commands.ab3"
0003C09C <internal_commands.ab3@553> INCLUDE "internal_commands.ab3"
0003C0A0 <internal_commands.ab3@557> INCLUDE "internal_commands.ab3"
0003C0A2 <internal_commands.ab3@558> INCLUDE "internal_commands.ab3"
0003C0A6 <internal_commands.ab3@559> INCLUDE "internal_commands.ab3"
0003C0A7 <internal_commands.ab3@560> INCLUDE "internal_commands.ab3"
0003C0A8 <internal_commands.ab3@561> INCLUDE "internal_commands.ab3"
0003C0AA <internal_commands.ab3@563> INCLUDE "internal_commands.ab3"
0003C0AE <internal_commands.ab3@564> INCLUDE "internal_commands.ab3"
0003C0B0 <internal_commands.ab3@565> INCLUDE "internal_commands.ab3"
0003C0B2 <internal_commands.ab3@566> INCLUDE "internal_commands.ab3"
0003C0B6 <internal_commands.ab3@567> INCLUDE "internal_commands.ab3"
0003C0B8 <internal_commands.ab3@568> INCLUDE "internal_commands.ab3"
0003C0BC <internal_commands.ab3@572> INCLUDE "internal_commands.ab3"
0003C0BE <internal_commands.ab3@573> INCLUDE "internal_commands.ab3"
0003C0C2 <internal_commands.ab3@574> INCLUDE "internal_commands.ab3"
0003C0C3 <internal_commands.ab3@575> INCLUDE "internal_commands.ab3"
0003C0C4 <internal_commands.ab3@576> INCLUDE "internal_commands.ab3"
0003C0C6 <internal_commands.ab3@578> INCLUDE "internal_commands.ab3"
0003C0CA <internal_commands.ab3@579> INCLUDE "internal_commands.ab3"
0003C0CC <internal_commands.ab3@580> INCLUDE "internal_commands.ab3"
0003C0CE <internal_commands.ab3@581> INCLUDE "internal_commands.ab3"
0003C0D2 <internal_commands.ab3@582> INCLUDE "internal_commands.ab3"
0003C0D4 <internal_commands.ab3@583> INCLUDE "internal_commands.ab3"
0003C0D8 <internal_commands.ab3@587> INCLUDE "internal_commands.ab3"
0003C0DA <internal_commands.ab3@588> INCLUDE "internal_commands.ab3"
0003C0DE <internal_commands.ab3@589> INCLUDE "internal_commands.ab3"
0003C0DF <internal_commands.ab3@590> INCLUDE "internal_commands.ab3"
0003C0E0 <internal_commands.ab3@591> INCLUDE "internal_commands.ab3"
0003C0E2 <internal_commands.ab3@593> INCLUDE "internal_commands.ab3"
0003C0E6 <internal_commands.ab3@594> INCLUDE "internal_commands.ab3"
0003C0E8 <internal_commands.ab3@595> INCLUDE "internal_commands.ab3"
0003C0EA <internal_commands.ab3@596> INCLUDE "internal_commands.ab3"
0003C0EE <internal_commands.ab3@597> INCLUDE "internal_commands.ab3"
0003C0F0 <internal_commands.ab3@598> INCLUDE "internal_commands.ab3"
0003C0F4 <internal_commands.ab3@602> INCLUDE "internal_commands.ab3"
0003C0F6 <internal_commands.ab3@603> INCLUDE "internal_commands.ab3"
0003C0FA <internal_commands.ab3@604> INCLUDE "internal_commands.ab3"
0003C0FB <internal_commands.ab3@605> INCLUDE "internal_commands.ab3"
0003C0FC <internal_commands.ab3@606> INCLUDE "internal_commands.ab3"
0003C0FE <internal_commands.ab3@608> INCLUDE "internal_commands.ab3"
0003C102 <internal_commands.ab3@609> INCLUDE "internal_commands.ab3"
0003C104 <internal_commands.ab3@610> INCLUDE "internal_commands.ab3"
0003C106 <internal_commands.ab3@611> INCLUDE "internal_commands.ab3"
0003C10A <internal_commands.ab3@612> INCLUDE "internal_commands.ab3"
0003C10C <internal_commands.ab3@613> INCLUDE "internal_commands.ab3"
0003C110 <internal_commands.ab3@617> INCLUDE "internal_commands.ab3"
0003C112 <internal_commands.ab3@618> INCLUDE "internal_commands.ab3"
0003C116 <internal_commands.ab3@619> INCLUDE "internal_commands.ab3"
0003C117 <internal_commands.ab3@620> INCLUDE "internal_commands.ab3"
0003C118 <internal_commands.ab3@621> INCLUDE "internal_commands.ab3"
0003C11A <internal_commands.ab3@623> INCLUDE "internal_commands.ab3"
0003C11E <internal_commands.ab3@624> INCLUDE "internal_commands.ab3"
0003C120 <internal_commands.ab3@625> INCLUDE "internal_commands.ab3"
0003C122 <internal_commands.ab3@626> INCLUDE "internal_commands.ab3"
0003C126 <internal_commands.ab3@627> INCLUDE "internal_commands.ab3"
0003C128 <internal_commands.ab3@628> INCLUDE "internal_commands.ab3"
0003C12C <internal_commands.ab3@632> INCLUDE "internal_commands.ab3"
0003C12E <internal_commands.ab3@633> INCLUDE "internal_commands.ab3"
0003C132 <internal_commands.ab3@634> INCLUDE "internal_commands.ab3"
0003C133 <internal_commands.ab3@635> INCLUDE "internal_commands.ab3"
0003C134 <internal_commands.ab3@636> INCLUDE "internal_commands.ab3"
0003C136 <internal_commands.ab3@638> INCLUDE "internal_commands.ab3"
0003C13A <internal_commands.ab3@639> INCLUDE "internal_commands.ab3"
0003C13C <internal_commands.ab3@640> INCLUDE "internal_commands.ab3"
0003C13E <internal_commands.ab3@641> INCLUDE "internal_commands.ab3"
0003C142 <internal_commands.ab3@642> INCLUDE "internal_commands.ab3"
0003C144 <internal_commands.ab3@643> INCLUDE "internal_commands.ab3"
0003C148 <internal_commands.ab3@647> INCLUDE "internal_commands.ab3"
0003C14A <internal_commands.ab3@648> INCLUDE "internal_commands.ab3"
0003C14E <internal_commands.ab3@649> INCLUDE "internal_commands.ab3"
0003C14F <internal_commands.ab3@650> INCLUDE "internal_commands.ab3"
0003C150 <internal_commands.ab3@651> INCLUDE "internal_commands.ab3"
0003C152 <internal_commands.ab3@653> INCLUDE "internal_commands.ab3"
0003C156 <internal_commands.ab3@654> INCLUDE "internal_commands.ab3"
0003C158 <internal_commands.ab3@655> INCLUDE "internal_commands.ab3"
0003C15A <internal_commands.ab3@656> INCLUDE "internal_commands.ab3"
0003C15E <internal_commands.ab3@657> INCLUDE "internal_commands.ab3"
0003C160 <internal_commands.ab3@658> INCLUDE "internal_commands.ab3"
0003C164 <internal_commands.ab3@662> INCLUDE "internal_commands.ab3"
0003C166 <internal_commands.ab3@663> INCLUDE "internal_commands.ab3"
0003C16A <internal_commands.ab3@664> INCLUDE "internal_commands.ab3"
0003C16B <internal_commands.ab3@665> INCLUDE "internal_commands.ab3"
0003C16C <internal_commands.ab3@666> INCLUDE "internal_commands.ab3"
0003C16E <internal_commands.ab3@668> INCLUDE "internal_commands.ab3"
0003C172 <internal_commands.ab3@669> INCLUDE "internal_commands.ab3"
0003C174 <internal_commands.ab3@670> INCLUDE "internal_commands.ab3"
0003C176 <internal_commands.ab3@671> INCLUDE "internal_commands.ab3"
0003C17A <internal_commands.ab3@672> INCLUDE "internal_commands.ab3"
0003C17C <internal_commands.ab3@673> INCLUDE "internal_commands.ab3"
0003C180 <internal_commands.ab3@677> INCLUDE "internal_commands.ab3"
0003C182 <internal_commands.ab3@678> INCLUDE "internal_commands.ab3"
0003C186 <internal_commands.ab3@679> INCLUDE "internal_commands.ab3"
0003C187 <internal_commands.ab3@680> INCLUDE "internal_commands.ab3"
0003C188 <internal_commands.ab3@681> INCLUDE "internal_commands.ab3"
0003C18A <internal_commands.ab3@683> INCLUDE "internal_commands.ab3"
0003C18E <internal_commands.ab3@684> INCLUDE "internal_commands.ab3"
0003C190 <internal_commands.ab3@685> INCLUDE "internal_commands.ab3"
0003C192 <internal_commands.ab3@686> INCLUDE "internal_commands.ab3"
0003C196 <internal_commands.ab3@687> INCLUDE "internal_commands.ab3"
0003C198 <internal_commands.ab3@688> INCLUDE "internal_commands.ab3"
0003C19C <internal_commands.ab3@692> INCLUDE "internal_commands.ab3"
0003C19E <internal_commands.ab3@693> INCLUDE "internal_commands.ab3"
0003C1A2 <internal_commands.ab3@694> INCLUDE "internal_commands.ab3"
0003C1A3 <internal_commands.ab3@695> INCLUDE "internal_commands.ab3"
0003C1A4 <internal_commands.ab3@696> INCLUDE "internal_commands.ab3"
0003C1A6 <internal_commands.ab3@698> INCLUDE "internal_commands.ab3"
0003C1AA <internal_commands.ab3@699> INCLUDE "internal_commands.ab3"
0003C1AC <internal_commands.ab3@700> INCLUDE "internal_commands.ab3"
0003C1AE <internal_commands.ab3@701> INCLUDE "internal_commands.ab3"
0003C1B2 <internal_commands.ab3@702> INCLUDE "internal_commands.ab3"
0003C1B4 <internal_commands.ab3@703> INCLUDE "internal_commands.ab3"
0003C1B8 <internal_commands.ab3@707> INCLUDE "internal_commands.ab3"
0003C1BA <internal_commands.ab3@708> INCLUDE "internal_commands.ab3"
0003C1BE <internal_commands.ab3@709> INCLUDE "internal_commands.ab3"
0003C1BF <internal_commands.ab3@710> INCLUDE "internal_commands.ab3"
0003C1C0 <internal_commands.ab3@711> INCLUDE "internal_commands.ab3"
0003C1C2 <internal_commands.ab3@713> INCLUDE "internal_commands.ab3"
0003C1C6 <internal_commands.ab3@714> INCLUDE "internal_commands.ab3"
0003C1C8 <internal_commands.ab3@715> INCLUDE "internal_commands.ab3"
0003C1CA <internal_commands.ab3@716> INCLUDE "internal_commands.ab3"
0003C1CE <internal_commands.ab3@717> INCLUDE "internal_commands.ab3"
0003C1D0 <internal_commands.ab3@718> INCLUDE "internal_commands.ab3"
0003C1D4 <internal_commands.ab3@722> INCLUDE "internal_commands.ab3"
0003C1D6 <internal_commands.ab3@723> INCLUDE "internal_commands.ab3"
0003C1DA <internal_commands.ab3@724> INCLUDE "internal_commands.ab3"
0003C1DB <internal_commands.ab3@725> INCLUDE "internal_commands.ab3"
0003C1DC <internal_commands.ab3@726> INCLUDE "internal_commands.ab3"
0003C1DE <internal_commands.ab3@728> INCLUDE "internal_commands.ab3"
0003C1E2 <internal_commands.ab3@729> INCLUDE "internal_commands.ab3"
0003C1E4 <internal_commands.ab3@730> INCLUDE "internal_commands.ab3"
0003C1E6 <internal_commands.ab3@731> INCLUDE "internal_commands.ab3"
0003C1EA <internal_commands.ab3@732> INCLUDE "internal_commands.ab3"
0003C1EC <internal_commands.ab3@733> INCLUDE "internal_commands.ab3"
0003C1F0 <internal_commands.ab3@737> INCLUDE "internal_commands.ab3"
0003C1F2 <internal_commands.ab3@738> INCLUDE "internal_commands.ab3"
0003C1F6 <internal_commands.ab3@739> INCLUDE "internal_commands.ab3"
0003C1F7 <internal_commands.ab3@740> INCLUDE "internal_commands.ab3"
0003C1F8 <internal_commands.ab3@741> INCLUDE "internal_commands.ab3"
0003C1FA <internal_commands.ab3@743> INCLUDE "internal_commands.ab3"
0003C1FE <internal_commands.ab3@744> INCLUDE "internal_commands.ab3"
0003C200 <internal_commands.ab3@745> INCLUDE "internal_commands.ab3"
0003C202 <internal_commands.ab3@746> INCLUDE "internal_commands.ab3"
0003C206 <internal_commands.ab3@747> INCLUDE "internal_commands.ab3"
0003C208 <internal_commands.ab3@748> INCLUDE "internal_commands.ab3"
0003C20C <internal_commands.ab3@752> INCLUDE "internal_commands.ab3"
0003C20E <internal_commands.ab3@753> INCLUDE "internal_commands.ab3"
0003C212 <internal_commands.ab3@754> INCLUDE "internal_commands.ab3"
0003C213 <internal_commands.ab3@755> INCLUDE "internal_commands.ab3"
0003C214 <internal_commands.ab3@756> INCLUDE "internal_commands.ab3"
0003C216 <internal_commands.ab3@758> INCLUDE "internal_commands.ab3"
0003C21A <internal_commands.ab3@759> INCLUDE "internal_commands.ab3"
0003C21C <internal_commands.ab3@760> INCLUDE "internal_commands.ab3"
0003C21E <internal_commands.ab3@761> INCLUDE "internal_commands.ab3"
0003C222 <internal_commands.ab3@762> INCLUDE "internal_commands.ab3"
0003C224 <internal_commands.ab3@763> INCLUDE "internal_commands.ab3"
0003C228 <internal_commands.ab3@767> INCLUDE "internal_commands.ab3"
0003C22A <internal_commands.ab3@768> INCLUDE "internal_commands.ab3"
0003C22E <internal_commands.ab3@769> INCLUDE "internal_commands.ab3"
0003C22F <internal_commands.ab3@770> INCLUDE "internal_commands.ab3"
0003C230 <internal_commands.ab3@771> INCLUDE "internal_commands.ab3"
0003C232 <internal_commands.ab3@773> INCLUDE "internal_commands.ab3"
0003C236 <internal_commands.ab3@774> INCLUDE "internal_commands.ab3"
0003C238 <internal_commands.ab3@775> INCLUDE "internal_commands.ab3"
0003C23A <internal_commands.ab3@776> INCLUDE "internal_commands.ab3"
0003C23E <internal_commands.ab3@777> INCLUDE "internal_commands.ab3"
0003C240 <internal_commands.ab3@778> INCLUDE "internal_commands.ab3"
0003C244 <internal_commands.ab3@782> INCLUDE "internal_commands.ab3"
0003C246 <internal_commands.ab3@783> INCLUDE "internal_commands.ab3"
0003C24A <internal_commands.ab3@784> INCLUDE "internal_commands.ab3"
0003C24B <internal_commands.ab3@785> INCLUDE "internal_commands.ab3"
0003C24C <internal_commands.ab3@786> INCLUDE "internal_commands.ab3"
0003C24E <internal_commands.ab3@788> INCLUDE "internal_commands.ab3"
0003C252 <internal_commands.ab3@789> INCLUDE "internal_commands.ab3"
0003C254 <internal_commands.ab3@790> INCLUDE "internal_commands.ab3"
0003C256 <internal_commands.ab3@791> INCLUDE "internal_commands.ab3"
0003C25A <internal_commands.ab3@792> INCLUDE "internal_commands.ab3"
0003C25C <internal_commands.ab3@793> INCLUDE "internal_commands.ab3"
0003C260 <internal_commands.ab3@797> INCLUDE "internal_commands.ab3"
0003C262 <internal_commands.ab3@798> INCLUDE "internal_commands.ab3"
0003C267 <internal_commands.ab3@799> INCLUDE "internal_commands.ab3"
0003C268 <internal_commands.ab3@800> INCLUDE "internal_commands.ab3"
0003C26A <internal_commands.ab3@803> INCLUDE "internal_commands.ab3"
0003C26E <internal_commands.ab3@804> INCLUDE "internal_commands.ab3"
0003C270 <internal_commands.ab3@805> INCLUDE "internal_commands.ab3"
0003C272 <internal_commands.ab3@806> INCLUDE "internal_commands.ab3"
0003C276 <internal_commands.ab3@807> INCLUDE "internal_commands.ab3"
0003C278 <internal_commands.ab3@808> INCLUDE "internal_commands.ab3"
0003C27C <internal_commands.ab3@812> INCLUDE "internal_commands.ab3"
0003C27E <internal_commands.ab3@813> INCLUDE "internal_commands.ab3"
0003C283 <internal_commands.ab3@814> INCLUDE "internal_commands.ab3"
0003C284 <internal_commands.ab3@815> INCLUDE "internal_commands.ab3"
0003C286 <internal_commands.ab3@818> INCLUDE "internal_commands.ab3"
0003C28A <internal_commands.ab3@819> INCLUDE "internal_commands.ab3"
0003C28C <internal_commands.ab3@820> INCLUDE "internal_commands.ab3"
0003C28E <internal_commands.ab3@821> INCLUDE "internal_commands.ab3"
0003C292 <internal_commands.ab3@822> INCLUDE "internal_commands.ab3"
0003C294 <internal_commands.ab3@823> INCLUDE "internal_commands.ab3"
0003C298 <internal_commands.ab3@827> INCLUDE "internal_commands.ab3"
0003C29A <internal_commands.ab3@828> INCLUDE "internal_commands.ab3"
0003C29F <internal_commands.ab3@829> INCLUDE "internal_commands.ab3"
0003C2A0 <internal_commands.ab3@830> INCLUDE "internal_commands.ab3"
0003C2A2 <internal_commands.ab3@833> INCLUDE "internal_commands.ab3"
0003C2A6 <internal_commands.ab3@834> INCLUDE "internal_commands.ab3"
0003C2A8 <internal_commands.ab3@835> INCLUDE "internal_commands.ab3"
0003C2AA <internal_commands.ab3@836> INCLUDE "internal_commands.ab3"
0003C2AE <internal_commands.ab3@837> INCLUDE "internal_commands.ab3"
0003C2B0 <internal_commands.ab3@838> INCLUDE "internal_commands.ab3"
0003C2B4 <internal_commands.ab3@842> INCLUDE "internal_commands.ab3"
0003C2B6 <internal_commands.ab3@843> INCLUDE "internal_commands.ab3"
0003C2BB <internal_commands.ab3@844> INCLUDE "internal_commands.ab3"
0003C2BC <internal_commands.ab3@845> INCLUDE "internal_commands.ab3"
0003C2BE <internal_commands.ab3@848> INCLUDE "internal_commands.ab3"
0003C2C2 <internal_commands.ab3@849> INCLUDE "internal_commands.ab3"
0003C2C4 <internal_commands.ab3@850> INCLUDE "internal_commands.ab3"
0003C2C6 <internal_commands.ab3@851> INCLUDE "internal_commands.ab3"
0003C2CA <internal_commands.ab3@852> INCLUDE "internal_commands.ab3"
0003C2CC <internal_commands.ab3@853> INCLUDE "internal_commands.ab3"
0003C2D0 <internal_commands.ab3@857> INCLUDE "internal_commands.ab3"
0003C2D2 <internal_commands.ab3@858> INCLUDE "internal_commands.ab3"
0003C2D6 <internal_commands.ab3@859> INCLUDE "internal_commands.ab3"
0003C2D7 <internal_commands.ab3@860> INCLUDE "internal_commands.ab3"
0003C2D8 <internal_commands.ab3@861> INCLUDE "internal_commands.ab3"
0003C2DA <internal_commands.ab3@863> INCLUDE "internal_commands.ab3"
0003C2DE <internal_commands.ab3@864> INCLUDE "internal_commands.ab3"
0003C2E0 <internal_commands.ab3@865> INCLUDE "internal_commands.ab3"
0003C2E2 <internal_commands.ab3@866> INCLUDE "internal_commands.ab3"
0003C2E6 <internal_commands.ab3@867> INCLUDE "internal_commands.ab3"
0003C2E8 <internal_commands.ab3@868> INCLUDE "internal_commands.ab3"
0003C2EC <internal_commands.ab3@872> INCLUDE "internal_commands.ab3"
0003C2EE <internal_commands.ab3@873> INCLUDE "internal_commands.ab3"
0003C2F2 <internal_commands.ab3@874> INCLUDE "internal_commands.ab3"
0003C2F3 <internal_commands.ab3@875> INCLUDE "internal_commands.ab3"
0003C2F4 <internal_commands.ab3@876> INCLUDE "internal_commands.ab3"
0003C2F6 <internal_commands.ab3@878> INCLUDE "internal_commands.ab3"
0003C2FA <internal_commands.ab3@879> INCLUDE "internal_commands.ab3"
0003C2FC <internal_commands.ab3@880> INCLUDE "internal_commands.ab3"
0003C2FE <internal_commands.ab3@881> INCLUDE "internal_commands.ab3"
0003C302 <internal_commands.ab3@882> INCLUDE "internal_commands.ab3"
0003C304 <internal_commands.ab3@883> INCLUDE "internal_commands.ab3"
0003C308 <internal_commands.ab3@887> INCLUDE "internal_commands.ab3"
0003C30A <internal_commands.ab3@888> INCLUDE "internal_commands.ab3"
0003C30E <internal_commands.ab3@889> INCLUDE "internal_commands.ab3"
0003C30F <internal_commands.ab3@890> INCLUDE "internal_commands.ab3"
0003C310 <internal_commands.ab3@891> INCLUDE "internal_commands.ab3"
0003C312 <internal_commands.ab3@893> INCLUDE "internal_commands.ab3"
0003C316 <internal_commands.ab3@894> INCLUDE "internal_commands.ab3"
0003C318 <internal_commands.ab3@895> INCLUDE "internal_commands.ab3"
0003C31A <internal_commands.ab3@896> INCLUDE "internal_commands.ab3"
0003C31E <internal_commands.ab3@897> INCLUDE "internal_commands.ab3"
0003C320 <internal_commands.ab3@898> INCLUDE "internal_commands.ab3"
0003C324 <internal_commands.ab3@902> INCLUDE "internal_commands.ab3"
0003C326 <internal_commands.ab3@903> INCLUDE "internal_commands.ab3"
0003C32A <internal_commands.ab3@904> INCLUDE "internal_commands.ab3"
0003C32B <internal_commands.ab3@905> INCLUDE "internal_commands.ab3"
0003C32C <internal_commands.ab3@906> INCLUDE "internal_commands.ab3"
0003C32E <internal_commands.ab3@908> INCLUDE "internal_commands.ab3"
0003C332 <internal_commands.ab3@909> INCLUDE "internal_commands.ab3"
0003C334 <internal_commands.ab3@910> INCLUDE "internal_commands.ab3"
0003C336 <internal_commands.ab3@911> INCLUDE "internal_commands.ab3"
0003C33A <internal_commands.ab3@912> INCLUDE "internal_commands.ab3"
0003C33C <internal_commands.ab3@913> INCLUDE "internal_commands.ab3"
0003C340 <internal_commands.ab3@917> INCLUDE "internal_commands.ab3"
0003C342 <internal_commands.ab3@918> INCLUDE "internal_commands.ab3"
0003C346 <internal_commands.ab3@919> INCLUDE "internal_commands.ab3"
0003C347 <internal_commands.ab3@920> INCLUDE "internal_commands.ab3"
0003C348 <internal_commands.ab3@921> INCLUDE "internal_commands.ab3"
0003C34A <internal_commands.ab3@923> INCLUDE "internal_commands.ab3"
0003C34E <internal_commands.ab3@924> INCLUDE "internal_commands.ab3"
0003C350 <internal_commands.ab3@925> INCLUDE "internal_commands.ab3"
0003C352 <internal_commands.ab3@926> INCLUDE "internal_commands.ab3"
0003C356 <internal_commands.ab3@927> INCLUDE "internal_commands.ab3"
0003C358 <internal_commands.ab3@928> INCLUDE "internal_commands.ab3"
0003C35C <internal_commands.ab3@932> INCLUDE "internal_commands.ab3"
0003C35E <internal_commands.ab3@933> INCLUDE "internal_commands.ab3"
0003C363 <internal_commands.ab3@934> INCLUDE "internal_commands.ab3"
0003C364 <internal_commands.ab3@935> INCLUDE "internal_commands.ab3"
0003C366 <internal_commands.ab3@938> INCLUDE "internal_commands.ab3"
0003C36A <internal_commands.ab3@939> INCLUDE "internal_commands.ab3"
0003C36C <internal_commands.ab3@940> INCLUDE "internal_commands.ab3"
0003C36E <internal_commands.ab3@941> INCLUDE "internal_commands.ab3"
0003C372 <internal_commands.ab3@942> INCLUDE "internal_commands.ab3"
0003C374 <internal_commands.ab3@943> INCLUDE "internal_commands.ab3"
0003C378 <internal_commands.ab3@947> INCLUDE "internal_commands.ab3"
0003C37A <internal_commands.ab3@948> INCLUDE "internal_commands.ab3"
0003C37F <internal_commands.ab3@949> INCLUDE "internal_commands.ab3"
0003C380 <internal_commands.ab3@950> INCLUDE "internal_commands.ab3"
0003C382 <internal_commands.ab3@953> INCLUDE "internal_commands.ab3"
0003C386 <internal_commands.ab3@954> INCLUDE "internal_commands.ab3"
0003C388 <internal_commands.ab3@955> INCLUDE "internal_commands.ab3"
0003C38A <internal_commands.ab3@956> INCLUDE "internal_commands.ab3"
0003C38E <internal_commands.ab3@957> INCLUDE "internal_commands.ab3"
0003C390 <internal_commands.ab3@958> INCLUDE "internal_commands.ab3"
0003C394 <internal_commands.ab3@962> INCLUDE "internal_commands.ab3"
0003C396 <internal_commands.ab3@963> INCLUDE "internal_commands.ab3"
0003C39B <internal_commands.ab3@964> INCLUDE "internal_commands.ab3"
0003C39C <internal_commands.ab3@965> INCLUDE "internal_commands.ab3"
0003C39E <internal_commands.ab3@968> INCLUDE "internal_commands.ab3"
0003C3A2 <internal_commands.ab3@969> INCLUDE "internal_commands.ab3"
0003C3A4 <internal_commands.ab3@970> INCLUDE "internal_commands.ab3"
0003C3A6 <internal_commands.ab3@971> INCLUDE "internal_commands.ab3"
0003C3AA <internal_commands.ab3@972> INCLUDE "internal_commands.ab3"
0003C3AC <internal_commands.ab3@973> INCLUDE "internal_commands.ab3"
0003C3B0 <internal_commands.ab3@977> INCLUDE "internal_commands.ab3"
0003C3B2 <internal_commands.ab3@978> INCLUDE "internal_commands.ab3"
0003C3B7 <internal_commands.ab3@979> INCLUDE "internal_commands.ab3"
0003C3B8 <internal_commands.ab3@980> INCLUDE "internal_commands.ab3"
0003C3BA <internal_commands.ab3@983> INCLUDE "internal_commands.ab3"
0003C3BE <internal_commands.ab3@984> INCLUDE "internal_commands.ab3"
0003C3C0 <internal_commands.ab3@985> INCLUDE "internal_commands.ab3"
0003C3C2 <internal_commands.ab3@986> INCLUDE "internal_commands.ab3"
0003C3C6 <internal_commands.ab3@987> INCLUDE "internal_commands.ab3"
0003C3C8 <internal_commands.ab3@988> INCLUDE "internal_commands.ab3"
0003C3CC <internal_commands.ab3@992> INCLUDE "internal_commands.ab3"
0003C3CE <internal_commands.ab3@993> INCLUDE "internal_commands.ab3"
0003C3D3 <internal_commands.ab3@994> INCLUDE "internal_commands.ab3"
0003C3D4 <internal_commands.ab3@995> INCLUDE "internal_commands.ab3"
0003C3D6 <internal_commands.ab3@998> INCLUDE "internal_commands.ab3"
0003C3DA <internal_commands.ab3@999> INCLUDE "internal_commands.ab3"
0003C3DC <internal_commands.ab3@1000> INCLUDE "internal_commands.ab3"
0003C3DE <internal_commands.ab3@1001> INCLUDE "internal_commands.ab3"
0003C3E2 <internal_commands.ab3@1002> INCLUDE "internal_commands.ab3"
0003C3E4 <internal_commands.ab3@1003> INCLUDE "internal_commands.ab3"
0003C3E8 <internal_commands.ab3@1007> INCLUDE "internal_commands.ab3"
0003C3EA <internal_commands.ab3@1008> INCLUDE "internal_commands.ab3"
0003C3EF <internal_commands.ab3@1009> INCLUDE "internal_commands.ab3"
0003C3F0 <internal_commands.ab3@1010> INCLUDE "internal_commands.ab3"
0003C3F2 <internal_commands.ab3@1013> INCLUDE "internal_commands.ab3"
0003C3F6 <internal_commands.ab3@1014> INCLUDE "internal_commands.ab3"
0003C3F8 <internal_commands.ab3@1015> INCLUDE "internal_commands.ab3"
0003C3FA <internal_commands.ab3@1016> INCLUDE "internal_commands.ab3"
0003C3FE <internal_commands.ab3@1017> INCLUDE "internal_commands.ab3"
0003C400 <internal_commands.ab3@1018> INCLUDE "internal_commands.ab3"
0003C404 <internal_commands.ab3@1022> INCLUDE "internal_commands.ab3"
0003C406 <internal_commands.ab3@1023> INCLUDE "internal_commands.ab3"
0003C40B <internal_commands.ab3@1024> INCLUDE "internal_commands.ab3"
0003C40C <internal_commands.ab3@1025> INCLUDE "internal_commands.ab3"
0003C40E <internal_commands.ab3@1028> INCLUDE "internal_commands.ab3"
0003C412 <internal_commands.ab3@1029> INCLUDE "internal_commands.ab3"
0003C414 <internal_commands.ab3@1030> INCLUDE "internal_commands.ab3"
0003C416 <internal_commands.ab3@1031> INCLUDE "internal_commands.ab3"
0003C41A <internal_commands.ab3@1032> INCLUDE "internal_commands.ab3"
0003C41C <internal_commands.ab3@1033> INCLUDE "internal_commands.ab3"
0003C420 <internal_commands.ab3@1037> INCLUDE "internal_commands.ab3"
0003C422 <internal_commands.ab3@1038> INCLUDE "internal_commands.ab3"
0003C427 <internal_commands.ab3@1039> INCLUDE "internal_commands.ab3"
0003C428 <internal_commands.ab3@1040> INCLUDE "internal_commands.ab3"
0003C42A <internal_commands.ab3@1043> INCLUDE "internal_commands.ab3"
0003C42E <internal_commands.ab3@1044> INCLUDE "internal_commands.ab3"
0003C430 <internal_commands.ab3@1045> INCLUDE "internal_commands.ab3"
0003C432 <internal_commands.ab3@1046> INCLUDE "internal_commands.ab3"
0003C436 <internal_commands.ab3@1047> INCLUDE "internal_commands.ab3"
0003C438 <internal_commands.ab3@1048> INCLUDE "internal_commands.ab3"
0003C43C <internal_commands.ab3@1052> INCLUDE "internal_commands.ab3"
0003C43E <internal_commands.ab3@1053> INCLUDE "internal_commands.ab3"
0003C443 <internal_commands.ab3@1054> INCLUDE "internal_commands.ab3"
0003C444 <internal_commands.ab3@1055> INCLUDE "internal_commands.ab3"
0003C446 <internal_commands.ab3@1058> INCLUDE "internal_commands.ab3"
0003C44A <internal_commands.ab3@1059> INCLUDE "internal_commands.ab3"
0003C44C <internal_commands.ab3@1060> INCLUDE "internal_commands.ab3"
0003C44E <internal_commands.ab3@1061> INCLUDE "internal_commands.ab3"
0003C452 <internal_commands.ab3@1062> INCLUDE "internal_commands.ab3"
0003C454 <internal_commands.ab3@1063> INCLUDE "internal_commands.ab3"
0003C458 <internal_commands.ab3@1067> INCLUDE "internal_commands.ab3"
0003C45A <internal_commands.ab3@1068> INCLUDE "internal_commands.ab3"
0003C45F <internal_commands.ab3@1069> INCLUDE "internal_commands.ab3"
0003C460 <internal_commands.ab3@1070> INCLUDE "internal_commands.ab3"
0003C462 <internal_commands.ab3@1073> INCLUDE "internal_commands.ab3"
0003C466 <internal_commands.ab3@1074> INCLUDE "internal_commands.ab3"
0003C468 <internal_commands.ab3@1075> INCLUDE "internal_commands.ab3"
0003C46A <internal_commands.ab3@1076> INCLUDE "internal_commands.ab3"
0003C46E <internal_commands.ab3@1077> INCLUDE "internal_commands.ab3"
0003C470 <internal_commands.ab3@1078> INCLUDE "internal_commands.ab3"
0003C474 <internal_commands.ab3@1082> INCLUDE "internal_commands.ab3"
0003C476 <internal_commands.ab3@1083> INCLUDE "internal_commands.ab3"
0003C47B <internal_commands.ab3@1084> INCLUDE "internal_commands.ab3"
0003C47C <internal_commands.ab3@1085> INCLUDE "internal_commands.ab3"
0003C47E <internal_commands.ab3@1088> INCLUDE "internal_commands.ab3"
0003C482 <internal_commands.ab3@1089> INCLUDE "internal_commands.ab3"
0003C484 <internal_commands.ab3@1090> INCLUDE "internal_commands.ab3"
0003C486 <internal_commands.ab3@1091> INCLUDE "internal_commands.ab3"
0003C48A <internal_commands.ab3@1092> INCLUDE "internal_commands.ab3"
0003C48C <internal_commands.ab3@1093> INCLUDE "internal_commands.ab3"
0003C490 <internal_commands.ab3@1097> INCLUDE "internal_commands.ab3"
0003C492 <internal_commands.ab3@1098> INCLUDE "internal_commands.ab3"
0003C497 <internal_commands.ab3@1099> INCLUDE "internal_commands.ab3"
0003C498 <internal_commands.ab3@1100> INCLUDE "internal_commands.ab3"
0003C49A <internal_commands.ab3@1103> INCLUDE "internal_commands.ab3"
0003C49E <internal_commands.ab3@1104> INCLUDE "internal_commands.ab3"
0003C4A0 <internal_commands.ab3@1105> INCLUDE "internal_commands.ab3"
0003C4A2 <internal_commands.ab3@1106> INCLUDE "internal_commands.ab3"
0003C4A6 <internal_commands.ab3@1107> INCLUDE "internal_commands.ab3"
0003C4A8 <internal_commands.ab3@1108> INCLUDE "internal_commands.ab3"
0003C4AC <internal_commands.ab3@1112> INCLUDE "internal_commands.ab3"
0003C4AE <internal_commands.ab3@1113> INCLUDE "internal_commands.ab3"
0003C4B3 <internal_commands.ab3@1114> INCLUDE "internal_commands.ab3"
0003C4B4 <internal_commands.ab3@1115> INCLUDE "internal_commands.ab3"
0003C4B6 <internal_commands.ab3@1118> INCLUDE "internal_commands.ab3"
0003C4BA <internal_commands.ab3@1119> INCLUDE "internal_commands.ab3"
0003C4BC <internal_commands.ab3@1120> INCLUDE "internal_commands.ab3"
0003C4BE <internal_commands.ab3@1121> INCLUDE "internal_commands.ab3"
0003C4C2 <internal_commands.ab3@1122> INCLUDE "internal_commands.ab3"
0003C4C4 <internal_commands.ab3@1123> INCLUDE "internal_commands.ab3"
0003C4C8 <internal_commands.ab3@1127> INCLUDE "internal_commands.ab3"
0003C4CA <internal_commands.ab3@1128> INCLUDE "internal_commands.ab3"
0003C4CF <internal_commands.ab3@1129> INCLUDE "internal_commands.ab3"
0003C4D0 <internal_commands.ab3@1130> INCLUDE "internal_commands.ab3"
0003C4D2 <internal_commands.ab3@1133> INCLUDE "internal_commands.ab3"
0003C4D6 <internal_commands.ab3@1134> INCLUDE "internal_commands.ab3"
0003C4D8 <internal_commands.ab3@1135> INCLUDE "internal_commands.ab3"
0003C4DA <internal_commands.ab3@1136> INCLUDE "internal_commands.ab3"
0003C4DE <internal_commands.ab3@1137> INCLUDE "internal_commands.ab3"
0003C4E0 <internal_commands.ab3@1138> INCLUDE "internal_commands.ab3"
0003C4E4 <internal_commands.ab3@1142> INCLUDE "internal_commands.ab3"
0003C4E6 <internal_commands.ab3@1143> INCLUDE "internal_commands.ab3"
0003C4EB <internal_commands.ab3@1144> INCLUDE "internal_commands.ab3"
0003C4EC <internal_commands.ab3@1145> INCLUDE "internal_commands.ab3"
0003C4EE <internal_commands.ab3@1148> INCLUDE "internal_commands.ab3"
0003C4F2 <internal_commands.ab3@1149> INCLUDE "internal_commands.ab3"
0003C4F4 <internal_commands.ab3@1150> INCLUDE "internal_commands.ab3"
0003C4F6 <internal_commands.ab3@1151> INCLUDE "internal_commands.ab3"
0003C4FA <internal_commands.ab3@1152> INCLUDE "internal_commands.ab3"
0003C4FC <internal_commands.ab3@1153> INCLUDE "internal_commands.ab3"
0003C500 <internal_commands.ab3@1157> INCLUDE "internal_commands.ab3"
0003C502 <internal_commands.ab3@1158> INCLUDE "internal_commands.ab3"
0003C507 <internal_commands.ab3@1159> INCLUDE "internal_commands.ab3"
0003C508 <internal_commands.ab3@1160> INCLUDE "internal_commands.ab3"
0003C50A <internal_commands.ab3@1163> INCLUDE "internal_commands.ab3"
0003C50E <internal_commands.ab3@1164> INCLUDE "internal_commands.ab3"
0003C510 <internal_commands.ab3@1165> INCLUDE "internal_commands.ab3"
0003C512 <internal_commands.ab3@1166> INCLUDE "internal_commands.ab3"
0003C516 <internal_commands.ab3@1167> INCLUDE "internal_commands.ab3"
0003C518 <internal_commands.ab3@1168> INCLUDE "internal_commands.ab3"
0003C51C <internal_commands.ab3@1172> INCLUDE "internal_commands.ab3"
0003C51E <internal_commands.ab3@1173> INCLUDE "internal_commands.ab3"
0003C523 <internal_commands.ab3@1174> INCLUDE "internal_commands.ab3"
0003C524 <internal_commands.ab3@1175> INCLUDE "internal_commands.ab3"
0003C526 <internal_commands.ab3@1178> INCLUDE "internal_commands.ab3"
0003C52A <internal_commands.ab3@1179> INCLUDE "internal_commands.ab3"
0003C52C <internal_commands.ab3@1180> INCLUDE "internal_commands.ab3"
0003C52E <internal_commands.ab3@1181> INCLUDE "internal_commands.ab3"
0003C532 <internal_commands.ab3@1182> INCLUDE "internal_commands.ab3"
0003C534 <internal_commands.ab3@1183> INCLUDE "internal_commands.ab3"
0003C538 <internal_commands.ab3@1186> INCLUDE "internal_commands.ab3"
0003C53A <internal_commands.ab3@1187> INCLUDE "internal_commands.ab3"
0003C53E <internal_commands.ab3@1188> INCLUDE "internal_commands.ab3"
0003C53F <internal_commands.ab3@1189> INCLUDE "internal_commands.ab3"
0003C540 <internal_commands.ab3@1190> INCLUDE "internal_commands.ab3"
0003C542 <internal_commands.ab3@1192> INCLUDE "internal_commands.ab3"
0003C546 <internal_commands.ab3@1193> INCLUDE "internal_commands.ab3"
0003C548 <internal_commands.ab3@1194> INCLUDE "internal_commands.ab3"
0003C54A <internal_commands.ab3@1195> INCLUDE "internal_commands.ab3"
0003C54E <internal_commands.ab3@1196> INCLUDE "internal_commands.ab3"
0003C550 <internal_commands.ab3@1197> INCLUDE "internal_commands.ab3"
0003C554 <internal_commands.ab3@1201> INCLUDE "internal_commands.ab3"
0003C556 <internal_commands.ab3@1202> INCLUDE "internal_commands.ab3"
0003C55B <internal_commands.ab3@1203> INCLUDE "internal_commands.ab3"
0003C55C <internal_commands.ab3@1204> INCLUDE "internal_commands.ab3"
0003C55E <internal_commands.ab3@1207> INCLUDE "internal_commands.ab3"
0003C562 <internal_commands.ab3@1208> INCLUDE "internal_commands.ab3"
0003C564 <internal_commands.ab3@1209> INCLUDE "internal_commands.ab3"
0003C566 <internal_commands.ab3@1210> INCLUDE "internal_commands.ab3"
0003C56A <internal_commands.ab3@1211> INCLUDE "internal_commands.ab3"
0003C56C <internal_commands.ab3@1212> INCLUDE "internal_commands.ab3"
0003C570 <internal_commands.ab3@1216> INCLUDE "internal_commands.ab3"
0003C572 <internal_commands.ab3@1217> INCLUDE "internal_commands.ab3"
0003C576 <internal_commands.ab3@1218> INCLUDE "internal_commands.ab3"
0003C577 <internal_commands.ab3@1219> INCLUDE "internal_commands.ab3"
0003C578 <internal_commands.ab3@1220> INCLUDE "internal_commands.ab3"
0003C57A <internal_commands.ab3@1222> INCLUDE "internal_commands.ab3"
0003C57E <internal_commands.ab3@1223> INCLUDE "internal_commands.ab3"
0003C580 <internal_commands.ab3@1224> INCLUDE "internal_commands.ab3"
0003C582 <internal_commands.ab3@1225> INCLUDE "internal_commands.ab3"
0003C586 <internal_commands.ab3@1226> INCLUDE "internal_commands.ab3"
0003C588 <internal_commands.ab3@1227> INCLUDE "internal_commands.ab3"
0003C58C <internal_commands.ab3@1231> INCLUDE "internal_commands.ab3"
0003C58E <internal_commands.ab3@1232> INCLUDE "internal_commands.ab3"
0003C593 <internal_commands.ab3@1233> INCLUDE "internal_commands.ab3"
0003C594 <internal_commands.ab3@1234> INCLUDE "internal_commands.ab3"
0003C596 <internal_commands.ab3@1237> INCLUDE "internal_commands.ab3"
0003C59A <internal_commands.ab3@1238> INCLUDE "internal_commands.ab3"
0003C59C <internal_commands.ab3@1239> INCLUDE "internal_commands.ab3"
0003C59E <internal_commands.ab3@1240> INCLUDE "internal_commands.ab3"
0003C5A2 <internal_commands.ab3@1241> INCLUDE "internal_commands.ab3"
0003C5A4 <internal_commands.ab3@1242> INCLUDE "internal_commands.ab3"
0003C5A8 <internal_commands.ab3@1246> INCLUDE "internal_commands.ab3"
0003C5AA <internal_commands.ab3@1247> INCLUDE "internal_commands.ab3"
0003C5AF <internal_commands.ab3@1248> INCLUDE "internal_commands.ab3"
0003C5B0 <internal_commands.ab3@1249> INCLUDE "internal_commands.ab3"
0003C5B2 <internal_commands.ab3@1252> INCLUDE "internal_commands.ab3"
0003C5B6 <internal_commands.ab3@1253> INCLUDE "internal_commands.ab3"
0003C5B8 <internal_commands.ab3@1254> INCLUDE "internal_commands.ab3"
0003C5BA <internal_commands.ab3@1255> INCLUDE "internal_commands.ab3"
0003C5BE <internal_commands.ab3@1256> INCLUDE "internal_commands.ab3"
0003C5C0 <internal_commands.ab3@1257> INCLUDE "internal_commands.ab3"
0003C5C4 <internal_commands.ab3@1261> INCLUDE "internal_commands.ab3"
0003C5C6 <internal_commands.ab3@1262> INCLUDE "internal_commands.ab3"
0003C5CA <internal_commands.ab3@1263> INCLUDE "internal_commands.ab3"
0003C5CB <internal_commands.ab3@1264> INCLUDE "internal_commands.ab3"
0003C5CC <internal_commands.ab3@1265> INCLUDE "internal_commands.ab3"
0003C5CE <internal_commands.ab3@1267> INCLUDE "internal_commands.ab3"
0003C5D2 <internal_commands.ab3@1268> INCLUDE "internal_commands.ab3"
0003C5D4 <internal_commands.ab3@1269> INCLUDE "internal_commands.ab3"
0003C5D6 <internal_commands.ab3@1270> INCLUDE "internal_commands.ab3"
0003C5DA <internal_commands.ab3@1271> INCLUDE "internal_commands.ab3"
0003C5DC <internal_commands.ab3@1272> INCLUDE "internal_commands.ab3"
0003C5E0 <internal_commands.ab3@1276> INCLUDE "internal_commands.ab3"
0003C5E2 <internal_commands.ab3@1277> INCLUDE "internal_commands.ab3"
0003C5E7 <internal_commands.ab3@1278> INCLUDE "internal_commands.ab3"
0003C5E8 <internal_commands.ab3@1279> INCLUDE "internal_commands.ab3"
0003C5EA <internal_commands.ab3@1282> INCLUDE "internal_commands.ab3"
0003C5EE <internal_commands.ab3@1283> INCLUDE "internal_commands.ab3"
0003C5F0 <internal_commands.ab3@1284> INCLUDE "internal_commands.ab3"
0003C5F2 <internal_commands.ab3@1285> INCLUDE "internal_commands.ab3"
0003C5F6 <internal_commands.ab3@1286> INCLUDE "internal_commands.ab3"
0003C5F8 <internal_commands.ab3@1287> INCLUDE "internal_commands.ab3"
0003C5FC <internal_commands.ab3@1291> INCLUDE "internal_commands.ab3"
0003C5FE <internal_commands.ab3@1292> INCLUDE "internal_commands.ab3"
0003C602 <internal_commands.ab3@1293> INCLUDE "internal_commands.ab3"
0003C603 <internal_commands.ab3@1294> INCLUDE "internal_commands.ab3"
0003C604 <internal_commands.ab3@1295> INCLUDE "internal_commands.ab3"
0003C606 <internal_commands.ab3@1297> INCLUDE "internal_commands.ab3"
0003C60A <internal_commands.ab3@1298> INCLUDE "internal_commands.ab3"
0003C60C <internal_commands.ab3@1299> INCLUDE "internal_commands.ab3"
0003C60E <internal_commands.ab3@1300> INCLUDE "internal_commands.ab3"
0003C612 <internal_commands.ab3@1301> INCLUDE "internal_commands.ab3"
0003C614 <internal_commands.ab3@1302> INCLUDE "internal_commands.ab3"
0003C618 <internal_commands.ab3@1306> INCLUDE "internal_commands.ab3"
0003C61A <internal_commands.ab3@1307> INCLUDE "internal_commands.ab3"
0003C61E <internal_commands.ab3@1308> INCLUDE "internal_commands.ab3"
0003C61F <internal_commands.ab3@1309> INCLUDE "internal_commands.ab3"
0003C620 <internal_commands.ab3@1310> INCLUDE "internal_commands.ab3"
0003C622 <internal_commands.ab3@1312> INCLUDE "internal_commands.ab3"
0003C626 <internal_commands.ab3@1313> INCLUDE "internal_commands.ab3"
0003C628 <internal_commands.ab3@1314> INCLUDE "internal_commands.ab3"
0003C62A <internal_commands.ab3@1315> INCLUDE "internal_commands.ab3"
0003C62E <internal_commands.ab3@1316> INCLUDE "internal_commands.ab3"
0003C630 <internal_commands.ab3@1317> INCLUDE "internal_commands.ab3"
0003C634 <internal_commands.ab3@1321> INCLUDE "internal_commands.ab3"
0003C636 <internal_commands.ab3@1322> INCLUDE "internal_commands.ab3"
0003C63E <internal_commands.ab3@1323> INCLUDE "internal_commands.ab3"
0003C63F <internal_commands.ab3@1324> INCLUDE "internal_commands.ab3"
0003C640 <internal_commands.ab3@1325> INCLUDE "internal_commands.ab3"
0003C642 <internal_commands.ab3@1327> INCLUDE "internal_commands.ab3"
0003C646 <internal_commands.ab3@1328> INCLUDE "internal_commands.ab3"
0003C648 <internal_commands.ab3@1329> INCLUDE "internal_commands.ab3"
0003C64A <internal_commands.ab3@1330> INCLUDE "internal_commands.ab3"
0003C64E <internal_commands.ab3@1331> INCLUDE "internal_commands.ab3"
0003C650 <internal_commands.ab3@1332> INCLUDE "internal_commands.ab3"
0003C654 <internal_commands.ab3@1336> INCLUDE "internal_commands.ab3"
0003C656 <internal_commands.ab3@1337> INCLUDE "internal_commands.ab3"
0003C65A <internal_commands.ab3@1338> INCLUDE "internal_commands.ab3"
0003C65B <internal_commands.ab3@1339> INCLUDE "internal_commands.ab3"
0003C65C <internal_commands.ab3@1340> INCLUDE "internal_commands.ab3"
0003C65E <internal_commands.ab3@1342> INCLUDE "internal_commands.ab3"
0003C662 <internal_commands.ab3@1343> INCLUDE "internal_commands.ab3"
0003C664 <internal_commands.ab3@1344> INCLUDE "internal_commands.ab3"
0003C666 <internal_commands.ab3@1345> INCLUDE "internal_commands.ab3"
0003C66A <internal_commands.ab3@1346> INCLUDE "internal_commands.ab3"
0003C66C <internal_commands.ab3@1347> INCLUDE "internal_commands.ab3"
0003C670 <internal_commands.ab3@1351> INCLUDE "internal_commands.ab3"
0003C672 <internal_commands.ab3@1352> INCLUDE "internal_commands.ab3"
0003C676 <internal_commands.ab3@1353> INCLUDE "internal_commands.ab3"
0003C677 <internal_commands.ab3@1354> INCLUDE "internal_commands.ab3"
0003C678 <internal_commands.ab3@1355> INCLUDE "internal_commands.ab3"
0003C67A <internal_commands.ab3@1357> INCLUDE "internal_commands.ab3"
0003C67E <internal_commands.ab3@1358> INCLUDE "internal_commands.ab3"
0003C680 <internal_commands.ab3@1359> INCLUDE "internal_commands.ab3"
0003C682 <internal_commands.ab3@1360> INCLUDE "internal_commands.ab3"
0003C686 <internal_commands.ab3@1361> INCLUDE "internal_commands.ab3"
0003C688 <internal_commands.ab3@1362> INCLUDE "internal_commands.ab3"
0003C68C <internal_commands.ab3@1366> INCLUDE "internal_commands.ab3"
0003C68E <internal_commands.ab3@1367> INCLUDE "internal_commands.ab3"
0003C692 <internal_commands.ab3@1368> INCLUDE "internal_commands.ab3"
0003C693 <internal_commands.ab3@1369> INCLUDE "internal_commands.ab3"
0003C694 <internal_commands.ab3@1370> INCLUDE "internal_commands.ab3"
0003C696 <internal_commands.ab3@1372> INCLUDE "internal_commands.ab3"
0003C69A <internal_commands.ab3@1373> INCLUDE "internal_commands.ab3"
0003C69C <internal_commands.ab3@1374> INCLUDE "internal_commands.ab3"
0003C69E <internal_commands.ab3@1375> INCLUDE "internal_commands.ab3"
0003C6A2 <internal_commands.ab3@1376> INCLUDE "internal_commands.ab3"
0003C6A4 <internal_commands.ab3@1377> INCLUDE "internal_commands.ab3"
0003C6A8 <internal_commands.ab3@1381> INCLUDE "internal_commands.ab3"
0003C6AA <internal_commands.ab3@1382> INCLUDE "internal_commands.ab3"
0003C6AF <internal_commands.ab3@1383> INCLUDE "internal_commands.ab3"
0003C6B0 <internal_commands.ab3@1384> INCLUDE "internal_commands.ab3"
0003C6B2 <internal_commands.ab3@1387> INCLUDE "internal_commands.ab3"
0003C6B6 <internal_commands.ab3@1388> INCLUDE "internal_commands.ab3"
0003C6B8 <internal_commands.ab3@1389> INCLUDE "internal_commands.ab3"
0003C6BA <internal_commands.ab3@1390> INCLUDE "internal_commands.ab3"
0003C6BE <internal_commands.ab3@1391> INCLUDE "internal_commands.ab3"
0003C6C0 <internal_commands.ab3@1392> INCLUDE "internal_commands.ab3"
0003C6C4 <internal_commands.ab3@1396> INCLUDE "internal_commands.ab3"
0003C6C6 <internal_commands.ab3@1397> INCLUDE "internal_commands.ab3"
0003C6CA <internal_commands.ab3@1398> INCLUDE "internal_commands.ab3"
0003C6CB <internal_commands.ab3@1399> INCLUDE "internal_commands.ab3"
0003C6CC <internal_commands.ab3@1400> INCLUDE "internal_commands.ab3"
0003C6CE <internal_commands.ab3@1402> INCLUDE "internal_commands.ab3"
0003C6D2 <internal_commands.ab3@1403> INCLUDE "internal_commands.ab3"
0003C6D4 <internal_commands.ab3@1404> INCLUDE "internal_commands.ab3"
0003C6D6 <internal_commands.ab3@1405> INCLUDE "internal_commands.ab3"
0003C6DA <internal_commands.ab3@1406> INCLUDE "internal_commands.ab3"
0003C6DC <internal_commands.ab3@1407> INCLUDE "internal_commands.ab3"
0003C6E0 <internal_commands.ab3@1411> INCLUDE "internal_commands.ab3"
0003C6E2 <internal_commands.ab3@1412> INCLUDE "internal_commands.ab3"
0003C6E6 <internal_commands.ab3@1413> INCLUDE "internal_commands.ab3"
0003C6E7 <internal_commands.ab3@1414> INCLUDE "internal_commands.ab3"
0003C6E8 <internal_commands.ab3@1415> INCLUDE "internal_commands.ab3"
0003C6EA <internal_commands.ab3@1417> INCLUDE "internal_commands.ab3"
0003C6EE <internal_commands.ab3@1418> INCLUDE "internal_commands.ab3"
0003C6F0 <internal_commands.ab3@1419> INCLUDE "internal_commands.ab3"
0003C6F2 <internal_commands.ab3@1420> INCLUDE "internal_commands.ab3"
0003C6F6 <internal_commands.ab3@1421> INCLUDE "internal_commands.ab3"
0003C6F8 <internal_commands.ab3@1422> INCLUDE "internal_commands.ab3"
0003C6FC <internal_commands.ab3@1426> INCLUDE "internal_commands.ab3"
0003C6FE <internal_commands.ab3@1427> INCLUDE "internal_commands.ab3"
0003C703 <internal_commands.ab3@1428> INCLUDE "internal_commands.ab3"
0003C704 <internal_commands.ab3@1429> INCLUDE "internal_commands.ab3"
0003C706 <internal_commands.ab3@1432> INCLUDE "internal_commands.ab3"
0003C70A <internal_commands.ab3@1433> INCLUDE "internal_commands.ab3"
0003C70C <internal_commands.ab3@1434> INCLUDE "internal_commands.ab3"
0003C70E <internal_commands.ab3@1435> INCLUDE "internal_commands.ab3"
0003C712 <internal_commands.ab3@1436> INCLUDE "internal_commands.ab3"
0003C714 <internal_commands.ab3@1437> INCLUDE "internal_commands.ab3"
0003C718 <internal_commands.ab3@1441> INCLUDE "internal_commands.ab3"
0003C71A <internal_commands.ab3@1442> INCLUDE "internal_commands.ab3"
0003C71F <internal_commands.ab3@1443> INCLUDE "internal_commands.ab3"
0003C720 <internal_commands.ab3@1444> INCLUDE "internal_commands.ab3"
0003C722 <internal_commands.ab3@1447> INCLUDE "internal_commands.ab3"
0003C726 <internal_commands.ab3@1448> INCLUDE "internal_commands.ab3"
0003C728 <internal_commands.ab3@1449> INCLUDE "internal_commands.ab3"
0003C72A <internal_commands.ab3@1450> INCLUDE "internal_commands.ab3"
0003C72E <internal_commands.ab3@1451> INCLUDE "internal_commands.ab3"
0003C730 <internal_commands.ab3@1452> INCLUDE "internal_commands.ab3"
0003C734 <internal_commands.ab3@1457> INCLUDE "internal_commands.ab3"
0003C736 <internal_commands.ab3@1458> INCLUDE "internal_commands.ab3"
0003C73C <internal_commands.ab3@1459> INCLUDE "internal_commands.ab3"
0003C73D <internal_commands.ab3@1460> INCLUDE "internal_commands.ab3"
0003C73E <internal_commands.ab3@1461> INCLUDE "internal_commands.ab3"
0003C740 <internal_commands.ab3@1463> INCLUDE "internal_commands.ab3"
0003C744 <internal_commands.ab3@1464> INCLUDE "internal_commands.ab3"
0003C746 <internal_commands.ab3@1465> INCLUDE "internal_commands.ab3"
0003C748 <internal_commands.ab3@1466> INCLUDE "internal_commands.ab3"
0003C74C <internal_commands.ab3@1467> INCLUDE "internal_commands.ab3"
0003C74E <internal_commands.ab3@1468> INCLUDE "internal_commands.ab3"
0003C752 <internal_commands.ab3@1472> INCLUDE "internal_commands.ab3"
0003C754 <internal_commands.ab3@1473> INCLUDE "internal_commands.ab3"
0003C75A <internal_commands.ab3@1474> INCLUDE "internal_commands.ab3"
0003C75B <internal_commands.ab3@1475> INCLUDE "internal_commands.ab3"
0003C75C <internal_commands.ab3@1476> INCLUDE "internal_commands.ab3"
0003C75E <internal_commands.ab3@1478> INCLUDE "internal_commands.ab3"
0003C762 <internal_commands.ab3@1479> INCLUDE "internal_commands.ab3"
0003C764 <internal_commands.ab3@1480> INCLUDE "internal_commands.ab3"
0003C766 <internal_commands.ab3@1481> INCLUDE "internal_commands.ab3"
0003C76A <internal_commands.ab3@1482> INCLUDE "internal_commands.ab3"
0003C76C <internal_commands.ab3@1483> INCLUDE "internal_commands.ab3"
0003C770 <internal_commands.ab3@1487> INCLUDE "internal_commands.ab3"
0003C772 <internal_commands.ab3@1488> INCLUDE "internal_commands.ab3"
0003C778 <internal_commands.ab3@1489> INCLUDE "internal_commands.ab3"
0003C779 <internal_commands.ab3@1490> INCLUDE "internal_commands.ab3"
0003C77A <internal_commands.ab3@1491> INCLUDE "internal_commands.ab3"
0003C77C <internal_commands.ab3@1493> INCLUDE "internal_commands.ab3"
0003C780 <internal_commands.ab3@1494> INCLUDE "internal_commands.ab3"
0003C782 <internal_commands.ab3@1495> INCLUDE "internal_commands.ab3"
0003C784 <internal_commands.ab3@1496> INCLUDE "internal_commands.ab3"
0003C788 <internal_commands.ab3@1497> INCLUDE "internal_commands.ab3"
0003C78A <internal_commands.ab3@1498> INCLUDE "internal_commands.ab3"
0003C78E <internal_commands.ab3@1502> INCLUDE "internal_commands.ab3"
0003C790 <internal_commands.ab3@1503> INCLUDE "internal_commands.ab3"
0003C795 <internal_commands.ab3@1504> INCLUDE "internal_commands.ab3"
0003C796 <internal_commands.ab3@1505> INCLUDE "internal_commands.ab3"
0003C798 <internal_commands.ab3@1508> INCLUDE "internal_commands.ab3"
0003C79C <internal_commands.ab3@1509> INCLUDE "internal_commands.ab3"
0003C79E <internal_commands.ab3@1510> INCLUDE "internal_commands.ab3"
0003C7A0 <internal_commands.ab3@1511> INCLUDE "internal_commands.ab3"
0003C7A4 <internal_commands.ab3@1512> INCLUDE "internal_commands.ab3"
0003C7A6 <internal_commands.ab3@1513> INCLUDE "internal_commands.ab3"
0003C7AA <internal_commands.ab3@1517> INCLUDE "internal_commands.ab3"
0003C7AC <internal_commands.ab3@1518> INCLUDE "internal_commands.ab3"
0003C7B1 <internal_commands.ab3@1519> INCLUDE "internal_commands.ab3"
0003C7B2 <internal_commands.ab3@1520> INCLUDE "internal_commands.ab3"
0003C7B4 <internal_commands.ab3@1523> INCLUDE "internal_commands.ab3"
0003C7B8 <internal_commands.ab3@1524> INCLUDE "internal_commands.ab3"
0003C7BA <internal_commands.ab3@1525> INCLUDE "internal_commands.ab3"
0003C7BC <internal_commands.ab3@1526> INCLUDE "internal_commands.ab3"
0003C7C0 <internal_commands.ab3@1527> INCLUDE "internal_commands.ab3"
0003C7C2 <internal_commands.ab3@1528> INCLUDE "internal_commands.ab3"
0003C7C6 <internal_commands.ab3@1532> INCLUDE "internal_commands.ab3"
0003C7C8 <internal_commands.ab3@1533> INCLUDE "internal_commands.ab3"
0003C7CD <internal_commands.ab3@1534> INCLUDE "internal_commands.ab3"
0003C7CE <internal_commands.ab3@1535> INCLUDE "internal_commands.ab3"
0003C7D0 <internal_commands.ab3@1538> INCLUDE "internal_commands.ab3"
0003C7D4 <internal_commands.ab3@1539> INCLUDE "internal_commands.ab3"
0003C7D6 <internal_commands.ab3@1540> INCLUDE "internal_commands.ab3"
0003C7D8 <internal_commands.ab3@1541> INCLUDE "internal_commands.ab3"
0003C7DC <internal_commands.ab3@1542> INCLUDE "internal_commands.ab3"
0003C7DE <internal_commands.ab3@1543> INCLUDE "internal_commands.ab3"
0003C7E2 <internal_commands.ab3@1547> INCLUDE "internal_commands.ab3"
0003C7E4 <internal_commands.ab3@1548> INCLUDE "internal_commands.ab3"
0003C7E8 <internal_commands.ab3@1549> INCLUDE "internal_commands.ab3"
0003C7E9 <internal_commands.ab3@1550> INCLUDE "internal_commands.ab3"
0003C7EA <internal_commands.ab3@1551> INCLUDE "internal_commands.ab3"
0003C7EC <internal_commands.ab3@1553> INCLUDE "internal_commands.ab3"
0003C7F0 <internal_commands.ab3@1554> INCLUDE "internal_commands.ab3"
0003C7F2 <internal_commands.ab3@1555> INCLUDE "internal_commands.ab3"
0003C7F4 <internal_commands.ab3@1556> INCLUDE "internal_commands.ab3"
0003C7F8 <internal_commands.ab3@1557> INCLUDE "internal_commands.ab3"
0003C7FA <internal_commands.ab3@1558> INCLUDE "internal_commands.ab3"
0003C7FE <internal_commands.ab3@1562> INCLUDE "internal_commands.ab3"
0003C800 <internal_commands.ab3@1563> INCLUDE "internal_commands.ab3"
0003C805 <internal_commands.ab3@1564> INCLUDE "internal_commands.ab3"
0003C806 <internal_commands.ab3@1565> INCLUDE "internal_commands.ab3"
0003C808 <internal_commands.ab3@1568> INCLUDE "internal_commands.ab3"
0003C80C <internal_commands.ab3@1569> INCLUDE "internal_commands.ab3"
0003C80E <internal_commands.ab3@1570> INCLUDE "internal_commands.ab3"
0003C810 <internal_commands.ab3@1571> INCLUDE "internal_commands.ab3"
0003C814 <internal_commands.ab3@1572> INCLUDE "internal_commands.ab3"
0003C816 <internal_commands.ab3@1573> INCLUDE "internal_commands.ab3"
0003C81A <internal_commands.ab3@1577> INCLUDE "internal_commands.ab3"
0003C81C <internal_commands.ab3@1578> INCLUDE "internal_commands.ab3"
0003C820 <internal_commands.ab3@1579> INCLUDE "internal_commands.ab3"
0003C821 <internal_commands.ab3@1580> INCLUDE "internal_commands.ab3"
0003C822 <internal_commands.ab3@1581> INCLUDE "internal_commands.ab3"
0003C824 <internal_commands.ab3@1583> INCLUDE "internal_commands.ab3"
0003C828 <internal_commands.ab3@1584> INCLUDE "internal_commands.ab3"
0003C82A <internal_commands.ab3@1585> INCLUDE "internal_commands.ab3"
0003C82C <internal_commands.ab3@1586> INCLUDE "internal_commands.ab3"
0003C830 <internal_commands.ab3@1587> INCLUDE "internal_commands.ab3"
0003C832 <internal_commands.ab3@1588> INCLUDE "internal_commands.ab3"
0003C836 <internal_commands.ab3@1592> INCLUDE "internal_commands.ab3"
0003C838 <internal_commands.ab3@1593> INCLUDE "internal_commands.ab3"
0003C83C <internal_commands.ab3@1594> INCLUDE "internal_commands.ab3"
0003C83D <internal_commands.ab3@1595> INCLUDE "internal_commands.ab3"
0003C83E <internal_commands.ab3@1596> INCLUDE "internal_commands.ab3"
0003C840 <internal_commands.ab3@1598> INCLUDE "internal_commands.ab3"
0003C844 <internal_commands.ab3@1599> INCLUDE "internal_commands.ab3"
0003C846 <internal_commands.ab3@1600> INCLUDE "internal_commands.ab3"
0003C848 <internal_commands.ab3@1601> INCLUDE "internal_commands.ab3"
0003C84C <internal_commands.ab3@1602> INCLUDE "internal_commands.ab3"
0003C84E <internal_commands.ab3@1603> INCLUDE "internal_commands.ab3"
0003C852 <internal_commands.ab3@1607> INCLUDE "internal_commands.ab3"
0003C854 <internal_commands.ab3@1608> INCLUDE "internal_commands.ab3"
0003C857 <internal_commands.ab3@1609> INCLUDE "internal_commands.ab3"
0003C858 <internal_commands.ab3@1610> INCLUDE "internal_commands.ab3"
0003C85A <internal_commands.ab3@1613> INCLUDE "internal_commands.ab3"
0003C85E <internal_commands.ab3@1614> INCLUDE "internal_commands.ab3"
0003C860 <internal_commands.ab3@1615> INCLUDE "internal_commands.ab3"
0003C862 <internal_commands.ab3@1616> INCLUDE "internal_commands.ab3"
0003C866 <internal_commands.ab3@1617> INCLUDE "internal_commands.ab3"
0003C868 <internal_commands.ab3@1618> INCLUDE "internal_commands.ab3"
0003C86C <internal_commands.ab3@1622> INCLUDE "internal_commands.ab3"
0003C86E <internal_commands.ab3@1623> INCLUDE "internal_commands.ab3"
0003C872 <internal_commands.ab3@1624> INCLUDE "internal_commands.ab3"
0003C873 <internal_commands.ab3@1625> INCLUDE "internal_commands.ab3"
0003C874 <internal_commands.ab3@1626> INCLUDE "internal_commands.ab3"
0003C876 <internal_commands.ab3@1628> INCLUDE "internal_commands.ab3"
0003C87A <internal_commands.ab3@1629> INCLUDE "internal_commands.ab3"
0003C87C <internal_commands.ab3@1630> INCLUDE "internal_commands.ab3"
0003C87E <internal_commands.ab3@1631> INCLUDE "internal_commands.ab3"
0003C882 <internal_commands.ab3@1632> INCLUDE "internal_commands.ab3"
0003C884 <internal_commands.ab3@1633> INCLUDE "internal_commands.ab3"
0003C888 <internal_commands.ab3@1637> INCLUDE "internal_commands.ab3"
0003C88A <internal_commands.ab3@1638> INCLUDE "internal_commands.ab3"
0003C88E <internal_commands.ab3@1639> INCLUDE "internal_commands.ab3"
0003C88F <internal_commands.ab3@1640> INCLUDE "internal_commands.ab3"
0003C890 <internal_commands.ab3@1641> INCLUDE "internal_commands.ab3"
0003C892 <internal_commands.ab3@1643> INCLUDE "internal_commands.ab3"
0003C896 <internal_commands.ab3@1644> INCLUDE "internal_commands.ab3"
0003C898 <internal_commands.ab3@1645> INCLUDE "internal_commands.ab3"
0003C89A <internal_commands.ab3@1646> INCLUDE "internal_commands.ab3"
0003C89E <internal_commands.ab3@1647> INCLUDE "internal_commands.ab3"
0003C8A0 <internal_commands.ab3@1648> INCLUDE "internal_commands.ab3"
0003C8A4 <internal_commands.ab3@1652> INCLUDE "internal_commands.ab3"
0003C8A6 <internal_commands.ab3@1653> INCLUDE "internal_commands.ab3"
0003C8AC <internal_commands.ab3@1654> INCLUDE "internal_commands.ab3"
0003C8AD <internal_commands.ab3@1655> INCLUDE "internal_commands.ab3"
0003C8AE <internal_commands.ab3@1656> INCLUDE "internal_commands.ab3"
0003C8B0 <internal_commands.ab3@1658> INCLUDE "internal_commands.ab3"
0003C8B4 <internal_commands.ab3@1659> INCLUDE "internal_commands.ab3"
0003C8B6 <internal_commands.ab3@1660> INCLUDE "internal_commands.ab3"
0003C8B8 <internal_commands.ab3@1661> INCLUDE "internal_commands.ab3"
0003C8BC <internal_commands.ab3@1662> INCLUDE "internal_commands.ab3"
0003C8BE <internal_commands.ab3@1663> INCLUDE "internal_commands.ab3"
0003C8C2 <internal_commands.ab3@1667> INCLUDE "internal_commands.ab3"
0003C8C4 <internal_commands.ab3@1668> INCLUDE "internal_commands.ab3"
0003C8C8 <internal_commands.ab3@1669> INCLUDE "internal_commands.ab3"
0003C8C9 <internal_commands.ab3@1670> INCLUDE "internal_commands.ab3"
0003C8CA <internal_commands.ab3@1671> INCLUDE "internal_commands.ab3"
0003C8CC <internal_commands.ab3@1673> INCLUDE "internal_commands.ab3"
0003C8D0 <internal_commands.ab3@1674> INCLUDE "internal_commands.ab3"
0003C8D2 <internal_commands.ab3@1675> INCLUDE "internal_commands.ab3"
0003C8D4 <internal_commands.ab3@1676> INCLUDE "internal_commands.ab3"
0003C8D8 <internal_commands.ab3@1677> INCLUDE "internal_commands.ab3"
0003C8DA <internal_commands.ab3@1678> INCLUDE "internal_commands.ab3"
0003C8DE <internal_commands.ab3@1682> INCLUDE "internal_commands.ab3"
0003C8E0 <internal_commands.ab3@1683> INCLUDE "internal_commands.ab3"
0003C8E4 <internal_commands.ab3@1684> INCLUDE "internal_commands.ab3"
0003C8E5 <internal_commands.ab3@1685> INCLUDE "internal_commands.ab3"
0003C8E6 <internal_commands.ab3@1686> INCLUDE "internal_commands.ab3"
0003C8E8 <internal_commands.ab3@1688> INCLUDE "internal_commands.ab3"
0003C8EC <internal_commands.ab3@1689> INCLUDE "internal_commands.ab3"
0003C8EE <internal_commands.ab3@1690> INCLUDE "internal_commands.ab3"
0003C8F0 <internal_commands.ab3@1691> INCLUDE "internal_commands.ab3"
0003C8F4 <internal_commands.ab3@1692> INCLUDE "internal_commands.ab3"
0003C8F6 <internal_commands.ab3@1693> INCLUDE "internal_commands.ab3"
0003C8FA <internal_commands.ab3@1697> INCLUDE "internal_commands.ab3"
0003C8FC <internal_commands.ab3@1698> INCLUDE "internal_commands.ab3"
0003C901 <internal_commands.ab3@1699> INCLUDE "internal_commands.ab3"
0003C902 <internal_commands.ab3@1700> INCLUDE "internal_commands.ab3"
0003C904 <internal_commands.ab3@1703> INCLUDE "internal_commands.ab3"
0003C908 <internal_commands.ab3@1704> INCLUDE "internal_commands.ab3"
0003C90A <internal_commands.ab3@1705> INCLUDE "internal_commands.ab3"
0003C90C <internal_commands.ab3@1706> INCLUDE "internal_commands.ab3"
0003C910 <internal_commands.ab3@1707> INCLUDE "internal_commands.ab3"
0003C912 <internal_commands.ab3@1708> INCLUDE "internal_commands.ab3"
0003C916 <internal_commands.ab3@1712> INCLUDE "internal_commands.ab3"
0003C918 <internal_commands.ab3@1713> INCLUDE "internal_commands.ab3"
0003C91D <internal_commands.ab3@1714> INCLUDE "internal_commands.ab3"
0003C91E <internal_commands.ab3@1715> INCLUDE "internal_commands.ab3"
0003C920 <internal_commands.ab3@1718> INCLUDE "internal_commands.ab3"
0003C924 <internal_commands.ab3@1719> INCLUDE "internal_commands.ab3"
0003C926 <internal_commands.ab3@1720> INCLUDE "internal_commands.ab3"
0003C928 <internal_commands.ab3@1721> INCLUDE "internal_commands.ab3"
0003C92C <internal_commands.ab3@1722> INCLUDE "internal_commands.ab3"
0003C92E <internal_commands.ab3@1723> INCLUDE "internal_commands.ab3"
0003C932 <internal_commands.ab3@1727> INCLUDE "internal_commands.ab3"
0003C934 <internal_commands.ab3@1728> INCLUDE "internal_commands.ab3"
0003C938 <internal_commands.ab3@1729> INCLUDE "internal_commands.ab3"
0003C939 <internal_commands.ab3@1730> INCLUDE "internal_commands.ab3"
0003C93A <internal_commands.ab3@1731> INCLUDE "internal_commands.ab3"
0003C93C <internal_commands.ab3@1733> INCLUDE "internal_commands.ab3"
0003C940 <internal_commands.ab3@1734> INCLUDE "internal_commands.ab3"
0003C942 <internal_commands.ab3@1735> INCLUDE "internal_commands.ab3"
0003C944 <internal_commands.ab3@1736> INCLUDE "internal_commands.ab3"
0003C948 <internal_commands.ab3@1737> INCLUDE "internal_commands.ab3"
0003C94A <internal_commands.ab3@1738> INCLUDE "internal_commands.ab3"
0003C94E <internal_commands.ab3@1742> INCLUDE "internal_commands.ab3"
0003C950 <internal_commands.ab3@1743> INCLUDE "internal_commands.ab3"
0003C954 <internal_commands.ab3@1744> INCLUDE "internal_commands.ab3"
0003C955 <internal_commands.ab3@1745> INCLUDE "internal_commands.ab3"
0003C956 <internal_commands.ab3@1746> INCLUDE "internal_commands.ab3"
0003C958 <internal_commands.ab3@1748> INCLUDE "internal_commands.ab3"
0003C95C <internal_commands.ab3@1749> INCLUDE "internal_commands.ab3"
0003C95E <internal_commands.ab3@1750> INCLUDE "internal_commands.ab3"
0003C960 <internal_commands.ab3@1751> INCLUDE "internal_commands.ab3"
0003C964 <internal_commands.ab3@1752> INCLUDE "internal_commands.ab3"
0003C966 <internal_commands.ab3@1753> INCLUDE "internal_commands.ab3"
0003C96A <internal_commands.ab3@1757> INCLUDE "internal_commands.ab3"
0003C96C <internal_commands.ab3@1758> INCLUDE "internal_commands.ab3"
0003C970 <internal_commands.ab3@1759> INCLUDE "internal_commands.ab3"
0003C971 <internal_commands.ab3@1760> INCLUDE "internal_commands.ab3"
0003C972 <internal_commands.ab3@1761> INCLUDE "internal_commands.ab3"
0003C974 <internal_commands.ab3@1763> INCLUDE "internal_commands.ab3"
0003C978 <internal_commands.ab3@1764> INCLUDE "internal_commands.ab3"
0003C97A <internal_commands.ab3@1765> INCLUDE "internal_commands.ab3"
0003C97C <internal_commands.ab3@1766> INCLUDE "internal_commands.ab3"
0003C980 <internal_commands.ab3@1767> INCLUDE "internal_commands.ab3"
0003C982 <internal_commands.ab3@1768> INCLUDE "internal_commands.ab3"
0003C986 <internal_commands.ab3@1772> INCLUDE "internal_commands.ab3"
0003C988 <internal_commands.ab3@1773> INCLUDE "internal_commands.ab3"
0003C98D <internal_commands.ab3@1774> INCLUDE "internal_commands.ab3"
0003C98E <internal_commands.ab3@1775> INCLUDE "internal_commands.ab3"
0003C990 <internal_commands.ab3@1778> INCLUDE "internal_commands.ab3"
0003C994 <internal_commands.ab3@1779> INCLUDE "internal_commands.ab3"
0003C996 <internal_commands.ab3@1780> INCLUDE "internal_commands.ab3"
0003C998 <internal_commands.ab3@1781> INCLUDE "internal_commands.ab3"
0003C99C <internal_commands.ab3@1782> INCLUDE "internal_commands.ab3"
0003C99E <internal_commands.ab3@1783> INCLUDE "internal_commands.ab3"
0003C9A2 <internal_commands.ab3@1787> INCLUDE "internal_commands.ab3"
0003C9A4 <internal_commands.ab3@1788> INCLUDE "internal_commands.ab3"
0003C9A8 <internal_commands.ab3@1789> INCLUDE "internal_commands.ab3"
0003C9A9 <internal_commands.ab3@1790> INCLUDE "internal_commands.ab3"
0003C9AA <internal_commands.ab3@1791> INCLUDE "internal_commands.ab3"
0003C9AC <internal_commands.ab3@1793> INCLUDE "internal_commands.ab3"
0003C9B0 <internal_commands.ab3@1794> INCLUDE "internal_commands.ab3"
0003C9B2 <internal_commands.ab3@1795> INCLUDE "internal_commands.ab3"
0003C9B4 <internal_commands.ab3@1796> INCLUDE "internal_commands.ab3"
0003C9B8 <internal_commands.ab3@1797> INCLUDE "internal_commands.ab3"
0003C9BA <internal_commands.ab3@1798> INCLUDE "internal_commands.ab3"
0003C9BE <internal_commands.ab3@1802> INCLUDE "internal_commands.ab3"
0003C9C0 <internal_commands.ab3@1803> INCLUDE "internal_commands.ab3"
0003C9C4 <internal_commands.ab3@1804> INCLUDE "internal_commands.ab3"
0003C9C5 <internal_commands.ab3@1805> INCLUDE "internal_commands.ab3"
0003C9C6 <internal_commands.ab3@1806> INCLUDE "internal_commands.ab3"
0003C9C8 <internal_commands.ab3@1808> INCLUDE "internal_commands.ab3"
0003C9CC <internal_commands.ab3@1809> INCLUDE "internal_commands.ab3"
0003C9CE <internal_commands.ab3@1810> INCLUDE "internal_commands.ab3"
0003C9D0 <internal_commands.ab3@1811> INCLUDE "internal_commands.ab3"
0003C9D4 <internal_commands.ab3@1812> INCLUDE "internal_commands.ab3"
0003C9D6 <internal_commands.ab3@1813> INCLUDE "internal_commands.ab3"
0003C9DA <internal_commands.ab3@1817> INCLUDE "internal_commands.ab3"
0003C9DC <internal_commands.ab3@1818> INCLUDE "internal_commands.ab3"
0003C9E0 <internal_commands.ab3@1819> INCLUDE "internal_commands.ab3"
0003C9E1 <internal_commands.ab3@1820> INCLUDE "internal_commands.ab3"
0003C9E2 <internal_commands.ab3@1821> INCLUDE "internal_commands.ab3"
0003C9E4 <internal_commands.ab3@1823> INCLUDE "internal_commands.ab3"
0003C9E8 <internal_commands.ab3@1824> INCLUDE "internal_commands.ab3"
0003C9EA <internal_commands.ab3@1825> INCLUDE "internal_commands.ab3"
0003C9EC <internal_commands.ab3@1826> INCLUDE "internal_commands.ab3"
0003C9F0 <internal_commands.ab3@1827> INCLUDE "internal_commands.ab3"
0003C9F2 <internal_commands.ab3@1828> INCLUDE "internal_commands.ab3"
0003C9F6 <internal_commands.ab3@1832> INCLUDE "internal_commands.ab3"
0003C9F8 <internal_commands.ab3@1833> INCLUDE "internal_commands.ab3"
0003C9FC <internal_commands.ab3@1834> INCLUDE "internal_commands.ab3"
0003C9FD <internal_commands.ab3@1835> INCLUDE "internal_commands.ab3"
0003C9FE <internal_commands.ab3@1836> INCLUDE "internal_commands.ab3"
0003CA00 <internal_commands.ab3@1838> INCLUDE "internal_commands.ab3"
0003CA04 <internal_commands.ab3@1839> INCLUDE "internal_commands.ab3"
0003CA06 <internal_commands.ab3@1840> INCLUDE "internal_commands.ab3"
0003CA08 <internal_commands.ab3@1841> INCLUDE "internal_commands.ab3"
0003CA0C <internal_commands.ab3@1842> INCLUDE "internal_commands.ab3"
0003CA0E <internal_commands.ab3@1843> INCLUDE "internal_commands.ab3"
0003CA12 <internal_commands.ab3@1847> INCLUDE "internal_commands.ab3"
0003CA14 <internal_commands.ab3@1848> INCLUDE "internal_commands.ab3"
0003CA18 <internal_commands.ab3@1849> INCLUDE "internal_commands.ab3"
0003CA19 <internal_commands.ab3@1850> INCLUDE "internal_commands.ab3"
0003CA1A <internal_commands.ab3@1851> INCLUDE "internal_commands.ab3"
0003CA1C <internal_commands.ab3@1853> INCLUDE "internal_commands.ab3"
0003CA20 <internal_commands.ab3@1854> INCLUDE "internal_commands.ab3"
0003CA22 <internal_commands.ab3@1855> INCLUDE "internal_commands.ab3"
0003CA24 <internal_commands.ab3@1856> INCLUDE "internal_commands.ab3"
0003CA28 <internal_commands.ab3@1857> INCLUDE "internal_commands.ab3"
0003CA2A <internal_commands.ab3@1858> INCLUDE "internal_commands.ab3"
0003CA2E <internal_commands.ab3@1862> INCLUDE "internal_commands.ab3"
0003CA30 <internal_commands.ab3@1863> INCLUDE "internal_commands.ab3"
0003CA34 <internal_commands.ab3@1864> INCLUDE "internal_commands.ab3"
0003CA35 <internal_commands.ab3@1865> INCLUDE "internal_commands.ab3"
0003CA36 <internal_commands.ab3@1866> INCLUDE "internal_commands.ab3"
0003CA38 <internal_commands.ab3@1868> INCLUDE "internal_commands.ab3"
0003CA3C <internal_commands.ab3@1869> INCLUDE "internal_commands.ab3"
0003CA3E <internal_commands.ab3@1870> INCLUDE "internal_commands.ab3"
0003CA40 <internal_commands.ab3@1871> INCLUDE "internal_commands.ab3"
0003CA44 <internal_commands.ab3@1872> INCLUDE "internal_commands.ab3"
0003CA46 <internal_commands.ab3@1873> INCLUDE "internal_commands.ab3"
0003CA4A <internal_commands.ab3@1877> INCLUDE "internal_commands.ab3"
0003CA4C <internal_commands.ab3@1878> INCLUDE "internal_commands.ab3"
0003CA50 <internal_commands.ab3@1879> INCLUDE "internal_commands.ab3"
0003CA51 <internal_commands.ab3@1880> INCLUDE "internal_commands.ab3"
0003CA52 <internal_commands.ab3@1881> INCLUDE "internal_commands.ab3"
0003CA54 <internal_commands.ab3@1883> INCLUDE "internal_commands.ab3"
0003CA58 <internal_commands.ab3@1884> INCLUDE "internal_commands.ab3"
0003CA5A <internal_commands.ab3@1885> INCLUDE "internal_commands.ab3"
0003CA5C <internal_commands.ab3@1886> INCLUDE "internal_commands.ab3"
0003CA60 <internal_commands.ab3@1887> INCLUDE "internal_commands.ab3"
0003CA62 <internal_commands.ab3@1888> INCLUDE "internal_commands.ab3"
0003CA66 <internal_commands.ab3@1892> INCLUDE "internal_commands.ab3"
0003CA68 <internal_commands.ab3@1893> INCLUDE "internal_commands.ab3"
0003CA6C <internal_commands.ab3@1894> INCLUDE "internal_commands.ab3"
0003CA6D <internal_commands.ab3@1895> INCLUDE "internal_commands.ab3"
0003CA6E <internal_commands.ab3@1896> INCLUDE "internal_commands.ab3"
0003CA70 <internal_commands.ab3@1898> INCLUDE "internal_commands.ab3"
0003CA74 <internal_commands.ab3@1899> INCLUDE "internal_commands.ab3"
0003CA76 <internal_commands.ab3@1900> INCLUDE "internal_commands.ab3"
0003CA78 <internal_commands.ab3@1901> INCLUDE "internal_commands.ab3"
0003CA7C <internal_commands.ab3@1902> INCLUDE "internal_commands.ab3"
0003CA7E <internal_commands.ab3@1903> INCLUDE "internal_commands.ab3"
0003CA82 <internal_commands.ab3@1907> INCLUDE "internal_commands.ab3"
0003CA84 <internal_commands.ab3@1908> INCLUDE "internal_commands.ab3"
0003CA88 <internal_commands.ab3@1909> INCLUDE "internal_commands.ab3"
0003CA89 <internal_commands.ab3@1910> INCLUDE "internal_commands.ab3"
0003CA8A <internal_commands.ab3@1911> INCLUDE "internal_commands.ab3"
0003CA8C <internal_commands.ab3@1913> INCLUDE "internal_commands.ab3"
0003CA90 <internal_commands.ab3@1914> INCLUDE "internal_commands.ab3"
0003CA92 <internal_commands.ab3@1915> INCLUDE "internal_commands.ab3"
0003CA94 <internal_commands.ab3@1916> INCLUDE "internal_commands.ab3"
0003CA98 <internal_commands.ab3@1917> INCLUDE "internal_commands.ab3"
0003CA9A <internal_commands.ab3@1918> INCLUDE "internal_commands.ab3"
0003CA9E <internal_commands.ab3@1922> INCLUDE "internal_commands.ab3"
0003CAA0 <internal_commands.ab3@1923> INCLUDE "internal_commands.ab3"
0003CAA4 <internal_commands.ab3@1924> INCLUDE "internal_commands.ab3"
0003CAA5 <internal_commands.ab3@1925> INCLUDE "internal_commands.ab3"
0003CAA6 <internal_commands.ab3@1926> INCLUDE "internal_commands.ab3"
0003CAA8 <internal_commands.ab3@1928> INCLUDE "internal_commands.ab3"
0003CAAC <internal_commands.ab3@1929> INCLUDE "internal_commands.ab3"
0003CAAE <internal_commands.ab3@1930> INCLUDE "internal_commands.ab3"
0003CAB0 <internal_commands.ab3@1931> INCLUDE "internal_commands.ab3"
0003CAB4 <internal_commands.ab3@1932> INCLUDE "internal_commands.ab3"
0003CAB6 <internal_commands.ab3@1933> INCLUDE "internal_commands.ab3"
0003CABA <internal_commands.ab3@1937> INCLUDE "internal_commands.ab3"
0003CABC <internal_commands.ab3@1938> INCLUDE "internal_commands.ab3"
0003CAC0 <internal_commands.ab3@1939> INCLUDE "internal_commands.ab3"
0003CAC1 <internal_commands.ab3@1940> INCLUDE "internal_commands.ab3"
0003CAC2 <internal_commands.ab3@1941> INCLUDE "internal_commands.ab3"
0003CAC4 <internal_commands.ab3@1943> INCLUDE "internal_commands.ab3"
0003CAC8 <internal_commands.ab3@1944> INCLUDE "internal_commands.ab3"
0003CACA <internal_commands.ab3@1945> INCLUDE "internal_commands.ab3"
0003CACC <internal_commands.ab3@1946> INCLUDE "internal_commands.ab3"
0003CAD0 <internal_commands.ab3@1947> INCLUDE "internal_commands.ab3"
0003CAD2 <internal_commands.ab3@1948> INCLUDE "internal_commands.ab3"
0003CAD6 <internal_commands.ab3@1952> INCLUDE "internal_commands.ab3"
0003CAD8 <internal_commands.ab3@1953> INCLUDE "internal_commands.ab3"
0003CADC <internal_commands.ab3@1954> INCLUDE "internal_commands.ab3"
0003CADD <internal_commands.ab3@1955> INCLUDE "internal_commands.ab3"
0003CADE <internal_commands.ab3@1956> INCLUDE "internal_commands.ab3"
0003CAE0 <internal_commands.ab3@1958> INCLUDE "internal_commands.ab3"
0003CAE4 <internal_commands.ab3@1959> INCLUDE "internal_commands.ab3"
0003CAE6 <internal_commands.ab3@1960> INCLUDE "internal_commands.ab3"
0003CAE8 <internal_commands.ab3@1961> INCLUDE "internal_commands.ab3"
0003CAEC <internal_commands.ab3@1962> INCLUDE "internal_commands.ab3"
0003CAEE <internal_commands.ab3@1963> INCLUDE "internal_commands.ab3"
0003CAF2 <internal_commands.ab3@1967> INCLUDE "internal_commands.ab3"
0003CAF4 <internal_commands.ab3@1968> INCLUDE "internal_commands.ab3"
0003CAF8 <internal_commands.ab3@1969> INCLUDE "internal_commands.ab3"
0003CAF9 <internal_commands.ab3@1970> INCLUDE "internal_commands.ab3"
0003CAFA <internal_commands.ab3@1971> INCLUDE "internal_commands.ab3"
0003CAFC <internal_commands.ab3@1973> INCLUDE "internal_commands.ab3"
0003CB00 <internal_commands.ab3@1974> INCLUDE "internal_commands.ab3"
0003CB02 <internal_commands.ab3@1975> INCLUDE "internal_commands.ab3"
0003CB04 <internal_commands.ab3@1976> INCLUDE "internal_commands.ab3"
0003CB08 <internal_commands.ab3@1977> INCLUDE "internal_commands.ab3"
0003CB0A <internal_commands.ab3@1978> INCLUDE "internal_commands.ab3"
0003CB0E <internal_commands.ab3@1982> INCLUDE "internal_commands.ab3"
0003CB10 <internal_commands.ab3@1983> INCLUDE "internal_commands.ab3"
0003CB14 <internal_commands.ab3@1984> INCLUDE "internal_commands.ab3"
0003CB15 <internal_commands.ab3@1985> INCLUDE "internal_commands.ab3"
0003CB16 <internal_commands.ab3@1986> INCLUDE "internal_commands.ab3"
0003CB18 <internal_commands.ab3@1988> INCLUDE "internal_commands.ab3"
0003CB1C <internal_commands.ab3@1989> INCLUDE "internal_commands.ab3"
0003CB1E <internal_commands.ab3@1990> INCLUDE "internal_commands.ab3"
0003CB20 <internal_commands.ab3@1991> INCLUDE "internal_commands.ab3"
0003CB24 <internal_commands.ab3@1992> INCLUDE "internal_commands.ab3"
0003CB26 <internal_commands.ab3@1993> INCLUDE "internal_commands.ab3"
0003CB2A <internal_commands.ab3@1997> INCLUDE "internal_commands.ab3"
0003CB2C <internal_commands.ab3@1998> INCLUDE "internal_commands.ab3"
0003CB2F <internal_commands.ab3@1999> INCLUDE "internal_commands.ab3"
0003CB30 <internal_commands.ab3@2000> INCLUDE "internal_commands.ab3"
0003CB32 <internal_commands.ab3@2003> INCLUDE "internal_commands.ab3"
0003CB36 <internal_commands.ab3@2004> INCLUDE "internal_commands.ab3"
0003CB38 <internal_commands.ab3@2005> INCLUDE "internal_commands.ab3"
0003CB3A <internal_commands.ab3@2006> INCLUDE "internal_commands.ab3"
0003CB3E <internal_commands.ab3@2007> INCLUDE "internal_commands.ab3"
0003CB40 <internal_commands.ab3@2008> INCLUDE "internal_commands.ab3"
0003CB44 <internal_commands.ab3@2012> INCLUDE "internal_commands.ab3"
0003CB46 <internal_commands.ab3@2013> INCLUDE "internal_commands.ab3"
0003CB49 <internal_commands.ab3@2014> INCLUDE "internal_commands.ab3"
0003CB4A <internal_commands.ab3@2015> INCLUDE "internal_commands.ab3"
0003CB4C <internal_commands.ab3@2018> INCLUDE "internal_commands.ab3"
0003CB50 <internal_commands.ab3@2019> INCLUDE "internal_commands.ab3"
0003CB52 <internal_commands.ab3@2020> INCLUDE "internal_commands.ab3"
0003CB54 <internal_commands.ab3@2021> INCLUDE "internal_commands.ab3"
0003CB58 <internal_commands.ab3@2022> INCLUDE "internal_commands.ab3"
0003CB5A <internal_commands.ab3@2023> INCLUDE "internal_commands.ab3"
0003CB5E <internal_commands.ab3@2027> INCLUDE "internal_commands.ab3"
0003CB60 <internal_commands.ab3@2028> INCLUDE "internal_commands.ab3"
0003CB65 <internal_commands.ab3@2029> INCLUDE "internal_commands.ab3"
0003CB66 <internal_commands.ab3@2030> INCLUDE "internal_commands.ab3"
0003CB68 <internal_commands.ab3@2033> INCLUDE "internal_commands.ab3"
0003CB6C <internal_commands.ab3@2034> INCLUDE "internal_commands.ab3"
0003CB6E <internal_commands.ab3@2035> INCLUDE "internal_commands.ab3"
0003CB70 <internal_commands.ab3@2036> INCLUDE "internal_commands.ab3"
0003CB74 <internal_commands.ab3@2037> INCLUDE "internal_commands.ab3"
0003CB76 <internal_commands.ab3@2038> INCLUDE "internal_commands.ab3"
0003CB7A <internal_commands.ab3@2042> INCLUDE "internal_commands.ab3"
0003CB7C <internal_commands.ab3@2043> INCLUDE "internal_commands.ab3"
0003CB80 <internal_commands.ab3@2044> INCLUDE "internal_commands.ab3"
0003CB81 <internal_commands.ab3@2045> INCLUDE "internal_commands.ab3"
0003CB82 <internal_commands.ab3@2046> INCLUDE "internal_commands.ab3"
0003CB84 <internal_commands.ab3@2048> INCLUDE "internal_commands.ab3"
0003CB88 <internal_commands.ab3@2049> INCLUDE "internal_commands.ab3"
0003CB8A <internal_commands.ab3@2050> INCLUDE "internal_commands.ab3"
0003CB8C <internal_commands.ab3@2051> INCLUDE "internal_commands.ab3"
0003CB90 <internal_commands.ab3@2052> INCLUDE "internal_commands.ab3"
0003CB92 <internal_commands.ab3@2053> INCLUDE "internal_commands.ab3"
0003CB96 <internal_commands.ab3@2057> INCLUDE "internal_commands.ab3"
0003CB98 <internal_commands.ab3@2058> INCLUDE "internal_commands.ab3"
0003CB9D <internal_commands.ab3@2059> INCLUDE "internal_commands.ab3"
0003CB9E <internal_commands.ab3@2060> INCLUDE "internal_commands.ab3"
0003CBA0 <internal_commands.ab3@2063> INCLUDE "internal_commands.ab3"
0003CBA4 <internal_commands.ab3@2064> INCLUDE "internal_commands.ab3"
0003CBA6 <internal_commands.ab3@2065> INCLUDE "internal_commands.ab3"
0003CBA8 <internal_commands.ab3@2066> INCLUDE "internal_commands.ab3"
0003CBAC <internal_commands.ab3@2067> INCLUDE "internal_commands.ab3"
0003CBAE <internal_commands.ab3@2068> INCLUDE "internal_commands.ab3"
0003CBB2 <internal_commands.ab3@2072> INCLUDE "internal_commands.ab3"
0003CBB4 <internal_commands.ab3@2073> INCLUDE "internal_commands.ab3"
0003CBB9 <internal_commands.ab3@2074> INCLUDE "internal_commands.ab3"
0003CBBA <internal_commands.ab3@2075> INCLUDE "internal_commands.ab3"
0003CBBC <internal_commands.ab3@2078> INCLUDE "internal_commands.ab3"
0003CBC0 <internal_commands.ab3@2079> INCLUDE "internal_commands.ab3"
0003CBC2 <internal_commands.ab3@2080> INCLUDE "internal_commands.ab3"
0003CBC4 <internal_commands.ab3@2081> INCLUDE "internal_commands.ab3"
0003CBC8 <internal_commands.ab3@2082> INCLUDE "internal_commands.ab3"
0003CBCA <internal_commands.ab3@2083> INCLUDE "internal_commands.ab3"
0003CBCE <internal_commands.ab3@2087> INCLUDE "internal_commands.ab3"
0003CBD0 <internal_commands.ab3@2088> INCLUDE "internal_commands.ab3"
0003CBD5 <internal_commands.ab3@2089> INCLUDE "internal_commands.ab3"
0003CBD6 <internal_commands.ab3@2090> INCLUDE "internal_commands.ab3"
0003CBD8 <internal_commands.ab3@2093> INCLUDE "internal_commands.ab3"
0003CBDC <internal_commands.ab3@2094> INCLUDE "internal_commands.ab3"
0003CBDE <internal_commands.ab3@2095> INCLUDE "internal_commands.ab3"
0003CBE0 <internal_commands.ab3@2096> INCLUDE "internal_commands.ab3"
0003CBE4 <internal_commands.ab3@2097> INCLUDE "internal_commands.ab3"
0003CBE6 <internal_commands.ab3@2098> INCLUDE "internal_commands.ab3"
0003CBEA <internal_commands.ab3@2102> INCLUDE "internal_commands.ab3"
0003CBEC <internal_commands.ab3@2103> INCLUDE "internal_commands.ab3"
0003CBF1 <internal_commands.ab3@2104> INCLUDE "internal_commands.ab3"
0003CBF2 <internal_commands.ab3@2105> INCLUDE "internal_commands.ab3"
0003CBF4 <internal_commands.ab3@2108> INCLUDE "internal_commands.ab3"
0003CBF8 <internal_commands.ab3@2109> INCLUDE "internal_commands.ab3"
0003CBFA <internal_commands.ab3@2110> INCLUDE "internal_commands.ab3"
0003CBFC <internal_commands.ab3@2111> INCLUDE "internal_commands.ab3"
0003CC00 <internal_commands.ab3@2112> INCLUDE "internal_commands.ab3"
0003CC02 <internal_commands.ab3@2113> INCLUDE "internal_commands.ab3"
0003CC06 <internal_commands.ab3@2117> INCLUDE "internal_commands.ab3"
0003CC08 <internal_commands.ab3@2118> INCLUDE "internal_commands.ab3"
0003CC0D <internal_commands.ab3@2119> INCLUDE "internal_commands.ab3"
0003CC0E <internal_commands.ab3@2120> INCLUDE "internal_commands.ab3"
0003CC10 <internal_commands.ab3@2123> INCLUDE "internal_commands.ab3"
0003CC14 <internal_commands.ab3@2124> INCLUDE "internal_commands.ab3"
0003CC16 <internal_commands.ab3@2125> INCLUDE "internal_commands.ab3"
0003CC18 <internal_commands.ab3@2126> INCLUDE "internal_commands.ab3"
0003CC1C <internal_commands.ab3@2127> INCLUDE "internal_commands.ab3"
0003CC1E <internal_commands.ab3@2128> INCLUDE "internal_commands.ab3"
0003CC22 <internal_commands.ab3@2132> INCLUDE "internal_commands.ab3"
0003CC24 <internal_commands.ab3@2133> INCLUDE "internal_commands.ab3"
0003CC28 <internal_commands.ab3@2134> INCLUDE "internal_commands.ab3"
0003CC29 <internal_commands.ab3@2135> INCLUDE "internal_commands.ab3"
0003CC2A <internal_commands.ab3@2136> INCLUDE "internal_commands.ab3"
0003CC2C <internal_commands.ab3@2138> INCLUDE "internal_commands.ab3"
0003CC30 <internal_commands.ab3@2139> INCLUDE "internal_commands.ab3"
0003CC32 <internal_commands.ab3@2140> INCLUDE "internal_commands.ab3"
0003CC34 <internal_commands.ab3@2141> INCLUDE "internal_commands.ab3"
0003CC38 <internal_commands.ab3@2142> INCLUDE "internal_commands.ab3"
0003CC3A <internal_commands.ab3@2143> INCLUDE "internal_commands.ab3"
0003CC3E <internal_commands.ab3@2147> INCLUDE "internal_commands.ab3"
0003CC40 <internal_commands.ab3@2148> INCLUDE "internal_commands.ab3"
0003CC45 <internal_commands.ab3@2149> INCLUDE "internal_commands.ab3"
0003CC46 <internal_commands.ab3@2150> INCLUDE "internal_commands.ab3"
0003CC48 <internal_commands.ab3@2153> INCLUDE "internal_commands.ab3"
0003CC4C <internal_commands.ab3@2154> INCLUDE "internal_commands.ab3"
0003CC4E <internal_commands.ab3@2155> INCLUDE "internal_commands.ab3"
0003CC50 <internal_commands.ab3@2156> INCLUDE "internal_commands.ab3"
0003CC54 <internal_commands.ab3@2157> INCLUDE "internal_commands.ab3"
0003CC56 <internal_commands.ab3@2158> INCLUDE "internal_commands.ab3"
0003CC5A <internal_commands.ab3@2162> INCLUDE "internal_commands.ab3"
0003CC5C <internal_commands.ab3@2163> INCLUDE "internal_commands.ab3"
0003CC62 <internal_commands.ab3@2164> INCLUDE "internal_commands.ab3"
0003CC63 <internal_commands.ab3@2165> INCLUDE "internal_commands.ab3"
0003CC64 <internal_commands.ab3@2166> INCLUDE "internal_commands.ab3"
0003CC66 <internal_commands.ab3@2168> INCLUDE "internal_commands.ab3"
0003CC6A <internal_commands.ab3@2169> INCLUDE "internal_commands.ab3"
0003CC6C <internal_commands.ab3@2170> INCLUDE "internal_commands.ab3"
0003CC6E <internal_commands.ab3@2171> INCLUDE "internal_commands.ab3"
0003CC72 <internal_commands.ab3@2172> INCLUDE "internal_commands.ab3"
0003CC74 <internal_commands.ab3@2173> INCLUDE "internal_commands.ab3"
0003CC78 <internal_commands.ab3@2177> INCLUDE "internal_commands.ab3"
0003CC7A <internal_commands.ab3@2178> INCLUDE "internal_commands.ab3"
0003CC7E <internal_commands.ab3@2179> INCLUDE "internal_commands.ab3"
0003CC7F <internal_commands.ab3@2180> INCLUDE "internal_commands.ab3"
0003CC80 <internal_commands.ab3@2181> INCLUDE "internal_commands.ab3"
0003CC82 <internal_commands.ab3@2183> INCLUDE "internal_commands.ab3"
0003CC86 <internal_commands.ab3@2184> INCLUDE "internal_commands.ab3"
0003CC88 <internal_commands.ab3@2185> INCLUDE "internal_commands.ab3"
0003CC8A <internal_commands.ab3@2186> INCLUDE "internal_commands.ab3"
0003CC8E <internal_commands.ab3@2187> INCLUDE "internal_commands.ab3"
0003CC90 <internal_commands.ab3@2188> INCLUDE "internal_commands.ab3"
0003CC94 <internal_commands.ab3@2192> INCLUDE "internal_commands.ab3"
0003CC96 <internal_commands.ab3@2193> INCLUDE "internal_commands.ab3"
0003CC9B <internal_commands.ab3@2194> INCLUDE "internal_commands.ab3"
0003CC9C <internal_commands.ab3@2195> INCLUDE "internal_commands.ab3"
0003CC9E <internal_commands.ab3@2198> INCLUDE "internal_commands.ab3"
0003CCA2 <internal_commands.ab3@2199> INCLUDE "internal_commands.ab3"
0003CCA4 <internal_commands.ab3@2200> INCLUDE "internal_commands.ab3"
0003CCA6 <internal_commands.ab3@2201> INCLUDE "internal_commands.ab3"
0003CCAA <internal_commands.ab3@2202> INCLUDE "internal_commands.ab3"
0003CCAC <internal_commands.ab3@2203> INCLUDE "internal_commands.ab3"
0003CCB0 <internal_commands.ab3@2208> INCLUDE "internal_commands.ab3"
0003CCB2 <internal_commands.ab3@2209> INCLUDE "internal_commands.ab3"
0003CCB9 <internal_commands.ab3@2210> INCLUDE "internal_commands.ab3"
0003CCBA <internal_commands.ab3@2211> INCLUDE "internal_commands.ab3"
0003CCBC <internal_commands.ab3@2230> INCLUDE "internal_commands.ab3"
0003CCBE <internal_commands.ab3@2231> INCLUDE "internal_commands.ab3"
0003CCC0 <internal_commands.ab3@2235> INCLUDE "internal_commands.ab3"
0003CCC2 <internal_commands.ab3@2236> INCLUDE "internal_commands.ab3"
0003CCC4 <internal_commands.ab3@2240> INCLUDE "internal_commands.ab3"
0003CCC6 <internal_commands.ab3@2241> INCLUDE "internal_commands.ab3"
0003CCC8 <internal_commands.ab3@2245> INCLUDE "internal_commands.ab3"
0003CCCA <internal_commands.ab3@2246> INCLUDE "internal_commands.ab3"
0003CCCC <internal_commands.ab3@2251> INCLUDE "internal_commands.ab3"
0003CCD0 <internal_commands.ab3@2252> INCLUDE "internal_commands.ab3"
0003CCD2 <internal_commands.ab3@2253> INCLUDE "internal_commands.ab3"
0003CCD4 <internal_commands.ab3@2254> INCLUDE "internal_commands.ab3"
0003CCD6 <internal_commands.ab3@2255> INCLUDE "internal_commands.ab3"
0003CCD8 <internal_commands.ab3@2256> INCLUDE "internal_commands.ab3"
0003CCDC <internal_commands.ab3@2257> INCLUDE "internal_commands.ab3"
0003CCE2 <internal_commands.ab3@2260> INCLUDE "internal_commands.ab3"
0003CCE6 <internal_commands.ab3@2261> INCLUDE "internal_commands.ab3"
0003CCE8 <internal_commands.ab3@2262> INCLUDE "internal_commands.ab3"
0003CCEA <internal_commands.ab3@2263> INCLUDE "internal_commands.ab3"
0003CCEC <internal_commands.ab3@2264> INCLUDE "internal_commands.ab3"
0003CCEE <internal_commands.ab3@2265> INCLUDE "internal_commands.ab3"
0003CCF0 <internal_commands.ab3@2266> INCLUDE "internal_commands.ab3"
0003CCF2 <internal_commands.ab3@2273> INCLUDE "internal_commands.ab3"
0003CCF6 <internal_commands.ab3@2274> INCLUDE "internal_commands.ab3"
0003CCFA <internal_commands.ab3@2275> INCLUDE "internal_commands.ab3"
0003CCFE <internal_commands.ab3@2276> INCLUDE "internal_commands.ab3"
0003CD02 <internal_commands.ab3@2277> INCLUDE "internal_commands.ab3"
0003CD06 <internal_commands.ab3@2278> INCLUDE "internal_commands.ab3"
0003CD08 <internal_commands.ab3@2281> INCLUDE "internal_commands.ab3"
0003CD0A <internal_commands.ab3@2282> INCLUDE "internal_commands.ab3"
0003CD0E <internal_commands.ab3@2283> INCLUDE "internal_commands.ab3"
0003CD12 <internal_commands.ab3@2284> INCLUDE "internal_commands.ab3"
0003CD16 <internal_commands.ab3@2285> INCLUDE "internal_commands.ab3"
0003CD1A <internal_commands.ab3@2286> INCLUDE "internal_commands.ab3"
0003CD1C <internal_commands.ab3@2289> INCLUDE "internal_commands.ab3"
0003CD1E <internal_commands.ab3@2290> INCLUDE "internal_commands.ab3"
0003CD22 <internal_commands.ab3@2291> INCLUDE "internal_commands.ab3"
0003CD26 <internal_commands.ab3@2292> INCLUDE "internal_commands.ab3"
0003CD2A <internal_commands.ab3@2293> INCLUDE "internal_commands.ab3"
0003CD2E <internal_commands.ab3@2294> INCLUDE "internal_commands.ab3"
0003CD30 <internal_commands.ab3@2295> INCLUDE "internal_commands.ab3"
0003CD32 <internal_commands.ab3@2298> INCLUDE "internal_commands.ab3"
0003CD34 <internal_commands.ab3@2299> INCLUDE "internal_commands.ab3"
0003CD38 <internal_commands.ab3@2300> INCLUDE "internal_commands.ab3"
0003CD3A <internal_commands.ab3@2302> INCLUDE "internal_commands.ab3"
0003CD3E <internal_commands.ab3@2303> INCLUDE "internal_commands.ab3"
0003CD40 <internal_commands.ab3@2307> INCLUDE "internal_commands.ab3"
0003CD44 <internal_commands.ab3@2308> INCLUDE "internal_commands.ab3"
0003CD46 <internal_commands.ab3@2309> INCLUDE "internal_commands.ab3"
0003CD4A <internal_commands.ab3@2310> INCLUDE "internal_commands.ab3"
0003CD4E <internal_commands.ab3@2311> INCLUDE "internal_commands.ab3"
0003CD52 <internal_commands.ab3@2312> INCLUDE "internal_commands.ab3"
0003CD56 <internal_commands.ab3@2316> INCLUDE "internal_commands.ab3"
0003CD5A <internal_commands.ab3@2317> INCLUDE "internal_commands.ab3"
0003CD5E <internal_commands.ab3@2319> INCLUDE "internal_commands.ab3"
0003CD62 <internal_commands.ab3@2320> INCLUDE "internal_commands.ab3"
0003CD66 <internal_commands.ab3@2321> INCLUDE "internal_commands.ab3"
0003CD6A <internal_commands.ab3@2322> INCLUDE "internal_commands.ab3"
0003CD6E <internal_commands.ab3@2323> INCLUDE "internal_commands.ab3"
0003CD72 <internal_commands.ab3@2324> INCLUDE "internal_commands.ab3"
0003CD76 <internal_commands.ab3@2325> INCLUDE "internal_commands.ab3"
0003CD7A <internal_commands.ab3@2326> INCLUDE "internal_commands.ab3"
0003CD7E <internal_commands.ab3@2328> INCLUDE "internal_commands.ab3"
0003CD82 <internal_commands.ab3@2331> INCLUDE "internal_commands.ab3"
0003CD86 <internal_commands.ab3@2332> INCLUDE "internal_commands.ab3"
0003CD8A <internal_commands.ab3@2334> INCLUDE "internal_commands.ab3"
0003CD8E <internal_commands.ab3@2335> INCLUDE "internal_commands.ab3"
0003CD92 <internal_commands.ab3@2336> INCLUDE "internal_commands.ab3"
0003CD96 <internal_commands.ab3@2337> INCLUDE "internal_commands.ab3"
0003CD9A <internal_commands.ab3@2338> INCLUDE "internal_commands.ab3"
0003CD9E <internal_commands.ab3@2339> INCLUDE "internal_commands.ab3"
0003CDA2 <internal_commands.ab3@2340> INCLUDE "internal_commands.ab3"
0003CDA6 <internal_commands.ab3@2341> INCLUDE "internal_commands.ab3"
0003CDAA <internal_commands.ab3@2343> INCLUDE "internal_commands.ab3"
0003CDAE <internal_commands.ab3@2346> INCLUDE "internal_commands.ab3"
0003CDB0 <internal_commands.ab3@2347> INCLUDE "internal_commands.ab3"
0003CDB4 <internal_commands.ab3@2348> INCLUDE "internal_commands.ab3"
0003CDB8 <internal_commands.ab3@2349> INCLUDE "internal_commands.ab3"
0003CDBC <internal_commands.ab3@2350> INCLUDE "internal_commands.ab3"
0003CDC0 <internal_commands.ab3@2351> INCLUDE "internal_commands.ab3"
0003CDC4 <internal_commands.ab3@2352> INCLUDE "internal_commands.ab3"
0003CDC8 <internal_commands.ab3@2353> INCLUDE "internal_commands.ab3"
0003CDCC <internal_commands.ab3@2356> INCLUDE "internal_commands.ab3"
0003CDD0 <internal_commands.ab3@2357> INCLUDE "internal_commands.ab3"
0003CDD4 <internal_commands.ab3@2358> INCLUDE "internal_commands.ab3"
0003CDD6 <internal_commands.ab3@2359> INCLUDE "internal_commands.ab3"
0003CDD8 <internal_commands.ab3@2362> INCLUDE "internal_commands.ab3"
0003CDDA <internal_commands.ab3@2363> INCLUDE "internal_commands.ab3"
0003CDDC <internal_commands.ab3@2364> INCLUDE "internal_commands.ab3"
0003CDDE <internal_commands.ab3@2365> INCLUDE "internal_commands.ab3"
0003CDE2 <internal_commands.ab3@2366> INCLUDE "internal_commands.ab3"
0003CDE6 <internal_commands.ab3@2369> INCLUDE "internal_commands.ab3"
0003CDEA <internal_commands.ab3@2370> INCLUDE "internal_commands.ab3"
0003CDEE <internal_commands.ab3@2371> INCLUDE "internal_commands.ab3"
0003CDF0 <internal_commands.ab3@2372> INCLUDE "internal_commands.ab3"
0003CDF4 <internal_commands.ab3@2373> INCLUDE "internal_commands.ab3"
0003CDF8 <internal_commands.ab3@2376> INCLUDE "internal_commands.ab3"
0003CDFC <internal_commands.ab3@2379> INCLUDE "internal_commands.ab3"
0003CE00 <internal_commands.ab3@2380> INCLUDE "internal_commands.ab3"
0003CE02 <internal_commands.ab3@2381> INCLUDE "internal_commands.ab3"
0003CE04 <internal_commands.ab3@2382> INCLUDE "internal_commands.ab3"
0003CE08 <internal_commands.ab3@2383> INCLUDE "internal_commands.ab3"
0003CE0C <internal_commands.ab3@2386> INCLUDE "internal_commands.ab3"
0003CE10 <internal_commands.ab3@2387> INCLUDE "internal_commands.ab3"
0003CE14 <internal_commands.ab3@2390> INCLUDE "internal_commands.ab3"
0003CE18 <internal_commands.ab3@2393> INCLUDE "internal_commands.ab3"
0003CE1C <internal_commands.ab3@2394> INCLUDE "internal_commands.ab3"
0003CE1E <internal_commands.ab3@2395> INCLUDE "internal_commands.ab3"
0003CE20 <internal_commands.ab3@2396> INCLUDE "internal_commands.ab3"
0003CE24 <internal_commands.ab3@2397> INCLUDE "internal_commands.ab3"
0003CE28 <internal_commands.ab3@2400> INCLUDE "internal_commands.ab3"
0003CE2C <internal_commands.ab3@2401> INCLUDE "internal_commands.ab3"
0003CE2E <internal_commands.ab3@2405> INCLUDE "internal_commands.ab3"
0003CE32 <internal_commands.ab3@2406> INCLUDE "internal_commands.ab3"
0003CE36 <internal_commands.ab3@2407> INCLUDE "internal_commands.ab3"
0003CE38 <internal_commands.ab3@2408> INCLUDE "internal_commands.ab3"
0003CE3C <internal_commands.ab3@2409> INCLUDE "internal_commands.ab3"
0003CE40 <internal_commands.ab3@2410> INCLUDE "internal_commands.ab3"
0003CE42 <internal_commands.ab3@2413> INCLUDE "internal_commands.ab3"
0003CE46 <internal_commands.ab3@2414> INCLUDE "internal_commands.ab3"
0003CE4A <internal_commands.ab3@2415> INCLUDE "internal_commands.ab3"
0003CE4E <internal_commands.ab3@2416> INCLUDE "internal_commands.ab3"
0003CE52 <internal_commands.ab3@2419> INCLUDE "internal_commands.ab3"
0003CE56 <internal_commands.ab3@2420> INCLUDE "internal_commands.ab3"
0003CE58 <internal_commands.ab3@2424> INCLUDE "internal_commands.ab3"
0003CE5C <internal_commands.ab3@2425> INCLUDE "internal_commands.ab3"
0003CE5E <internal_commands.ab3@2426> INCLUDE "internal_commands.ab3"
0003CE60 <internal_commands.ab3@2427> INCLUDE "internal_commands.ab3"
0003CE62 <internal_commands.ab3@2428> INCLUDE "internal_commands.ab3"
0003CE66 <internal_commands.ab3@2429> INCLUDE "internal_commands.ab3"
0003CE6A <internal_commands.ab3@2432> INCLUDE "internal_commands.ab3"
0003CE6E <internal_commands.ab3@2433> INCLUDE "internal_commands.ab3"
0003CE72 <internal_commands.ab3@2434> INCLUDE "internal_commands.ab3"
0003CE76 <internal_commands.ab3@2435> INCLUDE "internal_commands.ab3"
0003CE7A <internal_commands.ab3@2439> INCLUDE "internal_commands.ab3"
0003CE7E <internal_commands.ab3@2440> INCLUDE "internal_commands.ab3"
0003CE82 <internal_commands.ab3@2444> INCLUDE "internal_commands.ab3"
0003CE86 <internal_commands.ab3@2445> INCLUDE "internal_commands.ab3"
0003CE8A <internal_commands.ab3@2449> INCLUDE "internal_commands.ab3"
0003CE8E <internal_commands.ab3@2450> INCLUDE "internal_commands.ab3"
0003CE92 <internal_commands.ab3@2454> INCLUDE "internal_commands.ab3"
0003CE94 <internal_commands.ab3@2456> INCLUDE "internal_commands.ab3"
0003CE98 <internal_commands.ab3@2457> INCLUDE "internal_commands.ab3"
0003CE9C <internal_commands.ab3@2458> INCLUDE "internal_commands.ab3"
0003CE9E <internal_commands.ab3@2459> INCLUDE "internal_commands.ab3"
0003CEA0 <internal_commands.ab3@2460> INCLUDE "internal_commands.ab3"
0003CEA2 <internal_commands.ab3@2461> INCLUDE "internal_commands.ab3"
0003CEA6 <internal_commands.ab3@2462> INCLUDE "internal_commands.ab3"
0003CEAA <internal_commands.ab3@2463> INCLUDE "internal_commands.ab3"
0003CEAC <internal_commands.ab3@2464> INCLUDE "internal_commands.ab3"
0003CEB0 <internal_commands.ab3@2465> INCLUDE "internal_commands.ab3"
0003CEB2 <internal_commands.ab3@2466> INCLUDE "internal_commands.ab3"
0003CEB4 <internal_commands.ab3@2467> INCLUDE "internal_commands.ab3"
0003CEB6 <internal_commands.ab3@2468> INCLUDE "internal_commands.ab3"
0003CEBA <internal_commands.ab3@2469> INCLUDE "internal_commands.ab3"
0003CEBE <internal_commands.ab3@2470> INCLUDE "internal_commands.ab3"
0003CEC0 <internal_commands.ab3@2473> INCLUDE "internal_commands.ab3"
0003CEC2 <internal_commands.ab3@2474> INCLUDE "internal_commands.ab3"
0003CEC6 <internal_commands.ab3@2475> INCLUDE "internal_commands.ab3"
0003CECA <internal_commands.ab3@2476> INCLUDE "internal_commands.ab3"
0003CECE <internal_commands.ab3@2477> INCLUDE "internal_commands.ab3"
0003CED2 <internal_commands.ab3@2478> INCLUDE "internal_commands.ab3"
0003CED4 <internal_commands.ab3@2479> INCLUDE "internal_commands.ab3"
0003CED8 <internal_commands.ab3@2480> INCLUDE "internal_commands.ab3"
0003CEDC <internal_commands.ab3@2481> INCLUDE "internal_commands.ab3"
0003CEE0 <internal_commands.ab3@2482> INCLUDE "internal_commands.ab3"
0003CEE2 <internal_commands.ab3@2483> INCLUDE "internal_commands.ab3"
0003CEE4 <internal_commands.ab3@2484> INCLUDE "internal_commands.ab3"
0003CEE6 <internal_commands.ab3@2485> INCLUDE "internal_commands.ab3"
0003CEE8 <internal_commands.ab3@2488> INCLUDE "internal_commands.ab3"
0003CEEA <internal_commands.ab3@2489> INCLUDE "internal_commands.ab3"
0003CEEC <internal_commands.ab3@2490> INCLUDE "internal_commands.ab3"
0003CEF0 <internal_commands.ab3@2491> INCLUDE "internal_commands.ab3"
0003CEF4 <internal_commands.ab3@2492> INCLUDE "internal_commands.ab3"
0003CEF6 <internal_commands.ab3@2496> INCLUDE "internal_commands.ab3"
0003CEFA <internal_commands.ab3@2497> INCLUDE "internal_commands.ab3"
0003CEFC <internal_commands.ab3@2498> INCLUDE "internal_commands.ab3"
0003CF00 <internal_commands.ab3@2499> INCLUDE "internal_commands.ab3"
0003CF04 <internal_commands.ab3@2500> INCLUDE "internal_commands.ab3"
0003CF06 <internal_commands.ab3@2501> INCLUDE "internal_commands.ab3"
0003CF08 <internal_commands.ab3@2504> INCLUDE "internal_commands.ab3"
0003CF0A <internal_commands.ab3@2508> INCLUDE "internal_commands.ab3"
0003CF0E <internal_commands.ab3@2509> INCLUDE "internal_commands.ab3"
0003CF10 <internal_commands.ab3@2510> INCLUDE "internal_commands.ab3"
0003CF14 <internal_commands.ab3@2511> INCLUDE "internal_commands.ab3"
0003CF18 <internal_commands.ab3@2512> INCLUDE "internal_commands.ab3"
0003CF1C <internal_commands.ab3@2513> INCLUDE "internal_commands.ab3"
0003CF1E <internal_commands.ab3@2516> INCLUDE "internal_commands.ab3"
0003CF22 <internal_commands.ab3@2520> INCLUDE "internal_commands.ab3"
0003CF26 <internal_commands.ab3@2521> INCLUDE "internal_commands.ab3"
0003CF28 <internal_commands.ab3@2522> INCLUDE "internal_commands.ab3"
0003CF2C <internal_commands.ab3@2523> INCLUDE "internal_commands.ab3"
0003CF30 <internal_commands.ab3@2524> INCLUDE "internal_commands.ab3"
0003CF34 <internal_commands.ab3@2527> INCLUDE "internal_commands.ab3"
0003CF38 <internal_commands.ab3@2528> INCLUDE "internal_commands.ab3"
0003CF3C <internal_commands.ab3@2529> INCLUDE "internal_commands.ab3"
0003CF40 <internal_commands.ab3@2530> INCLUDE "internal_commands.ab3"
0003CF44 <internal_commands.ab3@2531> INCLUDE "internal_commands.ab3"
0003CF48 <internal_commands.ab3@2538> INCLUDE "internal_commands.ab3"
0003CF4A <internal_commands.ab3@2539> INCLUDE "internal_commands.ab3"
0003CF4F <internal_commands.ab3@2540> INCLUDE "internal_commands.ab3"
0003CF50 <internal_commands.ab3@2541> INCLUDE "internal_commands.ab3"
0003CF54 <internal_commands.ab3@2545> INCLUDE "internal_commands.ab3"
0003CF56 <internal_commands.ab3@2546> INCLUDE "internal_commands.ab3"
0003CF5D <internal_commands.ab3@2547> INCLUDE "internal_commands.ab3"
0003CF5E <internal_commands.ab3@2548> INCLUDE "internal_commands.ab3"
0003CF62 <internal_commands.ab3@2552> INCLUDE "internal_commands.ab3"
0003CF64 <internal_commands.ab3@2553> INCLUDE "internal_commands.ab3"
0003CF6B <internal_commands.ab3@2554> INCLUDE "internal_commands.ab3"
0003CF6C <internal_commands.ab3@2555> INCLUDE "internal_commands.ab3"
0003CF70 <internal_commands.ab3@2559> INCLUDE "internal_commands.ab3"
0003CF72 <internal_commands.ab3@2560> INCLUDE "internal_commands.ab3"
0003CF7A <internal_commands.ab3@2561> INCLUDE "internal_commands.ab3"
0003CF7B <internal_commands.ab3@2562> INCLUDE "internal_commands.ab3"
0003CF7C <internal_commands.ab3@2563> INCLUDE "internal_commands.ab3"
0003CF80 <internal_commands.ab3@2566> INCLUDE "internal_commands.ab3"
0003CF82 <internal_commands.ab3@2567> INCLUDE "internal_commands.ab3"
0003CF87 <internal_commands.ab3@2568> INCLUDE "internal_commands.ab3"
0003CF9B <internal_commands.ab3@2569> INCLUDE "internal_commands.ab3"
0003CF9C <internal_commands.ab3@2570> INCLUDE "internal_commands.ab3"
0003CFA0 <internal_commands.ab3@2573> INCLUDE "internal_commands.ab3"
0003CFA2 <internal_commands.ab3@2574> INCLUDE "internal_commands.ab3"
0003CFA6 <internal_commands.ab3@2575> INCLUDE "internal_commands.ab3"
0003CFA7 <internal_commands.ab3@2576> INCLUDE "internal_commands.ab3"
0003CFA8 <internal_commands.ab3@2577> INCLUDE "internal_commands.ab3"
0003CFAC <internal_commands.ab3@2580> INCLUDE "internal_commands.ab3"
0003CFAE <internal_commands.ab3@2581> INCLUDE "internal_commands.ab3"
0003CFB1 <internal_commands.ab3@2582> INCLUDE "internal_commands.ab3"
0003CFB2 <internal_commands.ab3@2583> INCLUDE "internal_commands.ab3"
0003CFB6 <internal_commands.ab3@2587> INCLUDE "internal_commands.ab3"
0003CFB8 <internal_commands.ab3@2588> INCLUDE "internal_commands.ab3"
0003CFBF <internal_commands.ab3@2589> INCLUDE "internal_commands.ab3"
0003CFC0 <internal_commands.ab3@2590> INCLUDE "internal_commands.ab3"
0003CFC4 <internal_commands.ab3@2594> INCLUDE "internal_commands.ab3"
0003CFC6 <internal_commands.ab3@2595> INCLUDE "internal_commands.ab3"
0003CFCC <internal_commands.ab3@2596> INCLUDE "internal_commands.ab3"
0003CFD9 <internal_commands.ab3@2597> INCLUDE "internal_commands.ab3"
0003CFDA <internal_commands.ab3@2598> INCLUDE "internal_commands.ab3"
0003CFDE <internal_commands.ab3@2601> INCLUDE "internal_commands.ab3"
0003CFE0 <internal_commands.ab3@2602> INCLUDE "internal_commands.ab3"
0003CFE7 <internal_commands.ab3@2603> INCLUDE "internal_commands.ab3"
0003CFFF <internal_commands.ab3@2604> INCLUDE "internal_commands.ab3"
0003D000 <internal_commands.ab3@2605> INCLUDE "internal_commands.ab3"
0003D004 <internal_commands.ab3@2608> INCLUDE "internal_commands.ab3"
0003D006 <internal_commands.ab3@2609> INCLUDE "internal_commands.ab3"
0003D00A <internal_commands.ab3@2610> INCLUDE "internal_commands.ab3"
0003D02D <internal_commands.ab3@2611> INCLUDE "internal_commands.ab3"
0003D02E <internal_commands.ab3@2612> INCLUDE "internal_commands.ab3"
0003D032 <internal_commands.ab3@2615> INCLUDE "internal_commands.ab3"
0003D034 <internal_commands.ab3@2616> INCLUDE "internal_commands.ab3"
0003D03B <internal_commands.ab3@2617> INCLUDE "internal_commands.ab3"
0003D046 <internal_commands.ab3@2618> INCLUDE "internal_commands.ab3"
0003D04A <internal_commands.ab3@2622> INCLUDE "internal_commands.ab3"
0003D04C <internal_commands.ab3@2623> INCLUDE "internal_commands.ab3"
0003D052 <internal_commands.ab3@2624> INCLUDE "internal_commands.ab3"
0003D053 <internal_commands.ab3@2625> INCLUDE "internal_commands.ab3"
0003D054 <internal_commands.ab3@2626> INCLUDE "internal_commands.ab3"
0003D058 <internal_commands.ab3@2629> INCLUDE "internal_commands.ab3"
0003D05A <internal_commands.ab3@2630> INCLUDE "internal_commands.ab3"
0003D05F <internal_commands.ab3@2631> INCLUDE "internal_commands.ab3"
0003D060 <internal_commands.ab3@2632> INCLUDE "internal_commands.ab3"
0003D064 <internal_commands.ab3@2636> INCLUDE "internal_commands.ab3"
0003D066 <internal_commands.ab3@2637> INCLUDE "internal_commands.ab3"
0003D06D <internal_commands.ab3@2638> INCLUDE "internal_commands.ab3"
0003D07F <internal_commands.ab3@2639> INCLUDE "internal_commands.ab3"
0003D080 <internal_commands.ab3@2640> INCLUDE "internal_commands.ab3"
0003D084 <internal_commands.ab3@2643> INCLUDE "internal_commands.ab3"
0003D086 <internal_commands.ab3@2644> INCLUDE "internal_commands.ab3"
0003D090 <internal_commands.ab3@2645> INCLUDE "internal_commands.ab3"
0003D091 <internal_commands.ab3@2646> INCLUDE "internal_commands.ab3"
0003D092 <internal_commands.ab3@2647> INCLUDE "internal_commands.ab3"
0003D096 <internal_commands.ab3@2650> INCLUDE "internal_commands.ab3"
0003D098 <internal_commands.ab3@2651> INCLUDE "internal_commands.ab3"
0003D0A0 <internal_commands.ab3@2652> INCLUDE "internal_commands.ab3"
0003D0AD <internal_commands.ab3@2653> INCLUDE "internal_commands.ab3"
0003D0AE <internal_commands.ab3@2654> INCLUDE "internal_commands.ab3"
0003D0B2 <internal_commands.ab3@2657> INCLUDE "internal_commands.ab3"
0003D0B4 <internal_commands.ab3@2658> INCLUDE "internal_commands.ab3"
0003D0B7 <internal_commands.ab3@2659> INCLUDE "internal_commands.ab3"
0003D0F2 <internal_commands.ab3@2660> INCLUDE "internal_commands.ab3"
0003D0F6 <internal_commands.ab3@2664> INCLUDE "internal_commands.ab3"
0003D0F8 <internal_commands.ab3@2665> INCLUDE "internal_commands.ab3"
0003D0FC <internal_commands.ab3@2666> INCLUDE "internal_commands.ab3"
0003D0FD <internal_commands.ab3@2667> INCLUDE "internal_commands.ab3"
0003D0FE <internal_commands.ab3@2668> INCLUDE "internal_commands.ab3"
0003D102 <internal_commands.ab3@2671> INCLUDE "internal_commands.ab3"
0003D104 <internal_commands.ab3@2672> INCLUDE "internal_commands.ab3"
0003D10C <internal_commands.ab3@2673> INCLUDE "internal_commands.ab3"
0003D10D <internal_commands.ab3@2674> INCLUDE "internal_commands.ab3"
0003D10E <internal_commands.ab3@2675> INCLUDE "internal_commands.ab3"
0003D112 <internal_commands.ab3@2678> INCLUDE "internal_commands.ab3"
0003D114 <internal_commands.ab3@2679> INCLUDE "internal_commands.ab3"
0003D11C <internal_commands.ab3@2680> INCLUDE "internal_commands.ab3"
0003D12C <internal_commands.ab3@2681> INCLUDE "internal_commands.ab3"
0003D130 <internal_commands.ab3@2685> INCLUDE "internal_commands.ab3"
0003D132 <internal_commands.ab3@2686> INCLUDE "internal_commands.ab3"
0003D13B <internal_commands.ab3@2687> INCLUDE "internal_commands.ab3"
0003D143 <internal_commands.ab3@2688> INCLUDE "internal_commands.ab3"
0003D144 <internal_commands.ab3@2689> INCLUDE "internal_commands.ab3"
0003D148 <internal_commands.ab3@2692> INCLUDE "internal_commands.ab3"
0003D14A <internal_commands.ab3@2693> INCLUDE "internal_commands.ab3"
0003D152 <internal_commands.ab3@2694> INCLUDE "internal_commands.ab3"
0003D15B <internal_commands.ab3@2695> INCLUDE "internal_commands.ab3"
0003D15C <internal_commands.ab3@2696> INCLUDE "internal_commands.ab3"
0003D160 <internal_commands.ab3@2699> INCLUDE "internal_commands.ab3"
0003D162 <internal_commands.ab3@2700> INCLUDE "internal_commands.ab3"
0003D16A <internal_commands.ab3@2701> INCLUDE "internal_commands.ab3"
0003D16B <internal_commands.ab3@2702> INCLUDE "internal_commands.ab3"
0003D16C <internal_commands.ab3@2703> INCLUDE "internal_commands.ab3"
0003D170 <internal_commands.ab3@2706> INCLUDE "internal_commands.ab3"
0003D172 <internal_commands.ab3@2707> INCLUDE "internal_commands.ab3"
0003D178 <internal_commands.ab3@2708> INCLUDE "internal_commands.ab3"
0003D179 <internal_commands.ab3@2709> INCLUDE "internal_commands.ab3"
0003D17A <internal_commands.ab3@2710> INCLUDE "internal_commands.ab3"
0003D17E <internal_commands.ab3@2713> INCLUDE "internal_commands.ab3"
0003D180 <internal_commands.ab3@2714> INCLUDE "internal_commands.ab3"
0003D187 <internal_commands.ab3@2715> INCLUDE "internal_commands.ab3"
0003D188 <internal_commands.ab3@2716> INCLUDE "internal_commands.ab3"
0003D18C <internal_commands.ab3@2720> INCLUDE "internal_commands.ab3"
0003D18E <internal_commands.ab3@2721> INCLUDE "internal_commands.ab3"
0003D195 <internal_commands.ab3@2722> INCLUDE "internal_commands.ab3"
0003D196 <internal_commands.ab3@2723> INCLUDE "internal_commands.ab3"
0003D19A <internal_commands.ab3@2727> INCLUDE "internal_commands.ab3"
0003D19C <internal_commands.ab3@2728> INCLUDE "internal_commands.ab3"
0003D1A3 <internal_commands.ab3@2729> INCLUDE "internal_commands.ab3"
0003D1A4 <internal_commands.ab3@2730> INCLUDE "internal_commands.ab3"
0003D1A8 <internal_commands.ab3@2734> INCLUDE "internal_commands.ab3"
0003D1AA <internal_commands.ab3@2735> INCLUDE "internal_commands.ab3"
0003D1B1 <internal_commands.ab3@2736> INCLUDE "internal_commands.ab3"
0003D1B2 <internal_commands.ab3@2737> INCLUDE "internal_commands.ab3"
0003D1B6 <internal_commands.ab3@2741> INCLUDE "internal_commands.ab3"
0003D1B8 <internal_commands.ab3@2742> INCLUDE "internal_commands.ab3"
0003D1BD <internal_commands.ab3@2743> INCLUDE "internal_commands.ab3"
0003D1D3 <internal_commands.ab3@2744> INCLUDE "internal_commands.ab3"
0003D1D4 <internal_commands.ab3@2745> INCLUDE "internal_commands.ab3"
0003D1D8 <internal_commands.ab3@2748> INCLUDE "internal_commands.ab3"
0003D1DA <internal_commands.ab3@2749> INCLUDE "internal_commands.ab3"
0003D1E4 <internal_commands.ab3@2750> INCLUDE "internal_commands.ab3"
0003D1E5 <internal_commands.ab3@2751> INCLUDE "internal_commands.ab3"
0003D1E6 <internal_commands.ab3@2752> INCLUDE "internal_commands.ab3"
0003D1EA <internal_commands.ab3@2755> INCLUDE "internal_commands.ab3"
0003D1EC <internal_commands.ab3@2756> INCLUDE "internal_commands.ab3"
0003D1F7 <internal_commands.ab3@2757> INCLUDE "internal_commands.ab3"
0003D1F8 <internal_commands.ab3@2758> INCLUDE "internal_commands.ab3"
0003D1FC <internal_commands.ab3@2762> INCLUDE "internal_commands.ab3"
0003D1FE <internal_commands.ab3@2763> INCLUDE "internal_commands.ab3"
0003D20A <internal_commands.ab3@2764> INCLUDE "internal_commands.ab3"
0003D237 <internal_commands.ab3@2765> INCLUDE "internal_commands.ab3"
0003D238 <internal_commands.ab3@2766> INCLUDE "internal_commands.ab3"
0003D23C <internal_commands.ab3@2769> INCLUDE "internal_commands.ab3"
0003D23E <internal_commands.ab3@2770> INCLUDE "internal_commands.ab3"
0003D246 <internal_commands.ab3@2771> INCLUDE "internal_commands.ab3"
0003D27D <internal_commands.ab3@2772> INCLUDE "internal_commands.ab3"
0003D27E <internal_commands.ab3@2773> INCLUDE "internal_commands.ab3"
0003D282 <internal_commands.ab3@2776> INCLUDE "internal_commands.ab3"
0003D284 <internal_commands.ab3@2777> INCLUDE "internal_commands.ab3"
0003D28C <internal_commands.ab3@2778> INCLUDE "internal_commands.ab3"
0003D2AB <internal_commands.ab3@2779> INCLUDE "internal_commands.ab3"
0003D2AC <internal_commands.ab3@2780> INCLUDE "internal_commands.ab3"
0003D2B0 <internal_commands.ab3@2783> INCLUDE "internal_commands.ab3"
0003D2B2 <internal_commands.ab3@2784> INCLUDE "internal_commands.ab3"
0003D2B9 <internal_commands.ab3@2785> INCLUDE "internal_commands.ab3"
0003D2EF <internal_commands.ab3@2786> INCLUDE "internal_commands.ab3"
0003D2F0 <internal_commands.ab3@2787> INCLUDE "internal_commands.ab3"
0003D2F4 <internal_commands.ab3@2790> INCLUDE "internal_commands.ab3"
0003D2F6 <internal_commands.ab3@2791> INCLUDE "internal_commands.ab3"
0003D2FF <internal_commands.ab3@2792> INCLUDE "internal_commands.ab3"
0003D334 <internal_commands.ab3@2793> INCLUDE "internal_commands.ab3"
0003D338 <internal_commands.ab3@2797> INCLUDE "internal_commands.ab3"
0003D33A <internal_commands.ab3@2798> INCLUDE "internal_commands.ab3"
0003D34A <internal_commands.ab3@2799> INCLUDE "internal_commands.ab3"
0003D381 <internal_commands.ab3@2800> INCLUDE "internal_commands.ab3"
0003D382 <internal_commands.ab3@2801> INCLUDE "internal_commands.ab3"
0003D382 <AmiBlitz3.ab3@30114> INCLUDE "internal_commands.ab3"
0003D386 <AmiBlitz3.ab3@30119>            Dc.l cif_lt                                     ;ciflt
0003D38A <AmiBlitz3.ab3@30120>            Dc.l cif_eq                                     ;cifeq
0003D38E <AmiBlitz3.ab3@30121>            Dc.l cif_gt                                     ;cifgt
0003D392 <AmiBlitz3.ab3@30122>            Ds.l 1                                          ;0
0003D396 <AmiBlitz3.ab3@30123>            Dc.l cif_le                                     ;cifle
0003D39A <AmiBlitz3.ab3@30124>            Dc.l cif_ne                                     ;cifne
0003D39E <AmiBlitz3.ab3@30125>            Dc.l cif_le                                     ;cifge
0003D3A2 <AmiBlitz3.ab3@30126>            Ds.l 1                                          ;0
0003D3A6 <AmiBlitz3.ab3@30127>            Dc.l cif_ge                                     ;cifge
0003D3AA <AmiBlitz3.ab3@30128>            Dc.l cif_ne                                     ;cifne
0003D3AE <AmiBlitz3.ab3@30129>            Dc.l cif_ge                                     ;cifge
0003D3B2 <AmiBlitz3.ab3@30130>            Ds.l 1                                          ;0
0003D3B6 <AmiBlitz3.ab3@30133>            Dc.l do_newtype                                 ;donewtype
0003D3BA <AmiBlitz3.ab3@30134>            Dc.l do_end                                     ;doend
0003D3BE <AmiBlitz3.ab3@30135>            Dc.l do_let                                     ;dolet
0003D3C2 <AmiBlitz3.ab3@30136>            Dc.l do_dim                                     ;dodim
0003D3C6 <AmiBlitz3.ab3@30137>            Dc.l do_goto                                    ;dogoto
0003D3CA <AmiBlitz3.ab3@30138>            Dc.l do_gosub                                   ;dogosub
0003D3CE <AmiBlitz3.ab3@30139>            Dc.l do_return                                  ;doreturn
0003D3D2 <AmiBlitz3.ab3@30140>            Dc.l do_statement                               ;dostate
0003D3D6 <AmiBlitz3.ab3@30141>            Dc.l do_function                                ;dofunc
0003D3DA <AmiBlitz3.ab3@30142>            Dc.l do_mousewait                               ;domwait
0003D3DE <AmiBlitz3.ab3@30143>            Dc.l do_if                                      ;doif
0003D3E2 <AmiBlitz3.ab3@30144>            Dc.l do_while                                   ;dowhile
0003D3E6 <AmiBlitz3.ab3@30145>            Dc.l do_Macro                                   ;domacro
0003D3EA <AmiBlitz3.ab3@30146>            Dc.l do_select                                  ;doselect
0003D3EE <AmiBlitz3.ab3@30147>            Dc.l do_case                                    ;docase
0003D3F2 <AmiBlitz3.ab3@30148>            Dc.l do_default                                 ;dodefault
0003D3F6 <AmiBlitz3.ab3@30149>            Dc.l do_AsmExit                                 ;doasmexit
0003D3FA <AmiBlitz3.ab3@30150>            Dc.l do_xinclude                                ;doxinclude
0003D3FE <AmiBlitz3.ab3@30151>            Dc.l do_INCLUDE                                 ;doinclude
0003D402 <AmiBlitz3.ab3@30152>            Dc.l do_syntax                                  ;syntaxerr
0003D406 <AmiBlitz3.ab3@30153>            Dc.l do_shared                                  ;doshared
0003D40A <AmiBlitz3.ab3@30154>            Dc.l do_for                                     ;dofor
0003D40E <AmiBlitz3.ab3@30155>            Dc.l do_next                                    ;donext
0003D412 <AmiBlitz3.ab3@30156>            Dc.l syntaxerr                                  ; To
0003D416 <AmiBlitz3.ab3@30157>            Dc.l syntaxerr                                  ; Step
0003D41A <AmiBlitz3.ab3@30158>            Dc.l do_data                                    ;dodata
0003D41E <AmiBlitz3.ab3@30159>            Dc.l do_read                                    ;doread
0003D422 <AmiBlitz3.ab3@30163>            Dc.l syntaxerr                                  ; CNIF
0003D426 <AmiBlitz3.ab3@30164>            Dc.l syntaxerr                                  ; CSIF
0003D42A <AmiBlitz3.ab3@30165>            Dc.l syntaxerr                                  ; CELSE
0003D42E <AmiBlitz3.ab3@30166>            Dc.l syntaxerr                                  ; CEND
0003D432 <AmiBlitz3.ab3@30167>            Dc.l do_cerr                                    ;docerr
0003D436 <AmiBlitz3.ab3@30168>            Dc.l do_then                                    ;dothen
0003D43A <AmiBlitz3.ab3@30169>            Dc.l do_else                                    ;doelse
0003D43E <AmiBlitz3.ab3@30170>            Dc.l do_even4                                   ;doeven4
0003D442 <AmiBlitz3.ab3@30171>            Dc.l do_even8                                   ;doeven8
0003D446 <AmiBlitz3.ab3@30173>            Dc.l do_dc                                      ;dodc
0003D44A <AmiBlitz3.ab3@30174>            Dc.l do_ds                                      ;dods
0003D44E <AmiBlitz3.ab3@30175>            Dc.l do_even                                    ;doeven
0003D452 <AmiBlitz3.ab3@30176>            Dc.l do_dcb                                     ;dodcb
0003D456 <AmiBlitz3.ab3@30177>            Dc.l do_setreg                                  ;dosetreg
0003D45A <AmiBlitz3.ab3@30178>            Dc.l do_IncBin                                  ;doincbin
0003D45E <AmiBlitz3.ab3@30179>            Dc.l do_free                                    ;dofree
0003D462 <AmiBlitz3.ab3@30180>            Dc.l do_use                                     ;douse
0003D466 <AmiBlitz3.ab3@30181>            Dc.l do_Stop                                    ;dostop
0003D46A <AmiBlitz3.ab3@30182>            Dc.l do_Cont                                    ;docont
0003D46E <AmiBlitz3.ab3@30183>            Dc.l syntaxerr                                  ;syntaxeer
0003D472 <AmiBlitz3.ab3@30184>            Dc.l do_SetInt                                  ;dosetint
0003D476 <AmiBlitz3.ab3@30185>            Dc.l do_ClrInt                                  ;doclrint
0003D47A <AmiBlitz3.ab3@30186>            Dc.l do_MaxLen                                  ;domaxlen
0003D47E <AmiBlitz3.ab3@30187>            Dc.l do_DEFTYPE                                 ;dodeftype
0003D482 <AmiBlitz3.ab3@30188>            Dc.l do_BLITZ                                   ;doblitz
0003D486 <AmiBlitz3.ab3@30189>            Dc.l do_AMIGA                                   ;doamiga
0003D48A <AmiBlitz3.ab3@30190>            Dc.l do_QAMIGA                                  ;doqamiga
0003D48E <AmiBlitz3.ab3@30191>            Dc.l do_VWait                                   ;dovwait
0003D492 <AmiBlitz3.ab3@30192>            Dc.l do_LibJsr                                  ;dolibjsr
0003D496 <AmiBlitz3.ab3@30193>            Dc.l do_TokeJsr                                 ;dotokejsr
0003D49A <AmiBlitz3.ab3@30194>            Dc.l do_BLibJsr                                 ;doblibjsr
0003D49E <AmiBlitz3.ab3@30195>            Dc.l _extb                                      ;syntaxerr
0003D4A2 <AmiBlitz3.ab3@30199>            Dc.l syntaxerr                                  ;syntaxerr      ;flash2 ; for list
0003D4A6 <AmiBlitz3.ab3@30200>            Dc.l do_SetErr                                  ;doseterr
0003D4AA <AmiBlitz3.ab3@30201>            Dc.l do_ClrErr                                  ;doclrerr
0003D4AE <AmiBlitz3.ab3@30202>            Dc.l syntaxerr                                  ;syntaxerr
0003D4B2 <AmiBlitz3.ab3@30203>            Dc.l do_ErrFail                                 ;doerrfail
0003D4B6 <AmiBlitz3.ab3@30204>            Dc.l syntaxerr
0003D4BA <AmiBlitz3.ab3@30205>            Dc.l syntaxerr                                  ;mod
0003D4BE <AmiBlitz3.ab3@30206>            Dc.l syntaxerr                                  ;Pi
0003D4C2 <AmiBlitz3.ab3@30207>            Dc.l do_Repeat                                  ;dorepeat
0003D4C6 <AmiBlitz3.ab3@30208>            Dc.l do_Until                                   ;dountil
0003D4CA <AmiBlitz3.ab3@30209>            Dc.l do_PutReg                                  ;doputreg
0003D4CE <AmiBlitz3.ab3@30210>            Dc.l do_Pop                                     ;dopop
0003D4D2 <AmiBlitz3.ab3@30211>            Dc.l do_INCDIR                                  ;doincdir
0003D4D6 <AmiBlitz3.ab3@30212>            Dc.l mydo_Endif2                                ;mydoendif2
0003D4DA <AmiBlitz3.ab3@30213>            Dc.l do_Wend                                    ;dowend
0003D4DE <AmiBlitz3.ab3@30214>            Dc.l do_SysJsr                                  ;dosysjsr
0003D4E2 <AmiBlitz3.ab3@30215>            Dc.l do_WBStartup                               ;dowbstartup
0003D4E6 <AmiBlitz3.ab3@30216>            Dc.l syntaxerr
0003D4EA <AmiBlitz3.ab3@30217>            Dc.l do_Ongo                                    ;doongo
0003D4EE <AmiBlitz3.ab3@30218>            Dc.l syntaxerr
0003D4F2 <AmiBlitz3.ab3@30219>            Dc.l do_Forever                                 ;doforever
0003D4F6 <AmiBlitz3.ab3@30220>            Dc.l do_Restore                                 ;dorestore
0003D4FA <AmiBlitz3.ab3@30221>            Dc.l do_Exchange                                ;doexchange
0003D4FE <AmiBlitz3.ab3@30222>            Dc.l do_USEPATH                                 ;dousepath
0003D502 <AmiBlitz3.ab3@30223>            Dc.l do_CloseEd                                 ;doclosed
0003D506 <AmiBlitz3.ab3@30224>            Dc.l do_NoCli                                   ;donocli
0003D50A <AmiBlitz3.ab3@30225>            Dc.l syntaxerr                                  ;syntaxerr
0003D50E <AmiBlitz3.ab3@30226>            Dc.l syntaxerr                                  ;syntaxerr
0003D512 <AmiBlitz3.ab3@30227>            Dc.l syntaxerr                                  ;syntaxerr
0003D516 <AmiBlitz3.ab3@30228>            Dc.l syntaxerr                                  ;syntaxerr
0003D51A <AmiBlitz3.ab3@30229>            Dc.l syntaxerr                                  ;syntaxerr
0003D51E <AmiBlitz3.ab3@30230>            Dc.l do_runerrson                               ;dorunerrson
0003D522 <AmiBlitz3.ab3@30231>            Dc.l do_runerrsoff                              ;dorunerrsoff
0003D526 <AmiBlitz3.ab3@30232>            Dc.l do_uselastpath
0003D52A <AmiBlitz3.ab3@30233>            Dc.l do_regload
0003D52E <AmiBlitz3.ab3@30234>            Dc.l do_regsave
0003D532 <AmiBlitz3.ab3@30235>            Dc.l do_Object
0003D536 <AmiBlitz3.ab3@30236>            Dc.l do_usepath2
0003D53A <AmiBlitz3.ab3@30237>            Dc.l do_LastRunErrsMode
0003D53E <AmiBlitz3.ab3@30260> menu_items:Dc.l menu_compile_run                                ;menuadds oreg source
0003D542 <AmiBlitz3.ab3@30261>            Dc.l menu_run
0003D546 <AmiBlitz3.ab3@30262>            Dc.l menu_createexecutable
0003D54A <AmiBlitz3.ab3@30263>            Dc.l menu_dummyfunc                                  ;was menu_compileroptions
0003D54E <AmiBlitz3.ab3@30264>            Dc.l menu_createresidentfile
0003D552 <AmiBlitz3.ab3@30265> 
0003D556 <AmiBlitz3.ab3@30266> 
0003D55A <AmiBlitz3.ab3@30267>            Dc.l menu_dummyfunc                                  ;was menu_calculator
0003D55E <AmiBlitz3.ab3@30268>            Dc.l menu_reloadlibs
0003D562 <AmiBlitz3.ab3@30269>            Dc.l menu_loaddebugmodule
0003D566 <AmiBlitz3.ab3@30270>            Dc.l menu_dummyfunc
0003D56A <AmiBlitz3.ab3@30271>            Dc.l menu_newcreate
0003D56E <AmiBlitz3.ab3@30272>            Dc.l menu_dummyfunc
0003D572 <AmiBlitz3.ab3@30273>            Dc.l menu_toggledebug
0003D576 <AmiBlitz3.ab3@30274>            Dc.l menu_dummyfunc
0003D57A <AmiBlitz3.ab3@30275>            Dc.l menu_dummyfunc
0003D57C <AmiBlitz3.ab3@30276> Even4
0003D5A6 <AmiBlitz3.ab3@30280>   !basic
0003D608 <AmiBlitz3.ab3@30281>   error{!TRANS{"Invalid AmiBlitz3 menu item called!"} }
0003D626 <AmiBlitz3.ab3@30282>   !asm
0003D628 <AmiBlitz3.ab3@30283> RTS
0003D629 <AmiBlitz3.ab3@30289> set_autorun:               Dc.b $00
0003D62E <AmiBlitz3.ab3@30290> autorun:                   Dc.b $80,$01,$01,$00,$01
0003D62F <AmiBlitz3.ab3@30292> set_interruptcheck:        Dc.b $00
0003D634 <AmiBlitz3.ab3@30293> interruptcheck             Dc.b $80,$01,$01,$00,$01
0003D635 <AmiBlitz3.ab3@30295> set_assemblercheck:        Ds.b 1
0003D63A <AmiBlitz3.ab3@30296> assemblercheck:            Dc.b $00,$01,$01,$00,$01
0003D63B <AmiBlitz3.ab3@30298> set_overflowcheck:         Ds.b 1
0003D640 <AmiBlitz3.ab3@30299> overflowcheck:             Dc.b $00,$01,$01,$00,$01
0003D646 <AmiBlitz3.ab3@30301> default_obsolete:          Dc.b $00,$80,$01,$01,$00,$01
0003D64C <AmiBlitz3.ab3@30302> default_interruptcheck:    Dc.b $00,$80,$01,$01,$00,$01
0003D652 <AmiBlitz3.ab3@30303> default_overflowcheck:     Dc.b $00,$80,$01,$01,$00,$01
0003D654 <AmiBlitz3.ab3@30304> Even4
0003D660 <AmiBlitz3.ab3@30307> tsthead:                   Dc.l $000003F3,$00000000,$00000001
0003D668 <AmiBlitz3.ab3@30308>                            Dc.l $00000000,$00000000
0003D670 <AmiBlitz3.ab3@30309> tstsize1:                  Dc.l $00000100,$000003E9
0003D674 <AmiBlitz3.ab3@30310> tstsize2:                  Dc.l $00000100
0003D678 <AmiBlitz3.ab3@30311> tstend:                    Dc.l $000003EC
0003D680 <AmiBlitz3.ab3@30312> tstsize3:                  Ds.l 2
0003D684 <AmiBlitz3.ab3@30313> tstdone:                   Dc.l $000003F2
0003D688 <AmiBlitz3.ab3@30316> edstruct:                  Dc.l tokens                     ;data for ted
0003D68C <AmiBlitz3.ab3@30320>                            Dc.l 0
0003D690 <AmiBlitz3.ab3@30322>                            Dc.l read_xtrafile              ;load .xtra routine
0003D694 <AmiBlitz3.ab3@30323>                            Dc.l write_xtrafile             ;save .xtra routine
0003D698 <AmiBlitz3.ab3@30324>                            Dc.l call_menuentry             ;Menu Routine
0003D69C <AmiBlitz3.ab3@30325>                            Ds.l 1                          ;cleanup (?)
0003D6A0 <AmiBlitz3.ab3@30326>                            Dc.b ":",34,".;"
0003D79C <AmiBlitz3.ab3@30329> 
0003D87C <AmiBlitz3.ab3@30330>                            Ds.l 56
0003D87E <AmiBlitz3.ab3@30335> lslimm:                    Dc.b $E1,$48                                             ;LSL.W   #8,D0
0003D882 <AmiBlitz3.ab3@30338> use:                       Dc.b $26,$6D,$00,$00                                     ;MOVEA.L $0000(A5),A3
0003D884 <AmiBlitz3.ab3@30339>                            Dc.b $D6,$C0                                             ;ADDA.W  D0,A3
0003D888 <AmiBlitz3.ab3@30340>                            Dc.b $2B,$4B,$00,$00                                     ;MOVE.L  A3,$0000(A5)
0003D88E <AmiBlitz3.ab3@30344> beginarr:                  Dc.b $20,$3C,$00,$00,$00,$00                             ;MOVE.L  #$00000000,D0
0003D890 <AmiBlitz3.ab3@30348>                            Dc.b $C0,$C1                                             ;MULU.W  D1,D0
0003D894 <AmiBlitz3.ab3@30351> putarr:                    Dc.b $2B,$40 :                            Dc.b $00,$00   ;MOVE.L  D0,$0000(A5)
0003D898 <AmiBlitz3.ab3@30354> doarr:                     Dc.b $34,$3C,$00,$00                                     ;MOVE.W  #$0000,D2
0003D89C <AmiBlitz3.ab3@30355>                            Dc.b $36,$3C,$00,$00                                     ;MOVE.W  #$0000,D3
0003D89E <AmiBlitz3.ab3@30361>                            Dc.b $4A,$40                                             ;TST.W   D0
0003D8A0 <AmiBlitz3.ab3@30365>                            Dc.b $4A,$80                                             ;TST.L   D0
0003D8A2 <AmiBlitz3.ab3@30368> nops8:                     Dc.b $4E,$71                                             ;NOP
0003D8A4 <AmiBlitz3.ab3@30369>                            Dc.b $4E,$71                                             ;NOP
0003D8A6 <AmiBlitz3.ab3@30370>                            Dc.b $4E,$71                                             ;NOP
0003D8A8 <AmiBlitz3.ab3@30371>                            Dc.b $4E,$71                                             ;NOP
0003D8AA <AmiBlitz3.ab3@30372> nops4:                     Dc.b $4E,$71                                             ;NOP
0003D8AC <AmiBlitz3.ab3@30374>                            Dc.b $4E,$71                                             ;NOP
0003D8AE <AmiBlitz3.ab3@30375>                            Dc.b $4E,$71                                             ;NOP
0003D8B0 <AmiBlitz3.ab3@30376>                            Dc.b $4E,$71                                             ;NOP
0003D8B4 <AmiBlitz3.ab3@30380> dataget:                   Dc.b $26,$6D :                            Dc.b $00,$00   ;MOVEA.L $0000(A5),A3
0003D8B8 <AmiBlitz3.ab3@30383> dataput:                   Dc.b $2B,$4B :                            Dc.b $00,$00   ;MOVE.L  A3,$0000(A5)
0003D8BA <AmiBlitz3.ab3@30386> stlenget:                  Dc.b $2F,$1B                                             ;MOVE.L  (A3)+,-(A7)
0003D8BC <AmiBlitz3.ab3@30389> stalign:                   Dc.b $52,$4B                                             ;ADDQ.W  #1,A3
0003D8BE <AmiBlitz3.ab3@30390>                            Dc.b $C1,$8B                                             ;EXG D0,A3
0003D8C2 <AmiBlitz3.ab3@30391>                            Dc.b $08,$80,$00,$00                                     ;BCLR    #0,D0
0003D8C4 <AmiBlitz3.ab3@30392>                            Dc.b $C1,$8B                                             ;EXG D0,A3
0003D8C6 <AmiBlitz3.ab3@30398> dataletb:                  Dc.b $52,$4B                                             ;ADDQ.W  #1,A3
0003D8CA <AmiBlitz3.ab3@30399>                            Dc.b $1B,$5B,$00,$00                                     ;MOVE.B  (A3)+,$0000(A5)
0003D8CC <AmiBlitz3.ab3@30404> dataletbl:                 Dc.b $52,$4B                                             ;ADDQ.W  #1,A3
0003D8D0 <AmiBlitz3.ab3@30405>                            Dc.b $19,$5B,$00,$00                                     ;MOVE.B  (A3)+,$0000(A4)
0003D8D2 <AmiBlitz3.ab3@30409> dataletb2:                 Dc.b $52,$4B                                             ;ADDQ.W  #1,A3
0003D8D4 <AmiBlitz3.ab3@30410>                            Dc.b $14,$9B                                             ;MOVE.B  (A3)+,(A2)
0003D8D8 <AmiBlitz3.ab3@30416> dataletw:                  Dc.b $3B,$5B,$00,$00                                     ;MOVE.W  (A3)+,$0000(A5)
0003D8DA <AmiBlitz3.ab3@30417>                            Dc.b $34,$9B                                             ;MOVE.W  (A3)+,(A2)
0003D8DE <AmiBlitz3.ab3@30418>                            Dc.b $39,$5B,$00,$00                                     ;MOVE.W  (A3)+,$0000(A4)
0003D8E2 <AmiBlitz3.ab3@30422> dataletl:                  Dc.b $2B,$5B,$00,$00                                     ;MOVE.L  (A3)+,$0000(A5)
0003D8E4 <AmiBlitz3.ab3@30423>                            Dc.b $24,$9B                                             ;MOVE.L  (A3)+,(A2)
0003D8E8 <AmiBlitz3.ab3@30424>                            Dc.b $29,$5B,$00,$00                                     ;MOVE.L  (A3)+,$0000(A4)
0003D8EA <AmiBlitz3.ab3@30427> nextfixw:                  Dc.b $50,$4F                                             ;ADDQ.W  #8,A7
0003D8EE <AmiBlitz3.ab3@30430> nextfixw2:                 Dc.b $4F,$EF,$00,$0A                                     ;LEA $000A(A7),A7
0003D8F2 <AmiBlitz3.ab3@30433> nextfixl:                  Dc.b $4F,$EF,$00,$0C                                     ;LEA $000C(A7),A7
0003D8F6 <AmiBlitz3.ab3@30436> nextfixl2:                 Dc.b $4F,$EF,$00,$0E                                     ;LEA $000E(A7),A7
0003D8FA <AmiBlitz3.ab3@30440>                            Dc.b $24,$6F,$00,$04                                     ;MOVEA.L $0004(A7),A2
0003D8FC <AmiBlitz3.ab3@30441>                            Dc.b $30,$17                                             ;MOVE.W  (A7),D0
0003D8FE <AmiBlitz3.ab3@30442>                            Dc.b $D1,$12                                             ;ADD.B   D0,(A2)
0003D902 <AmiBlitz3.ab3@30447>                            Dc.b $24,$6F,$00,$04                                     ;MOVEA.L $0004(A7),A2
0003D904 <AmiBlitz3.ab3@30448>                            Dc.b $30,$17                                             ;MOVE.W  (A7),D0
0003D906 <AmiBlitz3.ab3@30449>                            Dc.b $D1,$52                                             ;ADD.W   D0,(A2)
0003D90A <AmiBlitz3.ab3@30454>                            Dc.b $24,$6F,$00,$08                                     ;MOVEA.L $0008(A7),A2
0003D90C <AmiBlitz3.ab3@30455>                            Dc.b $20,$17                                             ;MOVE.L  (A7),D0
0003D90E <AmiBlitz3.ab3@30456>                            Dc.b $D1,$92                                             ;ADD.L   D0,(A2)
0003D912 <AmiBlitz3.ab3@30461>                            Dc.b $24,$6F,$00,$08                                     ;MOVEA.L $0008(A7),A2
0003D914 <AmiBlitz3.ab3@30462>                            Dc.b $20,$12                                             ;MOVE.L  (A2),D0
0003D916 <AmiBlitz3.ab3@30463>                            Dc.b $22,$17                                             ;MOVE.L  (A7),D1
0003D91A <AmiBlitz3.ab3@30464>                            Dc.b $4E,$AE,$FF,$BE                                     ;JSR -$0042(A6)
0003D91C <AmiBlitz3.ab3@30465>                            Dc.b $24,$80                                             ;MOVE.L  D0,(A2)
0003D920 <AmiBlitz3.ab3@30470>                            Dc.b $24,$6F,$00,$04                                     ;MOVEA.L $0004(A7),A2
0003D922 <AmiBlitz3.ab3@30471>                            Dc.b $10,$12                                             ;MOVE.B  (A2),D0
0003D926 <AmiBlitz3.ab3@30472>                            Dc.b $32,$2F,$00,$02                                     ;MOVE.W  $0002(A7),D1
0003D928 <AmiBlitz3.ab3@30473>                            Dc.b $4A,$57                                             ;TST.W   (A7)
0003D92C <AmiBlitz3.ab3@30474>                            Dc.b $6A,$00,$00,$04                                     ;BPL.W   L000001         ;.skip org source
0003D92E <AmiBlitz3.ab3@30475>                            Dc.b $C1,$41                                             ;EXG D0,D1
0003D930 <AmiBlitz3.ab3@30478>                            Dc.b $B0,$01                                             ;CMP.B   D1,D0
0003D934 <AmiBlitz3.ab3@30483>                            Dc.b $24,$6F,$00,$04                                     ;MOVEA.L $0004(A7),A2
0003D936 <AmiBlitz3.ab3@30484>                            Dc.b $30,$12                                             ;MOVE.W  (A2),D0
0003D93A <AmiBlitz3.ab3@30485>                            Dc.b $32,$2F,$00,$02                                     ;MOVE.W  $0002(A7),D1
0003D93C <AmiBlitz3.ab3@30486>                            Dc.b $4A,$57                                             ;TST.W   (A7)
0003D940 <AmiBlitz3.ab3@30487>                            Dc.b $6A,$00,$00,$04                                     ;BPL.W   L000002         ;.skip org source
0003D942 <AmiBlitz3.ab3@30488>                            Dc.b $C1,$41                                             ;EXG D0,D1
0003D944 <AmiBlitz3.ab3@30491>                            Dc.b $B0,$41                                             ;CMP.W   D1,D0
0003D948 <AmiBlitz3.ab3@30496>                            Dc.b $24,$6F,$00,$08                                     ;MOVEA.L $0008(A7),A2
0003D94A <AmiBlitz3.ab3@30497>                            Dc.b $20,$12                                             ;MOVE.L  (A2),D0
0003D94E <AmiBlitz3.ab3@30498>                            Dc.b $22,$2F,$00,$04                                     ;MOVE.L  $0004(A7),D1
0003D950 <AmiBlitz3.ab3@30499>                            Dc.b $4A,$57                                             ;TST.W   (A7)
0003D954 <AmiBlitz3.ab3@30500>                            Dc.b $6A,$00,$00,$04                                     ;BPL.W   L000003         ;.skip org source
0003D956 <AmiBlitz3.ab3@30501>                            Dc.b $C1,$41                                             ;EXG D0,D1
0003D958 <AmiBlitz3.ab3@30504>                            Dc.b $B0,$81                                             ;CMP.L   D1,D0
0003D95C <AmiBlitz3.ab3@30509>                            Dc.b $24,$6F,$00,$08                                     ;MOVEA.L $0008(A7),A2
0003D95E <AmiBlitz3.ab3@30510>                            Dc.b $20,$12                                             ;MOVE.L  (A2),D0
0003D962 <AmiBlitz3.ab3@30511>                            Dc.b $22,$2F,$00,$04                                     ;MOVE.L  $0004(A7),D1
0003D968 <AmiBlitz3.ab3@30512>                            Dc.b $08,$2F,$00,$07,$00,$03                             ;BTST    #7,$0003(A7)
0003D96C <AmiBlitz3.ab3@30513>                            Dc.b $67,$00,$00,$04                                     ;BEQ.W   L000004
0003D96E <AmiBlitz3.ab3@30514>                            Dc.b $C1,$41                                             ;EXG D0,D1
0003D972 <AmiBlitz3.ab3@30521>                            Dc.b $4E,$AE,$FF,$D6                                     ;JSR -$002A(A6)
0003D974 <AmiBlitz3.ab3@30525> swapd0:                    Dc.b $48,$40                                             ;SWAP    D0
0003D976 <AmiBlitz3.ab3@30528> pushindex:                 Dc.b $2F,$0A                                             ;MOVE.L  A2,-(A7)
0003D97A <AmiBlitz3.ab3@30531> leaamp:                    Dc.b $45,$ED :                            Dc.b $00,$00   ;LEA $0000(A5),A2
0003D97C <AmiBlitz3.ab3@30532> leaamp2:                   Dc.b $20,$0A                                             ;MOVE.L  A2,D0
0003D980 <AmiBlitz3.ab3@30535> leaampl:                   Dc.b $45,$EC :                            Dc.b $00,$00   ;LEA $0000(A4),A2
0003D982 <AmiBlitz3.ab3@30538> stamp:                     Dc.b $20,$12                                             ;MOVE.L  (A2),D0
0003D986 <AmiBlitz3.ab3@30541> stamp2:                    Dc.b $24,$6D :                            Dc.b $00,$00   ;MOVEA.L $0000(A5),A2
0003D988 <AmiBlitz3.ab3@30545>                            Dc.b $58,$4F                                             ;ADDQ.W  #4,A7
0003D98A <AmiBlitz3.ab3@30548> pushd0wd:                  Dc.b $3F,$00                                             ;MOVE.W  D0,-(A7)
0003D98C <AmiBlitz3.ab3@30551> pushd0l:                   Dc.b $2F,$00                                             ;MOVE.L  D0,-(A7)
0003D990 <AmiBlitz3.ab3@30554> movenumrep:                Dc.b $3E,$3C :                            Dc.b $00,$00   ;MOVE.W  #$0000,D7
0003D994 <AmiBlitz3.ab3@30557> preplibst:                 Dc.b $45,$EF :                            Dc.b $00,$00   ;LEA $0000(A7),A2
0003D998 <AmiBlitz3.ab3@30560> fixlibst:                  Dc.b $4F,$EF :                            Dc.b $00,$00   ;LEA $0000(A7),A7
0003D99A <AmiBlitz3.ab3@30563> pushdn:                    Dc.b $2F,$00                                             ;MOVE.L  D0,-(A7)
0003D99C <AmiBlitz3.ab3@30566> movea3a7:                  Dc.b $2F,$0B                                             ;MOVE.L  A3,-(A7)
0003D9A0 <AmiBlitz3.ab3@30569> movestst2:                 Dc.b $20,$2F :                            Dc.b $00,$06   ;MOVE.L  $0006(A7),D0
0003D9A6 <AmiBlitz3.ab3@30570>                            Dc.b $3F,$6F,$00,$04,$00,$08                             ;MOVE.W  $0004(A7),$0008(A7)
0003D9A8 <AmiBlitz3.ab3@30571>                            Dc.b $2E,$9F                                             ;MOVE.L  (A7)+,(A7)
0003D9AC <AmiBlitz3.ab3@30575> movea7dn:                  Dc.b $20,$2F :                            Dc.b $00,$04   ;MOVE.L  $0004(A7),D0
0003D9AE <AmiBlitz3.ab3@30576>                            Dc.b $2E,$9F                                             ;MOVE.L  (A7)+,(A7)
0003D9B0 <AmiBlitz3.ab3@30580> moved0a3:                  Dc.b $26,$40                                             ;MOVEA.L D0,A3
0003D9B4 <AmiBlitz3.ab3@30583> movestdn:                  Dc.b $20,$2D :                            Dc.b $00,$00   ;MOVE.L  $0000(A5),D0
0003D9B6 <AmiBlitz3.ab3@30587>                            Dc.b $20,$0B                                             ;MOVE.L  A3,D0
0003D9B8 <AmiBlitz3.ab3@30591>                            Dc.b $2F,$00                                             ;MOVE.L  D0,-(A7)
0003D9BA <AmiBlitz3.ab3@30595>                            Dc.b $20,$1F                                             ;MOVE.L  (A7)+,D0
0003D9BE <AmiBlitz3.ab3@30598> moverts:                   Dc.b $2F,$57 :                            Dc.b $00,$00   ;MOVE.L  (A7),$0000(A7)
0003D9C2 <AmiBlitz3.ab3@30601> fixstack:                  Dc.b $4F,$EF :                            Dc.b $00,$00   ;LEA $0000(A7),A7
0003D9C4 <AmiBlitz3.ab3@30604> fixq:                      Dc.b $50,$4F                                             ;ADDQ.W  #8,A7
0003D9C6 <AmiBlitz3.ab3@30607> fix1:                      Dc.b $2E,$9F                                             ;MOVE.L  (A7)+,(A7)
0003D9C8 <AmiBlitz3.ab3@30610> movedna3:                  Dc.b $26,$40                                             ;MOVEA.L D0,A3
0003D9CC <AmiBlitz3.ab3@30613> least:                     Dc.b $45,$EC :                            Dc.b $00,$00   ;LEA $0000(A4),A2
0003D9D0 <AmiBlitz3.ab3@30616> funcst:                    Dc.b $2F,$2C :                            Dc.b $00,$00   ;MOVE.L  $0000(A4),-(A7)
0003D9D2 <AmiBlitz3.ab3@30619> addq4a2:                   Dc.b $58,$4A                                             ;ADDQ.W  #4,A2
0003D9D4 <AmiBlitz3.ab3@30623>                            Dc.b $2F,$0B                                             ;MOVE.L  A3,-(A7)
0003D9D8 <AmiBlitz3.ab3@30626>                            Dc.b $2B,$4B,$00,$00                                     ;MOVE.L  A3,$0000(A5)
0003D9DA <AmiBlitz3.ab3@30632>                            Dc.b $26,$5F                                             ;MOVEA.L (A7)+,A3
0003D9DE <AmiBlitz3.ab3@30635>                            Dc.b $2B,$4B,$00,$00                                     ;MOVE.L  A3,$0000(A5)
0003D9E0 <AmiBlitz3.ab3@30641>                            Dc.b $CB,$4C                                             ;EXG A5,A4
0003D9E4 <AmiBlitz3.ab3@30645> linksize:                  Dc.b $4E,$54 :                            Dc.b $00,$00   ;LINK    A4,#-$0000
0003D9E6 <AmiBlitz3.ab3@30648> unlinka4:                  Dc.b $4E,$5C                                             ;UNLK    A4
0003D9E8 <AmiBlitz3.ab3@30652>                            Dc.b $2F,$0A                                             ;MOVE.L  A2,-(A7)
0003D9EA <AmiBlitz3.ab3@30656>                            Dc.b $24,$5F                                             ;MOVEA.L (A7)+,A2
0003D9F0 <AmiBlitz3.ab3@30659> gotocode:                  Dc.b $4E,$F9,$00,$00,$00,$00                             ;JMP $00000000
0003D9F6 <AmiBlitz3.ab3@30662> gosubcode:                 Dc.b $4E,$B9,$00,$00,$00,$00                             ;JSR $00000000
0003D9FE <AmiBlitz3.ab3@30666> mwait:                     Dc.b $08,$39,$00,$06,$00,$BF,$E0,$01                     ;BTST    #6,$00BFE001
0003DA02 <AmiBlitz3.ab3@30667>                            Dc.b $66,$00,$FF,$F6                                     ;BNE.W   L000005       ;mwait: org source
0003DA04 <AmiBlitz3.ab3@30671> libreg:                    Dc.b $20,$00                                             ;MOVE.L  D0,D0
0003DA08 <AmiBlitz3.ab3@30674> libbase:                   Dc.b $2C,$6D :                            Dc.b $00,$00   ;MOVEA.L $0000(A5),A6
0003DA0C <AmiBlitz3.ab3@30677> libjsr:                    Dc.b $4E,$AE :                            Dc.b $00,$00   ;JSR $0000(A6)
0003DA10 <AmiBlitz3.ab3@30680> regtransd:                 Dc.b $20,$2D,$00,$00                                     ;MOVE.L  $0000(A5),D0
0003DA14 <AmiBlitz3.ab3@30681> regtransa:                 Dc.b $20,$6D,$00,$00                                     ;MOVEA.L $0000(A5),A0
0003DA18 <AmiBlitz3.ab3@30685>                            Dc.b $26,$7C,$00,$00                                     ;MOVEA.L #$00000000,A3
0003DA1C <AmiBlitz3.ab3@30687>                            Dc.l $3F1B                                               ;MOVE.W  (A3)+,-(A7)
0003DA1E <AmiBlitz3.ab3@30690> movea2dn:                  Dc.b $20,$12                                             ;MOVE.L  (A2),D0
0003DA22 <AmiBlitz3.ab3@30693> moved3a5dn:                Dc.b $20,$2D,$00,$00                                     ;MOVE.L  $0000(A5),D0
0003DA24 <AmiBlitz3.ab3@30696> stvarget2:                 Dc.b $70,$00                                             ;MOVEQ   #$00,D0
0003DA26 <AmiBlitz3.ab3@30697>                            Dc.b $2F,$00                                             ;MOVE.L  D0,-(A7)
0003DA28 <AmiBlitz3.ab3@30698>                            Dc.b $4A,$92                                             ;TST.L   (A2)
0003DA2C <AmiBlitz3.ab3@30699> 
0003DA2E <AmiBlitz3.ab3@30700>                            Dc.b $20,$52                                             ;MOVEA.L (A2),A0
0003DA30 <AmiBlitz3.ab3@30701>                            Dc.b $59,$48                                             ;SUBQ.W  #4,A0
0003DA32 <AmiBlitz3.ab3@30702>                            Dc.b $2E,$98                                             ;MOVE.L  (A0)+,(A7)
0003DA38 <AmiBlitz3.ab3@30704>                            Dc.b $4E,$B9,$00,$00,$00,$00                             ;JSR $00000000
0003DA3A <AmiBlitz3.ab3@30709> addcode:                   Dc.b $20,$1F                                             ;MOVE.L  (A7)+,D0
0003DA3C <AmiBlitz3.ab3@30710>                            Dc.b $D1,$97                                             ;ADD.L   D0,(A7)
0003DA3E <AmiBlitz3.ab3@30714> pushlen:                   Dc.b $2F,$18                                             ;MOVE.L  (A0)+,-(A7)
0003DA42 <AmiBlitz3.ab3@30717> leaa5d3a2:                 Dc.b $45,$ED :                            Dc.b $00,$00   ;LEA $0000(A5),A2
0003DA44 <AmiBlitz3.ab3@30720> pusha2:                    Dc.b $2F,$0A                                             ;MOVE.L  A2,-(A7)
0003DA46 <AmiBlitz3.ab3@30724>                            Dc.b $24,$57                                             ;MOVEA.L (A7),A2
0003DA48 <AmiBlitz3.ab3@30727> pulla2:                    Dc.b $24,$5F                                             ;MOVEA.L (A7)+,A2
0003DA4C <AmiBlitz3.ab3@30730> pulla2st:                  Dc.b $24,$6F,$00,$04                                     ;MOVEA.L $0004(A7),A2
0003DA4E <AmiBlitz3.ab3@30731>                            Dc.b $2E,$9F                                             ;MOVE.L  (A7)+,(A7)
0003DA52 <AmiBlitz3.ab3@30735> pusha3:                    Dc.b $2F,$2D :                            Dc.b $00,$00   ;MOVE.L  $0000(A5),-(A7)
0003DA56 <AmiBlitz3.ab3@30736> pusha32:                   Dc.b $2B,$4B :                            Dc.b $00,$00   ;MOVE.L  A3,$0000(A5)
0003DA5A <AmiBlitz3.ab3@30740> pulla3:                    Dc.b $2B,$5F :                            Dc.b $00,$00   ;MOVE.L  (A7)+,$0000(A5)
0003DA5E <AmiBlitz3.ab3@30744> geta3:                     Dc.b $26,$6D :                            Dc.b $00,$00   ;MOVEA.L $0000(A5),A3
0003DA64 <AmiBlitz3.ab3@30748> numtoa0:                   Dc.b $20,$7C,$00,$00,$00,$00                             ;MOVEA.L #$00000000,A0
0003DA6A <AmiBlitz3.ab3@30751> numtoa2:                   Dc.b $24,$7C,$00,$00,$00,$00                             ;MOVEA.L #$00000000,A2
0003DA6E <AmiBlitz3.ab3@30755> endarray:                  Dc.b $38,$3C :                            Dc.b $00,$00   ;MOVE.W  #$0000,D4
0003DA72 <AmiBlitz3.ab3@30759>                            Dc.b $34,$3C,$00,$00                                     ;MOVE.W  #$0000,D2
0003DA76 <AmiBlitz3.ab3@30760>                            Dc.b $36,$3C,$00,$00                                     ;MOVE.W  #$0000,D3
0003DA7C <AmiBlitz3.ab3@30765>                            Dc.b $20,$3C,$00,$00,$00,$04                             ;MOVE.L  #$00000004,D0
0003DA80 <AmiBlitz3.ab3@30770>                            Dc.b $2B,$40,$00,$00                                     ;MOVE.L  D0,$0000(A5)
0003DA82 <AmiBlitz3.ab3@30775>                            Dc.b $C0,$C1                                             ;MULU.W  D1,D0
0003DA86 <AmiBlitz3.ab3@30779>                            Dc.b $2B,$40,$00,$00                                     ;MOVE.L  D0,$0000(A5)
0003DA88 <AmiBlitz3.ab3@30783> movea0:                    Dc.b $24,$52                                             ;MOVEA.L (A2),A2
0003DA8A <AmiBlitz3.ab3@30786> adda0a0:                   Dc.b $D5,$CA                                             ;ADDA.L  A2,A2
0003DA8C <AmiBlitz3.ab3@30787>                            Dc.b $D5,$CA                                             ;ADDA.L  A2,A2
0003DA90 <AmiBlitz3.ab3@30791>                            Dc.b $2C,$78,$00,$04                                     ;MOVEA.L $0004,A6
0003DA94 <AmiBlitz3.ab3@30795> movea5a0:                  Dc.b $24,$6D :                            Dc.b $00,$00   ;MOVEA.L $0000(A5),A2
0003DA98 <AmiBlitz3.ab3@30798> movea0a0:                  Dc.b $24,$6A :                            Dc.b $00,$00   ;MOVEA.L $0000(A2),A2
0003DA9A <AmiBlitz3.ab3@30801> addqa0:                    Dc.b $52,$4A                                             ;ADDQ.W  #1,A2
0003DA9E <AmiBlitz3.ab3@30804> leaa0a0:                   Dc.b $45,$EA :                            Dc.b $00,$00   ;LEA $0000(A2),A2
0003DAA0 <AmiBlitz3.ab3@30807> addrega2:                  Dc.b $D4,$C0                                             ;ADDA.W  D0,A2
0003DAA9 <AmiBlitz3.ab3@30811>                            Dc.b "ram:test",0
0003DAAA <AmiBlitz3.ab3@30812> Even
0003DAAE <AmiBlitz3.ab3@30816>                            Dc.l  0                          ;was  Ds.w 3 org source
0003DAB0 <AmiBlitz3.ab3@30818>                            Dc.w  0
0003DAB4 <AmiBlitz3.ab3@30821> _mathffpbase:              Ds.l 1                           ;maths org source
0003DAB6 <AmiBlitz3.ab3@30822> regnum:                    Ds.w 1                           ;regat org source       ;register being used!
0003DAB8 <AmiBlitz3.ab3@30823> typelen:                   Ds.w 1
0003DABC <AmiBlitz3.ab3@30824> prevtype:                  Ds.l 1
0003DAC0 <AmiBlitz3.ab3@30825> lastsourcepos:             Ds.l 1                           ;prevloc org source
0003DAC2 <AmiBlitz3.ab3@30826> lastchar:                  Ds.w 1
0003DAC6 <AmiBlitz3.ab3@30827> thistype:                  Ds.l 1
0003DACA <AmiBlitz3.ab3@30828> errstack:                  Ds.l 1
0003DACE <AmiBlitz3.ab3@30829> errcont:                   Ds.l 1
0003DAD0 <AmiBlitz3.ab3@30830> linemode:                  Ds.w 1                          ;0 if norm, 1 if newtype
0003DAD2 <AmiBlitz3.ab3@30831> linesleft:                 Ds.w 1
0003DAD6 <AmiBlitz3.ab3@30832> sourceline:                Ds.l 1                          ;thisitem org source
0003DADA <AmiBlitz3.ab3@30833> varbase:                   Ds.l 1                          ;firstvar org source
0003DADE <AmiBlitz3.ab3@30834> alllocals:                 Ds.l 1
0003DAE2 <AmiBlitz3.ab3@30835> firstlocal:                Ds.l 1
0003DAE6 <AmiBlitz3.ab3@30836> firstglob:                 Ds.l 1
0003DAE8 <AmiBlitz3.ab3@30837> globalvarpointer:          Ds.w 1                          ;varoff org source
0003DAEA <AmiBlitz3.ab3@30838> locvaroff:                 Ds.w 1
0003DAEE <AmiBlitz3.ab3@30839> firstitem_:                 Ds.l 1
0003DAF0 <AmiBlitz3.ab3@30840> numlines_org:              Ds.w 1                          ;numlines org source
0003DAF2 <AmiBlitz3.ab3@30841> returncode_org:            Ds.w 1                          ;returncode org source
0003DAF6 <AmiBlitz3.ab3@30842> firstiff:                  Ds.l 1                          ;firstif org source
0003DAFA <AmiBlitz3.ab3@30843> ptr_seg_ped:               Ds.l 1                          ;segadd org source
0003DCFA <AmiBlitz3.ab3@30844> str_pedfile:               Ds.b #MAX_STRINGSIZE            ;segname org source
0003DD0A <AmiBlitz3.ab3@30845> str_mathffpname:           Dc.b "mathffp.library",0 : Even ;mathsname org source
0003DF0A <AmiBlitz3.ab3@30846> str_libfilename:           Ds.b #MAX_STRINGSIZE
0003E10A <AmiBlitz3.ab3@30847> str_path_userlibs:         Ds.b #MAX_STRINGSIZE
0003E30A <AmiBlitz3.ab3@30848> str_defaultdbug:           Ds.b #MAX_STRINGSIZE            ;debugname org source
0003E30E <AmiBlitz3.ab3@30850> ptr_seg_debugger:          Ds.l 1                          ;dseg org source
0003E50E <AmiBlitz3.ab3@30851> str_blitz3assign:          Ds.b #MAX_STRINGSIZE            ;dpath org source
0003E70E <AmiBlitz3.ab3@30853> str_path_acidlibs:         Ds.b #MAX_STRINGSIZE            ;acidname org source
0003E712 <AmiBlitz3.ab3@30854> size_acidlibs:             Ds.l 1                          ;acidlibs org source
0003E912 <AmiBlitz3.ab3@30855> str_path_deflibs:          Ds.b #MAX_STRINGSIZE            ;defname org source
0003E916 <AmiBlitz3.ab3@30856> size_deflibs:              Ds.l 1                          ;deflibs org source
0003EB16 <AmiBlitz3.ab3@30857> str_tempfilename:          Ds.b #MAX_STRINGSIZE
0003ED16 <AmiBlitz3.ab3@30859> str_temp_debugmodulename:  Ds.b #MAX_STRINGSIZE            ;dname org source
0003ED1A <AmiBlitz3.ab3@30860> ptr_temp_debugmodule:      Ds.l 1                          ;dname2 org source
0003EF1A <AmiBlitz3.ab3@30862> str_path_includes:         Ds.b #MAX_STRINGSIZE            ;acidname org source
0003EF1E <AmiBlitz3.ab3@30868>   Dc.b $E3,$10,$00,$01                                     ;icondata  
0003EF22 <AmiBlitz3.ab3@30869>   Dc.b $00,$00,$00,$00
0003EF26 <AmiBlitz3.ab3@30870>   Dc.b $00,$19,$00,$11
0003EF2A <AmiBlitz3.ab3@30871>   Dc.b $00,$2E,$00,$18
0003EF2E <AmiBlitz3.ab3@30872>   Dc.b $00,$04,$00,$03
0003EF32 <AmiBlitz3.ab3@30873>   Dc.b $00,$01,$00,$22
0003EF36 <AmiBlitz3.ab3@30874>   Dc.b $73,$68,$00,$00
0003EF3A <AmiBlitz3.ab3@30875>   Dc.b $00,$00,$00,$00
0003EF3E <AmiBlitz3.ab3@30876>   Dc.b $00,$00,$00,$00
0003EF42 <AmiBlitz3.ab3@30877>   Dc.b $00,$00,$00,$00
0003EF46 <AmiBlitz3.ab3@30878>   Dc.b $00,$00,$00,$00
0003EF4A <AmiBlitz3.ab3@30879>   Dc.b $00,$00,$00,$00
0003EF4E <AmiBlitz3.ab3@30880>   Dc.b $03,$22,$00,$21
0003EF52 <AmiBlitz3.ab3@30881>   Dc.b $3C,$28,$00,$22
0003EF56 <AmiBlitz3.ab3@30882>   Dc.b $6E,$C0,$00,$00
0003EF5A <AmiBlitz3.ab3@30883>   Dc.b $00,$12,$00,$00
0003EF5E <AmiBlitz3.ab3@30884>   Dc.b $00,$0E,$00,$00
0003EF62 <AmiBlitz3.ab3@30885>   Dc.b $00,$00,$00,$00
0003EF66 <AmiBlitz3.ab3@30886>   Dc.b $00,$00,$00,$00
0003EF6A <AmiBlitz3.ab3@30887>   Dc.b $00,$00,$00,$00
0003EF6E <AmiBlitz3.ab3@30888>   Dc.b $00,$00,$00,$2E
0003EF72 <AmiBlitz3.ab3@30889>   Dc.b $00,$17,$00,$02
0003EF76 <AmiBlitz3.ab3@30890>   Dc.b $00,$01,$8E,$80
0003EF7A <AmiBlitz3.ab3@30891>   Dc.b $03,$00,$00,$00
0003EF7E <AmiBlitz3.ab3@30892>   Dc.b $00,$00,$FF,$FF
0003EF82 <AmiBlitz3.ab3@30893>   Dc.b $FF,$FF,$FF,$FC
0003EF86 <AmiBlitz3.ab3@30894>   Dc.b $80,$00,$00,$00
0003EF8A <AmiBlitz3.ab3@30895>   Dc.b $00,$00,$80,$00
0003EF8E <AmiBlitz3.ab3@30896>   Dc.b $00,$3F,$BB,$40
0003EF92 <AmiBlitz3.ab3@30897>   Dc.b $80,$1F,$C0,$00
0003EF96 <AmiBlitz3.ab3@30898>   Dc.b $00,$00,$80,$3F
0003EF9A <AmiBlitz3.ab3@30899>   Dc.b $C0,$0F,$BB,$40
0003EF9E <AmiBlitz3.ab3@30900>   Dc.b $80,$1F,$C0,$00
0003EFA2 <AmiBlitz3.ab3@30901>   Dc.b $00,$00,$8E,$00
0003EFA6 <AmiBlitz3.ab3@30902>   Dc.b $F8,$00,$00,$00
0003EFAA <AmiBlitz3.ab3@30903>   Dc.b $8F,$01,$FF,$00
0003EFAE <AmiBlitz3.ab3@30904>   Dc.b $3B,$40,$81,$E3
0003EFB2 <AmiBlitz3.ab3@30905>   Dc.b $F7,$C0,$00,$00
0003EFB6 <AmiBlitz3.ab3@30906>   Dc.b $80,$7F,$F8,$70
0003EFBA <AmiBlitz3.ab3@30907>   Dc.b $3B,$40,$80,$0F
0003EFBE <AmiBlitz3.ab3@30908>   Dc.b $7C,$E0,$00,$00
0003EFC2 <AmiBlitz3.ab3@30909>   Dc.b $80,$00,$FD,$80
0003EFC6 <AmiBlitz3.ab3@30910>   Dc.b $00,$00,$80,$01
0003EFCA <AmiBlitz3.ab3@30911>   Dc.b $F6,$00,$FB,$40
0003EFCE <AmiBlitz3.ab3@30912>   Dc.b $80,$03,$EF,$00
0003EFD2 <AmiBlitz3.ab3@30913>   Dc.b $00,$00,$80,$07
0003EFD6 <AmiBlitz3.ab3@30914>   Dc.b $87,$80,$3B,$40
0003EFDA <AmiBlitz3.ab3@30915>   Dc.b $80,$0F,$01,$C0
0003EFDE <AmiBlitz3.ab3@30916>   Dc.b $00,$00,$80,$03
0003EFE2 <AmiBlitz3.ab3@30917>   Dc.b $F0,$70,$1D,$40
0003EFE6 <AmiBlitz3.ab3@30918>   Dc.b $80,$00,$18,$1C
0003EFEA <AmiBlitz3.ab3@30919>   Dc.b $00,$00,$80,$00
0003EFEE <AmiBlitz3.ab3@30920>   Dc.b $10,$06,$03,$40
0003EFF2 <AmiBlitz3.ab3@30921>   Dc.b $80,$00,$20,$1F
0003EFF6 <AmiBlitz3.ab3@30922>   Dc.b $00,$00,$80,$00
0003EFFA <AmiBlitz3.ab3@30923>   Dc.b $00,$00,$01,$40
0003EFFE <AmiBlitz3.ab3@30924>   Dc.b $80,$00,$00,$00
0003F002 <AmiBlitz3.ab3@30925>   Dc.b $00,$00,$80,$00
0003F006 <AmiBlitz3.ab3@30926>   Dc.b $00,$00,$00,$00
0003F00A <AmiBlitz3.ab3@30927>   Dc.b $00,$00,$00,$00
0003F00E <AmiBlitz3.ab3@30928>   Dc.b $00,$00,$00,$00
0003F012 <AmiBlitz3.ab3@30929>   Dc.b $00,$00,$00,$04
0003F016 <AmiBlitz3.ab3@30930>   Dc.b $00,$3F,$FC,$01
0003F01A <AmiBlitz3.ab3@30931>   Dc.b $BB,$44,$00,$60
0003F01E <AmiBlitz3.ab3@30932>   Dc.b $FE,$00,$00,$04
0003F022 <AmiBlitz3.ab3@30933>   Dc.b $00,$CF,$FF,$01
0003F026 <AmiBlitz3.ab3@30934>   Dc.b $BB,$44,$1F,$EF
0003F02A <AmiBlitz3.ab3@30935>   Dc.b $FF,$00,$00,$04
0003F02E <AmiBlitz3.ab3@30936>   Dc.b $33,$FF,$FF,$E0
0003F032 <AmiBlitz3.ab3@30937>   Dc.b $00,$04,$37,$FE
0003F036 <AmiBlitz3.ab3@30938>   Dc.b $7F,$FC,$1B,$44
0003F03A <AmiBlitz3.ab3@30939>   Dc.b $0F,$9C,$FF,$FF
0003F03E <AmiBlitz3.ab3@30940>   Dc.b $00,$04,$03,$E3
0003F042 <AmiBlitz3.ab3@30941>   Dc.b $FF,$FF,$DB,$44
0003F046 <AmiBlitz3.ab3@30942>   Dc.b $00,$7F,$BF,$FF
0003F04A <AmiBlitz3.ab3@30943>   Dc.b $80,$04,$00,$0F
0003F04E <AmiBlitz3.ab3@30944>   Dc.b $3F,$FE,$00,$04
0003F052 <AmiBlitz3.ab3@30945>   Dc.b $00,$06,$7F,$F8
0003F056 <AmiBlitz3.ab3@30946>   Dc.b $1B,$44,$00,$0C
0003F05A <AmiBlitz3.ab3@30947>   Dc.b $F7,$FC,$00,$04
0003F05E <AmiBlitz3.ab3@30948>   Dc.b $00,$19,$F9,$FE
0003F062 <AmiBlitz3.ab3@30949>   Dc.b $1B,$44,$00,$33
0003F066 <AmiBlitz3.ab3@30950>   Dc.b $FE,$7F,$00,$04
0003F06A <AmiBlitz3.ab3@30951>   Dc.b $00,$0F,$FF,$BF
0003F06E <AmiBlitz3.ab3@30952>   Dc.b $CD,$44,$00,$03
0003F072 <AmiBlitz3.ab3@30953>   Dc.b $EF,$EF,$F0,$04
0003F076 <AmiBlitz3.ab3@30954>   Dc.b $00,$00,$7F,$DF
0003F07A <AmiBlitz3.ab3@30955>   Dc.b $FB,$44,$00,$00
0003F07E <AmiBlitz3.ab3@30956>   Dc.b $FF,$A7,$FC,$04
0003F082 <AmiBlitz3.ab3@30957>   Dc.b $00,$00,$7E,$3F
0003F086 <AmiBlitz3.ab3@30958>   Dc.b $FD,$44,$00,$00
0003F08A <AmiBlitz3.ab3@30959>   Dc.b $00,$00,$00,$04
0003F08E <AmiBlitz3.ab3@30960>   Dc.b $7F,$FF,$FF,$FF
0003F092 <AmiBlitz3.ab3@30961>   Dc.b $FF,$FC,$00,$00
0003F096 <AmiBlitz3.ab3@30962>   Dc.b $00,$01,$00,$00
0003F099 <AmiBlitz3.ab3@30963>   Dc.b $00,$00,$04
0003F09F <AmiBlitz3.ab3@30966> str_infoextention2:  Dc.b ".info",0                           ;infoname org source
0003F0F7 <AmiBlitz3.ab3@30967> errorlimit_text:     Dc.b "There are too much errors, compiling is stop now. Please fix errors first and try again",0
0003F0F8 <AmiBlitz3.ab3@30968> Even
0003F0FC <AmiBlitz3.ab3@30970> sysdebug:            Dc.l $3F0
0003F100 <AmiBlitz3.ab3@30974> exelock              Ds.l 1
0003F104 <AmiBlitz3.ab3@30978> includesourceline    Dc.l 0
0003F108 <AmiBlitz3.ab3@30979> linenum              Ds.l 1
0003F10C <AmiBlitz3.ab3@30980> globallinecount      Ds.l 1
0003F12A <AmiBlitz3.ab3@30981> myversion            Dc.b "\\__VER_MAJOR.\\__VER_MINOR (\\__DATE_GER__) Build \\__VER_PATCH.\\__VER_BUILD",0 : Even
0003F12E <AmiBlitz3.ab3@30982> calc_option          Dc.l 1
0003F132 <AmiBlitz3.ab3@30983> versioninformation   Dc.l $00
0003F136 <AmiBlitz3.ab3@30984> number_of_builds     Dc.l $00
0003F138 <AmiBlitz3.ab3@30985> leftsideflagmask     Ds.w 1    ;this contain the flag if pointer (1) or not
0003F13A <AmiBlitz3.ab3@30986> rightsideflagmask    Ds.w 1
0003F13C <AmiBlitz3.ab3@30988> BSS
0003F13E <AmiBlitz3.ab3@30989> debugnest            Ds.w 1
0003F142 <AmiBlitz3.ab3@30990> instringf            Ds.l 1
0003F146 <AmiBlitz3.ab3@30991> funcscanon           Ds.l 1
0003F15A <AmiBlitz3.ab3@30992> storedebugmode       Ds.b 20
0003F15E <AmiBlitz3.ab3@30993> firsttimepref        Ds.l 1
0003F15F <AmiBlitz3.ab3@30994> funcparloop          Ds.b 1                   ; is 1 when function calling parameter are compile
0003F160 <AmiBlitz3.ab3@30995> blitzparloop         Ds.b 1                   ; is 1 when blitzlib calling parameters are compile
0003F162 <AmiBlitz3.ab3@30996> nostringopt          Ds.w 1
0003F1E2 <AmiBlitz3.ab3@30997> path2:               Ds.l 32
0003F1E6 <AmiBlitz3.ab3@30998> typebase             Dc.l 0
0003F1E8 <AmiBlitz3.ab3@30999> doublepeek           Dc.w 0
0003F1EC <AmiBlitz3.ab3@31000> lastoffset           Dc.l 0
0003F1EE <AmiBlitz3.ab3@31001> firsttime            Dc.w 0
0003F1F2 <AmiBlitz3.ab3@31002> lastdestpointer      Dc.l 0
0003F1F6 <AmiBlitz3.ab3@31003> prevwritedat         Dc.l 0
0003F1FA <AmiBlitz3.ab3@31004> lastsourceline       Dc.l 0
0003F1FE <AmiBlitz3.ab3@31005> lastwritedat         Dc.l 0
0003F200 <AmiBlitz3.ab3@31006> makeexec             Dc.w 0
0003F202 <AmiBlitz3.ab3@31007> makeexec_remember    Dc.w 0
0003F206 <AmiBlitz3.ab3@31008> sharebase            Ds.l 1
0003F20A <AmiBlitz3.ab3@31009> tempa7               Ds.l 1
0003F20C <AmiBlitz3.ab3@31010> incnif               Ds.w 1
0003F210 <AmiBlitz3.ab3@31011> tempstore            Ds.l 1
0003F214 <AmiBlitz3.ab3@31012> result               Ds.l 1
0003F216 <AmiBlitz3.ab3@31013> automode             Ds.w 1
0003F218 <AmiBlitz3.ab3@31014> stackcorrect         Ds.w 1
0003F21A <AmiBlitz3.ab3@31015> formode              Ds.w 1
0003F21E <AmiBlitz3.ab3@31016> limitregs            Ds.l 1
0003F220 <AmiBlitz3.ab3@31017> onestep              Ds.w 1
0003F224 <AmiBlitz3.ab3@31018> reqmode              Ds.l 1
0003F2C4 <AmiBlitz3.ab3@31019> inctab               Ds.l 40
0003F2C6 <AmiBlitz3.ab3@31020> funcoptimize_deprecated  Ds.w 1 ; deprecated, see comByte_FuncOptimize ; Wanderer
0003F2CA <AmiBlitz3.ab3@31021> includeline          Ds.l 1
0003F2CE <AmiBlitz3.ab3@31022> morememadd           Ds.l 1
0003F2D0 <AmiBlitz3.ab3@31023> objectcount          Ds.w 1
0003F2D4 <AmiBlitz3.ab3@31024> savefuncspace        Ds.l 1
0003F2D8 <AmiBlitz3.ab3@31025> lasttrap1            Ds.l 1
0003F2DC <AmiBlitz3.ab3@31026> currentfunccall      Ds.l 1
0003F2DD <AmiBlitz3.ab3@31027> skipfunc             Ds.b 1
0003F2DE <AmiBlitz3.ab3@31028> resdisable           Ds.b 1
0003F2DF <AmiBlitz3.ab3@31029> skiptoggle           Ds.b 1
0003F2E0 <AmiBlitz3.ab3@31030> developobject        Ds.b 1
0003F2E2 <AmiBlitz3.ab3@31031> iniffcommand         Ds.w 1
0003F2E4 <AmiBlitz3.ab3@31032> startoffsetmore      Ds.w 1
0003F2E6 <AmiBlitz3.ab3@31033> olddebugmode         Ds.w 1
0003F2EA <AmiBlitz3.ab3@31034> fpucodeglobal        Ds.l 1
0003F2EE <AmiBlitz3.ab3@31035> fpucodelocal         Ds.l 1
0003F2F2 <AmiBlitz3.ab3@31036> maxregs              Ds.l 1
0003F2F6 <AmiBlitz3.ab3@31037> fpucode              Ds.l 1
0003F2F8 <AmiBlitz3.ab3@31038> firstmline           Ds.w 1
0003F338 <AmiBlitz3.ab3@31039> regtable             Ds.l 16
0003F33A <AmiBlitz3.ab3@31040> exdebug              Ds.w 1
0003F33C <AmiBlitz3.ab3@31041> a2offset2            Ds.w 1
0003F340 <AmiBlitz3.ab3@31042> parnumtemp           Ds.l 1
0003F341 <AmiBlitz3.ab3@31043> doimmediate          Ds.b 1
0003F342 <AmiBlitz3.ab3@31044> notypecheck          Ds.b 1
0003F344 <AmiBlitz3.ab3@31045> vartype              Ds.w 1
0003F345 <AmiBlitz3.ab3@31046> peekaddrsize         Ds.b 1
0003F346 <AmiBlitz3.ab3@31047> declare2             Ds.b 1
0003F348 <AmiBlitz3.ab3@31048> parameternum         Ds.w 1
0003F34C <AmiBlitz3.ab3@31049> lasttoken            Ds.l 1
0003F34E <AmiBlitz3.ab3@31050> newvariable          Ds.w 1
0003F34F <AmiBlitz3.ab3@31051> declare              Ds.b 1
0003F350 <AmiBlitz3.ab3@31052> typecheck            Ds.b 1
0003F351 <AmiBlitz3.ab3@31053> nowdeclare           Ds.b 1
0003F352 <AmiBlitz3.ab3@31054> dimkeep              Ds.b 1
0003F353 <AmiBlitz3.ab3@31055> a4a5store            Ds.b 1
0003F354 <AmiBlitz3.ab3@31056> ___freetouse         Ds.b 1
0003F358 <AmiBlitz3.ab3@31057> firstiffstore        Ds.l 1
0003F35C <AmiBlitz3.ab3@31058> destpointer2         Ds.l 1
0003F360 <AmiBlitz3.ab3@31059> stackaddr            Ds.l 1
0003F464 <AmiBlitz3.ab3@31060> allowtab             Ds.b 260
0003F564 <AmiBlitz3.ab3@31061> templine             Ds.b 256
0003F566 <AmiBlitz3.ab3@31062> thenmode             Ds.w 1
0003F568 <AmiBlitz3.ab3@31063> temp                 Ds.w 1
0003F56A <AmiBlitz3.ab3@31064> tempregnum           Ds.w 1
0003F56E <AmiBlitz3.ab3@31066> numlines2            Ds.l 1
0003F572 <AmiBlitz3.ab3@31067> numlines             Ds.l 1
0003F574 <AmiBlitz3.ab3@31068> exmac                Ds.w 1
0003F576 <AmiBlitz3.ab3@31069> returncode           Ds.w 1
0003F57A <AmiBlitz3.ab3@31070> fp0iff               Ds.l 1
0003F57E <AmiBlitz3.ab3@31071> fp0addr              Ds.l 1
0003F580 <AmiBlitz3.ab3@31072> fp0mode              Ds.w 1
0003F582 <AmiBlitz3.ab3@31073> fp0var               Ds.w 1
0003F584 <AmiBlitz3.ab3@31074> fastfunc             Ds.w 1
0003F586 <AmiBlitz3.ab3@31075> retmode              Ds.w 1
0003F588 <AmiBlitz3.ab3@31076> parnum               Ds.w 1
0003F58A <AmiBlitz3.ab3@31077> regmask              Ds.w 1
0003F58C <AmiBlitz3.ab3@31078> regnumfunc           Ds.w 1
0003F58E <AmiBlitz3.ab3@31079> libmode              Ds.w 1
0003F592 <AmiBlitz3.ab3@31080> oldline              Ds.l 1
0003F596 <AmiBlitz3.ab3@31081> sourceline3          Ds.l 1
0003F65E <AmiBlitz3.ab3@31082> debugstore           Ds.b 200
0003F662 <AmiBlitz3.ab3@31083> deststore            Ds.l 1
0003F666 <AmiBlitz3.ab3@31085> loada                Ds.l 1
0003F66A <AmiBlitz3.ab3@31087> currtype             Ds.l 1
0003F66E <AmiBlitz3.ab3@31088> arrayoffset          Ds.l 1
0003F672 <AmiBlitz3.ab3@31089> lastlabel            Ds.l 1
0003F676 <AmiBlitz3.ab3@31090> curtemplabel         Ds.l 1
0003F67A <AmiBlitz3.ab3@31091> sourceline2          Ds.l 1
0003F77A <AmiBlitz3.ab3@31092> chartab              Ds.b 256
0003F7F2 <AmiBlitz3.ab3@31093> tempspace            Ds.b 120
000BF802 <AmiBlitz3.ab3@31094> instrtab             Ds.l 65538*2
000C7802 <AmiBlitz3.ab3@31096> labelhash            Ds.l 8192                             ;-bssstore clear every compile pass
000E7806 <AmiBlitz3.ab3@31097> replacedat           Ds.w 65538
000EF806 <AmiBlitz3.ab3@31098> variablehash         Ds.l 8192
000EF80A <AmiBlitz3.ab3@31099> newinitaddr          Ds.l 1
000EF80E <AmiBlitz3.ab3@31100> realbssend           Ds.l 1
000EF810 <AmiBlitz3.ab3@31101> saved0               Ds.w 1
000EF890 <AmiBlitz3.ab3@31102> lastpath             Ds.b 128
000EF910 <AmiBlitz3.ab3@31103> lastpath2            Ds.b 128
000EF9D8 <AmiBlitz3.ab3@31104> fpustackbase         Ds.w 100
000EF9DC <AmiBlitz3.ab3@31105> 
000EF9DE <AmiBlitz3.ab3@31106> isconstantvalue      Dc.w 0  ; contain a type (1-7) if a constant expression is used as a Parameter or on right side of =
000EF9E2 <AmiBlitz3.ab3@31107> lastfunction         Dc.l 0  ; the address of the function in the Parameter or rght side of =
000EF9E6 <AmiBlitz3.ab3@31108> leftsidetype         Dc.l 0  ;this contain the address of the type from the left side of the variable assign
000EF9EA <AmiBlitz3.ab3@31109> rightsidetype        Dc.l 0  ; same as above but right side
000EF9EE <AmiBlitz3.ab3@31112> trap15temp           Ds.l 1
000EF9F2 <AmiBlitz3.ab3@31113> trap15temp2          Ds.l 1
000EF9F6 <AmiBlitz3.ab3@31114> templibend           Ds.l 1
000EF9FA <AmiBlitz3.ab3@31115> tempdata1start       Ds.l 1
000EF9FE <AmiBlitz3.ab3@31116> stacktrack           Ds.l 1
000EFA02 <AmiBlitz3.ab3@31117> pad                  Ds.l 1
000EFB02 <AmiBlitz3.ab3@31118> includetemp          Ds.b 256
000F0502 <AmiBlitz3.ab3@31119> includetemp2         Ds.b 256*10
000F0504 <AmiBlitz3.ab3@31120> funccall             Ds.w 1
000F0508 <AmiBlitz3.ab3@31123> ptr_resfile          Ds.l 1
000F050A <AmiBlitz3.ab3@31124> CalculatorButtonBinFlag:    Ds.w 1
000F050C <AmiBlitz3.ab3@31125> CalculatorButtonDecFlag:    Ds.w 1
000F0510 <AmiBlitz3.ab3@31126> ped_startup_addr:    Ds.l 1
000F0511 <AmiBlitz3.ab3@31127> start_without_libs:  Ds.b 1
000F0512 <AmiBlitz3.ab3@31128> skip_bytes:          Ds.b 1
000F0516 <AmiBlitz3.ab3@31129> functionreturntype   Ds.l 1  ; a temp store of it.do not read this value
000F051A <AmiBlitz3.ab3@31130> beforeparameterfetch Ds.l 1
000F051E <AmiBlitz3.ab3@31131> typetocast           Ds.l 1
000F0522 <AmiBlitz3.ab3@31132> errorcounter         Ds.l 1
000F0523 <AmiBlitz3.ab3@31133> iserror              Ds.b 1
000F0524 <AmiBlitz3.ab3@31134> MorphOS:             Ds.b 1 ; added to be able to select the cacheclear function 0=AOS, 1=MorphOS  tomsmart1
000F0528 <AmiBlitz3.ab3@31137> CLIMode:             Dc.l 0
000F052C <AmiBlitz3.ab3@31138> XTRAEndPadBytes:     Dc.l 0                             ; 4 fill/pad/termination bytes for the xtra write function  tomsmart1
000F0530 <AmiBlitz3.ab3@31139> maxerrorcount:       Ds.l 1                             ; added to make it changeable in CLI Mode tomsmart1
