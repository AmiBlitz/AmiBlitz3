00000008 <AmiBlitz3.ab2@0> 
00000014 <AmiBlitz3.ab2@44> optimize 5                               ; don't use FPU (opt. 4)
00000076 <AmiBlitz3.ab2@67> !initasm                                 ; some initial mumbo jumbo
000000A0 <AmiBlitz3.ab2@68> !basic
000000AC <AmiBlitz3.ab2@73> cli_verbose = -1
000000B2 <AmiBlitz3.ab2@74> CLIMode     = False
000000C8 <AmiBlitz3.ab2@75> MaxLen cli_tempstr.s = 1024
000000E4 <AmiBlitz3.ab2@76> GetCurrentDirName_ &cli_tempstr,1024  ; get the current dir to restore it on exit
0000010E <AmiBlitz3.ab2@77> cli_path.s = Peek.s(&cli_tempstr)
0000010E <library_offsets.ab3@1> XINCLUDE "/Shared/library_offsets.ab3"   ; needed includes
0000010E <AmiBlitz3.ab2@81> XINCLUDE "/Shared/library_offsets.ab3"   ; needed includes
0000010E <dos.include.bb2@1> XINCLUDE "dos.include.bb2"
0000010E <error.include.bb2@1> XINCLUDE "dos.include.bb2"
00000146 <error.include.bb2@62> XINCLUDE "dos.include.bb2"
0000016E <error.include.bb2@63> XINCLUDE "dos.include.bb2"
00000196 <error.include.bb2@64> XINCLUDE "dos.include.bb2"
000001BE <error.include.bb2@65> XINCLUDE "dos.include.bb2"
000001C4 <error.include.bb2@66> XINCLUDE "dos.include.bb2"
000001F8 <error.include.bb2@67> XINCLUDE "dos.include.bb2"
0000022C <error.include.bb2@68> XINCLUDE "dos.include.bb2"
00000260 <error.include.bb2@69> XINCLUDE "dos.include.bb2"
0000027C <error.include.bb2@73> XINCLUDE "dos.include.bb2"
00000296 <error.include.bb2@99> XINCLUDE "dos.include.bb2"
000002A2 <error.include.bb2@101> XINCLUDE "dos.include.bb2"
000002A6 <error.include.bb2@102> XINCLUDE "dos.include.bb2"
000002B4 <error.include.bb2@104> XINCLUDE "dos.include.bb2"
000002E6 <error.include.bb2@124> XINCLUDE "dos.include.bb2"
0000036A <error.include.bb2@126> XINCLUDE "dos.include.bb2"
00000384 <error.include.bb2@128> XINCLUDE "dos.include.bb2"
000003BC <error.include.bb2@129> XINCLUDE "dos.include.bb2"
0000041C <error.include.bb2@130> XINCLUDE "dos.include.bb2"
0000042A <error.include.bb2@132> XINCLUDE "dos.include.bb2"
00000438 <error.include.bb2@133> XINCLUDE "dos.include.bb2"
00000446 <error.include.bb2@134> XINCLUDE "dos.include.bb2"
00000454 <error.include.bb2@135> XINCLUDE "dos.include.bb2"
0000047C <error.include.bb2@136> XINCLUDE "dos.include.bb2"
0000048A <error.include.bb2@137> XINCLUDE "dos.include.bb2"
00000492 <error.include.bb2@138> XINCLUDE "dos.include.bb2"
000004C4 <error.include.bb2@140> XINCLUDE "dos.include.bb2"
000004DE <error.include.bb2@145> XINCLUDE "dos.include.bb2"
00000516 <error.include.bb2@146> XINCLUDE "dos.include.bb2"
0000051C <error.include.bb2@147> XINCLUDE "dos.include.bb2"
00000560 <error.include.bb2@148> XINCLUDE "dos.include.bb2"
000005A8 <error.include.bb2@149> XINCLUDE "dos.include.bb2"
000005B2 <error.include.bb2@153> XINCLUDE "dos.include.bb2"
000005CA <error.include.bb2@155> XINCLUDE "dos.include.bb2"
00000604 <error.include.bb2@194> XINCLUDE "dos.include.bb2"
0000060C <error.include.bb2@196> XINCLUDE "dos.include.bb2"
0000062E <error.include.bb2@198> XINCLUDE "dos.include.bb2"
0000068E <error.include.bb2@199> XINCLUDE "dos.include.bb2"
0000069C <error.include.bb2@201> XINCLUDE "dos.include.bb2"
000006AA <error.include.bb2@202> XINCLUDE "dos.include.bb2"
000006B8 <error.include.bb2@203> XINCLUDE "dos.include.bb2"
000006C6 <error.include.bb2@204> XINCLUDE "dos.include.bb2"
0000072C <error.include.bb2@205> XINCLUDE "dos.include.bb2"
0000073A <error.include.bb2@206> XINCLUDE "dos.include.bb2"
00000770 <error.include.bb2@209> XINCLUDE "dos.include.bb2"
0000077A <error.include.bb2@213> XINCLUDE "dos.include.bb2"
00000796 <error.include.bb2@214> XINCLUDE "dos.include.bb2"
000007AC <error.include.bb2@301> XINCLUDE "dos.include.bb2"
000007B4 <error.include.bb2@303> XINCLUDE "dos.include.bb2"
000007B6 <error.include.bb2@304> XINCLUDE "dos.include.bb2"
000007B6 <multilist.include.bb2@1> XINCLUDE "dos.include.bb2"
000007B6 <strptr.include.bb2@1> XINCLUDE "dos.include.bb2"
000007B6 <useful.include.bb2@1> XINCLUDE "dos.include.bb2"
000007E4 <useful.include.bb2@220> XINCLUDE "dos.include.bb2"
000007EE <useful.include.bb2@221> XINCLUDE "dos.include.bb2"
00000802 <useful.include.bb2@222> XINCLUDE "dos.include.bb2"
0000080A <useful.include.bb2@223> XINCLUDE "dos.include.bb2"
00000832 <useful.include.bb2@224> XINCLUDE "dos.include.bb2"
00000858 <useful.include.bb2@225> XINCLUDE "dos.include.bb2"
00000874 <useful.include.bb2@228> XINCLUDE "dos.include.bb2"
00000882 <useful.include.bb2@229> XINCLUDE "dos.include.bb2"
000008A4 <useful.include.bb2@230> XINCLUDE "dos.include.bb2"
000008AC <useful.include.bb2@233> XINCLUDE "dos.include.bb2"
000008B4 <useful.include.bb2@234> XINCLUDE "dos.include.bb2"
000008BA <useful.include.bb2@235> XINCLUDE "dos.include.bb2"
000008D6 <useful.include.bb2@236> XINCLUDE "dos.include.bb2"
000008F8 <useful.include.bb2@237> XINCLUDE "dos.include.bb2"
0000090A <useful.include.bb2@238> XINCLUDE "dos.include.bb2"
00000910 <useful.include.bb2@239> XINCLUDE "dos.include.bb2"
00000956 <useful.include.bb2@240> XINCLUDE "dos.include.bb2"
00000958 <useful.include.bb2@241> XINCLUDE "dos.include.bb2"
00000966 <useful.include.bb2@243> XINCLUDE "dos.include.bb2"
00000982 <useful.include.bb2@245> XINCLUDE "dos.include.bb2"
000009E0 <useful.include.bb2@246> XINCLUDE "dos.include.bb2"
000009E6 <useful.include.bb2@247> XINCLUDE "dos.include.bb2"
000009F4 <useful.include.bb2@248> XINCLUDE "dos.include.bb2"
00000A08 <useful.include.bb2@249> XINCLUDE "dos.include.bb2"
00000A1A <useful.include.bb2@250> XINCLUDE "dos.include.bb2"
00000A28 <useful.include.bb2@251> XINCLUDE "dos.include.bb2"
00000A2E <useful.include.bb2@252> XINCLUDE "dos.include.bb2"
00000A38 <useful.include.bb2@253> XINCLUDE "dos.include.bb2"
00000A4C <useful.include.bb2@256> XINCLUDE "dos.include.bb2"
00000A60 <useful.include.bb2@257> XINCLUDE "dos.include.bb2"
00000A72 <useful.include.bb2@258> XINCLUDE "dos.include.bb2"
00000A80 <useful.include.bb2@259> XINCLUDE "dos.include.bb2"
00000A9C <useful.include.bb2@260> XINCLUDE "dos.include.bb2"
00000AA2 <useful.include.bb2@261> XINCLUDE "dos.include.bb2"
00000AB4 <useful.include.bb2@265> XINCLUDE "dos.include.bb2"
00000ABE <useful.include.bb2@266> XINCLUDE "dos.include.bb2"
00000AC6 <useful.include.bb2@267> XINCLUDE "dos.include.bb2"
00000AE2 <useful.include.bb2@268> XINCLUDE "dos.include.bb2"
00000AE8 <useful.include.bb2@269> XINCLUDE "dos.include.bb2"
00000B12 <useful.include.bb2@270> XINCLUDE "dos.include.bb2"
00000B18 <useful.include.bb2@272> XINCLUDE "dos.include.bb2"
00000B26 <useful.include.bb2@273> XINCLUDE "dos.include.bb2"
00000B3E <useful.include.bb2@274> XINCLUDE "dos.include.bb2"
00000B56 <useful.include.bb2@275> XINCLUDE "dos.include.bb2"
00000B6E <useful.include.bb2@276> XINCLUDE "dos.include.bb2"
00000B70 <useful.include.bb2@278> XINCLUDE "dos.include.bb2"
00000B7E <useful.include.bb2@279> XINCLUDE "dos.include.bb2"
00000BA0 <useful.include.bb2@280> XINCLUDE "dos.include.bb2"
00000C32 <useful.include.bb2@281> XINCLUDE "dos.include.bb2"
00000C40 <useful.include.bb2@283> XINCLUDE "dos.include.bb2"
00000C46 <useful.include.bb2@284> XINCLUDE "dos.include.bb2"
00000C70 <useful.include.bb2@285> XINCLUDE "dos.include.bb2"
00000C8E <useful.include.bb2@286> XINCLUDE "dos.include.bb2"
00000C8E <strptr.include.bb2@31> XINCLUDE "dos.include.bb2"
00000CB8 <strptr.include.bb2@33> XINCLUDE "dos.include.bb2"
00000CD2 <strptr.include.bb2@84> XINCLUDE "dos.include.bb2"
00000CDC <strptr.include.bb2@85> XINCLUDE "dos.include.bb2"
00000D2C <strptr.include.bb2@86> XINCLUDE "dos.include.bb2"
00000D30 <strptr.include.bb2@88> XINCLUDE "dos.include.bb2"
00000D52 <strptr.include.bb2@103> XINCLUDE "dos.include.bb2"
00000D5C <strptr.include.bb2@104> XINCLUDE "dos.include.bb2"
00000DAC <strptr.include.bb2@105> XINCLUDE "dos.include.bb2"
00000DB6 <strptr.include.bb2@106> XINCLUDE "dos.include.bb2"
00000DC8 <strptr.include.bb2@107> XINCLUDE "dos.include.bb2"
00000DD0 <strptr.include.bb2@108> XINCLUDE "dos.include.bb2"
00000DFE <strptr.include.bb2@109> XINCLUDE "dos.include.bb2"
00000E10 <strptr.include.bb2@111> XINCLUDE "dos.include.bb2"
00000E38 <strptr.include.bb2@112> XINCLUDE "dos.include.bb2"
00000E42 <strptr.include.bb2@113> XINCLUDE "dos.include.bb2"
00000E50 <strptr.include.bb2@114> XINCLUDE "dos.include.bb2"
00000E5A <strptr.include.bb2@115> XINCLUDE "dos.include.bb2"
00000E80 <strptr.include.bb2@116> XINCLUDE "dos.include.bb2"
00000E9A <strptr.include.bb2@117> XINCLUDE "dos.include.bb2"
00000E9E <strptr.include.bb2@122> XINCLUDE "dos.include.bb2"
00000ECC <strptr.include.bb2@137> XINCLUDE "dos.include.bb2"
00000ED6 <strptr.include.bb2@138> XINCLUDE "dos.include.bb2"
00000F26 <strptr.include.bb2@139> XINCLUDE "dos.include.bb2"
00000F3A <strptr.include.bb2@140> XINCLUDE "dos.include.bb2"
00000F4C <strptr.include.bb2@141> XINCLUDE "dos.include.bb2"
00000F74 <strptr.include.bb2@142> XINCLUDE "dos.include.bb2"
00000F7E <strptr.include.bb2@143> XINCLUDE "dos.include.bb2"
00000F8C <strptr.include.bb2@144> XINCLUDE "dos.include.bb2"
00000F96 <strptr.include.bb2@145> XINCLUDE "dos.include.bb2"
00000FBE <strptr.include.bb2@146> XINCLUDE "dos.include.bb2"
00000FD8 <strptr.include.bb2@147> XINCLUDE "dos.include.bb2"
00000FF0 <strptr.include.bb2@151> XINCLUDE "dos.include.bb2"
0000100A <strptr.include.bb2@213> XINCLUDE "dos.include.bb2"
00001014 <strptr.include.bb2@214> XINCLUDE "dos.include.bb2"
00001022 <strptr.include.bb2@215> XINCLUDE "dos.include.bb2"
00001054 <strptr.include.bb2@216> XINCLUDE "dos.include.bb2"
00001072 <strptr.include.bb2@218> XINCLUDE "dos.include.bb2"
0000107C <strptr.include.bb2@219> XINCLUDE "dos.include.bb2"
00001092 <strptr.include.bb2@221> XINCLUDE "dos.include.bb2"
0000109C <strptr.include.bb2@222> XINCLUDE "dos.include.bb2"
000010AC <strptr.include.bb2@223> XINCLUDE "dos.include.bb2"
000010B4 <strptr.include.bb2@224> XINCLUDE "dos.include.bb2"
000010B6 <strptr.include.bb2@226> XINCLUDE "dos.include.bb2"
000010E4 <strptr.include.bb2@227> XINCLUDE "dos.include.bb2"
000010E4 <multilist.include.bb2@44> XINCLUDE "dos.include.bb2"
000010FA <multilist.include.bb2@61> XINCLUDE "dos.include.bb2"
00001134 <multilist.include.bb2@78> XINCLUDE "dos.include.bb2"
00001168 <multilist.include.bb2@80> XINCLUDE "dos.include.bb2"
0000118E <multilist.include.bb2@81> XINCLUDE "dos.include.bb2"
000011AE <multilist.include.bb2@82> XINCLUDE "dos.include.bb2"
000011CE <multilist.include.bb2@83> XINCLUDE "dos.include.bb2"
000011F8 <multilist.include.bb2@100> XINCLUDE "dos.include.bb2"
0000120E <multilist.include.bb2@101> XINCLUDE "dos.include.bb2"
00001218 <multilist.include.bb2@102> XINCLUDE "dos.include.bb2"
00001240 <multilist.include.bb2@103> XINCLUDE "dos.include.bb2"
00001246 <multilist.include.bb2@104> XINCLUDE "dos.include.bb2"
0000126E <multilist.include.bb2@105> XINCLUDE "dos.include.bb2"
00001298 <multilist.include.bb2@107> XINCLUDE "dos.include.bb2"
000012B6 <multilist.include.bb2@108> XINCLUDE "dos.include.bb2"
000012FC <multilist.include.bb2@153> XINCLUDE "dos.include.bb2"
0000131C <multilist.include.bb2@154> XINCLUDE "dos.include.bb2"
00001326 <multilist.include.bb2@155> XINCLUDE "dos.include.bb2"
00001332 <multilist.include.bb2@156> XINCLUDE "dos.include.bb2"
0000133C <multilist.include.bb2@158> XINCLUDE "dos.include.bb2"
00001348 <multilist.include.bb2@159> XINCLUDE "dos.include.bb2"
00001352 <multilist.include.bb2@160> XINCLUDE "dos.include.bb2"
00001358 <multilist.include.bb2@161> XINCLUDE "dos.include.bb2"
00001364 <multilist.include.bb2@162> XINCLUDE "dos.include.bb2"
00001372 <multilist.include.bb2@165> XINCLUDE "dos.include.bb2"
00001382 <multilist.include.bb2@166> XINCLUDE "dos.include.bb2"
00001390 <multilist.include.bb2@169> XINCLUDE "dos.include.bb2"
000013AC <multilist.include.bb2@170> XINCLUDE "dos.include.bb2"
000013C8 <multilist.include.bb2@171> XINCLUDE "dos.include.bb2"
000013D4 <multilist.include.bb2@172> XINCLUDE "dos.include.bb2"
000013DE <multilist.include.bb2@173> XINCLUDE "dos.include.bb2"
000013E8 <multilist.include.bb2@175> XINCLUDE "dos.include.bb2"
00001404 <multilist.include.bb2@176> XINCLUDE "dos.include.bb2"
0000144A <multilist.include.bb2@243> XINCLUDE "dos.include.bb2"
00001454 <multilist.include.bb2@244> XINCLUDE "dos.include.bb2"
00001474 <multilist.include.bb2@245> XINCLUDE "dos.include.bb2"
0000147E <multilist.include.bb2@246> XINCLUDE "dos.include.bb2"
0000148C <multilist.include.bb2@247> XINCLUDE "dos.include.bb2"
000014B2 <multilist.include.bb2@248> XINCLUDE "dos.include.bb2"
000014BA <multilist.include.bb2@249> XINCLUDE "dos.include.bb2"
00001506 <multilist.include.bb2@250> XINCLUDE "dos.include.bb2"
00001516 <multilist.include.bb2@251> XINCLUDE "dos.include.bb2"
0000151C <multilist.include.bb2@252> XINCLUDE "dos.include.bb2"
00001536 <multilist.include.bb2@253> XINCLUDE "dos.include.bb2"
0000154C <multilist.include.bb2@254> XINCLUDE "dos.include.bb2"
00001552 <multilist.include.bb2@255> XINCLUDE "dos.include.bb2"
0000155C <multilist.include.bb2@256> XINCLUDE "dos.include.bb2"
00001562 <multilist.include.bb2@257> XINCLUDE "dos.include.bb2"
00001568 <multilist.include.bb2@258> XINCLUDE "dos.include.bb2"
0000156E <multilist.include.bb2@260> XINCLUDE "dos.include.bb2"
00001574 <multilist.include.bb2@263> XINCLUDE "dos.include.bb2"
0000158E <multilist.include.bb2@264> XINCLUDE "dos.include.bb2"
000015E0 <multilist.include.bb2@266> XINCLUDE "dos.include.bb2"
00001640 <multilist.include.bb2@267> XINCLUDE "dos.include.bb2"
00001646 <multilist.include.bb2@269> XINCLUDE "dos.include.bb2"
00001650 <multilist.include.bb2@270> XINCLUDE "dos.include.bb2"
00001656 <multilist.include.bb2@272> XINCLUDE "dos.include.bb2"
0000165C <multilist.include.bb2@273> XINCLUDE "dos.include.bb2"
00001662 <multilist.include.bb2@275> XINCLUDE "dos.include.bb2"
00001694 <multilist.include.bb2@277> XINCLUDE "dos.include.bb2"
000016AA <multilist.include.bb2@279> XINCLUDE "dos.include.bb2"
000016BE <multilist.include.bb2@280> XINCLUDE "dos.include.bb2"
000016CA <multilist.include.bb2@282> XINCLUDE "dos.include.bb2"
000016D4 <multilist.include.bb2@283> XINCLUDE "dos.include.bb2"
000016E0 <multilist.include.bb2@284> XINCLUDE "dos.include.bb2"
000016EE <multilist.include.bb2@285> XINCLUDE "dos.include.bb2"
000016FC <multilist.include.bb2@287> XINCLUDE "dos.include.bb2"
00001718 <multilist.include.bb2@288> XINCLUDE "dos.include.bb2"
00001734 <multilist.include.bb2@289> XINCLUDE "dos.include.bb2"
00001740 <multilist.include.bb2@290> XINCLUDE "dos.include.bb2"
0000174A <multilist.include.bb2@291> XINCLUDE "dos.include.bb2"
0000176E <multilist.include.bb2@292> XINCLUDE "dos.include.bb2"
00001774 <multilist.include.bb2@294> XINCLUDE "dos.include.bb2"
000017DE <multilist.include.bb2@295> XINCLUDE "dos.include.bb2"
000017E8 <multilist.include.bb2@297> XINCLUDE "dos.include.bb2"
00001804 <multilist.include.bb2@298> XINCLUDE "dos.include.bb2"
0000184A <multilist.include.bb2@320> XINCLUDE "dos.include.bb2"
00001854 <multilist.include.bb2@321> XINCLUDE "dos.include.bb2"
00001874 <multilist.include.bb2@322> XINCLUDE "dos.include.bb2"
0000187E <multilist.include.bb2@323> XINCLUDE "dos.include.bb2"
00001886 <multilist.include.bb2@324> XINCLUDE "dos.include.bb2"
00001894 <multilist.include.bb2@325> XINCLUDE "dos.include.bb2"
000018E0 <multilist.include.bb2@327> XINCLUDE "dos.include.bb2"
000018F0 <multilist.include.bb2@328> XINCLUDE "dos.include.bb2"
000018F6 <multilist.include.bb2@329> XINCLUDE "dos.include.bb2"
00001910 <multilist.include.bb2@330> XINCLUDE "dos.include.bb2"
00001926 <multilist.include.bb2@331> XINCLUDE "dos.include.bb2"
0000192C <multilist.include.bb2@332> XINCLUDE "dos.include.bb2"
00001936 <multilist.include.bb2@333> XINCLUDE "dos.include.bb2"
0000193C <multilist.include.bb2@334> XINCLUDE "dos.include.bb2"
00001942 <multilist.include.bb2@335> XINCLUDE "dos.include.bb2"
00001948 <multilist.include.bb2@337> XINCLUDE "dos.include.bb2"
0000194E <multilist.include.bb2@340> XINCLUDE "dos.include.bb2"
00001968 <multilist.include.bb2@341> XINCLUDE "dos.include.bb2"
000019BA <multilist.include.bb2@343> XINCLUDE "dos.include.bb2"
00001A1A <multilist.include.bb2@344> XINCLUDE "dos.include.bb2"
00001A20 <multilist.include.bb2@345> XINCLUDE "dos.include.bb2"
00001A2A <multilist.include.bb2@346> XINCLUDE "dos.include.bb2"
00001A30 <multilist.include.bb2@348> XINCLUDE "dos.include.bb2"
00001A36 <multilist.include.bb2@349> XINCLUDE "dos.include.bb2"
00001A3C <multilist.include.bb2@351> XINCLUDE "dos.include.bb2"
00001A5A <multilist.include.bb2@353> XINCLUDE "dos.include.bb2"
00001A70 <multilist.include.bb2@354> XINCLUDE "dos.include.bb2"
00001A84 <multilist.include.bb2@355> XINCLUDE "dos.include.bb2"
00001A90 <multilist.include.bb2@357> XINCLUDE "dos.include.bb2"
00001A9A <multilist.include.bb2@358> XINCLUDE "dos.include.bb2"
00001AA6 <multilist.include.bb2@359> XINCLUDE "dos.include.bb2"
00001AB4 <multilist.include.bb2@360> XINCLUDE "dos.include.bb2"
00001AC2 <multilist.include.bb2@362> XINCLUDE "dos.include.bb2"
00001ADE <multilist.include.bb2@363> XINCLUDE "dos.include.bb2"
00001AFA <multilist.include.bb2@364> XINCLUDE "dos.include.bb2"
00001B06 <multilist.include.bb2@365> XINCLUDE "dos.include.bb2"
00001B10 <multilist.include.bb2@366> XINCLUDE "dos.include.bb2"
00001B22 <multilist.include.bb2@367> XINCLUDE "dos.include.bb2"
00001B28 <multilist.include.bb2@369> XINCLUDE "dos.include.bb2"
00001B92 <multilist.include.bb2@370> XINCLUDE "dos.include.bb2"
00001B9C <multilist.include.bb2@372> XINCLUDE "dos.include.bb2"
00001BB8 <multilist.include.bb2@373> XINCLUDE "dos.include.bb2"
00001BD2 <multilist.include.bb2@390> XINCLUDE "dos.include.bb2"
00001C02 <multilist.include.bb2@391> XINCLUDE "dos.include.bb2"
00001C0C <multilist.include.bb2@392> XINCLUDE "dos.include.bb2"
00001C12 <multilist.include.bb2@393> XINCLUDE "dos.include.bb2"
00001C2C <multilist.include.bb2@406> XINCLUDE "dos.include.bb2"
00001C36 <multilist.include.bb2@407> XINCLUDE "dos.include.bb2"
00001C58 <multilist.include.bb2@408> XINCLUDE "dos.include.bb2"
00001C7C <multilist.include.bb2@409> XINCLUDE "dos.include.bb2"
00001C8E <multilist.include.bb2@410> XINCLUDE "dos.include.bb2"
00001CA6 <multilist.include.bb2@411> XINCLUDE "dos.include.bb2"
00001CBA <multilist.include.bb2@412> XINCLUDE "dos.include.bb2"
00001CCC <multilist.include.bb2@415> XINCLUDE "dos.include.bb2"
00001CDC <multilist.include.bb2@416> XINCLUDE "dos.include.bb2"
00001CE2 <multilist.include.bb2@417> XINCLUDE "dos.include.bb2"
00001CF2 <multilist.include.bb2@418> XINCLUDE "dos.include.bb2"
00001D02 <multilist.include.bb2@419> XINCLUDE "dos.include.bb2"
00001D1C <multilist.include.bb2@420> XINCLUDE "dos.include.bb2"
00001D20 <multilist.include.bb2@422> XINCLUDE "dos.include.bb2"
00001D3A <multilist.include.bb2@439> XINCLUDE "dos.include.bb2"
00001D44 <multilist.include.bb2@440> XINCLUDE "dos.include.bb2"
00001D50 <multilist.include.bb2@441> XINCLUDE "dos.include.bb2"
00001D56 <multilist.include.bb2@442> XINCLUDE "dos.include.bb2"
00001D62 <multilist.include.bb2@443> XINCLUDE "dos.include.bb2"
00001D68 <multilist.include.bb2@445> XINCLUDE "dos.include.bb2"
00001D82 <multilist.include.bb2@501> XINCLUDE "dos.include.bb2"
00001D8C <multilist.include.bb2@502> XINCLUDE "dos.include.bb2"
00001DBC <multilist.include.bb2@503> XINCLUDE "dos.include.bb2"
00001DC2 <multilist.include.bb2@504> XINCLUDE "dos.include.bb2"
00001DE0 <multilist.include.bb2@505> XINCLUDE "dos.include.bb2"
00001DEA <multilist.include.bb2@507> XINCLUDE "dos.include.bb2"
00001E04 <multilist.include.bb2@565> XINCLUDE "dos.include.bb2"
00001E0E <multilist.include.bb2@566> XINCLUDE "dos.include.bb2"
00001E3E <multilist.include.bb2@567> XINCLUDE "dos.include.bb2"
00001E44 <multilist.include.bb2@568> XINCLUDE "dos.include.bb2"
00001E62 <multilist.include.bb2@569> XINCLUDE "dos.include.bb2"
00001E6C <multilist.include.bb2@571> XINCLUDE "dos.include.bb2"
00001E86 <multilist.include.bb2@585> XINCLUDE "dos.include.bb2"
00001EB6 <multilist.include.bb2@586> XINCLUDE "dos.include.bb2"
00001EC0 <multilist.include.bb2@588> XINCLUDE "dos.include.bb2"
00001ECA <multilist.include.bb2@589> XINCLUDE "dos.include.bb2"
00001EEC <multilist.include.bb2@590> XINCLUDE "dos.include.bb2"
00001F10 <multilist.include.bb2@591> XINCLUDE "dos.include.bb2"
00001F22 <multilist.include.bb2@592> XINCLUDE "dos.include.bb2"
00001F3A <multilist.include.bb2@593> XINCLUDE "dos.include.bb2"
00001F4E <multilist.include.bb2@594> XINCLUDE "dos.include.bb2"
00001F60 <multilist.include.bb2@597> XINCLUDE "dos.include.bb2"
00001F70 <multilist.include.bb2@598> XINCLUDE "dos.include.bb2"
00001F76 <multilist.include.bb2@599> XINCLUDE "dos.include.bb2"
00001F86 <multilist.include.bb2@600> XINCLUDE "dos.include.bb2"
00001F96 <multilist.include.bb2@601> XINCLUDE "dos.include.bb2"
00001FB0 <multilist.include.bb2@602> XINCLUDE "dos.include.bb2"
00001FB6 <multilist.include.bb2@603> XINCLUDE "dos.include.bb2"
00001FBC <multilist.include.bb2@604> XINCLUDE "dos.include.bb2"
00001FC0 <multilist.include.bb2@605> XINCLUDE "dos.include.bb2"
00001FDA <multilist.include.bb2@618> XINCLUDE "dos.include.bb2"
00001FE4 <multilist.include.bb2@619> XINCLUDE "dos.include.bb2"
00001FF6 <multilist.include.bb2@620> XINCLUDE "dos.include.bb2"
00002006 <multilist.include.bb2@621> XINCLUDE "dos.include.bb2"
0000200C <multilist.include.bb2@622> XINCLUDE "dos.include.bb2"
00002010 <multilist.include.bb2@624> XINCLUDE "dos.include.bb2"
0000202A <multilist.include.bb2@638> XINCLUDE "dos.include.bb2"
00002034 <multilist.include.bb2@639> XINCLUDE "dos.include.bb2"
0000203E <multilist.include.bb2@640> XINCLUDE "dos.include.bb2"
00002042 <multilist.include.bb2@642> XINCLUDE "dos.include.bb2"
0000205C <multilist.include.bb2@656> XINCLUDE "dos.include.bb2"
00002066 <multilist.include.bb2@657> XINCLUDE "dos.include.bb2"
00002070 <multilist.include.bb2@658> XINCLUDE "dos.include.bb2"
00002074 <multilist.include.bb2@660> XINCLUDE "dos.include.bb2"
0000208E <multilist.include.bb2@713> XINCLUDE "dos.include.bb2"
00002096 <multilist.include.bb2@714> XINCLUDE "dos.include.bb2"
000020A0 <multilist.include.bb2@715> XINCLUDE "dos.include.bb2"
000020B6 <multilist.include.bb2@716> XINCLUDE "dos.include.bb2"
000020CA <multilist.include.bb2@717> XINCLUDE "dos.include.bb2"
000020EE <multilist.include.bb2@718> XINCLUDE "dos.include.bb2"
000020FC <multilist.include.bb2@721> XINCLUDE "dos.include.bb2"
00002106 <multilist.include.bb2@722> XINCLUDE "dos.include.bb2"
0000210C <multilist.include.bb2@723> XINCLUDE "dos.include.bb2"
00002116 <multilist.include.bb2@724> XINCLUDE "dos.include.bb2"
0000211C <multilist.include.bb2@725> XINCLUDE "dos.include.bb2"
0000213A <multilist.include.bb2@742> XINCLUDE "dos.include.bb2"
00002142 <multilist.include.bb2@743> XINCLUDE "dos.include.bb2"
0000214C <multilist.include.bb2@744> XINCLUDE "dos.include.bb2"
0000216A <multilist.include.bb2@745> XINCLUDE "dos.include.bb2"
00002180 <multilist.include.bb2@746> XINCLUDE "dos.include.bb2"
00002194 <multilist.include.bb2@747> XINCLUDE "dos.include.bb2"
000021C8 <multilist.include.bb2@748> XINCLUDE "dos.include.bb2"
000021D6 <multilist.include.bb2@751> XINCLUDE "dos.include.bb2"
000021E0 <multilist.include.bb2@752> XINCLUDE "dos.include.bb2"
000021E6 <multilist.include.bb2@753> XINCLUDE "dos.include.bb2"
000021F0 <multilist.include.bb2@754> XINCLUDE "dos.include.bb2"
000021F4 <multilist.include.bb2@756> XINCLUDE "dos.include.bb2"
000021FA <multilist.include.bb2@757> XINCLUDE "dos.include.bb2"
00002214 <multilist.include.bb2@795> XINCLUDE "dos.include.bb2"
0000221E <multilist.include.bb2@796> XINCLUDE "dos.include.bb2"
00002228 <multilist.include.bb2@797> XINCLUDE "dos.include.bb2"
0000223E <multilist.include.bb2@798> XINCLUDE "dos.include.bb2"
0000224E <multilist.include.bb2@799> XINCLUDE "dos.include.bb2"
00002258 <multilist.include.bb2@801> XINCLUDE "dos.include.bb2"
0000225E <multilist.include.bb2@802> XINCLUDE "dos.include.bb2"
00002262 <multilist.include.bb2@803> XINCLUDE "dos.include.bb2"
00002284 <multilist.include.bb2@821> XINCLUDE "dos.include.bb2"
0000228C <multilist.include.bb2@822> XINCLUDE "dos.include.bb2"
000022A6 <multilist.include.bb2@823> XINCLUDE "dos.include.bb2"
000022B0 <multilist.include.bb2@824> XINCLUDE "dos.include.bb2"
000022C6 <multilist.include.bb2@825> XINCLUDE "dos.include.bb2"
000022DA <multilist.include.bb2@826> XINCLUDE "dos.include.bb2"
00002330 <multilist.include.bb2@827> XINCLUDE "dos.include.bb2"
0000236A <multilist.include.bb2@828> XINCLUDE "dos.include.bb2"
0000237C <multilist.include.bb2@829> XINCLUDE "dos.include.bb2"
0000239E <multilist.include.bb2@830> XINCLUDE "dos.include.bb2"
000023A4 <multilist.include.bb2@831> XINCLUDE "dos.include.bb2"
000023FA <multilist.include.bb2@832> XINCLUDE "dos.include.bb2"
00002434 <multilist.include.bb2@833> XINCLUDE "dos.include.bb2"
0000243A <multilist.include.bb2@835> XINCLUDE "dos.include.bb2"
00002474 <multilist.include.bb2@836> XINCLUDE "dos.include.bb2"
000024AE <multilist.include.bb2@837> XINCLUDE "dos.include.bb2"
000024C0 <multilist.include.bb2@839> XINCLUDE "dos.include.bb2"
000024CA <multilist.include.bb2@840> XINCLUDE "dos.include.bb2"
000024D0 <multilist.include.bb2@841> XINCLUDE "dos.include.bb2"
000024DA <multilist.include.bb2@842> XINCLUDE "dos.include.bb2"
000024EE <multilist.include.bb2@843> XINCLUDE "dos.include.bb2"
00002534 <multilist.include.bb2@870> XINCLUDE "dos.include.bb2"
0000253C <multilist.include.bb2@871> XINCLUDE "dos.include.bb2"
0000255A <multilist.include.bb2@872> XINCLUDE "dos.include.bb2"
00002586 <multilist.include.bb2@873> XINCLUDE "dos.include.bb2"
000025A4 <multilist.include.bb2@874> XINCLUDE "dos.include.bb2"
000025BE <multilist.include.bb2@875> XINCLUDE "dos.include.bb2"
000025D8 <multilist.include.bb2@876> XINCLUDE "dos.include.bb2"
0000265A <multilist.include.bb2@877> XINCLUDE "dos.include.bb2"
0000266E <multilist.include.bb2@879> XINCLUDE "dos.include.bb2"
00002686 <multilist.include.bb2@880> XINCLUDE "dos.include.bb2"
0000268C <multilist.include.bb2@881> XINCLUDE "dos.include.bb2"
000026A4 <multilist.include.bb2@882> XINCLUDE "dos.include.bb2"
000026BA <multilist.include.bb2@884> XINCLUDE "dos.include.bb2"
000026D4 <multilist.include.bb2@886> XINCLUDE "dos.include.bb2"
000026E8 <multilist.include.bb2@887> XINCLUDE "dos.include.bb2"
000026F6 <multilist.include.bb2@888> XINCLUDE "dos.include.bb2"
0000274C <multilist.include.bb2@889> XINCLUDE "dos.include.bb2"
00002782 <multilist.include.bb2@890> XINCLUDE "dos.include.bb2"
000027B2 <multilist.include.bb2@891> XINCLUDE "dos.include.bb2"
0000283A <multilist.include.bb2@893> XINCLUDE "dos.include.bb2"
00002840 <multilist.include.bb2@894> XINCLUDE "dos.include.bb2"
0000284E <multilist.include.bb2@895> XINCLUDE "dos.include.bb2"
000028A4 <multilist.include.bb2@896> XINCLUDE "dos.include.bb2"
000028DA <multilist.include.bb2@897> XINCLUDE "dos.include.bb2"
0000290A <multilist.include.bb2@898> XINCLUDE "dos.include.bb2"
00002910 <multilist.include.bb2@901> XINCLUDE "dos.include.bb2"
0000292A <multilist.include.bb2@902> XINCLUDE "dos.include.bb2"
00002938 <multilist.include.bb2@903> XINCLUDE "dos.include.bb2"
00002972 <multilist.include.bb2@904> XINCLUDE "dos.include.bb2"
000029A8 <multilist.include.bb2@905> XINCLUDE "dos.include.bb2"
000029D8 <multilist.include.bb2@906> XINCLUDE "dos.include.bb2"
000029E6 <multilist.include.bb2@909> XINCLUDE "dos.include.bb2"
000029F0 <multilist.include.bb2@910> XINCLUDE "dos.include.bb2"
000029F6 <multilist.include.bb2@911> XINCLUDE "dos.include.bb2"
00002A00 <multilist.include.bb2@912> XINCLUDE "dos.include.bb2"
00002A14 <multilist.include.bb2@913> XINCLUDE "dos.include.bb2"
00002A52 <multilist.include.bb2@928> XINCLUDE "dos.include.bb2"
00002A5C <multilist.include.bb2@930> XINCLUDE "dos.include.bb2"
00002AC2 <multilist.include.bb2@931> XINCLUDE "dos.include.bb2"
00002AE2 <multilist.include.bb2@932> XINCLUDE "dos.include.bb2"
00002AEC <multilist.include.bb2@933> XINCLUDE "dos.include.bb2"
00002B00 <multilist.include.bb2@934> XINCLUDE "dos.include.bb2"
00002B0A <multilist.include.bb2@935> XINCLUDE "dos.include.bb2"
00002B72 <multilist.include.bb2@937> XINCLUDE "dos.include.bb2"
00002BA2 <multilist.include.bb2@938> XINCLUDE "dos.include.bb2"
00002BCC <multilist.include.bb2@939> XINCLUDE "dos.include.bb2"
00002BEE <multilist.include.bb2@940> XINCLUDE "dos.include.bb2"
00002C10 <multilist.include.bb2@941> XINCLUDE "dos.include.bb2"
00002C94 <multilist.include.bb2@942> XINCLUDE "dos.include.bb2"
00002CAC <multilist.include.bb2@943> XINCLUDE "dos.include.bb2"
00002CD4 <multilist.include.bb2@944> XINCLUDE "dos.include.bb2"
00002D6A <multilist.include.bb2@945> XINCLUDE "dos.include.bb2"
00002D70 <multilist.include.bb2@947> XINCLUDE "dos.include.bb2"
00002E06 <multilist.include.bb2@948> XINCLUDE "dos.include.bb2"
00002E0C <multilist.include.bb2@950> XINCLUDE "dos.include.bb2"
00002E20 <multilist.include.bb2@953> XINCLUDE "dos.include.bb2"
00002E30 <multilist.include.bb2@955> XINCLUDE "dos.include.bb2"
00002E5A <multilist.include.bb2@958> XINCLUDE "dos.include.bb2"
00002E9C <multilist.include.bb2@976> XINCLUDE "dos.include.bb2"
00002F02 <multilist.include.bb2@978> XINCLUDE "dos.include.bb2"
00002F22 <multilist.include.bb2@979> XINCLUDE "dos.include.bb2"
00002F2C <multilist.include.bb2@980> XINCLUDE "dos.include.bb2"
00002F40 <multilist.include.bb2@981> XINCLUDE "dos.include.bb2"
00002F4A <multilist.include.bb2@982> XINCLUDE "dos.include.bb2"
00002FB2 <multilist.include.bb2@983> XINCLUDE "dos.include.bb2"
00002FE2 <multilist.include.bb2@984> XINCLUDE "dos.include.bb2"
0000300C <multilist.include.bb2@985> XINCLUDE "dos.include.bb2"
0000302E <multilist.include.bb2@986> XINCLUDE "dos.include.bb2"
00003050 <multilist.include.bb2@987> XINCLUDE "dos.include.bb2"
000030D4 <multilist.include.bb2@988> XINCLUDE "dos.include.bb2"
000030EC <multilist.include.bb2@989> XINCLUDE "dos.include.bb2"
00003114 <multilist.include.bb2@990> XINCLUDE "dos.include.bb2"
000031AA <multilist.include.bb2@991> XINCLUDE "dos.include.bb2"
000031B0 <multilist.include.bb2@993> XINCLUDE "dos.include.bb2"
000031BA <multilist.include.bb2@994> XINCLUDE "dos.include.bb2"
00003250 <multilist.include.bb2@995> XINCLUDE "dos.include.bb2"
00003256 <multilist.include.bb2@996> XINCLUDE "dos.include.bb2"
0000327E <multilist.include.bb2@997> XINCLUDE "dos.include.bb2"
00003314 <multilist.include.bb2@998> XINCLUDE "dos.include.bb2"
0000331A <multilist.include.bb2@1002> XINCLUDE "dos.include.bb2"
0000332E <multilist.include.bb2@1004> XINCLUDE "dos.include.bb2"
0000333E <multilist.include.bb2@1006> XINCLUDE "dos.include.bb2"
0000336E <multilist.include.bb2@1008> XINCLUDE "dos.include.bb2"
00003378 <multilist.include.bb2@1009> XINCLUDE "dos.include.bb2"
000033A4 <multilist.include.bb2@1010> XINCLUDE "dos.include.bb2"
000033A4 <dos.include.bb2@57> XINCLUDE "dos.include.bb2"
000033BA <dos.include.bb2@60> XINCLUDE "dos.include.bb2"
000033C2 <dos.include.bb2@62> XINCLUDE "dos.include.bb2"
000033CA <dos.include.bb2@63> XINCLUDE "dos.include.bb2"
000033F2 <dos.include.bb2@64> XINCLUDE "dos.include.bb2"
000033FA <dos.include.bb2@65> XINCLUDE "dos.include.bb2"
00003422 <dos.include.bb2@66> XINCLUDE "dos.include.bb2"
0000344A <dos.include.bb2@67> XINCLUDE "dos.include.bb2"
00003472 <dos.include.bb2@68> XINCLUDE "dos.include.bb2"
0000347A <dos.include.bb2@69> XINCLUDE "dos.include.bb2"
00003482 <dos.include.bb2@70> XINCLUDE "dos.include.bb2"
0000348A <dos.include.bb2@71> XINCLUDE "dos.include.bb2"
00003492 <dos.include.bb2@72> XINCLUDE "dos.include.bb2"
0000349A <dos.include.bb2@73> XINCLUDE "dos.include.bb2"
000034A2 <dos.include.bb2@74> XINCLUDE "dos.include.bb2"
000034AA <dos.include.bb2@75> XINCLUDE "dos.include.bb2"
000034B2 <dos.include.bb2@76> XINCLUDE "dos.include.bb2"
000034BA <dos.include.bb2@77> XINCLUDE "dos.include.bb2"
000034DA <dos.include.bb2@78> XINCLUDE "dos.include.bb2"
000034E2 <dos.include.bb2@79> XINCLUDE "dos.include.bb2"
000034EA <dos.include.bb2@80> XINCLUDE "dos.include.bb2"
00003512 <dos.include.bb2@82> XINCLUDE "dos.include.bb2"
00003528 <dos.include.bb2@113> XINCLUDE "dos.include.bb2"
00003534 <dos.include.bb2@114> XINCLUDE "dos.include.bb2"
00003538 <dos.include.bb2@115> XINCLUDE "dos.include.bb2"
0000354E <dos.include.bb2@128> XINCLUDE "dos.include.bb2"
00003568 <dos.include.bb2@129> XINCLUDE "dos.include.bb2"
0000357E <dos.include.bb2@130> XINCLUDE "dos.include.bb2"
000035A8 <dos.include.bb2@131> XINCLUDE "dos.include.bb2"
000035B2 <dos.include.bb2@132> XINCLUDE "dos.include.bb2"
000035B8 <dos.include.bb2@133> XINCLUDE "dos.include.bb2"
000035CE <dos.include.bb2@146> XINCLUDE "dos.include.bb2"
000035E8 <dos.include.bb2@147> XINCLUDE "dos.include.bb2"
000035FE <dos.include.bb2@148> XINCLUDE "dos.include.bb2"
00003628 <dos.include.bb2@149> XINCLUDE "dos.include.bb2"
00003632 <dos.include.bb2@150> XINCLUDE "dos.include.bb2"
00003638 <dos.include.bb2@151> XINCLUDE "dos.include.bb2"
00003662 <dos.include.bb2@167> XINCLUDE "dos.include.bb2"
0000366E <dos.include.bb2@168> XINCLUDE "dos.include.bb2"
0000368E <dos.include.bb2@169> XINCLUDE "dos.include.bb2"
00003698 <dos.include.bb2@170> XINCLUDE "dos.include.bb2"
000036A8 <dos.include.bb2@171> XINCLUDE "dos.include.bb2"
000036B8 <dos.include.bb2@172> XINCLUDE "dos.include.bb2"
000036C2 <dos.include.bb2@174> XINCLUDE "dos.include.bb2"
000036DC <dos.include.bb2@175> XINCLUDE "dos.include.bb2"
000036F2 <dos.include.bb2@413> XINCLUDE "dos.include.bb2"
00003704 <dos.include.bb2@415> XINCLUDE "dos.include.bb2"
0000377E <dos.include.bb2@416> XINCLUDE "dos.include.bb2"
000037A8 <dos.include.bb2@417> XINCLUDE "dos.include.bb2"
000037C0 <dos.include.bb2@418> XINCLUDE "dos.include.bb2"
000037DA <dos.include.bb2@428> XINCLUDE "dos.include.bb2"
000037F4 <dos.include.bb2@430> XINCLUDE "dos.include.bb2"
000037FE <dos.include.bb2@431> XINCLUDE "dos.include.bb2"
00003878 <dos.include.bb2@432> XINCLUDE "dos.include.bb2"
000038A2 <dos.include.bb2@433> XINCLUDE "dos.include.bb2"
000038BA <dos.include.bb2@434> XINCLUDE "dos.include.bb2"
000038D0 <dos.include.bb2@444> XINCLUDE "dos.include.bb2"
000038E2 <dos.include.bb2@445> XINCLUDE "dos.include.bb2"
000038E6 <dos.include.bb2@446> XINCLUDE "dos.include.bb2"
000038FC <dos.include.bb2@462> XINCLUDE "dos.include.bb2"
000038FE <dos.include.bb2@463> XINCLUDE "dos.include.bb2"
00003938 <dos.include.bb2@524> XINCLUDE "dos.include.bb2"
0000396C <dos.include.bb2@526> XINCLUDE "dos.include.bb2"
00003992 <dos.include.bb2@527> XINCLUDE "dos.include.bb2"
000039B2 <dos.include.bb2@528> XINCLUDE "dos.include.bb2"
000039D2 <dos.include.bb2@529> XINCLUDE "dos.include.bb2"
000039FC <dos.include.bb2@644> XINCLUDE "dos.include.bb2"
00003A12 <dos.include.bb2@645> XINCLUDE "dos.include.bb2"
00003A1C <dos.include.bb2@646> XINCLUDE "dos.include.bb2"
00003A44 <dos.include.bb2@647> XINCLUDE "dos.include.bb2"
00003A4A <dos.include.bb2@648> XINCLUDE "dos.include.bb2"
00003A72 <dos.include.bb2@649> XINCLUDE "dos.include.bb2"
00003A9C <dos.include.bb2@651> XINCLUDE "dos.include.bb2"
00003ABA <dos.include.bb2@652> XINCLUDE "dos.include.bb2"
00003AE4 <dos.include.bb2@675> XINCLUDE "dos.include.bb2"
00003B54 <dos.include.bb2@676> XINCLUDE "dos.include.bb2"
00003B7E <dos.include.bb2@677> XINCLUDE "dos.include.bb2"
00003B9C <dos.include.bb2@678> XINCLUDE "dos.include.bb2"
00003BC6 <dos.include.bb2@694> XINCLUDE "dos.include.bb2"
00003C14 <dos.include.bb2@695> XINCLUDE "dos.include.bb2"
00003C32 <dos.include.bb2@696> XINCLUDE "dos.include.bb2"
00003C5C <dos.include.bb2@713> XINCLUDE "dos.include.bb2"
00003C7C <dos.include.bb2@714> XINCLUDE "dos.include.bb2"
00003CA8 <dos.include.bb2@715> XINCLUDE "dos.include.bb2"
00003CB2 <dos.include.bb2@716> XINCLUDE "dos.include.bb2"
00003CCC <dos.include.bb2@717> XINCLUDE "dos.include.bb2"
00003CE6 <dos.include.bb2@735> XINCLUDE "dos.include.bb2"
00003CFA <dos.include.bb2@736> XINCLUDE "dos.include.bb2"
00003D02 <dos.include.bb2@737> XINCLUDE "dos.include.bb2"
00003D0C <dos.include.bb2@738> XINCLUDE "dos.include.bb2"
00003D28 <dos.include.bb2@740> XINCLUDE "dos.include.bb2"
00003D32 <dos.include.bb2@741> XINCLUDE "dos.include.bb2"
00003D78 <dos.include.bb2@742> XINCLUDE "dos.include.bb2"
00003DA2 <dos.include.bb2@743> XINCLUDE "dos.include.bb2"
00003DCC <dos.include.bb2@744> XINCLUDE "dos.include.bb2"
00003E68 <dos.include.bb2@745> XINCLUDE "dos.include.bb2"
00003EAE <dos.include.bb2@746> XINCLUDE "dos.include.bb2"
00003F16 <dos.include.bb2@747> XINCLUDE "dos.include.bb2"
00003F2E <dos.include.bb2@749> XINCLUDE "dos.include.bb2"
00003F3E <dos.include.bb2@750> XINCLUDE "dos.include.bb2"
00003F4C <dos.include.bb2@752> XINCLUDE "dos.include.bb2"
00003F56 <dos.include.bb2@753> XINCLUDE "dos.include.bb2"
00003F6A <dos.include.bb2@754> XINCLUDE "dos.include.bb2"
00003F94 <dos.include.bb2@864> XINCLUDE "dos.include.bb2"
00004042 <dos.include.bb2@865> XINCLUDE "dos.include.bb2"
00004058 <dos.include.bb2@866> XINCLUDE "dos.include.bb2"
00004062 <dos.include.bb2@867> XINCLUDE "dos.include.bb2"
0000408A <dos.include.bb2@868> XINCLUDE "dos.include.bb2"
00004094 <dos.include.bb2@869> XINCLUDE "dos.include.bb2"
0000409A <dos.include.bb2@870> XINCLUDE "dos.include.bb2"
000040A0 <dos.include.bb2@871> XINCLUDE "dos.include.bb2"
000040A6 <dos.include.bb2@872> XINCLUDE "dos.include.bb2"
000040B8 <dos.include.bb2@874> XINCLUDE "dos.include.bb2"
000040C2 <dos.include.bb2@876> XINCLUDE "dos.include.bb2"
000040DC <dos.include.bb2@877> XINCLUDE "dos.include.bb2"
0000411A <dos.include.bb2@898> XINCLUDE "dos.include.bb2"
00004122 <dos.include.bb2@899> XINCLUDE "dos.include.bb2"
000041D0 <dos.include.bb2@900> XINCLUDE "dos.include.bb2"
000041E4 <dos.include.bb2@901> XINCLUDE "dos.include.bb2"
00004226 <dos.include.bb2@902> XINCLUDE "dos.include.bb2"
00004246 <dos.include.bb2@904> XINCLUDE "dos.include.bb2"
00004250 <dos.include.bb2@905> XINCLUDE "dos.include.bb2"
0000426C <dos.include.bb2@906> XINCLUDE "dos.include.bb2"
000042A6 <dos.include.bb2@958> XINCLUDE "dos.include.bb2"
000042AE <dos.include.bb2@959> XINCLUDE "dos.include.bb2"
0000435C <dos.include.bb2@960> XINCLUDE "dos.include.bb2"
00004392 <dos.include.bb2@961> XINCLUDE "dos.include.bb2"
000043B2 <dos.include.bb2@962> XINCLUDE "dos.include.bb2"
000043D0 <dos.include.bb2@963> XINCLUDE "dos.include.bb2"
000043F4 <dos.include.bb2@964> XINCLUDE "dos.include.bb2"
000043FE <dos.include.bb2@966> XINCLUDE "dos.include.bb2"
0000441A <dos.include.bb2@967> XINCLUDE "dos.include.bb2"
00004454 <dos.include.bb2@984> XINCLUDE "dos.include.bb2"
00004502 <dos.include.bb2@985> XINCLUDE "dos.include.bb2"
0000453A <dos.include.bb2@986> XINCLUDE "dos.include.bb2"
0000455A <dos.include.bb2@987> XINCLUDE "dos.include.bb2"
00004560 <dos.include.bb2@988> XINCLUDE "dos.include.bb2"
00004580 <dos.include.bb2@989> XINCLUDE "dos.include.bb2"
0000458A <dos.include.bb2@990> XINCLUDE "dos.include.bb2"
000045A4 <dos.include.bb2@991> XINCLUDE "dos.include.bb2"
000045BC <dos.include.bb2@992> XINCLUDE "dos.include.bb2"
000045C6 <dos.include.bb2@995> XINCLUDE "dos.include.bb2"
000045E2 <dos.include.bb2@996> XINCLUDE "dos.include.bb2"
0000460C <dos.include.bb2@1131> XINCLUDE "dos.include.bb2"
0000461A <dos.include.bb2@1133> XINCLUDE "dos.include.bb2"
000046E4 <dos.include.bb2@1134> XINCLUDE "dos.include.bb2"
0000470E <dos.include.bb2@1135> XINCLUDE "dos.include.bb2"
00004736 <dos.include.bb2@1137> XINCLUDE "dos.include.bb2"
00004760 <dos.include.bb2@1138> XINCLUDE "dos.include.bb2"
0000478A <dos.include.bb2@1140> XINCLUDE "dos.include.bb2"
000047A8 <dos.include.bb2@1141> XINCLUDE "dos.include.bb2"
000047D2 <dos.include.bb2@1159> XINCLUDE "dos.include.bb2"
00004844 <dos.include.bb2@1161> XINCLUDE "dos.include.bb2"
0000486C <dos.include.bb2@1162> XINCLUDE "dos.include.bb2"
0000487A <dos.include.bb2@1163> XINCLUDE "dos.include.bb2"
000048AE <dos.include.bb2@1164> XINCLUDE "dos.include.bb2"
000048BC <dos.include.bb2@1167> XINCLUDE "dos.include.bb2"
000048DE <dos.include.bb2@1173> XINCLUDE "dos.include.bb2"
000048EC <dos.include.bb2@1177> XINCLUDE "dos.include.bb2"
00004910 <dos.include.bb2@1178> XINCLUDE "dos.include.bb2"
0000493A <dos.include.bb2@1179> XINCLUDE "dos.include.bb2"
00004964 <dos.include.bb2@1182> XINCLUDE "dos.include.bb2"
00004982 <dos.include.bb2@1183> XINCLUDE "dos.include.bb2"
000049AC <dos.include.bb2@1206> XINCLUDE "dos.include.bb2"
000049D4 <dos.include.bb2@1208> XINCLUDE "dos.include.bb2"
000049E2 <dos.include.bb2@1209> XINCLUDE "dos.include.bb2"
00004A16 <dos.include.bb2@1210> XINCLUDE "dos.include.bb2"
00004A24 <dos.include.bb2@1213> XINCLUDE "dos.include.bb2"
00004A32 <dos.include.bb2@1224> XINCLUDE "dos.include.bb2"
00004A7C <dos.include.bb2@1225> XINCLUDE "dos.include.bb2"
00004AA6 <dos.include.bb2@1227> XINCLUDE "dos.include.bb2"
00004AC4 <dos.include.bb2@1228> XINCLUDE "dos.include.bb2"
00004AEE <dos.include.bb2@1244> XINCLUDE "dos.include.bb2"
00004B46 <dos.include.bb2@1245> XINCLUDE "dos.include.bb2"
00004B70 <dos.include.bb2@1246> XINCLUDE "dos.include.bb2"
00004B8E <dos.include.bb2@1247> XINCLUDE "dos.include.bb2"
00004BA4 <dos.include.bb2@1321> XINCLUDE "dos.include.bb2"
00004BAA <dos.include.bb2@1323> XINCLUDE "dos.include.bb2"
00004BB4 <dos.include.bb2@1324> XINCLUDE "dos.include.bb2"
00004BBE <dos.include.bb2@1325> XINCLUDE "dos.include.bb2"
00004BDC <dos.include.bb2@1328> XINCLUDE "dos.include.bb2"
00004BE2 <dos.include.bb2@1329> XINCLUDE "dos.include.bb2"
00004BE8 <dos.include.bb2@1330> XINCLUDE "dos.include.bb2"
00004BF8 <dos.include.bb2@1332> XINCLUDE "dos.include.bb2"
00004BFE <dos.include.bb2@1333> XINCLUDE "dos.include.bb2"
00004C06 <dos.include.bb2@1334> XINCLUDE "dos.include.bb2"
00004C2E <dos.include.bb2@1335> XINCLUDE "dos.include.bb2"
00004C38 <dos.include.bb2@1336> XINCLUDE "dos.include.bb2"
00004C42 <dos.include.bb2@1338> XINCLUDE "dos.include.bb2"
00004C56 <dos.include.bb2@1339> XINCLUDE "dos.include.bb2"
00004C6C <dos.include.bb2@1361> XINCLUDE "dos.include.bb2"
00004C72 <dos.include.bb2@1367> XINCLUDE "dos.include.bb2"
00004C96 <dos.include.bb2@1368> XINCLUDE "dos.include.bb2"
00004CBA <dos.include.bb2@1369> XINCLUDE "dos.include.bb2"
00004CDE <dos.include.bb2@1370> XINCLUDE "dos.include.bb2"
00004CE4 <dos.include.bb2@1371> XINCLUDE "dos.include.bb2"
00004D10 <dos.include.bb2@1372> XINCLUDE "dos.include.bb2"
00004D12 <dos.include.bb2@1373> XINCLUDE "dos.include.bb2"
00004D40 <dos.include.bb2@1374> XINCLUDE "dos.include.bb2"
00004D6A <dos.include.bb2@1390> XINCLUDE "dos.include.bb2"
00004DF4 <dos.include.bb2@1393> XINCLUDE "dos.include.bb2"
00004EBC <dos.include.bb2@1394> XINCLUDE "dos.include.bb2"
00004EC6 <dos.include.bb2@1396> XINCLUDE "dos.include.bb2"
00004F10 <dos.include.bb2@1397> XINCLUDE "dos.include.bb2"
00004F5C <dos.include.bb2@1399> XINCLUDE "dos.include.bb2"
00004F94 <dos.include.bb2@1400> XINCLUDE "dos.include.bb2"
00004FA6 <dos.include.bb2@1401> XINCLUDE "dos.include.bb2"
00004FBC <dos.include.bb2@1402> XINCLUDE "dos.include.bb2"
00004FC2 <dos.include.bb2@1403> XINCLUDE "dos.include.bb2"
00004FD8 <dos.include.bb2@1404> XINCLUDE "dos.include.bb2"
0000500C <dos.include.bb2@1406> XINCLUDE "dos.include.bb2"
00005012 <dos.include.bb2@1407> XINCLUDE "dos.include.bb2"
0000501C <dos.include.bb2@1409> XINCLUDE "dos.include.bb2"
00005036 <dos.include.bb2@1410> XINCLUDE "dos.include.bb2"
00005080 <dos.include.bb2@1440> XINCLUDE "dos.include.bb2"
000050B6 <dos.include.bb2@1442> XINCLUDE "dos.include.bb2"
000050DA <dos.include.bb2@1443> XINCLUDE "dos.include.bb2"
000050E4 <dos.include.bb2@1444> XINCLUDE "dos.include.bb2"
0000510C <dos.include.bb2@1445> XINCLUDE "dos.include.bb2"
00005154 <dos.include.bb2@1448> XINCLUDE "dos.include.bb2"
0000522A <dos.include.bb2@1450> XINCLUDE "dos.include.bb2"
00005254 <dos.include.bb2@1451> XINCLUDE "dos.include.bb2"
00005274 <dos.include.bb2@1452> XINCLUDE "dos.include.bb2"
000052AE <dos.include.bb2@1471> XINCLUDE "dos.include.bb2"
000052B4 <dos.include.bb2@1473> XINCLUDE "dos.include.bb2"
000052BA <dos.include.bb2@1474> XINCLUDE "dos.include.bb2"
000052C2 <dos.include.bb2@1475> XINCLUDE "dos.include.bb2"
000052F8 <dos.include.bb2@1476> XINCLUDE "dos.include.bb2"
00005306 <dos.include.bb2@1477> XINCLUDE "dos.include.bb2"
00005310 <dos.include.bb2@1478> XINCLUDE "dos.include.bb2"
0000533C <dos.include.bb2@1479> XINCLUDE "dos.include.bb2"
0000534A <dos.include.bb2@1480> XINCLUDE "dos.include.bb2"
00005354 <dos.include.bb2@1481> XINCLUDE "dos.include.bb2"
00005382 <dos.include.bb2@1483> XINCLUDE "dos.include.bb2"
00005400 <dos.include.bb2@1486> XINCLUDE "dos.include.bb2"
00005452 <dos.include.bb2@1489> XINCLUDE "dos.include.bb2"
00005464 <dos.include.bb2@1490> XINCLUDE "dos.include.bb2"
000054D2 <dos.include.bb2@1491> XINCLUDE "dos.include.bb2"
000054D8 <dos.include.bb2@1492> XINCLUDE "dos.include.bb2"
00005524 <dos.include.bb2@1493> XINCLUDE "dos.include.bb2"
000055F2 <dos.include.bb2@1497> XINCLUDE "dos.include.bb2"
000056D2 <dos.include.bb2@1498> XINCLUDE "dos.include.bb2"
0000573E <dos.include.bb2@1500> XINCLUDE "dos.include.bb2"
00005744 <dos.include.bb2@1501> XINCLUDE "dos.include.bb2"
00005760 <dos.include.bb2@1502> XINCLUDE "dos.include.bb2"
0000576E <dos.include.bb2@1505> XINCLUDE "dos.include.bb2"
00005774 <dos.include.bb2@1506> XINCLUDE "dos.include.bb2"
00005786 <dos.include.bb2@1509> XINCLUDE "dos.include.bb2"
0000579C <dos.include.bb2@1510> XINCLUDE "dos.include.bb2"
000057A6 <dos.include.bb2@1511> XINCLUDE "dos.include.bb2"
000057C2 <dos.include.bb2@1512> XINCLUDE "dos.include.bb2"
000057EC <dos.include.bb2@1528> XINCLUDE "dos.include.bb2"
0000589E <dos.include.bb2@1529> XINCLUDE "dos.include.bb2"
00005994 <dos.include.bb2@1530> XINCLUDE "dos.include.bb2"
000059BE <dos.include.bb2@1531> XINCLUDE "dos.include.bb2"
000059DC <dos.include.bb2@1532> XINCLUDE "dos.include.bb2"
00005A1A <dos.include.bb2@1551> XINCLUDE "dos.include.bb2"
00005A40 <dos.include.bb2@1553> XINCLUDE "dos.include.bb2"
00005A46 <dos.include.bb2@1554> XINCLUDE "dos.include.bb2"
00005A7C <dos.include.bb2@1555> XINCLUDE "dos.include.bb2"
00005A8A <dos.include.bb2@1556> XINCLUDE "dos.include.bb2"
00005A94 <dos.include.bb2@1557> XINCLUDE "dos.include.bb2"
00005AC0 <dos.include.bb2@1558> XINCLUDE "dos.include.bb2"
00005ACE <dos.include.bb2@1559> XINCLUDE "dos.include.bb2"
00005AD8 <dos.include.bb2@1560> XINCLUDE "dos.include.bb2"
00005B06 <dos.include.bb2@1562> XINCLUDE "dos.include.bb2"
00005B5E <dos.include.bb2@1565> XINCLUDE "dos.include.bb2"
00005C2C <dos.include.bb2@1568> XINCLUDE "dos.include.bb2"
00005D0C <dos.include.bb2@1569> XINCLUDE "dos.include.bb2"
00005D5E <dos.include.bb2@1572> XINCLUDE "dos.include.bb2"
00005D70 <dos.include.bb2@1573> XINCLUDE "dos.include.bb2"
00005E02 <dos.include.bb2@1574> XINCLUDE "dos.include.bb2"
00005E08 <dos.include.bb2@1575> XINCLUDE "dos.include.bb2"
00005E78 <dos.include.bb2@1576> XINCLUDE "dos.include.bb2"
00005EE4 <dos.include.bb2@1578> XINCLUDE "dos.include.bb2"
00005EEA <dos.include.bb2@1579> XINCLUDE "dos.include.bb2"
00005EF4 <dos.include.bb2@1581> XINCLUDE "dos.include.bb2"
00005F08 <dos.include.bb2@1582> XINCLUDE "dos.include.bb2"
00005F66 <dos.include.bb2@1583> XINCLUDE "dos.include.bb2"
00005F7C <dos.include.bb2@1584> XINCLUDE "dos.include.bb2"
00005F82 <dos.include.bb2@1585> XINCLUDE "dos.include.bb2"
00005F88 <dos.include.bb2@1587> XINCLUDE "dos.include.bb2"
00005F9C <dos.include.bb2@1588> XINCLUDE "dos.include.bb2"
00005FD6 <dos.include.bb2@1589> XINCLUDE "dos.include.bb2"
00005FEC <dos.include.bb2@1590> XINCLUDE "dos.include.bb2"
00005FF2 <dos.include.bb2@1591> XINCLUDE "dos.include.bb2"
00006000 <dos.include.bb2@1597> XINCLUDE "dos.include.bb2"
00006006 <dos.include.bb2@1598> XINCLUDE "dos.include.bb2"
00006010 <dos.include.bb2@1601> XINCLUDE "dos.include.bb2"
0000602C <dos.include.bb2@1602> XINCLUDE "dos.include.bb2"
0000607A <dos.include.bb2@1743> XINCLUDE "dos.include.bb2"
000060B0 <dos.include.bb2@1745> XINCLUDE "dos.include.bb2"
000060D6 <dos.include.bb2@1746> XINCLUDE "dos.include.bb2"
000060E0 <dos.include.bb2@1747> XINCLUDE "dos.include.bb2"
0000615C <dos.include.bb2@1748> XINCLUDE "dos.include.bb2"
00006162 <dos.include.bb2@1749> XINCLUDE "dos.include.bb2"
0000619C <dos.include.bb2@1750> XINCLUDE "dos.include.bb2"
000061D4 <dos.include.bb2@1751> XINCLUDE "dos.include.bb2"
00006244 <dos.include.bb2@1752> XINCLUDE "dos.include.bb2"
00006290 <dos.include.bb2@1755> XINCLUDE "dos.include.bb2"
00006298 <dos.include.bb2@1756> XINCLUDE "dos.include.bb2"
0000629E <dos.include.bb2@1757> XINCLUDE "dos.include.bb2"
000062AC <dos.include.bb2@1759> XINCLUDE "dos.include.bb2"
000062B6 <dos.include.bb2@1760> XINCLUDE "dos.include.bb2"
000062E2 <dos.include.bb2@1761> XINCLUDE "dos.include.bb2"
000062F0 <dos.include.bb2@1762> XINCLUDE "dos.include.bb2"
000062FA <dos.include.bb2@1763> XINCLUDE "dos.include.bb2"
00006322 <dos.include.bb2@1764> XINCLUDE "dos.include.bb2"
000063A0 <dos.include.bb2@1765> XINCLUDE "dos.include.bb2"
000063F2 <dos.include.bb2@1766> XINCLUDE "dos.include.bb2"
00006404 <dos.include.bb2@1767> XINCLUDE "dos.include.bb2"
00006472 <dos.include.bb2@1768> XINCLUDE "dos.include.bb2"
00006478 <dos.include.bb2@1769> XINCLUDE "dos.include.bb2"
000064C4 <dos.include.bb2@1770> XINCLUDE "dos.include.bb2"
00006508 <dos.include.bb2@1772> XINCLUDE "dos.include.bb2"
0000650E <dos.include.bb2@1773> XINCLUDE "dos.include.bb2"
00006524 <dos.include.bb2@1774> XINCLUDE "dos.include.bb2"
0000652A <dos.include.bb2@1775> XINCLUDE "dos.include.bb2"
00006538 <dos.include.bb2@1777> XINCLUDE "dos.include.bb2"
00006546 <dos.include.bb2@1779> XINCLUDE "dos.include.bb2"
0000654C <dos.include.bb2@1780> XINCLUDE "dos.include.bb2"
00006560 <dos.include.bb2@1783> XINCLUDE "dos.include.bb2"
0000658E <dos.include.bb2@1784> XINCLUDE "dos.include.bb2"
00006598 <dos.include.bb2@1785> XINCLUDE "dos.include.bb2"
000065AA <dos.include.bb2@1786> XINCLUDE "dos.include.bb2"
000065D2 <dos.include.bb2@1787> XINCLUDE "dos.include.bb2"
000065DE <dos.include.bb2@1789> XINCLUDE "dos.include.bb2"
000065F4 <dos.include.bb2@1790> XINCLUDE "dos.include.bb2"
0000660A <dos.include.bb2@1791> XINCLUDE "dos.include.bb2"
00006620 <dos.include.bb2@1792> XINCLUDE "dos.include.bb2"
00006626 <dos.include.bb2@1793> XINCLUDE "dos.include.bb2"
0000662C <dos.include.bb2@1794> XINCLUDE "dos.include.bb2"
00006632 <dos.include.bb2@1795> XINCLUDE "dos.include.bb2"
0000664A <dos.include.bb2@1796> XINCLUDE "dos.include.bb2"
00006654 <dos.include.bb2@1800> XINCLUDE "dos.include.bb2"
00006670 <dos.include.bb2@1801> XINCLUDE "dos.include.bb2"
0000669A <dos.include.bb2@2088> XINCLUDE "dos.include.bb2"
000066AE <dos.include.bb2@2089> XINCLUDE "dos.include.bb2"
000066EC <dos.include.bb2@2090> XINCLUDE "dos.include.bb2"
000067D2 <dos.include.bb2@2091> XINCLUDE "dos.include.bb2"
000067D8 <dos.include.bb2@2092> XINCLUDE "dos.include.bb2"
00006828 <dos.include.bb2@2093> XINCLUDE "dos.include.bb2"
00006852 <dos.include.bb2@2094> XINCLUDE "dos.include.bb2"
00006870 <dos.include.bb2@2095> XINCLUDE "dos.include.bb2"
0000689A <dos.include.bb2@2119> XINCLUDE "dos.include.bb2"
000068AE <dos.include.bb2@2120> XINCLUDE "dos.include.bb2"
000068EC <dos.include.bb2@2121> XINCLUDE "dos.include.bb2"
000069D2 <dos.include.bb2@2122> XINCLUDE "dos.include.bb2"
000069D8 <dos.include.bb2@2123> XINCLUDE "dos.include.bb2"
00006A4A <dos.include.bb2@2124> XINCLUDE "dos.include.bb2"
00006A74 <dos.include.bb2@2125> XINCLUDE "dos.include.bb2"
00006A92 <dos.include.bb2@2126> XINCLUDE "dos.include.bb2"
00006ACC <dos.include.bb2@2152> XINCLUDE "dos.include.bb2"
00006B04 <dos.include.bb2@2153> XINCLUDE "dos.include.bb2"
00006B5C <dos.include.bb2@2154> XINCLUDE "dos.include.bb2"
00006BC0 <dos.include.bb2@2155> XINCLUDE "dos.include.bb2"
00006BEA <dos.include.bb2@2157> XINCLUDE "dos.include.bb2"
00006C0A <dos.include.bb2@2158> XINCLUDE "dos.include.bb2"
00006C34 <dos.include.bb2@2175> XINCLUDE "dos.include.bb2"
00006C3A <dos.include.bb2@2176> XINCLUDE "dos.include.bb2"
00006C50 <dos.include.bb2@2177> XINCLUDE "dos.include.bb2"
00006C5A <dos.include.bb2@2178> XINCLUDE "dos.include.bb2"
00006C60 <dos.include.bb2@2179> XINCLUDE "dos.include.bb2"
00006C70 <dos.include.bb2@2180> XINCLUDE "dos.include.bb2"
00006C7A <dos.include.bb2@2182> XINCLUDE "dos.include.bb2"
00006C94 <dos.include.bb2@2183> XINCLUDE "dos.include.bb2"
00006CC2 <dos.include.bb2@2203> XINCLUDE "dos.include.bb2"
00006CDC <dos.include.bb2@2204> XINCLUDE "dos.include.bb2"
00006CFA <dos.include.bb2@2205> XINCLUDE "dos.include.bb2"
00006D04 <dos.include.bb2@2206> XINCLUDE "dos.include.bb2"
00006D14 <dos.include.bb2@2207> XINCLUDE "dos.include.bb2"
00006D1C <dos.include.bb2@2208> XINCLUDE "dos.include.bb2"
00006D24 <dos.include.bb2@2210> XINCLUDE "dos.include.bb2"
00006D3E <dos.include.bb2@2211> XINCLUDE "dos.include.bb2"
00006D7C <dos.include.bb2@2248> XINCLUDE "dos.include.bb2"
00006D9C <dos.include.bb2@2250> XINCLUDE "dos.include.bb2"
00006DC2 <dos.include.bb2@2251> XINCLUDE "dos.include.bb2"
00006DCA <dos.include.bb2@2252> XINCLUDE "dos.include.bb2"
00006DDE <dos.include.bb2@2253> XINCLUDE "dos.include.bb2"
00006DE8 <dos.include.bb2@2254> XINCLUDE "dos.include.bb2"
00006E50 <dos.include.bb2@2255> XINCLUDE "dos.include.bb2"
00006E64 <dos.include.bb2@2256> XINCLUDE "dos.include.bb2"
00006E94 <dos.include.bb2@2257> XINCLUDE "dos.include.bb2"
00006E9A <dos.include.bb2@2258> XINCLUDE "dos.include.bb2"
00006ECA <dos.include.bb2@2259> XINCLUDE "dos.include.bb2"
00006EF4 <dos.include.bb2@2261> XINCLUDE "dos.include.bb2"
00006F14 <dos.include.bb2@2262> XINCLUDE "dos.include.bb2"
00006F34 <dos.include.bb2@2263> XINCLUDE "dos.include.bb2"
00006FB8 <dos.include.bb2@2264> XINCLUDE "dos.include.bb2"
00006FD0 <dos.include.bb2@2265> XINCLUDE "dos.include.bb2"
00006FE4 <dos.include.bb2@2266> XINCLUDE "dos.include.bb2"
00006FF8 <dos.include.bb2@2267> XINCLUDE "dos.include.bb2"
0000701C <dos.include.bb2@2268> XINCLUDE "dos.include.bb2"
00007022 <dos.include.bb2@2269> XINCLUDE "dos.include.bb2"
00007046 <dos.include.bb2@2270> XINCLUDE "dos.include.bb2"
00007050 <dos.include.bb2@2272> XINCLUDE "dos.include.bb2"
0000705E <dos.include.bb2@2273> XINCLUDE "dos.include.bb2"
00007072 <dos.include.bb2@2274> XINCLUDE "dos.include.bb2"
00007108 <dos.include.bb2@2275> XINCLUDE "dos.include.bb2"
0000710E <dos.include.bb2@2276> XINCLUDE "dos.include.bb2"
000071A4 <dos.include.bb2@2277> XINCLUDE "dos.include.bb2"
000071AA <dos.include.bb2@2281> XINCLUDE "dos.include.bb2"
000071BE <dos.include.bb2@2282> XINCLUDE "dos.include.bb2"
000071CC <dos.include.bb2@2283> XINCLUDE "dos.include.bb2"
000071E0 <dos.include.bb2@2284> XINCLUDE "dos.include.bb2"
00007276 <dos.include.bb2@2285> XINCLUDE "dos.include.bb2"
0000727C <dos.include.bb2@2286> XINCLUDE "dos.include.bb2"
00007312 <dos.include.bb2@2287> XINCLUDE "dos.include.bb2"
00007318 <dos.include.bb2@2291> XINCLUDE "dos.include.bb2"
0000732C <dos.include.bb2@2293> XINCLUDE "dos.include.bb2"
0000733C <dos.include.bb2@2295> XINCLUDE "dos.include.bb2"
0000734A <dos.include.bb2@2297> XINCLUDE "dos.include.bb2"
00007354 <dos.include.bb2@2298> XINCLUDE "dos.include.bb2"
00007370 <dos.include.bb2@2299> XINCLUDE "dos.include.bb2"
0000739E <dos.include.bb2@2417> XINCLUDE "dos.include.bb2"
000073C0 <dos.include.bb2@2418> XINCLUDE "dos.include.bb2"
000073C8 <dos.include.bb2@2419> XINCLUDE "dos.include.bb2"
000073D6 <dos.include.bb2@2420> XINCLUDE "dos.include.bb2"
000073F0 <dos.include.bb2@2422> XINCLUDE "dos.include.bb2"
0000741E <dos.include.bb2@2441> XINCLUDE "dos.include.bb2"
00007432 <dos.include.bb2@2442> XINCLUDE "dos.include.bb2"
00007466 <dos.include.bb2@2443> XINCLUDE "dos.include.bb2"
00007480 <dos.include.bb2@2445> XINCLUDE "dos.include.bb2"
00007488 <dos.include.bb2@2446> XINCLUDE "dos.include.bb2"
00007496 <dos.include.bb2@2447> XINCLUDE "dos.include.bb2"
000074B0 <dos.include.bb2@2449> XINCLUDE "dos.include.bb2"
000074DA <dos.include.bb2@2585> XINCLUDE "dos.include.bb2"
000074E6 <dos.include.bb2@2587> XINCLUDE "dos.include.bb2"
00007506 <dos.include.bb2@2588> XINCLUDE "dos.include.bb2"
0000752C <dos.include.bb2@2589> XINCLUDE "dos.include.bb2"
00007558 <dos.include.bb2@2590> XINCLUDE "dos.include.bb2"
00007570 <dos.include.bb2@2591> XINCLUDE "dos.include.bb2"
0000757E <dos.include.bb2@2593> XINCLUDE "dos.include.bb2"
00007584 <dos.include.bb2@2594> XINCLUDE "dos.include.bb2"
00007590 <dos.include.bb2@2595> XINCLUDE "dos.include.bb2"
00007596 <dos.include.bb2@2597> XINCLUDE "dos.include.bb2"
000075A2 <dos.include.bb2@2598> XINCLUDE "dos.include.bb2"
000075B2 <dos.include.bb2@2600> XINCLUDE "dos.include.bb2"
000075B8 <dos.include.bb2@2601> XINCLUDE "dos.include.bb2"
000075C4 <dos.include.bb2@2602> XINCLUDE "dos.include.bb2"
000075CE <dos.include.bb2@2604> XINCLUDE "dos.include.bb2"
000075E8 <dos.include.bb2@2605> XINCLUDE "dos.include.bb2"
00007602 <dos.include.bb2@2712> XINCLUDE "dos.include.bb2"
00007640 <dos.include.bb2@2713> XINCLUDE "dos.include.bb2"
0000765A <dos.include.bb2@2714> XINCLUDE "dos.include.bb2"
00007664 <dos.include.bb2@2715> XINCLUDE "dos.include.bb2"
0000766A <dos.include.bb2@2716> XINCLUDE "dos.include.bb2"
0000766A <AmiBlitz3.ab2@82> XINCLUDE "dos.include.bb2"
00007678 <AmiBlitz3.ab2@84> If dos_FromCLI{}
0000767E <AmiBlitz3.ab2@85>   CLIMode.l=True
0000768A <AmiBlitz3.ab2@86>   error_SetFlags{#error_stdout}
0000768A <common.ab3@1> XINCLUDE "/Shared/common.ab3"
00007690 <common.ab3@214> XINCLUDE "/Shared/common.ab3"
00007692 <common.ab3@215> XINCLUDE "/Shared/common.ab3"
00007822 <common.ab3@216> XINCLUDE "/Shared/common.ab3"
00007826 <common.ab3@217> XINCLUDE "/Shared/common.ab3"
0000782A <common.ab3@219> XINCLUDE "/Shared/common.ab3"
0000782E <common.ab3@220> XINCLUDE "/Shared/common.ab3"
00007832 <common.ab3@222> XINCLUDE "/Shared/common.ab3"
00007836 <common.ab3@223> XINCLUDE "/Shared/common.ab3"
0000783A <common.ab3@224> XINCLUDE "/Shared/common.ab3"
0000783E <common.ab3@225> XINCLUDE "/Shared/common.ab3"
00007842 <common.ab3@226> XINCLUDE "/Shared/common.ab3"
00007846 <common.ab3@227> XINCLUDE "/Shared/common.ab3"
0000784A <common.ab3@228> XINCLUDE "/Shared/common.ab3"
0000784E <common.ab3@229> XINCLUDE "/Shared/common.ab3"
00007852 <common.ab3@230> XINCLUDE "/Shared/common.ab3"
00007856 <common.ab3@232> XINCLUDE "/Shared/common.ab3"
0000785A <common.ab3@234> XINCLUDE "/Shared/common.ab3"
0000785E <common.ab3@235> XINCLUDE "/Shared/common.ab3"
00007862 <common.ab3@236> XINCLUDE "/Shared/common.ab3"
00007866 <common.ab3@237> XINCLUDE "/Shared/common.ab3"
0000786A <common.ab3@238> XINCLUDE "/Shared/common.ab3"
0000786E <common.ab3@239> XINCLUDE "/Shared/common.ab3"
00007872 <common.ab3@240> XINCLUDE "/Shared/common.ab3"
00007876 <common.ab3@241> XINCLUDE "/Shared/common.ab3"
0000787A <common.ab3@242> XINCLUDE "/Shared/common.ab3"
0000787E <common.ab3@243> XINCLUDE "/Shared/common.ab3"
00007886 <common.ab3@246> XINCLUDE "/Shared/common.ab3"
0000788A <common.ab3@247> XINCLUDE "/Shared/common.ab3"
0000788C <common.ab3@248> XINCLUDE "/Shared/common.ab3"
00007890 <common.ab3@249> XINCLUDE "/Shared/common.ab3"
00007892 <common.ab3@250> XINCLUDE "/Shared/common.ab3"
00007896 <common.ab3@251> XINCLUDE "/Shared/common.ab3"
0000789A <common.ab3@252> XINCLUDE "/Shared/common.ab3"
0000789E <common.ab3@253> XINCLUDE "/Shared/common.ab3"
000078A2 <common.ab3@254> XINCLUDE "/Shared/common.ab3"
000078A6 <common.ab3@255> XINCLUDE "/Shared/common.ab3"
000078AE <common.ab3@256> XINCLUDE "/Shared/common.ab3"
000078B6 <common.ab3@257> XINCLUDE "/Shared/common.ab3"
000078BA <common.ab3@258> XINCLUDE "/Shared/common.ab3"
000078BE <common.ab3@259> XINCLUDE "/Shared/common.ab3"
000078C2 <common.ab3@260> XINCLUDE "/Shared/common.ab3"
000078C4 <common.ab3@262> XINCLUDE "/Shared/common.ab3"
00007984 <common.ab3@263> XINCLUDE "/Shared/common.ab3"
000079CC <common.ab3@264> XINCLUDE "/Shared/common.ab3"
000079D0 <common.ab3@266> XINCLUDE "/Shared/common.ab3"
000079D2 <common.ab3@267> XINCLUDE "/Shared/common.ab3"
000079D6 <common.ab3@268> XINCLUDE "/Shared/common.ab3"
000079D8 <common.ab3@269> XINCLUDE "/Shared/common.ab3"
000079DA <common.ab3@270> XINCLUDE "/Shared/common.ab3"
000079DC <common.ab3@271> XINCLUDE "/Shared/common.ab3"
000079DE <common.ab3@272> XINCLUDE "/Shared/common.ab3"
000079E0 <common.ab3@274> XINCLUDE "/Shared/common.ab3"
000079E2 <common.ab3@275> XINCLUDE "/Shared/common.ab3"
000079E3 <common.ab3@277> XINCLUDE "/Shared/common.ab3"
000079E4 <common.ab3@278> XINCLUDE "/Shared/common.ab3"
000079E6 <common.ab3@279> XINCLUDE "/Shared/common.ab3"
000079E8 <common.ab3@280> XINCLUDE "/Shared/common.ab3"
000079EA <common.ab3@282> XINCLUDE "/Shared/common.ab3"
000079EC <common.ab3@285> XINCLUDE "/Shared/common.ab3"
000079EE <common.ab3@287> XINCLUDE "/Shared/common.ab3"
000079F0 <common.ab3@289> XINCLUDE "/Shared/common.ab3"
000079F4 <common.ab3@291> XINCLUDE "/Shared/common.ab3"
000079F6 <common.ab3@293> XINCLUDE "/Shared/common.ab3"
000079F8 <common.ab3@294> XINCLUDE "/Shared/common.ab3"
000079FA <common.ab3@296> XINCLUDE "/Shared/common.ab3"
000079FE <common.ab3@298> XINCLUDE "/Shared/common.ab3"
00007A00 <common.ab3@299> XINCLUDE "/Shared/common.ab3"
00007A02 <common.ab3@300> XINCLUDE "/Shared/common.ab3"
00007A06 <common.ab3@303> XINCLUDE "/Shared/common.ab3"
00007A08 <common.ab3@304> XINCLUDE "/Shared/common.ab3"
00007A0A <common.ab3@305> XINCLUDE "/Shared/common.ab3"
00007A0C <common.ab3@306> XINCLUDE "/Shared/common.ab3"
00007A0E <common.ab3@308> XINCLUDE "/Shared/common.ab3"
00007A10 <common.ab3@309> XINCLUDE "/Shared/common.ab3"
00007A14 <common.ab3@311> XINCLUDE "/Shared/common.ab3"
00007A16 <common.ab3@312> XINCLUDE "/Shared/common.ab3"
00007A18 <common.ab3@313> XINCLUDE "/Shared/common.ab3"
00007A1A <common.ab3@317> XINCLUDE "/Shared/common.ab3"
00007A1C <common.ab3@318> XINCLUDE "/Shared/common.ab3"
00007A20 <common.ab3@319> XINCLUDE "/Shared/common.ab3"
00007A22 <common.ab3@325> XINCLUDE "/Shared/common.ab3"
00007A24 <common.ab3@327> XINCLUDE "/Shared/common.ab3"
00007A26 <common.ab3@329> XINCLUDE "/Shared/common.ab3"
00007A28 <common.ab3@330> XINCLUDE "/Shared/common.ab3"
00007A2A <common.ab3@331> XINCLUDE "/Shared/common.ab3"
00007A2E <common.ab3@332> XINCLUDE "/Shared/common.ab3"
00007A30 <common.ab3@333> XINCLUDE "/Shared/common.ab3"
00007A32 <common.ab3@334> XINCLUDE "/Shared/common.ab3"
00007A34 <common.ab3@335> XINCLUDE "/Shared/common.ab3"
00007A36 <common.ab3@336> XINCLUDE "/Shared/common.ab3"
00007A38 <common.ab3@338> XINCLUDE "/Shared/common.ab3"
00007A3A <common.ab3@340> XINCLUDE "/Shared/common.ab3"
00007A3C <common.ab3@342> XINCLUDE "/Shared/common.ab3"
00007A40 <common.ab3@343> XINCLUDE "/Shared/common.ab3"
00007A42 <common.ab3@344> XINCLUDE "/Shared/common.ab3"
00007A70 <common.ab3@345> XINCLUDE "/Shared/common.ab3"
00007A7A <common.ab3@346> XINCLUDE "/Shared/common.ab3"
00007A7E <common.ab3@347> XINCLUDE "/Shared/common.ab3"
00007A80 <common.ab3@349> XINCLUDE "/Shared/common.ab3"
00007A82 <common.ab3@350> XINCLUDE "/Shared/common.ab3"
00007A86 <common.ab3@351> XINCLUDE "/Shared/common.ab3"
00007A8A <common.ab3@352> XINCLUDE "/Shared/common.ab3"
00007A93 <common.ab3@353> XINCLUDE "/Shared/common.ab3"
00007A96 <common.ab3@354> XINCLUDE "/Shared/common.ab3"
00007AC3 <common.ab3@355> XINCLUDE "/Shared/common.ab3"
00007B03 <common.ab3@356> XINCLUDE "/Shared/common.ab3"
00007B0F <common.ab3@357> XINCLUDE "/Shared/common.ab3"
00007B5F <common.ab3@358> XINCLUDE "/Shared/common.ab3"
00007B6B <common.ab3@359> XINCLUDE "/Shared/common.ab3"
00007BBB <common.ab3@360> XINCLUDE "/Shared/common.ab3"
00007CB7 <common.ab3@361> XINCLUDE "/Shared/common.ab3"
00007CB9 <common.ab3@362> XINCLUDE "/Shared/common.ab3"
00007D79 <common.ab3@363> XINCLUDE "/Shared/common.ab3"
00007DB9 <common.ab3@364> XINCLUDE "/Shared/common.ab3"
00007DBB <common.ab3@365> XINCLUDE "/Shared/common.ab3"
00007DBC <common.ab3@366> XINCLUDE "/Shared/common.ab3"
00007DC0 <common.ab3@369> XINCLUDE "/Shared/common.ab3"
00007DC4 <common.ab3@371> XINCLUDE "/Shared/common.ab3"
00007DC8 <common.ab3@372> XINCLUDE "/Shared/common.ab3"
00007DCC <common.ab3@373> XINCLUDE "/Shared/common.ab3"
00007DD0 <common.ab3@375> XINCLUDE "/Shared/common.ab3"
00007DD4 <common.ab3@377> XINCLUDE "/Shared/common.ab3"
00007DD8 <common.ab3@378> XINCLUDE "/Shared/common.ab3"
00007DDC <common.ab3@379> XINCLUDE "/Shared/common.ab3"
00007DE0 <common.ab3@380> XINCLUDE "/Shared/common.ab3"
00007DE4 <common.ab3@381> XINCLUDE "/Shared/common.ab3"
00007DE8 <common.ab3@382> XINCLUDE "/Shared/common.ab3"
00007DEC <common.ab3@383> XINCLUDE "/Shared/common.ab3"
00007DF0 <common.ab3@384> XINCLUDE "/Shared/common.ab3"
00007DF4 <common.ab3@386> XINCLUDE "/Shared/common.ab3"
00007DF8 <common.ab3@388> XINCLUDE "/Shared/common.ab3"
00007DFC <common.ab3@390> XINCLUDE "/Shared/common.ab3"
00007E00 <common.ab3@392> XINCLUDE "/Shared/common.ab3"
00007E04 <common.ab3@393> XINCLUDE "/Shared/common.ab3"
00007E0E <common.ab3@394> XINCLUDE "/Shared/common.ab3"
00007E12 <common.ab3@395> XINCLUDE "/Shared/common.ab3"
00007E16 <common.ab3@398> XINCLUDE "/Shared/common.ab3"
00007E18 <common.ab3@399> XINCLUDE "/Shared/common.ab3"
00007E1A <common.ab3@400> XINCLUDE "/Shared/common.ab3"
00007E38 <common.ab3@401> XINCLUDE "/Shared/common.ab3"
00007E3C <common.ab3@402> XINCLUDE "/Shared/common.ab3"
00007E3E <common.ab3@404> XINCLUDE "/Shared/common.ab3"
00007E42 <common.ab3@405> XINCLUDE "/Shared/common.ab3"
00007E76 <common.ab3@406> XINCLUDE "/Shared/common.ab3"
00007E7A <common.ab3@407> XINCLUDE "/Shared/common.ab3"
00007E88 <common.ab3@409> XINCLUDE "/Shared/common.ab3"
00007E9A <common.ab3@410> XINCLUDE "/Shared/common.ab3"
00007E9C <common.ab3@411> XINCLUDE "/Shared/common.ab3"
00007EB0 <common.ab3@412> XINCLUDE "/Shared/common.ab3"
00007EC6 <common.ab3@413> XINCLUDE "/Shared/common.ab3"
00007EDC <common.ab3@414> XINCLUDE "/Shared/common.ab3"
00007EF2 <common.ab3@415> XINCLUDE "/Shared/common.ab3"
00007F08 <common.ab3@416> XINCLUDE "/Shared/common.ab3"
00007F0A <common.ab3@417> XINCLUDE "/Shared/common.ab3"
00007F0C <common.ab3@418> XINCLUDE "/Shared/common.ab3"
00007F10 <common.ab3@420> XINCLUDE "/Shared/common.ab3"
00007F14 <common.ab3@422> XINCLUDE "/Shared/common.ab3"
00007F18 <common.ab3@424> XINCLUDE "/Shared/common.ab3"
00007F1C <common.ab3@425> XINCLUDE "/Shared/common.ab3"
00007F20 <common.ab3@426> XINCLUDE "/Shared/common.ab3"
00007F24 <common.ab3@427> XINCLUDE "/Shared/common.ab3"
00007F28 <common.ab3@428> XINCLUDE "/Shared/common.ab3"
00007F2C <common.ab3@429> XINCLUDE "/Shared/common.ab3"
00007F30 <common.ab3@430> XINCLUDE "/Shared/common.ab3"
00007F34 <common.ab3@431> XINCLUDE "/Shared/common.ab3"
00007F3A <common.ab3@432> XINCLUDE "/Shared/common.ab3"
00007F4C <common.ab3@433> XINCLUDE "/Shared/common.ab3"
00007F4E <common.ab3@437> XINCLUDE "/Shared/common.ab3"
00007F52 <common.ab3@438> XINCLUDE "/Shared/common.ab3"
00007F54 <common.ab3@439> XINCLUDE "/Shared/common.ab3"
00007F58 <common.ab3@440> XINCLUDE "/Shared/common.ab3"
00007F5A <common.ab3@441> XINCLUDE "/Shared/common.ab3"
00007F5E <common.ab3@442> XINCLUDE "/Shared/common.ab3"
00007F60 <common.ab3@443> XINCLUDE "/Shared/common.ab3"
00007F64 <common.ab3@444> XINCLUDE "/Shared/common.ab3"
00007F66 <common.ab3@445> XINCLUDE "/Shared/common.ab3"
00007F6A <common.ab3@446> XINCLUDE "/Shared/common.ab3"
00007F6C <common.ab3@447> XINCLUDE "/Shared/common.ab3"
00007F70 <common.ab3@448> XINCLUDE "/Shared/common.ab3"
00007F72 <common.ab3@449> XINCLUDE "/Shared/common.ab3"
00007F76 <common.ab3@450> XINCLUDE "/Shared/common.ab3"
00007F78 <common.ab3@451> XINCLUDE "/Shared/common.ab3"
00007F7C <common.ab3@452> XINCLUDE "/Shared/common.ab3"
00007F7E <common.ab3@453> XINCLUDE "/Shared/common.ab3"
00007F82 <common.ab3@454> XINCLUDE "/Shared/common.ab3"
00007F84 <common.ab3@455> XINCLUDE "/Shared/common.ab3"
00007F88 <common.ab3@456> XINCLUDE "/Shared/common.ab3"
00007F8A <common.ab3@457> XINCLUDE "/Shared/common.ab3"
00007F8E <common.ab3@458> XINCLUDE "/Shared/common.ab3"
00007F90 <common.ab3@459> XINCLUDE "/Shared/common.ab3"
00007F94 <common.ab3@460> XINCLUDE "/Shared/common.ab3"
00007F96 <common.ab3@461> XINCLUDE "/Shared/common.ab3"
00007F9A <common.ab3@462> XINCLUDE "/Shared/common.ab3"
00007F9C <common.ab3@463> XINCLUDE "/Shared/common.ab3"
00007FA0 <common.ab3@464> XINCLUDE "/Shared/common.ab3"
00007FA2 <common.ab3@465> XINCLUDE "/Shared/common.ab3"
00007FB6 <common.ab3@469> XINCLUDE "/Shared/common.ab3"
00007FCA <common.ab3@470> XINCLUDE "/Shared/common.ab3"
00007FDE <common.ab3@471> XINCLUDE "/Shared/common.ab3"
00007FE0 <common.ab3@472> XINCLUDE "/Shared/common.ab3"
00007FE4 <common.ab3@473> XINCLUDE "/Shared/common.ab3"
00007FE8 <common.ab3@474> XINCLUDE "/Shared/common.ab3"
00007FEC <common.ab3@475> XINCLUDE "/Shared/common.ab3"
00007FF0 <common.ab3@476> XINCLUDE "/Shared/common.ab3"
00007FF4 <common.ab3@477> XINCLUDE "/Shared/common.ab3"
00007FF8 <common.ab3@478> XINCLUDE "/Shared/common.ab3"
00007FFC <common.ab3@479> XINCLUDE "/Shared/common.ab3"
00007FFD <common.ab3@480> XINCLUDE "/Shared/common.ab3"
00007FFE <common.ab3@481> XINCLUDE "/Shared/common.ab3"
00007FFF <common.ab3@482> XINCLUDE "/Shared/common.ab3"
00008002 <common.ab3@483> XINCLUDE "/Shared/common.ab3"
00008006 <common.ab3@484> XINCLUDE "/Shared/common.ab3"
0000800A <common.ab3@485> XINCLUDE "/Shared/common.ab3"
0000800E <common.ab3@486> XINCLUDE "/Shared/common.ab3"
00008012 <common.ab3@487> XINCLUDE "/Shared/common.ab3"
00008016 <common.ab3@488> XINCLUDE "/Shared/common.ab3"
0000801A <common.ab3@489> XINCLUDE "/Shared/common.ab3"
0000801B <common.ab3@490> XINCLUDE "/Shared/common.ab3"
0000801C <common.ab3@491> XINCLUDE "/Shared/common.ab3"
0000801E <common.ab3@492> XINCLUDE "/Shared/common.ab3"
00008022 <common.ab3@493> XINCLUDE "/Shared/common.ab3"
00008026 <common.ab3@494> XINCLUDE "/Shared/common.ab3"
0000802A <common.ab3@495> XINCLUDE "/Shared/common.ab3"
0000802E <common.ab3@497> XINCLUDE "/Shared/common.ab3"
00008032 <common.ab3@498> XINCLUDE "/Shared/common.ab3"
00008036 <common.ab3@499> XINCLUDE "/Shared/common.ab3"
0000803A <common.ab3@500> XINCLUDE "/Shared/common.ab3"
0000803E <common.ab3@501> XINCLUDE "/Shared/common.ab3"
00008042 <common.ab3@502> XINCLUDE "/Shared/common.ab3"
00008046 <common.ab3@503> XINCLUDE "/Shared/common.ab3"
0000804A <common.ab3@504> XINCLUDE "/Shared/common.ab3"
0000804E <common.ab3@508> XINCLUDE "/Shared/common.ab3"
00008052 <common.ab3@509> XINCLUDE "/Shared/common.ab3"
00008056 <common.ab3@510> XINCLUDE "/Shared/common.ab3"
00008058 <common.ab3@511> XINCLUDE "/Shared/common.ab3"
00008059 <common.ab3@512> XINCLUDE "/Shared/common.ab3"
0000805D <common.ab3@513> XINCLUDE "/Shared/common.ab3"
00008061 <common.ab3@514> XINCLUDE "/Shared/common.ab3"
00008065 <common.ab3@515> XINCLUDE "/Shared/common.ab3"
00008069 <common.ab3@516> XINCLUDE "/Shared/common.ab3"
0000806A <common.ab3@518> XINCLUDE "/Shared/common.ab3"
0000806A <AmiBlitz3.ab2@89> XINCLUDE "/Shared/common.ab3"
0000806A <preprocessor.include.ab3@1> XINCLUDE "/Shared/preprocessor.include.ab3"
0000806A <hashmap.include.bb2@1> XINCLUDE "/Shared/preprocessor.include.ab3"
00008088 <hashmap.include.bb2@34> XINCLUDE "/Shared/preprocessor.include.ab3"
00008090 <hashmap.include.bb2@35> XINCLUDE "/Shared/preprocessor.include.ab3"
000080BE <hashmap.include.bb2@36> XINCLUDE "/Shared/preprocessor.include.ab3"
000080EE <hashmap.include.bb2@37> XINCLUDE "/Shared/preprocessor.include.ab3"
000080FE <hashmap.include.bb2@38> XINCLUDE "/Shared/preprocessor.include.ab3"
00008108 <hashmap.include.bb2@39> XINCLUDE "/Shared/preprocessor.include.ab3"
0000810E <hashmap.include.bb2@40> XINCLUDE "/Shared/preprocessor.include.ab3"
00008130 <hashmap.include.bb2@43> XINCLUDE "/Shared/preprocessor.include.ab3"
0000814E <hashmap.include.bb2@44> XINCLUDE "/Shared/preprocessor.include.ab3"
00008160 <hashmap.include.bb2@45> XINCLUDE "/Shared/preprocessor.include.ab3"
00008188 <hashmap.include.bb2@46> XINCLUDE "/Shared/preprocessor.include.ab3"
0000818E <hashmap.include.bb2@47> XINCLUDE "/Shared/preprocessor.include.ab3"
000081A8 <hashmap.include.bb2@50> XINCLUDE "/Shared/preprocessor.include.ab3"
000081C0 <hashmap.include.bb2@51> XINCLUDE "/Shared/preprocessor.include.ab3"
000081D2 <hashmap.include.bb2@52> XINCLUDE "/Shared/preprocessor.include.ab3"
000081E0 <hashmap.include.bb2@53> XINCLUDE "/Shared/preprocessor.include.ab3"
00008214 <hashmap.include.bb2@54> XINCLUDE "/Shared/preprocessor.include.ab3"
00008222 <hashmap.include.bb2@55> XINCLUDE "/Shared/preprocessor.include.ab3"
0000822C <hashmap.include.bb2@56> XINCLUDE "/Shared/preprocessor.include.ab3"
0000823E <hashmap.include.bb2@57> XINCLUDE "/Shared/preprocessor.include.ab3"
0000827C <hashmap.include.bb2@58> XINCLUDE "/Shared/preprocessor.include.ab3"
0000828C <hashmap.include.bb2@59> XINCLUDE "/Shared/preprocessor.include.ab3"
00008292 <hashmap.include.bb2@61> XINCLUDE "/Shared/preprocessor.include.ab3"
000082A2 <hashmap.include.bb2@62> XINCLUDE "/Shared/preprocessor.include.ab3"
000082B2 <hashmap.include.bb2@64> XINCLUDE "/Shared/preprocessor.include.ab3"
000082C0 <hashmap.include.bb2@66> XINCLUDE "/Shared/preprocessor.include.ab3"
000082D0 <hashmap.include.bb2@67> XINCLUDE "/Shared/preprocessor.include.ab3"
000082F4 <hashmap.include.bb2@68> XINCLUDE "/Shared/preprocessor.include.ab3"
00008300 <hashmap.include.bb2@70> XINCLUDE "/Shared/preprocessor.include.ab3"
0000830E <hashmap.include.bb2@71> XINCLUDE "/Shared/preprocessor.include.ab3"
0000831C <hashmap.include.bb2@72> XINCLUDE "/Shared/preprocessor.include.ab3"
0000832A <hashmap.include.bb2@73> XINCLUDE "/Shared/preprocessor.include.ab3"
00008338 <hashmap.include.bb2@74> XINCLUDE "/Shared/preprocessor.include.ab3"
0000836E <hashmap.include.bb2@75> XINCLUDE "/Shared/preprocessor.include.ab3"
0000837C <hashmap.include.bb2@76> XINCLUDE "/Shared/preprocessor.include.ab3"
0000838C <hashmap.include.bb2@77> XINCLUDE "/Shared/preprocessor.include.ab3"
00008394 <hashmap.include.bb2@78> XINCLUDE "/Shared/preprocessor.include.ab3"
00008398 <hashmap.include.bb2@79> XINCLUDE "/Shared/preprocessor.include.ab3"
000083B2 <hashmap.include.bb2@82> XINCLUDE "/Shared/preprocessor.include.ab3"
000083CC <hashmap.include.bb2@83> XINCLUDE "/Shared/preprocessor.include.ab3"
000083E6 <hashmap.include.bb2@84> XINCLUDE "/Shared/preprocessor.include.ab3"
00008406 <hashmap.include.bb2@86> XINCLUDE "/Shared/preprocessor.include.ab3"
00008410 <hashmap.include.bb2@87> XINCLUDE "/Shared/preprocessor.include.ab3"
0000841C <hashmap.include.bb2@88> XINCLUDE "/Shared/preprocessor.include.ab3"
00008430 <hashmap.include.bb2@89> XINCLUDE "/Shared/preprocessor.include.ab3"
00008462 <hashmap.include.bb2@90> XINCLUDE "/Shared/preprocessor.include.ab3"
0000847A <hashmap.include.bb2@91> XINCLUDE "/Shared/preprocessor.include.ab3"
00008486 <hashmap.include.bb2@92> XINCLUDE "/Shared/preprocessor.include.ab3"
00008494 <hashmap.include.bb2@93> XINCLUDE "/Shared/preprocessor.include.ab3"
000084A2 <hashmap.include.bb2@94> XINCLUDE "/Shared/preprocessor.include.ab3"
000084B0 <hashmap.include.bb2@95> XINCLUDE "/Shared/preprocessor.include.ab3"
000084BE <hashmap.include.bb2@96> XINCLUDE "/Shared/preprocessor.include.ab3"
000084E8 <hashmap.include.bb2@97> XINCLUDE "/Shared/preprocessor.include.ab3"
000084F2 <hashmap.include.bb2@99> XINCLUDE "/Shared/preprocessor.include.ab3"
000084F8 <hashmap.include.bb2@100> XINCLUDE "/Shared/preprocessor.include.ab3"
00008526 <hashmap.include.bb2@103> XINCLUDE "/Shared/preprocessor.include.ab3"
0000853E <hashmap.include.bb2@104> XINCLUDE "/Shared/preprocessor.include.ab3"
0000855C <hashmap.include.bb2@105> XINCLUDE "/Shared/preprocessor.include.ab3"
00008570 <hashmap.include.bb2@106> XINCLUDE "/Shared/preprocessor.include.ab3"
00008588 <hashmap.include.bb2@107> XINCLUDE "/Shared/preprocessor.include.ab3"
000085B0 <hashmap.include.bb2@108> XINCLUDE "/Shared/preprocessor.include.ab3"
000085C8 <hashmap.include.bb2@109> XINCLUDE "/Shared/preprocessor.include.ab3"
000085D6 <hashmap.include.bb2@110> XINCLUDE "/Shared/preprocessor.include.ab3"
000085E4 <hashmap.include.bb2@111> XINCLUDE "/Shared/preprocessor.include.ab3"
000085F2 <hashmap.include.bb2@112> XINCLUDE "/Shared/preprocessor.include.ab3"
00008606 <hashmap.include.bb2@113> XINCLUDE "/Shared/preprocessor.include.ab3"
0000865A <hashmap.include.bb2@114> XINCLUDE "/Shared/preprocessor.include.ab3"
00008684 <hashmap.include.bb2@115> XINCLUDE "/Shared/preprocessor.include.ab3"
000086C8 <hashmap.include.bb2@117> XINCLUDE "/Shared/preprocessor.include.ab3"
000086E8 <hashmap.include.bb2@118> XINCLUDE "/Shared/preprocessor.include.ab3"
000086FA <hashmap.include.bb2@119> XINCLUDE "/Shared/preprocessor.include.ab3"
0000871E <hashmap.include.bb2@120> XINCLUDE "/Shared/preprocessor.include.ab3"
0000872C <hashmap.include.bb2@121> XINCLUDE "/Shared/preprocessor.include.ab3"
00008784 <hashmap.include.bb2@122> XINCLUDE "/Shared/preprocessor.include.ab3"
000087CA <hashmap.include.bb2@123> XINCLUDE "/Shared/preprocessor.include.ab3"
000087D0 <hashmap.include.bb2@124> XINCLUDE "/Shared/preprocessor.include.ab3"
000087D8 <hashmap.include.bb2@125> XINCLUDE "/Shared/preprocessor.include.ab3"
00008800 <hashmap.include.bb2@127> XINCLUDE "/Shared/preprocessor.include.ab3"
00008812 <hashmap.include.bb2@128> XINCLUDE "/Shared/preprocessor.include.ab3"
00008824 <hashmap.include.bb2@129> XINCLUDE "/Shared/preprocessor.include.ab3"
0000885E <hashmap.include.bb2@130> XINCLUDE "/Shared/preprocessor.include.ab3"
0000886E <hashmap.include.bb2@131> XINCLUDE "/Shared/preprocessor.include.ab3"
00008874 <hashmap.include.bb2@133> XINCLUDE "/Shared/preprocessor.include.ab3"
00008884 <hashmap.include.bb2@134> XINCLUDE "/Shared/preprocessor.include.ab3"
0000888A <hashmap.include.bb2@136> XINCLUDE "/Shared/preprocessor.include.ab3"
00008890 <hashmap.include.bb2@138> XINCLUDE "/Shared/preprocessor.include.ab3"
000088A8 <hashmap.include.bb2@139> XINCLUDE "/Shared/preprocessor.include.ab3"
000088E6 <hashmap.include.bb2@142> XINCLUDE "/Shared/preprocessor.include.ab3"
00008904 <hashmap.include.bb2@143> XINCLUDE "/Shared/preprocessor.include.ab3"
00008936 <hashmap.include.bb2@144> XINCLUDE "/Shared/preprocessor.include.ab3"
0000894A <hashmap.include.bb2@145> XINCLUDE "/Shared/preprocessor.include.ab3"
0000895E <hashmap.include.bb2@146> XINCLUDE "/Shared/preprocessor.include.ab3"
00008976 <hashmap.include.bb2@147> XINCLUDE "/Shared/preprocessor.include.ab3"
0000899E <hashmap.include.bb2@149> XINCLUDE "/Shared/preprocessor.include.ab3"
000089A8 <hashmap.include.bb2@153> XINCLUDE "/Shared/preprocessor.include.ab3"
000089B6 <hashmap.include.bb2@154> XINCLUDE "/Shared/preprocessor.include.ab3"
000089CE <hashmap.include.bb2@155> XINCLUDE "/Shared/preprocessor.include.ab3"
000089D4 <hashmap.include.bb2@159> XINCLUDE "/Shared/preprocessor.include.ab3"
000089DC <hashmap.include.bb2@160> XINCLUDE "/Shared/preprocessor.include.ab3"
000089FC <hashmap.include.bb2@163> XINCLUDE "/Shared/preprocessor.include.ab3"
00008A22 <hashmap.include.bb2@164> XINCLUDE "/Shared/preprocessor.include.ab3"
00008A2C <hashmap.include.bb2@165> XINCLUDE "/Shared/preprocessor.include.ab3"
00008A3A <hashmap.include.bb2@166> XINCLUDE "/Shared/preprocessor.include.ab3"
00008A44 <hashmap.include.bb2@168> XINCLUDE "/Shared/preprocessor.include.ab3"
00008A70 <hashmap.include.bb2@169> XINCLUDE "/Shared/preprocessor.include.ab3"
00008A84 <hashmap.include.bb2@170> XINCLUDE "/Shared/preprocessor.include.ab3"
00008A8A <hashmap.include.bb2@171> XINCLUDE "/Shared/preprocessor.include.ab3"
00008A98 <hashmap.include.bb2@172> XINCLUDE "/Shared/preprocessor.include.ab3"
00008ACE <hashmap.include.bb2@175> XINCLUDE "/Shared/preprocessor.include.ab3"
00008B1C <hashmap.include.bb2@176> XINCLUDE "/Shared/preprocessor.include.ab3"
00008B44 <hashmap.include.bb2@178> XINCLUDE "/Shared/preprocessor.include.ab3"
00008B5E <hashmap.include.bb2@179> XINCLUDE "/Shared/preprocessor.include.ab3"
00008B70 <hashmap.include.bb2@180> XINCLUDE "/Shared/preprocessor.include.ab3"
00008B7A <hashmap.include.bb2@182> XINCLUDE "/Shared/preprocessor.include.ab3"
00008B96 <hashmap.include.bb2@183> XINCLUDE "/Shared/preprocessor.include.ab3"
00008BBC <hashmap.include.bb2@186> XINCLUDE "/Shared/preprocessor.include.ab3"
00008BDA <hashmap.include.bb2@187> XINCLUDE "/Shared/preprocessor.include.ab3"
00008BFE <hashmap.include.bb2@188> XINCLUDE "/Shared/preprocessor.include.ab3"
00008C18 <hashmap.include.bb2@189> XINCLUDE "/Shared/preprocessor.include.ab3"
00008C40 <hashmap.include.bb2@190> XINCLUDE "/Shared/preprocessor.include.ab3"
00008C5E <hashmap.include.bb2@191> XINCLUDE "/Shared/preprocessor.include.ab3"
00008C7A <hashmap.include.bb2@192> XINCLUDE "/Shared/preprocessor.include.ab3"
00008C88 <hashmap.include.bb2@193> XINCLUDE "/Shared/preprocessor.include.ab3"
00008C9C <hashmap.include.bb2@194> XINCLUDE "/Shared/preprocessor.include.ab3"
00008CBE <hashmap.include.bb2@195> XINCLUDE "/Shared/preprocessor.include.ab3"
00008CE0 <hashmap.include.bb2@196> XINCLUDE "/Shared/preprocessor.include.ab3"
00008CEE <hashmap.include.bb2@197> XINCLUDE "/Shared/preprocessor.include.ab3"
00008D08 <hashmap.include.bb2@198> XINCLUDE "/Shared/preprocessor.include.ab3"
00008D38 <hashmap.include.bb2@199> XINCLUDE "/Shared/preprocessor.include.ab3"
00008D3E <hashmap.include.bb2@200> XINCLUDE "/Shared/preprocessor.include.ab3"
00008D6C <hashmap.include.bb2@201> XINCLUDE "/Shared/preprocessor.include.ab3"
00008DAE <hashmap.include.bb2@202> XINCLUDE "/Shared/preprocessor.include.ab3"
00008DBE <hashmap.include.bb2@203> XINCLUDE "/Shared/preprocessor.include.ab3"
00008DC8 <hashmap.include.bb2@204> XINCLUDE "/Shared/preprocessor.include.ab3"
00008DD8 <hashmap.include.bb2@205> XINCLUDE "/Shared/preprocessor.include.ab3"
00008DDE <hashmap.include.bb2@209> XINCLUDE "/Shared/preprocessor.include.ab3"
00008DEA <hashmap.include.bb2@210> XINCLUDE "/Shared/preprocessor.include.ab3"
00008DF0 <hashmap.include.bb2@211> XINCLUDE "/Shared/preprocessor.include.ab3"
00008E1E <hashmap.include.bb2@215> XINCLUDE "/Shared/preprocessor.include.ab3"
00008E4E <hashmap.include.bb2@216> XINCLUDE "/Shared/preprocessor.include.ab3"
00008E84 <hashmap.include.bb2@217> XINCLUDE "/Shared/preprocessor.include.ab3"
00008E98 <hashmap.include.bb2@218> XINCLUDE "/Shared/preprocessor.include.ab3"
00008EB0 <hashmap.include.bb2@219> XINCLUDE "/Shared/preprocessor.include.ab3"
00008ED8 <hashmap.include.bb2@220> XINCLUDE "/Shared/preprocessor.include.ab3"
00008F08 <hashmap.include.bb2@221> XINCLUDE "/Shared/preprocessor.include.ab3"
00008F24 <hashmap.include.bb2@222> XINCLUDE "/Shared/preprocessor.include.ab3"
00008F32 <hashmap.include.bb2@223> XINCLUDE "/Shared/preprocessor.include.ab3"
00008F46 <hashmap.include.bb2@224> XINCLUDE "/Shared/preprocessor.include.ab3"
00008F9A <hashmap.include.bb2@225> XINCLUDE "/Shared/preprocessor.include.ab3"
00008FC4 <hashmap.include.bb2@226> XINCLUDE "/Shared/preprocessor.include.ab3"
00009008 <hashmap.include.bb2@227> XINCLUDE "/Shared/preprocessor.include.ab3"
0000902E <hashmap.include.bb2@228> XINCLUDE "/Shared/preprocessor.include.ab3"
00009034 <hashmap.include.bb2@230> XINCLUDE "/Shared/preprocessor.include.ab3"
00009052 <hashmap.include.bb2@231> XINCLUDE "/Shared/preprocessor.include.ab3"
00009070 <hashmap.include.bb2@232> XINCLUDE "/Shared/preprocessor.include.ab3"
0000908E <hashmap.include.bb2@266> XINCLUDE "/Shared/preprocessor.include.ab3"
00009094 <hashmap.include.bb2@267> XINCLUDE "/Shared/preprocessor.include.ab3"
000090BA <hashmap.include.bb2@268> XINCLUDE "/Shared/preprocessor.include.ab3"
000090E8 <hashmap.include.bb2@270> XINCLUDE "/Shared/preprocessor.include.ab3"
00009110 <hashmap.include.bb2@271> XINCLUDE "/Shared/preprocessor.include.ab3"
00009134 <hashmap.include.bb2@272> XINCLUDE "/Shared/preprocessor.include.ab3"
0000918A <hashmap.include.bb2@275> XINCLUDE "/Shared/preprocessor.include.ab3"
000091DC <hashmap.include.bb2@276> XINCLUDE "/Shared/preprocessor.include.ab3"
00009232 <hashmap.include.bb2@277> XINCLUDE "/Shared/preprocessor.include.ab3"
00009242 <hashmap.include.bb2@280> XINCLUDE "/Shared/preprocessor.include.ab3"
00009294 <hashmap.include.bb2@281> XINCLUDE "/Shared/preprocessor.include.ab3"
000092BC <hashmap.include.bb2@282> XINCLUDE "/Shared/preprocessor.include.ab3"
000092E2 <hashmap.include.bb2@283> XINCLUDE "/Shared/preprocessor.include.ab3"
000092FC <hashmap.include.bb2@284> XINCLUDE "/Shared/preprocessor.include.ab3"
00009304 <hashmap.include.bb2@285> XINCLUDE "/Shared/preprocessor.include.ab3"
0000932C <hashmap.include.bb2@286> XINCLUDE "/Shared/preprocessor.include.ab3"
0000935A <hashmap.include.bb2@289> XINCLUDE "/Shared/preprocessor.include.ab3"
00009382 <hashmap.include.bb2@290> XINCLUDE "/Shared/preprocessor.include.ab3"
0000938A <hashmap.include.bb2@291> XINCLUDE "/Shared/preprocessor.include.ab3"
000093AE <hashmap.include.bb2@292> XINCLUDE "/Shared/preprocessor.include.ab3"
000093E2 <hashmap.include.bb2@294> XINCLUDE "/Shared/preprocessor.include.ab3"
000093FE <hashmap.include.bb2@295> XINCLUDE "/Shared/preprocessor.include.ab3"
00009408 <hashmap.include.bb2@296> XINCLUDE "/Shared/preprocessor.include.ab3"
0000941C <hashmap.include.bb2@297> XINCLUDE "/Shared/preprocessor.include.ab3"
0000943C <hashmap.include.bb2@298> XINCLUDE "/Shared/preprocessor.include.ab3"
00009458 <hashmap.include.bb2@299> XINCLUDE "/Shared/preprocessor.include.ab3"
00009466 <hashmap.include.bb2@300> XINCLUDE "/Shared/preprocessor.include.ab3"
00009474 <hashmap.include.bb2@301> XINCLUDE "/Shared/preprocessor.include.ab3"
0000947A <hashmap.include.bb2@302> XINCLUDE "/Shared/preprocessor.include.ab3"
00009492 <hashmap.include.bb2@303> XINCLUDE "/Shared/preprocessor.include.ab3"
000094A2 <hashmap.include.bb2@305> XINCLUDE "/Shared/preprocessor.include.ab3"
000094D0 <hashmap.include.bb2@306> XINCLUDE "/Shared/preprocessor.include.ab3"
0000952C <hashmap.include.bb2@307> XINCLUDE "/Shared/preprocessor.include.ab3"
000095A4 <hashmap.include.bb2@308> XINCLUDE "/Shared/preprocessor.include.ab3"
00009600 <hashmap.include.bb2@309> XINCLUDE "/Shared/preprocessor.include.ab3"
00009606 <hashmap.include.bb2@310> XINCLUDE "/Shared/preprocessor.include.ab3"
00009610 <hashmap.include.bb2@312> XINCLUDE "/Shared/preprocessor.include.ab3"
00009616 <hashmap.include.bb2@313> XINCLUDE "/Shared/preprocessor.include.ab3"
00009644 <hashmap.include.bb2@316> XINCLUDE "/Shared/preprocessor.include.ab3"
0000964A <hashmap.include.bb2@317> XINCLUDE "/Shared/preprocessor.include.ab3"
0000966A <hashmap.include.bb2@318> XINCLUDE "/Shared/preprocessor.include.ab3"
00009674 <hashmap.include.bb2@319> XINCLUDE "/Shared/preprocessor.include.ab3"
00009686 <hashmap.include.bb2@320> XINCLUDE "/Shared/preprocessor.include.ab3"
00009696 <hashmap.include.bb2@321> XINCLUDE "/Shared/preprocessor.include.ab3"
000096A0 <hashmap.include.bb2@323> XINCLUDE "/Shared/preprocessor.include.ab3"
000096BA <hashmap.include.bb2@324> XINCLUDE "/Shared/preprocessor.include.ab3"
000096D4 <hashmap.include.bb2@327> XINCLUDE "/Shared/preprocessor.include.ab3"
000096DC <hashmap.include.bb2@328> XINCLUDE "/Shared/preprocessor.include.ab3"
000096E2 <hashmap.include.bb2@329> XINCLUDE "/Shared/preprocessor.include.ab3"
000096EC <hashmap.include.bb2@330> XINCLUDE "/Shared/preprocessor.include.ab3"
000096F4 <hashmap.include.bb2@331> XINCLUDE "/Shared/preprocessor.include.ab3"
0000971C <hashmap.include.bb2@332> XINCLUDE "/Shared/preprocessor.include.ab3"
00009722 <hashmap.include.bb2@333> XINCLUDE "/Shared/preprocessor.include.ab3"
00009736 <hashmap.include.bb2@334> XINCLUDE "/Shared/preprocessor.include.ab3"
00009772 <hashmap.include.bb2@336> XINCLUDE "/Shared/preprocessor.include.ab3"
00009798 <hashmap.include.bb2@337> XINCLUDE "/Shared/preprocessor.include.ab3"
000097A6 <hashmap.include.bb2@338> XINCLUDE "/Shared/preprocessor.include.ab3"
000097E2 <hashmap.include.bb2@340> XINCLUDE "/Shared/preprocessor.include.ab3"
000097F6 <hashmap.include.bb2@341> XINCLUDE "/Shared/preprocessor.include.ab3"
00009832 <hashmap.include.bb2@343> XINCLUDE "/Shared/preprocessor.include.ab3"
00009848 <hashmap.include.bb2@344> XINCLUDE "/Shared/preprocessor.include.ab3"
0000985C <hashmap.include.bb2@346> XINCLUDE "/Shared/preprocessor.include.ab3"
00009866 <hashmap.include.bb2@347> XINCLUDE "/Shared/preprocessor.include.ab3"
0000988A <hashmap.include.bb2@348> XINCLUDE "/Shared/preprocessor.include.ab3"
000098C2 <hashmap.include.bb2@349> XINCLUDE "/Shared/preprocessor.include.ab3"
000098C8 <hashmap.include.bb2@350> XINCLUDE "/Shared/preprocessor.include.ab3"
000098D4 <hashmap.include.bb2@351> XINCLUDE "/Shared/preprocessor.include.ab3"
000098E8 <hashmap.include.bb2@354> XINCLUDE "/Shared/preprocessor.include.ab3"
000098F2 <hashmap.include.bb2@355> XINCLUDE "/Shared/preprocessor.include.ab3"
0000991A <hashmap.include.bb2@356> XINCLUDE "/Shared/preprocessor.include.ab3"
00009942 <hashmap.include.bb2@357> XINCLUDE "/Shared/preprocessor.include.ab3"
00009954 <hashmap.include.bb2@358> XINCLUDE "/Shared/preprocessor.include.ab3"
00009980 <hashmap.include.bb2@359> XINCLUDE "/Shared/preprocessor.include.ab3"
000099B4 <hashmap.include.bb2@360> XINCLUDE "/Shared/preprocessor.include.ab3"
000099E0 <hashmap.include.bb2@361> XINCLUDE "/Shared/preprocessor.include.ab3"
00009A2C <hashmap.include.bb2@362> XINCLUDE "/Shared/preprocessor.include.ab3"
00009A3C <hashmap.include.bb2@364> XINCLUDE "/Shared/preprocessor.include.ab3"
00009A42 <hashmap.include.bb2@366> XINCLUDE "/Shared/preprocessor.include.ab3"
00009A4E <hashmap.include.bb2@367> XINCLUDE "/Shared/preprocessor.include.ab3"
00009A7C <hashmap.include.bb2@370> XINCLUDE "/Shared/preprocessor.include.ab3"
00009A7E <hashmap.include.bb2@372> XINCLUDE "/Shared/preprocessor.include.ab3"
00009A84 <hashmap.include.bb2@373> XINCLUDE "/Shared/preprocessor.include.ab3"
00009A8E <hashmap.include.bb2@374> XINCLUDE "/Shared/preprocessor.include.ab3"
00009AB8 <hashmap.include.bb2@375> XINCLUDE "/Shared/preprocessor.include.ab3"
00009AC2 <hashmap.include.bb2@377> XINCLUDE "/Shared/preprocessor.include.ab3"
00009AC8 <hashmap.include.bb2@378> XINCLUDE "/Shared/preprocessor.include.ab3"
00009AF2 <hashmap.include.bb2@381> XINCLUDE "/Shared/preprocessor.include.ab3"
00009AFA <hashmap.include.bb2@382> XINCLUDE "/Shared/preprocessor.include.ab3"
00009B1A <hashmap.include.bb2@383> XINCLUDE "/Shared/preprocessor.include.ab3"
00009B24 <hashmap.include.bb2@384> XINCLUDE "/Shared/preprocessor.include.ab3"
00009B32 <hashmap.include.bb2@385> XINCLUDE "/Shared/preprocessor.include.ab3"
00009B42 <hashmap.include.bb2@386> XINCLUDE "/Shared/preprocessor.include.ab3"
00009B4C <hashmap.include.bb2@388> XINCLUDE "/Shared/preprocessor.include.ab3"
00009B66 <hashmap.include.bb2@389> XINCLUDE "/Shared/preprocessor.include.ab3"
00009B66 <preprocessor.include.ab3@11> XINCLUDE "/Shared/preprocessor.include.ab3"
00009B80 <preprocessor.include.ab3@29> XINCLUDE "/Shared/preprocessor.include.ab3"
00009B98 <preprocessor.include.ab3@30> XINCLUDE "/Shared/preprocessor.include.ab3"
00009BBE <preprocessor.include.ab3@31> XINCLUDE "/Shared/preprocessor.include.ab3"
00009BF4 <preprocessor.include.ab3@32> XINCLUDE "/Shared/preprocessor.include.ab3"
00009BF8 <preprocessor.include.ab3@33> XINCLUDE "/Shared/preprocessor.include.ab3"
00009C12 <preprocessor.include.ab3@36> XINCLUDE "/Shared/preprocessor.include.ab3"
00009C2A <preprocessor.include.ab3@37> XINCLUDE "/Shared/preprocessor.include.ab3"
00009C34 <preprocessor.include.ab3@38> XINCLUDE "/Shared/preprocessor.include.ab3"
00009C4C <preprocessor.include.ab3@39> XINCLUDE "/Shared/preprocessor.include.ab3"
00009C50 <preprocessor.include.ab3@40> XINCLUDE "/Shared/preprocessor.include.ab3"
00009C6A <preprocessor.include.ab3@43> XINCLUDE "/Shared/preprocessor.include.ab3"
00009C82 <preprocessor.include.ab3@44> XINCLUDE "/Shared/preprocessor.include.ab3"
00009C9A <preprocessor.include.ab3@45> XINCLUDE "/Shared/preprocessor.include.ab3"
00009CBE <preprocessor.include.ab3@46> XINCLUDE "/Shared/preprocessor.include.ab3"
00009CC4 <preprocessor.include.ab3@47> XINCLUDE "/Shared/preprocessor.include.ab3"
00009CEE <preprocessor.include.ab3@48> XINCLUDE "/Shared/preprocessor.include.ab3"
00009D0C <preprocessor.include.ab3@49> XINCLUDE "/Shared/preprocessor.include.ab3"
00009D1C <preprocessor.include.ab3@50> XINCLUDE "/Shared/preprocessor.include.ab3"
00009D26 <preprocessor.include.ab3@53> XINCLUDE "/Shared/preprocessor.include.ab3"
00009D34 <preprocessor.include.ab3@54> XINCLUDE "/Shared/preprocessor.include.ab3"
00009D5A <preprocessor.include.ab3@55> XINCLUDE "/Shared/preprocessor.include.ab3"
00009D8E <preprocessor.include.ab3@56> XINCLUDE "/Shared/preprocessor.include.ab3"
00009DAA <preprocessor.include.ab3@57> XINCLUDE "/Shared/preprocessor.include.ab3"
00009DB4 <preprocessor.include.ab3@58> XINCLUDE "/Shared/preprocessor.include.ab3"
00009DD0 <preprocessor.include.ab3@59> XINCLUDE "/Shared/preprocessor.include.ab3"
00009DDE <preprocessor.include.ab3@60> XINCLUDE "/Shared/preprocessor.include.ab3"
00009DF2 <preprocessor.include.ab3@61> XINCLUDE "/Shared/preprocessor.include.ab3"
00009E14 <preprocessor.include.ab3@62> XINCLUDE "/Shared/preprocessor.include.ab3"
00009E36 <preprocessor.include.ab3@63> XINCLUDE "/Shared/preprocessor.include.ab3"
00009E54 <preprocessor.include.ab3@64> XINCLUDE "/Shared/preprocessor.include.ab3"
00009E82 <preprocessor.include.ab3@65> XINCLUDE "/Shared/preprocessor.include.ab3"
00009E88 <preprocessor.include.ab3@66> XINCLUDE "/Shared/preprocessor.include.ab3"
00009E98 <preprocessor.include.ab3@68> XINCLUDE "/Shared/preprocessor.include.ab3"
00009E9C <preprocessor.include.ab3@70> XINCLUDE "/Shared/preprocessor.include.ab3"
00009EB2 <preprocessor.include.ab3@73> XINCLUDE "/Shared/preprocessor.include.ab3"
00009ED2 <preprocessor.include.ab3@74> XINCLUDE "/Shared/preprocessor.include.ab3"
00009EDC <preprocessor.include.ab3@75> XINCLUDE "/Shared/preprocessor.include.ab3"
00009F06 <preprocessor.include.ab3@76> XINCLUDE "/Shared/preprocessor.include.ab3"
00009F1C <preprocessor.include.ab3@77> XINCLUDE "/Shared/preprocessor.include.ab3"
00009F2C <preprocessor.include.ab3@78> XINCLUDE "/Shared/preprocessor.include.ab3"
00009F48 <preprocessor.include.ab3@80> XINCLUDE "/Shared/preprocessor.include.ab3"
00009F64 <preprocessor.include.ab3@81> XINCLUDE "/Shared/preprocessor.include.ab3"
00009F80 <preprocessor.include.ab3@82> XINCLUDE "/Shared/preprocessor.include.ab3"
00009F9C <preprocessor.include.ab3@83> XINCLUDE "/Shared/preprocessor.include.ab3"
00009FB8 <preprocessor.include.ab3@84> XINCLUDE "/Shared/preprocessor.include.ab3"
00009FD4 <preprocessor.include.ab3@85> XINCLUDE "/Shared/preprocessor.include.ab3"
00009FF0 <preprocessor.include.ab3@86> XINCLUDE "/Shared/preprocessor.include.ab3"
0000A00C <preprocessor.include.ab3@87> XINCLUDE "/Shared/preprocessor.include.ab3"
0000A028 <preprocessor.include.ab3@88> XINCLUDE "/Shared/preprocessor.include.ab3"
0000A044 <preprocessor.include.ab3@89> XINCLUDE "/Shared/preprocessor.include.ab3"
0000A060 <preprocessor.include.ab3@90> XINCLUDE "/Shared/preprocessor.include.ab3"
0000A07C <preprocessor.include.ab3@91> XINCLUDE "/Shared/preprocessor.include.ab3"
0000A098 <preprocessor.include.ab3@92> XINCLUDE "/Shared/preprocessor.include.ab3"
0000A0B4 <preprocessor.include.ab3@93> XINCLUDE "/Shared/preprocessor.include.ab3"
0000A0D0 <preprocessor.include.ab3@94> XINCLUDE "/Shared/preprocessor.include.ab3"
0000A0EC <preprocessor.include.ab3@95> XINCLUDE "/Shared/preprocessor.include.ab3"
0000A108 <preprocessor.include.ab3@96> XINCLUDE "/Shared/preprocessor.include.ab3"
0000A124 <preprocessor.include.ab3@97> XINCLUDE "/Shared/preprocessor.include.ab3"
0000A140 <preprocessor.include.ab3@98> XINCLUDE "/Shared/preprocessor.include.ab3"
0000A15C <preprocessor.include.ab3@99> XINCLUDE "/Shared/preprocessor.include.ab3"
0000A178 <preprocessor.include.ab3@100> XINCLUDE "/Shared/preprocessor.include.ab3"
0000A194 <preprocessor.include.ab3@101> XINCLUDE "/Shared/preprocessor.include.ab3"
0000A1B0 <preprocessor.include.ab3@102> XINCLUDE "/Shared/preprocessor.include.ab3"
0000A1CC <preprocessor.include.ab3@103> XINCLUDE "/Shared/preprocessor.include.ab3"
0000A1E8 <preprocessor.include.ab3@104> XINCLUDE "/Shared/preprocessor.include.ab3"
0000A204 <preprocessor.include.ab3@105> XINCLUDE "/Shared/preprocessor.include.ab3"
0000A220 <preprocessor.include.ab3@106> XINCLUDE "/Shared/preprocessor.include.ab3"
0000A23C <preprocessor.include.ab3@107> XINCLUDE "/Shared/preprocessor.include.ab3"
0000A258 <preprocessor.include.ab3@108> XINCLUDE "/Shared/preprocessor.include.ab3"
0000A274 <preprocessor.include.ab3@109> XINCLUDE "/Shared/preprocessor.include.ab3"
0000A290 <preprocessor.include.ab3@110> XINCLUDE "/Shared/preprocessor.include.ab3"
0000A2AC <preprocessor.include.ab3@111> XINCLUDE "/Shared/preprocessor.include.ab3"
0000A2C8 <preprocessor.include.ab3@112> XINCLUDE "/Shared/preprocessor.include.ab3"
0000A2E4 <preprocessor.include.ab3@113> XINCLUDE "/Shared/preprocessor.include.ab3"
0000A300 <preprocessor.include.ab3@114> XINCLUDE "/Shared/preprocessor.include.ab3"
0000A31C <preprocessor.include.ab3@115> XINCLUDE "/Shared/preprocessor.include.ab3"
0000A338 <preprocessor.include.ab3@116> XINCLUDE "/Shared/preprocessor.include.ab3"
0000A354 <preprocessor.include.ab3@117> XINCLUDE "/Shared/preprocessor.include.ab3"
0000A370 <preprocessor.include.ab3@118> XINCLUDE "/Shared/preprocessor.include.ab3"
0000A38C <preprocessor.include.ab3@119> XINCLUDE "/Shared/preprocessor.include.ab3"
0000A3A8 <preprocessor.include.ab3@120> XINCLUDE "/Shared/preprocessor.include.ab3"
0000A3C4 <preprocessor.include.ab3@121> XINCLUDE "/Shared/preprocessor.include.ab3"
0000A3E0 <preprocessor.include.ab3@122> XINCLUDE "/Shared/preprocessor.include.ab3"
0000A3FC <preprocessor.include.ab3@123> XINCLUDE "/Shared/preprocessor.include.ab3"
0000A418 <preprocessor.include.ab3@124> XINCLUDE "/Shared/preprocessor.include.ab3"
0000A434 <preprocessor.include.ab3@125> XINCLUDE "/Shared/preprocessor.include.ab3"
0000A450 <preprocessor.include.ab3@126> XINCLUDE "/Shared/preprocessor.include.ab3"
0000A46C <preprocessor.include.ab3@127> XINCLUDE "/Shared/preprocessor.include.ab3"
0000A488 <preprocessor.include.ab3@128> XINCLUDE "/Shared/preprocessor.include.ab3"
0000A4A4 <preprocessor.include.ab3@129> XINCLUDE "/Shared/preprocessor.include.ab3"
0000A4C0 <preprocessor.include.ab3@130> XINCLUDE "/Shared/preprocessor.include.ab3"
0000A4DC <preprocessor.include.ab3@131> XINCLUDE "/Shared/preprocessor.include.ab3"
0000A4F8 <preprocessor.include.ab3@132> XINCLUDE "/Shared/preprocessor.include.ab3"
0000A514 <preprocessor.include.ab3@133> XINCLUDE "/Shared/preprocessor.include.ab3"
0000A530 <preprocessor.include.ab3@134> XINCLUDE "/Shared/preprocessor.include.ab3"
0000A54C <preprocessor.include.ab3@135> XINCLUDE "/Shared/preprocessor.include.ab3"
0000A568 <preprocessor.include.ab3@136> XINCLUDE "/Shared/preprocessor.include.ab3"
0000A584 <preprocessor.include.ab3@137> XINCLUDE "/Shared/preprocessor.include.ab3"
0000A5A0 <preprocessor.include.ab3@138> XINCLUDE "/Shared/preprocessor.include.ab3"
0000A5BC <preprocessor.include.ab3@139> XINCLUDE "/Shared/preprocessor.include.ab3"
0000A5D8 <preprocessor.include.ab3@140> XINCLUDE "/Shared/preprocessor.include.ab3"
0000A5F4 <preprocessor.include.ab3@141> XINCLUDE "/Shared/preprocessor.include.ab3"
0000A610 <preprocessor.include.ab3@142> XINCLUDE "/Shared/preprocessor.include.ab3"
0000A62C <preprocessor.include.ab3@143> XINCLUDE "/Shared/preprocessor.include.ab3"
0000A648 <preprocessor.include.ab3@144> XINCLUDE "/Shared/preprocessor.include.ab3"
0000A664 <preprocessor.include.ab3@145> XINCLUDE "/Shared/preprocessor.include.ab3"
0000A680 <preprocessor.include.ab3@146> XINCLUDE "/Shared/preprocessor.include.ab3"
0000A69C <preprocessor.include.ab3@147> XINCLUDE "/Shared/preprocessor.include.ab3"
0000A6B8 <preprocessor.include.ab3@148> XINCLUDE "/Shared/preprocessor.include.ab3"
0000A6D4 <preprocessor.include.ab3@149> XINCLUDE "/Shared/preprocessor.include.ab3"
0000A6F0 <preprocessor.include.ab3@150> XINCLUDE "/Shared/preprocessor.include.ab3"
0000A70C <preprocessor.include.ab3@151> XINCLUDE "/Shared/preprocessor.include.ab3"
0000A728 <preprocessor.include.ab3@152> XINCLUDE "/Shared/preprocessor.include.ab3"
0000A744 <preprocessor.include.ab3@153> XINCLUDE "/Shared/preprocessor.include.ab3"
0000A760 <preprocessor.include.ab3@154> XINCLUDE "/Shared/preprocessor.include.ab3"
0000A77C <preprocessor.include.ab3@155> XINCLUDE "/Shared/preprocessor.include.ab3"
0000A798 <preprocessor.include.ab3@156> XINCLUDE "/Shared/preprocessor.include.ab3"
0000A7B4 <preprocessor.include.ab3@157> XINCLUDE "/Shared/preprocessor.include.ab3"
0000A7D0 <preprocessor.include.ab3@158> XINCLUDE "/Shared/preprocessor.include.ab3"
0000A7EC <preprocessor.include.ab3@159> XINCLUDE "/Shared/preprocessor.include.ab3"
0000A808 <preprocessor.include.ab3@160> XINCLUDE "/Shared/preprocessor.include.ab3"
0000A824 <preprocessor.include.ab3@161> XINCLUDE "/Shared/preprocessor.include.ab3"
0000A840 <preprocessor.include.ab3@162> XINCLUDE "/Shared/preprocessor.include.ab3"
0000A85C <preprocessor.include.ab3@163> XINCLUDE "/Shared/preprocessor.include.ab3"
0000A878 <preprocessor.include.ab3@164> XINCLUDE "/Shared/preprocessor.include.ab3"
0000A894 <preprocessor.include.ab3@165> XINCLUDE "/Shared/preprocessor.include.ab3"
0000A8B0 <preprocessor.include.ab3@166> XINCLUDE "/Shared/preprocessor.include.ab3"
0000A8CC <preprocessor.include.ab3@167> XINCLUDE "/Shared/preprocessor.include.ab3"
0000A8E8 <preprocessor.include.ab3@168> XINCLUDE "/Shared/preprocessor.include.ab3"
0000A904 <preprocessor.include.ab3@169> XINCLUDE "/Shared/preprocessor.include.ab3"
0000A920 <preprocessor.include.ab3@170> XINCLUDE "/Shared/preprocessor.include.ab3"
0000A93C <preprocessor.include.ab3@171> XINCLUDE "/Shared/preprocessor.include.ab3"
0000A958 <preprocessor.include.ab3@172> XINCLUDE "/Shared/preprocessor.include.ab3"
0000A974 <preprocessor.include.ab3@173> XINCLUDE "/Shared/preprocessor.include.ab3"
0000A990 <preprocessor.include.ab3@174> XINCLUDE "/Shared/preprocessor.include.ab3"
0000A9AC <preprocessor.include.ab3@175> XINCLUDE "/Shared/preprocessor.include.ab3"
0000A9C8 <preprocessor.include.ab3@176> XINCLUDE "/Shared/preprocessor.include.ab3"
0000A9E4 <preprocessor.include.ab3@177> XINCLUDE "/Shared/preprocessor.include.ab3"
0000AA00 <preprocessor.include.ab3@178> XINCLUDE "/Shared/preprocessor.include.ab3"
0000AA1C <preprocessor.include.ab3@179> XINCLUDE "/Shared/preprocessor.include.ab3"
0000AA38 <preprocessor.include.ab3@180> XINCLUDE "/Shared/preprocessor.include.ab3"
0000AA54 <preprocessor.include.ab3@181> XINCLUDE "/Shared/preprocessor.include.ab3"
0000AA70 <preprocessor.include.ab3@182> XINCLUDE "/Shared/preprocessor.include.ab3"
0000AA8C <preprocessor.include.ab3@183> XINCLUDE "/Shared/preprocessor.include.ab3"
0000AAA8 <preprocessor.include.ab3@184> XINCLUDE "/Shared/preprocessor.include.ab3"
0000AAC4 <preprocessor.include.ab3@185> XINCLUDE "/Shared/preprocessor.include.ab3"
0000AAE0 <preprocessor.include.ab3@186> XINCLUDE "/Shared/preprocessor.include.ab3"
0000AAFC <preprocessor.include.ab3@187> XINCLUDE "/Shared/preprocessor.include.ab3"
0000AB18 <preprocessor.include.ab3@188> XINCLUDE "/Shared/preprocessor.include.ab3"
0000AB34 <preprocessor.include.ab3@189> XINCLUDE "/Shared/preprocessor.include.ab3"
0000AB50 <preprocessor.include.ab3@190> XINCLUDE "/Shared/preprocessor.include.ab3"
0000AB6C <preprocessor.include.ab3@191> XINCLUDE "/Shared/preprocessor.include.ab3"
0000AB88 <preprocessor.include.ab3@192> XINCLUDE "/Shared/preprocessor.include.ab3"
0000ABA4 <preprocessor.include.ab3@193> XINCLUDE "/Shared/preprocessor.include.ab3"
0000ABC0 <preprocessor.include.ab3@194> XINCLUDE "/Shared/preprocessor.include.ab3"
0000ABDC <preprocessor.include.ab3@195> XINCLUDE "/Shared/preprocessor.include.ab3"
0000ABF8 <preprocessor.include.ab3@196> XINCLUDE "/Shared/preprocessor.include.ab3"
0000AC14 <preprocessor.include.ab3@197> XINCLUDE "/Shared/preprocessor.include.ab3"
0000AC30 <preprocessor.include.ab3@198> XINCLUDE "/Shared/preprocessor.include.ab3"
0000AC4C <preprocessor.include.ab3@199> XINCLUDE "/Shared/preprocessor.include.ab3"
0000AC68 <preprocessor.include.ab3@200> XINCLUDE "/Shared/preprocessor.include.ab3"
0000AC84 <preprocessor.include.ab3@201> XINCLUDE "/Shared/preprocessor.include.ab3"
0000ACA0 <preprocessor.include.ab3@202> XINCLUDE "/Shared/preprocessor.include.ab3"
0000ACBC <preprocessor.include.ab3@203> XINCLUDE "/Shared/preprocessor.include.ab3"
0000ACD8 <preprocessor.include.ab3@204> XINCLUDE "/Shared/preprocessor.include.ab3"
0000ACF4 <preprocessor.include.ab3@205> XINCLUDE "/Shared/preprocessor.include.ab3"
0000AD10 <preprocessor.include.ab3@206> XINCLUDE "/Shared/preprocessor.include.ab3"
0000AD2C <preprocessor.include.ab3@207> XINCLUDE "/Shared/preprocessor.include.ab3"
0000AD38 <preprocessor.include.ab3@208> XINCLUDE "/Shared/preprocessor.include.ab3"
0000AD46 <preprocessor.include.ab3@209> XINCLUDE "/Shared/preprocessor.include.ab3"
0000AD50 <preprocessor.include.ab3@211> XINCLUDE "/Shared/preprocessor.include.ab3"
0000AD56 <preprocessor.include.ab3@212> XINCLUDE "/Shared/preprocessor.include.ab3"
0000AD84 <preprocessor.include.ab3@247> XINCLUDE "/Shared/preprocessor.include.ab3"
0000ADA2 <preprocessor.include.ab3@248> XINCLUDE "/Shared/preprocessor.include.ab3"
0000ADD4 <preprocessor.include.ab3@249> XINCLUDE "/Shared/preprocessor.include.ab3"
0000ADDE <preprocessor.include.ab3@250> XINCLUDE "/Shared/preprocessor.include.ab3"
0000AE04 <preprocessor.include.ab3@251> XINCLUDE "/Shared/preprocessor.include.ab3"
0000AE0E <preprocessor.include.ab3@252> XINCLUDE "/Shared/preprocessor.include.ab3"
0000AE18 <preprocessor.include.ab3@253> XINCLUDE "/Shared/preprocessor.include.ab3"
0000AE22 <preprocessor.include.ab3@255> XINCLUDE "/Shared/preprocessor.include.ab3"
0000AE3C <preprocessor.include.ab3@256> XINCLUDE "/Shared/preprocessor.include.ab3"
0000AE6A <preprocessor.include.ab3@259> XINCLUDE "/Shared/preprocessor.include.ab3"
0000AE84 <preprocessor.include.ab3@260> XINCLUDE "/Shared/preprocessor.include.ab3"
0000AE92 <preprocessor.include.ab3@261> XINCLUDE "/Shared/preprocessor.include.ab3"
0000AECC <preprocessor.include.ab3@262> XINCLUDE "/Shared/preprocessor.include.ab3"
0000AED4 <preprocessor.include.ab3@264> XINCLUDE "/Shared/preprocessor.include.ab3"
0000AEEE <preprocessor.include.ab3@265> XINCLUDE "/Shared/preprocessor.include.ab3"
0000AF14 <preprocessor.include.ab3@272> XINCLUDE "/Shared/preprocessor.include.ab3"
0000AF34 <preprocessor.include.ab3@273> XINCLUDE "/Shared/preprocessor.include.ab3"
0000AF56 <preprocessor.include.ab3@274> XINCLUDE "/Shared/preprocessor.include.ab3"
0000AF5C <preprocessor.include.ab3@275> XINCLUDE "/Shared/preprocessor.include.ab3"
0000AF6A <preprocessor.include.ab3@276> XINCLUDE "/Shared/preprocessor.include.ab3"
0000AF70 <preprocessor.include.ab3@277> XINCLUDE "/Shared/preprocessor.include.ab3"
0000AF78 <preprocessor.include.ab3@278> XINCLUDE "/Shared/preprocessor.include.ab3"
0000AF7E <preprocessor.include.ab3@279> XINCLUDE "/Shared/preprocessor.include.ab3"
0000AF86 <preprocessor.include.ab3@280> XINCLUDE "/Shared/preprocessor.include.ab3"
0000AF9A <preprocessor.include.ab3@282> XINCLUDE "/Shared/preprocessor.include.ab3"
0000AFC0 <preprocessor.include.ab3@283> XINCLUDE "/Shared/preprocessor.include.ab3"
0000AFE8 <preprocessor.include.ab3@284> XINCLUDE "/Shared/preprocessor.include.ab3"
0000AFF2 <preprocessor.include.ab3@286> XINCLUDE "/Shared/preprocessor.include.ab3"
0000B006 <preprocessor.include.ab3@287> XINCLUDE "/Shared/preprocessor.include.ab3"
0000B01A <preprocessor.include.ab3@288> XINCLUDE "/Shared/preprocessor.include.ab3"
0000B02A <preprocessor.include.ab3@289> XINCLUDE "/Shared/preprocessor.include.ab3"
0000B044 <preprocessor.include.ab3@290> XINCLUDE "/Shared/preprocessor.include.ab3"
0000B06C <preprocessor.include.ab3@291> XINCLUDE "/Shared/preprocessor.include.ab3"
0000B07E <preprocessor.include.ab3@292> XINCLUDE "/Shared/preprocessor.include.ab3"
0000B0A0 <preprocessor.include.ab3@293> XINCLUDE "/Shared/preprocessor.include.ab3"
0000B0A6 <preprocessor.include.ab3@294> XINCLUDE "/Shared/preprocessor.include.ab3"
0000B0AE <preprocessor.include.ab3@295> XINCLUDE "/Shared/preprocessor.include.ab3"
0000B0B4 <preprocessor.include.ab3@297> XINCLUDE "/Shared/preprocessor.include.ab3"
0000B0D6 <preprocessor.include.ab3@298> XINCLUDE "/Shared/preprocessor.include.ab3"
0000B0E0 <preprocessor.include.ab3@300> XINCLUDE "/Shared/preprocessor.include.ab3"
0000B0EE <preprocessor.include.ab3@301> XINCLUDE "/Shared/preprocessor.include.ab3"
0000B10C <preprocessor.include.ab3@302> XINCLUDE "/Shared/preprocessor.include.ab3"
0000B11A <preprocessor.include.ab3@303> XINCLUDE "/Shared/preprocessor.include.ab3"
0000B122 <preprocessor.include.ab3@304> XINCLUDE "/Shared/preprocessor.include.ab3"
0000B128 <preprocessor.include.ab3@305> XINCLUDE "/Shared/preprocessor.include.ab3"
0000B13C <preprocessor.include.ab3@309> XINCLUDE "/Shared/preprocessor.include.ab3"
0000B146 <preprocessor.include.ab3@310> XINCLUDE "/Shared/preprocessor.include.ab3"
0000B154 <preprocessor.include.ab3@311> XINCLUDE "/Shared/preprocessor.include.ab3"
0000B16E <preprocessor.include.ab3@312> XINCLUDE "/Shared/preprocessor.include.ab3"
0000B174 <preprocessor.include.ab3@314> XINCLUDE "/Shared/preprocessor.include.ab3"
0000B17C <preprocessor.include.ab3@315> XINCLUDE "/Shared/preprocessor.include.ab3"
0000B182 <preprocessor.include.ab3@317> XINCLUDE "/Shared/preprocessor.include.ab3"
0000B196 <preprocessor.include.ab3@318> XINCLUDE "/Shared/preprocessor.include.ab3"
0000B1A0 <preprocessor.include.ab3@319> XINCLUDE "/Shared/preprocessor.include.ab3"
0000B1A8 <preprocessor.include.ab3@320> XINCLUDE "/Shared/preprocessor.include.ab3"
0000B1BC <preprocessor.include.ab3@321> XINCLUDE "/Shared/preprocessor.include.ab3"
0000B1D0 <preprocessor.include.ab3@326> XINCLUDE "/Shared/preprocessor.include.ab3"
0000B1E4 <preprocessor.include.ab3@327> XINCLUDE "/Shared/preprocessor.include.ab3"
0000B202 <preprocessor.include.ab3@329> XINCLUDE "/Shared/preprocessor.include.ab3"
0000B210 <preprocessor.include.ab3@330> XINCLUDE "/Shared/preprocessor.include.ab3"
0000B220 <preprocessor.include.ab3@331> XINCLUDE "/Shared/preprocessor.include.ab3"
0000B248 <preprocessor.include.ab3@332> XINCLUDE "/Shared/preprocessor.include.ab3"
0000B26A <preprocessor.include.ab3@333> XINCLUDE "/Shared/preprocessor.include.ab3"
0000B27E <preprocessor.include.ab3@336> XINCLUDE "/Shared/preprocessor.include.ab3"
0000B29C <preprocessor.include.ab3@338> XINCLUDE "/Shared/preprocessor.include.ab3"
0000B2AA <preprocessor.include.ab3@339> XINCLUDE "/Shared/preprocessor.include.ab3"
0000B2D0 <preprocessor.include.ab3@340> XINCLUDE "/Shared/preprocessor.include.ab3"
0000B2F8 <preprocessor.include.ab3@341> XINCLUDE "/Shared/preprocessor.include.ab3"
0000B31A <preprocessor.include.ab3@342> XINCLUDE "/Shared/preprocessor.include.ab3"
0000B34A <preprocessor.include.ab3@345> XINCLUDE "/Shared/preprocessor.include.ab3"
0000B378 <preprocessor.include.ab3@349> XINCLUDE "/Shared/preprocessor.include.ab3"
0000B3AA <preprocessor.include.ab3@350> XINCLUDE "/Shared/preprocessor.include.ab3"
0000B3B8 <preprocessor.include.ab3@352> XINCLUDE "/Shared/preprocessor.include.ab3"
0000B3BE <preprocessor.include.ab3@353> XINCLUDE "/Shared/preprocessor.include.ab3"
0000B3CE <preprocessor.include.ab3@356> XINCLUDE "/Shared/preprocessor.include.ab3"
0000B3D4 <preprocessor.include.ab3@357> XINCLUDE "/Shared/preprocessor.include.ab3"
0000B3FA <preprocessor.include.ab3@360> XINCLUDE "/Shared/preprocessor.include.ab3"
0000B41A <preprocessor.include.ab3@361> XINCLUDE "/Shared/preprocessor.include.ab3"
0000B440 <preprocessor.include.ab3@362> XINCLUDE "/Shared/preprocessor.include.ab3"
0000B460 <preprocessor.include.ab3@363> XINCLUDE "/Shared/preprocessor.include.ab3"
0000B480 <preprocessor.include.ab3@364> XINCLUDE "/Shared/preprocessor.include.ab3"
0000B486 <preprocessor.include.ab3@365> XINCLUDE "/Shared/preprocessor.include.ab3"
0000B494 <preprocessor.include.ab3@366> XINCLUDE "/Shared/preprocessor.include.ab3"
0000B4A2 <preprocessor.include.ab3@367> XINCLUDE "/Shared/preprocessor.include.ab3"
0000B4A8 <preprocessor.include.ab3@368> XINCLUDE "/Shared/preprocessor.include.ab3"
0000B4B0 <preprocessor.include.ab3@369> XINCLUDE "/Shared/preprocessor.include.ab3"
0000B4CE <preprocessor.include.ab3@370> XINCLUDE "/Shared/preprocessor.include.ab3"
0000B4E2 <preprocessor.include.ab3@371> XINCLUDE "/Shared/preprocessor.include.ab3"
0000B4F2 <preprocessor.include.ab3@372> XINCLUDE "/Shared/preprocessor.include.ab3"
0000B508 <preprocessor.include.ab3@374> XINCLUDE "/Shared/preprocessor.include.ab3"
0000B520 <preprocessor.include.ab3@376> XINCLUDE "/Shared/preprocessor.include.ab3"
0000B53C <preprocessor.include.ab3@377> XINCLUDE "/Shared/preprocessor.include.ab3"
0000B546 <preprocessor.include.ab3@378> XINCLUDE "/Shared/preprocessor.include.ab3"
0000B562 <preprocessor.include.ab3@379> XINCLUDE "/Shared/preprocessor.include.ab3"
0000B574 <preprocessor.include.ab3@380> XINCLUDE "/Shared/preprocessor.include.ab3"
0000B5A2 <preprocessor.include.ab3@381> XINCLUDE "/Shared/preprocessor.include.ab3"
0000B5DE <preprocessor.include.ab3@382> XINCLUDE "/Shared/preprocessor.include.ab3"
0000B5EE <preprocessor.include.ab3@383> XINCLUDE "/Shared/preprocessor.include.ab3"
0000B5F4 <preprocessor.include.ab3@384> XINCLUDE "/Shared/preprocessor.include.ab3"
0000B5FA <preprocessor.include.ab3@387> XINCLUDE "/Shared/preprocessor.include.ab3"
0000B612 <preprocessor.include.ab3@388> XINCLUDE "/Shared/preprocessor.include.ab3"
0000B622 <preprocessor.include.ab3@389> XINCLUDE "/Shared/preprocessor.include.ab3"
0000B6A8 <preprocessor.include.ab3@390> XINCLUDE "/Shared/preprocessor.include.ab3"
0000B6E2 <preprocessor.include.ab3@391> XINCLUDE "/Shared/preprocessor.include.ab3"
0000B718 <preprocessor.include.ab3@392> XINCLUDE "/Shared/preprocessor.include.ab3"
0000B728 <preprocessor.include.ab3@393> XINCLUDE "/Shared/preprocessor.include.ab3"
0000B736 <preprocessor.include.ab3@395> XINCLUDE "/Shared/preprocessor.include.ab3"
0000B73C <preprocessor.include.ab3@396> XINCLUDE "/Shared/preprocessor.include.ab3"
0000B74C <preprocessor.include.ab3@397> XINCLUDE "/Shared/preprocessor.include.ab3"
0000B776 <preprocessor.include.ab3@398> XINCLUDE "/Shared/preprocessor.include.ab3"
0000B77C <preprocessor.include.ab3@399> XINCLUDE "/Shared/preprocessor.include.ab3"
0000B7A8 <preprocessor.include.ab3@400> XINCLUDE "/Shared/preprocessor.include.ab3"
0000B7B8 <preprocessor.include.ab3@403> XINCLUDE "/Shared/preprocessor.include.ab3"
0000B7C8 <preprocessor.include.ab3@405> XINCLUDE "/Shared/preprocessor.include.ab3"
0000B7E6 <preprocessor.include.ab3@406> XINCLUDE "/Shared/preprocessor.include.ab3"
0000B7F4 <preprocessor.include.ab3@407> XINCLUDE "/Shared/preprocessor.include.ab3"
0000B82A <preprocessor.include.ab3@408> XINCLUDE "/Shared/preprocessor.include.ab3"
0000B84E <preprocessor.include.ab3@409> XINCLUDE "/Shared/preprocessor.include.ab3"
0000B862 <preprocessor.include.ab3@412> XINCLUDE "/Shared/preprocessor.include.ab3"
0000B872 <preprocessor.include.ab3@414> XINCLUDE "/Shared/preprocessor.include.ab3"
0000B890 <preprocessor.include.ab3@415> XINCLUDE "/Shared/preprocessor.include.ab3"
0000B89E <preprocessor.include.ab3@416> XINCLUDE "/Shared/preprocessor.include.ab3"
0000B8C2 <preprocessor.include.ab3@417> XINCLUDE "/Shared/preprocessor.include.ab3"
0000B8E6 <preprocessor.include.ab3@418> XINCLUDE "/Shared/preprocessor.include.ab3"
0000B8F4 <preprocessor.include.ab3@422> XINCLUDE "/Shared/preprocessor.include.ab3"
0000B902 <preprocessor.include.ab3@423> XINCLUDE "/Shared/preprocessor.include.ab3"
0000B922 <preprocessor.include.ab3@424> XINCLUDE "/Shared/preprocessor.include.ab3"
0000B930 <preprocessor.include.ab3@425> XINCLUDE "/Shared/preprocessor.include.ab3"
0000B936 <preprocessor.include.ab3@426> XINCLUDE "/Shared/preprocessor.include.ab3"
0000B93C <preprocessor.include.ab3@429> XINCLUDE "/Shared/preprocessor.include.ab3"
0000B94A <preprocessor.include.ab3@431> XINCLUDE "/Shared/preprocessor.include.ab3"
0000B958 <preprocessor.include.ab3@432> XINCLUDE "/Shared/preprocessor.include.ab3"
0000B978 <preprocessor.include.ab3@433> XINCLUDE "/Shared/preprocessor.include.ab3"
0000B986 <preprocessor.include.ab3@434> XINCLUDE "/Shared/preprocessor.include.ab3"
0000B98C <preprocessor.include.ab3@435> XINCLUDE "/Shared/preprocessor.include.ab3"
0000B99C <preprocessor.include.ab3@440> XINCLUDE "/Shared/preprocessor.include.ab3"
0000B9A6 <preprocessor.include.ab3@442> XINCLUDE "/Shared/preprocessor.include.ab3"
0000B9BA <preprocessor.include.ab3@443> XINCLUDE "/Shared/preprocessor.include.ab3"
0000B9E0 <preprocessor.include.ab3@448> XINCLUDE "/Shared/preprocessor.include.ab3"
0000BA00 <preprocessor.include.ab3@449> XINCLUDE "/Shared/preprocessor.include.ab3"
0000BA26 <preprocessor.include.ab3@450> XINCLUDE "/Shared/preprocessor.include.ab3"
0000BA2C <preprocessor.include.ab3@451> XINCLUDE "/Shared/preprocessor.include.ab3"
0000BA3A <preprocessor.include.ab3@452> XINCLUDE "/Shared/preprocessor.include.ab3"
0000BA40 <preprocessor.include.ab3@453> XINCLUDE "/Shared/preprocessor.include.ab3"
0000BA54 <preprocessor.include.ab3@454> XINCLUDE "/Shared/preprocessor.include.ab3"
0000BA64 <preprocessor.include.ab3@455> XINCLUDE "/Shared/preprocessor.include.ab3"
0000BA7A <preprocessor.include.ab3@457> XINCLUDE "/Shared/preprocessor.include.ab3"
0000BA92 <preprocessor.include.ab3@459> XINCLUDE "/Shared/preprocessor.include.ab3"
0000BAAE <preprocessor.include.ab3@460> XINCLUDE "/Shared/preprocessor.include.ab3"
0000BAB8 <preprocessor.include.ab3@461> XINCLUDE "/Shared/preprocessor.include.ab3"
0000BAD4 <preprocessor.include.ab3@462> XINCLUDE "/Shared/preprocessor.include.ab3"
0000BB02 <preprocessor.include.ab3@463> XINCLUDE "/Shared/preprocessor.include.ab3"
0000BB3E <preprocessor.include.ab3@464> XINCLUDE "/Shared/preprocessor.include.ab3"
0000BB4E <preprocessor.include.ab3@465> XINCLUDE "/Shared/preprocessor.include.ab3"
0000BB5C <preprocessor.include.ab3@467> XINCLUDE "/Shared/preprocessor.include.ab3"
0000BB62 <preprocessor.include.ab3@468> XINCLUDE "/Shared/preprocessor.include.ab3"
0000BB72 <preprocessor.include.ab3@469> XINCLUDE "/Shared/preprocessor.include.ab3"
0000BB9C <preprocessor.include.ab3@470> XINCLUDE "/Shared/preprocessor.include.ab3"
0000BBA2 <preprocessor.include.ab3@471> XINCLUDE "/Shared/preprocessor.include.ab3"
0000BBCE <preprocessor.include.ab3@472> XINCLUDE "/Shared/preprocessor.include.ab3"
0000BBDE <preprocessor.include.ab3@474> XINCLUDE "/Shared/preprocessor.include.ab3"
0000BBEE <preprocessor.include.ab3@476> XINCLUDE "/Shared/preprocessor.include.ab3"
0000BC0C <preprocessor.include.ab3@477> XINCLUDE "/Shared/preprocessor.include.ab3"
0000BC1A <preprocessor.include.ab3@478> XINCLUDE "/Shared/preprocessor.include.ab3"
0000BC50 <preprocessor.include.ab3@479> XINCLUDE "/Shared/preprocessor.include.ab3"
0000BC74 <preprocessor.include.ab3@480> XINCLUDE "/Shared/preprocessor.include.ab3"
0000BC88 <preprocessor.include.ab3@483> XINCLUDE "/Shared/preprocessor.include.ab3"
0000BC98 <preprocessor.include.ab3@485> XINCLUDE "/Shared/preprocessor.include.ab3"
0000BCB6 <preprocessor.include.ab3@486> XINCLUDE "/Shared/preprocessor.include.ab3"
0000BCC4 <preprocessor.include.ab3@487> XINCLUDE "/Shared/preprocessor.include.ab3"
0000BCE8 <preprocessor.include.ab3@488> XINCLUDE "/Shared/preprocessor.include.ab3"
0000BD0C <preprocessor.include.ab3@489> XINCLUDE "/Shared/preprocessor.include.ab3"
0000BD12 <preprocessor.include.ab3@493> XINCLUDE "/Shared/preprocessor.include.ab3"
0000BD22 <preprocessor.include.ab3@494> XINCLUDE "/Shared/preprocessor.include.ab3"
0000BD28 <preprocessor.include.ab3@495> XINCLUDE "/Shared/preprocessor.include.ab3"
0000BD5E <preprocessor.include.ab3@498> XINCLUDE "/Shared/preprocessor.include.ab3"
0000BD7C <preprocessor.include.ab3@499> XINCLUDE "/Shared/preprocessor.include.ab3"
0000BDA2 <preprocessor.include.ab3@500> XINCLUDE "/Shared/preprocessor.include.ab3"
0000BDC2 <preprocessor.include.ab3@501> XINCLUDE "/Shared/preprocessor.include.ab3"
0000BDE0 <preprocessor.include.ab3@502> XINCLUDE "/Shared/preprocessor.include.ab3"
0000BE0E <preprocessor.include.ab3@503> XINCLUDE "/Shared/preprocessor.include.ab3"
0000BE70 <preprocessor.include.ab3@504> XINCLUDE "/Shared/preprocessor.include.ab3"
0000BE8A <preprocessor.include.ab3@505> XINCLUDE "/Shared/preprocessor.include.ab3"
0000BEA4 <preprocessor.include.ab3@509> XINCLUDE "/Shared/preprocessor.include.ab3"
0000BEAE <preprocessor.include.ab3@510> XINCLUDE "/Shared/preprocessor.include.ab3"
0000BEEC <preprocessor.include.ab3@511> XINCLUDE "/Shared/preprocessor.include.ab3"
0000BEF0 <preprocessor.include.ab3@512> XINCLUDE "/Shared/preprocessor.include.ab3"
0000BEFA <preprocessor.include.ab3@514> XINCLUDE "/Shared/preprocessor.include.ab3"
0000BF28 <preprocessor.include.ab3@515> XINCLUDE "/Shared/preprocessor.include.ab3"
0000BF48 <preprocessor.include.ab3@516> XINCLUDE "/Shared/preprocessor.include.ab3"
0000BF60 <preprocessor.include.ab3@517> XINCLUDE "/Shared/preprocessor.include.ab3"
0000BFBE <preprocessor.include.ab3@518> XINCLUDE "/Shared/preprocessor.include.ab3"
0000BFEA <preprocessor.include.ab3@519> XINCLUDE "/Shared/preprocessor.include.ab3"
0000BFFC <preprocessor.include.ab3@520> XINCLUDE "/Shared/preprocessor.include.ab3"
0000C00C <preprocessor.include.ab3@521> XINCLUDE "/Shared/preprocessor.include.ab3"
0000C024 <preprocessor.include.ab3@522> XINCLUDE "/Shared/preprocessor.include.ab3"
0000C02A <preprocessor.include.ab3@524> XINCLUDE "/Shared/preprocessor.include.ab3"
0000C064 <preprocessor.include.ab3@525> XINCLUDE "/Shared/preprocessor.include.ab3"
0000C06E <preprocessor.include.ab3@527> XINCLUDE "/Shared/preprocessor.include.ab3"
0000C074 <preprocessor.include.ab3@528> XINCLUDE "/Shared/preprocessor.include.ab3"
0000C07E <preprocessor.include.ab3@529> XINCLUDE "/Shared/preprocessor.include.ab3"
0000C090 <preprocessor.include.ab3@530> XINCLUDE "/Shared/preprocessor.include.ab3"
0000C090 <AmiBlitz3.ab2@90> XINCLUDE "/Shared/preprocessor.include.ab3"
0000C090 <wizard_Table.include.bb2@1> XINCLUDE "PE/wizard_Table.include.bb2"
0000C09C <wizard_Table.include.bb2@73> XINCLUDE "PE/wizard_Table.include.bb2"
0000C0BE <wizard_Table.include.bb2@78> XINCLUDE "PE/wizard_Table.include.bb2"
0000C11A <wizard_Table.include.bb2@79> XINCLUDE "PE/wizard_Table.include.bb2"
0000C120 <wizard_Table.include.bb2@80> XINCLUDE "PE/wizard_Table.include.bb2"
0000C120 <wizard_Tools.include.bb2@1> XINCLUDE "PE/wizard_Table.include.bb2"
0000C120 <screen.include.bb2@1> XINCLUDE "PE/wizard_Table.include.bb2"
0000C120 <asl.include.bb2@1> XINCLUDE "PE/wizard_Table.include.bb2"
0000C144 <asl.include.bb2@93> XINCLUDE "PE/wizard_Table.include.bb2"
0000C16C <asl.include.bb2@94> XINCLUDE "PE/wizard_Table.include.bb2"
0000C190 <asl.include.bb2@95> XINCLUDE "PE/wizard_Table.include.bb2"
0000C1BE <asl.include.bb2@294> XINCLUDE "PE/wizard_Table.include.bb2"
0000C3DC <asl.include.bb2@296> XINCLUDE "PE/wizard_Table.include.bb2"
0000C40A <asl.include.bb2@298> XINCLUDE "PE/wizard_Table.include.bb2"
0000C436 <asl.include.bb2@300> XINCLUDE "PE/wizard_Table.include.bb2"
0000C472 <asl.include.bb2@301> XINCLUDE "PE/wizard_Table.include.bb2"
0000C49E <asl.include.bb2@302> XINCLUDE "PE/wizard_Table.include.bb2"
0000C4CA <asl.include.bb2@303> XINCLUDE "PE/wizard_Table.include.bb2"
0000C4F6 <asl.include.bb2@304> XINCLUDE "PE/wizard_Table.include.bb2"
0000C522 <asl.include.bb2@305> XINCLUDE "PE/wizard_Table.include.bb2"
0000C54E <asl.include.bb2@306> XINCLUDE "PE/wizard_Table.include.bb2"
0000C57A <asl.include.bb2@307> XINCLUDE "PE/wizard_Table.include.bb2"
0000C5A6 <asl.include.bb2@308> XINCLUDE "PE/wizard_Table.include.bb2"
0000C5D2 <asl.include.bb2@309> XINCLUDE "PE/wizard_Table.include.bb2"
0000C662 <asl.include.bb2@311> XINCLUDE "PE/wizard_Table.include.bb2"
0000C6F2 <asl.include.bb2@312> XINCLUDE "PE/wizard_Table.include.bb2"
0000C790 <asl.include.bb2@313> XINCLUDE "PE/wizard_Table.include.bb2"
0000C7DA <asl.include.bb2@314> XINCLUDE "PE/wizard_Table.include.bb2"
0000C81A <asl.include.bb2@315> XINCLUDE "PE/wizard_Table.include.bb2"
0000C820 <asl.include.bb2@316> XINCLUDE "PE/wizard_Table.include.bb2"
0000C86A <asl.include.bb2@319> XINCLUDE "PE/wizard_Table.include.bb2"
0000C8AA <asl.include.bb2@320> XINCLUDE "PE/wizard_Table.include.bb2"
0000C8D4 <asl.include.bb2@321> XINCLUDE "PE/wizard_Table.include.bb2"
0000C8DA <asl.include.bb2@322> XINCLUDE "PE/wizard_Table.include.bb2"
0000C904 <asl.include.bb2@323> XINCLUDE "PE/wizard_Table.include.bb2"
0000C92E <asl.include.bb2@325> XINCLUDE "PE/wizard_Table.include.bb2"
0000C958 <asl.include.bb2@327> XINCLUDE "PE/wizard_Table.include.bb2"
0000C962 <asl.include.bb2@328> XINCLUDE "PE/wizard_Table.include.bb2"
0000C980 <asl.include.bb2@329> XINCLUDE "PE/wizard_Table.include.bb2"
0000C9A2 <asl.include.bb2@330> XINCLUDE "PE/wizard_Table.include.bb2"
0000C9D0 <asl.include.bb2@331> XINCLUDE "PE/wizard_Table.include.bb2"
0000C9FE <asl.include.bb2@332> XINCLUDE "PE/wizard_Table.include.bb2"
0000CA2C <asl.include.bb2@333> XINCLUDE "PE/wizard_Table.include.bb2"
0000CA72 <asl.include.bb2@336> XINCLUDE "PE/wizard_Table.include.bb2"
0000CAB8 <asl.include.bb2@337> XINCLUDE "PE/wizard_Table.include.bb2"
0000CAFE <asl.include.bb2@338> XINCLUDE "PE/wizard_Table.include.bb2"
0000CB36 <asl.include.bb2@340> XINCLUDE "PE/wizard_Table.include.bb2"
0000CC34 <asl.include.bb2@341> XINCLUDE "PE/wizard_Table.include.bb2"
0000CC52 <asl.include.bb2@343> XINCLUDE "PE/wizard_Table.include.bb2"
0000CC5C <asl.include.bb2@345> XINCLUDE "PE/wizard_Table.include.bb2"
0000CC82 <asl.include.bb2@346> XINCLUDE "PE/wizard_Table.include.bb2"
0000CC94 <asl.include.bb2@348> XINCLUDE "PE/wizard_Table.include.bb2"
0000CCC2 <asl.include.bb2@349> XINCLUDE "PE/wizard_Table.include.bb2"
0000CCEA <asl.include.bb2@350> XINCLUDE "PE/wizard_Table.include.bb2"
0000CCFC <asl.include.bb2@351> XINCLUDE "PE/wizard_Table.include.bb2"
0000CD52 <asl.include.bb2@352> XINCLUDE "PE/wizard_Table.include.bb2"
0000CD88 <asl.include.bb2@353> XINCLUDE "PE/wizard_Table.include.bb2"
0000CD98 <asl.include.bb2@355> XINCLUDE "PE/wizard_Table.include.bb2"
0000CD9E <asl.include.bb2@356> XINCLUDE "PE/wizard_Table.include.bb2"
0000CDB0 <asl.include.bb2@357> XINCLUDE "PE/wizard_Table.include.bb2"
0000CDBA <asl.include.bb2@358> XINCLUDE "PE/wizard_Table.include.bb2"
0000CDF4 <asl.include.bb2@359> XINCLUDE "PE/wizard_Table.include.bb2"
0000CDFA <asl.include.bb2@360> XINCLUDE "PE/wizard_Table.include.bb2"
0000CE52 <asl.include.bb2@361> XINCLUDE "PE/wizard_Table.include.bb2"
0000CE70 <asl.include.bb2@363> XINCLUDE "PE/wizard_Table.include.bb2"
0000CE76 <asl.include.bb2@366> XINCLUDE "PE/wizard_Table.include.bb2"
0000CE86 <asl.include.bb2@369> XINCLUDE "PE/wizard_Table.include.bb2"
0000CE96 <asl.include.bb2@370> XINCLUDE "PE/wizard_Table.include.bb2"
0000CEA6 <asl.include.bb2@371> XINCLUDE "PE/wizard_Table.include.bb2"
0000CEB6 <asl.include.bb2@372> XINCLUDE "PE/wizard_Table.include.bb2"
0000CEC6 <asl.include.bb2@374> XINCLUDE "PE/wizard_Table.include.bb2"
0000CED0 <asl.include.bb2@376> XINCLUDE "PE/wizard_Table.include.bb2"
0000CEE4 <asl.include.bb2@377> XINCLUDE "PE/wizard_Table.include.bb2"
0000CEFA <asl.include.bb2@393> XINCLUDE "PE/wizard_Table.include.bb2"
0000CF22 <asl.include.bb2@395> XINCLUDE "PE/wizard_Table.include.bb2"
0000CF2C <asl.include.bb2@396> XINCLUDE "PE/wizard_Table.include.bb2"
0000CF3E <asl.include.bb2@397> XINCLUDE "PE/wizard_Table.include.bb2"
0000CF78 <asl.include.bb2@398> XINCLUDE "PE/wizard_Table.include.bb2"
0000CF82 <asl.include.bb2@399> XINCLUDE "PE/wizard_Table.include.bb2"
0000CFAC <asl.include.bb2@401> XINCLUDE "PE/wizard_Table.include.bb2"
0000CFC4 <asl.include.bb2@402> XINCLUDE "PE/wizard_Table.include.bb2"
0000D016 <asl.include.bb2@438> XINCLUDE "PE/wizard_Table.include.bb2"
0000D044 <asl.include.bb2@440> XINCLUDE "PE/wizard_Table.include.bb2"
0000D0D6 <asl.include.bb2@441> XINCLUDE "PE/wizard_Table.include.bb2"
0000D11C <asl.include.bb2@442> XINCLUDE "PE/wizard_Table.include.bb2"
0000D1AE <asl.include.bb2@443> XINCLUDE "PE/wizard_Table.include.bb2"
0000D1C8 <asl.include.bb2@444> XINCLUDE "PE/wizard_Table.include.bb2"
0000D212 <asl.include.bb2@629> XINCLUDE "PE/wizard_Table.include.bb2"
0000D246 <asl.include.bb2@630> XINCLUDE "PE/wizard_Table.include.bb2"
0000D27E <asl.include.bb2@631> XINCLUDE "PE/wizard_Table.include.bb2"
0000D2B6 <asl.include.bb2@632> XINCLUDE "PE/wizard_Table.include.bb2"
0000D2D0 <asl.include.bb2@633> XINCLUDE "PE/wizard_Table.include.bb2"
0000D2FA <asl.include.bb2@677> XINCLUDE "PE/wizard_Table.include.bb2"
0000D518 <asl.include.bb2@678> XINCLUDE "PE/wizard_Table.include.bb2"
0000D544 <asl.include.bb2@680> XINCLUDE "PE/wizard_Table.include.bb2"
0000D5B0 <asl.include.bb2@681> XINCLUDE "PE/wizard_Table.include.bb2"
0000D5DC <asl.include.bb2@682> XINCLUDE "PE/wizard_Table.include.bb2"
0000D608 <asl.include.bb2@683> XINCLUDE "PE/wizard_Table.include.bb2"
0000D634 <asl.include.bb2@684> XINCLUDE "PE/wizard_Table.include.bb2"
0000D660 <asl.include.bb2@685> XINCLUDE "PE/wizard_Table.include.bb2"
0000D6AA <asl.include.bb2@687> XINCLUDE "PE/wizard_Table.include.bb2"
0000D6F4 <asl.include.bb2@688> XINCLUDE "PE/wizard_Table.include.bb2"
0000D73E <asl.include.bb2@689> XINCLUDE "PE/wizard_Table.include.bb2"
0000D788 <asl.include.bb2@690> XINCLUDE "PE/wizard_Table.include.bb2"
0000D7D2 <asl.include.bb2@691> XINCLUDE "PE/wizard_Table.include.bb2"
0000D81C <asl.include.bb2@692> XINCLUDE "PE/wizard_Table.include.bb2"
0000D866 <asl.include.bb2@694> XINCLUDE "PE/wizard_Table.include.bb2"
0000D8AE <asl.include.bb2@695> XINCLUDE "PE/wizard_Table.include.bb2"
0000D8F8 <asl.include.bb2@696> XINCLUDE "PE/wizard_Table.include.bb2"
0000D942 <asl.include.bb2@697> XINCLUDE "PE/wizard_Table.include.bb2"
0000D96E <asl.include.bb2@699> XINCLUDE "PE/wizard_Table.include.bb2"
0000D99A <asl.include.bb2@700> XINCLUDE "PE/wizard_Table.include.bb2"
0000D9C6 <asl.include.bb2@701> XINCLUDE "PE/wizard_Table.include.bb2"
0000D9F2 <asl.include.bb2@702> XINCLUDE "PE/wizard_Table.include.bb2"
0000DA1E <asl.include.bb2@703> XINCLUDE "PE/wizard_Table.include.bb2"
0000DA3A <asl.include.bb2@704> XINCLUDE "PE/wizard_Table.include.bb2"
0000DA64 <asl.include.bb2@706> XINCLUDE "PE/wizard_Table.include.bb2"
0000DA6E <asl.include.bb2@707> XINCLUDE "PE/wizard_Table.include.bb2"
0000DA8C <asl.include.bb2@708> XINCLUDE "PE/wizard_Table.include.bb2"
0000DAAE <asl.include.bb2@709> XINCLUDE "PE/wizard_Table.include.bb2"
0000DAC0 <asl.include.bb2@710> XINCLUDE "PE/wizard_Table.include.bb2"
0000DAD2 <asl.include.bb2@711> XINCLUDE "PE/wizard_Table.include.bb2"
0000DAE4 <asl.include.bb2@712> XINCLUDE "PE/wizard_Table.include.bb2"
0000DAF6 <asl.include.bb2@713> XINCLUDE "PE/wizard_Table.include.bb2"
0000DB04 <asl.include.bb2@714> XINCLUDE "PE/wizard_Table.include.bb2"
0000DB16 <asl.include.bb2@715> XINCLUDE "PE/wizard_Table.include.bb2"
0000DB20 <asl.include.bb2@716> XINCLUDE "PE/wizard_Table.include.bb2"
0000DB30 <asl.include.bb2@718> XINCLUDE "PE/wizard_Table.include.bb2"
0000DB40 <asl.include.bb2@719> XINCLUDE "PE/wizard_Table.include.bb2"
0000DB50 <asl.include.bb2@720> XINCLUDE "PE/wizard_Table.include.bb2"
0000DB60 <asl.include.bb2@721> XINCLUDE "PE/wizard_Table.include.bb2"
0000DB70 <asl.include.bb2@723> XINCLUDE "PE/wizard_Table.include.bb2"
0000DB76 <asl.include.bb2@724> XINCLUDE "PE/wizard_Table.include.bb2"
0000DBA4 <asl.include.bb2@725> XINCLUDE "PE/wizard_Table.include.bb2"
0000DBAE <asl.include.bb2@727> XINCLUDE "PE/wizard_Table.include.bb2"
0000DBB4 <asl.include.bb2@728> XINCLUDE "PE/wizard_Table.include.bb2"
0000DBCE <asl.include.bb2@746> XINCLUDE "PE/wizard_Table.include.bb2"
0000DBF6 <asl.include.bb2@748> XINCLUDE "PE/wizard_Table.include.bb2"
0000DC18 <asl.include.bb2@749> XINCLUDE "PE/wizard_Table.include.bb2"
0000DC40 <asl.include.bb2@750> XINCLUDE "PE/wizard_Table.include.bb2"
0000DC6E <asl.include.bb2@751> XINCLUDE "PE/wizard_Table.include.bb2"
0000DC78 <asl.include.bb2@752> XINCLUDE "PE/wizard_Table.include.bb2"
0000DC92 <asl.include.bb2@753> XINCLUDE "PE/wizard_Table.include.bb2"
0000DCBA <asl.include.bb2@756> XINCLUDE "PE/wizard_Table.include.bb2"
0000DCCE <asl.include.bb2@757> XINCLUDE "PE/wizard_Table.include.bb2"
0000DCD8 <asl.include.bb2@758> XINCLUDE "PE/wizard_Table.include.bb2"
0000DD12 <asl.include.bb2@759> XINCLUDE "PE/wizard_Table.include.bb2"
0000DD40 <asl.include.bb2@760> XINCLUDE "PE/wizard_Table.include.bb2"
0000DD6A <asl.include.bb2@763> XINCLUDE "PE/wizard_Table.include.bb2"
0000DD92 <asl.include.bb2@764> XINCLUDE "PE/wizard_Table.include.bb2"
0000DDA8 <asl.include.bb2@782> XINCLUDE "PE/wizard_Table.include.bb2"
0000DDB8 <asl.include.bb2@784> XINCLUDE "PE/wizard_Table.include.bb2"
0000DDBC <asl.include.bb2@785> XINCLUDE "PE/wizard_Table.include.bb2"
0000DDD2 <asl.include.bb2@801> XINCLUDE "PE/wizard_Table.include.bb2"
0000DDE2 <asl.include.bb2@803> XINCLUDE "PE/wizard_Table.include.bb2"
0000DDE6 <asl.include.bb2@804> XINCLUDE "PE/wizard_Table.include.bb2"
0000DDFC <asl.include.bb2@821> XINCLUDE "PE/wizard_Table.include.bb2"
0000DE0E <asl.include.bb2@823> XINCLUDE "PE/wizard_Table.include.bb2"
0000DE12 <asl.include.bb2@824> XINCLUDE "PE/wizard_Table.include.bb2"
0000DE28 <asl.include.bb2@840> XINCLUDE "PE/wizard_Table.include.bb2"
0000DE38 <asl.include.bb2@842> XINCLUDE "PE/wizard_Table.include.bb2"
0000DE3C <asl.include.bb2@843> XINCLUDE "PE/wizard_Table.include.bb2"
0000DE52 <asl.include.bb2@859> XINCLUDE "PE/wizard_Table.include.bb2"
0000DE64 <asl.include.bb2@861> XINCLUDE "PE/wizard_Table.include.bb2"
0000DE68 <asl.include.bb2@862> XINCLUDE "PE/wizard_Table.include.bb2"
0000DE7E <asl.include.bb2@876> XINCLUDE "PE/wizard_Table.include.bb2"
0000DE90 <asl.include.bb2@878> XINCLUDE "PE/wizard_Table.include.bb2"
0000DE94 <asl.include.bb2@879> XINCLUDE "PE/wizard_Table.include.bb2"
0000DEB6 <asl.include.bb2@923> XINCLUDE "PE/wizard_Table.include.bb2"
0000DEC2 <asl.include.bb2@924> XINCLUDE "PE/wizard_Table.include.bb2"
0000DECE <asl.include.bb2@925> XINCLUDE "PE/wizard_Table.include.bb2"
0000DEDA <asl.include.bb2@926> XINCLUDE "PE/wizard_Table.include.bb2"
0000DEDE <asl.include.bb2@927> XINCLUDE "PE/wizard_Table.include.bb2"
0000DF00 <asl.include.bb2@972> XINCLUDE "PE/wizard_Table.include.bb2"
0000DF0C <asl.include.bb2@973> XINCLUDE "PE/wizard_Table.include.bb2"
0000DF18 <asl.include.bb2@974> XINCLUDE "PE/wizard_Table.include.bb2"
0000DF24 <asl.include.bb2@975> XINCLUDE "PE/wizard_Table.include.bb2"
0000DF28 <asl.include.bb2@976> XINCLUDE "PE/wizard_Table.include.bb2"
0000DF42 <asl.include.bb2@990> XINCLUDE "PE/wizard_Table.include.bb2"
0000DF4E <asl.include.bb2@992> XINCLUDE "PE/wizard_Table.include.bb2"
0000DF76 <asl.include.bb2@993> XINCLUDE "PE/wizard_Table.include.bb2"
0000DF8A <asl.include.bb2@994> XINCLUDE "PE/wizard_Table.include.bb2"
0000DF94 <asl.include.bb2@995> XINCLUDE "PE/wizard_Table.include.bb2"
0000DFCA <asl.include.bb2@996> XINCLUDE "PE/wizard_Table.include.bb2"
0000DFF2 <asl.include.bb2@998> XINCLUDE "PE/wizard_Table.include.bb2"
0000E01A <asl.include.bb2@999> XINCLUDE "PE/wizard_Table.include.bb2"
0000E03C <asl.include.bb2@1002> XINCLUDE "PE/wizard_Table.include.bb2"
0000E03C <screen.include.bb2@38> XINCLUDE "PE/wizard_Table.include.bb2"
0000E060 <screen.include.bb2@89> XINCLUDE "PE/wizard_Table.include.bb2"
0000E070 <screen.include.bb2@92> XINCLUDE "PE/wizard_Table.include.bb2"
0000E07E <screen.include.bb2@93> XINCLUDE "PE/wizard_Table.include.bb2"
0000E088 <screen.include.bb2@94> XINCLUDE "PE/wizard_Table.include.bb2"
0000E096 <screen.include.bb2@95> XINCLUDE "PE/wizard_Table.include.bb2"
0000E0B8 <screen.include.bb2@219> XINCLUDE "PE/wizard_Table.include.bb2"
0000E0DC <screen.include.bb2@220> XINCLUDE "PE/wizard_Table.include.bb2"
0000E0FC <screen.include.bb2@221> XINCLUDE "PE/wizard_Table.include.bb2"
0000E116 <screen.include.bb2@222> XINCLUDE "PE/wizard_Table.include.bb2"
0000E130 <screen.include.bb2@223> XINCLUDE "PE/wizard_Table.include.bb2"
0000E150 <screen.include.bb2@225> XINCLUDE "PE/wizard_Table.include.bb2"
0000E16A <screen.include.bb2@226> XINCLUDE "PE/wizard_Table.include.bb2"
0000E184 <screen.include.bb2@227> XINCLUDE "PE/wizard_Table.include.bb2"
0000E1A4 <screen.include.bb2@229> XINCLUDE "PE/wizard_Table.include.bb2"
0000E1BE <screen.include.bb2@230> XINCLUDE "PE/wizard_Table.include.bb2"
0000E1D8 <screen.include.bb2@231> XINCLUDE "PE/wizard_Table.include.bb2"
0000E1E8 <screen.include.bb2@233> XINCLUDE "PE/wizard_Table.include.bb2"
0000E1F8 <screen.include.bb2@234> XINCLUDE "PE/wizard_Table.include.bb2"
0000E208 <screen.include.bb2@235> XINCLUDE "PE/wizard_Table.include.bb2"
0000E21A <screen.include.bb2@236> XINCLUDE "PE/wizard_Table.include.bb2"
0000E228 <screen.include.bb2@237> XINCLUDE "PE/wizard_Table.include.bb2"
0000E278 <screen.include.bb2@238> XINCLUDE "PE/wizard_Table.include.bb2"
0000E2C8 <screen.include.bb2@239> XINCLUDE "PE/wizard_Table.include.bb2"
0000E316 <screen.include.bb2@240> XINCLUDE "PE/wizard_Table.include.bb2"
0000E320 <screen.include.bb2@241> XINCLUDE "PE/wizard_Table.include.bb2"
0000E326 <screen.include.bb2@242> XINCLUDE "PE/wizard_Table.include.bb2"
0000E340 <screen.include.bb2@261> XINCLUDE "PE/wizard_Table.include.bb2"
0000E358 <screen.include.bb2@262> XINCLUDE "PE/wizard_Table.include.bb2"
0000E370 <screen.include.bb2@263> XINCLUDE "PE/wizard_Table.include.bb2"
0000E380 <screen.include.bb2@264> XINCLUDE "PE/wizard_Table.include.bb2"
0000E398 <screen.include.bb2@265> XINCLUDE "PE/wizard_Table.include.bb2"
0000E39E <screen.include.bb2@266> XINCLUDE "PE/wizard_Table.include.bb2"
0000E3B8 <screen.include.bb2@282> XINCLUDE "PE/wizard_Table.include.bb2"
0000E3CA <screen.include.bb2@283> XINCLUDE "PE/wizard_Table.include.bb2"
0000E3DC <screen.include.bb2@284> XINCLUDE "PE/wizard_Table.include.bb2"
0000E3EA <screen.include.bb2@285> XINCLUDE "PE/wizard_Table.include.bb2"
0000E406 <screen.include.bb2@286> XINCLUDE "PE/wizard_Table.include.bb2"
0000E41E <screen.include.bb2@287> XINCLUDE "PE/wizard_Table.include.bb2"
0000E446 <screen.include.bb2@288> XINCLUDE "PE/wizard_Table.include.bb2"
0000E44A <screen.include.bb2@291> XINCLUDE "PE/wizard_Table.include.bb2"
0000E470 <screen.include.bb2@313> XINCLUDE "PE/wizard_Table.include.bb2"
0000E48E <screen.include.bb2@314> XINCLUDE "PE/wizard_Table.include.bb2"
0000E4AE <screen.include.bb2@315> XINCLUDE "PE/wizard_Table.include.bb2"
0000E4C8 <screen.include.bb2@316> XINCLUDE "PE/wizard_Table.include.bb2"
0000E4E2 <screen.include.bb2@317> XINCLUDE "PE/wizard_Table.include.bb2"
0000E502 <screen.include.bb2@319> XINCLUDE "PE/wizard_Table.include.bb2"
0000E51C <screen.include.bb2@320> XINCLUDE "PE/wizard_Table.include.bb2"
0000E536 <screen.include.bb2@321> XINCLUDE "PE/wizard_Table.include.bb2"
0000E556 <screen.include.bb2@323> XINCLUDE "PE/wizard_Table.include.bb2"
0000E570 <screen.include.bb2@324> XINCLUDE "PE/wizard_Table.include.bb2"
0000E58A <screen.include.bb2@325> XINCLUDE "PE/wizard_Table.include.bb2"
0000E59A <screen.include.bb2@327> XINCLUDE "PE/wizard_Table.include.bb2"
0000E5AA <screen.include.bb2@328> XINCLUDE "PE/wizard_Table.include.bb2"
0000E5BA <screen.include.bb2@329> XINCLUDE "PE/wizard_Table.include.bb2"
0000E5CC <screen.include.bb2@330> XINCLUDE "PE/wizard_Table.include.bb2"
0000E5DA <screen.include.bb2@331> XINCLUDE "PE/wizard_Table.include.bb2"
0000E60A <screen.include.bb2@332> XINCLUDE "PE/wizard_Table.include.bb2"
0000E676 <screen.include.bb2@333> XINCLUDE "PE/wizard_Table.include.bb2"
0000E67A <screen.include.bb2@334> XINCLUDE "PE/wizard_Table.include.bb2"
0000E6A8 <screen.include.bb2@417> XINCLUDE "PE/wizard_Table.include.bb2"
0000E6AE <screen.include.bb2@418> XINCLUDE "PE/wizard_Table.include.bb2"
0000E714 <screen.include.bb2@419> XINCLUDE "PE/wizard_Table.include.bb2"
0000E73A <screen.include.bb2@420> XINCLUDE "PE/wizard_Table.include.bb2"
0000E754 <screen.include.bb2@421> XINCLUDE "PE/wizard_Table.include.bb2"
0000E77A <screen.include.bb2@422> XINCLUDE "PE/wizard_Table.include.bb2"
0000E7A0 <screen.include.bb2@423> XINCLUDE "PE/wizard_Table.include.bb2"
0000E7C6 <screen.include.bb2@424> XINCLUDE "PE/wizard_Table.include.bb2"
0000E7F0 <screen.include.bb2@425> XINCLUDE "PE/wizard_Table.include.bb2"
0000E7FA <screen.include.bb2@426> XINCLUDE "PE/wizard_Table.include.bb2"
0000E814 <screen.include.bb2@427> XINCLUDE "PE/wizard_Table.include.bb2"
0000E842 <screen.include.bb2@558> XINCLUDE "PE/wizard_Table.include.bb2"
0000E848 <screen.include.bb2@560> XINCLUDE "PE/wizard_Table.include.bb2"
0000E850 <screen.include.bb2@561> XINCLUDE "PE/wizard_Table.include.bb2"
0000E872 <screen.include.bb2@562> XINCLUDE "PE/wizard_Table.include.bb2"
0000E894 <screen.include.bb2@563> XINCLUDE "PE/wizard_Table.include.bb2"
0000E8B2 <screen.include.bb2@564> XINCLUDE "PE/wizard_Table.include.bb2"
0000E8D8 <screen.include.bb2@568> XINCLUDE "PE/wizard_Table.include.bb2"
0000E906 <screen.include.bb2@577> XINCLUDE "PE/wizard_Table.include.bb2"
0000E90C <screen.include.bb2@579> XINCLUDE "PE/wizard_Table.include.bb2"
0000E912 <screen.include.bb2@581> XINCLUDE "PE/wizard_Table.include.bb2"
0000E91C <screen.include.bb2@582> XINCLUDE "PE/wizard_Table.include.bb2"
0000E930 <screen.include.bb2@583> XINCLUDE "PE/wizard_Table.include.bb2"
0000E93C <screen.include.bb2@584> XINCLUDE "PE/wizard_Table.include.bb2"
0000E948 <screen.include.bb2@585> XINCLUDE "PE/wizard_Table.include.bb2"
0000E94E <screen.include.bb2@586> XINCLUDE "PE/wizard_Table.include.bb2"
0000E958 <screen.include.bb2@588> XINCLUDE "PE/wizard_Table.include.bb2"
0000E95E <screen.include.bb2@589> XINCLUDE "PE/wizard_Table.include.bb2"
0000E974 <screen.include.bb2@593> XINCLUDE "PE/wizard_Table.include.bb2"
0000E986 <screen.include.bb2@594> XINCLUDE "PE/wizard_Table.include.bb2"
0000E9B0 <screen.include.bb2@595> XINCLUDE "PE/wizard_Table.include.bb2"
0000E9E2 <screen.include.bb2@596> XINCLUDE "PE/wizard_Table.include.bb2"
0000E9F8 <screen.include.bb2@597> XINCLUDE "PE/wizard_Table.include.bb2"
0000EA08 <screen.include.bb2@598> XINCLUDE "PE/wizard_Table.include.bb2"
0000EA0C <screen.include.bb2@600> XINCLUDE "PE/wizard_Table.include.bb2"
0000EA22 <screen.include.bb2@614> XINCLUDE "PE/wizard_Table.include.bb2"
0000EA34 <screen.include.bb2@615> XINCLUDE "PE/wizard_Table.include.bb2"
0000EA3A <screen.include.bb2@616> XINCLUDE "PE/wizard_Table.include.bb2"
0000EA46 <screen.include.bb2@618> XINCLUDE "PE/wizard_Table.include.bb2"
0000EA54 <screen.include.bb2@620> XINCLUDE "PE/wizard_Table.include.bb2"
0000EA82 <screen.include.bb2@621> XINCLUDE "PE/wizard_Table.include.bb2"
0000EA96 <screen.include.bb2@623> XINCLUDE "PE/wizard_Table.include.bb2"
0000EAAA <screen.include.bb2@626> XINCLUDE "PE/wizard_Table.include.bb2"
0000EACA <screen.include.bb2@628> XINCLUDE "PE/wizard_Table.include.bb2"
0000EAE4 <screen.include.bb2@629> XINCLUDE "PE/wizard_Table.include.bb2"
0000EAF8 <screen.include.bb2@631> XINCLUDE "PE/wizard_Table.include.bb2"
0000EAFE <screen.include.bb2@634> XINCLUDE "PE/wizard_Table.include.bb2"
0000EB10 <screen.include.bb2@635> XINCLUDE "PE/wizard_Table.include.bb2"
0000EB1A <screen.include.bb2@637> XINCLUDE "PE/wizard_Table.include.bb2"
0000EB78 <screen.include.bb2@638> XINCLUDE "PE/wizard_Table.include.bb2"
0000EB8A <screen.include.bb2@639> XINCLUDE "PE/wizard_Table.include.bb2"
0000EBCC <screen.include.bb2@640> XINCLUDE "PE/wizard_Table.include.bb2"
0000EBD2 <screen.include.bb2@641> XINCLUDE "PE/wizard_Table.include.bb2"
0000EBD8 <screen.include.bb2@642> XINCLUDE "PE/wizard_Table.include.bb2"
0000EBEC <screen.include.bb2@644> XINCLUDE "PE/wizard_Table.include.bb2"
0000EC06 <screen.include.bb2@646> XINCLUDE "PE/wizard_Table.include.bb2"
0000EC08 <screen.include.bb2@648> XINCLUDE "PE/wizard_Table.include.bb2"
0000EC12 <screen.include.bb2@649> XINCLUDE "PE/wizard_Table.include.bb2"
0000EC20 <screen.include.bb2@650> XINCLUDE "PE/wizard_Table.include.bb2"
0000EC2E <screen.include.bb2@651> XINCLUDE "PE/wizard_Table.include.bb2"
0000EC40 <screen.include.bb2@653> XINCLUDE "PE/wizard_Table.include.bb2"
0000EC56 <screen.include.bb2@654> XINCLUDE "PE/wizard_Table.include.bb2"
0000EC64 <screen.include.bb2@655> XINCLUDE "PE/wizard_Table.include.bb2"
0000EC68 <screen.include.bb2@659> XINCLUDE "PE/wizard_Table.include.bb2"
0000EC96 <screen.include.bb2@660> XINCLUDE "PE/wizard_Table.include.bb2"
0000ECAC <screen.include.bb2@964> XINCLUDE "PE/wizard_Table.include.bb2"
0000ECB8 <screen.include.bb2@965> XINCLUDE "PE/wizard_Table.include.bb2"
0000ECBC <screen.include.bb2@966> XINCLUDE "PE/wizard_Table.include.bb2"
0000ECD2 <screen.include.bb2@982> XINCLUDE "PE/wizard_Table.include.bb2"
0000ECE2 <screen.include.bb2@983> XINCLUDE "PE/wizard_Table.include.bb2"
0000ECE6 <screen.include.bb2@984> XINCLUDE "PE/wizard_Table.include.bb2"
0000ECE6 <PE_Tools.include.bb2@1> XINCLUDE "PE/wizard_Table.include.bb2"
0000ED0A <PE_Tools.include.bb2@67> XINCLUDE "PE/wizard_Table.include.bb2"
0000ED12 <PE_Tools.include.bb2@76> XINCLUDE "PE/wizard_Table.include.bb2"
0000ED40 <PE_Tools.include.bb2@77> XINCLUDE "PE/wizard_Table.include.bb2"
0000ED6E <PE_Tools.include.bb2@78> XINCLUDE "PE/wizard_Table.include.bb2"
0000EDDE <PE_Tools.include.bb2@79> XINCLUDE "PE/wizard_Table.include.bb2"
0000EDEC <PE_Tools.include.bb2@80> XINCLUDE "PE/wizard_Table.include.bb2"
0000EE3C <PE_Tools.include.bb2@81> XINCLUDE "PE/wizard_Table.include.bb2"
0000EE5E <PE_Tools.include.bb2@213> XINCLUDE "PE/wizard_Table.include.bb2"
0000EE76 <PE_Tools.include.bb2@214> XINCLUDE "PE/wizard_Table.include.bb2"
0000EE7C <PE_Tools.include.bb2@215> XINCLUDE "PE/wizard_Table.include.bb2"
0000EE9A <PE_Tools.include.bb2@378> XINCLUDE "PE/wizard_Table.include.bb2"
0000EEBE <PE_Tools.include.bb2@380> XINCLUDE "PE/wizard_Table.include.bb2"
0000EEF2 <PE_Tools.include.bb2@381> XINCLUDE "PE/wizard_Table.include.bb2"
0000EF44 <PE_Tools.include.bb2@382> XINCLUDE "PE/wizard_Table.include.bb2"
0000EF9C <PE_Tools.include.bb2@383> XINCLUDE "PE/wizard_Table.include.bb2"
0000EFEE <PE_Tools.include.bb2@384> XINCLUDE "PE/wizard_Table.include.bb2"
0000EFFA <PE_Tools.include.bb2@386> XINCLUDE "PE/wizard_Table.include.bb2"
0000F00A <PE_Tools.include.bb2@387> XINCLUDE "PE/wizard_Table.include.bb2"
0000F080 <PE_Tools.include.bb2@388> XINCLUDE "PE/wizard_Table.include.bb2"
0000F096 <PE_Tools.include.bb2@389> XINCLUDE "PE/wizard_Table.include.bb2"
0000F12A <PE_Tools.include.bb2@390> XINCLUDE "PE/wizard_Table.include.bb2"
0000F140 <PE_Tools.include.bb2@391> XINCLUDE "PE/wizard_Table.include.bb2"
0000F1FC <PE_Tools.include.bb2@392> XINCLUDE "PE/wizard_Table.include.bb2"
0000F212 <PE_Tools.include.bb2@393> XINCLUDE "PE/wizard_Table.include.bb2"
0000F2A6 <PE_Tools.include.bb2@394> XINCLUDE "PE/wizard_Table.include.bb2"
0000F2AC <PE_Tools.include.bb2@395> XINCLUDE "PE/wizard_Table.include.bb2"
0000F340 <PE_Tools.include.bb2@396> XINCLUDE "PE/wizard_Table.include.bb2"
0000F342 <PE_Tools.include.bb2@397> XINCLUDE "PE/wizard_Table.include.bb2"
0000F36C <PE_Tools.include.bb2@398> XINCLUDE "PE/wizard_Table.include.bb2"
0000F384 <PE_Tools.include.bb2@399> XINCLUDE "PE/wizard_Table.include.bb2"
0000F3B2 <PE_Tools.include.bb2@408> XINCLUDE "PE/wizard_Table.include.bb2"
0000F3F6 <PE_Tools.include.bb2@412> XINCLUDE "PE/wizard_Table.include.bb2"
0000F4FE <PE_Tools.include.bb2@413> XINCLUDE "PE/wizard_Table.include.bb2"
0000F522 <PE_Tools.include.bb2@416> XINCLUDE "PE/wizard_Table.include.bb2"
0000F54E <PE_Tools.include.bb2@417> XINCLUDE "PE/wizard_Table.include.bb2"
0000F558 <PE_Tools.include.bb2@418> XINCLUDE "PE/wizard_Table.include.bb2"
0000F582 <PE_Tools.include.bb2@419> XINCLUDE "PE/wizard_Table.include.bb2"
0000F61A <PE_Tools.include.bb2@420> XINCLUDE "PE/wizard_Table.include.bb2"
0000F620 <PE_Tools.include.bb2@421> XINCLUDE "PE/wizard_Table.include.bb2"
0000F630 <PE_Tools.include.bb2@423> XINCLUDE "PE/wizard_Table.include.bb2"
0000F636 <PE_Tools.include.bb2@425> XINCLUDE "PE/wizard_Table.include.bb2"
0000F644 <PE_Tools.include.bb2@426> XINCLUDE "PE/wizard_Table.include.bb2"
0000F67C <PE_Tools.include.bb2@427> XINCLUDE "PE/wizard_Table.include.bb2"
0000F68C <PE_Tools.include.bb2@428> XINCLUDE "PE/wizard_Table.include.bb2"
0000F6A4 <PE_Tools.include.bb2@429> XINCLUDE "PE/wizard_Table.include.bb2"
0000F742 <PE_Tools.include.bb2@430> XINCLUDE "PE/wizard_Table.include.bb2"
0000F7FA <PE_Tools.include.bb2@431> XINCLUDE "PE/wizard_Table.include.bb2"
0000F85A <PE_Tools.include.bb2@432> XINCLUDE "PE/wizard_Table.include.bb2"
0000F8E4 <PE_Tools.include.bb2@433> XINCLUDE "PE/wizard_Table.include.bb2"
0000F8FA <PE_Tools.include.bb2@434> XINCLUDE "PE/wizard_Table.include.bb2"
0000F900 <PE_Tools.include.bb2@435> XINCLUDE "PE/wizard_Table.include.bb2"
0000F912 <PE_Tools.include.bb2@436> XINCLUDE "PE/wizard_Table.include.bb2"
0000F950 <PE_Tools.include.bb2@437> XINCLUDE "PE/wizard_Table.include.bb2"
0000F956 <PE_Tools.include.bb2@438> XINCLUDE "PE/wizard_Table.include.bb2"
0000F95C <PE_Tools.include.bb2@439> XINCLUDE "PE/wizard_Table.include.bb2"
0000F97A <PE_Tools.include.bb2@440> XINCLUDE "PE/wizard_Table.include.bb2"
0000F980 <PE_Tools.include.bb2@443> XINCLUDE "PE/wizard_Table.include.bb2"
0000F992 <PE_Tools.include.bb2@445> XINCLUDE "PE/wizard_Table.include.bb2"
0000F9A6 <PE_Tools.include.bb2@446> XINCLUDE "PE/wizard_Table.include.bb2"
0000F9C6 <PE_Tools.include.bb2@447> XINCLUDE "PE/wizard_Table.include.bb2"
0000F9DA <PE_Tools.include.bb2@448> XINCLUDE "PE/wizard_Table.include.bb2"
0000FA1C <PE_Tools.include.bb2@451> XINCLUDE "PE/wizard_Table.include.bb2"
0000FA44 <PE_Tools.include.bb2@452> XINCLUDE "PE/wizard_Table.include.bb2"
0000FA4A <PE_Tools.include.bb2@453> XINCLUDE "PE/wizard_Table.include.bb2"
0000FA90 <PE_Tools.include.bb2@454> XINCLUDE "PE/wizard_Table.include.bb2"
0000FB56 <PE_Tools.include.bb2@457> XINCLUDE "PE/wizard_Table.include.bb2"
0000FB5C <PE_Tools.include.bb2@459> XINCLUDE "PE/wizard_Table.include.bb2"
0000FB70 <PE_Tools.include.bb2@461> XINCLUDE "PE/wizard_Table.include.bb2"
0000FBF8 <PE_Tools.include.bb2@462> XINCLUDE "PE/wizard_Table.include.bb2"
0000FC5E <PE_Tools.include.bb2@463> XINCLUDE "PE/wizard_Table.include.bb2"
0000FC64 <PE_Tools.include.bb2@464> XINCLUDE "PE/wizard_Table.include.bb2"
0000FCCA <PE_Tools.include.bb2@465> XINCLUDE "PE/wizard_Table.include.bb2"
0000FD3A <PE_Tools.include.bb2@466> XINCLUDE "PE/wizard_Table.include.bb2"
0000FDA0 <PE_Tools.include.bb2@468> XINCLUDE "PE/wizard_Table.include.bb2"
0000FDA2 <PE_Tools.include.bb2@469> XINCLUDE "PE/wizard_Table.include.bb2"
0000FDA8 <PE_Tools.include.bb2@471> XINCLUDE "PE/wizard_Table.include.bb2"
0000FDB6 <PE_Tools.include.bb2@472> XINCLUDE "PE/wizard_Table.include.bb2"
0000FDCC <PE_Tools.include.bb2@473> XINCLUDE "PE/wizard_Table.include.bb2"
0000FDE0 <PE_Tools.include.bb2@474> XINCLUDE "PE/wizard_Table.include.bb2"
0000FDF6 <PE_Tools.include.bb2@475> XINCLUDE "PE/wizard_Table.include.bb2"
0000FE0A <PE_Tools.include.bb2@476> XINCLUDE "PE/wizard_Table.include.bb2"
0000FE20 <PE_Tools.include.bb2@477> XINCLUDE "PE/wizard_Table.include.bb2"
0000FE26 <PE_Tools.include.bb2@478> XINCLUDE "PE/wizard_Table.include.bb2"
0000FE3A <PE_Tools.include.bb2@479> XINCLUDE "PE/wizard_Table.include.bb2"
0000FE4A <PE_Tools.include.bb2@480> XINCLUDE "PE/wizard_Table.include.bb2"
0000FE7E <PE_Tools.include.bb2@481> XINCLUDE "PE/wizard_Table.include.bb2"
0000FE88 <PE_Tools.include.bb2@482> XINCLUDE "PE/wizard_Table.include.bb2"
0000FE8A <PE_Tools.include.bb2@483> XINCLUDE "PE/wizard_Table.include.bb2"
0000FEA4 <PE_Tools.include.bb2@484> XINCLUDE "PE/wizard_Table.include.bb2"
0000FEC6 <PE_Tools.include.bb2@669> XINCLUDE "PE/wizard_Table.include.bb2"
0000FEE0 <PE_Tools.include.bb2@670> XINCLUDE "PE/wizard_Table.include.bb2"
0000FEFA <PE_Tools.include.bb2@671> XINCLUDE "PE/wizard_Table.include.bb2"
0000FF14 <PE_Tools.include.bb2@672> XINCLUDE "PE/wizard_Table.include.bb2"
0000FF2E <PE_Tools.include.bb2@673> XINCLUDE "PE/wizard_Table.include.bb2"
0000FF48 <PE_Tools.include.bb2@674> XINCLUDE "PE/wizard_Table.include.bb2"
0000FF62 <PE_Tools.include.bb2@675> XINCLUDE "PE/wizard_Table.include.bb2"
0000FF72 <PE_Tools.include.bb2@677> XINCLUDE "PE/wizard_Table.include.bb2"
0000FF82 <PE_Tools.include.bb2@678> XINCLUDE "PE/wizard_Table.include.bb2"
0000FF92 <PE_Tools.include.bb2@679> XINCLUDE "PE/wizard_Table.include.bb2"
0000FFA0 <PE_Tools.include.bb2@680> XINCLUDE "PE/wizard_Table.include.bb2"
0000FFAE <PE_Tools.include.bb2@681> XINCLUDE "PE/wizard_Table.include.bb2"
0000FFBC <PE_Tools.include.bb2@682> XINCLUDE "PE/wizard_Table.include.bb2"
0001000C <PE_Tools.include.bb2@683> XINCLUDE "PE/wizard_Table.include.bb2"
00010016 <PE_Tools.include.bb2@686> XINCLUDE "PE/wizard_Table.include.bb2"
0001001C <PE_Tools.include.bb2@687> XINCLUDE "PE/wizard_Table.include.bb2"
00010036 <PE_Tools.include.bb2@690> XINCLUDE "PE/wizard_Table.include.bb2"
00010046 <PE_Tools.include.bb2@691> XINCLUDE "PE/wizard_Table.include.bb2"
0001005E <PE_Tools.include.bb2@692> XINCLUDE "PE/wizard_Table.include.bb2"
00010076 <PE_Tools.include.bb2@693> XINCLUDE "PE/wizard_Table.include.bb2"
0001008E <PE_Tools.include.bb2@695> XINCLUDE "PE/wizard_Table.include.bb2"
00010094 <PE_Tools.include.bb2@696> XINCLUDE "PE/wizard_Table.include.bb2"
00010094 <wizard_Tools.include.bb2@23> XINCLUDE "PE/wizard_Table.include.bb2"
000100BC <wizard_Tools.include.bb2@47> XINCLUDE "PE/wizard_Table.include.bb2"
000100E6 <wizard_Tools.include.bb2@106> XINCLUDE "PE/wizard_Table.include.bb2"
0001015E <wizard_Tools.include.bb2@108> XINCLUDE "PE/wizard_Table.include.bb2"
00010178 <wizard_Tools.include.bb2@110> XINCLUDE "PE/wizard_Table.include.bb2"
000101A6 <wizard_Tools.include.bb2@114> XINCLUDE "PE/wizard_Table.include.bb2"
000101F8 <wizard_Tools.include.bb2@115> XINCLUDE "PE/wizard_Table.include.bb2"
0001020A <wizard_Tools.include.bb2@116> XINCLUDE "PE/wizard_Table.include.bb2"
00010250 <wizard_Tools.include.bb2@117> XINCLUDE "PE/wizard_Table.include.bb2"
0001025E <wizard_Tools.include.bb2@118> XINCLUDE "PE/wizard_Table.include.bb2"
00010270 <wizard_Tools.include.bb2@119> XINCLUDE "PE/wizard_Table.include.bb2"
000102A6 <wizard_Tools.include.bb2@121> XINCLUDE "PE/wizard_Table.include.bb2"
000102B4 <wizard_Tools.include.bb2@122> XINCLUDE "PE/wizard_Table.include.bb2"
000102BA <wizard_Tools.include.bb2@125> XINCLUDE "PE/wizard_Table.include.bb2"
000102D2 <wizard_Tools.include.bb2@126> XINCLUDE "PE/wizard_Table.include.bb2"
00010300 <wizard_Tools.include.bb2@127> XINCLUDE "PE/wizard_Table.include.bb2"
00010312 <wizard_Tools.include.bb2@128> XINCLUDE "PE/wizard_Table.include.bb2"
00010360 <wizard_Tools.include.bb2@131> XINCLUDE "PE/wizard_Table.include.bb2"
000103AE <wizard_Tools.include.bb2@132> XINCLUDE "PE/wizard_Table.include.bb2"
000103C8 <wizard_Tools.include.bb2@133> XINCLUDE "PE/wizard_Table.include.bb2"
000103EC <wizard_Tools.include.bb2@134> XINCLUDE "PE/wizard_Table.include.bb2"
00010404 <wizard_Tools.include.bb2@137> XINCLUDE "PE/wizard_Table.include.bb2"
0001042A <wizard_Tools.include.bb2@251> XINCLUDE "PE/wizard_Table.include.bb2"
0001043A <wizard_Tools.include.bb2@252> XINCLUDE "PE/wizard_Table.include.bb2"
00010442 <wizard_Tools.include.bb2@253> XINCLUDE "PE/wizard_Table.include.bb2"
00010450 <wizard_Tools.include.bb2@254> XINCLUDE "PE/wizard_Table.include.bb2"
0001047A <wizard_Tools.include.bb2@255> XINCLUDE "PE/wizard_Table.include.bb2"
000104B4 <wizard_Tools.include.bb2@256> XINCLUDE "PE/wizard_Table.include.bb2"
0001051A <wizard_Tools.include.bb2@257> XINCLUDE "PE/wizard_Table.include.bb2"
0001052A <wizard_Tools.include.bb2@258> XINCLUDE "PE/wizard_Table.include.bb2"
00010550 <wizard_Tools.include.bb2@259> XINCLUDE "PE/wizard_Table.include.bb2"
00010570 <wizard_Tools.include.bb2@261> XINCLUDE "PE/wizard_Table.include.bb2"
0001059A <wizard_Tools.include.bb2@262> XINCLUDE "PE/wizard_Table.include.bb2"
000105A2 <wizard_Tools.include.bb2@263> XINCLUDE "PE/wizard_Table.include.bb2"
000105B6 <wizard_Tools.include.bb2@265> XINCLUDE "PE/wizard_Table.include.bb2"
000105F2 <wizard_Tools.include.bb2@266> XINCLUDE "PE/wizard_Table.include.bb2"
0001062E <wizard_Tools.include.bb2@267> XINCLUDE "PE/wizard_Table.include.bb2"
00010642 <wizard_Tools.include.bb2@268> XINCLUDE "PE/wizard_Table.include.bb2"
00010656 <wizard_Tools.include.bb2@269> XINCLUDE "PE/wizard_Table.include.bb2"
00010668 <wizard_Tools.include.bb2@270> XINCLUDE "PE/wizard_Table.include.bb2"
0001066E <wizard_Tools.include.bb2@271> XINCLUDE "PE/wizard_Table.include.bb2"
00010674 <wizard_Tools.include.bb2@272> XINCLUDE "PE/wizard_Table.include.bb2"
0001067A <wizard_Tools.include.bb2@273> XINCLUDE "PE/wizard_Table.include.bb2"
00010694 <wizard_Tools.include.bb2@276> XINCLUDE "PE/wizard_Table.include.bb2"
00010738 <wizard_Tools.include.bb2@278> XINCLUDE "PE/wizard_Table.include.bb2"
00010772 <wizard_Tools.include.bb2@279> XINCLUDE "PE/wizard_Table.include.bb2"
000107E4 <wizard_Tools.include.bb2@280> XINCLUDE "PE/wizard_Table.include.bb2"
000107FE <wizard_Tools.include.bb2@281> XINCLUDE "PE/wizard_Table.include.bb2"
00010808 <wizard_Tools.include.bb2@283> XINCLUDE "PE/wizard_Table.include.bb2"
00010850 <wizard_Tools.include.bb2@284> XINCLUDE "PE/wizard_Table.include.bb2"
00010856 <wizard_Tools.include.bb2@285> XINCLUDE "PE/wizard_Table.include.bb2"
00010864 <wizard_Tools.include.bb2@286> XINCLUDE "PE/wizard_Table.include.bb2"
000108BE <wizard_Tools.include.bb2@287> XINCLUDE "PE/wizard_Table.include.bb2"
000108CE <wizard_Tools.include.bb2@288> XINCLUDE "PE/wizard_Table.include.bb2"
000108D4 <wizard_Tools.include.bb2@289> XINCLUDE "PE/wizard_Table.include.bb2"
000108E8 <wizard_Tools.include.bb2@291> XINCLUDE "PE/wizard_Table.include.bb2"
000108F2 <wizard_Tools.include.bb2@292> XINCLUDE "PE/wizard_Table.include.bb2"
00010918 <wizard_Tools.include.bb2@293> XINCLUDE "PE/wizard_Table.include.bb2"
0001091E <wizard_Tools.include.bb2@294> XINCLUDE "PE/wizard_Table.include.bb2"
00010924 <wizard_Tools.include.bb2@295> XINCLUDE "PE/wizard_Table.include.bb2"
00010926 <wizard_Tools.include.bb2@297> XINCLUDE "PE/wizard_Table.include.bb2"
0001092C <wizard_Tools.include.bb2@298> XINCLUDE "PE/wizard_Table.include.bb2"
00010932 <wizard_Tools.include.bb2@299> XINCLUDE "PE/wizard_Table.include.bb2"
0001093C <wizard_Tools.include.bb2@301> XINCLUDE "PE/wizard_Table.include.bb2"
00010974 <wizard_Tools.include.bb2@302> XINCLUDE "PE/wizard_Table.include.bb2"
0001099E <wizard_Tools.include.bb2@303> XINCLUDE "PE/wizard_Table.include.bb2"
000109AA <wizard_Tools.include.bb2@305> XINCLUDE "PE/wizard_Table.include.bb2"
000109B4 <wizard_Tools.include.bb2@306> XINCLUDE "PE/wizard_Table.include.bb2"
000109C8 <wizard_Tools.include.bb2@308> XINCLUDE "PE/wizard_Table.include.bb2"
000109C8 <wizard_Table.include.bb2@84> XINCLUDE "PE/wizard_Table.include.bb2"
000109F0 <wizard_Table.include.bb2@158> XINCLUDE "PE/wizard_Table.include.bb2"
00010A18 <wizard_Table.include.bb2@159> XINCLUDE "PE/wizard_Table.include.bb2"
00010A5A <wizard_Table.include.bb2@335> XINCLUDE "PE/wizard_Table.include.bb2"
00010A74 <wizard_Table.include.bb2@359> XINCLUDE "PE/wizard_Table.include.bb2"
00010A9E <wizard_Table.include.bb2@361> XINCLUDE "PE/wizard_Table.include.bb2"
00010AB6 <wizard_Table.include.bb2@370> XINCLUDE "PE/wizard_Table.include.bb2"
00010AE0 <wizard_Table.include.bb2@390> XINCLUDE "PE/wizard_Table.include.bb2"
00010AFA <wizard_Table.include.bb2@398> XINCLUDE "PE/wizard_Table.include.bb2"
00010B24 <wizard_Table.include.bb2@400> XINCLUDE "PE/wizard_Table.include.bb2"
00010B3E <wizard_Table.include.bb2@408> XINCLUDE "PE/wizard_Table.include.bb2"
00010B68 <wizard_Table.include.bb2@442> XINCLUDE "PE/wizard_Table.include.bb2"
00010B90 <wizard_Table.include.bb2@444> XINCLUDE "PE/wizard_Table.include.bb2"
00010BDC <wizard_Table.include.bb2@445> XINCLUDE "PE/wizard_Table.include.bb2"
00010BE6 <wizard_Table.include.bb2@446> XINCLUDE "PE/wizard_Table.include.bb2"
00010C52 <wizard_Table.include.bb2@448> XINCLUDE "PE/wizard_Table.include.bb2"
00010CCC <wizard_Table.include.bb2@449> XINCLUDE "PE/wizard_Table.include.bb2"
00010D2A <wizard_Table.include.bb2@450> XINCLUDE "PE/wizard_Table.include.bb2"
00010D42 <wizard_Table.include.bb2@451> XINCLUDE "PE/wizard_Table.include.bb2"
00010DBC <wizard_Table.include.bb2@453> XINCLUDE "PE/wizard_Table.include.bb2"
00010DD8 <wizard_Table.include.bb2@454> XINCLUDE "PE/wizard_Table.include.bb2"
00010DFC <wizard_Table.include.bb2@455> XINCLUDE "PE/wizard_Table.include.bb2"
00010E0E <wizard_Table.include.bb2@456> XINCLUDE "PE/wizard_Table.include.bb2"
00010E6A <wizard_Table.include.bb2@457> XINCLUDE "PE/wizard_Table.include.bb2"
00010E70 <wizard_Table.include.bb2@459> XINCLUDE "PE/wizard_Table.include.bb2"
00010E88 <wizard_Table.include.bb2@460> XINCLUDE "PE/wizard_Table.include.bb2"
00010EA0 <wizard_Table.include.bb2@464> XINCLUDE "PE/wizard_Table.include.bb2"
00010ECA <wizard_Table.include.bb2@467> XINCLUDE "PE/wizard_Table.include.bb2"
00010EF2 <wizard_Table.include.bb2@469> XINCLUDE "PE/wizard_Table.include.bb2"
00010F54 <wizard_Table.include.bb2@470> XINCLUDE "PE/wizard_Table.include.bb2"
00010FB6 <wizard_Table.include.bb2@471> XINCLUDE "PE/wizard_Table.include.bb2"
00011030 <wizard_Table.include.bb2@473> XINCLUDE "PE/wizard_Table.include.bb2"
0001103A <wizard_Table.include.bb2@474> XINCLUDE "PE/wizard_Table.include.bb2"
00011098 <wizard_Table.include.bb2@475> XINCLUDE "PE/wizard_Table.include.bb2"
000110B0 <wizard_Table.include.bb2@476> XINCLUDE "PE/wizard_Table.include.bb2"
0001112A <wizard_Table.include.bb2@478> XINCLUDE "PE/wizard_Table.include.bb2"
00011134 <wizard_Table.include.bb2@479> XINCLUDE "PE/wizard_Table.include.bb2"
00011146 <wizard_Table.include.bb2@480> XINCLUDE "PE/wizard_Table.include.bb2"
000111A2 <wizard_Table.include.bb2@481> XINCLUDE "PE/wizard_Table.include.bb2"
000111A8 <wizard_Table.include.bb2@482> XINCLUDE "PE/wizard_Table.include.bb2"
000111C0 <wizard_Table.include.bb2@483> XINCLUDE "PE/wizard_Table.include.bb2"
000111C6 <wizard_Table.include.bb2@487> XINCLUDE "PE/wizard_Table.include.bb2"
00011212 <wizard_Table.include.bb2@488> XINCLUDE "PE/wizard_Table.include.bb2"
0001121C <wizard_Table.include.bb2@489> XINCLUDE "PE/wizard_Table.include.bb2"
00011234 <wizard_Table.include.bb2@490> XINCLUDE "PE/wizard_Table.include.bb2"
0001125E <wizard_Table.include.bb2@494> XINCLUDE "PE/wizard_Table.include.bb2"
000112A6 <wizard_Table.include.bb2@497> XINCLUDE "PE/wizard_Table.include.bb2"
000112E2 <wizard_Table.include.bb2@498> XINCLUDE "PE/wizard_Table.include.bb2"
00011302 <wizard_Table.include.bb2@499> XINCLUDE "PE/wizard_Table.include.bb2"
00011336 <wizard_Table.include.bb2@500> XINCLUDE "PE/wizard_Table.include.bb2"
00011348 <wizard_Table.include.bb2@501> XINCLUDE "PE/wizard_Table.include.bb2"
00011358 <wizard_Table.include.bb2@502> XINCLUDE "PE/wizard_Table.include.bb2"
0001138A <wizard_Table.include.bb2@503> XINCLUDE "PE/wizard_Table.include.bb2"
000113AE <wizard_Table.include.bb2@504> XINCLUDE "PE/wizard_Table.include.bb2"
000113BE <wizard_Table.include.bb2@505> XINCLUDE "PE/wizard_Table.include.bb2"
000113F8 <wizard_Table.include.bb2@506> XINCLUDE "PE/wizard_Table.include.bb2"
00011402 <wizard_Table.include.bb2@512> XINCLUDE "PE/wizard_Table.include.bb2"
00011414 <wizard_Table.include.bb2@513> XINCLUDE "PE/wizard_Table.include.bb2"
00011434 <wizard_Table.include.bb2@514> XINCLUDE "PE/wizard_Table.include.bb2"
0001148A <wizard_Table.include.bb2@515> XINCLUDE "PE/wizard_Table.include.bb2"
000114D0 <wizard_Table.include.bb2@516> XINCLUDE "PE/wizard_Table.include.bb2"
000114E2 <wizard_Table.include.bb2@517> XINCLUDE "PE/wizard_Table.include.bb2"
000114EC <wizard_Table.include.bb2@518> XINCLUDE "PE/wizard_Table.include.bb2"
000114F2 <wizard_Table.include.bb2@521> XINCLUDE "PE/wizard_Table.include.bb2"
000114FC <wizard_Table.include.bb2@522> XINCLUDE "PE/wizard_Table.include.bb2"
0001151A <wizard_Table.include.bb2@523> XINCLUDE "PE/wizard_Table.include.bb2"
00011532 <wizard_Table.include.bb2@524> XINCLUDE "PE/wizard_Table.include.bb2"
00011538 <wizard_Table.include.bb2@526> XINCLUDE "PE/wizard_Table.include.bb2"
000115C4 <wizard_Table.include.bb2@527> XINCLUDE "PE/wizard_Table.include.bb2"
00011616 <wizard_Table.include.bb2@530> XINCLUDE "PE/wizard_Table.include.bb2"
00011644 <wizard_Table.include.bb2@532> XINCLUDE "PE/wizard_Table.include.bb2"
00011662 <wizard_Table.include.bb2@534> XINCLUDE "PE/wizard_Table.include.bb2"
0001167A <wizard_Table.include.bb2@535> XINCLUDE "PE/wizard_Table.include.bb2"
0001173C <wizard_Table.include.bb2@549> XINCLUDE "PE/wizard_Table.include.bb2"
0001176A <wizard_Table.include.bb2@552> XINCLUDE "PE/wizard_Table.include.bb2"
0001177C <wizard_Table.include.bb2@554> XINCLUDE "PE/wizard_Table.include.bb2"
0001179A <wizard_Table.include.bb2@555> XINCLUDE "PE/wizard_Table.include.bb2"
000117BE <wizard_Table.include.bb2@556> XINCLUDE "PE/wizard_Table.include.bb2"
000117C0 <wizard_Table.include.bb2@557> XINCLUDE "PE/wizard_Table.include.bb2"
000117D4 <wizard_Table.include.bb2@559> XINCLUDE "PE/wizard_Table.include.bb2"
00011820 <wizard_Table.include.bb2@560> XINCLUDE "PE/wizard_Table.include.bb2"
0001186C <wizard_Table.include.bb2@561> XINCLUDE "PE/wizard_Table.include.bb2"
000118B8 <wizard_Table.include.bb2@562> XINCLUDE "PE/wizard_Table.include.bb2"
00011904 <wizard_Table.include.bb2@563> XINCLUDE "PE/wizard_Table.include.bb2"
00011950 <wizard_Table.include.bb2@564> XINCLUDE "PE/wizard_Table.include.bb2"
0001199C <wizard_Table.include.bb2@565> XINCLUDE "PE/wizard_Table.include.bb2"
000119E8 <wizard_Table.include.bb2@566> XINCLUDE "PE/wizard_Table.include.bb2"
00011A34 <wizard_Table.include.bb2@567> XINCLUDE "PE/wizard_Table.include.bb2"
00011A80 <wizard_Table.include.bb2@568> XINCLUDE "PE/wizard_Table.include.bb2"
00011AAA <wizard_Table.include.bb2@570> XINCLUDE "PE/wizard_Table.include.bb2"
00011ACC <wizard_Table.include.bb2@571> XINCLUDE "PE/wizard_Table.include.bb2"
00011AEE <wizard_Table.include.bb2@572> XINCLUDE "PE/wizard_Table.include.bb2"
00011AFE <wizard_Table.include.bb2@573> XINCLUDE "PE/wizard_Table.include.bb2"
00011B16 <wizard_Table.include.bb2@574> XINCLUDE "PE/wizard_Table.include.bb2"
00011B20 <wizard_Table.include.bb2@575> XINCLUDE "PE/wizard_Table.include.bb2"
00011B3A <wizard_Table.include.bb2@578> XINCLUDE "PE/wizard_Table.include.bb2"
00011B7C <wizard_Table.include.bb2@620> XINCLUDE "PE/wizard_Table.include.bb2"
00011BD2 <wizard_Table.include.bb2@629> XINCLUDE "PE/wizard_Table.include.bb2"
00011C28 <wizard_Table.include.bb2@630> XINCLUDE "PE/wizard_Table.include.bb2"
00011C56 <wizard_Table.include.bb2@631> XINCLUDE "PE/wizard_Table.include.bb2"
00011C92 <wizard_Table.include.bb2@633> XINCLUDE "PE/wizard_Table.include.bb2"
00011CCE <wizard_Table.include.bb2@634> XINCLUDE "PE/wizard_Table.include.bb2"
00011D06 <wizard_Table.include.bb2@635> XINCLUDE "PE/wizard_Table.include.bb2"
00011D10 <wizard_Table.include.bb2@636> XINCLUDE "PE/wizard_Table.include.bb2"
00011D1A <wizard_Table.include.bb2@637> XINCLUDE "PE/wizard_Table.include.bb2"
00011D24 <wizard_Table.include.bb2@638> XINCLUDE "PE/wizard_Table.include.bb2"
00011D2E <wizard_Table.include.bb2@639> XINCLUDE "PE/wizard_Table.include.bb2"
00011D3C <wizard_Table.include.bb2@641> XINCLUDE "PE/wizard_Table.include.bb2"
00011D48 <wizard_Table.include.bb2@643> XINCLUDE "PE/wizard_Table.include.bb2"
00011D54 <wizard_Table.include.bb2@644> XINCLUDE "PE/wizard_Table.include.bb2"
00011D62 <wizard_Table.include.bb2@646> XINCLUDE "PE/wizard_Table.include.bb2"
00011D70 <wizard_Table.include.bb2@647> XINCLUDE "PE/wizard_Table.include.bb2"
00011D7E <wizard_Table.include.bb2@648> XINCLUDE "PE/wizard_Table.include.bb2"
00011D8C <wizard_Table.include.bb2@649> XINCLUDE "PE/wizard_Table.include.bb2"
00011D9A <wizard_Table.include.bb2@650> XINCLUDE "PE/wizard_Table.include.bb2"
00011DB2 <wizard_Table.include.bb2@652> XINCLUDE "PE/wizard_Table.include.bb2"
00011DBE <wizard_Table.include.bb2@653> XINCLUDE "PE/wizard_Table.include.bb2"
00011DC8 <wizard_Table.include.bb2@655> XINCLUDE "PE/wizard_Table.include.bb2"
00011DF6 <wizard_Table.include.bb2@656> XINCLUDE "PE/wizard_Table.include.bb2"
00011E14 <wizard_Table.include.bb2@657> XINCLUDE "PE/wizard_Table.include.bb2"
00011E2E <wizard_Table.include.bb2@658> XINCLUDE "PE/wizard_Table.include.bb2"
00011E68 <wizard_Table.include.bb2@659> XINCLUDE "PE/wizard_Table.include.bb2"
00011E86 <wizard_Table.include.bb2@660> XINCLUDE "PE/wizard_Table.include.bb2"
00011E94 <wizard_Table.include.bb2@661> XINCLUDE "PE/wizard_Table.include.bb2"
00011EAE <wizard_Table.include.bb2@662> XINCLUDE "PE/wizard_Table.include.bb2"
00011ED8 <wizard_Table.include.bb2@664> XINCLUDE "PE/wizard_Table.include.bb2"
00011F06 <wizard_Table.include.bb2@667> XINCLUDE "PE/wizard_Table.include.bb2"
00011F5C <wizard_Table.include.bb2@668> XINCLUDE "PE/wizard_Table.include.bb2"
00011FB2 <wizard_Table.include.bb2@669> XINCLUDE "PE/wizard_Table.include.bb2"
00011FE0 <wizard_Table.include.bb2@670> XINCLUDE "PE/wizard_Table.include.bb2"
0001202C <wizard_Table.include.bb2@671> XINCLUDE "PE/wizard_Table.include.bb2"
00012036 <wizard_Table.include.bb2@672> XINCLUDE "PE/wizard_Table.include.bb2"
0001204E <wizard_Table.include.bb2@673> XINCLUDE "PE/wizard_Table.include.bb2"
0001208C <wizard_Table.include.bb2@682> XINCLUDE "PE/wizard_Table.include.bb2"
000120BA <wizard_Table.include.bb2@684> XINCLUDE "PE/wizard_Table.include.bb2"
000120C6 <wizard_Table.include.bb2@685> XINCLUDE "PE/wizard_Table.include.bb2"
000120D2 <wizard_Table.include.bb2@686> XINCLUDE "PE/wizard_Table.include.bb2"
000120F2 <wizard_Table.include.bb2@687> XINCLUDE "PE/wizard_Table.include.bb2"
00012112 <wizard_Table.include.bb2@688> XINCLUDE "PE/wizard_Table.include.bb2"
00012132 <wizard_Table.include.bb2@689> XINCLUDE "PE/wizard_Table.include.bb2"
0001213C <wizard_Table.include.bb2@690> XINCLUDE "PE/wizard_Table.include.bb2"
00012154 <wizard_Table.include.bb2@691> XINCLUDE "PE/wizard_Table.include.bb2"
00012216 <wizard_Table.include.bb2@725> XINCLUDE "PE/wizard_Table.include.bb2"
00012244 <wizard_Table.include.bb2@728> XINCLUDE "PE/wizard_Table.include.bb2"
0001228A <wizard_Table.include.bb2@729> XINCLUDE "PE/wizard_Table.include.bb2"
000122D0 <wizard_Table.include.bb2@730> XINCLUDE "PE/wizard_Table.include.bb2"
00012316 <wizard_Table.include.bb2@731> XINCLUDE "PE/wizard_Table.include.bb2"
0001235C <wizard_Table.include.bb2@732> XINCLUDE "PE/wizard_Table.include.bb2"
000123A2 <wizard_Table.include.bb2@733> XINCLUDE "PE/wizard_Table.include.bb2"
000123E8 <wizard_Table.include.bb2@734> XINCLUDE "PE/wizard_Table.include.bb2"
0001242E <wizard_Table.include.bb2@735> XINCLUDE "PE/wizard_Table.include.bb2"
00012474 <wizard_Table.include.bb2@736> XINCLUDE "PE/wizard_Table.include.bb2"
0001248E <wizard_Table.include.bb2@737> XINCLUDE "PE/wizard_Table.include.bb2"
000124BC <wizard_Table.include.bb2@746> XINCLUDE "PE/wizard_Table.include.bb2"
000124EA <wizard_Table.include.bb2@748> XINCLUDE "PE/wizard_Table.include.bb2"
000124F8 <wizard_Table.include.bb2@749> XINCLUDE "PE/wizard_Table.include.bb2"
00012510 <wizard_Table.include.bb2@750> XINCLUDE "PE/wizard_Table.include.bb2"
0001256E <wizard_Table.include.bb2@752> XINCLUDE "PE/wizard_Table.include.bb2"
0001259C <wizard_Table.include.bb2@755> XINCLUDE "PE/wizard_Table.include.bb2"
000125CC <wizard_Table.include.bb2@757> XINCLUDE "PE/wizard_Table.include.bb2"
000125FC <wizard_Table.include.bb2@758> XINCLUDE "PE/wizard_Table.include.bb2"
0001262C <wizard_Table.include.bb2@759> XINCLUDE "PE/wizard_Table.include.bb2"
0001265C <wizard_Table.include.bb2@760> XINCLUDE "PE/wizard_Table.include.bb2"
0001268C <wizard_Table.include.bb2@761> XINCLUDE "PE/wizard_Table.include.bb2"
000126BC <wizard_Table.include.bb2@762> XINCLUDE "PE/wizard_Table.include.bb2"
000126EC <wizard_Table.include.bb2@763> XINCLUDE "PE/wizard_Table.include.bb2"
0001271C <wizard_Table.include.bb2@764> XINCLUDE "PE/wizard_Table.include.bb2"
0001274C <wizard_Table.include.bb2@765> XINCLUDE "PE/wizard_Table.include.bb2"
00012764 <wizard_Table.include.bb2@767> XINCLUDE "PE/wizard_Table.include.bb2"
000127C2 <wizard_Table.include.bb2@769> XINCLUDE "PE/wizard_Table.include.bb2"
000127F0 <wizard_Table.include.bb2@771> XINCLUDE "PE/wizard_Table.include.bb2"
0001280E <wizard_Table.include.bb2@773> XINCLUDE "PE/wizard_Table.include.bb2"
0001282C <wizard_Table.include.bb2@774> XINCLUDE "PE/wizard_Table.include.bb2"
0001284A <wizard_Table.include.bb2@775> XINCLUDE "PE/wizard_Table.include.bb2"
00012868 <wizard_Table.include.bb2@776> XINCLUDE "PE/wizard_Table.include.bb2"
00012886 <wizard_Table.include.bb2@777> XINCLUDE "PE/wizard_Table.include.bb2"
000128A4 <wizard_Table.include.bb2@778> XINCLUDE "PE/wizard_Table.include.bb2"
000128C2 <wizard_Table.include.bb2@779> XINCLUDE "PE/wizard_Table.include.bb2"
000128E0 <wizard_Table.include.bb2@780> XINCLUDE "PE/wizard_Table.include.bb2"
000128FE <wizard_Table.include.bb2@781> XINCLUDE "PE/wizard_Table.include.bb2"
00012916 <wizard_Table.include.bb2@783> XINCLUDE "PE/wizard_Table.include.bb2"
00012948 <wizard_Table.include.bb2@793> XINCLUDE "PE/wizard_Table.include.bb2"
00012972 <wizard_Table.include.bb2@796> XINCLUDE "PE/wizard_Table.include.bb2"
000129A0 <wizard_Table.include.bb2@797> XINCLUDE "PE/wizard_Table.include.bb2"
000129AA <wizard_Table.include.bb2@798> XINCLUDE "PE/wizard_Table.include.bb2"
000129BC <wizard_Table.include.bb2@799> XINCLUDE "PE/wizard_Table.include.bb2"
000129DC <wizard_Table.include.bb2@800> XINCLUDE "PE/wizard_Table.include.bb2"
00012A22 <wizard_Table.include.bb2@801> XINCLUDE "PE/wizard_Table.include.bb2"
00012A4C <wizard_Table.include.bb2@802> XINCLUDE "PE/wizard_Table.include.bb2"
00012A52 <wizard_Table.include.bb2@804> XINCLUDE "PE/wizard_Table.include.bb2"
00012A70 <wizard_Table.include.bb2@806> XINCLUDE "PE/wizard_Table.include.bb2"
00012AB2 <wizard_Table.include.bb2@809> XINCLUDE "PE/wizard_Table.include.bb2"
00012AE0 <wizard_Table.include.bb2@812> XINCLUDE "PE/wizard_Table.include.bb2"
00012AEA <wizard_Table.include.bb2@813> XINCLUDE "PE/wizard_Table.include.bb2"
00012AFC <wizard_Table.include.bb2@814> XINCLUDE "PE/wizard_Table.include.bb2"
00012B1C <wizard_Table.include.bb2@815> XINCLUDE "PE/wizard_Table.include.bb2"
00012B72 <wizard_Table.include.bb2@816> XINCLUDE "PE/wizard_Table.include.bb2"
00012BB8 <wizard_Table.include.bb2@817> XINCLUDE "PE/wizard_Table.include.bb2"
00012BCA <wizard_Table.include.bb2@818> XINCLUDE "PE/wizard_Table.include.bb2"
00012BD4 <wizard_Table.include.bb2@819> XINCLUDE "PE/wizard_Table.include.bb2"
00012BDC <wizard_Table.include.bb2@820> XINCLUDE "PE/wizard_Table.include.bb2"
00012BE2 <wizard_Table.include.bb2@823> XINCLUDE "PE/wizard_Table.include.bb2"
00012BFE <wizard_Table.include.bb2@824> XINCLUDE "PE/wizard_Table.include.bb2"
00012C28 <wizard_Table.include.bb2@828> XINCLUDE "PE/wizard_Table.include.bb2"
00012C56 <wizard_Table.include.bb2@831> XINCLUDE "PE/wizard_Table.include.bb2"
00012C76 <wizard_Table.include.bb2@832> XINCLUDE "PE/wizard_Table.include.bb2"
00012CAA <wizard_Table.include.bb2@833> XINCLUDE "PE/wizard_Table.include.bb2"
00012CB8 <wizard_Table.include.bb2@834> XINCLUDE "PE/wizard_Table.include.bb2"
00012CCA <wizard_Table.include.bb2@835> XINCLUDE "PE/wizard_Table.include.bb2"
00012CDA <wizard_Table.include.bb2@836> XINCLUDE "PE/wizard_Table.include.bb2"
00012CE8 <wizard_Table.include.bb2@837> XINCLUDE "PE/wizard_Table.include.bb2"
00012CF6 <wizard_Table.include.bb2@838> XINCLUDE "PE/wizard_Table.include.bb2"
00012D30 <wizard_Table.include.bb2@839> XINCLUDE "PE/wizard_Table.include.bb2"
00012D98 <wizard_Table.include.bb2@845> XINCLUDE "PE/wizard_Table.include.bb2"
00012DA2 <wizard_Table.include.bb2@846> XINCLUDE "PE/wizard_Table.include.bb2"
00012DC0 <wizard_Table.include.bb2@847> XINCLUDE "PE/wizard_Table.include.bb2"
00012DD8 <wizard_Table.include.bb2@848> XINCLUDE "PE/wizard_Table.include.bb2"
00012DF0 <wizard_Table.include.bb2@851> XINCLUDE "PE/wizard_Table.include.bb2"
00012E1E <wizard_Table.include.bb2@854> XINCLUDE "PE/wizard_Table.include.bb2"
00012E4C <wizard_Table.include.bb2@856> XINCLUDE "PE/wizard_Table.include.bb2"
00012E58 <wizard_Table.include.bb2@866> XINCLUDE "PE/wizard_Table.include.bb2"
00012E70 <wizard_Table.include.bb2@867> XINCLUDE "PE/wizard_Table.include.bb2"
00012E9E <wizard_Table.include.bb2@869> XINCLUDE "PE/wizard_Table.include.bb2"
00012ECC <wizard_Table.include.bb2@871> XINCLUDE "PE/wizard_Table.include.bb2"
00012ED8 <wizard_Table.include.bb2@873> XINCLUDE "PE/wizard_Table.include.bb2"
00012EF0 <wizard_Table.include.bb2@874> XINCLUDE "PE/wizard_Table.include.bb2"
00012F22 <wizard_Table.include.bb2@926> XINCLUDE "PE/wizard_Table.include.bb2"
00012F50 <wizard_Table.include.bb2@929> XINCLUDE "PE/wizard_Table.include.bb2"
00012F84 <wizard_Table.include.bb2@930> XINCLUDE "PE/wizard_Table.include.bb2"
00012F96 <wizard_Table.include.bb2@931> XINCLUDE "PE/wizard_Table.include.bb2"
00012FA0 <wizard_Table.include.bb2@932> XINCLUDE "PE/wizard_Table.include.bb2"
00012FAE <wizard_Table.include.bb2@933> XINCLUDE "PE/wizard_Table.include.bb2"
00012FBC <wizard_Table.include.bb2@934> XINCLUDE "PE/wizard_Table.include.bb2"
00012FCA <wizard_Table.include.bb2@935> XINCLUDE "PE/wizard_Table.include.bb2"
00013020 <wizard_Table.include.bb2@936> XINCLUDE "PE/wizard_Table.include.bb2"
0001302E <wizard_Table.include.bb2@937> XINCLUDE "PE/wizard_Table.include.bb2"
0001305E <wizard_Table.include.bb2@938> XINCLUDE "PE/wizard_Table.include.bb2"
00013064 <wizard_Table.include.bb2@939> XINCLUDE "PE/wizard_Table.include.bb2"
0001306A <wizard_Table.include.bb2@940> XINCLUDE "PE/wizard_Table.include.bb2"
000130E0 <wizard_Table.include.bb2@941> XINCLUDE "PE/wizard_Table.include.bb2"
000130EA <wizard_Table.include.bb2@943> XINCLUDE "PE/wizard_Table.include.bb2"
000130F0 <wizard_Table.include.bb2@944> XINCLUDE "PE/wizard_Table.include.bb2"
000130FA <wizard_Table.include.bb2@945> XINCLUDE "PE/wizard_Table.include.bb2"
00013100 <wizard_Table.include.bb2@947> XINCLUDE "PE/wizard_Table.include.bb2"
0001310A <wizard_Table.include.bb2@948> XINCLUDE "PE/wizard_Table.include.bb2"
00013124 <wizard_Table.include.bb2@950> XINCLUDE "PE/wizard_Table.include.bb2"
00013156 <wizard_Table.include.bb2@952> XINCLUDE "PE/wizard_Table.include.bb2"
00013184 <wizard_Table.include.bb2@955> XINCLUDE "PE/wizard_Table.include.bb2"
000131B8 <wizard_Table.include.bb2@956> XINCLUDE "PE/wizard_Table.include.bb2"
000131CA <wizard_Table.include.bb2@957> XINCLUDE "PE/wizard_Table.include.bb2"
000131D4 <wizard_Table.include.bb2@958> XINCLUDE "PE/wizard_Table.include.bb2"
000131E2 <wizard_Table.include.bb2@959> XINCLUDE "PE/wizard_Table.include.bb2"
000131F0 <wizard_Table.include.bb2@960> XINCLUDE "PE/wizard_Table.include.bb2"
000131FE <wizard_Table.include.bb2@961> XINCLUDE "PE/wizard_Table.include.bb2"
00013204 <wizard_Table.include.bb2@962> XINCLUDE "PE/wizard_Table.include.bb2"
0001325E <wizard_Table.include.bb2@963> XINCLUDE "PE/wizard_Table.include.bb2"
00013292 <wizard_Table.include.bb2@964> XINCLUDE "PE/wizard_Table.include.bb2"
000132B6 <wizard_Table.include.bb2@965> XINCLUDE "PE/wizard_Table.include.bb2"
000132D2 <wizard_Table.include.bb2@966> XINCLUDE "PE/wizard_Table.include.bb2"
000132E0 <wizard_Table.include.bb2@967> XINCLUDE "PE/wizard_Table.include.bb2"
000132E6 <wizard_Table.include.bb2@968> XINCLUDE "PE/wizard_Table.include.bb2"
000132F0 <wizard_Table.include.bb2@969> XINCLUDE "PE/wizard_Table.include.bb2"
000132F6 <wizard_Table.include.bb2@971> XINCLUDE "PE/wizard_Table.include.bb2"
00013300 <wizard_Table.include.bb2@972> XINCLUDE "PE/wizard_Table.include.bb2"
0001331A <wizard_Table.include.bb2@974> XINCLUDE "PE/wizard_Table.include.bb2"
00013344 <wizard_Table.include.bb2@993> XINCLUDE "PE/wizard_Table.include.bb2"
00013372 <wizard_Table.include.bb2@996> XINCLUDE "PE/wizard_Table.include.bb2"
00013384 <wizard_Table.include.bb2@998> XINCLUDE "PE/wizard_Table.include.bb2"
000133CE <wizard_Table.include.bb2@1000> XINCLUDE "PE/wizard_Table.include.bb2"
0001340E <wizard_Table.include.bb2@1001> XINCLUDE "PE/wizard_Table.include.bb2"
00013422 <wizard_Table.include.bb2@1003> XINCLUDE "PE/wizard_Table.include.bb2"
00013440 <wizard_Table.include.bb2@1005> XINCLUDE "PE/wizard_Table.include.bb2"
0001348E <wizard_Table.include.bb2@1006> XINCLUDE "PE/wizard_Table.include.bb2"
00013494 <wizard_Table.include.bb2@1007> XINCLUDE "PE/wizard_Table.include.bb2"
000134AE <wizard_Table.include.bb2@1008> XINCLUDE "PE/wizard_Table.include.bb2"
000134CC <wizard_Table.include.bb2@1011> XINCLUDE "PE/wizard_Table.include.bb2"
00013500 <wizard_Table.include.bb2@1012> XINCLUDE "PE/wizard_Table.include.bb2"
00013512 <wizard_Table.include.bb2@1013> XINCLUDE "PE/wizard_Table.include.bb2"
0001352A <wizard_Table.include.bb2@1014> XINCLUDE "PE/wizard_Table.include.bb2"
00013544 <wizard_Table.include.bb2@1015> XINCLUDE "PE/wizard_Table.include.bb2"
0001355E <wizard_Table.include.bb2@1016> XINCLUDE "PE/wizard_Table.include.bb2"
00013578 <wizard_Table.include.bb2@1017> XINCLUDE "PE/wizard_Table.include.bb2"
0001358C <wizard_Table.include.bb2@1018> XINCLUDE "PE/wizard_Table.include.bb2"
000135B2 <wizard_Table.include.bb2@1019> XINCLUDE "PE/wizard_Table.include.bb2"
000135C2 <wizard_Table.include.bb2@1020> XINCLUDE "PE/wizard_Table.include.bb2"
000135D4 <wizard_Table.include.bb2@1021> XINCLUDE "PE/wizard_Table.include.bb2"
000135E8 <wizard_Table.include.bb2@1022> XINCLUDE "PE/wizard_Table.include.bb2"
00013616 <wizard_Table.include.bb2@1023> XINCLUDE "PE/wizard_Table.include.bb2"
00013644 <wizard_Table.include.bb2@1026> XINCLUDE "PE/wizard_Table.include.bb2"
0001365C <wizard_Table.include.bb2@1028> XINCLUDE "PE/wizard_Table.include.bb2"
00013682 <wizard_Table.include.bb2@1029> XINCLUDE "PE/wizard_Table.include.bb2"
00013688 <wizard_Table.include.bb2@1030> XINCLUDE "PE/wizard_Table.include.bb2"
000136B6 <wizard_Table.include.bb2@1031> XINCLUDE "PE/wizard_Table.include.bb2"
000136BC <wizard_Table.include.bb2@1032> XINCLUDE "PE/wizard_Table.include.bb2"
000136C4 <wizard_Table.include.bb2@1037> XINCLUDE "PE/wizard_Table.include.bb2"
000136F8 <wizard_Table.include.bb2@1038> XINCLUDE "PE/wizard_Table.include.bb2"
00013740 <wizard_Table.include.bb2@1039> XINCLUDE "PE/wizard_Table.include.bb2"
0001374E <wizard_Table.include.bb2@1040> XINCLUDE "PE/wizard_Table.include.bb2"
00013782 <wizard_Table.include.bb2@1042> XINCLUDE "PE/wizard_Table.include.bb2"
000137A8 <wizard_Table.include.bb2@1043> XINCLUDE "PE/wizard_Table.include.bb2"
000137BA <wizard_Table.include.bb2@1044> XINCLUDE "PE/wizard_Table.include.bb2"
000137C2 <wizard_Table.include.bb2@1045> XINCLUDE "PE/wizard_Table.include.bb2"
000137F2 <wizard_Table.include.bb2@1047> XINCLUDE "PE/wizard_Table.include.bb2"
00013806 <wizard_Table.include.bb2@1048> XINCLUDE "PE/wizard_Table.include.bb2"
00013814 <wizard_Table.include.bb2@1050> XINCLUDE "PE/wizard_Table.include.bb2"
00013830 <wizard_Table.include.bb2@1051> XINCLUDE "PE/wizard_Table.include.bb2"
0001383E <wizard_Table.include.bb2@1054> XINCLUDE "PE/wizard_Table.include.bb2"
00013852 <wizard_Table.include.bb2@1056> XINCLUDE "PE/wizard_Table.include.bb2"
00013864 <wizard_Table.include.bb2@1057> XINCLUDE "PE/wizard_Table.include.bb2"
00013898 <wizard_Table.include.bb2@1058> XINCLUDE "PE/wizard_Table.include.bb2"
000138BE <wizard_Table.include.bb2@1059> XINCLUDE "PE/wizard_Table.include.bb2"
000138EC <wizard_Table.include.bb2@1060> XINCLUDE "PE/wizard_Table.include.bb2"
0001392A <wizard_Table.include.bb2@1061> XINCLUDE "PE/wizard_Table.include.bb2"
00013938 <wizard_Table.include.bb2@1063> XINCLUDE "PE/wizard_Table.include.bb2"
0001398A <wizard_Table.include.bb2@1066> XINCLUDE "PE/wizard_Table.include.bb2"
000139D0 <wizard_Table.include.bb2@1067> XINCLUDE "PE/wizard_Table.include.bb2"
00013A28 <wizard_Table.include.bb2@1068> XINCLUDE "PE/wizard_Table.include.bb2"
00013A32 <wizard_Table.include.bb2@1069> XINCLUDE "PE/wizard_Table.include.bb2"
00013A3C <wizard_Table.include.bb2@1070> XINCLUDE "PE/wizard_Table.include.bb2"
00013A42 <wizard_Table.include.bb2@1071> XINCLUDE "PE/wizard_Table.include.bb2"
00013A76 <wizard_Table.include.bb2@1073> XINCLUDE "PE/wizard_Table.include.bb2"
00013A98 <wizard_Table.include.bb2@1074> XINCLUDE "PE/wizard_Table.include.bb2"
00013ADE <wizard_Table.include.bb2@1075> XINCLUDE "PE/wizard_Table.include.bb2"
00013AFA <wizard_Table.include.bb2@1076> XINCLUDE "PE/wizard_Table.include.bb2"
00013B0A <wizard_Table.include.bb2@1079> XINCLUDE "PE/wizard_Table.include.bb2"
00013B1E <wizard_Table.include.bb2@1080> XINCLUDE "PE/wizard_Table.include.bb2"
00013B44 <wizard_Table.include.bb2@1081> XINCLUDE "PE/wizard_Table.include.bb2"
00013B4A <wizard_Table.include.bb2@1082> XINCLUDE "PE/wizard_Table.include.bb2"
00013B6A <wizard_Table.include.bb2@1083> XINCLUDE "PE/wizard_Table.include.bb2"
00013B70 <wizard_Table.include.bb2@1084> XINCLUDE "PE/wizard_Table.include.bb2"
00013B76 <wizard_Table.include.bb2@1085> XINCLUDE "PE/wizard_Table.include.bb2"
00013B8E <wizard_Table.include.bb2@1086> XINCLUDE "PE/wizard_Table.include.bb2"
00013BB4 <wizard_Table.include.bb2@1088> XINCLUDE "PE/wizard_Table.include.bb2"
00013BC2 <wizard_Table.include.bb2@1089> XINCLUDE "PE/wizard_Table.include.bb2"
00013BF4 <wizard_Table.include.bb2@1090> XINCLUDE "PE/wizard_Table.include.bb2"
00013C60 <wizard_Table.include.bb2@1091> XINCLUDE "PE/wizard_Table.include.bb2"
00013CBE <wizard_Table.include.bb2@1092> XINCLUDE "PE/wizard_Table.include.bb2"
00013DCE <wizard_Table.include.bb2@1096> XINCLUDE "PE/wizard_Table.include.bb2"
00013E00 <wizard_Table.include.bb2@1097> XINCLUDE "PE/wizard_Table.include.bb2"
00013E1A <wizard_Table.include.bb2@1098> XINCLUDE "PE/wizard_Table.include.bb2"
00013E28 <wizard_Table.include.bb2@1099> XINCLUDE "PE/wizard_Table.include.bb2"
00013E94 <wizard_Table.include.bb2@1100> XINCLUDE "PE/wizard_Table.include.bb2"
00013EA4 <wizard_Table.include.bb2@1101> XINCLUDE "PE/wizard_Table.include.bb2"
00013EB8 <wizard_Table.include.bb2@1102> XINCLUDE "PE/wizard_Table.include.bb2"
00013F08 <wizard_Table.include.bb2@1103> XINCLUDE "PE/wizard_Table.include.bb2"
00013F74 <wizard_Table.include.bb2@1104> XINCLUDE "PE/wizard_Table.include.bb2"
00013F88 <wizard_Table.include.bb2@1105> XINCLUDE "PE/wizard_Table.include.bb2"
00013FDE <wizard_Table.include.bb2@1106> XINCLUDE "PE/wizard_Table.include.bb2"
0001404A <wizard_Table.include.bb2@1107> XINCLUDE "PE/wizard_Table.include.bb2"
0001405A <wizard_Table.include.bb2@1108> XINCLUDE "PE/wizard_Table.include.bb2"
0001405C <wizard_Table.include.bb2@1109> XINCLUDE "PE/wizard_Table.include.bb2"
00014074 <wizard_Table.include.bb2@1111> XINCLUDE "PE/wizard_Table.include.bb2"
000140CA <wizard_Table.include.bb2@1112> XINCLUDE "PE/wizard_Table.include.bb2"
0001412C <wizard_Table.include.bb2@1113> XINCLUDE "PE/wizard_Table.include.bb2"
0001413A <wizard_Table.include.bb2@1116> XINCLUDE "PE/wizard_Table.include.bb2"
0001416C <wizard_Table.include.bb2@1117> XINCLUDE "PE/wizard_Table.include.bb2"
00014176 <wizard_Table.include.bb2@1118> XINCLUDE "PE/wizard_Table.include.bb2"
000141B8 <wizard_Table.include.bb2@1119> XINCLUDE "PE/wizard_Table.include.bb2"
000141D4 <wizard_Table.include.bb2@1120> XINCLUDE "PE/wizard_Table.include.bb2"
00014208 <wizard_Table.include.bb2@1121> XINCLUDE "PE/wizard_Table.include.bb2"
0001422A <wizard_Table.include.bb2@1122> XINCLUDE "PE/wizard_Table.include.bb2"
00014246 <wizard_Table.include.bb2@1123> XINCLUDE "PE/wizard_Table.include.bb2"
0001428C <wizard_Table.include.bb2@1124> XINCLUDE "PE/wizard_Table.include.bb2"
000142EE <wizard_Table.include.bb2@1125> XINCLUDE "PE/wizard_Table.include.bb2"
00014336 <wizard_Table.include.bb2@1126> XINCLUDE "PE/wizard_Table.include.bb2"
00014346 <wizard_Table.include.bb2@1127> XINCLUDE "PE/wizard_Table.include.bb2"
00014354 <wizard_Table.include.bb2@1129> XINCLUDE "PE/wizard_Table.include.bb2"
0001435E <wizard_Table.include.bb2@1131> XINCLUDE "PE/wizard_Table.include.bb2"
00014376 <wizard_Table.include.bb2@1133> XINCLUDE "PE/wizard_Table.include.bb2"
000143A4 <wizard_Table.include.bb2@1139> XINCLUDE "PE/wizard_Table.include.bb2"
000143D8 <wizard_Table.include.bb2@1142> XINCLUDE "PE/wizard_Table.include.bb2"
000143EA <wizard_Table.include.bb2@1143> XINCLUDE "PE/wizard_Table.include.bb2"
00014408 <wizard_Table.include.bb2@1144> XINCLUDE "PE/wizard_Table.include.bb2"
00014412 <wizard_Table.include.bb2@1145> XINCLUDE "PE/wizard_Table.include.bb2"
00014420 <wizard_Table.include.bb2@1146> XINCLUDE "PE/wizard_Table.include.bb2"
0001442E <wizard_Table.include.bb2@1147> XINCLUDE "PE/wizard_Table.include.bb2"
0001443C <wizard_Table.include.bb2@1148> XINCLUDE "PE/wizard_Table.include.bb2"
0001444A <wizard_Table.include.bb2@1149> XINCLUDE "PE/wizard_Table.include.bb2"
00014458 <wizard_Table.include.bb2@1151> XINCLUDE "PE/wizard_Table.include.bb2"
00014470 <wizard_Table.include.bb2@1152> XINCLUDE "PE/wizard_Table.include.bb2"
00014488 <wizard_Table.include.bb2@1154> XINCLUDE "PE/wizard_Table.include.bb2"
000144DC <wizard_Table.include.bb2@1155> XINCLUDE "PE/wizard_Table.include.bb2"
0001451A <wizard_Table.include.bb2@1156> XINCLUDE "PE/wizard_Table.include.bb2"
00014578 <wizard_Table.include.bb2@1158> XINCLUDE "PE/wizard_Table.include.bb2"
00014598 <wizard_Table.include.bb2@1160> XINCLUDE "PE/wizard_Table.include.bb2"
000145B4 <wizard_Table.include.bb2@1161> XINCLUDE "PE/wizard_Table.include.bb2"
000145E8 <wizard_Table.include.bb2@1162> XINCLUDE "PE/wizard_Table.include.bb2"
0001460A <wizard_Table.include.bb2@1163> XINCLUDE "PE/wizard_Table.include.bb2"
00014626 <wizard_Table.include.bb2@1164> XINCLUDE "PE/wizard_Table.include.bb2"
0001466C <wizard_Table.include.bb2@1165> XINCLUDE "PE/wizard_Table.include.bb2"
000146D2 <wizard_Table.include.bb2@1166> XINCLUDE "PE/wizard_Table.include.bb2"
0001471A <wizard_Table.include.bb2@1168> XINCLUDE "PE/wizard_Table.include.bb2"
0001472A <wizard_Table.include.bb2@1169> XINCLUDE "PE/wizard_Table.include.bb2"
00014738 <wizard_Table.include.bb2@1171> XINCLUDE "PE/wizard_Table.include.bb2"
0001475E <wizard_Table.include.bb2@1174> XINCLUDE "PE/wizard_Table.include.bb2"
00014768 <wizard_Table.include.bb2@1175> XINCLUDE "PE/wizard_Table.include.bb2"
0001477A <wizard_Table.include.bb2@1176> XINCLUDE "PE/wizard_Table.include.bb2"
000147A6 <wizard_Table.include.bb2@1177> XINCLUDE "PE/wizard_Table.include.bb2"
00015356 <wizard_Table.include.bb2@1178> XINCLUDE "PE/wizard_Table.include.bb2"
0001535C <wizard_Table.include.bb2@1179> XINCLUDE "PE/wizard_Table.include.bb2"
00015362 <wizard_Table.include.bb2@1181> XINCLUDE "PE/wizard_Table.include.bb2"
0001537A <wizard_Table.include.bb2@1185> XINCLUDE "PE/wizard_Table.include.bb2"
000153A4 <wizard_Table.include.bb2@1190> XINCLUDE "PE/wizard_Table.include.bb2"
000153F0 <wizard_Table.include.bb2@1193> XINCLUDE "PE/wizard_Table.include.bb2"
00015424 <wizard_Table.include.bb2@1195> XINCLUDE "PE/wizard_Table.include.bb2"
00015436 <wizard_Table.include.bb2@1196> XINCLUDE "PE/wizard_Table.include.bb2"
0001545C <wizard_Table.include.bb2@1197> XINCLUDE "PE/wizard_Table.include.bb2"
000154CC <wizard_Table.include.bb2@1199> XINCLUDE "PE/wizard_Table.include.bb2"
000154E0 <wizard_Table.include.bb2@1200> XINCLUDE "PE/wizard_Table.include.bb2"
0001556E <wizard_Table.include.bb2@1201> XINCLUDE "PE/wizard_Table.include.bb2"
00015574 <wizard_Table.include.bb2@1202> XINCLUDE "PE/wizard_Table.include.bb2"
00015608 <wizard_Table.include.bb2@1203> XINCLUDE "PE/wizard_Table.include.bb2"
0001567E <wizard_Table.include.bb2@1206> XINCLUDE "PE/wizard_Table.include.bb2"
00015686 <wizard_Table.include.bb2@1208> XINCLUDE "PE/wizard_Table.include.bb2"
000156A6 <wizard_Table.include.bb2@1209> XINCLUDE "PE/wizard_Table.include.bb2"
000156DA <wizard_Table.include.bb2@1210> XINCLUDE "PE/wizard_Table.include.bb2"
00015720 <wizard_Table.include.bb2@1211> XINCLUDE "PE/wizard_Table.include.bb2"
000157C8 <wizard_Table.include.bb2@1212> XINCLUDE "PE/wizard_Table.include.bb2"
00015810 <wizard_Table.include.bb2@1213> XINCLUDE "PE/wizard_Table.include.bb2"
0001581E <wizard_Table.include.bb2@1214> XINCLUDE "PE/wizard_Table.include.bb2"
0001583E <wizard_Table.include.bb2@1216> XINCLUDE "PE/wizard_Table.include.bb2"
0001585A <wizard_Table.include.bb2@1217> XINCLUDE "PE/wizard_Table.include.bb2"
0001588E <wizard_Table.include.bb2@1218> XINCLUDE "PE/wizard_Table.include.bb2"
000158B0 <wizard_Table.include.bb2@1219> XINCLUDE "PE/wizard_Table.include.bb2"
000158CC <wizard_Table.include.bb2@1220> XINCLUDE "PE/wizard_Table.include.bb2"
00015912 <wizard_Table.include.bb2@1221> XINCLUDE "PE/wizard_Table.include.bb2"
00015974 <wizard_Table.include.bb2@1222> XINCLUDE "PE/wizard_Table.include.bb2"
000159BC <wizard_Table.include.bb2@1224> XINCLUDE "PE/wizard_Table.include.bb2"
000159CC <wizard_Table.include.bb2@1225> XINCLUDE "PE/wizard_Table.include.bb2"
000159DA <wizard_Table.include.bb2@1227> XINCLUDE "PE/wizard_Table.include.bb2"
000159E4 <wizard_Table.include.bb2@1231> XINCLUDE "PE/wizard_Table.include.bb2"
000159F2 <wizard_Table.include.bb2@1233> XINCLUDE "PE/wizard_Table.include.bb2"
00015A30 <wizard_Table.include.bb2@1234> XINCLUDE "PE/wizard_Table.include.bb2"
00015A36 <wizard_Table.include.bb2@1237> XINCLUDE "PE/wizard_Table.include.bb2"
00015A3C <wizard_Table.include.bb2@1239> XINCLUDE "PE/wizard_Table.include.bb2"
00016580 <wizard_Table.include.bb2@1240> XINCLUDE "PE/wizard_Table.include.bb2"
000165AC <wizard_Table.include.bb2@1241> XINCLUDE "PE/wizard_Table.include.bb2"
000165B6 <wizard_Table.include.bb2@1242> XINCLUDE "PE/wizard_Table.include.bb2"
000165FC <wizard_Table.include.bb2@1243> XINCLUDE "PE/wizard_Table.include.bb2"
00016606 <wizard_Table.include.bb2@1244> XINCLUDE "PE/wizard_Table.include.bb2"
00016614 <wizard_Table.include.bb2@1246> XINCLUDE "PE/wizard_Table.include.bb2"
00016622 <wizard_Table.include.bb2@1247> XINCLUDE "PE/wizard_Table.include.bb2"
00016652 <wizard_Table.include.bb2@1248> XINCLUDE "PE/wizard_Table.include.bb2"
0001666A <wizard_Table.include.bb2@1251> XINCLUDE "PE/wizard_Table.include.bb2"
0001669C <wizard_Table.include.bb2@1259> XINCLUDE "PE/wizard_Table.include.bb2"
000166DC <wizard_Table.include.bb2@1262> XINCLUDE "PE/wizard_Table.include.bb2"
00016710 <wizard_Table.include.bb2@1263> XINCLUDE "PE/wizard_Table.include.bb2"
00016722 <wizard_Table.include.bb2@1264> XINCLUDE "PE/wizard_Table.include.bb2"
00016740 <wizard_Table.include.bb2@1265> XINCLUDE "PE/wizard_Table.include.bb2"
0001676A <wizard_Table.include.bb2@1266> XINCLUDE "PE/wizard_Table.include.bb2"
00016774 <wizard_Table.include.bb2@1267> XINCLUDE "PE/wizard_Table.include.bb2"
00016782 <wizard_Table.include.bb2@1268> XINCLUDE "PE/wizard_Table.include.bb2"
00016790 <wizard_Table.include.bb2@1269> XINCLUDE "PE/wizard_Table.include.bb2"
0001679E <wizard_Table.include.bb2@1270> XINCLUDE "PE/wizard_Table.include.bb2"
000167AC <wizard_Table.include.bb2@1271> XINCLUDE "PE/wizard_Table.include.bb2"
000167BA <wizard_Table.include.bb2@1272> XINCLUDE "PE/wizard_Table.include.bb2"
000167CC <wizard_Table.include.bb2@1274> XINCLUDE "PE/wizard_Table.include.bb2"
000167FA <wizard_Table.include.bb2@1275> XINCLUDE "PE/wizard_Table.include.bb2"
00016818 <wizard_Table.include.bb2@1276> XINCLUDE "PE/wizard_Table.include.bb2"
00016828 <wizard_Table.include.bb2@1277> XINCLUDE "PE/wizard_Table.include.bb2"
00016888 <wizard_Table.include.bb2@1278> XINCLUDE "PE/wizard_Table.include.bb2"
0001689E <wizard_Table.include.bb2@1279> XINCLUDE "PE/wizard_Table.include.bb2"
000168DA <wizard_Table.include.bb2@1280> XINCLUDE "PE/wizard_Table.include.bb2"
000168E6 <wizard_Table.include.bb2@1281> XINCLUDE "PE/wizard_Table.include.bb2"
0001699E <wizard_Table.include.bb2@1282> XINCLUDE "PE/wizard_Table.include.bb2"
000169B0 <wizard_Table.include.bb2@1283> XINCLUDE "PE/wizard_Table.include.bb2"
000169BA <wizard_Table.include.bb2@1284> XINCLUDE "PE/wizard_Table.include.bb2"
000169EE <wizard_Table.include.bb2@1285> XINCLUDE "PE/wizard_Table.include.bb2"
00016A08 <wizard_Table.include.bb2@1287> XINCLUDE "PE/wizard_Table.include.bb2"
00016A6C <wizard_Table.include.bb2@1288> XINCLUDE "PE/wizard_Table.include.bb2"
00016A8E <wizard_Table.include.bb2@1290> XINCLUDE "PE/wizard_Table.include.bb2"
00016A98 <wizard_Table.include.bb2@1291> XINCLUDE "PE/wizard_Table.include.bb2"
00016AA4 <wizard_Table.include.bb2@1292> XINCLUDE "PE/wizard_Table.include.bb2"
00016AB0 <wizard_Table.include.bb2@1293> XINCLUDE "PE/wizard_Table.include.bb2"
00016AC8 <wizard_Table.include.bb2@1298> XINCLUDE "PE/wizard_Table.include.bb2"
00016AF6 <wizard_Table.include.bb2@1301> XINCLUDE "PE/wizard_Table.include.bb2"
00016B24 <wizard_Table.include.bb2@1303> XINCLUDE "PE/wizard_Table.include.bb2"
00016B44 <wizard_Table.include.bb2@1305> XINCLUDE "PE/wizard_Table.include.bb2"
00016B5C <wizard_Table.include.bb2@1312> XINCLUDE "PE/wizard_Table.include.bb2"
00016B7A <wizard_Table.include.bb2@1316> XINCLUDE "PE/wizard_Table.include.bb2"
00016B9A <wizard_Table.include.bb2@1319> XINCLUDE "PE/wizard_Table.include.bb2"
00016BB8 <wizard_Table.include.bb2@1320> XINCLUDE "PE/wizard_Table.include.bb2"
00016BCE <wizard_Table.include.bb2@1321> XINCLUDE "PE/wizard_Table.include.bb2"
00016BD4 <wizard_Table.include.bb2@1324> XINCLUDE "PE/wizard_Table.include.bb2"
00016C08 <wizard_Table.include.bb2@1325> XINCLUDE "PE/wizard_Table.include.bb2"
00016C32 <wizard_Table.include.bb2@1326> XINCLUDE "PE/wizard_Table.include.bb2"
00016C5A <wizard_Table.include.bb2@1327> XINCLUDE "PE/wizard_Table.include.bb2"
00016C7C <wizard_Table.include.bb2@1328> XINCLUDE "PE/wizard_Table.include.bb2"
00016CD8 <wizard_Table.include.bb2@1329> XINCLUDE "PE/wizard_Table.include.bb2"
00016D56 <wizard_Table.include.bb2@1330> XINCLUDE "PE/wizard_Table.include.bb2"
00016D84 <wizard_Table.include.bb2@1331> XINCLUDE "PE/wizard_Table.include.bb2"
00016DAC <wizard_Table.include.bb2@1332> XINCLUDE "PE/wizard_Table.include.bb2"
00016DB2 <wizard_Table.include.bb2@1334> XINCLUDE "PE/wizard_Table.include.bb2"
00016DB8 <wizard_Table.include.bb2@1335> XINCLUDE "PE/wizard_Table.include.bb2"
00016DBE <wizard_Table.include.bb2@1336> XINCLUDE "PE/wizard_Table.include.bb2"
00016DF6 <wizard_Table.include.bb2@1337> XINCLUDE "PE/wizard_Table.include.bb2"
00016E1E <wizard_Table.include.bb2@1346> XINCLUDE "PE/wizard_Table.include.bb2"
00016E2A <wizard_Table.include.bb2@1347> XINCLUDE "PE/wizard_Table.include.bb2"
00016E30 <wizard_Table.include.bb2@1348> XINCLUDE "PE/wizard_Table.include.bb2"
00016E3E <wizard_Table.include.bb2@1349> XINCLUDE "PE/wizard_Table.include.bb2"
00016E70 <wizard_Table.include.bb2@1350> XINCLUDE "PE/wizard_Table.include.bb2"
00016EA2 <wizard_Table.include.bb2@1351> XINCLUDE "PE/wizard_Table.include.bb2"
00016EAC <wizard_Table.include.bb2@1355> XINCLUDE "PE/wizard_Table.include.bb2"
00016EC0 <wizard_Table.include.bb2@1356> XINCLUDE "PE/wizard_Table.include.bb2"
00016ECE <wizard_Table.include.bb2@1357> XINCLUDE "PE/wizard_Table.include.bb2"
00016EE0 <wizard_Table.include.bb2@1358> XINCLUDE "PE/wizard_Table.include.bb2"
00016EFC <wizard_Table.include.bb2@1359> XINCLUDE "PE/wizard_Table.include.bb2"
00016F24 <wizard_Table.include.bb2@1360> XINCLUDE "PE/wizard_Table.include.bb2"
00016F32 <wizard_Table.include.bb2@1363> XINCLUDE "PE/wizard_Table.include.bb2"
00016F40 <wizard_Table.include.bb2@1364> XINCLUDE "PE/wizard_Table.include.bb2"
00016F4E <wizard_Table.include.bb2@1365> XINCLUDE "PE/wizard_Table.include.bb2"
00016F54 <wizard_Table.include.bb2@1366> XINCLUDE "PE/wizard_Table.include.bb2"
00016F60 <wizard_Table.include.bb2@1367> XINCLUDE "PE/wizard_Table.include.bb2"
00016F6E <wizard_Table.include.bb2@1368> XINCLUDE "PE/wizard_Table.include.bb2"
00016F84 <wizard_Table.include.bb2@1369> XINCLUDE "PE/wizard_Table.include.bb2"
00016F90 <wizard_Table.include.bb2@1370> XINCLUDE "PE/wizard_Table.include.bb2"
00016F96 <wizard_Table.include.bb2@1371> XINCLUDE "PE/wizard_Table.include.bb2"
00016FAA <wizard_Table.include.bb2@1372> XINCLUDE "PE/wizard_Table.include.bb2"
00016FC0 <wizard_Table.include.bb2@1373> XINCLUDE "PE/wizard_Table.include.bb2"
00016FCC <wizard_Table.include.bb2@1374> XINCLUDE "PE/wizard_Table.include.bb2"
00016FD2 <wizard_Table.include.bb2@1377> XINCLUDE "PE/wizard_Table.include.bb2"
00016FDE <wizard_Table.include.bb2@1378> XINCLUDE "PE/wizard_Table.include.bb2"
00016FE4 <wizard_Table.include.bb2@1379> XINCLUDE "PE/wizard_Table.include.bb2"
00016FF6 <wizard_Table.include.bb2@1386> XINCLUDE "PE/wizard_Table.include.bb2"
00017004 <wizard_Table.include.bb2@1387> XINCLUDE "PE/wizard_Table.include.bb2"
00017170 <wizard_Table.include.bb2@1388> XINCLUDE "PE/wizard_Table.include.bb2"
00017176 <wizard_Table.include.bb2@1389> XINCLUDE "PE/wizard_Table.include.bb2"
0001719A <wizard_Table.include.bb2@1390> XINCLUDE "PE/wizard_Table.include.bb2"
000171A8 <wizard_Table.include.bb2@1391> XINCLUDE "PE/wizard_Table.include.bb2"
000171AA <wizard_Table.include.bb2@1393> XINCLUDE "PE/wizard_Table.include.bb2"
000171EC <wizard_Table.include.bb2@1394> XINCLUDE "PE/wizard_Table.include.bb2"
00017220 <wizard_Table.include.bb2@1395> XINCLUDE "PE/wizard_Table.include.bb2"
00017254 <wizard_Table.include.bb2@1396> XINCLUDE "PE/wizard_Table.include.bb2"
00017282 <wizard_Table.include.bb2@1397> XINCLUDE "PE/wizard_Table.include.bb2"
0001728E <wizard_Table.include.bb2@1398> XINCLUDE "PE/wizard_Table.include.bb2"
000172A2 <wizard_Table.include.bb2@1401> XINCLUDE "PE/wizard_Table.include.bb2"
000172B0 <wizard_Table.include.bb2@1402> XINCLUDE "PE/wizard_Table.include.bb2"
000172BE <wizard_Table.include.bb2@1403> XINCLUDE "PE/wizard_Table.include.bb2"
000172CC <wizard_Table.include.bb2@1404> XINCLUDE "PE/wizard_Table.include.bb2"
000172F2 <wizard_Table.include.bb2@1406> XINCLUDE "PE/wizard_Table.include.bb2"
000172FC <wizard_Table.include.bb2@1407> XINCLUDE "PE/wizard_Table.include.bb2"
0001733C <wizard_Table.include.bb2@1408> XINCLUDE "PE/wizard_Table.include.bb2"
00017342 <wizard_Table.include.bb2@1409> XINCLUDE "PE/wizard_Table.include.bb2"
00017354 <wizard_Table.include.bb2@1410> XINCLUDE "PE/wizard_Table.include.bb2"
000173A0 <wizard_Table.include.bb2@1411> XINCLUDE "PE/wizard_Table.include.bb2"
00017408 <wizard_Table.include.bb2@1412> XINCLUDE "PE/wizard_Table.include.bb2"
0001741C <wizard_Table.include.bb2@1413> XINCLUDE "PE/wizard_Table.include.bb2"
0001743E <wizard_Table.include.bb2@1414> XINCLUDE "PE/wizard_Table.include.bb2"
0001745C <wizard_Table.include.bb2@1415> XINCLUDE "PE/wizard_Table.include.bb2"
00017462 <wizard_Table.include.bb2@1417> XINCLUDE "PE/wizard_Table.include.bb2"
00017468 <wizard_Table.include.bb2@1419> XINCLUDE "PE/wizard_Table.include.bb2"
000174AA <wizard_Table.include.bb2@1421> XINCLUDE "PE/wizard_Table.include.bb2"
000174DE <wizard_Table.include.bb2@1422> XINCLUDE "PE/wizard_Table.include.bb2"
00017512 <wizard_Table.include.bb2@1423> XINCLUDE "PE/wizard_Table.include.bb2"
00017540 <wizard_Table.include.bb2@1424> XINCLUDE "PE/wizard_Table.include.bb2"
0001754C <wizard_Table.include.bb2@1425> XINCLUDE "PE/wizard_Table.include.bb2"
00017560 <wizard_Table.include.bb2@1430> XINCLUDE "PE/wizard_Table.include.bb2"
000175A6 <wizard_Table.include.bb2@1431> XINCLUDE "PE/wizard_Table.include.bb2"
000175F4 <wizard_Table.include.bb2@1432> XINCLUDE "PE/wizard_Table.include.bb2"
00017622 <wizard_Table.include.bb2@1433> XINCLUDE "PE/wizard_Table.include.bb2"
00017638 <wizard_Table.include.bb2@1435> XINCLUDE "PE/wizard_Table.include.bb2"
00017662 <wizard_Table.include.bb2@1436> XINCLUDE "PE/wizard_Table.include.bb2"
00017668 <wizard_Table.include.bb2@1437> XINCLUDE "PE/wizard_Table.include.bb2"
00017688 <wizard_Table.include.bb2@1440> XINCLUDE "PE/wizard_Table.include.bb2"
000176C2 <wizard_Table.include.bb2@1441> XINCLUDE "PE/wizard_Table.include.bb2"
000176FC <wizard_Table.include.bb2@1442> XINCLUDE "PE/wizard_Table.include.bb2"
0001772A <wizard_Table.include.bb2@1443> XINCLUDE "PE/wizard_Table.include.bb2"
00017736 <wizard_Table.include.bb2@1445> XINCLUDE "PE/wizard_Table.include.bb2"
0001773C <wizard_Table.include.bb2@1447> XINCLUDE "PE/wizard_Table.include.bb2"
0001775C <wizard_Table.include.bb2@1449> XINCLUDE "PE/wizard_Table.include.bb2"
0001778A <wizard_Table.include.bb2@1450> XINCLUDE "PE/wizard_Table.include.bb2"
000177A6 <wizard_Table.include.bb2@1451> XINCLUDE "PE/wizard_Table.include.bb2"
000177B6 <wizard_Table.include.bb2@1452> XINCLUDE "PE/wizard_Table.include.bb2"
000177C8 <wizard_Table.include.bb2@1453> XINCLUDE "PE/wizard_Table.include.bb2"
000177F6 <wizard_Table.include.bb2@1454> XINCLUDE "PE/wizard_Table.include.bb2"
00017824 <wizard_Table.include.bb2@1455> XINCLUDE "PE/wizard_Table.include.bb2"
00017830 <wizard_Table.include.bb2@1457> XINCLUDE "PE/wizard_Table.include.bb2"
00017844 <wizard_Table.include.bb2@1462> XINCLUDE "PE/wizard_Table.include.bb2"
0001786C <wizard_Table.include.bb2@1463> XINCLUDE "PE/wizard_Table.include.bb2"
0001789A <wizard_Table.include.bb2@1464> XINCLUDE "PE/wizard_Table.include.bb2"
000178A8 <wizard_Table.include.bb2@1465> XINCLUDE "PE/wizard_Table.include.bb2"
000178BA <wizard_Table.include.bb2@1466> XINCLUDE "PE/wizard_Table.include.bb2"
000178CC <wizard_Table.include.bb2@1467> XINCLUDE "PE/wizard_Table.include.bb2"
000178DA <wizard_Table.include.bb2@1468> XINCLUDE "PE/wizard_Table.include.bb2"
000178E8 <wizard_Table.include.bb2@1469> XINCLUDE "PE/wizard_Table.include.bb2"
000178EE <wizard_Table.include.bb2@1471> XINCLUDE "PE/wizard_Table.include.bb2"
000178FA <wizard_Table.include.bb2@1472> XINCLUDE "PE/wizard_Table.include.bb2"
00017900 <wizard_Table.include.bb2@1473> XINCLUDE "PE/wizard_Table.include.bb2"
0001790E <wizard_Table.include.bb2@1476> XINCLUDE "PE/wizard_Table.include.bb2"
0001794E <wizard_Table.include.bb2@1477> XINCLUDE "PE/wizard_Table.include.bb2"
0001798E <wizard_Table.include.bb2@1479> XINCLUDE "PE/wizard_Table.include.bb2"
000179A6 <wizard_Table.include.bb2@1480> XINCLUDE "PE/wizard_Table.include.bb2"
000179BC <wizard_Table.include.bb2@1481> XINCLUDE "PE/wizard_Table.include.bb2"
000179D2 <wizard_Table.include.bb2@1482> XINCLUDE "PE/wizard_Table.include.bb2"
000179D8 <wizard_Table.include.bb2@1483> XINCLUDE "PE/wizard_Table.include.bb2"
000179DE <wizard_Table.include.bb2@1484> XINCLUDE "PE/wizard_Table.include.bb2"
000179EA <wizard_Table.include.bb2@1485> XINCLUDE "PE/wizard_Table.include.bb2"
000179F0 <wizard_Table.include.bb2@1486> XINCLUDE "PE/wizard_Table.include.bb2"
000179F6 <wizard_Table.include.bb2@1487> XINCLUDE "PE/wizard_Table.include.bb2"
00017A0E <wizard_Table.include.bb2@1488> XINCLUDE "PE/wizard_Table.include.bb2"
00017A14 <wizard_Table.include.bb2@1490> XINCLUDE "PE/wizard_Table.include.bb2"
00017A2A <wizard_Table.include.bb2@1491> XINCLUDE "PE/wizard_Table.include.bb2"
00017A30 <wizard_Table.include.bb2@1492> XINCLUDE "PE/wizard_Table.include.bb2"
00017A36 <wizard_Table.include.bb2@1493> XINCLUDE "PE/wizard_Table.include.bb2"
00017A42 <wizard_Table.include.bb2@1494> XINCLUDE "PE/wizard_Table.include.bb2"
00017A48 <wizard_Table.include.bb2@1495> XINCLUDE "PE/wizard_Table.include.bb2"
00017A56 <wizard_Table.include.bb2@1496> XINCLUDE "PE/wizard_Table.include.bb2"
00017A5C <wizard_Table.include.bb2@1497> XINCLUDE "PE/wizard_Table.include.bb2"
00017A62 <wizard_Table.include.bb2@1501> XINCLUDE "PE/wizard_Table.include.bb2"
00017A68 <wizard_Table.include.bb2@1502> XINCLUDE "PE/wizard_Table.include.bb2"
00017A7C <wizard_Table.include.bb2@1504> XINCLUDE "PE/wizard_Table.include.bb2"
00017AAA <wizard_Table.include.bb2@1506> XINCLUDE "PE/wizard_Table.include.bb2"
00017AB6 <wizard_Table.include.bb2@1507> XINCLUDE "PE/wizard_Table.include.bb2"
00017AC2 <wizard_Table.include.bb2@1508> XINCLUDE "PE/wizard_Table.include.bb2"
00017AC8 <wizard_Table.include.bb2@1511> XINCLUDE "PE/wizard_Table.include.bb2"
00017AF6 <wizard_Table.include.bb2@1512> XINCLUDE "PE/wizard_Table.include.bb2"
00017B02 <wizard_Table.include.bb2@1513> XINCLUDE "PE/wizard_Table.include.bb2"
00017B0E <wizard_Table.include.bb2@1514> XINCLUDE "PE/wizard_Table.include.bb2"
00017B10 <wizard_Table.include.bb2@1515> XINCLUDE "PE/wizard_Table.include.bb2"
00017B1C <wizard_Table.include.bb2@1516> XINCLUDE "PE/wizard_Table.include.bb2"
00017B30 <wizard_Table.include.bb2@1519> XINCLUDE "PE/wizard_Table.include.bb2"
00017B50 <wizard_Table.include.bb2@1521> XINCLUDE "PE/wizard_Table.include.bb2"
00017B8A <wizard_Table.include.bb2@1522> XINCLUDE "PE/wizard_Table.include.bb2"
00017BC6 <wizard_Table.include.bb2@1523> XINCLUDE "PE/wizard_Table.include.bb2"
00017C02 <wizard_Table.include.bb2@1524> XINCLUDE "PE/wizard_Table.include.bb2"
00017C22 <wizard_Table.include.bb2@1526> XINCLUDE "PE/wizard_Table.include.bb2"
00017C2C <wizard_Table.include.bb2@1528> XINCLUDE "PE/wizard_Table.include.bb2"
00017C4A <wizard_Table.include.bb2@1529> XINCLUDE "PE/wizard_Table.include.bb2"
00017C62 <wizard_Table.include.bb2@1530> XINCLUDE "PE/wizard_Table.include.bb2"
00017C94 <wizard_Table.include.bb2@1532> XINCLUDE "PE/wizard_Table.include.bb2"
00017CC8 <wizard_Table.include.bb2@1533> XINCLUDE "PE/wizard_Table.include.bb2"
00017CFA <wizard_Table.include.bb2@1534> XINCLUDE "PE/wizard_Table.include.bb2"
00017D28 <wizard_Table.include.bb2@1535> XINCLUDE "PE/wizard_Table.include.bb2"
00017D4A <wizard_Table.include.bb2@1538> XINCLUDE "PE/wizard_Table.include.bb2"
00017D82 <wizard_Table.include.bb2@1539> XINCLUDE "PE/wizard_Table.include.bb2"
00017D88 <wizard_Table.include.bb2@1541> XINCLUDE "PE/wizard_Table.include.bb2"
00017D8E <wizard_Table.include.bb2@1543> XINCLUDE "PE/wizard_Table.include.bb2"
00017D94 <wizard_Table.include.bb2@1545> XINCLUDE "PE/wizard_Table.include.bb2"
00017DA2 <wizard_Table.include.bb2@1546> XINCLUDE "PE/wizard_Table.include.bb2"
00017DBE <wizard_Table.include.bb2@1547> XINCLUDE "PE/wizard_Table.include.bb2"
00017DD4 <wizard_Table.include.bb2@1548> XINCLUDE "PE/wizard_Table.include.bb2"
00017E02 <wizard_Table.include.bb2@1549> XINCLUDE "PE/wizard_Table.include.bb2"
00017E3E <wizard_Table.include.bb2@1550> XINCLUDE "PE/wizard_Table.include.bb2"
00017E4E <wizard_Table.include.bb2@1551> XINCLUDE "PE/wizard_Table.include.bb2"
00017E5C <wizard_Table.include.bb2@1552> XINCLUDE "PE/wizard_Table.include.bb2"
00017E64 <wizard_Table.include.bb2@1553> XINCLUDE "PE/wizard_Table.include.bb2"
00017E6A <wizard_Table.include.bb2@1554> XINCLUDE "PE/wizard_Table.include.bb2"
00017E7A <wizard_Table.include.bb2@1555> XINCLUDE "PE/wizard_Table.include.bb2"
00017E86 <wizard_Table.include.bb2@1556> XINCLUDE "PE/wizard_Table.include.bb2"
00017E8C <wizard_Table.include.bb2@1558> XINCLUDE "PE/wizard_Table.include.bb2"
00017E94 <wizard_Table.include.bb2@1559> XINCLUDE "PE/wizard_Table.include.bb2"
00017E9A <wizard_Table.include.bb2@1562> XINCLUDE "PE/wizard_Table.include.bb2"
00017EE2 <wizard_Table.include.bb2@1563> XINCLUDE "PE/wizard_Table.include.bb2"
00017EE4 <wizard_Table.include.bb2@1564> XINCLUDE "PE/wizard_Table.include.bb2"
00017EF2 <wizard_Table.include.bb2@1567> XINCLUDE "PE/wizard_Table.include.bb2"
00017F04 <wizard_Table.include.bb2@1568> XINCLUDE "PE/wizard_Table.include.bb2"
00017F10 <wizard_Table.include.bb2@1569> XINCLUDE "PE/wizard_Table.include.bb2"
00017F16 <wizard_Table.include.bb2@1571> XINCLUDE "PE/wizard_Table.include.bb2"
00017F2E <wizard_Table.include.bb2@1572> XINCLUDE "PE/wizard_Table.include.bb2"
00017F3A <wizard_Table.include.bb2@1573> XINCLUDE "PE/wizard_Table.include.bb2"
00017F40 <wizard_Table.include.bb2@1576> XINCLUDE "PE/wizard_Table.include.bb2"
00017F6E <wizard_Table.include.bb2@1577> XINCLUDE "PE/wizard_Table.include.bb2"
00017F7A <wizard_Table.include.bb2@1578> XINCLUDE "PE/wizard_Table.include.bb2"
00017FAC <wizard_Table.include.bb2@1579> XINCLUDE "PE/wizard_Table.include.bb2"
00017FDA <wizard_Table.include.bb2@1580> XINCLUDE "PE/wizard_Table.include.bb2"
00018008 <wizard_Table.include.bb2@1581> XINCLUDE "PE/wizard_Table.include.bb2"
0001800A <wizard_Table.include.bb2@1584> XINCLUDE "PE/wizard_Table.include.bb2"
00018012 <wizard_Table.include.bb2@1586> XINCLUDE "PE/wizard_Table.include.bb2"
00018024 <wizard_Table.include.bb2@1587> XINCLUDE "PE/wizard_Table.include.bb2"
00018024 <AmiBlitz3.ab2@91> XINCLUDE "PE/wizard_Table.include.bb2"
00018030 <AmiBlitz3.ab2@92> optimize 5                               ; added because the include change the optimize and or syntax level  tomsmart1
00018030 <logging.include.bb2@1> XINCLUDE "PE/logging.include.bb2"
0001803C <logging.include.bb2@4> XINCLUDE "PE/logging.include.bb2"
0001803C <file.include.bb2@1> XINCLUDE "PE/logging.include.bb2"
00018052 <file.include.bb2@66> XINCLUDE "PE/logging.include.bb2"
00018068 <file.include.bb2@67> XINCLUDE "PE/logging.include.bb2"
0001807E <file.include.bb2@68> XINCLUDE "PE/logging.include.bb2"
00018094 <file.include.bb2@70> XINCLUDE "PE/logging.include.bb2"
000180A0 <file.include.bb2@72> XINCLUDE "PE/logging.include.bb2"
000180AC <file.include.bb2@73> XINCLUDE "PE/logging.include.bb2"
000180B8 <file.include.bb2@74> XINCLUDE "PE/logging.include.bb2"
000180C4 <file.include.bb2@75> XINCLUDE "PE/logging.include.bb2"
000180EC <file.include.bb2@77> XINCLUDE "PE/logging.include.bb2"
00018114 <file.include.bb2@78> XINCLUDE "PE/logging.include.bb2"
0001813C <file.include.bb2@79> XINCLUDE "PE/logging.include.bb2"
00018160 <file.include.bb2@109> XINCLUDE "PE/logging.include.bb2"
00018184 <file.include.bb2@110> XINCLUDE "PE/logging.include.bb2"
0001819E <file.include.bb2@156> XINCLUDE "PE/logging.include.bb2"
000181AE <file.include.bb2@157> XINCLUDE "PE/logging.include.bb2"
000181B0 <file.include.bb2@158> XINCLUDE "PE/logging.include.bb2"
000181B2 <file.include.bb2@159> XINCLUDE "PE/logging.include.bb2"
000181B4 <file.include.bb2@160> XINCLUDE "PE/logging.include.bb2"
000181B6 <file.include.bb2@161> XINCLUDE "PE/logging.include.bb2"
000181B8 <file.include.bb2@162> XINCLUDE "PE/logging.include.bb2"
000181BC <file.include.bb2@163> XINCLUDE "PE/logging.include.bb2"
000181C0 <file.include.bb2@164> XINCLUDE "PE/logging.include.bb2"
000181C4 <file.include.bb2@165> XINCLUDE "PE/logging.include.bb2"
000181C6 <file.include.bb2@166> XINCLUDE "PE/logging.include.bb2"
000181C8 <file.include.bb2@167> XINCLUDE "PE/logging.include.bb2"
000181CA <file.include.bb2@168> XINCLUDE "PE/logging.include.bb2"
000181CC <file.include.bb2@169> XINCLUDE "PE/logging.include.bb2"
000181CE <file.include.bb2@170> XINCLUDE "PE/logging.include.bb2"
000181D0 <file.include.bb2@171> XINCLUDE "PE/logging.include.bb2"
000181D2 <file.include.bb2@172> XINCLUDE "PE/logging.include.bb2"
000181DC <file.include.bb2@173> XINCLUDE "PE/logging.include.bb2"
000181E2 <file.include.bb2@174> XINCLUDE "PE/logging.include.bb2"
000181FC <file.include.bb2@215> XINCLUDE "PE/logging.include.bb2"
0001821A <file.include.bb2@217> XINCLUDE "PE/logging.include.bb2"
00018220 <file.include.bb2@218> XINCLUDE "PE/logging.include.bb2"
0001823A <file.include.bb2@237> XINCLUDE "PE/logging.include.bb2"
00018254 <file.include.bb2@239> XINCLUDE "PE/logging.include.bb2"
0001827E <file.include.bb2@240> XINCLUDE "PE/logging.include.bb2"
0001829E <file.include.bb2@241> XINCLUDE "PE/logging.include.bb2"
000182A8 <file.include.bb2@242> XINCLUDE "PE/logging.include.bb2"
000182D4 <file.include.bb2@243> XINCLUDE "PE/logging.include.bb2"
000182F6 <file.include.bb2@244> XINCLUDE "PE/logging.include.bb2"
00018310 <file.include.bb2@245> XINCLUDE "PE/logging.include.bb2"
00018314 <file.include.bb2@248> XINCLUDE "PE/logging.include.bb2"
00018342 <file.include.bb2@249> XINCLUDE "PE/logging.include.bb2"
00018360 <file.include.bb2@251> XINCLUDE "PE/logging.include.bb2"
00018366 <file.include.bb2@252> XINCLUDE "PE/logging.include.bb2"
00018384 <file.include.bb2@271> XINCLUDE "PE/logging.include.bb2"
0001838A <file.include.bb2@273> XINCLUDE "PE/logging.include.bb2"
000183B2 <file.include.bb2@274> XINCLUDE "PE/logging.include.bb2"
000183D0 <file.include.bb2@275> XINCLUDE "PE/logging.include.bb2"
0001840A <file.include.bb2@276> XINCLUDE "PE/logging.include.bb2"
00018426 <file.include.bb2@277> XINCLUDE "PE/logging.include.bb2"
0001842A <file.include.bb2@278> XINCLUDE "PE/logging.include.bb2"
00018430 <file.include.bb2@279> XINCLUDE "PE/logging.include.bb2"
00018434 <file.include.bb2@281> XINCLUDE "PE/logging.include.bb2"
0001843A <file.include.bb2@282> XINCLUDE "PE/logging.include.bb2"
00018454 <file.include.bb2@283> XINCLUDE "PE/logging.include.bb2"
0001849E <file.include.bb2@285> XINCLUDE "PE/logging.include.bb2"
000184A4 <file.include.bb2@286> XINCLUDE "PE/logging.include.bb2"
000184D2 <file.include.bb2@287> XINCLUDE "PE/logging.include.bb2"
000184DC <file.include.bb2@288> XINCLUDE "PE/logging.include.bb2"
000184F8 <file.include.bb2@289> XINCLUDE "PE/logging.include.bb2"
000184FC <file.include.bb2@291> XINCLUDE "PE/logging.include.bb2"
0001852A <file.include.bb2@292> XINCLUDE "PE/logging.include.bb2"
00018534 <file.include.bb2@296> XINCLUDE "PE/logging.include.bb2"
0001853A <file.include.bb2@297> XINCLUDE "PE/logging.include.bb2"
00018558 <file.include.bb2@316> XINCLUDE "PE/logging.include.bb2"
00018586 <file.include.bb2@318> XINCLUDE "PE/logging.include.bb2"
0001858C <file.include.bb2@319> XINCLUDE "PE/logging.include.bb2"
000185A2 <file.include.bb2@335> XINCLUDE "PE/logging.include.bb2"
000185AC <file.include.bb2@337> XINCLUDE "PE/logging.include.bb2"
0001861A <file.include.bb2@338> XINCLUDE "PE/logging.include.bb2"
0001862A <file.include.bb2@339> XINCLUDE "PE/logging.include.bb2"
0001862E <file.include.bb2@340> XINCLUDE "PE/logging.include.bb2"
00018668 <file.include.bb2@341> XINCLUDE "PE/logging.include.bb2"
00018672 <file.include.bb2@342> XINCLUDE "PE/logging.include.bb2"
00018678 <file.include.bb2@343> XINCLUDE "PE/logging.include.bb2"
00018692 <file.include.bb2@397> XINCLUDE "PE/logging.include.bb2"
000186A8 <file.include.bb2@399> XINCLUDE "PE/logging.include.bb2"
00018704 <file.include.bb2@400> XINCLUDE "PE/logging.include.bb2"
0001873E <file.include.bb2@401> XINCLUDE "PE/logging.include.bb2"
00018778 <file.include.bb2@402> XINCLUDE "PE/logging.include.bb2"
00018796 <file.include.bb2@403> XINCLUDE "PE/logging.include.bb2"
000187B4 <file.include.bb2@404> XINCLUDE "PE/logging.include.bb2"
000187CA <file.include.bb2@405> XINCLUDE "PE/logging.include.bb2"
000187E6 <file.include.bb2@406> XINCLUDE "PE/logging.include.bb2"
00018800 <file.include.bb2@407> XINCLUDE "PE/logging.include.bb2"
0001887C <file.include.bb2@408> XINCLUDE "PE/logging.include.bb2"
0001888E <file.include.bb2@410> XINCLUDE "PE/logging.include.bb2"
000188A4 <file.include.bb2@422> XINCLUDE "PE/logging.include.bb2"
000188D8 <file.include.bb2@424> XINCLUDE "PE/logging.include.bb2"
000188E2 <file.include.bb2@425> XINCLUDE "PE/logging.include.bb2"
000188F2 <file.include.bb2@426> XINCLUDE "PE/logging.include.bb2"
000188F6 <file.include.bb2@427> XINCLUDE "PE/logging.include.bb2"
00018924 <file.include.bb2@428> XINCLUDE "PE/logging.include.bb2"
0001893E <file.include.bb2@447> XINCLUDE "PE/logging.include.bb2"
00018954 <file.include.bb2@449> XINCLUDE "PE/logging.include.bb2"
00018972 <file.include.bb2@450> XINCLUDE "PE/logging.include.bb2"
00018988 <file.include.bb2@451> XINCLUDE "PE/logging.include.bb2"
000189C0 <file.include.bb2@452> XINCLUDE "PE/logging.include.bb2"
000189EA <file.include.bb2@453> XINCLUDE "PE/logging.include.bb2"
00018A14 <file.include.bb2@456> XINCLUDE "PE/logging.include.bb2"
00018A2C <file.include.bb2@457> XINCLUDE "PE/logging.include.bb2"
00018A42 <file.include.bb2@525> XINCLUDE "PE/logging.include.bb2"
00018A8E <file.include.bb2@527> XINCLUDE "PE/logging.include.bb2"
00018AAE <file.include.bb2@528> XINCLUDE "PE/logging.include.bb2"
00018AB6 <file.include.bb2@529> XINCLUDE "PE/logging.include.bb2"
00018AF4 <file.include.bb2@568> XINCLUDE "PE/logging.include.bb2"
00018B00 <file.include.bb2@570> XINCLUDE "PE/logging.include.bb2"
00018B0A <file.include.bb2@571> XINCLUDE "PE/logging.include.bb2"
00018B20 <file.include.bb2@572> XINCLUDE "PE/logging.include.bb2"
00018B26 <file.include.bb2@573> XINCLUDE "PE/logging.include.bb2"
00018B32 <file.include.bb2@574> XINCLUDE "PE/logging.include.bb2"
00018B5A <file.include.bb2@575> XINCLUDE "PE/logging.include.bb2"
00018B6A <file.include.bb2@576> XINCLUDE "PE/logging.include.bb2"
00018B92 <file.include.bb2@577> XINCLUDE "PE/logging.include.bb2"
00018BA2 <file.include.bb2@578> XINCLUDE "PE/logging.include.bb2"
00018BCA <file.include.bb2@579> XINCLUDE "PE/logging.include.bb2"
00018BDA <file.include.bb2@580> XINCLUDE "PE/logging.include.bb2"
00018C02 <file.include.bb2@581> XINCLUDE "PE/logging.include.bb2"
00018C04 <file.include.bb2@582> XINCLUDE "PE/logging.include.bb2"
00018C2A <file.include.bb2@584> XINCLUDE "PE/logging.include.bb2"
00018C66 <file.include.bb2@586> XINCLUDE "PE/logging.include.bb2"
00018CF0 <file.include.bb2@587> XINCLUDE "PE/logging.include.bb2"
00018D2A <file.include.bb2@588> XINCLUDE "PE/logging.include.bb2"
00018D5A <file.include.bb2@589> XINCLUDE "PE/logging.include.bb2"
00018D96 <file.include.bb2@593> XINCLUDE "PE/logging.include.bb2"
00018DEE <file.include.bb2@594> XINCLUDE "PE/logging.include.bb2"
00018E46 <file.include.bb2@595> XINCLUDE "PE/logging.include.bb2"
00018EC6 <file.include.bb2@597> XINCLUDE "PE/logging.include.bb2"
00018EFA <file.include.bb2@598> XINCLUDE "PE/logging.include.bb2"
00018F2E <file.include.bb2@599> XINCLUDE "PE/logging.include.bb2"
00018F34 <file.include.bb2@600> XINCLUDE "PE/logging.include.bb2"
00018F40 <file.include.bb2@601> XINCLUDE "PE/logging.include.bb2"
00018F74 <file.include.bb2@602> XINCLUDE "PE/logging.include.bb2"
00018FA4 <file.include.bb2@603> XINCLUDE "PE/logging.include.bb2"
00019060 <file.include.bb2@604> XINCLUDE "PE/logging.include.bb2"
000190E0 <file.include.bb2@605> XINCLUDE "PE/logging.include.bb2"
00019114 <file.include.bb2@606> XINCLUDE "PE/logging.include.bb2"
00019132 <file.include.bb2@608> XINCLUDE "PE/logging.include.bb2"
0001913A <file.include.bb2@609> XINCLUDE "PE/logging.include.bb2"
0001913E <file.include.bb2@610> XINCLUDE "PE/logging.include.bb2"
00019202 <file.include.bb2@611> XINCLUDE "PE/logging.include.bb2"
00019212 <file.include.bb2@614> XINCLUDE "PE/logging.include.bb2"
000192CE <file.include.bb2@615> XINCLUDE "PE/logging.include.bb2"
0001934E <file.include.bb2@616> XINCLUDE "PE/logging.include.bb2"
0001942E <file.include.bb2@617> XINCLUDE "PE/logging.include.bb2"
00019438 <file.include.bb2@618> XINCLUDE "PE/logging.include.bb2"
0001946C <file.include.bb2@619> XINCLUDE "PE/logging.include.bb2"
0001948A <file.include.bb2@620> XINCLUDE "PE/logging.include.bb2"
00019492 <file.include.bb2@621> XINCLUDE "PE/logging.include.bb2"
00019496 <file.include.bb2@622> XINCLUDE "PE/logging.include.bb2"
0001955A <file.include.bb2@623> XINCLUDE "PE/logging.include.bb2"
0001956A <file.include.bb2@627> XINCLUDE "PE/logging.include.bb2"
0001959E <file.include.bb2@628> XINCLUDE "PE/logging.include.bb2"
000195CE <file.include.bb2@629> XINCLUDE "PE/logging.include.bb2"
0001968A <file.include.bb2@630> XINCLUDE "PE/logging.include.bb2"
0001970A <file.include.bb2@631> XINCLUDE "PE/logging.include.bb2"
0001973E <file.include.bb2@632> XINCLUDE "PE/logging.include.bb2"
0001975C <file.include.bb2@635> XINCLUDE "PE/logging.include.bb2"
00019764 <file.include.bb2@636> XINCLUDE "PE/logging.include.bb2"
00019768 <file.include.bb2@637> XINCLUDE "PE/logging.include.bb2"
0001982C <file.include.bb2@638> XINCLUDE "PE/logging.include.bb2"
0001983C <file.include.bb2@641> XINCLUDE "PE/logging.include.bb2"
000198F8 <file.include.bb2@642> XINCLUDE "PE/logging.include.bb2"
00019978 <file.include.bb2@643> XINCLUDE "PE/logging.include.bb2"
000199AC <file.include.bb2@644> XINCLUDE "PE/logging.include.bb2"
000199CA <file.include.bb2@645> XINCLUDE "PE/logging.include.bb2"
000199D2 <file.include.bb2@646> XINCLUDE "PE/logging.include.bb2"
000199D6 <file.include.bb2@647> XINCLUDE "PE/logging.include.bb2"
00019A9A <file.include.bb2@648> XINCLUDE "PE/logging.include.bb2"
00019A9E <file.include.bb2@651> XINCLUDE "PE/logging.include.bb2"
00019ACC <file.include.bb2@652> XINCLUDE "PE/logging.include.bb2"
00019ACE <file.include.bb2@653> XINCLUDE "PE/logging.include.bb2"
00019AD2 <file.include.bb2@655> XINCLUDE "PE/logging.include.bb2"
00019B5E <file.include.bb2@656> XINCLUDE "PE/logging.include.bb2"
00019B74 <file.include.bb2@659> XINCLUDE "PE/logging.include.bb2"
00019B8A <file.include.bb2@660> XINCLUDE "PE/logging.include.bb2"
00019BF4 <file.include.bb2@661> XINCLUDE "PE/logging.include.bb2"
00019C5E <file.include.bb2@662> XINCLUDE "PE/logging.include.bb2"
00019C7E <file.include.bb2@663> XINCLUDE "PE/logging.include.bb2"
00019C9A <file.include.bb2@664> XINCLUDE "PE/logging.include.bb2"
00019CB8 <file.include.bb2@665> XINCLUDE "PE/logging.include.bb2"
00019CD2 <file.include.bb2@666> XINCLUDE "PE/logging.include.bb2"
00019CDC <file.include.bb2@668> XINCLUDE "PE/logging.include.bb2"
00019CF8 <file.include.bb2@669> XINCLUDE "PE/logging.include.bb2"
00019D12 <file.include.bb2@733> XINCLUDE "PE/logging.include.bb2"
00019DB6 <file.include.bb2@735> XINCLUDE "PE/logging.include.bb2"
00019E12 <file.include.bb2@736> XINCLUDE "PE/logging.include.bb2"
00019E3C <file.include.bb2@737> XINCLUDE "PE/logging.include.bb2"
00019E54 <file.include.bb2@738> XINCLUDE "PE/logging.include.bb2"
00019E6E <file.include.bb2@755> XINCLUDE "PE/logging.include.bb2"
00019EB0 <file.include.bb2@757> XINCLUDE "PE/logging.include.bb2"
00019EB8 <file.include.bb2@758> XINCLUDE "PE/logging.include.bb2"
00019EBE <file.include.bb2@759> XINCLUDE "PE/logging.include.bb2"
00019EE0 <file.include.bb2@805> XINCLUDE "PE/logging.include.bb2"
00019EE6 <file.include.bb2@807> XINCLUDE "PE/logging.include.bb2"
00019F0E <file.include.bb2@808> XINCLUDE "PE/logging.include.bb2"
00019F28 <file.include.bb2@809> XINCLUDE "PE/logging.include.bb2"
00019F3E <file.include.bb2@810> XINCLUDE "PE/logging.include.bb2"
00019F9A <file.include.bb2@811> XINCLUDE "PE/logging.include.bb2"
00019FD2 <file.include.bb2@812> XINCLUDE "PE/logging.include.bb2"
00019FD6 <file.include.bb2@813> XINCLUDE "PE/logging.include.bb2"
0001A022 <file.include.bb2@814> XINCLUDE "PE/logging.include.bb2"
0001A03C <file.include.bb2@815> XINCLUDE "PE/logging.include.bb2"
0001A050 <file.include.bb2@818> XINCLUDE "PE/logging.include.bb2"
0001A056 <file.include.bb2@819> XINCLUDE "PE/logging.include.bb2"
0001A05A <file.include.bb2@820> XINCLUDE "PE/logging.include.bb2"
0001A070 <file.include.bb2@821> XINCLUDE "PE/logging.include.bb2"
0001A150 <file.include.bb2@822> XINCLUDE "PE/logging.include.bb2"
0001A154 <file.include.bb2@823> XINCLUDE "PE/logging.include.bb2"
0001A19A <file.include.bb2@824> XINCLUDE "PE/logging.include.bb2"
0001A1A6 <file.include.bb2@825> XINCLUDE "PE/logging.include.bb2"
0001A214 <file.include.bb2@826> XINCLUDE "PE/logging.include.bb2"
0001A24E <file.include.bb2@827> XINCLUDE "PE/logging.include.bb2"
0001A29A <file.include.bb2@830> XINCLUDE "PE/logging.include.bb2"
0001A306 <file.include.bb2@831> XINCLUDE "PE/logging.include.bb2"
0001A30A <file.include.bb2@832> XINCLUDE "PE/logging.include.bb2"
0001A338 <file.include.bb2@833> XINCLUDE "PE/logging.include.bb2"
0001A33C <file.include.bb2@835> XINCLUDE "PE/logging.include.bb2"
0001A392 <file.include.bb2@836> XINCLUDE "PE/logging.include.bb2"
0001A39C <file.include.bb2@838> XINCLUDE "PE/logging.include.bb2"
0001A3B0 <file.include.bb2@839> XINCLUDE "PE/logging.include.bb2"
0001A3CA <file.include.bb2@841> XINCLUDE "PE/logging.include.bb2"
0001A3D0 <file.include.bb2@843> XINCLUDE "PE/logging.include.bb2"
0001A3F8 <file.include.bb2@844> XINCLUDE "PE/logging.include.bb2"
0001A412 <file.include.bb2@845> XINCLUDE "PE/logging.include.bb2"
0001A46E <file.include.bb2@846> XINCLUDE "PE/logging.include.bb2"
0001A472 <file.include.bb2@849> XINCLUDE "PE/logging.include.bb2"
0001A494 <file.include.bb2@867> XINCLUDE "PE/logging.include.bb2"
0001A49A <file.include.bb2@869> XINCLUDE "PE/logging.include.bb2"
0001A4B4 <file.include.bb2@870> XINCLUDE "PE/logging.include.bb2"
0001A4D2 <file.include.bb2@871> XINCLUDE "PE/logging.include.bb2"
0001A514 <file.include.bb2@872> XINCLUDE "PE/logging.include.bb2"
0001A562 <file.include.bb2@873> XINCLUDE "PE/logging.include.bb2"
0001A598 <file.include.bb2@874> XINCLUDE "PE/logging.include.bb2"
0001A59E <file.include.bb2@875> XINCLUDE "PE/logging.include.bb2"
0001A5A2 <file.include.bb2@876> XINCLUDE "PE/logging.include.bb2"
0001A5D2 <file.include.bb2@877> XINCLUDE "PE/logging.include.bb2"
0001A5D8 <file.include.bb2@878> XINCLUDE "PE/logging.include.bb2"
0001A5DC <file.include.bb2@880> XINCLUDE "PE/logging.include.bb2"
0001A5F2 <file.include.bb2@881> XINCLUDE "PE/logging.include.bb2"
0001A64E <file.include.bb2@882> XINCLUDE "PE/logging.include.bb2"
0001A686 <file.include.bb2@883> XINCLUDE "PE/logging.include.bb2"
0001A68A <file.include.bb2@884> XINCLUDE "PE/logging.include.bb2"
0001A6D6 <file.include.bb2@885> XINCLUDE "PE/logging.include.bb2"
0001A6F0 <file.include.bb2@886> XINCLUDE "PE/logging.include.bb2"
0001A704 <file.include.bb2@888> XINCLUDE "PE/logging.include.bb2"
0001A70A <file.include.bb2@889> XINCLUDE "PE/logging.include.bb2"
0001A70E <file.include.bb2@890> XINCLUDE "PE/logging.include.bb2"
0001A724 <file.include.bb2@891> XINCLUDE "PE/logging.include.bb2"
0001A72A <file.include.bb2@892> XINCLUDE "PE/logging.include.bb2"
0001A72E <file.include.bb2@893> XINCLUDE "PE/logging.include.bb2"
0001A780 <file.include.bb2@894> XINCLUDE "PE/logging.include.bb2"
0001A7CC <file.include.bb2@897> XINCLUDE "PE/logging.include.bb2"
0001A7D6 <file.include.bb2@900> XINCLUDE "PE/logging.include.bb2"
0001A7DC <file.include.bb2@901> XINCLUDE "PE/logging.include.bb2"
0001A7F6 <file.include.bb2@955> XINCLUDE "PE/logging.include.bb2"
0001A7FC <file.include.bb2@957> XINCLUDE "PE/logging.include.bb2"
0001A848 <file.include.bb2@958> XINCLUDE "PE/logging.include.bb2"
0001A88A <file.include.bb2@959> XINCLUDE "PE/logging.include.bb2"
0001A894 <file.include.bb2@960> XINCLUDE "PE/logging.include.bb2"
0001A89A <file.include.bb2@961> XINCLUDE "PE/logging.include.bb2"
0001A8C0 <file.include.bb2@1108> XINCLUDE "PE/logging.include.bb2"
0001A8C6 <file.include.bb2@1110> XINCLUDE "PE/logging.include.bb2"
0001A8EE <file.include.bb2@1111> XINCLUDE "PE/logging.include.bb2"
0001A952 <file.include.bb2@1112> XINCLUDE "PE/logging.include.bb2"
0001A96C <file.include.bb2@1113> XINCLUDE "PE/logging.include.bb2"
0001A976 <file.include.bb2@1114> XINCLUDE "PE/logging.include.bb2"
0001A990 <file.include.bb2@1115> XINCLUDE "PE/logging.include.bb2"
0001A99A <file.include.bb2@1116> XINCLUDE "PE/logging.include.bb2"
0001A9B2 <file.include.bb2@1117> XINCLUDE "PE/logging.include.bb2"
0001A9E2 <file.include.bb2@1118> XINCLUDE "PE/logging.include.bb2"
0001A9FE <file.include.bb2@1119> XINCLUDE "PE/logging.include.bb2"
0001AA0E <file.include.bb2@1120> XINCLUDE "PE/logging.include.bb2"
0001AA12 <file.include.bb2@1123> XINCLUDE "PE/logging.include.bb2"
0001AA40 <file.include.bb2@1124> XINCLUDE "PE/logging.include.bb2"
0001AA4A <file.include.bb2@1126> XINCLUDE "PE/logging.include.bb2"
0001AA50 <file.include.bb2@1127> XINCLUDE "PE/logging.include.bb2"
0001AA6E <file.include.bb2@1148> XINCLUDE "PE/logging.include.bb2"
0001AA74 <file.include.bb2@1150> XINCLUDE "PE/logging.include.bb2"
0001AA8A <file.include.bb2@1151> XINCLUDE "PE/logging.include.bb2"
0001AA9A <file.include.bb2@1152> XINCLUDE "PE/logging.include.bb2"
0001AABE <file.include.bb2@1153> XINCLUDE "PE/logging.include.bb2"
0001AAF4 <file.include.bb2@1154> XINCLUDE "PE/logging.include.bb2"
0001AB0A <file.include.bb2@1155> XINCLUDE "PE/logging.include.bb2"
0001AB58 <file.include.bb2@1156> XINCLUDE "PE/logging.include.bb2"
0001AC36 <file.include.bb2@1157> XINCLUDE "PE/logging.include.bb2"
0001AC54 <file.include.bb2@1158> XINCLUDE "PE/logging.include.bb2"
0001AC7E <file.include.bb2@1160> XINCLUDE "PE/logging.include.bb2"
0001AC9A <file.include.bb2@1161> XINCLUDE "PE/logging.include.bb2"
0001ACC8 <file.include.bb2@1162> XINCLUDE "PE/logging.include.bb2"
0001ACD2 <file.include.bb2@1163> XINCLUDE "PE/logging.include.bb2"
0001ACFE <file.include.bb2@1164> XINCLUDE "PE/logging.include.bb2"
0001AD18 <file.include.bb2@1165> XINCLUDE "PE/logging.include.bb2"
0001AD34 <file.include.bb2@1166> XINCLUDE "PE/logging.include.bb2"
0001AD38 <file.include.bb2@1167> XINCLUDE "PE/logging.include.bb2"
0001AD66 <file.include.bb2@1168> XINCLUDE "PE/logging.include.bb2"
0001AD6A <file.include.bb2@1170> XINCLUDE "PE/logging.include.bb2"
0001AD70 <file.include.bb2@1171> XINCLUDE "PE/logging.include.bb2"
0001AD74 <file.include.bb2@1173> XINCLUDE "PE/logging.include.bb2"
0001AE08 <file.include.bb2@1174> XINCLUDE "PE/logging.include.bb2"
0001AE0C <file.include.bb2@1176> XINCLUDE "PE/logging.include.bb2"
0001AEA2 <file.include.bb2@1177> XINCLUDE "PE/logging.include.bb2"
0001AEA6 <file.include.bb2@1179> XINCLUDE "PE/logging.include.bb2"
0001AED4 <file.include.bb2@1180> XINCLUDE "PE/logging.include.bb2"
0001AEDE <file.include.bb2@1182> XINCLUDE "PE/logging.include.bb2"
0001AEE4 <file.include.bb2@1183> XINCLUDE "PE/logging.include.bb2"
0001AEFE <file.include.bb2@1245> XINCLUDE "PE/logging.include.bb2"
0001AF1C <file.include.bb2@1247> XINCLUDE "PE/logging.include.bb2"
0001AF22 <file.include.bb2@1248> XINCLUDE "PE/logging.include.bb2"
0001AF3C <file.include.bb2@1398> XINCLUDE "PE/logging.include.bb2"
0001AF5A <file.include.bb2@1400> XINCLUDE "PE/logging.include.bb2"
0001B018 <file.include.bb2@1401> XINCLUDE "PE/logging.include.bb2"
0001B020 <file.include.bb2@1402> XINCLUDE "PE/logging.include.bb2"
0001B024 <file.include.bb2@1403> XINCLUDE "PE/logging.include.bb2"
0001B054 <file.include.bb2@1404> XINCLUDE "PE/logging.include.bb2"
0001B060 <file.include.bb2@1406> XINCLUDE "PE/logging.include.bb2"
0001B066 <file.include.bb2@1407> XINCLUDE "PE/logging.include.bb2"
0001B080 <file.include.bb2@1423> XINCLUDE "PE/logging.include.bb2"
0001B09E <file.include.bb2@1425> XINCLUDE "PE/logging.include.bb2"
0001B15A <file.include.bb2@1426> XINCLUDE "PE/logging.include.bb2"
0001B164 <file.include.bb2@1427> XINCLUDE "PE/logging.include.bb2"
0001B168 <file.include.bb2@1428> XINCLUDE "PE/logging.include.bb2"
0001B19A <file.include.bb2@1429> XINCLUDE "PE/logging.include.bb2"
0001B1A4 <file.include.bb2@1431> XINCLUDE "PE/logging.include.bb2"
0001B1AA <file.include.bb2@1432> XINCLUDE "PE/logging.include.bb2"
0001B1C4 <file.include.bb2@1593> XINCLUDE "PE/logging.include.bb2"
0001B1CE <file.include.bb2@1594> XINCLUDE "PE/logging.include.bb2"
0001B1D8 <file.include.bb2@1595> XINCLUDE "PE/logging.include.bb2"
0001B1EE <file.include.bb2@1596> XINCLUDE "PE/logging.include.bb2"
0001B204 <file.include.bb2@1597> XINCLUDE "PE/logging.include.bb2"
0001B214 <file.include.bb2@1598> XINCLUDE "PE/logging.include.bb2"
0001B220 <file.include.bb2@1599> XINCLUDE "PE/logging.include.bb2"
0001B224 <file.include.bb2@1600> XINCLUDE "PE/logging.include.bb2"
0001B22E <file.include.bb2@1601> XINCLUDE "PE/logging.include.bb2"
0001B270 <file.include.bb2@1602> XINCLUDE "PE/logging.include.bb2"
0001B286 <file.include.bb2@1603> XINCLUDE "PE/logging.include.bb2"
0001B2AA <file.include.bb2@1604> XINCLUDE "PE/logging.include.bb2"
0001B2C0 <file.include.bb2@1605> XINCLUDE "PE/logging.include.bb2"
0001B2CC <file.include.bb2@1606> XINCLUDE "PE/logging.include.bb2"
0001B2D0 <file.include.bb2@1607> XINCLUDE "PE/logging.include.bb2"
0001B2E0 <file.include.bb2@1608> XINCLUDE "PE/logging.include.bb2"
0001B302 <file.include.bb2@1613> XINCLUDE "PE/logging.include.bb2"
0001B318 <file.include.bb2@1616> XINCLUDE "PE/logging.include.bb2"
0001B364 <file.include.bb2@1617> XINCLUDE "PE/logging.include.bb2"
0001B368 <file.include.bb2@1619> XINCLUDE "PE/logging.include.bb2"
0001B392 <file.include.bb2@1621> XINCLUDE "PE/logging.include.bb2"
0001B3AA <file.include.bb2@1622> XINCLUDE "PE/logging.include.bb2"
0001B3D8 <file.include.bb2@1682> XINCLUDE "PE/logging.include.bb2"
0001B3EC <file.include.bb2@1683> XINCLUDE "PE/logging.include.bb2"
0001B404 <file.include.bb2@1684> XINCLUDE "PE/logging.include.bb2"
0001B426 <file.include.bb2@1685> XINCLUDE "PE/logging.include.bb2"
0001B43E <file.include.bb2@1686> XINCLUDE "PE/logging.include.bb2"
0001B448 <file.include.bb2@1687> XINCLUDE "PE/logging.include.bb2"
0001B462 <file.include.bb2@1688> XINCLUDE "PE/logging.include.bb2"
0001B484 <file.include.bb2@1763> XINCLUDE "PE/logging.include.bb2"
0001B49C <file.include.bb2@1765> XINCLUDE "PE/logging.include.bb2"
0001B4BE <file.include.bb2@1766> XINCLUDE "PE/logging.include.bb2"
0001B4C4 <file.include.bb2@1767> XINCLUDE "PE/logging.include.bb2"
0001B4F6 <file.include.bb2@1787> XINCLUDE "PE/logging.include.bb2"
0001B50A <file.include.bb2@1789> XINCLUDE "PE/logging.include.bb2"
0001B522 <file.include.bb2@1790> XINCLUDE "PE/logging.include.bb2"
0001B53A <file.include.bb2@1791> XINCLUDE "PE/logging.include.bb2"
0001B55A <file.include.bb2@1792> XINCLUDE "PE/logging.include.bb2"
0001B58C <file.include.bb2@1793> XINCLUDE "PE/logging.include.bb2"
0001B5BE <file.include.bb2@1794> XINCLUDE "PE/logging.include.bb2"
0001B5D4 <file.include.bb2@1795> XINCLUDE "PE/logging.include.bb2"
0001B5DE <file.include.bb2@1796> XINCLUDE "PE/logging.include.bb2"
0001B608 <file.include.bb2@1797> XINCLUDE "PE/logging.include.bb2"
0001B612 <file.include.bb2@1799> XINCLUDE "PE/logging.include.bb2"
0001B62C <file.include.bb2@1800> XINCLUDE "PE/logging.include.bb2"
0001B646 <file.include.bb2@1817> XINCLUDE "PE/logging.include.bb2"
0001B664 <file.include.bb2@1819> XINCLUDE "PE/logging.include.bb2"
0001B688 <file.include.bb2@1820> XINCLUDE "PE/logging.include.bb2"
0001B6D2 <file.include.bb2@1821> XINCLUDE "PE/logging.include.bb2"
0001B6EC <file.include.bb2@1822> XINCLUDE "PE/logging.include.bb2"
0001B6FE <file.include.bb2@1823> XINCLUDE "PE/logging.include.bb2"
0001B736 <file.include.bb2@1824> XINCLUDE "PE/logging.include.bb2"
0001B74C <file.include.bb2@1825> XINCLUDE "PE/logging.include.bb2"
0001B756 <file.include.bb2@1826> XINCLUDE "PE/logging.include.bb2"
0001B77E <file.include.bb2@1827> XINCLUDE "PE/logging.include.bb2"
0001B782 <file.include.bb2@1829> XINCLUDE "PE/logging.include.bb2"
0001B7AA <file.include.bb2@1830> XINCLUDE "PE/logging.include.bb2"
0001B7BA <file.include.bb2@1832> XINCLUDE "PE/logging.include.bb2"
0001B7CE <file.include.bb2@1833> XINCLUDE "PE/logging.include.bb2"
0001B7E4 <file.include.bb2@1846> XINCLUDE "PE/logging.include.bb2"
0001B7F4 <file.include.bb2@1848> XINCLUDE "PE/logging.include.bb2"
0001B7F8 <file.include.bb2@1849> XINCLUDE "PE/logging.include.bb2"
0001B80E <file.include.bb2@1870> XINCLUDE "PE/logging.include.bb2"
0001B838 <file.include.bb2@1872> XINCLUDE "PE/logging.include.bb2"
0001B840 <file.include.bb2@1873> XINCLUDE "PE/logging.include.bb2"
0001B840 <logging.include.bb2@8> XINCLUDE "PE/logging.include.bb2"
0001B8DE <logging.include.bb2@30> XINCLUDE "PE/logging.include.bb2"
0001B8E6 <logging.include.bb2@31> XINCLUDE "PE/logging.include.bb2"
0001B8EE <logging.include.bb2@32> XINCLUDE "PE/logging.include.bb2"
0001B8F6 <logging.include.bb2@33> XINCLUDE "PE/logging.include.bb2"
0001B90C <logging.include.bb2@107> XINCLUDE "PE/logging.include.bb2"
0001B916 <logging.include.bb2@110> XINCLUDE "PE/logging.include.bb2"
0001B98C <logging.include.bb2@111> XINCLUDE "PE/logging.include.bb2"
0001B9B0 <logging.include.bb2@112> XINCLUDE "PE/logging.include.bb2"
0001BA5A <logging.include.bb2@113> XINCLUDE "PE/logging.include.bb2"
0001BA7E <logging.include.bb2@114> XINCLUDE "PE/logging.include.bb2"
0001BA84 <logging.include.bb2@115> XINCLUDE "PE/logging.include.bb2"
0001BAAC <logging.include.bb2@116> XINCLUDE "PE/logging.include.bb2"
0001BB08 <logging.include.bb2@117> XINCLUDE "PE/logging.include.bb2"
0001BB8A <logging.include.bb2@118> XINCLUDE "PE/logging.include.bb2"
0001BB8C <logging.include.bb2@119> XINCLUDE "PE/logging.include.bb2"
0001BBA4 <logging.include.bb2@120> XINCLUDE "PE/logging.include.bb2"
0001BBDE <logging.include.bb2@124> XINCLUDE "PE/logging.include.bb2"
0001BC10 <logging.include.bb2@126> XINCLUDE "PE/logging.include.bb2"
0001BC24 <logging.include.bb2@127> XINCLUDE "PE/logging.include.bb2"
0001BC56 <logging.include.bb2@128> XINCLUDE "PE/logging.include.bb2"
0001BFD8 <logging.include.bb2@129> XINCLUDE "PE/logging.include.bb2"
0001BFE6 <logging.include.bb2@130> XINCLUDE "PE/logging.include.bb2"
0001BFEA <logging.include.bb2@131> XINCLUDE "PE/logging.include.bb2"
0001C28C <logging.include.bb2@132> XINCLUDE "PE/logging.include.bb2"
0001C2A6 <logging.include.bb2@134> XINCLUDE "PE/logging.include.bb2"
0001C2E0 <logging.include.bb2@137> XINCLUDE "PE/logging.include.bb2"
0001C332 <logging.include.bb2@138> XINCLUDE "PE/logging.include.bb2"
0001C346 <logging.include.bb2@139> XINCLUDE "PE/logging.include.bb2"
0001C39C <logging.include.bb2@140> XINCLUDE "PE/logging.include.bb2"
0001C3A0 <logging.include.bb2@141> XINCLUDE "PE/logging.include.bb2"
0001C41C <logging.include.bb2@142> XINCLUDE "PE/logging.include.bb2"
0001C490 <logging.include.bb2@143> XINCLUDE "PE/logging.include.bb2"
0001C4AA <logging.include.bb2@145> XINCLUDE "PE/logging.include.bb2"
0001C4AA <AmiBlitz3.ab2@95> XINCLUDE "PE/logging.include.bb2"
0001C4B6 <AmiBlitz3.ab2@96> optimize 5                               ; added because the include change the optimize and or syntax level  tomsmart1
0001C4B6 <translation.include.bb2@1> XINCLUDE "translation.include.bb2"
0001C4B6 <phrasebook.include.bb2@1> XINCLUDE "translation.include.bb2"
0001C4B6 <prefixtree.include.bb2@1> XINCLUDE "translation.include.bb2"
0001C4B6 <dynamicarray.include.bb2@1> XINCLUDE "translation.include.bb2"
0001C4DE <dynamicarray.include.bb2@42> XINCLUDE "translation.include.bb2"
0001C4F8 <dynamicarray.include.bb2@55> XINCLUDE "translation.include.bb2"
0001C502 <dynamicarray.include.bb2@56> XINCLUDE "translation.include.bb2"
0001C514 <dynamicarray.include.bb2@57> XINCLUDE "translation.include.bb2"
0001C538 <dynamicarray.include.bb2@58> XINCLUDE "translation.include.bb2"
0001C546 <dynamicarray.include.bb2@60> XINCLUDE "translation.include.bb2"
0001C552 <dynamicarray.include.bb2@61> XINCLUDE "translation.include.bb2"
0001C556 <dynamicarray.include.bb2@63> XINCLUDE "translation.include.bb2"
0001C570 <dynamicarray.include.bb2@76> XINCLUDE "translation.include.bb2"
0001C57A <dynamicarray.include.bb2@77> XINCLUDE "translation.include.bb2"
0001C586 <dynamicarray.include.bb2@78> XINCLUDE "translation.include.bb2"
0001C58A <dynamicarray.include.bb2@80> XINCLUDE "translation.include.bb2"
0001C5A8 <dynamicarray.include.bb2@99> XINCLUDE "translation.include.bb2"
0001C5C2 <dynamicarray.include.bb2@101> XINCLUDE "translation.include.bb2"
0001C5E2 <dynamicarray.include.bb2@102> XINCLUDE "translation.include.bb2"
0001C5EC <dynamicarray.include.bb2@103> XINCLUDE "translation.include.bb2"
0001C5FA <dynamicarray.include.bb2@104> XINCLUDE "translation.include.bb2"
0001C606 <dynamicarray.include.bb2@105> XINCLUDE "translation.include.bb2"
0001C614 <dynamicarray.include.bb2@106> XINCLUDE "translation.include.bb2"
0001C620 <dynamicarray.include.bb2@107> XINCLUDE "translation.include.bb2"
0001C62C <dynamicarray.include.bb2@108> XINCLUDE "translation.include.bb2"
0001C63E <dynamicarray.include.bb2@109> XINCLUDE "translation.include.bb2"
0001C64E <dynamicarray.include.bb2@110> XINCLUDE "translation.include.bb2"
0001C658 <dynamicarray.include.bb2@113> XINCLUDE "translation.include.bb2"
0001C65E <dynamicarray.include.bb2@114> XINCLUDE "translation.include.bb2"
0001C67C <dynamicarray.include.bb2@156> XINCLUDE "translation.include.bb2"
0001C686 <dynamicarray.include.bb2@157> XINCLUDE "translation.include.bb2"
0001C6A8 <dynamicarray.include.bb2@158> XINCLUDE "translation.include.bb2"
0001C6B6 <dynamicarray.include.bb2@159> XINCLUDE "translation.include.bb2"
0001C6DE <dynamicarray.include.bb2@160> XINCLUDE "translation.include.bb2"
0001C710 <dynamicarray.include.bb2@161> XINCLUDE "translation.include.bb2"
0001C71A <dynamicarray.include.bb2@162> XINCLUDE "translation.include.bb2"
0001C72C <dynamicarray.include.bb2@163> XINCLUDE "translation.include.bb2"
0001C760 <dynamicarray.include.bb2@164> XINCLUDE "translation.include.bb2"
0001C776 <dynamicarray.include.bb2@165> XINCLUDE "translation.include.bb2"
0001C782 <dynamicarray.include.bb2@167> XINCLUDE "translation.include.bb2"
0001C790 <dynamicarray.include.bb2@168> XINCLUDE "translation.include.bb2"
0001C79C <dynamicarray.include.bb2@171> XINCLUDE "translation.include.bb2"
0001C7A2 <dynamicarray.include.bb2@172> XINCLUDE "translation.include.bb2"
0001C7C0 <dynamicarray.include.bb2@231> XINCLUDE "translation.include.bb2"
0001C7D6 <dynamicarray.include.bb2@233> XINCLUDE "translation.include.bb2"
0001C7F8 <dynamicarray.include.bb2@234> XINCLUDE "translation.include.bb2"
0001C81C <dynamicarray.include.bb2@235> XINCLUDE "translation.include.bb2"
0001C828 <dynamicarray.include.bb2@237> XINCLUDE "translation.include.bb2"
0001C82E <dynamicarray.include.bb2@238> XINCLUDE "translation.include.bb2"
0001C850 <dynamicarray.include.bb2@281> XINCLUDE "translation.include.bb2"
0001C85A <dynamicarray.include.bb2@282> XINCLUDE "translation.include.bb2"
0001C87C <dynamicarray.include.bb2@283> XINCLUDE "translation.include.bb2"
0001C88E <dynamicarray.include.bb2@284> XINCLUDE "translation.include.bb2"
0001C8B0 <dynamicarray.include.bb2@285> XINCLUDE "translation.include.bb2"
0001C8D2 <dynamicarray.include.bb2@286> XINCLUDE "translation.include.bb2"
0001C8FA <dynamicarray.include.bb2@287> XINCLUDE "translation.include.bb2"
0001C920 <dynamicarray.include.bb2@288> XINCLUDE "translation.include.bb2"
0001C92A <dynamicarray.include.bb2@290> XINCLUDE "translation.include.bb2"
0001C936 <dynamicarray.include.bb2@293> XINCLUDE "translation.include.bb2"
0001C93C <dynamicarray.include.bb2@294> XINCLUDE "translation.include.bb2"
0001C95E <dynamicarray.include.bb2@335> XINCLUDE "translation.include.bb2"
0001C968 <dynamicarray.include.bb2@336> XINCLUDE "translation.include.bb2"
0001C98E <dynamicarray.include.bb2@337> XINCLUDE "translation.include.bb2"
0001C9A6 <dynamicarray.include.bb2@338> XINCLUDE "translation.include.bb2"
0001C9E4 <dynamicarray.include.bb2@339> XINCLUDE "translation.include.bb2"
0001CA44 <dynamicarray.include.bb2@340> XINCLUDE "translation.include.bb2"
0001CA54 <dynamicarray.include.bb2@341> XINCLUDE "translation.include.bb2"
0001CA66 <dynamicarray.include.bb2@342> XINCLUDE "translation.include.bb2"
0001CA7E <dynamicarray.include.bb2@345> XINCLUDE "translation.include.bb2"
0001CA8A <dynamicarray.include.bb2@347> XINCLUDE "translation.include.bb2"
0001CA90 <dynamicarray.include.bb2@348> XINCLUDE "translation.include.bb2"
0001CAAA <dynamicarray.include.bb2@425> XINCLUDE "translation.include.bb2"
0001CAB4 <dynamicarray.include.bb2@427> XINCLUDE "translation.include.bb2"
0001CABE <dynamicarray.include.bb2@428> XINCLUDE "translation.include.bb2"
0001CACE <dynamicarray.include.bb2@429> XINCLUDE "translation.include.bb2"
0001CAD8 <dynamicarray.include.bb2@430> XINCLUDE "translation.include.bb2"
0001CAEA <dynamicarray.include.bb2@431> XINCLUDE "translation.include.bb2"
0001CB00 <dynamicarray.include.bb2@432> XINCLUDE "translation.include.bb2"
0001CB0A <dynamicarray.include.bb2@433> XINCLUDE "translation.include.bb2"
0001CB10 <dynamicarray.include.bb2@435> XINCLUDE "translation.include.bb2"
0001CB14 <dynamicarray.include.bb2@437> XINCLUDE "translation.include.bb2"
0001CB2A <dynamicarray.include.bb2@531> XINCLUDE "translation.include.bb2"
0001CB30 <dynamicarray.include.bb2@533> XINCLUDE "translation.include.bb2"
0001CB3A <dynamicarray.include.bb2@535> XINCLUDE "translation.include.bb2"
0001CB70 <dynamicarray.include.bb2@536> XINCLUDE "translation.include.bb2"
0001CB7A <dynamicarray.include.bb2@537> XINCLUDE "translation.include.bb2"
0001CB7E <dynamicarray.include.bb2@538> XINCLUDE "translation.include.bb2"
0001CBAC <dynamicarray.include.bb2@539> XINCLUDE "translation.include.bb2"
0001CBAC <prefixtree.include.bb2@35> XINCLUDE "translation.include.bb2"
0001CBC6 <prefixtree.include.bb2@100> XINCLUDE "translation.include.bb2"
0001CBD0 <prefixtree.include.bb2@101> XINCLUDE "translation.include.bb2"
0001CBF8 <prefixtree.include.bb2@102> XINCLUDE "translation.include.bb2"
0001CC1A <prefixtree.include.bb2@103> XINCLUDE "translation.include.bb2"
0001CC36 <prefixtree.include.bb2@104> XINCLUDE "translation.include.bb2"
0001CC46 <prefixtree.include.bb2@105> XINCLUDE "translation.include.bb2"
0001CC4A <prefixtree.include.bb2@107> XINCLUDE "translation.include.bb2"
0001CC64 <prefixtree.include.bb2@123> XINCLUDE "translation.include.bb2"
0001CC84 <prefixtree.include.bb2@124> XINCLUDE "translation.include.bb2"
0001CC8E <prefixtree.include.bb2@125> XINCLUDE "translation.include.bb2"
0001CCA8 <prefixtree.include.bb2@126> XINCLUDE "translation.include.bb2"
0001CCB6 <prefixtree.include.bb2@127> XINCLUDE "translation.include.bb2"
0001CCC4 <prefixtree.include.bb2@128> XINCLUDE "translation.include.bb2"
0001CCD2 <prefixtree.include.bb2@129> XINCLUDE "translation.include.bb2"
0001CCE0 <prefixtree.include.bb2@130> XINCLUDE "translation.include.bb2"
0001CCEC <prefixtree.include.bb2@131> XINCLUDE "translation.include.bb2"
0001CCFA <prefixtree.include.bb2@132> XINCLUDE "translation.include.bb2"
0001CD08 <prefixtree.include.bb2@133> XINCLUDE "translation.include.bb2"
0001CD16 <prefixtree.include.bb2@134> XINCLUDE "translation.include.bb2"
0001CD24 <prefixtree.include.bb2@135> XINCLUDE "translation.include.bb2"
0001CD3E <prefixtree.include.bb2@136> XINCLUDE "translation.include.bb2"
0001CD4C <prefixtree.include.bb2@137> XINCLUDE "translation.include.bb2"
0001CD5C <prefixtree.include.bb2@138> XINCLUDE "translation.include.bb2"
0001CD6C <prefixtree.include.bb2@139> XINCLUDE "translation.include.bb2"
0001CD7C <prefixtree.include.bb2@140> XINCLUDE "translation.include.bb2"
0001CD8A <prefixtree.include.bb2@141> XINCLUDE "translation.include.bb2"
0001CD94 <prefixtree.include.bb2@143> XINCLUDE "translation.include.bb2"
0001CD9A <prefixtree.include.bb2@144> XINCLUDE "translation.include.bb2"
0001CDB8 <prefixtree.include.bb2@162> XINCLUDE "translation.include.bb2"
0001CDBE <prefixtree.include.bb2@163> XINCLUDE "translation.include.bb2"
0001CDC8 <prefixtree.include.bb2@164> XINCLUDE "translation.include.bb2"
0001CDE8 <prefixtree.include.bb2@165> XINCLUDE "translation.include.bb2"
0001CE16 <prefixtree.include.bb2@166> XINCLUDE "translation.include.bb2"
0001CE34 <prefixtree.include.bb2@167> XINCLUDE "translation.include.bb2"
0001CE3E <prefixtree.include.bb2@168> XINCLUDE "translation.include.bb2"
0001CE50 <prefixtree.include.bb2@169> XINCLUDE "translation.include.bb2"
0001CE7C <prefixtree.include.bb2@170> XINCLUDE "translation.include.bb2"
0001CE92 <prefixtree.include.bb2@171> XINCLUDE "translation.include.bb2"
0001CE9E <prefixtree.include.bb2@173> XINCLUDE "translation.include.bb2"
0001CEAA <prefixtree.include.bb2@174> XINCLUDE "translation.include.bb2"
0001CEB0 <prefixtree.include.bb2@175> XINCLUDE "translation.include.bb2"
0001CEB6 <prefixtree.include.bb2@176> XINCLUDE "translation.include.bb2"
0001CEBC <prefixtree.include.bb2@177> XINCLUDE "translation.include.bb2"
0001CEC2 <prefixtree.include.bb2@179> XINCLUDE "translation.include.bb2"
0001CEC8 <prefixtree.include.bb2@180> XINCLUDE "translation.include.bb2"
0001CED2 <prefixtree.include.bb2@183> XINCLUDE "translation.include.bb2"
0001CED8 <prefixtree.include.bb2@184> XINCLUDE "translation.include.bb2"
0001CF0A <prefixtree.include.bb2@204> XINCLUDE "translation.include.bb2"
0001CF24 <prefixtree.include.bb2@205> XINCLUDE "translation.include.bb2"
0001CF3C <prefixtree.include.bb2@206> XINCLUDE "translation.include.bb2"
0001CF50 <prefixtree.include.bb2@207> XINCLUDE "translation.include.bb2"
0001CFA0 <prefixtree.include.bb2@208> XINCLUDE "translation.include.bb2"
0001CFC0 <prefixtree.include.bb2@210> XINCLUDE "translation.include.bb2"
0001CFD4 <prefixtree.include.bb2@211> XINCLUDE "translation.include.bb2"
0001CFE2 <prefixtree.include.bb2@212> XINCLUDE "translation.include.bb2"
0001CFEE <prefixtree.include.bb2@213> XINCLUDE "translation.include.bb2"
0001CFF6 <prefixtree.include.bb2@214> XINCLUDE "translation.include.bb2"
0001CFFE <prefixtree.include.bb2@215> XINCLUDE "translation.include.bb2"
0001D006 <prefixtree.include.bb2@216> XINCLUDE "translation.include.bb2"
0001D00E <prefixtree.include.bb2@217> XINCLUDE "translation.include.bb2"
0001D014 <prefixtree.include.bb2@218> XINCLUDE "translation.include.bb2"
0001D022 <prefixtree.include.bb2@219> XINCLUDE "translation.include.bb2"
0001D044 <prefixtree.include.bb2@221> XINCLUDE "translation.include.bb2"
0001D070 <prefixtree.include.bb2@222> XINCLUDE "translation.include.bb2"
0001D082 <prefixtree.include.bb2@224> XINCLUDE "translation.include.bb2"
0001D088 <prefixtree.include.bb2@225> XINCLUDE "translation.include.bb2"
0001D0B0 <prefixtree.include.bb2@227> XINCLUDE "translation.include.bb2"
0001D0D4 <prefixtree.include.bb2@228> XINCLUDE "translation.include.bb2"
0001D0FC <prefixtree.include.bb2@229> XINCLUDE "translation.include.bb2"
0001D130 <prefixtree.include.bb2@230> XINCLUDE "translation.include.bb2"
0001D140 <prefixtree.include.bb2@231> XINCLUDE "translation.include.bb2"
0001D14A <prefixtree.include.bb2@232> XINCLUDE "translation.include.bb2"
0001D158 <prefixtree.include.bb2@233> XINCLUDE "translation.include.bb2"
0001D16C <prefixtree.include.bb2@234> XINCLUDE "translation.include.bb2"
0001D172 <prefixtree.include.bb2@235> XINCLUDE "translation.include.bb2"
0001D192 <prefixtree.include.bb2@236> XINCLUDE "translation.include.bb2"
0001D198 <prefixtree.include.bb2@237> XINCLUDE "translation.include.bb2"
0001D1A0 <prefixtree.include.bb2@239> XINCLUDE "translation.include.bb2"
0001D1DA <prefixtree.include.bb2@241> XINCLUDE "translation.include.bb2"
0001D200 <prefixtree.include.bb2@242> XINCLUDE "translation.include.bb2"
0001D218 <prefixtree.include.bb2@243> XINCLUDE "translation.include.bb2"
0001D24C <prefixtree.include.bb2@244> XINCLUDE "translation.include.bb2"
0001D254 <prefixtree.include.bb2@245> XINCLUDE "translation.include.bb2"
0001D262 <prefixtree.include.bb2@247> XINCLUDE "translation.include.bb2"
0001D268 <prefixtree.include.bb2@249> XINCLUDE "translation.include.bb2"
0001D280 <prefixtree.include.bb2@250> XINCLUDE "translation.include.bb2"
0001D286 <prefixtree.include.bb2@251> XINCLUDE "translation.include.bb2"
0001D28C <prefixtree.include.bb2@252> XINCLUDE "translation.include.bb2"
0001D2A6 <prefixtree.include.bb2@253> XINCLUDE "translation.include.bb2"
0001D2AC <prefixtree.include.bb2@256> XINCLUDE "translation.include.bb2"
0001D2B2 <prefixtree.include.bb2@258> XINCLUDE "translation.include.bb2"
0001D2B8 <prefixtree.include.bb2@260> XINCLUDE "translation.include.bb2"
0001D2C6 <prefixtree.include.bb2@261> XINCLUDE "translation.include.bb2"
0001D2D4 <prefixtree.include.bb2@262> XINCLUDE "translation.include.bb2"
0001D30E <prefixtree.include.bb2@264> XINCLUDE "translation.include.bb2"
0001D334 <prefixtree.include.bb2@265> XINCLUDE "translation.include.bb2"
0001D34C <prefixtree.include.bb2@266> XINCLUDE "translation.include.bb2"
0001D358 <prefixtree.include.bb2@269> XINCLUDE "translation.include.bb2"
0001D364 <prefixtree.include.bb2@270> XINCLUDE "translation.include.bb2"
0001D370 <prefixtree.include.bb2@271> XINCLUDE "translation.include.bb2"
0001D37C <prefixtree.include.bb2@272> XINCLUDE "translation.include.bb2"
0001D388 <prefixtree.include.bb2@273> XINCLUDE "translation.include.bb2"
0001D392 <prefixtree.include.bb2@274> XINCLUDE "translation.include.bb2"
0001D39A <prefixtree.include.bb2@276> XINCLUDE "translation.include.bb2"
0001D3B4 <prefixtree.include.bb2@277> XINCLUDE "translation.include.bb2"
0001D3F2 <prefixtree.include.bb2@324> XINCLUDE "translation.include.bb2"
0001D3F8 <prefixtree.include.bb2@325> XINCLUDE "translation.include.bb2"
0001D438 <prefixtree.include.bb2@326> XINCLUDE "translation.include.bb2"
0001D48E <prefixtree.include.bb2@327> XINCLUDE "translation.include.bb2"
0001D500 <prefixtree.include.bb2@328> XINCLUDE "translation.include.bb2"
0001D50C <prefixtree.include.bb2@330> XINCLUDE "translation.include.bb2"
0001D51A <prefixtree.include.bb2@331> XINCLUDE "translation.include.bb2"
0001D560 <prefixtree.include.bb2@332> XINCLUDE "translation.include.bb2"
0001D5AA <prefixtree.include.bb2@333> XINCLUDE "translation.include.bb2"
0001D5E2 <prefixtree.include.bb2@334> XINCLUDE "translation.include.bb2"
0001D636 <prefixtree.include.bb2@335> XINCLUDE "translation.include.bb2"
0001D63C <prefixtree.include.bb2@336> XINCLUDE "translation.include.bb2"
0001D642 <prefixtree.include.bb2@337> XINCLUDE "translation.include.bb2"
0001D650 <prefixtree.include.bb2@339> XINCLUDE "translation.include.bb2"
0001D658 <prefixtree.include.bb2@340> XINCLUDE "translation.include.bb2"
0001D692 <prefixtree.include.bb2@342> XINCLUDE "translation.include.bb2"
0001D6B8 <prefixtree.include.bb2@343> XINCLUDE "translation.include.bb2"
0001D6D0 <prefixtree.include.bb2@344> XINCLUDE "translation.include.bb2"
0001D706 <prefixtree.include.bb2@345> XINCLUDE "translation.include.bb2"
0001D71C <prefixtree.include.bb2@346> XINCLUDE "translation.include.bb2"
0001D72A <prefixtree.include.bb2@348> XINCLUDE "translation.include.bb2"
0001D742 <prefixtree.include.bb2@349> XINCLUDE "translation.include.bb2"
0001D77A <prefixtree.include.bb2@350> XINCLUDE "translation.include.bb2"
0001D7A0 <prefixtree.include.bb2@351> XINCLUDE "translation.include.bb2"
0001D7E8 <prefixtree.include.bb2@352> XINCLUDE "translation.include.bb2"
0001D7EE <prefixtree.include.bb2@353> XINCLUDE "translation.include.bb2"
0001D808 <prefixtree.include.bb2@355> XINCLUDE "translation.include.bb2"
0001D814 <prefixtree.include.bb2@356> XINCLUDE "translation.include.bb2"
0001D81A <prefixtree.include.bb2@357> XINCLUDE "translation.include.bb2"
0001D846 <prefixtree.include.bb2@358> XINCLUDE "translation.include.bb2"
0001D85A <prefixtree.include.bb2@363> XINCLUDE "translation.include.bb2"
0001D868 <prefixtree.include.bb2@365> XINCLUDE "translation.include.bb2"
0001D870 <prefixtree.include.bb2@366> XINCLUDE "translation.include.bb2"
0001D8AA <prefixtree.include.bb2@368> XINCLUDE "translation.include.bb2"
0001D8D0 <prefixtree.include.bb2@369> XINCLUDE "translation.include.bb2"
0001D8E8 <prefixtree.include.bb2@370> XINCLUDE "translation.include.bb2"
0001D922 <prefixtree.include.bb2@371> XINCLUDE "translation.include.bb2"
0001D94C <prefixtree.include.bb2@372> XINCLUDE "translation.include.bb2"
0001D964 <prefixtree.include.bb2@373> XINCLUDE "translation.include.bb2"
0001D994 <prefixtree.include.bb2@374> XINCLUDE "translation.include.bb2"
0001D9C0 <prefixtree.include.bb2@375> XINCLUDE "translation.include.bb2"
0001D9DC <prefixtree.include.bb2@376> XINCLUDE "translation.include.bb2"
0001D9EA <prefixtree.include.bb2@378> XINCLUDE "translation.include.bb2"
0001D9F8 <prefixtree.include.bb2@379> XINCLUDE "translation.include.bb2"
0001DA36 <prefixtree.include.bb2@380> XINCLUDE "translation.include.bb2"
0001DA72 <prefixtree.include.bb2@381> XINCLUDE "translation.include.bb2"
0001DADE <prefixtree.include.bb2@382> XINCLUDE "translation.include.bb2"
0001DB0C <prefixtree.include.bb2@383> XINCLUDE "translation.include.bb2"
0001DB3A <prefixtree.include.bb2@384> XINCLUDE "translation.include.bb2"
0001DB82 <prefixtree.include.bb2@385> XINCLUDE "translation.include.bb2"
0001DB9C <prefixtree.include.bb2@388> XINCLUDE "translation.include.bb2"
0001DBE4 <prefixtree.include.bb2@389> XINCLUDE "translation.include.bb2"
0001DC02 <prefixtree.include.bb2@390> XINCLUDE "translation.include.bb2"
0001DC20 <prefixtree.include.bb2@391> XINCLUDE "translation.include.bb2"
0001DC3A <prefixtree.include.bb2@394> XINCLUDE "translation.include.bb2"
0001DC46 <prefixtree.include.bb2@395> XINCLUDE "translation.include.bb2"
0001DC4C <prefixtree.include.bb2@396> XINCLUDE "translation.include.bb2"
0001DC78 <prefixtree.include.bb2@397> XINCLUDE "translation.include.bb2"
0001DC90 <prefixtree.include.bb2@399> XINCLUDE "translation.include.bb2"
0001DC96 <prefixtree.include.bb2@400> XINCLUDE "translation.include.bb2"
0001DCAA <prefixtree.include.bb2@403> XINCLUDE "translation.include.bb2"
0001DCB8 <prefixtree.include.bb2@405> XINCLUDE "translation.include.bb2"
0001DCC6 <prefixtree.include.bb2@406> XINCLUDE "translation.include.bb2"
0001DCD4 <prefixtree.include.bb2@407> XINCLUDE "translation.include.bb2"
0001DCDC <prefixtree.include.bb2@408> XINCLUDE "translation.include.bb2"
0001DD00 <prefixtree.include.bb2@409> XINCLUDE "translation.include.bb2"
0001DD28 <prefixtree.include.bb2@410> XINCLUDE "translation.include.bb2"
0001DD50 <prefixtree.include.bb2@411> XINCLUDE "translation.include.bb2"
0001DDBC <prefixtree.include.bb2@412> XINCLUDE "translation.include.bb2"
0001DDCC <prefixtree.include.bb2@413> XINCLUDE "translation.include.bb2"
0001DDF8 <prefixtree.include.bb2@414> XINCLUDE "translation.include.bb2"
0001DE4E <prefixtree.include.bb2@416> XINCLUDE "translation.include.bb2"
0001DE5C <prefixtree.include.bb2@417> XINCLUDE "translation.include.bb2"
0001DE6A <prefixtree.include.bb2@418> XINCLUDE "translation.include.bb2"
0001DE70 <prefixtree.include.bb2@419> XINCLUDE "translation.include.bb2"
0001DEB8 <prefixtree.include.bb2@421> XINCLUDE "translation.include.bb2"
0001DEFC <prefixtree.include.bb2@422> XINCLUDE "translation.include.bb2"
0001DF4C <prefixtree.include.bb2@425> XINCLUDE "translation.include.bb2"
0001DFA2 <prefixtree.include.bb2@426> XINCLUDE "translation.include.bb2"
0001E00E <prefixtree.include.bb2@427> XINCLUDE "translation.include.bb2"
0001E016 <prefixtree.include.bb2@431> XINCLUDE "translation.include.bb2"
0001E050 <prefixtree.include.bb2@433> XINCLUDE "translation.include.bb2"
0001E076 <prefixtree.include.bb2@434> XINCLUDE "translation.include.bb2"
0001E08E <prefixtree.include.bb2@435> XINCLUDE "translation.include.bb2"
0001E0C8 <prefixtree.include.bb2@436> XINCLUDE "translation.include.bb2"
0001E0F2 <prefixtree.include.bb2@437> XINCLUDE "translation.include.bb2"
0001E10A <prefixtree.include.bb2@438> XINCLUDE "translation.include.bb2"
0001E12E <prefixtree.include.bb2@440> XINCLUDE "translation.include.bb2"
0001E182 <prefixtree.include.bb2@441> XINCLUDE "translation.include.bb2"
0001E18A <prefixtree.include.bb2@442> XINCLUDE "translation.include.bb2"
0001E190 <prefixtree.include.bb2@443> XINCLUDE "translation.include.bb2"
0001E1F2 <prefixtree.include.bb2@444> XINCLUDE "translation.include.bb2"
0001E21E <prefixtree.include.bb2@445> XINCLUDE "translation.include.bb2"
0001E23A <prefixtree.include.bb2@448> XINCLUDE "translation.include.bb2"
0001E248 <prefixtree.include.bb2@450> XINCLUDE "translation.include.bb2"
0001E256 <prefixtree.include.bb2@451> XINCLUDE "translation.include.bb2"
0001E264 <prefixtree.include.bb2@453> XINCLUDE "translation.include.bb2"
0001E272 <prefixtree.include.bb2@454> XINCLUDE "translation.include.bb2"
0001E2B6 <prefixtree.include.bb2@455> XINCLUDE "translation.include.bb2"
0001E322 <prefixtree.include.bb2@456> XINCLUDE "translation.include.bb2"
0001E350 <prefixtree.include.bb2@457> XINCLUDE "translation.include.bb2"
0001E364 <prefixtree.include.bb2@458> XINCLUDE "translation.include.bb2"
0001E396 <prefixtree.include.bb2@459> XINCLUDE "translation.include.bb2"
0001E3E0 <prefixtree.include.bb2@460> XINCLUDE "translation.include.bb2"
0001E3F0 <prefixtree.include.bb2@461> XINCLUDE "translation.include.bb2"
0001E424 <prefixtree.include.bb2@462> XINCLUDE "translation.include.bb2"
0001E446 <prefixtree.include.bb2@463> XINCLUDE "translation.include.bb2"
0001E456 <prefixtree.include.bb2@464> XINCLUDE "translation.include.bb2"
0001E45E <prefixtree.include.bb2@467> XINCLUDE "translation.include.bb2"
0001E4A2 <prefixtree.include.bb2@468> XINCLUDE "translation.include.bb2"
0001E50E <prefixtree.include.bb2@469> XINCLUDE "translation.include.bb2"
0001E53C <prefixtree.include.bb2@470> XINCLUDE "translation.include.bb2"
0001E560 <prefixtree.include.bb2@472> XINCLUDE "translation.include.bb2"
0001E5A4 <prefixtree.include.bb2@473> XINCLUDE "translation.include.bb2"
0001E610 <prefixtree.include.bb2@474> XINCLUDE "translation.include.bb2"
0001E63E <prefixtree.include.bb2@475> XINCLUDE "translation.include.bb2"
0001E66C <prefixtree.include.bb2@476> XINCLUDE "translation.include.bb2"
0001E674 <prefixtree.include.bb2@477> XINCLUDE "translation.include.bb2"
0001E6A2 <prefixtree.include.bb2@478> XINCLUDE "translation.include.bb2"
0001E714 <prefixtree.include.bb2@479> XINCLUDE "translation.include.bb2"
0001E71A <prefixtree.include.bb2@480> XINCLUDE "translation.include.bb2"
0001E748 <prefixtree.include.bb2@481> XINCLUDE "translation.include.bb2"
0001E7BA <prefixtree.include.bb2@482> XINCLUDE "translation.include.bb2"
0001E7D8 <prefixtree.include.bb2@485> XINCLUDE "translation.include.bb2"
0001E7FC <prefixtree.include.bb2@486> XINCLUDE "translation.include.bb2"
0001E814 <prefixtree.include.bb2@487> XINCLUDE "translation.include.bb2"
0001E81A <prefixtree.include.bb2@488> XINCLUDE "translation.include.bb2"
0001E820 <prefixtree.include.bb2@491> XINCLUDE "translation.include.bb2"
0001E822 <prefixtree.include.bb2@493> XINCLUDE "translation.include.bb2"
0001E82C <prefixtree.include.bb2@496> XINCLUDE "translation.include.bb2"
0001E858 <prefixtree.include.bb2@497> XINCLUDE "translation.include.bb2"
0001E87A <prefixtree.include.bb2@515> XINCLUDE "translation.include.bb2"
0001E882 <prefixtree.include.bb2@516> XINCLUDE "translation.include.bb2"
0001E888 <prefixtree.include.bb2@517> XINCLUDE "translation.include.bb2"
0001E896 <prefixtree.include.bb2@518> XINCLUDE "translation.include.bb2"
0001E8D0 <prefixtree.include.bb2@520> XINCLUDE "translation.include.bb2"
0001E8F6 <prefixtree.include.bb2@521> XINCLUDE "translation.include.bb2"
0001E90E <prefixtree.include.bb2@522> XINCLUDE "translation.include.bb2"
0001E948 <prefixtree.include.bb2@523> XINCLUDE "translation.include.bb2"
0001E972 <prefixtree.include.bb2@524> XINCLUDE "translation.include.bb2"
0001E98A <prefixtree.include.bb2@526> XINCLUDE "translation.include.bb2"
0001E9A2 <prefixtree.include.bb2@527> XINCLUDE "translation.include.bb2"
0001E9DA <prefixtree.include.bb2@528> XINCLUDE "translation.include.bb2"
0001E9E2 <prefixtree.include.bb2@530> XINCLUDE "translation.include.bb2"
0001EA1C <prefixtree.include.bb2@532> XINCLUDE "translation.include.bb2"
0001EA2E <prefixtree.include.bb2@534> XINCLUDE "translation.include.bb2"
0001EA54 <prefixtree.include.bb2@535> XINCLUDE "translation.include.bb2"
0001EA6A <prefixtree.include.bb2@536> XINCLUDE "translation.include.bb2"
0001EA90 <prefixtree.include.bb2@537> XINCLUDE "translation.include.bb2"
0001EAA4 <prefixtree.include.bb2@538> XINCLUDE "translation.include.bb2"
0001EABC <prefixtree.include.bb2@540> XINCLUDE "translation.include.bb2"
0001EACE <prefixtree.include.bb2@541> XINCLUDE "translation.include.bb2"
0001EAD8 <prefixtree.include.bb2@542> XINCLUDE "translation.include.bb2"
0001EAEC <prefixtree.include.bb2@543> XINCLUDE "translation.include.bb2"
0001EB06 <prefixtree.include.bb2@560> XINCLUDE "translation.include.bb2"
0001EB24 <prefixtree.include.bb2@561> XINCLUDE "translation.include.bb2"
0001EB36 <prefixtree.include.bb2@562> XINCLUDE "translation.include.bb2"
0001EB54 <prefixtree.include.bb2@563> XINCLUDE "translation.include.bb2"
0001EB76 <prefixtree.include.bb2@564> XINCLUDE "translation.include.bb2"
0001EB92 <prefixtree.include.bb2@565> XINCLUDE "translation.include.bb2"
0001EBB2 <prefixtree.include.bb2@566> XINCLUDE "translation.include.bb2"
0001EBBC <prefixtree.include.bb2@567> XINCLUDE "translation.include.bb2"
0001EBC2 <prefixtree.include.bb2@568> XINCLUDE "translation.include.bb2"
0001EBCC <prefixtree.include.bb2@569> XINCLUDE "translation.include.bb2"
0001EBD8 <prefixtree.include.bb2@571> XINCLUDE "translation.include.bb2"
0001EBDE <prefixtree.include.bb2@572> XINCLUDE "translation.include.bb2"
0001EC0C <prefixtree.include.bb2@591> XINCLUDE "translation.include.bb2"
0001EC34 <prefixtree.include.bb2@592> XINCLUDE "translation.include.bb2"
0001EC74 <prefixtree.include.bb2@593> XINCLUDE "translation.include.bb2"
0001EC8C <prefixtree.include.bb2@594> XINCLUDE "translation.include.bb2"
0001ECD2 <prefixtree.include.bb2@595> XINCLUDE "translation.include.bb2"
0001ECFC <prefixtree.include.bb2@598> XINCLUDE "translation.include.bb2"
0001ED2A <prefixtree.include.bb2@599> XINCLUDE "translation.include.bb2"
0001ED44 <prefixtree.include.bb2@613> XINCLUDE "translation.include.bb2"
0001ED52 <prefixtree.include.bb2@614> XINCLUDE "translation.include.bb2"
0001ED62 <prefixtree.include.bb2@615> XINCLUDE "translation.include.bb2"
0001ED72 <prefixtree.include.bb2@616> XINCLUDE "translation.include.bb2"
0001ED82 <prefixtree.include.bb2@617> XINCLUDE "translation.include.bb2"
0001ED92 <prefixtree.include.bb2@618> XINCLUDE "translation.include.bb2"
0001ED96 <prefixtree.include.bb2@619> XINCLUDE "translation.include.bb2"
0001EDB0 <prefixtree.include.bb2@636> XINCLUDE "translation.include.bb2"
0001EDB6 <prefixtree.include.bb2@637> XINCLUDE "translation.include.bb2"
0001EDC6 <prefixtree.include.bb2@638> XINCLUDE "translation.include.bb2"
0001EDD6 <prefixtree.include.bb2@639> XINCLUDE "translation.include.bb2"
0001EE04 <prefixtree.include.bb2@641> XINCLUDE "translation.include.bb2"
0001EE24 <prefixtree.include.bb2@642> XINCLUDE "translation.include.bb2"
0001EE4C <prefixtree.include.bb2@643> XINCLUDE "translation.include.bb2"
0001EE5A <prefixtree.include.bb2@644> XINCLUDE "translation.include.bb2"
0001EE66 <prefixtree.include.bb2@645> XINCLUDE "translation.include.bb2"
0001EE70 <prefixtree.include.bb2@648> XINCLUDE "translation.include.bb2"
0001EE90 <prefixtree.include.bb2@649> XINCLUDE "translation.include.bb2"
0001EEB6 <prefixtree.include.bb2@650> XINCLUDE "translation.include.bb2"
0001EED0 <prefixtree.include.bb2@651> XINCLUDE "translation.include.bb2"
0001EED6 <prefixtree.include.bb2@652> XINCLUDE "translation.include.bb2"
0001EEE4 <prefixtree.include.bb2@653> XINCLUDE "translation.include.bb2"
0001EF04 <prefixtree.include.bb2@654> XINCLUDE "translation.include.bb2"
0001EF10 <prefixtree.include.bb2@655> XINCLUDE "translation.include.bb2"
0001EF22 <prefixtree.include.bb2@656> XINCLUDE "translation.include.bb2"
0001EF28 <prefixtree.include.bb2@657> XINCLUDE "translation.include.bb2"
0001EF3A <prefixtree.include.bb2@658> XINCLUDE "translation.include.bb2"
0001EF40 <prefixtree.include.bb2@661> XINCLUDE "translation.include.bb2"
0001EF6A <prefixtree.include.bb2@662> XINCLUDE "translation.include.bb2"
0001EF88 <prefixtree.include.bb2@665> XINCLUDE "translation.include.bb2"
0001EF90 <prefixtree.include.bb2@666> XINCLUDE "translation.include.bb2"
0001EFA4 <prefixtree.include.bb2@668> XINCLUDE "translation.include.bb2"
0001EFCC <prefixtree.include.bb2@669> XINCLUDE "translation.include.bb2"
0001EFDE <prefixtree.include.bb2@670> XINCLUDE "translation.include.bb2"
0001F006 <prefixtree.include.bb2@671> XINCLUDE "translation.include.bb2"
0001F02E <prefixtree.include.bb2@672> XINCLUDE "translation.include.bb2"
0001F096 <prefixtree.include.bb2@673> XINCLUDE "translation.include.bb2"
0001F0A6 <prefixtree.include.bb2@674> XINCLUDE "translation.include.bb2"
0001F0CE <prefixtree.include.bb2@675> XINCLUDE "translation.include.bb2"
0001F0EC <prefixtree.include.bb2@676> XINCLUDE "translation.include.bb2"
0001F116 <prefixtree.include.bb2@677> XINCLUDE "translation.include.bb2"
0001F120 <prefixtree.include.bb2@678> XINCLUDE "translation.include.bb2"
0001F138 <prefixtree.include.bb2@679> XINCLUDE "translation.include.bb2"
0001F142 <prefixtree.include.bb2@680> XINCLUDE "translation.include.bb2"
0001F17A <prefixtree.include.bb2@681> XINCLUDE "translation.include.bb2"
0001F180 <prefixtree.include.bb2@682> XINCLUDE "translation.include.bb2"
0001F18A <prefixtree.include.bb2@685> XINCLUDE "translation.include.bb2"
0001F1AA <prefixtree.include.bb2@686> XINCLUDE "translation.include.bb2"
0001F1D0 <prefixtree.include.bb2@687> XINCLUDE "translation.include.bb2"
0001F1EA <prefixtree.include.bb2@688> XINCLUDE "translation.include.bb2"
0001F1F0 <prefixtree.include.bb2@689> XINCLUDE "translation.include.bb2"
0001F1FE <prefixtree.include.bb2@690> XINCLUDE "translation.include.bb2"
0001F21E <prefixtree.include.bb2@691> XINCLUDE "translation.include.bb2"
0001F22A <prefixtree.include.bb2@692> XINCLUDE "translation.include.bb2"
0001F23C <prefixtree.include.bb2@693> XINCLUDE "translation.include.bb2"
0001F242 <prefixtree.include.bb2@694> XINCLUDE "translation.include.bb2"
0001F254 <prefixtree.include.bb2@695> XINCLUDE "translation.include.bb2"
0001F25A <prefixtree.include.bb2@698> XINCLUDE "translation.include.bb2"
0001F272 <prefixtree.include.bb2@699> XINCLUDE "translation.include.bb2"
0001F2B6 <prefixtree.include.bb2@700> XINCLUDE "translation.include.bb2"
0001F2BC <prefixtree.include.bb2@702> XINCLUDE "translation.include.bb2"
0001F2C6 <prefixtree.include.bb2@703> XINCLUDE "translation.include.bb2"
0001F2DA <prefixtree.include.bb2@704> XINCLUDE "translation.include.bb2"
0001F2F4 <prefixtree.include.bb2@743> XINCLUDE "translation.include.bb2"
0001F31C <prefixtree.include.bb2@744> XINCLUDE "translation.include.bb2"
0001F34A <prefixtree.include.bb2@745> XINCLUDE "translation.include.bb2"
0001F362 <prefixtree.include.bb2@746> XINCLUDE "translation.include.bb2"
0001F3C4 <prefixtree.include.bb2@747> XINCLUDE "translation.include.bb2"
0001F3D4 <prefixtree.include.bb2@748> XINCLUDE "translation.include.bb2"
0001F3FE <prefixtree.include.bb2@749> XINCLUDE "translation.include.bb2"
0001F416 <prefixtree.include.bb2@750> XINCLUDE "translation.include.bb2"
0001F430 <prefixtree.include.bb2@767> XINCLUDE "translation.include.bb2"
0001F458 <prefixtree.include.bb2@768> XINCLUDE "translation.include.bb2"
0001F470 <prefixtree.include.bb2@769> XINCLUDE "translation.include.bb2"
0001F4AA <prefixtree.include.bb2@770> XINCLUDE "translation.include.bb2"
0001F4D4 <prefixtree.include.bb2@772> XINCLUDE "translation.include.bb2"
0001F4EC <prefixtree.include.bb2@773> XINCLUDE "translation.include.bb2"
0001F506 <prefixtree.include.bb2@815> XINCLUDE "translation.include.bb2"
0001F50E <prefixtree.include.bb2@816> XINCLUDE "translation.include.bb2"
0001F526 <prefixtree.include.bb2@817> XINCLUDE "translation.include.bb2"
0001F530 <prefixtree.include.bb2@818> XINCLUDE "translation.include.bb2"
0001F542 <prefixtree.include.bb2@819> XINCLUDE "translation.include.bb2"
0001F57A <prefixtree.include.bb2@820> XINCLUDE "translation.include.bb2"
0001F588 <prefixtree.include.bb2@821> XINCLUDE "translation.include.bb2"
0001F594 <prefixtree.include.bb2@822> XINCLUDE "translation.include.bb2"
0001F5B0 <prefixtree.include.bb2@823> XINCLUDE "translation.include.bb2"
0001F5D2 <prefixtree.include.bb2@824> XINCLUDE "translation.include.bb2"
0001F5F4 <prefixtree.include.bb2@825> XINCLUDE "translation.include.bb2"
0001F616 <prefixtree.include.bb2@826> XINCLUDE "translation.include.bb2"
0001F638 <prefixtree.include.bb2@827> XINCLUDE "translation.include.bb2"
0001F654 <prefixtree.include.bb2@828> XINCLUDE "translation.include.bb2"
0001F672 <prefixtree.include.bb2@829> XINCLUDE "translation.include.bb2"
0001F686 <prefixtree.include.bb2@830> XINCLUDE "translation.include.bb2"
0001F68C <prefixtree.include.bb2@832> XINCLUDE "translation.include.bb2"
0001F68E <prefixtree.include.bb2@834> XINCLUDE "translation.include.bb2"
0001F694 <prefixtree.include.bb2@835> XINCLUDE "translation.include.bb2"
0001F69E <prefixtree.include.bb2@837> XINCLUDE "translation.include.bb2"
0001F6A4 <prefixtree.include.bb2@838> XINCLUDE "translation.include.bb2"
0001F6C2 <prefixtree.include.bb2@856> XINCLUDE "translation.include.bb2"
0001F6C8 <prefixtree.include.bb2@857> XINCLUDE "translation.include.bb2"
0001F6EC <prefixtree.include.bb2@858> XINCLUDE "translation.include.bb2"
0001F70A <prefixtree.include.bb2@859> XINCLUDE "translation.include.bb2"
0001F738 <prefixtree.include.bb2@860> XINCLUDE "translation.include.bb2"
0001F766 <prefixtree.include.bb2@861> XINCLUDE "translation.include.bb2"
0001F794 <prefixtree.include.bb2@862> XINCLUDE "translation.include.bb2"
0001F7C2 <prefixtree.include.bb2@863> XINCLUDE "translation.include.bb2"
0001F7F6 <prefixtree.include.bb2@864> XINCLUDE "translation.include.bb2"
0001F806 <prefixtree.include.bb2@865> XINCLUDE "translation.include.bb2"
0001F810 <prefixtree.include.bb2@867> XINCLUDE "translation.include.bb2"
0001F816 <prefixtree.include.bb2@868> XINCLUDE "translation.include.bb2"
0001F816 <phrasebook.include.bb2@34> XINCLUDE "translation.include.bb2"
0001F860 <phrasebook.include.bb2@58> XINCLUDE "translation.include.bb2"
0001F880 <phrasebook.include.bb2@59> XINCLUDE "translation.include.bb2"
0001F88A <phrasebook.include.bb2@60> XINCLUDE "translation.include.bb2"
0001F89E <phrasebook.include.bb2@61> XINCLUDE "translation.include.bb2"
0001F8E4 <phrasebook.include.bb2@62> XINCLUDE "translation.include.bb2"
0001F92A <phrasebook.include.bb2@63> XINCLUDE "translation.include.bb2"
0001F970 <phrasebook.include.bb2@64> XINCLUDE "translation.include.bb2"
0001F97A <phrasebook.include.bb2@66> XINCLUDE "translation.include.bb2"
0001F996 <phrasebook.include.bb2@67> XINCLUDE "translation.include.bb2"
0001F9C0 <phrasebook.include.bb2@70> XINCLUDE "translation.include.bb2"
0001FA3E <phrasebook.include.bb2@71> XINCLUDE "translation.include.bb2"
0001FABC <phrasebook.include.bb2@72> XINCLUDE "translation.include.bb2"
0001FB3A <phrasebook.include.bb2@73> XINCLUDE "translation.include.bb2"
0001FBB8 <phrasebook.include.bb2@74> XINCLUDE "translation.include.bb2"
0001FC36 <phrasebook.include.bb2@75> XINCLUDE "translation.include.bb2"
0001FCB4 <phrasebook.include.bb2@76> XINCLUDE "translation.include.bb2"
0001FD32 <phrasebook.include.bb2@77> XINCLUDE "translation.include.bb2"
0001FDB0 <phrasebook.include.bb2@78> XINCLUDE "translation.include.bb2"
0001FE2E <phrasebook.include.bb2@79> XINCLUDE "translation.include.bb2"
0001FEAC <phrasebook.include.bb2@80> XINCLUDE "translation.include.bb2"
0001FF30 <phrasebook.include.bb2@81> XINCLUDE "translation.include.bb2"
0001FF60 <phrasebook.include.bb2@82> XINCLUDE "translation.include.bb2"
0001FFBC <phrasebook.include.bb2@84> XINCLUDE "translation.include.bb2"
0001FFE8 <phrasebook.include.bb2@85> XINCLUDE "translation.include.bb2"
000200B2 <phrasebook.include.bb2@86> XINCLUDE "translation.include.bb2"
000200C0 <phrasebook.include.bb2@88> XINCLUDE "translation.include.bb2"
000200FE <phrasebook.include.bb2@89> XINCLUDE "translation.include.bb2"
00020182 <phrasebook.include.bb2@90> XINCLUDE "translation.include.bb2"
000201AC <phrasebook.include.bb2@91> XINCLUDE "translation.include.bb2"
000201CA <phrasebook.include.bb2@92> XINCLUDE "translation.include.bb2"
000201E4 <phrasebook.include.bb2@106> XINCLUDE "translation.include.bb2"
000201EE <phrasebook.include.bb2@107> XINCLUDE "translation.include.bb2"
000201FA <phrasebook.include.bb2@108> XINCLUDE "translation.include.bb2"
0002020A <phrasebook.include.bb2@109> XINCLUDE "translation.include.bb2"
0002021A <phrasebook.include.bb2@110> XINCLUDE "translation.include.bb2"
0002022A <phrasebook.include.bb2@111> XINCLUDE "translation.include.bb2"
0002023A <phrasebook.include.bb2@112> XINCLUDE "translation.include.bb2"
0002023E <phrasebook.include.bb2@114> XINCLUDE "translation.include.bb2"
0002027C <phrasebook.include.bb2@131> XINCLUDE "translation.include.bb2"
000202D4 <phrasebook.include.bb2@132> XINCLUDE "translation.include.bb2"
00020330 <phrasebook.include.bb2@133> XINCLUDE "translation.include.bb2"
000203BA <phrasebook.include.bb2@134> XINCLUDE "translation.include.bb2"
00020438 <phrasebook.include.bb2@135> XINCLUDE "translation.include.bb2"
00020452 <phrasebook.include.bb2@137> XINCLUDE "translation.include.bb2"
00020480 <phrasebook.include.bb2@155> XINCLUDE "translation.include.bb2"
000204BC <phrasebook.include.bb2@156> XINCLUDE "translation.include.bb2"
0002058A <phrasebook.include.bb2@158> XINCLUDE "translation.include.bb2"
00020658 <phrasebook.include.bb2@159> XINCLUDE "translation.include.bb2"
000206A4 <phrasebook.include.bb2@161> XINCLUDE "translation.include.bb2"
00020722 <phrasebook.include.bb2@162> XINCLUDE "translation.include.bb2"
000207A0 <phrasebook.include.bb2@163> XINCLUDE "translation.include.bb2"
000207FE <phrasebook.include.bb2@165> XINCLUDE "translation.include.bb2"
0002089A <phrasebook.include.bb2@166> XINCLUDE "translation.include.bb2"
000208D2 <phrasebook.include.bb2@168> XINCLUDE "translation.include.bb2"
00020930 <phrasebook.include.bb2@169> XINCLUDE "translation.include.bb2"
000209B8 <phrasebook.include.bb2@170> XINCLUDE "translation.include.bb2"
000209C0 <phrasebook.include.bb2@172> XINCLUDE "translation.include.bb2"
00020A2A <phrasebook.include.bb2@174> XINCLUDE "translation.include.bb2"
00020A9C <phrasebook.include.bb2@175> XINCLUDE "translation.include.bb2"
00020ADA <phrasebook.include.bb2@176> XINCLUDE "translation.include.bb2"
00020B62 <phrasebook.include.bb2@177> XINCLUDE "translation.include.bb2"
00020B8E <phrasebook.include.bb2@187> XINCLUDE "translation.include.bb2"
00020BEA <phrasebook.include.bb2@188> XINCLUDE "translation.include.bb2"
00020CB8 <phrasebook.include.bb2@189> XINCLUDE "translation.include.bb2"
00020D1C <phrasebook.include.bb2@190> XINCLUDE "translation.include.bb2"
00020D22 <phrasebook.include.bb2@191> XINCLUDE "translation.include.bb2"
00020D56 <phrasebook.include.bb2@192> XINCLUDE "translation.include.bb2"
00020E24 <phrasebook.include.bb2@196> XINCLUDE "translation.include.bb2"
00020EF2 <phrasebook.include.bb2@197> XINCLUDE "translation.include.bb2"
00020F1C <phrasebook.include.bb2@199> XINCLUDE "translation.include.bb2"
00020F3A <phrasebook.include.bb2@200> XINCLUDE "translation.include.bb2"
00020F68 <phrasebook.include.bb2@204> XINCLUDE "translation.include.bb2"
00020FA4 <phrasebook.include.bb2@205> XINCLUDE "translation.include.bb2"
00021014 <phrasebook.include.bb2@206> XINCLUDE "translation.include.bb2"
0002101C <phrasebook.include.bb2@207> XINCLUDE "translation.include.bb2"
0002106E <phrasebook.include.bb2@208> XINCLUDE "translation.include.bb2"
00021096 <phrasebook.include.bb2@209> XINCLUDE "translation.include.bb2"
000210AE <phrasebook.include.bb2@210> XINCLUDE "translation.include.bb2"
00021162 <phrasebook.include.bb2@211> XINCLUDE "translation.include.bb2"
00021170 <phrasebook.include.bb2@212> XINCLUDE "translation.include.bb2"
000211C6 <phrasebook.include.bb2@213> XINCLUDE "translation.include.bb2"
00021224 <phrasebook.include.bb2@214> XINCLUDE "translation.include.bb2"
0002122A <phrasebook.include.bb2@215> XINCLUDE "translation.include.bb2"
000212AE <phrasebook.include.bb2@216> XINCLUDE "translation.include.bb2"
00021332 <phrasebook.include.bb2@217> XINCLUDE "translation.include.bb2"
000213B6 <phrasebook.include.bb2@218> XINCLUDE "translation.include.bb2"
00021434 <phrasebook.include.bb2@219> XINCLUDE "translation.include.bb2"
000214B2 <phrasebook.include.bb2@220> XINCLUDE "translation.include.bb2"
00021530 <phrasebook.include.bb2@221> XINCLUDE "translation.include.bb2"
000215AE <phrasebook.include.bb2@222> XINCLUDE "translation.include.bb2"
0002162C <phrasebook.include.bb2@223> XINCLUDE "translation.include.bb2"
000216AA <phrasebook.include.bb2@224> XINCLUDE "translation.include.bb2"
00021728 <phrasebook.include.bb2@225> XINCLUDE "translation.include.bb2"
00021752 <phrasebook.include.bb2@226> XINCLUDE "translation.include.bb2"
00021770 <phrasebook.include.bb2@227> XINCLUDE "translation.include.bb2"
0002179E <phrasebook.include.bb2@245> XINCLUDE "translation.include.bb2"
000217E2 <phrasebook.include.bb2@246> XINCLUDE "translation.include.bb2"
000217E8 <phrasebook.include.bb2@247> XINCLUDE "translation.include.bb2"
00021802 <phrasebook.include.bb2@248> XINCLUDE "translation.include.bb2"
0002181E <phrasebook.include.bb2@249> XINCLUDE "translation.include.bb2"
00021852 <phrasebook.include.bb2@250> XINCLUDE "translation.include.bb2"
00021876 <phrasebook.include.bb2@251> XINCLUDE "translation.include.bb2"
0002189E <phrasebook.include.bb2@252> XINCLUDE "translation.include.bb2"
0002190A <phrasebook.include.bb2@253> XINCLUDE "translation.include.bb2"
00021968 <phrasebook.include.bb2@256> XINCLUDE "translation.include.bb2"
000219C6 <phrasebook.include.bb2@257> XINCLUDE "translation.include.bb2"
00021A12 <phrasebook.include.bb2@258> XINCLUDE "translation.include.bb2"
00021A6C <phrasebook.include.bb2@259> XINCLUDE "translation.include.bb2"
00021A72 <phrasebook.include.bb2@260> XINCLUDE "translation.include.bb2"
00021A78 <phrasebook.include.bb2@262> XINCLUDE "translation.include.bb2"
00021A82 <phrasebook.include.bb2@263> XINCLUDE "translation.include.bb2"
00021A8C <phrasebook.include.bb2@264> XINCLUDE "translation.include.bb2"
00021AA6 <phrasebook.include.bb2@265> XINCLUDE "translation.include.bb2"
00021AD4 <phrasebook.include.bb2@282> XINCLUDE "translation.include.bb2"
00021ADA <phrasebook.include.bb2@283> XINCLUDE "translation.include.bb2"
00021B1E <phrasebook.include.bb2@284> XINCLUDE "translation.include.bb2"
00021B38 <phrasebook.include.bb2@285> XINCLUDE "translation.include.bb2"
00021B48 <phrasebook.include.bb2@286> XINCLUDE "translation.include.bb2"
00021B52 <phrasebook.include.bb2@287> XINCLUDE "translation.include.bb2"
00021B5E <phrasebook.include.bb2@288> XINCLUDE "translation.include.bb2"
00021B68 <phrasebook.include.bb2@289> XINCLUDE "translation.include.bb2"
00021B8C <phrasebook.include.bb2@292> XINCLUDE "translation.include.bb2"
00021BD4 <phrasebook.include.bb2@293> XINCLUDE "translation.include.bb2"
00021C1C <phrasebook.include.bb2@294> XINCLUDE "translation.include.bb2"
00021C64 <phrasebook.include.bb2@295> XINCLUDE "translation.include.bb2"
00021C7A <phrasebook.include.bb2@296> XINCLUDE "translation.include.bb2"
00021C8E <phrasebook.include.bb2@297> XINCLUDE "translation.include.bb2"
00021C98 <phrasebook.include.bb2@299> XINCLUDE "translation.include.bb2"
00021CA2 <phrasebook.include.bb2@300> XINCLUDE "translation.include.bb2"
00021CBC <phrasebook.include.bb2@301> XINCLUDE "translation.include.bb2"
00021CE6 <phrasebook.include.bb2@317> XINCLUDE "translation.include.bb2"
00021D2A <phrasebook.include.bb2@318> XINCLUDE "translation.include.bb2"
00021D44 <phrasebook.include.bb2@319> XINCLUDE "translation.include.bb2"
00021DA2 <phrasebook.include.bb2@320> XINCLUDE "translation.include.bb2"
00021DBC <phrasebook.include.bb2@321> XINCLUDE "translation.include.bb2"
00021DD4 <phrasebook.include.bb2@323> XINCLUDE "translation.include.bb2"
00021DDE <phrasebook.include.bb2@324> XINCLUDE "translation.include.bb2"
00021DFA <phrasebook.include.bb2@325> XINCLUDE "translation.include.bb2"
00021E08 <phrasebook.include.bb2@326> XINCLUDE "translation.include.bb2"
00021E14 <phrasebook.include.bb2@327> XINCLUDE "translation.include.bb2"
00021E60 <phrasebook.include.bb2@328> XINCLUDE "translation.include.bb2"
00021EB2 <phrasebook.include.bb2@329> XINCLUDE "translation.include.bb2"
00021F04 <phrasebook.include.bb2@330> XINCLUDE "translation.include.bb2"
00021F18 <phrasebook.include.bb2@331> XINCLUDE "translation.include.bb2"
00021F28 <phrasebook.include.bb2@332> XINCLUDE "translation.include.bb2"
00021F2E <phrasebook.include.bb2@333> XINCLUDE "translation.include.bb2"
00021F30 <phrasebook.include.bb2@335> XINCLUDE "translation.include.bb2"
00021F36 <phrasebook.include.bb2@336> XINCLUDE "translation.include.bb2"
00021F40 <phrasebook.include.bb2@338> XINCLUDE "translation.include.bb2"
00021F4A <phrasebook.include.bb2@339> XINCLUDE "translation.include.bb2"
00021F64 <phrasebook.include.bb2@340> XINCLUDE "translation.include.bb2"
00021F8E <phrasebook.include.bb2@379> XINCLUDE "translation.include.bb2"
00021FA4 <phrasebook.include.bb2@380> XINCLUDE "translation.include.bb2"
00021FAE <phrasebook.include.bb2@381> XINCLUDE "translation.include.bb2"
00022026 <phrasebook.include.bb2@382> XINCLUDE "translation.include.bb2"
00022062 <phrasebook.include.bb2@383> XINCLUDE "translation.include.bb2"
00022072 <phrasebook.include.bb2@384> XINCLUDE "translation.include.bb2"
00022092 <phrasebook.include.bb2@385> XINCLUDE "translation.include.bb2"
000220B2 <phrasebook.include.bb2@386> XINCLUDE "translation.include.bb2"
000220D2 <phrasebook.include.bb2@387> XINCLUDE "translation.include.bb2"
00022108 <phrasebook.include.bb2@388> XINCLUDE "translation.include.bb2"
00022130 <phrasebook.include.bb2@389> XINCLUDE "translation.include.bb2"
00022168 <phrasebook.include.bb2@390> XINCLUDE "translation.include.bb2"
000221CC <phrasebook.include.bb2@391> XINCLUDE "translation.include.bb2"
000221EC <phrasebook.include.bb2@392> XINCLUDE "translation.include.bb2"
00022268 <phrasebook.include.bb2@393> XINCLUDE "translation.include.bb2"
000222A0 <phrasebook.include.bb2@396> XINCLUDE "translation.include.bb2"
00022316 <phrasebook.include.bb2@397> XINCLUDE "translation.include.bb2"
00022336 <phrasebook.include.bb2@398> XINCLUDE "translation.include.bb2"
000223B2 <phrasebook.include.bb2@399> XINCLUDE "translation.include.bb2"
000223EA <phrasebook.include.bb2@402> XINCLUDE "translation.include.bb2"
00022460 <phrasebook.include.bb2@403> XINCLUDE "translation.include.bb2"
00022480 <phrasebook.include.bb2@404> XINCLUDE "translation.include.bb2"
000224FC <phrasebook.include.bb2@405> XINCLUDE "translation.include.bb2"
00022528 <phrasebook.include.bb2@408> XINCLUDE "translation.include.bb2"
00022530 <phrasebook.include.bb2@409> XINCLUDE "translation.include.bb2"
00022576 <phrasebook.include.bb2@410> XINCLUDE "translation.include.bb2"
00022596 <phrasebook.include.bb2@411> XINCLUDE "translation.include.bb2"
000225A0 <phrasebook.include.bb2@412> XINCLUDE "translation.include.bb2"
000225B8 <phrasebook.include.bb2@413> XINCLUDE "translation.include.bb2"
000225C8 <phrasebook.include.bb2@414> XINCLUDE "translation.include.bb2"
00022600 <phrasebook.include.bb2@415> XINCLUDE "translation.include.bb2"
00022632 <phrasebook.include.bb2@416> XINCLUDE "translation.include.bb2"
00022644 <phrasebook.include.bb2@419> XINCLUDE "translation.include.bb2"
000226C6 <phrasebook.include.bb2@420> XINCLUDE "translation.include.bb2"
000226D0 <phrasebook.include.bb2@421> XINCLUDE "translation.include.bb2"
00022702 <phrasebook.include.bb2@422> XINCLUDE "translation.include.bb2"
00022734 <phrasebook.include.bb2@423> XINCLUDE "translation.include.bb2"
00022760 <phrasebook.include.bb2@428> XINCLUDE "translation.include.bb2"
0002278C <phrasebook.include.bb2@429> XINCLUDE "translation.include.bb2"
000227AE <phrasebook.include.bb2@430> XINCLUDE "translation.include.bb2"
000227B8 <phrasebook.include.bb2@432> XINCLUDE "translation.include.bb2"
000227D2 <phrasebook.include.bb2@433> XINCLUDE "translation.include.bb2"
000227D2 <translation.include.bb2@31> XINCLUDE "translation.include.bb2"
000227E8 <translation.include.bb2@43> XINCLUDE "translation.include.bb2"
00022804 <translation.include.bb2@44> XINCLUDE "translation.include.bb2"
00022806 <translation.include.bb2@45> XINCLUDE "translation.include.bb2"
00022834 <translation.include.bb2@46> XINCLUDE "translation.include.bb2"
00022834 <AmiBlitz3.ab2@99> XINCLUDE "translation.include.bb2"
00022834 <ted.include.ab3@1> XINCLUDE "/Shared/ted.include.ab3"
0002284E <ted.include.ab3@161> XINCLUDE "/Shared/ted.include.ab3"
00022858 <ted.include.ab3@162> XINCLUDE "/Shared/ted.include.ab3"
0002287A <ted.include.ab3@163> XINCLUDE "/Shared/ted.include.ab3"
00022892 <ted.include.ab3@164> XINCLUDE "/Shared/ted.include.ab3"
000228AC <ted.include.ab3@166> XINCLUDE "/Shared/ted.include.ab3"
000228DE <ted.include.ab3@167> XINCLUDE "/Shared/ted.include.ab3"
000228E8 <ted.include.ab3@168> XINCLUDE "/Shared/ted.include.ab3"
000228EE <ted.include.ab3@170> XINCLUDE "/Shared/ted.include.ab3"
00022900 <ted.include.ab3@171> XINCLUDE "/Shared/ted.include.ab3"
00022968 <ted.include.ab3@172> XINCLUDE "/Shared/ted.include.ab3"
0002296E <ted.include.ab3@173> XINCLUDE "/Shared/ted.include.ab3"
0002299C <ted.include.ab3@174> XINCLUDE "/Shared/ted.include.ab3"
000229A6 <ted.include.ab3@177> XINCLUDE "/Shared/ted.include.ab3"
000229AC <ted.include.ab3@178> XINCLUDE "/Shared/ted.include.ab3"
000229C2 <ted.include.ab3@180> XINCLUDE "/Shared/ted.include.ab3"
000229CC <ted.include.ab3@181> XINCLUDE "/Shared/ted.include.ab3"
000229E4 <ted.include.ab3@183> XINCLUDE "/Shared/ted.include.ab3"
000229E6 <ted.include.ab3@185> XINCLUDE "/Shared/ted.include.ab3"
00022A14 <ted.include.ab3@186> XINCLUDE "/Shared/ted.include.ab3"
00022A2E <ted.include.ab3@190> XINCLUDE "/Shared/ted.include.ab3"
00022A44 <ted.include.ab3@191> XINCLUDE "/Shared/ted.include.ab3"
00022A78 <ted.include.ab3@192> XINCLUDE "/Shared/ted.include.ab3"
00022A7C <ted.include.ab3@194> XINCLUDE "/Shared/ted.include.ab3"
00022A96 <ted.include.ab3@196> XINCLUDE "/Shared/ted.include.ab3"
00022AAC <ted.include.ab3@197> XINCLUDE "/Shared/ted.include.ab3"
00022AE0 <ted.include.ab3@198> XINCLUDE "/Shared/ted.include.ab3"
00022AE4 <ted.include.ab3@200> XINCLUDE "/Shared/ted.include.ab3"
00022AFE <ted.include.ab3@216> XINCLUDE "/Shared/ted.include.ab3"
00022B14 <ted.include.ab3@217> XINCLUDE "/Shared/ted.include.ab3"
00022B48 <ted.include.ab3@218> XINCLUDE "/Shared/ted.include.ab3"
00022B4C <ted.include.ab3@220> XINCLUDE "/Shared/ted.include.ab3"
00022B66 <ted.include.ab3@236> XINCLUDE "/Shared/ted.include.ab3"
00022B7C <ted.include.ab3@237> XINCLUDE "/Shared/ted.include.ab3"
00022BB0 <ted.include.ab3@238> XINCLUDE "/Shared/ted.include.ab3"
00022BB4 <ted.include.ab3@240> XINCLUDE "/Shared/ted.include.ab3"
00022BCE <ted.include.ab3@242> XINCLUDE "/Shared/ted.include.ab3"
00022BE4 <ted.include.ab3@243> XINCLUDE "/Shared/ted.include.ab3"
00022C18 <ted.include.ab3@244> XINCLUDE "/Shared/ted.include.ab3"
00022C1C <ted.include.ab3@246> XINCLUDE "/Shared/ted.include.ab3"
00022C1C <AmiBlitz3.ab2@100> XINCLUDE "/Shared/ted.include.ab3"
00022C1C <CLIModeSupport.ab3@1> XINCLUDE "CLIModeSupport.ab3"
00022C32 <CLIModeSupport.ab3@4> XINCLUDE "CLIModeSupport.ab3"
00022C48 <CLIModeSupport.ab3@7> XINCLUDE "CLIModeSupport.ab3"
00022C56 <CLIModeSupport.ab3@8> XINCLUDE "CLIModeSupport.ab3"
00022C64 <CLIModeSupport.ab3@9> XINCLUDE "CLIModeSupport.ab3"
00022C6E <CLIModeSupport.ab3@11> XINCLUDE "CLIModeSupport.ab3"
00022C80 <CLIModeSupport.ab3@12> XINCLUDE "CLIModeSupport.ab3"
00022C92 <CLIModeSupport.ab3@13> XINCLUDE "CLIModeSupport.ab3"
00022C98 <CLIModeSupport.ab3@14> XINCLUDE "CLIModeSupport.ab3"
00022CC6 <CLIModeSupport.ab3@15> XINCLUDE "CLIModeSupport.ab3"
00022CCA <CLIModeSupport.ab3@18> XINCLUDE "CLIModeSupport.ab3"
00022CE0 <CLIModeSupport.ab3@21> XINCLUDE "CLIModeSupport.ab3"
00022CF6 <CLIModeSupport.ab3@23> XINCLUDE "CLIModeSupport.ab3"
00022D02 <CLIModeSupport.ab3@24> XINCLUDE "CLIModeSupport.ab3"
00022D0E <CLIModeSupport.ab3@25> XINCLUDE "CLIModeSupport.ab3"
00022D16 <CLIModeSupport.ab3@26> XINCLUDE "CLIModeSupport.ab3"
00022D1E <CLIModeSupport.ab3@27> XINCLUDE "CLIModeSupport.ab3"
00022D22 <CLIModeSupport.ab3@28> XINCLUDE "CLIModeSupport.ab3"
00022D4C <CLIModeSupport.ab3@47> XINCLUDE "CLIModeSupport.ab3"
00022D78 <CLIModeSupport.ab3@49> XINCLUDE "CLIModeSupport.ab3"
00022D8A <CLIModeSupport.ab3@50> XINCLUDE "CLIModeSupport.ab3"
00022DA2 <CLIModeSupport.ab3@52> XINCLUDE "CLIModeSupport.ab3"
00022DB8 <CLIModeSupport.ab3@56> XINCLUDE "CLIModeSupport.ab3"
00022DBE <CLIModeSupport.ab3@58> XINCLUDE "CLIModeSupport.ab3"
00022DF4 <CLIModeSupport.ab3@62> XINCLUDE "CLIModeSupport.ab3"
00022E2C <CLIModeSupport.ab3@63> XINCLUDE "CLIModeSupport.ab3"
00022E64 <CLIModeSupport.ab3@64> XINCLUDE "CLIModeSupport.ab3"
00022E9C <CLIModeSupport.ab3@65> XINCLUDE "CLIModeSupport.ab3"
00022ED4 <CLIModeSupport.ab3@66> XINCLUDE "CLIModeSupport.ab3"
00022F0C <CLIModeSupport.ab3@67> XINCLUDE "CLIModeSupport.ab3"
00022F44 <CLIModeSupport.ab3@68> XINCLUDE "CLIModeSupport.ab3"
00022F7C <CLIModeSupport.ab3@69> XINCLUDE "CLIModeSupport.ab3"
00022FB4 <CLIModeSupport.ab3@70> XINCLUDE "CLIModeSupport.ab3"
00022FEC <CLIModeSupport.ab3@71> XINCLUDE "CLIModeSupport.ab3"
00023024 <CLIModeSupport.ab3@72> XINCLUDE "CLIModeSupport.ab3"
0002305C <CLIModeSupport.ab3@73> XINCLUDE "CLIModeSupport.ab3"
00023094 <CLIModeSupport.ab3@74> XINCLUDE "CLIModeSupport.ab3"
0002309E <CLIModeSupport.ab3@75> XINCLUDE "CLIModeSupport.ab3"
000230A8 <CLIModeSupport.ab3@77> XINCLUDE "CLIModeSupport.ab3"
000230B2 <CLIModeSupport.ab3@78> XINCLUDE "CLIModeSupport.ab3"
000230C6 <CLIModeSupport.ab3@80> XINCLUDE "CLIModeSupport.ab3"
00023102 <CLIModeSupport.ab3@81> XINCLUDE "CLIModeSupport.ab3"
0002313E <CLIModeSupport.ab3@82> XINCLUDE "CLIModeSupport.ab3"
0002317A <CLIModeSupport.ab3@83> XINCLUDE "CLIModeSupport.ab3"
000231B6 <CLIModeSupport.ab3@84> XINCLUDE "CLIModeSupport.ab3"
000231F2 <CLIModeSupport.ab3@85> XINCLUDE "CLIModeSupport.ab3"
000231F8 <CLIModeSupport.ab3@86> XINCLUDE "CLIModeSupport.ab3"
00023226 <CLIModeSupport.ab3@87> XINCLUDE "CLIModeSupport.ab3"
00023250 <CLIModeSupport.ab3@90> XINCLUDE "CLIModeSupport.ab3"
0002325A <CLIModeSupport.ab3@91> XINCLUDE "CLIModeSupport.ab3"
0002325E <CLIModeSupport.ab3@92> XINCLUDE "CLIModeSupport.ab3"
00023292 <CLIModeSupport.ab3@93> XINCLUDE "CLIModeSupport.ab3"
00023298 <CLIModeSupport.ab3@94> XINCLUDE "CLIModeSupport.ab3"
000232C6 <CLIModeSupport.ab3@95> XINCLUDE "CLIModeSupport.ab3"
000232CC <CLIModeSupport.ab3@96> XINCLUDE "CLIModeSupport.ab3"
000232E2 <CLIModeSupport.ab3@99> XINCLUDE "CLIModeSupport.ab3"
000232EC <CLIModeSupport.ab3@101> XINCLUDE "CLIModeSupport.ab3"
000232F2 <CLIModeSupport.ab3@102> XINCLUDE "CLIModeSupport.ab3"
00023308 <CLIModeSupport.ab3@106> XINCLUDE "CLIModeSupport.ab3"
0002330E <CLIModeSupport.ab3@107> XINCLUDE "CLIModeSupport.ab3"
0002334C <CLIModeSupport.ab3@109> XINCLUDE "CLIModeSupport.ab3"
00023350 <CLIModeSupport.ab3@110> XINCLUDE "CLIModeSupport.ab3"
0002335A <CLIModeSupport.ab3@111> XINCLUDE "CLIModeSupport.ab3"
0002335C <CLIModeSupport.ab3@112> XINCLUDE "CLIModeSupport.ab3"
00023390 <CLIModeSupport.ab3@113> XINCLUDE "CLIModeSupport.ab3"
000233A0 <CLIModeSupport.ab3@114> XINCLUDE "CLIModeSupport.ab3"
000233A6 <CLIModeSupport.ab3@117> XINCLUDE "CLIModeSupport.ab3"
000233B0 <CLIModeSupport.ab3@119> XINCLUDE "CLIModeSupport.ab3"
000233B6 <CLIModeSupport.ab3@120> XINCLUDE "CLIModeSupport.ab3"
000233CC <CLIModeSupport.ab3@124> XINCLUDE "CLIModeSupport.ab3"
0002340A <CLIModeSupport.ab3@125> XINCLUDE "CLIModeSupport.ab3"
0002340E <CLIModeSupport.ab3@126> XINCLUDE "CLIModeSupport.ab3"
00023416 <CLIModeSupport.ab3@127> XINCLUDE "CLIModeSupport.ab3"
00023454 <CLIModeSupport.ab3@128> XINCLUDE "CLIModeSupport.ab3"
00023456 <CLIModeSupport.ab3@129> XINCLUDE "CLIModeSupport.ab3"
0002345A <CLIModeSupport.ab3@130> XINCLUDE "CLIModeSupport.ab3"
00023498 <CLIModeSupport.ab3@132> XINCLUDE "CLIModeSupport.ab3"
0002349C <CLIModeSupport.ab3@133> XINCLUDE "CLIModeSupport.ab3"
000234DA <CLIModeSupport.ab3@135> XINCLUDE "CLIModeSupport.ab3"
000234DE <CLIModeSupport.ab3@136> XINCLUDE "CLIModeSupport.ab3"
00023508 <CLIModeSupport.ab3@138> XINCLUDE "CLIModeSupport.ab3"
00023512 <CLIModeSupport.ab3@139> XINCLUDE "CLIModeSupport.ab3"
00023526 <CLIModeSupport.ab3@140> XINCLUDE "CLIModeSupport.ab3"
0002354C <CLIModeSupport.ab3@141> XINCLUDE "CLIModeSupport.ab3"
00023552 <CLIModeSupport.ab3@142> XINCLUDE "CLIModeSupport.ab3"
00023560 <CLIModeSupport.ab3@143> XINCLUDE "CLIModeSupport.ab3"
00023566 <CLIModeSupport.ab3@144> XINCLUDE "CLIModeSupport.ab3"
0002359E <CLIModeSupport.ab3@146> XINCLUDE "CLIModeSupport.ab3"
000235A2 <CLIModeSupport.ab3@149> XINCLUDE "CLIModeSupport.ab3"
000235CC <CLIModeSupport.ab3@152> XINCLUDE "CLIModeSupport.ab3"
000235D2 <CLIModeSupport.ab3@153> XINCLUDE "CLIModeSupport.ab3"
000235F2 <CLIModeSupport.ab3@154> XINCLUDE "CLIModeSupport.ab3"
000235FC <CLIModeSupport.ab3@155> XINCLUDE "CLIModeSupport.ab3"
00023600 <CLIModeSupport.ab3@156> XINCLUDE "CLIModeSupport.ab3"
00023602 <CLIModeSupport.ab3@157> XINCLUDE "CLIModeSupport.ab3"
00023620 <CLIModeSupport.ab3@158> XINCLUDE "CLIModeSupport.ab3"
00023622 <CLIModeSupport.ab3@159> XINCLUDE "CLIModeSupport.ab3"
00023628 <CLIModeSupport.ab3@160> XINCLUDE "CLIModeSupport.ab3"
0002362E <CLIModeSupport.ab3@161> XINCLUDE "CLIModeSupport.ab3"
00023658 <CLIModeSupport.ab3@163> XINCLUDE "CLIModeSupport.ab3"
0002365A <CLIModeSupport.ab3@164> XINCLUDE "CLIModeSupport.ab3"
00023688 <CLIModeSupport.ab3@165> XINCLUDE "CLIModeSupport.ab3"
0002368C <CLIModeSupport.ab3@166> XINCLUDE "CLIModeSupport.ab3"
000236BA <CLIModeSupport.ab3@167> XINCLUDE "CLIModeSupport.ab3"
000236BE <CLIModeSupport.ab3@168> XINCLUDE "CLIModeSupport.ab3"
000236E4 <CLIModeSupport.ab3@170> XINCLUDE "CLIModeSupport.ab3"
000236F4 <CLIModeSupport.ab3@171> XINCLUDE "CLIModeSupport.ab3"
000236FA <CLIModeSupport.ab3@172> XINCLUDE "CLIModeSupport.ab3"
00023700 <CLIModeSupport.ab3@173> XINCLUDE "CLIModeSupport.ab3"
0002372E <CLIModeSupport.ab3@174> XINCLUDE "CLIModeSupport.ab3"
00023738 <CLIModeSupport.ab3@176> XINCLUDE "CLIModeSupport.ab3"
00023752 <CLIModeSupport.ab3@177> XINCLUDE "CLIModeSupport.ab3"
00023770 <CLIModeSupport.ab3@189> XINCLUDE "CLIModeSupport.ab3"
00023778 <CLIModeSupport.ab3@190> XINCLUDE "CLIModeSupport.ab3"
0002377E <CLIModeSupport.ab3@191> XINCLUDE "CLIModeSupport.ab3"
00023784 <CLIModeSupport.ab3@192> XINCLUDE "CLIModeSupport.ab3"
000237A6 <CLIModeSupport.ab3@193> XINCLUDE "CLIModeSupport.ab3"
000237BE <CLIModeSupport.ab3@195> XINCLUDE "CLIModeSupport.ab3"
000237E4 <CLIModeSupport.ab3@196> XINCLUDE "CLIModeSupport.ab3"
0002380E <CLIModeSupport.ab3@197> XINCLUDE "CLIModeSupport.ab3"
0002381C <CLIModeSupport.ab3@198> XINCLUDE "CLIModeSupport.ab3"
00023822 <CLIModeSupport.ab3@199> XINCLUDE "CLIModeSupport.ab3"
00023836 <CLIModeSupport.ab3@200> XINCLUDE "CLIModeSupport.ab3"
0002384E <CLIModeSupport.ab3@202> XINCLUDE "CLIModeSupport.ab3"
0002385C <CLIModeSupport.ab3@203> XINCLUDE "CLIModeSupport.ab3"
00023870 <CLIModeSupport.ab3@204> XINCLUDE "CLIModeSupport.ab3"
000238AC <CLIModeSupport.ab3@205> XINCLUDE "CLIModeSupport.ab3"
000238BA <CLIModeSupport.ab3@206> XINCLUDE "CLIModeSupport.ab3"
000238EA <CLIModeSupport.ab3@207> XINCLUDE "CLIModeSupport.ab3"
000238F8 <CLIModeSupport.ab3@208> XINCLUDE "CLIModeSupport.ab3"
000238FE <CLIModeSupport.ab3@209> XINCLUDE "CLIModeSupport.ab3"
0002390C <CLIModeSupport.ab3@210> XINCLUDE "CLIModeSupport.ab3"
00023912 <CLIModeSupport.ab3@211> XINCLUDE "CLIModeSupport.ab3"
00023918 <CLIModeSupport.ab3@213> XINCLUDE "CLIModeSupport.ab3"
00023926 <CLIModeSupport.ab3@214> XINCLUDE "CLIModeSupport.ab3"
00023928 <CLIModeSupport.ab3@215> XINCLUDE "CLIModeSupport.ab3"
0002392E <CLIModeSupport.ab3@217> XINCLUDE "CLIModeSupport.ab3"
00023944 <CLIModeSupport.ab3@219> XINCLUDE "CLIModeSupport.ab3"
0002394E <CLIModeSupport.ab3@220> XINCLUDE "CLIModeSupport.ab3"
00023954 <CLIModeSupport.ab3@221> XINCLUDE "CLIModeSupport.ab3"
0002397E <CLIModeSupport.ab3@225> XINCLUDE "CLIModeSupport.ab3"
000239BC <CLIModeSupport.ab3@226> XINCLUDE "CLIModeSupport.ab3"
000239C0 <CLIModeSupport.ab3@227> XINCLUDE "CLIModeSupport.ab3"
000239FE <CLIModeSupport.ab3@228> XINCLUDE "CLIModeSupport.ab3"
00023A02 <CLIModeSupport.ab3@229> XINCLUDE "CLIModeSupport.ab3"
00023A40 <CLIModeSupport.ab3@230> XINCLUDE "CLIModeSupport.ab3"
00023A44 <CLIModeSupport.ab3@231> XINCLUDE "CLIModeSupport.ab3"
00023A4C <CLIModeSupport.ab3@233> XINCLUDE "CLIModeSupport.ab3"
00023A54 <CLIModeSupport.ab3@234> XINCLUDE "CLIModeSupport.ab3"
00023A98 <CLIModeSupport.ab3@236> XINCLUDE "CLIModeSupport.ab3"
00023AAA <CLIModeSupport.ab3@237> XINCLUDE "CLIModeSupport.ab3"
00023AB8 <CLIModeSupport.ab3@238> XINCLUDE "CLIModeSupport.ab3"
00023AEC <CLIModeSupport.ab3@239> XINCLUDE "CLIModeSupport.ab3"
00023B10 <CLIModeSupport.ab3@241> XINCLUDE "CLIModeSupport.ab3"
00023B1A <CLIModeSupport.ab3@242> XINCLUDE "CLIModeSupport.ab3"
00023B34 <CLIModeSupport.ab3@243> XINCLUDE "CLIModeSupport.ab3"
00023B48 <CLIModeSupport.ab3@244> XINCLUDE "CLIModeSupport.ab3"
00023BA0 <CLIModeSupport.ab3@245> XINCLUDE "CLIModeSupport.ab3"
00023C46 <CLIModeSupport.ab3@246> XINCLUDE "CLIModeSupport.ab3"
00023C4E <CLIModeSupport.ab3@247> XINCLUDE "CLIModeSupport.ab3"
00023C86 <CLIModeSupport.ab3@248> XINCLUDE "CLIModeSupport.ab3"
00023C8C <CLIModeSupport.ab3@249> XINCLUDE "CLIModeSupport.ab3"
00023C9C <CLIModeSupport.ab3@250> XINCLUDE "CLIModeSupport.ab3"
00023CC4 <CLIModeSupport.ab3@253> XINCLUDE "CLIModeSupport.ab3"
00023CEC <CLIModeSupport.ab3@254> XINCLUDE "CLIModeSupport.ab3"
00023CF4 <CLIModeSupport.ab3@255> XINCLUDE "CLIModeSupport.ab3"
00023CFA <CLIModeSupport.ab3@256> XINCLUDE "CLIModeSupport.ab3"
00023D02 <CLIModeSupport.ab3@257> XINCLUDE "CLIModeSupport.ab3"
00023D2A <CLIModeSupport.ab3@258> XINCLUDE "CLIModeSupport.ab3"
00023D32 <CLIModeSupport.ab3@259> XINCLUDE "CLIModeSupport.ab3"
00023D3A <CLIModeSupport.ab3@260> XINCLUDE "CLIModeSupport.ab3"
00023D40 <CLIModeSupport.ab3@261> XINCLUDE "CLIModeSupport.ab3"
00023D46 <CLIModeSupport.ab3@262> XINCLUDE "CLIModeSupport.ab3"
00023D4C <CLIModeSupport.ab3@263> XINCLUDE "CLIModeSupport.ab3"
00023D52 <CLIModeSupport.ab3@264> XINCLUDE "CLIModeSupport.ab3"
00023D58 <CLIModeSupport.ab3@265> XINCLUDE "CLIModeSupport.ab3"
00023D5E <CLIModeSupport.ab3@266> XINCLUDE "CLIModeSupport.ab3"
00023D64 <CLIModeSupport.ab3@267> XINCLUDE "CLIModeSupport.ab3"
00023D6A <CLIModeSupport.ab3@268> XINCLUDE "CLIModeSupport.ab3"
00023D72 <CLIModeSupport.ab3@269> XINCLUDE "CLIModeSupport.ab3"
00023D7A <CLIModeSupport.ab3@270> XINCLUDE "CLIModeSupport.ab3"
00023DA2 <CLIModeSupport.ab3@271> XINCLUDE "CLIModeSupport.ab3"
00023DA8 <CLIModeSupport.ab3@272> XINCLUDE "CLIModeSupport.ab3"
00023DAE <CLIModeSupport.ab3@273> XINCLUDE "CLIModeSupport.ab3"
00023DB6 <CLIModeSupport.ab3@274> XINCLUDE "CLIModeSupport.ab3"
00023DD6 <CLIModeSupport.ab3@278> XINCLUDE "CLIModeSupport.ab3"
00023DE6 <CLIModeSupport.ab3@280> XINCLUDE "CLIModeSupport.ab3"
00023DF6 <CLIModeSupport.ab3@281> XINCLUDE "CLIModeSupport.ab3"
00023E06 <CLIModeSupport.ab3@283> XINCLUDE "CLIModeSupport.ab3"
00023E16 <CLIModeSupport.ab3@284> XINCLUDE "CLIModeSupport.ab3"
00023E26 <CLIModeSupport.ab3@285> XINCLUDE "CLIModeSupport.ab3"
00023E36 <CLIModeSupport.ab3@286> XINCLUDE "CLIModeSupport.ab3"
00023E46 <CLIModeSupport.ab3@287> XINCLUDE "CLIModeSupport.ab3"
00023E56 <CLIModeSupport.ab3@288> XINCLUDE "CLIModeSupport.ab3"
00023E66 <CLIModeSupport.ab3@289> XINCLUDE "CLIModeSupport.ab3"
00023E76 <CLIModeSupport.ab3@290> XINCLUDE "CLIModeSupport.ab3"
00023E86 <CLIModeSupport.ab3@291> XINCLUDE "CLIModeSupport.ab3"
00023E96 <CLIModeSupport.ab3@292> XINCLUDE "CLIModeSupport.ab3"
00023EA6 <CLIModeSupport.ab3@293> XINCLUDE "CLIModeSupport.ab3"
00023EB6 <CLIModeSupport.ab3@294> XINCLUDE "CLIModeSupport.ab3"
00023EC6 <CLIModeSupport.ab3@295> XINCLUDE "CLIModeSupport.ab3"
00023ED6 <CLIModeSupport.ab3@296> XINCLUDE "CLIModeSupport.ab3"
00023EE8 <CLIModeSupport.ab3@298> XINCLUDE "CLIModeSupport.ab3"
00023EFA <CLIModeSupport.ab3@299> XINCLUDE "CLIModeSupport.ab3"
00023F0C <CLIModeSupport.ab3@300> XINCLUDE "CLIModeSupport.ab3"
00023F1E <CLIModeSupport.ab3@301> XINCLUDE "CLIModeSupport.ab3"
00023F30 <CLIModeSupport.ab3@302> XINCLUDE "CLIModeSupport.ab3"
00023F42 <CLIModeSupport.ab3@303> XINCLUDE "CLIModeSupport.ab3"
00023F54 <CLIModeSupport.ab3@305> XINCLUDE "CLIModeSupport.ab3"
00023F66 <CLIModeSupport.ab3@306> XINCLUDE "CLIModeSupport.ab3"
00023F9A <CLIModeSupport.ab3@309> XINCLUDE "CLIModeSupport.ab3"
00023FB2 <CLIModeSupport.ab3@310> XINCLUDE "CLIModeSupport.ab3"
00023FFE <CLIModeSupport.ab3@311> XINCLUDE "CLIModeSupport.ab3"
00024010 <CLIModeSupport.ab3@312> XINCLUDE "CLIModeSupport.ab3"
00024066 <CLIModeSupport.ab3@313> XINCLUDE "CLIModeSupport.ab3"
000240D8 <CLIModeSupport.ab3@314> XINCLUDE "CLIModeSupport.ab3"
000240DE <CLIModeSupport.ab3@315> XINCLUDE "CLIModeSupport.ab3"
00024112 <CLIModeSupport.ab3@316> XINCLUDE "CLIModeSupport.ab3"
0002413A <CLIModeSupport.ab3@317> XINCLUDE "CLIModeSupport.ab3"
00024162 <CLIModeSupport.ab3@319> XINCLUDE "CLIModeSupport.ab3"
0002419C <CLIModeSupport.ab3@320> XINCLUDE "CLIModeSupport.ab3"
000241B4 <CLIModeSupport.ab3@321> XINCLUDE "CLIModeSupport.ab3"
00024252 <CLIModeSupport.ab3@322> XINCLUDE "CLIModeSupport.ab3"
0002426C <CLIModeSupport.ab3@323> XINCLUDE "CLIModeSupport.ab3"
000242BA <CLIModeSupport.ab3@324> XINCLUDE "CLIModeSupport.ab3"
000242CA <CLIModeSupport.ab3@326> XINCLUDE "CLIModeSupport.ab3"
000242D2 <CLIModeSupport.ab3@328> XINCLUDE "CLIModeSupport.ab3"
000242E6 <CLIModeSupport.ab3@329> XINCLUDE "CLIModeSupport.ab3"
0002432C <CLIModeSupport.ab3@330> XINCLUDE "CLIModeSupport.ab3"
00024332 <CLIModeSupport.ab3@331> XINCLUDE "CLIModeSupport.ab3"
0002437C <CLIModeSupport.ab3@332> XINCLUDE "CLIModeSupport.ab3"
000243E6 <CLIModeSupport.ab3@333> XINCLUDE "CLIModeSupport.ab3"
0002444C <CLIModeSupport.ab3@334> XINCLUDE "CLIModeSupport.ab3"
00024480 <CLIModeSupport.ab3@335> XINCLUDE "CLIModeSupport.ab3"
000244AC <CLIModeSupport.ab3@337> XINCLUDE "CLIModeSupport.ab3"
000244FA <CLIModeSupport.ab3@338> XINCLUDE "CLIModeSupport.ab3"
0002451E <CLIModeSupport.ab3@339> XINCLUDE "CLIModeSupport.ab3"
00024524 <CLIModeSupport.ab3@340> XINCLUDE "CLIModeSupport.ab3"
00024532 <CLIModeSupport.ab3@342> XINCLUDE "CLIModeSupport.ab3"
00024590 <CLIModeSupport.ab3@344> XINCLUDE "CLIModeSupport.ab3"
000245EE <CLIModeSupport.ab3@345> XINCLUDE "CLIModeSupport.ab3"
00024618 <CLIModeSupport.ab3@346> XINCLUDE "CLIModeSupport.ab3"
00024622 <CLIModeSupport.ab3@347> XINCLUDE "CLIModeSupport.ab3"
0002462A <CLIModeSupport.ab3@348> XINCLUDE "CLIModeSupport.ab3"
00024668 <CLIModeSupport.ab3@349> XINCLUDE "CLIModeSupport.ab3"
000246B4 <CLIModeSupport.ab3@350> XINCLUDE "CLIModeSupport.ab3"
000246C6 <CLIModeSupport.ab3@351> XINCLUDE "CLIModeSupport.ab3"
0002471C <CLIModeSupport.ab3@352> XINCLUDE "CLIModeSupport.ab3"
00024794 <CLIModeSupport.ab3@353> XINCLUDE "CLIModeSupport.ab3"
0002479A <CLIModeSupport.ab3@354> XINCLUDE "CLIModeSupport.ab3"
000247CE <CLIModeSupport.ab3@355> XINCLUDE "CLIModeSupport.ab3"
000247F6 <CLIModeSupport.ab3@356> XINCLUDE "CLIModeSupport.ab3"
0002482C <CLIModeSupport.ab3@359> XINCLUDE "CLIModeSupport.ab3"
0002483A <CLIModeSupport.ab3@360> XINCLUDE "CLIModeSupport.ab3"
00024848 <CLIModeSupport.ab3@361> XINCLUDE "CLIModeSupport.ab3"
000248B0 <CLIModeSupport.ab3@362> XINCLUDE "CLIModeSupport.ab3"
000248B6 <CLIModeSupport.ab3@363> XINCLUDE "CLIModeSupport.ab3"
00024900 <CLIModeSupport.ab3@364> XINCLUDE "CLIModeSupport.ab3"
0002494A <CLIModeSupport.ab3@365> XINCLUDE "CLIModeSupport.ab3"
0002497A <CLIModeSupport.ab3@366> XINCLUDE "CLIModeSupport.ab3"
000249A4 <CLIModeSupport.ab3@367> XINCLUDE "CLIModeSupport.ab3"
000249F6 <CLIModeSupport.ab3@368> XINCLUDE "CLIModeSupport.ab3"
00024A4C <CLIModeSupport.ab3@369> XINCLUDE "CLIModeSupport.ab3"
00024A9C <CLIModeSupport.ab3@370> XINCLUDE "CLIModeSupport.ab3"
00024B02 <CLIModeSupport.ab3@371> XINCLUDE "CLIModeSupport.ab3"
00024B6E <CLIModeSupport.ab3@372> XINCLUDE "CLIModeSupport.ab3"
00024B9A <CLIModeSupport.ab3@373> XINCLUDE "CLIModeSupport.ab3"
00024BCA <CLIModeSupport.ab3@374> XINCLUDE "CLIModeSupport.ab3"
00024C46 <CLIModeSupport.ab3@375> XINCLUDE "CLIModeSupport.ab3"
00024C76 <CLIModeSupport.ab3@376> XINCLUDE "CLIModeSupport.ab3"
00024CA6 <CLIModeSupport.ab3@377> XINCLUDE "CLIModeSupport.ab3"
00024CD6 <CLIModeSupport.ab3@378> XINCLUDE "CLIModeSupport.ab3"
00024D06 <CLIModeSupport.ab3@379> XINCLUDE "CLIModeSupport.ab3"
00024D36 <CLIModeSupport.ab3@380> XINCLUDE "CLIModeSupport.ab3"
00024D66 <CLIModeSupport.ab3@381> XINCLUDE "CLIModeSupport.ab3"
00024D96 <CLIModeSupport.ab3@382> XINCLUDE "CLIModeSupport.ab3"
00024DC6 <CLIModeSupport.ab3@383> XINCLUDE "CLIModeSupport.ab3"
00024DF6 <CLIModeSupport.ab3@384> XINCLUDE "CLIModeSupport.ab3"
00024E26 <CLIModeSupport.ab3@385> XINCLUDE "CLIModeSupport.ab3"
00024EA2 <CLIModeSupport.ab3@386> XINCLUDE "CLIModeSupport.ab3"
00024ED4 <CLIModeSupport.ab3@387> XINCLUDE "CLIModeSupport.ab3"
00024F06 <CLIModeSupport.ab3@388> XINCLUDE "CLIModeSupport.ab3"
00024F36 <CLIModeSupport.ab3@389> XINCLUDE "CLIModeSupport.ab3"
00024F3C <CLIModeSupport.ab3@390> XINCLUDE "CLIModeSupport.ab3"
00024FB0 <CLIModeSupport.ab3@391> XINCLUDE "CLIModeSupport.ab3"
0002501C <CLIModeSupport.ab3@392> XINCLUDE "CLIModeSupport.ab3"
0002502E <CLIModeSupport.ab3@393> XINCLUDE "CLIModeSupport.ab3"
0002505C <CLIModeSupport.ab3@394> XINCLUDE "CLIModeSupport.ab3"
00025084 <CLIModeSupport.ab3@395> XINCLUDE "CLIModeSupport.ab3"
00025098 <CLIModeSupport.ab3@396> XINCLUDE "CLIModeSupport.ab3"
000250C2 <CLIModeSupport.ab3@397> XINCLUDE "CLIModeSupport.ab3"
00025106 <CLIModeSupport.ab3@398> XINCLUDE "CLIModeSupport.ab3"
00025116 <CLIModeSupport.ab3@399> XINCLUDE "CLIModeSupport.ab3"
00025126 <CLIModeSupport.ab3@400> XINCLUDE "CLIModeSupport.ab3"
0002512C <CLIModeSupport.ab3@401> XINCLUDE "CLIModeSupport.ab3"
0002513C <CLIModeSupport.ab3@403> XINCLUDE "CLIModeSupport.ab3"
0002514A <CLIModeSupport.ab3@407> XINCLUDE "CLIModeSupport.ab3"
00025154 <CLIModeSupport.ab3@410> XINCLUDE "CLIModeSupport.ab3"
0002518C <CLIModeSupport.ab3@413> XINCLUDE "CLIModeSupport.ab3"
000251C4 <CLIModeSupport.ab3@414> XINCLUDE "CLIModeSupport.ab3"
000251FC <CLIModeSupport.ab3@415> XINCLUDE "CLIModeSupport.ab3"
0002520C <CLIModeSupport.ab3@416> XINCLUDE "CLIModeSupport.ab3"
00025274 <CLIModeSupport.ab3@417> XINCLUDE "CLIModeSupport.ab3"
000252AC <CLIModeSupport.ab3@418> XINCLUDE "CLIModeSupport.ab3"
000252BC <CLIModeSupport.ab3@419> XINCLUDE "CLIModeSupport.ab3"
000252CC <CLIModeSupport.ab3@420> XINCLUDE "CLIModeSupport.ab3"
00025334 <CLIModeSupport.ab3@421> XINCLUDE "CLIModeSupport.ab3"
0002539C <CLIModeSupport.ab3@422> XINCLUDE "CLIModeSupport.ab3"
00025404 <CLIModeSupport.ab3@423> XINCLUDE "CLIModeSupport.ab3"
0002546C <CLIModeSupport.ab3@424> XINCLUDE "CLIModeSupport.ab3"
000254D4 <CLIModeSupport.ab3@425> XINCLUDE "CLIModeSupport.ab3"
0002553C <CLIModeSupport.ab3@426> XINCLUDE "CLIModeSupport.ab3"
000255A4 <CLIModeSupport.ab3@427> XINCLUDE "CLIModeSupport.ab3"
0002560C <CLIModeSupport.ab3@428> XINCLUDE "CLIModeSupport.ab3"
0002561C <CLIModeSupport.ab3@429> XINCLUDE "CLIModeSupport.ab3"
00025654 <CLIModeSupport.ab3@431> XINCLUDE "CLIModeSupport.ab3"
0002568E <CLIModeSupport.ab3@432> XINCLUDE "CLIModeSupport.ab3"
000256C8 <CLIModeSupport.ab3@433> XINCLUDE "CLIModeSupport.ab3"
00025700 <CLIModeSupport.ab3@434> XINCLUDE "CLIModeSupport.ab3"
00025726 <CLIModeSupport.ab3@437> XINCLUDE "CLIModeSupport.ab3"
0002572E <CLIModeSupport.ab3@440> XINCLUDE "CLIModeSupport.ab3"
00025736 <CLIModeSupport.ab3@442> XINCLUDE "CLIModeSupport.ab3"
0002573E <CLIModeSupport.ab3@443> XINCLUDE "CLIModeSupport.ab3"
00025746 <CLIModeSupport.ab3@445> XINCLUDE "CLIModeSupport.ab3"
0002575A <CLIModeSupport.ab3@446> XINCLUDE "CLIModeSupport.ab3"
00025788 <CLIModeSupport.ab3@447> XINCLUDE "CLIModeSupport.ab3"
000257A2 <CLIModeSupport.ab3@448> XINCLUDE "CLIModeSupport.ab3"
000257B0 <CLIModeSupport.ab3@449> XINCLUDE "CLIModeSupport.ab3"
0002581C <CLIModeSupport.ab3@450> XINCLUDE "CLIModeSupport.ab3"
00025842 <CLIModeSupport.ab3@451> XINCLUDE "CLIModeSupport.ab3"
0002585E <CLIModeSupport.ab3@452> XINCLUDE "CLIModeSupport.ab3"
00025868 <CLIModeSupport.ab3@453> XINCLUDE "CLIModeSupport.ab3"
00025872 <CLIModeSupport.ab3@454> XINCLUDE "CLIModeSupport.ab3"
0002587E <CLIModeSupport.ab3@455> XINCLUDE "CLIModeSupport.ab3"
0002588C <CLIModeSupport.ab3@456> XINCLUDE "CLIModeSupport.ab3"
00025898 <CLIModeSupport.ab3@457> XINCLUDE "CLIModeSupport.ab3"
000258D4 <CLIModeSupport.ab3@458> XINCLUDE "CLIModeSupport.ab3"
000258EE <CLIModeSupport.ab3@459> XINCLUDE "CLIModeSupport.ab3"
000258FC <CLIModeSupport.ab3@460> XINCLUDE "CLIModeSupport.ab3"
0002591C <CLIModeSupport.ab3@461> XINCLUDE "CLIModeSupport.ab3"
0002592A <CLIModeSupport.ab3@462> XINCLUDE "CLIModeSupport.ab3"
00025938 <CLIModeSupport.ab3@463> XINCLUDE "CLIModeSupport.ab3"
0002593E <CLIModeSupport.ab3@465> XINCLUDE "CLIModeSupport.ab3"
0002594E <CLIModeSupport.ab3@466> XINCLUDE "CLIModeSupport.ab3"
00025952 <CLIModeSupport.ab3@468> XINCLUDE "CLIModeSupport.ab3"
00025986 <CLIModeSupport.ab3@469> XINCLUDE "CLIModeSupport.ab3"
000259BA <CLIModeSupport.ab3@470> XINCLUDE "CLIModeSupport.ab3"
000259BE <CLIModeSupport.ab3@471> XINCLUDE "CLIModeSupport.ab3"
000259F2 <CLIModeSupport.ab3@472> XINCLUDE "CLIModeSupport.ab3"
000259F6 <CLIModeSupport.ab3@473> XINCLUDE "CLIModeSupport.ab3"
00025A2A <CLIModeSupport.ab3@474> XINCLUDE "CLIModeSupport.ab3"
00025A30 <CLIModeSupport.ab3@475> XINCLUDE "CLIModeSupport.ab3"
00025A66 <CLIModeSupport.ab3@477> XINCLUDE "CLIModeSupport.ab3"
00025A9C <CLIModeSupport.ab3@478> XINCLUDE "CLIModeSupport.ab3"
00025AD2 <CLIModeSupport.ab3@479> XINCLUDE "CLIModeSupport.ab3"
00025B0A <CLIModeSupport.ab3@480> XINCLUDE "CLIModeSupport.ab3"
00025B42 <CLIModeSupport.ab3@481> XINCLUDE "CLIModeSupport.ab3"
00025BE8 <CLIModeSupport.ab3@483> XINCLUDE "CLIModeSupport.ab3"
00025C28 <CLIModeSupport.ab3@484> XINCLUDE "CLIModeSupport.ab3"
00025C60 <CLIModeSupport.ab3@487> XINCLUDE "CLIModeSupport.ab3"
00025C7E <CLIModeSupport.ab3@488> XINCLUDE "CLIModeSupport.ab3"
00025C82 <CLIModeSupport.ab3@489> XINCLUDE "CLIModeSupport.ab3"
00025C88 <CLIModeSupport.ab3@490> XINCLUDE "CLIModeSupport.ab3"
00025C8E <CLIModeSupport.ab3@491> XINCLUDE "CLIModeSupport.ab3"
00025C92 <CLIModeSupport.ab3@492> XINCLUDE "CLIModeSupport.ab3"
00025CBC <CLIModeSupport.ab3@493> XINCLUDE "CLIModeSupport.ab3"
00025CD0 <CLIModeSupport.ab3@497> XINCLUDE "CLIModeSupport.ab3"
00025D0E <CLIModeSupport.ab3@498> XINCLUDE "CLIModeSupport.ab3"
00025D42 <CLIModeSupport.ab3@499> XINCLUDE "CLIModeSupport.ab3"
00025D78 <CLIModeSupport.ab3@503> XINCLUDE "CLIModeSupport.ab3"
00025DD0 <CLIModeSupport.ab3@505> XINCLUDE "CLIModeSupport.ab3"
00025DFE <CLIModeSupport.ab3@506> XINCLUDE "CLIModeSupport.ab3"
00025E02 <CLIModeSupport.ab3@507> XINCLUDE "CLIModeSupport.ab3"
00025E38 <CLIModeSupport.ab3@508> XINCLUDE "CLIModeSupport.ab3"
00025E66 <CLIModeSupport.ab3@509> XINCLUDE "CLIModeSupport.ab3"
00025E94 <CLIModeSupport.ab3@511> XINCLUDE "CLIModeSupport.ab3"
00025E98 <CLIModeSupport.ab3@512> XINCLUDE "CLIModeSupport.ab3"
00025ECE <CLIModeSupport.ab3@513> XINCLUDE "CLIModeSupport.ab3"
00025EFC <CLIModeSupport.ab3@515> XINCLUDE "CLIModeSupport.ab3"
00025F00 <CLIModeSupport.ab3@516> XINCLUDE "CLIModeSupport.ab3"
00025F64 <CLIModeSupport.ab3@517> XINCLUDE "CLIModeSupport.ab3"
00025F6A <CLIModeSupport.ab3@520> XINCLUDE "CLIModeSupport.ab3"
00025F98 <CLIModeSupport.ab3@521> XINCLUDE "CLIModeSupport.ab3"
00025FA2 <CLIModeSupport.ab3@524> XINCLUDE "CLIModeSupport.ab3"
00025FAC <CLIModeSupport.ab3@526> XINCLUDE "CLIModeSupport.ab3"
00025FC6 <CLIModeSupport.ab3@527> XINCLUDE "CLIModeSupport.ab3"
00025FF0 <CLIModeSupport.ab3@530> XINCLUDE "CLIModeSupport.ab3"
00025FF6 <CLIModeSupport.ab3@531> XINCLUDE "CLIModeSupport.ab3"
00026016 <CLIModeSupport.ab3@532> XINCLUDE "CLIModeSupport.ab3"
00026020 <CLIModeSupport.ab3@533> XINCLUDE "CLIModeSupport.ab3"
00026024 <CLIModeSupport.ab3@534> XINCLUDE "CLIModeSupport.ab3"
00026026 <CLIModeSupport.ab3@535> XINCLUDE "CLIModeSupport.ab3"
00026044 <CLIModeSupport.ab3@536> XINCLUDE "CLIModeSupport.ab3"
00026046 <CLIModeSupport.ab3@537> XINCLUDE "CLIModeSupport.ab3"
0002604C <CLIModeSupport.ab3@538> XINCLUDE "CLIModeSupport.ab3"
00026052 <CLIModeSupport.ab3@540> XINCLUDE "CLIModeSupport.ab3"
0002607C <CLIModeSupport.ab3@541> XINCLUDE "CLIModeSupport.ab3"
0002607E <CLIModeSupport.ab3@542> XINCLUDE "CLIModeSupport.ab3"
000260AC <CLIModeSupport.ab3@543> XINCLUDE "CLIModeSupport.ab3"
000260B0 <CLIModeSupport.ab3@544> XINCLUDE "CLIModeSupport.ab3"
000260DE <CLIModeSupport.ab3@545> XINCLUDE "CLIModeSupport.ab3"
000260E2 <CLIModeSupport.ab3@546> XINCLUDE "CLIModeSupport.ab3"
00026108 <CLIModeSupport.ab3@547> XINCLUDE "CLIModeSupport.ab3"
00026118 <CLIModeSupport.ab3@548> XINCLUDE "CLIModeSupport.ab3"
0002611E <CLIModeSupport.ab3@549> XINCLUDE "CLIModeSupport.ab3"
00026124 <CLIModeSupport.ab3@550> XINCLUDE "CLIModeSupport.ab3"
00026152 <CLIModeSupport.ab3@551> XINCLUDE "CLIModeSupport.ab3"
0002615C <CLIModeSupport.ab3@553> XINCLUDE "CLIModeSupport.ab3"
00026176 <CLIModeSupport.ab3@554> XINCLUDE "CLIModeSupport.ab3"
0002618C <CLIModeSupport.ab3@557> XINCLUDE "CLIModeSupport.ab3"
000261B6 <CLIModeSupport.ab3@558> XINCLUDE "CLIModeSupport.ab3"
000261E4 <CLIModeSupport.ab3@559> XINCLUDE "CLIModeSupport.ab3"
000261F8 <CLIModeSupport.ab3@561> XINCLUDE "CLIModeSupport.ab3"
00026234 <CLIModeSupport.ab3@562> XINCLUDE "CLIModeSupport.ab3"
00026270 <CLIModeSupport.ab3@563> XINCLUDE "CLIModeSupport.ab3"
000262AC <CLIModeSupport.ab3@564> XINCLUDE "CLIModeSupport.ab3"
000262E8 <CLIModeSupport.ab3@565> XINCLUDE "CLIModeSupport.ab3"
00026324 <CLIModeSupport.ab3@566> XINCLUDE "CLIModeSupport.ab3"
0002632A <CLIModeSupport.ab3@567> XINCLUDE "CLIModeSupport.ab3"
00026358 <CLIModeSupport.ab3@568> XINCLUDE "CLIModeSupport.ab3"
0002635A <CLIModeSupport.ab3@571> XINCLUDE "CLIModeSupport.ab3"
00026378 <CLIModeSupport.ab3@572> XINCLUDE "CLIModeSupport.ab3"
0002637E <CLIModeSupport.ab3@573> XINCLUDE "CLIModeSupport.ab3"
000263A8 <CLIModeSupport.ab3@574> XINCLUDE "CLIModeSupport.ab3"
000263AA <CLIModeSupport.ab3@575> XINCLUDE "CLIModeSupport.ab3"
000263BC <CLIModeSupport.ab3@576> XINCLUDE "CLIModeSupport.ab3"
000263EE <CLIModeSupport.ab3@579> XINCLUDE "CLIModeSupport.ab3"
000263F8 <CLIModeSupport.ab3@580> XINCLUDE "CLIModeSupport.ab3"
00026462 <CLIModeSupport.ab3@581> XINCLUDE "CLIModeSupport.ab3"
000264CC <CLIModeSupport.ab3@582> XINCLUDE "CLIModeSupport.ab3"
00026536 <CLIModeSupport.ab3@584> XINCLUDE "CLIModeSupport.ab3"
000265A0 <CLIModeSupport.ab3@585> XINCLUDE "CLIModeSupport.ab3"
0002660A <CLIModeSupport.ab3@586> XINCLUDE "CLIModeSupport.ab3"
00026674 <CLIModeSupport.ab3@587> XINCLUDE "CLIModeSupport.ab3"
0002667A <CLIModeSupport.ab3@588> XINCLUDE "CLIModeSupport.ab3"
000266E4 <CLIModeSupport.ab3@589> XINCLUDE "CLIModeSupport.ab3"
0002674E <CLIModeSupport.ab3@590> XINCLUDE "CLIModeSupport.ab3"
00026758 <CLIModeSupport.ab3@593> XINCLUDE "CLIModeSupport.ab3"
000267C2 <CLIModeSupport.ab3@594> XINCLUDE "CLIModeSupport.ab3"
000267C8 <CLIModeSupport.ab3@595> XINCLUDE "CLIModeSupport.ab3"
00026832 <CLIModeSupport.ab3@596> XINCLUDE "CLIModeSupport.ab3"
0002683A <CLIModeSupport.ab3@599> XINCLUDE "CLIModeSupport.ab3"
00026868 <CLIModeSupport.ab3@601> XINCLUDE "CLIModeSupport.ab3"
0002686C <CLIModeSupport.ab3@602> XINCLUDE "CLIModeSupport.ab3"
00026894 <CLIModeSupport.ab3@603> XINCLUDE "CLIModeSupport.ab3"
0002689A <CLIModeSupport.ab3@606> XINCLUDE "CLIModeSupport.ab3"
000268A0 <CLIModeSupport.ab3@609> XINCLUDE "CLIModeSupport.ab3"
000268A6 <CLIModeSupport.ab3@610> XINCLUDE "CLIModeSupport.ab3"
000268AC <CLIModeSupport.ab3@611> XINCLUDE "CLIModeSupport.ab3"
000268B2 <CLIModeSupport.ab3@612> XINCLUDE "CLIModeSupport.ab3"
000268BC <CLIModeSupport.ab3@613> XINCLUDE "CLIModeSupport.ab3"
000268C6 <CLIModeSupport.ab3@614> XINCLUDE "CLIModeSupport.ab3"
000268F4 <CLIModeSupport.ab3@616> XINCLUDE "CLIModeSupport.ab3"
00026920 <CLIModeSupport.ab3@618> XINCLUDE "CLIModeSupport.ab3"
00026928 <CLIModeSupport.ab3@619> XINCLUDE "CLIModeSupport.ab3"
0002695C <CLIModeSupport.ab3@621> XINCLUDE "CLIModeSupport.ab3"
0002696E <CLIModeSupport.ab3@622> XINCLUDE "CLIModeSupport.ab3"
000269D4 <CLIModeSupport.ab3@623> XINCLUDE "CLIModeSupport.ab3"
00026A3A <CLIModeSupport.ab3@624> XINCLUDE "CLIModeSupport.ab3"
00026A40 <CLIModeSupport.ab3@625> XINCLUDE "CLIModeSupport.ab3"
00026A48 <CLIModeSupport.ab3@626> XINCLUDE "CLIModeSupport.ab3"
00026A4A <CLIModeSupport.ab3@630> XINCLUDE "CLIModeSupport.ab3"
00026A68 <CLIModeSupport.ab3@631> XINCLUDE "CLIModeSupport.ab3"
00026AA6 <CLIModeSupport.ab3@632> XINCLUDE "CLIModeSupport.ab3"
00026AE4 <CLIModeSupport.ab3@633> XINCLUDE "CLIModeSupport.ab3"
00026AEA <CLIModeSupport.ab3@635> XINCLUDE "CLIModeSupport.ab3"
00026AF0 <CLIModeSupport.ab3@636> XINCLUDE "CLIModeSupport.ab3"
00026AF6 <CLIModeSupport.ab3@637> XINCLUDE "CLIModeSupport.ab3"
00026B00 <CLIModeSupport.ab3@640> XINCLUDE "CLIModeSupport.ab3"
00026B06 <CLIModeSupport.ab3@641> XINCLUDE "CLIModeSupport.ab3"
00026B0C <CLIModeSupport.ab3@642> XINCLUDE "CLIModeSupport.ab3"
00026B12 <CLIModeSupport.ab3@643> XINCLUDE "CLIModeSupport.ab3"
00026B1C <CLIModeSupport.ab3@644> XINCLUDE "CLIModeSupport.ab3"
00026B20 <CLIModeSupport.ab3@645> XINCLUDE "CLIModeSupport.ab3"
00026B4A <CLIModeSupport.ab3@647> XINCLUDE "CLIModeSupport.ab3"
00026B4C <CLIModeSupport.ab3@648> XINCLUDE "CLIModeSupport.ab3"
00026B52 <CLIModeSupport.ab3@650> XINCLUDE "CLIModeSupport.ab3"
00026B56 <CLIModeSupport.ab3@651> XINCLUDE "CLIModeSupport.ab3"
00026B5C <CLIModeSupport.ab3@653> XINCLUDE "CLIModeSupport.ab3"
00026B60 <CLIModeSupport.ab3@654> XINCLUDE "CLIModeSupport.ab3"
00026BBA <CLIModeSupport.ab3@656> XINCLUDE "CLIModeSupport.ab3"
00026BCC <CLIModeSupport.ab3@658> XINCLUDE "CLIModeSupport.ab3"
00026BF8 <CLIModeSupport.ab3@659> XINCLUDE "CLIModeSupport.ab3"
00026C9E <CLIModeSupport.ab3@660> XINCLUDE "CLIModeSupport.ab3"
00026CBC <CLIModeSupport.ab3@661> XINCLUDE "CLIModeSupport.ab3"
00026CC2 <CLIModeSupport.ab3@662> XINCLUDE "CLIModeSupport.ab3"
00026CEC <CLIModeSupport.ab3@663> XINCLUDE "CLIModeSupport.ab3"
00026CF6 <CLIModeSupport.ab3@664> XINCLUDE "CLIModeSupport.ab3"
00026D28 <CLIModeSupport.ab3@665> XINCLUDE "CLIModeSupport.ab3"
00026D42 <CLIModeSupport.ab3@666> XINCLUDE "CLIModeSupport.ab3"
00026D56 <CLIModeSupport.ab3@671> XINCLUDE "CLIModeSupport.ab3"
00026D60 <CLIModeSupport.ab3@673> XINCLUDE "CLIModeSupport.ab3"
00026D7A <CLIModeSupport.ab3@674> XINCLUDE "CLIModeSupport.ab3"
00026DA4 <CLIModeSupport.ab3@678> XINCLUDE "CLIModeSupport.ab3"
00026DC8 <CLIModeSupport.ab3@679> XINCLUDE "CLIModeSupport.ab3"
00026E06 <CLIModeSupport.ab3@680> XINCLUDE "CLIModeSupport.ab3"
00026E0A <CLIModeSupport.ab3@681> XINCLUDE "CLIModeSupport.ab3"
00026E48 <CLIModeSupport.ab3@683> XINCLUDE "CLIModeSupport.ab3"
00026E4C <CLIModeSupport.ab3@684> XINCLUDE "CLIModeSupport.ab3"
00026E8A <CLIModeSupport.ab3@687> XINCLUDE "CLIModeSupport.ab3"
00026EC8 <CLIModeSupport.ab3@688> XINCLUDE "CLIModeSupport.ab3"
00026ECA <CLIModeSupport.ab3@689> XINCLUDE "CLIModeSupport.ab3"
00026EFE <CLIModeSupport.ab3@690> XINCLUDE "CLIModeSupport.ab3"
00026F04 <CLIModeSupport.ab3@692> XINCLUDE "CLIModeSupport.ab3"
00026F48 <CLIModeSupport.ab3@693> XINCLUDE "CLIModeSupport.ab3"
00026F5A <CLIModeSupport.ab3@694> XINCLUDE "CLIModeSupport.ab3"
00026F62 <CLIModeSupport.ab3@696> XINCLUDE "CLIModeSupport.ab3"
00026F68 <CLIModeSupport.ab3@697> XINCLUDE "CLIModeSupport.ab3"
00026F72 <CLIModeSupport.ab3@699> XINCLUDE "CLIModeSupport.ab3"
00026F80 <CLIModeSupport.ab3@700> XINCLUDE "CLIModeSupport.ab3"
00026F86 <CLIModeSupport.ab3@701> XINCLUDE "CLIModeSupport.ab3"
00026FAE <CLIModeSupport.ab3@702> XINCLUDE "CLIModeSupport.ab3"
00026FC8 <CLIModeSupport.ab3@703> XINCLUDE "CLIModeSupport.ab3"
00026FD2 <CLIModeSupport.ab3@704> XINCLUDE "CLIModeSupport.ab3"
00026FD8 <CLIModeSupport.ab3@705> XINCLUDE "CLIModeSupport.ab3"
00026FF6 <CLIModeSupport.ab3@707> XINCLUDE "CLIModeSupport.ab3"
00027000 <CLIModeSupport.ab3@708> XINCLUDE "CLIModeSupport.ab3"
00027006 <CLIModeSupport.ab3@709> XINCLUDE "CLIModeSupport.ab3"
0002700C <CLIModeSupport.ab3@710> XINCLUDE "CLIModeSupport.ab3"
00027016 <CLIModeSupport.ab3@711> XINCLUDE "CLIModeSupport.ab3"
00027024 <CLIModeSupport.ab3@712> XINCLUDE "CLIModeSupport.ab3"
0002702A <CLIModeSupport.ab3@713> XINCLUDE "CLIModeSupport.ab3"
0002703A <CLIModeSupport.ab3@715> XINCLUDE "CLIModeSupport.ab3"
00027066 <CLIModeSupport.ab3@716> XINCLUDE "CLIModeSupport.ab3"
0002707C <CLIModeSupport.ab3@717> XINCLUDE "CLIModeSupport.ab3"
00027086 <CLIModeSupport.ab3@718> XINCLUDE "CLIModeSupport.ab3"
0002708C <CLIModeSupport.ab3@719> XINCLUDE "CLIModeSupport.ab3"
000270E4 <CLIModeSupport.ab3@721> XINCLUDE "CLIModeSupport.ab3"
00027156 <CLIModeSupport.ab3@723> XINCLUDE "CLIModeSupport.ab3"
0002716E <CLIModeSupport.ab3@724> XINCLUDE "CLIModeSupport.ab3"
00027174 <CLIModeSupport.ab3@725> XINCLUDE "CLIModeSupport.ab3"
000271AC <CLIModeSupport.ab3@726> XINCLUDE "CLIModeSupport.ab3"
000271DA <CLIModeSupport.ab3@728> XINCLUDE "CLIModeSupport.ab3"
00027204 <CLIModeSupport.ab3@729> XINCLUDE "CLIModeSupport.ab3"
0002720E <CLIModeSupport.ab3@731> XINCLUDE "CLIModeSupport.ab3"
00027236 <CLIModeSupport.ab3@732> XINCLUDE "CLIModeSupport.ab3"
00027260 <CLIModeSupport.ab3@733> XINCLUDE "CLIModeSupport.ab3"
00027302 <CLIModeSupport.ab3@734> XINCLUDE "CLIModeSupport.ab3"
00027310 <CLIModeSupport.ab3@735> XINCLUDE "CLIModeSupport.ab3"
00027360 <CLIModeSupport.ab3@736> XINCLUDE "CLIModeSupport.ab3"
00027370 <CLIModeSupport.ab3@737> XINCLUDE "CLIModeSupport.ab3"
00027438 <CLIModeSupport.ab3@738> XINCLUDE "CLIModeSupport.ab3"
0002746C <CLIModeSupport.ab3@740> XINCLUDE "CLIModeSupport.ab3"
000274A0 <CLIModeSupport.ab3@741> XINCLUDE "CLIModeSupport.ab3"
000274D4 <CLIModeSupport.ab3@742> XINCLUDE "CLIModeSupport.ab3"
00027508 <CLIModeSupport.ab3@743> XINCLUDE "CLIModeSupport.ab3"
0002753C <CLIModeSupport.ab3@744> XINCLUDE "CLIModeSupport.ab3"
00027570 <CLIModeSupport.ab3@745> XINCLUDE "CLIModeSupport.ab3"
000275A4 <CLIModeSupport.ab3@746> XINCLUDE "CLIModeSupport.ab3"
000275D8 <CLIModeSupport.ab3@747> XINCLUDE "CLIModeSupport.ab3"
000275DA <CLIModeSupport.ab3@749> XINCLUDE "CLIModeSupport.ab3"
00027618 <CLIModeSupport.ab3@750> XINCLUDE "CLIModeSupport.ab3"
0002761C <CLIModeSupport.ab3@751> XINCLUDE "CLIModeSupport.ab3"
0002765A <CLIModeSupport.ab3@754> XINCLUDE "CLIModeSupport.ab3"
00027698 <CLIModeSupport.ab3@755> XINCLUDE "CLIModeSupport.ab3"
0002769A <CLIModeSupport.ab3@756> XINCLUDE "CLIModeSupport.ab3"
000276A0 <CLIModeSupport.ab3@757> XINCLUDE "CLIModeSupport.ab3"
000276A4 <CLIModeSupport.ab3@758> XINCLUDE "CLIModeSupport.ab3"
000276A6 <CLIModeSupport.ab3@760> XINCLUDE "CLIModeSupport.ab3"
000276E4 <CLIModeSupport.ab3@761> XINCLUDE "CLIModeSupport.ab3"
00027722 <CLIModeSupport.ab3@762> XINCLUDE "CLIModeSupport.ab3"
00027724 <CLIModeSupport.ab3@763> XINCLUDE "CLIModeSupport.ab3"
00027726 <CLIModeSupport.ab3@764> XINCLUDE "CLIModeSupport.ab3"
00027728 <CLIModeSupport.ab3@765> XINCLUDE "CLIModeSupport.ab3"
0002772E <CLIModeSupport.ab3@766> XINCLUDE "CLIModeSupport.ab3"
00027732 <CLIModeSupport.ab3@767> XINCLUDE "CLIModeSupport.ab3"
00027742 <CLIModeSupport.ab3@769> XINCLUDE "CLIModeSupport.ab3"
0002775A <CLIModeSupport.ab3@770> XINCLUDE "CLIModeSupport.ab3"
00027772 <CLIModeSupport.ab3@771> XINCLUDE "CLIModeSupport.ab3"
0002778A <CLIModeSupport.ab3@772> XINCLUDE "CLIModeSupport.ab3"
000277B4 <CLIModeSupport.ab3@774> XINCLUDE "CLIModeSupport.ab3"
000277DE <CLIModeSupport.ab3@775> XINCLUDE "CLIModeSupport.ab3"
0002780C <CLIModeSupport.ab3@777> XINCLUDE "CLIModeSupport.ab3"
00027810 <CLIModeSupport.ab3@778> XINCLUDE "CLIModeSupport.ab3"
00027838 <CLIModeSupport.ab3@779> XINCLUDE "CLIModeSupport.ab3"
0002783A <CLIModeSupport.ab3@780> XINCLUDE "CLIModeSupport.ab3"
00027878 <CLIModeSupport.ab3@781> XINCLUDE "CLIModeSupport.ab3"
0002787C <CLIModeSupport.ab3@782> XINCLUDE "CLIModeSupport.ab3"
000278BA <CLIModeSupport.ab3@783> XINCLUDE "CLIModeSupport.ab3"
000278BE <CLIModeSupport.ab3@784> XINCLUDE "CLIModeSupport.ab3"
000278FC <CLIModeSupport.ab3@785> XINCLUDE "CLIModeSupport.ab3"
00027900 <CLIModeSupport.ab3@786> XINCLUDE "CLIModeSupport.ab3"
00027926 <CLIModeSupport.ab3@788> XINCLUDE "CLIModeSupport.ab3"
0002794C <CLIModeSupport.ab3@789> XINCLUDE "CLIModeSupport.ab3"
00027972 <CLIModeSupport.ab3@790> XINCLUDE "CLIModeSupport.ab3"
00027998 <CLIModeSupport.ab3@791> XINCLUDE "CLIModeSupport.ab3"
000279BE <CLIModeSupport.ab3@792> XINCLUDE "CLIModeSupport.ab3"
00027A14 <CLIModeSupport.ab3@793> XINCLUDE "CLIModeSupport.ab3"
00027A6A <CLIModeSupport.ab3@794> XINCLUDE "CLIModeSupport.ab3"
00027AB8 <CLIModeSupport.ab3@795> XINCLUDE "CLIModeSupport.ab3"
00027B0E <CLIModeSupport.ab3@796> XINCLUDE "CLIModeSupport.ab3"
00027B34 <CLIModeSupport.ab3@797> XINCLUDE "CLIModeSupport.ab3"
00027B5A <CLIModeSupport.ab3@798> XINCLUDE "CLIModeSupport.ab3"
00027B80 <CLIModeSupport.ab3@799> XINCLUDE "CLIModeSupport.ab3"
00027BD6 <CLIModeSupport.ab3@800> XINCLUDE "CLIModeSupport.ab3"
00027C24 <CLIModeSupport.ab3@801> XINCLUDE "CLIModeSupport.ab3"
00027CDE <CLIModeSupport.ab3@802> XINCLUDE "CLIModeSupport.ab3"
00027D34 <CLIModeSupport.ab3@803> XINCLUDE "CLIModeSupport.ab3"
00027D5A <CLIModeSupport.ab3@804> XINCLUDE "CLIModeSupport.ab3"
00027D80 <CLIModeSupport.ab3@805> XINCLUDE "CLIModeSupport.ab3"
00027DA6 <CLIModeSupport.ab3@806> XINCLUDE "CLIModeSupport.ab3"
00027DFC <CLIModeSupport.ab3@807> XINCLUDE "CLIModeSupport.ab3"
00027E52 <CLIModeSupport.ab3@808> XINCLUDE "CLIModeSupport.ab3"
00027EA0 <CLIModeSupport.ab3@809> XINCLUDE "CLIModeSupport.ab3"
00027EEE <CLIModeSupport.ab3@810> XINCLUDE "CLIModeSupport.ab3"
00027F3C <CLIModeSupport.ab3@811> XINCLUDE "CLIModeSupport.ab3"
00027F8A <CLIModeSupport.ab3@812> XINCLUDE "CLIModeSupport.ab3"
00027FD8 <CLIModeSupport.ab3@813> XINCLUDE "CLIModeSupport.ab3"
00028026 <CLIModeSupport.ab3@814> XINCLUDE "CLIModeSupport.ab3"
00028074 <CLIModeSupport.ab3@815> XINCLUDE "CLIModeSupport.ab3"
0002809A <CLIModeSupport.ab3@816> XINCLUDE "CLIModeSupport.ab3"
000280C0 <CLIModeSupport.ab3@817> XINCLUDE "CLIModeSupport.ab3"
000280E6 <CLIModeSupport.ab3@818> XINCLUDE "CLIModeSupport.ab3"
00028134 <CLIModeSupport.ab3@819> XINCLUDE "CLIModeSupport.ab3"
00028182 <CLIModeSupport.ab3@820> XINCLUDE "CLIModeSupport.ab3"
000281D8 <CLIModeSupport.ab3@821> XINCLUDE "CLIModeSupport.ab3"
00028226 <CLIModeSupport.ab3@822> XINCLUDE "CLIModeSupport.ab3"
00028274 <CLIModeSupport.ab3@823> XINCLUDE "CLIModeSupport.ab3"
000282C2 <CLIModeSupport.ab3@824> XINCLUDE "CLIModeSupport.ab3"
000282E8 <CLIModeSupport.ab3@825> XINCLUDE "CLIModeSupport.ab3"
0002830E <CLIModeSupport.ab3@826> XINCLUDE "CLIModeSupport.ab3"
00028334 <CLIModeSupport.ab3@827> XINCLUDE "CLIModeSupport.ab3"
0002836C <CLIModeSupport.ab3@828> XINCLUDE "CLIModeSupport.ab3"
00028394 <CLIModeSupport.ab3@829> XINCLUDE "CLIModeSupport.ab3"
000283A8 <CLIModeSupport.ab3@830> XINCLUDE "CLIModeSupport.ab3"
0002841C <CLIModeSupport.ab3@831> XINCLUDE "CLIModeSupport.ab3"
00028462 <CLIModeSupport.ab3@832> XINCLUDE "CLIModeSupport.ab3"
00028510 <CLIModeSupport.ab3@833> XINCLUDE "CLIModeSupport.ab3"
0002857C <CLIModeSupport.ab3@834> XINCLUDE "CLIModeSupport.ab3"
0002858C <CLIModeSupport.ab3@835> XINCLUDE "CLIModeSupport.ab3"
000285B2 <CLIModeSupport.ab3@837> XINCLUDE "CLIModeSupport.ab3"
000285BC <CLIModeSupport.ab3@839> XINCLUDE "CLIModeSupport.ab3"
000285E6 <CLIModeSupport.ab3@840> XINCLUDE "CLIModeSupport.ab3"
000285EC <CLIModeSupport.ab3@841> XINCLUDE "CLIModeSupport.ab3"
000285FC <CLIModeSupport.ab3@843> XINCLUDE "CLIModeSupport.ab3"
000286A2 <CLIModeSupport.ab3@845> XINCLUDE "CLIModeSupport.ab3"
000286E2 <CLIModeSupport.ab3@846> XINCLUDE "CLIModeSupport.ab3"
000286E8 <CLIModeSupport.ab3@848> XINCLUDE "CLIModeSupport.ab3"
0002873E <CLIModeSupport.ab3@849> XINCLUDE "CLIModeSupport.ab3"
00028748 <CLIModeSupport.ab3@851> XINCLUDE "CLIModeSupport.ab3"
00028752 <CLIModeSupport.ab3@853> XINCLUDE "CLIModeSupport.ab3"
0002876C <CLIModeSupport.ab3@854> XINCLUDE "CLIModeSupport.ab3"
0002878E <CLIModeSupport.ab3@910> XINCLUDE "CLIModeSupport.ab3"
000287B0 <CLIModeSupport.ab3@911> XINCLUDE "CLIModeSupport.ab3"
0002880A <CLIModeSupport.ab3@912> XINCLUDE "CLIModeSupport.ab3"
0002882C <CLIModeSupport.ab3@913> XINCLUDE "CLIModeSupport.ab3"
00028886 <CLIModeSupport.ab3@914> XINCLUDE "CLIModeSupport.ab3"
000288C8 <CLIModeSupport.ab3@915> XINCLUDE "CLIModeSupport.ab3"
000288CE <CLIModeSupport.ab3@917> XINCLUDE "CLIModeSupport.ab3"
000288DC <CLIModeSupport.ab3@918> XINCLUDE "CLIModeSupport.ab3"
000288E2 <CLIModeSupport.ab3@920> XINCLUDE "CLIModeSupport.ab3"
000288F6 <CLIModeSupport.ab3@921> XINCLUDE "CLIModeSupport.ab3"
00028900 <CLIModeSupport.ab3@922> XINCLUDE "CLIModeSupport.ab3"
0002897A <CLIModeSupport.ab3@923> XINCLUDE "CLIModeSupport.ab3"
00028984 <CLIModeSupport.ab3@924> XINCLUDE "CLIModeSupport.ab3"
0002898A <CLIModeSupport.ab3@925> XINCLUDE "CLIModeSupport.ab3"
0002899E <CLIModeSupport.ab3@928> XINCLUDE "CLIModeSupport.ab3"
000289A8 <CLIModeSupport.ab3@929> XINCLUDE "CLIModeSupport.ab3"
00028A28 <CLIModeSupport.ab3@930> XINCLUDE "CLIModeSupport.ab3"
00028A32 <CLIModeSupport.ab3@931> XINCLUDE "CLIModeSupport.ab3"
00028A38 <CLIModeSupport.ab3@932> XINCLUDE "CLIModeSupport.ab3"
00028A4C <CLIModeSupport.ab3@935> XINCLUDE "CLIModeSupport.ab3"
00028A56 <CLIModeSupport.ab3@936> XINCLUDE "CLIModeSupport.ab3"
00028A9E <CLIModeSupport.ab3@937> XINCLUDE "CLIModeSupport.ab3"
00028AA8 <CLIModeSupport.ab3@939> XINCLUDE "CLIModeSupport.ab3"
00028AAE <CLIModeSupport.ab3@940> XINCLUDE "CLIModeSupport.ab3"
00028AC2 <CLIModeSupport.ab3@943> XINCLUDE "CLIModeSupport.ab3"
00028ACC <CLIModeSupport.ab3@944> XINCLUDE "CLIModeSupport.ab3"
00028B14 <CLIModeSupport.ab3@945> XINCLUDE "CLIModeSupport.ab3"
00028B1E <CLIModeSupport.ab3@946> XINCLUDE "CLIModeSupport.ab3"
00028B24 <CLIModeSupport.ab3@947> XINCLUDE "CLIModeSupport.ab3"
00028B38 <CLIModeSupport.ab3@950> XINCLUDE "CLIModeSupport.ab3"
00028B5E <CLIModeSupport.ab3@951> XINCLUDE "CLIModeSupport.ab3"
00028B72 <CLIModeSupport.ab3@954> XINCLUDE "CLIModeSupport.ab3"
00028B98 <CLIModeSupport.ab3@955> XINCLUDE "CLIModeSupport.ab3"
00028BAC <CLIModeSupport.ab3@958> XINCLUDE "CLIModeSupport.ab3"
00028BD2 <CLIModeSupport.ab3@959> XINCLUDE "CLIModeSupport.ab3"
00028BE6 <CLIModeSupport.ab3@962> XINCLUDE "CLIModeSupport.ab3"
00028BF0 <CLIModeSupport.ab3@963> XINCLUDE "CLIModeSupport.ab3"
00028C1E <CLIModeSupport.ab3@964> XINCLUDE "CLIModeSupport.ab3"
00028C6E <CLIModeSupport.ab3@965> XINCLUDE "CLIModeSupport.ab3"
00028C8E <CLIModeSupport.ab3@966> XINCLUDE "CLIModeSupport.ab3"
00028CA6 <CLIModeSupport.ab3@967> XINCLUDE "CLIModeSupport.ab3"
00028D8A <CLIModeSupport.ab3@968> XINCLUDE "CLIModeSupport.ab3"
00028D94 <CLIModeSupport.ab3@969> XINCLUDE "CLIModeSupport.ab3"
00028D9A <CLIModeSupport.ab3@970> XINCLUDE "CLIModeSupport.ab3"
00028D9C <CLIModeSupport.ab3@972> XINCLUDE "CLIModeSupport.ab3"
00028DB0 <CLIModeSupport.ab3@973> XINCLUDE "CLIModeSupport.ab3"
00028DE2 <CLIModeSupport.ab3@976> XINCLUDE "CLIModeSupport.ab3"
00028DE8 <CLIModeSupport.ab3@977> XINCLUDE "CLIModeSupport.ab3"
00028E2C <CLIModeSupport.ab3@978> XINCLUDE "CLIModeSupport.ab3"
00028E3E <CLIModeSupport.ab3@979> XINCLUDE "CLIModeSupport.ab3"
00028E50 <CLIModeSupport.ab3@980> XINCLUDE "CLIModeSupport.ab3"
00028E5A <CLIModeSupport.ab3@981> XINCLUDE "CLIModeSupport.ab3"
00028E60 <CLIModeSupport.ab3@982> XINCLUDE "CLIModeSupport.ab3"
00028E6A <CLIModeSupport.ab3@984> XINCLUDE "CLIModeSupport.ab3"
00028E84 <CLIModeSupport.ab3@985> XINCLUDE "CLIModeSupport.ab3"
00028E84 <AmiBlitz3.ab2@101> XINCLUDE "CLIModeSupport.ab3"
00028EF8 <AmiBlitz3.ab2@106> dynassign.s = dos_GetToolString{"ASSIGN","Blitz3:"}
00028F30 <AmiBlitz3.ab2@107> If dynassign <> ""
00028F46 <AmiBlitz3.ab2@108>     *AssignSema.SignalSemaphore = FindSemaphore_(&dynassign)    ; does it already exist?
00028F50 <AmiBlitz3.ab2@109>     If *AssignSema
00028F60 <AmiBlitz3.ab2@110>       ObtainSemaphoreShared_ *AssignSema
00028F66 <AmiBlitz3.ab2@111>     Else                                                        ; no, create one...
00028F86 <AmiBlitz3.ab2@112>       *AssignSema = AllocVec_ (SizeOf.SignalSemaphore,#MEMF_PUBLIC|#MEMF_CLEAR)
00028F90 <AmiBlitz3.ab2@113>       If *AssignSema
00028FA0 <AmiBlitz3.ab2@114>         InitSemaphore_ *AssignSema
00028FD4 <AmiBlitz3.ab2@116>         *AssignSema\ss_Link\ln_Name = AllocVec_(FLen(dynassign)+1,#MEMF_PUBLIC|#MEMF_CLEAR)
00028FE6 <AmiBlitz3.ab2@117>         If *AssignSema\ss_Link\ln_Name
00029022 <AmiBlitz3.ab2@118>           Poke.s  *AssignSema\ss_Link\ln_Name,dynassign
0002902E <AmiBlitz3.ab2@120>         *AssignSema\ss_Link\ln_Pri  = 1
0002903A <AmiBlitz3.ab2@121>         *AssignSema\ss_Link\ln_Type = #NT_SIGNALSEM
0002904A <AmiBlitz3.ab2@123>         AddSemaphore_ *AssignSema
0002905A <AmiBlitz3.ab2@124>         ObtainSemaphoreShared_ *AssignSema
000290A6 <AmiBlitz3.ab2@130>   mydir.s = dos_GetProgDir{"Sys:"}
00029106 <AmiBlitz3.ab2@131>   If dos_SetAssign{dynassign,mydir,False}
0002919A <AmiBlitz3.ab2@132>     dos_AddAssign{"LIBS:",dos_AddPart{dynassign,"Libs"}}
000291D2 <AmiBlitz3.ab2@135>   Poke$ ?str_blitz3assign,dynassign
00029254 <AmiBlitz3.ab2@136>   Poke$ ?str_defaultdbug,dos_AddPart{dynassign,"Debug/DefaultDBug"}
000292D6 <AmiBlitz3.ab2@139>   Poke$ ?str_path_acidlibs,dos_AddPart{dynassign, "BlitzLibs/AcidLibs"}
00029358 <AmiBlitz3.ab2@140>   Poke$ ?str_path_deflibs ,dos_AddPart{dynassign, "BlitzLibs/DefLibs" }
000293DA <AmiBlitz3.ab2@141>   Poke$ ?str_path_userlibs,dos_AddPart{dynassign, "BlitzLibs/UserLibs"}
0002945C <AmiBlitz3.ab2@142>   Poke$ ?str_path_includes,dos_AddPart{dynassign, "Sourcecodes/Includes"}
000294D0 <AmiBlitz3.ab2@143>   my_systemdir$    = dos_AddPart{dynassign, "System"}
00029544 <AmiBlitz3.ab2@144>   my_residentsdir$ = dos_AddPart{dynassign, "BlitzLibs/Residents"}
000295B8 <AmiBlitz3.ab2@145>   my_blitzlibsdir$ = dos_AddPart{dynassign, "BlitzLibs"}
000295E6 <AmiBlitz3.ab2@146>   dos_CreateDir{my_blitzlibsdir$}
0002960A <AmiBlitz3.ab2@147>   dos_CreateDir{Peek$(?str_path_userlibs)}
00029638 <AmiBlitz3.ab2@148>   dos_CreateDir{my_residentsdir$}
00029666 <AmiBlitz3.ab2@149>   dos_CreateDir{my_systemdir$}
00029730 <AmiBlitz3.ab2@155> pedfile$ = dos_GetToolString{"EDITOR",dos_AddPart{my_systemdir$,"PED"}}
00029768 <AmiBlitz3.ab2@156> Poke.s ?str_pedfile,pedfile$
000297A6 <AmiBlitz3.ab2@158> If dos_GetToolState{"START_WITHOUT_LIBS"} = -1
000297B6 <AmiBlitz3.ab2@159>   Poke.b ?start_without_libs,1
000297BC <AmiBlitz3.ab2@160> Else
000297CC <AmiBlitz3.ab2@161>   Poke.b ?start_without_libs,0
000297F2 <AmiBlitz3.ab2@164> !TRANS_INIT{"AmiBlitz3"}     ; init localization via translation.include
0002981A <AmiBlitz3.ab2@167> errorout.s = ""                                            ; for the error text
00029820 <AmiBlitz3.ab2@168> ende.b     =  False                                        ; abort indicater
00029858 <AmiBlitz3.ab2@170> If dos_CheckLib{"wizard.library",42} = False               ; needed for Compiler, PED and REDDebugger
0002989E <AmiBlitz3.ab2@171>   errorout + "Missing wizard.library:\\nThis library is required in version 42 by this IDE.\\n\\n"
000298A4 <AmiBlitz3.ab2@172>   ende = True
000298DC <AmiBlitz3.ab2@175> If dos_CheckLib{"reqtools.library",38} = False             ; needed for PED and REDDebugger
00029922 <AmiBlitz3.ab2@176>   errorout + "Missing reqtools.library:\\nThis library is required in version 38 by the IDE.\\n\\n"
00029928 <AmiBlitz3.ab2@177>   ende = True
00029960 <AmiBlitz3.ab2@180> If dos_CheckLib{"ted.library",1} = False                   ; needed for PED and REDDebugger
000299A6 <AmiBlitz3.ab2@181>   errorout + "Missing ted.library:\\nThis library is required in version 1 by the IDE.\\n\\n"
000299AC <AmiBlitz3.ab2@182>   ende = True
000299E4 <AmiBlitz3.ab2@185> If dos_CheckLib{"disassembler.library",40} = False         ; only needed for REDDebugger
00029A2A <AmiBlitz3.ab2@186> 
00029A62 <AmiBlitz3.ab2@189> If errorout <> ""                                          ; check if something to show
00029AA8 <AmiBlitz3.ab2@190>    errorout = "Please reinstall AmiBlitz3 or install the librarys in LIBS:\\n\\n"+errorout
00029AB6 <AmiBlitz3.ab2@191>    If ende
00029AFC <AmiBlitz3.ab2@192>      errorout + "...that the IDE can Start!"               ; for abort
00029B02 <AmiBlitz3.ab2@193>    Else
00029B48 <AmiBlitz3.ab2@194>      errorout + "...for a full working IDE!"               ; for limited start
00029BAA <AmiBlitz3.ab2@196>    error{!TRANS{errorout}}
00029BB6 <AmiBlitz3.ab2@199> dbg_fid.l = -1 ; no debug file id yet!
00029BCA <AmiBlitz3.ab2@203> If ende Then Goto abnormal_exit                            ; remove Assigns
00029BD4 <AmiBlitz3.ab2@206> If CLIMode
00029BDA <AmiBlitz3.ab2@209>   err.l      = False                                       ; indicate that an error has occured
00029BE0 <AmiBlitz3.ab2@210>   showhelp.l = False                                       ; show the CLI tool's help
00029C2C <AmiBlitz3.ab2@213>   cli_progpath.s     = dos_GetProgDir{"Blitz3:"}
00029C54 <AmiBlitz3.ab2@214>   cli_sourcefile.s   = ""
00029C7C <AmiBlitz3.ab2@215>   cli_exefile.s      = ""
00029CA4 <AmiBlitz3.ab2@216>   cli_savefile.s     = ""
00029CCC <AmiBlitz3.ab2@217>   cli_dumpfile.s     = ""
00029CF4 <AmiBlitz3.ab2@218>   cli_includepath.s  = ""
00029D1C <AmiBlitz3.ab2@219>   cli_blitzlibpath.s = ""
00029D22 <AmiBlitz3.ab2@220>   cli_debuginfo.l    = False
00029D28 <AmiBlitz3.ab2@221>   cli_run.l          = False
00029D30 <AmiBlitz3.ab2@222>   cli_dumpflags.l    = $FFFFFFFF
00029D58 <AmiBlitz3.ab2@223>   cli_info.s         = ""
00029D5E <AmiBlitz3.ab2@224>   cli_release.l      = False
00029D68 <AmiBlitz3.ab2@225>   cli_numargs.l      = dos_GetNumArgs{}
00029D6E <AmiBlitz3.ab2@226>   cli_gui.l          = False
00029D76 <AmiBlitz3.ab2@227>   cli_dumpform.l     = 1 ; 0 = bin, 1 = ASCII
00029D7E <AmiBlitz3.ab2@228>   cli_verbose.l      = 1
00029D96 <AmiBlitz3.ab2@229>   If cli_numargs=0 Then showhelp=True
00029DC6 <AmiBlitz3.ab2@233>     arg.s = dos_GetNextArg{}                               ; get the next CLI argument
00029E12 <AmiBlitz3.ab2@234>     larg.s = LCase$(arg)                                   ; lower case the option string
00029EDA <AmiBlitz3.ab2@235>     If Left$(larg,1)="-" Then larg = Right$(larg,FLen(larg)-1)
00029F10 <AmiBlitz3.ab2@236>     Select larg
00029F5C <AmiBlitz3.ab2@237>       Case "s" : larg="source"
00029FAE <AmiBlitz3.ab2@238>       Case "e" : larg="exe"
0002A000 <AmiBlitz3.ab2@239>       Case "d" : larg="debug"
0002A052 <AmiBlitz3.ab2@240>       Case "r" : larg="release"
0002A0A4 <AmiBlitz3.ab2@241>       Case "h" : larg="help"
0002A0F6 <AmiBlitz3.ab2@242>       Case "v" : larg="verbose"
0002A104 <AmiBlitz3.ab2@243>     End Select
0002A13A <AmiBlitz3.ab2@245>     Select larg
0002A18E <AmiBlitz3.ab2@246>       Case "exe"      : cli_exefile     = dos_GetNextArg{}
0002A1E8 <AmiBlitz3.ab2@247>       Case "source"   : cli_sourcefile  = dos_GetNextArg{}
0002A242 <AmiBlitz3.ab2@248>       Case "save"     : cli_savefile    = dos_GetNextArg{}
0002A272 <AmiBlitz3.ab2@249>       Case "debug"    : cli_debuginfo   = True
0002A2A2 <AmiBlitz3.ab2@250>       Case "run"      : cli_run         = True
0002A2D2 <AmiBlitz3.ab2@251>       Case "release"  : cli_release     = True
0002A302 <AmiBlitz3.ab2@252>       Case "ped"      : cli_gui         = True
0002A35C <AmiBlitz3.ab2@253>       Case "dform"    : cli_dumpform.l  = Vallong(dos_GetNextArg{})
0002A3CE <AmiBlitz3.ab2@254>       Case "dump"     : cli_info        = LCase$(dos_GetNextArg{})
0002A3FE <AmiBlitz3.ab2@255>                         cli_dumpfile    = dos_GetNextArg{}
0002A406 <AmiBlitz3.ab2@256>                         cli_dumpflags   = $0
0002A466 <AmiBlitz3.ab2@257>                         If Instr(cli_info,"all"  ) Then cli_dumpflags | $FFFFFFFF
0002A4C6 <AmiBlitz3.ab2@258>                         If Instr(cli_info,"token") Then cli_dumpflags | #DUMPFLG_TOKENS
0002A526 <AmiBlitz3.ab2@259>                         If Instr(cli_info,"label") Then cli_dumpflags | #DUMPFLG_LABELS
0002A586 <AmiBlitz3.ab2@260>                         If Instr(cli_info,"var"  ) Then cli_dumpflags | #DUMPFLG_VARS
0002A5E6 <AmiBlitz3.ab2@261>                         If Instr(cli_info,"const") Then cli_dumpflags | #DUMPFLG_CONSTANTS
0002A646 <AmiBlitz3.ab2@262>                         If Instr(cli_info,"func" ) Then cli_dumpflags | #DUMPFLG_FUNCTIONS
0002A6A6 <AmiBlitz3.ab2@263>                         If Instr(cli_info,"macro") Then cli_dumpflags | #DUMPFLG_MACROS
0002A706 <AmiBlitz3.ab2@264>                         If Instr(cli_info,"type" ) Then cli_dumpflags | #DUMPFLG_NEWTYPES
0002A766 <AmiBlitz3.ab2@265>                         If Instr(cli_info,"lib"  ) Then cli_dumpflags | #DUMPFLG_LIBS
0002A778 <AmiBlitz3.ab2@266>                         If cli_dumpflags = $0
0002A77E <AmiBlitz3.ab2@267>                          err=True
0002A812 <AmiBlitz3.ab2@268>                          NPrint "\\1b[1m*** ERROR: Invalid flags for dumpfile \\22",cli_info,"\\22 specified!\\1b[0m"
0002A86C <AmiBlitz3.ab2@270>       Case "verbose"  : cli_verbose     = Vallong(dos_GetNextArg{})
0002A89C <AmiBlitz3.ab2@271>       Case "h"        : showhelp        = True             ; show the help and quit
0002A8A2 <AmiBlitz3.ab2@272>       Default
0002A8DA <AmiBlitz3.ab2@273>         If arg><""
0002A96E <AmiBlitz3.ab2@274>           NPrint "\\1b[1m*** ERROR: Unknown option \\22",arg,"\\22 specified!\\1b[0m"
0002A974 <AmiBlitz3.ab2@275>           err = True
0002A982 <AmiBlitz3.ab2@277>     End Select
0002A9CE <AmiBlitz3.ab2@278>   Until arg = "" OR err=True          ; until we processed all arguments
0002A9F0 <AmiBlitz3.ab2@281>   If err><False OR showhelp = True
0002A9FA <AmiBlitz3.ab2@282>     If showhelp
0002AA5C <AmiBlitz3.ab2@283>     NPrint "AmiBlitz ",Peek.s(?myversion)
0002AA94 <AmiBlitz3.ab2@284>     NPrint "\\nSyntax: AmiBlitz3 [options]"
0002AACC <AmiBlitz3.ab2@285>     NPrint "\\nOptions:"
0002AB04 <AmiBlitz3.ab2@286>     NPrint "  -(s)ource <file>    : input source code filename (bb2, ab2 or ab3)"
0002AB3C <AmiBlitz3.ab2@287>     NPrint "  -(e)xe <file>       : output executable filename"
0002AB74 <AmiBlitz3.ab2@288>     NPrint "  -(d)ebug            : compile with debug info"
0002ABAC <AmiBlitz3.ab2@289>     NPrint "  -(r)elease          : create release executable (size optimized)"
0002ABE4 <AmiBlitz3.ab2@290>     NPrint "  -run                : run compiled program"
0002AC1C <AmiBlitz3.ab2@291>     NPrint "  -dump <info> <file> : dump compiler internals to file"
0002AC54 <AmiBlitz3.ab2@292>     NPrint "                        (info=all|token|label|var|func|const|macro|type|lib)"
0002AC8C <AmiBlitz3.ab2@293>     NPrint "  -dform <n>          : format of compiler internals dump (0=bin, 1=ASCII; default=1)"
0002ACC4 <AmiBlitz3.ab2@294>     NPrint "  -PED                : start AmiBlitz3 IDE (PED)"
0002ACFC <AmiBlitz3.ab2@295>     NPrint "  -save <file>        : re-save source code (convert format, if needed)"
0002AD34 <AmiBlitz3.ab2@296>     NPrint "  -(v)erbose <n>      : set verbose level (0, 1 or 2; default=1)"
0002AD6C <AmiBlitz3.ab2@297>     NPrint "  -(h)elp             : show this help"
0002ADA4 <AmiBlitz3.ab2@298>     NPrint "\\nExample:"
0002ADDC <AmiBlitz3.ab2@299>     NPrint "  AmiBlitz3 -s \\22DH0:Sourcecodes/MyProgram.ab3\\22 -e RAM:MyProgram.exe"
0002AE14 <AmiBlitz3.ab2@300>     NPrint "\\nNote: To start the AmiBlitz3 IDE, run from Workbench or with -PED option."
0002AE1A <AmiBlitz3.ab2@303>     Goto abnormal_exit
0002AE36 <AmiBlitz3.ab2@306>   If cli_gui        Then CLIMode = False : error_SetFlags{#error_requester}
0002AE9A <AmiBlitz3.ab2@307>   If cli_sourcefile Then Poke.s ?str_tempfilename,cli_sourcefile
0002AEAA <AmiBlitz3.ab2@310> Poke.l ?CLIMode,CLIMode
0002AECE <AmiBlitz3.ab2@335>   Dim incdim.s (#maxincludes)
0002AEF2 <AmiBlitz3.ab2@336>   Dim incline.l(#maxincludes)
0002AF1C <AmiBlitz3.ab2@612> Statement activategadget{ag$}                              ;ag$ = gadget
0002AF70 <AmiBlitz3.ab2@613>   ActivateGadget_ WZGadAddr (ag$),WZWindowAddr,0
0002AF88 <AmiBlitz3.ab2@614> End Statement
0002AFA2 <AmiBlitz3.ab2@616> Function.s Get_Libinfo{addr_libnum.l}
0002AFAE <AmiBlitz3.ab2@618>   lib_ab2.b = False : lib_os.b = False
0002AFB4 <AmiBlitz3.ab2@619>   addr_counter.l = addr_libnum
0002AFBC <AmiBlitz3.ab2@620>   skip.l = 0
0002AFCE <AmiBlitz3.ab2@621>   If addr_counter=0
0002AFFC <AmiBlitz3.ab2@622>     error{"INTERNAL: \\__THIS_FUNCTION: Invalid pointer!"}
0002B01A <AmiBlitz3.ab2@623>     Function Return ""
0002B028 <AmiBlitz3.ab2@628>     mem.l = Peek.l(addr_counter)
0002B036 <AmiBlitz3.ab2@633>     addr_counter + 2
0002B056 <AmiBlitz3.ab2@634>     If (mem = $0000ffff) Then lib_ab2= True : skip = 8
0002B070 <AmiBlitz3.ab2@635>     If (mem LSR 16) = $ffe2
0002B076 <AmiBlitz3.ab2@637>       lib_os = True
0002B07E <AmiBlitz3.ab2@638>       skip = 10
0002B0C4 <AmiBlitz3.ab2@639>       If Peek$(addr_counter+skip) = "" Then skip + 4
0002B108 <AmiBlitz3.ab2@641>   Until (lib_ab2=True OR lib_os = True) OR (addr_counter>addr_libnum + $400)
0002B11E <AmiBlitz3.ab2@643>   If (addr_counter>addr_libnum + $400)
0002B13C <AmiBlitz3.ab2@645>     Function Return ""
0002B142 <AmiBlitz3.ab2@646>   Else
0002B166 <AmiBlitz3.ab2@647>     Function Return Peek$(addr_counter + skip)
0002B170 <AmiBlitz3.ab2@649> End Function
0002B18E <AmiBlitz3.ab2@689>   !asm
0002B194 <AmiBlitz3.ab2@690>   MOVEA.l _execbase,A6
0002B198 <AmiBlitz3.ab2@691>   MOVEM.l d0/a0,-(a7)
0002B19A <AmiBlitz3.ab2@693>   MOVEQ #127,d0
0002B1A0 <AmiBlitz3.ab2@694>   LEA chartab,a0
0002B1A6 <AmiBlitz3.ab2@697>     MOVE.b #1,128(a0)
0002B1A8 <AmiBlitz3.ab2@698>     CLR.b (a0)+
0002B1AC <AmiBlitz3.ab2@699>   DBF d0,'l12
0002B1B2 <AmiBlitz3.ab2@701>   LEA chartab,a0
0002B1B6 <AmiBlitz3.ab2@702>   MOVE.b #1,(a0)
0002B1BC <AmiBlitz3.ab2@703>   MOVE.b #1,","(a0)
0002B1C2 <AmiBlitz3.ab2@704>   MOVE.b #1,";"(a0)
0002B1C8 <AmiBlitz3.ab2@705>   MOVE.b #1,":"(a0)
0002B1CE <AmiBlitz3.ab2@706>   MOVE.b #1,"("(a0)
0002B1D4 <AmiBlitz3.ab2@707>   MOVE.b #1,")"(a0)
0002B1DA <AmiBlitz3.ab2@708>   MOVE.b #1,"="(a0)
0002B1E0 <AmiBlitz3.ab2@709>   MOVE.b #1,"+"(a0)
0002B1E6 <AmiBlitz3.ab2@710>   MOVE.b #1,"-"(a0)
0002B1EC <AmiBlitz3.ab2@711>   MOVE.b #1,"*"(a0)
0002B1F2 <AmiBlitz3.ab2@712>   MOVE.b #1,"/"(a0)
0002B1F8 <AmiBlitz3.ab2@713>   MOVE.b #1,"$"(a0)
0002B1FE <AmiBlitz3.ab2@714>   MOVE.b #1,"%"(a0)
0002B204 <AmiBlitz3.ab2@715>   MOVE.b #1,"."(a0)
0002B20A <AmiBlitz3.ab2@716>   MOVE.b #1,"["(a0)
0002B210 <AmiBlitz3.ab2@717>   MOVE.b #1,"]"(a0)
0002B216 <AmiBlitz3.ab2@718>   MOVE.b #1,"{"(a0)
0002B21C <AmiBlitz3.ab2@719>   MOVE.b #1,"}"(a0)
0002B222 <AmiBlitz3.ab2@720>   MOVE.b #1,"\"(a0)
0002B228 <AmiBlitz3.ab2@721>   MOVE.b #1,">"(a0)
0002B22E <AmiBlitz3.ab2@722>   MOVE.b #1,"<"(a0)
0002B234 <AmiBlitz3.ab2@723>   MOVE.b #1,"&"(a0)
0002B23A <AmiBlitz3.ab2@724>   MOVE.b #1,"|"(a0)
0002B240 <AmiBlitz3.ab2@725>   MOVE.b #1,"^"(a0)
0002B246 <AmiBlitz3.ab2@726>   MOVE.b #1,$7e(a0)
0002B24C <AmiBlitz3.ab2@727>   MOVE.w #$0101,1(a0)
0002B252 <AmiBlitz3.ab2@729>   LEA instrtab,a0
0002B258 <AmiBlitz3.ab2@730>   MOVE.l #labelhash-instrtab,d0
0002B25A <AmiBlitz3.ab2@731>   ASR.l #2,d0
0002B25C <AmiBlitz3.ab2@732>   SUBQ.l #1,d0
0002B25E <AmiBlitz3.ab2@735>    CLR.l (a0)+
0002B260 <AmiBlitz3.ab2@736>    SUBQ.l #1,d0
0002B264 <AmiBlitz3.ab2@737>   BNE 'l10
0002B26A <AmiBlitz3.ab2@739>   LEA allowtab,a0
0002B270 <AmiBlitz3.ab2@740>   MOVE.l #255,d0
0002B272 <AmiBlitz3.ab2@743>     CLR.b (a0)+
0002B276 <AmiBlitz3.ab2@744>   DBF d0,'la1
0002B27C <AmiBlitz3.ab2@746>   LEA allowtab,a0
0002B282 <AmiBlitz3.ab2@747>   MOVE.b #1,$7d(a0)
0002B288 <AmiBlitz3.ab2@748>   MOVE.b #1,$7c(a0)
0002B28E <AmiBlitz3.ab2@749>   MOVE.b #1,$44(a0)
0002B294 <AmiBlitz3.ab2@750>   MOVE.b #1,$45(a0)
0002B29A <AmiBlitz3.ab2@751>   MOVE.b #1,$b9(a0)
0002B2A0 <AmiBlitz3.ab2@752>   MOVE.b #1,$89(a0)
0002B2A6 <AmiBlitz3.ab2@753>   MOVE.b #1,$ce(a0)
0002B2AC <AmiBlitz3.ab2@754>   MOVE.b #1,$cf(a0)
0002B2B2 <AmiBlitz3.ab2@755>   MOVE.b #1,$d0(a0)
0002B2B8 <AmiBlitz3.ab2@756>   MOVE.b #1,$cd(a0)
0002B2BA <AmiBlitz3.ab2@757>   MOVEQ #0,d0
0002B2C0 <AmiBlitz3.ab2@759>   MOVEA.l _execbase,a6
0002B2C6 <AmiBlitz3.ab2@764>   MOVE.l #$10000,d0
0002B2CC <AmiBlitz3.ab2@765>   MOVE.l #80000,d1
0002B2CE <AmiBlitz3.ab2@766>   MOVE.l d1,d2
0002B2D2 <AmiBlitz3.ab2@767>   JSR _CreatePool(a6)                                      ; alloc memory for own stuff
0002B2D8 <AmiBlitz3.ab2@768>   MOVE.l d0,mempool
0002B2DC <AmiBlitz3.ab2@769>   MOVEM.l (a7)+,d0/a0
0002B2E2 <AmiBlitz3.ab2@770>   TST.l mempool
0002B2E6 <AmiBlitz3.ab2@771>   BEQ shutdown_compiler
0002B2EA <AmiBlitz3.ab2@773>   MOVEA.l $114(A6),A4                                      ; get adress of this.Task-Structure
0002B2F0 <AmiBlitz3.ab2@774>   MOVE.l A4,ptr_ThisTask
0002B2F4 <AmiBlitz3.ab2@776>   BSR.w open_doslibrary
0002B2F8 <AmiBlitz3.ab2@777>   BEQ.w shutdown_compiler
0002B2FE <AmiBlitz3.ab2@779>   MOVE.l D2,stacksize
0002B300 <AmiBlitz3.ab2@783>   MOVEQ.l #$00,D0
0002B306 <AmiBlitz3.ab2@784>   LEA tokens,A0
0002B308 <AmiBlitz3.ab2@787>     ADDQ.w #1,D0
0002B30A <AmiBlitz3.ab2@788>     MOVE.l (A0),D1
0002B30E <AmiBlitz3.ab2@789>     BEQ.w JL_0_2D1C
0002B310 <AmiBlitz3.ab2@790>     MOVEA.l D1,A0
0002B314 <AmiBlitz3.ab2@791> BRA.w JL_0_2D0E
0002B31A <AmiBlitz3.ab2@794>   MOVE.l A0,end_of_tokenlist
0002B31E <AmiBlitz3.ab2@796>   BSR.w makeasmtable
0002B326 <AmiBlitz3.ab2@797>   MOVE.w #$FFFF,returncode_org                             ;#-1,returncode
0002B32A <AmiBlitz3.ab2@799>   BSR.w open_mathlibrary
0002B32E <AmiBlitz3.ab2@800>   BEQ.w freemem_and_quit4
0002B334 <AmiBlitz3.ab2@802>   MOVE.l constmaxpc,D0
0002B336 <AmiBlitz3.ab2@803>   MOVEQ.l #$02,D1                                          ;chipmem            ;01 org source
0002B33C <AmiBlitz3.ab2@804>   MOVEA.l _execbase,A6
0002B340 <AmiBlitz3.ab2@805>   JSR _AllocMem(A6)                                        ;mem for branch routine
0002B346 <AmiBlitz3.ab2@806>   MOVE.l D0,constpcat
0002B34A <AmiBlitz3.ab2@807>   BEQ.w freemem_and_quit3
0002B350 <AmiBlitz3.ab2@808>   ADD.l constmaxpc,D0
0002B356 <AmiBlitz3.ab2@809>   MOVE.l D0,constlibat
0002B35C <AmiBlitz3.ab2@811>   MOVE.l macrobuffer_size,D0
0002B362 <AmiBlitz3.ab2@812>   CMP.l #40000,d0
0002B366 <AmiBlitz3.ab2@813>   BGE 'ok
0002B36C <AmiBlitz3.ab2@814>     MOVE.l #40000,d0
0002B372 <AmiBlitz3.ab2@815>     MOVE.l d0,macrobuffer_size
0002B374 <AmiBlitz3.ab2@818>   ADDQ.l #4,d0
0002B376 <AmiBlitz3.ab2@819>   MOVEQ.l #$01,D1
0002B37C <AmiBlitz3.ab2@820>   MOVEA.l _execbase,A6
0002B380 <AmiBlitz3.ab2@821>   JSR _AllocMem(A6)                                        ;macro mem
0002B382 <AmiBlitz3.ab2@822>   MOVE.l d0,a0
0002B388 <AmiBlitz3.ab2@823>   MOVE.l macrobuffer_size,(a0)+
0002B38A <AmiBlitz3.ab2@824>   MOVE.l a0,d0
0002B390 <AmiBlitz3.ab2@825>   MOVE.l D0,ptr_macrobuffer_begin
0002B394 <AmiBlitz3.ab2@826>   BEQ.w freemem_and_quit2
0002B39A <AmiBlitz3.ab2@827>   ADD.l macrobuffer_size,D0
0002B3A0 <AmiBlitz3.ab2@828>   MOVE.l D0,ptr_macrobuffer_end
0002B3A6 <AmiBlitz3.ab2@830>   TST.l CLIMode
0002B3AA <AmiBlitz3.ab2@831>   BEQ load_ped
0002B3D4 <AmiBlitz3.ab2@834>   !basic
0002B3DE <AmiBlitz3.ab2@835>   succ.l = InitEmulatedPED{}
0002B3E2 <AmiBlitz3.ab2@836>   GetD0 succ
0002B400 <AmiBlitz3.ab2@837>   !asm
0002B402 <AmiBlitz3.ab2@838>   TST.l d0
0002B406 <AmiBlitz3.ab2@839>   BEQ freemem_and_quit
0002B40C <AmiBlitz3.ab2@840> JMP skip_ped
0002B412 <AmiBlitz3.ab2@845>   MOVE.l #str_pedfile,D1                                   ; Load PED
0002B418 <AmiBlitz3.ab2@846>   MOVEA.l _dosbase,A6
0002B41C <AmiBlitz3.ab2@847>   JSR _LoadSeg(A6)
0002B422 <AmiBlitz3.ab2@848>   MOVE.l D0,ptr_seg_ped
0002B426 <AmiBlitz3.ab2@849>   BEQ.w freemem_and_quit
0002B428 <AmiBlitz3.ab2@853>   MOVEA.l D0,A2
0002B42A <AmiBlitz3.ab2@854>   ADDA.l A2,A2
0002B42C <AmiBlitz3.ab2@855>   ADDA.l A2,A2
0002B432 <AmiBlitz3.ab2@857>   LEA teddata,a1                                           ;lea edstruct,A1
0002B438 <AmiBlitz3.ab2@858>   MOVE.l #"TEDY",d1
0002B43C <AmiBlitz3.ab2@859>   JSR 4(A2)                                                ; Run PED
0002B442 <AmiBlitz3.ab2@861>   MOVE.l A0,ped_startup_addr                               ; PED returns address of routine "startup_code"
0002B448 <AmiBlitz3.ab2@862>   MOVE.l A1,comdata                                        ; PED returns address of comdata-area in A1
0002B486 <AmiBlitz3.ab2@864>   !ComData_GetW{comWord_PEDIsAvailable,D0}                 ; if PED_IsAvailable=0, quit AmiBlitz
0002B48A <AmiBlitz3.ab2@865>   BEQ.w unload_ped
0002B4C8 <AmiBlitz3.ab2@869>   !ComData_GetL{comData_Magic,D0}
0002B4CE <AmiBlitz3.ab2@870>   CMP.l #$7E3A3A7E,D0                                      ;"~::~",D0
0002B4D2 <AmiBlitz3.ab2@871>   BNE unload_ped
0002B50A <AmiBlitz3.ab2@874>   !ComData_SetL{comPtr_Trap15            ,#directTrap15 }
0002B542 <AmiBlitz3.ab2@875>   !ComData_SetL{comPtr_DirectBuffer      ,#directbuffer}
0002B57A <AmiBlitz3.ab2@876>   !ComData_SetL{comPtr_MacroBase         ,#macrobase}
0002B5B2 <AmiBlitz3.ab2@877>   !ComData_SetL{comPtr_VarBase           ,#varbase }
0002B5EA <AmiBlitz3.ab2@878>   !ComData_SetL{comPtr_InstrBase         ,#instrtab}
0002B622 <AmiBlitz3.ab2@879>   !ComData_SetL{comPtr_LibPointer        ,#libpointer}
0002B65A <AmiBlitz3.ab2@880>   !ComData_SetL{comPtr_CompilerVersion   ,#myversion }
0002B692 <AmiBlitz3.ab2@881>   !ComData_SetL{comPtr_VersionInformation,#versioninformation}
0002B6CA <AmiBlitz3.ab2@882>   !ComData_SetL{comPtr_NumberOfBuilds    ,#number_of_builds}
0002B702 <AmiBlitz3.ab2@883>   !ComData_SetL{comFunc_SaveSource       ,#ab3_SaveSource}
0002B73A <AmiBlitz3.ab2@884>   !ComData_SetL{comFunc_LoadSource       ,#ab3_LoadSource}
0002B772 <AmiBlitz3.ab2@885>   !ComData_SetL{comFunc_ClearSource      ,#ab3_ClearSource}
0002B778 <AmiBlitz3.ab2@887>   CLR.w returncode_org
0002B7A2 <AmiBlitz3.ab2@889>   !basic
0002B7AC <AmiBlitz3.ab2@890>   If CLIMode
0002B81E <AmiBlitz3.ab2@891>     If cli_verbose>=2 Then NPrint !TRANS{"Loading BlitzLibs."}
0002B83C <AmiBlitz3.ab2@893>   !asm
0002B842 <AmiBlitz3.ab2@897>   TST.b start_without_libs
0002B846 <AmiBlitz3.ab2@898>   BNE skip_loading_libs
0002B84A <AmiBlitz3.ab2@899>     BSR.w call_setpointerbusy
0002B854 <AmiBlitz3.ab2@900>     MOVE.l #$FFFFffff,linenumat
0002B858 <AmiBlitz3.ab2@901>     BSR.w get_libraries
0002B85E <AmiBlitz3.ab2@902>     JSR init_libraries
0002B862 <AmiBlitz3.ab2@903>     BSR.w init_buffers
0002B866 <AmiBlitz3.ab2@904>     BSR.w call_setpointernormal
0002B868 <AmiBlitz3.ab2@909>   MOVEQ.l #-$01,D0
0002B86E <AmiBlitz3.ab2@910>   MOVEA.l _execbase,A6
0002B872 <AmiBlitz3.ab2@911>   JSR _AllocSignal(A6)
0002B878 <AmiBlitz3.ab2@912>   MOVE.l D0,signalNum
0002B87A <AmiBlitz3.ab2@913>   MOVEQ.l #$00,D1
0002B87C <AmiBlitz3.ab2@914>   BSET D0,D1
0002B882 <AmiBlitz3.ab2@915>   MOVE.l D1,signals
0002B888 <AmiBlitz3.ab2@919>   MOVE.l #str_defaultdbug,D1
0002B88C <AmiBlitz3.ab2@920>   MOVEA.l _dosbase(PC),A6
0002B890 <AmiBlitz3.ab2@921>   JSR _LoadSeg(A6)
0002B896 <AmiBlitz3.ab2@922>   MOVE.l D0,ptr_seg_debugger
0002B898 <AmiBlitz3.ab2@923>   TST.l d0
0002B89C <AmiBlitz3.ab2@924>   BNE ok_12
0002B8C6 <AmiBlitz3.ab2@925>     !basic
0002B91C <AmiBlitz3.ab2@926>     error{!TRANS{"The Debugexecutor `Defaultdbug` was not found.\\nDebugging is not possible."}}
0002B93A <AmiBlitz3.ab2@927>     !asm
0002B940 <AmiBlitz3.ab2@930>   TST.l CLIMode
0002B944 <AmiBlitz3.ab2@931>   BEQ run_ped
0002B96E <AmiBlitz3.ab2@937>   !basic
0002B974 <AmiBlitz3.ab2@938>   err.l = False
0002B9A0 <AmiBlitz3.ab2@946>   If cli_sourcefile
0002B9C0 <AmiBlitz3.ab2@947>     lock.l = Lock_(&cli_sourcefile,#ACCESS_READ)
0002B9CA <AmiBlitz3.ab2@948>     If lock
0002B9EE <AmiBlitz3.ab2@949>       NameFromLock_ lock,&cli_tempstr,1024
0002BA18 <AmiBlitz3.ab2@950>       cli_sourcefile.s = Peek.s(&cli_tempstr)
0002BA28 <AmiBlitz3.ab2@951>       UnLock_ lock
0002BA54 <AmiBlitz3.ab2@954>     If cli_exefile
0002BAA6 <AmiBlitz3.ab2@955>       SetCurrentDir{dos_PathPart{cli_sourcefile}}
0002BAFE <AmiBlitz3.ab2@956>       path.s = dos_PathPart{cli_exefile}
0002BB1E <AmiBlitz3.ab2@957>       lock.l = Lock_(&path,#ACCESS_READ)
0002BB28 <AmiBlitz3.ab2@958>       If lock
0002BB4C <AmiBlitz3.ab2@959>         NameFromLock_ lock,&cli_tempstr,1024
0002BB76 <AmiBlitz3.ab2@960>         path.s = Peek.s(&cli_tempstr)
0002BC24 <AmiBlitz3.ab2@961>         cli_exefile = dos_AddPart{path,dos_FilePart{cli_exefile}}
0002BC34 <AmiBlitz3.ab2@962>         UnLock_ lock
0002BC7E <AmiBlitz3.ab2@973>   If cli_verbose>=2 Then NPrint "Initializing token hashmap."
0002BCA6 <AmiBlitz3.ab2@974>   TokenHashMapFile.s = "Blitz3:System/TokenList.hashmap"
0002BCB0 <AmiBlitz3.ab2@975>   *PreProcessor.preprocessor = preproc_Create{}
0002BCC0 <AmiBlitz3.ab2@976>   Poke.l ?comPtr_PreProcessor,*PreProcessor
0002BCF2 <AmiBlitz3.ab2@977>   preproc_LoadTokens{*PreProcessor,TokenHashMapFile}
0002BD06 <AmiBlitz3.ab2@978>   If *PreProcessor\tokens=#NULL
0002BD80 <AmiBlitz3.ab2@979>     If cli_verbose>=1 Then NPrint "No hashmap found (\\22"+TokenHashMapFile+"\\22), will be created..."
0002BD8A <AmiBlitz3.ab2@980>     preproc_QueryTokens{*PreProcessor}
0002BDBC <AmiBlitz3.ab2@981>     preproc_SaveTokens{*PreProcessor,TokenHashMapFile}
0002BE08 <AmiBlitz3.ab2@989>   If cli_sourcefile><"" AND err=False
0002BEAE <AmiBlitz3.ab2@990>     If cli_verbose>=2 Then NPrint "Loading sourcecode \\22",cli_sourcefile,"\\22."
0002BEE0 <AmiBlitz3.ab2@991>     succ=LoadSource{cli_sourcefile}
0002BEEA <AmiBlitz3.ab2@992>     If succ
0002BF22 <AmiBlitz3.ab2@993> 
0002BF9C <AmiBlitz3.ab2@994>         If cli_verbose>=1 Then NPrint "Compiling "+cli_sourcefile+"..."
0002BFD6 <AmiBlitz3.ab2@995>         comerr.l = CompileSource{cli_exefile,cli_debuginfo,cli_release}
0002BFE0 <AmiBlitz3.ab2@997>         If comerr
0002BFE6 <AmiBlitz3.ab2@999>         Else
0002BFEC <AmiBlitz3.ab2@1003>     Else
0002C03C <AmiBlitz3.ab2@1004>       If cli_verbose>=0 NPrint "\\1b[1m*** ERROR: Unable to read source file!\\1b[0m" : err=True
0002C088 <AmiBlitz3.ab2@1008>   If cli_savefile><"" AND err=False
0002C0F0 <AmiBlitz3.ab2@1009>     If cli_verbose>=2 Then NPrint "Saving Sourcefiles as "+cli_savefile
0002C11E <AmiBlitz3.ab2@1010>     SaveSource{cli_savefile}
0002C16A <AmiBlitz3.ab2@1013>   If cli_dumpfile><"" AND err=False
0002C1B4 <AmiBlitz3.ab2@1014>     If cli_verbose>=2 Then NPrint "Saving dumpfile."
0002C1EA <AmiBlitz3.ab2@1015>     DumpFile{cli_dumpfile,cli_dumpflags,cli_dumpform}
0002C1F4 <AmiBlitz3.ab2@1018>   If cli_run
0002C208 <AmiBlitz3.ab2@1019>     If comerr=False
0002C234 <AmiBlitz3.ab2@1020>       If cli_exefile
0002C2AE <AmiBlitz3.ab2@1021>         If cli_verbose>=1 Then NPrint "Compiling "+cli_sourcefile+"..."
0002C2DC <AmiBlitz3.ab2@1022>         comerr.l = CompileSource{"",cli_debuginfo,cli_release} ; re-compile for launch!
0002C326 <AmiBlitz3.ab2@1024>       If cli_verbose>=1 Then NPrint "Running program..."
0002C32C <AmiBlitz3.ab2@1025>       RunSource{}
0002C32E <AmiBlitz3.ab2@1027>         CLR.l d0
0002C36C <AmiBlitz3.ab2@1028>         !ComData_GetB{comByte_RunningFlag,D0}
0002C370 <AmiBlitz3.ab2@1029>         running.l = PutD0
0002C38C <AmiBlitz3.ab2@1030>         If running Then Delay_ 50
0002C3A0 <AmiBlitz3.ab2@1032>       Until running=False
0002C3B4 <AmiBlitz3.ab2@1033>       If Peek.l(?_runerror)
0002C404 <AmiBlitz3.ab2@1034>         If cli_verbose>=0 NPrint "\\1b[1m*** ERROR: Unable to run compiled program!\\1b[0m" : err=True
0002C416 <AmiBlitz3.ab2@1045>   preproc_Free{*PreProcessor} : *PreProcessor=#NULL
0002C460 <AmiBlitz3.ab2@1046>   If cli_verbose>=2 Then NPrint "Exit AmiBlitz3."
0002C466 <AmiBlitz3.ab2@1047>   DeinitEmulatedPED{}
0002C484 <AmiBlitz3.ab2@1049>   !asm
0002C48A <AmiBlitz3.ab2@1050> JMP terminate_ab3
0002C4B4 <AmiBlitz3.ab2@1055>   !basic
0002C4F2 <AmiBlitz3.ab2@1056>     *MyCatalog.l=OpenCatalogA_(0,"Compiler.catalog",0)
0002C4FC <AmiBlitz3.ab2@1058>     If *MyCatalog
0002C53C <AmiBlitz3.ab2@1059>        WZTags #SFH_Catalog,*MyCatalog,#TAG_DONE,0,#TAG_END,0
0002C552 <AmiBlitz3.ab2@1062>     WZLoadGUI ?wzgui
0002C570 <AmiBlitz3.ab2@1063>   !asm
0002C576 <AmiBlitz3.ab2@1066>   MOVEA.l ped_startup_addr,A1
0002C57C <AmiBlitz3.ab2@1067>   LEA str_tempfilename,A0
0002C57E <AmiBlitz3.ab2@1068>   JSR (A1)
0002C5A8 <AmiBlitz3.ab2@1074>   !basic
0002C5C2 <AmiBlitz3.ab2@1075>     If *MyCatalog Then CloseCatalog_ *MyCatalog
0002C5E0 <AmiBlitz3.ab2@1076>   !asm
0002C5E6 <AmiBlitz3.ab2@1079>   MOVE.l signalNum,D0
0002C5EC <AmiBlitz3.ab2@1080>   MOVEA.l _execbase,A6
0002C5F0 <AmiBlitz3.ab2@1081>   JSR _FreeSignal(A6)
0002C5F6 <AmiBlitz3.ab2@1083>   MOVE.l ptr_seg_debugger,D1
0002C5FA <AmiBlitz3.ab2@1084>   BEQ.b skip_unload_debugger
0002C5FE <AmiBlitz3.ab2@1085>     MOVEA.l _dosbase(PC),A6
0002C602 <AmiBlitz3.ab2@1086>     JSR _UnLoadSeg(A6)
0002C606 <AmiBlitz3.ab2@1089>   BSR.w Aclearallvars
0002C60A <AmiBlitz3.ab2@1090>   BSR.w free_residents
0002C60E <AmiBlitz3.ab2@1091>   BSR.w free_blitzlibs
0002C614 <AmiBlitz3.ab2@1094>   MOVE.l ptr_seg_ped,D1
0002C618 <AmiBlitz3.ab2@1095>   BEQ freemem_and_quit
0002C61C <AmiBlitz3.ab2@1096>   MOVEA.l _dosbase(PC),A6
0002C620 <AmiBlitz3.ab2@1097>   JSR _UnLoadSeg(A6)
0002C624 <AmiBlitz3.ab2@1100>   BSR.w freeallox
0002C62A <AmiBlitz3.ab2@1101>   MOVEA.l ptr_macrobuffer_begin,A1
0002C62C <AmiBlitz3.ab2@1102>   MOVE.l -(a1),D0
0002C62E <AmiBlitz3.ab2@1103>   ADDQ.l #4,d0
0002C634 <AmiBlitz3.ab2@1104>   MOVEA.l _execbase,A6
0002C638 <AmiBlitz3.ab2@1105>   JSR _FreeMem(A6)
0002C63E <AmiBlitz3.ab2@1108>   MOVEA.l _dosbase,A1
0002C644 <AmiBlitz3.ab2@1109>   MOVEA.l _execbase,A6
0002C648 <AmiBlitz3.ab2@1110>   JSR _CloseLibrary(A6)
0002C64E <AmiBlitz3.ab2@1112>   MOVEA.l constpcat,A1
0002C654 <AmiBlitz3.ab2@1113>   MOVE.l constmaxpc,D0
0002C65A <AmiBlitz3.ab2@1114>   MOVEA.l _execbase,A6
0002C65E <AmiBlitz3.ab2@1115>   JSR _FreeMem(A6)
0002C664 <AmiBlitz3.ab2@1118>   MOVEA.l _mathffpbase,A1
0002C66A <AmiBlitz3.ab2@1119>   MOVEA.l _execbase,A6
0002C66E <AmiBlitz3.ab2@1120>   JSR _CloseLibrary(A6)
0002C674 <AmiBlitz3.ab2@1130>     MOVEA.l _execbase,A6
0002C67A <AmiBlitz3.ab2@1131>     MOVE.l mempool,a0
0002C67E <AmiBlitz3.ab2@1132>     JSR _DeletePool(a6)
0002C684 <AmiBlitz3.ab2@1133>     CLR.l pushat
0002C68A <AmiBlitz3.ab2@1140>   JSR free_unusedfunctions
0002C68C <AmiBlitz3.ab2@1141>   MOVEQ #0,d0
0002C69A <AmiBlitz3.ab2@1144>   !exitasm
0002C6D2 <AmiBlitz3.ab2@1145>   If dynassign<>""
0002C6DC <AmiBlitz3.ab2@1146>     If *AssignSema
0002C6EC <AmiBlitz3.ab2@1147>       ReleaseSemaphore_ *AssignSema
0002C704 <AmiBlitz3.ab2@1148>       If (AttemptSemaphore_ (*AssignSema))                 ; we are the exclusive owner of the sema now!
0002C798 <AmiBlitz3.ab2@1149>         dos_RemAssign{"LIBS:",dos_AddPart{dynassign,"Libs"}}
0002C7D2 <AmiBlitz3.ab2@1150>         dos_RemAssign{dynassign}
0002C7E2 <AmiBlitz3.ab2@1151>         RemSemaphore_ *AssignSema
0002C7F2 <AmiBlitz3.ab2@1152>         ReleaseSemaphore_ *AssignSema
0002C828 <AmiBlitz3.ab2@1153>         If *AssignSema\ss_Link\ln_Name Then FreeVec_ *AssignSema\ss_Link\ln_Name : *AssignSema\ss_Link\ln_Name = #NULL
0002C838 <AmiBlitz3.ab2@1154>         FreeVec_ *AssignSema
0002C840 <AmiBlitz3.ab2@1155>         *AssignSema = #NULL
0002C86E <AmiBlitz3.ab2@1159>   SetCurrentDir{cli_path}
0002C890 <AmiBlitz3.ab2@1160>   !coutclose
0002C896 <AmiBlitz3.ab2@1161> End
0002C8A2 <AmiBlitz3.ab2@1166> str_doslibrary:     Dc.b "dos.library",0 : Even
0002C8A6 <AmiBlitz3.ab2@1167> _dosbase:           Ds.l 1
0002C8AC <AmiBlitz3.ab2@1171>   MOVEA.l _execbase,A6
0002C8B2 <AmiBlitz3.ab2@1172>   LEA str_doslibrary,A1
0002C8B6 <AmiBlitz3.ab2@1173>   JSR _OldOpenLibrary(A6)
0002C8BC <AmiBlitz3.ab2@1174>   MOVE.l D0,_dosbase
0002C8BE <AmiBlitz3.ab2@1175> RTS
0002C8C4 <AmiBlitz3.ab2@1179>   MOVEA.l #str_mathffpname,A1
0002C8CA <AmiBlitz3.ab2@1180>   MOVEA.l _execbase,A6
0002C8CE <AmiBlitz3.ab2@1181>   JSR _OldOpenLibrary(A6)
0002C8D4 <AmiBlitz3.ab2@1182>   MOVE.l D0,_mathffpbase
0002C8D6 <AmiBlitz3.ab2@1183> RTS
0002C908 <AmiBlitz3.ab2@1189>   !ComData_JMP{comFunc_SetNormalPointer}
0002C93A <AmiBlitz3.ab2@1197>   !ComData_JMP{comFunc_SetBusyPointer}
0002C964 <AmiBlitz3.ab2@1202>   !basic
0002C968 <AmiBlitz3.ab2@1203>   ab3save_filenameP.l = PutD0
0002C972 <AmiBlitz3.ab2@1204>   If ab3save_filenameP
0002C99A <AmiBlitz3.ab2@1205>     ab3save_filename.s = Peek.s(ab3save_filenameP)
0002C9C8 <AmiBlitz3.ab2@1207>     SaveSource{ab3save_filename}
0002C9CE <AmiBlitz3.ab2@1208>   Else
0002C9FC <AmiBlitz3.ab2@1209>     error{"INTERNAL ERROR: no filename passed in D0 to SaveSource{}!"}
0002CA1A <AmiBlitz3.ab2@1211>   !asm
0002CA1C <AmiBlitz3.ab2@1212>   RTS
0002CA46 <AmiBlitz3.ab2@1215>   !basic
0002CA4A <AmiBlitz3.ab2@1216>   ab3save_filenameP.l = PutD0
0002CA54 <AmiBlitz3.ab2@1217>   If ab3save_filenameP
0002CA7C <AmiBlitz3.ab2@1218>     ab3save_filename.s = Peek.s(ab3save_filenameP)
0002CAAA <AmiBlitz3.ab2@1219>     LoadSource{ab3save_filename}
0002CAB0 <AmiBlitz3.ab2@1220>   Else
0002CADE <AmiBlitz3.ab2@1221>     error{"INTERNAL ERROR: no filename passed in D0 to LoadSource{}!"}
0002CAFC <AmiBlitz3.ab2@1223>   !asm
0002CAFE <AmiBlitz3.ab2@1224>   RTS
0002CB28 <AmiBlitz3.ab2@1227>   !basic
0002CB2E <AmiBlitz3.ab2@1228>   ClearSource{}
0002CB4C <AmiBlitz3.ab2@1229>   !asm
0002CB4E <AmiBlitz3.ab2@1230>   RTS
0002CB78 <AmiBlitz3.ab2@1233>   !basic
0002CB7E <AmiBlitz3.ab2@1234>   OpenConsoleFake{}
0002CB9C <AmiBlitz3.ab2@1235>   !asm
0002CB9E <AmiBlitz3.ab2@1236>   RTS
0002CBC8 <AmiBlitz3.ab2@1240>   !basic
0002CBCE <AmiBlitz3.ab2@1241>   CloseConsoleFake{}
0002CBEC <AmiBlitz3.ab2@1242>   !asm
0002CBEE <AmiBlitz3.ab2@1243>   RTS
0002CBF4 <AmiBlitz3.ab2@1247>   MOVE.w d6,menuitemdebug
0002CC1E <AmiBlitz3.ab2@1248>   !basic
0002CC30 <AmiBlitz3.ab2@1249>   menuitemx.l = Peek.w(?menuitemdebug)
0002CC56 <AmiBlitz3.ab2@1250>   If menuitemx>16 OR  menuitemx<0
0002CCBE <AmiBlitz3.ab2@1251>     error{"Called invalid AB3 Menuitem #"+Str$(menuitemx)+"!"}
0002CCC6 <AmiBlitz3.ab2@1252>     menuitemx=0
0002CCD6 <AmiBlitz3.ab2@1254>   Poke.w ?menuitemdebug,menuitemx
0002CCF4 <AmiBlitz3.ab2@1255>   !asm
0002CCFA <AmiBlitz3.ab2@1256>   MOVE.w menuitemdebug,d6
0002CD00 <AmiBlitz3.ab2@1259>   MOVE.l A5,firstitem_
0002CD06 <AmiBlitz3.ab2@1260>   MOVE.w D7,numlines_org
0002CD0C <AmiBlitz3.ab2@1261>   MOVE.l d7,numlines
0002CD0E <AmiBlitz3.ab2@1262>   LSL.w #2,D6
0002CD14 <AmiBlitz3.ab2@1263>   LEA menu_items,A0
0002CD18 <AmiBlitz3.ab2@1264>   MOVEA.l $0(A0,D6.W),A0
0002CD22 <AmiBlitz3.ab2@1265>   MOVE.l #$FFFFffff,linenumat
0002CD2C <AmiBlitz3.ab2@1266>   MOVE.l #$FFFFffff,compilelinecounter
0002CD2E <AmiBlitz3.ab2@1270>   JSR (A0)
0002CD34 <AmiBlitz3.ab2@1271>   MOVE.l compilelinecounter,D0
0002CD36 <AmiBlitz3.ab2@1272> RTS
0002CD3A <AmiBlitz3.ab2@1274> menuitemdebug: Dc.l 0
0002CD3E <AmiBlitz3.ab2@1276> mempool                Dc.l 0
0002CD54 <AmiBlitz3.ab2@1277> str_loaddebugmessage:  Dc.b "Debug module to load",0 : Even
0002CD5A <AmiBlitz3.ab2@1278> dloaderr:             JSR handle_compileerror
0002CD76 <AmiBlitz3.ab2@1279>                        Dc.b "Can't LoadSeg debug module!",0 : Even
0002CDB4 <AmiBlitz3.ab2@1287>   !ComData_GetL{comFunc_ASLFileRequest,A3}
0002CDBA <AmiBlitz3.ab2@1288>   LEA str_loaddebugmessage,A2
0002CDC0 <AmiBlitz3.ab2@1289>   LEA str_blitz3assign,A0
0002CDC6 <AmiBlitz3.ab2@1290>   LEA str_temp_debugmodulename,A1
0002CDC8 <AmiBlitz3.ab2@1293>   JSR (A3)
0002CDCC <AmiBlitz3.ab2@1295>   BEQ.w menu_loaddebugmodule_noload
0002CDD2 <AmiBlitz3.ab2@1296>   MOVE.l D0,ptr_temp_debugmodule
0002CDD6 <AmiBlitz3.ab2@1297>   BSR.w call_setpointerbusy
0002CDDC <AmiBlitz3.ab2@1298>   MOVE.l A7,errstack
0002CDE6 <AmiBlitz3.ab2@1299>   MOVE.l #menu_loaddebugmodule_noload,errcont
0002CDEC <AmiBlitz3.ab2@1300>   MOVE.l ptr_temp_debugmodule,D1
0002CDF0 <AmiBlitz3.ab2@1302>   MOVEA.l _dosbase(PC),A6
0002CDF4 <AmiBlitz3.ab2@1303>   JSR _LoadSeg(A6)
0002CDF6 <AmiBlitz3.ab2@1304>   MOVE.l D0,D7
0002CDFA <AmiBlitz3.ab2@1305>   BEQ.w dloaderr
0002CE00 <AmiBlitz3.ab2@1306>   MOVE.l ptr_seg_debugger,D1
0002CE04 <AmiBlitz3.ab2@1307>   BEQ.b menu_loaddebugmodule_ndseg
0002CE08 <AmiBlitz3.ab2@1308>   MOVEA.l _dosbase(PC),A6
0002CE0C <AmiBlitz3.ab2@1309>   JSR _UnLoadSeg(A6)
0002CE10 <AmiBlitz3.ab2@1310>   BSR.w call_setpointernormal
0002CE16 <AmiBlitz3.ab2@1313>   MOVE.l D7,ptr_seg_debugger
0002CE18 <AmiBlitz3.ab2@1316> RTS
0002CE36 <AmiBlitz3.ab2@1319> str_request_exename:   Dc.b "Name of Executable to Create:",0 : Even                        ;xtext org source
0002CEF6 <AmiBlitz3.ab2@1320> exepath:               Ds.l 48                             ;Ds.b #MAX_STRINGSIZE ; Ds.l 48  ;xpath  dcb.b 192,0 org source
0002CFB6 <AmiBlitz3.ab2@1321> exefilename:           Ds.l 48                             ;Ds.b #MAX_STRINGSIZE ; Ds.l 48  ;xname  dcb.b 192,0 org source
0002CFBA <AmiBlitz3.ab2@1322> ptr_newexefilename:    Dc.l 0                                                               ;execname org
0002CFE4 <AmiBlitz3.ab2@1326>   !basic
0002D00E <AmiBlitz3.ab2@1327>   exepath.s = Peek.s(?exepath)
0002D038 <AmiBlitz3.ab2@1328>   exefile.s = Peek.s(?exefilename)
0002D0B8 <AmiBlitz3.ab2@1329>   exefile.s = dos_AddPart{exepath,exefile}
0002D0F0 <AmiBlitz3.ab2@1330>   Poke.s ?tempspace,exefile
0002D10E <AmiBlitz3.ab2@1331>   !asm
0002D114 <AmiBlitz3.ab2@1352>   LEA tempspace,a0
0002D116 <AmiBlitz3.ab2@1353>   MOVE.l a0,d0
0002D11A <AmiBlitz3.ab2@1354> BRA newcreate2
0002D144 <AmiBlitz3.ab2@1360>   !basic
0002D16E <AmiBlitz3.ab2@1361>   request_exename.s = Peek.s(?str_request_exename )
0002D1CA <AmiBlitz3.ab2@1362>   request_exename   = !TRANS{request_exename}
0002D1D0 <AmiBlitz3.ab2@1363>   GetD0 &request_exename
0002D1EE <AmiBlitz3.ab2@1364>   !asm
0002D1F0 <AmiBlitz3.ab2@1365>   MOVE.l D0,A2
0002D22E <AmiBlitz3.ab2@1368>   !ComData_GetL{comFunc_ASLFileRequest,A3}
0002D234 <AmiBlitz3.ab2@1370>   LEA exepath,A0
0002D23A <AmiBlitz3.ab2@1371>   LEA exefilename,A1
0002D23C <AmiBlitz3.ab2@1374>   JSR (A3)                                                 ;open ped filerequest
0002D240 <AmiBlitz3.ab2@1375>   BEQ.w cancel_createexe
0002D24A <AmiBlitz3.ab2@1378>   ADD.l #1,number_of_builds
0002D250 <AmiBlitz3.ab2@1381>   MOVE.l D0,ptr_newexefilename
0002D258 <AmiBlitz3.ab2@1382>   MOVE.w #-1,debugversion
0002D25E <AmiBlitz3.ab2@1383>   MOVE.w set_make_smallestcode,-(A7)
0002D266 <AmiBlitz3.ab2@1387>     MOVE.w #1,makeexec
0002D26C <AmiBlitz3.ab2@1388>     JSR ab3_OpenDebugFile
0002D270 <AmiBlitz3.ab2@1389>     BSR.w startcompile
0002D276 <AmiBlitz3.ab2@1390>     JSR ab3_CloseDebugFile
0002D280 <AmiBlitz3.ab2@1391>     CMP.l #"NORE",reqmode
0002D284 <AmiBlitz3.ab2@1392>   BEQ 'l1
0002D28A <AmiBlitz3.ab2@1394>   TST.w anyerrs
0002D28E <AmiBlitz3.ab2@1395>   BNE.b menu_createexecutable__skip
0002D292 <AmiBlitz3.ab2@1396>   BSR.w savefile
0002D298 <AmiBlitz3.ab2@1399>   MOVE.w (A7)+,set_make_smallestcode
0002D29A <AmiBlitz3.ab2@1402> RTS
0002D2A2 <AmiBlitz3.ab2@1406>   MOVE.w #-1,flag_noPED
0002D2A4 <AmiBlitz3.ab2@1407> RTS
0002D2AC <AmiBlitz3.ab2@1411>   MOVE.w #-1,flag_noCLI
0002D2AE <AmiBlitz3.ab2@1412> RTS
0002D2D8 <AmiBlitz3.ab2@1415>   !basic
0002D300 <AmiBlitz3.ab2@1416>     If dbg_fid>=0 Then file_Close{dbg_fid} : dbg_fid = -1
0002D310 <AmiBlitz3.ab2@1417>     Poke.w ?word_WriteDebugFileNow,0
0002D32E <AmiBlitz3.ab2@1418>   !asm
0002D330 <AmiBlitz3.ab2@1419> RTS
0002D35A <AmiBlitz3.ab2@1422>   !basic
0002D36A <AmiBlitz3.ab2@1423>   Poke.w ?word_WriteDebugFileNow,0
0002D37C <AmiBlitz3.ab2@1424>   If dbg_fid>=0
0002D392 <AmiBlitz3.ab2@1425>     file_Close{dbg_fid} : dbg_fid = -1
0002D3A4 <AmiBlitz3.ab2@1427>   If dbg_fid.l<0
0002D3A6 <AmiBlitz3.ab2@1428>     CLR.l d0
0002D3E4 <AmiBlitz3.ab2@1429>     !ComData_GetW{comWord_CreateDebugFile,D0}
0002D3E8 <AmiBlitz3.ab2@1430>     dbg_Create.l = PutD0
0002D3F2 <AmiBlitz3.ab2@1431>     If (dbg_Create) ; only when set!
0002D402 <AmiBlitz3.ab2@1432>       exefileP.l = Peek.l (?ptr_newexefilename)
0002D42A <AmiBlitz3.ab2@1433>       exefile.s = ""
0002D45C <AmiBlitz3.ab2@1434>       If exefileP Then exefile.s = Peek.s(exefileP)
0002D494 <AmiBlitz3.ab2@1435>       If exefile><""
0002D4EA <AmiBlitz3.ab2@1436>         dbg_fid = file_Open{exefile+".dbg",#file_forcewrite}
0002D4FC <AmiBlitz3.ab2@1437>         If dbg_fid>=0
0002D50E <AmiBlitz3.ab2@1438>           Poke.w ?word_WriteDebugFileNow,-1
0002D51A <AmiBlitz3.ab2@1441>       oldhunkoffset.l = -1
0002D542 <AmiBlitz3.ab2@1442>       oldfile.s       = ""
0002D560 <AmiBlitz3.ab2@1445>   !asm
0002D562 <AmiBlitz3.ab2@1446> RTS
0002D568 <AmiBlitz3.ab2@1449> TST.w word_WriteDebugFileNow
0002D56C <AmiBlitz3.ab2@1450> BEQ 'skipdebugfile
0002D596 <AmiBlitz3.ab2@1451> !basic
0002D5A8 <AmiBlitz3.ab2@1452>   If dbg_fid>=0
0002D5BA <AmiBlitz3.ab2@1453>     pass.l          = Peek.w(?pass)
0002D5CC <AmiBlitz3.ab2@1454>     If pass><0
0002D5D2 <AmiBlitz3.ab2@1455>       oldhunkoffset.l = hunkoffset.l
0002D606 <AmiBlitz3.ab2@1456>       oldfile.s       = codefile.s
0002D622 <AmiBlitz3.ab2@1457>       If Peek.w (?ininclude)>0
0002D632 <AmiBlitz3.ab2@1458>         codeline.l = Peek.l(?includeline);-1
0002D6A2 <AmiBlitz3.ab2@1459>         codefile.s = dos_FilePart{incdim(Peek.w(?ininclude)-1)}
0002D6A8 <AmiBlitz3.ab2@1460>       Else
0002D6D6 <AmiBlitz3.ab2@1461>         !ComData_LEA{comStr_SourceName,A0}
0002D6D8 <AmiBlitz3.ab2@1462>         MOVE.l A0,D0
0002D6DC <AmiBlitz3.ab2@1463>         sourceP.l = PutD0
0002D704 <AmiBlitz3.ab2@1464>         codefile.s = Peek.s(sourceP)
0002D714 <AmiBlitz3.ab2@1465>         codeline.l = Peek.l(?linenumat)
0002D73C <AmiBlitz3.ab2@1467>       hunkoffset.l = Peek.l(?destpointer)-Peek.l(?destbufferstart)
0002D790 <AmiBlitz3.ab2@1468>       If oldhunkoffset><hunkoffset OR oldfile><codefile
0002D7A0 <AmiBlitz3.ab2@1475>         *sourceLine.SourceLine_t = Peek.l(?sourceline)
0002D7AA <AmiBlitz3.ab2@1476>         If *sourceLine
0002D7C0 <AmiBlitz3.ab2@1477>           MaxLen detokenline.s = 4096
0002D802 <AmiBlitz3.ab2@1478>          !ComData_GetL{comPtr_PreProcessor,include_preprocessor}
0002D812 <AmiBlitz3.ab2@1479>          *tn.preprocessor = Peek.l(?include_preprocessor)
0002D83E <AmiBlitz3.ab2@1480>           written.l = preproc_Detokenize{*tn,&*sourceLine\Text,&detokenline,*sourceLine\CharLength}
0002D86C <AmiBlitz3.ab2@1481>           If written>0 Then Poke.b &detokenline+written-1,0
0002D896 <AmiBlitz3.ab2@1482>           sourceLineText.s = Peek.s(&detokenline)
0002D89C <AmiBlitz3.ab2@1483>         Else
0002D8C4 <AmiBlitz3.ab2@1484>           sourceLineText = "NULL"
0002D98C <AmiBlitz3.ab2@1487>         file_WriteLine{dbg_fid,Hex$(hunkoffset)+" <"+codefile+"@"+Str$(codeline)+"> "+sourceLineText}
0002D9AA <AmiBlitz3.ab2@1493> !asm
0002D9AC <AmiBlitz3.ab2@1495> RTS
0002D9AE <AmiBlitz3.ab2@1497> word_WriteDebugFileNow: Dc.w 0
0002D9B0 <AmiBlitz3.ab2@1499> flag_noPED:  Ds.w 1                                        ;closeed org source
0002D9B2 <AmiBlitz3.ab2@1500> flag_noCLI:  Ds.w 1                                        ;nocli org source
0002D9B6 <AmiBlitz3.ab2@1504>   MOVEM.l D0-D1/A0-A1/A6,-(A7)
0002D9BC <AmiBlitz3.ab2@1505>   MOVEA.l _execbase,A6
0002D9C0 <AmiBlitz3.ab2@1506>   JSR _CacheClearU(A6)
0002D9C4 <AmiBlitz3.ab2@1507>   MOVEM.l (A7)+,D0-D1/A0-A1/A6
0002D9C6 <AmiBlitz3.ab2@1508> RTS
0002D9D0 <AmiBlitz3.ab2@1552>   ADD.l #1,number_of_builds
0002D9D6 <AmiBlitz3.ab2@1554>   CLR.w debugversion
0002D9DC <AmiBlitz3.ab2@1555>   CLR.w flag_noPED
0002D9E2 <AmiBlitz3.ab2@1556>   CLR.w flag_noCLI
0002D9EA <AmiBlitz3.ab2@1559>     MOVE.w #0,makeexec                                     ;MOVE.w #$FFFF,debugversion
0002D9EE <AmiBlitz3.ab2@1560>     BSR.w startcompile
0002D9F8 <AmiBlitz3.ab2@1561>     CMP.l #"NORE",reqmode
0002D9FC <AmiBlitz3.ab2@1562>   BEQ 'l1
0002DA02 <AmiBlitz3.ab2@1565>   TST.w anyerrs
0002DA06 <AmiBlitz3.ab2@1566>    BNE.w JL_0_3482
0002DA0A <AmiBlitz3.ab2@1568>   MOVE.w flag_noPED(PC),D1
0002DA0E <AmiBlitz3.ab2@1569>    BEQ.w skip_closingGUI
0002DA40 <AmiBlitz3.ab2@1574>   !ComData_JSR{comFunc_CloseGUI}
0002DA44 <AmiBlitz3.ab2@1575> BRA.b runprogram
0002DA48 <AmiBlitz3.ab2@1579>   BSR.w compilerequester
0002DA4E <AmiBlitz3.ab2@1582>   MOVEA.l _dosbase,A6
0002DA54 <AmiBlitz3.ab2@1583>   LEA exepath,a0
0002DA56 <AmiBlitz3.ab2@1584>   MOVE.l a0,d1
0002DA58 <AmiBlitz3.ab2@1585>   MOVEQ #-2,d2
0002DA5C <AmiBlitz3.ab2@1586>   JSR _Lock(a6)                                            ;lock
0002DA62 <AmiBlitz3.ab2@1587>   MOVE.l d0,exelock
0002DA68 <AmiBlitz3.ab2@1588>   MOVE.l #0,d1
0002DA6C <AmiBlitz3.ab2@1589>   JSR _CurrentDir(A6)
0002DA72 <AmiBlitz3.ab2@1590>   MOVE.l D0,lock_currentdir
0002DA74 <AmiBlitz3.ab2@1591>   MOVE.l D0,D1
0002DA78 <AmiBlitz3.ab2@1592>   JSR _CurrentDir(A6)
0002DA7E <AmiBlitz3.ab2@1593>   CLR.l ptr_exetask
0002DA84 <AmiBlitz3.ab2@1602>   MOVE.l #str_process_name,D1
0002DA86 <AmiBlitz3.ab2@1603>   MOVEQ.l #$00,D2
0002DA8C <AmiBlitz3.ab2@1604>   MOVE.l #proc_seglist,D3
0002DA8E <AmiBlitz3.ab2@1605>   LSR.l #2,D3
0002DA94 <AmiBlitz3.ab2@1606>   MOVE.l stacksize,D4
0002DA9A <AmiBlitz3.ab2@1607>   MOVEA.l _dosbase,A6
0002DA9E <AmiBlitz3.ab2@1608>   JSR _CreateProc(A6)                                      ;runtask
0002DAA0 <AmiBlitz3.ab2@1609>   TST.l D0
0002DAA4 <AmiBlitz3.ab2@1610>    BEQ ErrorRunningProg
0002DADA <AmiBlitz3.ab2@1612>   !ComData_SetB{comByte_RunningFlag,#1}   ; this should be done here, straigt after it is clear that
0002DAE0 <AmiBlitz3.ab2@1614>   TST.w flag_noPED
0002DAE4 <AmiBlitz3.ab2@1615>    BNE.b JL_0_344E
0002DAE8 <AmiBlitz3.ab2@1616>   BSR.w close_compilewin
0002DAEE <AmiBlitz3.ab2@1619>   CLR.l firstlocal
0002DAF4 <AmiBlitz3.ab2@1620>   CLR.l firstglob
0002DAF8 <AmiBlitz3.ab2@1621>   MOVE.w flag_noPED(PC),D1
0002DAFC <AmiBlitz3.ab2@1622>   BEQ.w skip_openGUI
0002DB2E <AmiBlitz3.ab2@1626>   !ComData_JSR{comFunc_CreateGUI}
0002DB30 <AmiBlitz3.ab2@1635> RTS
0002DB3A <AmiBlitz3.ab2@1638> MOVE.l #1,_runerror
0002DB3E <AmiBlitz3.ab2@1639> BRA JL_0_344E
0002DB42 <AmiBlitz3.ab2@1641> _runerror: Dc.l 0
0002DB46 <AmiBlitz3.ab2@1642> lock_currentdir:    Ds.l 1                                          ;tasklock org source
0002DB4A <AmiBlitz3.ab2@1643> ptr_exetask:        Ds.l 1                                          ;panictask org source
0002DB4E <AmiBlitz3.ab2@1644> signalNum:          Ds.l 1                                          ;panicbit org source
0002DB52 <AmiBlitz3.ab2@1645> signals:            Ds.l 1                                          ;panicmask org source
0002DB68 <AmiBlitz3.ab2@1647> str_process_name:   Dc.b "Blitz ][ Program Proc",0 : Even           ;procname org source
0002DB6D <AmiBlitz3.ab2@1648>                     Ds.b 5                                          ;cnop 0,4 :dc.l 0   ;length org source
0002DB70 <AmiBlitz3.ab2@1649> Even4
0002DB74 <AmiBlitz3.ab2@1651> ptr_ThisTask:       Ds.l 1                                          ;length
0002DB78 <AmiBlitz3.ab2@1652> .proc_seglist:      Ds.l 1                                          ;procstart org source ;next
0002DB7E <AmiBlitz3.ab2@1656>   MOVEA.l $4,A0
0002DB86 <AmiBlitz3.ab2@1657>   MOVE.l  $114(A0),ptr_exetask
0002DB8C <AmiBlitz3.ab2@1659>   MOVEA.l _dosbase,A6
0002DB92 <AmiBlitz3.ab2@1660>   MOVE.l exelock,D1
0002DB96 <AmiBlitz3.ab2@1661>   JSR _CurrentDir(A6)
0002DBCC <AmiBlitz3.ab2@1666>   !ComData_SetB{comByte_RunningFlag,#1}
0002DBD0 <AmiBlitz3.ab2@1672>   MOVE.w flag_noCLI(PC),D1
0002DBD4 <AmiBlitz3.ab2@1673>    BNE.b skip_openconsole
0002DC06 <AmiBlitz3.ab2@1677>   !ComData_JSR{comFunc_OpenConsole}
0002DC0A <AmiBlitz3.ab2@1680>   BSR.w calcvbr
0002DC10 <AmiBlitz3.ab2@1681>   MOVEA.l vbr,A0
0002DC16 <AmiBlitz3.ab2@1686>   CLR.w dirmode
0002DC1C <AmiBlitz3.ab2@1687>   CLR.l firstglob
0002DC22 <AmiBlitz3.ab2@1688>   CLR.l firstlocal
0002DC28 <AmiBlitz3.ab2@1690>   MOVE.l stacksize,D2
0002DC2E <AmiBlitz3.ab2@1691>   MOVE.l #$624C745A,D7                                      ;#'bLtZ',d7 org source ;force cli-type run
0002DC34 <AmiBlitz3.ab2@1692>   LEA str_cliarguments,A0                                   ;cli arguement
0002DC3A <AmiBlitz3.ab2@1693>   MOVEA.l destbufferstart,A1
0002DC3E <AmiBlitz3.ab2@1694>   BSR.w Aclearcache
0002DC40 <AmiBlitz3.ab2@1697>   JSR (A1)                                                 ; execute compiled code  ;Run the thing!
0002DC46 <AmiBlitz3.ab2@1699>   MOVEA.l vbr,A0
0002DC4C <AmiBlitz3.ab2@1701>   CLR.l firstglob
0002DC52 <AmiBlitz3.ab2@1702>   CLR.l firstlocal
0002DC58 <AmiBlitz3.ab2@1703>   MOVEA.l _dosbase,A6
0002DC5E <AmiBlitz3.ab2@1704>   MOVE.l exelock,d1
0002DC62 <AmiBlitz3.ab2@1705>   BEQ 'nolock
0002DC66 <AmiBlitz3.ab2@1706>   JSR _UnLock(a6)
0002DC9C <AmiBlitz3.ab2@1711>   !ComData_SetB{comByte_RunningFlag,#0}
0002DCA0 <AmiBlitz3.ab2@1714>   MOVE.w flag_noCLI(PC),D1
0002DCA4 <AmiBlitz3.ab2@1715>    BNE.b skip_closeconsole
0002DCD6 <AmiBlitz3.ab2@1719>   !ComData_JSR{comFunc_CloseConsole}
0002DCDE <AmiBlitz3.ab2@1722>   MOVE.w #$0001,stopit
0002DCE2 <AmiBlitz3.ab2@1723>   MOVE.l signals(PC),D0
0002DCE8 <AmiBlitz3.ab2@1724>   MOVEA.l ptr_ThisTask,A1
0002DCEE <AmiBlitz3.ab2@1725>   MOVEA.l _execbase,A6
0002DCF2 <AmiBlitz3.ab2@1726>   JSR _Signal(A6)
0002DCF4 <AmiBlitz3.ab2@1727> RTS
0002DCFA <AmiBlitz3.ab2@1731>   MOVEA.l _execbase,A6
0002DCFE <AmiBlitz3.ab2@1732>   MOVE.w $128(A6),D0
0002DD00 <AmiBlitz3.ab2@1733>   MOVEQ.l #$00,D1
0002DD04 <AmiBlitz3.ab2@1734>   ANDI.w #$F,D0
0002DD08 <AmiBlitz3.ab2@1737>     BEQ.b calcvbr__skip
0002DD0A <AmiBlitz3.ab2@1738>     ADDQ.w #1,D1
0002DD0C <AmiBlitz3.ab2@1739>     LSR.w #1,D0
0002DD10 <AmiBlitz3.ab2@1740> BRA.b calcvbr_loop
0002DD12 <AmiBlitz3.ab2@1743>   MOVEQ.l #$00,D2
0002DD16 <AmiBlitz3.ab2@1744>   CMP.w #$2,D1
0002DD1A <AmiBlitz3.ab2@1745>    BCS.b calcvbr__skip2
0002DD20 <AmiBlitz3.ab2@1746>   MOVEA.l _execbase,A6
0002DD24 <AmiBlitz3.ab2@1747>   JSR _SuperState(A6)
0002DD28 <AmiBlitz3.ab2@1748>   Dc.l $4E7A2801                                           ;movec vbr,D2
0002DD2C <AmiBlitz3.ab2@1749>   JSR _UserState(A6)
0002DD32 <AmiBlitz3.ab2@1752>   MOVE.l D2,vbr
0002DD34 <AmiBlitz3.ab2@1753> RTS
0002DD3A <AmiBlitz3.ab2@1757>   LEA instrtab,a0
0002DD40 <AmiBlitz3.ab2@1758>   MOVE.l #labelhash-instrtab,d0
0002DD42 <AmiBlitz3.ab2@1759>   ASR.l #2,d0
0002DD44 <AmiBlitz3.ab2@1760>   SUBQ.l #1,d0
0002DD46 <AmiBlitz3.ab2@1763>   CLR.l (a0)+
0002DD48 <AmiBlitz3.ab2@1764>   SUBQ.l #1,d0
0002DD4C <AmiBlitz3.ab2@1765>   BNE 'l10
0002DD50 <AmiBlitz3.ab2@1766>   BSR.w call_setpointerbusy
0002DD54 <AmiBlitz3.ab2@1767>   BSR.w free_userlibs
0002DD58 <AmiBlitz3.ab2@1768>   BSR.w scan_for_userlibs
0002DD5C <AmiBlitz3.ab2@1769>   BSR.w JL_0_7082
0002DD60 <AmiBlitz3.ab2@1770> BRA.w call_setpointernormal
0002DD8A <AmiBlitz3.ab2@1776>   !basic
0002DDC4 <AmiBlitz3.ab2@1777>   Poke.l ?size_acidlibs, dos_GetFileSize{Peek$(?str_path_acidlibs)}
0002DDD4 <AmiBlitz3.ab2@1779>   deflibNameP.l = Peek.l(?deflib)
0002DDDE <AmiBlitz3.ab2@1780>   If deflibNameP
0002DE10 <AmiBlitz3.ab2@1781>     If Peek.s(deflibNameP)<>""
0002DE5A <AmiBlitz3.ab2@1782>       Poke.l ?size_deflibs, dos_GetFileSize{Peek.s(Peek.l(?deflib))}
0002DE60 <AmiBlitz3.ab2@1783>     Else
0002DE9A <AmiBlitz3.ab2@1784>       Poke.l ?size_deflibs, dos_GetFileSize{Peek.s(?str_path_deflibs)}
0002DEA0 <AmiBlitz3.ab2@1786>   Else
0002DEDA <AmiBlitz3.ab2@1787>     Poke.l ?size_deflibs, dos_GetFileSize{Peek.s(?str_path_deflibs)}
0002DF08 <AmiBlitz3.ab2@1788>     error{"INTERNAL: Invalid deflib name pointer!"}
0002DF26 <AmiBlitz3.ab2@1790>   !asm
0002DF2C <AmiBlitz3.ab2@1795>   MOVE.l #str_path_userlibs,D1
0002DF2E <AmiBlitz3.ab2@1796>   MOVEQ.l #-$02,D2
0002DF34 <AmiBlitz3.ab2@1797>   MOVEA.l _dosbase,A6
0002DF38 <AmiBlitz3.ab2@1798>   JSR _Lock(A6)
0002DF3A <AmiBlitz3.ab2@1799>   MOVE.l D0,D7
0002DF3E <AmiBlitz3.ab2@1800>    BEQ.w exit_get_libraries
0002DF40 <AmiBlitz3.ab2@1801>   MOVE.l D7,D1
0002DF46 <AmiBlitz3.ab2@1802>   MOVE.l #ptr_parameterstore,D2
0002DF4A <AmiBlitz3.ab2@1803>   JSR _Examine(A6)
0002DF4C <AmiBlitz3.ab2@1804>   TST.l D0
0002DF50 <AmiBlitz3.ab2@1805>   BEQ.w unlock_and_exit_get_libraries
0002DF56 <AmiBlitz3.ab2@1806>   MOVE.l fib_DirEntryType,D0
0002DF5A <AmiBlitz3.ab2@1807>   BMI.w unlock_and_exit_get_libraries
0002DF5C <AmiBlitz3.ab2@1812>     MOVE.l D7,D1
0002DF62 <AmiBlitz3.ab2@1813>     MOVE.l #ptr_parameterstore,D2
0002DF68 <AmiBlitz3.ab2@1814>     MOVEA.l _dosbase,A6
0002DF6C <AmiBlitz3.ab2@1815>     JSR _ExNext(A6)
0002DF6E <AmiBlitz3.ab2@1816>     TST.l D0
0002DF72 <AmiBlitz3.ab2@1817>      BEQ.w exit_scan_libsdrawer                            ; kein weiteres File
0002DF78 <AmiBlitz3.ab2@1819>     MOVE.l fib_DirEntryType,D0                             ; positive for directoies, negative for files
0002DF7C <AmiBlitz3.ab2@1820>     BPL.w scan_libsdrawer                                  ; skip directories
0002DF82 <AmiBlitz3.ab2@1822>     LEA fib_FileName,A0                                    ; pruefen ob infofile
0002DF86 <AmiBlitz3.ab2@1823>     BSR.w check_for_infoextention
0002DF8A <AmiBlitz3.ab2@1824>     BEQ.w scan_libsdrawer
0002DF90 <AmiBlitz3.ab2@1826>     MOVEA.l _execbase,A6                                   ; allocate $26 = 38 bytes fuer listeneintrag
0002DF92 <AmiBlitz3.ab2@1827>     MOVEQ.l #$26,D0
0002DF94 <AmiBlitz3.ab2@1828>     MOVEQ.l #$01,D1
0002DF9A <AmiBlitz3.ab2@1829>     MOVE.l mempool,a0
0002DF9E <AmiBlitz3.ab2@1830>     JSR _AllocPooled(a6)
0002DFA4 <AmiBlitz3.ab2@1832>     MOVEA.l _dosbase,A6
0002DFA6 <AmiBlitz3.ab2@1833>     MOVE.l D0,D6                                           ; sichere speicheradresse in D6
0002DFAC <AmiBlitz3.ab2@1836>     LEA ptr_userlibs_list,A0                               ; pruefe liste
0002DFAE <AmiBlitz3.ab2@1839>     MOVE.l (A0),D5
0002DFB2 <AmiBlitz3.ab2@1840>      BEQ.w JL_0_3722                                       ; kein pointer da? kann springe weiter
0002DFB4 <AmiBlitz3.ab2@1841>     MOVEA.l D5,A2
0002DFB6 <AmiBlitz3.ab2@1842>     ADDQ.w #6,A2                                           ; 6 bytes weiter gehen, um dateinamen zu speichern
0002DFBC <AmiBlitz3.ab2@1845>     LEA fib_FileName,A1                                    ; vergleich, ob Dateiname schon in der liste ist
0002DFBE <AmiBlitz3.ab2@1848>       MOVEQ.l #$00,D0
0002DFC0 <AmiBlitz3.ab2@1849>       MOVE.b (A1)+,D0
0002DFC4 <AmiBlitz3.ab2@1850>        BEQ.w JL_0_3722                                     ; dateiname komplett, dann weiter
0002DFC6 <AmiBlitz3.ab2@1851>       MOVEQ.l #$00,D1
0002DFC8 <AmiBlitz3.ab2@1852>       MOVE.b (A2)+,D1
0002DFCC <AmiBlitz3.ab2@1853>        BEQ.w JL_0_371C
0002DFEE <AmiBlitz3.ab2@1854>       !compare1                                            ;bsr.w tstalpha
0002DFF2 <AmiBlitz3.ab2@1855>       BNE.w JL_0_3702
0002DFF6 <AmiBlitz3.ab2@1856>       ANDI.w #$DF,D0
0002DFF8 <AmiBlitz3.ab2@1859>       EXG.l D0,D1
0002E01A <AmiBlitz3.ab2@1860>       !compare1                                            ;bsr.w tstalpha
0002E01E <AmiBlitz3.ab2@1861>       BNE.w JL_0_3710
0002E022 <AmiBlitz3.ab2@1862>       ANDI.w #$DF,D0
0002E024 <AmiBlitz3.ab2@1865>       EXG.l D0,D1
0002E026 <AmiBlitz3.ab2@1866>       CMP.b D1,D0
0002E02A <AmiBlitz3.ab2@1867>     BEQ.w JL_0_36E6
0002E02E <AmiBlitz3.ab2@1868>     BCS.w JL_0_3722
0002E030 <AmiBlitz3.ab2@1871>     MOVEA.l D5,A0
0002E034 <AmiBlitz3.ab2@1872> BRA.w JL_0_36D6
0002E036 <AmiBlitz3.ab2@1875>     MOVEA.l D6,A1                                          ; hier war die adresse des allokierten Speicers drin
0002E038 <AmiBlitz3.ab2@1876>     MOVE.l (A0),(A1)
0002E03A <AmiBlitz3.ab2@1877>     MOVE.l A1,(A0)
0002E03C <AmiBlitz3.ab2@1878>     ADDQ.w #4,A1                                           ; pointer zum naechsten namen ueberspringen
0002E040 <AmiBlitz3.ab2@1879>     MOVE.w #$FFFF,(A1)+                                    ; $FFFF schreiben
0002E046 <AmiBlitz3.ab2@1880>     MOVEA.l #fib_FileName,A0                               ; dateinamen in die liste kopieren
0002E048 <AmiBlitz3.ab2@1883>       MOVE.b (A0)+,(A1)+
0002E04C <AmiBlitz3.ab2@1884>     BNE.w JL_0_3734
0002E050 <AmiBlitz3.ab2@1885> BRA.w scan_libsdrawer
0002E052 <AmiBlitz3.ab2@1888>   MOVE.l D7,D1
0002E058 <AmiBlitz3.ab2@1889>   MOVEA.l _dosbase,A6
0002E05C <AmiBlitz3.ab2@1890>   JSR _UnLock(A6)
0002E05E <AmiBlitz3.ab2@1891>   MOVEQ.l #-$01,D0
0002E060 <AmiBlitz3.ab2@1894> RTS
0002E062 <AmiBlitz3.ab2@1897>   MOVE.l D7,D1
0002E068 <AmiBlitz3.ab2@1898>   MOVEA.l _dosbase,A6
0002E06C <AmiBlitz3.ab2@1899>   JSR _UnLock(A6)
0002E06E <AmiBlitz3.ab2@1900>   MOVEQ.l #$00,D0
0002E070 <AmiBlitz3.ab2@1901> RTS
0002E076 <AmiBlitz3.ab2@1905>   MOVEA.l _execbase,A6
0002E07C <AmiBlitz3.ab2@1906>   MOVEA.l ptr_userlibs_list,A2
0002E082 <AmiBlitz3.ab2@1907>   CLR.l ptr_userlibs_list
0002E086 <AmiBlitz3.ab2@1910>     CMPA.w #$0,A2
0002E08A <AmiBlitz3.ab2@1911>     BEQ.w exit_free_userlib
0002E08C <AmiBlitz3.ab2@1912>       MOVEA.l A2,A1
0002E08E <AmiBlitz3.ab2@1913>       MOVEQ.l #$26,D0
0002E090 <AmiBlitz3.ab2@1914>       MOVEA.l (A2),A2
0002E096 <AmiBlitz3.ab2@1915>       MOVE.l mempool,a0
0002E09C <AmiBlitz3.ab2@1916>       MOVEA.l _execbase,A6
0002E0A0 <AmiBlitz3.ab2@1917>       JSR _FreePooled(A6)
0002E0A4 <AmiBlitz3.ab2@1918> BRA.w loop_free_userlib
0002E0A6 <AmiBlitz3.ab2@1921> RTS
0002E0A8 <AmiBlitz3.ab2@1924> pass:  Dc.w 0                                             ; smallpass org source
0002E0AA <AmiBlitz3.ab2@1925> compiler_job: Dc.w 0                                      ; added by thilo: what the compiler is doing at the moment
0002E0B0 <AmiBlitz3.ab2@1929>   MOVE.l A7,errstack                                      ;startcompile
0002E0B6 <AmiBlitz3.ab2@1938>   CLR.l reqmode
0002E0C0 <AmiBlitz3.ab2@1940>   MOVE.l #Aclearallvars,errcont
0002E0CA <AmiBlitz3.ab2@1941>   MOVE.l #concomstack,concomsp
0002E0CE <AmiBlitz3.ab2@1948>   MOVE.w #1450,D0
0002E0D0 <AmiBlitz3.ab2@1949>   LSR.w #3,D0
0002E0D2 <AmiBlitz3.ab2@1950>   SUBQ.w #7,D0                                             ; 173
0002E0D8 <AmiBlitz3.ab2@1951>   MOVE.w D0,progressbar_width
0002E0DA <AmiBlitz3.ab2@1952>   SWAP D0
0002E0DC <AmiBlitz3.ab2@1953>   CLR.w D0
0002E0E2 <AmiBlitz3.ab2@1954>   MOVE.l numlines,d1
0002E0E6 <AmiBlitz3.ab2@1955>   DIVU.l d1,d0                                             ; progressbar_width / numlines
0002E0E8 <AmiBlitz3.ab2@1957>   TST.w D0
0002E0EC <AmiBlitz3.ab2@1958>   BNE.w JL_0_37C0
0002E0EE <AmiBlitz3.ab2@1959>   MOVEQ.l #-$01,D0
0002E0F4 <AmiBlitz3.ab2@1962>   MOVE.w D0,progress_per_line
0002E0FC <AmiBlitz3.ab2@1970>   BTST #$7,use_debugger
0002E100 <AmiBlitz3.ab2@1972>   BNE 'debugon
0002E106 <AmiBlitz3.ab2@1973>   CLR.w debugmode
0002E10A <AmiBlitz3.ab2@1974> BRA.b 'debugoff
0002E110 <AmiBlitz3.ab2@1977>   SNE debugmode
0002E148 <AmiBlitz3.ab2@1985>   !ComData_SetB{comByte_DebugMode,debugmode}
0002E14E <AmiBlitz3.ab2@1988>   CLR.w dirmode                                            ;direct mode flag
0002E154 <AmiBlitz3.ab2@1989>   CLR.w ezerr                                              ;quiet error
0002E15A <AmiBlitz3.ab2@1990>   CLR.l currentfunction
0002E160 <AmiBlitz3.ab2@1991>   CLR.w connest
0002E166 <AmiBlitz3.ab2@1992>   CLR.w varmode
0002E16C <AmiBlitz3.ab2@1993>   CLR.w proceduremode
0002E172 <AmiBlitz3.ab2@1994>   CLR.w ininclude
0002E178 <AmiBlitz3.ab2@1995>   CLR.w intstring
0002E17E <AmiBlitz3.ab2@1996>   CLR.w pass
0002E186 <AmiBlitz3.ab2@1997>   MOVE.w #0,compiler_job
0002E18C <AmiBlitz3.ab2@1998>   CLR.l funcscanon
0002E192 <AmiBlitz3.ab2@2006>   CLR.l funcscanon
0002E196 <AmiBlitz3.ab2@2007>   BSR.w compileall
0002E19C <AmiBlitz3.ab2@2009>   MOVE.w dontwrite,d0
0002E1A0 <AmiBlitz3.ab2@2010>   CMP.w #1,d0
0002E1A4 <AmiBlitz3.ab2@2011>   BNE 'l3
0002E1AA <AmiBlitz3.ab2@2012>   CLR.w dontwrite
0002E1AE <AmiBlitz3.ab2@2013>   BSR compileall                                           ;if a function is not found
0002E1B4 <AmiBlitz3.ab2@2017>   TST.b funcoptimize
0002E1BA <AmiBlitz3.ab2@2019>   LEA firstproc,a0
0002E1C0 <AmiBlitz3.ab2@2020>   CLR.l savefuncspace
0002E1C2 <AmiBlitz3.ab2@2021>   MOVE.l (a0),d0
0002E1C4 <AmiBlitz3.ab2@2025>     MOVE.l d0,a0
0002E1C8 <AmiBlitz3.ab2@2026>     BEQ 'out
0002E1CC <AmiBlitz3.ab2@2027>     TST.b isfunc(a0)
0002E1D0 <AmiBlitz3.ab2@2028>     BNE 'nex
0002E1D4 <AmiBlitz3.ab2@2029>     MOVEM.l d2/a6/a0,-(a7)
0002E1D6 <AmiBlitz3.ab2@2031>     MOVEQ #0,d0
0002E1DA <AmiBlitz3.ab2@2032>     MOVE.b $21+#funcentry_extend-1(a0),d0
0002E1DE <AmiBlitz3.ab2@2033>     SUB.w #$21+#funcentry_extend,d0
0002E1E2 <AmiBlitz3.ab2@2034>     ADD.w #16,d0
0002E1E8 <AmiBlitz3.ab2@2035>     MOVE.l #$10000,d1
0002E1EA <AmiBlitz3.ab2@2036>     MOVE.l d0,d2
0002E1F0 <AmiBlitz3.ab2@2037>     MOVEA.l _execbase,A6
0002E1F4 <AmiBlitz3.ab2@2038>     JSR _AllocMem(a6)         ; thilo: not 100% sure about this!
0002E1F6 <AmiBlitz3.ab2@2039>     MOVE.l d0,a1
0002E1FA <AmiBlitz3.ab2@2040>     MOVE.l d2,4(a1)
0002E200 <AmiBlitz3.ab2@2041>     MOVE.l unusedfunc,(a1)
0002E206 <AmiBlitz3.ab2@2042>     MOVE.l d0,unusedfunc
0002E20A <AmiBlitz3.ab2@2043>     MOVEM.l (a7)+,a6/a0/d2
0002E20E <AmiBlitz3.ab2@2044>     MOVE.l isfunc+1(a0),d0
0002E210 <AmiBlitz3.ab2@2045>     ADDQ.l #6,d0
0002E216 <AmiBlitz3.ab2@2046>     ADD.l d0,savefuncspace
0002E21A <AmiBlitz3.ab2@2049>     MOVE.l d0,8(a1)
0002E21E <AmiBlitz3.ab2@2050>     LEA 12(a1),a1
0002E220 <AmiBlitz3.ab2@2051>     MOVE.l a0,-(a7)
0002E224 <AmiBlitz3.ab2@2052>     LEA $21+#funcentry_extend(a0),a0
0002E226 <AmiBlitz3.ab2@2055>       MOVE.b (a0)+,(a1)+
0002E22A <AmiBlitz3.ab2@2056>     BNE 'l1
0002E22C <AmiBlitz3.ab2@2057>     MOVE.l (a7)+,a0
0002E22E <AmiBlitz3.ab2@2060>     MOVE.l (a0),d0
0002E232 <AmiBlitz3.ab2@2061> BRA 'lr1
0002E23A <AmiBlitz3.ab2@2064>   BTST #$7,make_smallestcode
0002E23E <AmiBlitz3.ab2@2065>   BEQ.b JL_0_3844                                           ;optimize for executable
0002E244 <AmiBlitz3.ab2@2066>   CLR.l morememadd
0002E248 <AmiBlitz3.ab2@2068>   BSR.w alloxadj
0002E24C <AmiBlitz3.ab2@2069>   BEQ.w JL_0_388A
0002E252 <AmiBlitz3.ab2@2070>   ADDQ.w #1,pass
0002E256 <AmiBlitz3.ab2@2071>   BSR.w compileall
0002E25C <AmiBlitz3.ab2@2074>   MOVE.w dontwrite,D1
0002E260 <AmiBlitz3.ab2@2075>   BEQ.w JL_0_38A2
0002E264 <AmiBlitz3.ab2@2094> BRA.w JL_0_3896
0002E26C <AmiBlitz3.ab2@2105>   MOVE.w #$FFFF,anyerrs
0002E270 <AmiBlitz3.ab2@2106> BRA.w JL_0_38A2
0002E274 <AmiBlitz3.ab2@2109>   BSR.w alloxinc                                          ;increase all by 50%
0002E278 <AmiBlitz3.ab2@2110>   BEQ.w Aclearallvars
0002E27C <AmiBlitz3.ab2@2111> BRA.w JL_0_3824
0002E280 <AmiBlitz3.ab2@2123> BRA.w JL_0_38A6                                            ;???????
0002E286 <AmiBlitz3.ab2@2127>   JSR freereps
0002E28C <AmiBlitz3.ab2@2128>   JSR freesels
0002E292 <AmiBlitz3.ab2@2129>   JSR AJL_0_6DF2
0002E298 <AmiBlitz3.ab2@2130>   JSR freepends
0002E29E <AmiBlitz3.ab2@2131>   JSR freeifs
0002E2A4 <AmiBlitz3.ab2@2132>   JSR AJL_0_C188
0002E2AA <AmiBlitz3.ab2@2133>   JSR AJL_0_C15C
0002E2B0 <AmiBlitz3.ab2@2134>   JSR AJL_0_D9BC
0002E2B6 <AmiBlitz3.ab2@2137> JMP cleartemplabel
0002E2BA <AmiBlitz3.ab2@2140> mempool2:  Dc.l 0
0002E2C0 <AmiBlitz3.ab2@2144>   JSR Aclearcache
0002E2C8 <AmiBlitz3.ab2@2146>   BTST #$7,use_debugger
0002E2CC <AmiBlitz3.ab2@2148>   BNE 'debugon
0002E2D2 <AmiBlitz3.ab2@2149>   CLR.w debugmode
0002E2D6 <AmiBlitz3.ab2@2150> BRA.b 'debugoff
0002E2DC <AmiBlitz3.ab2@2153>   SNE debugmode
0002E314 <AmiBlitz3.ab2@2158>   !ComData_SetB{comByte_DebugMode,debugmode}
0002E31A <AmiBlitz3.ab2@2160>   LEA regtable,a0
0002E31C <AmiBlitz3.ab2@2161>   MOVEQ #10,d0
0002E31E <AmiBlitz3.ab2@2164>     CLR.l (a0)+
0002E322 <AmiBlitz3.ab2@2165>   DBF d0,'l1
0002E328 <AmiBlitz3.ab2@2167>   LEA includetemp2,a0
0002E32A <AmiBlitz3.ab2@2168>   CLR.b (a0)
0002E334 <AmiBlitz3.ab2@2169>   MOVE.l #7,maxregs
0002E33A <AmiBlitz3.ab2@2170>   CLR.w debugnest
0002E340 <AmiBlitz3.ab2@2171>   CLR.b funcparloop
0002E346 <AmiBlitz3.ab2@2172>   CLR.b nostringopt
0002E34C <AmiBlitz3.ab2@2173>   CLR.b firsttime
0002E352 <AmiBlitz3.ab2@2174>   CLR.l lastdestpointer
0002E358 <AmiBlitz3.ab2@2175>   CLR.l lastwritedat
0002E35E <AmiBlitz3.ab2@2176>   CLR.l prevwritedat
0002E364 <AmiBlitz3.ab2@2177>   CLR.l includeline
0002E36A <AmiBlitz3.ab2@2178>   CLR.b incnif
0002E370 <AmiBlitz3.ab2@2179>   CLR.b formode
0002E376 <AmiBlitz3.ab2@2180>   CLR.b funccall
0002E37C <AmiBlitz3.ab2@2181>   CLR.w objectcount
0002E382 <AmiBlitz3.ab2@2182>   CLR.b resdisable
0002E388 <AmiBlitz3.ab2@2183>   CLR.b developobject
0002E38E <AmiBlitz3.ab2@2184>   CLR.b optistring
0002E394 <AmiBlitz3.ab2@2185>   CLR.b optistring2
0002E39A <AmiBlitz3.ab2@2186>   CLR.b optiarray
0002E3A0 <AmiBlitz3.ab2@2187>   CLR.b quickadd
0002E3A6 <AmiBlitz3.ab2@2188>   CLR.w newmode
0002E3AC <AmiBlitz3.ab2@2189>   CLR.w mode
0002E3B2 <AmiBlitz3.ab2@2190>   CLR.w string1
0002E3B8 <AmiBlitz3.ab2@2191>   CLR.b fastfunc
0002E3BE <AmiBlitz3.ab2@2192>   CLR.w load_var_size
0002E3C4 <AmiBlitz3.ab2@2193>   CLR.w load_var_reg
0002E3CA <AmiBlitz3.ab2@2194>   CLR.l load_var_addr
0002E3D0 <AmiBlitz3.ab2@2195>   CLR.w imm_size
0002E3D6 <AmiBlitz3.ab2@2196>   CLR.w imm_reg
0002E3DC <AmiBlitz3.ab2@2197>   CLR.l imm_addr
0002E3E2 <AmiBlitz3.ab2@2198>   CLR.b _dcb
0002E3E8 <AmiBlitz3.ab2@2199>   CLR.l nohunkoffset
0002E3EE <AmiBlitz3.ab2@2200>   CLR.b peekaddrsize
0002E3F4 <AmiBlitz3.ab2@2201>   CLR.b typecheck
0002E3FA <AmiBlitz3.ab2@2202>   CLR.b declare2
0002E400 <AmiBlitz3.ab2@2203>   CLR.b declare
0002E406 <AmiBlitz3.ab2@2204>   CLR.l myoline                                          ;check
0002E40C <AmiBlitz3.ab2@2205>   CLR.l myline                                          ;check
0002E412 <AmiBlitz3.ab2@2206>   CLR.b newvariable
0002E418 <AmiBlitz3.ab2@2207>   CLR.b saved0
0002E41E <AmiBlitz3.ab2@2208>   CLR.l bsssize
0002E424 <AmiBlitz3.ab2@2209>   CLR.l chipsize
0002E42A <AmiBlitz3.ab2@2210>   CLR.b infunctioncode
0002E434 <AmiBlitz3.ab2@2211>   MOVE.l #-1,bssstart
0002E43E <AmiBlitz3.ab2@2212>   MOVE.l #-1,bssend
0002E448 <AmiBlitz3.ab2@2213>   MOVE.l #-1,chipstart
0002E452 <AmiBlitz3.ab2@2214>   MOVE.l #-1,chipend
0002E45A <AmiBlitz3.ab2@2215>   MOVE.w #0,bssmode
0002E460 <AmiBlitz3.ab2@2216>   CLR.w a2offset
0002E466 <AmiBlitz3.ab2@2217>   CLR.w fast
0002E46C <AmiBlitz3.ab2@2218>   CLR.w fpu
0002E472 <AmiBlitz3.ab2@2219>   CLR.b iee
0002E478 <AmiBlitz3.ab2@2220>   CLR.w newsyntax
0002E47C <AmiBlitz3.ab2@2221>   BSR.w JL_0_38A6
0002E482 <AmiBlitz3.ab2@2222>   JSR AJL_0_7962
0002E488 <AmiBlitz3.ab2@2223>   JSR frallvars
0002E48E <AmiBlitz3.ab2@2224>   JSR fralltypes
0002E494 <AmiBlitz3.ab2@2225>   JSR freemacs
0002E49A <AmiBlitz3.ab2@2226>   JSR clearfunctionlist
0002E4A0 <AmiBlitz3.ab2@2227>   TST.w pass
0002E4A6 <AmiBlitz3.ab2@2229>   JSR clearlabels
0002E4AC <AmiBlitz3.ab2@2230>   JSR clearhash
0002E4B2 <AmiBlitz3.ab2@2233>   LEA devo,a0
0002E4B6 <AmiBlitz3.ab2@2234>   MOVEM.l a0-a6/d0-d7,-(a7)
0002E4BC <AmiBlitz3.ab2@2235>   LEA ptr_parameterstore,a1
0002E4BE <AmiBlitz3.ab2@2238>     MOVE.b (a0)+,(a1)+
0002E4C2 <AmiBlitz3.ab2@2239>   BNE 'l1b
0002E4C4 <AmiBlitz3.ab2@2240>   MOVEQ #13,d2
0002E4CA <AmiBlitz3.ab2@2241>   JSR findlabel2
0002E4CE <AmiBlitz3.ab2@2242>   BNE 'd
0002E4D2 <AmiBlitz3.ab2@2243>   CLR.l 8(a2)
0002E4D6 <AmiBlitz3.ab2@2246>   MOVEM.l (a7)+,a0-a6/d0-d7
0002E500 <AmiBlitz3.ab2@2247>   !basic
0002E574 <AmiBlitz3.ab2@2248>   dos_Delete{dos_AddPart{my_systemdir$,"ab_compileerror.txt"}}
0002E592 <AmiBlitz3.ab2@2249>   !asm
0002E598 <AmiBlitz3.ab2@2250>   CLR.b returncode
0002E59E <AmiBlitz3.ab2@2251> JMP freeprocvs
0002E5A4 <AmiBlitz3.ab2@2255>   MOVE.l #bssstore-labelhash,d0
0002E5A6 <AmiBlitz3.ab2@2256>   ASR.l #2,d0
0002E5AC <AmiBlitz3.ab2@2257>   LEA labelhash,a0
0002E5AE <AmiBlitz3.ab2@2260>     CLR.l (a0)+
0002E5B0 <AmiBlitz3.ab2@2261>     SUBQ.l #1,d0
0002E5B4 <AmiBlitz3.ab2@2262>   BNE.s 'l10
0002E5BA <AmiBlitz3.ab2@2264>   LEA labelbase,a1
0002E5BC <AmiBlitz3.ab2@2265>   MOVE.l (a1),d0
0002E5C0 <AmiBlitz3.ab2@2266>   BEQ 'l11
0002E5C2 <AmiBlitz3.ab2@2269>     MOVE.l d0,a1
0002E5C6 <AmiBlitz3.ab2@2270>     TST.l 4(a1)
0002E5CA <AmiBlitz3.ab2@2271>     BEQ 'l29
0002E5CE <AmiBlitz3.ab2@2272>     LEA $13(a1),a0
0002E5D0 <AmiBlitz3.ab2@2273>     MOVEQ #0,d0
0002E5D2 <AmiBlitz3.ab2@2274>     MOVEQ #0,d1
0002E5D4 <AmiBlitz3.ab2@2277>       MOVE.b (a0)+,d1
0002E5D8 <AmiBlitz3.ab2@2278>       BEQ 'l12
0002E5DE <AmiBlitz3.ab2@2279>       !hashalgo
0002E5E2 <AmiBlitz3.ab2@2280> BRA 'l13
0002E5E8 <AmiBlitz3.ab2@2283>     LEA labelhash,a0
0002E5EE <AmiBlitz3.ab2@2284>     AND.l #hashsize,d0
0002E5F0 <AmiBlitz3.ab2@2285>      ASL.l #2,d0
0002E5F4 <AmiBlitz3.ab2@2286>     MOVE.l 0(a0,d0),d1                                     ;*4
0002E5F8 <AmiBlitz3.ab2@2287>     MOVE.l d1,$c(a1)
0002E5FC <AmiBlitz3.ab2@2288>     MOVE.l a1,0(a0,d0)
0002E5FE <AmiBlitz3.ab2@2291>     MOVE.l (a1),d0
0002E602 <AmiBlitz3.ab2@2292>   BNE 'l21
0002E604 <AmiBlitz3.ab2@2295> RTS
0002E60A <AmiBlitz3.ab2@2299>   MOVEA.l lastrestype,A0
0002E60C <AmiBlitz3.ab2@2300>   MOVEA.l (A0),A2
0002E60E <AmiBlitz3.ab2@2301>   CLR.l (A0)
0002E614 <AmiBlitz3.ab2@2302> JMP freetypes
0002E61A <AmiBlitz3.ab2@2306>   MOVEA.l varbase,A3
0002E620 <AmiBlitz3.ab2@2307>   CLR.l varbase
0002E624 <AmiBlitz3.ab2@2310>   CMPA.w #$0,A3
0002E628 <AmiBlitz3.ab2@2311>   BEQ.w 'l20
0002E62A <AmiBlitz3.ab2@2312>   MOVEA.l A3,A1
0002E62C <AmiBlitz3.ab2@2313>   MOVEA.l (A3),A3
0002E62E <AmiBlitz3.ab2@2314>   MOVEQ.l #$00,D0
0002E632 <AmiBlitz3.ab2@2315>   MOVE.b $E+4(A1),D0
0002E638 <AmiBlitz3.ab2@2316>   MOVEA.l _execbase,A6
0002E63E <AmiBlitz3.ab2@2317>   MOVE.l mempool2,a0
0002E642 <AmiBlitz3.ab2@2318>   JSR _FreePooled(A6)
0002E646 <AmiBlitz3.ab2@2319> BRA.w 'l10
0002E648 <AmiBlitz3.ab2@2322> RTS
0002E64E <AmiBlitz3.ab2@2327>   LEA firstiff,A2
0002E650 <AmiBlitz3.ab2@2328>   MOVEQ.l #$0E,D2
0002E656 <AmiBlitz3.ab2@2329> JMP freeslist
0002E658 <AmiBlitz3.ab2@2335> progressbar_width:   Dc.w 100                              ;riteend org source ;right end of include strip
0002E65A <AmiBlitz3.ab2@2336> inmacro:             Ds.w 1                                ;macmask org source ;macro found
0002E660 <AmiBlitz3.ab2@2340>   CLR.w inmacro
0002E666 <AmiBlitz3.ab2@2341>   ADDQ.l #1,globallinecount
0002E66C <AmiBlitz3.ab2@2342>   CLR.b nostringopt
0002E670 <AmiBlitz3.ab2@2343>   BSR.w JL_0_3CA4
0002E676 <AmiBlitz3.ab2@2344>   CLR.w instringon
0002E67C <AmiBlitz3.ab2@2347>   TST.w ininclude
0002E680 <AmiBlitz3.ab2@2348>   BEQ.w JL_0_39B0
0002E686 <AmiBlitz3.ab2@2349>   ADDQ.l #1,includeline
0002E68C <AmiBlitz3.ab2@2350>     JSR ab3_WriteDebugFile
0002E692 <AmiBlitz3.ab2@2351>   JSR AJL_0_C09E
0002E696 <AmiBlitz3.ab2@2352>   BEQ.w JL_0_39B0
0002E69C <AmiBlitz3.ab2@2353>   MOVE.w ininclude,D0
0002E6A0 <AmiBlitz3.ab2@2354>   CMP.w #$4,D0
0002E6A4 <AmiBlitz3.ab2@2355>   BCC.w JL_0_39AC
0002E6A6 <AmiBlitz3.ab2@2356>   ADD.w D0,D0
0002E6AC <AmiBlitz3.ab2@2357>   LEA progress_per_line,A0
0002E6B0 <AmiBlitz3.ab2@2358>   MOVE.w $0(A0,D0.W),D2
0002E6B4 <AmiBlitz3.ab2@2359>   CMP.w progressbar_width(PC),D2
0002E6B8 <AmiBlitz3.ab2@2360>   BCC.w JL_0_39AC
0002E6BC <AmiBlitz3.ab2@2361>   ADDQ.w #1,$0(A0,D0.W)
0002E6BE <AmiBlitz3.ab2@2362>   LSR.w #1,D0
0002E6C0 <AmiBlitz3.ab2@2363>   MOVE.l d0,d1
0002E6C2 <AmiBlitz3.ab2@2364>   EXT.l d1
0002E6C4 <AmiBlitz3.ab2@2365>   MOVE.l d2,d0
0002E6C6 <AmiBlitz3.ab2@2366>   EXT.l d0                                                 ;d0=x,d1=y
0002E6CC <AmiBlitz3.ab2@2368>   JSR update_progressbar
0002E6CE <AmiBlitz3.ab2@2371>   MOVEQ.l #-$01,D0
0002E6D0 <AmiBlitz3.ab2@2372> RTS
0002E6D6 <AmiBlitz3.ab2@2376>   MOVE.l titleat,D0
0002E6D8 <AmiBlitz3.ab2@2377>   MOVEQ.l #$00,D1
0002E6DE <AmiBlitz3.ab2@2378>   MOVE.w progress_per_line,D1
0002E6E0 <AmiBlitz3.ab2@2379>   ADD.l D1,D0
0002E6E2 <AmiBlitz3.ab2@2380>   MOVE.l D0,D1
0002E6E4 <AmiBlitz3.ab2@2381>   SWAP D0
0002E6EA <AmiBlitz3.ab2@2382>   CMP.w titleat,D0
0002E6EE <AmiBlitz3.ab2@2383>    BEQ.w JL_0_39E4
0002E6F0 <AmiBlitz3.ab2@2386>   EXT.l d0
0002E6F2 <AmiBlitz3.ab2@2387>   MOVE.l d1,-(a7)
0002E6FA <AmiBlitz3.ab2@2390>   MOVE.w #1,compiler_job                                    ; set to compiler job 1 (=build executable)
0002E700 <AmiBlitz3.ab2@2391>   JSR update_progressbar
0002E708 <AmiBlitz3.ab2@2392>   MOVE.w #0,compiler_job                                    ; set to compiler job 0 (=compile source)
0002E70A <AmiBlitz3.ab2@2396>   MOVE.l (a7)+,d1
0002E710 <AmiBlitz3.ab2@2399>   MOVE.l D1,titleat
0002E716 <AmiBlitz3.ab2@2400>   ADDQ.l #1,linenumat
0002E71C <AmiBlitz3.ab2@2401>   CLR.w linedone
0002E722 <AmiBlitz3.ab2@2402>   JSR ab3_WriteDebugFile  ; write to DebugFile every main source line
0002E728 <AmiBlitz3.ab2@2404>   SUBQ.l #1,numlines2
0002E72C <AmiBlitz3.ab2@2405>    BEQ.w JL_0_3A12
0002E732 <AmiBlitz3.ab2@2406>   MOVEA.l sourceline,A0
0002E734 <AmiBlitz3.ab2@2407>   MOVEA.l (A0),A0
0002E73A <AmiBlitz3.ab2@2408>   MOVE.l A0,sourceline
0002E73E <AmiBlitz3.ab2@2409>   LEA $9(A0),A5
0002E740 <AmiBlitz3.ab2@2412> RTS
0002E742 <AmiBlitz3.ab2@2416>   MOVE.w D0,-(A7)
0002E744 <AmiBlitz3.ab2@2417>   MOVEQ.l #$03,D0
0002E746 <AmiBlitz3.ab2@2420>     MOVE.w D1,D2
0002E74A <AmiBlitz3.ab2@2421>     ANDI.w #$F,D2
0002E74E <AmiBlitz3.ab2@2422>     ADDI.w #$30,D2
0002E752 <AmiBlitz3.ab2@2423>     CMP.w #$3A,D2
0002E756 <AmiBlitz3.ab2@2424>      BCS.w JL_0_3A2C
0002E758 <AmiBlitz3.ab2@2425>     ADDQ.w #7,D2
0002E75C <AmiBlitz3.ab2@2428>     MOVE.b D2,$0(A0,D0.W)
0002E75E <AmiBlitz3.ab2@2429>     LSR.w #4,D1
0002E762 <AmiBlitz3.ab2@2430>   DBF D0,JL_0_3A18
0002E764 <AmiBlitz3.ab2@2432>   MOVE.w (A7)+,D0
0002E766 <AmiBlitz3.ab2@2433> RTS
0002E76C <AmiBlitz3.ab2@2443>   MOVE.w skipcode,D1
0002E770 <AmiBlitz3.ab2@2444>   BNE.w JL_0_3A46
0002E772 <AmiBlitz3.ab2@2445> RTS
0002E774 <AmiBlitz3.ab2@2448>   MOVE.l A5,-(A7)
0002E776 <AmiBlitz3.ab2@2449>   MOVEQ.l #$3A,D1                                          ;':'
0002E778 <AmiBlitz3.ab2@2450>   MOVEQ.l #$21,D2                                          ;'!'
0002E77A <AmiBlitz3.ab2@2451>   MOVEQ.l #$3B,D3                                          ;';'
0002E77C <AmiBlitz3.ab2@2452>   MOVEQ.l #$22,D4                                          ;'"'
0002E77E <AmiBlitz3.ab2@2455>   MOVE.b (A5)+,D0
0002E782 <AmiBlitz3.ab2@2456>    BEQ.w JL_0_3CA0
0002E786 <AmiBlitz3.ab2@2457>    BPL.w JL_0_3A60
0002E788 <AmiBlitz3.ab2@2458>   MOVE.b (A5)+,D0
0002E78C <AmiBlitz3.ab2@2459> BRA.w JL_0_3A50
0002E78E <AmiBlitz3.ab2@2462>   CMP.b D4,D0
0002E792 <AmiBlitz3.ab2@2463>    BNE.w JL_0_3A82
0002E794 <AmiBlitz3.ab2@2466>   MOVE.b (A5)+,D0
0002E798 <AmiBlitz3.ab2@2467>    BEQ.w notqerr
0002E79C <AmiBlitz3.ab2@2473>   CMP.b #$22,D0
0002E7A0 <AmiBlitz3.ab2@2474>    BNE.w JL_0_3A66
0002E7A4 <AmiBlitz3.ab2@2475> BRA.w JL_0_3A50
0002E7A6 <AmiBlitz3.ab2@2478>   CMP.b D1,D0
0002E7AA <AmiBlitz3.ab2@2479>    BEQ.w JL_0_3CA0
0002E7AC <AmiBlitz3.ab2@2480>   CMP.b D3,D0
0002E7B0 <AmiBlitz3.ab2@2481>    BEQ.w JL_0_3CA0
0002E7B2 <AmiBlitz3.ab2@2484>   CMP.b D2,D0
0002E7B6 <AmiBlitz3.ab2@2485>    BNE.w JL_0_3A50
0002E7BE <AmiBlitz3.ab2@2486>   MOVE.w #$FFFF,inmacro                                    ; no runtimecheck in macros
0002E7C0 <AmiBlitz3.ab2@2487>   MOVEA.l A5,A3
0002E7C6 <AmiBlitz3.ab2@2488>    JSR getparameter2
0002E7CA <AmiBlitz3.ab2@2489>    BNE.w JL_0_3AAC
0002E7D0 <AmiBlitz3.ab2@2490> JMP syntaxerr
0002E7DA <AmiBlitz3.ab2@2495>    MOVE.w oldqflag,instringon
0002E7E0 <AmiBlitz3.ab2@2496>   MOVEA.l lastsourcepos,A5
0002E7E6 <AmiBlitz3.ab2@2497>    JSR findmac                                             ;find macro
0002E7EA <AmiBlitz3.ab2@2498>    BEQ.w JL_0_3ABE
0002E7F0 <AmiBlitz3.ab2@2499> JMP nomacerr
0002E7F6 <AmiBlitz3.ab2@2502>   TST.b debugmode
0002E7FA <AmiBlitz3.ab2@2503>   BEQ 'sk1
0002E7FE <AmiBlitz3.ab2@2504>   MOVE.w #$4e71,d1
0002E804 <AmiBlitz3.ab2@2505>   JSR writeword
0002E806 <AmiBlitz3.ab2@2506>   MOVE.l a5,-(a7)
0002E808 <AmiBlitz3.ab2@2507>   MOVE.l a3,a5
0002E80A <AmiBlitz3.ab2@2508>   SUBQ.l #1,a5
0002E812 <AmiBlitz3.ab2@2509>   MOVE.w #$0,inmacro
0002E816 <AmiBlitz3.ab2@2510>   BSR debugstuffa
0002E81E <AmiBlitz3.ab2@2511>   MOVE.w #$FFFF,inmacro
0002E820 <AmiBlitz3.ab2@2512>   MOVE.l (a7)+,a5
0002E824 <AmiBlitz3.ab2@2513>   MOVE.w #$4e71,d1
0002E82A <AmiBlitz3.ab2@2514>   JSR writeword
0002E82C <AmiBlitz3.ab2@2517>   MOVEA.l A5,A4
0002E830 <AmiBlitz3.ab2@2520>    CMP.b #" ",(a4)+
0002E834 <AmiBlitz3.ab2@2521>     BEQ 'l5a
0002E836 <AmiBlitz3.ab2@2522>      SUBQ.l#1,a4
0002E83A <AmiBlitz3.ab2@2523>      CMP.b #",",(a4)
0002E83E <AmiBlitz3.ab2@2524>     BEQ JL_0_3AEA
0002E840 <AmiBlitz3.ab2@2527>   MOVEQ.l #$00,D4
0002E846 <AmiBlitz3.ab2@2528>   TST.b newsyntax
0002E84A <AmiBlitz3.ab2@2529>   BEQ 'l10b
0002E84E <AmiBlitz3.ab2@2530>   MOVEM.l a0/d0,-(a7)
0002E852 <AmiBlitz3.ab2@2531>   MOVE.l 4(a2),a0
0002E856 <AmiBlitz3.ab2@2532>   MOVE.w 8(a2),d0
0002E85A <AmiBlitz3.ab2@2535>   CMP.b #"`",(a0)+
0002E85E <AmiBlitz3.ab2@2536>   BEQ 'x1
0002E860 <AmiBlitz3.ab2@2537>   SUBQ.w #1,d0
0002E864 <AmiBlitz3.ab2@2538>   BNE 'x2
0002E868 <AmiBlitz3.ab2@2539> BRA 'x3
0002E86C <AmiBlitz3.ab2@2542>   MOVEM.l (a7)+,a0/d0
0002E870 <AmiBlitz3.ab2@2543> BRA 'l10
0002E874 <AmiBlitz3.ab2@2546>   MOVEM.l (a7)+,a0/d0
0002E878 <AmiBlitz3.ab2@2547> BRA JL_0_3AEA
0002E87C <AmiBlitz3.ab2@2550>   CMPI.b #"{",(A4)
0002E880 <AmiBlitz3.ab2@2551>    BNE.w JL_0_3AEA
0002E882 <AmiBlitz3.ab2@2555>   ADDQ.l #1,a4
0002E886 <AmiBlitz3.ab2@2558>     CMP.b #" ",(a4)
0002E88A <AmiBlitz3.ab2@2559>     BEQ 'l5
0002E88E <AmiBlitz3.ab2@2560>     MOVEM.l a0/d0,-(a7)
0002E894 <AmiBlitz3.ab2@2561>     CLR.b exmac
0002E89A <AmiBlitz3.ab2@2562>     LEA chartab,a0
0002E89C <AmiBlitz3.ab2@2563>     MOVEQ #0,d0
0002E89E <AmiBlitz3.ab2@2564>     MOVE.b (a4),d0
0002E8A2 <AmiBlitz3.ab2@2565>     BMI 'm1
0002E8A6 <AmiBlitz3.ab2@2566>     TST.b 0(a0,d0)
0002E8AA <AmiBlitz3.ab2@2567>     BEQ 'm1
0002E8B0 <AmiBlitz3.ab2@2568>     TST.b newsyntax
0002E8B4 <AmiBlitz3.ab2@2569>     BEQ 'ns1
0002E8B8 <AmiBlitz3.ab2@2570>     CMP.b #"#",d0
0002E8BC <AmiBlitz3.ab2@2571>     BEQ 'm1
0002E8C0 <AmiBlitz3.ab2@2572>     CMP.b #"$",d0
0002E8C4 <AmiBlitz3.ab2@2573>     BEQ 'm1
0002E8C8 <AmiBlitz3.ab2@2574>     CMP.b #"-",d0
0002E8CC <AmiBlitz3.ab2@2575>     BEQ 'm1
0002E8D0 <AmiBlitz3.ab2@2578>   CMP.b #",",d0
0002E8D4 <AmiBlitz3.ab2@2579>     BEQ 'm1
0002E8D8 <AmiBlitz3.ab2@2580>     CMP.b #"{",d0
0002E8DC <AmiBlitz3.ab2@2581>     BNE 'm1b
0002E8DE <AmiBlitz3.ab2@2582>     ADDQ.l #1,a4
0002E8E2 <AmiBlitz3.ab2@2583> BRA 'm1
0002E8E8 <AmiBlitz3.ab2@2586>   TST.b newsyntax
0002E8EC <AmiBlitz3.ab2@2587>     BEQ 'm1
0002E8F4 <AmiBlitz3.ab2@2588>     MOVE.b #1,exmac
0002E8F8 <AmiBlitz3.ab2@2591>   MOVEM.l (a7)+,a0/d0
0002E8FE <AmiBlitz3.ab2@2592>     TST.b exmac
0002E902 <AmiBlitz3.ab2@2593>     BNE JL_0_3AEA
0002E904 <AmiBlitz3.ab2@2600>   TST.b (a4)
0002E908 <AmiBlitz3.ab2@2601>   BEQ JL_0_3AEA
0002E90E <AmiBlitz3.ab2@2604>   MOVEA.l ptr_macrobuffer_begin,A0
0002E910 <AmiBlitz3.ab2@2607>   ADDQ.w #1,D4
0002E912 <AmiBlitz3.ab2@2608>   MOVE.l A4,(A0)
0002E916 <AmiBlitz3.ab2@2609>   CLR.w 4(a0)
0002E91A <AmiBlitz3.ab2@2610>    BSR.w JL_0_3CC6
0002E91C <AmiBlitz3.ab2@2612>   ADDQ.l #4,a0
0002E91E <AmiBlitz3.ab2@2616>   SUBQ.w #1,(a0)+
0002E922 <AmiBlitz3.ab2@2617>   CMP.b #$7D,D0
0002E926 <AmiBlitz3.ab2@2618>   BEQ 'l10
0002E928 <AmiBlitz3.ab2@2619>   TST.b d0
0002E92C <AmiBlitz3.ab2@2620>   BEQ 'l10
0002E930 <AmiBlitz3.ab2@2621> BRA JL_0_3AD0
0002E936 <AmiBlitz3.ab2@2625>   CLR.l sourceline3
0002E938 <AmiBlitz3.ab2@2626>   MOVEA.l A4,A5
0002E93E <AmiBlitz3.ab2@2629>   MOVE.w D4,numarg
0002E944 <AmiBlitz3.ab2@2636>   MOVE.l #$01,D1
0002E94A <AmiBlitz3.ab2@2637>   MOVEA.l _execbase,A6
0002E950 <AmiBlitz3.ab2@2638>   MOVE.l mempool,a0
0002E956 <AmiBlitz3.ab2@2639>   MOVE.l macrobuffer_size,D0
0002E95C <AmiBlitz3.ab2@2640>   CMP.l #40000,d0
0002E960 <AmiBlitz3.ab2@2641>   BGE 'l1m
0002E966 <AmiBlitz3.ab2@2642>   MOVE.l #40000,d0
0002E96C <AmiBlitz3.ab2@2643>   MOVE.l d0,macrobuffer_size
0002E970 <AmiBlitz3.ab2@2646>   JSR _AllocPooled(a6)
0002E97A <AmiBlitz3.ab2@2648>   MOVE.l myline,myoline
0002E97C <AmiBlitz3.ab2@2651>   ADDQ.l #1,d0
0002E982 <AmiBlitz3.ab2@2652>   MOVE.l D0,myline
0002E984 <AmiBlitz3.ab2@2653>   MOVEA.l D0,A1
0002E98A <AmiBlitz3.ab2@2654>   MOVE.b #":",-1(a1)
0002E98C <AmiBlitz3.ab2@2655>   MOVEA.l A1,A6
0002E992 <AmiBlitz3.ab2@2656>   ADDA.l macrobuffer_size,A6
0002E994 <AmiBlitz3.ab2@2657>   MOVEA.l (A7)+,A0
0002E996 <AmiBlitz3.ab2@2660>   CMPA.l A6,A1
0002E99A <AmiBlitz3.ab2@2661>    BCC.w mbovererr
0002E99C <AmiBlitz3.ab2@2662>   MOVE.b (A0)+,(a1)+
0002E99E <AmiBlitz3.ab2@2663>   CMPA.l A3,A0
0002E9A2 <AmiBlitz3.ab2@2664>    BCS.w JL_0_3B1E
0002E9A4 <AmiBlitz3.ab2@2665>   SUBQ.w #1,A1
0002E9A8 <AmiBlitz3.ab2@2666>   MOVE.w $8(A2),D1
0002E9AC <AmiBlitz3.ab2@2667>    BEQ.w JL_0_3C70
0002E9B4 <AmiBlitz3.ab2@2668>   MOVE.w $A(A2),macnum
0002E9B8 <AmiBlitz3.ab2@2669>   ADDQ.w #1,$A(A2)
0002E9BC <AmiBlitz3.ab2@2670>   MOVEA.l $4(A2),A2
0002E9BE <AmiBlitz3.ab2@2671>   SUBQ.w #1,D1
0002E9C4 <AmiBlitz3.ab2@2672>   CLR.b firstmline
0002E9C6 <AmiBlitz3.ab2@2675>     MOVEQ.l #$00,D0
0002E9C8 <AmiBlitz3.ab2@2676>     MOVE.b (A2)+,D0
0002E9CE <AmiBlitz3.ab2@2677>     TST.b firstmline
0002E9D2 <AmiBlitz3.ab2@2678>     BNE 'c1
0002E9D6 <AmiBlitz3.ab2@2679>     CMP.b #$22,d0
0002E9DA <AmiBlitz3.ab2@2680>     BNE 's1
0002E9E2 <AmiBlitz3.ab2@2681>     MOVE.b #1,firstmline
0002E9E6 <AmiBlitz3.ab2@2684>     CMP.b #":",d0
0002E9EA <AmiBlitz3.ab2@2685>     BNE 'm1
0002E9F2 <AmiBlitz3.ab2@2686>     MOVE.b #1,firstmline
0002E9F6 <AmiBlitz3.ab2@2689>     CMP.b #";",d0
0002E9FA <AmiBlitz3.ab2@2690>     BNE 'c1
0002E9FC <AmiBlitz3.ab2@2693>     SUBQ.w #1,d1                                           ;filter out comment
0002E9FE <AmiBlitz3.ab2@2694>     MOVE.b (a2)+,d0
0002EA04 <AmiBlitz3.ab2@2695>     CMP.w #":@",-1(a2)
0002EA08 <AmiBlitz3.ab2@2696>     BEQ 'c2
0002EA0A <AmiBlitz3.ab2@2697>     TST.w d1
0002EA0E <AmiBlitz3.ab2@2698>     BNE 'l1
0002EA12 <AmiBlitz3.ab2@2699>   BRA JL_0_3C6C
0002EA18 <AmiBlitz3.ab2@2702>     CMP.b #":",1(a2)
0002EA1C <AmiBlitz3.ab2@2703>       BNE 'l1
0002EA1E <AmiBlitz3.ab2@2704>       ADDQ #2,a2
0002EA20 <AmiBlitz3.ab2@2705>       SUBQ #3,d1
0002EA22 <AmiBlitz3.ab2@2706>       MOVE.b (a2)+,d0
0002EA2A <AmiBlitz3.ab2@2707>       MOVE.b #1,firstmline
0002EA2E <AmiBlitz3.ab2@2710>     CMP.b #"`",D0
0002EA32 <AmiBlitz3.ab2@2711>      BNE.w JL_0_3C56
0002EA34 <AmiBlitz3.ab2@2712>     SUBQ.w #1,D1
0002EA36 <AmiBlitz3.ab2@2713>     MOVE.b (A2)+,D0
0002EA3A <AmiBlitz3.ab2@2714>     CMP.w #$7B,D0
0002EA3E <AmiBlitz3.ab2@2715>      BEQ.w JL_0_3BB6
0002EA42 <AmiBlitz3.ab2@2716>     CMP.w #$40,D0
0002EA46 <AmiBlitz3.ab2@2717>      BNE.w JL_0_3B82
0002EA48 <AmiBlitz3.ab2@2718>     MOVEQ.l #$00,D2
0002EA4E <AmiBlitz3.ab2@2719>     MOVE.w macnum,D2
0002EA50 <AmiBlitz3.ab2@2720>     MOVEA.l A1,A0
0002EA52 <AmiBlitz3.ab2@2721>     MOVE.w D1,-(A7)
0002EA58 <AmiBlitz3.ab2@2722>      JSR makelong
0002EA5A <AmiBlitz3.ab2@2723>     MOVEA.l A0,A1
0002EA5C <AmiBlitz3.ab2@2724>     MOVE.w (A7)+,D1
0002EA60 <AmiBlitz3.ab2@2725>   BRA.w JL_0_3C6C
0002EA64 <AmiBlitz3.ab2@2728>     ORI.w #$20,D0
0002EA68 <AmiBlitz3.ab2@2729>     CMP.w #$7A,D0
0002EA6C <AmiBlitz3.ab2@2730>      BCS.w JL_0_3B94
0002EA72 <AmiBlitz3.ab2@2731>   JMP ilconsterr
0002EA76 <AmiBlitz3.ab2@2734>     SUBI.w #$30,D0
0002EA7A <AmiBlitz3.ab2@2735>     CMP.w #$A,D0
0002EA7E <AmiBlitz3.ab2@2736>      BCS.w JL_0_3BF2
0002EA82 <AmiBlitz3.ab2@2737>     SUBI.w #$27,D0
0002EA86 <AmiBlitz3.ab2@2738>     CMP.w #$A,D0
0002EA8A <AmiBlitz3.ab2@2739>      BCC.w JL_0_3BB2
0002EA90 <AmiBlitz3.ab2@2740>   JMP ilconsterr
0002EA94 <AmiBlitz3.ab2@2743>   BRA.w JL_0_3BF2
0002EA96 <AmiBlitz3.ab2@2746>     MOVE.l A5,-(A7)
0002EA9A <AmiBlitz3.ab2@2747>     MOVEM.l D1/A1-A2/A6,-(A7)
0002EA9C <AmiBlitz3.ab2@2748>     MOVEA.l A2,A5
0002EAA2 <AmiBlitz3.ab2@2749>      JSR AJL_0_BF6E
0002EAA6 <AmiBlitz3.ab2@2750>     CMP.w #$7D,D0
0002EAAA <AmiBlitz3.ab2@2751>      BEQ.w JL_0_3BD2
0002EAB0 <AmiBlitz3.ab2@2752>   JMP syntaxerr
0002EAB4 <AmiBlitz3.ab2@2755>     MOVEM.l (A7)+,D1/A1-A2/A6
0002EAB6 <AmiBlitz3.ab2@2756>     MOVE.l A5,D2
0002EAB8 <AmiBlitz3.ab2@2757>     SUB.l A2,D2
0002EABA <AmiBlitz3.ab2@2758>     SUB.w D2,D1
0002EABC <AmiBlitz3.ab2@2759>     MOVEA.l A5,A2
0002EAC2 <AmiBlitz3.ab2@2760>     CLR.w instringon
0002EAC4 <AmiBlitz3.ab2@2761>     MOVEA.l (A7)+,A5
0002EAC6 <AmiBlitz3.ab2@2762>     MOVE.l D3,D0
0002EACA <AmiBlitz3.ab2@2763>     BPL.w JL_0_3BF2
0002EAD0 <AmiBlitz3.ab2@2764>   JMP ilconsterr
0002EAD2 <AmiBlitz3.ab2@2767>     SUBQ.w #1,D0
0002EAD6 <AmiBlitz3.ab2@2768>      BPL.w JL_0_3C20
0002EADC <AmiBlitz3.ab2@2772>     MOVE.w numarg,D0
0002EAE0 <AmiBlitz3.ab2@2773>     DIVU #$A,D0
0002EAE4 <AmiBlitz3.ab2@2774>     ADDI.w #$30,D0
0002EAE6 <AmiBlitz3.ab2@2775>     CMPA.l A6,A1
0002EAEA <AmiBlitz3.ab2@2776>      BCC.w mbovererr
0002EAEC <AmiBlitz3.ab2@2777>     MOVE.b D0,(A1)+
0002EAEE <AmiBlitz3.ab2@2778>     SWAP D0
0002EAF2 <AmiBlitz3.ab2@2779>     ADDI.w #$30,D0
0002EAF4 <AmiBlitz3.ab2@2780>     CMPA.l A6,A1
0002EAF8 <AmiBlitz3.ab2@2781>      BCC.w mbovererr
0002EAFA <AmiBlitz3.ab2@2782>     MOVE.b D0,(A1)+
0002EAFE <AmiBlitz3.ab2@2783>   BRA.w JL_0_3C6C
0002EB04 <AmiBlitz3.ab2@2789>     CMP.w numarg,D0
0002EB08 <AmiBlitz3.ab2@2790>      BCC.w JL_0_3C6C
0002EB0A <AmiBlitz3.ab2@2791>     LSL.w #1,D0
0002EB0C <AmiBlitz3.ab2@2792>     MOVE.w D0,D4
0002EB0E <AmiBlitz3.ab2@2793>     LSL.w #1,D0
0002EB10 <AmiBlitz3.ab2@2794>     ADD.w D4,D0
0002EB16 <AmiBlitz3.ab2@2795>     MOVEA.l ptr_macrobuffer_begin,A0
0002EB18 <AmiBlitz3.ab2@2796>     ADDA.w D0,A0
0002EB1C <AmiBlitz3.ab2@2797>     MOVE.w $4(A0),D4
0002EB20 <AmiBlitz3.ab2@2798>      BEQ.w JL_0_3C6C
0002EB22 <AmiBlitz3.ab2@2799>     MOVEA.l (A0),A0
0002EB24 <AmiBlitz3.ab2@2800>     SUBQ.w #1,D4
0002EB26 <AmiBlitz3.ab2@2803>       CMPA.l A6,A1
0002EB2A <AmiBlitz3.ab2@2804>        BCC.w mbovererr
0002EB2E <AmiBlitz3.ab2@2805>       CMP.w #"@@",(a0)
0002EB32 <AmiBlitz3.ab2@2806>        BNE 'l10
0002EB38 <AmiBlitz3.ab2@2807>       TST.w ininclude
0002EB3C <AmiBlitz3.ab2@2808>        BNE errorjoin
0002EB42 <AmiBlitz3.ab2@2811>       MOVE.l sourceline,a0
0002EB44 <AmiBlitz3.ab2@2812>       MOVE.l (a0),a0
0002EB4A <AmiBlitz3.ab2@2813>       CMP.l #0,a0
0002EB4E <AmiBlitz3.ab2@2814>       BNE 'l11
0002EB50 <AmiBlitz3.ab2@2815>       MOVEQ #0,d0
0002EB56 <AmiBlitz3.ab2@2816>       JSR error
0002EB5C <AmiBlitz3.ab2@2819>       MOVE.l a0,sourceline
0002EB62 <AmiBlitz3.ab2@2820>       ADDQ.l #1,linenumat
0002EB66 <AmiBlitz3.ab2@2821>       LEA 9(a0),a0
0002EB68 <AmiBlitz3.ab2@2822>       MOVE.l a0,-(a7)
0002EB6C <AmiBlitz3.ab2@2825>       CMP.b #" ",(a0)+
0002EB70 <AmiBlitz3.ab2@2826>        BEQ 'l110
0002EB76 <AmiBlitz3.ab2@2827>       CMP.b #";",-1(a0)
0002EB78 <AmiBlitz3.ab2@2828>       MOVE.l (a7)+,a0
0002EB7C <AmiBlitz3.ab2@2829>        BEQ 'l111
0002EB7E <AmiBlitz3.ab2@2830>       SUBQ.l #1,d4
0002EB80 <AmiBlitz3.ab2@2833>       MOVE.b (A0)+,(A1)+
0002EB84 <AmiBlitz3.ab2@2834>     DBF D4,JL_0_3C46
0002EB88 <AmiBlitz3.ab2@2836>   BRA.w JL_0_3C6C
0002EB8A <AmiBlitz3.ab2@2839>     CMPA.l A6,A1
0002EB8E <AmiBlitz3.ab2@2840>      BCC.w mbovererr
0002EB90 <AmiBlitz3.ab2@2841>     MOVE.b D0,(A1)+
0002EB94 <AmiBlitz3.ab2@2842>      BPL.w JL_0_3C6C
0002EB96 <AmiBlitz3.ab2@2843>     CMPA.l A6,A1
0002EB9A <AmiBlitz3.ab2@2844>      BCC.w mbovererr
0002EB9C <AmiBlitz3.ab2@2845>     MOVE.b (A2)+,(A1)+
0002EB9E <AmiBlitz3.ab2@2846>     SUBQ.w #1,D1
0002EBA2 <AmiBlitz3.ab2@2849>   DBF D1,JL_0_3B48
0002EBA4 <AmiBlitz3.ab2@2859>   CMPA.l A6,A1
0002EBA8 <AmiBlitz3.ab2@2860>    BCC.w mbovererr
0002EBAA <AmiBlitz3.ab2@2861>   MOVE.b (A5)+,(A1)+
0002EBAE <AmiBlitz3.ab2@2862>    BNE.w JL_0_3C70
0002EBB4 <AmiBlitz3.ab2@2863>   MOVEA.l myline,A5
0002EBBA <AmiBlitz3.ab2@2864>   MOVE.l myoline,D0
0002EBBE <AmiBlitz3.ab2@2865>    BEQ.w JL_0_3C9C
0002EBC0 <AmiBlitz3.ab2@2866>   SUBQ.l #1,d0
0002EBC2 <AmiBlitz3.ab2@2867>   MOVEA.l D0,A1
0002EBC8 <AmiBlitz3.ab2@2868>   MOVE.l macrobuffer_size,D0
0002EBCE <AmiBlitz3.ab2@2869>   MOVEA.l _execbase,A6
0002EBD4 <AmiBlitz3.ab2@2870>   MOVE.l mempool,a0
0002EBD8 <AmiBlitz3.ab2@2871>   JSR _FreePooled(A6)
0002EBDC <AmiBlitz3.ab2@2874> BRA.w JL_0_3A46
0002EBDE <AmiBlitz3.ab2@2877>   MOVEA.l (A7)+,A5
0002EBE0 <AmiBlitz3.ab2@2878> RTS
0002EBE6 <AmiBlitz3.ab2@2882>   MOVE.l myline,D0
0002EBEA <AmiBlitz3.ab2@2883>   BEQ.w JL_0_3CC4
0002EBEC <AmiBlitz3.ab2@2884>   SUBQ.l #1,d0
0002EBF2 <AmiBlitz3.ab2@2885>   CLR.l myline
0002EBF4 <AmiBlitz3.ab2@2886>   MOVEA.l D0,A1
0002EBFA <AmiBlitz3.ab2@2887>   MOVE.l macrobuffer_size,D0
0002EC00 <AmiBlitz3.ab2@2888>   MOVEA.l _execbase,A6
0002EC06 <AmiBlitz3.ab2@2889>   MOVE.l mempool,a0
0002EC0A <AmiBlitz3.ab2@2890> JMP _FreePooled(A6)
0002EC0C <AmiBlitz3.ab2@2893> RTS
0002EC0E <AmiBlitz3.ab2@2897>   MOVEQ.l #$00,D2
0002EC12 <AmiBlitz3.ab2@2900>   ADDQ.w #1,4(a0)
0002EC14 <AmiBlitz3.ab2@2901>    MOVE.b (A4)+,D0
0002EC18 <AmiBlitz3.ab2@2903>    BEQ exit1
0002EC1C <AmiBlitz3.ab2@2904>    BPL.w JL_0_3CD8
0002EC20 <AmiBlitz3.ab2@2905>   ADDQ.w #1,4(a0)
0002EC22 <AmiBlitz3.ab2@2906>   ADDQ.w #1,A4
0002EC26 <AmiBlitz3.ab2@2907> BRA.w JL_0_3CC8
0002EC2C <AmiBlitz3.ab2@2910>    TST.w instringon
0002EC30 <AmiBlitz3.ab2@2911>    BNE 'lnom
0002EC34 <AmiBlitz3.ab2@2912>    CMP.b #";",d0
0002EC38 <AmiBlitz3.ab2@2913>    BEQ exit2
0002EC3C <AmiBlitz3.ab2@2914>    CMP.b #":",d0
0002EC40 <AmiBlitz3.ab2@2915>    BEQ exit2
0002EC44 <AmiBlitz3.ab2@2918>   CMP.b #$22,D0
0002EC48 <AmiBlitz3.ab2@2919>    BNE.w JL_0_3CEA
0002EC4E <AmiBlitz3.ab2@2920>   NOT.w instringon
0002EC52 <AmiBlitz3.ab2@2921> BRA.w JL_0_3CC8
0002EC58 <AmiBlitz3.ab2@2925>   TST.w instringon
0002EC5C <AmiBlitz3.ab2@2926>    BNE.w JL_0_3CC8
0002EC60 <AmiBlitz3.ab2@2927>    CMP.b #"@",d0
0002EC64 <AmiBlitz3.ab2@2928>    BNE 'l10
0002EC68 <AmiBlitz3.ab2@2929>    CMP.b #"@",(a4)
0002EC6C <AmiBlitz3.ab2@2930>    BNE 'l10
0002EC72 <AmiBlitz3.ab2@2931>    TST.w ininclude
0002EC76 <AmiBlitz3.ab2@2932>    BNE errorjoin
0002EC7C <AmiBlitz3.ab2@2933>    MOVE.l sourceline3,a4
0002EC82 <AmiBlitz3.ab2@2934>    CMP.l #0,a4
0002EC86 <AmiBlitz3.ab2@2935>    BNE 'l11
0002EC8C <AmiBlitz3.ab2@2936>    MOVE.l sourceline,a4
0002EC8E <AmiBlitz3.ab2@2939>   MOVE.l (a4),a4
0002EC94 <AmiBlitz3.ab2@2940>       CMP.l #0,a4
0002EC98 <AmiBlitz3.ab2@2941>       BNE 'l12
0002EC9A <AmiBlitz3.ab2@2942>       MOVEQ #0,d0
0002ECA0 <AmiBlitz3.ab2@2943>       JSR error
0002ECA6 <AmiBlitz3.ab2@2946>    MOVE.l a4,sourceline3
0002ECAA <AmiBlitz3.ab2@2947>    LEA 9(a4),a4
0002ECAC <AmiBlitz3.ab2@2948>    MOVEQ #",",d0
0002ECB0 <AmiBlitz3.ab2@2951>   CMP.b #$2C,D0
0002ECB4 <AmiBlitz3.ab2@2952>    BNE.w JL_0_3D06
0002ECB6 <AmiBlitz3.ab2@2953>   TST.w D2
0002ECBA <AmiBlitz3.ab2@2954>    BEQ.w JL_0_3D30
0002ECBE <AmiBlitz3.ab2@2955> BRA.w JL_0_3CC8
0002ECC2 <AmiBlitz3.ab2@2959>    CMP.b #$7B,D0                                           ;"{"
0002ECC6 <AmiBlitz3.ab2@2960>    BEQ.w 'l10
0002ECCA <AmiBlitz3.ab2@2961>   CMP.b #$28,D0                                            ;"("
0002ECCE <AmiBlitz3.ab2@2964>    BNE.w JL_0_3D14
0002ECD0 <AmiBlitz3.ab2@2965>   ADDQ.w #1,D2
0002ECD4 <AmiBlitz3.ab2@2966> BRA.w JL_0_3CC8
0002ECD8 <AmiBlitz3.ab2@2969>   CMP.b #$7D,D0                                           ;"}"
0002ECDC <AmiBlitz3.ab2@2970>    BNE.w JL_0_3D22
0002ECDE <AmiBlitz3.ab2@2971>  TST.w D2
0002ECE2 <AmiBlitz3.ab2@2972>    BEQ.w JL_0_3D30
0002ECE6 <AmiBlitz3.ab2@2976>    CMP.b #$7D,D0                                           ;"}"
0002ECEA <AmiBlitz3.ab2@2977>    BEQ.w 'l10
0002ECEE <AmiBlitz3.ab2@2978>   CMP.b #$29,D0                                            ;")"
0002ECF2 <AmiBlitz3.ab2@2981>    BNE.w JL_0_3CC8
0002ECF4 <AmiBlitz3.ab2@2982>   SUBQ.w #1,D2
0002ECF8 <AmiBlitz3.ab2@2983> BRA.w JL_0_3CC8
0002ECFA <AmiBlitz3.ab2@2986> RTS
0002ECFC <AmiBlitz3.ab2@2990>       SUBQ.l #1,a4
0002ED02 <AmiBlitz3.ab2@2991>       CLR.l sourceline3
0002ED04 <AmiBlitz3.ab2@2992> RTS
0002ED06 <AmiBlitz3.ab2@2996>       MOVEQ #0,d0
0002ED08 <AmiBlitz3.ab2@2997>       SUBQ.l #1,a4
0002ED0E <AmiBlitz3.ab2@2998>       CLR.l sourceline3
0002ED10 <AmiBlitz3.ab2@2999> RTS
0002ED14 <AmiBlitz3.ab2@3003>   CMP.b #$7B,D0                                            ;"{"
0002ED18 <AmiBlitz3.ab2@3004>   BEQ.w JL_0_3D3E
0002ED1C <AmiBlitz3.ab2@3005>   CMP.b #$28,D0                                            ;"("
0002ED1E <AmiBlitz3.ab2@3008> RTS
0002ED22 <AmiBlitz3.ab2@3012>   CMP.b #$7D,D0                                            ;"}"
0002ED26 <AmiBlitz3.ab2@3013>   BEQ.w JL_0_3D4C
0002ED2A <AmiBlitz3.ab2@3014>   CMP.b #$29,D0                                            ;")"
0002ED2C <AmiBlitz3.ab2@3017> RTS
0002ED2E <AmiBlitz3.ab2@3021> stopit:     Ds.w 1
0002ED30 <AmiBlitz3.ab2@3022> clrreq:     Ds.w 1
0002ED34 <AmiBlitz3.ab2@3043>   MOVE.w clrreq(PC),D0
0002ED38 <AmiBlitz3.ab2@3044>    BEQ.w close_compilewin__skip
0002ED62 <AmiBlitz3.ab2@3046>   !basic
0002ED9E <AmiBlitz3.ab2@3047>   If Peek.l(Addr Window(4))<>0 Then WZCloseWindow 4        ;turn off the requester
0002EDBC <AmiBlitz3.ab2@3048>   !asm
0002EDC2 <AmiBlitz3.ab2@3049>   LEA clrreq,a0
0002EDC4 <AmiBlitz3.ab2@3050>   NOT.w (a0)                                               ;reass
0002EDCA <AmiBlitz3.ab2@3051>   MOVEA.l ptr_ThisTask,A0
0002EDCE <AmiBlitz3.ab2@3052>   CLR.l $1E(A0)
0002EDD2 <AmiBlitz3.ab2@3053>   CLR.l $2A(A0)
0002EDD4 <AmiBlitz3.ab2@3056> RTS
0002EDD6 <AmiBlitz3.ab2@3059> intsused:  Ds.w 1
0002EDDE <AmiBlitz3.ab2@3063>   MOVE.w #-1,blitzoff
0002EDE4 <AmiBlitz3.ab2@3064>   CLR.w intsused
0002EDEA <AmiBlitz3.ab2@3065>   CLR.w anyerrs
0002EDF0 <AmiBlitz3.ab2@3066>   CLR.w blitzmode
0002EDF6 <AmiBlitz3.ab2@3067>   CLR.w dontwrite                                              ;nomemleft
0002EDFC <AmiBlitz3.ab2@3068>   CLR.w constmode
0002EE02 <AmiBlitz3.ab2@3069>   CLR.w cmake
0002EE08 <AmiBlitz3.ab2@3070>   CLR.w cfetchmode
0002EE0E <AmiBlitz3.ab2@3071>   CLR.l intdata1
0002EE14 <AmiBlitz3.ab2@3072>   CLR.w fuckpos
0002EE1A <AmiBlitz3.ab2@3073>   CLR.w procnum
0002EE20 <AmiBlitz3.ab2@3074>   CLR.w procnum2
0002EE26 <AmiBlitz3.ab2@3075>   CLR.w dfetch
0002EE2C <AmiBlitz3.ab2@3076>   CLR.l titleat
0002EE32 <AmiBlitz3.ab2@3077>   CLR.b usedpath
0002EE38 <AmiBlitz3.ab2@3078>   CLR.b path2
0002EE3E <AmiBlitz3.ab2@3079>   CLR.w inerr
0002EE44 <AmiBlitz3.ab2@3080>   CLR.w intlevel
0002EE4A <AmiBlitz3.ab2@3081>   CLR.l cont_pc
0002EE50 <AmiBlitz3.ab2@3082>   CLR.l cont_pc2
0002EE56 <AmiBlitz3.ab2@3083>   CLR.l lastcontlink
0002EE60 <AmiBlitz3.ab2@3084>   MOVE.l destbufferstart,destpointer
0002EE6A <AmiBlitz3.ab2@3085>   MOVE.l destbufferstart,bigpc
0002EE74 <AmiBlitz3.ab2@3086>   MOVE.l destbufferend,libend
0002EE7E <AmiBlitz3.ab2@3087>   MOVE.l data1start,data1
0002EE88 <AmiBlitz3.ab2@3088>   MOVE.l data2at,data2
0002EE90 <AmiBlitz3.ab2@3089>   MOVE.w #-1,skipcode                                      ;#-1,comflag org source
0002EE98 <AmiBlitz3.ab2@3090>   MOVE.w #-1,linemode                                      ;#-1,linemode org soruce
0002EE9E <AmiBlitz3.ab2@3091>   CLR.w oldvcodelen
0002EEA4 <AmiBlitz3.ab2@3092>   CLR.b lastgloballabel                                    ;lastbiglab org source
0002EEA6 <AmiBlitz3.ab2@3093> RTS
0002EEA8 <AmiBlitz3.ab2@3096> debugmode:  Ds.w 1                                         ;debugga org source ;debugger enabled?
0002EEAE <AmiBlitz3.ab2@3100>   LEA  clrreq,a1
0002EEB2 <AmiBlitz3.ab2@3101>   MOVE.w #2000,(a1)
0002EEDC <AmiBlitz3.ab2@3102>   !basic
0002EEF0 <AmiBlitz3.ab2@3103>   If CLIMode=False
0002EF0C <AmiBlitz3.ab2@3104>     FindScreen 0
0002EF6A <AmiBlitz3.ab2@3105>     WZWindow 4,?wzgui,64,-2,-2,-2,-2,4
0002EF72 <AmiBlitz3.ab2@3109>   calcpro_old.l = 0
0002EF7E <AmiBlitz3.ab2@3110>   typ_old.l     = -1
0002EF8A <AmiBlitz3.ab2@3111>   pass_old.l    = -1
0002EFA8 <AmiBlitz3.ab2@3112>   !asm
0002EFAE <AmiBlitz3.ab2@3113>   CLR.w stopit
0002EFB0 <AmiBlitz3.ab2@3114> RTS
0002EFB6 <AmiBlitz3.ab2@3118>   CLR.w storedebugmode
0002EFBA <AmiBlitz3.ab2@3119>   BSR.w compilerequester
0002EFC4 <AmiBlitz3.ab2@3121>   MOVE.l #0,globallinecount
0002EFCA <AmiBlitz3.ab2@3122>   JSR check_of_same_source
0002EFCE <AmiBlitz3.ab2@3123>   BSR.w call_setpointerbusy
0002EFD2 <AmiBlitz3.ab2@3124>   BSR.w setcvars
0002EFDA <AmiBlitz3.ab2@3125>   MOVE.w #$8000,globalvarpointer
0002EFE4 <AmiBlitz3.ab2@3126>   MOVE.l #newtype_quick,defaulttype
0002EFEA <AmiBlitz3.ab2@3127>   MOVE.l A7,passstack
0002EFF4 <AmiBlitz3.ab2@3128>   MOVE.l #firstitem_,sourceline
0002EFFE <AmiBlitz3.ab2@3129>   MOVE.w numlines_org,linesleft
0002F008 <AmiBlitz3.ab2@3130>   MOVE.l numlines,numlines2
0002F00E <AmiBlitz3.ab2@3131>   ADDQ.w #1,linesleft
0002F014 <AmiBlitz3.ab2@3132>   ADDQ.l #1,numlines2
0002F01E <AmiBlitz3.ab2@3133>   MOVE.l #-1,linenumat
0002F022 <AmiBlitz3.ab2@3134>   BSR.w resetlibs
0002F026 <AmiBlitz3.ab2@3135>   BSR.w Aclearallvars
0002F02C <AmiBlitz3.ab2@3136>   LEA progress_per_line+2,A0
0002F02E <AmiBlitz3.ab2@3137>   MOVEQ.l #$03,D0
0002F030 <AmiBlitz3.ab2@3140>     CLR.w (A0)+
0002F034 <AmiBlitz3.ab2@3141>   DBF D0,JL_0_40EC
0002F03A <AmiBlitz3.ab2@3144>   LEA _include,a0
0002F03E <AmiBlitz3.ab2@3145>   MOVEM.l a0-a6/d0-d7,-(a7)
0002F044 <AmiBlitz3.ab2@3146>   LEA ptr_parameterstore,a1
0002F046 <AmiBlitz3.ab2@3149>     MOVE.b (a0)+,(a1)+
0002F04A <AmiBlitz3.ab2@3150>   BNE 'l1b
0002F04C <AmiBlitz3.ab2@3152>   MOVEQ #9,d2
0002F052 <AmiBlitz3.ab2@3153>   JSR findlabel2
0002F056 <AmiBlitz3.ab2@3154>   BNE 'd
0002F05E <AmiBlitz3.ab2@3155>   MOVE.l #0,8(a2)
0002F062 <AmiBlitz3.ab2@3156>   MOVEM.l (a7)+,a0-a6/d0-d7
0002F066 <AmiBlitz3.ab2@3157> BRA 'd2
0002F06C <AmiBlitz3.ab2@3160>   JSR addlabelhash
0002F074 <AmiBlitz3.ab2@3161>   MOVE.l #$1,$4(A2)
0002F07C <AmiBlitz3.ab2@3162>   MOVE.l #0,8(a2)
0002F080 <AmiBlitz3.ab2@3163>   MOVEM.l (a7)+,a0-a6/d0-d7
0002F086 <AmiBlitz3.ab2@3166>   LEA _debug,a0
0002F08A <AmiBlitz3.ab2@3167>   MOVEM.l a0-a6/d0-d7,-(a7)
0002F090 <AmiBlitz3.ab2@3168>   LEA ptr_parameterstore,a1
0002F092 <AmiBlitz3.ab2@3171>     MOVE.b (a0)+,(a1)+
0002F096 <AmiBlitz3.ab2@3172>   BNE 'l9b
0002F098 <AmiBlitz3.ab2@3174>   MOVEQ #7,d2
0002F09E <AmiBlitz3.ab2@3175>   JSR findlabel2
0002F0A2 <AmiBlitz3.ab2@3176>   BNE 'd9
0002F0A6 <AmiBlitz3.ab2@3177>   MOVE.b debugmode(PC),D0
0002F0A8 <AmiBlitz3.ab2@3178>   EXT.w d0
0002F0AA <AmiBlitz3.ab2@3179>   EXT.l d0
0002F0AE <AmiBlitz3.ab2@3180>   MOVE.l d0,8(a2)
0002F0B2 <AmiBlitz3.ab2@3181>   MOVEM.l (a7)+,a0-a6/d0-d7
0002F0B6 <AmiBlitz3.ab2@3182> BRA 'd9b
0002F0BC <AmiBlitz3.ab2@3185>   JSR addlabelhash
0002F0C4 <AmiBlitz3.ab2@3186>   MOVE.l #$1,$4(A2)
0002F0C8 <AmiBlitz3.ab2@3187>   MOVE.b debugmode(PC),D0
0002F0CA <AmiBlitz3.ab2@3188>   EXT.w d0
0002F0CC <AmiBlitz3.ab2@3189>   EXT.l d0
0002F0D0 <AmiBlitz3.ab2@3190>   MOVE.l d0,8(a2)
0002F0D4 <AmiBlitz3.ab2@3191>   MOVEM.l (a7)+,a0-a6/d0-d7
0002F0DA <AmiBlitz3.ab2@3194>   MOVE.l #firstitem_,a0
0002F0DC <AmiBlitz3.ab2@3195>   MOVE.l (a0),a0
0002F0E0 <AmiBlitz3.ab2@3196>   LEA 9(a0),a0
0002F0E8 <AmiBlitz3.ab2@3197>   MOVE.w #0,exdebug
0002F0EE <AmiBlitz3.ab2@3198>   TST.b debugmode
0002F0F2 <AmiBlitz3.ab2@3199>    BEQ 'l10
0002F0F4 <AmiBlitz3.ab2@3202>   MOVE.b (a0)+,d0
0002F0F8 <AmiBlitz3.ab2@3203>    BEQ 'l10
0002F0FC <AmiBlitz3.ab2@3204>   CMP.b #$20,d0
0002F100 <AmiBlitz3.ab2@3205>    BEQ 'l2
0002F102 <AmiBlitz3.ab2@3206>   SUBQ.l #1,a0
0002F108 <AmiBlitz3.ab2@3207>   CMP.l #"DEBU",(a0)
0002F10C <AmiBlitz3.ab2@3208>    BNE 'l10
0002F112 <AmiBlitz3.ab2@3209>   CMP.b #"G",4(a0)
0002F116 <AmiBlitz3.ab2@3210>    BNE 'l10
0002F11E <AmiBlitz3.ab2@3211>   MOVE.w #$0,debugversion
0002F126 <AmiBlitz3.ab2@3212>   MOVE.b #1,exdebug
0002F12C <AmiBlitz3.ab2@3215>   LEA nops4,A0
0002F132 <AmiBlitz3.ab2@3216>   LEA dataget,A1
0002F138 <AmiBlitz3.ab2@3217>   JSR pokecode2                                            ;write intro nops
0002F13E <AmiBlitz3.ab2@3218>   MOVE.l #$01010101,d1
0002F144 <AmiBlitz3.ab2@3219>   JSR writedatalong                                        ;for the 4 tempregs
0002F14A <AmiBlitz3.ab2@3220>   JSR writedatalong
0002F150 <AmiBlitz3.ab2@3221>   JSR writedatalong
0002F156 <AmiBlitz3.ab2@3222>   JSR writedatalong
0002F15C <AmiBlitz3.ab2@3223>   TST.b saved0
0002F160 <AmiBlitz3.ab2@3224>    BEQ 'l1
0002F166 <AmiBlitz3.ab2@3225>   MOVE.l #$4e714e71,d1
0002F16C <AmiBlitz3.ab2@3226>   JSR writelong                                            ;add 2 nops
0002F172 <AmiBlitz3.ab2@3227>   MOVE.l #$4e714e71,d1
0002F178 <AmiBlitz3.ab2@3228>   JSR writelong                                            ;add 2 nops
0002F17E <AmiBlitz3.ab2@3229>   MOVE.l #$4e714e71,d1
0002F184 <AmiBlitz3.ab2@3230>   JSR writelong                                            ;add 2 nops
0002F18A <AmiBlitz3.ab2@3231>    MOVE.l #$4e714e71,d1
0002F190 <AmiBlitz3.ab2@3232>   JSR writelong                                            ;add 2 nops
0002F194 <AmiBlitz3.ab2@3235>   MOVE.b debugmode(PC),D1
0002F198 <AmiBlitz3.ab2@3236>    BEQ.b JL_0_4132
0002F1A2 <AmiBlitz3.ab2@3237>   MOVE.b debugmode,storedebugmode
0002F1A6 <AmiBlitz3.ab2@3238>   MOVE.w #$FFDC,D1
0002F1AA <AmiBlitz3.ab2@3239>    BSR.w uselib
0002F1B0 <AmiBlitz3.ab2@3240>   TST.w debugversion                                       ;make a version for debugger
0002F1B4 <AmiBlitz3.ab2@3241>    BNE.b JL_0_412A
0002F1B8 <AmiBlitz3.ab2@3245>   MOVE.w #$FA3C,D1
0002F1BC <AmiBlitz3.ab2@3246>    BSR.w uselib
0002F1C0 <AmiBlitz3.ab2@3247>   MOVE.w #$0001,D1
0002F1C4 <AmiBlitz3.ab2@3248>    BSR.w uselib
0002F1C8 <AmiBlitz3.ab2@3249> BRA.b JL_0_4132
0002F1CC <AmiBlitz3.ab2@3252>   MOVE.w #$FA32,D1
0002F1D0 <AmiBlitz3.ab2@3253>   BSR.w uselib
0002F1D4 <AmiBlitz3.ab2@3256>   BSR.w nextline
0002F1DA <AmiBlitz3.ab2@3257>   CLR.l linenum
0002F1E0 <AmiBlitz3.ab2@3258>   CLR.l stacktrack
0002F1E6 <AmiBlitz3.ab2@3261>   ADDQ.l #1,linenum
0002F1F0 <AmiBlitz3.ab2@3262>   MOVE.l destpointer,destpointer2
0002F1F6 <AmiBlitz3.ab2@3263>   MOVE.l a5,sourceline2
0002F1FA <AmiBlitz3.ab2@3264>   BSR.w compile_line                                        ;compile pass
0002F1FE <AmiBlitz3.ab2@3267>   BSR.w nextline
0002F202 <AmiBlitz3.ab2@3268>    BNE.w JL_0_4136
0002F206 <AmiBlitz3.ab2@3269>   BSR.w JUMP_do_runerrson
0002F20A <AmiBlitz3.ab2@3270>   BSR.w pointchk
0002F210 <AmiBlitz3.ab2@3271>   TST.b objectcount
0002F214 <AmiBlitz3.ab2@3272>    BNE macenderr
0002F21A <AmiBlitz3.ab2@3273>   CLR.l linenumat
0002F21E <AmiBlitz3.ab2@3274>   BSR.w errchx2
0002F228 <AmiBlitz3.ab2@3275>   CMP.l #-1,bssend
0002F22C <AmiBlitz3.ab2@3276>    BNE 'l30
0002F236 <AmiBlitz3.ab2@3277>   MOVE.l destpointer,bssend                                ;compile end
0002F23C <AmiBlitz3.ab2@3280>   MOVE.l destpointer,d0
0002F246 <AmiBlitz3.ab2@3281>   CMP.l #-1,bssstart
0002F24A <AmiBlitz3.ab2@3282>   BNE 'lnf6
0002F254 <AmiBlitz3.ab2@3283>   CMP.l #-1,chipstart
0002F258 <AmiBlitz3.ab2@3284>   BNE 'lnf6
0002F25C <AmiBlitz3.ab2@3285> BRA 'leven4
0002F262 <AmiBlitz3.ab2@3288>   MOVE.l destpointer,d1
0002F264 <AmiBlitz3.ab2@3289>   ADDQ.l #3,d1
0002F26A <AmiBlitz3.ab2@3290>   AND.l #$fffffffc,d1                                      ;bug ?
0002F270 <AmiBlitz3.ab2@3291>   MOVE.l d1,destpointer
0002F27A <AmiBlitz3.ab2@3294>   MOVE.l destpointer,codeend
0002F284 <AmiBlitz3.ab2@3295>   CMP.l #-1,chipend
0002F288 <AmiBlitz3.ab2@3296>   BNE 'l31
0002F292 <AmiBlitz3.ab2@3297>   MOVE.l destpointer,chipend
0002F298 <AmiBlitz3.ab2@3300>   MOVE.l destpointer,d1
0002F29A <AmiBlitz3.ab2@3301>   ADDQ.l #1,d1
0002F2A0 <AmiBlitz3.ab2@3302>   AND.l #$fffffffe,d1                                     ;new evenexit
0002F2A6 <AmiBlitz3.ab2@3303>   MOVE.l d1,destpointer
0002F2AA <AmiBlitz3.ab2@3304>   MOVE.b debugmode(PC),D1
0002F2AE <AmiBlitz3.ab2@3305>    BEQ.b JL_0_4180
0002F2B2 <AmiBlitz3.ab2@3306>    BSR.w debugstuff
0002F2B6 <AmiBlitz3.ab2@3307>   MOVE.w #$C300,D1
0002F2BC <AmiBlitz3.ab2@3308>    JSR Atokejsr
0002F2C0 <AmiBlitz3.ab2@3309>    BSR.w debugstuff
0002F2C4 <AmiBlitz3.ab2@3310>   MOVE.l eopcode(PC),D1
0002F2CA <AmiBlitz3.ab2@3311>    JSR writelong
0002F2CE <AmiBlitz3.ab2@3312>   MOVE.l lastcontlink(PC),D1
0002F2D2 <AmiBlitz3.ab2@3313>    BEQ.b JL_0_4180
0002F2D4 <AmiBlitz3.ab2@3314>   MOVEA.l D1,A0
0002F2D8 <AmiBlitz3.ab2@3315>   CLR.w $6(A0)
0002F2E2 <AmiBlitz3.ab2@3321>   MOVE.l destpointer,endop                                ;where end goes...
0002F2E8 <AmiBlitz3.ab2@3323>   TST.w blitzmode
0002F2EC <AmiBlitz3.ab2@3324>   BEQ.w JL_0_4198
0002F2F0 <AmiBlitz3.ab2@3325>   BSR.w do_AMIGA                                          ;back to amiga if in blitz!
0002F2F6 <AmiBlitz3.ab2@3328>   TST.w intsused
0002F2FA <AmiBlitz3.ab2@3329>   BEQ.b JL_0_41AA
0002F2FE <AmiBlitz3.ab2@3330>   MOVE.w #$C105,D1                                        ;interupts off!
0002F304 <AmiBlitz3.ab2@3331>   JSR tokejsr2
0002F308 <AmiBlitz3.ab2@3334>   BSR.w calcstatic
0002F30E <AmiBlitz3.ab2@3335>   MOVE.w D4,numstatic
0002F314 <AmiBlitz3.ab2@3336>   MOVE.l D3,staticdata
0002F318 <AmiBlitz3.ab2@3337>    BSR.w calcmaxs
0002F31E <AmiBlitz3.ab2@3339>   TST.l tokeslist
0002F322 <AmiBlitz3.ab2@3340>    BEQ.b JL_0_41F8
0002F328 <AmiBlitz3.ab2@3341>   MOVE.w gotocode,D1                                       ;jmp!
0002F32E <AmiBlitz3.ab2@3342>    JSR writeword
0002F338 <AmiBlitz3.ab2@3343>   MOVE.l destpointer,endjmpat
0002F33C <AmiBlitz3.ab2@3344>    BSR.w addoff
0002F342 <AmiBlitz3.ab2@3345>    JSR writelong                                           
0002F346 <AmiBlitz3.ab2@3347>    BSR.w JL_0_6C76                                         ;has to be done before finits!
0002F34C <AmiBlitz3.ab2@3351>   TST.w dontwrite
0002F350 <AmiBlitz3.ab2@3352>    BNE.b JL_0_41F8
0002F354 <AmiBlitz3.ab2@3353>   MOVEA.l endjmpat(PC),A4
0002F35A <AmiBlitz3.ab2@3354>   MOVE.l destpointer,(A4)
0002F360 <AmiBlitz3.ab2@3357>   TST.b returncode
0002F364 <AmiBlitz3.ab2@3358>   BEQ 'l2
0002F368 <AmiBlitz3.ab2@3359>   MOVE.w #$2e80,d1
0002F36E <AmiBlitz3.ab2@3360>   JSR writeword
0002F374 <AmiBlitz3.ab2@3363>   JSR JL_0_B98A
0002F37A <AmiBlitz3.ab2@3364>   TST.b returncode
0002F37E <AmiBlitz3.ab2@3365>   BEQ 'l3
0002F382 <AmiBlitz3.ab2@3366>   MOVE.w #$4e75,d1
0002F388 <AmiBlitz3.ab2@3367>   JSR writeword
0002F38C <AmiBlitz3.ab2@3368> BRA 'l1
0002F392 <AmiBlitz3.ab2@3371>   MOVE.l #$70004E75,D1
0002F398 <AmiBlitz3.ab2@3372>   JSR writelong                                            ;write moveq #0,d0:rts
0002F39E <AmiBlitz3.ab2@3375>   JSR JL_0_B73E
0002F3A2 <AmiBlitz3.ab2@3376>   BSR.w asmfixer
0002F3A6 <AmiBlitz3.ab2@3377>   BSR.w close_compilewin
0002F3AA <AmiBlitz3.ab2@3378> BRA.w call_setpointernormal
0002F3B0 <AmiBlitz3.ab2@3382> JMP do_runerrson
0002F3B2 <AmiBlitz3.ab2@3386> eopcode:    Dc.b $70,$03                                   ;MOVEQ #$03,D0
0002F3B4 <AmiBlitz3.ab2@3387>             Dc.b $4E,$40                                   ;TRAP  #00
0002F3B8 <AmiBlitz3.ab2@3389> endjmpat:   Ds.l 1
0002F3BE <AmiBlitz3.ab2@3393>   MOVEA.l newtype_string,A2
0002F3C4 <AmiBlitz3.ab2@3394>   MOVE.l #MaxByte,D0                                       ;move.l #$ff,d0 org source
0002F3C8 <AmiBlitz3.ab2@3397>     CMPA.w #$0,A2
0002F3CC <AmiBlitz3.ab2@3398>      BEQ.w pointchk_done
0002F3D0 <AmiBlitz3.ab2@3399>     CMP.l $4(A2),D0
0002F3D4 <AmiBlitz3.ab2@3400>      BNE.w pointchk_next
0002F3DC <AmiBlitz3.ab2@3401>     MOVE.w $8(A2),linenumat+2                              ;type not found  ;move 8(a2),linenumat org source
0002F3E0 <AmiBlitz3.ab2@3402> BRA.w notypeerr
0002F3E2 <AmiBlitz3.ab2@3405>     MOVEA.l (A2),A2
0002F3E6 <AmiBlitz3.ab2@3406> BRA.w pointchk_loop
0002F3E8 <AmiBlitz3.ab2@3409> RTS
0002F3EE <AmiBlitz3.ab2@3413>   LEA labelbase,A2
0002F3F0 <AmiBlitz3.ab2@3417>   MOVE.l (A2),D0                                           ;testlabels
0002F3F4 <AmiBlitz3.ab2@3418>    BEQ.w errchx2_done
0002F3F6 <AmiBlitz3.ab2@3419>   MOVEA.l D0,A2
0002F3FA <AmiBlitz3.ab2@3420>   MOVE.l $4(A2),D0
0002F3FE <AmiBlitz3.ab2@3421>   BTST #$0,D0
0002F402 <AmiBlitz3.ab2@3422>    BNE.w errchx2_loop
0002F406 <AmiBlitz3.ab2@3423>   MOVE.l $8(A2),D0
0002F40A <AmiBlitz3.ab2@3424>    BNE.w errchx2_loop
0002F412 <AmiBlitz3.ab2@3425>   MOVE.w $10(A2),linenumat+2
0002F414 <AmiBlitz3.ab2@3426>   MOVEQ #0,d0
0002F418 <AmiBlitz3.ab2@3427>   MOVE.b $12(a2),d0
0002F420 <AmiBlitz3.ab2@3428>   MOVE.w 0(a2,d0),linenumat
0002F426 <AmiBlitz3.ab2@3429> JMP nolaberr                                               ;label not found
0002F42C <AmiBlitz3.ab2@3432>   MOVE.l concomsp,D0
0002F432 <AmiBlitz3.ab2@3433>   CMP.l #concomstack,D0
0002F436 <AmiBlitz3.ab2@3434>    BNE.w chxerr4
0002F43C <AmiBlitz3.ab2@3435>   MOVE.w connest,D1
0002F440 <AmiBlitz3.ab2@3436>    BNE.w chxerr4
0002F442 <AmiBlitz3.ab2@3439>   MOVE.l D1,-(A7)
0002F448 <AmiBlitz3.ab2@3440>   MOVE.l firstsel,D1
0002F44C <AmiBlitz3.ab2@3441>    BNE.w errchx_err1
0002F452 <AmiBlitz3.ab2@3442>   MOVE.l firstrep,D1
0002F456 <AmiBlitz3.ab2@3443>    BNE.w errchx_err2
0002F45C <AmiBlitz3.ab2@3444>   MOVE.w intstring,D1
0002F460 <AmiBlitz3.ab2@3445>    BNE.w errchx_err3
0002F464 <AmiBlitz3.ab2@3446>   MOVE.l 4(a7),d1
0002F46A <AmiBlitz3.ab2@3447>   MOVE.w proceduremode,D1
0002F46E <AmiBlitz3.ab2@3448>    BNE.w errchx_err6
0002F474 <AmiBlitz3.ab2@3449>   MOVE.l firstiff,d1
0002F478 <AmiBlitz3.ab2@3450>    BNE errchx_err5
0002F47E <AmiBlitz3.ab2@3451>   MOVE.l firstfor,D1
0002F482 <AmiBlitz3.ab2@3452>    BNE.w errchx_err7
0002F484 <AmiBlitz3.ab2@3453>   MOVE.l (A7)+,D1
0002F486 <AmiBlitz3.ab2@3454> RTS
0002F490 <AmiBlitz3.ab2@3458>   MOVE.l sellineat,linenumat
0002F496 <AmiBlitz3.ab2@3459> JMP selerrz
0002F4A0 <AmiBlitz3.ab2@3462>   MOVE.l replineat,linenumat
0002F4A6 <AmiBlitz3.ab2@3463> JMP unterr3
0002F4B0 <AmiBlitz3.ab2@3466>   MOVE.l intlineat,linenumat
0002F4B6 <AmiBlitz3.ab2@3467> JMP interr2
0002F4C0 <AmiBlitz3.ab2@3470>   MOVE.l iflineat,linenumat
0002F4C6 <AmiBlitz3.ab2@3471> JMP noenderr
0002F4D0 <AmiBlitz3.ab2@3474>   MOVE.l prolineat,linenumat
0002F4D6 <AmiBlitz3.ab2@3475> JMP nopenderr
0002F4E0 <AmiBlitz3.ab2@3478>   MOVE.l forlineat,linenumat
0002F4E6 <AmiBlitz3.ab2@3479> JMP nonexterr
0002F4F0 <AmiBlitz3.ab2@3482>   MOVE.l ciflineat,linenumat
0002F4F6 <AmiBlitz3.ab2@3483> JMP nocenderr
0002F500 <AmiBlitz3.ab2@3487>   MOVE.l data1,maxsat
0002F502 <AmiBlitz3.ab2@3488>   MOVEQ.l #$00,D4
0002F508 <AmiBlitz3.ab2@3489>   MOVEA.l libpointer,A2
0002F50C <AmiBlitz3.ab2@3492>     CMPA.w #$0,A2
0002F510 <AmiBlitz3.ab2@3493>      BEQ.w calcmaxs_done
0002F514 <AmiBlitz3.ab2@3494>     TST.w $C(A2)
0002F518 <AmiBlitz3.ab2@3495>      BPL.w calcmaxs_next
0002F51C <AmiBlitz3.ab2@3496>     MOVE.l $12(A2),D0
0002F520 <AmiBlitz3.ab2@3497>     TST.w -$2(A2,D0.L)
0002F524 <AmiBlitz3.ab2@3498>      BEQ.w calcmaxs_next
0002F526 <AmiBlitz3.ab2@3499>     ADDQ.w #1,D4
0002F52A <AmiBlitz3.ab2@3500>     MOVE.w -$6(A2,D0.L),D1
0002F52E <AmiBlitz3.ab2@3501>     BSR.w pokedata1
0002F530 <AmiBlitz3.ab2@3502>     MOVEQ.l #$01,D1
0002F534 <AmiBlitz3.ab2@3503>     MOVE.w -$2(A2,D0.L),D2
0002F536 <AmiBlitz3.ab2@3504>     LSL.w D2,D1
0002F53A <AmiBlitz3.ab2@3505>     MULU -$4(A2,D0.L),D1                                   ;write objectspacesize
0002F53E <AmiBlitz3.ab2@3506>     BSR.w writedatalong
0002F540 <AmiBlitz3.ab2@3509>     MOVEA.l (A2),A2
0002F544 <AmiBlitz3.ab2@3510> BRA.w calcmaxs_loop
0002F54A <AmiBlitz3.ab2@3513>   MOVE.w D4,maxsused
0002F54E <AmiBlitz3.ab2@3514>    BEQ.w calcmaxs_done2
0002F552 <AmiBlitz3.ab2@3515>   MOVE.w #$FFFA,D1                                         ;;use memlib
0002F556 <AmiBlitz3.ab2@3516> BRA.w uselib
0002F558 <AmiBlitz3.ab2@3519> RTS
0002F55E <AmiBlitz3.ab2@3523>    MOVE.l a7,stackaddr
0002F562 <AmiBlitz3.ab2@3524>    BSR.w compile_term
0002F566 <AmiBlitz3.ab2@3525>    BSR.w reget
0002F56A <AmiBlitz3.ab2@3526>    BNE.w illeolerr
0002F570 <AmiBlitz3.ab2@3527>    TST.w dontwrite
0002F574 <AmiBlitz3.ab2@3528>    BNE 'l1
0002F57A <AmiBlitz3.ab2@3529>    TST.l stacktrack
0002F57E <AmiBlitz3.ab2@3530>    BNE errormsg_stack
0002F582 <AmiBlitz3.ab2@3533>    CMP.w #-$7FDE,D0
0002F586 <AmiBlitz3.ab2@3534>    BNE.w compile_line_notelse
0002F58C <AmiBlitz3.ab2@3535>    JSR do_else2
0002F590 <AmiBlitz3.ab2@3536> BRA.w compile_line
0002F592 <AmiBlitz3.ab2@3539>   TST.w D0
0002F596 <AmiBlitz3.ab2@3540>   BNE.w compile_line
0002F59C <AmiBlitz3.ab2@3545>   MOVE.l firstiff,D0
0002F5A0 <AmiBlitz3.ab2@3546>    BEQ.w compile_line_done
0002F5A2 <AmiBlitz3.ab2@3547>   MOVEA.l D0,A0
0002F5A6 <AmiBlitz3.ab2@3548>   MOVE.w $C(A0),D1
0002F5AA <AmiBlitz3.ab2@3549>    BPL.w compile_line_done
0002F5AE <AmiBlitz3.ab2@3553>   BCLR #$F,D1
0002F5B4 <AmiBlitz3.ab2@3554>    JSR AJL_0_D7B8
0002F5BA <AmiBlitz3.ab2@3555>    JSR AJL_0_D81C
0002F5BE <AmiBlitz3.ab2@3556> BRA.w compile_line_unthen
0002F5C0 <AmiBlitz3.ab2@3559> RTS
0002F5C6 <AmiBlitz3.ab2@3563>   LEA lastgloballabel,A0
0002F5C8 <AmiBlitz3.ab2@3564>   TST.b (A0)
0002F5CC <AmiBlitz3.ab2@3565>    BEQ.w nolocerr
0002F5D2 <AmiBlitz3.ab2@3566>   LEA ptr_parameterstore,A1
0002F5D4 <AmiBlitz3.ab2@3567>   MOVEQ.l #$00,D2
0002F5D6 <AmiBlitz3.ab2@3570>   ADDQ.w #1,D2
0002F5D8 <AmiBlitz3.ab2@3571>   MOVE.b (A0)+,(A1)+
0002F5DC <AmiBlitz3.ab2@3572>    BNE.w createlab_loop
0002F5E2 <AmiBlitz3.ab2@3573>   MOVE.b #$27,-$1(A1)
0002F5E4 <AmiBlitz3.ab2@3574>   MOVE.w D2,-(A7)
0002F5E8 <AmiBlitz3.ab2@3575>    BSR.w makename4
0002F5EA <AmiBlitz3.ab2@3576>   CMP.w (A7)+,D2
0002F5EE <AmiBlitz3.ab2@3577>    BEQ.w syntaxerr
0002F5F0 <AmiBlitz3.ab2@3578>    TST.w d0
0002F5F4 <AmiBlitz3.ab2@3579>    BPL createlab_done
0002F5FC <AmiBlitz3.ab2@3580>    MOVE.w #$3a,lastchar
0002F5FE <AmiBlitz3.ab2@3581>    SUBQ.l #2,a5
0002F600 <AmiBlitz3.ab2@3584> RTS
0002F60A <AmiBlitz3.ab2@3588>   MOVE.l #forthstack,forthsp
0002F614 <AmiBlitz3.ab2@3589>   MOVE.l #precstack,precsp
0002F616 <AmiBlitz3.ab2@3590> RTS
0002F618 <AmiBlitz3.ab2@3597>   MOVEQ.l #$00,D4
0002F642 <AmiBlitz3.ab2@3600>   !basic
0002F65E <AmiBlitz3.ab2@3601>   If Peek.l(Addr Window(4))
0002F674 <AmiBlitz3.ab2@3602>     Use Window 4
0002F684 <AmiBlitz3.ab2@3603>     ev.l = Event : c_abort.b = False
0002F68E <AmiBlitz3.ab2@3604>     While ev
0002F6A0 <AmiBlitz3.ab2@3605>       If ev = #IDCMP_IDCMPUPDATE
0002F6D6 <AmiBlitz3.ab2@3606>         If WZGadName = "COMPILE_ABORT" Then c_abort = True
0002F6F0 <AmiBlitz3.ab2@3608>       If (c_abort = True)
0002F6F2 <AmiBlitz3.ab2@3610>         MOVEQ.l #-$01,d4
0002F6F8 <AmiBlitz3.ab2@3611>         MOVE.w D4,stopit
0002F716 <AmiBlitz3.ab2@3612>         !asm
0002F71A <AmiBlitz3.ab2@3613>     BRA chkrealstop__skip
0002F724 <AmiBlitz3.ab2@3615>       ev = Event
0002F72A <AmiBlitz3.ab2@3616>     Wend
0002F748 <AmiBlitz3.ab2@3618>   !asm
0002F74A <AmiBlitz3.ab2@3619>   MOVEQ.l #$00,D6
0002F74C <AmiBlitz3.ab2@3620>   MOVEQ.l #$00,D7                                          ; clr Z-Flag for beq.b in chkstop_chk
0002F74E <AmiBlitz3.ab2@3624> RTS
0002F752 <AmiBlitz3.ab2@3628>   MOVE.w stopit(PC),D0
0002F756 <AmiBlitz3.ab2@3629>   BEQ chkstop__chk
0002F75C <AmiBlitz3.ab2@3630>   SUBQ.w #1,stopit
0002F75E <AmiBlitz3.ab2@3634> RTS
0002F766 <AmiBlitz3.ab2@3637>   MOVE.w #2000,stopit
0002F76A <AmiBlitz3.ab2@3638>   BSR.w chkrealstop
0002F76E <AmiBlitz3.ab2@3639>   BEQ.b chkstop__rts
0002F772 <AmiBlitz3.ab2@3641>   BSR.w close_compilewin
0002F776 <AmiBlitz3.ab2@3642>   BSR.w call_setpointernormal
0002F77C <AmiBlitz3.ab2@3644>   MOVEA.l errstack,A7
0002F782 <AmiBlitz3.ab2@3645>   MOVEA.l errcont,A0
0002F78A <AmiBlitz3.ab2@3646>   MOVE.w #-1,anyerrs
0002F78C <AmiBlitz3.ab2@3647> JMP (A0)
0002F790 <AmiBlitz3.ab2@3650> d_pc:           Ds.l 1
0002F794 <AmiBlitz3.ab2@3651> d_bigpc:        Ds.l 1
0002F796 <AmiBlitz3.ab2@3652> d_nomemleft:    Ds.w 1
0002F79A <AmiBlitz3.ab2@3653> cont_pc:        Ds.l 1
0002F79E <AmiBlitz3.ab2@3654> cont_pc2:       Ds.l 1
0002F7A2 <AmiBlitz3.ab2@3655> lastcontlink:   Ds.l 1
0002F7A6 <AmiBlitz3.ab2@3659>   ORI.w #$4E40,D1
0002F7AA <AmiBlitz3.ab2@3660> BRA.w JUMP_writeword
0002F7B0 <AmiBlitz3.ab2@3664>   TST.b debugmode
0002F7B4 <AmiBlitz3.ab2@3665>   BEQ.w debugstuff__rts
0002F7BA <AmiBlitz3.ab2@3672>   TST.w dirmode                                            ;or while in direct mode...
0002F7BE <AmiBlitz3.ab2@3673>    BNE debugstuff__rts
0002F7C8 <AmiBlitz3.ab2@3674>   MOVE.l destpointer,d_pc
0002F7D2 <AmiBlitz3.ab2@3675>   MOVE.l bigpc,d_bigpc
0002F7DC <AmiBlitz3.ab2@3676>   MOVE.w dontwrite,d_nomemleft
0002F7E0 <AmiBlitz3.ab2@3677>   MOVEM.l D0-D1,-(A7)
0002F7E2 <AmiBlitz3.ab2@3678>   MOVEQ.l #$01,D1
0002F7E6 <AmiBlitz3.ab2@3679>    BSR.w writetrap                                         ;write the adress to sourceline
0002F7EC <AmiBlitz3.ab2@3683>    MOVE.l destpointer,D0
0002F7F2 <AmiBlitz3.ab2@3684>   MOVE.l cont_pc,D1
0002F7F8 <AmiBlitz3.ab2@3685>   MOVE.l D0,cont_pc
0002F7FE <AmiBlitz3.ab2@3686>   MOVE.l D1,cont_pc2
0002F802 <AmiBlitz3.ab2@3687>    BEQ.b debugstuff__skip
0002F808 <AmiBlitz3.ab2@3688>   TST.w dontwrite
0002F80C <AmiBlitz3.ab2@3689>    BNE.b debugstuff__skip
0002F80E <AmiBlitz3.ab2@3690>   MOVEA.l D1,A4
0002F810 <AmiBlitz3.ab2@3691>   SUB.l A4,D0
0002F814 <AmiBlitz3.ab2@3692>   MOVE.w D0,$6(A4)
0002F81A <AmiBlitz3.ab2@3693>   MOVE.l A4,lastcontlink
0002F820 <AmiBlitz3.ab2@3696>   TST.w ininclude
0002F826 <AmiBlitz3.ab2@3698>   TST.w makeexec
0002F82A <AmiBlitz3.ab2@3699>   BEQ 'l1
0002F830 <AmiBlitz3.ab2@3700>   TST.w exdebug
0002F834 <AmiBlitz3.ab2@3701>   BEQ 'noinc
0002F838 <AmiBlitz3.ab2@3704>   MOVEM.l a0-a1/d2/d3,-(a7)                                ;write source for includes
0002F83E <AmiBlitz3.ab2@3705>   MOVE.l data1,d1
0002F844 <AmiBlitz3.ab2@3706>   TST.b firsttime
0002F848 <AmiBlitz3.ab2@3707>   BNE 'nofirst
0002F850 <AmiBlitz3.ab2@3708>   MOVE.b #1,firsttime
0002F856 <AmiBlitz3.ab2@3709>   MOVE.l #"DuCk",d1                                        ; to found from debugger the code start
0002F85C <AmiBlitz3.ab2@3710>   JSR writedatalong
0002F862 <AmiBlitz3.ab2@3711>   MOVE.l #"AmiB",d1
0002F868 <AmiBlitz3.ab2@3712>   JSR writedatalong
0002F86E <AmiBlitz3.ab2@3713>   MOVE.l destbufferstart,d1
0002F874 <AmiBlitz3.ab2@3714>   JSR writedatalong
0002F87A <AmiBlitz3.ab2@3715>   TST.w dontwrite
0002F87E <AmiBlitz3.ab2@3716>   BNE 'nohunk
0002F884 <AmiBlitz3.ab2@3717>   MOVE.l data1,d1
0002F886 <AmiBlitz3.ab2@3718>   SUBQ.l #4,d1
0002F88C <AmiBlitz3.ab2@3719>   SUB.l destbufferstart,d1
0002F88E <AmiBlitz3.ab2@3720>   MOVE.l d1,d2
0002F894 <AmiBlitz3.ab2@3721>   JSR addhunkoffset
0002F89A <AmiBlitz3.ab2@3724>   MOVE.l destpointer,d2
0002F8A0 <AmiBlitz3.ab2@3725>   MOVE.l data1,d1
0002F8A6 <AmiBlitz3.ab2@3728>   MOVE.l destpointer,d2
0002F8A8 <AmiBlitz3.ab2@3729>   MOVE.l d1,d3
0002F8AE <AmiBlitz3.ab2@3730>   SUB.l destbufferstart,d1
0002F8B4 <AmiBlitz3.ab2@3731>   OR.l #$80000000,d1
0002F8BA <AmiBlitz3.ab2@3732>   JSR writelong
0002F8C0 <AmiBlitz3.ab2@3733>   TST.w inmacro
0002F8C4 <AmiBlitz3.ab2@3734>   BEQ 'sc1
0002F8CA <AmiBlitz3.ab2@3735>   MOVE.l myline,a0
0002F8CE <AmiBlitz3.ab2@3737> BRA 'inc2
0002F8D4 <AmiBlitz3.ab2@3739>  'sc1  TST.w ininclude
0002F8D8 <AmiBlitz3.ab2@3740>   BEQ 'inc
0002F8DE <AmiBlitz3.ab2@3741>   MOVE.l includesourceline,a0
0002F8E2 <AmiBlitz3.ab2@3742> BRA 'inc2
0002F8E8 <AmiBlitz3.ab2@3745>   MOVE.l sourceline,a0
0002F8EC <AmiBlitz3.ab2@3746>   LEA 9(a0),a0
0002F8EE <AmiBlitz3.ab2@3749>   MOVE.l d1,d2
0002F8F0 <AmiBlitz3.ab2@3750>   MOVE.l A5,D1
0002F8F2 <AmiBlitz3.ab2@3751>   SUB.l a0,D1
0002F8F8 <AmiBlitz3.ab2@3752>   ADD.l #9,d1
0002F8FC <AmiBlitz3.ab2@3753>   BSR.w JUMP_writeword
0002F902 <AmiBlitz3.ab2@3754>   CMP.l #9,d1
0002F906 <AmiBlitz3.ab2@3755>   BEQ 'pos1
0002F90C <AmiBlitz3.ab2@3756>   TST.w dontwrite
0002F910 <AmiBlitz3.ab2@3757>   BNE 'nopad
0002F916 <AmiBlitz3.ab2@3758>   MOVE.l lastsourceline,d1
0002F91A <AmiBlitz3.ab2@3759>   MOVE.l d1,-6(a4)
0002F91E <AmiBlitz3.ab2@3760> BRA 'nopad
0002F924 <AmiBlitz3.ab2@3763>   MOVE.l d2,lastsourceline
0002F92E <AmiBlitz3.ab2@3764>    MOVE.l destpointer,lastdestpointer
0002F930 <AmiBlitz3.ab2@3765>    MOVEQ #0,d1
0002F936 <AmiBlitz3.ab2@3766>   MOVE.l data1,d2
0002F93C <AmiBlitz3.ab2@3767>   SUB.l destbufferstart,d2
0002F942 <AmiBlitz3.ab2@3768>   JSR writedatalong
0002F948 <AmiBlitz3.ab2@3769>   TST.w dontwrite
0002F94C <AmiBlitz3.ab2@3770>   BNE 'no2
0002F952 <AmiBlitz3.ab2@3771>   JSR addhunkoffset
0002F958 <AmiBlitz3.ab2@3774>   MOVE.l data1,d2
0002F95E <AmiBlitz3.ab2@3775>   SUB.l destbufferstart,d2
0002F964 <AmiBlitz3.ab2@3776>   JSR writedatalong
0002F96A <AmiBlitz3.ab2@3777>   TST.w dontwrite
0002F96E <AmiBlitz3.ab2@3778>   BNE 'no
0002F974 <AmiBlitz3.ab2@3779>   JSR addhunkoffset
0002F97A <AmiBlitz3.ab2@3780>   MOVE.l lastwritedat,a1
0002F980 <AmiBlitz3.ab2@3781>   CMP.l #0,a1
0002F984 <AmiBlitz3.ab2@3782>   BEQ 'no
0002F986 <AmiBlitz3.ab2@3783>   MOVE.l d3,(a1)
0002F98E <AmiBlitz3.ab2@3784>   MOVE.l prevwritedat,4(a1)
0002F998 <AmiBlitz3.ab2@3785>   MOVE.l lastwritedat,prevwritedat
0002F99E <AmiBlitz3.ab2@3788>   MOVE.l d3,lastwritedat
0002F9A0 <AmiBlitz3.ab2@3789>   MOVEQ #4,d1
0002F9A4 <AmiBlitz3.ab2@3790>   BSR pokedata1b
0002F9A6 <AmiBlitz3.ab2@3793>   MOVE.b (a0)+,d1
0002F9AA <AmiBlitz3.ab2@3794>   BEQ 'done
0002F9AE <AmiBlitz3.ab2@3795>   BSR pokedata1b
0002F9B2 <AmiBlitz3.ab2@3796> BRA 'loop
0002F9B4 <AmiBlitz3.ab2@3799>   MOVEQ #0,d1
0002F9B8 <AmiBlitz3.ab2@3800>   BSR pokedata1b
0002F9BE <AmiBlitz3.ab2@3801>   MOVE.l data1,d1
0002F9C2 <AmiBlitz3.ab2@3802>   BTST #0,d1
0002F9C6 <AmiBlitz3.ab2@3803>   BEQ 'nopad
0002F9C8 <AmiBlitz3.ab2@3804>   MOVEQ #0,d1
0002F9CC <AmiBlitz3.ab2@3805>   BSR pokedata1b
0002F9D0 <AmiBlitz3.ab2@3808>   MOVEM.l (a7)+,a0-a1/d2/d3
0002F9D4 <AmiBlitz3.ab2@3809> BRA 'noinc2
0002F9DA <AmiBlitz3.ab2@3812>   MOVE.l sourceline,D1
0002F9E0 <AmiBlitz3.ab2@3814>   JSR writelong
0002F9E2 <AmiBlitz3.ab2@3815>   MOVE.l A5,D1
0002F9E8 <AmiBlitz3.ab2@3816>   SUB.l sourceline,D1
0002F9EE <AmiBlitz3.ab2@3818>   JSR writeword
0002F9F0 <AmiBlitz3.ab2@3821>   MOVEQ.l #$00,D1
0002F9F6 <AmiBlitz3.ab2@3822>   JSR writeword                                            ; was: BSR.w writeword
0002F9FA <AmiBlitz3.ab2@3823>   MOVEM.l (A7)+,D0-D1
0002F9FC <AmiBlitz3.ab2@3826> RTS
0002FA02 <AmiBlitz3.ab2@3830>   TST.b debugmode                                          ;extern debug
0002FA06 <AmiBlitz3.ab2@3831>    BEQ.b undodebug__rts
0002FA0C <AmiBlitz3.ab2@3832>   TST.b dirmode
0002FA10 <AmiBlitz3.ab2@3833>   BNE undodebug__rts
0002FA1A <AmiBlitz3.ab2@3838>   MOVE.w d_nomemleft,dontwrite
0002FA24 <AmiBlitz3.ab2@3839>   MOVE.l d_bigpc,bigpc
0002FA2E <AmiBlitz3.ab2@3840>   MOVE.l d_pc,destpointer
0002FA38 <AmiBlitz3.ab2@3841>   MOVE.l cont_pc2,cont_pc
0002FA3A <AmiBlitz3.ab2@3844> RTS
0002FA44 <AmiBlitz3.ab2@3848>   MOVE.l #forthstack,forthsp
0002FA4E <AmiBlitz3.ab2@3849>   MOVE.l #precstack,precsp
0002FA54 <AmiBlitz3.ab2@3850>   CLR.w regnum
0002FA5A <AmiBlitz3.ab2@3851>   CLR.w nonew
0002FA60 <AmiBlitz3.ab2@3852>   CLR.w sbasegot
0002FA6A <AmiBlitz3.ab2@3853>   MOVE.w varcodelen,oldvcodelen
0002FA70 <AmiBlitz3.ab2@3854>   CLR.w varcodelen
0002FA78 <AmiBlitz3.ab2@3855>   MOVE.w #-1,lasta6
0002FA7A <AmiBlitz3.ab2@3856> RTS
0002FA80 <AmiBlitz3.ab2@3860>   TST.w linemode
0002FA84 <AmiBlitz3.ab2@3861>   BMI.b smode__skip
0002FA88 <AmiBlitz3.ab2@3862>   BSR.w undodebug
0002FA8E <AmiBlitz3.ab2@3863>   MOVE.w linemode,D1
0002FA90 <AmiBlitz3.ab2@3864>   ADDQ.w #4,A7
0002FA92 <AmiBlitz3.ab2@3865>   LSL.w #2,D1
0002FA98 <AmiBlitz3.ab2@3866>   LEA modetable,A0
0002FA9C <AmiBlitz3.ab2@3867>   MOVEA.l $0(A0,D1.W),A0
0002FAA0 <AmiBlitz3.ab2@3868>   BSR.w reget
0002FAA2 <AmiBlitz3.ab2@3871> JMP (A0)                                                   ;jumptokenroutine
0002FAA4 <AmiBlitz3.ab2@3874> RTS
0002FAAC <AmiBlitz3.ab2@3879>   MOVE.w #0,leaa0a0+2
0002FAB2 <AmiBlitz3.ab2@3880>   CLR.b nowdeclare
0002FAB8 <AmiBlitz3.ab2@3881>   CLR.b notypecheck
0002FABE <AmiBlitz3.ab2@3882>   CLR.l lasttoken
0002FAC4 <AmiBlitz3.ab2@3883>   CLR.b doimmediate
0002FACA <AmiBlitz3.ab2@3884>   CLR.w vartype
0002FAD0 <AmiBlitz3.ab2@3885>   CLR.w regnumfunc
0002FAD6 <AmiBlitz3.ab2@3886>   CLR.b optistring
0002FADC <AmiBlitz3.ab2@3887>   CLR.b iniffcommand
0002FAE2 <AmiBlitz3.ab2@3888>   TST.b debugmode
0002FAE6 <AmiBlitz3.ab2@3889>    BEQ 'fpu
0002FAF0 <AmiBlitz3.ab2@3895>   MOVE.b fpu,iee
0002FAF4 <AmiBlitz3.ab2@3896>   MOVE.w stopit(PC),D0
0002FAF8 <AmiBlitz3.ab2@3897>   BNE chkstop_chkb
0002FAFC <AmiBlitz3.ab2@3898>   BSR.w chkstop                                          ; message here
0002FB02 <AmiBlitz3.ab2@3901>   SUBQ.w #1,stopit
0002FB06 <AmiBlitz3.ab2@3904>   BSR.w findmacro                                          ;macro
0002FB0A <AmiBlitz3.ab2@3956>   CMP.b #$2b,(a5)
0002FB0E <AmiBlitz3.ab2@3957>   BNE 'lb2
0002FB12 <AmiBlitz3.ab2@3958>   BSR.w get1bytemain                                       ;gettokenmain
0002FB1A <AmiBlitz3.ab2@3959>   MOVE.b #1,notypecheck
0002FB20 <AmiBlitz3.ab2@3962>   TST.b debugmode
0002FB24 <AmiBlitz3.ab2@3963>    BEQ.s 'l10
0002FB2A <AmiBlitz3.ab2@3964>   TST.b exdebug
0002FB2E <AmiBlitz3.ab2@3965>   BEQ 'l10a
0002FB30 <AmiBlitz3.ab2@3966>   MOVE.w (a5),d0
0002FB34 <AmiBlitz3.ab2@3967>   CMP.w #$8025,d0
0002FB38 <AmiBlitz3.ab2@3968>    BEQ 'l10
0002FB3C <AmiBlitz3.ab2@3971>   BSR.w debugstuffa                                         ;insert runtimecode debugcode
0002FB40 <AmiBlitz3.ab2@3976>   BSR.w get1bytemain                                       ;gettokenmain
0002FB44 <AmiBlitz3.ab2@3977>   BEQ.w undodebug                                          ;JL_0_462C
0002FB4E <AmiBlitz3.ab2@3983>   MOVE.l #forthstack,forthsp
0002FB58 <AmiBlitz3.ab2@3984>   MOVE.l #precstack,precsp
0002FB5E <AmiBlitz3.ab2@3985>   CLR.w regnum
0002FB64 <AmiBlitz3.ab2@3986>   CLR.w nonew
0002FB6A <AmiBlitz3.ab2@3987>   CLR.w sbasegot
0002FB74 <AmiBlitz3.ab2@3988>   MOVE.w varcodelen,oldvcodelen
0002FB7A <AmiBlitz3.ab2@3990>   CLR.w varcodelen
0002FB82 <AmiBlitz3.ab2@3991>   MOVE.w #$FFFF,lasta6
0002FB86 <AmiBlitz3.ab2@3993>   BSR.w smode
0002FB88 <AmiBlitz3.ab2@3994>   TST.w D0
0002FB8C <AmiBlitz3.ab2@3995>   BMI.w get_tokencode
0002FB90 <AmiBlitz3.ab2@3996>   CMP.w #$2E,D0
0002FB94 <AmiBlitz3.ab2@3997>    BEQ.w JL_0_4644                                         ;shortlist
0002FB98 <AmiBlitz3.ab2@3998>   CMP.w #"#",D0
0002FB9C <AmiBlitz3.ab2@3999>    BEQ.w JL_0_4718                                         ;constant found
0002FBA0 <AmiBlitz3.ab2@4000>   CMP.w #$27,D0
0002FBA4 <AmiBlitz3.ab2@4001>    BEQ.w JL_0_4638                                         ;local label
0002FBAA <AmiBlitz3.ab2@4002>   MOVE.l A5,letstart
0002FBB0 <AmiBlitz3.ab2@4003>   JSR getparameter
0002FBB4 <AmiBlitz3.ab2@4004>   BSR.w reget
0002FBB8 <AmiBlitz3.ab2@4005>    BEQ.w JL_0_4658                                         ;label found
0002FBBC <AmiBlitz3.ab2@4006>   CMP.w #$7B,D0
0002FBC0 <AmiBlitz3.ab2@4007>    BEQ.w JL_0_475C
0002FBC2 <AmiBlitz3.ab2@4008>   TST.w d0
0002FBC6 <AmiBlitz3.ab2@4009>    BPL 'll1
0002FBCC <AmiBlitz3.ab2@4010>   TST.b newsyntax
0002FBD0 <AmiBlitz3.ab2@4011>    BEQ 'll1
0002FBD6 <AmiBlitz3.ab2@4012>   LEA allowtab,a0
0002FBD8 <AmiBlitz3.ab2@4013>   MOVEQ #0,d1
0002FBDA <AmiBlitz3.ab2@4014>   MOVE.b d0,d1
0002FBDE <AmiBlitz3.ab2@4015>   TST.b 0(a0,d1.w)
0002FBE2 <AmiBlitz3.ab2@4016>    BNE 'll1
0002FBE4 <AmiBlitz3.ab2@4017>   SUBQ.l #2,a5
0002FBEC <AmiBlitz3.ab2@4018>   MOVE.w #":",lastchar                                     ;no doublepoint
0002FBF0 <AmiBlitz3.ab2@4019> BRA JL_0_4658
0002FBF8 <AmiBlitz3.ab2@4022>   CMP.l #"equ ",-1(a5)
0002FBFC <AmiBlitz3.ab2@4023>    BEQ 'll4
0002FC04 <AmiBlitz3.ab2@4024>   CMP.l #"EQU ",-1(a5)
0002FC08 <AmiBlitz3.ab2@4025>    BNE 'll2
0002FC0A <AmiBlitz3.ab2@4028>   ADDQ.l #2,a5
0002FC0E <AmiBlitz3.ab2@4029>   BSR.w findlabel2
0002FC12 <AmiBlitz3.ab2@4030>   BEQ.w 'lf1
0002FC16 <AmiBlitz3.ab2@4031>   BSR.w addlabelhash
0002FC1E <AmiBlitz3.ab2@4032>   MOVE.l #$1,$4(A2)
0002FC26 <AmiBlitz3.ab2@4035>   CMPI.l #$1,$4(A2)
0002FC2A <AmiBlitz3.ab2@4036>    BNE.w illconerr
0002FC2E <AmiBlitz3.ab2@4037>   BSR get1bytemain
0002FC30 <AmiBlitz3.ab2@4038>   MOVE.l A2,-(A7)
0002FC32 <AmiBlitz3.ab2@4049>   SUBQ.l #1,a5
0002FC34 <AmiBlitz3.ab2@4052>   SUBQ.l #1,a5
0002FC3A <AmiBlitz3.ab2@4053>   JSR AJL_0_BF6E
0002FC3C <AmiBlitz3.ab2@4054>   MOVEA.l (A7)+,A2
0002FC40 <AmiBlitz3.ab2@4055>   MOVE.l D3,$8(A2)
0002FC42 <AmiBlitz3.ab2@4056>   RTS
0002FC46 <AmiBlitz3.ab2@4057>   BSR get1bytemain
0002FC4E <AmiBlitz3.ab2@4060>   CMP.l #"SET ",-1(a5)
0002FC52 <AmiBlitz3.ab2@4061>   BNE 'll3
0002FC56 <AmiBlitz3.ab2@4062> BRA 'll4
0002FC5C <AmiBlitz3.ab2@4065> JMP AJL_0_DEA6
0002FC60 <AmiBlitz3.ab2@4068>   CMP.w #-$7FDE,D0
0002FC64 <AmiBlitz3.ab2@4069>   BEQ.w get_tokencode
0002FC68 <AmiBlitz3.ab2@4070> BRA.w undodebug
0002FC6C <AmiBlitz3.ab2@4073>   BSR.w undodebug
0002FC70 <AmiBlitz3.ab2@4074>   BSR.w createlab
0002FC74 <AmiBlitz3.ab2@4075> BRA.w JL_0_466E
0002FC78 <AmiBlitz3.ab2@4078>   BSR.w get1bytemain
0002FC7C <AmiBlitz3.ab2@4079>    BEQ.w JL_0_462C
0002FC80 <AmiBlitz3.ab2@4080>   CMP.w #"'",D0
0002FC84 <AmiBlitz3.ab2@4081>    BEQ.w JL_0_4638
0002FC88 <AmiBlitz3.ab2@4082>    BSR.w makename2
0002FC8A <AmiBlitz3.ab2@4083>    TST.w d0
0002FC8E <AmiBlitz3.ab2@4084>    BPL 'll1
0002FC90 <AmiBlitz3.ab2@4085>    SUBQ.l #2,a5
0002FC98 <AmiBlitz3.ab2@4086>    MOVE.w #":",lastchar
0002FC9C <AmiBlitz3.ab2@4087> BRA JL_0_4658                                              ;????
0002FCA0 <AmiBlitz3.ab2@4091>   BSR.w undodebug
0002FCA6 <AmiBlitz3.ab2@4092>   LEA ptr_parameterstore,A0
0002FCAC <AmiBlitz3.ab2@4093>   LEA lastgloballabel,A1
0002FCAE <AmiBlitz3.ab2@4096>   MOVE.b (A0)+,(A1)+
0002FCB2 <AmiBlitz3.ab2@4097>    BNE.w JL_0_4668
0002FCB6 <AmiBlitz3.ab2@4100>   BSR.w findlabel2
0002FCBA <AmiBlitz3.ab2@4101>    BEQ.w JL_0_4698
0002FCBE <AmiBlitz3.ab2@4102>    BSR.w addlabelhash
0002FCC2 <AmiBlitz3.ab2@4105>   CLR.l $4(A2)
0002FCCA <AmiBlitz3.ab2@4106>   MOVE.l destpointer,$8(A2)
0002FCD2 <AmiBlitz3.ab2@4109>   MOVE.w procnum,$10(A2)
0002FCD4 <AmiBlitz3.ab2@4110> RTS
0002FCD8 <AmiBlitz3.ab2@4114>   MOVE.l $4(A2),D0
0002FCDC <AmiBlitz3.ab2@4115>   BTST #$0,D0
0002FCE0 <AmiBlitz3.ab2@4116>    BNE.w illlaberr
0002FCE6 <AmiBlitz3.ab2@4117>   TST.w pass
0002FCEA <AmiBlitz3.ab2@4119>   MOVE.l $8(A2),D0
0002FCEE <AmiBlitz3.ab2@4120>    BNE.w duplaberr
0002FCF6 <AmiBlitz3.ab2@4121>   MOVE.w procnum,$10(A2)
0002FCFA <AmiBlitz3.ab2@4122>   MOVEA.l $4(A2),A3
0002FD00 <AmiBlitz3.ab2@4123>   MOVEA.l _execbase,A6
0002FD04 <AmiBlitz3.ab2@4126>   CMPA.w #$0,A3
0002FD08 <AmiBlitz3.ab2@4127>    BEQ.w JL_0_467A
0002FD0C <AmiBlitz3.ab2@4128>     MOVE.l $4(A2),D1
0002FD10 <AmiBlitz3.ab2@4129>     BTST #$0,D1
0002FD14 <AmiBlitz3.ab2@4130>     BNE.w illlaberr
0002FD18 <AmiBlitz3.ab2@4131>   MOVE.w $8(A3),D1
0002FD1C <AmiBlitz3.ab2@4132>   CMP.w $10(A2),D1
0002FD20 <AmiBlitz3.ab2@4133>    BEQ.w JL_0_46DC
0002FD26 <AmiBlitz3.ab2@4134>    TST.b newsyntax
0002FD2A <AmiBlitz3.ab2@4135>    BEQ 'l1
0002FD2E <AmiBlitz3.ab2@4136> BRA.w JL_0_46DC                                            ;label context out of range fix
0002FD36 <AmiBlitz3.ab2@4141>   MOVE.w $A(A3),linenumat+2                                ;move 10(a3),linenumat org source
0002FD3A <AmiBlitz3.ab2@4142> BRA.w referr
0002FD40 <AmiBlitz3.ab2@4145>   MOVE.w dontwrite,D1
0002FD44 <AmiBlitz3.ab2@4146>    BNE.w JL_0_4706
0002FD48 <AmiBlitz3.ab2@4147>   MOVEA.l $4(A3),A1
0002FD4E <AmiBlitz3.ab2@4148>   BTST #$0,$7(A3)
0002FD52 <AmiBlitz3.ab2@4149>    BEQ.w JL_0_4700
0002FD54 <AmiBlitz3.ab2@4150>   SUBQ.w #1,A1
0002FD5A <AmiBlitz3.ab2@4151>   MOVE.l data2,(A1)
0002FD5E <AmiBlitz3.ab2@4152> BRA.w JL_0_4706
0002FD64 <AmiBlitz3.ab2@4155>   MOVE.l destpointer,(A1)
0002FD66 <AmiBlitz3.ab2@4158>   MOVEA.l A3,A1
0002FD68 <AmiBlitz3.ab2@4159>   MOVEA.l (A3),A3
0002FD6C <AmiBlitz3.ab2@4160>   MOVE.l A3,$4(A2)
0002FD6E <AmiBlitz3.ab2@4161>   MOVEQ.l #$0C+2,D0
0002FD74 <AmiBlitz3.ab2@4162>   MOVE.l mempool,a0
0002FD7A <AmiBlitz3.ab2@4163>   MOVEA.l _execbase,A6
0002FD7E <AmiBlitz3.ab2@4164>   JSR _FreePooled(A6)
0002FD82 <AmiBlitz3.ab2@4165> BRA.w JL_0_46BC
0002FD8C <AmiBlitz3.ab2@4170>    MOVE.l #forthstack,forthsp
0002FD96 <AmiBlitz3.ab2@4171>   MOVE.l #precstack,precsp
0002FD9A <AmiBlitz3.ab2@4172>    BSR.w getparameter2
0002FD9E <AmiBlitz3.ab2@4175>   BSR.w findlabel2
0002FDA2 <AmiBlitz3.ab2@4176>    BEQ.w JL_0_4738
0002FDA6 <AmiBlitz3.ab2@4177>    BSR.w addlabelhash
0002FDAE <AmiBlitz3.ab2@4178>   MOVE.l #$1,$4(A2)
0002FDB2 <AmiBlitz3.ab2@4179> BRA.w JL_0_4744
0002FDBA <AmiBlitz3.ab2@4182>   CMPI.l #$1,$4(A2)
0002FDBE <AmiBlitz3.ab2@4183>    BNE.w illconerr
0002FDC2 <AmiBlitz3.ab2@4192>   CMP.w #$3D,D0
0002FDC6 <AmiBlitz3.ab2@4193>   BEQ.w JL_0_474E
0002FDC8 <AmiBlitz3.ab2@4194> RTS
0002FDCA <AmiBlitz3.ab2@4198>   MOVE.l A2,-(A7)
0002FDD0 <AmiBlitz3.ab2@4199>   JSR AJL_0_BF6E
0002FDD2 <AmiBlitz3.ab2@4200>   MOVEA.l (A7)+,A2
0002FDD6 <AmiBlitz3.ab2@4201>   MOVE.l D3,$8(A2)                                         ;store constant
0002FDDE <AmiBlitz3.ab2@4202>   CMP.w #$0a,lastchar
0002FDE2 <AmiBlitz3.ab2@4203>   BNE 'l1
0002FDEA <AmiBlitz3.ab2@4204>   MOVE.w #":",lastchar                                     ;hack to read wizard include files
0002FDEC <AmiBlitz3.ab2@4207> RTS
0002FDF0 <AmiBlitz3.ab2@4210>   BSR.w findproc                                           ;write statement call
0002FDF4 <AmiBlitz3.ab2@4211>   BEQ _state
0002FDFA <AmiBlitz3.ab2@4212>   TST.l unusedfunc
0002FDFE <AmiBlitz3.ab2@4213>   BEQ noprocerr
0002FE04 <AmiBlitz3.ab2@4215>   JSR gotoendsource
0002FE08 <AmiBlitz3.ab2@4218>   TST.b $5(A2)
0002FE0E <AmiBlitz3.ab2@4220>   MOVE.l a2,currentfunccall
0002FE16 <AmiBlitz3.ab2@4221>   MOVE.b #1,funccall
0002FE1C <AmiBlitz3.ab2@4222>   MOVE.b #1,isfunc(a2)
0002FE20 <AmiBlitz3.ab2@4223>   MOVE.l $E(A2),-(A7)
0002FE22 <AmiBlitz3.ab2@4224>   MOVEQ.l #$00,D0
0002FE26 <AmiBlitz3.ab2@4225>   MOVE.b $4(A2),D0
0002FE2C <AmiBlitz3.ab2@4226>   MOVE.l d0,parnumtemp
0002FE30 <AmiBlitz3.ab2@4227>   BEQ.w JL_0_4786
0002FE34 <AmiBlitz3.ab2@4228>   TST.b $20(a2)                                            ;increase if morepar
0002FE38 <AmiBlitz3.ab2@4229>   BNE 'no0par
0002FE3A <AmiBlitz3.ab2@4230>   MOVE.l a5,a4
0002FE3E <AmiBlitz3.ab2@4233>   CMP.b #$20,(a4)+
0002FE42 <AmiBlitz3.ab2@4234>   BEQ 'l1
0002FE48 <AmiBlitz3.ab2@4235>   CMP.b #"}",-1(a4)
0002FE4C <AmiBlitz3.ab2@4236>   BNE  'no0par                                             ;statementcall pars
0002FE4E <AmiBlitz3.ab2@4237>   MOVEQ #0,d0
0002FE52 <AmiBlitz3.ab2@4240>   LEA $16(A2),A1
0002FE54 <AmiBlitz3.ab2@4243>   MOVE.l d1,-(a7)
0002FE56 <AmiBlitz3.ab2@4244>   MOVE.b (a1),d2
0002FE58 <AmiBlitz3.ab2@4245>   MOVE.l d0,d1
0002FE5C <AmiBlitz3.ab2@4246>   CMP.w #4,d2
0002FE60 <AmiBlitz3.ab2@4247>   BNE 'l1b
0002FE66 <AmiBlitz3.ab2@4248>   ADD.l #$203c,d1
0002FE6C <AmiBlitz3.ab2@4250>   JSR writeword
0002FE72 <AmiBlitz3.ab2@4251>   MOVE.l #$ffff0000,d1
0002FE78 <AmiBlitz3.ab2@4253>   JSR writelong
0002FE7C <AmiBlitz3.ab2@4254> BRA 'l2b
0002FE82 <AmiBlitz3.ab2@4257>   TST.b fpu
0002FE86 <AmiBlitz3.ab2@4258>   BNE 'l1c
0002FE8A <AmiBlitz3.ab2@4259>   CMP.w #5,d2
0002FE8E <AmiBlitz3.ab2@4260>   BNE 'l1c
0002FE94 <AmiBlitz3.ab2@4261>   ADD.l #$203c,d1
0002FE9A <AmiBlitz3.ab2@4263>   JSR writeword
0002FEA0 <AmiBlitz3.ab2@4264>   MOVE.l #$800000c1,d1
0002FEA6 <AmiBlitz3.ab2@4266>   JSR writelong
0002FEAA <AmiBlitz3.ab2@4267> BRA 'l2b
0002FEB0 <AmiBlitz3.ab2@4270>   ADD.l #$70ff,d1
0002FEB6 <AmiBlitz3.ab2@4272>   JSR writeword
0002FEBC <AmiBlitz3.ab2@4273>   MOVE.l #$f23c5000,d1
0002FEBE <AmiBlitz3.ab2@4274>   MOVE.l d0,d2
0002FEC0 <AmiBlitz3.ab2@4275>   ASR.l #2,d2
0002FEC2 <AmiBlitz3.ab2@4276>   ADD.l d2,d1
0002FEC8 <AmiBlitz3.ab2@4278>   JSR writelong
0002FECC <AmiBlitz3.ab2@4279>   MOVE.w #$ffff,d1
0002FED2 <AmiBlitz3.ab2@4281>   JSR writeword
0002FED4 <AmiBlitz3.ab2@4284>   MOVE.l (a7)+,d1
0002FED6 <AmiBlitz3.ab2@4285>   ADDQ.l #1,a1
0002FEDC <AmiBlitz3.ab2@4286>   ADD.l #$0200,d0
0002FEE2 <AmiBlitz3.ab2@4287>   CMP.l #$0e00,d0
0002FEE6 <AmiBlitz3.ab2@4288>    BEQ syntaxerr
0002FEE8 <AmiBlitz3.ab2@4289>   TST.b (a1)
0002FEEC <AmiBlitz3.ab2@4290>    BNE 'again
0002FEF0 <AmiBlitz3.ab2@4291> BRA JL_0_4786
0002FEFA <AmiBlitz3.ab2@4294>   MOVE.w a2offset,a2offset2
0002FEFE <AmiBlitz3.ab2@4295>   LEA $16(A2),A2
0002FF04 <AmiBlitz3.ab2@4296>   MOVE.b funcparloop,-(a7)
0002FF0C <AmiBlitz3.ab2@4297>   MOVE.b #1,funcparloop
0002FF10 <AmiBlitz3.ab2@4298>   BSR.w fetchpees2
0002FF16 <AmiBlitz3.ab2@4299>   MOVE.b (a7)+,funcparloop
0002FF1A <AmiBlitz3.ab2@4300> BRA.w JL_0_478A
0002FF1E <AmiBlitz3.ab2@4303>   BSR.w get1bytemain
0002FF22 <AmiBlitz3.ab2@4306>   CMP.w #$7D,D0
0002FF26 <AmiBlitz3.ab2@4307>    BNE.w morepar_                                          ;syntax error morepar
0002FF2C <AmiBlitz3.ab2@4308>    JSR chkstak
0002FF2E <AmiBlitz3.ab2@4309>   MOVE.l (A7)+,D1
0002FF34 <AmiBlitz3.ab2@4325>    JSR JL_0_AFCA
0002FF3A <AmiBlitz3.ab2@4347>   CLR.b funccall
0002FF3E <AmiBlitz3.ab2@4348> BRA.w get1bytemain
0002FF42 <AmiBlitz3.ab2@4352>   CMP.w #$c09f,d0                                          ;hack to use getregd0 instead of getd0
0002FF46 <AmiBlitz3.ab2@4353>   BNE 'l2
0002FF4A <AmiBlitz3.ab2@4354>    MOVE.w #$dd05,d0
0002FF4E <AmiBlitz3.ab2@4357>   CMP.w #$c0a0,d0                                          ;hack to use getregd0 instead of getd0
0002FF52 <AmiBlitz3.ab2@4358>   BNE 'l3
0002FF56 <AmiBlitz3.ab2@4359>    MOVE.w #$dd06,d0
0002FF5A <AmiBlitz3.ab2@4362>   CMP.w #-$7FC4,D0
0002FF5E <AmiBlitz3.ab2@4363>   BCS.w JL_0_47C4
0002FF62 <AmiBlitz3.ab2@4364>     CMP.w #-$7F4D,D0
0002FF66 <AmiBlitz3.ab2@4365>     BCC.w JL_0_47C4
0002FF6E <AmiBlitz3.ab2@4366>       BTST #$7,assemblercheck                              ;inline Assembler checking
0002FF72 <AmiBlitz3.ab2@4367>       BNE.b JL_0_47C0
0002FF78 <AmiBlitz3.ab2@4368>         TST.b debugmode
0002FF7C <AmiBlitz3.ab2@4369>         BEQ.b 'l10
0002FF86 <AmiBlitz3.ab2@4374>           MOVE.w d_nomemleft,dontwrite
0002FF90 <AmiBlitz3.ab2@4375>           MOVE.l d_bigpc,bigpc
0002FF9A <AmiBlitz3.ab2@4376>           MOVE.l d_pc,destpointer
0002FFA4 <AmiBlitz3.ab2@4377>           MOVE.l cont_pc2,cont_pc
0002FFA8 <AmiBlitz3.ab2@4383> BRA.w JL_0_612C
0002FFAC <AmiBlitz3.ab2@4386>   BCLR #$F,D0
0002FFAE <AmiBlitz3.ab2@4387>   MOVE.w D0,D1
0002FFB2 <AmiBlitz3.ab2@4388>   ANDI.w #$7F00,D1
0002FFB6 <AmiBlitz3.ab2@4389>   BNE.w JL_0_4856
0002FFBA <AmiBlitz3.ab2@4390>     CMP.w #$B3,D0                                          ;intern Instructions
0002FFBE <AmiBlitz3.ab2@4391>     BCS.w JL_0_47F2
0002FFC2 <AmiBlitz3.ab2@4392>       SUBI.w #$77,D0
0002FFC6 <AmiBlitz3.ab2@4393>       CMP.w #$4B,D0
0002FFCA <AmiBlitz3.ab2@4394>       BEQ.w JL_0_4830
0002FFCE <AmiBlitz3.ab2@4395>         CMP.w #$46,D0
0002FFD2 <AmiBlitz3.ab2@4396>         BEQ.w JL_0_4830
0002FFD6 <AmiBlitz3.ab2@4397> BRA.w JL_0_4834                                            ; change tokennum
0002FFDA <AmiBlitz3.ab2@4400>     CMP.w #$38,D0
0002FFDE <AmiBlitz3.ab2@4401>      BEQ.w JL_0_4830
0002FFE2 <AmiBlitz3.ab2@4402>     CMP.w #$39,D0
0002FFE6 <AmiBlitz3.ab2@4403>      BEQ.w JL_0_4830
0002FFEA <AmiBlitz3.ab2@4404>     CMP.w #$D,D0
0002FFEE <AmiBlitz3.ab2@4405>      BEQ.w JL_0_4830
0002FFF2 <AmiBlitz3.ab2@4406>     CMP.w #$12,D0
0002FFF6 <AmiBlitz3.ab2@4407>      BEQ.w JL_0_4830
0002FFFA <AmiBlitz3.ab2@4408>     CMP.w #$13,D0
0002FFFE <AmiBlitz3.ab2@4409>      BEQ.w JL_0_4830
00030002 <AmiBlitz3.ab2@4410>     CMP.w #$1A,D0
00030006 <AmiBlitz3.ab2@4411>      BEQ.w JL_0_4830
0003000A <AmiBlitz3.ab2@4412>     CMP.w #$2A,D0
0003000E <AmiBlitz3.ab2@4413>      BHI.w JL_0_4834
00030012 <AmiBlitz3.ab2@4414>     CMP.w #$23,D0
00030016 <AmiBlitz3.ab2@4415>      BCS.b JL_0_4834
0003001A <AmiBlitz3.ab2@4418>   BSR.w undodebug
0003001C <AmiBlitz3.ab2@4421>   SUBQ.w #1,D0
0003001E <AmiBlitz3.ab2@4422>   LSL.w #2,D0
00030024 <AmiBlitz3.ab2@4429>   LEA instructionbase,A0
00030028 <AmiBlitz3.ab2@4430>   MOVEA.l $0(A0,D0.W),A0
0003002A <AmiBlitz3.ab2@4431>   MOVE.l A0,-(A7)
0003002E <AmiBlitz3.ab2@4432> BRA.w get1bytemain
00030030 <AmiBlitz3.ab2@4438>   MOVE.w D0,D1
00030034 <AmiBlitz3.ab2@4439>    BSR.w searchinstr
0003003A <AmiBlitz3.ab2@4440>    TST.b newmode
0003003E <AmiBlitz3.ab2@4441>    BNE compile_term
00030044 <AmiBlitz3.ab2@4442>   BTST #$2,$1(A3)                                          ;a3 = pointer to instr ;toke stuff in a3
00030048 <AmiBlitz3.ab2@4443>    BNE.w stamigalib
0003004E <AmiBlitz3.ab2@4444>   BTST #$0,$1(A3)
00030052 <AmiBlitz3.ab2@4445>    BEQ.w needreturn_                                       ;syntax err need return   ;check it's a statement
00030056 <AmiBlitz3.ab2@4446>    BSR.w JL_0_49EA                                         ;does it need a size specifier?
0003005A <AmiBlitz3.ab2@4447>    BSR.w JL_0_66F6
00030060 <AmiBlitz3.ab2@4453>   MOVE.w numreps,-(A7)
00030066 <AmiBlitz3.ab2@4454>   MOVE.w userp,-(A7)
0003006C <AmiBlitz3.ab2@4455>   MOVE.w a2offset,-(A7)
0003006E <AmiBlitz3.ab2@4456>   MOVE.l A2,-(A7)                                          ;recurs.
00030078 <AmiBlitz3.ab2@4457>   MOVE.w convsize,userp
0003007C <AmiBlitz3.ab2@4458>   LEA $6(A3),A1
0003007E <AmiBlitz3.ab2@4462>    MOVE.w (A1),D2
00030082 <AmiBlitz3.ab2@4463>    BMI.w SERR                                              ;statement syntax error
00030086 <AmiBlitz3.ab2@4464>   ANDI.w #$FF,D2
00030088 <AmiBlitz3.ab2@4465>   CMP.w D2,D1
0003008C <AmiBlitz3.ab2@4466>    BEQ.w JL_0_48E0
00030090 <AmiBlitz3.ab2@4467>    BCS.w JL_0_48CC
00030092 <AmiBlitz3.ab2@4468>   MOVE.b (A1),D3
00030096 <AmiBlitz3.ab2@4469>   ANDI.w #$7,D3
0003009A <AmiBlitz3.ab2@4470>    BEQ.w JL_0_48CC
0003009C <AmiBlitz3.ab2@4471>   MOVE.w D2,D4
0003009E <AmiBlitz3.ab2@4472>   SUB.w D3,D4
000300A0 <AmiBlitz3.ab2@4473>   MOVEQ.l #$00,D5
000300A2 <AmiBlitz3.ab2@4474>   MOVE.w D1,D5
000300A4 <AmiBlitz3.ab2@4475>   SUB.w D4,D5
000300A6 <AmiBlitz3.ab2@4476>   DIVU D3,D5
000300A8 <AmiBlitz3.ab2@4477>   SWAP D5
000300AA <AmiBlitz3.ab2@4478>   TST.w D5
000300AE <AmiBlitz3.ab2@4479>    BEQ.w JL_0_48E0
000300B0 <AmiBlitz3.ab2@4482>   ADDQ.w #2,A1
000300B2 <AmiBlitz3.ab2@4483>   ADDA.w D2,A1
000300B6 <AmiBlitz3.ab2@4484>    BSR.w aligna1
000300BA <AmiBlitz3.ab2@4485>    BSR.w skiplibreg
000300BE <AmiBlitz3.ab2@4486>   LEA $C(A1),A1
000300C2 <AmiBlitz3.ab2@4487> BRA.w JL_0_489A
000300C4 <AmiBlitz3.ab2@4490>   MOVE.w (a3),d2
000300C8 <AmiBlitz3.ab2@4491>   BTST #1,d2
000300CC <AmiBlitz3.ab2@4492>   BEQ statement_
000300D0 <AmiBlitz3.ab2@4493>   CMP.w #1,d1
000300D4 <AmiBlitz3.ab2@4494>   BEQ statement_
000300D8 <AmiBlitz3.ab2@4497>   CMP.b #$20,(a5)+
000300DC <AmiBlitz3.ab2@4498>   BEQ 'l2
000300E2 <AmiBlitz3.ab2@4499>   CMP.b #"(",-2(a5)
000300E6 <AmiBlitz3.ab2@4500>   BNE 'l1
000300EA <AmiBlitz3.ab2@4501> BRA parameter_
000300EE <AmiBlitz3.ab2@4504> BRA inbrackets_
000300F0 <AmiBlitz3.ab2@4507>   MOVE.b (A1),D2
000300F2 <AmiBlitz3.ab2@4508>   LSL.w #8,D2
000300F4 <AmiBlitz3.ab2@4509>   OR.w D2,D1
000300F6 <AmiBlitz3.ab2@4510>   MOVE.l A1,-(A7)
000300FC <AmiBlitz3.ab2@4511>   CLR.w a2offset
000300FE <AmiBlitz3.ab2@4512>   TST.w D1
00030102 <AmiBlitz3.ab2@4513>    BEQ.w JL_0_4900
00030106 <AmiBlitz3.ab2@4514>   LEA $2(A1),A2
0003010A <AmiBlitz3.ab2@4515>    BSR.w fetchlibps
0003010E <AmiBlitz3.ab2@4516> BRA.w JL_0_4904
00030112 <AmiBlitz3.ab2@4519>   BSR.w get1bytemain
00030114 <AmiBlitz3.ab2@4522>   MOVEA.l (A7)+,A1
00030116 <AmiBlitz3.ab2@4523>   MOVEA.l (A7)+,A2
0003011C <AmiBlitz3.ab2@4524>   MOVE.w a2offset,D1
00030120 <AmiBlitz3.ab2@4525>    BEQ.w JL_0_493A
00030126 <AmiBlitz3.ab2@4526>   MOVE.w D1,preplibst+2
0003012C <AmiBlitz3.ab2@4527>   MOVE.l preplibst,D1
00030132 <AmiBlitz3.ab2@4528>    JSR writelong                                           ;write array offset stack correct
0003013C <AmiBlitz3.ab2@4529>   MOVE.w numreps,movenumrep+2
00030140 <AmiBlitz3.ab2@4530>    BEQ.w JL_0_493A
00030146 <AmiBlitz3.ab2@4531>   MOVE.l movenumrep,D1
0003014C <AmiBlitz3.ab2@4532>    JSR writelong
00030152 <AmiBlitz3.ab2@4536>   JSR userjsr
00030158 <AmiBlitz3.ab2@4539>   MOVE.w a2offset,D1
0003015C <AmiBlitz3.ab2@4540>    BEQ.w JL_0_4974
00030160 <AmiBlitz3.ab2@4541>   CMP.w #$8,D1
00030164 <AmiBlitz3.ab2@4542>    BHI.w JL_0_4964
00030168 <AmiBlitz3.ab2@4543>   ANDI.w #$7,D1
0003016A <AmiBlitz3.ab2@4544>   LSL.w #8,D1
0003016C <AmiBlitz3.ab2@4545>   LSL.w #1,D1
00030170 <AmiBlitz3.ab2@4546>   ORI.w #$504F,D1
00030176 <AmiBlitz3.ab2@4548>   JSR writeword
0003017A <AmiBlitz3.ab2@4549> BRA.w JL_0_4974
00030180 <AmiBlitz3.ab2@4552>   MOVE.w D1,fixlibst+2
00030186 <AmiBlitz3.ab2@4553>   MOVE.l fixlibst,D1
0003018C <AmiBlitz3.ab2@4554>   JSR writelong
00030192 <AmiBlitz3.ab2@4557>   MOVE.w (A7)+,a2offset
00030198 <AmiBlitz3.ab2@4558>   MOVE.w (A7)+,userp
0003019E <AmiBlitz3.ab2@4559>   MOVE.w (A7)+,numreps
000301A2 <AmiBlitz3.ab2@4560> BRA.w reget
000301A6 <AmiBlitz3.ab2@4564>   MOVEM.l A2-A3,-(A7)
000301AC <AmiBlitz3.ab2@4565>   CLR.b doublepeek
000301B2 <AmiBlitz3.ab2@4566>   MOVE.l A5,lastsourcepos
000301B6 <AmiBlitz3.ab2@4567>    BSR.w getchar
000301BA <AmiBlitz3.ab2@4568>   CMP.w #$2E,D0
000301BE <AmiBlitz3.ab2@4569>    BEQ.w JL_0_49B4
000301C4 <AmiBlitz3.ab2@4570>   MOVEA.l defaulttype,A2
000301C8 <AmiBlitz3.ab2@4571>   CMP.w #$24,D0
000301CC <AmiBlitz3.ab2@4572>    BNE.w JL_0_49CA
000301CE <AmiBlitz3.ab2@4573>   MOVEQ.l #$07,D1
000301D2 <AmiBlitz3.ab2@4574> BRA.w JL_0_49DE
000301D6 <AmiBlitz3.ab2@4577>   BSR.w getparameter2
000301DA <AmiBlitz3.ab2@4578>   BEQ.w syntaxerr
000301E0 <AmiBlitz3.ab2@4579>   LEA newtypebase,A2
000301E4 <AmiBlitz3.ab2@4580>   BSR.w findtype
000301E8 <AmiBlitz3.ab2@4581>   BNE.w notypeerr
000301F2 <AmiBlitz3.ab2@4585>   MOVE.w oldqflag,instringon
000301F8 <AmiBlitz3.ab2@4586>   MOVEA.l lastsourcepos,A5
00030200 <AmiBlitz3.ab2@4587>   CMPI.l #$100,$4(A2)
00030204 <AmiBlitz3.ab2@4588>    BCC.w illtypeerr
00030208 <AmiBlitz3.ab2@4589>   MOVE.w $6(A2),D1
0003020E <AmiBlitz3.ab2@4590>   CMP.w #8,8(a2)
00030212 <AmiBlitz3.ab2@4591>   BNE 'l1
0003021A <AmiBlitz3.ab2@4592>   MOVE.b #1,doublepeek
00030220 <AmiBlitz3.ab2@4596>   MOVE.w D1,convsize
00030224 <AmiBlitz3.ab2@4597>   MOVEM.l (A7)+,A2-A3
00030226 <AmiBlitz3.ab2@4598> RTS
0003022C <AmiBlitz3.ab2@4603>   BTST #$3,$1(A3)
00030230 <AmiBlitz3.ab2@4604>   BEQ.w JL_0_4A06
00030234 <AmiBlitz3.ab2@4605>   BSR.w AJL_0_498A                                         ;read peek/poke size
00030238 <AmiBlitz3.ab2@4607>   ORI.w #$7000,D1
0003023E <AmiBlitz3.ab2@4608>   JSR writeword
00030244 <AmiBlitz3.ab2@4609>   ADDQ.w #1,regnum
00030246 <AmiBlitz3.ab2@4612> RTS
00030248 <AmiBlitz3.ab2@4618>             Dc.b $10,$12                                   ;MOVE.B  (A2),D0
0003024A <AmiBlitz3.ab2@4619>             Dc.b $14,$91                                   ;MOVE.B  (A1),(A2)
0003024C <AmiBlitz3.ab2@4620>             Dc.b $12,$80                                   ;MOVE.B  D0,(A1)
0003024E <AmiBlitz3.ab2@4624> swapw:      Dc.b $30,$12                                   ;MOVE.W  (A2),D0
00030250 <AmiBlitz3.ab2@4625>             Dc.b $34,$91                                   ;MOVE.W  (A1),(A2)
00030252 <AmiBlitz3.ab2@4626>             Dc.b $32,$80                                   ;MOVE.W  D0,(A1)
00030254 <AmiBlitz3.ab2@4630> swapl:      Dc.b $20,$12                                   ;MOVE.L  (A2),D0
00030256 <AmiBlitz3.ab2@4631>             Dc.b $24,$91                                   ;MOVE.L  (A1),(A2)
00030258 <AmiBlitz3.ab2@4632>             Dc.b $22,$80                                   ;MOVE.L  D0,(A1)
0003025A <AmiBlitz3.ab2@4636> pulla1:     Dc.b $22,$5F                                   ;MOVEA.L (A7)+,A1
0003025C <AmiBlitz3.ab2@4639> srctype:    Ds.w 1
00030260 <AmiBlitz3.ab2@4644>   BSR.w excget
00030264 <AmiBlitz3.ab2@4645>   CMP.w #$2C,D0
00030268 <AmiBlitz3.ab2@4646>    BNE.w syntaxerr
0003026E <AmiBlitz3.ab2@4647>   MOVE.b D2,srctype
00030274 <AmiBlitz3.ab2@4648>   MOVE.w pusha2,D1
0003027A <AmiBlitz3.ab2@4649>   JSR writeword
0003027E <AmiBlitz3.ab2@4650>   BSR.w get1bytemain
00030282 <AmiBlitz3.ab2@4651>   BSR.w excget
00030288 <AmiBlitz3.ab2@4652>   CMP.b srctype,D2
0003028C <AmiBlitz3.ab2@4653>    BNE.w excerr2
00030292 <AmiBlitz3.ab2@4654>   MOVE.w pulla1,D1
00030298 <AmiBlitz3.ab2@4655>    JSR writeword
0003029C <AmiBlitz3.ab2@4656>   CMP.b #$2,D2
000302A0 <AmiBlitz3.ab2@4657>    BCS.w JL_0_4B2A
000302A4 <AmiBlitz3.ab2@4658>    BEQ.w JL_0_4B1E
000302A8 <AmiBlitz3.ab2@4659>   LEA swapl(PC),A0
000302AC <AmiBlitz3.ab2@4660>   LEA swaplf(PC),A1
000302B2 <AmiBlitz3.ab2@4661> JMP pokecode
000302B6 <AmiBlitz3.ab2@4664>   LEA swapw(PC),A0
000302BA <AmiBlitz3.ab2@4665>   LEA swapwf(PC),A1
000302C0 <AmiBlitz3.ab2@4666> JMP pokecode
000302C4 <AmiBlitz3.ab2@4669>   LEA swapb(PC),A0
000302C8 <AmiBlitz3.ab2@4670>   LEA swapbf(PC),A1
000302CE <AmiBlitz3.ab2@4671> JMP pokecode
000302D4 <AmiBlitz3.ab2@4675>   JSR getparameter
000302D8 <AmiBlitz3.ab2@4676>   BSR.w JL_0_8E3C
000302DC <AmiBlitz3.ab2@4677>   BSR.w calcvar
000302E0 <AmiBlitz3.ab2@4678>   BTST #$E,D2
000302E4 <AmiBlitz3.ab2@4679>    BEQ.w JL_0_4B4E
000302E8 <AmiBlitz3.ab2@4680>   MOVE.b #$4,D2
000302EA <AmiBlitz3.ab2@4683>   TST.b D2
000302EE <AmiBlitz3.ab2@4684>    BEQ.w excerr
000302F2 <AmiBlitz3.ab2@4685>   BTST #$F,D2
000302F6 <AmiBlitz3.ab2@4686>    BNE.w JL_0_4B6A
000302FC <AmiBlitz3.ab2@4687>   MOVE.w leaamp,D1
00030302 <AmiBlitz3.ab2@4688>    JSR pokewda5s
00030304 <AmiBlitz3.ab2@4689>   MOVE.w D3,D1
0003030A <AmiBlitz3.ab2@4690> JMP writeword
0003030C <AmiBlitz3.ab2@4693> RTS
00030312 <AmiBlitz3.ab2@4699>   MOVE.l mempool,a0
00030318 <AmiBlitz3.ab2@4700>   MOVEA.l _execbase,A6
0003031C <AmiBlitz3.ab2@4701> JMP _AllocPooled(a6)
00030320 <AmiBlitz3.ab2@4708>   MOVE.w #$BF00,D1
00030326 <AmiBlitz3.ab2@4709> JMP Atokejsr
0003032A <AmiBlitz3.ab2@4713>   CMP.w #-$7FFA,D0
0003032E <AmiBlitz3.ab2@4714>    BEQ.w popreturn
00030332 <AmiBlitz3.ab2@4715>   CMP.w #-$7FEA,D0
00030336 <AmiBlitz3.ab2@4716>    BEQ.w popnext2
0003033A <AmiBlitz3.ab2@4717>   CMP.w #-$7FF2,D0
0003033E <AmiBlitz3.ab2@4718>    BEQ.w popselect2
00030342 <AmiBlitz3.ab2@4719>   CMP.w #-$7FF5,D0
00030346 <AmiBlitz3.ab2@4720>    BEQ.w get1bytemain
0003034A <AmiBlitz3.ab2@4721>   CMP.w #-$7FF4,D0
0003034E <AmiBlitz3.ab2@4722>    BEQ.w get1bytemain
00030352 <AmiBlitz3.ab2@4723>   CMP.w #-$7FEC,D0
00030356 <AmiBlitz3.ab2@4724>    BEQ.w get1bytemain
0003035A <AmiBlitz3.ab2@4725>   CMP.w #-$7F45,D0
0003035E <AmiBlitz3.ab2@4726>    BEQ.w get1bytemain
00030362 <AmiBlitz3.ab2@4727> BRA.w syntaxerr
00030368 <AmiBlitz3.ab2@4730>   TST.b debugmode
0003036C <AmiBlitz3.ab2@4731>    BEQ.w popreturn__norerr
00030370 <AmiBlitz3.ab2@4732>   LEA popreturn__rfix(PC),A0
00030374 <AmiBlitz3.ab2@4733>   LEA popreturn__rfixf(PC),A1
0003037A <AmiBlitz3.ab2@4734>    JSR pokecode
0003037E <AmiBlitz3.ab2@4735>   MOVE.w #$C305,D1
00030384 <AmiBlitz3.ab2@4736>    JSR Atokejsr
00030388 <AmiBlitz3.ab2@4737>   MOVE.w popreturn__rfix2(PC),D1
0003038E <AmiBlitz3.ab2@4739>    JSR writeword
00030392 <AmiBlitz3.ab2@4740> BRA.w get1bytemain
00030398 <AmiBlitz3.ab2@4744>   CMPI.w #$6753,$4(A7)                                     ;#"gS",4(A7)
0003039C <AmiBlitz3.ab2@4745>   BEQ.w popreturn__rfix2
000303A2 <AmiBlitz3.ab2@4748>   JSR $20000                                               ;reass
000303A4 <AmiBlitz3.ab2@4751>   ADDQ.w #6,A7
000303A8 <AmiBlitz3.ab2@4755>   MOVE.w popreturn__sfix(PC),D1
000303AE <AmiBlitz3.ab2@4756>   JSR writeword
000303B2 <AmiBlitz3.ab2@4757> BRA.w get1bytemain
000303B4 <AmiBlitz3.ab2@4762>   Dc.b $58,$4F                                             ;ADDQ.W  #4,A7
000303BA <AmiBlitz3.ab2@4767>   MOVE.l firstfor,D0
000303BE <AmiBlitz3.ab2@4768>    BEQ.w noforerr
000303C0 <AmiBlitz3.ab2@4769>   MOVEA.l D0,A2
000303C4 <AmiBlitz3.ab2@4770>    BSR.w get1bytemain
000303C8 <AmiBlitz3.ab2@4771>   BSR.w popnext
000303CE <AmiBlitz3.ab2@4774>   TST.b debugmode
000303D2 <AmiBlitz3.ab2@4775>    BEQ.w popnext3__ner
000303D8 <AmiBlitz3.ab2@4776>   MOVE.l nextfixw2,D1
000303DE <AmiBlitz3.ab2@4777>   CMPI.w #$3,$C(A2)
000303E2 <AmiBlitz3.ab2@4778>    BCS.w writelong
000303E8 <AmiBlitz3.ab2@4779>   MOVE.l nextfixl2,D1
000303EC <AmiBlitz3.ab2@4780> BRA.w writelong
000303F2 <AmiBlitz3.ab2@4783>   CMPI.w #$3,$C(A2)
000303F6 <AmiBlitz3.ab2@4784>    BCS.w popnext3__skip2
000303FC <AmiBlitz3.ab2@4785>   MOVE.l nextfixl,D1
00030400 <AmiBlitz3.ab2@4786> BRA.w writelong
00030406 <AmiBlitz3.ab2@4789>   MOVE.w nextfixw,D1
0003040A <AmiBlitz3.ab2@4790> BRA.w writeword
0003040E <AmiBlitz3.ab2@4794>   MOVE.w $C(A2),D0
00030414 <AmiBlitz3.ab2@4795>   TST.b debugmode
00030418 <AmiBlitz3.ab2@4796>    BEQ.w popnext__norunerr
0003041C <AmiBlitz3.ab2@4797>   MOVE.w #$C306,D1
00030420 <AmiBlitz3.ab2@4798>   CMP.w #$3,D0
00030424 <AmiBlitz3.ab2@4799>    BCS.w popnext__oktc
00030426 <AmiBlitz3.ab2@4800>   ADDQ.w #1,D1
00030428 <AmiBlitz3.ab2@4803>   MOVE.l A2,-(A7)
0003042E <AmiBlitz3.ab2@4804>   JSR Atokejsr
00030430 <AmiBlitz3.ab2@4805>   MOVEA.l (A7)+,A2
00030432 <AmiBlitz3.ab2@4808> RTS
00030438 <AmiBlitz3.ab2@4812>   MOVE.l firstsel,D0
0003043C <AmiBlitz3.ab2@4813>    BEQ.w eselerr
0003043E <AmiBlitz3.ab2@4814>   MOVEA.l D0,A2
00030442 <AmiBlitz3.ab2@4815>    BSR.w get1bytemain
00030446 <AmiBlitz3.ab2@4818>   MOVE.w $C(A2),D2
0003044C <AmiBlitz3.ab2@4819>   TST.b debugmode
00030450 <AmiBlitz3.ab2@4820>    BEQ.w popselect__norerr
00030454 <AmiBlitz3.ab2@4821>   MOVE.w #$C313,D1
00030458 <AmiBlitz3.ab2@4822>   CMP.w #$3,D2
0003045C <AmiBlitz3.ab2@4823>    BCS.w popselect__chkit
0003045E <AmiBlitz3.ab2@4824>   ADDQ.w #1,D1
00030464 <AmiBlitz3.ab2@4827>   JSR Atokejsr                                             ;make sure next thing on stack
00030466 <AmiBlitz3.ab2@4831>   MOVEQ.l #$02,D1
0003046A <AmiBlitz3.ab2@4832>   CMP.w #$3,D2
0003046E <AmiBlitz3.ab2@4833>    BCS.w popselect__doit
00030470 <AmiBlitz3.ab2@4834>   MOVEQ.l #$04,D1
00030474 <AmiBlitz3.ab2@4835>   CMP.w #$7,D2
00030478 <AmiBlitz3.ab2@4836>    BCS.w popselect__doit
0003047E <AmiBlitz3.ab2@4837>   LEA endselstr,A0
00030484 <AmiBlitz3.ab2@4838>   LEA endselstrf,A1
0003048A <AmiBlitz3.ab2@4839>   TST.b debugmode
0003048E <AmiBlitz3.ab2@4840>    BEQ.w popselect__norerr3
00030494 <AmiBlitz3.ab2@4841>   LEA endselstrf2,A1
0003049A <AmiBlitz3.ab2@4844>   JSR pokecode
0003049E <AmiBlitz3.ab2@4845>   MOVE.w #$C003,D1                                         ;global freemem
000304A4 <AmiBlitz3.ab2@4846> JMP Atokejsr
000304AA <AmiBlitz3.ab2@4849>   TST.b debugmode
000304AE <AmiBlitz3.ab2@4850>    BEQ.w popselect__norerr2
000304B0 <AmiBlitz3.ab2@4851>   ADDQ.w #2,D1                                             ;for the "sE"
000304B2 <AmiBlitz3.ab2@4854>   LSL.w #8,D1
000304B4 <AmiBlitz3.ab2@4855>   LSL.w #1,D1
000304BA <AmiBlitz3.ab2@4856>   OR.w endsel,D1
000304BE <AmiBlitz3.ab2@4857> BRA.w writeword
000304C2 <AmiBlitz3.ab2@4860> firstrep:    Ds.l 1
000304C6 <AmiBlitz3.ab2@4861> replineat:   Ds.l 1
000304CC <AmiBlitz3.ab2@4870>   CLR.l fp0addr
000304D6 <AmiBlitz3.ab2@4871>   MOVE.l linenumat,replineat
000304D8 <AmiBlitz3.ab2@4872>   MOVEQ.l #$08,D0
000304DE <AmiBlitz3.ab2@4873>   MOVEA.l _execbase,A6
000304E4 <AmiBlitz3.ab2@4874>   MOVE.l mempool,a0
000304E8 <AmiBlitz3.ab2@4875>   JSR _AllocPooled(a6)
000304EA <AmiBlitz3.ab2@4877>   MOVEA.l D0,A0
000304EE <AmiBlitz3.ab2@4878>   MOVE.l firstrep(PC),(A0)
000304F4 <AmiBlitz3.ab2@4879>   MOVE.l A0,firstrep
000304FC <AmiBlitz3.ab2@4880>   MOVE.l destpointer,$4(A0)
000304FE <AmiBlitz3.ab2@4881> RTS
00030504 <AmiBlitz3.ab2@4884> str_temp:  Ds.w 3                                            ;infochk  ds.b 6 org source
00030508 <AmiBlitz3.ab2@4887>   LEA str_temp(PC),A1
0003050A <AmiBlitz3.ab2@4888>   CLR.w (A1)
0003050E <AmiBlitz3.ab2@4889>   CLR.l $2(A1)
00030510 <AmiBlitz3.ab2@4892>   MOVEQ.l #$04,D0
00030514 <AmiBlitz3.ab2@4895>     MOVE.b $1(A1),(A1)+
00030518 <AmiBlitz3.ab2@4896>   DBF D0,check_for_infoextention__loop
0003051C <AmiBlitz3.ab2@4901>   LEA str_temp(PC),A1
0003051E <AmiBlitz3.ab2@4902>   MOVE.b (A0),D0
00030522 <AmiBlitz3.ab2@4903>   ORI.b #$20,D0
00030526 <AmiBlitz3.ab2@4904>   MOVE.b D0,$5(A1)
00030528 <AmiBlitz3.ab2@4905>   TST.b (A0)+
0003052C <AmiBlitz3.ab2@4906>    BNE.w check_for_infoextention__loop2
00030530 <AmiBlitz3.ab2@4907>   CMPI.w #$2E69,(A1)+                                      ;".i"
00030534 <AmiBlitz3.ab2@4908>    BNE.w check_for_infoextention__no
0003053A <AmiBlitz3.ab2@4909>   CMPI.l #$6E666F20,(A1)                                   ;"nfo "
0003053C <AmiBlitz3.ab2@4912> RTS
00030540 <AmiBlitz3.ab2@4916>   BPL.w gettokeps__evaltoke
00030542 <AmiBlitz3.ab2@4917>   MOVE.w D0,D1
00030546 <AmiBlitz3.ab2@4918>   ANDI.w #$7F80,D1
0003054A <AmiBlitz3.ab2@4919>    BEQ.w tokeerr
0003054E <AmiBlitz3.ab2@4920>   BCLR #$F,D0
00030550 <AmiBlitz3.ab2@4921>   MOVE.w D0,D4                                             ;got toke number
00030554 <AmiBlitz3.ab2@4922>   BSR.w get1bytemain
00030558 <AmiBlitz3.ab2@4923> BRA.w gettokeps__gotnum
0003055E <AmiBlitz3.ab2@4926>   JSR JL_0_BF6A
00030564 <AmiBlitz3.ab2@4927>   CMP.l #MaxWord,D3
00030568 <AmiBlitz3.ab2@4928>    BHI.w tokeerr
0003056A <AmiBlitz3.ab2@4929>   TST.w D6
0003056E <AmiBlitz3.ab2@4930>    BNE.w tokeerr
00030570 <AmiBlitz3.ab2@4931>   MOVE.w D3,D4
00030572 <AmiBlitz3.ab2@4934>   MOVEQ.l #$00,D5
00030576 <AmiBlitz3.ab2@4935>   CMP.w #$2C,D0
0003057A <AmiBlitz3.ab2@4936>    BNE.w gettokeps__gotfrom
0003057C <AmiBlitz3.ab2@4937>   MOVE.w D4,-(A7)
00030582 <AmiBlitz3.ab2@4938>    JSR AJL_0_BF6E
00030588 <AmiBlitz3.ab2@4939>   CMP.l #MaxWord,D3
0003058C <AmiBlitz3.ab2@4940>    BHI.w tokeerr
0003058E <AmiBlitz3.ab2@4941>   TST.w D6
00030592 <AmiBlitz3.ab2@4942>    BNE.w tokeerr
00030594 <AmiBlitz3.ab2@4943>   MOVE.w D3,D5
00030596 <AmiBlitz3.ab2@4944>   MOVE.w (A7)+,D4
00030598 <AmiBlitz3.ab2@4947> RTS                                                        ;d4=toke, d5=form
0003059A <AmiBlitz3.ab2@4951>   TST.w D0
0003059E <AmiBlitz3.ab2@4952>    BSR.w gettokeps
000305A2 <AmiBlitz3.ab2@4953>   MOVE.w #$4EB9,D1
000305A6 <AmiBlitz3.ab2@4954>   BSR.w writeword
000305AA <AmiBlitz3.ab2@4955>   BSR.w addoff
000305AC <AmiBlitz3.ab2@4956>   MOVE.w D5,D1
000305B0 <AmiBlitz3.ab2@4957>   ORI.w #$8000,D1                                          ;Toke of Amiga type.
000305B2 <AmiBlitz3.ab2@4958>   SWAP D1
000305B4 <AmiBlitz3.ab2@4959>   MOVE.w D4,D1
000305B8 <AmiBlitz3.ab2@4960> BRA.w writelong
000305BA <AmiBlitz3.ab2@4964>   TST.w D0
000305BE <AmiBlitz3.ab2@4965>    BSR.w gettokeps
000305C2 <AmiBlitz3.ab2@4966>   MOVE.w #$4EB9,D1
000305C6 <AmiBlitz3.ab2@4967>   BSR.w writeword
000305CA <AmiBlitz3.ab2@4968>   BSR.w addoff
000305CC <AmiBlitz3.ab2@4969>   MOVE.w D5,D1
000305D0 <AmiBlitz3.ab2@4970>   ORI.w #$C000,D1                                          ;Toke of Blitz type.
000305D2 <AmiBlitz3.ab2@4971>   SWAP D1
000305D4 <AmiBlitz3.ab2@4972>   MOVE.w D4,D1
000305D8 <AmiBlitz3.ab2@4973> BRA.w writelong
000305DE <AmiBlitz3.ab2@4977>   JSR JL_0_BF6A
000305E4 <AmiBlitz3.ab2@4978>   CMP.l #$10000,D3
000305E8 <AmiBlitz3.ab2@4979>    BCC.w tokeerr
000305EA <AmiBlitz3.ab2@4980>   MOVE.w D3,D1
000305F0 <AmiBlitz3.ab2@4981> JMP Atokejsr
000305F4 <AmiBlitz3.ab2@4985>   BSR.w gettokeps
000305F8 <AmiBlitz3.ab2@4986>   MOVE.w #$4EB9,D1
000305FC <AmiBlitz3.ab2@4987>   BSR.w writeword
00030602 <AmiBlitz3.ab2@4988>   MOVE.l destpointer,D3
0003060A <AmiBlitz3.ab2@4989>   BTST #$7,blitzmode
0003060E <AmiBlitz3.ab2@4990>    BEQ.w do_TokeJsr__inamiga
00030612 <AmiBlitz3.ab2@4991>   BSET #$E,D5
00030616 <AmiBlitz3.ab2@4994>   BSR.w JL_0_6E86
0003061A <AmiBlitz3.ab2@4995>   BSR.w addoff
0003061E <AmiBlitz3.ab2@4996> BRA.w writelong
00030622 <AmiBlitz3.ab2@5000>   BEQ.w do_VWait__zero
00030624 <AmiBlitz3.ab2@5001>   MOVEQ.l #$02,D2                                          ;get a word
0003062A <AmiBlitz3.ab2@5003>   JSR bakeval
0003062E <AmiBlitz3.ab2@5004>   MOVE.w fvwait(PC),D1
00030632 <AmiBlitz3.ab2@5005> BRA.w do_VWait__vcont
00030636 <AmiBlitz3.ab2@5008>   MOVE.w #$7000,D1                                         ;moveq #0,d0
0003063A <AmiBlitz3.ab2@5011>   BSR.w writeword
0003063E <AmiBlitz3.ab2@5012>   MOVE.w #$C104,D1
00030644 <AmiBlitz3.ab2@5013> JMP Atokejsr
00030646 <AmiBlitz3.ab2@5017>   SUBQ.w #1,D0
0003064C <AmiBlitz3.ab2@5020>   Dc.w $3b7c,$ffff,0                                       ;move.w #$FFFF,$0(A5) ;noopt
00030650 <AmiBlitz3.ab2@5023>   Dc.l $426d0001                                           ;clr.w $0(A5)
00030654 <AmiBlitz3.ab2@5027>   MOVE.b debugmode(PC),D1
00030658 <AmiBlitz3.ab2@5028>   BEQ.b debugmode_codelabel__skip
0003065C <AmiBlitz3.ab2@5029>   MOVE.w #$D500,D1
00030662 <AmiBlitz3.ab2@5030> JMP Atokejsr
00030664 <AmiBlitz3.ab2@5033> RTS
0003066C <AmiBlitz3.ab2@5037>   BSET #$0,blitzmode
00030674 <AmiBlitz3.ab2@5038>   BSET #$7,blitzmode
00030678 <AmiBlitz3.ab2@5039>   MOVE.w #$C200,D1
0003067E <AmiBlitz3.ab2@5040>   JSR Atokejsr
00030684 <AmiBlitz3.ab2@5041>   TST.b debugmode
00030688 <AmiBlitz3.ab2@5042>    BEQ.w do_BLITZ__done
0003068C <AmiBlitz3.ab2@5043>   MOVE.w cgoblitz(PC),D1
00030690 <AmiBlitz3.ab2@5044>   BSR.w writeword
00030692 <AmiBlitz3.ab2@5045>   MOVEQ.l #-$01,D1
00030696 <AmiBlitz3.ab2@5046>   BSR.w writeword
0003069C <AmiBlitz3.ab2@5047>   JSR getbbase
000306A0 <AmiBlitz3.ab2@5048>   BSR.w writeword
000306A4 <AmiBlitz3.ab2@5051> BRA.w debugmode_codelabel
000306A8 <AmiBlitz3.ab2@5055>   MOVE.w #$C201,D1
000306AC <AmiBlitz3.ab2@5056> BRA.w do_AMIGA__toamode
000306B0 <AmiBlitz3.ab2@5060>   MOVE.W  #$C202,D1
000306B8 <AmiBlitz3.ab2@5063>   BSET #$0,blitzmode
000306C0 <AmiBlitz3.ab2@5064>   BCLR #$7,blitzmode
000306C6 <AmiBlitz3.ab2@5065>   JSR Atokejsr
000306CC <AmiBlitz3.ab2@5066>   TST.b debugmode
000306D0 <AmiBlitz3.ab2@5067>    BEQ.w do_AMIGA__done
000306D4 <AmiBlitz3.ab2@5068>   MOVE.w cgoamiga(PC),D1
000306D8 <AmiBlitz3.ab2@5069>   BSR.w writeword
000306DE <AmiBlitz3.ab2@5070>   JSR getbbase
000306E2 <AmiBlitz3.ab2@5071>   BSR.w writeword
000306E6 <AmiBlitz3.ab2@5074> BRA.w debugmode_codelabel
000306EA <AmiBlitz3.ab2@5078>   MOVEM.l D2-D7/A2-A4,-(A7)
000306EE <AmiBlitz3.ab2@5081>   MOVEM.l (A7)+,D2-D7/A2-A4
000306F4 <AmiBlitz3.ab2@5085>   JSR JL_0_BF6A
000306FA <AmiBlitz3.ab2@5086>   CMP.l #$E,D3
000306FE <AmiBlitz3.ab2@5087>    BCC.w interr4
00030702 <AmiBlitz3.ab2@5088>   MOVE.w #$7000,D1
00030704 <AmiBlitz3.ab2@5089>   OR.w D3,D1
00030708 <AmiBlitz3.ab2@5090>   BSR.w writeword
0003070C <AmiBlitz3.ab2@5091>   MOVE.w #$C101,D1
00030712 <AmiBlitz3.ab2@5092> JMP Atokejsr                                               ;clear the interupt
00030714 <AmiBlitz3.ab2@5095> inerr:       Ds.w 1                                        ;flag - in error trap mode
00030718 <AmiBlitz3.ab2@5096> errjmp:      Ds.l 1                                        ;where err jump is
0003071C <AmiBlitz3.ab2@5097> errcode:     Ds.l 1
00030720 <AmiBlitz3.ab2@5101>   MOVE.W  #$D202,D1
00030726 <AmiBlitz3.ab2@5102> JMP Atokejsr                                               ;BRA.W Atokejsr
0003072A <AmiBlitz3.ab2@5106>   MOVE.w inerr(PC),D1
0003072E <AmiBlitz3.ab2@5107>    BEQ.w errerr3
00030734 <AmiBlitz3.ab2@5108>   CLR.w inerr
0003073A <AmiBlitz3.ab2@5109>   MOVE.w dontwrite,D1
0003073E <AmiBlitz3.ab2@5110>    BNE.w doendseterr__skip
00030742 <AmiBlitz3.ab2@5111>   MOVEA.l errjmp(PC),A0
00030748 <AmiBlitz3.ab2@5112>   MOVE.l destpointer,(A0)
0003074C <AmiBlitz3.ab2@5115> BRA.w get1bytemain
00030750 <AmiBlitz3.ab2@5119>   MOVE.w #$D205,D1
00030756 <AmiBlitz3.ab2@5120> JMP Atokejsr
0003075C <AmiBlitz3.ab2@5124>   MOVE.w proceduremode,D1
00030760 <AmiBlitz3.ab2@5125>    BNE.w errerr1
00030764 <AmiBlitz3.ab2@5126>   MOVE.w inerr(PC),D1
00030768 <AmiBlitz3.ab2@5127>    BNE.w errerr2
0003076E <AmiBlitz3.ab2@5128>   LEA inerr,a0
00030770 <AmiBlitz3.ab2@5129>   NOT.w (a0)                                               ;reass
00030774 <AmiBlitz3.ab2@5130>   MOVE.w #$203C,D1                                         ;move.l #x,d0
00030778 <AmiBlitz3.ab2@5131>   BSR.w writeword
00030782 <AmiBlitz3.ab2@5132>   MOVE.l destpointer,errcode
00030786 <AmiBlitz3.ab2@5133>   BSR.w addoff
0003078A <AmiBlitz3.ab2@5134>   BSR.w writelong
0003078E <AmiBlitz3.ab2@5135>   MOVE.w #$D201,D1
00030794 <AmiBlitz3.ab2@5136>   JSR Atokejsr
00030798 <AmiBlitz3.ab2@5137>   MOVE.w #$4EF9,D1                                         ;JMP
0003079C <AmiBlitz3.ab2@5138>   BSR.w writeword
000307A6 <AmiBlitz3.ab2@5139>   MOVE.l destpointer,errjmp
000307AA <AmiBlitz3.ab2@5140>   BSR.w addoff
000307AE <AmiBlitz3.ab2@5141>   BSR.w writelong
000307B4 <AmiBlitz3.ab2@5142>   MOVE.w dontwrite,D1
000307B8 <AmiBlitz3.ab2@5143>    BNE.w do_SetErr__skip
000307BC <AmiBlitz3.ab2@5144>   MOVEA.l errcode(PC),A0
000307C2 <AmiBlitz3.ab2@5145>   MOVE.l destpointer,(A0)
000307C4 <AmiBlitz3.ab2@5148> RTS
000307C8 <AmiBlitz3.ab2@5151> intlineat:  Ds.l 1
000307CA <AmiBlitz3.ab2@5155>   MOVEQ.l #-$01,D1                                        ;type - need new string space
000307CE <AmiBlitz3.ab2@5156>   BSR.w errchx
000307D4 <AmiBlitz3.ab2@5157>   MOVE.w D1,intstring
000307DE <AmiBlitz3.ab2@5158>   MOVE.l linenumat,intlineat
000307E4 <AmiBlitz3.ab2@5159>   JSR JL_0_BF6A                                           ;get constant - int level
000307EA <AmiBlitz3.ab2@5160>   CMP.l #$E,D3
000307EE <AmiBlitz3.ab2@5161>    BCC.w interr4
000307F4 <AmiBlitz3.ab2@5162>   ST intsused
000307FA <AmiBlitz3.ab2@5163>   MOVE.w D3,intlevel
000307FE <AmiBlitz3.ab2@5164>   MOVE.w #$7000,D1
00030800 <AmiBlitz3.ab2@5165>   OR.w D3,D1                                              
00030804 <AmiBlitz3.ab2@5166>   BSR.w writeword                                         ;moveq #x,d0
00030808 <AmiBlitz3.ab2@5167>   MOVE.w #$223C,D1                                        ;move.l #x,d1
0003080C <AmiBlitz3.ab2@5168>   BSR.w writeword
00030810 <AmiBlitz3.ab2@5169>   BSR.w addoff
00030816 <AmiBlitz3.ab2@5170>   MOVE.l destpointer,-(A7)
0003081A <AmiBlitz3.ab2@5171>   BSR.w writelong
0003081E <AmiBlitz3.ab2@5172>   MOVE.w #$C100,D1
00030824 <AmiBlitz3.ab2@5173>   JSR Atokejsr
00030828 <AmiBlitz3.ab2@5174>   MOVE.w #$4EF9,D1                                        ;jmp
0003082C <AmiBlitz3.ab2@5175>   BSR.w writeword
00030830 <AmiBlitz3.ab2@5176>   BSR.w addoff
0003083A <AmiBlitz3.ab2@5177>   MOVE.l destpointer,intjmpat
0003083E <AmiBlitz3.ab2@5178>   BSR.w writelong
00030840 <AmiBlitz3.ab2@5179>   MOVEA.l (A7)+,A0
00030846 <AmiBlitz3.ab2@5180>   MOVE.w dontwrite,D1
0003084A <AmiBlitz3.ab2@5181>   BNE.w do_SetInt__dontpoke
00030850 <AmiBlitz3.ab2@5182>   MOVE.l destpointer,(A0)
00030854 <AmiBlitz3.ab2@5185>   MOVE.l intstart0(PC),D1
00030858 <AmiBlitz3.ab2@5186>   BSR.w writelong
0003085E <AmiBlitz3.ab2@5187>   TST.b debugmode
00030862 <AmiBlitz3.ab2@5188>    BEQ.w do_SetInt__norerr
00030864 <AmiBlitz3.ab2@5192>   MOVEQ.l #$02,D1
00030868 <AmiBlitz3.ab2@5193>   BSR.w writetrap
0003086C <AmiBlitz3.ab2@5194>   BSR.w addoff
00030876 <AmiBlitz3.ab2@5195>   MOVE.l destpointer,intcleanat
0003087A <AmiBlitz3.ab2@5196>   BSR.w writelong
00030880 <AmiBlitz3.ab2@5197>   MOVE.w intlevel,D1
00030884 <AmiBlitz3.ab2@5198>   BSR.w writeword
00030888 <AmiBlitz3.ab2@5199>   MOVE.w #$C30B,D1                                         ;disable stack checks
0003088E <AmiBlitz3.ab2@5200>   JSR Atokejsr
00030892 <AmiBlitz3.ab2@5203>   MOVE.w #$FED3,D1
00030896 <AmiBlitz3.ab2@5204>   BSR.w uselib
0003089A <AmiBlitz3.ab2@5205>   MOVE.w #$C102,D1
000308A0 <AmiBlitz3.ab2@5206>   JSR Atokejsr
000308A8 <AmiBlitz3.ab2@5207>   MOVE.w #-1,lasta6
000308B2 <AmiBlitz3.ab2@5208>   MOVE.l linenumat,intline
000308B4 <AmiBlitz3.ab2@5209> RTS
000308B6 <AmiBlitz3.ab2@5213>             Ds.w 1                                         ;??looks like obsolved data??
000308BA <AmiBlitz3.ab2@5215> intdata1:   Ds.l 1                                         ;where in data1 a5 is being kept
000308BE <AmiBlitz3.ab2@5217> intjmpat:   Ds.l 1
000308C2 <AmiBlitz3.ab2@5218> intline:    Ds.l 1
000308C4 <AmiBlitz3.ab2@5219> intstring:  Ds.w 1                                         ;flag 0 = no setint
000308C6 <AmiBlitz3.ab2@5222> intlevel:   Ds.w 1
000308CA <AmiBlitz3.ab2@5223> intcleanat: Ds.l 1
000308CE <AmiBlitz3.ab2@5224> ret15add:   Ds.l 1
000308D0 <AmiBlitz3.ab2@5225> ret15cc:    Ds.w 1
000308D8 <AmiBlitz3.ab2@5229>   ADDI.l #$12,$2(A7)
000308E0 <AmiBlitz3.ab2@5230>   MOVE.l $2(A7),ret15add
000308E6 <AmiBlitz3.ab2@5231>   MOVE.w (A7),ret15cc
000308EE <AmiBlitz3.ab2@5232>   MOVE.l #directdo,$2(A7)
000308F0 <AmiBlitz3.ab2@5233> RTE
000308F4 <AmiBlitz3.ab2@5242>   MOVE.l ret15add(PC),-(A7)
000308F8 <AmiBlitz3.ab2@5243>   MOVE.w ret15cc(PC),-(A7)                                 ;15*4
000308FC <AmiBlitz3.ab2@5244>   MOVEM.l D0-D7/A0-A6,-(A7)
00030906 <AmiBlitz3.ab2@5245>   MOVE.l destbufferend,trap15temp                          ;store high buff addr
00030910 <AmiBlitz3.ab2@5246>   MOVE.l destbufferstart,trap15temp2
0003091A <AmiBlitz3.ab2@5247>   MOVE.l libend,templibend
00030924 <AmiBlitz3.ab2@5248>   MOVE.l data1start,tempdata1start
0003092A <AmiBlitz3.ab2@5249>   CLR.l hunkoffsetcounter
00030930 <AmiBlitz3.ab2@5251>   MOVE.l directbuffer,a0
00030936 <AmiBlitz3.ab2@5255>   MOVE.l a0,destbufferstart
0003093C <AmiBlitz3.ab2@5256>   ADD.l #3900,a0
00030942 <AmiBlitz3.ab2@5257>   MOVE.l a0,destbufferend
00030948 <AmiBlitz3.ab2@5258>   TST.b exdebug
0003094C <AmiBlitz3.ab2@5259>   BEQ 'l1
00030952 <AmiBlitz3.ab2@5260>   MOVE.l a0,libend
00030958 <AmiBlitz3.ab2@5261>   ADD.l #4000,a0
0003095E <AmiBlitz3.ab2@5262>   MOVE.l a0,data1start
00030968 <AmiBlitz3.ab2@5265>   MOVE.l #dircont,errcont
0003096E <AmiBlitz3.ab2@5266>   MOVE.l A7,errstack
00030976 <AmiBlitz3.ab2@5267>   MOVE.w #$FFFF,dirmode
0003097A <AmiBlitz3.ab2@5269>     MOVEA.l ret15add(PC),A1
00030980 <AmiBlitz3.ab2@5270>     MOVE.w -(A1),blitzmode
00030982 <AmiBlitz3.ab2@5271>     CLR.l -(A1)
00030988 <AmiBlitz3.ab2@5272>     MOVE.l -(A1),firstglob
0003098E <AmiBlitz3.ab2@5273>     MOVE.l -(A1),firstlocal
00030994 <AmiBlitz3.ab2@5275>   CLR.w proceduremode
0003099A <AmiBlitz3.ab2@5276>   MOVE.l firstglob,D0
000309A0 <AmiBlitz3.ab2@5277>   OR.l firstlocal,D0
000309A4 <AmiBlitz3.ab2@5278>   BEQ.b directdo__skip
000309AA <AmiBlitz3.ab2@5279>   NOT.w proceduremode
000309AC <AmiBlitz3.ab2@5282>   MOVEA.l -(A1),A0                                         ;address of string
000309AE <AmiBlitz3.ab2@5286>   MOVE.l A0,-(A7)
000309EC <AmiBlitz3.ab2@5289>   !ComData_GetL{comFunc_DebugTrap,A1}
000309EE <AmiBlitz3.ab2@5292>   JSR (A1)                                                 ;tokenise line.....
000309F0 <AmiBlitz3.ab2@5293>   MOVEA.l (A7)+,A5
000309FA <AmiBlitz3.ab2@5294>   MOVE.l directbuffer,destpointer
00030A00 <AmiBlitz3.ab2@5295>   TST.b exdebug
00030A04 <AmiBlitz3.ab2@5296>   BEQ 'noexdebug
00030A06 <AmiBlitz3.ab2@5297>   MOVE.l a5,a0
00030A0C <AmiBlitz3.ab2@5298>   MOVE.l #200,d0
00030A12 <AmiBlitz3.ab2@5301>     MOVE.b 0(a0,d0.l),8(a0,d0.l)
00030A16 <AmiBlitz3.ab2@5302>   DBF d0,'l1
00030A1C <AmiBlitz3.ab2@5307>   MOVE.l destpointer,a0
00030A20 <AmiBlitz3.ab2@5308>   MOVE.w #$207c,(a0)+
00030A22 <AmiBlitz3.ab2@5309>   MOVE.l a5,d0
00030A28 <AmiBlitz3.ab2@5310>   ADD.l #$206,d0                                           ;constant from debuglib
00030A2A <AmiBlitz3.ab2@5311>   MOVE.l d0,(a0)+
00030A30 <AmiBlitz3.ab2@5312>   MOVE.l a0,destpointer
00030A32 <AmiBlitz3.ab2@5313>   MOVE.l a5,a0
00030A36 <AmiBlitz3.ab2@5314>   MOVE.w #$8039,(a0)+                                      ;TokeJsr 164 (inputoutputlib) LSL 7+4
00030A3C <AmiBlitz3.ab2@5315>   MOVE.l #"$520",(a0)+
00030A40 <AmiBlitz3.ab2@5316>   MOVE.w #"4:",(a0)+
00030A46 <AmiBlitz3.ab2@5319>   CLR.w dontwrite
00030A4E <AmiBlitz3.ab2@5320>   MOVE.w #$FFFF,lasta6
00030A52 <AmiBlitz3.ab2@5321>   BSR.w compile_line                                        ;.....compile it
00030A58 <AmiBlitz3.ab2@5322>   TST.b exdebug
00030A5C <AmiBlitz3.ab2@5323>   BEQ 'noexdebug2
00030A62 <AmiBlitz3.ab2@5324>   JSR JL_0_6C76
00030A68 <AmiBlitz3.ab2@5327>   CLR.w proceduremode
00030A6C <AmiBlitz3.ab2@5328>   BSR.w errchx
00030A70 <AmiBlitz3.ab2@5329>   MOVE.w #$4EF9,D1
00030A74 <AmiBlitz3.ab2@5330>   BSR.w writeword                                          ;JMP
00030A78 <AmiBlitz3.ab2@5331>   MOVE.l ret15add(PC),D1
00030A7C <AmiBlitz3.ab2@5332>   BSR.w writelong                                          ;jmp to done
00030A82 <AmiBlitz3.ab2@5333>   MOVE.w dontwrite,D0
00030A86 <AmiBlitz3.ab2@5334>    BNE.w nodirmem
00030A8E <AmiBlitz3.ab2@5335>   MOVE.l directbuffer,$3E(A7)                              ;install code address
00030A94 <AmiBlitz3.ab2@5338>   CLR.w dirmode
00030A9A <AmiBlitz3.ab2@5339>   MOVE.w ret15cc(PC),$3C(A7)
00030AA4 <AmiBlitz3.ab2@5340>   MOVE.l trap15temp,destbufferend
00030AAE <AmiBlitz3.ab2@5341>   MOVE.l trap15temp2,destbufferstart
00030AB8 <AmiBlitz3.ab2@5342>   MOVE.l tempdata1start,data1start
00030AC2 <AmiBlitz3.ab2@5343>   MOVE.l templibend,libend
00030AC6 <AmiBlitz3.ab2@5344>   MOVEM.l (A7)+,D0-D7/A0-A6
00030ACA <AmiBlitz3.ab2@5345>   BSR.w Aclearcache                                        ;selden used
00030ACC <AmiBlitz3.ab2@5346> RTR
00030AD0 <AmiBlitz3.ab2@5349>   MOVEA.l ret15add(PC),A0
00030AD2 <AmiBlitz3.ab2@5350>   SUBQ.w #2,A0
00030AD4 <AmiBlitz3.ab2@5351>   MOVE.l D0,-(A0)
00030AD8 <AmiBlitz3.ab2@5352> BRA.w direxit
00030ADC <AmiBlitz3.ab2@5356>   MOVE.w $6(A3),D1
00030AE0 <AmiBlitz3.ab2@5357>   BSR.w uselib                                             ;get lib for base address
00030AE4 <AmiBlitz3.ab2@5358>   MOVE.w $A(A1),-(A7)                                      ;libbase reg
00030AE6 <AmiBlitz3.ab2@5359>   ADDQ.w #8,A3
00030AE8 <AmiBlitz3.ab2@5360>   MOVE.w (A3)+,-(A7)                                       ;get offset for lib
00030AEA <AmiBlitz3.ab2@5361>   MOVE.l A3,-(A7)
00030AEC <AmiBlitz3.ab2@5365>   MOVEQ.l #$00,D3
00030AEE <AmiBlitz3.ab2@5368>   MOVE.b (A3)+,D1
00030AF2 <AmiBlitz3.ab2@5369>    BMI.w stamigalib__done
00030AF4 <AmiBlitz3.ab2@5370>   MOVEQ.l #$03,D2
00030AF6 <AmiBlitz3.ab2@5371>   ADDQ.w #1,D3
00030AFA <AmiBlitz3.ab2@5372>   MOVEM.l D3/A3,-(A7)
00030B00 <AmiBlitz3.ab2@5373>    JSR peval
00030B04 <AmiBlitz3.ab2@5374>   MOVEM.l (A7)+,D3/A3
00030B08 <AmiBlitz3.ab2@5375>   CMP.w #$2C,D0
00030B0C <AmiBlitz3.ab2@5376>    BEQ.w stamigalib__loop
00030B0E <AmiBlitz3.ab2@5377>   TST.b (A3)
00030B12 <AmiBlitz3.ab2@5378>    BPL.w syntaxerr
00030B14 <AmiBlitz3.ab2@5381>   MOVEA.l (A7)+,A3
00030B16 <AmiBlitz3.ab2@5382>   SUBQ.w #1,D3
00030B1A <AmiBlitz3.ab2@5383>    BPL.w stamigalib__toend
00030B1E <AmiBlitz3.ab2@5384>    BSR.w get1bytemain                                      ;no pars - get :
00030B22 <AmiBlitz3.ab2@5385> BRA.w stamigalib__nopars
00030B24 <AmiBlitz3.ab2@5388>   TST.b (A3)+                                              ;go to end of params
00030B28 <AmiBlitz3.ab2@5389>    BPL.w stamigalib__toend
00030B2A <AmiBlitz3.ab2@5390>   SUBQ.w #1,A3
00030B2C <AmiBlitz3.ab2@5393>    MOVEQ.l #$00,D1
00030B2E <AmiBlitz3.ab2@5394>    MOVE.b -(A3),D1
00030B32 <AmiBlitz3.ab2@5395>    BTST #$4,D1
00030B36 <AmiBlitz3.ab2@5396>     BNE.w stamigalib__addreg
00030B38 <AmiBlitz3.ab2@5397>    LSL.w #8,D1
00030B3A <AmiBlitz3.ab2@5398>    LSL.w #1,D1
00030B3E <AmiBlitz3.ab2@5399>    ORI.w #$201F,D1
00030B42 <AmiBlitz3.ab2@5400>  BRA.w stamigalib__gotit
00030B46 <AmiBlitz3.ab2@5403>    ANDI.w #$7,D1
00030B48 <AmiBlitz3.ab2@5404>    LSL.w #8,D1
00030B4A <AmiBlitz3.ab2@5405>    LSL.w #1,D1
00030B4E <AmiBlitz3.ab2@5406>    ORI.w #$205F,D1
00030B52 <AmiBlitz3.ab2@5409>     BSR.w writeword
00030B56 <AmiBlitz3.ab2@5410>   DBF D3,stamigalib__loop2
00030B5C <AmiBlitz3.ab2@5413>   MOVE.w (A7)+,libjsr+2
00030B62 <AmiBlitz3.ab2@5414>   MOVE.w (A7)+,libbase+2
00030B68 <AmiBlitz3.ab2@5415>   MOVE.l libbase,D1
00030B6C <AmiBlitz3.ab2@5416>    BSR.w writelong
00030B72 <AmiBlitz3.ab2@5417>   MOVE.l libjsr,D1
00030B76 <AmiBlitz3.ab2@5418> BRA.w writelong
00030B7C <AmiBlitz3.ab2@5422>   MOVE.l data1,D4
00030B82 <AmiBlitz3.ab2@5423>   SUB.l data1start,D4
00030B88 <AmiBlitz3.ab2@5424>   ADD.l #10000,d4
00030B8E <AmiBlitz3.ab2@5425>   MOVE.l libend,D3
00030B94 <AmiBlitz3.ab2@5426>   SUB.l destbufferend,D3
00030B9A <AmiBlitz3.ab2@5427>   ADD.l #40000,d3
00030BA0 <AmiBlitz3.ab2@5428>   MOVE.l bigpc,D2
00030BA6 <AmiBlitz3.ab2@5429>   SUB.l destbufferstart,D2
00030BAC <AmiBlitz3.ab2@5430>   ADD.l #20000,d2
00030BB2 <AmiBlitz3.ab2@5431>   MOVE.l databuffer,D5
00030BB8 <AmiBlitz3.ab2@5432>   ADD.l #10000,D5
00030BBC <AmiBlitz3.ab2@5433> BRA newallox
00030BC2 <AmiBlitz3.ab2@5437>   MOVE.l objectbuffer,D2
00030BC4 <AmiBlitz3.ab2@5438>   LSR.l #1,D2
00030BCA <AmiBlitz3.ab2@5439>   ADD.l objectbuffer,D2
00030BD0 <AmiBlitz3.ab2@5440>   MOVE.l libsbuffer,D3
00030BD2 <AmiBlitz3.ab2@5441>   LSR.l #1,D3
00030BD8 <AmiBlitz3.ab2@5442>   ADD.l libsbuffer,D3
00030BDE <AmiBlitz3.ab2@5443>   MOVE.l systembuffer,D4
00030BE0 <AmiBlitz3.ab2@5444>   LSR.l #1,D4
00030BE6 <AmiBlitz3.ab2@5445>   ADD.l systembuffer,D4
00030BEC <AmiBlitz3.ab2@5446>   MOVE.l databuffer,D5
00030BEE <AmiBlitz3.ab2@5447>   LSR.l #1,D5
00030BF4 <AmiBlitz3.ab2@5448>   ADD.l databuffer,D5
00030BF8 <AmiBlitz3.ab2@5449> BRA.w newallox
00030BFE <AmiBlitz3.ab2@5453>   MOVE.l bigpc,D2
00030C04 <AmiBlitz3.ab2@5454>   SUB.l destbufferstart,D2                                     ;size of object buffer
00030C0A <AmiBlitz3.ab2@5455>   SUB.l savefuncspace,d2
00030C10 <AmiBlitz3.ab2@5457>   TST.w debugversion
00030C14 <AmiBlitz3.ab2@5458>    BNE.b alloxadj__skip
00030C1A <AmiBlitz3.ab2@5459>   ADDI.l #$800,D2
00030C20 <AmiBlitz3.ab2@5462>   MOVE.l libend,D3
00030C26 <AmiBlitz3.ab2@5463>   SUB.l destbufferend,D3
00030C2C <AmiBlitz3.ab2@5465>   MOVE.l data1,D4
00030C32 <AmiBlitz3.ab2@5466>   SUB.l data1start,D4
00030C38 <AmiBlitz3.ab2@5468>   MOVE.l data2,D5
00030C3E <AmiBlitz3.ab2@5469>   SUB.l data2at,D5
00030C44 <AmiBlitz3.ab2@5471>   CLR.l morememadd
00030C48 <AmiBlitz3.ab2@5474>   BSR.w makeallox
00030C4C <AmiBlitz3.ab2@5475>   BNE.w newallox__done
00030C50 <AmiBlitz3.ab2@5476> BRA.w init_buffers
00030C52 <AmiBlitz3.ab2@5479> RTS
00030C58 <AmiBlitz3.ab2@5483>   MOVEA.l _execbase,A6
00030C5E <AmiBlitz3.ab2@5484>   MOVE.l objlen,D0
00030C62 <AmiBlitz3.ab2@5485>   BEQ.w freeallox__skip
00030C68 <AmiBlitz3.ab2@5486>   CLR.l objlen
00030C6E <AmiBlitz3.ab2@5487>   MOVEA.l destbufferstart,A1
00030C74 <AmiBlitz3.ab2@5488>   MOVE.l mempool,a0
00030C78 <AmiBlitz3.ab2@5489> JMP _FreeVec(A6)
00030C7A <AmiBlitz3.ab2@5492> RTS
00030C80 <AmiBlitz3.ab2@5496>   MOVE.l objectbuffer,D2
00030C86 <AmiBlitz3.ab2@5497>   MOVE.l libsbuffer,D3
00030C8C <AmiBlitz3.ab2@5498>   MOVE.l systembuffer,D4
00030C92 <AmiBlitz3.ab2@5499>   MOVE.l databuffer,D5
00030C9A <AmiBlitz3.ab2@5502>   MOVE.w #$FFFF,anyerrs
00030C9E <AmiBlitz3.ab2@5503>   BSR.w freeallox
00030CA0 <AmiBlitz3.ab2@5507>   ADDQ.l #1,D2
00030CA4 <AmiBlitz3.ab2@5508>   BCLR #$0,D2
00030CA6 <AmiBlitz3.ab2@5509>   ADDQ.l #1,D3
00030CAA <AmiBlitz3.ab2@5510>   BCLR #$0,D3
00030CAC <AmiBlitz3.ab2@5511>   ADDQ.l #1,D4
00030CB0 <AmiBlitz3.ab2@5512>   BCLR #$0,D4
00030CB2 <AmiBlitz3.ab2@5513>   TST.l d5
00030CB6 <AmiBlitz3.ab2@5514>   BNE 'l1
00030CB8 <AmiBlitz3.ab2@5517>   ADDQ.l #1,D5
00030CBC <AmiBlitz3.ab2@5518>   BCLR #$0,D5
00030CBE <AmiBlitz3.ab2@5519>   MOVE.l D2,D0
00030CC0 <AmiBlitz3.ab2@5520>   ADD.l D3,D0
00030CC2 <AmiBlitz3.ab2@5521>   ADD.l D4,D0
00030CC4 <AmiBlitz3.ab2@5522>   ADD.l D5,D0
00030CCA <AmiBlitz3.ab2@5523>   ADD.l #moremem,d0
00030CCC <AmiBlitz3.ab2@5524>   MOVE.l D0,D6
00030CD2 <AmiBlitz3.ab2@5525>   MOVE.l #MemfPublic_MemfClear,D1
00030CD8 <AmiBlitz3.ab2@5526>   MOVE.l mempool,a0
00030CDE <AmiBlitz3.ab2@5527>   MOVEA.l _execbase,A6
00030CE2 <AmiBlitz3.ab2@5528>   JSR _AllocVec(a6)                                        ;alloc mem for objectbuffer
00030CE4 <AmiBlitz3.ab2@5530>   TST.l D0
00030CE8 <AmiBlitz3.ab2@5531>   BEQ.w exit_initbuffers
00030CEE <AmiBlitz3.ab2@5532>   MOVE.l D6,objlen
00030CF4 <AmiBlitz3.ab2@5533>   MOVE.l D2,objectbuffer
00030CFA <AmiBlitz3.ab2@5534>   MOVE.l D3,libsbuffer
00030D00 <AmiBlitz3.ab2@5535>   MOVE.l D4,systembuffer
00030D06 <AmiBlitz3.ab2@5536>   MOVE.l D5,databuffer
00030D0C <AmiBlitz3.ab2@5537>   MOVE.l D0,destbufferstart
00030D40 <AmiBlitz3.ab2@5540>   !ComData_SetL{comPtr_DestBufferStart,D0}
00030D42 <AmiBlitz3.ab2@5541>   ADD.l D2,D0
00030D48 <AmiBlitz3.ab2@5542>   MOVE.l D0,destbufferend
00030D4A <AmiBlitz3.ab2@5543>   ADD.l D3,D0
00030D50 <AmiBlitz3.ab2@5544>   MOVE.l D0,data1start
00030D52 <AmiBlitz3.ab2@5545>   ADD.l D4,D0
00030D58 <AmiBlitz3.ab2@5546>   MOVE.l D0,data2at
00030D5A <AmiBlitz3.ab2@5547>   ADD.l D5,D0
00030D60 <AmiBlitz3.ab2@5548>   MOVE.l D0,allat
00030D62 <AmiBlitz3.ab2@5551> RTS
00030D66 <AmiBlitz3.ab2@5555>   Dc.b $00,$00,$00,$01                                     ;         1
00030D6A <AmiBlitz3.ab2@5556>   Dc.b $00,$00,$00,$0A                                     ;        10
00030D6E <AmiBlitz3.ab2@5557>   Dc.b $00,$00,$00,$64                                     ;       100
00030D72 <AmiBlitz3.ab2@5558>   Dc.b $00,$00,$03,$E8                                     ;      1000
00030D76 <AmiBlitz3.ab2@5559>   Dc.b $00,$00,$27,$10                                     ;     10000
00030D7A <AmiBlitz3.ab2@5560>   Dc.b $00,$01,$86,$A0                                     ;    100000
00030D7E <AmiBlitz3.ab2@5561>   Dc.b $00,$0F,$42,$40                                     ;   1000000
00030D82 <AmiBlitz3.ab2@5562>   Dc.b $00,$98,$96,$80                                     ;  10000000
00030D86 <AmiBlitz3.ab2@5563>   Dc.b $05,$F5,$E1,$00                                     ; 100000000
00030D8A <AmiBlitz3.ab2@5564>   Dc.b $3B,$9A,$CA,$00                                     ;1000000000
00030D8C <AmiBlitz3.ab2@5568>   MOVEQ.l #$00,D1                                          ;no zero printed
00030D8E <AmiBlitz3.ab2@5569>   MOVEQ.l #$24,D3                                          ; "$"
00030D90 <AmiBlitz3.ab2@5572>   MOVEQ.l #$30,D4                                          ; "0"
00030D94 <AmiBlitz3.ab2@5575>     CMP.l divisors(PC,D3.W),D2
00030D98 <AmiBlitz3.ab2@5576>     BCS.w makelong__skip
00030D9C <AmiBlitz3.ab2@5577>     SUB.l divisors(PC,D3.W),D2
00030D9E <AmiBlitz3.ab2@5578>     ADDQ.w #1,D4
00030DA2 <AmiBlitz3.ab2@5579> BRA.w makelong__loop2
00030DA6 <AmiBlitz3.ab2@5582>   CMP.b #"0",D4
00030DAA <AmiBlitz3.ab2@5583>   BNE.w makelong__doit
00030DAC <AmiBlitz3.ab2@5584>   TST.w D1
00030DB0 <AmiBlitz3.ab2@5585>   BEQ.w makelong__skip2
00030DB2 <AmiBlitz3.ab2@5588>   MOVE.b D4,(A0)+
00030DB4 <AmiBlitz3.ab2@5589>   MOVEQ.l #$01,D1
00030DB6 <AmiBlitz3.ab2@5592>   SUBQ.w #4,D3
00030DBA <AmiBlitz3.ab2@5593>   BPL.w makelong__loop
00030DBC <AmiBlitz3.ab2@5594>   TST.w D1
00030DC0 <AmiBlitz3.ab2@5595>   BNE.w makelong__skip3
00030DC4 <AmiBlitz3.ab2@5596>   MOVE.b #"0",(A0)+
00030DC6 <AmiBlitz3.ab2@5599>   CLR.b (A0)
00030DC8 <AmiBlitz3.ab2@5600> RTS
00030DE8 <AmiBlitz3.ab2@5603> str_residentrequester:  Dc.b "Name of Resident File to Create",0 : Even        ;restext org source
00030EA8 <AmiBlitz3.ab2@5604> str_residentpath:       Ds.l 48                                                ;respath org source
00030F68 <AmiBlitz3.ab2@5605> str_residentname:       Ds.l 48                                                ;resname org source
00030F6E <AmiBlitz3.ab2@5609>   MOVE.l macrobase,D0
00030F72 <AmiBlitz3.ab2@5610>    BNE.w create_residentfile
00030F78 <AmiBlitz3.ab2@5611>   MOVE.l newtype_string,D0
00030F7C <AmiBlitz3.ab2@5612>    BNE.w create_residentfile
00030F82 <AmiBlitz3.ab2@5613>   MOVEA.l labelbase,A2
00030F86 <AmiBlitz3.ab2@5616>     CMPA.w #$0,A2
00030F8A <AmiBlitz3.ab2@5617>      BEQ.w menu_createresidentfile__err
00030F92 <AmiBlitz3.ab2@5618>     CMPI.l #$1,$4(A2)
00030F96 <AmiBlitz3.ab2@5619>      BEQ.w create_residentfile
00030F98 <AmiBlitz3.ab2@5620>     MOVEA.l (A2),A2
00030F9C <AmiBlitz3.ab2@5621> BRA.w menu_createresidentfile__loop
00030FC6 <AmiBlitz3.ab2@5624>   !basic
0003101C <AmiBlitz3.ab2@5625> 
0003103A <AmiBlitz3.ab2@5626>   !asm
0003103C <AmiBlitz3.ab2@5627> RTS
0003107A <AmiBlitz3.ab2@5633>   !ComData_GetL{comFunc_ASLFileRequest,A3}
00031080 <AmiBlitz3.ab2@5634>   LEA str_residentrequester,A2
00031086 <AmiBlitz3.ab2@5635>   LEA str_residentpath,A0
0003108C <AmiBlitz3.ab2@5636>   LEA str_residentname,A1
000310B6 <AmiBlitz3.ab2@5637>   !basic
000310EE <AmiBlitz3.ab2@5638>     Poke$ ?str_residentpath,my_residentsdir$
0003111A <AmiBlitz3.ab2@5639>     Poke$ ?str_residentname,".res"
00031138 <AmiBlitz3.ab2@5640>   !asm
0003113A <AmiBlitz3.ab2@5643>   JSR (A3)
0003113E <AmiBlitz3.ab2@5645>   BEQ.w menu_createresidentfile__err
00031140 <AmiBlitz3.ab2@5648>   MOVE.l D0,D1
00031146 <AmiBlitz3.ab2@5649>   MOVE.l #HUNK_RELOC_8__MODE_NEWFILE,D2
0003114A <AmiBlitz3.ab2@5650>   MOVEA.l _dosbase(PC),A6
0003114E <AmiBlitz3.ab2@5651>   JSR _Open(A6)
00031150 <AmiBlitz3.ab2@5652>   MOVE.l D0,D7                                             ;handle
00031154 <AmiBlitz3.ab2@5653>   BEQ.w menu_createresidentfile__err
00031158 <AmiBlitz3.ab2@5654>   MOVEM.l d2-d7/a0-a6,-(a7)
0003115E <AmiBlitz3.ab2@5655>   LEA devo,a0
00031164 <AmiBlitz3.ab2@5656>   LEA ptr_parameterstore,a1
00031166 <AmiBlitz3.ab2@5659>     MOVE.b (a0)+,(a1)+
0003116A <AmiBlitz3.ab2@5660>   BNE 'l1
0003116C <AmiBlitz3.ab2@5661>   MOVEQ #13,d2
00031172 <AmiBlitz3.ab2@5662>   JSR findlabel2
00031176 <AmiBlitz3.ab2@5663>   BNE 'd
0003117A <AmiBlitz3.ab2@5664>   TST.l 8(a2)
0003117E <AmiBlitz3.ab2@5665>   BEQ 'd2
000311A8 <AmiBlitz3.ab2@5666>   !basic
000311FE <AmiBlitz3.ab2@5667>     error{!TRANS{"Cannot create Resident with develope debug 1"}}
0003121C <AmiBlitz3.ab2@5668>   !asm
00031220 <AmiBlitz3.ab2@5669>   MOVEM.l (a7)+,d2-d7/a0-a6
00031224 <AmiBlitz3.ab2@5670>   MOVEA.l _dosbase(PC),A6
00031226 <AmiBlitz3.ab2@5671>   MOVE.l d7,d1
0003122A <AmiBlitz3.ab2@5672>   JSR _Close(a6)
0003122E <AmiBlitz3.ab2@5673> BRA menu_createresidentfile__err
00031232 <AmiBlitz3.ab2@5677>   MOVEM.l (a7)+,d2-d7/a0-a6
00031236 <AmiBlitz3.ab2@5678>   BSR.w call_setpointerbusy
0003123A <AmiBlitz3.ab2@5680>   BSR.w AJL_0_7962
0003123C <AmiBlitz3.ab2@5681>   MOVE.l D7,D1
00031242 <AmiBlitz3.ab2@5682>   MOVE.l #tsthead,D2                                       ;header
00031244 <AmiBlitz3.ab2@5683>   MOVEQ.l #$20,D3
00031248 <AmiBlitz3.ab2@5684>   MOVEA.l _dosbase(PC),A6
0003124C <AmiBlitz3.ab2@5685>   JSR _Write(A6)
0003124E <AmiBlitz3.ab2@5686>   MOVEQ.l #$00,D6                                          ;offset from start of file!
00031252 <AmiBlitz3.ab2@5687>   BSR.w restypes
00031256 <AmiBlitz3.ab2@5688>   BSR.w resmacs
0003125A <AmiBlitz3.ab2@5689>   BSR.w resconsts
0003125C <AmiBlitz3.ab2@5690>   MOVE.l D6,D3
0003125E <AmiBlitz3.ab2@5691>   ADDQ.l #3,D3
00031264 <AmiBlitz3.ab2@5692>   ANDI.l #$FFFFFFFC,D3                                    ;long word align
00031266 <AmiBlitz3.ab2@5693>   MOVE.l D3,-(A7)
00031268 <AmiBlitz3.ab2@5694>   SUB.l D6,D3
0003126C <AmiBlitz3.ab2@5695>   BEQ.w menu_createresidentfile__noalign
00031272 <AmiBlitz3.ab2@5696>   MOVE.l #writelist,D2
00031274 <AmiBlitz3.ab2@5697>   MOVE.l D7,D1
0003127A <AmiBlitz3.ab2@5698>   MOVEA.l _dosbase,A6
0003127E <AmiBlitz3.ab2@5699>   JSR _Write(A6)
00031288 <AmiBlitz3.ab2@5702>    MOVE.l hunkoffsetcounter,tstsize3
0003128C <AmiBlitz3.ab2@5703>    BEQ.w menu_createresidentfile__skip2a
0003128E <AmiBlitz3.ab2@5704>   MOVE.l D7,D1
00031294 <AmiBlitz3.ab2@5705>   MOVE.l #tstend,D2
00031296 <AmiBlitz3.ab2@5706>   MOVEQ.l #$0C,D3
0003129C <AmiBlitz3.ab2@5707>   MOVEA.l _dosbase,A6
000312A0 <AmiBlitz3.ab2@5708>    JSR _Write(A6)
000312A6 <AmiBlitz3.ab2@5712>   MOVEA.l hunkoffsetbase,A2
000312AA <AmiBlitz3.ab2@5715>   CMPA.w #$0,A2
000312AE <AmiBlitz3.ab2@5716>    BEQ.w menu_createresidentfile__skip2
000312B2 <AmiBlitz3.ab2@5717>   LEA $4(A2),A1
000312B4 <AmiBlitz3.ab2@5718>   MOVE.l D7,D1
000312B6 <AmiBlitz3.ab2@5719>   MOVE.l A1,D2
000312B8 <AmiBlitz3.ab2@5720>   MOVEQ.l #$04,D3
000312BE <AmiBlitz3.ab2@5721>   MOVEA.l _dosbase,A6
000312C2 <AmiBlitz3.ab2@5722>    JSR _Write(A6)
000312C4 <AmiBlitz3.ab2@5723>   MOVEA.l (A2),A2
000312C8 <AmiBlitz3.ab2@5724> BRA.w menu_createresidentfile__oloop
000312CA <AmiBlitz3.ab2@5727>   MOVE.l D7,D1
000312D0 <AmiBlitz3.ab2@5728>   MOVE.l #zero,D2
000312D2 <AmiBlitz3.ab2@5729>   MOVEQ.l #$04,D3
000312D8 <AmiBlitz3.ab2@5730>   MOVEA.l _dosbase,A6
000312DC <AmiBlitz3.ab2@5731>   JSR _Write(A6)
000312DE <AmiBlitz3.ab2@5734>   MOVE.l D7,D1
000312E4 <AmiBlitz3.ab2@5735>   MOVE.l #tstdone,D2
000312E6 <AmiBlitz3.ab2@5736>   MOVEQ.l #$04,D3
000312EC <AmiBlitz3.ab2@5737>   MOVEA.l _dosbase,A6
000312F0 <AmiBlitz3.ab2@5738>    JSR _Write(A6)
000312F2 <AmiBlitz3.ab2@5739>   MOVE.l (A7)+,D0
000312F4 <AmiBlitz3.ab2@5740>   LSR.l #2,D0
000312FA <AmiBlitz3.ab2@5741>   MOVE.l D0,temp1
000312FC <AmiBlitz3.ab2@5742>   MOVE.l D7,D1
000312FE <AmiBlitz3.ab2@5743>   MOVEQ.l #$14,D2
00031300 <AmiBlitz3.ab2@5744>   MOVEQ.l #-$01,D3
00031304 <AmiBlitz3.ab2@5745>   JSR _Seek(A6)
00031306 <AmiBlitz3.ab2@5746>   MOVE.l D7,D1
0003130C <AmiBlitz3.ab2@5747>   MOVE.l #temp1,D2
0003130E <AmiBlitz3.ab2@5748>   MOVEQ.l #$04,D3
00031312 <AmiBlitz3.ab2@5749>    JSR _Write(A6)
00031314 <AmiBlitz3.ab2@5750>   MOVE.l D7,D1
00031316 <AmiBlitz3.ab2@5751>   MOVEQ.l #$1C,D2
00031318 <AmiBlitz3.ab2@5752>   MOVEQ.l #-$01,D3
0003131C <AmiBlitz3.ab2@5753>    JSR _Seek(A6)
0003131E <AmiBlitz3.ab2@5754>   MOVE.l D7,D1
00031324 <AmiBlitz3.ab2@5755>   MOVE.l #temp1,D2
00031326 <AmiBlitz3.ab2@5756>   MOVEQ.l #$04,D3
0003132A <AmiBlitz3.ab2@5757>    JSR _Write(A6)
0003132C <AmiBlitz3.ab2@5758>   MOVE.l D7,D1
00031330 <AmiBlitz3.ab2@5759>    JSR _Close(A6)
00031334 <AmiBlitz3.ab2@5760> BRA.w call_setpointernormal
00031336 <AmiBlitz3.ab2@5764>   ADDQ.w #5,D1
00031338 <AmiBlitz3.ab2@5765>   ADDQ.b #8,D0
0003133C <AmiBlitz3.ab2@5768>     CMPA.w #$0,A2
00031340 <AmiBlitz3.ab2@5769>     BEQ.w writelist__done
00031344 <AmiBlitz3.ab2@5770>      BSR.w writeitem
00031346 <AmiBlitz3.ab2@5771>     MOVEA.l (A2),A2
0003134A <AmiBlitz3.ab2@5772> BRA.w writelist__loop
0003134C <AmiBlitz3.ab2@5775> RTS
0003134E <AmiBlitz3.ab2@5778>   MOVEQ.l #$00,D3
00031352 <AmiBlitz3.ab2@5779>   MOVE.b $0(A2,D5.W),D3
00031354 <AmiBlitz3.ab2@5780>   ADDQ.w #1,D3
00031358 <AmiBlitz3.ab2@5781>   BCLR #$0,D3                                              ;word align
0003135A <AmiBlitz3.ab2@5782>   MOVE.l (A2),-(A7)
0003135E <AmiBlitz3.ab2@5783>    BEQ.w writeitem__skip
00031362 <AmiBlitz3.ab2@5784>    BSR.w resoff
00031364 <AmiBlitz3.ab2@5785>   ADD.l D3,D6
00031366 <AmiBlitz3.ab2@5786>   MOVE.l D6,(A2)
00031368 <AmiBlitz3.ab2@5787>   SUB.l D3,D6
0003136A <AmiBlitz3.ab2@5790>    ADD.l D3,D6
0003136C <AmiBlitz3.ab2@5791>   MOVE.l A2,D2
0003136E <AmiBlitz3.ab2@5792>   MOVE.l D7,D1
00031374 <AmiBlitz3.ab2@5793>   MOVEA.l _dosbase,A6
00031378 <AmiBlitz3.ab2@5794>    JSR _Write(A6)
0003137A <AmiBlitz3.ab2@5795>   MOVE.l (A7)+,(A2)
0003137C <AmiBlitz3.ab2@5796> RTS
0003137E <AmiBlitz3.ab2@5799>   MOVE.l D6,D2
00031382 <AmiBlitz3.ab2@5800> BRA.w addhunkoffset
00031386 <AmiBlitz3.ab2@5804>     CMPA.w #$0,A2
0003138A <AmiBlitz3.ab2@5805>      BEQ.w writeoffs__done
00031390 <AmiBlitz3.ab2@5806>     MOVEA.l newtypebase,A1
00031392 <AmiBlitz3.ab2@5807>     MOVEQ.l #$00,D1
00031396 <AmiBlitz3.ab2@5810>       CMPA.w #$0,A1
0003139A <AmiBlitz3.ab2@5811>       BEQ.w writeoffs__found
0003139E <AmiBlitz3.ab2@5812>       CMPA.l $A(A2),A1
000313A2 <AmiBlitz3.ab2@5813>        BEQ.w writeoffs__found
000313A4 <AmiBlitz3.ab2@5814>       ADDQ.w #1,D1
000313A6 <AmiBlitz3.ab2@5815>       MOVEA.l (A1),A1
000313AA <AmiBlitz3.ab2@5816> BRA.w writeoffs__loop2
000313AE <AmiBlitz3.ab2@5819>     MOVE.w $A(A2),-(A7)
000313B2 <AmiBlitz3.ab2@5820>     MOVE.w D1,$A(A2)
000313B6 <AmiBlitz3.ab2@5821>      BSR.w writeitem
000313BA <AmiBlitz3.ab2@5822>     MOVE.w (A7)+,$A(A2)
000313BC <AmiBlitz3.ab2@5823>     MOVEA.l (A2),A2
000313C0 <AmiBlitz3.ab2@5824> BRA.w writeoffs
000313C2 <AmiBlitz3.ab2@5827> RTS
000313C4 <AmiBlitz3.ab2@5831>   MOVEQ.l #$00,D0
000313C8 <AmiBlitz3.ab2@5834>   CMPA.w #$0,A2
000313CC <AmiBlitz3.ab2@5835>    BEQ.w countem__done
000313CE <AmiBlitz3.ab2@5836>   ADDQ.w #1,D0
000313D0 <AmiBlitz3.ab2@5837>   MOVEA.l (A2),A2
000313D4 <AmiBlitz3.ab2@5838> BRA.w countem__loop
000313DA <AmiBlitz3.ab2@5841>   MOVE.w D0,temp1
000313DC <AmiBlitz3.ab2@5842>   MOVE.l D7,D1
000313E2 <AmiBlitz3.ab2@5843>   MOVE.l #temp1,D2
000313E4 <AmiBlitz3.ab2@5844>   MOVEQ.l #$02,D3
000313E6 <AmiBlitz3.ab2@5845>   ADDQ.l #2,D6
000313EC <AmiBlitz3.ab2@5846>   MOVEA.l _dosbase,A6
000313F0 <AmiBlitz3.ab2@5847> JMP _Write(A6)
000313F6 <AmiBlitz3.ab2@5851>    TST.b resdisable
000313FA <AmiBlitz3.ab2@5852>    BEQ resmacs__l1
00031400 <AmiBlitz3.ab2@5853>    MOVE.l currentmacroaddr,a3
00031406 <AmiBlitz3.ab2@5854>    CMP.l #0,a3
0003140A <AmiBlitz3.ab2@5855>    BEQ resmacs__l1
0003140C <AmiBlitz3.ab2@5856>    MOVE.l (a3),a3
00031410 <AmiBlitz3.ab2@5857> BRA resmacs__l2
00031416 <AmiBlitz3.ab2@5860>   MOVEA.l macrobase,A3                                     ;??begin org code??
00031418 <AmiBlitz3.ab2@5863>   MOVEA.l A3,A2
0003141C <AmiBlitz3.ab2@5864>   BSR.w countem
00031420 <AmiBlitz3.ab2@5867>    CMPA.w #$0,A3
00031424 <AmiBlitz3.ab2@5868>    BEQ.w resmacs__done
00031426 <AmiBlitz3.ab2@5869>   MOVE.l D6,D5
00031428 <AmiBlitz3.ab2@5870>   MOVE.l (A3),-(A7)
0003142C <AmiBlitz3.ab2@5871>   MOVE.l $4(A3),-(A7)
0003142E <AmiBlitz3.ab2@5872>   MOVEQ.l #$00,D3
00031432 <AmiBlitz3.ab2@5873>   MOVE.b $C(A3),D3
00031434 <AmiBlitz3.ab2@5874>   ADDQ.w #1,D3
00031438 <AmiBlitz3.ab2@5875>   BCLR #$0,D3
0003143A <AmiBlitz3.ab2@5876>   ADD.l D3,D6                                              ;add len of struct
0003143E <AmiBlitz3.ab2@5877>   TST.w $8(A3)
00031442 <AmiBlitz3.ab2@5878>    BEQ.w resmacs__notext
00031446 <AmiBlitz3.ab2@5879>   MOVE.l D6,$4(A3)
00031448 <AmiBlitz3.ab2@5880>   MOVE.l D5,D2
0003144A <AmiBlitz3.ab2@5881>   ADDQ.l #4,D2
0003144E <AmiBlitz3.ab2@5882>    BSR.w addhunkoffset
00031450 <AmiBlitz3.ab2@5885>   MOVEQ.l #$00,D4
00031454 <AmiBlitz3.ab2@5886>   MOVE.w $8(A3),D4
00031456 <AmiBlitz3.ab2@5887>   ADDQ.w #1,D4
0003145A <AmiBlitz3.ab2@5888>   BCLR #$0,D4
0003145C <AmiBlitz3.ab2@5889>   ADD.l D4,D6
0003145E <AmiBlitz3.ab2@5890>   TST.l (A3)
00031462 <AmiBlitz3.ab2@5891>    BEQ.w resmacs__nomore
00031464 <AmiBlitz3.ab2@5892>   MOVE.l D6,(A3)
00031466 <AmiBlitz3.ab2@5893>   MOVE.l D5,D2
0003146A <AmiBlitz3.ab2@5894>    BSR.w addhunkoffset
0003146C <AmiBlitz3.ab2@5897>   MOVE.l A3,D2
0003146E <AmiBlitz3.ab2@5898>   MOVE.l D7,D1
00031474 <AmiBlitz3.ab2@5900>    MOVEA.l _dosbase,A6
00031478 <AmiBlitz3.ab2@5901>    JSR _Write(a6)
0003147A <AmiBlitz3.ab2@5902>   TST.l D4
0003147E <AmiBlitz3.ab2@5903>    BEQ.w resmacs__skip
00031480 <AmiBlitz3.ab2@5904>   MOVE.l (A7),D2
00031482 <AmiBlitz3.ab2@5905>   MOVE.l D4,D3
00031484 <AmiBlitz3.ab2@5906>   MOVE.l D7,D1
0003148A <AmiBlitz3.ab2@5908>     MOVEA.l _dosbase,A6
0003148E <AmiBlitz3.ab2@5909>    JSR _Write(A6)
00031492 <AmiBlitz3.ab2@5912>   MOVE.l (A7)+,$4(A3)
00031494 <AmiBlitz3.ab2@5913>   MOVE.l (A7)+,(A3)
00031496 <AmiBlitz3.ab2@5914>   MOVEA.l (A3),A3
0003149A <AmiBlitz3.ab2@5915> BRA.w resmacs__loop
0003149C <AmiBlitz3.ab2@5918> RTS
000314A2 <AmiBlitz3.ab2@5922>   TST.b resdisable
000314A6 <AmiBlitz3.ab2@5923>   BEQ restypes__l1
000314AC <AmiBlitz3.ab2@5924>   MOVE.l lastrestype,a3
000314B2 <AmiBlitz3.ab2@5925>   CMP.l #0,a3
000314B6 <AmiBlitz3.ab2@5926>   BEQ restypes__l1
000314B8 <AmiBlitz3.ab2@5927>   MOVE.l (a3),a3
000314BC <AmiBlitz3.ab2@5928> BRA restypes__l2
000314C2 <AmiBlitz3.ab2@5931>   MOVEA.l newtype_string,A3
000314C4 <AmiBlitz3.ab2@5934>   MOVEA.l A3,A2
000314C8 <AmiBlitz3.ab2@5935>    BSR.w countem
000314CC <AmiBlitz3.ab2@5938>    CMPA.w #$0,A3
000314D0 <AmiBlitz3.ab2@5939>    BEQ.w restypes__done
000314D2 <AmiBlitz3.ab2@5940>   MOVE.l D6,-(A7)
000314D6 <AmiBlitz3.ab2@5941>   MOVEA.l $4(A3),A2
000314D8 <AmiBlitz3.ab2@5942>   MOVEQ.l #$0E,D5
000314DC <AmiBlitz3.ab2@5943>    BSR.w writeoffs
000314DE <AmiBlitz3.ab2@5944>   MOVE.l (A7)+,D0
000314E2 <AmiBlitz3.ab2@5945>   MOVE.l $4(A3),-(A7)
000314E6 <AmiBlitz3.ab2@5946>   MOVE.l D0,$4(A3)
000314E8 <AmiBlitz3.ab2@5947>   MOVE.l D6,D2
000314EA <AmiBlitz3.ab2@5948>   ADDQ.l #4,D2
000314EE <AmiBlitz3.ab2@5949>    BSR.w addhunkoffset
000314F0 <AmiBlitz3.ab2@5950>   MOVEQ.l #$00,D3
000314F4 <AmiBlitz3.ab2@5951>   MOVE.b $A(A3),D3
000314F6 <AmiBlitz3.ab2@5952>   ADDQ.w #1,D3
000314FA <AmiBlitz3.ab2@5953>   BCLR #$0,D3
000314FC <AmiBlitz3.ab2@5954>   ADD.l D3,D6
000314FE <AmiBlitz3.ab2@5955>   MOVE.l A3,D2
00031500 <AmiBlitz3.ab2@5956>   MOVE.l D7,D1
00031506 <AmiBlitz3.ab2@5958>     MOVEA.l _dosbase,A6
0003150A <AmiBlitz3.ab2@5959>     JSR _Write(A6)
0003150E <AmiBlitz3.ab2@5960>   MOVE.l (A7)+,$4(A3)
00031510 <AmiBlitz3.ab2@5961>   MOVEA.l (A3),A3
00031514 <AmiBlitz3.ab2@5962> BRA.w restypes__loop
00031516 <AmiBlitz3.ab2@5965> RTS
0003151C <AmiBlitz3.ab2@5969>    TST.b resdisable
00031520 <AmiBlitz3.ab2@5970>    BEQ resconsts__l1
00031526 <AmiBlitz3.ab2@5971>    MOVE.l currentlabeladdr,a2
0003152C <AmiBlitz3.ab2@5972>    CMP.l #0,a2
00031530 <AmiBlitz3.ab2@5973>    BEQ resconsts__l1
00031532 <AmiBlitz3.ab2@5974>    MOVE.l (a2),a2
00031536 <AmiBlitz3.ab2@5975> BRA resconsts__l2
0003153C <AmiBlitz3.ab2@5978>    MOVEA.l labelbase,A2
0003153E <AmiBlitz3.ab2@5981>    MOVEQ.l #$00,D0
00031542 <AmiBlitz3.ab2@5984>    CMPA.w #$0,A2
00031546 <AmiBlitz3.ab2@5985>    BEQ.w resconsts__done
0003154E <AmiBlitz3.ab2@5986>   CMPI.l #$1,$4(A2)
00031552 <AmiBlitz3.ab2@5987>    BNE.w resconsts__next
00031554 <AmiBlitz3.ab2@5988>   ADDQ.w #1,D0
00031556 <AmiBlitz3.ab2@5991>   MOVEA.l (A2),A2
0003155A <AmiBlitz3.ab2@5992> BRA.w resconsts__loop
00031560 <AmiBlitz3.ab2@5995>   MOVE.w D0,temp1
00031562 <AmiBlitz3.ab2@5996>   MOVE.l D7,D1
00031568 <AmiBlitz3.ab2@5997>   MOVE.l #temp1,D2
0003156A <AmiBlitz3.ab2@5998>   MOVEQ.l #$02,D3
0003156C <AmiBlitz3.ab2@5999>   ADDQ.l #2,D6
00031572 <AmiBlitz3.ab2@6001>     MOVEA.l _dosbase,A6
00031576 <AmiBlitz3.ab2@6002>     JSR _Write(A6)
0003157C <AmiBlitz3.ab2@6003>    TST.b resdisable
00031580 <AmiBlitz3.ab2@6004>    BEQ resconsts__done_l1
00031586 <AmiBlitz3.ab2@6005>    MOVE.l currentlabeladdr,a2
0003158C <AmiBlitz3.ab2@6006>    CMP.l #0,a2
00031590 <AmiBlitz3.ab2@6007>    BEQ resconsts__done_l1
00031592 <AmiBlitz3.ab2@6008>    MOVE.l (a2),a2
00031596 <AmiBlitz3.ab2@6009> BRA resconsts__loop2
0003159C <AmiBlitz3.ab2@6012>    MOVEA.l labelbase,A2                                    ;write resident labels
000315A0 <AmiBlitz3.ab2@6015>    CMPA.w #$0,A2
000315A4 <AmiBlitz3.ab2@6016>    BEQ.w resconsts__done2
000315AC <AmiBlitz3.ab2@6017>   CMPI.l #$1,$4(A2)
000315B0 <AmiBlitz3.ab2@6018>    BNE.w resconsts__next2
000315B2 <AmiBlitz3.ab2@6019>    MOVEQ.l #$00,D3
000315B6 <AmiBlitz3.ab2@6020>   MOVE.b $12(A2),D3                                        ;length
000315B8 <AmiBlitz3.ab2@6021>   ADDQ.w #1,D3
000315BC <AmiBlitz3.ab2@6022>   BCLR #$0,D3
000315BE <AmiBlitz3.ab2@6023>   MOVE.l D6,D2
000315C0 <AmiBlitz3.ab2@6024>   ADD.l D3,D6
000315C2 <AmiBlitz3.ab2@6027>   MOVE.l (A2),-(A7)
000315C4 <AmiBlitz3.ab2@6028>   TST.l (A2)
000315C8 <AmiBlitz3.ab2@6029>    BEQ.w resconsts__nonext
000315CA <AmiBlitz3.ab2@6030>   MOVE.l D6,(A2)
000315CE <AmiBlitz3.ab2@6031>    BSR.w addhunkoffset
000315D0 <AmiBlitz3.ab2@6034>   MOVE.l A2,D2
000315D2 <AmiBlitz3.ab2@6035>   MOVE.l D7,D1
000315D8 <AmiBlitz3.ab2@6037>     MOVEA.l _dosbase,A6
000315DC <AmiBlitz3.ab2@6038>     JSR _Write(A6)
000315DE <AmiBlitz3.ab2@6039>   MOVE.l (A7)+,(A2)
000315E0 <AmiBlitz3.ab2@6042>   MOVEA.l (A2),A2
000315E4 <AmiBlitz3.ab2@6043> BRA.w resconsts__loop2
000315E6 <AmiBlitz3.ab2@6046> RTS
00031610 <AmiBlitz3.ab2@6050>    !basic
00031616 <AmiBlitz3.ab2@6051>     MOVE.l ptr_resfile,d0
00031626 <AmiBlitz3.ab2@6052>     resfileP.l = Peek.l(?ptr_resfile)
00031630 <AmiBlitz3.ab2@6053>     If resfileP
00031658 <AmiBlitz3.ab2@6054>       resfile$ = Peek.s(resfileP)
000316A4 <AmiBlitz3.ab2@6055>       tests.b = Instr(resfile$,"/")
000316F0 <AmiBlitz3.ab2@6056>       testc.b = Instr(resfile$,":")
00031712 <AmiBlitz3.ab2@6057>       If tests=0 AND testc=0
00031792 <AmiBlitz3.ab2@6058>         resfile$ = dos_AddPart{my_residentsdir$,resfile$}
000317A4 <AmiBlitz3.ab2@6059>         Poke.l ?ptr_resfile,&resfile$
000317AA <AmiBlitz3.ab2@6061>     Else
000317D8 <AmiBlitz3.ab2@6062>       error{"INTERNAL: Invalid pointer in ptr_resfile!"}
000317F6 <AmiBlitz3.ab2@6064>    !asm
000317F8 <AmiBlitz3.ab2@6065> RTS
000317FE <AmiBlitz3.ab2@6069>   MOVE.l A7,errstack
00031808 <AmiBlitz3.ab2@6071>   MOVE.l #next_resentry,errcont
00031810 <AmiBlitz3.ab2@6072>   MOVE.w #$FFFF,ezerr
00031814 <AmiBlitz3.ab2@6073>   BSR.w Aclearallvars
00031818 <AmiBlitz3.ab2@6074>   BSR.w free_residents
0003181E <AmiBlitz3.ab2@6076>   LEA residents_table,A5
00031820 <AmiBlitz3.ab2@6077>   MOVEQ.l #$07,D6
00031822 <AmiBlitz3.ab2@6080>     TST.b (A5)
00031826 <AmiBlitz3.ab2@6081>     BEQ.w next_resentry
0003182C <AmiBlitz3.ab2@6082>     MOVE.l A5,ptr_resfile
00031830 <AmiBlitz3.ab2@6083>     BSR check_residentpath
00031836 <AmiBlitz3.ab2@6084>     MOVE.l ptr_resfile,d1
0003183C <AmiBlitz3.ab2@6085>     MOVEA.l _dosbase,A6
00031840 <AmiBlitz3.ab2@6086>     JSR _LoadSeg(A6)
00031844 <AmiBlitz3.ab2@6087>     MOVE.l D0,$40(A5)
00031848 <AmiBlitz3.ab2@6088>     BNE.w reloadresident__yeah
0003184C <AmiBlitz3.ab2@6089>     BSR.w reserr
0003184E <AmiBlitz3.ab2@6092>     MOVEA.l D0,A3
00031850 <AmiBlitz3.ab2@6093>     ADDA.l A3,A3
00031852 <AmiBlitz3.ab2@6094>     ADDA.l A3,A3
00031854 <AmiBlitz3.ab2@6095>     ADDQ.w #4,A3                                           ;start of res
00031858 <AmiBlitz3.ab2@6096>     BSR.w JL_0_5A9E
0003185C <AmiBlitz3.ab2@6097>     BSR.w JL_0_5A62                                        ;add macros to list
00031860 <AmiBlitz3.ab2@6098>     BSR.w JL_0_5A32                                        ;read labels
00031864 <AmiBlitz3.ab2@6101>     LEA $44(A5),A5
00031868 <AmiBlitz3.ab2@6102>   DBF D6,reloadresident__loop
00031872 <AmiBlitz3.ab2@6107>   MOVE.l #free_residents,errcont
00031878 <AmiBlitz3.ab2@6109>   MOVEA.l newtype_string,A3
0003187A <AmiBlitz3.ab2@6110>   MOVEQ.l #$0B,D7
0003187E <AmiBlitz3.ab2@6111>   BSR.w checkclash
00031884 <AmiBlitz3.ab2@6113>   MOVEA.l macrobase,A3
00031886 <AmiBlitz3.ab2@6114>   MOVEQ.l #$d,D7
0003188A <AmiBlitz3.ab2@6115>   BSR.w checkclash
00031890 <AmiBlitz3.ab2@6117>   MOVEA.l firstconst,A3
00031892 <AmiBlitz3.ab2@6118>   MOVEQ.l #$19,D7
00031896 <AmiBlitz3.ab2@6119>   BSR.w checkclash
00031898 <AmiBlitz3.ab2@6122> RTS
0003189A <AmiBlitz3.ab2@6126>   MOVEA.l A3,A4
0003189E <AmiBlitz3.ab2@6129>     CMPA.w #$0,A4
000318A2 <AmiBlitz3.ab2@6130>     BEQ.w checkclash__done
000318A8 <AmiBlitz3.ab2@6132>     LEA ptr_parameterstore,A0
000318AC <AmiBlitz3.ab2@6133>     LEA $0(A4,D7.W),A1
000318AE <AmiBlitz3.ab2@6134>     MOVEQ.l #-$01,D2
000318B0 <AmiBlitz3.ab2@6137>       ADDQ.w #1,D2
000318B2 <AmiBlitz3.ab2@6138>       MOVE.b (A1)+,(A0)+
000318B6 <AmiBlitz3.ab2@6139>     BNE.w checkclash__loop2
000318B8 <AmiBlitz3.ab2@6140>     MOVEA.l A3,A2
000318BC <AmiBlitz3.ab2@6143>     BSR.w findlab
000318C0 <AmiBlitz3.ab2@6144>     BNE.w checkclash__next                                  ;not found
000318C2 <AmiBlitz3.ab2@6145>     CMPA.l A2,A4
000318C6 <AmiBlitz3.ab2@6146>     BEQ.w checkclash__l1
000318C8 <AmiBlitz3.ab2@6147>     MOVE.l a1,a5
000318CC <AmiBlitz3.ab2@6148> BRA clasherr
000318D0 <AmiBlitz3.ab2@6151> BRA.w checkclash__more
000318D2 <AmiBlitz3.ab2@6154>     MOVEA.l (A4),A4
000318D6 <AmiBlitz3.ab2@6155> BRA.w checkclash__loop
000318D8 <AmiBlitz3.ab2@6158> RTS
000318DE <AmiBlitz3.ab2@6162>   MOVEA.l _dosbase,A6
000318E4 <AmiBlitz3.ab2@6164>   LEA newtype_string,A0
000318EA <AmiBlitz3.ab2@6165>   MOVE.l A0,lastrestype
000318EC <AmiBlitz3.ab2@6166>   CLR.l (A0)
000318F2 <AmiBlitz3.ab2@6168>   LEA macrobase,A0
000318F8 <AmiBlitz3.ab2@6169>   MOVE.l A0,currentmacroaddr
000318FA <AmiBlitz3.ab2@6170>   CLR.l (A0)
00031900 <AmiBlitz3.ab2@6172>   LEA labelbase,A0
00031906 <AmiBlitz3.ab2@6173>   MOVE.l A0,currentlabeladdr
00031908 <AmiBlitz3.ab2@6174>   CLR.l (A0)
0003190E <AmiBlitz3.ab2@6175>   CLR.w rescnt
00031946 <AmiBlitz3.ab2@6179>   !ComData_SetB{comByte_DebugMode,debugmode}
0003194C <AmiBlitz3.ab2@6182>   LEA residents_table,A2
0003194E <AmiBlitz3.ab2@6183>   MOVEQ.l #$07,D2
00031952 <AmiBlitz3.ab2@6186>      MOVE.l $40(A2),D1
00031956 <AmiBlitz3.ab2@6187>      BEQ.w free_residents__next
0003195A <AmiBlitz3.ab2@6188>       CLR.l $40(A2)
00031960 <AmiBlitz3.ab2@6189>       MOVEA.l _dosbase,A6
00031964 <AmiBlitz3.ab2@6190>       JSR _UnLoadSeg(A6)
00031968 <AmiBlitz3.ab2@6193>      LEA $44(A2),A2
0003196C <AmiBlitz3.ab2@6194>    DBF D2,free_residents__loop
0003196E <AmiBlitz3.ab2@6196> RTS
00031970 <AmiBlitz3.ab2@6200>   MOVE.w (A3)+,D1
00031974 <AmiBlitz3.ab2@6201>   BEQ.w JL_0_5A60
0003197A <AmiBlitz3.ab2@6202>   MOVEA.l currentlabeladdr,A2
0003197C <AmiBlitz3.ab2@6203>   MOVE.l A3,(A2)
0003197E <AmiBlitz3.ab2@6204>   SUBQ.w #1,D1
00031980 <AmiBlitz3.ab2@6207>     MOVEA.l A3,A2
00031982 <AmiBlitz3.ab2@6208>     MOVEA.l (A3),A3
00031986 <AmiBlitz3.ab2@6209>   DBF D1,JL_0_5A42
00031988 <AmiBlitz3.ab2@6211>   CLR.l (a2)                                               ;bugfix for object
0003198E <AmiBlitz3.ab2@6212>   MOVE.l A2,currentlabeladdr
00031990 <AmiBlitz3.ab2@6213>   MOVEA.l A2,A3
00031992 <AmiBlitz3.ab2@6214>   MOVEQ.l #$00,D0
00031996 <AmiBlitz3.ab2@6215>   MOVE.b $12(A3),D0
00031998 <AmiBlitz3.ab2@6216>   ADDQ.w #1,D0
0003199C <AmiBlitz3.ab2@6217>   BCLR #$0,D0
0003199E <AmiBlitz3.ab2@6218>   ADDA.w D0,A3
000319A0 <AmiBlitz3.ab2@6221> RTS
000319A2 <AmiBlitz3.ab2@6225>   MOVE.w (A3)+,D1
000319A6 <AmiBlitz3.ab2@6226>   BEQ.w JL_0_5A9C
000319AC <AmiBlitz3.ab2@6228>   MOVEA.l currentmacroaddr,A2
000319AE <AmiBlitz3.ab2@6229>   MOVE.l A3,(A2)
000319B0 <AmiBlitz3.ab2@6230>   SUBQ.w #1,D1
000319B2 <AmiBlitz3.ab2@6233>     MOVEA.l A3,A2
000319B4 <AmiBlitz3.ab2@6234>     MOVEA.l (A3),A3
000319B8 <AmiBlitz3.ab2@6235>   DBF D1,JL_0_5A72
000319BE <AmiBlitz3.ab2@6237>   MOVE.l A2,currentmacroaddr
000319C0 <AmiBlitz3.ab2@6238>   MOVEA.l A2,A3
000319C2 <AmiBlitz3.ab2@6239>   MOVEQ.l #$00,D0
000319C6 <AmiBlitz3.ab2@6240>   MOVE.b $C(A3),D0
000319C8 <AmiBlitz3.ab2@6241>   ADDQ.w #1,D0
000319CC <AmiBlitz3.ab2@6242>   BCLR #$0,D0
000319D0 <AmiBlitz3.ab2@6243>   MOVE.w $8(A3),D1
000319D2 <AmiBlitz3.ab2@6244>   ADDQ.w #1,D1
000319D6 <AmiBlitz3.ab2@6245>   BCLR #$0,D1
000319D8 <AmiBlitz3.ab2@6246>   ADDA.w D0,A3
000319DA <AmiBlitz3.ab2@6247>   ADDA.w D1,A3
000319DC <AmiBlitz3.ab2@6250> RTS
000319DE <AmiBlitz3.ab2@6254>   MOVE.w (A3)+,D1
000319E2 <AmiBlitz3.ab2@6255>   BEQ.w JL_0_5B38
000319E4 <AmiBlitz3.ab2@6256>   MOVE.w D1,-(A7)
000319E6 <AmiBlitz3.ab2@6257>   SUBQ.w #1,D1
000319EC <AmiBlitz3.ab2@6258>   MOVEA.l lastrestype,A2
000319EE <AmiBlitz3.ab2@6259>   MOVE.l A2,-(A7)
000319F0 <AmiBlitz3.ab2@6262>       MOVE.l (A3),D0
000319F4 <AmiBlitz3.ab2@6263>       BEQ.w JL_0_5ABC
000319F6 <AmiBlitz3.ab2@6264>       MOVEA.l D0,A3
000319FA <AmiBlitz3.ab2@6265> BRA.w JL_0_5AB0
000319FE <AmiBlitz3.ab2@6268>       MOVE.b $E(A3),D0
00031A00 <AmiBlitz3.ab2@6269>       ADDQ.w #1,D0
00031A04 <AmiBlitz3.ab2@6270>       BCLR #$0,D0
00031A06 <AmiBlitz3.ab2@6271>       ADDA.w D0,A3
00031A08 <AmiBlitz3.ab2@6272>       MOVE.l A3,(A2)
00031A0A <AmiBlitz3.ab2@6273>       MOVEA.l A3,A2
00031A0C <AmiBlitz3.ab2@6274>       MOVEQ.l #$00,D0
00031A10 <AmiBlitz3.ab2@6275>       MOVE.b $A(A3),D0
00031A12 <AmiBlitz3.ab2@6276>       ADDQ.w #1,D0
00031A16 <AmiBlitz3.ab2@6277>       BCLR #$0,D0
00031A18 <AmiBlitz3.ab2@6278>       ADDA.w D0,A3
00031A1C <AmiBlitz3.ab2@6279>   DBF D1,JL_0_5AB0
00031A1E <AmiBlitz3.ab2@6281>   MOVEA.l (A7)+,A0
00031A20 <AmiBlitz3.ab2@6282>   MOVEA.l (A0),A0
00031A24 <AmiBlitz3.ab2@6285>     CMPA.w #$0,A0
00031A28 <AmiBlitz3.ab2@6286>     BEQ.w JL_0_5B2A
00031A2C <AmiBlitz3.ab2@6287>     MOVEA.l $4(A0),A1
00031A30 <AmiBlitz3.ab2@6290>     CMPA.w #$0,A1
00031A34 <AmiBlitz3.ab2@6291>     BEQ.w JL_0_5B24
00031A38 <AmiBlitz3.ab2@6292>     MOVE.w $A(A1),D0
00031A3E <AmiBlitz3.ab2@6293>     MOVEA.l newtypebase,A4
00031A42 <AmiBlitz3.ab2@6294>     CMP.w #$7,D0
00031A46 <AmiBlitz3.ab2@6295>     BCS.w JL_0_5B0E
00031A4C <AmiBlitz3.ab2@6296>     SUB.w rescnt,D0
00031A4E <AmiBlitz3.ab2@6299>     SUBQ.w #1,D0
00031A52 <AmiBlitz3.ab2@6300>     BMI.w JL_0_5B1A
00031A54 <AmiBlitz3.ab2@6303>        MOVEA.l (A4),A4
00031A58 <AmiBlitz3.ab2@6304>   DBF D0,JL_0_5B14
00031A5C <AmiBlitz3.ab2@6307>     MOVE.l A4,$A(A1)
00031A5E <AmiBlitz3.ab2@6308>     MOVEA.l (A1),A1
00031A62 <AmiBlitz3.ab2@6309> BRA.w JL_0_5AEE
00031A64 <AmiBlitz3.ab2@6312>     MOVEA.l (A0),A0
00031A68 <AmiBlitz3.ab2@6313> BRA.w JL_0_5AE2
00031A6A <AmiBlitz3.ab2@6316>   MOVE.w (A7)+,D0
00031A70 <AmiBlitz3.ab2@6317>   ADD.w D0,rescnt
00031A76 <AmiBlitz3.ab2@6318>   MOVE.l A2,lastrestype
00031A78 <AmiBlitz3.ab2@6321> RTS
00031A7E <AmiBlitz3.ab2@6325>   LEA tokens,A0
00031A82 <AmiBlitz3.ab2@6326>   MOVE.w #$003A,D0                                         ; $003A : 58 dec
00031A84 <AmiBlitz3.ab2@6329>     MOVEA.l (A0),A0
00031A88 <AmiBlitz3.ab2@6330>   DBF D0,JL_0_5BD0
00031A8E <AmiBlitz3.ab2@6332>   MOVEA.l #asmpnts,A1                                      ;create tokentab
00031A92 <AmiBlitz3.ab2@6333>   MOVE.w #$0076,D0                                         ; $0076 : 118 dec
00031A96 <AmiBlitz3.ab2@6336>       LEA $6(A0),A2
00031A98 <AmiBlitz3.ab2@6339>         TST.b (A2)+
00031A9C <AmiBlitz3.ab2@6340>       BNE.w JL_0_5BE4
00031A9E <AmiBlitz3.ab2@6343>         TST.b (A2)+
00031AA2 <AmiBlitz3.ab2@6344>       BNE.w JL_0_5BEA
00031AA4 <AmiBlitz3.ab2@6346>       ADDQ.w #1,A2
00031AA6 <AmiBlitz3.ab2@6347>       EXG.l D1,A2
00031AAA <AmiBlitz3.ab2@6348>       BCLR #$0,D1
00031AAC <AmiBlitz3.ab2@6349>       EXG.l D1,A2
00031AAE <AmiBlitz3.ab2@6350>       MOVE.l A2,(A1)+
00031AB0 <AmiBlitz3.ab2@6351>       MOVEA.l (A0),A0
00031AB4 <AmiBlitz3.ab2@6352>   DBF D0,JL_0_5BE0
00031AB6 <AmiBlitz3.ab2@6353> RTS
00031ABA <AmiBlitz3.ab2@6357>   BSR.w asmconst
00031ABC <AmiBlitz3.ab2@6358>   MOVEQ.l #$0B,D5
00031ABE <AmiBlitz3.ab2@6359> RTS
00031AC0 <AmiBlitz3.ab2@6362> unmove:  Ds.w 1
00031AC4 <AmiBlitz3.ab2@6366>   MOVE.w #$48E7,D1
00031AC8 <AmiBlitz3.ab2@6367>   BSR.w writeword                                          ;movem.l -(a7)
00031ACC <AmiBlitz3.ab2@6368>   MOVE.w #$000F,D2
00031ACE <AmiBlitz3.ab2@6369>   SUB.w D4,D2
00031AD0 <AmiBlitz3.ab2@6370>   MOVEQ.l #-$01,D1
00031AD2 <AmiBlitz3.ab2@6371>   BCLR D2,D1
00031AD6 <AmiBlitz3.ab2@6372>   BSR.w writeword
00031AD8 <AmiBlitz3.ab2@6373>   MOVEQ.l #-$01,D1
00031ADA <AmiBlitz3.ab2@6374>   BCLR D4,D1
00031AE0 <AmiBlitz3.ab2@6375>   MOVE.w D1,unmove
00031AE2 <AmiBlitz3.ab2@6376> RTS
00031AE6 <AmiBlitz3.ab2@6380>   MOVE.w #$4CDF,D1
00031AEA <AmiBlitz3.ab2@6381>   BSR.w writeword
00031AEE <AmiBlitz3.ab2@6382>   MOVE.w unmove(PC),D1
00031AF2 <AmiBlitz3.ab2@6383> BRA.w writeword
00031AF6 <AmiBlitz3.ab2@6396>   BSR.w JL_0_5D22
00031AFA <AmiBlitz3.ab2@6397>   CMP.w #$2C,D0                                            ;#','
00031AFE <AmiBlitz3.ab2@6398>    BNE.w syntaxerr
00031B04 <AmiBlitz3.ab2@6399>   MOVE.l #$48E7FFFE,D1                                     ;movem to stack
00031B08 <AmiBlitz3.ab2@6400>    BSR.w writelong
00031B0A <AmiBlitz3.ab2@6401>   MOVE.w D4,D1
00031B0E <AmiBlitz3.ab2@6402>   ORI.w #$2F00,D1
00031B12 <AmiBlitz3.ab2@6403>    BSR.w writeword
00031B16 <AmiBlitz3.ab2@6404>    BSR.w get1bytemain
00031B1A <AmiBlitz3.ab2@6405>    BSR.w getparameter
00031B1E <AmiBlitz3.ab2@6406>    BSR.w JL_0_8E3C
00031B22 <AmiBlitz3.ab2@6407>    BSR.w calcvar
00031B26 <AmiBlitz3.ab2@6408>    BTST #$E,D2
00031B2A <AmiBlitz3.ab2@6409>    BEQ.w JL_0_5C80
00031B2E <AmiBlitz3.ab2@6412>    MOVE.b #$3,D2
00031B32 <AmiBlitz3.ab2@6413> BRA.w JL_0_5C8E
00031B34 <AmiBlitz3.ab2@6416>   TST.b D2
00031B38 <AmiBlitz3.ab2@6417>    BEQ.w JL_0_5C78
00031B3C <AmiBlitz3.ab2@6418>   CMP.b #$7,D2
00031B40 <AmiBlitz3.ab2@6419>    BEQ.w JL_0_5C78
00031B44 <AmiBlitz3.ab2@6422>   BTST #$F,D2
00031B48 <AmiBlitz3.ab2@6423>    BNE.w JL_0_5CA4
00031B4C <AmiBlitz3.ab2@6424>   MOVE.w #$45ED,D1                                         ;lea x(a5),a2
00031B50 <AmiBlitz3.ab2@6425>    BSR.w writeword
00031B52 <AmiBlitz3.ab2@6426>   MOVE.w D3,D1
00031B56 <AmiBlitz3.ab2@6427>    BSR.w writeword
00031B5A <AmiBlitz3.ab2@6430>   MOVE.w #$201F,D1                                         ;move.l (a7)+,d0
00031B5E <AmiBlitz3.ab2@6431>    BSR.w writeword
00031B62 <AmiBlitz3.ab2@6432>   MOVE.w #$1480,D1
00031B66 <AmiBlitz3.ab2@6433>   CMP.b #$1,D2
00031B6A <AmiBlitz3.ab2@6434>    BEQ.w JL_0_5CC8
00031B6E <AmiBlitz3.ab2@6435>   EORI.w #$3000,D1
00031B72 <AmiBlitz3.ab2@6436>   CMP.b #$2,D2
00031B76 <AmiBlitz3.ab2@6437>    BNE.w JL_0_5CC8
00031B7A <AmiBlitz3.ab2@6438>   ORI.w #$1000,D1
00031B7E <AmiBlitz3.ab2@6441>   BSR.w writeword
00031B84 <AmiBlitz3.ab2@6442>   MOVE.l #$4CDF7FFF,D1
00031B88 <AmiBlitz3.ab2@6443> BRA.w writelong
00031B8C <AmiBlitz3.ab2@6447>   BSR.w JL_0_5D22
00031B90 <AmiBlitz3.ab2@6448>   CMP.w #$2C,D0
00031B94 <AmiBlitz3.ab2@6449>    BNE.w syntaxerr
00031B98 <AmiBlitz3.ab2@6450>    BSR.w regmovems
00031B9A <AmiBlitz3.ab2@6451>   MOVE.w D4,-(A7)
00031B9C <AmiBlitz3.ab2@6452>   MOVEQ.l #$03,D2
00031BA0 <AmiBlitz3.ab2@6453>    BSR.w eval
00031BA2 <AmiBlitz3.ab2@6454>   MOVE.w (A7)+,D1
00031BA6 <AmiBlitz3.ab2@6455>    BEQ.w JL_0_5D1A
00031BAA <AmiBlitz3.ab2@6456>   CMP.w #$8,D1
00031BAE <AmiBlitz3.ab2@6457>    BCC.w JL_0_5D0C
00031BB0 <AmiBlitz3.ab2@6458>   LSL.w #8,D1
00031BB2 <AmiBlitz3.ab2@6459>   LSL.w #1,D1
00031BB6 <AmiBlitz3.ab2@6460>   ORI.w #$2000,D1
00031BBA <AmiBlitz3.ab2@6461>    BSR.w writeword
00031BBE <AmiBlitz3.ab2@6462> BRA.w JL_0_5D1A
00031BC0 <AmiBlitz3.ab2@6465>   SUBQ.w #8,D1
00031BC2 <AmiBlitz3.ab2@6466>   LSL.w #8,D1
00031BC4 <AmiBlitz3.ab2@6467>   LSL.w #1,D1
00031BC8 <AmiBlitz3.ab2@6468>   ORI.w #$2040,D1
00031BCC <AmiBlitz3.ab2@6469>   BSR.w writeword
00031BD0 <AmiBlitz3.ab2@6472> BRA.w dounmove
00031BD4 <AmiBlitz3.ab2@6476>   BSR.w get1bytemain
00031BD8 <AmiBlitz3.ab2@6479>   ORI.w #$20,D0
00031BDC <AmiBlitz3.ab2@6480>   CMP.w #$64,D0
00031BE0 <AmiBlitz3.ab2@6481>    BEQ.w JL_0_5D4E
00031BE4 <AmiBlitz3.ab2@6482>   CMP.w #$61,D0
00031BE8 <AmiBlitz3.ab2@6483>    BNE.w syntaxerr
00031BEC <AmiBlitz3.ab2@6484>    BSR.w JL_0_5D4E
00031BEE <AmiBlitz3.ab2@6485>   ADDQ.w #8,D4
00031BF0 <AmiBlitz3.ab2@6486> RTS
00031C1C <AmiBlitz3.ab2@6490>   !fget                                                   ;bsr.w get1bytemain
00031C20 <AmiBlitz3.ab2@6492>   ORI.w #$20,D0
00031C24 <AmiBlitz3.ab2@6495>   CMP.w #$61,D0
00031C28 <AmiBlitz3.ab2@6496>   BNE.w syntaxerr
00031C54 <AmiBlitz3.ab2@6499>   !fget                                                    ;bsr.w get1bytemain
00031C58 <AmiBlitz3.ab2@6500>   SUBI.w #$30,D0
00031C5C <AmiBlitz3.ab2@6501>    BMI.w syntaxerr
00031C60 <AmiBlitz3.ab2@6502>   CMP.w #$7,D0
00031C64 <AmiBlitz3.ab2@6503>    BHI.w syntaxerr
00031C66 <AmiBlitz3.ab2@6504>   MOVE.w D0,D4
00031C92 <AmiBlitz3.ab2@6505>   !fget
00031C94 <AmiBlitz3.ab2@6506> RTS                                                        ;bra.w get1bytemain
00031C96 <AmiBlitz3.ab2@6510>   ADDQ.w #8,D4
00031C98 <AmiBlitz3.ab2@6513>   MOVEQ.l #$00,D5
00031C9C <AmiBlitz3.ab2@6514>   SUBI.w #$30,D4
00031CA0 <AmiBlitz3.ab2@6517>   CMP.w #$2D,D0
00031CA4 <AmiBlitz3.ab2@6518>    BEQ.w JL_0_5D9E
00031CA8 <AmiBlitz3.ab2@6519>   CMP.w #$2F,D0
00031CAC <AmiBlitz3.ab2@6520>    BEQ.w JL_0_5D8C
00031CB0 <AmiBlitz3.ab2@6521> BRA.w syntaxerr
00031CB2 <AmiBlitz3.ab2@6524>   BSET D4,D5
00031CB4 <AmiBlitz3.ab2@6527>   MOVE.w D5,D4
00031CB6 <AmiBlitz3.ab2@6528>   MOVEQ.l #$0F,D5
00031CB8 <AmiBlitz3.ab2@6529> RTS
00031CBA <AmiBlitz3.ab2@6532>   BSET D4,D5
00031CBE <AmiBlitz3.ab2@6533>   BSR.w JL_0_5D1E
00031CD0 <AmiBlitz3.ab2@6534>   !compare3                                                ;bsr.w JL_0_5FC0
00031CD4 <AmiBlitz3.ab2@6535>   BNE.w JL_0_5D70
00031CD8 <AmiBlitz3.ab2@6536> BRA.w JL_0_5D84
00031CDA <AmiBlitz3.ab2@6539>   MOVE.w D4,D1
00031CDE <AmiBlitz3.ab2@6540>    BSR.w JL_0_5D1E
00031CE0 <AmiBlitz3.ab2@6541>   CMP.w D4,D1
00031CE4 <AmiBlitz3.ab2@6542>    BLS.w JL_0_5DAC
00031CE6 <AmiBlitz3.ab2@6543>   EXG.l D4,D1
00031CE8 <AmiBlitz3.ab2@6546>   BSET D1,D5
00031CEA <AmiBlitz3.ab2@6547>   ADDQ.w #1,D1
00031CEC <AmiBlitz3.ab2@6548>   CMP.w D4,D1
00031CF0 <AmiBlitz3.ab2@6549>    BLS.w JL_0_5DAC
00031D02 <AmiBlitz3.ab2@6550>   !compare3                                                ;bsr.w JL_0_5FC0
00031D06 <AmiBlitz3.ab2@6551>   BNE.w JL_0_5D70
00031D0A <AmiBlitz3.ab2@6552> BRA.w JL_0_5D86
00031D0C <AmiBlitz3.ab2@6555>   MOVEA.l A5,A4                                            ;bsr.w get1bytemain
00031D38 <AmiBlitz3.ab2@6556>    !fget
00031D3C <AmiBlitz3.ab2@6557>   CMP.w #$23,D0
00031D40 <AmiBlitz3.ab2@6558>    BEQ.w getimm
00031D44 <AmiBlitz3.ab2@6559>   CMP.w #$28,D0
00031D48 <AmiBlitz3.ab2@6560>    BEQ.w JL_0_5DFE
00031D4C <AmiBlitz3.ab2@6561>   CMP.w #$2D,D0
00031D50 <AmiBlitz3.ab2@6562>    BNE.w JL_0_5E20
00031D7C <AmiBlitz3.ab2@6563>    !fget                                                   ;bsr.w get1bytemain       -(
00031D80 <AmiBlitz3.ab2@6564>   CMP.w #$28,D0
00031D84 <AmiBlitz3.ab2@6565>    BNE.w JL_0_5F4E
00031D88 <AmiBlitz3.ab2@6566>    BSR.w JL_0_5D3E
00031D8C <AmiBlitz3.ab2@6567>   CMP.w #$29,D0
00031D90 <AmiBlitz3.ab2@6568>    BNE.w syntaxerr
00031D92 <AmiBlitz3.ab2@6569>   MOVEQ.l #$04,D5
00031DBE <AmiBlitz3.ab2@6570>   !fget                                                    ;bsr.w get1bytemain
00031DC0 <AmiBlitz3.ab2@6571> RTS
00031DC4 <AmiBlitz3.ab2@6575>   BSR.w JL_0_5D3E
00031DC8 <AmiBlitz3.ab2@6576>   CMP.w #$29,D0
00031DCC <AmiBlitz3.ab2@6577>    BNE.w syntaxerr
00031DF8 <AmiBlitz3.ab2@6578>   !fget                                                    ;bsr.w get1bytemain
00031DFC <AmiBlitz3.ab2@6579>   CMP.w #$2B,D0
00031E00 <AmiBlitz3.ab2@6580>    BEQ.w JL_0_5E1A
00031E02 <AmiBlitz3.ab2@6581>   MOVEQ.l #$02,D5
00031E04 <AmiBlitz3.ab2@6582> RTS
00031E06 <AmiBlitz3.ab2@6586>   MOVEQ.l #$03,D5
00031E32 <AmiBlitz3.ab2@6587>   !fget                                                    ;bra.w get1bytemain
00031E34 <AmiBlitz3.ab2@6588> RTS
00031E38 <AmiBlitz3.ab2@6592>   ORI.w #$20,D0
00031E3A <AmiBlitz3.ab2@6593>   MOVE.w D0,D1                                            
00031E66 <AmiBlitz3.ab2@6594>    !fget                                                   ;bsr.w get1bytemain
00031E6A <AmiBlitz3.ab2@6595>   CMP.w #$64,D1
00031E6E <AmiBlitz3.ab2@6596>    BNE.w JL_0_5E6C
00031E72 <AmiBlitz3.ab2@6597>   CMP.w #$30,D0
00031E76 <AmiBlitz3.ab2@6598>    BCS.w JL_0_5EAE
00031E7A <AmiBlitz3.ab2@6599>   CMP.w #$37,D0
00031E7E <AmiBlitz3.ab2@6600>    BHI.w JL_0_5EAE
00031E80 <AmiBlitz3.ab2@6601>   MOVE.w D0,D4
00031EAC <AmiBlitz3.ab2@6602>    !fget                                                   ;bsr.w get1bytemain
00031EBE <AmiBlitz3.ab2@6603>    !compare3                                               ;bsr.w JL_0_5FC0
00031EC2 <AmiBlitz3.ab2@6604>    BEQ.w JL_0_5E64
00031EC6 <AmiBlitz3.ab2@6605>   CMP.w #$2D,D0
00031ECA <AmiBlitz3.ab2@6606>    BEQ.w JL_0_5D6A
00031ECE <AmiBlitz3.ab2@6607>   CMP.w #$2F,D0
00031ED2 <AmiBlitz3.ab2@6608>    BEQ.w JL_0_5D6A
00031ED6 <AmiBlitz3.ab2@6609> BRA.w JL_0_5EB8
00031ED8 <AmiBlitz3.ab2@6612>   MOVEQ.l #$00,D5
00031EDC <AmiBlitz3.ab2@6613>   SUBI.w #$30,D4
00031EDE <AmiBlitz3.ab2@6614> RTS
00031EE2 <AmiBlitz3.ab2@6617>    CMP.w #$61,D1
00031EE6 <AmiBlitz3.ab2@6618>    BNE.w JL_0_5EAE
00031EEA <AmiBlitz3.ab2@6619>   CMP.w #$30,D0
00031EEE <AmiBlitz3.ab2@6620>    BCS.w JL_0_5EAE
00031EF2 <AmiBlitz3.ab2@6621>   CMP.w #$37,D0
00031EF6 <AmiBlitz3.ab2@6622>    BHI.w JL_0_5EAE
00031EF8 <AmiBlitz3.ab2@6623>   MOVE.w D0,D4
00031F24 <AmiBlitz3.ab2@6624>    !fget                                                   ;bsr.w get1bytemain
00031F36 <AmiBlitz3.ab2@6625>    !compare3                                               ;bsr.w JL_0_5FC0
00031F3A <AmiBlitz3.ab2@6626>    BEQ.w JL_0_5EA6
00031F3E <AmiBlitz3.ab2@6627>   CMP.w #$2D,D0
00031F42 <AmiBlitz3.ab2@6628>    BEQ.w JL_0_5D68                                         ;movem
00031F46 <AmiBlitz3.ab2@6629>   CMP.w #$2F,D0
00031F4A <AmiBlitz3.ab2@6630>    BEQ.w JL_0_5D68
00031F4E <AmiBlitz3.ab2@6631> BRA.w JL_0_5EB8
00031F50 <AmiBlitz3.ab2@6634>   MOVEQ.l #1,d5
00031F54 <AmiBlitz3.ab2@6635>   SUBI.w #$30,D4
00031F58 <AmiBlitz3.ab2@6637> BRA 'l10
00031F5A <AmiBlitz3.ab2@6638>   ADDQ.w #8,d4
00031F5C <AmiBlitz3.ab2@6639>   MOVEQ #0,d5
00031F5E <AmiBlitz3.ab2@6640>   BSET d4,d5
00031F60 <AmiBlitz3.ab2@6641>   MOVE.w d5,d4
00031F62 <AmiBlitz3.ab2@6642>   MOVEQ.l #$0f,D5                                          ;01
00031F64 <AmiBlitz3.ab2@6645> RTS
00031F68 <AmiBlitz3.ab2@6649>   ORI.w #$20,D0
00031F6A <AmiBlitz3.ab2@6650>   MOVE.w D0,D4
00031F96 <AmiBlitz3.ab2@6651>    !fget                                                   ;bsr.w get1bytemain
00031FA8 <AmiBlitz3.ab2@6654>   !compare3                                                ;bsr.w JL_0_5FC0
00031FAC <AmiBlitz3.ab2@6655>    BNE.w JL_0_5EF2
00031FB0 <AmiBlitz3.ab2@6656>   CMP.w #$73,D1
00031FB4 <AmiBlitz3.ab2@6657>    BNE.w JL_0_5EF2
00031FB8 <AmiBlitz3.ab2@6658>   CMP.w #$70,D4
00031FBC <AmiBlitz3.ab2@6659>    BNE.w JL_0_5EDE
00031FCE <AmiBlitz3.ab2@6660>    !compare3                                               ;bsr.w JL_0_5FC0
00031FD2 <AmiBlitz3.ab2@6661>    BNE.w JL_0_5F4E
00031FD4 <AmiBlitz3.ab2@6662>   MOVEQ.l #$07,D4
00031FD6 <AmiBlitz3.ab2@6663>   MOVEQ.l #$01,D5
00031FD8 <AmiBlitz3.ab2@6664> RTS
00031FDC <AmiBlitz3.ab2@6668>   CMP.w #$72,D4
00031FE0 <AmiBlitz3.ab2@6669>    BNE.w JL_0_5F4E
00031FF2 <AmiBlitz3.ab2@6670>    !compare3                                               ;bsr.w JL_0_5FC0
00031FF6 <AmiBlitz3.ab2@6671>    BNE.w JL_0_5F4E
00031FF8 <AmiBlitz3.ab2@6672>   MOVEQ.l #$0D,D5
00031FFA <AmiBlitz3.ab2@6673> RTS
00031FFE <AmiBlitz3.ab2@6677>   ORI.w #$20,D0
00032002 <AmiBlitz3.ab2@6678>   CMP.w #$63,D1
00032006 <AmiBlitz3.ab2@6679>    BNE.w JL_0_5F22
0003200A <AmiBlitz3.ab2@6680>   CMP.w #$63,D4
0003200E <AmiBlitz3.ab2@6681>    BNE.w JL_0_5F4E
00032012 <AmiBlitz3.ab2@6682>   CMP.w #$72,D0
00032016 <AmiBlitz3.ab2@6683>    BNE.w JL_0_5F4E
0003201A <AmiBlitz3.ab2@6684>    BSR.w get1bytemain                                      ;??wy not !fget
0003201E <AmiBlitz3.ab2@6685>    BEQ.w JL_0_5F1E
00032022 <AmiBlitz3.ab2@6686>   CMP.w #$2C,D0
00032026 <AmiBlitz3.ab2@6687>    BNE.w JL_0_5F4E
00032028 <AmiBlitz3.ab2@6690>   MOVEQ.l #$0C,D5
0003202A <AmiBlitz3.ab2@6691> RTS
0003202E <AmiBlitz3.ab2@6695>   CMP.w #$75,D1
00032032 <AmiBlitz3.ab2@6696>    BNE.w JL_0_5F4E
00032036 <AmiBlitz3.ab2@6697>   CMP.w #$73,D4
0003203A <AmiBlitz3.ab2@6698>    BNE.w JL_0_5F4E
0003203E <AmiBlitz3.ab2@6699>   CMP.w #$70,D0
00032042 <AmiBlitz3.ab2@6700>    BNE.w JL_0_5F4E
00032046 <AmiBlitz3.ab2@6701>    BSR.w get1bytemain                                      ;??wy not !fget
0003204A <AmiBlitz3.ab2@6702>    BEQ.w JL_0_5F4A
0003204E <AmiBlitz3.ab2@6703>   CMP.w #$2C,D0
00032052 <AmiBlitz3.ab2@6704>    BNE.w JL_0_5F4E
00032054 <AmiBlitz3.ab2@6707>   MOVEQ.l #$0E,D5
00032056 <AmiBlitz3.ab2@6708> RTS
00032058 <AmiBlitz3.ab2@6712>   MOVEA.l A4,A5
0003205C <AmiBlitz3.ab2@6713>    BSR.w asmconst
0003206E <AmiBlitz3.ab2@6714>    !compare3                                               ;bsr.w JL_0_5FC0
00032072 <AmiBlitz3.ab2@6715>    BEQ.w JL_0_5FB8
00032076 <AmiBlitz3.ab2@6716>   CMP.w #$2E,D0
0003207A <AmiBlitz3.ab2@6717>    BEQ.w JL_0_5FA0
0003207E <AmiBlitz3.ab2@6718>   CMP.w #$28,D0
00032082 <AmiBlitz3.ab2@6719>    BNE.w syntaxerr
00032086 <AmiBlitz3.ab2@6720>    BSR.w get1bytemain                                      ;??wy not !fget
0003208A <AmiBlitz3.ab2@6721>   ORI.w #$20,D0
0003208E <AmiBlitz3.ab2@6722>   CMP.w #$70,D0
00032092 <AmiBlitz3.ab2@6723>    BNE.w JL_0_5F98
00032096 <AmiBlitz3.ab2@6724>    BSR.w get1bytemain                                      ;??wy not !fget
0003209A <AmiBlitz3.ab2@6725>   ORI.w #$20,D0
0003209E <AmiBlitz3.ab2@6726>   CMP.w #$63,D0
000320A2 <AmiBlitz3.ab2@6727>    BNE.w syntaxerr
000320A6 <AmiBlitz3.ab2@6728>    BSR.w get1bytemain                                      ;??wy not !fget
000320AA <AmiBlitz3.ab2@6729>    BSR.w JL_0_5FD4
000320AC <AmiBlitz3.ab2@6730>   ADDQ.w #4,D5
000320AE <AmiBlitz3.ab2@6731> RTS
000320B2 <AmiBlitz3.ab2@6735>   BSR.w JL_0_5D46
000320B6 <AmiBlitz3.ab2@6736> BRA.w JL_0_5FD4
000320BA <AmiBlitz3.ab2@6740>    BSR.w get1bytemain                                     ;??wy not !fget
000320BE <AmiBlitz3.ab2@6741>   ORI.w #$20,D0
000320C2 <AmiBlitz3.ab2@6742>   CMP.w #$77,D0
000320C6 <AmiBlitz3.ab2@6743>    BEQ.w JL_0_5FBC
000320CA <AmiBlitz3.ab2@6744>   CMP.w #$6C,D0
000320CE <AmiBlitz3.ab2@6745>    BNE.w syntaxerr
000320D0 <AmiBlitz3.ab2@6748>   MOVEQ.l #$08,D5
000320D2 <AmiBlitz3.ab2@6749> RTS
000320D4 <AmiBlitz3.ab2@6753>   MOVEQ.l #$07,D5
000320D6 <AmiBlitz3.ab2@6754> RTS
000320D8 <AmiBlitz3.ab2@6758>   TST.w D0
000320DC <AmiBlitz3.ab2@6759>    BEQ.w JL_0_5FD2
000320E0 <AmiBlitz3.ab2@6760>   CMP.w #$3A,D0
000320E4 <AmiBlitz3.ab2@6761>    BEQ.w JL_0_5FD2
000320E8 <AmiBlitz3.ab2@6762>   CMP.w #$2C,D0
000320EA <AmiBlitz3.ab2@6765> RTS
000320EE <AmiBlitz3.ab2@6769>   CMP.w #$2C,D0
000320F2 <AmiBlitz3.ab2@6770>    BNE.w JL_0_6054
000320F6 <AmiBlitz3.ab2@6771>    BSR.w get1bytemain                                      ;??wy not !fget
000320FA <AmiBlitz3.ab2@6772>   ORI.w #$20,D0
000320FC <AmiBlitz3.ab2@6773>   MOVEQ.l #$00,D1
00032100 <AmiBlitz3.ab2@6774>   CMP.w #$64,D0
00032104 <AmiBlitz3.ab2@6775>    BEQ.w JL_0_5FFA
00032108 <AmiBlitz3.ab2@6776>   CMP.w #$61,D0
0003210C <AmiBlitz3.ab2@6777>    BNE.w syntaxerr
00032110 <AmiBlitz3.ab2@6778>   BSET #$F,D1
00032114 <AmiBlitz3.ab2@6781>    BSR.w get1bytemain                                      ;??wy not !fget
00032118 <AmiBlitz3.ab2@6782>   SUBI.w #$30,D0
0003211C <AmiBlitz3.ab2@6783>    BMI.w syntaxerr
00032120 <AmiBlitz3.ab2@6784>   CMP.w #$7,D0
00032124 <AmiBlitz3.ab2@6785>    BHI.w syntaxerr
00032126 <AmiBlitz3.ab2@6786>   LSL.w #8,D0
00032128 <AmiBlitz3.ab2@6787>   LSL.w #4,D0
0003212A <AmiBlitz3.ab2@6788>   OR.w D0,D1
0003212E <AmiBlitz3.ab2@6789>    BSR.w get1bytemain                                      ;??wy not !fget
00032132 <AmiBlitz3.ab2@6790>   CMP.w #$2E,D0
00032136 <AmiBlitz3.ab2@6791>    BNE.w JL_0_6040
0003213A <AmiBlitz3.ab2@6792>    BSR.w get1bytemain                                      ;??wy not !fget
0003213E <AmiBlitz3.ab2@6793>   ORI.w #$20,D0
00032142 <AmiBlitz3.ab2@6794>   CMP.w #$77,D0
00032146 <AmiBlitz3.ab2@6795>    BEQ.w JL_0_603C
0003214A <AmiBlitz3.ab2@6796>   CMP.w #$6C,D0
0003214E <AmiBlitz3.ab2@6797>    BNE.w syntaxerr
00032152 <AmiBlitz3.ab2@6798>   BSET #$B,D1
00032156 <AmiBlitz3.ab2@6801>    BSR.w get1bytemain                                      ;??wy not !fget
0003215A <AmiBlitz3.ab2@6804>    CMP.b #"*",d0                                           ;020 * Mode
0003215E <AmiBlitz3.ab2@6805>             BNE 'l1
00032162 <AmiBlitz3.ab2@6806>             BSR.w get1bytemain                             ;??wy not !fget
00032166 <AmiBlitz3.ab2@6807>             CMP.b #"2",d0
0003216A <AmiBlitz3.ab2@6808>             BNE 'l2
0003216E <AmiBlitz3.ab2@6809>             OR.w #$200,d1
00032172 <AmiBlitz3.ab2@6810> BRA 'l1b
00032176 <AmiBlitz3.ab2@6813>             CMP.b #"4",d0
0003217A <AmiBlitz3.ab2@6814>             BNE 'l3
0003217E <AmiBlitz3.ab2@6815>             OR.w #$400,d1
00032182 <AmiBlitz3.ab2@6816> BRA 'l1b
00032186 <AmiBlitz3.ab2@6819>             CMP.b #"8",d0
0003218A <AmiBlitz3.ab2@6820>             BNE syntaxerr
0003218E <AmiBlitz3.ab2@6821>             OR.w #$600,d1
00032192 <AmiBlitz3.ab2@6824>         BSR.w get1bytemain                                 ;??wy not !fget
00032196 <AmiBlitz3.ab2@6827>   CMP.w #$29,D0
0003219A <AmiBlitz3.ab2@6828>    BNE.w syntaxerr
000321A0 <AmiBlitz3.ab2@6829>   MOVE.w D1,extraword
000321A2 <AmiBlitz3.ab2@6830>   MOVEQ.l #$06,D5
000321A6 <AmiBlitz3.ab2@6831> BRA.w get1bytemain                                         ;??wy not !fget
000321AA <AmiBlitz3.ab2@6835>   CMP.w #$29,D0                                            ;")"
000321AE <AmiBlitz3.ab2@6836>    BNE.w syntaxerr
000321B0 <AmiBlitz3.ab2@6837>   MOVEQ.l #$05,D5
000321B4 <AmiBlitz3.ab2@6838> BRA.w get1bytemain                                         ;??wy not !fget
000321BA <AmiBlitz3.ab2@6845>   MOVEA.l asmbuff,A0
000321C0 <AmiBlitz3.ab2@6846>   MOVE.w ininclude,D1
000321C6 <AmiBlitz3.ab2@6847>   OR.w inmacro,D1
000321C8 <AmiBlitz3.ab2@6848>   MOVE.w D1,(A0)+                                          ;flag!
000321CC <AmiBlitz3.ab2@6849>    BNE.w copyconst
000321CE <AmiBlitz3.ab2@6850>   MOVE.l A5,-(A7)
000321D2 <AmiBlitz3.ab2@6851>    BSR.w copyconst
000321D8 <AmiBlitz3.ab2@6852>   MOVEA.l asmbuff,A0
000321DC <AmiBlitz3.ab2@6853>   CMP.w #$4,D1
000321E0 <AmiBlitz3.ab2@6854>    BLS.w asmconst__leave
000321E6 <AmiBlitz3.ab2@6855>   TST.w lc
000321EA <AmiBlitz3.ab2@6856>    BNE.w asmconst__leave
000321EC <AmiBlitz3.ab2@6857>   ADDQ.w #2,A0
000321EE <AmiBlitz3.ab2@6858>   MOVE.l (A7)+,(A0)+
000321F0 <AmiBlitz3.ab2@6859>   CLR.b (A0)
000321F8 <AmiBlitz3.ab2@6860>   MOVE.w #$0004,asmlen2                                    ;pointer + 0
000321FA <AmiBlitz3.ab2@6861> RTS
000321FC <AmiBlitz3.ab2@6865>   NOT.w (A0)
000321FE <AmiBlitz3.ab2@6866>   ADDQ.w #4,A7
00032200 <AmiBlitz3.ab2@6867> RTS
00032202 <AmiBlitz3.ab2@6870> lc:  Ds.w 1
00032208 <AmiBlitz3.ab2@6874>   CLR.w lc
0003220A <AmiBlitz3.ab2@6875>   MOVEQ.l #$00,D1
0003220C <AmiBlitz3.ab2@6878>    ADDQ.w #1,D1                                            ;label name
00032238 <AmiBlitz3.ab2@6879>    !fget                                                   ;bsr.w get1bytemain
0003223C <AmiBlitz3.ab2@6880>    BEQ.w copyconst__done
00032240 <AmiBlitz3.ab2@6881>    CMP.w #$22,d0
00032244 <AmiBlitz3.ab2@6882>    BNE.s copyconst__loop_l10
0003224A <AmiBlitz3.ab2@6883>    NOT.w instringon
0003224E <AmiBlitz3.ab2@6886>    CMP.w #":",d0
00032252 <AmiBlitz3.ab2@6887>    BNE.s copyconst__loop_l11
00032258 <AmiBlitz3.ab2@6888>    TST.w instringon
0003225C <AmiBlitz3.ab2@6889>    BEQ copyconst__done
0003225E <AmiBlitz3.ab2@6892>   TST.w D0
00032262 <AmiBlitz3.ab2@6893>   BPL.w copyconst__notmi
00032264 <AmiBlitz3.ab2@6894>   MOVE.w D0,-(A7)
00032266 <AmiBlitz3.ab2@6895>   LSR.w #8,D0
00032268 <AmiBlitz3.ab2@6896>   MOVE.b D0,(A0)+
0003226A <AmiBlitz3.ab2@6897>   MOVE.w (A7)+,D0
0003226C <AmiBlitz3.ab2@6898>   MOVE.b D0,(A0)+
0003226E <AmiBlitz3.ab2@6899>   ADDQ.w #1,D1
00032272 <AmiBlitz3.ab2@6900> BRA.s copyconst__loop
00032278 <AmiBlitz3.ab2@6903>    TST.w instringon
0003227C <AmiBlitz3.ab2@6904>    BNE.w copyconst__putbyte
00032282 <AmiBlitz3.ab2@6905>    TST.b _dcb
00032286 <AmiBlitz3.ab2@6906>    BNE copyconst__notmi_l10
0003228A <AmiBlitz3.ab2@6907>    CMP.w #$28,D0
0003228E <AmiBlitz3.ab2@6908>    BEQ.w copyconst__done
00032292 <AmiBlitz3.ab2@6911>    CMP.w #$2C,D0
00032296 <AmiBlitz3.ab2@6912>    BEQ.w copyconst__done
0003229A <AmiBlitz3.ab2@6913>    CMP.b #"'",D0
0003229E <AmiBlitz3.ab2@6914>    BNE.w copyconst__putbyte
000322A4 <AmiBlitz3.ab2@6915>    MOVE.w D0,lc                                     ;locallabels
000322A6 <AmiBlitz3.ab2@6916>    MOVE.l A1,-(A7)
000322AC <AmiBlitz3.ab2@6917>    LEA lastgloballabel,A1
000322AE <AmiBlitz3.ab2@6918>    TST.b (A1)
000322B2 <AmiBlitz3.ab2@6919>    BEQ.w nolocerr
000322B4 <AmiBlitz3.ab2@6922>   ADDQ.w #1,D1
000322B6 <AmiBlitz3.ab2@6923>   MOVE.b (A1)+,(A0)+
000322BA <AmiBlitz3.ab2@6924>    BNE.w copyconst__cloop
000322BC <AmiBlitz3.ab2@6925>   SUBQ.w #1,D1
000322BE <AmiBlitz3.ab2@6926>   SUBQ.w #1,A0
000322C0 <AmiBlitz3.ab2@6927>   MOVEA.l (A7)+,A1
000322C2 <AmiBlitz3.ab2@6930>   MOVE.b D0,(A0)+
000322C6 <AmiBlitz3.ab2@6931> BRA.w copyconst__loop
000322C8 <AmiBlitz3.ab2@6934>   CLR.b (A0)
000322CE <AmiBlitz3.ab2@6935>   MOVE.w D1,asmlen2
000322D0 <AmiBlitz3.ab2@6936> RTS
000322D6 <AmiBlitz3.ab2@6941>   CMP.l #$80ad,d0
000322DA <AmiBlitz3.ab2@6942>   BNE.s 'l12
000322E0 <AmiBlitz3.ab2@6943> JMP bssseg
000322E6 <AmiBlitz3.ab2@6946>   CMP.l #$807f,d0
000322EA <AmiBlitz3.ab2@6947>     BNE.s 'l13
000322F0 <AmiBlitz3.ab2@6948> JMP chipseg
000322F6 <AmiBlitz3.ab2@6951>   ADDQ.l #1,destpointer                                    ;even
000322FE <AmiBlitz3.ab2@6952>   BCLR #$0,destpointer+3
00032302 <AmiBlitz3.ab2@6953>   SUBI.w #$803C,D0
00032304 <AmiBlitz3.ab2@6954>   LSL.w #2,D0
0003230A <AmiBlitz3.ab2@6955>   MOVEA.l #asmpnts,A0
0003230E <AmiBlitz3.ab2@6956>   MOVEA.l $0(A0,D0.W),A0                                   ;begin inline assembler
00032314 <AmiBlitz3.ab2@6957>   MOVE.w D0,temp1
00032316 <AmiBlitz3.ab2@6958>   MOVE.l A0,-(A7)
00032318 <AmiBlitz3.ab2@6959>   MOVEQ.l #$01,D1
00032344 <AmiBlitz3.ab2@6960>    !fget                                                   ;bsr.w get1bytemain
00032348 <AmiBlitz3.ab2@6961>   CMP.w #$2E,D0
0003234C <AmiBlitz3.ab2@6962>    BNE.w JL_0_6184
00032378 <AmiBlitz3.ab2@6963>   !fget                                                    ;bsr.w get1bytemain
0003237C <AmiBlitz3.ab2@6964>   ORI.w #$20,D0
00032380 <AmiBlitz3.ab2@6965>   CMP.w #$77,D0                                            ;long
00032384 <AmiBlitz3.ab2@6966>    BEQ.w JL_0_618A
00032388 <AmiBlitz3.ab2@6967>   CMP.w #$62,D0                                            ;byte
0003238C <AmiBlitz3.ab2@6968>    BEQ.w JL_0_617A
00032390 <AmiBlitz3.ab2@6969>   CMP.w #$6C,D0                                            ;word
00032394 <AmiBlitz3.ab2@6970>    BEQ.w JL_0_6196
00032398 <AmiBlitz3.ab2@6971>   CMP.w #"s",d0
0003239C <AmiBlitz3.ab2@6972>   BNE syntaxerr
000323A0 <AmiBlitz3.ab2@6973> BRA.w JL_0_617A
000323A2 <AmiBlitz3.ab2@6976>   MOVEQ.l #$00,D1
000323A6 <AmiBlitz3.ab2@6977>   MOVE.w $8(A0),D0
000323AA <AmiBlitz3.ab2@6978> BRA.w JL_0_619E
000323AC <AmiBlitz3.ab2@6981>   MOVEQ.l #$04,D1
000323B0 <AmiBlitz3.ab2@6982> BRA.w JL_0_61AE
000323B2 <AmiBlitz3.ab2@6985>   MOVEQ.l #$04,D1
000323B6 <AmiBlitz3.ab2@6986>   MOVE.w $8(A0),D0
000323B8 <AmiBlitz3.ab2@6987>   LSR.w #4,D0
000323BC <AmiBlitz3.ab2@6988> BRA.w JL_0_619E
000323BE <AmiBlitz3.ab2@6991>   MOVEQ.l #$08,D1
000323C2 <AmiBlitz3.ab2@6992>   MOVE.w $8(A0),D0
000323C4 <AmiBlitz3.ab2@6993>   LSR.w #8,D0
000323C8 <AmiBlitz3.ab2@6996>    ANDI.w #$F,D0
000323CC <AmiBlitz3.ab2@6997>   CMP.w #$F,D0
000323D0 <AmiBlitz3.ab2@6998>    BNE.w 'cl60
000323D8 <AmiBlitz3.ab2@7001>    CMP.l #"MULS",-6(a0)
000323DC <AmiBlitz3.ab2@7002>    BNE 'c20
000323E2 <AmiBlitz3.ab2@7003>    MOVE.l #$4c000800,d1
000323E8 <AmiBlitz3.ab2@7004> JMP do32
000323F0 <AmiBlitz3.ab2@7007>    CMP.l #"MULU",-6(a0)
000323F4 <AmiBlitz3.ab2@7008>    BNE 'c30
000323FA <AmiBlitz3.ab2@7009>    MOVE.l #$4c000000,d1
00032400 <AmiBlitz3.ab2@7010> JMP do32
00032408 <AmiBlitz3.ab2@7013>    CMP.l #"DIVS",-6(a0)
0003240C <AmiBlitz3.ab2@7014>    BNE 'c40
00032412 <AmiBlitz3.ab2@7015>    MOVE.l #$4c400800,d1
00032418 <AmiBlitz3.ab2@7016> JMP do32
00032420 <AmiBlitz3.ab2@7019>    CMP.l #"DIVU",-6(a0)
00032424 <AmiBlitz3.ab2@7020>    BNE 'c50
0003242A <AmiBlitz3.ab2@7021>    MOVE.l #$4c400000,d1
00032430 <AmiBlitz3.ab2@7022> JMP do32
00032434 <AmiBlitz3.ab2@7025> BRA illsizeerr
00032460 <AmiBlitz3.ab2@7028>   !fget                                                    ;bsr.w get1bytemain
00032466 <AmiBlitz3.ab2@7031>   MOVE.w D1,asmsize
00032468 <AmiBlitz3.ab2@7032>   MOVEQ.l #-$01,D3
0003246C <AmiBlitz3.ab2@7033>    BSR.w reget
00032470 <AmiBlitz3.ab2@7034>    BEQ.w JL_0_6200
0003247A <AmiBlitz3.ab2@7035>   MOVE.l #ptr_parameterstore,asmbuff
00032484 <AmiBlitz3.ab2@7037>    MOVE.w oldqflag,instringon
0003248A <AmiBlitz3.ab2@7038>   MOVEA.l lastsourcepos,A5
0003248E <AmiBlitz3.ab2@7039>    BSR.w JL_0_5DC2
00032490 <AmiBlitz3.ab2@7040>   MOVE.l D4,D2                                             ;to src
00032492 <AmiBlitz3.ab2@7041>   MOVE.l D5,D3
0003249C <AmiBlitz3.ab2@7042>   MOVE.w asmlen2,asmlen
0003249E <AmiBlitz3.ab2@7043>   MOVEQ.l #-$01,D5
000324A8 <AmiBlitz3.ab2@7044>   MOVE.w extraword,extraword2
000324AC <AmiBlitz3.ab2@7045>   CMP.w #$2C,D0                                            ;','
000324B0 <AmiBlitz3.ab2@7046>    BNE.w JL_0_6200
000324BA <AmiBlitz3.ab2@7047>   MOVE.l #namebuff2,asmbuff
000324BE <AmiBlitz3.ab2@7048>    BSR.w JL_0_5DC2                                         ;dest
000324C0 <AmiBlitz3.ab2@7051>   MOVEA.l (A7)+,A0
000324C6 <AmiBlitz3.ab2@7052>   MOVEA.l destpointer,A1
000324C8 <AmiBlitz3.ab2@7053>   MOVEA.l A1,A4
000324CA <AmiBlitz3.ab2@7054>   ADDQ.w #2,A1
000324CC <AmiBlitz3.ab2@7055>   MOVE.w (A0),D1
000324CE <AmiBlitz3.ab2@7056>   TST.w D3
000324D2 <AmiBlitz3.ab2@7057>    BMI.w JL_0_639E
000324D6 <AmiBlitz3.ab2@7058>   MOVE.w $E(A0),D0
000324DA <AmiBlitz3.ab2@7059>    BPL.w JL_0_6264
000324DE <AmiBlitz3.ab2@7060>   BTST #$0,D0
000324E2 <AmiBlitz3.ab2@7061>    BEQ.w JL_0_6240
000324E6 <AmiBlitz3.ab2@7062>   CMP.w #$1,D5
000324EA <AmiBlitz3.ab2@7063>    BNE.w JL_0_6240
000324EE <AmiBlitz3.ab2@7064>   CMP.w #$E,D3
000324F2 <AmiBlitz3.ab2@7065>    BEQ.w JL_0_6264
000324F8 <AmiBlitz3.ab2@7066>   MOVE.w temp1,D0
000324FA <AmiBlitz3.ab2@7067>   ADDQ.w #4,D0
000324FE <AmiBlitz3.ab2@7068> BRA.w JL_0_6256
00032502 <AmiBlitz3.ab2@7071>   BTST #$1,D0
00032506 <AmiBlitz3.ab2@7072>    BEQ.w JL_0_6264
0003250A <AmiBlitz3.ab2@7073>   CMP.w #$B,D3
0003250E <AmiBlitz3.ab2@7074>    BNE.w JL_0_6264
00032514 <AmiBlitz3.ab2@7075>   MOVE.w temp1,D0
00032516 <AmiBlitz3.ab2@7078>   ADDQ.w #4,D0
0003251C <AmiBlitz3.ab2@7079>   MOVEA.l #asmpnts,A0
00032520 <AmiBlitz3.ab2@7080>   MOVEA.l $0(A0,D0.W),A0
00032522 <AmiBlitz3.ab2@7081>   MOVE.w (A0),D1
0003252C <AmiBlitz3.ab2@7084>   MOVE.l #ptr_parameterstore,buff1
00032536 <AmiBlitz3.ab2@7085>   MOVE.l #namebuff2,buff2
0003253A <AmiBlitz3.ab2@7086>   MOVE.l $A(A0),D0
0003253E <AmiBlitz3.ab2@7087>    BEQ.w JL_0_62DC
00032540 <AmiBlitz3.ab2@7088>   MOVEA.l D0,A3
00032546 <AmiBlitz3.ab2@7089>   MOVE.w asmsize,D6
00032548 <AmiBlitz3.ab2@7092>    JSR (A3)
0003254C <AmiBlitz3.ab2@7093>    BPL.w JL_0_629A
00032550 <AmiBlitz3.ab2@7094>   CMP.w #-$2,D0
00032554 <AmiBlitz3.ab2@7095>    BEQ.w illsizeerr
00032558 <AmiBlitz3.ab2@7096> BRA.w illeaerr
0003255C <AmiBlitz3.ab2@7099>   BEQ.w JL_0_62DC
0003255E <AmiBlitz3.ab2@7100>   EXG.l D2,D4
00032560 <AmiBlitz3.ab2@7101>   EXG.l D3,D5
00032566 <AmiBlitz3.ab2@7102>   MOVE.l extraword,D6
00032568 <AmiBlitz3.ab2@7103>   SWAP D6
0003256E <AmiBlitz3.ab2@7104>   MOVE.l D6,extraword
00032578 <AmiBlitz3.ab2@7105>   MOVE.l #namebuff2,buff1
00032582 <AmiBlitz3.ab2@7106>   MOVE.l #ptr_parameterstore,buff2
00032588 <AmiBlitz3.ab2@7107>   MOVE.w asmlen,D6
0003258E <AmiBlitz3.ab2@7108>   MOVE.w asmlen2,D7
00032594 <AmiBlitz3.ab2@7109>   MOVE.w D6,asmlen2
0003259A <AmiBlitz3.ab2@7110>   MOVE.w D7,asmlen
000325A4 <AmiBlitz3.ab2@7113>   MOVE.l buff1,asmbuff
000325A8 <AmiBlitz3.ab2@7114>   MOVE.w $E(A0),D0
000325AC <AmiBlitz3.ab2@7115>    BEQ.w JL_0_6348
000325B0 <AmiBlitz3.ab2@7116>    BMI.w JL_0_6348
000325B4 <AmiBlitz3.ab2@7117>    CMP.w #$7000,d1
000325B8 <AmiBlitz3.ab2@7118>    BNE 'skip
000325BC <AmiBlitz3.ab2@7119>    CMP.w #$b,d3
000325C0 <AmiBlitz3.ab2@7120>    BNE illeaerr
000325C4 <AmiBlitz3.ab2@7123>    CMP.w #$1,D0
000325C8 <AmiBlitz3.ab2@7124>    BNE.w JL_0_630E
000325CC <AmiBlitz3.ab2@7125>    CMP.w #$B,D3
000325D0 <AmiBlitz3.ab2@7126>    BNE.w JL_0_6348
000325D4 <AmiBlitz3.ab2@7129>    BSR.w insasm
000325D6 <AmiBlitz3.ab2@7130>   MOVE.w D4,D2
000325D8 <AmiBlitz3.ab2@7131>   MOVE.w D5,D3
000325DC <AmiBlitz3.ab2@7132> BRA.w JL_0_6364
000325E0 <AmiBlitz3.ab2@7135>    CMP.w #$2,D0
000325E4 <AmiBlitz3.ab2@7136>    BNE.w JL_0_6324
000325E8 <AmiBlitz3.ab2@7137>   CMP.w #$8,D3
000325EC <AmiBlitz3.ab2@7138>    BNE.w illeaerr
000325EE <AmiBlitz3.ab2@7139>   MOVEQ.l #$09,D3
000325F2 <AmiBlitz3.ab2@7140> BRA.w JL_0_6348
000325F6 <AmiBlitz3.ab2@7143>    CMP.w #$3,D0
000325FA <AmiBlitz3.ab2@7144>    BEQ.w JL_0_6302
000325FE <AmiBlitz3.ab2@7145>   CMP.w #$4,D0
00032602 <AmiBlitz3.ab2@7146>    BEQ.w JL_0_6302
00032606 <AmiBlitz3.ab2@7147>   CMP.w #$5,D0
0003260A <AmiBlitz3.ab2@7148>    BNE.w JL_0_6348
0003260E <AmiBlitz3.ab2@7149>   CMP.w #$8,D5
00032612 <AmiBlitz3.ab2@7150>    BNE.w illeaerr
00032614 <AmiBlitz3.ab2@7151>   OR.w D2,D1
00032616 <AmiBlitz3.ab2@7152>   MOVEQ.l #$09,D5
0003261A <AmiBlitz3.ab2@7155>   MOVE.w $2(A0),D6
0003261E <AmiBlitz3.ab2@7156>   MOVE.b $6(A0),D7
00032622 <AmiBlitz3.ab2@7157>   MOVEM.l D4-D5,-(A7)
00032628 <AmiBlitz3.ab2@7158>   MOVE.w extraword2,D4
0003262C <AmiBlitz3.ab2@7159>    BSR.w doea
00032630 <AmiBlitz3.ab2@7160>   MOVEM.l (A7)+,D2-D3
00032632 <AmiBlitz3.ab2@7161>   TST.w D3
00032636 <AmiBlitz3.ab2@7164>     BMI.w JL_0_6392
0003263C <AmiBlitz3.ab2@7165>   MOVE.w extraword,D4
00032640 <AmiBlitz3.ab2@7166>   MOVE.w $4(A0),D6
00032644 <AmiBlitz3.ab2@7167>   MOVE.b $7(A0),D7
0003264E <AmiBlitz3.ab2@7168>   MOVE.l buff2,asmbuff
00032658 <AmiBlitz3.ab2@7169>   MOVE.w asmlen2,asmlen
0003265C <AmiBlitz3.ab2@7170>    BSR.w doea
00032660 <AmiBlitz3.ab2@7171> BRA.w JL_0_63AA
00032664 <AmiBlitz3.ab2@7174>   MOVE.w $4(A0),D0
00032668 <AmiBlitz3.ab2@7175>    BNE.w illeaerr
0003266C <AmiBlitz3.ab2@7176> BRA.w JL_0_63AA
00032670 <AmiBlitz3.ab2@7180>   MOVE.w $2(A0),D0
00032674 <AmiBlitz3.ab2@7181>   OR.w $4(A0),D0
00032678 <AmiBlitz3.ab2@7182>    BNE.w illeaerr
0003267C <AmiBlitz3.ab2@7185>   MOVE.w $8(A0),D0
00032680 <AmiBlitz3.ab2@7186>   ANDI.w #$F000,D0
00032684 <AmiBlitz3.ab2@7187>   CMP.w #-$1000,D0
00032688 <AmiBlitz3.ab2@7188>    BEQ.w JL_0_63D2
0003268A <AmiBlitz3.ab2@7189>   LSR.w #8,D0
0003268C <AmiBlitz3.ab2@7190>   LSR.w #4,D0
00032690 <AmiBlitz3.ab2@7191>   MOVE.w $8(A0),D2
00032696 <AmiBlitz3.ab2@7192>   MOVE.w asmsize,D3
00032698 <AmiBlitz3.ab2@7193>   LSR.w D3,D2
0003269C <AmiBlitz3.ab2@7194>   ANDI.w #$F,D2
0003269E <AmiBlitz3.ab2@7195>   LSL.w D0,D2
000326A0 <AmiBlitz3.ab2@7196>   OR.w D2,D1
000326A6 <AmiBlitz3.ab2@7199>   CMPA.l destbufferend,A4
000326AA <AmiBlitz3.ab2@7200>    BCS.w JL_0_63E8
000326B2 <AmiBlitz3.ab2@7202>   MOVE.w #$FFFF,dontwrite
000326B6 <AmiBlitz3.ab2@7203> BRA.w JL_0_63EA
000326B8 <AmiBlitz3.ab2@7206>   MOVE.w D1,(A4)
000326BE <AmiBlitz3.ab2@7209>   MOVE.l A1,destpointer
000326C0 <AmiBlitz3.ab2@7210> RTS
000326C6 <AmiBlitz3.ab2@7214>   MOVE.l destpointer,-(A7)
000326CC <AmiBlitz3.ab2@7215>   MOVE.l A1,destpointer
000326D0 <AmiBlitz3.ab2@7216>    BSR.w addoff
000326D6 <AmiBlitz3.ab2@7217>   MOVEA.l destpointer,A1
000326DC <AmiBlitz3.ab2@7218>   MOVE.l (A7)+,destpointer
000326DE <AmiBlitz3.ab2@7219> RTS
000326E2 <AmiBlitz3.ab2@7223>   MOVEM.l d2-d6,-(a7)
000326E8 <AmiBlitz3.ab2@7224>   JSR stripspaces
000326EC <AmiBlitz3.ab2@7225>   CMP.b #"d",(a5)+
000326F0 <AmiBlitz3.ab2@7226>   BNE noreg
000326F2 <AmiBlitz3.ab2@7227>   MOVE.b (a5)+,d0
000326F6 <AmiBlitz3.ab2@7228>   CMP.b #$30,d0
000326FA <AmiBlitz3.ab2@7229>   BLT noreg
000326FE <AmiBlitz3.ab2@7230>   CMP.b #$37,d0
00032702 <AmiBlitz3.ab2@7231>   BGT noreg
00032706 <AmiBlitz3.ab2@7232>   SUB.b #$30,d0
00032708 <AmiBlitz3.ab2@7233>   MOVEQ #0,d3
0003270A <AmiBlitz3.ab2@7234>   MOVE.b d0,d3                                             ;reg1
0003270C <AmiBlitz3.ab2@7235>   ASL.l #8,d3
0003270E <AmiBlitz3.ab2@7236>   ASL.l #8,d3
00032714 <AmiBlitz3.ab2@7237>   JSR stripspaces
00032718 <AmiBlitz3.ab2@7238>   CMP.b #",",(a5)+
0003271C <AmiBlitz3.ab2@7239>   BNE noreg
00032722 <AmiBlitz3.ab2@7240>   JSR stripspaces
00032726 <AmiBlitz3.ab2@7241>   CMP.b #"d",(a5)+
0003272A <AmiBlitz3.ab2@7242>   BNE noreg
0003272C <AmiBlitz3.ab2@7243>   MOVE.b (a5)+,d0
00032730 <AmiBlitz3.ab2@7244>   CMP.b #$30,d0
00032734 <AmiBlitz3.ab2@7245>   BLT noreg
00032738 <AmiBlitz3.ab2@7246>   CMP.b #$37,d0
0003273C <AmiBlitz3.ab2@7247>   BGT noreg
00032740 <AmiBlitz3.ab2@7248>   SUB.b #$30,d0
00032742 <AmiBlitz3.ab2@7249>   MOVEQ #0,d4
00032744 <AmiBlitz3.ab2@7250>   MOVE.b d0,d4                                             ;reg2
00032746 <AmiBlitz3.ab2@7251>   ASL.l #8,d4
00032748 <AmiBlitz3.ab2@7252>   ASL.l #4,d4
0003274A <AmiBlitz3.ab2@7253>   OR.b d0,d1
0003274C <AmiBlitz3.ab2@7254>   OR.l d3,d1
0003274E <AmiBlitz3.ab2@7255>   OR.l d4,d1
00032754 <AmiBlitz3.ab2@7256>   JSR writelong
00032758 <AmiBlitz3.ab2@7257>   MOVEM.l (a7)+,d2-d6
0003275C <AmiBlitz3.ab2@7258>   MOVEM.l d1/a1-a3,-(a7)
00032760 <AmiBlitz3.ab2@7259> BRA exit
00032764 <AmiBlitz3.ab2@7263>   MOVEM.l (a7)+,d2-d6
0003276A <AmiBlitz3.ab2@7264>   LEA errtext,a0
0003276C <AmiBlitz3.ab2@7265>   MOVE.l a0,-(a7)
00032772 <AmiBlitz3.ab2@7266> JMP handle_compileerror
00032778 <AmiBlitz3.ab2@7275>   MOVE.w dontwrite,D1
0003277C <AmiBlitz3.ab2@7276>    BNE.w asmfixer__done
00032784 <AmiBlitz3.ab2@7277>   BTST #$7,make_smallestcode
00032788 <AmiBlitz3.ab2@7278>    BEQ.w asmfixer__go
0003278C <AmiBlitz3.ab2@7279>   MOVE.w pass(PC),D1
00032790 <AmiBlitz3.ab2@7280>    BEQ.w asmfixer__done
00032796 <AmiBlitz3.ab2@7283>   MOVEA.l templabel,A2                                     ;insert labels in Code
0003279E <AmiBlitz3.ab2@7284>   MOVE.b #1,curtemplabel
000327A6 <AmiBlitz3.ab2@7285>   MOVE.w #$FFFF,constmode
000327AC <AmiBlitz3.ab2@7286>   CLR.w regnum
000327B6 <AmiBlitz3.ab2@7287>           MOVE.l #forthstack,forthsp
000327C0 <AmiBlitz3.ab2@7288>           MOVE.l #precstack,precsp
000327C4 <AmiBlitz3.ab2@7289>    BSR.w prepstack
000327C6 <AmiBlitz3.ab2@7292>   MOVE.l A2,-(A7)
000327CA <AmiBlitz3.ab2@7293>    BSR.w chkstop
000327CC <AmiBlitz3.ab2@7294>   MOVEA.l (A7)+,A2
000327D0 <AmiBlitz3.ab2@7295>   CMPA.w #$0,A2
000327D4 <AmiBlitz3.ab2@7296>    BEQ.w asmfixer__done2
000327DA <AmiBlitz3.ab2@7297>    CLR.b iee
000327E0 <AmiBlitz3.ab2@7298>   MOVE.l A2,asmbuff
000327E4 <AmiBlitz3.ab2@7299>   LEA $10(A2),A5
000327E8 <AmiBlitz3.ab2@7300>   TST.b $F(A2)
000327EC <AmiBlitz3.ab2@7301>    BNE.w asmfixer__skipo
000327EE <AmiBlitz3.ab2@7302>   MOVEA.l (A5),A5                                          ;pointer to real text
000327F4 <AmiBlitz3.ab2@7305>    CLR.w asmtype
000327F8 <AmiBlitz3.ab2@7306>    CMP.b #".",(a5)
000327FC <AmiBlitz3.ab2@7307>    BNE.s asmfixer__skipo_l10
000327FE <AmiBlitz3.ab2@7308>    MOVE.l a2,-(a7)
00032800 <AmiBlitz3.ab2@7309>    ADDQ.l #1,a5
00032806 <AmiBlitz3.ab2@7310>    LEA newtypebase,a2
0003280A <AmiBlitz3.ab2@7311>    BSR getparameter2
0003280E <AmiBlitz3.ab2@7312>    BEQ.w syntaxerr
00032812 <AmiBlitz3.ab2@7313>    BSR findtype
00032816 <AmiBlitz3.ab2@7314>    BNE.w notypeerr
0003281A <AmiBlitz3.ab2@7315>    LEA $4(a2),a2
0003281E <AmiBlitz3.ab2@7316>    BSR getparameter2
00032822 <AmiBlitz3.ab2@7317>    BEQ.w syntaxerr
00032826 <AmiBlitz3.ab2@7318>    BSR.w findvariable2
0003282A <AmiBlitz3.ab2@7319>    BNE.w notypeerr
0003282E <AmiBlitz3.ab2@7320>    MOVE.w $4(a2),d3
00032830 <AmiBlitz3.ab2@7321>    EXT.l d3
00032834 <AmiBlitz3.ab2@7322> BRA asmfixer__skipo_l30b
00032838 <AmiBlitz3.ab2@7325>   CMP.b #"\",(a5)
0003283C <AmiBlitz3.ab2@7326>     BNE asmfixer__skipo_l20
0003283E <AmiBlitz3.ab2@7327>     ADDQ.l #1,a5
00032840 <AmiBlitz3.ab2@7328>    MOVE.l a2,-(a7)
00032842 <AmiBlitz3.ab2@7329>    MOVE.l a5,a4
00032848 <AmiBlitz3.ab2@7330>    LEA usedpath,a5
0003284C <AmiBlitz3.ab2@7331>    CMP.b #"*",(a5)
00032850 <AmiBlitz3.ab2@7332>    BNE asmfixer__skipo_lm1
00032852 <AmiBlitz3.ab2@7333>    ADDQ.l #1,a5
00032856 <AmiBlitz3.ab2@7336>    BSR.w getparameter2
0003285A <AmiBlitz3.ab2@7337>    BEQ.w syntaxerr
00032860 <AmiBlitz3.ab2@7338>    LEA varbase,A2
00032868 <AmiBlitz3.ab2@7339>    MOVE.b #1,newvariable
0003286C <AmiBlitz3.ab2@7340>    BSR.w findvariable
00032872 <AmiBlitz3.ab2@7341>    CLR.b newvariable
00032878 <AmiBlitz3.ab2@7342>    CMP.l #-1,d0
0003287C <AmiBlitz3.ab2@7343>    BEQ.w notypeerr
0003287E <AmiBlitz3.ab2@7344>    MOVE.l a4,a5
00032882 <AmiBlitz3.ab2@7345>    MOVE.l $a(a2),a2
00032886 <AmiBlitz3.ab2@7346>    LEA $4(a2),a2
0003288A <AmiBlitz3.ab2@7347>    BSR getparameter2
0003288E <AmiBlitz3.ab2@7348>    BEQ.w syntaxerr
00032892 <AmiBlitz3.ab2@7349>    BSR.w findvariable2
00032896 <AmiBlitz3.ab2@7350>    BNE.w notypeerr
0003289A <AmiBlitz3.ab2@7351>   MOVE.w $4(A2),D3
0003289C <AmiBlitz3.ab2@7352>   EXT.l D3
000328A2 <AmiBlitz3.ab2@7355>    CMP.b #"[",-1(a5)
000328A6 <AmiBlitz3.ab2@7356>    BNE asmfixer__skipo_l30c
000328A8 <AmiBlitz3.ab2@7357>    MOVEQ #0,d0
000328AA <AmiBlitz3.ab2@7358>    MOVE.b (a5)+,d0
000328AC <AmiBlitz3.ab2@7359>    MOVE.l d3,-(a7)
000328AE <AmiBlitz3.ab2@7360>    MOVEQ #0,d3
000328B4 <AmiBlitz3.ab2@7361>    JSR atoi
000328B6 <AmiBlitz3.ab2@7362>    MOVE.l (a7)+,d1
000328BA <AmiBlitz3.ab2@7363>    MOVE.l $a(a2),a2
000328BE <AmiBlitz3.ab2@7364>    MOVE.w 8(a2),d0
000328C0 <AmiBlitz3.ab2@7365>    MULS d0,d3
000328C2 <AmiBlitz3.ab2@7366>    ADD.l d1,d3
000328C4 <AmiBlitz3.ab2@7369>   MOVE.l (a7)+,a2
000328C8 <AmiBlitz3.ab2@7370> BRA asmfixer__oko
000328CE <AmiBlitz3.ab2@7373>   CMP.w #$c,$8(a2)
000328D2 <AmiBlitz3.ab2@7374>      BEQ asmfixer__skipo_lf1
000328D8 <AmiBlitz3.ab2@7375>      CMP.w #$d,$8(a2)
000328DC <AmiBlitz3.ab2@7376>      BEQ asmfixer__skipo_lf1
000328E2 <AmiBlitz3.ab2@7379>   JSR AJL_0_BF6E
000328E8 <AmiBlitz3.ab2@7382>   MOVEA.l asmbuff,A2
000328EC <AmiBlitz3.ab2@7383>    BEQ.w asmfixer__oko
000328F0 <AmiBlitz3.ab2@7384>   CMP.w #$28,D0
000328F4 <AmiBlitz3.ab2@7385>    BEQ.w asmfixer__oko
000328F8 <AmiBlitz3.ab2@7386>   CMP.w #$2C,D0
000328FC <AmiBlitz3.ab2@7387>    BEQ.w asmfixer__oko
00032900 <AmiBlitz3.ab2@7388> BRA.w syntaxerr
00032908 <AmiBlitz3.ab2@7391>   MOVE.b #1,iee
0003290C <AmiBlitz3.ab2@7392> BRA asmfixer__skipo_lf2
00032910 <AmiBlitz3.ab2@7395>   MOVEA.l $4(A2),A1
00032914 <AmiBlitz3.ab2@7397>   MOVE.w $8(A2),D1                                         ;labelmode
00032918 <AmiBlitz3.ab2@7398>   CMP.w #$5,D1
0003291C <AmiBlitz3.ab2@7399>    BNE.w asmfixer__notdan
00032920 <AmiBlitz3.ab2@7402>    BSR.w chkword                                         ;word
00032922 <AmiBlitz3.ab2@7405>   MOVE.w D3,(A1)
00032926 <AmiBlitz3.ab2@7406> BRA.w asmfixer__next
0003292A <AmiBlitz3.ab2@7409>   CMP.w #$6,D1
0003292E <AmiBlitz3.ab2@7410>    BNE.w asmfixer__notdanxi
00032932 <AmiBlitz3.ab2@7413>    BSR.w chkbyte                                         ;byte
00032936 <AmiBlitz3.ab2@7416>   MOVE.b D3,$1(A1)
0003293A <AmiBlitz3.ab2@7417> BRA.w asmfixer__next
0003293E <AmiBlitz3.ab2@7420>    CMP.w #$11,D1                                           ;byte
00032942 <AmiBlitz3.ab2@7421>    BEQ.w asmfixer__isbyte2
00032946 <AmiBlitz3.ab2@7422>    CMP.w #$c,d1
0003294A <AmiBlitz3.ab2@7423>    BEQ asmfixer__single1
0003294E <AmiBlitz3.ab2@7424>    CMP.w #$d,d1
00032952 <AmiBlitz3.ab2@7425>    BEQ asmfixer__double1
00032956 <AmiBlitz3.ab2@7426>   CMP.w #$7,D1
0003295A <AmiBlitz3.ab2@7427>    BEQ.w asmfixer__word                                    ;word
0003295E <AmiBlitz3.ab2@7428>   CMP.w #$8,D1
00032962 <AmiBlitz3.ab2@7429>    BNE.w asmfixer__notabsl
00032968 <AmiBlitz3.ab2@7432>   MOVE.w asmtype,D1                                        ;long
0003296C <AmiBlitz3.ab2@7433>    BEQ.w asmfixer__notpcrel
00032970 <AmiBlitz3.ab2@7434>      BSR.w asmoff
00032972 <AmiBlitz3.ab2@7437>   MOVE.l D3,(A1)
00032976 <AmiBlitz3.ab2@7438> BRA.w asmfixer__next
0003297C <AmiBlitz3.ab2@7442>   fmove.s fp0,0(a1)
00032980 <AmiBlitz3.ab2@7443> BRA.w asmfixer__next
00032986 <AmiBlitz3.ab2@7447>   fmove.d fp0,0(a1)
0003298A <AmiBlitz3.ab2@7448> BRA.w asmfixer__next
0003298E <AmiBlitz3.ab2@7452>   CMP.w #$9,D1
00032992 <AmiBlitz3.ab2@7453>    BNE.w asmfixer__notdpc
00032994 <AmiBlitz3.ab2@7454>   SUB.l A1,D3                                              ;branchword
00032998 <AmiBlitz3.ab2@7455>    BSR.w chkword
0003299A <AmiBlitz3.ab2@7456>   MOVE.w D3,(A1)
0003299E <AmiBlitz3.ab2@7457> BRA.w asmfixer__next
000329A2 <AmiBlitz3.ab2@7461>   CMP.w #$A,D1
000329A6 <AmiBlitz3.ab2@7462>    BNE.w asmfixer__imm
000329A8 <AmiBlitz3.ab2@7463>   SUB.l A1,D3                                              ;branchbyte
000329AC <AmiBlitz3.ab2@7464> BRA.w asmfixer__isbyte
000329B0 <AmiBlitz3.ab2@7468>   CMP.w #$11,d1
000329B4 <AmiBlitz3.ab2@7469>   BLE asmfixer__imm_org
000329B6 <AmiBlitz3.ab2@7470>   MOVE.l a3,-(a7)
000329BC <AmiBlitz3.ab2@7471>   LEA pluginbase,a3
000329C0 <AmiBlitz3.ab2@7472>   MOVE.l 8(a2),a0
000329C2 <AmiBlitz3.ab2@7473>   JSR (a0)                                                 ;hook
000329C4 <AmiBlitz3.ab2@7474>   MOVE.l (a7)+,a3
000329C8 <AmiBlitz3.ab2@7475> BRA asmfixer__next
000329CC <AmiBlitz3.ab2@7478>   MOVE.w $A(A2),D0
000329D0 <AmiBlitz3.ab2@7479>    BEQ.w asmfixer__noflag
000329D4 <AmiBlitz3.ab2@7480>   CMP.w #$1,D0
000329D8 <AmiBlitz3.ab2@7481>    BEQ.w asmfixer__tocount
000329DC <AmiBlitz3.ab2@7482>   CMP.w #$3,D0
000329E0 <AmiBlitz3.ab2@7483>    BEQ.w asmfixer__tomoveq
000329E4 <AmiBlitz3.ab2@7484>   CMP.w #$4,D0
000329E8 <AmiBlitz3.ab2@7485>    BEQ.w asmfixer__totrap
000329EC <AmiBlitz3.ab2@7488>   CMP.w #$B,D1                                             ;long
000329F0 <AmiBlitz3.ab2@7489>    BEQ.w asmfixer__isabsl
000329F4 <AmiBlitz3.ab2@7490> BRA asmfixer__word2                                              ;word
000329FA <AmiBlitz3.ab2@7493>   CMP.l #$F,D3
000329FE <AmiBlitz3.ab2@7494>    BHI.w illtraperr
00032A00 <AmiBlitz3.ab2@7495>   OR.b D3,-(A1)
00032A04 <AmiBlitz3.ab2@7496> BRA.w asmfixer__next
00032A0A <AmiBlitz3.ab2@7499>   CMP.l #$8,D3
00032A0E <AmiBlitz3.ab2@7500>    BHI.w illimmerr
00032A10 <AmiBlitz3.ab2@7501>   TST.l D3
00032A14 <AmiBlitz3.ab2@7502>    BEQ.w illimmerr
00032A18 <AmiBlitz3.ab2@7503>   ANDI.w #$7,D3
00032A1A <AmiBlitz3.ab2@7504>   LSL.w #8,D3
00032A1C <AmiBlitz3.ab2@7505>   LSL.w #1,D3
00032A1E <AmiBlitz3.ab2@7506>   OR.w D3,-(A1)
00032A22 <AmiBlitz3.ab2@7507> BRA.w asmfixer__next
00032A26 <AmiBlitz3.ab2@7510>    BSR.w chkbyte
00032A28 <AmiBlitz3.ab2@7511>   MOVE.b D3,-(A1)
00032A2A <AmiBlitz3.ab2@7514>   MOVEA.l (A2),A2
00032A2E <AmiBlitz3.ab2@7515> BRA.w asmfixer__loop
00032A34 <AmiBlitz3.ab2@7518>   CLR.w constmode
00032A3A <AmiBlitz3.ab2@7521>   CLR.b curtemplabel
00032A3C <AmiBlitz3.ab2@7522> RTS
00032A3E <AmiBlitz3.ab2@7531>   BTST D3,D6
00032A42 <AmiBlitz3.ab2@7532>    BEQ.w illeaerr
00032A46 <AmiBlitz3.ab2@7533>    BSR.w makemode
00032A4A <AmiBlitz3.ab2@7534>   CMP.w #$7,D3
00032A4E <AmiBlitz3.ab2@7535>    BCS.w doea__skip
00032A50 <AmiBlitz3.ab2@7536>   MOVE.w D3,D2
00032A52 <AmiBlitz3.ab2@7537>   SUBQ.w #7,D2
00032A56 <AmiBlitz3.ab2@7538>   CMP.w #$5,D2
00032A5A <AmiBlitz3.ab2@7539>    BCS.w doea__skip0
00032A5C <AmiBlitz3.ab2@7540>   MOVEQ.l #$04,D2
00032A5E <AmiBlitz3.ab2@7543>   MOVEQ.l #$07,D3
00032A60 <AmiBlitz3.ab2@7546>   MOVE.b D7,D0
00032A64 <AmiBlitz3.ab2@7547>   ANDI.w #$F,D0
00032A68 <AmiBlitz3.ab2@7548>   CMP.w #$F,D0
00032A6C <AmiBlitz3.ab2@7549>    BEQ.w doea__skip2
00032A6E <AmiBlitz3.ab2@7550>   LSL.w D0,D3
00032A70 <AmiBlitz3.ab2@7551>   OR.w D3,D1
00032A72 <AmiBlitz3.ab2@7554>   LSR.w #4,D7
00032A76 <AmiBlitz3.ab2@7555>   ANDI.w #$F,D7
00032A7A <AmiBlitz3.ab2@7556>   CMP.w #$F,D7
00032A7E <AmiBlitz3.ab2@7557>    BEQ.w doea__skip3
00032A80 <AmiBlitz3.ab2@7558>   LSL.w D7,D2
00032A82 <AmiBlitz3.ab2@7559>   OR.w D2,D1
00032A84 <AmiBlitz3.ab2@7562> RTS
00032A8A <AmiBlitz3.ab2@7566>   CMP.l #$7F,D3
00032A8E <AmiBlitz3.ab2@7567>    BGT.w illdiserr
00032A94 <AmiBlitz3.ab2@7568>   CMP.l #$FFFFFF80,D3                                      ;#-128,d3 org source
00032A98 <AmiBlitz3.ab2@7569>    BLT.w illdiserr
00032A9A <AmiBlitz3.ab2@7570> RTS
00032AA0 <AmiBlitz3.ab2@7574>   CMP.l #$7fff,D3
00032AA4 <AmiBlitz3.ab2@7575>    BGT.w illdiserr
00032AAA <AmiBlitz3.ab2@7576>   CMP.l #$FFFF8000,D3                                      ;#-32768,d3 org source
00032AAE <AmiBlitz3.ab2@7577>    BLT.w illdiserr
00032AB0 <AmiBlitz3.ab2@7578> RTS
00032AB2 <AmiBlitz3.ab2@7583>   MOVE.b (a5)+,d0
00032AB4 <AmiBlitz3.ab2@7584>   CMP.b d1,d0
00032AB8 <AmiBlitz3.ab2@7585>   BEQ 'll10
00032ABA <AmiBlitz3.ab2@7586>   TST.b d0
00032ABE <AmiBlitz3.ab2@7587>   BNE 'll20
00032AC0 <AmiBlitz3.ab2@7590>   SUBQ #1,a5
00032AC2 <AmiBlitz3.ab2@7591> RTS
00032AC4 <AmiBlitz3.ab2@7596>   MOVE.b (a5)+,d0
00032AC8 <AmiBlitz3.ab2@7597>   CMP.b #",",d0
00032ACC <AmiBlitz3.ab2@7598>   BEQ 'll10
00032AD0 <AmiBlitz3.ab2@7599>   CMP.b #";",d0
00032AD4 <AmiBlitz3.ab2@7600>   BEQ 'll10
00032AD8 <AmiBlitz3.ab2@7601>  CMP.b #":",d0
00032ADC <AmiBlitz3.ab2@7602>   BEQ 'll10
00032ADE <AmiBlitz3.ab2@7605>   TST.b d0
00032AE2 <AmiBlitz3.ab2@7606>   BNE 'll20
00032AE4 <AmiBlitz3.ab2@7609>   SUBQ #1,a5
00032AE6 <AmiBlitz3.ab2@7610> RTS
00032AE8 <AmiBlitz3.ab2@7614>   ADD.l a2,d1
00032AEE <AmiBlitz3.ab2@7615>   LEA tempspace,a1
00032AF0 <AmiBlitz3.ab2@7616>   MOVE.l d1,a0
00032AF2 <AmiBlitz3.ab2@7619>   MOVE.b (a0)+,(a1)+
00032AF6 <AmiBlitz3.ab2@7620>   BNE.s 'l10
00032AF8 <AmiBlitz3.ab2@7621>   SUBQ.l #1,a0
00032AFA <AmiBlitz3.ab2@7622>   SUBQ.l #1,a1
00032AFC <AmiBlitz3.ab2@7625>   MOVE.b (a5)+,(a1)+
00032B00 <AmiBlitz3.ab2@7626>   BNE.s 'l20
00032B02 <AmiBlitz3.ab2@7627>   CLR.b (a1)
00032B08 <AmiBlitz3.ab2@7628>   LEA tempspace,a5
00032B0A <AmiBlitz3.ab2@7629> RTS
00032B0E <AmiBlitz3.ab2@7633>   MOVEM.l D1-D2/A0,-(A7)
00032B10 <AmiBlitz3.ab2@7634>   MOVE.l d0,d2
00032B12 <AmiBlitz3.ab2@7635>   MOVEQ #0,d1
00032B14 <AmiBlitz3.ab2@7636>   MOVE.l a5,a4
00032B16 <AmiBlitz3.ab2@7639>   ADDQ.l #1,d1
00032B18 <AmiBlitz3.ab2@7640>   MOVE.b (a5)+,d0
00032B1C <AmiBlitz3.ab2@7641>   CMP.b #",",d0
00032B20 <AmiBlitz3.ab2@7642>   BEQ 'll10
00032B24 <AmiBlitz3.ab2@7643>   CMP.b #";",d0
00032B28 <AmiBlitz3.ab2@7644>   BEQ 'll10
00032B2C <AmiBlitz3.ab2@7645>   CMP.b #":",d0
00032B30 <AmiBlitz3.ab2@7646>   BEQ 'll10
00032B34 <AmiBlitz3.ab2@7647>   CMP.b #"(",d0
00032B38 <AmiBlitz3.ab2@7648>   BEQ 'll10
00032B3A <AmiBlitz3.ab2@7649>   TST.b d0
00032B3E <AmiBlitz3.ab2@7650>   BNE 'll20
00032B40 <AmiBlitz3.ab2@7653>   SUBQ #1,a5
00032B44 <AmiBlitz3.ab2@7654>   CMP.b #"'",(a4)
00032B48 <AmiBlitz3.ab2@7655>   BEQ 'llocal
00032B4E <AmiBlitz3.ab2@7656>   TST.w inmacro
00032B52 <AmiBlitz3.ab2@7657>   BNE 'lmacro
00032B54 <AmiBlitz3.ab2@7658>   MOVEQ.l #$14+4,D0
00032B56 <AmiBlitz3.ab2@7659>   ADD.l d1,d0
00032B58 <AmiBlitz3.ab2@7660>   MOVE.l d1,-(a7)
00032B5A <AmiBlitz3.ab2@7661>   MOVEQ.l #$01,D1
00032B60 <AmiBlitz3.ab2@7662>   MOVEA.l _execbase,A6
00032B66 <AmiBlitz3.ab2@7663>   MOVE.l mempool2,a0
00032B6A <AmiBlitz3.ab2@7664>   JSR _AllocPooled(a6)
00032B6C <AmiBlitz3.ab2@7666>   MOVE.l (a7)+,d1
00032B6E <AmiBlitz3.ab2@7667>   TST.l d0
00032B72 <AmiBlitz3.ab2@7668>   BEQ nomemory
00032B74 <AmiBlitz3.ab2@7669>   MOVEA.l D0,A0
00032B7C <AmiBlitz3.ab2@7671>   MOVE.w linenumat+2,$A(A0)
00032B82 <AmiBlitz3.ab2@7673>   MOVE.l templabel,(A0)
00032B88 <AmiBlitz3.ab2@7674>   MOVE.l A0,templabel
00032B90 <AmiBlitz3.ab2@7675>   MOVE.l destpointer,$4(A0)
00032B94 <AmiBlitz3.ab2@7676>   MOVE.l d2,$8(A0)
00032B98 <AmiBlitz3.ab2@7677>   LEA $E(A0),A0
00032B9C <AmiBlitz3.ab2@7678>   MOVE.b #$14,(A0)+
00032B9E <AmiBlitz3.ab2@7679>   CLR.b (a0)+
00032BA0 <AmiBlitz3.ab2@7681>   MOVE.l a0,d2
00032BA2 <AmiBlitz3.ab2@7682>   ADDQ.l #4,d2
00032BA4 <AmiBlitz3.ab2@7683>   MOVE.l d2,(a0)+
00032BA6 <AmiBlitz3.ab2@7686>   MOVE.b (a4)+,(a0)+
00032BA8 <AmiBlitz3.ab2@7687>   SUBQ.l #1,d1
00032BAC <AmiBlitz3.ab2@7688>   BNE 'lc1
00032BAE <AmiBlitz3.ab2@7689>   CLR.b (a0)+
00032BB4 <AmiBlitz3.ab2@7690>   MOVE.w linenumat,(a0)
00032BB8 <AmiBlitz3.ab2@7691>   MOVEM.l (A7)+,D1-D2/A0
00032BBA <AmiBlitz3.ab2@7692> RTS
00032BBC <AmiBlitz3.ab2@7695>   MOVEQ.l #$10+2,D0
00032BBE <AmiBlitz3.ab2@7696>   ADD.l d1,d0
00032BC2 <AmiBlitz3.ab2@7697>   MOVEM.l a4/d3,-(a7)
00032BC4 <AmiBlitz3.ab2@7698>   MOVE.l d1,d3
00032BC6 <AmiBlitz3.ab2@7699>   MOVEQ.l #$01,D1
00032BCC <AmiBlitz3.ab2@7700>   MOVEA.l _execbase,A6
00032BD2 <AmiBlitz3.ab2@7701>   MOVE.l mempool2,a0
00032BD6 <AmiBlitz3.ab2@7702>   JSR _AllocPooled(a6)
00032BD8 <AmiBlitz3.ab2@7704>   TST.l d0
00032BDC <AmiBlitz3.ab2@7705>   BEQ nomemory
00032BDE <AmiBlitz3.ab2@7706>   MOVEA.l D0,A0
00032BE6 <AmiBlitz3.ab2@7709>   MOVE.w linenumat+2,$C(A0)
00032BEC <AmiBlitz3.ab2@7710>   MOVE.l templabel,(A0)
00032BF2 <AmiBlitz3.ab2@7711>   MOVE.l A0,templabel
00032BFA <AmiBlitz3.ab2@7712>   MOVE.l destpointer,$4(A0)
00032BFE <AmiBlitz3.ab2@7713>   MOVE.l d2,$8(A0)
00032C02 <AmiBlitz3.ab2@7714>   LEA $E(A0),A0
00032C04 <AmiBlitz3.ab2@7715>   MOVE.b d3,(A0)+
00032C0A <AmiBlitz3.ab2@7716>   ADD.b #$10,-1(a0)
00032C0E <AmiBlitz3.ab2@7717>   MOVE.b #$1,(a0)+
00032C10 <AmiBlitz3.ab2@7718>   SUBQ.w #1,d3
00032C12 <AmiBlitz3.ab2@7721>   MOVE.b (a4)+,(a0)+
00032C14 <AmiBlitz3.ab2@7722>   SUBQ.l #1,d3
00032C18 <AmiBlitz3.ab2@7723>   BNE.s 'lm2
00032C1A <AmiBlitz3.ab2@7724>   CLR.b (a0)+
00032C20 <AmiBlitz3.ab2@7725>   MOVE.w linenumat,(a0)
00032C24 <AmiBlitz3.ab2@7726>   MOVEM.l (a7)+,d3/a4
00032C28 <AmiBlitz3.ab2@7727>   MOVEM.l (A7)+,D1-D2/A0
00032C2A <AmiBlitz3.ab2@7728> RTS
00032C30 <AmiBlitz3.ab2@7731>   LEA lastgloballabel,a1
00032C32 <AmiBlitz3.ab2@7734>   ADDQ.l #1,d1
00032C34 <AmiBlitz3.ab2@7735>   TST.b (a1)+
00032C38 <AmiBlitz3.ab2@7736>   BNE.s 'll11
00032C3A <AmiBlitz3.ab2@7737>   MOVEQ.l #$10+2,D0
00032C3C <AmiBlitz3.ab2@7738>   ADD.l d1,d0
00032C40 <AmiBlitz3.ab2@7739>   MOVEM.l a4/d3,-(a7)
00032C42 <AmiBlitz3.ab2@7740>   MOVE.l d1,d3
00032C44 <AmiBlitz3.ab2@7741>   MOVEQ.l #$01,D1
00032C4A <AmiBlitz3.ab2@7742>   MOVEA.l _execbase,A6
00032C50 <AmiBlitz3.ab2@7743>   MOVE.l mempool2,a0
00032C54 <AmiBlitz3.ab2@7744>   JSR _AllocPooled(a6)
00032C56 <AmiBlitz3.ab2@7746>   TST.l d0
00032C5A <AmiBlitz3.ab2@7747>   BEQ nomemory
00032C5C <AmiBlitz3.ab2@7748>   MOVEA.l D0,A0
00032C64 <AmiBlitz3.ab2@7751>   MOVE.w linenumat+2,$C(A0)
00032C6A <AmiBlitz3.ab2@7752>   MOVE.l templabel,(A0)
00032C70 <AmiBlitz3.ab2@7753>   MOVE.l A0,templabel
00032C78 <AmiBlitz3.ab2@7754>   MOVE.l destpointer,$4(A0)
00032C7C <AmiBlitz3.ab2@7755>   MOVE.l d2,$8(A0)
00032C80 <AmiBlitz3.ab2@7756>   LEA $E(A0),A0
00032C82 <AmiBlitz3.ab2@7757>   MOVE.b d3,(A0)+
00032C88 <AmiBlitz3.ab2@7758>   ADD.b #$10,-1(a0)
00032C8C <AmiBlitz3.ab2@7759>   MOVE.b #$1,(a0)+
00032C8E <AmiBlitz3.ab2@7760>   SUBQ.w #1,d3
00032C94 <AmiBlitz3.ab2@7761>   LEA lastgloballabel,a1
00032C96 <AmiBlitz3.ab2@7764>   SUBQ.l #1,d3
00032C98 <AmiBlitz3.ab2@7765>   MOVE.b (a1)+,(a0)+
00032C9C <AmiBlitz3.ab2@7766>   BNE.s 'lm3
00032C9E <AmiBlitz3.ab2@7767>   SUBQ.l #1,a0
00032CA0 <AmiBlitz3.ab2@7770>   MOVE.b (a4)+,(a0)+
00032CA2 <AmiBlitz3.ab2@7771>   SUBQ.l #1,d3
00032CA6 <AmiBlitz3.ab2@7772>   BNE.s 'lm1
00032CA8 <AmiBlitz3.ab2@7773>   CLR.b (a0)+
00032CAE <AmiBlitz3.ab2@7774>   MOVE.w linenumat,(a0)
00032CB2 <AmiBlitz3.ab2@7775>   MOVEM.l (a7)+,d3/a4
00032CB6 <AmiBlitz3.ab2@7776>   MOVEM.l (A7)+,D1-D2/A0
00032CB8 <AmiBlitz3.ab2@7777> RTS
00032CE2 <AmiBlitz3.ab2@7781>   !basic
00032D38 <AmiBlitz3.ab2@7782>   error{!TRANS{"No memory available!!!\\nAB3 will terminate due to low memory!"}}
00032D4A <AmiBlitz3.ab2@7783>   loop Delay_ 1
00032D50 <AmiBlitz3.ab2@7784> Goto loop
00032D54 <AmiBlitz3.ab2@7788>   MOVEM.l D0-D2/A0,-(A7)
00032D58 <AmiBlitz3.ab2@7789>   MOVE.w $E(A0),-(A7)
00032D5C <AmiBlitz3.ab2@7790>    BPL.w insasm__ok
00032D5E <AmiBlitz3.ab2@7791>   CLR.w (A7)
00032D60 <AmiBlitz3.ab2@7794>   MOVE.l A1,-(A7)
00032D62 <AmiBlitz3.ab2@7795>   MOVEQ.l #$10+2,D0
00032D68 <AmiBlitz3.ab2@7796>   ADD.w asmlen,D0
00032D6A <AmiBlitz3.ab2@7797>   MOVE.w D0,D2
00032D6C <AmiBlitz3.ab2@7798>   MOVEQ.l #$01,D1
00032D72 <AmiBlitz3.ab2@7799>   MOVEA.l _execbase,A6
00032D78 <AmiBlitz3.ab2@7800>   MOVE.l mempool2,a0
00032D7C <AmiBlitz3.ab2@7801>   JSR _AllocPooled(a6)
00032D7E <AmiBlitz3.ab2@7803>   MOVEA.l D0,A0
00032D86 <AmiBlitz3.ab2@7806>   MOVE.w linenumat+2,$C(A0)
00032D8C <AmiBlitz3.ab2@7807>   MOVE.l templabel,(A0)
00032D92 <AmiBlitz3.ab2@7808>   MOVE.l A0,templabel
00032D96 <AmiBlitz3.ab2@7809>   MOVE.l (A7),$4(A0)
00032D9A <AmiBlitz3.ab2@7810>   MOVE.w d3,$8(A0)
00032DA0 <AmiBlitz3.ab2@7811>   MOVE.w $4(A7),$A(A0)
00032DA4 <AmiBlitz3.ab2@7812>   LEA $E(A0),A0
00032DA6 <AmiBlitz3.ab2@7813>   MOVE.b D2,(A0)+                                           ;length
00032DAC <AmiBlitz3.ab2@7814>   MOVEA.l asmbuff,A1
00032DAE <AmiBlitz3.ab2@7815>   ADDQ.w #1,A1
00032DB0 <AmiBlitz3.ab2@7816>   MOVE.b (A1)+,(A0)+                                        ;type - 0 = indirect,else direct
00032DB4 <AmiBlitz3.ab2@7817>    BNE.w insasm__loop
00032DB6 <AmiBlitz3.ab2@7818>   MOVE.l (A1)+,(A0)+
00032DBC <AmiBlitz3.ab2@7819>   MOVE.w linenumat,(a0)
00032DC0 <AmiBlitz3.ab2@7820> BRA.w insasm__loopdone
00032DC2 <AmiBlitz3.ab2@7823>    MOVE.b (A1)+,(A0)+
00032DC6 <AmiBlitz3.ab2@7824>    BNE.w insasm__loop
00032DCC <AmiBlitz3.ab2@7825>    MOVE.w linenumat,(a0)
00032DCE <AmiBlitz3.ab2@7828>   MOVEA.l (A7)+,A1
00032DD0 <AmiBlitz3.ab2@7829>   ADDQ.w #2,A7
00032DD4 <AmiBlitz3.ab2@7830>   MOVEM.l (A7)+,D0-D2/A0
00032DD6 <AmiBlitz3.ab2@7831> RTS
00032DDA <AmiBlitz3.ab2@7835>   CMP.w #$5,D3
00032DDE <AmiBlitz3.ab2@7836>    BCS.w makemode__done
00032DE2 <AmiBlitz3.ab2@7837>   CMP.w #$B,D3
00032DE6 <AmiBlitz3.ab2@7838>    BHI.w makemode__done2
00032DEA <AmiBlitz3.ab2@7839>    BEQ.w makemode__imm
00032DEE <AmiBlitz3.ab2@7840>    BSR.w insasm
00032DF2 <AmiBlitz3.ab2@7841>   CMP.w #$5,D3
00032DF6 <AmiBlitz3.ab2@7842>    BEQ.w makemode__word
00032DFA <AmiBlitz3.ab2@7843>   CMP.w #$6,D3
00032DFE <AmiBlitz3.ab2@7844>    BEQ.w makemode__dxi
00032E02 <AmiBlitz3.ab2@7845>   CMP.w #$7,D3
00032E06 <AmiBlitz3.ab2@7846>    BEQ.w makemode__word
00032E0A <AmiBlitz3.ab2@7847>   CMP.w #$8,D3
00032E0E <AmiBlitz3.ab2@7848>    BEQ.w makemode__long
00032E12 <AmiBlitz3.ab2@7849>   CMP.w #$9,D3
00032E16 <AmiBlitz3.ab2@7850>    BEQ.w makemode__word
00032E1C <AmiBlitz3.ab2@7854>   CMPA.l destbufferend,A1
00032E20 <AmiBlitz3.ab2@7855>    BCS.w makemode__ok7
00032E22 <AmiBlitz3.ab2@7856>   ADDQ.w #2,A1
00032E24 <AmiBlitz3.ab2@7857> RTS
00032E26 <AmiBlitz3.ab2@7860>   MOVE.w D4,(A1)+
00032E28 <AmiBlitz3.ab2@7861> RTS
00032E30 <AmiBlitz3.ab2@7864>   CMPI.w #$8,asmsize
00032E34 <AmiBlitz3.ab2@7865>    BCC.w makemode__immlong
00032E36 <AmiBlitz3.ab2@7866>   MOVEQ.l #$10,D3
00032E3A <AmiBlitz3.ab2@7867>    BSR.w insasm
00032E3C <AmiBlitz3.ab2@7868>   MOVEQ.l #$0B,D3
00032E40 <AmiBlitz3.ab2@7869> BRA.w makemode__word
00032E44 <AmiBlitz3.ab2@7872>   BSR.w insasm
00032E46 <AmiBlitz3.ab2@7875>   ADDQ.w #2,A1
00032E48 <AmiBlitz3.ab2@7878>   ADDQ.w #2,A1
00032E4A <AmiBlitz3.ab2@7879> RTS
00032E4E <AmiBlitz3.ab2@7882>   CMP.w #$F,D3
00032E52 <AmiBlitz3.ab2@7883>    BNE.w makemode__done
00032E58 <AmiBlitz3.ab2@7884>   CMPA.l destbufferend,A1
00032E5C <AmiBlitz3.ab2@7885>    BCS.w makemode__ok3
00032E5E <AmiBlitz3.ab2@7886>   ADDQ.w #2,A1
00032E60 <AmiBlitz3.ab2@7887>   ADDQ.w #4,A7
00032E62 <AmiBlitz3.ab2@7888> RTS
00032E64 <AmiBlitz3.ab2@7891>   MOVE.w D2,(A1)+
00032E66 <AmiBlitz3.ab2@7892>   ADDQ.w #4,A7
00032E68 <AmiBlitz3.ab2@7895> RTS
00032E6C <AmiBlitz3.ab2@7899>   BSR.w storeloc
00032E76 <AmiBlitz3.ab2@7900>   MOVE.l linenumat,oldline
00032E78 <AmiBlitz3.ab2@7901>   MOVEQ.l #$00,D1
00032E7C <AmiBlitz3.ab2@7902>    BSR.w get1bytemain
00032E80 <AmiBlitz3.ab2@7903>    BEQ.w JL_0_676E
00032E82 <AmiBlitz3.ab2@7904>   MOVEQ.l #$00,D3
00032E86 <AmiBlitz3.ab2@7905> BRA.w JL_0_6726
00032E8A <AmiBlitz3.ab2@7908>    BSR.w get1bytemain
00032E8E <AmiBlitz3.ab2@7909>    BNE.w JL_0_671C
00032E90 <AmiBlitz3.ab2@7912>   TST.w D3
00032E94 <AmiBlitz3.ab2@7913>    BNE.w brackets_                                         ;syntax error brackets
00032E98 <AmiBlitz3.ab2@7914> BRA.w JL_0_676C
00032E9E <AmiBlitz3.ab2@7917>    MOVE.w instringon,D4
00032EA2 <AmiBlitz3.ab2@7919>      BEQ JL_0_6726
00032EA4 <AmiBlitz3.ab2@7922>     MOVEQ #0,d0
00032EA6 <AmiBlitz3.ab2@7923>      MOVE.b (a5)+,d0                                       ;fix "ue"
00032EAC <AmiBlitz3.ab2@7924>      MOVE.w d0,lastchar
00032EB0 <AmiBlitz3.ab2@7925>      BEQ ready
00032EB4 <AmiBlitz3.ab2@7926>      CMP.b #$22,d0
00032EB8 <AmiBlitz3.ab2@7927>      BNE 'l1
00032EBE <AmiBlitz3.ab2@7928>      NOT.w instringon
00032EC2 <AmiBlitz3.ab2@7929> BRA JL_0_670A
00032EC6 <AmiBlitz3.ab2@7932>            CMP.b #"@",d0                                   ;expand line @@ 1. for parameter
00032ECA <AmiBlitz3.ab2@7933>            BNE 'l10
00032ECE <AmiBlitz3.ab2@7934>            CMP.b #"@",(a5)
00032ED2 <AmiBlitz3.ab2@7935>            BNE 'l10
00032ED8 <AmiBlitz3.ab2@7938>            TST.w ininclude
00032EDC <AmiBlitz3.ab2@7939>            BNE 'inc
00032EE2 <AmiBlitz3.ab2@7940>            MOVE.l sourceline3,a5
00032EE8 <AmiBlitz3.ab2@7941>            CMP.l #0,a5
00032EEC <AmiBlitz3.ab2@7942>            BNE 'l11t
00032EF2 <AmiBlitz3.ab2@7943>            MOVEA.l sourceline,A5
00032EF4 <AmiBlitz3.ab2@7946>            MOVEA.l (A5),A5
00032EFA <AmiBlitz3.ab2@7947>            CMP.l #0,a5
00032EFE <AmiBlitz3.ab2@7948>            BEQ JL_0_676C
00032F04 <AmiBlitz3.ab2@7949>            MOVE.l a5,sourceline3
00032F08 <AmiBlitz3.ab2@7950>            LEA $9(A5),A5
00032F0C <AmiBlitz3.ab2@7951> BRA 'l11
00032F0E <AmiBlitz3.ab2@7954>            ADDQ.l #1,a5
00032F10 <AmiBlitz3.ab2@7955>            TST.b (a5)
00032F14 <AmiBlitz3.ab2@7956>            BNE 'inc
00032F16 <AmiBlitz3.ab2@7960>            ADDQ.l #1,a5
00032F18 <AmiBlitz3.ab2@7961>            TST.b (a5)
00032F1C <AmiBlitz3.ab2@7962>            BEQ illeolerr
00032F1E <AmiBlitz3.ab2@7963>            MOVE.l a5,-(a7)
00032F22 <AmiBlitz3.ab2@7966>       CMP.b #" ",(a5)+
00032F26 <AmiBlitz3.ab2@7967>       BEQ 'l110
00032F2C <AmiBlitz3.ab2@7968>        CMP.b #";",-1(a5)
00032F2E <AmiBlitz3.ab2@7969>        MOVE.l (a7)+,a5
00032F32 <AmiBlitz3.ab2@7970>        BEQ 'l111
00032F36 <AmiBlitz3.ab2@7971> BRA JL_0_670A
00032F3A <AmiBlitz3.ab2@7974>    CMP.w #$29,D0
00032F3E <AmiBlitz3.ab2@7975>    BNE.w JL_0_673A
00032F40 <AmiBlitz3.ab2@7976>   TST.w D3
00032F44 <AmiBlitz3.ab2@7977>    BEQ.w JL_0_676C
00032F46 <AmiBlitz3.ab2@7980>   SUBQ.w #1,D3
00032F4A <AmiBlitz3.ab2@7981> BRA.w JL_0_670A
00032F4E <AmiBlitz3.ab2@7984>    CMP.w #$7D,D0
00032F52 <AmiBlitz3.ab2@7985>    BEQ.w JL_0_6734
00032F56 <AmiBlitz3.ab2@7986>   CMP.w #$28,D0
00032F5A <AmiBlitz3.ab2@7987>    BNE.w JL_0_6750
00032F5C <AmiBlitz3.ab2@7990>    ADDQ.w #1,D3
00032F60 <AmiBlitz3.ab2@7991> BRA.w JL_0_670A
00032F64 <AmiBlitz3.ab2@7994>   CMP.w #$7B,D0
00032F68 <AmiBlitz3.ab2@7995>    BEQ.w JL_0_674A
00032F6C <AmiBlitz3.ab2@7996>   CMP.w #$2C,D0
00032F70 <AmiBlitz3.ab2@7997>    BNE.w JL_0_670A
00032F72 <AmiBlitz3.ab2@7998>   TST.w D3
00032F76 <AmiBlitz3.ab2@7999>    BNE.w JL_0_670A
00032F78 <AmiBlitz3.ab2@8000>   ADDQ.w #1,D1
00032F7C <AmiBlitz3.ab2@8001> BRA.w JL_0_670A
00032F7E <AmiBlitz3.ab2@8004>   ADDQ.w #1,D1
00032F84 <AmiBlitz3.ab2@8007>   CLR.l sourceline3
00032F8E <AmiBlitz3.ab2@8008>   MOVE.l oldline,linenumat
00032F92 <AmiBlitz3.ab2@8009> BRA.w resloc
00032F98 <AmiBlitz3.ab2@8013>    CLR.w numreps
00032F9A <AmiBlitz3.ab2@8014>   MOVE.w D1,D0
00032F9E <AmiBlitz3.ab2@8015>   ANDI.w #$FF00,D0
00032FA2 <AmiBlitz3.ab2@8016>    BEQ.w fetchlibps__noreps
00032FA4 <AmiBlitz3.ab2@8017>   LSR.w #8,D0
00032FA6 <AmiBlitz3.ab2@8018>   LSR.w #4,D0
00032FAA <AmiBlitz3.ab2@8019>    BEQ.w fetchlibps__skip
00032FAC <AmiBlitz3.ab2@8020>   SUB.b D0,D1
00032FB6 <AmiBlitz3.ab2@8021>    MOVE.w regnum,regnumfunc
00032FBC <AmiBlitz3.ab2@8022>    MOVE.b funcparloop,-(a7)
00032FC4 <AmiBlitz3.ab2@8023>    MOVE.b #0,funcparloop
00032FC8 <AmiBlitz3.ab2@8024>    BSR.w fetchpees2
00032FCE <AmiBlitz3.ab2@8025>    MOVE.b (a7)+,funcparloop
00032FD2 <AmiBlitz3.ab2@8026>   CMP.w #$2C,D0
00032FD6 <AmiBlitz3.ab2@8027>    BNE.w syntaxerr
00032FD8 <AmiBlitz3.ab2@8030>   MOVE.w D1,D2
00032FDA <AmiBlitz3.ab2@8031>   LSR.w #8,D2
00032FDE <AmiBlitz3.ab2@8032>   ANDI.w #$7,D2
00032FE0 <AmiBlitz3.ab2@8035>    CMP.b D2,D1
00032FE4 <AmiBlitz3.ab2@8036>    BCS.w fetchlibps__repsdone
00032FE6 <AmiBlitz3.ab2@8037>   SUB.b D2,D1
00032FEA <AmiBlitz3.ab2@8038>   MOVEM.l D2/A2,-(A7)
00032FEC <AmiBlitz3.ab2@8039>   MOVE.w D2,D0
00032FF2 <AmiBlitz3.ab2@8040>   MOVE.b funcparloop,-(a7)
00032FFA <AmiBlitz3.ab2@8041>   MOVE.b #0,funcparloop
00032FFE <AmiBlitz3.ab2@8042>   BSR.w fetchpees4
00033004 <AmiBlitz3.ab2@8043>   MOVE.b (a7)+,funcparloop
00033008 <AmiBlitz3.ab2@8044>   MOVEM.l (A7)+,D2/A2
0003300E <AmiBlitz3.ab2@8045>   ADDQ.w #1,numreps
00033012 <AmiBlitz3.ab2@8046> BRA.w fetchlibps__rloop
00033018 <AmiBlitz3.ab2@8049>    MOVE.w numreps,D3
0003301C <AmiBlitz3.ab2@8050>    BEQ.w syntaxerr
0003301E <AmiBlitz3.ab2@8051>   ADDA.w D2,A2
00033022 <AmiBlitz3.ab2@8052>   ANDI.w #$FF,D1
00033026 <AmiBlitz3.ab2@8053>    BEQ.w fetchlibps__done
0003302A <AmiBlitz3.ab2@8054>   CMP.w #$2C,D0
0003302E <AmiBlitz3.ab2@8055>    BNE.w syntaxerr
00033030 <AmiBlitz3.ab2@8058>    MOVE.w D1,D0
00033034 <AmiBlitz3.ab2@8059>    BNE.w fetchpees2b
00033036 <AmiBlitz3.ab2@8062> RTS
0003303C <AmiBlitz3.ab2@8065>   MOVE.b funcparloop,-(a7)
00033044 <AmiBlitz3.ab2@8066>   MOVE.b #0,funcparloop
00033048 <AmiBlitz3.ab2@8067>   BSR.w fetchpees2
0003304E <AmiBlitz3.ab2@8068>   MOVE.b (a7)+,funcparloop
00033050 <AmiBlitz3.ab2@8069> RTS
00033054 <AmiBlitz3.ab2@8073> ptype:    Dc.b $3F,$3C,$00,$00                             ;MOVE.W  #$0000,-(A7)
00033056 <AmiBlitz3.ab2@8076> partostack:  Ds.w 1                                        ;pmode org source
00033058 <AmiBlitz3.ab2@8080>   MOVEQ.l #$01,D2
0003305C <AmiBlitz3.ab2@8081> BRA.w fetchpees3
0003305E <AmiBlitz3.ab2@8084>   MOVEQ.l #$00,D2
00033062 <AmiBlitz3.ab2@8087>   ANDI.w #$F,D0
00033068 <AmiBlitz3.ab2@8095>   CLR.w parnum
0003306A <AmiBlitz3.ab2@8096>   MOVE.w D1,-(A7)
0003306E <AmiBlitz3.ab2@8097>   MOVE.w partostack(PC),-(A7)                              ;in case of recursion
00033074 <AmiBlitz3.ab2@8098>   MOVE.w D2,partostack
00033076 <AmiBlitz3.ab2@8099>   MOVE.w D0,-(A7)
0003307A <AmiBlitz3.ab2@8100>   CMP.w #"@@",(a5)                                         ;was l15
0003307E <AmiBlitz3.ab2@8101>   BNE fetchpees__loop
00033084 <AmiBlitz3.ab2@8102>   TST.w ininclude                                          ;merge macrolines
00033088 <AmiBlitz3.ab2@8103>   BNE errorjoin
0003308E <AmiBlitz3.ab2@8104>        MOVEA.l sourceline,A5
00033090 <AmiBlitz3.ab2@8107>            MOVEA.l (A5),A5
00033096 <AmiBlitz3.ab2@8108>            MOVE.l a5,sourceline
0003309A <AmiBlitz3.ab2@8109>            LEA $9(A5),A5
000330A0 <AmiBlitz3.ab2@8110>            ADDQ.l #1,linenumat
000330A2 <AmiBlitz3.ab2@8114>   MOVE.b (A2)+,D2                                          ;parameterloop   d2=vartype
000330A6 <AmiBlitz3.ab2@8115>    BNE.w fetchpees__skip0
000330AC <AmiBlitz3.ab2@8116>   MOVE.w userp,D2                                          ;user selected type
000330AE <AmiBlitz3.ab2@8119>    MOVE.l A2,-(A7)
000330B4 <AmiBlitz3.ab2@8120>    ADDQ.w #1,parnum
000330BA <AmiBlitz3.ab2@8121>    TST.b funccall
000330BE <AmiBlitz3.ab2@8122>    BEQ fetchpees__skip0_l1
000330C6 <AmiBlitz3.ab2@8123>    CMP.w #6,parnum
000330CA <AmiBlitz3.ab2@8124>    BLE fetchpees__skip0_l1
000330CE <AmiBlitz3.ab2@8125>    CMP.w #7,d2
000330D4 <AmiBlitz3.ab2@8131>    TST.b fpu
000330D8 <AmiBlitz3.ab2@8132>    BEQ fetchpees__skip0_old
000330DE <AmiBlitz3.ab2@8133>    TST.w regnumfunc
000330E2 <AmiBlitz3.ab2@8134>    BEQ fetchpees__skip0_old
000330E8 <AmiBlitz3.ab2@8135>    CMP.w #$48e7,-4(a4)
000330EC <AmiBlitz3.ab2@8136>    BNE fetchpees__skip0_old
000330EE <AmiBlitz3.ab2@8137>    MOVEQ #0,d1
000330F4 <AmiBlitz3.ab2@8138>    MOVE.w regnum,d1
000330FA <AmiBlitz3.ab2@8139>    CMP regnumfunc,d1                                       ;fpu reg function save
000330FE <AmiBlitz3.ab2@8140>    BGE fetchpees__skip0_old
00033100 <AmiBlitz3.ab2@8141>    ASL.w #7,d1
00033102 <AmiBlitz3.ab2@8142>    MOVE.l d0,-(a7)
00033108 <AmiBlitz3.ab2@8143>    MOVE.w regnumfunc,d0
0003310E <AmiBlitz3.ab2@8144>    CLR.w regmask
00033114 <AmiBlitz3.ab2@8147>    BSET d0,regmask
00033116 <AmiBlitz3.ab2@8148>    SUBQ #1,d0
0003311A <AmiBlitz3.ab2@8149>    BNE fetchpees__skip0_loop
0003311C <AmiBlitz3.ab2@8150>     MOVEQ #0,d0
00033122 <AmiBlitz3.ab2@8153>       BTST d0,regmask
00033126 <AmiBlitz3.ab2@8154>       BEQ fetchpees__skip0_noa7
00033128 <AmiBlitz3.ab2@8155>       MOVEQ #0,d1
0003312A <AmiBlitz3.ab2@8156>       MOVE.w d0,d1
0003312C <AmiBlitz3.ab2@8157>       SUBQ.w #1,d1
0003312E <AmiBlitz3.ab2@8158>       ASL #7,d1
00033134 <AmiBlitz3.ab2@8159>       OR.l #$f2277400,d1                                   ;fmove.d
00033138 <AmiBlitz3.ab2@8161>       BSR writelong
0003313E <AmiBlitz3.ab2@8163>       ADDQ.l #2,stacktrack
00033144 <AmiBlitz3.ab2@8164>       MOVE.l stacktrack,d1
0003314A <AmiBlitz3.ab2@8165>       CMP.l #180,d1
0003314E <AmiBlitz3.ab2@8166>       BGT conmemerr                                        ;formel too complex
00033150 <AmiBlitz3.ab2@8167>       MOVE.l a0,-(a7)
00033156 <AmiBlitz3.ab2@8168>       LEA fpustackbase,a0
0003315E <AmiBlitz3.ab2@8169>       MOVE.w regmask,0(a0,d1)
00033160 <AmiBlitz3.ab2@8170>       MOVE.l (a7)+,a0
00033162 <AmiBlitz3.ab2@8173>       ADDQ.w #1,d0
00033168 <AmiBlitz3.ab2@8174>       CMP.w regnumfunc,d0
0003316C <AmiBlitz3.ab2@8175>       BLE fetchpees__skip0_loop2
0003316E <AmiBlitz3.ab2@8178>       MOVE.l (a7)+,d0
00033174 <AmiBlitz3.ab2@8181>      MOVE.l currentfunccall,-(a7)
0003317A <AmiBlitz3.ab2@8182>      MOVE.w parnum,-(a7)
0003317E <AmiBlitz3.ab2@8183>      BSR.w JL_0_6836
00033184 <AmiBlitz3.ab2@8184>      MOVE.w (a7)+,parnum
0003318A <AmiBlitz3.ab2@8186>    MOVE.l (a7)+,currentfunccall
00033190 <AmiBlitz3.ab2@8187>    TST.b fpu
00033194 <AmiBlitz3.ab2@8188>    BEQ fetchpees__skip0_noprint
00033196 <AmiBlitz3.ab2@8189>   MOVE.l (a7),a2
00033198 <AmiBlitz3.ab2@8190>   ADDQ.l #1,a2
0003319C <AmiBlitz3.ab2@8191>    CMP.b #5,d2
000331A0 <AmiBlitz3.ab2@8192>   BNE fetchpees__skip0_noprint
000331A6 <AmiBlitz3.ab2@8193>   CMP.b #$5d,24(a2)
000331AA <AmiBlitz3.ab2@8194>   BNE fetchpees__skip0_noprint
000331B0 <AmiBlitz3.ab2@8195>   CMP.b #$81,25(a2)
000331B4 <AmiBlitz3.ab2@8196>   BLT fetchpees__skip0_noprint
000331BA <AmiBlitz3.ab2@8197>   CMP.b #$86,25(a2)
000331BE <AmiBlitz3.ab2@8198>   BEQ fetchpees__skip0_ok
000331C4 <AmiBlitz3.ab2@8199>   CMP.b #$87,25(a2)
000331C8 <AmiBlitz3.ab2@8200>   BEQ fetchpees__skip0_ok
000331CE <AmiBlitz3.ab2@8201>   CMP.b #$88,25(a2)
000331D2 <AmiBlitz3.ab2@8202>   BEQ fetchpees__skip0_ok
000331D8 <AmiBlitz3.ab2@8203>   CMP.b #$83,25(a2)
000331DC <AmiBlitz3.ab2@8204>   BGT fetchpees__skip0_noprint
000331E2 <AmiBlitz3.ab2@8207>   MOVE.l destpointer,a4
000331E8 <AmiBlitz3.ab2@8208>   CMP.w #$2f00,-2(a4)
000331EC <AmiBlitz3.ab2@8209>   BNE fetchpees__skip0_noprint
000331F2 <AmiBlitz3.ab2@8210>   SUBQ.l #2,destpointer
000331F8 <AmiBlitz3.ab2@8212>   MOVE.l #$f2277400,d1
000331FC <AmiBlitz3.ab2@8213>   BSR writelong                                            ;fmove.d fp0,-(a7)
00033202 <AmiBlitz3.ab2@8214>   ADDQ #4,a2offset
00033208 <AmiBlitz3.ab2@8232>   CLR.b optistring
0003320A <AmiBlitz3.ab2@8233>   MOVEA.l (A7)+,A2
0003320E <AmiBlitz3.ab2@8234>    CMP.w #"@",d0
00033212 <AmiBlitz3.ab2@8235>   BNE fetchpees__skip0_l10
00033216 <AmiBlitz3.ab2@8236>    CMP.b #"@",(a5)
0003321A <AmiBlitz3.ab2@8237>   BNE fetchpees__skip0_l10
00033220 <AmiBlitz3.ab2@8238>   TST.w ininclude
00033224 <AmiBlitz3.ab2@8239>   BNE errorjoin
0003322A <AmiBlitz3.ab2@8240>   MOVEA.l sourceline,A5
0003322C <AmiBlitz3.ab2@8241>            MOVEA.l (A5),A5
00033232 <AmiBlitz3.ab2@8242>            MOVE.l a5,sourceline
00033238 <AmiBlitz3.ab2@8243>            ADDQ.l #1,linenumat
0003323C <AmiBlitz3.ab2@8244>            LEA $9(A5),A5
0003323E <AmiBlitz3.ab2@8245>            MOVEQ #0,d0
00033242 <AmiBlitz3.ab2@8246>            BSR get1bytemain
00033246 <AmiBlitz3.ab2@8249>    CMP.b #32,(a5)+ ;for space after a ,
0003324A <AmiBlitz3.ab2@8250>    BEQ fetchpees__skip0_l10:
0003324C <AmiBlitz3.ab2@8251>    SUBQ.l #1,a5
00033250 <AmiBlitz3.ab2@8253>    CMP.w #"@@",(a5)                                        ;if merge
00033254 <AmiBlitz3.ab2@8254>    BNE fetchpees__skip0_l15
00033258 <AmiBlitz3.ab2@8255>    MOVEM.l d0-d7/a0-a4/a6,-(a7)
0003325E <AmiBlitz3.ab2@8256>    JSR mergeline
00033262 <AmiBlitz3.ab2@8257>    MOVEM.l (a7)+,d0-d7/a0-a4/a6
00033264 <AmiBlitz3.ab2@8277>       SUBQ.w #1,(A7)
00033268 <AmiBlitz3.ab2@8278>    BEQ.w fetchpees__done
0003326C <AmiBlitz3.ab2@8280>     CMP.w #$2C,D0
00033270 <AmiBlitz3.ab2@8282>    BNE overloadfunc
00033274 <AmiBlitz3.ab2@8283> BRA.w fetchpees__loop
00033276 <AmiBlitz3.ab2@8286>   ADDQ.w #2,A7
0003327C <AmiBlitz3.ab2@8287>   MOVE.w (A7)+,partostack
0003327E <AmiBlitz3.ab2@8288>   MOVE.w (A7)+,D1
00033284 <AmiBlitz3.ab2@8289>   CLR.b funccall
00033286 <AmiBlitz3.ab2@8290> RTS
0003328C <AmiBlitz3.ab2@8294>   CLR.b funccall
00033292 <AmiBlitz3.ab2@8295>   MOVE.w regnum,d1
00033298 <AmiBlitz3.ab2@8296>   MOVE.l currentfunccall,a4
0003329C <AmiBlitz3.ab2@8297>   CMP.b $20(a4),d1                                         ;increase if more pars
000332A0 <AmiBlitz3.ab2@8298>   BLT notparerr
000332A2 <AmiBlitz3.ab2@8301>   MOVE.b (a2)+,d2
000332AA <AmiBlitz3.ab2@8302>   ADD.w #1,parnum
000332B0 <AmiBlitz3.ab2@8303>   TST.b fpu
000332B4 <AmiBlitz3.ab2@8304>   BEQ 'nofpu
000332B8 <AmiBlitz3.ab2@8305>   CMP.b #5,d2
000332BC <AmiBlitz3.ab2@8306>   BNE 'nofpu
000332BE <AmiBlitz3.ab2@8307>   MOVEQ #0,d1
000332C4 <AmiBlitz3.ab2@8308>   MOVE.w regnum,d1
000332CC <AmiBlitz3.ab2@8309>   CMP.w #6,regnum
000332D0 <AmiBlitz3.ab2@8310>   BLT 'nostack2
000332D4 <AmiBlitz3.ab2@8315>   MOVE.w #$2c3c,d1
000332D8 <AmiBlitz3.ab2@8316>   BSR writeword
000332DE <AmiBlitz3.ab2@8317>   MOVE.l #$bf800000,d1
000332E2 <AmiBlitz3.ab2@8318>   BSR writelong
000332E6 <AmiBlitz3.ab2@8319>   MOVE.w #$c4ff,d1                                         ;savetemp+regnum
000332EC <AmiBlitz3.ab2@8320>   ADD.w parnum,d1
000332F2 <AmiBlitz3.ab2@8321>   JSR Atokejsr
000332F8 <AmiBlitz3.ab2@8322>   TST.w dontwrite
000332FC <AmiBlitz3.ab2@8323>   BNE 'l1
00033302 <AmiBlitz3.ab2@8324>   MOVE.l data1start,d1
00033308 <AmiBlitz3.ab2@8325>   MOVE.l destpointer,a4
0003330C <AmiBlitz3.ab2@8326>   ADD.l d1,-4(a4)
00033312 <AmiBlitz3.ab2@8327>   MOVE.l destpointer,d1
00033314 <AmiBlitz3.ab2@8328>   SUBQ.l #4,d1
0003331A <AmiBlitz3.ab2@8329>   SUB.l destbufferstart,d1
0003331C <AmiBlitz3.ab2@8330>   MOVE.l d2,-(a7)
0003331E <AmiBlitz3.ab2@8331>   MOVE.l d1,d2
00033324 <AmiBlitz3.ab2@8332>   JSR addhunkoffset
00033326 <AmiBlitz3.ab2@8333>   MOVE.l (a7)+,d2
0003332A <AmiBlitz3.ab2@8334> BRA 'l1
0003332C <AmiBlitz3.ab2@8337>   ASL.l #7,d1
00033332 <AmiBlitz3.ab2@8338>   OR.l #$F23C5000,d1                                       ;fmove.w #-1,fpx
00033336 <AmiBlitz3.ab2@8339>   BSR writelong
00033338 <AmiBlitz3.ab2@8340>   MOVEQ #-1,d1                                             ;-1
0003333C <AmiBlitz3.ab2@8341>   BSR writeword
00033340 <AmiBlitz3.ab2@8342> BRA 'l1
00033346 <AmiBlitz3.ab2@8345>   MOVE.w regnum,d1
0003334E <AmiBlitz3.ab2@8346>   CMP.w #6,regnum
00033352 <AmiBlitz3.ab2@8347>   BLT 'nostack
00033356 <AmiBlitz3.ab2@8352>   CMP.b #2,d2
0003335A <AmiBlitz3.ab2@8353>   BGT 'nw
0003335E <AmiBlitz3.ab2@8354> BRA 'nos
00033362 <AmiBlitz3.ab2@8363>   CMP.w #7,d2
00033366 <AmiBlitz3.ab2@8364>   BNE 'nos
0003336C <AmiBlitz3.ab2@8365>   ADDQ #4,a2offset
00033372 <AmiBlitz3.ab2@8367>     MOVE.l #$48780000,d1
00033376 <AmiBlitz3.ab2@8368>     BSR writelong
0003337C <AmiBlitz3.ab2@8369>     ADDQ.w #4,a2offset
00033380 <AmiBlitz3.ab2@8370>     MOVE.w #$2f3c,d1
00033384 <AmiBlitz3.ab2@8371>     BSR writeword
0003338A <AmiBlitz3.ab2@8372>     MOVE.l #-1,d1
0003338E <AmiBlitz3.ab2@8373>     BSR writelong
00033392 <AmiBlitz3.ab2@8374>   BRA 'l1
00033396 <AmiBlitz3.ab2@8378>   CMP.b #4,d2
0003339A <AmiBlitz3.ab2@8379>       BNE 'noq
0003339E <AmiBlitz3.ab2@8380>       MOVE.w #$2c3c,d1
000333A2 <AmiBlitz3.ab2@8381>       BSR writeword
000333A8 <AmiBlitz3.ab2@8382>       MOVE.l #$ffff0000,d1
000333AC <AmiBlitz3.ab2@8383>       BSR writelong
000333B0 <AmiBlitz3.ab2@8384> BRA 'noq2
000333B4 <AmiBlitz3.ab2@8387>      CMP.b #5,d2
000333B8 <AmiBlitz3.ab2@8388>      BNE 'nof
000333BC <AmiBlitz3.ab2@8389>       MOVE.w #$2c3c,d1
000333C0 <AmiBlitz3.ab2@8390>       BSR writeword
000333C6 <AmiBlitz3.ab2@8391>       MOVE.l #$800000c1,d1
000333CA <AmiBlitz3.ab2@8392>       BSR writelong
000333CE <AmiBlitz3.ab2@8393> BRA 'noq2
000333D2 <AmiBlitz3.ab2@8396>   MOVE.w #$7cff,d1
000333D6 <AmiBlitz3.ab2@8397>   BSR writeword
000333DA <AmiBlitz3.ab2@8400>   MOVE.w #$c4ff,d1                                         ;savetemp+regnum
000333E0 <AmiBlitz3.ab2@8401>   ADD.w parnum,d1
000333E6 <AmiBlitz3.ab2@8402>   JSR Atokejsr
000333EC <AmiBlitz3.ab2@8403>    TST.w dontwrite
000333F0 <AmiBlitz3.ab2@8404>    BNE 'l1
000333F6 <AmiBlitz3.ab2@8405>    MOVE.l data1start,d1
000333FC <AmiBlitz3.ab2@8406>    MOVE.l destpointer,a4
00033400 <AmiBlitz3.ab2@8407>    ADD.l d1,-4(a4)
00033406 <AmiBlitz3.ab2@8408>    MOVE.l destpointer,d1
00033408 <AmiBlitz3.ab2@8409>    SUBQ.l #4,d1
0003340E <AmiBlitz3.ab2@8410>    SUB.l destbufferstart,d1
00033410 <AmiBlitz3.ab2@8411>    MOVE.l d2,-(a7)
00033412 <AmiBlitz3.ab2@8412>    MOVE.l d1,d2
00033418 <AmiBlitz3.ab2@8413>    JSR addhunkoffset
0003341A <AmiBlitz3.ab2@8414>    MOVE.l (a7)+,d2
0003341E <AmiBlitz3.ab2@8415> BRA 'l1
00033420 <AmiBlitz3.ab2@8418>   ASL.l #8,d1
00033422 <AmiBlitz3.ab2@8419>   ASL.l #1,d1
00033428 <AmiBlitz3.ab2@8420>   OR.l #$203c,d1                                           ;-1
0003342C <AmiBlitz3.ab2@8421>   BSR writeword
00033432 <AmiBlitz3.ab2@8422>   MOVE.l #-1,d1
00033436 <AmiBlitz3.ab2@8423>   CMP.b #4,d2
0003343A <AmiBlitz3.ab2@8424>   BNE 'nq1
00033440 <AmiBlitz3.ab2@8425>   MOVE.l #$ffff0000,d1
00033444 <AmiBlitz3.ab2@8428>   CMP.b #5,d2
00033448 <AmiBlitz3.ab2@8429>   BNE 'nof2
0003344E <AmiBlitz3.ab2@8430>   TST.b fpu
00033452 <AmiBlitz3.ab2@8431>   BNE 'nof2
00033458 <AmiBlitz3.ab2@8432>   MOVE.l #$800000c1,d1
0003345C <AmiBlitz3.ab2@8435>    BSR writelong
00033460 <AmiBlitz3.ab2@8436>    CMP.b #7,d2
00033464 <AmiBlitz3.ab2@8437>    BNE 'l1
0003346A <AmiBlitz3.ab2@8439>      MOVE.l #$48780000,d1
0003346E <AmiBlitz3.ab2@8440>      BSR writelong
00033474 <AmiBlitz3.ab2@8442>    ADDQ.w #4,a2offset                                      ; bug fix for string parameters
0003347A <AmiBlitz3.ab2@8443>    MOVE.l #$594f,d1                                        ; subq #4,a7
0003347E <AmiBlitz3.ab2@8444>    BSR writeword
00033480 <AmiBlitz3.ab2@8447>    SUBQ.w #1,(A7)
00033484 <AmiBlitz3.ab2@8448>    BEQ.w fetchpees__done
0003348A <AmiBlitz3.ab2@8449>    ADDQ.w #1,regnum
0003348E <AmiBlitz3.ab2@8450> BRA 'ol2
00033490 <AmiBlitz3.ab2@8453>    MOVE.w D2,D1
00033494 <AmiBlitz3.ab2@8454>    ANDI.w #$40,D1
0003349A <AmiBlitz3.ab2@8455>    MOVE.b D1,partostack
0003349C <AmiBlitz3.ab2@8456>    TST.b D2
000334A0 <AmiBlitz3.ab2@8457>     BMI.w handlevara
000334A4 <AmiBlitz3.ab2@8458>    BTST #$5,D2
000334A8 <AmiBlitz3.ab2@8459>     BNE.w handlearr
000334AE <AmiBlitz3.ab2@8460>     MOVE.w regnumstore,-(a7)
000334B4 <AmiBlitz3.ab2@8461>     MOVE.w tempregnum,-(a7)
000334BA <AmiBlitz3.ab2@8462>     MOVE.w parnum,-(a7)
000334BE <AmiBlitz3.ab2@8463>     BSR.w getap                                        ;recursive entry
000334C4 <AmiBlitz3.ab2@8464>     MOVE.w (a7)+,parnum
000334CA <AmiBlitz3.ab2@8465>     MOVE.w (a7)+,tempregnum
000334D0 <AmiBlitz3.ab2@8466>     MOVE.w (a7)+,regnumstore
000334D4 <AmiBlitz3.ab2@8469>     MOVE.w partostack(PC),D1
000334D8 <AmiBlitz3.ab2@8470>     BEQ.w JL_0_6886
000334DE <AmiBlitz3.ab2@8473>    ADDQ.w #4,a2offset
000334E4 <AmiBlitz3.ab2@8476>    MOVE.w pushdn,D1
000334EA <AmiBlitz3.ab2@8477>    OR.w regnum,D1
000334EE <AmiBlitz3.ab2@8478>    CMP.w #$3,D2
000334F2 <AmiBlitz3.ab2@8479>     BCC.w JL_0_6880
000334F8 <AmiBlitz3.ab2@8480>    SUBQ.w #2,a2offset
000334FC <AmiBlitz3.ab2@8481>    ORI.w #$1000,D1
00033500 <AmiBlitz3.ab2@8482>    BSR.w writeword
00033502 <AmiBlitz3.ab2@8483> RTS
00033506 <AmiBlitz3.ab2@8486>   CMP.b #7,d2
0003350A <AmiBlitz3.ab2@8487>    BNE 'l10
00033512 <AmiBlitz3.ab2@8488>    CMP.b #2,optistring
00033518 <AmiBlitz3.ab2@8492>   TST.b iee
0003351C <AmiBlitz3.ab2@8493>   BEQ 'old
00033520 <AmiBlitz3.ab2@8494>   CMP.b #5,d2
00033524 <AmiBlitz3.ab2@8495>   BNE 'old
00033528 <AmiBlitz3.ab2@8498>   BSR.w writeword                                          ;write val to stack
0003352A <AmiBlitz3.ab2@8499> RTS
00033530 <AmiBlitz3.ab2@8502>   SUBQ.w #4,a2offset
00033532 <AmiBlitz3.ab2@8503> RTS
00033538 <AmiBlitz3.ab2@8506>   ADDQ.w #1,regnum
0003353A <AmiBlitz3.ab2@8507> RTS
0003353C <AmiBlitz3.ab2@8511>   MOVEQ.l #$03,D2
00033540 <AmiBlitz3.ab2@8512> BRA.w JL_0_6854
00033544 <AmiBlitz3.ab2@8516>   ANDI.w #$7,D2
00033546 <AmiBlitz3.ab2@8517>   MOVE.w D2,-(A7)
0003354A <AmiBlitz3.ab2@8518>    BSR.w JL_0_A916
0003354E <AmiBlitz3.ab2@8519>   CMP.b #$7,D2                                             ;ignore pnt to $
00033552 <AmiBlitz3.ab2@8520>    BEQ.w JL_0_68C0
00033556 <AmiBlitz3.ab2@8521>   BTST #$E,D2
0003355A <AmiBlitz3.ab2@8522>    BEQ.w JL_0_68B6
0003355E <AmiBlitz3.ab2@8523>   MOVE.b #$3,D2                                            ;pointer to long
00033562 <AmiBlitz3.ab2@8524> BRA.w JL_0_68C0
00033564 <AmiBlitz3.ab2@8527>    TST.b D2
00033568 <AmiBlitz3.ab2@8528>    BNE.w JL_0_68C0
0003356C <AmiBlitz3.ab2@8529>   MOVE.b #$3,D2
0003356E <AmiBlitz3.ab2@8532>   MOVE.w (A7)+,D3
00033570 <AmiBlitz3.ab2@8533>   TST.b D3
00033574 <AmiBlitz3.ab2@8534>    BEQ.w JL_0_68D2
00033576 <AmiBlitz3.ab2@8535>   CMP.b D2,D3
0003357A <AmiBlitz3.ab2@8536>    BEQ.w putalp
0003357E <AmiBlitz3.ab2@8537> BRA.w mismatcherr
00033584 <AmiBlitz3.ab2@8540>   ADDQ.w #2,a2offset
00033588 <AmiBlitz3.ab2@8541>   MOVE.w ptype(PC),D1
0003358C <AmiBlitz3.ab2@8542>    BSR.w writeword
0003358E <AmiBlitz3.ab2@8543>   MOVEQ.l #$00,D1
00033590 <AmiBlitz3.ab2@8544>   MOVE.b D2,D1
00033594 <AmiBlitz3.ab2@8545>    BSR.w writeword
00033598 <AmiBlitz3.ab2@8546> BRA.w putalp
0003359A <AmiBlitz3.ab2@8549>    MOVE.w D2,-(A7)
0003359E <AmiBlitz3.ab2@8550>    BSR.w JL_0_694E
000335A4 <AmiBlitz3.ab2@8551>   BTST #$4,$1(A7)
000335A8 <AmiBlitz3.ab2@8552>    BEQ.w JL_0_6900
000335AC <AmiBlitz3.ab2@8553>    BSR.w JL_0_699A
000335B2 <AmiBlitz3.ab2@8556>    BTST #$3,$1(A7)
000335B6 <AmiBlitz3.ab2@8557>    BEQ.w JL_0_690E
000335BA <AmiBlitz3.ab2@8558>    BSR.w sendtype
000335BC <AmiBlitz3.ab2@8561>    MOVE.w (A7)+,D2
000335C0 <AmiBlitz3.ab2@8562> BRA.w get1bytemain
000335C6 <AmiBlitz3.ab2@8565>   MOVE.w regnum,D1
000335C8 <AmiBlitz3.ab2@8566>   LSL.w #8,D1
000335CA <AmiBlitz3.ab2@8567>   LSL.w #1,D1
000335CE <AmiBlitz3.ab2@8568>   ORI.w #$7000,D1
000335D4 <AmiBlitz3.ab2@8569>   BTST #$0,$7(A3)
000335D8 <AmiBlitz3.ab2@8570>    BNE.w JL_0_6946                                         ;A Pointer
000335E0 <AmiBlitz3.ab2@8571>   CMPI.l #$100,$4(A2)
000335E4 <AmiBlitz3.ab2@8572>    BCC.w arrerr1                                           ;illegal type to send
000335E8 <AmiBlitz3.ab2@8573>   MOVE.b $7(A2),D1
000335EC <AmiBlitz3.ab2@8576>   BSR.w writeword                                          ;moveq #type,d regat
000335EE <AmiBlitz3.ab2@8577>   MOVEQ.l #$02,D2                                          ;just a word.
000335F2 <AmiBlitz3.ab2@8578> BRA.w JL_0_685C
000335F6 <AmiBlitz3.ab2@8581>   MOVE.b #$3,D1
000335FA <AmiBlitz3.ab2@8582> BRA.w JL_0_693C
000335FE <AmiBlitz3.ab2@8586>    BSR.w get1bytemain                                      ;write array paramter code
00033602 <AmiBlitz3.ab2@8587>    BSR.w getparameter
0003360A <AmiBlitz3.ab2@8588>   BTST #$1,flagmask+1
0003360E <AmiBlitz3.ab2@8589>    BEQ.w syntaxerr
00033612 <AmiBlitz3.ab2@8590>    BSR.w JL_0_8E3C
00033616 <AmiBlitz3.ab2@8591>    BSR.w get1bytemain
0003361A <AmiBlitz3.ab2@8592>   CMP.w #$29,D0                                            ;we just want a() or whatever
0003361E <AmiBlitz3.ab2@8593>    BNE.w syntaxerr
00033624 <AmiBlitz3.ab2@8594>   MOVE.w notshared,D1
00033628 <AmiBlitz3.ab2@8595>    BNE.w noarrayerr
0003362E <AmiBlitz3.ab2@8596>   MOVE.w regnum,D1
00033630 <AmiBlitz3.ab2@8597>   LSL.w #8,D1
00033632 <AmiBlitz3.ab2@8598>   LSL.w #1,D1
00033636 <AmiBlitz3.ab2@8599>   OR.w fbase(PC),D1
0003363C <AmiBlitz3.ab2@8600>    TST.b varmode
00033640 <AmiBlitz3.ab2@8601>    BEQ 'l1
00033644 <AmiBlitz3.ab2@8602>    BCLR #0,d1
00033648 <AmiBlitz3.ab2@8605>    BSR.w writeword
0003364C <AmiBlitz3.ab2@8606>   MOVE.w $4(A3),D1
00033650 <AmiBlitz3.ab2@8607>    BSR.w writeword
00033654 <AmiBlitz3.ab2@8608> BRA.w putalp
0003365A <AmiBlitz3.ab2@8612>   MOVE.w regnum,D1
0003365C <AmiBlitz3.ab2@8613>   LSL.w #8,D1
0003365E <AmiBlitz3.ab2@8614>   LSL.w #1,D1
00033662 <AmiBlitz3.ab2@8615>   OR.w fbase(PC),D1
00033668 <AmiBlitz3.ab2@8616>    TST.b varmode
0003366C <AmiBlitz3.ab2@8617>    BEQ 'l1
00033670 <AmiBlitz3.ab2@8618>    BCLR #0,d1
00033674 <AmiBlitz3.ab2@8621>    BSR.w writeword
00033678 <AmiBlitz3.ab2@8622>   MOVE.w $8(A3),D1
0003367A <AmiBlitz3.ab2@8623>   LSL.w #2,D1
00033680 <AmiBlitz3.ab2@8624>   MOVE.w varmode,D2
00033684 <AmiBlitz3.ab2@8625>    BEQ.w JL_0_69BE
00033686 <AmiBlitz3.ab2@8626>   NEG.w D1
0003368A <AmiBlitz3.ab2@8629>    ADD.w $4(A3),D1
0003368E <AmiBlitz3.ab2@8630>    BSR.w writeword
00033694 <AmiBlitz3.ab2@8631>   MOVE.w regnum,D1
00033696 <AmiBlitz3.ab2@8632>   LSL.w #8,D1
00033698 <AmiBlitz3.ab2@8633>   LSL.w #1,D1
0003369C <AmiBlitz3.ab2@8634>   MOVE.w partostack(PC),D2
000336A0 <AmiBlitz3.ab2@8635>    BNE.w JL_0_69F4
000336A8 <AmiBlitz3.ab2@8636>   CMPI.w #$7,regnum
000336AC <AmiBlitz3.ab2@8637>    BCC.w JL_0_69F4
000336B0 <AmiBlitz3.ab2@8638>   OR.w pushlast(PC),D1
000336B6 <AmiBlitz3.ab2@8639>   MOVE.w regnum,D2
000336B8 <AmiBlitz3.ab2@8640>   SUBQ.w #1,D2
000336BA <AmiBlitz3.ab2@8641>   OR.w D2,D1
000336BE <AmiBlitz3.ab2@8642> BRA.w JL_0_69F8
000336C2 <AmiBlitz3.ab2@8645>   OR.w pushadd(PC),D1
000336C6 <AmiBlitz3.ab2@8648>   BSR.w writeword
000336CE <AmiBlitz3.ab2@8649>   MOVE.b #$1,partostack
000336D2 <AmiBlitz3.ab2@8650> BRA.w putalp
000336D6 <AmiBlitz3.ab2@8654> fbase:       Dc.b $20,$2D,$00,$00                           ;MOVE.L  $0000(A5),D0
000336D8 <AmiBlitz3.ab2@8655> pushadd:     Dc.b $D0,$97                                   ;ADD.L (A7),D0
000336DA <AmiBlitz3.ab2@8656> pushlast:    Dc.b $D0,$80                                   ;ADD.L D0,D0
000336DE <AmiBlitz3.ab2@8661>   ANDI.w #$7,D2                                            ;0-7 (unknown to string)
000336E2 <AmiBlitz3.ab2@8662>    BEQ.w evalu2
000336E6 <AmiBlitz3.ab2@8663> BRA.w eval
000336EC <AmiBlitz3.ab2@8667>   MOVEA.l libpointer,A1
000336F0 <AmiBlitz3.ab2@8670>    CMPA.w #$0,A1
000336F4 <AmiBlitz3.ab2@8671>    BEQ.w resetlibs__done
000336FA <AmiBlitz3.ab2@8672>   MOVE.w #-1,$A(A1)
00033700 <AmiBlitz3.ab2@8673>   BCLR #$7,$C(A1)
00033702 <AmiBlitz3.ab2@8674>   MOVEA.l (A1),A1
00033706 <AmiBlitz3.ab2@8675> BRA.w resetlibs__loop
00033708 <AmiBlitz3.ab2@8678> RTS
0003370C <AmiBlitz3.ab2@8682>   MOVE.w #$FFFE,D1
00033710 <AmiBlitz3.ab2@8685>    BSR.w JL_0_6F38
00033716 <AmiBlitz3.ab2@8688>   TST.w cfetchmode
0003371A <AmiBlitz3.ab2@8689>    BEQ.w uselib3__noconst
00033720 <AmiBlitz3.ab2@8690>   BTST #$6,$C(A1)
00033724 <AmiBlitz3.ab2@8691>    BNE.w uselib3__constok
00033728 <AmiBlitz3.ab2@8692> BRA.w badconerr                                            ;Can't use this Library!
0003372A <AmiBlitz3.ab2@8695> RTS
00033730 <AmiBlitz3.ab2@8698>    BSET #$7,$C(A1)
00033734 <AmiBlitz3.ab2@8699>    BNE.w JL_0_6C74                                         ;already done....
0003373A <AmiBlitz3.ab2@8700>    CMPI.w #-1,$A(A1)
0003373E <AmiBlitz3.ab2@8701>    BNE.w JL_0_6C74                                         ;something already here
00033744 <AmiBlitz3.ab2@8705>    TST.w dirmode
00033748 <AmiBlitz3.ab2@8706>    BEQ.b JL_0_6A86
0003374E <AmiBlitz3.ab2@8707>    TST.b exdebug
00033752 <AmiBlitz3.ab2@8708>    BEQ 'l1
00033756 <AmiBlitz3.ab2@8709> BRA.b JL_0_6A86
0003375C <AmiBlitz3.ab2@8712>   BCLR #$7,$C(A1)
00033760 <AmiBlitz3.ab2@8713> BRA.w dirliberr
00033766 <AmiBlitz3.ab2@8716>   MOVE.b debugmode,-(a7)
0003376A <AmiBlitz3.ab2@8717>   MOVEM.l D1/A0/A2,-(A7)
00033772 <AmiBlitz3.ab2@8723>   BTST #$7,use_debugger
00033776 <AmiBlitz3.ab2@8724>   BNE 'debugon
00033778 <AmiBlitz3.ab2@8725>   CLR.w D1
0003377C <AmiBlitz3.ab2@8726> BRA.b 'debugoff
0003377E <AmiBlitz3.ab2@8729>   SNE D1
00033784 <AmiBlitz3.ab2@8732>   MOVE.b d1,debugmode
00033786 <AmiBlitz3.ab2@8736>   MOVEA.l A1,A0
0003378A <AmiBlitz3.ab2@8737>   ADDA.l $12(A1),A0
0003378E <AmiBlitz3.ab2@8738>   TST.w -$2(A0)
00033792 <AmiBlitz3.ab2@8739>    BEQ.w JL_0_6AD2
00033796 <AmiBlitz3.ab2@8740>   MOVEM.l A0-A1,-(A7)
0003379A <AmiBlitz3.ab2@8741>   MOVE.w #$FB4F,D1
0003379E <AmiBlitz3.ab2@8742>    BSR.w uselib
000337A2 <AmiBlitz3.ab2@8743>   MOVEM.l (A7)+,A0-A1
000337A8 <AmiBlitz3.ab2@8744>   ADDQ.w #1,globalvarpointer
000337B0 <AmiBlitz3.ab2@8745>   BCLR #$0,globalvarpointer+1
000337B8 <AmiBlitz3.ab2@8746>   MOVE.w globalvarpointer,-$6(A0)
000337BE <AmiBlitz3.ab2@8747>   ADDQ.w #4,globalvarpointer
000337C2 <AmiBlitz3.ab2@8748>   TST.l -$E(A0)
000337C6 <AmiBlitz3.ab2@8749>    BEQ.w JL_0_6AD2
000337CC <AmiBlitz3.ab2@8750>   ADDQ.w #4,globalvarpointer
000337D4 <AmiBlitz3.ab2@8753>   MOVE.l libend,$28(A1)
000337D6 <AmiBlitz3.ab2@8754>   MOVEA.l A1,A0
000337DA <AmiBlitz3.ab2@8755>   ADDA.l $12(A1),A0
000337DC <AmiBlitz3.ab2@8756>   MOVE.l A1,D1
000337E0 <AmiBlitz3.ab2@8757>   ADD.l $6(A1),D1
000337E4 <AmiBlitz3.ab2@8758>   TST.l $2C(A1)
000337E8 <AmiBlitz3.ab2@8759>    BEQ.w JL_0_6AFE
000337EE <AmiBlitz3.ab2@8761>   TST.b debugmode
000337F2 <AmiBlitz3.ab2@8762>    BNE.w JL_0_6AFE
000337F4 <AmiBlitz3.ab2@8763>   MOVE.l A1,D1
000337F8 <AmiBlitz3.ab2@8764>   ADD.l $2C(A1),D1
000337FE <AmiBlitz3.ab2@8767>   MOVEA.l libend,A2
00033804 <AmiBlitz3.ab2@8770>   CMPA.l data1start,A2
00033808 <AmiBlitz3.ab2@8771>    BCS.w JL_0_6B24
00033810 <AmiBlitz3.ab2@8772>   MOVE.w #$FFFF,dontwrite
00033812 <AmiBlitz3.ab2@8775>   ADDQ.w #2,A0
00033814 <AmiBlitz3.ab2@8776>   ADDQ.w #2,A2
00033816 <AmiBlitz3.ab2@8777>   CMPA.l D1,A0
0003381A <AmiBlitz3.ab2@8778>    BCS.w JL_0_6B16
0003381E <AmiBlitz3.ab2@8779> BRA.w JL_0_6B2C
00033820 <AmiBlitz3.ab2@8782>   MOVE.w (A0)+,(A2)+                                       ;copylibcode
00033822 <AmiBlitz3.ab2@8783>   CMPA.l D1,A0
00033826 <AmiBlitz3.ab2@8784>    BCS.w JL_0_6B04
0003382C <AmiBlitz3.ab2@8787>   MOVE.l A2,libend
00033830 <AmiBlitz3.ab2@8788>   MOVE.l $20(A1),D1
00033834 <AmiBlitz3.ab2@8789>    BEQ.w JL_0_6BB8
00033838 <AmiBlitz3.ab2@8790>   MOVEM.l D0/D2-D3,-(A7)
0003383C <AmiBlitz3.ab2@8791>   MOVEA.l $24(A1),A0
0003383E <AmiBlitz3.ab2@8792>   MOVEQ.l #$00,D3
00033840 <AmiBlitz3.ab2@8795>   MOVE.l (A0)+,D2
00033844 <AmiBlitz3.ab2@8796>   TST.l $2C(A1)
00033848 <AmiBlitz3.ab2@8797>    BEQ.w JL_0_6B60
0003384E <AmiBlitz3.ab2@8798>   TST.b debugmode
00033852 <AmiBlitz3.ab2@8799>    BNE.w JL_0_6B60
00033856 <AmiBlitz3.ab2@8800>   CMP.l $2C(A1),D2
0003385A <AmiBlitz3.ab2@8801>    BCC.w JL_0_6BA0
0003385E <AmiBlitz3.ab2@8804>   TST.w $0(A1,D2.L)
00033862 <AmiBlitz3.ab2@8805>    BPL.w JL_0_6B72
00033864 <AmiBlitz3.ab2@8806>   TST.l D3
00033868 <AmiBlitz3.ab2@8807>    BNE.w JL_0_6B72
0003386A <AmiBlitz3.ab2@8808>   MOVE.l A0,D0
0003386C <AmiBlitz3.ab2@8809>   MOVE.l D1,D3
00033870 <AmiBlitz3.ab2@8812>   SUB.l $12(A1),D2
00033874 <AmiBlitz3.ab2@8813>    BMI.w JL_0_6BA0
00033878 <AmiBlitz3.ab2@8814>   ADD.l $28(A1),D2
0003387A <AmiBlitz3.ab2@8815>   MOVE.l D2,-(A7)
00033880 <AmiBlitz3.ab2@8816>   SUB.l destbufferstart,D2
00033884 <AmiBlitz3.ab2@8817>    BSR.w addhunkoffset
00033886 <AmiBlitz3.ab2@8818>   MOVEA.l (A7)+,A2
0003388C <AmiBlitz3.ab2@8819>   TST.w dontwrite
00033890 <AmiBlitz3.ab2@8820>    BNE.w JL_0_6BA0
00033894 <AmiBlitz3.ab2@8821>   MOVE.l $28(A1),D2
00033898 <AmiBlitz3.ab2@8822>   SUB.l $12(A1),D2
0003389A <AmiBlitz3.ab2@8823>   ADD.l D2,(A2)
0003389C <AmiBlitz3.ab2@8826>    SUBQ.l #1,D1
000338A0 <AmiBlitz3.ab2@8827>    BNE.w JL_0_6B44
000338A2 <AmiBlitz3.ab2@8828>   MOVE.l D3,D2
000338A6 <AmiBlitz3.ab2@8829>    BEQ.w JL_0_6BB4
000338A8 <AmiBlitz3.ab2@8830>   MOVEA.l D0,A2
000338AA <AmiBlitz3.ab2@8831>   SUBQ.w #4,A2
000338AE <AmiBlitz3.ab2@8832>    BSR.w JL_0_6E34
000338B2 <AmiBlitz3.ab2@8835>    MOVEM.l (A7)+,D0/D2-D3
000338B6 <AmiBlitz3.ab2@8838>    MOVEM.l (A7)+,D1/A0/A2
000338BA <AmiBlitz3.ab2@8839>   MOVEM.l D1-D2,-(A7)
000338BE <AmiBlitz3.ab2@8840>   TST.w $1A(A1)
000338C2 <AmiBlitz3.ab2@8841>    BNE.w JL_0_6BD0
000338C6 <AmiBlitz3.ab2@8842>   CLR.w $A(A1)
000338CA <AmiBlitz3.ab2@8843> BRA.w JL_0_6C5E
000338D0 <AmiBlitz3.ab2@8846>   ADDQ.w #1,globalvarpointer
000338D8 <AmiBlitz3.ab2@8847>   BCLR #$0,globalvarpointer+1
000338E0 <AmiBlitz3.ab2@8848>   MOVE.w globalvarpointer,$A(A1)
000338E4 <AmiBlitz3.ab2@8849>   CMP.w #-$12D,D1
000338E8 <AmiBlitz3.ab2@8850>    BNE.w JL_0_6C16
000338F0 <AmiBlitz3.ab2@8851>   MOVE.w $A(A1),movestdn+2
000338F8 <AmiBlitz3.ab2@8852>   MOVE.w $A(A1),pusha3+2
00033900 <AmiBlitz3.ab2@8853>   MOVE.w $A(A1),pusha32+2
00033908 <AmiBlitz3.ab2@8854>   MOVE.w $A(A1),pulla3+2
00033910 <AmiBlitz3.ab2@8855>   MOVE.w $A(A1),geta3+2
00033914 <AmiBlitz3.ab2@8858>    CMP.w #-$3E9,D1
00033918 <AmiBlitz3.ab2@8859>    BNE.w JL_0_6C3E
00033920 <AmiBlitz3.ab2@8860>   MOVE.w $A(A1),dataget+2
00033928 <AmiBlitz3.ab2@8861>   MOVE.w $A(A1),dataput+2
00033930 <AmiBlitz3.ab2@8862>   MOVE.w $A(A1),rescode+6
00033938 <AmiBlitz3.ab2@8863>   MOVE.w $A(A1),rescode2+2
0003393E <AmiBlitz3.ab2@8866>   ADDQ.w #2,globalvarpointer
00033942 <AmiBlitz3.ab2@8867>   TST.w $1A(A1)
00033946 <AmiBlitz3.ab2@8868>    BMI.w JL_0_6C52
0003394C <AmiBlitz3.ab2@8869>   ADDQ.w #2,globalvarpointer
00033950 <AmiBlitz3.ab2@8872>   MOVEM.l D1/A1,-(A7)
00033954 <AmiBlitz3.ab2@8873>   BSR.w uselib2
00033958 <AmiBlitz3.ab2@8874>   MOVEM.l (A7)+,D1/A1
0003395A <AmiBlitz3.ab2@8877>   MOVE.w D1,D2
0003395E <AmiBlitz3.ab2@8878>   MOVE.l $16(A1),D1
00033962 <AmiBlitz3.ab2@8879>    BSR.w uselib2_org
00033966 <AmiBlitz3.ab2@8880>   MOVE.l $1C(A1),D1
0003396A <AmiBlitz3.ab2@8881>    BSR.w uselib2_org
0003396E <AmiBlitz3.ab2@8882>   MOVEM.l (A7)+,D1-D2
00033974 <AmiBlitz3.ab2@8884>   MOVE.b (a7)+,debugmode
00033976 <AmiBlitz3.ab2@8887> RTS
00033978 <AmiBlitz3.ab2@8891>   MOVEQ.l #$00,D2
0003397E <AmiBlitz3.ab2@8894>   MOVEA.l tokeslist,A2
00033980 <AmiBlitz3.ab2@8895>   CMPA.l D2,A2
00033984 <AmiBlitz3.ab2@8896>    BEQ.w JL_0_6CE0
00033986 <AmiBlitz3.ab2@8897>   MOVE.l A2,-(A7)
00033988 <AmiBlitz3.ab2@8900>   MOVEQ.l #$00,D3
0003398C <AmiBlitz3.ab2@8903>   MOVEA.l $8(A2),A3
0003398E <AmiBlitz3.ab2@8904>   CMPA.l D3,A3
00033992 <AmiBlitz3.ab2@8905>    BEQ.w JL_0_6CD2
00033994 <AmiBlitz3.ab2@8906>   MOVE.l A3,-(A7)
00033998 <AmiBlitz3.ab2@8907>   MOVEM.l D2-D3/A2-A3,-(A7)
0003399C <AmiBlitz3.ab2@8908>   MOVE.w $4(A2),D1
000339A0 <AmiBlitz3.ab2@8909>   MOVE.w $6(A2),D2
000339A4 <AmiBlitz3.ab2@8910>    BSR.w JL_0_6CE2
000339A8 <AmiBlitz3.ab2@8911>   MOVEM.l (A7)+,D2-D3/A2-A3
000339AE <AmiBlitz3.ab2@8912>   MOVE.w dontwrite,D0
000339B2 <AmiBlitz3.ab2@8913>    BEQ.w JL_0_6CBE
000339B4 <AmiBlitz3.ab2@8916>   MOVEA.l (A3),A3
000339B6 <AmiBlitz3.ab2@8917>   CMPA.l D3,A3
000339BA <AmiBlitz3.ab2@8918>    BNE.w JL_0_6CB2
000339BE <AmiBlitz3.ab2@8919> BRA.w JL_0_6CCC
000339C2 <AmiBlitz3.ab2@8922>   MOVEA.l $4(A3),A0
000339C4 <AmiBlitz3.ab2@8923>   MOVE.l D7,(A0)
000339C6 <AmiBlitz3.ab2@8924>   MOVEA.l (A3),A3
000339C8 <AmiBlitz3.ab2@8925>   CMPA.l D3,A3
000339CC <AmiBlitz3.ab2@8926>    BNE.w JL_0_6CBE
000339CE <AmiBlitz3.ab2@8929>   MOVE.l (A7)+,D3
000339D2 <AmiBlitz3.ab2@8930> BRA.w JL_0_6C88
000339D4 <AmiBlitz3.ab2@8933>    MOVEA.l (A2),A2
000339D6 <AmiBlitz3.ab2@8934>   CMPA.l D2,A2
000339DA <AmiBlitz3.ab2@8935>    BNE.w JL_0_6C86
000339DC <AmiBlitz3.ab2@8936>   MOVE.l (A7)+,D2
000339E0 <AmiBlitz3.ab2@8937> BRA.w JL_0_6C78
000339E2 <AmiBlitz3.ab2@8940> RTS
000339E4 <AmiBlitz3.ab2@8944>   MOVE.w D2,-(A7)
000339E8 <AmiBlitz3.ab2@8945>    BSR.w searchinstr
000339EA <AmiBlitz3.ab2@8946>   MOVE.w (A7)+,D2
000339F2 <AmiBlitz3.ab2@8947>   BCLR #$7,blitzmode
000339F6 <AmiBlitz3.ab2@8948>   BCLR #$E,D2
000339FA <AmiBlitz3.ab2@8949>    BEQ.w JL_0_6D02
00033A02 <AmiBlitz3.ab2@8950>   BSET #$7,blitzmode
00033A04 <AmiBlitz3.ab2@8953>   TST.w (A3)
00033A08 <AmiBlitz3.ab2@8954>    BEQ.w JL_0_6DAC
00033A0E <AmiBlitz3.ab2@8955>   BTST #$2,$1(A3)
00033A12 <AmiBlitz3.ab2@8956>    BNE.w tokeerr
00033A18 <AmiBlitz3.ab2@8957>   BTST #$3,$1(A3)
00033A1C <AmiBlitz3.ab2@8958>    BNE.w tokeerr
00033A20 <AmiBlitz3.ab2@8959>   LEA $6(A3),A3
00033A22 <AmiBlitz3.ab2@8962>   MOVE.w (A3)+,D0
00033A26 <AmiBlitz3.ab2@8963>    BMI.w tokeerr
00033A2A <AmiBlitz3.ab2@8964>   ANDI.w #$FF,D0
00033A2C <AmiBlitz3.ab2@8965>   ADDA.w D0,A3
00033A2E <AmiBlitz3.ab2@8966>   ADDQ.w #1,A3
00033A30 <AmiBlitz3.ab2@8967>   EXG.l D0,A3
00033A34 <AmiBlitz3.ab2@8968>   BCLR #$0,D0
00033A36 <AmiBlitz3.ab2@8969>   EXG.l D0,A3
00033A38 <AmiBlitz3.ab2@8970>   SUBQ.w #1,D2
00033A3C <AmiBlitz3.ab2@8971>    BPL.w JL_0_6D98
00033A3E <AmiBlitz3.ab2@8972>   TST.w (A3)
00033A42 <AmiBlitz3.ab2@8973>    BNE.w JL_0_6D76
00033A46 <AmiBlitz3.ab2@8974>   MOVE.l $2(A3),D0
00033A4A <AmiBlitz3.ab2@8975>   OR.l $A(A3),D0
00033A4E <AmiBlitz3.ab2@8976>    BNE.w JL_0_6D76
00033A54 <AmiBlitz3.ab2@8977>   BTST #$0,$9(A3)
00033A58 <AmiBlitz3.ab2@8978>    BNE.w JL_0_6D76
00033A5C <AmiBlitz3.ab2@8979>   MOVE.l $6(A3),D7
00033A60 <AmiBlitz3.ab2@8980>   MOVE.w $0(A2,D7.L),D0
00033A64 <AmiBlitz3.ab2@8981>   ANDI.w #$F000,D0
00033A68 <AmiBlitz3.ab2@8982>   CMP.w #-$6000,D0
00033A6C <AmiBlitz3.ab2@8983>    BEQ.w JL_0_6D76
00033A70 <AmiBlitz3.ab2@8986>   SUB.l $12(A2),D7
00033A74 <AmiBlitz3.ab2@8987>   ADD.l $28(A2),D7
00033A76 <AmiBlitz3.ab2@8988> RTS
00033A7C <AmiBlitz3.ab2@8992>   LEA cutejsr,A0
00033A82 <AmiBlitz3.ab2@8995>   MOVE.l destpointer,-(A7)
00033A8A <AmiBlitz3.ab2@8996>   MOVE.w #$FFFF,lasta6
00033A8C <AmiBlitz3.ab2@8999>    JSR (A0)
00033A90 <AmiBlitz3.ab2@9000>   MOVE.w #$4E75,D1
00033A94 <AmiBlitz3.ab2@9001>    BSR.w writeword
00033A96 <AmiBlitz3.ab2@9002>   MOVE.l (A7)+,D7
00033A98 <AmiBlitz3.ab2@9003> RTS
00033A9A <AmiBlitz3.ab2@9007>   TST.w (A3)+
00033A9E <AmiBlitz3.ab2@9008>    BEQ.w JL_0_6DA4
00033AA0 <AmiBlitz3.ab2@9009>   ADDQ.w #2,A3
00033AA4 <AmiBlitz3.ab2@9010> BRA.w JL_0_6D98
00033AA8 <AmiBlitz3.ab2@9013>   LEA $C(A3),A3
00033AAC <AmiBlitz3.ab2@9014> BRA.w JL_0_6D20
00033AAE <AmiBlitz3.ab2@9018>   TST.w D2
00033AB2 <AmiBlitz3.ab2@9019>    BNE.w tokeerr
00033AB6 <AmiBlitz3.ab2@9020>   TST.w $6(A3)
00033ABA <AmiBlitz3.ab2@9021>    BNE.w JL_0_6DE4
00033ABE <AmiBlitz3.ab2@9022>   MOVE.l $8(A3),D0
00033AC2 <AmiBlitz3.ab2@9023>   OR.l $10(A3),D0
00033AC6 <AmiBlitz3.ab2@9024>    BNE.w JL_0_6DE4
00033ACC <AmiBlitz3.ab2@9025>   BTST #$0,$F(A3)
00033AD0 <AmiBlitz3.ab2@9026>    BNE.w JL_0_6DE4
00033AD4 <AmiBlitz3.ab2@9027>   MOVE.l $C(A3),D7
00033AD8 <AmiBlitz3.ab2@9028>   MOVE.w $0(A2,D7.L),D0
00033ADC <AmiBlitz3.ab2@9029>   ANDI.w #$F000,D0
00033AE0 <AmiBlitz3.ab2@9030>   CMP.w #-$6000,D0
00033AE4 <AmiBlitz3.ab2@9031>    BNE.w JL_0_6D6C
00033AE6 <AmiBlitz3.ab2@9034>   MOVE.l A3,D1
00033AE8 <AmiBlitz3.ab2@9035>   SUB.l A2,D1
00033AEE <AmiBlitz3.ab2@9036>   LEA Amakelibsub,A0
00033AF2 <AmiBlitz3.ab2@9037> BRA.w JL_0_6D7C
00033AF8 <AmiBlitz3.ab2@9041>   MOVEA.l _execbase,A6
00033AFE <AmiBlitz3.ab2@9042>   MOVEA.l tokeslist,A2
00033B04 <AmiBlitz3.ab2@9043>   CLR.l tokeslist
00033B08 <AmiBlitz3.ab2@9046>     CMPA.w #$0,A2
00033B0C <AmiBlitz3.ab2@9047>      BEQ.w JL_0_6E32
00033B10 <AmiBlitz3.ab2@9048>     MOVEA.l $8(A2),A3
00033B14 <AmiBlitz3.ab2@9051>       CMPA.w #$0,A3
00033B18 <AmiBlitz3.ab2@9052>        BEQ.w JL_0_6E24
00033B1A <AmiBlitz3.ab2@9053>       MOVEA.l A3,A1
00033B1C <AmiBlitz3.ab2@9054>       MOVEA.l (A3),A3
00033B1E <AmiBlitz3.ab2@9055>       MOVEQ.l #$08,D0
00033B24 <AmiBlitz3.ab2@9056>       MOVE.l mempool,a0
00033B2A <AmiBlitz3.ab2@9057>       MOVEA.l _execbase,A6
00033B2E <AmiBlitz3.ab2@9058>       JSR _FreePooled(A6)
00033B32 <AmiBlitz3.ab2@9059> BRA.w JL_0_6E0E
00033B34 <AmiBlitz3.ab2@9062>     MOVEA.l A2,A1
00033B36 <AmiBlitz3.ab2@9063>     MOVEA.l (A2),A2
00033B38 <AmiBlitz3.ab2@9064>     MOVEQ.l #$0C,D0
00033B3E <AmiBlitz3.ab2@9065>     MOVE.l mempool,a0
00033B44 <AmiBlitz3.ab2@9066>     MOVEA.l _execbase,A6
00033B48 <AmiBlitz3.ab2@9067>     JSR _FreePooled(A6)
00033B4C <AmiBlitz3.ab2@9068> BRA.w JL_0_6E02
00033B4E <AmiBlitz3.ab2@9071> RTS
00033B52 <AmiBlitz3.ab2@9075>   MOVEM.l D3-D5/A1-A6,-(A7)
00033B54 <AmiBlitz3.ab2@9076>   MOVEA.l A1,A4
00033B56 <AmiBlitz3.ab2@9079>   MOVE.l (A2)+,D3
00033B5A <AmiBlitz3.ab2@9080>   MOVE.w $0(A4,D3.L),D5
00033B5E <AmiBlitz3.ab2@9081>    BPL.w JL_0_6E7A
00033B62 <AmiBlitz3.ab2@9082>   TST.l $2C(A4)
00033B66 <AmiBlitz3.ab2@9083>    BEQ.w JL_0_6E5E
00033B6C <AmiBlitz3.ab2@9084>   TST.b debugmode
00033B70 <AmiBlitz3.ab2@9085>    BNE.w JL_0_6E5E
00033B74 <AmiBlitz3.ab2@9086>   CMP.l $2C(A4),D3
00033B78 <AmiBlitz3.ab2@9087>    BCC.w JL_0_6E7A
00033B7C <AmiBlitz3.ab2@9090>   BCLR #$F,D5
00033B80 <AmiBlitz3.ab2@9091>   MOVE.w $2(A4,D3.L),D4
00033B84 <AmiBlitz3.ab2@9092>   SUB.l $12(A4),D3
00033B88 <AmiBlitz3.ab2@9093>   ADD.l $28(A4),D3
00033B8C <AmiBlitz3.ab2@9094>   MOVEM.l D2/A2/A4,-(A7)
00033B90 <AmiBlitz3.ab2@9095>    BSR.w JL_0_6E86
00033B94 <AmiBlitz3.ab2@9096>   MOVEM.l (A7)+,D2/A2/A4
00033B96 <AmiBlitz3.ab2@9099>   SUBQ.l #1,D2
00033B9A <AmiBlitz3.ab2@9100>    BNE.w JL_0_6E3A
00033B9E <AmiBlitz3.ab2@9101>   MOVEM.l (A7)+,D3-D5/A1-A6
00033BA0 <AmiBlitz3.ab2@9102> RTS
00033BA6 <AmiBlitz3.ab2@9106>   LEA tokeslist,A3
00033BAC <AmiBlitz3.ab2@9107>   MOVEA.l _execbase,A6
00033BAE <AmiBlitz3.ab2@9110>   MOVE.l (A3),D0
00033BB2 <AmiBlitz3.ab2@9111>    BEQ.w JL_0_6EAC
00033BB4 <AmiBlitz3.ab2@9112>   MOVEA.l D0,A3
00033BB8 <AmiBlitz3.ab2@9113>   CMP.w $4(A3),D4
00033BBC <AmiBlitz3.ab2@9114>    BNE.w JL_0_6E90
00033BC0 <AmiBlitz3.ab2@9115>   CMP.w $6(A3),D5
00033BC4 <AmiBlitz3.ab2@9116>    BNE.w JL_0_6E90
00033BC8 <AmiBlitz3.ab2@9117> BRA.w JL_0_6ED0
00033BCA <AmiBlitz3.ab2@9120>   MOVEQ.l #$0C,D0
00033BCC <AmiBlitz3.ab2@9121>   MOVEQ.l #$01,D1
00033BD2 <AmiBlitz3.ab2@9122>   MOVE.l mempool,a0
00033BD6 <AmiBlitz3.ab2@9123>   JSR _AllocPooled(a6)
00033BD8 <AmiBlitz3.ab2@9125>   MOVEA.l D0,A3
00033BDE <AmiBlitz3.ab2@9126>   MOVE.l tokeslist,(A3)
00033BE4 <AmiBlitz3.ab2@9127>   MOVE.l A3,tokeslist
00033BE8 <AmiBlitz3.ab2@9128>   MOVE.w D4,$4(A3)
00033BEC <AmiBlitz3.ab2@9129>   MOVE.w D5,$6(A3)
00033BF0 <AmiBlitz3.ab2@9130>   CLR.l $8(A3)
00033BF2 <AmiBlitz3.ab2@9133>   MOVEQ.l #$08,D0
00033BF4 <AmiBlitz3.ab2@9134>   MOVEQ.l #$01,D1
00033BFA <AmiBlitz3.ab2@9135>   MOVE.l mempool,a0
00033BFE <AmiBlitz3.ab2@9136>   JSR _AllocPooled(a6)
00033C00 <AmiBlitz3.ab2@9138>   MOVEA.l D0,A0
00033C04 <AmiBlitz3.ab2@9139>   MOVE.l D3,$4(A0)
00033C08 <AmiBlitz3.ab2@9140>   MOVE.l $8(A3),(A0)
00033C0C <AmiBlitz3.ab2@9141>   MOVE.l A0,$8(A3)
00033C0E <AmiBlitz3.ab2@9142>   MOVE.w D4,D1
00033C12 <AmiBlitz3.ab2@9143> BRA.w searchinstr
00033C16 <AmiBlitz3.ab2@9146> tokeslist: Ds.l 1
00033C1A <AmiBlitz3.ab2@9159>   BEQ.w uselib2_org__skip
00033C1C <AmiBlitz3.ab2@9160>   MOVE.l A1,-(A7)
00033C1E <AmiBlitz3.ab2@9161>   ADDA.l D1,A1
00033C20 <AmiBlitz3.ab2@9162>   ADDQ.w #6,A1
00033C22 <AmiBlitz3.ab2@9165>     MOVE.w (A1)+,D1
00033C26 <AmiBlitz3.ab2@9166>     BEQ.w uselib2_org__done
00033C28 <AmiBlitz3.ab2@9167>     CMP.w D2,D1
00033C2C <AmiBlitz3.ab2@9168>     BEQ.w uselib2_org__skip2
00033C2E <AmiBlitz3.ab2@9169>     MOVE.l A1,-(A7)
00033C32 <AmiBlitz3.ab2@9170>     BSR.w uselib
00033C34 <AmiBlitz3.ab2@9171>     MOVEA.l (A7)+,A1
00033C36 <AmiBlitz3.ab2@9174>     ADDQ.w #2,A1
00033C3A <AmiBlitz3.ab2@9175> BRA.w uselib2_org__loop
00033C3C <AmiBlitz3.ab2@9178>   MOVEA.l (A7)+,A1
00033C3E <AmiBlitz3.ab2@9181> RTS
00033C44 <AmiBlitz3.ab2@9185>   MOVEA.l libpointer,A1
00033C48 <AmiBlitz3.ab2@9188>   CMPA.w #$0,A1
00033C4C <AmiBlitz3.ab2@9189>    BEQ.b JL_0_6F36
00033C50 <AmiBlitz3.ab2@9190>   CMP.w $4(A1),D1
00033C54 <AmiBlitz3.ab2@9191>    BEQ.w JL_0_6F34
00033C56 <AmiBlitz3.ab2@9192>   MOVEA.l (A1),A1
00033C5A <AmiBlitz3.ab2@9193> BRA.w JL_0_6F20
00033C5C <AmiBlitz3.ab2@9196>   MOVEQ.l #-$01,D1
00033C5E <AmiBlitz3.ab2@9199> RTS
00033C62 <AmiBlitz3.ab2@9203>   MOVEM.l d0/a2,-(a7)
00033C64 <AmiBlitz3.ab2@9204>   MOVEQ #0,d0
00033C6A <AmiBlitz3.ab2@9205>   LEA instrtab+4,a2
00033C6C <AmiBlitz3.ab2@9206>   MOVE.w d1,d0
00033C6E <AmiBlitz3.ab2@9207>   ASL.l #3,d0
00033C72 <AmiBlitz3.ab2@9208>   MOVE.l 0(a2,d0.l),a1                                     ;*8
00033C78 <AmiBlitz3.ab2@9209>   CMP.l #0,a1
00033C7C <AmiBlitz3.ab2@9210>   BNE JL_0_6F54b
00033C82 <AmiBlitz3.ab2@9212>   MOVEA.l libpointer,A1
00033C86 <AmiBlitz3.ab2@9215>     CMPA.w #$0,A1
00033C8A <AmiBlitz3.ab2@9216>     BEQ.w noliberr
00033C8E <AmiBlitz3.ab2@9217>     CMP.w $4(A1),D1
00033C92 <AmiBlitz3.ab2@9218>     BEQ.w JL_0_6F54
00033C94 <AmiBlitz3.ab2@9219>    MOVEA.l (A1),A1
00033C98 <AmiBlitz3.ab2@9220> BRA.w JL_0_6F3E
00033C9C <AmiBlitz3.ab2@9223>   MOVE.l a1,0(a2,d0.l)
00033CA0 <AmiBlitz3.ab2@9226>   MOVEM.l (a7)+,d0/a2
00033CA2 <AmiBlitz3.ab2@9227> RTS
00033CA6 <AmiBlitz3.ab2@9230>   MOVEM.l d0-d1/a1,-(a7)
00033CA8 <AmiBlitz3.ab2@9231>   MOVEQ #0,d0
00033CAE <AmiBlitz3.ab2@9232>   LEA instrtab,a1
00033CB0 <AmiBlitz3.ab2@9233>   MOVE.w d1,d0
00033CB2 <AmiBlitz3.ab2@9234>   ASL.l #3,d0
00033CB6 <AmiBlitz3.ab2@9235>   MOVE.l 0(a1,d0.l),a3
00033CBA <AmiBlitz3.ab2@9236>   MOVE.l 4(a1,d0.l),a2
00033CC0 <AmiBlitz3.ab2@9237>   CMP.l #0,a3
00033CC4 <AmiBlitz3.ab2@9238>   BNE JL_0_6F92b
00033CCA <AmiBlitz3.ab2@9240>   MOVEA.l libpointer,A2
00033CCE <AmiBlitz3.ab2@9243>   CMPA.w #$0,A2
00033CD2 <AmiBlitz3.ab2@9244>   BEQ.w notokerr
00033CD6 <AmiBlitz3.ab2@9245>   CMP.w $E(A2),D1
00033CDA <AmiBlitz3.ab2@9246>   BCS.w JL_0_6FB8
00033CDE <AmiBlitz3.ab2@9247>   CMP.w $10(A2),D1
00033CE2 <AmiBlitz3.ab2@9248>   BCC.w JL_0_6FB8
00033CE6 <AmiBlitz3.ab2@9249>   LEA $30(A2),A3
00033CEA <AmiBlitz3.ab2@9250>   TST.w $4(A2)
00033CEE <AmiBlitz3.ab2@9251>   BPL.w JL_0_6FA6
00033CF2 <AmiBlitz3.ab2@9254>     CMP.w $E(A2),D1
00033CF6 <AmiBlitz3.ab2@9255>     BEQ.w JL_0_6F92
00033CF8 <AmiBlitz3.ab2@9256>     SUBQ.w #1,D1
00033CFC <AmiBlitz3.ab2@9257>     MOVEA.l $2(A3),A3
00033D00 <AmiBlitz3.ab2@9258> BRA.w JL_0_6F80
00033D04 <AmiBlitz3.ab2@9261>   MOVE.l a3,0(a1,d0.l)
00033D08 <AmiBlitz3.ab2@9262>   MOVE.l a2,4(a1,d0.l)
00033D0C <AmiBlitz3.ab2@9265>   MOVEM.l (a7)+,d0-d1/a1
00033D10 <AmiBlitz3.ab2@9266>   MOVEM.l D1/A1-a3,-(A7)
00033D14 <AmiBlitz3.ab2@9267>   CMP.w #1,(a3)
00033D18 <AmiBlitz3.ab2@9268>   BNE.s ex10
00033D20 <AmiBlitz3.ab2@9269>   CMP.l #$12345678,$e(a3)
00033D24 <AmiBlitz3.ab2@9270>   BNE.s ex10
00033D2A <AmiBlitz3.ab2@9271>   CMP.w #$ffff,$16(a3)
00033D2E <AmiBlitz3.ab2@9272>   BNE.s ex10
00033D32 <AmiBlitz3.ab2@9273>   MOVE.l $12(a3),d1
00033D36 <AmiBlitz3.ab2@9274>   BEQ.s ex10
00033D3C <AmiBlitz3.ab2@9275>   LEA pluginbase,a3
00033D40 <AmiBlitz3.ab2@9277> JMP 0(a2,d1.l)                                             ;plugin
00033D44 <AmiBlitz3.ab2@9280>   MOVEM.l (A7)+,D1/A1-a3
00033D4A <AmiBlitz3.ab2@9281>   JSR stripspaces
00033D4C <AmiBlitz3.ab2@9282>   MOVEQ #0,d0
00033D4E <AmiBlitz3.ab2@9283>   MOVE.b (a5)+,d0
00033D54 <AmiBlitz3.ab2@9284>   MOVE.w d0,lastchar
00033D56 <AmiBlitz3.ab2@9285>   ADDQ.l #4,a7
00033D58 <AmiBlitz3.ab2@9286> RTS
00033D5A <AmiBlitz3.ab2@9290>   MOVEA.l A2,A1
00033D60 <AmiBlitz3.ab2@9291>   CLR.b newmode
00033D64 <AmiBlitz3.ab2@9292>   MOVE.w $4(A1),D1
00033D68 <AmiBlitz3.ab2@9295>   BSR.w uselib3
00033D6C <AmiBlitz3.ab2@9296>   MOVEM.l (A7)+,D1/A1-a3
00033D6E <AmiBlitz3.ab2@9297> RTS
00033D74 <AmiBlitz3.ab2@9300>   MOVE.w globalvarpointer,-(a7)
00033D7C <AmiBlitz3.ab2@9301>   MOVE.w #$8004,globalvarpointer
00033D80 <AmiBlitz3.ab2@9302>   BSR.w uselib3
00033D86 <AmiBlitz3.ab2@9303>   MOVE.w (a7)+,globalvarpointer
00033D8A <AmiBlitz3.ab2@9304>   MOVEM.l (A7)+,D1/A1-a3
00033D8C <AmiBlitz3.ab2@9305> RTS
00033D90 <AmiBlitz3.ab2@9308>     CMP.w $E(A2),D1
00033D94 <AmiBlitz3.ab2@9309>     BEQ.w JL_0_6F92
00033D96 <AmiBlitz3.ab2@9310>     SUBQ.w #1,D1
00033D9A <AmiBlitz3.ab2@9311>     MOVEA.l $2(A3),A3
00033D9E <AmiBlitz3.ab2@9312> BRA.w JL_0_6FA6
00033DA0 <AmiBlitz3.ab2@9315>   MOVEA.l (A2),A2
00033DA4 <AmiBlitz3.ab2@9316> BRA.w JL_0_6F5C
00033DAA <AmiBlitz3.ab2@9319> JMP writeword
00033DAE <AmiBlitz3.ab2@9322> ptr_acidlibs:   Ds.l 1                                     ;deflibsat org source
00033DB2 <AmiBlitz3.ab2@9323> ptr_deflibs:    Ds.l 1                                     ;acidlibsat org source
00033DB6 <AmiBlitz3.ab2@9324> ptr_userlibs:   Ds.l 1                                     ;blitzlibsat org source  ;;start of blitzlibs list!
00033DB8 <AmiBlitz3.ab2@9330>   TST.l D0
00033DBC <AmiBlitz3.ab2@9331>   BEQ.w exit_loadlibsfile
00033DBE <AmiBlitz3.ab2@9332>     MOVE.l D0,D6                                           ;d6=len
00033DC4 <AmiBlitz3.ab2@9333>     MOVEA.l _dosbase,A6
00033DCA <AmiBlitz3.ab2@9334>     MOVE.l #HUNK_RELOC_16__MODE_OLDFILE,D2
00033DCE <AmiBlitz3.ab2@9335>     JSR _Open(A6)
00033DD0 <AmiBlitz3.ab2@9336>     MOVE.l D0,D7
00033DD4 <AmiBlitz3.ab2@9337>     BEQ.w exit_loadlibsfile
00033DD6 <AmiBlitz3.ab2@9338>       MOVE.l D6,D0
00033DD8 <AmiBlitz3.ab2@9339>       MOVEQ.l #$01,D1
00033DDE <AmiBlitz3.ab2@9340>       MOVEA.l _execbase,A6
00033DE4 <AmiBlitz3.ab2@9341>       MOVE.l mempool,a0
00033DE8 <AmiBlitz3.ab2@9342>       JSR _AllocPooled(a6)
00033DEA <AmiBlitz3.ab2@9343>       MOVE.l D0,D5                                         ;start address
00033DEC <AmiBlitz3.ab2@9345>       MOVE.l D7,D1                                         ; handle
00033DEE <AmiBlitz3.ab2@9346>       MOVE.l D5,D2                                         ; buffer addr
00033DF0 <AmiBlitz3.ab2@9347>       MOVE.l D6,D3                                         ; size
00033DF6 <AmiBlitz3.ab2@9348>       MOVEA.l _dosbase,A6
00033DFA <AmiBlitz3.ab2@9349>       JSR _Read(A6)
00033DFC <AmiBlitz3.ab2@9350>       MOVE.l D7,D1
00033E00 <AmiBlitz3.ab2@9351>       JSR _Close(A6)
00033E02 <AmiBlitz3.ab2@9353>       MOVEA.l D5,A0                                        ; buffer addr
00033E04 <AmiBlitz3.ab2@9359>         MOVE.l (A0)+,D0                                    ; naechster Longwert nach DO
00033E08 <AmiBlitz3.ab2@9360>         BEQ.b JL_0_7044                                    ; wenn <> 0, dann
00033E0C <AmiBlitz3.ab2@9361>           LEA $20(A0),A1                                   ;   lade inhalt von D0+40bytes nach A1
00033E0E <AmiBlitz3.ab2@9362>           MOVE.l A1,(A3)                                   ;   kopiere Adresse in A1 zum libpointer
00033E10 <AmiBlitz3.ab2@9363>           MOVEA.l A1,A3                                    ;   kopiere A1 nach A3
00033E12 <AmiBlitz3.ab2@9364>           ADDA.l D0,A0                                     ;   addiere inhalt von D0 zu A0 hinzu
00033E16 <AmiBlitz3.ab2@9365>           MOVE.l -$4(A1),D0                                ;   hole die 4bytes vor nach D0
00033E18 <AmiBlitz3.ab2@9366>           ADD.l D0,D0                                      ;   verdoppele D0
00033E1A <AmiBlitz3.ab2@9367>           ADD.l D0,D0                                      ;   verdoppele D0 nochmal
00033E1E <AmiBlitz3.ab2@9368>           MOVE.l D0,$6(A1)                                 ;   schreibe D0 6bytes nach A1
00033E22 <AmiBlitz3.ab2@9369>           CLR.l $20(A1)                                    ;   loesche D0+40bytes
00033E26 <AmiBlitz3.ab2@9370>           LEA $C(A1,D0.L),A2                               ;   lade inhalt von (A1)+D0+$C nach A2
00033E28 <AmiBlitz3.ab2@9371>           CMPA.l A0,A2
00033E2C <AmiBlitz3.ab2@9372>           BCC.b JL_0_7010                                  ; wenn A0=>A2
00033E32 <AmiBlitz3.ab2@9373>             MOVE.l -$8(A2),$20(A1)                         ;
00033E36 <AmiBlitz3.ab2@9374>             MOVE.l A2,$24(A1)                              ;
00033E3A <AmiBlitz3.ab2@9375> BRA.w JL_0_7010
00033E3C <AmiBlitz3.ab2@9378>       MOVE.l D5,D0
00033E3E <AmiBlitz3.ab2@9381> RTS
00033E68 <AmiBlitz3.ab2@9385>   !basic
00033EDC <AmiBlitz3.ab2@9386>    tempmapping$ = dos_AddPart{my_systemdir$,"token_mapping_userlibs.txt"}
00033F10 <AmiBlitz3.ab2@9387>    dos_Delete{tempmapping$}
00033F54 <AmiBlitz3.ab2@9388>    fid.l = file_Open{tempmapping$,#file_forcewrite}
00033F72 <AmiBlitz3.ab2@9389>   !asm
00033F78 <AmiBlitz3.ab2@9391>   LEA libpointer,A3
00033F7E <AmiBlitz3.ab2@9395>   MOVE.l size_deflibs,D0
00033F84 <AmiBlitz3.ab2@9396>   MOVE.l deflib,d1
00033F88 <AmiBlitz3.ab2@9397>   BEQ 'l1
00033F8C <AmiBlitz3.ab2@9398> BRA 'l2
00033F92 <AmiBlitz3.ab2@9401>   MOVE.l #str_path_deflibs,D1
00033F96 <AmiBlitz3.ab2@9404>   BSR.w load_libsfile
00033F9C <AmiBlitz3.ab2@9405>   MOVE.l D0,ptr_deflibs
00033FA2 <AmiBlitz3.ab2@9408>   MOVE.l size_acidlibs,D0
00033FA8 <AmiBlitz3.ab2@9409>   MOVE.l #str_path_acidlibs,D1
00033FAC <AmiBlitz3.ab2@9410>   BSR.w load_libsfile
00033FB2 <AmiBlitz3.ab2@9411>   MOVE.l D0,ptr_acidlibs
00033FB4 <AmiBlitz3.ab2@9415>   CLR.l (A3)
00033FBA <AmiBlitz3.ab2@9416>   MOVE.l A3,ptr_userlibs
00033FC0 <AmiBlitz3.ab2@9421>   LEA str_libfilename,A0
00033FC6 <AmiBlitz3.ab2@9422>   LEA str_path_userlibs,A1
00033FC8 <AmiBlitz3.ab2@9425>     MOVE.b (A1)+,(A0)+
00033FCC <AmiBlitz3.ab2@9426>   BNE.b JL_0_708E
00033FCE <AmiBlitz3.ab2@9428>   SUBQ.w #1,A0
00033FD2 <AmiBlitz3.ab2@9429>   MOVE.b #$2F,(A0)+
00033FD4 <AmiBlitz3.ab2@9432>   MOVE.l A0,-(A7)                                          ; -- store str_path_userlibs in A7
00033FDA <AmiBlitz3.ab2@9434>   LEA ptr_userlibs_list,A2
00033FE0 <AmiBlitz3.ab2@9435>   MOVEA.l ptr_userlibs,A3
00033FE6 <AmiBlitz3.ab2@9436>   MOVEA.l _dosbase,A6
00033FE8 <AmiBlitz3.ab2@9441>       MOVE.l (A2),D0                                       ; addresse aus liste nach D0
00033FEC <AmiBlitz3.ab2@9442>       BNE.b JL_0_70C6                                      ; wenn nix drin, processing ueberspringen
00033FEE <AmiBlitz3.ab2@9444>       CLR.l (A3)
00033FF0 <AmiBlitz3.ab2@9445>       ADDQ.w #4,A7
0003401A <AmiBlitz3.ab2@9446>       !basic
0003402E <AmiBlitz3.ab2@9447>       If fid<>-1
00034038 <AmiBlitz3.ab2@9448>         file_Close{fid}
00034044 <AmiBlitz3.ab2@9449>         fid = -1
00034062 <AmiBlitz3.ab2@9451>       !asm
00034066 <AmiBlitz3.ab2@9452> BRA.w process_libraries
00034068 <AmiBlitz3.ab2@9455>       MOVEA.l D0,A2                                        ; addresse zureuck nach A2
0003406C <AmiBlitz3.ab2@9456>       TST.w $4(A2)                                         ; naechste addresse pruefen
00034070 <AmiBlitz3.ab2@9457>     BEQ.b JL_0_70BA
00034074 <AmiBlitz3.ab2@9459>     LEA $6(A2),A1
00034076 <AmiBlitz3.ab2@9460>     MOVEA.l (A7),A0
00034078 <AmiBlitz3.ab2@9463>       MOVE.b (A1)+,(A0)+
0003407C <AmiBlitz3.ab2@9464>     BNE.w JL_0_70D4
0003407E <AmiBlitz3.ab2@9468>     MOVE.l A0,-(A7)
00034084 <AmiBlitz3.ab2@9469>     MOVE.l #str_libfilename,D1
00034086 <AmiBlitz3.ab2@9470>     MOVEQ.l #-$02,D2
0003408C <AmiBlitz3.ab2@9471>     MOVEA.l _dosbase,A6
00034090 <AmiBlitz3.ab2@9472>      JSR _Lock(A6)
00034092 <AmiBlitz3.ab2@9473>     MOVE.l D0,D1
00034096 <AmiBlitz3.ab2@9474>      BEQ.w JL_0_7156
00034098 <AmiBlitz3.ab2@9475>     MOVEA.l (A7),A0
0003409E <AmiBlitz3.ab2@9476>     MOVE.b #$2F,-$1(A0)
000340A0 <AmiBlitz3.ab2@9479>     MOVE.l D1,-(A7)
000340A6 <AmiBlitz3.ab2@9480>     MOVE.l #ptr_parameterstore,D2
000340AC <AmiBlitz3.ab2@9481>     MOVEA.l _dosbase,A6
000340B0 <AmiBlitz3.ab2@9482>     JSR _Examine(A6)
000340B2 <AmiBlitz3.ab2@9483>     TST.l D0
000340B6 <AmiBlitz3.ab2@9484>      BEQ.w JL_0_7150
000340BC <AmiBlitz3.ab2@9487>     LEA fib_FileName,A0
000340C0 <AmiBlitz3.ab2@9488>     BSR.w check_for_infoextention
000340C4 <AmiBlitz3.ab2@9489>     BEQ.w JL_0_7150
000340EE <AmiBlitz3.ab2@9492>     !basic
00034172 <AmiBlitz3.ab2@9493>       Poke$ ?str_libfilename,dos_AddPart{Peek$(?str_path_userlibs),Peek$(?fib_FileName)}
00034190 <AmiBlitz3.ab2@9494>     !asm
00034196 <AmiBlitz3.ab2@9495>     MOVE.l #str_libfilename,D1
0003419A <AmiBlitz3.ab2@9496>     BSR.w open_userlibfile
0003419C <AmiBlitz3.ab2@9499>     MOVE.l (A7)+,D1
000341A2 <AmiBlitz3.ab2@9500>     MOVEA.l _dosbase,A6
000341A6 <AmiBlitz3.ab2@9501>     JSR _UnLock(A6)
000341A8 <AmiBlitz3.ab2@9504>     ADDQ.w #4,A7
000341AC <AmiBlitz3.ab2@9505> BRA.w JL_0_70BA
000341B2 <AmiBlitz3.ab2@9508>   MOVE.l #HUNK_RELOC_16__MODE_OLDFILE,D2
000341B8 <AmiBlitz3.ab2@9509>   MOVEA.l _dosbase,A6
000341BC <AmiBlitz3.ab2@9510>    JSR _Open(A6)
000341BE <AmiBlitz3.ab2@9511>   MOVE.l D0,D7
000341C2 <AmiBlitz3.ab2@9512>    BEQ.w exit_userlibfile
000341C4 <AmiBlitz3.ab2@9515>   MOVE.l D7,D1                                             ; filehandle
000341CA <AmiBlitz3.ab2@9516>   MOVE.l #optstuff,D2                                     ; buffer
000341D0 <AmiBlitz3.ab2@9517>   MOVEA.l _dosbase,A6
000341D2 <AmiBlitz3.ab2@9518>   MOVEQ.l #$20,D3                                          ; size
000341D6 <AmiBlitz3.ab2@9519>   JSR _Read(A6)
000341DC <AmiBlitz3.ab2@9522>   MOVE.l optstuff+28,D6
000341DE <AmiBlitz3.ab2@9523>   LSL.l #2,D6
000341E0 <AmiBlitz3.ab2@9524>   MOVE.l D6,D0
000341E2 <AmiBlitz3.ab2@9525>   MOVEQ.l #$01,D1
000341E8 <AmiBlitz3.ab2@9526>   MOVEA.l _execbase,A6
000341EE <AmiBlitz3.ab2@9527>   MOVE.l mempool,a0
000341F2 <AmiBlitz3.ab2@9528>   JSR _AllocPooled(a6)
000341F4 <AmiBlitz3.ab2@9529>   MOVEA.l D0,A5
000341FA <AmiBlitz3.ab2@9532>   MOVEA.l _dosbase,A6
000341FC <AmiBlitz3.ab2@9533>   MOVE.l D7,D1                                             ; filehandle
000341FE <AmiBlitz3.ab2@9534>   MOVE.l A5,D2                                             ; buffer
00034200 <AmiBlitz3.ab2@9535>   MOVE.l D6,D3                                             ; size
00034204 <AmiBlitz3.ab2@9536>    JSR _Read(A6)
00034206 <AmiBlitz3.ab2@9537>   MOVE.l A5,(A3)
00034208 <AmiBlitz3.ab2@9539>   MOVE.l A5,d0
0003420A <AmiBlitz3.ab2@9541>   MOVEA.l A5,A3
0003420E <AmiBlitz3.ab2@9542>   MOVE.l D6,$6(A5)
00034212 <AmiBlitz3.ab2@9543>   CLR.l $20(A5)
0003423C <AmiBlitz3.ab2@9545>   !basic
00034246 <AmiBlitz3.ab2@9547>   addr_libnum.l = PutD0 + 4
0003425A <AmiBlitz3.ab2@9548>   If fid<>-1
000342FA <AmiBlitz3.ab2@9549>     currentlib$ = LSet$(Peek.s(?fib_FileName),30)+";"+LSet$(Get_Libinfo{addr_libnum},30) ;+";"+Str$(Peek.w(addr_libnum))
0003432C <AmiBlitz3.ab2@9550>     file_WriteLine{fid,currentlib$}
0003434A <AmiBlitz3.ab2@9552>   !asm
0003434C <AmiBlitz3.ab2@9555>   MOVE.l D7,D1                                             ; filehandle
00034352 <AmiBlitz3.ab2@9556>   MOVE.l #optstuff,D2                                     ; buffer
00034354 <AmiBlitz3.ab2@9557>   MOVEQ.l #$0C,D3                                          ; size
0003435A <AmiBlitz3.ab2@9558>   MOVEA.l _dosbase,A6
0003435E <AmiBlitz3.ab2@9559>    JSR _Read(A6)
00034364 <AmiBlitz3.ab2@9561>   CMP.l #$C,D0
00034368 <AmiBlitz3.ab2@9562>    BCS.w close_and_exit_userlibfile
0003436E <AmiBlitz3.ab2@9565>   MOVE.l optstuff+4,D0
00034372 <AmiBlitz3.ab2@9566>   MOVE.l D0,$20(A5)
00034374 <AmiBlitz3.ab2@9567>   LSL.l #2,D0
00034376 <AmiBlitz3.ab2@9568>   MOVE.l D0,D5
00034378 <AmiBlitz3.ab2@9569>   MOVEQ.l #$01,D1
0003437E <AmiBlitz3.ab2@9570>   MOVEA.l _execbase,A6
00034384 <AmiBlitz3.ab2@9571>   MOVE.l mempool,a0
00034388 <AmiBlitz3.ab2@9572>   JSR _AllocPooled(a6)
0003438E <AmiBlitz3.ab2@9574>   MOVEA.l _dosbase,A6
00034392 <AmiBlitz3.ab2@9575>   MOVE.l D0,$24(A5)
00034394 <AmiBlitz3.ab2@9576>   MOVE.l D7,D1
00034396 <AmiBlitz3.ab2@9577>   MOVE.l D0,D2
00034398 <AmiBlitz3.ab2@9578>   MOVE.l D5,D3
0003439C <AmiBlitz3.ab2@9579>   JSR _Read(A6)
0003439E <AmiBlitz3.ab2@9582>   MOVE.l D7,D1
000343A4 <AmiBlitz3.ab2@9583>   MOVEA.l _dosbase,A6
000343A8 <AmiBlitz3.ab2@9584> JMP _Close(A6)
000343AA <AmiBlitz3.ab2@9587> RTS
000343B0 <AmiBlitz3.ab2@9593>   CLR.w number_of_objects
000343B6 <AmiBlitz3.ab2@9594>   MOVEA.l end_of_tokenlist,A3
000343BC <AmiBlitz3.ab2@9595>   MOVEA.l libpointer,A2
000343C0 <AmiBlitz3.ab2@9598>     CMPA.w #$0,A2
000343C4 <AmiBlitz3.ab2@9599>     BEQ.w JL_0_72D8                                        ; <-- abbruch mit RTS
000343C8 <AmiBlitz3.ab2@9601>     MOVE.w $4(A2),D7                                       ; <-- get tokennumber
000343CC <AmiBlitz3.ab2@9602>     BMI.w JL_0_7226
000343CE <AmiBlitz3.ab2@9603>       LSL.w #7,D7
000343D0 <AmiBlitz3.ab2@9604>       ADDQ.w #1,D7
000343D4 <AmiBlitz3.ab2@9605>       MOVE.w D7,$E(A2)
000343D8 <AmiBlitz3.ab2@9608>     LEA $30(A2),A1
000343DE <AmiBlitz3.ab2@9609>     LEA temp1,A4
000343E0 <AmiBlitz3.ab2@9612>       MOVE.w (A1),D0
000343E4 <AmiBlitz3.ab2@9613>       BMI.w JL_0_72AE
000343E6 <AmiBlitz3.ab2@9614>       MOVE.l A1,(A4)
000343E8 <AmiBlitz3.ab2@9615>       MOVEA.l A1,A4
000343EA <AmiBlitz3.ab2@9616>       ADDQ.w #2,A4
000343EC <AmiBlitz3.ab2@9617>       ADDQ.w #6,A1
000343F0 <AmiBlitz3.ab2@9618>       CMP.w #$8,D0
000343F4 <AmiBlitz3.ab2@9619>       BEQ.w JL_0_7290
000343F8 <AmiBlitz3.ab2@9620>         ANDI.w #$F,D0
000343FC <AmiBlitz3.ab2@9621>         BNE.w JL_0_725C
00034400 <AmiBlitz3.ab2@9622>           BSR.w skiplibreg
00034404 <AmiBlitz3.ab2@9623>           LEA $C(A1),A1
00034406 <AmiBlitz3.ab2@9624>           ADDQ.w #1,D7
0003440A <AmiBlitz3.ab2@9625> BRA.w JL_0_7230
0003440E <AmiBlitz3.ab2@9628>     BTST #$2,D0
00034412 <AmiBlitz3.ab2@9629>     BEQ.w JL_0_7274
00034414 <AmiBlitz3.ab2@9630>       ADDQ.w #4,A1
00034416 <AmiBlitz3.ab2@9633>         TST.b (A1)+
0003441A <AmiBlitz3.ab2@9634>       BPL.w JL_0_7266
0003441E <AmiBlitz3.ab2@9635>       BSR.w aligna1
00034422 <AmiBlitz3.ab2@9636> BRA.w JL_0_7290
00034424 <AmiBlitz3.ab2@9639>       MOVE.w (A1)+,D0
00034428 <AmiBlitz3.ab2@9640>       BMI.w JL_0_7290
0003442C <AmiBlitz3.ab2@9641>       ANDI.w #$FF,D0
0003442E <AmiBlitz3.ab2@9642>       ADDA.w D0,A1
00034432 <AmiBlitz3.ab2@9643>       BSR.w aligna1
00034436 <AmiBlitz3.ab2@9644>       BSR.w skiplibreg
0003443A <AmiBlitz3.ab2@9645>       LEA $C(A1),A1
0003443E <AmiBlitz3.ab2@9646> BRA.w JL_0_7274
00034440 <AmiBlitz3.ab2@9649>     MOVE.l A1,(A3)
00034442 <AmiBlitz3.ab2@9650>     MOVEA.l A1,A3
00034444 <AmiBlitz3.ab2@9651>     ADDQ.w #4,A1
00034446 <AmiBlitz3.ab2@9652>     MOVE.w D7,(A1)+
00034448 <AmiBlitz3.ab2@9655>       TST.b (A1)+
0003444C <AmiBlitz3.ab2@9656>     BNE.w JL_0_7298
0003444E <AmiBlitz3.ab2@9659>       TST.b (A1)+
00034452 <AmiBlitz3.ab2@9660>     BNE.w JL_0_729E
00034456 <AmiBlitz3.ab2@9662>     BSR.w aligna1
00034458 <AmiBlitz3.ab2@9663>     ADDQ.w #1,D7
0003445C <AmiBlitz3.ab2@9664> BRA.w JL_0_7230
00034460 <AmiBlitz3.ab2@9667>     TST.w $4(A2)
00034464 <AmiBlitz3.ab2@9668>      BMI.w JL_0_72BA
00034468 <AmiBlitz3.ab2@9669>     MOVE.w D7,$10(A2)
0003446A <AmiBlitz3.ab2@9672>     ADDQ.w #2,A1
0003446C <AmiBlitz3.ab2@9673>     TST.l (A1)+
00034470 <AmiBlitz3.ab2@9674>      BEQ.w JL_0_72CC
00034476 <AmiBlitz3.ab2@9675>     ADDQ.w #1,number_of_objects
0003447A <AmiBlitz3.ab2@9676>     LEA $16(A1),A1
0003447C <AmiBlitz3.ab2@9679>     SUBA.l A2,A1
00034480 <AmiBlitz3.ab2@9680>     MOVE.l A1,$12(A2)
00034482 <AmiBlitz3.ab2@9681>     MOVEA.l (A2),A2
00034486 <AmiBlitz3.ab2@9682> BRA.w JL_0_720E
00034488 <AmiBlitz3.ab2@9685>   CLR.l (A3)
0003448E <AmiBlitz3.ab2@9686>   MOVE.l A7,errstack
00034498 <AmiBlitz3.ab2@9687>   MOVE.l #AL_0_730E,errcont
000344A0 <AmiBlitz3.ab2@9688>   MOVE.w #$FFFF,ezerr
000344A4 <AmiBlitz3.ab2@9689>   MOVE.w #$FFFA,D1
000344A8 <AmiBlitz3.ab2@9690>    BSR.w JL_0_6F38
000344AE <AmiBlitz3.ab2@9691>   MOVE.l A1,tempvm
000344B2 <AmiBlitz3.ab2@9692>   MOVE.w #$FDA7,D1
000344B6 <AmiBlitz3.ab2@9693>    BSR.w JL_0_6F38
000344BC <AmiBlitz3.ab2@9694>   MOVE.l A1,ffplib
000344BE <AmiBlitz3.ab2@9697> RTS
000344C2 <AmiBlitz3.ab2@9700> ffplib:  Ds.l 1
000344C4 <AmiBlitz3.ab2@9704>     TST.w (A1)+
000344C8 <AmiBlitz3.ab2@9705>     BEQ.w JL_0_7320
000344CA <AmiBlitz3.ab2@9706>     ADDQ.w #2,A1
000344CE <AmiBlitz3.ab2@9707> BRA.w skiplibreg
000344D0 <AmiBlitz3.ab2@9710> RTS
000344D2 <AmiBlitz3.ab2@9714>   EXG.l A1,A0
000344D6 <AmiBlitz3.ab2@9715>   BSR.w aligna1
000344D8 <AmiBlitz3.ab2@9716>   EXG.l A1,A0
000344DA <AmiBlitz3.ab2@9717> RTS
000344DC <AmiBlitz3.ab2@9720>   EXG.l D0,A1
000344DE <AmiBlitz3.ab2@9721>   ADDQ.l #1,D0
000344E2 <AmiBlitz3.ab2@9722>   BCLR #$0,D0
000344E4 <AmiBlitz3.ab2@9723>   EXG.l D0,A1
000344E6 <AmiBlitz3.ab2@9724> RTS
000344EC <AmiBlitz3.ab2@9728>   MOVEA.l _execbase,A6
000344F2 <AmiBlitz3.ab2@9729>   MOVEA.l ptr_userlibs,A2
000344F4 <AmiBlitz3.ab2@9730>   MOVE.l (A2),D0
000344F6 <AmiBlitz3.ab2@9731>   CLR.l (A2)
000344F8 <AmiBlitz3.ab2@9732>   MOVEA.l D0,A2
000344FC <AmiBlitz3.ab2@9735>     CMPA.w #$0,A2
00034500 <AmiBlitz3.ab2@9736>     BEQ.w free_userlib
00034504 <AmiBlitz3.ab2@9738>     MOVE.l $20(A2),D0
00034508 <AmiBlitz3.ab2@9739>     BEQ.b JL_0_7360
0003450A <AmiBlitz3.ab2@9740>       LSL.l #2,D0
00034510 <AmiBlitz3.ab2@9741>       MOVE.l mempool,a0
00034514 <AmiBlitz3.ab2@9742>       MOVEA.l $24(A2),A1
00034518 <AmiBlitz3.ab2@9743>       JSR _FreePooled(A6)
0003451A <AmiBlitz3.ab2@9746>     MOVEA.l A2,A1
0003451E <AmiBlitz3.ab2@9747>     MOVE.l $6(A1),D0
00034524 <AmiBlitz3.ab2@9748>     MOVE.l mempool,a0
00034526 <AmiBlitz3.ab2@9749>     MOVEA.l (A2),A2
0003452C <AmiBlitz3.ab2@9750>     MOVEA.l _execbase,A6
00034530 <AmiBlitz3.ab2@9751>     JSR _FreePooled(A6)
00034534 <AmiBlitz3.ab2@9752> BRA.w JL_0_7348
00034538 <AmiBlitz3.ab2@9756>   BSR.w free_userlibs
0003453E <AmiBlitz3.ab2@9757>   MOVEA.l _execbase,A6
00034544 <AmiBlitz3.ab2@9758>   CLR.l libpointer
0003454A <AmiBlitz3.ab2@9759>   MOVEA.l end_of_tokenlist,A0
0003454C <AmiBlitz3.ab2@9760>   CLR.l (A0)
00034552 <AmiBlitz3.ab2@9762>   MOVE.l size_acidlibs,D0
00034556 <AmiBlitz3.ab2@9763>   BEQ.b JL_0_73A2
0003455C <AmiBlitz3.ab2@9764>     MOVE.l ptr_acidlibs,D1
00034560 <AmiBlitz3.ab2@9765>     BEQ.b JL_0_73A2
00034566 <AmiBlitz3.ab2@9766>       CLR.l ptr_acidlibs
00034568 <AmiBlitz3.ab2@9767>       MOVEA.l D1,A1
0003456E <AmiBlitz3.ab2@9768>       MOVE.l mempool,a0
00034574 <AmiBlitz3.ab2@9769>       MOVEA.l _execbase,A6
00034578 <AmiBlitz3.ab2@9770>       JSR _FreePooled(A6)                                 ; free acidlibs
0003457E <AmiBlitz3.ab2@9773>   MOVE.l size_deflibs,D0
00034582 <AmiBlitz3.ab2@9774>   BEQ.b JL_0_73BE
00034588 <AmiBlitz3.ab2@9775>     MOVE.l ptr_deflibs,D1
0003458C <AmiBlitz3.ab2@9776>     BEQ.b JL_0_73BE
00034592 <AmiBlitz3.ab2@9777>       CLR.l ptr_deflibs                                    ; d0: memorySize
00034594 <AmiBlitz3.ab2@9778>       MOVEA.l D1,A1                                        ; a1: memory
0003459A <AmiBlitz3.ab2@9779>       MOVE.l mempool,a0                                    ; a0: poolHeader
000345A0 <AmiBlitz3.ab2@9780>       MOVEA.l _execbase,A6
000345A4 <AmiBlitz3.ab2@9781>       JSR _FreePooled(A6)                                  ; free deflibs
000345A6 <AmiBlitz3.ab2@9784> RTS
000345AC <AmiBlitz3.ab2@9788>   MOVEA.l currentmacroaddr,A0
000345AE <AmiBlitz3.ab2@9789>   MOVEA.l (A0),A2
000345B0 <AmiBlitz3.ab2@9790>   CLR.l (A0)
000345B6 <AmiBlitz3.ab2@9791>   MOVEA.l _execbase,A6
000345BA <AmiBlitz3.ab2@9794>     CMPA.w #$0,A2
000345BE <AmiBlitz3.ab2@9795>     BEQ.w JL_0_73FA
000345C0 <AmiBlitz3.ab2@9796>     MOVEQ.l #$00,D0
000345C4 <AmiBlitz3.ab2@9797>     MOVE.w $8(A2),D0
000345C8 <AmiBlitz3.ab2@9798>     BEQ.w JL_0_73E8
000345CC <AmiBlitz3.ab2@9799>     MOVEA.l $4(A2),A1
000345D2 <AmiBlitz3.ab2@9800>     MOVE.l mempool,a0
000345D6 <AmiBlitz3.ab2@9801>     JSR _FreePooled(A6)
000345D8 <AmiBlitz3.ab2@9804>     MOVEA.l A2,A1
000345DA <AmiBlitz3.ab2@9805>     MOVEA.l (A2),A2
000345DC <AmiBlitz3.ab2@9806>     MOVEQ.l #$00,D0
000345E0 <AmiBlitz3.ab2@9807>     MOVE.b $C(A1),D0
000345E6 <AmiBlitz3.ab2@9808>     MOVE.l mempool2,a0
000345EA <AmiBlitz3.ab2@9809>     JSR _FreePooled(A6)
000345EE <AmiBlitz3.ab2@9810> BRA.w JL_0_73CE
000345F0 <AmiBlitz3.ab2@9813> RTS
000345F6 <AmiBlitz3.ab2@9817>   MOVEA.l templabel,A2
000345FC <AmiBlitz3.ab2@9818>   CLR.l templabel
000345FE <AmiBlitz3.ab2@9819> RTS
00034604 <AmiBlitz3.ab2@9822>   MOVEA.l _execbase,A6                                     ;??looks like dead code?
00034608 <AmiBlitz3.ab2@9825>     CMPA.w #$0,A2
0003460C <AmiBlitz3.ab2@9826>     BEQ.w JL_0_7426
0003460E <AmiBlitz3.ab2@9827>     MOVEQ.l #$00,D0
00034612 <AmiBlitz3.ab2@9828>     MOVE.b $E(A2),D0                                       ;labeltemp
00034614 <AmiBlitz3.ab2@9829>     MOVEA.l A2,A1
00034616 <AmiBlitz3.ab2@9830>     MOVEA.l (A2),A2
0003461C <AmiBlitz3.ab2@9831>     MOVE.l mempool2,a0
00034620 <AmiBlitz3.ab2@9833> BRA.w JL_0_740C
00034622 <AmiBlitz3.ab2@9836> RTS
00034628 <AmiBlitz3.ab2@9840>   MOVEA.l data1,A4
0003462E <AmiBlitz3.ab2@9841>   CMPA.l data2at,A4
00034632 <AmiBlitz3.ab2@9842>   BCC.w JL_0_7442
00034634 <AmiBlitz3.ab2@9843>     MOVE.b D1,(A4)+
0003463A <AmiBlitz3.ab2@9844>     MOVE.l A4,data1
0003463C <AmiBlitz3.ab2@9845> RTS
00034644 <AmiBlitz3.ab2@9848>   MOVE.w #$FFFF,dontwrite                                  ;move #-1, org source
0003464A <AmiBlitz3.ab2@9849>   ADDQ.l #1,data1
0003464C <AmiBlitz3.ab2@9850> RTS
0003464E <AmiBlitz3.ab2@9854>   SWAP D1
00034652 <AmiBlitz3.ab2@9855>   BSR.w pokedata1
00034654 <AmiBlitz3.ab2@9856>   SWAP D1
0003465A <AmiBlitz3.ab2@9859>   MOVEA.l data1,A4
00034660 <AmiBlitz3.ab2@9860>   CMPA.l data2at,A4
00034664 <AmiBlitz3.ab2@9861>    BCC.w JL_0_7474
00034666 <AmiBlitz3.ab2@9862>   MOVE.w D1,(A4)+
0003466C <AmiBlitz3.ab2@9863>   MOVE.l A4,data1
0003466E <AmiBlitz3.ab2@9864> RTS
00034676 <AmiBlitz3.ab2@9867>   MOVE.w #$FFFF,dontwrite
0003467C <AmiBlitz3.ab2@9868>   ADDQ.l #2,data1
0003467E <AmiBlitz3.ab2@9869> RTS
00034684 <AmiBlitz3.ab2@9873>   MOVE.l data1,D3                                      ;write local string/type allocs
00034686 <AmiBlitz3.ab2@9874>   MOVEQ.l #$00,D4
0003468A <AmiBlitz3.ab2@9877>   CMPA.w #$0,A2
0003468E <AmiBlitz3.ab2@9878>    BEQ.w JL_0_74CAc
00034692 <AmiBlitz3.ab2@9879>   TST.w $6(A2)
00034696 <AmiBlitz3.ab2@9880>    BNE.w JL_0_74C4c
0003469A <AmiBlitz3.ab2@9881>   MOVEA.l $A(A2),A3
000346A2 <AmiBlitz3.ab2@9882>   CMPI.l #$100,$4(A3)
000346A6 <AmiBlitz3.ab2@9883>    BCS.w JL_0_74C4c
000346AA <AmiBlitz3.ab2@9884>   MOVE.w $4(A2),D1
000346AE <AmiBlitz3.ab2@9885>    BSR.w pokedata1
000346B2 <AmiBlitz3.ab2@9886>   MOVE.w $8(A3),D1
000346B6 <AmiBlitz3.ab2@9887>    BSR.w pokedata1
000346B8 <AmiBlitz3.ab2@9888>   ADDQ.w #1,D4
000346BA <AmiBlitz3.ab2@9891>    MOVEA.l (A2),A2
000346BE <AmiBlitz3.ab2@9892> BRA.w JL_0_7492c
000346C0 <AmiBlitz3.ab2@9895>    TST.w D4
000346C4 <AmiBlitz3.ab2@9896>    BEQ.w JL_0_74E0
000346C8 <AmiBlitz3.ab2@9897>   MOVE.w #$FF37,D1
000346CC <AmiBlitz3.ab2@9898>    BSR.w uselib
000346D0 <AmiBlitz3.ab2@9899>   MOVE.w #$FFFA,D1
000346D4 <AmiBlitz3.ab2@9900> BRA.w uselib
000346DA <AmiBlitz3.ab2@9908>   MOVEA.l varbase,A2                                       ;add alloc mem for types/strings global
000346E0 <AmiBlitz3.ab2@9911>   MOVE.l data1,D3
000346E2 <AmiBlitz3.ab2@9912>   MOVEQ.l #$00,D4
000346E6 <AmiBlitz3.ab2@9915>    CMPA.w #$0,A2
000346EA <AmiBlitz3.ab2@9916>    BEQ.w JL_0_74CA
000346EE <AmiBlitz3.ab2@9917>   TST.w $6(A2)
000346F2 <AmiBlitz3.ab2@9918>    BNE.w JL_0_74C4
000346F6 <AmiBlitz3.ab2@9919>   MOVEA.l $A(A2),A3
000346FE <AmiBlitz3.ab2@9920>   CMPI.l #$100,$4(A3)
00034702 <AmiBlitz3.ab2@9921>    BCS.w JL_0_74C4
00034706 <AmiBlitz3.ab2@9922>   MOVE.w $4(A2),D1
0003470A <AmiBlitz3.ab2@9923>    BSR.w pokedata1
0003470E <AmiBlitz3.ab2@9924>   MOVE.w $8(A3),D1
00034712 <AmiBlitz3.ab2@9925>    BSR.w pokedata1
00034714 <AmiBlitz3.ab2@9926>   ADDQ.w #1,D4
00034716 <AmiBlitz3.ab2@9929>   MOVEA.l (A2),A2
0003471A <AmiBlitz3.ab2@9930> BRA.w JL_0_7492
00034720 <AmiBlitz3.ab2@9934>   MOVEA.l sharebase,A2
00034724 <AmiBlitz3.ab2@9937>   CMPA.w #$0,A2
00034728 <AmiBlitz3.ab2@9938>    BEQ.w JL_0_74CAb
0003472C <AmiBlitz3.ab2@9940>   TST.w $6(A2)
00034730 <AmiBlitz3.ab2@9941>    BNE.w JL_0_74C4b
00034734 <AmiBlitz3.ab2@9942>   MOVEA.l $A(A2),A3
0003473C <AmiBlitz3.ab2@9943>   CMPI.l #$100,$4(A3)
00034740 <AmiBlitz3.ab2@9944>    BCS.w JL_0_74C4b
00034744 <AmiBlitz3.ab2@9945>   MOVE.w $4(A2),D1
00034748 <AmiBlitz3.ab2@9946>    BSR.w pokedata1
0003474C <AmiBlitz3.ab2@9947>   MOVE.w $8(A3),D1
00034750 <AmiBlitz3.ab2@9948>    BSR.w pokedata1
00034752 <AmiBlitz3.ab2@9949>   ADDQ.w #1,D4
00034754 <AmiBlitz3.ab2@9952>   MOVEA.l (A2),A2
00034758 <AmiBlitz3.ab2@9953> BRA.w JL_0_7492b
0003475A <AmiBlitz3.ab2@9956>    TST.w D4
0003475E <AmiBlitz3.ab2@9957>    BEQ.w JL_0_74E0
00034762 <AmiBlitz3.ab2@9958>   MOVE.w #$FF37,D1
00034766 <AmiBlitz3.ab2@9959>    BSR.w uselib                                            ;use statics lib
0003476A <AmiBlitz3.ab2@9960>   MOVE.w #$FFFA,D1                                         ;use memlib
0003476E <AmiBlitz3.ab2@9961> BRA.w uselib
00034770 <AmiBlitz3.ab2@9964> RTS
00034776 <AmiBlitz3.ab2@9968>   MOVE.w numtoa2,D1
0003477A <AmiBlitz3.ab2@9969>    BSR.w writeword
0003477E <AmiBlitz3.ab2@9970>    BSR.w addoff
00034780 <AmiBlitz3.ab2@9971>   MOVE.l D3,D1
00034784 <AmiBlitz3.ab2@9972>    BSR.w writelong
00034786 <AmiBlitz3.ab2@9973>   SUBQ.w #1,D4
0003478C <AmiBlitz3.ab2@9974>   MOVE.w D4,endarray+2
00034792 <AmiBlitz3.ab2@9975>   MOVE.l endarray,D1
00034796 <AmiBlitz3.ab2@9976> BRA.w writelong
00034798 <AmiBlitz3.ab2@9980>   MOVE.l D3,-(A7)
0003479E <AmiBlitz3.ab2@9983>   MOVEA.l _dosbase,A6
000347A2 <AmiBlitz3.ab2@9984>   JSR _Write(a6)
000347A4 <AmiBlitz3.ab2@9986>   CMP.l (A7)+,D0
000347A8 <AmiBlitz3.ab2@9987>    BNE.w JL_0_7516
000347AA <AmiBlitz3.ab2@9988> RTS
000347AC <AmiBlitz3.ab2@9991>   MOVE.l D7,D1
000347B2 <AmiBlitz3.ab2@9993>   MOVEA.l _dosbase,A6
000347B6 <AmiBlitz3.ab2@9994>   JSR _Close(a6)
000347BC <AmiBlitz3.ab2@9997> JMP error_create_exe
000347C2 <AmiBlitz3.ab2@10006>   MOVE.l A7,errstack
000347C6 <AmiBlitz3.ab2@10007>   MOVEM.l d2-d7/a2-a6,-(a7)
000347D0 <AmiBlitz3.ab2@10008>   MOVE.l #AL_0_7790,errcont
000347D4 <AmiBlitz3.ab2@10009>    BSR.w call_setpointerbusy
000347DC <AmiBlitz3.ab2@10010>   MOVE.w #$FFFF,anyerrs
000347E6 <AmiBlitz3.ab2@10011>   CMP.l #-1,chipstart
000347EA <AmiBlitz3.ab2@10012>   BEQ 'l01
000347F0 <AmiBlitz3.ab2@10013>   MOVE.l chipend,d1
000347F2 <AmiBlitz3.ab2@10014>   ADDQ.l #3,d1
000347F8 <AmiBlitz3.ab2@10015>   AND.l #$fffffffc,d1                                      ;bug
000347FE <AmiBlitz3.ab2@10016>   MOVE.l d1,chipend
00034800 <AmiBlitz3.ab2@10017>   MOVE.l d1,a1
00034806 <AmiBlitz3.ab2@10018>   MOVE.l chipstart,a0
00034808 <AmiBlitz3.ab2@10019>   MOVE.l a1,d1
0003480A <AmiBlitz3.ab2@10020>   SUB.l a0,d1
00034810 <AmiBlitz3.ab2@10021>   MOVE.l d1,chipsize
0003481A <AmiBlitz3.ab2@10024>   CMP.l #-1,bssstart
0003481E <AmiBlitz3.ab2@10025>   BEQ 'l11
00034824 <AmiBlitz3.ab2@10026>   MOVE.l realbssend,a1
0003482A <AmiBlitz3.ab2@10027>   MOVE.l bssstart,a0
0003482C <AmiBlitz3.ab2@10028>   MOVE.l a1,d1
0003482E <AmiBlitz3.ab2@10029>   SUB.l a0,d1
00034834 <AmiBlitz3.ab2@10030>   MOVE.l d1,bsssize
00034838 <AmiBlitz3.ab2@10031>   BEQ 'l11
0003483A <AmiBlitz3.ab2@10034>   TST.b (a0)+
0003483E <AmiBlitz3.ab2@10035>   BEQ 'l31
00034844 <AmiBlitz3.ab2@10036>   TST.b debugmode
00034848 <AmiBlitz3.ab2@10037>   BEQ 'l1
0003484E <AmiBlitz3.ab2@10038>   TST.b exdebug
00034852 <AmiBlitz3.ab2@10039>   BNE 'l31
00034858 <AmiBlitz3.ab2@10042>   MOVE.l #nodata,-(a7)
0003485E <AmiBlitz3.ab2@10043> JMP handle_compileerror
00034860 <AmiBlitz3.ab2@10046>   CMP.l a0,a1
00034864 <AmiBlitz3.ab2@10047>   BGT 'l32
0003486A <AmiBlitz3.ab2@10048>   MOVE.l bssend,d1
0003486C <AmiBlitz3.ab2@10049>   ADDQ.l #3,d1
00034872 <AmiBlitz3.ab2@10050>   AND.l #$fffffffc,d1                                      ;bug
00034878 <AmiBlitz3.ab2@10051>   MOVE.l d1,bssend
0003487A <AmiBlitz3.ab2@10052>   MOVE.l d1,a1
00034880 <AmiBlitz3.ab2@10053>   MOVE.l bssstart,a0
00034882 <AmiBlitz3.ab2@10054>   MOVE.l a1,d1
00034884 <AmiBlitz3.ab2@10055>   SUB.l a0,d1
0003488A <AmiBlitz3.ab2@10056>   MOVE.l d1,bsssize
0003488E <AmiBlitz3.ab2@10059>   MOVEM.l d5-d7/d3,-(a7)
00034894 <AmiBlitz3.ab2@10060>   MOVE.w dontwrite,D1
00034898 <AmiBlitz3.ab2@10061>   BNE.w JL_0_757C
0003489E <AmiBlitz3.ab2@10062>   MOVE.l chipsize,d5
000348A4 <AmiBlitz3.ab2@10063>   MOVE.l bsssize,d3
000348AA <AmiBlitz3.ab2@10064>   MOVE.l chipstart,d7
000348B0 <AmiBlitz3.ab2@10065>   MOVE.l bssstart,d6
000348B6 <AmiBlitz3.ab2@10066>   MOVEA.l hunkoffsetbase,A2
000348BC <AmiBlitz3.ab2@10067>   MOVEA.l destbufferstart,A1
000348BE <AmiBlitz3.ab2@10068>   MOVE.l A1,D2
000348C4 <AmiBlitz3.ab2@10069>   ADD.l noinits,D2
000348CA <AmiBlitz3.ab2@10070>   CLR.l hunkoffsetnum
000348CE <AmiBlitz3.ab2@10073>   CMPA.w #$0,A2
000348D2 <AmiBlitz3.ab2@10074>    BEQ.w JL_0_757C
000348D6 <AmiBlitz3.ab2@10075>   MOVE.l $4(A2),D0
000348DA <AmiBlitz3.ab2@10076>    LEA $0(a1,d0.l),a0
000348DC <AmiBlitz3.ab2@10077>    MOVE.l (a0),d1
000348DE <AmiBlitz3.ab2@10078>   TST.l d1
000348E2 <AmiBlitz3.ab2@10079>    BMI.w 'lm1
000348EA <AmiBlitz3.ab2@10080>   MOVE.b #0,newhunk
000348F4 <AmiBlitz3.ab2@10081>   CMP.l #-1,chipstart
000348F8 <AmiBlitz3.ab2@10082>   BEQ 'l10
000348FE <AmiBlitz3.ab2@10083>   CMP.l chipstart,d1
00034902 <AmiBlitz3.ab2@10084>   BLT 'l10
0003490A <AmiBlitz3.ab2@10085>   MOVE.b #1,newhunk
00034910 <AmiBlitz3.ab2@10086>   CMP.l chipend,d1
00034914 <AmiBlitz3.ab2@10087>   BGE 'l110
00034916 <AmiBlitz3.ab2@10088>   SUB.l d7,(a0)
0003491E <AmiBlitz3.ab2@10089>   ADD.l #$80000000,4(a2)
00034922 <AmiBlitz3.ab2@10090> BRA JL_0_7576
00034926 <AmiBlitz3.ab2@10093>   SUB.l d5,0(a0)
00034930 <AmiBlitz3.ab2@10096>   CMP.l #-1,bssstart
00034934 <AmiBlitz3.ab2@10097>     BEQ 'l11
0003493A <AmiBlitz3.ab2@10098>   CMP.l bssstart,d1
0003493E <AmiBlitz3.ab2@10099>   BLT 'l11
00034944 <AmiBlitz3.ab2@10100>   CMP.l bssend,d1
00034948 <AmiBlitz3.ab2@10101>   BGE 'l111
0003494E <AmiBlitz3.ab2@10102>   TST.b newhunk
00034952 <AmiBlitz3.ab2@10103>   BEQ 'ln1
00034954 <AmiBlitz3.ab2@10104>   ADD.l d5,(a0)
00034956 <AmiBlitz3.ab2@10107>   SUB.l d6,(a0)
0003495E <AmiBlitz3.ab2@10108>   ADD.l #$40000000,4(a2)
00034962 <AmiBlitz3.ab2@10109> BRA JL_0_7576
00034966 <AmiBlitz3.ab2@10112>   SUB.l d3,0(a0)
00034968 <AmiBlitz3.ab2@10115>   SUB.l D2,(A0)
0003496E <AmiBlitz3.ab2@10118>   ADDQ.l #1,hunkoffsetnum
00034970 <AmiBlitz3.ab2@10121>    MOVEA.l (A2),A2
00034974 <AmiBlitz3.ab2@10122> BRA.w JL_0_755E
00034978 <AmiBlitz3.ab2@10126>   MOVEM.l (a7)+,d5-d7/d3
0003497E <AmiBlitz3.ab2@10127>   MOVE.l ptr_newexefilename,D1
00034984 <AmiBlitz3.ab2@10128>   MOVE.l #HUNK_RELOC_8__MODE_NEWFILE,D2
0003498A <AmiBlitz3.ab2@10129>   MOVEA.l _dosbase,A6
0003498E <AmiBlitz3.ab2@10130>    JSR _Open(A6)
00034990 <AmiBlitz3.ab2@10131>   MOVE.l D0,D7
00034994 <AmiBlitz3.ab2@10132>    BEQ.w execerr
0003499A <AmiBlitz3.ab2@10133>   MOVE.l objlen,D0
000349A0 <AmiBlitz3.ab2@10134>   SUB.l #moremem,d0
000349A6 <AmiBlitz3.ab2@10135>   SUB.l noinits,D0
000349B0 <AmiBlitz3.ab2@10136>   CMP.l #-1,bssstart
000349B4 <AmiBlitz3.ab2@10137>   BEQ 'l60
000349BA <AmiBlitz3.ab2@10138>   SUB.l bsssize,d0
000349C0 <AmiBlitz3.ab2@10139>   SUB.l chipsize,d0
000349C4 <AmiBlitz3.ab2@10140> BRA.s 'l61
000349CE <AmiBlitz3.ab2@10143>   CMP.l #-1,chipstart
000349D2 <AmiBlitz3.ab2@10144>   BEQ 'l61
000349D8 <AmiBlitz3.ab2@10145>   SUB.l bsssize,d0
000349DE <AmiBlitz3.ab2@10146>   SUB.l chipsize,d0
000349E0 <AmiBlitz3.ab2@10149>   ADDQ.l #3,D0
000349E2 <AmiBlitz3.ab2@10150>   LSR.l #2,D0
000349E8 <AmiBlitz3.ab2@10151>   MOVE.l D0,tstsize1
000349EE <AmiBlitz3.ab2@10152>   MOVE.l D0,tstsize2
000349F0 <AmiBlitz3.ab2@10153>   MOVE.l D7,D1
000349F6 <AmiBlitz3.ab2@10154>   MOVE.l #tsthead,D2                                      ;hunkbegin
000349F8 <AmiBlitz3.ab2@10155>   MOVEQ.l #$20,D3
00034A02 <AmiBlitz3.ab2@10156>   CMP.l #-1,bssstart
00034A06 <AmiBlitz3.ab2@10157>   BEQ 'lb1
00034A10 <AmiBlitz3.ab2@10158>   CMP.l #-1,chipstart
00034A14 <AmiBlitz3.ab2@10159>   BEQ 'lb1
00034A1E <AmiBlitz3.ab2@10160>   MOVE.l #1,bssnum
00034A28 <AmiBlitz3.ab2@10161>   MOVE.l #2,chipnum
00034A2A <AmiBlitz3.ab2@10162>   MOVEQ.l #$28,D3
00034A30 <AmiBlitz3.ab2@10163>   MOVE.l bsssize,d2
00034A32 <AmiBlitz3.ab2@10164>   ADDQ.l #3,d2
00034A34 <AmiBlitz3.ab2@10165>   ASR.l #2,d2
00034A3A <AmiBlitz3.ab2@10166>   MOVE.l d2,hunkend+8
00034A40 <AmiBlitz3.ab2@10167>   MOVE.l d2,bsssize3
00034A46 <AmiBlitz3.ab2@10168>   MOVE.l chipsize,d2
00034A48 <AmiBlitz3.ab2@10169>   ADDQ.l #3,d2
00034A4A <AmiBlitz3.ab2@10170>   ASR.l #2,d2
00034A50 <AmiBlitz3.ab2@10171>   MOVE.l d2,chipsize2
00034A5A <AmiBlitz3.ab2@10172>   ADD.l #$40000000,chipsize2
00034A60 <AmiBlitz3.ab2@10173>   MOVE.l d2,hunkend2+8
00034A66 <AmiBlitz3.ab2@10174>   MOVE.l D0,tstsize1c
00034A6C <AmiBlitz3.ab2@10175>   MOVE.l D0,tstsize2c
00034A72 <AmiBlitz3.ab2@10176>   MOVE.l #hunkbegin2,d2
00034A76 <AmiBlitz3.ab2@10177> BRA 'l100
00034A80 <AmiBlitz3.ab2@10180>   CMP.l #-1,bssstart
00034A84 <AmiBlitz3.ab2@10181>   BEQ 'l10
00034A8E <AmiBlitz3.ab2@10182>   MOVE.l #1,bssnum
00034A90 <AmiBlitz3.ab2@10183>   MOVEQ.l #$24,D3
00034A96 <AmiBlitz3.ab2@10184>   MOVE.l bsssize,d2
00034A98 <AmiBlitz3.ab2@10185>   ADDQ.l #3,d2
00034A9A <AmiBlitz3.ab2@10186>   ASR.l #2,d2
00034AA0 <AmiBlitz3.ab2@10187>   MOVE.l d2,hunkend+8
00034AA6 <AmiBlitz3.ab2@10188>   MOVE.l d2,bsssize2
00034AAC <AmiBlitz3.ab2@10189>   MOVE.l D0,tstsize1b
00034AB2 <AmiBlitz3.ab2@10190>   MOVE.l D0,tstsize2b
00034AB8 <AmiBlitz3.ab2@10191>   MOVE.l #hunkbegin,d2
00034AC2 <AmiBlitz3.ab2@10194>   CMP.l #-1,chipstart
00034AC6 <AmiBlitz3.ab2@10195>   BEQ 'l100
00034AD0 <AmiBlitz3.ab2@10196>   MOVE.l #1,chipnum
00034AD2 <AmiBlitz3.ab2@10197>   MOVEQ.l #$24,D3
00034AD8 <AmiBlitz3.ab2@10198>   MOVE.l chipsize,d2
00034ADA <AmiBlitz3.ab2@10199>   ADDQ.l #3,d2
00034ADC <AmiBlitz3.ab2@10200>   ASR.l #2,d2
00034AE2 <AmiBlitz3.ab2@10201>   MOVE.l d2,hunkend2+8
00034AE8 <AmiBlitz3.ab2@10202>   MOVE.l d2,bsssize2
00034AF2 <AmiBlitz3.ab2@10203>   ADD.l #$40000000,bsssize2
00034AF8 <AmiBlitz3.ab2@10204>   MOVE.l D0,tstsize1b
00034AFE <AmiBlitz3.ab2@10205>   MOVE.l D0,tstsize2b
00034B04 <AmiBlitz3.ab2@10206>   MOVE.l #hunkbegin,d2
00034B08 <AmiBlitz3.ab2@10209>    BSR.w mywrite
00034B0E <AmiBlitz3.ab2@10210>   MOVE.l destbufferstart,D2
00034B14 <AmiBlitz3.ab2@10211>   ADD.l noinits,D2
00034B1A <AmiBlitz3.ab2@10212>   MOVE.l objlen,D3
00034B20 <AmiBlitz3.ab2@10213>   SUB.l #moremem,d3
00034B26 <AmiBlitz3.ab2@10214>   SUB.l noinits,D3
00034B30 <AmiBlitz3.ab2@10215>   CMP.l #-1,bssstart
00034B34 <AmiBlitz3.ab2@10216>   BNE 'l40
00034B3E <AmiBlitz3.ab2@10217>   CMP.l #-1,chipstart
00034B42 <AmiBlitz3.ab2@10218>   BNE 'l40
00034B46 <AmiBlitz3.ab2@10219> BRA 'l41
00034B4C <AmiBlitz3.ab2@10222>   MOVE.l codeend,d1
00034B4E <AmiBlitz3.ab2@10223>     SUB.l d2,d1
00034B50 <AmiBlitz3.ab2@10224>     MOVE.l d1,d3
00034B56 <AmiBlitz3.ab2@10225>   SUB.l bsssize,d3
00034B5C <AmiBlitz3.ab2@10226>   SUB.l chipsize,d3
00034B5E <AmiBlitz3.ab2@10227>   MOVE.l D7,D1
00034B62 <AmiBlitz3.ab2@10228>   BSR.w mywrite
00034B68 <AmiBlitz3.ab2@10229>   MOVE.l objlen,D3
00034B6E <AmiBlitz3.ab2@10230>   SUB.l #moremem,d3
00034B74 <AmiBlitz3.ab2@10231>   SUB.l noinits,D3
00034B76 <AmiBlitz3.ab2@10232>   MOVE.l d3,d1
00034B7C <AmiBlitz3.ab2@10233>   MOVE.l destbufferstart,D2
00034B82 <AmiBlitz3.ab2@10234>   ADD.l noinits,D2
00034B84 <AmiBlitz3.ab2@10235>   ADD.l d2,d1
00034B8A <AmiBlitz3.ab2@10236>   SUB.l codeend,d1
00034B8C <AmiBlitz3.ab2@10237>   MOVE.l d1,d3
00034B92 <AmiBlitz3.ab2@10238>   MOVE.l codeend,d2
00034B94 <AmiBlitz3.ab2@10241>   MOVE.l d2,d1
00034B96 <AmiBlitz3.ab2@10242>   ADD.l d3,d1
00034B98 <AmiBlitz3.ab2@10243>   ADDQ.l #3,D1
00034B9E <AmiBlitz3.ab2@10244>   ANDI.l #$FFFFFFFC,D1
00034BA0 <AmiBlitz3.ab2@10245>   SUB.l d2,d1
00034BA2 <AmiBlitz3.ab2@10246>   MOVE.l d1,d3
00034BA4 <AmiBlitz3.ab2@10247>   MOVE.l D7,D1
00034BA8 <AmiBlitz3.ab2@10248>    BSR.w mywrite
00034BB2 <AmiBlitz3.ab2@10249>   MOVE.l hunkoffsetcounter,tstsize3
00034BB6 <AmiBlitz3.ab2@10250>    BEQ.w JL_0_7646
00034BB8 <AmiBlitz3.ab2@10251>   MOVE.l D7,D1
00034BBE <AmiBlitz3.ab2@10252>   MOVE.l #tstend,D2
00034BC0 <AmiBlitz3.ab2@10253>   MOVEQ.l #$04,D3
00034BC4 <AmiBlitz3.ab2@10254>    BSR.w mywrite
00034BCA <AmiBlitz3.ab2@10255>    MOVEA.l _execbase,A6
00034BD0 <AmiBlitz3.ab2@10256>    MOVE.l hunkoffsetcounter,d0
00034BD2 <AmiBlitz3.ab2@10257>    ASL.l #2,d0
00034BD8 <AmiBlitz3.ab2@10258>    ADD.l #12,d0
00034BDA <AmiBlitz3.ab2@10259>    MOVEQ #0,d1
00034BDE <AmiBlitz3.ab2@10260>    JSR _AllocMem(a6)
00034BE0 <AmiBlitz3.ab2@10261>    TST.l d0
00034BE4 <AmiBlitz3.ab2@10262>    BEQ nomem
00034BEA <AmiBlitz3.ab2@10263>    MOVE.l noinits,D4
00034BEC <AmiBlitz3.ab2@10264>    MOVE.l d5,-(a7)
00034BEE <AmiBlitz3.ab2@10265>    MOVE.l d0,d5
00034BF0 <AmiBlitz3.ab2@10266>    MOVE.l d0,a1
00034BF6 <AmiBlitz3.ab2@10267>    MOVEA.l hunkoffsetbase,A2
00034BFE <AmiBlitz3.ab2@10268>    MOVE.b #0,newhunk
00034C02 <AmiBlitz3.ab2@10271>   CMPA.w #$0,A2
00034C06 <AmiBlitz3.ab2@10272>    BEQ.w savehunk
00034C0C <AmiBlitz3.ab2@10273>   MOVE.l destbufferstart,D2
00034C12 <AmiBlitz3.ab2@10274>   ADD.l noinits,D2
00034C16 <AmiBlitz3.ab2@10275>   MOVE.l  $4(A2),d1
00034C1A <AmiBlitz3.ab2@10276>   BTST #31,d1
00034C1E <AmiBlitz3.ab2@10277>   BEQ 'lh1
00034C26 <AmiBlitz3.ab2@10278>   MOVE.b #1,newhunk
00034C2A <AmiBlitz3.ab2@10279> BRA 'lh3
00034C2E <AmiBlitz3.ab2@10282>   BTST #30,d1
00034C32 <AmiBlitz3.ab2@10283>   BEQ 'lh2
00034C3A <AmiBlitz3.ab2@10284>   MOVE.b #1,newhunk
00034C3E <AmiBlitz3.ab2@10285> BRA 'lh3
00034C40 <AmiBlitz3.ab2@10288>   ADD.l d1,d2
00034C46 <AmiBlitz3.ab2@10289>   CMP.l chipend,d2
00034C4A <AmiBlitz3.ab2@10290>   BLT 'l100
00034C50 <AmiBlitz3.ab2@10291>   SUB.l chipsize,d1
00034C56 <AmiBlitz3.ab2@10294>   CMP.l bssend,d2
00034C5A <AmiBlitz3.ab2@10295>   BLT 'l101
00034C60 <AmiBlitz3.ab2@10296>   SUB.l bsssize,d1
00034C62 <AmiBlitz3.ab2@10299>   MOVE.l d1,(a1)
00034C64 <AmiBlitz3.ab2@10300>   SUB.l D4,(A1)+
00034C66 <AmiBlitz3.ab2@10303>   MOVEA.l (A2),A2
00034C6A <AmiBlitz3.ab2@10304> BRA.w menu_createresidentfile__oloopb
00034C6C <AmiBlitz3.ab2@10308>   MOVE.l D7,D1
00034C72 <AmiBlitz3.ab2@10309>   MOVEA.l _dosbase,A6
00034C7C <AmiBlitz3.ab2@10310>   MOVE.l hunkoffsetnum,tstsize3
00034C80 <AmiBlitz3.ab2@10311>   BEQ 'ln1
00034C86 <AmiBlitz3.ab2@10312>   MOVE.l #tstend+4,d2
00034C88 <AmiBlitz3.ab2@10313>     MOVEQ #8,d3
00034C8C <AmiBlitz3.ab2@10314>    JSR _Write(A6)
00034C8E <AmiBlitz3.ab2@10315>   MOVE.l d7,d1
00034C94 <AmiBlitz3.ab2@10316>   MOVE.l hunkoffsetnum,d3
00034C96 <AmiBlitz3.ab2@10317>   ASL.l #2,d3
00034C98 <AmiBlitz3.ab2@10318>   MOVE.l d5,D2
00034C9C <AmiBlitz3.ab2@10319>   JSR _Write(a6)
00034CA2 <AmiBlitz3.ab2@10322>   TST.b newhunk
00034CA6 <AmiBlitz3.ab2@10323>   BEQ 'l10
00034CAC <AmiBlitz3.ab2@10324>   MOVEA.l hunkoffsetbase,A2
00034CAE <AmiBlitz3.ab2@10325>   MOVE.l d5,a0
00034CB0 <AmiBlitz3.ab2@10326>   ADDQ #8,a0
00034CB8 <AmiBlitz3.ab2@10327>   MOVE.l bssnum,-4(a0)
00034CBA <AmiBlitz3.ab2@10328>   MOVEQ #0,d6
00034CBE <AmiBlitz3.ab2@10331>   CMPA.w #$0,A2
00034CC2 <AmiBlitz3.ab2@10332>    BEQ.w 'lh3
00034CC8 <AmiBlitz3.ab2@10333>   MOVE.l destbufferstart,D2
00034CCE <AmiBlitz3.ab2@10334>   ADD.l noinits,D2
00034CD2 <AmiBlitz3.ab2@10335>   MOVE.l  $4(A2),d1
00034CD6 <AmiBlitz3.ab2@10336>   BTST #30,d1
00034CDA <AmiBlitz3.ab2@10337>   BEQ 'lh1
00034CDE <AmiBlitz3.ab2@10338>   BCLR #30,d1
00034CE0 <AmiBlitz3.ab2@10339>   MOVE.l d1,(a0)
00034CE2 <AmiBlitz3.ab2@10340>   SUB.l D4,(A0)+
00034CE4 <AmiBlitz3.ab2@10341>   ADDQ.l #1,d6
00034CE6 <AmiBlitz3.ab2@10344>   MOVE.l (a2),a2
00034CEA <AmiBlitz3.ab2@10345> BRA 'lh2
00034CEC <AmiBlitz3.ab2@10348>   TST.l d6
00034CF0 <AmiBlitz3.ab2@10349>     BEQ 'lh10
00034CF2 <AmiBlitz3.ab2@10350>     MOVE.l d5,a0
00034CF4 <AmiBlitz3.ab2@10351>     MOVE.l d6,(a0)
00034CF6 <AmiBlitz3.ab2@10352>     MOVE.l d7,d1
00034CF8 <AmiBlitz3.ab2@10353>     MOVE.l d5,d2
00034CFA <AmiBlitz3.ab2@10354>     MOVE.l d6,d3
00034CFC <AmiBlitz3.ab2@10355>     ASL.l #2,d3
00034CFE <AmiBlitz3.ab2@10356>     ADDQ.l #8,d3
00034D02 <AmiBlitz3.ab2@10357>     BSR.w mywrite
00034D08 <AmiBlitz3.ab2@10360>   MOVEA.l hunkoffsetbase,A2
00034D0A <AmiBlitz3.ab2@10361>   MOVE.l d5,a0
00034D0C <AmiBlitz3.ab2@10362>   ADDQ #8,a0
00034D14 <AmiBlitz3.ab2@10363>   MOVE.l chipnum,-4(a0)
00034D16 <AmiBlitz3.ab2@10364>   MOVEQ #0,d6
00034D1A <AmiBlitz3.ab2@10367>   CMPA.w #$0,A2
00034D1E <AmiBlitz3.ab2@10368>    BEQ.w 'lh30
00034D24 <AmiBlitz3.ab2@10369>   MOVE.l destbufferstart,D2
00034D2A <AmiBlitz3.ab2@10370>   ADD.l noinits,D2
00034D2E <AmiBlitz3.ab2@10371>   MOVE.l  $4(A2),d1
00034D32 <AmiBlitz3.ab2@10372>   BTST #31,d1
00034D36 <AmiBlitz3.ab2@10373>   BEQ 'lh11
00034D3A <AmiBlitz3.ab2@10374>   BCLR #31,d1
00034D3C <AmiBlitz3.ab2@10375>   MOVE.l d1,(a0)
00034D3E <AmiBlitz3.ab2@10376>   SUB.l D4,(A0)+
00034D40 <AmiBlitz3.ab2@10377>   ADDQ.l #1,d6
00034D42 <AmiBlitz3.ab2@10380>   MOVE.l (a2),a2
00034D46 <AmiBlitz3.ab2@10381> BRA 'lh20
00034D48 <AmiBlitz3.ab2@10384>   TST.l d6
00034D4C <AmiBlitz3.ab2@10385>     BEQ 'l10
00034D4E <AmiBlitz3.ab2@10386>     MOVE.l d5,a0
00034D50 <AmiBlitz3.ab2@10387>     MOVE.l d6,(a0)
00034D52 <AmiBlitz3.ab2@10388>     MOVE.l d7,d1
00034D54 <AmiBlitz3.ab2@10389>     MOVE.l d5,d2
00034D56 <AmiBlitz3.ab2@10390>     MOVE.l d6,d3
00034D58 <AmiBlitz3.ab2@10391>     ASL.l #2,d3
00034D5A <AmiBlitz3.ab2@10392>     ADDQ.l #8,d3
00034D5E <AmiBlitz3.ab2@10393>     BSR.w mywrite
00034D64 <AmiBlitz3.ab2@10397>    MOVEA.l _execbase,A6
00034D6A <AmiBlitz3.ab2@10398>    MOVE.l hunkoffsetcounter,d0
00034D6C <AmiBlitz3.ab2@10399>    ASL.l #2,d0
00034D72 <AmiBlitz3.ab2@10400>    ADD.l #12,d0
00034D74 <AmiBlitz3.ab2@10401>    MOVE.l d5,a1
00034D78 <AmiBlitz3.ab2@10402>    JSR _FreeMem(a6)
00034D7E <AmiBlitz3.ab2@10403>    MOVEA.l _dosbase,A6
00034D80 <AmiBlitz3.ab2@10404>    MOVE.l (a7)+,d5
00034D84 <AmiBlitz3.ab2@10405> BRA JL_0_7632
00034D8A <AmiBlitz3.ab2@10409>   MOVEA.l hunkoffsetbase,A2
00034D90 <AmiBlitz3.ab2@10410>   MOVE.l noinits,D4
00034D94 <AmiBlitz3.ab2@10413>   CMPA.w #$0,A2                                            ;write hunkoffsets
00034D98 <AmiBlitz3.ab2@10414>   BEQ.w JL_0_7632
00034D9C <AmiBlitz3.ab2@10415>   LEA $4(A2),A1
00034D9E <AmiBlitz3.ab2@10416>   SUB.l D4,(A1)
00034DA0 <AmiBlitz3.ab2@10417>   MOVE.l D7,D1
00034DA2 <AmiBlitz3.ab2@10418>   MOVE.l A1,D2
00034DA4 <AmiBlitz3.ab2@10419>   MOVEQ.l #$04,D3
00034DA8 <AmiBlitz3.ab2@10420>   BSR.w mywrite
00034DAC <AmiBlitz3.ab2@10421>   ADD.l D4,$4(A2)
00034DAE <AmiBlitz3.ab2@10422>   MOVEA.l (A2),A2
00034DB2 <AmiBlitz3.ab2@10423> BRA.w JL_0_7610
00034DB8 <AmiBlitz3.ab2@10426>   CLR.l tstsize3
00034DBA <AmiBlitz3.ab2@10427>   MOVE.l D7,D1
00034DC0 <AmiBlitz3.ab2@10428>   MOVE.l #tstsize3,D2
00034DC2 <AmiBlitz3.ab2@10429>   MOVEQ.l #$04,D3
00034DC6 <AmiBlitz3.ab2@10430>    BSR.w mywrite
00034DCE <AmiBlitz3.ab2@10433>   BTST #$7,link_debuginfo
00034DD2 <AmiBlitz3.ab2@10434>    BEQ.w JL_0_7706
00034DD8 <AmiBlitz3.ab2@10435>   MOVE.l #sysdebug,D2                                      ;debughunks
00034DDA <AmiBlitz3.ab2@10436>   MOVEQ.l #$04,D3
00034DDC <AmiBlitz3.ab2@10437>   MOVE.l D7,D1
00034DE0 <AmiBlitz3.ab2@10438>    BSR.w mywrite
00034DE6 <AmiBlitz3.ab2@10439>   MOVEA.l labelbase,A2
00034DEA <AmiBlitz3.ab2@10442>   CMPA.w #$0,A2
00034DEE <AmiBlitz3.ab2@10443>    BEQ.w JL_0_76F8
00034DF4 <AmiBlitz3.ab2@10444>   BTST #$0,$7(A2)
00034DF8 <AmiBlitz3.ab2@10445>    BEQ.w JL_0_7682
00034E00 <AmiBlitz3.ab2@10446>   CMPI.l #$1,$4(A2)
00034E04 <AmiBlitz3.ab2@10448> BRA.w JL_0_76F2                                            ;only addr labels
00034E06 <AmiBlitz3.ab2@10451>   MOVEQ.l #$00,D4
00034E0A <AmiBlitz3.ab2@10452>   MOVE.b $12(A2),D4
00034E0E <AmiBlitz3.ab2@10453>   SUBI.w #$13,D4
00034E10 <AmiBlitz3.ab2@10454>   ADDQ.w #2,D4
00034E14 <AmiBlitz3.ab2@10455>   ANDI.w #$FFFC,D4
00034E16 <AmiBlitz3.ab2@10456>   MOVE.l D4,D5
00034E18 <AmiBlitz3.ab2@10457>   LSR.w #2,D5
00034E1E <AmiBlitz3.ab2@10458>   MOVE.l D5,temp1
00034E20 <AmiBlitz3.ab2@10459>   LSL.w #2,D5
00034E26 <AmiBlitz3.ab2@10460>   MOVE.l #temp1,a1
00034E2C <AmiBlitz3.ab2@10462>   LEA debugstore,a0
00034E2E <AmiBlitz3.ab2@10463>   MOVE.l (a1),(a0)+
00034E30 <AmiBlitz3.ab2@10464>   MOVEQ.l #$04,D3
00034E34 <AmiBlitz3.ab2@10467>   LEA $13(A2),A1
00034E36 <AmiBlitz3.ab2@10468>   MOVE.l d4,d1
00034E38 <AmiBlitz3.ab2@10469>   SUBQ.l #1,d1
00034E3A <AmiBlitz3.ab2@10472>     MOVE.b (a1)+,d0
00034E3E <AmiBlitz3.ab2@10473>     BEQ 'l21
00034E40 <AmiBlitz3.ab2@10474>     MOVE.b d0,(a0)+
00034E44 <AmiBlitz3.ab2@10475>   DBF d1,'l10
00034E48 <AmiBlitz3.ab2@10477> BRA 'l22
00034E4A <AmiBlitz3.ab2@10480>       CLR.b (a0)+
00034E4E <AmiBlitz3.ab2@10481>   DBF d1,'l21
00034E50 <AmiBlitz3.ab2@10484>   ADD.l d4,d3
00034E52 <AmiBlitz3.ab2@10489>   SUB.l D4,D5
00034E56 <AmiBlitz3.ab2@10490>    BEQ.w JL_0_76CE
00034E5C <AmiBlitz3.ab2@10491>   MOVE.l #zero,a1
00034E5E <AmiBlitz3.ab2@10493>   MOVE.l (a1),(a0)+
00034E60 <AmiBlitz3.ab2@10495>   ADD.l d5,d3
00034E64 <AmiBlitz3.ab2@10500>   MOVE.l $8(A2),D2
00034E6A <AmiBlitz3.ab2@10501>   SUB.l destbufferstart,D2
00034E70 <AmiBlitz3.ab2@10502>   SUB.l noinits,D2
00034E76 <AmiBlitz3.ab2@10503>   MOVE.l D2,temp1
00034E7C <AmiBlitz3.ab2@10504>   MOVE.l #temp1,a1
00034E7E <AmiBlitz3.ab2@10506>   MOVE.l (a1),(a0)+
00034E84 <AmiBlitz3.ab2@10507>   ADD.l #4,d3
00034E8A <AmiBlitz3.ab2@10508>   LEA debugstore,a0
00034E8C <AmiBlitz3.ab2@10509>   MOVE.l a0,d2
00034E8E <AmiBlitz3.ab2@10511>   MOVE.l D7,D1
00034E92 <AmiBlitz3.ab2@10512>   BSR.w mywrite
00034E94 <AmiBlitz3.ab2@10515>   MOVEA.l (A2),A2
00034E98 <AmiBlitz3.ab2@10516> BRA.w JL_0_7664
00034E9E <AmiBlitz3.ab2@10520>   MOVE.l #zero,D2
00034EA0 <AmiBlitz3.ab2@10521>   MOVEQ.l #$04,D3
00034EA2 <AmiBlitz3.ab2@10522>   MOVE.l D7,D1
00034EA6 <AmiBlitz3.ab2@10523>   BSR.w mywrite
00034EA8 <AmiBlitz3.ab2@10526>   MOVE.l D7,D1
00034EAE <AmiBlitz3.ab2@10527>   MOVE.l #tstdone,D2                                      ;hunkend
00034EB0 <AmiBlitz3.ab2@10528>   MOVEQ.l #$04,D3
00034EBA <AmiBlitz3.ab2@10529>   CMPI.l #-1,bssstart
00034EBE <AmiBlitz3.ab2@10530>   BEQ 'l10
00034EC0 <AmiBlitz3.ab2@10531>   MOVEQ #16,d3
00034EC6 <AmiBlitz3.ab2@10532>   MOVE.l #hunkend,d2
00034ED0 <AmiBlitz3.ab2@10533>   CMPI.l #-1,chipstart
00034ED4 <AmiBlitz3.ab2@10534>   BEQ 'l10
00034ED6 <AmiBlitz3.ab2@10535>   MOVE.l d7,d1
00034ED8 <AmiBlitz3.ab2@10536>   MOVEQ #12,d3
00034EDC <AmiBlitz3.ab2@10537>   BSR.w mywrite
00034EE6 <AmiBlitz3.ab2@10540>   CMPI.l #-1,chipstart
00034EEA <AmiBlitz3.ab2@10541>   BEQ 'l11
00034EEC <AmiBlitz3.ab2@10542>   MOVEQ #12,d3
00034EF2 <AmiBlitz3.ab2@10543>   MOVE.l #hunkend2,d2
00034EF4 <AmiBlitz3.ab2@10544>   MOVE.l d7,d1
00034EF8 <AmiBlitz3.ab2@10545>   BSR.w mywrite
00034EFA <AmiBlitz3.ab2@10546>   MOVE.l d7,d1
00034F00 <AmiBlitz3.ab2@10547>   MOVE.l chipstart,d2
00034F06 <AmiBlitz3.ab2@10548>   MOVE.l chipsize,d3
00034F0A <AmiBlitz3.ab2@10549>   BSR.w mywrite
00034F0C <AmiBlitz3.ab2@10550>   MOVEQ #4,d3
00034F12 <AmiBlitz3.ab2@10551>   MOVE.l #hunkend,d2
00034F14 <AmiBlitz3.ab2@10552>   MOVE.l d7,d1
00034F18 <AmiBlitz3.ab2@10555>   BSR.w mywrite
00034F1A <AmiBlitz3.ab2@10556>   MOVE.l D7,D1
00034F20 <AmiBlitz3.ab2@10557>   MOVEA.l _dosbase,A6
00034F24 <AmiBlitz3.ab2@10558>   JSR _Close(A6)
00034F2C <AmiBlitz3.ab2@10563>   BTST #$7,create_iconfile
00034F30 <AmiBlitz3.ab2@10564>    BEQ.w skip_createicon
00034F36 <AmiBlitz3.ab2@10566>   MOVEA.l ptr_newexefilename,A0
00034F38 <AmiBlitz3.ab2@10569>     TST.b (A0)+
00034F3C <AmiBlitz3.ab2@10570>   BNE.w JL_0_772C
00034F3E <AmiBlitz3.ab2@10571>   SUBQ.w #1,A0
00034F40 <AmiBlitz3.ab2@10572>   MOVE.l A0,-(A7)
00034F46 <AmiBlitz3.ab2@10573>   LEA str_infoextention2,A1
00034F48 <AmiBlitz3.ab2@10576>     MOVE.b (A1)+,(A0)+
00034F4C <AmiBlitz3.ab2@10577>   BNE.w JL_0_773A
00034F52 <AmiBlitz3.ab2@10579>   MOVE.l ptr_newexefilename,D1
00034F54 <AmiBlitz3.ab2@10580>   MOVEQ.l #-$02,D2
00034F5A <AmiBlitz3.ab2@10581>   MOVEA.l _dosbase,A6
00034F5E <AmiBlitz3.ab2@10582>   JSR _Lock(A6)
00034F60 <AmiBlitz3.ab2@10583>   MOVE.l D0,D1
00034F64 <AmiBlitz3.ab2@10584>   BEQ.w JL_0_775A                                          ;no icon exit so jump to create one  tomsmart1
00034F68 <AmiBlitz3.ab2@10585>   JSR _UnLock(A6)                                          ;OH!! there is a Icon so we must Unlock it  tomsmart1
00034F6C <AmiBlitz3.ab2@10586> BRA.w JL_0_7788                                            ;and skip writing a Icon  tomsmart1
00034F72 <AmiBlitz3.ab2@10589>   MOVE.l ptr_newexefilename,D1
00034F78 <AmiBlitz3.ab2@10590>   MOVE.l #HUNK_RELOC_8__MODE_NEWFILE,D2
00034F7E <AmiBlitz3.ab2@10591>   MOVEA.l _dosbase,A6
00034F82 <AmiBlitz3.ab2@10592>    JSR _Open(A6)
00034F84 <AmiBlitz3.ab2@10593>   MOVE.l D0,D7
00034F88 <AmiBlitz3.ab2@10594>    BEQ.w JL_0_7788
00034F8E <AmiBlitz3.ab2@10595>   MOVE.l #icongfx_data,D2                                  ; icon graphics
00034F94 <AmiBlitz3.ab2@10596>   MOVE.l #icongfx_data_end-icongfx_data,D3                 ; length of gfx-data
00034F96 <AmiBlitz3.ab2@10597>   MOVE.l D7,D1
00034F9C <AmiBlitz3.ab2@10598>   MOVEA.l _dosbase,A6
00034FA0 <AmiBlitz3.ab2@10599>   JSR _Write(A6)
00034FA2 <AmiBlitz3.ab2@10600>   MOVE.l D7,D1
00034FA6 <AmiBlitz3.ab2@10601>   JSR _Close(A6)
00034FA8 <AmiBlitz3.ab2@10604>   MOVEA.l (A7)+,A0
00034FAA <AmiBlitz3.ab2@10605>   CLR.b (A0)
00034FB0 <AmiBlitz3.ab2@10610>   TST.b exdebug
00034FB4 <AmiBlitz3.ab2@10611>    BEQ JL_0_757Cb
00034FBA <AmiBlitz3.ab2@10612>   MOVE.w dontwrite,D1
00034FBE <AmiBlitz3.ab2@10613>   BNE.w JL_0_757Cb
00034FC4 <AmiBlitz3.ab2@10614>   MOVE.l chipsize,d5
00034FCA <AmiBlitz3.ab2@10615>   MOVE.l bsssize,d3
00034FD0 <AmiBlitz3.ab2@10616>   MOVE.l chipstart,d7
00034FD6 <AmiBlitz3.ab2@10617>   MOVE.l bssstart,d6
00034FDC <AmiBlitz3.ab2@10618>   MOVEA.l hunkoffsetbase,A2
00034FE2 <AmiBlitz3.ab2@10619>   MOVEA.l destbufferstart,A1
00034FE4 <AmiBlitz3.ab2@10620>   MOVE.l A1,D2
00034FEA <AmiBlitz3.ab2@10621>   ADD.l noinits,D2
00034FF0 <AmiBlitz3.ab2@10622>   CLR.l hunkoffsetnum
00034FF4 <AmiBlitz3.ab2@10625>   CMPA.w #$0,A2
00034FF8 <AmiBlitz3.ab2@10626>    BEQ.w JL_0_757Cb
00034FFC <AmiBlitz3.ab2@10627>   MOVE.l $4(A2),D0
00035000 <AmiBlitz3.ab2@10628>    LEA $0(a1,d0.l),a0
00035002 <AmiBlitz3.ab2@10629>    MOVE.l (a0),d1
00035004 <AmiBlitz3.ab2@10630>   TST.l d1
00035008 <AmiBlitz3.ab2@10631>    BMI.w 'lm1
00035010 <AmiBlitz3.ab2@10632>   MOVE.b #0,newhunk
0003501A <AmiBlitz3.ab2@10633>   CMP.l #-1,chipstart
0003501E <AmiBlitz3.ab2@10634>   BEQ 'l10
00035024 <AmiBlitz3.ab2@10635>   CMP.l chipstart,d1
00035028 <AmiBlitz3.ab2@10636>   BLT 'l10
00035030 <AmiBlitz3.ab2@10637>   MOVE.b #1,newhunk
00035036 <AmiBlitz3.ab2@10638>   CMP.l chipend,d1
0003503A <AmiBlitz3.ab2@10639>   BGE 'l110
0003503C <AmiBlitz3.ab2@10640>   ADD.l d7,(a0)
00035044 <AmiBlitz3.ab2@10641>   ADD.l #$80000000,4(a2)
00035048 <AmiBlitz3.ab2@10642> BRA JL_0_7576b
0003504C <AmiBlitz3.ab2@10645>   ADD.l d5,0(a0)
00035056 <AmiBlitz3.ab2@10648>   CMP.l #-1,bssstart
0003505A <AmiBlitz3.ab2@10649>     BEQ 'l11
00035060 <AmiBlitz3.ab2@10650>   CMP.l bssstart,d1
00035064 <AmiBlitz3.ab2@10651>   BLT 'l11
0003506A <AmiBlitz3.ab2@10652>   CMP.l bssend,d1
0003506E <AmiBlitz3.ab2@10653>   BGE 'l111
00035074 <AmiBlitz3.ab2@10654>   TST.b newhunk
00035078 <AmiBlitz3.ab2@10655>   BEQ 'ln1
0003507A <AmiBlitz3.ab2@10656>   ADD.l d5,(a0)
0003507C <AmiBlitz3.ab2@10659>   ADD.l d6,(a0)
00035084 <AmiBlitz3.ab2@10660>   ADD.l #$40000000,4(a2)
00035088 <AmiBlitz3.ab2@10661> BRA JL_0_7576b
0003508C <AmiBlitz3.ab2@10664>   ADD.l d3,0(a0)
0003508E <AmiBlitz3.ab2@10667>   ADD.l D2,(A0)                                            ;only normal code offsets restore
00035094 <AmiBlitz3.ab2@10670>   ADDQ.l #1,hunkoffsetnum
00035096 <AmiBlitz3.ab2@10673>   MOVEA.l (A2),A2
0003509A <AmiBlitz3.ab2@10674> BRA.w JL_0_755Eb
000350A0 <AmiBlitz3.ab2@10677>   JSR call_setpointernormal
000350A4 <AmiBlitz3.ab2@10678>   MOVEM.l (a7)+,d2-d7/a2-a6
000350A6 <AmiBlitz3.ab2@10680> RTS
000350A8 <AmiBlitz3.ab2@10684>   MOVE.l D2,-(A7)
000350AE <AmiBlitz3.ab2@10685>   MOVE.l destpointer,D2
000350B4 <AmiBlitz3.ab2@10686>   SUB.l destbufferstart,D2
000350B8 <AmiBlitz3.ab2@10687>   BSR.w addhunkoffset
000350BA <AmiBlitz3.ab2@10688>   MOVE.l (A7)+,D2
000350BC <AmiBlitz3.ab2@10689> RTS
000350C0 <AmiBlitz3.ab2@10693>   MOVEM.l D0-D1/A0-A1/A6,-(A7)
000350C6 <AmiBlitz3.ab2@10694>   TST.b nohunkoffset
000350CA <AmiBlitz3.ab2@10695>   BNE 'l10
000350CC <AmiBlitz3.ab2@10696>   MOVEQ.l #$8,D0
000350CE <AmiBlitz3.ab2@10697>   MOVEQ.l #$01,D1
000350D4 <AmiBlitz3.ab2@10698>   MOVEA.l _execbase,A6
000350DA <AmiBlitz3.ab2@10699>   MOVE.l mempool2,a0
000350DE <AmiBlitz3.ab2@10700>   JSR _AllocPooled(a6)
000350E4 <AmiBlitz3.ab2@10702>   ADDQ.l #1,hunkoffsetcounter
000350E6 <AmiBlitz3.ab2@10703>   MOVEA.l D0,A0
000350EC <AmiBlitz3.ab2@10704>   MOVE.l hunkoffsetbase,(A0)
000350F2 <AmiBlitz3.ab2@10705>   MOVE.l A0,hunkoffsetbase
000350F6 <AmiBlitz3.ab2@10706>   MOVE.l D2,$4(A0)
000350FA <AmiBlitz3.ab2@10709>   MOVEM.l (A7)+,D0-D1/A0-A1/A6
000350FC <AmiBlitz3.ab2@10710> RTS
00035102 <AmiBlitz3.ab2@10714>   CLR.l hunkoffsetbase
00035108 <AmiBlitz3.ab2@10715>   MOVEA.l _execbase,A6
0003510E <AmiBlitz3.ab2@10716>   MOVEA.l hunkoffsetbase,A2
00035112 <AmiBlitz3.ab2@10719>     CMPA.w #$0,A2
00035116 <AmiBlitz3.ab2@10720>      BEQ.w JL_0_7988
00035118 <AmiBlitz3.ab2@10721>     MOVEA.l A2,A1
0003511A <AmiBlitz3.ab2@10722>     MOVEQ.l #$08,D0
0003511C <AmiBlitz3.ab2@10723>     MOVEA.l (A2),A2
00035122 <AmiBlitz3.ab2@10724>     MOVE.l mempool2,a0
00035126 <AmiBlitz3.ab2@10725>     JSR _FreePooled(A6)
0003512A <AmiBlitz3.ab2@10726> BRA.w JL_0_7972
00035130 <AmiBlitz3.ab2@10729>   CLR.l hunkoffsetcounter
00035132 <AmiBlitz3.ab2@10730> RTS
0003514A <AmiBlitz3.ab2@10733> cmakebuff:  Ds.l 6                                          ;dc.w 12 org source
0003514E <AmiBlitz3.ab2@10734> cmakea5:    Ds.l 1
00035150 <AmiBlitz3.ab2@10735> cmake:      Ds.w 1
000351D0 <AmiBlitz3.ab2@10736> cmakebak:   Ds.l 32                                         ;ds.b 128 org source
000351D6 <AmiBlitz3.ab2@10740>   MOVE.l A5,lastsourcepos
000351E0 <AmiBlitz3.ab2@10741>   MOVE.w instringon,oldqflag
000351E2 <AmiBlitz3.ab2@10745>   MOVEQ.l #$00,D0
000351E4 <AmiBlitz3.ab2@10746>   MOVE.b (A5)+,D0
000351E8 <AmiBlitz3.ab2@10747>    BEQ getcharb__donea
000351EC <AmiBlitz3.ab2@10748>   BPL getcharb__stuffa
000351EE <AmiBlitz3.ab2@10749>   LSL.l #8,D0
000351F0 <AmiBlitz3.ab2@10750>   MOVE.b (A5)+,D0
000351F2 <AmiBlitz3.ab2@10751>   MOVE.l a1,-(a7)
000351F8 <AmiBlitz3.ab2@10752>   LEA replacedat,a1
000351FC <AmiBlitz3.ab2@10753>   Dc.w $4a71,$0a00                                         ;TST.w 0(a1,d0.l*2)
00035200 <AmiBlitz3.ab2@10754>   BEQ getchar__l10
00035204 <AmiBlitz3.ab2@10755>   Dc.w $3031,$0a00                                         ;MOVE.w 0(a1,d0.l*2),d0
0003520A <AmiBlitz3.ab2@10758>   MOVE.l d0,lasttoken
0003520C <AmiBlitz3.ab2@10759>   MOVE.l (a7)+,a1
00035210 <AmiBlitz3.ab2@10760> BRA getchar__weiter
00035214 <AmiBlitz3.ab2@10763>   CMP.w #$22,D0
00035218 <AmiBlitz3.ab2@10764>    BEQ.b swapquotea
0003521C <AmiBlitz3.ab2@10765>   CMP.w #$3B,D0
00035220 <AmiBlitz3.ab2@10766>    BNE.b getcharb__donea
00035226 <AmiBlitz3.ab2@10767>   TST.w instringon
0003522A <AmiBlitz3.ab2@10768>    BNE.b getcharb__donea
0003522C <AmiBlitz3.ab2@10771>   MOVE.b (A5)+,D0
00035230 <AmiBlitz3.ab2@10772>              BEQ getchar__l1
00035234 <AmiBlitz3.ab2@10773>              CMP.b #":",d0
00035238 <AmiBlitz3.ab2@10774>              BNE getcharb__loopa                                ;:@
0003523C <AmiBlitz3.ab2@10775>              CMP.b #"@",(a5)
00035240 <AmiBlitz3.ab2@10776>              BNE getcharb__loopa
00035242 <AmiBlitz3.ab2@10777>              ADDQ #1,a5
00035248 <AmiBlitz3.ab2@10780>   MOVE.w D0,lastchar
0003524C <AmiBlitz3.ab2@10783> BRA.s getchar__weiter
00035252 <AmiBlitz3.ab2@10786>   NOT.w instringon
00035258 <AmiBlitz3.ab2@10789>    MOVE.w D0,lastchar
0003525C <AmiBlitz3.ab2@10790>    BEQ.w getchar__done
00035260 <AmiBlitz3.ab2@10791>    BPL.w getchar__done2
00035264 <AmiBlitz3.ab2@10792>   CMP.w #-$7FE4,D0                                         ;cnif
00035268 <AmiBlitz3.ab2@10793>    BEQ.w getchar__cnif
0003526C <AmiBlitz3.ab2@10794>   CMP.w #-$7FE3,D0                                         ;csif
00035270 <AmiBlitz3.ab2@10795>    BEQ.w getchar__csif
00035274 <AmiBlitz3.ab2@10796>   CMP.w #-$7FE2,D0                                         ;celse
00035278 <AmiBlitz3.ab2@10797>    BEQ.w getchar__celse
0003527C <AmiBlitz3.ab2@10798>   CMP.w #-$7FE1,D0                                         ;cend
00035280 <AmiBlitz3.ab2@10799>    BEQ.w getchar__cend
00035286 <AmiBlitz3.ab2@10802>   TST.w skipcode
0003528A <AmiBlitz3.ab2@10803>    BEQ.w getchar
0003528E <AmiBlitz3.ab2@10804>   CMP.w #$7E,D0
00035292 <AmiBlitz3.ab2@10805>    BEQ.w getchar__cmake                                         ;tilde
00035296 <AmiBlitz3.ab2@10806>   CMP.w #$2,D0
0003529A <AmiBlitz3.ab2@10807>    BNE.w getchar__notunpath
000352A0 <AmiBlitz3.ab2@10808>   MOVEA.l usedfrom,A5
000352A6 <AmiBlitz3.ab2@10809>   CLR.l usedfrom
000352AA <AmiBlitz3.ab2@10810> BRA.w getchar
000352AE <AmiBlitz3.ab2@10813>   CMP.w #$1,D0
000352B2 <AmiBlitz3.ab2@10814>    BNE.w getchar__done
000352B6 <AmiBlitz3.ab2@10818>   MOVEA.l cmakea5(PC),A5
000352BA <AmiBlitz3.ab2@10819> BRA.w getchar
000352C0 <AmiBlitz3.ab2@10822>   TST.w cmake
000352C4 <AmiBlitz3.ab2@10823>    BNE.w getchar__done
000352C8 <AmiBlitz3.ab2@10825>   MOVEM.l D0-D7/A0-A6,-(A7)
000352CE <AmiBlitz3.ab2@10826>   LEA cmake,a0                                         ;reass
000352D0 <AmiBlitz3.ab2@10827>   NOT.w (a0)
000352D4 <AmiBlitz3.ab2@10828>   LEA cmakebak(PC),A0
000352DA <AmiBlitz3.ab2@10829>   LEA ptr_parameterstore,A1
000352DC <AmiBlitz3.ab2@10830>   MOVEQ.l #$1F,D0
000352DE <AmiBlitz3.ab2@10833>     MOVE.l (A1)+,(A0)+
000352E2 <AmiBlitz3.ab2@10834>   DBF D0,getchar__cmloop
000352E8 <AmiBlitz3.ab2@10837>    JSR AJL_0_BF6E
000352EC <AmiBlitz3.ab2@10838>   CMP.w #$7E,D0
000352F0 <AmiBlitz3.ab2@10839>    BNE.w syntaxerr
000352F6 <AmiBlitz3.ab2@10840>   MOVE.l A5,cmakea5                                      ;tilde
000352FA <AmiBlitz3.ab2@10841>   LEA cmakebuff(PC),A0
000352FC <AmiBlitz3.ab2@10842>   MOVE.l D3,D2
00035300 <AmiBlitz3.ab2@10843>   BSR.w makelong
00035302 <AmiBlitz3.ab2@10844>   ADDQ.b #1,(A0)
00035308 <AmiBlitz3.ab2@10845>   LEA cmake,a0
0003530A <AmiBlitz3.ab2@10846>   NOT.w (a0)                                               ;reass
0003530E <AmiBlitz3.ab2@10847>   LEA cmakebak(PC),A0
00035314 <AmiBlitz3.ab2@10848>   LEA ptr_parameterstore,A1
00035316 <AmiBlitz3.ab2@10849>   MOVEQ.l #$1F,D0
00035318 <AmiBlitz3.ab2@10852>     MOVE.l (A0)+,(A1)+
0003531C <AmiBlitz3.ab2@10853>   DBF D0,getchar__cmloop2
00035320 <AmiBlitz3.ab2@10855>   MOVEM.l (A7)+,D0-D7/A0-A6
00035324 <AmiBlitz3.ab2@10856>   LEA cmakebuff(PC),A5
00035328 <AmiBlitz3.ab2@10857> BRA.w getchar
0003532A <AmiBlitz3.ab2@10860> RTS
00035334 <AmiBlitz3.ab2@10864>   MOVE.l linenumat,ciflineat                               ;csif
0003533A <AmiBlitz3.ab2@10865>   TST.w skipcode
0003533E <AmiBlitz3.ab2@10866>    BEQ.w getchar__incnest
00035342 <AmiBlitz3.ab2@10867>    BSR.w get1bytemain
00035344 <AmiBlitz3.ab2@10868>    MOVE.l a1,-(a7)
0003534A <AmiBlitz3.ab2@10869>    JSR JL_0_C492
0003534C <AmiBlitz3.ab2@10870>    MOVE.l (a7)+,a1
00035350 <AmiBlitz3.ab2@10871> BRA.w getchar
0003535A <AmiBlitz3.ab2@10874>   MOVE.l linenumat,ciflineat                               ;cnif
00035360 <AmiBlitz3.ab2@10875>   TST.w skipcode
00035364 <AmiBlitz3.ab2@10876>    BEQ.w getchar__incnest
00035368 <AmiBlitz3.ab2@10877>    BSR.w get1bytemain
0003536C <AmiBlitz3.ab2@10878>    CMP.b #"@",d0
00035370 <AmiBlitz3.ab2@10879>    BNE getchar__cnif_ok2
00035374 <AmiBlitz3.ab2@10880>    BSR.w get1bytemain
0003537C <AmiBlitz3.ab2@10881>    MOVE.b #1,incnif
00035382 <AmiBlitz3.ab2@10882>    JSR findconstant2
00035386 <AmiBlitz3.ab2@10883>    BEQ getchar__cnif_ok2
0003538C <AmiBlitz3.ab2@10886>    MOVE.w fast,-(a7)
00035392 <AmiBlitz3.ab2@10887>    CLR.b fast
00035394 <AmiBlitz3.ab2@10888>    MOVE.l a1,-(a7)
0003539A <AmiBlitz3.ab2@10889>    JSR JL_0_C47E
000353A0 <AmiBlitz3.ab2@10890>    CLR.b incnif
000353A2 <AmiBlitz3.ab2@10891>    MOVE.l (a7)+,a1
000353A8 <AmiBlitz3.ab2@10892>    MOVE.w (a7)+,fast
000353AC <AmiBlitz3.ab2@10893> BRA.w getchar
000353B2 <AmiBlitz3.ab2@10896>   ADDQ.w #1,connest
000353B6 <AmiBlitz3.ab2@10897> BRA.w getchar
000353BC <AmiBlitz3.ab2@10900>   MOVE.w connest,D0                                      ;celse
000353C0 <AmiBlitz3.ab2@10901>    BNE.w getchar
000353C6 <AmiBlitz3.ab2@10902>   NOT.w skipcode
000353CA <AmiBlitz3.ab2@10903> BRA.w getchar
000353D0 <AmiBlitz3.ab2@10906>   SUBQ.w #1,connest                                      ;cend
000353D4 <AmiBlitz3.ab2@10907>    BPL.w getchar
000353DA <AmiBlitz3.ab2@10908>   ADDQ.w #1,connest
000353E0 <AmiBlitz3.ab2@10909>   MOVEA.l concomsp,A0
000353E6 <AmiBlitz3.ab2@10910>   CMPA.l #concomstack,A0
000353EA <AmiBlitz3.ab2@10911>    BEQ.w nociferr
000353EC <AmiBlitz3.ab2@10912>   SUBQ.w #2,A0
000353F2 <AmiBlitz3.ab2@10913>   MOVE.l A0,concomsp
000353F8 <AmiBlitz3.ab2@10914>   MOVE.w (A0),skipcode
000353FC <AmiBlitz3.ab2@10915> BRA.w getchar
00035400 <AmiBlitz3.ab2@10918> ciflineat:   Ds.l 1
00035402 <AmiBlitz3.ab2@10926>   MOVEQ.l #$00,D0
00035404 <AmiBlitz3.ab2@10927>   MOVE.b (A5)+,D0
00035408 <AmiBlitz3.ab2@10928>    BEQ.b getcharb__done
0003540C <AmiBlitz3.ab2@10929>    BPL.b getcharb__stuff
0003540E <AmiBlitz3.ab2@10930>   LSL.w #8,D0
00035410 <AmiBlitz3.ab2@10931>   MOVE.b (A5)+,D0
00035412 <AmiBlitz3.ab2@10932> RTS
00035416 <AmiBlitz3.ab2@10935>   CMP.w #$22,D0
0003541A <AmiBlitz3.ab2@10936>    BEQ.b swapquote
0003541E <AmiBlitz3.ab2@10937>   CMP.w #$3B,D0
00035422 <AmiBlitz3.ab2@10938>    BNE.b getcharb__done
00035428 <AmiBlitz3.ab2@10939>   TST.w instringon
0003542C <AmiBlitz3.ab2@10940>    BNE.b getcharb__done
0003542E <AmiBlitz3.ab2@10943>   MOVE.b (A5)+,D0
00035432 <AmiBlitz3.ab2@10944>             BEQ getcharb__loop_l1
00035436 <AmiBlitz3.ab2@10945>             CMP.b #":",d0
0003543A <AmiBlitz3.ab2@10946>             BNE getcharb__loop
0003543E <AmiBlitz3.ab2@10947>             CMP.b #"@",(a5)
00035442 <AmiBlitz3.ab2@10948>             BNE getcharb__loop
00035448 <AmiBlitz3.ab2@10951>   MOVE.w D0,lastchar
0003544A <AmiBlitz3.ab2@10954> RTS
00035450 <AmiBlitz3.ab2@10957>   NOT.w instringon
00035452 <AmiBlitz3.ab2@10958> RTS
00035456 <AmiBlitz3.ab2@10962>   BSR.w getchar
0003545C <AmiBlitz3.ab2@10963>   TST.w instringon
00035460 <AmiBlitz3.ab2@10964>    BNE.w get1byte__skip
00035464 <AmiBlitz3.ab2@10965>   CMP.w #$20,D0
00035468 <AmiBlitz3.ab2@10966>    BEQ.w get1byte_
0003546A <AmiBlitz3.ab2@10969> RTS
00035484 <AmiBlitz3.ab2@10972> gs:        Ds.w 13                                         ;ds.b 26  org source
00035488 <AmiBlitz3.ab2@10973>            Dc.b $F6,$E4,$FC,$D6                            ;dc.b 228,246,252,196,214,220 org source
0003548A <AmiBlitz3.ab2@10974>            Dc.b $C4,$DC
0003548E <AmiBlitz3.ab2@10980>   BSR.w getchar
00035494 <AmiBlitz3.ab2@10981>   TST.w instringon
00035498 <AmiBlitz3.ab2@10982>    BNE.w gchar2
0003549C <AmiBlitz3.ab2@10983>   CMP.w #$20,D0
000354A0 <AmiBlitz3.ab2@10984>    BEQ.w get1bytemain
000354A2 <AmiBlitz3.ab2@10986>   TST.w D0
000354A6 <AmiBlitz3.ab2@10989>   BEQ.b get1bytemain__zero
000354AC <AmiBlitz3.ab2@10990>   TST.w instringon
000354B0 <AmiBlitz3.ab2@10991>    BEQ.b get1bytemain__noqoute
000354B4 <AmiBlitz3.ab2@10992>   CMP.b #$20,D0
000354B8 <AmiBlitz3.ab2@10993>    BCC.b get1bytemain__skip
000354BC <AmiBlitz3.ab2@10994>   MOVE.b gs(PC,D0.W),D0
000354BE <AmiBlitz3.ab2@10995> RTS
000354C2 <AmiBlitz3.ab2@10998>   CMP.w #-$7FDE,D0                                         ;cmp #$8000+34,d0 org source  ;else
000354C6 <AmiBlitz3.ab2@10999>    BEQ.b get1bytemain__zero
000354CA <AmiBlitz3.ab2@11000>   CMP.w #$3A,D0
000354CE <AmiBlitz3.ab2@11001>    BEQ.b get1bytemain__zero
000354D0 <AmiBlitz3.ab2@11004>   TST.w D0
000354D2 <AmiBlitz3.ab2@11007> RTS
000354D8 <AmiBlitz3.ab2@11011>   MOVE.w lastchar,D0
000354DC <AmiBlitz3.ab2@11012> BRA.w gchar2
000354E6 <AmiBlitz3.ab2@11016>   MOVE.w oldqflag,instringon
000354EC <AmiBlitz3.ab2@11017>   MOVEA.l lastsourcepos,A5
000354EE <AmiBlitz3.ab2@11018> RTS
000354F4 <AmiBlitz3.ab2@11022>   MOVE.w D0,locchar
000354FA <AmiBlitz3.ab2@11023>   MOVE.l A5,locloc
000354FC <AmiBlitz3.ab2@11024> RTS
00035502 <AmiBlitz3.ab2@11028>   MOVEA.l locloc,A5
00035508 <AmiBlitz3.ab2@11029>   MOVE.w locchar,D0
0003550E <AmiBlitz3.ab2@11030>   MOVE.w D0,lastchar
00035510 <AmiBlitz3.ab2@11031> RTS
00035510 <internal_errormsg.ab2@1> XINCLUDE "internal_errormsg.ab2"
00035558 <internal_errormsg.ab2@9> XINCLUDE "internal_errormsg.ab2"
000355AA <internal_errormsg.ab2@10> XINCLUDE "internal_errormsg.ab2"
000355E8 <internal_errormsg.ab2@11> XINCLUDE "internal_errormsg.ab2"
00035626 <internal_errormsg.ab2@12> XINCLUDE "internal_errormsg.ab2"
00035650 <internal_errormsg.ab2@13> XINCLUDE "internal_errormsg.ab2"
00035680 <internal_errormsg.ab2@14> XINCLUDE "internal_errormsg.ab2"
000356CA <internal_errormsg.ab2@15> XINCLUDE "internal_errormsg.ab2"
00035750 <internal_errormsg.ab2@16> XINCLUDE "internal_errormsg.ab2"
000357B2 <internal_errormsg.ab2@17> XINCLUDE "internal_errormsg.ab2"
000357FA <internal_errormsg.ab2@18> XINCLUDE "internal_errormsg.ab2"
0003584C <internal_errormsg.ab2@19> XINCLUDE "internal_errormsg.ab2"
00035896 <internal_errormsg.ab2@20> XINCLUDE "internal_errormsg.ab2"
000358E4 <internal_errormsg.ab2@21> XINCLUDE "internal_errormsg.ab2"
0003591A <internal_errormsg.ab2@22> XINCLUDE "internal_errormsg.ab2"
00035948 <internal_errormsg.ab2@23> XINCLUDE "internal_errormsg.ab2"
00035962 <internal_errormsg.ab2@24> XINCLUDE "internal_errormsg.ab2"
00035980 <internal_errormsg.ab2@25> XINCLUDE "internal_errormsg.ab2"
000359FE <internal_errormsg.ab2@26> XINCLUDE "internal_errormsg.ab2"
00035A28 <internal_errormsg.ab2@27> XINCLUDE "internal_errormsg.ab2"
00035A4E <internal_errormsg.ab2@28> XINCLUDE "internal_errormsg.ab2"
00035A6E <internal_errormsg.ab2@29> XINCLUDE "internal_errormsg.ab2"
00035A8C <internal_errormsg.ab2@30> XINCLUDE "internal_errormsg.ab2"
00035AAC <internal_errormsg.ab2@31> XINCLUDE "internal_errormsg.ab2"
00035AD4 <internal_errormsg.ab2@32> XINCLUDE "internal_errormsg.ab2"
00035AFE <internal_errormsg.ab2@33> XINCLUDE "internal_errormsg.ab2"
00035B00 <internal_errormsg.ab2@36> XINCLUDE "internal_errormsg.ab2"
00035B1C <internal_errormsg.ab2@39> XINCLUDE "internal_errormsg.ab2"
00035B42 <internal_errormsg.ab2@40> XINCLUDE "internal_errormsg.ab2"
00035B5A <internal_errormsg.ab2@41> XINCLUDE "internal_errormsg.ab2"
00035BB8 <internal_errormsg.ab2@42> XINCLUDE "internal_errormsg.ab2"
00035BDA <internal_errormsg.ab2@43> XINCLUDE "internal_errormsg.ab2"
00035C00 <internal_errormsg.ab2@44> XINCLUDE "internal_errormsg.ab2"
00035C28 <internal_errormsg.ab2@45> XINCLUDE "internal_errormsg.ab2"
00035C48 <internal_errormsg.ab2@46> XINCLUDE "internal_errormsg.ab2"
00035C6C <internal_errormsg.ab2@47> XINCLUDE "internal_errormsg.ab2"
00035CB2 <internal_errormsg.ab2@48> XINCLUDE "internal_errormsg.ab2"
00035CD6 <internal_errormsg.ab2@49> XINCLUDE "internal_errormsg.ab2"
00035CFA <internal_errormsg.ab2@50> XINCLUDE "internal_errormsg.ab2"
00035D1A <internal_errormsg.ab2@51> XINCLUDE "internal_errormsg.ab2"
00035D3E <internal_errormsg.ab2@52> XINCLUDE "internal_errormsg.ab2"
00035D60 <internal_errormsg.ab2@53> XINCLUDE "internal_errormsg.ab2"
00035D8C <internal_errormsg.ab2@54> XINCLUDE "internal_errormsg.ab2"
00035DB2 <internal_errormsg.ab2@55> XINCLUDE "internal_errormsg.ab2"
00035DBC <internal_errormsg.ab2@58> XINCLUDE "internal_errormsg.ab2"
00035DE2 <internal_errormsg.ab2@59> XINCLUDE "internal_errormsg.ab2"
00035E34 <internal_errormsg.ab2@61> XINCLUDE "internal_errormsg.ab2"
00035E9E <internal_errormsg.ab2@62> XINCLUDE "internal_errormsg.ab2"
00035EFC <internal_errormsg.ab2@63> XINCLUDE "internal_errormsg.ab2"
00035F6A <internal_errormsg.ab2@64> XINCLUDE "internal_errormsg.ab2"
00035FA6 <internal_errormsg.ab2@65> XINCLUDE "internal_errormsg.ab2"
00035FC4 <internal_errormsg.ab2@66> XINCLUDE "internal_errormsg.ab2"
00035FEA <internal_errormsg.ab2@67> XINCLUDE "internal_errormsg.ab2"
0003601A <internal_errormsg.ab2@68> XINCLUDE "internal_errormsg.ab2"
0003603E <internal_errormsg.ab2@69> XINCLUDE "internal_errormsg.ab2"
0003606C <internal_errormsg.ab2@70> XINCLUDE "internal_errormsg.ab2"
00036090 <internal_errormsg.ab2@71> XINCLUDE "internal_errormsg.ab2"
000360A6 <internal_errormsg.ab2@72> XINCLUDE "internal_errormsg.ab2"
000360BC <internal_errormsg.ab2@73> XINCLUDE "internal_errormsg.ab2"
000360C2 <internal_errormsg.ab2@76> XINCLUDE "internal_errormsg.ab2"
000360CA <internal_errormsg.ab2@78> XINCLUDE "internal_errormsg.ab2"
000360CC <internal_errormsg.ab2@79> XINCLUDE "internal_errormsg.ab2"
000360D0 <internal_errormsg.ab2@80> XINCLUDE "internal_errormsg.ab2"
000360D8 <internal_errormsg.ab2@81> XINCLUDE "internal_errormsg.ab2"
000360DA <internal_errormsg.ab2@82> XINCLUDE "internal_errormsg.ab2"
00036114 <internal_errormsg.ab2@84> XINCLUDE "internal_errormsg.ab2"
00036140 <internal_errormsg.ab2@85> XINCLUDE "internal_errormsg.ab2"
00036170 <internal_errormsg.ab2@86> XINCLUDE "internal_errormsg.ab2"
000361A8 <internal_errormsg.ab2@87> XINCLUDE "internal_errormsg.ab2"
00036202 <internal_errormsg.ab2@88> XINCLUDE "internal_errormsg.ab2"
00036204 <internal_errormsg.ab2@92> XINCLUDE "internal_errormsg.ab2"
00036208 <internal_errormsg.ab2@93> XINCLUDE "internal_errormsg.ab2"
0003620C <internal_errormsg.ab2@94> XINCLUDE "internal_errormsg.ab2"
00036210 <internal_errormsg.ab2@95> XINCLUDE "internal_errormsg.ab2"
00036214 <internal_errormsg.ab2@96> XINCLUDE "internal_errormsg.ab2"
00036218 <internal_errormsg.ab2@97> XINCLUDE "internal_errormsg.ab2"
0003621C <internal_errormsg.ab2@98> XINCLUDE "internal_errormsg.ab2"
00036220 <internal_errormsg.ab2@99> XINCLUDE "internal_errormsg.ab2"
00036224 <internal_errormsg.ab2@100> XINCLUDE "internal_errormsg.ab2"
00036228 <internal_errormsg.ab2@101> XINCLUDE "internal_errormsg.ab2"
0003622C <internal_errormsg.ab2@102> XINCLUDE "internal_errormsg.ab2"
0003626A <internal_errormsg.ab2@103> XINCLUDE "internal_errormsg.ab2"
0003629C <internal_errormsg.ab2@105> XINCLUDE "internal_errormsg.ab2"
000362BA <internal_errormsg.ab2@106> XINCLUDE "internal_errormsg.ab2"
000362E4 <internal_errormsg.ab2@107> XINCLUDE "internal_errormsg.ab2"
00036300 <internal_errormsg.ab2@108> XINCLUDE "internal_errormsg.ab2"
0003631A <internal_errormsg.ab2@109> XINCLUDE "internal_errormsg.ab2"
00036338 <internal_errormsg.ab2@110> XINCLUDE "internal_errormsg.ab2"
0003635C <internal_errormsg.ab2@111> XINCLUDE "internal_errormsg.ab2"
0003635E <internal_errormsg.ab2@114> XINCLUDE "internal_errormsg.ab2"
000363B0 <internal_errormsg.ab2@115> XINCLUDE "internal_errormsg.ab2"
000363D8 <internal_errormsg.ab2@117> XINCLUDE "internal_errormsg.ab2"
00036400 <internal_errormsg.ab2@118> XINCLUDE "internal_errormsg.ab2"
0003641C <internal_errormsg.ab2@122> XINCLUDE "internal_errormsg.ab2"
0003643C <internal_errormsg.ab2@123> XINCLUDE "internal_errormsg.ab2"
00036454 <internal_errormsg.ab2@124> XINCLUDE "internal_errormsg.ab2"
00036498 <internal_errormsg.ab2@125> XINCLUDE "internal_errormsg.ab2"
000364E0 <internal_errormsg.ab2@126> XINCLUDE "internal_errormsg.ab2"
0003650A <internal_errormsg.ab2@127> XINCLUDE "internal_errormsg.ab2"
00036534 <internal_errormsg.ab2@128> XINCLUDE "internal_errormsg.ab2"
0003654E <internal_errormsg.ab2@132> XINCLUDE "internal_errormsg.ab2"
00036578 <internal_errormsg.ab2@133> XINCLUDE "internal_errormsg.ab2"
000365CC <internal_errormsg.ab2@134> XINCLUDE "internal_errormsg.ab2"
00036618 <internal_errormsg.ab2@135> XINCLUDE "internal_errormsg.ab2"
00036650 <internal_errormsg.ab2@136> XINCLUDE "internal_errormsg.ab2"
00036656 <internal_errormsg.ab2@139> XINCLUDE "internal_errormsg.ab2"
00036664 <internal_errormsg.ab2@141> XINCLUDE "internal_errormsg.ab2"
00036694 <internal_errormsg.ab2@144> XINCLUDE "internal_errormsg.ab2"
000366C8 <internal_errormsg.ab2@145> XINCLUDE "internal_errormsg.ab2"
0003672E <internal_errormsg.ab2@146> XINCLUDE "internal_errormsg.ab2"
0003674C <internal_errormsg.ab2@147> XINCLUDE "internal_errormsg.ab2"
000367C6 <internal_errormsg.ab2@148> XINCLUDE "internal_errormsg.ab2"
000367EE <internal_errormsg.ab2@149> XINCLUDE "internal_errormsg.ab2"
00036804 <internal_errormsg.ab2@150> XINCLUDE "internal_errormsg.ab2"
00036818 <internal_errormsg.ab2@151> XINCLUDE "internal_errormsg.ab2"
0003681A <internal_errormsg.ab2@154> XINCLUDE "internal_errormsg.ab2"
0003681B <internal_errormsg.ab2@155> XINCLUDE "internal_errormsg.ab2"
0003681C <internal_errormsg.ab2@156> XINCLUDE "internal_errormsg.ab2"
0003683C <internal_errormsg.ab2@158> XINCLUDE "internal_errormsg.ab2"
00036842 <internal_errormsg.ab2@161> XINCLUDE "internal_errormsg.ab2"
00036854 <internal_errormsg.ab2@163> XINCLUDE "internal_errormsg.ab2"
00036888 <internal_errormsg.ab2@166> XINCLUDE "internal_errormsg.ab2"
000368A0 <internal_errormsg.ab2@167> XINCLUDE "internal_errormsg.ab2"
000368BC <internal_errormsg.ab2@168> XINCLUDE "internal_errormsg.ab2"
000368D4 <internal_errormsg.ab2@169> XINCLUDE "internal_errormsg.ab2"
000368F4 <internal_errormsg.ab2@170> XINCLUDE "internal_errormsg.ab2"
00036914 <internal_errormsg.ab2@171> XINCLUDE "internal_errormsg.ab2"
0003693A <internal_errormsg.ab2@172> XINCLUDE "internal_errormsg.ab2"
00036950 <internal_errormsg.ab2@173> XINCLUDE "internal_errormsg.ab2"
0003696C <internal_errormsg.ab2@174> XINCLUDE "internal_errormsg.ab2"
00036996 <internal_errormsg.ab2@175> XINCLUDE "internal_errormsg.ab2"
000369AE <internal_errormsg.ab2@176> XINCLUDE "internal_errormsg.ab2"
000369CA <internal_errormsg.ab2@177> XINCLUDE "internal_errormsg.ab2"
000369EA <internal_errormsg.ab2@178> XINCLUDE "internal_errormsg.ab2"
00036A02 <internal_errormsg.ab2@179> XINCLUDE "internal_errormsg.ab2"
00036A06 <internal_errormsg.ab2@182> XINCLUDE "internal_errormsg.ab2"
00036A0C <internal_errormsg.ab2@183> XINCLUDE "internal_errormsg.ab2"
00036A12 <internal_errormsg.ab2@184> XINCLUDE "internal_errormsg.ab2"
00036A27 <internal_errormsg.ab2@185> XINCLUDE "internal_errormsg.ab2"
00036A2D <internal_errormsg.ab2@187> XINCLUDE "internal_errormsg.ab2"
00036A2E <internal_errormsg.ab2@188> XINCLUDE "internal_errormsg.ab2"
00036A32 <internal_errormsg.ab2@191> XINCLUDE "internal_errormsg.ab2"
00036A38 <internal_errormsg.ab2@192> XINCLUDE "internal_errormsg.ab2"
00036A3E <internal_errormsg.ab2@193> XINCLUDE "internal_errormsg.ab2"
00036A51 <internal_errormsg.ab2@194> XINCLUDE "internal_errormsg.ab2"
00036A57 <internal_errormsg.ab2@196> XINCLUDE "internal_errormsg.ab2"
00036A58 <internal_errormsg.ab2@197> XINCLUDE "internal_errormsg.ab2"
00036A76 <internal_errormsg.ab2@199> XINCLUDE "internal_errormsg.ab2"
00036A8E <internal_errormsg.ab2@200> XINCLUDE "internal_errormsg.ab2"
00036AAA <internal_errormsg.ab2@201> XINCLUDE "internal_errormsg.ab2"
00036AD4 <internal_errormsg.ab2@202> XINCLUDE "internal_errormsg.ab2"
00036AEE <internal_errormsg.ab2@203> XINCLUDE "internal_errormsg.ab2"
00036B0E <internal_errormsg.ab2@204> XINCLUDE "internal_errormsg.ab2"
00036B2C <internal_errormsg.ab2@205> XINCLUDE "internal_errormsg.ab2"
00036B5A <internal_errormsg.ab2@206> XINCLUDE "internal_errormsg.ab2"
00036B64 <internal_errormsg.ab2@209> XINCLUDE "internal_errormsg.ab2"
00036B96 <internal_errormsg.ab2@210> XINCLUDE "internal_errormsg.ab2"
00036BB4 <internal_errormsg.ab2@212> XINCLUDE "internal_errormsg.ab2"
00036BD2 <internal_errormsg.ab2@213> XINCLUDE "internal_errormsg.ab2"
00036BF2 <internal_errormsg.ab2@214> XINCLUDE "internal_errormsg.ab2"
00036C18 <internal_errormsg.ab2@215> XINCLUDE "internal_errormsg.ab2"
00036C3E <internal_errormsg.ab2@216> XINCLUDE "internal_errormsg.ab2"
00036C66 <internal_errormsg.ab2@217> XINCLUDE "internal_errormsg.ab2"
00036C84 <internal_errormsg.ab2@218> XINCLUDE "internal_errormsg.ab2"
00036CA4 <internal_errormsg.ab2@219> XINCLUDE "internal_errormsg.ab2"
00036CBE <internal_errormsg.ab2@220> XINCLUDE "internal_errormsg.ab2"
00036CE0 <internal_errormsg.ab2@221> XINCLUDE "internal_errormsg.ab2"
00036CFE <internal_errormsg.ab2@222> XINCLUDE "internal_errormsg.ab2"
00036D20 <internal_errormsg.ab2@223> XINCLUDE "internal_errormsg.ab2"
00036D44 <internal_errormsg.ab2@224> XINCLUDE "internal_errormsg.ab2"
00036D4A <internal_errormsg.ab2@227> XINCLUDE "internal_errormsg.ab2"
00036D66 <internal_errormsg.ab2@228> XINCLUDE "internal_errormsg.ab2"
00036D82 <internal_errormsg.ab2@230> XINCLUDE "internal_errormsg.ab2"
00036DA0 <internal_errormsg.ab2@231> XINCLUDE "internal_errormsg.ab2"
00036DBE <internal_errormsg.ab2@232> XINCLUDE "internal_errormsg.ab2"
00036E0C <internal_errormsg.ab2@233> XINCLUDE "internal_errormsg.ab2"
00036E2A <internal_errormsg.ab2@234> XINCLUDE "internal_errormsg.ab2"
00036E48 <internal_errormsg.ab2@235> XINCLUDE "internal_errormsg.ab2"
00036E62 <internal_errormsg.ab2@236> XINCLUDE "internal_errormsg.ab2"
00036EAE <internal_errormsg.ab2@237> XINCLUDE "internal_errormsg.ab2"
00036ED4 <internal_errormsg.ab2@238> XINCLUDE "internal_errormsg.ab2"
00036EF4 <internal_errormsg.ab2@239> XINCLUDE "internal_errormsg.ab2"
00036F16 <internal_errormsg.ab2@240> XINCLUDE "internal_errormsg.ab2"
00036F32 <internal_errormsg.ab2@241> XINCLUDE "internal_errormsg.ab2"
00036F58 <internal_errormsg.ab2@242> XINCLUDE "internal_errormsg.ab2"
00036F74 <internal_errormsg.ab2@243> XINCLUDE "internal_errormsg.ab2"
00036F92 <internal_errormsg.ab2@244> XINCLUDE "internal_errormsg.ab2"
00036FBA <internal_errormsg.ab2@245> XINCLUDE "internal_errormsg.ab2"
00036FD6 <internal_errormsg.ab2@246> XINCLUDE "internal_errormsg.ab2"
00036FE6 <internal_errormsg.ab2@247> XINCLUDE "internal_errormsg.ab2"
00037008 <internal_errormsg.ab2@248> XINCLUDE "internal_errormsg.ab2"
0003700C <internal_errormsg.ab2@251> XINCLUDE "internal_errormsg.ab2"
0003700E <internal_errormsg.ab2@254> XINCLUDE "internal_errormsg.ab2"
00037028 <internal_errormsg.ab2@255> XINCLUDE "internal_errormsg.ab2"
0003704C <internal_errormsg.ab2@257> XINCLUDE "internal_errormsg.ab2"
0003706C <internal_errormsg.ab2@258> XINCLUDE "internal_errormsg.ab2"
0003709E <internal_errormsg.ab2@259> XINCLUDE "internal_errormsg.ab2"
000370FC <internal_errormsg.ab2@260> XINCLUDE "internal_errormsg.ab2"
00037134 <internal_errormsg.ab2@261> XINCLUDE "internal_errormsg.ab2"
00037172 <internal_errormsg.ab2@262> XINCLUDE "internal_errormsg.ab2"
000371A8 <internal_errormsg.ab2@263> XINCLUDE "internal_errormsg.ab2"
000371A8 <AmiBlitz3.ab2@11035> XINCLUDE "internal_errormsg.ab2"
000371AA <AmiBlitz3.ab2@11039> ezerr:   Ds.w 1                                            ;for simple errors
000371B0 <AmiBlitz3.ab2@11045>    MOVE.l myline,d0
000371B4 <AmiBlitz3.ab2@11046>   BNE handle_compileerror__l2
000371BA <AmiBlitz3.ab2@11048>     MOVE.l a5,lastsourcepos
000371BC <AmiBlitz3.ab2@11050>     SUBA.l a5,a5
000371C2 <AmiBlitz3.ab2@11052>   TST.l usedfrom
000371C6 <AmiBlitz3.ab2@11053>   BEQ handle_compileerror__org
000371CC <AmiBlitz3.ab2@11054>     MOVEA.l usedfrom,a5
000371D2 <AmiBlitz3.ab2@11057>   TST.w dirmode
000371D6 <AmiBlitz3.ab2@11058>   BNE.b handle_compileerror__quiet
000371DC <AmiBlitz3.ab2@11059>     JSR call_setpointernormal
000371E0 <AmiBlitz3.ab2@11060>     MOVE.w ezerr(PC),D0
000371E4 <AmiBlitz3.ab2@11061>     BNE.w handle_compileerror__skip
000371EA <AmiBlitz3.ab2@11062>       MOVE.w cfetchmode,D0
000371EE <AmiBlitz3.ab2@11063>       BEQ.w handle_compileerror__skip2
000371F8 <AmiBlitz3.ab2@11064>         MOVE.l oldlibat,destbufferend                      ;fix up lib thing.
000371FE <AmiBlitz3.ab2@11067>   MOVE.w constmode,D0
00037202 <AmiBlitz3.ab2@11068>   BEQ.b handle_compileerror__skip3
00037206 <AmiBlitz3.ab2@11069>     BSR.w asmerr2
0003720C <AmiBlitz3.ab2@11072>   MOVE.l firstlocal,D1
00037212 <AmiBlitz3.ab2@11073>   OR.l firstglob,D1
00037216 <AmiBlitz3.ab2@11074>   BEQ.b handle_compileerror__notproc                       ;?!?!?!
0003721C <AmiBlitz3.ab2@11075>     JSR JL_0_DB5C
00037224 <AmiBlitz3.ab2@11078>   MOVE.w #$FFFF,anyerrs                                    ;#-1,anyerrs org source
0003722E <AmiBlitz3.ab2@11079>   CMP.l #"NORE",reqmode                                    ;for used functions
00037232 <AmiBlitz3.ab2@11080>   BEQ handle_compileerror__notproc_l1
0003723C <AmiBlitz3.ab2@11081>     MOVE.l linenumat,compilelinecounter
00037242 <AmiBlitz3.ab2@11084>   JSR close_compilewin
00037244 <AmiBlitz3.ab2@11087>   MOVEA.l (A7)+,A0
0003724E <AmiBlitz3.ab2@11088>   CMP.l #"NORE",reqmode                                    ;for used functions
00037252 <AmiBlitz3.ab2@11089>   BEQ handle_compileerror__skip_Lxx2
00037258 <AmiBlitz3.ab2@11090>   TST.l CLIMode
0003725C <AmiBlitz3.ab2@11091>   BNE 'climode_output
00037262 <AmiBlitz3.ab2@11093>     JSR save_errorfile
00037266 <AmiBlitz3.ab2@11094>     BRA 'end_output
0003726C <AmiBlitz3.ab2@11096>     JSR stdout_error
00037272 <AmiBlitz3.ab2@11098>     MOVE.l lastsourcepos,a5
00037276 <AmiBlitz3.ab2@11099> 'loop BSR.w get1bytemain                                  ; position to usefull source position to avoid following errors
0003727A <AmiBlitz3.ab2@11100>     BEQ 'ok
0003727E <AmiBlitz3.ab2@11101>     CMP.b #":",d0
00037282 <AmiBlitz3.ab2@11102>     BEQ 'ok
00037286 <AmiBlitz3.ab2@11103>     BRA 'loop
00037288 <AmiBlitz3.ab2@11104> 'ok SUBQ.l #1,a5
00037290 <AmiBlitz3.ab2@11105>     MOVE.w #0,lastchar
00037296 <AmiBlitz3.ab2@11107>     MOVE.l #compile_term,-(a7)
00037298 <AmiBlitz3.ab2@11108>     RTS
0003729A <AmiBlitz3.ab2@11114>   MOVE.l A0,-(a7)
000372D8 <AmiBlitz3.ab2@11115>   !ComData_GetL{comFunc_ErrorRequest,A1}
000372DA <AmiBlitz3.ab2@11116>   MOVE.l (a7)+,A0
000372DE <AmiBlitz3.ab2@11118>   MOVEM.l d6/D7/A6,-(A7)
000372E4 <AmiBlitz3.ab2@11119>   MOVE.l includeline,d7
000372EA <AmiBlitz3.ab2@11120>   MOVE.l #"INLN",a6
000372F4 <AmiBlitz3.ab2@11121>   MOVE.l errstack,tempa7
000372F6 <AmiBlitz3.ab2@11122>   JSR (A1)
00037320 <AmiBlitz3.ab2@11123>   !basic
0003735C <AmiBlitz3.ab2@11124>    If Peek.l(Addr Window(3))<>0 Then WZCloseWindow 3
0003737A <AmiBlitz3.ab2@11125>   !asm
0003737E <AmiBlitz3.ab2@11126>   MOVEM.l (A7)+,D7/d6/A6
00037384 <AmiBlitz3.ab2@11129>   MOVE.l tempa7,a7
0003738A <AmiBlitz3.ab2@11130>   MOVEA.l errcont,A0
0003738C <AmiBlitz3.ab2@11132> RTS
00037392 <AmiBlitz3.ab2@11135>   MOVEA.l errstack,A7
00037398 <AmiBlitz3.ab2@11136>   MOVEA.l errcont,A0
0003739A <AmiBlitz3.ab2@11138> RTS
0003739C <AmiBlitz3.ab2@11141>   MOVE.l (A7),D0
000373A2 <AmiBlitz3.ab2@11142>   MOVEA.l errstack,A7
000373A8 <AmiBlitz3.ab2@11143>   MOVEA.l errcont,A0
000373AA <AmiBlitz3.ab2@11144> JMP (A0)
000373AE <AmiBlitz3.ab2@11150>   CMP.w #$7A,D0                                            ;'z'
000373B2 <AmiBlitz3.ab2@11151>    BHI.w tstalpha__no
000373B6 <AmiBlitz3.ab2@11152>   CMP.w #$41,D0                                            ;'A'
000373BA <AmiBlitz3.ab2@11153>    BCS.w tstalpha__no
000373BE <AmiBlitz3.ab2@11154>   CMP.w #$61,D0                                            ;'a'
000373C2 <AmiBlitz3.ab2@11155>    BCC.w tstalpha__yes
000373C6 <AmiBlitz3.ab2@11156>   CMP.w #$5A,D0                                            ;'Z'
000373CA <AmiBlitz3.ab2@11157>    BHI.w tstalpha__no
000373CC <AmiBlitz3.ab2@11160>   CMP.w D0,D0
000373CE <AmiBlitz3.ab2@11163> RTS
000373D2 <AmiBlitz3.ab2@11171>   CMP.w #$30,D0                                            ;'0'
000373D6 <AmiBlitz3.ab2@11172>    BCS.w tstnum__skip
000373DA <AmiBlitz3.ab2@11173>   CMP.w #$39,D0                                            ;'9'
000373DE <AmiBlitz3.ab2@11174>    BHI.w tstnum__skip                                     
000373E0 <AmiBlitz3.ab2@11175>   CMP.w D0,D0
000373E2 <AmiBlitz3.ab2@11178> RTS
00037404 <AmiBlitz3.ab2@11184>   !compare1                                                ;bsr.w tstalpha
00037408 <AmiBlitz3.ab2@11185>    BEQ.w tstlab__skip
0003741A <AmiBlitz3.ab2@11186>   !compare2                                                ;bsr.w tstnum2
0003741E <AmiBlitz3.ab2@11187>    BEQ.w tstlab__skip
00037422 <AmiBlitz3.ab2@11188>   CMP.w #$5F,D0                                            ;'_'
00037426 <AmiBlitz3.ab2@11189>    BEQ.w tstlab__skip
0003742A <AmiBlitz3.ab2@11190>   CMP.w #$27,D0                                            ;#loclabch,d0 org source
0003742C <AmiBlitz3.ab2@11193> RTS
00037436 <AmiBlitz3.ab2@11198>   MOVE.w oldqflag,instringon
0003743C <AmiBlitz3.ab2@11199>   MOVEA.l lastsourcepos,A5
00037442 <AmiBlitz3.ab2@11202>   LEA ptr_parameterstore,A1
00037444 <AmiBlitz3.ab2@11205>   MOVEQ.l #$00,D2
0003744A <AmiBlitz3.ab2@11208>   LEA chartab,a0
0003744C <AmiBlitz3.ab2@11209>   MOVEQ #0,d0
00037452 <AmiBlitz3.ab2@11210>   MOVE.l A5,lastsourcepos
0003745C <AmiBlitz3.ab2@11211>   MOVE.w instringon,oldqflag
0003745E <AmiBlitz3.ab2@11214>     MOVE.b (a5)+,d0
00037462 <AmiBlitz3.ab2@11215>   CMP.b #$20,d0                                            ;space deftype
00037466 <AmiBlitz3.ab2@11216>   BEQ makename4__retry
0003746C <AmiBlitz3.ab2@11218>   MOVE.w d0,lastchar
00037470 <AmiBlitz3.ab2@11219>   TST.b 0(a0,d0.w)
00037474 <AmiBlitz3.ab2@11220>   BNE makename__done
00037476 <AmiBlitz3.ab2@11229>   MOVE.b D0,(A1)+
00037478 <AmiBlitz3.ab2@11230>   ADDQ.l #1,D2
0003747E <AmiBlitz3.ab2@11231>   MOVE.l A5,lastsourcepos
00037480 <AmiBlitz3.ab2@11234>   MOVE.b (a5)+,d0
00037486 <AmiBlitz3.ab2@11235>   MOVE.b d0,lastchar+1
0003748A <AmiBlitz3.ab2@11236>   CMP.b #$20,d0
0003748E <AmiBlitz3.ab2@11237>   BEQ makename__loop_l20
00037492 <AmiBlitz3.ab2@11239>   TST.b 0(a0,d0)
00037496 <AmiBlitz3.ab2@11240>   BEQ makename__loop
0003749A <AmiBlitz3.ab2@11241>   CMP.b #2,d0
0003749E <AmiBlitz3.ab2@11242>   BNE makename__loop_lf1
000374A4 <AmiBlitz3.ab2@11243>   MOVEA.l usedfrom,A5
000374AA <AmiBlitz3.ab2@11244>   CLR.l usedfrom
000374AE <AmiBlitz3.ab2@11245> BRA makename__loop_ln1
000374B2 <AmiBlitz3.ab2@11248>   CMP.b #1,d0
000374B6 <AmiBlitz3.ab2@11249>   BNE makename__loop_l20
000374BA <AmiBlitz3.ab2@11250>   MOVEA.l cmakea5(PC),A5
000374BE <AmiBlitz3.ab2@11251> BRA makename__loop_ln1
000374C2 <AmiBlitz3.ab2@11254>   CMP.b #$7e,d0
000374C6 <AmiBlitz3.ab2@11255>             BNE makename__loop_lt
000374CC <AmiBlitz3.ab2@11256>             TST.w cmake
000374D0 <AmiBlitz3.ab2@11257>             BNE.w makename__loop_a1
000374D2 <AmiBlitz3.ab2@11258>             SUBQ.l #1,a5
000374D6 <AmiBlitz3.ab2@11259>             BSR.w get1bytemain
000374DA <AmiBlitz3.ab2@11260> BRA makename__loop
000374DE <AmiBlitz3.ab2@11264> BRA makename__loop_gpex
000374E2 <AmiBlitz3.ab2@11268>   BSR.w getchar
00037504 <AmiBlitz3.ab2@11269>    !compare1                                               ;bsr.w tstalpha
00037508 <AmiBlitz3.ab2@11270>    BEQ.w makename__loop_getp1
0003751A <AmiBlitz3.ab2@11271>    !compare2                                               ;bsr.w tstnum
0003751E <AmiBlitz3.ab2@11272>    BEQ.w makename__loop_getp1
00037522 <AmiBlitz3.ab2@11273>   CMP.w #$5F,D0                                            ;'_'
00037526 <AmiBlitz3.ab2@11274>    BEQ.w makename__loop_getp1
0003752A <AmiBlitz3.ab2@11275>   CMP.w #$27,D0                                            ;#loclabch,d0 org source
0003752E <AmiBlitz3.ab2@11279>       BNE makename__loop_gpex
00037532 <AmiBlitz3.ab2@11280>       CMP.b #$20,d0
00037536 <AmiBlitz3.ab2@11281>       BNE.w makename__loop
00037538 <AmiBlitz3.ab2@11284>      TST.b d0
0003753C <AmiBlitz3.ab2@11285>      BPL makename__loop_l10
0003753E <AmiBlitz3.ab2@11286>      SUBQ.l #1,a5
00037542 <AmiBlitz3.ab2@11287>      BSR get1byte_
00037546 <AmiBlitz3.ab2@11290>    CMP.w #$20,D0
0003754A <AmiBlitz3.ab2@11291>    BNE.w makename__done
0003754C <AmiBlitz3.ab2@11292>    MOVEQ #0,d0
00037552 <AmiBlitz3.ab2@11293>   MOVE.l a5,lastsourcepos
00037554 <AmiBlitz3.ab2@11296>   MOVE.b (a5)+,d0                                          ;neuneu
00037558 <AmiBlitz3.ab2@11297>   BPL makename__loop_l101:
0003755A <AmiBlitz3.ab2@11298>   ASL.w #8,d0
0003755C <AmiBlitz3.ab2@11299>   MOVE.b (a5)+,d0
00037562 <AmiBlitz3.ab2@11302>   TST.w instringon
00037566 <AmiBlitz3.ab2@11303>   BNE makename__loop_l102
0003756A <AmiBlitz3.ab2@11304>   CMP.b #$20,d0
0003756E <AmiBlitz3.ab2@11305>   BEQ makename__loop_l103
00037572 <AmiBlitz3.ab2@11306>   CMP.b #";",d0
00037576 <AmiBlitz3.ab2@11307>   BNE makename__loop_l102
00037578 <AmiBlitz3.ab2@11310>   MOVE.b (A5)+,D0
0003757C <AmiBlitz3.ab2@11311>              BEQ makename__loop_l1
00037580 <AmiBlitz3.ab2@11312>              CMP.b #":",d0
00037584 <AmiBlitz3.ab2@11313>              BNE makename__loop_lr                         ;:@
00037588 <AmiBlitz3.ab2@11314>              CMP.b #"@",(a5)
0003758C <AmiBlitz3.ab2@11315>              BNE makename__loop_lr
0003758E <AmiBlitz3.ab2@11316>              ADDQ #1,a5
00037594 <AmiBlitz3.ab2@11320>   MOVE.w d0,lastchar
00037598 <AmiBlitz3.ab2@11324>   CMP.b #";",d0
0003759C <AmiBlitz3.ab2@11325>   BEQ makename__done_l11
0003759E <AmiBlitz3.ab2@11326>   CLR.b (A1)
000375A0 <AmiBlitz3.ab2@11328>   TST.w D2
000375A2 <AmiBlitz3.ab2@11329> RTS
000375A4 <AmiBlitz3.ab2@11332>   CLR.b (a1)
000375A6 <AmiBlitz3.ab2@11333>   MOVEQ #0,d0
000375AC <AmiBlitz3.ab2@11334>   MOVE.w d0,lastchar
000375AE <AmiBlitz3.ab2@11336>   TST.w D2
000375B0 <AmiBlitz3.ab2@11337> RTS
000375B2 <AmiBlitz3.ab2@11343>   MOVE.l (A2),D0
000375B6 <AmiBlitz3.ab2@11346>   BEQ.w findlast__here
000375B8 <AmiBlitz3.ab2@11347>   MOVEA.l D0,A2
000375BC <AmiBlitz3.ab2@11348> BRA.w findlast__loop
000375C0 <AmiBlitz3.ab2@11351> BRA.w reget
000375C2 <AmiBlitz3.ab2@11357>   MOVE.l (A2),-(A7)
000375C6 <AmiBlitz3.ab2@11358>   BSR.w addlabel
000375C8 <AmiBlitz3.ab2@11359>   MOVE.l (A7)+,(A2)
000375CA <AmiBlitz3.ab2@11360> RTS
000375D0 <AmiBlitz3.ab2@11365>   CLR.l fp0addr
000375D6 <AmiBlitz3.ab2@11366>   TST.w dirmode
000375DA <AmiBlitz3.ab2@11367>    BNE.w illdirerr
000375DC <AmiBlitz3.ab2@11368>   MOVEQ.l #$00,D0
000375DE <AmiBlitz3.ab2@11369>   MOVE.w D7,D0
000375E0 <AmiBlitz3.ab2@11370>   ADD.w D2,D0
000375E2 <AmiBlitz3.ab2@11371>   ADDQ.w #1,D0
000375E4 <AmiBlitz3.ab2@11372>   MOVE.w D0,D2
000375E6 <AmiBlitz3.ab2@11373>   ADDQ.l #2,d0
000375E8 <AmiBlitz3.ab2@11374>   MOVEQ.l #$01,D1
000375EE <AmiBlitz3.ab2@11375>   MOVEA.l _execbase,A6
000375F4 <AmiBlitz3.ab2@11376>   MOVE.l mempool2,a0
000375F8 <AmiBlitz3.ab2@11377>   JSR _AllocPooled(a6)
000375FE <AmiBlitz3.ab2@11379>   MOVE.l lastlabel,a2
00037600 <AmiBlitz3.ab2@11380>   MOVE.l D0,(A2)
00037602 <AmiBlitz3.ab2@11381>   MOVE.l d0,a0
00037604 <AmiBlitz3.ab2@11382>   CLR.l (a0)
0003760A <AmiBlitz3.ab2@11383>   MOVE.l a0,lastlabel
0003760C <AmiBlitz3.ab2@11384>   MOVE.l d0,A2
00037610 <AmiBlitz3.ab2@11385>   LEA -$1(A0,D7.W),A0
00037612 <AmiBlitz3.ab2@11386>   MOVE.b D2,(A0)+
00037618 <AmiBlitz3.ab2@11387>   LEA ptr_parameterstore,A1
0003761A <AmiBlitz3.ab2@11388>   MOVEQ #0,d0
0003761C <AmiBlitz3.ab2@11389>   MOVEQ #0,d1
0003761E <AmiBlitz3.ab2@11392>   MOVE.b (A1)+,d1
00037622 <AmiBlitz3.ab2@11393>    BEQ 'l1
00037628 <AmiBlitz3.ab2@11394>    !hashalgo
0003762A <AmiBlitz3.ab2@11395>    MOVE.b d1,(A0)+
0003762E <AmiBlitz3.ab2@11396> BRA addlabel_loop2a
00037630 <AmiBlitz3.ab2@11399>    CLR.b (a0)+
00037636 <AmiBlitz3.ab2@11400>    LEA labelhash,a0
0003763C <AmiBlitz3.ab2@11401>    AND.l #hashsize,d0
0003763E <AmiBlitz3.ab2@11402>    ASL.l #2,d0
00037642 <AmiBlitz3.ab2@11403>    MOVE.l 0(a0,d0),d1
00037646 <AmiBlitz3.ab2@11404>    MOVE.l d1,$c(a2)
0003764A <AmiBlitz3.ab2@11405>    MOVE.l a2,0(a0,d0)
0003764C <AmiBlitz3.ab2@11406>    MOVEQ #0,d0
00037650 <AmiBlitz3.ab2@11407> BRA.w reget
00037656 <AmiBlitz3.ab2@11411>    TST.b newvariable
0003765A <AmiBlitz3.ab2@11412>    BNE addlabel
00037660 <AmiBlitz3.ab2@11415>   TST.w dirmode
00037664 <AmiBlitz3.ab2@11416>    BNE.w illdirerr
00037666 <AmiBlitz3.ab2@11417>   MOVEQ.l #$00,D0
00037668 <AmiBlitz3.ab2@11418>   MOVE.w D7,D0
0003766A <AmiBlitz3.ab2@11419>   ADD.w D2,D0
0003766C <AmiBlitz3.ab2@11420>   ADDQ.w #1,D0
0003766E <AmiBlitz3.ab2@11421>   MOVE.w D0,D2
00037670 <AmiBlitz3.ab2@11422>   MOVEQ.l #$01,D1
00037676 <AmiBlitz3.ab2@11423>   MOVEA.l _execbase,A6
0003767C <AmiBlitz3.ab2@11424>   MOVE.l mempool2,a0
00037680 <AmiBlitz3.ab2@11425>   JSR _AllocPooled(a6)
00037682 <AmiBlitz3.ab2@11426>   MOVEA.l D0,A0
00037688 <AmiBlitz3.ab2@11428>   LEA varbase,a2
0003768A <AmiBlitz3.ab2@11429>   MOVE.l (a2),(a0)
0003768C <AmiBlitz3.ab2@11430>   MOVE.l A0,(A2)
0003768E <AmiBlitz3.ab2@11431>   MOVEA.l A0,A2
00037692 <AmiBlitz3.ab2@11432>   LEA -$1(A0,D7.W),A0
00037694 <AmiBlitz3.ab2@11433>   MOVE.b D2,(A0)+
0003769A <AmiBlitz3.ab2@11434>   LEA ptr_parameterstore,A1
0003769C <AmiBlitz3.ab2@11435>   MOVEQ #0,d0
0003769E <AmiBlitz3.ab2@11436>   MOVEQ #0,d1
000376A0 <AmiBlitz3.ab2@11439>   MOVE.b (A1)+,d1
000376A4 <AmiBlitz3.ab2@11440>    BEQ 'l12
000376AA <AmiBlitz3.ab2@11441>    !hashalgo
000376AC <AmiBlitz3.ab2@11442>    MOVE.b d1,(A0)+
000376B0 <AmiBlitz3.ab2@11443> BRA 'l11
000376B2 <AmiBlitz3.ab2@11446>   CLR.b (a0)+
000376B8 <AmiBlitz3.ab2@11447>   LEA variablehash,a0
000376BE <AmiBlitz3.ab2@11448>    AND.l #hashsize,d0
000376C0 <AmiBlitz3.ab2@11449>    ASL.l #2,d0
000376C4 <AmiBlitz3.ab2@11450>    MOVE.l 0(a0,d0),d1
000376C8 <AmiBlitz3.ab2@11451>    MOVE.l d1,$e(a2)
000376CC <AmiBlitz3.ab2@11452>    MOVE.l a2,0(a0,d0)
000376CE <AmiBlitz3.ab2@11453>    MOVEQ #0,d0
000376D2 <AmiBlitz3.ab2@11454> BRA.w reget
000376D8 <AmiBlitz3.ab2@11458>   TST.w dirmode
000376DC <AmiBlitz3.ab2@11459>    BNE.w illdirerr
000376DE <AmiBlitz3.ab2@11466>   MOVEQ.l #$00,D0
000376E0 <AmiBlitz3.ab2@11467>   MOVE.w D7,D0
000376E2 <AmiBlitz3.ab2@11468>   ADD.w D2,D0
000376E4 <AmiBlitz3.ab2@11469>   ADDQ.w #1,D0
000376E6 <AmiBlitz3.ab2@11470>   MOVE.w D0,D2
000376E8 <AmiBlitz3.ab2@11471>   MOVEQ.l #$01,D1
000376EE <AmiBlitz3.ab2@11472>   MOVEA.l _execbase,A6
000376F4 <AmiBlitz3.ab2@11473>   MOVE.l mempool2,a0
000376F8 <AmiBlitz3.ab2@11474>   JSR _AllocPooled(a6)
000376FA <AmiBlitz3.ab2@11476>   MOVEA.l D0,A0
000376FC <AmiBlitz3.ab2@11477>   MOVE.l A0,(A2)
000376FE <AmiBlitz3.ab2@11478>   CLR.l (a0)
00037702 <AmiBlitz3.ab2@11479>   CLR.l 8(a0)                                              ;clear next
00037704 <AmiBlitz3.ab2@11480>   MOVEA.l A0,A2
00037708 <AmiBlitz3.ab2@11481>   LEA -$1(A0,D7.W),A0
0003770A <AmiBlitz3.ab2@11482>   MOVE.b D2,(A0)+                                          ;put in struct length
00037710 <AmiBlitz3.ab2@11483>   LEA ptr_parameterstore,A1
00037712 <AmiBlitz3.ab2@11484>   MOVEQ #0,d0
00037714 <AmiBlitz3.ab2@11485>   MOVEQ #0,d1
00037716 <AmiBlitz3.ab2@11488>   MOVE.b (A1)+,d1
00037718 <AmiBlitz3.ab2@11491>   MOVE.b d1,(A0)+
0003771C <AmiBlitz3.ab2@11492>   BNE.w addlabel_loop2
00037720 <AmiBlitz3.ab2@11493> BRA.w reget
00037722 <AmiBlitz3.ab2@11497>   MOVEQ.l #$13,D7
00037728 <AmiBlitz3.ab2@11498>   LEA constantbase,A2
0003772C <AmiBlitz3.ab2@11499> BRA.w findlab
0003772E <AmiBlitz3.ab2@11503>   MOVEQ.l #$05+8,D7                                        ;#5,d7 org source
00037734 <AmiBlitz3.ab2@11504>   LEA xinclude_base,A2
00037738 <AmiBlitz3.ab2@11505> BRA.w findlab
0003773A <AmiBlitz3.ab2@11509>   MOVEQ.l #$09,D7
00037740 <AmiBlitz3.ab2@11510>   LEA firstconst,A2
00037744 <AmiBlitz3.ab2@11511> BRA.w findlab
00037746 <AmiBlitz3.ab2@11515>   MOVEQ.l #$0d,D7                                          ;find macro
0003774C <AmiBlitz3.ab2@11516>   LEA macrobase,A2
00037750 <AmiBlitz3.ab2@11517> BRA.w findlab
00037756 <AmiBlitz3.ab2@11521>   LEA labelhash,A2
00037758 <AmiBlitz3.ab2@11522>   MOVEQ.l #$13,D7
0003775A <AmiBlitz3.ab2@11523>   EXT.l d2
00037760 <AmiBlitz3.ab2@11524>   LEA ptr_parameterstore,A0
00037762 <AmiBlitz3.ab2@11525>   MOVEQ #0,d0
00037764 <AmiBlitz3.ab2@11526>   MOVEQ #0,d1
00037766 <AmiBlitz3.ab2@11529>     MOVE.b (a0)+,d1
0003776A <AmiBlitz3.ab2@11530>     BEQ 'l15
00037770 <AmiBlitz3.ab2@11531>     !hashalgo
00037774 <AmiBlitz3.ab2@11532> BRA 'l20
0003777A <AmiBlitz3.ab2@11535>   AND.l #hashsize,d0
0003777C <AmiBlitz3.ab2@11536>   ASL.l #2,d0
00037780 <AmiBlitz3.ab2@11537>   MOVE.l 0(a2,d0),d0
00037784 <AmiBlitz3.ab2@11538> BRA 'l11
00037788 <AmiBlitz3.ab2@11541>   MOVE.l $c(A2),D0                                         ;find label
0003778C <AmiBlitz3.ab2@11544>   BEQ findlab__no
0003778E <AmiBlitz3.ab2@11545>   MOVEA.l D0,A2
00037790 <AmiBlitz3.ab2@11546>   MOVEQ.l #$00,D0
00037794 <AmiBlitz3.ab2@11547>   MOVE.b -$1(A2,D7.l),D0
0003779A <AmiBlitz3.ab2@11548>   LEA ptr_parameterstore,A0
0003779C <AmiBlitz3.ab2@11549>   SUB.l D7,D0
0003779E <AmiBlitz3.ab2@11550>   SUBQ.l #1,D0
000377A0 <AmiBlitz3.ab2@11551>   CMP.l D0,D2
000377A4 <AmiBlitz3.ab2@11552>    BNE.b 'l10
000377A8 <AmiBlitz3.ab2@11553>   LEA $0(A2,D7.W),A1
000377AA <AmiBlitz3.ab2@11554>   SUBQ.l #1,D0
000377AC <AmiBlitz3.ab2@11557>     MOVE.b (a1)+,d1
000377AE <AmiBlitz3.ab2@11558>     CMP.b (a0)+,d1
000377B2 <AmiBlitz3.ab2@11560>     BNE.b 'l10
000377B6 <AmiBlitz3.ab2@11561>   DBF D0,'l201
000377BA <AmiBlitz3.ab2@11563>   BSR.w reget
000377BC <AmiBlitz3.ab2@11564>   CMP.w D0,D0
000377BE <AmiBlitz3.ab2@11565> RTS
000377C0 <AmiBlitz3.ab2@11569>   MOVEQ.l #$0B,D7
000377C4 <AmiBlitz3.ab2@11570> BRA.w findlab
000377CA <AmiBlitz3.ab2@11574>   LEA firstproc,A2
000377D0 <AmiBlitz3.ab2@11575>   MOVE.l #$21+#funcentry_extend,D7
000377D4 <AmiBlitz3.ab2@11576> BRA findlab
000377DA <AmiBlitz3.ab2@11580>   LEA firstfor,A2
000377DC <AmiBlitz3.ab2@11581>   MOVEQ.l #$11,D7
000377E0 <AmiBlitz3.ab2@11582> BRA.w findlab
000377E2 <AmiBlitz3.ab2@11586>   MOVEQ.l #$0F,D7
000377E6 <AmiBlitz3.ab2@11587> BRA.w findlab
000377E8 <AmiBlitz3.ab2@11591>   MOVEQ.l #$0F+4,D7
000377EE <AmiBlitz3.ab2@11592>   TST.b newvariable
000377F2 <AmiBlitz3.ab2@11593>    BNE.w findlab
000377F8 <AmiBlitz3.ab2@11594>   LEA variablehash,A2
000377FE <AmiBlitz3.ab2@11595>   LEA ptr_parameterstore,A0
00037800 <AmiBlitz3.ab2@11596>   MOVEQ #0,d0
00037802 <AmiBlitz3.ab2@11597>   MOVEQ #0,d1
00037804 <AmiBlitz3.ab2@11600>     MOVE.b (a0)+,d1
00037808 <AmiBlitz3.ab2@11601>     BEQ 'l15
0003780E <AmiBlitz3.ab2@11602>     !hashalgo
00037812 <AmiBlitz3.ab2@11603> BRA 'l20
00037818 <AmiBlitz3.ab2@11606>   AND.l #hashsize,d0
0003781A <AmiBlitz3.ab2@11607>   ASL.l #2,d0
0003781E <AmiBlitz3.ab2@11608>   MOVE.l 0(a2,d0),d0
00037822 <AmiBlitz3.ab2@11609> BRA 'l11
00037826 <AmiBlitz3.ab2@11612>   MOVE.l $e(A2),D0                                         ;find label
0003782A <AmiBlitz3.ab2@11615>   BEQ findlab__no
0003782C <AmiBlitz3.ab2@11616>   MOVEA.l D0,A2
0003782E <AmiBlitz3.ab2@11617>   MOVEQ.l #$00,D0
00037832 <AmiBlitz3.ab2@11618>   MOVE.b -$1(A2,D7.W),D0
00037838 <AmiBlitz3.ab2@11619>   LEA ptr_parameterstore,A0
0003783A <AmiBlitz3.ab2@11620>   SUB.w D7,D0
0003783C <AmiBlitz3.ab2@11621>   SUBQ.l #1,D0
0003783E <AmiBlitz3.ab2@11622>   CMP.w D0,D2
00037842 <AmiBlitz3.ab2@11623>    BNE.b 'l10
00037846 <AmiBlitz3.ab2@11624>   LEA $0(A2,D7.W),A1
00037848 <AmiBlitz3.ab2@11625>   SUBQ.l #1,D0
0003784A <AmiBlitz3.ab2@11628>     MOVE.b (a1)+,d1
0003784C <AmiBlitz3.ab2@11629>     CMP.b (a0)+,d1
00037850 <AmiBlitz3.ab2@11631>     BNE.b 'l10
00037854 <AmiBlitz3.ab2@11632>   DBF D0,'l201
00037858 <AmiBlitz3.ab2@11634>   BSR.w reget
0003785A <AmiBlitz3.ab2@11635>   CMP.w D0,D0
0003785C <AmiBlitz3.ab2@11636> RTS
0003785E <AmiBlitz3.ab2@11649>     MOVE.l (A2),D0                                         ;find label
00037862 <AmiBlitz3.ab2@11650>      BEQ.b findlab__no
00037864 <AmiBlitz3.ab2@11651>     MOVEA.l D0,A2
00037866 <AmiBlitz3.ab2@11652>     MOVEQ.l #$00,D0
0003786A <AmiBlitz3.ab2@11653>     MOVE.b -$1(A2,D7.W),D0
0003786C <AmiBlitz3.ab2@11654>     SUB.l D7,D0
0003786E <AmiBlitz3.ab2@11655>     SUBQ.l #1,D0
00037870 <AmiBlitz3.ab2@11656>   CMP.w D0,D2
00037874 <AmiBlitz3.ab2@11657>   BNE.b findlab__loop
00037878 <AmiBlitz3.ab2@11659>   LEA $0(A2,D7.W),A1
0003787E <AmiBlitz3.ab2@11660>   LEA ptr_parameterstore,A0
00037880 <AmiBlitz3.ab2@11661>   SUBQ.l #1,D0
00037882 <AmiBlitz3.ab2@11664>     MOVE.b (a1)+,d1
00037884 <AmiBlitz3.ab2@11665>     CMP.b (a0)+,d1
00037888 <AmiBlitz3.ab2@11667>     BNE.b findlab__loop
0003788C <AmiBlitz3.ab2@11668>   DBF D0,findlab__loop2
00037890 <AmiBlitz3.ab2@11670>   BSR.w reget
00037892 <AmiBlitz3.ab2@11671>   CMP.w D0,D0
00037894 <AmiBlitz3.ab2@11672> RTS
00037898 <AmiBlitz3.ab2@11675>   BSR.w reget
0003789A <AmiBlitz3.ab2@11676>   MOVEQ.l #-$01,D1
0003789C <AmiBlitz3.ab2@11677> RTS
000378A2 <AmiBlitz3.ab2@11681>   MOVEA.l alllocals,A4
000378A8 <AmiBlitz3.ab2@11682>   CLR.l alllocals
000378AC <AmiBlitz3.ab2@11686>     CMPA.w #$0,A4
000378B0 <AmiBlitz3.ab2@11687>      BEQ.b freeprocvs__done
000378B4 <AmiBlitz3.ab2@11688>     MOVEA.l $4(A4),A3
000378B8 <AmiBlitz3.ab2@11690>     MOVEA.l $8(A4),A3
000378BA <AmiBlitz3.ab2@11692>     MOVEA.l A4,A1
000378BC <AmiBlitz3.ab2@11693>     MOVEA.l (A4),A4
000378BE <AmiBlitz3.ab2@11694>     MOVEQ.l #$0C,D0
000378C4 <AmiBlitz3.ab2@11695>     MOVEA.l _execbase,A6
000378CA <AmiBlitz3.ab2@11696>     MOVE.l mempool,a0
000378CE <AmiBlitz3.ab2@11697>     JSR _FreePooled(A6)
000378D2 <AmiBlitz3.ab2@11698> BRA.b freeprocvs__loop
000378D8 <AmiBlitz3.ab2@11701>   CLR.l firstglob                                          ;fix 2*aclearallvar called
000378DE <AmiBlitz3.ab2@11702>   CLR.l firstlocal
000378E4 <AmiBlitz3.ab2@11703>   CLR.l sharebase
000378EA <AmiBlitz3.ab2@11704>   TST.l mempool2
000378EE <AmiBlitz3.ab2@11705>   BEQ freeprocvs__done_l10
000378F4 <AmiBlitz3.ab2@11707>   MOVEA.l _execbase,A6
000378FA <AmiBlitz3.ab2@11708>   MOVE.l mempool2,a0
00037900 <AmiBlitz3.ab2@11709>   CLR.l mempool2
00037904 <AmiBlitz3.ab2@11710>   JSR _DeletePool(a6)
0003790A <AmiBlitz3.ab2@11713>   MOVE.l _execbase,a6
00037910 <AmiBlitz3.ab2@11714>   MOVE.l #$10000,d0
00037916 <AmiBlitz3.ab2@11715>   MOVE.l #80000,d1
00037918 <AmiBlitz3.ab2@11716>   MOVE.l d1,d2
0003791C <AmiBlitz3.ab2@11717>   JSR _CreatePool(a6)
00037922 <AmiBlitz3.ab2@11718>   MOVE.l d0,mempool2
00037924 <AmiBlitz3.ab2@11719> RTS
00037928 <AmiBlitz3.ab2@11723>   CMPA.w #$0,A3
0003792C <AmiBlitz3.ab2@11724>    BEQ.w freevars__done
0003792E <AmiBlitz3.ab2@11725>   MOVEA.l A3,A1
00037930 <AmiBlitz3.ab2@11726>   MOVEA.l (A3),A3
00037932 <AmiBlitz3.ab2@11727>   MOVEQ.l #$00,D0
00037936 <AmiBlitz3.ab2@11728>   MOVE.b $E(A1),D0
0003793C <AmiBlitz3.ab2@11729>   MOVEA.l _execbase,A6
00037942 <AmiBlitz3.ab2@11730>   MOVE.l mempool2,a0
00037946 <AmiBlitz3.ab2@11731>   JSR _FreePooled(A6)
0003794A <AmiBlitz3.ab2@11732> BRA.w freevars
0003794E <AmiBlitz3.ab2@11735>     CMPA.w #$0,A3
00037952 <AmiBlitz3.ab2@11736>      BEQ.w freevars__done
00037954 <AmiBlitz3.ab2@11737>     MOVEA.l A3,A1
00037956 <AmiBlitz3.ab2@11738>     MOVEA.l (A3),A3
00037958 <AmiBlitz3.ab2@11739>     MOVEQ.l #$00,D0
0003795C <AmiBlitz3.ab2@11740>     MOVE.b $E+4(A1),D0
00037962 <AmiBlitz3.ab2@11741>     MOVEA.l _execbase,A6
00037968 <AmiBlitz3.ab2@11742>     MOVE.l mempool2,a0
0003796C <AmiBlitz3.ab2@11743>     JSR _FreePooled(A6)
00037970 <AmiBlitz3.ab2@11744> BRA.w freevarsb
00037972 <AmiBlitz3.ab2@11747> RTS
00037978 <AmiBlitz3.ab2@11751>   MOVEA.l currentlabeladdr,A0
0003797E <AmiBlitz3.ab2@11752>   MOVE.l a0,lastlabel
00037980 <AmiBlitz3.ab2@11753>   MOVEA.l (A0),A2
00037982 <AmiBlitz3.ab2@11754>   CLR.l (A0)
00037988 <AmiBlitz3.ab2@11755>   MOVEA.l _execbase,A6
0003798C <AmiBlitz3.ab2@11758>   CMPA.w #$0,A2
00037990 <AmiBlitz3.ab2@11759>    BEQ.w clearlabels__done
00037994 <AmiBlitz3.ab2@11760>   MOVE.l $4(A2),D0
00037998 <AmiBlitz3.ab2@11761>   BTST #$0,D0
0003799C <AmiBlitz3.ab2@11762>    BNE.w clearlabels__skip
0003799E <AmiBlitz3.ab2@11763>   MOVEA.l D0,A3
000379A2 <AmiBlitz3.ab2@11766>     CMPA.w #$0,A3
000379A6 <AmiBlitz3.ab2@11767>      BEQ.w clearlabels__skip
000379A8 <AmiBlitz3.ab2@11768>     MOVEA.l A3,A1
000379AA <AmiBlitz3.ab2@11769>     MOVEA.l (A3),A3
000379AC <AmiBlitz3.ab2@11770>     MOVEQ.l #$0C+2,D0                                      ;cancel fix
000379B2 <AmiBlitz3.ab2@11771>     MOVE.l mempool,a0
000379B6 <AmiBlitz3.ab2@11772>     JSR _FreePooled(A6)
000379BA <AmiBlitz3.ab2@11773> BRA.w clearlabels__loop2
000379BC <AmiBlitz3.ab2@11776>   MOVEQ.l #$00,D0
000379C0 <AmiBlitz3.ab2@11777>   MOVE.b $12(A2),D0
000379C2 <AmiBlitz3.ab2@11778>   MOVEA.l A2,A1
000379C4 <AmiBlitz3.ab2@11779>   MOVEA.l (A2),A2
000379CA <AmiBlitz3.ab2@11780>   MOVE.l mempool2,a0
000379CE <AmiBlitz3.ab2@11782> BRA.w clearlabels__loop
000379D0 <AmiBlitz3.ab2@11785> RTS
000379D6 <AmiBlitz3.ab2@11789>   MOVEA.l firstpend,A3
000379DC <AmiBlitz3.ab2@11790>   CLR.l firstpend
000379E2 <AmiBlitz3.ab2@11791>   MOVEA.l _execbase,A6
000379E6 <AmiBlitz3.ab2@11794>     CMPA.w #$0,A3
000379EA <AmiBlitz3.ab2@11795>      BEQ.w freepends__done
000379EC <AmiBlitz3.ab2@11796>     MOVEA.l A3,A1
000379EE <AmiBlitz3.ab2@11797>     MOVEQ.l #$08,D0
000379F0 <AmiBlitz3.ab2@11798>     MOVEA.l (A3),A3
000379F6 <AmiBlitz3.ab2@11799>     MOVE.l mempool,a0
000379FA <AmiBlitz3.ab2@11800>     JSR _FreePooled(A6)
000379FE <AmiBlitz3.ab2@11801> BRA.w fpnd2
00037A00 <AmiBlitz3.ab2@11804> RTS
00037A06 <AmiBlitz3.ab2@11808>   MOVEA.l firstproc,A2
00037A0C <AmiBlitz3.ab2@11809>   CLR.l firstproc
00037A12 <AmiBlitz3.ab2@11810>   MOVEA.l _execbase,A6
00037A16 <AmiBlitz3.ab2@11813>     CMPA.w #$0,A2
00037A1A <AmiBlitz3.ab2@11814>      BEQ.w clearfunctionlist__done
00037A1C <AmiBlitz3.ab2@11815>     MOVEA.l A2,A1
00037A1E <AmiBlitz3.ab2@11816>     MOVEA.l (A2),A2
00037A20 <AmiBlitz3.ab2@11817>     MOVEQ.l #$00,D0
00037A24 <AmiBlitz3.ab2@11818>     MOVE.b $20+#funcentry_extend(A1),D0
00037A2A <AmiBlitz3.ab2@11819>     MOVE.l mempool2,a0
00037A2E <AmiBlitz3.ab2@11820>     JSR _FreePooled(A6)
00037A32 <AmiBlitz3.ab2@11821> BRA.w clearfunctionlist__loop
00037A34 <AmiBlitz3.ab2@11824> RTS
00037A38 <AmiBlitz3.ab2@11828>   CMPA.w #$0,A2
00037A3C <AmiBlitz3.ab2@11829>    BEQ.w freetypes__done
00037A40 <AmiBlitz3.ab2@11830>   MOVEA.l $4(A2),A3
00037A44 <AmiBlitz3.ab2@11831>   CMPA.w #$FF,A3
00037A48 <AmiBlitz3.ab2@11832>    BEQ.w freetypes__noway
00037A4C <AmiBlitz3.ab2@11836>    BSR.w freevars
00037A4E <AmiBlitz3.ab2@11839>     MOVEA.l A2,A1
00037A50 <AmiBlitz3.ab2@11840>     MOVEA.l (A2),A2
00037A52 <AmiBlitz3.ab2@11841>     MOVEQ.l #$00,D0
00037A56 <AmiBlitz3.ab2@11842>     MOVE.b $A(A1),D0
00037A5C <AmiBlitz3.ab2@11843>     MOVEA.l _execbase,A6
00037A62 <AmiBlitz3.ab2@11844>     MOVE.l mempool2,a0
00037A66 <AmiBlitz3.ab2@11845>     JSR _FreePooled(A6)
00037A6A <AmiBlitz3.ab2@11846> BRA.w freetypes
00037A6C <AmiBlitz3.ab2@11849> RTS
00037A72 <AmiBlitz3.ab2@11853>   JSR uselib2
00037A78 <AmiBlitz3.ab2@11855>   CLR.w notshared
00037A7E <AmiBlitz3.ab2@11856>   CLR.w varmode
00037A84 <AmiBlitz3.ab2@11857>   MOVE.w proceduremode,D1
00037A88 <AmiBlitz3.ab2@11858>    BNE.w JL_0_8F4E
00037A8E <AmiBlitz3.ab2@11859>   LEA varbase,A2
00037A94 <AmiBlitz3.ab2@11860>   LEA ptr_parameterstore,a0
00037A98 <AmiBlitz3.ab2@11861>   CMP.b #$22,(a0)
00037A9C <AmiBlitz3.ab2@11862>   BNE JL_0_8E5E
00037A9E <AmiBlitz3.ab2@11863>   MOVEQ #0,d0
00037AA4 <AmiBlitz3.ab2@11864> JMP error
00037AA8 <AmiBlitz3.ab2@11867>   BSR.w findvariable
00037AAC <AmiBlitz3.ab2@11870>   BNE.w JL_0_8E7E
00037AB2 <AmiBlitz3.ab2@11873>   MOVE.b flagmask+1,D1
00037AB6 <AmiBlitz3.ab2@11874>   MOVE.b $7(A2),D3
00037AB8 <AmiBlitz3.ab2@11875>   EOR.b D3,D1
00037ABC <AmiBlitz3.ab2@11876>   BNE 'l2
00037AC4 <AmiBlitz3.ab2@11877>   CMP.b #2,nowdeclare
00037AC8 <AmiBlitz3.ab2@11878>   BEQ errormsg_declaredtwice
00037ACC <AmiBlitz3.ab2@11879> BRA.w JL_0_8FA8
00037AD0 <AmiBlitz3.ab2@11882>   BSR.w findlab
00037AD4 <AmiBlitz3.ab2@11883>   BNE 'l1
00037ADC <AmiBlitz3.ab2@11884>   CMP.b #2,nowdeclare
00037AE0 <AmiBlitz3.ab2@11885>   BEQ errormsg_declaredtwice
00037AE2 <AmiBlitz3.ab2@11886>   CMP.w d0,d0
00037AE6 <AmiBlitz3.ab2@11889> BRA.w JL_0_8E62
00037AE8 <AmiBlitz3.ab2@11892>    MOVE.l a2,-(a7)
00037AEE <AmiBlitz3.ab2@11893>    LEA sharebase,a2
00037AF0 <AmiBlitz3.ab2@11894>    MOVEQ #$f+4,d7
00037AF4 <AmiBlitz3.ab2@11895>    BSR.w findlab
00037AF8 <AmiBlitz3.ab2@11896>    BEQ 'l2x
00037AFA <AmiBlitz3.ab2@11897>    MOVE.l (a7)+,a2
00037AFE <AmiBlitz3.ab2@11898> BRA 'cont
00037B00 <AmiBlitz3.ab2@11901>   ADDQ.l #4,a7
00037B06 <AmiBlitz3.ab2@11902>   CLR.w varmode
00037B0C <AmiBlitz3.ab2@11903>   MOVE.b flagmask+1,D1
00037B10 <AmiBlitz3.ab2@11904>   MOVE.b $7(A2),D3
00037B12 <AmiBlitz3.ab2@11905>   EOR.b D3,D1
00037B16 <AmiBlitz3.ab2@11906>   BNE vardeclareerr
00037B1A <AmiBlitz3.ab2@11907> BRA JL_0_8FA8
00037B20 <AmiBlitz3.ab2@11910>    MOVE.w nonew,D1
00037B24 <AmiBlitz3.ab2@11911>    BNE.w nonewerr
00037B2A <AmiBlitz3.ab2@11912>    TST.b nowdeclare
00037B2E <AmiBlitz3.ab2@11913>    BNE 'l2
00037B34 <AmiBlitz3.ab2@11914>    TST.b declare2
00037B38 <AmiBlitz3.ab2@11915>    BEQ 'l1
00037B3C <AmiBlitz3.ab2@11916>    CMP.b #$2e,d0
00037B40 <AmiBlitz3.ab2@11917>    BEQ 'l2
00037B44 <AmiBlitz3.ab2@11918>    CMP.b #"$",d0
00037B48 <AmiBlitz3.ab2@11919>    BEQ 'l2
00037B4C <AmiBlitz3.ab2@11920> BRA vardeclareerr
00037B52 <AmiBlitz3.ab2@11923>   TST.b declare
00037B56 <AmiBlitz3.ab2@11924>    BNE vardeclareerr
00037B5A <AmiBlitz3.ab2@11927>   BSR.w addvariable
00037B60 <AmiBlitz3.ab2@11928>   NOT.w notshared
00037B62 <AmiBlitz3.ab2@11929>   MOVEA.l A2,A3
00037B68 <AmiBlitz3.ab2@11930>   MOVEA.l defaulttype,A2
00037B6C <AmiBlitz3.ab2@11931>   CMP.w #$2E,D0
00037B70 <AmiBlitz3.ab2@11932>    BEQ.w JL_0_8EB8
00037B74 <AmiBlitz3.ab2@11933>   CMP.w #$24,D0
00037B78 <AmiBlitz3.ab2@11934>    BNE.w JL_0_8ECA
00037B7E <AmiBlitz3.ab2@11935>   LEA newtype_string,A2
00037B82 <AmiBlitz3.ab2@11936>    BSR.w get1bytemain
00037B86 <AmiBlitz3.ab2@11937> BRA.w JL_0_8ECA
00037B8A <AmiBlitz3.ab2@11940>    BSR.w getparameter2
00037B90 <AmiBlitz3.ab2@11941>   LEA newtypebase,A2
00037B94 <AmiBlitz3.ab2@11942>    BSR.w findtype
00037B98 <AmiBlitz3.ab2@11943>    BNE.w JUMP_notypeerr
00037B9E <AmiBlitz3.ab2@11946>   CMPA.l #newtype_byte,A2
00037BA2 <AmiBlitz3.ab2@11947>    BEQ.w JL_0_8EECb
00037BA8 <AmiBlitz3.ab2@11948>   MOVE.w varmode,D1
00037BAC <AmiBlitz3.ab2@11949>    BNE.w JL_0_8EE4b
00037BB2 <AmiBlitz3.ab2@11950>   ADDQ.w #1,globalvarpointer
00037BBA <AmiBlitz3.ab2@11953>   BCLR #$0,globalvarpointer+1
00037BBE <AmiBlitz3.ab2@11956>   MOVE.l A2,$A(A3)
00037BC6 <AmiBlitz3.ab2@11957>   MOVE.w flagmask,$6(A3)                                  ;??????????
00037BC8 <AmiBlitz3.ab2@11959>   MOVEQ.l #$04,D1
00037BD0 <AmiBlitz3.ab2@11960>   BTST #$0,flagmask+1
00037BD4 <AmiBlitz3.ab2@11961>    BNE.w JL_0_8F22b
00037BDC <AmiBlitz3.ab2@11962>   BTST #$1,flagmask+1
00037BE0 <AmiBlitz3.ab2@11963>    BNE.w JL_0_8F22b
00037BE8 <AmiBlitz3.ab2@11964>   CMPI.l #$100,$4(A2)
00037BEC <AmiBlitz3.ab2@11965>    BCC.w JL_0_8F22b
00037BF0 <AmiBlitz3.ab2@11966>   MOVE.w $8(A2),D1
00037BF6 <AmiBlitz3.ab2@11969>   TST.w varmode
00037BFA <AmiBlitz3.ab2@11970> BRA.w JL_0_8F3E
00037BFE <AmiBlitz3.ab2@11979>   BSR.w getparameter2
00037C04 <AmiBlitz3.ab2@11980>   LEA newtypebase,A2
00037C08 <AmiBlitz3.ab2@11981>    BSR.w findtype
00037C0C <AmiBlitz3.ab2@11982>    BNE.w notypeerr
00037C12 <AmiBlitz3.ab2@11985>   CMPA.l #newtype_byte,A2
00037C16 <AmiBlitz3.ab2@11986>    BEQ.w JL_0_8EEC
00037C1C <AmiBlitz3.ab2@11987>   MOVE.w varmode,D1
00037C20 <AmiBlitz3.ab2@11988>    BNE.w JL_0_8EE4
00037C26 <AmiBlitz3.ab2@11989>   ADDQ.w #1,globalvarpointer
00037C2E <AmiBlitz3.ab2@11992>   BCLR #$0,globalvarpointer+1
00037C32 <AmiBlitz3.ab2@11995>   MOVE.l A2,$A(A3)
00037C3A <AmiBlitz3.ab2@11996>   MOVE.w flagmask,$6(A3)                                  ;??????????
00037C3C <AmiBlitz3.ab2@11997>   MOVEQ.l #$04,D1
00037C44 <AmiBlitz3.ab2@11998>   BTST #$0,flagmask+1
00037C48 <AmiBlitz3.ab2@11999>    BNE.w JL_0_8F22
00037C50 <AmiBlitz3.ab2@12000>   BTST #$1,flagmask+1
00037C54 <AmiBlitz3.ab2@12001>    BNE.w JL_0_8F22
00037C5C <AmiBlitz3.ab2@12002>   CMPI.l #$100,$4(A2)
00037C60 <AmiBlitz3.ab2@12003>    BCC.w JL_0_8F22
00037C64 <AmiBlitz3.ab2@12004>   MOVE.w $8(A2),D1
00037C6A <AmiBlitz3.ab2@12007>   TST.w varmode
00037C6E <AmiBlitz3.ab2@12008>    BEQ.w JL_0_8F3E
00037C70 <AmiBlitz3.ab2@12009>   NEG.w D1
00037C76 <AmiBlitz3.ab2@12010>   ADD.w D1,globalvarpointer
00037C7E <AmiBlitz3.ab2@12011>   MOVE.w globalvarpointer,$4(A3)
00037C80 <AmiBlitz3.ab2@12012> RTS
00037C88 <AmiBlitz3.ab2@12015>   MOVE.w globalvarpointer,$4(A3)
00037C8E <AmiBlitz3.ab2@12016>   ADD.w D1,globalvarpointer
00037C90 <AmiBlitz3.ab2@12017> RTS
00037C96 <AmiBlitz3.ab2@12021>   LEA firstglob,A2
00037C9A <AmiBlitz3.ab2@12022>    BSR.w findvariable2
00037C9E <AmiBlitz3.ab2@12025>   BNE.w JL_0_8F74
00037CA4 <AmiBlitz3.ab2@12026>   MOVE.b flagmask+1,D1
00037CA8 <AmiBlitz3.ab2@12027>   MOVE.b $7(A2),D3
00037CAA <AmiBlitz3.ab2@12028>   EOR.b D3,D1
00037CAE <AmiBlitz3.ab2@12029>    BEQ.w JL_0_8FA8
00037CB2 <AmiBlitz3.ab2@12030>    BSR.w findlab
00037CB6 <AmiBlitz3.ab2@12031> BRA.w JL_0_8F58
00037CBE <AmiBlitz3.ab2@12034>   MOVE.w #$FFFF,varmode
00037CC4 <AmiBlitz3.ab2@12035>   MOVE.w globalvarpointer,-(A7)
00037CCE <AmiBlitz3.ab2@12036>   MOVE.w locvaroff,globalvarpointer
00037CD4 <AmiBlitz3.ab2@12037>   LEA firstlocal,A2
00037CDC <AmiBlitz3.ab2@12038>   MOVE.b #1,newvariable
00037CE0 <AmiBlitz3.ab2@12039>    BSR.w JL_0_8E5E
00037CE6 <AmiBlitz3.ab2@12040>   CLR.b newvariable
00037CF0 <AmiBlitz3.ab2@12041>   MOVE.w globalvarpointer,locvaroff
00037CF6 <AmiBlitz3.ab2@12042>   MOVE.w (A7)+,globalvarpointer
00037CF8 <AmiBlitz3.ab2@12043> RTS
00037CFA <AmiBlitz3.ab2@12046>   MOVEA.l A2,A3
00037CFE <AmiBlitz3.ab2@12047>   CMP.w #$2E,D0
00037D02 <AmiBlitz3.ab2@12048>    BEQ.w JL_0_8FCE
00037D06 <AmiBlitz3.ab2@12049>   CMP.w #$24,D0
00037D0A <AmiBlitz3.ab2@12050>    BNE.w JL_0_8FE8
00037D12 <AmiBlitz3.ab2@12051>   CMPI.l #newtype_string,$A(A3)
00037D16 <AmiBlitz3.ab2@12052>    BNE.w rongtypeerr
00037D1A <AmiBlitz3.ab2@12053>    BSR.w get1bytemain
00037D1E <AmiBlitz3.ab2@12054> BRA.w JL_0_8FE8
00037D22 <AmiBlitz3.ab2@12057>    BSR.w getparameter2
00037D28 <AmiBlitz3.ab2@12058>   LEA newtypebase,A2
00037D2C <AmiBlitz3.ab2@12059>    BSR.w findtype
00037D30 <AmiBlitz3.ab2@12060>    BNE.w notypeerr
00037D34 <AmiBlitz3.ab2@12061>   CMPA.l $A(A3),A2
00037D38 <AmiBlitz3.ab2@12062>    BNE.w rongtypeerr
00037D40 <AmiBlitz3.ab2@12064>   BTST #$0,flagmask+1
00037D44 <AmiBlitz3.ab2@12065>    BEQ.w JL_0_8FFE
00037D4A <AmiBlitz3.ab2@12066>   BTST #$0,$7(A3)
00037D4E <AmiBlitz3.ab2@12067>    BEQ.w pointerr
00037D52 <AmiBlitz3.ab2@12070>   MOVEA.l $A(A3),A2
00037D54 <AmiBlitz3.ab2@12071> RTS
00037D56 <AmiBlitz3.ab2@12075>    TST.l D3                                                ;newtype >32kb  .w to .l
00037D5A <AmiBlitz3.ab2@12076>    BEQ.w JL_0_9042
00037D64 <AmiBlitz3.ab2@12077>    MOVE.l destpointer,loada
00037D68 <AmiBlitz3.ab2@12080> BRA JL_0_9032
00037D6C <AmiBlitz3.ab2@12082>   CMP.w #$9,D3                                             ;_addq_arrays
00037D70 <AmiBlitz3.ab2@12083>    BCC.w JL_0_9032
00037D76 <AmiBlitz3.ab2@12084>   MOVE.w d3,arrayoffset
00037D7A <AmiBlitz3.ab2@12085>   ANDI.w #$7,D3
00037D7C <AmiBlitz3.ab2@12086>   LSL.w #8,D3
00037D7E <AmiBlitz3.ab2@12087>   LSL.w #1,D3
00037D86 <AmiBlitz3.ab2@12088>   ANDI.w #$F1FF,addqa0
00037D8C <AmiBlitz3.ab2@12089>   OR.w D3,addqa0
00037D92 <AmiBlitz3.ab2@12090>   MOVE.w addqa0,D1
00037D96 <AmiBlitz3.ab2@12091> BRA.w writeword
00037D9C <AmiBlitz3.ab2@12094>   CMP.l #$7fff,d3                                          ;>32kb newtypes
00037DA0 <AmiBlitz3.ab2@12095>   BGT longoffset
00037DA6 <AmiBlitz3.ab2@12096>   MOVE.w D3,leaa0a0+2
00037DAC <AmiBlitz3.ab2@12097>   MOVE.w d3,arrayoffset
00037DB2 <AmiBlitz3.ab2@12098>   MOVE.l leaa0a0,D1
00037DB6 <AmiBlitz3.ab2@12099>   BSR.w writelong
00037DB8 <AmiBlitz3.ab2@12102> RTS
00037DBC <AmiBlitz3.ab2@12105>    MOVE.w #$d5fc,d1
00037DC0 <AmiBlitz3.ab2@12106>    BSR writeword
00037DC2 <AmiBlitz3.ab2@12107>    MOVE.l d3,d1
00037DC6 <AmiBlitz3.ab2@12108>    BSR.w writelong
00037DC8 <AmiBlitz3.ab2@12109> RTS
00037DCC <AmiBlitz3.ab2@12113>   Dc.w $b0ad,0000                                          ;cmp.l $0(A5),D0    ;nooptimize
00037DD0 <AmiBlitz3.ab2@12116>    BCS.w arrchk3                                           
00037DD6 <AmiBlitz3.ab2@12117>    JSR $20000                                              ;jsr 0
00037DDC <AmiBlitz3.ab2@12123>   TST.b fast
00037DE0 <AmiBlitz3.ab2@12124>   BEQ 'l1
00037DE2 <AmiBlitz3.ab2@12125>    MOVEQ #0,d1                                             ;faster arrays
00037DE8 <AmiBlitz3.ab2@12126>    MOVE.w regnum,d2
00037DEA <AmiBlitz3.ab2@12127>    MOVE.w d2,d1
00037DEC <AmiBlitz3.ab2@12128>    LSL.w #8,d1
00037DEE <AmiBlitz3.ab2@12129>    LSL.w #4,d1
00037DF0 <AmiBlitz3.ab2@12130>    ADD.w d2,d1
00037DF6 <AmiBlitz3.ab2@12131>    OR.l #$4c2d0000,d1
00037DFC <AmiBlitz3.ab2@12132>    TST.w varmode
00037E00 <AmiBlitz3.ab2@12133>    BEQ 'l1a
00037E04 <AmiBlitz3.ab2@12134>    BCLR #16,d1
00037E08 <AmiBlitz3.ab2@12137>    BSR writelong
00037E0C <AmiBlitz3.ab2@12138>    MOVE.w $4(A7),D1
00037E10 <AmiBlitz3.ab2@12139>    BSR.w writeword
00037E16 <AmiBlitz3.ab2@12140>    MOVE.w regnum,D1
00037E18 <AmiBlitz3.ab2@12141>   SUBQ.w #1,D1
00037E1A <AmiBlitz3.ab2@12142>   LSL.w #8,D1
00037E1C <AmiBlitz3.ab2@12143>   LSL.w #1,D1
00037E20 <AmiBlitz3.ab2@12144>   ORI.w #$D080,D1
00037E26 <AmiBlitz3.ab2@12145>   OR.w regnum,D1
00037E2A <AmiBlitz3.ab2@12146>    BSR.w writeword
00037E2C <AmiBlitz3.ab2@12147> RTS
00037E32 <AmiBlitz3.ab2@12150>   MOVE.w regnum,D2
00037E36 <AmiBlitz3.ab2@12151>   MOVE.w arrmul1(PC),D1
00037E38 <AmiBlitz3.ab2@12152>   OR.w D2,D1
00037E3A <AmiBlitz3.ab2@12153>   SUBQ.w #1,D1
00037E3E <AmiBlitz3.ab2@12154>    BSR.w writeword
00037E42 <AmiBlitz3.ab2@12155>   MOVE.w arrmul2(PC),D1
00037E44 <AmiBlitz3.ab2@12156>   OR.w D2,D1
00037E46 <AmiBlitz3.ab2@12157>   MOVE.w D2,D3
00037E48 <AmiBlitz3.ab2@12158>   SUBQ.w #1,D3
00037E4A <AmiBlitz3.ab2@12159>   LSL.w #8,D3
00037E4C <AmiBlitz3.ab2@12160>   LSL.w #1,D3
00037E4E <AmiBlitz3.ab2@12161>   OR.w D3,D1
00037E52 <AmiBlitz3.ab2@12162>    BSR.w writeword
00037E56 <AmiBlitz3.ab2@12163>   MOVE.w arrmul3(PC),D1
00037E58 <AmiBlitz3.ab2@12164>   MOVE.w D2,D3
00037E5A <AmiBlitz3.ab2@12165>   LSL.w #8,D3
00037E5C <AmiBlitz3.ab2@12166>   LSL.w #1,D3
00037E5E <AmiBlitz3.ab2@12167>   OR.w D3,D1
00037E62 <AmiBlitz3.ab2@12168>    BSR.w pokewda5s
00037E66 <AmiBlitz3.ab2@12169>   MOVE.w $4(A7),D1
00037E68 <AmiBlitz3.ab2@12170>   ADDQ.w #2,D1
00037E6C <AmiBlitz3.ab2@12171>    BSR.w writeword
00037E70 <AmiBlitz3.ab2@12172>   MOVE.w arrmul4(PC),D1
00037E72 <AmiBlitz3.ab2@12173>   MOVE.w D2,D3
00037E74 <AmiBlitz3.ab2@12174>   SUBQ.w #1,D3
00037E76 <AmiBlitz3.ab2@12175>   LSL.w #8,D3
00037E78 <AmiBlitz3.ab2@12176>   LSL.w #1,D3
00037E7A <AmiBlitz3.ab2@12177>   OR.w D3,D1
00037E7E <AmiBlitz3.ab2@12178>    BSR.w pokewda5s
00037E82 <AmiBlitz3.ab2@12179>   MOVE.w $4(A7),D1
00037E86 <AmiBlitz3.ab2@12180>    BSR.w writeword
00037E8A <AmiBlitz3.ab2@12181>   MOVE.w arrmul5(PC),D1
00037E8C <AmiBlitz3.ab2@12182>   OR.w D2,D1
00037E8E <AmiBlitz3.ab2@12183>   SUBQ.w #1,D1
00037E92 <AmiBlitz3.ab2@12184>    BSR.w writeword
00037E96 <AmiBlitz3.ab2@12185>   MOVE.w arrmul6(PC),D1
00037E98 <AmiBlitz3.ab2@12186>   OR.w D2,D1
00037E9A <AmiBlitz3.ab2@12187>   SUBQ.w #1,D1
00037E9E <AmiBlitz3.ab2@12188>    BSR.w writeword
00037EA2 <AmiBlitz3.ab2@12189>   MOVE.w arrmul7(PC),D1
00037EA4 <AmiBlitz3.ab2@12190>   OR.w D2,D1
00037EA6 <AmiBlitz3.ab2@12191>   SUBQ.w #1,D1
00037EA8 <AmiBlitz3.ab2@12192>   MOVE.w D2,D3
00037EAA <AmiBlitz3.ab2@12193>   LSL.w #8,D3
00037EAC <AmiBlitz3.ab2@12194>   LSL.w #1,D3
00037EAE <AmiBlitz3.ab2@12195>   OR.w D3,D1
00037EB2 <AmiBlitz3.ab2@12196>    BSR.w writeword
00037EB6 <AmiBlitz3.ab2@12197>   MOVE.w arrmul8(PC),D1
00037EB8 <AmiBlitz3.ab2@12198>   MOVE.w D2,D3
00037EBA <AmiBlitz3.ab2@12199>   SUBQ.w #1,D3
00037EBC <AmiBlitz3.ab2@12200>   LSL.w #8,D3
00037EBE <AmiBlitz3.ab2@12201>   LSL.w #1,D3
00037EC0 <AmiBlitz3.ab2@12202>   OR.w D3,D1
00037EC4 <AmiBlitz3.ab2@12203>    BSR.w writeword
00037ECA <AmiBlitz3.ab2@12204>   MOVE.w regnum,D1
00037ECC <AmiBlitz3.ab2@12205>   SUBQ.w #1,D1
00037ECE <AmiBlitz3.ab2@12206>   LSL.w #8,D1
00037ED0 <AmiBlitz3.ab2@12207>   LSL.w #1,D1
00037ED4 <AmiBlitz3.ab2@12208>   ORI.w #$D080,D1
00037EDA <AmiBlitz3.ab2@12209>   OR.w regnum,D1
00037EDE <AmiBlitz3.ab2@12210> BRA.w writeword
00037EE0 <AmiBlitz3.ab2@12218> arrmul1:   MOVE.l d0,-(a7)                                ;write array access
00037EE2 <AmiBlitz3.ab2@12219> arrmul2:   MOVE  d0,d0
00037EE6 <AmiBlitz3.ab2@12220> arrmul3:   MULU 0(a5),d0                                  ;mulu   x+2(a5),d1  ;lo*lo
00037EEA <AmiBlitz3.ab2@12221> arrmul4:   MULU 0(a5),d0                                  ;mulu   x(a5),d0    ;hi*lo
00037EEC <AmiBlitz3.ab2@12223> arrmul5:   SWAP d0
00037EEE <AmiBlitz3.ab2@12224> arrmul6:   CLR d0
00037EF0 <AmiBlitz3.ab2@12225> arrmul7:   ADD.l d0,d0
00037EF2 <AmiBlitz3.ab2@12226> arrmul8:   MOVE.l (a7)+,d0
00037EF6 <AmiBlitz3.ab2@12231> listcode1:  Dc.b $24,$6D :              Dc.b $00,$00       ;MOVEA.L $0000(A5),A2      ;pointer to start of array data
00037EFA <AmiBlitz3.ab2@12232> listcode2:  Dc.b $24,$6A,$FF,$E0                           ;MOVEA.L -$0020(A2),A2     ;pointer to current
00037EFC <AmiBlitz3.ab2@12233> listarfix:  Dc.b $50,$4A                                   ;ADDQ.W  #8,A2
00037F02 <AmiBlitz3.ab2@12251>   CLR.l lastoffset_org
00037F08 <AmiBlitz3.ab2@12252>   BTST #$1,$7(A3)
00037F0C <AmiBlitz3.ab2@12253>    BEQ.w calcvar__notarr
00037F12 <AmiBlitz3.ab2@12254>   MOVE.w notshared,D1
00037F16 <AmiBlitz3.ab2@12255>    BNE.w noarrerr
00037F1A <AmiBlitz3.ab2@12256>    BSR.w get1bytemain
00037F1E <AmiBlitz3.ab2@12257>   CMP.w #$29,D0
00037F22 <AmiBlitz3.ab2@12258>    BNE.w calcvar__notalist
00037F28 <AmiBlitz3.ab2@12259>   BTST #$0,$6(A3)
00037F2C <AmiBlitz3.ab2@12260>    BEQ.w nolisterr
00037F34 <AmiBlitz3.ab2@12261>   MOVE.w $4(A3),listcode1+2
00037F38 <AmiBlitz3.ab2@12262>   MOVE.l listcode1(PC),D1
00037F3C <AmiBlitz3.ab2@12263>    BSR.w pokela5s
00037F40 <AmiBlitz3.ab2@12264>   MOVE.l listcode2(PC),D1
00037F44 <AmiBlitz3.ab2@12265>    BSR.w writelong
00037F4A <AmiBlitz3.ab2@12266>   TST.b debugmode
00037F4E <AmiBlitz3.ab2@12267>    BEQ.w calcvar__nolrerr
00037F50 <AmiBlitz3.ab2@12271>   MOVE.l A2,-(A7)
00037F54 <AmiBlitz3.ab2@12272>   MOVE.w #$C315,D1
00037F58 <AmiBlitz3.ab2@12273>    BSR.w Atokejsr
00037F5A <AmiBlitz3.ab2@12274>   MOVEA.l (A7)+,A2
00037F5E <AmiBlitz3.ab2@12277>    MOVE.w listarfix(PC),D1                                 ;addq #8,a2
00037F62 <AmiBlitz3.ab2@12279>    BSR.w writeword
00037F66 <AmiBlitz3.ab2@12280> BRA.w calcvar__normalar
00037F68 <AmiBlitz3.ab2@12283> calcvar__listoff:   Ds.w 1
00037F6E <AmiBlitz3.ab2@12287>   CLR.w calcvar__listoff
00037F74 <AmiBlitz3.ab2@12288>   BTST #$0,$6(A3)
00037F78 <AmiBlitz3.ab2@12289>    BEQ.w calcvar__knop
00037F80 <AmiBlitz3.ab2@12290>   MOVE.w #$0008,calcvar__listoff                            ;adjust size of one element if list.
00037F84 <AmiBlitz3.ab2@12293>   MOVEM.l A2-A3,-(A7)
00037F8A <AmiBlitz3.ab2@12294>   MOVE.w varmode,-(A7)
00037F8E <AmiBlitz3.ab2@12295>   MOVE.w $8(A3),-(A7)                                       ;number of dims
00037F92 <AmiBlitz3.ab2@12296>   MOVE.w $4(A3),-(A7)                                       ;varoff
00037F94 <AmiBlitz3.ab2@12297>   MOVE.l A2,-(A7)
00037F9A <AmiBlitz3.ab2@12298>   MOVE.w flagmask,-(A7)
00037FA4 <AmiBlitz3.ab2@12300>   MOVE.w oldqflag,instringon
00037FAA <AmiBlitz3.ab2@12301>   MOVEA.l lastsourcepos,A5
00037FAE <AmiBlitz3.ab2@12302>    BSR.w arreval
00037FB4 <AmiBlitz3.ab2@12303>   MOVE.w (A7)+,flagmask
00037FBC <AmiBlitz3.ab2@12304>   MOVE.w $8(A7),varmode
00037FC2 <AmiBlitz3.ab2@12305>   TST.b debugmode
00037FC6 <AmiBlitz3.ab2@12306>    BEQ.w calcvar__noszchk
00037FC8 <AmiBlitz3.ab2@12310>   MOVEA.l (A7)+,A2
00037FCA <AmiBlitz3.ab2@12311>   MOVEQ.l #$04,D1
00037FD2 <AmiBlitz3.ab2@12312>   BTST #$0,flagmask+1                                      ;pointer?
00037FD6 <AmiBlitz3.ab2@12313>    BNE.b calcvar__domul                                          ;yes, then use 4 byte mul...
00037FDA <AmiBlitz3.ab2@12314>   MOVE.w $8(A2),D1
00037FDE <AmiBlitz3.ab2@12317>   ADD.w calcvar__listoff(PC),D1
00037FE2 <AmiBlitz3.ab2@12318>   BSR.w JL_0_B6DE
00037FE8 <AmiBlitz3.ab2@12319>   ADDQ.w #1,regnum
00037FEA <AmiBlitz3.ab2@12322>   ADDQ.w #4,(A7)
00037FEE <AmiBlitz3.ab2@12323>   TST.w $4(A7)
00037FF2 <AmiBlitz3.ab2@12324>    BEQ.w calcvar__isglob
00037FF4 <AmiBlitz3.ab2@12325>   SUBQ.w #8,(A7)                                           ;range check local array
00037FFA <AmiBlitz3.ab2@12328>   TST.b debugmode
00037FFE <AmiBlitz3.ab2@12329>    BEQ.w calcvar__noer1
00038004 <AmiBlitz3.ab2@12330>   MOVE.w regnum,D1
00038006 <AmiBlitz3.ab2@12331>   SUBQ.w #1,D1
00038008 <AmiBlitz3.ab2@12332>   LSL.w #8,D1
0003800A <AmiBlitz3.ab2@12333>   LSL.w #1,D1
0003800E <AmiBlitz3.ab2@12334>   OR.w zarrchk(PC),D1
00038012 <AmiBlitz3.ab2@12335>    BSR.w pokewda5s                                         ;cmp.l x(a5),D regat
00038014 <AmiBlitz3.ab2@12336>   MOVE.w (A7),D1
00038018 <AmiBlitz3.ab2@12337>    BSR.w writeword
0003801C <AmiBlitz3.ab2@12338>   MOVE.l arrchk2(PC),D1
00038020 <AmiBlitz3.ab2@12339>    BSR.w writelong
00038024 <AmiBlitz3.ab2@12340>   MOVE.w #$C309,D1
00038028 <AmiBlitz3.ab2@12341>    BSR.w Atokejsr
0003802C <AmiBlitz3.ab2@12344>   SUBQ.w #1,$2(A7)
00038030 <AmiBlitz3.ab2@12345>    BEQ.w calcvar__ardone
00038034 <AmiBlitz3.ab2@12346>   CMP.w #$2C,D0
00038038 <AmiBlitz3.ab2@12347>    BNE.w syntaxerr
0003803E <AmiBlitz3.ab2@12348>    TST.b fast
00038042 <AmiBlitz3.ab2@12349>    BNE 'l1
00038046 <AmiBlitz3.ab2@12350>    BSR.w arrevalchk
0003804A <AmiBlitz3.ab2@12351> BRA 'l2
0003804E <AmiBlitz3.ab2@12354>   BSR arreval
00038056 <AmiBlitz3.ab2@12357>   MOVE.w $4(A7),varmode
0003805A <AmiBlitz3.ab2@12358>   BSR.w JL_0_9052
0003805E <AmiBlitz3.ab2@12359> BRA.w calcvar__arloop
00038062 <AmiBlitz3.ab2@12363>   CMP.w #$29,D0
00038066 <AmiBlitz3.ab2@12364>    BNE.w syntaxerr
0003806C <AmiBlitz3.ab2@12365>   SUBQ.w #1,regnum
0003806E <AmiBlitz3.ab2@12366>   ADDQ.w #6,A7
00038072 <AmiBlitz3.ab2@12367>   MOVEM.l (A7)+,A2-A3
0003807A <AmiBlitz3.ab2@12368>   MOVE.w $4(A3),movea5a0+2
00038080 <AmiBlitz3.ab2@12369>   MOVE.l movea5a0,D1
00038084 <AmiBlitz3.ab2@12370>    BSR.w pokela5s
0003808A <AmiBlitz3.ab2@12371>   MOVE.w regnum,D1
0003808E <AmiBlitz3.ab2@12372>   ORI.w #$D5C0,D1                                          ;add.l Dr,a2
00038092 <AmiBlitz3.ab2@12373>    BSR.w writeword
00038098 <AmiBlitz3.ab2@12374>   BTST #$0,$6(A3)
0003809C <AmiBlitz3.ab2@12375>    BEQ.w calcvar__normalar
000380A0 <AmiBlitz3.ab2@12379>   MOVE.w listarfix(PC),D1
000380A4 <AmiBlitz3.ab2@12380>    BSR.w writeword
000380A8 <AmiBlitz3.ab2@12383>   BSR.w get1bytemain
000380AE <AmiBlitz3.ab2@12387>   BTST #$0,$7(A3)
000380B2 <AmiBlitz3.ab2@12388>    BEQ.w calcvar__noppnt
000380B6 <AmiBlitz3.ab2@12389>   CMP.w #$5C,D0
000380BA <AmiBlitz3.ab2@12390>    BNE.w calcvar__pmskip
000380BE <AmiBlitz3.ab2@12391>   MOVE.w calcvar__pfix(PC),D1
000380C2 <AmiBlitz3.ab2@12392>    BSR.w writeword
000380C6 <AmiBlitz3.ab2@12395>   MOVE.w #$8000,D2
000380CA <AmiBlitz3.ab2@12396> BRA.w calcvar__loopml
000380CE <AmiBlitz3.ab2@12399>   MOVE.w #$C000,D2
000380D2 <AmiBlitz3.ab2@12400> BRA.w calcvar__loopml
000380D4 <AmiBlitz3.ab2@12404> calcvar__pfix:   Dc.b $24,$52                                   ;MOVEA.L (A2),A2
000380D8 <AmiBlitz3.ab2@12409>   CMP.w #$28,D0
000380DC <AmiBlitz3.ab2@12410>    BEQ.w noarrerr
000380E4 <AmiBlitz3.ab2@12411>   CMPI.l #$100,$4(A2)
000380E8 <AmiBlitz3.ab2@12412>    BCS.w calcvar__simpvar
000380EE <AmiBlitz3.ab2@12413>   BTST #$0,$7(A3)
000380F2 <AmiBlitz3.ab2@12414>    BEQ.w calcvar__notap
000380F6 <AmiBlitz3.ab2@12418>   CMP.w #$5C,D0
000380FA <AmiBlitz3.ab2@12419>    BEQ.w calcvar__notap
000380FC <AmiBlitz3.ab2@12420>   MOVEQ.l #$00,D2
00038100 <AmiBlitz3.ab2@12421> BRA.w calcvar__simpvar2
00038104 <AmiBlitz3.ab2@12424>   MOVE.w #$8000,D2
0003810C <AmiBlitz3.ab2@12425>   MOVE.w $4(A3),movea5a0+2
00038112 <AmiBlitz3.ab2@12426>   MOVE.l movea5a0,D1
00038116 <AmiBlitz3.ab2@12427>    BSR.w pokela5s                                         ;move.l x(a5),a2
0003811C <AmiBlitz3.ab2@12429>    TST.b debugmode
00038120 <AmiBlitz3.ab2@12430>    BEQ.w 'skip
00038124 <AmiBlitz3.ab2@12431>    MOVE.w #$c320,D1
0003812A <AmiBlitz3.ab2@12432>    JSR Atokejsr
0003812C <AmiBlitz3.ab2@12436>   MOVEQ.l #$00,D3
00038130 <AmiBlitz3.ab2@12439>   CMP.w #$5C,D0
00038134 <AmiBlitz3.ab2@12440>    BNE.w calcvar__done
0003813C <AmiBlitz3.ab2@12441>   CMPI.l #$100,$4(A2)
00038140 <AmiBlitz3.ab2@12442>    BCS.w rongtypeerr
00038142 <AmiBlitz3.ab2@12443>   MOVE.w D2,-(A7)
00038146 <AmiBlitz3.ab2@12444>    BSR.w getparameter2
0003814A <AmiBlitz3.ab2@12445>    BEQ.w syntaxerr
0003814C <AmiBlitz3.ab2@12446>   ADDQ.w #4,A2
00038150 <AmiBlitz3.ab2@12447>    BSR.w findvariable2
00038154 <AmiBlitz3.ab2@12448>    BNE.w noofferr
00038156 <AmiBlitz3.ab2@12449>   MOVE.w (A7)+,D2
00038158 <AmiBlitz3.ab2@12450>   MOVEA.l A2,A3                                             ;pointer to offset
0003815C <AmiBlitz3.ab2@12451>   MOVEA.l $A(A3),A2                                         ;pointer to type
0003815E <AmiBlitz3.ab2@12452>   MOVEQ #0,d1
00038162 <AmiBlitz3.ab2@12453>   MOVE.w 4(a3),d1
00038164 <AmiBlitz3.ab2@12454>   ADD.l d1,d3
0003816A <AmiBlitz3.ab2@12456>   MOVE.l A3,lastoffset_org
0003816E <AmiBlitz3.ab2@12457>   CMP.w #$5B,D0
00038172 <AmiBlitz3.ab2@12458>    BNE.w calcvar__realdone
00038178 <AmiBlitz3.ab2@12459>   BTST #$1,$7(A3)
0003817C <AmiBlitz3.ab2@12460>    BEQ.w rongtypeerr
00038180 <AmiBlitz3.ab2@12461>    BSR.w JL_0_9004
00038184 <AmiBlitz3.ab2@12462>   MOVEM.l A2-A3,-(A7)
0003818A <AmiBlitz3.ab2@12463>   MOVE.w varmode,-(A7)
00038190 <AmiBlitz3.ab2@12464>   MOVE.l lastoffset_org,-(A7)
00038196 <AmiBlitz3.ab2@12465>   MOVE.w pusha2,D1
0003819A <AmiBlitz3.ab2@12466>    BSR.w writeword
0003819C <AmiBlitz3.ab2@12467>   MOVEQ.l #$03,D2                                          ;was 2 >32kb types
000381A6 <AmiBlitz3.ab2@12468>   MOVE.l destpointer,deststore
000381AA <AmiBlitz3.ab2@12469>    BSR.w eval
000381AE <AmiBlitz3.ab2@12470>   CMP.w #$5D,D0
000381B2 <AmiBlitz3.ab2@12471>    BNE.w syntaxerr
000381B8 <AmiBlitz3.ab2@12472>   TST.b fast                                               ;a2,-(a7) array
000381BC <AmiBlitz3.ab2@12473>   BEQ calcvar__loop0_l10
000381C2 <AmiBlitz3.ab2@12477>   MOVE.l destpointer,d1
000381C8 <AmiBlitz3.ab2@12478>   SUB.l deststore,d1
000381CE <AmiBlitz3.ab2@12479>   CMP.l #4,d1
000381D2 <AmiBlitz3.ab2@12480>   BNE calcvar__loop0_l10
000381D8 <AmiBlitz3.ab2@12481>   MOVE.l destpointer,a4
000381DE <AmiBlitz3.ab2@12482>   MOVE.l -4(a4),-6(a4)
000381E4 <AmiBlitz3.ab2@12483>   SUBQ.l #2,destpointer
000381EA <AmiBlitz3.ab2@12484>   CLR.l imm_addr
000381F0 <AmiBlitz3.ab2@12485>   CLR.l load_var_addr
000381F4 <AmiBlitz3.ab2@12486> BRA calcvar__loop0_l20
000381FA <AmiBlitz3.ab2@12489>   MOVE.w pulla2,D1
000381FE <AmiBlitz3.ab2@12490>    BSR.w writeword
00038204 <AmiBlitz3.ab2@12493>   MOVE.l (A7)+,lastoffset_org
0003820A <AmiBlitz3.ab2@12494>   MOVE.w (A7)+,varmode
0003820E <AmiBlitz3.ab2@12495>   MOVEM.l (A7)+,A2-A3
00038214 <AmiBlitz3.ab2@12501>   TST.w debugmode
00038218 <AmiBlitz3.ab2@12502>    BEQ.b calcvar__nobchk
0003821C <AmiBlitz3.ab2@12503>   MOVE.w $8(A3),D1
00038220 <AmiBlitz3.ab2@12504>    BEQ.b calcvar__nobchk                                   ;no [0] checks!
00038226 <AmiBlitz3.ab2@12508>   MOVE.w D1,brchkcode+2
0003822C <AmiBlitz3.ab2@12509>   MOVE.w regnum,D1
0003822E <AmiBlitz3.ab2@12510>   LSL.w #8,D1
00038230 <AmiBlitz3.ab2@12511>   LSL.w #1,D1
00038234 <AmiBlitz3.ab2@12512>   OR.w brchkcode0(PC),D1
0003823A <AmiBlitz3.ab2@12513>   MOVE.w D1,brchkcode
0003823E <AmiBlitz3.ab2@12514>   MOVE.l brchkcode(PC),D1
00038242 <AmiBlitz3.ab2@12515>    BSR.w writelong
00038246 <AmiBlitz3.ab2@12516>   MOVE.l brchkcode+4(PC),D1
0003824A <AmiBlitz3.ab2@12517>    BSR.w writelong
0003824E <AmiBlitz3.ab2@12518>   MOVE.w brchkcode+8(PC),D1
00038252 <AmiBlitz3.ab2@12519>    BSR.w writeword
00038254 <AmiBlitz3.ab2@12522>   MOVEQ.l #$04,D1
0003825A <AmiBlitz3.ab2@12523>   BTST #$0,$7(A3)
0003825E <AmiBlitz3.ab2@12524>    BNE.w calcvar__dothemul
00038262 <AmiBlitz3.ab2@12525>   MOVE.w $8(A2),D1
00038266 <AmiBlitz3.ab2@12528>   BSR.w JL_0_B6DE
0003826C <AmiBlitz3.ab2@12529>   MOVE.w addrega2,D1
00038272 <AmiBlitz3.ab2@12530>   OR.w regnum,D1
00038276 <AmiBlitz3.ab2@12531>    OR.w #$100,d1                                           ;>32kb types
0003827A <AmiBlitz3.ab2@12532>    BSR.w writeword
0003827E <AmiBlitz3.ab2@12533>    BSR.w get1bytemain
00038280 <AmiBlitz3.ab2@12534>   MOVEQ.l #$00,D3
00038284 <AmiBlitz3.ab2@12535>   MOVE.w #$8000,D2
0003828A <AmiBlitz3.ab2@12538>   BTST #$0,$7(A3)
0003828E <AmiBlitz3.ab2@12539>    BNE.w calcvar__pointer
00038292 <AmiBlitz3.ab2@12540> BRA.w calcvar__loop0
00038296 <AmiBlitz3.ab2@12544>  CMP.w #$5C,D0
0003829A <AmiBlitz3.ab2@12545>    BNE.w calcvar__done3
0003829C <AmiBlitz3.ab2@12546>   TST.w D3
000382A0 <AmiBlitz3.ab2@12547>    BNE.w calcvar__pskip
000382A6 <AmiBlitz3.ab2@12548>   MOVE.w movea0,D1
000382AA <AmiBlitz3.ab2@12549>    BSR.w writeword
000382AE <AmiBlitz3.ab2@12550> BRA.w calcvar__pmore
000382B4 <AmiBlitz3.ab2@12553>   MOVE.w D3,movea0a0+2
000382BA <AmiBlitz3.ab2@12554>   MOVE.l movea0a0,D1
000382BE <AmiBlitz3.ab2@12555>    BSR.w writelong
000382C4 <AmiBlitz3.ab2@12558>   BTST #$2,$7(A3)
000382C8 <AmiBlitz3.ab2@12559>    BEQ.w calcvar__loopml
000382CE <AmiBlitz3.ab2@12560>   MOVE.l adda0a0,D1
000382D2 <AmiBlitz3.ab2@12561>    BSR.w writelong
000382D6 <AmiBlitz3.ab2@12562> BRA.w calcvar__loopml
000382DA <AmiBlitz3.ab2@12565>   BSET #$E,D2
000382E0 <AmiBlitz3.ab2@12566>   BTST #$2,$7(A3)
000382E4 <AmiBlitz3.ab2@12567>    BNE.w calcvar__done
000382E8 <AmiBlitz3.ab2@12568>   BSET #$D,D2
000382F0 <AmiBlitz3.ab2@12571>   CMPI.l #$100,$4(A2)
000382F4 <AmiBlitz3.ab2@12572>    BCC.w calcvar__done2
000382F8 <AmiBlitz3.ab2@12573>   MOVE.b $7(A2),D2
000382FC <AmiBlitz3.ab2@12576> BRA.w JL_0_9004
00038300 <AmiBlitz3.ab2@12579>   MOVE.w $6(A2),D2
00038304 <AmiBlitz3.ab2@12582>   MOVE.w $4(A3),D3
0003830A <AmiBlitz3.ab2@12583>   BTST #$0,$7(A3)
0003830E <AmiBlitz3.ab2@12584>    BEQ.w calcvar__nopoint
00038312 <AmiBlitz3.ab2@12585>   BSET #$E,D2
00038314 <AmiBlitz3.ab2@12588> RTS
00038318 <AmiBlitz3.ab2@12592> brchkcode0:  Dc.b $B0,$7C,$00,$00                          ;CMP.W   #$0000,D0
0003831C <AmiBlitz3.ab2@12593> brchkcode:   Dc.b $B0,$7C :             Dc.b $00,$00       ;CMP.W   #$0000,D0
0003831E <AmiBlitz3.ab2@12594>              Dc.b $65,$04                                  ;BCS.B   brchkcode__ok
00038320 <AmiBlitz3.ab2@12595>              Dc.b $70,$02                                  ;MOVEQ   #$02,D0
00038322 <AmiBlitz3.ab2@12596>              Dc.b $4E,$40                                  ;TRAP    #00
00038328 <AmiBlitz3.ab2@12604>   TST.w varmode
0003832C <AmiBlitz3.ab2@12605>    BEQ.w writeword
00038330 <AmiBlitz3.ab2@12606>   BCLR #$0,D1
00038334 <AmiBlitz3.ab2@12607> BRA.w writeword
0003833A <AmiBlitz3.ab2@12610>   TST.w varmode
0003833E <AmiBlitz3.ab2@12611>    BEQ.w writeword
00038342 <AmiBlitz3.ab2@12612>   BCLR #$9,D1
00038346 <AmiBlitz3.ab2@12613> BRA.w writeword
0003834C <AmiBlitz3.ab2@12616>   TST.w proceduremode
00038350 <AmiBlitz3.ab2@12617>    BEQ.w writelong
00038354 <AmiBlitz3.ab2@12618>   BCLR #$19,D1
00038358 <AmiBlitz3.ab2@12619> BRA.w writelong
0003835E <AmiBlitz3.ab2@12622>   TST.w varmode
00038362 <AmiBlitz3.ab2@12623>   BEQ.w writelong
00038366 <AmiBlitz3.ab2@12624>   BCLR #$10,D1
0003836C <AmiBlitz3.ab2@12627>   ADDQ.l #1,destpointer
00038374 <AmiBlitz3.ab2@12628>   BCLR #$0,destpointer+3
0003837A <AmiBlitz3.ab2@12629>   MOVEA.l destpointer,A4
00038380 <AmiBlitz3.ab2@12630>   CMPA.l destbufferend,A4
00038384 <AmiBlitz3.ab2@12631>    BCC.w writeword__overa
00038386 <AmiBlitz3.ab2@12632>   MOVE.l D1,(A4)+
0003838C <AmiBlitz3.ab2@12635>   MOVE.l A4,destpointer
00038390 <AmiBlitz3.ab2@12636>   CMPA.l bigpc(PC),A4
00038394 <AmiBlitz3.ab2@12637>    BHI.w writeword__nbp
00038396 <AmiBlitz3.ab2@12638> RTS
0003839E <AmiBlitz3.ab2@12641>   MOVE.w #$FFFF,dontwrite                                  ;#-1 org source
000383A4 <AmiBlitz3.ab2@12642>   CLR.b fast
000383AA <AmiBlitz3.ab2@12643>   CLR.b fpu
000383B0 <AmiBlitz3.ab2@12644>   CLR.b iee
000383B2 <AmiBlitz3.ab2@12645>   ADDQ.w #4,A4
000383B6 <AmiBlitz3.ab2@12646> BRA.w writeword__msa
000383BC <AmiBlitz3.ab2@12652>   ADDQ.l #1,destpointer
000383C4 <AmiBlitz3.ab2@12653>   BCLR #$0,destpointer+3
000383CA <AmiBlitz3.ab2@12654>   MOVEA.l destpointer,A4
000383D0 <AmiBlitz3.ab2@12655>   CMPA.l destbufferend,A4
000383D4 <AmiBlitz3.ab2@12656>    BCC.w writeword__over
000383D6 <AmiBlitz3.ab2@12657>   MOVE.w D1,(A4)+
000383DC <AmiBlitz3.ab2@12660>   MOVE.l A4,destpointer
000383E0 <AmiBlitz3.ab2@12661>   CMPA.l bigpc(PC),A4
000383E4 <AmiBlitz3.ab2@12662>    BHI.w writeword__nbp
000383E6 <AmiBlitz3.ab2@12663> RTS
000383EC <AmiBlitz3.ab2@12666>   ADDQ.l #1,destpointer
000383F4 <AmiBlitz3.ab2@12667>   BCLR #$0,destpointer+3
000383FA <AmiBlitz3.ab2@12668>   MOVEA.l destpointer,A4
00038400 <AmiBlitz3.ab2@12669>   CMPA.l destbufferend,A4
00038404 <AmiBlitz3.ab2@12670>    BCC.w writeword__over
00038406 <AmiBlitz3.ab2@12671>   MOVE.w D1,(A4)+
0003840C <AmiBlitz3.ab2@12672>   MOVE.l A4,destpointer
00038410 <AmiBlitz3.ab2@12673>   CMPA.l bigpc(PC),A4
00038414 <AmiBlitz3.ab2@12674>    BHI.w writeword__nbp
00038416 <AmiBlitz3.ab2@12675> RTS
0003841C <AmiBlitz3.ab2@12678>   TST.w cfetchmode
00038420 <AmiBlitz3.ab2@12679>   BNE.w writeword__nbp2
00038426 <AmiBlitz3.ab2@12680>   MOVE.l A4,bigpc
00038428 <AmiBlitz3.ab2@12683> RTS
00038430 <AmiBlitz3.ab2@12686>   MOVE.w #$FFFF,dontwrite                                  ;#-1 org source
00038432 <AmiBlitz3.ab2@12687>   ADDQ.w #2,A4
00038438 <AmiBlitz3.ab2@12688>   CLR.b fast
0003843E <AmiBlitz3.ab2@12689>   CLR.b fpu
00038444 <AmiBlitz3.ab2@12690>   CLR.b iee
00038448 <AmiBlitz3.ab2@12691> BRA.w writeword__ms
0003844E <AmiBlitz3.ab2@12695>   MOVEA.l destpointer,A4
00038454 <AmiBlitz3.ab2@12696>   CMPA.l destbufferend,A4
00038458 <AmiBlitz3.ab2@12697>    BCC.w writebyte__over
0003845A <AmiBlitz3.ab2@12698>   MOVE.b D1,(A4)+
00038460 <AmiBlitz3.ab2@12701>   MOVE.l A4,destpointer
00038464 <AmiBlitz3.ab2@12702>   CMPA.l bigpc(PC),A4
00038468 <AmiBlitz3.ab2@12703>    BHI.w writebyte__nbp
0003846A <AmiBlitz3.ab2@12704> RTS
00038470 <AmiBlitz3.ab2@12707>   TST.w cfetchmode
00038474 <AmiBlitz3.ab2@12708>    BNE.w writebyte__nbp2
0003847A <AmiBlitz3.ab2@12709>   MOVE.l A4,bigpc
0003847C <AmiBlitz3.ab2@12712> RTS
00038484 <AmiBlitz3.ab2@12715>   MOVE.w #-1,dontwrite
00038486 <AmiBlitz3.ab2@12716>   ADDQ.w #1,A4
0003848C <AmiBlitz3.ab2@12717>   CLR.b fast
00038492 <AmiBlitz3.ab2@12718>   CLR.b fpu
00038498 <AmiBlitz3.ab2@12719>   CLR.b iee
0003849C <AmiBlitz3.ab2@12720> BRA.w writebyte__ms
000384A0 <AmiBlitz3.ab2@12723> bigpc:   Ds.l 1
000384A2 <AmiBlitz3.ab2@12727>   MOVE.w (A0)+,D1
000384A6 <AmiBlitz3.ab2@12728>   BSR.w writeword
000384A8 <AmiBlitz3.ab2@12731>     CMPA.l A1,A0
000384AC <AmiBlitz3.ab2@12732>     BCC.w pokecode__done
000384AE <AmiBlitz3.ab2@12733>       MOVE.w (A0)+,D1
000384B2 <AmiBlitz3.ab2@12734>       BSR.w writeword
000384B6 <AmiBlitz3.ab2@12735> BRA.w pokecode__loop
000384B8 <AmiBlitz3.ab2@12738> RTS
000384BA <AmiBlitz3.ab2@12741>   MOVE.w (A0)+,D1
000384BE <AmiBlitz3.ab2@12742>   BSR.w writeword
000384C0 <AmiBlitz3.ab2@12743>   CMPA.l A1,A0
000384C4 <AmiBlitz3.ab2@12744>   BCS.w pokecode2
000384C6 <AmiBlitz3.ab2@12745> RTS
000384CC <AmiBlitz3.ab2@12751>   TST.b iniffcommand
000384D0 <AmiBlitz3.ab2@12752>   BEQ 'l1
000384D4 <AmiBlitz3.ab2@12753>     MOVE.w #$4880,D1
000384DA <AmiBlitz3.ab2@12754>     OR.w regnum,D1
000384DE <AmiBlitz3.ab2@12755>     BSR writeword
000384E0 <AmiBlitz3.ab2@12758> RTS
000384E4 <AmiBlitz3.ab2@12761>   BSR.w convert_byte_to_word
000384EA <AmiBlitz3.ab2@12764>   TST.b iee
000384EE <AmiBlitz3.ab2@12765>   BEQ 'old
000384F2 <AmiBlitz3.ab2@12766>   CMP.b #5,d2
000384F6 <AmiBlitz3.ab2@12767>   BEQ wtof
000384FA <AmiBlitz3.ab2@12770>   MOVE.w #$48C0,D1
00038500 <AmiBlitz3.ab2@12771>   OR.w regnum,D1
00038504 <AmiBlitz3.ab2@12772> BRA.w writeword
00038506 <AmiBlitz3.ab2@12775>   MOVEQ #0,d0
0003850C <AmiBlitz3.ab2@12776>   MOVE.w regnum,d0
0003850E <AmiBlitz3.ab2@12777>   ASL.l #7,d0
00038514 <AmiBlitz3.ab2@12778>   MOVE.l #$f2005000,d1
00038516 <AmiBlitz3.ab2@12779>   OR.l d0,d1
00038518 <AmiBlitz3.ab2@12780>   ASL.l #1,d0
0003851A <AmiBlitz3.ab2@12781>   ASL.l #8,d0
0003851C <AmiBlitz3.ab2@12782>   OR.l d0,d1
00038520 <AmiBlitz3.ab2@12783> BRA writelong
00038524 <AmiBlitz3.ab2@12787>   BSR.w convert_byte_to_word
00038528 <AmiBlitz3.ab2@12790>   MOVE.w #$4840,D1
0003852E <AmiBlitz3.ab2@12791>   OR.w regnum,D1
00038532 <AmiBlitz3.ab2@12792>    BSR.w writeword
00038536 <AmiBlitz3.ab2@12793>   MOVE.w #$4240,D1
0003853C <AmiBlitz3.ab2@12794>   OR.w regnum,D1
00038540 <AmiBlitz3.ab2@12795> BRA.w writeword
00038544 <AmiBlitz3.ab2@12799>   CMP.w #$ffdc,d1
00038548 <AmiBlitz3.ab2@12800>   BNE 'negfpu
0003854A <AmiBlitz3.ab2@12801>   MOVEQ #0,d0
00038550 <AmiBlitz3.ab2@12802>   MOVE.w regnum,d0
00038552 <AmiBlitz3.ab2@12803>   ASL.l #7,d0
00038558 <AmiBlitz3.ab2@12804>   MOVE.l #$f2004000,d1
0003855A <AmiBlitz3.ab2@12805>   OR.l d0,d1
0003855C <AmiBlitz3.ab2@12806>   ASL.l #1,d0
0003855E <AmiBlitz3.ab2@12807>   ASL.l #8,d0
00038560 <AmiBlitz3.ab2@12808>   OR.l d0,d1
00038564 <AmiBlitz3.ab2@12809> BRA writelong
00038566 <AmiBlitz3.ab2@12813>   MOVEQ #0,d1
0003856C <AmiBlitz3.ab2@12814>   MOVE.w regnum,d1                                         ;fpu neg
0003856E <AmiBlitz3.ab2@12815>   ASL.l #7,d1
00038574 <AmiBlitz3.ab2@12816>   OR.l #$f200001a,d1
00038576 <AmiBlitz3.ab2@12817>   MOVE.l d0,-(a7)
00038578 <AmiBlitz3.ab2@12818>   MOVEQ #0,d0
0003857E <AmiBlitz3.ab2@12819>   MOVE.w regnum,d0
00038580 <AmiBlitz3.ab2@12820>   ASL.l #8,d0
00038582 <AmiBlitz3.ab2@12821>   ASL.l #2,d0
00038584 <AmiBlitz3.ab2@12822>   OR.l d0,d1
00038586 <AmiBlitz3.ab2@12823>   MOVE.l (a7)+,d0
0003858A <AmiBlitz3.ab2@12824> BRA writelong
00038590 <AmiBlitz3.ab2@12827>    TST.b iee
00038594 <AmiBlitz3.ab2@12828>    BNE wtof
00038598 <AmiBlitz3.ab2@12829>    BSR.w convert_byte_to_long
0003859C <AmiBlitz3.ab2@12832>    MOVE.w #$FFDC,D1
000385A2 <AmiBlitz3.ab2@12835>    TST.b iee
000385A6 <AmiBlitz3.ab2@12836>    BNE ltof
000385AC <AmiBlitz3.ab2@12837>    MOVE.w D1,libjsr+2
000385B0 <AmiBlitz3.ab2@12838>    BSR.w JL_0_AD40
000385B2 <AmiBlitz3.ab2@12839>   MOVE.l D4,D1
000385B6 <AmiBlitz3.ab2@12840>    BSR.w JL_0_AD38
000385BA <AmiBlitz3.ab2@12841>   MOVE.w #$C900,D1
000385BE <AmiBlitz3.ab2@12842>    BSR.w Atokejsr
000385C2 <AmiBlitz3.ab2@12843>    BSR.w JL_0_A352
000385C8 <AmiBlitz3.ab2@12844>   MOVE.l libjsr,D1
000385CC <AmiBlitz3.ab2@12845>    BSR.w writelong
000385D0 <AmiBlitz3.ab2@12846>    BSR.w JL_0_A36E
000385D2 <AmiBlitz3.ab2@12847>   MOVE.l D5,D1
000385D6 <AmiBlitz3.ab2@12848> BRA.w JL_0_AD38
000385D8 <AmiBlitz3.ab2@12851> RTS
000385DC <AmiBlitz3.ab2@12854>   MOVE.w #$C317,D1
000385E2 <AmiBlitz3.ab2@12855>   TST.b typecheck
000385E6 <AmiBlitz3.ab2@12856>   BEQ 'l1
000385EC <AmiBlitz3.ab2@12857>    TST.b notypecheck
000385F0 <AmiBlitz3.ab2@12858>    BNE 'l1
000385F6 <AmiBlitz3.ab2@12859>    TST.l lasttoken
000385FA <AmiBlitz3.ab2@12860>    BEQ typeerror
00038600 <AmiBlitz3.ab2@12864>   TST.b debugmode
00038604 <AmiBlitz3.ab2@12865>    BEQ.w JL_0_9696
0003860C <AmiBlitz3.ab2@12866>   BTST #$7,overflowcheck
00038610 <AmiBlitz3.ab2@12867>    BEQ.w JL_0_9696
00038616 <AmiBlitz3.ab2@12868>   TST.w cfetchmode
0003861A <AmiBlitz3.ab2@12869>    BNE.w JL_0_9696
00038620 <AmiBlitz3.ab2@12870>   TST.w regnum
00038624 <AmiBlitz3.ab2@12871>    BEQ.w JL_0_968A
00038626 <AmiBlitz3.ab2@12872>   MOVE.w D1,-(A7)
0003862A <AmiBlitz3.ab2@12873>   MOVE.w JL_0_9698(PC),D1
0003862E <AmiBlitz3.ab2@12874>    BSR.w writeword
00038634 <AmiBlitz3.ab2@12875>   MOVE.w regnum,D1
00038638 <AmiBlitz3.ab2@12876>   OR.w L_0_969C(PC),D1
0003863C <AmiBlitz3.ab2@12877>    BSR.w writeword
0003863E <AmiBlitz3.ab2@12878>   MOVE.w (A7)+,D1
00038642 <AmiBlitz3.ab2@12879>    BSR.w JL_0_968A
00038646 <AmiBlitz3.ab2@12880>   MOVE.w L_0_969A(PC),D1
0003864A <AmiBlitz3.ab2@12881> BRA.w writeword
0003864E <AmiBlitz3.ab2@12885>   MOVEM.l D0-D7/A0-A6,-(A7)
00038652 <AmiBlitz3.ab2@12886>    BSR.w Atokejsr
00038656 <AmiBlitz3.ab2@12887>   MOVEM.l (A7)+,D0-D7/A0-A6
00038658 <AmiBlitz3.ab2@12890> RTS
0003865A <AmiBlitz3.ab2@12893>   MOVE.l D0,-(A7)
0003865C <AmiBlitz3.ab2@12896>   MOVE.l (A7)+,D0
0003865E <AmiBlitz3.ab2@12899>   MOVE.l D0,D0
00038662 <AmiBlitz3.ab2@12902>   BSR.w convert_word_to_long
00038668 <AmiBlitz3.ab2@12903>   TST.b iee
0003866C <AmiBlitz3.ab2@12904>   BEQ 'old
00038670 <AmiBlitz3.ab2@12905>   CMP.b #5,d2
00038674 <AmiBlitz3.ab2@12906>   BNE 'old
00038676 <AmiBlitz3.ab2@12907> RTS
0003867A <AmiBlitz3.ab2@12910> BRA.w JL_0_9600
0003867E <AmiBlitz3.ab2@12914>   MOVE.w #$C316,D1
00038684 <AmiBlitz3.ab2@12915>   TST.b typecheck
00038688 <AmiBlitz3.ab2@12916>   BEQ 'l1
0003868E <AmiBlitz3.ab2@12917>   TST.b peekaddrsize
00038692 <AmiBlitz3.ab2@12918>   BNE 'l1
00038698 <AmiBlitz3.ab2@12919>   TST.b notypecheck
0003869C <AmiBlitz3.ab2@12920>   BNE 'l1
000386A2 <AmiBlitz3.ab2@12921>   TST.l lasttoken
000386A6 <AmiBlitz3.ab2@12922>   BEQ typeerror
000386AA <AmiBlitz3.ab2@12925> BRA.w JL_0_963A
000386AE <AmiBlitz3.ab2@12929>   MOVE.w #$C318,D1
000386B4 <AmiBlitz3.ab2@12930>   TST.b typecheck
000386B8 <AmiBlitz3.ab2@12931>   BEQ 'l1
000386BE <AmiBlitz3.ab2@12932>   TST.b peekaddrsize
000386C2 <AmiBlitz3.ab2@12933>   BNE 'l1
000386C8 <AmiBlitz3.ab2@12934>   TST.b notypecheck
000386CC <AmiBlitz3.ab2@12935>   BNE 'l1
000386D2 <AmiBlitz3.ab2@12936>   TST.l lasttoken
000386D6 <AmiBlitz3.ab2@12937>   BEQ typeerror
000386DA <AmiBlitz3.ab2@12940> BRA.w JL_0_963A
000386DE <AmiBlitz3.ab2@12944>   MOVE.w #$C318,D1
000386E4 <AmiBlitz3.ab2@12945>   TST.b typecheck
000386E8 <AmiBlitz3.ab2@12946>   BEQ 'l1
000386EE <AmiBlitz3.ab2@12947>   TST.b notypecheck
000386F2 <AmiBlitz3.ab2@12948>   BNE 'l1
000386F8 <AmiBlitz3.ab2@12949>   TST.l lasttoken
000386FC <AmiBlitz3.ab2@12950>   BEQ typeerror
00038700 <AmiBlitz3.ab2@12953>   BSR.w JL_0_963A
00038704 <AmiBlitz3.ab2@12954> BRA.w convert_word_to_quick
00038708 <AmiBlitz3.ab2@12958> BRA.w JL_0_9600
0003870A <AmiBlitz3.ab2@12962> RTS
0003870E <AmiBlitz3.ab2@12966>   MOVE.w #$C319,D1
00038714 <AmiBlitz3.ab2@12967>   TST.b typecheck
00038718 <AmiBlitz3.ab2@12968>   BEQ 'l1
0003871E <AmiBlitz3.ab2@12969>   TST.b notypecheck
00038722 <AmiBlitz3.ab2@12970>   BNE 'l1
00038728 <AmiBlitz3.ab2@12971>   TST.l lasttoken
0003872C <AmiBlitz3.ab2@12972>   BEQ typeerror
00038730 <AmiBlitz3.ab2@12975>   BSR.w JL_0_963A
00038734 <AmiBlitz3.ab2@12978>   MOVE.w #$4240,D1
0003873A <AmiBlitz3.ab2@12979>   OR.w regnum,D1
0003873E <AmiBlitz3.ab2@12980>   BSR.w writeword
00038742 <AmiBlitz3.ab2@12981>   MOVE.w #$4840,D1
00038748 <AmiBlitz3.ab2@12982>   OR.w regnum,D1
0003874C <AmiBlitz3.ab2@12983> BRA.w writeword
00038750 <AmiBlitz3.ab2@12987> BRA.w JL_0_96D0
00038754 <AmiBlitz3.ab2@12991>   BSR.w JL_0_96D0
00038758 <AmiBlitz3.ab2@12992> BRA.w convert_word_to_long
0003875A <AmiBlitz3.ab2@12997>   MOVEQ #0,d0
00038760 <AmiBlitz3.ab2@12998>   MOVE.w regnum,d0
00038762 <AmiBlitz3.ab2@12999>   ASL.l #7,d0
00038768 <AmiBlitz3.ab2@13000>   MOVE.l #$f2004000,d1
0003876A <AmiBlitz3.ab2@13001>   OR.l d0,d1
0003876C <AmiBlitz3.ab2@13002>   ASL.l #1,d0
0003876E <AmiBlitz3.ab2@13003>   ASL.l #8,d0
00038770 <AmiBlitz3.ab2@13004>   OR.l d0,d1
00038774 <AmiBlitz3.ab2@13005>   BSR writelong
0003877A <AmiBlitz3.ab2@13006>   MOVE.w regnum,d0
0003877C <AmiBlitz3.ab2@13007>   ASL.l #7,d0
00038782 <AmiBlitz3.ab2@13008>   MOVE.l #$f23c4423,d1                                     ;fmul.s #1/65536,fpreg
00038784 <AmiBlitz3.ab2@13009>   OR.w d0,d1
00038788 <AmiBlitz3.ab2@13010>   BSR writelong
0003878E <AmiBlitz3.ab2@13011>   MOVE.l #$37800000,d1
00038792 <AmiBlitz3.ab2@13012>   BSR writelong
00038794 <AmiBlitz3.ab2@13013> RTS
0003879A <AmiBlitz3.ab2@13017>   TST.b iee
0003879E <AmiBlitz3.ab2@13018>   BNE qtof
000387A2 <AmiBlitz3.ab2@13019>   MOVE.w #$D300,D1
000387A4 <AmiBlitz3.ab2@13022>   MOVE.w D1,-(A7)
000387A8 <AmiBlitz3.ab2@13023>    BSR.w JL_0_AD40
000387AA <AmiBlitz3.ab2@13024>   MOVE.l D4,D1
000387AE <AmiBlitz3.ab2@13025>    BSR.w JL_0_AD38
000387B2 <AmiBlitz3.ab2@13026>    BSR.w JL_0_A352
000387B4 <AmiBlitz3.ab2@13027>   MOVE.w (A7)+,D1
000387B8 <AmiBlitz3.ab2@13028>    BSR.w Atokejsr
000387BC <AmiBlitz3.ab2@13029>    BSR.w JL_0_A36E
000387BE <AmiBlitz3.ab2@13030>   MOVE.l D5,D1
000387C2 <AmiBlitz3.ab2@13031> BRA.w JL_0_AD38
000387C4 <AmiBlitz3.ab2@13035> RTS
000387CA <AmiBlitz3.ab2@13038>   TST.b typecheck
000387CE <AmiBlitz3.ab2@13039>   BEQ 'l1
000387D4 <AmiBlitz3.ab2@13040>   TST.b notypecheck
000387D8 <AmiBlitz3.ab2@13041>   BNE 'l1
000387DE <AmiBlitz3.ab2@13042>   TST.l lasttoken
000387E2 <AmiBlitz3.ab2@13043>   BEQ typeerror
000387E8 <AmiBlitz3.ab2@13046>   TST.b iee
000387EC <AmiBlitz3.ab2@13047>   BNE ftol
000387F0 <AmiBlitz3.ab2@13048>   MOVE.w #$C31A,D1
000387F4 <AmiBlitz3.ab2@13049>   BSR.w JL_0_963A
000387F8 <AmiBlitz3.ab2@13050>   BSR.w JL_0_974A
000387FC <AmiBlitz3.ab2@13051> BRA.w convert_long_to_byte
000387FE <AmiBlitz3.ab2@13055> RTS
00038804 <AmiBlitz3.ab2@13058>   TST.b typecheck
00038808 <AmiBlitz3.ab2@13059>   BEQ 'l1
0003880E <AmiBlitz3.ab2@13060>   TST.b notypecheck
00038812 <AmiBlitz3.ab2@13061>   BNE 'l1
00038818 <AmiBlitz3.ab2@13062>   TST.l lasttoken
0003881C <AmiBlitz3.ab2@13063>   BEQ typeerror
00038822 <AmiBlitz3.ab2@13066>   TST.b iee
00038826 <AmiBlitz3.ab2@13067>   BNE ftol
0003882A <AmiBlitz3.ab2@13068>   MOVE.w #$C31B,D1
0003882E <AmiBlitz3.ab2@13069>   BSR.w JL_0_963A
00038832 <AmiBlitz3.ab2@13070>   BSR.w JL_0_974A
00038836 <AmiBlitz3.ab2@13071> BRA.w convert_long_to_word
00038838 <AmiBlitz3.ab2@13075> RTS
0003883E <AmiBlitz3.ab2@13078>   TST.b iee
00038842 <AmiBlitz3.ab2@13079>   BNE ftol
00038846 <AmiBlitz3.ab2@13080>   MOVE.w #$C31C,D1
0003884A <AmiBlitz3.ab2@13081>   BSR.w JL_0_963A
0003884E <AmiBlitz3.ab2@13084>   MOVE.w #$FFE2,D1
00038852 <AmiBlitz3.ab2@13085> BRA.w JL_0_9604
00038854 <AmiBlitz3.ab2@13088>   MOVE.l d0,-(a7)
00038856 <AmiBlitz3.ab2@13089>   MOVEQ #0,d0
0003885C <AmiBlitz3.ab2@13090>   MOVE.w regnum,d0
0003885E <AmiBlitz3.ab2@13091>   ASL.l #7,d0
00038864 <AmiBlitz3.ab2@13092>   MOVE.l #$f2006000,d1
00038866 <AmiBlitz3.ab2@13093>   OR.l d0,d1
00038868 <AmiBlitz3.ab2@13094>   ASL.l #1,d0
0003886A <AmiBlitz3.ab2@13095>   ASL.l #8,d0
0003886C <AmiBlitz3.ab2@13096>   OR.l d0,d1
0003886E <AmiBlitz3.ab2@13097>   MOVE.l (a7)+,d0
00038872 <AmiBlitz3.ab2@13098> BRA writelong
00038874 <AmiBlitz3.ab2@13102>   MOVE.l d0,-(a7)
00038876 <AmiBlitz3.ab2@13103>   MOVEQ #0,d0
0003887C <AmiBlitz3.ab2@13104>   MOVE.l #$f23c4023,d1
00038882 <AmiBlitz3.ab2@13105>   MOVE.w regnum,d0
00038884 <AmiBlitz3.ab2@13106>   ASL.l #7,d0
00038886 <AmiBlitz3.ab2@13107>   OR.l d0,d1
0003888A <AmiBlitz3.ab2@13108>   BSR writelong
00038890 <AmiBlitz3.ab2@13109>   MOVE.l #$00010000,d1
00038894 <AmiBlitz3.ab2@13110>   BSR writelong
0003889A <AmiBlitz3.ab2@13111>   MOVE.w regnum,d0
0003889C <AmiBlitz3.ab2@13112>   ASL.l #7,d0
000388A2 <AmiBlitz3.ab2@13113>   MOVE.l #$f2006000,d1
000388A4 <AmiBlitz3.ab2@13114>   OR.l d0,d1
000388A6 <AmiBlitz3.ab2@13115>   ASL.l #1,d0
000388A8 <AmiBlitz3.ab2@13116>   ASL.l #8,d0
000388AA <AmiBlitz3.ab2@13117>   OR.l d0,d1
000388AE <AmiBlitz3.ab2@13118>   BSR writelong
000388B0 <AmiBlitz3.ab2@13119>   MOVE.l (a7)+,d0
000388B2 <AmiBlitz3.ab2@13120> RTS
000388B4 <AmiBlitz3.ab2@13124> RTS
000388BA <AmiBlitz3.ab2@13128>   TST.b iee
000388BE <AmiBlitz3.ab2@13129>   BNE ftoq
000388C2 <AmiBlitz3.ab2@13130>   MOVE.w #$C31B,D1
000388C6 <AmiBlitz3.ab2@13131>   BSR.w JL_0_963A
000388CA <AmiBlitz3.ab2@13132>   MOVE.w #$D301,D1
000388CE <AmiBlitz3.ab2@13133> BRA.w JL_0_96FC
000388D4 <AmiBlitz3.ab2@13138>    TST.l lasttoken
000388D8 <AmiBlitz3.ab2@13139>    BNE 'l1
000388DC <AmiBlitz3.ab2@13140> BRA error_convert_types
000388E4 <AmiBlitz3.ab2@13143>   CMP.b #2,optistring
000388E8 <AmiBlitz3.ab2@13144>   BEQ JLrts
000388EE <AmiBlitz3.ab2@13145>   MOVE.w stol,D1
000388F2 <AmiBlitz3.ab2@13146>   BSR.w writeword
000388FA <AmiBlitz3.ab2@13147>   CMPI.w #$2,sbgot
000388FE <AmiBlitz3.ab2@13148>   BCS.w sbtolong
00038902 <AmiBlitz3.ab2@13149>   MOVE.w ceos(PC),D1
00038906 <AmiBlitz3.ab2@13150>   BSR.w writeword
0003890C <AmiBlitz3.ab2@13153>   MOVE.w regnum,D1
0003890E <AmiBlitz3.ab2@13154>   LSL.w #8,D1
00038910 <AmiBlitz3.ab2@13155>   LSL.w #1,D1
00038918 <AmiBlitz3.ab2@13156>   CMPI.w #$2,sbgot
0003891C <AmiBlitz3.ab2@13157>   BCS.w JL_0_98E8
00038922 <AmiBlitz3.ab2@13158>   MOVE.w a2offset,D3
00038928 <AmiBlitz3.ab2@13159>   SUB.w thisstuse,D3
0003892C <AmiBlitz3.ab2@13160>   CMP.w #$6,D3
00038930 <AmiBlitz3.ab2@13161>   BNE.w JL_0_98D4b
00038936 <AmiBlitz3.ab2@13162>   OR.w movestst2,D1
0003893A <AmiBlitz3.ab2@13163>   BSR.w writeword
00038940 <AmiBlitz3.ab2@13164>   LEA movestst2+2,A0
00038946 <AmiBlitz3.ab2@13165>   LEA movestst2f,A1
0003894A <AmiBlitz3.ab2@13166> BRA.w pokecode2
00038950 <AmiBlitz3.ab2@13170>   OR.w movea7dn,D1
00038954 <AmiBlitz3.ab2@13171>   BSR.w writeword
0003895A <AmiBlitz3.ab2@13172>   MOVE.l #0,D1
0003895E <AmiBlitz3.ab2@13173> BRA.w writeword
00038964 <AmiBlitz3.ab2@13177>   ADDQ.w #1,fuckpos
00038968 <AmiBlitz3.ab2@13178>   BSR.w writeconvertcode
0003896E <AmiBlitz3.ab2@13179>   SUBQ.w #1,fuckpos
00038970 <AmiBlitz3.ab2@13181> RTS
00038972 <AmiBlitz3.ab2@13185>   MOVE.w D3,D1
00038974 <AmiBlitz3.ab2@13186>   SUBQ.w #1,D1
00038978 <AmiBlitz3.ab2@13187>   MULU #$7,D1
0003897A <AmiBlitz3.ab2@13188>   ADD.w D2,D1
0003897C <AmiBlitz3.ab2@13189>   SUBQ.w #1,D1
0003897E <AmiBlitz3.ab2@13190>   LSL.w #2,D1
00038984 <AmiBlitz3.ab2@13191>   LEA convtable,A0
00038988 <AmiBlitz3.ab2@13192>   MOVE.l $0(A0,D1.W),D1
0003898C <AmiBlitz3.ab2@13193>   BEQ.w JL_0_97A2
0003898E <AmiBlitz3.ab2@13194>     MOVEA.l D1,A0
00038992 <AmiBlitz3.ab2@13195>     CMP.b #$ff,d3
00038996 <AmiBlitz3.ab2@13196>     BEQ JL_0_97A2
00038998 <AmiBlitz3.ab2@13197> JMP (A0)
0003899A <AmiBlitz3.ab2@13200> RTS
0003899E <AmiBlitz3.ab2@13203> usedfrom:  Ds.l 1
000389A2 <AmiBlitz3.ab2@13210>   CMP.w #"\",D0
000389A6 <AmiBlitz3.ab2@13211>   BNE.w JL_0_97C2
000389AA <AmiBlitz3.ab2@13212>     CMP.b #"\",(a5)
000389AE <AmiBlitz3.ab2@13213>     BNE 'first
000389B4 <AmiBlitz3.ab2@13214>       MOVE.l A5,usedfrom
000389BA <AmiBlitz3.ab2@13215>       LEA path2,A5
000389BE <AmiBlitz3.ab2@13216> BRA 'g1
000389C0 <AmiBlitz3.ab2@13219>     SUBQ.w #1,A5
000389C6 <AmiBlitz3.ab2@13220>   MOVE.l A5,usedfrom
000389CC <AmiBlitz3.ab2@13221>   LEA usedpath,A5                                          ;read path
000389D0 <AmiBlitz3.ab2@13224>   BSR.w get1bytemain
000389D6 <AmiBlitz3.ab2@13227>   CLR.w flagmask
000389DA <AmiBlitz3.ab2@13228>   CMP.w #$2A,D0
000389DE <AmiBlitz3.ab2@13229>    BNE.w JL_0_983A
000389E6 <AmiBlitz3.ab2@13230>   MOVE.w #$0001,flagmask
000389EA <AmiBlitz3.ab2@13232>    BSR.w getparameter2
000389EE <AmiBlitz3.ab2@13235>    BEQ.w syntaxerr
000389F2 <AmiBlitz3.ab2@13236>   CMP.w #$28,D0
000389F6 <AmiBlitz3.ab2@13237>    BEQ.w JL_0_9830
000389FA <AmiBlitz3.ab2@13238>   CMP.w #$2E,D0
000389FE <AmiBlitz3.ab2@13239>    BEQ.w JL_0_980C
00038A02 <AmiBlitz3.ab2@13240>   CMP.w #$24,D0
00038A06 <AmiBlitz3.ab2@13241>    BNE.w JL_0_9838
00038A0E <AmiBlitz3.ab2@13242>   ORI.w #$8,flagmask
00038A12 <AmiBlitz3.ab2@13243>    BSR.w storeloc
00038A16 <AmiBlitz3.ab2@13244>    BSR.w get1bytemain
00038A1A <AmiBlitz3.ab2@13245> BRA.w JL_0_9822
00038A1E <AmiBlitz3.ab2@13249>   BSR.w storeloc
00038A20 <AmiBlitz3.ab2@13250>   MOVE.w D2,-(A7)
00038A26 <AmiBlitz3.ab2@13251>   LEA namebuff2,A1
00038A2A <AmiBlitz3.ab2@13252>    BSR.w makename3
00038A2E <AmiBlitz3.ab2@13253>    BEQ.w syntaxerr
00038A30 <AmiBlitz3.ab2@13254>   MOVE.w (A7)+,D2
00038A32 <AmiBlitz3.ab2@13257>    MOVE.w D0,D1
00038A36 <AmiBlitz3.ab2@13258>    BSR.w resloc
00038A3A <AmiBlitz3.ab2@13259>    CMP.w #$28,D1
00038A3E <AmiBlitz3.ab2@13260>    BNE.w JL_0_9838
00038A46 <AmiBlitz3.ab2@13263>   ORI.w #$2,flagmask
00038A48 <AmiBlitz3.ab2@13266> RTS
00038A4C <AmiBlitz3.ab2@13270>   CMP.w #$40,D0
00038A50 <AmiBlitz3.ab2@13271>    BNE.w JL_0_984E
00038A58 <AmiBlitz3.ab2@13272>   MOVE.w #$0005,flagmask
00038A5C <AmiBlitz3.ab2@13273> BRA.w JL_0_97D8
00038A60 <AmiBlitz3.ab2@13277>   BSR.w makename2
00038A64 <AmiBlitz3.ab2@13278> BRA.w JL_0_97DC
00038A68 <AmiBlitz3.ab2@13282>   MOVE.w #$FED3,D1
00038A6C <AmiBlitz3.ab2@13283>    BSR.w uselib
00038A72 <AmiBlitz3.ab2@13284>   LEA pusha3,A0
00038A78 <AmiBlitz3.ab2@13285>   LEA pusha3f,A1
00038A7C <AmiBlitz3.ab2@13286> BRA.w pokecode
00038A80 <AmiBlitz3.ab2@13290>   MOVE.w #$FED3,D1
00038A84 <AmiBlitz3.ab2@13291>    BSR.w uselib
00038A8A <AmiBlitz3.ab2@13292>   LEA pulla3,A0
00038A90 <AmiBlitz3.ab2@13293>   LEA pulla3f,A1
00038A94 <AmiBlitz3.ab2@13294> BRA.w pokecode
00038A96 <AmiBlitz3.ab2@13298> ceos:   Dc.b $42,$1B                                       ;CLR.B   (A3)+             ;*!
00038A9E <AmiBlitz3.ab2@13303>     CMP.b #2,optistring
00038AA2 <AmiBlitz3.ab2@13304>    BEQ 'l10
00038AA6 <AmiBlitz3.ab2@13305>    MOVE.w ceos(PC),D1
00038AAA <AmiBlitz3.ab2@13306>    BSR.w writeword                                         ;clr.b (a3)
00038AB0 <AmiBlitz3.ab2@13309>   MOVE.w regnum,D1
00038AB2 <AmiBlitz3.ab2@13310>   LSL.w #8,D1
00038AB4 <AmiBlitz3.ab2@13311>   LSL.w #1,D1
00038ABC <AmiBlitz3.ab2@13312>   CMPI.w #$2,sbgot
00038AC0 <AmiBlitz3.ab2@13313>    BCS.w JL_0_98E8
00038AC6 <AmiBlitz3.ab2@13314>   MOVE.w a2offset,D3                                       ;stackuse,d3 org source
00038ACC <AmiBlitz3.ab2@13315>   SUB.w thisstuse,D3
00038AD0 <AmiBlitz3.ab2@13316>   CMP.w #$6,D3
00038AD4 <AmiBlitz3.ab2@13317>    BNE.w JL_0_98D4
00038ADA <AmiBlitz3.ab2@13318>   OR.w movestst2,D1
00038ADE <AmiBlitz3.ab2@13319>    BSR.w writeword
00038AE4 <AmiBlitz3.ab2@13320>   LEA movestst2+2,A0
00038AEA <AmiBlitz3.ab2@13321>   LEA movestst2f,A1
00038AEE <AmiBlitz3.ab2@13322> BRA.w pokecode2
00038AF4 <AmiBlitz3.ab2@13326>    OR.w movea7dn,D1
00038AF8 <AmiBlitz3.ab2@13327>    BSR.w writeword
00038AFE <AmiBlitz3.ab2@13328>   MOVE.l movea7dn+2,D1
00038B02 <AmiBlitz3.ab2@13340>   BSR writelong
00038B0A <AmiBlitz3.ab2@13343>    CMP.w #6,regnum
00038B0E <AmiBlitz3.ab2@13344>    BEQ 'l1
00038B14 <AmiBlitz3.ab2@13345>    TST.w stackpar
00038B18 <AmiBlitz3.ab2@13346>    BNE 'l1
00038B1E <AmiBlitz3.ab2@13347>    TST.b funcparloop
00038B22 <AmiBlitz3.ab2@13348>    BEQ 'l1
00038B28 <AmiBlitz3.ab2@13349>    MOVE.l #$48780000,d1
00038B2C <AmiBlitz3.ab2@13350>    BSR writelong
00038B2E <AmiBlitz3.ab2@13354> RTS
00038B30 <AmiBlitz3.ab2@13359>      MOVE.l d1,-(a7)
00038B38 <AmiBlitz3.ab2@13360>      CMP.w #6,regnum
00038B3C <AmiBlitz3.ab2@13361>      BEQ 'l1
00038B42 <AmiBlitz3.ab2@13362>      TST.w stackpar
00038B46 <AmiBlitz3.ab2@13363>      BNE 'l1
00038B4C <AmiBlitz3.ab2@13364>      TST.b funcparloop
00038B50 <AmiBlitz3.ab2@13365>      BEQ 'l1
00038B56 <AmiBlitz3.ab2@13366>      MOVE.l #$48780000,d1
00038B5A <AmiBlitz3.ab2@13367>      BSR writelong
00038B5C <AmiBlitz3.ab2@13370>      MOVE.l (a7)+,d1
00038B62 <AmiBlitz3.ab2@13372>    OR.w movestdn,D1
00038B66 <AmiBlitz3.ab2@13373>    BSR.w writeword
00038B6A <AmiBlitz3.ab2@13374>   MOVE.w #$FED3,D1
00038B6E <AmiBlitz3.ab2@13375>    BSR.w uselib
00038B72 <AmiBlitz3.ab2@13376>   MOVE.w $A(A1),D1
00038B76 <AmiBlitz3.ab2@13377> BRA.w writeword
00038B78 <AmiBlitz3.ab2@13380> unknown:    Ds.w 1
00038B7E <AmiBlitz3.ab2@13383> somecode:   Dc.b $0C,$80,$00,$01,$00,$00                   ;CMPI.L  #$00010000,D0
00038B82 <AmiBlitz3.ab2@13384> somecode2:  Dc.b $65,$00,$00,$08                           ;BCS.W   codeisok
00038B88 <AmiBlitz3.ab2@13385>             Dc.b $4E,$B9,$00,$00,$00,$00                   ;JSR $00000000
00038B8E <AmiBlitz3.ab2@13391>   TST.b debugmode
00038B92 <AmiBlitz3.ab2@13392>   BEQ.w sharreval
00038B96 <AmiBlitz3.ab2@13393>  BSR.w arreval
00038B9A <AmiBlitz3.ab2@13396>   MOVE.w somecode(PC),D1
00038BA0 <AmiBlitz3.ab2@13397>   OR.w regnum,D1
00038BA4 <AmiBlitz3.ab2@13398>    BSR.w writeword
00038BA6 <AmiBlitz3.ab2@13399>   MOVEQ.l #$01,D1
00038BA8 <AmiBlitz3.ab2@13400>   SWAP D1
00038BAC <AmiBlitz3.ab2@13401>    BSR.w writelong
00038BB0 <AmiBlitz3.ab2@13402>   MOVE.l somecode2(PC),D1
00038BB4 <AmiBlitz3.ab2@13403>    BSR.w writelong
00038BB8 <AmiBlitz3.ab2@13404>   MOVE.w #$C309,D1
00038BBC <AmiBlitz3.ab2@13405> BRA.w Atokejsr
00038BBE <AmiBlitz3.ab2@13409>   MOVEQ.l #$02,D2
00038BC0 <AmiBlitz3.ab2@13410>   MOVEQ.l #$00,D1
00038BC2 <AmiBlitz3.ab2@13411>   MOVEQ.l #$00,D3
00038BC6 <AmiBlitz3.ab2@13412> BRA.w maineval2
00038BC8 <AmiBlitz3.ab2@13416>   MOVEQ.l #$03,D2
00038BCA <AmiBlitz3.ab2@13417>   MOVEQ.l #$00,D1
00038BCC <AmiBlitz3.ab2@13418>   MOVEQ.l #$00,D3
00038BD0 <AmiBlitz3.ab2@13419> BRA.w maineval2
00038BDA <AmiBlitz3.ab2@13424>   MOVE.w oldqflag,instringon
00038BE0 <AmiBlitz3.ab2@13425>   MOVEA.l lastsourcepos,A5
00038BE2 <AmiBlitz3.ab2@13426>   MOVEQ.l #-$01,D1
00038BE4 <AmiBlitz3.ab2@13427>   MOVEQ.l #-$01,D3
00038BE8 <AmiBlitz3.ab2@13428> BRA.w peval
00038BF2 <AmiBlitz3.ab2@13433>   MOVE.w oldqflag,instringon
00038BF8 <AmiBlitz3.ab2@13434>   MOVEA.l lastsourcepos,A5
00038BFA <AmiBlitz3.ab2@13437>   MOVEQ.l #-$01,D1
00038BFC <AmiBlitz3.ab2@13438>   MOVEQ.l #$00,D3
00038C00 <AmiBlitz3.ab2@13439> BRA.w maineval
00038C0A <AmiBlitz3.ab2@13444>   MOVE.w oldqflag,instringon
00038C10 <AmiBlitz3.ab2@13445>   MOVEA.l lastsourcepos,A5
00038C12 <AmiBlitz3.ab2@13446>   MOVEQ.l #$00,D1
00038C14 <AmiBlitz3.ab2@13447>   MOVEQ.l #-$01,D3
00038C18 <AmiBlitz3.ab2@13448> BRA.w maineval
00038C1A <AmiBlitz3.ab2@13452>   MOVEQ.l #$01,D1
00038C1C <AmiBlitz3.ab2@13453>   MOVEQ.l #-$01,D3
00038C20 <AmiBlitz3.ab2@13454> BRA.w maineval
00038C2A <AmiBlitz3.ab2@13459>   MOVE.w oldqflag,instringon
00038C30 <AmiBlitz3.ab2@13460>   MOVEA.l lastsourcepos,A5
00038C32 <AmiBlitz3.ab2@13463>   MOVEQ.l #$00,D1                                        ;no push
00038C34 <AmiBlitz3.ab2@13464>   MOVEQ.l #$00,D3
00038C3C <AmiBlitz3.ab2@13483>    CMPI.w #$6,regnum
00038C40 <AmiBlitz3.ab2@13484>    BCS.w maineval2
00038C42 <AmiBlitz3.ab2@13485>    MOVEQ #0,d1
00038C48 <AmiBlitz3.ab2@13486>    MOVE.l destpointer,a4
00038C4E <AmiBlitz3.ab2@13488>    CMPA.l destbufferend,A4
00038C52 <AmiBlitz3.ab2@13489>    BCC.w maineval__l2
00038C58 <AmiBlitz3.ab2@13491>    CMP.w #$2f0a,-2(a4)                                    ;bug is a move.l a2,-(a7) before (show temp calc)?
00038C5C <AmiBlitz3.ab2@13493>    BNE maineval__l2
00038C60 <AmiBlitz3.ab2@13497> BRA maineval__l1
00038C62 <AmiBlitz3.ab2@13500>   MOVEQ.l #-$01,D1
00038C6A <AmiBlitz3.ab2@13503>   MOVE.w #$0006,regnum                                     ;write a func par To stack
00038C70 <AmiBlitz3.ab2@13506>   MOVE.w thisstuse,-(A7)
00038C7A <AmiBlitz3.ab2@13507>   MOVE.w a2offset,thisstuse
00038C80 <AmiBlitz3.ab2@13508>   MOVE.w stackpar,-(A7)
00038C86 <AmiBlitz3.ab2@13509>   MOVE.w D1,stackpar
00038C8C <AmiBlitz3.ab2@13510>   MOVE.w sbgot,-(A7)
00038C92 <AmiBlitz3.ab2@13511>   CLR.w sbgot
00038C96 <AmiBlitz3.ab2@13512>   MOVE.w unknown(PC),-(A7)
00038C9C <AmiBlitz3.ab2@13513>   MOVE.w D3,unknown
00038C9E <AmiBlitz3.ab2@13514>   MOVE.w D2,-(a7)
00038CA4 <AmiBlitz3.ab2@13515>   MOVE.w d2,mode
00038CA8 <AmiBlitz3.ab2@13516>    BSR.w eval3
00038CAA <AmiBlitz3.ab2@13517>   MOVE.w (a7)+,d3
00038CAE <AmiBlitz3.ab2@13518>    BEQ.w maineval__noconv
00038CB2 <AmiBlitz3.ab2@13519>   MOVE.w unknown(PC),D1
00038CB6 <AmiBlitz3.ab2@13520>    BNE.w maineval__noconv
00038CB8 <AmiBlitz3.ab2@13521>   EXG.l D2,D3
00038CBA <AmiBlitz3.ab2@13522>    MOVE.l a2,-(a7)
00038CC0 <AmiBlitz3.ab2@13523>    TST.b curtemplabel
00038CC4 <AmiBlitz3.ab2@13524>    BEQ maineval2__l10
00038CCA <AmiBlitz3.ab2@13525>    MOVE.l asmbuff,a2
00038CD0 <AmiBlitz3.ab2@13526>    CMP.w #$c,$8(a2)
00038CD4 <AmiBlitz3.ab2@13527>    BEQ maineval2__l20
00038CDA <AmiBlitz3.ab2@13528>    CMP.w #$d,$8(a2)
00038CDE <AmiBlitz3.ab2@13529>    BEQ maineval2__l20
00038CE0 <AmiBlitz3.ab2@13532>   CMP.w d2,d3
00038CE4 <AmiBlitz3.ab2@13533>   BEQ maineval2__l20
00038CE8 <AmiBlitz3.ab2@13534>   BSR.w writeconvertcode
00038CEE <AmiBlitz3.ab2@13535>   CLR.b doimmediate
00038CF0 <AmiBlitz3.ab2@13538>   MOVE.l (a7)+,a2
00038CF6 <AmiBlitz3.ab2@13541>   MOVE.w (A7)+,unknown
00038CFC <AmiBlitz3.ab2@13542>   MOVE.w stackpar,D1
00038D00 <AmiBlitz3.ab2@13543>    BEQ.w maineval__skipme
00038D04 <AmiBlitz3.ab2@13544>    BMI.w maineval__skipme
00038D0A <AmiBlitz3.ab2@13548>   MOVE.w regnum,D1
00038D0C <AmiBlitz3.ab2@13549>   LSL.w #8,D1
00038D0E <AmiBlitz3.ab2@13550>   LSL.w #1,D1
00038D12 <AmiBlitz3.ab2@13551>   CMP.w #$7,D2
00038D16 <AmiBlitz3.ab2@13552>    BNE.w maineval__hi1
00038D1E <AmiBlitz3.ab2@13553>    CMP.b #2,optistring
00038D22 <AmiBlitz3.ab2@13554>    BEQ maineval__hi1a
00038D24 <AmiBlitz3.ab2@13555>   MOVE.w D1,-(A7)
00038D2A <AmiBlitz3.ab2@13556>   OR.w getstlen,D1
00038D2E <AmiBlitz3.ab2@13557>    BSR.w writeword
00038D30 <AmiBlitz3.ab2@13558>   MOVE.w (A7)+,D1
00038D36 <AmiBlitz3.ab2@13561>   ADDQ.w #2,a2offset                                        ;lib mode to stack
00038D3A <AmiBlitz3.ab2@13565>   MOVE.w #$3f3c,d1
00038D3E <AmiBlitz3.ab2@13566>    BSR.w writeword
00038D40 <AmiBlitz3.ab2@13570>   MOVE.w d2,d1
00038D46 <AmiBlitz3.ab2@13571>   MOVE.w d1,libmode
00038D4A <AmiBlitz3.ab2@13572>    BSR.w writeword
00038D4E <AmiBlitz3.ab2@13573>   CMP.w #$7,D2
00038D52 <AmiBlitz3.ab2@13574>    BNE.w maineval__skipme
00038D58 <AmiBlitz3.ab2@13575>   MOVE.w putstlen,D1
00038D5E <AmiBlitz3.ab2@13576>   OR.w regnum,D1
00038D62 <AmiBlitz3.ab2@13577>    BSR.w writeword
00038D66 <AmiBlitz3.ab2@13580>    CMP.w #$7,D2
00038D6A <AmiBlitz3.ab2@13581>    BNE.w maineval__notst
00038D72 <AmiBlitz3.ab2@13592>    CMP.b #2,optistring
00038D76 <AmiBlitz3.ab2@13593>    BEQ maineval__skipme_l10
00038D7C <AmiBlitz3.ab2@13594>    ADDQ.w #4,a2offset                                      ;a length on da stack.....
00038D80 <AmiBlitz3.ab2@13595>    BSR.w sbtolong
00038D84 <AmiBlitz3.ab2@13596> BRA.w maineval__notst2
00038D8C <AmiBlitz3.ab2@13600>     CMP.w #6,regnum
00038D90 <AmiBlitz3.ab2@13601>     BEQ maineval__skipme_l10_l1
00038D96 <AmiBlitz3.ab2@13602>     TST.b funcparloop
00038D9A <AmiBlitz3.ab2@13603>     BEQ maineval__skipme_l10_l1
00038DA0 <AmiBlitz3.ab2@13604>     MOVE.l #$48780000,d1
00038DA4 <AmiBlitz3.ab2@13605>     BSR writelong
00038DA8 <AmiBlitz3.ab2@13608> BRA.w maineval__notst2
00038DAE <AmiBlitz3.ab2@13611>   ADDQ.w #2,a2offset
00038DB2 <AmiBlitz3.ab2@13612> BRA maineval__skipme
00038DBA <AmiBlitz3.ab2@13615>   CMPI.w #$2,sbgot
00038DBE <AmiBlitz3.ab2@13616>    BCS.w maineval__notst2                                         ;correct stack
00038DC2 <AmiBlitz3.ab2@13617>   MOVE.w ststfix(PC),D1
00038DC6 <AmiBlitz3.ab2@13618>    BSR.w writeword
00038DCC <AmiBlitz3.ab2@13621>   MOVE.w (A7)+,sbgot
00038DD2 <AmiBlitz3.ab2@13622>   MOVE.w stackpar,D1
00038DD6 <AmiBlitz3.ab2@13623>    BPL.w maineval__skip
00038DDA <AmiBlitz3.ab2@13624>    CMP.b #7,d2
00038DDE <AmiBlitz3.ab2@13625>    BEQ maineval__notst2_l1
00038DE4 <AmiBlitz3.ab2@13626>   TST.b funcparloop
00038DE8 <AmiBlitz3.ab2@13627>   BEQ maineval__notst2_l1
00038DEC <AmiBlitz3.ab2@13628>   CMP.b #5,d2
00038DF0 <AmiBlitz3.ab2@13629>   BNE maineval__notst2_skip
00038DF6 <AmiBlitz3.ab2@13630>   TST.b fpu
00038DFA <AmiBlitz3.ab2@13631>   BEQ maineval__notst2_skip
00038E00 <AmiBlitz3.ab2@13632>   MOVE.l #$f2066700,d1                                     ;fmove.s fp6,d6
00038E06 <AmiBlitz3.ab2@13633>   JSR writelong
00038E0A <AmiBlitz3.ab2@13636>   MOVE.w #$c4ff,d1                                         ;savetemp+regnum
00038E10 <AmiBlitz3.ab2@13637>   ADD.w parnum,d1
00038E16 <AmiBlitz3.ab2@13638>   JSR Atokejsr
00038E1C <AmiBlitz3.ab2@13639>    TST.w dontwrite
00038E20 <AmiBlitz3.ab2@13640>    BNE maineval__notst2_l1
00038E26 <AmiBlitz3.ab2@13641>    MOVE.l data1start,d1
00038E2C <AmiBlitz3.ab2@13642>    MOVE.l destpointer,a4
00038E30 <AmiBlitz3.ab2@13643>    ADD.l d1,-4(a4)
00038E36 <AmiBlitz3.ab2@13644>    MOVE.l destpointer,d1
00038E38 <AmiBlitz3.ab2@13645>    SUBQ.l #4,d1
00038E3E <AmiBlitz3.ab2@13646>    SUB.l destbufferstart,d1
00038E40 <AmiBlitz3.ab2@13647>    MOVE.l d2,-(a7)
00038E42 <AmiBlitz3.ab2@13648>    MOVE.l d1,d2
00038E48 <AmiBlitz3.ab2@13649>    JSR addhunkoffset
00038E4A <AmiBlitz3.ab2@13650>    MOVE.l (a7)+,d2
00038E4E <AmiBlitz3.ab2@13651> BRA maineval__skip
00038E54 <AmiBlitz3.ab2@13654>   ADDQ.w #2,a2offset
00038E5A <AmiBlitz3.ab2@13655>   MOVE.w pushd0wd,D1
00038E5E <AmiBlitz3.ab2@13656>   CMP.w #$3,D2                                             ;write parameter to stack
00038E62 <AmiBlitz3.ab2@13657>    BCS.w maineval__ok
00038E68 <AmiBlitz3.ab2@13658>   ADDQ.w #2,a2offset
00038E6E <AmiBlitz3.ab2@13659>   TST.b fpu
00038E72 <AmiBlitz3.ab2@13660>   BEQ maineval__notst2_nofpu
00038E76 <AmiBlitz3.ab2@13661>   CMP.w #5,d2
00038E7A <AmiBlitz3.ab2@13662>   BNE maineval__notst2_nofpu
00038E7C <AmiBlitz3.ab2@13663>   MOVEQ #0,d1
00038E82 <AmiBlitz3.ab2@13664>   MOVE.w regnum,d1
00038E84 <AmiBlitz3.ab2@13665>   ASL.l #7,d1
00038E8A <AmiBlitz3.ab2@13666>   OR.l #$f2276400,d1
00038E8E <AmiBlitz3.ab2@13667>   BSR writelong
00038E92 <AmiBlitz3.ab2@13668> BRA maineval__skip
00038E98 <AmiBlitz3.ab2@13671>   MOVE.w pushd0l,D1
00038E9E <AmiBlitz3.ab2@13674>    OR.w regnum,D1
00038EA2 <AmiBlitz3.ab2@13675>    BSR.w writeword                                         ;nat
00038EA8 <AmiBlitz3.ab2@13678>   MOVE.w (A7)+,stackpar
00038EAE <AmiBlitz3.ab2@13679>   MOVE.w (A7)+,thisstuse
00038EB0 <AmiBlitz3.ab2@13680> RTS
00038EB2 <AmiBlitz3.ab2@13683> thisstuse: Ds.w 1
00038EB4 <AmiBlitz3.ab2@13686> ststfix:   Dc.b $58,$4F                                    ;ADDQ.W  #4,A7
00038EB6 <AmiBlitz3.ab2@13687> pushut:    Dc.b $3F,$00                                    ;MOVE.W  D0,-(A7)
00038EBA <AmiBlitz3.ab2@13692>   BSR.w eval4
00038EC4 <AmiBlitz3.ab2@13693>   SUBI.l #$12,forthsp
00038EC6 <AmiBlitz3.ab2@13694> RTS
00038EC8 <AmiBlitz3.ab2@13698>   MOVEQ.l #$01,D1
00038ECC <AmiBlitz3.ab2@13700>       MOVEA.l precsp(PC),A1
00038ECE <AmiBlitz3.ab2@13701>       MOVE.l A0,(A1)+
00038ED0 <AmiBlitz3.ab2@13702>       MOVE.w D1,(A1)+
00038ED6 <AmiBlitz3.ab2@13703>       MOVE.l A1,precsp
00038EDA <AmiBlitz3.ab2@13704>    BSR.w calcloop
00038EDC <AmiBlitz3.ab2@13705>   TST.w D1
00038EE0 <AmiBlitz3.ab2@13706>    BNE.w syntaxerr
00038EE6 <AmiBlitz3.ab2@13707>   SUBQ.l #6,precsp                                      ;pop the prec set up
00038EE8 <AmiBlitz3.ab2@13708> RTS
00038EEC <AmiBlitz3.ab2@13712>   BSR.w JL_0_9C24
00038EF0 <AmiBlitz3.ab2@13715>   MOVEA.l precsp(PC),A1
00038EF2 <AmiBlitz3.ab2@13716>   CMP.w -(A1),D1
00038EF6 <AmiBlitz3.ab2@13717>    BHI.w JL_0_9B0A
00038EF8 <AmiBlitz3.ab2@13718> RTS
00038EFC <AmiBlitz3.ab2@13723>   MOVEA.l precsp(PC),A1
00038EFE <AmiBlitz3.ab2@13724>   MOVE.l A0,(A1)+
00038F00 <AmiBlitz3.ab2@13725>   MOVE.w D1,(A1)+
00038F06 <AmiBlitz3.ab2@13726>   MOVE.l A1,precsp
00038F08 <AmiBlitz3.ab2@13727>   MOVE.w D2,-(A7)
00038F0E <AmiBlitz3.ab2@13728>   ADDQ.w #1,regnum
00038F12 <AmiBlitz3.ab2@13729>    BSR.w calcloop
00038F18 <AmiBlitz3.ab2@13730>   SUBQ.w #1,regnum
00038F1A <AmiBlitz3.ab2@13731>   MOVE.w (A7)+,D3
00038F1E <AmiBlitz3.ab2@13732>   MOVEM.l D1/A0,-(A7)
00038F22 <AmiBlitz3.ab2@13733>    BEQ.w JL_0_9B2E
00038F26 <AmiBlitz3.ab2@13734>    BSR.w JL_0_9770
00038F2A <AmiBlitz3.ab2@13737>   BSR.w popprec
00038F2E <AmiBlitz3.ab2@13738>   BSR.w writecode
00038F32 <AmiBlitz3.ab2@13739>   MOVEA.l forthsp(PC),A0
00038F36 <AmiBlitz3.ab2@13740>   MOVE.w -$2(A0),D1
00038F3A <AmiBlitz3.ab2@13741>   OR.w -$14(A0),D1
00038F3E <AmiBlitz3.ab2@13742>   MOVE.w D1,-$14(A0)
00038F42 <AmiBlitz3.ab2@13743>    BNE.w JL_0_9C0E
00038F48 <AmiBlitz3.ab2@13744>   MOVE.w dontwrite,D1
00038F4C <AmiBlitz3.ab2@13745>    BNE.w JL_0_9C0E
00038F50 <AmiBlitz3.ab2@13746>    MOVEA.l -$24(A0),A0
0003908C <AmiBlitz3.ab2@13748>  !newcalc
00039090 <AmiBlitz3.ab2@13749>    BEQ 'l10
00039094 <AmiBlitz3.ab2@13750>    MOVEA.l forthsp(PC),A0
0003909C <AmiBlitz3.ab2@13751>    MOVE.w -$18(A0),lasta6
000390A4 <AmiBlitz3.ab2@13752>    MOVE.l -$1C(A0),lasta6
000390A8 <AmiBlitz3.ab2@13753>    MOVEA.l -$24(A0),A0
000390AE <AmiBlitz3.ab2@13754>    MOVE.l A0,destpointer
000390B4 <AmiBlitz3.ab2@13755>    MOVEA.l _mathffpbase,A6
000390BA <AmiBlitz3.ab2@13756>    MOVEA.l ffplib,A1
000390BE <AmiBlitz3.ab2@13757> BRA cont1
000390C2 <AmiBlitz3.ab2@13760>   MOVE.w #$2000,D1
000390C8 <AmiBlitz3.ab2@13761>   OR.w regnum,D1
000390CC <AmiBlitz3.ab2@13762>    BSR.w writeword
000390CE <AmiBlitz3.ab2@13763>     MOVEQ #0,d1
000390D4 <AmiBlitz3.ab2@13764>     MOVE.w regnum,D1
000390D6 <AmiBlitz3.ab2@13765>     ASL.l #8,d1
000390D8 <AmiBlitz3.ab2@13766>     ASL.l #2,d1
000390DE <AmiBlitz3.ab2@13767>     OR.l #$f2000000,d1
000390E2 <AmiBlitz3.ab2@13768>     BSR writelong
000390E6 <AmiBlitz3.ab2@13769>   MOVE.w #$4E75,D1
000390EA <AmiBlitz3.ab2@13770>    BSR.w writeword
000390F2 <AmiBlitz3.ab2@13771>   MOVE.w -$18(A0),lasta6
000390FA <AmiBlitz3.ab2@13772>   MOVE.l -$1C(A0),lasta6
000390FE <AmiBlitz3.ab2@13773>   MOVEA.l -$24(A0),A0
00039104 <AmiBlitz3.ab2@13774>   MOVE.l A0,destpointer
00039108 <AmiBlitz3.ab2@13775>   MOVEM.l D2/A5,-(A7)
0003910E <AmiBlitz3.ab2@13776>   MOVEA.l _mathffpbase,A6
00039114 <AmiBlitz3.ab2@13777>   MOVEA.l ffplib,A1
00039118 <AmiBlitz3.ab2@13778>   MOVE.w $A(A1),D0
0003911E <AmiBlitz3.ab2@13779>   LEA _mathffpbase,A5
00039120 <AmiBlitz3.ab2@13780>   SUBA.w D0,A5
00039126 <AmiBlitz3.ab2@13781>   JSR Aclearcache                                          ;neg +
0003912C <AmiBlitz3.ab2@13782>   CLR.l load_var_addr
00039132 <AmiBlitz3.ab2@13783>   CLR.l imm_addr
00039138 <AmiBlitz3.ab2@13784>   TST.w dontwrite
0003913C <AmiBlitz3.ab2@13785>   BNE '1
0003913E <AmiBlitz3.ab2@13786>   JSR (A0)                                                 ;calc constant inline expression
00039142 <AmiBlitz3.ab2@13789>   MOVEM.l (A7)+,D2/A5
00039148 <AmiBlitz3.ab2@13792>   MOVE.w regnum,D1
0003914A <AmiBlitz3.ab2@13793>   LSL.w #8,D1
0003914C <AmiBlitz3.ab2@13794>   LSL.w #1,D1
00039150 <AmiBlitz3.ab2@13795>   ORI.w #$203C,D1
00039154 <AmiBlitz3.ab2@13796>   CMP.w #$3,D2
00039158 <AmiBlitz3.ab2@13797>    BCC.w JL_0_9BCE
0003915C <AmiBlitz3.ab2@13798>   ORI.w #$1000,D1
00039160 <AmiBlitz3.ab2@13799>    BSR.w writeword
00039162 <AmiBlitz3.ab2@13800>   MOVE.w D0,D1
00039166 <AmiBlitz3.ab2@13801>    BSR.w writeword
0003916A <AmiBlitz3.ab2@13802> BRA.w JL_0_9BD8
00039170 <AmiBlitz3.ab2@13806>   TST.b iee                                                ;fpu constant
00039174 <AmiBlitz3.ab2@13807>   BEQ 'l10
00039178 <AmiBlitz3.ab2@13808>   CMP.b #5,d2
0003917C <AmiBlitz3.ab2@13809>   BNE 'l10
0003917E <AmiBlitz3.ab2@13810>   MOVEQ #0,d1
00039184 <AmiBlitz3.ab2@13811>   MOVE.w regnum,D1
00039186 <AmiBlitz3.ab2@13812>   ASL.l #7,d1
0003918C <AmiBlitz3.ab2@13813>   OR.l #$f23c5400,d1
00039190 <AmiBlitz3.ab2@13814>   BSR writelong
00039192 <AmiBlitz3.ab2@13815>   SUBQ.l #8,a7
00039198 <AmiBlitz3.ab2@13816>   fmove.d fp0,0(a7)
0003919A <AmiBlitz3.ab2@13817>   MOVE.l (a7)+,d1
0003919E <AmiBlitz3.ab2@13818>   BSR writelong
000391A0 <AmiBlitz3.ab2@13819>   MOVE.l (a7)+,d1
000391A4 <AmiBlitz3.ab2@13820>   BSR writelong
000391A8 <AmiBlitz3.ab2@13821> BRA JL_0_9BD8
000391AC <AmiBlitz3.ab2@13824>   BSR.w writeword
000391AE <AmiBlitz3.ab2@13825>   MOVE.l D0,D1
000391B2 <AmiBlitz3.ab2@13826>   BSR.w writelong
000391B6 <AmiBlitz3.ab2@13829>   MOVEA.l forthsp(PC),A0
000391BA <AmiBlitz3.ab2@13830>   MOVEA.l -$20(A0),A3
000391C0 <AmiBlitz3.ab2@13831>   MOVEA.l hunkoffsetbase,A2
000391C6 <AmiBlitz3.ab2@13832>   MOVE.l A3,hunkoffsetbase
000391CC <AmiBlitz3.ab2@13833>   MOVEA.l _execbase,A6
000391CE <AmiBlitz3.ab2@13836>   CMPA.l A3,A2
000391D2 <AmiBlitz3.ab2@13837>   BEQ.w JL_0_9C0A
000391D8 <AmiBlitz3.ab2@13838>   SUBQ.l #1,hunkoffsetcounter
000391DA <AmiBlitz3.ab2@13839>   MOVEA.l A2,A1
000391DC <AmiBlitz3.ab2@13840>   MOVEA.l (A2),A2
000391DE <AmiBlitz3.ab2@13841>   MOVEQ.l #$8,D0
000391E4 <AmiBlitz3.ab2@13842>   MOVE.l mempool2,a0
000391E8 <AmiBlitz3.ab2@13843>    JSR _FreePooled(A6)
000391EC <AmiBlitz3.ab2@13844> BRA.w JL_0_9BF0
000391F0 <AmiBlitz3.ab2@13848>   MOVEA.l forthsp(PC),A0
000391F4 <AmiBlitz3.ab2@13851>   LEA -$12(A0),A0
000391FA <AmiBlitz3.ab2@13852>   MOVE.l A0,forthsp
000391FE <AmiBlitz3.ab2@13853>   MOVEM.l (A7)+,D1/A0
00039202 <AmiBlitz3.ab2@13854>   BSR.w reget
00039206 <AmiBlitz3.ab2@13855> BRA.w JL_0_9AFE
0003920A <AmiBlitz3.ab2@13859>   BSR.w JL_0_A386
0003920C <AmiBlitz3.ab2@13860>   TST.w d0
00039210 <AmiBlitz3.ab2@13861>   BEQ JL_0_9C42
00039214 <AmiBlitz3.ab2@13862>   CMP.b #",",d0
00039218 <AmiBlitz3.ab2@13863>   BEQ JL_0_9C42
0003921C <AmiBlitz3.ab2@13864>   CMP.b #"@",d0                                            ;expandline @@
00039220 <AmiBlitz3.ab2@13865>   BEQ JL_0_9C42
00039226 <AmiBlitz3.ab2@13866>   LEA operators,A0
00039228 <AmiBlitz3.ab2@13869>    TST.w (A0)
0003922C <AmiBlitz3.ab2@13870>    BEQ.w JL_0_9C42
0003922E <AmiBlitz3.ab2@13871>   CMP.w (A0),D0
00039232 <AmiBlitz3.ab2@13872>    BEQ.w JL_0_9C46a
00039236 <AmiBlitz3.ab2@13873>   LEA $20(A0),A0
0003923A <AmiBlitz3.ab2@13874> BRA.w JL_0_9C2E
0003923C <AmiBlitz3.ab2@13878>   MOVEQ.l #$00,D1
0003923E <AmiBlitz3.ab2@13879> RTS
00039242 <AmiBlitz3.ab2@13883>   CMP.w #$3C,D0
00039246 <AmiBlitz3.ab2@13884>    BNE.w JL_0_9C70
0003924A <AmiBlitz3.ab2@13885>    BSR.w get1bytemain
0003924E <AmiBlitz3.ab2@13886>   CMP.w #$3D,D0
00039252 <AmiBlitz3.ab2@13887>    BNE.w JL_0_9C64
00039258 <AmiBlitz3.ab2@13888>   LEA ople,A0
0003925C <AmiBlitz3.ab2@13889> BRA.w JL_0_9CCA
00039260 <AmiBlitz3.ab2@13893>   CMP.w #$3E,D0
00039264 <AmiBlitz3.ab2@13894>    BNE.w JL_0_9C96
00039268 <AmiBlitz3.ab2@13895> BRA.w JL_0_9CC4
0003926C <AmiBlitz3.ab2@13899>   CMP.w #$3E,D0
00039270 <AmiBlitz3.ab2@13900>    BNE.w JL_0_9C9E
00039274 <AmiBlitz3.ab2@13901>    BSR.w get1bytemain
00039278 <AmiBlitz3.ab2@13902>   CMP.w #$3D,D0
0003927C <AmiBlitz3.ab2@13903>    BNE.w JL_0_9C8E
00039282 <AmiBlitz3.ab2@13904>   LEA opge,A0
00039286 <AmiBlitz3.ab2@13905> BRA.w JL_0_9CCA
0003928A <AmiBlitz3.ab2@13909>   CMP.w #$3C,D0
0003928E <AmiBlitz3.ab2@13910>    BEQ.w JL_0_9CC4
00039298 <AmiBlitz3.ab2@13914>     MOVE.w oldqflag,instringon
0003929E <AmiBlitz3.ab2@13915>     MOVEA.l lastsourcepos,A5
000392A2 <AmiBlitz3.ab2@13916> BRA.w JL_0_9CCA
000392A6 <AmiBlitz3.ab2@13920>   CMP.w #$3D,D0
000392AA <AmiBlitz3.ab2@13921>    BNE.w JL_0_9CCA
000392AE <AmiBlitz3.ab2@13922>    BSR.w get1bytemain
000392B2 <AmiBlitz3.ab2@13923>   CMP.w #$3E,D0
000392B6 <AmiBlitz3.ab2@13924>    BNE.w JL_0_9CBC
000392BC <AmiBlitz3.ab2@13925>   LEA opge,A0
000392C0 <AmiBlitz3.ab2@13926> BRA.w JL_0_9CCA
000392C4 <AmiBlitz3.ab2@13930>   CMP.w #$3C,D0
000392C8 <AmiBlitz3.ab2@13931>   BNE.w JL_0_9C96
000392CE <AmiBlitz3.ab2@13934>   LEA opne,A0
000392D2 <AmiBlitz3.ab2@13937>   MOVE.w $1E(A0),D1
000392D4 <AmiBlitz3.ab2@13938> RTS
000392D6 <AmiBlitz3.ab2@13945>   MOVE.w d2,d1
000392D8 <AmiBlitz3.ab2@13946>   SUBQ.w #1,D1
000392DC <AmiBlitz3.ab2@13947>    BMI.w illoperr
000392DE <AmiBlitz3.ab2@13948>   LSL.w #2,D1
000392E2 <AmiBlitz3.ab2@13949>   MOVE.l $2(A0,D1.W),D1
000392E6 <AmiBlitz3.ab2@13950>    BEQ.w illoperr
000392E8 <AmiBlitz3.ab2@13951>   MOVEA.l D1,A0
000392EA <AmiBlitz3.ab2@13954> JMP (A0)
000392EE <AmiBlitz3.ab2@13970>   MOVEA.l precsp(PC),A1
000392F4 <AmiBlitz3.ab2@13971>   CMPA.l #precstackf,A1
000392F8 <AmiBlitz3.ab2@13972>    BCC.w pserr
000392FA <AmiBlitz3.ab2@13973>   MOVE.w -(A1),D1
000392FC <AmiBlitz3.ab2@13974>   MOVEA.l -(A1),A0
00039302 <AmiBlitz3.ab2@13975>   MOVE.l A1,precsp
00039304 <AmiBlitz3.ab2@13976> RTS
00039308 <AmiBlitz3.ab2@13979> precsp:      Dc.l precstack
00039404 <AmiBlitz3.ab2@13980> precstack:   Ds.l 63                                       ;ds 6*32 org source   ;Lotsa Room?
00039488 <AmiBlitz3.ab2@13981>              Ds.l 33
0003948A <AmiBlitz3.ab2@13987> mseq:  SEQ D0
0003948C <AmiBlitz3.ab2@13988> msne:    SNE D0
0003948E <AmiBlitz3.ab2@13989> mslt:    SLT D0
00039490 <AmiBlitz3.ab2@13990> msle:    SLE D0
00039492 <AmiBlitz3.ab2@13991> msgt:    SGT D0
00039494 <AmiBlitz3.ab2@13992> msge:    SGE D0
00039496 <AmiBlitz3.ab2@13994> cmp0:    CMP.b D0,D0
00039498 <AmiBlitz3.ab2@13995> cmp1:    CMP.w D0,D0
0003949A <AmiBlitz3.ab2@13996> cmp2:    CMP.l D0,D0
0003949E <AmiBlitz3.ab2@14000>   MOVE.w cmp0(PC),D1
000394A2 <AmiBlitz3.ab2@14001> BRA.w doeqcmp2                                            ;writecompare
000394A6 <AmiBlitz3.ab2@14005>   MOVE.w cmp0(PC),D1
000394AA <AmiBlitz3.ab2@14006> BRA.w donecmp2
000394AE <AmiBlitz3.ab2@14010>   MOVE.w cmp0(PC),D1
000394B2 <AmiBlitz3.ab2@14011> BRA.w doltcmp2
000394B6 <AmiBlitz3.ab2@14015>   MOVE.w cmp0(PC),D1
000394BA <AmiBlitz3.ab2@14016> BRA.w dolecmp2
000394BE <AmiBlitz3.ab2@14020>   MOVE.w cmp0(PC),D1
000394C2 <AmiBlitz3.ab2@14021> BRA.w dogtcmp2
000394C6 <AmiBlitz3.ab2@14026>   MOVE.w cmp0(PC),D1
000394CA <AmiBlitz3.ab2@14027> BRA.w dogecmp2
000394CE <AmiBlitz3.ab2@14031>   MOVE.w cmp1(PC),D1
000394D2 <AmiBlitz3.ab2@14032> BRA.w doeqcmp2
000394D6 <AmiBlitz3.ab2@14036>   MOVE.w cmp1(PC),D1
000394DA <AmiBlitz3.ab2@14037> BRA.w donecmp2
000394DE <AmiBlitz3.ab2@14041>   MOVE.w cmp1(PC),D1
000394E2 <AmiBlitz3.ab2@14042> BRA.w doltcmp2
000394E6 <AmiBlitz3.ab2@14046>   MOVE.w cmp1(PC),D1
000394EA <AmiBlitz3.ab2@14047> BRA.w dolecmp2
000394EE <AmiBlitz3.ab2@14051>   MOVE.w cmp1(PC),D1
000394F2 <AmiBlitz3.ab2@14052> BRA.w dogtcmp2
000394F6 <AmiBlitz3.ab2@14057>   MOVE.w cmp1(PC),D1
000394FA <AmiBlitz3.ab2@14058> BRA.w dogecmp2
000394FE <AmiBlitz3.ab2@14062>   MOVE.w cmp2(PC),D1                                   ;writecomparelong
00039502 <AmiBlitz3.ab2@14063> BRA doeqcmp2
00039506 <AmiBlitz3.ab2@14066>   MOVE.w cmp2(PC),D1
0003950A <AmiBlitz3.ab2@14067> BRA donecmp2
0003950E <AmiBlitz3.ab2@14071>   MOVE.w cmp2(PC),D1
00039512 <AmiBlitz3.ab2@14072> BRA.w doltcmp2
00039516 <AmiBlitz3.ab2@14076>   MOVE.w cmp2(PC),D1
0003951A <AmiBlitz3.ab2@14077> BRA.w dolecmp2
0003951E <AmiBlitz3.ab2@14081>   MOVE.w cmp2(PC),D1
00039522 <AmiBlitz3.ab2@14082> BRA.w dogtcmp2
00039526 <AmiBlitz3.ab2@14086>   MOVE.w cmp2(PC),D1
0003952A <AmiBlitz3.ab2@14087> BRA.w dogecmp2
0003952C <AmiBlitz3.ab2@14090> cfregat:  Ds.w 1
00039532 <AmiBlitz3.ab2@14094>   MOVE.w D1,libjsr+2
00039536 <AmiBlitz3.ab2@14095>    BSR.w JL_0_AD40
00039538 <AmiBlitz3.ab2@14096>   MOVE.l D4,D1
0003953C <AmiBlitz3.ab2@14097>    BSR.w JL_0_AD38
00039540 <AmiBlitz3.ab2@14098>   MOVE.w #$C900,D1
00039544 <AmiBlitz3.ab2@14099>    BSR.w Atokejsr
00039548 <AmiBlitz3.ab2@14100>    BSR.w JL_0_A352
0003954E <AmiBlitz3.ab2@14101>   MOVE.l libjsr,D1
00039552 <AmiBlitz3.ab2@14102>    BSR.w writelong
0003955C <AmiBlitz3.ab2@14103>   MOVE.w regnum,cfregat
00039562 <AmiBlitz3.ab2@14104>   CLR.w regnum
00039564 <AmiBlitz3.ab2@14105> RTS
0003956E <AmiBlitz3.ab2@14109>   MOVE.w cfregat,regnum
00039572 <AmiBlitz3.ab2@14110>    BSR.w JL_0_A36E
00039574 <AmiBlitz3.ab2@14111>   MOVE.l D5,D1
00039578 <AmiBlitz3.ab2@14112> BRA.w JL_0_AD38
0003957A <AmiBlitz3.ab2@14116>    MOVEQ.l #-$2A,D1
00039580 <AmiBlitz3.ab2@14117>    TST.b fpu
00039584 <AmiBlitz3.ab2@14118>    BEQ do_equal_float__nofpu
00039586 <AmiBlitz3.ab2@14119>    MOVEQ #0,d1
0003958C <AmiBlitz3.ab2@14120>    MOVE.w regnum,d1
0003958E <AmiBlitz3.ab2@14121>    MOVE.l d1,d2
00039590 <AmiBlitz3.ab2@14122>    ASL.l #7,d1
00039592 <AmiBlitz3.ab2@14123>    ADDQ  #1,d2
00039594 <AmiBlitz3.ab2@14124>    ASL.l #8,d2
00039596 <AmiBlitz3.ab2@14125>    ASL.l #2,d2
00039598 <AmiBlitz3.ab2@14126>    OR.l d2,d1
0003959E <AmiBlitz3.ab2@14127>    OR.l #$f2000038,d1
000395A4 <AmiBlitz3.ab2@14128>    JSR writelong
000395A8 <AmiBlitz3.ab2@14129>    MOVE.w #$f240,d1
000395AE <AmiBlitz3.ab2@14130>    OR.w regnum,d1
000395B2 <AmiBlitz3.ab2@14131>    BSR writeword
000395B4 <AmiBlitz3.ab2@14132>    MOVEQ.l #1,d2
000395B8 <AmiBlitz3.ab2@14133>    MOVE.w #1,d1                                            ;fpu comp fseq
000395BC <AmiBlitz3.ab2@14134>    BSR writeword
000395BE <AmiBlitz3.ab2@14135> RTS
000395C2 <AmiBlitz3.ab2@14138>    BSR.w docflib
000395C6 <AmiBlitz3.ab2@14139>    BSR.w doeqcmp
000395CA <AmiBlitz3.ab2@14140> BRA.w docflib2
000395CC <AmiBlitz3.ab2@14144>   MOVEQ.l #-$2A,D1
000395D2 <AmiBlitz3.ab2@14145>   TST.b fpu
000395D6 <AmiBlitz3.ab2@14146>    BEQ do_not_equal_float__nofpu
000395D8 <AmiBlitz3.ab2@14147>    MOVEQ #0,d1
000395DE <AmiBlitz3.ab2@14148>    MOVE.w regnum,d1
000395E0 <AmiBlitz3.ab2@14149>    MOVE.l d1,d2
000395E2 <AmiBlitz3.ab2@14150>    ASL.l #7,d1
000395E4 <AmiBlitz3.ab2@14151>    ADDQ  #1,d2
000395E6 <AmiBlitz3.ab2@14152>    ASL.l #8,d2
000395E8 <AmiBlitz3.ab2@14153>    ASL.l #2,d2
000395EA <AmiBlitz3.ab2@14154>    OR.l d2,d1
000395F0 <AmiBlitz3.ab2@14155>    OR.l #$f2000038,d1
000395F6 <AmiBlitz3.ab2@14156>    JSR writelong
000395FA <AmiBlitz3.ab2@14157>    MOVE.w #$f240,d1
00039600 <AmiBlitz3.ab2@14158>    OR.w regnum,d1
00039604 <AmiBlitz3.ab2@14159>    BSR writeword
0003960A <AmiBlitz3.ab2@14160>    MOVE.l #1,d2
0003960E <AmiBlitz3.ab2@14161>    MOVE.w #$e,d1                                           ;fpu comp fsne
00039612 <AmiBlitz3.ab2@14162>    BSR writeword
00039614 <AmiBlitz3.ab2@14163> RTS
00039618 <AmiBlitz3.ab2@14166>    BSR.w docflib
0003961C <AmiBlitz3.ab2@14167>    BSR.w donecmp
00039620 <AmiBlitz3.ab2@14168> BRA.w docflib2
00039622 <AmiBlitz3.ab2@14172>   MOVEQ.l #-$2A,D1
00039628 <AmiBlitz3.ab2@14173>     TST.b fpu
0003962C <AmiBlitz3.ab2@14174>    BEQ do_littler_float__nofpu
0003962E <AmiBlitz3.ab2@14175>    MOVEQ #0,d1
00039634 <AmiBlitz3.ab2@14176>    MOVE.w regnum,d1
00039636 <AmiBlitz3.ab2@14177>    MOVE.l d1,d2
00039638 <AmiBlitz3.ab2@14178>    ASL.l #7,d1
0003963A <AmiBlitz3.ab2@14179>    ADDQ  #1,d2
0003963C <AmiBlitz3.ab2@14180>    ASL.l #8,d2
0003963E <AmiBlitz3.ab2@14181>    ASL.l #2,d2
00039640 <AmiBlitz3.ab2@14182>    OR.l d2,d1
00039646 <AmiBlitz3.ab2@14183>    OR.l #$f2000038,d1
0003964C <AmiBlitz3.ab2@14184>    JSR writelong
00039650 <AmiBlitz3.ab2@14185>    MOVE.w #$f240,d1
00039656 <AmiBlitz3.ab2@14186>    OR.w regnum,d1
0003965A <AmiBlitz3.ab2@14187>    BSR writeword
00039660 <AmiBlitz3.ab2@14188>    MOVE.l #$1,d2
00039664 <AmiBlitz3.ab2@14189>    MOVE.w #$14,d1                                          ;fpu comp fslt
00039668 <AmiBlitz3.ab2@14190>    BSR writeword
0003966A <AmiBlitz3.ab2@14191> RTS
0003966E <AmiBlitz3.ab2@14194>    BSR.w docflib
00039672 <AmiBlitz3.ab2@14195>    BSR.w doltcmp
00039676 <AmiBlitz3.ab2@14196> BRA.w docflib2
00039678 <AmiBlitz3.ab2@14200>   MOVEQ.l #-$2A,D1
0003967E <AmiBlitz3.ab2@14201>   TST.b fpu
00039682 <AmiBlitz3.ab2@14202>    BEQ do_littler_equal_float__nofpu
00039684 <AmiBlitz3.ab2@14203>    MOVEQ #0,d1
0003968A <AmiBlitz3.ab2@14204>    MOVE.w regnum,d1
0003968C <AmiBlitz3.ab2@14205>    MOVE.l d1,d2
0003968E <AmiBlitz3.ab2@14206>    ASL.l #7,d1
00039690 <AmiBlitz3.ab2@14207>    ADDQ  #1,d2
00039692 <AmiBlitz3.ab2@14208>    ASL.l #8,d2
00039694 <AmiBlitz3.ab2@14209>    ASL.l #2,d2
00039696 <AmiBlitz3.ab2@14210>    OR.l d2,d1
0003969C <AmiBlitz3.ab2@14211>    OR.l #$f2000038,d1
000396A2 <AmiBlitz3.ab2@14212>    JSR writelong
000396A6 <AmiBlitz3.ab2@14213>    MOVE.w #$f240,d1
000396AC <AmiBlitz3.ab2@14214>    OR.w regnum,d1
000396B0 <AmiBlitz3.ab2@14215>    BSR writeword
000396B6 <AmiBlitz3.ab2@14216>    MOVE.l #1,d2
000396BA <AmiBlitz3.ab2@14217>    MOVE.w #$15,d1                                          ;fpu comp fsle
000396BE <AmiBlitz3.ab2@14218>    BSR writeword
000396C0 <AmiBlitz3.ab2@14219> RTS
000396C4 <AmiBlitz3.ab2@14222>    BSR.w docflib
000396C8 <AmiBlitz3.ab2@14223>    BSR.w dolecmp
000396CC <AmiBlitz3.ab2@14224> BRA.w docflib2
000396CE <AmiBlitz3.ab2@14228>   MOVEQ.l #-$2A,D1
000396D4 <AmiBlitz3.ab2@14229>    TST.b fpu
000396D8 <AmiBlitz3.ab2@14230>    BEQ do_greater_float__nofpu
000396DA <AmiBlitz3.ab2@14231>     MOVEQ #0,d1
000396E0 <AmiBlitz3.ab2@14232>    MOVE.w regnum,d1
000396E2 <AmiBlitz3.ab2@14233>    MOVE.l d1,d2
000396E4 <AmiBlitz3.ab2@14234>    ASL.l #7,d1
000396E6 <AmiBlitz3.ab2@14235>    ADDQ  #1,d2
000396E8 <AmiBlitz3.ab2@14236>    ASL.l #8,d2
000396EA <AmiBlitz3.ab2@14237>    ASL.l #2,d2
000396EC <AmiBlitz3.ab2@14238>    OR.l d2,d1
000396F2 <AmiBlitz3.ab2@14239>    OR.l #$f2000038,d1
000396F8 <AmiBlitz3.ab2@14240>    JSR writelong
000396FC <AmiBlitz3.ab2@14241>    MOVE.w #$f240,d1
00039702 <AmiBlitz3.ab2@14242>    OR.w regnum,d1
00039706 <AmiBlitz3.ab2@14243>    BSR writeword
0003970C <AmiBlitz3.ab2@14244>    MOVE.l #1,d2
00039710 <AmiBlitz3.ab2@14245>    MOVE.w #$12,d1                                          ;fpu comp fsgt
00039714 <AmiBlitz3.ab2@14246>    BSR writeword
00039716 <AmiBlitz3.ab2@14247> RTS
0003971A <AmiBlitz3.ab2@14250>    BSR.w docflib
0003971E <AmiBlitz3.ab2@14251>    BSR.w dogtcmp
00039722 <AmiBlitz3.ab2@14252> BRA.w docflib2
00039724 <AmiBlitz3.ab2@14256>   MOVEQ.l #-$2A,D1
0003972A <AmiBlitz3.ab2@14257>  TST.b fpu
0003972E <AmiBlitz3.ab2@14258>    BEQ do_greater_equal_float__nofpu
00039730 <AmiBlitz3.ab2@14259>    MOVEQ #0,d1
00039736 <AmiBlitz3.ab2@14260>    MOVE.w regnum,d1
00039738 <AmiBlitz3.ab2@14261>    MOVE.l d1,d2
0003973A <AmiBlitz3.ab2@14262>    ASL.l #7,d1
0003973C <AmiBlitz3.ab2@14263>    ADDQ  #1,d2
0003973E <AmiBlitz3.ab2@14264>    ASL.l #8,d2
00039740 <AmiBlitz3.ab2@14265>    ASL.l #2,d2
00039742 <AmiBlitz3.ab2@14266>    OR.l d2,d1
00039748 <AmiBlitz3.ab2@14267>    OR.l #$f2000038,d1
0003974E <AmiBlitz3.ab2@14268>    JSR writelong
00039752 <AmiBlitz3.ab2@14269>    MOVE.w #$f240,d1
00039758 <AmiBlitz3.ab2@14270>    OR.w regnum,d1
0003975C <AmiBlitz3.ab2@14271>    BSR writeword
00039762 <AmiBlitz3.ab2@14272>    MOVE.l #1,d2
00039766 <AmiBlitz3.ab2@14273>    MOVE.w #$13,d1                                          ;fpu comp fsge
0003976A <AmiBlitz3.ab2@14274>    BSR writeword
0003976C <AmiBlitz3.ab2@14275> RTS
00039770 <AmiBlitz3.ab2@14278>    BSR.w docflib
00039774 <AmiBlitz3.ab2@14279>    BSR.w dogecmp
00039778 <AmiBlitz3.ab2@14280> BRA.w docflib2
0003977E <AmiBlitz3.ab2@14285>   MOVE.l #$CE00,D1
00039784 <AmiBlitz3.ab2@14286>    MOVE.l d1,lastinstruction
00039788 <AmiBlitz3.ab2@14287>    BSR.w Atokejsr
0003978C <AmiBlitz3.ab2@14288> BRA.w doeqcmp
00039792 <AmiBlitz3.ab2@14292>   MOVE.l #$CE00,D1
00039798 <AmiBlitz3.ab2@14293>    MOVE.l d1,lastinstruction
0003979C <AmiBlitz3.ab2@14294>    BSR.w Atokejsr
000397A0 <AmiBlitz3.ab2@14295> BRA.w donecmp
000397A6 <AmiBlitz3.ab2@14299>   MOVE.l #$CE00,D1
000397AC <AmiBlitz3.ab2@14300>    MOVE.l d1,lastinstruction
000397B0 <AmiBlitz3.ab2@14301>    BSR.w Atokejsr
000397B4 <AmiBlitz3.ab2@14302> BRA.w doltcmp
000397BA <AmiBlitz3.ab2@14306>   MOVE.l #$CE00,D1
000397C0 <AmiBlitz3.ab2@14307>    MOVE.l d1,lastinstruction
000397C4 <AmiBlitz3.ab2@14308>    BSR.w Atokejsr
000397C8 <AmiBlitz3.ab2@14309> BRA.w dolecmp
000397CE <AmiBlitz3.ab2@14313>   MOVE.l #$CE00,D1
000397D4 <AmiBlitz3.ab2@14314>    MOVE.l d1,lastinstruction
000397D8 <AmiBlitz3.ab2@14315>    BSR.w Atokejsr
000397DC <AmiBlitz3.ab2@14316> BRA.w dogtcmp
000397E2 <AmiBlitz3.ab2@14320>   MOVE.l #$CE00,D1
000397E8 <AmiBlitz3.ab2@14321>    MOVE.l d1,lastinstruction
000397EC <AmiBlitz3.ab2@14322>    BSR.w Atokejsr
000397F0 <AmiBlitz3.ab2@14323> BRA.w dogecmp
000397F6 <AmiBlitz3.ab2@14328>   TST.b fast                                               ;compare
000397FA <AmiBlitz3.ab2@14329>   BEQ cmpit__org
00039800 <AmiBlitz3.ab2@14333>   MOVE.l destpointer,a0
00039806 <AmiBlitz3.ab2@14334>   SUB.l imm_addr,a0
0003980C <AmiBlitz3.ab2@14335>   CMP.l #6,a0
00039810 <AmiBlitz3.ab2@14336>   BNE cmpit__l11
00039816 <AmiBlitz3.ab2@14337>   MOVE.l imm_addr,a0
0003981E <AmiBlitz3.ab2@14338>   CMP.w #$223c,imm_addr
00039822 <AmiBlitz3.ab2@14339>   BNE cmpit__org
00039828 <AmiBlitz3.ab2@14340>   ADD.w #$8e80,-6(a4)
0003982E <AmiBlitz3.ab2@14343>   CLR.l imm_addr
00039830 <AmiBlitz3.ab2@14344> RTS
00039836 <AmiBlitz3.ab2@14347>   CMP.l #4,a0
0003983A <AmiBlitz3.ab2@14348>   BNE cmpit__l10
0003983E <AmiBlitz3.ab2@14349>   CMP.b #2,d3
00039842 <AmiBlitz3.ab2@14350>   BNE cmpit__l11b
00039848 <AmiBlitz3.ab2@14351>   ADD.w #$7e40,-4(a4)
0003984A <AmiBlitz3.ab2@14352> RTS
00039850 <AmiBlitz3.ab2@14355>  ADD.w #$7e00,-4(a4)
00039852 <AmiBlitz3.ab2@14356> RTS
00039858 <AmiBlitz3.ab2@14359>    MOVE.l destpointer,a0
0003985E <AmiBlitz3.ab2@14360>    SUB.l load_var_addr,a0
00039862 <AmiBlitz3.ab2@14361>    CMP.w #4,a0
00039866 <AmiBlitz3.ab2@14362>    BNE cmpit__org
0003986A <AmiBlitz3.ab2@14363>    CMP.b #3,d3
0003986E <AmiBlitz3.ab2@14364>    BCS cmpit__lv1
00039874 <AmiBlitz3.ab2@14365>    CLR.l load_var_addr
0003987A <AmiBlitz3.ab2@14366>    ADD.w #$9080-$200,-4(a4)
0003987C <AmiBlitz3.ab2@14367> RTS
00039880 <AmiBlitz3.ab2@14370>   CMP.b #2,d3
00039884 <AmiBlitz3.ab2@14371>    BNE cmpit__org
0003988A <AmiBlitz3.ab2@14372>    CLR.l load_var_addr
00039890 <AmiBlitz3.ab2@14373>    ADD.w #$8040-$200,-4(a4)
00039892 <AmiBlitz3.ab2@14374> RTS
00039898 <AmiBlitz3.ab2@14377>   MOVE.w regnum,D3
0003989A <AmiBlitz3.ab2@14378>   OR.w D3,D1
0003989C <AmiBlitz3.ab2@14379>   LSL.w #8,D3
0003989E <AmiBlitz3.ab2@14380>   LSL.w #1,D3
000398A0 <AmiBlitz3.ab2@14381>   OR.w D3,D1
000398A2 <AmiBlitz3.ab2@14382>   ADDQ.w #1,D1
000398A6 <AmiBlitz3.ab2@14383> BRA.w writeword
000398AA <AmiBlitz3.ab2@14387>    BSR.w cmpit
000398AE <AmiBlitz3.ab2@14390>    MOVE.w mseq(PC),D1
000398B2 <AmiBlitz3.ab2@14391> BRA.w cpoke
000398B6 <AmiBlitz3.ab2@14395>   BSR.w cmpit
000398BA <AmiBlitz3.ab2@14398>   MOVE.w msne(PC),D1
000398BE <AmiBlitz3.ab2@14399> BRA.w cpoke
000398C2 <AmiBlitz3.ab2@14403>   BSR.w cmpit
000398C6 <AmiBlitz3.ab2@14406>    MOVE.w mslt(PC),D1
000398CA <AmiBlitz3.ab2@14407> BRA.w cpoke
000398CE <AmiBlitz3.ab2@14411>    BSR.w cmpit
000398D2 <AmiBlitz3.ab2@14414>    MOVE.w msle(PC),D1
000398D6 <AmiBlitz3.ab2@14415> BRA.w cpoke
000398DA <AmiBlitz3.ab2@14419>    BSR.w cmpit
000398DE <AmiBlitz3.ab2@14422>    MOVE.w msgt(PC),D1
000398E2 <AmiBlitz3.ab2@14423> BRA.w cpoke
000398E6 <AmiBlitz3.ab2@14427>   BSR.w cmpit
000398EA <AmiBlitz3.ab2@14430>    MOVE.w msge(PC),D1
000398F0 <AmiBlitz3.ab2@14433>    OR.w regnum,D1
000398F4 <AmiBlitz3.ab2@14434>    CMP.w #5,d2
000398F8 <AmiBlitz3.ab2@14435>    BNE cpoke__nod0
000398FC <AmiBlitz3.ab2@14436>    CMP.w #5,d3
00039900 <AmiBlitz3.ab2@14437>    BNE cpoke__nod0
00039902 <AmiBlitz3.ab2@14438>    MOVE.l d1,-(a7)
00039908 <AmiBlitz3.ab2@14439>    MOVE.l #$44004a00,d1                                    ;68k neg.b:tst.b
0003990C <AmiBlitz3.ab2@14440>    BSR writelong
0003990E <AmiBlitz3.ab2@14441>    MOVE.l (a7)+,d1
00039912 <AmiBlitz3.ab2@14444>    BSR.w writeword                                         ;writeseq
00039914 <AmiBlitz3.ab2@14445>    MOVEQ.l #1,d2
0003991A <AmiBlitz3.ab2@14446>    MOVE.l lasttoken,d1
00039920 <AmiBlitz3.ab2@14447>     TST.b fast
00039924 <AmiBlitz3.ab2@14448>     BEQ.s cpoke__l11
0003992A <AmiBlitz3.ab2@14449>    CMP.l #$800b,d1
0003992E <AmiBlitz3.ab2@14450>    BEQ cpoke__l10
00039932 <AmiBlitz3.ab2@14453>   MOVE.w #$4880,D1                                         ;ext.w D regat
00039938 <AmiBlitz3.ab2@14454>   OR.w regnum,D1
0003993C <AmiBlitz3.ab2@14455>    BSR.w writeword                                         ;writeext.w
0003993E <AmiBlitz3.ab2@14456>   MOVEQ.l #$02,D2                                          ;type now WORD!
00039940 <AmiBlitz3.ab2@14459> RTS
00039944 <AmiBlitz3.ab2@14464>   MOVE.w #$D040,D1
00039946 <AmiBlitz3.ab2@14465>   MOVEQ.l #$02,D2                                          ;writeaddword   ;now a word
0003994A <AmiBlitz3.ab2@14466> BRA.w doplus2
0003994E <AmiBlitz3.ab2@14470>   MOVE.w #$D040,D1
00039950 <AmiBlitz3.ab2@14471>   MOVEQ.l #$03,D2                                          ;now a long
00039954 <AmiBlitz3.ab2@14472>    BSR.w doplus2
00039958 <AmiBlitz3.ab2@14473> BRA.w convert_word_to_long
0003995C <AmiBlitz3.ab2@14477>   MOVE.w #$D080,D1                                         ;writeaddlong
0003995E <AmiBlitz3.ab2@14480>   MOVE.w d1,a1
00039964 <AmiBlitz3.ab2@14481>   TST.b fast
00039968 <AmiBlitz3.ab2@14482>   BEQ doplus2__l10
0003996A <AmiBlitz3.ab2@14486>   ASR.w #8,d1
0003996E <AmiBlitz3.ab2@14487>   CMP.b #$90,d1
00039972 <AmiBlitz3.ab2@14488>   BEQ doplus2__sub1
00039976 <AmiBlitz3.ab2@14489>   CMP.b #$d0,d1
0003997A <AmiBlitz3.ab2@14490>   BNE doplus2__l10
0003997E <AmiBlitz3.ab2@14491>   CMP.b #3,d3
00039982 <AmiBlitz3.ab2@14492>   BCS doplus2__lq10
00039988 <AmiBlitz3.ab2@14493>   TST.b quickadd
0003998E <AmiBlitz3.ab2@14497>    MOVE.l destpointer,a0
00039994 <AmiBlitz3.ab2@14498>    CLR.b quickadd
0003999A <AmiBlitz3.ab2@14499>    CLR.l load_var_addr
000399A0 <AmiBlitz3.ab2@14500>    SUB.l imm_addr,a0
000399A4 <AmiBlitz3.ab2@14501>    CMP.w #6,a0
000399A8 <AmiBlitz3.ab2@14502>    BEQ doplus2__li10
000399AC <AmiBlitz3.ab2@14503>    CMP.w #4,a0
000399B0 <AmiBlitz3.ab2@14504>    BNE.s doplus2__li1
000399B6 <AmiBlitz3.ab2@14505>    CLR.l imm_addr
000399BC <AmiBlitz3.ab2@14506>    ADD.w #$a040-$200,-4(a4)
000399BE <AmiBlitz3.ab2@14507> RTS
000399C0 <AmiBlitz3.ab2@14510>    MOVE.l a4,a0
000399C6 <AmiBlitz3.ab2@14511>    SUB.l load_var_addr,a0
000399CC <AmiBlitz3.ab2@14512>    CMP.l #$a,a0
000399D0 <AmiBlitz3.ab2@14513>    BNE doplus2__l10e
000399D6 <AmiBlitz3.ab2@14514>    CLR.l load_var_addr
000399DA <AmiBlitz3.ab2@14515>    MOVE.w -$8(a4),d1
000399E0 <AmiBlitz3.ab2@14516>    MOVE.l -$4(a4),-$8(a4)
000399E4 <AmiBlitz3.ab2@14517>    MOVE.w d1,-$4(a4)
000399EA <AmiBlitz3.ab2@14518>    SUB.w #$1980,-$a(a4)
000399F0 <AmiBlitz3.ab2@14519>    SUBQ.l #2,destpointer
000399F2 <AmiBlitz3.ab2@14520> RTS
000399F8 <AmiBlitz3.ab2@14523>   CLR.b quickadd
000399FC <AmiBlitz3.ab2@14524> BRA doplus2__l10
00039A02 <AmiBlitz3.ab2@14527>    CLR.l imm_addr
00039A06 <AmiBlitz3.ab2@14528>    TST.l -4(a4)                                            ;skip If ADD.l #0,dx
00039A0A <AmiBlitz3.ab2@14529>    BNE doplus2__doit
00039A10 <AmiBlitz3.ab2@14530>    SUBQ.l #6,destpointer
00039A12 <AmiBlitz3.ab2@14531> RTS
00039A18 <AmiBlitz3.ab2@14534>    ADD.w #$b080-$200,-6(a4)
00039A1A <AmiBlitz3.ab2@14535> RTS
00039A20 <AmiBlitz3.ab2@14538>    MOVE.l destpointer,a0
00039A26 <AmiBlitz3.ab2@14539>    SUB.l load_var_addr,a0
00039A2A <AmiBlitz3.ab2@14540>    CMP.w #4,a0
00039A2E <AmiBlitz3.ab2@14541>    BNE doplus2__l10
00039A32 <AmiBlitz3.ab2@14542>    CMP.b #3,d3
00039A36 <AmiBlitz3.ab2@14543>    BNE doplus2__lv1
00039A3C <AmiBlitz3.ab2@14544>    CLR.l load_var_addr
00039A42 <AmiBlitz3.ab2@14545>    ADD.w #$b080-$200,-4(a4)
00039A44 <AmiBlitz3.ab2@14546> RTS
00039A48 <AmiBlitz3.ab2@14549>   CMP.b #2,d3
00039A4C <AmiBlitz3.ab2@14550>   BNE doplus2__l10
00039A52 <AmiBlitz3.ab2@14551>   CLR.l load_var_addr
00039A58 <AmiBlitz3.ab2@14552>   ADD.w #$a040-$200,-4(a4)
00039A5A <AmiBlitz3.ab2@14553> RTS
00039A60 <AmiBlitz3.ab2@14556>   MOVE.w regnum,D3
00039A62 <AmiBlitz3.ab2@14557>   MOVE.w a1,d1
00039A64 <AmiBlitz3.ab2@14558>   OR.w D3,D1
00039A66 <AmiBlitz3.ab2@14559>   ADDQ.w #1,D1
00039A68 <AmiBlitz3.ab2@14560>   LSL.w #8,D3
00039A6A <AmiBlitz3.ab2@14561>   LSL.w #1,D3
00039A6C <AmiBlitz3.ab2@14562>   OR.w D3,D1
00039A70 <AmiBlitz3.ab2@14563> BRA.w writeword
00039A74 <AmiBlitz3.ab2@14566>    CMP.b #3,d3
00039A78 <AmiBlitz3.ab2@14567>    BCS doplus2__sub1_lq10
00039A7E <AmiBlitz3.ab2@14568>    TST.b quickadd
00039A84 <AmiBlitz3.ab2@14572>    MOVE.l destpointer,a0
00039A8A <AmiBlitz3.ab2@14573>    CLR.b quickadd
00039A90 <AmiBlitz3.ab2@14574>    CLR.l load_var_addr
00039A96 <AmiBlitz3.ab2@14575>    SUB.l imm_addr,a0
00039A9A <AmiBlitz3.ab2@14576>    CMP.w #6,a0
00039A9E <AmiBlitz3.ab2@14577>    BEQ doplus2__sub1_li10
00039AA2 <AmiBlitz3.ab2@14578>    CMP.w #4,a0
00039AA6 <AmiBlitz3.ab2@14579>    BNE.s doplus2__sub1_li1
00039AAC <AmiBlitz3.ab2@14580>    CLR.l imm_addr
00039AB2 <AmiBlitz3.ab2@14581>    ADD.w #$6040-$200,-4(a4)
00039AB4 <AmiBlitz3.ab2@14582> RTS
00039AB6 <AmiBlitz3.ab2@14585>    MOVE.l a4,a0
00039ABC <AmiBlitz3.ab2@14586>     SUB.l load_var_addr,a0
00039AC2 <AmiBlitz3.ab2@14587>     CMP.l #$a,a0
00039AC6 <AmiBlitz3.ab2@14588>     BNE doplus2__sub1_l10e
00039ACC <AmiBlitz3.ab2@14589>    CLR.l load_var_addr
00039AD0 <AmiBlitz3.ab2@14590>    MOVE.w -$8(a4),d1
00039AD6 <AmiBlitz3.ab2@14591>    MOVE.l -$4(a4),-$8(a4)
00039ADA <AmiBlitz3.ab2@14592>    MOVE.w d1,-$4(a4)
00039AE0 <AmiBlitz3.ab2@14593>    SUB.w #$1b80,-$a(a4)
00039AE6 <AmiBlitz3.ab2@14594>    SUBQ.l #2,destpointer
00039AE8 <AmiBlitz3.ab2@14595> RTS
00039AEE <AmiBlitz3.ab2@14598>   CLR.b quickadd
00039AF2 <AmiBlitz3.ab2@14599> BRA doplus2__sub1_l10
00039AF8 <AmiBlitz3.ab2@14602>    CLR.l imm_addr
00039AFE <AmiBlitz3.ab2@14603>    ADD.w #$7080-$200,-6(a4)
00039B00 <AmiBlitz3.ab2@14604> RTS
00039B06 <AmiBlitz3.ab2@14607>    MOVE.l destpointer,a0
00039B0C <AmiBlitz3.ab2@14608>    SUB.l load_var_addr,a0
00039B10 <AmiBlitz3.ab2@14609>    CMP.w #4,a0
00039B14 <AmiBlitz3.ab2@14610>    BNE doplus2__sub1_l10
00039B18 <AmiBlitz3.ab2@14611>    CMP.b #3,d3
00039B1C <AmiBlitz3.ab2@14612>    BNE doplus2__sub1_lv1
00039B22 <AmiBlitz3.ab2@14613>    CLR.l load_var_addr
00039B28 <AmiBlitz3.ab2@14614>    ADD.w #$7080-$200,-4(a4)
00039B2A <AmiBlitz3.ab2@14615> RTS
00039B2E <AmiBlitz3.ab2@14618>    CMP.b #2,d3
00039B32 <AmiBlitz3.ab2@14619>    BNE doplus2__sub1_l10
00039B38 <AmiBlitz3.ab2@14620>    CLR.l load_var_addr
00039B3E <AmiBlitz3.ab2@14621>    ADD.w #$6040-$200,-4(a4)
00039B40 <AmiBlitz3.ab2@14622> RTS
00039B46 <AmiBlitz3.ab2@14625>   MOVE.w regnum,D3
00039B48 <AmiBlitz3.ab2@14626>   MOVE.w a1,d1
00039B4A <AmiBlitz3.ab2@14627>   OR.w D3,D1
00039B4C <AmiBlitz3.ab2@14628>   ADDQ.w #1,D1
00039B4E <AmiBlitz3.ab2@14629>   LSL.w #8,D3
00039B50 <AmiBlitz3.ab2@14630>   LSL.w #1,D3
00039B52 <AmiBlitz3.ab2@14631>   OR.w D3,D1
00039B56 <AmiBlitz3.ab2@14632> BRA.w writeword
00039B58 <AmiBlitz3.ab2@14636>   MOVEQ #0,d0
00039B5E <AmiBlitz3.ab2@14637>   MOVE.w regnum,d0
00039B60 <AmiBlitz3.ab2@14638>   ADDQ #1,d0
00039B62 <AmiBlitz3.ab2@14639>   ASL.w #8,d0
00039B64 <AmiBlitz3.ab2@14640>   ASL.w #2,d0
00039B6A <AmiBlitz3.ab2@14641>   MOVE.l #$f2000022,d1                                     ;fpu add
00039B6C <AmiBlitz3.ab2@14642>   OR.l d0,d1
00039B72 <AmiBlitz3.ab2@14643>   MOVE.w regnum,d0
00039B74 <AmiBlitz3.ab2@14644>   ASL.w #7,d0
00039B76 <AmiBlitz3.ab2@14645>   OR.l d0,d1
00039B7A <AmiBlitz3.ab2@14646> BRA.w writelong
00039B80 <AmiBlitz3.ab2@14652>   TST.b iee
00039B84 <AmiBlitz3.ab2@14653>   BNE do_plus_float__fadd1
00039B88 <AmiBlitz3.ab2@14654>   MOVE.w #$FFBE,D1                                         ;#-66,d1 org soruce ;floatadd
00039B8E <AmiBlitz3.ab2@14657>    MOVE.w D1,libjsr+2
00039B92 <AmiBlitz3.ab2@14658>    BSR.w JL_0_AD40
00039B94 <AmiBlitz3.ab2@14659>   MOVE.l D4,D1
00039B98 <AmiBlitz3.ab2@14660>    BSR.w JL_0_AD38
00039B9C <AmiBlitz3.ab2@14661>   MOVE.w #$C900,D1
00039BA0 <AmiBlitz3.ab2@14662>    BSR.w Atokejsr
00039BA4 <AmiBlitz3.ab2@14663>    BSR.w JL_0_A352
00039BAA <AmiBlitz3.ab2@14664>   MOVE.l libjsr,D1
00039BAE <AmiBlitz3.ab2@14665>    BSR.w writelong
00039BB2 <AmiBlitz3.ab2@14666>    BSR.w JL_0_A36E
00039BB4 <AmiBlitz3.ab2@14667>   MOVE.l D5,D1
00039BB8 <AmiBlitz3.ab2@14668> BRA.w JL_0_AD38
00039BBE <AmiBlitz3.ab2@14672>   MOVE.w regnum,D1
00039BC0 <AmiBlitz3.ab2@14673>   LSL.w #8,D1
00039BC2 <AmiBlitz3.ab2@14674>   LSL.w #1,D1
00039BC4 <AmiBlitz3.ab2@14675>   MOVE.w D1,-(A7)
00039BC8 <AmiBlitz3.ab2@14676>   CMP.w #3072,d1
00039BCC <AmiBlitz3.ab2@14677>   BEQ 'l1
00039BD2 <AmiBlitz3.ab2@14678>   OR.w addcode,D1                                          ;move.l (a7)+,d0
00039BD6 <AmiBlitz3.ab2@14679> BRA 'l2
00039BDA <AmiBlitz3.ab2@14682>    MOVE.w #$588f,d1                                        ;addq.l #4,a7
00039BDE <AmiBlitz3.ab2@14685>    BSR.w writeword
00039BE0 <AmiBlitz3.ab2@14686>   MOVE.w (A7)+,D1
00039BE6 <AmiBlitz3.ab2@14687>   OR.w addcode+2,D1                                        ;native string add.l d0,(a7)
00039BEA <AmiBlitz3.ab2@14688> BRA.w writeword
00039BEE <AmiBlitz3.ab2@14694>   MOVE.w #$9040,D1
00039BF2 <AmiBlitz3.ab2@14695> BRA.w doplus2
00039BF6 <AmiBlitz3.ab2@14699>   MOVE.w #$9040,D1
00039BFA <AmiBlitz3.ab2@14700> BRA.w doplus2
00039BFE <AmiBlitz3.ab2@14704>   MOVE.w #$9080,D1
00039C02 <AmiBlitz3.ab2@14705> BRA.w doplus2
00039C08 <AmiBlitz3.ab2@14709>    TST.b iee
00039C0C <AmiBlitz3.ab2@14710>     BNE do_minus_float__fs1
00039C10 <AmiBlitz3.ab2@14711>   MOVE.w #$FFB8,D1                                         ;floatsub
00039C14 <AmiBlitz3.ab2@14712> BRA.w doflib
00039C16 <AmiBlitz3.ab2@14715>   MOVEQ #0,d0
00039C1C <AmiBlitz3.ab2@14716>   MOVE.w regnum,d0
00039C1E <AmiBlitz3.ab2@14717>   ADDQ #1,d0
00039C20 <AmiBlitz3.ab2@14718>   ASL.w #8,d0
00039C22 <AmiBlitz3.ab2@14719>   ASL.w #2,d0
00039C28 <AmiBlitz3.ab2@14720>   MOVE.l #$f2000028,d1
00039C2A <AmiBlitz3.ab2@14721>   OR.l d0,d1
00039C30 <AmiBlitz3.ab2@14722>   MOVE.w regnum,d0
00039C32 <AmiBlitz3.ab2@14723>   ASL.w #7,d0
00039C34 <AmiBlitz3.ab2@14724>   OR.l d0,d1
00039C38 <AmiBlitz3.ab2@14725> BRA.w writelong
00039C3C <AmiBlitz3.ab2@14731>   MOVE.w #$C1C0,D1
00039C3E <AmiBlitz3.ab2@14732>   MOVEQ.l #$02,D2                                          ;now a word
00039C42 <AmiBlitz3.ab2@14733> BRA.w doplus2
00039C46 <AmiBlitz3.ab2@14737>   MOVE.w #$C1C0,D1
00039C48 <AmiBlitz3.ab2@14738>   MOVEQ.l #$03,D2                                          ;now a long.
00039C4C <AmiBlitz3.ab2@14739> BRA.w doplus2
00039C50 <AmiBlitz3.ab2@14743>   MOVE.w #$CA00,D1                                         ;quickmul
00039C54 <AmiBlitz3.ab2@14744> BRA.w domylib
00039C5A <AmiBlitz3.ab2@14748>   TST.b fast
00039C5E <AmiBlitz3.ab2@14749>   BNE.s 'l10
00039C62 <AmiBlitz3.ab2@14750>   MOVE.w #$CA01,D1                                         ;writelongmul
00039C66 <AmiBlitz3.ab2@14751> BRA.w domylib
00039C6C <AmiBlitz3.ab2@14760>    MOVE.l destpointer,a0
00039C72 <AmiBlitz3.ab2@14761>    SUB.l imm_addr,a0
00039C76 <AmiBlitz3.ab2@14762>    CMP.w #6,a0
00039C7A <AmiBlitz3.ab2@14763>    BNE 'li1
00039C7C <AmiBlitz3.ab2@14764>    MOVEQ.l #2,d1
00039C7E <AmiBlitz3.ab2@14765>    MOVEQ #1,d3
00039C82 <AmiBlitz3.ab2@14768>   CMP.l -4(a4),d1
00039C86 <AmiBlitz3.ab2@14769>    BEQ 'oklsl
00039C88 <AmiBlitz3.ab2@14770>     LSL.l #1,d1
00039C8E <AmiBlitz3.ab2@14771>     ADD.l #1,d3
00039C94 <AmiBlitz3.ab2@14772>     CMP.l #9,d3
00039C98 <AmiBlitz3.ab2@14773>     BNE 'ag
00039C9C <AmiBlitz3.ab2@14774>    MOVE.w -2(a4),d1
00039CA0 <AmiBlitz3.ab2@14775>    BSR writeword
00039CA6 <AmiBlitz3.ab2@14776>    MOVE.w -6(a4),-4(a4)
00039CAE <AmiBlitz3.ab2@14777>    MOVE.l #$4c3c0800,-8(a4)
00039CB4 <AmiBlitz3.ab2@14778>    MOVE.w regnum,D3
00039CB8 <AmiBlitz3.ab2@14779>    MULS #$1000,D3
00039CBC <AmiBlitz3.ab2@14780>    OR.w D3,-6(a4)
00039CC2 <AmiBlitz3.ab2@14781>    CLR.l load_var_addr
00039CC8 <AmiBlitz3.ab2@14782>    CLR.l imm_addr
00039CCC <AmiBlitz3.ab2@14783> BRA 'li3
00039CD0 <AmiBlitz3.ab2@14786>    CMP.w #8,d3
00039CD4 <AmiBlitz3.ab2@14787>    BEQ 'ok
00039CD6 <AmiBlitz3.ab2@14788>    ASL.l #1,d3
00039CD8 <AmiBlitz3.ab2@14789>    ASL.l #8,d3
00039CDC <AmiBlitz3.ab2@14790>    MOVE.w #$e188,d1
00039CDE <AmiBlitz3.ab2@14791>    OR.w d3,d1
00039CE2 <AmiBlitz3.ab2@14792>    MOVE.w d1,-6(a4)
00039CE6 <AmiBlitz3.ab2@14793> BRA 'okls
00039CEC <AmiBlitz3.ab2@14796>   MOVE.w #$e188,-6(a4)                                     ;lsl.l #,dx
00039CF2 <AmiBlitz3.ab2@14799>   MOVE.w regnum,d3
00039CF6 <AmiBlitz3.ab2@14800>    OR.b d3,-5(a4)
00039CFC <AmiBlitz3.ab2@14801>    SUBQ.l #4,destpointer
00039D02 <AmiBlitz3.ab2@14802>    CLR.l load_var_addr
00039D08 <AmiBlitz3.ab2@14803>    CLR.l imm_addr
00039D0C <AmiBlitz3.ab2@14804> BRA 'li3
00039D12 <AmiBlitz3.ab2@14807>    MOVE.l destpointer,a0
00039D18 <AmiBlitz3.ab2@14808>    SUB.l load_var_addr,a0
00039D1C <AmiBlitz3.ab2@14809>    CMP.w #4,a0
00039D20 <AmiBlitz3.ab2@14810>    BNE 'li2
00039D24 <AmiBlitz3.ab2@14811>    MOVE.w -2(a4),d1
00039D28 <AmiBlitz3.ab2@14812>    BSR writeword
00039D2E <AmiBlitz3.ab2@14813>    MOVE.b #$4c,-6(a4)
00039D34 <AmiBlitz3.ab2@14814>    MOVE.w #$0800,-4(a4)
00039D3A <AmiBlitz3.ab2@14815>    MOVE.w regnum,D3
00039D3E <AmiBlitz3.ab2@14816>    MULS #$1000,d3
00039D42 <AmiBlitz3.ab2@14817>    OR.w D3,-4(a4)
00039D46 <AmiBlitz3.ab2@14818> BRA 'li3
00039D4C <AmiBlitz3.ab2@14821>    MOVE.l #$4c010800,d1
00039D52 <AmiBlitz3.ab2@14822>    MOVE.w regnum,D3
00039D54 <AmiBlitz3.ab2@14823>    EXT.l d3
00039D58 <AmiBlitz3.ab2@14824>    MULS #$1000,d3
00039D5A <AmiBlitz3.ab2@14825>    OR.w D3,d1
00039D5E <AmiBlitz3.ab2@14826>    MULS #$10,d3
00039D60 <AmiBlitz3.ab2@14827>    ADD.l d3,d1
00039D64 <AmiBlitz3.ab2@14828>    BSR writelong
00039D66 <AmiBlitz3.ab2@14833> RTS
00039D68 <AmiBlitz3.ab2@14837>   MOVE.w D1,-(A7)
00039D6C <AmiBlitz3.ab2@14838>    BSR.w JL_0_AD40
00039D6E <AmiBlitz3.ab2@14839>   MOVE.l D4,D1
00039D72 <AmiBlitz3.ab2@14840>    BSR.w JL_0_AD38
00039D76 <AmiBlitz3.ab2@14841>    BSR.w JL_0_A352
00039D78 <AmiBlitz3.ab2@14842>   MOVEQ #0,d1
00039D7A <AmiBlitz3.ab2@14843>   MOVE.w (A7)+,D1
00039D80 <AmiBlitz3.ab2@14844>   MOVE.l d1,lastinstruction
00039D84 <AmiBlitz3.ab2@14845>    BSR.w Atokejsr
00039D88 <AmiBlitz3.ab2@14846>    BSR.w JL_0_A36E
00039D8A <AmiBlitz3.ab2@14847>   MOVE.l D5,D1
00039D8E <AmiBlitz3.ab2@14848> BRA.w JL_0_AD38
00039D94 <AmiBlitz3.ab2@14852>    TST.b iee
00039D98 <AmiBlitz3.ab2@14853>     BNE fm1
00039D9C <AmiBlitz3.ab2@14854>  MOVE.w #$FFB2,D1                                          ;floatmul
00039DA0 <AmiBlitz3.ab2@14855> BRA.w doflib
00039DA2 <AmiBlitz3.ab2@14858>   MOVEQ #0,d0
00039DA8 <AmiBlitz3.ab2@14859>  MOVE.w regnum,d0
00039DAA <AmiBlitz3.ab2@14860>  ADDQ #1,d0
00039DAC <AmiBlitz3.ab2@14861>  ASL.w #8,d0
00039DAE <AmiBlitz3.ab2@14862>  ASL.w #2,d0
00039DB4 <AmiBlitz3.ab2@14863>  MOVE.l #$f2000023,d1
00039DB6 <AmiBlitz3.ab2@14864>  OR.l d0,d1
00039DBC <AmiBlitz3.ab2@14865>  MOVE.w regnum,d0
00039DBE <AmiBlitz3.ab2@14866>  ASL.w #7,d0
00039DC0 <AmiBlitz3.ab2@14867>  OR.l d0,d1
00039DC4 <AmiBlitz3.ab2@14868> BRA.w writelong
00039DC6 <AmiBlitz3.ab2@14872>   MOVE.w D2,-(A7)                                          ;dopow
00039DC8 <AmiBlitz3.ab2@14873>   MOVE.w D2,D3
00039DCA <AmiBlitz3.ab2@14874>   MOVEQ.l #$05,D2
00039DCE <AmiBlitz3.ab2@14875>    BSR.w JL_0_9770
00039DD4 <AmiBlitz3.ab2@14876>   ADDQ.w #1,regnum
00039DD6 <AmiBlitz3.ab2@14877>   MOVE.w (A7)+,D3
00039DD8 <AmiBlitz3.ab2@14878>   MOVEQ.l #$05,D2
00039DDC <AmiBlitz3.ab2@14879>    BSR.w writeconvertcode
00039DE2 <AmiBlitz3.ab2@14880>   SUBQ.w #1,regnum
00039DE6 <AmiBlitz3.ab2@14881>    BSR.w nocando
00039DEC <AmiBlitz3.ab2@14882>    TST.b fpu
00039DF0 <AmiBlitz3.ab2@14883>    BEQ 'old
00039DF2 <AmiBlitz3.ab2@14884>    MOVEQ #0,d1
00039DF8 <AmiBlitz3.ab2@14885>    MOVE.w regnum,d1
00039DFA <AmiBlitz3.ab2@14886>   MOVE.l d1,d0
00039DFC <AmiBlitz3.ab2@14887>   ASL.w #7,d1
00039DFE <AmiBlitz3.ab2@14888>   ASL.w #8,d0
00039E00 <AmiBlitz3.ab2@14889>   ASL.w #2,d0
00039E02 <AmiBlitz3.ab2@14890>   OR.w d0,d1
00039E04 <AmiBlitz3.ab2@14891>   MOVE.l d1,-(a7)
00039E0A <AmiBlitz3.ab2@14893>    OR.l #$f2000016,d1                                       ;flog2.x fp0      ;fpu ^ pow
00039E0E <AmiBlitz3.ab2@14894>    BSR writelong
00039E14 <AmiBlitz3.ab2@14895>    MOVE.w regnum,d0
00039E16 <AmiBlitz3.ab2@14896>  ADDQ #1,d0
00039E18 <AmiBlitz3.ab2@14897>  ASL.w #8,d0
00039E1A <AmiBlitz3.ab2@14898>  ASL.w #2,d0
00039E20 <AmiBlitz3.ab2@14899>  MOVE.l #$f2000023,d1
00039E22 <AmiBlitz3.ab2@14900>  OR.l d0,d1
00039E28 <AmiBlitz3.ab2@14901>  MOVE.w regnum,d0
00039E2A <AmiBlitz3.ab2@14902>  ASL.w #7,d0
00039E2C <AmiBlitz3.ab2@14903>  OR.l d0,d1
00039E32 <AmiBlitz3.ab2@14904>    OR.l #$f2000023,d1                                      ;fmulx.x fp1,fp0
00039E36 <AmiBlitz3.ab2@14905>    BSR writelong
00039E38 <AmiBlitz3.ab2@14906>    MOVE.l (a7)+,d1
00039E3E <AmiBlitz3.ab2@14908>    OR.l #$f2000011,d1                                      ;ftwotox.x fp0
00039E42 <AmiBlitz3.ab2@14909>    BSR writelong
00039E44 <AmiBlitz3.ab2@14910> RTS
00039E48 <AmiBlitz3.ab2@14913>   MOVE.w #$6001,D1
00039E4C <AmiBlitz3.ab2@14914> BRA.w domylib
00039E50 <AmiBlitz3.ab2@14920>   MOVEA.l forthsp(PC),A0
00039E54 <AmiBlitz3.ab2@14921>   MOVE.w #$FFFF,-(A0)                                      ;#-1,-(a0) org source
00039E56 <AmiBlitz3.ab2@14922> RTS
00039E5A <AmiBlitz3.ab2@14928>   MOVE.w #$D400,D1
00039E5E <AmiBlitz3.ab2@14929> BRA.w domylib
00039E62 <AmiBlitz3.ab2@14933>   MOVE.w #$D401,D1
00039E66 <AmiBlitz3.ab2@14934> BRA.w domylib
00039E6A <AmiBlitz3.ab2@14938>    BSR.w nocando                                           ;modlib uses an alibjsr here!
00039E6E <AmiBlitz3.ab2@14939>   MOVE.w #$D402,D1
00039E72 <AmiBlitz3.ab2@14940> BRA.w domylib
00039E76 <AmiBlitz3.ab2@14944>   MOVE.w #$D403,D1
00039E78 <AmiBlitz3.ab2@14945>   MOVEQ.l #$02,D2                                          ;now a word.
00039E7C <AmiBlitz3.ab2@14946> BRA.w domylib
00039E80 <AmiBlitz3.ab2@14950>    BSR.w nocando                                           ;modlib lib uses an alibjsr!  ;domod float
00039E86 <AmiBlitz3.ab2@14951>   TST.b fpu
00039E8A <AmiBlitz3.ab2@14952>   BEQ 'old
00039E8C <AmiBlitz3.ab2@14953>   MOVEQ #0,d1
00039E92 <AmiBlitz3.ab2@14954>   MOVE.w regnum,d1                                         ;fpu mod
00039E94 <AmiBlitz3.ab2@14955>   MOVE.l d1,d0
00039E96 <AmiBlitz3.ab2@14956>   ADDQ.l #1,d1
00039E98 <AmiBlitz3.ab2@14957>   ASL.l #7,d0
00039E9A <AmiBlitz3.ab2@14958>   ASL.l #8,d1
00039E9C <AmiBlitz3.ab2@14959>   ASL.l #2,d1
00039E9E <AmiBlitz3.ab2@14960>   OR.l d0,d1
00039EA0 <AmiBlitz3.ab2@14961>   MOVE.l d0,-(a7)
00039EA6 <AmiBlitz3.ab2@14962>   OR.l #$f2000021,d1
00039EAA <AmiBlitz3.ab2@14963>   BSR writelong
00039EAC <AmiBlitz3.ab2@14964>   MOVE.l (a7)+,d0
00039EAE <AmiBlitz3.ab2@14965>  RTS
00039EB2 <AmiBlitz3.ab2@14968>   MOVE.w #$D404,D1
00039EB4 <AmiBlitz3.ab2@14969>   MOVEQ.l #$03,D2                                          ;now a long
00039EB8 <AmiBlitz3.ab2@14970> BRA.w domylib
00039EBC <AmiBlitz3.ab2@14978>   MOVE.w #$48C0,D1
00039EC2 <AmiBlitz3.ab2@14979>   OR.w regnum,D1
00039EC6 <AmiBlitz3.ab2@14980>    BSR.w writeword
00039EC8 <AmiBlitz3.ab2@14981>   ADDQ.w #1,D1
00039ECC <AmiBlitz3.ab2@14982>    BSR.w writeword
00039ED0 <AmiBlitz3.ab2@14985>    MOVE.w #$48C0,D1
00039ED6 <AmiBlitz3.ab2@14986>   OR.w regnum,D1
00039EDA <AmiBlitz3.ab2@14987>    BSR.w writeword
00039EDE <AmiBlitz3.ab2@14988>   MOVE.w #$81C0,D1
00039EE2 <AmiBlitz3.ab2@14989> BRA.w doplus2
00039EE8 <AmiBlitz3.ab2@14993>   TST.b fast
00039EEC <AmiBlitz3.ab2@14994>   BNE.s 'l10
00039EF0 <AmiBlitz3.ab2@14995>   MOVE.w #$CB01,D1
00039EF4 <AmiBlitz3.ab2@14996> BRA.w domylib
00039EF8 <AmiBlitz3.ab2@15002>   BSR.w JL_0_AD40
00039EFA <AmiBlitz3.ab2@15003>   MOVE.l D4,D1
00039EFE <AmiBlitz3.ab2@15004>    BSR.w JL_0_AD38
00039F02 <AmiBlitz3.ab2@15005>    BSR.w JL_0_A352
00039F08 <AmiBlitz3.ab2@15019>    MOVE.l #$4c410800,d1
00039F0C <AmiBlitz3.ab2@15020>    BSR writelong
00039F10 <AmiBlitz3.ab2@15023>   MOVE.w #$4e71,d1
00039F14 <AmiBlitz3.ab2@15025>    BSR.w JL_0_A36E
00039F16 <AmiBlitz3.ab2@15026>   MOVE.l D5,D1
00039F1A <AmiBlitz3.ab2@15027> BRA.w JL_0_AD38
00039F1E <AmiBlitz3.ab2@15030>     CMP.w #8,d3
00039F22 <AmiBlitz3.ab2@15031>     BEQ 'ok
00039F24 <AmiBlitz3.ab2@15032>     ASL.l #1,d3
00039F26 <AmiBlitz3.ab2@15033>     ASL.l #8,d3
00039F2A <AmiBlitz3.ab2@15034>     MOVE.w #$e080,d1
00039F2C <AmiBlitz3.ab2@15035>     OR.w d3,d1
00039F30 <AmiBlitz3.ab2@15036> BRA 'oklsr2
00039F34 <AmiBlitz3.ab2@15039>   MOVE.w #$e080,d1                                         ;lsr.l #,dx
00039F3A <AmiBlitz3.ab2@15042>      SUBQ.l #6,destpointer
00039F3E <AmiBlitz3.ab2@15043>      BSR writeword
00039F40 <AmiBlitz3.ab2@15044>      MOVE.l (a7)+,d3
00039F42 <AmiBlitz3.ab2@15045>      MOVEQ #0,d1
00039F48 <AmiBlitz3.ab2@15046>      CLR.l load_var_addr
00039F4E <AmiBlitz3.ab2@15047>      CLR.l imm_addr
00039F52 <AmiBlitz3.ab2@15048> BRA JL_0_AD38
00039F56 <AmiBlitz3.ab2@15052>   MOVE.w #$CB00,D1                                         ;quickdiv
00039F5A <AmiBlitz3.ab2@15053> BRA.w domylib
00039F60 <AmiBlitz3.ab2@15057>    TST.b iee
00039F64 <AmiBlitz3.ab2@15058>    BNE fdiv1
00039F68 <AmiBlitz3.ab2@15059>    MOVE.w #$FFAC,D1                                        ;floatdiv
00039F6C <AmiBlitz3.ab2@15060> BRA.w doflib
00039F6E <AmiBlitz3.ab2@15064>   MOVEQ #0,d0
00039F74 <AmiBlitz3.ab2@15065>   MOVE.w regnum,d0
00039F76 <AmiBlitz3.ab2@15066>   ADDQ #1,d0
00039F78 <AmiBlitz3.ab2@15067>   ASL.w #8,d0
00039F7A <AmiBlitz3.ab2@15068>   ASL.w #2,d0
00039F80 <AmiBlitz3.ab2@15069>   MOVE.l #$f2000020,d1                                     ;fpu div
00039F82 <AmiBlitz3.ab2@15070>   OR.l d0,d1
00039F88 <AmiBlitz3.ab2@15071>   MOVE.w regnum,d0
00039F8A <AmiBlitz3.ab2@15072>   ASL.w #7,d0
00039F8C <AmiBlitz3.ab2@15073>   OR.l d0,d1
00039F90 <AmiBlitz3.ab2@15074> BRA.w writelong
00039F94 <AmiBlitz3.ab2@15078>   MOVE.w #$C000,D1
00039F98 <AmiBlitz3.ab2@15079> BRA.w doplus2
00039F9C <AmiBlitz3.ab2@15083>   MOVE.w #$C040,D1
00039FA0 <AmiBlitz3.ab2@15084> BRA.w doplus2
00039FA4 <AmiBlitz3.ab2@15088>   MOVE.w #$C080,D1
00039FA8 <AmiBlitz3.ab2@15089> BRA.w doplus2
00039FAC <AmiBlitz3.ab2@15093>   MOVE.w #$8000,D1
00039FB0 <AmiBlitz3.ab2@15094> BRA.w doplus2
00039FB4 <AmiBlitz3.ab2@15098>   MOVE.w #$8040,D1
00039FB8 <AmiBlitz3.ab2@15099> BRA.w doplus2
00039FBC <AmiBlitz3.ab2@15103>   MOVE.w #$8080,D1
00039FC0 <AmiBlitz3.ab2@15104> BRA.w doplus2
00039FC4 <AmiBlitz3.ab2@15108>   MOVE.w #$B100,D1
00039FCA <AmiBlitz3.ab2@15111>    MOVE.w regnum,D3
00039FCC <AmiBlitz3.ab2@15112>   OR.w D3,D1
00039FCE <AmiBlitz3.ab2@15113>   ADDQ.w #1,D3
00039FD0 <AmiBlitz3.ab2@15114>   LSL.w #8,D3
00039FD2 <AmiBlitz3.ab2@15115>   LSL.w #1,D3
00039FD4 <AmiBlitz3.ab2@15116>   OR.w D3,D1
00039FD8 <AmiBlitz3.ab2@15117> BRA.w writeword
00039FDC <AmiBlitz3.ab2@15121>   MOVE.w #$B140,D1
00039FE0 <AmiBlitz3.ab2@15122> BRA.w JL_0_A25C
00039FE4 <AmiBlitz3.ab2@15126>   MOVE.w #$B180,D1
00039FE8 <AmiBlitz3.ab2@15127> BRA.w JL_0_A25C
00039FEC <AmiBlitz3.ab2@15131>   MOVE.w #$E1A8,D1
00039FF0 <AmiBlitz3.ab2@15132> BRA.w JL_0_A298
00039FF4 <AmiBlitz3.ab2@15136>   MOVE.w #$E0A8,D1
00039FF8 <AmiBlitz3.ab2@15137> BRA.w JL_0_A298
00039FFC <AmiBlitz3.ab2@15141>   MOVE.w #$E0A0,D1
0003A000 <AmiBlitz3.ab2@15142> BRA.w JL_0_A298
0003A002 <AmiBlitz3.ab2@15146>   MOVE.w D1,-(A7)
0003A008 <AmiBlitz3.ab2@15147>   ADDQ.w #1,regnum
0003A00A <AmiBlitz3.ab2@15148>   MOVE.w D2,-(A7)
0003A00C <AmiBlitz3.ab2@15149>   MOVE.w D2,D3
0003A00E <AmiBlitz3.ab2@15150>   MOVEQ.l #$02,D2
0003A012 <AmiBlitz3.ab2@15153>    BSR.w writeconvertcode
0003A014 <AmiBlitz3.ab2@15154>   MOVE.w (A7)+,D2
0003A01A <AmiBlitz3.ab2@15155>   SUBQ.w #1,regnum
0003A01E <AmiBlitz3.ab2@15156>   CMP.w #$4,D2
0003A022 <AmiBlitz3.ab2@15157>    BEQ.w JL_0_A2C2
0003A024 <AmiBlitz3.ab2@15158>   MOVE.w D2,D3
0003A026 <AmiBlitz3.ab2@15159>   MOVEQ.l #$03,D2
0003A02A <AmiBlitz3.ab2@15160>    BSR.w JL_0_9770
0003A02C <AmiBlitz3.ab2@15163>    MOVE.w (A7)+,D1
0003A032 <AmiBlitz3.ab2@15164>   MOVE.w regnum,D3
0003A034 <AmiBlitz3.ab2@15165>   OR.w D3,D1
0003A036 <AmiBlitz3.ab2@15166>   ADDQ.w #1,D3
0003A038 <AmiBlitz3.ab2@15167>   LSL.w #8,D3
0003A03A <AmiBlitz3.ab2@15168>   LSL.w #1,D3
0003A03C <AmiBlitz3.ab2@15169>   OR.w D3,D1
0003A040 <AmiBlitz3.ab2@15170> BRA.w writeword
0003A044 <AmiBlitz3.ab2@15174>   MOVE.w #$0100,D1
0003A048 <AmiBlitz3.ab2@15175>    BSR.w JL_0_A31C
0003A04E <AmiBlitz3.ab2@15176>   MOVE.w regnum,D1
0003A052 <AmiBlitz3.ab2@15177>   ORI.w #$56C0,D1
0003A056 <AmiBlitz3.ab2@15178>    BSR.w writeword
0003A05C <AmiBlitz3.ab2@15179>   MOVE.w regnum,D1
0003A060 <AmiBlitz3.ab2@15180>   ORI.w #$4880,D1
0003A064 <AmiBlitz3.ab2@15181>    BSR.w writeword
0003A066 <AmiBlitz3.ab2@15182>   MOVEQ.l #$02,D2
0003A068 <AmiBlitz3.ab2@15183> RTS
0003A06C <AmiBlitz3.ab2@15187>   MOVE.w #$01C0,D1
0003A070 <AmiBlitz3.ab2@15190>    BSR.w JL_0_A31C
0003A072 <AmiBlitz3.ab2@15191>   MOVEQ.l #$03,D2
0003A074 <AmiBlitz3.ab2@15192> RTS
0003A078 <AmiBlitz3.ab2@15196>   MOVE.w #$0180,D1
0003A07C <AmiBlitz3.ab2@15197> BRA.w JL_0_A304
0003A080 <AmiBlitz3.ab2@15201>   MOVE.w #$0140,D1
0003A084 <AmiBlitz3.ab2@15202> BRA.w JL_0_A304
0003A086 <AmiBlitz3.ab2@15206>   MOVE.w D1,-(A7)
0003A088 <AmiBlitz3.ab2@15207>   MOVE.w D2,-(A7)
0003A08A <AmiBlitz3.ab2@15208>   MOVE.w D2,D3
0003A08C <AmiBlitz3.ab2@15209>   MOVEQ.l #$03,D2
0003A090 <AmiBlitz3.ab2@15210>    BSR.w JL_0_9770
0003A092 <AmiBlitz3.ab2@15211>   MOVE.w (A7)+,D3
0003A094 <AmiBlitz3.ab2@15212>   MOVEQ.l #$01,D2
0003A09A <AmiBlitz3.ab2@15213>   ADDQ.w #1,regnum
0003A09E <AmiBlitz3.ab2@15214>    BSR.w writeconvertcode
0003A0A4 <AmiBlitz3.ab2@15215>   SUBQ.w #1,regnum
0003A0AA <AmiBlitz3.ab2@15216>   MOVE.w regnum,D1
0003A0AC <AmiBlitz3.ab2@15217>   MOVE.w D1,D2
0003A0AE <AmiBlitz3.ab2@15218>   ADDQ.w #1,D2
0003A0B0 <AmiBlitz3.ab2@15219>   LSL.w #8,D2
0003A0B2 <AmiBlitz3.ab2@15220>   LSL.w #1,D2
0003A0B4 <AmiBlitz3.ab2@15221>   OR.w (A7)+,D1
0003A0B6 <AmiBlitz3.ab2@15222>   OR.w D2,D1
0003A0BA <AmiBlitz3.ab2@15223> BRA.w writeword
0003A0C0 <AmiBlitz3.ab2@15227>   MOVE.w regnum,D1
0003A0C4 <AmiBlitz3.ab2@15228>    BEQ.w JL_0_A36C
0003A0C8 <AmiBlitz3.ab2@15229>   ORI.w #$2000,D1
0003A0CC <AmiBlitz3.ab2@15230>    BSR.w writeword
0003A0D0 <AmiBlitz3.ab2@15231>   ADDI.w #$201,D1
0003A0D4 <AmiBlitz3.ab2@15232>    BSR.w writeword
0003A0D6 <AmiBlitz3.ab2@15235> RTS
0003A0DC <AmiBlitz3.ab2@15239>   MOVE.w regnum,D1
0003A0E0 <AmiBlitz3.ab2@15240>    BEQ.w JL_0_A384
0003A0E2 <AmiBlitz3.ab2@15241>   LSL.w #8,D1
0003A0E4 <AmiBlitz3.ab2@15242>   LSL.w #1,D1
0003A0E8 <AmiBlitz3.ab2@15243>   ORI.w #$2000,D1
0003A0EC <AmiBlitz3.ab2@15244>    BSR.w writeword
0003A0EE <AmiBlitz3.ab2@15247> RTS
0003A0F6 <AmiBlitz3.ab2@15251>    CMPI.w #$7,regnum
0003A0FA <AmiBlitz3.ab2@15252>    BCS.w JL_0_A6B4
0003A100 <AmiBlitz3.ab2@15253>   MOVE.l #$f2277700,d1                                     ;fmove.d fp6,-(a7)
0003A104 <AmiBlitz3.ab2@15254>   BSR writelong
0003A108 <AmiBlitz3.ab2@15255>   MOVE.w #$2F06,D1                                         ;d6 to stack
0003A10C <AmiBlitz3.ab2@15257>   CMP.w #$3,D2
0003A110 <AmiBlitz3.ab2@15258>    BCS.w JL_0_A3A2
0003A114 <AmiBlitz3.ab2@15259>   MOVE.w #$2F06,D1
0003A118 <AmiBlitz3.ab2@15262>   BSR.w writeword
0003A11A <AmiBlitz3.ab2@15263>   MOVE.w D1,-(A7)
0003A120 <AmiBlitz3.ab2@15264>   SUBQ.w #1,regnum
0003A124 <AmiBlitz3.ab2@15265>    BSR.w JL_0_A6B4
0003A12A <AmiBlitz3.ab2@15266>   ADDQ.w #1,regnum
0003A130 <AmiBlitz3.ab2@15267>   MOVE.l #$f2001b80,d1
0003A134 <AmiBlitz3.ab2@15268>   BSR writelong
0003A138 <AmiBlitz3.ab2@15269>   MOVE.w #$3E06,D1
0003A13C <AmiBlitz3.ab2@15270>   CMP.w #$3,D2
0003A140 <AmiBlitz3.ab2@15271>    BCS.w JL_0_A3C8
0003A144 <AmiBlitz3.ab2@15272>   MOVE.w #$2E06,D1
0003A148 <AmiBlitz3.ab2@15275>   BSR.w writeword
0003A14A <AmiBlitz3.ab2@15276>   MOVE.w (A7)+,D1
0003A14E <AmiBlitz3.ab2@15277>   ANDI.w #$F000,D1
0003A152 <AmiBlitz3.ab2@15278>   ORI.w #$C1F,D1
0003A158 <AmiBlitz3.ab2@15279>   JSR writeword
0003A15E <AmiBlitz3.ab2@15280>   MOVE.l #$f21f5700,d1                                     ;fmove.d (a7)+,fp6
0003A162 <AmiBlitz3.ab2@15281> BRA writelong
0003A166 <AmiBlitz3.ab2@15285>   BSR.w JL_0_A6B4
0003A16A <AmiBlitz3.ab2@15286>   MOVE.w #$4440,D1
0003A16E <AmiBlitz3.ab2@15287>   CMP.w #$3,D2
0003A172 <AmiBlitz3.ab2@15288>    BCS.w JL_0_A406
0003A176 <AmiBlitz3.ab2@15289>   MOVE.w #$4480,D1
0003A17A <AmiBlitz3.ab2@15290>   CMP.w #$5,D2
0003A17E <AmiBlitz3.ab2@15291>    BCS.w JL_0_A406
0003A182 <AmiBlitz3.ab2@15292>   CMP.w #$6,D2
0003A186 <AmiBlitz3.ab2@15293>    BCC.w illoperr
0003A18A <AmiBlitz3.ab2@15294>   MOVE.w #$FFC4,D1
0003A18E <AmiBlitz3.ab2@15295> BRA.w JL_0_9604
0003A194 <AmiBlitz3.ab2@15298>   OR.w regnum,D1                                           ;negate
0003A19A <AmiBlitz3.ab2@15299>   CLR.l imm_addr
0003A19E <AmiBlitz3.ab2@15300> BRA.w writeword
0003A1A2 <AmiBlitz3.ab2@15304>    BSR.w eval4
0003A1A6 <AmiBlitz3.ab2@15305>   CMP.w #$29,D0
0003A1AA <AmiBlitz3.ab2@15306>    BEQ.w JL_0_A424
0003A1AE <AmiBlitz3.ab2@15307>   CMP.w #$7D,D0
0003A1B2 <AmiBlitz3.ab2@15308>    BNE.w brackets_                                         ;syntax error brackets
0003A1B6 <AmiBlitz3.ab2@15311> BRA.w get1bytemain
0003A1BA <AmiBlitz3.ab2@15315>    BSR.w eval4
0003A1BE <AmiBlitz3.ab2@15316>   CMP.w #$5,D2
0003A1C2 <AmiBlitz3.ab2@15317>    BCC.w illoperr
0003A1C8 <AmiBlitz3.ab2@15318>   MOVE.w regnum,D1
0003A1CC <AmiBlitz3.ab2@15319>   ORI.w #$4640,D1
0003A1D0 <AmiBlitz3.ab2@15320>   CMP.w #$3,D2
0003A1D4 <AmiBlitz3.ab2@15321>    BCS.w writeword
0003A1D8 <AmiBlitz3.ab2@15322>   EORI.w #$C0,D1
0003A1DC <AmiBlitz3.ab2@15323> BRA.w writeword
0003A1DE <AmiBlitz3.ab2@15327>   MOVEQ.l #$05,D2                                          ;fpu pi
0003A1E4 <AmiBlitz3.ab2@15328>    TST.b fpu
0003A1E8 <AmiBlitz3.ab2@15329>   BEQ 'old
0003A1EE <AmiBlitz3.ab2@15330> JMP fpupi
0003A1F4 <AmiBlitz3.ab2@15333>   MOVE.w regnum,D1
0003A1F6 <AmiBlitz3.ab2@15334>   LSL.w #8,D1
0003A1F8 <AmiBlitz3.ab2@15335>   LSL.w #1,D1
0003A1FC <AmiBlitz3.ab2@15336>   ORI.w #$203C,D1
0003A200 <AmiBlitz3.ab2@15337>    BSR.w writeword
0003A206 <AmiBlitz3.ab2@15338>   MOVE.l #$C90FDA42,D1
0003A20A <AmiBlitz3.ab2@15339>    BSR.w writelong
0003A20E <AmiBlitz3.ab2@15340> BRA.w get1bytemain
0003A30A <AmiBlitz3.ab2@15348> forthstack:  Ds.l 63                                       ;ds.b  18*32 org source
0003A406 <AmiBlitz3.ab2@15349>              Ds.l 63
0003A44E <AmiBlitz3.ab2@15350>              Ds.l 18
0003A452 <AmiBlitz3.ab2@15351> forthsp:     Dc.l forthstack
0003A47E <AmiBlitz3.ab2@15356>    !fget
0003A482 <AmiBlitz3.ab2@15357>    CMP.b #$7e,d0
0003A486 <AmiBlitz3.ab2@15358>    BNE 'noc
0003A488 <AmiBlitz3.ab2@15359>    SUBQ.l #1,a5
0003A48C <AmiBlitz3.ab2@15360>    BSR get1bytemain
0003A490 <AmiBlitz3.ab2@15363>    CMP.b #"#",d0
0003A494 <AmiBlitz3.ab2@15364>    BNE 'ld1
0003A498 <AmiBlitz3.ab2@15365>    CMP.b #$22,(a5)
0003A49C <AmiBlitz3.ab2@15366>    BNE 'ld1
0003A4A2 <AmiBlitz3.ab2@15367>    JSR addimmi
0003A4A6 <AmiBlitz3.ab2@15370>    CMP.b #$22,d0
0003A4AA <AmiBlitz3.ab2@15371>    BNE 'l11
0003A4B0 <AmiBlitz3.ab2@15381>    NOT.w instringon
0003A4B2 <AmiBlitz3.ab2@15384>    TST.b d0
0003A4B6 <AmiBlitz3.ab2@15385>    BPL 'l10
0003A4B8 <AmiBlitz3.ab2@15386>    LSL.w #8,d0
0003A4BA <AmiBlitz3.ab2@15387>    MOVE.b (a5)+,d0
0003A4C0 <AmiBlitz3.ab2@15388>    MOVE.l d0,lasttoken
0003A4C6 <AmiBlitz3.ab2@15389>    MOVE.w d0,lastchar
0003A4CA <AmiBlitz3.ab2@15392>   CMP.w #$28,D0
0003A4CE <AmiBlitz3.ab2@15393>    BEQ.w JL_0_A410
0003A4D2 <AmiBlitz3.ab2@15394>   CMP.w #$7B,D0
0003A4D6 <AmiBlitz3.ab2@15395>    BEQ.w JL_0_A410
0003A4DA <AmiBlitz3.ab2@15396>   CMP.w #$2D,D0
0003A4DE <AmiBlitz3.ab2@15397>    BEQ.w JL_0_A3DA
0003A4E2 <AmiBlitz3.ab2@15398>   CMP.w #-$7F77,D0
0003A4E6 <AmiBlitz3.ab2@15399>    BEQ.w JL_0_A428
0003A4EA <AmiBlitz3.ab2@15400>   MOVEA.l forthsp(PC),A1
0003A4F0 <AmiBlitz3.ab2@15401>   CMPA.l #forthsp,A1
0003A4F4 <AmiBlitz3.ab2@15402>    BCC.w conmemerr
0003A4FA <AmiBlitz3.ab2@15403>   MOVE.l destpointer,(A1)+
0003A500 <AmiBlitz3.ab2@15404>   MOVE.l hunkoffsetbase,(A1)+
0003A506 <AmiBlitz3.ab2@15405>   MOVE.l lasta6,(A1)+
0003A50C <AmiBlitz3.ab2@15406>   MOVE.w lasta6,(A1)+
0003A50E <AmiBlitz3.ab2@15407>   CLR.w (A1)+
0003A510 <AmiBlitz3.ab2@15408>   CLR.w (A1)+
0003A516 <AmiBlitz3.ab2@15409>   MOVE.l A1,forthsp
0003A528 <AmiBlitz3.ab2@15411>    !compare2
0003A52C <AmiBlitz3.ab2@15412>    BEQ.w JL_0_B224
0003A530 <AmiBlitz3.ab2@15413>   CMP.w #".",D0
0003A534 <AmiBlitz3.ab2@15414>    BEQ.w JL_0_B21E
0003A538 <AmiBlitz3.ab2@15415>   CMP.w #"#",D0
0003A53C <AmiBlitz3.ab2@15416>    BEQ.w get_constant
0003A540 <AmiBlitz3.ab2@15417>   CMP.w #"$",D0
0003A544 <AmiBlitz3.ab2@15418>    BEQ.w get_hexconstant
0003A548 <AmiBlitz3.ab2@15419>   CMP.w #"%",D0
0003A54C <AmiBlitz3.ab2@15420>    BEQ.w JL_0_A8C0
0003A550 <AmiBlitz3.ab2@15421>   CMP.w #-$7FD1,D0
0003A554 <AmiBlitz3.ab2@15422>    BEQ.w _SizeOf
0003A558 <AmiBlitz3.ab2@15423>   CMP.w #-$7F46,D0
0003A55C <AmiBlitz3.ab2@15424>    BEQ.w JL_0_A44E
0003A560 <AmiBlitz3.ab2@15425>   CMP.w #-$7F3B,D0
0003A564 <AmiBlitz3.ab2@15426>    BEQ.w JL_0_A83C
0003A568 <AmiBlitz3.ab2@15427>   CMP.w #-$7F3A,D0
0003A56C <AmiBlitz3.ab2@15428>    BEQ.w JL_0_A846
0003A572 <AmiBlitz3.ab2@15429>   MOVE.w constmode,D1
0003A576 <AmiBlitz3.ab2@15430>    BEQ.w JL_0_A776
0003A598 <AmiBlitz3.ab2@15431>    !compare1                                               ;bsr.w tstalpha
0003A59C <AmiBlitz3.ab2@15432>    BEQ.w JL_0_AF22
0003A5A0 <AmiBlitz3.ab2@15433>   CMP.w #$5F,D0
0003A5A4 <AmiBlitz3.ab2@15434>    BEQ.w JL_0_AF22
0003A5A8 <AmiBlitz3.ab2@15435>   CMP.w #$22,D0
0003A5AC <AmiBlitz3.ab2@15436>    BEQ.w JL_0_AF00
0003A5B0 <AmiBlitz3.ab2@15437> BRA.w syntaxerr
0003A5B6 <AmiBlitz3.ab2@15441>   MOVE.w cfetchmode,D1
0003A5BA <AmiBlitz3.ab2@15442>   BEQ.w JL_0_A784
0003A5BE <AmiBlitz3.ab2@15443> BRA.w badconerr
0003A5C4 <AmiBlitz3.ab2@15446> JMP syntaxerropt4
0003A5C6 <AmiBlitz3.ab2@15450>   NOT.w -(A1)
0003A5E8 <AmiBlitz3.ab2@15451>   !compare1                                                ;bsr.w tstalpha
0003A5EC <AmiBlitz3.ab2@15452>    BEQ.w JL_0_AF4C
0003A5F0 <AmiBlitz3.ab2@15453>   CMP.w #$2A,D0
0003A5F4 <AmiBlitz3.ab2@15454>    BEQ.w JL_0_AF4C
0003A5F8 <AmiBlitz3.ab2@15455>   CMP.w #$5C,D0
0003A5FC <AmiBlitz3.ab2@15456>    BEQ.w JL_0_AF4C
0003A600 <AmiBlitz3.ab2@15457>   CMP.w #$22,D0
0003A604 <AmiBlitz3.ab2@15458>    BEQ.w JL_0_ADC0
0003A608 <AmiBlitz3.ab2@15459>   BTST #$F,D0
0003A60C <AmiBlitz3.ab2@15460>    BNE.w JL_0_AAF2
0003A610 <AmiBlitz3.ab2@15461>   CMP.w #$26,D0
0003A614 <AmiBlitz3.ab2@15462>    BEQ.w JL_0_A90E
0003A618 <AmiBlitz3.ab2@15463>   CMP.w #$3F,D0
0003A61C <AmiBlitz3.ab2@15464>    BEQ.w JL_0_AED4
0003A620 <AmiBlitz3.ab2@15467>   CMP.b #"@",d0
0003A624 <AmiBlitz3.ab2@15468>    BNE syntaxerr
0003A62A <AmiBlitz3.ab2@15469>   TST.b newsyntax
0003A62E <AmiBlitz3.ab2@15470>    BEQ JUMP_syntaxerropt4
0003A634 <AmiBlitz3.ab2@15471>   MOVE.w regnum,D1
0003A636 <AmiBlitz3.ab2@15472>   LSL.w #8,D1
0003A638 <AmiBlitz3.ab2@15473>   LSL.w #1,D1
0003A63C <AmiBlitz3.ab2@15474>   ORI.w #$203C,D1
0003A640 <AmiBlitz3.ab2@15475>   BSR.w writeword
0003A644 <AmiBlitz3.ab2@15476>   CMP.b #$22,(a5)
0003A648 <AmiBlitz3.ab2@15477>    BNE syntaxerr
0003A64A <AmiBlitz3.ab2@15478>   ADDQ #1,a5
0003A64C <AmiBlitz3.ab2@15479>   MOVEQ #0,d0
0003A650 <AmiBlitz3.ab2@15480>   CMP.b #1,d2
0003A654 <AmiBlitz3.ab2@15481>    BEQ 'l3b
0003A658 <AmiBlitz3.ab2@15482>   CMP.b #2,d2
0003A65C <AmiBlitz3.ab2@15483>    BEQ 'l2b
0003A660 <AmiBlitz3.ab2@15484>   CMP.b #4,d2
0003A664 <AmiBlitz3.ab2@15485>    BEQ error_convert_types
0003A666 <AmiBlitz3.ab2@15486>   MOVE.b (a5)+,d0
0003A66A <AmiBlitz3.ab2@15487>   BEQ syntaxerr
0003A66E <AmiBlitz3.ab2@15488>   CMP.b #$22,d0
0003A672 <AmiBlitz3.ab2@15489>   BNE 'l1
0003A676 <AmiBlitz3.ab2@15490>     MOVE.b #0,d0
0003A67A <AmiBlitz3.ab2@15491> BRA 'do
0003A67C <AmiBlitz3.ab2@15494>   ASL.l #8,d0
0003A67E <AmiBlitz3.ab2@15495>   MOVE.b (a5)+,d0
0003A682 <AmiBlitz3.ab2@15496>   BEQ syntaxerr
0003A686 <AmiBlitz3.ab2@15497>   CMP.b #$22,d0
0003A68A <AmiBlitz3.ab2@15498>   BNE 'l2
0003A68E <AmiBlitz3.ab2@15499>     MOVE.b #0,d0
0003A690 <AmiBlitz3.ab2@15500>     ASR.l #8,d0
0003A694 <AmiBlitz3.ab2@15501> BRA 'do
0003A696 <AmiBlitz3.ab2@15504>   ASL.l #8,d0
0003A698 <AmiBlitz3.ab2@15507>   MOVE.b (a5)+,d0
0003A69C <AmiBlitz3.ab2@15508>    BEQ syntaxerr
0003A6A0 <AmiBlitz3.ab2@15509>    CMP.b #$22,d0
0003A6A4 <AmiBlitz3.ab2@15510>    BNE 'l3
0003A6A8 <AmiBlitz3.ab2@15511>    MOVE.b #0,d0
0003A6AA <AmiBlitz3.ab2@15512>    ASR.l #8,d0
0003A6AE <AmiBlitz3.ab2@15513> BRA 'do
0003A6B0 <AmiBlitz3.ab2@15516>   ASL.l #8,d0
0003A6B2 <AmiBlitz3.ab2@15519>   MOVE.b (a5)+,d0
0003A6B6 <AmiBlitz3.ab2@15520>    BEQ syntaxerr
0003A6BA <AmiBlitz3.ab2@15521>    CMP.b #$22,d0
0003A6BE <AmiBlitz3.ab2@15522>    BNE 'l4
0003A6C2 <AmiBlitz3.ab2@15523>    MOVE.b #0,d0
0003A6C4 <AmiBlitz3.ab2@15524>    ASR.l #8,d0
0003A6C8 <AmiBlitz3.ab2@15525> BRA 'do
0003A6CC <AmiBlitz3.ab2@15528>    CMP.b #$22,(a5)+
0003A6D0 <AmiBlitz3.ab2@15529>    BNE JUMP_error4char
0003A6D2 <AmiBlitz3.ab2@15532>   MOVE.l d0,d1
0003A6D6 <AmiBlitz3.ab2@15533>     BSR writelong
0003A6DA <AmiBlitz3.ab2@15534>     BSR get1bytemain
0003A6DC <AmiBlitz3.ab2@15535> RTS
0003A6E0 <AmiBlitz3.ab2@15539>   BSR.w get1bytemain
0003A6E4 <AmiBlitz3.ab2@15540>   CMP.w #$2E,D0
0003A6E8 <AmiBlitz3.ab2@15541>    BEQ.b JL_0_A7F4
0003A6F2 <AmiBlitz3.ab2@15543>   MOVE.w oldqflag,instringon
0003A6F8 <AmiBlitz3.ab2@15544>   MOVEA.l lastsourcepos,A5
0003A6FA <AmiBlitz3.ab2@15545>   MOVE.w D2,-(A7)
0003A6FE <AmiBlitz3.ab2@15546>    BSR.w getparameter2
0003A702 <AmiBlitz3.ab2@15547>    BEQ.w syntaxerr
0003A708 <AmiBlitz3.ab2@15548>   LEA varbase,A2
0003A70C <AmiBlitz3.ab2@15549>    BSR.w findvariable
0003A710 <AmiBlitz3.ab2@15550>    BNE.w notypeerr
0003A714 <AmiBlitz3.ab2@15551>   MOVE.w $4(A2),D3
0003A716 <AmiBlitz3.ab2@15552>   EXT.l D3
0003A718 <AmiBlitz3.ab2@15553>   MOVE.w (A7)+,D2
0003A71C <AmiBlitz3.ab2@15554> BRA.w JL_0_B46E
0003A71E <AmiBlitz3.ab2@15558>   MOVE.w D2,-(A7)
0003A722 <AmiBlitz3.ab2@15559>    BSR.w getparameter2
0003A726 <AmiBlitz3.ab2@15560>    BEQ.w syntaxerr
0003A72C <AmiBlitz3.ab2@15561>   LEA newtypebase,A2
0003A730 <AmiBlitz3.ab2@15562>    BSR.w findtype
0003A734 <AmiBlitz3.ab2@15563>    BNE.w notypeerr
0003A736 <AmiBlitz3.ab2@15564>   MOVEQ.l #$00,D3
0003A73A <AmiBlitz3.ab2@15565>   CMP.w #$5C,D0
0003A73E <AmiBlitz3.ab2@15566>    BNE.w JL_0_A832
0003A742 <AmiBlitz3.ab2@15567>    BSR.w getparameter2
0003A746 <AmiBlitz3.ab2@15568>    BEQ.w syntaxerr
0003A74A <AmiBlitz3.ab2@15569>   LEA $4(A2),A2
0003A74E <AmiBlitz3.ab2@15570>    BSR.w findvariable2
0003A752 <AmiBlitz3.ab2@15571>    BNE.w noofferr
0003A756 <AmiBlitz3.ab2@15572>   MOVE.w $4(A2),D3
0003A75A <AmiBlitz3.ab2@15573> BRA.w JL_0_A836
0003A75E <AmiBlitz3.ab2@15577>   MOVE.w $8(A2),D3
0003A760 <AmiBlitz3.ab2@15580>   MOVE.w (A7)+,D2
0003A764 <AmiBlitz3.ab2@15581> BRA.w JL_0_B46E
0003A766 <AmiBlitz3.ab2@15585>   MOVEQ.l #-$01,D3
0003A76A <AmiBlitz3.ab2@15586>    BSR.w get1bytemain
0003A76E <AmiBlitz3.ab2@15587> BRA.w JL_0_B46E
0003A770 <AmiBlitz3.ab2@15591>   MOVEQ.l #$00,D3
0003A774 <AmiBlitz3.ab2@15592>    BSR.w get1bytemain
0003A778 <AmiBlitz3.ab2@15593> BRA.w JL_0_B46E
0003A77C <AmiBlitz3.ab2@15597>   CMP.w #$30,D0
0003A780 <AmiBlitz3.ab2@15598>    BCS.w JL_0_A876
0003A784 <AmiBlitz3.ab2@15599>   CMP.w #$39,D0
0003A788 <AmiBlitz3.ab2@15600>    BLS.w JL_0_A874
0003A78C <AmiBlitz3.ab2@15601>   ANDI.w #$FFDF,D0
0003A790 <AmiBlitz3.ab2@15602>   CMP.w #$46,D0
0003A794 <AmiBlitz3.ab2@15603>    BHI.w JL_0_A876
0003A798 <AmiBlitz3.ab2@15604>   CMP.w #$41,D0
0003A79C <AmiBlitz3.ab2@15605>    BCS.w JL_0_A876
0003A79E <AmiBlitz3.ab2@15608>    CMP.w D0,D0
0003A7A0 <AmiBlitz3.ab2@15611> RTS
0003A7A4 <AmiBlitz3.ab2@15615>   CMP.w #$31,D0
0003A7A8 <AmiBlitz3.ab2@15616>    BEQ.w JL_0_A884
0003A7AC <AmiBlitz3.ab2@15617>   CMP.w #$30,D0
0003A7AE <AmiBlitz3.ab2@15620> RTS
0003A7B0 <AmiBlitz3.ab2@15624>    MOVEQ #0,d0
0003A7B2 <AmiBlitz3.ab2@15625>    MOVE.b (a5)+,d0
0003A7B4 <AmiBlitz3.ab2@15626>    MOVE.b (a5)+,d0
0003A7B8 <AmiBlitz3.ab2@15627>    BSR ishex
0003A7BC <AmiBlitz3.ab2@15628>    BNE syntaxerr
0003A7C0 <AmiBlitz3.ab2@15629>    SUBI.w #$30,D0
0003A7C4 <AmiBlitz3.ab2@15630>    CMP.w #$9,D0
0003A7C8 <AmiBlitz3.ab2@15631>    BLS.w 'l1
0003A7CA <AmiBlitz3.ab2@15632>    SUBQ.w #7,D0
0003A7CC <AmiBlitz3.ab2@15635>    MOVE.l d0,d1
0003A7CE <AmiBlitz3.ab2@15636>    MOVE.b (a5)+,d0
0003A7D2 <AmiBlitz3.ab2@15637>      BSR ishex
0003A7D6 <AmiBlitz3.ab2@15638>     BNE syntaxerr
0003A7D8 <AmiBlitz3.ab2@15639>     LSL.l #4,d1
0003A7DC <AmiBlitz3.ab2@15640>     SUBI.w #$30,D0
0003A7E0 <AmiBlitz3.ab2@15641>    CMP.w #$9,D0
0003A7E4 <AmiBlitz3.ab2@15642>    BLS.w 'l2
0003A7E6 <AmiBlitz3.ab2@15643>    SUBQ.w #7,D0
0003A7E8 <AmiBlitz3.ab2@15646>   ADD.l d1,d0
0003A7EA <AmiBlitz3.ab2@15647> RTS
0003A7EE <AmiBlitz3.ab2@15651>    BSR.w get1bytemain
0003A7F2 <AmiBlitz3.ab2@15652>    BSR.w ishex
0003A7F6 <AmiBlitz3.ab2@15653>    BNE.w syntaxerr
0003A7F8 <AmiBlitz3.ab2@15654>   MOVEQ.l #$00,D3
0003A7FC <AmiBlitz3.ab2@15655>   CMP.w #5,d2
0003A800 <AmiBlitz3.ab2@15656>   BNE JL_0_A894
0003A806 <AmiBlitz3.ab2@15657>   CMP.l #newtype_double,a2
0003A80A <AmiBlitz3.ab2@15658>   BEQ 'doit
0003A810 <AmiBlitz3.ab2@15659>   CMP.l #newtype_float,a2
0003A814 <AmiBlitz3.ab2@15660>   BNE JL_0_A894
0003A81C <AmiBlitz3.ab2@15663>    fmove.s #0,fp0
0003A822 <AmiBlitz3.ab2@15665>   TST.b fpu
0003A826 <AmiBlitz3.ab2@15666>   BEQ JL_0_A894
0003A82C <AmiBlitz3.ab2@15667>   fmove.w #16,fp1
0003A830 <AmiBlitz3.ab2@15668>   fmul.x fp1,fp0
0003A834 <AmiBlitz3.ab2@15669>   SUBI.w #$30,D0
0003A838 <AmiBlitz3.ab2@15670>   CMP.w #$9,D0
0003A83C <AmiBlitz3.ab2@15671>    BLS.w JL_0_A8AEa
0003A83E <AmiBlitz3.ab2@15672>   SUBQ.w #7,D0
0003A842 <AmiBlitz3.ab2@15675>    fmove.w d0,fp1
0003A846 <AmiBlitz3.ab2@15676>    fadd.x fp1,fp0
0003A84A <AmiBlitz3.ab2@15677>    BSR.w get1bytemain
0003A84E <AmiBlitz3.ab2@15678>    BSR.w ishex
0003A852 <AmiBlitz3.ab2@15679>    BEQ.w JL_0_A894a
0003A856 <AmiBlitz3.ab2@15680> BRA.w nofpregload
0003A85C <AmiBlitz3.ab2@15684>   CMP.l #$10000000,D3
0003A860 <AmiBlitz3.ab2@15685>    BCC.w overerr
0003A862 <AmiBlitz3.ab2@15686>   LSL.l #4,D3
0003A866 <AmiBlitz3.ab2@15687>   SUBI.w #$30,D0
0003A86A <AmiBlitz3.ab2@15688>   CMP.w #$9,D0
0003A86E <AmiBlitz3.ab2@15689>    BLS.w JL_0_A8AE
0003A870 <AmiBlitz3.ab2@15690>   SUBQ.w #7,D0
0003A872 <AmiBlitz3.ab2@15693>   OR.w D0,D3
0003A876 <AmiBlitz3.ab2@15694>    BSR.w get1bytemain
0003A87A <AmiBlitz3.ab2@15695>    BSR.w ishex
0003A87E <AmiBlitz3.ab2@15696>    BEQ.w JL_0_A894
0003A882 <AmiBlitz3.ab2@15697> BRA.w JL_0_B46E
0003A886 <AmiBlitz3.ab2@15701>    BSR.w get1bytemain
0003A88A <AmiBlitz3.ab2@15702>    BSR.w JL_0_A878
0003A88E <AmiBlitz3.ab2@15703>    BNE.w syntaxerr
0003A890 <AmiBlitz3.ab2@15704>    MOVEQ.l #$00,D3
0003A892 <AmiBlitz3.ab2@15707>    LSL.l #1,D3
0003A896 <AmiBlitz3.ab2@15708>    BCS.w overerr
0003A89A <AmiBlitz3.ab2@15709>   SUBI.w #$30,D0
0003A89C <AmiBlitz3.ab2@15710>   OR.w D0,D3
0003A8A0 <AmiBlitz3.ab2@15711>    BSR.w get1bytemain
0003A8A4 <AmiBlitz3.ab2@15712>    BSR.w JL_0_A878
0003A8A8 <AmiBlitz3.ab2@15713>    BEQ.w JL_0_A8CE
0003A8AC <AmiBlitz3.ab2@15714> BRA.w JL_0_B46E
0003A8AE <AmiBlitz3.ab2@15718>    MOVE.w d2,-(A7)
0003A8B6 <AmiBlitz3.ab2@15719>    MOVE.b #0,automode
0003A8BA <AmiBlitz3.ab2@15720>    CMP.b #"@",(a5)
0003A8BE <AmiBlitz3.ab2@15721>    BNE 'l1
0003A8C0 <AmiBlitz3.ab2@15722>    ADDQ.l #1,a5
0003A8C8 <AmiBlitz3.ab2@15723>    MOVE.b #1,automode
0003A8CC <AmiBlitz3.ab2@15724>    BSR getparameter2
0003A8D0 <AmiBlitz3.ab2@15725>    BSR findlabel2
0003A8D4 <AmiBlitz3.ab2@15726>    BNE 'addit
0003A8D8 <AmiBlitz3.ab2@15727> BRA errormsg_autocount
0003A8DC <AmiBlitz3.ab2@15730>   BSR.w addlabelhash
0003A8E4 <AmiBlitz3.ab2@15731>   MOVE.l #$1,$4(A2)
0003A8E8 <AmiBlitz3.ab2@15732>   MOVEM.l a2/a5,-(a7)
0003A8EE <AmiBlitz3.ab2@15733>   MOVE.w lastchar,-(a7)
0003A8F4 <AmiBlitz3.ab2@15734>   LEA autostorename,a5
0003A8F8 <AmiBlitz3.ab2@15735>   BSR getparameter2
0003A8FC <AmiBlitz3.ab2@15736>   BSR findlabel2
0003A900 <AmiBlitz3.ab2@15737>   BEQ 'found
0003A904 <AmiBlitz3.ab2@15738>   BSR.w addlabelhash
0003A90C <AmiBlitz3.ab2@15739>   MOVE.l #$1,$4(A2)
0003A914 <AmiBlitz3.ab2@15740>   MOVE.l #0,8(a2)
0003A916 <AmiBlitz3.ab2@15743>    MOVE.w (a7)+,d0
0003A91C <AmiBlitz3.ab2@15744>    MOVE.w d0,lastchar
0003A920 <AmiBlitz3.ab2@15745>   MOVE.l 8(a2),d3
0003A928 <AmiBlitz3.ab2@15746>   ADD.l #1,8(a2)
0003A92C <AmiBlitz3.ab2@15747>   MOVEM.l (a7)+,a2/a5
0003A930 <AmiBlitz3.ab2@15748>   MOVE.l d3,8(a2)
0003A934 <AmiBlitz3.ab2@15749>   MOVE.l $8(A2),D3
0003A938 <AmiBlitz3.ab2@15750> BRA.l 'l3
0003A93C <AmiBlitz3.ab2@15753>   BSR.w getparameter2
0003A942 <AmiBlitz3.ab2@15754>     TST.b incnif
0003A946 <AmiBlitz3.ab2@15755>     BEQ 'lc1
0003A94A <AmiBlitz3.ab2@15756>     BSR.w findlabel2
0003A94E <AmiBlitz3.ab2@15757>     BNE 'l5
0003A950 <AmiBlitz3.ab2@15758>     MOVEQ #1,d3
0003A952 <AmiBlitz3.ab2@15759>     MOVE.w (A7)+,D2
0003A956 <AmiBlitz3.ab2@15760> BRA JL_0_B46E
0003A958 <AmiBlitz3.ab2@15763>   MOVEQ #0,d3
0003A95A <AmiBlitz3.ab2@15764>     MOVE.w (A7)+,D2
0003A95E <AmiBlitz3.ab2@15765> BRA JL_0_B46E
0003A962 <AmiBlitz3.ab2@15768>    BSR.w findlabel2
0003A966 <AmiBlitz3.ab2@15769>    BNE.w cnferr
0003A96E <AmiBlitz3.ab2@15772>    CMPI.l #$1,$4(A2)
0003A972 <AmiBlitz3.ab2@15773>    BNE.w cnferr
0003A976 <AmiBlitz3.ab2@15775>    MOVE.l $8(A2),D3
0003A978 <AmiBlitz3.ab2@15776>    MOVE.w (A7)+,D2
0003A97C <AmiBlitz3.ab2@15777> BRA.w JL_0_B46E
0003A982 <AmiBlitz3.ab2@15781>   CLR.w vartype
0003A986 <AmiBlitz3.ab2@15782>   BSR.w JL_0_A916
0003A988 <AmiBlitz3.ab2@15783>   MOVEQ.l #$03,D2
0003A98A <AmiBlitz3.ab2@15784> RTS
0003A98E <AmiBlitz3.ab2@15788>    BSR.w get1bytemain
0003A9A0 <AmiBlitz3.ab2@15789>    !compare2
0003A9A4 <AmiBlitz3.ab2@15790>    BEQ andop2
0003A9A8 <AmiBlitz3.ab2@15791>    BSR.w getparameter
0003A9AC <AmiBlitz3.ab2@15792>    BSR.w JL_0_8E3C
0003A9B0 <AmiBlitz3.ab2@15793>    BSR.w calcvar
0003A9B4 <AmiBlitz3.ab2@15794>   CMP.b #$7,D2
0003A9B8 <AmiBlitz3.ab2@15795>    BNE.w JL_0_A960
0003A9BC <AmiBlitz3.ab2@15796>   BTST #$F,D2
0003A9C0 <AmiBlitz3.ab2@15797>    BNE.w JL_0_A94A
0003A9C6 <AmiBlitz3.ab2@15798>   MOVE.w D3,stamp2+2
0003A9CC <AmiBlitz3.ab2@15799>   MOVE.l stamp2,D1
0003A9D0 <AmiBlitz3.ab2@15800>    BSR.w pokela5s
0003A9D4 <AmiBlitz3.ab2@15801> BRA.w JL_0_A978
0003A9DA <AmiBlitz3.ab2@15805>   MOVE.w regnum,D1
0003A9DC <AmiBlitz3.ab2@15806>   LSL.w #8,D1
0003A9DE <AmiBlitz3.ab2@15807>   LSL.w #1,D1
0003A9E4 <AmiBlitz3.ab2@15808>   OR.w stamp,D1
0003A9E8 <AmiBlitz3.ab2@15809>    BSR.w writeword
0003A9EA <AmiBlitz3.ab2@15810> RTS
0003A9EE <AmiBlitz3.ab2@15814>   BTST #$F,D2
0003A9F2 <AmiBlitz3.ab2@15815>    BNE.w JL_0_A978
0003A9F8 <AmiBlitz3.ab2@15816>   MOVE.w D3,leaamp+2
0003A9FE <AmiBlitz3.ab2@15817>   MOVE.l leaamp,D1
0003AA02 <AmiBlitz3.ab2@15818>    BSR.w pokela5s
0003AA08 <AmiBlitz3.ab2@15821>   MOVE.w regnum,D1
0003AA0A <AmiBlitz3.ab2@15822>   LSL.w #8,D1
0003AA0C <AmiBlitz3.ab2@15823>   LSL.w #1,D1
0003AA12 <AmiBlitz3.ab2@15824>   OR.w leaamp2,D1
0003AA16 <AmiBlitz3.ab2@15825> BRA.w writeword
0003AA1A <AmiBlitz3.ab2@15829>   MOVE.w #$D200,D1
0003AA1E <AmiBlitz3.ab2@15830>    BSR.w Atokejsr
0003AA20 <AmiBlitz3.ab2@15831>   MOVEQ.l #$03,D2
0003AA22 <AmiBlitz3.ab2@15832> RTS
0003AA26 <AmiBlitz3.ab2@15836> addrcode:  Dc.b $20,$6D,$00,$00                            ;MOVEA.L $0000(A5),A0
0003AA28 <AmiBlitz3.ab2@15837>            Dc.b $D0,$C0                                    ;ADDA.W  D0,A0
0003AA2A <AmiBlitz3.ab2@15838>            Dc.b $20,$08                                    ;MOVE.L  A0,D0
0003AA2E <AmiBlitz3.ab2@15844>    BSR.w get1bytemain
0003AA30 <AmiBlitz3.ab2@15845>   MOVE.w D0,D1
0003AA34 <AmiBlitz3.ab2@15846>    BPL.w syntaxerr
0003AA36 <AmiBlitz3.ab2@15847>   MOVE.w D2,-(A7)
0003AA3A <AmiBlitz3.ab2@15848>   BCLR #$F,D1
0003AA3E <AmiBlitz3.ab2@15849>    BSR.w searchinstr
0003AA42 <AmiBlitz3.ab2@15850>   MOVE.l $12(A2),D0
0003AA46 <AmiBlitz3.ab2@15851>   TST.w -$2(A2,D0.L)
0003AA4A <AmiBlitz3.ab2@15852>    BEQ.w freeerr
0003AA4C <AmiBlitz3.ab2@15853>   MOVE.w (A7)+,D2
0003AA4E <AmiBlitz3.ab2@15854> RTS
0003AA52 <AmiBlitz3.ab2@15858>   MOVE.l $0(A5),D0
0003AA56 <AmiBlitz3.ab2@15859>    BNE.b ucodeskip
0003AA58 <AmiBlitz3.ab2@15860>   MOVEQ.l #-$01,D0
0003AA5C <AmiBlitz3.ab2@15861> BRA.b usedcodef
0003AA60 <AmiBlitz3.ab2@15864>   SUB.l $0(A5),D0
0003AA62 <AmiBlitz3.ab2@15867>   LSR.w #8,D0
0003AA66 <AmiBlitz3.ab2@15872>    MOVE.l $0(A5),D0
0003AA6A <AmiBlitz3.ab2@15873>    BNE.b ucodeskip2
0003AA6C <AmiBlitz3.ab2@15874>   MOVEQ.l #-$01,D0
0003AA70 <AmiBlitz3.ab2@15875> BRA.b usedcode2f
0003AA74 <AmiBlitz3.ab2@15878>   SUB.l $0(A5),D0                                          ;usedcode2
0003AA76 <AmiBlitz3.ab2@15879>   LSR.w #8,D0
0003AA78 <AmiBlitz3.ab2@15882>   LSR.w #8,D0
0003AA7A <AmiBlitz3.ab2@15887>   MOVE.l D0,-(A7)
0003AA7C <AmiBlitz3.ab2@15890>   MOVE.l (A7)+,D0
0003AA7E <AmiBlitz3.ab2@15893>   MOVE.l D0,D0
0003AA82 <AmiBlitz3.ab2@15899>   BSR.w JL_0_A9A0
0003AA86 <AmiBlitz3.ab2@15901>   MOVE.w -$2(A2,D0.L),D3
0003AA8A <AmiBlitz3.ab2@15902>   CMP.w #$9,D3
0003AA8E <AmiBlitz3.ab2@15903>    BCC.w doused__skip
0003AA92 <AmiBlitz3.ab2@15907>   LEA usedcode(PC),A0
0003AA96 <AmiBlitz3.ab2@15908>   LEA usedcodef(PC),A1
0003AA9C <AmiBlitz3.ab2@15910>   ANDI.w #$F1FF,$E+4(A0)                                   ;and #$f1ff,ucodediv-usedcode(a0) org source
0003AAA0 <AmiBlitz3.ab2@15911>   ANDI.w #$7,D3
0003AAA2 <AmiBlitz3.ab2@15912>   LSL.w #8,D3
0003AAA4 <AmiBlitz3.ab2@15913>   LSL.w #1,D3
0003AAA8 <AmiBlitz3.ab2@15914>   OR.w D3,$E+4(A0)                                         ;or  d3,ucodediv-usedcode(a0) org source
0003AAAC <AmiBlitz3.ab2@15915> BRA.w doused__skip2
0003AAB0 <AmiBlitz3.ab2@15920>   LEA usedcode2(PC),A0
0003AAB4 <AmiBlitz3.ab2@15921>   LEA usedcode2f(PC),A1
0003AABA <AmiBlitz3.ab2@15923>   ANDI.w #$F1FF,$10+4(A0)                                  ;and #$f1ff,ucodediv2-usedcode2(a0) org source
0003AABC <AmiBlitz3.ab2@15924>   SUBQ.w #8,D3
0003AABE <AmiBlitz3.ab2@15925>   LSL.w #8,D3
0003AAC0 <AmiBlitz3.ab2@15926>   LSL.w #1,D3
0003AAC4 <AmiBlitz3.ab2@15927>   OR.w D3,$10+4(A0)                                        ;or  d3,ucodediv2-usedcode2(a0) org source
0003AAC8 <AmiBlitz3.ab2@15930>   MOVE.w -$6(A2,D0.L),D3
0003AACC <AmiBlitz3.ab2@15931>   MOVE.w D3,$C+4(A0)                                       ;move d3,ucodeskip-usedcode+2(a0) org source
0003AACE <AmiBlitz3.ab2@15932>   ADDQ.w #4,D3
0003AAD2 <AmiBlitz3.ab2@15933>   MOVE.w D3,$2(A0)
0003AAD8 <AmiBlitz3.ab2@15934>   MOVE.w regnum,D1
0003AADC <AmiBlitz3.ab2@15935>    BEQ.w doused__skip3
0003AAE0 <AmiBlitz3.ab2@15936>   MOVE.w usedprep(PC),D1
0003AAE4 <AmiBlitz3.ab2@15937>    BSR.w writeword
0003AAE8 <AmiBlitz3.ab2@15940>   BSR.w pokecode
0003AAEE <AmiBlitz3.ab2@15941>   MOVE.w regnum,D1
0003AAF2 <AmiBlitz3.ab2@15942>    BEQ.w doused__skip4
0003AAF4 <AmiBlitz3.ab2@15943>   LSL.w #8,D1
0003AAF6 <AmiBlitz3.ab2@15944>   LSL.w #1,D1
0003AAFA <AmiBlitz3.ab2@15945>   OR.w usedfix(PC),D1
0003AAFE <AmiBlitz3.ab2@15946>    BSR.w writeword
0003AB02 <AmiBlitz3.ab2@15947>   MOVE.w useddone(PC),D1
0003AB06 <AmiBlitz3.ab2@15948>    BSR.w writeword
0003AB08 <AmiBlitz3.ab2@15951>    MOVEQ.l #$02,D2
0003AB0C <AmiBlitz3.ab2@15952> BRA.w get1bytemain
0003AB10 <AmiBlitz3.ab2@15960>    BSR.w JL_0_A9A0
0003AB12 <AmiBlitz3.ab2@15962>   MOVEQ.l #$00,D3
0003AB16 <AmiBlitz3.ab2@15963>   MOVE.w -$4(A2,D0.L),D3
0003AB1A <AmiBlitz3.ab2@15964>    BSR.w get1bytemain
0003AB1E <AmiBlitz3.ab2@15965> BRA.w JL_0_B46E
0003AB22 <AmiBlitz3.ab2@15972>    BSR.w get1bytemain
0003AB24 <AmiBlitz3.ab2@15973>   MOVE.w D0,-(A7)
0003AB28 <AmiBlitz3.ab2@15974>    BSR.w get1bytemain
0003AB2C <AmiBlitz3.ab2@15975>   CMP.w #$28,D0
0003AB30 <AmiBlitz3.ab2@15976>    BNE.w syntaxerr
0003AB32 <AmiBlitz3.ab2@15977>   MOVE.w (A7)+,D0
0003AB36 <AmiBlitz3.ab2@15978>    BSR.w JL_0_C340
0003AB3A <AmiBlitz3.ab2@15979>    BSR.w reget
0003AB3E <AmiBlitz3.ab2@15980>   CMP.w #$29,D0
0003AB42 <AmiBlitz3.ab2@15981>    BNE.w syntaxerr
0003AB46 <AmiBlitz3.ab2@15985>   LEA addrcode(PC),A0
0003AB4A <AmiBlitz3.ab2@15986>   LEA addrcodef(PC),A1
0003AB50 <AmiBlitz3.ab2@15987>   MOVE.w -$6(A2),$2(A0)
0003AB54 <AmiBlitz3.ab2@15988>   MOVE.w $4(A0),D1
0003AB58 <AmiBlitz3.ab2@15989>   ANDI.w #$FFF8,D1
0003AB5E <AmiBlitz3.ab2@15990>   OR.w regnum,D1
0003AB62 <AmiBlitz3.ab2@15991>   MOVE.w D1,$4(A0)
0003AB66 <AmiBlitz3.ab2@15992>   MOVE.w $6(A0),D1
0003AB6A <AmiBlitz3.ab2@15993>   ANDI.w #$F1FF,D1
0003AB70 <AmiBlitz3.ab2@15994>   MOVE.w regnum,D0
0003AB72 <AmiBlitz3.ab2@15995>   LSL.w #8,D0
0003AB74 <AmiBlitz3.ab2@15996>   LSL.w #1,D0
0003AB76 <AmiBlitz3.ab2@15997>   OR.w D0,D1
0003AB7A <AmiBlitz3.ab2@15998>   MOVE.w D1,$6(A0)
0003AB7E <AmiBlitz3.ab2@15999>    BSR.w pokecode
0003AB80 <AmiBlitz3.ab2@16000>   MOVEQ.l #$03,D2
0003AB84 <AmiBlitz3.ab2@16001> BRA.w get1bytemain
0003AB88 <AmiBlitz3.ab2@16005>   CMP.w #-$7F4D,D0
0003AB8C <AmiBlitz3.ab2@16006>    BHI.w JL_0_AAFE
0003AB90 <AmiBlitz3.ab2@16007> BRA.w syntaxerr
0003AB94 <AmiBlitz3.ab2@16011>   CMP.w #-$7F4A,D0
0003AB98 <AmiBlitz3.ab2@16012>    BEQ.w JL_0_A98C
0003AB9C <AmiBlitz3.ab2@16013>   CMP.w #-$7F48,D0
0003ABA0 <AmiBlitz3.ab2@16014>    BEQ.w doaddr
0003ABA4 <AmiBlitz3.ab2@16015>   CMP.w #-$7F3C,D0
0003ABA8 <AmiBlitz3.ab2@16016>    BEQ.w domaximum
0003ABAC <AmiBlitz3.ab2@16017>   CMP.w #-$7F2F,D0
0003ABB0 <AmiBlitz3.ab2@16018>    BEQ.w doused
0003ABB2 <AmiBlitz3.ab2@16019>   MOVE.w D2,-(A7)
0003ABB4 <AmiBlitz3.ab2@16020>   MOVE.w D0,D1
0003ABB8 <AmiBlitz3.ab2@16021>   BCLR #$F,D1
0003ABBC <AmiBlitz3.ab2@16023>    BSR.w searchinstr
0003ABBE <AmiBlitz3.ab2@16024>   MOVE.w (A3),D1
0003ABC2 <AmiBlitz3.ab2@16025>   BTST #$1,D1
0003ABC6 <AmiBlitz3.ab2@16026>    BEQ.w noreturn_                                         ;syntax error noreturn
0003ABCA <AmiBlitz3.ab2@16027>   BTST #$2,D1
0003ABCE <AmiBlitz3.ab2@16028>    BNE.w JL_0_AC1A
0003ABD0 <AmiBlitz3.ab2@16029>   LSR.w #8,D1
0003ABD6 <AmiBlitz3.ab2@16030>   BTST #$3,$1(A3)
0003ABDA <AmiBlitz3.ab2@16031>    BEQ.w JL_0_AB4C
0003ABE0 <AmiBlitz3.ab2@16032>    JSR AJL_0_498A
0003ABE2 <AmiBlitz3.ab2@16035>    MOVE.w D1,-(A7)                                         ;is library instruction
0003ABE6 <AmiBlitz3.ab2@16036>   CMP.w #$7,D1
0003ABEA <AmiBlitz3.ab2@16037>    BNE.w JL_0_AB5E
0003ABEC <AmiBlitz3.ab2@16038>   MOVE.l A2,-(A7)
0003ABF0 <AmiBlitz3.ab2@16039>    BSR.w makesbase
0003ABF2 <AmiBlitz3.ab2@16040>   MOVEA.l (A7)+,A2
0003ABF6 <AmiBlitz3.ab2@16043>     BSR.w JL_0_AFA2
0003ABF8 <AmiBlitz3.ab2@16044>   MOVE.w D3,-(A7)
0003ABFC <AmiBlitz3.ab2@16045>    BSR.w get1bytemain
0003ABFE <AmiBlitz3.ab2@16046>   MOVEQ.l #$00,D1
0003AC02 <AmiBlitz3.ab2@16047>   CMP.w #$28,D0
0003AC06 <AmiBlitz3.ab2@16048>    BNE.w JL_0_AB80
0003AC0A <AmiBlitz3.ab2@16049>    BSR.w JL_0_66F6
0003AC0C <AmiBlitz3.ab2@16050>   TST.w D1
0003AC10 <AmiBlitz3.ab2@16051>    BEQ.w syntaxerr
0003AC14 <AmiBlitz3.ab2@16052> BRA.w JL_0_AB84
0003AC1E <AmiBlitz3.ab2@16057>   MOVE.w oldqflag,instringon
0003AC24 <AmiBlitz3.ab2@16058>   MOVEA.l lastsourcepos,A5
0003AC2A <AmiBlitz3.ab2@16061>    MOVE.w regnum,-(A7)
0003AC34 <AmiBlitz3.ab2@16062>    MOVE.w regnum,regnumstore
0003AC3A <AmiBlitz3.ab2@16063>    TST.b fpu
0003AC3E <AmiBlitz3.ab2@16064>             BEQ 'nofloat
0003AC44 <AmiBlitz3.ab2@16065>             CMP.w #$ffff,28(a3)
0003AC48 <AmiBlitz3.ab2@16066>             BNE 'nofloat
0003AC4E <AmiBlitz3.ab2@16067>             CMP.w #$3c01,34(a3)                            ;val do nofpu stuff
0003AC52 <AmiBlitz3.ab2@16068>             BEQ 'nofloat
0003AC58 <AmiBlitz3.ab2@16069>             CMP.w #$3c02,34(a3)                            ;int skip
0003AC5C <AmiBlitz3.ab2@16070>             BEQ 'quick
0003AC60 <AmiBlitz3.ab2@16071>             CMP.b #5,(a3)
0003AC64 <AmiBlitz3.ab2@16072>             BNE 'nofloat
0003AC6A <AmiBlitz3.ab2@16075>             CLR.l load_var_addr
0003AC6E <AmiBlitz3.ab2@16076> BRA 'isfpu
0003AC74 <AmiBlitz3.ab2@16079>    CLR.w regnum
0003AC76 <AmiBlitz3.ab2@16082>    MOVE.w D1,-(A7)
0003AC7C <AmiBlitz3.ab2@16083>   BTST #$3,$1(A3)
0003AC80 <AmiBlitz3.ab2@16084>    BEQ.w JL_0_ABB0
0003AC84 <AmiBlitz3.ab2@16103>   MOVE.w $6(A7),D1
0003AC8A <AmiBlitz3.ab2@16104>   MOVE.w d1,peeksize
0003AC8E <AmiBlitz3.ab2@16114>   ORI.w #$7000,D1
0003AC92 <AmiBlitz3.ab2@16115>   BSR.w writeword                                          ;write peekmode
0003AC98 <AmiBlitz3.ab2@16118>   ADDQ.w #1,regnum
0003AC9A <AmiBlitz3.ab2@16119>   MOVE.w (A7),D1
0003ACA2 <AmiBlitz3.ab2@16122>   MOVE.w 2(a7),tempregnum
0003ACA8 <AmiBlitz3.ab2@16123>   JSR JL_0_4878
0003ACAA <AmiBlitz3.ab2@16124>   TST.w (A7)+
0003ACAE <AmiBlitz3.ab2@16125>    BEQ.w JL_0_ABC6
0003ACB2 <AmiBlitz3.ab2@16126>   CMP.w #$29,D0
0003ACB6 <AmiBlitz3.ab2@16127>    BNE.w syntaxerr
0003ACBA <AmiBlitz3.ab2@16128>    BSR.w get1bytemain
0003ACBC <AmiBlitz3.ab2@16131>    MOVE.w (A7)+,D1
0003ACC2 <AmiBlitz3.ab2@16132>   MOVE.w D1,regnum
0003ACC6 <AmiBlitz3.ab2@16133>    BEQ.w JL_0_ABDE
0003ACCC <AmiBlitz3.ab2@16134>    CMP.w #$3c01,24(a2)                                     ;val skipped
0003ACD0 <AmiBlitz3.ab2@16135>    BNE 'noval
0003ACD6 <AmiBlitz3.ab2@16136>    TST.b fpu
0003ACDA <AmiBlitz3.ab2@16137>    BEQ 'noval
0003ACE0 <AmiBlitz3.ab2@16138>    CLR.l load_var_addr
0003ACE2 <AmiBlitz3.ab2@16139>    MOVEQ #0,d1
0003ACE8 <AmiBlitz3.ab2@16140>    MOVE.w regnum,d1
0003ACEA <AmiBlitz3.ab2@16141>    LSL.l #7,d1
0003ACF0 <AmiBlitz3.ab2@16142>    OR.l #$f2000000,d1
0003ACF4 <AmiBlitz3.ab2@16143>    BSR writelong
0003ACF8 <AmiBlitz3.ab2@16144> BRA JL_0_ABDE
0003ACFE <AmiBlitz3.ab2@16148>    CMP.w #$3c02,24(a2)                                     ;int skipped
0003AD02 <AmiBlitz3.ab2@16149>    BEQ 'quick
0003AD06 <AmiBlitz3.ab2@16150>    CMP.b #5,d2
0003AD0A <AmiBlitz3.ab2@16151>    BNE 'nofpu
0003AD10 <AmiBlitz3.ab2@16152>    TST.b fpu
0003AD14 <AmiBlitz3.ab2@16153>    BEQ 'nofpu
0003AD1A <AmiBlitz3.ab2@16158>    CLR.l load_var_addr
0003AD1E <AmiBlitz3.ab2@16159> BRA JL_0_ABDE
0003AD20 <AmiBlitz3.ab2@16162>   LSL.w #8,D1
0003AD22 <AmiBlitz3.ab2@16163>   LSL.w #1,D1
0003AD26 <AmiBlitz3.ab2@16164>   ORI.w #$2000,D1
0003AD2A <AmiBlitz3.ab2@16165>   BSR.w writeword                                          ;write move.l d0,dx
0003AD30 <AmiBlitz3.ab2@16166>   TST.b fpu
0003AD34 <AmiBlitz3.ab2@16167>   BEQ JL_0_ABDE
0003AD36 <AmiBlitz3.ab2@16168>   MOVEQ #0,d1
0003AD3C <AmiBlitz3.ab2@16169>   MOVE.w regnum,d1
0003AD3E <AmiBlitz3.ab2@16170>   LSL.l #7,d1
0003AD44 <AmiBlitz3.ab2@16171>   OR.l #$f2000000,d1
0003AD46 <AmiBlitz3.ab2@16175>        MOVE.w (A7)+,D3
0003AD4A <AmiBlitz3.ab2@16176>        BEQ.w JL_0_ABFC
0003AD50 <AmiBlitz3.ab2@16177>        TST.b fpu
0003AD54 <AmiBlitz3.ab2@16178>        BEQ 'nofpu
0003AD56 <AmiBlitz3.ab2@16179>       MOVE.l d0,-(a7)
0003AD58 <AmiBlitz3.ab2@16180>        MOVE.l a0,-(a7)
0003AD5E <AmiBlitz3.ab2@16181>        MOVE.l stacktrack,d1
0003AD64 <AmiBlitz3.ab2@16182>        LEA fpustackbase,a0
0003AD6C <AmiBlitz3.ab2@16183>        MOVE.w 0(a0,d1),regmask
0003AD6E <AmiBlitz3.ab2@16184>        MOVE.l (a7)+,a0
0003AD72 <AmiBlitz3.ab2@16185>       MOVE.w #8,d0
0003AD76 <AmiBlitz3.ab2@16188>       BEQ 'ready
0003AD7C <AmiBlitz3.ab2@16189>       BTST d0,regmask
0003AD80 <AmiBlitz3.ab2@16190>       BEQ 'noa7
0003AD82 <AmiBlitz3.ab2@16191>       MOVEQ #0,d1
0003AD84 <AmiBlitz3.ab2@16192>       MOVE.w d0,d1
0003AD86 <AmiBlitz3.ab2@16193>       SUBQ.w #1,d1
0003AD88 <AmiBlitz3.ab2@16194>       ASL #7,d1
0003AD8E <AmiBlitz3.ab2@16196>       OR.l #$f21f5400,d1                                   ;fmove.d (a7)+
0003AD92 <AmiBlitz3.ab2@16197>       BSR writelong
0003AD98 <AmiBlitz3.ab2@16198>       SUBQ.l #2,stacktrack
0003AD9A <AmiBlitz3.ab2@16201>       SUBQ.w #1,d0
0003AD9E <AmiBlitz3.ab2@16202>       BNE 'loop
0003ADA0 <AmiBlitz3.ab2@16205>       MOVE.l (a7)+,d0
0003ADA6 <AmiBlitz3.ab2@16206>       SUBQ.l #2,stacktrack                                 ;int track
0003ADAA <AmiBlitz3.ab2@16209>    MOVE.w #$4CDF,D1
0003ADAE <AmiBlitz3.ab2@16210>    BSR.w writeword                                         ;write movem.l (a7)+,
0003ADB0 <AmiBlitz3.ab2@16211>   MOVEQ.l #$00,D1
0003ADB2 <AmiBlitz3.ab2@16212>   MOVEQ.l #$0F,D4
0003ADB4 <AmiBlitz3.ab2@16215>     LSL.w #1,D3
0003ADB6 <AmiBlitz3.ab2@16216>     ROXR.w #1,D1
0003ADBA <AmiBlitz3.ab2@16217>   DBF D4,JL_0_ABF0
0003ADBE <AmiBlitz3.ab2@16219>    BSR.w writeword
0003ADC4 <AmiBlitz3.ab2@16220>    TST.b fast
0003ADC8 <AmiBlitz3.ab2@16221>    BEQ JL_0_ABFC
0003ADCE <AmiBlitz3.ab2@16222>    TST.w regnum
0003ADD2 <AmiBlitz3.ab2@16223>    BEQ JL_0_ABFC
0003ADD8 <AmiBlitz3.ab2@16224>    CMP.w #$3c0e,$1c(a3)                                    ;true
0003ADDC <AmiBlitz3.ab2@16225>    BNE 'l1
0003ADE2 <AmiBlitz3.ab2@16226>    MOVE.w regnum,d1
0003ADE4 <AmiBlitz3.ab2@16227>    ASL.l #8,d1
0003ADE6 <AmiBlitz3.ab2@16228>    ASL.l #1,d1
0003ADEA <AmiBlitz3.ab2@16229>    OR.w #$70ff,d1
0003ADF4 <AmiBlitz3.ab2@16230>    SUB.l #12,destpointer
0003ADF8 <AmiBlitz3.ab2@16231>    BSR writeword
0003ADFE <AmiBlitz3.ab2@16234>   CMP.w #$3c0f,$1c(a3)                                     ;false
0003AE02 <AmiBlitz3.ab2@16235>    BNE 'l2
0003AE08 <AmiBlitz3.ab2@16236>     MOVE.w regnum,d1
0003AE0A <AmiBlitz3.ab2@16237>     ASL.l #8,d1
0003AE0C <AmiBlitz3.ab2@16238>     ASL.l #1,d1
0003AE10 <AmiBlitz3.ab2@16239>     OR.w #$7000,d1
0003AE1A <AmiBlitz3.ab2@16240>     SUB.l #12,destpointer
0003AE1E <AmiBlitz3.ab2@16241>     BSR writeword
0003AE20 <AmiBlitz3.ab2@16245>    MOVE.w (A7)+,D2
0003AE24 <AmiBlitz3.ab2@16246>   CMP.w #$7,D2                                             ;destination var type
0003AE28 <AmiBlitz3.ab2@16247>    BNE.w JL_0_AC16
0003AE2E <AmiBlitz3.ab2@16248>   MOVE.w putstlen,D1
0003AE34 <AmiBlitz3.ab2@16249>   OR.w regnum,D1
0003AE38 <AmiBlitz3.ab2@16250>    BSR.w writeword
0003AE3C <AmiBlitz3.ab2@16253> BRA.w JL_0_AF66
0003AE40 <AmiBlitz3.ab2@16257>   MOVE.w $6(A3),D1
0003AE44 <AmiBlitz3.ab2@16258>    BSR.w uselib
0003AE48 <AmiBlitz3.ab2@16259>    BSR.w JL_0_AD40
0003AE4A <AmiBlitz3.ab2@16260>   MOVE.l D4,D1
0003AE4C <AmiBlitz3.ab2@16261>   MOVE.l D5,-(A7)
0003AE50 <AmiBlitz3.ab2@16262>    BSR.w JL_0_AD38
0003AE54 <AmiBlitz3.ab2@16263>   MOVE.w $A(A1),-(A7)
0003AE56 <AmiBlitz3.ab2@16264>   ADDQ.w #8,A3
0003AE58 <AmiBlitz3.ab2@16265>   MOVE.w (A3)+,-(A7)
0003AE5A <AmiBlitz3.ab2@16266>   MOVE.l A3,-(A7)
0003AE5E <AmiBlitz3.ab2@16267>    BSR.w get1bytemain
0003AE60 <AmiBlitz3.ab2@16268>   MOVE.w D0,-(A7)
0003AE62 <AmiBlitz3.ab2@16269>   MOVEQ.l #$00,D3
0003AE64 <AmiBlitz3.ab2@16272>   MOVE.b (A3)+,D1
0003AE68 <AmiBlitz3.ab2@16273>    BMI.w JL_0_AC6A
0003AE6A <AmiBlitz3.ab2@16274>   MOVEQ.l #$03,D2
0003AE6C <AmiBlitz3.ab2@16275>   ADDQ.w #1,D3
0003AE70 <AmiBlitz3.ab2@16276>   MOVEM.l D3/A3,-(A7)
0003AE74 <AmiBlitz3.ab2@16277>    BSR.w peval
0003AE7A <AmiBlitz3.ab2@16278>   SUBQ.w #4,a2offset
0003AE7E <AmiBlitz3.ab2@16279>   MOVEM.l (A7)+,D3/A3
0003AE82 <AmiBlitz3.ab2@16280>   CMP.w #$2C,D0
0003AE86 <AmiBlitz3.ab2@16281>    BEQ.w JL_0_AC40
0003AE88 <AmiBlitz3.ab2@16282>   TST.b (A3)
0003AE8C <AmiBlitz3.ab2@16283>    BPL.w syntaxerr
0003AE8E <AmiBlitz3.ab2@16286>   MOVE.w (A7)+,D1
0003AE92 <AmiBlitz3.ab2@16287>    BSR.w JL_0_AD04
0003AE94 <AmiBlitz3.ab2@16288>   MOVEA.l (A7)+,A3
0003AE96 <AmiBlitz3.ab2@16289>   SUBQ.w #1,D3
0003AE9A <AmiBlitz3.ab2@16290>    BMI.w JL_0_ACBE
0003AE9C <AmiBlitz3.ab2@16293>   TST.b (A3)+
0003AEA0 <AmiBlitz3.ab2@16294>    BPL.w JL_0_AC78
0003AEA2 <AmiBlitz3.ab2@16295>   SUBQ.w #1,A3
0003AEA4 <AmiBlitz3.ab2@16298>     MOVEQ.l #$00,D1
0003AEA6 <AmiBlitz3.ab2@16299>     MOVE.b -(A3),D1
0003AEAA <AmiBlitz3.ab2@16300>     BTST #$4,D1
0003AEAE <AmiBlitz3.ab2@16301>      BNE.w JL_0_ACAA
0003AEB4 <AmiBlitz3.ab2@16302>     CMP.w regnum,D1
0003AEB8 <AmiBlitz3.ab2@16303>      BCC.w JL_0_AC9E
0003AEBA <AmiBlitz3.ab2@16304>     BSET D1,D5
0003AEBC <AmiBlitz3.ab2@16305>     MOVEQ.l #$0F,D0
0003AEBE <AmiBlitz3.ab2@16306>     SUB.w D1,D0
0003AEC0 <AmiBlitz3.ab2@16307>     BSET D0,D4
0003AEC2 <AmiBlitz3.ab2@16310>     LSL.w #8,D1
0003AEC4 <AmiBlitz3.ab2@16311>     LSL.w #1,D1
0003AEC8 <AmiBlitz3.ab2@16312>     ORI.w #$201F,D1
0003AECC <AmiBlitz3.ab2@16313>   BRA.w JL_0_ACB6
0003AED0 <AmiBlitz3.ab2@16316>     ANDI.w #$7,D1
0003AED2 <AmiBlitz3.ab2@16317>     LSL.w #8,D1
0003AED4 <AmiBlitz3.ab2@16318>     LSL.w #1,D1
0003AED8 <AmiBlitz3.ab2@16319>     ORI.w #$205F,D1
0003AEDC <AmiBlitz3.ab2@16322>      BSR.w writeword
0003AEE0 <AmiBlitz3.ab2@16323>   DBF D3,JL_0_AC80
0003AEE6 <AmiBlitz3.ab2@16326>   MOVE.w (A7)+,libjsr+2
0003AEEC <AmiBlitz3.ab2@16327>   MOVE.w (A7)+,libbase+2
0003AEF2 <AmiBlitz3.ab2@16328>   MOVE.l libbase,D1
0003AEF6 <AmiBlitz3.ab2@16329>    BSR.w writelong
0003AEFC <AmiBlitz3.ab2@16330>   MOVE.l libjsr,D1
0003AF00 <AmiBlitz3.ab2@16331>    BSR.w writelong
0003AF06 <AmiBlitz3.ab2@16332>   MOVE.w regnum,D1
0003AF0A <AmiBlitz3.ab2@16333>    BEQ.w JL_0_ACF4
0003AF0C <AmiBlitz3.ab2@16334>   LSL.w #8,D1
0003AF0E <AmiBlitz3.ab2@16335>   LSL.w #1,D1
0003AF12 <AmiBlitz3.ab2@16336>   ORI.w #$2000,D1
0003AF16 <AmiBlitz3.ab2@16337>    BSR.w writeword
0003AF18 <AmiBlitz3.ab2@16340>   MOVE.l (A7)+,D1
0003AF1C <AmiBlitz3.ab2@16341>    BSR.w JL_0_AD38
0003AF1E <AmiBlitz3.ab2@16342>   MOVEQ.l #$03,D2
0003AF22 <AmiBlitz3.ab2@16343>    BSR.w reget
0003AF26 <AmiBlitz3.ab2@16344> BRA.w JL_0_AF66
0003AF28 <AmiBlitz3.ab2@16347>   TST.w D3
0003AF2C <AmiBlitz3.ab2@16348>    BEQ.w JL_0_AD1E
0003AF30 <AmiBlitz3.ab2@16349>   CMP.w #$28,D1
0003AF34 <AmiBlitz3.ab2@16350>    BNE.w syntaxerr
0003AF38 <AmiBlitz3.ab2@16351>   CMP.w #$29,D0
0003AF3C <AmiBlitz3.ab2@16352>    BNE.w syntaxerr
0003AF40 <AmiBlitz3.ab2@16353> BRA.w get1bytemain
0003AF44 <AmiBlitz3.ab2@16356>   CMP.w #$28,D1
0003AF48 <AmiBlitz3.ab2@16357>    BNE.w JL_0_AD36
0003AF4C <AmiBlitz3.ab2@16358>    BSR.w get1bytemain
0003AF50 <AmiBlitz3.ab2@16359>   CMP.w #$29,D0
0003AF54 <AmiBlitz3.ab2@16360>    BNE.w syntaxerr
0003AF58 <AmiBlitz3.ab2@16361> BRA.w get1bytemain
0003AF5A <AmiBlitz3.ab2@16364> RTS
0003AF5C <AmiBlitz3.ab2@16367>   TST.w D1
0003AF60 <AmiBlitz3.ab2@16368>    BNE.w writelong
0003AF62 <AmiBlitz3.ab2@16369> RTS
0003AF66 <AmiBlitz3.ab2@16373>   MOVE.w #$48E7,D4
0003AF68 <AmiBlitz3.ab2@16374>   SWAP D4
0003AF6A <AmiBlitz3.ab2@16375>   CLR.w D4
0003AF6E <AmiBlitz3.ab2@16376>   MOVE.w #$4CDF,D5
0003AF70 <AmiBlitz3.ab2@16377>   SWAP D5
0003AF72 <AmiBlitz3.ab2@16378>   CLR.w D5
0003AF78 <AmiBlitz3.ab2@16379>   MOVE.w regnum,D1
0003AF7C <AmiBlitz3.ab2@16380>    BEQ.w JL_0_AD74
0003AF80 <AmiBlitz3.ab2@16381>   BSET #$F,D4
0003AF84 <AmiBlitz3.ab2@16382>   BSET #$0,D5
0003AF88 <AmiBlitz3.ab2@16383>   CMP.w #$2,D1
0003AF8C <AmiBlitz3.ab2@16384>    BCS.w JL_0_AD72
0003AF90 <AmiBlitz3.ab2@16387>   BSET #$E,D4
0003AF94 <AmiBlitz3.ab2@16388>   BSET #$1,D5
0003AF96 <AmiBlitz3.ab2@16391> RTS
0003AF9C <AmiBlitz3.ab2@16394>   TST.w fuckpos
0003AFA0 <AmiBlitz3.ab2@16395>   BNE.w JL_0_AD6A
0003AFA2 <AmiBlitz3.ab2@16396> RTS
0003AFA4 <AmiBlitz3.ab2@16399> fuckpos:  Ds.w 1
0003AFAA <AmiBlitz3.ab2@16403>   MOVE.w sbasegot,D1
0003AFAE <AmiBlitz3.ab2@16404>    BEQ.w makesbase__skip
0003AFB2 <AmiBlitz3.ab2@16408>   MOVE.w sbgot(PC),D1
0003AFB6 <AmiBlitz3.ab2@16409>    BNE.w makesbase__skip2
0003AFBE <AmiBlitz3.ab2@16413>   MOVE.w #$0002,sbgot
0003AFC4 <AmiBlitz3.ab2@16414>   MOVE.w movea3a7,D1
0003AFC8 <AmiBlitz3.ab2@16415> BRA.w writeword
0003AFCA <AmiBlitz3.ab2@16418> RTS
0003AFD2 <AmiBlitz3.ab2@16423>   MOVE.w #$0001,sbgot                                      ;voodoo magic! - Will it work?
0003AFD8 <AmiBlitz3.ab2@16426>   MOVE.l #$C601,D1
0003AFE0 <AmiBlitz3.ab2@16427>   MOVE.w #-1,sbasegot
0003AFE6 <AmiBlitz3.ab2@16428>   MOVE.l d1,lastinstruction
0003AFEA <AmiBlitz3.ab2@16429>   BSR.w Atokejsr
0003AFEC <AmiBlitz3.ab2@16430> RTS
0003AFF6 <AmiBlitz3.ab2@16435>   MOVE.l data1,litdata1
0003AFFC <AmiBlitz3.ab2@16436>   TST.b fast
0003B000 <AmiBlitz3.ab2@16437>   BEQ 'l50                                                 ;optistring  seem impossible to get work
0003B004 <AmiBlitz3.ab2@16441> BRA 'l50                                                   ;to deactivate
0003B00A <AmiBlitz3.ab2@16447>   TST.b optistring
0003B00E <AmiBlitz3.ab2@16448>   BNE.s 'l21
0003B014 <AmiBlitz3.ab2@16449>   CLR.b string1
0003B01C <AmiBlitz3.ab2@16450>   MOVE.b #1,optistring
0003B022 <AmiBlitz3.ab2@16451>   TST.b nostringopt
0003B026 <AmiBlitz3.ab2@16452>   BNE 'l21
0003B028 <AmiBlitz3.ab2@16453>   MOVE.l a5,a4
0003B02A <AmiBlitz3.ab2@16454>   SUBQ.l #1,a4
0003B02C <AmiBlitz3.ab2@16457>     TST.b (a4)
0003B030 <AmiBlitz3.ab2@16458>     BMI 'l19a
0003B034 <AmiBlitz3.ab2@16459>     BEQ.s 'l20
0003B038 <AmiBlitz3.ab2@16460>     CMP.b #$22,(a4)
0003B03C <AmiBlitz3.ab2@16461>     BEQ.s 'l19
0003B042 <AmiBlitz3.ab2@16464>     TST.w string1
0003B046 <AmiBlitz3.ab2@16465>     BNE 'l11
0003B04A <AmiBlitz3.ab2@16466>     CMP.b #":",(a4)
0003B04E <AmiBlitz3.ab2@16467>     BEQ.s 'l20
0003B052 <AmiBlitz3.ab2@16468>     CMP.b #";",(a4)
0003B056 <AmiBlitz3.ab2@16469>     BEQ.s 'l20
0003B05A <AmiBlitz3.ab2@16470>     CMP.b #"+",(a4)
0003B05E <AmiBlitz3.ab2@16471>     BEQ.s 'l21
0003B062 <AmiBlitz3.ab2@16472>     CMP.b #",",(a4)
0003B066 <AmiBlitz3.ab2@16473>     BEQ.s 'l20                                             ;was l21
0003B06A <AmiBlitz3.ab2@16474>     CMP.b #")",(a4)
0003B06E <AmiBlitz3.ab2@16475>     BEQ.s 'l20                                             ;was l21
0003B070 <AmiBlitz3.ab2@16478>     ADDQ.l #1,a4
0003B074 <AmiBlitz3.ab2@16479> BRA.s 'l10
0003B07C <AmiBlitz3.ab2@16482>   BCHG #0,string1
0003B080 <AmiBlitz3.ab2@16483> BRA 'l18
0003B082 <AmiBlitz3.ab2@16486>   ADDQ.l #1,a4
0003B084 <AmiBlitz3.ab2@16487>   TST.b (a4)
0003B088 <AmiBlitz3.ab2@16488>   BEQ 'l21
0003B08C <AmiBlitz3.ab2@16489> BRA 'l11
0003B08E <AmiBlitz3.ab2@16492>   MOVE.l a5,a4
0003B090 <AmiBlitz3.ab2@16493>   SUBQ.l #1,a4
0003B094 <AmiBlitz3.ab2@16496>   CMP.b #$20,-(a4)
0003B098 <AmiBlitz3.ab2@16497>   BEQ 'll1
0003B09C <AmiBlitz3.ab2@16498>   CMP.b #"+",(a4)
0003B0A0 <AmiBlitz3.ab2@16499>   BEQ 'l21
0003B0A8 <AmiBlitz3.ab2@16514>   MOVE.b #2,optistring
0003B0B0 <AmiBlitz3.ab2@16517>   CMP.b #2,optistring
0003B0B4 <AmiBlitz3.ab2@16518>   BEQ.s 'l100
0003B0B8 <AmiBlitz3.ab2@16521>   BSR.w makesbase
0003B0BC <AmiBlitz3.ab2@16522>   BSR.w pokedata1                                          ;writestringsizespace
0003B0C0 <AmiBlitz3.ab2@16523>   BSR.w pokedata1
0003B0C2 <AmiBlitz3.ab2@16526>   MOVEQ.l #$00,D2
0003B0C8 <AmiBlitz3.ab2@16529>     MOVE.l a5,lastsourcepos
0003B0CA <AmiBlitz3.ab2@16530>     MOVEQ #0,d0
0003B0CC <AmiBlitz3.ab2@16531>     MOVE.b (a5)+,d0
0003B0CE <AmiBlitz3.ab2@16532>     TST.w D0
0003B0D2 <AmiBlitz3.ab2@16533>      BEQ.w notqerr
0003B0D6 <AmiBlitz3.ab2@16534>     CMP.w #$22,D0                                          ; --- " ---
0003B0DA <AmiBlitz3.ab2@16535>      BEQ.w JL_0_ADF6
0003B0DE <AmiBlitz3.ab2@16536>     CMP.b #"\",d0
0003B0E2 <AmiBlitz3.ab2@16537>      BNE 'l1
0003B0E6 <AmiBlitz3.ab2@16538>     CMP.b #"\",(a5)
0003B0EA <AmiBlitz3.ab2@16539>      BNE 'l1
0003B0F0 <AmiBlitz3.ab2@16540>     TST.b newsyntax
0003B0F4 <AmiBlitz3.ab2@16541>      BEQ 'l1
0003B0FA <AmiBlitz3.ab2@16542>     CMP.w #"\\",1(a5)                                      ; new compiler constants
0003B0FE <AmiBlitz3.ab2@16543>     BNE 'l2
0003B100 <AmiBlitz3.ab2@16544>     ADDQ #2,a5
0003B102 <AmiBlitz3.ab2@16547>     ADDQ.w #1,D2
0003B104 <AmiBlitz3.ab2@16548>     MOVE.w D0,D1
0003B108 <AmiBlitz3.ab2@16549>     BSR.w pokedata1b                                        ;writestring
0003B10C <AmiBlitz3.ab2@16550> BRA.w writestring
0003B112 <AmiBlitz3.ab2@16553>     JSR check_newconstants
0003B116 <AmiBlitz3.ab2@16554> BRA writestring
0003B11C <AmiBlitz3.ab2@16557>   NOT instringon
0003B122 <AmiBlitz3.ab2@16558>   MOVE.w dontwrite,D1
0003B126 <AmiBlitz3.ab2@16559>   BNE.w JL_0_AE0A
0003B12E <AmiBlitz3.ab2@16560>   CMP.b #2,optistring
0003B132 <AmiBlitz3.ab2@16561>   BEQ 'l10
0003B138 <AmiBlitz3.ab2@16562>     MOVEA.l litdata1,A0
0003B13A <AmiBlitz3.ab2@16563>     CLR.w (A0)+                                            ;writesize
0003B13C <AmiBlitz3.ab2@16564>     MOVE.w D2,(A0)
0003B140 <AmiBlitz3.ab2@16568>   BSR.w JL_0_AEA4                                          ;writestringconstantcode
0003B146 <AmiBlitz3.ab2@16569>   ADDQ.l #1,data1
0003B14E <AmiBlitz3.ab2@16570>   BCLR #$0,data1+3
0003B150 <AmiBlitz3.ab2@16571>   MOVEQ.l #$07,D2
0003B154 <AmiBlitz3.ab2@16572> BRA.w get1bytemain
0003B158 <AmiBlitz3.ab2@16576>   BSR.w makename2
0003B15C <AmiBlitz3.ab2@16577>   BSR.w findlabel2
0003B160 <AmiBlitz3.ab2@16578>   BEQ.w JL_0_AE4A
0003B164 <AmiBlitz3.ab2@16579>   BSR.w addlabelhash
0003B168 <AmiBlitz3.ab2@16580>   CLR.l $4(A2)
0003B16C <AmiBlitz3.ab2@16581>   CLR.l $8(A2)
0003B174 <AmiBlitz3.ab2@16583>   MOVE.w linenumat+2,$10(A2)
0003B17A <AmiBlitz3.ab2@16584>   MOVE.w linenumat,d0
0003B17C <AmiBlitz3.ab2@16585>   MOVEQ #0,d1
0003B180 <AmiBlitz3.ab2@16586>   MOVE.b -1(a2,d7),d1
0003B184 <AmiBlitz3.ab2@16587>   MOVE.w d0,0(a2,d1)
0003B188 <AmiBlitz3.ab2@16588> BRA.w JL_0_AE52
0003B18C <AmiBlitz3.ab2@16591>   TST.l $8(A2)
0003B190 <AmiBlitz3.ab2@16592>   BNE.w JL_0_AE88
0003B196 <AmiBlitz3.ab2@16595>   MOVEA.l _execbase,A6
0003B198 <AmiBlitz3.ab2@16596>   MOVEQ.l #$0C+2,D0
0003B19A <AmiBlitz3.ab2@16597>   MOVEQ.l #$01,D1
0003B1A0 <AmiBlitz3.ab2@16598>   MOVE.l mempool,a0
0003B1A4 <AmiBlitz3.ab2@16599>   JSR _AllocPooled(a6)
0003B1A6 <AmiBlitz3.ab2@16601>   MOVEA.l D0,A0
0003B1AA <AmiBlitz3.ab2@16602>   MOVE.l $4(A2),(A0)
0003B1AE <AmiBlitz3.ab2@16603>   MOVE.l A0,$4(A2)
0003B1B6 <AmiBlitz3.ab2@16604>   MOVE.l destpointer,$4(A0)
0003B1BA <AmiBlitz3.ab2@16605>   ADDQ.l #2,$4(A0)
0003B1C2 <AmiBlitz3.ab2@16606>   MOVE.w procnum,$8(A0)
0003B1CA <AmiBlitz3.ab2@16607>   MOVE.w linenumat+2,$A(A0)
0003B1D2 <AmiBlitz3.ab2@16608>   MOVE.w linenumat,$c(a0)
0003B1D4 <AmiBlitz3.ab2@16609> RTS
0003B1D8 <AmiBlitz3.ab2@16612>   MOVE.l $4(A2),D1
0003B1DC <AmiBlitz3.ab2@16613>   BTST #$0,D1
0003B1E0 <AmiBlitz3.ab2@16614>    BNE.w illlaberr
0003B1E6 <AmiBlitz3.ab2@16615>   MOVE.w procnum,D1
0003B1EA <AmiBlitz3.ab2@16616>   CMP.w $10(A2),D1
0003B1EE <AmiBlitz3.ab2@16617>    BNE.w referr
0003B1F0 <AmiBlitz3.ab2@16618> RTS
0003B1F2 <AmiBlitz3.ab2@16622>   MOVE.w D0,-(A7)
0003B1FA <AmiBlitz3.ab2@16623>   CMP.b #2,optistring
0003B1FE <AmiBlitz3.ab2@16624>   BEQ 'l10
0003B204 <AmiBlitz3.ab2@16627>   MOVE.w numtoa0,D1
0003B208 <AmiBlitz3.ab2@16628>    BSR.w writeword
0003B20C <AmiBlitz3.ab2@16629>    BSR.w addoff
0003B212 <AmiBlitz3.ab2@16630>   MOVE.l litdata1,D1
0003B216 <AmiBlitz3.ab2@16631>    BSR.w writelong
0003B21C <AmiBlitz3.ab2@16632>   MOVE.w pushlen,D1
0003B220 <AmiBlitz3.ab2@16633>    BSR.w writeword
0003B224 <AmiBlitz3.ab2@16634>   MOVE.w #$C600,D1
0003B228 <AmiBlitz3.ab2@16635>    BSR.w Atokejsr
0003B22A <AmiBlitz3.ab2@16636>   MOVE.w (A7)+,D0
0003B22C <AmiBlitz3.ab2@16637> RTS
0003B22E <AmiBlitz3.ab2@16640>   MOVEQ #0,d1
0003B232 <AmiBlitz3.ab2@16641>   BSR.w pokedata1b
0003B238 <AmiBlitz3.ab2@16642>   MOVE.l destpointer,a4
0003B23C <AmiBlitz3.ab2@16643>   MOVE.w #$203c,d1
0003B242 <AmiBlitz3.ab2@16644>   TST.w mode
0003B246 <AmiBlitz3.ab2@16645>   BNE 'lm10
0003B24C <AmiBlitz3.ab2@16646>    ADDQ.w #4,a2offset
0003B250 <AmiBlitz3.ab2@16647>   MOVE.w #$2f3c,d1
0003B256 <AmiBlitz3.ab2@16650>   TST.w mode
0003B25A <AmiBlitz3.ab2@16651>   BEQ 'lm3
0003B260 <AmiBlitz3.ab2@16652>   MOVE.w regnum,D0
0003B262 <AmiBlitz3.ab2@16653>   LSL.w #8,D0
0003B264 <AmiBlitz3.ab2@16654>   LSL.w #1,D0
0003B266 <AmiBlitz3.ab2@16655>   OR.w d0,d1
0003B26A <AmiBlitz3.ab2@16656>   BSR writeword
0003B26E <AmiBlitz3.ab2@16657>   BSR.w addoff
0003B274 <AmiBlitz3.ab2@16658>   MOVE.l litdata1,D1
0003B278 <AmiBlitz3.ab2@16659>   BSR.w writelong
0003B280 <AmiBlitz3.ab2@16660>   CMP.w #3,mode
0003B284 <AmiBlitz3.ab2@16661>   BEQ 'l30
0003B28A <AmiBlitz3.ab2@16662>    ADDQ.w #4,a2offset
0003B28E <AmiBlitz3.ab2@16663>   MOVE.w #$4878,D1
0003B292 <AmiBlitz3.ab2@16664>   BSR.w writeword
0003B294 <AmiBlitz3.ab2@16665>   MOVE.l d2,d1
0003B298 <AmiBlitz3.ab2@16666>   BSR writeword
0003B29A <AmiBlitz3.ab2@16669>   MOVE.w (A7)+,D0
0003B29C <AmiBlitz3.ab2@16670> RTS
0003B2A2 <AmiBlitz3.ab2@16673>   MOVE.l #$3f3c0007,d1
0003B2A6 <AmiBlitz3.ab2@16674>   BSR writelong
0003B2AC <AmiBlitz3.ab2@16675>   MOVE.w regnum,D1
0003B2AE <AmiBlitz3.ab2@16676>   LSL.w #8,D1
0003B2B0 <AmiBlitz3.ab2@16677>   LSL.w #1,D1
0003B2B4 <AmiBlitz3.ab2@16678>   ORI.w #$2f3c,d1
0003B2B8 <AmiBlitz3.ab2@16679>   BSR writeword
0003B2BE <AmiBlitz3.ab2@16680>    ADDQ.w #4,a2offset
0003B2C0 <AmiBlitz3.ab2@16681>   MOVE.l d2,d1
0003B2C4 <AmiBlitz3.ab2@16682>   BSR writelong
0003B2C8 <AmiBlitz3.ab2@16683>   MOVE.w #$2f3c,d1
0003B2CC <AmiBlitz3.ab2@16684>   BSR writeword
0003B2D0 <AmiBlitz3.ab2@16685>   BSR.w addoff
0003B2D6 <AmiBlitz3.ab2@16686>   MOVE.l litdata1,D1
0003B2DA <AmiBlitz3.ab2@16687>   BSR.w writelong
0003B2DC <AmiBlitz3.ab2@16688>   MOVE.w (A7)+,D0
0003B2DE <AmiBlitz3.ab2@16689> RTS
0003B2E2 <AmiBlitz3.ab2@16693>   BSR.w get1bytemain
0003B2E6 <AmiBlitz3.ab2@16694>    BSR.w JL_0_AE22
0003B2EC <AmiBlitz3.ab2@16695>   MOVE.w regnum,D1
0003B2EE <AmiBlitz3.ab2@16696>   LSL.w #8,D1
0003B2F0 <AmiBlitz3.ab2@16697>   LSL.w #1,D1
0003B2F4 <AmiBlitz3.ab2@16698>   ORI.w #$203C,D1
0003B2F8 <AmiBlitz3.ab2@16699>    BSR.w writeword
0003B2FC <AmiBlitz3.ab2@16700>    BSR.w addoff
0003B300 <AmiBlitz3.ab2@16701>   MOVE.l $8(A2),D1
0003B304 <AmiBlitz3.ab2@16702>    BSR.w writelong
0003B306 <AmiBlitz3.ab2@16703>   MOVEQ.l #$03,D2
0003B30A <AmiBlitz3.ab2@16704> BRA.w reget
0003B30C <AmiBlitz3.ab2@16707>   MOVEQ.l #$00,D3
0003B310 <AmiBlitz3.ab2@16710>   BSR.w get1bytemain
0003B314 <AmiBlitz3.ab2@16711>    BEQ.w syntaxerr
0003B318 <AmiBlitz3.ab2@16712>   CMP.w #$22,D0
0003B31C <AmiBlitz3.ab2@16713>    BEQ.w JL_0_AF1A
0003B31E <AmiBlitz3.ab2@16714>   LSL.l #8,D3
0003B320 <AmiBlitz3.ab2@16715>   MOVE.b D0,D3
0003B324 <AmiBlitz3.ab2@16716> BRA.w JL_0_AF02
0003B328 <AmiBlitz3.ab2@16719>   BSR.w get1bytemain
0003B32C <AmiBlitz3.ab2@16720> BRA.w JL_0_B46E
0003B32E <AmiBlitz3.ab2@16723>   MOVE.w D2,-(A7)                                          ;basicvarsforasm
0003B332 <AmiBlitz3.ab2@16724>    BSR.w makename2
0003B336 <AmiBlitz3.ab2@16725>    BSR.w findlabel2
0003B33A <AmiBlitz3.ab2@16726>    BEQ.w 'l10
0003B340 <AmiBlitz3.ab2@16727>    LEA ptr_parameterstore,a0
0003B346 <AmiBlitz3.ab2@16728>    CMP.b #"@",-1(a0,d2.w)
0003B34A <AmiBlitz3.ab2@16729>    BNE cnferr
0003B34E <AmiBlitz3.ab2@16730>    CLR.b -1(a0,d2.w)
0003B350 <AmiBlitz3.ab2@16731>    SUBQ.l #1,d2
0003B356 <AmiBlitz3.ab2@16732>    LEA varbase,a2
0003B35A <AmiBlitz3.ab2@16733>    BSR findvariable
0003B35E <AmiBlitz3.ab2@16734>    BNE cnferr
0003B362 <AmiBlitz3.ab2@16735>    CMP.b #"\",d0
0003B366 <AmiBlitz3.ab2@16736>    BNE 'l6
0003B36C <AmiBlitz3.ab2@16737>    ADDQ #1,lastsourcepos
0003B370 <AmiBlitz3.ab2@16738>    MOVE.l $a(a2),a2
0003B372 <AmiBlitz3.ab2@16739>    ADDQ.l #4,a2
0003B376 <AmiBlitz3.ab2@16740>    BSR.w makename2
0003B37A <AmiBlitz3.ab2@16741>    BSR findvariable2
0003B37E <AmiBlitz3.ab2@16742>    BNE cnferr
0003B382 <AmiBlitz3.ab2@16743> BRA.s 'l6                                                  ;???
0003B386 <AmiBlitz3.ab2@16746>    MOVE.w $4(a2),d3
0003B388 <AmiBlitz3.ab2@16747>    EXT.l d3
0003B38C <AmiBlitz3.ab2@16748> BRA JL_0_AF46
0003B390 <AmiBlitz3.ab2@16751>   MOVE.l $8(A2),D3
0003B398 <AmiBlitz3.ab2@16752>   CMPI.l #$1,$4(A2)
0003B39C <AmiBlitz3.ab2@16753>    BEQ.w JL_0_AF46
0003B3A2 <AmiBlitz3.ab2@16754>   NOT.w asmtype
0003B3A4 <AmiBlitz3.ab2@16757>   MOVE.w (A7)+,D2
0003B3A8 <AmiBlitz3.ab2@16758> BRA.w JL_0_B46E
0003B3AA <AmiBlitz3.ab2@16762>   MOVE.w D2,-(A7)
0003B3AE <AmiBlitz3.ab2@16763>    BSR.w getparameter
0003B3B2 <AmiBlitz3.ab2@16764>   CMP.w #$7B,D0
0003B3B6 <AmiBlitz3.ab2@16765>    BEQ.w JL_0_AFDE
0003B3BA <AmiBlitz3.ab2@16766>    BSR.w JL_0_8E3C
0003B3BE <AmiBlitz3.ab2@16768>    BSR.w calcvar                                         ;getvaroffset+type
0003B3C2 <AmiBlitz3.ab2@16769>    BSR.w JL_0_B150
0003B3C8 <AmiBlitz3.ab2@16781>    TST.b typecheck
0003B3CC <AmiBlitz3.ab2@16782>    BEQ JL_0_AF66
0003B3D6 <AmiBlitz3.ab2@16785>    CMP.l #$da01,lasttoken                                  ;poke
0003B3DA <AmiBlitz3.ab2@16786>    BEQ 'l1
0003B3E4 <AmiBlitz3.ab2@16787>    CMP.l #$da02,lasttoken                                  ;peek
0003B3E8 <AmiBlitz3.ab2@16788>    BNE 'l2
0003B3F0 <AmiBlitz3.ab2@16791>    CMP.w #1,parnum
0003B3F4 <AmiBlitz3.ab2@16792>    BNE JL_0_AF66
0003B3FA <AmiBlitz3.ab2@16793>    MOVE.b d2,peekaddrsize
0003B3FE <AmiBlitz3.ab2@16794> BRA JL_0_AF66
0003B404 <AmiBlitz3.ab2@16797>   CLR.b peekaddrsize
0003B408 <AmiBlitz3.ab2@16800>   CMP.w #$1,D2
0003B40C <AmiBlitz3.ab2@16801>    BNE.w JL_0_AF7C
0003B412 <AmiBlitz3.ab2@16802>   MOVE.w regnum,D1
0003B416 <AmiBlitz3.ab2@16803>   ORI.w #$4880,D1
0003B41A <AmiBlitz3.ab2@16804>    BSR.w writeword
0003B41C <AmiBlitz3.ab2@16807>   MOVE.w (A7)+,D3
0003B420 <AmiBlitz3.ab2@16808>    BEQ.w JL_0_AF9E
0003B426 <AmiBlitz3.ab2@16809>    MOVE.l lastinstruction,a0
0003B42A <AmiBlitz3.ab2@16810>   CMP.w #$3,D3
0003B42E <AmiBlitz3.ab2@16811>    BNE.w JL_0_AF92
0003B432 <AmiBlitz3.ab2@16812>   CMP.w #$4,D2
0003B436 <AmiBlitz3.ab2@16813>    BEQ.w JL_0_AF98
0003B438 <AmiBlitz3.ab2@16816>   CMP.w D2,D3
0003B43C <AmiBlitz3.ab2@16817>    BLS.w JL_0_AF9E
0003B43E <AmiBlitz3.ab2@16820>   EXG.l D2,D3
0003B442 <AmiBlitz3.ab2@16822>   BSR.w writeconvertcode
0003B446 <AmiBlitz3.ab2@16825> BRA.w reget
0003B448 <AmiBlitz3.ab2@16828>   MOVEQ.l #$00,D3
0003B44E <AmiBlitz3.ab2@16829>   MOVE.w regnum,D1
0003B452 <AmiBlitz3.ab2@16830>    BEQ.w JL_0_AFC8
0003B454 <AmiBlitz3.ab2@16831>   SUBQ.w #1,D1
0003B456 <AmiBlitz3.ab2@16834>      LSR.l #1,D3
0003B45A <AmiBlitz3.ab2@16835>      BSET #$F,D3
0003B45E <AmiBlitz3.ab2@16836>   DBF D1,JL_0_AFB0b
0003B464 <AmiBlitz3.ab2@16838>    TST.b fpu
0003B468 <AmiBlitz3.ab2@16839>    BEQ 'l1
0003B46E <AmiBlitz3.ab2@16840>    ADDQ.l #2,stacktrack                                    ;intern command
0003B470 <AmiBlitz3.ab2@16841>     MOVE.l a0,-(a7)
0003B476 <AmiBlitz3.ab2@16842>     MOVE.l stacktrack,d1
0003B47C <AmiBlitz3.ab2@16843>     LEA fpustackbase,a0
0003B480 <AmiBlitz3.ab2@16844>     CLR.w 0(a0,d1)
0003B486 <AmiBlitz3.ab2@16845>     CLR.w regmask
0003B488 <AmiBlitz3.ab2@16846>     MOVE.l (a7)+,a0
0003B48C <AmiBlitz3.ab2@16849>   MOVE.w #$48E7,D1
0003B490 <AmiBlitz3.ab2@16850>    BSR.w writeword                                         ;write movem.l d0/d1,-(a7)
0003B492 <AmiBlitz3.ab2@16851>   MOVE.w D3,D1
0003B496 <AmiBlitz3.ab2@16852> BRA.w writeword
0003B498 <AmiBlitz3.ab2@16857>   MOVEQ.l #$00,D3
0003B49E <AmiBlitz3.ab2@16858>   MOVE.w regnum,D1
0003B4A2 <AmiBlitz3.ab2@16859>    BEQ.w JL_0_AFC8
0003B4A4 <AmiBlitz3.ab2@16860>   SUBQ.w #1,D1
0003B4A6 <AmiBlitz3.ab2@16863>     LSR.l #1,D3
0003B4AA <AmiBlitz3.ab2@16864>     BSET #$F,D3
0003B4AE <AmiBlitz3.ab2@16865>   DBF D1,JL_0_AFB0
0003B4B4 <AmiBlitz3.ab2@16867>    TST.b fpu
0003B4B8 <AmiBlitz3.ab2@16868>    BEQ 'l1
0003B4BE <AmiBlitz3.ab2@16869>    ADDQ.l #2,stacktrack                                    ;intern command
0003B4C0 <AmiBlitz3.ab2@16870>     MOVE.l a0,-(a7)
0003B4C6 <AmiBlitz3.ab2@16871>     MOVE.l stacktrack,d1
0003B4CC <AmiBlitz3.ab2@16872>     LEA fpustackbase,a0
0003B4D0 <AmiBlitz3.ab2@16873>     CLR.w 0(a0,d1)
0003B4D4 <AmiBlitz3.ab2@16874>    CMP.b #5,(a3)                                           ;result float ?
0003B4D8 <AmiBlitz3.ab2@16875>     BNE 'nofpu
0003B4E2 <AmiBlitz3.ab2@16877>     MOVE.w regnum,regnumfunc
0003B4E8 <AmiBlitz3.ab2@16880>   CLR.w regmask
0003B4EA <AmiBlitz3.ab2@16881>     MOVE.l (a7)+,a0
0003B4EE <AmiBlitz3.ab2@16884>   MOVE.w #$48E7,D1
0003B4F2 <AmiBlitz3.ab2@16885>    BSR.w writeword                                         ;write movem.l d0/d1,-(a7)
0003B4F4 <AmiBlitz3.ab2@16886>   MOVE.w D3,D1
0003B4F8 <AmiBlitz3.ab2@16887> BRA.w writeword
0003B4FA <AmiBlitz3.ab2@16890> RTS
0003B4FC <AmiBlitz3.ab2@16894>   MOVE.l D1,-(A7)
0003B500 <AmiBlitz3.ab2@16895>   MOVE.w #$4EB9,D1
0003B504 <AmiBlitz3.ab2@16896>    BSR.w writeword
0003B508 <AmiBlitz3.ab2@16897>    BSR.w addoff
0003B50A <AmiBlitz3.ab2@16898>   MOVE.l (A7)+,D1
0003B50E <AmiBlitz3.ab2@16899> BRA.w writelong
0003B512 <AmiBlitz3.ab2@16903>    BSR.w findproc                                          ;write function call
0003B516 <AmiBlitz3.ab2@16904>    BEQ 'l1
0003B51C <AmiBlitz3.ab2@16905>    TST.l unusedfunc
0003B520 <AmiBlitz3.ab2@16906>    BEQ noprocerr
0003B526 <AmiBlitz3.ab2@16908>    JSR gotoendsource
0003B528 <AmiBlitz3.ab2@16911>   MOVEQ.l #$00,D1
0003B52C <AmiBlitz3.ab2@16912>   MOVE.b $5(A2),D1
0003B532 <AmiBlitz3.ab2@16913>   MOVE.b d1,retmode
0003B536 <AmiBlitz3.ab2@16914>    BMI.w illprocerr
0003B53C <AmiBlitz3.ab2@16915>    MOVE.b #1,isfunc(a2)
0003B53E <AmiBlitz3.ab2@16916>   MOVE.w D1,-(A7)
0003B540 <AmiBlitz3.ab2@16917>   MOVEQ.l #$00,D1
0003B544 <AmiBlitz3.ab2@16918>   MOVE.b $4(A2),D1
0003B546 <AmiBlitz3.ab2@16919>   LSR.w #4,D1
0003B54A <AmiBlitz3.ab2@16920>    BEQ.w JL_0_B006
0003B54C <AmiBlitz3.ab2@16921>   LSL.w #2,D1
0003B552 <AmiBlitz3.ab2@16922>   SUB.w D1,a2offset
0003B556 <AmiBlitz3.ab2@16925>   CMPI.w #$7,(A7)
0003B55A <AmiBlitz3.ab2@16926>    BNE.b JL_0_B014
0003B55C <AmiBlitz3.ab2@16927>   MOVE.l A2,-(A7)
0003B560 <AmiBlitz3.ab2@16928>    BSR.w makesbase
0003B562 <AmiBlitz3.ab2@16929>   MOVEA.l (A7)+,A2
0003B568 <AmiBlitz3.ab2@16932>   MOVE.w sbasegot,-(A7)
0003B56C <AmiBlitz3.ab2@16933>    BEQ.b JL_0_B020
0003B570 <AmiBlitz3.ab2@16934>    BSR.w dopusha3
0003B574 <AmiBlitz3.ab2@16937>   BSR.w JL_0_AFA2func
0003B576 <AmiBlitz3.ab2@16938>   MOVE.w D3,-(A7)
0003B57A <AmiBlitz3.ab2@16939>   MOVE.l $E(A2),D1
0003B57E <AmiBlitz3.ab2@16940>   TST.b $20(a2)                                            ;increase if morepar
0003B582 <AmiBlitz3.ab2@16941>   BNE 'no0par
0003B584 <AmiBlitz3.ab2@16942>   MOVE.l a5,a4
0003B588 <AmiBlitz3.ab2@16945>   CMP.b #$20,(a4)+
0003B58C <AmiBlitz3.ab2@16946>   BEQ 'l1
0003B592 <AmiBlitz3.ab2@16947>   CMP.b #"}",-1(a4)
0003B596 <AmiBlitz3.ab2@16948>   BNE  'no0par
0003B598 <AmiBlitz3.ab2@16949>   MOVEQ #0,d0
0003B59C <AmiBlitz3.ab2@16952>   LEA $16(A2),A1
0003B59E <AmiBlitz3.ab2@16955>   MOVE.l d1,-(a7)
0003B5A0 <AmiBlitz3.ab2@16956>   MOVE.b (a1),d2
0003B5A2 <AmiBlitz3.ab2@16957>   MOVE.l d0,d1
0003B5A6 <AmiBlitz3.ab2@16958>   CMP.w #4,d2
0003B5AA <AmiBlitz3.ab2@16959>   BNE 'l1b
0003B5B0 <AmiBlitz3.ab2@16960>   ADD.l #$203c,d1
0003B5B4 <AmiBlitz3.ab2@16961>   BSR writeword
0003B5BA <AmiBlitz3.ab2@16962>   MOVE.l #$ffff0000,d1
0003B5BE <AmiBlitz3.ab2@16963>   BSR writelong
0003B5C2 <AmiBlitz3.ab2@16964> BRA 'l2b
0003B5C8 <AmiBlitz3.ab2@16967>    TST.b fpu
0003B5CC <AmiBlitz3.ab2@16968>    BNE 'l1c
0003B5D0 <AmiBlitz3.ab2@16969>    CMP.w #5,d2
0003B5D4 <AmiBlitz3.ab2@16970>    BNE 'l1c
0003B5DA <AmiBlitz3.ab2@16971>    ADD.l #$203c,d1
0003B5DE <AmiBlitz3.ab2@16972>    BSR writeword
0003B5E4 <AmiBlitz3.ab2@16973>    MOVE.l #$800000c1,d1
0003B5E8 <AmiBlitz3.ab2@16974>    BSR writelong
0003B5EC <AmiBlitz3.ab2@16975> BRA 'l2b
0003B5F2 <AmiBlitz3.ab2@16978>   ADD.l #$70ff,d1
0003B5F6 <AmiBlitz3.ab2@16979>   BSR writeword
0003B5FA <AmiBlitz3.ab2@16980>   CMP.w #7,d2
0003B5FE <AmiBlitz3.ab2@16981>   BNE 'l1d
0003B604 <AmiBlitz3.ab2@16982>   MOVE.l #$2f3c0000,d1      ; write code move.l #0,-(a7)
0003B608 <AmiBlitz3.ab2@16983>   BSR writelong
0003B60A <AmiBlitz3.ab2@16984>   MOVEQ #0,d1
0003B60E <AmiBlitz3.ab2@16985>   BSR writeword
0003B614 <AmiBlitz3.ab2@16986>   MOVE.l #$2f3c0000,d1      ; write code move.l #0,-(a7)
0003B618 <AmiBlitz3.ab2@16987>   BSR writelong
0003B61A <AmiBlitz3.ab2@16988>   MOVEQ #0,d1
0003B61E <AmiBlitz3.ab2@16989>   BSR writeword
0003B624 <AmiBlitz3.ab2@16991> 'l1d  MOVE.l #$f23c5000,d1
0003B626 <AmiBlitz3.ab2@16992>   MOVE.l d0,d2
0003B628 <AmiBlitz3.ab2@16993>   ASR.l #2,d2
0003B62A <AmiBlitz3.ab2@16994>   ADD.l d2,d1
0003B62E <AmiBlitz3.ab2@16995>   BSR writelong
0003B632 <AmiBlitz3.ab2@16996>   MOVE.w #$ffff,d1
0003B636 <AmiBlitz3.ab2@16997>   BSR writeword
0003B638 <AmiBlitz3.ab2@17001>   MOVE.l (a7)+,d1
0003B63A <AmiBlitz3.ab2@17002>      ADDQ.l #1,a1
0003B640 <AmiBlitz3.ab2@17003>      ADD.l #$0200,d0
0003B646 <AmiBlitz3.ab2@17004>      CMP.l #$0e00,d0
0003B64A <AmiBlitz3.ab2@17005>      BEQ syntaxerr
0003B64C <AmiBlitz3.ab2@17006>      TST.b (a1)
0003B650 <AmiBlitz3.ab2@17007>      BNE 'again
0003B654 <AmiBlitz3.ab2@17008> BRA 'p1
0003B658 <AmiBlitz3.ab2@17011>   TST.b $4(A2)
0003B65C <AmiBlitz3.ab2@17012>    BNE.w JL_0_B03E
0003B660 <AmiBlitz3.ab2@17015>   BSR.w JL_0_AFCA
0003B664 <AmiBlitz3.ab2@17016>    BSR.w get1bytemain
0003B668 <AmiBlitz3.ab2@17017> BRA.w JL_0_B06C
0003B66E <AmiBlitz3.ab2@17021>   MOVE.w regnum,-(A7)
0003B678 <AmiBlitz3.ab2@17022>   MOVE.w regnum,regnumfunc
0003B67A <AmiBlitz3.ab2@17025>   MOVE.l D1,-(A7)                                          ;write function call with pars
0003B682 <AmiBlitz3.ab2@17026>   MOVE.b #1,funccall
0003B684 <AmiBlitz3.ab2@17027>   MOVEQ.l #$00,D0
0003B688 <AmiBlitz3.ab2@17028>   MOVE.b $4(A2),D0
0003B68E <AmiBlitz3.ab2@17029>   MOVE.l d0,parnumtemp
0003B698 <AmiBlitz3.ab2@17030>   MOVE.w a2offset,a2offset2
0003B6A0 <AmiBlitz3.ab2@17031>   MOVE.b 5(a2),retmode
0003B6A6 <AmiBlitz3.ab2@17032>   MOVE.l a2,currentfunccall
0003B6AA <AmiBlitz3.ab2@17033>   LEA $16(A2),A2
0003B6B0 <AmiBlitz3.ab2@17034>   CLR.w regnum
0003B6B6 <AmiBlitz3.ab2@17035>   CLR.w regmask
0003B6BC <AmiBlitz3.ab2@17036>   MOVE.b funcparloop,-(a7)
0003B6C4 <AmiBlitz3.ab2@17037>   MOVE.b #1,funcparloop
0003B6CA <AmiBlitz3.ab2@17039>   JSR fetchpees2
0003B6D0 <AmiBlitz3.ab2@17040>   MOVE.b (a7)+,funcparloop
0003B6D6 <AmiBlitz3.ab2@17041>   JSR chkstak
0003B6D8 <AmiBlitz3.ab2@17042>   MOVE.l (A7)+,D1
0003B6DC <AmiBlitz3.ab2@17058>    BTST #0,d1
0003B6E0 <AmiBlitz3.ab2@17059>    BNE intern1
0003B6E4 <AmiBlitz3.ab2@17060>    BSR.w JL_0_AFCA
0003B6EA <AmiBlitz3.ab2@17082>   MOVE.w (A7)+,regnum
0003B6EE <AmiBlitz3.ab2@17085>   CMP.w #$7D,D0
0003B6F2 <AmiBlitz3.ab2@17086>    BNE.w syntaxerr
0003B6F4 <AmiBlitz3.ab2@17087>    MOVEQ #0,d1
0003B6FA <AmiBlitz3.ab2@17088>   MOVE.w regnum,D1
0003B6FE <AmiBlitz3.ab2@17089>    BEQ.w JL_0_B08A
0003B704 <AmiBlitz3.ab2@17090>    TST.b fpu
0003B708 <AmiBlitz3.ab2@17091>    BEQ 'old
0003B710 <AmiBlitz3.ab2@17092>    CMP.b #5,retmode
0003B714 <AmiBlitz3.ab2@17093>    BNE 'old
0003B716 <AmiBlitz3.ab2@17094>    ASL.l #7,d1
0003B71C <AmiBlitz3.ab2@17095>    OR.l #$f2000000,d1
0003B720 <AmiBlitz3.ab2@17096>    BSR writelong
0003B724 <AmiBlitz3.ab2@17097> BRA JL_0_B08A
0003B726 <AmiBlitz3.ab2@17099>  'old  LSL.w #8,D1
0003B728 <AmiBlitz3.ab2@17100>   LSL.w #1,D1
0003B72C <AmiBlitz3.ab2@17101>   ORI.w #$2000,D1
0003B730 <AmiBlitz3.ab2@17102>    BSR.w writeword
0003B732 <AmiBlitz3.ab2@17105>    MOVE.w (A7)+,D3
0003B736 <AmiBlitz3.ab2@17106>    BEQ.w JL_0_B0A8
0003B73C <AmiBlitz3.ab2@17107>    TST.b fpu
0003B740 <AmiBlitz3.ab2@17108>    BEQ 'old
0003B742 <AmiBlitz3.ab2@17109>    MOVE.l d0,-(a7)
0003B746 <AmiBlitz3.ab2@17110>    MOVE.w #8,d0
0003B748 <AmiBlitz3.ab2@17111>    MOVE.l a0,-(a7)
0003B74E <AmiBlitz3.ab2@17112>    MOVE.l stacktrack,d1
0003B754 <AmiBlitz3.ab2@17113>    LEA fpustackbase,a0
0003B75C <AmiBlitz3.ab2@17114>    MOVE.w 0(a0,d1),regmask
0003B75E <AmiBlitz3.ab2@17115>    MOVE.l (a7)+,a0
0003B762 <AmiBlitz3.ab2@17118>   BEQ 'ready
0003B768 <AmiBlitz3.ab2@17119>    BTST d0,regmask
0003B76C <AmiBlitz3.ab2@17120>    BEQ 'noa7
0003B76E <AmiBlitz3.ab2@17121>    MOVEQ #0,d1
0003B770 <AmiBlitz3.ab2@17122>    MOVE.w d0,d1
0003B772 <AmiBlitz3.ab2@17123>    SUBQ.w #1,d1
0003B774 <AmiBlitz3.ab2@17124>    ASL #7,d1
0003B77A <AmiBlitz3.ab2@17126>    OR.l #$f21f5400,d1                                      ;fmove.d (a7)+
0003B77E <AmiBlitz3.ab2@17127>    BSR writelong
0003B784 <AmiBlitz3.ab2@17128>    SUBQ.l #2,stacktrack
0003B786 <AmiBlitz3.ab2@17131>    SUBQ.w #1,d0
0003B78A <AmiBlitz3.ab2@17132>    BNE 'loop
0003B790 <AmiBlitz3.ab2@17135>   SUBQ.l #2,stacktrack                                     ;integer sub
0003B792 <AmiBlitz3.ab2@17136>   MOVE.l (a7)+,d0
0003B796 <AmiBlitz3.ab2@17139>   MOVE.w #$4CDF,D1
0003B79A <AmiBlitz3.ab2@17140>    BSR.w writeword
0003B79C <AmiBlitz3.ab2@17141>   MOVEQ.l #$00,D1
0003B79E <AmiBlitz3.ab2@17142>   MOVEQ.l #$0F,D4
0003B7A0 <AmiBlitz3.ab2@17145>     LSL.w #1,D3
0003B7A2 <AmiBlitz3.ab2@17146>     ROXR.w #1,D1
0003B7A6 <AmiBlitz3.ab2@17147>   DBF D4,JL_0_B09C                                         ;movem.l (a7)+,dx
0003B7AA <AmiBlitz3.ab2@17149>     BSR.w writeword
0003B7B0 <AmiBlitz3.ab2@17150>    CLR.w regnumfunc
0003B7B2 <AmiBlitz3.ab2@17153>   MOVE.w (A7)+,D1
0003B7B6 <AmiBlitz3.ab2@17154>    BEQ.b JL_0_B0D2
0003B7BA <AmiBlitz3.ab2@17155>   CMPI.w #$7,(A7)
0003B7BE <AmiBlitz3.ab2@17156>    BEQ.b JL_0_B0C4
0003B7C4 <AmiBlitz3.ab2@17157>   LEA geta3,A0
0003B7CA <AmiBlitz3.ab2@17158>   LEA numtoa0,A1
0003B7CE <AmiBlitz3.ab2@17159>    BSR.w pokecode
0003B7D2 <AmiBlitz3.ab2@17160> BRA.b JL_0_B0CE
0003B7D8 <AmiBlitz3.ab2@17163>   MOVE.w deca3,D1
0003B7DC <AmiBlitz3.ab2@17164>    BSR.w writeword
0003B7E0 <AmiBlitz3.ab2@17167>   BSR.w dopulla3                                           ;fix up string base
0003B7E2 <AmiBlitz3.ab2@17170>   MOVE.w (A7)+,D2                                          ;what it returns!
0003B7E6 <AmiBlitz3.ab2@17171>   CMP.w #$7,D2
0003B7EA <AmiBlitz3.ab2@17172>    BNE.w JL_0_B0EC
0003B7F0 <AmiBlitz3.ab2@17173>   MOVE.w putstlen,D1
0003B7F6 <AmiBlitz3.ab2@17174>   OR.w regnum,D1
0003B7FA <AmiBlitz3.ab2@17175>    BSR.w writeword
0003B7FE <AmiBlitz3.ab2@17178>   BSR.w get1bytemain
0003B802 <AmiBlitz3.ab2@17179> BRA.w JL_0_AF66
0003B804 <AmiBlitz3.ab2@17183> deca3:   Dc.b $53,$4B                                      ;SUBQ.W  #1,A3
0003B80C <AmiBlitz3.ab2@17188>   CMP.b #2,optistring
0003B810 <AmiBlitz3.ab2@17189>   BEQ fs2
0003B814 <AmiBlitz3.ab2@17190>   BSR.w makesbase                                          ;writestringvariable
0003B818 <AmiBlitz3.ab2@17191>   BTST #$F,D2
0003B81C <AmiBlitz3.ab2@17192>    BNE.w JL_0_B112
0003B822 <AmiBlitz3.ab2@17193>   MOVE.w D3,leaa5d3a2+2
0003B828 <AmiBlitz3.ab2@17194>   MOVE.l leaa5d3a2,D1
0003B82C <AmiBlitz3.ab2@17195>    BSR.w pokela5s
0003B832 <AmiBlitz3.ab2@17198>   MOVE.w regnum,D1
0003B834 <AmiBlitz3.ab2@17199>   LSL.w #8,D1
0003B836 <AmiBlitz3.ab2@17200>   LSL.w #1,D1
0003B83A <AmiBlitz3.ab2@17201>   ORI.w #$7000,D1
0003B840 <AmiBlitz3.ab2@17202>   LEA stvarget2,A0
0003B842 <AmiBlitz3.ab2@17203>   MOVE.w D1,(A0)
0003B848 <AmiBlitz3.ab2@17204>   MOVE.w regnum,D1
0003B84E <AmiBlitz3.ab2@17205>   ANDI.w #$FFF8,$2(A0)
0003B852 <AmiBlitz3.ab2@17206>   OR.w D1,$2(A0)
0003B858 <AmiBlitz3.ab2@17207>   LEA stvarget2f,A1
0003B85C <AmiBlitz3.ab2@17208>    BSR.w pokecode
0003B860 <AmiBlitz3.ab2@17209>   MOVE.w #$C600,D1
0003B864 <AmiBlitz3.ab2@17210>    BSR.w Atokejsr
0003B866 <AmiBlitz3.ab2@17211>   MOVEQ.l #$07,D2
0003B86A <AmiBlitz3.ab2@17212> BRA.w reget
0003B870 <AmiBlitz3.ab2@17215>      TST.w stackpar
0003B874 <AmiBlitz3.ab2@17216>      BMI 'l10
0003B87A <AmiBlitz3.ab2@17217>      MOVE.l #$3f3c0007,d1
0003B880 <AmiBlitz3.ab2@17218>      ADDQ.w #2,a2offset
0003B884 <AmiBlitz3.ab2@17219>      BSR writelong
0003B888 <AmiBlitz3.ab2@17222>   MOVE.w #$4878,d1
0003B88E <AmiBlitz3.ab2@17223>      CLR.w stackpar
0003B892 <AmiBlitz3.ab2@17224>      BSR writeword
0003B896 <AmiBlitz3.ab2@17225>      MOVE.w #$0,d1
0003B89A <AmiBlitz3.ab2@17226>      BSR writeword
0003B89E <AmiBlitz3.ab2@17227>      MOVE.w #$246d,d1
0003B8A2 <AmiBlitz3.ab2@17228>      BSR writeword
0003B8A4 <AmiBlitz3.ab2@17229>      MOVE.w d3,d1
0003B8A8 <AmiBlitz3.ab2@17230>      BSR writeword
0003B8AE <AmiBlitz3.ab2@17231>      MOVE.l #$4a926704,d1
0003B8B2 <AmiBlitz3.ab2@17232>      BSR writelong
0003B8B8 <AmiBlitz3.ab2@17233>      MOVE.l #$2eaafffc,d1
0003B8BC <AmiBlitz3.ab2@17234>      BSR writelong
0003B8C0 <AmiBlitz3.ab2@17235>      MOVE.w #$2f0a,d1
0003B8C6 <AmiBlitz3.ab2@17236>      ADDQ.w #8,a2offset
0003B8CA <AmiBlitz3.ab2@17237>      BSR writeword
0003B8CE <AmiBlitz3.ab2@17238> BRA.w reget
0003B8D2 <AmiBlitz3.ab2@17241>   CMP.b #$7,D2                                             ;load basic var
0003B8D6 <AmiBlitz3.ab2@17242>    BEQ.w JL_0_B0F6
0003B8DC <AmiBlitz3.ab2@17244>    TST.b iee
0003B8E0 <AmiBlitz3.ab2@17245>    BEQ 'noiee
0003B8E4 <AmiBlitz3.ab2@17246>    CMP.b #5,d2
0003B8E8 <AmiBlitz3.ab2@17247>    BNE 'noiee
0003B8EA <AmiBlitz3.ab2@17248>    MOVE.l d0,-(a7)                                         ;fpu load var
0003B8EE <AmiBlitz3.ab2@17249>    BTST #15,d2
0003B8F2 <AmiBlitz3.ab2@17250>    BEQ 'var
0003B8F8 <AmiBlitz3.ab2@17251>    CMP.l #$7fff,d3
0003B8FC <AmiBlitz3.ab2@17252>    BGT 'longoffset
0003B902 <AmiBlitz3.ab2@17253>    MOVE.l #$f22a4400,d1                                    ;newtype     >32kb
0003B904 <AmiBlitz3.ab2@17254>    TST.w d3                                                ;offset =0
0003B908 <AmiBlitz3.ab2@17255>    BNE 'offset
0003B90E <AmiBlitz3.ab2@17258>   MOVE.l #$f2124400,d1
0003B910 <AmiBlitz3.ab2@17259>    MOVEQ #0,d3
0003B914 <AmiBlitz3.ab2@17260> BRA 'glob
0003B91A <AmiBlitz3.ab2@17263>   SUBQ.l #4,destpointer
0003B91E <AmiBlitz3.ab2@17264> BRA 'glob
0003B924 <AmiBlitz3.ab2@17267>   TST.b fast
0003B928 <AmiBlitz3.ab2@17268>    BEQ 'nofastload
0003B92E <AmiBlitz3.ab2@17269>    TST.w regnum
0003B932 <AmiBlitz3.ab2@17270>    BNE 'nofastload
0003B938 <AmiBlitz3.ab2@17271>    CMP.l fp0addr,a4
0003B93C <AmiBlitz3.ab2@17272>    BNE 'nofastload
0003B942 <AmiBlitz3.ab2@17273>    MOVE.l fp0iff,d1
0003B948 <AmiBlitz3.ab2@17274>    CMP.l firstiff,d1
0003B94C <AmiBlitz3.ab2@17275>    BNE 'nofastload
0003B952 <AmiBlitz3.ab2@17276>    MOVE.w varmode,d1
0003B958 <AmiBlitz3.ab2@17277>    CMP.w fp0mode,d1
0003B95C <AmiBlitz3.ab2@17278>    BNE 'nofastload
0003B962 <AmiBlitz3.ab2@17279>    CMP.w fp0var,d3
0003B966 <AmiBlitz3.ab2@17280>    BNE 'nofastload
0003B96A <AmiBlitz3.ab2@17281>    BCLR #16,d2
0003B96C <AmiBlitz3.ab2@17282>    MOVE.l (a7)+,d0
0003B96E <AmiBlitz3.ab2@17283> RTS
0003B970 <AmiBlitz3.ab2@17286>    MOVEQ #0,d0
0003B976 <AmiBlitz3.ab2@17287>    MOVE.w regnum,d0
0003B97C <AmiBlitz3.ab2@17288>    CMP.l maxregs,d0
0003B980 <AmiBlitz3.ab2@17289>    BLE 'ok
0003B986 <AmiBlitz3.ab2@17290>    LEA cmplxerr,a0
0003B988 <AmiBlitz3.ab2@17291>   MOVE.l a0,-(a7)
0003B98E <AmiBlitz3.ab2@17292> JMP handle_compileerror
0003B994 <AmiBlitz3.ab2@17295>    LEA regtable,a4
0003B996 <AmiBlitz3.ab2@17296>    TST.l (a4)
0003B99A <AmiBlitz3.ab2@17297>    BEQ 'noreg
0003B99E <AmiBlitz3.ab2@17298>    CMP.w 0+4(a4),d3
0003B9A2 <AmiBlitz3.ab2@17299>    BNE 'doreg1
0003B9A8 <AmiBlitz3.ab2@17300>    MOVE.l #$f2001c00,d1
0003B9AE <AmiBlitz3.ab2@17301>    MOVE.w regnum,d0
0003B9B0 <AmiBlitz3.ab2@17302>    ASL.w #7,d0
0003B9B2 <AmiBlitz3.ab2@17303>    OR.w d0,d1
0003B9B6 <AmiBlitz3.ab2@17304>    BSR writelong
0003B9B8 <AmiBlitz3.ab2@17305>    MOVE.l (a7)+,d0
0003B9BA <AmiBlitz3.ab2@17306> RTS
0003B9BE <AmiBlitz3.ab2@17309>   CMP.w 8+4(a4),d3
0003B9C2 <AmiBlitz3.ab2@17310>    BNE 'doreg2
0003B9C8 <AmiBlitz3.ab2@17311>    MOVE.l #$f2001800,d1
0003B9CE <AmiBlitz3.ab2@17312>    MOVE.w regnum,d0
0003B9D0 <AmiBlitz3.ab2@17313>    ASL.w #7,d0
0003B9D2 <AmiBlitz3.ab2@17314>    OR.w d0,d1
0003B9D6 <AmiBlitz3.ab2@17315>    BSR writelong
0003B9D8 <AmiBlitz3.ab2@17316>    MOVE.l (a7)+,d0
0003B9DA <AmiBlitz3.ab2@17317> RTS
0003B9DE <AmiBlitz3.ab2@17320>   CMP.w 16+4(a4),d3
0003B9E2 <AmiBlitz3.ab2@17321>    BNE 'doreg3
0003B9E8 <AmiBlitz3.ab2@17322>    MOVE.l #$f2001400,d1
0003B9EE <AmiBlitz3.ab2@17323>    MOVE.w regnum,d0
0003B9F0 <AmiBlitz3.ab2@17324>    ASL.w #7,d0
0003B9F2 <AmiBlitz3.ab2@17325>    OR.w d0,d1
0003B9F6 <AmiBlitz3.ab2@17326>    BSR  writelong
0003B9F8 <AmiBlitz3.ab2@17327>    MOVE.l (a7)+,d0
0003B9FA <AmiBlitz3.ab2@17328> RTS
0003B9FE <AmiBlitz3.ab2@17331>   CMP.w 24+4(a4),d3
0003BA02 <AmiBlitz3.ab2@17332>    BNE 'doreg4
0003BA08 <AmiBlitz3.ab2@17333>    MOVE.l #$f2001000,d1
0003BA0E <AmiBlitz3.ab2@17334>    MOVE.w regnum,d0
0003BA10 <AmiBlitz3.ab2@17335>    ASL.w #7,d0
0003BA12 <AmiBlitz3.ab2@17336>    OR.w d0,d1
0003BA16 <AmiBlitz3.ab2@17337>    BSR writelong
0003BA18 <AmiBlitz3.ab2@17338>    MOVE.l (a7)+,d0
0003BA1A <AmiBlitz3.ab2@17339> RTS
0003BA1E <AmiBlitz3.ab2@17342>    CMP.w 32+4(a4),d3
0003BA22 <AmiBlitz3.ab2@17343>    BNE 'noreg
0003BA28 <AmiBlitz3.ab2@17344>    MOVE.l #$f2000c00,d1
0003BA2E <AmiBlitz3.ab2@17345>    MOVE.w regnum,d0
0003BA30 <AmiBlitz3.ab2@17346>    ASL.w #7,d0
0003BA32 <AmiBlitz3.ab2@17347>    OR.w d0,d1
0003BA36 <AmiBlitz3.ab2@17348>    BSR writelong
0003BA38 <AmiBlitz3.ab2@17349>    MOVE.l (a7)+,d0
0003BA3A <AmiBlitz3.ab2@17350> RTS
0003BA40 <AmiBlitz3.ab2@17353>    MOVE.l #$f22d4400,d1                                    ;var
0003BA46 <AmiBlitz3.ab2@17354>    TST.w varmode
0003BA4A <AmiBlitz3.ab2@17355>   BEQ 'glob
0003BA4E <AmiBlitz3.ab2@17356>   BCLR #16,d1                                              ;local
0003BA50 <AmiBlitz3.ab2@17359>    MOVEQ #0,d0
0003BA56 <AmiBlitz3.ab2@17360>    MOVE.w regnum,d0
0003BA5A <AmiBlitz3.ab2@17361>    CMP.w #7,d0
0003BA5E <AmiBlitz3.ab2@17362>    BLE 'ok2
0003BA64 <AmiBlitz3.ab2@17363>    LEA cmplxerr,a0
0003BA66 <AmiBlitz3.ab2@17364>   MOVE.l a0,-(a7)
0003BA6C <AmiBlitz3.ab2@17365> JMP handle_compileerror
0003BA6E <AmiBlitz3.ab2@17368>      ASL.w #7,d0
0003BA70 <AmiBlitz3.ab2@17369>    OR.l d0,d1
0003BA78 <AmiBlitz3.ab2@17370>    CMP.l #doublecheck,8(a2)
0003BA7C <AmiBlitz3.ab2@17371>    BNE 'dbl
0003BA82 <AmiBlitz3.ab2@17372>    OR.l #$00001000,d1
0003BA86 <AmiBlitz3.ab2@17375>   BSR writelong
0003BA88 <AmiBlitz3.ab2@17376>    MOVE.l (a7)+,d0
0003BA8C <AmiBlitz3.ab2@17377>    AND.w #$ff,d2
0003BA8E <AmiBlitz3.ab2@17378>    MOVE.w d3,d1
0003BA92 <AmiBlitz3.ab2@17379>    BEQ 'nooffs
0003BA96 <AmiBlitz3.ab2@17380> BRA writeword
0003BA98 <AmiBlitz3.ab2@17385> RTS
0003BA9E <AmiBlitz3.ab2@17388>   MOVE.w regnum,D1
0003BAA4 <AmiBlitz3.ab2@17389>   MOVE.w d1,load_var_reg
0003BAA6 <AmiBlitz3.ab2@17390>   LSL.w #8,D1
0003BAB0 <AmiBlitz3.ab2@17391>   MOVE.l destpointer,load_var_addr
0003BAB6 <AmiBlitz3.ab2@17392>   MOVE.w d2,load_var_size
0003BAB8 <AmiBlitz3.ab2@17393>   LSL.w #1,D1
0003BABC <AmiBlitz3.ab2@17394>   BTST #$E,D2
0003BAC0 <AmiBlitz3.ab2@17395>    BNE.w JL_0_B17A
0003BAC2 <AmiBlitz3.ab2@17396>   TST.b D2
0003BAC6 <AmiBlitz3.ab2@17397>    BNE.w JL_0_B17E
0003BAC8 <AmiBlitz3.ab2@17398>   MOVEQ.l #$03,D2
0003BACC <AmiBlitz3.ab2@17399>   ORI.w #$200A,D1
0003BAD0 <AmiBlitz3.ab2@17400> BRA.w writeword
0003BAD4 <AmiBlitz3.ab2@17403>   MOVE.b #$3,D2
0003BAD8 <AmiBlitz3.ab2@17406>   BTST #$F,D2
0003BADC <AmiBlitz3.ab2@17407>    BEQ.w JL_0_B19A                                         ;loadarray
0003BAE2 <AmiBlitz3.ab2@17408>    TST.b fast                                              ;lea->move xx(a2)
0003BAE6 <AmiBlitz3.ab2@17409>    BEQ 'la10
0003BAEC <AmiBlitz3.ab2@17414>    CLR.l load_var_addr
0003BAF0 <AmiBlitz3.ab2@17415> BRA 'la10
0003BAF8 <AmiBlitz3.ab2@17417>    CMP.w #$2012,movea2dn                                  ;??Looks like dead code??
0003BAFC <AmiBlitz3.ab2@17418>    BNE 'la10
0003BB02 <AmiBlitz3.ab2@17419>    TST.b optiarray
0003BB06 <AmiBlitz3.ab2@17420>    BNE 'la10
0003BB0C <AmiBlitz3.ab2@17421>    MOVE.l destpointer,a4
0003BB12 <AmiBlitz3.ab2@17422>    SUB.l loada,a4
0003BB16 <AmiBlitz3.ab2@17423>    CMP.w #4,a4
0003BB1A <AmiBlitz3.ab2@17424>    BEQ 'la100
0003BB1E <AmiBlitz3.ab2@17425>    CMP.w #2,a4
0003BB22 <AmiBlitz3.ab2@17426>    BNE 'la10
0003BB28 <AmiBlitz3.ab2@17427>    MOVE.l destpointer,a4
0003BB2C <AmiBlitz3.ab2@17428>    CMP.b #3,d2
0003BB30 <AmiBlitz3.ab2@17429>    BCS 'la110
0003BB36 <AmiBlitz3.ab2@17430>    MOVE.w #$202a,-2(a4)
0003BB3A <AmiBlitz3.ab2@17431>    OR.w d1,-2(a4)
0003BB40 <AmiBlitz3.ab2@17432>    MOVE.w arrayoffset,d1
0003BB44 <AmiBlitz3.ab2@17433>    BSR writeword
0003BB48 <AmiBlitz3.ab2@17434> BRA JL_0_B194
0003BB4C <AmiBlitz3.ab2@17437>    CMP.b #2,d2
0003BB50 <AmiBlitz3.ab2@17438>    BNE 'la120
0003BB56 <AmiBlitz3.ab2@17439>     MOVE.w #$302a,-2(a4)
0003BB5A <AmiBlitz3.ab2@17440>    OR.w d1,-2(a4)
0003BB60 <AmiBlitz3.ab2@17442>    MOVE.w arrayoffset,d1
0003BB64 <AmiBlitz3.ab2@17443>    BSR writeword
0003BB68 <AmiBlitz3.ab2@17444> BRA JL_0_B194
0003BB6C <AmiBlitz3.ab2@17447>   CMP.b #1,d2
0003BB70 <AmiBlitz3.ab2@17448>    BNE.s 'la10
0003BB76 <AmiBlitz3.ab2@17449>     MOVE.w #$102a,-2(a4)
0003BB7A <AmiBlitz3.ab2@17450>    OR.w d1,-2(a4)
0003BB80 <AmiBlitz3.ab2@17451>    MOVE.w arrayoffset,d1
0003BB84 <AmiBlitz3.ab2@17452>    BSR writeword
0003BB88 <AmiBlitz3.ab2@17453> BRA JL_0_B194
0003BB8E <AmiBlitz3.ab2@17456>   MOVE.l destpointer,a4
0003BB94 <AmiBlitz3.ab2@17457>    CMP.w #$45ea,-2(a4)
0003BB98 <AmiBlitz3.ab2@17458>    BNE 'la10
0003BB9C <AmiBlitz3.ab2@17459>    CMP.b #3,d2
0003BBA0 <AmiBlitz3.ab2@17460>    BCS 'la11
0003BBA6 <AmiBlitz3.ab2@17461>    MOVE.w #$202a,-4(a4)
0003BBAA <AmiBlitz3.ab2@17462>    OR.w d1,-4(a4)
0003BBAE <AmiBlitz3.ab2@17463> BRA JL_0_B194
0003BBB2 <AmiBlitz3.ab2@17466>    CMP.b #2,d2
0003BBB6 <AmiBlitz3.ab2@17467>    BNE 'la12
0003BBBC <AmiBlitz3.ab2@17468>     MOVE.w #$302a,-4(a4)
0003BBC0 <AmiBlitz3.ab2@17469>    OR.w d1,-4(a4)
0003BBC4 <AmiBlitz3.ab2@17470> BRA JL_0_B194
0003BBC8 <AmiBlitz3.ab2@17473>   CMP.b #1,d2
0003BBCC <AmiBlitz3.ab2@17474>    BNE.s 'la10
0003BBD2 <AmiBlitz3.ab2@17475>     MOVE.w #$102a,-4(a4)
0003BBD6 <AmiBlitz3.ab2@17476>    OR.w d1,-4(a4)
0003BBDA <AmiBlitz3.ab2@17477> BRA JL_0_B194
0003BBE0 <AmiBlitz3.ab2@17480>    OR.w movea2dn,D1
0003BBE4 <AmiBlitz3.ab2@17481>    BSR.w JL_0_B1B2
0003BBE8 <AmiBlitz3.ab2@17482>    BSR.w writeword
0003BBEC <AmiBlitz3.ab2@17485>   ANDI.w #$FF,D2
0003BBEE <AmiBlitz3.ab2@17486> RTS
0003BBF4 <AmiBlitz3.ab2@17490>    MOVE.l destpointer,a4
0003BBFC <AmiBlitz3.ab2@17491>    MOVE.l #$f22a4400,-4(a4)
0003BC02 <AmiBlitz3.ab2@17492>    MOVE.w arrayoffset,d1
0003BC06 <AmiBlitz3.ab2@17493> BRA writeword
0003BC0C <AmiBlitz3.ab2@17497>   OR.w moved3a5dn,D1                                        ;write move.l 0(a5),reg
0003BC10 <AmiBlitz3.ab2@17498>    BSR.w JL_0_B1B2
0003BC14 <AmiBlitz3.ab2@17499>    BSR.w pokewda5s
0003BC16 <AmiBlitz3.ab2@17500>   MOVE.w D3,D1
0003BC1A <AmiBlitz3.ab2@17501>    BSR.w writeword
0003BC1E <AmiBlitz3.ab2@17502> BRA.w JL_0_B194
0003BC22 <AmiBlitz3.ab2@17505>   BTST #$E,D2
0003BC26 <AmiBlitz3.ab2@17506>    BNE.w JL_0_B1CA
0003BC2A <AmiBlitz3.ab2@17507>   CMP.b #$1,D2
0003BC2E <AmiBlitz3.ab2@17508>    BEQ.w JL_0_B1CC
0003BC32 <AmiBlitz3.ab2@17509>   CMP.b #$2,D2
0003BC36 <AmiBlitz3.ab2@17510>    BEQ.w JL_0_B1D2
0003BC38 <AmiBlitz3.ab2@17513> RTS
0003BC3C <AmiBlitz3.ab2@17516>   EORI.w #$3000,D1
0003BC3E <AmiBlitz3.ab2@17517> RTS
0003BC42 <AmiBlitz3.ab2@17520>   ORI.w #$1000,D1
0003BC44 <AmiBlitz3.ab2@17521> RTS
0003BC4C <AmiBlitz3.ab2@17525>   MOVE.w #$FFFF,dfetch
0003BC50 <AmiBlitz3.ab2@17526>   BSR.w get1bytemain
0003BC54 <AmiBlitz3.ab2@17527>   CMP.w #$2D,D0
0003BC58 <AmiBlitz3.ab2@17528>    BNE.w JL_0_B206
0003BC5C <AmiBlitz3.ab2@17529>   BSR.w get1bytemain
0003BC60 <AmiBlitz3.ab2@17530>   BSR.w JL_0_B206
0003BC64 <AmiBlitz3.ab2@17531>   CMP.w #$5,D2
0003BC68 <AmiBlitz3.ab2@17532>    BCC.w JL_0_B200
0003BC6A <AmiBlitz3.ab2@17533>   NEG.l D0
0003BC6C <AmiBlitz3.ab2@17534> RTS
0003BC72 <AmiBlitz3.ab2@17537>   TST.b fpu
0003BC76 <AmiBlitz3.ab2@17538>   BEQ 'noneg
0003BC7A <AmiBlitz3.ab2@17539>   fneg.x fp0
0003BC7C <AmiBlitz3.ab2@17540> RTS
0003BC80 <AmiBlitz3.ab2@17543>   BCHG #$7,D0
0003BC82 <AmiBlitz3.ab2@17544> RTS
0003BC86 <AmiBlitz3.ab2@17547>   CMP.w #$24,D0
0003BC8A <AmiBlitz3.ab2@17548>    BEQ.w get_hexconstant
0003BC8E <AmiBlitz3.ab2@17549>   CMP.w #$25,D0
0003BC92 <AmiBlitz3.ab2@17550>    BEQ.w JL_0_A8C0
0003BC96 <AmiBlitz3.ab2@17551>   CMP.w #$2E,D0
0003BC9A <AmiBlitz3.ab2@17552>    BNE.w JL_0_B224
0003BC9C <AmiBlitz3.ab2@17555>   MOVEQ.l #$00,D3
0003BCA0 <AmiBlitz3.ab2@17556> BRA.w JL_0_B272
0003BCA2 <AmiBlitz3.ab2@17559>   MOVEQ.l #$00,D3                                          ;number
0003BCA6 <AmiBlitz3.ab2@17560>    BSR.w atoi
0003BCAA <AmiBlitz3.ab2@17561>   CMP.w #$2E,D0
0003BCAE <AmiBlitz3.ab2@17562>    BEQ.w JL_0_B268
0003BCB2 <AmiBlitz3.ab2@17563>   ORI.w #$20,D0
0003BCB6 <AmiBlitz3.ab2@17564>   CMP.w #$65,D0
0003BCBA <AmiBlitz3.ab2@17565>    BNE.w JL_0_B46E
0003BCC0 <AmiBlitz3.ab2@17566>   CMP.l #$800000,D3
0003BCC4 <AmiBlitz3.ab2@17567>    BCC.w overerr
0003BCC6 <AmiBlitz3.ab2@17568>   MOVEQ.l #-$01,D6
0003BCCA <AmiBlitz3.ab2@17569>   fmove.l d3,fp0
0003BCCC <AmiBlitz3.ab2@17570>   MOVE.l D3,D0
0003BCD2 <AmiBlitz3.ab2@17571>   MOVEA.l _mathffpbase,A6
0003BCD6 <AmiBlitz3.ab2@17572>    JSR -$24(A6)
0003BCD8 <AmiBlitz3.ab2@17573>   MOVE.l D0,D3
0003BCDC <AmiBlitz3.ab2@17574>    BSR.w JL_0_B2E6
0003BCE0 <AmiBlitz3.ab2@17575>    BSR.w reget
0003BCE4 <AmiBlitz3.ab2@17576>    BSR.w JL_0_B480
0003BCE8 <AmiBlitz3.ab2@17577> BRA.w JL_0_B3DC
0003BCEC <AmiBlitz3.ab2@17580>   CMP.b #4,d2
0003BCF0 <AmiBlitz3.ab2@17581>   BEQ 'l4
0003BCF4 <AmiBlitz3.ab2@17582>   MOVE.b #5,d2                                             ;nprint 2/0.5 bugfix
0003BCFA <AmiBlitz3.ab2@17585>    TST.b fpu
0003BCFE <AmiBlitz3.ab2@17586>    BNE 'l1
0003BD04 <AmiBlitz3.ab2@17587>    CMP.l #$800000,D3
0003BD08 <AmiBlitz3.ab2@17588>    BCC.w overerr
0003BD0C <AmiBlitz3.ab2@17589> BRA JL_0_B272
0003BD12 <AmiBlitz3.ab2@17592>   CMP.l #$7fffffff,d3
0003BD16 <AmiBlitz3.ab2@17593>     BCC.w overerr
0003BD18 <AmiBlitz3.ab2@17596>   MOVEQ.l #-$01,D6
0003BD1A <AmiBlitz3.ab2@17597>   MOVE.l D3,D0
0003BD1E <AmiBlitz3.ab2@17598>   fmove.l d3,fp0
0003BD24 <AmiBlitz3.ab2@17599>   MOVEA.l _mathffpbase,A6
0003BD28 <AmiBlitz3.ab2@17600>    JSR -$24(A6)                                            ;integer to ffp
0003BD2A <AmiBlitz3.ab2@17601>   MOVE.l D0,-(A7)
0003BD2E <AmiBlitz3.ab2@17602>    BSR.w get1bytemain
0003BD32 <AmiBlitz3.ab2@17603>    BSR.w tstnum
0003BD36 <AmiBlitz3.ab2@17604>    BNE.w syntaxerr
0003BD38 <AmiBlitz3.ab2@17605>   MOVEQ.l #$00,D3
0003BD3C <AmiBlitz3.ab2@17606>    BSR.w atoi
0003BD3E <AmiBlitz3.ab2@17607>   TST.l D3
0003BD42 <AmiBlitz3.ab2@17608>    BEQ.w JL_0_B2E0
0003BD48 <AmiBlitz3.ab2@17609>   TST.b fpu
0003BD4C <AmiBlitz3.ab2@17610>   BNE 'l1
0003BD52 <AmiBlitz3.ab2@17611>   CMP.l #$800000,D3
0003BD56 <AmiBlitz3.ab2@17612>    BCC.w overerr
0003BD5A <AmiBlitz3.ab2@17613> BRA 'l2
0003BD60 <AmiBlitz3.ab2@17616>   CMP.l #$7fffffff,d3
0003BD64 <AmiBlitz3.ab2@17617>   BCC overerr
0003BD68 <AmiBlitz3.ab2@17620>   fmove.l d5,fp1
0003BD6A <AmiBlitz3.ab2@17621>   MOVE.l D5,D0
0003BD6E <AmiBlitz3.ab2@17622>    JSR -$24(A6)
0003BD70 <AmiBlitz3.ab2@17623>   MOVE.l D0,D5
0003BD74 <AmiBlitz3.ab2@17624>   fmove.l d3,fp2
0003BD76 <AmiBlitz3.ab2@17625>   MOVE.l D3,D0
0003BD7A <AmiBlitz3.ab2@17626>    JSR -$24(A6)
0003BD7E <AmiBlitz3.ab2@17627>   fdiv.x fp1,fp2
0003BD80 <AmiBlitz3.ab2@17628>   MOVE.l D5,D1
0003BD84 <AmiBlitz3.ab2@17629>    JSR -$54(A6)
0003BD88 <AmiBlitz3.ab2@17630>   fadd.x fp2,fp0
0003BD8A <AmiBlitz3.ab2@17631>   MOVE.l (A7)+,D1
0003BD8E <AmiBlitz3.ab2@17632>    JSR -$42(A6)
0003BD90 <AmiBlitz3.ab2@17633>   MOVE.l D0,D3
0003BD94 <AmiBlitz3.ab2@17634>    BSR.w reget
0003BD98 <AmiBlitz3.ab2@17635>   ORI.w #$20,D0
0003BD9C <AmiBlitz3.ab2@17636>   CMP.w #$65,D0
0003BDA0 <AmiBlitz3.ab2@17637>    BNE.w JL_0_B2D4
0003BDA4 <AmiBlitz3.ab2@17638>    BSR.w JL_0_B2E6
0003BDA8 <AmiBlitz3.ab2@17641>    BSR.w reget
0003BDAC <AmiBlitz3.ab2@17642>    BSR.w JL_0_B480
0003BDB0 <AmiBlitz3.ab2@17643> BRA.w JL_0_B3DC
0003BDB2 <AmiBlitz3.ab2@17646>   MOVE.l (A7)+,D3
0003BDB6 <AmiBlitz3.ab2@17647> BRA.w JL_0_B2D4
0003BDBA <AmiBlitz3.ab2@17650>   BSR.w get1bytemain
0003BDBE <AmiBlitz3.ab2@17651>   CMP.w #$2B,D0
0003BDC2 <AmiBlitz3.ab2@17652>    BEQ.w JL_0_B30E
0003BDC6 <AmiBlitz3.ab2@17653>   CMP.w #$2D,D0
0003BDCA <AmiBlitz3.ab2@17654>    BNE.w JL_0_B312
0003BDCE <AmiBlitz3.ab2@17655>    BSR.w get1bytemain
0003BDD2 <AmiBlitz3.ab2@17656>    BSR.w getsign
0003BDD4 <AmiBlitz3.ab2@17657>   MOVE.l D3,D0
0003BDD8 <AmiBlitz3.ab2@17658>   fdiv.x fp1,fp0
0003BDDA <AmiBlitz3.ab2@17659>   MOVE.l D4,D1
0003BDDE <AmiBlitz3.ab2@17660>    JSR -$54(A6)
0003BDE0 <AmiBlitz3.ab2@17661>   MOVE.l D0,D3
0003BDE2 <AmiBlitz3.ab2@17662> RTS
0003BDE6 <AmiBlitz3.ab2@17665>   BSR.w get1bytemain
0003BDEA <AmiBlitz3.ab2@17668>   BSR.w getsign
0003BDEE <AmiBlitz3.ab2@17669>   fmul.x fp1,fp0
0003BDF0 <AmiBlitz3.ab2@17670>   MOVE.l D3,D0
0003BDF2 <AmiBlitz3.ab2@17671>   MOVE.l D4,D1
0003BDF6 <AmiBlitz3.ab2@17672>    JSR -$4E(A6)
0003BDF8 <AmiBlitz3.ab2@17673>   MOVE.l D0,D3
0003BDFA <AmiBlitz3.ab2@17674> RTS
0003BDFE <AmiBlitz3.ab2@17677>   BSR.w tstnum
0003BE02 <AmiBlitz3.ab2@17678>    BNE.w syntaxerr
0003BE04 <AmiBlitz3.ab2@17679>   MOVE.w D0,D4
0003BE08 <AmiBlitz3.ab2@17680>   SUBI.w #$30,D4
0003BE0C <AmiBlitz3.ab2@17681>    BSR.w get1bytemain
0003BE10 <AmiBlitz3.ab2@17682>    BSR.w tstnum
0003BE14 <AmiBlitz3.ab2@17683>    BNE.w getsign__skip
0003BE18 <AmiBlitz3.ab2@17684>   MULU #$A,D4
0003BE1C <AmiBlitz3.ab2@17685>   SUBI.w #$30,D0
0003BE1E <AmiBlitz3.ab2@17686>   ADD.w D0,D4
0003BE22 <AmiBlitz3.ab2@17687>    BSR.w get1bytemain
0003BE26 <AmiBlitz3.ab2@17690>   CMP.w #$12,D4
0003BE2A <AmiBlitz3.ab2@17691>    BHI.w overerr
0003BE2C <AmiBlitz3.ab2@17692>   LSL.w #3,D4
0003BE32 <AmiBlitz3.ab2@17693>   LEA fputab,a0
0003BE34 <AmiBlitz3.ab2@17694>   ADD.l d4,a0
0003BE3A <AmiBlitz3.ab2@17695>   fmove.d 0(a0),fp1
0003BE3C <AmiBlitz3.ab2@17696>   LSR.w #1,d4
0003BE40 <AmiBlitz3.ab2@17697>   MOVE.l facts(PC,D4.W),D4
0003BE42 <AmiBlitz3.ab2@17698> RTS
0003BE8A <AmiBlitz3.ab2@17702>   Dc.d 1,10,100,1000,10000,100000,1000000,10000000,100000000  ;,1000000000,10000000000
0003BE8E <AmiBlitz3.ab2@17707>   Dc.l $80000041
0003BE92 <AmiBlitz3.ab2@17708>   Dc.l $A0000044
0003BE96 <AmiBlitz3.ab2@17709>   Dc.l $C8000047
0003BE9A <AmiBlitz3.ab2@17710>   Dc.l $FA00004A
0003BE9E <AmiBlitz3.ab2@17711>   Dc.l $9C40004E
0003BEA2 <AmiBlitz3.ab2@17712>   Dc.l $C3500051
0003BEA6 <AmiBlitz3.ab2@17713>   Dc.l $F4240054
0003BEAA <AmiBlitz3.ab2@17714>   Dc.l $98968058
0003BEAE <AmiBlitz3.ab2@17715>   Dc.l $BEBC205B
0003BEB2 <AmiBlitz3.ab2@17716>   Dc.l $EE6B285E
0003BEB6 <AmiBlitz3.ab2@17717>   Dc.l $9502F962
0003BEBA <AmiBlitz3.ab2@17718>   Dc.l $BA43B765
0003BEBE <AmiBlitz3.ab2@17719>   Dc.l $E8D4A568
0003BEC2 <AmiBlitz3.ab2@17720>   Dc.l $9184E76C
0003BEC6 <AmiBlitz3.ab2@17721>   Dc.l $B5E6A96F
0003BECA <AmiBlitz3.ab2@17722>   Dc.l $E35F2972
0003BECE <AmiBlitz3.ab2@17723>   Dc.l $8E1BCA76
0003BED2 <AmiBlitz3.ab2@17724>   Dc.l $B1A2BD79
0003BED6 <AmiBlitz3.ab2@17725>   Dc.l $DE0B6C7C
0003BED8 <AmiBlitz3.ab2@17729>   MOVEQ.l #$01,D5
0003BEDA <AmiBlitz3.ab2@17732>   LSL.l #1,D5
0003BEDC <AmiBlitz3.ab2@17733>   MOVE.l D5,D1
0003BEDE <AmiBlitz3.ab2@17734>   LSL.l #2,D5
0003BEE0 <AmiBlitz3.ab2@17735>   ADD.l D1,D5                                              ;divisor for frac convert!
0003BEE2 <AmiBlitz3.ab2@17736>   LSL.l #1,D3
0003BEE6 <AmiBlitz3.ab2@17737>    BCS.w overerr
0003BEE8 <AmiBlitz3.ab2@17738>   MOVE.l D3,D1
0003BEEA <AmiBlitz3.ab2@17739>   LSL.l #1,D3
0003BEEE <AmiBlitz3.ab2@17740>    BCS.w overerr
0003BEF0 <AmiBlitz3.ab2@17741>   LSL.l #1,D3
0003BEF4 <AmiBlitz3.ab2@17742>    BCS.w overerr
0003BEF6 <AmiBlitz3.ab2@17743>   ADD.l D1,D3
0003BEFA <AmiBlitz3.ab2@17744>   SUBI.w #$30,D0
0003BEFC <AmiBlitz3.ab2@17745>   ADD.l D0,D3
0003BF28 <AmiBlitz3.ab2@17746>    !fget                                                   ;bsr.w get1bytemain
0003BF2C <AmiBlitz3.ab2@17747>    CMP.b #1,d0
0003BF30 <AmiBlitz3.ab2@17748>    BNE 'cm1
0003BF32 <AmiBlitz3.ab2@17749>    SUBQ.l #1,a5
0003BF36 <AmiBlitz3.ab2@17750>    BSR get1bytemain                                        ;??wy not !fget
0003BF3A <AmiBlitz3.ab2@17753>   CMP.b #$7e,d0
0003BF3E <AmiBlitz3.ab2@17754>    BNE 'cm2
0003BF40 <AmiBlitz3.ab2@17755>    SUBQ.l #1,a5
0003BF44 <AmiBlitz3.ab2@17756>    BSR get1bytemain
0003BF46 <AmiBlitz3.ab2@17759>   TST.b d0
0003BF4A <AmiBlitz3.ab2@17760>    BPL 'l10
0003BF4C <AmiBlitz3.ab2@17761>    LSL.w #8,d0
0003BF4E <AmiBlitz3.ab2@17762>    MOVE.b (a5)+,d0
0003BF54 <AmiBlitz3.ab2@17763>    MOVE.w d0,lastchar
0003BF66 <AmiBlitz3.ab2@17766>   !compare2                                                ;bsr.w tstnum ;cmake bug
0003BF6A <AmiBlitz3.ab2@17767>    BEQ.w atoi__loop
0003BF6C <AmiBlitz3.ab2@17768> RTS
0003BF6E <AmiBlitz3.ab2@17771> dfetch:  Ds.w 1                                            ;fetching data?
0003BF72 <AmiBlitz3.ab2@17775>   MOVE.w dfetch(PC),D1
0003BF76 <AmiBlitz3.ab2@17776>    BEQ.w JL_0_B3EC
0003BF7C <AmiBlitz3.ab2@17777>   CLR.w dfetch
0003BF7E <AmiBlitz3.ab2@17778> RTS
0003BF84 <AmiBlitz3.ab2@17781>   MOVE.w d2,imm_size
0003BF8E <AmiBlitz3.ab2@17782>   MOVE.w regnum,imm_reg
0003BF98 <AmiBlitz3.ab2@17783>   MOVE.l destpointer,imm_addr
0003BF9C <AmiBlitz3.ab2@17784>    CMP.w #$1,D2
0003BFA0 <AmiBlitz3.ab2@17785>    BEQ.w JL_0_B418
0003BFA4 <AmiBlitz3.ab2@17786>   CMP.w #$2,D2
0003BFA8 <AmiBlitz3.ab2@17787>    BEQ.w JL_0_B418
0003BFAC <AmiBlitz3.ab2@17788>   CMP.w #$3,D2
0003BFB0 <AmiBlitz3.ab2@17789>    BEQ.w JL_0_B434
0003BFB4 <AmiBlitz3.ab2@17790>   CMP.w #$4,D2
0003BFB8 <AmiBlitz3.ab2@17791>    BEQ.w JL_0_B434
0003BFBC <AmiBlitz3.ab2@17792>   CMP.w #$5,D2
0003BFC0 <AmiBlitz3.ab2@17793>    BEQ.w JL_0_B434
0003BFC4 <AmiBlitz3.ab2@17794> BRA.w mismatcherr
0003BFCA <AmiBlitz3.ab2@17797>   MOVE.w regnum,D1
0003BFCC <AmiBlitz3.ab2@17798>   LSL.w #8,D1
0003BFCE <AmiBlitz3.ab2@17799>   LSL.w #1,D1
0003BFD2 <AmiBlitz3.ab2@17800>   ORI.w #$303C,D1
0003BFD6 <AmiBlitz3.ab2@17801>    BSR.w writeword
0003BFD8 <AmiBlitz3.ab2@17802>   MOVE.w D0,D1
0003BFDC <AmiBlitz3.ab2@17803>    BSR.w writeword
0003BFE0 <AmiBlitz3.ab2@17804> BRA.w reget
0003BFE2 <AmiBlitz3.ab2@17807>   MOVEQ #0,d1
0003BFE8 <AmiBlitz3.ab2@17808>   MOVE.w regnum,D1
0003BFEE <AmiBlitz3.ab2@17809>   TST.b fpu
0003BFF2 <AmiBlitz3.ab2@17810>   BEQ 'f1
0003BFF6 <AmiBlitz3.ab2@17811>   CMP.w #5,d2
0003BFFA <AmiBlitz3.ab2@17812>   BEQ 'l10
0003BFFE <AmiBlitz3.ab2@17813> BRA 'f2
0003C004 <AmiBlitz3.ab2@17816>   TST.b iee
0003C008 <AmiBlitz3.ab2@17817>   BNE 'l10
0003C00A <AmiBlitz3.ab2@17820>   LSL.w #8,D1
0003C00C <AmiBlitz3.ab2@17821>   LSL.w #1,D1
0003C010 <AmiBlitz3.ab2@17822>   ORI.w #$203C,D1
0003C014 <AmiBlitz3.ab2@17823>    BSR.w writeword
0003C016 <AmiBlitz3.ab2@17824>   MOVE.l D0,D1
0003C01A <AmiBlitz3.ab2@17825>    BSR.w writelong
0003C01E <AmiBlitz3.ab2@17826> BRA.w reget
0003C020 <AmiBlitz3.ab2@17829>   MOVEQ #5,d2
0003C022 <AmiBlitz3.ab2@17830>   ASL.l #7,d1
0003C024 <AmiBlitz3.ab2@17831>   SUBQ.l #8,a7
0003C02A <AmiBlitz3.ab2@17836>       OR.l #$f23c4400,d1                                   ;fmove.s
0003C030 <AmiBlitz3.ab2@17837>        fmove.s fp0,0(a7)
0003C034 <AmiBlitz3.ab2@17839>   BSR writelong
0003C036 <AmiBlitz3.ab2@17840>   MOVE.l (a7)+,d1
0003C03A <AmiBlitz3.ab2@17841>   BSR writelong
0003C03C <AmiBlitz3.ab2@17842>   MOVE.l (a7)+,d1
0003C040 <AmiBlitz3.ab2@17846> BRA.w reget
0003C042 <AmiBlitz3.ab2@17852>  MOVE.l D3,D0
0003C044 <AmiBlitz3.ab2@17853>   TST.w D6
0003C048 <AmiBlitz3.ab2@17854>    BEQ.w JL_0_B46C
0003C04E <AmiBlitz3.ab2@17855>   MOVEA.l _mathffpbase,A6
0003C052 <AmiBlitz3.ab2@17856>    JSR -$1E(A6)
0003C056 <AmiBlitz3.ab2@17857>    BVC.w JL_0_B46C
0003C058 <AmiBlitz3.ab2@17858>   ADDQ.w #4,A7
0003C05C <AmiBlitz3.ab2@17859> BRA.w JL_0_B5A0
0003C05E <AmiBlitz3.ab2@17862> RTS
0003C060 <AmiBlitz3.ab2@17866>   MOVEQ.l #$00,D6
0003C064 <AmiBlitz3.ab2@17867>    fmove.l d3,fp0
0003C068 <AmiBlitz3.ab2@17870>   BSR.w JL_0_B480
0003C06C <AmiBlitz3.ab2@17871> BRA.w JL_0_B3DC
0003C06E <AmiBlitz3.ab2@17874>   MOVE.w D2,-(A7)
0003C072 <AmiBlitz3.ab2@17875>    BSR.w JL_0_BF6A
0003C074 <AmiBlitz3.ab2@17876>   MOVE.w (A7)+,D2
0003C076 <AmiBlitz3.ab2@17879>   TST.w D2
0003C07A <AmiBlitz3.ab2@17880>    BNE.w JL_0_B498
0003C07C <AmiBlitz3.ab2@17881>   TST.w D6
0003C080 <AmiBlitz3.ab2@17882>    BEQ.w JL_0_B492
0003C082 <AmiBlitz3.ab2@17883>   MOVEQ.l #$04,D2
0003C086 <AmiBlitz3.ab2@17884> BRA.w JL_0_B510
0003C088 <AmiBlitz3.ab2@17887>   MOVEQ.l #$02,D2
0003C08C <AmiBlitz3.ab2@17888> BRA.w JL_0_B4C4
0003C090 <AmiBlitz3.ab2@17891>   CMP.w #$1,D2
0003C094 <AmiBlitz3.ab2@17892>    BEQ.w JL_0_B4C4
0003C098 <AmiBlitz3.ab2@17893>   CMP.w #$2,D2
0003C09C <AmiBlitz3.ab2@17894>    BEQ.w JL_0_B4F8
0003C0A0 <AmiBlitz3.ab2@17895>   CMP.w #$3,D2
0003C0A4 <AmiBlitz3.ab2@17896>    BEQ.w JL_0_B57A
0003C0A8 <AmiBlitz3.ab2@17897>   CMP.w #$4,D2
0003C0AC <AmiBlitz3.ab2@17898>    BEQ.w JL_0_B506
0003C0B0 <AmiBlitz3.ab2@17899>   CMP.w #$5,D2
0003C0B4 <AmiBlitz3.ab2@17900>    BEQ.w JL_0_B586
0003C0B8 <AmiBlitz3.ab2@17901> BRA.w mismatcherr
0003C0BC <AmiBlitz3.ab2@17904>   BSR.w JL_0_B450                                          ;bugfix if a.b=$90 bug fix
0003C0C2 <AmiBlitz3.ab2@17905>   CMP.l #$7f,D0
0003C0C6 <AmiBlitz3.ab2@17906>    BGT.w JL_0_B4DC
0003C0CC <AmiBlitz3.ab2@17907>   CMP.l #$FFFFFF80,D0
0003C0D0 <AmiBlitz3.ab2@17908>    BGE.w JL_0_B59E
0003C0D2 <AmiBlitz3.ab2@17911>   MOVEQ.l #$02,D2                                          ;was 2 before
0003C0D8 <AmiBlitz3.ab2@17912>   CMP.l #$7fff,D0
0003C0DC <AmiBlitz3.ab2@17913>    BGT.w JL_0_B4F2
0003C0E2 <AmiBlitz3.ab2@17914>   CMP.l #$FFFF8000,D0
0003C0E6 <AmiBlitz3.ab2@17915>    BGE.w JL_0_B59E
0003C0E8 <AmiBlitz3.ab2@17918>   MOVEQ.l #$03,D2
0003C0EC <AmiBlitz3.ab2@17919> BRA.w JL_0_B59E
0003C0EE <AmiBlitz3.ab2@17945>   TST.w D6
0003C0F2 <AmiBlitz3.ab2@17946>    BNE.w JL_0_B510
0003C0F6 <AmiBlitz3.ab2@17947>    BSR.w JL_0_B450
0003C0FA <AmiBlitz3.ab2@17948> BRA.w JL_0_B4DC
0003C0FE <AmiBlitz3.ab2@17951>   BSR.w JL_0_B450
0003C100 <AmiBlitz3.ab2@17952>   TST.w D6
0003C104 <AmiBlitz3.ab2@17953>   BEQ.w JL_0_B560
0003C10A <AmiBlitz3.ab2@17956>   CMP.l #MaxWordSgnd,D0
0003C10E <AmiBlitz3.ab2@17957>    BGT.w JL_0_B5A0
0003C114 <AmiBlitz3.ab2@17958>   CMP.l #$FFFF8000,D0
0003C118 <AmiBlitz3.ab2@17959>    BLT.w JL_0_B5A0
0003C11A <AmiBlitz3.ab2@17960>   MOVE.w D0,-(A7)
0003C11E <AmiBlitz3.ab2@17961>    JSR -$24(A6)
0003C120 <AmiBlitz3.ab2@17962>   MOVE.l D0,D1
0003C122 <AmiBlitz3.ab2@17963>   MOVE.l D3,D0
0003C126 <AmiBlitz3.ab2@17964>    JSR -$48(A6)
0003C12C <AmiBlitz3.ab2@17965>   MOVE.l #$80000051,D1
0003C130 <AmiBlitz3.ab2@17966>    JSR -$4E(A6)
0003C134 <AmiBlitz3.ab2@17967>    JSR -$1E(A6)
0003C138 <AmiBlitz3.ab2@17968>    BEQ.w JL_0_B55A
0003C13E <AmiBlitz3.ab2@17969>   CMP.l #$10000,D0
0003C142 <AmiBlitz3.ab2@17970>    BCC.w JL_0_B55A
0003C144 <AmiBlitz3.ab2@17971>   MOVE.w D0,D1
0003C146 <AmiBlitz3.ab2@17972>   MOVE.w (A7)+,D0
0003C148 <AmiBlitz3.ab2@17973>   SWAP D0
0003C14A <AmiBlitz3.ab2@17974>   MOVE.w D1,D0
0003C14E <AmiBlitz3.ab2@17975> BRA.w JL_0_B59E
0003C150 <AmiBlitz3.ab2@17978>   ADDQ.w #2,A7
0003C154 <AmiBlitz3.ab2@17979> BRA.w JL_0_B5A0
0003C15A <AmiBlitz3.ab2@17982>   CMP.l #MaxWordSgnd,D0
0003C15E <AmiBlitz3.ab2@17983>    BGT.w JL_0_B4F2
0003C164 <AmiBlitz3.ab2@17984>   CMP.l #$FFFF8000,D0
0003C168 <AmiBlitz3.ab2@17985>    BLT.w JL_0_B4F2
0003C16A <AmiBlitz3.ab2@17986>   SWAP D0
0003C16E <AmiBlitz3.ab2@17987> BRA.w JL_0_B59E
0003C170 <AmiBlitz3.ab2@17990>   TST.w D6
0003C174 <AmiBlitz3.ab2@17991>   BNE.w JL_0_B5A0
0003C176 <AmiBlitz3.ab2@17992>   MOVE.l D3,D0
0003C17A <AmiBlitz3.ab2@17993> BRA.w JL_0_B59E
0003C17C <AmiBlitz3.ab2@17996>   TST.w D6
0003C180 <AmiBlitz3.ab2@17997>   BNE.w JL_0_B5A0
0003C182 <AmiBlitz3.ab2@17998>   MOVE.l D3,D0
0003C188 <AmiBlitz3.ab2@17999>   MOVEA.l _mathffpbase,A6
0003C18C <AmiBlitz3.ab2@18000>   JSR -$24(A6)
0003C18E <AmiBlitz3.ab2@18001>   MOVE.l D0,D3
0003C192 <AmiBlitz3.ab2@18002> BRA.w JL_0_B5A0
0003C194 <AmiBlitz3.ab2@18005> RTS
0003C196 <AmiBlitz3.ab2@18008>   MOVEQ.l #$05,D2
0003C198 <AmiBlitz3.ab2@18009>   MOVE.l D3,D0
0003C19A <AmiBlitz3.ab2@18010> RTS
0003C19E <AmiBlitz3.ab2@18014>             Ds.l 1                                         ;??Looks like unused data??
0003C1A2 <AmiBlitz3.ab2@18015> pushpc:     Ds.l 1
0003C1A6 <AmiBlitz3.ab2@18016> pushoff:    Ds.l 1
0003C1AA <AmiBlitz3.ab2@18017> pushdooff:  Ds.l 1
0003C1AC <AmiBlitz3.ab2@18018> pushclen:   Ds.w 1
0003C1B0 <AmiBlitz3.ab2@18019> pushat:     Ds.l 1
0003C1BA <AmiBlitz3.ab2@18023>   MOVE.l destpointer,pushpc
0003C1C4 <AmiBlitz3.ab2@18024>   MOVE.l hunkoffsetbase,pushoff
0003C1C6 <AmiBlitz3.ab2@18025> RTS
0003C1CA <AmiBlitz3.ab2@18029>   MOVEM.l D0-D1/A0-A1,-(A7)
0003C1D0 <AmiBlitz3.ab2@18030>   MOVE.l destpointer,D0
0003C1D4 <AmiBlitz3.ab2@18031>   MOVE.l pushpc(PC),D1
0003C1DA <AmiBlitz3.ab2@18032>   MOVE.l D1,destpointer
0003C1DC <AmiBlitz3.ab2@18033>   SUB.l D1,D0
0003C1E2 <AmiBlitz3.ab2@18034>   MOVE.w D0,pushclen
0003C1E6 <AmiBlitz3.ab2@18035>    BEQ.w JL_0_B636
0003C1EC <AmiBlitz3.ab2@18036>   MOVE.w dontwrite,D1
0003C1F0 <AmiBlitz3.ab2@18037>    BNE.w JL_0_B636
0003C1F8 <AmiBlitz3.ab2@18038>    CMP.w #1000,pushclen
0003C1FC <AmiBlitz3.ab2@18039>    BGE conmemerr
0003C202 <AmiBlitz3.ab2@18040>    MOVE.l pushat,d0
0003C206 <AmiBlitz3.ab2@18041>    BNE 'nomem
0003C20C <AmiBlitz3.ab2@18042>    MOVE.l #1024,d0
0003C20E <AmiBlitz3.ab2@18043>   MOVEQ.l #$01,D1
0003C214 <AmiBlitz3.ab2@18044>   MOVEA.l _execbase,A6
0003C21A <AmiBlitz3.ab2@18045>   MOVE.l mempool,a0
0003C21E <AmiBlitz3.ab2@18046>   JSR _AllocPooled(a6)
0003C224 <AmiBlitz3.ab2@18048>   MOVE.l D0,pushat
0003C226 <AmiBlitz3.ab2@18051>   MOVEA.l D0,A0
0003C22C <AmiBlitz3.ab2@18052>   MOVEA.l pushpc,A1
0003C232 <AmiBlitz3.ab2@18053>   MOVE.l A1,destpointer
0003C238 <AmiBlitz3.ab2@18054>   MOVE.w pushclen,D0
0003C23A <AmiBlitz3.ab2@18055>   LSR.w #1,D0
0003C23C <AmiBlitz3.ab2@18056>   SUBQ.w #1,D0
0003C23E <AmiBlitz3.ab2@18059>     MOVE.w (A1)+,(A0)+
0003C242 <AmiBlitz3.ab2@18060>   DBF D0,JL_0_B626
0003C24C <AmiBlitz3.ab2@18062>    MOVE.l hunkoffsetbase,pushdooff
0003C250 <AmiBlitz3.ab2@18065>   MOVEM.l (A7)+,D0-D1/A0-A1
0003C252 <AmiBlitz3.ab2@18066> RTS
0003C256 <AmiBlitz3.ab2@18070>   MOVEM.l D0-D1/A0-A1,-(A7)
0003C258 <AmiBlitz3.ab2@18071>   MOVEQ.l #$00,D0
0003C25E <AmiBlitz3.ab2@18072>   MOVE.w pushclen,D0
0003C262 <AmiBlitz3.ab2@18073>    BEQ.w JL_0_B6D8
0003C268 <AmiBlitz3.ab2@18074>   MOVE.l destpointer,D1
0003C26E <AmiBlitz3.ab2@18075>   ADD.l D0,destpointer
0003C274 <AmiBlitz3.ab2@18076>   TST.w dontwrite
0003C278 <AmiBlitz3.ab2@18077>    BNE.w JL_0_B6D8
0003C27A <AmiBlitz3.ab2@18078>   LSR.w #1,D0
0003C27C <AmiBlitz3.ab2@18079>   SUBQ.w #1,D0
0003C27E <AmiBlitz3.ab2@18080>   MOVEA.l D1,A1
0003C284 <AmiBlitz3.ab2@18081>   MOVEA.l pushat,A0
0003C28A <AmiBlitz3.ab2@18084>     CMPA.l destbufferend,A1
0003C28E <AmiBlitz3.ab2@18085>     BCS.w JL_0_B684
0003C296 <AmiBlitz3.ab2@18087>     MOVE.w #$FFFF,dontwrite
0003C29A <AmiBlitz3.ab2@18088>   BRA.w JL_0_B6D8
0003C29C <AmiBlitz3.ab2@18091>      MOVE.w (A0)+,(A1)+                                    ;copylibcode
0003C2A0 <AmiBlitz3.ab2@18092>   DBF D0,JL_0_B66E
0003C2A6 <AmiBlitz3.ab2@18094>   SUB.l pushpc,D1
0003C2AA <AmiBlitz3.ab2@18095>   BEQ.w JL_0_B6C2
0003C2B0 <AmiBlitz3.ab2@18096>   MOVEA.l pushdooff,A0
0003C2B6 <AmiBlitz3.ab2@18099>   CMPA.l pushoff,A0
0003C2BA <AmiBlitz3.ab2@18100>   BEQ.w JL_0_B6C2
0003C2BE <AmiBlitz3.ab2@18101>   MOVEA.l $4(A0),A1
0003C2C4 <AmiBlitz3.ab2@18102>   ADDA.l destbufferstart,A1
0003C2CA <AmiBlitz3.ab2@18103>   CMPA.l destbufferend,A1
0003C2CE <AmiBlitz3.ab2@18104>   BCC.w JL_0_B6BC
0003C2D2 <AmiBlitz3.ab2@18105>   ADD.l D1,$4(A0)
0003C2D4 <AmiBlitz3.ab2@18108>   MOVEA.l (A0),A0
0003C2D8 <AmiBlitz3.ab2@18109> BRA.w JL_0_B69A
0003C2DE <AmiBlitz3.ab2@18112>   MOVEA.l pushat,A1
0003C2E0 <AmiBlitz3.ab2@18113>   MOVEQ.l #$00,D0
0003C2E6 <AmiBlitz3.ab2@18114>   MOVE.w pushclen,D0
0003C2EC <AmiBlitz3.ab2@18115>   MOVEA.l _execbase,A6
0003C2F2 <AmiBlitz3.ab2@18116>   MOVE.l mempool,a0
0003C2F6 <AmiBlitz3.ab2@18120>   MOVEM.l (A7)+,D0-D1/A0-A1
0003C2F8 <AmiBlitz3.ab2@18121> RTS
0003C2FA <AmiBlitz3.ab2@18124>   MOVE.l D1,-(A7)                                          ;array mul
0003C2FC <AmiBlitz3.ab2@18125>   MOVEQ.l #$00,D2
0003C2FE <AmiBlitz3.ab2@18126>   MOVEQ.l #$0F,D3
0003C300 <AmiBlitz3.ab2@18129>     LSL.w #1,D1
0003C304 <AmiBlitz3.ab2@18130>     BCC.w JL_0_B6EE
0003C306 <AmiBlitz3.ab2@18131>     ADDQ.w #1,D2
0003C308 <AmiBlitz3.ab2@18132>     MOVE.w D3,D4
0003C30C <AmiBlitz3.ab2@18135>   DBF D3,JL_0_B6E4
0003C30E <AmiBlitz3.ab2@18137>   SUBQ.w #1,D2
0003C312 <AmiBlitz3.ab2@18138>    BNE.w JL_0_B726
0003C314 <AmiBlitz3.ab2@18139>   ADDQ.w #4,A7
0003C316 <AmiBlitz3.ab2@18140>   MOVE.w D4,D1
0003C31A <AmiBlitz3.ab2@18141>    BEQ.w JL_0_B724
0003C31E <AmiBlitz3.ab2@18142>   CMP.w #$8,D1
0003C322 <AmiBlitz3.ab2@18143>    BCS.w JL_0_B712
0003C326 <AmiBlitz3.ab2@18144>   SUBI.w #$8,D1
0003C32A <AmiBlitz3.ab2@18145>    BSR.w JL_0_B712
0003C32C <AmiBlitz3.ab2@18146>   MOVEQ.l #$00,D1
0003C32E <AmiBlitz3.ab2@18149>   LSL.w #8,D1
0003C330 <AmiBlitz3.ab2@18150>   LSL.w #1,D1
0003C334 <AmiBlitz3.ab2@18151>   ORI.w #$E188,D1
0003C33A <AmiBlitz3.ab2@18152>   OR.w regnum,D1
0003C33E <AmiBlitz3.ab2@18153> BRA.w writeword
0003C340 <AmiBlitz3.ab2@18156> RTS
0003C342 <AmiBlitz3.ab2@18159>   MOVEQ #0,d1
0003C348 <AmiBlitz3.ab2@18160>   MOVE.w regnum,D1
0003C34A <AmiBlitz3.ab2@18161>   LSL.l #8,D1
0003C34C <AmiBlitz3.ab2@18163>   LSL.l #4,d1
0003C352 <AmiBlitz3.ab2@18165>   OR.l #$4c3c0000,d1
0003C358 <AmiBlitz3.ab2@18166>   OR.w regnum,d1
0003C35C <AmiBlitz3.ab2@18167>   BSR.w writelong
0003C35E <AmiBlitz3.ab2@18168>   MOVE.l (A7)+,D1
0003C362 <AmiBlitz3.ab2@18170> BRA writelong
0003C368 <AmiBlitz3.ab2@18173>   MOVE.l destpointer,-(A7)
0003C36A <AmiBlitz3.ab2@18174>   MOVEQ.l #-$01,D7
0003C36E <AmiBlitz3.ab2@18177>     BSR.w findhilib
0003C372 <AmiBlitz3.ab2@18178>      BEQ.w JL_0_B8A4
0003C376 <AmiBlitz3.ab2@18179>     TST.w $C(A2)
0003C37A <AmiBlitz3.ab2@18180>      BPL.w JL_0_B746
0003C37E <AmiBlitz3.ab2@18182>     MOVE.l $16(A2),D1
0003C382 <AmiBlitz3.ab2@18183>     BEQ.w JL_0_B746
0003C386 <AmiBlitz3.ab2@18185>     MOVE.w $4(A2),D1                                       ; check state in D1 and do some things
0003C38A <AmiBlitz3.ab2@18186>     CMP.w #-$2,D1
0003C38E <AmiBlitz3.ab2@18187>      BNE.w JL_0_B772
0003C392 <AmiBlitz3.ab2@18188>     BSR.w makevsize
0003C396 <AmiBlitz3.ab2@18189> BRA.w JL_0_B7FE
0003C39A <AmiBlitz3.ab2@18192>     CMP.w #-$5C4,D1
0003C39E <AmiBlitz3.ab2@18193>      BNE.w JL_0_B790
0003C3A2 <AmiBlitz3.ab2@18194>     MOVE.w #$7000,D1
0003C3AA <AmiBlitz3.ab2@18195>     BTST #$7,autorun
0003C3AC <AmiBlitz3.ab2@18196>     SNE D1
0003C3B0 <AmiBlitz3.ab2@18197>     BSR.w writeword
0003C3B4 <AmiBlitz3.ab2@18198> BRA.w JL_0_B7FE
0003C3B8 <AmiBlitz3.ab2@18201>     CMP.w #-$12D,D1
0003C3BC <AmiBlitz3.ab2@18202>      BNE.w JL_0_B7A0
0003C3C0 <AmiBlitz3.ab2@18203>     BSR.w makessize
0003C3C4 <AmiBlitz3.ab2@18204> BRA.w JL_0_B7FE
0003C3C8 <AmiBlitz3.ab2@18207>     CMP.w #-$1F5,D1
0003C3CC <AmiBlitz3.ab2@18208>      BNE.w JL_0_B7C2
0003C3D0 <AmiBlitz3.ab2@18209>     MOVE.w #$203C,D1
0003C3D4 <AmiBlitz3.ab2@18210>     BSR.w writeword
0003C3D8 <AmiBlitz3.ab2@18211>     BSR.w addoff
0003C3DE <AmiBlitz3.ab2@18212>     MOVE.l endop,D1
0003C3E2 <AmiBlitz3.ab2@18213>     BSR.w writelong
0003C3E6 <AmiBlitz3.ab2@18214> BRA.w JL_0_B7FE
0003C3EA <AmiBlitz3.ab2@18217>     CMP.w #-$3E9,D1
0003C3EE <AmiBlitz3.ab2@18218>      BNE.w JL_0_B7E4
0003C3F2 <AmiBlitz3.ab2@18219>     MOVE.w #$203C,D1
0003C3F6 <AmiBlitz3.ab2@18220>     BSR.w writeword
0003C3FA <AmiBlitz3.ab2@18221>     BSR.w addoff
0003C400 <AmiBlitz3.ab2@18222>     MOVE.l data2at,D1
0003C404 <AmiBlitz3.ab2@18223>     BSR.w writelong
0003C408 <AmiBlitz3.ab2@18224> BRA.w JL_0_B7FE
0003C40C <AmiBlitz3.ab2@18227>     CMP.w #$1,D1
0003C410 <AmiBlitz3.ab2@18228>      BNE.w JL_0_B7FE
0003C414 <AmiBlitz3.ab2@18229>     MOVE.w #$203C,D1
0003C418 <AmiBlitz3.ab2@18230>     BSR.w writeword
0003C41E <AmiBlitz3.ab2@18231>     MOVE.l ptr_seg_debugger,D1
0003C422 <AmiBlitz3.ab2@18232>     BSR.w writelong
0003C426 <AmiBlitz3.ab2@18235>     MOVE.l $16(A2),D1
0003C42E <AmiBlitz3.ab2@18236>     MOVE.w #$FFFF,lasta6
0003C432 <AmiBlitz3.ab2@18237>     BSR.w Amakelibsub
0003C438 <AmiBlitz3.ab2@18238>     CMPI.w #$FFFE,$4(A2)
0003C43C <AmiBlitz3.ab2@18239>      BNE.w JL_0_B83A
0003C442 <AmiBlitz3.ab2@18240>     MOVE.l intdata1,D1
0003C446 <AmiBlitz3.ab2@18241>      BEQ.w JL_0_B83A
0003C44C <AmiBlitz3.ab2@18242>     MOVE.w putidata1,D1
0003C450 <AmiBlitz3.ab2@18243>     BSR.w writeword
0003C454 <AmiBlitz3.ab2@18244>     BSR.w addoff
0003C45A <AmiBlitz3.ab2@18245>     MOVE.l intdata1,D1
0003C45E <AmiBlitz3.ab2@18246>     BSR.w writelong
0003C462 <AmiBlitz3.ab2@18249>     MOVE.w #$2B40,D1
0003C466 <AmiBlitz3.ab2@18250>     TST.w $1A(A2)
0003C46A <AmiBlitz3.ab2@18251>      BEQ.w JL_0_B746
0003C46E <AmiBlitz3.ab2@18252>      BPL.w JL_0_B84E
0003C472 <AmiBlitz3.ab2@18253>     MOVE.w #$3B40,D1
0003C476 <AmiBlitz3.ab2@18256>     BSR.w writeword
0003C47A <AmiBlitz3.ab2@18257>     MOVE.w $A(A2),D1
0003C47E <AmiBlitz3.ab2@18258>      BSR.w writeword
0003C484 <AmiBlitz3.ab2@18259>     CMPI.w #$FFFA,$4(A2)
0003C488 <AmiBlitz3.ab2@18260>      BNE.w JL_0_B746
0003C48A <AmiBlitz3.ab2@18261>     MOVE.w D7,-(A7)
0003C490 <AmiBlitz3.ab2@18262>     MOVE.w numstatic,D4
0003C494 <AmiBlitz3.ab2@18263>      BEQ.w JL_0_B882
0003C49A <AmiBlitz3.ab2@18264>     MOVE.l staticdata,D3
0003C49E <AmiBlitz3.ab2@18265>      BSR.w datastart
0003C4A2 <AmiBlitz3.ab2@18266>     MOVE.w #$C500,D1
0003C4A6 <AmiBlitz3.ab2@18267>      BSR.w tokejsr2
0003C4AC <AmiBlitz3.ab2@18270>     MOVE.w maxsused,D4
0003C4B0 <AmiBlitz3.ab2@18271>      BEQ.w JL_0_B89E
0003C4B6 <AmiBlitz3.ab2@18272>     MOVE.l maxsat,D3
0003C4BA <AmiBlitz3.ab2@18273>      BSR.w datastart
0003C4BE <AmiBlitz3.ab2@18274>     MOVE.w #$CF00,D1
0003C4C2 <AmiBlitz3.ab2@18275>      BSR.w tokejsr2
0003C4C4 <AmiBlitz3.ab2@18278>     MOVE.w (A7)+,D7
0003C4C8 <AmiBlitz3.ab2@18279> BRA.w JL_0_B746
0003C4CE <AmiBlitz3.ab2@18282>   MOVE.l destpointer,D1
0003C4D0 <AmiBlitz3.ab2@18283>   CMP.l (A7),D1
0003C4D4 <AmiBlitz3.ab2@18284>    BNE.w JL_0_B8BC
0003C4DC <AmiBlitz3.ab2@18285>   MOVE.w #$0008,noinits+2
0003C4E0 <AmiBlitz3.ab2@18286> BRA.w JL_0_B8E6
0003C4E6 <AmiBlitz3.ab2@18289>   CLR.w noinits+2
0003C4EC <AmiBlitz3.ab2@18290>   MOVE.w dontwrite,D1
0003C4F0 <AmiBlitz3.ab2@18291>    BNE.w JL_0_B8DE
0003C4F6 <AmiBlitz3.ab2@18292>   TST.l newinitaddr
0003C4FA <AmiBlitz3.ab2@18293>    BEQ 'l10
0003C500 <AmiBlitz3.ab2@18294>   MOVE.l newinitaddr,D2
0003C506 <AmiBlitz3.ab2@18295>   SUB.l destbufferstart,D2
0003C508 <AmiBlitz3.ab2@18296>   ADDQ.l #2,d2
0003C50E <AmiBlitz3.ab2@18297>   MOVEA.l newinitaddr,A0                                   ;write newinitcode
0003C512 <AmiBlitz3.ab2@18299>   MOVE.w #$4EB9,(A0)+
0003C514 <AmiBlitz3.ab2@18300>   MOVE.l (A7),(A0)+
0003C518 <AmiBlitz3.ab2@18302> BRA 'l20
0003C51E <AmiBlitz3.ab2@18305>   MOVEA.l destbufferstart,A0                               ;write initcode
0003C524 <AmiBlitz3.ab2@18306>   TST.b saved0
0003C528 <AmiBlitz3.ab2@18307>   BEQ 'l1
0003C52C <AmiBlitz3.ab2@18308>   MOVE.w #$23c0,(a0)+
0003C52E <AmiBlitz3.ab2@18309>   MOVE.l a0,a1
0003C530 <AmiBlitz3.ab2@18310>   ADDQ.l #6,a1
0003C532 <AmiBlitz3.ab2@18311>   MOVE.l a1,(a0)+
0003C534 <AmiBlitz3.ab2@18312>   MOVEQ.l #$02,D2
0003C538 <AmiBlitz3.ab2@18313>   BSR.w addhunkoffset
0003C53C <AmiBlitz3.ab2@18314>   MOVE.w #$6004,(a0)+
0003C542 <AmiBlitz3.ab2@18315>   MOVE.l #$4e714e71,(a0)+
0003C546 <AmiBlitz3.ab2@18318>   MOVE.w #$4EB9,(A0)+
0003C548 <AmiBlitz3.ab2@18319>   MOVE.l (A7),(A0)+
0003C54A <AmiBlitz3.ab2@18320>   MOVEQ #2,d2
0003C550 <AmiBlitz3.ab2@18321>   TST.b saved0
0003C554 <AmiBlitz3.ab2@18322>   BEQ 'l20
0003C556 <AmiBlitz3.ab2@18323>   MOVEQ.l #14,D2
0003C55A <AmiBlitz3.ab2@18326>   BSR.w addhunkoffset
0003C55E <AmiBlitz3.ab2@18327>   MOVE.w #$2039,(a0)+
0003C560 <AmiBlitz3.ab2@18328>   MOVE.l a1,(a0)+
0003C562 <AmiBlitz3.ab2@18329>   MOVEQ.l #20,d2
0003C566 <AmiBlitz3.ab2@18332>   BSR.w addhunkoffset
0003C56A <AmiBlitz3.ab2@18335>   MOVE.w #$4E75,D1
0003C56E <AmiBlitz3.ab2@18336>   BSR.w writeword
0003C570 <AmiBlitz3.ab2@18339>   ADDQ.w #4,A7
0003C572 <AmiBlitz3.ab2@18340> RTS
0003C576 <AmiBlitz3.ab2@18345>   Dc.b $22,$2D,$00,$00                                     ;MOVE.L  $0000(A5),D1
0003C57C <AmiBlitz3.ab2@18347>   Dc.b $23,$CD,$00,$00,$00,$00                             ;MOVE.L  A5,$00000000
0003C582 <AmiBlitz3.ab2@18349>   Dc.b $24,$7C,$00,$00,$00,$00                             ;MOVEA.L #$00000000,A2
0003C588 <AmiBlitz3.ab2@18354>   MOVE.l stringbuffer,D1
0003C58C <AmiBlitz3.ab2@18355> BRA.w makesize
0003C58E <AmiBlitz3.ab2@18358>   MOVEQ.l #$00,D1
0003C594 <AmiBlitz3.ab2@18359>   MOVE.w globalvarpointer,D1
0003C598 <AmiBlitz3.ab2@18360>   SUBI.w #$8000,D1
0003C59C <AmiBlitz3.ab2@18361>   BNE.w makesize
0003C59E <AmiBlitz3.ab2@18362>     MOVEQ.l #$08,D1
0003C5A0 <AmiBlitz3.ab2@18365>   MOVE.l D1,-(A7)
0003C5A4 <AmiBlitz3.ab2@18366>   MOVE.w #$203C,D1
0003C5A8 <AmiBlitz3.ab2@18367>   BSR.w writeword
0003C5AA <AmiBlitz3.ab2@18368>   MOVE.l (A7)+,D1
0003C5AE <AmiBlitz3.ab2@18369> BRA.w writelong
0003C5B0 <AmiBlitz3.ab2@18377>   MOVEQ.l #$00,D1
0003C5B6 <AmiBlitz3.ab2@18378>   MOVEA.l libpointer,A1
0003C5BA <AmiBlitz3.ab2@18381>     CMPA.w #$0,A1
0003C5BE <AmiBlitz3.ab2@18382>     BEQ.w findhilib__done
0003C5C2 <AmiBlitz3.ab2@18383>       CMP.w $4(A1),D7
0003C5C6 <AmiBlitz3.ab2@18384>       BLS.w findhilib__next
0003C5CA <AmiBlitz3.ab2@18385>         CMP.w $4(A1),D1
0003C5CE <AmiBlitz3.ab2@18386>         BCC.w findhilib__next
0003C5D2 <AmiBlitz3.ab2@18387>           MOVE.w $4(A1),D1
0003C5D4 <AmiBlitz3.ab2@18388>           MOVEA.l A1,A2
0003C5D6 <AmiBlitz3.ab2@18391>     MOVEA.l (A1),A1
0003C5DA <AmiBlitz3.ab2@18392> BRA.w findhilib__loop
0003C5DC <AmiBlitz3.ab2@18395>   MOVE.w D1,D7
0003C5DE <AmiBlitz3.ab2@18396> RTS
0003C5E0 <AmiBlitz3.ab2@18404>   MOVEQ.l #-$01,D1
0003C5E6 <AmiBlitz3.ab2@18405>   MOVEA.l libpointer,A1
0003C5EA <AmiBlitz3.ab2@18408>     CMPA.w #$0,A1
0003C5EE <AmiBlitz3.ab2@18409>      BEQ.w findlolib__done
0003C5F2 <AmiBlitz3.ab2@18410>     CMP.w $4(A1),D7
0003C5F6 <AmiBlitz3.ab2@18411>      BCC.w findlolib__next
0003C5FA <AmiBlitz3.ab2@18412>     CMP.w $4(A1),D1
0003C5FE <AmiBlitz3.ab2@18413>      BLS.w findlolib__next
0003C602 <AmiBlitz3.ab2@18414>     MOVE.w $4(A1),D1
0003C604 <AmiBlitz3.ab2@18415>     MOVEA.l A1,A2
0003C606 <AmiBlitz3.ab2@18418>     MOVEA.l (A1),A1
0003C60A <AmiBlitz3.ab2@18419> BRA.w findlolib__loop
0003C60C <AmiBlitz3.ab2@18422>   MOVE.w D1,D7
0003C610 <AmiBlitz3.ab2@18423>   CMP.w #-$1,D1
0003C612 <AmiBlitz3.ab2@18424> RTS
0003C618 <AmiBlitz3.ab2@18428>   ADDQ.w #1,globalvarpointer
0003C620 <AmiBlitz3.ab2@18429>   BCLR #$0,globalvarpointer+1
0003C622 <AmiBlitz3.ab2@18430>   MOVEQ.l #$00,D7
0003C626 <AmiBlitz3.ab2@18433>     BSR.w findlolib
0003C62A <AmiBlitz3.ab2@18434>     BEQ.w JL_0_BA74
0003C62E <AmiBlitz3.ab2@18435>     TST.w $C(A2)
0003C632 <AmiBlitz3.ab2@18436>     BPL.w JL_0_B99A
0003C634 <AmiBlitz3.ab2@18437>     MOVEA.l A2,A1
0003C638 <AmiBlitz3.ab2@18438>     ADDA.l $12(A1),A1
0003C63C <AmiBlitz3.ab2@18439>     TST.w -$2(A1)
0003C640 <AmiBlitz3.ab2@18440>     BEQ.w JL_0_BA34
0003C644 <AmiBlitz3.ab2@18441>     MOVE.l -$A(A1),D1
0003C648 <AmiBlitz3.ab2@18442>     LEA $6(A2,D1.L),A3
0003C64A <AmiBlitz3.ab2@18445>       TST.w (A3)+
0003C64E <AmiBlitz3.ab2@18446>       BEQ.w JL_0_B9CC
0003C650 <AmiBlitz3.ab2@18447>         ADDQ.w #2,A3
0003C654 <AmiBlitz3.ab2@18448> BRA.w JL_0_B9C0
0003C658 <AmiBlitz3.ab2@18451>     TST.l $4(A3)
0003C65C <AmiBlitz3.ab2@18452>     BEQ.w JL_0_BA34
0003C660 <AmiBlitz3.ab2@18453>       MOVE.w freemax(PC),D1
0003C664 <AmiBlitz3.ab2@18454>       BSR.w writeword
0003C668 <AmiBlitz3.ab2@18455>       MOVE.w -$4(A1),D1
0003C66C <AmiBlitz3.ab2@18456>       BSR.w writeword
0003C672 <AmiBlitz3.ab2@18457>       MOVE.l free,D1
0003C676 <AmiBlitz3.ab2@18458>       MOVE.w -$6(A1),D1
0003C67A <AmiBlitz3.ab2@18459>       BSR.w writelong
0003C680 <AmiBlitz3.ab2@18460>       MOVE.l destpointer,-(A7)
0003C682 <AmiBlitz3.ab2@18461>       MOVEQ.l #$01,D1
0003C686 <AmiBlitz3.ab2@18462>       MOVE.w -$2(A1),D2
0003C688 <AmiBlitz3.ab2@18463>       LSL.w D2,D1
0003C68A <AmiBlitz3.ab2@18464>       MOVE.w D1,-(A7)
0003C68E <AmiBlitz3.ab2@18465>       MOVE.l -$A(A1),D1
0003C692 <AmiBlitz3.ab2@18466>       BSR.w Amakelibsub
0003C696 <AmiBlitz3.ab2@18467>       MOVE.w freemax3(PC),D1
0003C69A <AmiBlitz3.ab2@18468>       BSR.w writeword
0003C69C <AmiBlitz3.ab2@18469>       MOVE.w (A7)+,D1
0003C6A0 <AmiBlitz3.ab2@18470>       BSR.w writeword
0003C6A4 <AmiBlitz3.ab2@18471>       MOVE.l freemax2(PC),D1
0003C6A8 <AmiBlitz3.ab2@18472>       BSR.w writelong
0003C6AA <AmiBlitz3.ab2@18473>       MOVE.l (A7)+,D1
0003C6B0 <AmiBlitz3.ab2@18474>       SUB.l destpointer,D1
0003C6B4 <AmiBlitz3.ab2@18475>       BSR.w writeword
0003C6B8 <AmiBlitz3.ab2@18476>       MOVE.w freemax4(PC),D1
0003C6BC <AmiBlitz3.ab2@18477>       BSR.w writeword
0003C6C0 <AmiBlitz3.ab2@18480>     MOVE.l $1C(A2),D1
0003C6C4 <AmiBlitz3.ab2@18481>     BEQ.w JL_0_B99A
0003C6C8 <AmiBlitz3.ab2@18483>     MOVE.w $4(A2),D1
0003C6CC <AmiBlitz3.ab2@18484>     CMP.w #-$2,D1
0003C6D0 <AmiBlitz3.ab2@18485>     BNE.w JL_0_BA50
0003C6D4 <AmiBlitz3.ab2@18486>       BSR.w makevsize
0003C6D8 <AmiBlitz3.ab2@18487> BRA.w JL_0_BA60
0003C6DC <AmiBlitz3.ab2@18490>     CMP.w #-$12D,D1
0003C6E0 <AmiBlitz3.ab2@18491>     BNE.w JL_0_BA60
0003C6E4 <AmiBlitz3.ab2@18492>       BSR.w makessize
0003C6E8 <AmiBlitz3.ab2@18493> BRA.w JL_0_BA60
0003C6EC <AmiBlitz3.ab2@18496>     MOVE.l $1C(A2),D1
0003C6F4 <AmiBlitz3.ab2@18497>     MOVE.w #$FFFF,lasta6
0003C6F8 <AmiBlitz3.ab2@18498>     BSR.w Amakelibsub
0003C6FC <AmiBlitz3.ab2@18499> BRA.w JL_0_B99A
0003C6FE <AmiBlitz3.ab2@18502> RTS
0003C702 <AmiBlitz3.ab2@18506> freemax:   Dc.b $3F,$3C,$00,$00                            ;MOVE.W  #$0000,-(A7)
0003C704 <AmiBlitz3.ab2@18508> freemax2:  Dc.b $53,$57                                    ;SUBQ.W  #1,(A7)
0003C708 <AmiBlitz3.ab2@18509>            Dc.b $66,$00,$FF,$FC                            ;BNE.W freemax2
0003C70A <AmiBlitz3.ab2@18510> freemax4:  Dc.b $54,$4F                                    ;ADDQ.W  #2,A7
0003C70E <AmiBlitz3.ab2@18511> freemax3:  Dc.b $47,$EB,$00,$00                            ;LEA $0000(A3),A3
0003C714 <AmiBlitz3.ab2@18516>   TST.b debugmode
0003C718 <AmiBlitz3.ab2@18517>    BEQ.b chkstak__skip
0003C71E <AmiBlitz3.ab2@18518>   TST.w debugversion
0003C722 <AmiBlitz3.ab2@18519>    BNE.b chkstak__skip
0003C726 <AmiBlitz3.ab2@18520>   MOVE.w #$C308,D1
0003C72A <AmiBlitz3.ab2@18521> BRA.w Atokejsr
0003C72C <AmiBlitz3.ab2@18524> RTS
0003C734 <AmiBlitz3.ab2@18528>   MOVE.w #$FFFF,lasta6
0003C738 <AmiBlitz3.ab2@18533>   MOVEM.l D0-d7/A0-a6,-(A7)
0003C740 <AmiBlitz3.ab2@18534>   MOVE.b #1,nostringopt
0003C746 <AmiBlitz3.ab2@18535>   JSR searchinstr
0003C748 <AmiBlitz3.ab2@18536>   MOVE.l A3,D1
0003C74A <AmiBlitz3.ab2@18537>   SUB.l A2,D1
0003C74E <AmiBlitz3.ab2@18538>   BSR.w Amakelibsub
0003C752 <AmiBlitz3.ab2@18539>   MOVEM.l (A7)+,d0-d7/a0-a6
0003C754 <AmiBlitz3.ab2@18540> RTS
0003C75A <AmiBlitz3.ab2@18547>   MOVE.l libisat,-(A7)                                   ;library write
0003C760 <AmiBlitz3.ab2@18548>   MOVE.l A2,libisat
0003C762 <AmiBlitz3.ab2@18550>   MOVEA.l A1,A2
0003C764 <AmiBlitz3.ab2@18551>   MOVE.w (A2)+,D1
0003C76A <AmiBlitz3.ab2@18552>   MOVE.l a2,lastinstruction
0003C76E <AmiBlitz3.ab2@18553>   ANDI.w #$FF,D1
0003C770 <AmiBlitz3.ab2@18554>   ADDA.w D1,A2
0003C772 <AmiBlitz3.ab2@18555>   EXG.l D0,A2
0003C774 <AmiBlitz3.ab2@18556>   ADDQ.l #1,D0
0003C778 <AmiBlitz3.ab2@18557>   BCLR #$0,D0
0003C77A <AmiBlitz3.ab2@18558>   EXG.l D0,A2
0003C77E <AmiBlitz3.ab2@18559> BRA.w JL_0_BB08
0003C784 <AmiBlitz3.ab2@18563>   MOVE.l libisat,-(A7)
0003C78A <AmiBlitz3.ab2@18564>   MOVE.l A2,libisat
0003C78C <AmiBlitz3.ab2@18565>   MOVEA.l A3,A2
0003C790 <AmiBlitz3.ab2@18566> BRA.w JL_0_BB08
0003C792 <AmiBlitz3.ab2@18570>   MOVE.l a1,-(a7)
0003C794 <AmiBlitz3.ab2@18573>   MOVE.l d0,a0
0003C798 <AmiBlitz3.ab2@18574>   MOVE.l $a(a0),d0
0003C79A <AmiBlitz3.ab2@18575>   MOVE.l d0,a1
0003C7A2 <AmiBlitz3.ab2@18576>   CMP.l #8,4(a1)
0003C7A6 <AmiBlitz3.ab2@18577>   BLE 'norec
0003C7A8 <AmiBlitz3.ab2@18578>   MOVE.l a0,-(a7)
0003C7AE <AmiBlitz3.ab2@18579>   MOVE.l typebase,-(a7)
0003C7B0 <AmiBlitz3.ab2@18580>   MOVEQ #0,d0
0003C7B4 <AmiBlitz3.ab2@18581>   MOVE.w 4(a0),d0
0003C7BA <AmiBlitz3.ab2@18582>   ADD.l d0,typebase
0003C7BE <AmiBlitz3.ab2@18583>   MOVE.l $4(a1),d0
0003C7C2 <AmiBlitz3.ab2@18584>   BSR scantype
0003C7C8 <AmiBlitz3.ab2@18585>   MOVE.l (a7)+,typebase
0003C7CA <AmiBlitz3.ab2@18586>   MOVE.l (a7)+,a0
0003C7D0 <AmiBlitz3.ab2@18589>   CMP.l #newtype_string,d0
0003C7D4 <AmiBlitz3.ab2@18590>   BNE 'nostring
0003C7DA <AmiBlitz3.ab2@18591>   ADDQ #2,a2offset
0003C7E0 <AmiBlitz3.ab2@18592>   MOVE.l #$3f3c0000,d1
0003C7E2 <AmiBlitz3.ab2@18593>   MOVEQ #0,d0
0003C7E6 <AmiBlitz3.ab2@18594>   MOVE.w 4(a0),d0
0003C7EC <AmiBlitz3.ab2@18595>   ADD.l typebase,d0
0003C7EE <AmiBlitz3.ab2@18596>   MOVE.w d0,d1
0003C7F2 <AmiBlitz3.ab2@18597>   BSR writelong
0003C7F8 <AmiBlitz3.ab2@18598>   TST.b debugmode
0003C7FC <AmiBlitz3.ab2@18599>   BEQ 'l1a
0003C7FE <AmiBlitz3.ab2@18600>   MOVE.l d1,-(a7)
0003C804 <AmiBlitz3.ab2@18601>   MOVE.l #$c308,d1
0003C80A <AmiBlitz3.ab2@18602>   JSR Atokejsr
0003C80C <AmiBlitz3.ab2@18603>   MOVE.l (a7)+,d1
0003C810 <AmiBlitz3.ab2@18606>   TST.w 8(a0)
0003C814 <AmiBlitz3.ab2@18607>   BEQ 'nostring
0003C818 <AmiBlitz3.ab2@18608>   MOVEM.l d2/d3,-(a7)
0003C81A <AmiBlitz3.ab2@18609>   MOVE.l d1,d2
0003C81C <AmiBlitz3.ab2@18610>   MOVEQ #0,d3
0003C820 <AmiBlitz3.ab2@18611>   MOVE.w 8(a0),d3
0003C822 <AmiBlitz3.ab2@18612>   SUBQ.l #1,d3
0003C826 <AmiBlitz3.ab2@18613>   BEQ 'nostring2
0003C828 <AmiBlitz3.ab2@18616>   ADDQ.l #4,d2
0003C82A <AmiBlitz3.ab2@18617>   MOVE.l d2,d1
0003C82E <AmiBlitz3.ab2@18618>   BSR writelong
0003C834 <AmiBlitz3.ab2@18619>   TST.b debugmode
0003C838 <AmiBlitz3.ab2@18620>   BEQ 'l1
0003C83E <AmiBlitz3.ab2@18621>   MOVE.l #$c308,d1
0003C844 <AmiBlitz3.ab2@18622>   JSR Atokejsr
0003C84A <AmiBlitz3.ab2@18625>   ADDQ #2,a2offset
0003C84C <AmiBlitz3.ab2@18626>   SUBQ.l #1,d3
0003C850 <AmiBlitz3.ab2@18627>   BNE 'loop
0003C854 <AmiBlitz3.ab2@18630>   MOVEM.l (a7)+,d2/d3
0003C856 <AmiBlitz3.ab2@18633>   MOVE.l (a0),d0
0003C85A <AmiBlitz3.ab2@18634>   BNE 'more
0003C85C <AmiBlitz3.ab2@18635>   MOVE.l (a7)+,a1
0003C85E <AmiBlitz3.ab2@18636> RTS
0003C862 <AmiBlitz3.ab2@18639> libisat:   Ds.l 1
0003C868 <AmiBlitz3.ab2@18645>   MOVE.l libisat,-(A7)                                   
0003C86E <AmiBlitz3.ab2@18646>   MOVE.l A2,libisat
0003C872 <AmiBlitz3.ab2@18647>   LEA $6(A2,D1.L),A2
0003C87A <AmiBlitz3.ab2@18651>   CMP.l #$3e19436c,$1c-8(a2)                               ;clear type
0003C87E <AmiBlitz3.ab2@18652>   BEQ 'dowritevar
0003C886 <AmiBlitz3.ab2@18653>   CMP.l #$3e18436f,$1c-8(a2)                               ;copy type
0003C88A <AmiBlitz3.ab2@18654>   BEQ 'dowritevar
0003C892 <AmiBlitz3.ab2@18655>   CMP.l #$3e175265,$1c(a2)
0003C896 <AmiBlitz3.ab2@18656>   BEQ 'dowritevar
0003C89E <AmiBlitz3.ab2@18657>   CMP.l #$3e165772,$1c(a2)
0003C8A2 <AmiBlitz3.ab2@18658>   BNE 'nowritef
0003C8A6 <AmiBlitz3.ab2@18661>   MOVEM.l a0-a2/d2,-(a7)
0003C8A8 <AmiBlitz3.ab2@18662>   MOVEQ #0,d1
0003C8B2 <AmiBlitz3.ab2@18663>   MOVE.l #0,typebase
0003C8B6 <AmiBlitz3.ab2@18664>   MOVE.l $a(a3),a0
0003C8BA <AmiBlitz3.ab2@18665>   MOVE.l $4(a0),d0
0003C8C0 <AmiBlitz3.ab2@18666>   CMP.l #8,d0
0003C8C4 <AmiBlitz3.ab2@18667>   BLE 'notype
0003C8C8 <AmiBlitz3.ab2@18668>   BSR scantype
0003C8CE <AmiBlitz3.ab2@18671>   MOVE.l #$3f3c0000,d1
0003C8D4 <AmiBlitz3.ab2@18672>   MOVE.w a2offset,d1
0003C8D8 <AmiBlitz3.ab2@18673>   BSR writelong
0003C8DE <AmiBlitz3.ab2@18674>   MOVE.l #$3f3c0000,d1
0003C8E2 <AmiBlitz3.ab2@18675>   MOVE.l $a(a3),a0
0003C8E6 <AmiBlitz3.ab2@18676>   MOVE.w 8(a0),d1
0003C8EA <AmiBlitz3.ab2@18677>   BSR writelong
0003C8F0 <AmiBlitz3.ab2@18678>   MOVE.l #$3f3cab12,d1
0003C8F4 <AmiBlitz3.ab2@18679>   BSR writelong
0003C8FA <AmiBlitz3.ab2@18680>   ADDQ.w #6,a2offset
0003C8FE <AmiBlitz3.ab2@18681>   MOVEM.l (a7)+,a0-a2/d2
0003C904 <AmiBlitz3.ab2@18684>   TST.b fpu
0003C908 <AmiBlitz3.ab2@18685>   BEQ 'nofpu2
0003C910 <AmiBlitz3.ab2@18686>   CMP.l #$496e7400,$1a(a2)
0003C914 <AmiBlitz3.ab2@18687>   BNE 'noint
0003C916 <AmiBlitz3.ab2@18688>   MOVEQ #0,d1
0003C91C <AmiBlitz3.ab2@18689>   SUBQ.l #8,destpointer                                    ;fpu int
0003C922 <AmiBlitz3.ab2@18690>   CLR.w a2offset
0003C926 <AmiBlitz3.ab2@18691>   CMP.b #2,d2
0003C92A <AmiBlitz3.ab2@18692>   BGT 'noword
0003C92E <AmiBlitz3.ab2@18693>   MOVE.w #$48c0,d1
0003C934 <AmiBlitz3.ab2@18694>   OR.w regnumstore,d1
0003C938 <AmiBlitz3.ab2@18695>   BSR writeword
0003C93C <AmiBlitz3.ab2@18696> BRA 'exit2
0003C940 <AmiBlitz3.ab2@18699>    CMP.b #3,d2
0003C944 <AmiBlitz3.ab2@18700>         BNE 'nolong
0003C948 <AmiBlitz3.ab2@18701> BRA 'exit2
0003C94C <AmiBlitz3.ab2@18704>    CMP.b #4,d2
0003C950 <AmiBlitz3.ab2@18705>         BNE 'noquick
0003C954 <AmiBlitz3.ab2@18706>         MOVE.w #$e080,d1
0003C95A <AmiBlitz3.ab2@18707>         OR.w regnumstore,d1
0003C95E <AmiBlitz3.ab2@18708>         BSR writeword
0003C962 <AmiBlitz3.ab2@18709>         MOVE.w #$e080,d1
0003C968 <AmiBlitz3.ab2@18710>         OR.w regnumstore,d1
0003C96C <AmiBlitz3.ab2@18711>         BSR writeword
0003C970 <AmiBlitz3.ab2@18712> BRA 'exit2
0003C972 <AmiBlitz3.ab2@18715>         MOVEQ #0,d0
0003C974 <AmiBlitz3.ab2@18716>         MOVEQ #0,d1
0003C97A <AmiBlitz3.ab2@18717>         MOVE.w regnumstore,d0
0003C97C <AmiBlitz3.ab2@18718>         ASL.l #7,d0
0003C982 <AmiBlitz3.ab2@18719>         OR.l #$f23c4428,d1                                 ;fsub.s 0.5,fpx
0003C984 <AmiBlitz3.ab2@18720>         OR.l d0,d1
0003C98A <AmiBlitz3.ab2@18722>         MOVE.l #$3f000000,d1
0003C98C <AmiBlitz3.ab2@18724>         MOVEQ #0,d0
0003C98E <AmiBlitz3.ab2@18725>         MOVEQ #0,d1
0003C994 <AmiBlitz3.ab2@18726>         MOVE.w regnumstore,d0
0003C996 <AmiBlitz3.ab2@18727>         ASL.l #7,d0
0003C998 <AmiBlitz3.ab2@18728>         MOVE.l d0,d1
0003C99E <AmiBlitz3.ab2@18729>         OR.l #$f2000003,d1                                 ;fintrz fpx
0003C9A0 <AmiBlitz3.ab2@18730>         ASL.l #3,d0
0003C9A2 <AmiBlitz3.ab2@18731>         OR.l d0,d1
0003C9A6 <AmiBlitz3.ab2@18732>         BSR writelong
0003C9A8 <AmiBlitz3.ab2@18733>         MOVEQ #0,d0
0003C9AE <AmiBlitz3.ab2@18734>         MOVE.w regnumstore,d0
0003C9B0 <AmiBlitz3.ab2@18735>         ASL.l #7,d0
0003C9B6 <AmiBlitz3.ab2@18736>         MOVE.l #$f2006000,d1                               ;fmove.l fp0,d0
0003C9B8 <AmiBlitz3.ab2@18737>         OR.l d0,d1
0003C9BA <AmiBlitz3.ab2@18738>         ASL.l #1,d0
0003C9BC <AmiBlitz3.ab2@18739>         ASL.l #8,d0
0003C9BE <AmiBlitz3.ab2@18740>         OR.l d0,d1
0003C9C2 <AmiBlitz3.ab2@18741> BRA 'exit
0003C9C8 <AmiBlitz3.ab2@18744>   CMP.w #$3c01,24(a2)
0003C9CC <AmiBlitz3.ab2@18745>   BNE 'noval
0003C9CE <AmiBlitz3.ab2@18746>   MOVE.l a2,-(a7)
0003C9D2 <AmiBlitz3.ab2@18747>   BSR.w JL_0_BB14
0003C9D4 <AmiBlitz3.ab2@18748>   MOVE.l (a7)+,a2
0003C9D8 <AmiBlitz3.ab2@18749> BRA 'exit2
0003C9E0 <AmiBlitz3.ab2@18766>   CMP.l #$41627300,$1a(a2)
0003C9E4 <AmiBlitz3.ab2@18767>   BNE 'noabs
0003C9E6 <AmiBlitz3.ab2@18768>   MOVEQ #0,d1
0003C9EC <AmiBlitz3.ab2@18769>   MOVE.w regnumstore,d1
0003C9EE <AmiBlitz3.ab2@18770>   MOVE.w d1,d0
0003C9F0 <AmiBlitz3.ab2@18771>   ASL.w #7,d1
0003C9F2 <AmiBlitz3.ab2@18772>   ASL.w #8,d0
0003C9F4 <AmiBlitz3.ab2@18773>   ASL.w #2,d0
0003C9F6 <AmiBlitz3.ab2@18774>   OR.w d0,d1
0003C9FC <AmiBlitz3.ab2@18775>   SUBQ.l #8,destpointer                                    ;fpu abs
0003CA00 <AmiBlitz3.ab2@18776>   MOVEM.l d3/d1,-(a7)
0003CA04 <AmiBlitz3.ab2@18777>   MOVE.w #5,d3
0003CA06 <AmiBlitz3.ab2@18778>   EXG d2,d3
0003CA0C <AmiBlitz3.ab2@18779>   MOVE.w regnum,-(a7)
0003CA16 <AmiBlitz3.ab2@18780>   MOVE.w regnumstore,regnum
0003CA1A <AmiBlitz3.ab2@18781>   BSR writeconvertcode
0003CA20 <AmiBlitz3.ab2@18782>   MOVE.w (a7)+,regnum
0003CA22 <AmiBlitz3.ab2@18783>   EXG d2,d3
0003CA26 <AmiBlitz3.ab2@18784>   MOVEM.l (a7)+,d3/d1
0003CA2C <AmiBlitz3.ab2@18785>   OR.l #$f2000018,d1
0003CA32 <AmiBlitz3.ab2@18786>   CLR.w a2offset
0003CA36 <AmiBlitz3.ab2@18787> BRA 'exit
0003CA3A <AmiBlitz3.ab2@18790>   CMP.b #5,d2
0003CA3E <AmiBlitz3.ab2@18791>   BNE 'nofpu2
0003CA42 <AmiBlitz3.ab2@18792>   MOVE.b 24(a2),d0
0003CA46 <AmiBlitz3.ab2@18793>   CMP.b #$60,d0                                            ;nolib $edxx
0003CA4A <AmiBlitz3.ab2@18794>   BNE 'nofpu
0003CA4C <AmiBlitz3.ab2@18795>   MOVEQ #0,d1
0003CA52 <AmiBlitz3.ab2@18796>   MOVE.w regnumstore,d1
0003CA54 <AmiBlitz3.ab2@18797>   MOVE.w d1,d0
0003CA56 <AmiBlitz3.ab2@18798>   ASL.w #7,d1
0003CA58 <AmiBlitz3.ab2@18799>   ASL.w #8,d0
0003CA5A <AmiBlitz3.ab2@18800>   ASL.w #2,d0
0003CA5C <AmiBlitz3.ab2@18801>   OR.w d0,d1
0003CA60 <AmiBlitz3.ab2@18802>   MOVE.b 25(a2),d0
0003CA64 <AmiBlitz3.ab2@18803>   CMP.b #5,d0
0003CA68 <AmiBlitz3.ab2@18804>   BNE 'nocos
0003CA6E <AmiBlitz3.ab2@18805>   OR.l #$f200001d,d1                                       ;fpu cos
0003CA72 <AmiBlitz3.ab2@18806> BRA 'exit
0003CA76 <AmiBlitz3.ab2@18809>   CMP.b #$c,d0
0003CA7A <AmiBlitz3.ab2@18810>   BNE 'nosqr
0003CA80 <AmiBlitz3.ab2@18811>   OR.l #$f2000004,d1                                       ;fpu sqr
0003CA84 <AmiBlitz3.ab2@18812> BRA 'exit
0003CA88 <AmiBlitz3.ab2@18815>   CMP.b #$d,d0
0003CA8C <AmiBlitz3.ab2@18816>   BNE 'notan
0003CA92 <AmiBlitz3.ab2@18817>   OR.l #$f200000f,d1                                       ;fpu tan
0003CA96 <AmiBlitz3.ab2@18818> BRA 'exit
0003CA9A <AmiBlitz3.ab2@18821>   CMP.b #$a,d0
0003CA9E <AmiBlitz3.ab2@18822>   BNE 'nosin
0003CAA4 <AmiBlitz3.ab2@18823>   OR.l #$f200000e,d1                                       ;fpu sin
0003CAA8 <AmiBlitz3.ab2@18824> BRA 'exit
0003CAAC <AmiBlitz3.ab2@18827>   CMP.b #$3,d0
0003CAB0 <AmiBlitz3.ab2@18828>   BNE 'noasin
0003CAB6 <AmiBlitz3.ab2@18829>   OR.l #$f200000c,d1                                       ;fpu asin
0003CABA <AmiBlitz3.ab2@18830> BRA 'exit
0003CABE <AmiBlitz3.ab2@18833>   CMP.b #$2,d0
0003CAC2 <AmiBlitz3.ab2@18834>   BNE 'noacos
0003CAC8 <AmiBlitz3.ab2@18835>   OR.l #$f200001c,d1                                       ;fpu acos
0003CACC <AmiBlitz3.ab2@18836> BRA 'exit
0003CAD0 <AmiBlitz3.ab2@18839>   CMP.b #$4,d0
0003CAD4 <AmiBlitz3.ab2@18840>   BNE 'noatan
0003CADA <AmiBlitz3.ab2@18841>   OR.l #$f200000a,d1                                       ;fpu atan
0003CADE <AmiBlitz3.ab2@18842> BRA 'exit
0003CAE2 <AmiBlitz3.ab2@18845>   CMP.b #$e,d0
0003CAE6 <AmiBlitz3.ab2@18846>   BNE 'nohtan
0003CAEC <AmiBlitz3.ab2@18847>   OR.l #$f2000009,d1                                       ;fpu htan
0003CAF0 <AmiBlitz3.ab2@18848> BRA 'exit
0003CAF4 <AmiBlitz3.ab2@18851>   CMP.b #$6,d0
0003CAF8 <AmiBlitz3.ab2@18852>   BNE 'nohcos
0003CAFE <AmiBlitz3.ab2@18853>   OR.l #$f2000019,d1                                       ;fpu hcos
0003CB02 <AmiBlitz3.ab2@18854> BRA 'exit
0003CB06 <AmiBlitz3.ab2@18857>   CMP.b #$b,d0
0003CB0A <AmiBlitz3.ab2@18858>   BNE 'nohsin
0003CB10 <AmiBlitz3.ab2@18859>   OR.l #$f2000002,d1                                       ;fpu hsin
0003CB14 <AmiBlitz3.ab2@18860> BRA 'exit
0003CB18 <AmiBlitz3.ab2@18863>   CMP.b #$9,d0
0003CB1C <AmiBlitz3.ab2@18864>   BNE 'nolog
0003CB22 <AmiBlitz3.ab2@18865>   OR.l #$f2000014,d1                                       ;fpu log
0003CB26 <AmiBlitz3.ab2@18866> BRA 'exit
0003CB2A <AmiBlitz3.ab2@18869>   CMP.b #$8,d0
0003CB2E <AmiBlitz3.ab2@18870>   BNE 'nolog10
0003CB34 <AmiBlitz3.ab2@18871>   OR.l #$f2000015,d1                                       ;fpu log10
0003CB38 <AmiBlitz3.ab2@18872> BRA 'exit
0003CB3C <AmiBlitz3.ab2@18875>   CMP.b #$7,d0
0003CB40 <AmiBlitz3.ab2@18876>   BNE 'noexp
0003CB46 <AmiBlitz3.ab2@18877>   OR.l #$f2000010,d1                                       ;fpu exp
0003CB4A <AmiBlitz3.ab2@18878> BRA 'exit
0003CB50 <AmiBlitz3.ab2@18881>   LEA fpuerr,a0
0003CB52 <AmiBlitz3.ab2@18882>   MOVE.l a0,-(a7)
0003CB58 <AmiBlitz3.ab2@18883> JMP handle_compileerror
0003CB5C <AmiBlitz3.ab2@18887>   CMP.b #$3c,d0
0003CB60 <AmiBlitz3.ab2@18888>   BNE 'nofpu2
0003CB62 <AmiBlitz3.ab2@18889>   MOVEQ #0,d1
0003CB68 <AmiBlitz3.ab2@18890>       MOVE.w regnumstore,d1
0003CB6A <AmiBlitz3.ab2@18891>       MOVE.w d1,d0
0003CB6C <AmiBlitz3.ab2@18892>       ASL.w #7,d1
0003CB6E <AmiBlitz3.ab2@18893>       ASL.w #8,d0
0003CB70 <AmiBlitz3.ab2@18894>       ASL.w #2,d0
0003CB72 <AmiBlitz3.ab2@18895>       OR.w d0,d1
0003CB78 <AmiBlitz3.ab2@18896>       CMP.b #$03,25(a2)
0003CB7C <AmiBlitz3.ab2@18897>       BNE 'nosgn
0003CB82 <AmiBlitz3.ab2@18900>       SUBQ.l #8,destpointer                                ;fpu sgn
0003CB88 <AmiBlitz3.ab2@18901>         OR.l #$f200003a,d1
0003CB8C <AmiBlitz3.ab2@18902>         BSR writelong
0003CB92 <AmiBlitz3.ab2@18903>         CLR.w a2offset
0003CB98 <AmiBlitz3.ab2@18904>          MOVE.l #$F28E0006,d1
0003CB9C <AmiBlitz3.ab2@18905>          BSR writelong
0003CBA2 <AmiBlitz3.ab2@18906>   MOVE.l #$7000600a,d1
0003CBA6 <AmiBlitz3.ab2@18907>   BSR writelong
0003CBAC <AmiBlitz3.ab2@18908>   MOVE.l #$70014840,d1
0003CBB0 <AmiBlitz3.ab2@18909>   BSR writelong
0003CBB6 <AmiBlitz3.ab2@18910>   MOVE.l #$F292,d1
0003CBBA <AmiBlitz3.ab2@18911>   BSR writeword
0003CBC0 <AmiBlitz3.ab2@18912>   MOVE.l #$000470FF,d1
0003CBC4 <AmiBlitz3.ab2@18913> BRA 'exit
0003CBCC <AmiBlitz3.ab2@18916>   CMP.l #"Frac",$1a(a2)
0003CBD0 <AmiBlitz3.ab2@18917>   BNE 'nofrac
0003CBD6 <AmiBlitz3.ab2@18918> JMP notwork
0003CBDA <AmiBlitz3.ab2@18959> BRA 'exit
0003CBDE <AmiBlitz3.ab2@18963>   BSR.w JL_0_BB14                                          ;write lib code
0003CBE4 <AmiBlitz3.ab2@18964>   MOVE.l (A7)+,libisat
0003CBE6 <AmiBlitz3.ab2@18965> RTS
0003CBEA <AmiBlitz3.ab2@18968>   BSR writelong
0003CBF0 <AmiBlitz3.ab2@18971>   MOVE.l (A7)+,libisat
0003CBF2 <AmiBlitz3.ab2@18972> RTS
0003CBF6 <AmiBlitz3.ab2@18976>   BSR.w fetchregs
0003CBFC <AmiBlitz3.ab2@18977>   TST.b debugmode
0003CC00 <AmiBlitz3.ab2@18978>    BEQ.w JL_0_BB76
0003CC02 <AmiBlitz3.ab2@18979>   MOVE.l (A2),D1
0003CC06 <AmiBlitz3.ab2@18980>   OR.l $8(A2),D1
0003CC0A <AmiBlitz3.ab2@18981>   BCLR #$0,D1
0003CC0C <AmiBlitz3.ab2@18982>   TST.l D1
0003CC10 <AmiBlitz3.ab2@18983>    BEQ.w JL_0_BB76
0003CC12 <AmiBlitz3.ab2@18984>   MOVE.l (A2)+,D1
0003CC16 <AmiBlitz3.ab2@18985>   BTST #$0,D1
0003CC1A <AmiBlitz3.ab2@18986>    BEQ.w JL_0_BB60
0003CC20 <AmiBlitz3.ab2@18987>   TST.w blitzmode
0003CC24 <AmiBlitz3.ab2@18988>    BPL.w blitzerr
0003CC2A <AmiBlitz3.ab2@18989>   TST.b debugmode
0003CC2E <AmiBlitz3.ab2@18990>    BEQ.w JL_0_BB5C
0003CC30 <AmiBlitz3.ab2@18991>   MOVE.l D1,-(A7)
0003CC34 <AmiBlitz3.ab2@18992>   MOVE.w #$C311,D1
0003CC38 <AmiBlitz3.ab2@18993>    BSR.w makebtst
0003CC3A <AmiBlitz3.ab2@18994>   MOVE.l (A7)+,D1
0003CC3E <AmiBlitz3.ab2@18997>   BCLR #$0,D1
0003CC40 <AmiBlitz3.ab2@19000>   TST.l D1
0003CC44 <AmiBlitz3.ab2@19001>    BSR.w JL_0_BBC6
0003CC46 <AmiBlitz3.ab2@19002>   MOVE.l (A2)+,D1
0003CC4A <AmiBlitz3.ab2@19003>    BSR.w JL_0_BB98
0003CC4C <AmiBlitz3.ab2@19004>   MOVE.l (A2)+,D1
0003CC50 <AmiBlitz3.ab2@19005>    BSR.w JL_0_BBC6
0003CC54 <AmiBlitz3.ab2@19006> BRA.w JL_0_BB90
0003CC5A <AmiBlitz3.ab2@19009>   BTST #$0,$3(A2)
0003CC5E <AmiBlitz3.ab2@19010>    BEQ.w JL_0_BB88
0003CC62 <AmiBlitz3.ab2@19011>   MOVE.w blitzmode(PC),D1
0003CC66 <AmiBlitz3.ab2@19012>    BPL.w blitzerr
0003CC6A <AmiBlitz3.ab2@19015>   MOVE.l $4(A2),D1
0003CC6E <AmiBlitz3.ab2@19016>    BSR.w JL_0_BB98
0003CC74 <AmiBlitz3.ab2@19019>   MOVEA.l libisat,A2
0003CC76 <AmiBlitz3.ab2@19020> RTS
0003CC7A <AmiBlitz3.ab2@19023>   BTST #$0,D1
0003CC7E <AmiBlitz3.ab2@19024>    BEQ.w JL_0_BBC4
0003CC84 <AmiBlitz3.ab2@19025>   TST.w blitzmode
0003CC88 <AmiBlitz3.ab2@19026>    BMI.w amigaerr
0003CC8E <AmiBlitz3.ab2@19027>   TST.b debugmode
0003CC92 <AmiBlitz3.ab2@19028>    BEQ.w JL_0_BBC0
0003CC94 <AmiBlitz3.ab2@19029>   MOVE.l D1,-(A7)
0003CC98 <AmiBlitz3.ab2@19030>   MOVE.w #$C312,D1
0003CC9C <AmiBlitz3.ab2@19031>    BSR.w makebtst
0003CC9E <AmiBlitz3.ab2@19032>   MOVE.l (A7)+,D1
0003CCA2 <AmiBlitz3.ab2@19035>   BCLR #$0,D1
0003CCA4 <AmiBlitz3.ab2@19038>   TST.l D1
0003CCA8 <AmiBlitz3.ab2@19041>    BEQ.w JL_0_BBD2
0003CCAA <AmiBlitz3.ab2@19042>   MOVE.l A1,-(A7)
0003CCAE <AmiBlitz3.ab2@19043>    BSR.w JL_0_BBD4
0003CCB0 <AmiBlitz3.ab2@19044>   MOVEA.l (A7)+,A1
0003CCB2 <AmiBlitz3.ab2@19047> RTS
0003CCB8 <AmiBlitz3.ab2@19050>   MOVEA.l libisat,A0
0003CCBE <AmiBlitz3.ab2@19051>   TST.w cfetchmode
0003CCC2 <AmiBlitz3.ab2@19052>    BEQ.w JL_0_BBF6
0003CCC4 <AmiBlitz3.ab2@19053>   ADD.l A0,D1
0003CCC6 <AmiBlitz3.ab2@19054>   MOVE.l D1,-(A7)
0003CCCA <AmiBlitz3.ab2@19055>   MOVE.w #$4EB9,D1
0003CCCE <AmiBlitz3.ab2@19056>    BSR.w writeword
0003CCD0 <AmiBlitz3.ab2@19057>   MOVE.l (A7)+,D1
0003CCD4 <AmiBlitz3.ab2@19058> BRA.w writelong
0003CCD8 <AmiBlitz3.ab2@19061>   LEA $0(A0,D1.L),A1
0003CCDE <AmiBlitz3.ab2@19062>   CLR.w inline
0003CCE2 <AmiBlitz3.ab2@19065>   CMPI.b #$A0,(A1)+
0003CCE6 <AmiBlitz3.ab2@19066>    BNE.w JL_0_BC68
0003CCE8 <AmiBlitz3.ab2@19067>   TST.b (A1)+
0003CCEC <AmiBlitz3.ab2@19068>    BEQ.w JL_0_BC18
0003CCF2 <AmiBlitz3.ab2@19069>   CMPI.b #$1,-$1(A1)
0003CCF6 <AmiBlitz3.ab2@19070>    BEQ.w JL_0_BC24
0003CCFC <AmiBlitz3.ab2@19073>   MOVE.w (A1)+,inline
0003CCFE <AmiBlitz3.ab2@19074>   ADDQ.l #4,D1
0003CD02 <AmiBlitz3.ab2@19075> BRA.w JL_0_BC00
0003CD08 <AmiBlitz3.ab2@19078>   TST.w blitzmode
0003CD0C <AmiBlitz3.ab2@19079>    BPL.w JL_0_BC4A
0003CD12 <AmiBlitz3.ab2@19080>   TST.b debugmode
0003CD16 <AmiBlitz3.ab2@19081>    BEQ.w JL_0_BC40
0003CD1A <AmiBlitz3.ab2@19082>   MOVE.w #$C311,D1
0003CD1E <AmiBlitz3.ab2@19083>    BSR.w makebtst
0003CD20 <AmiBlitz3.ab2@19086>   MOVE.l (A1)+,D1
0003CD24 <AmiBlitz3.ab2@19087>   LEA $0(A0,D1.L),A1
0003CD28 <AmiBlitz3.ab2@19088> BRA.w JL_0_BC00
0003CD2E <AmiBlitz3.ab2@19091>   TST.b debugmode
0003CD32 <AmiBlitz3.ab2@19092>    BEQ.w JL_0_BC60
0003CD34 <AmiBlitz3.ab2@19093>   MOVE.l D1,-(A7)
0003CD38 <AmiBlitz3.ab2@19094>   MOVE.w #$C312,D1
0003CD3C <AmiBlitz3.ab2@19095>    BSR.w makebtst
0003CD3E <AmiBlitz3.ab2@19096>   MOVE.l (A7)+,D1
0003CD40 <AmiBlitz3.ab2@19099>   ADDQ.w #4,A1
0003CD42 <AmiBlitz3.ab2@19100>   ADDQ.l #6,D1
0003CD46 <AmiBlitz3.ab2@19101> BRA.w JL_0_BC00
0003CD4C <AmiBlitz3.ab2@19104>   TST.w inline
0003CD50 <AmiBlitz3.ab2@19105>    BEQ.w JL_0_BC7E
0003CD52 <AmiBlitz3.ab2@19106>   SUBQ.w #1,A1
0003CD54 <AmiBlitz3.ab2@19107>   MOVEA.l A1,A0
0003CD58 <AmiBlitz3.ab2@19108>   ADDA.w inline(PC),A1
0003CD5C <AmiBlitz3.ab2@19109> BRA.w pokecode2
0003CD60 <AmiBlitz3.ab2@19112>   MOVEM.l a0/D1,-(A7)
0003CD66 <AmiBlitz3.ab2@19113>   TST.w debugversion
0003CD6A <AmiBlitz3.ab2@19114>   BEQ 'l11
0003CD72 <AmiBlitz3.ab2@19115>   BTST #$7,link_debuginfo
0003CD76 <AmiBlitz3.ab2@19116>   BEQ.w 'l11
0003CD7C <AmiBlitz3.ab2@19117>   MOVE.l lastinstruction,d1
0003CD80 <AmiBlitz3.ab2@19118>   BEQ 'l11
0003CD86 <AmiBlitz3.ab2@19119>   CLR.l lastinstruction
0003CD8C <AmiBlitz3.ab2@19120>   CMP.l #$e000,d1
0003CD90 <AmiBlitz3.ab2@19121>   BGE 'ln99
0003CD96 <AmiBlitz3.ab2@19122>   LEA notf,a0
0003CD9C <AmiBlitz3.ab2@19123>   CMP.l #$c601,d1
0003CDA0 <AmiBlitz3.ab2@19124>   BNE 'ln1
0003CDA6 <AmiBlitz3.ab2@19125>   LEA strcpy,a0
0003CDAA <AmiBlitz3.ab2@19126> BRA 'ln3
0003CDB0 <AmiBlitz3.ab2@19129>   CMP.l #$c700,d1
0003CDB4 <AmiBlitz3.ab2@19130>   BNE 'ln2
0003CDBA <AmiBlitz3.ab2@19131>   LEA strvar,a0
0003CDBE <AmiBlitz3.ab2@19132> BRA 'ln3
0003CDC4 <AmiBlitz3.ab2@19135>   CMP.l #$ce00,d1
0003CDC8 <AmiBlitz3.ab2@19136>   BNE 'ln4
0003CDCE <AmiBlitz3.ab2@19137>   LEA strcmp,a0
0003CDD2 <AmiBlitz3.ab2@19138> BRA 'ln3
0003CDD8 <AmiBlitz3.ab2@19141>   CMP.l #$ca00,d1
0003CDDC <AmiBlitz3.ab2@19142>   BNE 'ln5
0003CDE2 <AmiBlitz3.ab2@19143>   LEA qmul,a0
0003CDE6 <AmiBlitz3.ab2@19144> BRA 'ln3
0003CDEC <AmiBlitz3.ab2@19147>   CMP.l #$d000,d1
0003CDF0 <AmiBlitz3.ab2@19148>      BNE 'ln6
0003CDF6 <AmiBlitz3.ab2@19149>      LEA _MaxLen,a0
0003CDFA <AmiBlitz3.ab2@19150> BRA 'ln3
0003CE00 <AmiBlitz3.ab2@19153>   CMP.l #$cb00,d1
0003CE04 <AmiBlitz3.ab2@19154>   BNE 'ln3
0003CE0A <AmiBlitz3.ab2@19155>   LEA qdiv,a0
0003CE0E <AmiBlitz3.ab2@19156> BRA 'ln3
0003CE10 <AmiBlitz3.ab2@19159>   MOVE.l d1,a0
0003CE14 <AmiBlitz3.ab2@19160>   LEA $8(a0),a0
0003CE18 <AmiBlitz3.ab2@19163>   CMP.w #$ffff,(a0)+
0003CE1C <AmiBlitz3.ab2@19164>   BNE 'l1
0003CE20 <AmiBlitz3.ab2@19165>   LEA 6(a0),a0
0003CE24 <AmiBlitz3.ab2@19168>   MOVEM.l a1/a2/d7/d2,-(a7)
0003CE26 <AmiBlitz3.ab2@19169>   MOVEQ #0,d2
0003CE2C <AmiBlitz3.ab2@19170>   LEA ptr_parameterstore,a1
0003CE2E <AmiBlitz3.ab2@19173>   ADDQ.l #1,d2
0003CE30 <AmiBlitz3.ab2@19174>   MOVE.b (a0)+,(a1)+
0003CE34 <AmiBlitz3.ab2@19175>   BNE 'l2
0003CE3A <AmiBlitz3.ab2@19176>   MOVE.w #"__",-1(a1)
0003CE3C <AmiBlitz3.ab2@19177>   ADDQ.l #2,d2
0003CE40 <AmiBlitz3.ab2@19178>   CLR.b 1(a1)
0003CE46 <AmiBlitz3.ab2@19179>   JSR findlabel2
0003CE4A <AmiBlitz3.ab2@19180>   BEQ 'l3
0003CE50 <AmiBlitz3.ab2@19181>   JSR addlabelhash
0003CE54 <AmiBlitz3.ab2@19184>   CLR.l 4(a2)
0003CE58 <AmiBlitz3.ab2@19185>   MOVE.l $14(a7),a0
0003CE5C <AmiBlitz3.ab2@19186>   MOVE.l $10(a7),d1
0003CE60 <AmiBlitz3.ab2@19187>   SUB.l $12(a0),d1
0003CE64 <AmiBlitz3.ab2@19188>   ADD.l $28(a0),d1
0003CE68 <AmiBlitz3.ab2@19189>   MOVE.l d1,8(a2)
0003CE6C <AmiBlitz3.ab2@19190>   MOVEM.l (a7)+,a1/a2/d7/d2
0003CE72 <AmiBlitz3.ab2@19193>   TST.b typecheck
0003CE76 <AmiBlitz3.ab2@19194>   BEQ 'p1
0003CE7C <AmiBlitz3.ab2@19202>   TST.b peekaddrsize
0003CE80 <AmiBlitz3.ab2@19203>   BEQ 'p1
0003CE88 <AmiBlitz3.ab2@19204>   CMP.b #3,peekaddrsize
0003CE8C <AmiBlitz3.ab2@19205>   BNE errormsg_onlylong
0003CE92 <AmiBlitz3.ab2@19206>   CLR.b peekaddrsize
0003CE98 <AmiBlitz3.ab2@19214>    TST.b fpu
0003CE9C <AmiBlitz3.ab2@19215>   BNE 'optf
0003CEA2 <AmiBlitz3.ab2@19216>   TST.b fast
0003CEA6 <AmiBlitz3.ab2@19217>   BEQ JL11a2
0003CEAE <AmiBlitz3.ab2@19224>   CMP.l #"Poke",20(a2)                                     ;poke
0003CEB2 <AmiBlitz3.ab2@19225>   BNE peekopt
0003CEB6 <AmiBlitz3.ab2@19226>   TST.b 24(a2)
0003CEBA <AmiBlitz3.ab2@19227>   BNE peekopt
0003CEBE <AmiBlitz3.ab2@19228>   CMP.b #3,d2
0003CEC2 <AmiBlitz3.ab2@19229>   BNE 'lw1
0003CEC8 <AmiBlitz3.ab2@19232>   MOVE.l #$21821990,d1
0003CECC <AmiBlitz3.ab2@19233> BRA.s 'lpx
0003CED0 <AmiBlitz3.ab2@19236>   CMP.b #2,d2
0003CED4 <AmiBlitz3.ab2@19237>   BNE 'lb1
0003CEDA <AmiBlitz3.ab2@19238>   MOVE.l #$31821990,d1
0003CEDE <AmiBlitz3.ab2@19239> BRA.s 'lpx
0003CEE2 <AmiBlitz3.ab2@19242>   CMP.b #1,d2
0003CEE6 <AmiBlitz3.ab2@19243>   BNE 'lp3
0003CEEC <AmiBlitz3.ab2@19244>   MOVE.l #$11821990,d1
0003CEF0 <AmiBlitz3.ab2@19245> BRA.s 'lpx
0003CEF4 <AmiBlitz3.ab2@19248>   CMP.b #5,d2
0003CEF8 <AmiBlitz3.ab2@19249>     BNE JL11a2
0003CEFE <AmiBlitz3.ab2@19250>     TST.b fpu
0003CF02 <AmiBlitz3.ab2@19251>     BEQ 'll1
0003CF08 <AmiBlitz3.ab2@19252>      MOVE.l destpointer,a4
0003CF10 <AmiBlitz3.ab2@19253>     CMP.l #$f22d4500,-6(a4)
0003CF14 <AmiBlitz3.ab2@19254>     BNE 'noglob
0003CF1A <AmiBlitz3.ab2@19255>     TST.b doublepeek
0003CF1E <AmiBlitz3.ab2@19256>     BNE 'noglob
0003CF24 <AmiBlitz3.ab2@19257>     MOVE.w -2(a4),-4(a4)
0003CF2A <AmiBlitz3.ab2@19258>     MOVE.w #$21ad,-6(a4)
0003CF30 <AmiBlitz3.ab2@19259>     MOVE.w #$1990,-2(a4)
0003CF38 <AmiBlitz3.ab2@19260>     MOVE.w #9,peeksize
0003CF3A <AmiBlitz3.ab2@19261>     ADDQ #8,a7
0003CF3C <AmiBlitz3.ab2@19262> RTS
0003CF44 <AmiBlitz3.ab2@19265>     CMP.l #$f22c4500,-6(a4)
0003CF48 <AmiBlitz3.ab2@19266>     BNE 'nolocal
0003CF4E <AmiBlitz3.ab2@19267>     MOVE.w -2(a4),-4(a4)
0003CF54 <AmiBlitz3.ab2@19268>     TST.b doublepeek                                       ;dont move longfix on double floats
0003CF58 <AmiBlitz3.ab2@19269>     BNE 'nolocal
0003CF5E <AmiBlitz3.ab2@19270>     MOVE.w #$21ac,-6(a4)
0003CF64 <AmiBlitz3.ab2@19271>     MOVE.w #$1990,-2(a4)
0003CF6C <AmiBlitz3.ab2@19272>     MOVE.w #9,peeksize
0003CF6E <AmiBlitz3.ab2@19273>     ADDQ #8,a7
0003CF70 <AmiBlitz3.ab2@19274> RTS
0003CF74 <AmiBlitz3.ab2@19277>     MOVE.w #$f230,d1
0003CF78 <AmiBlitz3.ab2@19278>     BSR writeword
0003CF7E <AmiBlitz3.ab2@19279>   MOVE.l #$65001990,d1
0003CF84 <AmiBlitz3.ab2@19280>   TST.b doublepeek
0003CF88 <AmiBlitz3.ab2@19281>   BEQ 'lpx
0003CF8E <AmiBlitz3.ab2@19282>   OR.l   #$10000000,d1
0003CF90 <AmiBlitz3.ab2@19286>   ADDQ #8,a7
0003CF98 <AmiBlitz3.ab2@19287>   MOVE.w #9,peeksize
0003CF9C <AmiBlitz3.ab2@19288> BRA writelong
0003CFA4 <AmiBlitz3.ab2@19291>   CMP.l #"Peek",20(a2)
0003CFA8 <AmiBlitz3.ab2@19292>   BNE 'l10
0003CFAC <AmiBlitz3.ab2@19293>   TST.b 24(a2)
0003CFB0 <AmiBlitz3.ab2@19294>   BNE 'l10
0003CFB8 <AmiBlitz3.ab2@19295>   CMP.w #7,peeksize
0003CFBC <AmiBlitz3.ab2@19296>   BEQ 'l10
0003CFC4 <AmiBlitz3.ab2@19297>    CMP.w #3,peeksize
0003CFC8 <AmiBlitz3.ab2@19298>    BNE.s 'lw1
0003CFCE <AmiBlitz3.ab2@19301>   MOVE.l #$20301990,d1
0003CFD2 <AmiBlitz3.ab2@19302> BRA exitjsr
0003CFDA <AmiBlitz3.ab2@19305>   CMP.w #2,peeksize
0003CFDE <AmiBlitz3.ab2@19306>    BNE.s 'lb1
0003CFE4 <AmiBlitz3.ab2@19307>    MOVE.l #$30301990,d1
0003CFE8 <AmiBlitz3.ab2@19308> BRA exitjsr
0003CFF0 <AmiBlitz3.ab2@19311>   CMP.w #1,peeksize
0003CFF4 <AmiBlitz3.ab2@19312>    BNE.s 'lf1
0003CFFA <AmiBlitz3.ab2@19313>    MOVE.l #$10301990,d1
0003CFFE <AmiBlitz3.ab2@19314> BRA exitjsr
0003D006 <AmiBlitz3.ab2@19317>   CMP.w #5,peeksize
0003D00A <AmiBlitz3.ab2@19318>    BNE 'l10
0003D010 <AmiBlitz3.ab2@19319>    TST.b fpu
0003D014 <AmiBlitz3.ab2@19320>    BEQ 'll1
0003D018 <AmiBlitz3.ab2@19321>    MOVE.w #$f230,d1
0003D01C <AmiBlitz3.ab2@19322>    BSR writeword
0003D01E <AmiBlitz3.ab2@19323>    MOVEQ #0,d1
0003D024 <AmiBlitz3.ab2@19324>    MOVE.w tempregnum,d1
0003D026 <AmiBlitz3.ab2@19325>    ASL.l #7,d1
0003D028 <AmiBlitz3.ab2@19326>    ASL.l #8,d1
0003D02A <AmiBlitz3.ab2@19327>    ASL.l #8,d1
0003D030 <AmiBlitz3.ab2@19328>    ADD.l #$44001990,d1
0003D036 <AmiBlitz3.ab2@19329>     TST.b doublepeek
0003D03A <AmiBlitz3.ab2@19330>     BEQ 'lpx2
0003D040 <AmiBlitz3.ab2@19331>     OR.l   #$10000000,d1
0003D044 <AmiBlitz3.ab2@19333> BRA exitjsr
0003D048 <AmiBlitz3.ab2@19337>   MOVE.w #$4EB9,D1
0003D04C <AmiBlitz3.ab2@19338>    BSR.w writeword                                         ;writesysjsr
0003D050 <AmiBlitz3.ab2@19339>   MOVEM.l (A7)+,a0/D1
0003D054 <AmiBlitz3.ab2@19340>    BSR.w addoff
0003D058 <AmiBlitz3.ab2@19341>   SUB.l $12(A0),D1
0003D05C <AmiBlitz3.ab2@19342>   ADD.l $28(A0),D1
0003D060 <AmiBlitz3.ab2@19343> BRA.w writelong
0003D062 <AmiBlitz3.ab2@19348>   MOVE.w D1,-(A7)
0003D066 <AmiBlitz3.ab2@19349>   MOVE.w tstmode(PC),D1
0003D06A <AmiBlitz3.ab2@19350>    BSR.w writeword
0003D06E <AmiBlitz3.ab2@19351>    BSR.w getbbase
0003D072 <AmiBlitz3.ab2@19352>    BSR.w writeword
0003D074 <AmiBlitz3.ab2@19353>   MOVE.w (A7)+,D1
0003D078 <AmiBlitz3.ab2@19354>   MOVEM.l D0/D3-D7/A0-A2/A4,-(A7)
0003D07C <AmiBlitz3.ab2@19355>    BSR.w Atokejsr
0003D080 <AmiBlitz3.ab2@19356>   MOVEM.l (A7)+,D0/D3-D7/A0-A2/A4
0003D082 <AmiBlitz3.ab2@19357> RTS
0003D086 <AmiBlitz3.ab2@19365>   MOVE.w blitzoff(PC),D1
0003D08A <AmiBlitz3.ab2@19366>   CMP.w #-$1,D1
0003D08E <AmiBlitz3.ab2@19367>    BNE.w getbbase__done
0003D094 <AmiBlitz3.ab2@19368>   ADDQ.w #1,globalvarpointer
0003D09C <AmiBlitz3.ab2@19369>   BCLR #$0,globalvarpointer+1
0003D0A2 <AmiBlitz3.ab2@19370>   MOVE.w globalvarpointer,D1
0003D0A8 <AmiBlitz3.ab2@19371>   MOVE.w D1,blitzoff
0003D0AE <AmiBlitz3.ab2@19372>   ADDQ.w #2,globalvarpointer
0003D0B0 <AmiBlitz3.ab2@19375> RTS
0003D0B4 <AmiBlitz3.ab2@19379> tstmode:    Dc.b $4A,$6D,$00,$00                           ;TST.W $0000(A5)
0003D0B6 <AmiBlitz3.ab2@19382> inline:     Ds.w 1
0003D0B8 <AmiBlitz3.ab2@19383> blitzoff:   Dc.w $FFFF                                   ;-1 org source
0003D0BA <AmiBlitz3.ab2@19384> blitzmode:  Ds.w 1                                       ;+=amiga, -=blitz
0003D0BC <AmiBlitz3.ab2@19388>   MOVE.w (A2)+,D1
0003D0C0 <AmiBlitz3.ab2@19389>    BEQ.w fetchregs__done
0003D0C2 <AmiBlitz3.ab2@19390>   MOVE.w (A2)+,D2
0003D0C6 <AmiBlitz3.ab2@19391>    BSR.w toreg
0003D0CA <AmiBlitz3.ab2@19392> BRA.w fetchregs
0003D0CC <AmiBlitz3.ab2@19395> RTS
0003D0D0 <AmiBlitz3.ab2@19400>   CMP.w #-$100,D2
0003D0D4 <AmiBlitz3.ab2@19401>    BCC.w toreg__yeah
0003D0D8 <AmiBlitz3.ab2@19403>   BCLR #$F,D2
0003D0DC <AmiBlitz3.ab2@19404>    BEQ.w toreg__nobm
0003D0E2 <AmiBlitz3.ab2@19406>   TST.w blitzmode
0003D0E6 <AmiBlitz3.ab2@19407>    BMI.w toreg__yeah
0003D0E8 <AmiBlitz3.ab2@19408> RTS
0003D0EC <AmiBlitz3.ab2@19411>   BCLR #$E,D2
0003D0F0 <AmiBlitz3.ab2@19412>    BEQ.w toreg__yeah
0003D0F6 <AmiBlitz3.ab2@19414>   TST.w blitzmode
0003D0FA <AmiBlitz3.ab2@19415>    BPL.w toreg__yeah
0003D0FC <AmiBlitz3.ab2@19416> RTS
0003D102 <AmiBlitz3.ab2@19419>   JSR uselib
0003D104 <AmiBlitz3.ab2@19420>   TST.b D2
0003D108 <AmiBlitz3.ab2@19421>    BEQ.w toreg__norm
0003D10C <AmiBlitz3.ab2@19422>   CMP.b #$4,D2
0003D110 <AmiBlitz3.ab2@19423>    BNE.w toreg__suv
0003D114 <AmiBlitz3.ab2@19424>   MOVE.w #$0004,-(A7)
0003D11A <AmiBlitz3.ab2@19425>   MOVE.l #$FFFFFFFA,-(A7)                                  ;#-6,-(a7) org source
0003D11E <AmiBlitz3.ab2@19426> BRA.w toreg__sendmd
0003D122 <AmiBlitz3.ab2@19429>   CMP.b #$3,D2
0003D126 <AmiBlitz3.ab2@19430>    BNE.w toreg__notnmax
0003D128 <AmiBlitz3.ab2@19431>   CLR.w -(A7)
0003D12E <AmiBlitz3.ab2@19432>   MOVE.l #$FFFFFFFC,-(A7)                                  ;#-4,-(a7) org source
0003D130 <AmiBlitz3.ab2@19438>   LSR.w #8,D2
0003D134 <AmiBlitz3.ab2@19439>   MOVE.w #$303C,D1                                         ;move.w #x,dn
0003D138 <AmiBlitz3.ab2@19440>   BTST #$7,D2
0003D13C <AmiBlitz3.ab2@19441>    BEQ.w toreg__skipad
0003D140 <AmiBlitz3.ab2@19442>   MOVE.w #$307C,D1                                         ;move.w #x,an
0003D144 <AmiBlitz3.ab2@19443>   CMP.w #$16,D2
0003D148 <AmiBlitz3.ab2@19444>    BNE.w toreg__skipad
0003D150 <AmiBlitz3.ab2@19445>   MOVE.w #$FFFF,lasta6                                     ;-1 org source
0003D154 <AmiBlitz3.ab2@19448>   ANDI.w #$7,D2
0003D156 <AmiBlitz3.ab2@19449>   LSL.w #8,D2
0003D158 <AmiBlitz3.ab2@19450>   LSL.w #1,D2
0003D15A <AmiBlitz3.ab2@19451>   OR.w D2,D1
0003D15E <AmiBlitz3.ab2@19452>    BSR.w writeword
0003D162 <AmiBlitz3.ab2@19453>   MOVE.l $12(A1),D1
0003D164 <AmiBlitz3.ab2@19454>   ADD.l (A7)+,D1
0003D168 <AmiBlitz3.ab2@19455>   MOVE.w $0(A1,D1.L),D1
0003D16A <AmiBlitz3.ab2@19456>   ADD.w (A7)+,D1
0003D16E <AmiBlitz3.ab2@19457> BRA.w writeword
0003D170 <AmiBlitz3.ab2@19460>   MOVE.w D2,-(A7)
0003D172 <AmiBlitz3.ab2@19461>   LSR.w #8,D2
0003D176 <AmiBlitz3.ab2@19462>   CMP.w #$16,D2
0003D17A <AmiBlitz3.ab2@19463>    BNE.w toreg__isnta6
0003D182 <AmiBlitz3.ab2@19464>   MOVE.w #$FFFF,lasta6                                     ;-1 org source
0003D186 <AmiBlitz3.ab2@19467>   MOVE.l $12(A1),D1                                        ;objectspace
0003D18A <AmiBlitz3.ab2@19468>   MOVE.w -$6(A1,D1.L),-(A7)
0003D18E <AmiBlitz3.ab2@19469>    BSR.w makeregop
0003D192 <AmiBlitz3.ab2@19470>    BSR.w writeword
0003D194 <AmiBlitz3.ab2@19471>   MOVE.w (A7)+,D1
0003D196 <AmiBlitz3.ab2@19472>   MOVE.w (A7)+,D2
0003D198 <AmiBlitz3.ab2@19473>   TST.b D2
0003D19C <AmiBlitz3.ab2@19474>    BPL.w toreg__skippy1
0003D1A0 <AmiBlitz3.ab2@19479>    BSR.w writeword                                         ;move.l x(a5),dn
0003D1A2 <AmiBlitz3.ab2@19480>   MOVE.w D2,-(A7)                                          ;store reg used
0003D1A6 <AmiBlitz3.ab2@19482>   ADDA.l $12(A1),A1
0003D1A8 <AmiBlitz3.ab2@19483>   MOVE.b D2,D1
0003D1AC <AmiBlitz3.ab2@19484>   ANDI.w #$7,D1
0003D1B2 <AmiBlitz3.ab2@19486>   TST.b debugmode
0003D1B6 <AmiBlitz3.ab2@19487>    BEQ.w toreg__norerr
0003D1B8 <AmiBlitz3.ab2@19489>   MOVE.w D1,-(A7)
0003D1BA <AmiBlitz3.ab2@19490>   LSL.w #8,D1
0003D1BC <AmiBlitz3.ab2@19491>   LSL.w #1,D1
0003D1C0 <AmiBlitz3.ab2@19492>   ORI.w #$B07C,D1                                          ;cmp #x,dn
0003D1C4 <AmiBlitz3.ab2@19493>    BSR.w writeword
0003D1C8 <AmiBlitz3.ab2@19494>   MOVE.w -$4(A1),D1
0003D1CC <AmiBlitz3.ab2@19495>    BSR.w writeword
0003D1D0 <AmiBlitz3.ab2@19496>   MOVE.l maxchk(PC),D1                                  ;bcs
0003D1D4 <AmiBlitz3.ab2@19497>    BSR.w writelong
0003D1D6 <AmiBlitz3.ab2@19498>   MOVE.l A2,-(A7)
0003D1DA <AmiBlitz3.ab2@19499>   MOVE.w #$C30A,D1
0003D1DE <AmiBlitz3.ab2@19500>    BSR.w Atokejsr
0003D1E0 <AmiBlitz3.ab2@19501>   MOVEA.l (A7)+,A2
0003D1E2 <AmiBlitz3.ab2@19502>   MOVE.w (A7)+,D1
0003D1E6 <AmiBlitz3.ab2@19505>   MOVE.w -$2(A1),D2                                        ;shift amount
0003D1EA <AmiBlitz3.ab2@19508>   CMP.w #$9,D2
0003D1EE <AmiBlitz3.ab2@19509>    BCS.w toreg__simp
0003D1F2 <AmiBlitz3.ab2@19510>   MOVEM.w D1-D2,-(A7)
0003D1F4 <AmiBlitz3.ab2@19512>   MOVEQ.l #$00,D2                                          ;!!!!!
0003D1F6 <AmiBlitz3.ab2@19514>   LSL.w #8,D2
0003D1F8 <AmiBlitz3.ab2@19515>   LSL.w #1,D2
0003D1FA <AmiBlitz3.ab2@19516>   OR.w D2,D1
0003D1FE <AmiBlitz3.ab2@19517>   OR.w lsldn(PC),D1
0003D202 <AmiBlitz3.ab2@19518>    BSR.w writeword
0003D206 <AmiBlitz3.ab2@19519>   MOVEM.w (A7)+,D1-D2
0003D208 <AmiBlitz3.ab2@19520>   SUBQ.w #8,D2
0003D20C <AmiBlitz3.ab2@19521> BRA.w toreg__shloop
0003D20E <AmiBlitz3.ab2@19524>   MOVE.w D1,-(A7)
0003D212 <AmiBlitz3.ab2@19525>   OR.w #$48c0,d1
0003D216 <AmiBlitz3.ab2@19526>   BSR writeword
0003D218 <AmiBlitz3.ab2@19527>   MOVE.w (a7),d1
0003D21A <AmiBlitz3.ab2@19528>   TST.w D2
0003D21E <AmiBlitz3.ab2@19529>   BEQ.w toreg__simp2
0003D222 <AmiBlitz3.ab2@19531>   ANDI.w #$7,D2                                            ;?????
0003D224 <AmiBlitz3.ab2@19533>   LSL.w #8,D2
0003D226 <AmiBlitz3.ab2@19534>   LSL.w #1,D2
0003D228 <AmiBlitz3.ab2@19535>   OR.w D2,D1
0003D22C <AmiBlitz3.ab2@19536>   OR.w lsldn(PC),D1
0003D230 <AmiBlitz3.ab2@19537>    BSR.w writeword
0003D232 <AmiBlitz3.ab2@19543>   MOVE.w (A7)+,D1
0003D236 <AmiBlitz3.ab2@19544>   ANDI.w #$7,D1
0003D23A <AmiBlitz3.ab2@19545>   OR.w maxdo(PC),D1
0003D23C <AmiBlitz3.ab2@19546>   MOVE.w (A7)+,D2
0003D23E <AmiBlitz3.ab2@19547>   LSL.w #1,D2
0003D242 <AmiBlitz3.ab2@19548>   ANDI.w #$E00,D2
0003D244 <AmiBlitz3.ab2@19549>   OR.w D2,D1
0003D248 <AmiBlitz3.ab2@19550> BRA.w writeword
0003D24C <AmiBlitz3.ab2@19553>   CMP.b #$1,D2
0003D250 <AmiBlitz3.ab2@19554>    BEQ.w toreg__skippy
0003D252 <AmiBlitz3.ab2@19558>   ADDQ.w #4,D1
0003D258 <AmiBlitz3.ab2@19560>   TST.b debugmode
0003D25C <AmiBlitz3.ab2@19561>    BEQ.w toreg__skippy
0003D260 <AmiBlitz3.ab2@19563>    BSR.w writeword
0003D262 <AmiBlitz3.ab2@19564>   SWAP D1
0003D266 <AmiBlitz3.ab2@19565>   MOVE.w toreg__theretest(PC),D1
0003D268 <AmiBlitz3.ab2@19566>   SWAP D1
0003D26C <AmiBlitz3.ab2@19567>    BSR.w writelong
0003D270 <AmiBlitz3.ab2@19568>   MOVE.l toreg__theretest+4(PC),D1
0003D274 <AmiBlitz3.ab2@19569>    BSR.w writelong
0003D278 <AmiBlitz3.ab2@19570>   MOVE.l toreg__theretest+8(PC),D1
0003D27C <AmiBlitz3.ab2@19571> BRA.w writelong
0003D280 <AmiBlitz3.ab2@19574> BRA.w writeword
0003D284 <AmiBlitz3.ab2@19579>             Dc.b $4A,$AD,$00,$00                           ;TST.L  $0000(A5)
0003D288 <AmiBlitz3.ab2@19580>             Dc.b $66,$00,$00,$06                           ;BNE.W  toreg__ttskip
0003D28A <AmiBlitz3.ab2@19581>             Dc.b $70,$01                                   ;MOVEQ  #$01,D0
0003D28C <AmiBlitz3.ab2@19582>             Dc.b $4E,$40                                   ;TRAP   #00
0003D28E <AmiBlitz3.ab2@19587>   LSR.w #8,D2
0003D292 <AmiBlitz3.ab2@19588>   CMP.b #$16,D2
0003D296 <AmiBlitz3.ab2@19589>    BNE.w toreg__nota6
0003D29A <AmiBlitz3.ab2@19590>   MOVE.w $A(A1),D1
0003D2A0 <AmiBlitz3.ab2@19591>   CMP.w lasta6,D1
0003D2A4 <AmiBlitz3.ab2@19592>    BEQ.w toreg__sk
0003D2AA <AmiBlitz3.ab2@19593>   MOVE.w D1,lasta6
0003D2AE <AmiBlitz3.ab2@19596>    BSR.w makeregop
0003D2B2 <AmiBlitz3.ab2@19597>   TST.w $1A(A1)
0003D2B6 <AmiBlitz3.ab2@19598>    BPL.w toreg__long
0003D2BA <AmiBlitz3.ab2@19599>   CMP.w stackop(PC),D1
0003D2BE <AmiBlitz3.ab2@19600>    BNE.w toreg__notst
0003D2C4 <AmiBlitz3.ab2@19601>   SUBQ.w #2,a2offset
0003D2C8 <AmiBlitz3.ab2@19604>    ORI.w #$1000,D1
0003D2CC <AmiBlitz3.ab2@19607>    BSR.w writeword
0003D2D0 <AmiBlitz3.ab2@19608>   MOVE.w $A(A1),D1
0003D2D4 <AmiBlitz3.ab2@19609>    BSR.w writeword
0003D2D6 <AmiBlitz3.ab2@19612> RTS
0003D2D8 <AmiBlitz3.ab2@19616> lsldn:      Dc.b $E1,$88                 ;Dc.b $48 ;object long acsess    ;LSL.L   #8,D0
0003D2DC <AmiBlitz3.ab2@19617> maxchk:     Dc.b $65,$00,$00,$08                                          ;BCS.W   maxchk__ok
0003D2E2 <AmiBlitz3.ab2@19618>             Dc.b $4E,$B9,$00,$00,$00,$00                                  ;JSR     $00000000
0003D2E4 <AmiBlitz3.ab2@19621> 
0003D2E6 <AmiBlitz3.ab2@19624>             Dc.b $00,$00
0003D2EA <AmiBlitz3.ab2@19625> stackop:    Dc.b $2F,$2D,$00,$00                                          ;MOVE.L  $0000(A5),-(A7)
0003D2EE <AmiBlitz3.ab2@19632>   CMP.b #$FF,D2
0003D2F2 <AmiBlitz3.ab2@19633>    BNE.w makeregop__notst
0003D2F6 <AmiBlitz3.ab2@19634>   MOVE.w stackop(PC),D1
0003D2FC <AmiBlitz3.ab2@19635>   ADDQ.w #4,a2offset
0003D2FE <AmiBlitz3.ab2@19636> RTS
0003D300 <AmiBlitz3.ab2@19639>   MOVE.l A3,-(A7)
0003D306 <AmiBlitz3.ab2@19640>   LEA regtransd,A3
0003D30A <AmiBlitz3.ab2@19641>   BTST #$4,D2
0003D30E <AmiBlitz3.ab2@19642>    BEQ.w makeregop__skip
0003D314 <AmiBlitz3.ab2@19643>   LEA regtransa,A3
0003D318 <AmiBlitz3.ab2@19646>   ANDI.w #$7,D2
0003D31A <AmiBlitz3.ab2@19647>   MOVE.w D2,D1
0003D31C <AmiBlitz3.ab2@19648>   LSL.w #8,D1
0003D31E <AmiBlitz3.ab2@19649>   LSL.w #1,D1
0003D320 <AmiBlitz3.ab2@19650>   OR.w (A3),D1
0003D322 <AmiBlitz3.ab2@19651>   MOVEA.l (A7)+,A3
0003D324 <AmiBlitz3.ab2@19652> RTS
0003D328 <AmiBlitz3.ab2@19658>   CMP.w #$3C,D0
0003D32C <AmiBlitz3.ab2@19659>    BCS.w ifchar__no
0003D330 <AmiBlitz3.ab2@19660>   CMP.w #$3E,D0
0003D334 <AmiBlitz3.ab2@19661>    BHI.w ifchar__no
0003D338 <AmiBlitz3.ab2@19662>   SUBI.w #$3C,D0
0003D33A <AmiBlitz3.ab2@19663>   CMP.w D0,D0
0003D33C <AmiBlitz3.ab2@19666> RTS
0003D346 <AmiBlitz3.ab2@19671>   MOVE.w oldqflag,instringon
0003D34C <AmiBlitz3.ab2@19672>   MOVEA.l lastsourcepos,A5
0003D352 <AmiBlitz3.ab2@19675>   MOVE.w regnum,-(A7)
0003D358 <AmiBlitz3.ab2@19676>   CLR.w regnum
0003D35E <AmiBlitz3.ab2@19677>   MOVE.l destpointer,-(A7)
0003D364 <AmiBlitz3.ab2@19678>   MOVE.l destbufferend,-(A7)
0003D36A <AmiBlitz3.ab2@19679>   MOVE.w dontwrite,-(A7)
0003D370 <AmiBlitz3.ab2@19680>   MOVE.w lasta6,-(A7)
0003D376 <AmiBlitz3.ab2@19681>   MOVE.w cfetchmode,-(A7)
0003D37A <AmiBlitz3.ab2@19682>    BNE.w JL_0_BFB6
0003D384 <AmiBlitz3.ab2@19683>   MOVE.l destbufferend,oldlibat
0003D38A <AmiBlitz3.ab2@19684>   MOVEA.l constpcat,A0
0003D390 <AmiBlitz3.ab2@19685>   MOVE.l A0,destpointer
0003D394 <AmiBlitz3.ab2@19686> BRA.w JL_0_BFBC
0003D39A <AmiBlitz3.ab2@19689>   MOVEA.l destpointer,A0
0003D39C <AmiBlitz3.ab2@19692>   MOVE.l A0,-(A7)
0003D3A6 <AmiBlitz3.ab2@19693>   MOVE.l constlibat,destbufferend
0003D3AC <AmiBlitz3.ab2@19694>   CLR.w dontwrite
0003D3B4 <AmiBlitz3.ab2@19696>   MOVE.w #$FFFF,lasta6
0003D3BC <AmiBlitz3.ab2@19697>   MOVE.w #$FFFF,cfetchmode
0003D3C0 <AmiBlitz3.ab2@19699>     BSR.w arreval
0003D3C2 <AmiBlitz3.ab2@19700>    MOVE.l (a7),a0
0003D4FE <AmiBlitz3.ab2@19702>  !newcalc
0003D502 <AmiBlitz3.ab2@19703>    BEQ 'l10
0003D504 <AmiBlitz3.ab2@19704>    MOVE.l d0,d3
0003D506 <AmiBlitz3.ab2@19705>    MOVEA.l (A7)+,A0
0003D50A <AmiBlitz3.ab2@19706> BRA bc1
0003D50E <AmiBlitz3.ab2@19709>    MOVE.w #$2600,D1
0003D514 <AmiBlitz3.ab2@19710>   OR.w regnum,D1
0003D518 <AmiBlitz3.ab2@19711>    BSR.w writeword
0003D51C <AmiBlitz3.ab2@19712>   MOVE.w #$4E75,D1
0003D520 <AmiBlitz3.ab2@19713>    BSR.w writeword
0003D526 <AmiBlitz3.ab2@19714>   MOVE.w dontwrite,D1
0003D52A <AmiBlitz3.ab2@19715>    BNE.w conmemerr
0003D52C <AmiBlitz3.ab2@19716>   MOVEA.l (A7)+,A0
0003D52E <AmiBlitz3.ab2@19717>   NOP
0003D534 <AmiBlitz3.ab2@19718>    JSR Aclearcache                                         ;simple expression
0003D536 <AmiBlitz3.ab2@19721>    JSR (A0)                                                ;writeresult
0003D53C <AmiBlitz3.ab2@19724>   MOVE.w (A7)+,cfetchmode
0003D542 <AmiBlitz3.ab2@19725>   MOVE.w (A7)+,lasta6
0003D548 <AmiBlitz3.ab2@19726>   MOVE.w (A7)+,dontwrite
0003D54E <AmiBlitz3.ab2@19727>   MOVE.l (A7)+,destbufferend
0003D554 <AmiBlitz3.ab2@19728>   MOVE.l (A7)+,destpointer
0003D55A <AmiBlitz3.ab2@19729>   MOVE.w (A7)+,regnum
0003D560 <AmiBlitz3.ab2@19730> JMP reget
0003D564 <AmiBlitz3.ab2@19733> oldlibat:   Ds.l 1
0003D56A <AmiBlitz3.ab2@19737>   LEA incdir,A0
0003D56E <AmiBlitz3.ab2@19740>   CMP.w #$22,D0
0003D572 <AmiBlitz3.ab2@19741>    BEQ.w JL_0_C052
0003D574 <AmiBlitz3.ab2@19742>   MOVE.b D0,(A0)+
0003D576 <AmiBlitz3.ab2@19743>   TST.w D0
0003D57A <AmiBlitz3.ab2@19744>    BEQ.w JL_0_C05A
0003D57E <AmiBlitz3.ab2@19745>    BMI.w syntaxerr
0003D584 <AmiBlitz3.ab2@19748>   JSR get1bytemain                                         ;_long
0003D588 <AmiBlitz3.ab2@19749> BRA.w JL_0_C03E
0003D58A <AmiBlitz3.ab2@19752> RTS
0003D590 <AmiBlitz3.ab2@19756>   LEA ptr_parameterstore,A1                                ;getparameter
0003D596 <AmiBlitz3.ab2@19757>   LEA incdir,A0
0003D598 <AmiBlitz3.ab2@19758>   MOVEQ.l #-$01,D2
0003D59A <AmiBlitz3.ab2@19761>     ADDQ.w #1,D2
0003D59C <AmiBlitz3.ab2@19762>     MOVE.b (A0)+,(A1)+
0003D5A0 <AmiBlitz3.ab2@19763>   BNE.w JL_0_C06A
0003D5A2 <AmiBlitz3.ab2@19764>   SUBQ.w #1,A1
0003D5AC <AmiBlitz3.ab2@19766>   MOVE.w oldqflag,instringon
0003D5B2 <AmiBlitz3.ab2@19767>   MOVEA.l lastsourcepos,A5
0003D5B8 <AmiBlitz3.ab2@19771>   JSR get1bytemain
0003D5BA <AmiBlitz3.ab2@19772>   TST.w D0
0003D5BE <AmiBlitz3.ab2@19773>    BMI.w syntaxerr
0003D5C2 <AmiBlitz3.ab2@19774>   CMP.b #$22,D0
0003D5C6 <AmiBlitz3.ab2@19775>    BEQ.w JL_0_C078
0003D5C8 <AmiBlitz3.ab2@19776>   MOVE.b D0,(A1)+
0003D5CC <AmiBlitz3.ab2@19777>    BEQ.w JL_0_C096
0003D5CE <AmiBlitz3.ab2@19778>   ADDQ.w #1,D2
0003D5D2 <AmiBlitz3.ab2@19779> BRA.w JL_0_C078
0003D5D4 <AmiBlitz3.ab2@19782>   TST.w D2
0003D5D8 <AmiBlitz3.ab2@19783>    BEQ.w syntaxerr
0003D5DA <AmiBlitz3.ab2@19784> RTS
0003D5E0 <AmiBlitz3.ab2@19788>   MOVEA.l constantbase,A2
0003D5E4 <AmiBlitz3.ab2@19789>   MOVEA.l $E(A2),A5
0003D5EA <AmiBlitz3.ab2@19790>   MOVE.l a5,includesourceline
0003D5F0 <AmiBlitz3.ab2@19791>   LEA inctab,a0
0003D5F6 <AmiBlitz3.ab2@19792>   MOVE.w ininclude,d0
0003D5FA <AmiBlitz3.ab2@19793>   MOVE.l $0(a0,d0*4),d0
0003D5FE <AmiBlitz3.ab2@19794>   MOVEA.l $4(A2),A0
0003D602 <AmiBlitz3.ab2@19796>   LEA $0(A0,D0.l),A0
0003D604 <AmiBlitz3.ab2@19797>   MOVEA.l A5,A1
0003D606 <AmiBlitz3.ab2@19800>     CMPA.l A0,A1
0003D60A <AmiBlitz3.ab2@19801>      BCC.w JL_0_C0C6
0003D60C <AmiBlitz3.ab2@19802>   TST.b (A1)+
0003D610 <AmiBlitz3.ab2@19803>   BNE.w JL_0_C0B6
0003D614 <AmiBlitz3.ab2@19804> BRA.w JL_0_C112
0003D618 <AmiBlitz3.ab2@19807>   MOVEA.l $4(A2),A1
0003D61A <AmiBlitz3.ab2@19810>   CMPA.l A0,A5
0003D61E <AmiBlitz3.ab2@19811>   BCC.w JL_0_C0D6
0003D620 <AmiBlitz3.ab2@19812>   MOVE.b (A5)+,(A1)+
0003D624 <AmiBlitz3.ab2@19813> BRA.w JL_0_C0CA
0003D626 <AmiBlitz3.ab2@19816>   MOVE.l A1,D0
0003D62A <AmiBlitz3.ab2@19817>   SUB.l $4(A2),D0
0003D630 <AmiBlitz3.ab2@19818>   LEA inctab,a0
0003D632 <AmiBlitz3.ab2@19819>   MOVEQ #0,d1
0003D638 <AmiBlitz3.ab2@19820>   MOVE.w ininclude,d1
0003D63C <AmiBlitz3.ab2@19821>   MOVE.l d0,0(a0,d1*4)
0003D642 <AmiBlitz3.ab2@19823>   MOVEA.l _dosbase,A6
0003D646 <AmiBlitz3.ab2@19824>   MOVE.l $8(A2),D1
0003D648 <AmiBlitz3.ab2@19825>   MOVE.l A1,D2
0003D64E <AmiBlitz3.ab2@19826>   MOVE.l D2,include_base
0003D654 <AmiBlitz3.ab2@19828>   MOVE.l #$10000000,d3                                     ;load whole file
0003D656 <AmiBlitz3.ab2@19829>   SUB.l D0,D3
0003D65A <AmiBlitz3.ab2@19830>    JSR _Read(A6)
0003D65C <AmiBlitz3.ab2@19831>   TST.l D0
0003D660 <AmiBlitz3.ab2@19832>    BMI.w error_reading_file
0003D664 <AmiBlitz3.ab2@19833>    BEQ.w JL_0_C120
0003D66A <AmiBlitz3.ab2@19834>    MOVE.l D0,include_length
0003D6AC <AmiBlitz3.ab2@19835>    !ComData_GetL{comPtr_PreProcessor,include_preprocessor}
0003D6D6 <AmiBlitz3.ab2@19836>    !basic
0003D6E6 <AmiBlitz3.ab2@19837>    ilen.l  = Peek.l(?include_length)
0003D6F6 <AmiBlitz3.ab2@19838>    ibase.l = Peek.l(?include_base)
0003D706 <AmiBlitz3.ab2@19839>    ido.l   = Peek.l(?include_process)
0003D716 <AmiBlitz3.ab2@19840>    *tn.preprocessor = Peek.l(?include_preprocessor)
0003D720 <AmiBlitz3.ab2@19841>    If ido
0003D732 <AmiBlitz3.ab2@19842>      ioffset.l = SkipXtraHeader{ibase,ilen}
0003D758 <AmiBlitz3.ab2@19843>      nilen.l = preproc_Tokenize{*tn,ibase+ioffset,ibase,ilen-ioffset}
0003D76A <AmiBlitz3.ab2@19844>      If nilen>0
0003D77A <AmiBlitz3.ab2@19848>        Poke.l ?include_length,nilen
0003D798 <AmiBlitz3.ab2@19851>    !asm
0003D7A2 <AmiBlitz3.ab2@19852>    MOVE.l #0,include_process
0003D7A8 <AmiBlitz3.ab2@19853>    MOVE.l include_length,D0
0003D7AE <AmiBlitz3.ab2@19854>    LEA inctab,a0
0003D7B0 <AmiBlitz3.ab2@19855>    MOVEQ #0,d1
0003D7B6 <AmiBlitz3.ab2@19856>    MOVE.w ininclude,d1
0003D7BA <AmiBlitz3.ab2@19857>    ADD.l d0,0(a0,d1*4)
0003D7BE <AmiBlitz3.ab2@19859>   MOVEA.l $4(A2),A5
0003D7C2 <AmiBlitz3.ab2@19861>    MOVE.l 0(a0,d1*4),d0
0003D7C6 <AmiBlitz3.ab2@19862>   CLR.b $0(A5,D0.l)
0003D7C8 <AmiBlitz3.ab2@19865>   MOVEA.l A5,A0
0003D7CA <AmiBlitz3.ab2@19868>     TST.b (A0)+
0003D7CE <AmiBlitz3.ab2@19869>   BNE.w JL_0_C114
0003D7D2 <AmiBlitz3.ab2@19870>   MOVE.l A0,$E(A2)
0003D7D4 <AmiBlitz3.ab2@19871> RTS
0003D7D8 <AmiBlitz3.ab2@19874> include_length:        Dc.l 0                              ; for tokenizer!
0003D7DC <AmiBlitz3.ab2@19875> include_base:          Dc.l 0
0003D7E0 <AmiBlitz3.ab2@19876> include_process:       Dc.l 0
0003D7E4 <AmiBlitz3.ab2@19877> include_preprocessor:  Dc.l 0
0003D7E8 <AmiBlitz3.ab2@19881>   MOVE.l $8(A2),D1
0003D7EE <AmiBlitz3.ab2@19883>   MOVEA.l _dosbase,A6
0003D7F2 <AmiBlitz3.ab2@19884>   JSR _Close(a6)
0003D7F8 <AmiBlitz3.ab2@19885>   MOVEA.l _execbase,A6
0003D7FC <AmiBlitz3.ab2@19886>   MOVEA.l $4(A2),A1
0003D802 <AmiBlitz3.ab2@19887>   MOVE.l #$400*8,D0                                        ;exit include
0003D806 <AmiBlitz3.ab2@19889>   JSR _FreeVec(a6)
0003D80C <AmiBlitz3.ab2@19892>   MOVE.l (A2),constantbase
0003D80E <AmiBlitz3.ab2@19893>   MOVEA.l A2,A1
0003D810 <AmiBlitz3.ab2@19894>   MOVEQ.l #$00,D0
0003D814 <AmiBlitz3.ab2@19895>   MOVE.b $12(A2),D0
0003D81A <AmiBlitz3.ab2@19896>   MOVEA.l _execbase,A6
0003D820 <AmiBlitz3.ab2@19897>   MOVE.l mempool2,a0
0003D824 <AmiBlitz3.ab2@19898>   JSR _FreePooled(A6)
0003D82A <AmiBlitz3.ab2@19899>   JSR zero_includename
0003D830 <AmiBlitz3.ab2@19900>   SUBQ.w #1,ininclude
0003D834 <AmiBlitz3.ab2@19901>   BNE.w AJL_0_C09E
0003D83A <AmiBlitz3.ab2@19904>   LEA _include,a0
0003D83E <AmiBlitz3.ab2@19905>   MOVEM.l a0-a6/d0-d7,-(a7)
0003D844 <AmiBlitz3.ab2@19906>   LEA ptr_parameterstore,a1
0003D846 <AmiBlitz3.ab2@19909>     MOVE.b (a0)+,(a1)+
0003D84A <AmiBlitz3.ab2@19910>   BNE 'l1b
0003D84C <AmiBlitz3.ab2@19911>   MOVEQ #9,d2
0003D852 <AmiBlitz3.ab2@19912>   JSR findlabel2
0003D856 <AmiBlitz3.ab2@19913>   BNE 'd
0003D85A <AmiBlitz3.ab2@19914>   CLR.l 8(a2)
0003D85E <AmiBlitz3.ab2@19917>   MOVEM.l (a7)+,a0-a6/d0-d7
0003D860 <AmiBlitz3.ab2@19918> RTS
0003D866 <AmiBlitz3.ab2@19922>   MOVE.l unusedfunc,d0
0003D86A <AmiBlitz3.ab2@19923>   BEQ 'noclear
0003D86E <AmiBlitz3.ab2@19924>   MOVEM.l d0-d2/a0-a1/a6,-(a7)
0003D870 <AmiBlitz3.ab2@19927>     MOVE.l d0,a1
0003D874 <AmiBlitz3.ab2@19928>     MOVE.l 4(a1),d0
0003D876 <AmiBlitz3.ab2@19929>     MOVE.l (a1),d2
0003D87C <AmiBlitz3.ab2@19930>     MOVE.l _execbase,a6
0003D880 <AmiBlitz3.ab2@19931>     JSR _FreeMem(a6)
0003D882 <AmiBlitz3.ab2@19932>     MOVE.l d2,d0
0003D886 <AmiBlitz3.ab2@19933>   BNE 'f1
0003D88C <AmiBlitz3.ab2@19934>   CLR.l unusedfunc
0003D890 <AmiBlitz3.ab2@19935>   MOVEM.l (a7)+,a0-a1/a6/d0-d2
0003D892 <AmiBlitz3.ab2@19938> RTS
0003D898 <AmiBlitz3.ab2@19942>   MOVEA.l xinclude_base,A2
0003D89E <AmiBlitz3.ab2@19943>   CLR.l xinclude_base
0003D8A2 <AmiBlitz3.ab2@19946>     CMPA.w #$0,A2
0003D8A6 <AmiBlitz3.ab2@19947>      BEQ.w JL_0_C186
0003D8A8 <AmiBlitz3.ab2@19948>     MOVEQ.l #$00,D0
0003D8AC <AmiBlitz3.ab2@19949>     MOVE.b 4+8(A2),D0
0003D8AE <AmiBlitz3.ab2@19950>     MOVEA.l A2,A1
0003D8B0 <AmiBlitz3.ab2@19951>     MOVEA.l (A2),A2
0003D8B6 <AmiBlitz3.ab2@19952>     MOVEA.l _execbase,A6
0003D8BC <AmiBlitz3.ab2@19953>     MOVE.l mempool2,a0
0003D8C0 <AmiBlitz3.ab2@19954>     JSR _FreePooled(A6)
0003D8C4 <AmiBlitz3.ab2@19955> BRA.w JL_0_C168
0003D8C6 <AmiBlitz3.ab2@19958> RTS
0003D8CC <AmiBlitz3.ab2@19962>   MOVEA.l constantbase,A2
0003D8D2 <AmiBlitz3.ab2@19963>   CLR.l constantbase
0003D8D6 <AmiBlitz3.ab2@19966>     CMPA.w #$0,A2
0003D8DA <AmiBlitz3.ab2@19967>      BEQ.w JL_0_C1DC
0003D8DE <AmiBlitz3.ab2@19968>     MOVE.l $8(A2),D1
0003D8E2 <AmiBlitz3.ab2@19969>      BEQ.w JL_0_C1AE
0003D8E8 <AmiBlitz3.ab2@19970>     MOVEA.l _dosbase,A6
0003D8EC <AmiBlitz3.ab2@19971>      JSR _Close(A6)
0003D8F0 <AmiBlitz3.ab2@19974>     MOVE.l $4(A2),D0
0003D8F4 <AmiBlitz3.ab2@19975>      BEQ.w JL_0_C1C6
0003D8F6 <AmiBlitz3.ab2@19976>     MOVEA.l D0,A1
0003D8FC <AmiBlitz3.ab2@19977>     MOVE.l #$400*8,D0
0003D902 <AmiBlitz3.ab2@19978>     MOVEA.l _execbase,A6
0003D908 <AmiBlitz3.ab2@19979>     MOVE.l mempool,a0
0003D90C <AmiBlitz3.ab2@19980>     JSR _FreeVec(a6)
0003D90E <AmiBlitz3.ab2@19983>     MOVEQ.l #$00,D0
0003D912 <AmiBlitz3.ab2@19984>     MOVE.b $12(A2),D0
0003D914 <AmiBlitz3.ab2@19985>     MOVEA.l A2,A1
0003D916 <AmiBlitz3.ab2@19986>     MOVEA.l (A2),A2
0003D91C <AmiBlitz3.ab2@19987>     MOVEA.l _execbase,A6
0003D922 <AmiBlitz3.ab2@19988>     MOVE.l mempool2,a0
0003D926 <AmiBlitz3.ab2@19989>     JSR _FreePooled(A6)
0003D92A <AmiBlitz3.ab2@19990> BRA.w JL_0_C194
0003D92C <AmiBlitz3.ab2@19993> RTS
0003D92E <AmiBlitz3.ab2@19997>   SWAP D0
0003D932 <AmiBlitz3.ab2@19998>    BSR.w JL_0_C1E6
0003D934 <AmiBlitz3.ab2@19999>   SWAP D0
0003D93A <AmiBlitz3.ab2@20002>   MOVEA.l data2,A4
0003D940 <AmiBlitz3.ab2@20003>   CMPA.l allat,A4
0003D944 <AmiBlitz3.ab2@20004>    BCC.w JL_0_C200
0003D946 <AmiBlitz3.ab2@20005>   MOVE.w D0,(A4)+
0003D94C <AmiBlitz3.ab2@20006>   MOVE.l A4,data2
0003D94E <AmiBlitz3.ab2@20007> RTS
0003D956 <AmiBlitz3.ab2@20010>   MOVE.w #$FFFF,dontwrite
0003D95C <AmiBlitz3.ab2@20011>   ADDQ.l #2,data2
0003D95E <AmiBlitz3.ab2@20012> RTS
0003D964 <AmiBlitz3.ab2@20016>   MOVEA.l data2,A4
0003D96A <AmiBlitz3.ab2@20017>   CMPA.l allat,A4
0003D96E <AmiBlitz3.ab2@20018>    BCC.w JL_0_C22A
0003D970 <AmiBlitz3.ab2@20019>   MOVE.b D0,(A4)+
0003D976 <AmiBlitz3.ab2@20020>   MOVE.l A4,data2
0003D978 <AmiBlitz3.ab2@20021> RTS
0003D980 <AmiBlitz3.ab2@20024>   MOVE.w #$FFFF,dontwrite
0003D986 <AmiBlitz3.ab2@20025>   ADDQ.l #1,data2
0003D988 <AmiBlitz3.ab2@20026> RTS
0003D98C <AmiBlitz3.ab2@20030>   CMP.w #$22,D0
0003D990 <AmiBlitz3.ab2@20031>    BNE.w syntaxerr
0003D996 <AmiBlitz3.ab2@20035>   JSR get1bytemain
0003D99A <AmiBlitz3.ab2@20036>   CMP.b #$22,D0
0003D99E <AmiBlitz3.ab2@20037>    BEQ.w JL_0_C25A
0003D9A0 <AmiBlitz3.ab2@20038>   TST.w D0
0003D9A4 <AmiBlitz3.ab2@20039>    BEQ.w syntaxerr
0003D9A6 <AmiBlitz3.ab2@20040>   MOVE.b D0,(A0)+
0003D9AA <AmiBlitz3.ab2@20041> BRA.w JL_0_C242
0003D9AC <AmiBlitz3.ab2@20044>   CLR.b (A0)
0003D9AE <AmiBlitz3.ab2@20045> RTS
0003D9B0 <AmiBlitz3.ab2@20048>   TST.l D3
0003D9B2 <AmiBlitz3.ab2@20049> RTS
0003D9B8 <AmiBlitz3.ab2@20052>   LEA ptr_parameterstore,A0
0003D9BE <AmiBlitz3.ab2@20053>   LEA namebuff2,A1
0003D9C0 <AmiBlitz3.ab2@20056>     MOVE.b (A0)+,D0
0003D9C4 <AmiBlitz3.ab2@20057>     BEQ.w JL_0_C27C
0003D9C6 <AmiBlitz3.ab2@20058>   CMP.b (A1)+,D0
0003D9CA <AmiBlitz3.ab2@20059>   BEQ.w JL_0_C26E
0003D9CC <AmiBlitz3.ab2@20060> RTS
0003D9CE <AmiBlitz3.ab2@20063>   TST.b (A1)
0003D9D2 <AmiBlitz3.ab2@20064>   BNE.w JL_0_C284
0003D9D4 <AmiBlitz3.ab2@20065> RTS
0003D9D8 <AmiBlitz3.ab2@20068>   CMP.w #$1,D0
0003D9DA <AmiBlitz3.ab2@20069> RTS
0003D9DE <AmiBlitz3.ab2@20073>   CMP.w #$2E,D0                                            ;dodeftype
0003D9E2 <AmiBlitz3.ab2@20074>    BNE.w syntaxerr
0003D9E6 <AmiBlitz3.ab2@20075>   BSR.w getparameter2
0003D9EC <AmiBlitz3.ab2@20076>   LEA newtypebase,A2
0003D9F0 <AmiBlitz3.ab2@20077>   BSR.w findtype
0003D9F4 <AmiBlitz3.ab2@20078>    BNE.w notypeerr
0003D9FA <AmiBlitz3.ab2@20079>   TST.b declare
0003D9FE <AmiBlitz3.ab2@20080>    BNE 'l1
0003DA04 <AmiBlitz3.ab2@20081>   TST.b declare2
0003DA08 <AmiBlitz3.ab2@20082>    BEQ 'l2
0003DA10 <AmiBlitz3.ab2@20085>   MOVE.b #2,nowdeclare
0003DA16 <AmiBlitz3.ab2@20089>   JSR reget
0003DA1A <AmiBlitz3.ab2@20090>    BNE.w JL_0_C2B4
0003DA20 <AmiBlitz3.ab2@20091>   MOVE.l A2,defaulttype
0003DA22 <AmiBlitz3.ab2@20092> RTS
0003DA28 <AmiBlitz3.ab2@20095>   MOVE.l defaulttype,-(A7)
0003DA2E <AmiBlitz3.ab2@20096>   MOVE.l A2,defaulttype
0003DA32 <AmiBlitz3.ab2@20099>   BSR.w getparameter
0003DA36 <AmiBlitz3.ab2@20100>    BSR.w JL_0_8E3C
0003DA3A <AmiBlitz3.ab2@20101>   CMP.w #$2C,D0
0003DA3E <AmiBlitz3.ab2@20102>    BNE.w JL_0_C2D8
0003DA44 <AmiBlitz3.ab2@20103>    JSR get1bytemain                                        ; was BSR.w
0003DA48 <AmiBlitz3.ab2@20104> BRA.w JL_0_C2C0
0003DA4E <AmiBlitz3.ab2@20107>   MOVE.l (A7)+,defaulttype
0003DA50 <AmiBlitz3.ab2@20108> RTS
0003DA54 <AmiBlitz3.ab2@20112>   LEA $4(A5),A2                                            ;fehler function
0003DA56 <AmiBlitz3.ab2@20115>   MOVE.l A2,D0
0003DA5A <AmiBlitz3.ab2@20118>   BSR.w getparameter
0003DA5E <AmiBlitz3.ab2@20119>   BSR.w JL_0_8E3C
0003DA62 <AmiBlitz3.ab2@20120>   BSR.w calcvar
0003DA66 <AmiBlitz3.ab2@20121>   CMP.b #$7,D2
0003DA6A <AmiBlitz3.ab2@20122>    BNE.w mismatcherr
0003DA6E <AmiBlitz3.ab2@20123>   MOVE.w varmode(PC),-(A7)
0003DA72 <AmiBlitz3.ab2@20124>   CMP.w #$3D,D0
0003DA76 <AmiBlitz3.ab2@20125>    BNE.w syntaxerr
0003DA7A <AmiBlitz3.ab2@20126>   BTST #$F,D2
0003DA7E <AmiBlitz3.ab2@20127>    BNE.w JL_0_C31C
0003DA82 <AmiBlitz3.ab2@20128>   MOVE.w JL_0_C2E0(PC),D1
0003DA86 <AmiBlitz3.ab2@20129>   BSR.w pokewda5s
0003DA88 <AmiBlitz3.ab2@20130>   MOVE.w D3,D1
0003DA8C <AmiBlitz3.ab2@20131>   BSR.w writeword
0003DA90 <AmiBlitz3.ab2@20134>   MOVE.w L_0_C2E4(PC),D1
0003DA94 <AmiBlitz3.ab2@20135>   BSR.w writeword
0003DA9A <AmiBlitz3.ab2@20136>   ADDQ.w #1,regnum
0003DA9C <AmiBlitz3.ab2@20137>   MOVEQ.l #$03,D2
0003DAA0 <AmiBlitz3.ab2@20138>   BSR.w eval
0003DAA6 <AmiBlitz3.ab2@20139>   MOVE.l #$D000,D1
0003DAAC <AmiBlitz3.ab2@20140>   MOVE.l d1,lastinstruction
0003DAAE <AmiBlitz3.ab2@20141>   TST.w (A7)+
0003DAB2 <AmiBlitz3.ab2@20142>    BEQ.w Atokejsr
0003DAB4 <AmiBlitz3.ab2@20143>   ADDQ.w #1,D1
0003DAB8 <AmiBlitz3.ab2@20144> BRA.w Atokejsr
0003DABA <AmiBlitz3.ab2@20148>   MOVE.w D0,D1
0003DABE <AmiBlitz3.ab2@20149>    BPL.w syntaxerr
0003DAC2 <AmiBlitz3.ab2@20150>   BCLR #$F,D1
0003DAC8 <AmiBlitz3.ab2@20151>    JSR searchinstr
0003DACC <AmiBlitz3.ab2@20152>   MOVE.l $12(A2),D0
0003DAD0 <AmiBlitz3.ab2@20153>   TST.w -$2(A2,D0.L)
0003DAD4 <AmiBlitz3.ab2@20154>    BEQ.w freeerr
0003DAD6 <AmiBlitz3.ab2@20155>   MOVEQ.l #$02,D2
0003DAD8 <AmiBlitz3.ab2@20156>   MOVE.l A2,-(A7)
0003DADC <AmiBlitz3.ab2@20157>    BSR.w eval
0003DADE <AmiBlitz3.ab2@20158>   MOVEA.l (A7)+,A2
0003DAE4 <AmiBlitz3.ab2@20159>   MOVE.l A2,mymaxlib
0003DAE8 <AmiBlitz3.ab2@20160>   ADDA.l $12(A2),A2
0003DAEE <AmiBlitz3.ab2@20161>   TST.b debugmode
0003DAF2 <AmiBlitz3.ab2@20162>    BEQ.w JL_0_C3A8
0003DAF8 <AmiBlitz3.ab2@20163>   MOVE.w regnum,D1
0003DAFA <AmiBlitz3.ab2@20164>   LSL.w #8,D1
0003DAFC <AmiBlitz3.ab2@20165>   LSL.w #1,D1
0003DB00 <AmiBlitz3.ab2@20166>   ORI.w #$B07C,D1
0003DB04 <AmiBlitz3.ab2@20167>    BSR.w writeword
0003DB08 <AmiBlitz3.ab2@20168>   MOVE.w -$4(A2),D1
0003DB0C <AmiBlitz3.ab2@20169>    BSR.w writeword
0003DB12 <AmiBlitz3.ab2@20170>   MOVE.l maxchk,D1
0003DB16 <AmiBlitz3.ab2@20171>    BSR.w writelong
0003DB18 <AmiBlitz3.ab2@20172>   MOVE.l A2,-(A7)
0003DB1C <AmiBlitz3.ab2@20173>   MOVE.w #$C30A,D1
0003DB20 <AmiBlitz3.ab2@20174>    BSR.w Atokejsr
0003DB22 <AmiBlitz3.ab2@20175>   MOVEA.l (A7)+,A2
0003DB26 <AmiBlitz3.ab2@20178>   MOVE.w -$2(A2),D2
0003DB2C <AmiBlitz3.ab2@20181>   MOVE.w regnum,D1
0003DB32 <AmiBlitz3.ab2@20182>   OR.w lslimm,D1
0003DB36 <AmiBlitz3.ab2@20183>   CMP.w #$8,D2
0003DB3A <AmiBlitz3.ab2@20184>    BCS.w JL_0_C3CE
0003DB3E <AmiBlitz3.ab2@20185>    BSR.w writeword
0003DB40 <AmiBlitz3.ab2@20186>   SUBQ.w #8,D2
0003DB44 <AmiBlitz3.ab2@20187>    BNE.w JL_0_C3AC
0003DB48 <AmiBlitz3.ab2@20188> BRA.w JL_0_C3DA
0003DB4A <AmiBlitz3.ab2@20191>   MOVE.w D2,D0
0003DB4C <AmiBlitz3.ab2@20192>   LSL.w #8,D0
0003DB4E <AmiBlitz3.ab2@20193>   LSL.w #1,D0
0003DB50 <AmiBlitz3.ab2@20194>   OR.w D0,D1
0003DB54 <AmiBlitz3.ab2@20195>   BSR.w writeword
0003DB56 <AmiBlitz3.ab2@20198> RTS
0003DB5A <AmiBlitz3.ab2@20203>   Dc.b $26,$6D,$00,$00                                     ;MOVEA.L $0000(A5),A3
0003DB5C <AmiBlitz3.ab2@20204>   Dc.b $D6,$C0                                             ;ADDA.W  D0,A3
0003DB60 <AmiBlitz3.ab2@20208> mymaxlib:  Ds.l 1
0003DB64 <AmiBlitz3.ab2@20212>   BSR.w JL_0_C340
0003DB68 <AmiBlitz3.ab2@20213>   LEA free(PC),A0
0003DB6C <AmiBlitz3.ab2@20214>   LEA freef(PC),A1
0003DB72 <AmiBlitz3.ab2@20215>   MOVE.w -$6(A2),$2(A0)
0003DB76 <AmiBlitz3.ab2@20216>   BSR.w pokecode
0003DB7A <AmiBlitz3.ab2@20217>   MOVE.l -$A(A2),D1
0003DB7E <AmiBlitz3.ab2@20220>   BEQ.w nosuperr
0003DB82 <AmiBlitz3.ab2@20221>   MOVEA.l mymaxlib(PC),A2
0003DB86 <AmiBlitz3.ab2@20222> BRA.w Amakelibsub
0003DB8A <AmiBlitz3.ab2@20227>   BSR.w JL_0_C340
0003DB90 <AmiBlitz3.ab2@20228>   LEA use,A0
0003DB96 <AmiBlitz3.ab2@20229>   LEA usef,A1
0003DB9C <AmiBlitz3.ab2@20230>   MOVE.w -$6(A2),$2(A0)
0003DBA2 <AmiBlitz3.ab2@20231>   MOVE.w -$6(A2),-$2(A1)
0003DBA6 <AmiBlitz3.ab2@20232>   ADDQ.w #4,-$2(A1)
0003DBAA <AmiBlitz3.ab2@20233>   BSR.w pokecode
0003DBAE <AmiBlitz3.ab2@20234>   MOVE.l -$E(A2),D1
0003DBB2 <AmiBlitz3.ab2@20235> BRA.w maxjsr
0003DBB8 <AmiBlitz3.ab2@20239>   JSR get1bytemain
0003DBBE <AmiBlitz3.ab2@20243>   MOVE.l firstiff,D0
0003DBC2 <AmiBlitz3.ab2@20244>    BEQ.w noiferr
0003DBC4 <AmiBlitz3.ab2@20245>   MOVEA.l D0,A0
0003DBCA <AmiBlitz3.ab2@20246>   CMPI.b #$1,$D(A0)
0003DBCE <AmiBlitz3.ab2@20247>    BEQ.w illelseerr
0003DBD2 <AmiBlitz3.ab2@20248>   MOVE.w #$6000,D1
0003DBD8 <AmiBlitz3.ab2@20250>     TST.b fast
0003DBDC <AmiBlitz3.ab2@20251>     BEQ 'l1
0003DBE2 <AmiBlitz3.ab2@20252>     OR.l #$ff,d1
0003DBE6 <AmiBlitz3.ab2@20253>     BSR writeword
0003DBE8 <AmiBlitz3.ab2@20257>   SWAP D1
0003DBEC <AmiBlitz3.ab2@20258>   BSR.w writelong
0003DBEE <AmiBlitz3.ab2@20259>   MOVEQ.l #$00,D1
0003DBF2 <AmiBlitz3.ab2@20260>   BSR.w AJL_0_D7B8
0003DBFA <AmiBlitz3.ab2@20261>   MOVE.l destpointer,$8(A0)
0003DBFE <AmiBlitz3.ab2@20262> BRA.w do_then
0003DC04 <AmiBlitz3.ab2@20266>   LEA ptr_parameterstore,A0
0003DC06 <AmiBlitz3.ab2@20267>   MOVE.l A0,-(A7)
0003DC0A <AmiBlitz3.ab2@20268>   BSR.w JL_0_C23A
0003DC0E <AmiBlitz3.ab2@20269> BRA.w handle_compileerror
0003DC12 <AmiBlitz3.ab2@20273>   BSR.w JL_0_BF6A
0003DC14 <AmiBlitz3.ab2@20274>   MOVEQ.l #$05,D1
0003DC1E <AmiBlitz3.ab2@20276>   MOVE.w oldqflag,instringon
0003DC24 <AmiBlitz3.ab2@20277>   MOVEA.l lastsourcepos,A5
0003DC2A <AmiBlitz3.ab2@20278>   LEA AJL_0_C25E,A0
0003DC2E <AmiBlitz3.ab2@20279> BRA.w JL_0_C4B4
0003DC34 <AmiBlitz3.ab2@20283>   LEA ptr_parameterstore,A0
0003DC38 <AmiBlitz3.ab2@20284>   BSR.w JL_0_C23A
0003DC3E <AmiBlitz3.ab2@20285>   JSR get1bytemain
0003DC42 <AmiBlitz3.ab2@20286>   BSR.w JL_0_CCA8
0003DC48 <AmiBlitz3.ab2@20287>   LEA namebuff2,A0
0003DC4C <AmiBlitz3.ab2@20288>   BSR.w JL_0_C23A
0003DC52 <AmiBlitz3.ab2@20289>   LEA AJL_0_C262,A0
0003DC54 <AmiBlitz3.ab2@20292>   LSL.w #2,D1
0003DC5A <AmiBlitz3.ab2@20293>   LEA CIF_branches,A1
0003DC5E <AmiBlitz3.ab2@20294>   MOVE.l $0(A1,D1.W),-(A7)
0003DC60 <AmiBlitz3.ab2@20295>   MOVEQ.l #-$01,D1
0003DC62 <AmiBlitz3.ab2@20298>   JSR (A0)
0003DC64 <AmiBlitz3.ab2@20299>   MOVEA.l (A7)+,A1
0003DC66 <AmiBlitz3.ab2@20302> JMP (A1)
0003DC6A <AmiBlitz3.ab2@20306>   BEQ.w JL_0_C4F6
0003DC6E <AmiBlitz3.ab2@20307> BRA.w JL_0_C4F4
0003DC72 <AmiBlitz3.ab2@20311>   BNE.w JL_0_C4F6
0003DC76 <AmiBlitz3.ab2@20312> BRA.w JL_0_C4F4
0003DC7A <AmiBlitz3.ab2@20316>   BLT.w JL_0_C4F6
0003DC7E <AmiBlitz3.ab2@20317> BRA.w JL_0_C4F4
0003DC82 <AmiBlitz3.ab2@20321>   BLE.w JL_0_C4F6
0003DC86 <AmiBlitz3.ab2@20322> BRA.w JL_0_C4F4
0003DC8A <AmiBlitz3.ab2@20326>   BGT.w JL_0_C4F6
0003DC8E <AmiBlitz3.ab2@20327> BRA.w JL_0_C4F4
0003DC92 <AmiBlitz3.ab2@20331>   BGE.w JL_0_C4F6
0003DC94 <AmiBlitz3.ab2@20334>   MOVEQ.l #$00,D1
0003DC9A <AmiBlitz3.ab2@20337>   MOVEA.l concomsp,A0
0003DCA0 <AmiBlitz3.ab2@20338>   MOVE.w skipcode,(A0)+
0003DCA6 <AmiBlitz3.ab2@20339>   MOVE.l A0,concomsp
0003DCAC <AmiBlitz3.ab2@20340>   MOVE.w D1,skipcode
0003DCB2 <AmiBlitz3.ab2@20341>   JSR get1bytemain
0003DCB6 <AmiBlitz3.ab2@20342>    BNE.w syntaxerr
0003DCBC <AmiBlitz3.ab2@20343> JMP bakup
0003DCC4 <AmiBlitz3.ab2@20347> rescode:   Dc.b $2B,$7c,$00,$00,$00,$00 :   Ds.w 1         ;MOVE.L  #$00000000,$0000(A5)
0003DCC8 <AmiBlitz3.ab2@20348> rescode2:  Dc.b $2B,$40                 :   Ds.w 1         ;MOVE.L  D0,$0000(A5)
0003DCCC <AmiBlitz3.ab2@20355>   MOVE.w #$FC17,D1
0003DCD2 <AmiBlitz3.ab2@20356>   JSR uselib
0003DCD8 <AmiBlitz3.ab2@20358>   JSR reget
0003DCDC <AmiBlitz3.ab2@20359>    BEQ.w do_Restore__resbeg
0003DCE0 <AmiBlitz3.ab2@20360>   BSR.w JL_0_AE22                                          ;get label name!
0003DCE4 <AmiBlitz3.ab2@20361>   MOVE.w rescode(PC),D1
0003DCE8 <AmiBlitz3.ab2@20362>   BSR.w writeword
0003DCEE <AmiBlitz3.ab2@20363>   JSR addoff                                               ;add offset
0003DCF2 <AmiBlitz3.ab2@20364>   MOVE.l $C(A2),D1
0003DCF6 <AmiBlitz3.ab2@20365>   BSR.w writelong
0003DCFA <AmiBlitz3.ab2@20366>   MOVE.w rescode+6(PC),D1
0003DCFE <AmiBlitz3.ab2@20367>   BSR.w writeword
0003DD02 <AmiBlitz3.ab2@20368>   MOVE.l $4(A2),D1                                         ;is it outstanding?
0003DD06 <AmiBlitz3.ab2@20369>   BEQ.w do_Restore__no
0003DD08 <AmiBlitz3.ab2@20371>   MOVEA.l D1,A1
0003DD0C <AmiBlitz3.ab2@20372>   ADDQ.l #1,$4(A1)                                         ;make odd - flag for data reference.
0003DD0E <AmiBlitz3.ab2@20373> RTS
0003DD10 <AmiBlitz3.ab2@20378> RTS
0003DD14 <AmiBlitz3.ab2@20381>   MOVE.w #$CD00,D1
0003DD1A <AmiBlitz3.ab2@20382>   JSR Atokejsr
0003DD1E <AmiBlitz3.ab2@20383>   MOVE.l rescode2(PC),D1
0003DD24 <AmiBlitz3.ab2@20384> JMP writelong
0003DD28 <AmiBlitz3.ab2@20388>   MOVE.w #$FC17,D1
0003DD2E <AmiBlitz3.ab2@20389>   JSR uselib
0003DD34 <AmiBlitz3.ab2@20392>   MOVE.l dataget,D1
0003DD38 <AmiBlitz3.ab2@20393>   BSR.w writelong
0003DD3C <AmiBlitz3.ab2@20394>   BSR.w getparameter
0003DD40 <AmiBlitz3.ab2@20395>   BSR.w JL_0_8E3C
0003DD44 <AmiBlitz3.ab2@20396>   BSR.w calcvar
0003DD48 <AmiBlitz3.ab2@20397>   BTST #$E,D2
0003DD4C <AmiBlitz3.ab2@20398>    BEQ.w JL_0_C5A6
0003DD50 <AmiBlitz3.ab2@20399>   MOVE.b #$6,D2
0003DD52 <AmiBlitz3.ab2@20402>   TST.b D2
0003DD56 <AmiBlitz3.ab2@20403>    BEQ.w noleterr
0003DD5C <AmiBlitz3.ab2@20404>   TST.b debugmode
0003DD60 <AmiBlitz3.ab2@20405>    BEQ.w JL_0_C5D0
0003DD64 <AmiBlitz3.ab2@20406>   MOVE.w #$7000,D1
0003DD66 <AmiBlitz3.ab2@20407>   MOVE.b D2,D1
0003DD6A <AmiBlitz3.ab2@20408>   ANDI.b #$F,D1
0003DD6E <AmiBlitz3.ab2@20409>   BSR.w writeword
0003DD72 <AmiBlitz3.ab2@20410>   MOVE.w #$C310,D1
0003DD74 <AmiBlitz3.ab2@20411>   MOVE.w D2,-(A7)
0003DD78 <AmiBlitz3.ab2@20412>   BSR.w Atokejsr
0003DD7A <AmiBlitz3.ab2@20413>   MOVE.w (A7)+,D2
0003DD7E <AmiBlitz3.ab2@20416>   CMP.b #$7,D2
0003DD82 <AmiBlitz3.ab2@20417>    BEQ.w JL_0_C684
0003DD86 <AmiBlitz3.ab2@20418>   CMP.b #$1,D2
0003DD8A <AmiBlitz3.ab2@20419>    BNE.w JL_0_C62A
0003DD90 <AmiBlitz3.ab2@20420>   LEA dataletb2,A0
0003DD96 <AmiBlitz3.ab2@20421>   LEA dataletb2f,A1
0003DD9A <AmiBlitz3.ab2@20422>   BTST #$F,D2
0003DD9E <AmiBlitz3.ab2@20423>    BEQ.w JL_0_C5FC
0003DDA2 <AmiBlitz3.ab2@20424>   BSR.w pokecode
0003DDA6 <AmiBlitz3.ab2@20425> BRA.w JL_0_C668
0003DDAC <AmiBlitz3.ab2@20428>   LEA dataletb,A0
0003DDB2 <AmiBlitz3.ab2@20429>   LEA dataletbf,A1
0003DDB8 <AmiBlitz3.ab2@20430>   TST.w varmode
0003DDBC <AmiBlitz3.ab2@20431>    BEQ.w JL_0_C61E
0003DDC2 <AmiBlitz3.ab2@20432>   LEA dataletbl,A0
0003DDC8 <AmiBlitz3.ab2@20433>   LEA dataletblf,A1
0003DDCC <AmiBlitz3.ab2@20436>   MOVE.w D3,$4(A0)
0003DDD0 <AmiBlitz3.ab2@20437>   BSR.w pokecode
0003DDD4 <AmiBlitz3.ab2@20438> BRA.w JL_0_C668
0003DDDA <AmiBlitz3.ab2@20441>   LEA dataletw,A0
0003DDDE <AmiBlitz3.ab2@20442>   CMP.b #$3,D2
0003DDE2 <AmiBlitz3.ab2@20443>    BCS.w JL_0_C63E
0003DDE8 <AmiBlitz3.ab2@20444>   LEA dataletl,A0
0003DDEC <AmiBlitz3.ab2@20447>   BTST #$F,D2
0003DDF0 <AmiBlitz3.ab2@20448>    BEQ.w JL_0_C652
0003DDF4 <AmiBlitz3.ab2@20449>   MOVE.w $4(A0),D1
0003DDF8 <AmiBlitz3.ab2@20450>    BSR.w writeword
0003DDFC <AmiBlitz3.ab2@20451> BRA.w JL_0_C668
0003DE02 <AmiBlitz3.ab2@20454>   TST.w varmode
0003DE06 <AmiBlitz3.ab2@20455>    BEQ.w JL_0_C65E
0003DE08 <AmiBlitz3.ab2@20456>   ADDQ.w #6,A0
0003DE0C <AmiBlitz3.ab2@20459>   MOVE.w D3,$2(A0)
0003DE0E <AmiBlitz3.ab2@20460>   MOVE.l (A0),D1
0003DE12 <AmiBlitz3.ab2@20461>   BSR.w writelong
0003DE18 <AmiBlitz3.ab2@20464>   MOVE.l dataput,D1
0003DE1C <AmiBlitz3.ab2@20465>    BSR.w writelong
0003DE20 <AmiBlitz3.ab2@20466>   CMP.w #$2C,D0
0003DE24 <AmiBlitz3.ab2@20467>    BEQ.w JL_0_C67C
0003DE26 <AmiBlitz3.ab2@20468> RTS
0003DE2C <AmiBlitz3.ab2@20471>   JSR get1bytemain
0003DE30 <AmiBlitz3.ab2@20472> BRA.w JL_0_C584
0003DE36 <AmiBlitz3.ab2@20476>   MOVE.w stlenget,D1
0003DE3A <AmiBlitz3.ab2@20477>    BSR.w writeword
0003DE3E <AmiBlitz3.ab2@20478>   BTST #$F,D2
0003DE42 <AmiBlitz3.ab2@20479>    BNE.w JL_0_C6C0
0003DE48 <AmiBlitz3.ab2@20480>   TST.w varmode
0003DE4C <AmiBlitz3.ab2@20481>    BEQ.w JL_0_C6B0
0003DE52 <AmiBlitz3.ab2@20482>   MOVE.w D3,leaampl+2
0003DE58 <AmiBlitz3.ab2@20483>   MOVE.l leaampl,D1
0003DE5C <AmiBlitz3.ab2@20484> BRA.w JL_0_C6BC
0003DE62 <AmiBlitz3.ab2@20487>   MOVE.w D3,leaamp+2
0003DE68 <AmiBlitz3.ab2@20488>   MOVE.l leaamp,D1
0003DE6C <AmiBlitz3.ab2@20491>   BSR.w writelong
0003DE70 <AmiBlitz3.ab2@20494>   MOVE.w #$C701,D1
0003DE76 <AmiBlitz3.ab2@20495>   MOVE.w varmode,D2
0003DE7A <AmiBlitz3.ab2@20496>    BEQ.w JL_0_C6D0
0003DE7C <AmiBlitz3.ab2@20497>   SUBQ.w #1,D1
0003DE80 <AmiBlitz3.ab2@20500>   BSR.w Atokejsr
0003DE88 <AmiBlitz3.ab2@20501>   MOVE.w #$FFFF,lasta6
0003DE8E <AmiBlitz3.ab2@20502>   LEA stalign,A0
0003DE94 <AmiBlitz3.ab2@20503>   LEA stalignf,A1
0003DE98 <AmiBlitz3.ab2@20504>   BSR.w pokecode
0003DE9C <AmiBlitz3.ab2@20505> BRA.w JL_0_C668
0003DEA0 <AmiBlitz3.ab2@20509>   CMP.w #$2E,D0                                            ;definecode 'lb 'lw 'll
0003DEA4 <AmiBlitz3.ab2@20510>    BNE.w JL_0_C720
0003DEAA <AmiBlitz3.ab2@20511>   JSR get1bytemain
0003DEAE <AmiBlitz3.ab2@20512>   CMP.w #$77,D0
0003DEB2 <AmiBlitz3.ab2@20513>    BEQ.w JL_0_C71C
0003DEB6 <AmiBlitz3.ab2@20514>   CMP.w #$62,D0
0003DEBA <AmiBlitz3.ab2@20515>    BEQ.w JL_0_C718
0003DEBE <AmiBlitz3.ab2@20516>   CMP.w #"s",d0
0003DEC2 <AmiBlitz3.ab2@20517>   BEQ single3
0003DEC6 <AmiBlitz3.ab2@20518>   CMP.w #"d",d0
0003DECA <AmiBlitz3.ab2@20519>   BEQ double3
0003DECE <AmiBlitz3.ab2@20520>   CMP.w #$6C,D0
0003DED2 <AmiBlitz3.ab2@20521>    BNE.w syntaxerr
0003DED4 <AmiBlitz3.ab2@20522>   MOVEQ.l #$02,D1
0003DED6 <AmiBlitz3.ab2@20523> RTS
0003DEDE <AmiBlitz3.ab2@20527>   MOVE.b #1,iee
0003DEE0 <AmiBlitz3.ab2@20528>   MOVEQ.l #$3,d1
0003DEE2 <AmiBlitz3.ab2@20529> RTS
0003DEEA <AmiBlitz3.ab2@20533>   MOVE.b #1,iee
0003DEEC <AmiBlitz3.ab2@20534>   MOVEQ.l #$4,d1
0003DEEE <AmiBlitz3.ab2@20535> RTS
0003DEF0 <AmiBlitz3.ab2@20539>   MOVEQ.l #$00,D1
0003DEF2 <AmiBlitz3.ab2@20540> RTS
0003DEF4 <AmiBlitz3.ab2@20544>   MOVEQ.l #$01,D1
0003DEF6 <AmiBlitz3.ab2@20545> RTS
0003DEF8 <AmiBlitz3.ab2@20549>   MOVEQ.l #$01,D1
0003DEFE <AmiBlitz3.ab2@20550> JMP bakup
0003DF02 <AmiBlitz3.ab2@20554>   BSR.w JL_0_C6F0
0003DF04 <AmiBlitz3.ab2@20556>   MOVE.w D1,-(A7)
0003DF08 <AmiBlitz3.ab2@20557>    BSR.w AJL_0_BF6E
0003DF0C <AmiBlitz3.ab2@20558>   CMP.w #$2C,D0
0003DF10 <AmiBlitz3.ab2@20559>    BNE.w syntaxerr
0003DF12 <AmiBlitz3.ab2@20560>   MOVE.l D3,-(A7)
0003DF16 <AmiBlitz3.ab2@20561>    BSR.w AJL_0_BF6E
0003DF18 <AmiBlitz3.ab2@20562>   MOVE.l D3,D1
0003DF1A <AmiBlitz3.ab2@20563>   MOVE.l (A7)+,D3
0003DF1C <AmiBlitz3.ab2@20564>   MOVE.w (A7)+,D2
0003DF20 <AmiBlitz3.ab2@20565>    BEQ.w JL_0_C774
0003DF24 <AmiBlitz3.ab2@20569>   CMP.w #$1,D2
0003DF28 <AmiBlitz3.ab2@20570>    BEQ.w JL_0_C768
0003DF2A <AmiBlitz3.ab2@20573>   SWAP D1
0003DF2E <AmiBlitz3.ab2@20574>    BSR.w writeword
0003DF30 <AmiBlitz3.ab2@20575>   SWAP D1
0003DF34 <AmiBlitz3.ab2@20576>    BSR.w writeword
0003DF36 <AmiBlitz3.ab2@20577>   SUBQ.l #1,D3
0003DF3A <AmiBlitz3.ab2@20578>    BNE.w JL_0_C754
0003DF3C <AmiBlitz3.ab2@20579> RTS
0003DF40 <AmiBlitz3.ab2@20582>    BSR.w writeword
0003DF42 <AmiBlitz3.ab2@20583>   SUBQ.l #1,D3
0003DF46 <AmiBlitz3.ab2@20584>    BNE.w JL_0_C768
0003DF48 <AmiBlitz3.ab2@20585> RTS
0003DF4C <AmiBlitz3.ab2@20588>    BSR.w writebyte
0003DF4E <AmiBlitz3.ab2@20589>   SUBQ.l #1,D3
0003DF52 <AmiBlitz3.ab2@20590>    BNE.w JL_0_C774
0003DF54 <AmiBlitz3.ab2@20591> RTS
0003DF58 <AmiBlitz3.ab2@20595>   BSR.w JL_0_C6F0                                          ;definestorage
0003DF5A <AmiBlitz3.ab2@20596>   MOVE.w D1,-(A7)
0003DF5E <AmiBlitz3.ab2@20597>   BSR.w AJL_0_BF6E
0003DF60 <AmiBlitz3.ab2@20598>   MOVE.w (A7)+,D1
0003DF62 <AmiBlitz3.ab2@20599>   LSL.l D1,D3
0003DF64 <AmiBlitz3.ab2@20600>   MOVE.l d3,d0
0003DF68 <AmiBlitz3.ab2@20601>   BEQ 'll5
0003DF6A <AmiBlitz3.ab2@20602>   MOVEQ #0,d1
0003DF70 <AmiBlitz3.ab2@20605>     JSR writebyte
0003DF72 <AmiBlitz3.ab2@20606>     SUBQ.l #1,d3
0003DF76 <AmiBlitz3.ab2@20607>   BNE.s 'll10
0003DF78 <AmiBlitz3.ab2@20610> RTS
0003DF7A <AmiBlitz3.ab2@20614>   MOVE.w D0,-(A7)
0003DF80 <AmiBlitz3.ab2@20615>   LEA dummyasm,A0
0003DF86 <AmiBlitz3.ab2@20616>   MOVEA.l destpointer,A1
0003DF90 <AmiBlitz3.ab2@20617>   MOVE.w asmlen2,asmlen
0003DF96 <AmiBlitz3.ab2@20618>   JSR insasm
0003DF98 <AmiBlitz3.ab2@20619>   MOVE.w (A7)+,D0
0003DF9A <AmiBlitz3.ab2@20620> RTS
0003DF9E <AmiBlitz3.ab2@20624>   BSR.w JL_0_C6F0
0003DFA8 <AmiBlitz3.ab2@20626>   MOVE.l #ptr_parameterstore,asmbuff
0003DFAA <AmiBlitz3.ab2@20627>   TST.w D1
0003DFAE <AmiBlitz3.ab2@20628>    BEQ.w JL_0_C7EE
0003DFB2 <AmiBlitz3.ab2@20629>   CMP.w #$1,D1
0003DFB6 <AmiBlitz3.ab2@20630>    BEQ.w JL_0_C844
0003DFBA <AmiBlitz3.ab2@20631>   CMP.w #$2,d1
0003DFBE <AmiBlitz3.ab2@20632>    BEQ long
0003DFC2 <AmiBlitz3.ab2@20633>   CMP.w #$3,d1
0003DFC6 <AmiBlitz3.ab2@20634>    BEQ single
0003DFC8 <AmiBlitz3.ab2@20635>    MOVEQ.l #$0d,D3
0003DFCE <AmiBlitz3.ab2@20641>    JSR asmconst
0003DFD2 <AmiBlitz3.ab2@20642>    BSR.w JL_0_C796
0003DFD6 <AmiBlitz3.ab2@20643>    BSR.w writelong
0003DFDA <AmiBlitz3.ab2@20644>    BSR   writelong
0003DFDE <AmiBlitz3.ab2@20645>   CMP.w #$2C,D0
0003DFE2 <AmiBlitz3.ab2@20646>    BEQ.w JL_0_C7D8b
0003DFE4 <AmiBlitz3.ab2@20647> RTS
0003DFE6 <AmiBlitz3.ab2@20651>   MOVEQ.l #$0B,D3
0003DFEE <AmiBlitz3.ab2@20655>   MOVE.b #1,_dcb
0003DFF4 <AmiBlitz3.ab2@20658>   JSR asmconst
0003DFFA <AmiBlitz3.ab2@20659>   CLR.b _dcb
0003DFFE <AmiBlitz3.ab2@20660>   BSR.w JL_0_C796
0003E002 <AmiBlitz3.ab2@20661>   BSR writebyte
0003E006 <AmiBlitz3.ab2@20662>   BSR writebyte
0003E00A <AmiBlitz3.ab2@20663>   BSR writebyte                                            ;long
0003E00E <AmiBlitz3.ab2@20664>   BSR writebyte
0003E012 <AmiBlitz3.ab2@20665>   CMP.w #$2C,D0
0003E016 <AmiBlitz3.ab2@20666>    BEQ.w JL_0_C7D8
0003E018 <AmiBlitz3.ab2@20667> RTS
0003E01A <AmiBlitz3.ab2@20671>   MOVEQ.l #$0c,D3
0003E022 <AmiBlitz3.ab2@20675>   MOVE.b #1,_dcb
0003E028 <AmiBlitz3.ab2@20678>   JSR asmconst
0003E02E <AmiBlitz3.ab2@20679>   CLR.b _dcb
0003E032 <AmiBlitz3.ab2@20680>   BSR.w JL_0_C796
0003E036 <AmiBlitz3.ab2@20681>   BSR.w writebyte
0003E03A <AmiBlitz3.ab2@20682>   BSR.w writebyte
0003E03E <AmiBlitz3.ab2@20683>   BSR.w writebyte
0003E042 <AmiBlitz3.ab2@20684>   BSR.w writebyte
0003E046 <AmiBlitz3.ab2@20685>   CMP.w #$2C,D0
0003E04A <AmiBlitz3.ab2@20686>    BEQ.w JL_0_C7D8a
0003E04C <AmiBlitz3.ab2@20687> RTS
0003E04E <AmiBlitz3.ab2@20692>   MOVEQ.l #$11,D3
0003E054 <AmiBlitz3.ab2@20695>   JSR get1bytemain
0003E058 <AmiBlitz3.ab2@20696>   CMP.w #$22,D0
0003E05C <AmiBlitz3.ab2@20697>    BNE.w JL_0_C81E
0003E05E <AmiBlitz3.ab2@20700>   MOVE.b (a5)+,d0                                          ;bsr.w get1bytemain ascii dc.b
0003E062 <AmiBlitz3.ab2@20701>    BEQ.w syntaxerr
0003E066 <AmiBlitz3.ab2@20702>   CMP.w #$22,D0
0003E06A <AmiBlitz3.ab2@20703>    BEQ.w JL_0_C816
0003E06E <AmiBlitz3.ab2@20704>   CMP.b #"\",d0
0003E072 <AmiBlitz3.ab2@20705>    BNE 'n1
0003E076 <AmiBlitz3.ab2@20706>   CMP.b #"\",(a5)
0003E07A <AmiBlitz3.ab2@20707>    BEQ 'do1
0003E07C <AmiBlitz3.ab2@20710>   MOVE.w D0,D1
0003E080 <AmiBlitz3.ab2@20711>   BSR.w writebyte
0003E084 <AmiBlitz3.ab2@20712> BRA.w JL_0_C7FC
0003E08C <AmiBlitz3.ab2@20715>   CMP.l #"__DA",1(a5)
0003E090 <AmiBlitz3.ab2@20716>    BNE 'nodate1
0003E098 <AmiBlitz3.ab2@20717>   CMP.l #"TE__",5(a5)
0003E09C <AmiBlitz3.ab2@20718>    BEQ 'c1
0003E0A4 <AmiBlitz3.ab2@20719>   CMP.l #"TE_G",5(a5)
0003E0A8 <AmiBlitz3.ab2@20720>    BNE 'nodate1
0003E0B0 <AmiBlitz3.ab2@20721>   CMP.l #"ER__",9(a5)
0003E0B4 <AmiBlitz3.ab2@20722>    BNE 'nodate1
0003E0BA <AmiBlitz3.ab2@20723>   JSR compiledatedc_ger
0003E0BE <AmiBlitz3.ab2@20724> BRA 'n1
0003E0C4 <AmiBlitz3.ab2@20727>   JSR compiledatedc
0003E0C8 <AmiBlitz3.ab2@20728> BRA 'n1
0003E0D0 <AmiBlitz3.ab2@20731>   CMP.l #"__VE",1(a5)
0003E0D4 <AmiBlitz3.ab2@20732>    BNE 'n1
0003E0DA <AmiBlitz3.ab2@20733>   CMP.w #"R_",5(a5)
0003E0DE <AmiBlitz3.ab2@20734>    BNE 'n1
0003E0E4 <AmiBlitz3.ab2@20735>   JSR version_string_dc
0003E0E8 <AmiBlitz3.ab2@20736> BRA.w JL_0_C7FC
0003E0EE <AmiBlitz3.ab2@20740>   CLR.w instringon
0003E0F4 <AmiBlitz3.ab2@20741>   JSR get1bytemain
0003E0F8 <AmiBlitz3.ab2@20742> BRA.w JL_0_C83A
0003E102 <AmiBlitz3.ab2@20747>    MOVE.w oldqflag,instringon
0003E108 <AmiBlitz3.ab2@20748>   MOVEA.l lastsourcepos,A5
0003E10E <AmiBlitz3.ab2@20749>    JSR asmconst
0003E114 <AmiBlitz3.ab2@20750>   SUBQ.l #1,destpointer
0003E118 <AmiBlitz3.ab2@20751>    BSR.w JL_0_C796
0003E11E <AmiBlitz3.ab2@20752>   ADDQ.l #1,destpointer
0003E122 <AmiBlitz3.ab2@20753>    BSR.w writebyte
0003E126 <AmiBlitz3.ab2@20756>   CMP.w #$2C,D0
0003E12A <AmiBlitz3.ab2@20757>    BEQ.w JL_0_C7F0
0003E12C <AmiBlitz3.ab2@20758> RTS
0003E12E <AmiBlitz3.ab2@20762>   MOVEQ.l #$10,D3
0003E136 <AmiBlitz3.ab2@20768>   MOVE.b #1,_dcb
0003E13C <AmiBlitz3.ab2@20769>   JSR asmconst
0003E142 <AmiBlitz3.ab2@20770>   CLR.b _dcb
0003E146 <AmiBlitz3.ab2@20771>   BSR.w JL_0_C796
0003E14A <AmiBlitz3.ab2@20772>   BSR.w writebyte
0003E14E <AmiBlitz3.ab2@20773>   BSR.w writebyte
0003E152 <AmiBlitz3.ab2@20774>   CMP.w #$2C,D0
0003E156 <AmiBlitz3.ab2@20775>    BEQ.w JL_0_C84A
0003E158 <AmiBlitz3.ab2@20776> RTS
0003E15E <AmiBlitz3.ab2@20780>   ADDQ.l #3,destpointer
0003E166 <AmiBlitz3.ab2@20781>   ANDI.w #$FFFC,destpointer+2
0003E168 <AmiBlitz3.ab2@20782> RTS
0003E16E <AmiBlitz3.ab2@20786>   ADDQ.l #7,destpointer
0003E176 <AmiBlitz3.ab2@20787>   ANDI.w #$FFF8,destpointer+2
0003E178 <AmiBlitz3.ab2@20788> RTS
0003E17E <AmiBlitz3.ab2@20792>   ADDQ.l #1,destpointer                                    ;even
0003E186 <AmiBlitz3.ab2@20793>   BCLR #$0,destpointer+3
0003E188 <AmiBlitz3.ab2@20794> RTS
0003E18A <AmiBlitz3.ab2@20797> datasize: Ds.w 1
0003E190 <AmiBlitz3.ab2@20807>   TST.b debugmode
0003E194 <AmiBlitz3.ab2@20808>   BEQ.w pdt__skip
0003E198 <AmiBlitz3.ab2@20809>   MOVE.w #$4420,D0                                         ;'D '
0003E19C <AmiBlitz3.ab2@20810>   MOVE.b datasize+1(PC),D0
0003E1A0 <AmiBlitz3.ab2@20811> BRA.w JL_0_C1E6
0003E1A2 <AmiBlitz3.ab2@20814> RTS
0003E1A6 <AmiBlitz3.ab2@20818>   MOVE.w #$FC17,D1
0003E1AC <AmiBlitz3.ab2@20819>    JSR uselib
0003E1B6 <AmiBlitz3.ab2@20821>    MOVE.w oldqflag,instringon
0003E1BC <AmiBlitz3.ab2@20822>   MOVEA.l lastsourcepos,A5
0003E1C2 <AmiBlitz3.ab2@20823>    JSR AJL_0_498A
0003E1C8 <AmiBlitz3.ab2@20824>   MOVE.w D1,datasize
0003E1CC <AmiBlitz3.ab2@20825>   CMP.w #$7,D1
0003E1D0 <AmiBlitz3.ab2@20826>    BEQ.w JL_0_C944
0003E1D2 <AmiBlitz3.ab2@20827>   MOVE.w D1,-(A7)
0003E1D6 <AmiBlitz3.ab2@20830>   BSR.w pdt
0003E1D8 <AmiBlitz3.ab2@20831>   MOVE.w (A7),D2
0003E1DC <AmiBlitz3.ab2@20832>    BSR.w JL_0_B1D8
0003E1DE <AmiBlitz3.ab2@20833>   CMP.w (A7),D2                                            ;datamode
0003E1E2 <AmiBlitz3.ab2@20834>    BEQ.w JL_0_C920
0003E1E4 <AmiBlitz3.ab2@20835>   MOVE.w D2,D1
0003E1E6 <AmiBlitz3.ab2@20836>   MOVE.w (A7),D2
0003E1EA <AmiBlitz3.ab2@20837>   CMP.w #$2,D2
0003E1EE <AmiBlitz3.ab2@20838>    BNE.w JL_0_C8FE
0003E1F2 <AmiBlitz3.ab2@20839>   CMP.w #$3,D1
0003E1F6 <AmiBlitz3.ab2@20840>    BNE.w baddaterr
0003E1FC <AmiBlitz3.ab2@20841>   CMP.l #$10000,D3
0003E200 <AmiBlitz3.ab2@20842>    BCC.w baddaterr
0003E204 <AmiBlitz3.ab2@20843> BRA.w JL_0_C920
0003E208 <AmiBlitz3.ab2@20846>   CMP.w #$1,D2
0003E20C <AmiBlitz3.ab2@20847>    BNE.w JL_0_C91C
0003E210 <AmiBlitz3.ab2@20848>   CMP.w #$2,D1
0003E214 <AmiBlitz3.ab2@20849>    BNE.w baddaterr
0003E21A <AmiBlitz3.ab2@20850>   CMP.l #$100,D3
0003E21E <AmiBlitz3.ab2@20851>    BCC.w baddaterr
0003E222 <AmiBlitz3.ab2@20852> BRA.w JL_0_C920
0003E226 <AmiBlitz3.ab2@20855> BRA.w baddaterr
0003E22A <AmiBlitz3.ab2@20858>   CMP.w #$3,D2
0003E22E <AmiBlitz3.ab2@20859>   BCC.w JL_0_C930
0003E232 <AmiBlitz3.ab2@20860>   BSR.w JL_0_C1E6
0003E236 <AmiBlitz3.ab2@20861> BRA.w JL_0_C934
0003E23C <AmiBlitz3.ab2@20864>   TST.b iee
0003E240 <AmiBlitz3.ab2@20865>   BEQ 'old
0003E244 <AmiBlitz3.ab2@20866>   CMP.b #5,d2
0003E248 <AmiBlitz3.ab2@20867>   BNE 'old
0003E24C <AmiBlitz3.ab2@20868>   Dc.l $f2006400                                           ;  fpu data write fmove.s fp0,d0
0003E250 <AmiBlitz3.ab2@20872>   BSR.w JL_0_C1DE                                          ;write data >3
0003E256 <AmiBlitz3.ab2@20875>   JSR reget
0003E25A <AmiBlitz3.ab2@20876>   CMP.w #$2C,D0
0003E25E <AmiBlitz3.ab2@20877>    BEQ.w JL_0_C8CC
0003E260 <AmiBlitz3.ab2@20878>   ADDQ.w #2,A7
0003E262 <AmiBlitz3.ab2@20879> RTS
0003E266 <AmiBlitz3.ab2@20882>    BSR.w pdt
0003E26C <AmiBlitz3.ab2@20883>   MOVE.l data2,-(A7)
0003E270 <AmiBlitz3.ab2@20884>    BSR.w JL_0_C1DE
0003E272 <AmiBlitz3.ab2@20885>   MOVEQ.l #$00,D1
0003E278 <AmiBlitz3.ab2@20886>    JSR get1bytemain
0003E27C <AmiBlitz3.ab2@20887>    BEQ.w JL_0_C9A6
0003E280 <AmiBlitz3.ab2@20888>   CMP.w #$22,D0
0003E284 <AmiBlitz3.ab2@20889>    BEQ.w JL_0_C988
0003E288 <AmiBlitz3.ab2@20890>   CMP.w #$2C,D0
0003E28C <AmiBlitz3.ab2@20891>    BEQ.w JL_0_C9A6
0003E290 <AmiBlitz3.ab2@20894>    BSR.w JL_0_C210
0003E292 <AmiBlitz3.ab2@20895>   ADDQ.w #1,D1
0003E298 <AmiBlitz3.ab2@20896>    JSR getchar
0003E29A <AmiBlitz3.ab2@20897>   TST.w D0
0003E29E <AmiBlitz3.ab2@20898>    BEQ.w JL_0_C9A6
0003E2A2 <AmiBlitz3.ab2@20899>   CMP.w #$2C,D0
0003E2A6 <AmiBlitz3.ab2@20900>    BEQ.w JL_0_C9A6
0003E2AA <AmiBlitz3.ab2@20901> BRA.w JL_0_C96C
0003E2AC <AmiBlitz3.ab2@20905>    MOVEQ #0,d0
0003E2AE <AmiBlitz3.ab2@20906>    MOVE.b (a5)+,d0
0003E2B2 <AmiBlitz3.ab2@20907>    BEQ.w notqerr
0003E2B6 <AmiBlitz3.ab2@20908>   CMP.w #$22,D0
0003E2BA <AmiBlitz3.ab2@20909>    BEQ.w JL_0_C9A2
0003E2BE <AmiBlitz3.ab2@20910>    BSR.w JL_0_C210
0003E2C0 <AmiBlitz3.ab2@20911>   ADDQ.w #1,D1
0003E2C4 <AmiBlitz3.ab2@20912> BRA.w JL_0_C988
0003E2CA <AmiBlitz3.ab2@20915>   CLR.w instringon
0003E2D0 <AmiBlitz3.ab2@20916>   JSR get1bytemain
0003E2D2 <AmiBlitz3.ab2@20919>   MOVEA.l (A7)+,A0
0003E2D8 <AmiBlitz3.ab2@20920>   MOVE.w dontwrite,D2
0003E2DC <AmiBlitz3.ab2@20921>    BNE.w JL_0_C9B4
0003E2DE <AmiBlitz3.ab2@20922>   MOVE.l D1,(A0)
0003E2E4 <AmiBlitz3.ab2@20925>   ADDQ.l #1,data2
0003E2EC <AmiBlitz3.ab2@20926>   BCLR #$0,data2+3
0003E2F0 <AmiBlitz3.ab2@20927>   CMP.w #$2C,D0
0003E2F4 <AmiBlitz3.ab2@20928>    BEQ.w JL_0_C944
0003E2F6 <AmiBlitz3.ab2@20929> RTS
0003E2FC <AmiBlitz3.ab2@20933> JMP vardeclareerr
0003E302 <AmiBlitz3.ab2@20936>   MOVE.w proceduremode,D1                                  ;doshared
0003E306 <AmiBlitz3.ab2@20938>   BNE.w 'l1
0003E308 <AmiBlitz3.ab2@20939>   MOVE.w D1,-(A7)
0003E30E <AmiBlitz3.ab2@20940>   CLR.w proceduremode
0003E314 <AmiBlitz3.ab2@20943>   LEA varbase,a2
0003E318 <AmiBlitz3.ab2@20944>   BSR.w getparameter
0003E31A <AmiBlitz3.ab2@20945>   MOVE.w d2,-(a7)
0003E320 <AmiBlitz3.ab2@20946>    JSR findvariable
0003E324 <AmiBlitz3.ab2@20947>    BEQ 'checkdim
0003E32A <AmiBlitz3.ab2@20948>    LEA sharebase,a2
0003E32C <AmiBlitz3.ab2@20949>    MOVEQ #$f+4,d7
0003E330 <AmiBlitz3.ab2@20950>    BSR.w findlab                                         ;find var
0003E334 <AmiBlitz3.ab2@20951>    BEQ.b dupsherr
0003E338 <AmiBlitz3.ab2@20952>    BSR addlabel
0003E33C <AmiBlitz3.ab2@20953>    CMP.b #".",d0
0003E340 <AmiBlitz3.ab2@20954>    BNE JUMP_vardeclareerr
0003E342 <AmiBlitz3.ab2@20955>    MOVE.l a2,a3
0003E348 <AmiBlitz3.ab2@20956>    JSR JL_0_8EB8b
0003E34A <AmiBlitz3.ab2@20987>   MOVE.w (a7)+,d2
0003E34E <AmiBlitz3.ab2@20988>    CMP.b #",",d0
0003E352 <AmiBlitz3.ab2@20989>    BNE 'ret
0003E358 <AmiBlitz3.ab2@20990>    JSR get1bytemain
0003E35C <AmiBlitz3.ab2@20991> BRA 'again2
0003E362 <AmiBlitz3.ab2@20994>   MOVE.w (A7)+,proceduremode
0003E364 <AmiBlitz3.ab2@20995> RTS
0003E36A <AmiBlitz3.ab2@21002>    CMP.w #2,6(a2)
0003E36E <AmiBlitz3.ab2@21003>    BEQ 'do
0003E374 <AmiBlitz3.ab2@21004>    CMP.w #$102,6(a2)
0003E378 <AmiBlitz3.ab2@21005>    BEQ 'do
0003E37E <AmiBlitz3.ab2@21006> JMP errormsg_declaredtwice                                 ;was BRA 'errormsg_declaredtwice_
0003E384 <AmiBlitz3.ab2@21009>   LEA varbase,a0
0003E386 <AmiBlitz3.ab2@21012>   MOVE.l (A0),D0                                           ;find label
0003E38A <AmiBlitz3.ab2@21013>    BEQ.b 'z1
0003E38C <AmiBlitz3.ab2@21014>    CMP.l d0,a2
0003E390 <AmiBlitz3.ab2@21015>    BEQ 'z1
0003E392 <AmiBlitz3.ab2@21016>    MOVE.l d0,a0
0003E396 <AmiBlitz3.ab2@21017> BRA 'm1
0003E398 <AmiBlitz3.ab2@21020>   MOVE.l (a2),d1
0003E39A <AmiBlitz3.ab2@21021>     MOVE.l d1,(a0)
0003E39C <AmiBlitz3.ab2@21022>     CLR.l (a2)
0003E3A2 <AmiBlitz3.ab2@21023>     LEA sharebase,a0
0003E3A4 <AmiBlitz3.ab2@21024>     MOVE.l (a0),(a2)
0003E3A6 <AmiBlitz3.ab2@21025>     MOVE.l a2,(a0)
0003E3AC <AmiBlitz3.ab2@21026>     JSR get1bytemain
0003E3B2 <AmiBlitz3.ab2@21027>     JSR get1bytemain
0003E3B6 <AmiBlitz3.ab2@21028> BRA 'domore
0003E3BE <AmiBlitz3.ab2@21031>   MOVE.b #1,nowdeclare
0003E3C0 <AmiBlitz3.ab2@21032>   MOVE.w D1,-(A7)
0003E3C6 <AmiBlitz3.ab2@21033>   CLR.w proceduremode
0003E3CA <AmiBlitz3.ab2@21036>    BSR.w getparameter
0003E3CC <AmiBlitz3.ab2@21037>   MOVE.w D2,-(A7)
0003E3D2 <AmiBlitz3.ab2@21038>   LEA firstglob,A2
0003E3D6 <AmiBlitz3.ab2@21039>    BSR.w findvariable2
0003E3DA <AmiBlitz3.ab2@21040>    BNE.b JL_0_CA06
0003E3E0 <AmiBlitz3.ab2@21043>   MOVE.b flagmask+1,D1
0003E3E4 <AmiBlitz3.ab2@21044>   MOVE.b $7(A2),D3
0003E3E6 <AmiBlitz3.ab2@21045>   EOR.b D3,D1
0003E3EA <AmiBlitz3.ab2@21046>    BEQ.w dupsherr
0003E3EE <AmiBlitz3.ab2@21047>    BSR.w findlab
0003E3F2 <AmiBlitz3.ab2@21048>    BEQ.b JL_0_C9F0
0003E3F6 <AmiBlitz3.ab2@21051>    BSR.w addlabel
0003E3F8 <AmiBlitz3.ab2@21052>   MOVE.w (A7)+,D2
0003E3FA <AmiBlitz3.ab2@21053>   MOVE.l A2,-(A7)
0003E3FE <AmiBlitz3.ab2@21054>    BSR.w JL_0_8E3C
0003E400 <AmiBlitz3.ab2@21055>   MOVEA.l (A7)+,A2
0003E402 <AmiBlitz3.ab2@21056>   MOVEQ.l #$04,D1
0003E404 <AmiBlitz3.ab2@21057>   ADDQ.w #4,A2
0003E406 <AmiBlitz3.ab2@21058>   ADDQ.w #4,A3
0003E408 <AmiBlitz3.ab2@21061>     MOVE.w (A3)+,(A2)+
0003E40C <AmiBlitz3.ab2@21062>   DBF D1,JL_0_CA1A
0003E414 <AmiBlitz3.ab2@21064>   BTST #$1,flagmask+1
0003E418 <AmiBlitz3.ab2@21065>    BEQ.w JL_0_CA3C
0003E41E <AmiBlitz3.ab2@21066>    JSR get1bytemain
0003E422 <AmiBlitz3.ab2@21067>   CMP.w #$29,D0
0003E426 <AmiBlitz3.ab2@21068>    BNE.w syntaxerr
0003E42C <AmiBlitz3.ab2@21069>    JSR get1bytemain
0003E430 <AmiBlitz3.ab2@21072>    CMP.w #$2C,D0
0003E434 <AmiBlitz3.ab2@21073>    BNE.w JL_0_CA4C
0003E43A <AmiBlitz3.ab2@21074>    JSR get1bytemain
0003E43E <AmiBlitz3.ab2@21075> BRA.w JL_0_C9DE
0003E444 <AmiBlitz3.ab2@21078>   MOVE.w (A7)+,proceduremode
0003E446 <AmiBlitz3.ab2@21079> RTS
0003E44A <AmiBlitz3.ab2@21083>    BSR.w JL_0_C05C
0003E450 <AmiBlitz3.ab2@21084>    JSR check_incdir                                        ; ergebnis in d2
0003E456 <AmiBlitz3.ab2@21086>    LEA ptr_parameterstore,a1
0003E458 <AmiBlitz3.ab2@21087>    MOVE.l d2,-(a7)
0003E45E <AmiBlitz3.ab2@21088>    LEA includetemp,a0                                      ; filename in includetemp packen
0003E460 <AmiBlitz3.ab2@21091>      MOVE.b (a1)+,(a0)+
0003E464 <AmiBlitz3.ab2@21092>    BNE 'l4
0003E46A <AmiBlitz3.ab2@21094>    LEA ptr_parameterstore,a1
0003E46C <AmiBlitz3.ab2@21095>    MOVE.l a1,a0
0003E46E <AmiBlitz3.ab2@21098>     TST.b (a0)+
0003E472 <AmiBlitz3.ab2@21099>    BNE 'l1
0003E474 <AmiBlitz3.ab2@21102>      MOVE.b -(a0),d0
0003E478 <AmiBlitz3.ab2@21103>      CMP.b #":",d0
0003E47C <AmiBlitz3.ab2@21104>       BEQ 'out
0003E480 <AmiBlitz3.ab2@21105>      CMP.b #"/",d0
0003E484 <AmiBlitz3.ab2@21106>       BEQ 'out
0003E486 <AmiBlitz3.ab2@21107>      CMP.l a1,a0
0003E48A <AmiBlitz3.ab2@21108>       BEQ 'out2
0003E48E <AmiBlitz3.ab2@21109> BRA 'l2
0003E490 <AmiBlitz3.ab2@21112>    ADDQ.l #1,a0                                            ; dateinamen vom pfad extrahiert
0003E492 <AmiBlitz3.ab2@21115>    MOVEQ.l #-$01,D2
0003E494 <AmiBlitz3.ab2@21118>      ADDQ.w #1,D2
0003E496 <AmiBlitz3.ab2@21119>      MOVE.b (a0)+,(a1)+
0003E49A <AmiBlitz3.ab2@21120>    BNE 'l3
0003E49C <AmiBlitz3.ab2@21121>    CLR.b (a1)+
0003E4A2 <AmiBlitz3.ab2@21123>    LEA ptr_parameterstore,a1
0003E4A6 <AmiBlitz3.ab2@21124>    BSR.w findxinc                                         ;find include
0003E4AA <AmiBlitz3.ab2@21125>     BEQ.w 'outb
0003E4AC <AmiBlitz3.ab2@21127>    MOVE.w D2,-(A7)
0003E4B0 <AmiBlitz3.ab2@21128>    BSR.w addlabel
0003E4B2 <AmiBlitz3.ab2@21129>    MOVE.w (A7)+,D2
0003E4B8 <AmiBlitz3.ab2@21131>    LEA ptr_parameterstore,a1
0003E4BE <AmiBlitz3.ab2@21132>    LEA includetemp,a0                                      ; namen in includetemp schreiben
0003E4C0 <AmiBlitz3.ab2@21135>     MOVE.b (a0)+,(a1)+
0003E4C4 <AmiBlitz3.ab2@21136>    BNE 'l4b
0003E4C6 <AmiBlitz3.ab2@21138>    MOVE.l (a7)+,d2
0003E4CC <AmiBlitz3.ab2@21139>    LEA ptr_parameterstore,a1
0003E4D0 <AmiBlitz3.ab2@21140> BRA.w JL_0_CB18
0003E4D6 <AmiBlitz3.ab2@21143>    LEA ptr_parameterstore,a1
0003E4DC <AmiBlitz3.ab2@21144>    LEA includetemp,a0
0003E4DE <AmiBlitz3.ab2@21147>     MOVE.b (a0)+,(a1)+
0003E4E2 <AmiBlitz3.ab2@21148>    BNE 'l4b2
0003E4E4 <AmiBlitz3.ab2@21150>    MOVE.l (a7)+,d2
0003E4EA <AmiBlitz3.ab2@21151>    LEA ptr_parameterstore,a1
0003E4EC <AmiBlitz3.ab2@21154> RTS
0003E4F0 <AmiBlitz3.ab2@21158>   BSR.w JL_0_C05C
0003E4F6 <AmiBlitz3.ab2@21159>   MOVE.l #ptr_parameterstore,D1
0003E4F8 <AmiBlitz3.ab2@21160>   MOVEQ.l #-$02,D2
0003E4FE <AmiBlitz3.ab2@21161>   MOVEA.l _dosbase,A6
0003E502 <AmiBlitz3.ab2@21162>   JSR _Lock(A6)
0003E504 <AmiBlitz3.ab2@21163>   MOVE.l D0,D7
0003E508 <AmiBlitz3.ab2@21164>   BEQ.w error_cant_open_include
0003E50A <AmiBlitz3.ab2@21165>   MOVE.l D7,D1
0003E510 <AmiBlitz3.ab2@21166>   MOVE.l ptr_macrobuffer_begin,D2
0003E514 <AmiBlitz3.ab2@21167>   JSR _Examine(A6)
0003E51A <AmiBlitz3.ab2@21168>   MOVEA.l ptr_macrobuffer_begin,A0
0003E51E <AmiBlitz3.ab2@21169>   MOVE.l $4(A0),D0
0003E522 <AmiBlitz3.ab2@21170>    BPL.w error_cant_open_include
0003E526 <AmiBlitz3.ab2@21171>   MOVE.l $7C(A0),D3
0003E528 <AmiBlitz3.ab2@21172>   MOVE.l D7,D1
0003E52C <AmiBlitz3.ab2@21173>    JSR _UnLock(A6)
0003E532 <AmiBlitz3.ab2@21174>   MOVE.l #ptr_parameterstore,D1
0003E538 <AmiBlitz3.ab2@21175>   MOVE.l #HUNK_RELOC_16__MODE_OLDFILE,D2
0003E53C <AmiBlitz3.ab2@21176>    JSR _Open(A6)
0003E53E <AmiBlitz3.ab2@21177>   MOVE.l D0,D7
0003E542 <AmiBlitz3.ab2@21178>    BEQ.w error_cant_open_include
0003E548 <AmiBlitz3.ab2@21179>   MOVE.l destpointer,D0
0003E54A <AmiBlitz3.ab2@21180>   ADD.l D3,D0
0003E550 <AmiBlitz3.ab2@21181>   CMP.l destbufferend,D0
0003E554 <AmiBlitz3.ab2@21182>    BHI.w JL_0_CAF6
0003E55A <AmiBlitz3.ab2@21183>   MOVE.l destpointer,D2
0003E55C <AmiBlitz3.ab2@21184>   MOVE.l D7,D1
0003E560 <AmiBlitz3.ab2@21185>    JSR _Read(A6)
0003E566 <AmiBlitz3.ab2@21186>   CMP.l #$FFFFFFFF,D0
0003E56A <AmiBlitz3.ab2@21187>    BEQ.w error_reading_file
0003E570 <AmiBlitz3.ab2@21188>   ADD.l D0,destpointer
0003E574 <AmiBlitz3.ab2@21189> BRA.w JL_0_CB04
0003E57C <AmiBlitz3.ab2@21192>   MOVE.w #$FFFF,dontwrite
0003E582 <AmiBlitz3.ab2@21193>   MOVE.l D0,destpointer
0003E584 <AmiBlitz3.ab2@21196>   MOVE.l D7,D1
0003E588 <AmiBlitz3.ab2@21197> JMP _Close(A6)
0003E58E <AmiBlitz3.ab2@21201> JMP illdirerr
0003E594 <AmiBlitz3.ab2@21204>   TST.w dirmode                                            ;include  open
0003E598 <AmiBlitz3.ab2@21205>    BNE.w JUMP_illdirerr
0003E59C <AmiBlitz3.ab2@21206>   BSR.w JL_0_C05C
0003E5A2 <AmiBlitz3.ab2@21207>   JSR check_incdir
0003E5A6 <AmiBlitz3.ab2@21210>   BSR.w findconstant
0003E5AA <AmiBlitz3.ab2@21211>    BEQ.w alincerr
0003E5B0 <AmiBlitz3.ab2@21213>   LEA constantbase,A2
0003E5B4 <AmiBlitz3.ab2@21214>   BSR.w addhere2
0003E5B8 <AmiBlitz3.ab2@21215>   CLR.w $C(A2)
0003E5BC <AmiBlitz3.ab2@21216>   CLR.l $4(A2)
0003E5C2 <AmiBlitz3.ab2@21218>   MOVE.l #ptr_parameterstore,D1
0003E5C4 <AmiBlitz3.ab2@21219>   MOVE.l d1,a0
0003E5CA <AmiBlitz3.ab2@21220>   LEA includetemp2,a1
0003E5CC <AmiBlitz3.ab2@21223>     MOVE.b (a0)+,(a1)+
0003E5D0 <AmiBlitz3.ab2@21224>   BNE 'l1
0003E5D6 <AmiBlitz3.ab2@21225>   JSR save_includename
0003E5E0 <AmiBlitz3.ab2@21226>   MOVE.l #0,include_process
0003E5E8 <AmiBlitz3.ab2@21228>   CMP.l #$62623200,-4(a0)                                  ;.bb2
0003E5EC <AmiBlitz3.ab2@21229>   BEQ 'ok
0003E5F4 <AmiBlitz3.ab2@21230>   CMP.l #$61623300,-4(a0)                                  ;.ab3
0003E5F8 <AmiBlitz3.ab2@21231>   BEQ 'ok_tokenize
0003E600 <AmiBlitz3.ab2@21232>   CMP.l #$61623200,-4(a0)                                  ;.ab2
0003E604 <AmiBlitz3.ab2@21233>   BEQ 'ok_tokenize
0003E60C <AmiBlitz3.ab2@21234>   CMP.l #$2e626200,-4(a0)                                  ;.bb files
0003E610 <AmiBlitz3.ab2@21235>   BEQ 'ok
0003E616 <AmiBlitz3.ab2@21236> JMP errortoken                                             ;can only include
0003E620 <AmiBlitz3.ab2@21239>    MOVE.l #-1,include_process                              ; must tokenize the include
0003E626 <AmiBlitz3.ab2@21242>   MOVE.l #HUNK_RELOC_16__MODE_OLDFILE,D2
0003E62C <AmiBlitz3.ab2@21243>   MOVEA.l _dosbase,A6
0003E630 <AmiBlitz3.ab2@21244>   JSR _Open(A6)
0003E634 <AmiBlitz3.ab2@21245>   MOVE.l D0,$8(A2)
0003E638 <AmiBlitz3.ab2@21246>   BEQ.w error_cant_open_include
0003E63E <AmiBlitz3.ab2@21247>   CLR.l includeline
0003E642 <AmiBlitz3.ab2@21248>   MOVE.l 8(a2),d1
0003E644 <AmiBlitz3.ab2@21249>   MOVE.l d3,-(a7)
0003E646 <AmiBlitz3.ab2@21250>   MOVEQ #0,d2
0003E648 <AmiBlitz3.ab2@21251>   MOVEQ #1,d3
0003E64C <AmiBlitz3.ab2@21252>   JSR _Seek(a6)                                            ; -66
0003E650 <AmiBlitz3.ab2@21253>   MOVE.l 8(a2),d1
0003E652 <AmiBlitz3.ab2@21254>   MOVEQ #0,d2
0003E654 <AmiBlitz3.ab2@21255>   MOVEQ #-1,d3
0003E658 <AmiBlitz3.ab2@21256>   JSR _Seek(a6)                                            ; -66
0003E65A <AmiBlitz3.ab2@21257>   MOVE.l (a7)+,d3
0003E65C <AmiBlitz3.ab2@21258>   ADDQ.l #4,d0
0003E662 <AmiBlitz3.ab2@21260>   MOVE.l #$10000,D1
0003E668 <AmiBlitz3.ab2@21261>   MOVEA.l _execbase,A6
0003E66C <AmiBlitz3.ab2@21264>   JSR _AllocVec(a6)
0003E670 <AmiBlitz3.ab2@21266>   MOVE.l D0,$4(A2)
0003E674 <AmiBlitz3.ab2@21267>   MOVE.l D0,$E(A2)
0003E676 <AmiBlitz3.ab2@21268>   MOVEA.l D0,A5
0003E67C <AmiBlitz3.ab2@21275>   ADDQ.w #1,ininclude                                      ;enter include
0003E682 <AmiBlitz3.ab2@21278>   LEA _include,a0
0003E686 <AmiBlitz3.ab2@21279>   MOVEM.l a0-a6/d0-d7,-(a7)
0003E68C <AmiBlitz3.ab2@21280>   LEA ptr_parameterstore,a1
0003E68E <AmiBlitz3.ab2@21283>     MOVE.b (a0)+,(a1)+
0003E692 <AmiBlitz3.ab2@21284>   BNE 'l1b
0003E694 <AmiBlitz3.ab2@21286>   MOVEQ #9,d2
0003E69A <AmiBlitz3.ab2@21287>   JSR findlabel2
0003E69E <AmiBlitz3.ab2@21288>   BNE 'd
0003E6A6 <AmiBlitz3.ab2@21289>   MOVE.l #1,8(a2)
0003E6AA <AmiBlitz3.ab2@21290>   MOVEM.l (a7)+,a0-a6/d0-d7
0003E6AE <AmiBlitz3.ab2@21291> BRA 'd2
0003E6B4 <AmiBlitz3.ab2@21294>   JSR addlabelhash
0003E6BC <AmiBlitz3.ab2@21295>   MOVE.l #$1,$4(A2)
0003E6C4 <AmiBlitz3.ab2@21296>   MOVE.l #1,8(a2)
0003E6C8 <AmiBlitz3.ab2@21297>   MOVEM.l (a7)+,a0-a6/d0-d7
0003E6CE <AmiBlitz3.ab2@21300>   LEA inctab,a0
0003E6D0 <AmiBlitz3.ab2@21301>   MOVEQ #0,d1
0003E6D6 <AmiBlitz3.ab2@21302>   MOVE.w ininclude,d1
0003E6DA <AmiBlitz3.ab2@21303>   CLR.l $0(a0,d1*4)
0003E6E0 <AmiBlitz3.ab2@21304>   MOVEA.l passstack,A7
0003E6E6 <AmiBlitz3.ab2@21305> JMP AJL_0_413A
0003E6E8 <AmiBlitz3.ab2@21308> coolnest:   Ds.w 1
0003E6EC <AmiBlitz3.ab2@21309> macline:    Ds.l 1
0003E6F6 <AmiBlitz3.ab2@21313>   MOVE.l linenumat,macline
0003E6FA <AmiBlitz3.ab2@21314>    BSR.w makename2
0003E6FE <AmiBlitz3.ab2@21315>    BEQ.w JUMP_syntaxerr
0003E704 <AmiBlitz3.ab2@21317>    CLR.b thenmode
0003E70E <AmiBlitz3.ab2@21319>    MOVE.w oldqflag,instringon
0003E714 <AmiBlitz3.ab2@21320>   MOVEA.l lastsourcepos,A5
0003E718 <AmiBlitz3.ab2@21321>    BSR.w findmac
0003E71C <AmiBlitz3.ab2@21322>    BEQ.w dupmacerr
0003E720 <AmiBlitz3.ab2@21323>    BSR.w addlabel
0003E724 <AmiBlitz3.ab2@21324>   CLR.w $A(A2)
0003E72A <AmiBlitz3.ab2@21325>   MOVEA.l ptr_macrobuffer_begin,A0
0003E72C <AmiBlitz3.ab2@21326>   MOVEQ.l #$00,D2
0003E732 <AmiBlitz3.ab2@21327>   CLR.w coolnest
0003E734 <AmiBlitz3.ab2@21330>   MOVE.b (a5),d0
0003E738 <AmiBlitz3.ab2@21331>      BEQ 'l3
0003E73C <AmiBlitz3.ab2@21332>      CMP.b #" ",d0
0003E740 <AmiBlitz3.ab2@21333>       BNE 'l2                                              ;space macro
0003E742 <AmiBlitz3.ab2@21334>       ADDQ.l #1,a5
0003E746 <AmiBlitz3.ab2@21335> BRA 'l1
0003E74A <AmiBlitz3.ab2@21338>    CMP.b #";",d0
0003E74E <AmiBlitz3.ab2@21339>       BNE 'l3
0003E750 <AmiBlitz3.ab2@21342>    MOVE.b (a5),d0
0003E754 <AmiBlitz3.ab2@21343>       BEQ 'l5
0003E758 <AmiBlitz3.ab2@21344>       BSR.w JL_0_CC98                                      ;add comment
0003E75A <AmiBlitz3.ab2@21345>       ADDQ.l #1,a5
0003E75E <AmiBlitz3.ab2@21346> BRA 'l4
0003E762 <AmiBlitz3.ab2@21349>    MOVE.b #":",d0
0003E766 <AmiBlitz3.ab2@21350>       BSR.w JL_0_CC98
0003E76A <AmiBlitz3.ab2@21351>       MOVE.b #"@",d0
0003E76E <AmiBlitz3.ab2@21352>       BSR.w JL_0_CC98
0003E776 <AmiBlitz3.ab2@21355>    MOVE.b #0,temp
0003E77E <AmiBlitz3.ab2@21356>       MOVE.b #0,thenmode
0003E784 <AmiBlitz3.ab2@21359>   JSR getcharb
0003E786 <AmiBlitz3.ab2@21360>   TST.w D0
0003E78A <AmiBlitz3.ab2@21361>    BNE.w JL_0_CBDE
0003E78E <AmiBlitz3.ab2@21362>   MOVEM.l D2/A0/A2,-(A7)
0003E794 <AmiBlitz3.ab2@21363>   CMP.w #"@@",-3(a5)
0003E798 <AmiBlitz3.ab2@21364>   BNE 'l2a
0003E79E <AmiBlitz3.ab2@21365>   JSR nextline
0003E7A2 <AmiBlitz3.ab2@21366>   BEQ.w macenderr
0003E7A6 <AmiBlitz3.ab2@21367>   MOVEM.l (A7)+,D2/A0/A2
0003E7AA <AmiBlitz3.ab2@21368> BRA.w JL_0_CBB6
0003E7B0 <AmiBlitz3.ab2@21371>    JSR nextline
0003E7B4 <AmiBlitz3.ab2@21372>    BEQ.w macenderr
0003E7B8 <AmiBlitz3.ab2@21373>   MOVEM.l (A7)+,D2/A0/A2
0003E7BA <AmiBlitz3.ab2@21374>   TST.w D2
0003E7BE <AmiBlitz3.ab2@21375>    BEQ.w JL_0_CBB6
0003E7C0 <AmiBlitz3.ab2@21378>   MOVE.b (a5),d0
0003E7C4 <AmiBlitz3.ab2@21379>       CMP.b #" ",d0
0003E7C8 <AmiBlitz3.ab2@21380>       BNE 'l1
0003E7CA <AmiBlitz3.ab2@21381>       ADDQ.w #1,a5
0003E7CE <AmiBlitz3.ab2@21382> BRA 'l2
0003E7D4 <AmiBlitz3.ab2@21385>   TST.b thenmode
0003E7D8 <AmiBlitz3.ab2@21386>      BEQ 'l3
0003E7DA <AmiBlitz3.ab2@21387>      MOVEQ #":",d0
0003E7DE <AmiBlitz3.ab2@21388>      BSR.w JL_0_CC98
0003E7E2 <AmiBlitz3.ab2@21389>      MOVE.w #-$7FFE,D0                                     ;write end if
0003E7E6 <AmiBlitz3.ab2@21390>      BSR macputw
0003E7EA <AmiBlitz3.ab2@21391>      MOVE.w #$800b,d0
0003E7EE <AmiBlitz3.ab2@21392>      BSR.w macputw
0003E7F4 <AmiBlitz3.ab2@21393>      CLR.b thenmode
0003E7F6 <AmiBlitz3.ab2@21396>    MOVEQ.l #$3A,D0
0003E7FE <AmiBlitz3.ab2@21397>      MOVE.b #1,temp
0003E802 <AmiBlitz3.ab2@21399> BRA.w JL_0_CC2A
0003E806 <AmiBlitz3.ab2@21403>   BPL.w JL_0_CC2A
0003E80A <AmiBlitz3.ab2@21404>   CMP.w #-$7FF3,D0                                         ;macro ?
0003E80E <AmiBlitz3.ab2@21405>    BNE.w JL_0_CBF4
0003E814 <AmiBlitz3.ab2@21406>   ADDQ.w #1,coolnest
0003E818 <AmiBlitz3.ab2@21407> BRA.w JL_0_CC22
0003E81C <AmiBlitz3.ab2@21410>   CMP.w #$80d7,d0                                          ;object ?
0003E820 <AmiBlitz3.ab2@21411>     BNE 'l1x
0003E826 <AmiBlitz3.ab2@21412>     TST.b objectcount
0003E82A <AmiBlitz3.ab2@21413>     BNE macnesterr
0003E82E <AmiBlitz3.ab2@21416>   CMP.w #$8021,d0
0003E832 <AmiBlitz3.ab2@21417>     BNE 'nothen
0003E83A <AmiBlitz3.ab2@21418>     MOVE.b #1,thenmode
0003E840 <AmiBlitz3.ab2@21421>   TST.b thenmode
0003E844 <AmiBlitz3.ab2@21422>         BEQ 'l1
0003E848 <AmiBlitz3.ab2@21423>    CMP.w #$8002,d0                                         ;end if
0003E84C <AmiBlitz3.ab2@21424>    BNE 'l1
0003E850 <AmiBlitz3.ab2@21425>    MOVEM.l d0/a5,-(a7)
0003E856 <AmiBlitz3.ab2@21426>    JSR get1bytemain
0003E858 <AmiBlitz3.ab2@21427>    MOVE.w d0,d1
0003E85C <AmiBlitz3.ab2@21428>    MOVEM.l (a7)+,a5/d0
0003E860 <AmiBlitz3.ab2@21429>    CMP.w #$800b,d1
0003E864 <AmiBlitz3.ab2@21430>    BNE 'l1
0003E86A <AmiBlitz3.ab2@21431>    CLR.b thenmode
0003E86E <AmiBlitz3.ab2@21434>    CMP.w #-$7FFE,D0                                        ;end ?
0003E872 <AmiBlitz3.ab2@21435>    BNE.w JL_0_CC22
0003E874 <AmiBlitz3.ab2@21436>    MOVE.l a5,-(a7)
0003E87A <AmiBlitz3.ab2@21437>    JSR get1bytemain
0003E87C <AmiBlitz3.ab2@21438>    MOVE.l (a7)+,a5
0003E87E <AmiBlitz3.ab2@21439>    TST.w d0
0003E882 <AmiBlitz3.ab2@21440>    BEQ 'doend
0003E886 <AmiBlitz3.ab2@21441>    CMP.w #":",d0
0003E88A <AmiBlitz3.ab2@21442>    BEQ 'doend
0003E88E <AmiBlitz3.ab2@21443>    CMP.w #";",d0
0003E892 <AmiBlitz3.ab2@21444>    BEQ 'doend
0003E894 <AmiBlitz3.ab2@21445>    MOVE.l a5,-(a7)
0003E89A <AmiBlitz3.ab2@21446>    JSR get1bytemain
0003E89E <AmiBlitz3.ab2@21447>    MOVE.l -1(a5),d0
0003E8A0 <AmiBlitz3.ab2@21448>    MOVE.l (a7)+,a5
0003E8A6 <AmiBlitz3.ab2@21449>    CMP.l #"noa7",d0
0003E8AA <AmiBlitz3.ab2@21450>    BEQ 'doend
0003E8AE <AmiBlitz3.ab2@21451> BRA 'morechar
0003E8B2 <AmiBlitz3.ab2@21454>   MOVE.w #$8002,D0
0003E8B6 <AmiBlitz3.ab2@21455>    BSR.w macputw
0003E8BA <AmiBlitz3.ab2@21456> BRA JL_0_CBB6
0003E8C0 <AmiBlitz3.ab2@21459>   JSR get1bytemain
0003E8C4 <AmiBlitz3.ab2@21460>    CMP.w #-$7FF3,D0                                        ;end macro
0003E8C8 <AmiBlitz3.ab2@21461>    BEQ.w 'lo1
0003E8CC <AmiBlitz3.ab2@21462>   CMP.w #$80d7,d0                                          ;end object
0003E8D0 <AmiBlitz3.ab2@21463>   BNE JL_0_CC12
0003E8D6 <AmiBlitz3.ab2@21464>   SUBQ.b #1,objectcount
0003E8DC <AmiBlitz3.ab2@21465>   TST.b developobject
0003E8E0 <AmiBlitz3.ab2@21466>   BEQ 'lo1
0003E8E4 <AmiBlitz3.ab2@21467>   BSR skiprest
0003E8E6 <AmiBlitz3.ab2@21468> RTS
0003E8EC <AmiBlitz3.ab2@21471>   SUBQ.w #1,coolnest
0003E8F0 <AmiBlitz3.ab2@21472>    BMI.w JL_0_CC32
0003E8F2 <AmiBlitz3.ab2@21475>   MOVE.w D0,-(A7)
0003E8F6 <AmiBlitz3.ab2@21476>   MOVE.w #$8002,D0
0003E8FA <AmiBlitz3.ab2@21477>    BSR.w macputw
0003E8FC <AmiBlitz3.ab2@21478>   MOVE.w (A7)+,D0
0003E900 <AmiBlitz3.ab2@21479> BRA.w JL_0_CC22
0003E904 <AmiBlitz3.ab2@21482>   BSR.w macputw
0003E908 <AmiBlitz3.ab2@21483> BRA.w JL_0_CBB6
0003E90E <AmiBlitz3.ab2@21486>     CMP.w #"@@",-1(a5)                                     ;merge lines
0003E912 <AmiBlitz3.ab2@21487>     BNE 'no
0003E916 <AmiBlitz3.ab2@21488>      MOVEM.l D2/A0/A2,-(A7)
0003E91C <AmiBlitz3.ab2@21489>    JSR nextline
0003E920 <AmiBlitz3.ab2@21490>    BEQ.w macenderr
0003E924 <AmiBlitz3.ab2@21491>   MOVEM.l (A7)+,D2/A0/A2
0003E926 <AmiBlitz3.ab2@21492>     TST.w D2
0003E92A <AmiBlitz3.ab2@21493>    BEQ.w JL_0_CBB6
0003E92E <AmiBlitz3.ab2@21494> BRA JL_0_CBB6
0003E932 <AmiBlitz3.ab2@21497>   BSR.w JL_0_CC98
0003E936 <AmiBlitz3.ab2@21498> BRA.w JL_0_CBB6
0003E938 <AmiBlitz3.ab2@21501>   ADDQ.w #4,A7
0003E93A <AmiBlitz3.ab2@21502>   MOVE.l A0,D0
0003E940 <AmiBlitz3.ab2@21503>   SUB.l ptr_macrobuffer_begin,D0
0003E944 <AmiBlitz3.ab2@21506>    BEQ.w JL_0_CC5E
0003E948 <AmiBlitz3.ab2@21507>   CMPI.b #":",-(A0)
0003E94C <AmiBlitz3.ab2@21508>    BNE.w JL_0_CC5E
0003E950 <AmiBlitz3.ab2@21509>   CMP.w #$1,D0
0003E954 <AmiBlitz3.ab2@21510>    BEQ.w JL_0_CC58
0003E958 <AmiBlitz3.ab2@21511>   TST.b -$1(A0)
0003E95C <AmiBlitz3.ab2@21512>    BMI.w JL_0_CC5E
0003E95E <AmiBlitz3.ab2@21515>   SUBQ.w #1,D0
0003E962 <AmiBlitz3.ab2@21516> BRA.w JL_0_CC3C
0003E966 <AmiBlitz3.ab2@21519>   MOVE.w D0,$8(A2)
0003E96A <AmiBlitz3.ab2@21520>    BEQ.w JL_0_CC8E
0003E96C <AmiBlitz3.ab2@21521>   MOVEQ.l #$01,D1
0003E972 <AmiBlitz3.ab2@21522>   MOVEA.l _execbase,A6
0003E978 <AmiBlitz3.ab2@21523>   MOVE.l mempool,a0
0003E97C <AmiBlitz3.ab2@21524>   JSR _AllocPooled(a6)
0003E97E <AmiBlitz3.ab2@21526>   MOVEA.l D0,A0
0003E982 <AmiBlitz3.ab2@21527>   MOVE.l A0,$4(A2)
0003E986 <AmiBlitz3.ab2@21528>   MOVE.w $8(A2),D1
0003E98A <AmiBlitz3.ab2@21529>    BEQ.w JL_0_CC8E
0003E98C <AmiBlitz3.ab2@21530>   SUBQ.w #1,D1
0003E992 <AmiBlitz3.ab2@21531>   MOVEA.l ptr_macrobuffer_begin,A1
0003E994 <AmiBlitz3.ab2@21534>     MOVE.b (A1)+,(A0)+
0003E998 <AmiBlitz3.ab2@21535>   DBF D1,JL_0_CC88
0003E99E <AmiBlitz3.ab2@21538> JMP get1bytemain
0003E9A0 <AmiBlitz3.ab2@21542>   MOVE.w D0,D1
0003E9A2 <AmiBlitz3.ab2@21543>   LSR.w #8,D1
0003E9A4 <AmiBlitz3.ab2@21544>   MOVE.b D1,(A0)+
0003E9A6 <AmiBlitz3.ab2@21547>   MOVEQ.l #-$01,D2
0003E9A8 <AmiBlitz3.ab2@21548>   MOVE.b D0,(A0)+
0003E9AE <AmiBlitz3.ab2@21549>   CMPA.l ptr_macrobuffer_end,A0
0003E9B2 <AmiBlitz3.ab2@21550>    BCC.w macbigerr
0003E9B4 <AmiBlitz3.ab2@21551> RTS
0003E9B6 <AmiBlitz3.ab2@21555>   MOVE.l d0,-(a7)
0003E9B8 <AmiBlitz3.ab2@21556>   MOVEQ #0,d0
0003E9BE <AmiBlitz3.ab2@21557>   CLR.b skiptoggle
0003E9C0 <AmiBlitz3.ab2@21560>     MOVE.b (a5),d0
0003E9C4 <AmiBlitz3.ab2@21561>     BEQ 'l3
0003E9C8 <AmiBlitz3.ab2@21562>     CMP.b #";",d0
0003E9CC <AmiBlitz3.ab2@21563>     BNE 'l2
0003E9D4 <AmiBlitz3.ab2@21564>     MOVE.b #1,skiptoggle
0003E9DA <AmiBlitz3.ab2@21567>     TST.b skiptoggle
0003E9DE <AmiBlitz3.ab2@21568>     BNE 'l4
0003E9E2 <AmiBlitz3.ab2@21569>     CMP.b #":",d0
0003E9E6 <AmiBlitz3.ab2@21570>     BEQ 'l3
0003E9E8 <AmiBlitz3.ab2@21573>     ADDQ #1,a5
0003E9EC <AmiBlitz3.ab2@21574> BRA 'loop
0003E9F2 <AmiBlitz3.ab2@21577>   MOVE.w d0,lastchar
0003E9F4 <AmiBlitz3.ab2@21578>   MOVE.l (a7)+,d0
0003E9F6 <AmiBlitz3.ab2@21579> RTS
0003E9FA <AmiBlitz3.ab2@21583>   BSR.w ifchar
0003E9FE <AmiBlitz3.ab2@21584>    BNE.w JUMP_syntaxerr
0003EA00 <AmiBlitz3.ab2@21585>   MOVE.w D0,D1
0003EA06 <AmiBlitz3.ab2@21586>   JSR get1bytemain
0003EA0A <AmiBlitz3.ab2@21587>   BSR.w ifchar
0003EA0E <AmiBlitz3.ab2@21588>    BNE.w JL_0_CCDA
0003EA10 <AmiBlitz3.ab2@21589>   ADDQ.w #1,D0
0003EA12 <AmiBlitz3.ab2@21590>   MOVE.w D0,D2
0003EA14 <AmiBlitz3.ab2@21591>   ADD.w D0,D0
0003EA16 <AmiBlitz3.ab2@21592>   ADD.w D2,D0
0003EA18 <AmiBlitz3.ab2@21593>   ADD.w D0,D1
0003EA1A <AmiBlitz3.ab2@21594>   MOVE.w D1,D0
0003EA1E <AmiBlitz3.ab2@21595>   ANDI.w #$3,D0
0003EA22 <AmiBlitz3.ab2@21596>   CMP.w #$3,D0
0003EA26 <AmiBlitz3.ab2@21597>    BEQ.w JUMP_syntaxerr
0003EA2C <AmiBlitz3.ab2@21599>   JSR get1bytemain
0003EA2E <AmiBlitz3.ab2@21602> RTS
0003EA30 <AmiBlitz3.ab2@21608> thetst1:  TST.b D0
0003EA32 <AmiBlitz3.ab2@21609> thetst2:  TST.w D0
0003EA34 <AmiBlitz3.ab2@21610> thetst3:  TST.l D0
0003EA36 <AmiBlitz3.ab2@21611> thetst4:  TST.l (A7)+                                      ;Any Length?
0003EA3A <AmiBlitz3.ab2@21612> thetst5:  JSR _Reschedule(A6)
0003EA3E <AmiBlitz3.ab2@21614> posbr:    BEQ.w posbr
0003EA42 <AmiBlitz3.ab2@21615> negbr:    BNE.w negbr
0003EA44 <AmiBlitz3.ab2@21619>   MOVEQ.l #-$01,D2
0003EA48 <AmiBlitz3.ab2@21620> BRA.w JL_0_D04C
0003EA4E <AmiBlitz3.ab2@21624>   CLR.l fp0addr
0003EA50 <AmiBlitz3.ab2@21625>   MOVEQ.l #$01,D1                                          ;while flag
0003EA52 <AmiBlitz3.ab2@21626>   MOVEQ.l #$00,D2                                          ;negate flag
0003EA56 <AmiBlitz3.ab2@21627> BRA.w JL_0_D04E
0003EA5C <AmiBlitz3.ab2@21631>   LEA firstrep,A2
0003EA5E <AmiBlitz3.ab2@21632>   MOVEQ.l #$08,D2
0003EA62 <AmiBlitz3.ab2@21633> BRA.w freeslist
0003EA66 <AmiBlitz3.ab2@21637>   LEA firstsel(PC),A2
0003EA68 <AmiBlitz3.ab2@21638>   MOVEQ.l #$0E,D2
0003EA6A <AmiBlitz3.ab2@21643>   MOVEQ.l #$00,D3
0003EA6C <AmiBlitz3.ab2@21651>   MOVE.l (A2),D0
0003EA6E <AmiBlitz3.ab2@21652>   CLR.l (A2)
0003EA70 <AmiBlitz3.ab2@21653>   MOVEA.l D0,A2
0003EA76 <AmiBlitz3.ab2@21654>   MOVEA.l _execbase,A6
0003EA7A <AmiBlitz3.ab2@21657>     CMPA.w #$0,A2
0003EA7E <AmiBlitz3.ab2@21658>      BEQ.w freelist__done
0003EA80 <AmiBlitz3.ab2@21659>     TST.w D3
0003EA84 <AmiBlitz3.ab2@21660>      BEQ.w freelist__skip
0003EA88 <AmiBlitz3.ab2@21661>     MOVEM.l D2-D3/A2,-(A7)
0003EA8A <AmiBlitz3.ab2@21662>     ADDA.w D3,A2
0003EA8C <AmiBlitz3.ab2@21663>     MOVE.l D4,D2
0003EA90 <AmiBlitz3.ab2@21664>     BSR.w freeslist
0003EA94 <AmiBlitz3.ab2@21665>     MOVEM.l (A7)+,D2-D3/A2
0003EA96 <AmiBlitz3.ab2@21668>     MOVEA.l A2,A1
0003EA98 <AmiBlitz3.ab2@21669>     MOVE.l D2,D0
0003EA9A <AmiBlitz3.ab2@21670>     MOVEA.l (A2),A2
0003EAA0 <AmiBlitz3.ab2@21671>     MOVE.l mempool,a0
0003EAA4 <AmiBlitz3.ab2@21672>     JSR _FreePooled(A6)
0003EAA8 <AmiBlitz3.ab2@21673> BRA.w freelist__loop
0003EAAA <AmiBlitz3.ab2@21676> RTS
0003EAB0 <AmiBlitz3.ab2@21679> JMP eselerr
0003EAB4 <AmiBlitz3.ab2@21682> firstsel:  Ds.l 1
0003EAB8 <AmiBlitz3.ab2@21685> selpushb:   Dc.b $02,$40,$00,$FF                           ;ANDI.W  #$00FF,D0
0003EABA <AmiBlitz3.ab2@21688> selpushw:   MOVE.w D0,-(A7)
0003EABC <AmiBlitz3.ab2@21690> selpushl:   MOVE.l D0,-(A7)
0003EAC0 <AmiBlitz3.ab2@21692> selpushs:   LEA $4(A7),A2                                  ;(a7)=len of string!
0003EAC4 <AmiBlitz3.ab2@21695> selcomb:    ANDI.w #$FF,D0
0003EAC6 <AmiBlitz3.ab2@21696> selcomw:    CMP.w (A7),D0
0003EAC8 <AmiBlitz3.ab2@21698> selcoml:    CMP.l (A7),D0
0003EACC <AmiBlitz3.ab2@21700> selbne:     BNE.w selbne
0003EACE <AmiBlitz3.ab2@21702> endsel:     ADDQ.w #8,A7
0003EAD2 <AmiBlitz3.ab2@21708>   MOVE.l firstsel(PC),D0                                  
0003EAD6 <AmiBlitz3.ab2@21709>    BEQ.w JUMP_eselerr
0003EAD8 <AmiBlitz3.ab2@21710>   MOVEA.l D0,A2
0003EADC <AmiBlitz3.ab2@21711>    BSR.w JL_0_CDFC
0003EAE2 <AmiBlitz3.ab2@21714>   MOVEA.l _execbase,A6
0003EAE6 <AmiBlitz3.ab2@21717>   MOVE.l $4(A2),D0
0003EAEA <AmiBlitz3.ab2@21718>    BEQ.w doendsel__done
0003EAEC <AmiBlitz3.ab2@21719>   MOVEA.l D0,A3
0003EAF0 <AmiBlitz3.ab2@21720>   MOVEA.l $4(A3),A0
0003EAF6 <AmiBlitz3.ab2@21721>   MOVE.l destpointer,D1
0003EAF8 <AmiBlitz3.ab2@21722>   SUB.l A0,D1
0003EAFE <AmiBlitz3.ab2@21724>     TST.b fast
0003EB02 <AmiBlitz3.ab2@21725>     BEQ doendsel__loop_l1
0003EB08 <AmiBlitz3.ab2@21726>     MOVE.w dontwrite,D0
0003EB0C <AmiBlitz3.ab2@21727>     BNE.w doendsel__skip
0003EB0E <AmiBlitz3.ab2@21728>     ADDQ.l #2,d1
0003EB12 <AmiBlitz3.ab2@21729>     MOVE.l d1,-2(a0)
0003EB16 <AmiBlitz3.ab2@21730>   BRA doendsel__skip
0003EB1C <AmiBlitz3.ab2@21734>   TST.w dontwrite
0003EB20 <AmiBlitz3.ab2@21735>      BNE.w doendsel__skip
0003EB26 <AmiBlitz3.ab2@21736>   CMP.l #MaxWordSgnd,D1
0003EB2A <AmiBlitz3.ab2@21737>    BHI.w JUMP_cbraerr
0003EB2C <AmiBlitz3.ab2@21738>   MOVE.w D1,(A0)
0003EB30 <AmiBlitz3.ab2@21741>   MOVE.l (A3),$4(A2)                                       ;next of me is new first
0003EB32 <AmiBlitz3.ab2@21742>   MOVEA.l A3,A1
0003EB34 <AmiBlitz3.ab2@21743>   MOVEQ.l #$08,D0
0003EB3A <AmiBlitz3.ab2@21744>   MOVE.l mempool,a0
0003EB3E <AmiBlitz3.ab2@21745>    JSR _FreePooled(A6)
0003EB42 <AmiBlitz3.ab2@21746> BRA.w doendsel__loop
0003EB48 <AmiBlitz3.ab2@21749>   JSR popselect                                            ;fix stack on select
0003EB4C <AmiBlitz3.ab2@21750>   MOVEA.l firstsel(PC),A1
0003EB52 <AmiBlitz3.ab2@21751>   MOVE.l (A1),firstsel
0003EB54 <AmiBlitz3.ab2@21752>   MOVEQ.l #$0E,D0
0003EB5A <AmiBlitz3.ab2@21753>   MOVEA.l _execbase,A6
0003EB60 <AmiBlitz3.ab2@21754>   MOVE.l mempool,a0
0003EB64 <AmiBlitz3.ab2@21755>   JSR _FreePooled(A6)
0003EB6A <AmiBlitz3.ab2@21756> JMP get1bytemain
0003EB6C <AmiBlitz3.ab2@21760>   MOVEA.l (A7)+,A1
0003EB6E <AmiBlitz3.ab2@21761>   SUBQ.w #8,A1
0003EB70 <AmiBlitz3.ab2@21762>   MOVEQ.l #$09,D0
0003EB72 <AmiBlitz3.ab2@21763>   ADD.l (A1),D0
0003EB74 <AmiBlitz3.ab2@21766>   ADDQ.w #2,A7                                             ;for runtime errs!
0003EB78 <AmiBlitz3.ab2@21771>   MOVE.l firstsel(PC),D0
0003EB7C <AmiBlitz3.ab2@21772>    BEQ.w JUMP_defaerr
0003EB7E <AmiBlitz3.ab2@21773>   MOVEA.l D0,A2
0003EB82 <AmiBlitz3.ab2@21774>   BSR.w JL_0_CE26
0003EB86 <AmiBlitz3.ab2@21775>   BSR.w JL_0_CDFC
0003EB8A <AmiBlitz3.ab2@21776>   CLR.l $8(A2)
0003EB8E <AmiBlitz3.ab2@21777>   MOVE.w $C(A2),D2
0003EB92 <AmiBlitz3.ab2@21778> BRA.w JL_0_CE5E
0003EB98 <AmiBlitz3.ab2@21781> JMP defaerr
0003EB9C <AmiBlitz3.ab2@21784>   MOVE.l $8(A2),D0
0003EBA0 <AmiBlitz3.ab2@21785>    BEQ.w JL_0_CE24
0003EBA2 <AmiBlitz3.ab2@21786>   MOVEA.l D0,A0
0003EBA8 <AmiBlitz3.ab2@21787>   MOVE.l destpointer,D1
0003EBAA <AmiBlitz3.ab2@21788>   SUB.l A0,D1
0003EBB0 <AmiBlitz3.ab2@21790>     TST.b fast
0003EBB4 <AmiBlitz3.ab2@21791>     BEQ 'l1
0003EBBA <AmiBlitz3.ab2@21792>     TST.w dontwrite
0003EBBE <AmiBlitz3.ab2@21793>     BNE.w JL_0_CE24
0003EBC0 <AmiBlitz3.ab2@21794>     ADDQ.l #2,d1
0003EBC4 <AmiBlitz3.ab2@21795>     MOVE.l D1,-2(A0)
0003EBC8 <AmiBlitz3.ab2@21796>   BRA JL_0_CE24
0003EBCE <AmiBlitz3.ab2@21800>   TST.w dontwrite
0003EBD2 <AmiBlitz3.ab2@21801>      BNE.w JL_0_CE24
0003EBD8 <AmiBlitz3.ab2@21802>    CMP.l #MaxWordSgnd,D1
0003EBDC <AmiBlitz3.ab2@21803>    BHI.w JUMP_cbraerr
0003EBDE <AmiBlitz3.ab2@21804>   MOVE.w D1,(A0)
0003EBE0 <AmiBlitz3.ab2@21807> RTS
0003EBE6 <AmiBlitz3.ab2@21810> JMP cbraerr
0003EBEA <AmiBlitz3.ab2@21814>   MOVE.l $8(A2),D0
0003EBEE <AmiBlitz3.ab2@21815>    BEQ.w JL_0_CE5C
0003EBF0 <AmiBlitz3.ab2@21816>   MOVEA.l D0,A3
0003EBF4 <AmiBlitz3.ab2@21817>   MOVE.w #$6000,D1
0003EBFA <AmiBlitz3.ab2@21819>    TST.b fast
0003EBFE <AmiBlitz3.ab2@21820>    BEQ 'l1
0003EC04 <AmiBlitz3.ab2@21821>    OR.l #$ff,d1
0003EC08 <AmiBlitz3.ab2@21822>    BSR writeword
0003EC0C <AmiBlitz3.ab2@21826>   BSR.w writeword
0003EC0E <AmiBlitz3.ab2@21827>   MOVEQ.l #$08,D0
0003EC10 <AmiBlitz3.ab2@21828>   MOVEQ.l #$01,D1
0003EC16 <AmiBlitz3.ab2@21829>   MOVEA.l _execbase,A6
0003EC1C <AmiBlitz3.ab2@21830>   MOVE.l mempool,a0
0003EC20 <AmiBlitz3.ab2@21831>   JSR _AllocPooled(a6)
0003EC22 <AmiBlitz3.ab2@21833>   MOVEA.l D0,A0
0003EC26 <AmiBlitz3.ab2@21834>   MOVE.l $4(A2),(A0)
0003EC2A <AmiBlitz3.ab2@21835>   MOVE.l A0,$4(A2)
0003EC32 <AmiBlitz3.ab2@21836>   MOVE.l destpointer,$4(A0)
0003EC36 <AmiBlitz3.ab2@21837> BRA.w writeword
0003EC38 <AmiBlitz3.ab2@21840> RTS
0003EC3E <AmiBlitz3.ab2@21844>   TST.b debugmode
0003EC42 <AmiBlitz3.ab2@21845>    BEQ.w JL_0_CE7A
0003EC46 <AmiBlitz3.ab2@21846>   MOVE.w #$C313,D1
0003EC4A <AmiBlitz3.ab2@21847>   CMP.w #$3,D2
0003EC4E <AmiBlitz3.ab2@21848>    BCS.w JL_0_CE76
0003EC50 <AmiBlitz3.ab2@21849>   ADDQ.w #1,D1
0003EC54 <AmiBlitz3.ab2@21852> BRA.w Atokejsr
0003EC56 <AmiBlitz3.ab2@21855> RTS
0003EC5C <AmiBlitz3.ab2@21859> JMP caseerr
0003EC60 <AmiBlitz3.ab2@21862>   MOVE.l firstsel(PC),D0
0003EC64 <AmiBlitz3.ab2@21863>    BEQ.w JUMP_caseerr
0003EC66 <AmiBlitz3.ab2@21864>   MOVEA.l D0,A2
0003EC6A <AmiBlitz3.ab2@21865>    BSR.w JL_0_CE26
0003EC6E <AmiBlitz3.ab2@21866>    BSR.w JL_0_CDFC
0003EC72 <AmiBlitz3.ab2@21867>   MOVE.w $C(A2),D2
0003EC74 <AmiBlitz3.ab2@21868>   MOVE.w D2,-(A7)
0003EC78 <AmiBlitz3.ab2@21869>    BSR.w JL_0_CE5E
0003EC7A <AmiBlitz3.ab2@21870>   MOVE.w (A7),D2
0003EC7E <AmiBlitz3.ab2@21871>    BSR.w bakeval
0003EC80 <AmiBlitz3.ab2@21872>   MOVE.w (A7)+,D2
0003EC84 <AmiBlitz3.ab2@21873>   LEA selcomb(PC),A0
0003EC88 <AmiBlitz3.ab2@21874>   LEA selcombf(PC),A1
0003EC8C <AmiBlitz3.ab2@21875>   CMP.w #$1,D2
0003EC90 <AmiBlitz3.ab2@21876>    BEQ.w JL_0_CED8
0003EC94 <AmiBlitz3.ab2@21877>   LEA selcomw(PC),A0
0003EC98 <AmiBlitz3.ab2@21878>   CMP.w #$2,D2
0003EC9C <AmiBlitz3.ab2@21879>    BEQ.w JL_0_CED8
0003ECA0 <AmiBlitz3.ab2@21880>   LEA selcoml(PC),A0
0003ECA4 <AmiBlitz3.ab2@21881>   LEA selcomlf(PC),A1
0003ECA8 <AmiBlitz3.ab2@21882>   CMP.w #$7,D2
0003ECAC <AmiBlitz3.ab2@21883>    BCS.w JL_0_CED8
0003ECB0 <AmiBlitz3.ab2@21885>   MOVE.w #$CE01,D1
0003ECB4 <AmiBlitz3.ab2@21886>    BSR.w Atokejsr
0003ECB8 <AmiBlitz3.ab2@21887> BRA.w JL_0_CEDC
0003ECBC <AmiBlitz3.ab2@21890>   BSR.w pokecode
0003ECC0 <AmiBlitz3.ab2@21893>   MOVE.w selbne(PC),D1
0003ECC6 <AmiBlitz3.ab2@21895>     TST.b fast
0003ECCA <AmiBlitz3.ab2@21896>     BEQ 'l1
0003ECD0 <AmiBlitz3.ab2@21897>     ORI.l #$ff,d1
0003ECD4 <AmiBlitz3.ab2@21898>     BSR writeword
0003ECD8 <AmiBlitz3.ab2@21901>   BSR.w writeword
0003ECDC <AmiBlitz3.ab2@21902>   MOVEA.l firstsel(PC),A0
0003ECE4 <AmiBlitz3.ab2@21903>   MOVE.l destpointer,$8(A0)
0003ECE8 <AmiBlitz3.ab2@21904> BRA.w writeword
0003ECEC <AmiBlitz3.ab2@21908> pcchk:      Dc.b $3F,$3C,$73,$45                           ;MOVE.W  #$7345,-(A7)   ;#"sE",-(a7) org source
0003ECEE <AmiBlitz3.ab2@21909> clrst:      Dc.b $42,$A7                                   ;CLR.L   -(A7)
0003ECF2 <AmiBlitz3.ab2@21912> sellineat:  Ds.l 1
0003ECF8 <AmiBlitz3.ab2@21918>   TST.b debugmode
0003ECFC <AmiBlitz3.ab2@21919>    BEQ.w JL_0_CF0E
0003ED00 <AmiBlitz3.ab2@21920>   MOVE.l pcchk(PC),D1                                      ;move #"sE",-(a7)
0003ED04 <AmiBlitz3.ab2@21921>    BSR.w writelong
0003ED0E <AmiBlitz3.ab2@21924>   MOVE.l linenumat,sellineat
0003ED18 <AmiBlitz3.ab2@21926>    MOVE.l destpointer,pushpc
0003ED22 <AmiBlitz3.ab2@21927>   MOVE.l hunkoffsetbase,pushoff
0003ED24 <AmiBlitz3.ab2@21928>   MOVEQ.l #$00,D2
0003ED28 <AmiBlitz3.ab2@21929>    BSR.w bakevalu                                          ;Evaluate
0003ED2C <AmiBlitz3.ab2@21930>    BSR.w JL_0_B5D2
0003ED30 <AmiBlitz3.ab2@21931>   CMP.w #$7,D2
0003ED34 <AmiBlitz3.ab2@21932>    BNE.w JL_0_CF36
0003ED38 <AmiBlitz3.ab2@21933>   MOVE.w clrst(PC),D1
0003ED3C <AmiBlitz3.ab2@21934>    BSR.w writeword
0003ED40 <AmiBlitz3.ab2@21937>    BSR.w JL_0_B63C
0003ED44 <AmiBlitz3.ab2@21938>   LEA selpushb(PC),A0
0003ED48 <AmiBlitz3.ab2@21939>   LEA selpushbf(PC),A1
0003ED4C <AmiBlitz3.ab2@21940>   CMP.w #$1,D2
0003ED50 <AmiBlitz3.ab2@21941>    BEQ.w JL_0_CF88
0003ED54 <AmiBlitz3.ab2@21942>   LEA selpushw(PC),A0
0003ED58 <AmiBlitz3.ab2@21943>   CMP.w #$2,D2
0003ED5C <AmiBlitz3.ab2@21944>    BEQ.w JL_0_CF88
0003ED60 <AmiBlitz3.ab2@21945>   LEA selpushl(PC),A0
0003ED64 <AmiBlitz3.ab2@21946>   LEA selpushlf(PC),A1
0003ED68 <AmiBlitz3.ab2@21947>   CMP.w #$7,D2
0003ED6C <AmiBlitz3.ab2@21948>    BCS.w JL_0_CF88
0003ED72 <AmiBlitz3.ab2@21950>   MOVE.w moved0a3,D1                                       ;d0 to a3!
0003ED76 <AmiBlitz3.ab2@21951>    BSR.w writeword
0003ED7A <AmiBlitz3.ab2@21952>   LEA selpushs(PC),A0
0003ED7E <AmiBlitz3.ab2@21953>   LEA selpushsf(PC),A1
0003ED82 <AmiBlitz3.ab2@21954>    BSR.w pokecode
0003ED86 <AmiBlitz3.ab2@21955>   MOVE.w #$C701,D1
0003ED8A <AmiBlitz3.ab2@21956>    BSR.w Atokejsr
0003ED8E <AmiBlitz3.ab2@21957> BRA.w JL_0_CF8C
0003ED92 <AmiBlitz3.ab2@21960>   BSR.w pokecode
0003ED94 <AmiBlitz3.ab2@21963>   MOVEQ.l #$0E,D0
0003ED96 <AmiBlitz3.ab2@21964>   MOVEQ.l #$01,D1
0003ED9C <AmiBlitz3.ab2@21965>   MOVEA.l _execbase,A6
0003EDA2 <AmiBlitz3.ab2@21967>   MOVE.l mempool,a0
0003EDA6 <AmiBlitz3.ab2@21968>   JSR _AllocPooled(a6)
0003EDA8 <AmiBlitz3.ab2@21969>   MOVEA.l D0,A0
0003EDAC <AmiBlitz3.ab2@21970>   MOVE.l firstsel(PC),(A0)
0003EDB2 <AmiBlitz3.ab2@21971>   MOVE.l A0,firstsel
0003EDB6 <AmiBlitz3.ab2@21972>   CLR.l $4(A0)
0003EDBA <AmiBlitz3.ab2@21973>   CLR.l $8(A0)
0003EDBE <AmiBlitz3.ab2@21974>   MOVE.w D2,$C(A0)
0003EDC0 <AmiBlitz3.ab2@21975> RTS
0003EDC6 <AmiBlitz3.ab2@21979>   MOVE.l firstrep,D0
0003EDCA <AmiBlitz3.ab2@21980>    BEQ.w JUMP_unterr1
0003EDCE <AmiBlitz3.ab2@21981>   MOVE.w #$6000,D1
0003EDD2 <AmiBlitz3.ab2@21982>   BSR.w writeword
0003EDD4 <AmiBlitz3.ab2@21983>   MOVEA.l D0,A0
0003EDD8 <AmiBlitz3.ab2@21984>   MOVE.l $4(A0),D1
0003EDDE <AmiBlitz3.ab2@21985>   SUB.l destpointer,D1
0003EDE0 <AmiBlitz3.ab2@21986>   TST.w D1
0003EDE4 <AmiBlitz3.ab2@21987>    BPL.w JUMP_unterr2
0003EDE8 <AmiBlitz3.ab2@21988>   BSR.w writeword
0003EDEE <AmiBlitz3.ab2@21989>   MOVEA.l _execbase,A6
0003EDF2 <AmiBlitz3.ab2@21990> BRA.w JL_0_D036
0003EDF8 <AmiBlitz3.ab2@21993> JMP unterr2
0003EDFE <AmiBlitz3.ab2@21996> JMP unterr1
0003EE04 <AmiBlitz3.ab2@22000>   MOVE.l firstrep,D0
0003EE08 <AmiBlitz3.ab2@22001>    BEQ.w JUMP_unterr1
0003EE0C <AmiBlitz3.ab2@22002>   BSR.w do_if
0003EE12 <AmiBlitz3.ab2@22003>   JSR reget
0003EE16 <AmiBlitz3.ab2@22004>    BNE.w JUMP_syntaxerr
0003EE1C <AmiBlitz3.ab2@22005>   MOVE.w dontwrite,D1
0003EE20 <AmiBlitz3.ab2@22006>    BNE.w JL_0_D020
0003EE26 <AmiBlitz3.ab2@22007>   MOVEA.l firstrep,A0
0003EE2C <AmiBlitz3.ab2@22008>   MOVEA.l destpointer,A1
0003EE32 <AmiBlitz3.ab2@22010>     TST.b fast
0003EE36 <AmiBlitz3.ab2@22011>     BEQ 'l1
0003EE38 <AmiBlitz3.ab2@22012>     SUBQ.w #4,a1
0003EE3C <AmiBlitz3.ab2@22013>     MOVE.l $4(A0),D2
0003EE3E <AmiBlitz3.ab2@22014>     SUB.l A1,D2
0003EE40 <AmiBlitz3.ab2@22015>     MOVE.l d2,(a1)
0003EE44 <AmiBlitz3.ab2@22016>   BRA JL_0_D020
0003EE46 <AmiBlitz3.ab2@22020>   SUBQ.w #2,A1
0003EE4A <AmiBlitz3.ab2@22021>   MOVE.l $4(A0),D2
0003EE4C <AmiBlitz3.ab2@22022>   SUB.l A1,D2
0003EE4E <AmiBlitz3.ab2@22023>   TST.w D2
0003EE52 <AmiBlitz3.ab2@22024>    BPL.w JUMP_unterr2
0003EE54 <AmiBlitz3.ab2@22025>   MOVE.w D2,(A1)
0003EE5A <AmiBlitz3.ab2@22028>   MOVEA.l firstiff,A1
0003EE60 <AmiBlitz3.ab2@22029>   MOVE.l (A1),firstiff
0003EE62 <AmiBlitz3.ab2@22030>   MOVEQ.l #$0E,D0
0003EE68 <AmiBlitz3.ab2@22031>   MOVEA.l _execbase,A6
0003EE6E <AmiBlitz3.ab2@22032>   MOVE.l mempool,a0
0003EE72 <AmiBlitz3.ab2@22033>   JSR _FreePooled(A6)
0003EE78 <AmiBlitz3.ab2@22036>   MOVEA.l firstrep,A1
0003EE7E <AmiBlitz3.ab2@22037>   MOVE.l (A1),firstrep
0003EE80 <AmiBlitz3.ab2@22038>   MOVEQ.l #$08,D0
0003EE86 <AmiBlitz3.ab2@22039>   MOVE.l mempool,a0
0003EE8A <AmiBlitz3.ab2@22040> JMP _FreePooled(A6)
0003EE8E <AmiBlitz3.ab2@22043> iflineat:   Ds.l 1
0003EE90 <AmiBlitz3.ab2@22047>   MOVEQ.l #$00,D2
0003EE96 <AmiBlitz3.ab2@22048>   TST.b fast
0003EE9A <AmiBlitz3.ab2@22049>   BEQ 'l1
0003EEA2 <AmiBlitz3.ab2@22050>   MOVE.b #1,nostringopt
0003EEAA <AmiBlitz3.ab2@22051>   MOVE.b #1,iniffcommand
0003EEAC <AmiBlitz3.ab2@22055>   MOVEQ.l #$00,D1
0003EEAE <AmiBlitz3.ab2@22058>   MOVE.w D1,-(A7)
0003EEB4 <AmiBlitz3.ab2@22059>   MOVE.l destpointer,-(A7)
0003EEB6 <AmiBlitz3.ab2@22060>   MOVE.w D2,-(A7)
0003EEC0 <AmiBlitz3.ab2@22061>   MOVE.l linenumat,iflineat
0003EEC2 <AmiBlitz3.ab2@22062>   MOVEQ.l #$00,D2
0003EECC <AmiBlitz3.ab2@22063>   MOVE.b optistring,optistring2
0003EED4 <AmiBlitz3.ab2@22064>   MOVE.b #1,optistring
0003EED8 <AmiBlitz3.ab2@22065>   BSR.w bakevalu
0003EEE2 <AmiBlitz3.ab2@22066>   MOVE.b optistring2,optistring
0003EEE6 <AmiBlitz3.ab2@22067>   CMP.w #$5,D2
0003EEEA <AmiBlitz3.ab2@22068>    BEQ.w JL_0_D09C
0003EEEE <AmiBlitz3.ab2@22069>   MOVE.w thetst1(PC),D1
0003EEF2 <AmiBlitz3.ab2@22070>   CMP.w #$1,D2
0003EEF6 <AmiBlitz3.ab2@22071>    BEQ.w writebranchcode
0003EEFA <AmiBlitz3.ab2@22072>   MOVE.w thetst2(PC),D1
0003EEFE <AmiBlitz3.ab2@22073>   CMP.w #$2,D2
0003EF02 <AmiBlitz3.ab2@22074>    BEQ.w writebranchcode
0003EF06 <AmiBlitz3.ab2@22075>   MOVE.w thetst4(PC),D1
0003EF0A <AmiBlitz3.ab2@22076>   CMP.w #$7,D2
0003EF0E <AmiBlitz3.ab2@22077>    BEQ.w writebranchcode
0003EF12 <AmiBlitz3.ab2@22078>   MOVE.w thetst3(PC),D1
0003EF16 <AmiBlitz3.ab2@22079> BRA.w writebranchcode
0003EF1C <AmiBlitz3.ab2@22082>   TST.b fpu
0003EF20 <AmiBlitz3.ab2@22083>   BEQ 'dofpu
0003EF26 <AmiBlitz3.ab2@22084>   MOVE.l #$f200003a,d1
0003EF2A <AmiBlitz3.ab2@22085>   BSR writelong
0003EF2E <AmiBlitz3.ab2@22086>   MOVE.w #$f2c1,d1
0003EF32 <AmiBlitz3.ab2@22087>   BSR writeword
0003EF36 <AmiBlitz3.ab2@22088>   BSR writelong
0003EF38 <AmiBlitz3.ab2@22089>   ADDQ.l #2,a7
0003EF3C <AmiBlitz3.ab2@22090> BRA.w br2
0003EF40 <AmiBlitz3.ab2@22093>    MOVE.w #$C900,D1
0003EF44 <AmiBlitz3.ab2@22094>    BSR.w Atokejsr
0003EF48 <AmiBlitz3.ab2@22095>   MOVE.l thetst5(PC),D1
0003EF4C <AmiBlitz3.ab2@22096>    BSR.w writelong
0003EF50 <AmiBlitz3.ab2@22097> BRA.w JL_0_D0B4
0003EF56 <AmiBlitz3.ab2@22101>          CLR.b iniffcommand
0003EF5C <AmiBlitz3.ab2@22102>          TST.b fast                                        ;branchcode
0003EF60 <AmiBlitz3.ab2@22103>          BEQ b6
0003EF66 <AmiBlitz3.ab2@22104>          TST.b fpu
0003EF6A <AmiBlitz3.ab2@22105>          BEQ 'nofpu
0003EF70 <AmiBlitz3.ab2@22109>           MOVE.l destpointer,a0
0003EF76 <AmiBlitz3.ab2@22110>          SUB.l load_var_addr,a0
0003EF7C <AmiBlitz3.ab2@22111>          CMP.l #4,a0
0003EF80 <AmiBlitz3.ab2@22112>          BEQ 'nofpu
0003EF88 <AmiBlitz3.ab2@22113>          CMP.l #$f2400014,-4(a4)                           ;<
0003EF8C <AmiBlitz3.ab2@22114>          BNE 'nolt
0003EF92 <AmiBlitz3.ab2@22115>          SUBQ.l #2,destpointer
0003EF98 <AmiBlitz3.ab2@22116>          MOVE.w #$f293,-4(a4)                              ;
0003EF9C <AmiBlitz3.ab2@22117> BRA 'brf
0003EFA4 <AmiBlitz3.ab2@22120>   CMP.l #$f2400015,-4(a4)                                  ;<=
0003EFA8 <AmiBlitz3.ab2@22121>          BNE 'nole
0003EFAE <AmiBlitz3.ab2@22122>          SUBQ.l #2,destpointer
0003EFB4 <AmiBlitz3.ab2@22123>          MOVE.w #$f292,-4(a4)
0003EFB8 <AmiBlitz3.ab2@22124> BRA 'brf
0003EFC0 <AmiBlitz3.ab2@22127>   CMP.l #$f2400013,-4(a4)                                  ;=>
0003EFC4 <AmiBlitz3.ab2@22128>          BNE 'noge
0003EFCA <AmiBlitz3.ab2@22129>          SUBQ.l #2,destpointer
0003EFD0 <AmiBlitz3.ab2@22130>          MOVE.w #$f294,-4(a4)
0003EFD4 <AmiBlitz3.ab2@22131> BRA 'brf
0003EFDC <AmiBlitz3.ab2@22134>   CMP.l #$f2400012,-4(a4)                                  ;>
0003EFE0 <AmiBlitz3.ab2@22135>          BNE 'nogt
0003EFE6 <AmiBlitz3.ab2@22136>          SUBQ.l #2,destpointer
0003EFEC <AmiBlitz3.ab2@22137>          MOVE.w #$f295,-4(a4)
0003EFF0 <AmiBlitz3.ab2@22138> BRA 'brf
0003EFF8 <AmiBlitz3.ab2@22141>   CMP.l #$f2400001,-4(a4)                                  ;=
0003EFFC <AmiBlitz3.ab2@22142>          BNE 'noeq
0003F002 <AmiBlitz3.ab2@22143>          SUBQ.l #2,destpointer
0003F008 <AmiBlitz3.ab2@22144>          MOVE.w #$f28e,-4(a4)
0003F00C <AmiBlitz3.ab2@22145> BRA 'brf
0003F014 <AmiBlitz3.ab2@22148>   CMP.l #$f240000e,-4(a4)                                  ;<>
0003F018 <AmiBlitz3.ab2@22149>          BNE 'none
0003F01E <AmiBlitz3.ab2@22150>          SUBQ.l #2,destpointer
0003F024 <AmiBlitz3.ab2@22151>          MOVE.w #$f281,-4(a4)
0003F026 <AmiBlitz3.ab2@22154>   ADDQ.l #2,a7
0003F02C <AmiBlitz3.ab2@22156>     TST.b fast
0003F030 <AmiBlitz3.ab2@22157>     BEQ 'l1
0003F036 <AmiBlitz3.ab2@22158>     OR.b #$40,-3(a4)
0003F03A <AmiBlitz3.ab2@22159>     BSR writeword
0003F03E <AmiBlitz3.ab2@22163>  BSR writeword
0003F042 <AmiBlitz3.ab2@22164> BRA.s br2
0003F048 <AmiBlitz3.ab2@22168>   MOVE.l destpointer,a0
0003F04E <AmiBlitz3.ab2@22169>          SUB.l load_var_addr,a0
0003F054 <AmiBlitz3.ab2@22170>          CMP.l #4,a0
0003F058 <AmiBlitz3.ab2@22171>          BEQ JL_0_D0B4
0003F05E <AmiBlitz3.ab2@22172>          CMP.w #$4eb9,-6(a4)
0003F062 <AmiBlitz3.ab2@22173>          BEQ b6
0003F068 <AmiBlitz3.ab2@22174>          CMP.w #$5ec0,-2(a4)                               ;>
0003F06C <AmiBlitz3.ab2@22175>      BNE.s 'lb1
0003F072 <AmiBlitz3.ab2@22176>          MOVE.w #$6f00,-2(a4)                              ;ble
0003F076 <AmiBlitz3.ab2@22177> BRA.s br
0003F07C <AmiBlitz3.ab2@22180>  CMP.w #$5dc0,-2(a4)                                       ;<
0003F080 <AmiBlitz3.ab2@22181>   BNE.s 'lb2
0003F086 <AmiBlitz3.ab2@22182>          MOVE.w #$6c00,-2(a4)                              ;bge
0003F08A <AmiBlitz3.ab2@22183> BRA.s br
0003F090 <AmiBlitz3.ab2@22186>   CMP.w #$57c0,-2(a4)                                      ;=
0003F094 <AmiBlitz3.ab2@22187>   BNE.s 'lb3
0003F09A <AmiBlitz3.ab2@22188>          MOVE.w #$6600,-2(a4)                              ;bne
0003F09E <AmiBlitz3.ab2@22189> BRA.s br
0003F0A4 <AmiBlitz3.ab2@22192>   CMP.w #$56c0,-2(a4)                                      ;<>
0003F0A8 <AmiBlitz3.ab2@22193>   BNE.s 'lb4
0003F0AE <AmiBlitz3.ab2@22194>          MOVE.w #$6700,-2(a4)                              ;beq
0003F0B2 <AmiBlitz3.ab2@22195> BRA.s br
0003F0B8 <AmiBlitz3.ab2@22198>   CMP.w #$5cc0,-2(a4)                                      ;>=
0003F0BC <AmiBlitz3.ab2@22199>   BNE.s 'lb5
0003F0C2 <AmiBlitz3.ab2@22200>          MOVE.w #$6d00,-2(a4)                              ;blt
0003F0C6 <AmiBlitz3.ab2@22201> BRA.s br
0003F0CC <AmiBlitz3.ab2@22204>   CMP.w #$5fc0,-2(a4)                                      ;<=
0003F0D0 <AmiBlitz3.ab2@22205>         BNE.s b6
0003F0D6 <AmiBlitz3.ab2@22206>          MOVE.w #$6e00,-2(a4)                              ;bgt
0003F0D8 <AmiBlitz3.ab2@22209>   TST.w (a7)+
0003F0DE <AmiBlitz3.ab2@22211>         TST.b fast
0003F0E2 <AmiBlitz3.ab2@22212>         BEQ 'l1
0003F0E8 <AmiBlitz3.ab2@22213>         OR.b #$ff,-1(a4)                                   ;long branches
0003F0EC <AmiBlitz3.ab2@22214>         BSR writeword
0003F0F0 <AmiBlitz3.ab2@22218>         BSR writeword
0003F0F4 <AmiBlitz3.ab2@22219> BRA.s br2
0003F0F8 <AmiBlitz3.ab2@22222>   BSR.w writeword
0003F0FC <AmiBlitz3.ab2@22225>   MOVE.l posbr(PC),D1
0003F0FE <AmiBlitz3.ab2@22226>   TST.w (A7)+
0003F102 <AmiBlitz3.ab2@22227>    BEQ.w JL_0_D0C2
0003F106 <AmiBlitz3.ab2@22228>   MOVE.l negbr(PC),D1
0003F10C <AmiBlitz3.ab2@22231>   TST.b fast
0003F110 <AmiBlitz3.ab2@22232>            BEQ 'l1
0003F116 <AmiBlitz3.ab2@22233>            OR.l #$00ff0000,d1
0003F11A <AmiBlitz3.ab2@22234>            BSR writelong
0003F11E <AmiBlitz3.ab2@22235>            BSR writeword
0003F122 <AmiBlitz3.ab2@22236> BRA br2
0003F126 <AmiBlitz3.ab2@22239>   BSR.w writelong
0003F128 <AmiBlitz3.ab2@22242>  MOVEQ.l #$0E,D0
0003F12A <AmiBlitz3.ab2@22243>   MOVEQ.l #$01,D1
0003F130 <AmiBlitz3.ab2@22244>   MOVEA.l _execbase,A6
0003F136 <AmiBlitz3.ab2@22246>   MOVE.l mempool,a0
0003F13A <AmiBlitz3.ab2@22247>   JSR _AllocPooled(a6)
0003F13C <AmiBlitz3.ab2@22248>   MOVEA.l D0,A0
0003F142 <AmiBlitz3.ab2@22249>   MOVE.l firstiff,(A0)
0003F148 <AmiBlitz3.ab2@22250>   MOVE.l A0,firstiff
0003F14C <AmiBlitz3.ab2@22251>   MOVE.l (A7)+,$4(A0)
0003F154 <AmiBlitz3.ab2@22252>   MOVE.l destpointer,$8(A0)
0003F158 <AmiBlitz3.ab2@22253>   MOVE.w (A7)+,$C(A0)
0003F15E <AmiBlitz3.ab2@22254>    JSR reget
0003F162 <AmiBlitz3.ab2@22255>    BEQ.w JL_0_D10C
0003F168 <AmiBlitz3.ab2@22256>   BSET #$7,$C(A0)
0003F172 <AmiBlitz3.ab2@22260>   MOVE.w oldqflag,instringon
0003F178 <AmiBlitz3.ab2@22261>   MOVEA.l lastsourcepos,A5
0003F180 <AmiBlitz3.ab2@22262>   MOVE.w #$003A,lastchar
0003F182 <AmiBlitz3.ab2@22265> RTS
0003F186 <AmiBlitz3.ab2@22269>   CMP.w #$1,D0
0003F18A <AmiBlitz3.ab2@22270>    BLT.w JL_0_D128
0003F18E <AmiBlitz3.ab2@22271>   CMP.w #$0,D0
0003F192 <AmiBlitz3.ab2@22272>    BGT.w JL_0_D128
0003F194 <AmiBlitz3.ab2@22273>   ADD.w D0,D0
0003F196 <AmiBlitz3.ab2@22274>   ADD.w D0,D0
0003F19A <AmiBlitz3.ab2@22275>   MOVEA.l JL_0_D128(PC,D0.W),A0
0003F19C <AmiBlitz3.ab2@22278> JMP (A0)
0003F1A0 <AmiBlitz3.ab2@22281> BRA.w JL_0_D128
0003F1A4 <AmiBlitz3.ab2@22285>   CMP.w #$1,D0
0003F1A8 <AmiBlitz3.ab2@22286>    BLT.w JL_0_D146
0003F1AC <AmiBlitz3.ab2@22287>   CMP.w #$0,D0
0003F1B0 <AmiBlitz3.ab2@22288>    BGT.w JL_0_D146
0003F1B2 <AmiBlitz3.ab2@22289>   ADD.w D0,D0
0003F1B4 <AmiBlitz3.ab2@22290>   ADD.w D0,D0
0003F1B8 <AmiBlitz3.ab2@22291>   MOVEA.l JL_0_D146(PC,D0.W),A0
0003F1BA <AmiBlitz3.ab2@22294>   JSR (A0)
0003F1BE <AmiBlitz3.ab2@22297> BRA.w JL_0_D146
0003F1C2 <AmiBlitz3.ab2@22301>   CMP.w #$1,D0
0003F1C6 <AmiBlitz3.ab2@22302>    BLT.w JL_0_D168
0003F1CA <AmiBlitz3.ab2@22303>   CMP.w #$0,D0
0003F1CE <AmiBlitz3.ab2@22304>    BGT.w JL_0_D168
0003F1D0 <AmiBlitz3.ab2@22305>   ADD.w D0,D0
0003F1D2 <AmiBlitz3.ab2@22306>   ADD.w D0,D0
0003F1D6 <AmiBlitz3.ab2@22307>   MOVEA.l JL_0_D168(PC,D0.W),A0
0003F1DA <AmiBlitz3.ab2@22310>   MOVE.w #$6753,-(A7)                                      ;#'gS' ;for runtime error checking!
0003F1DC <AmiBlitz3.ab2@22313>    JSR (A0)
0003F1E0 <AmiBlitz3.ab2@22316> BRA.w JL_0_D168
0003F1E2 <AmiBlitz3.ab2@22319> labcnt:   Ds.w 1
0003F1E4 <AmiBlitz3.ab2@22326>   MOVEQ.l #$02,D2
0003F1E8 <AmiBlitz3.ab2@22327>    BSR.w bakeval
0003F1EC <AmiBlitz3.ab2@22328>   LEA JL_0_D10E(PC),A0
0003F1F0 <AmiBlitz3.ab2@22329>   LEA JL_0_D12C(PC),A1
0003F1F4 <AmiBlitz3.ab2@22330>   MOVE.w #$001A,D1
0003F1F8 <AmiBlitz3.ab2@22331>   CMP.w #-$7FFB,D0
0003F1FC <AmiBlitz3.ab2@22332>    BEQ.w JL_0_D1B6
0003F200 <AmiBlitz3.ab2@22333>   CMP.w #-$7FFA,D0
0003F204 <AmiBlitz3.ab2@22334>    BNE.w JUMP_syntaxerr
0003F208 <AmiBlitz3.ab2@22335>   LEA JL_0_D12C(PC),A0
0003F20C <AmiBlitz3.ab2@22336>   LEA JL_0_D14A(PC),A1
0003F210 <AmiBlitz3.ab2@22337>   MOVE.w #$001A,D1
0003F216 <AmiBlitz3.ab2@22338>   TST.b debugmode
0003F21A <AmiBlitz3.ab2@22339>    BEQ.b JL_0_D1B6
0003F220 <AmiBlitz3.ab2@22340>    JSR chkstak
0003F224 <AmiBlitz3.ab2@22341>   LEA JL_0_D14A(PC),A0
0003F228 <AmiBlitz3.ab2@22342>   LEA labcnt(PC),A1
0003F22C <AmiBlitz3.ab2@22343>   MOVE.w #$001E,D1
0003F22E <AmiBlitz3.ab2@22346>   MOVE.w D1,-(A7)
0003F234 <AmiBlitz3.ab2@22347>   MOVE.l destpointer,-(A7)                                 ;for when we know number of labels!
0003F238 <AmiBlitz3.ab2@22348>    BSR.w pokecode
0003F23E <AmiBlitz3.ab2@22349>   CLR.w labcnt
0003F244 <AmiBlitz3.ab2@22354>    JSR get1bytemain
0003F24A <AmiBlitz3.ab2@22355>   SUBQ.l #2,destpointer                                    ;for makealab!
0003F24E <AmiBlitz3.ab2@22356>    BSR.w JL_0_AE22
0003F254 <AmiBlitz3.ab2@22357>   ADDQ.l #2,destpointer
0003F25A <AmiBlitz3.ab2@22358>    JSR addoff
0003F25E <AmiBlitz3.ab2@22359>   MOVE.l $8(A2),D1
0003F262 <AmiBlitz3.ab2@22360>    BSR.w writelong
0003F268 <AmiBlitz3.ab2@22361>   ADDQ.w #1,labcnt
0003F26E <AmiBlitz3.ab2@22362>    JSR reget
0003F272 <AmiBlitz3.ab2@22363>   CMP.w #$2C,D0
0003F276 <AmiBlitz3.ab2@22364>    BEQ.w JL_0_D1C8
0003F278 <AmiBlitz3.ab2@22365>   MOVEA.l (A7)+,A0
0003F27A <AmiBlitz3.ab2@22366>   MOVE.w (A7)+,D2
0003F280 <AmiBlitz3.ab2@22367>   MOVE.w dontwrite,D1
0003F284 <AmiBlitz3.ab2@22368>    BNE.w JL_0_D21A
0003F288 <AmiBlitz3.ab2@22369>   MOVE.w labcnt(PC),D1
0003F28C <AmiBlitz3.ab2@22370>   MOVE.w D1,$A(A0)
0003F28E <AmiBlitz3.ab2@22371>   ADD.w D1,D1
0003F290 <AmiBlitz3.ab2@22372>   ADD.w D1,D1
0003F292 <AmiBlitz3.ab2@22373>   ADDQ.w #2,D1
0003F296 <AmiBlitz3.ab2@22374>   MOVE.w D1,$2(A0,D2.W)
0003F298 <AmiBlitz3.ab2@22377> RTS
0003F29E <AmiBlitz3.ab2@22381>   TST.b debugmode
0003F2A2 <AmiBlitz3.ab2@22382>    BEQ.w JL_0_D236
0003F2A8 <AmiBlitz3.ab2@22383>    JSR chkstak
0003F2AE <AmiBlitz3.ab2@22384>   MOVE.l AL_0_D162,D1
0003F2B2 <AmiBlitz3.ab2@22385>    BSR.w writelong
0003F2B8 <AmiBlitz3.ab2@22387>   MOVE.w gosubcode,D1
0003F2BC <AmiBlitz3.ab2@22388> BRA.w JL_0_D246
0003F2C2 <AmiBlitz3.ab2@22392>   MOVE.w gotocode,D1
0003F2C4 <AmiBlitz3.ab2@22395>   MOVE.w D1,-(A7)
0003F2C8 <AmiBlitz3.ab2@22396>    BSR.w JL_0_AE22
0003F2CA <AmiBlitz3.ab2@22397>   MOVE.w (A7)+,D1
0003F2CE <AmiBlitz3.ab2@22398>    BSR.w writeword
0003F2D4 <AmiBlitz3.ab2@22399>    JSR addoff
0003F2D8 <AmiBlitz3.ab2@22400>   MOVE.l $8(A2),D1
0003F2DC <AmiBlitz3.ab2@22401> BRA.w writelong
0003F2E2 <AmiBlitz3.ab2@22405>   MOVE.w proceduremode,D1
0003F2E6 <AmiBlitz3.ab2@22406>    BEQ.w JUMP_badpenderr
0003F2EA <AmiBlitz3.ab2@22407>   MOVE.w #$4EF9,D1
0003F2EE <AmiBlitz3.ab2@22408>    BSR.w writeword
0003F2F4 <AmiBlitz3.ab2@22409>    JSR addoff
0003F2FA <AmiBlitz3.ab2@22410>   MOVEA.l _execbase,A6
0003F2FC <AmiBlitz3.ab2@22411>   MOVEQ.l #$08,D0
0003F2FE <AmiBlitz3.ab2@22412>   MOVEQ.l #$01,D1
0003F304 <AmiBlitz3.ab2@22414>   MOVE.l mempool,a0
0003F308 <AmiBlitz3.ab2@22415>   JSR _AllocPooled(a6)
0003F30A <AmiBlitz3.ab2@22416>   MOVEA.l D0,A0
0003F310 <AmiBlitz3.ab2@22417>   MOVE.l firstpend,(A0)
0003F316 <AmiBlitz3.ab2@22418>   MOVE.l A0,firstpend
0003F31E <AmiBlitz3.ab2@22419>   MOVE.l destpointer,$4(A0)
0003F322 <AmiBlitz3.ab2@22420> BRA.w writelong
0003F326 <AmiBlitz3.ab2@22424>   BSR.w do_AsmExit
0003F32C <AmiBlitz3.ab2@22425> JMP get1bytemain
0003F334 <AmiBlitz3.ab2@22429>   MOVE.b #1,nostringopt
0003F33A <AmiBlitz3.ab2@22430>   MOVEA.l currentfunction,A0
0003F33C <AmiBlitz3.ab2@22431>   MOVEQ.l #$00,D2
0003F340 <AmiBlitz3.ab2@22432>   MOVE.b $5(A0),D2
0003F344 <AmiBlitz3.ab2@22433>   BSR.w eval
0003F348 <AmiBlitz3.ab2@22434> BRA.w do_AsmExit
0003F34E <AmiBlitz3.ab2@22448>   TST.b debugmode
0003F352 <AmiBlitz3.ab2@22449>    BEQ.w JL_0_D2CA
0003F356 <AmiBlitz3.ab2@22450>   MOVE.w #$C305,D1
0003F35A <AmiBlitz3.ab2@22451> BRA.w Atokejsr
0003F35E <AmiBlitz3.ab2@22454>   MOVE.w #$4E75,D1
0003F362 <AmiBlitz3.ab2@22455> BRA.w writeword
0003F366 <AmiBlitz3.ab2@22458> localslist:  Ds.l 1                                        ;all locals for procs.;??Looks like obsovled data??
0003F36A <AmiBlitz3.ab2@22459> proclocals:  Ds.l 1                                        ;for debugga!
0003F36C <AmiBlitz3.ab2@22460> procnum:     Ds.w 1
0003F36E <AmiBlitz3.ab2@22461> procnum2:    Ds.w 1
0003F372 <AmiBlitz3.ab2@22462> prolineat:   Ds.l 1
0003F378 <AmiBlitz3.ab2@22466>    TST.w proceduremode
0003F37C <AmiBlitz3.ab2@22467>    BGT JUMP_sreterr
0003F380 <AmiBlitz3.ab2@22468>    CMP.w #-$7FF9,D0
0003F384 <AmiBlitz3.ab2@22469>    BEQ.w JL_0_D29C
0003F386 <AmiBlitz3.ab2@22470>    MOVEQ.l #-$01,D1
0003F38A <AmiBlitz3.ab2@22471> BRA.w JL_0_D304
0003F390 <AmiBlitz3.ab2@22474> JMP sreterr
0003F396 <AmiBlitz3.ab2@22478>   CLR.b skipfunc
0003F39C <AmiBlitz3.ab2@22479>   TST.l unusedfunc
0003F3A0 <AmiBlitz3.ab2@22480>   BEQ 'ex
0003F3A4 <AmiBlitz3.ab2@22481>   MOVEM.l d0-d7/a0-a6,-(a7)
0003F3AA <AmiBlitz3.ab2@22482>   MOVE.l unusedfunc,d1
0003F3B0 <AmiBlitz3.ab2@22483>   LEA ptr_parameterstore,a5
0003F3B2 <AmiBlitz3.ab2@22486>   MOVE.l d1,a0
0003F3B6 <AmiBlitz3.ab2@22487>   LEA 12(a0),a2
0003F3B8 <AmiBlitz3.ab2@22488>   MOVE.l a5,a1
0003F3BA <AmiBlitz3.ab2@22490>   CMPM.b (a1)+,(a2)+
0003F3BE <AmiBlitz3.ab2@22491>   BNE 'neq
0003F3C0 <AmiBlitz3.ab2@22492>   TST.b (a2)
0003F3C4 <AmiBlitz3.ab2@22493>   BNE 'ch
0003F3C6 <AmiBlitz3.ab2@22494>   TST.b (a1)
0003F3CA <AmiBlitz3.ab2@22495>   BNE 'neq
0003F3D2 <AmiBlitz3.ab2@22496>   MOVE.b #1,skipfunc
0003F3D6 <AmiBlitz3.ab2@22497> BRA 'out
0003F3D8 <AmiBlitz3.ab2@22500>   MOVE.l (a0),d1
0003F3DC <AmiBlitz3.ab2@22501>   BNE 'ag
0003F3E0 <AmiBlitz3.ab2@22504>   MOVEM.l (a7)+,d0-d7/a0-a6
0003F3E2 <AmiBlitz3.ab2@22507> RTS
0003F3E8 <AmiBlitz3.ab2@22511> JMP dupprocerr
0003F3EE <AmiBlitz3.ab2@22514> JMP illprocperr
0003F3F6 <AmiBlitz3.ab2@22521>   CMP.w #-1,proceduremode                                  ;was JUMP_sreterr_2
0003F3FA <AmiBlitz3.ab2@22522>    BEQ JUMP_sreterr
0003F3FE <AmiBlitz3.ab2@22523>   CMP.w #-$7FF9,D0
0003F402 <AmiBlitz3.ab2@22524>    BEQ.w JL_0_D2A4
0003F40C <AmiBlitz3.ab2@22527>   MOVE.w oldqflag,instringon
0003F412 <AmiBlitz3.ab2@22528>   MOVEA.l lastsourcepos,A5
0003F418 <AmiBlitz3.ab2@22529>   JSR AJL_0_498A
0003F41E <AmiBlitz3.ab2@22530>   JSR get1bytemain
0003F424 <AmiBlitz3.ab2@22533>    TST.b declare
0003F428 <AmiBlitz3.ab2@22534>   BEQ 'l1
0003F430 <AmiBlitz3.ab2@22535>   MOVE.b #1,nowdeclare
0003F436 <AmiBlitz3.ab2@22538>   JSR errchx                                           ;writejumpoverfunction
0003F43C <AmiBlitz3.ab2@22541>   CLR.b fastfunc
0003F446 <AmiBlitz3.ab2@22542>   MOVE.l firstiff,firstiffstore
0003F44E <AmiBlitz3.ab2@22543>   CMP.l #"FAST",-1(a5)
0003F452 <AmiBlitz3.ab2@22544>   BNE 'nofast
0003F458 <AmiBlitz3.ab2@22545>   CMP.b #" ",3(a5)
0003F45C <AmiBlitz3.ab2@22546>   BNE 'nofast
0003F45E <AmiBlitz3.ab2@22547>   ADDQ.l #3,a5
0003F462 <AmiBlitz3.ab2@22550>     CMP.b #" ",(a5)
0003F466 <AmiBlitz3.ab2@22551>      BNE 'x1
0003F468 <AmiBlitz3.ab2@22552>     ADDQ #1,a5
0003F46C <AmiBlitz3.ab2@22553> BRA 'x2
0003F472 <AmiBlitz3.ab2@22556>   MOVE.l a5,lastsourcepos
0003F47A <AmiBlitz3.ab2@22557>   MOVE.b #1,fastfunc
0003F482 <AmiBlitz3.ab2@22560>   CMP.l #"NOOP",-1(a5)                                     ;compile 3* so its deactivate
0003F486 <AmiBlitz3.ab2@22561> BRA 'noopt
0003F48C <AmiBlitz3.ab2@22563>   CMP.w #"T ",3(a5)                                        ;??Looks like dead code??
0003F490 <AmiBlitz3.ab2@22564>   BNE 'noopt
0003F492 <AmiBlitz3.ab2@22565>   ADDQ.l #4,a5
0003F496 <AmiBlitz3.ab2@22568>     CMP.b #" ",(a5)
0003F49A <AmiBlitz3.ab2@22569>      BNE 'x1b
0003F49C <AmiBlitz3.ab2@22570>     ADDQ #1,a5
0003F4A0 <AmiBlitz3.ab2@22571> BRA 'x2b
0003F4A6 <AmiBlitz3.ab2@22574>   MOVE.l a5,lastsourcepos
0003F4AC <AmiBlitz3.ab2@22576>   JSR makename2
0003F4B0 <AmiBlitz3.ab2@22577> BRA 'l1
0003F4B6 <AmiBlitz3.ab2@22581>   JSR makename2
0003F4BC <AmiBlitz3.ab2@22582>   JSR checkused
0003F4C2 <AmiBlitz3.ab2@22583>   TST.b skipfunc
0003F4C6 <AmiBlitz3.ab2@22584>    BEQ 'l1
0003F4CC <AmiBlitz3.ab2@22585>   JSR skipme
0003F4D2 <AmiBlitz3.ab2@22586>   CLR.b fastfunc
0003F4D4 <AmiBlitz3.ab2@22587> RTS
0003F4DE <AmiBlitz3.ab2@22590>   MOVE.l linenumat,prolineat
0003F4E4 <AmiBlitz3.ab2@22591>   ADDQ.w #1,procnum2
0003F4EC <AmiBlitz3.ab2@22592>   MOVE.w procnum2(PC),procnum
0003F4F2 <AmiBlitz3.ab2@22593>   MOVE.w D1,proceduremode
0003F4F8 <AmiBlitz3.ab2@22594>   CLR.w locvaroff
0003F4FC <AmiBlitz3.ab2@22595>   CMP.w #$7B,D0
0003F500 <AmiBlitz3.ab2@22596>    BNE.w JUMP_syntaxerr
0003F508 <AmiBlitz3.ab2@22597>    MOVE.b #1,infunctioncode
0003F50E <AmiBlitz3.ab2@22598>   MOVEA.l tempvm,A0
0003F516 <AmiBlitz3.ab2@22599>   MOVE.w $C(A0),memlibstat
0003F51C <AmiBlitz3.ab2@22600>   BCLR #$7,$C(A0)                                          ;Bit out of range
0003F520 <AmiBlitz3.ab2@22601>   MOVE.w #$4EF9,D1
0003F524 <AmiBlitz3.ab2@22602>    BSR.w writeword
0003F52A <AmiBlitz3.ab2@22603>    JSR addoff
0003F52E <AmiBlitz3.ab2@22604>    BSR.w writelong
0003F532 <AmiBlitz3.ab2@22605>    BSR.w findproc                                          ;findproc function
0003F536 <AmiBlitz3.ab2@22606>    BEQ.w JUMP_dupprocerr
0003F53A <AmiBlitz3.ab2@22607>    BSR.w addlabel
0003F540 <AmiBlitz3.ab2@22608>    MOVE.b #31,$20(a2)                                      ;increase if more pars
0003F546 <AmiBlitz3.ab2@22609>    MOVE.b #0,isfunc(a2)
0003F54E <AmiBlitz3.ab2@22610>   MOVE.l destpointer,$E(A2)
0003F554 <AmiBlitz3.ab2@22611>   MOVE.l A2,currentfunction
0003F55A <AmiBlitz3.ab2@22612>   LEA nops8,A0
0003F560 <AmiBlitz3.ab2@22613>   LEA dataget,A1
0003F564 <AmiBlitz3.ab2@22614>    BSR.w pokecode2
0003F56A <AmiBlitz3.ab2@22615>   TST.b debugmode
0003F56E <AmiBlitz3.ab2@22616>    BEQ.b JL_0_D3AA
0003F570 <AmiBlitz3.ab2@22617>   MOVEQ.l #$04,D1
0003F576 <AmiBlitz3.ab2@22618>    JSR writetrap
0003F580 <AmiBlitz3.ab2@22619>   MOVE.l destpointer,proclocals
0003F584 <AmiBlitz3.ab2@22620>    BSR.w writelong
0003F588 <AmiBlitz3.ab2@22621>    BSR.w writelong
0003F58C <AmiBlitz3.ab2@22624>    LEA $16(A2),A4
0003F594 <AmiBlitz3.ab2@22625>   MOVE.b proceduremode+1,$5(A2)
0003F596 <AmiBlitz3.ab2@22626>   MOVEQ.l #$00,D6
0003F598 <AmiBlitz3.ab2@22627>   MOVEQ.l #$00,D5
0003F59E <AmiBlitz3.ab2@22628>    JSR get1bytemain
0003F5A2 <AmiBlitz3.ab2@22629>   CMP.w #$7D,D0
0003F5A6 <AmiBlitz3.ab2@22630>    BEQ.w JL_0_D466
0003F5AA <AmiBlitz3.ab2@22633>    CMP.b #"@",d0
0003F5AE <AmiBlitz3.ab2@22634>    BNE 'l2
0003F5B0 <AmiBlitz3.ab2@22635>    MOVE.l a0,-(a7)
0003F5B6 <AmiBlitz3.ab2@22636>    MOVE.l currentfunction,a0
0003F5BC <AmiBlitz3.ab2@22637>    CMP.b #31,$20(a0)                                       ;increase if morepars
0003F5C0 <AmiBlitz3.ab2@22638>    BNE 'l1
0003F5C4 <AmiBlitz3.ab2@22639>    MOVE.b d6,$20(a0)                                       ;increase if morepar
0003F5CA <AmiBlitz3.ab2@22642>    JSR get1bytemain
0003F5CC <AmiBlitz3.ab2@22643>    MOVE.l (a7)+,a0
0003F5D0 <AmiBlitz3.ab2@22646>    BSR.w getparameter
0003F5D4 <AmiBlitz3.ab2@22647>    BSR.w JL_0_8E3C
0003F5DC <AmiBlitz3.ab2@22648>   CMPI.l #$7,$4(A2)
0003F5E0 <AmiBlitz3.ab2@22649>    BNE.w JL_0_D3F6
0003F5E6 <AmiBlitz3.ab2@22650>   LEA stbuff,A0
0003F5E8 <AmiBlitz3.ab2@22651>   MOVE.w D5,D1
0003F5EA <AmiBlitz3.ab2@22652>   LSL.w #2,D1
0003F5EE <AmiBlitz3.ab2@22653>   MOVE.w D6,$0(A0,D1.W)
0003F5F4 <AmiBlitz3.ab2@22654>   MOVE.w $4(A3),$2(A0,D1.W)
0003F5F6 <AmiBlitz3.ab2@22655>   ADDQ.w #1,D5
0003F5F8 <AmiBlitz3.ab2@22656>   MOVEQ.l #$07,D2
0003F5FC <AmiBlitz3.ab2@22657> BRA.w JL_0_D442
0003F602 <AmiBlitz3.ab2@22660> JMP toovarerr
0003F606 <AmiBlitz3.ab2@22663>   MOVE.w #$2940,D1
0003F608 <AmiBlitz3.ab2@22664>   MOVEQ.l #$03,D2
0003F610 <AmiBlitz3.ab2@22665>   BTST #$0,flagmask+1
0003F614 <AmiBlitz3.ab2@22666>    BNE.w JL_0_D430
0003F61C <AmiBlitz3.ab2@22667>   CMPI.l #$100,$4(A2)
0003F620 <AmiBlitz3.ab2@22668>    BCC.w JUMP_illprocperr
0003F624 <AmiBlitz3.ab2@22669>   MOVE.w $6(A2),D2
0003F628 <AmiBlitz3.ab2@22670>   CMP.w #$2,D2
0003F62C <AmiBlitz3.ab2@22671>    BHI.w JL_0_D430
0003F630 <AmiBlitz3.ab2@22672>    BEQ.w JL_0_D42C
0003F634 <AmiBlitz3.ab2@22673>   EORI.w #$3000,D1
0003F638 <AmiBlitz3.ab2@22674> BRA.w JL_0_D430
0003F63E <AmiBlitz3.ab2@22677> JMP more6pard
0003F642 <AmiBlitz3.ab2@22680>   ORI.w #$1000,D1
0003F644 <AmiBlitz3.ab2@22683>   OR.w D6,D1
0003F64A <AmiBlitz3.ab2@22684>   TST.b fpu
0003F64E <AmiBlitz3.ab2@22685>   BEQ 'nofpu
0003F652 <AmiBlitz3.ab2@22686>   CMP.b #5,d2
0003F656 <AmiBlitz3.ab2@22687>   BNE 'nofpu
0003F65A <AmiBlitz3.ab2@22688>   CMP.w #6,d6
0003F65E <AmiBlitz3.ab2@22689>   BLT 'l10a
0003F664 <AmiBlitz3.ab2@22690>   CMP.l #newtype_double,a2
0003F668 <AmiBlitz3.ab2@22691>   BEQ JUMP_more6pard
0003F66C <AmiBlitz3.ab2@22692> BRA 'nofpu
0003F672 <AmiBlitz3.ab2@22695>   MOVE.l #$f22c6400,d1
0003F676 <AmiBlitz3.ab2@22696>   MOVEM.l d0/a4,-(a7)
0003F678 <AmiBlitz3.ab2@22697>   MOVE.l d6,d0
0003F67A <AmiBlitz3.ab2@22698>   ASL.l #7,d0
0003F67C <AmiBlitz3.ab2@22699>   OR.w d0,d1
0003F682 <AmiBlitz3.ab2@22700>   CMP.l #newtype_double,a2
0003F686 <AmiBlitz3.ab2@22701>   BNE 'l1
0003F68C <AmiBlitz3.ab2@22702>   OR.l #$1000,d1
0003F690 <AmiBlitz3.ab2@22705>   BSR writelong
0003F694 <AmiBlitz3.ab2@22706>   MOVE.w 4(a3),d1
0003F698 <AmiBlitz3.ab2@22707>   BSR writeword
0003F69C <AmiBlitz3.ab2@22708>   MOVEM.l (a7)+,a4/d0
0003F6A0 <AmiBlitz3.ab2@22709> BRA JL_0_D442
0003F6A2 <AmiBlitz3.ab2@22712>   MOVE.l A4,-(A7)
0003F6A6 <AmiBlitz3.ab2@22713>    CMP.w #6,d6
0003F6AA <AmiBlitz3.ab2@22714>    BLT 'l10
0003F6AE <AmiBlitz3.ab2@22715>    MOVE.w #$c500-4,d1                                      ;savetemp+regnum
0003F6B0 <AmiBlitz3.ab2@22716>    ADD.w d6,d1
0003F6B6 <AmiBlitz3.ab2@22717>    JSR Atokejsr
0003F6BC <AmiBlitz3.ab2@22718>    TST.w dontwrite
0003F6C0 <AmiBlitz3.ab2@22719>    BNE 'l10
0003F6C6 <AmiBlitz3.ab2@22720>    MOVE.l data1start,d1
0003F6CC <AmiBlitz3.ab2@22721>    MOVE.l destpointer,a4
0003F6D0 <AmiBlitz3.ab2@22722>    ADD.l d1,-6(a4)
0003F6D6 <AmiBlitz3.ab2@22723>    MOVE.l destpointer,d1
0003F6D8 <AmiBlitz3.ab2@22724>    SUBQ.l #6,d1
0003F6DE <AmiBlitz3.ab2@22725>    SUB.l destbufferstart,d1
0003F6E0 <AmiBlitz3.ab2@22727>    MOVE.l d2,-(a7)
0003F6E2 <AmiBlitz3.ab2@22728>    MOVE.l d1,d2
0003F6E8 <AmiBlitz3.ab2@22729>    JSR addhunkoffset                                       ;move.l $0,-x(a4)
0003F6EA <AmiBlitz3.ab2@22730>    MOVE.l (a7)+,d2
0003F6F0 <AmiBlitz3.ab2@22731>    MOVE.l destpointer,a4
0003F6F4 <AmiBlitz3.ab2@22732>    CMP.w #2,d2
0003F6F8 <AmiBlitz3.ab2@22733>    BNE 'nw1
0003F6FE <AmiBlitz3.ab2@22735>    MOVE.w #$3979,-8(a4)                                    ;move.w $0,-x(a4)
0003F706 <AmiBlitz3.ab2@22736>    ADD.l #2,-6(a4)
0003F70A <AmiBlitz3.ab2@22739>    CMP.w #1,d2
0003F70E <AmiBlitz3.ab2@22740>    BNE 'nb
0003F714 <AmiBlitz3.ab2@22741>    MOVE.w #$1979,-8(a4)                                    ;move.b $0,-x(a4)
0003F71C <AmiBlitz3.ab2@22742>    ADD.l #3,-6(a4)
0003F722 <AmiBlitz3.ab2@22745>    MOVE.w $4(a3),-2(a4)
0003F726 <AmiBlitz3.ab2@22746> BRA 'ne1
0003F72A <AmiBlitz3.ab2@22749>   BSR.w writeword                                          ;write storeparameter
0003F72E <AmiBlitz3.ab2@22752>   MOVE.w $4(A3),D1
0003F732 <AmiBlitz3.ab2@22753>    BSR.w writeword
0003F734 <AmiBlitz3.ab2@22756>   MOVEA.l (A7)+,A4
0003F736 <AmiBlitz3.ab2@22759>   ADDQ.w #1,D6
0003F73A <AmiBlitz3.ab2@22760>   CMP.w #11,D6                                             ;max function parameters
0003F73E <AmiBlitz3.ab2@22761>    BCC.w JUMP_toovarerr
0003F740 <AmiBlitz3.ab2@22762>   MOVE.b D2,(A4)+
0003F744 <AmiBlitz3.ab2@22763>   CMP.w #$2C,D0
0003F748 <AmiBlitz3.ab2@22764>    BNE.w JL_0_D45E
0003F74E <AmiBlitz3.ab2@22765>    JSR get1bytemain
0003F752 <AmiBlitz3.ab2@22777> BRA.w JL_0_D3C6
0003F756 <AmiBlitz3.ab2@22780>   CMP.w #$7D,D0
0003F75A <AmiBlitz3.ab2@22781>    BNE.w JUMP_syntaxerr
0003F760 <AmiBlitz3.ab2@22784>   MOVEA.l currentfunction,A2
0003F762 <AmiBlitz3.ab2@22785>   LSL.w #4,D5
0003F764 <AmiBlitz3.ab2@22786>   OR.w D5,D6
0003F768 <AmiBlitz3.ab2@22787>   MOVE.b D6,$4(A2)
0003F76A <AmiBlitz3.ab2@22788>   LSR.w #4,D6
0003F76E <AmiBlitz3.ab2@22789>    BEQ.w JL_0_D4C4
0003F774 <AmiBlitz3.ab2@22790>   LEA stbuff,A0
0003F776 <AmiBlitz3.ab2@22791>   SUBQ.w #1,D6
0003F778 <AmiBlitz3.ab2@22794>     MOVE.w D6,D1                                           ;function stringpars
0003F77A <AmiBlitz3.ab2@22795>     LSL.w #2,D1                                            ;stringsize was 2
0003F77C <AmiBlitz3.ab2@22797>       LSL.w #1,d1
0003F77E <AmiBlitz3.ab2@22798>       ADDQ.w #4,d1
0003F780 <AmiBlitz3.ab2@22800>     ADDQ.w #8,D1
0003F786 <AmiBlitz3.ab2@22801>     MOVE.w D1,funcst+2
0003F78C <AmiBlitz3.ab2@22802>     MOVE.l funcst,D1
0003F790 <AmiBlitz3.ab2@22803>     BSR.w writelong
0003F792 <AmiBlitz3.ab2@22804>     MOVE.w (A0)+,D1
0003F796 <AmiBlitz3.ab2@22805>     CMP.b #5,d1
0003F79A <AmiBlitz3.ab2@22806>     BLE 's1
0003F79E <AmiBlitz3.ab2@22807>     MOVE.w #$266c,d1                                       ;native move.l 4(a4),a3
0003F7A2 <AmiBlitz3.ab2@22808>     BSR writeinstruction
0003F7A4 <AmiBlitz3.ab2@22809>     MOVE.w D6,D1                                           ;function stringpars
0003F7A6 <AmiBlitz3.ab2@22810>     LSL.w #2,D1                                            ;stringsize was 2
0003F7A8 <AmiBlitz3.ab2@22812>       LSL.w #1,d1
0003F7AA <AmiBlitz3.ab2@22814>     ADDQ.w #8,D1
0003F7AE <AmiBlitz3.ab2@22815>     BSR writeword
0003F7B2 <AmiBlitz3.ab2@22816>   BRA 's2
0003F7B8 <AmiBlitz3.ab2@22819>     OR.w movedna3,D1
0003F7BC <AmiBlitz3.ab2@22820>      BSR.w writeword
0003F7C2 <AmiBlitz3.ab2@22823>     MOVE.w (A0)+,least+2
0003F7C8 <AmiBlitz3.ab2@22824>     MOVE.l least,D1
0003F7CC <AmiBlitz3.ab2@22825>      BSR.w writelong
0003F7CE <AmiBlitz3.ab2@22826>     MOVE.l A0,-(A7)
0003F7D2 <AmiBlitz3.ab2@22827>     MOVE.w #$C700,D1
0003F7D6 <AmiBlitz3.ab2@22828>      BSR.w Atokejsr
0003F7D8 <AmiBlitz3.ab2@22829>     MOVEA.l (A7)+,A0
0003F7DC <AmiBlitz3.ab2@22830>   DBF D6,JL_0_D482
0003F7E2 <AmiBlitz3.ab2@22833> JMP get1bytemain
0003F7E8 <AmiBlitz3.ab2@22837>   MOVE.w dontwrite,D1
0003F7EC <AmiBlitz3.ab2@22838>    BNE.w JL_0_D4F6
0003F7F2 <AmiBlitz3.ab2@22839>   MOVE.l destpointer,-(A7)
0003F7F8 <AmiBlitz3.ab2@22840>   MOVE.l A0,destpointer
0003F7FE <AmiBlitz3.ab2@22841>   MOVE.l linksize,D1
0003F802 <AmiBlitz3.ab2@22842>    BSR.w writelong                                         ;writefunctions jumppos
0003F808 <AmiBlitz3.ab2@22843>    TST.b fastfunc
0003F80C <AmiBlitz3.ab2@22844>    BNE 'skip
0003F810 <AmiBlitz3.ab2@22845>   MOVE.w #$CC00,D1
0003F814 <AmiBlitz3.ab2@22846>    BSR.w tokejsr2                                          ;write clearvars
0003F81A <AmiBlitz3.ab2@22849>   MOVE.l (A7)+,destpointer
0003F81C <AmiBlitz3.ab2@22852> RTS
0003F822 <AmiBlitz3.ab2@22856>   MOVEA.l currentfunction,A2
0003F826 <AmiBlitz3.ab2@22857>   MOVEA.l $E(A2),A0
0003F82A <AmiBlitz3.ab2@22858>   MOVE.w $6(A2),D1
0003F82E <AmiBlitz3.ab2@22859>    BEQ.w JL_0_D538
0003F834 <AmiBlitz3.ab2@22860>   MOVE.w D1,linksize+2
0003F838 <AmiBlitz3.ab2@22861>   MOVE.w $8(A2),D1                                         ;check if function memalloc need
0003F83C <AmiBlitz3.ab2@22862>    BNE.w JL_0_D522
0003F83E <AmiBlitz3.ab2@22863>   ADDQ.w #6,A0
0003F842 <AmiBlitz3.ab2@22864>   MOVE.l A0,$E(A2)
0003F846 <AmiBlitz3.ab2@22865> BRA.w JL_0_D4C8
0003F848 <AmiBlitz3.ab2@22868>   MOVE.l A0,-(A7)
0003F84C <AmiBlitz3.ab2@22869>    BSR.w JL_0_D4C8
0003F84E <AmiBlitz3.ab2@22870>   MOVEA.l (A7)+,A0
0003F852 <AmiBlitz3.ab2@22871>   LEA $A(A0),A0
0003F858 <AmiBlitz3.ab2@22872>   MOVEA.l currentfunction,A2
0003F85C <AmiBlitz3.ab2@22873> BRA.w JL_0_D54A
0003F860 <AmiBlitz3.ab2@22876>   MOVE.w $8(A2),D1
0003F864 <AmiBlitz3.ab2@22877>    BNE.w JL_0_D54A
0003F868 <AmiBlitz3.ab2@22878>   LEA $10(A0),A0
0003F86C <AmiBlitz3.ab2@22879>   MOVE.l A0,$E(A2)
0003F86E <AmiBlitz3.ab2@22880> RTS
0003F874 <AmiBlitz3.ab2@22884> JMP errormsg_nofast
0003F87A <AmiBlitz3.ab2@22887>    MOVE.w dontwrite,D1                                     ;writeallocmem for functions (after releasemem called)
0003F87E <AmiBlitz3.ab2@22888>    BNE.w JL_0_D580
0003F884 <AmiBlitz3.ab2@22889>    TST.b fastfunc
0003F888 <AmiBlitz3.ab2@22890>    BNE JUMP_errormsg_nofast
0003F88E <AmiBlitz3.ab2@22891>   MOVE.l destpointer,-(A7)
0003F894 <AmiBlitz3.ab2@22892>   MOVE.l A0,destpointer
0003F898 <AmiBlitz3.ab2@22893>   MOVE.w #$4EB9,D1
0003F89C <AmiBlitz3.ab2@22894>    BSR.w writeword
0003F8A2 <AmiBlitz3.ab2@22895>    JSR addoff
0003F8A6 <AmiBlitz3.ab2@22896>    BSR.w writelong
0003F8A8 <AmiBlitz3.ab2@22897>   MOVEA.l (A7)+,A0
0003F8AE <AmiBlitz3.ab2@22898>   MOVEA.l destpointer,A1
0003F8B0 <AmiBlitz3.ab2@22899>   MOVE.l A0,-(A1)
0003F8B6 <AmiBlitz3.ab2@22900>   MOVE.l A0,destpointer
0003F8BA <AmiBlitz3.ab2@22903>   MOVE.w $8(A2),D4
0003F8BE <AmiBlitz3.ab2@22904>    BPL.w JL_0_D59E
0003F8C2 <AmiBlitz3.ab2@22905>   MOVE.w #$C004,D1
0003F8C6 <AmiBlitz3.ab2@22906>    BSR.w tokejsr2
0003F8CC <AmiBlitz3.ab2@22907>   MOVEA.l currentfunction,A2
0003F8D0 <AmiBlitz3.ab2@22908>   MOVE.w $8(A2),D4
0003F8D4 <AmiBlitz3.ab2@22909>   ANDI.w #$7FFF,D4
0003F8D8 <AmiBlitz3.ab2@22912>    BEQ.w JL_0_D5E0
0003F8DC <AmiBlitz3.ab2@22913>   MOVE.b $4(A2),D1
0003F8E0 <AmiBlitz3.ab2@22914>   ANDI.w #$F,D1
0003F8E2 <AmiBlitz3.ab2@22915>   MOVE.w D1,-(A7)
0003F8E6 <AmiBlitz3.ab2@22916>   CMP.w #$5,D1
0003F8EA <AmiBlitz3.ab2@22917>    BCS.w JL_0_D5BC
0003F8EE <AmiBlitz3.ab2@22918>   MOVE.w #$2F04,D1
0003F8F2 <AmiBlitz3.ab2@22919>    BSR.w writeword
0003F8F8 <AmiBlitz3.ab2@22922>   MOVE.l locdatast,D3
0003F8FE <AmiBlitz3.ab2@22923>    JSR datastart
0003F902 <AmiBlitz3.ab2@22924>   MOVE.w #$C501,D1
0003F906 <AmiBlitz3.ab2@22925>    BSR.w tokejsr2
0003F908 <AmiBlitz3.ab2@22926>   MOVE.w (A7)+,D1
0003F90C <AmiBlitz3.ab2@22927>   CMP.w #$5,D1
0003F910 <AmiBlitz3.ab2@22928>    BCS.w JL_0_D5E0
0003F914 <AmiBlitz3.ab2@22929>   MOVE.w #$281F,D1
0003F918 <AmiBlitz3.ab2@22930>    BSR.w writeword
0003F91C <AmiBlitz3.ab2@22932>   MOVE.w #$4E75,D1
0003F920 <AmiBlitz3.ab2@22933> BRA.w writeword
0003F926 <AmiBlitz3.ab2@22937>   LEA mwait,A0
0003F92C <AmiBlitz3.ab2@22938>   LEA mwaitf,A1
0003F930 <AmiBlitz3.ab2@22939> BRA.w pokecode
0003F936 <AmiBlitz3.ab2@22943> JMP laberr
0003F93A <AmiBlitz3.ab2@22946>   CMP.w #$2E,D0
0003F93E <AmiBlitz3.ab2@22947>   BNE.w JUMP_syntaxerr
0003F944 <AmiBlitz3.ab2@22948>   JSR getparameter2
0003F948 <AmiBlitz3.ab2@22949>   BEQ.w JUMP_laberr
0003F94E <AmiBlitz3.ab2@22950>   LEA newtypebase,A2
0003F954 <AmiBlitz3.ab2@22951>   JSR findtype
0003F958 <AmiBlitz3.ab2@22952>   BNE.w JL_0_D626
0003F960 <AmiBlitz3.ab2@22953>   CMPI.l #MaxByte,$4(A2)
0003F964 <AmiBlitz3.ab2@22954>   BNE.w JUMP_typeerr
0003F968 <AmiBlitz3.ab2@22955> BRA.w JL_0_D62A
0003F96E <AmiBlitz3.ab2@22958> JMP typeerr
0003F974 <AmiBlitz3.ab2@22961>   JSR addlabel
0003F978 <AmiBlitz3.ab2@22964>   CLR.l $4(A2)
0003F97E <AmiBlitz3.ab2@22965>   MOVE.l A2,thistype
0003F984 <AmiBlitz3.ab2@22966>   CLR.l prevtype
0003F98A <AmiBlitz3.ab2@22967>   CLR.w typelen
0003F990 <AmiBlitz3.ab2@22968>   CLR.w linemode
0003F996 <AmiBlitz3.ab2@22969>   JSR reget
0003F99A <AmiBlitz3.ab2@22970>   BNE.w typemode
0003F99C <AmiBlitz3.ab2@22971> RTS
0003F9A0 <AmiBlitz3.ab2@22974>   CMP.w #-$7FFE,D0
0003F9A4 <AmiBlitz3.ab2@22975>   BEQ.w JL_0_D82E
0003F9AE <AmiBlitz3.ab2@22977>   MOVE.w oldqflag,instringon
0003F9B4 <AmiBlitz3.ab2@22978>   MOVEA.l lastsourcepos,A5
0003F9B6 <AmiBlitz3.ab2@22979>   MOVEQ.l #$00,D6
0003F9BA <AmiBlitz3.ab2@22980>   CMP.w #$2A,D0
0003F9BE <AmiBlitz3.ab2@22981>   BNE.w JL_0_D670
0003F9C0 <AmiBlitz3.ab2@22982>   MOVEQ.l #$01,D6
0003F9C6 <AmiBlitz3.ab2@22983>   JSR get1bytemain
0003F9CA <AmiBlitz3.ab2@22984> BRA.w JL_0_D67E
0003F9CE <AmiBlitz3.ab2@22987>   CMP.w #$40,D0
0003F9D2 <AmiBlitz3.ab2@22988>   BNE.w JL_0_D67E
0003F9D4 <AmiBlitz3.ab2@22989>   MOVEQ.l #$05,D6
0003F9DA <AmiBlitz3.ab2@22990>   JSR get1bytemain
0003F9E0 <AmiBlitz3.ab2@22993>   MOVE.w D6,flagmask
0003F9E6 <AmiBlitz3.ab2@22994>   JSR getparameter2
0003F9EA <AmiBlitz3.ab2@22995>   BEQ.w JUMP_syntaxerr
0003F9F0 <AmiBlitz3.ab2@22996>   MOVEA.l thistype,A2
0003F9F2 <AmiBlitz3.ab2@22997>   ADDQ.w #4,A2
0003F9F8 <AmiBlitz3.ab2@22998>   JSR findvariable2
0003F9FC <AmiBlitz3.ab2@22999>   BEQ.w JUMP_dupofferr
0003FA02 <AmiBlitz3.ab2@23000>   JSR addlabel
0003FA04 <AmiBlitz3.ab2@23001>   MOVE.l A2,-(A7)
0003FA08 <AmiBlitz3.ab2@23002>   CMP.w #$2E,D0
0003FA0C <AmiBlitz3.ab2@23003>    BEQ.w JL_0_D6CE
0003FA10 <AmiBlitz3.ab2@23004>   CMP.w #$24,D0
0003FA14 <AmiBlitz3.ab2@23005>    BNE.w JL_0_D6C0
0003FA1A <AmiBlitz3.ab2@23006>   MOVE.l #newtype_string,D2
0003FA20 <AmiBlitz3.ab2@23007>    JSR get1bytemain
0003FA24 <AmiBlitz3.ab2@23008> BRA.w JL_0_D710
0003FA2A <AmiBlitz3.ab2@23011> JMP dupofferr
0003FA30 <AmiBlitz3.ab2@23014>   MOVE.l prevtype,D2
0003FA34 <AmiBlitz3.ab2@23015>   BEQ.w JUMP_notypeerr
0003FA38 <AmiBlitz3.ab2@23016> BRA.w JL_0_D706
0003FA3E <AmiBlitz3.ab2@23019> JMP notypeerr
0003FA44 <AmiBlitz3.ab2@23022>   JSR getparameter2
0003FA48 <AmiBlitz3.ab2@23023>    BEQ.w JUMP_syntaxerr
0003FA4E <AmiBlitz3.ab2@23024>   LEA newtypebase,A2
0003FA54 <AmiBlitz3.ab2@23025>    JSR findtype
0003FA58 <AmiBlitz3.ab2@23026>    BEQ.w JL_0_D704
0003FA60 <AmiBlitz3.ab2@23027>   BTST #$0,flagmask+1
0003FA64 <AmiBlitz3.ab2@23028>    BEQ.w JUMP_notypeerr
0003FA6A <AmiBlitz3.ab2@23029>   JSR addlabel
0003FA72 <AmiBlitz3.ab2@23032>   MOVE.w linenumat+2,$8(A2)
0003FA7A <AmiBlitz3.ab2@23033>   MOVE.l #MaxByte,$4(A2)
0003FA7C <AmiBlitz3.ab2@23036>   MOVE.l A2,D2
0003FA82 <AmiBlitz3.ab2@23039>   CMP.l #newtype_byte,D2
0003FA86 <AmiBlitz3.ab2@23040>    BEQ.w JL_0_D71E
0003FA8C <AmiBlitz3.ab2@23043>   ADDQ.w #1,typelen
0003FA94 <AmiBlitz3.ab2@23044>   BCLR #$0,typelen+1
0003FA96 <AmiBlitz3.ab2@23047>   MOVEQ.l #$00,D3
0003FA98 <AmiBlitz3.ab2@23048>   MOVEA.l D2,A2
0003FA9E <AmiBlitz3.ab2@23049>   MOVE.l A2,prevtype
0003FAA2 <AmiBlitz3.ab2@23050>   MOVE.w $8(A2),D3
0003FAA4 <AmiBlitz3.ab2@23051>   MOVEA.l (A7)+,A2
0003FAA8 <AmiBlitz3.ab2@23052>   MOVE.l D2,$A(A2)
0003FAAA <AmiBlitz3.ab2@23053>   MOVEQ.l #$00,D4
0003FAB0 <AmiBlitz3.ab2@23054>   MOVE.w typelen,D4
0003FAB4 <AmiBlitz3.ab2@23055>   MOVE.w D4,$4(A2)
0003FABC <AmiBlitz3.ab2@23056>   BTST #$0,flagmask+1
0003FAC0 <AmiBlitz3.ab2@23057>    BEQ.w JL_0_D74C
0003FAC2 <AmiBlitz3.ab2@23058>   MOVEQ.l #$04,D3
0003FAC6 <AmiBlitz3.ab2@23061>   CMP.w #$5B,D0
0003FACA <AmiBlitz3.ab2@23062>    BNE.w JL_0_D782
0003FACE <AmiBlitz3.ab2@23063>   MOVEM.l D3-D4/A2,-(A7)
0003FAD2 <AmiBlitz3.ab2@23064>    BSR.w AJL_0_BF6E
0003FAD6 <AmiBlitz3.ab2@23065>   CMP.w #$5D,D0
0003FADA <AmiBlitz3.ab2@23066>    BNE.w JUMP_syntaxerr
0003FADC <AmiBlitz3.ab2@23067>   TST.w D6
0003FAE0 <AmiBlitz3.ab2@23068>    BNE.w JUMP_fpconerr
0003FAE2 <AmiBlitz3.ab2@23069>   MOVE.l D3,D1
0003FAE6 <AmiBlitz3.ab2@23070>   MOVEM.l (A7)+,D3-D4/A2
0003FAEC <AmiBlitz3.ab2@23071>    JSR get1bytemain
0003FAF0 <AmiBlitz3.ab2@23072>   MOVE.w D1,$8(A2)
0003FAF4 <AmiBlitz3.ab2@23073>   MULU.l d1,d3                                             ;>32k fix was mulu.w
0003FAFC <AmiBlitz3.ab2@23074>   ORI.w #$2,flagmask
0003FAFE <AmiBlitz3.ab2@23077>   ADD.l D3,D4
0003FB04 <AmiBlitz3.ab2@23080>     CMP.l #65532,d4
0003FB08 <AmiBlitz3.ab2@23085>   BCC JUMP_toolongerr
0003FB10 <AmiBlitz3.ab2@23086>   MOVE.w flagmask,$6(A2)
0003FB16 <AmiBlitz3.ab2@23087>   MOVE.w D4,typelen
0003FB18 <AmiBlitz3.ab2@23088> RTS
0003FB1E <AmiBlitz3.ab2@23091> JMP badenderr
0003FB24 <AmiBlitz3.ab2@23094> JMP noiferr
0003FB2A <AmiBlitz3.ab2@23097> JMP toolongerr
0003FB30 <AmiBlitz3.ab2@23100> JMP fpconerr
0003FB36 <AmiBlitz3.ab2@23103>   MOVE.l firstiff,D0
0003FB3A <AmiBlitz3.ab2@23104>    BEQ.w JUMP_noiferr
0003FB3C <AmiBlitz3.ab2@23105>   MOVEA.l D0,A0
0003FB40 <AmiBlitz3.ab2@23106>   MOVE.w $C(A0),D0
0003FB44 <AmiBlitz3.ab2@23107>   ANDI.w #$FF,D0
0003FB46 <AmiBlitz3.ab2@23108>   CMP.w D0,D1
0003FB4A <AmiBlitz3.ab2@23109>    BNE.w JUMP_badenderr
0003FB4E <AmiBlitz3.ab2@23112>   CMP.w #$1,D1
0003FB52 <AmiBlitz3.ab2@23113>   BNE.w JL_0_D7D8
0003FB56 <AmiBlitz3.ab2@23114>   MOVE.w #$6000,D1
0003FB5C <AmiBlitz3.ab2@23117>     TST.b fast
0003FB60 <AmiBlitz3.ab2@23118>     BEQ 'l1
0003FB66 <AmiBlitz3.ab2@23119>     OR.l #$ff,d1
0003FB6A <AmiBlitz3.ab2@23123>   BSR.w writeword
0003FB70 <AmiBlitz3.ab2@23124>   MOVEA.l destpointer,A1
0003FB74 <AmiBlitz3.ab2@23125>   MOVE.l $4(A0),D1
0003FB76 <AmiBlitz3.ab2@23126>   SUB.l A1,D1
0003FB7C <AmiBlitz3.ab2@23129>     TST.b fast
0003FB80 <AmiBlitz3.ab2@23130>     BEQ 'l2
0003FB84 <AmiBlitz3.ab2@23131>     BSR writelong
0003FB88 <AmiBlitz3.ab2@23132>   BRA JL_0_D7D8
0003FB8C <AmiBlitz3.ab2@23136>   BSR.w writeword
0003FB90 <AmiBlitz3.ab2@23139>   MOVEA.l $8(A0),A1                                        ;write if branch destination
0003FB96 <AmiBlitz3.ab2@23140>   MOVE.l destpointer,D1
0003FB98 <AmiBlitz3.ab2@23141>   SUB.l A1,D1
0003FB9E <AmiBlitz3.ab2@23144>     TST.b fast
0003FBA2 <AmiBlitz3.ab2@23145>     BEQ 'l1
0003FBA4 <AmiBlitz3.ab2@23146>     ADDQ.l #4,D1
0003FBAA <AmiBlitz3.ab2@23147>     MOVE.w dontwrite,D0
0003FBAE <AmiBlitz3.ab2@23148>     BNE.w JL_0_D7FE
0003FBB2 <AmiBlitz3.ab2@23149>     MOVE.l d1,-$4(a1)
0003FBB6 <AmiBlitz3.ab2@23150>   BRA JL_0_D7FE
0003FBB8 <AmiBlitz3.ab2@23154>   ADDQ.l #2,d1
0003FBBE <AmiBlitz3.ab2@23155>   TST.w dontwrite
0003FBC2 <AmiBlitz3.ab2@23156>   BNE JL_0_D7FE
0003FBC8 <AmiBlitz3.ab2@23157>   CMP.l #MinWordSgnd,D1
0003FBCC <AmiBlitz3.ab2@23158>   BCC.w JUMP_bigiferr
0003FBD0 <AmiBlitz3.ab2@23159>   MOVE.w D1,-$2(A1)
0003FBD2 <AmiBlitz3.ab2@23162> RTS
0003FBD8 <AmiBlitz3.ab2@23165> JMP bigiferr
0003FBE2 <AmiBlitz3.ab2@23170>   MOVE.w oldqflag,instringon
0003FBE8 <AmiBlitz3.ab2@23171>   MOVEA.l lastsourcepos,A5
0003FBEA <AmiBlitz3.ab2@23174>   MOVEQ.l #$01,D1
0003FBEE <AmiBlitz3.ab2@23175> BRA.w JL_0_D810
0003FBF8 <AmiBlitz3.ab2@23179>   MOVE.w oldqflag,instringon
0003FBFE <AmiBlitz3.ab2@23180>   MOVEA.l lastsourcepos,A5
0003FC00 <AmiBlitz3.ab2@23183>   MOVEQ.l #$00,D1
0003FC04 <AmiBlitz3.ab2@23186>   BSR.w JL_0_D79E
0003FC08 <AmiBlitz3.ab2@23187>   BSR.w AJL_0_D81C
0003FC0E <AmiBlitz3.ab2@23188> JMP get1bytemain
0003FC14 <AmiBlitz3.ab2@23191>   MOVE.l (A0),firstiff
0003FC16 <AmiBlitz3.ab2@23192>   MOVEA.l A0,A1
0003FC18 <AmiBlitz3.ab2@23193>   MOVEQ.l #$0E,D0
0003FC1E <AmiBlitz3.ab2@23194>   MOVEA.l _execbase,A6
0003FC24 <AmiBlitz3.ab2@23195>   MOVE.l mempool,a0
0003FC28 <AmiBlitz3.ab2@23196> JMP _FreePooled(A6)
0003FC2E <AmiBlitz3.ab2@23200>   JSR get1bytemain
0003FC32 <AmiBlitz3.ab2@23203>   BEQ.w JL_0_D980
0003FC3A <AmiBlitz3.ab2@23204>   CMP.l #"noa7",-1(a5)
0003FC3E <AmiBlitz3.ab2@23205>   BNE 'l1
0003FC44 <AmiBlitz3.ab2@23206>   JSR get1bytemain
0003FC4A <AmiBlitz3.ab2@23207>   JSR get1bytemain
0003FC50 <AmiBlitz3.ab2@23208>   JSR get1bytemain
0003FC58 <AmiBlitz3.ab2@23209>   MOVE.w #$3a,lastchar
0003FC5C <AmiBlitz3.ab2@23210> BRA JL_0_D980
0003FC62 <AmiBlitz3.ab2@23213>   CMP.w #"d0",-1(a5)
0003FC66 <AmiBlitz3.ab2@23214>   BNE 'l2
0003FC6E <AmiBlitz3.ab2@23215>   MOVE.b #1,returncode
0003FC74 <AmiBlitz3.ab2@23216>   CLR.w lastchar
0003FC78 <AmiBlitz3.ab2@23217> BRA JL_0_D980
0003FC7C <AmiBlitz3.ab2@23220>   CMP.w #$80d7,d0
0003FC80 <AmiBlitz3.ab2@23221>   BNE JL_0_D836
0003FC86 <AmiBlitz3.ab2@23222>   JSR skiprest
0003FC88 <AmiBlitz3.ab2@23223> RTS
0003FC8C <AmiBlitz3.ab2@23226>   BSR.w JL_0_D844
0003FC92 <AmiBlitz3.ab2@23227>   JSR reget
0003FC96 <AmiBlitz3.ab2@23228>   BNE.w JL_0_D836
0003FC98 <AmiBlitz3.ab2@23229> RTS
0003FC9C <AmiBlitz3.ab2@23232>   CMP.w #-$7FFF,D0
0003FCA0 <AmiBlitz3.ab2@23233>    BNE.w JL_0_D87E
0003FCA6 <AmiBlitz3.ab2@23234>   MOVE.w linemode,D1
0003FCAA <AmiBlitz3.ab2@23235>    BNE.w JUMP_modeerr
0003FCB0 <AmiBlitz3.ab2@23236>   ADDQ.w #1,typelen
0003FCB8 <AmiBlitz3.ab2@23237>   BCLR #$0,typelen+1
0003FCBE <AmiBlitz3.ab2@23238>   MOVEA.l thistype,A0
0003FCC6 <AmiBlitz3.ab2@23239>   MOVE.w typelen,$8(A0)
0003FCCE <AmiBlitz3.ab2@23240>   MOVE.w #$FFFF,linemode
0003FCD4 <AmiBlitz3.ab2@23241> JMP get1bytemain
0003FCDA <AmiBlitz3.ab2@23244> JMP modeerr
0003FCDE <AmiBlitz3.ab2@23247>   CMP.w #-$7FF5,D0
0003FCE2 <AmiBlitz3.ab2@23248>    BEQ.w JL_0_D80E
0003FCE6 <AmiBlitz3.ab2@23249>   CMP.w #-$7FF4,D0
0003FCEA <AmiBlitz3.ab2@23250>    BEQ.w JL_0_D804
0003FCEE <AmiBlitz3.ab2@23251>   CMP.w #-$7FF8,D0
0003FCF2 <AmiBlitz3.ab2@23252>    BNE.w JL_0_D89A
0003FCF6 <AmiBlitz3.ab2@23255> BRA.w JL_0_D9E8
0003FCFC <AmiBlitz3.ab2@23258> JMP interr3
0003FD00 <AmiBlitz3.ab2@23261>   CMP.w #-$7FF7,D0
0003FD04 <AmiBlitz3.ab2@23262>    BNE.w JL_0_D8C8
0003FD0A <AmiBlitz3.ab2@23263>    TST.b fpu
0003FD0E <AmiBlitz3.ab2@23264>    BEQ 'nof
0003FD14 <AmiBlitz3.ab2@23265>    MOVEA.l currentfunction,A0
0003FD1A <AmiBlitz3.ab2@23266>    CMP.l #0,a0
0003FD1E <AmiBlitz3.ab2@23267>    BEQ 'nof
0003FD24 <AmiBlitz3.ab2@23268>    CMP.b #5,$5(a0)
0003FD28 <AmiBlitz3.ab2@23269>     BNE 'nof
0003FD2E <AmiBlitz3.ab2@23270>    MOVE.l #$f23c5000,d1
0003FD32 <AmiBlitz3.ab2@23271>    BSR writelong
0003FD36 <AmiBlitz3.ab2@23272>    MOVE.w #0,d1
0003FD3A <AmiBlitz3.ab2@23273>    BSR writeword
0003FD3E <AmiBlitz3.ab2@23276>   MOVE.w #$7000,D1                                         ;end function moveq #0,d0
0003FD42 <AmiBlitz3.ab2@23277>    BSR.w writeword
0003FD48 <AmiBlitz3.ab2@23278>   MOVEA.l currentfunction,A0
0003FD4E <AmiBlitz3.ab2@23279>   CMP.l #0,a0
0003FD52 <AmiBlitz3.ab2@23280>   BEQ JL_0_D896
0003FD58 <AmiBlitz3.ab2@23281>   MOVE.l destpointer,d1
0003FD5C <AmiBlitz3.ab2@23282>   SUB.l $e(a0),d1
0003FD60 <AmiBlitz3.ab2@23283>   MOVE.l d1,isfunc+1(a0)
0003FD66 <AmiBlitz3.ab2@23284>   CMPI.b #$7,$5(A0)
0003FD6A <AmiBlitz3.ab2@23285>    BNE.w JL_0_D896
0003FD70 <AmiBlitz3.ab2@23286>   MOVE.w putstlen,D1
0003FD74 <AmiBlitz3.ab2@23287>    BSR.w writeword
0003FD78 <AmiBlitz3.ab2@23288> BRA.w JL_0_D896
0003FD7E <AmiBlitz3.ab2@23291> JMP interr
0003FD82 <AmiBlitz3.ab2@23294>  CMP.w #-$7FD0,D0
0003FD86 <AmiBlitz3.ab2@23295>    BNE.w JL_0_D966
0003FD8C <AmiBlitz3.ab2@23296>   MOVE.w proceduremode,D1
0003FD90 <AmiBlitz3.ab2@23297>    BNE.w JUMP_interr3
0003FD96 <AmiBlitz3.ab2@23298>   TST.b debugmode
0003FD9A <AmiBlitz3.ab2@23299>    BEQ.w JL_0_D90A
0003FD9C <AmiBlitz3.ab2@23300>   MOVEQ.l #$03,D1
0003FDA2 <AmiBlitz3.ab2@23301>    JSR writetrap
0003FDA8 <AmiBlitz3.ab2@23302>   MOVE.w dontwrite,D1
0003FDAC <AmiBlitz3.ab2@23303>    BNE.w JL_0_D90A
0003FDB2 <AmiBlitz3.ab2@23304>   MOVEA.l intcleanat,A0
0003FDB8 <AmiBlitz3.ab2@23305>   MOVE.l destpointer,(A0)
0003FDBC <AmiBlitz3.ab2@23306>   MOVE.w #$C30C,D1
0003FDC0 <AmiBlitz3.ab2@23307>    BSR.w Atokejsr
0003FDC6 <AmiBlitz3.ab2@23310>   MOVE.w intstring,D1
0003FDCA <AmiBlitz3.ab2@23311>    BEQ.w JUMP_interr
0003FDCE <AmiBlitz3.ab2@23312>    BPL.w JL_0_D934
0003FDD4 <AmiBlitz3.ab2@23313>   MOVE.w intlevel,D1
0003FDD8 <AmiBlitz3.ab2@23314>   ORI.w #$7200,D1
0003FDDC <AmiBlitz3.ab2@23315>    BSR.w writeword
0003FDE0 <AmiBlitz3.ab2@23316>   MOVE.w #$C103,D1
0003FDE4 <AmiBlitz3.ab2@23317>    BSR.w Atokejsr
0003FDEA <AmiBlitz3.ab2@23318>   CLR.w intlevel
0003FDF0 <AmiBlitz3.ab2@23321>  CLR.w intstring
0003FDF6 <AmiBlitz3.ab2@23322>   MOVE.l intfin,D1
0003FDFA <AmiBlitz3.ab2@23323>    BSR.w writelong
0003FE00 <AmiBlitz3.ab2@23324>   MOVE.l #$70004E75,D1
0003FE04 <AmiBlitz3.ab2@23325>    BSR.w writelong
0003FE0A <AmiBlitz3.ab2@23326>   MOVE.w dontwrite,D1
0003FE0E <AmiBlitz3.ab2@23327>    BNE.w JL_0_D962
0003FE14 <AmiBlitz3.ab2@23328>   MOVEA.l intjmpat,A0
0003FE18 <AmiBlitz3.ab2@23329>   MOVE.l destpointer(PC),(A0)
0003FE1E <AmiBlitz3.ab2@23332> JMP get1bytemain
0003FE22 <AmiBlitz3.ab2@23336>   CMP.w #-$7FF2,D0
0003FE26 <AmiBlitz3.ab2@23337>    BEQ.w doendsel
0003FE2A <AmiBlitz3.ab2@23338>   CMP.w #-$7F4C,D0
0003FE2E <AmiBlitz3.ab2@23339>    BNE.w JL_0_D97C
0003FE34 <AmiBlitz3.ab2@23340> JMP doendseterr
0003FE3A <AmiBlitz3.ab2@23344> JMP syntaxerr
0003FE40 <AmiBlitz3.ab2@23348>   TST.w dirmode
0003FE44 <AmiBlitz3.ab2@23349>   BNE.w JUMP_baddirerr
0003FE48 <AmiBlitz3.ab2@23350>   MOVE.w #$C800,D1
0003FE4E <AmiBlitz3.ab2@23351>   JSR Atokejsr                                            ;end
0003FE56 <AmiBlitz3.ab2@23352>   CMP.l #"noa7",-4(a5)
0003FE5A <AmiBlitz3.ab2@23353>   BNE 'l10
0003FE60 <AmiBlitz3.ab2@23354>   TST.w dontwrite
0003FE64 <AmiBlitz3.ab2@23355>   BNE 'l10
0003FE6A <AmiBlitz3.ab2@23356>   MOVE.l destpointer,d1
0003FE6C <AmiBlitz3.ab2@23357>   SUBQ.l #4,d1
0003FE6E <AmiBlitz3.ab2@23358>   MOVE.l a0,-(a7)
0003FE70 <AmiBlitz3.ab2@23359>   MOVE.l d1,a0
0003FE72 <AmiBlitz3.ab2@23360>   MOVE.l (a0),a0
0003FE78 <AmiBlitz3.ab2@23361>   MOVE.l #$60000002,(a0)+
0003FE7C <AmiBlitz3.ab2@23362>   MOVE.w #$588f,(a0)
0003FE7E <AmiBlitz3.ab2@23363>   MOVE.l (a7)+,a0
0003FE80 <AmiBlitz3.ab2@23366> RTS
0003FE86 <AmiBlitz3.ab2@23370>   TST.w dirmode                                            ;stop
0003FE8A <AmiBlitz3.ab2@23371>   BNE.w JUMP_baddirerr
0003FE8C <AmiBlitz3.ab2@23372>   MOVE.w d0,d1
0003FE90 <AmiBlitz3.ab2@23373>   BEQ 'l10
0003FE94 <AmiBlitz3.ab2@23374>   CMP.b #$3a,d0
0003FE98 <AmiBlitz3.ab2@23375>   BEQ 'l10
0003FE9E <AmiBlitz3.ab2@23376>   JSR get1bytemain
0003FEA4 <AmiBlitz3.ab2@23379>   TST.b debugmode
0003FEA8 <AmiBlitz3.ab2@23380>   BEQ.w newstop
0003FEAC <AmiBlitz3.ab2@23381>   MOVE.w #$D501,D1
0003FEB0 <AmiBlitz3.ab2@23382> BRA.w Atokejsr
0003FEB2 <AmiBlitz3.ab2@23386>     RTS
0003FEB4 <AmiBlitz3.ab2@23388>   MOVE.w d1,d0
0003FEB8 <AmiBlitz3.ab2@23389>   BEQ 'l10
0003FEBC <AmiBlitz3.ab2@23390>   CMP.b #$3a,d0
0003FEC0 <AmiBlitz3.ab2@23391>   BEQ 'l10
0003FEC4 <AmiBlitz3.ab2@23392>   SUB.b #$30,d0
0003FEC8 <AmiBlitz3.ab2@23393>   MOVE.w #$4e40,d1
0003FECC <AmiBlitz3.ab2@23394> BRA 'l11
0003FED0 <AmiBlitz3.ab2@23397>   MOVE.w #$4e4a,d1
0003FED4 <AmiBlitz3.ab2@23398> BRA writeword
0003FED6 <AmiBlitz3.ab2@23401>   ADD.b d0,d1
0003FEDA <AmiBlitz3.ab2@23402> BRA writeword
0003FEE0 <AmiBlitz3.ab2@23406> JMP badconterr
0003FEE4 <AmiBlitz3.ab2@23409>   MOVE.w #$4E71,D1
0003FEE8 <AmiBlitz3.ab2@23410> BRA.w writeword
0003FEEE <AmiBlitz3.ab2@23413>   MOVEA.l firstfor,A2
0003FEF4 <AmiBlitz3.ab2@23414>   CLR.l firstfor
0003FEFA <AmiBlitz3.ab2@23415>   MOVEA.l _execbase,A6
0003FEFE <AmiBlitz3.ab2@23418>   CMPA.w #$0,A2
0003FF02 <AmiBlitz3.ab2@23419>   BEQ.w JL_0_D9E6
0003FF04 <AmiBlitz3.ab2@23420>   MOVEA.l A2,A1
0003FF06 <AmiBlitz3.ab2@23421>   MOVEA.l (A1),A2
0003FF08 <AmiBlitz3.ab2@23422>   MOVEQ.l #$00,D0
0003FF0E <AmiBlitz3.ab2@23423>   MOVE.l mempool2,a0
0003FF12 <AmiBlitz3.ab2@23424>   MOVE.b $10(A1),D0
0003FF16 <AmiBlitz3.ab2@23425>   JSR _FreePooled(A6)                                      ;freememfor_error
0003FF1A <AmiBlitz3.ab2@23426> BRA.w JL_0_D9CC
0003FF1C <AmiBlitz3.ab2@23429> RTS
0003FF22 <AmiBlitz3.ab2@23433> JMP badpenderr
0003FF28 <AmiBlitz3.ab2@23439>   MOVE.w proceduremode,D1
0003FF2C <AmiBlitz3.ab2@23440>    BEQ.w JUMP_badpenderr
0003FF32 <AmiBlitz3.ab2@23442>   MOVE.w dontwrite,D1
0003FF36 <AmiBlitz3.ab2@23443>    BNE.w JL_0_DA1A
0003FF3C <AmiBlitz3.ab2@23444>   MOVEA.l firstpend,A2
0003FF40 <AmiBlitz3.ab2@23447>   CMPA.w #$0,A2
0003FF44 <AmiBlitz3.ab2@23448>    BEQ.w JL_0_DA1A
0003FF48 <AmiBlitz3.ab2@23449>   MOVEA.l $4(A2),A0
0003FF4E <AmiBlitz3.ab2@23450>   MOVE.l destpointer,(A0)
0003FF50 <AmiBlitz3.ab2@23451>   MOVEA.l (A2),A2
0003FF54 <AmiBlitz3.ab2@23452> BRA.w JL_0_DA02
0003FF5A <AmiBlitz3.ab2@23455>   TST.b debugmode
0003FF5E <AmiBlitz3.ab2@23456>    BEQ.b JL_0_DA2A
0003FF60 <AmiBlitz3.ab2@23457>   MOVEQ.l #$05,D1
0003FF66 <AmiBlitz3.ab2@23458>   JSR writetrap
0003FF6C <AmiBlitz3.ab2@23461>   MOVEA.l firstlocal,A2                                    ;firstlocal
0003FF72 <AmiBlitz3.ab2@23462>   JSR calcstatic2b                                           ;calcstatic
0003FF78 <AmiBlitz3.ab2@23463>   MOVEA.l currentfunction,A0
0003FF7E <AmiBlitz3.ab2@23464>   MOVE.l destpointer,d1
0003FF82 <AmiBlitz3.ab2@23465>   SUB.l $e(a0),d1
0003FF86 <AmiBlitz3.ab2@23466>   MOVE.l d1,isfunc+1(a0)                                   ;store function size
0003FF8A <AmiBlitz3.ab2@23467>   MOVE.w D4,$8(A0)                                         ;set if memalloc need
0003FF90 <AmiBlitz3.ab2@23468>   MOVE.l D3,locdatast
0003FF96 <AmiBlitz3.ab2@23469>   MOVEA.l tempvm,A1
0003FF9C <AmiBlitz3.ab2@23470>  CLR.b infunctioncode
0003FFA2 <AmiBlitz3.ab2@23471>   MOVE.l firstiffstore,d1
0003FFA8 <AmiBlitz3.ab2@23472>   CMP.l firstiff,d1
0003FFAC <AmiBlitz3.ab2@23473>   BNE JUMP_noenderr
0003FFB0 <AmiBlitz3.ab2@23474>   TST.w $C(A1)                                             ;dim
0003FFB4 <AmiBlitz3.ab2@23475>    BPL.w JL_0_DA64
0003FFBA <AmiBlitz3.ab2@23476>  BSET #$7,$8(A0)
0003FFBE <AmiBlitz3.ab2@23477>   MOVE.w #$C005,D1
0003FFC2 <AmiBlitz3.ab2@23478>    BSR.w tokejsr2                                          ;writefreememstatement
0003FFC6 <AmiBlitz3.ab2@23479> BRA.w JL_0_DA6C
0003FFCC <AmiBlitz3.ab2@23482> JMP noenderr
0003FFD4 <AmiBlitz3.ab2@23485>   MOVE.w memlibstat,$C(A1)
0003FFDA <AmiBlitz3.ab2@23488>   MOVEA.l currentfunction,A0
0003FFDE <AmiBlitz3.ab2@23489>   MOVE.l $E(A0),-(A7)
0003FFE6 <AmiBlitz3.ab2@23490>   MOVE.w locvaroff,$6(A0)
0003FFEC <AmiBlitz3.ab2@23491>   BCLR #$1,$7(A0)
0003FFF2 <AmiBlitz3.ab2@23492>   BCLR #$0,$7(A0)
0003FFF8 <AmiBlitz3.ab2@23493>   CMPI.b #$7,$5(A0)
0003FFFC <AmiBlitz3.ab2@23494>    BNE.w JL_0_DA9E
00040002 <AmiBlitz3.ab2@23495>   MOVE.w getstlen,D1
00040006 <AmiBlitz3.ab2@23496>    BSR.w writeword
0004000A <AmiBlitz3.ab2@23499>   TST.w $6(A0)
0004000E <AmiBlitz3.ab2@23500>    BEQ.w JL_0_DAB8
00040012 <AmiBlitz3.ab2@23501>   MOVE.w #$FC7B,D1
00040018 <AmiBlitz3.ab2@23502>    JSR uselib
0004001E <AmiBlitz3.ab2@23503>   MOVE.w unlinka4,D1
00040022 <AmiBlitz3.ab2@23504>    BSR.w writeword
00040028 <AmiBlitz3.ab2@23507>   MOVEA.l currentfunction,A0
0004002A <AmiBlitz3.ab2@23508>   MOVEQ.l #$00,D1
0004002E <AmiBlitz3.ab2@23509>   MOVE.b $4(A0),D1
00040030 <AmiBlitz3.ab2@23510>   LSR.w #4,D1
00040034 <AmiBlitz3.ab2@23511>    BEQ.w JL_0_DB24
00040036 <AmiBlitz3.ab2@23513>      LSL.w #1,d1
0004003A <AmiBlitz3.ab2@23515>   CMP.w #$1,D1
0004003E <AmiBlitz3.ab2@23516>    BNE.w JL_0_DAE0
00040044 <AmiBlitz3.ab2@23517>   MOVE.w fix1,D1
00040048 <AmiBlitz3.ab2@23518>    BSR.w writeword
0004004C <AmiBlitz3.ab2@23519> BRA.w JL_0_DB24
0004004E <AmiBlitz3.ab2@23522>   LSL.w #2,D1
00040050 <AmiBlitz3.ab2@23523>   MOVE.w D1,-(A7)
00040056 <AmiBlitz3.ab2@23524>   MOVE.w D1,moverts+2
0004005C <AmiBlitz3.ab2@23525>   MOVE.l moverts,D1
00040060 <AmiBlitz3.ab2@23526>    BSR.w writelong
00040062 <AmiBlitz3.ab2@23527>   MOVE.w (A7)+,D1
00040066 <AmiBlitz3.ab2@23528>   CMP.w #$8,D1
0004006A <AmiBlitz3.ab2@23529>    BHI.w JL_0_DB14
0004006E <AmiBlitz3.ab2@23530>   ANDI.w #$7,D1
00040070 <AmiBlitz3.ab2@23531>   LSL.w #8,D1
00040072 <AmiBlitz3.ab2@23532>   LSL.w #1,D1
00040078 <AmiBlitz3.ab2@23533>   OR.w fixq,D1
0004007C <AmiBlitz3.ab2@23534>    BSR.w writeword
00040080 <AmiBlitz3.ab2@23535> BRA.w JL_0_DB24
00040086 <AmiBlitz3.ab2@23539>    MOVE.w D1,fixstack+2
0004008C <AmiBlitz3.ab2@23540>   MOVE.l fixstack,D1
00040090 <AmiBlitz3.ab2@23541>    BSR.w writelong
00040094 <AmiBlitz3.ab2@23544>    BSR.w JL_0_D2CA
00040098 <AmiBlitz3.ab2@23545>    BSR.w JL_0_D4F8
0004009A <AmiBlitz3.ab2@23546>   MOVEA.l (A7)+,A0
000400A0 <AmiBlitz3.ab2@23547>   MOVE.w dontwrite,D1
000400A4 <AmiBlitz3.ab2@23548>    BNE.w JL_0_DB3E
000400AA <AmiBlitz3.ab2@23549>   MOVE.l destpointer,-(A0)
000400B0 <AmiBlitz3.ab2@23552>   CLR.w proceduremode
000400B6 <AmiBlitz3.ab2@23553>   CLR.l currentfunction
000400BC <AmiBlitz3.ab2@23554>   CLR.w procnum
000400C0 <AmiBlitz3.ab2@23555>    BSR.w JL_0_DB5C
000400C6 <AmiBlitz3.ab2@23556>    JSR freepends
000400CC <AmiBlitz3.ab2@23557> JMP get1bytemain
000400CE <AmiBlitz3.ab2@23560>   MOVEQ.l #$0C,D0
000400D0 <AmiBlitz3.ab2@23561>   MOVEQ.l #$01,D1
000400D6 <AmiBlitz3.ab2@23562>   MOVEA.l _execbase,A6
000400DC <AmiBlitz3.ab2@23564>   MOVE.l mempool,a0
000400E0 <AmiBlitz3.ab2@23565>   JSR _AllocPooled(a6)
000400E2 <AmiBlitz3.ab2@23566>   MOVEA.l D0,A0
000400E8 <AmiBlitz3.ab2@23567>   MOVE.l alllocals,(A0)
000400EE <AmiBlitz3.ab2@23568>   MOVE.l A0,alllocals
000400F4 <AmiBlitz3.ab2@23569>   MOVE.l firstlocal,D0
000400FA <AmiBlitz3.ab2@23570>   CLR.l firstlocal
000400FE <AmiBlitz3.ab2@23571>   MOVE.l D0,$4(A0)
00040104 <AmiBlitz3.ab2@23572>   MOVE.l firstglob,D1
0004010A <AmiBlitz3.ab2@23573>   CLR.l firstglob
0004010E <AmiBlitz3.ab2@23574>   MOVE.l D1,$8(A0)
00040114 <AmiBlitz3.ab2@23575>   TST.b debugmode
00040118 <AmiBlitz3.ab2@23576>    BEQ.b JL_0_DBB0
0004011E <AmiBlitz3.ab2@23577>   TST.w dontwrite
00040122 <AmiBlitz3.ab2@23578>    BNE.b JL_0_DBB0
00040126 <AmiBlitz3.ab2@23579>   MOVEA.l proclocals(PC),A0
00040128 <AmiBlitz3.ab2@23580>   MOVE.l D0,(A0)+
0004012A <AmiBlitz3.ab2@23581>   MOVE.l D1,(A0)
0004012C <AmiBlitz3.ab2@23584> RTS
00040132 <AmiBlitz3.ab2@23587> JMP baddirerr
00040138 <AmiBlitz3.ab2@23591>   TST.w dirmode
0004013C <AmiBlitz3.ab2@23592>    BNE.w JUMP_baddirerr
00040142 <AmiBlitz3.ab2@23593>   MOVE.l firstfor,D1
00040146 <AmiBlitz3.ab2@23594>    BEQ.w JUMP_noforerr
0004014C <AmiBlitz3.ab2@23595>   JSR reget
00040150 <AmiBlitz3.ab2@23596>    BEQ.w JL_0_DC18
00040154 <AmiBlitz3.ab2@23599>   BSR.w getparameter
00040158 <AmiBlitz3.ab2@23600>   MOVEA.l firstfor(PC),A2
0004015A <AmiBlitz3.ab2@23601>   MOVEQ.l #$00,D1
0004015E <AmiBlitz3.ab2@23602>   MOVE.b $10(A2),D1
00040162 <AmiBlitz3.ab2@23603>   SUBI.w #$12,D1
00040164 <AmiBlitz3.ab2@23604>   CMP.w D1,D2
00040168 <AmiBlitz3.ab2@23605>    BNE.w JUMP_noforerr
0004016C <AmiBlitz3.ab2@23606>   LEA ptr_parameterstore(PC),A0
00040170 <AmiBlitz3.ab2@23607>   LEA $11(A2),A1
00040172 <AmiBlitz3.ab2@23608>   SUBQ.w #1,D2
00040174 <AmiBlitz3.ab2@23611>     CMPM.b (A0)+,(A1)+
00040178 <AmiBlitz3.ab2@23612>     BNE.w JUMP_noforerr
0004017C <AmiBlitz3.ab2@23613>   DBF D2,JL_0_DBF0
00040180 <AmiBlitz3.ab2@23615>    BSR.w JL_0_DC1A
00040186 <AmiBlitz3.ab2@23616>    JSR reget
0004018A <AmiBlitz3.ab2@23617>    BEQ.w JL_0_DC16
0004018E <AmiBlitz3.ab2@23618>   CMP.w #$2C,D0
00040192 <AmiBlitz3.ab2@23619>    BNE.w JUMP_syntaxerr
00040198 <AmiBlitz3.ab2@23620>    JSR get1bytemain
0004019C <AmiBlitz3.ab2@23621> BRA.w JL_0_DBCE
000401A2 <AmiBlitz3.ab2@23624> JMP noforerr
000401A4 <AmiBlitz3.ab2@23627> RTS
000401A8 <AmiBlitz3.ab2@23631>   MOVE.l 8(a7),a2
000401AC <AmiBlitz3.ab2@23632>   Dc.l  $f2124400                                          ;fmove.s (a2),fp0
000401B0 <AmiBlitz3.ab2@23633>   Dc.l  $F2174422                                          ;fadd.s (a7),fp0
000401B4 <AmiBlitz3.ab2@23634>   Dc.l  $F2126400                                          ;fmove.s fp0,(a2)
000401B6 <AmiBlitz3.ab2@23638>   MOVEA.l D1,A2
000401BC <AmiBlitz3.ab2@23641>   JSR popnext                                           ;error checking for next.
000401C0 <AmiBlitz3.ab2@23642>   MOVE.w $C(A2),D0
000401C6 <AmiBlitz3.ab2@23643>   LEA nextb,A0
000401CC <AmiBlitz3.ab2@23644>   LEA nextbf,A1
000401D0 <AmiBlitz3.ab2@23645>   CMP.w #$1,D0
000401D4 <AmiBlitz3.ab2@23646>    BEQ.w JL_0_DC74
000401DA <AmiBlitz3.ab2@23647>   LEA nextw,A0
000401E0 <AmiBlitz3.ab2@23648>   LEA nextwf,A1
000401E4 <AmiBlitz3.ab2@23649>   CMP.w #$2,D0
000401E8 <AmiBlitz3.ab2@23650>    BEQ.w JL_0_DC74
000401EE <AmiBlitz3.ab2@23651>   LEA nextl,A0
000401F4 <AmiBlitz3.ab2@23652>   LEA nextlf,A1
000401F8 <AmiBlitz3.ab2@23653>   CMP.w #$5,D0
000401FC <AmiBlitz3.ab2@23654>    BNE.w JL_0_DC74
00040202 <AmiBlitz3.ab2@23655>    TST.b fpu
00040206 <AmiBlitz3.ab2@23656>    BEQ 'old
0004020C <AmiBlitz3.ab2@23657>    LEA fpu2dats,a0                                         ;fpu next code
00040212 <AmiBlitz3.ab2@23658>    LEA fpu2date,a1
00040216 <AmiBlitz3.ab2@23659> BRA JL_0_DC74
0004021A <AmiBlitz3.ab2@23662>   MOVE.w #$C900,D1
0004021E <AmiBlitz3.ab2@23663>    BSR.w Atokejsr
00040224 <AmiBlitz3.ab2@23664>   LEA nextf,A0
0004022A <AmiBlitz3.ab2@23665>   LEA nextff,A1
0004022E <AmiBlitz3.ab2@23668>   BSR.w pokecode
00040234 <AmiBlitz3.ab2@23669>     TST.b fast                                             ;fast for next deactivate
00040238 <AmiBlitz3.ab2@23670> BRA 'l1
0004023E <AmiBlitz3.ab2@23672>     TST.b onestep
00040242 <AmiBlitz3.ab2@23673>     BEQ 'l1
00040248 <AmiBlitz3.ab2@23674>     CLR.b onestep
0004024E <AmiBlitz3.ab2@23675>     SUBQ.l #4,destpointer
00040252 <AmiBlitz3.ab2@23676>     MOVE.w #$5292,d1
00040256 <AmiBlitz3.ab2@23677>     BSR writeword
0004025A <AmiBlitz3.ab2@23680>   MOVE.l JL_0_DCF4(PC),D1
0004025E <AmiBlitz3.ab2@23681>    BSR.w writelong
00040264 <AmiBlitz3.ab2@23682>   MOVEA.l firstfor,A2
0004026A <AmiBlitz3.ab2@23683>   MOVE.l (A2),firstfor
0004026E <AmiBlitz3.ab2@23684>   MOVEA.l $8(A2),A0
00040274 <AmiBlitz3.ab2@23685>   MOVEA.l destpointer,A1
00040276 <AmiBlitz3.ab2@23686>   MOVE.l A1,D1
00040278 <AmiBlitz3.ab2@23687>   SUB.l A0,D1
0004027A <AmiBlitz3.ab2@23688>   ADDQ.l #2,D1
00040280 <AmiBlitz3.ab2@23689>   CMP.l #MinWordSgnd,D1
00040284 <AmiBlitz3.ab2@23690>    BCC.w JUMP_bigforerr
0004028A <AmiBlitz3.ab2@23691>   TST.w dontwrite
0004028E <AmiBlitz3.ab2@23692>    BNE.w JL_0_DCB4
00040292 <AmiBlitz3.ab2@23693>   MOVE.w D1,-$2(A0)
00040294 <AmiBlitz3.ab2@23696>   MOVE.l A1,D1
00040298 <AmiBlitz3.ab2@23697>   SUB.l $4(A2),D1
0004029A <AmiBlitz3.ab2@23698>   SUBQ.l #6,D1
000402A0 <AmiBlitz3.ab2@23699>   CMP.l #MinWordSgnd,D1
000402A4 <AmiBlitz3.ab2@23700>    BCC.w JUMP_bigforerr
000402AA <AmiBlitz3.ab2@23701>   TST.w dontwrite
000402AE <AmiBlitz3.ab2@23702>    BNE.w JL_0_DCD6
000402B0 <AmiBlitz3.ab2@23703>   NEG.w D1
000402B4 <AmiBlitz3.ab2@23704>   MOVE.w D1,-$2(A1)
000402BA <AmiBlitz3.ab2@23707>   JSR popnext3
000402C0 <AmiBlitz3.ab2@23708>   MOVEA.l _execbase,A6
000402C2 <AmiBlitz3.ab2@23709>   MOVEA.l A2,A1
000402C4 <AmiBlitz3.ab2@23710>   MOVEQ.l #$00,D0
000402C8 <AmiBlitz3.ab2@23711>   MOVE.b $10(A1),D0
000402CE <AmiBlitz3.ab2@23712>   MOVE.l mempool2,a0
000402D2 <AmiBlitz3.ab2@23713>   JSR _FreePooled(A6)
000402D8 <AmiBlitz3.ab2@23714> JMP reget
000402DE <AmiBlitz3.ab2@23717> JMP notallowd
000402E4 <AmiBlitz3.ab2@23720> JMP bigforerr
000402E8 <AmiBlitz3.ab2@23727>   MOVE.w #$664F,-(A7)
000402EC <AmiBlitz3.ab2@23730> BRA.w JL_0_DCF4
000402F2 <AmiBlitz3.ab2@23733> JMP error_dublicate_for
000402F6 <AmiBlitz3.ab2@23736> forlineat:   Ds.l 1
000402F8 <AmiBlitz3.ab2@23737> fortemp:     Ds.w 1
000402FE <AmiBlitz3.ab2@23744>   CLR.l fp0addr
00040304 <AmiBlitz3.ab2@23745>   TST.w dirmode
00040308 <AmiBlitz3.ab2@23746>    BNE.w JUMP_baddirerr
00040312 <AmiBlitz3.ab2@23747>   MOVE.l linenumat,forlineat
00040318 <AmiBlitz3.ab2@23751>   MOVE.l A5,letstart
0004031C <AmiBlitz3.ab2@23752>   BSR.w getparameter
00040322 <AmiBlitz3.ab2@23753>   MOVE.w D2,fortemp
00040328 <AmiBlitz3.ab2@23754>   JSR findfor
0004032C <AmiBlitz3.ab2@23755>    BEQ.w JUMP_error_dublicate_for
00040332 <AmiBlitz3.ab2@23756>   LEA firstfor,A2
00040338 <AmiBlitz3.ab2@23757>   JSR addhere2
0004033A <AmiBlitz3.ab2@23758>   MOVE.l A2,-(A7)
00040340 <AmiBlitz3.ab2@23759>   TST.b debugmode
00040344 <AmiBlitz3.ab2@23760>    BEQ.b JL_0_DD4C
0004034A <AmiBlitz3.ab2@23761>   JSR chkstak
00040350 <AmiBlitz3.ab2@23762>   MOVE.l AJL_0_DCF0,D1
00040356 <AmiBlitz3.ab2@23763>   JSR  writelong
0004035A <AmiBlitz3.ab2@23766>   MOVE.w fortemp(PC),D2
00040362 <AmiBlitz3.ab2@23767>   MOVE.b #1,formode
00040366 <AmiBlitz3.ab2@23768>   BSR.w AJL_0_DEA6                                         ;for get 1. value
0004036C <AmiBlitz3.ab2@23769>   CLR.b formode
00040370 <AmiBlitz3.ab2@23770>   CMP.w #-$7FE8,D0
00040374 <AmiBlitz3.ab2@23771>    BNE.w JUMP_syntaxerr
0004037A <AmiBlitz3.ab2@23772>   MOVE.w commode,D1
0004037E <AmiBlitz3.ab2@23773>    BNE.w JUMP_syntaxerr
00040382 <AmiBlitz3.ab2@23774>   CMP.b #$6,D2
00040386 <AmiBlitz3.ab2@23775>    BCC.w JUMP_badforerr
0004038A <AmiBlitz3.ab2@23776>   BTST #$F,D2
0004038E <AmiBlitz3.ab2@23777>    BNE.w JL_0_DD86
00040394 <AmiBlitz3.ab2@23778>   MOVE.w leaamp,D1
0004039A <AmiBlitz3.ab2@23779>   JSR pokewda5s
0004039C <AmiBlitz3.ab2@23780>   MOVE.w D3,D1
000403A2 <AmiBlitz3.ab2@23781>   JSR  writeword
000403A8 <AmiBlitz3.ab2@23784>   MOVE.w pushindex,D1
000403AE <AmiBlitz3.ab2@23785>   JSR  writeword
000403B2 <AmiBlitz3.ab2@23786>   ANDI.w #$FF,D2
000403B4 <AmiBlitz3.ab2@23788>   MOVEA.l (A7),A1
000403B8 <AmiBlitz3.ab2@23789>   MOVE.w D2,$C(A1)
000403BA <AmiBlitz3.ab2@23790>   MOVE.w D2,-(A7)
000403BE <AmiBlitz3.ab2@23791>    BSR.w eval
000403C4 <AmiBlitz3.ab2@23792>    CLR.b onestep
000403C8 <AmiBlitz3.ab2@23793>    CMP.w #$8019,d0
000403CC <AmiBlitz3.ab2@23794>    BEQ 'l1
000403D4 <AmiBlitz3.ab2@23795>    MOVE.b #1,onestep
000403D6 <AmiBlitz3.ab2@23798>   MOVE.w (A7),D2
000403DC <AmiBlitz3.ab2@23799>   MOVE.w pushd0l,D1
000403E0 <AmiBlitz3.ab2@23800>   CMP.w #$3,D2
000403E4 <AmiBlitz3.ab2@23801>    BCC.w JL_0_DDB6
000403EA <AmiBlitz3.ab2@23802>   MOVE.w pushd0wd,D1
000403EC <AmiBlitz3.ab2@23805>    MOVE.w D1,-(A7)
000403F2 <AmiBlitz3.ab2@23806>    TST.b fpu
000403F6 <AmiBlitz3.ab2@23807>    BEQ 'old
000403FA <AmiBlitz3.ab2@23808>    CMP.b #5,d2
000403FE <AmiBlitz3.ab2@23809>    BNE 'old
00040404 <AmiBlitz3.ab2@23810>    MOVE.l #$f2276400,d1
0004040A <AmiBlitz3.ab2@23812>    JSR writelong
0004040E <AmiBlitz3.ab2@23813> BRA 'weit
00040414 <AmiBlitz3.ab2@23816>    JSR  writeword                                          ;fpu for end value
00040418 <AmiBlitz3.ab2@23819>   CMP.w #-$7FE7,D0
0004041C <AmiBlitz3.ab2@23820>    BNE.w JL_0_DDCC
00040420 <AmiBlitz3.ab2@23821>    BSR.w eval
00040426 <AmiBlitz3.ab2@23822>    TST.b fpu
0004042A <AmiBlitz3.ab2@23823>    BEQ JL_0_DE0C
0004042E <AmiBlitz3.ab2@23824>    CMP.b #5,d2
00040432 <AmiBlitz3.ab2@23825>    BNE JL_0_DE0C
00040438 <AmiBlitz3.ab2@23826>    MOVE.l #$f2276400,d1                                    ;write step <> 1
0004043E <AmiBlitz3.ab2@23828>   JSR writelong
00040440 <AmiBlitz3.ab2@23831>    MOVE.w (a7)+,d1
00040444 <AmiBlitz3.ab2@23832> BRA fpur
00040448 <AmiBlitz3.ab2@23835>   CMP.w #$4,D2
0004044C <AmiBlitz3.ab2@23836>    BCC.w JL_0_DDE0
00040450 <AmiBlitz3.ab2@23837>   MOVE.w #$7001,D1
00040456 <AmiBlitz3.ab2@23838>   JSR writeword
0004045A <AmiBlitz3.ab2@23839> BRA.w JL_0_DE0C
00040460 <AmiBlitz3.ab2@23842> JMP badforerr
00040464 <AmiBlitz3.ab2@23845>   BNE.w JL_0_DDFA
00040468 <AmiBlitz3.ab2@23846>   MOVE.w #$7001,D1
0004046E <AmiBlitz3.ab2@23847>   JSR writeword
00040474 <AmiBlitz3.ab2@23848>   MOVE.w swapd0,D1
0004047A <AmiBlitz3.ab2@23849>   JSR writeword
0004047E <AmiBlitz3.ab2@23850> BRA.w JL_0_DE0C
00040484 <AmiBlitz3.ab2@23853>   TST.b fpu
00040488 <AmiBlitz3.ab2@23854>    BEQ 'old
0004048C <AmiBlitz3.ab2@23855>   CMP.b #5,d2
00040490 <AmiBlitz3.ab2@23856>    BNE 'old
00040496 <AmiBlitz3.ab2@23857>   MOVE.l #$f23c5000,d1
0004049C <AmiBlitz3.ab2@23858>   JSR writelong
000404A0 <AmiBlitz3.ab2@23859>   MOVE.w #$1,d1
000404A6 <AmiBlitz3.ab2@23860>   JSR writeword
000404AC <AmiBlitz3.ab2@23861>   MOVE.l #$f2276400,d1
000404B2 <AmiBlitz3.ab2@23862>   JSR writelong
000404B4 <AmiBlitz3.ab2@23863>   MOVE.w (a7)+,d1
000404B8 <AmiBlitz3.ab2@23864> BRA fpur
000404BC <AmiBlitz3.ab2@23867>   MOVE.w #$203C,D1                                         ;write step 1
000404C2 <AmiBlitz3.ab2@23868>   JSR writeword
000404C8 <AmiBlitz3.ab2@23869>   MOVE.l #SA_BackFill,D1                                   ;#$80000041,d1 org source  ;ffp '1'
000404CE <AmiBlitz3.ab2@23870>   JSR writelong
000404D0 <AmiBlitz3.ab2@23873>   MOVE.w (A7)+,D1
000404D6 <AmiBlitz3.ab2@23874>   JSR writeword                                            ;push step on stack
000404D8 <AmiBlitz3.ab2@23877>   MOVE.w (A7)+,D2
000404DA <AmiBlitz3.ab2@23878>   MOVEA.l (A7),A1
000404E2 <AmiBlitz3.ab2@23879>   MOVE.l destpointer,$4(A1)
000404E8 <AmiBlitz3.ab2@23880>   LEA forcompb,A0
000404EE <AmiBlitz3.ab2@23881>   LEA forcompbf,A1
000404F2 <AmiBlitz3.ab2@23882>   CMP.w #$1,D2
000404F6 <AmiBlitz3.ab2@23883>    BEQ.w JL_0_DE7E
000404FC <AmiBlitz3.ab2@23884>   LEA forcompw,A0
00040502 <AmiBlitz3.ab2@23885>   LEA forcompwf,A1
00040506 <AmiBlitz3.ab2@23886>   CMP.w #$2,D2
0004050A <AmiBlitz3.ab2@23887>    BEQ.w JL_0_DE7E
00040510 <AmiBlitz3.ab2@23888>   LEA forcompl,A0
00040516 <AmiBlitz3.ab2@23889>   LEA forcomplf,A1
0004051A <AmiBlitz3.ab2@23890>   CMP.w #$5,D2
0004051E <AmiBlitz3.ab2@23891>    BNE.w JL_0_DE7E
00040524 <AmiBlitz3.ab2@23892>   TST.b fpu
00040528 <AmiBlitz3.ab2@23893>    BEQ 'old
0004052E <AmiBlitz3.ab2@23894>   LEA fpu_start,a0
00040534 <AmiBlitz3.ab2@23895>   LEA fpu_end,a1
0004053A <AmiBlitz3.ab2@23896>   JSR pokecode
0004053E <AmiBlitz3.ab2@23897> BRA fpu3
00040544 <AmiBlitz3.ab2@23900>   LEA forcompf,A0                                         ;
0004054A <AmiBlitz3.ab2@23901>   LEA forcompff,A1
00040550 <AmiBlitz3.ab2@23902>   JSR pokecode
00040554 <AmiBlitz3.ab2@23903>   MOVE.w #$C900,D1
00040558 <AmiBlitz3.ab2@23904>   BSR.w Atokejsr
0004055E <AmiBlitz3.ab2@23905>   LEA forcompf2,A0
00040564 <AmiBlitz3.ab2@23906>   LEA forcompf2f,A1
0004056A <AmiBlitz3.ab2@23909>   JSR pokecode
00040570 <AmiBlitz3.ab2@23910>   TST.b fast                                               ;fast for next
00040574 <AmiBlitz3.ab2@23911>    BEQ 's1
00040578 <AmiBlitz3.ab2@23912>   CMP.w #3,d2
0004057C <AmiBlitz3.ab2@23913>    BNE 's1
00040582 <AmiBlitz3.ab2@23914>   TST.b onestep
00040586 <AmiBlitz3.ab2@23915>    BEQ 's1
00040590 <AmiBlitz3.ab2@23916>   SUB.l #10,destpointer
00040594 <AmiBlitz3.ab2@23917>   MOVE.w #$b081,d1
0004059A <AmiBlitz3.ab2@23918>   JSR writeword
0004059E <AmiBlitz3.ab2@23922>   MOVE.l thebgt(PC),D1
000405A4 <AmiBlitz3.ab2@23923>   JSR writelong
000405A6 <AmiBlitz3.ab2@23926>   MOVEA.l (A7)+,A1
000405AE <AmiBlitz3.ab2@23927>   MOVE.l destpointer,$8(A1)
000405B4 <AmiBlitz3.ab2@23928> JMP reget
000405B8 <AmiBlitz3.ab2@23931>   MOVEA.l 8(a7),a2
000405BC <AmiBlitz3.ab2@23932>   Dc.l $f2124400                                           ;fmove.s (a2),fp0
000405C2 <AmiBlitz3.ab2@23933>   fmove.s 4(a7),fp1
000405C6 <AmiBlitz3.ab2@23934>   BTST.b #7,(a7)
000405CA <AmiBlitz3.ab2@23935>   BNE 'negi
000405CE <AmiBlitz3.ab2@23936>   fcmp.x fp1,fp0
000405D2 <AmiBlitz3.ab2@23937> BRA 'negi2
000405D6 <AmiBlitz3.ab2@23940>   fcmp.x fp0,fp1
000405DA <AmiBlitz3.ab2@23943>   Dc.l $f2920000                                           ;fbgt.w
000405DE <AmiBlitz3.ab2@23947>   BGT.w thebgt
000405E4 <AmiBlitz3.ab2@23950>   MOVE.l A5,letstart
000405E8 <AmiBlitz3.ab2@23951>   BSR.w getparameter
000405F2 <AmiBlitz3.ab2@23957>   MOVE.l destpointer,pushpc
000405FC <AmiBlitz3.ab2@23958>   MOVE.l hunkoffsetbase,pushoff
00040604 <AmiBlitz3.ab2@23959>   MOVE.w #$0001,regnum
0004060A <AmiBlitz3.ab2@23960>   JSR JL_0_8E3C
00040610 <AmiBlitz3.ab2@23961>   JSR calcvar
00040616 <AmiBlitz3.ab2@23962>   TST.b formode
0004061A <AmiBlitz3.ab2@23963>   BEQ 'lf1
00040620 <AmiBlitz3.ab2@23964>   CMP.l #newtype_double,A2
00040624 <AmiBlitz3.ab2@23965>   BEQ JUMP_notallowd
0004062A <AmiBlitz3.ab2@23966>   MOVE.l a2,currtype
00040630 <AmiBlitz3.ab2@23969>   CLR.w startoffsetmore
00040634 <AmiBlitz3.ab2@23970>   CMP.w #$3d,d0
00040638 <AmiBlitz3.ab2@23971>   BNE 'l1a
0004063C <AmiBlitz3.ab2@23972>   BTST #15,d2
00040640 <AmiBlitz3.ab2@23973>   BEQ 'l1a
00040644 <AmiBlitz3.ab2@23974>   CMP.b #1,d2
00040648 <AmiBlitz3.ab2@23975>   BNE 'l1a
00040652 <AmiBlitz3.ab2@23976>   MOVE.w leaa0a0+2,startoffsetmore
00040658 <AmiBlitz3.ab2@23979>   CLR.w regnum
0004065C <AmiBlitz3.ab2@23980>   BSR.w JL_0_B5D2
00040662 <AmiBlitz3.ab2@23981>   CLR.w commode
00040668 <AmiBlitz3.ab2@23982>   CLR.w stackcorrect
0004066E <AmiBlitz3.ab2@23983>   CLR.w pcodd
00040674 <AmiBlitz3.ab2@23984>   MOVE.w startoffsetmore,d1
00040678 <AmiBlitz3.ab2@23985>   BTST #0,d1
0004067C <AmiBlitz3.ab2@23986>   BEQ 'l2a
00040684 <AmiBlitz3.ab2@23987>   MOVE.w #1,pcodd
00040688 <AmiBlitz3.ab2@23990>   CMP.w #$3D,D0                                            ;=
0004068C <AmiBlitz3.ab2@23991>   BEQ.w JL_0_DEE0
0004068E <AmiBlitz3.ab2@23994>   MOVE.b (a5)+,d1
00040692 <AmiBlitz3.ab2@23995>   BEQ 'l10
00040696 <AmiBlitz3.ab2@23996>   CMP.b #":",d1
0004069A <AmiBlitz3.ab2@23997>   BEQ 'l10
0004069E <AmiBlitz3.ab2@23998>   CMP.b #";",d1
000406A2 <AmiBlitz3.ab2@23999>   BEQ 'l10
000406A6 <AmiBlitz3.ab2@24000>   CMP.b #"0",d1
000406AA <AmiBlitz3.ab2@24001>   BLT 'l11
000406AE <AmiBlitz3.ab2@24002>   CMP.b #"9",d1
000406B2 <AmiBlitz3.ab2@24003>   BGT 'l11
000406B6 <AmiBlitz3.ab2@24004> BRA.s 'l1
000406BE <AmiBlitz3.ab2@24007>   MOVE.b #1,quickadd
000406C4 <AmiBlitz3.ab2@24010>   MOVEA.l letstart,A5
000406C6 <AmiBlitz3.ab2@24011>   SUBQ.w #1,A5
000406CA <AmiBlitz3.ab2@24014>   CMP.b #$7,D2
000406CE <AmiBlitz3.ab2@24015>    BNE.w JL_0_DF8A
000406D2 <AmiBlitz3.ab2@24021>   MOVEM.w D2-D3,-(A7)
000406D8 <AmiBlitz3.ab2@24022>   MOVE.l lastoffset_org,-(A7)
000406DE <AmiBlitz3.ab2@24023>   MOVE.w varmode,-(A7)
000406E8 <AmiBlitz3.ab2@24025>    MOVE.l #forthstack,forthsp
000406F2 <AmiBlitz3.ab2@24026>    MOVE.l #precstack,precsp
000406F8 <AmiBlitz3.ab2@24027>    CLR.w regnum
000406FE <AmiBlitz3.ab2@24028>    CLR.w nonew
00040704 <AmiBlitz3.ab2@24029>    CLR.w sbasegot
0004070E <AmiBlitz3.ab2@24030>    MOVE.w varcodelen,oldvcodelen
00040714 <AmiBlitz3.ab2@24031>    CLR.w varcodelen
0004071C <AmiBlitz3.ab2@24032>    MOVE.w #$FFFF,lasta6
0004071E <AmiBlitz3.ab2@24035>   MOVEQ.l #$07,D2
00040722 <AmiBlitz3.ab2@24036>    BSR.w eval
00040728 <AmiBlitz3.ab2@24037>   MOVE.w (A7)+,varmode
0004072E <AmiBlitz3.ab2@24038>   MOVE.l (A7)+,lastoffset_org
00040734 <AmiBlitz3.ab2@24039>   MOVE.w moved0a3,D1
0004073A <AmiBlitz3.ab2@24040>    JSR writeword
00040740 <AmiBlitz3.ab2@24041>   MOVE.w commode,D1
00040744 <AmiBlitz3.ab2@24042>    BEQ.w JL_0_DF38
0004074A <AmiBlitz3.ab2@24043>   LEA pulla2st,A0
00040750 <AmiBlitz3.ab2@24044>   LEA pulla2stf,A1
00040756 <AmiBlitz3.ab2@24045>    JSR pokecode
0004075A <AmiBlitz3.ab2@24046> BRA.w JL_0_DF3C
0004075E <AmiBlitz3.ab2@24049>   BSR.w JL_0_B63C
00040762 <AmiBlitz3.ab2@24052>   MOVEM.w (A7)+,D2-D3
00040766 <AmiBlitz3.ab2@24053>   BTST #$F,D2
0004076A <AmiBlitz3.ab2@24054>   BNE.w JL_0_DF58
00040770 <AmiBlitz3.ab2@24055>     MOVE.w D3,leaa5d3a2+2
00040776 <AmiBlitz3.ab2@24056>     MOVE.l leaa5d3a2,D1
0004077C <AmiBlitz3.ab2@24057>     JSR pokela5s
00040780 <AmiBlitz3.ab2@24060>   MOVE.w #$FE6F,D1
00040786 <AmiBlitz3.ab2@24061>   JSR uselib
0004078C <AmiBlitz3.ab2@24062>   MOVE.l #$C700,D1
00040792 <AmiBlitz3.ab2@24063>   MOVE.l d1,lastinstruction
00040798 <AmiBlitz3.ab2@24064>   MOVE.w varmode,D2
0004079C <AmiBlitz3.ab2@24065>   BNE.w JL_0_DF70
0004079E <AmiBlitz3.ab2@24066>     ADDQ.w #1,D1
000407A2 <AmiBlitz3.ab2@24069>   BSR.w Atokejsr
000407A6 <AmiBlitz3.ab2@24070>   CMP.w #$2C,D0
000407AA <AmiBlitz3.ab2@24071>   BNE.w JL_0_E0C6
000407B0 <AmiBlitz3.ab2@24073>   MOVE.w addq4a2,D1
000407B6 <AmiBlitz3.ab2@24074>   JSR writeword
000407BA <AmiBlitz3.ab2@24075> BRA.w JL_0_E018
000407C0 <AmiBlitz3.ab2@24078> JMP error4char
000407C6 <AmiBlitz3.ab2@24081> JMP error_convert_types
000407CA <AmiBlitz3.ab2@24085>    BTST #$E,D2
000407CE <AmiBlitz3.ab2@24086>    BNE.w JL_0_DF9C
000407D0 <AmiBlitz3.ab2@24087>   TST.b D2
000407D4 <AmiBlitz3.ab2@24088>    BEQ.w JUMP_noleterr
000407DA <AmiBlitz3.ab2@24089>    TST.b newsyntax
000407DE <AmiBlitz3.ab2@24090>    BEQ JL_0_DFA0
000407E2 <AmiBlitz3.ab2@24093>    CMP.w #$4022,(a5)
000407E6 <AmiBlitz3.ab2@24094>    BNE JL_0_DFA0
000407EC <AmiBlitz3.ab2@24095>    CMP.l #3,d2
000407F0 <AmiBlitz3.ab2@24096>    BNE  JUMP_error_convert_types
000407F2 <AmiBlitz3.ab2@24097>    ADDQ #2,a5
000407F4 <AmiBlitz3.ab2@24098>    MOVEQ #0,d0
000407F6 <AmiBlitz3.ab2@24099>    MOVE.b (a5)+,d0
000407FA <AmiBlitz3.ab2@24100>    BEQ JL_0_DFA0
000407FE <AmiBlitz3.ab2@24101>    CMP.b #$22,d0
00040802 <AmiBlitz3.ab2@24102>    BNE 'l1
00040806 <AmiBlitz3.ab2@24103>    MOVE.b #0,d0
0004080A <AmiBlitz3.ab2@24104> BRA 'do
0004080C <AmiBlitz3.ab2@24107>   ASL.l #8,d0
0004080E <AmiBlitz3.ab2@24108>    MOVE.b (a5)+,d0
00040812 <AmiBlitz3.ab2@24109>    BEQ JL_0_DFA0
00040816 <AmiBlitz3.ab2@24110>    CMP.b #$22,d0
0004081A <AmiBlitz3.ab2@24111>    BNE 'l2
0004081E <AmiBlitz3.ab2@24112>    MOVE.b #0,d0
00040820 <AmiBlitz3.ab2@24113>    ASR.l #8,d0
00040824 <AmiBlitz3.ab2@24114> BRA 'do
00040826 <AmiBlitz3.ab2@24117>   ASL.l #8,d0
00040828 <AmiBlitz3.ab2@24118>     MOVE.b (a5)+,d0
0004082C <AmiBlitz3.ab2@24119>    BEQ JL_0_DFA0
00040830 <AmiBlitz3.ab2@24120>    CMP.b #$22,d0
00040834 <AmiBlitz3.ab2@24121>    BNE 'l3
00040838 <AmiBlitz3.ab2@24122>    MOVE.b #0,d0
0004083A <AmiBlitz3.ab2@24123>    ASR.l #8,d0
0004083E <AmiBlitz3.ab2@24124> BRA 'do
00040840 <AmiBlitz3.ab2@24127>   ASL.l #8,d0
00040842 <AmiBlitz3.ab2@24128>     MOVE.b (a5)+,d0
00040846 <AmiBlitz3.ab2@24129>    BEQ JL_0_DFA0
0004084A <AmiBlitz3.ab2@24130>    CMP.b #$22,d0
0004084E <AmiBlitz3.ab2@24131>    BNE 'l4
00040852 <AmiBlitz3.ab2@24132>    MOVE.b #0,d0
00040854 <AmiBlitz3.ab2@24133>    ASR.l #8,d0
00040858 <AmiBlitz3.ab2@24134> BRA 'do
0004085C <AmiBlitz3.ab2@24137>    CMP.b #$22,(a5)+
00040860 <AmiBlitz3.ab2@24138>    BNE JUMP_error4char
00040864 <AmiBlitz3.ab2@24141>   MOVE.w #$2b7c,d1
0004086A <AmiBlitz3.ab2@24142>    TST.w varmode
0004086E <AmiBlitz3.ab2@24143>    BEQ 'g3
00040872 <AmiBlitz3.ab2@24144>    BCLR #9,d1
00040878 <AmiBlitz3.ab2@24147>     JSR writeword
0004087A <AmiBlitz3.ab2@24148>     MOVE.l d0,d1
00040880 <AmiBlitz3.ab2@24149>     JSR writelong
00040882 <AmiBlitz3.ab2@24150>     MOVE.w d3,d1
00040888 <AmiBlitz3.ab2@24151>     JSR writeword
0004088E <AmiBlitz3.ab2@24152>     JSR get1bytemain
00040890 <AmiBlitz3.ab2@24153> RTS
00040896 <AmiBlitz3.ab2@24159> JMP noleterr
0004089C <AmiBlitz3.ab2@24163>   MOVE.w d2,vartype
000408A0 <AmiBlitz3.ab2@24164>   MOVE.b #$3,D2
000408A4 <AmiBlitz3.ab2@24167>   CMP.b #5,d2
000408A8 <AmiBlitz3.ab2@24168>   BNE 'l1
000408AE <AmiBlitz3.ab2@24169>   MOVE.l a2,currtype
000408B2 <AmiBlitz3.ab2@24173>   MOVEM.w D2-D3,-(A7)
000408B8 <AmiBlitz3.ab2@24174>   MOVE.w varmode,-(A7)
000408BC <AmiBlitz3.ab2@24175>   ANDI.w #$FF,D2
000408C2 <AmiBlitz3.ab2@24176>   MOVE.l lastoffset_org,-(A7)
000408C6 <AmiBlitz3.ab2@24177>    BSR.w eval
000408CC <AmiBlitz3.ab2@24178>   MOVE.l (A7)+,lastoffset_org
000408D2 <AmiBlitz3.ab2@24179>   MOVE.w commode,D1
000408D6 <AmiBlitz3.ab2@24180>    BNE.w JL_0_DFCC
000408DA <AmiBlitz3.ab2@24181>    BSR.w JL_0_B63C
000408E0 <AmiBlitz3.ab2@24184>   MOVE.w (A7)+,varmode
000408E4 <AmiBlitz3.ab2@24185>   MOVEM.w (A7)+,D2-D3
000408E8 <AmiBlitz3.ab2@24187>   MOVE.w #$2B40,D1
000408EE <AmiBlitz3.ab2@24188>   MOVE.w varmode,D4
000408F2 <AmiBlitz3.ab2@24189>    BEQ.w JL_0_DFE8
000408F6 <AmiBlitz3.ab2@24190>   BCLR #$9,D1
000408FA <AmiBlitz3.ab2@24193>   BTST #$F,D2
000408FE <AmiBlitz3.ab2@24194>    BEQ.w JL_0_E090
00040904 <AmiBlitz3.ab2@24195>    TST.b stackcorrect
00040908 <AmiBlitz3.ab2@24196>    BNE 'st1
0004090E <AmiBlitz3.ab2@24197>   MOVE.w commode,D1
00040912 <AmiBlitz3.ab2@24198>    BEQ.w JL_0_E004
00040918 <AmiBlitz3.ab2@24201>   MOVE.w pulla2,D1
0004091E <AmiBlitz3.ab2@24202>    JSR writeword
00040922 <AmiBlitz3.ab2@24205>   MOVE.w #$2480,D1
00040926 <AmiBlitz3.ab2@24206>    MOVEM.l a0/d0,-(a7)
0004092C <AmiBlitz3.ab2@24207>    MOVEA.l lastoffset_org,A0
0004092E <AmiBlitz3.ab2@24208>    MOVE.l A0,D0
00040932 <AmiBlitz3.ab2@24209>    BEQ.w 'skip
00040934 <AmiBlitz3.ab2@24210>    MOVEA.l D0,A0
0004093C <AmiBlitz3.ab2@24211>    MOVE.l $A(A0),currtype
00040940 <AmiBlitz3.ab2@24214>   MOVEM.l (a7)+,a0/d0
00040944 <AmiBlitz3.ab2@24215>   CMP.w #$2C,D0
00040948 <AmiBlitz3.ab2@24216>    BNE.w JL_0_E090
0004094C <AmiBlitz3.ab2@24217>     MOVE.w #$24C0,D1
00040950 <AmiBlitz3.ab2@24218>    BSR.w JL_0_E090                                         ;write store
00040956 <AmiBlitz3.ab2@24221>    MOVE.l lastoffset_org,D0
0004095E <AmiBlitz3.ab2@24225>   MOVE.w #$FFFF,commode
00040964 <AmiBlitz3.ab2@24226>   CLR.w varcodelen
0004096C <AmiBlitz3.ab2@24227>   MOVE.b #1,optiarray
00040972 <AmiBlitz3.ab2@24228>   MOVE.w pusha2,D1
00040978 <AmiBlitz3.ab2@24229>    JSR writeword
0004097E <AmiBlitz3.ab2@24230>   TST.l lastoffset_org
00040982 <AmiBlitz3.ab2@24231>   BEQ dimmore
00040988 <AmiBlitz3.ab2@24232>   MOVEA.l lastoffset_org,A0
0004098A <AmiBlitz3.ab2@24233>   MOVE.l (A0),D0
0004098E <AmiBlitz3.ab2@24234>    BEQ.w JUMP_comerr
00040990 <AmiBlitz3.ab2@24235>   MOVEA.l D0,A0
00040996 <AmiBlitz3.ab2@24236>   MOVE.l A0,lastoffset_org
0004099C <AmiBlitz3.ab2@24237>   BTST #$1,$7(A0)
000409A0 <AmiBlitz3.ab2@24238>    BNE.w JUMP_nocomerr
000409A4 <AmiBlitz3.ab2@24239>   MOVEA.l $A(A0),A1
000409A8 <AmiBlitz3.ab2@24240>   MOVE.l $4(A1),D2
000409AE <AmiBlitz3.ab2@24243>   BTST #$0,$7(A0)
000409B2 <AmiBlitz3.ab2@24244>    BNE.w JL_0_E078
000409B8 <AmiBlitz3.ab2@24245>   CMP.l #$100,D2
000409BC <AmiBlitz3.ab2@24246>    BCC.l JUMP_nocomerr
000409C0 <AmiBlitz3.ab2@24247> BRA.w JL_0_E088
000409C6 <AmiBlitz3.ab2@24250>         CLR.b optiarray
000409CA <AmiBlitz3.ab2@24251>         CMP.w #"@@",(a5)
000409CE <AmiBlitz3.ab2@24252>         BEQ 'n1
000409D2 <AmiBlitz3.ab2@24253> BRA 'd1
000409D8 <AmiBlitz3.ab2@24256>   JSR nextline
000409DA <AmiBlitz3.ab2@24257>         MOVE.l a5,-(a7)
000409DC <AmiBlitz3.ab2@24260>   MOVE.b (a5)+,d0
000409E0 <AmiBlitz3.ab2@24261>         CMP.b #$20,d0
000409E4 <AmiBlitz3.ab2@24262>         BEQ 'l2
000409E6 <AmiBlitz3.ab2@24263>         MOVE.l (a7)+,a5
000409EA <AmiBlitz3.ab2@24264>         CMP.b #";",d0
000409EE <AmiBlitz3.ab2@24265>         BEQ 'n1
000409F4 <AmiBlitz3.ab2@24268>         TST.w debugmode
000409F8 <AmiBlitz3.ab2@24269>         BEQ JL_0_DEE0
000409FA <AmiBlitz3.ab2@24270>         MOVE.l a0,-(a7)
00040A00 <AmiBlitz3.ab2@24271>         MOVE.l pushat,a0
00040A06 <AmiBlitz3.ab2@24272>         CMP.l #0,a0
00040A0A <AmiBlitz3.ab2@24273>         BNE 'o1
00040A0E <AmiBlitz3.ab2@24274> BRA 'skip
00040A16 <AmiBlitz3.ab2@24277>         ADD.l #1,2(a0)
00040A1C <AmiBlitz3.ab2@24280>   CLR.w commode
00040A24 <AmiBlitz3.ab2@24281>         MOVE.b #1,stackcorrect
00040A26 <AmiBlitz3.ab2@24282>         MOVE.l (a7)+,a0
00040A2C <AmiBlitz3.ab2@24283> JMP JL_0_DEE0
00040A32 <AmiBlitz3.ab2@24286> JMP nocomerr
00040A38 <AmiBlitz3.ab2@24289>   CMP.l #$100,D2
00040A3C <AmiBlitz3.ab2@24290>    BCS.w JL_0_E084
00040A3E <AmiBlitz3.ab2@24291>   MOVEQ.l #$00,D2
00040A42 <AmiBlitz3.ab2@24294>   BSET #$E,D2
00040A46 <AmiBlitz3.ab2@24297>   BSET #$F,D2
00040A4A <AmiBlitz3.ab2@24298> BRA.w JL_0_DEE0
00040A50 <AmiBlitz3.ab2@24301>    MOVE.l destpointer,a4
00040A58 <AmiBlitz3.ab2@24302>    MOVE.l #$f22a6400,-4(a4)
00040A5E <AmiBlitz3.ab2@24303>    MOVE.w arrayoffset,d1
00040A64 <AmiBlitz3.ab2@24304> JMP writeword
00040A6A <AmiBlitz3.ab2@24307> JMP comerr
00040A70 <AmiBlitz3.ab2@24310>    TST.b fpu
00040A74 <AmiBlitz3.ab2@24311>    BEQ 'nofloat
00040A78 <AmiBlitz3.ab2@24312>    CMP.b #5,d2
00040A7C <AmiBlitz3.ab2@24313>    BNE 'nofloat
00040A82 <AmiBlitz3.ab2@24314>    CLR.w fp0var
00040A88 <AmiBlitz3.ab2@24315>    LEA regtable,a4
00040A8A <AmiBlitz3.ab2@24316>    TST.l (a4)
00040A8E <AmiBlitz3.ab2@24317>    BEQ 'noreg
00040A92 <AmiBlitz3.ab2@24318>    BTST #15,d2                                             ;regvars
00040A96 <AmiBlitz3.ab2@24319>    BNE 'noreg
00040A9A <AmiBlitz3.ab2@24320>    CMP.w 0+4(a4),d3
00040A9E <AmiBlitz3.ab2@24321>    BNE 'doreg1
00040AA4 <AmiBlitz3.ab2@24322>    MOVE.l #$f2000380,d1
00040AAA <AmiBlitz3.ab2@24323>    MOVE.w regnum,d0
00040AAE <AmiBlitz3.ab2@24324>    BNE 'noopt
00040AB4 <AmiBlitz3.ab2@24330>    MOVE.l destpointer,a4
00040ABC <AmiBlitz3.ab2@24331>    CMP.l #$f2001c80,-8(a4)
00040AC0 <AmiBlitz3.ab2@24332>    BNE 'noopt
00040AC8 <AmiBlitz3.ab2@24333>    CMP.l #$f2000422,-4(a4)
00040ACC <AmiBlitz3.ab2@24334>    BNE 'noopt
00040AD2 <AmiBlitz3.ab2@24335>    MOVE.l #$f20003a2,d1
00040ADC <AmiBlitz3.ab2@24336>    SUB.l #8,destpointer
00040ADE <AmiBlitz3.ab2@24339>    ASL.w #7,d0
00040AE0 <AmiBlitz3.ab2@24340>    OR.w d0,d1
00040AE6 <AmiBlitz3.ab2@24341>    JSR writelong
00040AE8 <AmiBlitz3.ab2@24342> RTS
00040AEC <AmiBlitz3.ab2@24345>   CMP.w 8+4(a4),d3
00040AF0 <AmiBlitz3.ab2@24346>    BNE 'doreg2
00040AF6 <AmiBlitz3.ab2@24347>    MOVE.l #$f2000300,d1
00040AFC <AmiBlitz3.ab2@24348>    MOVE.w regnum,d0
00040AFE <AmiBlitz3.ab2@24349>    ASL.w #7,d0
00040B00 <AmiBlitz3.ab2@24350>    OR.w d0,d1
00040B06 <AmiBlitz3.ab2@24351>    JSR writelong
00040B08 <AmiBlitz3.ab2@24352> RTS
00040B0C <AmiBlitz3.ab2@24355>   CMP.w 16+4(a4),d3
00040B10 <AmiBlitz3.ab2@24356>    BNE 'doreg3
00040B16 <AmiBlitz3.ab2@24357>    MOVE.l #$f2000280,d1
00040B1C <AmiBlitz3.ab2@24358>    MOVE.w regnum,d0
00040B1E <AmiBlitz3.ab2@24359>    ASL.w #7,d0
00040B20 <AmiBlitz3.ab2@24360>    OR.w d0,d1
00040B26 <AmiBlitz3.ab2@24361>    JSR  writelong
00040B28 <AmiBlitz3.ab2@24362>  RTS
00040B2C <AmiBlitz3.ab2@24365>   CMP.w 24+4(a4),d3
00040B30 <AmiBlitz3.ab2@24366>    BNE 'doreg4
00040B36 <AmiBlitz3.ab2@24367>    MOVE.l #$f2000200,d1
00040B3C <AmiBlitz3.ab2@24368>    MOVE.w regnum,d0
00040B3E <AmiBlitz3.ab2@24369>    ASL.w #7,d0
00040B40 <AmiBlitz3.ab2@24370>    OR.w d0,d1
00040B46 <AmiBlitz3.ab2@24371>    JSR writelong
00040B48 <AmiBlitz3.ab2@24372> RTS
00040B4C <AmiBlitz3.ab2@24375>   CMP.w 32+4(a4),d3
00040B50 <AmiBlitz3.ab2@24376>    BNE 'noreg
00040B56 <AmiBlitz3.ab2@24377>    MOVE.l #$f2000180,d1
00040B5C <AmiBlitz3.ab2@24378>    MOVE.w regnum,d0
00040B5E <AmiBlitz3.ab2@24379>    ASL.w #7,d0
00040B60 <AmiBlitz3.ab2@24380>    OR.w d0,d1
00040B66 <AmiBlitz3.ab2@24381>    JSR writelong
00040B68 <AmiBlitz3.ab2@24382> RTS
00040B6E <AmiBlitz3.ab2@24385>    TST.w regnum
00040B72 <AmiBlitz3.ab2@24386>    BNE 'nofp0
00040B78 <AmiBlitz3.ab2@24387>    MOVE.l destpointer ,a4
00040B80 <AmiBlitz3.ab2@24388>    CMP.l #$f2304400,-6(a4)
00040B84 <AmiBlitz3.ab2@24389>    BNE 'do
00040B8A <AmiBlitz3.ab2@24390>    CMP.w #$1990,-2(a4)
00040B8E <AmiBlitz3.ab2@24391>    BNE 'do
00040B92 <AmiBlitz3.ab2@24392>    BTST #15,d2                                             ;types ?
00040B96 <AmiBlitz3.ab2@24393>    BNE 'do
00040B9C <AmiBlitz3.ab2@24394>   MOVE.l #$2b701990,d1                                     ;var
00040BA2 <AmiBlitz3.ab2@24395>   TST.w varmode
00040BA6 <AmiBlitz3.ab2@24396>   BEQ 'glob1
00040BAA <AmiBlitz3.ab2@24397>   BCLR #25,d1
00040BAE <AmiBlitz3.ab2@24400>   MOVE.l d1,-6(a4)
00040BB2 <AmiBlitz3.ab2@24401>   MOVE.w d3,-2(a4)
00040BB8 <AmiBlitz3.ab2@24402>   CLR.w fp0var
00040BC0 <AmiBlitz3.ab2@24403>   MOVE.w #$ffff,fp0mode
00040BC2 <AmiBlitz3.ab2@24404> RTS
00040BCA <AmiBlitz3.ab2@24407>    CMP.l #$f22d4400,-6(a4)                                 ;fmove.s (a5),fp0
00040BCE <AmiBlitz3.ab2@24408>    BNE 'do3
00040BD8 <AmiBlitz3.ab2@24409>    CMP.l #newtype_double,currtype
00040BDC <AmiBlitz3.ab2@24410>    BEQ 'do4
00040BE0 <AmiBlitz3.ab2@24413>   MOVE.w #$2b6d,d1
00040BE6 <AmiBlitz3.ab2@24414>    TST.w varmode
00040BEA <AmiBlitz3.ab2@24415>    BEQ 'g2
00040BEE <AmiBlitz3.ab2@24416>     BCLR #9,d1
00040BF2 <AmiBlitz3.ab2@24419>     CMP.w #$2b6d,d1
00040BF6 <AmiBlitz3.ab2@24420>     BNE 'd1
00040BFA <AmiBlitz3.ab2@24421>     CMP.w -2(a4),d3
00040BFE <AmiBlitz3.ab2@24422>     BNE 'd1
00040C04 <AmiBlitz3.ab2@24423>     SUBQ.l #6,destpointer
00040C08 <AmiBlitz3.ab2@24424> BRA 'd12
00040C0C <AmiBlitz3.ab2@24427>     MOVE.w d1,-6(a4)                                       ;fmove.s to move.l mem,mem
00040C12 <AmiBlitz3.ab2@24428>     MOVE.w -2(a4),-4(a4)
00040C16 <AmiBlitz3.ab2@24429>     MOVE.w d3,-2(a4)
00040C1C <AmiBlitz3.ab2@24432>   CLR.w fp0var
00040C24 <AmiBlitz3.ab2@24433>     MOVE.w #$ffff,fp0mode
00040C26 <AmiBlitz3.ab2@24434> RTS
00040C2E <AmiBlitz3.ab2@24437>   CMP.l #$f22c4400,-6(a4)                                  ;fmove.s (a4)
00040C32 <AmiBlitz3.ab2@24438>    BNE 'do4
00040C36 <AmiBlitz3.ab2@24439>    MOVE.w #$2b6c,d1
00040C3C <AmiBlitz3.ab2@24440>       TST.w varmode
00040C40 <AmiBlitz3.ab2@24441>    BEQ 'g3
00040C44 <AmiBlitz3.ab2@24442>    BCLR #9,d1
00040C48 <AmiBlitz3.ab2@24445>   MOVE.w d1,-6(a4)
00040C4E <AmiBlitz3.ab2@24446>     MOVE.w -2(a4),-4(a4)
00040C52 <AmiBlitz3.ab2@24447>     MOVE.w d3,-2(a4)
00040C58 <AmiBlitz3.ab2@24448>     CLR.w fp0var
00040C60 <AmiBlitz3.ab2@24449>     MOVE.w #$ffff,fp0mode
00040C62 <AmiBlitz3.ab2@24450> RTS
00040C68 <AmiBlitz3.ab2@24453>   MOVE.w d3,fp0var
00040C72 <AmiBlitz3.ab2@24454>    MOVE.w varmode,fp0mode
00040C74 <AmiBlitz3.ab2@24455>    ADDQ.l #6,a4
00040C7A <AmiBlitz3.ab2@24456>    MOVE.l a4,fp0addr
00040C84 <AmiBlitz3.ab2@24457>    MOVE.l firstiff,fp0iff
00040C88 <AmiBlitz3.ab2@24460>   MOVEM.l d0/d4,-(a7)
00040C8A <AmiBlitz3.ab2@24461>    MOVEQ #0,d0
00040C90 <AmiBlitz3.ab2@24462>     MOVE.w regnum,d0
00040C92 <AmiBlitz3.ab2@24463>    ASL.w #7,d0                                             ;fpu store var
00040C96 <AmiBlitz3.ab2@24464>   BTST #15,d2
00040C9A <AmiBlitz3.ab2@24465>    BEQ 'var
00040C9C <AmiBlitz3.ab2@24466>    MOVE.w d1,d4
00040CA0 <AmiBlitz3.ab2@24467>    CMP.w #$24c0,d4
00040CA4 <AmiBlitz3.ab2@24468>    BNE 'nopl
00040CAA <AmiBlitz3.ab2@24469>    MOVE.l #$f21a6400,d1
00040CAC <AmiBlitz3.ab2@24470>    MOVEQ #0,d3
00040CB0 <AmiBlitz3.ab2@24471> BRA 'glob
00040CB6 <AmiBlitz3.ab2@24475>   MOVE.l #$f2126400,d1
00040CB8 <AmiBlitz3.ab2@24476>    TST.w d3                                                ;offset =0
00040CBC <AmiBlitz3.ab2@24477>    BNE 'offset
00040CC2 <AmiBlitz3.ab2@24478>    MOVE.l #$f2126400,d1
00040CC4 <AmiBlitz3.ab2@24486>    MOVEQ #0,d3
00040CC8 <AmiBlitz3.ab2@24487> BRA 'glob
00040CCE <AmiBlitz3.ab2@24490>   MOVE.l #$f22d6400,d1                                     ;var
00040CD4 <AmiBlitz3.ab2@24491>   TST.w varmode
00040CD8 <AmiBlitz3.ab2@24492>   BEQ 'glob
00040CDC <AmiBlitz3.ab2@24493>   BCLR #16,d1
00040CDE <AmiBlitz3.ab2@24494>  'glob OR.l d0,d1
00040CE8 <AmiBlitz3.ab2@24497>   CMP.l #newtype_double,currtype
00040CEC <AmiBlitz3.ab2@24498>   BNE 'dbl1
00040CF2 <AmiBlitz3.ab2@24499>   OR.l #$00001000,d1
00040CF8 <AmiBlitz3.ab2@24502>   JSR writelong
00040CFE <AmiBlitz3.ab2@24503>   CLR.l currtype
00040D02 <AmiBlitz3.ab2@24504>   MOVEM.l (a7)+,d0/d4
00040D04 <AmiBlitz3.ab2@24505>   MOVE.l d3,d1
00040D08 <AmiBlitz3.ab2@24506>   BEQ 'nooffs
00040D0E <AmiBlitz3.ab2@24507> JMP writeword
00040D10 <AmiBlitz3.ab2@24510> RTS
00040D16 <AmiBlitz3.ab2@24524>     TST.b fast                                             ;write lea->xx(a2)
00040D1A <AmiBlitz3.ab2@24525>    BEQ 'la10
00040D20 <AmiBlitz3.ab2@24529>    TST.b quickadd
00040D26 <AmiBlitz3.ab2@24531>      CLR.b quickadd
00040D2A <AmiBlitz3.ab2@24532>    CMP.w #$2480,d1
00040D2E <AmiBlitz3.ab2@24533>    BNE 'la10
00040D34 <AmiBlitz3.ab2@24534>    TST.b optiarray
00040D38 <AmiBlitz3.ab2@24535>    BNE 'la10
00040D3E <AmiBlitz3.ab2@24536>    MOVE.l destpointer,a4
00040D44 <AmiBlitz3.ab2@24537>    CMP.w #$45ea,-4(a4)
00040D48 <AmiBlitz3.ab2@24538>    BNE 'la10
00040D50 <AmiBlitz3.ab2@24539>    CMP.w #8,pushclen
00040D54 <AmiBlitz3.ab2@24540>    BEQ 'la100
00040D5C <AmiBlitz3.ab2@24541>    CMP.w #6,pushclen
00040D60 <AmiBlitz3.ab2@24542>    BNE 'la10
00040D64 <AmiBlitz3.ab2@24543>    CMP.b #3,d2
00040D68 <AmiBlitz3.ab2@24544>    BCS 'la110
00040D6E <AmiBlitz3.ab2@24546>    MOVE.w #$2540,-2(a4)
00040D74 <AmiBlitz3.ab2@24547>    MOVE.w arrayoffset,d1
00040D7A <AmiBlitz3.ab2@24548> JMP writeword
00040D80 <AmiBlitz3.ab2@24551>    CLR.b quickadd
00040D82 <AmiBlitz3.ab2@24552> RTS
00040D86 <AmiBlitz3.ab2@24555>    CMP.b #2,d2
00040D8A <AmiBlitz3.ab2@24556>    BNE 'la120
00040D90 <AmiBlitz3.ab2@24557>     MOVE.w #$3540,-2(a4)
00040D96 <AmiBlitz3.ab2@24558>    MOVE.w arrayoffset,d1
00040D9C <AmiBlitz3.ab2@24559> JMP writeword
00040DA0 <AmiBlitz3.ab2@24562>   CMP.b #1,d2
00040DA4 <AmiBlitz3.ab2@24563>    BNE.s 'la10
00040DAA <AmiBlitz3.ab2@24564>     MOVE.w #$1540,-2(a4)
00040DB0 <AmiBlitz3.ab2@24565>    MOVE.w arrayoffset,d1
00040DB6 <AmiBlitz3.ab2@24566> JMP writeword
00040DBA <AmiBlitz3.ab2@24569>    CMP.b #3,d2
00040DBE <AmiBlitz3.ab2@24570>    BCS 'la11
00040DC4 <AmiBlitz3.ab2@24571>    MOVE.w #$2540,-4(a4)
00040DC6 <AmiBlitz3.ab2@24572> RTS
00040DCA <AmiBlitz3.ab2@24575>    CMP.b #2,d2
00040DCE <AmiBlitz3.ab2@24576>    BNE 'la12
00040DD4 <AmiBlitz3.ab2@24577>     MOVE.w #$3540,-4(a4)
00040DD6 <AmiBlitz3.ab2@24578> RTS
00040DDA <AmiBlitz3.ab2@24580>  'la12 CMP.b #1,d2
00040DDE <AmiBlitz3.ab2@24581>    BNE.s 'la10
00040DE4 <AmiBlitz3.ab2@24582>     MOVE.w #$1540,-4(a4)
00040DE6 <AmiBlitz3.ab2@24583> RTS
00040DEC <AmiBlitz3.ab2@24586>   CLR.b optiarray
00040DF0 <AmiBlitz3.ab2@24587>    CMP.b #$1,D2
00040DF4 <AmiBlitz3.ab2@24588>    BEQ.w JL_0_E0AC
00040DF8 <AmiBlitz3.ab2@24589>    BSR.w varalign
00040DFC <AmiBlitz3.ab2@24590>    CMP.b #$3,D2
00040E00 <AmiBlitz3.ab2@24591>    BCC.w writevarlong
00040E06 <AmiBlitz3.ab2@24592>    TST.b fast                                              ;optiimmi
00040E0A <AmiBlitz3.ab2@24593>    BEQ 'l10b
00040E10 <AmiBlitz3.ab2@24598>    MOVE.l destpointer,a0
00040E16 <AmiBlitz3.ab2@24599>    SUB.l imm_addr,a0
00040E1C <AmiBlitz3.ab2@24600>    CMP.l #4,a0
00040E20 <AmiBlitz3.ab2@24601>    BNE 'l10
00040E26 <AmiBlitz3.ab2@24602>    CLR.l imm_addr
00040E2C <AmiBlitz3.ab2@24603>    MOVE.l destpointer,a4
00040E30 <AmiBlitz3.ab2@24604>    OR.w #$107c,d1
00040E34 <AmiBlitz3.ab2@24605>    MOVE.w d1,-4(a4)
00040E36 <AmiBlitz3.ab2@24606>     MOVE.w D3,D1
00040E3C <AmiBlitz3.ab2@24607> JMP writeword
00040E42 <AmiBlitz3.ab2@24610>   MOVE.l destpointer,a0
00040E48 <AmiBlitz3.ab2@24611>   SUB.l load_var_addr,a0
00040E4E <AmiBlitz3.ab2@24612>   CMP.l #4,a0
00040E52 <AmiBlitz3.ab2@24613>   BNE 'l10b
00040E58 <AmiBlitz3.ab2@24614>   CMP.w #$302d,-4(a4)                                      ;check 68k opcode
00040E5C <AmiBlitz3.ab2@24615>   BNE 'l10b
00040E62 <AmiBlitz3.ab2@24617>   CLR.l load_var_addr
00040E68 <AmiBlitz3.ab2@24618>   MOVE.l destpointer,a4
00040E6C <AmiBlitz3.ab2@24619>   OR.w #$102d,d1
00040E70 <AmiBlitz3.ab2@24620>   MOVE.w d1,-4(a4)
00040E72 <AmiBlitz3.ab2@24621>   MOVE.w d3,d1
00040E78 <AmiBlitz3.ab2@24622> JMP writeword
00040E7C <AmiBlitz3.ab2@24625>   ORI.w #$1000,D1                                          ;word
00040E80 <AmiBlitz3.ab2@24626> BRA.w writestorevar
00040E86 <AmiBlitz3.ab2@24630>    TST.b fast                                              ;optiimmi
00040E8A <AmiBlitz3.ab2@24631>    BEQ 'l10b
00040E90 <AmiBlitz3.ab2@24636>    MOVE.l destpointer,a0
00040E96 <AmiBlitz3.ab2@24637>    SUB.l imm_addr,a0
00040E9C <AmiBlitz3.ab2@24638>    CMP.l #4,a0
00040EA0 <AmiBlitz3.ab2@24639>    BNE 'l10
00040EA6 <AmiBlitz3.ab2@24640>    CLR.l imm_addr
00040EAC <AmiBlitz3.ab2@24641>    MOVE.l destpointer,a4
00040EB0 <AmiBlitz3.ab2@24642>    OR.w #$7c,d1
00040EB4 <AmiBlitz3.ab2@24643>    EORI #$3000,d1
00040EB8 <AmiBlitz3.ab2@24644>    MOVE.w d1,-4(a4)
00040EBA <AmiBlitz3.ab2@24645>       MOVE.w D3,D1
00040EC0 <AmiBlitz3.ab2@24646> JMP writeword
00040EC6 <AmiBlitz3.ab2@24649>   MOVE.l destpointer,a0
00040ECC <AmiBlitz3.ab2@24650>   SUB.l load_var_addr,a0
00040ED2 <AmiBlitz3.ab2@24651>   CMP.l #4,a0
00040ED6 <AmiBlitz3.ab2@24652>   BNE 'l10b
00040EDC <AmiBlitz3.ab2@24653>   CLR.l load_var_addr
00040EE2 <AmiBlitz3.ab2@24654>   MOVE.l destpointer,a4
00040EE8 <AmiBlitz3.ab2@24655>    CMP.w #$1b6d,-4(a4)
00040EEC <AmiBlitz3.ab2@24656>    BNE 'l10b
00040EF0 <AmiBlitz3.ab2@24657>    OR.w #$2d,d1
00040EF4 <AmiBlitz3.ab2@24658>    EORI #$3000,d1
00040EF8 <AmiBlitz3.ab2@24659>    MOVE.w d1,-4(a4)
00040EFA <AmiBlitz3.ab2@24660>   MOVE.w d3,d1
00040F00 <AmiBlitz3.ab2@24661> JMP writeword
00040F06 <AmiBlitz3.ab2@24664>   ADDQ.w #1,pcodd                                          ;byte
00040F0A <AmiBlitz3.ab2@24665>   EORI.w #$3000,D1
00040F10 <AmiBlitz3.ab2@24668>   JSR writeword
00040F14 <AmiBlitz3.ab2@24669>   BTST #$7,D1
00040F18 <AmiBlitz3.ab2@24670>    BNE JL_0_E0C6
00040F1A <AmiBlitz3.ab2@24671>   MOVE.w D3,D1
00040F20 <AmiBlitz3.ab2@24672> JMP writeword
00040F26 <AmiBlitz3.ab2@24675>    TST.b fast                                              ;optiimmi
00040F2A <AmiBlitz3.ab2@24676>    BEQ 'l10b
00040F30 <AmiBlitz3.ab2@24680>    MOVE.l destpointer,a0
00040F36 <AmiBlitz3.ab2@24681>    SUB.l imm_addr,a0
00040F3C <AmiBlitz3.ab2@24682>    CMP.l #6,a0
00040F40 <AmiBlitz3.ab2@24683>    BNE 'l10
00040F46 <AmiBlitz3.ab2@24684>    CLR.l imm_addr
00040F4C <AmiBlitz3.ab2@24685>    MOVE.l destpointer,a4
00040F50 <AmiBlitz3.ab2@24686>    OR.w #$7c,d1
00040F54 <AmiBlitz3.ab2@24687>    MOVE.w d1,-6(a4)
00040F56 <AmiBlitz3.ab2@24688>     MOVE.w D3,D1
00040F5C <AmiBlitz3.ab2@24689> JMP writeword
00040F62 <AmiBlitz3.ab2@24692>   MOVE.l destpointer,a0
00040F68 <AmiBlitz3.ab2@24693>   SUB.l load_var_addr,a0
00040F6E <AmiBlitz3.ab2@24694>   CMP.l #4,a0
00040F72 <AmiBlitz3.ab2@24695>   BNE 'l10b
00040F78 <AmiBlitz3.ab2@24696>   CLR.l load_var_addr
00040F7E <AmiBlitz3.ab2@24697>   MOVE.l destpointer,a4
00040F84 <AmiBlitz3.ab2@24698>   CMP.w #$245f,-2(a4)
00040F88 <AmiBlitz3.ab2@24699>   BEQ 'l10b
00040F8C <AmiBlitz3.ab2@24700>   OR.w #$28,d1
00040F90 <AmiBlitz3.ab2@24701>   OR.w d1,-4(a4)
00040F96 <AmiBlitz3.ab2@24702>   CMP.w #$2b6d,-4(a4)
00040F9A <AmiBlitz3.ab2@24703>   BNE 'd1
00040F9E <AmiBlitz3.ab2@24704>   CMP.w -2(a4),d3
00040FA2 <AmiBlitz3.ab2@24705>   BNE 'd1
00040FA8 <AmiBlitz3.ab2@24706>   SUBQ.l #4,destpointer
00040FAA <AmiBlitz3.ab2@24707> RTS
00040FAC <AmiBlitz3.ab2@24710>   MOVE.w d3,d1
00040FB2 <AmiBlitz3.ab2@24711> JMP writeword
00040FB8 <AmiBlitz3.ab2@24714>   JSR writeword
00040FBC <AmiBlitz3.ab2@24715>   BTST #$7,D1
00040FC0 <AmiBlitz3.ab2@24716>    BNE.b JL_0_E0C6
00040FC2 <AmiBlitz3.ab2@24717>   MOVE.w D3,D1
00040FC8 <AmiBlitz3.ab2@24718> JMP writeword
00040FCA <AmiBlitz3.ab2@24721> RTS
00040FCC <AmiBlitz3.ab2@24725>   MOVE.w D1,-(A7)
00040FD0 <AmiBlitz3.ab2@24726>   MOVE.w pcodd(PC),D1
00040FD2 <AmiBlitz3.ab2@24727>   LSR.w #1,D1
00040FD6 <AmiBlitz3.ab2@24728>    BCC.b JL_0_E0E2
00040FDC <AmiBlitz3.ab2@24729>   CLR.w pcodd
00040FE2 <AmiBlitz3.ab2@24730>   MOVE.w add1a2,D1
00040FE8 <AmiBlitz3.ab2@24731>    JSR writeword
00040FEA <AmiBlitz3.ab2@24734>   MOVE.w (A7)+,D1
00040FEC <AmiBlitz3.ab2@24735> RTS
00040FEE <AmiBlitz3.ab2@24739> add1a2:     Dc.b $52,$4A                                   ;ADDQ.W  #1,A2
00040FF0 <AmiBlitz3.ab2@24742> pcodd:     Ds.w 1                                          ;add 1 to this for bytes
00040FF2 <AmiBlitz3.ab2@24743> listadd:   Ds.w 1                                          ;set to 8 if it's a list
00040FF4 <AmiBlitz3.ab2@24744> listsize:  Ds.w 1
00040FFA <AmiBlitz3.ab2@24748>   ADDQ.w #1,regnum
00041002 <AmiBlitz3.ab2@24749>   MOVE.b #1,nowdeclare
00041008 <AmiBlitz3.ab2@24750>   CLR.b dimkeep
00041010 <AmiBlitz3.ab2@24751>    CMP.l #"KEEP",-1(a5)
00041014 <AmiBlitz3.ab2@24752>   BNE 'nokeep
0004101A <AmiBlitz3.ab2@24753>   CMP.b #" ",3(a5)
0004101E <AmiBlitz3.ab2@24754>   BNE 'nokeep
00041020 <AmiBlitz3.ab2@24755>   ADDQ.l #3,a5
00041024 <AmiBlitz3.ab2@24758>     CMP.b #" ",(a5)
00041028 <AmiBlitz3.ab2@24759>     BNE '1
0004102A <AmiBlitz3.ab2@24760>    ADDQ #1,a5
0004102E <AmiBlitz3.ab2@24761> BRA '2
00041034 <AmiBlitz3.ab2@24764>   MOVE.l a5,lastsourcepos
0004103C <AmiBlitz3.ab2@24765>   MOVE.b #1,dimkeep
00041040 <AmiBlitz3.ab2@24773>   MOVE.w #$FF9A,D1
00041046 <AmiBlitz3.ab2@24774>   JSR uselib
0004104C <AmiBlitz3.ab2@24777>   CLR.w listadd
00041050 <AmiBlitz3.ab2@24778>   CMP.w #-$7F4D,D0
00041054 <AmiBlitz3.ab2@24779>    BNE.w JL_0_E11E
0004105C <AmiBlitz3.ab2@24780>   MOVE.w #$0008,listadd
00041060 <AmiBlitz3.ab2@24781>   MOVE.w #$FFFA,D1
00041066 <AmiBlitz3.ab2@24782>    JSR uselib
0004106C <AmiBlitz3.ab2@24783>    JSR get1bytemain
00041072 <AmiBlitz3.ab2@24786>   CLR.w nonew
00041078 <AmiBlitz3.ab2@24787>    JSR getparameter
00041080 <AmiBlitz3.ab2@24788>   BTST #$1,flagmask+1
00041084 <AmiBlitz3.ab2@24789>    BEQ.w JUMP_syntaxerr
0004108A <AmiBlitz3.ab2@24790>    JSR JL_0_8E3C
00041090 <AmiBlitz3.ab2@24791>   MOVE.w notshared,D1
00041094 <AmiBlitz3.ab2@24792>    BNE.w JL_0_E198
0004109C <AmiBlitz3.ab2@24793>   MOVE.w $8(A3),temp1
000410A2 <AmiBlitz3.ab2@24794>   MOVE.w proceduremode,D2
000410A6 <AmiBlitz3.ab2@24795>    BNE.w JL_0_E176
000410AC <AmiBlitz3.ab2@24796>   MOVE.w globalvarpointer,-(A7)
000410B4 <AmiBlitz3.ab2@24797>   MOVE.w $4(A3),globalvarpointer
000410BA <AmiBlitz3.ab2@24798>   ADDQ.w #4,globalvarpointer
000410BE <AmiBlitz3.ab2@24799>    BSR.w write_dim_code
000410C4 <AmiBlitz3.ab2@24800>   MOVE.w (A7)+,globalvarpointer
000410C8 <AmiBlitz3.ab2@24801> BRA.w JL_0_E1BA
000410CE <AmiBlitz3.ab2@24812>   MOVE.w globalvarpointer,-(A7)
000410D4 <AmiBlitz3.ab2@24813>             MOVE.w proceduremode,-(a7)
000410DA <AmiBlitz3.ab2@24814>             CLR.w proceduremode
000410E2 <AmiBlitz3.ab2@24815>   MOVE.w $4(A3),globalvarpointer
000410E8 <AmiBlitz3.ab2@24816>   ADDQ.w #4,globalvarpointer
000410EC <AmiBlitz3.ab2@24817>    BSR.w write_dim_code
000410F2 <AmiBlitz3.ab2@24818>    MOVE.w (a7)+,proceduremode
000410F8 <AmiBlitz3.ab2@24819>   MOVE.w (A7)+,globalvarpointer
000410FC <AmiBlitz3.ab2@24820> BRA.w JL_0_E1BA
00041104 <AmiBlitz3.ab2@24823>   MOVE.w #$FFFF,temp1
00041108 <AmiBlitz3.ab2@24824>   MOVE.w listadd(PC),D1
0004110C <AmiBlitz3.ab2@24825>    BEQ.w JL_0_E1B6
00041114 <AmiBlitz3.ab2@24826>   MOVE.w #$4000,temp1
0004111A <AmiBlitz3.ab2@24827>   BSET #$0,$6(A3)
00041120 <AmiBlitz3.ab2@24830>         TST.w proceduremode
00041124 <AmiBlitz3.ab2@24831>        BNE 'l1
0004112A <AmiBlitz3.ab2@24832>        MOVE.w locvaroff,-(a7)
0004112E <AmiBlitz3.ab2@24835>   BSR.w write_dim_code
00041134 <AmiBlitz3.ab2@24836>         TST.w proceduremode
00041138 <AmiBlitz3.ab2@24837>         BNE JL_0_E1BA
0004113E <AmiBlitz3.ab2@24838>        MOVE.w (A7)+,locvaroff
00041144 <AmiBlitz3.ab2@24841>   JSR get1bytemain
00041148 <AmiBlitz3.ab2@24842>   CMP.w #$2C,D0
0004114C <AmiBlitz3.ab2@24843>    BNE.w JL_0_E1CE
00041152 <AmiBlitz3.ab2@24844>    JSR get1bytemain
00041156 <AmiBlitz3.ab2@24845> BRA.w JL_0_E0FC
00041158 <AmiBlitz3.ab2@24848> RTS
00041160 <AmiBlitz3.ab2@24851>   MOVE.w #$FFFF,nonew                                      ;#-1,nonew org source
00041166 <AmiBlitz3.ab2@24852>   MOVE.w beginarr,D1
0004116C <AmiBlitz3.ab2@24853>    JSR writeword
0004116E <AmiBlitz3.ab2@24854>   MOVEQ.l #$00,D1
00041174 <AmiBlitz3.ab2@24855>    JSR writeword
00041176 <AmiBlitz3.ab2@24856>   MOVEQ.l #$04,D1
0004117E <AmiBlitz3.ab2@24857>   BTST #$0,flagmask+1
00041182 <AmiBlitz3.ab2@24858>    BNE.w write_dim_code__pointer
00041186 <AmiBlitz3.ab2@24859>   MOVE.w $8(A2),D1
0004118A <AmiBlitz3.ab2@24862>   ADD.w listadd(PC),D1                                     ;size of one element.
00041190 <AmiBlitz3.ab2@24863>   MOVE.w D1,listsize
00041196 <AmiBlitz3.ab2@24864>    JSR writeword
0004119C <AmiBlitz3.ab2@24865>   CLR.w temp2                                              ;# dim's got
0004119E <AmiBlitz3.ab2@24866>   MOVE.l A3,-(A7)
000411A4 <AmiBlitz3.ab2@24869>   ADDQ.w #1,temp2
000411A6 <AmiBlitz3.ab2@24870>   MOVEQ.l #$03,D2                                          ;get word
000411AC <AmiBlitz3.ab2@24871>   MOVE.w notshared,-(a7)
000411B2 <AmiBlitz3.ab2@24872>    JSR eval
000411B8 <AmiBlitz3.ab2@24873>   MOVE.w (a7)+,notshared
000411BE <AmiBlitz3.ab2@24874>   TST.b debugmode
000411C2 <AmiBlitz3.ab2@24875>    BEQ.w write_dim_code__norerr0
000411C6 <AmiBlitz3.ab2@24876>   MOVE.w #$C30F,D1
000411CA <AmiBlitz3.ab2@24882>       MOVE.w #$5281,d1
000411D0 <AmiBlitz3.ab2@24883>       JSR writeword
000411D6 <AmiBlitz3.ab2@24884>       MOVE.l #$4c010800,d1                                 ;dim >65536 fix
000411DC <AmiBlitz3.ab2@24885>       JSR writelong
000411E2 <AmiBlitz3.ab2@24886>   MOVE.w proceduremode,D2
000411E6 <AmiBlitz3.ab2@24887>    BEQ.w write_dim_code__global
000411EC <AmiBlitz3.ab2@24888>   SUBQ.w #4,locvaroff
000411F6 <AmiBlitz3.ab2@24889>   MOVE.w locvaroff,putarr+2
000411FA <AmiBlitz3.ab2@24890> BRA.w write_dim_code__doit
00041200 <AmiBlitz3.ab2@24893> JMP syntaxerr
0004120A <AmiBlitz3.ab2@24896>   MOVE.w globalvarpointer,putarr+2
00041210 <AmiBlitz3.ab2@24897>   ADDQ.w #4,globalvarpointer
00041216 <AmiBlitz3.ab2@24900>   TST.b dimkeep
0004121A <AmiBlitz3.ab2@24901>            BEQ write_dim_code__doit_l1
0004121C <AmiBlitz3.ab2@24902>       MOVEQ #0,d1
00041222 <AmiBlitz3.ab2@24903>       MOVE.w putarr+2,d1
00041228 <AmiBlitz3.ab2@24904>       OR.l  #$222d0000,d1
0004122E <AmiBlitz3.ab2@24905>       MOVE.w proceduremode,D2
00041232 <AmiBlitz3.ab2@24906>       BEQ write_dim_code__doit_l2
00041238 <AmiBlitz3.ab2@24907>       TST.w notshared
0004123C <AmiBlitz3.ab2@24908>       BEQ write_dim_code__doit_l2
00041242 <AmiBlitz3.ab2@24909>       SUB.l #$00010000,d1
00041248 <AmiBlitz3.ab2@24912>   JSR writelong
0004124E <AmiBlitz3.ab2@24915>   MOVE.l putarr,D1
00041254 <AmiBlitz3.ab2@24916>       TST.w notshared
00041258 <AmiBlitz3.ab2@24917>       BNE write_dim_code__doit_l1a
0004125E <AmiBlitz3.ab2@24918>       JSR writelong
00041262 <AmiBlitz3.ab2@24919> BRA write_dim_code__doit_l4
00041268 <AmiBlitz3.ab2@24922>   JSR pokela5d
0004126C <AmiBlitz3.ab2@24925>   CMP.w #$2C,D0
00041270 <AmiBlitz3.ab2@24926>    BEQ.w write_dim_code__loop
00041274 <AmiBlitz3.ab2@24927>   CMP.w #$29,D0
00041278 <AmiBlitz3.ab2@24928>    BNE.w JUMP_syntaxerr
0004127A <AmiBlitz3.ab2@24929>   MOVEA.l (A7)+,A3
00041280 <AmiBlitz3.ab2@24930>   MOVE.w temp1,D1
00041284 <AmiBlitz3.ab2@24931>    BMI.w write_dim_code__nocare
00041288 <AmiBlitz3.ab2@24935>   BTST #$E,D1
0004128C <AmiBlitz3.ab2@24936>    BEQ.w write_dim_code__notl
00041294 <AmiBlitz3.ab2@24937>   CMPI.w #$1,temp2
00041298 <AmiBlitz3.ab2@24938>    BNE.w JUMP_redimerr
0004129C <AmiBlitz3.ab2@24939> BRA.w write_dim_code__nocare
000412A2 <AmiBlitz3.ab2@24942> JMP redimerr
000412A8 <AmiBlitz3.ab2@24945>   CMP.w temp2,D1
000412AC <AmiBlitz3.ab2@24946>    BNE.w JUMP_redimerr                                      ;range too long
000412B2 <AmiBlitz3.ab2@24949>   LEA globalvarpointer,A0
000412B8 <AmiBlitz3.ab2@24950>   MOVE.w proceduremode,D1
000412BC <AmiBlitz3.ab2@24951>   BEQ.w write_dim_code__gskip
000412C2 <AmiBlitz3.ab2@24952>   LEA locvaroff,A0
000412C8 <AmiBlitz3.ab2@24955>   MOVE.W  extraword,(A0)
000412CC <AmiBlitz3.ab2@24956>   BRA.W   write_dim_code__care
000412D4 <AmiBlitz3.ab2@24959>   MOVE.w temp2,$8(A3)                                      ;set # dim's
000412DA <AmiBlitz3.ab2@24962>   LEA doarr,A0
000412E0 <AmiBlitz3.ab2@24963>   MOVE.w $4(A3),$2(A0)
000412E8 <AmiBlitz3.ab2@24964>   MOVE.w putarr+2,$6(A0)
000412EA <AmiBlitz3.ab2@24965>   MOVE.l (A0)+,D1
000412F0 <AmiBlitz3.ab2@24966>    JSR writelong
000412F2 <AmiBlitz3.ab2@24967>   MOVE.l (A0),D1
000412F8 <AmiBlitz3.ab2@24968>    JSR writelong
000412FE <AmiBlitz3.ab2@24969>    TST.b dimkeep
00041302 <AmiBlitz3.ab2@24970>   BNE write_dim_code__care_l3
00041306 <AmiBlitz3.ab2@24973>   MOVE.w #$C400,D1
0004130A <AmiBlitz3.ab2@24974> BRA write_dim_code__care_l2
0004130E <AmiBlitz3.ab2@24977>   MOVE.w #$C405,d1
00041314 <AmiBlitz3.ab2@24980>   MOVE.w proceduremode,D2
00041318 <AmiBlitz3.ab2@24981>    BEQ.w write_dim_code__isg
0004131E <AmiBlitz3.ab2@24982>    TST.w notshared
00041322 <AmiBlitz3.ab2@24983>    BEQ write_dim_code__isg
00041324 <AmiBlitz3.ab2@24984>   ADDQ.w #1,D1
00041328 <AmiBlitz3.ab2@24987>   MOVE.w listadd(PC),D2
0004132C <AmiBlitz3.ab2@24988>    BEQ.w write_dim_code__isrg
0004132E <AmiBlitz3.ab2@24989>   MOVE.w D1,-(A7)
00041332 <AmiBlitz3.ab2@24990>   MOVE.w setles(PC),D1
00041338 <AmiBlitz3.ab2@24991>    JSR writeword
0004133C <AmiBlitz3.ab2@24992>   MOVE.w listsize(PC),D1
00041342 <AmiBlitz3.ab2@24993>    JSR writeword
00041344 <AmiBlitz3.ab2@24994>   MOVE.w (A7)+,D1
00041346 <AmiBlitz3.ab2@24995>   ADDQ.w #3,D1
0004134A <AmiBlitz3.ab2@24998> BRA.w Atokejsr
00041350 <AmiBlitz3.ab2@25005>     MOVE.l #$f23c4400,d1
00041356 <AmiBlitz3.ab2@25007>   MOVE.w regnum,d0
00041358 <AmiBlitz3.ab2@25008>   ASL.w #7,d0
0004135A <AmiBlitz3.ab2@25009>   OR.w d0,d1
00041360 <AmiBlitz3.ab2@25010>   JSR writelong
00041366 <AmiBlitz3.ab2@25016>     MOVE.l #$40490fd9,d1
0004136C <AmiBlitz3.ab2@25018>   JSR writelong
00041372 <AmiBlitz3.ab2@25019> JMP get1bytemain
00041376 <AmiBlitz3.ab2@25023> setles:   Dc.b $38,$3C,$00,$00                             ;MOVE.W  #$0000,D4
0004137A <AmiBlitz3.ab2@25030> vbr:                Ds.l 1
0004137C <AmiBlitz3.ab2@25031> cfetchmode:         Ds.w 1                               ;1=fetching a constant
00041382 <AmiBlitz3.ab2@25033> constlibs           Dc.w $FDA7,$FCDF,$FD43               ;64935,64735,64835  org source
00041386 <AmiBlitz3.ab2@25037> constpcat:          Ds.l 1
0004138A <AmiBlitz3.ab2@25038> constlibat:         Ds.l 1
0004138E <AmiBlitz3.ab2@25039> constmaxpc:         Dc.l $400
00041392 <AmiBlitz3.ab2@25041> stacksize:          Dc.l 32768                           ;stackfuck org source
00041396 <AmiBlitz3.ab2@25042> currentlabeladdr:   Dc.l labelbase                       ;lastrescon org source
0004139A <AmiBlitz3.ab2@25043> currentmacroaddr:   Dc.l macrobase                       ;lastresmac org source
0004139E <AmiBlitz3.ab2@25044> lastrestype:        Dc.l newtype_string
000413A0 <AmiBlitz3.ab2@25045> rescnt:             Ds.w 1                               ;# resident
000413A2 <AmiBlitz3.ab2@25046> state_of_residents: Ds.w 1                               ;reschg org source ;flag for if res's have changed
000413A6 <AmiBlitz3.ab2@25047> resat:              Dc.l residents_table                 ;??looks like not used anymore??
000413A8 <AmiBlitz3.ab2@25048> linedone:           Ds.w 1
000413BE <AmiBlitz3.ab2@25049> directbuffer:       Ds.w 11                              ;dirpcat  dc.w 0 org source
000413C2 <AmiBlitz3.ab2@25058>   Dc.l 0                                        ; bytetobyte
000413C6 <AmiBlitz3.ab2@25059>   Dc.l convert_byte_to_word                     ; bytetoword
000413CA <AmiBlitz3.ab2@25060>   Dc.l convert_byte_to_long                     ; bytetolong
000413CE <AmiBlitz3.ab2@25061>   Dc.l convert_byte_to_quick                    ; bytetoquick
000413D2 <AmiBlitz3.ab2@25062>   Dc.l convert_byte_to_float                    ; bytetofloat
000413D6 <AmiBlitz3.ab2@25063>   Dc.l convert_byte_to_long                     ; bytetolong
000413DA <AmiBlitz3.ab2@25064>   Dc.l error_convert_types                      ; noconerr
000413DE <AmiBlitz3.ab2@25067>   Dc.l convert_word_to_byte                     ; wordtobyte
000413E2 <AmiBlitz3.ab2@25068>   Dc.l 0                                        ; wordtoword
000413E6 <AmiBlitz3.ab2@25069>   Dc.l convert_word_to_long                     ; wordtolong
000413EA <AmiBlitz3.ab2@25070>   Dc.l convert_word_to_quick                    ; wordtoquick
000413EE <AmiBlitz3.ab2@25071>   Dc.l convert_word_to_float                    ; wordtofloat
000413F2 <AmiBlitz3.ab2@25072>   Dc.l convert_word_to_long                     ; wordtolong
000413F6 <AmiBlitz3.ab2@25073>   Dc.l error_convert_types                      ; noconerr
000413FA <AmiBlitz3.ab2@25076>   Dc.l convert_long_to_byte                     ; longtobyte
000413FE <AmiBlitz3.ab2@25077>   Dc.l convert_long_to_word                     ; longtoword
00041402 <AmiBlitz3.ab2@25078>   Dc.l 0                                        ; longtolong
00041406 <AmiBlitz3.ab2@25079>   Dc.l convert_long_to_quick                    ; longtoquick
0004140A <AmiBlitz3.ab2@25080>   Dc.l convert_long_to_float                    ; longtofloat
0004140E <AmiBlitz3.ab2@25081>   Dc.l 0                                        ; longtolong
00041412 <AmiBlitz3.ab2@25082>   Dc.l error_convert_types                      ; noconerr
00041416 <AmiBlitz3.ab2@25085>   Dc.l convert_quick_to_byte                    ; quicktobyte
0004141A <AmiBlitz3.ab2@25086>   Dc.l convert_quick_to_word                    ; quicktoword
0004141E <AmiBlitz3.ab2@25087>   Dc.l convert_quick_to_long                    ; quicktolong
00041422 <AmiBlitz3.ab2@25088>   Dc.l 0                                        ; quicktoquick
00041426 <AmiBlitz3.ab2@25089>   Dc.l convert_quick_to_float                   ; quicktofloat
0004142A <AmiBlitz3.ab2@25090>   Dc.l convert_quick_to_long                    ; quicktolong
0004142E <AmiBlitz3.ab2@25091>   Dc.l error_convert_types                      ; noconerr
00041432 <AmiBlitz3.ab2@25094>   Dc.l convert_float_to_byte                    ; floattobyte
00041436 <AmiBlitz3.ab2@25095>   Dc.l convert_float_to_word                    ; floattoword
0004143A <AmiBlitz3.ab2@25096>   Dc.l convert_float_to_long                    ; floattolong
0004143E <AmiBlitz3.ab2@25097>   Dc.l convert_float_to_quick                   ; floattoquick
00041442 <AmiBlitz3.ab2@25098>   Dc.l 0                                        ; floattofloat
00041446 <AmiBlitz3.ab2@25099>   Dc.l convert_float_to_long                    ; floattolong
0004144A <AmiBlitz3.ab2@25100>   Dc.l error_convert_types                      ; noconerr
0004144E <AmiBlitz3.ab2@25103>   Dc.l convert_long_to_byte                     ; longtobyte
00041452 <AmiBlitz3.ab2@25104>   Dc.l convert_long_to_word                     ; longtoword
00041456 <AmiBlitz3.ab2@25105>   Dc.l 0                                        ; longtolong
0004145A <AmiBlitz3.ab2@25106>   Dc.l convert_long_to_quick                    ; longtoquick
0004145E <AmiBlitz3.ab2@25107>   Dc.l convert_long_to_float                    ; longtofloat
00041462 <AmiBlitz3.ab2@25108>   Dc.l 0                                        ; longtolong
00041466 <AmiBlitz3.ab2@25109>   Dc.l error_convert_types                      ; noconerr
0004146A <AmiBlitz3.ab2@25112>   Dc.l error_convert_types                      ; noconerr
0004146E <AmiBlitz3.ab2@25113>   Dc.l error_convert_types                      ; noconerr
00041472 <AmiBlitz3.ab2@25114>   Dc.l string_to_long                           ; stringtolong
00041476 <AmiBlitz3.ab2@25115>   Dc.l error_convert_types                      ; noconerr
0004147A <AmiBlitz3.ab2@25116>   Dc.l error_convert_types                      ; noconerr
0004147E <AmiBlitz3.ab2@25117>   Dc.l string_to_long                           ; stringtolong
00041482 <AmiBlitz3.ab2@25118>   Ds.l 1
00041484 <AmiBlitz3.ab2@25124>   Dc.b $00,$2B                                  ;+ ; add
00041488 <AmiBlitz3.ab2@25125>   Dc.l do_plus_byte                             ;doplusb
0004148C <AmiBlitz3.ab2@25126>   Dc.l do_plus_word                             ;doplusw
00041490 <AmiBlitz3.ab2@25127>   Dc.l do_plus_long                             ;doplusl
00041494 <AmiBlitz3.ab2@25128>   Dc.l do_plus_long                             ;doplusl
00041498 <AmiBlitz3.ab2@25129>   Dc.l do_plus_float                            ;doplusf
0004149C <AmiBlitz3.ab2@25130>   Ds.l 1
000414A0 <AmiBlitz3.ab2@25131>   Dc.l add_strings                              ;addstrings
000414A2 <AmiBlitz3.ab2@25132>   Dc.b $0B,$B8
000414A4 <AmiBlitz3.ab2@25134>   Dc.b $00,$2D                                  ;- ; sub
000414A8 <AmiBlitz3.ab2@25135>   Dc.l do_minus_byte                            ;dominusb
000414AC <AmiBlitz3.ab2@25136>   Dc.l do_minus_word                            ;dominusw
000414B0 <AmiBlitz3.ab2@25137>   Dc.l do_minus_long                            ;dominusl
000414B4 <AmiBlitz3.ab2@25138>   Dc.l do_minus_long                            ;dominusl
000414B8 <AmiBlitz3.ab2@25139>   Dc.l do_minus_float                           ;dominusf
000414C0 <AmiBlitz3.ab2@25140>   Ds.l 2
000414C2 <AmiBlitz3.ab2@25141>   Dc.b $0B,$B8
000414C4 <AmiBlitz3.ab2@25143>   Dc.b $00,$2A                                  ;* ; mul
000414C8 <AmiBlitz3.ab2@25144>   Dc.l do_times_byte                            ;dotimesb
000414CC <AmiBlitz3.ab2@25145>   Dc.l do_times_word                            ;dotimesw
000414D0 <AmiBlitz3.ab2@25146>   Dc.l do_times_long                            ;dotimesl
000414D4 <AmiBlitz3.ab2@25147>   Dc.l do_times_quick                           ;dotimesq
000414D8 <AmiBlitz3.ab2@25148>   Dc.l do_times_float                           ;dotimesf
000414E0 <AmiBlitz3.ab2@25149>   Ds.l 2
000414E2 <AmiBlitz3.ab2@25150>   Dc.b $0F,$A0
000414E4 <AmiBlitz3.ab2@25152>   Dc.b $00,$2F                                  ;/ ; div
000414E8 <AmiBlitz3.ab2@25153>   Dc.l do_Div_byte                              ;dodivb
000414EC <AmiBlitz3.ab2@25154>   Dc.l do_Div_word                              ;dodivb
000414F0 <AmiBlitz3.ab2@25155>   Dc.l do_Div_long                              ;dodivl
000414F4 <AmiBlitz3.ab2@25156>   Dc.l do_Div_quick                             ;dodivq
000414F8 <AmiBlitz3.ab2@25157>   Dc.l do_Div_float                             ;dodivf
00041500 <AmiBlitz3.ab2@25158>   Ds.l 2
00041502 <AmiBlitz3.ab2@25159>   Dc.b $0F,$A0
00041504 <AmiBlitz3.ab2@25161>   Dc.b $00,$26                                  ;& ; & int
00041508 <AmiBlitz3.ab2@25162>   Dc.l do_AND_byte                              ;doandb
0004150C <AmiBlitz3.ab2@25163>   Dc.l do_AND_word                              ;doandw
00041510 <AmiBlitz3.ab2@25164>   Dc.l do_AND_long                              ;doandl
00041514 <AmiBlitz3.ab2@25165>   Dc.l do_AND_long                              ;doandl
00041520 <AmiBlitz3.ab2@25166>   Ds.l 3
00041522 <AmiBlitz3.ab2@25167>   Dc.b $13,$88
00041524 <AmiBlitz3.ab2@25169>   Dc.b $00,$7C                                  ;| ;or int ;
00041528 <AmiBlitz3.ab2@25170>   Dc.l do_OR_byte                               ;doorb
0004152C <AmiBlitz3.ab2@25171>   Dc.l do_OR_word                               ;doorw
00041530 <AmiBlitz3.ab2@25172>   Dc.l do_OR_long                               ;doorl
00041534 <AmiBlitz3.ab2@25173>   Dc.l do_OR_long                               ;doorl
00041540 <AmiBlitz3.ab2@25174>   Ds.l 3
00041542 <AmiBlitz3.ab2@25175>   Dc.b $13,$88
00041544 <AmiBlitz3.ab2@25177>   Dc.b $80,$42                                  ; AND int  ;(opand-opabcd)/$1c+$8000+fnum
00041548 <AmiBlitz3.ab2@25178>   Dc.l do_AND_byte                              ;doandb
0004154C <AmiBlitz3.ab2@25179>   Dc.l do_AND_word                              ;doandw
00041550 <AmiBlitz3.ab2@25180>   Dc.l do_AND_long                              ;doandl
00041554 <AmiBlitz3.ab2@25181>   Dc.l do_AND_long                              ;doandl
00041560 <AmiBlitz3.ab2@25182>   Ds.l 3
00041562 <AmiBlitz3.ab2@25183>   Dc.b $03,$E8
00041564 <AmiBlitz3.ab2@25185>   Dc.b $80,$8A                                  ; OR int   ;(opor-opabcd)/$1c+$8000+fnum
00041568 <AmiBlitz3.ab2@25186>   Dc.l do_OR_byte                               ;doorb
0004156C <AmiBlitz3.ab2@25187>   Dc.l do_OR_word                               ;doorw
00041570 <AmiBlitz3.ab2@25188>   Dc.l do_OR_long                               ;doorl
00041574 <AmiBlitz3.ab2@25189>   Dc.l do_OR_long                               ;doorl
00041580 <AmiBlitz3.ab2@25190>   Ds.l 3
00041582 <AmiBlitz3.ab2@25191>   Dc.b $03,$E8
00041584 <AmiBlitz3.ab2@25193>   Dc.b $80,$73                                  ; EOR int  ;(opeor-opabcd)/$1c+$8000+fnum
00041588 <AmiBlitz3.ab2@25194>   Dc.l do_EOR_byte                              ;doeorb
0004158C <AmiBlitz3.ab2@25195>   Dc.l do_EOR_word                              ;doeorw
00041590 <AmiBlitz3.ab2@25196>   Dc.l do_EOR_long                              ;doeorl
00041594 <AmiBlitz3.ab2@25197>   Dc.l do_EOR_long                              ;doeorl
000415A0 <AmiBlitz3.ab2@25198>   Ds.l 3
000415A2 <AmiBlitz3.ab2@25199>   Dc.b $03,$E8
000415A4 <AmiBlitz3.ab2@25201>   Dc.b $80,$7C                                  ; LSL int  ;(oplsl-opabcd)/$1c+$8000+fnum
000415A8 <AmiBlitz3.ab2@25202>   Dc.l do_LSL                                   ;dolslb
000415AC <AmiBlitz3.ab2@25203>   Dc.l do_LSL                                   ;dolslw
000415B0 <AmiBlitz3.ab2@25204>   Dc.l do_LSL                                   ;dolsll
000415B4 <AmiBlitz3.ab2@25205>   Dc.l do_LSL                                   ;dolsll
000415C0 <AmiBlitz3.ab2@25206>   Ds.l 3
000415C2 <AmiBlitz3.ab2@25207>   Dc.b $17,$70
000415C4 <AmiBlitz3.ab2@25209>   Dc.b $80,$44                                  ; ASL int  ;(opasl-opabcd)/$1c+$8000+fnum
000415C8 <AmiBlitz3.ab2@25210>   Dc.l do_LSL                                   ;dolslb
000415CC <AmiBlitz3.ab2@25211>   Dc.l do_LSL                                   ;dolslw
000415D0 <AmiBlitz3.ab2@25212>   Dc.l do_LSL                                   ;dolsll
000415D4 <AmiBlitz3.ab2@25213>   Dc.l do_LSL                                   ;dolsll
000415E0 <AmiBlitz3.ab2@25214>   Ds.l 3
000415E2 <AmiBlitz3.ab2@25215>   Dc.b $17,$70
000415E4 <AmiBlitz3.ab2@25217>   Dc.b $80,$7D                                  ; LSR int  ;(oplsr-opabcd)/$1c+$8000+fnum
000415E8 <AmiBlitz3.ab2@25218>   Dc.l do_LSR                                   ;dolsrb
000415EC <AmiBlitz3.ab2@25219>   Dc.l do_LSR                                   ;dolsrw
000415F0 <AmiBlitz3.ab2@25220>   Dc.l do_LSR                                   ;dolsrl
000415F4 <AmiBlitz3.ab2@25221>   Dc.l do_LSR                                   ;dolsrl
00041600 <AmiBlitz3.ab2@25222>   Ds.l 3
00041602 <AmiBlitz3.ab2@25223>   Dc.b $17,$70
00041604 <AmiBlitz3.ab2@25225>   Dc.b $80,$45                                  ; ASR int  ;(opasr-opabcd)/$1c+$8000+fnum
00041608 <AmiBlitz3.ab2@25226>   Dc.l do_ASR                                   ;doasrb
0004160C <AmiBlitz3.ab2@25227>   Dc.l do_ASR                                   ;doasrw
00041610 <AmiBlitz3.ab2@25228>   Dc.l do_ASR                                   ;doasrl
00041614 <AmiBlitz3.ab2@25229>   Dc.l do_ASR                                   ;doasrl
00041620 <AmiBlitz3.ab2@25230>   Ds.l 3
00041622 <AmiBlitz3.ab2@25231>   Dc.b $17,$70
00041624 <AmiBlitz3.ab2@25233>   Dc.b $80,$B9                                  ;mod       ;$8006+tnum
00041628 <AmiBlitz3.ab2@25234>   Dc.l do_mod_byte                              ;domodb
0004162C <AmiBlitz3.ab2@25235>   Dc.l do_mod_word                              ;domodw
00041630 <AmiBlitz3.ab2@25236>   Dc.l do_mod_long                              ;domodl
00041634 <AmiBlitz3.ab2@25237>   Dc.l do_mod_quick                             ;domodq
00041638 <AmiBlitz3.ab2@25238>   Dc.l do_mod_float                             ;domodf
00041640 <AmiBlitz3.ab2@25239>   Ds.l 2
00041642 <AmiBlitz3.ab2@25240>   Dc.b $13,$88
00041644 <AmiBlitz3.ab2@25243>   Dc.b $00,$5E                                  ;^
00041648 <AmiBlitz3.ab2@25244>   Dc.l do_pow                                   ;dopow
0004164C <AmiBlitz3.ab2@25245>   Dc.l do_pow                                   ;dopow
00041650 <AmiBlitz3.ab2@25246>   Dc.l do_pow                                   ;dopow
00041654 <AmiBlitz3.ab2@25247>   Dc.l do_pow                                   ;dopow
00041658 <AmiBlitz3.ab2@25248>   Dc.l do_pow                                   ;dopow
00041660 <AmiBlitz3.ab2@25249>   Ds.l 2
00041662 <AmiBlitz3.ab2@25250>   Dc.b $1B,$58                                  ;7000
00041664 <AmiBlitz3.ab2@25253>   Dc.b $00,$3D                                  ;=
00041668 <AmiBlitz3.ab2@25254>   Dc.l do_equal_byte                            ;doeqb
0004166C <AmiBlitz3.ab2@25255>   Dc.l do_equal_word                            ;doeqw
00041670 <AmiBlitz3.ab2@25256>   Dc.l do_equal_long                            ;doeql
00041674 <AmiBlitz3.ab2@25257>   Dc.l do_equal_long                            ;doeql
00041678 <AmiBlitz3.ab2@25258>   Dc.l do_equal_float                           ;doeqf
0004167C <AmiBlitz3.ab2@25259>   Dc.l do_equal_long                            ;doeql
00041680 <AmiBlitz3.ab2@25260>   Dc.l do_equal_string                          ;doeqs
00041682 <AmiBlitz3.ab2@25261>   Dc.b $07,$D0                                  ;2000
00041684 <AmiBlitz3.ab2@25264>   Dc.b $3C,$3E                                  ;<>
00041688 <AmiBlitz3.ab2@25265>   Dc.l do_not_equal_byte                        ;doneb
0004168C <AmiBlitz3.ab2@25266>   Dc.l do_not_equal_word                        ;donew
00041690 <AmiBlitz3.ab2@25267>   Dc.l do_not_equal_long                        ;donel
00041694 <AmiBlitz3.ab2@25268>   Dc.l do_not_equal_long                        ;donel
00041698 <AmiBlitz3.ab2@25269>   Dc.l do_not_equal_float                       ;donef
0004169C <AmiBlitz3.ab2@25270>   Dc.l do_not_equal_long                        ;donel
000416A0 <AmiBlitz3.ab2@25271>   Dc.l do_not_equal_string                      ;dones
000416A2 <AmiBlitz3.ab2@25272>   Dc.b $07,$D0                                  ;2000
000416A4 <AmiBlitz3.ab2@25275>   Dc.b $00,$3C                                  ;<
000416A8 <AmiBlitz3.ab2@25276>   Dc.l do_littler_byte                          ;doltb
000416AC <AmiBlitz3.ab2@25277>   Dc.l do_littler_word                          ;doltw
000416B0 <AmiBlitz3.ab2@25278>   Dc.l do_littler_long                          ;doltl
000416B4 <AmiBlitz3.ab2@25279>   Dc.l do_littler_long                          ;doltl
000416B8 <AmiBlitz3.ab2@25280>   Dc.l do_littler_float                         ;doltf
000416BC <AmiBlitz3.ab2@25281>   Dc.l do_littler_long                          ;doltl
000416C0 <AmiBlitz3.ab2@25282>   Dc.l do_littler_string                        ;dolts
000416C2 <AmiBlitz3.ab2@25283>   Dc.b $07,$D0                                  ;2000
000416C4 <AmiBlitz3.ab2@25286>   Dc.b $3C,$3D                                  ;<=
000416C8 <AmiBlitz3.ab2@25287>   Dc.l do_littler_equal_byte                    ;doleb
000416CC <AmiBlitz3.ab2@25288>   Dc.l do_littler_equal_word                    ;doleb
000416D0 <AmiBlitz3.ab2@25289>   Dc.l do_littler_equal_long                    ;dolel
000416D4 <AmiBlitz3.ab2@25290>   Dc.l do_littler_equal_long                    ;dolel
000416D8 <AmiBlitz3.ab2@25291>   Dc.l do_littler_equal_float                   ;dolef
000416DC <AmiBlitz3.ab2@25292>   Dc.l do_littler_equal_long                    ;dolel
000416E0 <AmiBlitz3.ab2@25293>   Dc.l do_littler_equal_string                  ;doles
000416E2 <AmiBlitz3.ab2@25294>   Dc.b $07,$D0                                  ;2000
000416E4 <AmiBlitz3.ab2@25297>   Dc.b $00,$3E                                  ;>
000416E8 <AmiBlitz3.ab2@25298>   Dc.l do_greater_byte                          ;dogtb
000416EC <AmiBlitz3.ab2@25299>   Dc.l do_greater_word                          ;dogtw
000416F0 <AmiBlitz3.ab2@25300>   Dc.l do_greater_long                          ;dogtl
000416F4 <AmiBlitz3.ab2@25301>   Dc.l do_greater_long                          ;dogtl
000416F8 <AmiBlitz3.ab2@25302>   Dc.l do_greater_float                         ;dogtf
000416FC <AmiBlitz3.ab2@25303>   Dc.l do_greater_long                          ;dogtl
00041700 <AmiBlitz3.ab2@25304>   Dc.l do_greater_string                        ;dogts
00041702 <AmiBlitz3.ab2@25305>   Dc.b $07,$D0                                  ;2000
00041704 <AmiBlitz3.ab2@25308>   Dc.b $3E,$3D                                  ;>=
00041708 <AmiBlitz3.ab2@25309>   Dc.l do_greater_equal_byte                    ;dogeb
0004170C <AmiBlitz3.ab2@25310>   Dc.l do_greater_equal_word                    ;dogew
00041710 <AmiBlitz3.ab2@25311>   Dc.l do_greater_equal_long                    ;dogel
00041714 <AmiBlitz3.ab2@25312>   Dc.l do_greater_equal_long                    ;dogel
00041718 <AmiBlitz3.ab2@25313>   Dc.l do_greater_equal_float                   ;dogef
0004171C <AmiBlitz3.ab2@25314>   Dc.l do_greater_equal_long                    ;dogel
00041720 <AmiBlitz3.ab2@25315>   Dc.l do_greater_equal_string                  ;doges
00041722 <AmiBlitz3.ab2@25316>   Dc.b $07,$D0                                  ;2000
00041724 <AmiBlitz3.ab2@25318>   Dc.b $80,$CD                                  ;$8000+26+tnum
00041728 <AmiBlitz3.ab2@25319>   Dc.l _BitTst
0004172C <AmiBlitz3.ab2@25320>   Dc.l _BitTst
00041730 <AmiBlitz3.ab2@25321>   Dc.l _BitTst
00041734 <AmiBlitz3.ab2@25322>   Dc.l _BitTst
00041740 <AmiBlitz3.ab2@25323>   Ds.l 3
00041742 <AmiBlitz3.ab2@25324>   Dc.b $1F,$40                                  ;8000
00041744 <AmiBlitz3.ab2@25326>   Dc.b $80,$CE                                  ;$8000+27+tnum
00041748 <AmiBlitz3.ab2@25327>   Dc.l _BitSet
0004174C <AmiBlitz3.ab2@25328>   Dc.l _BitSet
00041750 <AmiBlitz3.ab2@25329>   Dc.l _BitSet
00041754 <AmiBlitz3.ab2@25330>   Dc.l _BitSet
00041760 <AmiBlitz3.ab2@25331>   Ds.l 3
00041762 <AmiBlitz3.ab2@25332>   Dc.b $1F,$40                                  ;8000
00041764 <AmiBlitz3.ab2@25334>   Dc.b $80,$CF                                  ;$8000+28+tnum
00041768 <AmiBlitz3.ab2@25335>   Dc.l _BitClr
0004176C <AmiBlitz3.ab2@25336>   Dc.l _BitClr
00041770 <AmiBlitz3.ab2@25337>   Dc.l _BitClr
00041774 <AmiBlitz3.ab2@25338>   Dc.l _BitClr
00041780 <AmiBlitz3.ab2@25339>   Ds.l 3
00041782 <AmiBlitz3.ab2@25340>   Dc.b $1F,$40                                  ;8000
00041784 <AmiBlitz3.ab2@25342>   Dc.b $80,$D0                                  ;$8000+29+tnum
00041788 <AmiBlitz3.ab2@25343>   Dc.l _BitChg
0004178C <AmiBlitz3.ab2@25344>   Dc.l _BitChg
00041790 <AmiBlitz3.ab2@25345>   Dc.l _BitChg
00041794 <AmiBlitz3.ab2@25346>   Dc.l _BitChg
000417A0 <AmiBlitz3.ab2@25347>   Ds.l 3
000417A2 <AmiBlitz3.ab2@25348>   Dc.b $1F,$40                                  ;8000
000417A4 <AmiBlitz3.ab2@25350>   Dc.b $00,$00
000417A8 <AmiBlitz3.ab2@25355> modetable:   Dc.l typemode
000417AC <AmiBlitz3.ab2@25358> newtypebase: Dc.l newtype_byte
000417B4 <AmiBlitz3.ab2@25361>   Dc.l newtype_word,$01                                    
000417B6 <AmiBlitz3.ab2@25362>   Dc.w $0001
000417BA <AmiBlitz3.ab2@25363>   Dc.b 13,"b",0,0
000417C2 <AmiBlitz3.ab2@25366>   Dc.l newtype_long,$02
000417C4 <AmiBlitz3.ab2@25367>   Dc.w $0002
000417C8 <AmiBlitz3.ab2@25368>   Dc.b 13,"w",0,0
000417D0 <AmiBlitz3.ab2@25371>   Dc.l newtype_quick,$03                                   
000417D2 <AmiBlitz3.ab2@25372>   Dc.w $0004
000417D6 <AmiBlitz3.ab2@25373>   Dc.b 13,"l",0,0
000417DE <AmiBlitz3.ab2@25376>   Dc.l newtype_float,$04                                   
000417E0 <AmiBlitz3.ab2@25377>   Dc.w $0004
000417E4 <AmiBlitz3.ab2@25378>   Dc.b 13,"q",0,0
000417EC <AmiBlitz3.ab2@25382>   Dc.l newtype_double,$05                                  ;make problems on old residents
000417EE <AmiBlitz3.ab2@25383>   Dc.w $0004
000417F2 <AmiBlitz3.ab2@25384>   Dc.b 13,"f",0,0
000417FA <AmiBlitz3.ab2@25387>   Dc.l newtype_double,$06
000417FC <AmiBlitz3.ab2@25388>   Dc.w $0004
00041800 <AmiBlitz3.ab2@25389>   Dc.b 13,"a",0,0
00041808 <AmiBlitz3.ab2@25392>   Dc.l newtype_string,$05                                  ;?? has to by $06 becous is number 6 not 5
0004180A <AmiBlitz3.ab2@25393>   Dc.w $0008
0004180E <AmiBlitz3.ab2@25394>   Dc.b 13,"d",0,0
00041816 <AmiBlitz3.ab2@25398>   Dc.l $0000000,$07                                        ;stringtype
00041818 <AmiBlitz3.ab2@25399>   Dc.w $0004
0004181C <AmiBlitz3.ab2@25400>   Dc.b 13,"s",0,0
00041824 <AmiBlitz3.ab2@25403>   Dc.l $00,$00
00041826 <AmiBlitz3.ab2@25404>   Dc.w $0000
0004182A <AmiBlitz3.ab2@25405>   Dc.b $01,$00,$00,$00
0004188A <AmiBlitz3.ab2@25408> incdir:               Ds.l 24                              ;dcb.b   96,0    org source
0004188C <AmiBlitz3.ab2@25412> dirmode:              Ds.w 1                               ;shows if directmode is on
00041890 <AmiBlitz3.ab2@25414>                       Ds.l 1                               ;int org source ;intuition!
00041892 <AmiBlitz3.ab2@25415> maxobject_pos:        Ds.w 1                               ;maxat org source ;max at
00041896 <AmiBlitz3.ab2@25416> maxsat:               Ds.l 1                               ;data1 info pos
00041898 <AmiBlitz3.ab2@25417> number_of_objects:    Ds.w 1                               ;nummaxs org source ;number of maximums
0004189A <AmiBlitz3.ab2@25419> maxsused:             Ds.w 1                               ;maximums used in prog
0004189C <AmiBlitz3.ab2@25423> dark:                 Ds.w 1                               ;dark compile?
0004189E <AmiBlitz3.ab2@25424> qlab:                 Ds.w 1                               ;quick lab allocate
000418A2 <AmiBlitz3.ab2@25425> defaulttype:          Dc.l newtype_quick                   ;dc.l quicktype org source
000418A4 <AmiBlitz3.ab2@25430> anyerrs:              Dc.w -1                              ;Any Errors in compile ?
000418A6 <AmiBlitz3.ab2@25431> debugversion:         Ds.w 1                               ;makeexec org source ;make an executable file!
000418AA <AmiBlitz3.ab2@25432> noinits:              Ds.l 1                               ;flag for if we have any init routines!
000418AE <AmiBlitz3.ab2@25434> letstart:             Ds.l 1
000418B0 <AmiBlitz3.ab2@25435> dontwrite:            Ds.w 1                               ;nomemleft org source
00041930 <AmiBlitz3.ab2@25436> lastgloballabel:      Ds.l 32                              ;lastbiglab ds.b 128 org source
00041934 <AmiBlitz3.ab2@25438> locdatast:            Ds.l 1
00041938 <AmiBlitz3.ab2@25439> firstpend:            Ds.l 1
0004193C <AmiBlitz3.ab2@25443> data2at:              Ds.l 1
00041940 <AmiBlitz3.ab2@25444> data2:                Ds.l 1
00041944 <AmiBlitz3.ab2@25445> data1start:           Ds.l 1                               ;data1at org source
00041948 <AmiBlitz3.ab2@25446> data1:                Ds.l 1                               ;pc for initialized data!
0004194C <AmiBlitz3.ab2@25447> destbufferstart:      Ds.l 1                               ;pcat org source
00041950 <AmiBlitz3.ab2@25451> destbufferend:        Ds.l 1                               ;libat org source
00041954 <AmiBlitz3.ab2@25452> libend:               Ds.l 1                               ;lib org source
00041958 <AmiBlitz3.ab2@25453> allat:                Ds.l 1                               ;highest allocmemd location for code
00041962 <AmiBlitz3.ab2@25454> dummyasm:             Dc.w 0,0,0,0,0
00041966 <AmiBlitz3.ab2@25455>                       Dc.l 0
00041968 <AmiBlitz3.ab2@25456>                       Dc.w 0
0004196C <AmiBlitz3.ab2@25460> buff1:                Ds.l 1                               ;buffer for text get
00041970 <AmiBlitz3.ab2@25461> buff2:                Ds.l 1                               ;ditto for dest
00041972 <AmiBlitz3.ab2@25462> constmode:            Ds.w 1                               ;0 for norm, <>0 for assembler
00041974 <AmiBlitz3.ab2@25463> asmtype:              Ds.w 1                               ;0=contains no prog reference
00041976 <AmiBlitz3.ab2@25464> extraword:            Ds.w 1                               ;the extension word for assembler
00041978 <AmiBlitz3.ab2@25465> extraword2:           Ds.w 1                               ;ditto
0004197A <AmiBlitz3.ab2@25466> asmsize:              Ds.w 1
0004197E <AmiBlitz3.ab2@25467> asmbuff:              Ds.l 1
00041980 <AmiBlitz3.ab2@25468> asmlen:               Ds.w 1                               ;first (src) text len
00041982 <AmiBlitz3.ab2@25469> asmlen2:              Ds.w 1                               ;second (dest)
00041986 <AmiBlitz3.ab2@25470> templabel:            Ds.l 1                               ;linked list of expressions to resolve
00041988 <AmiBlitz3.ab2@25473> macnum:               Ds.w 1
0004198C <AmiBlitz3.ab2@25475>                       Dc.l 0                               ;address of next 0 in include fil
00041990 <AmiBlitz3.ab2@25476> titleat:              Ds.l 1                               ;5 longs for compile streaks
0004199A <AmiBlitz3.ab2@25477> progress_per_line:    Ds.w 5                               ;titleadd ds 5 org source ;5 adds for compile streaks
0004199C <AmiBlitz3.ab2@25478> connest:              Ds.w 1                               ;conditional nest level
000419A0 <AmiBlitz3.ab2@25479> firstconst:           Ds.l 1                               ;first constant (#a)
000419A2 <AmiBlitz3.ab2@25480> numarg:               Ds.w 1                               ;number of macro arguements
000419A6 <AmiBlitz3.ab2@25481> myoline:              Ds.l 1                               ;macro done yet?
000419AA <AmiBlitz3.ab2@25482> myline:               Ds.l 1                               ;pointer to some memory to create
000419AE <AmiBlitz3.ab2@25485>                       Ds.l 1
000419EE <AmiBlitz3.ab2@25486> concomstack:          Ds.l 16                              ;32 deep conditional compilation
000419F2 <AmiBlitz3.ab2@25487> concomsp:             Dc.l concomstack                     ;stack pointer
000419F4 <AmiBlitz3.ab2@25488> oldqflag:             Ds.w 1
000419F8 <AmiBlitz3.ab2@25491>                       Ds.l 1
000419FA <AmiBlitz3.ab2@25493>                       Ds.w 1
000419FE <AmiBlitz3.ab2@25494> firstfor:             Ds.l 1                               ;first for
00041A00 <AmiBlitz3.ab2@25495> stackpar:             Ds.w 1                               ;pushflag org source ;1 par to stack 0 normal
00041A02 <AmiBlitz3.ab2@25496> sbgot:                Ds.w 1                               ;flag for string got 2
00041A04 <AmiBlitz3.ab2@25497> convsize:             Ds.w 1                               ;usertype org source
00041A06 <AmiBlitz3.ab2@25498> userp:                Ds.w 1
00041A0A <AmiBlitz3.ab2@25503> ptr_userlibs_list:    Ds.l 1                               ;libslist org source
00041A0C <AmiBlitz3.ab2@25504> a2offset:             Ds.w 1                               ;stackuse org source ;stack used when gathering lib parameters
00041A0E <AmiBlitz3.ab2@25505> numreps:              Ds.w 1                               ;number of repeats in a repeatable
00041A12 <AmiBlitz3.ab2@25507> locloc:               Ds.l 1
00041A14 <AmiBlitz3.ab2@25508> locchar:              Ds.w 1
00041A94 <AmiBlitz3.ab2@25509> stbuff:               Ds.l 32                              ;was 8    ;six string varoffs
00041A96 <AmiBlitz3.ab2@25510> commode:              Ds.w 1                               ;in comma mode...
00041A9A <AmiBlitz3.ab2@25511> lastoffset_org:       Ds.l 1                               ;lastoffset org source ;last offset in calcvar!
00041A9E <AmiBlitz3.ab2@25512> linenumat:            Dc.l $FFFFFFFF                       ;linecounter ;dc -1 org source ;line being processed
00041AA2 <AmiBlitz3.ab2@25513> compilelinecounter:   Dc.l $FFFFFFFF                       ;menuret dc -1 org source ;menu return code
00041AA4 <AmiBlitz3.ab2@25515>                       Ds.w 1                               ;opt reset offset
00041BA4 <AmiBlitz3.ab2@25517>                       Ds.l 64                              ;Ds.b vcodelen org source ;code used to generate
00041CA4 <AmiBlitz3.ab2@25519>                       Ds.l 64                              ;Ds.b vcodelen org source ;above for let.....
00041CA6 <AmiBlitz3.ab2@25520> varcodelen:           Ds.w 1                               ;and length
00041CA8 <AmiBlitz3.ab2@25522>                       Ds.w 1
00041CAE <AmiBlitz3.ab2@25523> oldvcodelen:          Ds.w 3                               ;old varcodelen
00041CB0 <AmiBlitz3.ab2@25526> Even4
00041CB4 <AmiBlitz3.ab2@25527> tempvm:               Ds.l 1                               ;memlib org source ;address of memory library
00041CB6 <AmiBlitz3.ab2@25528> memlibstat:           Ds.w 1                               ;status of memory library during
00041CB8 <AmiBlitz3.ab2@25531>                       Dc.w 0
00041CBA <AmiBlitz3.ab2@25533>                       Dc.w 0
00041CBC <AmiBlitz3.ab2@25535> varmode:              Ds.w 1                               ;0 a5 pointer to global
00041CC0 <AmiBlitz3.ab2@25537> currentfunction:      Ds.l 1                               ;thisproc org source
00041CC4 <AmiBlitz3.ab2@25538> firstproc:            Ds.l 1                               ;firstproc org source ;this procedure being 'done'
00041CC6 <AmiBlitz3.ab2@25539> 
00041CC8 <AmiBlitz3.ab2@25541> skipcode:             Ds.w 1                               ;nocompile ;comflag org source ;0 if no compile
00041CCC <AmiBlitz3.ab2@25542> passstack:            Ds.l 1
00041CD0 <AmiBlitz3.ab2@25543> zero:                 Ds.l 1                               ;ZERO!
00041CD2 <AmiBlitz3.ab2@25544> ininclude:            Ds.w 1                               ;numincs org source ;number of include files
00041CD6 <AmiBlitz3.ab2@25546> xinclude_base:        Ds.l 1                               ;firstxinc org source ;first exclusive include.
00041CDA <AmiBlitz3.ab2@25547> constantbase:         Ds.l 1                               ;firstinc org source ;first include
00041CDC <AmiBlitz3.ab2@25548> lasta6:               Dc.w $FFFF                           ;-1 org source
00041CDE <AmiBlitz3.ab2@25549> instringon:           Ds.w 1                               ;quoteflag org source
00041CE2 <AmiBlitz3.ab2@25550> ptr_macrobuffer_begin:Ds.l 1                               ;macrobuff org source ;pointer to macro collection buffer ;begin
00041CE6 <AmiBlitz3.ab2@25551> ptr_macrobuffer_end:  Ds.l 1                               ;macrobufff org source ;end of above ;end of
00041CEA <AmiBlitz3.ab2@25552> macrobase:            Ds.l 1                               ;firstmacro org source ;linked list of macro's ;macrolist
00041CEE <AmiBlitz3.ab2@25553> endop:                Ds.l 1                               ;end of program pc - before finishups!
00041CF2 <AmiBlitz3.ab2@25554> labelbase:            Ds.l 1                               ;firstlabel org source ;first lib struct
00041CF6 <AmiBlitz3.ab2@25555> end_of_tokenlist:     Ds.l 1                               ;lasttoken org source
00041CF8 <AmiBlitz3.ab2@25556> numstatic:            Ds.w 1                               ;number of static structs
00041CFC <AmiBlitz3.ab2@25557> staticdata:           Ds.l 1                               ;data1 val for statics
00041D00 <AmiBlitz3.ab2@25558> libpointer:           Ds.l 1                               ;firstlib org source ;first lib struct
00041D02 <AmiBlitz3.ab2@25559> sbasegot:             Ds.w 1                               ;string base got?
00041D06 <AmiBlitz3.ab2@25560> litdata1:             Ds.l 1
00041D0A <AmiBlitz3.ab2@25564> objlen:               Ds.l 1
00041D0E <AmiBlitz3.ab2@25565> hunkoffsetcounter:    Ds.l 1                               ;numoffs org source
00041D12 <AmiBlitz3.ab2@25566> hunkoffsetbase:       Ds.l 1                               ;firstoff org source ;pointer to linked list
00041D14 <AmiBlitz3.ab2@25568> flagmask:             Ds.w 1                               ;mask for flag of variable when
00041D16 <AmiBlitz3.ab2@25570> notshared:            Ds.w 1                               ;added org source ;flag for seeing if variable was added!
00041D18 <AmiBlitz3.ab2@25571> nonew:                Ds.w 1                               ;1 to inhibit new variable creation
00041D1C <AmiBlitz3.ab2@25572> temp1:                Ds.l 1
00041D20 <AmiBlitz3.ab2@25573> temp2:                Ds.l 1
00041D24 <AmiBlitz3.ab2@25575> ptr_parameterstore:   Ds.l 1                               ;namebuff ds.b 128 org source
00041D28 <AmiBlitz3.ab2@25576> fib_DirEntryType:     Ds.l 1                               ;namebuff+4 org source
00041D9C <AmiBlitz3.ab2@25577> fib_FileName:         Ds.l 29                              ;namebuff+8 org source
00041DA0 <AmiBlitz3.ab2@25578> fib_Size:             Ds.l 1                               ;namebuff+124 org source
00041E20 <AmiBlitz3.ab2@25580> namebuff2:            Ds.b 128
00041E28 <AmiBlitz3.ab2@25581>                       Ds.b 8                               ;for fileinfoblock
00041E68 <AmiBlitz3.ab2@25584> optstuff:             Ds.b 64                              ;temp opt make buffer
00041EA6 <AmiBlitz3.ab2@25592>   !ComData_GetL{comFunc_OpenCompilerWindow,A1}
00041EAC <AmiBlitz3.ab2@25593>   MOVE.l #1000,D0
00041EAE <AmiBlitz3.ab2@25594>   JSR (A1)
00041EB0 <AmiBlitz3.ab2@25595> RTS
00041EB2 <AmiBlitz3.ab2@25601>   Dc.b $00,$01                                             ; 1 byte schreiben ;one byte stuff...
00041EB6 <AmiBlitz3.ab2@25602>   Dc.l xtra_versionnumber                                  ; vers org source
00041EBA <AmiBlitz3.ab2@25603>   Dc.l create_iconfile                                     ; create icon for executable
00041EBE <AmiBlitz3.ab2@25604>   Ds.l 1
00041EC0 <AmiBlitz3.ab2@25606>   Dc.b $00,$02                                             ; 2 bytes schreiben  ;two byte stuff...
00041EC4 <AmiBlitz3.ab2@25609>   Dc.l set_use_debugger
00041EC8 <AmiBlitz3.ab2@25610>   Dc.l AL_0_11010                                          ;+obsolet: debugger
00041ECC <AmiBlitz3.ab2@25611>   Dc.l AL_0_1103C                                          ;+obsolet: long arrays
00041ED0 <AmiBlitz3.ab2@25612>   Dc.l AL_0_11068                                          ;+obsolet: expand macros
00041ED4 <AmiBlitz3.ab2@25613>   Dc.l AL_0_11094                                          ;+obsolet: quoted macros
00041ED8 <AmiBlitz3.ab2@25614>   Dc.l set_make_smallestcode
00041EDC <AmiBlitz3.ab2@25615>   Dc.l set_link_debuginfo
00041EE0 <AmiBlitz3.ab2@25616>   Dc.l set_autorun
00041EE4 <AmiBlitz3.ab2@25617>   Dc.l set_interruptcheck
00041EE8 <AmiBlitz3.ab2@25618>   Dc.l set_assemblercheck
00041EEC <AmiBlitz3.ab2@25620>   Dc.l set_overflowcheck
00041EF0 <AmiBlitz3.ab2@25621>   Dc.l default_obsolete                                    ;+obsolet: ohne inhalt
00041EF4 <AmiBlitz3.ab2@25622>   Dc.l default_interruptcheck                              ;+obsolet: interruptcheck vorgabe
00041EF8 <AmiBlitz3.ab2@25623>   Dc.l default_overflowcheck                               ;+obsolet: overflow vorgabe
00041EFC <AmiBlitz3.ab2@25626>   Ds.l 1
00041EFE <AmiBlitz3.ab2@25628>   Dc.b $00,$04                                             ; 4 bytes schreiben..  ;four byte stuff...
00041F02 <AmiBlitz3.ab2@25635>   Dc.l objectbuffer
00041F06 <AmiBlitz3.ab2@25636>   Dc.l libsbuffer
00041F0A <AmiBlitz3.ab2@25637>   Dc.l systembuffer
00041F0E <AmiBlitz3.ab2@25638>   Dc.l databuffer
00041F12 <AmiBlitz3.ab2@25639>   Dc.l macrobuffer_size
00041F16 <AmiBlitz3.ab2@25640>   Dc.l stringbuffer
00041F1A <AmiBlitz3.ab2@25643>   Ds.l 1
00041F1C <AmiBlitz3.ab2@25647>   Dc.b $02,$20                                             ;dc 68*8; 544 bytes schreiben.
00041F24 <AmiBlitz3.ab2@25648>   Dc.l residents_table,0
00041F26 <AmiBlitz3.ab2@25652>   Dc.b $01,$80                                             ;dc 192*2; 384 bytes schreiben
00041F2E <AmiBlitz3.ab2@25653>   Dc.l exepath,0                                           ; exepath und exefilename jeweils 192 bytes
00041F30 <AmiBlitz3.ab2@25654>   Ds.w 1
0004202C <AmiBlitz3.ab2@25658>   Ds.l 63
00042128 <AmiBlitz3.ab2@25659>   Ds.l 63
00042224 <AmiBlitz3.ab2@25660>   Ds.l 63
00042306 <AmiBlitz3.ab2@25661>   Ds.w 113
00042308 <AmiBlitz3.ab2@25664> comsettings_message:  Ds.w 1                               ;allchg org source
0004230A <AmiBlitz3.ab2@25665> xtra_versionnumber:   Ds.w 1                               ;vers org source
00042310 <AmiBlitz3.ab2@25669>   CLR.b exefilename
00042312 <AmiBlitz3.ab2@25670>   TST.l d0
00042316 <AmiBlitz3.ab2@25671>   BNE read_xtrafile__l10
00042318 <AmiBlitz3.ab2@25672> RTS
0004231E <AmiBlitz3.ab2@25675>   JSR free_residents                                       ;jsr freeres2 org source
00042324 <AmiBlitz3.ab2@25676>   LEA ptr_xtradata,A2
00042326 <AmiBlitz3.ab2@25677>   MOVEQ.l #$00,D4
00042328 <AmiBlitz3.ab2@25680>     MOVE.w (A2)+,D4                                        ; anzahl bytes zum lesen
0004232C <AmiBlitz3.ab2@25681>     BEQ.b read_xtrafile__done
0004232E <AmiBlitz3.ab2@25684>     MOVE.l (A2)+,D2
00042332 <AmiBlitz3.ab2@25685>   BEQ.b read_xtrafile__loop
00042334 <AmiBlitz3.ab2@25687>   MOVE.l D4,D3
00042336 <AmiBlitz3.ab2@25688>   MOVE.l D7,D1
0004233A <AmiBlitz3.ab2@25689>   JSR _Read(A6)                                            ; d1: file, d2: buffer, d3:length
0004233C <AmiBlitz3.ab2@25690>   TST.l D0
00042340 <AmiBlitz3.ab2@25691>   BNE.b read_xtrafile__loop2
00042344 <AmiBlitz3.ab2@25692> BRA.w read_xtrafile__done2
0004234A <AmiBlitz3.ab2@25695>   TST.b xtra_versionnumber
0004234E <AmiBlitz3.ab2@25696>    BNE.b read_xtrafile__nover0
00042356 <AmiBlitz3.ab2@25697>   MOVE.w #$0080,set_autorun                                ;auto run on
00042360 <AmiBlitz3.ab2@25698>   MOVE.w default_interruptcheck,set_interruptcheck         ;interupt checking on
00042366 <AmiBlitz3.ab2@25699>   CLR.w set_assemblercheck                                 ;assembler checking off
00042370 <AmiBlitz3.ab2@25700>   MOVE.w default_overflowcheck,set_overflowcheck           ;overflow chex
00042374 <AmiBlitz3.ab2@25701> BRA.b read_xtrafile__ver0
00042376 <AmiBlitz3.ab2@25704>   MOVE.l D7,D1                                             ;load cli arg!
0004237C <AmiBlitz3.ab2@25705>   MOVE.l #str_cliarguments,D2
00042382 <AmiBlitz3.ab2@25706>   MOVE.l #116,D3                                           ; vorher 128 , jetzt 8 weniger fuer die Versionsdaten
00042386 <AmiBlitz3.ab2@25707>   JSR _Read(A6)                                            ; d1: file, d2: buffer, d3:length
0004238C <AmiBlitz3.ab2@25708>   MOVE.l #str_cliarguments,A0
00042392 <AmiBlitz3.ab2@25709>   ADDA.l #115,A0
00042398 <AmiBlitz3.ab2@25710>   MOVE.l #0,(a0) ; terminate it!
0004239A <AmiBlitz3.ab2@25712>   MOVE.l D7,D1                                             ; I know, I know. Honitos started this horrible thing, see below...
000423A0 <AmiBlitz3.ab2@25713>   MOVE.l #stacksize,D2
000423A6 <AmiBlitz3.ab2@25714>   MOVE.l #4,D3
000423AA <AmiBlitz3.ab2@25715>   JSR _Read(A6)
000423B4 <AmiBlitz3.ab2@25716>   CMP.l ##MIN_STACKSIZE,stacksize
000423B8 <AmiBlitz3.ab2@25717>   BGE 'stackok
000423C2 <AmiBlitz3.ab2@25718>   MOVE.l ##MIN_STACKSIZE,stacksize
000423C4 <AmiBlitz3.ab2@25721>   MOVE.l D7,D1
000423CA <AmiBlitz3.ab2@25722>   MOVE.l #versioninformation,D2
000423D0 <AmiBlitz3.ab2@25723>   MOVE.l #4,D3
000423D4 <AmiBlitz3.ab2@25724>   JSR _Read(A6)
000423D6 <AmiBlitz3.ab2@25726>   MOVE.l D7,D1
000423DC <AmiBlitz3.ab2@25727>   MOVE.l #number_of_builds,D2
000423E2 <AmiBlitz3.ab2@25728>   MOVE.l #4,D3
000423E6 <AmiBlitz3.ab2@25729>   JSR _Read(A6)
000423EC <AmiBlitz3.ab2@25735>   MOVE.l A7,errstack
000423F6 <AmiBlitz3.ab2@25736>   MOVE.l #read_xtrafile__done2,errcont
000423FE <AmiBlitz3.ab2@25737>   MOVE.w #$FFFF,ezerr
00042404 <AmiBlitz3.ab2@25740>     MOVE.l #temp1,D2                                   ;LOAD maxobjectsvalues
00042406 <AmiBlitz3.ab2@25741>     MOVEQ.l #$04,D3
00042408 <AmiBlitz3.ab2@25742>     MOVE.l D7,D1
0004240C <AmiBlitz3.ab2@25743>     JSR _Read(A6)
0004240E <AmiBlitz3.ab2@25744>     TST.l D0
00042412 <AmiBlitz3.ab2@25745>     BEQ.b read_xtrafile__done2
00042418 <AmiBlitz3.ab2@25746>     MOVE.w temp1,D1
0004241A <AmiBlitz3.ab2@25747>     TST.w d1                                               ;new
0004241E <AmiBlitz3.ab2@25748>     BEQ read_xtrafile__done2                                         ;new
00042424 <AmiBlitz3.ab2@25749>      JSR AJL_0_6F1A
0004242A <AmiBlitz3.ab2@25751>     CMP.l #0,a1
0004242E <AmiBlitz3.ab2@25752>     BEQ read_xtrafile__dloop
00042432 <AmiBlitz3.ab2@25753>     MOVE.l $12(A1),D0
0004243A <AmiBlitz3.ab2@25754>     MOVE.w temp1+2,-$4(A1,D0.L)
0004243E <AmiBlitz3.ab2@25755> BRA.b read_xtrafile__dloop
00042442 <AmiBlitz3.ab2@25761>   LEA residents_table(PC),A0
00042444 <AmiBlitz3.ab2@25762>   MOVEQ.l #$07,D0
00042448 <AmiBlitz3.ab2@25765>     CLR.l $40(A0)
0004244C <AmiBlitz3.ab2@25766>     LEA $44(A0),A0
00042450 <AmiBlitz3.ab2@25767>   DBF D0,read_xtrafile__loop3
00042454 <AmiBlitz3.ab2@25769>   MOVEM.l D7/A6,-(A7)
0004245A <AmiBlitz3.ab2@25770>   JSR init_buffers
00042460 <AmiBlitz3.ab2@25771>   JSR reloadresident
00042464 <AmiBlitz3.ab2@25772>   MOVEM.l (A7)+,D7/A6
00042466 <AmiBlitz3.ab2@25773> RTS
0004246E <AmiBlitz3.ab2@25777>   MOVE.b #$1,xtra_versionnumber                            ;.xtra version number...
00042474 <AmiBlitz3.ab2@25786>   LEA ptr_xtradata,A2
00042476 <AmiBlitz3.ab2@25787>   MOVEQ.l #$00,D4
00042478 <AmiBlitz3.ab2@25791>   MOVE.w (A2)+,D4                                          ; anzahl bytes zu schreiben
0004247C <AmiBlitz3.ab2@25792>   BEQ.b write_xtrafile__done
0004247E <AmiBlitz3.ab2@25795>    MOVE.l (A2)+,D2
00042482 <AmiBlitz3.ab2@25796>    BEQ.b write_xtrafile__loop
00042484 <AmiBlitz3.ab2@25798>    MOVE.l D4,D3
00042486 <AmiBlitz3.ab2@25799>    MOVE.l D7,D1                                            ; schreiben der daten in ptr_xtradata
0004248A <AmiBlitz3.ab2@25800>    JSR _Write(A6)                                          ; d1: file, d2: buffer, d3:length
0004248E <AmiBlitz3.ab2@25801> BRA.b write_xtrafile__loop2
00042490 <AmiBlitz3.ab2@25804>   MOVE.l D7,D1
00042496 <AmiBlitz3.ab2@25805>   MOVE.l #str_cliarguments,D2
0004249C <AmiBlitz3.ab2@25806>   MOVE.l #116,D3
000424A0 <AmiBlitz3.ab2@25807>   JSR _Write(A6)                                           ; hier werden 116 bytes an cli_arguments geschrieben !!
000424A2 <AmiBlitz3.ab2@25809>   MOVE.l D7,D1
000424A8 <AmiBlitz3.ab2@25810>   MOVE.l #stacksize,D2
000424AE <AmiBlitz3.ab2@25811>   MOVE.l #4,D3
000424B2 <AmiBlitz3.ab2@25812>   JSR _Write(A6)
000424B4 <AmiBlitz3.ab2@25814>   MOVE.l D7,D1
000424BA <AmiBlitz3.ab2@25815>   MOVE.l #versioninformation,D2
000424C0 <AmiBlitz3.ab2@25816>   MOVE.l #4,D3
000424C4 <AmiBlitz3.ab2@25817>   JSR _Write(A6)
000424C6 <AmiBlitz3.ab2@25819>   MOVE.l D7,D1
000424CC <AmiBlitz3.ab2@25820>   MOVE.l #number_of_builds,D2
000424D2 <AmiBlitz3.ab2@25821>   MOVE.l #4,D3
000424D6 <AmiBlitz3.ab2@25822>   JSR _Write(A6)
000424DC <AmiBlitz3.ab2@25828>   LEA libpointer,A2
000424DE <AmiBlitz3.ab2@25831>     MOVE.l (A2),D0
000424E2 <AmiBlitz3.ab2@25832>     BEQ.w write_xtrafile__done2
000424E4 <AmiBlitz3.ab2@25833>     MOVEA.l D0,A2
000424E8 <AmiBlitz3.ab2@25834>     MOVE.l $12(A2),D4
000424EC <AmiBlitz3.ab2@25835>     TST.w -$2(A2,D4.L)
000424F0 <AmiBlitz3.ab2@25836>     BEQ.w write_xtrafile__loop3
000424F4 <AmiBlitz3.ab2@25838>     LEA $4(A2),A0
000424F6 <AmiBlitz3.ab2@25839>     MOVE.l A0,D2
000424F8 <AmiBlitz3.ab2@25840>     MOVEQ.l #$02,D3
000424FA <AmiBlitz3.ab2@25841>     MOVE.l D7,D1                                           ; schreiben der Libnum mit 2 bytes
000424FE <AmiBlitz3.ab2@25842>     JSR _Write(A6)                                         ; d1: file, d2: buffer, d3:length
00042502 <AmiBlitz3.ab2@25844>     LEA -$4(A2,D4.L),A0
00042504 <AmiBlitz3.ab2@25845>     MOVE.l A0,D2
00042506 <AmiBlitz3.ab2@25846>     MOVEQ.l #$02,D3
00042508 <AmiBlitz3.ab2@25847>     MOVE.l D7,D1                                           ; schreiben der Max Objects mit 2 bytes
0004250C <AmiBlitz3.ab2@25848>     JSR _Write(A6)                                         ; d1: file, d2: buffer, d3:length
00042510 <AmiBlitz3.ab2@25849> BRA.w write_xtrafile__loop3
00042516 <AmiBlitz3.ab2@25854>   LEA XTRAEndPadBytes,A2 ; get the start address off the 4 fill/pad/termination bytes
00042518 <AmiBlitz3.ab2@25855>   MOVE.l A2,D2           ; move the address to d2
0004251E <AmiBlitz3.ab2@25856>   MOVE.l #4,D3           ; we only need 4 bytes to save
00042520 <AmiBlitz3.ab2@25857>   MOVE.l D7,D1           ; we set the file handle
00042524 <AmiBlitz3.ab2@25858>   JSR _Write(A6)         ; and we write it.
00042526 <AmiBlitz3.ab2@25860> RTS
0004252C <AmiBlitz3.ab2@25864>   LEA optssave,A0
00042532 <AmiBlitz3.ab2@25865>   LEA ptr_xtradata,A1
00042534 <AmiBlitz3.ab2@25868>   MOVE.w (A1)+,D0                                          ;length of data move
00042538 <AmiBlitz3.ab2@25869>   BEQ.b menu_compileroptions__done
0004253A <AmiBlitz3.ab2@25870>   SUBQ.w #1,D0
0004253C <AmiBlitz3.ab2@25873>     MOVE.l (A1)+,D1
00042540 <AmiBlitz3.ab2@25874>     BEQ.b menu_compileroptions__loop
00042542 <AmiBlitz3.ab2@25875>     MOVEA.l D1,A2
00042544 <AmiBlitz3.ab2@25876>     MOVE.w D0,D1
00042546 <AmiBlitz3.ab2@25879>       MOVE.b (A2)+,(A0)+
0004254A <AmiBlitz3.ab2@25880>   DBF D1,menu_compileroptions__loop3
0004254E <AmiBlitz3.ab2@25882> BRA.w menu_compileroptions__loop2
00042554 <AmiBlitz3.ab2@25886>   LEA bufferlist,A1
00042556 <AmiBlitz3.ab2@25889>     MOVE.l (A1)+,D2
0004255A <AmiBlitz3.ab2@25890>     BEQ.b menu4c
0004255C <AmiBlitz3.ab2@25892>     MOVEA.l D2,A0
0004255E <AmiBlitz3.ab2@25893>     MOVE.l (A0),D2
00042560 <AmiBlitz3.ab2@25894>     ADDQ.w #8,A0
00042566 <AmiBlitz3.ab2@25895>     JSR makelong
0004256A <AmiBlitz3.ab2@25896> BRA.b menu_compileroptions__loop4
00042570 <AmiBlitz3.ab2@25899>   CLR.w state_of_residents                                 ;resident change
00042576 <AmiBlitz3.ab2@25900>   CLR.w comsettings_message                                ;alloc change
0004257C <AmiBlitz3.ab2@25901>   CLR.w maxobject_pos
00042582 <AmiBlitz3.ab2@25904>     Gosub newoptionsfunc
00042586 <AmiBlitz3.ab2@25916>     CMP.w #-$1,D7
0004258A <AmiBlitz3.ab2@25917>      BNE.w settings_events
0004258E <AmiBlitz3.ab2@25918>     CMP.w #$5,D6                                           ; vorher $6
00042592 <AmiBlitz3.ab2@25919>      BHI.w menu4c__notmax2                                      ; 6, 9, F, 10, 11, 14
00042598 <AmiBlitz3.ab2@25920>     MOVE.w D6,comsettings_message
0004259C <AmiBlitz3.ab2@25921> BRA.w settings_events
000425A0 <AmiBlitz3.ab2@25924>   CMP.w #$A,D6
000425A4 <AmiBlitz3.ab2@25925>   BNE.w JL_0_10084                                         ; JL_0_1003C
000425AC <AmiBlitz3.ab2@25927>   BTST #$7,use_debugger                                    ;runtime ERROR
000425B0 <AmiBlitz3.ab2@25928>   BNE 'debugon
000425B6 <AmiBlitz3.ab2@25929>   CLR.w debugmode
000425BA <AmiBlitz3.ab2@25930> BRA.b 'debugoff
000425C0 <AmiBlitz3.ab2@25933>   SNE debugmode
000425C2 <AmiBlitz3.ab2@25936>   MOVE.l a0,-(a7)
000425FA <AmiBlitz3.ab2@25939>   !ComData_SetB{comByte_DebugMode,debugmode}
000425FC <AmiBlitz3.ab2@25940>   MOVE.l (a7)+,a0
00042600 <AmiBlitz3.ab2@25942> BRA.w settings_events
00042604 <AmiBlitz3.ab2@25946>   CMP.w #$11,D6
00042608 <AmiBlitz3.ab2@25947>    BCS.w settings_events
0004260C <AmiBlitz3.ab2@25948>   CMP.w #$14,D6
00042610 <AmiBlitz3.ab2@25949>    BHI.w settings_events
00042614 <AmiBlitz3.ab2@25950>   BEQ.w menu4canc
00042616 <AmiBlitz3.ab2@25953>   MOVE.w D6,-(A7)
0004261C <AmiBlitz3.ab2@25954>   MOVE.w comsettings_message,D0
00042620 <AmiBlitz3.ab2@25955>    BEQ.w menu4c__skip
00042626 <AmiBlitz3.ab2@25956>   JSR init_buffers
0004262C <AmiBlitz3.ab2@25959>   MOVE.w state_of_residents,D0
00042630 <AmiBlitz3.ab2@25960>    BEQ.w menu4c__zdone
00042636 <AmiBlitz3.ab2@25961>   JSR reloadresident
00042638 <AmiBlitz3.ab2@25964>   MOVE.w (A7)+,D6
0004263C <AmiBlitz3.ab2@25966>   CMP.w #$12,D6
00042640 <AmiBlitz3.ab2@25967>    BEQ.w JUMP_menu_compile_run
00042644 <AmiBlitz3.ab2@25968>   CMP.w #$13,D6
00042648 <AmiBlitz3.ab2@25969>    BEQ.w JUMP_menu_createexecutable
0004264A <AmiBlitz3.ab2@25970> RTS
00042650 <AmiBlitz3.ab2@25973> JMP menu_compile_run
00042656 <AmiBlitz3.ab2@25976> JMP menu_createexecutable
0004265C <AmiBlitz3.ab2@25980>   LEA optssave,A0
00042662 <AmiBlitz3.ab2@25981>   LEA ptr_xtradata,A1
00042664 <AmiBlitz3.ab2@25984>   MOVE.w (A1)+,D0
00042668 <AmiBlitz3.ab2@25985>   BEQ.b menu4canc__done
0004266A <AmiBlitz3.ab2@25986>   SUBQ.w #1,D0
0004266C <AmiBlitz3.ab2@25989>     MOVE.l (A1)+,D1
00042670 <AmiBlitz3.ab2@25990>     BEQ.b menu4canc__loop
00042672 <AmiBlitz3.ab2@25991>     MOVEA.l D1,A2
00042674 <AmiBlitz3.ab2@25992>     MOVE.w D0,D1
00042676 <AmiBlitz3.ab2@25995>       MOVE.b (A0)+,(A2)+
0004267A <AmiBlitz3.ab2@25996>   DBF D1,menu4canc__loop3
0004267E <AmiBlitz3.ab2@25998> BRA.b menu4canc__loop2
00042680 <AmiBlitz3.ab2@26001> RTS
00042682 <AmiBlitz3.ab2@26005>   MOVE.l d0,a1
00042688 <AmiBlitz3.ab2@26006>   MOVEA.l libpointer,A2
0004268C <AmiBlitz3.ab2@26009>     MOVE.l $12(A2),D0
00042690 <AmiBlitz3.ab2@26010>     TST.w -$2(A2,D0.L)
00042694 <AmiBlitz3.ab2@26011>      BEQ.w JL_0_102AAa
00042696 <AmiBlitz3.ab2@26012>     SUBQ.w #1,D1
0004269A <AmiBlitz3.ab2@26013>      BPL.w JL_0_102AAa
0004269E <AmiBlitz3.ab2@26014>     MOVEA.l -$1A(A2,D0.L),A3
000426A0 <AmiBlitz3.ab2@26015>     ADDA.l A2,A3
000426A2 <AmiBlitz3.ab2@26018>       MOVE.b (A3)+,(A1)+
000426A6 <AmiBlitz3.ab2@26019>     BNE.w JL_0_10294a
000426A8 <AmiBlitz3.ab2@26021>     CLR.b -(A1)
000426AC <AmiBlitz3.ab2@26022>     MOVE.w -$4(A2,D0.L),D0
000426B2 <AmiBlitz3.ab2@26023>     AND.l #$ffff,d0
000426B4 <AmiBlitz3.ab2@26024> RTS
000426B6 <AmiBlitz3.ab2@26027>     MOVEA.l (A2),A2
000426BA <AmiBlitz3.ab2@26028> BRA.w JL_0_1027Ca
000426CA <AmiBlitz3.ab2@26033> str_maxobjects_name:   Dc.b "              ",0 : Even
000426DA <AmiBlitz3.ab2@26034> str_maxobjects_name2:  Dc.b "              ",0 : Even
000426DC <AmiBlitz3.ab2@26035> objectbuffer:          Ds.w 1
000426DF <AmiBlitz3.ab2@26036>                        Dc.b "@",0,0
000426E2 <AmiBlitz3.ab2@26037>                        Ds.b 3
000426E9 <AmiBlitz3.ab2@26038> str_objectbuffer:      Dc.b "16384",0,0
000426EE <AmiBlitz3.ab2@26039>                        Ds.b 5
000426F0 <AmiBlitz3.ab2@26040> libsbuffer:            Ds.w 1
000426F4 <AmiBlitz3.ab2@26041>                        Dc.b $80,$00,$00,$00
000426F6 <AmiBlitz3.ab2@26042>                        Ds.w 1
000426FD <AmiBlitz3.ab2@26043> str_libsbuffer:        Dc.b "16384",0,0
00042702 <AmiBlitz3.ab2@26044>                        Ds.b 5
00042704 <AmiBlitz3.ab2@26045> systembuffer:          Ds.w 1                              ; systen buffer
00042708 <AmiBlitz3.ab2@26046>                        Dc.b $10,$00,$00,$00
0004270A <AmiBlitz3.ab2@26047>                        Ds.w 1
00042710 <AmiBlitz3.ab2@26048> str_systembuffer:      Dc.b "4096",0,0
00042716 <AmiBlitz3.ab2@26049>                        Ds.w 3
00042718 <AmiBlitz3.ab2@26050> databuffer:            Ds.w 1                              ; data buffer
0004271C <AmiBlitz3.ab2@26051>                        Dc.b $10,$00,$00,$00
0004271E <AmiBlitz3.ab2@26052>                        Ds.w 1
00042724 <AmiBlitz3.ab2@26053> str_databuffer:        Dc.b "4096",0,0
0004272A <AmiBlitz3.ab2@26054>                        Ds.w 3
0004272C <AmiBlitz3.ab2@26055> macrobuffer_size:      Ds.w 1                              ; macro buffer
0004272F <AmiBlitz3.ab2@26056>                        Dc.b " ",0,0
00042732 <AmiBlitz3.ab2@26057>                        Ds.b 3
00042738 <AmiBlitz3.ab2@26058> str_macrobuffer:       Dc.b "8192",0,0
0004273E <AmiBlitz3.ab2@26059>                        Ds.w 3
00042740 <AmiBlitz3.ab2@26060> stringbuffer:          Ds.w 1                              ; string buffer
00042743 <AmiBlitz3.ab2@26061>                        Dc.b "(",0,0
00042746 <AmiBlitz3.ab2@26062>                        Ds.b 3
0004274D <AmiBlitz3.ab2@26063> str_stringbuffer:      Dc.b "10240",0,0                    ; stringbuff
00042752 <AmiBlitz3.ab2@26064>                        Ds.b 5
00042756 <AmiBlitz3.ab2@26065> maxobjects_value:      Dc.b $00,$64,$00,$00
00042758 <AmiBlitz3.ab2@26066>                        Ds.w 1
0004275D <AmiBlitz3.ab2@26067> str_maxobjects_value:  Dc.b "100",0,0
00042764 <AmiBlitz3.ab2@26068>                        Ds.b 7
00042768 <AmiBlitz3.ab2@26069> maxobjects_value2:     Dc.b $00,$14,$00,$00
0004276C <AmiBlitz3.ab2@26071> str_maxobjects_value2: Dc.b "20",0,0
00042774 <AmiBlitz3.ab2@26072>                        Ds.l 2
00042775 <AmiBlitz3.ab2@26074> set_create_iconfile:   Dc.b $00
00042778 <AmiBlitz3.ab2@26075> create_iconfile:       Dc.b $80,$01,$01                    ;create icon
0004277A <AmiBlitz3.ab2@26076>                        Dc.b $00,$01
0004277B <AmiBlitz3.ab2@26078> set_use_debugger:      Dc.b $00                            ; Flags.w
0004277E <AmiBlitz3.ab2@26079> use_debugger:          Dc.b $80,$01,$01                    ; Activation.w
00042780 <AmiBlitz3.ab2@26080>                        Dc.b $00,$01                        ; GadgetType.w
00042784 <AmiBlitz3.ab2@26081> AL_0_11010:            Dc.b $00,$80,$01,$01                ; flags, activation
00042788 <AmiBlitz3.ab2@26082> AL_0_1103C:            Dc.b $00,$80,$01,$01                ; flags, activation
0004278C <AmiBlitz3.ab2@26083> AL_0_11068:            Dc.b $00,$80,$01,$01                ; flags, activation
0004278E <AmiBlitz3.ab2@26084> AL_0_11094:            Ds.w 1
0004278F <AmiBlitz3.ab2@26086> set_make_smallestcode: Ds.b 1
00042792 <AmiBlitz3.ab2@26087> make_smallestcode:     Dc.b $00,$01,$01                    ;make smallest
00042794 <AmiBlitz3.ab2@26088>                        Dc.b $00,$01
00042795 <AmiBlitz3.ab2@26089> set_link_debuginfo:    Ds.b 1
00042798 <AmiBlitz3.ab2@26090> link_debuginfo:        Dc.b $00,$01,$01                    ;create debuginfo
0004279A <AmiBlitz3.ab2@26091>                        Dc.b $00,$01
000427DE <AmiBlitz3.ab2@26096>   Ds.l 17          ;resident files STEP $44 piece 8
000428DA <AmiBlitz3.ab2@26098>   Ds.l 63
00042976 <AmiBlitz3.ab2@26099>   Ds.l 39
000429BA <AmiBlitz3.ab2@26101>   Ds.l 17
00042A3A <AmiBlitz3.ab2@26104> str_calcexpression:    Ds.l 32
00042A3E <AmiBlitz3.ab2@26105> AL_0_11A20:            Ds.l 1
00042A48 <AmiBlitz3.ab2@26110>   MOVE.l destbufferend,AL_0_11A20
00042A4E <AmiBlitz3.ab2@26111>   MOVE.l A7,errstack
00042A58 <AmiBlitz3.ab2@26112>   MOVE.l #AJL_0_11C00,errcont
00042A5E <AmiBlitz3.ab2@26113>   CLR.b str_calcexpression
00042A88 <AmiBlitz3.ab2@26114>   !basic
00042AB0 <AmiBlitz3.ab2@26115>   If Peek.l(Addr Window(3))=0
00042ACC <AmiBlitz3.ab2@26116>     FindScreen 0
00042B2A <AmiBlitz3.ab2@26117>     WZWindow 3,?wzgui,128,-2,-2,-2,-2,3
00042B3A <AmiBlitz3.ab2@26118>     Poke.w ?button_bin_flags, $00
00042B4A <AmiBlitz3.ab2@26119>     Poke.w ?button_dec_flags, $80
00042B6C <AmiBlitz3.ab2@26121>     activategadget{"CALC_EXPRESSION"}
00042B72 <AmiBlitz3.ab2@26122>     calc_exit.l = False
00042B7C <AmiBlitz3.ab2@26124>       ev.l = WaitEvent
00042B82 <AmiBlitz3.ab2@26125>       Select ev
00042B90 <AmiBlitz3.ab2@26127>         Case #IDCMP_IDCMPUPDATE
00042BB8 <AmiBlitz3.ab2@26128>           Select WZGadName
00042BDC <AmiBlitz3.ab2@26130>             Case "CALC_EXPRESSION"
00042C2A <AmiBlitz3.ab2@26131>               calc_expression$ = WZGetString("CALC_EXPRESSION")
00042C62 <AmiBlitz3.ab2@26132>               Poke$ ?str_calcexpression,calc_expression$
00042C8C <AmiBlitz3.ab2@26134>             Case "BIN"
00042C9C <AmiBlitz3.ab2@26135>               Poke.w ?button_bin_flags, $80
00042CAC <AmiBlitz3.ab2@26136>               Poke.w ?button_dec_flags, $00
00042CD6 <AmiBlitz3.ab2@26138>             Case "HEX"
00042CE6 <AmiBlitz3.ab2@26139>               Poke.w ?button_bin_flags, $00
00042CF6 <AmiBlitz3.ab2@26140>               Poke.w ?button_dec_flags, $00
00042D20 <AmiBlitz3.ab2@26142>             Case "DEC"
00042D30 <AmiBlitz3.ab2@26143>               Poke.w ?button_bin_flags, $00
00042D40 <AmiBlitz3.ab2@26144>               Poke.w ?button_dec_flags, $80
00042D6A <AmiBlitz3.ab2@26146>             Case "CALC_CLOSE"
00042D70 <AmiBlitz3.ab2@26147>               calc_exit = True
00042D7E <AmiBlitz3.ab2@26149>           End Select
00042DB6 <AmiBlitz3.ab2@26150>           If calc_expression$<>""
00042DD4 <AmiBlitz3.ab2@26151>             !asm
00042DD8 <AmiBlitz3.ab2@26152>             BSR examine_expression
00042E02 <AmiBlitz3.ab2@26153>             !basic
00042E2C <AmiBlitz3.ab2@26154>             calc_expression$ = Peek$(?str_calcexpression)
00042E66 <AmiBlitz3.ab2@26155>             WZPrint "CALC_EXPRESSION",&calc_expression$
00042E7A <AmiBlitz3.ab2@26158>         Case #IDCMP_CLOSEWINDOW
00042E80 <AmiBlitz3.ab2@26159>           calc_exit = True
00042E82 <AmiBlitz3.ab2@26161>       End Select
00042EA4 <AmiBlitz3.ab2@26162>       activategadget{"CALC_EXPRESSION"}
00042EAE <AmiBlitz3.ab2@26163>     Until calc_exit
00042EC2 <AmiBlitz3.ab2@26164>     WZCloseWindow 3
00042EE0 <AmiBlitz3.ab2@26165>     !asm
00042EE2 <AmiBlitz3.ab2@26166>   RTS
00042F00 <AmiBlitz3.ab2@26168>   !asm
00042F06 <AmiBlitz3.ab2@26172>   LEA str_calcexpression,A0
00042F0C <AmiBlitz3.ab2@26180>   JSR setcvars
00042F12 <AmiBlitz3.ab2@26181>   JSR setsvars
00042F18 <AmiBlitz3.ab2@26182>   CLR.w connest
00042F1E <AmiBlitz3.ab2@26183>   LEA str_calcexpression,A5
00042F24 <AmiBlitz3.ab2@26184>   JSR AJL_0_BF6E
00042F2A <AmiBlitz3.ab2@26185>   LEA str_calcexpression,A0
00042F2C <AmiBlitz3.ab2@26186>   TST.l D3
00042F30 <AmiBlitz3.ab2@26187>    BPL.w JL_0_11AE8
00042F34 <AmiBlitz3.ab2@26188>   MOVE.b #$2D,(A0)+
00042F36 <AmiBlitz3.ab2@26189>   NEG.l D3
00042F3E <AmiBlitz3.ab2@26192>   CMPI.w #$80,button_dec_flags
00042F42 <AmiBlitz3.ab2@26193>    BEQ.w JL_0_11B74
00042F44 <AmiBlitz3.ab2@26194>   MOVEQ.l #$00,D1
00042F4C <AmiBlitz3.ab2@26195>   CMPI.w #$80,button_bin_flags
00042F50 <AmiBlitz3.ab2@26196>    BNE.w JL_0_11B36
00042F52 <AmiBlitz3.ab2@26197>   MOVEQ.l #$1F,D0
00042F56 <AmiBlitz3.ab2@26198>   MOVE.b #$25,(A0)+
00042F58 <AmiBlitz3.ab2@26201>       LSL.l #1,D3
00042F5C <AmiBlitz3.ab2@26202>        BCC.w JL_0_11B18
00042F60 <AmiBlitz3.ab2@26203>       MOVE.b #"1",(A0)+
00042F62 <AmiBlitz3.ab2@26204>       MOVEQ.l #-$01,D1
00042F66 <AmiBlitz3.ab2@26205>   BRA.w JL_0_11B22
00042F68 <AmiBlitz3.ab2@26208>       TST.w D1
00042F6C <AmiBlitz3.ab2@26209>       BEQ.w JL_0_11B22
00042F70 <AmiBlitz3.ab2@26210>       MOVE.b #"0",(A0)+
00042F74 <AmiBlitz3.ab2@26213>  DBF D0,JL_0_11B08
00042F76 <AmiBlitz3.ab2@26216>   TST.w D1
00042F7A <AmiBlitz3.ab2@26217>   BNE.w JL_0_11B30
00042F7E <AmiBlitz3.ab2@26218>   MOVE.b #"0",(A0)+
00042F80 <AmiBlitz3.ab2@26221>   CLR.b (A0)
00042F84 <AmiBlitz3.ab2@26222> BRA.w JL_0_11B7C
00042F86 <AmiBlitz3.ab2@26225>   MOVEQ.l #$07,D0
00042F8A <AmiBlitz3.ab2@26226>   MOVE.b #$24,(A0)+
00042F8C <AmiBlitz3.ab2@26229>     MOVE.l D3,D2
00042F8E <AmiBlitz3.ab2@26230>     SWAP D2
00042F90 <AmiBlitz3.ab2@26231>     LSR.w #8,D2
00042F92 <AmiBlitz3.ab2@26232>     LSR.w #4,D2
00042F96 <AmiBlitz3.ab2@26233>     ADDI.w #$30,D2
00042F9A <AmiBlitz3.ab2@26234>     CMP.w #$3A,D2
00042F9E <AmiBlitz3.ab2@26235>      BCS.w JL_0_11B52
00042FA0 <AmiBlitz3.ab2@26236>     ADDQ.w #7,D2
00042FA4 <AmiBlitz3.ab2@26239>     CMP.w #$30,D2
00042FA8 <AmiBlitz3.ab2@26240>     BEQ.w JL_0_11B62
00042FAA <AmiBlitz3.ab2@26241>     MOVE.b D2,(A0)+
00042FAC <AmiBlitz3.ab2@26242>     MOVEQ.l #-$01,D1
00042FB0 <AmiBlitz3.ab2@26243>   BRA.w JL_0_11B6A
00042FB2 <AmiBlitz3.ab2@26246>     TST.w D1
00042FB6 <AmiBlitz3.ab2@26247>      BEQ.w JL_0_11B6A
00042FB8 <AmiBlitz3.ab2@26248>     MOVE.b D2,(A0)+
00042FBA <AmiBlitz3.ab2@26251>     LSL.l #4,D3
00042FBE <AmiBlitz3.ab2@26252>  DBF D0,JL_0_11B3C
00042FC2 <AmiBlitz3.ab2@26254> BRA.w JL_0_11B26
00042FC4 <AmiBlitz3.ab2@26257>   MOVE.l D3,D2
00042FCA <AmiBlitz3.ab2@26258>   JSR makelong
00042FCC <AmiBlitz3.ab2@26261> RTS
00042FD6 <AmiBlitz3.ab2@26265>   MOVE.l AL_0_11A20,destbufferend
00042FDC <AmiBlitz3.ab2@26266>   CLR.b str_calcexpression
00042FE0 <AmiBlitz3.ab2@26267> BRA.w JL_0_11B7C
000430DF <AmiBlitz3.ab2@26271> str_cliarguments: Ds.b 255   ; a command line can acutally be 255 characters long
000430E0 <AmiBlitz3.ab2@26273> Even
0004311E <AmiBlitz3.ab2@26278>   !ComData_GetL{comFunc_OpenCompilerWindow,A1}
00043124 <AmiBlitz3.ab2@26279>   MOVE.l #1001,D0
0004312A <AmiBlitz3.ab2@26280>   MOVE.l #str_cliarguments,D1
0004312C <AmiBlitz3.ab2@26281>   JSR (A1)
0004312E <AmiBlitz3.ab2@26282> RTS
00043130 <AmiBlitz3.ab2@26287>     MOVE.b (a5)+,d0
00043134 <AmiBlitz3.ab2@26288>     BEQ 'l2
00043138 <AmiBlitz3.ab2@26289>     CMP.b #$80,d0
0004313C <AmiBlitz3.ab2@26290>     BNE 'l1
0004313E <AmiBlitz3.ab2@26291>     MOVE.b (a5)+,d0
00043142 <AmiBlitz3.ab2@26292>     BEQ 'l2
00043146 <AmiBlitz3.ab2@26293>     CMP.b #$02,d0
0004314A <AmiBlitz3.ab2@26294>   BNE 'l1
0004314E <AmiBlitz3.ab2@26297>     CMP.b #$20,(a5)+
00043152 <AmiBlitz3.ab2@26298>   BEQ 'l3
00043154 <AmiBlitz3.ab2@26299>   SUBQ.l #1,a5
00043156 <AmiBlitz3.ab2@26300>   TST.b (a5)
0004315A <AmiBlitz3.ab2@26301>   BEQ 'l2
0004315E <AmiBlitz3.ab2@26302>   CMP.w #$8008,(a5)
00043162 <AmiBlitz3.ab2@26303>   BEQ 'l4
00043166 <AmiBlitz3.ab2@26304>   CMP.w #$8009,(a5)
0004316A <AmiBlitz3.ab2@26305>   BEQ 'l4
0004316E <AmiBlitz3.ab2@26306> BRA 'l1
00043170 <AmiBlitz3.ab2@26309>   ADDQ.l #2,a5
00043176 <AmiBlitz3.ab2@26310>   JSR skiprest
00043178 <AmiBlitz3.ab2@26311> RTS
0004317E <AmiBlitz3.ab2@26314>   JSR nextline
00043182 <AmiBlitz3.ab2@26315>   BNE 'l1
00043184 <AmiBlitz3.ab2@26316> RTS
000431AE <AmiBlitz3.ab2@26320>   !basic
000431B8 <AmiBlitz3.ab2@26321>   DateFormat 1
000431C6 <AmiBlitz3.ab2@26322>   i.l=SystemDate
000431EC <AmiBlitz3.ab2@26323>   a$=Date$ (i)
0004326A <AmiBlitz3.ab2@26324>   a$=Replace$(a$,"/",".")
00043270 <AmiBlitz3.ab2@26325>   GetD0 &a$
00043272 <AmiBlitz3.ab2@26326>   MOVEQ #8,d2
00043274 <AmiBlitz3.ab2@26327>   MOVE.l d0,a0
00043276 <AmiBlitz3.ab2@26330>     MOVE.b (a0)+,d1
0004327C <AmiBlitz3.ab2@26331>     JSR pokedata1b
00043280 <AmiBlitz3.ab2@26332>  DBF d2,'l1
00043282 <AmiBlitz3.ab2@26334>   MOVEQ #0,d0
00043284 <AmiBlitz3.ab2@26335>   MOVE.b (a0)+,d0
000432A2 <AmiBlitz3.ab2@26336>   !asm
000432A8 <AmiBlitz3.ab2@26337>   ADD.l #9,d2
000432AE <AmiBlitz3.ab2@26338>   ADD.l #9,a5
000432B0 <AmiBlitz3.ab2@26339> RTS
000432DA <AmiBlitz3.ab2@26343>   !basic
000432E4 <AmiBlitz3.ab2@26344>   DateFormat 0
000432F2 <AmiBlitz3.ab2@26345>   i.l=SystemDate
00043318 <AmiBlitz3.ab2@26346>   a$=Date$ (i)
00043396 <AmiBlitz3.ab2@26347>   a$=Replace$(a$,"/",".")
0004339C <AmiBlitz3.ab2@26348>   GetD0 &a$
0004339E <AmiBlitz3.ab2@26349>   MOVEQ #8,d2
000433A0 <AmiBlitz3.ab2@26350>   MOVE.l d0,a0
000433A2 <AmiBlitz3.ab2@26353>     MOVE.b (a0)+,d1
000433A8 <AmiBlitz3.ab2@26354>     JSR pokedata1b
000433AC <AmiBlitz3.ab2@26355>  DBF d2,'l1
000433AE <AmiBlitz3.ab2@26357>   MOVEQ #0,d0
000433B0 <AmiBlitz3.ab2@26358>   MOVE.b (a0)+,d0
000433CE <AmiBlitz3.ab2@26359>   !asm
000433D4 <AmiBlitz3.ab2@26360>   ADD.l #9,d2
000433DA <AmiBlitz3.ab2@26361>   ADD.l #13,a5
000433DC <AmiBlitz3.ab2@26362> RTS
00043406 <AmiBlitz3.ab2@26366>   !basic
00043410 <AmiBlitz3.ab2@26367>   DateFormat 1
0004341E <AmiBlitz3.ab2@26368>   i.l = SystemDate
00043444 <AmiBlitz3.ab2@26369>   a$ = Date$ (i)
000434C2 <AmiBlitz3.ab2@26370>   a$ = Replace$(a$,"/",".")
000434C8 <AmiBlitz3.ab2@26371>   GetD0 &a$
000434CA <AmiBlitz3.ab2@26372>   MOVEQ #8,d2
000434CC <AmiBlitz3.ab2@26373>   MOVE.l d0,a0
000434CE <AmiBlitz3.ab2@26376>     MOVE.b (a0)+,d1
000434D4 <AmiBlitz3.ab2@26377>     JSR writebyte
000434D8 <AmiBlitz3.ab2@26378>  DBF d2,'l1
000434DA <AmiBlitz3.ab2@26380>   MOVEQ #0,d0
000434DC <AmiBlitz3.ab2@26381>   MOVE.b (a0)+,d0
000434FA <AmiBlitz3.ab2@26382>   !asm
00043500 <AmiBlitz3.ab2@26383>   ADD.l #9,a5
00043502 <AmiBlitz3.ab2@26384> RTS
0004352C <AmiBlitz3.ab2@26388>   !basic
00043536 <AmiBlitz3.ab2@26389>   DateFormat 0
00043544 <AmiBlitz3.ab2@26390>   i.l=SystemDate
0004356A <AmiBlitz3.ab2@26391>   a$=Date$ (i)
000435E8 <AmiBlitz3.ab2@26392>   a$=Replace$(a$,"/",".")
000435EE <AmiBlitz3.ab2@26393>   GetD0 &a$
000435F0 <AmiBlitz3.ab2@26394>   MOVEQ #8,d2
000435F2 <AmiBlitz3.ab2@26395>   MOVE.l d0,a0
000435F4 <AmiBlitz3.ab2@26398>     MOVE.b (a0)+,d1
000435FA <AmiBlitz3.ab2@26399>     JSR writebyte
000435FE <AmiBlitz3.ab2@26400>  DBF d2,'l1
00043600 <AmiBlitz3.ab2@26402>   MOVEQ #0,d0
00043602 <AmiBlitz3.ab2@26403>   MOVE.b (a0)+,d0
00043620 <AmiBlitz3.ab2@26404>   !asm
00043626 <AmiBlitz3.ab2@26405>   ADD.l #13,a5
00043628 <AmiBlitz3.ab2@26406> RTS
0004362A <AmiBlitz3.ab2@26410>   MOVE.l d2,-(a7)                                          ; D2 -> stack
0004362C <AmiBlitz3.ab2@26411>   MOVE.l a5,d0
00043656 <AmiBlitz3.ab2@26412>   !basic
0004365A <AmiBlitz3.ab2@26413>   _myD0.l = PutD0
00043664 <AmiBlitz3.ab2@26414>   If _myD0
000436AA <AmiBlitz3.ab2@26415>     verstring$ = Left$(Peek.s(_myD0),9+3)
000436FC <AmiBlitz3.ab2@26416>     verstring$ = UnRight$(verstring$,3)                      ; Compilerkonstantenbeginn \__ entfernen
00043702 <AmiBlitz3.ab2@26417>   Else
00043730 <AmiBlitz3.ab2@26418>     error{"INTERNAL: Invalid pointer in version_string!"}
00043740 <AmiBlitz3.ab2@26423>   actual_version.l = Peek.l(?versioninformation)
00043750 <AmiBlitz3.ab2@26424>   actual_build.l   = Peek.l(?number_of_builds)
00043774 <AmiBlitz3.ab2@26426>   Format "00"
000437AA <AmiBlitz3.ab2@26427>   Select verstring$
000437CE <AmiBlitz3.ab2@26429>     Case "VER_MAJOR"
0004380A <AmiBlitz3.ab2@26430>      put_versionstr$ = Str$(actual_version LSR 24)
00043834 <AmiBlitz3.ab2@26432>     Case "VER_MINOR"
00043878 <AmiBlitz3.ab2@26433>      put_versionstr$ = Str$((actual_version LSL 8) LSR 24)
000438A2 <AmiBlitz3.ab2@26435>     Case "VER_PATCH"
000438E6 <AmiBlitz3.ab2@26436>      put_versionstr$ = Str$((actual_version LSL 16) LSR 24 )
00043910 <AmiBlitz3.ab2@26438>     Case "VER_BUILD"
00043934 <AmiBlitz3.ab2@26439>      Format ""
00043968 <AmiBlitz3.ab2@26440>      put_versionstr$ = Str$(actual_build)
0004396E <AmiBlitz3.ab2@26442>     Default
00043996 <AmiBlitz3.ab2@26443>      put_versionstr$ = "{unknown compilerconstant}"
000439A4 <AmiBlitz3.ab2@26446>   End Select
000439C8 <AmiBlitz3.ab2@26447>   Format ""
000439D8 <AmiBlitz3.ab2@26449>   GetD0 FLen(put_versionstr$)                              ; laenge zielstring -> Stack
000439DA <AmiBlitz3.ab2@26450>   MOVE.l d0,d2
000439DC <AmiBlitz3.ab2@26451>   MOVE.l d2,-(a7)
000439E0 <AmiBlitz3.ab2@26452>   SUB #1,d2
000439E6 <AmiBlitz3.ab2@26454>   GetD0 &put_versionstr$                                   ; kopieren des neuen Strings in den Zielstring
000439E8 <AmiBlitz3.ab2@26455>   MOVE.l d0,a0
000439EA <AmiBlitz3.ab2@26458>     MOVE.b (a0)+,d1
000439F0 <AmiBlitz3.ab2@26459>     JSR pokedata1b
000439F4 <AmiBlitz3.ab2@26460>  DBF d2,'l1
000439F6 <AmiBlitz3.ab2@26462>   MOVEQ #0,d0
00043A14 <AmiBlitz3.ab2@26463>   !asm
00043A16 <AmiBlitz3.ab2@26464>   MOVE.l (a7)+,d0                                          ; laenge Zielstring <- Stack
00043A18 <AmiBlitz3.ab2@26465>   MOVE.l (a7)+,d2                                          ; d2 <-Stack
00043A1A <AmiBlitz3.ab2@26466>   ADD.l d0,d2
00043A20 <AmiBlitz3.ab2@26467>   ADD.l #12,a5                                             ; string_ptr um konstante weitersetzen
00043A22 <AmiBlitz3.ab2@26468>   MOVEQ #0,d0
00043A24 <AmiBlitz3.ab2@26469> RTS
00043A26 <AmiBlitz3.ab2@26473>   MOVE.l a5,d0
00043A50 <AmiBlitz3.ab2@26474>   !basic
00043A54 <AmiBlitz3.ab2@26475>   _myD0.l = PutD0
00043A5E <AmiBlitz3.ab2@26476>   If _myD0
00043AA4 <AmiBlitz3.ab2@26477>     verstring$ = Left$(Peek.s(_myD0),9+3)
00043AF6 <AmiBlitz3.ab2@26478>     verstring$ = UnRight$(verstring$,3)                      ; Compilerkonstantenbeginn \__ entfernen
00043AFC <AmiBlitz3.ab2@26479>   Else
00043B2A <AmiBlitz3.ab2@26480>     error{"INTERNAL: Invalid pointer in version_string_dc!"}
00043B3A <AmiBlitz3.ab2@26485>   actual_version.l = Peek.l(?versioninformation)
00043B4A <AmiBlitz3.ab2@26486>   actual_build.l   = Peek.l(?number_of_builds)
00043B6E <AmiBlitz3.ab2@26488>   Format ""
00043BA4 <AmiBlitz3.ab2@26489>   Select verstring$
00043BC8 <AmiBlitz3.ab2@26491>     Case "VER_MAJOR"
00043C04 <AmiBlitz3.ab2@26492>      put_versionstr$ = Str$(actual_version LSR 24)
00043C2E <AmiBlitz3.ab2@26494>     Case "VER_MINOR"
00043C72 <AmiBlitz3.ab2@26495>      put_versionstr$ = Str$((actual_version LSL 8) LSR 24)
00043C9C <AmiBlitz3.ab2@26497>     Case "VER_PATCH"
00043CE0 <AmiBlitz3.ab2@26498>      put_versionstr$ = Str$((actual_version LSL 16) LSR 24 )
00043D0A <AmiBlitz3.ab2@26500>     Case "VER_BUILD"
00043D2E <AmiBlitz3.ab2@26501>      Format ""
00043D62 <AmiBlitz3.ab2@26502>      put_versionstr$ = Str$(actual_build)
00043D68 <AmiBlitz3.ab2@26504>     Default
00043D90 <AmiBlitz3.ab2@26505>      put_versionstr$ = "{unknown compilerconstant}"
00043D9E <AmiBlitz3.ab2@26507>   End Select
00043DC2 <AmiBlitz3.ab2@26508>   Format ""
00043DD8 <AmiBlitz3.ab2@26510>   GetD0 FLen(put_versionstr$)-1
00043DDA <AmiBlitz3.ab2@26511>   MOVE.l d0,d2
00043DE0 <AmiBlitz3.ab2@26513>   GetD0 &put_versionstr$                                   ; kopieren des neuen Strings in den Zielstring
00043DE2 <AmiBlitz3.ab2@26514>   MOVE.l d0,a0
00043DE4 <AmiBlitz3.ab2@26517>     MOVE.b (a0)+,d1
00043DEA <AmiBlitz3.ab2@26518>     JSR writebyte
00043DEE <AmiBlitz3.ab2@26519>  DBF d2,'l1
00043DF0 <AmiBlitz3.ab2@26521>   MOVEQ #0,d0
00043DF2 <AmiBlitz3.ab2@26522>   MOVE.b -(a0),d0                                          ; letztes Zeichen in D0
00043E10 <AmiBlitz3.ab2@26523>   !asm
00043E16 <AmiBlitz3.ab2@26524>   ADD.l #12,a5                                             ; string_ptr um konstante weitersetzen
00043E18 <AmiBlitz3.ab2@26525> RTS
00043E1A <AmiBlitz3.ab2@26530>   MOVE.l d2,-(a7)                                          ; D2 -> stack
00043E1C <AmiBlitz3.ab2@26531>   MOVE.l a5,d0
00043E46 <AmiBlitz3.ab2@26532>   !basic
00043E4A <AmiBlitz3.ab2@26533>   _myD0.l = PutD0
00043E54 <AmiBlitz3.ab2@26534>   If _myD0
00043E9A <AmiBlitz3.ab2@26535>     constring$ = Left$(Peek.s(_myD0),13 + 3)
00043EEC <AmiBlitz3.ab2@26536>     constring$ = UnRight$(constring$,3)                      ; Compilerkonstantenbeginn \__ entfernen
00043EF2 <AmiBlitz3.ab2@26537>   Else
00043F20 <AmiBlitz3.ab2@26538>     error{"INTERNAL: Invalid pointer in insert_functionname!"}
00043F6E <AmiBlitz3.ab2@26540>   Select LCase$(constring$)
00043F92 <AmiBlitz3.ab2@26542>    Case "this_function"
00043FB2 <AmiBlitz3.ab2@26543>     If Peek.l(?currentfunction)<>0
00043FC2 <AmiBlitz3.ab2@26544>       currentfuncP.l = Peek.l(?currentfunction)
00043FCC <AmiBlitz3.ab2@26545>       If currentfuncP
00044000 <AmiBlitz3.ab2@26546>         condata$ = Peek.s(currentfuncP + 48 + 1)
00044006 <AmiBlitz3.ab2@26547>       Else
0004402E <AmiBlitz3.ab2@26548>         condata$ = "???"
0004405C <AmiBlitz3.ab2@26549>         error{"INTERNAL: Invalid pointer in currentfunction!"}
00044062 <AmiBlitz3.ab2@26551>     Else
0004408A <AmiBlitz3.ab2@26552>       condata$ = "GLOBAL"
00044090 <AmiBlitz3.ab2@26555>    Default
000440C4 <AmiBlitz3.ab2@26556>     condata$ = constring$
000440D2 <AmiBlitz3.ab2@26558>   End Select
00044100 <AmiBlitz3.ab2@26559>   GetD0 Len(condata$)                                      ; laenge zielstring -> Stack
00044102 <AmiBlitz3.ab2@26560>   MOVE.l d0,d2
00044104 <AmiBlitz3.ab2@26561>   MOVE.l d2,-(a7)
0004410A <AmiBlitz3.ab2@26563>   GetD0 &condata$                                          ; kopieren des neuen Strings in den Zielstring
0004410C <AmiBlitz3.ab2@26564>   MOVE.l d0,a0
0004410E <AmiBlitz3.ab2@26567>     MOVE.b (a0)+,d1
00044114 <AmiBlitz3.ab2@26568>     JSR pokedata1b
00044118 <AmiBlitz3.ab2@26569>  DBF d2,'l1
00044136 <AmiBlitz3.ab2@26571>   !asm
00044138 <AmiBlitz3.ab2@26572>   MOVE.l (a7)+,d0                                          ; laenge Zielstring <- Stack
0004413A <AmiBlitz3.ab2@26573>   MOVE.l (a7)+,d2                                          ; d2 <-Stack
0004413C <AmiBlitz3.ab2@26574>   ADD.l d0,d2                                              ; eingefuegte chars zu D2 dazu
00044142 <AmiBlitz3.ab2@26575>   ADD.l #16,a5                                             ; string_ptr um konstante weitersetzen
00044144 <AmiBlitz3.ab2@26576> RTS
00044146 <AmiBlitz3.ab2@26581>   MOVE.l d2,-(a7)                                          ; D2 -> stack
00044148 <AmiBlitz3.ab2@26582>   MOVE.l a5,d0
00044172 <AmiBlitz3.ab2@26583>   !basic
00044176 <AmiBlitz3.ab2@26584>   _myD0.l = PutD0
00044180 <AmiBlitz3.ab2@26585>   If _myD0
000441C6 <AmiBlitz3.ab2@26586>     constring$ = Left$(Peek.s(_myD0),8 + 3)
00044218 <AmiBlitz3.ab2@26587>     constring$ = UnRight$(constring$,3)                      ; Compilerkonstantenbeginn \__ entfernen
0004421E <AmiBlitz3.ab2@26588>   Else
0004424C <AmiBlitz3.ab2@26589>     error{"INTERNAL: Invalid pointer in insert_codeline!"}
00044274 <AmiBlitz3.ab2@26590>     constring$ = "???"
000442C2 <AmiBlitz3.ab2@26592>   Select LCase$(constring$)
000442E6 <AmiBlitz3.ab2@26594>    Case "codeline"
00044322 <AmiBlitz3.ab2@26595>     condata$ = Str$(Peek.l(?globallinecount))
00044328 <AmiBlitz3.ab2@26597>    Default
0004435C <AmiBlitz3.ab2@26598>     condata$ = constring$
0004436A <AmiBlitz3.ab2@26600>   End Select
00044398 <AmiBlitz3.ab2@26602>   GetD0 Len(condata$)                                      ; laenge zielstring -> Stack
0004439A <AmiBlitz3.ab2@26603>   MOVE.l d0,d2
0004439C <AmiBlitz3.ab2@26604>   MOVE.l d2,-(a7)
000443A0 <AmiBlitz3.ab2@26605>   SUB #1,d2
000443A6 <AmiBlitz3.ab2@26607>   GetD0 &condata$                                          ; kopieren des neuen Strings in den Zielstring
000443A8 <AmiBlitz3.ab2@26608>   MOVE.l d0,a0
000443AA <AmiBlitz3.ab2@26611>     MOVE.b (a0)+,d1
000443B0 <AmiBlitz3.ab2@26612>     JSR pokedata1b
000443B4 <AmiBlitz3.ab2@26613>  DBF d2,'l1
000443B6 <AmiBlitz3.ab2@26615>   MOVEQ #0,d0
000443D4 <AmiBlitz3.ab2@26616>   !asm
000443D6 <AmiBlitz3.ab2@26617>   MOVE.l (a7)+,d0                                          ; laenge Zielstring <- Stack
000443D8 <AmiBlitz3.ab2@26618>   MOVE.l (a7)+,d2                                          ; d2 <-Stack
000443DA <AmiBlitz3.ab2@26619>   ADD.l d0,d2
000443E0 <AmiBlitz3.ab2@26620>   ADD.l #11,a5                                             ; string_ptr um konstante weitersetzen
000443E2 <AmiBlitz3.ab2@26621>   MOVEQ #0,d0
000443E4 <AmiBlitz3.ab2@26622> RTS
0004440E <AmiBlitz3.ab2@26625> Function.l ab3_GetIncludeLock{filename.s}
0004442E <AmiBlitz3.ab2@26626>   incLock.l  = Lock_ (&filename,#ACCESS_READ)   ; try bla.blub
00044486 <AmiBlitz3.ab2@26627>   ex.s       = dos_GetExt{filename}
0004449A <AmiBlitz3.ab2@26629>   If incLock = False
0004450E <AmiBlitz3.ab2@26630>     filename = dos_SetExt{filename,"ab3"}
0004452E <AmiBlitz3.ab2@26631>     incLock  = Lock_ (&filename,#ACCESS_READ)   ; try bla.ab3
00044542 <AmiBlitz3.ab2@26634>   If incLock = False
000445B6 <AmiBlitz3.ab2@26635>     filename = dos_SetExt{filename,"ab2"}
000445D6 <AmiBlitz3.ab2@26636>     incLock  = Lock_ (&filename,#ACCESS_READ)   ; try bla.ab2
000445EA <AmiBlitz3.ab2@26639>   If incLock = False
0004465E <AmiBlitz3.ab2@26640>     filename = dos_SetExt{filename,"bb2"}
0004467E <AmiBlitz3.ab2@26641>     incLock  = Lock_ (&filename,#ACCESS_READ)   ; try bla.bb2
00044692 <AmiBlitz3.ab2@26644>   If incLock = False
00044724 <AmiBlitz3.ab2@26645>     filename = dos_SetExt{filename,ex+".ab3"}
00044744 <AmiBlitz3.ab2@26646>     incLock  = Lock_ (&filename,#ACCESS_READ)   ; try bla.blub.ab3
00044758 <AmiBlitz3.ab2@26649>   If incLock = False
000447CC <AmiBlitz3.ab2@26650>     filename = dos_SetExt{filename,"ab2"}
000447EC <AmiBlitz3.ab2@26651>     incLock  = Lock_ (&filename,#ACCESS_READ)   ; try bla.blub.ab2
00044800 <AmiBlitz3.ab2@26654>   If incLock = False
00044874 <AmiBlitz3.ab2@26655>     filename = dos_SetExt{filename,"bb2"}
00044894 <AmiBlitz3.ab2@26656>     incLock  = Lock_ (&filename,#ACCESS_READ)   ; try bla.blub.bb2
0004489E <AmiBlitz3.ab2@26659>  Function Return incLock
000448B8 <AmiBlitz3.ab2@26660> End Function
000448E2 <AmiBlitz3.ab2@26664>   !basic
0004490C <AmiBlitz3.ab2@26665>   incString.s = Peek$(?ptr_parameterstore)
00044940 <AmiBlitz3.ab2@26666>   incFile.s   = incString
00044972 <AmiBlitz3.ab2@26667>   incLock.l   = ab3_GetIncludeLock{incFile}
00044986 <AmiBlitz3.ab2@26669>   If incLock = False ; not found => check default Include Directory
00044996 <AmiBlitz3.ab2@26670>     incDirP.l = Peek.l(?incd)
000449A0 <AmiBlitz3.ab2@26671>     If incDirP
000449C8 <AmiBlitz3.ab2@26672>       incDir_.s = Peek.s(incDirP)
000449CE <AmiBlitz3.ab2@26673>     Else
00044A38 <AmiBlitz3.ab2@26674>       incDir_.s = dos_AddPart{Peek.s(?str_blitz3assign),"Sourcecodes/Includes"}
00044AB8 <AmiBlitz3.ab2@26676>     incFile.s = dos_AddPart{incDir_,incString}
00044AEA <AmiBlitz3.ab2@26677>     incLock.l = ab3_GetIncludeLock{incFile}
00044AFE <AmiBlitz3.ab2@26680>   If incLock = False ; not found => check relative to current source
00044B16 <AmiBlitz3.ab2@26681>     incDepth.l = Peek.w(?ininclude)-1
00044B3C <AmiBlitz3.ab2@26682>     If incDepth >= 0 AND incDepth < #maxincludes
00044B9C <AmiBlitz3.ab2@26683>       incDir_.s = dos_PathPart{incdim (incDepth)} ;= Peek.s(?includetemp2)
00044C1C <AmiBlitz3.ab2@26684>       incFile.s = dos_AddPart{incDir_,incString}
00044C4E <AmiBlitz3.ab2@26685>       incLock.l = ab3_GetIncludeLock{incFile}
00044C62 <AmiBlitz3.ab2@26689>   If incLock = False ; still not found => check default Include Directory and name only
00044C72 <AmiBlitz3.ab2@26690>     incDirP.l = Peek.l(?incd)
00044C7C <AmiBlitz3.ab2@26691>     If incDirP
00044CA4 <AmiBlitz3.ab2@26692>       incDir_.s = Peek.s(incDirP)
00044CAA <AmiBlitz3.ab2@26693>     Else
00044D14 <AmiBlitz3.ab2@26694>       incDir_.s = dos_AddPart{Peek.s(?str_blitz3assign),"Sourcecodes/Includes"}
00044DC2 <AmiBlitz3.ab2@26696>     incFile.s = dos_AddPart{incDir_,dos_FilePart{incString}}
00044DF4 <AmiBlitz3.ab2@26697>     incLock.l = ab3_GetIncludeLock{incFile}
00044DFE <AmiBlitz3.ab2@26700>   If incLock
00044E14 <AmiBlitz3.ab2@26701>     MaxLen incFile = 1024
00044E38 <AmiBlitz3.ab2@26702>     NameFromLock_ incLock,&incFile,1024
00044E62 <AmiBlitz3.ab2@26703>     incFile = Peek.s(&incFile)
00044E9A <AmiBlitz3.ab2@26704>     Poke$ ?ptr_parameterstore,incFile
00044EAE <AmiBlitz3.ab2@26705>     i = FLen(incFile)
00044EBA <AmiBlitz3.ab2@26706>     GetReg d0,i
00044EC0 <AmiBlitz3.ab2@26707>     MOVE.l d0,tempstore
00044ED0 <AmiBlitz3.ab2@26708>     UnLock_ incLock
00044EEE <AmiBlitz3.ab2@26711>   !asm
00044EF4 <AmiBlitz3.ab2@26712>   TST.l tempstore
00044EF8 <AmiBlitz3.ab2@26713>    BEQ 'l1
00044EFE <AmiBlitz3.ab2@26714>   MOVE.l tempstore,d2
00044F00 <AmiBlitz3.ab2@26717> RTS
00044F06 <AmiBlitz3.ab2@26728>   JSR Aclearallvars
00044F0C <AmiBlitz3.ab2@26729>   JSR free_unusedfunctions
00044F16 <AmiBlitz3.ab2@26744>   MOVE.l #"NORE",reqmode
00044F1C <AmiBlitz3.ab2@26745> JSR handle_compileerror
00044F1E <AmiBlitz3.ab2@26748>   MOVE.l d0,-(a7)
00044F20 <AmiBlitz3.ab2@26749>   MOVE.l a5,d0
00044F2A <AmiBlitz3.ab2@26750>   !basica7
00044F2E <AmiBlitz3.ab2@26751>   i.l = PutD0
00044F38 <AmiBlitz3.ab2@26752>   If i
00044F60 <AmiBlitz3.ab2@26753>     a$ = Peek$(i)
00044F92 <AmiBlitz3.ab2@26754>     b$ = Peeks$(i-7,7)
00045078 <AmiBlitz3.ab2@26755>     i = Request(!TRANS{"Do workaround ?"},b$ + a$,!TRANS{"Yes|No"})
0004507E <AmiBlitz3.ab2@26756>     MOVE.l d0,result
00045082 <AmiBlitz3.ab2@26758>   !asma7
00045084 <AmiBlitz3.ab2@26759>   MOVE.l (a7)+,d0
00045086 <AmiBlitz3.ab2@26760> RTS
000450B0 <AmiBlitz3.ab2@26764>   !basic
000450DE <AmiBlitz3.ab2@26765>   !ComData_LEA{comStr_CurrentDir,D0}
000450E2 <AmiBlitz3.ab2@26766>   currentDirP.l = PutD0
00045110 <AmiBlitz3.ab2@26768>   !ComData_LEA{comStr_SourceName,D0}
00045114 <AmiBlitz3.ab2@26769>   fileNameP.l = PutD0
0004513C <AmiBlitz3.ab2@26771>   check_dirname$  = Peek$(currentDirP)
00045164 <AmiBlitz3.ab2@26772>   check_filename$ = Peek$(fileNameP)
000451EE <AmiBlitz3.ab2@26773>   If (olddirname$<>check_dirname$) OR (oldfilename$<>check_filename$)
000451F4 <AmiBlitz3.ab2@26774>     JSR free_unusedfunctions
0004523E <AmiBlitz3.ab2@26776>   olddirname$ = Peek$(check_dirname$)
00045288 <AmiBlitz3.ab2@26777>   oldfilename$ = Peek$(check_filename$)
000452B2 <AmiBlitz3.ab2@26778>   For i = 0 To #maxincludes-1
000452C6 <AmiBlitz3.ab2@26779>     incline(i) = 0
000452D6 <AmiBlitz3.ab2@26780>   Next
000452F4 <AmiBlitz3.ab2@26781>   !asm
000452F6 <AmiBlitz3.ab2@26782> RTS
000452F8 <AmiBlitz3.ab2@26786>   MOVEQ #0,d1
000452FA <AmiBlitz3.ab2@26789>   MOVE.b (a5)+,d0
000452FE <AmiBlitz3.ab2@26790>   BEQ 'er1
00045302 <AmiBlitz3.ab2@26791>   CMP.b #$20,d0
00045306 <AmiBlitz3.ab2@26792>   BEQ 'l1
00045308 <AmiBlitz3.ab2@26793>   ADDQ #1,d1
0004530C <AmiBlitz3.ab2@26794>   CMP.b #$22,d0
00045310 <AmiBlitz3.ab2@26795>   BNE 'l1
00045312 <AmiBlitz3.ab2@26796> RTS
00045318 <AmiBlitz3.ab2@26799> JMP syntaxerr
0004533C <AmiBlitz3.ab2@26810> erro1t   Dc.b "Only one BSS / Chip Segment allowed",0 : Even
0004535A <AmiBlitz3.ab2@26811> nodata   Dc.b "BSS Segment contains Data!!!!",0       : Even
00045360 <AmiBlitz3.ab2@26816>   TST.b exdebug
00045364 <AmiBlitz3.ab2@26817>   BNE 'l10
0004536A <AmiBlitz3.ab2@26818>   MOVE.l #$4e71,d1
00045370 <AmiBlitz3.ab2@26819>   JSR writeword
00045376 <AmiBlitz3.ab2@26820>   MOVE.l destpointer,d0
00045378 <AmiBlitz3.ab2@26821>   MOVE.l d0,d1
0004537A <AmiBlitz3.ab2@26822>   ADDQ.l #3,d1
00045380 <AmiBlitz3.ab2@26823>   AND.l #$fffffffc,d1
00045386 <AmiBlitz3.ab2@26824>   MOVE.l d1,destpointer
0004538C <AmiBlitz3.ab2@26825>   SUB.l destpointer,d0
00045390 <AmiBlitz3.ab2@26826>   BEQ 'lnf1
0004539A <AmiBlitz3.ab2@26827>   CMP.l #-1,bssstart
0004539E <AmiBlitz3.ab2@26828>   BNE 'lnf1
000453A8 <AmiBlitz3.ab2@26829>   CMP.l #-1,chipstart
000453AC <AmiBlitz3.ab2@26830>   BNE 'lnf1
000453B2 <AmiBlitz3.ab2@26831>   MOVE.l destpointer,a4
000453B8 <AmiBlitz3.ab2@26832>   TST.w dontwrite
000453BC <AmiBlitz3.ab2@26833>   BNE 'lnf1
000453C2 <AmiBlitz3.ab2@26834>   MOVE.w #$4e71,-2(a4)
000453CC <AmiBlitz3.ab2@26837>   CMP.l #-1,bssstart
000453D0 <AmiBlitz3.ab2@26838>   BEQ 'l11
000453D6 <AmiBlitz3.ab2@26839>   MOVE.l #erro1t,-(a7)
000453DC <AmiBlitz3.ab2@26840> JMP handle_compileerror
000453E6 <AmiBlitz3.ab2@26843>   MOVE.l destpointer,bssstart
000453EE <AmiBlitz3.ab2@26844>   MOVE.b #1,bssmode
000453F4 <AmiBlitz3.ab2@26847>   TST.b chipmode
000453F8 <AmiBlitz3.ab2@26848>   BEQ 'l10
00045402 <AmiBlitz3.ab2@26849>   MOVE.l destpointer,chipend
00045408 <AmiBlitz3.ab2@26850>   CLR.b chipmode
0004540E <AmiBlitz3.ab2@26853>   JSR get1bytemain
00045410 <AmiBlitz3.ab2@26854> RTS
00045416 <AmiBlitz3.ab2@26858>    TST.b exdebug
0004541A <AmiBlitz3.ab2@26859>   BNE 'x1
00045420 <AmiBlitz3.ab2@26860>   MOVE.l destpointer,d0
00045426 <AmiBlitz3.ab2@26861>   MOVE.l d0,realbssend
0004542C <AmiBlitz3.ab2@26862>   MOVE.l #$4e71,d1
00045432 <AmiBlitz3.ab2@26863>   JSR writeword
00045438 <AmiBlitz3.ab2@26864>   MOVE.l destpointer,d0
0004543A <AmiBlitz3.ab2@26865>   MOVE.l d0,d1
0004543C <AmiBlitz3.ab2@26866>   ADDQ.l #3,d1
00045442 <AmiBlitz3.ab2@26867>   AND.l #$fffffffc,d1
00045448 <AmiBlitz3.ab2@26868>   MOVE.l d1,destpointer
0004544E <AmiBlitz3.ab2@26869>   SUB.l destpointer,d0
00045452 <AmiBlitz3.ab2@26870>   BEQ 'lnf1
00045458 <AmiBlitz3.ab2@26871>   MOVE.l destpointer,a4
00045462 <AmiBlitz3.ab2@26872>   CMP.l #-1,bssstart
00045466 <AmiBlitz3.ab2@26873>   BNE 'lnf1
00045470 <AmiBlitz3.ab2@26874>   CMP.l #-1,chipstart
00045474 <AmiBlitz3.ab2@26875>   BNE 'lnf1
0004547A <AmiBlitz3.ab2@26876>   TST.w dontwrite
0004547E <AmiBlitz3.ab2@26877>   BNE 'lnf1
00045484 <AmiBlitz3.ab2@26878>   MOVE.w #$4e71,-2(a4)
0004548A <AmiBlitz3.ab2@26881>   TST.b bssmode
0004548E <AmiBlitz3.ab2@26882>   BEQ 'l10
00045498 <AmiBlitz3.ab2@26883>   MOVE.l destpointer,bssend
0004549E <AmiBlitz3.ab2@26884>   CLR.b bssmode
000454A8 <AmiBlitz3.ab2@26889>   CMP.l #-1,chipstart
000454AC <AmiBlitz3.ab2@26890>   BEQ 'l11
000454B2 <AmiBlitz3.ab2@26891>   MOVE.l #erro1t,-(a7)
000454B8 <AmiBlitz3.ab2@26892> JMP handle_compileerror
000454C2 <AmiBlitz3.ab2@26895>   MOVE.l destpointer,chipstart
000454CA <AmiBlitz3.ab2@26896>   MOVE.b #1,chipmode
000454D0 <AmiBlitz3.ab2@26899>   JSR get1bytemain
000454D2 <AmiBlitz3.ab2@26900> RTS
000454FC <AmiBlitz3.ab2@26904>   !basic
0004550E <AmiBlitz3.ab2@26914>   i.l = Peek.w(?ininclude)
00045534 <AmiBlitz3.ab2@26915>   If i>=0 AND i<#maxincludes
00045566 <AmiBlitz3.ab2@26916>     incdim (i) = Peek.s(?includetemp2)
00045580 <AmiBlitz3.ab2@26917>     incline(i) = Peek.l(?includeline)
0004558A <AmiBlitz3.ab2@26919>     If CLIMode
00045638 <AmiBlitz3.ab2@26920>       If cli_verbose>=2 Then NPrint "  -> Compiling ",incdim(i),"..."
00045656 <AmiBlitz3.ab2@26924>   !asm
00045658 <AmiBlitz3.ab2@26925> RTS
00045682 <AmiBlitz3.ab2@26929>   !basic
00045694 <AmiBlitz3.ab2@26930>   i.l = Peek.w(?ininclude)
000456BA <AmiBlitz3.ab2@26931>   If i>=0 AND i<#maxincludes
000456EA <AmiBlitz3.ab2@26932>     incdim (i) = ""
000456FE <AmiBlitz3.ab2@26933>     incline(i) = 0
00045736 <AmiBlitz3.ab2@26934>     If i>0 Then Poke.l (?includeline),incline(i-1)+1
00045754 <AmiBlitz3.ab2@26936>   !asm
00045756 <AmiBlitz3.ab2@26937> RTS
0004575C <AmiBlitz3.ab2@26941>   LEA replacedat,a0
00045760 <AmiBlitz3.ab2@26942>   Dc.w $3181,$0A00                                         ;MOVE.w d1,0(a0,d0.l*2)
00045762 <AmiBlitz3.ab2@26943> RTS
00045768 <AmiBlitz3.ab2@26947>   TST.b fpu
0004576C <AmiBlitz3.ab2@26948>   BEQ 'l1
00045776 <AmiBlitz3.ab2@26951>   MOVE.l destpointer,newinitaddr
0004577C <AmiBlitz3.ab2@26952>   JSR writeword
00045782 <AmiBlitz3.ab2@26953>   JSR writelong
00045784 <AmiBlitz3.ab2@26954> RTS
00045786 <AmiBlitz3.ab2@26959>   TST.b (a5)
0004578A <AmiBlitz3.ab2@26960>    BEQ.s 'll20
0004578E <AmiBlitz3.ab2@26961>   CMP.b #$20,(a5)
00045792 <AmiBlitz3.ab2@26962>    BNE.s 'll10
00045794 <AmiBlitz3.ab2@26963>   ADDQ.l #1,a5
00045798 <AmiBlitz3.ab2@26964> BRA.s 'll21
0004579C <AmiBlitz3.ab2@26967>   CMP.b #";",(a5)
000457A0 <AmiBlitz3.ab2@26968>   BNE.s 'll20
000457A2 <AmiBlitz3.ab2@26971>   TST.b (a5)+
000457A6 <AmiBlitz3.ab2@26972>   BEQ.s 'll23
000457AA <AmiBlitz3.ab2@26973> BRA.s 'll25
000457AC <AmiBlitz3.ab2@26976>   SUBQ.l #1,a5
000457AE <AmiBlitz3.ab2@26979> RTS
000457B2 <AmiBlitz3.ab2@26983>   MOVEM.l a2/d2,-(a7)
000457B4 <AmiBlitz3.ab2@26984>   MOVEQ #0,d2
000457BA <AmiBlitz3.ab2@26985>   LEA ptr_parameterstore,a0
000457C0 <AmiBlitz3.ab2@26986>   LEA chartab,a2
000457C2 <AmiBlitz3.ab2@26989>   MOVE.b (a5),d0
000457C6 <AmiBlitz3.ab2@26990>   TST.b 0(a2,d0)
000457CA <AmiBlitz3.ab2@26991>   BNE 'l10
000457CC <AmiBlitz3.ab2@26992>   ADDQ.l #1,a5
000457CE <AmiBlitz3.ab2@26993>   MOVE.b d0,(a0)+
000457D0 <AmiBlitz3.ab2@26994>   ADDQ.l #1,d2
000457D4 <AmiBlitz3.ab2@26995> BRA fc2
000457D6 <AmiBlitz3.ab2@26998>   CLR.b (a0)+
000457DC <AmiBlitz3.ab2@26999>   JSR findlabel2
000457DE <AmiBlitz3.ab2@27000>   MOVE.l a2,a0
000457E2 <AmiBlitz3.ab2@27001>   MOVEM.l (a7)+,a2/d2
000457E4 <AmiBlitz3.ab2@27002> RTS
000457E6 <AmiBlitz3.ab2@27006>   TST.l d0
000457EA <AmiBlitz3.ab2@27007>   BNE 'l10
000457F0 <AmiBlitz3.ab2@27008>     MOVE.l #syntax_,-(a7)
000457F6 <AmiBlitz3.ab2@27009> JMP handle_compileerror
000457FC <AmiBlitz3.ab2@27012>   CMP.l #1,d0
00045800 <AmiBlitz3.ab2@27013>   BNE 'l20
00045806 <AmiBlitz3.ab2@27014>     MOVE.l #overflow,-(a7)
0004580C <AmiBlitz3.ab2@27015> JMP handle_compileerror
0004580E <AmiBlitz3.ab2@27018>   ADD.l a2,d0
00045810 <AmiBlitz3.ab2@27019>   MOVE.l d0,-(a7)
00045816 <AmiBlitz3.ab2@27020> JMP handle_compileerror
0004581C <AmiBlitz3.ab2@27024>   JMP _return
00045822 <AmiBlitz3.ab2@27025>   JMP _return
00045828 <AmiBlitz3.ab2@27026>   JMP _return
0004582E <AmiBlitz3.ab2@27027>   JMP _return
00045834 <AmiBlitz3.ab2@27028>   JMP _return
0004583A <AmiBlitz3.ab2@27029>   JMP _return
00045840 <AmiBlitz3.ab2@27030>   JMP _return
00045846 <AmiBlitz3.ab2@27031>   JMP _return
0004584C <AmiBlitz3.ab2@27032>   JMP _return
00045852 <AmiBlitz3.ab2@27033>   JMP _return
00045858 <AmiBlitz3.ab2@27034>   JMP Atokejsr
0004585E <AmiBlitz3.ab2@27035>   JMP writeinit
00045864 <AmiBlitz3.ab2@27036>   JMP macroexecute
0004586A <AmiBlitz3.ab2@27037>   JMP findnext
00045870 <AmiBlitz3.ab2@27038>   JMP replacelib
00045876 <AmiBlitz3.ab2@27039>   JMP findconstant2
0004587C <AmiBlitz3.ab2@27040>   JMP findchar                                             ;char in d1
00045882 <AmiBlitz3.ab2@27041>   JMP stripspaces
00045888 <AmiBlitz3.ab2@27042>   JMP calc                                                 ;d0 varmode
0004588E <AmiBlitz3.ab2@27043>   JMP error
00045894 <AmiBlitz3.ab2@27044>   JMP writelong                                            ;d1 value
0004589A <AmiBlitz3.ab2@27045>   JMP writeword                                            ;d1 value
000458A0 <AmiBlitz3.ab2@27046>   JMP writebyte                                            ;d1 value
000458A6 <AmiBlitz3.ab2@27047> JMP exit
000458AA <AmiBlitz3.ab2@27051>   destpointer:    Ds.l 1                                ;pc org source      ;Ds.w 1
000458AC <AmiBlitz3.ab2@27054>   fast            Dc.w 0
000458AE <AmiBlitz3.ab2@27055>   fpu             Dc.w 0
000458B0 <AmiBlitz3.ab2@27056>   newsyntax       Dc.w 0
000458B1 <AmiBlitz3.ab2@27058>   optistring      Dc.b 0
000458B2 <AmiBlitz3.ab2@27059>   optistring2     Dc.b 0
000458B3 <AmiBlitz3.ab2@27060>   optiarray       Dc.b 0
000458B4 <AmiBlitz3.ab2@27061>   quickadd        Dc.b 0
000458B6 <AmiBlitz3.ab2@27062>   newmode         Dc.w 0
000458B8 <AmiBlitz3.ab2@27063>   mode            Dc.w 0
000458BA <AmiBlitz3.ab2@27064>   string1         Dc.w 0
000458BC <AmiBlitz3.ab2@27065>   load_var_size   Dc.w 0
000458BE <AmiBlitz3.ab2@27066>   load_var_reg    Dc.w 0
000458C2 <AmiBlitz3.ab2@27067>   load_var_addr   Dc.l 0
000458C4 <AmiBlitz3.ab2@27068>   imm_size        Dc.w 0
000458C6 <AmiBlitz3.ab2@27069>   imm_reg         Dc.w 0
000458CA <AmiBlitz3.ab2@27070>   imm_addr        Dc.l 0
000458CB <AmiBlitz3.ab2@27071>   iee             Dc.b 0
000458CC <AmiBlitz3.ab2@27072>   _dcb            Dc.b 0
000458D0 <AmiBlitz3.ab2@27073>   nohunkoffset    Dc.l 0
000458D4 <AmiBlitz3.ab2@27076> teddata:        Dc.l tokens
000458D8 <AmiBlitz3.ab2@27077>                 Dc.l 0 ;compilermenu_entries               ; NOT used anymore
000458DC <AmiBlitz3.ab2@27078>                 Dc.l read_xtrafile
000458E0 <AmiBlitz3.ab2@27079>                 Dc.l write_xtrafile
000458E4 <AmiBlitz3.ab2@27080>                 Dc.l call_menuentry                        ; compile AND RUN ?
000458E8 <AmiBlitz3.ab2@27081>                 Dc.l 0
000458EC <AmiBlitz3.ab2@27082>                 Dc.b ":",34,".;"
000458F0 <AmiBlitz3.ab2@27083>                 Dc.l "NEW1"
000458F4 <AmiBlitz3.ab2@27084>                 Dc.l newtypebase
000458F8 <AmiBlitz3.ab2@27085> realconstbase:  Dc.l labelbase
000458FC <AmiBlitz3.ab2@27086> deflib          Dc.l 0
00045900 <AmiBlitz3.ab2@27087> incd            Dc.l 0
00045904 <AmiBlitz3.ab2@27088>                 Dc.l 0
00045908 <AmiBlitz3.ab2@27089>                 Dc.l 0
0004590C <AmiBlitz3.ab2@27090>                 Dc.l 0
0004590E <AmiBlitz3.ab2@27091> _return         RTS
0004590F <AmiBlitz3.ab2@27092>                 Dc.b 0
00045D0F <AmiBlitz3.ab2@27093> chartab2        Ds.l 256
00045D13 <AmiBlitz3.ab2@27094> codeend         Dc.l 0
00045D17 <AmiBlitz3.ab2@27095> hunkoffsetnum   Dc.l 0
00045D1B <AmiBlitz3.ab2@27096> chipsize        Dc.l 0
00045D1F <AmiBlitz3.ab2@27097> bsssize         Dc.l 0
00045D23 <AmiBlitz3.ab2@27098> bssstart        Dc.l -1
00045D27 <AmiBlitz3.ab2@27099> bssend          Dc.l -1
00045D2B <AmiBlitz3.ab2@27100> chipstart       Dc.l -1
00045D2F <AmiBlitz3.ab2@27101> chipend         Dc.l -1
00045D30 <AmiBlitz3.ab2@27102> bssmode         Dc.b 0
00045D31 <AmiBlitz3.ab2@27103> chipmode        Dc.b 0
00045D32 <AmiBlitz3.ab2@27104> newhunk         Dc.b 0
00045D36 <AmiBlitz3.ab2@27105> bssnum          Dc.l 0
00045D3A <AmiBlitz3.ab2@27106> chipnum         Dc.l 0
00045D3E <AmiBlitz3.ab2@27107> lastinstruction Dc.l 0
00045D52 <AmiBlitz3.ab2@27108> hunkbegin       Dc.l $03F3,$00,$02,$00,$01
00045D56 <AmiBlitz3.ab2@27109> tstsize1b:      Ds.l 1
00045D5A <AmiBlitz3.ab2@27110> bsssize2        Dc.l 1
00045D5E <AmiBlitz3.ab2@27111>                 Dc.l $03E9
00045D62 <AmiBlitz3.ab2@27112> tstsize2b:      Dc.l $100
00045D76 <AmiBlitz3.ab2@27113> hunkbegin2      Dc.l $03F3,$00,$03,$00,$02
00045D7A <AmiBlitz3.ab2@27114> tstsize1c:      Ds.l 1
00045D7E <AmiBlitz3.ab2@27115> bsssize3        Dc.l 1
00045D82 <AmiBlitz3.ab2@27116> chipsize2       Dc.l 1
00045D86 <AmiBlitz3.ab2@27117>                 Dc.l $3e9
00045D8A <AmiBlitz3.ab2@27118> tstsize2c       Dc.l 0
00045D9A <AmiBlitz3.ab2@27119> hunkend         Dc.l $3f2,$3eb,0,$3f2
00045DAA <AmiBlitz3.ab2@27120> hunkend2        Dc.l $3f2,$3ea,0,$3f2
00045DB1 <AmiBlitz3.ab2@27121> strcpy          Dc.b "strcpy",0
00045DB8 <AmiBlitz3.ab2@27122> strcmp          Dc.b "strcmp",0
00045DBF <AmiBlitz3.ab2@27123> strvar          Dc.b "strvar",0
00045DC4 <AmiBlitz3.ab2@27124> qmul            Dc.b "qmul",0
00045DC9 <AmiBlitz3.ab2@27125> qdiv            Dc.b "qdiv",0
00045DD0 <AmiBlitz3.ab2@27126> _MaxLen         Dc.b "maxlen",0
00045DD5 <AmiBlitz3.ab2@27127> notf            Dc.b "????",0
00045DF8 <AmiBlitz3.ab2@27129> errtext         Dc.b "only reg addressing Mode supported",0
00045E22 <AmiBlitz3.ab2@27130> fpuerr          Dc.b "Instruction not yet supported by 68K FPU ",0
00045E64 <AmiBlitz3.ab2@27131> cmplxerr        Dc.b "Formula too complex for 68K FPU or too much regload register used",0 : Even
00045E66 <AmiBlitz3.ab2@27132> peeksize        Dc.w 0
00045E6A <AmiBlitz3.ab2@27134> mainstart       Dc.l 0
00045E6B <AmiBlitz3.ab2@27136> infunctioncode  Dc.b 0
00045E6D <AmiBlitz3.ab2@27137> regnumstore     Dc.w 0
00045E9A <AmiBlitz3.ab2@27138>                 Dc.b "$VER: AmiBlitz3 \\__VER_MAJOR.\\__VER_MINOR (\\__DATE_GER__) Build \\__VER_PATCH.\\__VER_BUILD",0 : Even
00045EA2 <AmiBlitz3.ab2@27139> testcode        Dc.b "print i",0
00045F06 <AmiBlitz3.ab2@27140>                 Ds.b 100
00045F14 <AmiBlitz3.ab2@27141> devo            Dc.b "developobject",0 : Even
00045F26 <AmiBlitz3.ab2@27142> autostorename   Dc.b "__autoconstantnum",0
00045F30 <AmiBlitz3.ab2@27143> _include        Dc.b "__include",0
00045F38 <AmiBlitz3.ab2@27144> _debug          Dc.b "__debug",0
00045F3C <AmiBlitz3.ab2@27145> unusedfunc      Dc.l 0
00045F3E <AmiBlitz3.ab2@27149>   MOVE.l a0,-(a7)
00045F40 <AmiBlitz3.ab2@27150>   MOVE.l a0,d0
00045F42 <AmiBlitz3.ab2@27151>   MOVE.l a5,a0                                             ;macro title
00045F6C <AmiBlitz3.ab2@27152>   !basic
00045F70 <AmiBlitz3.ab2@27153>   i = PutD0
00045F72 <AmiBlitz3.ab2@27154>   MOVEQ #20,d0
00045F74 <AmiBlitz3.ab2@27157>     MOVE.b -(a0),d1
00045F78 <AmiBlitz3.ab2@27158>     BEQ 'l1
00045F7C <AmiBlitz3.ab2@27159>     CMP.b #":",d1
00045F80 <AmiBlitz3.ab2@27160>     BEQ 'l1
00045F82 <AmiBlitz3.ab2@27161>     SUBQ.l #1,d0
00045F86 <AmiBlitz3.ab2@27162>     BNE 'l2
00045F88 <AmiBlitz3.ab2@27165>   ADDQ #1,a0
00045F8A <AmiBlitz3.ab2@27166>   MOVE.l a0,d0
00045F8E <AmiBlitz3.ab2@27167>   i2.l = PutD0
00045FAA <AmiBlitz3.ab2@27168>   If Peek.w (?ininclude)>0
00046004 <AmiBlitz3.ab2@27169>     Poke.s (?includetemp2),incdim(Peek.w(?ininclude)-1)
00046014 <AmiBlitz3.ab2@27170>     errorline.l = Peek.l(?includeline);-1
0004603C <AmiBlitz3.ab2@27171>     Poke.l ?compilelinecounter,Peek.l(?includeline) - 1
00046066 <AmiBlitz3.ab2@27172>     errorfile.s = Peek.s(?includetemp2)
0004606C <AmiBlitz3.ab2@27173>   Else
000460A4 <AmiBlitz3.ab2@27174>     Poke.s (?includetemp2),Peek.s(?ptr_parameterstore)
000460BA <AmiBlitz3.ab2@27175>     errorline.l = Peek.l(?compilelinecounter) + 1
000460EE <AmiBlitz3.ab2@27176>     errorfile.s = cli_sourcefile
000460F8 <AmiBlitz3.ab2@27179>   If i
0004619C <AmiBlitz3.ab2@27180>     errortext.s = !TRANS{Replace$(Peek.s(i),"\\0a","\n")}
000461A2 <AmiBlitz3.ab2@27181>   Else
000461CA <AmiBlitz3.ab2@27182>     errortext.s = "???"
0004633C <AmiBlitz3.ab2@27185>   NPrint "\\1b[1m",!TRANS{"Compiler Error"}," <",errorfile,"@",errorline,">\\1b[0m ",errortext
0004635A <AmiBlitz3.ab2@27189>   !asm
0004635C <AmiBlitz3.ab2@27190>   MOVE.l (a7)+,a0
0004635E <AmiBlitz3.ab2@27191> RTS
00046360 <AmiBlitz3.ab2@27195>   MOVE.l a0,-(a7)
00046362 <AmiBlitz3.ab2@27196>   MOVE.l a0,d0
00046364 <AmiBlitz3.ab2@27197>   MOVE.l a5,a0                                             ;macro title
0004638E <AmiBlitz3.ab2@27198>   !basic
00046392 <AmiBlitz3.ab2@27199>   i = PutD0
00046394 <AmiBlitz3.ab2@27200>   MOVEQ #20,d0
00046396 <AmiBlitz3.ab2@27203>     MOVE.b -(a0),d1
0004639A <AmiBlitz3.ab2@27204>     BEQ 'l1
0004639E <AmiBlitz3.ab2@27205>     CMP.b #":",d1
000463A2 <AmiBlitz3.ab2@27206>     BEQ 'l1
000463A4 <AmiBlitz3.ab2@27207>     SUBQ.l #1,d0
000463A8 <AmiBlitz3.ab2@27208>     BNE 'l2
000463AA <AmiBlitz3.ab2@27211>   ADDQ #1,a0
000463AC <AmiBlitz3.ab2@27212>   MOVE.l a0,d0
000463B0 <AmiBlitz3.ab2@27213>   i2.l = PutD0
00046434 <AmiBlitz3.ab2@27214>   fid.l = file_Open{dos_AddPart{my_systemdir$,"ab_compileerror.txt"},#file_forcewrite}
00046448 <AmiBlitz3.ab2@27215>   If fid <> -1
00046464 <AmiBlitz3.ab2@27216>     If Peek.w (?ininclude)>0
000464BE <AmiBlitz3.ab2@27217>       Poke$(?includetemp2),incdim(Peek.w(?ininclude)-1)
000464C4 <AmiBlitz3.ab2@27218>     Else
000464F0 <AmiBlitz3.ab2@27219>       Poke$(?includetemp2),""
0004651A <AmiBlitz3.ab2@27221>     a$ = Peek$(?includetemp2)
0004658C <AmiBlitz3.ab2@27222>     x$ = Replace$(Peek$(i),"\\0a","\n")
000465BE <AmiBlitz3.ab2@27223>     file_WriteLine{fid,x$}
00046608 <AmiBlitz3.ab2@27224>     file_WriteLine{fid,Str$(Peek.l(?compilelinecounter) + 1)}
00046634 <AmiBlitz3.ab2@27225>     If a$
00046666 <AmiBlitz3.ab2@27226>       file_WriteLine{fid,a$}
000466B0 <AmiBlitz3.ab2@27227>       file_WriteLine{fid,Str$(Peek.l(?includeline)-1)}
000466D8 <AmiBlitz3.ab2@27228>       Poke.l ?compilelinecounter,Peek.l(?includeline) - 1
000466DE <AmiBlitz3.ab2@27229>     Else
00046704 <AmiBlitz3.ab2@27230>       file_WriteLine{fid,"none"}
00046734 <AmiBlitz3.ab2@27232>     file_WriteLine{fid,Peek$(i2)}
0004678A <AmiBlitz3.ab2@27233>     file_WriteLine{fid,Str$(Peek.l(?globallinecount))+" line(s) compiled"}
000467D4 <AmiBlitz3.ab2@27234>     file_WriteLine{fid,Hex$(Peek.w(?globalvarpointer))+" global var base"}
000467DE <AmiBlitz3.ab2@27235>     file_Close{fid}
000467FC <AmiBlitz3.ab2@27237>   !asm
000467FE <AmiBlitz3.ab2@27238>   MOVE.l (a7)+,a0
00046800 <AmiBlitz3.ab2@27239> RTS
0004682A <AmiBlitz3.ab2@27243>   !basic
0004682E <AmiBlitz3.ab2@27244>   progress.l     = PutD0
00046840 <AmiBlitz3.ab2@27245>   total.l        = Peek.w(?progressbar_width)
0004685E <AmiBlitz3.ab2@27246>   calcpro.l      = (progress * 100) / total +1
00046870 <AmiBlitz3.ab2@27247>   pass.l         = Peek.w(?pass)
00046882 <AmiBlitz3.ab2@27248>   typ.l          = Peek.w(?compiler_job)
000468A0 <AmiBlitz3.ab2@27250>   If pass><pass_old.l OR typ><typ_old.l
000468A6 <AmiBlitz3.ab2@27251>     pass_old = pass
000468AC <AmiBlitz3.ab2@27252>     typ_old  = typ
000468D4 <AmiBlitz3.ab2@27253>     comstatus$ = "Initializing Compiler..."
000468E6 <AmiBlitz3.ab2@27254>     If typ=0
000469C6 <AmiBlitz3.ab2@27255>       comstatus$ = !TRANS{"Pass"}+" "+Str$(pass)+": "+!TRANS{"Compiling Sources..."}
000469D8 <AmiBlitz3.ab2@27257>     If typ=1
00046AB8 <AmiBlitz3.ab2@27258>       comstatus$ = !TRANS{"Pass"}+" "+Str$(pass)+": "+!TRANS{"Building Executable..."}
00046AE0 <AmiBlitz3.ab2@27261>     If Peek.l(Addr Window(4))<>0
00046AF6 <AmiBlitz3.ab2@27262>       Use Window 4
00046B30 <AmiBlitz3.ab2@27263>       WZPrint "COMPILE_INFO",&comstatus$
00046B36 <AmiBlitz3.ab2@27264>     Else
00046B8C <AmiBlitz3.ab2@27265>       If cli_verbose>=2 Then NPrint comstatus$
00046B9A <AmiBlitz3.ab2@27269>   If (calcpro >< calcpro_old)
00046BC2 <AmiBlitz3.ab2@27270>     If Peek.l(Addr Window(4))<>0
00046BF4 <AmiBlitz3.ab2@27271>       If (((calcpro & $7)=0) OR (calcpro=100))
00046C3A <AmiBlitz3.ab2@27272>         testpr$ = Str$(calcpro)+"%%"
00046C8A <AmiBlitz3.ab2@27273>         WZPrint "COMPILE_GAUGE",calcpro,100,&testpr$
00046C90 <AmiBlitz3.ab2@27275>     Else
00046CE4 <AmiBlitz3.ab2@27279>       If cli_verbose>=3 Then NPrint calcpro,"% compiled..."
00046CEA <AmiBlitz3.ab2@27281>     calcpro_old = calcpro
00046D08 <AmiBlitz3.ab2@27283>   !asm
00046D0A <AmiBlitz3.ab2@27284> RTS
00046D34 <AmiBlitz3.ab2@27288>   !basic
00046D4A <AmiBlitz3.ab2@27289>   MaxLen a$ = 5000
00046D54 <AmiBlitz3.ab2@27290>   var.l = ?residents_table
00046D66 <AmiBlitz3.ab2@27291>   If winon.l = 0
00046D82 <AmiBlitz3.ab2@27292>     FindScreen 0
00046E46 <AmiBlitz3.ab2@27293>     WZWindow 1,?wzgui,256,-2,ScreenHeight/6,-2,ScreenHeight/1.5,1
00046E6E <AmiBlitz3.ab2@27294>     WZ_SetFont{"WIN_CPREFS"}
00046EB4 <AmiBlitz3.ab2@27295>     WZ_InitTable{"WIN_CPREFS","OBJECTS",2,0}
00046EEE <AmiBlitz3.ab2@27296>     WZ_SetTableColors{"OBJECTS",1,0,2,3,3}
00046F94 <AmiBlitz3.ab2@27299>     WZ_SetTableTitle{"OBJECTS","Objects","Max"}
00046FF0 <AmiBlitz3.ab2@27302>     WZ_SetPriority{"OBJECTS",3,1}
00047048 <AmiBlitz3.ab2@27305>     WZ_SetEditable{"OBJECTS",False,True}
0004706E <AmiBlitz3.ab2@27308>     WZ_SetSortable{"OBJECTS",Off}
000470A6 <AmiBlitz3.ab2@27311>     For i = 0 To Peek.w(?number_of_objects)-1
000470CE <AmiBlitz3.ab2@27312>       a$ = ""
000470E2 <AmiBlitz3.ab2@27313>       GetD0 &a$,i:JSR getobjectentry : a.l = PutD0
000471AA <AmiBlitz3.ab2@27314>       WZ_AddRow{"OBJECTS",Peek$(&a$),Str$(a)}
000471BA <AmiBlitz3.ab2@27315>     Next
000471DC <AmiBlitz3.ab2@27316>     WZ_DrawTable{"OBJECTS"}
000471FE <AmiBlitz3.ab2@27318>     WZ_UpdateTable{"OBJECTS"}
00047206 <AmiBlitz3.ab2@27319>     winon = 1
00047210 <AmiBlitz3.ab2@27320>     var.l = ?residents_table
00047238 <AmiBlitz3.ab2@27321>     a$ = Peek$(var)
00047262 <AmiBlitz3.ab2@27322>     For i = 0 To 6
000472A8 <AmiBlitz3.ab2@27323>       a$ = a$ + "\\0a"
000472B6 <AmiBlitz3.ab2@27324>       var + $44
00047306 <AmiBlitz3.ab2@27325>       a$ = a$ + Peek$(var)
00047316 <AmiBlitz3.ab2@27326>     Next
00047350 <AmiBlitz3.ab2@27327>     WZPrint "RESIDENTS",&a$
00047360 <AmiBlitz3.ab2@27329>     i = Peek.l(?stringbuffer)
00047398 <AmiBlitz3.ab2@27330>     WZPrint "STRINGBUFFER",i
000473A8 <AmiBlitz3.ab2@27332>     i = Peek.l(?stacksize)                            ;get stacksize  tomsmart1
000473E0 <AmiBlitz3.ab2@27333>     WZPrint "STACKSIZE",i                             ;print it  tomsmart1
000473E8 <AmiBlitz3.ab2@27335>     var.l = 0
000473F0 <AmiBlitz3.ab2@27336>     BTST #7,create_iconfile
000473F4 <AmiBlitz3.ab2@27337>     BEQ 'noi
000473FC <AmiBlitz3.ab2@27338>     var = 1
00047434 <AmiBlitz3.ab2@27341>     WZPrint "ICON",var
0004743C <AmiBlitz3.ab2@27342>     var = 0
00047444 <AmiBlitz3.ab2@27343>     BTST #7,make_smallestcode
00047448 <AmiBlitz3.ab2@27344>     BEQ 'nos
00047450 <AmiBlitz3.ab2@27345>     var = 1
00047488 <AmiBlitz3.ab2@27348>     WZPrint "SMALLEST",var
00047490 <AmiBlitz3.ab2@27349>     var = 0
00047498 <AmiBlitz3.ab2@27350>     BTST #7,link_debuginfo
0004749C <AmiBlitz3.ab2@27351>     BEQ 'nodi
000474A4 <AmiBlitz3.ab2@27352>     var = 1
000474DC <AmiBlitz3.ab2@27355>     WZPrint "DEBUGINFO",var
000474E4 <AmiBlitz3.ab2@27357>     var = 0
00047522 <AmiBlitz3.ab2@27359>     !ComData_GetW{comWord_CreateDebugFile,D0}            ; get status of Create.dbg file  tomsmart1
00047526 <AmiBlitz3.ab2@27360>     var = PutD0                                          ; save status to var  tomsmart1
0004755E <AmiBlitz3.ab2@27361>     WZPrint "DBGFILE",var                                ; show status in the GUI tomsmart1
00047566 <AmiBlitz3.ab2@27363>     var = 0                                              ; no runtime Debugging
0004758A <AmiBlitz3.ab2@27364>     WZDisable "AUTORUN"                                  ; disable all Debugger settings  tomsmart1
000475AE <AmiBlitz3.ab2@27365>     WZDisable "CHECK_INTERRUPT"                          ;                "
000475D2 <AmiBlitz3.ab2@27366>     WZDisable "CHECK_ASSEMBLER"                          ;                "
000475F6 <AmiBlitz3.ab2@27367>     WZDisable "CHECK_OVERFLOW"                           ;                "
000475FE <AmiBlitz3.ab2@27368>     BTST #7,use_debugger                                 ; check status
00047602 <AmiBlitz3.ab2@27369>     BEQ 'nod
0004760A <AmiBlitz3.ab2@27370>     var = 1                                              ; yes runtime Debugging
0004762E <AmiBlitz3.ab2@27371>     WZEnable "AUTORUN"                                   ; enable all Debugger settings  tomsmart1
00047652 <AmiBlitz3.ab2@27372>     WZEnable "CHECK_INTERRUPT"                           ;               "
00047676 <AmiBlitz3.ab2@27373>     WZEnable "CHECK_ASSEMBLER"                           ;               "
0004769A <AmiBlitz3.ab2@27374>     WZEnable "CHECK_OVERFLOW"                            ;               "
000476D2 <AmiBlitz3.ab2@27377>     WZPrint "DEBUG",var
000476DA <AmiBlitz3.ab2@27378>     var = 0
000476E2 <AmiBlitz3.ab2@27379>     BTST #7,autorun
000476E6 <AmiBlitz3.ab2@27380>     BEQ 'nod4
000476EE <AmiBlitz3.ab2@27381>     var = 1
00047726 <AmiBlitz3.ab2@27384>     WZPrint "AUTORUN",var
0004772E <AmiBlitz3.ab2@27385>     var.l = 0
00047736 <AmiBlitz3.ab2@27386>     BTST #7,interruptcheck
0004773A <AmiBlitz3.ab2@27387>     BEQ 'nod1
00047742 <AmiBlitz3.ab2@27388>     var = 1
0004777A <AmiBlitz3.ab2@27391>     WZPrint "CHECK_INTERRUPT",var
00047782 <AmiBlitz3.ab2@27392>     var.l = 0
0004778A <AmiBlitz3.ab2@27393>     BTST #7,assemblercheck
0004778E <AmiBlitz3.ab2@27394>     BEQ 'nod2
00047796 <AmiBlitz3.ab2@27395>     var = 1
000477CE <AmiBlitz3.ab2@27398>     WZPrint "CHECK_ASSEMBLER",var
000477D6 <AmiBlitz3.ab2@27399>     var.l = 0
000477DE <AmiBlitz3.ab2@27400>     BTST #7,overflowcheck
000477E2 <AmiBlitz3.ab2@27401>     BEQ 'nod3
000477EA <AmiBlitz3.ab2@27402>     var = 1
00047822 <AmiBlitz3.ab2@27405>     WZPrint "CHECK_OVERFLOW",var
0004782A <AmiBlitz3.ab2@27408>   exit.l = 0
00047832 <AmiBlitz3.ab2@27409>   mess.l = 0
0004783C <AmiBlitz3.ab2@27410>   ev.l = WaitEvent
0004784C <AmiBlitz3.ab2@27411>   WZ_CheckTableEvent{ev}
00047852 <AmiBlitz3.ab2@27412>   Select ev
00047860 <AmiBlitz3.ab2@27414>    Case #IDCMP_IDCMPUPDATE
000478A0 <AmiBlitz3.ab2@27415>     Select LCase$(WZGadName)
000478C4 <AmiBlitz3.ab2@27417>      Case "autorun"
000478D2 <AmiBlitz3.ab2@27418>        If WZInput
000478DA <AmiBlitz3.ab2@27419>          BSET #7,autorun
000478E0 <AmiBlitz3.ab2@27420>        Else
000478E8 <AmiBlitz3.ab2@27421>          BCLR #7,autorun
00047912 <AmiBlitz3.ab2@27424>      Case "check_interrupt"
00047920 <AmiBlitz3.ab2@27425>        If WZInput
00047928 <AmiBlitz3.ab2@27426>          BSET #7,interruptcheck
0004792E <AmiBlitz3.ab2@27427>        Else
00047936 <AmiBlitz3.ab2@27428>          BCLR #7,interruptcheck
00047960 <AmiBlitz3.ab2@27431>      Case "check_assembler"
0004796E <AmiBlitz3.ab2@27432>        If WZInput
00047976 <AmiBlitz3.ab2@27433>          BSET #7,assemblercheck
0004797C <AmiBlitz3.ab2@27434>        Else
00047984 <AmiBlitz3.ab2@27435>          BCLR #7,assemblercheck
000479AE <AmiBlitz3.ab2@27438>      Case "check_overflow"
000479BC <AmiBlitz3.ab2@27439>        If WZInput
000479C4 <AmiBlitz3.ab2@27440>          BSET #7,overflowcheck
000479CA <AmiBlitz3.ab2@27441>        Else
000479D2 <AmiBlitz3.ab2@27442>          BCLR #7,overflowcheck
000479FC <AmiBlitz3.ab2@27445>      Case "residents"
00047A26 <AmiBlitz3.ab2@27447>      Case "stacksize"                                   ; stacksize changed  tomsmart1
00047A30 <AmiBlitz3.ab2@27448>        tempsize.l=WZInput                               ; save the valu to a temporay variable  tomsmart1
00047A42 <AmiBlitz3.ab2@27449>        If tempsize >= #MIN_STACKSIZE                    ; check size  tomsmart1
00047A52 <AmiBlitz3.ab2@27450>          Poke.l ?stacksize,tempsize                     ; save it.  tomsmart1
00047A58 <AmiBlitz3.ab2@27451>        Else                                             ; its not big enough  tomsmart1
00047A60 <AmiBlitz3.ab2@27452>          tempsize = #MIN_STACKSIZE                      ; set it to the min size  tomsmart1
00047A70 <AmiBlitz3.ab2@27453>          Poke.l ?stacksize,tempsize                     ; save it  tomsmart1
00047AA8 <AmiBlitz3.ab2@27454>          WZPrint "STACKSIZE",tempsize                   ; print it  tomsmart1
00047AD2 <AmiBlitz3.ab2@27457>      Case "stringbuffer"
00047AEE <AmiBlitz3.ab2@27459>        Poke.l ?stringbuffer,WZInput
00047AF6 <AmiBlitz3.ab2@27460>        mess = $6
00047B20 <AmiBlitz3.ab2@27462>      Case "debug"
00047B2E <AmiBlitz3.ab2@27463>        If WZInput
00047B36 <AmiBlitz3.ab2@27464>          BSET #7,use_debugger                           ; yes runtime Debugging
00047B5A <AmiBlitz3.ab2@27465>          WZEnable "AUTORUN"                             ; enable all Debugger settings  tomsmart1
00047B7E <AmiBlitz3.ab2@27466>          WZEnable "CHECK_INTERRUPT"                     ;               "
00047BA2 <AmiBlitz3.ab2@27467>          WZEnable "CHECK_ASSEMBLER"                     ;               "
00047BC6 <AmiBlitz3.ab2@27468>          WZEnable "CHECK_OVERFLOW"                      ;               "
00047BCC <AmiBlitz3.ab2@27469>        Else
00047BD4 <AmiBlitz3.ab2@27470>          BCLR #7,use_debugger                           ; no runtime Debugging
00047BF8 <AmiBlitz3.ab2@27471>          WZDisable "AUTORUN"                            ; disable all Debugger settings  tomsmart1
00047C1C <AmiBlitz3.ab2@27472>          WZDisable "CHECK_INTERRUPT"                    ;                "
00047C40 <AmiBlitz3.ab2@27473>          WZDisable "CHECK_ASSEMBLER"                    ;                "
00047C64 <AmiBlitz3.ab2@27474>          WZDisable "CHECK_OVERFLOW"                     ;                "
00047C6C <AmiBlitz3.ab2@27476>        mess = $a
00047C96 <AmiBlitz3.ab2@27478>      Case "icon"
00047CA4 <AmiBlitz3.ab2@27479>        If WZInput
00047CAC <AmiBlitz3.ab2@27480>          BSET #7,create_iconfile
00047CB2 <AmiBlitz3.ab2@27481>        Else
00047CBA <AmiBlitz3.ab2@27482>          BCLR #7,create_iconfile
00047CC2 <AmiBlitz3.ab2@27484>        mess = $9
00047CEC <AmiBlitz3.ab2@27486>      Case "smallest"
00047CFA <AmiBlitz3.ab2@27487>        If WZInput
00047D02 <AmiBlitz3.ab2@27488>          BSET #7,make_smallestcode
00047D08 <AmiBlitz3.ab2@27489>        Else
00047D10 <AmiBlitz3.ab2@27490>          BCLR #7,make_smallestcode
00047D18 <AmiBlitz3.ab2@27492>        mess = $f
00047D42 <AmiBlitz3.ab2@27494>      Case "debuginfo"                                      ; check "Create Debug info" (Symbols)
00047D50 <AmiBlitz3.ab2@27495>        If WZInput
00047D58 <AmiBlitz3.ab2@27496>          BSET #7,link_debuginfo
00047D5E <AmiBlitz3.ab2@27497>        Else
00047D66 <AmiBlitz3.ab2@27498>          BCLR #7,link_debuginfo
00047D6E <AmiBlitz3.ab2@27500>        mess = $10
00047D98 <AmiBlitz3.ab2@27502>      Case "dbgfile"                                        ; check "Create .dbg File"   tomsmart1
00047DA6 <AmiBlitz3.ab2@27503>        If WZInput
00047DDC <AmiBlitz3.ab2@27504>          !ComData_SetW{comWord_CreateDebugFile,#1}         ; yes we create it  tomsmart1
00047DE2 <AmiBlitz3.ab2@27505>        Else
00047E18 <AmiBlitz3.ab2@27506>          !ComData_SetW{comWord_CreateDebugFile,#0}         ; no we don't  tomsmart1
00047E42 <AmiBlitz3.ab2@27509>      Case "cr"                                             ; compile and run in compiler prefs
00047E52 <AmiBlitz3.ab2@27510>       mess = $12 : exit = 1
00047E7C <AmiBlitz3.ab2@27512>      Case "ce"                                             ; compile und create exe in compile prefs
00047EA8 <AmiBlitz3.ab2@27513>       Poke$ (?exefilename),""
00047EB8 <AmiBlitz3.ab2@27514>       mess = $13 : exit = 1
00047EE2 <AmiBlitz3.ab2@27520>      Case "cancel"
00047EF2 <AmiBlitz3.ab2@27521>       mess.l = $14 : exit = 1
00047F1C <AmiBlitz3.ab2@27523>      Case "ok"
00047F2C <AmiBlitz3.ab2@27524>       mess = $11 : exit = 1
00047F3A <AmiBlitz3.ab2@27526>     End Select
00047F3C <AmiBlitz3.ab2@27528>   End Select
00047F64 <AmiBlitz3.ab2@27530>   If ev = $200 Then mess = $11:exit = 1
00047F76 <AmiBlitz3.ab2@27531>   If mess = $11
00047FA8 <AmiBlitz3.ab2@27532>     For i = 1 To Peek.w(?number_of_objects)
00047FFE <AmiBlitz3.ab2@27533>       a$ = WZ_GetCell{"OBJECTS",i,2}
00048054 <AmiBlitz3.ab2@27534>       i2 = Val(a$):If i2 = 0 Then i2 = 1
00048064 <AmiBlitz3.ab2@27535>       Poke.w ?maxobjects_value,i2
0004807A <AmiBlitz3.ab2@27536>       Poke.w ?maxobject_pos,i-1
00048080 <AmiBlitz3.ab2@27537>       Gosub storemaxobjects
00048090 <AmiBlitz3.ab2@27538>     Next
00048096 <AmiBlitz3.ab2@27539>     Gosub stringtores
000480A8 <AmiBlitz3.ab2@27542>   If exit = 1
000480B0 <AmiBlitz3.ab2@27543>     MOVE.w #$FFFF,state_of_residents                       ;load resident
000480D2 <AmiBlitz3.ab2@27544>     WZ_KillTable{"OBJECTS"}
000480E6 <AmiBlitz3.ab2@27545>     WZCloseWindow 1
000480EE <AmiBlitz3.ab2@27546>     winon = 0
000480F2 <AmiBlitz3.ab2@27549>   GetD0 mess
00048110 <AmiBlitz3.ab2@27550>   !asm
00048112 <AmiBlitz3.ab2@27551>   MOVEQ #-1,d7
00048114 <AmiBlitz3.ab2@27552>   MOVE.l d0,d6
00048116 <AmiBlitz3.ab2@27553> Return
0004813E <AmiBlitz3.ab2@27557>   i.l = WZInput("RESIDENTS")
00048166 <AmiBlitz3.ab2@27558>   a$ = Peek$(i)
00048192 <AmiBlitz3.ab2@27559>   InitArgParse a$
0004819C <AmiBlitz3.ab2@27560>   var.l = ?residents_table
000481C6 <AmiBlitz3.ab2@27561>   For i = 0 To 7
000481EC <AmiBlitz3.ab2@27562>     p$ = NextArgChar$ ($a)
00048222 <AmiBlitz3.ab2@27563>     Poke$ var,p$
00048230 <AmiBlitz3.ab2@27564>     var + $44
00048240 <AmiBlitz3.ab2@27565>   Next
00048242 <AmiBlitz3.ab2@27566> Return
00048248 <AmiBlitz3.ab2@27570>   MOVE.w maxobject_pos,D5                                  ;max objects 1. visible
0004824E <AmiBlitz3.ab2@27571>   LEA maxobjects_value,A3                                  ;current value
00048254 <AmiBlitz3.ab2@27572>   MOVEA.l libpointer,A2
00048258 <AmiBlitz3.ab2@27575>   CMPA.w #$0,A2
0004825C <AmiBlitz3.ab2@27576>   BEQ.w menu4c__igotb
0004825E <AmiBlitz3.ab2@27577>   MOVEA.l A2,A1
00048262 <AmiBlitz3.ab2@27578>   ADDA.l $12(A1),A1
00048266 <AmiBlitz3.ab2@27579>   TST.w -$2(A1)
0004826A <AmiBlitz3.ab2@27580>   BEQ.w JL_0_FFF6b
0004826C <AmiBlitz3.ab2@27581>   SUBQ.w #1,D5
00048270 <AmiBlitz3.ab2@27582>   BMI.w JL_0_FFFCb
00048272 <AmiBlitz3.ab2@27585>   MOVEA.l (A2),A2
00048276 <AmiBlitz3.ab2@27586> BRA.w JL_0_FFDAb
0004827A <AmiBlitz3.ab2@27589>   MOVE.w (A3),-$4(A1)
0004827C <AmiBlitz3.ab2@27592> RTS
00048282 <AmiBlitz3.ab2@27596>   MOVE.w debugnest,d0
00048288 <AmiBlitz3.ab2@27597>   LEA storedebugmode, a0
00048290 <AmiBlitz3.ab2@27598>   MOVE.b 0(a0,d0.w),debugmode
00048296 <AmiBlitz3.ab2@27599>   TST.w debugnest
0004829A <AmiBlitz3.ab2@27600>   BEQ JUMP_unpairrunerrs
000482A0 <AmiBlitz3.ab2@27601>   SUBQ.w #1,debugnest
000482A2 <AmiBlitz3.ab2@27602> RTS
000482A8 <AmiBlitz3.ab2@27605> JMP runerrsoverflow
000482AE <AmiBlitz3.ab2@27608> JMP unpairrunerrs
000482B6 <AmiBlitz3.ab2@27612>   BCHG #$7,use_debugger
000482BE <AmiBlitz3.ab2@27614>   BTST #$7,use_debugger
000482C2 <AmiBlitz3.ab2@27615>   BNE 'debugon
000482C8 <AmiBlitz3.ab2@27616>   CLR.w debugmode
000482CC <AmiBlitz3.ab2@27617> BRA.b 'debugoff
000482D2 <AmiBlitz3.ab2@27620>   SNE debugmode
000482D4 <AmiBlitz3.ab2@27623>   MOVE.l a0,-(a7)
0004830C <AmiBlitz3.ab2@27626>   !ComData_SetB{comByte_DebugMode,debugmode}
0004830E <AmiBlitz3.ab2@27631>   MOVE.l (a7)+,a0
00048310 <AmiBlitz3.ab2@27632> RTS
00048318 <AmiBlitz3.ab2@27637>   BTST #$7,use_debugger
0004831C <AmiBlitz3.ab2@27638>   BNE 'debugon
00048322 <AmiBlitz3.ab2@27639>   CLR.w debugmode
00048326 <AmiBlitz3.ab2@27640> BRA.b 'debugoff
0004832C <AmiBlitz3.ab2@27643>   SNE debugmode
0004832E <AmiBlitz3.ab2@27646> RTS
00048334 <AmiBlitz3.ab2@27650>   ADDQ.w #1,debugnest
0004833A <AmiBlitz3.ab2@27651>   MOVE.w debugnest,d0
0004833E <AmiBlitz3.ab2@27652>   CMP.w #18,d0
00048342 <AmiBlitz3.ab2@27653>    BGE JUMP_runerrsoverflow
00048348 <AmiBlitz3.ab2@27654>   LEA storedebugmode, a0
00048350 <AmiBlitz3.ab2@27655>   MOVE.b debugmode,0( a0,d0.w)
00048356 <AmiBlitz3.ab2@27658>   SF debugmode
00048358 <AmiBlitz3.ab2@27659> RTS
000483D8 <AmiBlitz3.ab2@27662> usedpath:  Ds.l 32
000483DC <AmiBlitz3.ab2@27666>   BEQ.w JUMP_syntaxerr
000483E2 <AmiBlitz3.ab2@27667>   LEA lastpath,A0
000483E6 <AmiBlitz3.ab2@27668>   MOVEM.l a0-a1/d0,-(a7)
000483EC <AmiBlitz3.ab2@27669>   LEA lastpath2,a1
000483EE <AmiBlitz3.ab2@27672>     MOVE.b (a0)+,(a1)+
000483F2 <AmiBlitz3.ab2@27673>   BNE 'l2
000483F6 <AmiBlitz3.ab2@27674>   MOVEM.l (a7)+,a0-a1/d0
000483FA <AmiBlitz3.ab2@27675>   LEA usedpath(PC),A0
000483FE <AmiBlitz3.ab2@27676>   MOVEM.l a0-a1/d0,-(a7)
00048404 <AmiBlitz3.ab2@27677>   LEA lastpath,a1
00048406 <AmiBlitz3.ab2@27680>     MOVE.b (a0)+,(a1)+
0004840A <AmiBlitz3.ab2@27681>   BNE 'l1
0004840E <AmiBlitz3.ab2@27682>   MOVEM.l (a7)+,a0-a1/d0
00048410 <AmiBlitz3.ab2@27685>   TST.w D0
00048414 <AmiBlitz3.ab2@27686>    BMI.w JUMP_syntaxerr
00048416 <AmiBlitz3.ab2@27687>   MOVE.b D0,(A0)+
0004841A <AmiBlitz3.ab2@27688>   BSR.w JUMP_get1bytemain
0004841E <AmiBlitz3.ab2@27689>    BNE.w JL_0_4AA8
00048422 <AmiBlitz3.ab2@27690>   MOVE.b #$2,(A0)
00048424 <AmiBlitz3.ab2@27691> RTS
00048428 <AmiBlitz3.ab2@27695>   BEQ.w JUMP_syntaxerr
0004842E <AmiBlitz3.ab2@27696>   LEA path2,A0
00048430 <AmiBlitz3.ab2@27706>   TST.w D0
00048434 <AmiBlitz3.ab2@27707>    BMI.w JUMP_syntaxerr
00048436 <AmiBlitz3.ab2@27708>   MOVE.b D0,(A0)+
0004843A <AmiBlitz3.ab2@27709>   BSR.w JUMP_get1bytemain
0004843E <AmiBlitz3.ab2@27710>    BNE.w JL_0_4AA8b
00048442 <AmiBlitz3.ab2@27711>   MOVE.b #$2,(A0)
00048444 <AmiBlitz3.ab2@27712> RTS
0004844A <AmiBlitz3.ab2@27721> JMP errormsg_reg
00048454 <AmiBlitz3.ab2@27725>   MOVE.l #$f22d6780,fpucodeglobal
0004845E <AmiBlitz3.ab2@27726>   MOVE.l #$f22c6780,fpucodelocal
00048464 <AmiBlitz3.ab2@27727>   LEA regtable,a0
0004846E <AmiBlitz3.ab2@27728>   MOVE.l #7,maxregs
00048470 <AmiBlitz3.ab2@27731>   MOVE.l (a0),d0
00048474 <AmiBlitz3.ab2@27732>   BEQ 'e1
00048476 <AmiBlitz3.ab2@27733>   CLR.l (a0)
0004847A <AmiBlitz3.ab2@27734>   MOVE.w 4(a0),d0
00048484 <AmiBlitz3.ab2@27735>   MOVE.l fpucodeglobal,fpucode
00048488 <AmiBlitz3.ab2@27736>   TST.w 6(a0)
0004848C <AmiBlitz3.ab2@27737>   BEQ 'glob
00048496 <AmiBlitz3.ab2@27738>   MOVE.l fpucodelocal,fpucode
0004849C <AmiBlitz3.ab2@27741>   MOVE.l fpucode,d1
000484A2 <AmiBlitz3.ab2@27742>   JSR writelong
000484AC <AmiBlitz3.ab2@27743>   SUB.l #$80,fpucodelocal
000484B6 <AmiBlitz3.ab2@27744>   SUB.l #$80,fpucodeglobal
000484B8 <AmiBlitz3.ab2@27745>   MOVE.w d0,d1
000484BE <AmiBlitz3.ab2@27746>   JSR writeword
000484C0 <AmiBlitz3.ab2@27747>   ADDQ #8,a0
000484C4 <AmiBlitz3.ab2@27748> BRA 'again
000484C6 <AmiBlitz3.ab2@27751> RTS
000484CC <AmiBlitz3.ab2@27758> JMP notypeerr
000484D2 <AmiBlitz3.ab2@27761> JMP illtypeerr
000484DC <AmiBlitz3.ab2@27764>   MOVE.l #$f22d4780,fpucodeglobal
000484E6 <AmiBlitz3.ab2@27765>   MOVE.l #$f22c4780,fpucodelocal
000484EC <AmiBlitz3.ab2@27766>   LEA regtable,a0
000484EE <AmiBlitz3.ab2@27767>   TST.l (a0)
000484F2 <AmiBlitz3.ab2@27768>    BNE JUMP_errormsg_reg
000484F4 <AmiBlitz3.ab2@27769>   MOVE.l d7,-(a7)
000484F6 <AmiBlitz3.ab2@27770>   SUBQ.l #1,a5
000484FC <AmiBlitz3.ab2@27773>   JSR getparameter2
00048500 <AmiBlitz3.ab2@27774>   BEQ.w 'nopar
00048506 <AmiBlitz3.ab2@27775>   MOVE.w d0,lastchar
0004850C <AmiBlitz3.ab2@27776>   JSR findvariable
00048510 <AmiBlitz3.ab2@27777>   BNE 'islocal
0004851A <AmiBlitz3.ab2@27778>   MOVE.l fpucodeglobal,fpucode
00048524 <AmiBlitz3.ab2@27779>   MOVE.l #3,maxregs
00048526 <AmiBlitz3.ab2@27780>   MOVEQ #0,d7
0004852E <AmiBlitz3.ab2@27783>   CMP.l #newtype_float,$a(a2)                              ;is float type
00048532 <AmiBlitz3.ab2@27784>    BEQ 'doit
0004853A <AmiBlitz3.ab2@27785>   CMP.l #newtype_double,$a(a2)
0004853E <AmiBlitz3.ab2@27786>    BNE JUMP_illtypeerr
00048544 <AmiBlitz3.ab2@27789>   LEA regtable,a0
00048546 <AmiBlitz3.ab2@27790>   MOVEQ #0,d0
00048548 <AmiBlitz3.ab2@27793>   TST.l (a0)
0004854C <AmiBlitz3.ab2@27794>    BEQ 'store
0004854E <AmiBlitz3.ab2@27795>   ADDQ.l #4,d0
00048550 <AmiBlitz3.ab2@27796>   ADDQ.l #8,a0
00048556 <AmiBlitz3.ab2@27797>   CMP.l #16,d0
0004855A <AmiBlitz3.ab2@27798>    BCS 'loop
00048564 <AmiBlitz3.ab2@27799>   MOVE.l #2,maxregs
0004856A <AmiBlitz3.ab2@27800>   CMP.l #20,d0
0004856E <AmiBlitz3.ab2@27801>    BCS 'loop
00048578 <AmiBlitz3.ab2@27802>   MOVE.l #1,maxregs
0004857E <AmiBlitz3.ab2@27803>   CMP.l #24,d0
00048582 <AmiBlitz3.ab2@27804>    BCS 'loop
00048588 <AmiBlitz3.ab2@27805> JMP toovarerr
0004858E <AmiBlitz3.ab2@27808>   TST.b fpu
00048592 <AmiBlitz3.ab2@27809>    BEQ 'nofpu
00048594 <AmiBlitz3.ab2@27810>   MOVE.l a2,(a0)
0004859A <AmiBlitz3.ab2@27811>   MOVE.w 4(a2),4(a0)
0004859E <AmiBlitz3.ab2@27812>   MOVE.w d7,6(a0)
000485A4 <AmiBlitz3.ab2@27813>   MOVE.l fpucode,d1
000485AE <AmiBlitz3.ab2@27814>   SUB.l #$80,fpucodeglobal
000485B8 <AmiBlitz3.ab2@27815>   SUB.l #$80,fpucodelocal
000485BE <AmiBlitz3.ab2@27816>   JSR writelong
000485C2 <AmiBlitz3.ab2@27817>   MOVE.w 4(a2),d1
000485C8 <AmiBlitz3.ab2@27818>   JSR writeword
000485CE <AmiBlitz3.ab2@27821>   MOVE.w lastchar,d0
000485D2 <AmiBlitz3.ab2@27822>   CMP.w #":",d0
000485D6 <AmiBlitz3.ab2@27823>    BEQ 'nopar
000485D8 <AmiBlitz3.ab2@27824>   TST.w d0
000485DC <AmiBlitz3.ab2@27825>    BEQ 'nopar
000485E0 <AmiBlitz3.ab2@27826>   CMP.w #",",d0
000485E4 <AmiBlitz3.ab2@27827>   BNE JUMP_syntaxerr
000485E8 <AmiBlitz3.ab2@27828> BRA 'l2
000485EA <AmiBlitz3.ab2@27831>    MOVE.l (a7)+,d7
000485EC <AmiBlitz3.ab2@27832> RTS
000485EE <AmiBlitz3.ab2@27835>   MOVEQ #1,d7
000485F6 <AmiBlitz3.ab2@27836>   MOVE.b #1,newvariable
000485FC <AmiBlitz3.ab2@27837>   LEA firstlocal,a2
00048602 <AmiBlitz3.ab2@27838>   JSR findvariable
00048608 <AmiBlitz3.ab2@27839>   CLR.b newvariable
0004860E <AmiBlitz3.ab2@27840>   CMP.l #-1,d0
00048612 <AmiBlitz3.ab2@27841>   BEQ.w JUMP_notypeerr2
0004861C <AmiBlitz3.ab2@27842>   MOVE.l fpucodelocal,fpucode
00048620 <AmiBlitz3.ab2@27843> BRA 'go
00048624 <AmiBlitz3.ab2@27846>   CMP.b #".",d0
00048628 <AmiBlitz3.ab2@27847>    BNE 'l1
0004862C <AmiBlitz3.ab2@27848>   BSR JUMP_get1bytemain
00048630 <AmiBlitz3.ab2@27849>   BSR JUMP_get1bytemain
00048634 <AmiBlitz3.ab2@27852>   ORI .b #$20,d0
00048638 <AmiBlitz3.ab2@27853>   CMP.b #"d",d0
0004863C <AmiBlitz3.ab2@27854>    BNE JUMP_illeaerr
00048640 <AmiBlitz3.ab2@27855>   BSR JUMP_get1bytemain
00048644 <AmiBlitz3.ab2@27856>   SUB.b #$30,d0
00048648 <AmiBlitz3.ab2@27857>   CMP.b #$7,d0
0004864C <AmiBlitz3.ab2@27858>    BGT JUMP_syntaxerr
00048650 <AmiBlitz3.ab2@27859>   MOVE.w #$49c0,d1
00048652 <AmiBlitz3.ab2@27860>   ADD.b d0,d1
00048658 <AmiBlitz3.ab2@27861>   JSR writeword
0004865C <AmiBlitz3.ab2@27862>   BSR JUMP_get1bytemain
0004865E <AmiBlitz3.ab2@27863> RTS
00048664 <AmiBlitz3.ab2@27867>   LEA lastpath,a0
00048668 <AmiBlitz3.ab2@27868>   LEA usedpath(PC),A1
0004866A <AmiBlitz3.ab2@27871>     MOVE.b (a0)+,(a1)+
0004866E <AmiBlitz3.ab2@27872>   BNE 'l1
00048674 <AmiBlitz3.ab2@27874>   LEA lastpath2,a0
0004867A <AmiBlitz3.ab2@27875>   LEA lastpath,A1
0004867C <AmiBlitz3.ab2@27878>     MOVE.b (a0)+,(a1)+
00048680 <AmiBlitz3.ab2@27879>   BNE 'l2
00048682 <AmiBlitz3.ab2@27880> RTS
00048688 <AmiBlitz3.ab2@27884>   TST.b objectcount
0004868C <AmiBlitz3.ab2@27885>   BEQ 'l2a
00048692 <AmiBlitz3.ab2@27886> JMP macnesterr
00048698 <AmiBlitz3.ab2@27889>   LEA devo,a0
0004869E <AmiBlitz3.ab2@27890>   ADDQ.b #1,objectcount
000486A2 <AmiBlitz3.ab2@27891>   MOVEM.l a1/d2,-(a7)
000486A8 <AmiBlitz3.ab2@27892>   LEA ptr_parameterstore,a1
000486AA <AmiBlitz3.ab2@27895>     MOVE.b (a0)+,(a1)+
000486AE <AmiBlitz3.ab2@27896>   BNE 'l1
000486B0 <AmiBlitz3.ab2@27898>   MOVEQ #13,d2
000486B6 <AmiBlitz3.ab2@27899>   JSR findlabel2
000486BA <AmiBlitz3.ab2@27900>   BNE 'd
000486BE <AmiBlitz3.ab2@27901>   TST.l 8(a2)
000486C2 <AmiBlitz3.ab2@27902>   BEQ 'd
000486C8 <AmiBlitz3.ab2@27903>   SUBQ.b #1,objectcount
000486CC <AmiBlitz3.ab2@27904>   MOVEM.l (a7)+,a1/d2
000486D2 <AmiBlitz3.ab2@27905>   JSR skiprest
000486DA <AmiBlitz3.ab2@27906>   MOVE.b #1,developobject
000486DC <AmiBlitz3.ab2@27907> RTS
000486E0 <AmiBlitz3.ab2@27910>   MOVEM.l (a7)+,a1/d2
000486E8 <AmiBlitz3.ab2@27911>   MOVE.b #1,resdisable
000486EE <AmiBlitz3.ab2@27914>   CLR.b developobject
000486F4 <AmiBlitz3.ab2@27915> JMP do_Macro
000486FA <AmiBlitz3.ab2@27919> JMP illeaerr
00048700 <AmiBlitz3.ab2@27923>   CLR.b typecheck
00048706 <AmiBlitz3.ab2@27924>   CLR.b declare
0004870C <AmiBlitz3.ab2@27925>   CLR.b declare2
00048710 <AmiBlitz3.ab2@27926>   SUB.b #$30,d0
00048714 <AmiBlitz3.ab2@27927>   BTST #0,d0
00048718 <AmiBlitz3.ab2@27928>   BEQ 'l1
00048720 <AmiBlitz3.ab2@27929>   MOVE.b #1,declare
00048724 <AmiBlitz3.ab2@27932>   BTST #1,d0
00048728 <AmiBlitz3.ab2@27933>   BEQ 'l2
00048730 <AmiBlitz3.ab2@27934>   MOVE.b #1,declare2
00048734 <AmiBlitz3.ab2@27937>   BTST #2,d0
00048738 <AmiBlitz3.ab2@27938>   BEQ 'l3
00048740 <AmiBlitz3.ab2@27939>   MOVE.b #1,typecheck
00048744 <AmiBlitz3.ab2@27942>   BSR.w JUMP_get1bytemain
00048746 <AmiBlitz3.ab2@27943> RTS
0004874C <AmiBlitz3.ab2@27946> JMP get1bytemain
0004874E <AmiBlitz3.ab2@27951>   MOVE.l d2,-(a7)                                          ; D2 -> stack
00048750 <AmiBlitz3.ab2@27952>   ADDQ #1,a5
00048752 <AmiBlitz3.ab2@27953>   MOVE.l a5,-(a7)
0004877C <AmiBlitz3.ab2@27954>   !basic
00048782 <AmiBlitz3.ab2@27955>   MOVE.l (a7)+,d0 : _myD0.l = PutD0
0004878C <AmiBlitz3.ab2@27956>   If _myD0
000487CC <AmiBlitz3.ab2@27957>     newconst$ = UCase$(Peek.s(_myD0))
000487D2 <AmiBlitz3.ab2@27958>   Else
00048800 <AmiBlitz3.ab2@27959>     error{"INTERNAL: invalid pointer in check_newconstants!"}
00048828 <AmiBlitz3.ab2@27960>     nwconst$="xxx"
00048850 <AmiBlitz3.ab2@27962>   condata$ =""
00048860 <AmiBlitz3.ab2@27963>   Poke.b ?skip_bytes,0
000488BC <AmiBlitz3.ab2@27964>   If Left$(newconst$,2) = "__"
00048916 <AmiBlitz3.ab2@27965>     Select Mid$(newconst$,3,4)
0004893A <AmiBlitz3.ab2@27967>      Case "DATE"
00048994 <AmiBlitz3.ab2@27968>       Select Mid$(newconst$,3,6)
000489D2 <AmiBlitz3.ab2@27969>       Case "DATE__" : DateFormat 1 : Poke.b ?skip_bytes,8
00048A16 <AmiBlitz3.ab2@27970>       Case "DATE_G" : DateFormat 0 : Poke.b ?skip_bytes,12
00048A24 <AmiBlitz3.ab2@27971>       End Select
00048A32 <AmiBlitz3.ab2@27972>       i.l=SystemDate
00048A58 <AmiBlitz3.ab2@27973>       condata$ = Date$ (i)
00048AD6 <AmiBlitz3.ab2@27974>       condata$ = Replace$(condata$,"/",".")
00048B00 <AmiBlitz3.ab2@27976>      Case "VER_"
00048B10 <AmiBlitz3.ab2@27979>       actual_version.l = Peek.l(?versioninformation)
00048B20 <AmiBlitz3.ab2@27980>       actual_build.l   = Peek.l(?number_of_builds)
00048B44 <AmiBlitz3.ab2@27982>       Format ""
00048B9E <AmiBlitz3.ab2@27983>       Select Mid$(newconst$,3,9)
00048BC2 <AmiBlitz3.ab2@27985>        Case "VER_MAJOR"
00048BFE <AmiBlitz3.ab2@27986>         condata$ = Str$(actual_version LSR 24)
00048C28 <AmiBlitz3.ab2@27988>        Case "VER_MINOR"
00048C6C <AmiBlitz3.ab2@27989>         condata$ = Str$((actual_version LSL 8) LSR 24)
00048C96 <AmiBlitz3.ab2@27991>        Case "VER_PATCH"
00048CDA <AmiBlitz3.ab2@27992>         condata$ = Str$((actual_version LSL 16) LSR 24 )
00048D04 <AmiBlitz3.ab2@27994>        Case "VER_BUILD"
00048D28 <AmiBlitz3.ab2@27995>         Format ""
00048D5C <AmiBlitz3.ab2@27996>         condata$ = Str$(actual_build)
00048D62 <AmiBlitz3.ab2@27998>        Default
00048D8A <AmiBlitz3.ab2@27999>         condata$ = "{unknown compiler constant}"
00048D98 <AmiBlitz3.ab2@28001>       End Select
00048DBC <AmiBlitz3.ab2@28002>       Format ""
00048DCC <AmiBlitz3.ab2@28003>       Poke.b ?skip_bytes,11
00048DF6 <AmiBlitz3.ab2@28005>      Case "THIS"
00048E50 <AmiBlitz3.ab2@28006>       Select Mid$(newconst$,3,9)
00048E74 <AmiBlitz3.ab2@28008>        Case "THIS_FUNC"
00048E84 <AmiBlitz3.ab2@28009>         Poke.b ?skip_bytes,15
00048EA4 <AmiBlitz3.ab2@28010>         If Peek.l(?currentfunction)<>0
00048EF0 <AmiBlitz3.ab2@28011>           condata$ = Peek.s(Peek.l(?currentfunction) + 32 + #funcentry_extend + 1)
00048EF6 <AmiBlitz3.ab2@28012>         Else
00048F1E <AmiBlitz3.ab2@28013>           condata$ = "GLOBAL"
00048F48 <AmiBlitz3.ab2@28016>        Case "THIS_INCL"
00048F58 <AmiBlitz3.ab2@28017>         Poke.b ?skip_bytes,14
00048F78 <AmiBlitz3.ab2@28018>         If Peek.l(?includetemp2)<>0
00048FC6 <AmiBlitz3.ab2@28019>           condata$ = dos_FilePart{Peek$(?includetemp2)}
00048FF0 <AmiBlitz3.ab2@28022>        Case "THIS_POIN"
00049000 <AmiBlitz3.ab2@28023>         Poke.b ?skip_bytes,14
00049020 <AmiBlitz3.ab2@28024>         If Peek.l(?currentfunction)<>0
0004904E <AmiBlitz3.ab2@28025>           condata$ = Hex$(Peek.l(?currentfunction))
0004905C <AmiBlitz3.ab2@28028>       End Select
00049086 <AmiBlitz3.ab2@28030>      Case "CODE"
00049096 <AmiBlitz3.ab2@28031>       Poke.b ?skip_bytes,10
000490F8 <AmiBlitz3.ab2@28032>       If Mid$(newconst$,3,8) = "CODELINE"
00049134 <AmiBlitz3.ab2@28033>         condata$ = Str$(Peek.l(?globallinecount))
00049142 <AmiBlitz3.ab2@28036>     End Select
00049148 <AmiBlitz3.ab2@28038>   Else
0004919C <AmiBlitz3.ab2@28039>     Select Left$(newconst$,1)
000491C0 <AmiBlitz3.ab2@28041>      Case "R"
000491D0 <AmiBlitz3.ab2@28042>       Poke.b ?skip_bytes,3
00049248 <AmiBlitz3.ab2@28043>       For i = 1 To Vallong(Mid$(newconst$,2,2))
000492C8 <AmiBlitz3.ab2@28044>         condata$ = condata$ + Mid$(newconst$,4,1)
000492D8 <AmiBlitz3.ab2@28045>       Next
00049302 <AmiBlitz3.ab2@28047>      Case "N"
00049312 <AmiBlitz3.ab2@28048>       Poke.b ?skip_bytes,1
00049336 <AmiBlitz3.ab2@28049>       condata$ = Chr$(10)
0004933C <AmiBlitz3.ab2@28051>      Default
0004934E <AmiBlitz3.ab2@28052>       char1.b = Peek.b(&newconst$)
00049366 <AmiBlitz3.ab2@28053>       char2.b = Peek.b(&newconst$+1)
00049372 <AmiBlitz3.ab2@28054>       nibble1.l = -1
0004937E <AmiBlitz3.ab2@28055>       nibble2.l = -1
000493C2 <AmiBlitz3.ab2@28057>       If (char1>=@"0" AND char1<=@"9") Then nibble1 = char1-@"0"
00049406 <AmiBlitz3.ab2@28058>       If (char2>=@"0" AND char2<=@"9") Then nibble2 = char2-@"0"
00049450 <AmiBlitz3.ab2@28060>       If (char1>=@"a" AND char1<=@"f") Then nibble1 = char1-@"a" + 10
0004949A <AmiBlitz3.ab2@28061>       If (char2>=@"a" AND char2<=@"f") Then nibble2 = char2-@"a" + 10
000494E4 <AmiBlitz3.ab2@28063>       If (char1>=@"A" AND char1<=@"F") Then nibble1 = char1-@"A" + 10
0004952E <AmiBlitz3.ab2@28064>       If (char2>=@"A" AND char2<=@"F") Then nibble2 = char2-@"A" + 10
00049554 <AmiBlitz3.ab2@28066>       If nibble1>=0 AND nibble2>=0
0004956A <AmiBlitz3.ab2@28067>         newchar.l = (nibble1 LSL 4) + (nibble2)
0004958E <AmiBlitz3.ab2@28068>         condata$ = Chr$(newchar)
0004959E <AmiBlitz3.ab2@28069>         Poke.b ?skip_bytes,2
000495AC <AmiBlitz3.ab2@28072>     End Select
0004960E <AmiBlitz3.ab2@28074>   If condata$ = "" AND Peek.b(?skip_bytes)=0
00049734 <AmiBlitz3.ab2@28075>     !cout{"detected unknown const: " + newconst$}
00049768 <AmiBlitz3.ab2@28076>     condata$ = newconst$
0004977E <AmiBlitz3.ab2@28079>   GetD0 FLen(condata$)-1                                    ; laenge zielstring -> Stack
00049780 <AmiBlitz3.ab2@28080>   MOVE.l d0,d2
00049782 <AmiBlitz3.ab2@28081>   MOVE.l d2,-(a7)
00049788 <AmiBlitz3.ab2@28083>   GetD0 &condata$                                          ; kopieren des neuen Strings in den Zielstring
0004978A <AmiBlitz3.ab2@28084>   MOVE.l d0,a0
0004978C <AmiBlitz3.ab2@28087>     MOVE.b (a0)+,d1
00049792 <AmiBlitz3.ab2@28088>     JSR pokedata1b
00049796 <AmiBlitz3.ab2@28089>  DBF d2,'l1
000497B4 <AmiBlitz3.ab2@28091>   !asm
000497B6 <AmiBlitz3.ab2@28092>   MOVE.l (a7)+,d0                                          ; laenge Zielstring <- Stack
000497B8 <AmiBlitz3.ab2@28093>   MOVE.l (a7)+,d2                                          ; d2 <-Stack
000497BA <AmiBlitz3.ab2@28094>   ADD.l d0,d2                                              ; eingefuegte chars zu D2 dazu
000497C0 <AmiBlitz3.ab2@28095>   ADD.l #1,d2
000497C6 <AmiBlitz3.ab2@28097>   MOVE.l #0,d0                                             ; a5 um konstantennamen weiterschieben
000497CC <AmiBlitz3.ab2@28098>   MOVE.b skip_bytes,D0
000497CE <AmiBlitz3.ab2@28099>   ADD.l D0,a5
000497D0 <AmiBlitz3.ab2@28100> RTS
000497D0 <internal_commands.ab2@1> INCLUDE "internal_commands.ab2"
000497D4 <internal_commands.ab2@13> INCLUDE "internal_commands.ab2"
000497D6 <internal_commands.ab2@15> INCLUDE "internal_commands.ab2"
000497DE <internal_commands.ab2@16> INCLUDE "internal_commands.ab2"
000497EA <internal_commands.ab2@17> INCLUDE "internal_commands.ab2"
000497EE <internal_commands.ab2@21> INCLUDE "internal_commands.ab2"
000497F0 <internal_commands.ab2@22> INCLUDE "internal_commands.ab2"
000497F4 <internal_commands.ab2@23> INCLUDE "internal_commands.ab2"
0004983D <internal_commands.ab2@24> INCLUDE "internal_commands.ab2"
0004983E <internal_commands.ab2@25> INCLUDE "internal_commands.ab2"
00049842 <internal_commands.ab2@28> INCLUDE "internal_commands.ab2"
00049844 <internal_commands.ab2@29> INCLUDE "internal_commands.ab2"
00049848 <internal_commands.ab2@30> INCLUDE "internal_commands.ab2"
00049864 <internal_commands.ab2@31> INCLUDE "internal_commands.ab2"
00049868 <internal_commands.ab2@35> INCLUDE "internal_commands.ab2"
0004986A <internal_commands.ab2@36> INCLUDE "internal_commands.ab2"
0004986E <internal_commands.ab2@37> INCLUDE "internal_commands.ab2"
000498CB <internal_commands.ab2@38> INCLUDE "internal_commands.ab2"
000498CC <internal_commands.ab2@39> INCLUDE "internal_commands.ab2"
000498D0 <internal_commands.ab2@42> INCLUDE "internal_commands.ab2"
000498D2 <internal_commands.ab2@43> INCLUDE "internal_commands.ab2"
000498D7 <internal_commands.ab2@44> INCLUDE "internal_commands.ab2"
000498E7 <internal_commands.ab2@45> INCLUDE "internal_commands.ab2"
000498E8 <internal_commands.ab2@46> INCLUDE "internal_commands.ab2"
000498EC <internal_commands.ab2@49> INCLUDE "internal_commands.ab2"
000498EE <internal_commands.ab2@50> INCLUDE "internal_commands.ab2"
000498F4 <internal_commands.ab2@51> INCLUDE "internal_commands.ab2"
00049904 <internal_commands.ab2@52> INCLUDE "internal_commands.ab2"
00049908 <internal_commands.ab2@56> INCLUDE "internal_commands.ab2"
0004990A <internal_commands.ab2@57> INCLUDE "internal_commands.ab2"
00049911 <internal_commands.ab2@58> INCLUDE "internal_commands.ab2"
00049912 <internal_commands.ab2@59> INCLUDE "internal_commands.ab2"
00049916 <internal_commands.ab2@63> INCLUDE "internal_commands.ab2"
00049918 <internal_commands.ab2@64> INCLUDE "internal_commands.ab2"
00049922 <internal_commands.ab2@65> INCLUDE "internal_commands.ab2"
00049955 <internal_commands.ab2@66> INCLUDE "internal_commands.ab2"
00049956 <internal_commands.ab2@67> INCLUDE "internal_commands.ab2"
0004995A <internal_commands.ab2@70> INCLUDE "internal_commands.ab2"
0004995C <internal_commands.ab2@71> INCLUDE "internal_commands.ab2"
00049965 <internal_commands.ab2@72> INCLUDE "internal_commands.ab2"
000499A0 <internal_commands.ab2@73> INCLUDE "internal_commands.ab2"
000499A4 <internal_commands.ab2@77> INCLUDE "internal_commands.ab2"
000499A6 <internal_commands.ab2@78> INCLUDE "internal_commands.ab2"
000499B0 <internal_commands.ab2@79> INCLUDE "internal_commands.ab2"
000499B1 <internal_commands.ab2@80> INCLUDE "internal_commands.ab2"
000499B2 <internal_commands.ab2@81> INCLUDE "internal_commands.ab2"
000499B6 <internal_commands.ab2@84> INCLUDE "internal_commands.ab2"
000499B8 <internal_commands.ab2@85> INCLUDE "internal_commands.ab2"
000499BB <internal_commands.ab2@86> INCLUDE "internal_commands.ab2"
000499D2 <internal_commands.ab2@87> INCLUDE "internal_commands.ab2"
000499D6 <internal_commands.ab2@91> INCLUDE "internal_commands.ab2"
000499D8 <internal_commands.ab2@92> INCLUDE "internal_commands.ab2"
000499DE <internal_commands.ab2@93> INCLUDE "internal_commands.ab2"
000499EB <internal_commands.ab2@94> INCLUDE "internal_commands.ab2"
000499EC <internal_commands.ab2@95> INCLUDE "internal_commands.ab2"
000499F0 <internal_commands.ab2@98> INCLUDE "internal_commands.ab2"
000499F2 <internal_commands.ab2@99> INCLUDE "internal_commands.ab2"
000499F8 <internal_commands.ab2@100> INCLUDE "internal_commands.ab2"
00049A04 <internal_commands.ab2@101> INCLUDE "internal_commands.ab2"
00049A08 <internal_commands.ab2@105> INCLUDE "internal_commands.ab2"
00049A0A <internal_commands.ab2@106> INCLUDE "internal_commands.ab2"
00049A11 <internal_commands.ab2@107> INCLUDE "internal_commands.ab2"
00049A1E <internal_commands.ab2@108> INCLUDE "internal_commands.ab2"
00049A22 <internal_commands.ab2@112> INCLUDE "internal_commands.ab2"
00049A24 <internal_commands.ab2@113> INCLUDE "internal_commands.ab2"
00049A29 <internal_commands.ab2@114> INCLUDE "internal_commands.ab2"
00049A36 <internal_commands.ab2@115> INCLUDE "internal_commands.ab2"
00049A3A <internal_commands.ab2@119> INCLUDE "internal_commands.ab2"
00049A3C <internal_commands.ab2@120> INCLUDE "internal_commands.ab2"
00049A44 <internal_commands.ab2@121> INCLUDE "internal_commands.ab2"
00049A45 <internal_commands.ab2@122> INCLUDE "internal_commands.ab2"
00049A46 <internal_commands.ab2@123> INCLUDE "internal_commands.ab2"
00049A4A <internal_commands.ab2@126> INCLUDE "internal_commands.ab2"
00049A4C <internal_commands.ab2@127> INCLUDE "internal_commands.ab2"
00049A54 <internal_commands.ab2@128> INCLUDE "internal_commands.ab2"
00049A55 <internal_commands.ab2@129> INCLUDE "internal_commands.ab2"
00049A56 <internal_commands.ab2@130> INCLUDE "internal_commands.ab2"
00049A5A <internal_commands.ab2@133> INCLUDE "internal_commands.ab2"
00049A5C <internal_commands.ab2@134> INCLUDE "internal_commands.ab2"
00049A65 <internal_commands.ab2@135> INCLUDE "internal_commands.ab2"
00049A70 <internal_commands.ab2@136> INCLUDE "internal_commands.ab2"
00049A74 <internal_commands.ab2@140> INCLUDE "internal_commands.ab2"
00049A76 <internal_commands.ab2@141> INCLUDE "internal_commands.ab2"
00049A7E <internal_commands.ab2@142> INCLUDE "internal_commands.ab2"
00049A89 <internal_commands.ab2@143> INCLUDE "internal_commands.ab2"
00049A8A <internal_commands.ab2@144> INCLUDE "internal_commands.ab2"
00049A8E <internal_commands.ab2@147> INCLUDE "internal_commands.ab2"
00049A90 <internal_commands.ab2@148> INCLUDE "internal_commands.ab2"
00049A97 <internal_commands.ab2@149> INCLUDE "internal_commands.ab2"
00049AF9 <internal_commands.ab2@150> INCLUDE "internal_commands.ab2"
00049AFA <internal_commands.ab2@151> INCLUDE "internal_commands.ab2"
00049AFE <internal_commands.ab2@154> INCLUDE "internal_commands.ab2"
00049B00 <internal_commands.ab2@155> INCLUDE "internal_commands.ab2"
00049B07 <internal_commands.ab2@156> INCLUDE "internal_commands.ab2"
00049B16 <internal_commands.ab2@157> INCLUDE "internal_commands.ab2"
00049B1A <internal_commands.ab2@161> INCLUDE "internal_commands.ab2"
00049B1C <internal_commands.ab2@162> INCLUDE "internal_commands.ab2"
00049B20 <internal_commands.ab2@163> INCLUDE "internal_commands.ab2"
00049B56 <internal_commands.ab2@164> INCLUDE "internal_commands.ab2"
00049B5A <internal_commands.ab2@168> INCLUDE "internal_commands.ab2"
00049B5C <internal_commands.ab2@169> INCLUDE "internal_commands.ab2"
00049B61 <internal_commands.ab2@170> INCLUDE "internal_commands.ab2"
00049B70 <internal_commands.ab2@171> INCLUDE "internal_commands.ab2"
00049B74 <internal_commands.ab2@175> INCLUDE "internal_commands.ab2"
00049B76 <internal_commands.ab2@176> INCLUDE "internal_commands.ab2"
00049B79 <internal_commands.ab2@177> INCLUDE "internal_commands.ab2"
00049B9A <internal_commands.ab2@178> INCLUDE "internal_commands.ab2"
00049B9E <internal_commands.ab2@182> INCLUDE "internal_commands.ab2"
00049BA0 <internal_commands.ab2@183> INCLUDE "internal_commands.ab2"
00049BA5 <internal_commands.ab2@184> INCLUDE "internal_commands.ab2"
00049BB1 <internal_commands.ab2@185> INCLUDE "internal_commands.ab2"
00049BB2 <internal_commands.ab2@186> INCLUDE "internal_commands.ab2"
00049BB6 <internal_commands.ab2@189> INCLUDE "internal_commands.ab2"
00049BB8 <internal_commands.ab2@190> INCLUDE "internal_commands.ab2"
00049BBD <internal_commands.ab2@191> INCLUDE "internal_commands.ab2"
00049BD4 <internal_commands.ab2@192> INCLUDE "internal_commands.ab2"
00049BD8 <internal_commands.ab2@196> INCLUDE "internal_commands.ab2"
00049BDA <internal_commands.ab2@197> INCLUDE "internal_commands.ab2"
00049BDF <internal_commands.ab2@198> INCLUDE "internal_commands.ab2"
00049BEE <internal_commands.ab2@199> INCLUDE "internal_commands.ab2"
00049BF2 <internal_commands.ab2@203> INCLUDE "internal_commands.ab2"
00049BF4 <internal_commands.ab2@204> INCLUDE "internal_commands.ab2"
00049BF9 <internal_commands.ab2@205> INCLUDE "internal_commands.ab2"
00049C18 <internal_commands.ab2@206> INCLUDE "internal_commands.ab2"
00049C1C <internal_commands.ab2@210> INCLUDE "internal_commands.ab2"
00049C1E <internal_commands.ab2@211> INCLUDE "internal_commands.ab2"
00049C23 <internal_commands.ab2@212> INCLUDE "internal_commands.ab2"
00049C42 <internal_commands.ab2@213> INCLUDE "internal_commands.ab2"
00049C46 <internal_commands.ab2@217> INCLUDE "internal_commands.ab2"
00049C48 <internal_commands.ab2@218> INCLUDE "internal_commands.ab2"
00049C4E <internal_commands.ab2@219> INCLUDE "internal_commands.ab2"
00049C4F <internal_commands.ab2@220> INCLUDE "internal_commands.ab2"
00049C50 <internal_commands.ab2@221> INCLUDE "internal_commands.ab2"
00049C54 <internal_commands.ab2@224> INCLUDE "internal_commands.ab2"
00049C56 <internal_commands.ab2@225> INCLUDE "internal_commands.ab2"
00049C5B <internal_commands.ab2@226> INCLUDE "internal_commands.ab2"
00049C5C <internal_commands.ab2@227> INCLUDE "internal_commands.ab2"
00049C60 <internal_commands.ab2@231> INCLUDE "internal_commands.ab2"
00049C62 <internal_commands.ab2@232> INCLUDE "internal_commands.ab2"
00049C67 <internal_commands.ab2@233> INCLUDE "internal_commands.ab2"
00049C74 <internal_commands.ab2@234> INCLUDE "internal_commands.ab2"
00049C78 <internal_commands.ab2@238> INCLUDE "internal_commands.ab2"
00049C7A <internal_commands.ab2@239> INCLUDE "internal_commands.ab2"
00049C7F <internal_commands.ab2@240> INCLUDE "internal_commands.ab2"
00049C8E <internal_commands.ab2@241> INCLUDE "internal_commands.ab2"
00049C92 <internal_commands.ab2@245> INCLUDE "internal_commands.ab2"
00049C94 <internal_commands.ab2@246> INCLUDE "internal_commands.ab2"
00049C99 <internal_commands.ab2@247> INCLUDE "internal_commands.ab2"
00049CA8 <internal_commands.ab2@248> INCLUDE "internal_commands.ab2"
00049CAC <internal_commands.ab2@252> INCLUDE "internal_commands.ab2"
00049CAE <internal_commands.ab2@253> INCLUDE "internal_commands.ab2"
00049CB4 <internal_commands.ab2@254> INCLUDE "internal_commands.ab2"
00049CD1 <internal_commands.ab2@255> INCLUDE "internal_commands.ab2"
00049CD2 <internal_commands.ab2@256> INCLUDE "internal_commands.ab2"
00049CD6 <internal_commands.ab2@259> INCLUDE "internal_commands.ab2"
00049CD8 <internal_commands.ab2@260> INCLUDE "internal_commands.ab2"
00049CDE <internal_commands.ab2@261> INCLUDE "internal_commands.ab2"
00049CFB <internal_commands.ab2@262> INCLUDE "internal_commands.ab2"
00049CFC <internal_commands.ab2@263> INCLUDE "internal_commands.ab2"
00049D00 <internal_commands.ab2@266> INCLUDE "internal_commands.ab2"
00049D02 <internal_commands.ab2@267> INCLUDE "internal_commands.ab2"
00049D05 <internal_commands.ab2@268> INCLUDE "internal_commands.ab2"
00049D1C <internal_commands.ab2@269> INCLUDE "internal_commands.ab2"
00049D20 <internal_commands.ab2@273> INCLUDE "internal_commands.ab2"
00049D22 <internal_commands.ab2@274> INCLUDE "internal_commands.ab2"
00049D25 <internal_commands.ab2@275> INCLUDE "internal_commands.ab2"
00049D34 <internal_commands.ab2@276> INCLUDE "internal_commands.ab2"
00049D38 <internal_commands.ab2@280> INCLUDE "internal_commands.ab2"
00049D3A <internal_commands.ab2@281> INCLUDE "internal_commands.ab2"
00049D3F <internal_commands.ab2@282> INCLUDE "internal_commands.ab2"
00049D40 <internal_commands.ab2@283> INCLUDE "internal_commands.ab2"
00049D44 <internal_commands.ab2@287> INCLUDE "internal_commands.ab2"
00049D46 <internal_commands.ab2@288> INCLUDE "internal_commands.ab2"
00049D4A <internal_commands.ab2@289> INCLUDE "internal_commands.ab2"
00049D5F <internal_commands.ab2@290> INCLUDE "internal_commands.ab2"
00049D60 <internal_commands.ab2@291> INCLUDE "internal_commands.ab2"
00049D64 <internal_commands.ab2@294> INCLUDE "internal_commands.ab2"
00049D66 <internal_commands.ab2@295> INCLUDE "internal_commands.ab2"
00049D6D <internal_commands.ab2@296> INCLUDE "internal_commands.ab2"
00049D86 <internal_commands.ab2@297> INCLUDE "internal_commands.ab2"
00049D8A <internal_commands.ab2@301> INCLUDE "internal_commands.ab2"
00049D8C <internal_commands.ab2@302> INCLUDE "internal_commands.ab2"
00049D93 <internal_commands.ab2@303> INCLUDE "internal_commands.ab2"
00049D9E <internal_commands.ab2@304> INCLUDE "internal_commands.ab2"
00049DA2 <internal_commands.ab2@308> INCLUDE "internal_commands.ab2"
00049DA4 <internal_commands.ab2@309> INCLUDE "internal_commands.ab2"
00049DA9 <internal_commands.ab2@310> INCLUDE "internal_commands.ab2"
00049DC0 <internal_commands.ab2@311> INCLUDE "internal_commands.ab2"
00049DC4 <internal_commands.ab2@315> INCLUDE "internal_commands.ab2"
00049DC6 <internal_commands.ab2@316> INCLUDE "internal_commands.ab2"
00049DCA <internal_commands.ab2@317> INCLUDE "internal_commands.ab2"
00049DE1 <internal_commands.ab2@318> INCLUDE "internal_commands.ab2"
00049DE2 <internal_commands.ab2@319> INCLUDE "internal_commands.ab2"
00049DE6 <internal_commands.ab2@322> INCLUDE "internal_commands.ab2"
00049DE8 <internal_commands.ab2@323> INCLUDE "internal_commands.ab2"
00049DED <internal_commands.ab2@324> INCLUDE "internal_commands.ab2"
00049DEE <internal_commands.ab2@325> INCLUDE "internal_commands.ab2"
00049DF2 <internal_commands.ab2@329> INCLUDE "internal_commands.ab2"
00049DF4 <internal_commands.ab2@330> INCLUDE "internal_commands.ab2"
00049DF9 <internal_commands.ab2@331> INCLUDE "internal_commands.ab2"
00049DFD <internal_commands.ab2@332> INCLUDE "internal_commands.ab2"
00049DFE <internal_commands.ab2@333> INCLUDE "internal_commands.ab2"
00049E02 <internal_commands.ab2@336> INCLUDE "internal_commands.ab2"
00049E04 <internal_commands.ab2@337> INCLUDE "internal_commands.ab2"
00049E0B <internal_commands.ab2@338> INCLUDE "internal_commands.ab2"
00049E23 <internal_commands.ab2@339> INCLUDE "internal_commands.ab2"
00049E24 <internal_commands.ab2@340> INCLUDE "internal_commands.ab2"
00049E28 <internal_commands.ab2@343> INCLUDE "internal_commands.ab2"
00049E2A <internal_commands.ab2@344> INCLUDE "internal_commands.ab2"
00049E31 <internal_commands.ab2@345> INCLUDE "internal_commands.ab2"
00049E36 <internal_commands.ab2@346> INCLUDE "internal_commands.ab2"
00049E3A <internal_commands.ab2@350> INCLUDE "internal_commands.ab2"
00049E3C <internal_commands.ab2@351> INCLUDE "internal_commands.ab2"
00049E43 <internal_commands.ab2@352> INCLUDE "internal_commands.ab2"
00049E48 <internal_commands.ab2@353> INCLUDE "internal_commands.ab2"
00049E4C <internal_commands.ab2@357> INCLUDE "internal_commands.ab2"
00049E4E <internal_commands.ab2@358> INCLUDE "internal_commands.ab2"
00049E55 <internal_commands.ab2@359> INCLUDE "internal_commands.ab2"
00049E70 <internal_commands.ab2@360> INCLUDE "internal_commands.ab2"
00049E74 <internal_commands.ab2@364> INCLUDE "internal_commands.ab2"
00049E76 <internal_commands.ab2@365> INCLUDE "internal_commands.ab2"
00049E7E <internal_commands.ab2@366> INCLUDE "internal_commands.ab2"
00049E97 <internal_commands.ab2@367> INCLUDE "internal_commands.ab2"
00049E98 <internal_commands.ab2@368> INCLUDE "internal_commands.ab2"
00049E9C <internal_commands.ab2@371> INCLUDE "internal_commands.ab2"
00049E9E <internal_commands.ab2@372> INCLUDE "internal_commands.ab2"
00049EA4 <internal_commands.ab2@373> INCLUDE "internal_commands.ab2"
00049EA5 <internal_commands.ab2@374> INCLUDE "internal_commands.ab2"
00049EA6 <internal_commands.ab2@375> INCLUDE "internal_commands.ab2"
00049EAA <internal_commands.ab2@378> INCLUDE "internal_commands.ab2"
00049EAC <internal_commands.ab2@379> INCLUDE "internal_commands.ab2"
00049EB2 <internal_commands.ab2@380> INCLUDE "internal_commands.ab2"
00049EB3 <internal_commands.ab2@381> INCLUDE "internal_commands.ab2"
00049EB4 <internal_commands.ab2@382> INCLUDE "internal_commands.ab2"
00049EB8 <internal_commands.ab2@385> INCLUDE "internal_commands.ab2"
00049EBA <internal_commands.ab2@386> INCLUDE "internal_commands.ab2"
00049EC1 <internal_commands.ab2@387> INCLUDE "internal_commands.ab2"
00049EC2 <internal_commands.ab2@388> INCLUDE "internal_commands.ab2"
00049EC6 <internal_commands.ab2@392> INCLUDE "internal_commands.ab2"
00049EC8 <internal_commands.ab2@393> INCLUDE "internal_commands.ab2"
00049ECE <internal_commands.ab2@394> INCLUDE "internal_commands.ab2"
00049ED7 <internal_commands.ab2@395> INCLUDE "internal_commands.ab2"
00049ED8 <internal_commands.ab2@396> INCLUDE "internal_commands.ab2"
00049EDC <internal_commands.ab2@399> INCLUDE "internal_commands.ab2"
00049EDE <internal_commands.ab2@400> INCLUDE "internal_commands.ab2"
00049EE6 <internal_commands.ab2@401> INCLUDE "internal_commands.ab2"
00049EF3 <internal_commands.ab2@402> INCLUDE "internal_commands.ab2"
00049EF4 <internal_commands.ab2@403> INCLUDE "internal_commands.ab2"
00049EF8 <internal_commands.ab2@406> INCLUDE "internal_commands.ab2"
00049EFA <internal_commands.ab2@407> INCLUDE "internal_commands.ab2"
00049F02 <internal_commands.ab2@408> INCLUDE "internal_commands.ab2"
00049F0F <internal_commands.ab2@409> INCLUDE "internal_commands.ab2"
00049F10 <internal_commands.ab2@410> INCLUDE "internal_commands.ab2"
00049F14 <internal_commands.ab2@413> INCLUDE "internal_commands.ab2"
00049F16 <internal_commands.ab2@414> INCLUDE "internal_commands.ab2"
00049F1E <internal_commands.ab2@415> INCLUDE "internal_commands.ab2"
00049F2B <internal_commands.ab2@416> INCLUDE "internal_commands.ab2"
00049F2C <internal_commands.ab2@417> INCLUDE "internal_commands.ab2"
00049F30 <internal_commands.ab2@420> INCLUDE "internal_commands.ab2"
00049F32 <internal_commands.ab2@421> INCLUDE "internal_commands.ab2"
00049F37 <internal_commands.ab2@422> INCLUDE "internal_commands.ab2"
00049F38 <internal_commands.ab2@423> INCLUDE "internal_commands.ab2"
00049F3C <internal_commands.ab2@437> INCLUDE "internal_commands.ab2"
00049F3E <internal_commands.ab2@438> INCLUDE "internal_commands.ab2"
00049F43 <internal_commands.ab2@439> INCLUDE "internal_commands.ab2"
00049F44 <internal_commands.ab2@440> INCLUDE "internal_commands.ab2"
00049F46 <internal_commands.ab2@443> INCLUDE "internal_commands.ab2"
00049F4A <internal_commands.ab2@444> INCLUDE "internal_commands.ab2"
00049F4C <internal_commands.ab2@445> INCLUDE "internal_commands.ab2"
00049F4E <internal_commands.ab2@446> INCLUDE "internal_commands.ab2"
00049F52 <internal_commands.ab2@447> INCLUDE "internal_commands.ab2"
00049F54 <internal_commands.ab2@448> INCLUDE "internal_commands.ab2"
00049F58 <internal_commands.ab2@452> INCLUDE "internal_commands.ab2"
00049F5A <internal_commands.ab2@453> INCLUDE "internal_commands.ab2"
00049F5E <internal_commands.ab2@454> INCLUDE "internal_commands.ab2"
00049F5F <internal_commands.ab2@455> INCLUDE "internal_commands.ab2"
00049F60 <internal_commands.ab2@456> INCLUDE "internal_commands.ab2"
00049F62 <internal_commands.ab2@458> INCLUDE "internal_commands.ab2"
00049F66 <internal_commands.ab2@459> INCLUDE "internal_commands.ab2"
00049F68 <internal_commands.ab2@460> INCLUDE "internal_commands.ab2"
00049F6A <internal_commands.ab2@461> INCLUDE "internal_commands.ab2"
00049F6E <internal_commands.ab2@462> INCLUDE "internal_commands.ab2"
00049F70 <internal_commands.ab2@463> INCLUDE "internal_commands.ab2"
00049F74 <internal_commands.ab2@467> INCLUDE "internal_commands.ab2"
00049F76 <internal_commands.ab2@468> INCLUDE "internal_commands.ab2"
00049F7B <internal_commands.ab2@469> INCLUDE "internal_commands.ab2"
00049F7C <internal_commands.ab2@470> INCLUDE "internal_commands.ab2"
00049F7E <internal_commands.ab2@473> INCLUDE "internal_commands.ab2"
00049F82 <internal_commands.ab2@474> INCLUDE "internal_commands.ab2"
00049F84 <internal_commands.ab2@475> INCLUDE "internal_commands.ab2"
00049F86 <internal_commands.ab2@476> INCLUDE "internal_commands.ab2"
00049F8A <internal_commands.ab2@477> INCLUDE "internal_commands.ab2"
00049F8C <internal_commands.ab2@478> INCLUDE "internal_commands.ab2"
00049F90 <internal_commands.ab2@482> INCLUDE "internal_commands.ab2"
00049F92 <internal_commands.ab2@483> INCLUDE "internal_commands.ab2"
00049F97 <internal_commands.ab2@484> INCLUDE "internal_commands.ab2"
00049F98 <internal_commands.ab2@485> INCLUDE "internal_commands.ab2"
00049F9A <internal_commands.ab2@488> INCLUDE "internal_commands.ab2"
00049F9E <internal_commands.ab2@489> INCLUDE "internal_commands.ab2"
00049FA0 <internal_commands.ab2@490> INCLUDE "internal_commands.ab2"
00049FA2 <internal_commands.ab2@491> INCLUDE "internal_commands.ab2"
00049FA6 <internal_commands.ab2@492> INCLUDE "internal_commands.ab2"
00049FA8 <internal_commands.ab2@493> INCLUDE "internal_commands.ab2"
00049FAC <internal_commands.ab2@497> INCLUDE "internal_commands.ab2"
00049FAE <internal_commands.ab2@498> INCLUDE "internal_commands.ab2"
00049FB3 <internal_commands.ab2@499> INCLUDE "internal_commands.ab2"
00049FB4 <internal_commands.ab2@500> INCLUDE "internal_commands.ab2"
00049FB6 <internal_commands.ab2@503> INCLUDE "internal_commands.ab2"
00049FBA <internal_commands.ab2@504> INCLUDE "internal_commands.ab2"
00049FBC <internal_commands.ab2@505> INCLUDE "internal_commands.ab2"
00049FBE <internal_commands.ab2@506> INCLUDE "internal_commands.ab2"
00049FC2 <internal_commands.ab2@507> INCLUDE "internal_commands.ab2"
00049FC4 <internal_commands.ab2@508> INCLUDE "internal_commands.ab2"
00049FC8 <internal_commands.ab2@512> INCLUDE "internal_commands.ab2"
00049FCA <internal_commands.ab2@513> INCLUDE "internal_commands.ab2"
00049FCF <internal_commands.ab2@514> INCLUDE "internal_commands.ab2"
00049FD0 <internal_commands.ab2@515> INCLUDE "internal_commands.ab2"
00049FD2 <internal_commands.ab2@518> INCLUDE "internal_commands.ab2"
00049FD6 <internal_commands.ab2@519> INCLUDE "internal_commands.ab2"
00049FD8 <internal_commands.ab2@520> INCLUDE "internal_commands.ab2"
00049FDA <internal_commands.ab2@521> INCLUDE "internal_commands.ab2"
00049FDE <internal_commands.ab2@522> INCLUDE "internal_commands.ab2"
00049FE0 <internal_commands.ab2@523> INCLUDE "internal_commands.ab2"
00049FE4 <internal_commands.ab2@527> INCLUDE "internal_commands.ab2"
00049FE6 <internal_commands.ab2@528> INCLUDE "internal_commands.ab2"
00049FEA <internal_commands.ab2@529> INCLUDE "internal_commands.ab2"
00049FEB <internal_commands.ab2@530> INCLUDE "internal_commands.ab2"
00049FEC <internal_commands.ab2@531> INCLUDE "internal_commands.ab2"
00049FEE <internal_commands.ab2@533> INCLUDE "internal_commands.ab2"
00049FF2 <internal_commands.ab2@534> INCLUDE "internal_commands.ab2"
00049FF4 <internal_commands.ab2@535> INCLUDE "internal_commands.ab2"
00049FF6 <internal_commands.ab2@536> INCLUDE "internal_commands.ab2"
00049FFA <internal_commands.ab2@537> INCLUDE "internal_commands.ab2"
00049FFC <internal_commands.ab2@538> INCLUDE "internal_commands.ab2"
0004A000 <internal_commands.ab2@542> INCLUDE "internal_commands.ab2"
0004A002 <internal_commands.ab2@543> INCLUDE "internal_commands.ab2"
0004A007 <internal_commands.ab2@544> INCLUDE "internal_commands.ab2"
0004A008 <internal_commands.ab2@545> INCLUDE "internal_commands.ab2"
0004A00A <internal_commands.ab2@548> INCLUDE "internal_commands.ab2"
0004A00E <internal_commands.ab2@549> INCLUDE "internal_commands.ab2"
0004A010 <internal_commands.ab2@550> INCLUDE "internal_commands.ab2"
0004A012 <internal_commands.ab2@551> INCLUDE "internal_commands.ab2"
0004A016 <internal_commands.ab2@552> INCLUDE "internal_commands.ab2"
0004A018 <internal_commands.ab2@553> INCLUDE "internal_commands.ab2"
0004A01C <internal_commands.ab2@557> INCLUDE "internal_commands.ab2"
0004A01E <internal_commands.ab2@558> INCLUDE "internal_commands.ab2"
0004A022 <internal_commands.ab2@559> INCLUDE "internal_commands.ab2"
0004A023 <internal_commands.ab2@560> INCLUDE "internal_commands.ab2"
0004A024 <internal_commands.ab2@561> INCLUDE "internal_commands.ab2"
0004A026 <internal_commands.ab2@563> INCLUDE "internal_commands.ab2"
0004A02A <internal_commands.ab2@564> INCLUDE "internal_commands.ab2"
0004A02C <internal_commands.ab2@565> INCLUDE "internal_commands.ab2"
0004A02E <internal_commands.ab2@566> INCLUDE "internal_commands.ab2"
0004A032 <internal_commands.ab2@567> INCLUDE "internal_commands.ab2"
0004A034 <internal_commands.ab2@568> INCLUDE "internal_commands.ab2"
0004A038 <internal_commands.ab2@572> INCLUDE "internal_commands.ab2"
0004A03A <internal_commands.ab2@573> INCLUDE "internal_commands.ab2"
0004A03E <internal_commands.ab2@574> INCLUDE "internal_commands.ab2"
0004A03F <internal_commands.ab2@575> INCLUDE "internal_commands.ab2"
0004A040 <internal_commands.ab2@576> INCLUDE "internal_commands.ab2"
0004A042 <internal_commands.ab2@578> INCLUDE "internal_commands.ab2"
0004A046 <internal_commands.ab2@579> INCLUDE "internal_commands.ab2"
0004A048 <internal_commands.ab2@580> INCLUDE "internal_commands.ab2"
0004A04A <internal_commands.ab2@581> INCLUDE "internal_commands.ab2"
0004A04E <internal_commands.ab2@582> INCLUDE "internal_commands.ab2"
0004A050 <internal_commands.ab2@583> INCLUDE "internal_commands.ab2"
0004A054 <internal_commands.ab2@587> INCLUDE "internal_commands.ab2"
0004A056 <internal_commands.ab2@588> INCLUDE "internal_commands.ab2"
0004A05A <internal_commands.ab2@589> INCLUDE "internal_commands.ab2"
0004A05B <internal_commands.ab2@590> INCLUDE "internal_commands.ab2"
0004A05C <internal_commands.ab2@591> INCLUDE "internal_commands.ab2"
0004A05E <internal_commands.ab2@593> INCLUDE "internal_commands.ab2"
0004A062 <internal_commands.ab2@594> INCLUDE "internal_commands.ab2"
0004A064 <internal_commands.ab2@595> INCLUDE "internal_commands.ab2"
0004A066 <internal_commands.ab2@596> INCLUDE "internal_commands.ab2"
0004A06A <internal_commands.ab2@597> INCLUDE "internal_commands.ab2"
0004A06C <internal_commands.ab2@598> INCLUDE "internal_commands.ab2"
0004A070 <internal_commands.ab2@602> INCLUDE "internal_commands.ab2"
0004A072 <internal_commands.ab2@603> INCLUDE "internal_commands.ab2"
0004A076 <internal_commands.ab2@604> INCLUDE "internal_commands.ab2"
0004A077 <internal_commands.ab2@605> INCLUDE "internal_commands.ab2"
0004A078 <internal_commands.ab2@606> INCLUDE "internal_commands.ab2"
0004A07A <internal_commands.ab2@608> INCLUDE "internal_commands.ab2"
0004A07E <internal_commands.ab2@609> INCLUDE "internal_commands.ab2"
0004A080 <internal_commands.ab2@610> INCLUDE "internal_commands.ab2"
0004A082 <internal_commands.ab2@611> INCLUDE "internal_commands.ab2"
0004A086 <internal_commands.ab2@612> INCLUDE "internal_commands.ab2"
0004A088 <internal_commands.ab2@613> INCLUDE "internal_commands.ab2"
0004A08C <internal_commands.ab2@617> INCLUDE "internal_commands.ab2"
0004A08E <internal_commands.ab2@618> INCLUDE "internal_commands.ab2"
0004A092 <internal_commands.ab2@619> INCLUDE "internal_commands.ab2"
0004A093 <internal_commands.ab2@620> INCLUDE "internal_commands.ab2"
0004A094 <internal_commands.ab2@621> INCLUDE "internal_commands.ab2"
0004A096 <internal_commands.ab2@623> INCLUDE "internal_commands.ab2"
0004A09A <internal_commands.ab2@624> INCLUDE "internal_commands.ab2"
0004A09C <internal_commands.ab2@625> INCLUDE "internal_commands.ab2"
0004A09E <internal_commands.ab2@626> INCLUDE "internal_commands.ab2"
0004A0A2 <internal_commands.ab2@627> INCLUDE "internal_commands.ab2"
0004A0A4 <internal_commands.ab2@628> INCLUDE "internal_commands.ab2"
0004A0A8 <internal_commands.ab2@632> INCLUDE "internal_commands.ab2"
0004A0AA <internal_commands.ab2@633> INCLUDE "internal_commands.ab2"
0004A0AE <internal_commands.ab2@634> INCLUDE "internal_commands.ab2"
0004A0AF <internal_commands.ab2@635> INCLUDE "internal_commands.ab2"
0004A0B0 <internal_commands.ab2@636> INCLUDE "internal_commands.ab2"
0004A0B2 <internal_commands.ab2@638> INCLUDE "internal_commands.ab2"
0004A0B6 <internal_commands.ab2@639> INCLUDE "internal_commands.ab2"
0004A0B8 <internal_commands.ab2@640> INCLUDE "internal_commands.ab2"
0004A0BA <internal_commands.ab2@641> INCLUDE "internal_commands.ab2"
0004A0BE <internal_commands.ab2@642> INCLUDE "internal_commands.ab2"
0004A0C0 <internal_commands.ab2@643> INCLUDE "internal_commands.ab2"
0004A0C4 <internal_commands.ab2@647> INCLUDE "internal_commands.ab2"
0004A0C6 <internal_commands.ab2@648> INCLUDE "internal_commands.ab2"
0004A0CA <internal_commands.ab2@649> INCLUDE "internal_commands.ab2"
0004A0CB <internal_commands.ab2@650> INCLUDE "internal_commands.ab2"
0004A0CC <internal_commands.ab2@651> INCLUDE "internal_commands.ab2"
0004A0CE <internal_commands.ab2@653> INCLUDE "internal_commands.ab2"
0004A0D2 <internal_commands.ab2@654> INCLUDE "internal_commands.ab2"
0004A0D4 <internal_commands.ab2@655> INCLUDE "internal_commands.ab2"
0004A0D6 <internal_commands.ab2@656> INCLUDE "internal_commands.ab2"
0004A0DA <internal_commands.ab2@657> INCLUDE "internal_commands.ab2"
0004A0DC <internal_commands.ab2@658> INCLUDE "internal_commands.ab2"
0004A0E0 <internal_commands.ab2@662> INCLUDE "internal_commands.ab2"
0004A0E2 <internal_commands.ab2@663> INCLUDE "internal_commands.ab2"
0004A0E6 <internal_commands.ab2@664> INCLUDE "internal_commands.ab2"
0004A0E7 <internal_commands.ab2@665> INCLUDE "internal_commands.ab2"
0004A0E8 <internal_commands.ab2@666> INCLUDE "internal_commands.ab2"
0004A0EA <internal_commands.ab2@668> INCLUDE "internal_commands.ab2"
0004A0EE <internal_commands.ab2@669> INCLUDE "internal_commands.ab2"
0004A0F0 <internal_commands.ab2@670> INCLUDE "internal_commands.ab2"
0004A0F2 <internal_commands.ab2@671> INCLUDE "internal_commands.ab2"
0004A0F6 <internal_commands.ab2@672> INCLUDE "internal_commands.ab2"
0004A0F8 <internal_commands.ab2@673> INCLUDE "internal_commands.ab2"
0004A0FC <internal_commands.ab2@677> INCLUDE "internal_commands.ab2"
0004A0FE <internal_commands.ab2@678> INCLUDE "internal_commands.ab2"
0004A102 <internal_commands.ab2@679> INCLUDE "internal_commands.ab2"
0004A103 <internal_commands.ab2@680> INCLUDE "internal_commands.ab2"
0004A104 <internal_commands.ab2@681> INCLUDE "internal_commands.ab2"
0004A106 <internal_commands.ab2@683> INCLUDE "internal_commands.ab2"
0004A10A <internal_commands.ab2@684> INCLUDE "internal_commands.ab2"
0004A10C <internal_commands.ab2@685> INCLUDE "internal_commands.ab2"
0004A10E <internal_commands.ab2@686> INCLUDE "internal_commands.ab2"
0004A112 <internal_commands.ab2@687> INCLUDE "internal_commands.ab2"
0004A114 <internal_commands.ab2@688> INCLUDE "internal_commands.ab2"
0004A118 <internal_commands.ab2@692> INCLUDE "internal_commands.ab2"
0004A11A <internal_commands.ab2@693> INCLUDE "internal_commands.ab2"
0004A11E <internal_commands.ab2@694> INCLUDE "internal_commands.ab2"
0004A11F <internal_commands.ab2@695> INCLUDE "internal_commands.ab2"
0004A120 <internal_commands.ab2@696> INCLUDE "internal_commands.ab2"
0004A122 <internal_commands.ab2@698> INCLUDE "internal_commands.ab2"
0004A126 <internal_commands.ab2@699> INCLUDE "internal_commands.ab2"
0004A128 <internal_commands.ab2@700> INCLUDE "internal_commands.ab2"
0004A12A <internal_commands.ab2@701> INCLUDE "internal_commands.ab2"
0004A12E <internal_commands.ab2@702> INCLUDE "internal_commands.ab2"
0004A130 <internal_commands.ab2@703> INCLUDE "internal_commands.ab2"
0004A134 <internal_commands.ab2@707> INCLUDE "internal_commands.ab2"
0004A136 <internal_commands.ab2@708> INCLUDE "internal_commands.ab2"
0004A13A <internal_commands.ab2@709> INCLUDE "internal_commands.ab2"
0004A13B <internal_commands.ab2@710> INCLUDE "internal_commands.ab2"
0004A13C <internal_commands.ab2@711> INCLUDE "internal_commands.ab2"
0004A13E <internal_commands.ab2@713> INCLUDE "internal_commands.ab2"
0004A142 <internal_commands.ab2@714> INCLUDE "internal_commands.ab2"
0004A144 <internal_commands.ab2@715> INCLUDE "internal_commands.ab2"
0004A146 <internal_commands.ab2@716> INCLUDE "internal_commands.ab2"
0004A14A <internal_commands.ab2@717> INCLUDE "internal_commands.ab2"
0004A14C <internal_commands.ab2@718> INCLUDE "internal_commands.ab2"
0004A150 <internal_commands.ab2@722> INCLUDE "internal_commands.ab2"
0004A152 <internal_commands.ab2@723> INCLUDE "internal_commands.ab2"
0004A156 <internal_commands.ab2@724> INCLUDE "internal_commands.ab2"
0004A157 <internal_commands.ab2@725> INCLUDE "internal_commands.ab2"
0004A158 <internal_commands.ab2@726> INCLUDE "internal_commands.ab2"
0004A15A <internal_commands.ab2@728> INCLUDE "internal_commands.ab2"
0004A15E <internal_commands.ab2@729> INCLUDE "internal_commands.ab2"
0004A160 <internal_commands.ab2@730> INCLUDE "internal_commands.ab2"
0004A162 <internal_commands.ab2@731> INCLUDE "internal_commands.ab2"
0004A166 <internal_commands.ab2@732> INCLUDE "internal_commands.ab2"
0004A168 <internal_commands.ab2@733> INCLUDE "internal_commands.ab2"
0004A16C <internal_commands.ab2@737> INCLUDE "internal_commands.ab2"
0004A16E <internal_commands.ab2@738> INCLUDE "internal_commands.ab2"
0004A172 <internal_commands.ab2@739> INCLUDE "internal_commands.ab2"
0004A173 <internal_commands.ab2@740> INCLUDE "internal_commands.ab2"
0004A174 <internal_commands.ab2@741> INCLUDE "internal_commands.ab2"
0004A176 <internal_commands.ab2@743> INCLUDE "internal_commands.ab2"
0004A17A <internal_commands.ab2@744> INCLUDE "internal_commands.ab2"
0004A17C <internal_commands.ab2@745> INCLUDE "internal_commands.ab2"
0004A17E <internal_commands.ab2@746> INCLUDE "internal_commands.ab2"
0004A182 <internal_commands.ab2@747> INCLUDE "internal_commands.ab2"
0004A184 <internal_commands.ab2@748> INCLUDE "internal_commands.ab2"
0004A188 <internal_commands.ab2@752> INCLUDE "internal_commands.ab2"
0004A18A <internal_commands.ab2@753> INCLUDE "internal_commands.ab2"
0004A18E <internal_commands.ab2@754> INCLUDE "internal_commands.ab2"
0004A18F <internal_commands.ab2@755> INCLUDE "internal_commands.ab2"
0004A190 <internal_commands.ab2@756> INCLUDE "internal_commands.ab2"
0004A192 <internal_commands.ab2@758> INCLUDE "internal_commands.ab2"
0004A196 <internal_commands.ab2@759> INCLUDE "internal_commands.ab2"
0004A198 <internal_commands.ab2@760> INCLUDE "internal_commands.ab2"
0004A19A <internal_commands.ab2@761> INCLUDE "internal_commands.ab2"
0004A19E <internal_commands.ab2@762> INCLUDE "internal_commands.ab2"
0004A1A0 <internal_commands.ab2@763> INCLUDE "internal_commands.ab2"
0004A1A4 <internal_commands.ab2@767> INCLUDE "internal_commands.ab2"
0004A1A6 <internal_commands.ab2@768> INCLUDE "internal_commands.ab2"
0004A1AA <internal_commands.ab2@769> INCLUDE "internal_commands.ab2"
0004A1AB <internal_commands.ab2@770> INCLUDE "internal_commands.ab2"
0004A1AC <internal_commands.ab2@771> INCLUDE "internal_commands.ab2"
0004A1AE <internal_commands.ab2@773> INCLUDE "internal_commands.ab2"
0004A1B2 <internal_commands.ab2@774> INCLUDE "internal_commands.ab2"
0004A1B4 <internal_commands.ab2@775> INCLUDE "internal_commands.ab2"
0004A1B6 <internal_commands.ab2@776> INCLUDE "internal_commands.ab2"
0004A1BA <internal_commands.ab2@777> INCLUDE "internal_commands.ab2"
0004A1BC <internal_commands.ab2@778> INCLUDE "internal_commands.ab2"
0004A1C0 <internal_commands.ab2@782> INCLUDE "internal_commands.ab2"
0004A1C2 <internal_commands.ab2@783> INCLUDE "internal_commands.ab2"
0004A1C6 <internal_commands.ab2@784> INCLUDE "internal_commands.ab2"
0004A1C7 <internal_commands.ab2@785> INCLUDE "internal_commands.ab2"
0004A1C8 <internal_commands.ab2@786> INCLUDE "internal_commands.ab2"
0004A1CA <internal_commands.ab2@788> INCLUDE "internal_commands.ab2"
0004A1CE <internal_commands.ab2@789> INCLUDE "internal_commands.ab2"
0004A1D0 <internal_commands.ab2@790> INCLUDE "internal_commands.ab2"
0004A1D2 <internal_commands.ab2@791> INCLUDE "internal_commands.ab2"
0004A1D6 <internal_commands.ab2@792> INCLUDE "internal_commands.ab2"
0004A1D8 <internal_commands.ab2@793> INCLUDE "internal_commands.ab2"
0004A1DC <internal_commands.ab2@797> INCLUDE "internal_commands.ab2"
0004A1DE <internal_commands.ab2@798> INCLUDE "internal_commands.ab2"
0004A1E3 <internal_commands.ab2@799> INCLUDE "internal_commands.ab2"
0004A1E4 <internal_commands.ab2@800> INCLUDE "internal_commands.ab2"
0004A1E6 <internal_commands.ab2@803> INCLUDE "internal_commands.ab2"
0004A1EA <internal_commands.ab2@804> INCLUDE "internal_commands.ab2"
0004A1EC <internal_commands.ab2@805> INCLUDE "internal_commands.ab2"
0004A1EE <internal_commands.ab2@806> INCLUDE "internal_commands.ab2"
0004A1F2 <internal_commands.ab2@807> INCLUDE "internal_commands.ab2"
0004A1F4 <internal_commands.ab2@808> INCLUDE "internal_commands.ab2"
0004A1F8 <internal_commands.ab2@812> INCLUDE "internal_commands.ab2"
0004A1FA <internal_commands.ab2@813> INCLUDE "internal_commands.ab2"
0004A1FF <internal_commands.ab2@814> INCLUDE "internal_commands.ab2"
0004A200 <internal_commands.ab2@815> INCLUDE "internal_commands.ab2"
0004A202 <internal_commands.ab2@818> INCLUDE "internal_commands.ab2"
0004A206 <internal_commands.ab2@819> INCLUDE "internal_commands.ab2"
0004A208 <internal_commands.ab2@820> INCLUDE "internal_commands.ab2"
0004A20A <internal_commands.ab2@821> INCLUDE "internal_commands.ab2"
0004A20E <internal_commands.ab2@822> INCLUDE "internal_commands.ab2"
0004A210 <internal_commands.ab2@823> INCLUDE "internal_commands.ab2"
0004A214 <internal_commands.ab2@827> INCLUDE "internal_commands.ab2"
0004A216 <internal_commands.ab2@828> INCLUDE "internal_commands.ab2"
0004A21B <internal_commands.ab2@829> INCLUDE "internal_commands.ab2"
0004A21C <internal_commands.ab2@830> INCLUDE "internal_commands.ab2"
0004A21E <internal_commands.ab2@833> INCLUDE "internal_commands.ab2"
0004A222 <internal_commands.ab2@834> INCLUDE "internal_commands.ab2"
0004A224 <internal_commands.ab2@835> INCLUDE "internal_commands.ab2"
0004A226 <internal_commands.ab2@836> INCLUDE "internal_commands.ab2"
0004A22A <internal_commands.ab2@837> INCLUDE "internal_commands.ab2"
0004A22C <internal_commands.ab2@838> INCLUDE "internal_commands.ab2"
0004A230 <internal_commands.ab2@842> INCLUDE "internal_commands.ab2"
0004A232 <internal_commands.ab2@843> INCLUDE "internal_commands.ab2"
0004A237 <internal_commands.ab2@844> INCLUDE "internal_commands.ab2"
0004A238 <internal_commands.ab2@845> INCLUDE "internal_commands.ab2"
0004A23A <internal_commands.ab2@848> INCLUDE "internal_commands.ab2"
0004A23E <internal_commands.ab2@849> INCLUDE "internal_commands.ab2"
0004A240 <internal_commands.ab2@850> INCLUDE "internal_commands.ab2"
0004A242 <internal_commands.ab2@851> INCLUDE "internal_commands.ab2"
0004A246 <internal_commands.ab2@852> INCLUDE "internal_commands.ab2"
0004A248 <internal_commands.ab2@853> INCLUDE "internal_commands.ab2"
0004A24C <internal_commands.ab2@857> INCLUDE "internal_commands.ab2"
0004A24E <internal_commands.ab2@858> INCLUDE "internal_commands.ab2"
0004A252 <internal_commands.ab2@859> INCLUDE "internal_commands.ab2"
0004A253 <internal_commands.ab2@860> INCLUDE "internal_commands.ab2"
0004A254 <internal_commands.ab2@861> INCLUDE "internal_commands.ab2"
0004A256 <internal_commands.ab2@863> INCLUDE "internal_commands.ab2"
0004A25A <internal_commands.ab2@864> INCLUDE "internal_commands.ab2"
0004A25C <internal_commands.ab2@865> INCLUDE "internal_commands.ab2"
0004A25E <internal_commands.ab2@866> INCLUDE "internal_commands.ab2"
0004A262 <internal_commands.ab2@867> INCLUDE "internal_commands.ab2"
0004A264 <internal_commands.ab2@868> INCLUDE "internal_commands.ab2"
0004A268 <internal_commands.ab2@872> INCLUDE "internal_commands.ab2"
0004A26A <internal_commands.ab2@873> INCLUDE "internal_commands.ab2"
0004A26E <internal_commands.ab2@874> INCLUDE "internal_commands.ab2"
0004A26F <internal_commands.ab2@875> INCLUDE "internal_commands.ab2"
0004A270 <internal_commands.ab2@876> INCLUDE "internal_commands.ab2"
0004A272 <internal_commands.ab2@878> INCLUDE "internal_commands.ab2"
0004A276 <internal_commands.ab2@879> INCLUDE "internal_commands.ab2"
0004A278 <internal_commands.ab2@880> INCLUDE "internal_commands.ab2"
0004A27A <internal_commands.ab2@881> INCLUDE "internal_commands.ab2"
0004A27E <internal_commands.ab2@882> INCLUDE "internal_commands.ab2"
0004A280 <internal_commands.ab2@883> INCLUDE "internal_commands.ab2"
0004A284 <internal_commands.ab2@887> INCLUDE "internal_commands.ab2"
0004A286 <internal_commands.ab2@888> INCLUDE "internal_commands.ab2"
0004A28A <internal_commands.ab2@889> INCLUDE "internal_commands.ab2"
0004A28B <internal_commands.ab2@890> INCLUDE "internal_commands.ab2"
0004A28C <internal_commands.ab2@891> INCLUDE "internal_commands.ab2"
0004A28E <internal_commands.ab2@893> INCLUDE "internal_commands.ab2"
0004A292 <internal_commands.ab2@894> INCLUDE "internal_commands.ab2"
0004A294 <internal_commands.ab2@895> INCLUDE "internal_commands.ab2"
0004A296 <internal_commands.ab2@896> INCLUDE "internal_commands.ab2"
0004A29A <internal_commands.ab2@897> INCLUDE "internal_commands.ab2"
0004A29C <internal_commands.ab2@898> INCLUDE "internal_commands.ab2"
0004A2A0 <internal_commands.ab2@902> INCLUDE "internal_commands.ab2"
0004A2A2 <internal_commands.ab2@903> INCLUDE "internal_commands.ab2"
0004A2A6 <internal_commands.ab2@904> INCLUDE "internal_commands.ab2"
0004A2A7 <internal_commands.ab2@905> INCLUDE "internal_commands.ab2"
0004A2A8 <internal_commands.ab2@906> INCLUDE "internal_commands.ab2"
0004A2AA <internal_commands.ab2@908> INCLUDE "internal_commands.ab2"
0004A2AE <internal_commands.ab2@909> INCLUDE "internal_commands.ab2"
0004A2B0 <internal_commands.ab2@910> INCLUDE "internal_commands.ab2"
0004A2B2 <internal_commands.ab2@911> INCLUDE "internal_commands.ab2"
0004A2B6 <internal_commands.ab2@912> INCLUDE "internal_commands.ab2"
0004A2B8 <internal_commands.ab2@913> INCLUDE "internal_commands.ab2"
0004A2BC <internal_commands.ab2@917> INCLUDE "internal_commands.ab2"
0004A2BE <internal_commands.ab2@918> INCLUDE "internal_commands.ab2"
0004A2C2 <internal_commands.ab2@919> INCLUDE "internal_commands.ab2"
0004A2C3 <internal_commands.ab2@920> INCLUDE "internal_commands.ab2"
0004A2C4 <internal_commands.ab2@921> INCLUDE "internal_commands.ab2"
0004A2C6 <internal_commands.ab2@923> INCLUDE "internal_commands.ab2"
0004A2CA <internal_commands.ab2@924> INCLUDE "internal_commands.ab2"
0004A2CC <internal_commands.ab2@925> INCLUDE "internal_commands.ab2"
0004A2CE <internal_commands.ab2@926> INCLUDE "internal_commands.ab2"
0004A2D2 <internal_commands.ab2@927> INCLUDE "internal_commands.ab2"
0004A2D4 <internal_commands.ab2@928> INCLUDE "internal_commands.ab2"
0004A2D8 <internal_commands.ab2@932> INCLUDE "internal_commands.ab2"
0004A2DA <internal_commands.ab2@933> INCLUDE "internal_commands.ab2"
0004A2DF <internal_commands.ab2@934> INCLUDE "internal_commands.ab2"
0004A2E0 <internal_commands.ab2@935> INCLUDE "internal_commands.ab2"
0004A2E2 <internal_commands.ab2@938> INCLUDE "internal_commands.ab2"
0004A2E6 <internal_commands.ab2@939> INCLUDE "internal_commands.ab2"
0004A2E8 <internal_commands.ab2@940> INCLUDE "internal_commands.ab2"
0004A2EA <internal_commands.ab2@941> INCLUDE "internal_commands.ab2"
0004A2EE <internal_commands.ab2@942> INCLUDE "internal_commands.ab2"
0004A2F0 <internal_commands.ab2@943> INCLUDE "internal_commands.ab2"
0004A2F4 <internal_commands.ab2@947> INCLUDE "internal_commands.ab2"
0004A2F6 <internal_commands.ab2@948> INCLUDE "internal_commands.ab2"
0004A2FB <internal_commands.ab2@949> INCLUDE "internal_commands.ab2"
0004A2FC <internal_commands.ab2@950> INCLUDE "internal_commands.ab2"
0004A2FE <internal_commands.ab2@953> INCLUDE "internal_commands.ab2"
0004A302 <internal_commands.ab2@954> INCLUDE "internal_commands.ab2"
0004A304 <internal_commands.ab2@955> INCLUDE "internal_commands.ab2"
0004A306 <internal_commands.ab2@956> INCLUDE "internal_commands.ab2"
0004A30A <internal_commands.ab2@957> INCLUDE "internal_commands.ab2"
0004A30C <internal_commands.ab2@958> INCLUDE "internal_commands.ab2"
0004A310 <internal_commands.ab2@962> INCLUDE "internal_commands.ab2"
0004A312 <internal_commands.ab2@963> INCLUDE "internal_commands.ab2"
0004A317 <internal_commands.ab2@964> INCLUDE "internal_commands.ab2"
0004A318 <internal_commands.ab2@965> INCLUDE "internal_commands.ab2"
0004A31A <internal_commands.ab2@968> INCLUDE "internal_commands.ab2"
0004A31E <internal_commands.ab2@969> INCLUDE "internal_commands.ab2"
0004A320 <internal_commands.ab2@970> INCLUDE "internal_commands.ab2"
0004A322 <internal_commands.ab2@971> INCLUDE "internal_commands.ab2"
0004A326 <internal_commands.ab2@972> INCLUDE "internal_commands.ab2"
0004A328 <internal_commands.ab2@973> INCLUDE "internal_commands.ab2"
0004A32C <internal_commands.ab2@977> INCLUDE "internal_commands.ab2"
0004A32E <internal_commands.ab2@978> INCLUDE "internal_commands.ab2"
0004A333 <internal_commands.ab2@979> INCLUDE "internal_commands.ab2"
0004A334 <internal_commands.ab2@980> INCLUDE "internal_commands.ab2"
0004A336 <internal_commands.ab2@983> INCLUDE "internal_commands.ab2"
0004A33A <internal_commands.ab2@984> INCLUDE "internal_commands.ab2"
0004A33C <internal_commands.ab2@985> INCLUDE "internal_commands.ab2"
0004A33E <internal_commands.ab2@986> INCLUDE "internal_commands.ab2"
0004A342 <internal_commands.ab2@987> INCLUDE "internal_commands.ab2"
0004A344 <internal_commands.ab2@988> INCLUDE "internal_commands.ab2"
0004A348 <internal_commands.ab2@992> INCLUDE "internal_commands.ab2"
0004A34A <internal_commands.ab2@993> INCLUDE "internal_commands.ab2"
0004A34F <internal_commands.ab2@994> INCLUDE "internal_commands.ab2"
0004A350 <internal_commands.ab2@995> INCLUDE "internal_commands.ab2"
0004A352 <internal_commands.ab2@998> INCLUDE "internal_commands.ab2"
0004A356 <internal_commands.ab2@999> INCLUDE "internal_commands.ab2"
0004A358 <internal_commands.ab2@1000> INCLUDE "internal_commands.ab2"
0004A35A <internal_commands.ab2@1001> INCLUDE "internal_commands.ab2"
0004A35E <internal_commands.ab2@1002> INCLUDE "internal_commands.ab2"
0004A360 <internal_commands.ab2@1003> INCLUDE "internal_commands.ab2"
0004A364 <internal_commands.ab2@1007> INCLUDE "internal_commands.ab2"
0004A366 <internal_commands.ab2@1008> INCLUDE "internal_commands.ab2"
0004A36B <internal_commands.ab2@1009> INCLUDE "internal_commands.ab2"
0004A36C <internal_commands.ab2@1010> INCLUDE "internal_commands.ab2"
0004A36E <internal_commands.ab2@1013> INCLUDE "internal_commands.ab2"
0004A372 <internal_commands.ab2@1014> INCLUDE "internal_commands.ab2"
0004A374 <internal_commands.ab2@1015> INCLUDE "internal_commands.ab2"
0004A376 <internal_commands.ab2@1016> INCLUDE "internal_commands.ab2"
0004A37A <internal_commands.ab2@1017> INCLUDE "internal_commands.ab2"
0004A37C <internal_commands.ab2@1018> INCLUDE "internal_commands.ab2"
0004A380 <internal_commands.ab2@1022> INCLUDE "internal_commands.ab2"
0004A382 <internal_commands.ab2@1023> INCLUDE "internal_commands.ab2"
0004A387 <internal_commands.ab2@1024> INCLUDE "internal_commands.ab2"
0004A388 <internal_commands.ab2@1025> INCLUDE "internal_commands.ab2"
0004A38A <internal_commands.ab2@1028> INCLUDE "internal_commands.ab2"
0004A38E <internal_commands.ab2@1029> INCLUDE "internal_commands.ab2"
0004A390 <internal_commands.ab2@1030> INCLUDE "internal_commands.ab2"
0004A392 <internal_commands.ab2@1031> INCLUDE "internal_commands.ab2"
0004A396 <internal_commands.ab2@1032> INCLUDE "internal_commands.ab2"
0004A398 <internal_commands.ab2@1033> INCLUDE "internal_commands.ab2"
0004A39C <internal_commands.ab2@1037> INCLUDE "internal_commands.ab2"
0004A39E <internal_commands.ab2@1038> INCLUDE "internal_commands.ab2"
0004A3A3 <internal_commands.ab2@1039> INCLUDE "internal_commands.ab2"
0004A3A4 <internal_commands.ab2@1040> INCLUDE "internal_commands.ab2"
0004A3A6 <internal_commands.ab2@1043> INCLUDE "internal_commands.ab2"
0004A3AA <internal_commands.ab2@1044> INCLUDE "internal_commands.ab2"
0004A3AC <internal_commands.ab2@1045> INCLUDE "internal_commands.ab2"
0004A3AE <internal_commands.ab2@1046> INCLUDE "internal_commands.ab2"
0004A3B2 <internal_commands.ab2@1047> INCLUDE "internal_commands.ab2"
0004A3B4 <internal_commands.ab2@1048> INCLUDE "internal_commands.ab2"
0004A3B8 <internal_commands.ab2@1052> INCLUDE "internal_commands.ab2"
0004A3BA <internal_commands.ab2@1053> INCLUDE "internal_commands.ab2"
0004A3BF <internal_commands.ab2@1054> INCLUDE "internal_commands.ab2"
0004A3C0 <internal_commands.ab2@1055> INCLUDE "internal_commands.ab2"
0004A3C2 <internal_commands.ab2@1058> INCLUDE "internal_commands.ab2"
0004A3C6 <internal_commands.ab2@1059> INCLUDE "internal_commands.ab2"
0004A3C8 <internal_commands.ab2@1060> INCLUDE "internal_commands.ab2"
0004A3CA <internal_commands.ab2@1061> INCLUDE "internal_commands.ab2"
0004A3CE <internal_commands.ab2@1062> INCLUDE "internal_commands.ab2"
0004A3D0 <internal_commands.ab2@1063> INCLUDE "internal_commands.ab2"
0004A3D4 <internal_commands.ab2@1067> INCLUDE "internal_commands.ab2"
0004A3D6 <internal_commands.ab2@1068> INCLUDE "internal_commands.ab2"
0004A3DB <internal_commands.ab2@1069> INCLUDE "internal_commands.ab2"
0004A3DC <internal_commands.ab2@1070> INCLUDE "internal_commands.ab2"
0004A3DE <internal_commands.ab2@1073> INCLUDE "internal_commands.ab2"
0004A3E2 <internal_commands.ab2@1074> INCLUDE "internal_commands.ab2"
0004A3E4 <internal_commands.ab2@1075> INCLUDE "internal_commands.ab2"
0004A3E6 <internal_commands.ab2@1076> INCLUDE "internal_commands.ab2"
0004A3EA <internal_commands.ab2@1077> INCLUDE "internal_commands.ab2"
0004A3EC <internal_commands.ab2@1078> INCLUDE "internal_commands.ab2"
0004A3F0 <internal_commands.ab2@1082> INCLUDE "internal_commands.ab2"
0004A3F2 <internal_commands.ab2@1083> INCLUDE "internal_commands.ab2"
0004A3F7 <internal_commands.ab2@1084> INCLUDE "internal_commands.ab2"
0004A3F8 <internal_commands.ab2@1085> INCLUDE "internal_commands.ab2"
0004A3FA <internal_commands.ab2@1088> INCLUDE "internal_commands.ab2"
0004A3FE <internal_commands.ab2@1089> INCLUDE "internal_commands.ab2"
0004A400 <internal_commands.ab2@1090> INCLUDE "internal_commands.ab2"
0004A402 <internal_commands.ab2@1091> INCLUDE "internal_commands.ab2"
0004A406 <internal_commands.ab2@1092> INCLUDE "internal_commands.ab2"
0004A408 <internal_commands.ab2@1093> INCLUDE "internal_commands.ab2"
0004A40C <internal_commands.ab2@1097> INCLUDE "internal_commands.ab2"
0004A40E <internal_commands.ab2@1098> INCLUDE "internal_commands.ab2"
0004A413 <internal_commands.ab2@1099> INCLUDE "internal_commands.ab2"
0004A414 <internal_commands.ab2@1100> INCLUDE "internal_commands.ab2"
0004A416 <internal_commands.ab2@1103> INCLUDE "internal_commands.ab2"
0004A41A <internal_commands.ab2@1104> INCLUDE "internal_commands.ab2"
0004A41C <internal_commands.ab2@1105> INCLUDE "internal_commands.ab2"
0004A41E <internal_commands.ab2@1106> INCLUDE "internal_commands.ab2"
0004A422 <internal_commands.ab2@1107> INCLUDE "internal_commands.ab2"
0004A424 <internal_commands.ab2@1108> INCLUDE "internal_commands.ab2"
0004A428 <internal_commands.ab2@1112> INCLUDE "internal_commands.ab2"
0004A42A <internal_commands.ab2@1113> INCLUDE "internal_commands.ab2"
0004A42F <internal_commands.ab2@1114> INCLUDE "internal_commands.ab2"
0004A430 <internal_commands.ab2@1115> INCLUDE "internal_commands.ab2"
0004A432 <internal_commands.ab2@1118> INCLUDE "internal_commands.ab2"
0004A436 <internal_commands.ab2@1119> INCLUDE "internal_commands.ab2"
0004A438 <internal_commands.ab2@1120> INCLUDE "internal_commands.ab2"
0004A43A <internal_commands.ab2@1121> INCLUDE "internal_commands.ab2"
0004A43E <internal_commands.ab2@1122> INCLUDE "internal_commands.ab2"
0004A440 <internal_commands.ab2@1123> INCLUDE "internal_commands.ab2"
0004A444 <internal_commands.ab2@1127> INCLUDE "internal_commands.ab2"
0004A446 <internal_commands.ab2@1128> INCLUDE "internal_commands.ab2"
0004A44B <internal_commands.ab2@1129> INCLUDE "internal_commands.ab2"
0004A44C <internal_commands.ab2@1130> INCLUDE "internal_commands.ab2"
0004A44E <internal_commands.ab2@1133> INCLUDE "internal_commands.ab2"
0004A452 <internal_commands.ab2@1134> INCLUDE "internal_commands.ab2"
0004A454 <internal_commands.ab2@1135> INCLUDE "internal_commands.ab2"
0004A456 <internal_commands.ab2@1136> INCLUDE "internal_commands.ab2"
0004A45A <internal_commands.ab2@1137> INCLUDE "internal_commands.ab2"
0004A45C <internal_commands.ab2@1138> INCLUDE "internal_commands.ab2"
0004A460 <internal_commands.ab2@1142> INCLUDE "internal_commands.ab2"
0004A462 <internal_commands.ab2@1143> INCLUDE "internal_commands.ab2"
0004A467 <internal_commands.ab2@1144> INCLUDE "internal_commands.ab2"
0004A468 <internal_commands.ab2@1145> INCLUDE "internal_commands.ab2"
0004A46A <internal_commands.ab2@1148> INCLUDE "internal_commands.ab2"
0004A46E <internal_commands.ab2@1149> INCLUDE "internal_commands.ab2"
0004A470 <internal_commands.ab2@1150> INCLUDE "internal_commands.ab2"
0004A472 <internal_commands.ab2@1151> INCLUDE "internal_commands.ab2"
0004A476 <internal_commands.ab2@1152> INCLUDE "internal_commands.ab2"
0004A478 <internal_commands.ab2@1153> INCLUDE "internal_commands.ab2"
0004A47C <internal_commands.ab2@1157> INCLUDE "internal_commands.ab2"
0004A47E <internal_commands.ab2@1158> INCLUDE "internal_commands.ab2"
0004A483 <internal_commands.ab2@1159> INCLUDE "internal_commands.ab2"
0004A484 <internal_commands.ab2@1160> INCLUDE "internal_commands.ab2"
0004A486 <internal_commands.ab2@1163> INCLUDE "internal_commands.ab2"
0004A48A <internal_commands.ab2@1164> INCLUDE "internal_commands.ab2"
0004A48C <internal_commands.ab2@1165> INCLUDE "internal_commands.ab2"
0004A48E <internal_commands.ab2@1166> INCLUDE "internal_commands.ab2"
0004A492 <internal_commands.ab2@1167> INCLUDE "internal_commands.ab2"
0004A494 <internal_commands.ab2@1168> INCLUDE "internal_commands.ab2"
0004A498 <internal_commands.ab2@1172> INCLUDE "internal_commands.ab2"
0004A49A <internal_commands.ab2@1173> INCLUDE "internal_commands.ab2"
0004A49F <internal_commands.ab2@1174> INCLUDE "internal_commands.ab2"
0004A4A0 <internal_commands.ab2@1175> INCLUDE "internal_commands.ab2"
0004A4A2 <internal_commands.ab2@1178> INCLUDE "internal_commands.ab2"
0004A4A6 <internal_commands.ab2@1179> INCLUDE "internal_commands.ab2"
0004A4A8 <internal_commands.ab2@1180> INCLUDE "internal_commands.ab2"
0004A4AA <internal_commands.ab2@1181> INCLUDE "internal_commands.ab2"
0004A4AE <internal_commands.ab2@1182> INCLUDE "internal_commands.ab2"
0004A4B0 <internal_commands.ab2@1183> INCLUDE "internal_commands.ab2"
0004A4B4 <internal_commands.ab2@1186> INCLUDE "internal_commands.ab2"
0004A4B6 <internal_commands.ab2@1187> INCLUDE "internal_commands.ab2"
0004A4BA <internal_commands.ab2@1188> INCLUDE "internal_commands.ab2"
0004A4BB <internal_commands.ab2@1189> INCLUDE "internal_commands.ab2"
0004A4BC <internal_commands.ab2@1190> INCLUDE "internal_commands.ab2"
0004A4BE <internal_commands.ab2@1192> INCLUDE "internal_commands.ab2"
0004A4C2 <internal_commands.ab2@1193> INCLUDE "internal_commands.ab2"
0004A4C4 <internal_commands.ab2@1194> INCLUDE "internal_commands.ab2"
0004A4C6 <internal_commands.ab2@1195> INCLUDE "internal_commands.ab2"
0004A4CA <internal_commands.ab2@1196> INCLUDE "internal_commands.ab2"
0004A4CC <internal_commands.ab2@1197> INCLUDE "internal_commands.ab2"
0004A4D0 <internal_commands.ab2@1201> INCLUDE "internal_commands.ab2"
0004A4D2 <internal_commands.ab2@1202> INCLUDE "internal_commands.ab2"
0004A4D7 <internal_commands.ab2@1203> INCLUDE "internal_commands.ab2"
0004A4D8 <internal_commands.ab2@1204> INCLUDE "internal_commands.ab2"
0004A4DA <internal_commands.ab2@1207> INCLUDE "internal_commands.ab2"
0004A4DE <internal_commands.ab2@1208> INCLUDE "internal_commands.ab2"
0004A4E0 <internal_commands.ab2@1209> INCLUDE "internal_commands.ab2"
0004A4E2 <internal_commands.ab2@1210> INCLUDE "internal_commands.ab2"
0004A4E6 <internal_commands.ab2@1211> INCLUDE "internal_commands.ab2"
0004A4E8 <internal_commands.ab2@1212> INCLUDE "internal_commands.ab2"
0004A4EC <internal_commands.ab2@1216> INCLUDE "internal_commands.ab2"
0004A4EE <internal_commands.ab2@1217> INCLUDE "internal_commands.ab2"
0004A4F2 <internal_commands.ab2@1218> INCLUDE "internal_commands.ab2"
0004A4F3 <internal_commands.ab2@1219> INCLUDE "internal_commands.ab2"
0004A4F4 <internal_commands.ab2@1220> INCLUDE "internal_commands.ab2"
0004A4F6 <internal_commands.ab2@1222> INCLUDE "internal_commands.ab2"
0004A4FA <internal_commands.ab2@1223> INCLUDE "internal_commands.ab2"
0004A4FC <internal_commands.ab2@1224> INCLUDE "internal_commands.ab2"
0004A4FE <internal_commands.ab2@1225> INCLUDE "internal_commands.ab2"
0004A502 <internal_commands.ab2@1226> INCLUDE "internal_commands.ab2"
0004A504 <internal_commands.ab2@1227> INCLUDE "internal_commands.ab2"
0004A508 <internal_commands.ab2@1231> INCLUDE "internal_commands.ab2"
0004A50A <internal_commands.ab2@1232> INCLUDE "internal_commands.ab2"
0004A50F <internal_commands.ab2@1233> INCLUDE "internal_commands.ab2"
0004A510 <internal_commands.ab2@1234> INCLUDE "internal_commands.ab2"
0004A512 <internal_commands.ab2@1237> INCLUDE "internal_commands.ab2"
0004A516 <internal_commands.ab2@1238> INCLUDE "internal_commands.ab2"
0004A518 <internal_commands.ab2@1239> INCLUDE "internal_commands.ab2"
0004A51A <internal_commands.ab2@1240> INCLUDE "internal_commands.ab2"
0004A51E <internal_commands.ab2@1241> INCLUDE "internal_commands.ab2"
0004A520 <internal_commands.ab2@1242> INCLUDE "internal_commands.ab2"
0004A524 <internal_commands.ab2@1246> INCLUDE "internal_commands.ab2"
0004A526 <internal_commands.ab2@1247> INCLUDE "internal_commands.ab2"
0004A52B <internal_commands.ab2@1248> INCLUDE "internal_commands.ab2"
0004A52C <internal_commands.ab2@1249> INCLUDE "internal_commands.ab2"
0004A52E <internal_commands.ab2@1252> INCLUDE "internal_commands.ab2"
0004A532 <internal_commands.ab2@1253> INCLUDE "internal_commands.ab2"
0004A534 <internal_commands.ab2@1254> INCLUDE "internal_commands.ab2"
0004A536 <internal_commands.ab2@1255> INCLUDE "internal_commands.ab2"
0004A53A <internal_commands.ab2@1256> INCLUDE "internal_commands.ab2"
0004A53C <internal_commands.ab2@1257> INCLUDE "internal_commands.ab2"
0004A540 <internal_commands.ab2@1261> INCLUDE "internal_commands.ab2"
0004A542 <internal_commands.ab2@1262> INCLUDE "internal_commands.ab2"
0004A546 <internal_commands.ab2@1263> INCLUDE "internal_commands.ab2"
0004A547 <internal_commands.ab2@1264> INCLUDE "internal_commands.ab2"
0004A548 <internal_commands.ab2@1265> INCLUDE "internal_commands.ab2"
0004A54A <internal_commands.ab2@1267> INCLUDE "internal_commands.ab2"
0004A54E <internal_commands.ab2@1268> INCLUDE "internal_commands.ab2"
0004A550 <internal_commands.ab2@1269> INCLUDE "internal_commands.ab2"
0004A552 <internal_commands.ab2@1270> INCLUDE "internal_commands.ab2"
0004A556 <internal_commands.ab2@1271> INCLUDE "internal_commands.ab2"
0004A558 <internal_commands.ab2@1272> INCLUDE "internal_commands.ab2"
0004A55C <internal_commands.ab2@1276> INCLUDE "internal_commands.ab2"
0004A55E <internal_commands.ab2@1277> INCLUDE "internal_commands.ab2"
0004A563 <internal_commands.ab2@1278> INCLUDE "internal_commands.ab2"
0004A564 <internal_commands.ab2@1279> INCLUDE "internal_commands.ab2"
0004A566 <internal_commands.ab2@1282> INCLUDE "internal_commands.ab2"
0004A56A <internal_commands.ab2@1283> INCLUDE "internal_commands.ab2"
0004A56C <internal_commands.ab2@1284> INCLUDE "internal_commands.ab2"
0004A56E <internal_commands.ab2@1285> INCLUDE "internal_commands.ab2"
0004A572 <internal_commands.ab2@1286> INCLUDE "internal_commands.ab2"
0004A574 <internal_commands.ab2@1287> INCLUDE "internal_commands.ab2"
0004A578 <internal_commands.ab2@1291> INCLUDE "internal_commands.ab2"
0004A57A <internal_commands.ab2@1292> INCLUDE "internal_commands.ab2"
0004A57E <internal_commands.ab2@1293> INCLUDE "internal_commands.ab2"
0004A57F <internal_commands.ab2@1294> INCLUDE "internal_commands.ab2"
0004A580 <internal_commands.ab2@1295> INCLUDE "internal_commands.ab2"
0004A582 <internal_commands.ab2@1297> INCLUDE "internal_commands.ab2"
0004A586 <internal_commands.ab2@1298> INCLUDE "internal_commands.ab2"
0004A588 <internal_commands.ab2@1299> INCLUDE "internal_commands.ab2"
0004A58A <internal_commands.ab2@1300> INCLUDE "internal_commands.ab2"
0004A58E <internal_commands.ab2@1301> INCLUDE "internal_commands.ab2"
0004A590 <internal_commands.ab2@1302> INCLUDE "internal_commands.ab2"
0004A594 <internal_commands.ab2@1306> INCLUDE "internal_commands.ab2"
0004A596 <internal_commands.ab2@1307> INCLUDE "internal_commands.ab2"
0004A59A <internal_commands.ab2@1308> INCLUDE "internal_commands.ab2"
0004A59B <internal_commands.ab2@1309> INCLUDE "internal_commands.ab2"
0004A59C <internal_commands.ab2@1310> INCLUDE "internal_commands.ab2"
0004A59E <internal_commands.ab2@1312> INCLUDE "internal_commands.ab2"
0004A5A2 <internal_commands.ab2@1313> INCLUDE "internal_commands.ab2"
0004A5A4 <internal_commands.ab2@1314> INCLUDE "internal_commands.ab2"
0004A5A6 <internal_commands.ab2@1315> INCLUDE "internal_commands.ab2"
0004A5AA <internal_commands.ab2@1316> INCLUDE "internal_commands.ab2"
0004A5AC <internal_commands.ab2@1317> INCLUDE "internal_commands.ab2"
0004A5B0 <internal_commands.ab2@1321> INCLUDE "internal_commands.ab2"
0004A5B2 <internal_commands.ab2@1322> INCLUDE "internal_commands.ab2"
0004A5BA <internal_commands.ab2@1323> INCLUDE "internal_commands.ab2"
0004A5BB <internal_commands.ab2@1324> INCLUDE "internal_commands.ab2"
0004A5BC <internal_commands.ab2@1325> INCLUDE "internal_commands.ab2"
0004A5BE <internal_commands.ab2@1327> INCLUDE "internal_commands.ab2"
0004A5C2 <internal_commands.ab2@1328> INCLUDE "internal_commands.ab2"
0004A5C4 <internal_commands.ab2@1329> INCLUDE "internal_commands.ab2"
0004A5C6 <internal_commands.ab2@1330> INCLUDE "internal_commands.ab2"
0004A5CA <internal_commands.ab2@1331> INCLUDE "internal_commands.ab2"
0004A5CC <internal_commands.ab2@1332> INCLUDE "internal_commands.ab2"
0004A5D0 <internal_commands.ab2@1336> INCLUDE "internal_commands.ab2"
0004A5D2 <internal_commands.ab2@1337> INCLUDE "internal_commands.ab2"
0004A5D6 <internal_commands.ab2@1338> INCLUDE "internal_commands.ab2"
0004A5D7 <internal_commands.ab2@1339> INCLUDE "internal_commands.ab2"
0004A5D8 <internal_commands.ab2@1340> INCLUDE "internal_commands.ab2"
0004A5DA <internal_commands.ab2@1342> INCLUDE "internal_commands.ab2"
0004A5DE <internal_commands.ab2@1343> INCLUDE "internal_commands.ab2"
0004A5E0 <internal_commands.ab2@1344> INCLUDE "internal_commands.ab2"
0004A5E2 <internal_commands.ab2@1345> INCLUDE "internal_commands.ab2"
0004A5E6 <internal_commands.ab2@1346> INCLUDE "internal_commands.ab2"
0004A5E8 <internal_commands.ab2@1347> INCLUDE "internal_commands.ab2"
0004A5EC <internal_commands.ab2@1351> INCLUDE "internal_commands.ab2"
0004A5EE <internal_commands.ab2@1352> INCLUDE "internal_commands.ab2"
0004A5F2 <internal_commands.ab2@1353> INCLUDE "internal_commands.ab2"
0004A5F3 <internal_commands.ab2@1354> INCLUDE "internal_commands.ab2"
0004A5F4 <internal_commands.ab2@1355> INCLUDE "internal_commands.ab2"
0004A5F6 <internal_commands.ab2@1357> INCLUDE "internal_commands.ab2"
0004A5FA <internal_commands.ab2@1358> INCLUDE "internal_commands.ab2"
0004A5FC <internal_commands.ab2@1359> INCLUDE "internal_commands.ab2"
0004A5FE <internal_commands.ab2@1360> INCLUDE "internal_commands.ab2"
0004A602 <internal_commands.ab2@1361> INCLUDE "internal_commands.ab2"
0004A604 <internal_commands.ab2@1362> INCLUDE "internal_commands.ab2"
0004A608 <internal_commands.ab2@1366> INCLUDE "internal_commands.ab2"
0004A60A <internal_commands.ab2@1367> INCLUDE "internal_commands.ab2"
0004A60E <internal_commands.ab2@1368> INCLUDE "internal_commands.ab2"
0004A60F <internal_commands.ab2@1369> INCLUDE "internal_commands.ab2"
0004A610 <internal_commands.ab2@1370> INCLUDE "internal_commands.ab2"
0004A612 <internal_commands.ab2@1372> INCLUDE "internal_commands.ab2"
0004A616 <internal_commands.ab2@1373> INCLUDE "internal_commands.ab2"
0004A618 <internal_commands.ab2@1374> INCLUDE "internal_commands.ab2"
0004A61A <internal_commands.ab2@1375> INCLUDE "internal_commands.ab2"
0004A61E <internal_commands.ab2@1376> INCLUDE "internal_commands.ab2"
0004A620 <internal_commands.ab2@1377> INCLUDE "internal_commands.ab2"
0004A624 <internal_commands.ab2@1381> INCLUDE "internal_commands.ab2"
0004A626 <internal_commands.ab2@1382> INCLUDE "internal_commands.ab2"
0004A62B <internal_commands.ab2@1383> INCLUDE "internal_commands.ab2"
0004A62C <internal_commands.ab2@1384> INCLUDE "internal_commands.ab2"
0004A62E <internal_commands.ab2@1387> INCLUDE "internal_commands.ab2"
0004A632 <internal_commands.ab2@1388> INCLUDE "internal_commands.ab2"
0004A634 <internal_commands.ab2@1389> INCLUDE "internal_commands.ab2"
0004A636 <internal_commands.ab2@1390> INCLUDE "internal_commands.ab2"
0004A63A <internal_commands.ab2@1391> INCLUDE "internal_commands.ab2"
0004A63C <internal_commands.ab2@1392> INCLUDE "internal_commands.ab2"
0004A640 <internal_commands.ab2@1396> INCLUDE "internal_commands.ab2"
0004A642 <internal_commands.ab2@1397> INCLUDE "internal_commands.ab2"
0004A646 <internal_commands.ab2@1398> INCLUDE "internal_commands.ab2"
0004A647 <internal_commands.ab2@1399> INCLUDE "internal_commands.ab2"
0004A648 <internal_commands.ab2@1400> INCLUDE "internal_commands.ab2"
0004A64A <internal_commands.ab2@1402> INCLUDE "internal_commands.ab2"
0004A64E <internal_commands.ab2@1403> INCLUDE "internal_commands.ab2"
0004A650 <internal_commands.ab2@1404> INCLUDE "internal_commands.ab2"
0004A652 <internal_commands.ab2@1405> INCLUDE "internal_commands.ab2"
0004A656 <internal_commands.ab2@1406> INCLUDE "internal_commands.ab2"
0004A658 <internal_commands.ab2@1407> INCLUDE "internal_commands.ab2"
0004A65C <internal_commands.ab2@1411> INCLUDE "internal_commands.ab2"
0004A65E <internal_commands.ab2@1412> INCLUDE "internal_commands.ab2"
0004A662 <internal_commands.ab2@1413> INCLUDE "internal_commands.ab2"
0004A663 <internal_commands.ab2@1414> INCLUDE "internal_commands.ab2"
0004A664 <internal_commands.ab2@1415> INCLUDE "internal_commands.ab2"
0004A666 <internal_commands.ab2@1417> INCLUDE "internal_commands.ab2"
0004A66A <internal_commands.ab2@1418> INCLUDE "internal_commands.ab2"
0004A66C <internal_commands.ab2@1419> INCLUDE "internal_commands.ab2"
0004A66E <internal_commands.ab2@1420> INCLUDE "internal_commands.ab2"
0004A672 <internal_commands.ab2@1421> INCLUDE "internal_commands.ab2"
0004A674 <internal_commands.ab2@1422> INCLUDE "internal_commands.ab2"
0004A678 <internal_commands.ab2@1426> INCLUDE "internal_commands.ab2"
0004A67A <internal_commands.ab2@1427> INCLUDE "internal_commands.ab2"
0004A67F <internal_commands.ab2@1428> INCLUDE "internal_commands.ab2"
0004A680 <internal_commands.ab2@1429> INCLUDE "internal_commands.ab2"
0004A682 <internal_commands.ab2@1432> INCLUDE "internal_commands.ab2"
0004A686 <internal_commands.ab2@1433> INCLUDE "internal_commands.ab2"
0004A688 <internal_commands.ab2@1434> INCLUDE "internal_commands.ab2"
0004A68A <internal_commands.ab2@1435> INCLUDE "internal_commands.ab2"
0004A68E <internal_commands.ab2@1436> INCLUDE "internal_commands.ab2"
0004A690 <internal_commands.ab2@1437> INCLUDE "internal_commands.ab2"
0004A694 <internal_commands.ab2@1441> INCLUDE "internal_commands.ab2"
0004A696 <internal_commands.ab2@1442> INCLUDE "internal_commands.ab2"
0004A69B <internal_commands.ab2@1443> INCLUDE "internal_commands.ab2"
0004A69C <internal_commands.ab2@1444> INCLUDE "internal_commands.ab2"
0004A69E <internal_commands.ab2@1447> INCLUDE "internal_commands.ab2"
0004A6A2 <internal_commands.ab2@1448> INCLUDE "internal_commands.ab2"
0004A6A4 <internal_commands.ab2@1449> INCLUDE "internal_commands.ab2"
0004A6A6 <internal_commands.ab2@1450> INCLUDE "internal_commands.ab2"
0004A6AA <internal_commands.ab2@1451> INCLUDE "internal_commands.ab2"
0004A6AC <internal_commands.ab2@1452> INCLUDE "internal_commands.ab2"
0004A6B0 <internal_commands.ab2@1457> INCLUDE "internal_commands.ab2"
0004A6B2 <internal_commands.ab2@1458> INCLUDE "internal_commands.ab2"
0004A6B8 <internal_commands.ab2@1459> INCLUDE "internal_commands.ab2"
0004A6B9 <internal_commands.ab2@1460> INCLUDE "internal_commands.ab2"
0004A6BA <internal_commands.ab2@1461> INCLUDE "internal_commands.ab2"
0004A6BC <internal_commands.ab2@1463> INCLUDE "internal_commands.ab2"
0004A6C0 <internal_commands.ab2@1464> INCLUDE "internal_commands.ab2"
0004A6C2 <internal_commands.ab2@1465> INCLUDE "internal_commands.ab2"
0004A6C4 <internal_commands.ab2@1466> INCLUDE "internal_commands.ab2"
0004A6C8 <internal_commands.ab2@1467> INCLUDE "internal_commands.ab2"
0004A6CA <internal_commands.ab2@1468> INCLUDE "internal_commands.ab2"
0004A6CE <internal_commands.ab2@1472> INCLUDE "internal_commands.ab2"
0004A6D0 <internal_commands.ab2@1473> INCLUDE "internal_commands.ab2"
0004A6D6 <internal_commands.ab2@1474> INCLUDE "internal_commands.ab2"
0004A6D7 <internal_commands.ab2@1475> INCLUDE "internal_commands.ab2"
0004A6D8 <internal_commands.ab2@1476> INCLUDE "internal_commands.ab2"
0004A6DA <internal_commands.ab2@1478> INCLUDE "internal_commands.ab2"
0004A6DE <internal_commands.ab2@1479> INCLUDE "internal_commands.ab2"
0004A6E0 <internal_commands.ab2@1480> INCLUDE "internal_commands.ab2"
0004A6E2 <internal_commands.ab2@1481> INCLUDE "internal_commands.ab2"
0004A6E6 <internal_commands.ab2@1482> INCLUDE "internal_commands.ab2"
0004A6E8 <internal_commands.ab2@1483> INCLUDE "internal_commands.ab2"
0004A6EC <internal_commands.ab2@1487> INCLUDE "internal_commands.ab2"
0004A6EE <internal_commands.ab2@1488> INCLUDE "internal_commands.ab2"
0004A6F4 <internal_commands.ab2@1489> INCLUDE "internal_commands.ab2"
0004A6F5 <internal_commands.ab2@1490> INCLUDE "internal_commands.ab2"
0004A6F6 <internal_commands.ab2@1491> INCLUDE "internal_commands.ab2"
0004A6F8 <internal_commands.ab2@1493> INCLUDE "internal_commands.ab2"
0004A6FC <internal_commands.ab2@1494> INCLUDE "internal_commands.ab2"
0004A6FE <internal_commands.ab2@1495> INCLUDE "internal_commands.ab2"
0004A700 <internal_commands.ab2@1496> INCLUDE "internal_commands.ab2"
0004A704 <internal_commands.ab2@1497> INCLUDE "internal_commands.ab2"
0004A706 <internal_commands.ab2@1498> INCLUDE "internal_commands.ab2"
0004A70A <internal_commands.ab2@1502> INCLUDE "internal_commands.ab2"
0004A70C <internal_commands.ab2@1503> INCLUDE "internal_commands.ab2"
0004A711 <internal_commands.ab2@1504> INCLUDE "internal_commands.ab2"
0004A712 <internal_commands.ab2@1505> INCLUDE "internal_commands.ab2"
0004A714 <internal_commands.ab2@1508> INCLUDE "internal_commands.ab2"
0004A718 <internal_commands.ab2@1509> INCLUDE "internal_commands.ab2"
0004A71A <internal_commands.ab2@1510> INCLUDE "internal_commands.ab2"
0004A71C <internal_commands.ab2@1511> INCLUDE "internal_commands.ab2"
0004A720 <internal_commands.ab2@1512> INCLUDE "internal_commands.ab2"
0004A722 <internal_commands.ab2@1513> INCLUDE "internal_commands.ab2"
0004A726 <internal_commands.ab2@1517> INCLUDE "internal_commands.ab2"
0004A728 <internal_commands.ab2@1518> INCLUDE "internal_commands.ab2"
0004A72D <internal_commands.ab2@1519> INCLUDE "internal_commands.ab2"
0004A72E <internal_commands.ab2@1520> INCLUDE "internal_commands.ab2"
0004A730 <internal_commands.ab2@1523> INCLUDE "internal_commands.ab2"
0004A734 <internal_commands.ab2@1524> INCLUDE "internal_commands.ab2"
0004A736 <internal_commands.ab2@1525> INCLUDE "internal_commands.ab2"
0004A738 <internal_commands.ab2@1526> INCLUDE "internal_commands.ab2"
0004A73C <internal_commands.ab2@1527> INCLUDE "internal_commands.ab2"
0004A73E <internal_commands.ab2@1528> INCLUDE "internal_commands.ab2"
0004A742 <internal_commands.ab2@1532> INCLUDE "internal_commands.ab2"
0004A744 <internal_commands.ab2@1533> INCLUDE "internal_commands.ab2"
0004A749 <internal_commands.ab2@1534> INCLUDE "internal_commands.ab2"
0004A74A <internal_commands.ab2@1535> INCLUDE "internal_commands.ab2"
0004A74C <internal_commands.ab2@1538> INCLUDE "internal_commands.ab2"
0004A750 <internal_commands.ab2@1539> INCLUDE "internal_commands.ab2"
0004A752 <internal_commands.ab2@1540> INCLUDE "internal_commands.ab2"
0004A754 <internal_commands.ab2@1541> INCLUDE "internal_commands.ab2"
0004A758 <internal_commands.ab2@1542> INCLUDE "internal_commands.ab2"
0004A75A <internal_commands.ab2@1543> INCLUDE "internal_commands.ab2"
0004A75E <internal_commands.ab2@1547> INCLUDE "internal_commands.ab2"
0004A760 <internal_commands.ab2@1548> INCLUDE "internal_commands.ab2"
0004A764 <internal_commands.ab2@1549> INCLUDE "internal_commands.ab2"
0004A765 <internal_commands.ab2@1550> INCLUDE "internal_commands.ab2"
0004A766 <internal_commands.ab2@1551> INCLUDE "internal_commands.ab2"
0004A768 <internal_commands.ab2@1553> INCLUDE "internal_commands.ab2"
0004A76C <internal_commands.ab2@1554> INCLUDE "internal_commands.ab2"
0004A76E <internal_commands.ab2@1555> INCLUDE "internal_commands.ab2"
0004A770 <internal_commands.ab2@1556> INCLUDE "internal_commands.ab2"
0004A774 <internal_commands.ab2@1557> INCLUDE "internal_commands.ab2"
0004A776 <internal_commands.ab2@1558> INCLUDE "internal_commands.ab2"
0004A77A <internal_commands.ab2@1562> INCLUDE "internal_commands.ab2"
0004A77C <internal_commands.ab2@1563> INCLUDE "internal_commands.ab2"
0004A781 <internal_commands.ab2@1564> INCLUDE "internal_commands.ab2"
0004A782 <internal_commands.ab2@1565> INCLUDE "internal_commands.ab2"
0004A784 <internal_commands.ab2@1568> INCLUDE "internal_commands.ab2"
0004A788 <internal_commands.ab2@1569> INCLUDE "internal_commands.ab2"
0004A78A <internal_commands.ab2@1570> INCLUDE "internal_commands.ab2"
0004A78C <internal_commands.ab2@1571> INCLUDE "internal_commands.ab2"
0004A790 <internal_commands.ab2@1572> INCLUDE "internal_commands.ab2"
0004A792 <internal_commands.ab2@1573> INCLUDE "internal_commands.ab2"
0004A796 <internal_commands.ab2@1577> INCLUDE "internal_commands.ab2"
0004A798 <internal_commands.ab2@1578> INCLUDE "internal_commands.ab2"
0004A79C <internal_commands.ab2@1579> INCLUDE "internal_commands.ab2"
0004A79D <internal_commands.ab2@1580> INCLUDE "internal_commands.ab2"
0004A79E <internal_commands.ab2@1581> INCLUDE "internal_commands.ab2"
0004A7A0 <internal_commands.ab2@1583> INCLUDE "internal_commands.ab2"
0004A7A4 <internal_commands.ab2@1584> INCLUDE "internal_commands.ab2"
0004A7A6 <internal_commands.ab2@1585> INCLUDE "internal_commands.ab2"
0004A7A8 <internal_commands.ab2@1586> INCLUDE "internal_commands.ab2"
0004A7AC <internal_commands.ab2@1587> INCLUDE "internal_commands.ab2"
0004A7AE <internal_commands.ab2@1588> INCLUDE "internal_commands.ab2"
0004A7B2 <internal_commands.ab2@1592> INCLUDE "internal_commands.ab2"
0004A7B4 <internal_commands.ab2@1593> INCLUDE "internal_commands.ab2"
0004A7B8 <internal_commands.ab2@1594> INCLUDE "internal_commands.ab2"
0004A7B9 <internal_commands.ab2@1595> INCLUDE "internal_commands.ab2"
0004A7BA <internal_commands.ab2@1596> INCLUDE "internal_commands.ab2"
0004A7BC <internal_commands.ab2@1598> INCLUDE "internal_commands.ab2"
0004A7C0 <internal_commands.ab2@1599> INCLUDE "internal_commands.ab2"
0004A7C2 <internal_commands.ab2@1600> INCLUDE "internal_commands.ab2"
0004A7C4 <internal_commands.ab2@1601> INCLUDE "internal_commands.ab2"
0004A7C8 <internal_commands.ab2@1602> INCLUDE "internal_commands.ab2"
0004A7CA <internal_commands.ab2@1603> INCLUDE "internal_commands.ab2"
0004A7CE <internal_commands.ab2@1607> INCLUDE "internal_commands.ab2"
0004A7D0 <internal_commands.ab2@1608> INCLUDE "internal_commands.ab2"
0004A7D3 <internal_commands.ab2@1609> INCLUDE "internal_commands.ab2"
0004A7D4 <internal_commands.ab2@1610> INCLUDE "internal_commands.ab2"
0004A7D6 <internal_commands.ab2@1613> INCLUDE "internal_commands.ab2"
0004A7DA <internal_commands.ab2@1614> INCLUDE "internal_commands.ab2"
0004A7DC <internal_commands.ab2@1615> INCLUDE "internal_commands.ab2"
0004A7DE <internal_commands.ab2@1616> INCLUDE "internal_commands.ab2"
0004A7E2 <internal_commands.ab2@1617> INCLUDE "internal_commands.ab2"
0004A7E4 <internal_commands.ab2@1618> INCLUDE "internal_commands.ab2"
0004A7E8 <internal_commands.ab2@1622> INCLUDE "internal_commands.ab2"
0004A7EA <internal_commands.ab2@1623> INCLUDE "internal_commands.ab2"
0004A7EE <internal_commands.ab2@1624> INCLUDE "internal_commands.ab2"
0004A7EF <internal_commands.ab2@1625> INCLUDE "internal_commands.ab2"
0004A7F0 <internal_commands.ab2@1626> INCLUDE "internal_commands.ab2"
0004A7F2 <internal_commands.ab2@1628> INCLUDE "internal_commands.ab2"
0004A7F6 <internal_commands.ab2@1629> INCLUDE "internal_commands.ab2"
0004A7F8 <internal_commands.ab2@1630> INCLUDE "internal_commands.ab2"
0004A7FA <internal_commands.ab2@1631> INCLUDE "internal_commands.ab2"
0004A7FE <internal_commands.ab2@1632> INCLUDE "internal_commands.ab2"
0004A800 <internal_commands.ab2@1633> INCLUDE "internal_commands.ab2"
0004A804 <internal_commands.ab2@1637> INCLUDE "internal_commands.ab2"
0004A806 <internal_commands.ab2@1638> INCLUDE "internal_commands.ab2"
0004A80A <internal_commands.ab2@1639> INCLUDE "internal_commands.ab2"
0004A80B <internal_commands.ab2@1640> INCLUDE "internal_commands.ab2"
0004A80C <internal_commands.ab2@1641> INCLUDE "internal_commands.ab2"
0004A80E <internal_commands.ab2@1643> INCLUDE "internal_commands.ab2"
0004A812 <internal_commands.ab2@1644> INCLUDE "internal_commands.ab2"
0004A814 <internal_commands.ab2@1645> INCLUDE "internal_commands.ab2"
0004A816 <internal_commands.ab2@1646> INCLUDE "internal_commands.ab2"
0004A81A <internal_commands.ab2@1647> INCLUDE "internal_commands.ab2"
0004A81C <internal_commands.ab2@1648> INCLUDE "internal_commands.ab2"
0004A820 <internal_commands.ab2@1652> INCLUDE "internal_commands.ab2"
0004A822 <internal_commands.ab2@1653> INCLUDE "internal_commands.ab2"
0004A828 <internal_commands.ab2@1654> INCLUDE "internal_commands.ab2"
0004A829 <internal_commands.ab2@1655> INCLUDE "internal_commands.ab2"
0004A82A <internal_commands.ab2@1656> INCLUDE "internal_commands.ab2"
0004A82C <internal_commands.ab2@1658> INCLUDE "internal_commands.ab2"
0004A830 <internal_commands.ab2@1659> INCLUDE "internal_commands.ab2"
0004A832 <internal_commands.ab2@1660> INCLUDE "internal_commands.ab2"
0004A834 <internal_commands.ab2@1661> INCLUDE "internal_commands.ab2"
0004A838 <internal_commands.ab2@1662> INCLUDE "internal_commands.ab2"
0004A83A <internal_commands.ab2@1663> INCLUDE "internal_commands.ab2"
0004A83E <internal_commands.ab2@1667> INCLUDE "internal_commands.ab2"
0004A840 <internal_commands.ab2@1668> INCLUDE "internal_commands.ab2"
0004A844 <internal_commands.ab2@1669> INCLUDE "internal_commands.ab2"
0004A845 <internal_commands.ab2@1670> INCLUDE "internal_commands.ab2"
0004A846 <internal_commands.ab2@1671> INCLUDE "internal_commands.ab2"
0004A848 <internal_commands.ab2@1673> INCLUDE "internal_commands.ab2"
0004A84C <internal_commands.ab2@1674> INCLUDE "internal_commands.ab2"
0004A84E <internal_commands.ab2@1675> INCLUDE "internal_commands.ab2"
0004A850 <internal_commands.ab2@1676> INCLUDE "internal_commands.ab2"
0004A854 <internal_commands.ab2@1677> INCLUDE "internal_commands.ab2"
0004A856 <internal_commands.ab2@1678> INCLUDE "internal_commands.ab2"
0004A85A <internal_commands.ab2@1682> INCLUDE "internal_commands.ab2"
0004A85C <internal_commands.ab2@1683> INCLUDE "internal_commands.ab2"
0004A860 <internal_commands.ab2@1684> INCLUDE "internal_commands.ab2"
0004A861 <internal_commands.ab2@1685> INCLUDE "internal_commands.ab2"
0004A862 <internal_commands.ab2@1686> INCLUDE "internal_commands.ab2"
0004A864 <internal_commands.ab2@1688> INCLUDE "internal_commands.ab2"
0004A868 <internal_commands.ab2@1689> INCLUDE "internal_commands.ab2"
0004A86A <internal_commands.ab2@1690> INCLUDE "internal_commands.ab2"
0004A86C <internal_commands.ab2@1691> INCLUDE "internal_commands.ab2"
0004A870 <internal_commands.ab2@1692> INCLUDE "internal_commands.ab2"
0004A872 <internal_commands.ab2@1693> INCLUDE "internal_commands.ab2"
0004A876 <internal_commands.ab2@1697> INCLUDE "internal_commands.ab2"
0004A878 <internal_commands.ab2@1698> INCLUDE "internal_commands.ab2"
0004A87D <internal_commands.ab2@1699> INCLUDE "internal_commands.ab2"
0004A87E <internal_commands.ab2@1700> INCLUDE "internal_commands.ab2"
0004A880 <internal_commands.ab2@1703> INCLUDE "internal_commands.ab2"
0004A884 <internal_commands.ab2@1704> INCLUDE "internal_commands.ab2"
0004A886 <internal_commands.ab2@1705> INCLUDE "internal_commands.ab2"
0004A888 <internal_commands.ab2@1706> INCLUDE "internal_commands.ab2"
0004A88C <internal_commands.ab2@1707> INCLUDE "internal_commands.ab2"
0004A88E <internal_commands.ab2@1708> INCLUDE "internal_commands.ab2"
0004A892 <internal_commands.ab2@1712> INCLUDE "internal_commands.ab2"
0004A894 <internal_commands.ab2@1713> INCLUDE "internal_commands.ab2"
0004A899 <internal_commands.ab2@1714> INCLUDE "internal_commands.ab2"
0004A89A <internal_commands.ab2@1715> INCLUDE "internal_commands.ab2"
0004A89C <internal_commands.ab2@1718> INCLUDE "internal_commands.ab2"
0004A8A0 <internal_commands.ab2@1719> INCLUDE "internal_commands.ab2"
0004A8A2 <internal_commands.ab2@1720> INCLUDE "internal_commands.ab2"
0004A8A4 <internal_commands.ab2@1721> INCLUDE "internal_commands.ab2"
0004A8A8 <internal_commands.ab2@1722> INCLUDE "internal_commands.ab2"
0004A8AA <internal_commands.ab2@1723> INCLUDE "internal_commands.ab2"
0004A8AE <internal_commands.ab2@1727> INCLUDE "internal_commands.ab2"
0004A8B0 <internal_commands.ab2@1728> INCLUDE "internal_commands.ab2"
0004A8B4 <internal_commands.ab2@1729> INCLUDE "internal_commands.ab2"
0004A8B5 <internal_commands.ab2@1730> INCLUDE "internal_commands.ab2"
0004A8B6 <internal_commands.ab2@1731> INCLUDE "internal_commands.ab2"
0004A8B8 <internal_commands.ab2@1733> INCLUDE "internal_commands.ab2"
0004A8BC <internal_commands.ab2@1734> INCLUDE "internal_commands.ab2"
0004A8BE <internal_commands.ab2@1735> INCLUDE "internal_commands.ab2"
0004A8C0 <internal_commands.ab2@1736> INCLUDE "internal_commands.ab2"
0004A8C4 <internal_commands.ab2@1737> INCLUDE "internal_commands.ab2"
0004A8C6 <internal_commands.ab2@1738> INCLUDE "internal_commands.ab2"
0004A8CA <internal_commands.ab2@1742> INCLUDE "internal_commands.ab2"
0004A8CC <internal_commands.ab2@1743> INCLUDE "internal_commands.ab2"
0004A8D0 <internal_commands.ab2@1744> INCLUDE "internal_commands.ab2"
0004A8D1 <internal_commands.ab2@1745> INCLUDE "internal_commands.ab2"
0004A8D2 <internal_commands.ab2@1746> INCLUDE "internal_commands.ab2"
0004A8D4 <internal_commands.ab2@1748> INCLUDE "internal_commands.ab2"
0004A8D8 <internal_commands.ab2@1749> INCLUDE "internal_commands.ab2"
0004A8DA <internal_commands.ab2@1750> INCLUDE "internal_commands.ab2"
0004A8DC <internal_commands.ab2@1751> INCLUDE "internal_commands.ab2"
0004A8E0 <internal_commands.ab2@1752> INCLUDE "internal_commands.ab2"
0004A8E2 <internal_commands.ab2@1753> INCLUDE "internal_commands.ab2"
0004A8E6 <internal_commands.ab2@1757> INCLUDE "internal_commands.ab2"
0004A8E8 <internal_commands.ab2@1758> INCLUDE "internal_commands.ab2"
0004A8EC <internal_commands.ab2@1759> INCLUDE "internal_commands.ab2"
0004A8ED <internal_commands.ab2@1760> INCLUDE "internal_commands.ab2"
0004A8EE <internal_commands.ab2@1761> INCLUDE "internal_commands.ab2"
0004A8F0 <internal_commands.ab2@1763> INCLUDE "internal_commands.ab2"
0004A8F4 <internal_commands.ab2@1764> INCLUDE "internal_commands.ab2"
0004A8F6 <internal_commands.ab2@1765> INCLUDE "internal_commands.ab2"
0004A8F8 <internal_commands.ab2@1766> INCLUDE "internal_commands.ab2"
0004A8FC <internal_commands.ab2@1767> INCLUDE "internal_commands.ab2"
0004A8FE <internal_commands.ab2@1768> INCLUDE "internal_commands.ab2"
0004A902 <internal_commands.ab2@1772> INCLUDE "internal_commands.ab2"
0004A904 <internal_commands.ab2@1773> INCLUDE "internal_commands.ab2"
0004A909 <internal_commands.ab2@1774> INCLUDE "internal_commands.ab2"
0004A90A <internal_commands.ab2@1775> INCLUDE "internal_commands.ab2"
0004A90C <internal_commands.ab2@1778> INCLUDE "internal_commands.ab2"
0004A910 <internal_commands.ab2@1779> INCLUDE "internal_commands.ab2"
0004A912 <internal_commands.ab2@1780> INCLUDE "internal_commands.ab2"
0004A914 <internal_commands.ab2@1781> INCLUDE "internal_commands.ab2"
0004A918 <internal_commands.ab2@1782> INCLUDE "internal_commands.ab2"
0004A91A <internal_commands.ab2@1783> INCLUDE "internal_commands.ab2"
0004A91E <internal_commands.ab2@1787> INCLUDE "internal_commands.ab2"
0004A920 <internal_commands.ab2@1788> INCLUDE "internal_commands.ab2"
0004A924 <internal_commands.ab2@1789> INCLUDE "internal_commands.ab2"
0004A925 <internal_commands.ab2@1790> INCLUDE "internal_commands.ab2"
0004A926 <internal_commands.ab2@1791> INCLUDE "internal_commands.ab2"
0004A928 <internal_commands.ab2@1793> INCLUDE "internal_commands.ab2"
0004A92C <internal_commands.ab2@1794> INCLUDE "internal_commands.ab2"
0004A92E <internal_commands.ab2@1795> INCLUDE "internal_commands.ab2"
0004A930 <internal_commands.ab2@1796> INCLUDE "internal_commands.ab2"
0004A934 <internal_commands.ab2@1797> INCLUDE "internal_commands.ab2"
0004A936 <internal_commands.ab2@1798> INCLUDE "internal_commands.ab2"
0004A93A <internal_commands.ab2@1802> INCLUDE "internal_commands.ab2"
0004A93C <internal_commands.ab2@1803> INCLUDE "internal_commands.ab2"
0004A940 <internal_commands.ab2@1804> INCLUDE "internal_commands.ab2"
0004A941 <internal_commands.ab2@1805> INCLUDE "internal_commands.ab2"
0004A942 <internal_commands.ab2@1806> INCLUDE "internal_commands.ab2"
0004A944 <internal_commands.ab2@1808> INCLUDE "internal_commands.ab2"
0004A948 <internal_commands.ab2@1809> INCLUDE "internal_commands.ab2"
0004A94A <internal_commands.ab2@1810> INCLUDE "internal_commands.ab2"
0004A94C <internal_commands.ab2@1811> INCLUDE "internal_commands.ab2"
0004A950 <internal_commands.ab2@1812> INCLUDE "internal_commands.ab2"
0004A952 <internal_commands.ab2@1813> INCLUDE "internal_commands.ab2"
0004A956 <internal_commands.ab2@1817> INCLUDE "internal_commands.ab2"
0004A958 <internal_commands.ab2@1818> INCLUDE "internal_commands.ab2"
0004A95C <internal_commands.ab2@1819> INCLUDE "internal_commands.ab2"
0004A95D <internal_commands.ab2@1820> INCLUDE "internal_commands.ab2"
0004A95E <internal_commands.ab2@1821> INCLUDE "internal_commands.ab2"
0004A960 <internal_commands.ab2@1823> INCLUDE "internal_commands.ab2"
0004A964 <internal_commands.ab2@1824> INCLUDE "internal_commands.ab2"
0004A966 <internal_commands.ab2@1825> INCLUDE "internal_commands.ab2"
0004A968 <internal_commands.ab2@1826> INCLUDE "internal_commands.ab2"
0004A96C <internal_commands.ab2@1827> INCLUDE "internal_commands.ab2"
0004A96E <internal_commands.ab2@1828> INCLUDE "internal_commands.ab2"
0004A972 <internal_commands.ab2@1832> INCLUDE "internal_commands.ab2"
0004A974 <internal_commands.ab2@1833> INCLUDE "internal_commands.ab2"
0004A978 <internal_commands.ab2@1834> INCLUDE "internal_commands.ab2"
0004A979 <internal_commands.ab2@1835> INCLUDE "internal_commands.ab2"
0004A97A <internal_commands.ab2@1836> INCLUDE "internal_commands.ab2"
0004A97C <internal_commands.ab2@1838> INCLUDE "internal_commands.ab2"
0004A980 <internal_commands.ab2@1839> INCLUDE "internal_commands.ab2"
0004A982 <internal_commands.ab2@1840> INCLUDE "internal_commands.ab2"
0004A984 <internal_commands.ab2@1841> INCLUDE "internal_commands.ab2"
0004A988 <internal_commands.ab2@1842> INCLUDE "internal_commands.ab2"
0004A98A <internal_commands.ab2@1843> INCLUDE "internal_commands.ab2"
0004A98E <internal_commands.ab2@1847> INCLUDE "internal_commands.ab2"
0004A990 <internal_commands.ab2@1848> INCLUDE "internal_commands.ab2"
0004A994 <internal_commands.ab2@1849> INCLUDE "internal_commands.ab2"
0004A995 <internal_commands.ab2@1850> INCLUDE "internal_commands.ab2"
0004A996 <internal_commands.ab2@1851> INCLUDE "internal_commands.ab2"
0004A998 <internal_commands.ab2@1853> INCLUDE "internal_commands.ab2"
0004A99C <internal_commands.ab2@1854> INCLUDE "internal_commands.ab2"
0004A99E <internal_commands.ab2@1855> INCLUDE "internal_commands.ab2"
0004A9A0 <internal_commands.ab2@1856> INCLUDE "internal_commands.ab2"
0004A9A4 <internal_commands.ab2@1857> INCLUDE "internal_commands.ab2"
0004A9A6 <internal_commands.ab2@1858> INCLUDE "internal_commands.ab2"
0004A9AA <internal_commands.ab2@1862> INCLUDE "internal_commands.ab2"
0004A9AC <internal_commands.ab2@1863> INCLUDE "internal_commands.ab2"
0004A9B0 <internal_commands.ab2@1864> INCLUDE "internal_commands.ab2"
0004A9B1 <internal_commands.ab2@1865> INCLUDE "internal_commands.ab2"
0004A9B2 <internal_commands.ab2@1866> INCLUDE "internal_commands.ab2"
0004A9B4 <internal_commands.ab2@1868> INCLUDE "internal_commands.ab2"
0004A9B8 <internal_commands.ab2@1869> INCLUDE "internal_commands.ab2"
0004A9BA <internal_commands.ab2@1870> INCLUDE "internal_commands.ab2"
0004A9BC <internal_commands.ab2@1871> INCLUDE "internal_commands.ab2"
0004A9C0 <internal_commands.ab2@1872> INCLUDE "internal_commands.ab2"
0004A9C2 <internal_commands.ab2@1873> INCLUDE "internal_commands.ab2"
0004A9C6 <internal_commands.ab2@1877> INCLUDE "internal_commands.ab2"
0004A9C8 <internal_commands.ab2@1878> INCLUDE "internal_commands.ab2"
0004A9CC <internal_commands.ab2@1879> INCLUDE "internal_commands.ab2"
0004A9CD <internal_commands.ab2@1880> INCLUDE "internal_commands.ab2"
0004A9CE <internal_commands.ab2@1881> INCLUDE "internal_commands.ab2"
0004A9D0 <internal_commands.ab2@1883> INCLUDE "internal_commands.ab2"
0004A9D4 <internal_commands.ab2@1884> INCLUDE "internal_commands.ab2"
0004A9D6 <internal_commands.ab2@1885> INCLUDE "internal_commands.ab2"
0004A9D8 <internal_commands.ab2@1886> INCLUDE "internal_commands.ab2"
0004A9DC <internal_commands.ab2@1887> INCLUDE "internal_commands.ab2"
0004A9DE <internal_commands.ab2@1888> INCLUDE "internal_commands.ab2"
0004A9E2 <internal_commands.ab2@1892> INCLUDE "internal_commands.ab2"
0004A9E4 <internal_commands.ab2@1893> INCLUDE "internal_commands.ab2"
0004A9E8 <internal_commands.ab2@1894> INCLUDE "internal_commands.ab2"
0004A9E9 <internal_commands.ab2@1895> INCLUDE "internal_commands.ab2"
0004A9EA <internal_commands.ab2@1896> INCLUDE "internal_commands.ab2"
0004A9EC <internal_commands.ab2@1898> INCLUDE "internal_commands.ab2"
0004A9F0 <internal_commands.ab2@1899> INCLUDE "internal_commands.ab2"
0004A9F2 <internal_commands.ab2@1900> INCLUDE "internal_commands.ab2"
0004A9F4 <internal_commands.ab2@1901> INCLUDE "internal_commands.ab2"
0004A9F8 <internal_commands.ab2@1902> INCLUDE "internal_commands.ab2"
0004A9FA <internal_commands.ab2@1903> INCLUDE "internal_commands.ab2"
0004A9FE <internal_commands.ab2@1907> INCLUDE "internal_commands.ab2"
0004AA00 <internal_commands.ab2@1908> INCLUDE "internal_commands.ab2"
0004AA04 <internal_commands.ab2@1909> INCLUDE "internal_commands.ab2"
0004AA05 <internal_commands.ab2@1910> INCLUDE "internal_commands.ab2"
0004AA06 <internal_commands.ab2@1911> INCLUDE "internal_commands.ab2"
0004AA08 <internal_commands.ab2@1913> INCLUDE "internal_commands.ab2"
0004AA0C <internal_commands.ab2@1914> INCLUDE "internal_commands.ab2"
0004AA0E <internal_commands.ab2@1915> INCLUDE "internal_commands.ab2"
0004AA10 <internal_commands.ab2@1916> INCLUDE "internal_commands.ab2"
0004AA14 <internal_commands.ab2@1917> INCLUDE "internal_commands.ab2"
0004AA16 <internal_commands.ab2@1918> INCLUDE "internal_commands.ab2"
0004AA1A <internal_commands.ab2@1922> INCLUDE "internal_commands.ab2"
0004AA1C <internal_commands.ab2@1923> INCLUDE "internal_commands.ab2"
0004AA20 <internal_commands.ab2@1924> INCLUDE "internal_commands.ab2"
0004AA21 <internal_commands.ab2@1925> INCLUDE "internal_commands.ab2"
0004AA22 <internal_commands.ab2@1926> INCLUDE "internal_commands.ab2"
0004AA24 <internal_commands.ab2@1928> INCLUDE "internal_commands.ab2"
0004AA28 <internal_commands.ab2@1929> INCLUDE "internal_commands.ab2"
0004AA2A <internal_commands.ab2@1930> INCLUDE "internal_commands.ab2"
0004AA2C <internal_commands.ab2@1931> INCLUDE "internal_commands.ab2"
0004AA30 <internal_commands.ab2@1932> INCLUDE "internal_commands.ab2"
0004AA32 <internal_commands.ab2@1933> INCLUDE "internal_commands.ab2"
0004AA36 <internal_commands.ab2@1937> INCLUDE "internal_commands.ab2"
0004AA38 <internal_commands.ab2@1938> INCLUDE "internal_commands.ab2"
0004AA3C <internal_commands.ab2@1939> INCLUDE "internal_commands.ab2"
0004AA3D <internal_commands.ab2@1940> INCLUDE "internal_commands.ab2"
0004AA3E <internal_commands.ab2@1941> INCLUDE "internal_commands.ab2"
0004AA40 <internal_commands.ab2@1943> INCLUDE "internal_commands.ab2"
0004AA44 <internal_commands.ab2@1944> INCLUDE "internal_commands.ab2"
0004AA46 <internal_commands.ab2@1945> INCLUDE "internal_commands.ab2"
0004AA48 <internal_commands.ab2@1946> INCLUDE "internal_commands.ab2"
0004AA4C <internal_commands.ab2@1947> INCLUDE "internal_commands.ab2"
0004AA4E <internal_commands.ab2@1948> INCLUDE "internal_commands.ab2"
0004AA52 <internal_commands.ab2@1952> INCLUDE "internal_commands.ab2"
0004AA54 <internal_commands.ab2@1953> INCLUDE "internal_commands.ab2"
0004AA58 <internal_commands.ab2@1954> INCLUDE "internal_commands.ab2"
0004AA59 <internal_commands.ab2@1955> INCLUDE "internal_commands.ab2"
0004AA5A <internal_commands.ab2@1956> INCLUDE "internal_commands.ab2"
0004AA5C <internal_commands.ab2@1958> INCLUDE "internal_commands.ab2"
0004AA60 <internal_commands.ab2@1959> INCLUDE "internal_commands.ab2"
0004AA62 <internal_commands.ab2@1960> INCLUDE "internal_commands.ab2"
0004AA64 <internal_commands.ab2@1961> INCLUDE "internal_commands.ab2"
0004AA68 <internal_commands.ab2@1962> INCLUDE "internal_commands.ab2"
0004AA6A <internal_commands.ab2@1963> INCLUDE "internal_commands.ab2"
0004AA6E <internal_commands.ab2@1967> INCLUDE "internal_commands.ab2"
0004AA70 <internal_commands.ab2@1968> INCLUDE "internal_commands.ab2"
0004AA74 <internal_commands.ab2@1969> INCLUDE "internal_commands.ab2"
0004AA75 <internal_commands.ab2@1970> INCLUDE "internal_commands.ab2"
0004AA76 <internal_commands.ab2@1971> INCLUDE "internal_commands.ab2"
0004AA78 <internal_commands.ab2@1973> INCLUDE "internal_commands.ab2"
0004AA7C <internal_commands.ab2@1974> INCLUDE "internal_commands.ab2"
0004AA7E <internal_commands.ab2@1975> INCLUDE "internal_commands.ab2"
0004AA80 <internal_commands.ab2@1976> INCLUDE "internal_commands.ab2"
0004AA84 <internal_commands.ab2@1977> INCLUDE "internal_commands.ab2"
0004AA86 <internal_commands.ab2@1978> INCLUDE "internal_commands.ab2"
0004AA8A <internal_commands.ab2@1982> INCLUDE "internal_commands.ab2"
0004AA8C <internal_commands.ab2@1983> INCLUDE "internal_commands.ab2"
0004AA90 <internal_commands.ab2@1984> INCLUDE "internal_commands.ab2"
0004AA91 <internal_commands.ab2@1985> INCLUDE "internal_commands.ab2"
0004AA92 <internal_commands.ab2@1986> INCLUDE "internal_commands.ab2"
0004AA94 <internal_commands.ab2@1988> INCLUDE "internal_commands.ab2"
0004AA98 <internal_commands.ab2@1989> INCLUDE "internal_commands.ab2"
0004AA9A <internal_commands.ab2@1990> INCLUDE "internal_commands.ab2"
0004AA9C <internal_commands.ab2@1991> INCLUDE "internal_commands.ab2"
0004AAA0 <internal_commands.ab2@1992> INCLUDE "internal_commands.ab2"
0004AAA2 <internal_commands.ab2@1993> INCLUDE "internal_commands.ab2"
0004AAA6 <internal_commands.ab2@1997> INCLUDE "internal_commands.ab2"
0004AAA8 <internal_commands.ab2@1998> INCLUDE "internal_commands.ab2"
0004AAAB <internal_commands.ab2@1999> INCLUDE "internal_commands.ab2"
0004AAAC <internal_commands.ab2@2000> INCLUDE "internal_commands.ab2"
0004AAAE <internal_commands.ab2@2003> INCLUDE "internal_commands.ab2"
0004AAB2 <internal_commands.ab2@2004> INCLUDE "internal_commands.ab2"
0004AAB4 <internal_commands.ab2@2005> INCLUDE "internal_commands.ab2"
0004AAB6 <internal_commands.ab2@2006> INCLUDE "internal_commands.ab2"
0004AABA <internal_commands.ab2@2007> INCLUDE "internal_commands.ab2"
0004AABC <internal_commands.ab2@2008> INCLUDE "internal_commands.ab2"
0004AAC0 <internal_commands.ab2@2012> INCLUDE "internal_commands.ab2"
0004AAC2 <internal_commands.ab2@2013> INCLUDE "internal_commands.ab2"
0004AAC5 <internal_commands.ab2@2014> INCLUDE "internal_commands.ab2"
0004AAC6 <internal_commands.ab2@2015> INCLUDE "internal_commands.ab2"
0004AAC8 <internal_commands.ab2@2018> INCLUDE "internal_commands.ab2"
0004AACC <internal_commands.ab2@2019> INCLUDE "internal_commands.ab2"
0004AACE <internal_commands.ab2@2020> INCLUDE "internal_commands.ab2"
0004AAD0 <internal_commands.ab2@2021> INCLUDE "internal_commands.ab2"
0004AAD4 <internal_commands.ab2@2022> INCLUDE "internal_commands.ab2"
0004AAD6 <internal_commands.ab2@2023> INCLUDE "internal_commands.ab2"
0004AADA <internal_commands.ab2@2027> INCLUDE "internal_commands.ab2"
0004AADC <internal_commands.ab2@2028> INCLUDE "internal_commands.ab2"
0004AAE1 <internal_commands.ab2@2029> INCLUDE "internal_commands.ab2"
0004AAE2 <internal_commands.ab2@2030> INCLUDE "internal_commands.ab2"
0004AAE4 <internal_commands.ab2@2033> INCLUDE "internal_commands.ab2"
0004AAE8 <internal_commands.ab2@2034> INCLUDE "internal_commands.ab2"
0004AAEA <internal_commands.ab2@2035> INCLUDE "internal_commands.ab2"
0004AAEC <internal_commands.ab2@2036> INCLUDE "internal_commands.ab2"
0004AAF0 <internal_commands.ab2@2037> INCLUDE "internal_commands.ab2"
0004AAF2 <internal_commands.ab2@2038> INCLUDE "internal_commands.ab2"
0004AAF6 <internal_commands.ab2@2042> INCLUDE "internal_commands.ab2"
0004AAF8 <internal_commands.ab2@2043> INCLUDE "internal_commands.ab2"
0004AAFC <internal_commands.ab2@2044> INCLUDE "internal_commands.ab2"
0004AAFD <internal_commands.ab2@2045> INCLUDE "internal_commands.ab2"
0004AAFE <internal_commands.ab2@2046> INCLUDE "internal_commands.ab2"
0004AB00 <internal_commands.ab2@2048> INCLUDE "internal_commands.ab2"
0004AB04 <internal_commands.ab2@2049> INCLUDE "internal_commands.ab2"
0004AB06 <internal_commands.ab2@2050> INCLUDE "internal_commands.ab2"
0004AB08 <internal_commands.ab2@2051> INCLUDE "internal_commands.ab2"
0004AB0C <internal_commands.ab2@2052> INCLUDE "internal_commands.ab2"
0004AB0E <internal_commands.ab2@2053> INCLUDE "internal_commands.ab2"
0004AB12 <internal_commands.ab2@2057> INCLUDE "internal_commands.ab2"
0004AB14 <internal_commands.ab2@2058> INCLUDE "internal_commands.ab2"
0004AB19 <internal_commands.ab2@2059> INCLUDE "internal_commands.ab2"
0004AB1A <internal_commands.ab2@2060> INCLUDE "internal_commands.ab2"
0004AB1C <internal_commands.ab2@2063> INCLUDE "internal_commands.ab2"
0004AB20 <internal_commands.ab2@2064> INCLUDE "internal_commands.ab2"
0004AB22 <internal_commands.ab2@2065> INCLUDE "internal_commands.ab2"
0004AB24 <internal_commands.ab2@2066> INCLUDE "internal_commands.ab2"
0004AB28 <internal_commands.ab2@2067> INCLUDE "internal_commands.ab2"
0004AB2A <internal_commands.ab2@2068> INCLUDE "internal_commands.ab2"
0004AB2E <internal_commands.ab2@2072> INCLUDE "internal_commands.ab2"
0004AB30 <internal_commands.ab2@2073> INCLUDE "internal_commands.ab2"
0004AB35 <internal_commands.ab2@2074> INCLUDE "internal_commands.ab2"
0004AB36 <internal_commands.ab2@2075> INCLUDE "internal_commands.ab2"
0004AB38 <internal_commands.ab2@2078> INCLUDE "internal_commands.ab2"
0004AB3C <internal_commands.ab2@2079> INCLUDE "internal_commands.ab2"
0004AB3E <internal_commands.ab2@2080> INCLUDE "internal_commands.ab2"
0004AB40 <internal_commands.ab2@2081> INCLUDE "internal_commands.ab2"
0004AB44 <internal_commands.ab2@2082> INCLUDE "internal_commands.ab2"
0004AB46 <internal_commands.ab2@2083> INCLUDE "internal_commands.ab2"
0004AB4A <internal_commands.ab2@2087> INCLUDE "internal_commands.ab2"
0004AB4C <internal_commands.ab2@2088> INCLUDE "internal_commands.ab2"
0004AB51 <internal_commands.ab2@2089> INCLUDE "internal_commands.ab2"
0004AB52 <internal_commands.ab2@2090> INCLUDE "internal_commands.ab2"
0004AB54 <internal_commands.ab2@2093> INCLUDE "internal_commands.ab2"
0004AB58 <internal_commands.ab2@2094> INCLUDE "internal_commands.ab2"
0004AB5A <internal_commands.ab2@2095> INCLUDE "internal_commands.ab2"
0004AB5C <internal_commands.ab2@2096> INCLUDE "internal_commands.ab2"
0004AB60 <internal_commands.ab2@2097> INCLUDE "internal_commands.ab2"
0004AB62 <internal_commands.ab2@2098> INCLUDE "internal_commands.ab2"
0004AB66 <internal_commands.ab2@2102> INCLUDE "internal_commands.ab2"
0004AB68 <internal_commands.ab2@2103> INCLUDE "internal_commands.ab2"
0004AB6D <internal_commands.ab2@2104> INCLUDE "internal_commands.ab2"
0004AB6E <internal_commands.ab2@2105> INCLUDE "internal_commands.ab2"
0004AB70 <internal_commands.ab2@2108> INCLUDE "internal_commands.ab2"
0004AB74 <internal_commands.ab2@2109> INCLUDE "internal_commands.ab2"
0004AB76 <internal_commands.ab2@2110> INCLUDE "internal_commands.ab2"
0004AB78 <internal_commands.ab2@2111> INCLUDE "internal_commands.ab2"
0004AB7C <internal_commands.ab2@2112> INCLUDE "internal_commands.ab2"
0004AB7E <internal_commands.ab2@2113> INCLUDE "internal_commands.ab2"
0004AB82 <internal_commands.ab2@2117> INCLUDE "internal_commands.ab2"
0004AB84 <internal_commands.ab2@2118> INCLUDE "internal_commands.ab2"
0004AB89 <internal_commands.ab2@2119> INCLUDE "internal_commands.ab2"
0004AB8A <internal_commands.ab2@2120> INCLUDE "internal_commands.ab2"
0004AB8C <internal_commands.ab2@2123> INCLUDE "internal_commands.ab2"
0004AB90 <internal_commands.ab2@2124> INCLUDE "internal_commands.ab2"
0004AB92 <internal_commands.ab2@2125> INCLUDE "internal_commands.ab2"
0004AB94 <internal_commands.ab2@2126> INCLUDE "internal_commands.ab2"
0004AB98 <internal_commands.ab2@2127> INCLUDE "internal_commands.ab2"
0004AB9A <internal_commands.ab2@2128> INCLUDE "internal_commands.ab2"
0004AB9E <internal_commands.ab2@2132> INCLUDE "internal_commands.ab2"
0004ABA0 <internal_commands.ab2@2133> INCLUDE "internal_commands.ab2"
0004ABA4 <internal_commands.ab2@2134> INCLUDE "internal_commands.ab2"
0004ABA5 <internal_commands.ab2@2135> INCLUDE "internal_commands.ab2"
0004ABA6 <internal_commands.ab2@2136> INCLUDE "internal_commands.ab2"
0004ABA8 <internal_commands.ab2@2138> INCLUDE "internal_commands.ab2"
0004ABAC <internal_commands.ab2@2139> INCLUDE "internal_commands.ab2"
0004ABAE <internal_commands.ab2@2140> INCLUDE "internal_commands.ab2"
0004ABB0 <internal_commands.ab2@2141> INCLUDE "internal_commands.ab2"
0004ABB4 <internal_commands.ab2@2142> INCLUDE "internal_commands.ab2"
0004ABB6 <internal_commands.ab2@2143> INCLUDE "internal_commands.ab2"
0004ABBA <internal_commands.ab2@2147> INCLUDE "internal_commands.ab2"
0004ABBC <internal_commands.ab2@2148> INCLUDE "internal_commands.ab2"
0004ABC1 <internal_commands.ab2@2149> INCLUDE "internal_commands.ab2"
0004ABC2 <internal_commands.ab2@2150> INCLUDE "internal_commands.ab2"
0004ABC4 <internal_commands.ab2@2153> INCLUDE "internal_commands.ab2"
0004ABC8 <internal_commands.ab2@2154> INCLUDE "internal_commands.ab2"
0004ABCA <internal_commands.ab2@2155> INCLUDE "internal_commands.ab2"
0004ABCC <internal_commands.ab2@2156> INCLUDE "internal_commands.ab2"
0004ABD0 <internal_commands.ab2@2157> INCLUDE "internal_commands.ab2"
0004ABD2 <internal_commands.ab2@2158> INCLUDE "internal_commands.ab2"
0004ABD6 <internal_commands.ab2@2162> INCLUDE "internal_commands.ab2"
0004ABD8 <internal_commands.ab2@2163> INCLUDE "internal_commands.ab2"
0004ABDE <internal_commands.ab2@2164> INCLUDE "internal_commands.ab2"
0004ABDF <internal_commands.ab2@2165> INCLUDE "internal_commands.ab2"
0004ABE0 <internal_commands.ab2@2166> INCLUDE "internal_commands.ab2"
0004ABE2 <internal_commands.ab2@2168> INCLUDE "internal_commands.ab2"
0004ABE6 <internal_commands.ab2@2169> INCLUDE "internal_commands.ab2"
0004ABE8 <internal_commands.ab2@2170> INCLUDE "internal_commands.ab2"
0004ABEA <internal_commands.ab2@2171> INCLUDE "internal_commands.ab2"
0004ABEE <internal_commands.ab2@2172> INCLUDE "internal_commands.ab2"
0004ABF0 <internal_commands.ab2@2173> INCLUDE "internal_commands.ab2"
0004ABF4 <internal_commands.ab2@2177> INCLUDE "internal_commands.ab2"
0004ABF6 <internal_commands.ab2@2178> INCLUDE "internal_commands.ab2"
0004ABFA <internal_commands.ab2@2179> INCLUDE "internal_commands.ab2"
0004ABFB <internal_commands.ab2@2180> INCLUDE "internal_commands.ab2"
0004ABFC <internal_commands.ab2@2181> INCLUDE "internal_commands.ab2"
0004ABFE <internal_commands.ab2@2183> INCLUDE "internal_commands.ab2"
0004AC02 <internal_commands.ab2@2184> INCLUDE "internal_commands.ab2"
0004AC04 <internal_commands.ab2@2185> INCLUDE "internal_commands.ab2"
0004AC06 <internal_commands.ab2@2186> INCLUDE "internal_commands.ab2"
0004AC0A <internal_commands.ab2@2187> INCLUDE "internal_commands.ab2"
0004AC0C <internal_commands.ab2@2188> INCLUDE "internal_commands.ab2"
0004AC10 <internal_commands.ab2@2192> INCLUDE "internal_commands.ab2"
0004AC12 <internal_commands.ab2@2193> INCLUDE "internal_commands.ab2"
0004AC17 <internal_commands.ab2@2194> INCLUDE "internal_commands.ab2"
0004AC18 <internal_commands.ab2@2195> INCLUDE "internal_commands.ab2"
0004AC1A <internal_commands.ab2@2198> INCLUDE "internal_commands.ab2"
0004AC1E <internal_commands.ab2@2199> INCLUDE "internal_commands.ab2"
0004AC20 <internal_commands.ab2@2200> INCLUDE "internal_commands.ab2"
0004AC22 <internal_commands.ab2@2201> INCLUDE "internal_commands.ab2"
0004AC26 <internal_commands.ab2@2202> INCLUDE "internal_commands.ab2"
0004AC28 <internal_commands.ab2@2203> INCLUDE "internal_commands.ab2"
0004AC2C <internal_commands.ab2@2208> INCLUDE "internal_commands.ab2"
0004AC2E <internal_commands.ab2@2209> INCLUDE "internal_commands.ab2"
0004AC35 <internal_commands.ab2@2210> INCLUDE "internal_commands.ab2"
0004AC36 <internal_commands.ab2@2211> INCLUDE "internal_commands.ab2"
0004AC38 <internal_commands.ab2@2230> INCLUDE "internal_commands.ab2"
0004AC3A <internal_commands.ab2@2231> INCLUDE "internal_commands.ab2"
0004AC3C <internal_commands.ab2@2235> INCLUDE "internal_commands.ab2"
0004AC3E <internal_commands.ab2@2236> INCLUDE "internal_commands.ab2"
0004AC40 <internal_commands.ab2@2240> INCLUDE "internal_commands.ab2"
0004AC42 <internal_commands.ab2@2241> INCLUDE "internal_commands.ab2"
0004AC44 <internal_commands.ab2@2245> INCLUDE "internal_commands.ab2"
0004AC46 <internal_commands.ab2@2246> INCLUDE "internal_commands.ab2"
0004AC48 <internal_commands.ab2@2251> INCLUDE "internal_commands.ab2"
0004AC4C <internal_commands.ab2@2252> INCLUDE "internal_commands.ab2"
0004AC4E <internal_commands.ab2@2253> INCLUDE "internal_commands.ab2"
0004AC50 <internal_commands.ab2@2254> INCLUDE "internal_commands.ab2"
0004AC52 <internal_commands.ab2@2255> INCLUDE "internal_commands.ab2"
0004AC54 <internal_commands.ab2@2256> INCLUDE "internal_commands.ab2"
0004AC58 <internal_commands.ab2@2257> INCLUDE "internal_commands.ab2"
0004AC5E <internal_commands.ab2@2260> INCLUDE "internal_commands.ab2"
0004AC62 <internal_commands.ab2@2261> INCLUDE "internal_commands.ab2"
0004AC64 <internal_commands.ab2@2262> INCLUDE "internal_commands.ab2"
0004AC66 <internal_commands.ab2@2263> INCLUDE "internal_commands.ab2"
0004AC68 <internal_commands.ab2@2264> INCLUDE "internal_commands.ab2"
0004AC6A <internal_commands.ab2@2265> INCLUDE "internal_commands.ab2"
0004AC6C <internal_commands.ab2@2266> INCLUDE "internal_commands.ab2"
0004AC6E <internal_commands.ab2@2273> INCLUDE "internal_commands.ab2"
0004AC72 <internal_commands.ab2@2274> INCLUDE "internal_commands.ab2"
0004AC76 <internal_commands.ab2@2275> INCLUDE "internal_commands.ab2"
0004AC7A <internal_commands.ab2@2276> INCLUDE "internal_commands.ab2"
0004AC7E <internal_commands.ab2@2277> INCLUDE "internal_commands.ab2"
0004AC82 <internal_commands.ab2@2278> INCLUDE "internal_commands.ab2"
0004AC84 <internal_commands.ab2@2281> INCLUDE "internal_commands.ab2"
0004AC86 <internal_commands.ab2@2282> INCLUDE "internal_commands.ab2"
0004AC8A <internal_commands.ab2@2283> INCLUDE "internal_commands.ab2"
0004AC8E <internal_commands.ab2@2284> INCLUDE "internal_commands.ab2"
0004AC92 <internal_commands.ab2@2285> INCLUDE "internal_commands.ab2"
0004AC96 <internal_commands.ab2@2286> INCLUDE "internal_commands.ab2"
0004AC98 <internal_commands.ab2@2289> INCLUDE "internal_commands.ab2"
0004AC9A <internal_commands.ab2@2290> INCLUDE "internal_commands.ab2"
0004AC9E <internal_commands.ab2@2291> INCLUDE "internal_commands.ab2"
0004ACA2 <internal_commands.ab2@2292> INCLUDE "internal_commands.ab2"
0004ACA6 <internal_commands.ab2@2293> INCLUDE "internal_commands.ab2"
0004ACAA <internal_commands.ab2@2294> INCLUDE "internal_commands.ab2"
0004ACAC <internal_commands.ab2@2295> INCLUDE "internal_commands.ab2"
0004ACAE <internal_commands.ab2@2298> INCLUDE "internal_commands.ab2"
0004ACB0 <internal_commands.ab2@2299> INCLUDE "internal_commands.ab2"
0004ACB4 <internal_commands.ab2@2300> INCLUDE "internal_commands.ab2"
0004ACB6 <internal_commands.ab2@2302> INCLUDE "internal_commands.ab2"
0004ACBA <internal_commands.ab2@2303> INCLUDE "internal_commands.ab2"
0004ACBC <internal_commands.ab2@2307> INCLUDE "internal_commands.ab2"
0004ACC0 <internal_commands.ab2@2308> INCLUDE "internal_commands.ab2"
0004ACC2 <internal_commands.ab2@2309> INCLUDE "internal_commands.ab2"
0004ACC6 <internal_commands.ab2@2310> INCLUDE "internal_commands.ab2"
0004ACCA <internal_commands.ab2@2311> INCLUDE "internal_commands.ab2"
0004ACCE <internal_commands.ab2@2312> INCLUDE "internal_commands.ab2"
0004ACD2 <internal_commands.ab2@2316> INCLUDE "internal_commands.ab2"
0004ACD6 <internal_commands.ab2@2317> INCLUDE "internal_commands.ab2"
0004ACDA <internal_commands.ab2@2319> INCLUDE "internal_commands.ab2"
0004ACDE <internal_commands.ab2@2320> INCLUDE "internal_commands.ab2"
0004ACE2 <internal_commands.ab2@2321> INCLUDE "internal_commands.ab2"
0004ACE6 <internal_commands.ab2@2322> INCLUDE "internal_commands.ab2"
0004ACEA <internal_commands.ab2@2323> INCLUDE "internal_commands.ab2"
0004ACEE <internal_commands.ab2@2324> INCLUDE "internal_commands.ab2"
0004ACF2 <internal_commands.ab2@2325> INCLUDE "internal_commands.ab2"
0004ACF6 <internal_commands.ab2@2326> INCLUDE "internal_commands.ab2"
0004ACFA <internal_commands.ab2@2328> INCLUDE "internal_commands.ab2"
0004ACFE <internal_commands.ab2@2331> INCLUDE "internal_commands.ab2"
0004AD02 <internal_commands.ab2@2332> INCLUDE "internal_commands.ab2"
0004AD06 <internal_commands.ab2@2334> INCLUDE "internal_commands.ab2"
0004AD0A <internal_commands.ab2@2335> INCLUDE "internal_commands.ab2"
0004AD0E <internal_commands.ab2@2336> INCLUDE "internal_commands.ab2"
0004AD12 <internal_commands.ab2@2337> INCLUDE "internal_commands.ab2"
0004AD16 <internal_commands.ab2@2338> INCLUDE "internal_commands.ab2"
0004AD1A <internal_commands.ab2@2339> INCLUDE "internal_commands.ab2"
0004AD1E <internal_commands.ab2@2340> INCLUDE "internal_commands.ab2"
0004AD22 <internal_commands.ab2@2341> INCLUDE "internal_commands.ab2"
0004AD26 <internal_commands.ab2@2343> INCLUDE "internal_commands.ab2"
0004AD2A <internal_commands.ab2@2346> INCLUDE "internal_commands.ab2"
0004AD2C <internal_commands.ab2@2347> INCLUDE "internal_commands.ab2"
0004AD30 <internal_commands.ab2@2348> INCLUDE "internal_commands.ab2"
0004AD34 <internal_commands.ab2@2349> INCLUDE "internal_commands.ab2"
0004AD38 <internal_commands.ab2@2350> INCLUDE "internal_commands.ab2"
0004AD3C <internal_commands.ab2@2351> INCLUDE "internal_commands.ab2"
0004AD40 <internal_commands.ab2@2352> INCLUDE "internal_commands.ab2"
0004AD44 <internal_commands.ab2@2353> INCLUDE "internal_commands.ab2"
0004AD48 <internal_commands.ab2@2356> INCLUDE "internal_commands.ab2"
0004AD4C <internal_commands.ab2@2357> INCLUDE "internal_commands.ab2"
0004AD50 <internal_commands.ab2@2358> INCLUDE "internal_commands.ab2"
0004AD52 <internal_commands.ab2@2359> INCLUDE "internal_commands.ab2"
0004AD54 <internal_commands.ab2@2362> INCLUDE "internal_commands.ab2"
0004AD56 <internal_commands.ab2@2363> INCLUDE "internal_commands.ab2"
0004AD58 <internal_commands.ab2@2364> INCLUDE "internal_commands.ab2"
0004AD5A <internal_commands.ab2@2365> INCLUDE "internal_commands.ab2"
0004AD5E <internal_commands.ab2@2366> INCLUDE "internal_commands.ab2"
0004AD62 <internal_commands.ab2@2369> INCLUDE "internal_commands.ab2"
0004AD66 <internal_commands.ab2@2370> INCLUDE "internal_commands.ab2"
0004AD6A <internal_commands.ab2@2371> INCLUDE "internal_commands.ab2"
0004AD6C <internal_commands.ab2@2372> INCLUDE "internal_commands.ab2"
0004AD70 <internal_commands.ab2@2373> INCLUDE "internal_commands.ab2"
0004AD74 <internal_commands.ab2@2376> INCLUDE "internal_commands.ab2"
0004AD78 <internal_commands.ab2@2379> INCLUDE "internal_commands.ab2"
0004AD7C <internal_commands.ab2@2380> INCLUDE "internal_commands.ab2"
0004AD7E <internal_commands.ab2@2381> INCLUDE "internal_commands.ab2"
0004AD80 <internal_commands.ab2@2382> INCLUDE "internal_commands.ab2"
0004AD84 <internal_commands.ab2@2383> INCLUDE "internal_commands.ab2"
0004AD88 <internal_commands.ab2@2386> INCLUDE "internal_commands.ab2"
0004AD8C <internal_commands.ab2@2387> INCLUDE "internal_commands.ab2"
0004AD90 <internal_commands.ab2@2390> INCLUDE "internal_commands.ab2"
0004AD94 <internal_commands.ab2@2393> INCLUDE "internal_commands.ab2"
0004AD98 <internal_commands.ab2@2394> INCLUDE "internal_commands.ab2"
0004AD9A <internal_commands.ab2@2395> INCLUDE "internal_commands.ab2"
0004AD9C <internal_commands.ab2@2396> INCLUDE "internal_commands.ab2"
0004ADA0 <internal_commands.ab2@2397> INCLUDE "internal_commands.ab2"
0004ADA4 <internal_commands.ab2@2400> INCLUDE "internal_commands.ab2"
0004ADA8 <internal_commands.ab2@2401> INCLUDE "internal_commands.ab2"
0004ADAA <internal_commands.ab2@2405> INCLUDE "internal_commands.ab2"
0004ADAE <internal_commands.ab2@2406> INCLUDE "internal_commands.ab2"
0004ADB2 <internal_commands.ab2@2407> INCLUDE "internal_commands.ab2"
0004ADB4 <internal_commands.ab2@2408> INCLUDE "internal_commands.ab2"
0004ADB8 <internal_commands.ab2@2409> INCLUDE "internal_commands.ab2"
0004ADBC <internal_commands.ab2@2410> INCLUDE "internal_commands.ab2"
0004ADBE <internal_commands.ab2@2413> INCLUDE "internal_commands.ab2"
0004ADC2 <internal_commands.ab2@2414> INCLUDE "internal_commands.ab2"
0004ADC6 <internal_commands.ab2@2415> INCLUDE "internal_commands.ab2"
0004ADCA <internal_commands.ab2@2416> INCLUDE "internal_commands.ab2"
0004ADCE <internal_commands.ab2@2419> INCLUDE "internal_commands.ab2"
0004ADD2 <internal_commands.ab2@2420> INCLUDE "internal_commands.ab2"
0004ADD4 <internal_commands.ab2@2424> INCLUDE "internal_commands.ab2"
0004ADD8 <internal_commands.ab2@2425> INCLUDE "internal_commands.ab2"
0004ADDA <internal_commands.ab2@2426> INCLUDE "internal_commands.ab2"
0004ADDC <internal_commands.ab2@2427> INCLUDE "internal_commands.ab2"
0004ADDE <internal_commands.ab2@2428> INCLUDE "internal_commands.ab2"
0004ADE2 <internal_commands.ab2@2429> INCLUDE "internal_commands.ab2"
0004ADE6 <internal_commands.ab2@2432> INCLUDE "internal_commands.ab2"
0004ADEA <internal_commands.ab2@2433> INCLUDE "internal_commands.ab2"
0004ADEE <internal_commands.ab2@2434> INCLUDE "internal_commands.ab2"
0004ADF2 <internal_commands.ab2@2435> INCLUDE "internal_commands.ab2"
0004ADF6 <internal_commands.ab2@2439> INCLUDE "internal_commands.ab2"
0004ADFA <internal_commands.ab2@2440> INCLUDE "internal_commands.ab2"
0004ADFE <internal_commands.ab2@2444> INCLUDE "internal_commands.ab2"
0004AE02 <internal_commands.ab2@2445> INCLUDE "internal_commands.ab2"
0004AE06 <internal_commands.ab2@2449> INCLUDE "internal_commands.ab2"
0004AE0A <internal_commands.ab2@2450> INCLUDE "internal_commands.ab2"
0004AE0E <internal_commands.ab2@2454> INCLUDE "internal_commands.ab2"
0004AE10 <internal_commands.ab2@2456> INCLUDE "internal_commands.ab2"
0004AE14 <internal_commands.ab2@2457> INCLUDE "internal_commands.ab2"
0004AE18 <internal_commands.ab2@2458> INCLUDE "internal_commands.ab2"
0004AE1A <internal_commands.ab2@2459> INCLUDE "internal_commands.ab2"
0004AE1C <internal_commands.ab2@2460> INCLUDE "internal_commands.ab2"
0004AE1E <internal_commands.ab2@2461> INCLUDE "internal_commands.ab2"
0004AE22 <internal_commands.ab2@2462> INCLUDE "internal_commands.ab2"
0004AE26 <internal_commands.ab2@2463> INCLUDE "internal_commands.ab2"
0004AE28 <internal_commands.ab2@2464> INCLUDE "internal_commands.ab2"
0004AE2C <internal_commands.ab2@2465> INCLUDE "internal_commands.ab2"
0004AE2E <internal_commands.ab2@2466> INCLUDE "internal_commands.ab2"
0004AE30 <internal_commands.ab2@2467> INCLUDE "internal_commands.ab2"
0004AE32 <internal_commands.ab2@2468> INCLUDE "internal_commands.ab2"
0004AE36 <internal_commands.ab2@2469> INCLUDE "internal_commands.ab2"
0004AE3A <internal_commands.ab2@2470> INCLUDE "internal_commands.ab2"
0004AE3C <internal_commands.ab2@2473> INCLUDE "internal_commands.ab2"
0004AE3E <internal_commands.ab2@2474> INCLUDE "internal_commands.ab2"
0004AE42 <internal_commands.ab2@2475> INCLUDE "internal_commands.ab2"
0004AE46 <internal_commands.ab2@2476> INCLUDE "internal_commands.ab2"
0004AE4A <internal_commands.ab2@2477> INCLUDE "internal_commands.ab2"
0004AE4E <internal_commands.ab2@2478> INCLUDE "internal_commands.ab2"
0004AE50 <internal_commands.ab2@2479> INCLUDE "internal_commands.ab2"
0004AE54 <internal_commands.ab2@2480> INCLUDE "internal_commands.ab2"
0004AE58 <internal_commands.ab2@2481> INCLUDE "internal_commands.ab2"
0004AE5C <internal_commands.ab2@2482> INCLUDE "internal_commands.ab2"
0004AE5E <internal_commands.ab2@2483> INCLUDE "internal_commands.ab2"
0004AE60 <internal_commands.ab2@2484> INCLUDE "internal_commands.ab2"
0004AE62 <internal_commands.ab2@2485> INCLUDE "internal_commands.ab2"
0004AE64 <internal_commands.ab2@2488> INCLUDE "internal_commands.ab2"
0004AE66 <internal_commands.ab2@2489> INCLUDE "internal_commands.ab2"
0004AE68 <internal_commands.ab2@2490> INCLUDE "internal_commands.ab2"
0004AE6C <internal_commands.ab2@2491> INCLUDE "internal_commands.ab2"
0004AE70 <internal_commands.ab2@2492> INCLUDE "internal_commands.ab2"
0004AE72 <internal_commands.ab2@2496> INCLUDE "internal_commands.ab2"
0004AE76 <internal_commands.ab2@2497> INCLUDE "internal_commands.ab2"
0004AE78 <internal_commands.ab2@2498> INCLUDE "internal_commands.ab2"
0004AE7C <internal_commands.ab2@2499> INCLUDE "internal_commands.ab2"
0004AE80 <internal_commands.ab2@2500> INCLUDE "internal_commands.ab2"
0004AE82 <internal_commands.ab2@2501> INCLUDE "internal_commands.ab2"
0004AE84 <internal_commands.ab2@2504> INCLUDE "internal_commands.ab2"
0004AE86 <internal_commands.ab2@2508> INCLUDE "internal_commands.ab2"
0004AE8A <internal_commands.ab2@2509> INCLUDE "internal_commands.ab2"
0004AE8C <internal_commands.ab2@2510> INCLUDE "internal_commands.ab2"
0004AE90 <internal_commands.ab2@2511> INCLUDE "internal_commands.ab2"
0004AE94 <internal_commands.ab2@2512> INCLUDE "internal_commands.ab2"
0004AE98 <internal_commands.ab2@2513> INCLUDE "internal_commands.ab2"
0004AE9A <internal_commands.ab2@2516> INCLUDE "internal_commands.ab2"
0004AE9E <internal_commands.ab2@2520> INCLUDE "internal_commands.ab2"
0004AEA2 <internal_commands.ab2@2521> INCLUDE "internal_commands.ab2"
0004AEA4 <internal_commands.ab2@2522> INCLUDE "internal_commands.ab2"
0004AEA8 <internal_commands.ab2@2523> INCLUDE "internal_commands.ab2"
0004AEAC <internal_commands.ab2@2524> INCLUDE "internal_commands.ab2"
0004AEB0 <internal_commands.ab2@2527> INCLUDE "internal_commands.ab2"
0004AEB4 <internal_commands.ab2@2528> INCLUDE "internal_commands.ab2"
0004AEB8 <internal_commands.ab2@2529> INCLUDE "internal_commands.ab2"
0004AEBC <internal_commands.ab2@2530> INCLUDE "internal_commands.ab2"
0004AEC0 <internal_commands.ab2@2531> INCLUDE "internal_commands.ab2"
0004AEC4 <internal_commands.ab2@2538> INCLUDE "internal_commands.ab2"
0004AEC6 <internal_commands.ab2@2539> INCLUDE "internal_commands.ab2"
0004AECB <internal_commands.ab2@2540> INCLUDE "internal_commands.ab2"
0004AECC <internal_commands.ab2@2541> INCLUDE "internal_commands.ab2"
0004AED0 <internal_commands.ab2@2545> INCLUDE "internal_commands.ab2"
0004AED2 <internal_commands.ab2@2546> INCLUDE "internal_commands.ab2"
0004AED9 <internal_commands.ab2@2547> INCLUDE "internal_commands.ab2"
0004AEDA <internal_commands.ab2@2548> INCLUDE "internal_commands.ab2"
0004AEDE <internal_commands.ab2@2552> INCLUDE "internal_commands.ab2"
0004AEE0 <internal_commands.ab2@2553> INCLUDE "internal_commands.ab2"
0004AEE7 <internal_commands.ab2@2554> INCLUDE "internal_commands.ab2"
0004AEE8 <internal_commands.ab2@2555> INCLUDE "internal_commands.ab2"
0004AEEC <internal_commands.ab2@2559> INCLUDE "internal_commands.ab2"
0004AEEE <internal_commands.ab2@2560> INCLUDE "internal_commands.ab2"
0004AEF6 <internal_commands.ab2@2561> INCLUDE "internal_commands.ab2"
0004AEF7 <internal_commands.ab2@2562> INCLUDE "internal_commands.ab2"
0004AEF8 <internal_commands.ab2@2563> INCLUDE "internal_commands.ab2"
0004AEFC <internal_commands.ab2@2566> INCLUDE "internal_commands.ab2"
0004AEFE <internal_commands.ab2@2567> INCLUDE "internal_commands.ab2"
0004AF03 <internal_commands.ab2@2568> INCLUDE "internal_commands.ab2"
0004AF17 <internal_commands.ab2@2569> INCLUDE "internal_commands.ab2"
0004AF18 <internal_commands.ab2@2570> INCLUDE "internal_commands.ab2"
0004AF1C <internal_commands.ab2@2573> INCLUDE "internal_commands.ab2"
0004AF1E <internal_commands.ab2@2574> INCLUDE "internal_commands.ab2"
0004AF22 <internal_commands.ab2@2575> INCLUDE "internal_commands.ab2"
0004AF23 <internal_commands.ab2@2576> INCLUDE "internal_commands.ab2"
0004AF24 <internal_commands.ab2@2577> INCLUDE "internal_commands.ab2"
0004AF28 <internal_commands.ab2@2580> INCLUDE "internal_commands.ab2"
0004AF2A <internal_commands.ab2@2581> INCLUDE "internal_commands.ab2"
0004AF2D <internal_commands.ab2@2582> INCLUDE "internal_commands.ab2"
0004AF2E <internal_commands.ab2@2583> INCLUDE "internal_commands.ab2"
0004AF32 <internal_commands.ab2@2587> INCLUDE "internal_commands.ab2"
0004AF34 <internal_commands.ab2@2588> INCLUDE "internal_commands.ab2"
0004AF3B <internal_commands.ab2@2589> INCLUDE "internal_commands.ab2"
0004AF3C <internal_commands.ab2@2590> INCLUDE "internal_commands.ab2"
0004AF40 <internal_commands.ab2@2594> INCLUDE "internal_commands.ab2"
0004AF42 <internal_commands.ab2@2595> INCLUDE "internal_commands.ab2"
0004AF48 <internal_commands.ab2@2596> INCLUDE "internal_commands.ab2"
0004AF55 <internal_commands.ab2@2597> INCLUDE "internal_commands.ab2"
0004AF56 <internal_commands.ab2@2598> INCLUDE "internal_commands.ab2"
0004AF5A <internal_commands.ab2@2601> INCLUDE "internal_commands.ab2"
0004AF5C <internal_commands.ab2@2602> INCLUDE "internal_commands.ab2"
0004AF63 <internal_commands.ab2@2603> INCLUDE "internal_commands.ab2"
0004AF7B <internal_commands.ab2@2604> INCLUDE "internal_commands.ab2"
0004AF7C <internal_commands.ab2@2605> INCLUDE "internal_commands.ab2"
0004AF80 <internal_commands.ab2@2608> INCLUDE "internal_commands.ab2"
0004AF82 <internal_commands.ab2@2609> INCLUDE "internal_commands.ab2"
0004AF86 <internal_commands.ab2@2610> INCLUDE "internal_commands.ab2"
0004AFA9 <internal_commands.ab2@2611> INCLUDE "internal_commands.ab2"
0004AFAA <internal_commands.ab2@2612> INCLUDE "internal_commands.ab2"
0004AFAE <internal_commands.ab2@2615> INCLUDE "internal_commands.ab2"
0004AFB0 <internal_commands.ab2@2616> INCLUDE "internal_commands.ab2"
0004AFB7 <internal_commands.ab2@2617> INCLUDE "internal_commands.ab2"
0004AFC2 <internal_commands.ab2@2618> INCLUDE "internal_commands.ab2"
0004AFC6 <internal_commands.ab2@2622> INCLUDE "internal_commands.ab2"
0004AFC8 <internal_commands.ab2@2623> INCLUDE "internal_commands.ab2"
0004AFCE <internal_commands.ab2@2624> INCLUDE "internal_commands.ab2"
0004AFCF <internal_commands.ab2@2625> INCLUDE "internal_commands.ab2"
0004AFD0 <internal_commands.ab2@2626> INCLUDE "internal_commands.ab2"
0004AFD4 <internal_commands.ab2@2629> INCLUDE "internal_commands.ab2"
0004AFD6 <internal_commands.ab2@2630> INCLUDE "internal_commands.ab2"
0004AFDB <internal_commands.ab2@2631> INCLUDE "internal_commands.ab2"
0004AFDC <internal_commands.ab2@2632> INCLUDE "internal_commands.ab2"
0004AFE0 <internal_commands.ab2@2636> INCLUDE "internal_commands.ab2"
0004AFE2 <internal_commands.ab2@2637> INCLUDE "internal_commands.ab2"
0004AFE9 <internal_commands.ab2@2638> INCLUDE "internal_commands.ab2"
0004AFFB <internal_commands.ab2@2639> INCLUDE "internal_commands.ab2"
0004AFFC <internal_commands.ab2@2640> INCLUDE "internal_commands.ab2"
0004B000 <internal_commands.ab2@2643> INCLUDE "internal_commands.ab2"
0004B002 <internal_commands.ab2@2644> INCLUDE "internal_commands.ab2"
0004B00C <internal_commands.ab2@2645> INCLUDE "internal_commands.ab2"
0004B00D <internal_commands.ab2@2646> INCLUDE "internal_commands.ab2"
0004B00E <internal_commands.ab2@2647> INCLUDE "internal_commands.ab2"
0004B012 <internal_commands.ab2@2650> INCLUDE "internal_commands.ab2"
0004B014 <internal_commands.ab2@2651> INCLUDE "internal_commands.ab2"
0004B01C <internal_commands.ab2@2652> INCLUDE "internal_commands.ab2"
0004B029 <internal_commands.ab2@2653> INCLUDE "internal_commands.ab2"
0004B02A <internal_commands.ab2@2654> INCLUDE "internal_commands.ab2"
0004B02E <internal_commands.ab2@2657> INCLUDE "internal_commands.ab2"
0004B030 <internal_commands.ab2@2658> INCLUDE "internal_commands.ab2"
0004B033 <internal_commands.ab2@2659> INCLUDE "internal_commands.ab2"
0004B06E <internal_commands.ab2@2660> INCLUDE "internal_commands.ab2"
0004B072 <internal_commands.ab2@2664> INCLUDE "internal_commands.ab2"
0004B074 <internal_commands.ab2@2665> INCLUDE "internal_commands.ab2"
0004B078 <internal_commands.ab2@2666> INCLUDE "internal_commands.ab2"
0004B079 <internal_commands.ab2@2667> INCLUDE "internal_commands.ab2"
0004B07A <internal_commands.ab2@2668> INCLUDE "internal_commands.ab2"
0004B07E <internal_commands.ab2@2671> INCLUDE "internal_commands.ab2"
0004B080 <internal_commands.ab2@2672> INCLUDE "internal_commands.ab2"
0004B088 <internal_commands.ab2@2673> INCLUDE "internal_commands.ab2"
0004B089 <internal_commands.ab2@2674> INCLUDE "internal_commands.ab2"
0004B08A <internal_commands.ab2@2675> INCLUDE "internal_commands.ab2"
0004B08E <internal_commands.ab2@2678> INCLUDE "internal_commands.ab2"
0004B090 <internal_commands.ab2@2679> INCLUDE "internal_commands.ab2"
0004B098 <internal_commands.ab2@2680> INCLUDE "internal_commands.ab2"
0004B0A8 <internal_commands.ab2@2681> INCLUDE "internal_commands.ab2"
0004B0AC <internal_commands.ab2@2685> INCLUDE "internal_commands.ab2"
0004B0AE <internal_commands.ab2@2686> INCLUDE "internal_commands.ab2"
0004B0B7 <internal_commands.ab2@2687> INCLUDE "internal_commands.ab2"
0004B0BF <internal_commands.ab2@2688> INCLUDE "internal_commands.ab2"
0004B0C0 <internal_commands.ab2@2689> INCLUDE "internal_commands.ab2"
0004B0C4 <internal_commands.ab2@2692> INCLUDE "internal_commands.ab2"
0004B0C6 <internal_commands.ab2@2693> INCLUDE "internal_commands.ab2"
0004B0CE <internal_commands.ab2@2694> INCLUDE "internal_commands.ab2"
0004B0D7 <internal_commands.ab2@2695> INCLUDE "internal_commands.ab2"
0004B0D8 <internal_commands.ab2@2696> INCLUDE "internal_commands.ab2"
0004B0DC <internal_commands.ab2@2699> INCLUDE "internal_commands.ab2"
0004B0DE <internal_commands.ab2@2700> INCLUDE "internal_commands.ab2"
0004B0E6 <internal_commands.ab2@2701> INCLUDE "internal_commands.ab2"
0004B0E7 <internal_commands.ab2@2702> INCLUDE "internal_commands.ab2"
0004B0E8 <internal_commands.ab2@2703> INCLUDE "internal_commands.ab2"
0004B0EC <internal_commands.ab2@2706> INCLUDE "internal_commands.ab2"
0004B0EE <internal_commands.ab2@2707> INCLUDE "internal_commands.ab2"
0004B0F4 <internal_commands.ab2@2708> INCLUDE "internal_commands.ab2"
0004B0F5 <internal_commands.ab2@2709> INCLUDE "internal_commands.ab2"
0004B0F6 <internal_commands.ab2@2710> INCLUDE "internal_commands.ab2"
0004B0FA <internal_commands.ab2@2713> INCLUDE "internal_commands.ab2"
0004B0FC <internal_commands.ab2@2714> INCLUDE "internal_commands.ab2"
0004B103 <internal_commands.ab2@2715> INCLUDE "internal_commands.ab2"
0004B104 <internal_commands.ab2@2716> INCLUDE "internal_commands.ab2"
0004B108 <internal_commands.ab2@2720> INCLUDE "internal_commands.ab2"
0004B10A <internal_commands.ab2@2721> INCLUDE "internal_commands.ab2"
0004B111 <internal_commands.ab2@2722> INCLUDE "internal_commands.ab2"
0004B112 <internal_commands.ab2@2723> INCLUDE "internal_commands.ab2"
0004B116 <internal_commands.ab2@2727> INCLUDE "internal_commands.ab2"
0004B118 <internal_commands.ab2@2728> INCLUDE "internal_commands.ab2"
0004B11F <internal_commands.ab2@2729> INCLUDE "internal_commands.ab2"
0004B120 <internal_commands.ab2@2730> INCLUDE "internal_commands.ab2"
0004B124 <internal_commands.ab2@2734> INCLUDE "internal_commands.ab2"
0004B126 <internal_commands.ab2@2735> INCLUDE "internal_commands.ab2"
0004B12D <internal_commands.ab2@2736> INCLUDE "internal_commands.ab2"
0004B12E <internal_commands.ab2@2737> INCLUDE "internal_commands.ab2"
0004B132 <internal_commands.ab2@2741> INCLUDE "internal_commands.ab2"
0004B134 <internal_commands.ab2@2742> INCLUDE "internal_commands.ab2"
0004B139 <internal_commands.ab2@2743> INCLUDE "internal_commands.ab2"
0004B14F <internal_commands.ab2@2744> INCLUDE "internal_commands.ab2"
0004B150 <internal_commands.ab2@2745> INCLUDE "internal_commands.ab2"
0004B154 <internal_commands.ab2@2748> INCLUDE "internal_commands.ab2"
0004B156 <internal_commands.ab2@2749> INCLUDE "internal_commands.ab2"
0004B160 <internal_commands.ab2@2750> INCLUDE "internal_commands.ab2"
0004B161 <internal_commands.ab2@2751> INCLUDE "internal_commands.ab2"
0004B162 <internal_commands.ab2@2752> INCLUDE "internal_commands.ab2"
0004B166 <internal_commands.ab2@2755> INCLUDE "internal_commands.ab2"
0004B168 <internal_commands.ab2@2756> INCLUDE "internal_commands.ab2"
0004B173 <internal_commands.ab2@2757> INCLUDE "internal_commands.ab2"
0004B174 <internal_commands.ab2@2758> INCLUDE "internal_commands.ab2"
0004B178 <internal_commands.ab2@2762> INCLUDE "internal_commands.ab2"
0004B17A <internal_commands.ab2@2763> INCLUDE "internal_commands.ab2"
0004B186 <internal_commands.ab2@2764> INCLUDE "internal_commands.ab2"
0004B1B3 <internal_commands.ab2@2765> INCLUDE "internal_commands.ab2"
0004B1B4 <internal_commands.ab2@2766> INCLUDE "internal_commands.ab2"
0004B1B8 <internal_commands.ab2@2769> INCLUDE "internal_commands.ab2"
0004B1BA <internal_commands.ab2@2770> INCLUDE "internal_commands.ab2"
0004B1C2 <internal_commands.ab2@2771> INCLUDE "internal_commands.ab2"
0004B1F9 <internal_commands.ab2@2772> INCLUDE "internal_commands.ab2"
0004B1FA <internal_commands.ab2@2773> INCLUDE "internal_commands.ab2"
0004B1FE <internal_commands.ab2@2776> INCLUDE "internal_commands.ab2"
0004B200 <internal_commands.ab2@2777> INCLUDE "internal_commands.ab2"
0004B208 <internal_commands.ab2@2778> INCLUDE "internal_commands.ab2"
0004B227 <internal_commands.ab2@2779> INCLUDE "internal_commands.ab2"
0004B228 <internal_commands.ab2@2780> INCLUDE "internal_commands.ab2"
0004B22C <internal_commands.ab2@2783> INCLUDE "internal_commands.ab2"
0004B22E <internal_commands.ab2@2784> INCLUDE "internal_commands.ab2"
0004B235 <internal_commands.ab2@2785> INCLUDE "internal_commands.ab2"
0004B26B <internal_commands.ab2@2786> INCLUDE "internal_commands.ab2"
0004B26C <internal_commands.ab2@2787> INCLUDE "internal_commands.ab2"
0004B270 <internal_commands.ab2@2790> INCLUDE "internal_commands.ab2"
0004B272 <internal_commands.ab2@2791> INCLUDE "internal_commands.ab2"
0004B27B <internal_commands.ab2@2792> INCLUDE "internal_commands.ab2"
0004B2B0 <internal_commands.ab2@2793> INCLUDE "internal_commands.ab2"
0004B2B4 <internal_commands.ab2@2797> INCLUDE "internal_commands.ab2"
0004B2B6 <internal_commands.ab2@2798> INCLUDE "internal_commands.ab2"
0004B2C6 <internal_commands.ab2@2799> INCLUDE "internal_commands.ab2"
0004B2FD <internal_commands.ab2@2800> INCLUDE "internal_commands.ab2"
0004B2FE <internal_commands.ab2@2801> INCLUDE "internal_commands.ab2"
0004B2FE <AmiBlitz3.ab2@28178> INCLUDE "internal_commands.ab2"
0004B302 <AmiBlitz3.ab2@28183>            Dc.l cif_lt                                     ;ciflt
0004B306 <AmiBlitz3.ab2@28184>            Dc.l cif_eq                                     ;cifeq
0004B30A <AmiBlitz3.ab2@28185>            Dc.l cif_gt                                     ;cifgt
0004B30E <AmiBlitz3.ab2@28186>            Ds.l 1                                          ;0
0004B312 <AmiBlitz3.ab2@28187>            Dc.l cif_le                                     ;cifle
0004B316 <AmiBlitz3.ab2@28188>            Dc.l cif_ne                                     ;cifne
0004B31A <AmiBlitz3.ab2@28189>            Dc.l cif_le                                     ;cifge
0004B31E <AmiBlitz3.ab2@28190>            Ds.l 1                                          ;0
0004B322 <AmiBlitz3.ab2@28191>            Dc.l cif_ge                                     ;cifge
0004B326 <AmiBlitz3.ab2@28192>            Dc.l cif_ne                                     ;cifne
0004B32A <AmiBlitz3.ab2@28193>            Dc.l cif_ge                                     ;cifge
0004B32E <AmiBlitz3.ab2@28194>            Ds.l 1                                          ;0
0004B332 <AmiBlitz3.ab2@28197>            Dc.l do_newtype                                 ;donewtype
0004B336 <AmiBlitz3.ab2@28198>            Dc.l do_end                                     ;doend
0004B33A <AmiBlitz3.ab2@28199>            Dc.l do_let                                     ;dolet
0004B33E <AmiBlitz3.ab2@28200>            Dc.l do_dim                                     ;dodim
0004B342 <AmiBlitz3.ab2@28201>            Dc.l do_goto                                    ;dogoto
0004B346 <AmiBlitz3.ab2@28202>            Dc.l do_gosub                                   ;dogosub
0004B34A <AmiBlitz3.ab2@28203>            Dc.l do_return                                  ;doreturn
0004B34E <AmiBlitz3.ab2@28204>            Dc.l do_statement                               ;dostatement
0004B352 <AmiBlitz3.ab2@28205>            Dc.l do_function                                ;dofunc
0004B356 <AmiBlitz3.ab2@28206>            Dc.l do_mousewait                               ;domwait
0004B35A <AmiBlitz3.ab2@28207>            Dc.l do_if                                      ;doif
0004B35E <AmiBlitz3.ab2@28208>            Dc.l do_while                                   ;dowhile
0004B362 <AmiBlitz3.ab2@28209>            Dc.l do_Macro                                   ;domacro
0004B366 <AmiBlitz3.ab2@28210>            Dc.l do_select                                  ;doselect
0004B36A <AmiBlitz3.ab2@28211>            Dc.l do_case                                    ;docase
0004B36E <AmiBlitz3.ab2@28212>            Dc.l do_default                                 ;dodefault
0004B372 <AmiBlitz3.ab2@28213>            Dc.l do_AsmExit                                 ;doasmexit
0004B376 <AmiBlitz3.ab2@28214>            Dc.l do_xinclude                                ;doxinclude
0004B37A <AmiBlitz3.ab2@28215>            Dc.l do_INCLUDE                                 ;doinclude
0004B37E <AmiBlitz3.ab2@28216>            Dc.l do_syntax                                  ;syntaxerr
0004B382 <AmiBlitz3.ab2@28217>            Dc.l do_shared                                  ;doshared
0004B386 <AmiBlitz3.ab2@28218>            Dc.l do_for                                     ;dofor
0004B38A <AmiBlitz3.ab2@28219>            Dc.l do_next                                    ;donext
0004B38E <AmiBlitz3.ab2@28220>            Dc.l syntaxerr                                  ; To
0004B392 <AmiBlitz3.ab2@28221>            Dc.l syntaxerr                                  ; Step
0004B396 <AmiBlitz3.ab2@28222>            Dc.l do_data                                    ;dodata
0004B39A <AmiBlitz3.ab2@28223>            Dc.l do_read                                    ;doread
0004B39E <AmiBlitz3.ab2@28227>            Dc.l syntaxerr                                  ; CNIF
0004B3A2 <AmiBlitz3.ab2@28228>            Dc.l syntaxerr                                  ; CSIF
0004B3A6 <AmiBlitz3.ab2@28229>            Dc.l syntaxerr                                  ; CELSE
0004B3AA <AmiBlitz3.ab2@28230>            Dc.l syntaxerr                                  ; CEND
0004B3AE <AmiBlitz3.ab2@28231>            Dc.l do_cerr                                    ;docerr
0004B3B2 <AmiBlitz3.ab2@28232>            Dc.l do_then                                    ;dothen
0004B3B6 <AmiBlitz3.ab2@28233>            Dc.l do_else                                    ;doelse
0004B3BA <AmiBlitz3.ab2@28234>            Dc.l do_even4                                   ;doeven4
0004B3BE <AmiBlitz3.ab2@28235>            Dc.l do_even8                                   ;doeven8
0004B3C2 <AmiBlitz3.ab2@28237>            Dc.l do_dc                                      ;dodc
0004B3C6 <AmiBlitz3.ab2@28238>            Dc.l do_ds                                      ;dods
0004B3CA <AmiBlitz3.ab2@28239>            Dc.l do_even                                    ;doeven
0004B3CE <AmiBlitz3.ab2@28240>            Dc.l do_dcb                                     ;dodcb
0004B3D2 <AmiBlitz3.ab2@28241>            Dc.l do_setreg                                  ;dosetreg
0004B3D6 <AmiBlitz3.ab2@28242>            Dc.l do_IncBin                                  ;doincbin
0004B3DA <AmiBlitz3.ab2@28243>            Dc.l do_free                                    ;dofree
0004B3DE <AmiBlitz3.ab2@28244>            Dc.l do_use                                     ;douse
0004B3E2 <AmiBlitz3.ab2@28245>            Dc.l do_Stop                                    ;dostop
0004B3E6 <AmiBlitz3.ab2@28246>            Dc.l do_Cont                                    ;docont
0004B3EA <AmiBlitz3.ab2@28247>            Dc.l syntaxerr                                  ;syntaxeer
0004B3EE <AmiBlitz3.ab2@28248>            Dc.l do_SetInt                                  ;dosetint
0004B3F2 <AmiBlitz3.ab2@28249>            Dc.l do_ClrInt                                  ;doclrint
0004B3F6 <AmiBlitz3.ab2@28250>            Dc.l do_MaxLen                                  ;domaxlen
0004B3FA <AmiBlitz3.ab2@28251>            Dc.l do_DEFTYPE                                 ;dodeftype
0004B3FE <AmiBlitz3.ab2@28252>            Dc.l do_BLITZ                                   ;doblitz
0004B402 <AmiBlitz3.ab2@28253>            Dc.l do_AMIGA                                   ;doamiga
0004B406 <AmiBlitz3.ab2@28254>            Dc.l do_QAMIGA                                  ;doqamiga
0004B40A <AmiBlitz3.ab2@28255>            Dc.l do_VWait                                   ;dovwait
0004B40E <AmiBlitz3.ab2@28256>            Dc.l do_LibJsr                                  ;dolibjsr
0004B412 <AmiBlitz3.ab2@28257>            Dc.l do_TokeJsr                                 ;dotokejsr
0004B416 <AmiBlitz3.ab2@28258>            Dc.l do_BLibJsr                                 ;doblibjsr
0004B41A <AmiBlitz3.ab2@28259>            Dc.l _extb                                      ;syntaxerr
0004B41E <AmiBlitz3.ab2@28263>            Dc.l syntaxerr                                  ;syntaxerr      ;flash2 ; for list
0004B422 <AmiBlitz3.ab2@28264>            Dc.l do_SetErr                                  ;doseterr
0004B426 <AmiBlitz3.ab2@28265>            Dc.l do_ClrErr                                  ;doclrerr
0004B42A <AmiBlitz3.ab2@28266>            Dc.l syntaxerr                                  ;syntaxerr
0004B42E <AmiBlitz3.ab2@28267>            Dc.l do_ErrFail                                 ;doerrfail
0004B432 <AmiBlitz3.ab2@28268>            Dc.l syntaxerr
0004B436 <AmiBlitz3.ab2@28269>            Dc.l syntaxerr                                  ;mod
0004B43A <AmiBlitz3.ab2@28270>            Dc.l syntaxerr                                  ;Pi
0004B43E <AmiBlitz3.ab2@28271>            Dc.l do_Repeat                                  ;dorepeat
0004B442 <AmiBlitz3.ab2@28272>            Dc.l do_Until                                   ;dountil
0004B446 <AmiBlitz3.ab2@28273>            Dc.l do_PutReg                                  ;doputreg
0004B44A <AmiBlitz3.ab2@28274>            Dc.l do_Pop                                     ;dopop
0004B44E <AmiBlitz3.ab2@28275>            Dc.l do_INCDIR                                  ;doincdir
0004B452 <AmiBlitz3.ab2@28276>            Dc.l mydo_Endif2                                ;mydoendif2
0004B456 <AmiBlitz3.ab2@28277>            Dc.l do_Wend                                    ;dowend
0004B45A <AmiBlitz3.ab2@28278>            Dc.l do_SysJsr                                  ;dosysjsr
0004B45E <AmiBlitz3.ab2@28279>            Dc.l do_WBStartup                               ;dowbstartup
0004B462 <AmiBlitz3.ab2@28280>            Dc.l syntaxerr
0004B466 <AmiBlitz3.ab2@28281>            Dc.l do_Ongo                                    ;doongo
0004B46A <AmiBlitz3.ab2@28282>            Dc.l syntaxerr
0004B46E <AmiBlitz3.ab2@28283>            Dc.l do_Forever                                 ;doforever
0004B472 <AmiBlitz3.ab2@28284>            Dc.l do_Restore                                 ;dorestore
0004B476 <AmiBlitz3.ab2@28285>            Dc.l do_Exchange                                ;doexchange
0004B47A <AmiBlitz3.ab2@28286>            Dc.l do_USEPATH                                 ;dousepath
0004B47E <AmiBlitz3.ab2@28287>            Dc.l do_CloseEd                                 ;doclosed
0004B482 <AmiBlitz3.ab2@28288>            Dc.l do_NoCli                                   ;donocli
0004B486 <AmiBlitz3.ab2@28289>            Dc.l syntaxerr                                  ;syntaxerr
0004B48A <AmiBlitz3.ab2@28290>            Dc.l syntaxerr                                  ;syntaxerr
0004B48E <AmiBlitz3.ab2@28291>            Dc.l syntaxerr                                  ;syntaxerr
0004B492 <AmiBlitz3.ab2@28292>            Dc.l syntaxerr                                  ;syntaxerr
0004B496 <AmiBlitz3.ab2@28293>            Dc.l syntaxerr                                  ;syntaxerr
0004B49A <AmiBlitz3.ab2@28294>            Dc.l do_runerrson                               ;dorunerrson
0004B49E <AmiBlitz3.ab2@28295>            Dc.l do_runerrsoff                              ;dorunerrsoff
0004B4A2 <AmiBlitz3.ab2@28296>            Dc.l do_uselastpath
0004B4A6 <AmiBlitz3.ab2@28297>            Dc.l do_regload
0004B4AA <AmiBlitz3.ab2@28298>            Dc.l do_regsave
0004B4AE <AmiBlitz3.ab2@28299>            Dc.l do_Object
0004B4B2 <AmiBlitz3.ab2@28300>            Dc.l do_usepath2
0004B4B6 <AmiBlitz3.ab2@28301>            Dc.l do_LastRunErrsMode
0004B4BA <AmiBlitz3.ab2@28324> menu_items:Dc.l menu_compile_run                                ;menuadds oreg source
0004B4BE <AmiBlitz3.ab2@28325>            Dc.l menu_run
0004B4C2 <AmiBlitz3.ab2@28326>            Dc.l menu_createexecutable
0004B4C6 <AmiBlitz3.ab2@28327>            Dc.l menu_compileroptions
0004B4CA <AmiBlitz3.ab2@28328>            Dc.l menu_createresidentfile
0004B4CE <AmiBlitz3.ab2@28329>            Dc.l menu_viewnewtypes
0004B4D2 <AmiBlitz3.ab2@28330>            Dc.l menu_simcliarguments
0004B4D6 <AmiBlitz3.ab2@28331>            Dc.l menu_calculator
0004B4DA <AmiBlitz3.ab2@28332>            Dc.l menu_reloadlibs
0004B4DE <AmiBlitz3.ab2@28333>            Dc.l menu_loaddebugmodule
0004B4E2 <AmiBlitz3.ab2@28334>            Dc.l menu_dummyfunc
0004B4E6 <AmiBlitz3.ab2@28335>            Dc.l menu_newcreate
0004B4EA <AmiBlitz3.ab2@28336>            Dc.l menu_dummyfunc
0004B4EE <AmiBlitz3.ab2@28337>            Dc.l toggledebug
0004B4F2 <AmiBlitz3.ab2@28338>            Dc.l menu_dummyfunc
0004B4F6 <AmiBlitz3.ab2@28339>            Dc.l menu_dummyfunc
0004B4F8 <AmiBlitz3.ab2@28340> Even4
0004B522 <AmiBlitz3.ab2@28344> !basic
0004B550 <AmiBlitz3.ab2@28345> error{"Inavlid amiblitz3 menu item called!"}
0004B56E <AmiBlitz3.ab2@28346> !asm
0004B570 <AmiBlitz3.ab2@28347> RTS
0004B571 <AmiBlitz3.ab2@28353> set_autorun:               Dc.b $00
0004B576 <AmiBlitz3.ab2@28354> autorun:                   Dc.b $80,$01,$01,$00,$01
0004B577 <AmiBlitz3.ab2@28356> set_interruptcheck:        Dc.b $00
0004B57C <AmiBlitz3.ab2@28357> interruptcheck             Dc.b $80,$01,$01,$00,$01
0004B57D <AmiBlitz3.ab2@28359> set_assemblercheck:        Ds.b 1
0004B582 <AmiBlitz3.ab2@28360> assemblercheck:            Dc.b $00,$01,$01,$00,$01
0004B583 <AmiBlitz3.ab2@28362> set_overflowcheck:         Ds.b 1
0004B588 <AmiBlitz3.ab2@28363> overflowcheck:             Dc.b $00,$01,$01,$00,$01
0004B58E <AmiBlitz3.ab2@28365> default_obsolete:          Dc.b $00,$80,$01,$01,$00,$01
0004B594 <AmiBlitz3.ab2@28366> default_interruptcheck:    Dc.b $00,$80,$01,$01,$00,$01
0004B59A <AmiBlitz3.ab2@28367> default_overflowcheck:     Dc.b $00,$80,$01,$01,$00,$01
0004B59C <AmiBlitz3.ab2@28368> Even4
0004B5A8 <AmiBlitz3.ab2@28371> tsthead:                   Dc.l $000003F3,$00000000,$00000001
0004B5B0 <AmiBlitz3.ab2@28372>                            Dc.l $00000000,$00000000
0004B5B8 <AmiBlitz3.ab2@28373> tstsize1:                  Dc.l $00000100,$000003E9
0004B5BC <AmiBlitz3.ab2@28374> tstsize2:                  Dc.l $00000100
0004B5C0 <AmiBlitz3.ab2@28375> tstend:                    Dc.l $000003EC
0004B5C8 <AmiBlitz3.ab2@28376> tstsize3:                  Ds.l 2
0004B5CC <AmiBlitz3.ab2@28377> tstdone:                   Dc.l $000003F2
0004B5D0 <AmiBlitz3.ab2@28380> edstruct:                  Dc.l tokens                     ;data for ted
0004B5D4 <AmiBlitz3.ab2@28384>                            Dc.l 0
0004B5D8 <AmiBlitz3.ab2@28386>                            Dc.l read_xtrafile              ;load .xtra routine
0004B5DC <AmiBlitz3.ab2@28387>                            Dc.l write_xtrafile             ;save .xtra routine
0004B5E0 <AmiBlitz3.ab2@28388>                            Dc.l call_menuentry             ;Menu Routine
0004B5E4 <AmiBlitz3.ab2@28389>                            Ds.l 1                          ;cleanup (?)
0004B5E8 <AmiBlitz3.ab2@28390>                            Dc.b ":",34,".;"
0004B6E4 <AmiBlitz3.ab2@28393> 
0004B7C4 <AmiBlitz3.ab2@28394>                            Ds.l 56
0004B7C6 <AmiBlitz3.ab2@28399> lslimm:                    Dc.b $E1,$48                                             ;LSL.W   #8,D0
0004B7CA <AmiBlitz3.ab2@28402> use:                       Dc.b $26,$6D,$00,$00                                     ;MOVEA.L $0000(A5),A3
0004B7CC <AmiBlitz3.ab2@28403>                            Dc.b $D6,$C0                                             ;ADDA.W  D0,A3
0004B7D0 <AmiBlitz3.ab2@28404>                            Dc.b $2B,$4B,$00,$00                                     ;MOVE.L  A3,$0000(A5)
0004B7D6 <AmiBlitz3.ab2@28408> beginarr:                  Dc.b $20,$3C,$00,$00,$00,$00                             ;MOVE.L  #$00000000,D0
0004B7D8 <AmiBlitz3.ab2@28412>                            Dc.b $C0,$C1                                             ;MULU.W  D1,D0
0004B7DC <AmiBlitz3.ab2@28415> putarr:                    Dc.b $2B,$40 :                            Dc.b $00,$00   ;MOVE.L  D0,$0000(A5)
0004B7E0 <AmiBlitz3.ab2@28418> doarr:                     Dc.b $34,$3C,$00,$00                                     ;MOVE.W  #$0000,D2
0004B7E4 <AmiBlitz3.ab2@28419>                            Dc.b $36,$3C,$00,$00                                     ;MOVE.W  #$0000,D3
0004B7E6 <AmiBlitz3.ab2@28425>                            Dc.b $4A,$40                                             ;TST.W   D0
0004B7E8 <AmiBlitz3.ab2@28429>                            Dc.b $4A,$80                                             ;TST.L   D0
0004B7EA <AmiBlitz3.ab2@28432> nops8:                     Dc.b $4E,$71                                             ;NOP
0004B7EC <AmiBlitz3.ab2@28433>                            Dc.b $4E,$71                                             ;NOP
0004B7EE <AmiBlitz3.ab2@28434>                            Dc.b $4E,$71                                             ;NOP
0004B7F0 <AmiBlitz3.ab2@28435>                            Dc.b $4E,$71                                             ;NOP
0004B7F2 <AmiBlitz3.ab2@28436> nops4:                     Dc.b $4E,$71                                             ;NOP
0004B7F4 <AmiBlitz3.ab2@28438>                            Dc.b $4E,$71                                             ;NOP
0004B7F6 <AmiBlitz3.ab2@28439>                            Dc.b $4E,$71                                             ;NOP
0004B7F8 <AmiBlitz3.ab2@28440>                            Dc.b $4E,$71                                             ;NOP
0004B7FC <AmiBlitz3.ab2@28444> dataget:                   Dc.b $26,$6D :                            Dc.b $00,$00   ;MOVEA.L $0000(A5),A3
0004B800 <AmiBlitz3.ab2@28447> dataput:                   Dc.b $2B,$4B :                            Dc.b $00,$00   ;MOVE.L  A3,$0000(A5)
0004B802 <AmiBlitz3.ab2@28450> stlenget:                  Dc.b $2F,$1B                                             ;MOVE.L  (A3)+,-(A7)
0004B804 <AmiBlitz3.ab2@28453> stalign:                   Dc.b $52,$4B                                             ;ADDQ.W  #1,A3
0004B806 <AmiBlitz3.ab2@28454>                            Dc.b $C1,$8B                                             ;EXG D0,A3
0004B80A <AmiBlitz3.ab2@28455>                            Dc.b $08,$80,$00,$00                                     ;BCLR    #0,D0
0004B80C <AmiBlitz3.ab2@28456>                            Dc.b $C1,$8B                                             ;EXG D0,A3
0004B80E <AmiBlitz3.ab2@28462> dataletb:                  Dc.b $52,$4B                                             ;ADDQ.W  #1,A3
0004B812 <AmiBlitz3.ab2@28463>                            Dc.b $1B,$5B,$00,$00                                     ;MOVE.B  (A3)+,$0000(A5)
0004B814 <AmiBlitz3.ab2@28468> dataletbl:                 Dc.b $52,$4B                                             ;ADDQ.W  #1,A3
0004B818 <AmiBlitz3.ab2@28469>                            Dc.b $19,$5B,$00,$00                                     ;MOVE.B  (A3)+,$0000(A4)
0004B81A <AmiBlitz3.ab2@28473> dataletb2:                 Dc.b $52,$4B                                             ;ADDQ.W  #1,A3
0004B81C <AmiBlitz3.ab2@28474>                            Dc.b $14,$9B                                             ;MOVE.B  (A3)+,(A2)
0004B820 <AmiBlitz3.ab2@28480> dataletw:                  Dc.b $3B,$5B,$00,$00                                     ;MOVE.W  (A3)+,$0000(A5)
0004B822 <AmiBlitz3.ab2@28481>                            Dc.b $34,$9B                                             ;MOVE.W  (A3)+,(A2)
0004B826 <AmiBlitz3.ab2@28482>                            Dc.b $39,$5B,$00,$00                                     ;MOVE.W  (A3)+,$0000(A4)
0004B82A <AmiBlitz3.ab2@28486> dataletl:                  Dc.b $2B,$5B,$00,$00                                     ;MOVE.L  (A3)+,$0000(A5)
0004B82C <AmiBlitz3.ab2@28487>                            Dc.b $24,$9B                                             ;MOVE.L  (A3)+,(A2)
0004B830 <AmiBlitz3.ab2@28488>                            Dc.b $29,$5B,$00,$00                                     ;MOVE.L  (A3)+,$0000(A4)
0004B832 <AmiBlitz3.ab2@28491> nextfixw:                  Dc.b $50,$4F                                             ;ADDQ.W  #8,A7
0004B836 <AmiBlitz3.ab2@28494> nextfixw2:                 Dc.b $4F,$EF,$00,$0A                                     ;LEA $000A(A7),A7
0004B83A <AmiBlitz3.ab2@28497> nextfixl:                  Dc.b $4F,$EF,$00,$0C                                     ;LEA $000C(A7),A7
0004B83E <AmiBlitz3.ab2@28500> nextfixl2:                 Dc.b $4F,$EF,$00,$0E                                     ;LEA $000E(A7),A7
0004B842 <AmiBlitz3.ab2@28504>                            Dc.b $24,$6F,$00,$04                                     ;MOVEA.L $0004(A7),A2
0004B844 <AmiBlitz3.ab2@28505>                            Dc.b $30,$17                                             ;MOVE.W  (A7),D0
0004B846 <AmiBlitz3.ab2@28506>                            Dc.b $D1,$12                                             ;ADD.B   D0,(A2)
0004B84A <AmiBlitz3.ab2@28511>                            Dc.b $24,$6F,$00,$04                                     ;MOVEA.L $0004(A7),A2
0004B84C <AmiBlitz3.ab2@28512>                            Dc.b $30,$17                                             ;MOVE.W  (A7),D0
0004B84E <AmiBlitz3.ab2@28513>                            Dc.b $D1,$52                                             ;ADD.W   D0,(A2)
0004B852 <AmiBlitz3.ab2@28518>                            Dc.b $24,$6F,$00,$08                                     ;MOVEA.L $0008(A7),A2
0004B854 <AmiBlitz3.ab2@28519>                            Dc.b $20,$17                                             ;MOVE.L  (A7),D0
0004B856 <AmiBlitz3.ab2@28520>                            Dc.b $D1,$92                                             ;ADD.L   D0,(A2)
0004B85A <AmiBlitz3.ab2@28525>                            Dc.b $24,$6F,$00,$08                                     ;MOVEA.L $0008(A7),A2
0004B85C <AmiBlitz3.ab2@28526>                            Dc.b $20,$12                                             ;MOVE.L  (A2),D0
0004B85E <AmiBlitz3.ab2@28527>                            Dc.b $22,$17                                             ;MOVE.L  (A7),D1
0004B862 <AmiBlitz3.ab2@28528>                            Dc.b $4E,$AE,$FF,$BE                                     ;JSR -$0042(A6)
0004B864 <AmiBlitz3.ab2@28529>                            Dc.b $24,$80                                             ;MOVE.L  D0,(A2)
0004B868 <AmiBlitz3.ab2@28534>                            Dc.b $24,$6F,$00,$04                                     ;MOVEA.L $0004(A7),A2
0004B86A <AmiBlitz3.ab2@28535>                            Dc.b $10,$12                                             ;MOVE.B  (A2),D0
0004B86E <AmiBlitz3.ab2@28536>                            Dc.b $32,$2F,$00,$02                                     ;MOVE.W  $0002(A7),D1
0004B870 <AmiBlitz3.ab2@28537>                            Dc.b $4A,$57                                             ;TST.W   (A7)
0004B874 <AmiBlitz3.ab2@28538>                            Dc.b $6A,$00,$00,$04                                     ;BPL.W   L000001         ;.skip org source
0004B876 <AmiBlitz3.ab2@28539>                            Dc.b $C1,$41                                             ;EXG D0,D1
0004B878 <AmiBlitz3.ab2@28542>                            Dc.b $B0,$01                                             ;CMP.B   D1,D0
0004B87C <AmiBlitz3.ab2@28547>                            Dc.b $24,$6F,$00,$04                                     ;MOVEA.L $0004(A7),A2
0004B87E <AmiBlitz3.ab2@28548>                            Dc.b $30,$12                                             ;MOVE.W  (A2),D0
0004B882 <AmiBlitz3.ab2@28549>                            Dc.b $32,$2F,$00,$02                                     ;MOVE.W  $0002(A7),D1
0004B884 <AmiBlitz3.ab2@28550>                            Dc.b $4A,$57                                             ;TST.W   (A7)
0004B888 <AmiBlitz3.ab2@28551>                            Dc.b $6A,$00,$00,$04                                     ;BPL.W   L000002         ;.skip org source
0004B88A <AmiBlitz3.ab2@28552>                            Dc.b $C1,$41                                             ;EXG D0,D1
0004B88C <AmiBlitz3.ab2@28555>                            Dc.b $B0,$41                                             ;CMP.W   D1,D0
0004B890 <AmiBlitz3.ab2@28560>                            Dc.b $24,$6F,$00,$08                                     ;MOVEA.L $0008(A7),A2
0004B892 <AmiBlitz3.ab2@28561>                            Dc.b $20,$12                                             ;MOVE.L  (A2),D0
0004B896 <AmiBlitz3.ab2@28562>                            Dc.b $22,$2F,$00,$04                                     ;MOVE.L  $0004(A7),D1
0004B898 <AmiBlitz3.ab2@28563>                            Dc.b $4A,$57                                             ;TST.W   (A7)
0004B89C <AmiBlitz3.ab2@28564>                            Dc.b $6A,$00,$00,$04                                     ;BPL.W   L000003         ;.skip org source
0004B89E <AmiBlitz3.ab2@28565>                            Dc.b $C1,$41                                             ;EXG D0,D1
0004B8A0 <AmiBlitz3.ab2@28568>                            Dc.b $B0,$81                                             ;CMP.L   D1,D0
0004B8A4 <AmiBlitz3.ab2@28573>                            Dc.b $24,$6F,$00,$08                                     ;MOVEA.L $0008(A7),A2
0004B8A6 <AmiBlitz3.ab2@28574>                            Dc.b $20,$12                                             ;MOVE.L  (A2),D0
0004B8AA <AmiBlitz3.ab2@28575>                            Dc.b $22,$2F,$00,$04                                     ;MOVE.L  $0004(A7),D1
0004B8B0 <AmiBlitz3.ab2@28576>                            Dc.b $08,$2F,$00,$07,$00,$03                             ;BTST    #7,$0003(A7)
0004B8B4 <AmiBlitz3.ab2@28577>                            Dc.b $67,$00,$00,$04                                     ;BEQ.W   L000004
0004B8B6 <AmiBlitz3.ab2@28578>                            Dc.b $C1,$41                                             ;EXG D0,D1
0004B8BA <AmiBlitz3.ab2@28585>                            Dc.b $4E,$AE,$FF,$D6                                     ;JSR -$002A(A6)
0004B8BC <AmiBlitz3.ab2@28589> swapd0:                    Dc.b $48,$40                                             ;SWAP    D0
0004B8BE <AmiBlitz3.ab2@28592> pushindex:                 Dc.b $2F,$0A                                             ;MOVE.L  A2,-(A7)
0004B8C2 <AmiBlitz3.ab2@28595> leaamp:                    Dc.b $45,$ED :                            Dc.b $00,$00   ;LEA $0000(A5),A2
0004B8C4 <AmiBlitz3.ab2@28596> leaamp2:                   Dc.b $20,$0A                                             ;MOVE.L  A2,D0
0004B8C8 <AmiBlitz3.ab2@28599> leaampl:                   Dc.b $45,$EC :                            Dc.b $00,$00   ;LEA $0000(A4),A2
0004B8CA <AmiBlitz3.ab2@28602> stamp:                     Dc.b $20,$12                                             ;MOVE.L  (A2),D0
0004B8CE <AmiBlitz3.ab2@28605> stamp2:                    Dc.b $24,$6D :                            Dc.b $00,$00   ;MOVEA.L $0000(A5),A2
0004B8D0 <AmiBlitz3.ab2@28609>                            Dc.b $58,$4F                                             ;ADDQ.W  #4,A7
0004B8D2 <AmiBlitz3.ab2@28612> pushd0wd:                  Dc.b $3F,$00                                             ;MOVE.W  D0,-(A7)
0004B8D4 <AmiBlitz3.ab2@28615> pushd0l:                   Dc.b $2F,$00                                             ;MOVE.L  D0,-(A7)
0004B8D8 <AmiBlitz3.ab2@28618> movenumrep:                Dc.b $3E,$3C :                            Dc.b $00,$00   ;MOVE.W  #$0000,D7
0004B8DC <AmiBlitz3.ab2@28621> preplibst:                 Dc.b $45,$EF :                            Dc.b $00,$00   ;LEA $0000(A7),A2
0004B8E0 <AmiBlitz3.ab2@28624> fixlibst:                  Dc.b $4F,$EF :                            Dc.b $00,$00   ;LEA $0000(A7),A7
0004B8E2 <AmiBlitz3.ab2@28627> pushdn:                    Dc.b $2F,$00                                             ;MOVE.L  D0,-(A7)
0004B8E4 <AmiBlitz3.ab2@28630> movea3a7:                  Dc.b $2F,$0B                                             ;MOVE.L  A3,-(A7)
0004B8E8 <AmiBlitz3.ab2@28633> movestst2:                 Dc.b $20,$2F :                            Dc.b $00,$06   ;MOVE.L  $0006(A7),D0
0004B8EE <AmiBlitz3.ab2@28634>                            Dc.b $3F,$6F,$00,$04,$00,$08                             ;MOVE.W  $0004(A7),$0008(A7)
0004B8F0 <AmiBlitz3.ab2@28635>                            Dc.b $2E,$9F                                             ;MOVE.L  (A7)+,(A7)
0004B8F4 <AmiBlitz3.ab2@28639> movea7dn:                  Dc.b $20,$2F :                            Dc.b $00,$04   ;MOVE.L  $0004(A7),D0
0004B8F6 <AmiBlitz3.ab2@28640>                            Dc.b $2E,$9F                                             ;MOVE.L  (A7)+,(A7)
0004B8F8 <AmiBlitz3.ab2@28644> moved0a3:                  Dc.b $26,$40                                             ;MOVEA.L D0,A3
0004B8FC <AmiBlitz3.ab2@28647> movestdn:                  Dc.b $20,$2D :                            Dc.b $00,$00   ;MOVE.L  $0000(A5),D0
0004B8FE <AmiBlitz3.ab2@28651>                            Dc.b $20,$0B                                             ;MOVE.L  A3,D0
0004B900 <AmiBlitz3.ab2@28655>                            Dc.b $2F,$00                                             ;MOVE.L  D0,-(A7)
0004B902 <AmiBlitz3.ab2@28659>                            Dc.b $20,$1F                                             ;MOVE.L  (A7)+,D0
0004B906 <AmiBlitz3.ab2@28662> moverts:                   Dc.b $2F,$57 :                            Dc.b $00,$00   ;MOVE.L  (A7),$0000(A7)
0004B90A <AmiBlitz3.ab2@28665> fixstack:                  Dc.b $4F,$EF :                            Dc.b $00,$00   ;LEA $0000(A7),A7
0004B90C <AmiBlitz3.ab2@28668> fixq:                      Dc.b $50,$4F                                             ;ADDQ.W  #8,A7
0004B90E <AmiBlitz3.ab2@28671> fix1:                      Dc.b $2E,$9F                                             ;MOVE.L  (A7)+,(A7)
0004B910 <AmiBlitz3.ab2@28674> movedna3:                  Dc.b $26,$40                                             ;MOVEA.L D0,A3
0004B914 <AmiBlitz3.ab2@28677> least:                     Dc.b $45,$EC :                            Dc.b $00,$00   ;LEA $0000(A4),A2
0004B918 <AmiBlitz3.ab2@28680> funcst:                    Dc.b $2F,$2C :                            Dc.b $00,$00   ;MOVE.L  $0000(A4),-(A7)
0004B91A <AmiBlitz3.ab2@28683> addq4a2:                   Dc.b $58,$4A                                             ;ADDQ.W  #4,A2
0004B91C <AmiBlitz3.ab2@28687>                            Dc.b $2F,$0B                                             ;MOVE.L  A3,-(A7)
0004B920 <AmiBlitz3.ab2@28690>                            Dc.b $2B,$4B,$00,$00                                     ;MOVE.L  A3,$0000(A5)
0004B922 <AmiBlitz3.ab2@28696>                            Dc.b $26,$5F                                             ;MOVEA.L (A7)+,A3
0004B926 <AmiBlitz3.ab2@28699>                            Dc.b $2B,$4B,$00,$00                                     ;MOVE.L  A3,$0000(A5)
0004B928 <AmiBlitz3.ab2@28705>                            Dc.b $CB,$4C                                             ;EXG A5,A4
0004B92C <AmiBlitz3.ab2@28709> linksize:                  Dc.b $4E,$54 :                            Dc.b $00,$00   ;LINK    A4,#-$0000
0004B92E <AmiBlitz3.ab2@28712> unlinka4:                  Dc.b $4E,$5C                                             ;UNLK    A4
0004B930 <AmiBlitz3.ab2@28716>                            Dc.b $2F,$0A                                             ;MOVE.L  A2,-(A7)
0004B932 <AmiBlitz3.ab2@28720>                            Dc.b $24,$5F                                             ;MOVEA.L (A7)+,A2
0004B938 <AmiBlitz3.ab2@28723> gotocode:                  Dc.b $4E,$F9,$00,$00,$00,$00                             ;JMP $00000000
0004B93E <AmiBlitz3.ab2@28726> gosubcode:                 Dc.b $4E,$B9,$00,$00,$00,$00                             ;JSR $00000000
0004B946 <AmiBlitz3.ab2@28730> mwait:                     Dc.b $08,$39,$00,$06,$00,$BF,$E0,$01                     ;BTST    #6,$00BFE001
0004B94A <AmiBlitz3.ab2@28731>                            Dc.b $66,$00,$FF,$F6                                     ;BNE.W   L000005       ;mwait: org source
0004B94C <AmiBlitz3.ab2@28735> libreg:                    Dc.b $20,$00                                             ;MOVE.L  D0,D0
0004B950 <AmiBlitz3.ab2@28738> libbase:                   Dc.b $2C,$6D :                            Dc.b $00,$00   ;MOVEA.L $0000(A5),A6
0004B954 <AmiBlitz3.ab2@28741> libjsr:                    Dc.b $4E,$AE :                            Dc.b $00,$00   ;JSR $0000(A6)
0004B958 <AmiBlitz3.ab2@28744> regtransd:                 Dc.b $20,$2D,$00,$00                                     ;MOVE.L  $0000(A5),D0
0004B95C <AmiBlitz3.ab2@28745> regtransa:                 Dc.b $20,$6D,$00,$00                                     ;MOVEA.L $0000(A5),A0
0004B960 <AmiBlitz3.ab2@28749>                            Dc.b $26,$7C,$00,$00                                     ;MOVEA.L #$00000000,A3
0004B964 <AmiBlitz3.ab2@28751>                            Dc.l $3F1B                                               ;MOVE.W  (A3)+,-(A7)
0004B966 <AmiBlitz3.ab2@28754> movea2dn:                  Dc.b $20,$12                                             ;MOVE.L  (A2),D0
0004B96A <AmiBlitz3.ab2@28757> moved3a5dn:                Dc.b $20,$2D,$00,$00                                     ;MOVE.L  $0000(A5),D0
0004B96C <AmiBlitz3.ab2@28760> stvarget2:                 Dc.b $70,$00                                             ;MOVEQ   #$00,D0
0004B96E <AmiBlitz3.ab2@28761>                            Dc.b $2F,$00                                             ;MOVE.L  D0,-(A7)
0004B970 <AmiBlitz3.ab2@28762>                            Dc.b $4A,$92                                             ;TST.L   (A2)
0004B974 <AmiBlitz3.ab2@28763> 
0004B976 <AmiBlitz3.ab2@28764>                            Dc.b $20,$52                                             ;MOVEA.L (A2),A0
0004B978 <AmiBlitz3.ab2@28765>                            Dc.b $59,$48                                             ;SUBQ.W  #4,A0
0004B97A <AmiBlitz3.ab2@28766>                            Dc.b $2E,$98                                             ;MOVE.L  (A0)+,(A7)
0004B980 <AmiBlitz3.ab2@28768>                            Dc.b $4E,$B9,$00,$00,$00,$00                             ;JSR $00000000
0004B982 <AmiBlitz3.ab2@28773> addcode:                   Dc.b $20,$1F                                             ;MOVE.L  (A7)+,D0
0004B984 <AmiBlitz3.ab2@28774>                            Dc.b $D1,$97                                             ;ADD.L   D0,(A7)
0004B986 <AmiBlitz3.ab2@28778> pushlen:                   Dc.b $2F,$18                                             ;MOVE.L  (A0)+,-(A7)
0004B98A <AmiBlitz3.ab2@28781> leaa5d3a2:                 Dc.b $45,$ED :                            Dc.b $00,$00   ;LEA $0000(A5),A2
0004B98C <AmiBlitz3.ab2@28784> pusha2:                    Dc.b $2F,$0A                                             ;MOVE.L  A2,-(A7)
0004B98E <AmiBlitz3.ab2@28788>                            Dc.b $24,$57                                             ;MOVEA.L (A7),A2
0004B990 <AmiBlitz3.ab2@28791> pulla2:                    Dc.b $24,$5F                                             ;MOVEA.L (A7)+,A2
0004B994 <AmiBlitz3.ab2@28794> pulla2st:                  Dc.b $24,$6F,$00,$04                                     ;MOVEA.L $0004(A7),A2
0004B996 <AmiBlitz3.ab2@28795>                            Dc.b $2E,$9F                                             ;MOVE.L  (A7)+,(A7)
0004B99A <AmiBlitz3.ab2@28799> pusha3:                    Dc.b $2F,$2D :                            Dc.b $00,$00   ;MOVE.L  $0000(A5),-(A7)
0004B99E <AmiBlitz3.ab2@28800> pusha32:                   Dc.b $2B,$4B :                            Dc.b $00,$00   ;MOVE.L  A3,$0000(A5)
0004B9A2 <AmiBlitz3.ab2@28804> pulla3:                    Dc.b $2B,$5F :                            Dc.b $00,$00   ;MOVE.L  (A7)+,$0000(A5)
0004B9A6 <AmiBlitz3.ab2@28808> geta3:                     Dc.b $26,$6D :                            Dc.b $00,$00   ;MOVEA.L $0000(A5),A3
0004B9AC <AmiBlitz3.ab2@28812> numtoa0:                   Dc.b $20,$7C,$00,$00,$00,$00                             ;MOVEA.L #$00000000,A0
0004B9B2 <AmiBlitz3.ab2@28815> numtoa2:                   Dc.b $24,$7C,$00,$00,$00,$00                             ;MOVEA.L #$00000000,A2
0004B9B6 <AmiBlitz3.ab2@28819> endarray:                  Dc.b $38,$3C :                            Dc.b $00,$00   ;MOVE.W  #$0000,D4
0004B9BA <AmiBlitz3.ab2@28823>                            Dc.b $34,$3C,$00,$00                                     ;MOVE.W  #$0000,D2
0004B9BE <AmiBlitz3.ab2@28824>                            Dc.b $36,$3C,$00,$00                                     ;MOVE.W  #$0000,D3
0004B9C4 <AmiBlitz3.ab2@28829>                            Dc.b $20,$3C,$00,$00,$00,$04                             ;MOVE.L  #$00000004,D0
0004B9C8 <AmiBlitz3.ab2@28834>                            Dc.b $2B,$40,$00,$00                                     ;MOVE.L  D0,$0000(A5)
0004B9CA <AmiBlitz3.ab2@28839>                            Dc.b $C0,$C1                                             ;MULU.W  D1,D0
0004B9CE <AmiBlitz3.ab2@28843>                            Dc.b $2B,$40,$00,$00                                     ;MOVE.L  D0,$0000(A5)
0004B9D0 <AmiBlitz3.ab2@28847> movea0:                    Dc.b $24,$52                                             ;MOVEA.L (A2),A2
0004B9D2 <AmiBlitz3.ab2@28850> adda0a0:                   Dc.b $D5,$CA                                             ;ADDA.L  A2,A2
0004B9D4 <AmiBlitz3.ab2@28851>                            Dc.b $D5,$CA                                             ;ADDA.L  A2,A2
0004B9D8 <AmiBlitz3.ab2@28855>                            Dc.b $2C,$78,$00,$04                                     ;MOVEA.L $0004,A6
0004B9DC <AmiBlitz3.ab2@28859> movea5a0:                  Dc.b $24,$6D :                            Dc.b $00,$00   ;MOVEA.L $0000(A5),A2
0004B9E0 <AmiBlitz3.ab2@28862> movea0a0:                  Dc.b $24,$6A :                            Dc.b $00,$00   ;MOVEA.L $0000(A2),A2
0004B9E2 <AmiBlitz3.ab2@28865> addqa0:                    Dc.b $52,$4A                                             ;ADDQ.W  #1,A2
0004B9E6 <AmiBlitz3.ab2@28868> leaa0a0:                   Dc.b $45,$EA :                            Dc.b $00,$00   ;LEA $0000(A2),A2
0004B9E8 <AmiBlitz3.ab2@28871> addrega2:                  Dc.b $D4,$C0                                             ;ADDA.W  D0,A2
0004B9F1 <AmiBlitz3.ab2@28875>                            Dc.b "ram:test",0
0004B9F2 <AmiBlitz3.ab2@28876> Even
0004B9F6 <AmiBlitz3.ab2@28880>                            Dc.l  0                          ;was  Ds.w 3 org source
0004B9F8 <AmiBlitz3.ab2@28882>                            Dc.w  0
0004B9FC <AmiBlitz3.ab2@28885> _mathffpbase:              Ds.l 1                           ;maths org source
0004B9FE <AmiBlitz3.ab2@28886> regnum:                    Ds.w 1                           ;regat org source       ;register being used!
0004BA00 <AmiBlitz3.ab2@28887> typelen:                   Ds.w 1
0004BA04 <AmiBlitz3.ab2@28888> prevtype:                  Ds.l 1
0004BA08 <AmiBlitz3.ab2@28889> lastsourcepos:             Ds.l 1                           ;prevloc org source
0004BA0A <AmiBlitz3.ab2@28890> lastchar:                  Ds.w 1
0004BA0E <AmiBlitz3.ab2@28891> thistype:                  Ds.l 1
0004BA12 <AmiBlitz3.ab2@28892> errstack:                  Ds.l 1
0004BA16 <AmiBlitz3.ab2@28893> errcont:                   Ds.l 1
0004BA18 <AmiBlitz3.ab2@28894> linemode:                  Ds.w 1                          ;0 if norm, 1 if newtype
0004BA1A <AmiBlitz3.ab2@28895> linesleft:                 Ds.w 1
0004BA1E <AmiBlitz3.ab2@28896> sourceline:                Ds.l 1                          ;thisitem org source
0004BA22 <AmiBlitz3.ab2@28897> varbase:                   Ds.l 1                          ;firstvar org source
0004BA26 <AmiBlitz3.ab2@28898> alllocals:                 Ds.l 1
0004BA2A <AmiBlitz3.ab2@28899> firstlocal:                Ds.l 1
0004BA2E <AmiBlitz3.ab2@28900> firstglob:                 Ds.l 1
0004BA30 <AmiBlitz3.ab2@28901> globalvarpointer:          Ds.w 1                          ;varoff org source
0004BA32 <AmiBlitz3.ab2@28902> locvaroff:                 Ds.w 1
0004BA36 <AmiBlitz3.ab2@28903> firstitem_:                 Ds.l 1
0004BA38 <AmiBlitz3.ab2@28904> numlines_org:              Ds.w 1                          ;numlines org source
0004BA3A <AmiBlitz3.ab2@28905> returncode_org:            Ds.w 1                          ;returncode org source
0004BA3E <AmiBlitz3.ab2@28906> firstiff:                  Ds.l 1                          ;firstif org source
0004BA42 <AmiBlitz3.ab2@28907> ptr_seg_ped:               Ds.l 1                          ;segadd org source
0004BC42 <AmiBlitz3.ab2@28908> str_pedfile:               Ds.b #MAX_STRINGSIZE            ;segname org source
0004BC52 <AmiBlitz3.ab2@28909> str_mathffpname:           Dc.b "mathffp.library",0 : Even ;mathsname org source
0004BE52 <AmiBlitz3.ab2@28910> str_libfilename:           Ds.b #MAX_STRINGSIZE
0004C052 <AmiBlitz3.ab2@28911> str_path_userlibs:         Ds.b #MAX_STRINGSIZE
0004C252 <AmiBlitz3.ab2@28912> str_defaultdbug:           Ds.b #MAX_STRINGSIZE            ;debugname org source
0004C256 <AmiBlitz3.ab2@28914> ptr_seg_debugger:          Ds.l 1                          ;dseg org source
0004C456 <AmiBlitz3.ab2@28915> str_blitz3assign:          Ds.b #MAX_STRINGSIZE            ;dpath org source
0004C656 <AmiBlitz3.ab2@28917> str_path_acidlibs:         Ds.b #MAX_STRINGSIZE            ;acidname org source
0004C65A <AmiBlitz3.ab2@28918> size_acidlibs:             Ds.l 1                          ;acidlibs org source
0004C85A <AmiBlitz3.ab2@28919> str_path_deflibs:          Ds.b #MAX_STRINGSIZE            ;defname org source
0004C85E <AmiBlitz3.ab2@28920> size_deflibs:              Ds.l 1                          ;deflibs org source
0004CA5E <AmiBlitz3.ab2@28921> str_tempfilename:          Ds.b #MAX_STRINGSIZE
0004CC5E <AmiBlitz3.ab2@28923> str_temp_debugmodulename:  Ds.b #MAX_STRINGSIZE            ;dname org source
0004CC62 <AmiBlitz3.ab2@28924> ptr_temp_debugmodule:      Ds.l 1                          ;dname2 org source
0004CE62 <AmiBlitz3.ab2@28926> str_path_includes:         Ds.b #MAX_STRINGSIZE            ;acidname org source
0004CE66 <AmiBlitz3.ab2@28932>   Dc.b $E3,$10,$00,$01                                     ;icondata  
0004CE6A <AmiBlitz3.ab2@28933>   Dc.b $00,$00,$00,$00
0004CE6E <AmiBlitz3.ab2@28934>   Dc.b $00,$19,$00,$11
0004CE72 <AmiBlitz3.ab2@28935>   Dc.b $00,$2E,$00,$18
0004CE76 <AmiBlitz3.ab2@28936>   Dc.b $00,$04,$00,$03
0004CE7A <AmiBlitz3.ab2@28937>   Dc.b $00,$01,$00,$22
0004CE7E <AmiBlitz3.ab2@28938>   Dc.b $73,$68,$00,$00
0004CE82 <AmiBlitz3.ab2@28939>   Dc.b $00,$00,$00,$00
0004CE86 <AmiBlitz3.ab2@28940>   Dc.b $00,$00,$00,$00
0004CE8A <AmiBlitz3.ab2@28941>   Dc.b $00,$00,$00,$00
0004CE8E <AmiBlitz3.ab2@28942>   Dc.b $00,$00,$00,$00
0004CE92 <AmiBlitz3.ab2@28943>   Dc.b $00,$00,$00,$00
0004CE96 <AmiBlitz3.ab2@28944>   Dc.b $03,$22,$00,$21
0004CE9A <AmiBlitz3.ab2@28945>   Dc.b $3C,$28,$00,$22
0004CE9E <AmiBlitz3.ab2@28946>   Dc.b $6E,$C0,$00,$00
0004CEA2 <AmiBlitz3.ab2@28947>   Dc.b $00,$12,$00,$00
0004CEA6 <AmiBlitz3.ab2@28948>   Dc.b $00,$0E,$00,$00
0004CEAA <AmiBlitz3.ab2@28949>   Dc.b $00,$00,$00,$00
0004CEAE <AmiBlitz3.ab2@28950>   Dc.b $00,$00,$00,$00
0004CEB2 <AmiBlitz3.ab2@28951>   Dc.b $00,$00,$00,$00
0004CEB6 <AmiBlitz3.ab2@28952>   Dc.b $00,$00,$00,$2E
0004CEBA <AmiBlitz3.ab2@28953>   Dc.b $00,$17,$00,$02
0004CEBE <AmiBlitz3.ab2@28954>   Dc.b $00,$01,$8E,$80
0004CEC2 <AmiBlitz3.ab2@28955>   Dc.b $03,$00,$00,$00
0004CEC6 <AmiBlitz3.ab2@28956>   Dc.b $00,$00,$FF,$FF
0004CECA <AmiBlitz3.ab2@28957>   Dc.b $FF,$FF,$FF,$FC
0004CECE <AmiBlitz3.ab2@28958>   Dc.b $80,$00,$00,$00
0004CED2 <AmiBlitz3.ab2@28959>   Dc.b $00,$00,$80,$00
0004CED6 <AmiBlitz3.ab2@28960>   Dc.b $00,$3F,$BB,$40
0004CEDA <AmiBlitz3.ab2@28961>   Dc.b $80,$1F,$C0,$00
0004CEDE <AmiBlitz3.ab2@28962>   Dc.b $00,$00,$80,$3F
0004CEE2 <AmiBlitz3.ab2@28963>   Dc.b $C0,$0F,$BB,$40
0004CEE6 <AmiBlitz3.ab2@28964>   Dc.b $80,$1F,$C0,$00
0004CEEA <AmiBlitz3.ab2@28965>   Dc.b $00,$00,$8E,$00
0004CEEE <AmiBlitz3.ab2@28966>   Dc.b $F8,$00,$00,$00
0004CEF2 <AmiBlitz3.ab2@28967>   Dc.b $8F,$01,$FF,$00
0004CEF6 <AmiBlitz3.ab2@28968>   Dc.b $3B,$40,$81,$E3
0004CEFA <AmiBlitz3.ab2@28969>   Dc.b $F7,$C0,$00,$00
0004CEFE <AmiBlitz3.ab2@28970>   Dc.b $80,$7F,$F8,$70
0004CF02 <AmiBlitz3.ab2@28971>   Dc.b $3B,$40,$80,$0F
0004CF06 <AmiBlitz3.ab2@28972>   Dc.b $7C,$E0,$00,$00
0004CF0A <AmiBlitz3.ab2@28973>   Dc.b $80,$00,$FD,$80
0004CF0E <AmiBlitz3.ab2@28974>   Dc.b $00,$00,$80,$01
0004CF12 <AmiBlitz3.ab2@28975>   Dc.b $F6,$00,$FB,$40
0004CF16 <AmiBlitz3.ab2@28976>   Dc.b $80,$03,$EF,$00
0004CF1A <AmiBlitz3.ab2@28977>   Dc.b $00,$00,$80,$07
0004CF1E <AmiBlitz3.ab2@28978>   Dc.b $87,$80,$3B,$40
0004CF22 <AmiBlitz3.ab2@28979>   Dc.b $80,$0F,$01,$C0
0004CF26 <AmiBlitz3.ab2@28980>   Dc.b $00,$00,$80,$03
0004CF2A <AmiBlitz3.ab2@28981>   Dc.b $F0,$70,$1D,$40
0004CF2E <AmiBlitz3.ab2@28982>   Dc.b $80,$00,$18,$1C
0004CF32 <AmiBlitz3.ab2@28983>   Dc.b $00,$00,$80,$00
0004CF36 <AmiBlitz3.ab2@28984>   Dc.b $10,$06,$03,$40
0004CF3A <AmiBlitz3.ab2@28985>   Dc.b $80,$00,$20,$1F
0004CF3E <AmiBlitz3.ab2@28986>   Dc.b $00,$00,$80,$00
0004CF42 <AmiBlitz3.ab2@28987>   Dc.b $00,$00,$01,$40
0004CF46 <AmiBlitz3.ab2@28988>   Dc.b $80,$00,$00,$00
0004CF4A <AmiBlitz3.ab2@28989>   Dc.b $00,$00,$80,$00
0004CF4E <AmiBlitz3.ab2@28990>   Dc.b $00,$00,$00,$00
0004CF52 <AmiBlitz3.ab2@28991>   Dc.b $00,$00,$00,$00
0004CF56 <AmiBlitz3.ab2@28992>   Dc.b $00,$00,$00,$00
0004CF5A <AmiBlitz3.ab2@28993>   Dc.b $00,$00,$00,$04
0004CF5E <AmiBlitz3.ab2@28994>   Dc.b $00,$3F,$FC,$01
0004CF62 <AmiBlitz3.ab2@28995>   Dc.b $BB,$44,$00,$60
0004CF66 <AmiBlitz3.ab2@28996>   Dc.b $FE,$00,$00,$04
0004CF6A <AmiBlitz3.ab2@28997>   Dc.b $00,$CF,$FF,$01
0004CF6E <AmiBlitz3.ab2@28998>   Dc.b $BB,$44,$1F,$EF
0004CF72 <AmiBlitz3.ab2@28999>   Dc.b $FF,$00,$00,$04
0004CF76 <AmiBlitz3.ab2@29000>   Dc.b $33,$FF,$FF,$E0
0004CF7A <AmiBlitz3.ab2@29001>   Dc.b $00,$04,$37,$FE
0004CF7E <AmiBlitz3.ab2@29002>   Dc.b $7F,$FC,$1B,$44
0004CF82 <AmiBlitz3.ab2@29003>   Dc.b $0F,$9C,$FF,$FF
0004CF86 <AmiBlitz3.ab2@29004>   Dc.b $00,$04,$03,$E3
0004CF8A <AmiBlitz3.ab2@29005>   Dc.b $FF,$FF,$DB,$44
0004CF8E <AmiBlitz3.ab2@29006>   Dc.b $00,$7F,$BF,$FF
0004CF92 <AmiBlitz3.ab2@29007>   Dc.b $80,$04,$00,$0F
0004CF96 <AmiBlitz3.ab2@29008>   Dc.b $3F,$FE,$00,$04
0004CF9A <AmiBlitz3.ab2@29009>   Dc.b $00,$06,$7F,$F8
0004CF9E <AmiBlitz3.ab2@29010>   Dc.b $1B,$44,$00,$0C
0004CFA2 <AmiBlitz3.ab2@29011>   Dc.b $F7,$FC,$00,$04
0004CFA6 <AmiBlitz3.ab2@29012>   Dc.b $00,$19,$F9,$FE
0004CFAA <AmiBlitz3.ab2@29013>   Dc.b $1B,$44,$00,$33
0004CFAE <AmiBlitz3.ab2@29014>   Dc.b $FE,$7F,$00,$04
0004CFB2 <AmiBlitz3.ab2@29015>   Dc.b $00,$0F,$FF,$BF
0004CFB6 <AmiBlitz3.ab2@29016>   Dc.b $CD,$44,$00,$03
0004CFBA <AmiBlitz3.ab2@29017>   Dc.b $EF,$EF,$F0,$04
0004CFBE <AmiBlitz3.ab2@29018>   Dc.b $00,$00,$7F,$DF
0004CFC2 <AmiBlitz3.ab2@29019>   Dc.b $FB,$44,$00,$00
0004CFC6 <AmiBlitz3.ab2@29020>   Dc.b $FF,$A7,$FC,$04
0004CFCA <AmiBlitz3.ab2@29021>   Dc.b $00,$00,$7E,$3F
0004CFCE <AmiBlitz3.ab2@29022>   Dc.b $FD,$44,$00,$00
0004CFD2 <AmiBlitz3.ab2@29023>   Dc.b $00,$00,$00,$04
0004CFD6 <AmiBlitz3.ab2@29024>   Dc.b $7F,$FF,$FF,$FF
0004CFDA <AmiBlitz3.ab2@29025>   Dc.b $FF,$FC,$00,$00
0004CFDE <AmiBlitz3.ab2@29026>   Dc.b $00,$01,$00,$00
0004CFE1 <AmiBlitz3.ab2@29027>   Dc.b $00,$00,$04
0004CFE7 <AmiBlitz3.ab2@29030> str_infoextention2:  Dc.b ".info",0                           ;infoname org source
0004CFE8 <AmiBlitz3.ab2@29031> Even
0004CFEC <AmiBlitz3.ab2@29033> sysdebug:            Dc.l $3F0
0004CFF0 <AmiBlitz3.ab2@29037> exelock              Ds.l 1
00050230 <AmiBlitz3.ab2@29039> wzgui                IncBin "compiler.wizard"
00050234 <AmiBlitz3.ab2@29041> includesourceline    Dc.l 0
00050238 <AmiBlitz3.ab2@29042> linenum              Ds.l 1
0005023C <AmiBlitz3.ab2@29043> globallinecount      Ds.l 1
0005025A <AmiBlitz3.ab2@29044> myversion            Dc.b "\\__VER_MAJOR.\\__VER_MINOR (\\__DATE_GER__) Build \\__VER_PATCH.\\__VER_BUILD",0 : Even
0005025E <AmiBlitz3.ab2@29045> calc_option          Dc.l 1
00050262 <AmiBlitz3.ab2@29046> versioninformation   Dc.l $00
00050266 <AmiBlitz3.ab2@29047> number_of_builds     Dc.l $00
00050268 <AmiBlitz3.ab2@29050> BSS
0005026A <AmiBlitz3.ab2@29051> debugnest            Ds.w 1
0005026E <AmiBlitz3.ab2@29052> instringf            Ds.l 1
00050272 <AmiBlitz3.ab2@29053> funcscanon           Ds.l 1
00050286 <AmiBlitz3.ab2@29054> storedebugmode       Ds.b 20
0005028A <AmiBlitz3.ab2@29055> firsttimepref        Ds.l 1
0005028C <AmiBlitz3.ab2@29056> funcparloop          Ds.w 1
0005028E <AmiBlitz3.ab2@29057> nostringopt          Ds.w 1
0005030E <AmiBlitz3.ab2@29058> path2:               Ds.l 32
00050312 <AmiBlitz3.ab2@29059> typebase             Dc.l 0
00050314 <AmiBlitz3.ab2@29060> doublepeek           Dc.w 0
00050318 <AmiBlitz3.ab2@29061> lastoffset           Dc.l 0
0005031A <AmiBlitz3.ab2@29062> firsttime            Dc.w 0
0005031E <AmiBlitz3.ab2@29063> lastdestpointer      Dc.l 0
00050322 <AmiBlitz3.ab2@29064> prevwritedat         Dc.l 0
00050326 <AmiBlitz3.ab2@29065> lastsourceline       Dc.l 0
0005032A <AmiBlitz3.ab2@29066> lastwritedat         Dc.l 0
0005032C <AmiBlitz3.ab2@29067> makeexec             Dc.w 0
0005032E <AmiBlitz3.ab2@29068> makeexec_remember    Dc.w 0
00050332 <AmiBlitz3.ab2@29069> sharebase            Ds.l 1
00050336 <AmiBlitz3.ab2@29070> tempa7               Ds.l 1
00050338 <AmiBlitz3.ab2@29071> incnif               Ds.w 1
0005033C <AmiBlitz3.ab2@29072> tempstore            Ds.l 1
00050340 <AmiBlitz3.ab2@29073> result               Ds.l 1
00050342 <AmiBlitz3.ab2@29074> automode             Ds.w 1
00050344 <AmiBlitz3.ab2@29075> stackcorrect         Ds.w 1
00050346 <AmiBlitz3.ab2@29076> formode              Ds.w 1
0005034A <AmiBlitz3.ab2@29077> limitregs            Ds.l 1
0005034C <AmiBlitz3.ab2@29078> onestep              Ds.w 1
00050350 <AmiBlitz3.ab2@29079> reqmode              Ds.l 1
000503F0 <AmiBlitz3.ab2@29080> inctab               Ds.l 40
000503F2 <AmiBlitz3.ab2@29081> funcoptimize         Ds.w 1
000503F6 <AmiBlitz3.ab2@29082> includeline          Ds.l 1
000503FA <AmiBlitz3.ab2@29083> morememadd           Ds.l 1
000503FC <AmiBlitz3.ab2@29084> objectcount          Ds.w 1
00050400 <AmiBlitz3.ab2@29085> savefuncspace        Ds.l 1
00050404 <AmiBlitz3.ab2@29086> lasttrap1            Ds.l 1
00050408 <AmiBlitz3.ab2@29087> currentfunccall      Ds.l 1
00050409 <AmiBlitz3.ab2@29088> skipfunc             Ds.b 1
0005040A <AmiBlitz3.ab2@29089> resdisable           Ds.b 1
0005040B <AmiBlitz3.ab2@29090> skiptoggle           Ds.b 1
0005040C <AmiBlitz3.ab2@29091> developobject        Ds.b 1
0005040E <AmiBlitz3.ab2@29092> iniffcommand         Ds.w 1
00050410 <AmiBlitz3.ab2@29093> startoffsetmore      Ds.w 1
00050412 <AmiBlitz3.ab2@29094> olddebugmode         Ds.w 1
00050416 <AmiBlitz3.ab2@29095> fpucodeglobal        Ds.l 1
0005041A <AmiBlitz3.ab2@29096> fpucodelocal         Ds.l 1
0005041E <AmiBlitz3.ab2@29097> maxregs              Ds.l 1
00050422 <AmiBlitz3.ab2@29098> fpucode              Ds.l 1
00050424 <AmiBlitz3.ab2@29099> firstmline           Ds.w 1
00050464 <AmiBlitz3.ab2@29100> regtable             Ds.l 16
00050466 <AmiBlitz3.ab2@29101> exdebug              Ds.w 1
00050468 <AmiBlitz3.ab2@29102> a2offset2            Ds.w 1
0005046C <AmiBlitz3.ab2@29103> parnumtemp           Ds.l 1
0005046D <AmiBlitz3.ab2@29104> doimmediate          Ds.b 1
0005046E <AmiBlitz3.ab2@29105> notypecheck          Ds.b 1
00050470 <AmiBlitz3.ab2@29106> vartype              Ds.w 1
00050471 <AmiBlitz3.ab2@29107> peekaddrsize         Ds.b 1
00050472 <AmiBlitz3.ab2@29108> declare2             Ds.b 1
00050474 <AmiBlitz3.ab2@29109> parameternum         Ds.w 1
00050478 <AmiBlitz3.ab2@29110> lasttoken            Ds.l 1
0005047A <AmiBlitz3.ab2@29111> newvariable          Ds.w 1
0005047B <AmiBlitz3.ab2@29112> declare              Ds.b 1
0005047C <AmiBlitz3.ab2@29113> typecheck            Ds.b 1
0005047D <AmiBlitz3.ab2@29114> nowdeclare           Ds.b 1
0005047E <AmiBlitz3.ab2@29115> dimkeep              Ds.b 1
00050482 <AmiBlitz3.ab2@29117> firstiffstore        Ds.l 1
00050486 <AmiBlitz3.ab2@29118> destpointer2         Ds.l 1
0005048A <AmiBlitz3.ab2@29119> stackaddr            Ds.l 1
0005058E <AmiBlitz3.ab2@29120> allowtab             Ds.b 260
0005068E <AmiBlitz3.ab2@29121> templine             Ds.b 256
00050690 <AmiBlitz3.ab2@29122> thenmode             Ds.w 1
00050692 <AmiBlitz3.ab2@29123> temp                 Ds.w 1
00050694 <AmiBlitz3.ab2@29124> tempregnum           Ds.w 1
00050698 <AmiBlitz3.ab2@29126> numlines2            Ds.l 1
0005069C <AmiBlitz3.ab2@29127> numlines             Ds.l 1
0005069E <AmiBlitz3.ab2@29128> exmac                Ds.w 1
000506A0 <AmiBlitz3.ab2@29129> returncode           Ds.w 1
000506A4 <AmiBlitz3.ab2@29130> fp0iff               Ds.l 1
000506A8 <AmiBlitz3.ab2@29131> fp0addr              Ds.l 1
000506AA <AmiBlitz3.ab2@29132> fp0mode              Ds.w 1
000506AC <AmiBlitz3.ab2@29133> fp0var               Ds.w 1
000506AE <AmiBlitz3.ab2@29134> fastfunc             Ds.w 1
000506B0 <AmiBlitz3.ab2@29135> retmode              Ds.w 1
000506B2 <AmiBlitz3.ab2@29136> parnum               Ds.w 1
000506B4 <AmiBlitz3.ab2@29137> regmask              Ds.w 1
000506B6 <AmiBlitz3.ab2@29138> regnumfunc           Ds.w 1
000506B8 <AmiBlitz3.ab2@29139> libmode              Ds.w 1
000506BC <AmiBlitz3.ab2@29140> oldline              Ds.l 1
000506C0 <AmiBlitz3.ab2@29141> sourceline3          Ds.l 1
00050788 <AmiBlitz3.ab2@29142> debugstore           Ds.b 200
0005078C <AmiBlitz3.ab2@29143> deststore            Ds.l 1
00050790 <AmiBlitz3.ab2@29145> loada                Ds.l 1
00050794 <AmiBlitz3.ab2@29147> currtype             Ds.l 1
00050798 <AmiBlitz3.ab2@29148> arrayoffset          Ds.l 1
0005079C <AmiBlitz3.ab2@29149> lastlabel            Ds.l 1
000507A0 <AmiBlitz3.ab2@29150> curtemplabel         Ds.l 1
000507A4 <AmiBlitz3.ab2@29151> sourceline2          Ds.l 1
000508A4 <AmiBlitz3.ab2@29152> chartab              Ds.b 256
0005091C <AmiBlitz3.ab2@29153> tempspace            Ds.b 120
000D092C <AmiBlitz3.ab2@29154> instrtab             Ds.l 65538*2
000D892C <AmiBlitz3.ab2@29156> labelhash            Ds.l 8192                             ;-bssstore clear every compile pass
000F8930 <AmiBlitz3.ab2@29157> replacedat           Ds.w 65538
00100930 <AmiBlitz3.ab2@29158> variablehash         Ds.l 8192
00100934 <AmiBlitz3.ab2@29159> newinitaddr          Ds.l 1
00100938 <AmiBlitz3.ab2@29160> realbssend           Ds.l 1
00100939 <AmiBlitz3.ab2@29161> saved0               Ds.b 1
001009B9 <AmiBlitz3.ab2@29162> lastpath             Ds.b 128
00100A39 <AmiBlitz3.ab2@29163> lastpath2            Ds.b 128
00100B01 <AmiBlitz3.ab2@29164> fpustackbase         Ds.w 100
00100B05 <AmiBlitz3.ab2@29167> trap15temp           Ds.l 1
00100B09 <AmiBlitz3.ab2@29168> trap15temp2          Ds.l 1
00100B0D <AmiBlitz3.ab2@29169> templibend           Ds.l 1
00100B11 <AmiBlitz3.ab2@29170> tempdata1start       Ds.l 1
00100B12 <AmiBlitz3.ab2@29171> pad2                 Ds.b 1
00100B16 <AmiBlitz3.ab2@29172> stacktrack           Ds.l 1
00100B1A <AmiBlitz3.ab2@29173> pad                  Ds.l 1
00100C1A <AmiBlitz3.ab2@29174> includetemp          Ds.b 256
0010161A <AmiBlitz3.ab2@29175> includetemp2         Ds.b 256*10
0010161C <AmiBlitz3.ab2@29176> funccall             Ds.w 1
00101620 <AmiBlitz3.ab2@29179> ptr_resfile          Ds.l 1
00101622 <AmiBlitz3.ab2@29180> button_bin_flags:    Ds.w 1
00101624 <AmiBlitz3.ab2@29181> button_dec_flags:    Ds.w 1
00101628 <AmiBlitz3.ab2@29182> ped_startup_addr:    Ds.l 1
00101629 <AmiBlitz3.ab2@29183> start_without_libs:  Ds.b 1
0010162A <AmiBlitz3.ab2@29184> skip_bytes:          Ds.b 1
0010162E <AmiBlitz3.ab2@29187> CLIMode:             Dc.l 0
00101632 <AmiBlitz3.ab2@29188> XTRAEndPadBytes:     Dc.l 0                             ; 4 fill/pad/termination bytes for the xtra write function  tomsmart1
